sbb
sahf
sbb
insb
or
jns
test
imul
or
in
out
enter
cmpl
jb
cmp
push
push
add
add
test
in
or
push
test
lcall
adc
and
xchg
cmc
inc
jg
out
mov
jo
inc
mov
out
popf
out
dec
mov
test
out
fsubl
int
adc
je
mov
sbb
push
push
push
sbb
loop
and
dec
jnp
insb
insb
mov
mov
orl
add
push
flds
xlat
xor
loope
sub
sub
push
push
scas
clc
adc
aam
lds
mov
ret
cmp
xlat
pop
mov
pop
test
int
adc
add
or
imul
adc
xor
in
call
jmp
dec
mov
mov
insl
dec
xchg
test
pop
push
and
xchg
jecxz
mov
jae
inc
cmpsl
out
shll
fdivrs
andb
movsl
add
outsl
repnz
add
mov
fldenv
mov
push
adc
mov
aaa
int3
out
shll
cli
loopne
call
adc
nop
aad
cmp
add
jmp
into
ja
xor
insl
shl
cwtl
aaa
pop
addr16
scas
icebp
xor
out
xchg
xchg
shlb
cmp
dec
mov
nop
jge
sbb
lods
mov
in
out
cld
push
add
inc
clc
and
shlb
mov
xlat
adc
scas
nop
aad
pop
lahf
and
in
nop
clc
mov
adc
incl
dec
lret
in
inc
aas
pop
fidivrs
pop
clc
fidivrl
pop
movsb
or
push
aad
dec
mov
add
movsl
add
push
fiaddl
and
dec
lods
jle
loope
cli
addb
stos
or
xchg
sub
shll
sbb
xchg
jae
pop
xchg
aad
xchg
insb
mov
mov
and
jne
outsb
xlat
mov
and
in
shl
lret
rcrl
cmp
xchg
xor
fadds
xchg
cwtl
mov
dec
dec
push
das
test
outsl
test
adc
xchg
aad
sbb
hlt
aaa
popf
and
lret
cmp
add
cmp
add
lret
push
aaa
xor
push
ss
decl
fildl
cmp
xchg
sub
imul
mov
jmp
or
pop
push
clc
jecxz
inc
and
loopne
stc
insl
test
mov
nop
push
cmpsl
and
sub
pop
loopne
inc
scas
cmc
jbe
hlt
cmp
sub
xchg
movsb
gs
loope
and
jecxz
movsb
lcall
aas
add
sub
inc
insb
jbe
les
ja
cmp
aam
cmp
not
push
cmc
push
pusha
sub
call
mov
not
call
push
mov
pusha
call
sahf
pop
scas
xchg
aad
stc
cmp
mov
jle
in
into
inc
inc
inc
cmp
iret
out
out
lret
insb
add
dec
movsl
sbb
aaa
leave
arpl
mov
sub
les
cld
clc
add
jp
mov
outsb
xchg
push
ja
fs
push
cli
popa
lods
mov
imul
cmc
sarb
aad
out
lret
lea
jmp
jmp
lea
outsl
shl
mov
mov
or
call
sbb
lcall
push
adc
or
ret
mov
imul
or
pop
push
pop
add
movsl
xor
ret
fidivs
ffree
jns
mov
xor
mov
cmp
adc
adc
out
xchg
fsub
mov
push
adc
in
cli
jb
dec
in
push
adc
insl
cld
inc
out
mov
lret
xlat
cmpsb
sub
mov
addr16
fnsave
and
push
and
mov
imul
cmc
mov
dec
mov
faddl
in
shl
jnp
je
adc
js
jb
jle
enter
fidivrl
movsl
pusha
mov
das
pushf
xchg
sub
es
or
mov
addr16
fdivrs
add
sub
xlat
cld
inc
and
sahf
mov
divl
pop
sbb
add
dec
in
loopne
pop
out
xchg
mov
add
mov
test
in
jp
or
push
jno
cltd
mov
imul
pusha
repnz
lods
sarl
sub
xchg
icebp
xchg
mov
int3
jb
cmp
lahf
xchg
repnz
sti
sbb
lock
jmp
mov
sub
rolb
mov
inc
roll
inc
hlt
jbe
insb
out
mov
inc
rcr
arpl
fwait
leave
in
std
cwtl
mov
pop
push
stos
in
pusha
int
js
and
lock
ds
xor
aad
repnz
lea
ja
inc
dec
push
xor
push
das
das
xchg
test
jg
gs
gs
xor
cs
insb
add
flds
add
xchg
adc
jb
dec
stos
adc
std
sarb
fcomps
mov
mov
pop
pusha
addb
hlt
int3
xchg
stc
dec
adc
leave
cs
aam
jns
jecxz
lods
adc
xchg
or
lea
mov
jmp
jmp
outsl
sbb
cmp
insl
or
fmull
sbb
call
jmp
pushf
adc
pushl
call
lea
je
rol
add
seto
sub
shl
pusha
rcl
shr
dec
cmc
mov
dec
not
add
bsr
add
lea
shrd
shrd
adc
or
mov
cmp
pusha
shr
stc
clc
push
push
cmp
pushf
push
lea
je
pusha
pushl
push
bt
cmp
call
lea
jae
call
sub
cmc
shr
bt
mov
test
cmpb
jmp
lods
lock
test
push
jecxz
jae
mov
les
add
cs
jl
xor
push
xor
sbb
sub
data16
dec
jb
add
mov
inc
dec
lods
popa
xor
or
dec
lods
jbe
fisubrl
mov
aad
xchg
add
jecxz
mov
add
push
mov
pop
or
scas
fwait
lahf
js
fldt
fcmove
inc
mov
lret
mov
pop
pop
aaa
sbb
hlt
dec
test
sahf
in
test
inc
inc
aad
popa
inc
insb
inc
nop
jg
add
xchg
in
adc
and
cmp
jecxz
movsl
bound
mov
pusha
mov
outsl
mov
push
fnstenv
inc
cld
es
js
iret
sbb
cmp
add
jnp
dec
mov
clc
clc
push
mov
nop
push
dec
cmp
pop
mov
cltd
js
out
and
push
pushf
adc
xorl
xchg
mov
fcomps
adc
or
aas
sub
push
arpl
ficoms
sub
dec
cmp
call
inc
adc
mov
xor
adc
mov
movsl
push
xchg
fucom
cmpsl
outsb
adc
aas
mov
pop
outsb
shll
push
les
lods
loopne
push
push
mov
rolb
ud1
out
aam
mov
pop
fstp
cmp
nop
lock
in
test
fdivl
mov
cmpsb
ds
mov
xor
sub
lret
lea
cld
fsubrp
xchg
nop
popa
and
pop
inc
inc
shlb
adc
testb
mov
arpl
fsubl
dec
in
movsl
add
pushf
mov
rorb
inc
jle
inc
mov
or
jmp
lds
adc
pop
and
js
loopne
in
stos
sarl
pop
cltd
pop
in
mov
xchg
add
lret
mov
lea
pusha
cmp
pusha
lea
jbe
test
sub
add
jmp
cmp
pop
fwait
popa
lods
jno
jg
pop
fists
fcomps
jg
loopne
cmp
or
shlb
xchg
idiv
loope
cltd
and
pop
loope
push
mov
int
sbb
mov
cli
out
pop
push
lods
cmpsl
jae
je
cltd
sub
sbb
push
add
ret
scas
jmp
dec
dec
outsl
neg
jle
out
hlt
jno
dec
arpl
adc
lods
xor
test
xor
add
xor
bswap
xchg
pop
push
lea
mov
movzbw
movsbw
call
jmp
pushl
lea
jae
push
mov
lea
jne
call
pushf
jmp
out
clc
jb
aad
jne
mov
loopne
mov
mov
adc
mov
test
jmp
mov
dec
cmpsl
stos
push
negb
repnz
xchg
movsl
dec
dec
cs
pop
ret
push
cmp
fadd
dec
rcl
inc
inc
xchg
push
pop
fwait
xchg
loope
inc
push
das
jg
lcall
xchg
dec
into
sete
sbb
push
cltd
cmp
xchg
inc
xchg
sbb
or
cmpsl
pop
mov
gs
dec
rorb
test
call
lock
addr16
push
inc
imul
mov
inc
push
das
pop
movsb
mov
fwait
aad
mov
mov
into
imul
test
xor
lahf
jmp
mov
add
movlps
mov
ds
inc
fwait
mov
push
lret
outsb
adc
sub
mov
jo
mov
insb
dec
xchg
or
xchg
ret
xchg
or
in
pop
add
xchg
leave
idivb
xchg
or
adcl
lock
sbb
cld
jg
cld
mov
outsl
fistpl
aam
xchg
pop
aam
es
cs
xchg
push
lret
dec
out
mov
mov
mov
cmp
rclb
add
add
cs
add
sbb
add
sub
add
sbb
add
add
add
sbbl
add
enter
sub
jmp
cmp
jmp
cmp
pushf
pusha
lea
jae
pushf
pushf
cmp
pushf
jmp
jne
movsbl
das
sub
rol
mov
aaa
mov
sets
shr
jmp
mov
cs
cmp
mov
lock
fistpll
ja
and
and
sub
es
push
sahf
sub
xor
adc
inc
dec
jp
add
test
int
ja
loop
sub
xchg
fwait
lock
std
das
sub
fs
mov
adc
or
pop
add
jb
pushf
loop
mov
jae
dec
test
xchg
lcall
leave
or
add
pop
loopne
sub
shrb
xor
xor
push
insb
mov
sub
or
iret
test
icebp
push
jp
andb
cli
xchg
jne
xchg
loope
mov
ret
sbb
pop
push
cmp
push
aam
add
xchg
addr16
xor
ss
leave
sbb
jg
aas
add
jge
cmc
jae
enter
movsl
jg
pop
and
stc
inc
scas
mov
xor
or
ss
inc
test
xor
pop
push
das
cld
mov
fisttpll
mov
pushl
mov
movl
push
pushl
ret
cmc
xor
pushf
movb
movw
dec
pushl
ror
mov
mov
clc
test
cmp
add
jmp
jmp
push
clc
mov
clc
clc
jmp
pusha
pushf
adc
push
mov
pushl
ret
mov
addr16
mov
xor
push
cwtl
pop
or
jae
xor
fisubrl
ret
movsl
test
sbb
mov
loop
cltd
cmpsb
pop
daa
cmp
aas
lahf
out
popf
jbe,pn
push
xchg
sbb
stos
jo
push
cmp
fisubrs
arpl
add
sbb
push
xchg
cmp
xor
adc
mov
decb
or
cmp
push
pop
call
jnp
or
inc
movsl
add
mov
push
das
cmpsl
das
xchg
fs
mov
jno
jno
mov
jne
pusha
out
pop
mov
add
pop
push
xchg
or
negb
pop
outsb
dec
push
mov
mov
je
stc
adc
testb
add
or
cmpxchg
outsl
or
push
xchg
add
imul
mov
or
mov
adc
insl
arpl
repnz
aaa
lret
loopne
add
sbb
jae
xor
sbb
dec
scas
filds
call
jae
mov
sbb
or
loope
pop
push
pop
or
xchg
jae
inc
and
std
fildll
xchg
xchg
jmp
add
sub
icebp
push
jge
xchg
fnstenv
insl
movsl
pop
push
jb
inc
xchg
push
or
pop
test
cltd
xchg
hlt
rcrl
mov
movsb
push
rcrl
xchg
jo
jae
lods
std
jge
in
js
inc
insl
jge
sub
mov
mov
loopne
dec
das
insl
pop
fcom
adc
sahf
aad
mov
cmc
arpl
fists
jmp
inc
arpl
jne
movsl
push
mov
cmp
je
jg
es
cmpsb
jmp
inc
adc
int
lcall
fnstsw
cwtl
rorl
mov
jae
les
fcomps
mov
mov
adc
test
adc
scas
dec
sub
jl
ret
stos
lock
fiaddl
sub
and
lods
jge
lahf
in
icebp
call
mov
jb
inc
xchg
ror
mov
lea
jo
pusha
lea
call
jns
pusha
adc
movb
pusha
pushf
lea
jae
push
push
pusha
mov
lea
jne
jg
push
stos
pushf
lea
jmp
cmc
add
jmp
pusha
mov
mov
push
push
mov
mov
pusha
pushl
ret
mov
pusha
call
fwait
push
test
addr16
arpl
bound
jecxz
dec
or
imul
stc
stos
jge
jl
xchg
adc
stos
sub
movsl
stos
mov
mov
mov
cmpsb
mov
mov
dec
out
nop
test
mov
std
fmulp
out
incl
mov
cli
xchg
adc
add
add
fsubp
sub
sti
pop
imul
add
sbb
js
xor
mov
fdivrs
xor
mov
adc
mov
pusha
repnz
jne
xchg
aaa
lods
in
dec
outsl
fmuls
stc
and
mov
imul
js
subl
jle
mov
rorb
arpl
jp
xchg
pusha
aam
pop
cmc
lcall
pop
xchg
sub
loope
pop
mov
cwtl
lcall
jo
push
outsl
scas
sarb
mov
xchg
int3
cmc
mov
clc
pop
stos
pop
xorb
cmp
cltd
push
sahf
std
cmp
push
hlt
pop
xchg
add
bound
stos
inc
int
adc
popf
mov
push
cld
pop
fcoms
jo
cmp
mov
xchg
jmp
in
or
rcl
test
repnz
xchg
lcall
and
rolb
ror
stc
sub
cmc
call
add
inc
js
je
jb
arpl
jae
stos
mov
pusha
pushf
lea
jmp
aaa
adc
pusha
aam
sbb
mov
std
and
sub
push
adc
lcall
test
hlt
dec
or
pop
mov
mov
pop
jbe
and
sub
hlt
clc
mov
int3
mov
add
and
mov
into
ljmp
lret
add
add
add
jno
out
call
push
pusha
lea
call
jmp
rorl
dec
lods
shl
sbb
je
cmp
pusha
rorl
out
daa
out
addl
mov
cmpsb
push
in
xchg
ljmp
mov
dec
dec
gs
or
iret
jp
pop
addr16
daa
or
jecxz
sub
sub
mov
inc
dec
sbb
add
adc
stc
pusha
movl
pushf
pushf
pushf
movb
lea
jmp
outsl
sahf
sbb
aam
or
mov
jns
and
out
and
pop
aas
and
lcall
jmp
sbb
cmp
addb
ret
mov
fiaddl
push
jl
mov
enter
pop
cld
xchg
push
mov
or
add
inc
xchg
xchg
xchg
mov
cmc
aaa
jge
add
out
push
sbb
pop
cwtl
jg
pop
out
push
popf
sbb
sub
hlt
xchg
push
enter
pop
adc
orl
movsb
push
sahf
fcompl
call
push
cld
ret
dec
rorl
cs
sbb
pop
loope
dec
aam
jl
mov
add
fs
jae
jmp
cmp
stc
cmp
pusha
push
lea
je
pusha
pushf
lea
jmp
decl
andl
stos
das
xchg
pop
out
lock
pop
loopne
add
push
jecxz
ficompl
ss
cld
add
test
cld
mov
cwtl
rol
sarb
les
adc
push
cmc
mov
gs
repz
pop
jo
lea
mov
mov
cmpsb
mov
jp
push
incl
pop
mov
adc
dec
gs
loope
dec
rcrl
dec
ficoml
cltd
cmp
or
xchg
insl
mov
jmp
xchg
add
lods
outsb
nop
xor
cltd
idivb
lock
add
jg
in
inc
scas
and
ljmp
lret
push
insb
cs
out
inc
popf
and
or
cmp
jbe
andl
loope
dec
sbb
add
sub
lea
pusha
or
push
push
pushl
jmp
cmpsl
xchg
adc
addr16
unpckhps
cld
test
push
adc
push
mov
adc
in
decb
fstpt
or
aaa
sti
call
push
ja
mov
mov
jb
jl
pop
add
repz
lods
shll
outsl
add
adc
dec
push
addb
mov
and
das
popf
inc
addr16
add
add
or
push
leave
mov
sahf
int3
mov
xor
repz
decb
jp
js
add
frstor
xor
bound
sahf
inc
sbb
pop
rcrl
das
gs
xchg
or
or
dec
sub
cmp
mov
push
adc
div
test
mov
sbb
cmp
push
fistpll
lahf
jno
movsb
xchg
xchg
lret
or
xorb
shlb
testl
repnz
mov
sbb
in
movsl
inc
roll
icebp
ljmp
gs
mov
fadd
aad
lock
js
add
jbe
xor
and
push
push
enter
ljmp
adc
into
movsl
sbb
in
loopne
fstps
push
sub
insb
add
lods
jns
xchg
mov
push
scas
aam
lods
ljmp
mov
popf
movsl
xchg
pushf
mov
fimuls
into
mov
pop
sub
push
jle
dec
mov
cmp
dec
inc
aad
and
popa
inc
rcrb
mov
test
cmp
leave
test
pop
dec
shr
movsl
mov
xor
dec
pop
nop
lock
roll
push
jbe
fstpt
xchg
lret
in
pop
xor
mov
dec
rolb
neg
push
addl
sahf
sub
outsb
fistpll
sub
push
out
or
xchg
adc
push
inc
or
je
cwtl
aas
jnp
cmp
mov
jg
jmp
ficoms
sbb
lea
call
call
pushf
pushf
call
jmp
jmp
lahf
insl
in
data16
mov
lock
jne
or
or
inc
shrl
pop
mov
fdivrs
popa
mov
movsb
mov
nop
xchg
add
rclb
shl
pop
xor
rorb
pop
int
arpl
scas
sbb
sbb
das
dec
xor
pop
dec
iret
data16
add
add
nop
aam
cmp
mov
subb
enter
mov
cmpsb
push
lds
nop
rclb
push
jp
push
aam
pop
mov
lods
jg
cmp
or
std
jb
push
add
xor
inc
adc
cwtl
movd
pop
inc
fwait
jbe
mov
ret
mov
jle
mov
jo
push
mov
sbb
mov
push
xlat
jg
daa
imul
orl
mov
add
in
sub
cld
in
data16
call
push
cmc
dec
pop
lock
repnz
hlt
movl
loope
ret
mov
testl
and
sub
and
mov
adc
mov
mov
clc
ror
push
add
call
jmp
mov
movw
lea
call
push
jmp
pusha
cmp
pushf
pusha
call
push
add
jmp
pushf
pushl
popl
movw
pushf
push
movb
pushl
ret
lea
je
movsbw
mov
lahf
jge
not
push
movsbl
movsbw
lea
push
mov
push
movl
pusha
pushl
popl
pushf
mov
pushl
mov
pushl
ret
and
push
push
cmp
add
pushl
movb
lea
jmp
pusha
pusha
pushf
mov
call
inc
rcl
xchg
xadd
bsf
mov
bt
pusha
rol
sbb
mov
stc
bt
bt
xchg
btc
mov
stc
sub
jmp
pushl
pushf
mov
movl
mov
pusha
lea
jmp
out
cld
jle
aam
dec
dec
mov
fisubl
or
aad
sti
lea
mov
add
push
sbb
lahf
ret
hlt
xchg
cwtl
mov
dec
loopne
repnz
iret
and
jmp
and
out
jno
push
pminub
xchg
shrb
inc
mov
xchg
outsb
test
mov
test
movsl
add
ret
xchg
sti
gs
insl
icebp
je
mov
xchg
bound
lock
inc
and
sarb
jg
stc
jle
sbb
or
je
sbb
sarl
cs
dec
pop
arpl
jno
inc
and
pop
mov
or
out
pop
mov
xchg
and
subb
inc
and
rcrl
scas
jo
or
xor
das
loop
cli
call
bound
jge
cmp
aad
or
loop
int3
jp
mov
add
sbb
test
adc
daa
fbld
xor
mov
mov
push
mov
pushl
ret
inc
mov
adc
push
pushf
movw
mov
pushl
ret
add
dec
or
inc
cmpsb
adc
adc
into
jae
insl
xlat
lahf
xchg
shl
push
cmp
sti
andb
push
pop
andl
seto
das
ljmp
cld
pusha
sub
les
and
lret
mov
jnp
jnp
cltd
pop
sbb
inc
gs
xchg
std
sub
mov
cmp
xor
je
out
mov
in
push
jmp
dec
mov
loopne
lret
mov
hlt
inc
stos
adc
scas
xor
pop
sub
and
scas
mov
add
pop
sbb
add
add
add
add
add
or
add
or
add
add
or
outsb
xor
dec
sbb
fwait
or
xchg
push
push
mov
jle
in
mov
test
xchg
sub
sbb
es
icebp
cmp
adc
aam
cmp
jae
mov
push
nop
push
xchg
mov
jns
andl
outsb
jns
jns
daa
gs
imul
mov
aas
imul
aaa
icebp
pop
mov
fcoml
jo
mov
cs
stc
aas
jmp
xchg
mov
push
sub
je
mov
mov
notl
rclb
aad
mov
hlt
fwait
scas
push
sbb
std
clc
imull
sub
nop
jne
and
jmp
lods
xlat
maskmovq
testl
mov
fs
stc
lods
jo
outsb
cmp
sub
xchg
xchg
inc
mov
fwait
xchg
mov
inc
negb
push
insl
into
outsl
xchg
daa
mov
push
aas
js
ret
fists
popf
negl
push
iret
jb
adc
divl
lahf
and
orb
xchg
lahf
inc
aam
mov
shrb
mov
pop
fwait
mov
int3
or
nop
int
push
cmp
cltd
jo
data16
pop
mov
add
ja
imul
xchg
jecxz
xor
enter
cld
loopne
icebp
fcomi
adc
jbe
into
leave
adc
mov
pop
mov
pop
test
pop
jne
sbb
out
stos
jae
pop
pop
and
and
adc
add
pop
push
inc
push
pop
push
pushf
add
sbb
cs
xchg
and
xlat
mov
xor
xchg
push
nop
aas
xor
faddl
ljmp
aam
xchg
push
xor
mov
pop
push
dec
push
dec
aam
js
xchg
icebp
mov
scas
test
mull
push
adc
jns
fistl
pop
loopne
mulb
ljmp
cmp
adc
dec
jge
loop
ucomiss
and
adc
stos
lahf
iret
in
xchg
incl
sbb
cmp
or
sub
adc
sub
cmc
movsb
jmp
xor
add
outsl
sub
mov
push
pop
js
stos
add
test
mov
pop
adc
pop
mov
mov
mov
pop
pushf
fidivs
lods
xchg
mov
into
cmpb
in
and
shl
pop
jge
mov
sub
sbb
rclb
dec
lret
mov
cmpsl
add
dec
inc
ljmp
out
inc
neg
rol
jg
enter
inc
push
call
lods
int
lahf
jecxz
in
int3
sub
hlt
repnz
cmc
and
push
int
push
in
inc
leave
std
enter
jecxz
cmp
out
out
outsb
xchg
les
inc
addl
test
mov
ret
pop
inc
cltd
add
mov
pop
push
mov
ret
push
arpl
ja
stos
or
in
sbb
std
jecxz
iret
pop
sbb
mov
jno
dec
dec
sti
jp
fadds
sub
call
ret
mov
mov
cmpsl
mov
movsl
fwait
pop
push
jp
mov
mov
shlb
mov
push
xchg
test
xchg
int
movsb
mov
or
dec
jge
mov
mov
pop
cs
add
arpl
fdivrl
push
mov
daa
xlat
test
and
cmp
jae
mov
mov
imul
cli
mov
adc
xchg
and
push
xchg
jne
sub
data16
mov
mov
arpl
jnp
fldt
adc
jnp
pop
cwtl
fnstcw
xchg
faddl
jae
jecxz
mov
dec
insl
mov
hlt
pop
xchg
nop
sbb
pop
lea
and
xchg
add
and
dec
adc
mov
mov
mulb
adc
dec
sbb
shrb
sahf
inc
arpl
inc
mov
rol
mov
fadds
enter
mov
hlt
xor
xchg
pusha
and
fwait
push
mov
mov
jl
jo
push
and
adc
cmp
or
gs
scas
mov
out
jge
add
aam
sbb
lahf
mov
adc
ds
adc
out
int3
into
popf
xor
xor
cmc
fldcw
mov
mov
call
xchg
jne
mov
ficoms
pop
lods
test
rcl
xchg
sbb
push
ret
nop
adc
cmp
mov
outsl
or
sub
pop
leave
adc
mov
or
shll
out
repnz
mov
cmp
cmpsb
arpl
cmp
mov
jo
fucomip
adc
xchg
pop
shll
mov
test
add
ffree
lret
std
jns
fistps
xor
imul
jno
mov
loopne
lahf
add
daa
rclb
ja
push
jmp
outsl
movsl
cmpsl
mov
xchg
add
imull
fwait
and
dec
sbb
test
aas
sbb
mov
incb
sbb
dec
push
dec
dec
sub
lods
mov
push
cmp
cmp
int
sbb
mov
notb
pop
sti
mov
sub
and
sbb
pop
or
cmp
jne
test
jno
jg
push
pop
inc
ss
push
loopne
test
shll
cmp
ljmp
aad
fadd
add
pop
lods
dec
fs
push
inc
mov
shlb
das
inc
mov
and
cltd
shl
movsl
lods
xor
out
mov
cmp
aam
nop
pop
mov
ret
icebp
push
inc
sbb
pop
xor
sbb
loopne
cld
arpl
pop
into
pop
cwtl
cli
xchg
aad
sub
ja
inc
pop
cmp
daa
push
ss
inc
fstpl
add
arpl
jnp
xor
ret
stos
pop
or
and
mov
xchg
or
cmc
sub
cmp
lds
daa
dec
cmp
movsl
imul
xor
xchg
ficomps
cmc
and
aam
adc
push
stos
aam
test
adc
add
out
loopne
xchg
daa
add
inc
out
jb
in
arpl
jne
imul
stos
data16
cmp
mov
jno
xor
test
jnp
sbb
fwait
mov
popf
adc
rol
or
js
fcomi
rorb
mov
lods
mov
imul
fldt
jb
mov
cmp
jge
sti
repnz
cmp
pop
jno
cmp
lret
jb
adc
pop
xorb
das
or
sti
flds
int3
mov
jo
mov
popa
push
rol
test
ja
inc
mov
stos
sub
sbb
je
and
testb
push
lret
arpl
fnsave
and
ja
mov
fcoml
pop
test
sbb
jge
dec
in
je
pop
je
mov
mov
fbstp
xchg
pop
loope
lock
data16
into
dec
inc
rcrl
sub
mov
mov
aas
mov
cmpl
jmp
inc
mov
mov
shll
sahf
push
cmpsl
mov
out
cld
insl
fs
outsb
jb
faddp
mov
test
or
icebp
js
test
in
xor
or
dec
addr16
icebp
ja
and
out
out
loop
mov
arpl
enter
sub
xor
das
sahf
lods
sbb
xorb
jnp
adc
cmpl
loopne
mov
xchg
into
notb
int3
addl
sti
hlt
push
stos
movsb
aam
mov
ljmp
push
fcomip
iret
xchg
mov
push
xchg
mov
xor
and
leave
lock
and
mov
sbb
outsl
outsl
cmp
dec
stos
outsb
stc
pop
xchg
jne
mov
rclb
testl
xor
orl
add
xchg
sbb
cmp
repnz
mov
sbb
jne
mov
dec
sbb
jae
insb
adcl
push
mov
pop
gs
or
pop
mov
lcall
jp
xchg
mov
fadds
xchg
pop
test
fsubrl
xchg
or
xor
mov
repnz
jecxz
insb
pop
sub
ds
in
mov
jecxz
lods
pushf
inc
scas
xchg
in
pushw
mov
push
jns
mov
sti
push
push
rorl
lcall
loop
jp
push
xchg
sbb
pop
xor
rcrb
cmpsl
or
leave
xchg
fs
cmp
fstl
mov
shr
and
inc
jae
lret
xor
sbb
cmpsl
out
leavew
push
jns
pop
pop
xchg
cmp
dec
das
jo
push
adc
pop
test
inc
div
and
inc
push
lret
mov
aas
dec
sarb
out
subb
or
incb
xchg
lea
add
mov
mov
and
popf
dec
dec
jbe
out
daa
sbb
xchg
clc
les
stc
jg
lret
mov
sbb
xchg
pop
out
xchg
daa
fnstsw
fstl
in
mov
add
dec
xor
cmp
adc
adc
lret
adc
scas
out
jb
push
mov
inc
or
dec
cli
js
pop
inc
mov
sbb
clc
aas
jl
and
jns
jmp
push
jg
je
popa
add
inc
push
mov
pop
adc
incl
adc
sbb
xlat
push
lret
mov
xor
lahf
jp
push
push
enter
push
xchg
fimull
mov
push
push
xor
dec
sub
fists
mov
dec
arpl
cld
lods
jmp
xchg
fstps
fcomps
lahf
jno
xchg
mov
pop
je
dec
popa
pop
xor
sbb
daa
bnd
pop
xchg
outsl
call
jo
stos
out
ss
dec
loope
xchg
push
ret
mov
push
push
cmc
push
movsl
insl
jmp
push
fucomp
jb
sub
cltd
mov
stc
js
push
lea
out
jb
fdiv
push
push
xchg
mov
pop
mov
pop
add
mov
sahf
lcall
jbe
add
insb
bound
and
jle
addr16
sub
rcrb
mov
idiv
sbb
aaa
ficomps
sub
rcll
movsl
or
ljmp
mov
lret
test
mov
and
inc
add
jno,pn
jg
pop
dec
arpl
fstps
or
out
mov
rol
mov
cmp
add
add
adc
jbe
sbb
jge
test
mov
adc
mov
pushf
iret
lods
or
dec
fmull
in
int
enter
jge
imull
out
int3
scas
stos
or
adc
jle
dec
jo
fcmovbe
inc
adc
pop
in
loopne
jo
fs
call
call
add
dec
outsl
arpl
inc
jb
gs
xchg
jmp
add
mov
not
movzbw
push
lahf
call
jmp
jo
cmp
mov
mov
std
shr
lret
mov
ret
lahf
insl
xchg
sahf
test
shll
pop
and
jle
leave
testl
push
aas
pop
cmp
cmpsb
fimull
test
lahf
mov
ficoms
stc
dec
mov
add
inc
int3
xchg
ret
rcll
js
push
mov
jnp
in
scas
xor
outsb
imul
inc
adc
je
stc
cmc
or
jmp
cmp
lahf
daa
push
adc
btr
cwtl
bt
mov
push
sub
not
inc
push
movzbw
aam
push
sar
btc
movzbw
xor
push
inc
bsf
pusha
mov
shr
das
mov
call
lea
call
call
test
stc
sub
movw
push
rep
movsbw
lea
movsbw
mov
movb
pushf
pushf
mov
lea
jmp
setne
jae
mov
inc
jmp
clc
cmp
push
pushf
call
mov
movb
stos
push
mov
lea
jmp
cmp
push
shr
mov
shl
bts
sub
clc
push
sbb
push
pushf
pop
bt
bsf
push
shrd
push
push
mov
sar
clc
shld
lea
mov
pushf
clc
neg
bswap
mov
and
bt
shl
inc
mov
bt
pushf
pusha
cmc
or
call
lea
jne
rcr
pusha
sbb
dec
mov
call
pushf
lea
ja
not
sets
dec
pusha
inc
jmp
inc
push
pushf
lea
jmp
mov
pusha
movb
pushf
pushf
lea
jmp
mov
addr16
pop
pop
pop
roll
jbe,pn
lahf
arpl
int
cwtl
imul
mov
and
out
rcrl
cli
pop
mov
adc
shlb
ja
add
jno
roll
sub
xor
jne
fwait
loop
das
xchg
mov
pop
mov
mov
faddl
jnp
jge
mov
jnp
fnstenv
xchg
out
inc
add
xor
jp
outsl
cmpsl
stos
xor
hlt
jns
addl
stos
cmc
imul
outsb
mov
jbe
aam
push
jo
cmp
add
adc
paddb
push
sub
jg
scas
push
lea
jbe
sar
test
mov
pop
mov
mov
pop
ret
add
cld
loop
cltd
dec
push
xchg
push
icebp
adc
sub
push
jno
jno
inc
aam
inc
push
mov
pop
cwtl
not
bswap
mov
not
setne
not
call
cmp
jmp
mov
pushf
movb
pusha
pusha
lea
jmp
lea
je
pushf
lea
lea
xchg
movzwl
push
lea
pop
push
lea
mov
pusha
call
lea
jb
pushf
test
cmp
push
lea
jae
movzbw
sar
neg
mov
stc
bsf
mov
lea
mov
cmp
xor
jmp
lea
je
pusha
movb
push
lea
jmp
lea
ja
jmp
cmp
bt
pushf
test
pushf
lea
je
clc
add
call
dec
inc
add
addr16
test
xchg
push
lods
sbb
shll
fldenv
jmp
sub
jl
inc
in
jae
sub
pop
inc
add
enter
cmpsl
comiss
pusha
pushf
movl
mov
movl
pushf
lea
jmp
lea
jne
ror
mov
stc
push
mov
or
pushf
pusha
jmp
movl
pushf
lea
jmp
pusha
jmp
jmp
bt
pushl
or
mov
pusha
jmp
jmp
in
dec
jl
addr16
dec
aad
lea
adc
lods
pusha
loopne
arpl
push
pop
sbb
push
mov
mov
arpl
adc
outsl
das
lea
aad
mov
andb
insb
out
arpl
adc
ds
xor
ret
adc
mov
inc
test
lcall
mov
xchg
xchg
xor
jl
or
xchg
mov
mov
jmp
adc
add
mov
mov
mov
pusha
mov
jmp
movb
pusha
call
pop
xor
jg
shll
jp
mov
incb
in
dec
sti
xchg
and
sbb
cmpsb
fs
scas
out
xchg
add
rclb
add
xor
inc
leave
mov
push
test
push
cmp
jecxz
dec
stos
pusha
aam
lock
dec
push
call
call
pushf
movl
call
inc
setae
dec
push
jmp
test
addr16
pop
aas
fcomps
adc
jg
adc
jg
ds
movsb
push
repnz
roll
inc
in
icebp
aam
cmp
lahf
stos
in
pop
mov
dec
stos
add
cmp
mov
sbb
lahf
loope
enter
push
fcomp
push
push
bound
aaa
outsb
or
and
xchg
stos
or
int3
daa
xor
sub
aad
mov
jl
push
pop
lods
jbe
mov
andb
cwtl
std
fisubs
out
push
pop
outsb
icebp
sarb
call
jge
adc
fcoms
out
inc
out
cltd
add
sti
jle
push
popa
movsb
push
mov
sub
fs
hlt
testb
movsb
push
aaa
fdivrl
fwait
pusha
ret
pushf
icebp
nop
push
xor
mov
adc
aas
sub
cmc
negl
mov
iret
inc
dec
fisubs
sub
jmp
push
lods
test
mov
fstps
dec
sub
call
shrb
faddl
cltd
movsl
repnz
cmp
and
sahf
and
and
push
lcall
mov
mov
xchg
mov
stos
add
lods
inc
test
int3
pop
jne
popa
jb
and
mul
subl
inc
inc
mov
insw
fs
comiss
lcall
aam
push
xchg
mov
out
test
mov
jecxz
lret
fiaddl
xchg
push
push
sbb
andb
loop
stos
loope
arpl
jae
sbb
xor
xchg
jge
pop
mov
add
lret
gs
jl
xchg
pop
ss
inc
inc
aad
sub
push
lods
lods
xchg
add
test
jge
xor
loop
sbb
jecxz
mov
xor
loop
mov
stc
mov
in
js
mov
xor
pusha
pushf
lret
mov
sbb
mov
pusha
add
or
scas
das
xor
xchg
cli
sar
mov
dec
mov
push
sub
mov
pusha
pushf
ror
test
sub
stc
jmp
shrd
shr
mov
cmp
push
pushf
and
stc
cmc
clc
call
pusha
pusha
stc
cmp
movl
pushf
lea
jne
call
jmp
mov
addr16
jge
sbb
fs
jne
xchg
incl
push
negl
push
pop
fstpt
jp
test
mov
pop
pop
test
sub
mov
mov
out
outsb
fwait
mov
rcll
adc
out
jp
cmp
popl
testb
push
call
jmp
lcall
jmp
gs
push
sbb
xchg
mov
and
push
cmp
nop
push
or
rcrb
aas
popa
or
lods
sub
mov
mov
repz
cmp
inc
dec
jo
lock
divl
aam
lea
ja
jmp
jp
addl
ljmp
testl
jae
pop
scas
push
data16
sti
filds
mov
or
addr16
cmp
pop
or
cs
pop
xchg
cmp
lods
das
movsl
scas
pop
data16
repz
sbb
jmp
lret
jecxz
shlb
push
test
inc
pusha
push
inc
aam
mov
fcmove
pusha
bound
mov
icebp
mov
sbb
pop
dec
fwait
stos
int3
icebp
push
cwtl
sbb
shlb
jns
inc
xchg
pushf
ss
pop
ja
pop
jge
call
jecxz
and
test
mov
sarl
lea
push
pop
pop
adc
ret
and
mov
aas
xchg
and
inc
movsb
lahf
sub
aaa
into
sbbl
sub
lock
push
lods
and
and
push
jne
pop
inc
cmpsb
inc
mov
lret
mov
pusha
pushl
movl
pushf
pushl
jmp
movzbw
jb
mov
mov
pop
pushf
pushf
pushl
ret
jmp
xor
inc
aam
stos
imul
orl
cmc
sbb
push
mov
lret
mov
add
imul
lds
jne
movsl
repnz
sub
int
loop
into
cltd
pop
shlb
or
jl
adc
in
mov
sarl
aam
fcoml
aas
movsl
sub
ficompl
sub
movsb
test
or
adc
mov
lods
test
adc
aad
ret
sbb
jno
lock
in
iret
stos
insb
into
mov
int
addr16
add
jbe
enter
gs
sbb
ret
jnp
pop
mov
add
push
sbb
push
mov
xor
mov
sbb
int3
fbld
shrl
pusha
fisubl
mov
adc
mov
or
in
orb
cltd
jne
dec
lock
mov
inc
jne
push
mov
hlt
mov
divl
fdiv
arpl
repz
xchg
clc
lret
neg
inc
call
inc
fdivs
in
jecxz
inc
aam
push
stos
icebp
push
sahf
inc
test
push
pop
push
mov
mov
sub
arpl
inc
xor
aaa
sbb
call
in
jb
nop
push
xchg
je
int
cld
mov
push
jno
stos
lahf
roll
xchg
cs
cs
enter
movsl
push
mov
std
mov
inc
aad
and
jecxz
add
xor
dec
cs
loopne
or
pop
pop
mov
pop
aas
pop
mov
push
idivb
mov
lds
inc
mov
das
xor
or
push
test
jbe
loop
push
insb
or
lret
push
mov
iret
push
xchg
mov
cmp
mov
inc
xor
sub
xchg
cmp
mov
insb
inc
aam
mov
fldenv
dec
adc
js
imulb
fdivrs
add
repnz
push
outsb
incl
cwtl
adc
stos
inc
call
incl
cmpsb
sub
lods
into
push
imul
add
adc
jne
outsb
pop
xor
xchg
push
mov
push
push
pop
xlat
push
roll
into
mov
mov
out
add
dec
into
inc
aam
fstps
and
outsl
push
mov
das
mov
cmp
pop
sbb
int3
pop
jge
popf
mov
in
mov
dec
jecxz
mov
jnp
xchg
jns
pop
sub
jp
fwait
push
hlt
lcall
lds
in
mov
orb
imul
xchg
cmp
seto
pushl
lea
mov
lea
pusha
push
call
xor
lcall
xor
mov
hlt
pop
mov
jae
xor
add
sub
push
mov
mov
icebp
push
ret
pop
pop
popf
sub
sbb
cmp
xor
cmp
scas
shr
mov
stos
push
dec
out
inc
inc
add
leave
jne
push
out
adc
push
mov
adc
jg
or
jg
sbb
jnp
mov
test
pop
sbb
or
pusha
mov
cltd
js
xchg
fbstp
psrlw
gs
mov
jns
xor
sub
movsb
shl
lods
xor
inc
arpl
xchg
sub
xchg
cltd
mov
mov
xor
push
cmp
int3
mov
out
psrld
mov
orl
cmp
mov
add
stc
out
jmp
mov
ret
mov
jl
mov
jns
popa
xchg
sub
sahf
notl
out
mov
xchg
and
lds
loope
mov
frstor
pop
in
fdivl
cmpsl
das
popl
or
out
call
pusha
movl
pusha
pushf
lea
jmp
movl
pushf
pusha
lea
jmp
xchg
push
mov
dec
bt
stc
clc
shl
lea
jp
pushf
pushf
pushf
lods
call
dec
inc
inc
aam
pusha
pusha
sub
aam
icebp
loopne
lock
add
mov
psubsw
loop
sub
scas
push
pop
les
sahf
gs
mov
pusha
and
inc
movsl
out
and
lock
inc
and
aas
jp
paddq
jg
sbb
comiss
fsubrs
aam
jle
loop
pusha
movsb
std
xchg
nop
xor
pop
test
pop
xchg
pusha
jp
rcpps
xchg
fidivrl
add
out
outsl
scas
sarb
les
loope
lahf
cmpsb
sti
repz
in
cmpsl
and
adc
ja
repnz
jl
xor
cmpsb
loopne
lock
cmp
and
js
dec
dec
mov
fiaddl
enter
ds
in
cmp
je,pt
pop
fdivp
sbb
clc
mov
or
jo
dec
dec
mov
cmpsl
insb
xor
xchg
sbb
in
repnz
pop
pop
in
xor
pushf
movl
push
pushf
call
sub
lock
sahf
loopne
mov
sub
xchg
or
mov
sub
lods
aaa
dec
clc
mov
clc
dec
or
inc
adc
mov
or
pusha
jecxz
enter
mov
pop
je
mul
pop
mov
add
add
pop
add
call
adc
pop
push
pop
add
adc
arpl
pop
add
sti
adc
repnz
stos
dec
aam
push
pop
popf
dec
mov
jbe
mov
or
notl
push
adc
xor
cmp
movsb
data16
xlat
xchg
or
lock
insl
xor
mov
or
adc
daa
jmp
xchg
pop
and
test
fsubs
pop
add
les
mov
fs
mov
jnp
sbb
ds
insb
xor
inc
popa
stos
into
es
mov
sbb
fstps
sahf
mov
mov
fs
ljmp
pop
lcall
insb
mov
mov
test
aam
inc
insb
mov
sahf
mov
sbb
mov
roll
movsb
push
inc
out
add
mov
ljmp
inc
movsb
add
pop
jbe
mov
push
test
sub
sub
movsb
in
maskmovq
testl
push
and
fdivrl
les
dec
daa
xor
out
jp
nop
mov
stos
push
lds
push
cltd
cltd
push
lods
sbb
js
xor
mov
cmp
es
lea
jbe
inc
mov
fisubs
js
pushl
push
movl
pushf
movl
pushl
popl
pusha
movb
pushf
push
pushl
ret
jmp
mov
jmp
jmp
int3
popf
pushf
jmp
add
inc
gs
outsl
fs
gs
popa
outsb
fs
gs
add
sub
bt
cmp
push
lea
ja
bt
imul
pushf
bt
jmp
pushf
movl
push
pusha
push
pushf
lea
jmp
add
shl
lea
add
btr
or
cmp
mov
setne
test
mov
cmp
bt
stc
repnz
pusha
jmp
movzbw
pushf
pusha
xchg
mov
xchg
push
call
xchg
ds
or
xor
fdivr
xchg
push
sbb
mov
mov
jne
adc
test
ret
movsl
lea
xchg
andb
inc
adc
dec
ja
or
xchg
insl
sub
int3
subl
sti
aam
xor
sarl
sbb
loopne
pop
add
lret
dec
xor
shll
push
cmp
lcall
xchg
cld
jbe
push
cmp
fcomps
dec
adc
inc
fsubl
pop
push
xlat
mov
andl
add
push
cmp
jmp
lea
call
test
clc
jmp
call
mov
pusha
pushf
lea
jg
pushf
mov
push
lea
call
pushf
pushf
mov
pusha
pushf
push
pushl
lea
jmp
adc
cmp
jle
mov
push
mov
outsb
and
adc
lods
cld
lds
jno
out
xchg
inc
mov
sbb
jp
jge
inc
pop
push
les
xor
aaa
cmp
inc
les
jecxz
popl
out
movsl
mov
or
sbb
add
dec
out
adc
fbld
jns
inc
aas
sbb
adc
cld
lods
aad
fstpt
mov
cltd
faddl
inc
cmp
mov
xor
hlt
cs
adc
xor
or
scas
dec
int
push
inc
adc
ficoms
fsub
xor
xchg
shrl
jge
adc
lods
ljmp
xchg
sahf
fs
scas
rcrl
popa
jecxz
cwtl
lock
jge
cmp
pushf
lea
call
pusha
pushf
call
pushf
xchg
not
call
lea
jne
pusha
pushl
push
pushf
mov
push
lea
jle
pushf
push
mov
jmp
pop
pop
pop
dec
aam
shrb
hlt
pop
mov
cmc
pushf
fucom
xchg
jge
xor
mulb
xchg
int3
cmp
add
sbb
sub
in
mov
mov
lods
in
icebp
int
push
and
rclb
jo
pop
and
or
xorb
ds
adc
cmp
add
push
or
add
inc
and
xchg
mov
lea
jmp
pop
fs
aam
jmp
jl
ret
je
cmp
lret
cmpsl
iret
outsb
in
enter
sub
xchg
lods
jecxz
mov
adc
mov
fimull
rolb
jp
xor
rcl
or
and
jnp
in
shrb
xchg
mov
enter
pushf
mov
call
not
call
call
call
lea
lea
ja
push
pusha
push
movl
movl
pushl
popl
pusha
pushl
ret
add
dec
gs
inc
popa
insb
insb
inc
outsb
imul
cmp
xor
lcall
mov
lea
jmp
mov
shr
call
pushl
clc
cmp
pusha
push
lea
jae
push
pushl
cmp
jmp
sbb
dec
aam
in
inc
sub
sbb
push
dec
sub
mov
mov
lods
bt
addr16
sub
in
cmpsl
out
xchg
sub
aam
fcmovb
jp
das
jb
adc
lods
rclb
cmp
jle
call
sbb
js
sub
bt
ror
cmc
mov
cmp
mov
add
pushl
test
pushl
pushf
lea
jne
call
lea
jae
call
stos
pushf
pushl
lea
jmp
push
jmp
call
lods
cltd
adc
addr16
cmc
xchg
sbb
dec
adc
addl
fwait
and
fistpll
outsb
lahf
icebp
cli
jb
xor
cmp
xchg
fidivrs
xchg
test
dec
push
mov
cmp
xchg
mov
or
adc
jl
das
lods
fcmovnb
popa
adc
mov
jne
test
pop
inc
outsb
je
pusha
or
xor
add
inc
notl
mov
sbb
lods
das
xchg
lcall
jge
or
scas
fnstcw
sbb
pop
fcomi
mov
cmpsl
inc
and
jge
mov
pop
clc
icebp
repz
cmp
fsts
mov
addr16
adc
test
lds
push
xchg
xchg
test
hlt
addr16
fstps
xor
pinsrw
cwtl
adcl
pusha
movl
pusha
jmp
add
test
sub
pop
and
push
out
das
aad
cmp
fsubrs
and
mov
dec
cmp
pop
and
xchg
fs
and
cs
jp
sbb
hlt
ss
push
adc
pop
inc
push
xchg
jae
jb
jmp
add
add
pop
lret
cmc
mov
stc
test
call
repnz
call
cltd
testl
lret
xor
int3
pop
jmp
das
repnz
inc
dec
movsb
push
psrlw
rdpmc
jp
movsb
or
rcl
push
sub
mov
test
pop
mov
cmp
and
cld
sub
mov
jmp
js
adc
punpckhbw
add
hlt
jbe
fstpt
xchg
mov
pop
cmc
dec
sarb
cwtl
ffree
test
cmp
test
out
aas
stc
fsub
aaa
inc
mov
aam
dec
mov
fldl
sbbl
enter
scas
test
pusha
test
cmp
call
not
mov
movw
mov
push
mov
pusha
pushl
ret
and
inc
push
aam
lods
adc
data16
rclb
je
cwtl
insb
pop
enter
into
lock
add
imul
fwait
mov
or
mov
xchg
orl
mov
lock
std
fwait
out
popa
push
mov
add
jmp
int
test
pop
sub
lock
push
test
fdiv
jno
aad
cwtl
mov
xchg
mov
dec
fiadds
xchg
add
lods
xor
scas
push
jle
mov
dec
ss
push
adc
aam
incb
lock
cmpsb
inc
xchg
test
dec
mov
je
and
inc
lret
inc
mov
iret
and
sub
lea
out
add
cmpsl
filds
pushf
sbb
dec
out
xchg
xor
xor
pop
mov
test
mov
jne
pop
mov
mov
stos
shrb
enter
pop
dec
stc
shl
and
cmp
xchg
call
mov
jo
dec
out
sub
movsb
xchg
push
sbb
cmc
test
hlt
lods
int3
icebp
xchg
gs
sahf
pop
jno
jmp
inc
imul
sbb
and
testl
jne
cmpsl
sbb
roll
sub
or
mov
cli
or
enter
dec
nop
je
jle
mov
scas
outsb
mov
xchg
mov
inc
xrelease
pusha
mov
push
lea
jmp
mov
addr16
mov
mov
add
adc
data16
add
push
aad
mov
xor
or
rclb
je
and
push
pushf
jmp
pop
or
imul
and
sub
in
mov
or
xor
push
cld
sbb
iret
aad
test
xchg
loopne
test
sub
call
pusha
call
mul
addr16
aam
push
imul
mov
hlt
imul
mov
scas
push
rclb
mov
push
push
cmp
or
mov
sbb
daa
sub
das
in
comiss
push
aam
and
outsl
mov
pop
pop
inc
or
mov
mov
jbe
cwtl
ficomps
mov
out
pusha
or
hlt
jo
jp
mov
sub
xor
xchg
daa
and
sub
lea
hlt
jne
mov
lods
out
shll
push
mov
mov
mov
xor
fwait
xchg
dec
aad
and
testl
inc
je
sub
xor
fsubp
std
aas
hlt
and
stos
xchg
fucom
movsb
xchg
xchg
adc
std
cmc
jge
lock
lret
lea
xchg
xchg
popl
sbb
pop
pop
pop
sahf
xchg
in
mov
sub
pop
add
dec
fnstenv
xchg
dec
push
int
mov
out
mov
xchg
fidivs
jnp
adc
ja
xlat
pop
mov
dec
sbb
mov
adc
mov
cli
arpl
loope
mov
jmp
jno
nop
cmp
cmp
mov
mov
xchg
sarl
clc
lea
fstl
test
or
in
rcrl
mov
insb
pop
in
jp
insl
sarb
pop
data16
push
sbb
lds
mov
adc
add
test
jmp
icebp
stc
push
movl
push
push
pusha
lea
jmp
jmp
pushl
popl
pusha
mov
pushl
push
pushl
ret
push
pushl
pushw
popfw
pushf
push
pushf
lea
ja
inc
jmp
pushf
jmp
mov
pushf
lea
jmp
mov
movl
mov
pushf
pushl
ret
push
call
push
mov
jmp
call
mov
movzbw
jmp
mov
stc
add
setno
add
mov
bsr
shld
stc
add
bsr
inc
movl
clc
jmp
movzbw
mov
movzbw
mov
push
pushl
mov
bswap
jno
push
bswap
mov
pusha
pushl
ret
and
jmp
lea
je
jmp
push
pushf
push
movl
jmp
add
add
movl
call
lea
jae
cmc
cmp
call
test
add
bt
mov
jmp
push
mov
movsbw
bswap
movl
movzbw
mov
lahf
movzbw
lea
call
lea
je
jmp
inc
rorb
aam
push
jne
pop
add
mov
cmc
mov
push
loope
dec
cmpsl
cmp
cmp
add
pop
inc
or
or
sarb
aaa
push
stc
mov
mov
mov
cmp
outsl
xchg
lock
fdivr
daa
lds
xlat
jb
outsb
gs
mov
popw
push
cmp
xchg
push
sub
add
out
pop
aam
loope
pop
orl
jae
and
push
xchg
cmp
jmp
outsb
gs
out
add
popw
fildl
adc
dec
lock
xor
xlat
pop
outsl
adc
sbb
xlat
pop
dec
sub
xor
jl
push
sbb
jno
stos
jno
pop
add
decb
enter
pop
lret
les
and
jp
dec
xchg
add
movsl
cmp
in
pop
pop
adc
decb
jmp
imul
push
xor
or
mov
lret
mov
cmp
stos
cmp
movsb
lcall
xor
ds
push
mov
sar
dec
int3
or
jno
and
mov
dec
xor
xlat
jmp
imul
pop
pushf
dec
gs
mov
inc
aad
pop
lds
sbb
push
or
outsl
enter
cmp
pushf
pusha
lea
jae
bt
add
call
jmp
test
cmp
test
call
push
pop
fistps
addr16
es
sahf
pop
pop
dec
imul
push
fwait
lcall
pop
js
ret
rcrl
cmc
and
mov
sbb
or
xchg
mov
pushf
mov
sub
xchg
repz
sti
clc
out
xchg
add
mov
mov
or
and
pop
loope
sbb
scas
xor
fldl
push
das
add
in
and
mov
jbe
push
mov
pushf
movsbw
bswap
bswap
mov
pushf
pushf
push
pushl
ret
lea
jbe
call
pusha
pusha
lea
jl
adc
push
pusha
movw
movb
pushl
ret
rol
cmp
addr16
inc
out
sub
rsqrtps
fsub
jp
mov
or
daa
jl
sub
jg
lea
pop
in
pop
sub
inc
inc
stc
daa
mov
inc
leave
negl
add
inc
push
test
into
adc
sbb
sub
add
test
fimull
cwtl
mov
adc
jo
lods
sbbl
outsb
xor
mov
shlb
jo,pt
in
mov
incl
add
popa
insb
inc
insb
insb
outsl
arpl
jmp
pushl
test
call
mov
mov
addr16
sbb
in
and
gs
loopne
push
testl
lock
mov
cld
pusha
mov
loope
xchg
mov
mov
subb
mov
mov
jns
outsb
dec
fwait
jbe
add
stc
add
mov
clc
xor
and
incl
inc
mov
out
jo
testb
test
stos
out
adc
fndisi(8087
fdivs
jo
fucom
enter
add
daa
aaa
int3
dec
stos
rorb
cs
pop
aam
add
movsb
sub
jo
cmp
push
js
leave
lret
cmp
and
popf
pop
xchg
test
ljmp
or
out
sarb
cmp
adc
hlt
jo
sub
inc
imul
in
test
pop
movsb
decb
mov
lock
arpl
cltd
cld
mov
shlb
rcrl
xchg
pop
test
jns
ret
out
push
adc
mov
inc
push
adc
xchg
les
push
clc
shr
ror
push
sar
sub
lahf
lea
jmp
movb
movb
lea
je
pushf
add
push
pusha
lea
jmp
push
lock
std
std
adcl
outsl
add
ss
jg
jo
rol
dec
and
pushf
mov
pop
mov
xor
test
stc
in
call
adc
mov
fcoms
xor
cltd
and
dec
roll
xor
pop
xor
xchg
push
jbe
inc
in
aas
mov
mov
enter
xor
jmp
pop
dec
pusha
movb
push
lea
call
pushf
cmp
sub
mov
push
lea
jne
pushf
pusha
push
lea
call
push
push
lea
jmp
call
jmp
bt
pusha
xor
lea
pusha
push
inc
lea
pusha
mov
lea
call
call
mov
lea
jb
test
cmp
call
pushf
lea
jno
push
lea
je
pushf
jmp
loopne
out
pop
aam
loope
mov
outsl
add
arpl
adcb
xchg
xchg
stc
in
outsl
sbb
or
inc
jmp
movsl
mov
loopne
lods
pop
repz
scas
xlat
and
arpl
inc
sbb
push
aam
sarb
or
mov
rcl
pushf
filds
inc
addr16
xor
mov
scas
dec
sub
inc
gs
add
sub
mov
subb
nop
push
inc
gs
in
cmp
outsb
nop
sub
fs
inc
gs
das
sub
ljmp
out
mov
out
push
inc
outsb
pushf
or
adc
shll
push
pop
pop
inc
add
sub
jle
inc
gs
aam
xor
mov
push
rol
gs
call
fisubrs
sub
and
inc
gs
cmp
sub
push
inc
gs
cmpsb
test
mov
pop
inc
lods
fstps
frstor
mov
inc
xchg
gs
sarl
jbe
inc
gs
iret
aaa
inc
inc
lds
sub
push
inc
gs
mov
loop
das
sub
push
mov
inc
aas
mov
inc
push
inc
gs
sub
inc
gs
mov
int3
arpl
inc
and
sub
mov
orb
outsb
jle
rolb
sub
ror
push
fmull
push
inc
sub
sub
stos
mov
cmp
lea
xchg
sbb
jns
sub
inc
rolb
mov
nop
sub
xchg
push
inc
gs
mov
stc
mov
mov
push
inc
sub
xchg
pop
push
or
sub
add
sub
mov
sub
inc
gs
cmc
adc
pop
inc
gs
repz
xchg
push
inc
gs
xchg
mov
sub
jle
inc
gs
sbb
adc
inc
gs
out
xor
jbe
pop
inc
gs
lea
xchg
add
dec
sbb
jp
xor
push
out
pop
inc
gs
sub
inc
sarl
stos
mov
pop
pop
aam
int
adc
pop
test
outsb
and
xor
inc
scas
stos
js
std
movsl
cmp
fdivrl
lods
adc
mov
cmp
and
jnp
inc
aas
testl
pop
cmpl
ds
mov
out
pushl
jne
orl
leave
in
adc
filds
psllq
movsb
push
pop
add
rcl
sar
mov
cmp
pushf
bt
shl
pushf
call
pushf
pushf
lods
pushf
cmp
jmp
pusha
pusha
mov
push
pushl
movw
pushf
lea
jmp
lea
call
push
jmp
pushf
inc
inc
lea
ror
jmp
and
and
addr16
call
xlat
mov
imul
xor
cmp
lcall
inc
outsb
adc
lds
cltd
mov
mov
mov
xchg
sub
jae
xor
popf
xor
dec
fistpll
in
lods
repz
pop
cli
sahf
adc
pop
inc
sub
test
jp
pop
sub
test
mov
adc
sbbb
orl
dec
inc
push
scas
test
pop
movsb
pslld
fs
insb
and
mov
mov
into
mov
add
jne
test
jle
popf
add
outsb
mov
mov
dec
pop
sub
or
sub
call
pushf
mov
call
inc
jmp
pushf
jmp
mov
call
imul
and
addr16
xor
mov
mov
push
imul
out
insb
push
sbb
fcomps
mov
jp
add
lea
push
mov
popa
stc
cmp
inc
add
mov
pop
or
dec
fidivrl
sbb
sbb
out
push
xor
dec
push
mov
push
jae
inc
lea
cmp
aad
addb
mov
dec
adc
and
nop
stc
comiss
add
mov
adc
mov
sbb
and
mov
movsl
lea
ror
leave
mov
orl
xor
sub
mov
push
mov
mov
cli
adc
dec
adc
jmp
push
and
sbb
das
inc
sbb
les
lahf
mov
ficompl
mov
jmp
popf
pushf
push
testb
addr16
adc
and
test
jge
and
loop
out
mov
repz
jns
inc
dec
mov
ds
xchg
fsts
adc
push
insb
test
je
shlb
xchg
imul
movsb
sbb
imul
dec
xchg
daa
fcmovnu
lcall
xchg
in
pop
xchg
sub
ret
pop
or
test
sti
inc
mov
add
jnp
mov
repnz
pop
movsb
dec
aam
mov
aas
ret
iret
or
movb
lea
je
bswap
mov
cwtl
push
lea
push
mov
movzbw
pushl
popl
pusha
setne
jmp
lea
jae
push
lea
jne
pushf
pusha
lea
jne
push
call
mov
addr16
pop
mov
adc
cld
test
add
pop
popa
test
pop
xchg
push
mov
sbb
dec
mov
jle
lds
ficoml
fcmovnu
cmp
cmp
sbb
js
scas
jno
mov
pop
mov
dec
pop
add
mov
or
mov
mov
mov
jae
nop
push
idiv
rep
sub
aam
mov
outsb
hlt
negl
mov
ds
pop
or
fs
lcall
xchg
cmp
ljmp
jge
mov
xor
mov
and
cmp
xor
icebp
in
fstpl
mov
aaa
hlt
cmp
popf
add
sub
jo
inc
imul
testb
jg
data16
in
rcrl
or
xchg
ror
pop
cmp
add
es
add
add
lods
nop
pop
jecxz
movsb
push
scas
pand
sbb
test
xchg
adc
and
ror
shl
nop
xchg
dec
pminub
xor
pop
aaa
jg
push
sub
scas
mov
push
lds
loopne
jge
or
fistpl
or
rorl
divl
pop
ret
aam
inc
js
jb
pop
jl
clc
jg
stc
andl
loope
or
pop
and
pushf
call
call
pusha
lods
and
jne
frstor
mov
jbe
add
mov
jge
imull
das
adc
aas
iret
cwtl
jnp
sbb
push
insb
lods
pop
jo
inc
iret
mov
mov
arpl
sub
push
inc
or
jbe
dec
shll
dec
mov
icebp
and
and
mov
push
stc
inc
ret
xor
inc
mov
stc
add
cs
pop
sahf
sub
in
lcall
mov
sbb
or
arpl
test
pop
aam
clc
and
mov
and
jb
dec
adc
pop
inc
ds
xlat
arpl
cmp
movsl
fs
adc
inc
cwtl
inc
cmp
outsl
test
clc
xorb
insb
sarl
jle
loopne
je
sar
inc
dec
int3
mov
and
addr16
xchg
cld
add
in
dec
push
mov
inc
and
lret
mov
jmp
mov
jne
fcoms
add
mov
mov
or
dec
repnz
mov
jno
cs
mov
sbb
mov
pop
xchg
scas
mov
xchg
lods
adc
sbb
pusha
bound
loopne
sar
pop
das
fidivs
repnz
call
pusha
adc
pushf
pusha
push
push
lea
jmp
mov
fdivrl
stc
test
lods
cmp
mov
cmp
lods
mov
mov
insb
sbb
stc
cmp
cmp
fsubrl
int3
repz
call
push
pushf
push
jmp
xchg
test
push
pushf
jmp
lea
jnp
pushf
movl
pusha
push
lea
jmp
int3
mov
mov
push
xchg
mov
and
cmpsl
xor
icebp
xchg
push
jbe
jno
mov
mov
incl
sbb
mov
aad
lods
dec
arpl
xchg
test
rcll
orl
cmp
stos
adc
cmp
sti
inc
jnp
mov
push
orl
cmp
pop
iret
outsl
inc
dec
push
scas
sarl
dec
sub
add
fistpl
lret
cmp
hlt
fldl
pop
aas
inc
bound
cltd
jbe
out
shlb
inc
jmp
pushf
jmp
pushl
popl
pusha
cmp
call
movl
pusha
pushf
jmp
jmp
push
shll
aam
lock
jb
mov
mov
ja
loopne
dec
pushf
lods
test
mov
or
push
jecxz
and
jmp
clc
pop
push
in
lods
or
cmp
sti
cmpsl
ja
xchg
sti
jns
lcall
dec
xor
icebp
mov
inc
lea
outsl
repnz
rolb
xchg
into
jo
jmp
lcall
dec
fnsave
xor
xor
inc
and
mov
inc
and
js
jne
push
pushf
lea
jmp
jmp
mov
fmull
fsubrl
fsubrl
or
test
lods
cmp
mov
cmp
lods
mov
mov
insb
sbb
stc
cmp
cmp
fsubrl
int3
repz
aaa
sub
addr16
cwtl
and
or
jecxz
imul
lods
pop
sbb
shlb
aam
data16
sub
xchg
mov
mov
les
mov
adcl
mov
or
mov
sub
push
pusha
outsl
out
push
call
mul
data16
imul
mov
mov
imul
mov
fwait
sbbb
imul
loope
cmc
and
int
adc
lahf
or
or
mov
pushf
dec
addb
in
push
out
mov
cli
out
std
mov
or
xor
mov
mov
loope
std
mov
jae
push
push
mov
jbe
mov
xor
cmp
test
sub
mov
outsb
cwtl
pop
addr16
mov
cmp
mov
stc
lahf
insl
add
add
add
mov
dec
jae
lret
lret
push
push
dec
inc
push
pusha
int3
hlt
pop
leave
adc
push
sub
dec
push
mov
andb
pop
add
rcll
std
aas
jle
frstor
add
cmp
or
imul
jb
mov
fimull
iret
sti
jae
rcr
add
add
cmpsb
mov
jns
inc
cld
add
cmp
fidivrs
jp
push
jnp
imul
jnp
mov
add
xchg
repz
sbb
andb
dec
xor
cld
gs
arpl
outsl
mov
stos
jg
add
bound
insb
leave
out
mov
out
jae
cli
arpl
insb
rcll
leave
mov
xor
inc
mov
push
outsl
mov
insb
add
xchg
push
push
add
fsubs
mov
imul
mov
add
cmp
lret
cld
jg
iret
mov
out
divl
rorb
mov
cmpsb
subb
pop
jae
xor
or
aaa
pop
enter
out
leave
adc
shr
jg
jecxz
sbb
jmp
sti
xor
std
addb
sbb
jg
sarb
jecxz
leave
push
ss
mov
push
add
xchg
testl
sarb
ja
mov
adc
neg
aas
xorb
aas
fdivr
ja
fisttpl
out
mov
ljmp
out
and
ror
arpl
call
repz
add
addr16
mov
leave
sub
imul
jle
jnp
sub
jnp
mov
mov
lea
sub
xchg
gs
bound
jg
fdiv
cmpsl
add
cmp
out
addb
insb
addr16
jne
add
loopne
dec
jae
outsb
ljmp
pop
sarl
stos
mov
fincstp
gs
shl
repz
mov
cmpsl
push
test
outsl
repz
aad
mov
shl
inc
shl
rep
mov
popa
push
neg
jge
shl
repz
addr16
lret
rcl
push
divl
lods
shl
repz
test
stos
imull
imul
xchg
jns
lahf
jge
xchg
call
mov
jg
ffreep
loop
repz
mov
iret
aad
jle
mov
add
mov
dec
push
xchg
sub
mov
jne
inc
mov
xchg
jnp
dec
leave
out
lret
ja
popf
jmp
movsb
faddl
loop
cmpsb
arpl
mov
fwait
pop
scas
pop
xor
xchg
pop
orl
loop
pop
sub
sbb
sub
scas
ret
rcrl
cmp
inc
leave
roll
popa
aad
add
loopne
lret
popf
std
add
mov
sbb
not
cmp
add
cmc
jo
lock
jmp
xor
jle
outsb
add
in
out
out
insb
movsl
imul
dec
dec
xchg
push
ljmp
jle
mov
or
test
sbb
sti
fdivr
mov
addb
cmc
arpl
jbe
fstpt
mov
push
adc
cmp
jmp
adc
push
iret
dec
insb
ror
adc
cmp
mov
lret
jnp
mov
push
rcrl
and
sub
repz
rcr
mov
movsb
imul
mov
jae
je
pop
jp
lret
out
jg
imul
pop
fwait
jae
mov
ljmp
orb
sub
iret
lret
jns
movsl
testl
jg
ss
mov
addr16
jbe
ret
arpl
lahf
mov
pop
jns
push
jge
jle
jle
jbe
jns
mov
lahf
out
pop
mov
aaa
mov
xchg
lret
lods
mov
fnsave
lcall
lcall
mov
roll
jno
cmp
ucomiss
repnz
in
popa
xchg
jg
out
adc
popa
push
mov
mov
fildl
mov
push
mov
out
popf
dec
sti
add
popa
andb
addr16
subl
mov
add
stos
ja
iret
fdivs
lret
std
mov
cmpl
cs
mov
push
push
or
pushf
int
call
aas
fmull
pop
pop
sti
iret
sbb
insl
arpl
xlat
cmc
stos
adc
rep
sub
popa
xor
out
push
clc
sbbb
lods
fnsave
or
insl
xchg
fnstcw
imulb
pop
gs
jae
jnp
ret
add
mov
or
int
lcall
mov
rcrl
loopne
iret
bound
data16
mov
mov
cltd
stos
sbbl
bound
popa
add
push
sub
fwait
xlat
lret
mov
test
addr16
out
ljmp
fisttpl
int
les
pop
int3
push
jae
inc
ror
jae
sbb
dec
push
int
pop
push
sub
sbb
out
addr16
push
insl
jg
addr16
mov
insl
popf
repz
fwait
pop
push
ret
rorl
push
add
mov
xor
push
lret
int
push
push
pop
cmp
mov
enter
mov
pop
fnstenv
xchg
idiv
mov
xchg
iret
test
or
int
jne
ficompl
dec
mov
fucom
mov
subb
addr16
lock
imul
pop
inc
fisttpll
jnp
insb
leave
outsl
dec
xchg
lret
push
sti
int
js
inc
popf
in
and
jg
jno
sub
int3
js
or
insb
pushf
fdivrl
jl
dec
inc
adc
add
popf
addr16
jne
inc
out
outsl
mov
add
push
icebp
cmp
sbb
orb
push
repnz
push
int3
bound
pop
js
lret
inc
aad
loope
and
pop
aaa
add
int
dec
stos
jns
dec
pop
leave
jl
push
jno
fsubs
into
push
repnz
loopne
add
pop
lret
push
repz
aad
fdivl
jno
mul
test
dec
mov
jle
dec
leave
imul
ljmp
xchg
dec
lret
xor
xor
or
fildll
cs
loop
iret
out
push
dec
insl
mov
cmp
aad
lcall
mov
inc
shl
lret
adc
iret
or
jecxz
pop
dec
bound
outsl
std
jae
fisubl
int3
dec
leave
pop
imul
jns
cmc
jns
addl
loopne
stc
shll
fmull
dec
mov
jno
ja
iret
jbe
fidivs
popa
mov
out
jns
pop
daa
ja
fstp
mov
sti
das
xlat
lret
fnsave
mov
lar
lea
jge
lret
shll
out
dec
fldt
icebp
jg
insl
fstpl
pop
mov
sub
jnp
ljmp
data16
dec
je
pop
sbb
lahf
adcb
push
loope
and
cmpb
jle
jge
inc
xchg
out
push
stc
loopne
cmp
push
jmp
push
divl
sub
adc
scas
sar
mov
lahf
addr16
inc
cmp
mov
ror
add
mull
pop
mulb
fwait
popf
insb
js
das
icebp
cmpsl
test
shlb
xchg
pop
fcmove
add
jns
dec
mov
stos
imul
test
xchg
jne
dec
xchg
fcompl
iret
ja
jbe
jle
mov
push
aam
stc
std
fs
adc
inc
clc
punpcklwd
ret
scas
add
jns
jne
lea
call
jae
ds
stos
and
inc
xchg
add
mov
jne
flds
pop
jp
push
mov
mov
mov
movsl
push
xor
scas
xorb
icebp
test
and
shlb
cmpsl
out
xchg
arpl
mov
xor
sub
insl
bound
mov
clc
mov
movsl
fildl
push
xchg
out
jns
cld
into
movsb
push
in
negl
fisubrs
daa
data16
mov
xchg
fidivl
xor
xchg
pop
xchg
cmp
inc
fsubrp
lahf
insb
cwtl
cmp
xor
sbb
cmp
inc
cmc
iret
int
push
repnz
shlb
fimull
fstpt
jbe
pop
sti
inc
mov
ja
jnp
pop
addr16
iret
shrl
int
inc
mov
xchg
testl
inc
jae
jae
loope
icebp
das
add
cmp
inc
jp
decl
xchg
mov
xor
mov
cmp
popa
shrl
pusha
inc
mov
jg
fstpt
cmp
jae
sub
shll
cmp
jmp
idivl
jno
insl
inc
mov
pop
fsubs
stc
cmp
mov
aad
aad
mov
roll
cmp
lret
sarl
in
xchg
loop
imul
scas
loop
dec
stos
icebp
loop
pop
push
nop
pop
mov
inc
xchg
inc
jne
mov
mov
je
pop
pop
cmpsl
jle
cmpsl
jne
fwait
lods
fildll
xchg
fstps
stos
popf
jnp
imul
lret
mov
push
in
push
repz
sbb
filds
sub
sub
xorb
xor
imul
test
ja
cmp
push
or
ja
cmp
fidivrl
cltd
and
dec
sbb
cmp
ret
jb
xchg
inc
mov
xchg
dec
test
popa
ja
push
xor
push
lods
mov
mov
or
ss
cli
cmp
mov
mov
bound
add
inc
pop
fiadds
mov
xor
iret
xchg
cltd
bound
jns
jnp
or
mov
xchg
fwait
stc
lret
lods
in
mov
data16
bound
scas
movl
fisttpl
negl
aaa
outsl
cmpsl
sti
movsl
pop
push
mov
leave
jle
mov
aas
pop
mov
lcall
fistpll
not
negl
idivb
xlat
mov
pop
mov
jmp
frstor
lods
ds
iret
es
scas
push
cmp
ss
cmp
mov
scas
adc
das
cmp
loop
lahf
fisttpll
mov
push
sub
cmp
lods
lahf
lods
fistpll
sub
jb
popa
jg
iret
cmp
decl
pop
pop
into
xchg
inc
inc
into
jmp
xchg
scas
popf
ja
sti
daa
xchg
mov
fcoml
aam
incl
mov
cmpsl
imul
idivl
dec
scas
mov
and
push
jl
jg
jge
mov
adcb
movl
repz
mov
xchg
test
pop
sbb
pushf
push
pop
iret
fimuls
mov
loop
dec
scas
data16
imul
push
cmp
inc
popl
repz
ret
and
pop
xor
xchg
out
sarb
fsubrl
imul
lret
pop
xchg
lret
iret
push
shlb
movsb
lods
out
cmp
pop
pusha
repnz
in
int3
test
sbb
cli
jae
fistpll
popf
cmp
cmp
lds
mov
mov
out
pushl
jno
fisttps
in
jb
popa
outsl
push
jno
ffreep
mov
mov
aas
pop
jp
jo
jmp
xchg
aas
mov
subb
sti
jecxz
lahf
sti
mov
imul
idivl
sar
les
mov
jmp
cmp
xchg
js
outsl
jb
popa
fst
aas
bound
push
push
or
int
testl
popa
mov
cmp
lcall
push
loop
push
dec
dec
scas
jle
rol
into
cmc
ror
leave
lcall
mov
mov
rorl
addr16
lcall
enter
jae
pop
pushf
jb
adc
mov
ljmp
adc
push
lret
fisttps
repnz
test
mov
sbb
dec
jne
loope
inc
push
pop
pop
sbb
jecxz
xchg
push
rcrb
mov
loop
dec
int3
push
pop
dec
dec
cwtl
cmp
jecxz
add
les
mov
jae
pop
dec
push
lret
or
rclb
mov
ljmp
int
stc
xchg
cli
push
fistpll
xor
mov
fcoml
test
and
out
fimull
pop
jbe
leave
rolb
cli
lret
mov
mov
sub
lcall
push
popa
pusha
bsr
scas
mov
add
adcb
ret
jl
sti
arpl
outsl
mov
adc
xor
mov
xchg
popf
jmp
sti
lahf
aas
ljmp
insl
fiaddl
cmpb
leave
loop
mov
cmp
fninit
jmp
sti
stos
sbb
imul
jnp
lret
rep
add
xorb
pusha
push
in
jae
add
scas
fsubs
pop
and
loope
pop
and
movsl
repz
loopne
mov
or
mov
filds
sub
dec
sub
dec
dec
shl
das
fmul
stos
fisttpll
jno
push
in
dec
shl
jnp
pop
adc
das
fnstcw
lods
jns
add
push
dec
push
xor
push
insl
fnstenv
push
ljmp
bound
jge
sub
fcompl
mov
fsubr
sbb
addr16
int
and
adc
cltd
jno
push
in
push
insl
jle
ret
pop
fsubrs
stos
xor
mov
push
jge
inc
xlat
je
loop
cmp
jo
push
or
mov
fistps
push
cmc
out
insl
xor
data16
pop
mov
test
jne
aas
sub
push
pop
jl
mov
fisubs
in
mov
adc
addb
push
dec
bound
jecxz
cmp
mov
subb
jnp
and
push
adc
mov
dec
ja
jl
xor
stos
mov
add
rolb
mov
cld
lahf
inc
jns
imul
outsl
out
arpl
outsl
mov
insb
add
lret
jl
addb
mov
inc
jg
add
sti
loope
jae
jnp
adc
lret
adc
mov
push
lcall
jl
inc
jg
cmp
mov
add
and
test
add
mov
jg
inc
out
add
cltd
arpl
add
hlt
push
cs
pop
out
in
loopne
cmp
cwtl
add
mov
incl
cltd
les
jae
in
and
gs
out
stos
cmp
mov
add
or
ret
adc
lahf
and
loop
sbb
xchg
add
sub
mov
push
mov
jo
out
xchg
xlat
fdiv
cmpsl
lahf
or
stc
jecxz
dec
sti
xchg
lahf
adc
mov
addb
cmp
mov
mov
xlat
jbe
sti
stos
cld
xorl
and
mov
into
hlt
fsubrl
jle
cmp
lea
sub
fwait
sahf
pop
ret
jg
add
dec
push
lahf
cmpsl
jns
sbbl
int
push
jae
mov
jg
outsl
clc
les
add
inc
iret
movsl
jle
mov
test
xchg
jno
ffreep
mov
jb
popa
loopne
aas
shll
jmp
jmp
outsl
jno
fistpll
es
mov
popa
mov
mov
mov
jb
popa
imul
xchg
cmp
mov
mov
cmp
jb
popa
push
aas
jl
jg
mov
sti
xchg
jb
popa
mov
mov
mov
jb
popa
fbld
jb
jns
xchg
cmp
mov
jno
cmp
insb
popa
jae
mov
lcall
fbstp
mov
jge
jmp
xchg
loope
and
mov
ja
imul
aas
lret
outsl
add
and
lahf
pushl
popa
pushf
into
aas
xchg
jp
jb
mov
cmp
popaw
aas
into
jp
jno
fistpll
popa
fwait
xchg
aas
mov
andl
fildll
popa
jb
popa
into
insl
popf
and
sti
mov
test
jmp
pushl
jae
gs
jno
cmp
jb
popa
lods
test
mov
xchg
jp
jno
fildll
popa
mov
outsb
mov
jno
fistps
popa
mov
shll
fbld
jb
jmp
incl
aam
popa
scas
mov
les
jno
fnstsw
cmp
jo
ja
arpl
mov
jg
cmp
mov
mov
jmp
cmp
jb
popa
imul
and
mov
fnop
movsl
xlat
lahf
jmp
cmp
jo
jp
mov
jp
jno
fbld
popa
mov
shll
fbld
imul
jg
arpl
aas
cltd
clc
xchg
test
ret
aas
int3
jp
jno
cmp
imul
mov
mov
popa
mov
aam
fcmovu
popa
cmp
outsb
popa
je
aas
cmp
jno
fbld
popa
mov
shlb
and
add
pop
jno
call
jno
fbld
jno
jp
xchg
mov
jmp
arpl
cmp
mov
lea
xchg
popa
lahf
cmpsb
aas
scas
jns
add
mov
jbe
divl
fistpll
jns
cli
popa
clc
ja
lahf
sti
mov
xorb
sub
shll
cmp
jb
popa
xor
aas
cmp
jo
push
popa
cmpl
push
sti
jo
jmp
jg
jp
jno
fstpt
mov
pushf
aaa
jnp
call
sti
imul
xorl
call
scas
aas
mov
mov
cmp
lahf
inc
cmp
lcall
push
xorl
fbld
sarl
jp
jno
fildll
popa
xchg
mov
mov
cmp
frstor
sarl
lret
jp
jno
fildll
popa
sahf
xchg
aas
jp
jb
sbb
cmp
fisubs
into
aas
lds
jno
fbld
mov
jne
ljmp
addr16
aas
fdivrl
add
loope
fildl
sarl
jnp
jge
jg
repz
and
jne
mov
pop
mov
and
fadd
je
mov
inc
add
out
add
xlat
jl
fdivr
shll
mov
jb
push
insl
jnp
repz
shlb
push
ja
testl
mov
sbb
and
imul
out
jnp
lahf
insl
jg
sti
popa
in
jg
inc
enter
loop
sbb
xor
into
sahf
nop
mov
mov
jl
ror
jle
xchg
outsl
fstpl
call
fnstsw
inc
jno
cmpsl
rcrl
xchg
adc
jp
jg
mov
add
ja
ja
mov
pop
fiaddl
jne
push
jl
jno
dec
int
stos
std
leave
cld
imul
xlat
ds
out
push
fwait
sbb
and
les
jae
stos
jnp
leave
out
ljmp
jbe
push
jne
loope,pt
add
mov
outsl
popf
ret
inc
jbe
imul
imul
nop
sbb
add
dec
adc
mov
arpl
test
fadds
lahf
jbe
cmpsb
daa
xor
pop
mov
shl
or
jns
scas
nop
addl
jno
ret
cli
fstpt
pop
push
pop
jns
cmp
jne
mov
jno
fcompl
sahf
sti
push
lret
jecxz
popa
cwtl
jb
cmpb
pushf
jae
inc
out
xorb
cmovl
sahf
lods
ret
lcall
lcall
push
jne
jno
lds
push
imulb
outsb
addb
leave
clc
jb
pop
push
fs
sbb
jecxz
inc
mov
clc
or
cmpl
push
jb
das
cmp
jle
sahf
pop
rcrb
push
sbb
add
jne
mov
jge
inc
inc
jnp
jg
jmp
fsubrl
push
and
inc
mov
les
leave
int
out
jb
popa
addr16
pop
rolb
jg
ds
inc
sahf
leave
mov
add
and
mov
repnz
fcomi
dec
orl
bound
push
cli
or
popa
or
paddsw
out
push
aaa
mov
popa
push
imul
movsb
jb
icebp
arpl
pop
test
inc
pop
cmp
push
jno
dec
mov
popa
xor
jno
ja
jge
test
mulps
fsincos
repnz
lret
jge
jg
subl
sbb
loop
cli
mov
jp
bts
jge
loopne
arpl
nop
mov
jge
lock
int3
mull
call
dec
jno
fistpll
mov
sti
adc
cmpsb
mov
or
or
push
xor
pop
sub
arpl
jmp
sti
pop
jmp
push
aas
dec
jp
jo
push
loope
mov
les
sbb
aas
xor
mov
push
jnp,pt
adc
xchg
xchg
add
mov
sub
mov
cmp
jnp
imul
lds
cmp
mov
pusha
out
gs
in
repnz
in
arpl
jecxz
bound
ljmp
fs
xorb
jae
incl
sub
push
je
pop
imul
jnp
mov
aaa
mov
inc
cmp
mov
sysret
push
hlt
repnz
mov
pop
xor
repnz
scas
lds
add
aas
inc
repz
bnd
test
sti
sub
lahf
cmpsl
pop
pop
sbb
and
xchg
pop
cmp
mov
fs
pop
lahf
pop
pop
pop
hlt
xor
jno
cmp
lahf
repnz
mov
jo
inc
fiaddl
cmp
cmp
adcl
shll
repnz
cmp
mov
push
lock
push
les
pusha
jae
sub
cltd
lret
jnp
sub
lret
jp
leave
inc
xchg
in
aam
xor
rcr
int
dec
int3
push
push
hlt
bound
pop
pusha
hlt
fwait
jae
pop
dec
xor
mov
inc
addr16
hlt
add
scas
scas
inc
bound
pop
jno
pop
int
shll
lret
int3
push
fdiv
fwait
jae
fs
int
inc
or
dec
fisttps
iret
jns
rcrl
imul
int3
cmp
ror
adc
arpl
fiaddl
flds
lcall
imul
mov
test
pop
mov
inc
jbe
jp
xchg
cld
xor
push
sub
es
inc
out
cltd
leave
int
repz
in
es
out
dec
jge
jmp
icebp
bound
std
cmp
sbb
inc
loopne
xchg
jne
scas
lret
inc
mov
aam
je
shrb
fistpll
into
xchg
pop
jl
sbb
test
loop
arpl
loope
das
jns
movsb
ljmp
jmp
xchg
lcall
xchg
repnz
jg
repnz
bound
out
jl
leave
lcall
fwait
jge
dec
jg
mov
je
inc
fxch
je
jno
popf
pop
xlat
fbld
fld
dec
sub
pop
jge
sti
mov
divb
cmp
in
daa
xorl
dec
pop
jg
repz
lret
dec
mov
ss
jg
push
iret
popf
dec
cmp
gs
lret
cld
jmp
insb
in
iret
aad
jne
add
popa
scas
and
xchg
sbb
or
ret
jge
pop
mov
std
in
mov
inc
push
stc
or
mov
mov
gs
inc
fidivrl
aam
mov
and
je
lds
dec
push
ljmp
aas
add
sti
or
sbb
jno
jb
hlt
inc
xchg
jp
shrl
jae
pop
cmp
jne
sbb
fldt
sbb
add
jnp
push
push
cltd
pop
xor
mov
fsqrt
ss
jecxz
xchg
mov
adc
idivl
pop
add
pop
sti
popa
and
xchg
adc
gs
mov
dec
fsts
pop
jbe
adc
mov
dec
add
popf
sbb
push
pop
or
cmp
or
add
push
mov
xor
aas
cmp
iret
adcb
sbbb
pop
xchg
dec
rol
in
sbb
sti
pop
inc
fistpll
arpl
cmp
mov
out
insl
push
sbb
fcmovnu
aas
mov
add
xchg
or
jns
jg
rclb
push
aaa
outsl
loope
js
dec
adc
push
mov
xlat
adc
xor
lahf
jge
movsb
mov
pmaxub
ficompl
jae
ficoml
fiaddl
dec
pop
aaa
lsl
sub
push
jnp
push
dec
cmp
loope
fildl
rcll
repz
jp
loop
mov
jbe
pop
pop
js
je
scas
add
shr
gs
push
ss
mov
xor
roll
fistl
sub
shrb
jae
icebp
loopne
pop
dec
stc
jg
mov
inc
mov
jae
jle
nop
jnp
out
or
testl
movsb
xchg
mov
into
pop
out
sarl
pop
or
test
lret
pop
mov
andl
push
test
cmpsl
and
out
ret
aam
std
je
jb
ljmp
cli
cmp
or
xor
push
jae
in
mov
add
sub
ja
in
ds
push
scas
pop
cwtl
jle
adc
xlat
inc
mov
pushf
shl
pop
cmp
je
mov
dec
lea
ror
hlt
jmp
das
lcall
and
sbb
mov
stc
or
fbld
pop
sbb
mov
mov
out
jno
hlt
xor
insl
jno
jg
loop
pop
je
into
imul
mov
pop
jo
pop
cs
imul
mov
cmp
add
cmp
stc
mov
add
inc
lock
mov
imul
cmp
dec
icebp
sarb
add
inc
mov
jg
scas
arpl
fwait
test
into
pop
jecxz
aas
stc
xchg
insl
rorl
push
gs
repnz
push
rcrl
sub
fisubrl
jnp
fisubrl
stc
fstpt
xchg
pop
xchg
add
into
add
je
jge
jg
fsts
ja
roll
sbb
add
gs
jns
fwait
xor
jnp
jp
arpl
test
loope
aad
cvtdq2ps
jmp
rol
jo
rclb
sbb
popf
sub
popl
aam
mov
js
cmp
pmulhw
dec
jne
cmp
ds
add
push
jp
dec
ds
int
js
outsl
or
jnp
leave
in
add
scas
aad
mov
add
jae
mov
xchg
lock
test
jae
pop
shll
jge
pop
dec
jo
out
int
das
mov
int3
bound
jo
nop
pop
cmp
negl
push
sub
jg
push
cmp
and
mov
mov
dec
sub
dec
mov
jle
add
cmp
shr
or
ljmp
pop
lahf
stc
jnp
pop
dec
nop
les
sbb
ret
sbb
int3
fnclex
ljmp
cmp
movsb
adc
and
mov
loop
jnp
arpl
inc
ret
mov
ljmp
jb
mov
mov
xor
test
cmp
rcl
seto
lods
call
jnp
mov
bound
and
push
push
cmp
pop
cli
aas
out
clc
rorl
popa
mov
pop
mov
leave
rcr
push
mov
sbb
aas
cs
out
inc
mov
sbb
sarb
fstpt
cmp
in
xlat
mov
loope
outsb
test
mov
push
mov
add
jne
rcl
leave
ret
push
xor
sub
jge
mov
dec
dec
pop
fidivrs
lds
ret
adc
inc
adc
pop
sahf
aas
jg
jecxz
int3
bound
jge
push
ja
stc
repz
jl
mov
cmp
out
add
lods
mov
stc
jnp
mov
insl
sub
lret
out
ret
les
inc
lods
adc
jae
pushl
dec
rcl
inc
inc
jg
imul
jno
cmpl
inc
jae
leave
aad
push
pop
lods
icebp
push
cmp
push
fdivl
jl
push
out
pop
jle
jge
out
outsl
into
mov
xchg
jl
outsb
movl
xor
into
fsubl
push
aam
inc
mov
daa
push
xchg
push
adc
adc
xchg
call
sti
inc
jmp
cmpsl
pop
inc
inc
fistpll
mov
mov
aam
sub
and
jnp
inc
fwait
addr16
in
mov
out
inc
sti
iret
xchg
hlt
stos
and
inc
xor
push
adc
push
sub
add
xorl
jp
icebp
imul
mov
nop
cmpl
rclb
push
jg
and
lea
mov
xchg
push
pushf
mov
jno
mov
jp
mov
jae
insb
hlt
mov
sti
pop
cmc
cld
je
push
xchg
xor
push
into
adc
out
and
mov
sub
ss
cmp
pop
cmpsl
pop
and
pop
pop
mov
lret
loopne
cmp
arpl
lret
gs
jns
iret
hlt
add
or
or
imul
cld
pop
dec
dec
pop
out
lods
rep
push
mov
jl
mov
jne
sti
jge
and
repnz
ja
jae
enter
sbb
cmp
leave
hlt
mov
cld
add
push
mov
jecxz
lock
add
inc
rorl
dec
add
add
jp
aam
jns
dec
xchg
jbe
and
test
jb
fistpll
sbb
push
cmc
aaa
clc
lock
fs
cmpsw
add
jne
addr16
loopne
imul
addr16
loopne
testb
sbb
testb
rol
leave
jecxz
fsts
sbb
xlat
inc
fildl
vfrczpd
mov
lahf
jp
mov
pop
or
popa
jnp
test
cmp
fs
mov
and
jle
pop
mov
clc
lahf
outsl
cmp
xor
data16
pop
mov
test
and
jb
out
arpl
fists
in
imul
incl
mov
dec
sbbb
pushw
mov
fcmovbe
fwait
push
pop
mov
xchg
pop
jbe
jg
and
movsb
and
movsl
call
mov
imul
fimuls
jno
mov
repz
ud0
call
pop
mov
dec
jae
adc
setae
mov
iret
cmpb
sbb
mov
jnp
lods
jne
test
imull
or
dec
out
cli
sti
adc
inc
mov
in
or
inc
insl
scas
sarl
jns
jmp
jg
and
pop
popa
push
cmovge
mov
clc
push
mov
fiaddl
fsubl
push
mov
mov
sbb
push
fbld
push
pop
out
and
cmpsb
sti
movsl
push
pop
push
aaa
jp
add
jge
ret
fildl
mov
push
xor
sti
jne
ds
xor
stc
stc
push
ja
mov
andl
jae
inc
aas
cmpl
or
xorb
ret
inc
push
mov
bound
jb
xchg
sbb
nop
ror
imul
pop
bound
jmp
std
and
or
out
fcoml
ljmp
jle
xor
jp
xchg
sub
int3
subb
movsb
dec
icebp
inc
lea
jns
xchg
inc
ret
jge
ja
decb
jno
or
sahf
or
or
mov
icebp
cltd
arpl
jo
and
shlb
mov
add
push
xchg
sysret
int
mov
mov
push
jbe
lods
cmp
cli
push
pop
dec
inc
jnp
ja
xorl
cmpsb
add
call
cmpsb
addr16
sbbb
rolb
jns
aaa
outsb
pminub
aas
jg
lds
test
jo
or
jmp
cltd
imul
out
xchg
push
ret
push
push
add
imul
pop
xchg
mov
aas
stc
xchg
and
out
mov
jnp
jno
clc
mov
jl
adc
ds
dec
sti
or
and
adc
jae
movsb
nop
jae
pop
push
jmp
addr16
sarb
insb
enter
push
xchg
imul
pop
or
xlat
jg
aaa
mov
fs
pusha
mov
jmp
dec
dec
mov
xchg
mov
pop
lds
fucomip
outsl
dec
jp
jnp
mov
sub
or
ja
xchg
jmp
imul
outsl
or
jns
sub
push
enter
xlat
inc
and
out
fwait
cmc
fwait
mov
fldt
in
cmp
jno
loopne
in
sbbb
in
mulb
dec
mov
popa
outsl
push
cmpsl
aas
or
dec
inc
and
adc
scas
mov
sbb
mov
lock
into
pop
cmp
popf
in
dec
shrb
xor
stos
push
clc
mov
mull
inc
fimuls
mov
popa
loope
and
push
insl
pop
mov
call
sub
adc
add
hlt
bound
loope
les
mov
stc
jns
jne
aad
sbb
test
shr
jmp
repz
fidivrl
push
mov
je
pop
sbb
push
in
aaa
out
cmp
jno
das
xlat
cli
clc
sahf
out
pop
lahf
inc
int3
mov
repnz
cmc
pop
jns
leave
pop
inc
mov
std
testl
xlat
mov
inc
mov
je
sub
repz
rcr
cmpb
ja
xorb
fistl
dec
xchg
jmp
sahf
ret
push
sbbl
jno
jg
loop
xor
xor
fsubrs
lret
jg
shr
incl
imul
inc
cmc
sub
js
and
out
lahf
inc
std
out
jl
ds
les
mov
cmpb
lahf
pop
xor
pop
dec
loopne
stos
in
aas
inc
subb
mov
mov
sahf
pop
and
xchg
jne
clc
inc
jmp
aam
dec
dec
mov
lahf
popa
movsl
inc
out
dec
inc
in
ret
and
pusha
and
and
ror
adc
cmpsl
lea
and
add
mov
push
in
xchg
jmp
mov
addps
cmp
push
jge
cwtl
lock
or
rcrb
xlat
jp
jo
test
icebp
bswap
xchg
sysret
addr16
ja
pop
cmp
xchg
ficomps
aaa
pop
lea
fnsave
mov
adc
sahf
pop
es
adc
pushf
je
add
and
mov
sub
lds
aad
andl
jnp
inc
out
pop
dec
lock
jae
rol
mov
cmp
sbb
sahf
int
jbe
and
or
jne
repz
dec
out
lret
pusha
enter
js
adc
fdivrl
and
pop
ret
jae
pop
not
fidivrs
in
les
pop
inc
pop
xchg
orb
cmp
jns
mov
jae
test
imul
pop
out
and
pop
jg
xor
jae
enter
add
push
dec
ret
inc
std
xchg
popl
out
mov
xor
jnp
mov
cmpb
inc
loopne
xchg
mov
and
jb
scas
outsl
punpckldq
mov
jnp
gs
pushf
add
arpl
jmp
jecxz
jmp
rcll
call
imull
popf
sti
call
pop
jb
rolb
icebp
jecxz
mov
call
aas
xchg
jp
jb
inc
orb
adc
push
inc
adcl
jb
repz
js
popf
pop
into
mov
les
andb
mov
pop
jg
rol
pop
test
jmp
jbe
js
lods
arpl
add
jp
jecxz
ds
stos
inc
jne
orl
out
or
outsb
push
or
test
mov
adc
aas
mov
in
or
call
pop
nop
int
inc
movsb
cmpl
or
notl
jecxz
adc
aam
repnz
pop
jbe
mov
fstps
jnp
push
or
das
push
sub
jle
mov
dec
pop
out
xor
sbb
jo
add
dec
nop
sbbl
jge
mov
push
mov
sub
stos
test
jecxz
inc
inc
ja
and
add
out
js
outsl
mov
ret
mov
xor
enter
adc
push
out
sarl
lods
mov
inc
in
mov
dec
jno
popf
loope
insb
cmp
js
inc
xor
icebp
fwait
pop
repz
mov
insl
and
push
inc
cmp
mov
ljmp
loop
repz
outsl
add
jne
jg
ja
arpl
dec
jge
jae
mov
mov
fimull
mov
rolb
jae
cmpsl
ja
fdivp
test
xor
jge
lock
pop
not
jae
je
pop
jbe
mov
mov
xor
push
rcl
or
shlb
cmpsl
mov
pmulhuw
hlt
inc
aad
lcall
dec
pop
xor
outsb
rcll
aas
mov
fildll
leave
inc
sti
das
decl
add
adc
imul
dec
dec
out
test
adc
cs
mov
cmp
and
and
jle
cmpl
sub
dec
mov
daa
sbb
daa
test
test
lahf
into
xchg
sub
aas
sbb
subl
or
ljmp
dec
jo
cmp
sbb
pusha
sbb
pop
addb
or
xchg
sahf
mov
leave
adc
pop
or
pop
push
xchg
iret
icebp
push
jb
incl
xchg
imul
fldt
leave
aas
add
aas
jns
inc
jnp
insl
js
cli
or
ja
pop
cmp
addr16
es
in
in
fsubr
jl
mov
shrl
add
iret
insl
pop
ficoms
jge
iret
or
jne
test
in
clc
ds
push
mov
cmp
loop
data16
mov
mov
and
cmp
pop
out
mov
popl
leave
out
jg
jp
sti
jbe
xor
mov
mov
inc
xorl
xor
jmp
pusha
js
sbb
push
mov
mov
mov
icebp
sub
in
pop
sub
pop
cmpsl
cmp
inc
pop
aad
mov
fcompl
jae
inc
pop
inc
arpl
out
shll
mov
idivb
sarl
pusha
jg
fs
inc
inc
xchg
in
ds
mov
repnz
mov
das
incb
jg
rcr
repz
shlb
popa
into
leave
dec
dec
mov
ds
imul
push
xor
and
lcall
jae
jb
add
in
insb
add
dec
mov
ret
jp
push
roll
and
push
adc
int3
fistl
jmp
shll
outsb
adc
arpl
ljmp
sub
jo
pop
ret
mov
out
ja
and
mov
ds
imul
xor
mull
iret
jg
mov
cmp
lahf
pop
jae
xlat
dec
cmp
add
movsb
imul
jge
leave
xchg
in
pop
pop
jbe
subb
and
add
mov
inc
fisubl
cmpb
xchg
pcmpeqw
cs
mov
clc
leave
sar
ret
or
cmc
dec
add
adcb
fadd
mov
push
push
jle
inc
test
ud2
pop
push
and
bound
in
mov
rcrb
cmp
lea
fdivl
pop
xor
arpl
inc
cmp
sbb
scas
insb
clc
dec
repz
add
mov
fsubrl
int3
cmpsl
dec
outsl
cld
int3
loope
xchg
pop
xchg
loopne
mov
and
push
mov
sbb
les
sahf
daa
insl
repz
decb
mov
cmp
sbb
jg
add
inc
xchg
or
xchg
addb
dec
in
lret
movsb
shrl
and
xor
lods
cmc
add
xchg
inc
bound
out
mov
cmpsb
lahf
test
je
add
movsb
out
nop
lret
pusha
jecxz
fistpll
ja
or
cli
push
pop
xor
push
data16
xor
outsl
imul
pop
lock
loopne
mov
hlt
in
xor
push
jns
fisubl
pop
leave
out
jg
mov
jno
aas
stos
jp
inc
push
cmp
jns
inc
lcall
sub
push
leave
test
clc
fimull
cltd
pusha
dec
int
mov
push
test
in
in
pop
jecxz
cli
xor
jg
or
mov
imul
push
cmp
xchg
and
inc
xchg
fcompl
xchg
arpl
sub
xchg
cs
xor
jns
nop
dec
enterw
xor
rorb
add
iret
inc
dec
stos
jae
and
arpl
mov
jg
push
cli
ljmp
xor
or
add
jg
mov
jo
jns
mov
fcomps
popa
adc
jo
dec
cli
psrad
cs
enter
data16
je
out
aas
out
mov
cmc
js
sti
lock
jl
ret
push
bound
mov
push
jb
pop
xor
adc
or
out
js
inc
sti
mov
lds
shlb
push
sub
aas
jnp
and
push
mov
out
pop
mov
orb
mov
int
xchg
push
repz
mov
or
ljmp
movsl
cs
sub
jge
cli
mov
jo
pop
sub
popa
fisubl
int
repnz
aas
vpxor
jg
xchg
fists
push
add
std
xor
mov
mov
adc
mov
addr16
cmp
push
aam
jge
xchg
stos
popf
cmp
jns
scas
aam
mov
jae
mov
jae
ja
jnp
aad
loope
push
jb
cmp
std
fsts
pop
lods
aad
ficomps
jne
inc
movsb
mov
add
ret
aam
pop
jno
add
pushf
cmp
dec
mov
jne
repz
mov
adc
mov
stc
clc
jno
xchg
mov
mov
cli
xchg
xor
shl
xchg
loop
jo
ja
repz
clc
jp
mov
adcb
sar
cmpsl
mov
fcoml
js
lods
mov
add
mov
dec
stc
lds
lea
adc
into
cli
add
das
bound
fnstenv
hlt
dec
mov
pslld
fsubp
loope
add
cmp
jns
lahf
faddl
add
and
cmp
mulb
fildl
dec
pop
jnp
dec
pop
fwait
andl
push
lret
mov
jg
dec
cmc
cmpxchg
lret
lahf
push
pusha
cld
xor
iret
je
fs
jp
fucom
inc
aas
shl
psubsb
popa
mov
dec
push
add
loop
call
xlat
or
mov
cmp
aas
or
mov
xor
cmpsl
cmp
insb
inc
ljmp
cmp
cmc
push
outsl
sti
movsb
cmp
jo
lods
pop
push
mov
repz
dec
in
inc
dec
xor
mov
orl
mulb
repnz
subb
dec
pushf
mov
and
movsl
or
clc
xor
imul
ja
das
mov
aaa
pusha
add
fisttpll
cmpsb
mov
mov
xor
add
lea
xchg
add
pop
fsub
decl
ja
cmp
test
dec
in
mov
outsl
insb
jne
sar
insb
jp
fcompl
fidivs
test
imul
lahf
pop
popf
inc
mov
leave
clc
sub
mov
jmp
jecxz
jnp
xchg
push
sub
add
jg
icebp
push
mov
and
xchg
test
sbb
mov
bound
jns
cmp
in
sti
lret
dec
dec
arpl
cmpsl
pop
xchg
jg
test
inc
loope
iret
icebp
mov
das
jne
mov
cmpsb
inc
neg
and
mov
js
jne
repz
mov
cmpsl
repz
popf
test
icebp
aas
add
mov
inc
jge
lock
cmpl
stos
inc
jnp
cmc
xchg
mov
in
cmpsb
mov
cs
mov
sbb
bound
jno
out
jae
inc
xor
and
into
les
into
push
arpl
push
hlt
push
or
in
scas
add
jle
and
lahf
fwait
inc
mov
jg
fmul
pop
add
add
jle
xchg
pop
popa
gs
dec
out
into
jae
je
cmp
cmp
add
xchg
jge
mov
add
rcll
idivl
fimull
and
repz
add
bound
out
jp
and
pop
sbb
push
jno
jecxz
subb
pop
fadds
aas
and
pop
sbb
sahf
pop
or
xchg
xchg
push
cltd
sub
into
adc
out
lret
mov
imul
cli
pop
xchg
inc
fcomps
xor
mov
mov
jnp
push
sub
mov
mov
rcrb
jno
cmpsl
mov
lds
sbb
pop
negb
shrb
jl
pop
fucomp
je
or
repnz
jae
mov
fsts
mov
scas
shrb
dec
and
ret
cmp
sbb
incb
push
stos
stos
call
cmc
cmp
fsts
stos
ljmp
mov
adc
lahf
or
sbb
fisubl
ja
ret
incl
arpl
rolb
jnp
mov
jg
mov
adc
mov
cmpsb
mov
jecxz
inc
std
fmul
push
negl
sarb
leave
dec
xchg
cmp
pop
xor
pusha
pop
inc
jge
or
int
jne
icebp
mov
mov
aam
inc
and
pop
setno
pop
sub
pop
insl
sbb
adc
scas
inc
cld
jnp
dec
pusha
test
jns
mov
mov
push
fwait
mov
fcmovnbe
mov
fistps
mov
aas
js
or
xchg
mov
push
jg
push
dec
cmp
bound
insl
fs
fldl
out
pop
jg
xorb
hlt
sahf
inc
add
and
iret
jmp
sub
nop
fsubl
pop
out
mov
jmp
xchg
jno
test
jns
int
sbb
int3
out
das
jne
outsw
jecxz
rol
lea
xor
out
sbb
lcall
cmp
les
ficompl
pop
fldt
in
fistpl
pop
insl
fmuls
lcall
dec
arpl
ja
stos
mov
fisttps
mov
adc
xchg
sbb
lea
jecxz
sbb
iret
lds
test
and
jecxz
aas
mov
mov
inc
js
loop
aaa
mov
add
mov
jo
adcb
mov
lret
dec
cwtl
jno
pushf
repnz
fwait
push
jno
cld
xor
mov
sbb
mov
sarl
aas
lcall
mov
fsubrl
aas
xchg
jle
std
fwait
and
jo
jns
mov
pop
xchg
sbb
jge
cld
jmp
aam
xchg
shl
fs
cmp
imul
int
fcom
leave
sar
fistl
jge
add
inc
iret
inc
pop
bnd
test
mov
outsl
addb
popa
push
mov
cmpsb
sbb
add
ja
stc
std
or
add
jb
jns
cmp
ss
in
inc
inc
mov
insb
js
lahf
in
cmp
jno
cli
divb
ficompl
gs
mov
or
ds
repnz
mov
push
lahf
mov
shrb
scas
cmp
fcompl
lds
les
in
enter
mov
pop
fcompl
dec
add
adc
cs
stos
lds
enter
jle
ret
cmp
mov
mov
jnp
xchg
fcoml
les
adc
mov
jle
mov
cmpsl
lea
ret
bound
jns
leave
idiv
test
or
xor
dec
xchg
jg
adc
aas
scas
jge
push
lahf
fidivrl
jne
inc
enter
arpl
popa
testb
repnz
fs
pop
pop
push
scas
jle
xor
xor
mov
pop
repnz
sbb
enter
cmp
push
aas
popf
lret
sub
imul
cwtl
lock
testl
push
dec
in
mov
and
add
xchg
and
repnz
lea
lret
or
scas
mov
in
cmpb
stos
inc
pop
incl
dec
icebp
mov
dec
xlat
jnp
jae
inc
ret
lret
inc
popa
clc
out
mov
jae
aam
insl
js
jecxz
icebp
lret
jle
int3
mov
push
ja
mov
cmp
mov
std
rclb
cwtl
xorl
das
pop
in
cli
mov
dec
mov
mov
jmp
loop
lahf
jb
mov
mov
pop
icebp
add
xor
cmp
movb
popa
xlat
imul
mov
or
fistpll
addr16
pop
setns
divl
mov
out
pop
pop
lods
nop
push
push
aas
mov
pop
cmp
imul
fisttps
fisubs
ds
arpl
jns
and
jno
add
inc
dec
aaa
fs
lds
pusha
andl
dec
jge
popl
sub
xorl
loop
pop
ret
movsb
mov
insl
add
inc
arpl
aam
shl
shlb
in
orl
push
jg
xor
clc
pop
pop
xchg
jp
push
iret
call
jb
and
dec
leave
call
xchg
inc
xchg
mov
pop
jmp
jne
mov
nop
sbb
mov
imul
loope
mov
pop
mov
dec
push
push
cmp
xor
pop
push
cmc
jb
jne
jp
les
iret
int3
iret
add
add
add
cmp
in
scas
dec
dec
cmpsl
add
iret
mov
dec
repz
in
lea
push
scas
xor
xor
pop
xor
int
inc
out
pop
negb
rol
sub
icebp
dec
aas
cli
icebp
mov
imul
jno
mov
add
push
mov
shrl
mov
mov
jae
xlat
outsl
loope
in
popa
sub
in
in
ja
cmpsl
into
roll
call
inc
inc
aas
cltd
dec
add
or
sbb
aad
mov
leave
cld
push
add
xlat
fsubs
iret
loop
sub
mov
bound
inc
shlb
mov
sbb
mov
add
jl
inc
mov
jg
mov
push
adc
inc
mov
jns
lret
inc
add
aas
loopne
lret
jne
pop
fsts
add
subb
arpl
inc
imul
iret
mov
jae
jno
mov
lock
pop
stos
lret
mov
mov
add
loopne
mov
into
jae
push
mov
ret
les
in
pop
cwtl
negl
shl
lcall
mov
mov
jns
xlat
js
arpl
shlb
rclb
clc
jnp
and
jmp
jle
inc
pop
push
push
lds
loopne
ror
lock
icebp
cltd
pusha
mov
add
inc
mov
orl
iret
mov
aas
call
test
ja
dec
nop
in
adc
jg
jb
cmp
xor
lock
jle
ljmp
pushf
es
test
decb
and
dec
add
imul
push
loope
fimull
test
cmp
mov
aad
sub
inc
fwait
push
jp
pop
test
mov
sarl
sbb
push
sti
cltd
lods
lds
push
adc
repz
shl
xchg
outsl
lods
pop
sub
mov
fwait
imul
push
xor
and
cmc
inc
test
jg
lahf
fnstenv
cmp
push
xor
mov
icebp
ss
aam
jl
lret
outsl
fcompl
shll
mov
pop
cmp
repnz
mov
and
faddl
subb
add
imul
je
jecxz
mov
cli
jbe
outsl
popa
jne
cltd
cltd
and
dec
and
scas
bound
subb
ljmp
fisubrl
hlt
cmp
mov
aas
outsl
cmp
stos
icebp
pop
iret
mov
jecxz
push
out
and
f2xm1
xchg
mov
mov
scas
jge
jg
adc
jg
inc
fs
xchg
pop
adc
and
test
ret
mov
shlb
mov
cli
add
cmp
mov
incb
iret
pop
sub
dec
jnp
cmpsl
ret
fcmovnu
push
cmp
into
dec
jecxz
xchg
xchg
mov
dec
je
adc
mov
pop
aaa
hlt
shlb
cmp
ret
bound
pop
decl
test
test
out
fmull
mov
outsl
loope
pop
adc
es
and
insl
pop
xchg
push
outsl
scas
mov
sub
jmp
cltd
jae
push
iret
push
or
cmp
stc
aas
push
decl
ret
pop
mov
sbb
sahf
adc
mov
xchg
das
push
add
aas
xchg
in
leave
test
mov
push
inc
mov
add
adc
ret
into
sub
mov
jp
fnstcw
in
push
pop
aas
jecxz
repz
shlb
shl
movsb
andb
add
arpl
ss
lock
incl
add
mov
jge
imul
jl
test
or
fcomps
push
sbb
cld
jnp
xchg
ficoms
inc
mov
out
and
pop
or
mov
and
pop
ljmp
je
mov
ds
pusha
insl
movmskps
push
jp
arpl
and
test
jns
outsl
or
imul
fistpll
pusha
negb
sahf
fdivrl
jecxz
ja
add
adc
fisubrs
sbb
add
pop
dec
inc
rcrl
pushf
jge
mov
pop
xchg
in
push
insb
lahf
cli
jmp
xchg
fisubrl
mov
nop
lock
sbb
inc
inc
imul
dec
push
xchg
pop
dec
push
loop
lock
jl
leave
fstpl
push
cmp
sub
cmp
and
or
xchg
jns
cmovge
imul
mov
jp
movsl
into
pushl
mov
adc
mov
or
icebp
adc
cmovle
fldl
mov
repz
pop
fistps
inc
out
inc
pop
pusha
xchg
push
jae
pushf
je
cmp
movq
shlb
push
push
shll
hlt
dec
mov
mov
mov
push
sbb
ffreep
or
dec
cltd
jge
rcll
out
je
popa
cli
sub
into
shll
cwtl
add
je
add
push
push
sbb
cmpsl
and
inc
out
popa
mov
inc
cltd
jle
jge
inc
jg
adc
aas
arpl
adc
rclb
in
mov
adc
test
mov
jle
loop,pt
add
dec
adc
shlb
popf
jg
mov
in
mov
dec
ds
mov
nop
daa
in
dec
into
sub
stc
jno
aad
aas
stos
aaa
bound
pop
pop
testb
push
arpl
and
sbb
in
mov
dec
imul
dec
popf
push
lea
fwait
adc
scas
jns
or
fiaddl
sbb
leave
fisttps
push
jl
jae
lahf
push
rorl
pop
pop
jnp
mov
outsl
xchg
test
jnp
mov
mov
aaa
loope
cmpsl
pop
jno
jecxz
aam
pop
js
out
cmpsl
std
fldt
inc
adc
push
leave
popa
enter
rcr
in
addr16
pop
cmp
int
mov
push
xchg
in
lcall
inc
mov
es
pop
jo
sub
sub
jbe
ja
jle
pop
or
pop
jl
leave
sbb
xor
and
push
subb
jp
pop
or
xchg
aas
xchg
and
xor
lahf
jge
pop
js
aas
cmpsl
std
insl
jno
pop
cmp
imul
push
fcmovb
pop
pop
mov
fmulp
or
orb
sbb
mov
lahf
je
lods
test
inc
jno
mov
jo
mov
ja
shlb
shlb
aas
cmpsl
out
loop
fistps
push
xchg
xor
pop
xor
mov
and
iret
add
loop
jne
add
mov
arpl
jnp
addr16
imul
add
repz
aad
ja
mov
mov
push
out
stc
cmp
jle
mov
popa
jae
out
fildll
ja
cld
repz
dec
aas
dec
and
out
pop
cld
outsb
outsl
std
loopne
jb
iret
jle
adc
dec
imul
fbstp
mov
push
repz
jo
js
sub
jg
mov
xorb
xchg
scas
ret
decl
inc
das
insb
in
push
lock
push
sub
pop
stos
and
popa
stos
jmp
push
mov
jno
mov
daa
int
and
fistl
jl
loop
addr16
jg
xchg
shll
mov
bound
fcmovne
jl
add
addr16
outsl
mov
xchg
mov
in
mov
sarl
stc
outsb
jne
add
popl
bound
ja
mov
repz
lret
mov
jnp
push
aad
jecxz
fldenv
jnp
mov
sarl
iret
add
aas
enter
lret
or
cld
lds
mov
lret
sarl
aas
push
cs
add
mov
mov
ret
push
mull
jg
divl
fwait
jae
adc
repz
add
jg
inc
lret
jge
adc
cmpsl
addr16
decl
jnp
andb
fsubrl
cmp
jmp
outsb
jbe
mov
push
cmc
push
outsb
fidivs
fisttpl
jl
add
data16
sub
mov
add
repnz
xchg
nop
int3
ja
jbe
rorb
push
js
jae
push
jo
jae
jno
jns
insl
subl
jg
mov
and
aas
lret
insl
and
and
int
orb
cmpb
jae
arpl
inc
arpl
fistl
jecxz
jne
ficoms
jl
ja
cld
dec
jne
call
jle
pop
and
push
inc
mov
fdivp
xor
shll
pop
pop
cmp
cld
inc
in
icebp
ret
jmp
ja
dec
cmp
mov
cmp
fcomps
xchg
lock
dec
das
cmovg
subl
lds
insl
jl
icebp
imul
cld
add
imul
pusha
jns
arpl
addl
inc
dec
lret
jnp
test
movsl
cmp
test
add
jnp
out
inc
pop
or
mov
jae
nop
pop
xor
adc
jne
loopne
int
jg
pop
lret
xor
imul
shl
mov
push
loop
bound
daa
fsubrl
cli
in
popa
negl
mov
cmp
lahf
cmpl
or
shlb
pop
dec
jp
mov
test
rorl
add
stos
scas
mov
lahf
and
icebp
aad
mov
xchg
pop
inc
aam
and
xor
aam
test
in
jmp
cmp
fildl
jp
lea
jne
pop
add
mov
mov
adc
into
call
popl
jle
jnp
and
rcll
push
push
shlb
jb
out
leave
mov
add
push
or
shlb
jno
add
mov
sub
les
scas
ret
dec
jne
jae
mov
movsb
gs
mov
inc
int
xlat
mov
cmp
ja
add
jge
es
dec
add
add
push
in
sbb
pop
xor
push
addb
push
in
push
cmpsl
inc
shll
pop
jecxz
push
and
out
lds
mov
imul
out
jo
imul
xor
xchg
jl
push
mov
inc
sub
jne
sub
pop
mov
adc
lods
mov
int
cmp
mov
lret
or
insb
leave
add
call
shll
mov
loope
sbb
inc
add
adc
lods
mov
adc
jno
cmpb
or
and
pop
adc
rorb
mov
dec
mov
cltd
aaa
into
das
jp
fcomps
or
testl
xor
and
js
adc
mov
in
stc
aad
fmuls
dec
testb
push
adc
mov
jae
mov
add
jns
add
into
add
jl
fildl
sbb
rorb
loopne
mov
mull
jnp
cwtl
inc
mov
pop
dec
jns
pop
jnp
sahf
add
pushf
jo
and
pop
repz
jnp
inc
cmc
fcomps
lret
stos
xchg
sbb
sub
pop
adc
repnz
add
in
add
and
outsl
jnp
std
cmp
into
ja
add
aad
sub
push
and
jb
fldenv
xlat
outsl
push
pop
loope
out
call
ds
les
pop
cmp
fs
and
inc
push
popl
pop
dec
cmc
jno
cmp
stos
fstl
mov
jnp
scas
xor
ret
aas
mov
dec
rorl
pop
aas
add
adc
pop
jp
sbb
mov
mov
xchg
mov
or
and
into
jle
sbb
std
xor
outsl
repz
add
mov
loope
aas
ja
xchg
push
add
imul
mov
sarl
or
dec
das
add
mov
mov
or
outsl
xor
decl
mov
pop
rol
pushf
clc
inc
cmpb
leave
lcall
outsl
fs
and
cltd
mull
imul
out
iret
lret
out
stos
sub
or
cmp
addr16
mov
pop
mov
mov
in
ficoms
mov
cmp
jnp
add
outsl
fcomip
inc
jl
add
dec
lahf
jecxz
xchg
mov
popf
aas
ret
cmp
jecxz
cmp
arpl
fcmovnu
arpl
ficomps
and
fildl
addr16
shl
xchg
mov
ret
neg
test
jae
jnp
xchg
fwait
jmp
mov
jnp
mov
rol
jmp
lret
jg
movsb
insl
cmp
jle
mov
outsl
jnp
popf
bound
sbb
or
stc
push
mov
aas
mov
cmpb
testl
into
shlb
popa
popa
cmpsb
mov
mov
cmp
mov
movsl
dec
sbb
and
sbb
mov
cmovg
inc
cmp
cmp
into
sti
inc
repz
push
out
lock
or
mov
cli
sub
test
xchg
mov
push
sahf
scas
add
sti
add
xlat
jns
iret
ficoml
daa
push
ljmp
add
ret
cmpsb
mov
mov
adc
pop
xchg
out
push
cmpsl
jg
adc
mov
sbb
hlt
iret
dec
outsl
push
add
mov
push
pushf
jnp
xchg
pop
stos
cmp
rolb
outsl
xchg
adc
xchg
icebp
cmpsb
stos
mov
arpl
sti
inc
mov
movb
mov
into
xor
mov
and
rorl
xchg
shr
aas
ret
dec
pop
test
movsl
dec
movsl
xchg
push
enter
ret
int3
orb
push
outsb
mov
ja
rclb
ror
stc
scas
adc
test
call
cmp
mov
jbe
test
xlat
imul
mov
out
mov
jg
in
push
pusha
jg
or
imul
movsb
scas
fisubrs
cli
add
jnp
test
or
mov
xor
and
adc
shl
cltd
testl
jns
lret
jno
fistpl
jns
dec
mov
adc
dec
test
mov
fadds
fucomip
cli
in
pop
adc
xchg
xchg
decb
mov
jg
es
jns
pop
adcb
sub
dec
pop
dec
push
adc
and
mov
mov
mov
and
aaa
push
in
jo
lds
fdiv
loope
sahf
orb
cmp
lcall
inc
push
jno
cwtl
fwait
dec
loop
popa
test
or
or
or
mov
orb
xchg
fisttps
fwait
xchg
pusha
lret
js
hlt
xchg
int3
sub
xchg
push
inc
xchg
mov
push
fildll
pop
and
lret
insb
fistpl
leave
push
jnp
and
cld
cmp
ret
xchg
iret
xlat
push
out
sub
out
push
leave
inc
insl
jmp
shr
andl
and
leave
stc
iret
xor
mov
or
cmc
jge
mov
lahf
mov
mov
in
mov
cmp
addr16
jbe
dec
cmc
rolb
addr16
clc
aam
sbb
mov
cmpsl
shlb
add
clc
in
mov
cltd
clc
imul
int
pop
mov
out
sub
xchg
out
xchg
idivl
jns
std
mov
adc
xchg
dec
xchg
inc
xchg
out
dec
lea
lahf
lret
or
bound
and
jl
inc
push
mov
mov
fwait
mov
pop
add
add
aam
mov
fprem1
lret
in
fsts
jge
test
mov
sub
sub
jne
ja
daa
cmp
mov
fs
out
repz
xchg
or
or
idivl
xorl
icebp
fistpl
lret
bound
push
xchg
lahf
jp
add
ds
jg
pop
push
cli
cmpb
jmp
adc
cld
mov
xchg
gs
arpl
fcomi
cmp
outsb
jno
pusha
jl
jnp
clc
sahf
jne
ja
mov
lods
arpl
add
imul
fstl
push
jae
out
xchg
imul
mov
fwait
sub
push
dec
in
cmp
mov
pop
rcr
mov
shl
xrelease
stos
jle
add
pop
dec
decb
jg
out
xchg
int
ds
adc
lods
adc
into
hlt
push
out
sbb
jae
push
movsb
adc
movl
shll
ds
lds
in
inc
push
orb
scas
out
in
mov
push
jge
test
cmp
and
dec
cmp
rol
sbb
adc
and
loop
adc
push
pop
in
sbb
inc
pop
jo
fneni(8087
loopne
sbb
jne
pop
imul
or
scas
jge
stc
cmpsl
mov
jge
jp
jns
stos
shl
pop
movsb
add
cld
jnp
js
add
out
xchg
mov
cmpsb
dec
fists
test
faddl
bound
xchg
loope
adc
or
gs
arpl
out
and
cltd
push
mov
les
inc
jne
in
cmp
pop
mov
out
mov
sahf
dec
orb
daa
andl
scas
xlat
sarb
adc
xchg
xor
mov
out
mov
scas
testl
inc
mov
mov
mov
inc
imul
nopl
xor
aas
push
mov
int
in
mov
idivl
andb
test
push
and
test
xor
icebp
loope
jle
mov
and
int
sub
sti
cmp
inc
jns
xchg
cmp
sti
push
pop
push
lret
mov
pminsw
mov
out
popa
cmp
push
mov
cs
aad
dec
insb
lds
aaa
cli
add
sbb
andb
movsb
mov
sbbb
inc
mov
rcl
dec
adc
lret
xchg
push
les
jne
or
inc
orl
fwait
imul
jnp
and
fistps
sti
inc
idiv
sub
lcall
fadd
scas
jp
xchg
outsb
fcmovnu
ret
int3
jg
test
or
loopne
mov
mov
sahf
adc
fdivrs
fisttpl
dec
and
sti
sbb
int3
pop
jmp
jnp
cmpsb
dec
in
xchg
out
lds
inc
push
icebp
in
add
gs
and
loop
int
inc
repnz
jg
lea
fwait
in
sub
data16
fstpt
dec
stos
cmpb
sarb
cmp
movsl
stos
loope
sar
lahf
stc
sti
mov
cmp
ret
jae
jecxz
or
fsub
int
pop
imul
cmpsb
out
pushf
xchg
loopne
les
aas
jle
popa
sbb
jno
aam
leave
adc
loope
sub
mov
adc
enter
cld
fildll
ficoml
jp
arpl
jmp
mov
inc
cmpl
mov
cmp
or
pop
leave
adc
cmc
movsl
adc
pop
jns
inc
fimuls
inc
add
mov
mov
cmp
out
jae
inc
add
cld
mov
add
and
cmpsb
das
fmuls
into
ds
jae
mov
lahf
fildl
dec
xchg
sbb
push
inc
add
cld
mov
leave
das
mov
push
std
jb
or
mov
mov
flds
mov
jbe
mov
fs
ljmp
add
mov
add
mov
dec
decl
filds
add
pmullw
and
cmp
lret
fldt
jnp
pop
pop
ja
or
sbb
pop
sub
mov
inc
cld
das
push
mov
jle
push
es
and
lock
cmp
scas
out
sub
pop
mov
mov
sbb
stos
jnp
jns
in
adc
out
jge
inc
rolb
cli
ret
mov
and
es
inc
dec
mov
xchg
adc
loope
repz
insb
mov
nop
aaa
mov
jae
fldcw
in
fadds
push
mov
test
ret
add
es
dec
lods
lret
cmpsb
dec
ficompl
mov
mov
outsb
scas
jge
cmp
clc
insl
jecxz
in
mov
push
xchg
in
push
push
sbb
out
jge
scas
mov
jo
inc
aad
jle
call
ljmp
mov
stc
fldcw
sub
shrb
imul
xchg
aas
fimuls
sbb
pushl
addr16
gs
push
and
push
insl
mov
arpl
mov
pusha
negl
jge
mov
outsl
dec
sub
jmp
roll
jns
mov
jl
mov
int
add
das
out
xchg
loop
inc
xchg
js
ljmp
fwait
lock
mov
mov
and
dec
cltd
test
aad
push
adc
je
int
mov
push
adc
push
rcr
ret
push
mov
out
cmp
push
cli
jb
add
push
fcoml
sub
std
mov
out
dec
divb
mov
stos
fwait
jno
jge
xchg
jae
jbe
mov
adc
mov
add
and
call
cltd
lret
mov
dec
pop
inc
pop
test
cmp
inc
add
fdivl
push
scas
mov
and
jb
mov
mov
push
int
mov
rcr
pextrw
cmp
jecxz
xor
xchg
int
jns
push
mov
and
or
jae
mov
sbb
jns
or
dec
ljmp
filds
mov
movsl
mov
out
sahf
test
inc
jns
insb
cmp
sbb
add
out
inc
outsl
lods
push
clc
into
cmc
jle
sub
pusha
fidivrl
popa
xchg
push
pop
cltd
fwait
jmp
das
fsubrs
dec
cmpsl
or
pusha
loop
inc
in
loope
add
jl
call
shr
icebp
ds
fwait
out
adc
fcomps
gs
addl
pop
enter
mov
shrb
xchg
add
loopne
sbbb
lds
packsswb
loop
aam
stos
push
mov
and
jbe
jg
movsl
repnz
popa
ds
ret
xor
and
pop
iret
jne
lock
xlat
add
mov
dec
jb
sbb
fmull
in
xchg
jb
test
and
lahf
mov
js
mov
mov
movsb
dec
icebp
mov
mov
push
xchg
or
lret
std
inc
cmp
cmp
test
aas
dec
rol
sbb
dec
add
mov
dec
arpl
pop
pop
pop
jle
mov
push
add
or
cmpl
mov
ds
shll
pop
outsb
iret
stc
lcall
cmpsl
insl
ret
jo
aam
aas
loopne
mov
shrb
mov
sub
mov
rorl
cs
cmp
test
push
rcrb
pop
mov
aaa
xchg
xchg
loope
mov
stos
mov
ret
andb
xabort
and
fs
push
push
jns
push
mov
popf
jg
mov
add
sbb
pushl
jno
jg
ret
and
pop
testl
jmp
imul
and
sahf
movsl
push
aas
mov
xor
push
outsb
pop
inc
outsb
paddusw
xor
gs
and
pop
into
ljmp
sub
andb
insl
fwait
mov
mov
pop
outsl
movsl
mov
stos
out
dec
js
fldt
push
cmc
scas
lret
adc
push
pop
jge
pushf
mov
data16
jp
pop
dec
or
ror
lcall
mov
ja
subb
push
mov
xchg
idiv
outsb
hlt
jnp
pop
movsb
das
repz
mov
adc
test
pop
movsl
add
shl
gs
data16
add
push
cmpl
inc
push
cld
sub
jns
js
jns
xor
sub
pop
push
lret
outsb
shl
test
inc
xor
sbb
add
jnp
std
mov
test
mov
shlb
mov
out
int
adc
lret
mov
idivl
jns
push
dec
std
fs
jae
pop
and
notb
out
leave
rcll
sbb
lea
out
stc
lods
jb
mov
lock
out
mov
and
outsl
mov
inc
or
jle
jmp
jecxz
cli
repnz
dec
dec
dec
or
gs
repz
jb
cmp
lcall
xchg
movsl
fcoms
lahf
mov
shll
icebp
push
jbe
cwtl
and
movsl
sub
out
jecxz
mov
mov
outsl
push
sub
xlat
ss
sbb
das
bnd
cmc
psubusb
jp
repz
cmp
mov
pop
sub
push
dec
inc
jg
pop
mov
iret
jb
rorl
scas
adc
mov
mov
add
stc
lods
pushf
adc
cld
cmpb
lcall
int3
repz
enter
pusha
mov
push
aas
and
cmp
push
cs
mov
cs
imul
fldcw
mov
cli
stos
je
out
sbbb
popa
add
ljmp
cmpsl
outsl
mov
popa
xchg
clc
add
mov
add
ret
jmp
xlat
jge
loop
inc
loop
jnp
jnp
roll
shl
fwait
in
mov
stc
mov
jb
loop
jb
lret
push
jb
xchg
jle
scas
pop
rorl
fwait
clc
mov
cmpsl
cmpl
ret
jmp
jg
mov
add
cld
jge
push
divl
jne
loop
repz
fistpll
mov
and
leave
not
jns
fcomip
rolb
loop
stos
sbb
cmp
call
push
imul
popa
std
int3
inc
fcomi
jge
fwait
bound
stc
call
add
mov
idivl
loop
sti
fldt
shrb
aam
sahf
prefetcht0
shll
shll
das
mov
fidivrl
scas
xlat
loopne
cld
in
stc
call
push
sub
jg
pop
insl
xchg
iret
mov
jno
rcll
pushl
addb
add
sbb
cld
mov
movsb
pusha
push
dec
pushf
imul
mov
orb
lahf
imul
das
mov
into
jmp
lar
add
add
fdivrp
mov
aad
rcll
add
pop
and
xchg
jg
lahf
icebp
shll
lret
push
imul
mov
pop
cmpsl
and
xchg
adc
fildl
lds
iret
mov
or
in
cwtl
std
scas
addl
int3
cmp
or
mov
test
idivb
xor
adc
sub
addl
sbbb
mov
mov
orl
popf
inc
test
outsl
mov
mov
push
mov
lds
mov
test
pusha
repz
push
into
mov
adc
dec
cli
pop
ret
rorb
hlt
fdivrs
aam
xor
pusha
daa
movsl
insl
xlat
lock
cld
inc
popa
xor
shrb
ret
sbb
adc
jns
mov
addl
lahf
pop
insl
aas
mov
repnz
insb
cmc
stos
movsl
test
mov
loope
or
sti
inc
or
xor
dec
add
lods
insl
push
bound
icebp
test
shl
fdivrs
xor
xor
add
cmpsb
sahf
pop
jns
push
dec
pop
aas
inc
inc
mov
repz
jge
ret
mov
hlt
or
in
movl
pop
xor
add
in
test
flds
xchg
lods
and
arpl
sbb
mov
fsubl
inc
jecxz
jne
sub
testb
sahf
pop
icebp
out
mov
fcomps
cmp
add
pop
push
dec
in
aam
fadds
and
lea
jnp
aas
and
cmpsl
popf
add
inc
sbb
cmpsl
add
or
jl
loop
outsb
jnp
ljmp
xlat
inc
push
cmc
xchg
xchg
xor
fwait
inc
fists
sub
inc
movsb
inc
pop
push
roll
cld
and
stos
loop
xlat
push
rcll
xchg
ljmp
gs
outsl
xchg
lock
enter
mov
fistpll
mov
mov
sub
mov
mov
daa
stos
imul
inc
les
jecxz
xor
and
and
es
add
lea
rorb
add
cmp
out
outsl
inc
or
cld
xchg
xchg
test
int
clc
mov
aas
jnp
imul
mov
jg
push
push
and
lahf
mov
and
mov
cmp
push
data16
mov
mov
addb
pop
gs
mov
push
and
scas
mov
jae
mov
jg
xlat
jp
leave
cmpb
jl
lods
sbb
mov
leave
inc
add
fwait
mov
outsl
ret
push
jle
jae
and
pop
jae
data16
movsl
dec
sbb
mov
std
roll
add
and
cli
and
mov
out
subb
inc
mov
int
test
jne
in
jnp
push
jge
rcrb
test
cmp
mov
xchg
or
ret
or
insb
mov
pop
stos
adc
jp
imul
add
or
and
leave
addb
shll
add
aam
aas
les
jp
xchg
pop
jl
add
jns
ja
fistpll
addr16
sbbb
stos
jge
push
push
sbb
jae
xor
outsb
adc
cmpsb
fcomps
xor
loope
or
xchg
shlb
pmaxub
lahf
mov
ficomps
adc
aas
xchg
jns
sti
rcrl
scas
loope
rolb
dec
jle
dec
add
mov
cli
jge
add
cmovg
pop
lds
orl
mov
jge
out
xlat
lds
sub
mov
fadds
pop
mov
pop
adc
sti
enter
shlb
lret
sbbb
dec
adc
mov
outsl
or
outsl
test
out
inc
xor
adc
adc
test
push
jl
invd
adc
push
xchg
mov
test
ja
cld
repnz
and
scas
add
push
rorb
cmp
sub
fiaddl
adc
dec
ret
xchg
xlat
pop
mov
mov
outsb
jae
xchg
mov
arpl
jmp
pop
jg
mov
xlat
mov
mov
push
mov
in
dec
test
or
mov
mov
inc
jle
lahf
imul
cmpsl
mov
popa
cld
cltd
cmpb
xorb
fiaddl
adc
jno
fsubrs
aas
movsb
movl
shlb
adc
adc
mov
push
ret
pusha
shl
mov
inc
repz
jbe
mov
iret
push
fists
ja
push
dec
cmp
pop
stos
ret
pop
mov
jge
push
jno
jle
cmpb
int
hlt
leave
out
outsl
or
jecxz
imul
add
mov
lods
movsl
outsb
jo
mov
negl
pop
xchg
adc
push
and
cmp
fwait
add
or
rcr
inc
and
test
inc
je
lods
fmull
lret
dec
test
mov
xchg
jns
cmpb
push
cwtl
inc
fnsave
xchg
xor
and
ss
cmp
jno
sti
sbb
dec
rorb
pop
push
jns
cmp
lods
std
arpl
xchg
jae
cmp
push
sbb
lahf
push
xchg
int3
or
in
push
xchg
jl
mov
mov
scas
lret
jno
ret
xchg
or
jns
pop
jo
aaa
scas
fldcw
push
xor
cwtl
cli
mov
jge
into
adc
in
outsl
test
cmp
add
js
fbstp
inc
insb
pop
ja
inc
and
lret
rcrl
or
aas
insl
add
ficoms
cmp
sbb
je
aam
pop
out
aas
mov
popa
mov
mov
adcb
test
add
iret
subl
push
pop
jl
mov
lahf
xor
xor
iret
mov
out
sbb
mov
mov
mov
cmc
and
shrl
mov
scas
cli
mov
and
mov
lret
aam
mov
inc
inc
gs
ret
movsb
cmp
lock
xchg
jnp
aad
shr
clc
adcl
mov
and
xchg
in
mov
xlat
shll
sub
jle
xchg
sbb
push
jbe
add
jg
ja
ds
out
mov
out
testl
add
xchg
gs
adc
jne
popf
and
mov
mov
in
and
fwait
inc
push
je
lods
sarb
icebp
stos
repz
pop
dec
cli
xor
arpl
xchg
ror
addr16
decl
inc
movsb
outsb
in
in
ds
adc
mov
leave
aas
and
push
cmpsl
mov
fwait
stos
mov
push
fisttps
mov
and
bound
jae
fs
leave
loope
mov
jns
sahf
lahf
jnp
or
ret
mov
fidivrl
add
add
aad
loope
shlb
cld
inc
push
in
xchg
ret
mov
mov
enter
jo
cmp
pop
stos
fmul
test
gs
jg
jno
xchg
jge
bound
into
add
imul
push
fimuls
jecxz
jns
dec
xchg
mov
loope
int3
mov
aas
add
and
ret
stos
cltd
mov
imul
xor
cmp
pop
movsb
mov
outsb
lods
mov
fdivs
into
and
adc
push
lcall
and
dec
push
in
std
arpl
mov
push
call
inc
sub
xor
fs
in
xchg
loopne
ficoms
outsl
iret
xor
mov
es
xchg
mov
mov
imul
mov
xchg
outsb
xor
loop
jae
xchg
data16
iret
bound
popf
clc
cmp
dec
or
mov
jecxz
cmp
and
movsb
mov
addl
out
leave
insb
ljmp
loopne
jns
imul
iret
add
mov
xchg
rorb
jg
stos
jp
aaa
sti
jp
jae
jns
mov
scas
jmp
pushf
add
pop
adcb
push
inc
or
popf
adc
imul
xor
cli
mov
lock
add
test
cmp
push
ds
orb
loopne
pop
jecxz
mov
loop
push
push
add
shl
fldcw
test
ret
subb
xlat
xchg
push
or
fnstenv
and
shrb
jns
xchg
xchg
add
or
and
insb
jl
jnp
pop
in
sbb
adc
push
adc
lods
ja
push
mov
ficomps
ss
xchg
test
clc
sqrtps
mov
scas
movsb
aam
pop
jb
outsl
mov
scas
dec
xorl
xchg
add
imul
movsl
and
mov
jne
push
inc
popf
fisubrs
jno
jp
movsb
cmpl
scas
jnp
repz
cli
leave
jne
sar
arpl
mov
xorl
arpl
cli
push
and
dec
loopne
loop
icebp
and
popl
ret
mov
xchg
adc
iret
pop
movsb
mov
test
mov
push
add
loop
jno
jmp
add
and
iret
cld
popl
fs
and
inc
push
iret
cli
jg
rcrl
and
daa
and
loop
jge
icebp
mov
jl
cmp
fimuls
cli
add
jns
jecxz
jo
push
in
pop
push
call
inc
mov
shrb
push
mov
push
mov
loop
scas
mov
dec
mov
jnp
lock
dec
iret
jnp
mov
xor
mov
jg
jne
sub
mov
arpl
mov
shl
pop
mov
arpl
fsub
mov
mov
and
out
adc
cmpl
es
iret
mov
loope
orl
push
movsb
xchg
fwait
jle
push
xor
insl
xor
mov
scas
mov
test
pop
lret
sbbb
popf
rol
xchg
in
into
jnp
push
lock
leave
jns
int
pop
push
pop
into
xor
or
sub
lods
pop
mov
jp
test
dec
jae
cmp
scas
mov
pop
jae
dec
xchg
cmc
jecxz
insl
pusha
mov
outsl
shld
das
cmpsb
jge
xchg
popa
jo
pop
pusha
cmp
jo
fdivr
frstor
fisubrs
xor
add
or
dec
jl
fmuls
cli
jp
cltd
and
outsb
test
sbbl
ret
xchg
and
push
or
ja
inc
jnp
jle
pop
in
inc
sub
jnp
mov
sub
sub
xor
sbb
mov
scas
mov
out
cmp
jle
pop
lcall
cmpb
jecxz
inc
movsb
xchg
stc
decl
or
outsl
xor
loop
push
jge
sub
lret
int
ljmp
add
mov
xchg
jb
jle
add
mov
rcr
xlat
mov
push
stc
mov
sub
outsl
test
jmp
xchg
decb
dec
icebp
test
sar
inc
in
fwait
inc
inc
xor
into
or
mov
xchg
push
fcomps
mov
aas
push
rorl
lahf
cltd
repz
mov
cmp
vdivpd
xchg
sti
cmp
sbb
xor
sti
push
dec
sub
push
fcmovu
fwait
jae
aam
inc
and
cmc
xchg
mov
adc
jp
xchg
imul
lds
fstps
in
mov
mov
leave
mov
pop
or
jp
test
cmp
test
adc
test
mov
mov
xlat
stc
gs
push
jnp
icebp
or
inc
loope
arpl
cmp
imul
jge
jns
hlt
pop
loopne
in
xchg
lcall
mov
mov
icebp
iret
mov
icebp
add
ret
scas
inc
test
push
ror
push
stos
dec
mov
mov
neg
jae
jg
fidivrs
jnp
inc
mov
fdivl
js
or
into
cld
js
test
mov
cmpsl
push
and
insl
and
fistps
fucomp
or
jecxz
push
cltd
out
mov
jge
shll
inc
lods
and
push
les
mov
iret
push
add
sub
aas
aam
icebp
fnstsw
push
div
div
mov
les
cmp
ret
and
andl
sub
pop
sub
inc
push
mov
out
push
ret
jge
pop
jp
inc
cmpsb
cltd
sbb
jae
add
dec
into
fidivrs
fwait
clc
jns
mov
cmp
pop
inc
mov
hlt
push
aas
jecxz
xor
pop
fstl
scas
fwait
outsl
fdivrl
mov
and
ja
jp
jne
out
mov
leave
das
rdtsc
cmp
pusha
lock
imull
adc
push
pop
mov
out
xor
aaa
inc
and
lcall
sbb
ss
sub
sarb
icebp
cmp
ret
outsb
les
or
mov
mov
and
cmp
jg
test
pop
xor
stc
ret
cli
mov
push
dec
shl
loope
xchg
dec
dec
dec
adc
test
mov
xor
cmp
jmp
inc
scas
or
cmc
gs
rcl
lock
inc
and
test
adc
inc
ds
cmp
and
decb
lock
loop
jmp
out
test
rorl
lds
jno
int
pusha
push
rcrb
loopne
xchg
outsl
js
inc
adc
push
cli
dec
add
jbe
push
or
xlat
mov
lods
out
jecxz
adc
sbb
push
inc
jg
addb
and
addr16
inc
jmp
outsl
cwtl
jns
xchg
mov
arpl
loope
sub
jp
jp
mov
out
mov
jg
sub
stc
mov
into
lock
sbb
pop
test
insl
test
push
ret
mov
lret
popf
sbb
mov
inc
test
test
inc
xor
imul
mov
imul
jle
or
sub
insl
fisttps
jecxz
mov
test
jmp
pop
idivl
fnsave
test
lret
jb
sbb
or
mov
imul
sub
lahf
cmpsb
into
fdivl
in
or
mov
cli
mov
mov
pushf
adcb
mov
gs
mov
or
pop
jge
daa
inc
cmp
and
push
sti
and
xchg
push
aas
dec
cmp
and
mov
ds
fisubs
aaa
icebp
fsubrs
cmc
aaa
jle
stc
outsb
cld
ror
insb
jb
stc
decl
iret
mov
pop
inc
mov
or
add
sahf
iret
xchg
insl
iret
xchg
ret
jmp
js
fsubl
mov
pop
add
pop
stos
xchg
inc
mov
jnp
rcr
faddp
jge
int3
push
mov
push
mov
adc
dec
sub
jge
and
stos
sub
loopne
outsb
and
jns
xor
popa
mov
ja
adc
shl
jo
cli
jne
add
int3
rorb
lahf
sub
pop
sbb
dec
cmpsb
rcr
je
push
lret
stos
pop
cmpsb
xchg
int3
fmull
je
ret
inc
ljmp
xchg
sbb
out
mov
and
cmp
cmpsb
and
adc
push
mov
cmp
cmpsl
inc
xchg
jg
mov
lock
xor
into
imul
sub
cmpsl
pop
popl
pop
lds
insb
mov
ss
sbb
enter
daa
pop
cmp
fnsetpm(287
jae
xlat
in
repnz
lret
andb
shl
add
jmp
fidivrs
out
popa
push
mov
cmpsl
dec
sbb
and
add
jno
outsl
movsl
pop
aad
mov
shll
test
pusha
int3
jmp
cltd
mov
loop
jnp
lods
inc
ret
das
xchg
ret
mov
mull
idivb
int3
hlt
xor
repz
adc
rorl
cmp
inc
jecxz
xchg
sahf
add
int3
push
jo
jns
pop
mov
lret
sbb
jo
leave
jge
lds
scas
imul
mov
mov
and
cmp
aad
adc
outsb
inc
popa
stos
xor
xor
cmp
cmpsb
lods
pop
lock
cld
inc
mov
test
loopne,pt
cmpb
inc
jne
ret
popa
fidivl
jnp
jnp
imul
shrb
inc
inc
mov
loopne,pt
cli
jnp
and
or
inc
insl
fcomi
jg
mov
dec
xor
ret
mov
sub
scas
std
enter
xchg
aaa
ret
out
std
mov
fldenv
mov
mov
mov
loop
mov
jle
add
popa
ret
cmp
jnp
adc
mov
mov
outsb
jno
movsb
cmp
dec
fsubrl
mov
adc
mov
jmp
dec
jg
out
dec
dec
fst
or
gs
cmp
xor
cmpsl
arpl
xchg
bound
rorl
outsl
sahf
sbb
inc
sbb
stc
arpl
ljmp
rcrb
ljmp
ret
xchg
xor
lret
add
ds
lods
fdivr
xor
in
xchg
into
jmp
mov
pop
cwtl
mov
out
fldenv
movsb
cmp
mov
std
mov
jg
loope
pop
dec
inc
mov
or
pop
adc
es
or
jle
js
pop
dec
fists
fnsave
ret
daa
negb
fidivs
pop
jbe
fists
mov
ja
add
dec
stos
mov
out
imul
and
inc
adc
cmp
bound
adc
fisttpl
imul
dec
mov
orl
xor
inc
stos
mov
fwait
or
and
lea
jb
in
fidivl
in
dec
icebp
push
daa
ljmp
in
in
inc
xchg
ret
cmc
mov
fcoms
jne
out
lds
inc
xchg
inc
push
cmp
notl
sarl
clc
pop
lods
mov
push
xor
mov
ja
cmp
push
jns
mov
rcrl
push
and
nop
mov
pop
adc
lock
enter
sti
movsb
ljmp
imul
lret
jecxz
push
push
icebp
imul
pop
xor
push
pop
pusha
leave
mov
call
pop
jae
mov
push
mov
adcb
cmp
jp
mov
jp
imul
pushl
lret
xchg
push
divl
mov
fs
pop
arpl
iret
mov
aaa
mov
dec
pop
mov
cld
mov
inc
clc
repz
cmpl
adc
xchg
insb
insl
push
out
push
jl
lcall
inc
cmp
mov
les
jp
or
cmc
loopne
loope
out
ret
cwtl
test
sbb
lret
je
imul
push
jle
in
test
js
or
movsl
mov
mov
push
scas
fucomp
dec
xorb
pop
cmpsb
inc
int
jmp
gs
pop
aad
cli
outsl
push
mov
mov
stos
fistpl
or
jbe
xchg
mov
mov
in
enter
mov
pop
push
mov
imulb
aam
movsl
or
fists
and
mov
and
iret
not
sub
adc
dec
stc
inc
cmp
clc
push
sahf
sub
and
fdivl
push
in
cmpsl
shl
lods
adc
cli
lea
pop
jns
sti
cwtl
add
pop
mov
fstpt
sti
pop
dec
jb
ja
cld
pop
jns
cld
iret
fisubl
in
mov
jmp
dec
jae
jae
lret
xor
jp
mov
adc
imul
mov
mov
xchg
mov
sbb
mov
mov
xchg
dec
push
sub
fdivrl
cmp
lahf
mov
fidivs
sbbl
pop
xchg
jge
mov
repz
aas
loope
fucom
sbb
mov
je
pop
mov
jnp
in
outsl
jmp
in
ja
idivl
adc
mov
or
mov
inc
psubusw
and
imul
inc
addr16
mov
or
lret
sbb
mov
sti
insb
mov
push
ret
sub
cmpsb
xlat
rcll
fdivrl
insb
lret
stos
inc
mov
jp
sub
pop
addr16
sub
insb
mov
test
in
inc
mov
loop
fistpll
jnp
inc
push
jp
and
repz
cmp
mov
xchg
scas
pushf
inc
jo
dec
sbb
imul
cli
push
loopne
or
movsl
mov
jnp
sbb
das
loope
dec
sti
shlb
not
imul
call
add
dec
cmpsl
mov
xchg
adc
sub
insl
into
loopne
sub
insb
aaa
xor
jne
std
js
bound
dec
mov
dec
popa
dec
mov
adc
ret
sub
icebp
adcb
shll
cmpsb
dec
mov
dec
jne
jb
and
arpl
cmp
mov
jo
jp
lock
xchg
or
jmp
mov
sahf
hlt
dec
xchg
arpl
mov
movsb
push
std
cli
add
mov
cmp
dec
jmp
hlt
outsb
icebp
jecxz
leave
cmc
mov
lcall
mov
fildl
out
push
dec
fldt
sub
inc
jecxz
cmp
jo
jg
xor
inc
jg
dec
xchg
negb
jmp
add
cmp
mov
dec
insb
out
push
ja
ljmp
push
mov
jge
fstpt
cmp
fs
fcmovne
sub
sub
adc
jae
lahf
xlat
jo
mov
sarl
loope
int3
mov
cmp
cmp
lods
or
push
mov
out
mov
and
mov
mov
jge
and
jnp
mov
cmp
and
repz
ss
popf
es
mov
xchg
cmp
idivb
movl
mov
jae
jnp
jns
and
dec
in
daa
loopne
les
cmp
fstl
add
sbb
sahf
inc
ja
scas
stos
out
inc
jmp
jns
imul
sti
js
shrb
add
push
enter
out
xor
xchg
sbb
push
cs
scas
test
aas
cmp
mov
dec
aam
loop
sbb
xchg
call
sbb
lock
pop
movl
sti
shll
repnz
nop
sub
arpl
mov
das
flds
mov
loopne
adc
in
pop
mov
sahf
jae
data16
and
ror
xchg
hlt
lret
dec
inc
push
add
and
out
xchg
cmpsl
and
mov
and
sahf
fisubrl
in
lods
xor
ljmp
add
sub
mov
adc
ret
scas
xchg
xchg
mov
aas
jecxz
mov
ds
jns
sahf
push
pop
add
cmp
ds
xchg
pusha
jge
cmpb
and
faddl
add
xchg
ljmp
cli
mov
rcrb
insl
aas
repnz
scas
xchg
xchg
add
push
cwtl
fwait
bnd
jp
ja
fldl
out
lds
mov
pop
rolb
xchg
jmp
cmp
or
pop
arpl
in
mov
xchg
ds
loop
pop
add
rcr
jb
fildl
jns
mov
out
loope
out
ffree
mov
cmp
imul
xchg
pop
jmp
ja
and
adc
inc
test
or
int3
mov
push
les
sub
inc
jo
dec
and
addr16
jns
xorb
lods
repnz
jo
cs
ret
out
lds
jne
pop
jnp
movsl
jbe
jg
mov
sbb
fimuls
jle
incl
fistpll
into
cmc
xorb
stc
loopne
push
push
pop
popf
sbb
add
push
sbb
or
aas
sub
mov
pop
dec
or
jbe
ss
arpl
and
fisubs
cltd
insl
js
pop
daa
les
pop
ret
add
orl
test
push
mov
mov
sub
out
das
aas
aas
sbb
call
stc
data16
sbb
mov
xlat
jmp
or
jp
clc
fdivs
sbb
cmp
aaa
loope
icebp
out
cmc
lahf
mov
jecxz
mov
jecxz
jnp
push
cmp
push
imul
in
xor
icebp
lock
imul
lock
test
arpl
mov
int3
jmp
out
lret
shl
lcall
mov
xchg
mulb
inc
jns
les
loopne
ret
push
shl
cmpsl
insl
cwtl
jmp
pushf
adc
popf
dec
sub
dec
xchg
adc
inc
addr16
jecxz
xchg
mov
jns
lcall
iret
mov
cmpb
xchg
mov
jae
movsl
push
decl
sbb
arpl
je
popa
ja
out
les
inc
sbb
orl
xor
and
loopne
jp
mov
push
pushf
sub
lret
iret
mov
or
data16
xchg
push
push
mov
push
dec
rclb
xchg
cmp
dec
mov
xor
je
jl
fmull
clc
push
mov
jno
push
cmc
xor
lods
clc
iret
fiadds
sbb
das
push
jbe
loope
dec
dec
iret
push
loopne
arpl
xor
ss
aad
mov
mul
xchg
mov
adc
shl
fcoms
cmpsb
in
xchg
jnp
adc
shlb
and
push
xchg
jmp
xor
or
imul
push
testl
enter
popf
lret
jmp
sub
in
in
ret
mov
ret
pop
or
ret
push
jnp
mov
aas
xor
lock
test
sbb
les
leave
cmpl
adc
mov
mov
jge
ret
mov
fwait
cmpsl
mov
les
add
fsubrl
fnstcw
mov
mov
push
fiaddl
sbb
cmp
loopne
xchg
outsl
pop
adc
sub
pop
pusha
adc
sub
jnp
cmc
out
adc
mov
adc
mov
enter
push
pop
push
inc
scas
js
sahf
flds
cmp
sbb
ja
pop
aas
sbb
fyl2x
jmp
arpl
or
dec
adc
das
or
inc
cld
inc
addl
inc
mov
xlat
push
scas
pop
mov
rorl
push
sbb
out
aam
lcall
pop
cmp
jle
jg
ljmp
push
sarl
es
rcl
xor
cmp
jnp
xor
cmpsb
lret
jl
movsl
add
lret
gs
ja
mov
dec
sbb
cmp
ds
icebp
mov
mov
cmpsl
repz
call
inc
in
dec
jne
lret
sub
fnstenv
cmp
jne
icebp
cmp
pop
cmpsb
icebp
mov
mov
jge
dec
cs
enter
fdiv
rolb
enter
cli
int3
xchg
aas
addb
pop
imul
sub
jmp
ret
xchg
inc
pop
or
sub
pop
outsl
and
mov
in
dec
fcompl
leave
loope
outsb
pop
shrl
jle
mov
push
inc
fisttpll
or
imul
xchg
fs
fwait
popf
mov
ljmp
mov
addr16
mov
jg
adc
sahf
ret
xor
jp
hlt
cmc
cmp
push
xchg
nop
arpl
data16
fcomps
out
fbstp
sbb
and
pop
dec
cltd
jno
fistl
movsb
mov
adc
adc
popf
fdivs
imul
pusha
arpl
loopne
fnclex
popf
jo
pop
imul
jmp
aam
mov
cwtl
dec
lret
dec
je
xchg
inc
jae
mov
iret
fimuls
mov
xlat
mov
fidivs
test
cmp
cmp
fcoml
dec
push
mov
mov
icebp
arpl
cmp
mov
xchg
fstp
stc
xchg
add
mov
mov
rorl
cmp
inc
mov
mov
enter
in
xchg
pop
and
sbb
or
mov
in
into
fcoms
bound
push
std
mov
outsb
cli
inc
jmp
and
jbe
pop
fbstp
and
cmpsl
movsl
and
pop
xor
loope
add
ret
std
pusha
jg
popf
sub
mov
fisubrs
stc
dec
pop
pop
in
mov
fidivs
lods
dec
and
push
adc
mov
sbb
sbb
pop
xchg
jnp
js
das
pop
and
xchg
imul
fsubl
daa
xchg
cltd
test
popl
es
xor
sbb
cmp
lods
cs
mull
movsl
rcll
aad
out
rcrl
mov
lahf
decl
mov
push
and
imull
jnp
cmp
subl
push
ret
fstpl
fstpt
xor
sub
test
dec
lea
ds
subl
cmpb
popa
lcall
call
fdivs
xchg
fcompl
xchg
jbe
lds
mov
movq
sub
add
push
bnd
jb
or
out
jae
jg
pop
pop
jns
dec
in
test
sahf
pushf
jns
daa
mov
adc
push
jno
popf
js
imul
lahf
mov
mov
xchg
clc
inc
jg
stc
or
dec
in
pushw
js
out
sub
addr16
pop
pop
test
mov
xlat
mov
inc
mov
push
aaa
pop
outsb
ficoml
xchg
pop
jns
fld
sti
jae
andl
sub
mov
inc
inc
jno
es
xlat
sbb
dec
in
xchg
cltd
test
mov
xorl
jne
mov
imul
addr16
mov
int3
sti
arpl
xchg
sti
xchg
ret
lods
cltd
cmp
fs
inc
ret
outsb
mov
out
fcoml
and
inc
sub
leave
movsl
out
insl
sub
xlat
fists
jne
cltd
outsb
rol
loop
shrb
sub
jne
push
cmpsl
in
add
cmp
or
ss
mov
adc
add
subb
mov
inc
bound
imul
ud2
mov
jp
ret
daa
adc
lcall
cmp
xor
rorl
aaa
jnp
mov
push
leave
pop
fists
lahf
cmpsl
xor
mov
mov
pop
push
jb
sub
jge
call
mov
lods
cmpb
pop
iret
adc
add
movsb
or
push
push
pop
loope
lea
daa
out
mov
add
lds
push
daa
cwtl
jl
sarb
xor
data16
loope
imul
sub
mov
cmpsl
jl
mov
xchg
fildl
pop
add
pop
fildll
in
mov
jmp
enter
lret
push
jl
lahf
push
mov
mov
sub
aas
mov
lock
dec
xorb
lds
jne
incl
lods
xchg
test
inc
in
aad
push
pop
roll
arpl
mov
fwait
jno
cmpsl
cmp
out
mov
in
mov
sbb
add
pop
aaa
sbb
push
jmp
aas
enter
xor
adc
mov
sahf
repz
lods
cli
ret
inc
mov
or
xchg
imul
pop
andb
into
jle
out
dec
xchg
nop
inc
and
lock
lock
jg
dec
popf
jge
rclb
fwait
sbb
push
sti
cmpsl
cmp
ret
inc
clc
push
or
sahf
push
pop
pop
ja
shrl
loop
sub
sub
daa
cmp
leave
jne
test
mov
jnp
sub
sub
jmp
rorl
aad
pop
int
in
loop
adc
push
pop
clc
adc
inc
negl
lds
adc
xchg
adc
std
leave
jg
xchg
popa
mov
out
push
push
mov
leave
pop
inc
inc
test
cmp
jb
lahf
testb
stc
pop
xchg
xchg
jae
jle
sti
sbb
xorl
push
or
pop
mov
leave
and
push
stos
push
out
push
xchg
push
rsqrtps
pop
aas
fdivl
lret
cmpl
jbe
mov
inc
and
ret
dec
loop
fnstenv
sub
jge
inc
fdivl
scas
pop
subb
ds
les
jp
scas
jge
jno
xchg
insl
jns
cmp
lods
cmpb
loopnew
mov
arpl
mov
xor
mov
xor
add
scas
jnp
arpl
fcomp
shl
call
jo
leave
jno,pn
scas
pop
push
imul
stc
aas
rclb
lock
jno
and
mul
aas
xchg
orb
jnp
mov
in
push
mov
sub
mov
leave
into
clc
fldt
sarb
add
into
jbe
cmp
fsubs
jecxz
cli
std
inc
fyl2xp1
cmp
jge
gs
out
out
jp
mov
pop
xlat
push
loopew
jecxz
dec
and
pop
je
adc
cwtl
idivl
mov
push
fnstsw
jb
push
lret
or
mov
arpl
inc
jmp
inc
jb
mov
jae
leave
call
xchg
out
mov
pop
cmp
inc
test
cli
enter
push
js
lock
jge
out
das
call
jno
and
mov
aad
add
ljmp
lea
stc
cmp
sbb
fstpt
xor
out
xchg
aam
std
add
cmpl
lcall
push
repnz
or
pop
mov
cmp
test
enter
mov
pop
add
bswap
push
ss
adc
jb
or
jno
test
cmp
enter
mov
xchg
mov
fmul
decl
mov
lods
movsb
or
pop
and
or
scas
jnp
dec
dec
jecxz
jns
push
sbb
lods
jnp
rcrb
aam
pop
jnp
enter
icebp
push
add
in
jg
pop
pop
jb
push
fimuls
in
inc
push
sti
and
xchg
jb
push
sbb
or
xor
lods
cmp
jno
push
imul
inc
pop
pop
in
adc
aas
sub
orb
lret
sbb
popa
adc
pop
add
in
add
lods
mul
decl
ffreep
jmp
aad
mov
repz
in
iret
cld
aas
cltd
sub
mov
lods
mov
and
inc
mov
fwait
arpl
outsb
pop
add
std
outsl
sub
push
idivb
inc
nop
mov
jge
mov
and
inc
movsl
in
inc
out
cltd
push
cli
lods
rcr
bound
pusha
dec
xchg
xchg
mov
pop
cs
loope
push
lahf
mov
faddl
lock
and
dec
movl
jmp
mov
push
add
mov
bound
xor
xorl
loopne
lock
mov
fxch
loopne
loopne
imul
js
add
popa
loope
xor
jns
ds
sarl
scas
xor
xchg
movsl
xchg
jae
popl
add
pop
mov
push
ret
out
cmp
xlat
pop
mov
pop
and
cmpb
std
jns
test
cmp
icebp
mov
subl
inc
rcll
cld
andl
mov
repnz
cmp
and
test
mov
cld
pop
das
mov
mov
inc
add
pop
ffree
pop
shll
or
lods
ret
cmp
add
xor
xor
into
fsts
ljmp
jge
dec
jecxz
ja
out
call
fs
cmp
lods
jno
inc
sub
mov
pop
mov
sub
mov
pusha
xor
clc
daa
iret
mov
pop
sub
ja
stos
jne
das
test
push
and
sbb
bound
inc
push
add
push
aam
xchg
pop
mov
jle
shlb
sti
pop
mov
movsb
stos
aas
shrb
push
test
mov
les
adc
scas
in
and
popf
rcr
xchg
push
xor
fbstp
add
jmp
jge
mov
shr
jnp
inc
push
or
add
jl
ja
jge
aas
add
aas
out
and
xor
addr16
push
ret
mov
icebp
loopne
rcrb
shlb
in
sti
out
xchg
mov
cmp
add
loop
lea
push
or
test
lahf
push
jns
add
clc
xchg
mov
fisttpl
pop
ja
arpl
xor
mov
scas
test
mov
and
cmpsl
scas
push
outsb
push
and
outsl
lods
adc
sbb
jp
xchg
sbb
pusha
xor
mov
push
les
shlb
jle
sbb
dec
fdivs
vandps
insb
sbb
fiaddl
pop
jge
dec
lds
sbb
xchg
out
and
jne
or
ret
mov
mov
mov
clc
filds
cld
rolb
cwtl
lahf
cs
lea
ud1
dec
pop
jg
mov
mov
dec
ljmp
in
inc
cmp
add
stc
mov
lahf
adc
mov
jge
mov
out
jg
xchg
adc
add
xchg
shrl
mov
cmpsl
mov
dec
or
int3
std
andb
push
aaa
adc
inc
mov
ds
ja
sti
sbb
icebp
mov
xor
jmp
aam
sbb
fisubs
lods
adc
xchg
mov
enter
sti
jge
cmp
add
aam
fldt
fdivrs
dec
jp
sahf
mov
incb
adc
incl
sub
xchg
insl
mov
cwtl
mov
cld
out
push
repz
in
fs
int3
mov
icebp
cmp
xchg
add
inc
call
inc
xor
cld
inc
lret
pusha
cmp
mov
jnp
jnp
and
mov
add
mov
imul
cmp
adc
mov
sub
mov
sub
ficoms
dec
xchg
out
mov
jp
sub
out
cmp
fsub
out
cmp
fisubs
cmp
fidivrs
mov
rol
push
and
out
cmp
jg
mov
andl
cmp
aas
fistpll
icebp
xchg
ficomps
test
addb
jbe
jbe
addr16
sti
xor
jl
loopne
repz
aad
push
mov
aad
jbe
pop
rcl
add
add
fwait
stc
ret
fmuls
testl
adc
incl
insl
in
je
adc
add
fwait
jmp
xor
mov
loope
into
ja
inc
scas
outsb
sbb
push
push
jg
js
mov
jns
cmp
ljmp
lea
jge
ret
fndisi(8087
and
lods
imulb
out
cltd
adc
les
test
lds
fcomp
fistpll
pop
pop
dec
mov
ja
adcb
ror
or
jnp
jno
ljmp
aad
lcall
sub
out
enter
adc
popf
hlt
cmp
sub
data16
arpl
js
jno
adc
cmp
sbb
add
aas
roll
imul
cmc
jbe
pop
pop
shlb
xchg
fs
pop
jb
aas
cmc
mov
dec
iret
test
mov
test
pop
ja
enter
arpl
jns
inc
gs
mov
decl
add
mov
cmp
sbb
fnstenv
xor
jne
jg
inc
jnp
sar
icebp
lcall
xchg
int
rolb
fidivrs
jo
xchg
xor
cmp
je
fldl
mov
jbe
jae
movsl
shl
jae
mov
xor
aad
mov
int
inc
xor
movl
fdivrl
and
ja
jp
pop
fdivs
xchg
mov
ds
jecxz
cmpsl
jle
arpl
pop
sbb
lock
fldcw
loop
add
inc
add
fbstp
fcomip
jns
std
bnd
lods
fnstsw
pop
xchg
pop
ja
cmp
add
stc
scas
lcall
and
adc
cmpb
mov
repnz
popf
inc
test
in
xor
imul
add
add
out
dec
outsl
daa
mov
std
stos
add
fdivrs
mov
aad
inc
out
mov
outsl
orl
push
pop
jle
jnp
test
jp
adcb
leave
lock
popf
jbe
out
mov
in
xor
push
pop
jnp
neg
jb
and
dec
fst
inc
ret
aas
subb
js
mov
push
outsl
leave
imul
gs
cwtl
aaa
std
shl
pop
mov
fidivl
imul
cmp
jg
ds
call
mov
or
add
and
data16
pop
std
out
fildl
lret
xchg
gs
jle
pop
push
scas
mov
adc
sbb
jmp
xor
aaa
ja
xchg
or
imul
xchg
imul
xor
ds
sbb
pop
enter
push
fmuls
shll
arpl
iret
int
lcall
negb
test
pop
movl
cmp
in
repnz
cli
dec
js
cmc
popa
or
push
outsl
xor
stos
jbe
lock
fs
and
mov
jle
or
and
jmp
arpl
fldenv
sti
sbb
imul
mov
xchg
out
xchg
loope
jge
lock
pop
in
lret
xchg
leave
outsb
je
mov
hlt
jbe
push
push
and
pop
pop
iret
ret
mov
scas
aas
loopne
lock
out
add
lret
push
arpl
mov
pop
and
pop
xchg
and
test
repnz
ja
in
mov
inc
jns
jo
inc
mov
jmp
fidivrs
xchg
mov
mov
cs
mov
repnz
inc
popf
out
mov
jle
inc
add
filds
popa
or
lods
paddusb
in
or
sahf
js
movsl
mov
lock
mov
mov
mov
jp
cmpsb
cmp
push
dec
jp
dec
xor
jg
ss
repz
add
sub
fbld
into
add
fnstcw
shrl
jp
xchg
cmp
xor
xor
mov
cmpsl
xlat
shrl
push
fisubl
push
lret
cmpsl
popf
daa
out
ret
fwait
hlt
mov
imul
add
fimuls
pop
pop
mov
jecxz
daa
arpl
cltd
pop
jp
add
scas
inc
lds
imul
iret
jge
xchg
mov
ds
pop
jnp
fiaddl
sbb
les
rolb
out
sub
cs
inc
inc
mov
stos
fwait
cli
jne
add
icebp
mov
mov
push
fs
fld
in
cwtl
add
ja
ret
in
out
loope
jg
fcomi
and
stc
jo
push
pop
fdivrl
and
ret
add
dec
push
enter
divb
mov
subb
fs
mov
cmp
xor
xchg
std
aam
pop
and
jnp
push
jge
ja
mov
and
sbb
lea
out
jns
jno
add
loopne
add
jae
ja
addr16
imul
jg
pusha
xchg
mov
mov
inc
imul
mov
inc
out
pop
jae
cmc
iret
dec
dec
flds
clc
bound
aas
push
insl
lahf
lret
mov
and
sti
adc
dec
mov
cltd
ret
jmp
cmp
sbb
out
xlat
inc
add
dec
push
push
mov
push
xchg
hlt
inc
lcall
jb
sub
js
aad
leave
int
sarb
push
outsb
gs
addl
pop
aas
jnp
inc
adc
sbbl
push
pop
daa
and
sbb
pop
mov
and
sub
scas
jb
movsl
jno
clc
sub
inc
adc
repnz
mov
fwait
ds
loopne
aas
xchg
scas
lods
ret
adc
pop
jb
ja
loopne
push
push
push
stos
loope
rcrb
push
aas
cmpsl
add
ja
movsl
rcrl
lahf
jae
add
hlt
jmp
xchg
ret
lods
mov
jmp
cmpsb
pop
adc
in
xlat
cmpb
mov
sbbl
push
imull
mov
jge
mov
sbb
cmpb
inc
push
adc
push
mov
add
push
cmpb
jb
xchg
movsb
addl
pop
mov
sarl
xchg
leave
cmp
sbb
mov
mov
sub
add
loop
xchg
xchg
pop
and
push
jmp
push
dec
jns
lock
inc
aas
fsubr
pop
push
cli
and
mov
sub
out
jne
xor
cmpsb
int3
dec
rol
dec
or
testb
ljmp
jnp
movsb
imul
push
xorl
decl
pop
push
xor
into
fdiv
pop
dec
add
pop
xor
sahf
pop
cmp
in
shll
aas
jge
inc
out
jae
mov
je
inc
add
icebp
cli
push
popl
mov
push
scas
and
inc
outsl
mov
and
xchg
hlt
popa
imul
mov
jmp
cltd
and
xchg
dec
push
jp
aam
cmpsb
mov
inc
sbb
aam
addl
cmpsl
sbb
sahf
mov
fadd
iret
sbb
xor
sbb
rcl
push
sbb
jo
imul
into
orb
xor
mov
cwtl
std
adc
xlat
inc
in
fstpt
xor
pop
xor
xchg
test
mov
popa
mov
inc
dec
test
jne
fdivrs
aam
loop
aas
jg
lods
push
shlb
jp
mov
leave
in
bound
fwait
testb
cmp
incl
lret
adcl
fcomip
inc
jecxz
repz
jge
in
popa
mov
call
dec
gs
push
pop
jg
ja
fwait
in
jne
roll
dec
mov
movsl
fisubs
mov
xchg
mov
or
sahf
out
add
xor
mov
cmpsb
imul
andb
jnp
pop
xchg
mov
pop
lret
daa
nop
decl
jnp
sbb
fisubrl
inc
jnp
loopne
add
push
sub
sbb
push
scas
adc
add
in
and
addl
fsubrl
fcoms
sub
aam
jp
js
lea
into
or
push
out
sbb
xchg
inc
sub
xchg
jns
out
mul
pop
out
shl
nop
sti
test
enter
shrb
push
pop
fcmove
icebp
jecxz
inc
shrl
jns
adc
das
lods
and
mov
or
das
insb
xchg
fs
mov
inc
ds
adc
fildl
jge
leave
xor
adc
scas
xor
push
mov
inc
ljmp
mov
lahf
jae
fstp
lcall
add
lahf
hlt
bound
add
out
jmp
sbb
add
adc
div
adc
sti
jg
jae
repz
push
in
fwait
int
push
scas
testl
cmp
push
arpl
inc
in
jecxz
mov
repz
icebp
add
fxch
aas
dec
jg
fdivs
inc
pusha
mov
pop
imul
gs
adc
loopne
mov
in
jg
mov
fsubs
and
leave
add
cld
jbe
push
out
fimuls
je
mov
pusha
push
mov
ds
hlt
popf
aas
sub
jo
je
pusha
arpl
pop
jge
sbb
jbe
out
sbbl
add
sti
cld
movsb
sbb
pop
jecxz
outsb
lret
frstor
pushf
dec
and
mov
nop
into
jle
cmp
push
or
add
ret
mov
clc
mov
cld
sbbb
pop
andl
adc
jp
leave
sbb
mov
add
aaa
cmp
cmp
cmp
or
fists
pop
sbb
push
popa
push
sar
out
leave
cmc
arpl
mov
xorb
add
lock
ud2
div
jmp
add
cltd
and
into
aam
icebp
mov
mov
jg
pop
lcall
pop
mov
fildl
push
adc
add
jo
arpl
xlat
mov
pop
cltd
test
cmp
or
xlat
je
cltd
xchg
push
jp
out
fisubs
sahf
xor
loop
jnp
sahf
mov
cmp
pop
loope
clc
int3
sub
fcomip
or
push
sbb
mov
test
push
lcall
decl
ss
data16
mov
adc
xchg
and
sar
add
shll
subl
movsb
dec
and
sub
fimull
jle
icebp
imul
mov
jbe
jb
test
idivb
icebp
pop
leave
mov
arpl
je
xlat
xor
xchg
inc
testb
ret
push
imul
or
out
ja
xchg
jae
push
cmp
mov
test
jp
adc
fisttps
and
jp
out
in
out
cmp
mov
daa
mov
insb
xchg
sub
pop
iret
js
push
jnp
stos
add
leave
xchg
cmp
ljmp
or
mov
xor
cmp
ret
inc
sub
outsl
xor
and
jno
aas
add
std
mov
mov
xchg
testl
pop
sar
push
rolb
push
and
cmp
xor
push
jg
js
pop
ja
js
repnz
inc
mov
aad
xchg
mov
lea
cwtl
pop
shl
jne
mov
mov
cwtl
dec
jnp
cwtl
fimuls
xchg
cmp
xor
cld
cmp
shll
push
testl
insl
add
fwait
add
mov
loop
stc
in
ret
inc
loopne
imull
jmp
add
ljmp
out
jns
andb
jmp
pop
jno
push
cmp
pop
dec
in
cmp
sub
push
jecxz
bound
mov
jg
loop
out
jmp
imul
sbb
fistl
ret
ljmp
jae
iret
jmp
sarb
adc
pop
push
popf
loope
mov
out
mov
ljmp
lret
adc
ds
dec
sbb
aad
fisubrs
jp
mov
push
sbb
mov
xchg
lds
or
jae
fwait
xchg
insl
jle
xor
in
jg
jp
addr16
repz
test
icebp
out
xchg
push
xor
add
jge
rcll
or
loop
jo
sar
adc
xlat
sti
popa
stc
push
hlt
repnz
mov
cli
into
mov
sbb
mov
adcb
inc
ret
jecxz
mov
gs
sbb
rcrb
sub
jbe
cmp
ja
stos
daa
imul
xchg
out
add
in
and
addr16
jge
xchg
bound
cmp
adc
mov
sub
xchg
dec
and
xchg
pop
or
loop
repz
leave
jns
xchg
stc
cmp
cmpsl
xor
xlat
pop
pop
jle
aas
inc
jnp
sbb
jno
lret
cmpsb
xor
stos
or
fucomp
xor
mov
icebp
pop
gs
push
cltd
stc
add
repz
fidivrl
flds
movl
jmp
inc
out
out
mov
in
push
and
iret
jo
bound
outsl
int
inc
punpckhdq
cmp
pusha
fsubr
out
xchg
imul
lods
xor
pop
cmpsl
gs
mov
aas
jmp
rcll
cmpb
and
out
les
ds
popf
push
pop
shll
popa
add
pop
fbld
and
jae
fisttpl
jo
cmp
sub
in
add
out
cltd
dec
pop
xchg
push
popa
lods
out
imul
xchg
ret
les
nop
xor
in
jne
in
inc
jns
jl
xor
sub
mov
call
pop
sbb
out
inc
aam
ret
xchg
dec
mov
inc
or
jge
sbb
lea
fimull
lds
imul
dec
sti
sub
mov
clc
sbb
push
jnp
jp
jae
add
outsb
js
mov
jl
cltd
lahf
sbb
pop
fcomp
pop
shl
push
testl
mov
mov
dec
insl
stos
push
loopne
stc
fldcw
and
lods
push
adc
and
cmpsl
inc
cwtl
test
in
rcll
and
movsl
in
and
sub
jne
popf
sbb
ja
pop
cmpl
loope
cltd
mov
ljmp
fsub
lahf
push
or
fs
cmc
xchg
idivb
mov
movsl
rorb
out
adc
mov
jg
aas
ja
ljmp
imul
mov
cmp
mov
faddl
cmpxchg8b
ja
push
jne
out
jo
shlb
pop
pop
mov
out
mov
cmpl
and
mov
ret
pop
imul
adcl
dec
cmp
jae
and
lock
xchg
xor
iret
fistpl
inc
mov
sub
adc
mov
and
xor
dec
jns
cmpsb
fbld
andb
lds
mov
dec
in
addr16
popa
add
fcoms
and
inc
sti
mov
pop
test
push
aam
cltd
cmovo
pushl
xchg
push
orl
lahf
push
cmpsl
mov
mov
loop
loopne
repz
sti
andb
lahf
sub
pushl
xor
mov
inc
test
sbb
pop
shl
cmp
xor
jmp
and
lret
rorb
cmpb
mov
aas
push
jnp
in
rolb
test
iret
fstps
dec
fstl
mov
xchg
outsl
and
and
data16
rorl
cli
add
jle
repnz
inc
aas
mov
lock
leave
and
ret
mov
mov
adc
arpl
inc
test
fnsave
out
filds
dec
sti
xchg
imul
jne
ret
popf
ss
js
repnz
rcrl
mov
test
sbb
iret
xchg
mov
cmp
mov
xlat
ffreep
decl
jg
js
aad
xacquire
jns
add
adc
lcall
cmp
out
xor
pop
inc
jmp
or
jae
pop
repnz
fs
loopne
iret
dec
mov
xorl
push
mov
pop
js
mov
mov
aam
scas
xchg
bound
testb
in
fidivrs
jae
mov
out
dec
leave
sbb
push
cmpsb
cmc
push
shll
int
pop
cld
pop
sti
inc
frstor
mull
jg
lods
xor
xor
jb
ret
scas
shlb
repnz
xor
cmp
js
and
movsl
cmp
or
leave
dec
into
add
push
adcl
jo
mov
push
mov
jl
add
enter
loope
ds
insl
push
mov
push
cmp
push
ja
inc
aaa
imul
push
and
fmuls
nop
xchg
ljmp
in
jns
inc
outsl
clc
jns
bound
imul
mov
in
or
cld
pop
adc
xchg
lods
loopne
fmuls
jecxz
fldt
mov
pop
jg
add
lret
and
test
imul
in
test
lods
xorb
inc
ret
loopne
pop
movsl
ljmp
pushf
pop
mov
lahf
jne
in
xchg
repz
testl
aas
pmaddwd
adcb
mov
out
ljmp
jno
mov
out
ja
ret
push
mov
mov
ret
cld
dec
imulb
sbb
sub
ffree
sbb
movntps
push
fsubr
enter
xchg
idivl
push
mov
cmp
inc
xor
les
xchg
ljmp
sub
pusha
ret
loop
jle
jmp
mov
push
mov
test
inc
ja
inc
xchg
leave
outsl
pop
push
cmc
movsb
xor
push
cvttps2pi
or
in
xchg
test
lahf
push
sub
inc
ret
push
sbb
call
jle
mov
dec
imull
sahf
add
xor
xor
lock
stos
sub
movlps
xor
cmpsb
rcrl
aad
jg
xlat
and
mov
fisubs
add
sub
xchg
jns
cli
jnp
pop
mov
test
fdivrs
int
shlb
lock
mov
int
jne
loope
push
inc
loopne
dec
xor
iret
sahf
lock
pop
xchg
hlt
dec
das
bound
sbb
xchg
push
mov
shrb
inc
icebp
jnp
enter
mov
mov
aas
lcall
dec
daa
mov
ret
cmpsl
cwtl
pop
pop
or
jg
pavgw
push
cmp
and
mov
fists
test
movsl
mov
mov
xor
mov
lss
mov
fsubl
outsl
cmpsl
shll
or
ja
fsubp
sahf
inc
fs
jg
jae
adc
dec
int
sbb
inc
pop
out
and
shll
push
pop
adc
cli
xchg
add
sarb
pusha
popa
adc
arpl
cmpb
adcl
std
xchg
cli
lret
or
sti
add
dec
loop
enter
idivl
jmp
clc
push
jmp
jns
pop
cmp
add
jno
xor
jns
sbb
popf
outsb
fbld
xchg
daa
cmp
sbbb
jp
push
scas
jnp
insl
jb
insb
dec
xor
jnp
adc
lret
lea
les
cmp
into
xor
popf
call
cmp
outsl
lret
dec
sarl
jnp
ret
inc
push
jge
lock
mov
ret
sbb
xchg
jmp
fdiv
sbb
add
jb
cmp
popa
daa
adc
or
enter
arpl
inc
or
fnstsw
arpl
bound
arpl
sub
lahf
rep
aaa
sti
cltd
aaa
inc
icebp
dec
push
cli
ret
imul
das
sti
rolb
mov
jnp
rolb
lods
sti
out
pop
mov
sub
fucomi
cmp
mov
ljmp
jecxz
cmpl
out
push
pushl
pop
or
popf
inc
pop
pop
mov
cmp
dec
sub
xor
xor
mov
fwait
or
and
jge
notb
add
dec
mov
pop
and
and
mov
lahf
sbb
push
add
fsubs
jg
jnp
ss
loopne
xlat
mov
mov
push
sti
sub
mov
adc
testl
test
leave
cli
or
outsl
mov
sahf
dec
pop
pushf
cltd
jmp
outsl
clc
dec
pop
adc
pop
push
mov
adc
push
outsb
cmp
cmpsl
fsubrl
aad
mov
fdivs
push
and
bound
jg
repnz
inc
mov
into
pop
xchg
jge
xchg
std
inc
imul
inc
cmp
dec
bound
dec
or
ss
out
scas
lcall
gs
out
add
lcall
xor
push
mov
out
stos
std
mov
mov
add
cmp
jb
xchg
mov
sarb
cmpb
mov
mov
in
outsl
mov
and
mov
push
ret
jge
inc
mov
mov
inc
cmp
push
fnclex
dec
pop
pop
push
mov
in
cmpl
ss
fbstp
loope
or
in
pop
jmp
jno
jecxz
pushf
fs
in
mov
fcompl
int
sub
inc
mov
insb
pop
iret
outsl
pop
mov
xchg
sti
fildl
addr16
inc
cmp
jle
pop
jae
fnsave
mov
fidivrs
divb
shr
sarl
pop
sbb
rcll
xchg
fcmovnu
jge
cmpsb
jmp
dec
jne
rorb
mov
daa
mov
pushf
cmc
sbbb
add
insb
add
aaa
in
or
jge
add
jnp
push
push
decb
sbb
pop
xchg
lcall
arpl
fsub
icebp
jg
mov
adc
sbb
loopne
jns
jecxz
fldcw
add
add
and
ja
jo
mov
stc
add
dec
clc
add
sarl
push
add
aas
imul
xor
xchg
and
jle
and
ret
dec
jp
or
cmc
cmp
add
out
xor
icebp
xor
xchg
int
insl
in
lea
mov
jp
push
push
mov
sar
push
data16
cli
gs
sub
lret
push
fldt
jnp
jl
clc
push
inc
test
cmpsl
add
push
mov
mov
jns
icebp
jnp
jnp
add
js
pushf
sti
and
scas
ret
iret
rcll
jnp
adc
sbb
loope
idivb
or
and
jp
mov
test
shll
mov
fildll
push
or
lods
fadd
lods
loopne
repnz
adc
int
xchg
jge
push
lock
pushl
xchg
adc
and
testl
xorb
xchg
fdivrs
lret
mov
or
jbe
sarl
jae
ds
xor
cli
cltd
xchg
lahf
xlat
pop
dec
mov
imul
fldt
pop
mov
popl
mov
dec
dec
cld
cwtl
add
test
pop
stos
push
nop
ljmp
js
cmpsl
into
or
ror
pusha
out
inc
andl
xor
jg
aaa
fldl
adc
fdivrl
jae
fisttpl
push
jne
xchg
loope
bound
jg
popa
cmp
jno
fs
cmc
mov
inc
outsl
add
lods
arpl
loop
push
xlat
xor
aas
les
rcrl
add
push
aam
push
inc
add
lea
out
jp
jmp
rcll
push
push
pop
adc
push
push
outsl
push
pushl
jb
repz
das
sub
fst
pushl
ret
dec
arpl
lret
notl
test
imul
call
sbb
fwait
sub
mov
adc
push
aad
lret
jae
int
aaa
outsl
out
bound
aas
dec
cmp
int3
stos
push
inc
push
mov
push
es
add
ret
inc
loopne
push
sub
pop
popa
fisttpl
in
adc
or
cltd
cmp
mov
xor
push
lods
inc
mov
push
shlb
movsl
das
bswap
loope
scas
sub
fucomip
arpl
aas
je
addr16
push
clc
add
nop
adc
ja
lods
mov
icebp
jecxz
fninit
sbb
pop
into
mov
cmp
and
cmpsb
frstor
es
jecxz
pop
stos
gs
lret
sub
arpl
sti
mov
adc
push
pop
add
js
add
fsubrp
rorb
popa
test
jp
xchg
xchg
fbstp
mov
dec
xchg
dec
out
fiadds
sub
sahf
bnd
mov
inc
jecxz
jnp
xor
push
and
mov
dec
mov
adc
cmp
and
icebp
les
imul
icebp
pop
cs
lock
mov
pop
inc
xchg
jge
cltd
jae
xlat
lahf
push
xchg
data16
mov
sub
test
mov
loop
pop
adc
xchg
mov
lds
inc
adc
cmp
or
cmp
xor
loop
jbe
inc
mov
dec
mov
push
cltd
out
aaa
dec
out
out
ret
sbb
imul
out
sub
out
sub
out
imul
std
test
xchg
adc
aaa
fldt
pusha
adc
out
add
imul
scas
clc
scas
or
mov
or
lcall
add
mov
test
popf
adc
pop
pop
xchg
aad
pop
xor
mov
and
aam
stc
arpl
fisttps
dec
insl
dec
jnp
push
clc
cs
icebp
cltd
jae
bound
arpl
xor
add
inc
rcrl
ds
iret
xchg
shrb
jb
loopne
in
scas
dec
stos
imul
push
cmpsb
dec
xor
andb
leave
scas
in
pop
iret
mov
mov
fsubs
cmovs
ja
mov
int
mov
shlb
xor
sub
inc
dec
mov
jno
cmc
or
out
adc
xor
int
fisubrl
push
jns
pop
mov
jae
lock
and
cmc
out
xchg
test
mov
and
fstpt
inc
arpl
mov
mov
push
jno
or
cmpsb
ja
xchg
shlb
scas
iret
scas
and
xor
push
mov
sti
dec
mov
fidivl
mov
ja
jno
xor
pop
and
movsb
shrl
mov
xor
jnp
insl
cwtl
pop
sbb
adcb
fmull
adc
decb
repz
lret
es
into
and
lods
xchg
stos
mov
dec
sub
cmp
int3
jnp
jg,pn
cmp
es
leave
ja
repnz
das
mov
push
jg
in
fsubrp
popl
test
add
sahf
sti
cltd
jmp
rclb
pusha
lcall
lods
repz
repz
inc
xor
movsl
aaa
repz
mov
call
sti
inc
jb
add
call
loopne
rcl
ret
lcall
pop
rclb
pushl
addl
imul
push
inc
jmp
lods
jns
cmp
std
sub
aaa
jecxz
pushl
data16
jp
testl
loope
frstor
jecxz
daa
stc
pop
inc
lcall
popf
imull
jge
push
fwait
popa
xchg
xchg
xchg
ljmp
rclb
pop
mov
movsl
jmp
xlat
shll
bound
lret
dec
jae
add
fidivl
jb
popa
mov
aas
pop
jno
iret
and
addr16
jno
jg
enter
mov
pushf
fidivrs
sbb
inc
mov
inc
div
mov
jnp
xlat
adc
sub
std
xlat
mov
or
dec
jno
ficoml
in
cmp
mov
test
xlat
mov
ret
rcl
jg
xchg
test
mov
jbe
xlat
in
popl
or
jmp
lods
aaa
and
and
cmp
icebp
leave
cwtl
loopne
jnp
jg
pusha
add
gs
mov
dec
and
jnp
sub
pop
out
sti
fistpl
outsl
enter
arpl
in
push
cmp
scas
inc
jnp
add
cld
push
nop
scas
push
mov
das
jnp
pop
mov
sti
xlat
cmp
dec
cmc
xchg
jmp
xchg
jnp
add
gs
mov
rcll
fisubrl
lahf
sbb
pop
dec
push
pop
lahf
dec
jge
push
filds
mov
decl
mov
pushl
mov
mov
jo
pusha
xchg
stos
fidivs
loopne
sub
pop
fisttps
lock
cmp
pop
and
adc
jae
fadds
out
leave
nop
jns
cli
jnp
fmull
int3
dec
ja
push
mov
data16
leave
pushf
cs
mov
movsl
push
xor
push
mov
cmpl
mov
fimuls
stos
testb
pop
push
stos
andl
xor
out
outsb
mov
lods
icebp
dec
pop
cwtl
jae,pn
xor
dec
add
ror
mov
iret
insl
das
sub
cld
push
lods
out
scas
jbe
arpl
aas
ja
mov
fwait
cmp
insl
dec
xchg
aad
mov
cmp
push
xchg
sub
or
cmp
andb
cld
mov
jns
pop
loopne
sarl
mov
insl
into
ljmp
dec
pop
jo
addb
sbb
xor
bound
stc
test
mov
pop
and
clc
adc
push
mov
pop
mov
fistl
pop
mov
nop
leave
int3
loop
adc
cs
push
out
adcb
mov
adc
adc
dec
addr16
mov
jmp
or
xchg
jmp
popf
in
jne
ret
sub
faddp
sbb
idivl
movsl
pop
in
sub
jae
cs
mov
inc
or
es
push
xor
aaa
out
imul
jl
jns
push
mov
sbb
aas
test
jmp
or
ds
jl
ja
sbb
jne
das
add
divl
outsb
jl
add
and
jae
jae
and
pop
xchg
lcall
jmp
push
jae
sub
push
push
push
pop
jno
pop
adc
mov
jno
fstpt
roll
inc
jbe
dec
mov
inc
shll
and
push
scas
cli
std
sub
bndstx
incl
xchg
leave
push
jnp
fdivl
pushl
jbe
jmp
pop
cmp
lret
jae
fcmovne
mov
test
imul
scas
push
ds
shll
inc
dec
pop
fbld
or
pop
xchg
fisttpll
mov
jnp
les
fsubrp
hlt
aam
jp
js
mov
lds
dec
sub
adc
xchg
mov
xchg
mov
fwait
mov
lea
adc
arpl
fucom
adc
dec
sub
pusha
jns
push
scas
adc
aam
jp
cmpsb
ret
fcmovnb
je
sub
pop
loope
mov
xor
cmc
jge
pop
aas
js
sbb
popa
push
loop
fsts
inc
mov
dec
lahf
add
pop
add
js
shr
pop
jbe
loop
cs
jge
out
dec
sub
add
out
inc
dec
fs
mov
xor
iret
pop
imul
dec
add
cmp
push
push
mov
pop
lea
mov
fsubs
ja
mov
or
call
xor
sub
mov
cmp
and
mov
imul
mov
cmp
xor
lcall
mov
out
js
xchg
pop
and
insl
sti
jg
stos
fcomps
xor
xchg
aam
and
test
shlb
cmpsb
or
add
jl
pop
out
adc
lock
push
gs
imul
jns
mov
cmc
mov
ret
cmpsb
inc
jns
push
push
std
jb
cmpsl
inc
jp
loop
clc
mov
adc
lock
jnp
push
gs
mov
push
nop
imull
insb
mov
and
or
jg
cld
xor
cmp
incb
roll
imul
push
or
movsb
mov
cmp
js
mov
cwtl
jp
mov
out
jnp
cld
push
inc
insb
cmove
sbb
dec
push
mov
decl
sub
gs
in
sbb
test
inc
scas
jp
sbb
shlb
sub
and
or
mov
xchg
imul
mov
pop
aaa
les
sub
pop
lods
pop
jno
fdivl
cmp
jg
push
movsl
lods
mov
pop
fmull
dec
idivl
jnp
repz
adc
incl
loop
jp
rcrb
ret
jecxz
popa
push
sahf
ret
add
xchg
leave
xchg
mov
imul
pop
and
sbbl
jb,pn
test
pop
mov
push
pop
jecxz
loop
std
mov
dec
call
movsb
cmc
das
push
mov
sbb
mov
mov
fsubrl
dec
popl
cmp
mov
icebp
or
push
dec
fmul
push
cs
ret
push
pop
dec
mov
les
dec
jns
pusha
xchg
daa
and
sahf
push
loope
out
hlt
cmpb
adc
jno
mov
jp
js
xchg
addr16
ljmp
mov
sbb
cmp
mov
rorl
lahf
push
pop
cli
outsb
or
cmpsl
mov
das
insb
vpsraw
fisubs
mov
xchg
cmp
das
jb
cwtl
hlt
xchg
mov
stc
inc
push
rol
test
inc
cmp
jecxz
xor
lret
dec
cmp
xchg
lods
cltd
sbb
loope
cmp
sbb
cli
push
lods
jb
cmp
sbb
cmp
inc
mov
cli
das
int3
hlt
out
mov
jns
loop
and
mov
mov
in
les
add
cwtl
addl
out
pop
jmp
and
movsb
loope
adc
or
neg
pop
mov
mov
jp
sti
inc
jge
icebp
leave
stc
les
add
fbstp
cmp
or
xchg
ret
inc
xchg
enter
fdivr
inc
sub
adc
add
cmp
mov
jns
jmp
leave
rcrl
and
dec
adc
negl
aas
lock
pop
out
int3
xor
add
jbe
icebp
inc
imul
ret
enter
lods
pop
loop
jno
jns
mov
cmc
lea
lods
xchg
test
js
add
jno
insl
stos
outsl
xchg
or
lsl
outsb
lods
push
pop
ja
or
psrlq
inc
xchg
dec
loope
jae
out
mov
cli
jge
cmc
adc
adc
pop
pusha
arpl
adc
mov
jns
and
fdivrl
add
push
mov
ret
jno
and
je
and
mov
inc
in
outsl
push
add
xor
shlb
push
pop
int3
stos
arpl
add
rorb
lcall
cmp
pop
ja
or
xchg
add
faddl
inc
rorb
mov
lahf
ja
bound
out
dec
shll
jmp
div
mov
mov
fwait
cmpsl
rorb
in
and
push
jnp
dec
dec
fistl
add
dec
xchg
mov
int
jmp
cli
insb
outsl
into
xor
bnd
les
dec
sysenter
inc
ljmp
out
sub
pop
cltd
pushf
fmul
xor
jo
in
sahf
sub
cmc
sbb
out
jle
loop
push
ljmp
mov
js
xchg
mov
movsb
jnp
out
sarl
loopne
mov
jmp
fs
mov
sbb
out
ljmp
sbb
jg
sub
sub
int
imul
jle
xchg
movsl
jmp
cmp
or
jae
adc
xchg
jb
ror
out
pushl
push
int3
push
aas
inc
pushl
mov
jbe
jg
jno
popa
pop
movq
mov
jmp
daa
and
dec
sti
shrl
push
add
jg
pop
adcl
pop
mov
jo
pop
sar
inc
bnd
dec
dec
inc
pushl
movsl
popa
pop
mov
pop
aad
cmp
mov
xchg
popf
jmp
ljmp
mov
mov
dec
jno
xchg
iret
ror
jecxz
jmp
mov
test
js
fsubr
push
dec
jns
lret
jmp
sti
arpl
mov
jg
lret
sbb
jmp
cmpsl
lret
or
repz
jno
lret
mov
rep
cltd
notl
lret
nop
sahf
jecxz
pop
pushf
jnp
sbb
pushf
jne
push
adc
ret
insb
jbe
call
lret
cmpsl
sti
add
sub
data16
insb
dec
lret
popf
mov
mov
ljmp
mov
jnp
fdivrl
iret
xor
jnp
lret
sti
imul
push
jp
ja
mov
lret
movsb
ret
push
js
mov
pop
sbb
insl
sub
cmp
repnz
xor
jecxz
aas
jg
add
shrl
fwait
mov
cli
jg
mov
xlat
xchg
iret
jnp
inc
sti
jg
inc
insb
jp
fdivrs
rcl
cmp
in
cpuid
jmp
jnp
and
mov
xlat
in
lahf
fs
aam
insl
scas
and
jge
xchg
iret
inc
popf
out
cmp
ss
sbb
xchg
aam
pop
cmp
jge
mov
xor
cmp
ret
movsb
xchg
fldcw
cmp
pop
ror
leave
popf
xor
lahf
push
sbb
or
popa
mov
ljmp
aaa
sbb
sbb
clc
xchg
jnp
adc
lahf
jge
int
out
lahf
ljmp
dec
inc
lahf
lcall
sarl
mov
push
aad
push
push
or
cmpsl
lcall
jno
loope
int
cmpsl
rcll
jecxz
int
daa
test
int3
pop
add
xchg
add
add
inc
shll
les
or
add
jp
ja
sti
push
test
push
xchg
gs
ret
leave
jae
icebp
into
leave
jns
xchg
inc
add
cmp
jns
addl
cmp
push
cmp
xchg
sub
stos
icebp
gs
push
jae
jmp
out
push
mov
sarl
cmpsl
out
fmull
adc
lock
push
movsl
or
or
mov
sti
fstl
push
push
sbbb
push
xchg
cli
cld
lds
addr16
add
mov
hlt
jp
mov
repnz
rcll
mov
adc
push
lods
rcrb
xchg
jno
mov
loope
out
add
and
and
scas
daa
jle
stc
lea
arpl
stos
push
pop
jecxz
out
test
inc
fmuls
add
ljmp
rolb
movsb
icebp
outsl
ds
ja
cmp
out
popa
cld
lods
ret
and
add
cwtl
aas
mov
cld
sbb
ret
lock
rcrl
mov
loop
lret
mov
mov
aas
je
ret
in
and
push
mov
das
mov
jg
fdivrs
add
jecxz
cmp
loopne
pop
frstor
add
shrb
lahf
xor
lahf
jnp
cmp
add
shrb
dec
fsub
aad
jle
aad
aaa
daa
out
cmpsl
jmp
jae
je
mov
inc
bnd
mov
mov
popf
jmp
decl
jl
sub
or
aaa
pop
call
popf
jecxz
jmp
cmp
mov
mov
test
iret
int
mov
cmp
mov
shr
lret
jb
mov
repz
aad
test
imul
sarb
js
loope
in
mov
andb
lea
inc
jg
repnz
inc
int
mov
mov
pop
repnz
mov
fwait
inc
xchg
lahf
call
jecxz
lahf
jmp
fildll
xor
repnz
jge
mov
lcall
dec
xchg
testb
jb
sarl
jmp
mov
sbb
lods
shlb
fcomip
lds
inc
jo
lods
mov
mov
dec
mov
cmpsl
add
inc
and
lods
push
xchg
jnp
push
push
inc
call
jo
repz
lret
leave
xor
cmp
imull
xchg
imul
fdivr
sarl
mov
stos
scas
test
outsl
push
rorb
mov
or
sti
dec
popa
ret
stos
scas
xor
inc
push
mov
ljmp
push
bnd
lods
dec
scas
mov
outsb
jp
mov
mov
jmp
stos
inc
pop
jae
sub
adc
test
loop
test
xchg
cmpl
jne
add
jmp
arpl
and
ja
sub
mov
fildll
aam
adc
imul
out
mov
ss
jae
out
inc
fs
and
inc
adc
movsb
movsl
add
mov
int
imul
cli
das
sbb
push
out
mov
je
popa
addb
pop
cwtl
repz
jnp
jns
mov
mov
jp
pop
outsl
aas
minps
aad
aaa
int3
xor
and
shl
and
fcoml
loopne
inc
dec
mov
cli
shrl
leave
push
add
push
mov
enter
pop
sti
adc
imulb
mov
sbb
std
fsubrl
sbb
fdivrs
popa
ljmp
jge
jne
add
mov
sub
xchg
jle
jge
out
cmpsb
push
test
sbbl
shlb
and
jecxz
ljmp
mov
movsb
imul
js
cmp
mov
stc
decb
repnz
xor
mov
orl
and
imul
add
fbld
pushf
inc
sbb
jp
xchg
sbb
cmp
or
mov
cli
test
fsubrs
je
ret
int
shl
and
and
shr
insl
roll
ds
push
addr16
mov
repz
out
mov
imul
jg
ja
mov
jae
jecxz
clc
pop
and
shrl
cmp
jge
sar
pop
xchg
jecxz
mov
pop
push
imul
outsb
repz
xchg
pushf
subb
inc
cmp
repnz
out
fisubrl
ja
in
out
lods
lahf
push
aam
loopne
push
js
jne
addr16
push
aas
cmc
ds
fcmovne
sbb
nop
cmp
jnp
cwtl
inc
mov
popf
mov
cli
pop
ljmp
mov
movsb
ljmp
sub
jno
xchg
jo
and
rclb
mov
aas
cmp
xchg
aas
jnp
add
mov
mov
cwtl
dec
in
xchg
jg
fsts
cmc
inc
pop
jge
popf
cmp
daa
addr16
decl
mov
sub
pop
jg
out
test
jb
mov
jecxz
lret
cmpsl
iret
ret
clc
jmp
mov
push
imul
add
push
insb
mov
push
inc
andl
lcall
cmpsl
icebp
push
and
lea
and
push
mov
insl
jmp
popf
jecxz
stc
cmp
pop
ret
out
jnp
or
popf
out
ret
cmp
into
cmp
rclb
lods
inc
mov
mov
mov
sbb
popa
arpl
mov
jg
push
dec
addr16
and
or
cltd
ljmp
push
cmpsl
mov
or
pop
mov
jb
in
loope
fbstp
add
sti
pslld
enter
push
fs
frstor
pop
mov
fcomp
push
jge
push
decl
dec
jp
jno
fildll
fs
cli
ficompl
pop
mov
imul
fwait
pop
pop
incl
loop
insl
mov
jnp
sahf
adc
aas
shll
lcall
sbb
push
ds
jmp
push
aaa
repz
test
mov
arpl
sbb
int3
mov
xchg
sti
nop
pushf
mov
or
add
cltd
test
xlat
and
add
rcrl
dec
fs
shlb
cmp
pop
cmp
sub
sbb
scas
xor
insl
nop
mov
mulb
and
scas
push
shlb
mov
jo
std
pop
fdivrs
lret
or
sarb
adc
fcmovnb
lea
mov
imul
outsb
outsb
aas
outsl
cmpsl
or
sbb
sbb
jb
push
pop
das
cwtl
mov
enter
out
xchg
fadd
inc
push
xchg
dec
xchg
cmp
out
fisttpl
jmp
xor
jle
jmp
sbb
gs
sti
arpl
jno
out
insl
xchg
cld
mov
ds
jno
push
sti
jns
test
aam
mov
pop
rep
lock
testl
and
pop
stc
jg
jns
and
out
popa
data16
cmp
outsl
push
scas
out
divb
dec
xchg
out
gs
mov
repz
push
lds
fbstp
dec
and
std
mov
mov
jae
pop
mov
lret
pop
mov
jae
outsb
out
and
jle
jnp
addl
and
mov
imul
int3
fidivl
xchg
out
loop
jmp
mov
push
in
out
jp
mov
into
cltd
fidivrl
jno
leave
dec
xchg
mov
psllq
pop
add
push
cmpl
clc
inc
mov
dec
hlt
into
adcb
negl
scas
icebp
mov
dec
lock
rol
sti
lods
push
sub
ret
pop
or
jl
pop
add
mov
inc
push
test
pop
lahf
mov
dec
lea
mov
jg
and
mov
inc
mov
icebp
adc
scas
cmp
mov
es
loop
stos
push
add
inc
xchg
int
lock
inc
movsb
mov
fisttps
stos
adc
decb
pop
jnp
stc
iret
ljmp
inc
ljmp
jmp
addr16
push
bswap
pop
imul
add
sbb
outsl
fdivl
iret
repz
mov
add
add
cmpb
dec
into
jb
lea
pop
clc
dec
mov
jle
inc
aaa
push
pop
or
mov
mov
cmp
mov
jns
ds
cli
cld
cmp
pop
out
ss
jbe
push
inc
inc
cmc
cwtl
mov
pop
popa
out
jne
and
sbb
lret
mov
add
jge
jns
int3
into
pop
loopne
push
fistpl
push
jecxz
jns
mov
xlat
jnp
jo
out
and
stc
iret
shrl
insl
icebp
inc
mov
jmp
xchg
stc
je
add
fbstp
mul
jb
push
adc
pop
ret
xchg
dec
test
mov
adc
insb
scas
sbb
xor
ret
push
or
mov
mov
xchg
in
cmp
pushf
sbb
test
add
imul
xchg
rcrb
les
clc
sub
outsl
cli
gs
pop
orb
fadds
mov
scas
sarl
or
jle
or
lock
push
fwait
adc
and
in
mov
jnp
mov
cmp
test
pusha
jns
jle
jne
insb
stc
mov
test
add
ret
adc
enter
std
push
shr
push
jg
jo
mov
sti
loop
pop
pop
or
stc
es
inc
movl
jae
add
stc
int
cmp
pop
aas
in
outsl
sbb
das
push
and
sbb
mov
rolb
mov
mov
or
push
dec
filds
adc
lret
scas
arpl
mov
jmp
mov
je
in
fs
aad
dec
fdivrs
xor
in
mov
scas
push
jg
int3
testl
xlat
sti
pop
jb
loope
inc
dec
arpl
jmp
adc
daa
arpl
inc
jbe
cmp
subb
jp
popa
jmp
popf
daa
jmp
gs
mov
cld
mov
repnz
aam
sahf
movsl
in
enter
pushl
lahf
pop
popa
mov
jnp
adc
jg
cld
sti
pop
insb
push
mov
inc
mull
cmp
adc
add
adc
dec
fistps
push
jnp
outsl
mov
mov
push
fcoml
jl
idivb
mov
push
mov
rcll
decl
inc
xor
movsl
push
mov
lahf
push
stos
sti
movsb
cmp
mov
pop
ss
ljmp
xor
repz
jmp
mov
sti
rcrb
lahf
data16
sti
popa
fdivrl
lahf
and
addr16
lds
lahf
jne
jle
loop
mov
push
xor
iret
lahf
cld
xor
imul
jecxz
fidivl
lahf
pop
xchg
mov
repnz
lahf
xor
jnp
lcall
adc
inc
or
fwait
pusha
mov
pop
imul
lea
pop
mov
repz
pop
lret
insl
mov
cmp
aas
mov
lahf
sub
lahf
add
add
lds
rolb
popf
in
outsl
ja
or
mov
fcmovnu
fwait
xlat
loop
loopne
mov
stos
imul
dec
scas
xor
stos
rolb
fs
fbld
das
scas
jg
movsb
shrb
movd
jg
daa
das
adc
pusha
xchg
negl
aas
movsl
fistpll
ror
cmp
dec
add
adc
mov
shl
ficoml
call
ficoms
pop
dec
jnp
sbb
jp
movsb
fcom
loope
cltd
filds
mov
push
icebp
add
mov
xlat
mov
push
pop
jae
jns
adcb
aas
add
jb
repnz
cmpsl
or
add
and
mov
stos
lcall
bound
test
mov
push
cmp
cmp
call
jecxz
mov
iret
xchg
not
xchg
addr16
add
outsl
sti
add
mov
sarb
xor
cmp
push
add
or
les
lahf
mov
loop
cli
ds
scas
cmp
jns
mov
sarl
mov
mov
xor
pop
pop
cmp
or
andb
outsb
scas
subl
repz
ret
test
xchg
sbb
mov
or
out
adcb
lcall
inc
jg
pusha
pushf
mov
mov
call
ja
sbb
jnp
fistpll
data16
popa
jae
popf
push
xchg
jmp
lcall
int3
enter
sarb
xchg
out
ja
cs
or
jbe
mov
pop
iret
jg
inc
out
mov
rol
dec
mov
pop
jno
jmp
call
lret
fistpll
fimull
ljmp
outsl
mov
shll
pop
push
shrl
dec
xor
flds
leave
cmp
rcrl
loopne
jg
jg
jl
ja
mov
jb
rolb
decl
ret
dec
dec
popf
inc
xor
jnp
jns
in
mov
cmc
loop
jl
std
mov
xchg
in
jecxz
xor
jne
leave
jns
test
ljmp
add
daa
int3
shrb
ds
mov
ficompl
xor
push
ds
cld
jge
enter
pop
imul
pop
mov
sti
idiv
cmp
push
mov
movsl
xor
mov
sub
mov
xchg
cmp
add
mov
dec
out
jmp
add
sbb
in
push
and
loopne
jns
int
inc
jae
iret
mov
adc
mov
ljmp
enter
xchg
rcl
arpl
xchg
jg
mov
push
cltd
idivb
out
push
mov
gs
sbb
xchg
ret
ss
mov
xor
jge
mov
mov
jle
jb
mov
fidivl
lret
arpl
loope
jmp
test
sbb
shl
mov
push
xchg
push
pop
jae
loopne
orb
or
shrl
repz
in
adcl
roll
push
aas
leave
sti
fstpt
nop
push
push
push
lods
rcl
mov
add
or
and
in
add
mov
jmp
imul
lods
add
push
mov
orb
add
aaa
pop
xchg
sbb
lods
inc
mov
adc
jp
cld
jg
das
ja
sbb
out
je
inc
mov
and
pushf
nop
jge
mov
add
jecxz
mov
push
ror
pop
scas
ret
inc
pushf
adc
xor
clc
out
sbb
pop
mov
sbb
push
cmpsl
fs
mov
out
pop
fld
repz
in
and
push
sbb
out
lods
mov
xor
cs
add
adc
out
sti
subl
repnz
call
add
je
ds
jmp
jg
or
sbb
and
je
mov
cmpsl
mov
add
loopne
xor
xor
sbb
jg
cmp
test
jb
cmpsb
popf
rorl
pop
in
outsb
or
jl
rorl
mov
test
rcr
cs
nop
loop
cmp
int3
xchg
in
in
xor
movsl
push
rcrb
ds
inc
iret
scas
jge
aas
in
push
in
mov
xchg
lret
pop
fisubl
out
jno
sbb
add
fldt
leave
jae
jecxz
fcmovne
mov
insl
lods
clc
dec
and
push
or
ds
loopne
lock
sbb
cmc
dec
out
andl
in
cmpl
mov
cld
dec
gs
sbb
dec
and
stos
xchg
push
jg
aas
orb
lret
icebp
push
mov
pmaddwd
and
mov
int3
jg
jle
pop
insl
je
ljmp
out
lret
fwait
inc
mov
mov
xchg
leave
or
fwait
push
or
pop
dec
xchg
lret
out
and
jecxz
and
icebp
mov
mov
ret
daa
aas
insb
paddq
mov
push
jp
jno
mov
xor
aas
jmp
sarl
ret
fmull
aam
ret
dec
cli
inc
push
xor
xor
dec
add
cmp
into
outsb
add
adc
mov
jbe
into
mov
lods
jo
sub
je
xor
lret
xor
dec
jp
lods
iret
dec
jp
adc
push
and
nop
stc
mov
int
and
fisttps
inc
outsl
lretw
decb
cli
jge
loope
in
jecxz
pop
dec
push
add
dec
push
lret
int
push
pop
shrl
mov
in
movsl
inc
jle
jne
add
mov
inc
rdpmc
add
arpl
push
imul
iret
add
fbld
jl
les
xchg
stos
jp
lods
xor
fistpl
leave
jp
fildll
cld
push
arpl
mov
enter
mov
data16
loopne
inc
xchg
idivl
fisubrs
rsqrtps
add
add
cs
loopne
pop
mov
mov
stos
in
push
imul
pop
pop
and
fisttpl
adc
lods
sub
fsubrl
lret
imul
notb
xchg
jle
lahf
pop
jae
out
inc
ret
mov
add
dec
fidivrl
rolb
jle
jg
enter
pusha
loop,pt
sub
mov
aaa
out
lahf
push
and
sti
or
ds
lret
dec
or
push
xor
in
divl
fs
dec
cmp
xchg
xchg
out
dec
popf
out
fiaddl
cmp
sbb
ds
sbb
push
pushf
popf
leave
cmp
inc
xor
cmp
mov
inc
stc
and
daa
cmp
addr16
jbe
fucomip
lock
push
push
adc
out
pop
push
sub
addb
or
jle
dec
and
cld
arpl
enter
dec
push
lret
lds
hlt
leave
or
sbb
aaa
push
das
push
push
sarb
mov
faddl
daa
or
sub
std
gs
add
bound
sbbb
mov
ljmp
cmp
mov
test
fstpl
idivl
loopne
add
pop
insl
pop
addb
pop
rcll
and
mov
jb
sbb
fxch
in
cmp
movsl
mov
jb
scas
movsb
or
xor
lcall
lea
sti
addr16
xchg
leave
dec
adc
pop
mov
jns
sbb
in
adc
dec
jo
jbe
addr16
xor
xchg
pushf
psubb
in
cmp
cmpsb
push
or
push
jb
mov
addr16
ja
fcmovnb
repz
popa
xchg
repz
jnp
lret
mov
addr16
loop
jnp
jnp
roll
rcll
lahf
jle
mov
repz
popf
repz
aad
je
stc
mov
loope
imul
pusha
add
mov
bound
mov
arpl
repz
fnsave
fisttpl
lahf
jnp
cmpsl
mov
mov
addr16
mov
out
cltd
in
setg
addb
jae
ret
mov
cs
rolb
mov
test
adc
or
xchg
inc
mov
outsl
dec
popf
and
fldcw
adc
in
and
mov
cmpl
loopne
pushf
mov
or
bound
mov
jne
test
decl
pop
shl
inc
pop
shlb
lret
subl
filds
movsb
dec
mov
or
cwtl
push
jae
insl
adc
loop
mov
repz
push
push
or
mov
push
push
out
jge
mov
inc
scas
aas
js
xor
and
sub
jae
int3
dec
insl
movl
pop
jb
addr16
xchg
jo
push
adc
jmp
fisubrs
fadds
aas
add
push
xchg
in
jmp
scas
sbb
sbb
clc
xlat
insl
sbbb
xchg
xchg
cltd
dec
xor
cmp
inc
rolb
lcall
pop
adc
test
dec
js
jnp
faddl
fidivrs
imul
push
leave
nop
fmull
fsubs
xchg
add
jmp
xchg
jbe
xchg
shll
das
xchg
inc
dec
add
test
xchg
sbb
aas
addr16
xor
jg
loope
inc
cld
sub
xchg
cmp
leave
push
outsb
es
pop
lods
adc
stc
es
stc
les
dec
loope
push
mov
lock
pop
out
jg
jns
sub
mov
xchg
push
cmpsb
pop
mov
and
les
loopne
inc
pop
mov
xchg
inc
pop
add
jne
mov
jae
bound
int
icebp
imul
movsb
std
in
test
and
hlt
inc
mov
sbb
add
arpl
sqrtps
pop
les
insl
xchg
mov
ljmp
int3
jns
pop
aas
and
jns
jbe
test
jp
and
lcall
lds
cld
cmp
outsl
sahf
xchg
icebp
jp
push
jp
add
and
je
mov
sbb
shlb
out
lods
in
pop
jb
lods
rep
repnz
js
dec
insl
push
call
stc
xorl
std
nop
rcr
fsts
jp
pop
decl
cmp
aam
xchg
jne
jmp
push
test
push
jg
jecxz
mov
dec
popa
jae
inc
stc
arpl
int
icebp
out
arpl
lret
shr
sarb
cmc
mov
rorl
add
addl
lds
xor
jno
imul
mov
xchg
icebp
lock
push
repz
sbb
loope
lock
shrl
addb
xor
cmp
les
clc
sub
adc
or
push
push
push
ficompl
push
push
inc
xor
stos
push
dec
shlb
push
sbb
in
inc
clc
mov
lds
jno
jns
mov
imul
test
push
pop
icebp
mov
dec
xchg
fisubs
jp
mov
mov
jecxz
inc
bound
jae
idivl
fldt
sub
rcl
and
jg
jne
xlat
or
shll
push
xor
cmp
mov
sbb
gs
and
push
js
sbb
std
and
sbb
push
arpl
aam
in
jnp
sub
sub
bound
dec
jp
mov
mov
jge
add
iret
add
cmpsb
mov
cmp
aad
fmull
xor
adc
jnp
pop
pop
cmpsb
inc
nop
lods
loop
add
fdivl
inc
mov
mov
jmp
pop
cmp
leave
inc
xchg
hlt
pop
mov
fldl
out
jg
roll
ja
out
aas
movsb
mov
mov
sarb
push
cld
cmpsb
clc
sbb
add
mov
outsb
roll
jb
add
test
pop
dec
int3
das
dec
ds
or
aam
insb
movl
pop
sbb
sbbb
imul
sbb
pop
sbb
and
inc
test
and
ud1
into
arpl
adc
push
jge
ret
add
xchg
out
jnp
lods
xchg
push
hlt
pop
jne
test
adc
sbb
aam
cmp
imul
vpaddsw
sbb
xor
ljmp
ja
jp
iret
outsb
shll
addb
ret
fdivrl
jp
adc
roll
dec
xor
dec
cmp
jle
data16
adc
pop
cmpsb
in
mov
adc
imul
mov
iret
dec
dec
ffree
add
adc
shr
imul
dec
jbe
pushl
and
lret
movb
lods
xor
in
inc
sbb
jmp
push
xchg
sbb
mov
mov
mov
mov
jae
mov
mov
insb
fcmovnbe
xchg
push
cmp
testb
jmp
dec
jg
jne
and
jns
push
mov
enter
cmp
ret
push
add
bound
fadd
jge
mov
mov
iret
into
mov
popa
in
inc
lea
mov
push
mov
in
sbb
ljmp
repz
icebp
test
pop
sti
sub
out
mov
dec
jb
out
lods
test
popf
mov
mov
iret
push
jns
sbb
fwait
arpl
jns
in
jb
out
imul
pushf
lcall
dec
adc
mov
cmpsb
stc
mov
jecxz
loopne
pop
lods
and
out
outsl
jb
and
jp
leave
push
push
insl
jne
insl
mov
sahf
out
pop
cmp
sub
aad
pop
mov
or
jg
sbb
jo
enter
cmp
adc
sbbb
loope
push
push
ret
jno
mov
or
leave
shlb
pop
or
mov
es
jmp
movsb
testb
push
cmp
sub
int3
fistpl
xchg
xchg
push
sbb
clc
dec
xchg
or
movsl
jmp
sbb
sahf
out
mov
ja
in
enter
mov
js
adc
popa
insb
js
lret
ja
xchg
and
rol
dec
aam
fimuls
jge,pt
dec
in
lret
mov
out
leave
loopne
mov
into
je
xchg
add
outsl
jle
cmpsb
je
cmpb
fldl
cmp
add
dec
cli
cltd
cmpsb
shlb
pop
sbb
push
dec
cmpsb
dec
roll
scas
lds
add
bound
mov
mov
stos
sbbb
xchg
rcrb
icebp
jns
add
lock
xchg
arpl
jmp
inc
cmc
cmp
pop
push
dec
insl
pushf
in
call
fs
in
test
mov
cli
pop
aam
and
or
dec
cmc
dec
loopne
out
xchg
mov
arpl
fld
icebp
fisttpl
cltd
push
sbb
in
insl
js
sbb
jno
pop
mov
sar
rclb
cs
iret
dec
adc
xlat
movb
push
jnp
inc
and
mov
cmp
mov
jmp
dec
jp
cltd
mov
mov
cwtl
jecxz
push
sarl
ret
int3
mov
xlat
cmc
dec
or
lds
imul
ret
outsl
shlb
enter
mov
pop
or
into
test
sub
stos
pop
and
adc
mov
mov
rcl
ljmp
mov
ljmp
idivl
test
out
jecxz
iret
in
fdivrl
fninit
test
lea
leave
je
inc
shl
adc
pop
cld
mov
push
sti
push
scas
inc
mov
xor
sbb
cmpl
mov
stc
negb
mov
mov
fs
dec
bound
add
clc
or
data16
inc
push
cld
lds
hlt
filds
int3
shll
and
pop
lea
add
into
cld
out
hlt
std
cmp
pop
jle
pop
add
add
pushf
in
sbb
xchg
out
movl
add
adc
gs
bound
enter
sar
mov
xor
inc
rcr
xor
mov
sti
lcall
in
fcomps
stos
xchg
mov
jbe
shrb
pop
cli
nop
sbb
sarl
sub
adc
jb
push
xor
sbb
loop
pop
push
out
test
lds
sbb
mov
fadds
jnp
add
jecxz
xchg
pop
sub
cmp
test
jl,pt
sub
pop
xorps
orb
aas
outsl
hlt
fs
js
jno
ljmp
or
pop
jmp
or
xlat
fisttps
test
pushf
jnp
and
jnp
cmpsl
loop
addr16
mov
fimuls
pop
and
pop
add
popa
pop
cmpsb
fcmovnb
lods
fimuls
stc
ljmp
jnp
and
cmpsb
cmpsl
enter
pusha
out
jb
or
mov
adc
jns
repz
outsb
sbb
or
lds
stos
dec
dec
je
inc
jno
push
jbe
repnz
dec
mov
jp
sbbl
ljmp
add
jae,pt
icebp
xchg
cmc
shl
and
cmp
pop
ljmp
dec
cld
ds
mov
jns
jmp
xor
incl
out
ja
arpl
adc
jns
rclb
inc
push
xchg
lret
mov
sbb
xor
fwait
pop
dec
loop
and
jae
fnsave
orb
jno
xchg
arpl
inc
imul
jns
inc
outsl
jno
inc
inc
xchg
lock
lahf
ror
push
outsb
mov
cmp
sbb
hlt
add
out
sub
jmp
mov
jnp
add
inc
in
popf
cmp
test
cmp
dec
add
dec
sar
shlb
sbb
push
out
cld
ret
pop
js
rorb
das
jle
dec
std
inc
in
adc
inc
shll
xchg
aam
mov
movsl
fimull
int
jo
lret
out
lahf
pop
sub
movsl
imul
jae
sti
mov
sub
arpl
mov
jb
fdivrl
arpl
orb
lcall
shl
sbb
jp
out
xchg
pop
mov
pop
cmpsl
stos
mov
inc
and
dec
add
test
int3
jle
mov
jp
shrl
cli
ljmp
repnz
push
aas
test
or
jae
xchg
std
cmp
push
adc
jge
sbb
in
add
stc
mov
and
pop
inc
lcall
pcmpeqb
mov
push
stos
rsqrtps
or
sbb
loope,pn
bswap
cld
sti
pop
jp
inc
shrl
mov
mov
cli
mov
push
mov
in
xchg
mov
and
cmp
xor
cltd
inc
sti
inc
xchg
dec
aas
daa
shr
dec
pop
jg
aam
ljmp
mov
scas
not
jns
out
jne
data16
jo,pn
inc
jecxz
popf
inc
xchg
insb
push
mov
fucomp
mov
out
pusha
and
cld
int3
mov
fwait
jns
in
out
push
mov
push
jno
dec
popa
cmp
dec
cmpsl
or
lock
jmp
sahf
jl
xchg
adcl
pop
xchg
and
sbb
sub
lea
mov
xchg
loop
cmp
xor
lods
push
xchg
lods
lea
lret
mov
xchg
dec
lods
js
stos
adcb
mov
addr16
inc
add
inc
loope
lock
lahf
loopne
mov
sbb
mov
jns
and
ret
testb
inc
pop
loop
enter
inc
or
sarl
add
inc
pop
dec
sti
cmp
pop
xchg
cmpsb
out
sarl
push
mov
mov
jge
lods
int3
stos
push
in
je
adc
and
jge
cmpsl
lods
xor
cld
add
stc
jae
inc
jle
or
mov
xchg
push
sar
scas
and
jp
shr
scas
mov
test
dec
pop
pop
icebp
sbb
dec
ljmp
mov
andb
pop
cmpsb
icebp
js
jp
stos
hlt
and
jge
sti
cld
mov
push
sti
stos
aam
jnp
xlat
sub
cwtl
jge
mov
mov
movsl
pop
jg
scas
ds
or
bnd
scas
mov
jmp
mov
xor
pop
ja
out
cmp
rclb
mov
sub
out
rcrl
mov
add
add
inc
lds
mov
adc
push
call
lods
mov
sahf
adc
mov
pop
js
imul
xchg
fwait
scas
mov
jns
xchg
jae
lds
push
push
imul
arpl
lds
cmpb
rcrl
xchg
mov
mov
pop
out
andnps
out
outsl
ret
ds
jg
out
xchg
loopw
xchg
add
add
cwtl
stc
jp
xor
das
lahf
pop
inc
cmpsl
movsl
cvtps2pi
movsb
decl
pop
jg
or
pop
lock
jns
xor
sbb
adc
test
cmpb
pop
pop
testl
pushl
lock
push
jp
test
pop
jnp
insb
stc
jae
mov
insl
cmp
mov
in
leave
or
mov
pop
pop
lret
data16
jbe
mov
inc
arpl
fldt
jb
stos
call
cmp
cmp
les
insl
into
pushl
mov
jns
fdivrs
in
mov
int3
shl
imul
orl
push
aad
adcl
jnp
xacquire
xchg
neg
pop
push
rolb
jb
ss
bound
pop
cmp
pop
jg
mov
and
add
hlt
jne
adc
ret
out
jg
and
push
lahf
fs
or
pop
dec
xlat
sahf
cmc
fstpl
xchg
push
loope
js
cmpsb
imul
out
jge
mov
subl
lds
pop
xchg
cmp
ds
imul
push
xchg
data16
sahf
dec
jno
xchg
pop
lahf
xchg
js
push
mov
mov
xor
lret
xor
cmpsl
pop
cmp
cmp
xchg
xchg
shl
mov
roll
std
fs
jl
pop
ffreep
adc
popf
xchg
or
mov
aam
inc
push
push
push
stos
inc
fs
push
fistl
imul
xchg
sarl
add
xchg
push
sbb
jg
icebp
add
jae
mov
dec
pushf
push
mov
popa
imul
popf
hlt
mov
loope
mov
jg
cli
mov
std
movsl
xorb
jae
ja
fidivl
mov
lock
mov
lahf
push
cli
insb
cmp
adc
jo
fcomi
inc
xor
xchg
pop
xor
jo
push
fildl
xor
aad
mov
mov
sbb
lea
xlat
push
add
arpl
nop
adc
mov
outsb
data16
and
in
fcmovnb
sub
jb
mov
andl
and
sbb
fidivrs
inc
and
and
xlat
ja
sub
pop
jle
jne
mov
subb
jns
push
inc
aam
mov
aam
mov
ffree
jae
jge
jle
xchg
fiaddl
xorb
test
lahf
frstor
mov
pop
xchg
dec
sarb
inc
movsl
or
jge
test
jae
ja
push
ret
and
mov
pop
in
cmp
xor
movsl
push
push
test
pop
inc
hlt
rep
lret
jae
lahf
add
out
xor
mov
pop
aas
inc
cltd
and
out
push
cltd
aad
bound
addb
cltd
jp
sub
or
out
stos
aas
pop
sub
scas
aad
sahf
stos
test
ja
adc
andb
stc
clc
dec
iret
lods
dec
pop
movsl
add
pop
mov
les
in
imul
jo
mulb
jb
int3
mov
jb
jae
fwait
adc
and
enter
cli
mov
stos
out
adc
sarb
in
sub
push
bound
jb
push
std
repz
in
mov
pop
mov
test
pop
pop
inc
add
or
ja
push
pusha
push
and
std
mov
sbb
movsb
ss
shlb
lods
bound
xchg
push
addl
scas
dec
push
cmp
sarl
mov
ja
push
xchg
xchg
mov
shl
push
insb
popa
out
adcl
xchg
ljmp
out
push
adc
and
jno
mov
pop
push
jno
loopne
repz
adc
add
xor
fdivrl
insl
ljmp
stc
cmpsb
cltd
push
scas
stos
popf
fstpl
add
outsl
in
mov
stc
aas
jg
jno,pn
jg
enter
jg
xor
cld
inc
mov
push
and
xchg
adc
mov
jb
cltd
std
sarl
inc
std
xchg
push
add
xchg
sti
and
test
jb
jp
mull
subb
jg
clc
inc
mov
outsl
fists
icebp
push
jnp
inc
icebp
mov
inc
loop
sbb
xchg
shl
xchg
add
and
test
insb
sub
popa
aas
fimuls
das
leave
inc
jecxz
adcl
lahf
int
insb
fildll
xchg
xchg
mov
sbb
movb
or
icebp
dec
inc
jno
test
dec
mov
fiaddl
fistl
sbb
ficomps
outsb
in
inc
sbb
ja
movsb
test
cld
jnp
out
aam
and
sahf
in
fadds
sbb
lds
jp
stc
mov
in
adc
mov
jno
jmp
sti
lret
jnp
or
push
pop
xorl
xor
xor
int
das
rcrl
dec
mov
incb
ja
and
xchg
pop
dec
and
xor
outsl
xor
jmp
pop
iret
jns
notb
out
or
jp
shl
fnsave
lods
insl
std
sbb
fs
into
std
jae
sbb
testb
mov
shll
pop
lret
dec
std
ljmp
dec
pop
adc
sub
rol
les
in
int
jp
sub
cmp
mov
stos
sti
xchg
push
mov
out
add
out
lds
cmp
fcoms
rcll
pop
aas
pop
jmp
mov
push
stc
jle
xor
jg
ja
aad
dec
push
xlat
aaa
mov
pop
sub
cmpsl
mov
push
sar
jge
cltd
push
shl
sbb
ret
xchg
sub
into
rcrl
popf
jb
adc
sarl
xor
ds
mov
push
stos
inc
inc
bound
push
mov
fistpll
cmp
mov
lcall
scas
in
sbbl
les
idivl
xchg
mov
sub
out
insb
jae
ret
pop
cmp
das
jg
cmp
jnp
jmp
and
test
adc
repz
loopne
insw
xchg
lret
dec
rclb
in
test
mov
inc
cmc
push
cmp
popf
pop
ret
in
cmp
add
ljmp
out
inc
push
xchg
jo
lock
jns
adc
dec
jae
les
sub
inc
and
out
lret
cli
jecxz
push
and
add
jp
mov
pop
movsb
pop
lods
aas
sti
jno
scas
mov
mov
aas
mulb
movsb
imul
arpl
sub
iret
lock
pop
mov
cli
adc
mov
imul
stc
mull
jnp
jg
inc
fnstcw
inc
imul
jp
push
cmp
xor
daa
sbb
fsubr
lcall
cwtl
jp
lahf
push
testb
inc
out
add
imul
arpl
mov
and
mov
jnp
mov
loopne
int3
cmp
cmp
into
inc
std
iret
push
adc
pop
lahf
sbb
ljmp
jae
shll
add
dec
addr16
addr16
addr16
frstor
addr16
ljmp
repz
lret
dec
loope
inc
mov
add
mov
inc
sub
dec
roll
cwtl
push
popa
popa
add
pop
nop
lret
rol
andl
sub
xor
ljmp
leave
push
test
mov
mov
dec
mov
pop
gs
sarb
cli
lds
pop
xorb
mul
add
in
jno
orb
dec
cltd
fsubl
xor
fistps
and
decl
cld
push
fbstp
jle
sbb
sbb
arpl
inc
out
dec
xchg
and
loope
es
sub
ljmp
push
int3
add
arpl
fistl
adc
push
xor
addb
test
mov
sbb
call
mov
or
lds
leave
dec
add
jae
jb
mov
dec
mov
aas
add
cmp
inc
or
fwait
fwait
repnz
and
hlt
outsl
enter
and
es
and
mov
std
insb
scas
rcll
outsl
ret
ja
aas
add
pop
dec
das
jns
mov
dec
mov
fisubrs
fiaddl
mov
push
pusha
cmp
rcll
mov
inc
cmp
scas
lock
decb
or
push
pop
push
lea
test
xchg
mov
fnsave
fiadds
notl
pop
jns
and
xchg
pop
lea
out
mov
leave
lahf
lods
fbstp
jae
loop
inc
bound
into
cmp
adc
sarl
sub
or
jge
xchg
outsl
sbbb
aas
inc
mov
popf
repz
jnp
fdivrp
outsl
jg
push
cli
test
mov
out
cwtl
std
xor
jae
repz
sub
cmpl
pusha
testl
imul
imul
aam
leave
bnd
stc
ljmp
add
sti
stos
addr16
mov
imul
aad
xorb
mov
aas
pusha
frndint
imul
pop
adc
xchg
mov
mov
push
cmp
mov
bndldx
in
mov
addl
into
mov
aas
sbbb
jl
outsb
mov
mov
pop
xorl
or
orl
and
int
pop
cmp
jle
test
add
add
sti
sbb
xor
xor
test
inc
adc
add
lcall
jl
hlt
mov
or
add
or
push
imul
and
subl
cmp
xor
fsubl
dec
int
lock
ret
leave
in
cmp
ret
addr16
rclb
sbb
fsubrl
xorb
adc
push
aas
int
pop
xor
call
push
repz
cmpl
leave
aaa
in
inc
js
cmpsl
mov
out
push
cmp
inc
scas
push
jmp
and
cwtl
xchg
hlt
mov
xchg
scas
mov
pop
fildll
in
dec
and
stos
inc
es
std
push
sbbl
add
jns
dec
cmpsl
cltd
dec
in
push
in
mov
sbbb
and
stos
inc
mov
fbld
das
ja
adc
clts
aas
xorb
push
mov
mov
jbe
pop
xor
into
mov
cmp
push
jo
aad
xrstors
aas
and
enter
sahf
aaa
pop
int
jns
gs
imul
pop
pop
or
jae
int
insl
push
xchg
outsb
out
icebp
pop
outsl
stos
lock
sub
imul
lcall
movaps
test
cmp
mov
adc
mov
dec
pushf
jecxz
leave
nop
dec
mov
popa
mov
ljmp
xchg
mov
movsb
sub
adc
dec
jp
dec
enter
ftst
pop
pop
jns
fstpt
in
pop
pop
mov
into
dec
jns
jae
jg
enter
test
icebp
jecxz
lret
mov
mov
cmc
ljmp
in
jmp
data16
push
xor
xor
inc
rcrb
fidivs
xor
dec
push
stc
sarb
jae
mov
xchg
xor
add
ljmp
sub
jge
lahf
int3
mov
push
adc
cwtl
imul
add
aam
jge
jno
imul
cmpb
xor
jns
sti
cld
cmp
sti
out
lahf
hlt
inc
mov
popf
and
push
add
sbb
and
jle
add
add
popf
push
imul
jecxz
mov
inc
cld
xor
ret
jno
mov
and
xchg
and
shll
mov
loope
test
movsb
imul
movsb
push
xchg
lea
mov
pop
sub
mov
xchg
icebp
addb
test
leave
cld
aas
ja
jno
call
inc
icebp
mov
fsub
xchg
cmp
out
iret
les
jecxz
inc
mov
imul
mov
mov
add
stos
in
jge
xchg
jnp
aam
dec
mov
jnp
sbb
repnz
dec
pop
loop
push
add
mov
bound
lds
bound
fwait
leavew
das
rcpps
clc
ret
xor
test
pop
lods
xorb
mov
mov
add
pop
pop
fisttpl
notb
inc
jmp
sub
sbb
orb
fcmovnb
icebp
loope
xchg
test
mov
fldt
cmp
push
shrl
lods
pop
xor
les
lods
addr16
repz
pop
icebp
dec
adc
jmp
push
pop
cmc
pop
xlat
pop
popa
cmp
push
mov
inc
mov
cmp
in
js
stos
dec
pop
or
lock
add
mulb
push
adc
fmuls
fisubrl
int
jns
addr16
aas
push
dec
jbe
mov
mov
lcall
popa
mov
rcrb
jle
xorb
insb
loopne
jge
jbe
or
ret
jp
andl
icebp
xchg
insb
jns
jl
push
aas
lea
imul
push
adc
sbb
sub
mov
pop
popa
in
ret
aam
pop
pop
outsb
sbb
aas
ja
jge
test
pop
jg
js
pop
sub
pushf
cwtl
sub
into
orb
and
add
sub
cmp
jp
mov
and
push
bound
or
inc
xchg
add
lds
and
mov
lea
xor
inc
shll
imul
and
cs
inc
mov
jg
fisubs
enter
outsb
push
adc
aas
and
lcall
mov
push
or
inc
out
pushl
aas
push
mov
lcall
jle
insl
es
push
ds
lahf
mov
shl
inc
jne
gs
aas
sbb
arpl
sub
cmc
mov
push
jnp
mov
out
pop
add
and
lahf
push
xchg
push
xlat
ret
or
sahf
mov
int
cmp
mov
outsb
pop
pop
jb
lahf
xchg
call
cmc
test
sbb
and
leave
test
repnz
out
jnp
pop
ljmp
jae
xchg
jp
into
pushl
outsb
mov
icebp
push
xchg
fistps
imul
xchg
pop
sarl
inc
xchg
xchg
dec
mov
xchg
or
inc
mov
testb
je
xorl
outsl
cmp
jg
lcall
pop
mov
push
xchg
xor
inc
jge
inc
divl
jno
clc
pop
mov
jge
rcrb
jnp
push
add
inc
movsb
shlb
iret
inc
xchg
pop
pop
addb
nop
add
pushf
mov
sbb
cmc
dec
mov
xchg
aaa
xchg
aas
outsl
sbbb
pop
jbe
inc
mov
add
xchg
lret
lcall
jp
shrb
sub
sarl
sarl
xchg
insb
dec
mov
jne
addr16
mov
cs
scas
sub
or
xor
add
mov
mov
stos
fstp
push
aam
push
outsb
cli
push
jmp
push
mov
sub
add
je
fucomp
lea
pop
cmp
push
push
adc
sbb
or
cmp
in
fimuls
sbb
mov
shr
push
daa
dec
sub
jns
outsb
cmpsb
jl
pop
sub
adc
jns
fnop
mov
movsb
insl
dec
loopne
shrl
cld
in
pop
mov
push
leave
ljmp
dec
faddl
mov
popa
cmp
sub
jns
push
int
push
jne
jl
mov
lret
outsl
sub
pop
ds
hlt
jmp
cmp
cwtl
test
mov
pop
mov
hlt
dec
dec
int
xor
data16
lcall
push
sub
fidivs
cmpsl
xor
jge
and
inc
hlt
arpl
xchg
in
xchg
pop
aas
jge
add
sbb
daa
stos
addb
sbb
dec
xchg
psubsb
out
pop
xor
add
cmp
sbb
into
mov
push
sub
xchg
pop
mov
sbb
neg
jg
mov
imul
repnz
enter
std
loopne
ljmp
rcll
mov
cmpb
add
icebp
cmp
lret
lock
ror
mov
or
ret
push
aam
sar
out
inc
pop
scas
pop
inc
pop
lret
xor
push
jp
iret
addr16
add
rorl
out
jnp
dec
test
dec
sbb
imul
push
rcrl
out
cmp
push
insl
jbe
lcall
aas
fisubrs
sub
popa
clc
aas
aam
ja
push
pop
adc
jbe
pop
inc
cmp
arpl
movsl
popa
js
leave
xorl
add
ret
popf
push
sub
lea
frstor
push
xchg
pop
std
incb
jns
jnp
ret
orb
xor
add
addl
sarb
div
jl
mov
and
push
add
mov
leave
fisubrl
xchg
idivl
mov
lods
or
sti
cmp
sarl
sti
xchg
lcall
loopne
vpmacswd
fdivr
int3
lods
or
mov
sti
inc
jp
cmp
cld
aas
leave
xor
xor
xchg
jbe
pop
jae
push
cmp
cmp
das
pop
clc
mov
sbb
push
clc
jecxz
mov
jns
add
test
dec
out
std
loopne
in
cmpl
adc
inc
jmpw
nop
jnp
push
mul
or
into
cmpsl
mov
inc
and
lods
mov
jmp
iret
leave
int
push
lods
out
add
jecxz
xchg
lock
leave
pop
xor
adc
test
jbe
stos
sub
cld
iret
mov
mov
out
jge
add
in
mov
shlb
push
add
xor
pushf
add
and
dec
xor
lret
stos
cmp
enter
add
jns
jno
movsb
xchg
test
outsb
insl
cld
xor
ljmp
jae
loopne
out
ret
mov
pop
push
popa
call
sub
jns
cmp
push
lods
sub
fistpl
stos
push
jl
push
inc
aam
mov
mov
jp
and
mov
add
bound
mov
pop
hlt
mov
aas
lret
dec
pusha
out
push
pop
in
push
add
cmp
and
addb
mov
dec
xchg
icebp
dec
std
push
xchg
mov
pop
cmp
mov
lahf
pop
add
fstpt
pop
mov
jg
in
sbb
jb
jp
outsl
push
and
shrl
mov
or
xchg
in
cmp
adc
fsubrl
js
jbe
dec
fisubs
xor
adc
inc
cmpsl
xchg
stos
xchg
shrb
xchg
test
leave
xchg
jg
shll
inc
int
imul
jp
addl
add
push
lods
push
ficoms
add
int
in
cs
inc
pop
adc
popf
mov
inc
dec
xor
push
in
and
fildll
jbe
icebp
or
sub
stos
add
mov
shll
bswap
cmc
sahf
int
mov
cmp
in
pop
stos
xchg
outsb
je
mov
test
mov
inc
ret
jecxz
add
xchg
and
add
sbb
dec
sahf
mov
arpl
inc
and
jns
sbb
mov
push
jecxz
faddp
mov
into
das
mov
lea
jnp
fidivrl
gs
sub
mov
add
pop
jg
data16
mov
dec
pop
enter
pop
jle
dec
lods
sbb
addl
jl
push
ljmp
lock
mov
incl
mov
push
scas
sahf
sbb
mov
mov
mov
dec
aad
pop
fwait
lods
rcl
jge
mov
shll
mov
divl
ja
push
sarb
cmp
cld
sub
adc
xchg
test
aad
push
add
mov
cmp
test
test
jno
aas
lea
aam
and
pavgw
dec
cli
fadds
and
push
adc
lcall
leave
sbb
sub
lret
mov
iret
iret
cltd
adcl
je
scas
jecxz
fs
or
into
xor
pop
push
pop
in
jge
pop
push
push
push
adc
jne
add
popf
pop
jb
stos
ja
fbstp
stos
push
jo
push
rcrb
lock
cwtl
pusha
out
enter
imul
and
pop
add
iret
outsl
dec
and
in
mov
push
test
pop
fwait
fwait
into
inc
pop
pusha
ljmp
cmp
cmp
fiaddl
jns
jo
sbb
fstpt
xorl
adc
fadd
cld
sbb
mov
ja
lahf
fsubrs
stc
cmp
jg
jo
bound
aam
jnp
repz
xchg
xlat
mov
cli
fisubrl
lds
sub
in
xchg
mulb
int
mov
fdivr
pop
push
aas
add
ficoml
scas
in
mov
lcall
shl
xchg
xchg
mov
sub
cmova
imul
daa
les
ljmp
sbb
aas
sub
mov
nop
add
xchg
test
daa
mov
popa
adcl
out
out
push
outsb
jnp
xor
insl
adcb
cmp
imulb
jp
xchg
js
je
orl
jbe
jmp
inc
addl
rcl
jp
push
cmpsl
jne
stc
add
lahf
jno
bound
xchg
ds
mov
stc
pop
lret
push
lret
mov
sub
cwtl
lods
mov
sub
push
mov
add
les
cmp
mull
mov
test
es
repz
mov
add
sub
pop
inc
out
addb
cmp
jmp
pop
jbe
xor
outsl
pop
std
mov
fimuls
jno
imul
xchg
xor
sbb
jae
sbbl
inc
pop
mov
lret
mov
movl
popf
sar
add
int
jmp
repnz
shl
push
clc
iret
loope
test
xchg
icebp
sbb
inc
gs
push
test
sbb
dec
add
sahf
icebp
push
outsl
pop
and
lea
nop
xchg
pop
adc
pop
imul
inc
jne
scas
arpl
iret
xor
shlb
leave
jae
pop
leave
mov
sub
jb
jbe
movsb
addr16
cmpsb
aas
cmp
cmp
jno
add
icebp
cmp
fcmovnbe
addr16
test
and
imul
and
mov
subl
test
jle
mov
fs
out
stos
gs
and
cli
iret
and
jno
loop
loopne
addr16
out
lret
ret
aas
mov
xchg
in
sti
xor
ret
push
mulps
clc
in
cs
mov
das
sti
inc
xor
mov
hlt
lret
in
fwait
inc
cli
scas
mov
inc
insb
mov
mov
xlat
jns
pop
jae
stos
xor
popa
sti
cs
lods
xchg
sbb
mov
or
cltd
xor
pop
outsl
jp
pop
cli
rorb
aad
aaa
in
into
sub
mov
mov
gs
icebp
cltd
mov
push
jne
jb
push
or
pop
mov
dec
lock
test
pop
add
aas
jecxz
setae
btr
mov
mov
xor
ds
gs
clc
add
out
mov
adc
pop
ret
jo
pop
mov
mov
pop
popa
popa
inc
inc
jmp
inc
adc
enter
pop
clc
cmp
cmp
xchg
loop
xor
xchg
cmp
addr16
mov
pop
insl
enter
test
sub
stos
sbb
inc
inc
pop
cmp
push
xchg
and
es
loopne
cmp
aas
sub
or
in
dec
or
mov
movsb
bound
mov
mov
arpl
add
out
and
addr16
xor
icebp
mov
std
ud2
aas
scas
js
and
es
outsl
jg
iret
or
and
jne
mov
jnp
addr16
sahf
hlt
in
and
xchg
iret
mov
push
xorl
push
pop
pop
sub
in
jb
xor
sub
incl
hlt
lock
xlat
outsl
aad
leave
ja
into
inc
xchg
add
cli
jge
cmpb
xchg
insl
imul
in
arpl
out
dec
aad
pop
push
das
int
lcall
out
xchg
ret
sub
jp
push
lcall
cmp
mov
das
pop
aad
addr16
ret
leave
imul
cmp
push
fchs
fnsave
dec
test
movsb
push
mov
xor
aad
out
mov
in
mov
fcomip
cmpsb
mov
rcl
mov
stc
and
insl
and
jo
jns
push
nop
movsl
scas
cmp
ss
popf
outsl
shl
enter
jg
mov
pop
aad
out
mov
mov
jns
jle
jne
in
xchg
rcr
xlat
pop
mov
cmpsl
bound
decb
mov
loop
pop
clc
cwtl
out
dec
jge
mov
fidivrs
shlb
cmp
pop
add
test
push
dec
ja
push
popf
sbbb
mov
insl
pop
iret
xlat
xchg
pop
pop
dec
shrl
ret
or
mov
pop
jp
lret
jns
lret
cs
dec
nop
push
xchg
pop
inc
push
cmpsb
and
cmc
pop
lahf
imul
call
pop
mov
bound
mov
mov
mov
jle
lods
shlb
mov
sub
mov
fmull
xchg
gs
out
rorb
popf
in
rsqrtps
adc
mov
cmpsb
outsl
add
mov
mov
mov
pop
push
mov
mov
mov
add
inc
sahf
cli
inc
loop
mov
les
jg
dec
add
inc
ds
inc
jns
xor
jbe
sub
sub
sub
mov
stc
and
and
cmp
in
das
pop
xchg
aaa
push
fcomip
daa
loopne
jl
sbb
repnz
sti
mov
jns
ret
pop
ficomps
xlat
lock
mov
fimuls
repz
xchg
fistpll
pop
jle
sub
rcrl
shlb
cmp
out
jnp
sbb
sarl
adc
inc
xchg
adc
jno
std
addb
movl
mov
inc
cld
and
and
push
jnp
fs
imul
sar
mov
jnp
push
adc
add
xchg
jecxz
push
adc
jecxz
out
xor
jmp
test
push
inc
pop
mov
rcl
jle
inc
dec
mov
cmpb
repz
mov
ljmp
loope
add
jno
mov
ror
fcmove
data16
lods
adc
rolb
jge
aam
in
pop
iret
ss
fiaddl
out
jnp
pop
jmp
jl
add
inc
lar
jmp
mov
jbe
pop
sbb
fs
xor
lahf
xchg
cmp
mov
jg
hlt
jno
push
push
scas
jmp
stos
fdivrs
mov
filds
shrb
mov
add
push
imul
pop
sbb
mov
sbb
dec
mov
addr16
les
std
out
jo
out
and
imul
in
sub
bound
lahf
fisttpll
int
push
and
xchg
cltd
mov
int
icebp
loopne
jecxz
out
test
out
inc
sub
rol
imul
ja
out
sub
repnz
arpl
mov
pop
jae
dec
push
inc
imul
xor
out
sti
ret
push
or
cmpsb
dec
sub
repnz
lahf
loopne
rcl
decl
sahf
add
nopl
popl
clc
mov
xlat
sbb
adc
inc
std
jp
mov
movsb
lahf
daa
vmwrite
dec
jbe
mov
shr
push
loope
por
out
or
inc
stc
adcb
stos
dec
mov
cmp
push
fisubrs
pop
jle
paddusw
inc
jbe
out
adcb
pop
fwait
lea
rorl
shr
arpl
aas
aam
pop
es
test
std
cmpsl
or
adc
inc
femms
xlat
mov
push
jb
and
mov
jp
outsl
mov
fidivl
jo
inc
push
inc
mov
imul
jno
test
imul
in
loope
jg
gs
jns
movntps
insl
xor
xor
lret
xlat
cmovg
out
cmp
scas
inc
lock
enter
leave
lret
inc
sti
es
cmp
dec
push
sahf
mov
clc
gs
mov
loop
clc
insb
pop
or
add
test
fisubrl
dec
outsb
add
jge
jnp
sub
xlat
dec
repz
cmp
pop
cs
xchg
daa
cwtl
inc
into
add
loope
in
es
fadds
nop
fiadds
jle
scas
xor
fsub
cli
lret
mov
orb
into
test
push
mov
lock
jp
lret
mov
fcmovnu
mov
pop
outsl
insl
rorb
or
ret
je
imul
nop
xor
fsubrl
mov
lret
add
add
pop
gs
leave
fsubl
lret
cld
test
and
addb
pop
cmp
and
popa
mov
push
test
pusha
pop
or
dec
push
cmp
mov
data16
aaa
icebp
test
into
inc
lahf
inc
cld
inc
inc
adc
loopne
pop
stos
sub
mov
test
movsl
repz
leave
xlat
pusha
aaa
xor
push
add
push
imul
popa
cmp
or
loope
loopne
sar
dec
outsb
xchg
pop
lods
movsb
popf
push
sub
jno
lock
int
mov
test
fucomp
inc
mov
dec
aas
xorb
mov
sub
insb
leave
xchg
es
dec
adc
aas
fs
pop
ja
aam
pop
cmp
lahf
sub
jae
ret
sub
dec
shll
addr16
fcoml
jns
mov
aam
flds
push
sub
mov
test
fs
js
js
pop
xor
lret
aad
ds
mov
jp
lcall
xchg
mov
xchg
scas
cmp
repnz
ss
push
push
pop
xorb
gs
add
rorl
into
call
xor
out
adc
fdivrs
add
cmp
cmpsb
sbbb
pop
dec
cltd
sbb
lods
add
mov
jno
imul
ds
stc
repz
sbb
pop
sbb
inc
add
outsl
cmp
pop
fldl
jle
loop
jno
leave
icebp
cmp
cmp
pop
pop
jp
test
sbb
outsb
lods
jecxz
sbb
push
and
stos
stos
jae
mov
fucomip
inc
out
imul
dec
movsl
call
xchg
adc
out
orl
cmpsl
scas
mov
jle
jg
fistl
add
pop
shll
and
dec
inc
mov
fwait
in
jne
inc
cltd
jno
idivb
fisubs
dec
cmp
adc
out
and
or
pop
inc
and
mov
cmp
lcall
popf
push
out
or
ret
insl
out
mov
mov
ss
dec
xchg
jo
dec
les
xor
pop
and
fwait
or
imul
mov
adc
into
aas
jne
sub
out
popa
daa
ret
pop
insb
mov
in
push
fdiv
cli
inc
sbb
outsl
push
mov
inc
xchg
jbe
cli
ret
popf
in
add
mov
addr16
cmp
ror
pop
js
arpl
into
leave
icebp
shll
insl
cmc
jbe
mov
sbb
and
fcoms
mov
cltd
inc
sbb
push
adc
cmp
xor
mov
ret
out
mov
pop
cmp
dec
repz
insb
xchg
outsb
vmread
adc
sbb
pop
pop
in
or
or
jae
mov
fistpll
leave
loopne
test
xor
hlt
push
imul
and
pop
shlb
out
insb
mov
adc
loopne
sti
add
mov
pusha
push
lds
lret
test
not
lock
out
jp
repz
dec
push
mov
lds
pop
mov
cmpl
dec
jg
lods
mov
push
dec
jg
jo
out
sub
fwait
cmp
ret
call
dec
icebp
jno
cmp
or
xor
call
notl
les
ss
fs
rolb
adc
inc
mov
mov
cmpsl
aaa
jmp
lcall
imull
fisttps
pop
movsl
xchg
pop
addr16
sub
addr16
aaa
jmp
incl
and
addr16
ja
add
dec
mov
pop
jmp
lahf
call
addr16
in
aaa
repz
cmp
push
idiv
repnz
inc
icebp
addr16
popf
push
incl
push
xchg
add
pop
or
adc
addr16
bound
cli
mov
outsb
or
jae
ja
push
cmp
cmpsb
inc
push
lcall
inc
and
pop
stc
and
addr16
jecxz,pn
push
xor
cmp
xor
jno
push
repz
pop
or
push
jnp
cmpsb
xchg
dec
mov
dec
repz
mov
neg
mov
adc
mov
push
stos
jo
insl
mov
sti
cmpsl
sub
bound
xchg
jg
pushf
arpl
jnp
push
pop
jg
jle
adc
xchg
mov
mov
jmp
nop
jae
das
cmp
mov
lea
mov
hlt
rep
adc
shlb
out
shrl
daa
fisttps
sub
rcll
adc
cwtl
mov
inc
mov
xor
int3
add
adc
push
pop
inc
shll
test
and
aaa
call
mov
lcall
aas
jnp
adc
rcrb
nop
dec
decl
ror
sbb
mov
scas
cmp
stos
jb
pop
xchg
mov
and
inc
cmp
xorl
jecxz
pop
jp
jo
xor
incl
ja
incl
aaa
sub
and
fsubr
pop
int3
lcall
inc
orb
inc
add
lret
rorb
pop
dec
jnp
mov
shlb
sbb
je
test
inc
stos
arpl
mov
sub
pop
popf
ljmp
push
aas
into
popf
sub
mov
lcall
inc
out
mov
or
icebp
in
fadds
in
xchg
jnp
mov
not
aaa
push
stos
pop
mov
cmp
xor
push
cli
fildl
int
imul
or
arpl
jne
out
add
jnp
adc
mov
jae
imul
subl
xchg
sti
call
jae
mov
std
mov
fwait
addr16
jb
in
pushl
bnd
adc
cli
jns
push
adc
cmp
pop
popa
inc
mov
pop
xchg
ja
mov
cmp
test
mov
int3
mov
push
into
add
sbbl
pop
cmpsl
aam
jge
xchg
in
je
add
sbb
cmp
popa
inc
rolb
gs
mov
mov
xlat
add
xchg
gs
jmp
scas
jge
loop
in
and
jae
fildl
shl
mov
shll
repz
lret
lock
dec
dec
fldt
scas
push
cltd
in
cmpl
xor
stc
fdivl
andb
cmp
in
scas
loopne
cli
lret
push
push
iret
add
mov
xor
cmp
sub
sub
push
jge
std
jne
fsubs
jbe
lcall
bound
dec
mov
xor
sub
movsl
jns
xor
fwait
std
cmp
and
xchg
pop
cmp
pop
inc
jbe
jns
jb
test
fildll
mov
mov
out
cmpsl
fistpll
sahf
mov
mov
shll
xchg
out
sbb
push
pop
inc
and
mov
adc
add
or
dec
xor
pop
mov
add
arpl
dec
pop
push
pop
mov
imul
mov
jbe
jb
add
rol
aas
lods
xchg
hlt
rcl
jl
rcrb
arpl
mov
idivb
mov
fsubrp
icebp
inc
pushf
fdivs
jl
mov
leave
sub
and
out
dec
es
cmp
scas
aas
arpl
dec
ret
push
jg
fdivs
mov
push
aaa
push
sub
jb
jnp
xchg
xchg
gs
cmp
ret
push
mov
lret
rcll
fisttpl
cltd
jl
pop
pop
fimuls
aam
ud0
inc
jnp
cmp
repz
std
aam
imul
sbb
scas
inc
std
out
pop
fimull
xchg
std
loopne
cmp
mov
cmpb
mov
mov
nop
mov
fiadds
aam
lret
inc
mov
cmp
jecxz
xlat
pusha
data16
cmp
push
push
jnp
stc
fwait
cmp
ja
inc
inc
xchg
cmp
loop
cmp
jae
xchg
pop
push
stos
adc
movsl
pusha
mov
jge
das
xchg
push
lcall
sub
mov
icebp
mov
or
scas
jo
jo
mov
xor
xchg
pop
cmpsl
cli
ret
jge
pop
sti
lock
xchg
cmp
inc
shrl
adc
or
jle
rol
add
mov
loopne
popa
imul
fildll
pop
push
mov
jecxz
les
cmp
jg
push
mov
flds
scas
inc
jmp
ret
cltd
cmpb
sub
sbb
push
ss
sub
jge
test
enter
inc
and
dec
mov
ja
pmaxsw
insl
ret
pop
into
pop
data16
out
adc
sub
jnp
fwait
xor
paddsw
jno
ss
sub
cmpsb
pop
cmp
adc
clc
push
nop
pop
orl
and
mov
adc
test
jp
and
xor
mov
in
jne
add
xchg
test
dec
repnz
fwait
aas
clc
popa
mov
xchg
hlt
sbb
repz
shll
stc
stos
insl
mov
fwait
ret
fisttpll
adc
outsb
mov
imul
jno
dec
and
add
lahf
aas
fistpll
fnstcw
rol
push
inc
faddl
loop
fistps
iret
push
int
mov
dec
bound
rorb
xor
ja
pushf
add
jge
inc
outsl
add
dec
add
aad
test
or
aad
mov
jmp
push
aas
flds
pop
mov
icebp
fcoml
push
nop
inc
and
xlat
xchg
pop
jle
and
inc
cld
insb
cmp
push
addr16
into
aaa
andb
ret
jne
orb
sbb
pop
pop
or
pop
xor
or
jle
sarb
fs
leave
add
in
arpl
sbbb
jb
jne
test
push
pop
xchg
es
dec
push
imul
jp
xchg
je
and
or
cmpsl
mov
movsb
xor
test
and
sbb
mov
ret
jns
and
arpl
xor
mov
es
jg
shll
sti
aas
aam
mov
mov
out
jbe
imul
mov
iret
jns
pusha
xchg
cli
in
dec
add
incl
mov
rorb
sub
ds
scas
mov
gs
inc
cmpsl
pusha
cli
imul
popa
sbb
ret
fidivs
dec
sbb
and
or
push
and
pop
movsb
jae
xchg
idivl
fildll
addr16
sbb
xor
movsb
mov
jae
push
ficoml
push
je
or
and
jno
dec
test
xchg
inc
jmp
es
mov
movsl
dec
aam
inc
pop
in
in
mov
sbb
push
inc
out
jp
pminub
ret
mov
sub
sbb
cmp
adcl
iret
je
cmpsb
lock
sbb
in
jns
fstpl
dec
pop
adc
pop
fnstsw
icebp
daa
out
aad
out
cld
mov
addl
fisubs
sub
aas
loopne
jnp
icebp
leave
mov
cltd
cwtl
subb
push
xchg
push
or
sbb
sbb
in
pop
or
icebp
shll
jns
lods
outsb
fcmovnbe
test
and
sti
sar
jp
add
jg
into
movsl
jno
lock
vcvtps2dq
mov
test
enter
jp
ja
out
add
mov
xchg
sarl
stos
sbb
jne
loope
bound
aad
or
fadds
rol
ret
xchg
inc
or
stos
int3
shll
hlt
push
xchg
fisttpll
bound
adc
add
ja
hlt
xor
dec
outsb
or
jmp
dec
cli
xchg
jbe
js
fcmovnu
imul
leave
jp
add
lahf
icebp
mov
inc
insb
aad
push
dec
cmp
mov
xchg
lds
inc
aad
inc
je
or
int3
add
repz
adc
test
adc
sbb
aaa
inc
mov
adc
cmp
lcall
adc
adc
mov
aas
mov
or
xchg
cmp
daa
sub
jo
sub
mov
adc
cmp
mov
dec
outsb
leave
jge
bound
scas
ja
out
xchg
loop
imul
in
jne
out
mov
int
loope
inc
and
pop
in
test
aaa
fisubl
pop
jno
ficompl
int
out
cmp
adc
add
pop
fwait
mov
add
lret
jle
jecxz
cmp
ds
cmp
xchg
mov
jne
insl
fwait
mov
cld
out
pop
sbb
mov
sub
lods
jg
ret
fldenv
xor
add
jo
pop
xchg
fidivrs
fwait
inc
outsb
stc
addr16
cltd
inc
data16
cmc
pop
xchg
mov
inc
and
adc
jb
lcall
in
cli
setns
popl
rolb
fistpl
cmp
pop
inc
jae
push
into
push
in
jecxz
outsl
ds
jge
jnp
std
push
adc
in
scas
in
dec
ja
je
fsubl
push
imul
cmp
sbb
aaa
inc
in
lods
test
adc
insb
add
lahf
lds
lods
iret
mov
lods
mov
lahf
bound
rcl
add
pop
iret
pop
mov
js
and
lock
xchg
mov
stc
ret
sbb
mov
inc
gs
add
mov
sarl
mov
fdivs
or
fldt
cli
decl
or
mov
sbb
jb
js
call
cmpb
popa
xchg
pop
movsb
pop
repz
mov
ss
lcall
shld
add
cmpsb
mov
outsb
mov
mov
test
mov
pop
pop
dec
inc
jae
mov
cmp
sbbb
loope
mov
xor
arpl
fists
mov
stos
cmp
push
jne
sub
popa
mul
push
jns
in
jno
or
andb
cmp
jecxz
jo
icebp
fadds
sub
es
fst
sti
jnp
test
in
push
fsubs
popf
push
repz
jns
cmp
insb
jl
inc
in
mov
jne
jg
inc
push
mov
sahf
imul
adc
jae
out
pusha
jae
inc
adc
mov
jns
xor
inc
dec
popa
mov
xchg
dec
inc
cmp
mov
lcall
jne
imul
jne
ret
sbb
es
in
add
test
popf
xlat
and
in
das
mov
cmp
outsb
stos
leave
out
fbld
pop
xor
movsb
sub
inc
sti
mov
out
and
movsl
fdiv
inc
jge
sub
sub
or
mov
xor
and
out
ret
shlb
pop
mov
mov
mov
sub
mov
pop
fcompl
cltd
push
jns
cmp
sti
incb
mov
cmp
repnz
mov
dec
repz
ljmp
addb
jmp
cmp
jb
push
js
xchg
mov
arpl
fisttpl
rorb
mov
sub
pop
inc
pop
ja
dec
and
orb
fldenv
je
loope
daa
sub
and
leave
pop
in
sub
mov
jp
jno
sbb
adc
sub
imul
mov
bound
pop
std
icebp
mov
aam
rol
lods
stc
push
and
xchg
unpckhpd
ds
jne
hlt
mov
aas
fbstp
xchg
jae
pop
jg
inc
gs
ja
adc
mov
pop
jg
aas
dec
add
jg
xor
xchg
insl
pop
aas
leave
sar
sbb
mov
popf
inc
icebp
add
out
sub
test
fldt
xlat
mov
test
popa
inc
das
xchg
pop
loope
lods
std
sbb
pop
inc
mov
subl
aam
jb
push
sbb
xchg
shrl
andb
enter
and
mov
cmp
mov
outsb
ja
sbb
pop
cld
shll
ds
mov
mov
jge
fs
xchg
jl
outsb
mov
push
pop
jb
xchg
and
in
test
push
xchg
sbbl
and
jb
fisubrs
xor
dec
movsl
push
inc
jns
cmpsl
cmpsb
call
sub
lods
inc
push
mov
loope
jecxz
xchg
push
or
xchg
std
out
arpl
mov
xor
cmp
pushf
test
fs
ret
xor
stos
sub
pop
popaw
mov
repz
andb
inc
aad
sub
popa
add
stc
pop
mov
and
into
sti
enter
and
sub
leave
scas
push
iret
mov
fsubl
push
int
mov
xchg
jle
cld
xchg
rcl
out
mov
jecxz
jns
mov
jge
stc
addr16
add
lock
fwait
push
jle
out
jo
xchg
in
loop
scas
jmp
push
xchg
stos
adc
ds
or
pop
shlb
pop
xchg
cs
sti
maskmovq
testl
mov
insb
aam
mov
fldenv
lcall
scas
in
sbb
test
xor
cmp
int3
test
sti
mov
xor
mov
ljmp
shrl
add
inc
add
add
sbb
inc
fisttps
dec
cmpsl
cmp
or
jbe
pop
and
add
add
fs
bound
loopne
popa
jle
cmc
dec
pop
xchg
jae
xchg
xor
dec
sub
sub
adc
push
popa
add
jmp
cmpsl
pushl
jnp
lret
sarl
rol
mov
jmp
adc
xchg
lock
pop
sub
lret
lcall
or
std
cmp
jae
cmp
aad
or
int3
call
inc
or
sbb
mov
cli
insb
test
cmp
adc
xor
push
mov
jl
rol
inc
iret
stc
ret
xor
rorl
shrb
jp,pn
and
nop
mov
ud1
and
incb
in
push
jbe
subl
xor
jnp
out
inc
in
jecxz
into
cltd
mov
pop
and
mov
lea
xchg
faddl
add
mov
lods
dec
or
into
mov
cmp
fsubs
inc
sub
popf
into
mov
cmp
adc
bound
test
sub
dec
js
lahf
jnp
dec
das
jg
loope
cld
jb
inc
insb
ds
adc
mov
adc
jg
mov
outsl
adc
push
iret
imul
das
jnp
orl
mov
les
adc
clc
xlat
push
and
mov
icebp
test
or
fiaddl
mov
scas
test
or
dec
out
mov
sub
popa
xchg
push
mov
out
xchg
icebp
inc
xchg
push
mov
pop
popa
iret
cli
movsb
dec
stos
outsb
negl
in
push
fs
add
adcb
xchg
ret
cld
cmp
xor
inc
cmpsl
les
test
push
sbb
mov
xor
nop
jl
dec
sti
mov
dec
loopne
xor
adc
dec
loopne
iret
mov
fcomps
fistl
xor
stc
xor
insb
cmpsl
fistpll
jnp
inc
pop
inc
jbe
pop
call
rcr
fstpl
mov
sbb
mov
xchg
pop
add
adc
loope
or
clc
add
push
add
outsl
movq
test
xchg
sbb
add
shll
cmp
insb
out
iret
sti
sbb
arpl
pop
sahf
adc
mov
xor
pop
scas
jge
not
fwait
dec
fidivrl
mov
mov
pop
add
fimuls
sbb
ds
xor
mov
sti
and
fidivl
adc
in
bswap
lea
rclb
cmpb
adc
dec
fbld
pop
insb
sub
iret
jge
jns
test
cmp
jns
in
incb
outsl
dec
jne
std
and
cmp
daa
mov
fidivrl
jne
adc
nop
ret
enter
outsl
cld
sub
pop
mov
cmp
movsb
push
push
and
out
cs
stos
hlt
fs
lock
movsb
mov
cld
ja
push
les
fildll
cltd
fcmovnb
cmp
push
xor
orb
sbb
push
push
cmp
scas
js
rolb
nop
pop
imul
adc
jnp
jnp
movsb
das
mov
mov
pop
push
jnp
push
rcll
push
je
adc
push
xor
scas
pop
xor
out
inc
inc
push
jns
xchg
fcompl
cmp
add
xor
and
xor
ffreep
jl
jge
jb
repnz
push
inc
jl
cwtl
jnp
sub
jge
inc
jp
mov
xor
imull
mov
pop
leave
call
or
data16
inc
jg
dec
sbb
or
mov
pushf
fstpt
popl
insb
mov
push
sbb
mov
push
arpl
jle
add
sbb
rolb
popa
orb
fsubrs
addb
dec
inc
adc
imul
dec
push
aas
mov
filds
loope
dec
pop
xchg
add
mov
xchg
fidivs
andnps
jmp
add
and
mov
pop
or
addl
push
cli
add
jge
inc
jp
cmp
in
inc
adc
mov
push
test
jns
ds
lret
cmp
sbb
add
dec
dec
jnp
adc
dec
sti
push
mov
adc
add
das
incl
mov
cmpsl
inc
shll
cwtl
jmp
jg
loopne
gs
sub
shl
xchg
repz
dec
fcmovnbe
and
cmp
test
xor
sub
xor
nop
pushl
inc
jmp
arpl
ret
testb
sbb
out
js
adc
and
xor
idivl
std
add
jnp
leave
push
push
sbb
lock
jg
jae
inc
div
repz
sub
pusha
loopne
imul
jbe
push
arpl
enter
scas
out
jle
testl
jno
xchg
out
mov
mul
fsubrs
cltd
out
add
push
test
sub
shlb
outsb
cmp
jne
sti
or
outsb
cs
aam
xchg
rcl
xchg
leave
jo
arpl
cmp
and
outsl
test
sbb
mov
ljmp
aas
stc
lahf
jp
mov
mov
imul
dec
mov
out
mov
pop
inc
lock
leave
jmp
mov
icebp
jmp
rcl
ljmp
hlt
push
pop
mov
dec
shl
into
xor
push
or
or
jle
adc
pop
push
adcb
push
sub
lods
push
ja
dec
xor
dec
jnp
inc
mov
or
cmp
push
mov
inc
cmp
imul
inc
or
cld
jb
lcall
inc
and
pop
loope
int3
test
inc
loope
int3
xchg
push
loopne
loop
mov
add
inc
pop
mov
and
es
dec
jp
out
cld
mov
sbb
pop
mul
rol
mov
jne
sti
loop
xor
stos
movsb
shl
test
daa
jl
popa
out
jnp
ja
leave
or
adc
push
mov
lcall
xchg
xor
push
jle
xchg
xor
js
pop
jb
sub
inc
std
loop
in
imul
push
ret
push
inc
mov
scas
xor
add
scas
lea
out
test
xchg
stc
jl
pop
cmp
aam
jb
jge
mov
sbb
inc
into
ljmp
addr16
out
into
adc
stos
mov
inc
shl
aam
adc
scas
jns
sub
icebp
fidivrl
in
dec
imul
gs
pop
mov
addr16
cmp
leave
jg
sub
xchg
adc
xchg
sarb
jns
inc
or
mov
sub
xchg
xchg
int3
mov
mov
mov
call
cmp
add
lcall
and
ja
add
movq
cmp
pop
lods
lret
and
jnp
sar
jno
clc
pop
or
pop
push
outsb
es
xchg
aam
out
mov
roll
mov
pop
dec
daa
mov
jns
incl
jmp
pusha
sbb
or
popa
addb
outsl
mov
cltd
cmc
xor
push
and
out
cmp
xor
add
fmuls
pop
pop
or
ljmp
add
xor
movl
inc
popa
and
icebp
stos
sub
imul
fisttpl
lret
add
cmp
add
out
lds
ret
inc
pushf
ja
into
cmp
xchg
js
dec
ss
push
and
jno
mov
jnp
fimuls
ret
or
lret
or
lret
fldz
adc
je
adc
lea
popf
dec
pop
pop
jno
pop
dec
sbb
jg
jo
push
xchg
ja
sbb
fldt
adc
xchg
jg
ret
jnp
mov
ja
mov
loopne
arpl
adc
fldenv
mov
dec
push
mov
or
jo
cvtpi2ps
lods
das
mov
loopne
xchg
adc
dec
in
mov
ret
rorl
and
cwtl
add
mov
and
inc
les
push
inc
repz
dec
pushf
out
add
fdivl
add
push
add
negb
inc
arpl
shrl
push
jge
int3
dec
rorb
jecxz
lcall
test
pop
xor
pop
gs
stos
in
hlt
ds
ds
sbb
pop
roll
arpl
icebp
pusha
insl
jno
int3
repz
xchg
cmp
xchg
aam
cmpl
fwait
lret
pop
xchg
pop
jnp
xchg
lea
cmp
bound
gs
insb
xchg
in
add
add
enter
and
hlt
adc
ja
andb
push
daa
pop
jge
mov
pop
pop
jo
jno
jae
imul
pop
out
cli
pop
lahf
and
pop
insl
bound
pushf
add
mov
sub
inc
xor
out
pop
jno
mov
mov
add
pop
inc
jae
mov
inc
xor
icebp
shrb
roll
or
mov
fdiv
je
imul
and
pop
mov
outsl
mov
outsb
sbb
jb
jecxz
ja
aas
addr16
pop
into
sbbl
dec
mov
bound
popl
and
inc
dec
sbb
xor
movsb
cmpsb
ljmp
fnstenv
sub
sbb
jmp
and
outsl
ljmp
scas
aam
lods
aas
or
or
in
cmp
fs
inc
fwait
pmullw
xchg
ja
sti
scas
imul
xor
ds
outsb
cmc
jbe
movzwl
xor
jge
xchg
lret
cmpb
les
adc
xor
ljmp
cmpsl
aas
int
mov
test
sub
test
cmp
bound
filds
jb
mov
or
mov
inc
xlat
sbb
cmp
mov
movsb
dec
add
inc
hlt
add
xchg
add
mov
push
imul
aas
pop
mov
js
hlt
outsl
dec
sbb
mov
push
hlt
cld
out
stos
ljmp
sub
cltd
lcall
lahf
xor
aam
inc
fmull
aam
cmpsb
push
test
aas
mov
divb
jb
ret
jno
frstor
xchg
adc
outsb
lea
adc
add
leave
rorb
in
fmuls
sub
inc
scas
fwait
insl
clc
xchg
pop
ljmp
lret
pop
push
fsubr
cmp
xchg
imul
mov
fistpl
icebp
or
jns
test
push
nop
push
addb
xor
je
push
cmpsl
adc
test
pop
push
sahf
pushf
jle
jne
mov
mov
push
roll
scas
xchg
psllq
test
mov
mov
leave
xlat
inc
fildl
lods
sahf
loopne
cmp
loop
jo
out
inc
cmp
movsb
mov
test
frstor
cmp
popa
jae
popf
scas
pop
dec
mov
jae
cmp
mov
ljmp
clc
inc
leave
jge
outsb
fisubs
inc
shl
test
and
mov
lock
jnp
mov
das
pusha
outsl
lock
popa
add
cli
stos
lods
lret
pop
adc
fscale
jns
idivb
mov
xchg
in
pop
fcom
jge
xchg
clc
ds
lahf
add
cmp
sbb
fwait
pop
lock
iret
jno
cli
and
pop
out
fldcw
and
add
fwait
gs
push
pop
mov
pop
int3
jle
jnp
sbb
xlat
push
aas
aad
cmpsb
push
pushf
outsl
repz
pop
fwait
xchg
in
leave
jle
sti
popf
popf
jns
xchg
call
bound
out
inc
pop
popa
xor
loope
aas
popa
into
adc
cwtl
cmp
pop
adc
lock
loopne
push
stos
push
mov
jne
jbe
jnp
iret
insb
cmp
adc
sbb
adc
cmp
mov
jg
sub
cmpb
movsb
xor
sub
icebp
jp
cmp
es
test
mov
pop
fwait
inc
fisubrs
mov
fsubrl
jg
xor
loopne
pop
orb
data16
push
and
sqrtps
in
cmpsb
xchg
int3
fstpt
mov
cmpsl
dec
mov
decl
mov
pop
lea
mov
jecxz
cmpsb
add
out
jge
jg
scas
add
xchg
inc
push
jb
cmp
mov
jg
int
aam
jae
das
test
mov
arpl
jmp
clc
insl
stc
ret
jb
adc
xor
xrelease
fwait
inc
das
mov
out
dec
jp
hlt
xchg
sbb
lret
inc
shrl
sti
into
jecxz
mov
or
or
addr16
sti
call
pop
sub
into
out
or
daa
push
scas
cmpsb
cltd
pop
out
fnstsw
jo
inc
rol
gs
fmull
add
push
cmp
roll
stos
insl
fdiv
test
js
pop
frndint
inc
ss
ja
jg
fs
fcmovnbe
push
sbb
dec
jge
insl
push
lods
or
nop
dec
dec
pop
cmp
xchg
addl
push
sbb
adc
std
pushf
mov
jnp
das
xor
mov
push
add
arpl
loope
jmp
insb
scas
cli
xlat
mov
outsb
jbe
mov
push
cmp
in
sbb
testb
add
dec
mov
add
inc
fiadds
push
out
lock
int3
ljmp
scas
ja
rcll
cmpsl
mov
mov
xorb
lahf
sti
sbb
fisttps
push
sarl
out
mov
popf
sbb
mov
pop
dec
jno
mov
movsb
rorl
fdivrs
add
gs
xchg
addr16
call
add
dec
jp
js
cld
jnp
mov
into
insl
dec
cmp
imul
iret
outsb
mov
insb
out
pop
mov
push
sbb
std
loope
mov
fwait
xor
dec
mov
repz
cmp
cmp
cli
and
cmp
icebp
in
push
ret
pop
std
test
imul
repz
repnz
add
cmpsb
out
popa
inc
dec
negb
dec
jbe
iret
cmp
mov
cld
sarb
insl
or
stc
pop
aas
inc
mov
dec
imul
jnp
shll
dec
jg
push
cmp
decb
pop
jge
lret
xor
outsl
loopne
cmp
fnstsw
xor
jns
fisttps
cltd
aas
jp
xchg
jne
iret
push
xchg
dec
popa
and
cmp
jae
add
loope
cmp
outsb
pop
jl
js
push
shr
filds
xchg
outsb
shll
outsb
pop
inc
add
cmpsl
add
inc
jecxz
xor
outsl
leave
loop
shll
mov
adc
scas
pop
gs
dec
adc
popl
push
cltd
or
cmp
cmp
xchg
sub
jns
pop
and
nop
mov
fildl
push
xchg
add
mov
pop
pop
pop
cmp
divw
ret
data16
push
xchg
push
mov
jp
or
sub
xchg
lret
jne
popa
pop
add
push
sub
sbbb
mov
fmull
push
divps
test
pop
mov
test
das
shrb
into
test
cwtl
cmp
fsubrl
add
adc
andb
and
lock
loop
jnp
sbb
loopne
lahf
stos
or
sub
mov
cmp
mov
add
xor
jle
pop
xchg
push
loopne
jg
sbb
xchg
xchg
pop
insl
cmp
sub
inc
push
sahf
out
imul
mov
bound
pop
dec
lret
mov
popa
imul
sahf
sub
in
movsb
fistl
sub
mov
push
mov
std
insb
testb
dec
fldt
shl
bound
ss
in
push
push
aas
fistpl
and
jns
loop
inc
cmp
cmpsl
xor
add
les
push
jns
mov
push
in
ret
cmpb
les
and
push
xor
pop
and
aam
fstpt
call
popf
push
xor
mov
cmpsb
out
pop
jae
xchg
xor
mov
into
jo
aam
lahf
cmp
inc
cli
push
mov
cmp
push
jge
push
lcall
js
push
mov
xorl
cmp
shll
enter
sahf
push
subl
repnz
pop
popa
into
pop
mov
pmaxub
sub
ja
testl
bnd
fs
outsb
fdivs
jmp
scas
dec
and
shll
pop
aas
scas
jns
popf
jo
jp
mov
add
movsl
testb
cmc
sub
fcmovnb
pop
xchg
mov
mov
pop
pop
shll
pop
aaa
cmpsb
jae
jns
scas
lahf
and
inc
shrl
loope
push
fnstsw
cmpsb
dec
sbb
add
rolb
push
mov
ja
iret
jne
fsubrs
pop
cmpsb
pushf
mov
push
das
int3
jb
sbb
pop
mov
addr16
adc
adc
cmp
fsubr
xorb
mov
lret
ret
mov
popl
gs
dec
das
dec
mov
adc
sti
sbb
aas
sti
adc
into
shll
jp
xor
test
loop
mov
imul
push
inc
clc
jge
cmp
outsb
adc
out
hlt
xor
aad
xchg
add
jmp
or
push
mov
jnp
jle
xor
and
aad
adc
imul
imul
ja
das
jne
lahf
jg
cmp
jnp
push
pop
out
icebp
fcmovu
jns
gs
out
cs
adc
in
cmpb
popa
fs
in
mov
jo
mov
xor
insl
loopne
jmp
loopne
enter
ljmp
int
jb
call
lods
xorl
mov
mov
mov
pop
jg
lahf
sti
cmpsl
rolb
cs
cmpsl
jmp
fisubrl
xchg
fidivl
jo
shl
cmp
mov
lods
dec
lahf
fsubrs
jl
shr
lret
jb
cmp
lahf
dec
aad
lods
push
mov
fimuls
jmp
pop
je
shlb
outsb
jmp
imul
jge
js
pop
pop
lahf
xchg
pop
mov
cmp
inc
xchg
mov
jns
xchg
fisubs
insl
sub
fildl
jnp
and
jmp
xor
lahf
inc
mov
in
cmp
enter
in
sbb
sbb
arpl
lahf
lea
mov
incl
pop
outsb
mov
sbb
lcall
adc
pop
mov
dec
repz
insl
sarw
mov
insb
lahf
fnstenv
jmp
insl
jne
aaa
jnp
push
pop
pop
mov
lahf
jnp
or
mov
xchg
xor
aad
mov
and
inc
rcl
xor
repz
or
mov
ja
arpl
sahf
test
push
fdivr
xlat
jno
fisubrl
addr16
loopne
jmp
inc
mov
ljmp
sti
cmp
out
jg
add
push
outsl
jb
and
decl
leave
lods
ret
outsl
and
aad
pushf
mov
push
outsl
dec
sub
cmpsl
data16
pop
bound
jae
lcall
stc
jp
dec
mov
repnz
mov
repz
sub
subl
mov
clc
pop
sbb
fmull
iret
sub
jg
pusha
out
push
push
arpl
xchg
cmp
xchg
mov
inc
repz
in
loop
mov
bound
jecxz
mov
pushf
aaa
pop
inc
repz
mov
fdivr
push
popf
and
lea
mov
scas
ljmp
faddl
ret
jnp
movsb
adc
mov
dec
mov
adc
or
fldcw
jb
add
in
push
jp
lods
insb
mov
insl
fwait
incb
mov
sbbl
fistpl
ror
jmp
in
push
and
cmp
stos
mov
sahf
jmp
imul
xchg
jns
popl
sub
rolb
test
mov
lock
shll
jnp
fldl
call
fdivl
add
mov
inc
popa
sbb
repz
pop
aas
jbe
dec
jb
call
push
pop
sahf
or
shlb
mov
into
and
addl
cmpb
jge
xor
cmp
cld
jnp
jp
cli
jns
js
ja
jbe
lds
xchg
xchg
xchg
fimuls
xor
insb
or
sub
pop
xchg
inc
lock
sbb
push
mov
pop
mov
leave
xchg
lock
fbld
fdivrl
push
int
xor
lds
inc
mov
dec
inc
jb
sub
in
mov
push
cli
xchg
dec
lahf
sbb
push
xchg
and
aaa
push
inc
mov
je
mov
mov
jb
jns
cmp
pop
icebp
adc
fs
adc
mov
sbb
in
repnz
mov
xchg
mov
sbb
sub
inc
and
xor
stc
push
imul
adc
rclb
ret
xchg
test
mull
add
ja
paddsb
roll
jle
std
cmp
scas
shrl
subb
popf
iret
lret
add
pop
mov
arpl
dec
xchg
ret
mov
mov
jmp
into
mov
negb
mov
add
test
inc
or
dec
aad
sti
pop
dec
xchg
jne
pop
mov
cmp
scas
pop
jl
ja
aas
add
xor
lea
jae
cli
cmp
nop
dec
mov
div
adc
sub
mov
dec
mov
shlb
lea
dec
test
loop
sbb
inc
int
and
out
mov
jns
inc
adc
dec
sbb
jmp
xchg
xor
int3
idiv
cmp
jo
fistpl
lods
pop
pusha
data16
das
lcall
lret
push
rcr
rcrl
xchg
push
aam
inc
sub
add
fwait
lret
pop
add
sub
test
add
stos
sub
pop
jb
cwtl
sti
add
and
mov
and
sbb
sub
inc
std
xchg
or
imul
popf
sub
sub
stos
mov
jle
dec
fsubrl
lea
cmp
aas
push
cmpsl
xor
jle
daa
and
inc
adc
js
jge
mov
push
aas
sub
js
jnp
sbb
daa
push
in
mov
outsb
aas
cmp
outsl
fildl
in
push
jo
rorl
cltd
aaa
jmp
fsubrp
fimuls
aad
jb
insb
jge
pop
mov
ror
lock
imul
push
cmp
inc
mov
sbb
orl
adcb
stos
jns
jge
mov
repnz
aam
push
xchg
jnp
scas
repz
movsl
or
cmp
and
lea
popf
or
lahf
mov
jnp
push
andb
push
adcb
inc
lret
jo
pusha
sbbb
call
cmc
push
xor
xchg
cmc
fsubrl
jne
int3
ret
mov
add
popl
test
or
sub
pop
in
cmpb
das
or
arpl
dec
dec
test
leave
in
dec
fstpl
js
sub
cmpsb
ret
sub
lahf
fadd
mov
add
jnp
lcall
lret
std
cmp
je
aas
push
push
imul
enter
stc
cmp
enter
imul
xchg
pop
imul
gs
shll
shll
fst
push
xlat
lret
mov
lahf
int3
sbbl
test
repz
lahf
iret
mov
test
test
fldt
insb
movsl
push
xchg
xchg
aam
or
xor
cmp
add
add
enter
add
xchg
jo
mulb
xchg
jo
scas
jle
jle
pop
adc
out
pop
decb
iret
push
fcmovne
pop
mov
inc
pop
jmp
test
imul
mov
cmp
cmp
or
fldl
sarl
adc
test
xlat
jnp
xchg
sub
mov
pop
insl
aas
pop
out
and
mov
out
pop
ja
xchg
push
stos
fisubrs
xchg
ljmp
jg
mov
pusha
addl
in
add
cmpl
insb
jno
incb
jl,pn
sahf
mov
mov
jg
popf
fmuls
add
test
sti
dec
pop
aas
sub
or
sub
lret
aaa
fstpt
in
fsubrl
mov
fdivrs
and
insb
stos
ret
mov
mov
lahf
ficoml
mul
imul
push
mov
adc
mov
sbb
and
arpl
popf
imul
mov
enter
sub
jae
sub
fwait
mov
iret
imul
rcr
pop
outsl
push
mov
push
icebp
dec
jmp
jae
cltd
pop
lods
sahf
orps
js
les
testl
insb
jecxz
and
inc
jne
or
out
push
bound
ljmp
out
jne
cmp
lock
or
cs
jle
sub
icebp
shrl
cmpl
incl
sbb
test
test
cld
mov
iret
mov
lcall
pop
in
xor
xlat
fildll
cmpb
or
es
push
jnp
out
xlat
iret
mov
dec
leave
mov
fiaddl
jle
rolb
cmp
fiaddl
jnp
pushf
dec
test
sub
imul
inc
jae
ret
jl
fdivr
out
add
gs
fiaddl
cmp
add
add
push
adc
repnz
in
inc
and
sti
je
repnz
mov
xor
aas
jne
in
xchg
jne
scas
imull
push
icebp
mov
xor
push
lret
out
minps
sub
xlat
dec
stos
enter
mov
fdivrl
movsb
xlat
aaa
bound
fdivl
jnp
repz
dec
jo
xor
push
aas
enter
leave
dec
out
sahf
mov
aad
loopne
std
jnp
addr16
fistpl
xchg
fistpl
or
popa
clc
jg
dec
sti
iret
xchg
imul
push
mov
xchg
call
or
lcall
testl
cli
ffreep
sub
push
mov
jl
lret
mov
jecxz
test
enter
pusha
mov
dec
popa
mov
popa
cli
jo
bound
sti
add
dec
dec
xchg
mov
inc
dec
jmp
jp
out
test
ja
js
cmpsl
dec
js
jle
sub
mov
mov
sbb
pop
sbb
loopne
movsb
out
shlb
orb
loop
call
test
jp
inc
ds
mov
dec
adc
call
incb
cltd
adc
inc
out
imul
out
pop
pop
cmp
emms
xabort
std
pop
inc
inc
ja
jns
push
jnp
inc
push
fwait
and
js
lock
lds
clc
fscale
daa
push
fiadds
jns
test
nop
jmp
add
cwtl
pop
cwtl
subb
jo
je
sahf
mov
ss
es
arpl
cmp
jmp
fdivl
fdivrl
inc
leave
repnz
pop
fwait
movsb
shll
add
cmpsl
pop
pop
outsb
push
jb
loopne
dec
fildll
fcom
ss
jmp
pop
in
ja
leave
in
jns
dec
sub
sbb
sbb
jge
jle
mov
push
into
inc
popf
clc
xchg
clc
cltd
push
repnz
mov
aad
and
stos
arpl
push
sbb
sub
pop
fisttpl
sbb
inc
ret
clc
inc
aas
xchg
mov
mov
stos
push
addl
push
xchg
mov
add
les
jge
sbb
sub
xchg
mov
fs
div
inc
loopne
mov
mov
add
push
jecxz
decl
mov
cli
lds
adc
andb
aaa
int3
fldt
mov
xchg
incl
adc
imul
fistpll
scas
xchg
outsl
fnstenv
shrb
outsl
ret
jno
fidivrs
sti
inc
xor
pop
insl
js
imul
xchg
and
aas
inc
lret
and
cmp
mov
insb
fsubs
xchg
sahf
cli
pop
push
mov
lea
pop
ds
jno
cwtl
xchg
cld
cmp
movsl
push
fwait
pop
cmp
cmp
aas
inc
push
adc
rcl
inc
sub
mov
mov
shrl
add
add
std
adc
push
mov
or
cmp
imul
iret
jb
fbld
outsb
ud1
iret
push
jae
dec
jle
push
cld
fistpll
divl
bnd
lahf
call
cmpsl
jmp
push
inc
inc
ljmp
xor
jae
test
cmp
add
orb
call
mov
movlps
cmp
jge
cs
add
mov
loope
xorl
psubb
mov
jb
jo
outsl
fs
xchg
mov
jnp
inc
pop
jnp
mov
in
fildl
lcall
scas
lods
testl
loope
jp
push
push
test
cmovg
call
mov
push
int
iret
adc
and
idivl
sbbb
out
pushf
mov
and
outsb
sti
daa
loop
cli
lods
jp
dec
leave
test
mov
add
cmovle
testb
jae
arpl
in
leave
mov
mov
xorb
xor
pop
jp
add
pop
out
incb
adc
jge
dec
inc
nop
popa
cmpb
push
into
test
lahf
mov
jo
cmp
aad
clc
and
out
sbb
andb
xchg
gs
mov
jae
xor
xchg
ds
in
add
inc
sub
jge
add
mov
stos
stos
iret
das
aad
inc
scas
jnp
cmp
adc
aas
pop
push
jmp
mov
jno
addl
roll
fxch
xor
repz
out
xchg
jns
clc
jg
xchg
dec
mov
jae
jecxz
outsb
sub
pop
jbe
or
stos
pop
ror
pushl
je
or
mov
adc
outsl
cmp
mov
iret
das
push
daa
imul
inc
add
pop
jge
sbb
inc
jo
loopne
add
imul
push
hlt
lahf
cwtl
and
jl
gs
aas
incb
mov
xlat
outsb
and
lahf
mov
mov
ds
popf
out
dec
aam
das
fwait
and
push
xor
movsb
inc
sbbl
mov
lcall
imul
mov
xorl
gs
fistps
frstpm(287
jns
ret
repz
jnp
add
gs
imul
test
std
in
lea
sub
lahf
pop
popa
push
mov
pop
cltd
mov
mov
push
xchg
out
arpl
dec
out
xchg
xchg
mov
pop
push
lret
mov
shlb
or
inc
mov
mov
jp
push
popf
and
fstpl
ja
jnp
sbb
xchg
andb
add
icebp
add
mul
dec
into
jmp
push
fldl
mov
cmp
jmp
and
jle
fcomip
add
or
into
mov
cmp
push
adcb
nop
pop
sub
hlt
jae
lock
adc
push
js
iret
in
jmp
mov
fistps
inc
jno
jae
xlat
fildl
inc
popf
icebp
push
or
sbb
dec
jae
xchg
repz
dec
setle
bnd
movsb
bound
mov
adc
sti
into
lock
aaa
or
mov
cs
aam
cmp
sub
sub
lods
pop
push
popl
js
jo
pop
mov
test
jb
sub
inc
push
adc
mov
in
bound
mov
dec
cmp
ds
or
push
sub
ret
mov
fcomps
jg
xorl
cmc
sarl
scas
xor
push
push
sbb
jb
jg
or
lock
adc
loope
inc
jle
shlb
shlb
paddq
in
dec
mov
mov
dec
ja
out
outsb
inc
jns
sub
ja
ljmp
enter
test
adc
fimull
jnp
xchg
sbb
out
pop
lock
inc
pop
cmp
mov
dec
fwait
dec
stos
sti
jnp
daa
lock
aam
out
cmpsb
dec
das
frstor
pop
cmp
imul
adc
or
jae
jae
outsb
mov
dec
inc
cs
fs
call
jne
aam
add
add
ljmp
add
jg
jge
call
aam
pop
cs
vphsubbw
xchg
inc
push
out
or
aad
repz
jns
push
leave
add
jp
inc
xor
jmp
fcom
mov
mov
add
inc
push
mov
inc
xor
aaa
xor
fnstcw
add
das
lcall
dec
xchg
xor
inc
push
or
mov
sarb
rclb
jmp
ds
cltd
jnp
xor
jl
mov
ja
lahf
mov
shl
add
mov
xor
jnp,pn
negb
sbb
mov
je
arpl
fstpt
mov
insb
rcrl
add
cmp
or
jnp
jns
addr16
loop
and
dec
push
int3
filds
cmp
or
testb
repz
lods
pop
xor
ds
test
test
test
daa
xchg
mov
xchg
add
lret
inc
lcall
enter
mov
orb
mov
mov
push
dec
imul
inc
xchg
fdivr
push
xor
aam
dec
popfw
cli
fdivs
lea
dec
incb
fists
dec
popl
lock
fwait
dec
mov
jge
test
ja
and
mov
dec
sub
jne
pop
xchg
sbb
dec
jbe
movsl
adc
mov
mov
ja
jbe
push
mov
mov
aas
jo
insb
lret
jle
inc
jp
and
xlat
jno
mov
sub
cld
out
je
inc
mov
mov
xor
enter
cwtl
call
push
bnd
jg
mov
cltd
movsl
cmp
cmp
pop
inc
mov
add
inc
addr16
jb
ret
or
lds
cltd
cli
imul
js
addr16
in
sbb
mov
cmp
lds
add
sub
out
sbb
mov
jnp
pop
repz
pushf
cld
sub
pop
add
mov
mov
iret
ret
pop
mov
xchg
jae
push
jne
push
loope
pop
xchg
out
xchg
xchg
fmuls
jle
or
cmpl
mov
test
addr16
arpl
scas
lahf
add
fbld
imul
out
nop
ret
js
cmpsl
jl
jp
pop
out
fdivrs
jge
and
dec
inc
cmp
add
gs
inc
cmp
inc
jb
xchg
and
cmp
cld
inc
inc
push
addl
scas
xchg
push
cmp
push
xchg
cmpsl
cli
fmuls
lds
loope
inc
cmp
data16
bound
cli
popa
mov
jmp
adc
mov
jbe
dec
inc
push
xchg
jmp
jae
in
js
jge
dec
add
xor
xchg
push
xchg
lcall
or
cld
bound
jo
test
push
xchg
into
jne
out
and
lret
cmp
js
je
add
jb
xchg
mov
adc
decb
icebp
clc
jp
jno
add
mov
jmp
push
sbb
outsl
out
nop
jl
or
in
jb
popa
cltd
add
cmc
arpl
fdivrl
sti
mov
js
lahf
dec
jg
jnp
xchg
jge
leave
loopne
std
dec
popf
cmp
sbb
jecxz
add
addr16
mov
xor
int
xchg
xlat
mov
incl
jb
pop
jmp
sti
xlat
push
adc
das
jb
test
jmp
popa
lahf
push
stc
jge
dec
mov
ds
jmp
xor
cmp
ljmp
xor
sti
fdivrp
pop
jns
dec
arpl
adc
jmp
jb
ljmp
mov
jl
or
ljmp
arpl
popf
jmp
decl
es
shll
lcall
daa
arpl
xor
sub
jecxz
cwtl
mov
arpl
mov
stc
mov
or
arpl
pusha
stc
cmp
mov
jle
dec
call
popa
add
arpl
pop
xchg
dec
imul
push
push
jae
mov
decl
mov
dec
cwtl
cmp
out
xchg
dec
sub
jns
sahf
dec
mov
add
iret
stos
addr16
cld
shl
sti
cli
push
dec
cmp
adc
jg
jp
popf
sti
cmp
aas
inc
rcll
or
jg
lcall
arpl
jnp
movsb
mov
iret
fs
push
push
call
bound
push
mul
jne
arpl
ljmp
arpl
call
out
lret
xchg
popf
decl
dec
and
pushl
or
cmp
cmc
push
push
mov
pop
cli
inc
push
mov
sub
fnstsw
aam
dec
jb
rcrb
fwait
notl
cmp
mov
leave
jbe
stos
mov
xor
cli
or
sarb
ret
inc
push
lods
je
lds
gs
jg
repz
fbstp
add
lahf
mov
mov
shl
mov
stc
cmp
aam
mov
and
mov
add
arpl
mov
aas
sbb
sbb
dec
notl
fwait
cmp
cmp
out
cli
outsl
xchg
out
fimuls
js
jge
imull
adc
pop
mov
sarl
sarl
mov
test
inc
enter
cmpsl
fcomps
sub
loope
mov
add
sub
js
mov
decb
xchg
mov
out
daa
xor
cmp
jge
and
fistl
js
aaa
arpl
rol
bound
push
mov
pop
inc
mov
cmp
jne
repnz
leave
cmp
pop
dec
push
in
nop
repz
or
inc
mov
inc
lds
xor
lds
mov
clc
cmp
pop
leave
aaa
mov
pop
jnp
push
pop
mov
lock
fwait
cli
add
rcr
pop
es
cmp
insb
loop,pt
cmp
mov
aas
inc
adc
add
xor
in
xchg
in
aaa
das
rcl
test
pop
inc
mov
popa
sbb
fiaddl
jl
sub
dec
xchg
fwait
inc
scas
adc
push
aam
xor
int3
cmc
cmp
lahf
shl
and
mov
cmc
aas
scas
xchg
mov
mov
pop
dec
aam
into
cmp
fldt
jae
clc
or
jb
xchg
scas
clc
popf
data16
and
dec
adc
pushf
push
xchg
inc
mov
pop
testb
push
jle,pt
mov
test
and
fadd
adc
jge
gs
add
mov
leave
xor
jno
xor
aas
aam
sbbb
fsubl
mov
in
cmp
gs
shrl
xor
aas
outsl
movsb
sar
and
push
push
ret
and
add
iret
mov
sub
bound
sbb
mov
mov
cmp
es
sti
je
repnz
and
add
xchg
mov
push
sub
push
insb
cmpsl
les
mov
cmovnp
pop
xor
int3
ljmp
jbe
adc
mov
push
and
out
adc
inc
pop
in
jp
push
sub
cltd
out
jno
gs
xor
jns
idivl
stc
imul
mov
outsl
js
out
jo
jbe
in
int3
xchg
xor
xor
fcomip
lock
and
and
movsl
insb
mov
or
pop
arpl
hlt
dec
icebp
popf
loopne
hlt
pop
lahf
lea
mov
push
out
lahf
add
cmpl
test
lahf
fdivrp
adc
sub
inc
mov
insl
mov
xchg
sub
filds
pop
push
call
hlt
jge
inc
hlt
test
jae
mov
shlb
add
dec
xor
jecxz
enter
cwtl
xchg
ljmp
sub
push
adc
xchg
or
cwtl
xor
dec
push
adc
sub
shll
xchg
div
cmp
mov
in
hlt
inc
outsb
mov
movsb
lcall
mov
sti
sbb
imul
pop
adc
xor
mov
cltd
fcmovne
in
fsubrl
sti
loopne
or
mov
out
ret
cmc
inc
ja
rorb
aas
icebp
add
bound
jnp
outsl
inc
push
fcoml
mov
popl
je
sub
fs
int3
pop
jecxz,pt
enter
xchg
jge
test
and
mov
in
push
and
mov
add
cmp
cld
clc
inc
sub
dec
lahf
enter
bound
mov
and
inc
in
repz
cmp
jne
ret
sar
jnp
leave
xchg
fiadds
pop
mov
lods
gs
mov
xor
mov
pop
das
pushf
mov
or
cmpsl
jle
fwait
sbb
fbstp
pop
test
jp
pop
cmp
sarb
scas
rorl
in
int
js
adc
add
jo
fcompl
popl
xor
cmp
ja
dec
xor
mov
out
cmp
cwtl
stc
and
mov
aad
outsb
push
leave
jbe
mov
in
mov
aam
inc
xor
mov
int
ja
faddl
cltd
or
dec
lods
xchg
dec
cli
and
inc
cmp
add
fildl
mov
dec
ss
divb
mov
call
xor
imul
out
sub
mov
outsb
adc
jge
mov
mov
lahf
jae
mov
fs
insl
jno
pop
jecxz
mov
rcrl
jg
in
add
inc
sbb
repz
lahf
loop
sub
leave
test
es
sbb
jmp
cmp
mov
add
fiadds
and
cltd
push
popl
mov
shl
push
inc
pop
sbb
or
inc
inc
bswap
mov
cmpb
cmova
cld
repz
lock
lcall
aas
push
jge
jp
pop
add
inc
rorl
leave
insb
das
pushl
xchg
pusha
add
jg
inc
push
jge
inc
dec
sti
cmpsl
ret
inc
outsl
inc
std
pusha
mov
cmp
xor
jns
aad
stc
cli
sub
cmpsl
xor
idivl
daa
xchg
inc
jp
scas
mov
mov
ja
repz
stos
lock
sub
inc
lods
nop
popa
xor
xor
push
stc
or
pop
outsb
call
imul
inc
stos
inc
jge
mov
imul
iret
lods
add
aam
sbb
movsb
sbb
loopne
jg
mov
sar
aas
shlb
dec
sarl
roll
cltd
mov
mov
xchg
fs
jae
icebp
stc
mov
mov
xchg
xor
mov
addr16
sar
insb
inc
mov
pop
lods
add
pushf
sbb
mov
mov
stos
jns
cli
aad
mov
inc
mov
push
sbb
pop
push
mov
and
cmpsl
icebp
cli
xchg
mov
mov
test
xchg
nop
mov
lds
jnp
adc
pop
das
push
jns
jbe
or
jg
jb
ret
lret
call
sbb
pop
jl
sti
sub
insb
pop
jno
inc
xchg
scas
jb
aaa
add
out
push
notb
js
cmp
in
jle
xor
ljmp
in
jmp
das
insl
or
dec
rclb
jno
orb
leave
cmp
mov
jae
push
pop
imul
fstpl
arpl
shl
leave
js
sbb
insb
push
movsl
cs
scas
loope
popf
adc
mov
sub
out
pop
push
cmpsb
repz
pop
loope
int
ss
pop
mov
cli
incl
jne
jne
popf
in
cmc
sub
daa
es
aam
push
sbb
lods
nop
subl
movsb
enter
cmp
fistps
sti
mov
into
movsl
ficomps
xchg
pop
out
xchg
ja
lods
mov
leave
in
mov
jle
outsl
iret
insb
dec
mov
push
push
push
js
jl
add
add
inc
jno
out
iret
mov
pusha
mov
fxtract
icebp
pop
xor
roll
fdiv
add
cli
mov
fdivrs
imul
lea
les
xor
cld
shll
push
fsubrs
xchg
cmp
jg
inc
or
xchg
add
push
clc
ret
fdiv
cmp
pop
jo
sarb
mov
jge
xchg
mov
test
pop
jnp
ret
sti
push
xor
psraw
push
fdivl
stos
jns
enter
push
sbb
pminub
shr
fidivs
mov
outsl
sbb
scas
mov
lahf
cmc
mov
stc
sbb
test
xlat
pop
jp
andl
popf
lock
insb
arpl
and
sti
mov
or
xlat
mov
jmp
jp
je
adc
jne
sbb
ss
xor
gs
popa
or
mov
pop
std
sar
fadds
rsqrtps
ds
sbb
movsb
add
mov
xor
fcom
popa
mov
pop
test
mov
stc
mov
ret
in
and
dec
sti
repnz
fcomps
movsl
repnz
add
add
add
mov
cmp
rolb
out
orl
out
xchg
mov
mov
inc
jo
xor
data16
inc
xor
in
aam
loopne
std
and
arpl
and
jnp
jp
jl
push
test
aam
mov
sahf
clc
inc
cmpsl
mov
int3
stos
movsl
dec
pop
sahf
icebp
push
adc
inc
stos
hlt
out
cmp
mov
inc
xchg
jp
mov
arpl
push
cmc
or
outsl
stc
shl
xlat
sahf
std
aas
insb
stos
movsl
insl
imul
loop
jb
cmp
or
lods
adc
or
jne
adc
pop
sbb
jecxz
mov
cmp
xor
movsb
cli
push
clc
insl
jp
lods
cmp
adc
fsin
and
loopne
data16
jg
or
adc
mov
mov
push
push
jl
add
out
xchg
imul
fidivrs
cld
cmp
push
inc
cmpsl
add
loope
jne
out
add
jp
xchg
jmp
loop
sarl
push
leave
test
jp
fimuls
push
sub
xchg
adc
push
pushf
xlat
jp
push
movsl
xor
inc
hlt
jl
jge
add
sub
mov
push
aam
mov
aaa
inc
fidivrl
sbb
std
into
lea
xor
clc
add
mov
pop
sahf
mov
test
stc
and
pop
lea
int3
out
push
pop
mov
mov
add
out
pushf
jg
enter
icebp
or
test
mov
leave
inc
pop
scas
call
pop
movsb
sti
cli
and
test
out
xchg
cmp
not
fmull
cli
inc
adc
ja
add
jns
dec
lea
and
and
lahf
add
test
push
xchg
pop
enter
inc
jle
or
lcall
cmpl
jle
leave
data16
addr16
mov
sub
push
add
add
ljmp
mov
jae
mov
xchg
imul
push
xor
cmc
or
cwtl
mov
daa
adc
cmpsl
mov
dec
add
cmp
sahf
mov
in
and
mov
inc
hlt
add
or
xor
jne
arpl
cli
jge
pop
dec
and
bound
out
mov
es
xchg
lret
popf
aas
mov
popa
mov
dec
xlat
movsl
icebp
push
lea
mov
xlat
les
mov
push
ret
fmul
mov
sbbl
aam
clc
incl
jecxz
jecxz
jmp
fldt
ss
call
sti
jge
push
loop
xor
mov
sahf
add
cmp
icebp
shlb
fcompl
mov
pop
bound
sahf
xchg
shlb
xchg
push
pop
and
mov
stc
cltd
testb
addr16
mov
in
or
or
lret
jne
or
lret
add
int3
jecxz
outsl
xchg
test
jecxz
mov
mov
leave
ret
testl
popa
rcrl
mov
test
push
sbb
gs
ds
cmp
arpl
mov
cmc
loopne
fistl
movsl
popa
jbe
cmpsb
sarb
add
ja
out
push
test
and
lods
xlat
ss
xchg
inc
jl
pop
into
add
jnp
lods
js
dec
es
pop
adc
push
neg
test
push
mov
test
scas
jns
repnz
add
fs
ss
cli
loop
repnz
into
pop
add
jnp
mov
ljmp
out
scas
ret
cmp
les
aam
ljmp
push
sub
push
mov
xor
mov
fnstcw
dec
lahf
jne
pusha
inc
es
ljmp
sti
jge
jge
repnz
jbe
aaa
or
add
in
incb
jp
pop
cmp
add
das
pop
aam
mov
mov
popf
clc
lahf
lcall
shl
inc
lcall
push
mov
aas
test
repz
lea
mov
in
pop
shlb
jne
and
call
push
xor
or
sbb
jp
and
adc
pop
aas
fdivrl
shll
push
or
pop
push
pop
sbb
mov
fists
cmpb
pusha
pop
iret
cmp
aad
in
insl
lock
shll
and
fisubrs
les
mov
mov
mov
push
negl
mov
lds
cltd
sti
cli
orb
jb
ret
pop
test
xor
add
dec
cmp
mov
sub
pop
mov
dec
int3
jb
mov
cmpsl
add
pop
mov
jge
adc
dec
dec
bound
lods
inc
cmp
push
xchg
xchg
fdiv
mov
out
fildl
mov
dec
jge
jg
adcl
dec
lret
mov
adc
aaa
shl
jecxz
pop
pop
inc
xchg
aad
call
pop
lret
jg
int3
jge
dec
or
jmp
scas
incl
fmuls
push
mov
xlat
add
test
add
push
fsubrl
loope
mov
and
dec
nop
mov
mov
push
bound
mov
stos
dec
aaa
pop
pop
mov
imul
or
shlb
insl
mov
out
movsl
xchg
fistl
cmp
jp
adc
stos
pop
scas
std
xor
xchg
xor
fisubrs
lods
out
icebp
lods
inc
loopne,pt
cli
hlt
mov
pop
fsubrl
repnz
mov
mov
mov
add
cmpsl
je
mov
adc
out
js
adc
stc
inc
mov
or
mov
push
cmc
mov
xchg
clc
in
lcall
jns
movsb
out
or
int3
jb
sub
dec
mov
pusha
ret
mov
test
popa
sub
mov
leave
sti
cmp
pop
push
jns
leave
xlat
xor
outsb
repz
push
add
cmpb
pop
jecxz
push
stos
lcall
adc
add
mov
shll
xor
icebp
jle
sub
ds
sub
xadd
sbbb
fldl
mov
dec
jmp
popf
addl
sarl
cmp
xor
mov
add
mov
dec
loopne
filds
fsubs
xchg
addl
shlb
cmp
clc
dec
aas
mov
mov
xor
xchg
rorl
out
jecxz,pn
dec
inc
stos
sub
loopne
ret
int3
mov
movsl
cmp
ja
jno,pt
cmc
scas
cli
and
iret
jmp
sbb
cwtl
adc
faddl
jb
sbb
mov
notb
jnp
xorb
cmp
int3
dec
mov
pop
repz
mov
push
rcrl
xchg
and
jg
invlpg
or
dec
cli
popa
jp
scas
mov
mov
movb
mov
add
fcmovne
ret
push
aam
xchg
add
push
mov
and
popa
inc
incl
sbb
mull
iret
dec
lahf
fwait
rcr
push
lret
sbb
movsb
int3
addl
jbe
fwait
cwtl
xor
mov
test
push
popa
mov
in
mov
lahf
jns
mov
dec
fdivr
add
cs
push
daa
mov
ljmp
xor
jp
gs
std
ljmp
mov
jg
mov
dec
sbb
imul
movsb
outsl
pusha
fsts
pop
sbb
into
lret
aas
fstpl
mov
daa
cmp
or
add
fidivl
xchg
mov
push
push
fcomp
mov
add
cmp
insb
sbb
fstpt
sahf
lahf
stos
jp
cmp
cli
xchg
cmp
add
sarl
outsl
sub
jle
inc
roll
jno
pop
sub
les
cmp
mov
ja
inc
div
icebp
mov
cmp
jbe
jae
dec
test
inc
jnp
pop
push
mov
rclb
enter
shll
cld
mov
mov
jp
mov
sub
add
outsb
fnstcw
jge
pop
add
dec
mov
inc
mov
shlb
pop
dec
stc
xor
inc
in
bound
clc
cmpl
rcr
in
jge
test
popf
push
daa
aad
rorl
mov
notl
hlt
arpl
das
fldl
imul
insl
pushl
leave
pop
testb
push
jge
sarb
adc
stos
sbb
stc
cmp
mov
fnsave
mov
mov
cmp
out
push
or
sbb
test
mov
loop
jne
cmc
pop
mov
in
leave
loopne
mov
mov
dec
hlt
out
jge
pop
addl
pop
out
xchg
fstl
std
gs
test
inc
in
cmc
add
and
clc
sub
loopne
lret
aad
jnp
sbb
aaa
fcom
xchg
popf
mov
mov
sbb
xor
mov
aas
inc
jbe
xor
repz
mulb
jge
jg
stos
imul
add
pop
inc
mov
ret
out
ficoml
cld
leave
cmpb
ja
jae
jl
cld
pop
rorb
cli
daa
push
imul
cmpsb
pop
xor
test
repnz
repz
mov
pop
inc
push
push
les
jae
ds
cld
xor
testl
xchg
das
jge
pop
mov
out
sub
xor
xorb
xchg
mov
cmc
inc
arpl
push
cmp
jl
enter
call
mov
lds
adc
jne
push
test
xchg
pop
xchg
stos
push
push
add
pop
fnstcw
aas
pusha
imul
jge
and
fisubs
les
out
inc
jne
out
pushf
sarb
jmp
fisubs
and
push
stos
fs
outsb
out
subb
aad
lds
jo
or
insb
fnsave
jp
addb
ljmp
pop
push
add
and
or
inc
jae
mov
repz
dec
clc
aaa
lea
bnd
dec
lahf
popl
or
add
bound
push
jecxz
push
scas
andl
push
jns
dec
stc
je
cld
hlt
leave
push
sti
or
jb
sub
sub
ja
sar
inc
mov
js
fiaddl
adc
pop
pop
scas
or
xor
and
mov
insl
pop
clc
test
push
jbe
movsb
scas
xor
shll
pop
mov
jle
cwtl
pop
fbstp
jb
fisubl
shrb
clc
dec
pop
icebp
into
jmp
lret
xchg
in
dec
jnp
sub
jg
sbb
push
fimull
pop
shlb
add
jl
push
jno
push
mov
cmc
fndisi(8087
sub
add
mov
adc
adc
andnps
sub
testl
into
fdivr
test
lods
inc
or
bnd
inc
sbb
adcl
iret
mov
loop
orl
lods
mov
jmp
sub
mov
xchg
or
decb
sbb
or
push
inc
adc
push
or
mov
out
jmp
dec
out
and
mov
mov
in
pusha
clc
cmp
lds
int
arpl
into
aaa
pop
mov
cli
leave
cld
or
jo
arpl
pop
out
inc
xchg
gs
xor
and
jg
mov
out
jno
dec
dec
push
or
xorl
cs
adc
stos
jp
loope
add
lock
fbld
pop
dec
xchg
sbb
sub
dec
movsb
push
jae
pop
mov
xchg
arpl
jno
fisubs
leave
push
pslld
popf
xor
add
js
sub
out
lret
xchg
cmp
mov
add
clc
xchg
push
sarb
int
mov
sahf
fistpl
adc
xor
fdivs
dec
cmpsl
sti
aas
jge
jbe
jb
mov
repz
mov
enter
stos
aam
sbb
aad
loopne
xchg
popa
aas
orb
sahf
and
bound
xchg
sub
or
mov
adc
nop
push
js
cmp
sub
inc
jo
rorb
lds
mov
mov
xor
in
sbb
mov
mov
out
les
cmp
emms
ret
pusha
out
shll
hlt
test
aam
inc
jb
js
mov
xchg
jmp
xor
jge
inc
mov
pop
enter
divl
stos
jp
jno
loop
dec
push
xchg
fdivl
pop
add
ficomps
ljmp
pop
ja
sbb
cmp
add
arpl
repnz
ljmp
push
arpl
rcll
out
lcall
sub
fidivs
xchg
lahf
call
stos
repz
arpl
mov
scas
xor
arpl
sti
push
decl
dec
arpl
out
jmp
shl
movsl
add
lods
fbstp
xchg
sarb
sub
jns
lcall
jnp
inc
arpl
mov
lea
enter
mov
jno
jno
xchg
push
scas
das
test
arpl
arpl
push
ljmp
jnp
dec
arpl
scas
arpl
cli
ja
cmp
inc
loopne
add
jmp
movq
mov
jmp
sbb
shlb
insl
mov
xchg
mov
arpl
fdivp
ret
fs
ret
fstpt
test
fldenv
sarb
dec
loopne
rol
or
in
pusha
jnp
fisubs
lahf
push
call
mov
cwtl
popa
mov
jge
decl
xchg
shr
addb
xor
aad
jb
inc
rclb
repz
lea
testb
mov
das
jmp
outsw
push
pop
jnp
sub
rorb
jmp
ds
scas
insl
aaa
jae
cmp
pop
ret
lahf
outsb
insb
popf
jnp
fcmovnbe
mov
xchg
or
sahf
orl
ljmp
lahf
lea
cmpsl
shlb
cwtl
adc
inc
stc
jecxz
mov
rcll
xor
push
ja
test
addr16
enter
testl
jg
cmp
sub
out
popa
xlat
adc
test
mov
cmp
jg
aaa
pushl
cmc
cmp
xor
mov
add
repz
into
out
jnp
rorb
jnp
xchg
xchg
data16
jecxz
sti
and
jae
lahf
lcall
aas
sub
and
sub
jl
sub
xor
nop
aas
push
aaa
pushl
out
incl
bound
jg
mov
std
xchg
jge
repz
fdivs
adc
aaa
cli
inc
push
or
xchg
loopne
inc
or
adc
shlb
jge
decl
pushl
repz
push
sti
or
iret
imul
xor
jnp
mov
mov
push
imull
aas
jecxz
test
mov
idivl
out
jnp
push
negl
movsl
jns
idivl
add
cli
incl
popf
inc
call
lds
jns
mov
jo
bnd
sub
call
dec
mov
popl
lock
cmpsl
xchg
ret
lock
mov
fwait
push
xor
je
lock
cmpsl
cmp
push
rorl
mov
mov
fdiv
jg
or
pushl
or
jbe
fistps
ja
xlat
push
bound
jno
in
jb
bound
stos
cmc
xorb
mov
jmp
mov
aam
add
dec
aaa
jne
and
and
sti
dec
jne
jmp
addr16
addr16
imul
inc
dec
shlb
iret
imull
inc
xchg
jg
dec
mov
mov
popa
aas
adc
test
ja
jo
imul
inc
jmp
lcall
inc
jmp
fbstp
cmp
pop
jb
loope
add
jmp
pushl
in
lcall
div
jg
jg
mov
shll
int3
cmp
pop
jmp
jecxz
cmpsl
aaa
ja
push
daa
sbb
mov
aas
cmc
aaa
jmp
pop
or
out
not
aaa
sti
loope
dec
aaa
notl
push
call
nop
aaa
jmp
out
cmp
or
jae
daa
loope
adc
pop
cmp
cli
jno
popa
pop
daa
push
jecxz
aaa
call
notl
pop
lods
sbbl
outsb
hlt
jae
leave
xchg
jg
icebp
in
mov
cltd
add
outsb
push
sahf
pop
sarl
inc
or
mov
in
arpl
jbe
lea
adc
popa
add
jo
nop
add
cs
addl
lds
bound
or
adc
adc
dec
cmp
cmpsb
xchg
lods
jnp
mov
nop
dec
repz
add
rol
lds
jb
pop
fistpl
ja
jl
and
add
pop
and
adc
jg
mov
ja
add
mov
sbb
xor
int
inc
scas
inc
mov
enter
jb
sahf
xor
movsl
add
out
enter
sub
jns
xchg
sub
ds
fdiv
loope
or
inc
sbb
mov
fwait
push
and
scas
mov
leave
adc
clc
sahf
cli
aam
mov
int
leave
bound
inc
int3
outsl
sbb
inc
mov
mov
aam
cmpsb
sahf
iret
inc
push
add
stos
mov
repz
fimuls
xchg
add
pop
clc
jp
orb
sbb
outsb
test
add
cmpsl
push
add
jge
loop
inc
repz
jg
lahf
rcr
mov
repz
fnstenv
xlat
jg
aad
bound
rcll
iret
cmpsl
fst
mov
dec
xchg
cmpl
das
mov
fbstp
rcrl
mov
mov
lret
outsl
add
mov
add
addr16
jae
es
rolb
jmp
out
and
ja
popf
add
iret
out
fisttpl
stos
fwait
adc
jg
fwait
shll
mov
sti
and
pop
sub
add
mov
fs
or
les
xor
xchg
mov
testb
push
jl,pn
movsl
scas
out
in
xchg
mov
pop
sub
jmp
and
cmp
jno
bound
pop
pop
pop
xor
cli
pop
pop
dec
mov
pop
ds
mov
aas
inc
out
cltd
ja
mov
negl
imul
lea
movsb
int3
lock
add
or
xchg
clc
push
aad
pop
xchg
dec
je
bound
repz
int3
aas
cmpb
or
lock
fmuls
adc
idivl
add
add
mov
jl
outsl
jg
xor
outsl
mov
fnstcw
ficoms
xchg
cmp
cld
jg
repz
jg
xchg
gs
in
jp
fsts
scas
inc
add
movsb
add
mov
xchg
push
fsubs
and
xchg
jg
and
out
mulb
mov
arpl
add
jae
mov
cmp
and
int
jae
roll
mov
jle
mov
jg
mov
mov
cmp
cld
mov
shrl
mov
mov
adcb
xor
xor
and
int
mov
negl
clc
jge
jl
xchg
fwait
daa
and
fimull
sub
pop
std
push
mov
and
repz
out
inc
repnz
cli
and
ja
jecxz
incl
in
arpl
popf
or
ficoms
scas
repz
vpaddsb
call
mov
jno
rsm
flds
addr16
jae
pop
js
icebp
and
push
mov
shlb
in
test
aas
mov
rcrb
cltd
pop
add
dec
jecxz
pop
je
in
dec
mov
pop
pand
add
sbb
pop
pop
jmp
mov
pop
sar
cltd
sti
inc
into
jbe
adc
pop
std
add
jo
repnz
xchg
push
dec
sub
inc
int3
dec
insb
pop
pop
mov
sbb
pop
out
ret
push
jmp
ja
cmp
mov
fmuls
add
mov
es
fisubrl
mov
scas
push
sti
mov
xor
fildl
cli
cmpb
test
mov
pop
decb
pop
aas
lret
jg
jno
add
nop
adc
xchg
add
test
in
idivl
sbb
adc
outsb
add
ljmp
shl
add
cld
cmp
repnz
adc
push
dec
insl
aam
xorb
inc
adc
inc
rclb
out
or
jnp
and
add
idivb
push
add
jle
push
sti
jle
ja
bound
repnz
popa
jbe
or
loopne
mov
std
cmp
sti
jl
repz
inc
lock
sbb
dec
popa
test
jnp
xor
sbb
jb
loopne
mov
clc
sbb
sbb
outsl
add
inc
adc
and
push
rcll
sahf
push
aam
aas
fistpll
das
add
ret
inc
sub
out
test
sub
fiaddl
gs
sub
sub
pop
sub
mov
pop
movsb
dec
mov
rcrl
pop
add
xchg
in
jno
clc
fisttps
xorb
das
pmulhuw
xor
xchg
gs
iret
and
jge
fiaddl
xchg
dec
iret
jo
gs
push
fidivl
aam
sbb
shrb
fxch
cmp
cld
jmp
and
ljmp
push
loopne
fisttpll
pop
add
pop
fldl
inc
xchg
fnstenv
cwtl
and
or
into
ret
test
aam
enter
clc
and
xor
stc
sub
jmp
jge
arpl
test
ret
xrelease
inc
out
leave
in
cmp
icebp
and
incb
cmp
pop
and
or
inc
cmp
jmp
ja
sbb
push
shrb
adcb
pop
mov
and
xor
aas
inc
add
sub
pusha
insl
xchg
stos
jnp
aas
jno
leave
enter
or
insl
cmc
jp
mov
enter
add
xor
into
cmpsb
movsb
cli
lock
mov
loopne
ja
out
clc
cmp
aas
xchg
or
imul
fistpll
push
fidivl
ror
ljmp
movsl
ret
sti
mov
fistpll
jl
pop
arpl
xchg
cmp
jg
push
andb
imul
lret
sub
sbb
scas
ja
loop
fistps
std
cmpsl
mov
stos
imul
adc
addr16
push
and
shrb
jecxz
mov
cmpsb
dec
xchg
movsb
mov
lahf
add
iret
dec
ret
mov
or
enter
leave
pop
mov
xchg
pop
fildl
push
in
jl
les
dec
add
popa
push
xchg
dec
pop
filds
popf
sbb
imul
aas
fucomi
into
in
das
or
shlb
xchg
xchg
in
or
mov
pop
sub
fistpll
mov
out
or
stc
stos
or
jo
or
imul
data16
jo
jge
and
xor
push
mov
ret
shl
ds
add
mov
gs
or
dec
test
aas
int3
ds
adc
clc
adc
dec
insl
in
data16
cwtl
addr16
jb
cmp
mov
fisubrl
jle
jne
aas
mov
mov
aam
fldl
rcl
pop
arpl
sub
mov
mov
fsubs
mov
cmp
ds
sbb
cmp
jbe,pn
inc
xchg
mov
enter
pusha
fcompl
push
xchg
xchg
pop
sbb
push
mov
scas
hlt
lret
or
rol
popf
test
xchg
cmpb
rolb
cmp
daa
jb
push
jne
jnp
orb
push
pop
and
mov
pop
mov
mov
inc
jl
pop
adc
mov
add
inc
mov
sahf
mov
ficomps
rorl
lea
adc
push
mov
push
andb
pop
sbbb
add
fwait
inc
xor
outsb
icebp
jge
sub
push
std
es
xor
sarl
outsl
std
in
repnz
mov
sti
jb
out
jg
mov
hlt
andb
push
scas
out
lock
addr16
cmp
imul
test
jae
cmp
sarl
inc
cmp
cmp
mov
neg
sub
jns
pop
cs
add
xor
mov
mov
andl
adc
aas
pop
xchg
leave
js
add
movl
and
cltd
and
popa
lret
mov
aaa
pop
insl
lea
fsubl
cli
or
test
push
pusha
and
cmc
adc
fdivl
imul
in
push
sbbl
jb
jmp
ljmp
sub
sub
repnz
std
ja
loopne
cmpsl
popa
lret
or
outsl
jg
add
je
stc
pop
mov
add
loop
repnz
pop
xchg
or
adc
addl
adcb
or
jne
xor
sub
sbb
sub
pop
test
stos
jp
cli
ss
shll
pop
jnp
rcl
mov
push
push
xchg
pop
sbb
pop
pop
sbb
jae
out
xchg
push
js
nop
jp
mov
sub
int
dec
in
int3
fisttps
xor
outsl
icebp
scas
out
xchg
insl
nop
insb
cmpb
add
xor
adc
adc
xchg
fcmovbe
mov
movsl
pop
popa
addl
jnp
shll
fwait
and
lret
loop
fnclex
in
loop
xchg
pushf
cmpsl
mov
fwait
sbb
fwait
sbb
fwait
sbb
fwait
sbb
fwait
sbb
fwait
mov
movsl
outsl
lahf
or
cmpsl
bound
mov
jle
popa
add
std
lret
test
and
inc
mov
inc
in
mov
pop
mov
lock
pop
push
dec
ficoml
jne
jg
cli
jle
and
pushl
hlt
ljmp
cmpsl
mov
sti
add
fsubl
ret
pop
roll
sbbb
out
shl
je
pushf
pop
mov
inc
sahf
mov
inc
aas
add
fisttps
aam
pusha
add
and
imul
adc
sub
or
repnz
clc
adc
add
inc
in
stos
dec
jae
pop
pop
and
lcall
insb
xchg
fnsave
daa
jae
sub
lret
ja
dec
jo
mov
mov
mov
dec
sbb
xor
mov
popa
out
pop
jnp
adc
xor
pop
sar
fwait
imulb
lcall
divl
dec
sahf
jecxz
shlb
test
movsb
xor
sbb
sbb
pop
pop
push
xor
jp
pushf
push
jo
popa
gs
jne
jnp
mov
pop
mov
test
imul
cmp
cmc
cwtl
sti
out
fnsave
scas
fdivrl
sbb
mov
aam
ds
das
jl
movl
mov
cltd
sub
fwait
inc
pushf
xchg
push
out
leave
std
lret
mov
in
dec
cs
test
xor
and
jp
sub
scas
push
sub
pop
jnp
adc
cld
xor
call
dec
out
xchg
mov
insb
jle
sbb
or
add
dec
leave
dec
outsl
jae
cmpsb
in
adc
or
pop
pop
test
cmc
xor
cmc
inc
dec
adc
or
push
in
push
pop
or
cmp
sbb
mov
jns
call
pop
jne
loopne
sub
sub
les
ss
mov
mov
xor
inc
jle
daa
add
sarb
mov
jg
dec
xlat
add
pop
push
pusha
sub
inc
sub
scas
sbb
les
jg
jg
adc
incb
fcmovnu
jge
jne
into
dec
pop
dec
aas
jp
cmp
cwtl
rclb
icebp
movntq
lahf
repnz
xor
scas
in
into
jno
int
mov
jle
pop
ret
mov
xor
inc
iret
sbb
je
pop
jge
bound
loop
jnp
jns
shlb
fiadds
add
fwait
cmp
xchg
add
ja
dec
inc
dec
iret
insl
xchg
xchg
fs
fwait
add
cwtl
shll
push
add
cs
test
inc
pop
faddl
pop
xlat
mov
leave
push
add
jne
jle
mov
cmp
jg
pop
jg
jge
sti
gs
cwtl
xor
test
fdivrs
iret
adc
test
add
leave
and
aaa
or
mov
loope
mov
pop
xor
std
pop
mov
movl
and
adc
ja
cmc
mov
lea
push
insl
xchg
into
or
jb
fisubrs
rolb
xor
mov
fcoms
daa
in
sbb
pop
ljmp
rcrl
mov
imul
or
and
call
and
jns
sbb
dec
jle
inc
pop
enter
mov
xchg
popa
cmpsl
lds
ret
mov
push
cld
mov
aam
jge
sub
jo
mov
iret
pop
jp
or
add
or
aas
xchg
in
je
enter
leave
and
pop
nop
stc
dec
add
xchg
xor
xchg
cmp
xchg
out
lock
sbb
add
ds
aad
jge
in
jg
fidivrl
mov
inc
inc
inc
arpl
jg
cmp
iret
ret
jecxz
pop
andl
pop
lea
clc
imul
aaa
jo
test
bound
or
jg
add
xchg
mov
out
xchg
data16
lea
shlb
jmp
test
jbe
leave
stos
inc
in
mov
cmp
lods
add
fwait
mov
lds
lds
fcompl
cmp
test
adcb
lahf
push
icebp
mov
xor
out
jns
ret
add
jb
mov
sbb
jnp
sbb
repz
rcll
popa
xchg
pushf
jge
fnstsw
aas
cli
mov
into
lods
lret
cmpsl
aam
jecxz
dec
fs
mov
lea
xchg
mov
jecxz
sti
push
arpl
leave
popf
std
repz
call
arpl
int
ljmp
inc
imul
jmp
cmp
dec
pop
scas
lret
or
repz
loopne
xchg
imul
sti
jp
push
fmull
imul
adc
or
push
xor
sti
js
lret
pop
pop
fs
jmp
jb
sbb
repz
sub
mov
popf
sti
cmp
mov
push
sti
rorl
jno
int3
imul
jecxz
fwait
jecxz
or
fs
adc
lcall
mov
fcmovnbe
data16
pop
movsl
imul
jnp
scas
aad
stos
pop
mov
out
popf
inc
ljmp
mov
jecxz
push
pushf
imul
imul
stc
push
jae
cmpsl
outsb
jg
pop
lret
sbb
cmp
rcrl
imul
movsl
aad
popa
pop
jge
adc
insl
pop
lods
xchg
jo
mov
mov
imul
sbb
fstpl
cmpsl
test
mov
repz
sbb
xchg
ret
in
or
inc
sbbl
jae
bound
mov
push
aas
jg
rorl
jge
incl
xchg
cmp
jb
adc
fstl
imul
fs
lock
jb
ja
push
jge
pop
xor
adc
add
addr16
xor
addb
test
enter
aas
jecxz
xor
and
arpl
mov
jmp
bound
jge
lret
gs
pop
and
lods
xchg
movsb
stos
filds
in
inc
lods
push
adc
xchg
inc
mov
jge
leave
and
shl
into
mov
insl
sub
lea
fcmovnu
xchg
mov
sahf
incb
mov
ds
pop
in
outsl
js
cmp
movsb
mov
daa
incl
cmp
mov
fdivrs
jmp
movsl
jns
pop
mov
mov
add
xchg
sub
lock
stos
adc
arpl
push
repz
enter
push
clc
jg
stos
popa
xchg
out
hlt
iret
or
je
dec
pop
or
jns
ret
adc
xchg
or
mov
shlb
cs
test
repz
aad
and
mov
rorl
cmp
pop
pop
pushl
bound
sbb
mov
jg
fisttpl
jge
fisttps
xor
inc
addb
jmp
rcll
xor
outsl
int
rclb
pusha
push
popf
testb
and
pop
test
js
dec
arpl
pslld
dec
inc
jle
cmpb
push
aam
add
stos
scas
orb
jnp
mov
push
mov
pop
xchg
mov
jg
ror
sub
xlat
add
cmp
and
pop
adc
ret
cwtl
add
shr
fdivs
mov
push
ror
out
push
aas
mov
insl
out
int3
xor
pop
fsubs
fwait
inc
cmp
icebp
aad
pop
xchg
jle
push
lret
ret
cld
sbb
push
jns
xchg
scas
sahf
fisubrl
inc
sub
mov
push
adc
fmul
mov
neg
aaa
or
test
lret
cmp
dec
inc
mov
or
sti
and
ror
xchg
in
ds
fsub
xlat
mov
rcll
pop
pop
dec
je
dec
loop
repz
stos
jp
and
addr16
test
stos
pop
dec
roll
xlat
lods
imul
leave
fmulp
inc
cmpsb
lcall
pop
repz
in
in
jns
dec
and
out
xor
dec
or
in
dec
lret
notl
push
scas
dec
mov
dec
ds
loope
out
sbb
pop
shlb
popf
aas
xchg
pop
xchg
jecxz
ja
xchg
push
jo
fwait
and
cltd
jae
fldcw
xchg
add
sub
out
inc
cmp
mov
leave
push
incb
inc
sub
loop
mov
aas
cmp
ds
jg
or
inc
adc
cs
adc
mov
jecxz
inc
out
pop
dec
fcomp
fidivrs
xchg
mov
add
fiaddl
inc
fadds
jg
xchg
sbb
jns
inc
imul
pop
add
pop
pusha
dec
dec
ss
cmc
push
sbb
lock
add
repnz
push
out
test
xchg
jmp
out
pop
dec
lahf
in
pop
mov
push
fwait
sarl
push
lock
adc
ret
or
mov
push
movsl
subl
adcl
xor
imul
mov
mov
aad
das
movsl
pop
jge
and
les
imul
cmpb
mov
dec
add
decb
push
lods
and
mov
jb
cmovbe
jg
fdivrs
sub
jae
rorb
mov
mov
jne
popa
add
clc
add
jb
adcl
pusha
rcrb
push
xchg
inc
rorb
inc
aad
mov
add
pop
roll
xchg
add
ficomps
mov
dec
adc
movsb
jnp
jb
add
sti
subb
cmp
mov
xor
inc
addr16
mov
lcall
test
insb
jns
les
shrl
push
and
pop
jg
jbe
les
aam
mov
std
arpl
and
es
jns
jns
or
xchg
test
into
mov
loopne
mov
mov
push
in
lock
mov
push
adc
xor
jmp
xchg
jle
rcr
cmp
xchg
repz
lcall
pop
mov
push
jns
leave
cmpsl
xorb
dec
dec
sbb
or
sub
es
inc
les
and
jns
pop
jnp
mov
or
not
xlat
movl
fimull
in
add
cli
inc
movsb
cltd
xchg
jmp
xchg
sbb
mov
pop
iret
int3
jge
ds
iret
call
test
cwtl
lcall
lret
data16
add
mov
bound
lds
jnp
test
push
jae
mov
out
setnp
push
movsl
jmp
sti
add
sbb
mov
jl
aas
mov
dec
adc
cmp
rcrb
and
repnz
sub
dec
out
sbb
xor
imul
test
ret
testb
dec
jns
cmp
add
test
stc
dec
cmpb
jge,pt
decl
int3
mov
jecxz
inc
mov
mov
xor
fidivrs
aas
loope
add
dec
jae
and
outsl
aas
repz
jo
xorb
outsl
and
ret
out
arpl
sbb
fadds
jne
xchg
test
xchg
out
lahf
push
cli
imul
mov
addr16
pop
test
sbb
and
pop
xchg
mov
jbe
out
addr16
repnz
into
scas
push
cmpsl
repnz
sbb
pusha
push
lcall
inc
popa
lcall
add
outsl
outsl
aad
jae,pt
sbbb
stc
cmp
pop
sti
adc
pop
inc
mov
in
dec
mov
push
cmp
mov
cmpsb
jnp
loope
mov
popa
js
iret
loopne
xchg
jle
in
inc
mov
push
jne
ja
les
xchg
insb
lcall
std
fadd
mov
loopne
bound
sarl
jnp
jge
insb
adc
inc
ds
notb
mov
pop
mov
pop
imul
lods
mov
fildll
aam
loope
cltd
int3
bound
leave
shll
jl
clc
popa
fidivl
push
inc
add
add
inc
fsubrl
mov
rcl
sbb
xor
jno
mov
jle
add
loope,pt
insl
popf
maxps
popa
sbb
push
push
fstpt
pop
iret
enter
sti
jg
cli
shr
xchg
arpl
inc
outsl
jno
pushf
shrb
js
xor
jno
vprotq
iret
jo
jb
pop
out
iret
mov
xor
iret
sar
hlt
call
cmp
xchg
xor
mov
cmp
xor
in
jecxz
xchg
xlat
into
adc
mov
fmull
movsl
cmp
cld
pop
push
loopne
cmp
js
mov
fstpl
popa
cmpl
jg
in
insb
test
stc
aaa
mov
jno
mov
jne
mov
jnp
repnz
mov
inc
stos
mov
jno
cltd
rorl
add
jnp
pop
and
mov
and
and
stc
cld
mov
aaa
jns
jns
popf
cmovs
sub
es
movsl
outsl
cmpsl
lea
mov
mov
out
push
cmp
mov
mov
bound
mov
jge
dec
fistpl
add
lea
stc
inc
into
lret
je
test
and
mov
jo
dec
ja
xor
add
fisubrs
or
mov
jle
mov
out
cli
adc
pop
add
and
subb
test
add
jno
imul
sahf
jno
imul
xlat
dec
sarb
subb
leave
mull
pop
mov
jl
aam
sbb
inc
mov
daa
fidivrl
cwtl
push
or
dec
mov
cmp
inc
inc
and
mov
xor
adc
fs
enter
int
lock
jae
movsl
icebp
adc
popa
push
push
push
icebp
sarl
adc
fnstcw
sbbb
inc
inc
xor
and
cld
xlat
addr16
sbb
test
fsts
fiadds
add
ja
jns
cmpsl
sbb
push
fdivrp
lcall
into
sub
mov
lds
push
xor
inc
pop
jnp
imul
sbb
outsl
sub
mov
xor
xchg
mov
pop
shll
pop
sub
orl
in
sub
xor
daa
in
loop
std
jg
xlat
rcll
dec
hlt
xchg
mov
int
inc
in
in
out
arpl
call
adc
mov
or
or
push
mov
leave
addr16
mov
jns
lret
fidivs
cltd
in
sbb
js
mov
cmp
das
jp
dec
idiv
pop
jae
jg
idivl
jge
push
xor
icebp
inc
icebp
pop
pushl
dec
cwtl
mov
ret
shl
jne
rorb
pop
xchg
jae
cmp
adc
test
loope
push
xor
fistpll
das
mov
push
sbb
aas
in
fmuls
push
test
cmp
inc
inc
pop
add
nop
insl
dec
vandnps
push
push
inc
std
test
jb
pop
pop
pop
and
cmc
mov
lods
out
loope
pop
adc
shll
push
lods
pusha
adc
jecxz
mov
int3
pop
sbb
jge
dec
int
fwait
cld
or
cld
call
subl
pop
jno
data16
push
xlat
add
jge
ret
sub
mov
repz
or
jecxz
or
in
iret
jmp
test
jl
lcall
js
lret
loope
and
fwait
movsb
push
dec
mov
mov
ds
loop
push
mov
stos
jne
mov
mov
cld
jle
inc
push
cmp
rcl
int
fnstenv
test
cmpb
lods
pop
pop
call
xor
adc
psrlq
mov
in
mov
bound
push
xchg
cmp
shl
adc
int3
sub
fldl2t
into
test
pop
pop
outsb
aam
cmp
xchg
sti
ljmp
push
movsl
outsb
test
test
in
mov
xchg
mov
loop
adc
out
add
scas
dec
lahf
jg
push
jle
nop
dec
dec
fisubrs
cmp
lcall
call
fnstsw
lret
in
xor
ret
cmp
aad
out
xor
pop
leave
arpl
ja
outsb
or
jb
xor
xorl
into
hlt
jnp
xchg
mov
mov
ja
xlat
test
imul
dec
mov
sarl
xchg
fwait
inc
repnz
pop
test
ja
in
rcll
ret
dec
shlb
fwait
aas
xor
enter
das
jb
cli
lock
cmp
rcr
out
lahf
xchg
js
divb
cmp
mov
gs
popa
or
divl
fadd
mov
fucom
cmpsb
js
and
int
jp
mov
lahf
xor
cmpsl
push
sbb
test
push
xchg
icebp
push
jg
pop
inc
outsb
fildl
enter
push
mov
idivl
dec
lods
jae,pn
aad
mul
mov
fstpt
jne
in
enter
push
xor
dec
jnp
sub
or
repnz
jne
mov
pop
and
cwtl
sbbl
shlb
xchg
or
mov
mov
es
fldl
jbe
scas
out
cmc
cmpl
jae
arpl
fidivs
inc
xchg
fisubs
inc
addr16
arpl
pop
xchg
cmp
pxor
ss
jg
push
pop
jns
enter
dec
cld
push
add
and
push
aam
push
sbb
es
das
mov
sub
dec
sti
out
or
insl
daa
clc
sarb
cmc
loope
jnp
add
mov
jb
pop
adc
daa
dec
out
and
cmp
mov
in
jne
into
mov
pop
inc
sub
je
jnp
jcxz
mov
push
negl
into
add
jle
fnsave
popf
mov
jno
jg
add
jbe
or
sub
and
jg
inc
and
add
jl
lds
insb
fistpl
cmc
iret
jo
lret
jns
popa
push
mov
mov
dec
inc
jo
js
xchg
icebp
mov
or
pcmpeqd
or
pop
cli
pop
addr16
lret
fistpll
add
xchg
out
mov
outsl
pop
enter
adc
icebp
addr16
jge
and
sahf
or
addr16
xchg
fnstenv
xchg
jne
jno
jnp
movsl
mov
mov
leave
js
lret
aad
mov
adc
fs
test
pop
jge
jp
push
adc
popa
and
cld
add
push
push
mov
push
negb
faddl
test
in
pop
push
dec
fdivs
push
and
cmc
xchg
xchg
sti
fiaddl
iret
fistpll
mov
in
ljmp
inc
mov
pushf
rorl
bound
inc
inc
adcb
pop
pop
insl
pop
mov
jno
std
rcrb
out
movsl
cmpsb
gs
push
mov
out
and
jne
mov
shlb
mov
dec
dec
icebp
fmulp
divl
and
jbe
cmpb
movzwl
fmuls
icebp
sub
mull
mov
scas
fisubrs
mov
pop
aad
inc
stos
aaa
push
sti
test
cmpsl
imul
mov
cltd
mov
inc
sbb
push
push
ja
add
test
rcrl
or
aas
sbb
lcall
std
ss
insb
fsts
jecxz
out
inc
jae
pop
cmp
arpl
pushf
fsubrl
or
les
pop
decl
xorl
mov
fsincos
push
and
out
and
cmp
jle
sub
ret
inc
pop
xchg
mov
in
js
cmp
mov
add
push
jbe
lret
cmp
aas
push
jae
jns
sarb
aam
adc
call
mov
lods
rorb
nop
inc
pop
mov
xor
insb
maxps
jg
inc
xlat
loop
inc
flds
adc
enter
pop
sti
or
jg
test
dec
inc
and
xchg
add
test
lcall
add
fdivl
adc
add
iret
xchg
movsb
jecxz
jbe
test
and
xchg
fdivl
shll
pop
adcb
mov
mov
in
bnd
lahf
cmp
sbb
add
js
or
ss
outsl
mov
and
iret
inc
adc
xchg
call
jno
sbb
push
lahf
test
loopne
jo
jno
and
jmp
popa
cmp
mov
popa
int
aas
int3
jp
jno
or
jge
inc
aas
pop
cmpb
push
lds
adc
jge
lds
idivl
jns
jnp
jno
xor
repz
aas
mov
movsb
pusha
outsl
pop
mov
mov
mov
or
cmp
lods
andb
cmovbe
cltd
sahf
cmp
stc
sub
rcll
lcall
inc
in
icebp
rcll
cwtl
jnp
in
fadds
je
cmp
mov
sbb
inc
fidivrl
jns
call
into
push
push
push
mov
aas
jae
sub
xchg
jmp
dec
stc
sub
cli
ds
jne
jnp
jp
mov
add
pop
pop
insl
push
pop
xchg
xchg
xor
bound
add
jl
sub
stc
aaa
cltd
xchg
mov
push
sahf
mov
mov
test
pop
mov
jo
adc
loopne
pop
inc
sub
cmpsl
outsl
push
je
ds
xchg
xchg
lock
jbe
adc
pop
lret
xchg
dec
dec
gs
adc
sub
mov
jp
fdivrs
cmp
xor
mov
iret
nop
lret
pop
push
repz
inc
inc
mull
fildll
pop
sti
mov
and
leave
xorb
cmp
dec
jne
repz
jns
rol
add
test
and
xor
negb
aas
jno
aaa
stos
jnp
jnp
mov
ret
mov
out
mov
xor
sahf
jp
pop
popf
loope
jmp
mov
adcl
sbb
add
inc
fdecstp
jnp
mov
sbb
ja
ja
ret
dec
lds
jb
jp
imul
mov
push
lock
pop
xchg
cld
rolb
lods
mov
rcrl
add
int
out
fnstenv
push
mov
add
in
jge
push
imul
lahf
shl
cmc
aaa
fidivrl
das
and
xchg
jae
imul
jg
add
jp
jb
cwtl
pop
add
sbb
lea
mov
cmp
pusha
fldlg2
rcr
ds
repz
imul
imul
popf
jnp
pop
push
jecxz
gs
dec
inc
mov
imul
add
or
ja
int3
pop
jge
pop
push
pop
cmpsb
sbb
test
into
xchg
cmpsb
les
hlt
ret
push
xchg
fwait
dec
daa
test
repnz
outsb
xorl
popf
cmpl
sbb
roll
jl
xchg
outsl
out
movl
jbe
fsts
fcmovu
xor
push
inc
push
clts
shl
cld
add
mov
leave
jge
nop
imul
loope
mov
pushf
mov
xorb
jg
add
prefetchw
or
pop
cld
push
or
cmp
mov
jp
leave
clc
cs
aad
ja
mov
or
and
cs
shr
ljmp
pop
pop
rol
mov
mov
adc
lcall
les
dec
jg
pop
sbb
test
subl
cmc
into
orl
jnp
shl
aas
sti
or
push
sahf
jbe
shr
push
fisubs
pop
push
cmp
cwtl
jmp
xchg
arpl
cld
sub
ljmp
ljmp
ret
inc
jb
mov
insl
fidivl
loop
or
adcl
outsb
and
push
jae
and
push
add
ljmp
leave
jo
cltd
mov
mov
lcall
jae
pop
scas
xorb
icebp
xlat
jge
insl
mov
and
inc
jmp
into
and
push
sti
mov
mov
and
pop
cmc
push
pop
jp
and
cmp
pusha
inc
and
mov
hlt
sbb
sub
inc
daa
push
pop
loopne
leave
negb
xor
add
stc
xor
ror
jl
push
daa
fnsave
pop
insl
xor
in
adc
ds
push
pop
or
sub
or
mov
in
adc
imul
aam
les
adc
imul
std
push
ss
lods
data16
iret
shll
ds
leave
jp
fstpl
jns
push
dec
das
inc
mov
adc
into
mov
fwait
ljmp
pop
addl
stc
ds
jmp
icebp
xchg
imul
lea
inc
xchg
dec
jl
jmp
aad
imul
test
inc
decl
push
repz
cmp
stos
mov
pushf
leave
xchg
or
lock
inc
test
add
add
jno
ffreep
cmp
inc
popa
ret
cmpl
mov
cmpl
mov
es
sahf
mov
cs
and
cli
outsb
in
mov
cmpsl
jae
mov
out
lock
mov
cmp
lods
ficoms
fbstp
into
pop
es
inc
or
jmp
mov
and
pop
mov
scas
orb
in
add
inc
pop
shll
pop
sub
insb
add
mov
xor
adc
std
and
pop
xorb
loopne
into
std
or
ret
fistpl
imul
shr
push
pop
mov
popa
jp
insb
mov
sti
mov
mov
jecxz
push
cmp
sbb
iret
inc
shll
sub
pop
mov
jmp
out
mov
lcall
add
xchg
lds
inc
mov
jae
add
mov
iret
fs
or
fwait
jno
pusha
movsb
jg
mov
or
js
and
sbb
xchg
add
orl
pop
arpl
rolb
jge
outsb
fisttps
stos
pop
cwtl
mov
hlt
loopne
ficompl
js
xchg
cld
leave
xorb
jge
fsts
jae
sar
shlb
cltd
pop
dec
mov
sarl
and
je
test
jl
cli
add
imul
mov
inc
mov
mov
popl
pop
cwtl
je
mov
and
jle
pop
mov
pop
aas
ds
icebp
ja
sbb
xchg
icebp
mov
loope
ja
aam
jge
movb
fisubl
leave
xchg
pop
movsb
mov
aaa
clc
cltd
les
imul
xlat
xor
pusha
xor
and
insl
add
sub
ror
hlt
mulb
ja
mov
aam
scas
mov
cmpb
jb
outsl
sbb
mov
aas
jecxz
and
or
add
jno
push
aaa
add
fsubl
mov
into
dec
popa
inc
fadds
shrl
fstp
out
cmp
pop
loope
scas
inc
ljmp
mov
pusha
pop
mov
jp
shrb
push
test
leave
or
ss
push
test
cs
inc
pushf
lea
inc
inc
xor
fdivrs
add
sub
out
sti
jg
call
repz
outsl
push
cltd
cmp
xchg
adc
mov
test
jae
dec
loope
cmp
cmpsl
shlb
pop
inc
sub
sbb
or
jno
xor
add
fsubrs
jge
or
rcr
ret
ret
jns
loopne
cld
iret
jae
lcall
arpl
xlat
std
int
jmp
iret
stos
lods
mov
jg
sahf
mov
lahf
loope
pop
jne
rclb
ljmp
xchg
push
jnp
or
mov
fsubrs
ljmp
mov
in
mov
scas
insb
xchg
mov
bnd
cmp
mov
dec
cwtl
push
xlat
pop
test
jns
pop
pusha
ds
dec
jp
dec
aas
sahf
decl
popa
mov
push
mov
rep
test
dec
sbb
fwait
mov
push
out
fwait
test
cli
out
mov
cld
xor
and
adc
cmp
xchg
lcall
sbb
sbb
aas
frstor
fstp
pop
mov
jecxz
leave
jo
pop
inc
adc
in
decl
out
add
xor
xchg
xchg
cld
mov
iret
cmp
sbb
sub
xchg
imul
fdivrl
dec
fiadds
adc
mov
or
dec
xor
rcrb
xor
and
or
std
scas
pop
fistpl
nop
inc
sub
sarl
lea
out
stos
pop
mov
mov
ficompl
xchg
scas
mov
test
jge
lret
and
or
ja
mov
lds
cwtl
push
jns
jg
mov
jbe
dec
leave
out
push
mov
mov
les
jns
mov
popa
dec
out
dec
scas
out
ret
push
shrb
pop
pop
or
and
add
lock
sub
pushf
rorl
loope
push
add
hlt
dec
dec
test
xor
mov
xor
test
xchg
add
cmpsl
imul
sub
movsb
xchg
xor
cmp
dec
std
pop
pop
mov
cmc
movsb
mov
mov
pop
push
sbb
pop
dec
addl
mov
pushw
out
popf
cmc
dec
mov
pop
lahf
addr16
jge
add
pop
movsb
cmp
fiaddl
mov
icebp
in
nop
or
int3
mov
gs
pop
test
pop
dec
insl
xchg
fwait
push
pop
jmp
lods
sub
and
add
movsb
aas
das
jmp
ja
or
add
inc
loop
jb
mov
ret
mov
jno
arpl
inc
pop
cli
add
add
xlat
jb
jo
ret
jae
pop
je
jae
xor
sbbl
dec
mov
mov
adc
xchg
and
movsb
xor
loope
jae
sub
ret
in
add
pusha
push
mov
cmp
push
in
scas
add
adc
mov
jno
mov
pop
pop
xchg
ficompl
mov
hlt
dec
jle
mov
sarl
lock
push
insl
mov
and
jp
pop
pop
call
push
std
iret
lret
pop
push
mov
jle
lahf
daa
sti
shrb
aaa
das
gs
lock
push
dec
mov
mov
jo
stos
mov
jbe
sub
cmpsl
shll
adc
or
pop
lock
mov
mov
lea
loopne
add
lcall
icebp
pop
sub
movsb
and
mov
and
add
jg
and
jns
jae
push
out
arpl
imul
mov
aam
fdivl
addr16
imul
xor
xor
xlat
lds
fdivrs
gs
sub
pop
pop
loope
mov
pop
stos
pop
jns
loope
jge
shrl
cmp
push
aas
jae
iret
mov
ja
mov
xchg
leave
call
mov
mov
ffree
cmp
fidivrl
test
jae
enterw
mov
cs
out
jg
fsubl
and
shr
push
andb
jae
ja
mov
hlt
push
jns
lahf
mov
sub
cmp
add
xchg
popa
js
ja
jge
dec
jnp
hlt
test
nop
pusha
inc
mov
jge
mov
cmpsl
js
mov
push
scas
or
jns
scas
insb
and
shll
in
inc
leave
sub
cmp
push
popa
aam
xlat
jne
movl
pop
lods
jnp
xor
or
jg
adc
xor
xor
push
mov
lcall
imulb
add
jno
pop
mov
inc
addr16
sub
xchg
pop
stos
aas
pop
hlt
add
insb
into
adcl
pop
adc
mov
and
sahf
js
add
xor
out
into
lds
pop
fadd
les
enter
ds
imul
in
fidivrs
fstl
imul
and
mov
jle
xchg
cld
movsl
je
inc
ret
rolb
lcall
push
cmp
push
pop
mov
or
test
lock
or
jne
leave
fidivs
or
lods
jno
lods
jge
imul
dec
cmp
fdiv
and
out
clc
sbb
xchg
mov
jnp
aad
test
clc
hlt
lock
mov
push
mov
les
aad
add
mov
leave
or
fmull
loop,pt
fimuls
and
pop
push
xchg
dec
not
adc
pop
mov
push
or
notl
js
add
iret
xchg
and
out
mov
mov
cmp
call
mov
adc
and
mov
addl
aam
out
sbb
iret
jae
xchg
test
dec
mov
outsl
fisttpll
jne
jl
push
jl
jnp
out
or
fmull
lds
test
lret
dec
je
and
cmp
loop
movsb
loope
in
mov
shrl
mov
inc
icebp
cmovle
cli
dec
ja
movsl
xchg
sti
cmp
test
ret
xor
jg
and
loopne
nop
insb
ret
pop
rol
mov
mov
lcall
out
out
sbb
bound
and
and
jne
add
jbe
js
aad
or
xchg
addr16
fmuls
jge
das
movl
jg
fs
dec
mov
jne
xchg
jge
inc
xchg
xorb
ljmp
dec
lahf
jns
jp
test
pop
push
lock
cltd
fistl
vmovq
push
jae
js
incl
add
mov
pop
outsb
xchg
leave
fdivrs
inc
inc
cmpsl
mov
dec
mov
outsb
lahf
pop
sti
sub
fsubs
pushf
jne
cmc
xor
mov
xchg
cmp
or
fmul
inc
dec
xchg
sbb
insl
into
test
je
lret
hlt
jae
dec
scas
lds
std
mov
push
mov
add
insl
loopne
cmp
roll
aas
jmp
dec
scas
jnp
data16
push
mov
jle
sbb
add
push
insl
xchg
mov
add
les
pop
repz
in
fiadds
in
enter
sbb
es
in
and
dec
sti
sbbl
stos
out
mov
icebp
or
fldcw
xor
enter
sti
daa
xchg
aas
out
cmp
push
push
add
fstl
fs
dec
andb
ret
sub
orb
cld
jg
lea
dec
push
jle
outsl
jae
test
fidivs
mov
cli
or
sub
push
cmpl
repz
adc
sbb
ja
aad
test
ja
xor
fcomi
sahf
je
mov
xchg
jge
test
sbb
ret
mov
icebp
je
sub
leave
cmc
iret
lds
movsl
or
push
loop
mov
pop
gs
lods
leave
xchg
push
xchg
shrl
imul
xor
mov
je
jns
mov
cltd
out
or
pusha
ds
data16
fistpl
and
push
jno
jae
dec
mov
mov
xchg
popf
add
xchg
sub
out
clc
jns
daa
popa
js
sbb
add
or
jae
dec
insb
pop
aas
iret
lret
or
add
fists
shlb
lret
push
cwtl
ja
xor
jmp
add
cs
xchg
xchg
push
xor
fists
aaa
mov
in
fcompl
fmuls
daa
xor
lods
xchg
add
inc
xor
int3
or
pop
lods
sbb
ret
jecxz
jg
pop
fbld
aas
inc
lcall
sbb
add
push
pushf
arpl
xor
aas
aam
xchg
mov
push
test
mov
cld
cmp
push
jae
jge
inc
mov
add
lcall
push
sub
add
or
addr16
mov
inc
pop
pop
xor
fmull
inc
nop
aad
or
stc
mov
loopne
cli
lds
add
mov
daa
je
iret
std
aam
out
nop
jae
rcl
push
mov
clc
shl
lcall
jne
cli
inc
inc
ja
aaa
icebp
sti
pusha
cmp
lock
sub
mov
xchg
out
jno
push
cmp
addr16
adc
test
les
sbb
push
decb
xchg
mov
pop
inc
and
add
enter
pop
push
pop
adc
jge
jbe
sarl
lea
aad
icebp
mov
pop
mov
xchg
jne
ret
pop
sti
and
cmp
dec
xchg
dec
dec
cmp
sub
andl
jns
sahf
cli
ficomps
into
stos
xor
mov
sbb
dec
cmp
leave
fiadds
ljmp
incb
mov
iret
scas
pop
je
in
loope
imul
sub
sbb
aad
push
and
lock
sub
push
movsl
testb
push
mov
pop
mov
mov
inc
ret
repz
xor
iret
das
jp
sub
lods
cltd
into
mov
xchg
int
mov
test
aam
fimull
cmc
loope
inc
cmpsl
insb
cli
aaa
lea
scas
push
add
clc
pop
jns
lods
sbb
insb
popl
inc
adc
scas
ja
into
in
loopne
mov
push
cli
loopne
pop
adcb
push
call
pusha
orb
xchg
fwait
in
push
jg
into
mov
dec
jp
leave
pusha
or
ret
lds
pop
aad
or
js
mov
fs
jge
sub
add
sbb
sub
push
out
test
pushf
sub
lock
push
pop
and
fbld
sub
mov
or
lods
clc
inc
adc
xchg
sub
mov
pop
jns
adc
dec
adc
push
lock
or
arpl
aaa
sarl
mov
les
pusha
pushf
xorb
mov
add
ja
dec
nop
in
popa
add
sbb
inc
mov
push
lock
mov
push
clc
push
fdivs
mov
pop
or
mov
mov
add
sbbb
adc
sub
cmp
dec
pop
out
sub
push
inc
mov
cmp
cmpsb
pop
cwtl
dec
jno
cli
aam
movsl
xlat
out
loopne
icebp
enter
js
pushf
jl
or
or
mov
sub
add
lds
lods
into
in
movsl
xchg
mov
and
lret
push
mov
fistpl
mov
enter
sub
xor
addr16
xlat
push
insb
mov
jp
and
mov
pop
jne
into
push
pop
mov
scas
rcrb
inc
xchg
test
push
inc
jbe
mov
mov
ret
hlt
cli
gs
fwait
ret
pop
xchg
push
xchg
rcr
or
adc
bound
in
push
out
in
int
pop
add
pop
pop
mov
outsl
mov
mov
or
repnz
mov
lcall
cmp
fsubl
les
in
xor
in
mov
addr16
pop
and
mov
and
lahf
xchg
jg
lcall
sbb
shr
sti
add
or
dec
daa
sub
jae
push
sub
dec
jno
add
xor
hlt
in
js
pop
mov
sub
ja
rclb
insl
inc
das
jge
push
pop
sarl
stos
sbb
das
decb
push
clc
push
fucomi
daa
pushl
fdivl
dec
pop
sub
daa
cmp
dec
xchg
fdiv
ds
dec
outsl
pop
inc
fdivrl
in
and
dec
inc
inc
enter
sti
adc
fidivs
mov
push
xchg
shrb
xchg
inc
jp
repz
jecxz
jle
outsb
lock
leave
scas
mov
cmp
sti
cmpsb
xchg
push
mov
push
cli
stos
jmp
lds
lahf
add
jno
call
xchg
fnstcw
lcall
or
shl
jecxz
loopne
mov
push
xlat
hlt
gs
jns
test
pop
xchg
lods
movsl
in
jnp
pop
mov
mov
jo
mov
cli
pop
lret
loope
cmp
xchg
inc
push
decb
mov
pop
xchg
or
mov
mov
push
inc
mov
cmp
aam
pop
dec
aam
mov
mov
dec
scas
push
out
adc
icebp
pop
iret
mull
pusha
rep
sub
ds
mov
repnz
les
bound
push
jns
adc
lock
cmp
cmpsb
imul
cmpsb
jbe
movsb
jns
mov
fistl
imul
xchg
or
or
add
push
mov
mov
sub
push
and
sbb
xchg
pop
xor
icebp
and
aam
xor
int3
fiadds
jp
xchg
lock
arpl
in
in
lea
aam
popa
jg
mov
scas
fnsave
femms
out
add
pop
aas
xor
jecxz
dec
lret
bound
mov
or
imul
inc
faddp
push
xchg
jecxz
jb
mov
dec
icebp
int
mov
mov
fdivs
test
push
leave
pop
outsl
sub
and
inc
mov
jbe
dec
xchg
inc
loop
ss
inc
ret
test
jnp
aas
mov
aaa
jge
or
in
test
sub
inc
jle
cld
cmp
fcoml
sbb
xor
inc
popa
jo
jmp
sub
out
adc
push
mov
idivl
mov
or
icebp
fsubl
jg
mov
sarl
jg
or
leave
lods
icebp
ljmp
fcmovbe
mov
jl
fwait
in
jge
stc
pop
dec
pop
lea
mov
add
cltd
mov
sub
cbtw
mov
js
push
jge
arpl
dec
add
scas
and
push
lahf
and
ficoms
dec
shll
jb
mov
inc
mov
cmp
adc
jb
sti
mov
fists
or
add
shl
fidivrl
jb
mov
pop
cwtl
fcmovbe
incl
out
dec
pop
cmp
and
and
mov
test
cs
xor
popf
imul
stc
ret
shr
arpl
clc
cmp
outsl
movsb
push
mov
sti
popf
push
fdivl
js
sbb
cli
ds
aam
pop
xchg
dec
push
add
jns
jnp
mov
jb
popa
xchg
add
lods
mov
aas
mov
pop
rol
in
xchg
mov
jno
pop
dec
dec
in
mov
push
pop
scas
jmp
mov
jg
stos
mov
cmc
cmp
out
and
shll
pop
push
iret
mov
addr16
mov
leave
pusha
ja
mov
cmp
xor
xchg
jae
in
lea
stos
mov
repz
clc
ja
xor
sub
jp
enter
imulb
jecxz
movl
dec
loopne
or
jae
push
xor
imul
out
or
rorb
daa
in
push
and
neg
sarl
xchg
fiadds
cmc
ljmp
inc
pop
ds
fmull
ljmp
mov
fstpt
mov
mov
sbbb
nop
dec
mov
adc
push
ljmp
push
mov
dec
xchg
cmp
xchg
fidivrl
mov
aaa
jbe
jae
fwait
arpl
mov
and
movsl
cmp
test
fimuls
cmp
cmpsb
adc
or
cs
push
pop
lcall
decl
out
pop
xchg
repz
adcb
outsb
push
stos
movsl
mov
xor
in
jmp
jno
loop
and
push
cmp
out
test
je
ret
fiadds
jns
fnstenv
ja
neg
cli
aas
adc
leave
xor
xor
fstpl
rolb
fmul
xor
into
add
sahf
mov
pop
cmp
dec
push
add
cwtl
jp
test
ss
mov
add
adc
mov
xchg
fs
out
out
hlt
aas
jle
lret
add
das
xchg
into
add
ds
scas
fisttpl
pop
jo
aas
dec
pop
and
das
add
lods
jae
xchg
pop
pop
mov
pop
lds
cmp
test
pop
xor
cmp
clc
movsb
pop
pop
sbb
loope
add
push
push
push
push
pop
js
ret
fadds
and
loop
pop
and
push
add
cltd
lds
mov
lahf
repz
bnd
sub
in
push
pusha
xchg
pop
movsl
cmp
mov
mov
xchg
and
les
repnz
jnp
test
ret
mov
add
add
sbbb
or
inc
mov
ret
jb
aad
xor
mov
push
mov
mov
outsb
push
das
xchg
jno
hlt
sahf
icebp
add
repz
jae
pop
fstp
mov
sub
mov
loope
xchg
cmp
xchg
je
pusha
cmpsl
mov
jg
inc
loop
je
ficoms
lock
idivl
leave
out
xchg
test
pop
xor
mov
push
imul
outsl
in
idivl
fs
lahf
enter
rolb
test
mov
sti
mov
pop
repz
mov
nopl
fsubrl
xor
jg
jbe
outsl
jnp
sub
fstpl
pusha
sbb
cmp
xor
pop
mov
cmp
out
clc
jnp
inc
in
mov
lods
mov
add
cmp
sub
fsubl
fistpll
imul
and
repnz
mov
push
or
mov
add
ja
leave
xchg
push
roll
jnp
lds
sahf
xor
out
jp
jns
std
pop
mov
fldt
aam
in
and
into
mov
pop
fcoms
jp
jl
mov
ffreep
test
and
and
mov
into
imul
jne
jmp
adc
clc
aas
add
es
pop
sbb
call
xchg
rorb
add
sar
lcall
fisubs
mov
push
adc
out
mov
ss
ljmp
mov
inc
push
lock
mov
lcall
mov
xchg
sbb
lock
push
adc
and
add
pop
push
jmp
lahf
push
xor
jmp
aaa
ds
add
xor
sub
jo
cmpsb
mov
mov
adc
jns
orb
cmpsl
xor
lock
inc
pop
add
jnp
shl
mov
mov
jnp
stc
std
subb
cmp
out
aaa
jge
rcrl
jnp
addr16
les
inc
push
sti
inc
adc
jle
cmpsl
add
icebp
test
aas
jecxz
cltd
adc
cmp
jo
mov
scas
icebp
aas
push
inc
loopne
jnp
mov
mov
rcll
mov
jno
add
iret
jp
push
xchg
or
push
pop
fnstsw
gs
cmp
lea
sahf
inc
aas
jnp
test
pop
test
js
inc
aas
roll
adc
jo
icebp
push
and
add
sbbl
mov
push
and
pop
add
std
mov
popf
pop
es
mov
lahf
xchg
int
mov
std
push
test
jmp
in
xor
mov
leave
jp
mov
push
rolb
shll
inc
arpl
clc
xlat
sbb
and
fists
in
jo
push
push
add
lret
fildll
mov
idivb
sub
mov
xchg
xor
movsl
mov
out
insb
pop
fwait
ss
arpl
jnp
ret
bound
aas
insb
xchg
sbb
add
cmp
ret
aad
pop
shrb
incl
ret
inc
pop
popf
jp
add
cltd
cmp
or
pop
mov
xorl
jno
add
push
leave
into
push
mov
ss
xor
pop
pop
call
test
xchg
jns
add
inc
sbb
mov
ret
adc
xchg
leave
rorl
hlt
pop
jae
push
mov
xchg
jle
mov
and
jns
mov
dec
data16
sbb
sub
inc
jle
dec
adc
pop
fcompl
jp
dec
cltd
js
adc
cltd
add
adc
pop
jecxz,pt
sbb
imul
scas
xchg
test
dec
jo
push
pop
fidivl
sub
dec
jno
xchg
jbe
xorb
addr16
or
cmp
add
enter
cmpsl
jb
es
lock
fstpt
jge
aaa
mov
in
push
sbb
jae
arpl
pop
sub
or
ja
jl
iret
push
inc
icebp
push
push
cmpb
enter
aas
enter
pop
cmp
lods
dec
insl
lock
jne
popf
push
or
addl
sub
jb
in
rep
add
enter
mov
ret
cli
jge
test
montmul
cmpsb
inc
push
mov
test
jg
add
clc
popa
mov
jmp
or
test
std
out
aam
shrl
cmc
mov
jp
or
jbe
sbb
daa
or
cmpsb
stc
jle
out
and
push
movsb
mov
mov
fbstp
leave
testb
sub
inc
popf
or
adc
das
rol
push
xchg
and
inc
ret
aam
in
fld
xchg
iret
sarl
shll
xor
fisubrs
sbb
scas
cmpb
jb
sti
jecxz
inc
and
mov
shlb
mov
hlt
xor
out
jge
es
mov
cbtw
jp
mov
push
sub
jo
mov
mov
mov
insl
adc
icebp
fcomp
jecxz
mov
test
and
shrb
fdivl
jmp
xorb
hlt
inc
dec
iret
pop
popa
inc
dec
bound
jmp
ljmp
ret
inc
dec
lds
mov
push
ret
jg
inc
adc
adc
mov
mov
pop
hlt
cmpsb
sarb
stc
lods
jle
aad
sbb
jge
inc
jge
inc
lods
jno
arpl
push
pop
data16
clc
out
mov
into
or
leave
outsb
pusha
xchg
hlt
pop
or
mov
cmp
lods
fs
jge
pop
jo
movsb
aas
ret
jno
or
imul
mov
sbb
pop
enter
push
lret
jnp
sbb
scas
std
xor
jmp
xchg
inc
jmp
add
arpl
shr
mov
xor
outsl
vcomiss
push
enter
faddl
in
jne
add
out
adc
ja
push
push
bound
jecxz
stos
fsubl
orl
fnsave
cmp
lods
shrb
and
sbb
mov
add
cli
and
jg
stc
mov
dec
aad
pop
mov
xchg
push
mov
cmpl
push
mov
fs
jns
bound
jecxz
dec
mov
pop
sub
mov
jecxz
jle
mov
fdivs
nop
push
or
imul
jmp
scas
fsubrl
cwtl
push
mov
outsl
out
mov
outsb
mov
sub
xchg
aam
out
lahf
or
push
jns
cltd
jg
pusha
jmp
das
out
ja
xor
pop
jg
rclb
and
jnp
mov
cld
and
lds
dec
aas
xchg
mov
out
scas
pop
xlat
repnz
add
pop
and
sbb
lods
xor
in
xchg
adc
or
xor
xlat
add
ja
cmp
xchg
das
insl
data16
or
insl
adc
scas
pushf
aad
outsb
xlat
shl
leave
clc
adc
into
sub
dec
cli
inc
adc
dec
jbe
pop
pop
xchg
aam
add
fistps
loop
andb
test
pop
xlat
je
enter
fcmovne
and
aaa
imul
stos
les
ret
shrb
ja
jno
out
addr16
add
scas
jl
cld
popa
and
inc
mov
mov
sbb
sub
mov
xchg
mov
jbe
and
and
mov
aas
ret
push
aaa
lds
roll
sbb
jb
pop
cs
rcll
sahf
cmpsl
mov
mov
lahf
insb
jg
jne
test
movsl
aas
scas
imul
test
stc
bound
mov
add
out
mov
dec
pop
mov
in
pop
jnp
xchg
adc
jge
es
cmp
mov
jbe
out
ljmp
stos
pop
cmp
sbb
lods
inc
dec
mov
add
mov
jbe
cmc
shrl
dec
mul
popf
iret
jg
nop
mov
pop
jns
cmp
mov
je
or
add
push
ja
addr16
aas
add
fisttpll
cmpsb
xor
xchg
lret
icebp
movsb
pop
sub
lds
stos
cli
icebp
arpl
sbb
fidivs
cs
xchg
pop
mov
mov
js
mov
add
arpl
popl
data16
std
mov
pop
dec
outsl
pop
imul
enter
push
enter
pop
push
sub
es
adc
rorl
lcall
mov
lock
xchg
out
rcrl
jp
imul
es
aaa
mov
insb
mov
jne
mov
sub
add
pushf
outsb
decl
insl
test
mov
pop
jne
cmp
out
sub
sbb
cwtl
add
rcr
loopne
add
mov
inc
xchg
in
xlat
sub
jecxz
loope
daa
push
dec
add
roll
leave
outsb
aad
sbb
mov
iret
cmc
cld
cmp
out
inc
fildll
xchg
cmp
lahf
test
mov
mov
inc
jo
pmaxub
dec
jp
or
adc
popa
notb
repnz
lds
dec
inc
mov
mov
pop
clc
cmp
and
mov
int3
sahf
negl
jg
add
fildl
ds
in
imul
lret
andb
popa
add
call
mov
stos
sbb
mov
inc
ret
mov
roll
iret
js
xor
test
bound
adc
fnstsw
xor
jo
mov
xchg
rcll
arpl
add
sub
imul
adc
jg
outsb
lds
adc
cltd
xchg
or
add
out
cmc
insb
in
jbe
repnz
test
sub
dec
inc
ret
xchg
pop
push
mov
hlt
jge
jb
add
adc
clc
stc
jne
add
and
fnstsw
scas
insl
xchg
add
pop
nop
insl
or
fcomip
sbb
das
fnstcw
cmp
jno
add
cli
out
add
pop
lcall
mov
fcoms
orb
and
xchg
into
push
pop
imul
xchg
rorb
push
cmp
arpl
daa
sub
inc
das
gs
lock
mov
in
mov
jge
xchg
adc
test
and
jmp
and
pop
dec
shrb
ror
dec
icebp
std
shll
mov
mov
push
insb
or
mov
mov
dec
movzbl
xchg
jge
and
sbb
mov
push
dec
xlat
xchg
aad
shlb
push
xor
pop
lods
mov
aaa
fisttpl
outsl
pop
jns
xchg
ror
fisubrl
fwait
inc
pop
push
push
roll
push
and
loop
jae
push
jle
shrb
adc
push
dec
cmpb
movsb
push
mov
mov
sarb
loopne
addb
aas
outsb
cltd
jge
jge
out
in
inc
aaa
jns
inc
jae
loop
repz
ja
fcmovnu
ficoml
clc
push
pop
jge
sbb
inc
fistpll
or
cmp
mov
ja
xchg
cmpsw
scas
xor
pop
aas
out
cmc
test
inc
repnz
jge
jp
ljmp
add
mov
or
jl
fiadds
sahf
in
mov
ret
data16
arpl
sub
ret
leave
jge
aam
and
xchg
lock
sahf
lret
cmp
les
movsl
add
jb
jmp
xlat
push
loopne
inc
jno
adc
mov
fimull
jb
pop
xchg
mov
mov
mov
out
pop
mov
jno
mov
cmpb
lret
jnp
jmp
pandn
fmull
lods
cli
add
popa
mov
inc
mov
pop
push
mov
mov
inc
lods
mov
lret
rcl
hlt
in
add
je
jbe
jmp
jecxz
fldt
add
aas
mov
in
enter
fiaddl
int
mov
jne
jle
mov
call
mov
add
jecxz
iret
pusha
lock
insl
pop
out
fisttpll
ljmp
jl
movsb
xor
icebp
adc
and
aas
cmp
sar
mov
sti
cmpsb
pop
movsb
sbb
jno
adc
insb
mov
push
icebp
xchg
xchg
pop
negl
stos
xor
jnp
mov
pop
dec
nop
mov
and
xor
scas
loopne
or
push
data16
adc
js
ja
push
inc
into
mov
and
or
sbbl
adc
das
dec
mov
sub
jbe
es
xchg
mov
pop
cmc
cli
xlat
adc
sti
cmp
fidivs
jno
lods
je
pop
jge
and
jmp
pop
mov
jp
ret
addl
nop
imul
mov
into
arpl
scas
mov
or
lcall
aad
loopne
js
lret
push
dec
shlb
push
jge
mov
psrad
data16
inc
cld
inc
adc
es
call
aam
leave
sti
mov
mov
pop
jmp
or
cli
mov
roll
mov
leave
or
pop
mov
stc
popa
lret
cwtl
cmc
aas
lods
jp
pop
outsl
or
stos
jle
ficomps
pop
cmp
out
std
orb
xor
sbb
popf
arpl
lcall
cmpl
xor
in
add
push
push
shll
scas
ror
mov
fildl
cmpsb
fs
cmc
sub
lahf
pop
inc
and
pop
sub
add
cmpsb
sub
pop
lcall
lea
stos
xor
arpl
pop
pushf
mov
xchg
dec
lea
pop
fcmovne
addr16
icebp
je
adc
lock
xor
sbb
mov
cmp
pop
mov
cmpsb
sbb
jae
and
incb
mov
cmp
push
dec
xor
jae
mov
popa
or
outsl
iret
jno
push
inc
push
imul
push
mov
lret
push
outsl
push
mov
adc
xchg
cmp
aam
mov
outsl
adc
cld
sub
lahf
sub
repnz
negl
add
ds
sub
pop
andb
inc
xchg
les
aas
incb
dec
rclb
dec
jge
pusha
js
popa
cmp
push
leave
mov
xchg
insl
mov
push
scas
lock
inc
xlat
incb
mov
inc
dec
test
mov
ds
push
out
dec
adc
cmp
jno
push
fldt
shlb
mov
add
mov
xlat
jl
sahf
mov
jmp
js
shl
repnz
and
xor
mov
jae
pop
jecxz
mov
imul
mov
lock
or
into
mov
stc
icebp
jp
add
and
fcompl
hlt
mov
out
out
jge
and
rol
lds
dec
jmp
mov
addb
mov
and
xchg
add
loopne
mov
add
movl
cmp
inc
pop
mov
in
imul
fistl
dec
xchg
loopne
out
push
jb
inc
xlat
rcrl
pusha
fld1
dec
add
adc
xor
inc
fs
jne
pop
in
rclb
pusha
cli
inc
addr16
mov
inc
pop
fistpll
ret
cwtl
test
dec
inc
add
in
mov
addr16
pusha
aad
push
dec
mov
lcall
out
lahf
jg
ss
lds
imul
scas
iret
cmpl
xchg
pop
jae
pop
arpl
call
roll
imul
fiaddl
loopne
jae
mov
outsl
imul
pop
fstpt
test
rorl
sarb
rorb
pop
or
push
bswap
and
fistpll
pop
stos
shrb
pop
aas
ja
sub
pop
icebp
pop
add
nop
push
xor
jp
cmc
jg
jle
xor
inc
mov
or
popf
shlb
or
inc
into
test
fsubrl
fsubs
push
je
mov
adc
mov
cmp
mov
inc
pop
jle
ja
xor
jae
and
inc
es
cmp
psrlq
mov
mov
push
push
jmp
stos
in
loopne
bound
in
lea
mov
jns
inc
sbbl
or
adc
mov
es
jmp
mov
stos
mov
leave
iret
popa
scas
sub
movsl
addb
dec
pop
movsb
popa
jne
dec
jmp
xchg
lret
pop
outsl
in
js
or
jecxz
push
xchg
adc
into
jg
mov
and
in
mov
icebp
pop
jns
sub
scas
lds
fadds
add
aas
push
fwait
imul
xchg
cli
push
repz
jne
stc
add
outsb
jns
jg
mov
xchg
je
mov
xor
inc
mov
dec
add
lock
mov
cmp
and
addl
pop
xor
pop
andl
shl
mov
jns
dec
js
jne
test
adc
cli
stos
cmp
cmpl
add
jae
dec
xchg
imul
imul
jb
xchg
das
mov
sti
fs
pop
call
dec
mov
mov
add
pop
or
sbb
xor
scas
xchg
fimull
sbb
loop
inc
leave
ja
test
jge
jo
and
in
pop
outsl
add
lods
jne
and
roll
int
pop
and
adc
mov
xchg
mov
xor
pop
cli
lahf
call
aas
movsl
sti
pcmpgtd
out
fidivrs
jge
out
pusha
fst
cmpsl
mov
cmp
loopne
sbb
sub
clc
xchg
mov
push
xchg
dec
repnz
inc
pop
xor
dec
dec
fsubrl
jns
or
and
ret
fisttps
xchg
mov
cmc
dec
imul
mov
cmp
fadd
pop
push
pop
sti
or
cmp
and
xchg
dec
js
movsl
shlb
cmp
mov
addr16
or
out
ja
push
popf
dec
push
dec
xor
cmpb
dec
jo
shll
jbe
jae
jno
dec
ds
fnstenv
mov
rcr
push
cltd
fbld
mov
les
mov
hlt
mov
add
jge
jne
leave
or
or
adc
jns
mov
fdivr
pop
leave
push
sbb
pop
mov
xchg
test
test
imul
loope
stc
cmp
fistl
and
cmp
push
add
adc
push
popf
leave
icebp
scas
jnp
stc
int3
mov
repnz
adc
push
shll
and
test
lods
cli
inc
xor
iret
out
xchg
les
mov
ret
sbb
mov
pop
scas
nop
pop
fiadds
ret
sub
mov
bnd
movsl
pop
cmp
jle
imulb
je
loope
out
cs
cmpsl
outsb
sub
sahf
cmp
gs
bound
cltd
bswap
fimull
popa
scas
fisubrs
push
lret
mov
loope
in
aaa
pavgw
lea
movsb
or
or
lahf
gs
push
subl
aas
xlat
out
jp
jno,pn
xorb
pop
dec
dec
daa
mov
jne
inc
js
mov
add
pop
mov
daa
sbb
pop
mov
iret
fisttps
mov
xor
ret
out
add
inc
xor
inc
push
ds
or
or
jbe
cwtl
xor
or
xor
inc
push
mov
add
jae
add
xchg
out
outsb
cmp
out
shrl
sub
add
lods
ffreep
sbb
repnz
cmp
popa
stc
or
nop
cmp
das
rol
xor
xor
fnstsw
adc
inc
shll
loopne
rclb
fnstsw
cmp
outsl
inc
fidivs
repz
ja
dec
fdivrs
xlat
inc
jbe
popa
stc
push
imul
loopne
add
push
push
and
stc
jbe
out
nop
mov
lea
jae
int
pop
xlat
xchg
dec
jle
jg
adc
in
imul
addr16
push
rcrl
loop
xor
xchg
cmp
ret
mov
rcll
sub
jecxz
in
xor
aad
cli
inc
faddl
fcomps
mov
je
inc
dec
decb
mov
pop
mov
sbb
jg
stos
mov
adc
jns,pn
dec
and
cpuid
cmpsl
insb
cmp
sbb
pop
es
mov
leave
mov
mov
rorb
xchg
adcb
in
into
jle
cmp
xchg
inc
subl
or
inc
push
adc
iret
icebp
repnz
or
movsb
imul
test
add
test
mov
or
pop
enter
push
popa
mov
jnp
sbb
xor
lock
fwait
push
out
aam
xchg
xor
dec
test
sub
or
rclb
loopne
in
mov
les
ret
or
in
push
push
push
xchg
xor
push
xor
orl
cvtps2pd
cli
add
lock
mov
movzwl
scas
mov
jnp,pn
hlt
lahf
mov
inc
jae
iret
jge
or
pop
mov
call
push
rcll
pop
pushf
neg
jle
pop
iret
mov
in
pop
mov
mov
mov
cmp
mov
les
sti
jp
fadd
loopne
pusha
jg
stos
loope
insl
orb
dec
loopne
in
push
xor
shlb
repnz
movsb
clc
jb
les
and
add
sbb
lret
std
push
pop
mov
add
jg,pn
jns
pop
cmc
dec
dec
jecxz
mov
xchg
outsl
sar
test
cmp
inc
xlat
sub
clc
hlt
cmpsl
and
and
frstpm(287
dec
and
jbe
add
fwait
inc
and
scas
insb
in
jae
sbb
mov
ds
arpl
test
pop
push
jle
mov
loopne
out
sahf
push
xchg
push
mov
push
ja
pop
and
jae
inc
in
xorl
insl
push
shrb
les
mov
inc
loopne
insl
loope
in
fmul
dec
repz
xchg
pop
outsb
sub
outsb
js
cwtl
inc
in
aas
sub
add
mov
repz
out
loopne
mov
pop
xchg
push
inc
and
xor
fprem1
jns
and
xchg
sarb
pop
mov
cmp
mov
lea
cmp
push
in
jp
add
loop
mov
pop
movsb
sbb
mov
mov
or
fsubr
mov
clc
cmovg
repnz
sbb
xor
mov
aaa
jp
loopne
dec
push
ja
push
mov
or
mov
loop
daa
adc
lock
pop
jmp
pop
inc
xchg
call
aas
inc
test
out
cld
imul
sub
dec
mov
adc
inc
stos
dec
insl
mov
inc
cmp
mov
imul
sub
scas
in
push
dec
or
js
cmc
int
mov
inc
stc
in
fisubl
or
outsb
loope
cmp
sub
shlb
shrb
stos
mov
js
sub
flds
imul
enter
ljmp
push
cmpl
cmp
pop
fisubs
icebp
ja
test
andb
pop
inc
sarl
inc
mov
call
cmp
xchg
lahf
ja
fmull
jno
out
bound
popf
in
fsubs
pop
mov
cmp
das
mov
imul
pop
subl
lahf
inc
mov
nop
pop
dec
ja
jecxz
inc
sbb
incb
pop
mov
pushf
movsl
jae
jp
pop
ss
dec
icebp
jg
mov
inc
lock
xchg
adc
pop
loop
call
cmp
adc
sarb
jae
fldl
outsl
xchg
fisubs
push
out
pop
sub
mov
aad
and
dec
mov
and
pop
push
mov
and
enter
hlt
imul
out
jle
out
pop
loop
gs
sbb
jl
out
lret
cld
ja
das
ficoms
loope
xchg
popa
mov
pop
test
jb
mov
nop
sahf
pop
push
gs
push
xchg
sti
rcll
jecxz
popf
xchg
push
outsl
ss
pop
out
lcall
dec
xor
lds
dec
or
push
shrl
int3
jnp
add
pop
pusha
or
icebp
ret
int
cmp
loope
aaa
call
sub
aas
sti
push
clc
jnp
iret
jo
subl
push
add
jmp
dec
push
aam
jge
dec
sbb
mov
lahf
shll
movsb
pushf
inc
xchg
cmp
js
push
cmpsl
subl
jle
push
push
test
mov
cmp
ret
outsl
adc
sub
jae
pop
pushf
pop
cmp
jge
add
mov
fmulp
and
popf
les
jle
jnp
mov
icebp
outsb
icebp
fwait
sti
les
xchg
int
add
rcrl
imul
fdivs
jg
aam
test
xlat
and
push
ljmp
add
push
popf
imul
cmp
adc
dec
or
in
or
ret
aad
xor
jb
icebp
xlat
xchg
or
add
add
std
push
sti
filds
shlb
fisttps
lret
mov
insb
ja
mov
ja
or
inc
sti
stc
push
pop
inc
aas
jnp
push
out
lret
aad
das
rorl
jb
rorb
in
int
and
les
andl
stc
mov
aad
inc
pop
push
mov
jmp
popa
leave
sbb
scas
aas
lcall
andb
push
xor
out
pop
test
out
jp
out
mov
lock
pop
jecxz
mov
and
fcmove
dec
out
pop
stos
popf
in
out
xor
xor
xor
ljmp
sbb
shll
es
mov
sub
stos
ret
jno
loope
test
push
mov
mov
xor
sti
popa
in
pusha
pop
out
jae
xchg
mov
push
popf
popf
aad
in
lcall
je
inc
fisttpl
shlb
lahf
and
lret
shl
cltd
repz
mul
mov
movsl
stc
rcrl
fdivp
js,pt
jg
xor
jl
jbe
mov
cld
sbb
repz
cltd
mov
cli
add
xchg
leave
jne
aas
mov
jae
loop
ljmp
leave
iret
jbe
cmc
ret
xchg
daa
les
inc
jb
add
outsl
leave
aas
jp
shrb
js
mov
cmpsb
pop
leave
pop
mov
jns
mov
jl
outsl
jge
mov
xor
divl
notl
mov
jge
cmpsl
scas
fs
js
mov
lods
xchg
adc
adc
push
lcall
popl
cs
inc
mov
mov
out
pusha
jp
rcrl
lcall
rolb
incb
mov
cmp
in
xchg
dec
xorl
sub
imul
xor
enter
scas
cltd
int
or
mov
insl
cltd
icebp
sub
movsl
sbb
xor
cs
int3
sub
loope
out
into
push
repnz
mov
scas
jns
mov
cltd
mov
add
push
jg
mov
cmp
jns
jecxz
stos
add
adc
xor
or
jg
fwait
push
int
mov
loopne
pop
cmp
rcl
lods
rorb
or
addr16
xchg
sbb
sub
cmp
sti
fiaddl
add
pop
jecxz
inc
jmp
mov
xchg
xor
jecxz
imul
mov
jmp
add
and
pop
cli
out
popf
mov
and
std
pop
jb
inc
addr16
pop
xor
arpl
pop
mov
add
pop
add
fsubl
dec
test
addr16
push
mov
inc
dec
xchg
sarl
mov
pop
stc
adc
mov
or
movsl
sbb
inc
sbb
mov
lret
sub
bound
pop
sub
pop
in
push
sbb
jg
and
fiaddl
sbb
or
mov
xchg
subl
pop
push
sarb
inc
pop
xchg
ds
sbb
repnz
cpuid
clc
pop
outsb
mov
jb
jp
das
adc
ljmp
int
and
xlat
cmp
stc
cs
lock
push
lock
add
outsl
mov
out
jle
push
jle
mov
xorl
push
mov
adcl
push
inc
inc
in
adc
std
mov
fcmovnu
out
mov
xor
out
pop
pop
out
xchg
dec
in
inc
loope
in
nop
mov
fcomps
shrl
push
fcmovnbe
or
mov
scas
inc
or
hlt
imul
enter
jno
and
xchg
xchg
sbb
imul
jmp
push
out
loop
xchg
mov
aas
jge
in
push
aad
pop
test
mull
xchg
clc
add
jp
repnz
data16
add
jbe
xchg
add
or
add
xchg
xor
lcall
and
out
iret
clc
sub
data16
cmc
add
inc
les
scas
lcall
repnz
ljmp
das
pop
mov
xchg
pop
pop
mov
cwtl
test
orb
inc
xchg
sbb
add
xchg
pop
mov
int3
sub
lock
and
push
mov
outsl
add
pushf
call
aad
leave
pop
push
mov
cld
and
out
cmp
mov
jp
push
test
movsb
mov
out
add
and
je
inc
jg
sar
push
or
js
fidivrs
adc
xchg
pop
jne
sbb
ljmp
sub
jne
testb
lret
into
out
iret
decb
fistps
loop
out
fisttpll
call
sbb
leave
bound
lds
adc
pop
iret
inc
jecxz
pop
je
xchg
std
faddl
cmpsl
add
mov
aam
jns
sub
mov
cmp
cmp
xor
add
lds
loope
loop
mov
jb
adc
sbb
fwait
imul
rcr
enter
stos
and
insl
pop
lods
in
loope
mov
popf
sub
loope
arpl
xlat
mov
js
ljmp
mov
fwait
xchg
sbb
sbb
dec
lea
xor
jbe
cli
mov
sarb
imul
hlt
pop
cli
fisubrl
scas
fs
sti
arpl
scas
jb
test
movsl
mov
in
mov
pop
lea
mov
mov
ljmp
mov
aaa
cmp
out
stc
daa
pop
mov
jge
cwtl
mov
imul
out
iret
mov
sti
pop
lods
arpl
pop
int
loope
loope
clc
ds
je
add
pop
xchg
xchg
add
and
jns
dec
mov
mov
cmpsl
sbb
add
addr16
jge
mov
push
clc
inc
icebp
add
mov
push
sub
dec
es
cmp
pop
xor
mov
add
outsl
lock
rolb
jmp
inc
das
inc
test
ficoml
jp
fisubrs
or
cmp
in
xchg
or
in
xchg
aas
add
inc
aas
or
mov
lods
xor
test
xor
xchg
cld
dec
sti
push
ds
pop
orb
push
std
pop
fsts
mov
scas
sbb
aaa
adc
int3
mov
cmpsb
arpl
or
mov
aas
inc
jb
ja
sbb
mov
jno
iret
push
roll
fsub
stos
mov
push
lds
xchg
fidivs
pop
jmp
and
rcl
xor
push
stos
inc
jnp
popf
xchg
jg
mov
xor
stos
jno
rcll
xchg
xor
xor
jle
dec
ja
xor
jp
sbb
jg
cmp
push
sub
xor
fnstcw
adc
les
mov
dec
loopne
add
jmp
pushf
pop
xchg
shrl
sbb
add
xor
cmp
jne
aad
xlat
inc
or
xchg
inc
push
mov
fiaddl
push
int3
add
repz
js
and
loope
leave
data16
cmp
cmpsl
mov
jo
out
adc
jno
into
mov
lock
test
js
mov
pop
mov
decl
inc
lahf
inc
out
pop
xor
bound
mov
inc
addl
jns
cmpb
orl
fistps
and
jp
fnstcw
arpl
sti
mov
add
clc
testb
jns
ret
cmp
icebp
jle
push
push
sti
out
xchg
pop
push
mov
ja
pop
scas
lea
fistpl
iret
js
mov
jb
gs
push
popf
add
lahf
pop
ret
adc
fwait
cmpsl
pop
inc
mov
fiadds
lcall
out
lahf
ret
gs
stos
in
add
sbb
arpl
addr16
stos
or
add
cmpb
pop
cmpsb
mov
in
jge
cli
popa
xchg
sbb
int
daa
mov
aaa
jo
pop
into
xor
and
jbe
std
insb
and
mov
cmp
adc
pop
popf
pop
jae
js
ret
adc
mov
nop
dec
pop
pop
inc
into
test
fisttpll
push
sbb
mov
cmpl
pop
test
test
and
decb
cmp
mov
push
lcall
jp
pop
pop
and
cmp
push
call
aas
mov
pop
movsl
dec
cmc
fsubl
fiaddl
mov
fdivs
in
in
sub
shll
andl
shl
jbe
stos
jne
lret
cmp
mov
js
and
push
sub
test
test
ljmp
imul
mov
mov
iret
and
frstor
or
in
jecxz
pop
in
testb
jp
stc
test
lret
outsl
stos
enter
les
pop
push
andl
cmpb
cmpsl
not
jns
jnp
sbb
hlt
ds
xchg
data16
push
inc
cmpsl
roll
loop
out
xchg
jo
jecxz
orl
jg
fldcw
fcomps
jns
outsl
outsl
gs
jnp
popa
leave
shlb
lahf
lahf
mov
repz
scas
imul
fs
in
jne
jg
xchg
mov
je
arpl
pop
mov
sarl
cmpsl
jne
fs
outsl
adc
sub
fisubrs
push
and
mov
cmpsl
push
cmp
mov
adc
jge
add
ficomps
dec
test
push
test
add
and
lods
and
fisttpl
cmpsl
mov
les
scas
and
pop
push
in
mov
mov
or
inc
bound
jge
rorb
cmp
xchg
jg
shll
jecxz
gs
std
sahf
xor
popf
sti
sbb
in
mov
je
dec
aas
fmul
and
lahf
out
mov
imul
out
out
xor
fstpt
pop
std
out
fwait
inc
shll
cmovns
je
outsb
stos
icebp
rorb
call
int
testl
xchg
or
xchg
mov
mov
jae
bound
mov
lahf
fsubrs
jae
jae
sub
fimuls
fisttps
pop
add
fistpll
push
outsl
gs
popa
icebp
push
lret
jns
push
idiv
scas
fnsave
test
ficoms
aam
popa
insl
push
sbb
imul
lods
lahf
xchg
ret
jmp
sbb
cld
cmpsb
and
fmull
adc
scas
lahf
pusha
pop
sub
inc
into
stc
ret
jnp
adc
mov
sarl
mov
aas
pop
jge
add
ja
jno
dec
iret
inc
clc
fwait
mov
jp
jge
jo
outsl
dec
pop
cmp
jns
data16
leave
imul
jne
repz
jno
sti
fsubrl
xchg
jne
fcmove
jge
aam
pop
dec
pop
jne
jb
xor
loope
lcall
aas
shll
mov
test
dec
std
lock
test
add
int3
pop
push
fisttps
mov
push
shrl
sbb
add
in
cwtl
fmuls
or
dec
jp
pop
ja
push
inc
dec
push
adc
xor
mov
fsts
and
outsb
ficoml
lods
push
subb
xor
jae
popf
mov
dec
inc
shll
jmp
jecxz
imul
aam
inc
inc
outsl
lods
jb
das
out
jecxz
cli
xor
int
push
repz
push
jae
sub
into
sbb
outsl
xor
jns
jno
xchg
cmp
cmpsb
inc
mov
adc
ret
pop
mov
sbb
inc
jge
mov
mov
jnp
test
jae
xchg
rcll
stos
sub
pop
xchg
lea
mov
cli
xorb
cmp
scas
fstl
pop
out
pop
mov
and
cli
sarl
push
aam
pop
or
leave
jne
mov
outsl
xchg
in
mov
xchg
push
mov
pop
sbb
adc
add
sbb
lcall
std
inc
outsb
dec
das
dec
dec
in
or
lret
jno
ret
ja
andnps
xchg
repnz
fadd
dec
cltd
loopne
pop
mov
jae
pop
xchg
or
jnp
jo
jns
inc
arpl
aam
pop
mov
push
nop
enter
cmc
or
outsl
mov
inc
mov
fiadds
dec
movsl
mov
add
adcl
syscall
arpl
popl
pop
mov
push
or
xchg
or
pop
cmp
nop
cli
aam
shrb
out
mov
mov
sbb
test
cmp
test
adc
push
adc
ljmp
jne
int3
mov
ret
mov
adc
enter
orb
add
aaa
insb
bound
and
iret
and
lock
out
inc
mov
in
fwait
test
test
xor
in
dec
repz
into
jp
mov
jnp
add
out
and
sbb
jg
data16
decl
jle
sbb
out
add
dec
mov
push
popa
pop
icebp
and
inc
inc
out
sbb
cwtl
push
js
pop
movsl
jb
ss
sbb
push
mov
pop
test
in
test
sub
scas
adc
sti
out
dec
mov
inc
mov
push
xchg
out
mov
dec
int3
into
sar
xchg
inc
fdivr
jne
and
sbb
cmpsw
cmpsb
mov
mov
icebp
insl
fistl
fisttpll
inc
fdivl
cmc
sahf
hlt
aas
daa
mov
dec
into
add
sub
mov
adc
nop
int
xchg
cltd
jp
lods
push
and
and
dec
filds
out
subb
pop
mov
xor
jl
and
lea
loope
out
mov
leave
and
lss
std
push
addr16
lret
fdivrl
int
xor
incl
lods
pop
mov
add
sahf
daa
xchg
mov
lret
and
out
loope
sbb
sbb
mov
lock
or
add
icebp
bound
sbb
push
xchg
jg
dec
mov
jge
icebp
pop
mov
scas
test
mov
mov
mov
mov
push
push
cmp
mov
in
mov
fwait
out
lcall
and
mov
inc
test
int
fs
test
frstor
nop
and
or
pop
sbb
jns
push
jp
out
mov
pop
cli
and
in
mov
stos
add
fisubs
les
adc
cmp
mov
les
sti
jge
pop
rcrl
movsl
sbb
aad
sub
les
mov
neg
push
xlat
xchg
pop
xchg
out
cmp
stc
movsl
sahf
mov
jecxz
adc
iret
insl
sub
movsl
dec
repz
cmp
mov
bound
mov
aaa
loop
pmaxsw
pop
fisttpl
and
stos
inc
mov
jae
leave
lods
movzwl
stos
fcomps
push
sub
mov
xor
testl
stc
cmpb
mov
cmpl
push
inc
dec
inc
push
repz
jge
inc
jb
pushf
xchg
mov
jp
inc
jg
jae
sbb
push
sti
mov
xorb
jns
std
mov
ja
out
mov
mov
std
cmp
pop
xchg
jp
outsb
sub
addr16
outsl
push
push
push
add
into
rcrl
cmp
iret
and
in
aas
ret
fldt
jno
addl
pop
push
enter
and
sti
sub
sarl
mov
jb
js
dec
cli
and
push
mov
adc
or
lahf
or
ss
sub
testl
rolb
inc
imul
fbstp
sti
cmp
sbb
pop
out
pop
mov
repnz
pop
inc
mov
push
sahf
jne
xor
insl
and
fistpll
and
sti
xlat
jbe
test
cmp
out
mov
cmp
inc
fdivrs
hlt
pextrw
sub
mov
fdivp
ficomps
addr16
and
sub
mov
in
addr16
ficompl
stos
loope
or
dec
adc
sbb
push
ret
inc
sbbl
jle
loop
fadds
loopne
dec
xchg
cs
xchg
push
arpl
jns
jl,pt
jo
and
jae
jnp
cmpl
loopne
int3
leave
inc
movsb
lea
jb
mov
ljmp
inc
das
popa
cmp
mov
adc
lock
mov
push
sahf
aas
in
sarl
push
add
jns
loop
fsubl
mov
icebp
jg
push
and
mov
cli
sub
lea
and
daa
stos
add
sbb
xchg
xor
mov
out
jp
cmp
fs
ret
pushf
cmp
lds
cwtl
dec
data16
insb
stos
push
fdivp
sbb
xor
aad
mov
jp
incl
dec
pop
add
pop
gs
sbb
xchg
fucomip
inc
mov
out
jae
mov
rorl
jp
add
lea
in
dec
mov
mov
mov
pop
inc
jne
pop
or
out
in
ja
lret
jg
jno
sarb
cli
jge
test
jns
nop
dec
push
push
jmp
clts
in
jp
scas
mov
adc
xchg
mov
loop
sub
jb
pop
es
lahf
fistpl
iret
add
pop
fwait
mov
or
mov
fnstcw
push
mov
dec
dec
xor
inc
mov
cld
xchg
fimull
fstpl
and
popf
jnp
leave
scas
sarb
push
cld
js
sti
inc
mov
sti
repz
aam
jl
pop
cld
insl
mov
sub
clc
mov
inc
jp
mov
ds
xchg
repnz
dec
faddp
andb
shlb
jno
mov
jge
addr16
jbe
mov
pushf
sahf
dec
imul
es
icebp
and
mov
push
cmp
or
and
es
aaa
shll
adc
faddl
push
push
aam
xchg
mov
gs
pop
pop
mov
fwait
sbb
in
out
daa
dec
clc
enter
aas
xor
mov
cmpl
lahf
push
jno
movsb
jmp
iret
outsl
fs
mov
xchg
or
inc
sub
cmp
mov
fistps
hlt
lcall
loope
xchg
sbb
cli
xor
push
xchg
xlat
insb
hlt
lret
mov
outsb
dec
or
add
int
or
mov
or
mov
push
lret
pushf
sub
movsb
cmc
mov
rolb
push
sbb
pop
adc
out
ja
mov
pop
or
aad
aas
outsb
ret
inc
inc
cmpsl
popl
push
test
fidivs
imul
xchg
sub
pop
xchg
push
movsb
mov
leave
cld
sub
sarl
push
jl
sbb
jne
pop
fld
mov
out
mov
adc
dec
test
pop
sbb
or
cmp
fs
popa
sbb
jbe
jmp
es
xor
push
aad
jmp
shl
push
mov
jle
sahf
sbb
push
dec
aas
loope
push
inc
push
xor
cld
inc
inc
fcomps
pop
andb
push
cmp
int
adc
xorb
and
jnp
scas
or
ljmp
pop
sub
into
pop
sti
jl
add
mov
jno
mov
dec
repz
ljmp
jae
dec
sti
mov
sti
sar
fdivl
repz
mov
add
cwtl
in
mov
mov
xchg
jge
xlat
add
sub
push
gs
xchg
jb
arpl
rcrl
ret
push
and
inc
dec
sub
inc
pop
outsb
std
in
xchg
outsb
jge
insb
inc
xor
add
and
jne
inc
cmp
in
inc
jnp
inc
pop
inc
jp
or
fsubrl
fcompl
ret
rcrb
cmpsl
push
add
pop
inc
shll
lods
sub
inc
jo
and
daa
fistl
xchg
fs
dec
xor
movsl
inc
jb
aam
cli
cmc
dec
gs
popf
or
les
fistpll
lahf
out
imul
xchg
cltd
inc
and
repnz
repz
dec
subb
ds
xor
mov
push
fmul
add
fsts
jb
pop
gs
xor
sahf
mov
mov
inc
rcrb
ret
push
enter
push
push
nopl
das
fucomi
in
xor
sub
outsl
fistpl
orl
and
jae
mov
test
popa
fwait
lods
xchg
and
pop
pop
sti
movsb
out
mov
or
mov
jnp
pop
cmp
add
jg
outsl
push
jno
jp
push
jnp
out
mov
mov
xchg
xor
frstor
inc
xor
outsl
adc
mov
mov
sub
jmp
cmp
mov
arpl
pop
ret
jge
mov
sub
mov
adcb
inc
cbtw
lret
imul
jne
dec
clc
xchg
ds
rol
jbe
mov
cmp
jge
mov
bnd
jno
ds
arpl
inc
jp
add
loop
je
aas
loop
jp
imull
push
mov
add
rol
add
push
or
repz
inc
dec
or
and
cmp
in
iret
add
in
mov
std
jnp
ret
ret
ror
lock
lahf
popa
mov
mov
call
mov
xor
fwait
jecxz
or
dec
push
shrb
loop
scas
lcall
dec
mov
pop
and
lret
popa
dec
hlt
stc
rorb
jg
jo
add
stc
popf
out
adc
dec
iret
test
mov
imulb
out
outsb
sarl
push
mov
ror
negl
xchg
dec
into
lods
xor
frstor
in
jb
fucom
jae
jns
jb
mov
pop
xchg
cld
fldcw
push
vsqrtsd
arpl
scas
sub
shlb
jle
jmp
stc
bswap
jo
jg
leave
mov
cs
push
inc
and
test
aas
sti
cltd
sub
in
pop
mov
cld
inc
stos
mov
sub
jne
adc
lods
mov
jnp
or
push
dec
scas
add
dec
and
rcr
mov
lock
mov
les
push
out
popl
add
fs
aas
test
sub
dec
mov
pop
imul
mov
sbb
pop
lods
jbe
rol
das
mov
into
lods
adc
pop
xorl
lret
push
popf
fldenv
aas
push
xchg
ret
sub
incl
ret
fwait
shr
clc
imul
push
fdivl
dec
cmp
xchg
mov
mov
sbb
daa
cmpb
jns
add
inc
cmp
jnp
lea
pop
imul
test
sar
mov
and
imul
icebp
ret
jne
mull
xor
icebp
psraw
cmpsl
jns
insb
loope
sub
jb
mov
inc
inc
sub
insb
xchg
notl
pop
fwait
icebp
fadd
sbb
add
aas
xchg
out
push
call
adc
and
js
mov
jmp
sarl
cmpsl
add
add
cmpsl
stc
add
call
iret
sbb
or
movsb
jmp
repz
out
dec
aad
arpl
outsl
rcl
xchg
pop
movsb
movsl
ret
and
call
jl
leave
cmpb
shlb
sub
mov
mov
push
and
push
mov
or
pop
scas
dec
jo
jo
adc
mov
mov
xor
cmp
rcll
ficoms
in
jae
int
mov
jecxz
sarl
out
rcrb
movsl
aaa
les
out
cltd
jb
jecxz
and
or
aas
loopne
mov
into
es
testb
mov
mov
jae
xor
daa
insl
cmp
pop
inc
add
push
xchg
jle
mov
mov
jnp
pop
mov
cltd
loopne
insb
mov
shrb
adc
xchg
std
xor
pop
dec
addb
outsb
xor
xchg
sti
sub
xchg
test
xor
sbbb
ds
xchg
fs
lea
addr16
xchg
outsl
imul
mov
jae
jmp
jno
dec
mov
loope
pop
fistpll
bound
fistpl
pushl
lret
and
sub
fcmovne
sub
ret
add
psubusb
loop
cmp
pusha
mov
loope
scas
mov
inc
bound
jge
scas
clc
dec
js
xor
pop
adc
test
fmuls
call
ret
insb
xlat
ffree
cmp
shlb
movups
pop
mov
cmc
pop
rorb
fnstenv
fsubl
push
div
pop
xchg
cwtl
sub
cmp
clc
fisubrl
fcmovb
pop
xor
fistpll
loopne
sarb
arpl
jge
jge
sub
xor
ja
jae
out
decl
fnstcw
loope
mov
xor
jmp
add
xlat
incb
ljmp
leave
push
ja
hlt
mov
cli
jnp
pop
pop
cmpsb
jle
push
test
icebp
fwait
cs
ja
lds
sbb
loopne
sub
mov
arpl
subb
jge
cltd
lods
jns
cmc
mov
mov
and
xchg
repz
adc
xorl
jo
cltd
idivl
popf
jnp
adc
cmp
lret
and
insl
in
mov
push
aas
jae
outsb
rorl
xchg
mov
in
xchg
cli
cmp
repz
aas
jge
dec
mov
xor
add
or
xorl
out
inc
stc
test
jg
cmpb
cmp
add
in
loopne
adc
xor
gs
fistpl
sarl
sub
add
loope
mov
dec
pop
in
xchg
lds
sub
jae
shll
or
in
inc
add
sub
pop
sub
roll
xor
into
scas
aam
lock
cmp
les
xor
pop
mov
mov
and
inc
lea
jmp
pop
add
add
lock
push
xor
or
dec
mov
push
popf
xchg
ja
enter
shr
dec
test
lahf
inc
jno
mov
insl
loopne
lret
mov
cmp
addr16
stc
sub
outsb
movsl
das
cmp
in
cld
faddl
lahf
idivl
jecxz
icebp
fsubrp
mov
inc
push
hlt
lahf
pop
les
repz
fdivs
stc
sbb
popa
movsl
pop
cs
pop
sbb
mov
xor
mov
jno
sub
test
mov
lret
mov
fcomps
fadd
xchg
push
jo
cs
pop
fidivrs
cli
loope
jle
aaa
fstp
jecxz
push
jle
add
dec
pushl
arpl
xor
xchg
pop
js
iret
and
sbb
xlat
stos
add
sub
mov
scas
xchg
loope
outsb
adc
insb
ret
fwait
popl
inc
pushf
xchg
arpl
icebp
dec
mov
mov
jg
add
xchg
arpl
jge
add
imul
popa
ja
sbb
xchg
adc
pop
and
fildl
fbstp
cs
int
adc
shll
iret
cltd
and
lods
sub
inc
aaa
mov
mov
imul
add
lahf
clc
cli
cmp
sbb
mov
sub
jnp
jle
test
jae
cmp
add
sbb
mov
cmp
or
ret
push
push
sbb
sub
lock
daa
xlat
xor
out
pop
andb
mov
lods
pop
addb
jnp
int3
pop
xchg
inc
inc
movsl
out
rcrb
pop
incb
xor
jno
addr16
push
stc
shrb
jge
shrb
int
add
call
andl
cmp
outsb
shr
femms
pop
add
mov
jb
faddl
jne
pushf
pop
sarb
sbb
test
inc
or
jae
shl
bts
jne
ja
pusha
jnp
imull
stc
fiaddl
mov
ljmp
push
push
arpl
testl
pop
cwtl
push
jg
ret
jbe
adc
lret
leave
out
in
out
xor
ja
push
or
imul
adc
pop
xchg
inc
lret
into
daa
xchg
dec
inc
push
or
test
pop
test
pop
jbe
adc
andl
js
mov
pop
arpl
std
ds
jno
pop
pusha
xchg
or
pop
xor
in
pop
jne
mov
mov
in
gs
mov
aam
adc
in
jge
add
fstpl
popf
pushf
add
push
inc
xchg
add
add
jmp
ret
add
pop
xchg
dec
xchg
xlat
jae
std
cld
cmp
mov
insb
and
mov
fildll
push
in
jb
fwait
aaa
das
xchg
test
cs
add
mov
fidivs
nop
mov
jnp
push
fsubl
xlat
inc
sbb
ljmp
sti
add
in
mov
pop
aas
or
jns
sti
xor
mov
pop
inc
fucomi
ss
xor
or
repz
dec
sub
test
or
ret
cmp
jae
jg
stos
clc
or
mov
icebp
in
inc
dec
pop
test
test
aas
mov
jns
jl
xchg
xor
jge
dec
testl
inc
into
adc
push
ror
pop
inc
sbb
jbe
pop
adc
out
add
dec
lods
inc
out
dec
leave
loop
stc
push
dec
inc
xor
push
jo
stos
push
loope
bnd
bound
push
xchg
adc
mov
and
sub
cmp
bound
and
cwtl
repnz
add
lahf
stc
bound
fucomip
mov
inc
mov
orb
jb
fistpl
pop
inc
icebp
rcr
movsb
repz
icebp
jb
loopne
fstp
cwtl
mov
and
hlt
ja
out
movsb
popf
xchg
cltd
mov
inc
mov
popa
jl
clc
cmp
nop
int
xchg
stos
iret
insl
in
rcl
movsb
mov
xor
dec
hlt
adc
mov
jo
xchg
leave
sbb
dec
fnsave
mov
push
pop
xchg
pop
mov
cli
test
cltd
fisubrl
ret
pop
movsb
dec
mov
jae
mov
or
cmp
aas
mov
dec
es
stos
xor
and
pushf
shr
iret
imul
xchg
loop
sub
pop
push
insl
leave
fstpt
pop
sub
inc
jne
jnp
out
xor
mov
lock
rcrb
nop
test
repnz
test
arpl
pushf
mov
mov
add
xchg
jge
pop
test
push
fimull
or
and
jnp
cmp
adc
repnz
jecxz
inc
push
arpl
imul
shll
mov
leave
sti
sbb
loopne
imul
add
and
mov
push
sub
ret
pop
mov
and
inc
insb
es
xchg
sahf
lds
and
faddl
insl
and
and
stc
les
jecxz
cld
and
sbb
pop
stos
cs
mov
sub
xor
movsl
add
cmp
aas
cmpsb
outsb
or
lods
adc
xlat
stos
sub
sub
pop
cmp
lock
iret
inc
repz
mov
sub
or
or
pop
out
popf
mov
cmp
out
incb
les
icebp
fisubrl
je
jp
fcmovnb
addb
fwait
push
ljmp
aam
lret
xor
iret
fiaddl
jno
sahf
test
cmpsl
jns
lcall
jg
add
and
ljmp
sti
inc
shrb
repz
jmp
jge
or
js
shll
idivb
sub
pop
gs
rorl
cmpsb
sub
sahf
mov
lods
outsl
aaa
jae
out
xchg
cmp
adc
mov
xchg
ljmp
adcl
dec
fstl
out
xchg
cmc
mov
push
cmp
pop
jns
xor
inc
inc
jno
daa
add
xchg
dec
push
add
fcmovnb
jo
sbb
inc
mov
jnp
pusha
aad
stos
fisubs
jmp
adc
jg
add
jle
push
out
jmp
imul
jns
xchg
mov
xor
xchg
jno
fiaddl
push
scas
push
mov
cmp
push
sub
std
stos
jnp
icebp
dec
pop
test
pop
movsb
arpl
subb
xor
les
icebp
cltd
iret
mov
bnd
in
popa
out
leave
add
repnz
ss
fisttps
jns
ret
dec
out
jg
jecxz
adcb
into
jae
rcll
scas
push
icebp
ss
outsl
test
dec
sbb
xchg
or
cmp
jae
daa
daa
mov
sub
movsl
call
fsubrl
inc
rorb
cltd
loop
xor
cmp
push
xor
push
dec
add
call
fidivrl
push
js
ret
jae
cmp
orb
lret
iret
push
jp
rorl
leave
subb
pop
pop
jne
mov
xlat
out
pop
or
push
xlat
dec
mov
lret
cmp
sbb
push
mov
mov
xor
push
cmp
into
jecxz
sub
jge
and
data16
cmpb
inc
ficompl
mov
inc
jecxz
mov
je
and
cli
loopne
in
mov
add
pop
add
aas
and
dec
popa
std
roll
shlb
dec
dec
push
popa
xlat
ds
loop
outsb
aad
in
imul
xchg
cmp
sub
aam
cli
movsl
or
cli
outsb
mov
jbe
add
jnp
fisubs
add
leave
jo
mov
jae
jb
push
jns
insb
and
adc
popl
rcrl
and
jne
jne
push
jae
ja
xchg
add
mov
jnp
xchg
movl
movsl
aam
jle
mov
jae
fldl
vmwrite
adc
jae
in
xchg
stos
xchg
jmp
xchg
xor
mov
ror
sbb
clc
xchg
movsb
popf
jns
clc
jne
jl
ja
pusha
inc
sahf
lahf
mov
xor
pop
stos
arpl
xor
dec
xor
ret
lret
ss
cmp
aas
inc
lcall
frstor
pop
jmp
fmul
mov
dec
add
xchg
push
popl
ret
pop
js
jns
or
sti
ja
push
shrl
cld
jne
or
sti
sbb
arpl
rclb
data16
cmc
jbe
mov
cltd
inc
testl
movsl
xchg
jp
cltd
repnz
std
mov
in
fildl
cmp
sbb
and
jns
dec
pop
cmp
cmpsb
shlb
data16
xor
ja
ljmp
xor
sbbb
outsb
or
xor
shrl
mov
lock
lock
xchg
mov
push
dec
test
push
pop
out
push
mov
imul
sub
popf
mov
mov
mov
and
jbe
sub
aas
mov
ljmp
xchg
and
cmpsb
aam
mov
shrl
add
stc
cmp
jg
arpl
mov
mov
dec
add
xchg
push
loop
jae
jecxz
sti
adc
xchg
pop
lea
cwtl
jl
push
adc
cmp
mov
std
out
pop
pop
rcl
cmp
jae
popa
aam
inc
stos
jne
dec
mov
cmp
fbstp
jae
js
psubusb
mov
rol
and
cli
pop
insl
pop
mov
jnp
sub
push
lea
outsl
sub
cltd
xor
inc
repz
out
xchg
ljmp
addr16
loope
jmp
add
loope
add
push
lcall
test
dec
aam
les
push
testb
push
popf
push
stc
out
mov
hlt
sti
mov
imul
mov
xchg
cmp
out
popfw
rol
stc
inc
popf
iret
enter
jp
out
fstpt
adc
or
pushf
sbb
cmpsl
insb
push
movsl
call
lock
pop
push
dec
shlb
sub
data16
xlat
add
cwtl
outsl
popa
cmpsl
inc
sub
movsb
imul
adc
in
test
out
xchg
mov
cs
movsb
pop
outsb
dec
mov
push
mov
leave
mov
mov
lahf
add
out
stc
aam
and
mov
cltd
jnp
mov
xchg
push
rol
and
popa
incl
les
es
or
adc
out
inc
shlb
addb
aad
xchg
sub
push
mov
sub
stos
jbe
push
popf
test
and
mov
roll
xchg
aam
imul
es
jl
mov
adc
notb
mov
mov
push
xchg
cwtl
orl
pop
mov
pop
and
js,pn
add
jl
inc
aam
sbb
add
add
push
in
add
mov
jecxz
cmp
fisttpll
xchg
xchg
mov
les
mov
out
jecxz
std
xlat
and
push
outsl
or
inc
mov
push
adc
lods
mov
cmpsl
addr16
mov
addr16
push
dec
xchg
incl
arpl
ja
cmp
mov
xchg
arpl
dec
aam
outsb
data16
pop
ljmp
pop
xchg
arpl
ds
mov
pop
pop
sbb
lods
dec
mov
xchg
pusha
jnp
rcrl
shl
or
out
mov
xlat
adc
jns
pusha
jnp
pop
sti
ds
testl
adc
popf
push
div
ficomps
mov
loope
sahf
ficompl
jnp
pop
ljmp
lret
jnp
pop
hlt
stc
cltd
into
jne
xchg
pop
addr16
aaa
cmpb
push
int
or
ja
popa
mov
das
stos
ret
cmp
mov
jae
xchg
dec
test
fcmovne
imul
fsubr
rcl
xor
and
sub
lcall
xchg
jb,pt
fisttps
push
mov
push
fstps
dec
inc
ret
fiaddl
mov
jmp
decl
shll
loop
outsl
jg
aas
loopne
test
jo
dec
mov
lahf
jnp
aaa
mov
nop
sti
cld
xor
mov
sti
dec
das
incl
jmp
mov
fwait
daa
xchg
lahf
call
stos
sti
jge
jmp
stos
aaa
jmp
jmp
jnp
adc
cwtl
ja
sahf
push
jg
aaa
icebp
repz
inc
das
mov
jb
jae
inc
popa
xchg
mov
jae
sti
in
add
in
je
push
mov
aaa
xor
jmp
loopne
ds
jb
call
aaa
and
pop
mov
push
imul
clc
push
fstl
mov
aas
and
and
mov
jmp
dec
and
aam
mov
dec
or
mov
insl
fiaddl
jnp
test
decl
inc
fistpll
inc
fbstp
sub
fdiv
loope
je
jb
rcl
out
fistps
mov
mull
mov
jno
call
addr16
inc
addl
loopne
mov
cmp
cli
std
push
clc
push
jno
popa
cmpsl
add
add
sahf
in
inc
jns
mov
decl
pop
scas
mov
outsl
cltd
mov
and
andb
insl
adc
mov
lcall
aam
jnp
es
jg
imull
out
jle
xchg
sti
je
add
out
pop
add
inc
xor
xchg
jmp
imul
call
mov
stos
popf
jmp
jmp
test
push
hlt
nop
cli
repnz
cmp
fwait
xor
ret
loope
shrl
mov
jb
cmp
mov
ret
jg
sbb
sub
mov
pop
mov
dec
dec
pop
or
test
mov
sti
cmp
in
aad
xchg
and
sbb
shlb
sbb
inc
pop
dec
push
push
mov
add
xor
dec
ret
popf
sbbl
stos
lret
push
jl
adc
ds
pop
adc
pop
adc
aam
add
sbb
add
inc
shll
push
or
fwait
shlb
shr
cmp
add
xchg
pushw
aas
ss
mov
mov
cmp
js
test
fimuls
add
in
add
inc
data16
or
push
mov
nop
das
mov
jl
and
add
fidivs
cmpl
push
addr16
push
pop
adc
push
dec
mov
push
push
sbb
loopne
jnp
inc
push
hlt
adc
mov
dec
std
pop
cmp
cmp
cli
fbstp
out
pop
out
mov
jnp
push
inc
cmp
xchg
popl
and
add
push
stc
inc
cmp
mov
sub
lods
lahf
mov
cmp
lret
mov
mov
fisubrl
lea
cmp
cld
mov
push
cli
js
jbe
push
dec
shll
push
stos
fisubl
mov
cltd
test
lds
lret
xchg
jb
push
cmp
andl
in
dec
adc
fstl
aaa
popf
xor
loopne
mov
test
xchg
bound
je
test
jb
push
fs
repz
and
fbld
aam
push
pop
popa
jae
xchg
mov
adc
fistpl
aam
jae
leave
loop
cld
cmc
lea
das
cli
enter
jl
xchg
arpl
lret
mov
aam
in
push
aas
out
push
dec
in
ret
icebp
fmuls
mov
mov
inc
xor
add
cmp
adc
sbb
or
xlat
push
pop
push
mov
add
jnp
lds
cmpsb
dec
pop
jecxz
lahf
mov
pop
jge
ret
mov
mov
and
sbb
sbb
pop
call
mov
or
jno
push
sub
sahf
bound
jno
sub
out
sub
sub
mov
in
and
xchg
add
cmpsb
or
das
dec
mov
sti
push
int3
push
mov
pop
pop
lea
in
xchg
push
cltd
in
cltd
mov
data16
fmull
pop
inc
mov
out
addb
inc
nop
movsb
pop
push
loope
and
sarb
adc
mov
rcll
fbstp
sbb
mov
cltd
sbb
stos
mov
push
adc
pop
adc
psllw
mov
insl
fmull
mov
mov
jmp
in
ja
add
movl
clc
lret
and
push
in
xchg
pop
mov
sub
adc
cmove
cmpsl
xor
xchg
xor
imul
jecxz
movsb
pop
hlt
out
pop
mov
je
pop
les
fs
cs
add
popl
cmp
aas
or
inc
jbe
in
xchg
xor
dec
xchg
pop
jge
cmp
adc
leave
lods
sbb
inc
roll
pop
jp
inc
inc
mov
adc
lret
mov
mov
fistpll
push
sbbb
jae
sub
mov
mov
mov
xchg
mov
push
sahf
aad
xchg
orl
ds
xchg
rcrl
jno
cltd
dec
jle
ds
jecxz
insb
mov
pop
movsl
push
arpl
cmp
andl
mov
imul
mov
scas
rcrl
pop
aaa
cmp
fwait
pop
mov
les
addb
test
pop
xor
fstpl
jle
add
jmp
into
jle
mov
mov
or
divl
jge
insl
cmp
mov
inc
outsl
call
cs
pop
jmp
out
add
adc
cmpsl
mov
cmp
push
bound
arpl
and
xchg
push
push
or
leave
mov
loop
std
xchg
dec
movsb
mov
cli
outsl
push
daa
shl
rcrl
leave
jno
daa
xchg
enter
test
repnz
xor
sbbb
cmp
sbb
push
outsb
mov
je
jns
lahf
mov
dec
xchg
add
adc
js
push
aaa
and
xor
fcmovnbe
inc
jnp
sbb
test
mov
sbb
out
test
jge
testl
aam
adc
stos
pop
mov
out
jmp
pop
in
pop
inc
xorl
cmp
pop
mov
xorl
stos
les
adc
jnp
scas
rol
popa
and
cmpb
jp
lods
jp
std
int
mul
mov
sbb
je
mov
xlat
ret
stos
xchg
and
add
jno
adc
fdivp
and
jge
lret
adc
cli
lcall
cmp
sti
mov
lock
lahf
jp
mov
pop
sbbb
pop
imul
in
das
es
outsb
outsb
daa
inc
mov
outsb
and
fucomip
sub
xchg
pushl
js
subl
inc
lret
lock
push
pusha
scas
sub
inc
xchg
inc
cltd
pop
out
jns
mov
into
sub
cmc
xor
mov
push
loop
fistl
enter
in
jl
fs
cmp
mov
cmp
outsb
andl
dec
decb
dec
imul
rorb
popf
xor
mov
mov
sar
mov
leave
lods
lret
fwait
orb
cld
and
xchg
pop
stos
push
movsb
mov
iret
sub
add
cmp
and
inc
lcall
mul
push
test
fdiv
jno
in
and
lods
pop
cmp
xchg
mov
xchg
mov
dec
push
dec
sbb
add
rorl
pop
repz
in
fwait
int
lret
repnz
pop
xchg
test
out
and
rcll
into
popa
loope
cmc
push
in
inc
or
ret
add
sti
jp
in
repnz
loope
je
in
out
xchg
lret
pusha
jecxz
inc
clc
add
js
and
jle
add
stc
fistps
push
popf
fs
js
inc
aam
sub
push
mov
xorl
cmp
int3
nop/reserved
push
jns
scas
xchg
aaa
icebp
scas
orb
inc
push
mov
mov
jae
lcall
out
out
push
jae
out
and
xchg
ja
or
add
lahf
ret
adc
mov
fwait
pop
pop
xchg
or
jg
cmp
xchg
in
jmp
mov
jnp
cmp
add
add
test
hlt
push
sub
push
in
mov
adc
or
cltd
xchg
inc
jns
mov
shlb
inc
pop
adc
push
sbb
rcr
mov
test
lahf
in
popf
popl
mov
loopne
call
ja
dec
cld
cmp
xor
aaa
cmp
outsb
push
scas
jbe
inc
fsubrp
cmp
and
jl
jge
jge
or
aas
sarl
jl
jno
cmc
add
push
scas
dec
iret
push
testl
dec
push
lahf
sbb
insl
addb
dec
jle
fildl
mov
ja
out
xor
in
xor
add
insb
xchg
push
stc
jg
sbb
cmp
cltd
jb
arpl
lahf
cs
outsl
jb
mov
sbb
loopne
enter
stos
push
mov
loopne
push
icebp
dec
enter
push
jmp
jge
in
int
das
rcrl
jge
negb
sahf
xchg
add
sub
lcall
movsl
push
push
sbb
stc
fcomps
xchg
stos
xor
mov
mov
aas
mov
loopne
mov
jecxz
push
jge
mov
fcmove
dec
lret
inc
mov
adcl
xor
sub
cli
jle
sahf
ljmp
ret
jp
roll
sbb
xchg
inc
aas
cmp
pop
insb
jp
pop
xchg
cwtl
sbb
outsb
inc
inc
mov
repz
sti
jnp
dec
lods
jg
and
insb
orl
sub
push
push
inc
mov
arpl
adc
mov
lret
clc
jns
repz
inc
rcll
rol
insb
cmp
or
lea
pop
or
lret
xchg
jg
enter
pushf
addb
insb
pop
push
outsb
sub
dec
cmp
lds
inc
cmp
lea
leave
jnp
or
mov
ljmp
cmp
loop
ds
mov
ret
xor
add
sbb
xchg
xchg
inc
inc
xor
cmp
int
cld
cld
and
and
clc
mov
fistps
xor
xor
or
push
lds
dec
adc
inc
mov
hlt
test
mov
pop
cld
test
fwait
mov
mov
hlt
lds
pop
dec
xlat
cld
inc
shl
out
stos
add
push
cli
jecxz
mov
rcll
lods
pop
lods
adc
jnp
lock
imul
sub
aam
ds
mov
arpl
adc
sti
ljmp
scas
jns
add
sbb
cwtl
testl
sub
sbb
sub
push
jae
ret
push
sub
dec
pop
shll
repnz
mov
mov
mov
jno
pop
lret
arpl
push
aaa
addr16
xchg
imul
and
pop
fs
les
js
insl
add
cmp
or
xor
inc
shrl
jnp
xor
jno
lcall
jns
movsl
push
add
leave
jmp
out
lods
sahf
xchg
pop
lds
mov
pop
nop
nop
add
sub
inc
pop
xchg
xchg
cwtl
inc
inc
pushf
dec
jl
jno
push
mov
hlt
xchg
cmp
js
scas
mov
lds
inc
mov
leave
stc
push
scas
stos
aaa
sbb
xor
out
xlat
cmpsb
push
pop
pop
or
ret
fdiv
xorb
ja
mov
sbb
fldt
fistl
lret
sbb
jnp
nop
lea
mov
pop
fldcw
data16
cmp
and
aaa
insl
icebp
push
or
test
out
nop
mov
sbb
cmp
mov
scas
out
or
jo
arpl
clc
cmp
repz
lret
mov
loopne
flds
pop
xor
inc
cli
imul
cmp
fldenv
cmpsl
stos
xchg
sbbl
imul
push
test
jns
xor
push
and
cmp
sbb
and
mov
pusha
ljmp
mov
movl
lret
jbe
mov
adcb
mov
jo
stos
hlt
and
test
xchg
jp
andb
inc
in
sbbl
sbb
std
and
pushf
loopne
cmp
lret
or
jp
dec
add
popf
mov
cmp
pop
xchg
inc
ficomps
pop
xor
pop
xor
dec
mov
add
xor
push
sahf
sub
notl
add
call
xor
rdtsc
repz
push
and
pop
movsl
mov
and
shlb
mov
aad
rcll
subl
loopne
mov
xor
and
imul
jae
add
push
lret
mov
push
fadds
or
in
test
sub
mov
cmp
gs
les
cltd
lds
mov
test
push
jp
push
fidivrl
xchg
negb
outsl
jp
sub
push
pop
mov
int3
scas
mov
sti
sub
add
nop
test
pop
or
in
je
imul
mov
repnz
mov
push
mov
fdivl
aam
adc
push
mov
pop
mov
into
sub
jmp
pop
test
cmpsl
fnstsw
mov
outsl
pushf
xor
stc
test
xlat
adc
xlat
fidivl
in
scas
sbb
call
xchg
xor
imul
ja
push
adc
sti
lds
adc
lods
fstl
add
inc
mov
mov
and
sub
ror
sar
movsl
jb
mov
fdivrl
jge
aas
fscale
jnp
jno
xor
aas
out
and
mov
aas
mov
out
pop
ds
movsb
and
imul
xchg
pop
fimuls
out
jle
pop
jecxz
bound
fs
pop
out
jmp
mov
pop
cltd
pop
sub
cli
mov
sbb
mov
mov
call
pop
decb
adc
or
jecxz
fs
dec
mov
loop
repz
xchg
xchg
dec
ret
jbe
push
dec
movsl
jbe
adc
pop
ret
xor
add
out
jl
or
dec
sbb
mov
lock
pop
push
icebp
cli
cmc
mov
in
xchg
jg
in
mov
call
xchg
sbb
call
inc
mov
or
insb
je
dec
jo
jmp
fildl
pop
mov
mov
sub
hlt
pop
mov
xchg
js
jbe
aad
movsl
ret
push
mov
roll
pop
loopne
mov
imul
push
jb
push
pop
pop
test
in
jo
xor
ja
test
inc
and
adcb
pop
mov
lcall
scas
call
add
bound
cltd
jge
aas
sub
clc
pop
das
pop
roll
sbb
pop
pusha
xor
xchg
jns
arpl
dec
sahf
jno
xchg
mov
jns
std
jns
outsb
mov
popa
sub
push
dec
ja
cmpsb
jo
push
dec
andl
movsb
jg
fwait
push
loopne
jo
adc
fucomi
cmp
cli
or
dec
mov
fisttps
add
leave
xchg
fcomps
sbb
addr16
adc
mov
jg
xlat
in
loope
mov
icebp
aam
lock
xor
xchg
stc
lret
xor
jb
sbb
mov
mov
add
mov
jecxz
fldt
mov
mov
daa
scas
nop
bound
xor
into
xor
ds
jg
addb
out
lds
push
test
aad
mov
add
jo
arpl
adc
dec
xor
mov
sbb
mov
fcom
fstp
cmp
subb
add
inc
mov
adc
aas
sbb
outsl
nop
pop
stc
and
and
inc
cli
inc
lea
cs
add
adc
in
ss
lods
out
mov
imul
in
jp
movsb
mov
pusha
or
popl
xor
pop
jae
jbe
sti
mov
xor
push
xor
push
jnp
mov
out
and
iret
add
loope
dec
addr16
mov
ja
push
or
push
cltd
push
into
cs
cltd
push
xchg
xor
cmp
cltd
or
sub
scas
sbb
lods
jp
test
sub
push
jmp
outsb
adc
push
cmp
ljmp
xorl
loope
rcll
cmpl
xchg
aas
fdivrl
jg
or
mov
pop
sarl
loope
stc
mov
sub
scas
loope
sub
lds
inc
mov
addr16
aam
ja
pop
or
and
jae
xchg
dec
insb
cld
push
repz
push
xchg
mov
push
push
js
repz
pusha
jge
mov
dec
call
in
loope
cmp
andl
cmp
jnp
mov
outsb
sub
icebp
adc
pusha
sbb
adc
aam
push
mov
sbb
sbb
dec
test
mov
lahf
fs
sub
and
pop
ffreep
nop
lahf
jge
jb
push
mov
xchg
inc
xlat
xor
xor
sahf
lret
into
ret
arpl
push
insl
pop
and
jnp
arpl
loope
push
push
push
pop
mov
cmc
sarl
insb
incb
stc
cwtl
mov
jp
rol
inc
cs
push
fists
in
mov
imul
out
and
dec
xor
xchg
clc
or
sahf
insl
pop
dec
decl
nop
jne
repz
fidivl
sub
and
fildll
pop
insl
pusha
mov
ret
popa
xor
xor
rol
push
sbb
out
dec
xor
in
dec
fildl
fisubs
mov
push
mov
loopne
clc
arpl
add
in
movsb
bound
sti
lea
jo
ss
bound
mov
iret
pop
push
jl
scas
stos
or
mov
arpl
jecxz
push
adc
sbb
add
ljmp
mov
pop
cmc
jl
jnp
pushf
jle
incb
add
xorl
lret
xchg
push
xor
and
inc
lea
xchg
xor
iret
icebp
pop
mov
mov
inc
je
mov
jmp
or
out
filds
sahf
pop
in
popa
and
mov
es
andl
push
add
mov
add
cld
and
pop
out
inc
jg,pt
mov
pop
cmp
pop
add
test
outsb
push
dec
inc
jp
stc
push
scas
hlt
popf
xor
jns
pop
pop
and
add
push
pop
movsl
scas
aam
xchg
pop
mov
dec
mov
xlat
xor
mov
repz
lret
lock
idivl
mov
jmp
cltd
push
into
data16
and
imul
data16
jg
jmp
cmp
imul
lock
cmp
shl
push
dec
lds
loope
push
push
push
cmpsb
jle
loopne
add
es
push
fs
sbb
out
mov
mov
fidivrl
movsl
jecxz
xchg
lock
xchg
dec
repz
jnp
ja
cmpsb
xchg
inc
es
xchg
test
cmp
fsubl
lods
out
data16
inc
mov
rcll
xor
movsb
fidivrs
jbe
mov
jbe
inc
cmp
adc
fstpl
and
sub
add
sahf
decb
popa
xchg
pop
mov
cmp
shrb
rolb
insl
pop
adc
jne
jb
dec
cmp
mov
jl
clc
lret
xor
add
subl
pop
cmp
sbb
fdivrl
add
rorl
lods
into
jecxz
xchg
ret
out
daa
xchg
cmp
fbstp
movsb
decl
jb
leave
pop
xor
ret
mov
pop
out
pop
lea
pop
test
jecxz
je
pop
jae
mov
in
mov
mov
aas
inc
sub
stos
repnz
push
sahf
sub
decl
lods
int3
jb
xchg
sbb
leave
and
adc
lcall
stos
and
adc
dec
cmpsw
adc
jns
icebp
mov
push
mov
and
pextrw
mov
jecxz
xor
adc
add
lods
or
xchg
or
or
mov
push
cmp
cmp
ror
not
xchg
mov
cmp
xchg
sbb
jg
jns
in
pop
lea
rol
dec
jmp
lock
xchg
hlt
fidivrl
in
loop
loopne
insb
test
aam
inc
pop
icebp
xchg
add
fstp
fwait
dec
push
xor
or
test
loope
pop
mov
or
hlt
mov
fscale
fisttpll
jmp
rcr
adc
aas
push
fisubs
scas
jno
mov
pop
aas
xchg
push
mov
adc
lock
jle
jecxz
push
or
int
pop
fistpll
movsb
sbb
es
xchg
xlat
cwtl
movsb
dec
sbb
mov
dec
pop
insb
cs
jp
je
xchg
add
pop
mov
xor
pop
add
pop
push
xor
cmp
nop
or
in
cli
mov
notb
stos
add
movl
loope
int3
mov
cmp
mov
pop
ds
clc
add
xchg
rorl
test
idiv
cmp
mov
aam
cmpsb
pop
repz
bound
mov
xor
inc
pop
jae
fwait
stos
aad
mov
push
or
inc
adc
aas
mov
jnp
movsl
mov
add
jbe
mov
dec
mov
mov
pop
pop
fmuls
lahf
dec
sbb
stos
mov
cli
cmpsl
dec
cmp
or
lcall
fwait
jl
js
mov
rcrb
xor
jnp
out
push
pop
in
pusha
arpl
sub
in
out
mov
in
mov
roll
lea
jge
sbb
jae
mov
xlat
jp
out
ja
in
fiadds
movsb
insl
jge
adc
enter
std
test
addr16
xlat
mov
push
ja
mov
bound
pop
dec
jae
mov
push
cwtl
or
xor
data16
bound
adc
push
nop
or
icebp
dec
scas
mov
inc
xchg
mov
xlat
sub
xchg
xchg
push
mov
mov
xlat
xchg
mov
inc
push
mov
call
and
lret
add
jae
lea
sarb
filds
jne
stos
out
lret
pop
push
in
lock
pop
xchg
or
adc
jmp
push
js
pop
loope
inc
xchg
cs
fimull
arpl
leave
add
cld
add
push
aad
xchg
out
cld
cmp
push
stc
jg
dec
mov
pop
int
xor
in
jns
out
jl
dec
pop
mov
jecxz
lods
rcrl
out
sbb
push
inc
mov
out
out
in
les
pop
andl
out
dec
pop
out
roll
push
mov
mov
push
mov
xchg
mov
loope
lods
sarl
pop
lods
xchg
ror
mov
out
mul
test
jne
scas
subl
aas
pop
sbb
js
jo
imul
incb
insb
imul
xor
jae
dec
sarl
arpl
xchg
daa
jmp
jnp
cmp
pop
and
bound
mov
or
js
fwait
jp
dec
jle
push
xlat
test
loop
lods
adc
adc
stos
jnp
push
xor
jecxz,pn
adc
sysexit
adc
jmp
push
add
loope
xchg
jnp
push
loop
es
jns
mov
sub
push
cltd
mov
jns
testl
fmull
or
movsb
xchg
cmpsb
sbb
int3
icebp
pop
pop
mov
cltd
mov
jbe
xchg
inc
popf
lcall
cmpb
movsl
clc
xchg
inc
cmpsb
and
and
movsb
fsubrp
test
jb
add
aas
push
xchg
cs
xchg
jle
frstor
test
mov
out
jmp
popf
mov
in
shlb
adc
cld
add
mov
xchg
test
pop
jg
xchg
adcb
movsb
scas
insb
jno
incb
xchg
or
jg
xchg
cmpsl
cmp
stos
cmp
adc
xor
jns
pop
in
xlat
jp
adc
aas
addr16
mov
daa
mov
or
pusha
sub
loope
test
out
addb
movsb
mov
adc
fnsave
inc
aas
jnp
xchg
cld
sub
mov
add
fs
pop
rcl
inc
adc
cmp
adc
xor
mov
out
push
in
aad
push
sbb
jnp
inc
xchg
mov
outsl
push
fucompp
add
and
lret
inc
cmpsl
jle
scas
xchg
popa
lret
add
cltd
sbb
push
pop
jno
jg
loopne
or
adc
sbb
sub
dec
push
clc
jb
cli
cmp
fisttpll
xchg
cli
in
out
pop
or
inc
jnp
test
sub
bound
cwtl
into
mov
sahf
outsl
pop
xor
mov
mov
push
fs
pop
jmp
sti
and
dec
je
out
test
lcall
mov
aas
jnp
jne
jo
mov
fwait
mov
mov
mov
fistps
orb
loopne
add
mov
stos
add
xlat
jnp
mov
cld
mov
sbb
jp
dec
jg
nop
pop
ret
adc
out
lds
repz
push
jp
jecxz
jg
fiaddl
test
xchg
stos
dec
movsl
lock
push
pop
push
inc
mov
pop
call
xchg
pop
jbe
int
cld
fiadds
test
ss
rcll
int
movsl
sbb
jge
mov
fidivrl
pop
scas
sbb
das
in
mov
xchg
xor
sbb
dec
xchg
push
cmp
inc
outsb
cmp
in
shl
fldenv
inc
push
cwtl
push
jo
fadds
enter
jns
dec
iret
xchg
incb
in
sti
popa
fisubrs
fsubrl
dec
jmp
incl
fdivrl
insl
test
call
aas
xchg
adc
cmp
repnz
in
mov
sahf
gs
xchg
jle
iret
in
lock
aam
mov
push
add
mov
and
mov
aam
mov
popf
jnp
jg
inc
mov
xchg
or
sbb
sahf
imul
push
fndisi(8087
fistpll
jmp
jb
cmc
cmp
fcmovu
cmpsl
cli
filds
cwtl
dec
aas
mov
cli
xlat
pop
lahf
xchg
aam
in
addr16
fbstp
pop
mov
sbb
clc
pop
sbbl
daa
or
jl
fwait
mov
outsb
cmp
out
nop
jge
into
lea
pop
icebp
rcrl
lret
mov
sub
scas
icebp
int
mov
pop
inc
mov
adc
in
fistpl
xchg
test
jecxz
dec
sub
mov
xor
cli
pop
sbb
xchg
mov
mov
jge
test
scas
leave
dec
adc
add
imul
jl
sub
pop
js
sub
push
jmp
mov
movsl
popf
std
xlat
js
sub
mov
add
fsub
sub
scas
cmp
dec
sub
xchg
fstpt
imul
pop
push
push
in
inc
loope
and
outsl
jg
cmp
mov
arpl
mov
adc
scas
lar
cwtl
sbb
and
push
adc
in
jns
iret
or
xchg
add
dec
mov
jp
mov
cmp
or
cltd
mov
adc
or
out
mov
arpl
fsts
loop,pn
xor
fsts
in
adc
popf
jo
sub
icebp
xchg
enter
scas
add
int
orb
repnz
movsl
cmp
inc
pop
add
cli
xlat
cmp
mov
jnp
adc
sub
push
fiaddl
pop
adcl
jae
mov
add
int3
outsl
pop
adc
jae
mov
fstp
js
add
mov
std
ja
push
sti
orl
mov
dec
xchg
adc
arpl
jge
sahf
aam
jns
push
dec
sub
stos
push
and
dec
xchg
loope
add
addr16
jmp
mov
aaa
mov
das
imul
in
into
jp
jno
stc
lds
cmp
loope
shll
sub
pop
hlt
hlt
jns
cld
fsubl
js
stc
pop
outsl
ds
cli
cmp
add
jnp
add
push
dec
add
loopne
sub
sarb
pushf
ret
outsb
mov
jae
add
fcompl
je
cmp
or
bound
movsl
out
pushf
rcrl
movsl
xchg
out
dec
loop
fcoml
aas
sbb
ja
jge
loop
mov
pop
loope,pn
jae
add
sbb
call
pop
jns
cmpsb
pop
sahf
data16
xchg
push
mov
stc
shlb
jg
xchg
popl
cld
cmp
shufps
int
inc
hlt
dec
xchg
sbb
lds
pushw
mov
test
roll
lock
sbb
jg
push
jg
aaa
scas
loope
dec
jg
test
adc
outsb
clc
js,pt
mov
out
push
jb
fadd
repnz
add
pop
gs
cmp
pop
jnp
out
mov
jecxz
mov
mov
ret
testb
lret
mov
ds
dec
insb
loopne
sub
div
lds
stos
fsubs
cmp
jb
xlat
cld
stc
aam
repnz
push
and
dec
test
into
lcall
icebp
mov
push
fs
jp
cs
pop
mov
mov
cmpsb
maxps
jne
push
rcrb
fcomps
out
out
inc
je
mov
xchg
lock
not
mov
lea
or
adc
rorl
jno
cmp
adc
notl
jl
mov
mov
aam
insl
dec
lahf
jb
sti
outsb
flds
test
mov
gs
ficoms
aaa
idivl
xorb
rol
add
add
jge
popa
add
mov
in
sbb
popa
mov
inc
or
call
jns
mov
jg
sti
loopne
test
dec
in
jmp
aad
test
fdivrs
cmp
push
cli
mov
clc
mov
add
mov
call
add
jbe
jle
push
orb
jb
or
xchg
mov
add
jnp
inc
mov
jns
jle
mov
ja
jge
mov
jne
jl
mov
jae
jnp
movsl
and
sti
shll
jp
loop
repz
push
outsl
ds
orl
inc
notl
add
fildll
icebp
adcl
sub
into
xchg
mov
ret
adc
mov
jp
mov
gs
inc
flds
cwtl
pop
inc
sar
dec
gs
xchg
and
mov
xchg
bound
out
dec
popa
int3
dec
xchg
addr16
adc
les
jne
out
fadds
add
ljmp
cmp
mov
outsb
es
shrb
mov
js
rol
jl
sbb
sub
shlb
es
popf
xchg
std
fdivrl
push
push
jb
addr16
cli
cld
cmp
and
jmp
push
cli
cld
xor
adc
test
enter
dec
addr16
aam
and
and
test
jne
cmp
js
pop
fmuls
sub
jb
jnp
pop
out
pop
and
inc
xlat
loope
insb
mov
imul
mov
ds
dec
add
push
shl
repz
sti
push
mov
pop
bnd
fs
push
jp
pop
push
push
outsl
cmp
push
sbb
mov
pop
cmp
or
loop
push
inc
add
lds
cwtl
push
lret
xor
bound
xor
jne
mov
lret
insl
lock
adc
cmpl
fnstenv
add
cli
out
jno
xchg
xchg
out
leave
incl
sti
sub
leave
sbb
mov
add
mov
pop
add
jl
mov
pop
pop
or
or
pop
lods
cmp
je
imul
fidivrl
dec
jp
fsubs
add
cmpsl
cwtl
in
push
push
fyl2xp1
lret
inc
sbb
cwtl
fldt
in
mov
pop
jge
ja
mov
inc
xchg
sarl
repz
push
mul
lahf
jae
push
ror
jns
mov
idivl
mov
cld
inc
adc
out
jmp
jecxz
jg
outsb
jb
inc
add
jnp
mov
imul
xorb
loope
xor
fiadds
in
cmp
jns
pop
ret
cli
jno
add
dec
aad
pop
aaa
cmp
fbstp
add
add
in
adcl
mov
nop
add
lcall
pop
ljmp
enter
addb
sub
pop
mov
frstor
mov
mov
push
adc
jp
sbb
loope
pop
push
in
pop
popa
insl
es
pop
jns
scas
js
mov
mov
loop,pn
cmp
add
fbstp
inc
into
lods
fcmovb
clc
je
ljmp
int3
lds
push
pop
pop
pop
mov
xchg
and
imul
cmp
int3
js
jne
xchg
test
aad
jecxz
test
repz
imul
subl
mov
or
out
loope
es
mov
mov
aas
mov
aam
repz
sarl
das
stos
inc
fadd
lock
cld
add
lcall
inc
stos
pop
cmpl
cli
inc
nop
jns
out
sbb
popa
inc
push
je
loope
mov
or
push
xchg
stc
pop
xor
mov
adc
out
sub
inc
pop
ret
push
lock
sub
pop
scas
repz
fcmove
cmp
dec
into
lret
inc
leave
repnz
fimull
gs
or
xor
cmc
lahf
jmp
dec
mov
inc
roll
jnp
xor
jns
and
lds
nop
xchg
in
faddl
sub
test
pop
test
daa
test
imul
pop
cmpsl
cltd
mov
das
mov
data16
pop
pop
sub
jnp
xor
js
es
mov
jg
xor
add
test
xor
mov
mov
lcall
dec
xchg
or
mov
outsb
lea
cli
out
xchg
mov
jecxz
inc
outsl
pop
xlat
cmp
cmp
or
mov
aam
jns
jo
mov
sti
call
lock
jnp
inc
call
div
mov
cmp
pop
hlt
pushl
filds
outsb
outsb
jae
js
aam
xchg
push
fidivs
hlt
dec
pop
pop
pusha
inc
push
sbb
jnp
mov
sub
push
mov
sub
dec
out
lock
leave
adc
mov
dec
cltd
mov
stos
mov
pop
aas
sahf
pop
mov
lret
in
mov
and
rorl
xchg
mov
mov
add
lds
test
arpl
leave
pop
pop
and
clc
add
pop
mov
cltd
mov
enter
in
add
jl
dec
adcb
pop
jecxz
lods
mov
push
jae
fwait
xor
leave
inc
leave
mov
add
dec
mov
adc
cli
rcll
cmp
mov
xchg
mov
push
mov
popa
mov
out
pop
dec
std
dec
or
outsl
shl
icebp
subl
ret
add
xor
and
cs
cmp
ret
xchg
jge
and
jb
adc
add
rcll
vaddpd
xor
add
leave
loopw
add
jmp
out
cs
push
sbb
sub
gs
iret
adc
xchg
outsl
mov
call
loop
les
cs
cmp
jge
pushf
jb
ss
aad
mov
cli
test
sbb
arpl
push
mov
rcrb
fisttpll
mov
addr16
mov
in
push
cs
mov
mov
nop
sbb
cmp
mov
add
inc
jg
fs
test
ficoml
adc
into
jbe
sarb
loopne
jmp
xor
mov
repz
psraw
sarl
jne
stos
jecxz
jb
pusha
int3
xchg
fcmovnu
fwait
inc
sbb
mov
cmp
les
push
pop
fsubrl
push
stc
xor
lock
or
sub
in
mov
das
sahf
gs
leave
out
dec
jge
daa
sbb
out
popf
int
dec
cld
adc
jge
xchg
out
cmp
xor
call
mov
or
leave
push
int
pop
lock
mov
ja
xchg
std
sar
jne
mov
movsb
cli
test
in
and
add
jnp
rclb
add
xchg
xchg
jo
sub
or
pop
mov
enter
inc
loopne
adc
adc
and
xchg
dec
fdivrl
xlat
jno
jp
movsl
or
in
mov
mov
add
aam
dec
dec
clc
lods
pusha
rcrb
icebp
mov
pop
pop
cmp
fcos
sub
push
and
mov
cld
sbb
jp
and
pop
xchg
xor
sahf
addb
ljmp
and
loopne
insl
int
and
xor
and
test
sbb
xor
add
add
movsl
xchg
or
xor
jp
loopne
sbb
data16
orl
push
rcrl
jne
mov
push
sbb
adc
ljmp
pop
dec
jb
sti
jge
movsb
mov
mov
pop
test
call
or
enter
pop
sbb
icebp
fisttpl
jg
aad
out
push
sbb
movd
mov
pextrw
sbb
or
xchg
js
in
rcl
and
sbb
dec
aad
rcrl
push
lcall
pop
repnz
mov
add
lock
sar
ss
jne
add
mov
cmp
icebp
jge
js
mov
aas
insb
stos
icebp
js
int
mov
test
sbb
inc
cmp
cmc
inc
imul
push
jns
xchg
mov
popa
or
pop
ret
loop
pop
mov
into
fbstp
ret
iret
test
mov
adcl
fisubs
inc
mov
cmpl
lahf
dec
movsb
iret
push
jp
add
leave
js
mov
je
cmp
into
dec
fnsave
pop
pop
roll
sub
aaa
jmp
aas
mov
pushf
dec
and
cmpb
loope
inc
in
jp
lods
rcrb
ret
ja
repz
cmp
fidivrl
or
ds
mov
test
mov
pop
mov
lods
popa
jg
fildll
insl
arpl
cmp
iret
roll
mov
imul
in
push
movsb
js
iret
mov
mov
add
mov
sub
iret
pop
arpl
cmpsb
inc
out
xchg
rclb
icebp
dec
jbe
adc
jge
lcall
addr16
pop
ja
jle
and
add
and
mov
jl
mov
xor
stos
int3
fwait
xchg
mov
bound
aam
stos
insl
loope
dec
icebp
arpl
stos
sbb
loop
or
xchg
test
jg,pt
pop
outsb
pop
in
sbb
push
iret
inc
gs
arpl
push
adc
test
mov
xor
cli
dec
scas
loope
into
test
xor
fcoml
pusha
bound
pop
cmp
mov
add
pushf
aas
pusha
subb
test
lret
mov
add
mov
out
sarb
fistpll
cmpsb
loop
add
lret
jp
cmp
sub
adc
or
pop
popl
addr16
lock
pushf
sub
subb
mov
lret
mul
cltd
nop
inc
pop
cmpsb
in
inc
shll
nop
fsqrt
int3
pushf
in
add
iret
and
lea
ljmp
pop
outsl
add
push
lock
cmp
popa
jns
cli
jle
or
pop
mov
xchg
jo
or
jns,pn
repnz
arpl
dec
loopne
inc
adc
mov
cmp
jge
arpl
cmc
ljmp
push
lock
jnp
scas
lahf
sub
bound
outsl
jg
inc
sahf
sub
pop
decl
dec
cmp
arpl
add
jns
sarb
aas
jge
add
scas
popa
test
mov
stos
xor
test
leave
add
fstps
dec
or
and
xor
jb
mov
rorl
cmpsl
mov
shll
push
mov
inc
fwait
cvtpi2ps
into
fsts
inc
in
out
sub
inc
fs
shlb
lock
and
aad
jecxz
inc
movsl
and
out
xlat
push
xor
jne
lods
aas
repz
and
pop
jb
add
inc
arpl
mov
loop
stc
imul
in
jg
test
push
cmp
jge
xchg
xor
ds
xchg
or
jg
mov
pop
fsubrl
and
orl
inc
xchg
inc
lahf
out
add
jmp
cmp
call
ss
jmp
dec
mov
cmpsb
fcmovu
sbb
enter
mov
inc
ja
test
decl
ds
test
inc
sbb
es
subb
pop
out
sub
sarb
jns
pusha
comiss
mov
xor
lock
xchg
push
pop
orb
rorl
ja
loop
jb
movq
insb
movsl
int
jmp
js
sub
add
movsl
stc
inc
bound
mov
lock
test
leave
pop
jg
fucomp
into
mov
sbbb
idivl
and
int
movsl
xor
xor
icebp
sti
or
in
jo
lea
cmp
add
jne
hlt
addl
inc
jo
cld
jae
add
cmp
in
out
cltd
jmp
les
and
ds
fisubrl
mov
ret
hlt
mov
add
add
add
lock
mov
sub
out
jle
icebp
jmp
jae
jle
subl
sti
jge
push
and
sub
jne
out
imul
adc
mov
adc
outsl
ficompl
in
movsb
popf
sbb
fbstp
jp
pop
adc
aad
pop
fcomip
dec
xchg
push
mov
mov
test
adc
push
lret
jmp
stos
pop
push
xchg
les
insb
xchg
jnp
cwtl
mov
aas
push
js
mov
sahf
inc
std
add
or
int
mov
jl
mov
sub
push
lds
and
cmpsl
pop
cli
xchg
pop
arpl
pop
add
test
mov
fwait
test
lds
imul
lds
push
sti
in
mov
sti
pusha
push
mov
sub
inc
mov
mov
clc
mov
jae
fstps
movsb
lods
jmp
mov
icebp
aad
push
push
mov
aas
inc
stc
inc
cmp
mov
push
xorl
sbb
ja
aad
add
sub
fldenv
loope
add
xchg
mov
das
ds
call
jb
orl
roll
and
lret
std
test
cmp
cmp
addb
xor
and
iret
inc
jp
inc
js
arpl
add
sbb
aam
frstor
fnstcw
popa
ret
cmp
xchg
fwait
sub
xor
ljmp
xor
imul
dec
fdivrp
jp
cld
hlt
pop
sub
repnz
stos
nop
inc
test
xchg
cmp
or
mov
jl
adc
stos
lret
cmpl
pop
fwait
cltd
jns
sar
ret
push
xchg
test
pop
jg
jne
and
jb
jo
aam
xchg
pop
shll
dec
dec
sub
xchg
fistl
sbb
xchg
ss
sbbl
xorb
pop
popa
pop
ds
inc
and
sub
jnp
jno
xor
fdivrs
pop
lret
cmpb
mov
loope
lods
and
xor
dec
nop
inc
inc
mov
mov
fnstsw
xor
mov
imul
in
sub
jb
mov
bound
jae
xchg
mov
insb
jns
cli
mov
out
inc
xchg
mov
pop
dec
outsl
push
dec
pop
cmp
jb
xor
ds
mov
mov
mov
push
je
adc
outsb
call
pop
cmpb
fiadds
fsubrs
gs
vmovupd
scas
in
cmpb
add
addw
add
jo
add
rcll
scas
in
mov
insl
sub
push
mov
or
shll
cmpsb
test
dec
add
xor
lret
dec
sub
mov
arpl
xchg
push
mov
jle
adc
cli
in
ss
ret
jmp
lret
pop
clc
test
and
lock
aam
pushf
shr
xor
inc
clc
mov
push
fiadds
fistpl
bound
stos
xchg
or
adc
cmp
fcomi
aad
ror
and
cltd
stc
popa
into
jnp
in
jl
repz
outsb
mov
jno
hlt
jg
cli
or
add
push
aad
or
and
loope
shlb
inc
int
cmpl
scas
inc
and
mov
lea
cmp
out
aas
jg
xchg
in
adc
mov
mov
xchg
outsl
decb
mov
into
jg
idiv
inc
adc
and
jno
fcmovu
jns
sbb
test
repnz
divl
xchg
inc
mov
rcll
je
fcomps
push
out
sbb
dec
mov
mov
ret
or
arpl
xor
gs
sbb
and
sub
or
mov
xor
xchg
scas
divps
jl
lds
dec
js
pop
les
push
push
jmp
cli
inc
insb
mov
and
cli
sarb
out
and
js
push
adc
sbb
test
inc
jp
add
das
xchg
pop
loope
dec
sub
loopne
test
sbb
push
xor
aas
xchg
xor
adc
mov
insb
in
fnsave
loope
jmp
cmpsl
add
and
xchg
add
xor
std
cld
inc
jl
iret
push
jae
scas
movsl
ja
shll
sbb
mov
pop
das
sub
push
sbb
pop
out
pop
lea
popa
inc
mov
loope
add
bound
pop
insb
sub
pusha
mov
bound
adc
std
in
cmpb
sbb
and
pop
jge
pop
les
es
gs
pop
and
xchg
fdivl
sbb
push
add
add
xlat
aas
test
push
mov
stc
inc
and
imul
scas
adc
pop
mov
dec
cltd
ja
mov
scas
mov
ret
sahf
jne
mov
les
call
orb
xchg
mov
push
test
inc
imul
xchg
inc
sub
pop
addr16
and
in
mov
push
push
lds
test
loope
add
sub
jb
cmpsb
add
cmp
pop
xchg
pop
dec
fnstcw
inc
shrb
repnz
mov
jmp
sbb
adc
loop
lret
cmpsl
sti
xor
sar
push
jp
insl
mov
clc
mov
cmp
test
popf
xorb
xor
and
push
or
mov
mov
movsb
fnstcw
fdivrl
jg
jns
mov
fnstsw
push
repz
cmp
outsl
outsl
or
aas
xlat
push
add
mov
jge
jne
pop
and
mov
popa
jl
dec
scas
xchg
lods
cmp
mov
or
cmp
in
inc
cmpsb
fcom
enter
mov
add
jae
mov
data16
dec
repz
movsl
inc
cmp
cmpb
xchg
jo
jle
dec
std
clc
cmc
ret
aam
loopne
fstl
jmp
bound
pop
fsubr
fisttpl
mov
inc
shll
or
loop
xor
fiadds
arpl
test
lret
packuswb
int
stos
xor
add
jo
or
iret
pop
sbb
lret
or
addr16
and
pushf
testb
in
movsb
mov
jbe
popa
lcall
lods
mov
cli
ja
push
lods
xor
cli
mov
loopne
mov
mov
xlat
pop
and
xor
je
mov
push
daa
andb
jnp
and
shrl
add
gs
mov
jae
setae
jnp
mov
fxch
jmp
sarl
loop
inc
loop
jnp
jae
iret
jnp
push
xchg
adc
aas
xchg
jge
ds
popf
jno
imul
mov
adc
ja
mov
sbb
lret
cmp
push
cli
add
outsb
daa
jns
cmpsb
push
fstl
test
sahf
in
mov
arpl
cli
jne
popa
add
imul
pop
add
xor
movsb
cltd
fildl
outsl
arpl
push
mov
popa
xchg
dec
xchg
sub
cmp
push
addr16
fwait
aaa
push
out
out
enter
and
repz
mov
push
test
mov
push
shll
push
jp
shlb
fmul
das
aas
lea
mov
repz
insb
nop
ja
andl
mov
add
test
inc
jge
leave
subb
sbb
push
pop
cli
jnp
cli
loopne
push
mov
adc
xchg
mov
data16
lahf
je
std
inc
roll
cmp
mov
test
aas
xchg
cli
loope
jg
fcom
jnp
leave
addr16
jg
push
out
push
jge
das
jge
jge
das
addr16
jns
dec
cwtl
fidivs
or
xchg
sbb
lahf
sub
add
dec
push
ds
scas
int
lods
mov
fs
jno
int
pop
sahf
mov
pop
add
xadd
adc
lret
aaa
add
stc
mov
xchg
mov
popf
mov
dec
aam
ds
fildl
pop
decl
ja
int3
lcall
insl
jecxz
repnz
push
fbstp
cmp
clc
popa
iret
xchg
add
loope
mov
ret
mov
aas
inc
hlt
jns
fdivs
push
loope
fwait
aas
pop
jo
les
loop
fcompl
adc
jle
lock
xchg
mov
jns
mov
out
repnz
push
inc
dec
push
ljmp
inc
out
dec
rolb
imul
fiaddl
cmpsb
sbb
insb
or
ljmp
inc
cmp
jecxz
push
push
je
push
mov
insl
mov
push
test
inc
jp
jle
insb
xchg
jo
scas
pop
movsb
pop
pop
mov
in
pop
push
push
jne
mov
jp
jl
hlt
dec
jbe
and
std
divl
add
addb
push
inc
sahf
sbb
jae
pop
cld
sarb
and
inc
das
jge
inc
lahf
dec
cmovp
push
jbe
xchg
add
subb
lahf
ja
mov
jnp,pt
cmp
div
and
idiv
out
jbe
inc
push
es
repz
sbb
das
pop
xor
pop
mov
cmp
subl
leave
jbe
or
pop
and
pop
out
cli
push
mov
mov
aas
cmp
ret
xchg
push
cwtl
dec
hlt
sub
insl
inc
ret
add
inc
loop
and
ja
int3
lea
push
cmp
push
or
outsl
mov
sbb
aad
cmp
pop
xorl
mov
popa
jge
mov
mov
pop
jae
mov
pushf
lcall
mov
test
cmp
iret
addb
push
and
sarb
outsb
maxps
bound
popa
movsl
out
sub
arpl
jg
lods
pop
cld
jbe
mov
or
cltd
hlt
stc
and
inc
mov
das
ja
lock
dec
add
add
mov
lret
sub
arpl
leave
cwtl
mov
inc
dec
out
dec
fldenv
jno
lock
lahf
jle
ret
and
out
mov
mov
shrb
pop
pop
pop
and
and
add
daa
sub
jle
test
pusha
into
imull
add
fistpll
mov
mov
push
xlat
negl
fdivs
xchg
pop
sti
subb
punpckldq
mov
test
pop
hlt
inc
shrl
mov
dec
jno
stos
ljmp
jl
pop
and
ljmp
mov
xchg
in
jno
add
adc
aaa
cmp
mov
add
dec
inc
add
enter
jbe
adc
loopne
jns
push
ds
repz
push
jns
std
repnz
cmp
push
scas
mov
jl
xor
xchg
std
gs
fs
xchg
add
mov
push
das
insb
and
leave
aas
lcall
out
dec
clc
mov
aaa
shrb
fsub
sub
jbe
xor
shlb
xor
pop
arpl
add
add
jno
mov
ficomps
fs
inc
setge
rolb
idivl
call
and
mov
insl
pop
fistpl
repz
and
jnp
decb
imul
in
xor
pop
jge
sub
stos
add
out
shll
fadds
push
jp
aam
shr
in
stos
into
jmp
std
cmpsb
das
mov
or
mov
bswap
dec
cmc
cmp
cs
dec
in
daa
mov
mov
push
hlt
test
inc
xlat
cmove
sti
jecxz
sbb
cmc
xor
cmp
ret
pop
aas
test
jg
rorl
add
punpckhbw
inc
fs
popa
inc
fidivl
mov
repnz
jo
inc
rep
test
adc
mov
lds
popf
jns
inc
cmp
mov
mov
pop
cmp
sbb
clc
xor
in
sbbb
outsl
cmp
mov
push
data16
js
in
jmp
sbb
mov
pop
movsb
push
andnps
push
cmp
ja
sbb
daa
fwait
in
aam
movl
sar
dec
pop
push
push
dec
insb
sbb
icebp
loope
cli
repnz
repz
in
mov
add
sarl
inc
adc
mov
sub
sarb
cld
pop
aad
push
in
lahf
lcall
mov
jae
xor
movsb
enter
lock
fiadds
and
ljmp
dec
adcb
mov
xor
js
or
pop
mov
pop
xchg
inc
inc
xor
sub
and
pusha
ja
sahf
xor
cmpsb
cmp
in
sbb
pushf
xchg
mov
jae
cmpb
imul
ja
insl
jle
or
xor
xor
insb
mov
add
mov
xchg
vpextrw
lds
std
mov
push
lahf
pop
jg
fcomps
xor
push
xor
mov
push
dec
cmpl
xchg
sar
xor
xchg
sub
insb
sub
xchg
inc
or
out
out
leave
mov
xchg
push
test
in
mov
inc
add
mov
push
xor
out
pop
push
popa
fmuls
lock
insl
aad
sub
lret
mov
push
inc
hlt
inc
daa
lds
lahf
inc
fxch
add
jb
aas
xor
push
loopne
add
outsb
or
scas
dec
repz
gs
jnp
jg
mov
int3
inc
aas
jmp
ds
and
outsl
out
adc
inc
test
shlb
mov
jnp
leave
push
lahf
jnp
inc
dec
pop
sbb
in
enter
leave
mov
seta
and
into
add
pop
icebp
push
stos
fidivrs
jl
and
mov
rclb
pusha
fsubs
popa
pop
fldenv
imul
dec
jne
popl
cmp
mov
dec
sbb
fldl
rolb
xchg
fcomps
std
mov
add
inc
rcr
sarb
xchg
pop
jp
push
add
loop
loopne
pop
into
imul
sub
sbb
test
sbb
push
mov
les
pop
and
cmp
jecxz
mov
decl
or
rcr
push
push
pop
rorb
ret
mov
jbe
les
out
push
and
mov
push
sahf
mov
dec
popa
bound
data16
jg
mov
push
dec
lahf
clc
xchg
cmp
mov
push
ret
cmpsl
test
jle
and
stc
std
dec
notl
loopne
fcomip
inc
push
repz
add
outsl
mov
push
jp
divl
xchg
pushl
loop
add
cmp
sbb
ds
shll
cli
test
imul
jne
out
pusha
sub
lret
lock
fisttpll
inc
xchg
xor
adc
lods
daa
aaa
jnp
sub
repnz
jnp
mov
mov
nop
cwtl
mov
leave
stos
fidivs
dec
push
mov
pushw
mov
pop
out
out
es
mov
imul
arpl
xchg
dec
incl
mov
push
add
sbb
call
andb
pop
cltd
movsb
push
out
fnstcw
fdivs
and
arpl
out
add
lret
xchg
aad
insb
loop
sbbl
out
arpl
aaa
pushf
in
scas
sub
mov
mov
dec
push
mov
loopne
sar
add
mov
lods
add
add
out
and
mov
into
push
pop
js
pop
sahf
out
std
pusha
not
lahf
xchg
jecxz
add
lea
or
mov
sbb
pop
mov
popa
mov
in
dec
sub
lods
jb
sub
push
fcmove
icebp
push
cmp
mov
ja
and
gs
sub
jg
fcoms
push
lret
insb
hlt
out
and
xchg
jge
int
dec
arpl
out
ret
lock
insb
mov
dec
int3
mov
fisubs
push
fs
lret
pop
leave
push
into
push
je
cmp
jmp
popf
jbe
fistpl
movsl
iret
sub
cmp
add
or
ja
loop
je
outsl
aas
mov
fs
inc
add
lock
add
mov
pushf
mov
push
jp
mov
and
jle
sbb
cld
adc
test
test
lea
cld
lds
fdivr
pop
shlb
mov
sarb
add
dec
sub
sbb
and
ljmp
inc
loope
and
mov
in
mov
and
jnp
mov
mov
inc
jecxz
xor
mov
xor
in
out
pop
lahf
imul
ret
iret
xchg
xor
cli
into
test
sbb
jne
mov
stc
mov
and
mov
pop
cmpsb
lock
push
psubusb
shrb
popa
testb
pop
movsb
outsl
int
les
fsubrl
int3
fdivr
ss
jp
mov
jno
inc
jp
popa
imul
mov
shll
mov
les
fsubrl
sbb
ds
inc
mov
xor
dec
mov
fimuls
cmc
ret
sub
cmp
fstps
sub
shlb
aaa
mov
aad
mov
gs
and
inc
cmp
ffreep
nop
pop
and
jmp
out
pop
cli
add
ljmp
xchg
scas
mov
mov
repz
lcall
fwait
add
fcmovu
inc
mov
in
std
push
add
sti
testl
das
aam
icebp
out
addr16
mov
add
leave
adc
pop
popf
jae
jg
loope
pop
fistpl
jnp
and
popa
push
es
mov
sub
add
xchg
test
mov
rcr
add
out
stos
in
pop
enter
lock
adc
dec
shrb
xor
fcoms
xorb
inc
jo
stos
mov
pop
in
shlb
test
mulb
jae
mov
stc
adc
lods
out
addr16
cmp
rcrl
jecxz
in
mov
out
sbb
xchg
fisttps
mov
mov
fisubrl
mov
fdivs
cmp
dec
xchg
xchg
xchg
ljmp
add
sar
lahf
cltd
lds
cltd
mov
repz
cmp
loope
fcmovbe
or
push
add
stc
in
sbb
jmp
inc
sarb
jl
jno
insl
inc
inc
aas
inc
cli
outsl
sbb
movsb
out
lea
cli
iret
test
js
test
mov
les
xchg
cltd
in
sub
mov
fstpt
jmp
inc
popl
in
outsb
xor
test
das
push
loop
push
aas
ljmp
jp
mov
enter
mov
ljmp
pop
insl
enter
jne
hlt
insl
push
cli
pop
in
cwtl
pop
mov
push
lret
cmp
inc
mov
jnp
pop
aas
and
iret
jge
dec
jp
leave
cmc
ficoml
pop
push
test
aam
jns
mov
cli
bound
cmpb
lods
cmp
and
cmpsl
mov
dec
pop
movsb
sbb
add
rorb
test
jnp
bound
cmp
xor
cmp
decl
mov
push
shl
push
jne
xor
xor
imul
push
in
ljmp
lods
cld
paddq
jge
push
add
cmp
stos
or
jg
fwait
adc
test
insb
test
push
cltd
adc
ss
mov
jp
ret
xor
xchg
mov
dec
cmc
leave
shrb
xor
mov
jno
mov
stc
icebp
loop
shlb
jne
inc
jne
leave
sub
push
rcl
jae
xorl
cli
in
mov
daa
pop
mov
push
jne
pop
mov
popf
pop
add
jp
loope
lret
dec
xchg
rclb
inc
jge
push
mov
add
pop
cs
push
out
jb
sti
sbb
pop
push
outsl
push
xchg
push
jnp
jp
mov
lret
xchg
mov
pushf
pop
jae
jge
leave
push
jge
jno
jbe
cmp
jno
popf
pop
xchg
mov
inc
push
push
jae
sahf
imul
sarl
inc
lret
insb
pop
mov
scas
adc
in
hlt
xchg
shrl
jl
and
imul
leave
insl
mov
and
test
dec
fdivrs
cmp
xor
mov
fsubs
mov
push
cltd
lea
mov
jp
mov
dec
out
shll
push
pop
xor
jno,pt
lock
jmp
fstpt
sti
sahf
test
sbb
dec
pop
push
fldenv
jae
sub
test
flds
leave
jge
out
xchg
popa
push
lock
outsl
jmp
sub
jecxz
pop
jg
fwait
lea
push
inc
movsl
xor
hlt
pop
out
jno
stos
push
mov
bound
inc
pop
sbb
fwait
scas
mov
jmp
cmp
dec
fimull
jmp
push
daa
add
push
fwait
sbb
les
pop
cld
lock
xor
jecxz
or
adc
cli
ljmp
adc
icebp
jns
fcompl
mov
and
mov
pop
stos
insb
es
jns
pop
fsubrl
sub
and
push
lea
or
dec
insl
or
sbb
icebp
jge
cmp
lods
jp
movsl
lock
mov
cmp
dec
fstpt
insl
mov
sbb
cli
dec
jge
xchg
shl
jecxz
mov
testl
scas
sub
and
pushf
jge
pop
xor
sbb
or
test
test
fcmovu
fcomps
pop
loope
jecxz
addb
icebp
in
negl
sub
imul
cmp
out
jns
repz
sbb
fwait
xor
jp
dec
sub
aaa
inc
es
xchg
aas
inc
mov
dec
lret
js
mov
mov
xchg
push
mov
in
loop
or
jg
cmp
stc
inc
dec
cmc
pop
mov
push
loop
fstpt
fsts
int
mov
fmuls
test
lea
jmp
clc
aas
aad
fsubr
jo
stos
lock
add
or
fnstenv
dec
mov
mov
sti
fwait
mov
insl
insb
sub
outsb
mov
cltd
in
inc
jae
bound
shll
mov
dec
loope
out
jecxz
cmpsb
mov
inc
pop
mov
cltd
lcall
jl
test
cld
aas
jg
or
lea
mov
imul
rolb
pop
cmpsb
mov
into
cli
idivb
pop
sub
out
sub
jg
mov
and
xchg
xlat
inc
jle
rcll
out
out
test
aam
mov
addr16
stos
enter
xchg
pop
leave
cld
and
arpl
or
out
jnp
sarl
into
jns
loop
cmpsb
push
add
in
out
and
jle
inc
repnz
inc
or
hlt
leave
ljmp
lock
jno
sbb
jno
inc
mov
pop
lods
cmp
sarl
cli
adc
push
xchg
dec
jbe
cli
jg
arpl
jns
mov
add
inc
sbb
fnstsw
pop
cmp
jge
std
or
stos
shrb
out
lea
loope
and
xor
repnz
mov
repz
stc
popf
cmc
sub
mov
sbb
xchg
or
aam
mov
lcall
icebp
mov
adc
pop
leave
in
cmp
jp
sbb
cmp
push
je
xor
xchg
mov
scas
in
xchg
or
gs
out
inc
xor
pop
jbe
sub
add
lock
mov
mov
mov
pop
xchg
mov
pop
rorl
sub
fld
call
flds
add
sarl
cwtl
pop
enter
rorb
test
cmp
mov
pop
lret
lods
mov
pop
mov
push
sbb
lods
mov
or
leave
inc
add
mov
sub
dec
cs
cwtl
or
in
add
pop
roll
mov
out
ja
mov
fmulp
xor
jecxz
inc
js,pt
mov
push
lahf
dec
xchg
outsb
sub
jg
cmp
adc
add
lds
pop
pop
in
sub
mov
and
ds
or
xor
jnp
sti
push
mov
jb
dec
ret
aas
mov
sbb
adc
mov
cmp
cmpsl
mov
dec
mov
cmpsb
fisubrs
mov
inc
lahf
mov
fcomps
xchg
add
je
popa
fnsave
pop
pop
test
sti
sub
sbb
fildl
lods
aad
mov
lret
shll
add
shll
addl
out
cmp
mov
dec
shrl
pop
lea
cmp
lods
lcall
sub
xchg
push
mov
imul
into
in
sbb
or
jns
xchg
pop
fisubrs
daa
mov
pop
adc
and
std
leave
bound
xchg
or
push
in
add
movsb
jb
jnp
mov
xor
or
lret
jo
fstpt
jno
pop
outsl
subb
aam
pop
fucomp
inc
mov
fisubrl
fadds
cld
lds
or
mov
inc
mov
or
inc
add
fldt
lcall
sub
push
mov
dec
lea
mov
jge
repz
iret
cmp
pop
jno
mul
std
or
sbb
idivb
fdivp
mov
lods
jbe
jno
and
aaa
add
xchg
dec
fildll
pop
dec
mov
mov
sbb
aaa
jno
imul
int3
lahf
sbb
adc
mov
outsl
pop
hlt
mov
inc
jecxz
pcmpgtd
div
in
and
inc
mov
leave
mov
jp
scas
out
dec
repz
pop
or
jg
and
lret
leave
iret
jae
popf
ret
shld
iret
cmc
lds
add
shl
outsl
mov
mov
push
or
icebp
sbb
mov
add
cmp
cmpsb
loop
lds
cli
mov
scas
mov
mov
mov
pop
push
clc
out
ja
popf
cs
in
into
ja
push
mov
pop
subl
int3
lcall
or
cmp
jmp
dec
cli
aas
pop
imul
or
sarb
sbb
aam
xchg
pop
adc
or
push
jb
sbb
incb
mov
jb
scas
leave
jp
ja
xor
xchg
into
outsb
add
pusha
jnp
cwtl
cmpsb
jnp
orl
sub
pop
xchg
sar
jg
insb
clc
aad
xchg
imul
or
bound
xchg
push
mov
dec
dec
in
sti
mov
push
mov
fimull
mov
pop
lret
pop
jns
jns
lods
fildll
mov
shlb
outsb
dec
push
push
aaa
in
dec
outsb
add
ljmp
jl
fsubl
xchg
cmp
je
xchg
push
dec
mov
in
cwtl
pop
push
or
pop
pop
insl
pop
out
jae
out
jne
leave
cmp
rorl
test
xchg
push
out
decl
push
mov
xchg
sahf
inc
pop
into
ret
push
mov
sub
std
pop
ror
jle
push
sahf
cmp
fisubl
fisttpll
xlat
fnsave
fidivrs
leave
out
imul
shrb
insb
mov
int3
bound
sbb
enter
push
sub
in
popa
add
push
scas
mov
movsl
mov
or
iret
jns
test
test
shlb
aaa
jns
out
cs
xchg
ds
bound
push
fistpll
adc
push
movsl
dec
test
cltd
rcrb
xchg
inc
mov
es
xchg
test
aam
cmp
mov
mov
arpl
fdivrl
sbb
jge
pop
aaa
call
cmp
xchg
sbb
mov
shrb
mov
push
jge
cmp
jne
add
cmp
aas
jle
mov
inc
and
in
push
nop
cltd
test
sub
clc
xorb
jecxz
inc
mov
and
push
pop
xchg
scas
aam
add
out
sub
in
dec
fidivrl
lock
jo
push
movsb
gs
cwtl
test
out
push
in
mov
je
inc
push
into
mov
loope
enter
scas
pop
xor
daa
leave
lret
pop
ret
cmc
xchg
das
inc
pop
out
addl
aam
in
jmp
mov
jg
dec
rcl
jg
push
outsl
add
test
fidivrl
pop
imul
sbb
cmp
and
sbb
cmp
jmp
or
add
inc
push
push
xor
xor
in
out
filds
jnp
xchg
sti
and
mov
mov
mov
inc
push
push
subl
xor
dec
aaa
cmp
jl
jmp
sub
orl
add
lcall
jne
icebp
xor
ret
fmuls
aas
cmpsb
stos
clc
jmp
out
test
pop
adc
push
xchg
cmp
add
xor
mov
out
inc
cmp
jge
cmpb
int3
cmp
adc
push
add
fnsetpm(287
jle
xchg
mov
sub
dec
js
mov
and
cmpb
jnp
and
jg
rorb
jns
cmpsl
inc
jge
cmpsb
negb
out
jnp
mov
jne
xor
and
inc
mov
iret
cwtl
es
xlat
sarl
pop
dec
xchg
mov
or
and
outsl
cmc
mov
mov
pop
leave
cmp
mov
and
dec
mov
test
ds
mov
cs
bnd
mov
jno
xor
jg
xchg
outsl
leave
pop
aam
loope
lret
xchg
sub
aam
xchg
incb
xchg
test
lret
push
push
mov
sub
mov
out
lds
repz
jle
ljmp
aas
aam
sbb
add
les
out
mov
cmp
int3
push
imul
inc
inc
pop
aas
add
test
mov
imul
cld
mov
xchg
push
mov
xor
sbb
xchg
insb
sub
xor
in
ret
ffree
push
mov
jle
test
cli
or
insl
xchg
mov
pop
sub
into
clc
ds
xchg
lcall
and
jb
data16
mov
or
shlb
sbbb
pusha
inc
imul
lcall
pop
mov
fimuls
lods
lods
pop
clc
push
cmp
fbstp
sbb
add
pop
or
pop
pop
sbb
shrl
mov
ficoms
icebp
shl
popa
xchg
rorl
xchg
mov
test
dec
popa
xor
fdivrs
bound
stc
mov
mov
cmp
adc
push
arpl
xchg
sbb
jmp
aas
mov
pop
int
dec
ret
dec
push
dec
add
pop
test
or
popf
jno
push
sub
rep
cmpsb
and
movsb
repz
jbe
mov
and
inc
dec
aam
or
jne
inc
and
imul
test
fsubs
rcr
movsb
pushf
rcr
movsb
fwait
pop
pop
iret
mov
push
outsb
test
neg
mov
xchg
pop
jg
jb
aas
or
outsl
pop
in
mov
ret
repz
cmc
aad
int
push
faddl
clc
cmp
sahf
push
aam
es
popa
pop
test
push
mov
xchg
or
fnstsw
cmp
mov
sub
in
jmp
js
daa
nop
xor
fidivrl
jns
mov
jns
cmpl
jg
add
shlb
sbb
xchg
push
clc
lret
add
jns
adc
outsl
pop
inc
popf
xchg
xchg
mov
out
sbb
mov
js
cmp
out
add
mov
roll
cmp
mov
mov
and
adc
bound
add
cmp
mov
cmp
lahf
pop
jb
icebp
mov
test
xor
pop
xchg
add
outsl
xchg
xlat
ret
test
popa
jecxz
or
shlb
xchg
xchg
aas
sbb
push
lock
imul
pop
mov
jb
mov
mov
mov
jl
add
add
test
jae
in
ljmp
cld
outsb
cmp
cmp
inc
mov
jo
mov
or
lods
stos
cli
ficomps
sbb
pop
dec
inc
cmp
out
push
and
mov
jns
out
mov
pop
xchg
icebp
xchg
jge
mov
mov
xchg
pop
cmp
sub
cmp
stos
fwait
cmp
mov
shlb
inc
jne
fsubrs
xchg
repz
inc
xor
loope
inc
xchg
add
fstps
ljmp
jne
fimull
cmp
imul
mov
les
or
jns
adcb
and
aas
add
dec
lcall
pop
push
xor
inc
pop
sbb
jmp
xchg
adc
pusha
dec
xor
rol
and
and
fcmovnb
gs
orb
add
mov
jns
ret
and
sbb
push
mov
push
and
test
rcll
fbstp
stc
arpl
jae
loop
jae
popa
insb
in
sbb
mov
or
hlt
mov
push
xor
fwait
iret
pop
movsl
sub
dec
scas
nop
adc
mov
cltd
xchg
xor
jge
ja
xor
dec
dec
mov
lahf
fidivl
pop
lods
lock
cltd
mov
pop
movsl
vmread
mov
jns
cmp
pusha
jge
or
inc
pop
aas
xchg
sbb
cmp
xchg
shrl
xchg
in
js
loope
jg
rcrb
test
inc
add
pusha
out
fs
push
rol
and
or
xor
xchg
gs
or
scas
lock
dec
add
out
adc
sub
inc
shll
cmp
xchg
ret
cmp
mov
enter
or
ffreep
add
inc
orb
inc
add
iret
cltd
cs
push
adc
or
jne
lcall
call
ja
aas
inc
jp
jo
incl
mov
jae
xor
pop
repz
ljmp
push
xchg
push
idivl
xor
aaa
call
out
out
sti
popa
scas
test
jno
fldl
ja,pn
cmp
in
pop
ja
adcb
jg
aaa
fsubr
int
jge
out
fldl
pop
jmp
xchg
mov
sbb
subb
jl
jmp
mov
les
mov
outsl
xchg
dec
imul
mov
cmpsb
mov
fmuls
popa
mov
mov
push
jnp
repnz
and
insb
mov
test
arpl
sti
lock
adc
jmp
cmp
idiv
das
xlat
mov
xchg
jnp
jno
popf
fbstp
ds
or
orb
lods
jmp
outsl
mov
mov
mov
stos
sub
outsl
in
inc
jmp
jb
mov
outsl
shrb
lret
jg
outsl
arpl
fidivrs
fdecstp
inc
add
sti
insl
ljmp
inc
roll
mov
inc
mov
mov
push
movsb
aas
fstl
jmp
arpl
scas
loope
std
sub
xchg
cmp
shll
jp
testl
jae
jb
mov
xor
stc
jb
fcmovb
popa
sbbb
lcall
push
add
or
repnz
dec
jle
in
fs
push
sti
xor
rorb
and
stc
fstl
sarl
bound
lret
dec
mov
shlb
call
sti
mov
pop
gs
jmp
cmpsl
stos
inc
dec
movsl
out
cltd
ja,pn
jle
outsl
pushf
xlat
sbbl
jmp
mull
jno
lahf
cmpl
ljmp
std
xlat
ljmp
pop
decl
cmp
mov
jle
xchg
test
repnz
mov
insb
das
mov
cmp
push
fcompp
push
mov
mov
xor
repz
js
xchg
add
shll
jge
andb
jecxz
push
sarl
loop
outsb
inc
xchg
push
out
imull
outsb
cltd
fisttps
jg
cmp
pop
mov
fwait
rol
outsl
pusha
ljmp
push
pop
sti
pop
inc
data16
mov
jns
lods
out
mov
enter
mov
jmp
cmp
scas
inc
mov
mov
mov
xchg
inc
sub
sti
sbb
jb
and
adc
dec
push
ret
lcall
dec
arpl
movb
sar
mov
in
pusha
loop
repz
subl
rcll
addr16
sub
imull
sbb
daa
mov
pop
push
jecxz
insb
sbb
lret
decl
mov
mov
dec
pop
notb
and
cmp
mov
jae
clc
scas
lret
ror
or
sbbb
sti
mov
arpl
push
push
jmp
cmp
jae
ret
push
cli
insl
fwait
rorl
or
or
push
cmpsb
cmpsl
fs
and
xor
mov
out
jae
sbb
and
push
push
out
mov
jge
ret
mov
call
jo
jmp
xchg
popf
repz
jns
mov
cmp
inc
scas
loope,pt
jg
jg
rorl
repz
jae
test
jmp
pop
ja
fnstsw
fdiv
adc
jns
stos
imul
and
push
mov
jmp
fs
aad
test
jae
sub
cmc
mov
dec
cmc
scas
cmp
lds
or
sarb
in
decl
fwait
stc
outsl
cmp
out
ljmp
add
push
outsb
jmp
imul
push
cwtl
and
jb
pop
lock
daa
push
sti
cmpsl
dec
aaa
sti
sar
jp
jo
pop
shlb
mov
ljmp
andb
lds
xlat
test
dec
test
int3
mov
pop
test
pop
adcb
std
xchg
cmc
mov
cmp
jne
xchg
aam
testl
lock
orb
setns
jmp
aaa
adc
mov
xchg
sub
adc
mov
lock
ja
arpl
pop
push
jns
jnp
aam
pop
push
cmp
pop
insl
jg
mov
sbb
std
iret
jb
test
sahf
fnsave
sahf
popa
popa
xor
je
popa
jge
dec
jp
in
fadd
add
pop
mov
enter
cs
mov
mov
pop
pop
callw
mov
jbe
loop
or
movlps
adc
add
dec
fnstcw
xchg
test
pop
mov
lock
cmp
gs
push
addb
pop
jg
cmpsl
arpl
outsl
lahf
cli
bound
mov
and
adc
sub
into
pop
push
bound
out
or
es
sti
xor
jmp
loop,pt
fistpl
decb
mov
jnp
mov
aad
mov
adcl
fiaddl
mov
mov
sbb
pop
sar
xchg
lods
inc
mov
push
imul
adc
lea
mov
pop
cli
sbb
dec
mov
mov
stc
vmovhpd
lret
outsb
lea
mov
cmp
decl
lret
fisubrl
xchg
xor
ja
adc
dec
push
jbe
inc
mov
inc
out
aaa
jbe
or
lret
inc
push
dec
aas
and
imul
rsm
jne
out
push
mov
jno
inc
je
test
shlb
in
or
mov
fsub
and
xor
xchg
sub
ret
and
into
jge
fcmovu
popa
rcrb
mov
and
pushf
xchg
cmp
jmp
sub
dec
cmpsl
cmp
out
jae
aas
ljmp
lea
mov
movsl
pop
jmp
add
arpl
inc
pushf
scas
loop
pop
mov
mov
mov
sbb
out
xorb
fcoml
jne
cs
pop
test
cltd
or
mov
xor
arpl
sub
ja
idivb
lcall
jnp
add
fnsave
xor
int
cmp
and
jge
xchg
inc
mov
in
js
ret
add
fnstsw
in
xor
jne
xchg
xor
mov
ret
sbb
jg
fcmove
jp
out
je
repnz
mov
pop
add
sub
xchg
pop
loope
mov
in
push
sti
clc
mov
mov
mov
leave
popa
xlat
push
jmp
push
lahf
push
repnz
arpl
aaa
jbe
mov
fwait
inc
lcall
sbbl
ret
pop
aam
sbb
sbbl
jge
sub
mov
mov
xchg
cs
inc
shl
jle
pop
fadd
push
dec
adc
mov
je
inc
dec
pushf
sbb
iret
sahf
sbb
jge
imul
add
lret
add
pop
sbb
jne
addb
mov
movsb
movsl
movsb
xchg
push
out
push
sub
ja
add
shlb
int
bound
je
push
mov
fcomp
lea
mov
aaa
inc
add
into
add
roll
pop
push
test
aaa
cmp
fiaddl
les
add
addb
mov
push
push
leave
xchg
sub
pop
into
fstl
mov
clc
sbb
lcall
ja
add
jg
mov
lahf
pop
xchg
xor
daa
pop
sub
cmc
test
fcomip
bound
mov
jp
xchg
nop
jmp
dec
push
adc
mov
in
mov
inc
and
test
leave
pushl
je
dec
insl
sub
jmp
fistl
repz
cltd
idivl
xor
popf
dec
in
aas
icebp
cli
dec
cmp
push
adc
jo
xlat
sub
in
fsubr
mov
popl
notb
std
fisttpl
dec
and
lahf
outsl
push
fsubrl
fs
or
insl
lea
jo
and
xchg
pop
adc
sarl
pusha
fwait
repz
les
call
add
add
hlt
int3
lahf
mov
dec
aaa
popa
push
andb
adc
pop
mov
xchg
repz
filds
push
hlt
sti
pusha
dec
or
out
jmp
shl
mov
into
lret
adc
dec
xchg
enter
xchg
out
bound
xchg
cli
xchg
mov
jp
cltd
xchg
pop
loopne
movb
popf
jno
lods
pop
jns
pop
lahf
fnstenv
sub
stos
rcll
mov
or
inc
jmp
inc
data16
int3
push
push
je
xchg
bound
out
jmp
es
lock
ljmp
fmuls
test
sub
pop
cmp
loopne
sti
mul
arpl
cmp
jns
leave
aam
imul
aas
cwtl
vmovsd
les
mov
rorb
dec
pop
call
inc
ds
add
addr16
mov
jge
aaa
push
or
fstpt
jbe
dec
fwait
push
movsb
aaa
pusha
jmp
cmpsb
mov
sbb
push
jmp
ss
int3
mov
jbe
jecxz
lret
out
pop
add
clc
sbb
int3
adc
shlb
lsl
sbb
loop
addb
adc
aad
loope
test
sub
std
lcall
loopne
mov
sbb
aas
dec
or
dec
xorl
pop
dec
cmp
repnz
rcrb
sub
pop
mov
leave
and
dec
out
mov
pop
push
xor
nop
fwait
push
test
mov
call
jg
inc
cwtl
das
push
fisubs
lock
adc
sahf
leave
pop
mov
rcrl
inc
enter
sbb
outsb
xchg
xlat
fcmovne
iret
push
xorl
icebp
lea
fdivs
and
int
push
insl
or
pop
test
cltd
orb
mov
sbb
cs
mov
cmp
ljmp
add
xchg
cmovb
cmp
jmp
imul
xchg
xchg
inc
icebp
inc
mov
negl
test
jbe
and
sub
lea
insl
or
hlt
xor
popf
idivl
jns
hlt
aas
pop
iret
stc
mov
xchg
cli
mov
rcrb
xor
icebp
xlat
sti
push
mov
cli
jp
repz
inc
jno
and
xchg
frndint
mov
push
mov
out
jae
clc
cmp
and
scas
icebp
add
outsl
push
sahf
xor
cli
negl
mov
dec
fidivrs
mov
sbb
xchg
adc
into
lcall
scas
aam
push
mov
ret
mov
inc
jnp
in
fimuls
aas
xor
lahf
or
out
fs
add
bound
mov
xlat
lds
fimull
push
shll
dec
xchg
mov
sub
xor
mov
push
sbb
notb
dec
shr
lahf
movsb
sub
jg
jns
mov
je
ror
sub
popa
or
inc
cmp
addb
jecxz
sbb
in
ret
repz
pop
xor
inc
ret
push
clc
cmp
icebp
or
push
pop
addr16
lret
fstpt
cmc
imul
into
push
xor
cmp
sbb
jne
push
lcall
pop
ljmp
mov
dec
shl
xchg
mov
push
cmp
inc
pop
sti
in
cmp
ffreep
je
std
scas
xor
scas
sub
pop
cmp
jns
subl
out
les
outsb
xchg
fbld
adc
push
and
js
inc
pop
fadd
inc
mov
jge
repz
add
cmp
add
dec
xor
push
addr16
mov
cmp
movsb
sbb
mov
nop
iret
aam
xor
popf
push
sbb
mov
cmpsb
adc
mov
loope
pop
aam
xchg
push
mov
xlat
stc
push
jge
push
cmp
add
pop
push
clc
jns
loopne
inc
inc
orb
loope
or
add
fsubr
insl
iret
popf
pop
int
int3
mov
mov
clc
and
pushf
aaa
negb
xor
adc
sbb
data16
sbb
mov
sbb
mov
push
mov
mov
ds
scas
push
pop
dec
mov
inc
clc
xor
aas
nop
xlat
inc
cmp
pminub
jle
in
jo
out
arpl
push
fistpl
jp
or
lods
lcall
push
jl
sbb
pop
mov
jp
xchg
cmp
ja
mov
out
inc
add
insl
jle
pop
pop
fmul
xor
dec
aaa
push
cmp
add
pop
cltd
lods
sbb
cmp
shlb
aas
mull
cmpsb
pop
jge
add
imul
lods
dec
adc
add
int
lret
jg
push
test
add
ja
repnz
cli
sbb
fistps
cwtl
out
jle
jae
pushf
or
sbb
out
int
xor
leave
aad
add
xchg
in
sbb
inc
lock
imul
mov
inc
je
mov
cmc
lock
mov
dec
jecxz
test
adc
jnp
cwtl
out
ljmp
mov
repz
inc
mov
pusha
and
out
mov
jno
in
xchg
imul
mov
jge
insl
jae
mov
outsb
xorb
into
jmp
in
fsubrs
jge
leave
std
and
and
fists
aam
iret
mov
pop
sbb
push
inc
xlat
pop
lds
idivl
into
xor
ja
mov
dec
aad
mov
je
fstpt
mov
cmp
popa
jmp
pop
shll
aas
xchg
push
cmp
daa
rcr
or
mov
add
mov
loope
cmp
push
or
or
cmp
decb
mov
mov
daa
ret
fistpll
orl
add
daa
cwtl
or
cmp
jp
iret
ret
fwait
xchg
jo
mov
pop
mov
and
cs
jnp
dec
nop
test
sub
mov
dec
out
mov
and
mov
jge
mov
int3
or
pop
and
mov
xchg
xlat
in
popa
cmp
fldt
test
es
sub
inc
and
stc
cmpsl
divl
fsincos
and
xor
sahf
in
adc
mov
xchg
add
xor
jns
outsl
imul
xchg
add
int
fsubrs
int
jb
fsubl
mov
fildll
icebp
test
jbe
ret
push
or
cmp
and
sbb
xchg
fidivrs
sub
nop
insl
mov
push
add
ja
rolb
jnp
into
icebp
dec
loope
jnp
js
add
fiadds
sub
pop
dec
sbb
aad
mov
and
mov
sub
sub
iret
xchg
clc
shrb
clc
mov
pop
iret
icebp
aaa
add
mov
popa
lods
test
cld
and
jl
jmp
mov
loopne
jns
cwtl
leave
iret
jmp
pop
or
stc
pop
mov
pop
subl
std
fwait
imul
and
jg
lahf
cmp
push
loopne
fdivrl
mov
sti
sbb
insl
push
sub
into
cmpb
jae
push
cli
in
cli
mov
mov
sub
xchg
jnp
and
add
adcb
lahf
aaa
insl
fiadds
mov
cli
popf
and
or
add
repnz
lahf
leave
cld
xchg
mov
addr16
popa
and
fildl
xor
fsubr
cmp
push
inc
insb
dec
add
popa
call
jbe
test
popa
jns
jg
pop
mov
xchg
ret
push
std
inc
jp
test
jnp
int
push
cmp
sub
fdivl
repnz
lds
out
inc
leave
into
addb
into
cmpsb
adc
repnz
add
jg
jb
mov
jnp
cmpsl
cs
hlt
in
idivl
and
cmp
in
fiadds
mov
fwait
push
cmpb
fs
pop
clc
and
data16
pusha
cmp
push
cmp
out
jb
mov
sub
out
mov
aad
and
in
mov
xchg
cltd
loope
xor
mov
sub
pusha
cmp
inc
or
iret
sbb
xchg
imul
jmp
fwait
popf
dec
jne
in
ror
lods
cmp
shl
subb
cmp
addl
js
ds
jae
jmp
lock
cmp
mov
loop
xchg
in
xor
sbb
and
inc
andnps
and
inc
in
ds
mov
leave
fistpll
mov
adc
out
add
jl
dec
out
into
jg
test
lock
shr
imul
or
rcll
cltd
inc
iret
mov
push
insb
add
or
cmp
xchg
jns
out
pop
fnsave
jns
loope
pop
xchg
in
pop
sarl
decb
out
push
in
inc
mov
out
pop
cld
fidivrl
and
inc
xchg
cmp
add
dec
mov
shlb
pop
ja
in
push
test
pop
iret
pop
adc
gs
outsb
jne
adc
dec
push
and
or
cwtl
pop
scas
mov
push
cld
sarb
or
jmp
into
fsts
cwtl
loope
test
jmp
mov
lret
popa
mov
push
fucom
dec
dec
daa
pop
or
mov
cmp
sbb
je
mov
aam
imul
pop
movsl
adc
cli
pop
pop
cltd
clc
adc
jp
inc
push
in
addr16
cmp
icebp
popa
push
cmp
pushf
lahf
lret
pop
add
shll
xchg
push
ja
jno
test
ficomps
scas
lods
cli
adc
adc
idivb
push
icebp
cli
repnz
jp
mov
jnp
mov
sub
test
push
dec
mov
mov
xchg
lret
fiaddl
rcr
arpl
lret
scas
and
and
and
icebp
fldl
repz
adc
lds
fcomi
jge
fld
adc
pop
cld
rcrl
cli
sub
fs
ja
pushf
cmp
inc
jae
and
mov
and
sub
pop
mov
adc
push
test
xor
icebp
je
sar
pop
and
iret
push
rclb
call
mov
insb
xchg
mov
jns,pt
ja
lods
out
sub
andb
add
add
mov
lods
fs
int3
jp
icebp
sbb
rcll
shl
popf
bound
mov
inc
jns
jle
add
mov
dec
jp
mov
stc
mulb
repnz
cmpsb
fbld
imul
or
outsl
scas
fisttpl
pop
jnp
and
lahf
imul
ja
in
lods
jle
xchg
mov
pop
sti
jle
dec
push
and
dec
mov
pop
notb
cmpl
mov
lcall
jge
sub
mov
lods
shll
enter
push
mov
test
ret
inc
xor
xlat
add
xor
cmp
stc
inc
negl
xchg
lds
push
lcall
ja
int3
add
inc
mov
test
aas
faddl
fimull
arpl
addr16
and
jmp
shl
dec
dec
rolb
xor
pop
dec
jo
into
add
and
sub
lret
pop
ljmp
and
cltd
mov
imul
leave
test
jno
enter
outsw
add
out
data16
or
loope
arpl
lock
push
dec
ss
sbb
mov
mov
push
push
jae
jge
mov
mov
test
lahf
lods
mov
mov
push
xchg
loop
ljmp
stc
shl
in
ljmp
movsl
std
mov
in
lock
inc
iret
lret
jp
stos
sbb
xor
mov
je
jge
fsubrs
xor
jne
mov
dec
popl
and
mov
js
popf
pusha
aas
icebp
jle
les
xor
loopne
or
pop
shr
loope
out
sbbl
mov
cli
pusha
cmp
scas
sub
lcall
arpl
pop
loope
outsb
scas
pop
daa
add
aas
scas
lcall
and
out
xchg
push
push
pop
push
cmpsb
fiadds
mov
mov
jmp
test
cmpsb
jae
cwtl
in
mov
cld
pop
filds
hlt
inc
loop
dec
and
cmpsl
jge
loopne
mov
enter
sarl
xor
aad
xchg
cmc
mov
movaps
in
aas
xchg
and
cld
jb
clc
push
xor
adc
adc
mov
cmp
and
ljmp
out
imul
cmp
iret
std
dec
outsb
jl
test
fdivrl
mov
ror
push
fcomp
je
or
inc
push
das
int3
and
add
sbb
fs
bound
andb
leave
out
arpl
arpl
xor
add
loope
mov
and
add
or
push
loopne
outsl
push
jae
mov
fcmovnb
fistpl
xchg
mov
cltd
fst
pop
test
mov
orl
iret
fucomi
je
sbb
popa
paddsb
xlat
xor
in
test
inc
aaa
pop
mov
xlat
sbb
jb
out
in
mov
rcrb
add
mov
sub
dec
test
out
loope
pop
out
jnp
xlat
pop
test
mov
popl
jnp
mov
or
mov
sub
aad
mov
mov
jnp
sub
jne
lahf
push
mov
mov
inc
pop
jnp
incl
inc
repz
rcrl
clc
popl
mov
in
imul
mov
imul
gs
inc
xor
jmp
or
aad
mov
sarl
add
repz
jg
inc
lahf
sbbb
in
mov
dec
lea
imul
jb
in
outsl
mov
test
repz
xrelease
bnd
dec
fisttpl
aas
idiv
fdivs
cmp
add
and
push
and
adc
loopne
cmp
cmp
jp
xlat
add
outsl
lds
ror
in
mov
sbb
sbb
xchg
inc
fnstcw
lds
ljmp
fstpl
stc
fiaddl
xchg
xor
jne
insl
and
push
sbb
xor
pop
dec
add
test
nop
mov
into
mov
lds
rclb
mov
icebp
inc
add
push
int
out
pusha
inc
xor
les
jae
in
push
and
jbe
inc
adc
cmpl
mov
icebp
in
fdivs
sbb
push
inc
aaa
stos
repz
nop
jns
jle
or
js
xor
fwait
jnp
xor
xlat
xchg
data16
sar
jmp
inc
sbb
mov
cmp
pop
and
lahf
sbb
mov
lret
mov
cmpb
fdivl
dec
pop
leave
sti
cltd
cmpl
faddp
in
dec
mov
mov
jge
shl
cmp
aaa
rcr
or
outsb
daa
sub
aad
jb
lcall
sub
test
mov
mov
call
stc
and
loopne
jg
int
push
lock
scas
pushl
jb
inc
cmp
test
out
jae
mov
dec
push
sbb
jno
inc
mov
imul
inc
packuswb
pop
pop
sarb
lcall
fidivrs
xchg
jp
mov
ret
inc
pop
adc
jl
add
dec
jns
das
push
cmp
lret
int
aas
daa
lcall
dec
or
push
fwait
jmp
lods
xor
das
mov
lock
add
mull
stc
jae
arpl
das
ds
subl
cmp
inc
inc
sti
in
cltd
push
out
jmp
popf
test
or
xorl
rol
out
movsl
sub
push
hlt
pop
ret
jno
dec
stos
icebp
adc
xlat
arpl
in
sub
jp
adc
test
jecxz
mov
lds
pop
jg
add
inc
in
mov
or
mov
into
mov
iret
add
jno
ja
inc
or
pop
loop
das
lret
cmpl
jne
jno
fs
cltd
scas
add
inc
mov
out
test
into
out
aad
pushf
mov
inc
mov
fildl
sub
aam
jnp,pt
loope
jno
jne
fmul
jmp
pop
andl
push
push
pop
or
inc
add
xor
xor
and
pop
jge
ficompl
inc
or
fists
and
add
jae
jns
jns
dec
iret
mov
pop
das
mov
inc
js
filds
mov
inc
ss
jecxz
lea
or
rorb
fwait
repnz
xchg
mov
insl
aas
loope
inc
dec
stc
sub
jle
push
jp
push
add
jnp
push
out
and
js
cs
ficoms
xor
ja
sbb
pop
call
aas
incb
pop
popa
leave
mov
shr
xchg
xchg
lods
xchg
jge
xchg
fnsave
mov
sbbl
clc
sbb
adc
aaa
ss
pop
add
clc
pop
and
xchg
adc
and
cli
mov
icebp
inc
lods
icebp
loopne
push
int
fisubrl
push
jp
mov
pop
push
ret
push
mov
and
out
jmp
mov
jae
jmp
repnz
sub
jge
outsl
xchg
bound
sti
out
imul
ret
ds
cwtl
aam
xchg
movsl
shll
leave
daa
dec
out
push
xchg
cmp
push
ja
into
test
mov
je
mov
xor
mov
jg
xchg
fistpl
mov
jo
fmull
pop
cmp
dec
jp
cmpsb
mov
icebp
inc
inc
gs
mov
jb
clc
cmpsl
add
pop
in
icebp
repz
outsl
push
in
pop
stc
cld
inc
sub
scas
out
sub
dec
cmpsb
and
int
add
push
lea
mov
icebp
fwait
and
sub
pop
mov
leave
test
inc
fsubs
and
cmc
in
xor
out
leave
cli
iret
in
cmp
mov
mov
sub
mov
loope
aad
mov
jecxz
shrl
cld
cmp
sti
jae
loop
dec
repnz
pop
and
lcall
iret
xchg
stc
insl
ffreep
mov
xor
push
outsb
popf
cmpsb
pop
icebp
iret
jbe
in
das
inc
pop
out
add
iret
and
xchg
ret
jge
push
addr16
ret
or
shll
leave
mov
push
add
mov
ds
push
cmp
xchg
nop
flds
les
unpcklps
xchg
fcmovnb
sbbb
out
aam
fnstcw
les
outsl
rorb
rcll
add
cli
test
jge
mov
xor
sub
ja
loope
jmp
xchg
sarl
out
movsb
sahf
mov
lds
jge
ds
test
fistpll
jns
jae
cwtl
out
cmp
jl
mov
dec
mov
sub
out
xchg
jecxz
movl
inc
mov
fsubl
inc
js
jns
adc
in
jg
jecxz
jle
cmpsl
std
mov
mov
leave
out
xchg
test
mov
mov
data16
add
scas
mov
jg
inc
test
pop
lods
mov
scas
push
pop
orb
lock
cmp
popa
push
sahf
repz
test
and
lods
jmp
or
mov
pop
mov
cmp
pop
dec
xor
mov
arpl
dec
push
lcall
in
cs
outsl
push
inc
xor
dec
inc
jnp
lahf
xchg
jnp
icebp
push
lea
sti
mov
mov
rorl
xchg
popa
pop
push
or
lret
mov
out
jge
les
and
add
ja
cmpsl
ds
insl
addr16
jbe
and
pop
push
cmp
pop
dec
inc
cmc
je
nop
ds
fisubrs
lcall
loope
jg
mov
add
mov
aam
fildl
icebp
jge
pop
jnp
pop
mov
dec
xor
leave
sar
xor
mov
addl
test
arpl
push
sti
outsb
add
xor
jmp
lidtl
jge
ja
pop
je
jle
xchg
frstor
lret
icebp
inc
cltd
add
mov
mov
arpl
jno
fnstsw
das
inc
loope
into
add
sbb
sar
mov
push
insl
test
jl
scas
repz
or
data16
out
xchg
lods
out
mov
pop
test
xorl
mov
pop
xor
into
jae
aaa
in
mov
hlt
xchg
aas
popl
ja
adc
adc
lea
sbb
mov
and
negb
cmp
aad
jo
rorl
and
ss
pop
push
sbb
jge
rolb
adc
incb
sub
fisttpl
pusha
pop
repnz
icebp
bound
sub
mov
outsl
push
in
adc
mov
jno
jb
out
jge
cmp
cmp
mov
xor
sarl
jb
push
lds
loop
add
mov
aas
pop
adc
cltd
not
in
popa
divl
jb
out
xchg
jns
imul
fcmovb
test
xlat
jns
push
jmp
and
or
pop
in
cmc
popf
xchg
inc
mov
lea
clc
adc
sbb
movsl
cwtl
xchg
xchg
addr16
lahf
inc
xchg
adcb
sbb
mov
cs
xchg
repnz
rorb
inc
jge
ret
xchg
sbb
bound
jo
test
nop
xchg
mov
jno
pop
scas
and
push
jl
repnz
test
ja
jno
in
jns
sti
mov
sarl
pop
cmp
jmp
addb
ret
jns
inc
xchg
loope
roll
addb
xor
pop
negl
sarb
popf
sbb
mov
jl
stos
xchg
js
push
dec
loope
cmp
mov
push
call
popa
scas
jns
xchg
in
ds
push
cmp
in
cld
leave
imul
mov
sbb
aam
mov
pop
jp
jmp
sahf
fwait
stos
xor
cld
add
popl
add
cld
cmp
mov
rcr
popf
addl
adcb
cmpsb
ja
in
mov
dec
push
jp
adc
in
insl
ss
orl
ja
movsl
pop
test
adc
push
xor
je
and
iret
cmp
jp
pop
movsb
insl
daa
xchg
push
hlt
stos
int
mov
xchg
aas
cli
add
sbb
fbld
js
int
es
scas
out
jnp
bswap
push
test
mov
mov
dec
mov
in
cmp
inc
cmp
cmp
xchg
nopl
imul
jmp
add
pop
inc
movsb
mov
add
fdivl
cmp
stc
cmpsb
and
popa
aad
cld
sub
iret
add
pop
cmp
and
aaa
in
mov
hlt
nop
repnz
xchg
ds
xchg
xor
ja
movsl
dec
repz
gs
pusha
lahf
jg
ja
rcl
filds
adc
xchg
adc
mov
test
dec
xchg
cld
icebp
jne
les
lock
xor
cmpsl
fcompl
mov
ds
dec
imul
lods
popa
lds
and
inc
xor
fnstcw
cli
push
repnz
aam
pop
add
shl
out
dec
arpl
invlpg
lds
lret
or
jne
push
ja
and
jno
aad
add
fs
outsl
pop
sbb
lret
jge
fwait
and
push
xor
mov
sub
jne
jp
fucomp
mov
add
leave
jbe
sub
pop
testb
add
call
jnp
pop
push
cltd
js
sti
jge
adc
nop
pushf
cs
pop
jge
lret
jo
jge
fiaddl
bound
call
ja
jnp
mov
outsl
cmpb
cmp
jg
cmp
fdiv
cmpsb
fwait
int
jle
jg
push
xor
push
xchg
inc
dec
pop
scas
xor
jge
fldt
int
lahf
jmp
test
push
pop
out
inc
es
inc
xchg
sti
add
ret
push
sub
in
movsl
jmp
jne
repz
out
add
imul
ds
or
mov
jae
jp
dec
push
pop
pop
mov
adc
out
jp
outsb
xchg
lock
fldl
jmp
lock
push
sbb
sub
shrb
mov
out
mov
out
and
popa
cli
inc
jnp
leave
daa
inc
repnz
aas
jns
sbb
insl
out
icebp
shlb
movsl
cmc
lea
jle
leave
adc
pop
test
sbb
sti
iret
aas
aad
fimull
out
jne,pt
or
xor
push
or
adc
jno
mov
pop
test
repnz
xor
dec
xchg
mov
hlt
repz
addr16
mov
lahf
fbstp
push
fcoms
popa
mov
dec
or
fwait
int3
pop
daa
or
pop
mov
out
insl
stc
test
ret
jle
mov
jns
xchg
xor
popa
js
loopne
xor
sub
push
dec
jle
andl
adc
sub
xchg
cli
add
fcompl
and
iret
add
pop
js
cmp
pop
cmc
or
mov
les
repnz
dec
test
out
sahf
leave
fs
push
call
xorb
sbb
shl
outsb
or
jo
and
dec
clc
lods
shlb
mov
jg
adc
cmp
inc
lcall
movsb
lea
mov
jl
movsb
addr16
push
pop
or
sub
xchg
mov
sbb
adc
lea
mov
ss
rcrl
cli
push
pop
xchg
sbb
lcall
pop
in
xchg
cmp
adc
xchg
mov
enter
push
lahf
or
into
decb
xor
or
sub
mov
insb
mov
sti
inc
in
mov
out
lods
inc
mov
inc
jae
scas
inc
mov
push
fimuls
push
clc
data16
sub
jle
not
not
mov
jp
popa
decl
push
push
fnstsw
repnz
fldcw
lcall
add
jbe
xchg
push
shll
decb
add
clc
add
dec
lea
repnz
sbb
push
add
pop
ffreep
mov
mov
outsb
shlb
imul
test
sahf
stos
add
and
pop
mov
cs
mov
push
pop
xchg
and
pop
inc
adc
aam
aaa
jns
pop
leave
into
xor
std
xchg
dec
cmp
fnsave
js
and
xchg
sbb
loopne
pop
mov
mov
mov
jb
jmp
and
out
push
xor
mov
out
inc
movsb
jae,pn
imul
mov
std
cmp
push
pop
pop
mov
dec
pop
push
and
lock
jae
pop
xchg
scas
out
add
lret
mov
rcrb
insl
jnp
ja
add
test
bound
out
in
movsb
jnp
mov
jne
add
sub
sti
mov
pop
jnp
pusha
ja
leave
lock
sbb
xchg
popa
xchg
fimuls
repnz
adc
test
inc
in
mov
enter
mov
div
mov
mov
mov
in
mov
xchg
pusha
mov
jge
xchg
icebp
popf
adc
mov
jle
mov
mov
lahf
popl
xchg
popa
jge
inc
lahf
jp
leave
repz
jno
jno
lcall
rdpmc
sbb
jns
mov
out
dec
adc
gs
sbb
arpl
pop
push
and
repnz
push
lahf
push
mov
inc
pop
cs
adc
mov
sbb
jb
cmpsl
dec
or
scas
jl
jne
sahf
mov
sbb
mov
repz
or
xchg
lea
fsub
mov
cwtl
pusha
lea
jle
push
popa
jge
mov
pop
pop
mov
xlat
sub
lds
je
fs
add
pusha
xchg
in
cmp
cmpsl
rcrb
jnp
fstpt
xchg
cmpsl
cmpsl
cmp
adc
icebp
into
add
cltd
inc
pop
cmc
imul
shll
fistpll
fists
cmp
jp
xor
push
adc
sub
cmp
jb
pop
and
push
jnp
sbb
fisttps
adc
hlt
cmp
test
jnp
jnp
mov
push
jb
sti
inc
or
aad
or
pop
test
test
jne
aam
cmc
lock
pop
xchg
mov
scas
lods
jp
mov
push
gs
xlat
inc
and
test
shrl
add
icebp
sub
xchg
insb
xchg
cmpsb
xor
test
cmp
pushf
ret
dec
leave
loopne
cmpsl
ret
cmp
mov
pop
mov
pop
sub
push
push
sub
pop
rcrb
inc
sti
and
daa
jg
cmp
test
bound
fdivl
fldt
popl
insl
or
jb
jae
outsl
dec
in
xchg
arpl
sub
adc
lock
pop
arpl
lret
rorl
add
cmc
xor
sub
lret
mov
and
cltd
aam
push
cltd
hlt
ds
loopne
push
test
insb
mov
loop
fsts
cmpsl
sub
iret
leave
neg
jmp
je
fimull
test
push
push
shr
inc
mov
sub
cmp
mov
in
pop
cmc
inc
into
scas
rcrl
push
push
cwtl
enter
jecxz
leave
jp
das
dec
cmp
dec
cmp
movsl
lret
je
arpl
sub
sub
fdivrp
cmpsb
lahf
je
pop
jecxz
call
je
popl
clc
mov
add
out
gs
jns
out
inc
call
sbbl
out
dec
jno
jns
fistl
jb
lahf
jae
pop
add
out
mov
mov
jg
push
push
outsb
fildll
inc
cmp
jmp
fistl
rol
fcos
xlat
inc
push
popf
out
mov
scas
mov
les
fsubs
or
sbb
loope
inc
pop
sub
cmp
xchg
adc
xor
fistl
gs
insb
test
pop
les
dec
arpl
sarb
cmpsl
es
dec
iret
jae
popf
lahf
out
mov
ja
mov
repz
pop
pusha
imul
mov
inc
push
and
pop
jp
mov
and
add
push
inc
xchg
adc
sarl
arpl
jge
push
and
pop
out
fwait
jle
push
subb
and
data16
add
jge
repnz
out
je
xlat
sbb
jne
add
test
jge
mov
dec
push
out
dec
jle
stos
imul
push
xor
test
mov
mov
repnz
cld
lds
jle
lods
cmp
in
and
xchg
xchg
jo
fcmove
jp
push
mov
fwait
gs
pop
xor
jmp
mov
jmp
lahf
insb
cmp
sub
ljmp
pop
mov
xchg
outsl
jbe
fwait
test
test
mov
rcrl
jge
jno
jecxz
dec
out
xchg
inc
bound
mov
dec
push
jbe
bound
pop
ds
movsl
repnz
or
inc
adc
pop
cld
push
push
sbb
add
pop
orb
push
xchg
push
ret
mov
fs
imul
cmp
insl
mov
jno
cltd
xchg
lea
sbb
lods
mov
xor
sub
je
mov
pop
movb
xchg
call
aas
jae
sub
cltd
push
in
dec
jns
stos
dec
pop
cmpsl
jg
imul
mov
loopne
and
inc
pusha
add
roll
int3
ja
shll
not
mov
lret
push
fldpi
fsubrs
add
les
loopnew
cs
cmp
add
ret
js
outsl
push
cmp
cmp
adc
cmp
jo
shll
data16
mov
push
pop
mov
sbb
test
ficoms
fmull
xchg
rcrl
cli
addr16
test
vsubsd
hlt
sti
mov
and
lock
les
xchg
sbb
xchg
xor
and
jo
lock
imul
insl
xchg
cmc
cli
repnz
sub
imul
test
mov
insl
or
push
jns
cltd
fistl
jo
push
inc
testl
jne
popa
in
fcoml
test
je
popa
pop
ja
pop
in
lds
aas
call
cmpsb
ret
pusha
add
fbld
jge
cmp
vminps
cmp
ds
inc
adc
cmp
adc
mov
mov
mov
shl
out
roll
ds
jnp
add
fistpl
dec
insb
movsl
mov
inc
sti
pop
jnp
mov
mov
daa
cs
inc
push
sti
mov
jle
dec
add
ret
mov
andb
push
incl
outsl
aam
push
mov
pop
mov
lret
fiadds
jne
xchg
lds
pop
icebp
pop
dec
push
push
pop
lock
mov
rorl
mov
lahf
int
ret
shl
repnz
lock
mov
cltd
mov
dec
daa
sbb
cmp
bound
cmp
int
inc
cli
jge
mov
xchg
xor
mov
inc
xchg
adc
fiaddl
stc
cmc
cltd
xchg
inc
hlt
cmpsl
xor
test
pop
jae
shll
aas
ja
xchg
inc
xchg
call
es
insl
movsl
dec
es
clc
lea
imul
vcvtdq2ps
adc
pop
jp
xchg
movsl
cmp
jg
mov
ret
adc
pop
add
xor
sbb
push
insb
mov
jno
sti
outsl
leave
dec
fwait
jbe
sahf
mov
cmpsb
insl
xor
sbb
mov
and
xor
sbb
loopne,pt
jo
leave
decl
cmp
mov
or
add
mov
pop
loopne
cmp
mov
dec
mov
iret
cmpsl
mov
mov
cmp
cmc
bound
dec
mov
gs
dec
mov
jnp
fs
cmp
mov
mov
fsubr
xorl
jno
pop
mov
mov
sub
out
fldenv
shl
nop
pop
shrl
dec
cs
scas
inc
cmp
ja
cmp
popa
mov
xor
jnp
add
or
bnd
bound
repnz
repz
iret
add
loopne
fiaddl
pusha
jg
pop
or
mov
repz
jne
fldl
xor
repz
inc
aas
xchg
or
int3
sahf
xchg
fidivs
push
add
jg
pop
inc
inc
and
mov
scas
aas
pop
lret
mov
out
mov
mov
nop
xlat
cltd
or
inc
lock
subl
add
mov
and
js
or
cs
mov
fidivrs
outsl
mov
aas
out
rcrb
fcompl
cs
in
addb
popa
into
xchg
rcl
in
push
push
rorl
das
add
mov
outsb
loope
or
loopne
leave
add
das
mov
fisttps
cs
dec
pop
mov
stc
out
testl
jg
das
dec
outsl
int
arpl
cmpb
ret
setb
fcompl
pop
gs
inc
clc
jg
sub
leave
add
loope
inc
dec
xlat
fs
scas
sub
pop
cli
cmpsb
in
or
fcmovnbe
arpl
iret
lock
testl
ds
inc
pop
mov
pop
add
push
pop
mov
push
or
imul
inc
xor
or
inc
mov
cs
ret
js
test
lods
ret
and
leave
js
cmp
push
ja
and
pop
jb
push
pop
lea
and
mov
lret
jmp
mov
nop/reserved
mov
inc
imull
inc
jno
add
aam
js
rep
pusha
push
in
icebp
jge
imul
mov
xor
cwtl
nop
fcompl
or
shrl
mov
xchg
push
cltd
std
lods
add
in
lret
iret
jnp
mov
loope
dec
mulb
adc
aam
xchg
or
inc
ds
xchg
adc
movsl
inc
xchg
fildll
rolb
add
push
jns
mov
cmp
daa
add
push
fcomps
mov
adc
ret
cmp
data16
imul
jle
cmp
subl
mov
inc
jnp
ret
test
cmpb
sbb
jb
shll
lahf
lock
ljmp
cli
fsubl
pop
jp
or
clc
dec
and
jg
push
mov
lods
sti
popa
mov
add
icebp
sbb
rolb
icebp
lods
jecxz
add
shlb
loope
xchg
mov
push
cltd
dec
add
mov
imul
popf
add
jbe
mov
push
add
jnp
cltd
dec
push
aad
jno
push
loope
lods
push
sahf
movsb
push
xchg
mov
pop
mov
pop
inc
inc
or
outsl
add
into
rorb
xchg
jae
push
test
sub
and
and
mov
adc
sub
dec
adc
in
or
jbe
iret
in
aad
or
xchg
and
ja
idivb
shll
jge
push
jnp
bound
inc
mov
ret
cli
jne
rolb
jmp
push
test
xlat
cli
ja
cli
ret
andl
clc
jno
out
xor
cmpsl
test
dec
fnstenv
and
inc
lret
adc
inc
pushf
js
inc
mov
jl
ret
pop
jo
fadds
mov
add
xchg
bound
repz
addr16
jp
arpl
xor
pop
test
cmp
ds
or
dec
mov
rorl
push
xchg
adc
aas
jnp
pop
out
lock
lret
inc
rcll
roll
jne
rcr
out
jno
dec
jmp
add
leave
icebp
add
pop
add
add
leave
fcoml
inc
cmp
jmp
xchg
andl
pop
pop
jbe
dec
fs
fwait
jg
inc
roll
out
mov
mulb
je
loop
incl
mov
cmpsl
xor
jge
aas
loop
andb
xchg
mov
push
mov
lock
stos
negl
inc
or
in
inc
inc
xlat
ss
xchg
insl
pand
push
push
xor
rclb
aam
cmp
sbbb
xchg
andl
sub
cmp
outsl
cmp
push
jno
nop
inc
movsl
pusha
les
ja
ja
adc
push
rcrl
fstp
sub
lret
mov
push
add
sti
loopne
xor
mov
inc
lds
outsb
test
lds
xchg
mov
lea
xchg
sbb
mov
sub
sub
jge
sub
mov
pop
cmpsb
push
mov
cmpsl
aam
jnp
mov
stc
cmp
cli
jp
pop
lds
sub
mov
jle
lea
pop
sub
and
cmp
sbb
xchg
jns
lds
bound
andps
jp,pn
movsb
xchg
out
push
bound
bound
jp
push
add
addl
mov
sub
xlat
jecxz
pop
aad
daa
inc
inc
clc
xchg
dec
lea
dec
ds
xchg
inc
mov
cwtl
pop
mov
leave
cmpb
loope
mov
movl
inc
les
push
fmull
lock
ja
jae
test
jle
cld
test
in
scas
dec
out
inc
jp
fisubs
ljmp
dec
cmpsb
lcall
jb
mulb
xor
into
sar
mov
repz
sbb
insl
adc
cmc
dec
push
push
es
enter
xchg
leave
dec
inc
add
testb
enter
cmpsb
xor
and
mov
xchg
daa
xlat
adc
push
and
xor
sub
aad
sub
add
cs
pop
scas
repz
xchg
cmp
jp
pop
mov
mov
test
dec
imul
and
ljmp
mov
lock
add
scas
mov
xchg
xor
jns
loopne
icebp
or
test
cs
jns
ret
and
lds
pop
jle
aam
mov
xchg
cmp
pusha
insl
call
jg
sub
movsl
cmp
incl
addr16
std
btsl
call
les
cmp
cmp
leave
cmp
xor
or
dec
aam
sub
shl
imul
into
mov
xor
enter
add
les
fadds
inc
insl
cmpl
rol
mov
ljmp
push
cmp
std
add
mov
outsl
push
and
test
mov
repz
inc
fsubs
sbb
leave
adc
outsb
mov
jae
and
fisubl
jno
fsts
adc
cmpsl
out
lds
movsb
in
inc
and
incl
out
push
xor
fidivs
fldenv
mov
add
outsb
cld
dec
jecxz
cmpb
dec
lret
add
xchg
pushf
jp
jg
out
inc
and
orl
mov
adc
out
mov
pushf
fwait
push
inc
gs
aam
mov
jmp
dec
pop
cmp
pop
adc
sbb
jecxz
aad
outsl
push
xor
popa
out
out
jno
test
inc
cmp
add
in
popa
add
loopne
jle
xlat
pop
aas
sub
jbe
shrl
ja
jae
ja
imul
mull
jns
add
jl
cmp
or
jmp
jns
push
cmp
push
jge
jge
fisttps
mov
hlt
call
jge
push
testl
cmp
neg
jno
outsl
or
icebp
add
daa
push
xchg
repz
sub
mov
std
lods
loope
jno
in
ljmp
cmp
adc
rcll
mov
sti
fbld
cmpsb
cmp
dec
lock
jecxz
mov
outsl
push
shlb
stos
push
push
fadds
pop
or
sbb
dec
xchg
mov
add
mov
mov
cmc
repnz
jge
lock
sti
push
cmp
cmp
jmp
or
add
sub
sub
mov
repnz
pop
rclb
xlat
sbb
pop
jl
and
test
shrl
cld
lock
fcomps
popa
jo
outsl
aam
jle
add
pop
sti
orb
mov
jno
pop
imul
ret
jg
mov
sub
xor
jp
imul
mov
mov
cltd
xor
jp
mov
fnstcw
mov
cmp
pop
push
adc
sar
pop
ret
add
xchg
adc
shl
jg
inc
push
mov
fisttpll
cs
lock
cmpsb
bound
lds
ficoml
xor
sbbb
jns
mov
movsb
push
sub
xchg
mov
fcmovnb
enter
mov
mov
jnp
loopne
xchg
inc
jae
aas
xor
in
jg
mov
out
movsl
cwtl
cli
pop
jp
xchg
adc
xor
xchg
mulb
jo
mov
pop
shl
jae
push
adc
jns
cmp
xchg
xor
gs
xchg
mov
mov
dec
iret
sets
popa
outsl
mov
cs
dec
inc
mov
dec
cwtl
pop
push
jmp
push
push
push
call
lcall
gs
dec
mov
adcl
add
movsb
and
push
mov
pop
cwtl
lock
mov
ja
ja
cmp
adc
adc
test
iret
mov
inc
cmp
out
mov
pop
add
outsl
mov
mov
loope
jp
leave
pop
sbbl
push
aas
pop
jg
lahf
jno
adc
lcall
push
cltd
xchg
and
push
in
or
adc
mov
mov
mov
pop
pop
lret
mov
rcr
mov
push
int
clc
inc
adc
int3
push
pop
push
push
shl
mov
cmc
ffree
lcall
pop
cmpsb
addr16
or
mov
outsl
cmp
int
jg
aas
pop
cmp
rcl
sahf
sub
push
push
cli
push
movsb
jle
aas
cmp
pop
popf
sbb
imul
lds
cli
sbb
shrl
jmp
and
xchg
insb
ja
xor
mov
jecxz
mov
push
sbb
outsl
in
jno
jmp
xchg
pop
add
loope
pop
pop
sti
icebp
dec
testl
push
enter
out
fisttpl
fs
add
add
out
sub
lea
xchg
push
jb
push
inc
xchg
outsl
gs
loopne
inc
jbe
jmp
pusha
outsl
push
sbb
inc
ret
fs
repnz
icebp
je
aad
mov
jo
inc
mov
clc
fmuls
ds
in
sub
or
cmp
ss
jp
outsb
aaa
push
adc
loop
sub
lahf
shll
outsl
adc
loopne
outsl
cltd
jb
ds
pop
fsubl
repz
arpl
mov
pop
push
xchg
data16
aad
inc
cmp
mov
inc
fdivr
mov
sub
lock
scas
inc
add
cmp
or
fldt
pop
aaa
mov
dec
jle
add
je
jg
sbb
movsl
mov
jmp
pop
icebp
add
inc
mov
push
xchg
jne
repz
fnstenv
pop
mov
jnp
stos
test
mov
lock
dec
inc
mov
lods
stos
inc
sarl
insl
pop
pop
rcl
inc
movsb
fisubrl
cmc
add
fwait
sbb
or
push
jge
loopne
xchg
mov
mov
pusha
mov
pop
cmp
adc
mov
mov
mov
test
or
lods
lahf
sub
xor
pushf
fistl
aam
dec
push
lcall
fistl
add
pop
int3
das
mov
inc
arpl
mov
mov
aad
or
fldcw
push
cmpsb
pop
lods
in
test
mov
outsl
iret
fmull
pop
or
dec
sbbb
test
imul
adc
and
imul
mov
inc
adc
mov
clc
dec
decl
jae
es
mov
rclb
lret
loopne
ja
lahf
fcomip
pop
aam
sbb
xor
andw
outsl
dec
and
cmc
pop
and
push
jne
mov
and
push
ret
jnp
mov
ja
or
out
cmp
repnz
mov
push
pop
jg
ljmp
icebp
ljmp
mov
test
dec
orl
jge
iret
aam
call
pushf
fildl
cmp
ja
fimull
mov
sbb
and
sbb
icebp
cmpsb
cwtl
das
add
push
jp
les
fwait
insl
sbb
cltd
in
mov
jbe
dec
aad
adc
or
inc
outsl
mov
fsubs
xor
mov
mov
leave
ret
dec
cltd
xorl
xchg
push
mov
mov
jecxz
out
insb
xchg
lds
cli
pop
jge
mov
aas
dec
and
jns
sub
push
das
sub
ret
xor
jge
mov
inc
add
inc
add
bound
xchg
repz
pop
adc
out
insl
iret
add
stos
outsl
movl
js
out
das
mov
faddl
mov
ret
out
cmp
xchg
out
rcrb
add
mov
jae
inc
jp
xlat
test
into
push
jecxz
jnp
cltd
jmp
movsl
and
push
aam
aas
bound
pusha
xor
inc
jb
ja
sub
cmp
cltd
add
out
and
pop
xor
lahf
jle
jecxz
dec
movsl
ss
bound
aaa
fistps
jno
jle
sbb
push
pop
icebp
popa
cmp
jbe
xchg
push
jmp
ror
xchg
cli
pop
scas
push
mov
adc
xor
fiadds
xor
xchg
mov
push
mov
in
jnp
push
pop
je
jnp
mov
inc
sub
push
push
insb
ret
and
les
cmp
les
std
cmp
add
push
ss
inc
dec
imull
daa
add
mov
pop
pop
push
or
xlat
xchg
inc
jg
cmp
jg
mov
mov
out
mov
bound
push
cmc
jo
push
inc
mov
mov
jnp
shl
movsb
lea
rcrl
popa
inc
insl
imul
lods
mov
push
inc
nop
or
jp
dec
stc
xchg
pop
or
sub
jbe
inc
js
cmp
dec
stos
xor
test
pusha
pop
sahf
mov
sbb
lock
rorl
mov
lahf
push
call
pop
jns
push
jae
gs
faddl
pop
or
fisttps
in
jg
jg
xchg
les
popa
into
pop
mov
lock
sbb
cmpb
in
ja
cmp
enter
lret
jl
mov
adcb
adc
cmp
aad
test
cs
jns
add
or
lcall
in
or
pop
in
vsqrtpd
out
inc
add
push
rcr
sbb
xor
faddl
cli
loope
mov
aas
mov
movsb
cwtl
sub
jns
sub
sti
faddl
std
xchg
popf
sbb
xchg
mov
inc
mov
fimull
pop
mov
fdivrp
lahf
stc
je
sbb
pop
aaa
js
jl
ja
mov
sbb
into
out
push
or
jg
sub
outsb
int3
cmc
jnp
cmpsl
add
aas
jne
dec
jg
outsl
fwait
ds
pop
into
subb
push
mov
aas
and
imul
sbb
jle
and
in
mov
mov
dec
pop
sub
out
ret
push
pushf
fiadds
sbbl
hlt
lea
fnstsw
and
lock
xchg
fcoms
addl
push
push
daa
stos
aam
loopne
and
negl
and
or
subl
and
cltd
sbb
mov
inc
or
fsubr
mov
inc
sub
inc
aas
cwtl
out
add
dec
std
jnp
jnp
add
scas
lret
cwtl
xchg
push
ret
jbe
sbb
mov
push
stos
jg
out
imul
add
sbb
sbbl
cmpl
dec
jo
or
xchg
fisubrs
inc
mov
sub
dec
lcall
mov
orl
mov
sub
inc
cmp
and
or
inc
jecxz
inc
jnp
inc
and
popf
lahf
lea
dec
and
inc
jmp
cmpsl
xchg
aam
jbe
js
sbb
inc
push
rolb
stos
mov
pop
push
sub
xor
out
push
cmpsb
cmp
jle
aam
cwtl
popf
jbe
ja
mov
subl
sbb
cmp
aam
adc
mov
jge
cld
add
inc
jns
fidivrl
fcomip
jp
rcll
jns
mov
repz
aam
insl
fbstp
and
shlb
sub
sub
jge
movsb
mov
sbb
and
push
sbb
jbe
inc
jno
mov
mov
repz
filds
push
js
mov
mov
mov
adc
fucomip
xlat
pop
inc
out
cwtl
movsb
mov
lahf
jmp
adc
xchg
inc
add
pop
cmp
pusha
adc
lret
inc
push
lcall
mov
fnstcw
pop
dec
dec
mov
pop
adc
sti
mov
icebp
jno
push
popf
dec
jp
rcrl
dec
cs
pushf
rcrl
jno
add
or
mov
movsl
divl
roll
shll
xchg
pop
mov
rolb
inc
lret
jg
loope
aam
arpl
cmp
in
mov
xor
lcall
xor
mov
jg
xor
fsub
outsb
sbb
jnp
or
repnz
orb
sub
pop
imul
or
mov
imul
mov
int3
inc
jbe
stc
jo
pop
scas
or
clc
cmpsb
jl
cmp
mov
inc
and
fiadds
inc
fsubrl
adc
jl
xchg
pop
outsl
les
scas
in
mov
add
push
or
jp
je
pop
mov
stos
int
cmp
les
ds
cli
sbb
mov
xchg
lea
inc
mov
stc
cmp
cmpsl
inc
mov
xchg
mov
repnz
imul
shlb
pusha
xchg
push
faddl
into
clc
lea
lcall
int3
inc
add
cmp
gs
push
sahf
stos
jg
mov
bound
cmp
mov
movsb
mov
rcr
test
icebp
sbb
rcrl
in
fldcw
jne
pop
xor
jp
and
mov
inc
push
or
sub
lock
bound
dec
fcoms
sub
push
pop
adc
xorl
sbb
popa
mov
inc
mov
popa
int
js
sahf
adc
jnp
pushl
mov
mov
jnp
into
push
mov
ret
pop
pop
mov
jmp
mov
arpl
mov
mov
adc
rcl
ja
sub
sub
sar
repz
mov
fmul
pop
lds
cmp
orb
push
push
out
adc
jae
outsl
es
mov
add
fistpl
mov
insb
pop
shll
pop
pusha
adc
cltd
push
inc
push
push
push
fs
jg
inc
jmp
inc
aaa
inc
sarl
and
mov
dec
mov
rcrl
jns
fstpt
sti
add
push
jnp
orl
addr16
fsts
dec
sbb
or
add
shl
divl
flds
jecxz
leave
in
outsb
icebp
je
pop
cmp
cltd
inc
out
jb
repz
inc
pop
pop
in
cmpsb
push
jnp
cwtl
cli
sub
ljmp
jnp
mov
rcrb
lahf
push
push
push
fidivrl
adc
push
jbe
dec
nop
movsl
dec
jle
or
jmp
mov
aas
subb
mov
jb
repnz
aaa
pop
movsl
dec
and
iret
lahf
cmc
out
imul
push
inc
push
xlat
ja
rolb
mov
pop
mov
or
inc
sarb
arpl
mov
push
jae
sbb
shrl
adc
or
arpl
lea
dec
xchg
clc
and
xchg
push
mov
and
adc
ficomps
aaa
xchg
cpuid
adc
jno
cs
rolb
add
into
add
das
xchg
into
push
mov
sbb
rorb
fs
fsubr
and
and
mov
ficoml
pop
repnz
sbb
pop
mov
dec
popa
jno
fimull
dec
sbb
pop
cmp
adc
mov
or
cmp
stos
sbb
outsl
and
test
fcoml
repz
test
les
mov
shlb
jne
pop
inc
test
outsl
in
pop
fnsave
adc
je
fcompl
push
add
je
jno
cmpsl
jnp
mov
lock
add
mov
add
mov
into
pop
adc
add
and
jp
mov
js
jns
adc
inc
jae
sub
push
les
mov
jmp
popa
ljmp
stos
cs
dec
or
pop
negl
jecxz
fimull
ret
xchg
arpl
nop
aaa
ljmp
lcall
cmpsl
movsl
jno
rcll
add
jp
mov
aam
fsub
xor
mov
push
inc
lcall
shl
punpcklwd
out
pop
mov
aaa
lcall
adc
loope
push
xchg
int3
in
xor
fcoml
ljmp
aas
push
xchg
pop
inc
inc
pop
xchg
rcl
adc
js
outsb
je
adc
mov
pop
fistpll
mov
xor
sti
lahf
cmc
mov
inc
jb
push
int
mov
or
insl
loopne
dec
std
cmp
fldt
fimuls
hlt
add
lcall
push
cmp
into
push
fidivrl
sahf
pop
cli
mov
sbb
out
sti
mov
rcll
insb
cmp
lcall
bnd
cmp
add
jmp
adc
cmp
push
or
mov
fs
scas
dec
enter
std
dec
test
scas
pop
cltd
icebp
mov
add
add
pop
mov
ret
adc
add
pshufw
js
rep
sbb
or
test
mov
add
hlt
imul
out
loope
mov
inc
xchg
cmc
mov
aad
shlb
test
jns
rorl
cmp
movsl
es
repz
cmp
dec
cs
xchg
jp
inc
clc
data16
mov
dec
fs
jge
sbb
fldcw
scas
rcrl
fisttpll
add
leave
outsb
es
scas
cmp
or
jl
add
pop
in
flds
in
rcrb
repz
jnp
sbb
push
xor
iret
mov
andb
cwtl
sub
clc
test
into
jnp
adcb
scas
add
aas
push
pop
sar
add
scas
icebp
test
xchg
aam
out
test
test
dec
mov
and
les
push
popf
hlt
lock
fstpl
sub
xor
sbb
mov
out
mov
xchg
cmc
out
xor
dec
out
dec
icebp
fs
push
xor
mov
aaa
sub
cli
push
or
adc
push
cmp
scas
stos
dec
cmp
pop
test
pop
pop
pop
or
mov
xchg
cmp
fsubl
mov
adc
dec
xorl
jne
cmp
and
test
mov
clc
ja
aas
pop
aas
call
sub
mov
dec
jae
sub
adc
inc
jb
lret
push
pop
fdivs
and
sub
mov
xor
jne
sbb
pop
xchg
cmp
cltd
fwait
addl
bound
faddl
mov
mov
mov
mov
into
dec
push
pop
mov
jl
jns
ret
arpl
jnp
sbb
aas
outsb
xlat
test
add
je
jae
aam
movsl
into
outsl
pop
loope
add
ljmp
ret
test
mov
xchg
in
inc
inc
outsl
stc
ds
mov
test
jecxz
mov
dec
fcmovbe
mov
jnp
adc
icebp
dec
pop
mov
inc
mov
jnp
mov
jnp
inc
mov
adc
push
jmp
inc
push
ja
fnstcw
jae
es
sub
mov
loop,pt
leave
sarb
aas
aam
fcoms
ljmp
xchg
dec
jle
sar
jo
out
and
push
iret
xor
or
lcall
mov
andb
loop
out
xchg
jb
insb
and
out
insl
outsb
fwait
das
out
mov
lock
insb
mov
dec
cld
faddl
andb
shr
movsl
int3
jnp
adc
jo
iret
or
cmp
add
fadds
das
loopne
mov
xor
cmp
leave
sub
xchg
xchg
scas
lcall
lret
dec
pop
cmp
les
cmp
je
inc
shll
jl
fildll
inc
add
add
pop
mov
jmp
xchg
sahf
add
stc
mov
and
push
sub
shll
inc
or
out
outsl
mov
sub
inc
inc
js
mov
xchg
jle
push
repz
jnp
jno
addr16
cmp
add
stos
mov
sbbl
sub
lea
loope
out
xor
notl
push
scas
insl
jns
rcr
xor
push
mov
mov
add
loope
outsb
push
push
sbb
mov
or
fld
dec
pop
imul
cmp
je
je
mov
loop
lods
rolb
loope
mov
xchg
jp
lret
pop
jg
mov
movsl
add
dec
pop
repnz
fldcw
loopne
mov
and
cmc
test
push
sidtl
jo
dec
enter
leave
iret
adc
or
stc
push
lea
inc
pop
mov
jp
fstpl
addb
cltd
rcrb
mov
roll
ja
lcall
cmpsb
ret
ds
xchg
pop
inc
adc
cmp
mov
pop
jae
mov
outsl
jae
scas
shlb
pop
mov
sbb
aaa
fsubl
aas
mov
mov
cwtl
imul
mov
enter
das
lds
xchg
fiadds
or
fcoms
addr16
ret
pushf
mov
test
aad
sahf
cmc
fnsave
addr16
jns
sub
pmullw
or
mov
inc
jp
push
fldcw
js
mov
xor
inc
mov
movsl
mov
sahf
mov
mov
cmp
orl
mov
jne
pop
fidivrs
or
sbb
and
popa
sub
inc
pop
loope
mov
das
sub
sub
push
sarb
adc
aas
dec
cmc
cmp
je
cmovg
fstp
sti
out
cli
dec
repz
call
jge
jns
jae
scas
insl
dec
cmpb
nop
int
arpl
pop
mov
sub
sub
inc
lret
in
shlb
lcall
outsb
fldcw
sbb
rorl
sarl
jb
jne
inc
jno
mov
pop
sub
imul
in
clc
pusha
js
in
fbld
popa
push
into
jnp
jge
push
mov
xor
xchg
mov
es
sbb
xor
add
cwtl
mov
into
push
push
add
sarl
adc
sub
ja
addr16
popf
int
push
pop
stos
mov
and
mov
rorl
and
cmp
push
enter
jle
aas
push
xor
repz
mov
jb,pt
push
fcmovnb
fimull
push
stos
mov
xchg
pop
push
mov
loop
ljmp
shrl
popa
cmp
imul
mov
leave
jge
neg
pusha
mov
push
mov
stos
addr16
and
js
jns
dec
mov
and
xchg
inc
sahf
add
cmp
stos
divb
das
xlat
movb
xor
sahf
push
jbe
mov
bound
or
stos
fdivl
insl
or
sahf
push
mov
mov
push
push
rorb
push
and
xor
fidivrs
enter
fcmovne
xorb
fiadds
lea
insb
mov
mov
jb
cmpsb
pop
lock
or
add
out
mov
xchg
or
mov
icebp
jge
adc
roll
push
pop
and
add
pop
push
push
aam
iret
sub
mov
push
adc
pop
popa
movsl
outsl
repz
pop
xchg
jg
cmpsl
dec
mov
mov
adc
insl
xchg
cmp
pop
mov
aam
movsl
jo
inc
incl
rcrl
mov
dec
mov
cltd
sbb
mov
bnd
or
lock
mov
leave
mov
cmp
add
and
mov
bound
leave
fcomp
call
enter
inc
outsl
imul
lret
call
sbb
cmp
jmp
xchg
ds
jne
jge
idivb
jae
jns
lea
neg
mov
adc
jl
sti
push
pop
fwait
push
fs
pop
scas
mov
mov
dec
lods
xchg
add
mov
ja
in
out
cmp
inc
dec
dec
cmp
jnp
pusha
lea
sub
stos
sbbb
jmp
cmp
andl
ret
dec
push
in
mov
pop
jp
push
bound
lods
in
leave
add
push
mov
pop
add
sub
xchg
adc
imul
inc
cmp
into
xor
pushf
dec
mov
mov
push
dec
mov
add
int
mov
ja
mov
pop
fmuls
cmp
jnp
lret
mov
fisubrl
jae
inc
fwait
and
jp
insl
out
xchg
pusha
cmp
add
ffreep
jecxz
imul
jae
cltd
daa
sarl
push
sbb
shrl
cmpsl
mov
stc
jns
jno
sbb
push
mov
pop
aam
scas
sbb
xchg
sbb
rcr
add
js
and
jne
or
or
test
iret
lahf
inc
jne
add
sub
aam
add
shl
mov
fldl
xor
mov
dec
mov
fnclex
lods
xchg
mov
dec
cmp
dec
test
pop
outsb
sbb
ljmp
in
je
fldt
cmp
xchg
jns
test
fidivrs
sbb
pop
inc
imul
aas
adc
lcall
mov
jns
jl
mov
jo
jl
mov
ja
mov
std
ss
test
lahf
push
add
or
cli
lock
adc
and
jmp
inc
cmp
cwtl
dec
mov
push
stc
mov
dec
pop
inc
add
je
leave
xor
inc
xor
test
test
insl
push
pop
cmpsb
xchg
jecxz
and
sub
int3
pushl
adc
loope
and
xor
pop
repz
test
ja
xchg
xchg
ret
arpl
lahf
jns
ret
jge
shll
cmpsb
or
outsl
movsl
jne
loopne
repz
pop
mov
ret
scas
fadds
nop
imul
xor
pop
movsb
jle
cmp
xor
dec
xor
xchg
sbb
mov
in
int
and
arpl
jae
addr16
jae
sbb
loopne
in
jp
sbb
fsubrl
into
inc
rolb
jle
scas
push
mov
mov
lahf
daa
xchg
fadd
cmc
sub
xchg
push
fldt
pop
bound
pushl
enter
js
jb
ret
aas
pop
ret
ds
int
xor
jb
stos
mov
sarb
jnp
in
xchg
push
cmpsb
mov
test
mov
cli
test
pop
gs
lcall
ss
in
fadds
aam
lock
shrl
mov
sbb
xor
push
orb
dec
cmp
inc
adc
insb
cmpsb
repnz
dec
jbe
xchg
test
add
cmp
aas
data16
leave
ja
mov
pop
xor
cmp
mov
lret
xchg
es
fstpt
adc
and
mov
jp
add
cltd
pop
ja
pop
jg
inc
push
dec
jno
imull
bound
ja
inc
sahf
cltd
sub
dec
push
pop
call
or
xchg
mov
lcall
sti
jae
popa
mov
int3
js
mov
and
lods
inc
dec
ja
jle
ret
jns
and
stc
cmp
mov
mov
movsl
cld
xchg
dec
lahf
mov
jecxz
cmp
cwtl
out
insl
cmovle
popf
mov
stos
int
arpl
dec
cmp
mov
jmp
sar
fcomi
jmp
into
jnp
out
mov
int3
sahf
jge
xchg
pop
mov
cmpsl
outsb
dec
aad
sub
bound
lock
dec
bound
arpl
out
pop
stos
adc
jle
int
adc
and
xchg
or
pop
jl
add
fdiv
mov
cmp
add
leave
adc
or
jp
stos
add
push
ja
pop
pop
call
decb
std
inc
cmp
ds
jl
add
or
test
pusha
jne
aas
test
jns
out
loop
and
xor
jns
pop
mov
mov
loop
adc
jae
xchg
fildl
call
mov
ja
aaa
addr16
xor
neg
cmp
pop
hlt
inc
outsl
mov
in
pop
cmp
call
test
into
mov
pop
das
popa
outsl
das
ret
and
cmp
outsb
adc
add
sarl
jae
fldt
sbb
es
ficomps
andl
jp
add
push
or
add
mov
jno
jo
fdivr
addb
push
enter
push
lret
outsb
add
inc
aad
leave
push
jmp
jecxz
in
push
imul
orb
xor
push
or
mov
rcrl
adc
inc
sub
push
cwtl
sar
dec
push
test
or
dec
loop
fcompl
js
cs
cld
imul
imulb
pushf
dec
push
call
cltd
je
fsubs
mov
pop
pop
pushf
imul
cmp
movsb
les
ret
sub
sub
popa
popf
test
aad
repz
je
fs
sbb
bound
or
inc
and
test
pusha
adc
jb
xor
pop
mov
jge
cmp
in
pop
ljmp
fcomps
fbld
push
push
shrd
jge
or
sarb
aad
shrl
cmc
cmp
push
in
adc
lock
movl
mov
mov
jecxz
xchg
jns
cmp
rorl
scas
jg
push
mov
lods
sub
fcomps
aaa
add
fs
mov
imul
mov
jae
je
popl
mov
lea
xchg
xchg
pop
mov
inc
push
mov
es
sbb
mov
and
pop
mov
cmp
sbb
pop
fidivrl
cmp
roll
aas
pop
in
sbb
mov
xchg
mov
test
gs
jnp
sub
mov
inc
adc
inc
loope
fimuls
mov
movsl
ss
jg
or
mov
xor
ljmp
sbb
mov
test
in
or
or
dec
frstor
mov
add
add
lret
or
push
inc
fdivl
jns
pusha
add
inc
shlb
mov
rcrb
lret
dec
dec
imul
cs
out
fsubrl
notl
aam
std
clc
out
cmpsl
je
out
ds
push
adc
fs
add
sub
mov
icebp
filds
pop
xor
jno
sub
dec
xor
xor
xchg
pushf
lea
out
mov
mov
jae
ret
outsl
adc
lahf
or
xor
and
testb
imul
outsl
popf
jbe
cmp
cmp
add
pop
call
in
lahf
adc
push
faddl
cs
and
pop
aam
jg
scas
es
xlat
inc
shlb
insl
ja
idivl
std
aaa
mov
jle
mov
sub
inc
xchg
cmpb
add
mov
into
mov
or
ficompl
jge
movl
dec
sti
jae
repz
mov
cltd
orb
frstor
cld
fistl
mov
ffree
cmp
cmpsb
cmc
jbe
outsb
popa
push
jo
xchg
sub
sar
fimuls
pop
sub
push
test
pop
aam
dec
pop
fildl
sub
push
daa
jge
cmp
das
cs
jmp
sbb
mov
add
andl
fcmovnb
or
notl
inc
andl
scas
mov
dec
inc
aad
sub
shrd
out
icebp
inc
fs
lods
inc
mov
stos
loope
js
fsub
icebp
out
aas
push
xor
fimull
ds
out
adc
xchg
xchg
rclb
mov
xor
pop
pop
inc
pushf
inc
test
popa
or
fcom
jmp
cltd
xlat
scas
daa
in
in
add
shl
jle
lock
dec
push
sbb
inc
and
stos
filds
sbb
and
xchg
pop
pop
mov
jnp
sub
popa
test
fsts
mov
jge
scas
mov
and
sbb
repz
inc
in
or
mov
cmp
or
and
push
jno
jno
testl
nop
inc
inc
int3
adc
in
popf
jb
pop
mov
add
xchg
xchg
sarl
push
adc
imul
xor
shl
scas
loopne
fs
sti
push
fsubrs
out
sub
fs
addb
adc
pop
leave
cmp
mov
sahf
dec
add
jae
mov
push
fildll
cmp
sbb
fisubrl
fsubs
pop
loopne
fildl
mov
sub
icebp
fwait
pop
mov
jecxz
aaa
rclb
insb
pop
cli
add
push
xchg
mov
fucomip
sti
xor
rorb
jle
add
je
aam
push
fistl
cmc
push
push
xchg
fmull
imul
enter
adc
lret
in
test
or
push
mov
scas
add
xor
in
push
inc
pusha
add
push
int3
ret
or
pop
pop
mov
push
das
add
data16
test
mov
add
sub
jp
fs
inc
push
imul
adc
xlat
pop
dec
mov
sti
idivb
dec
int3
jno
lret
push
in
push
in
sahf
ljmp
ret
into
sbb
fdivs
mov
cs
dec
outsl
cmp
out
cmp
pop
sbb
cmp
test
jle
aas
jnp
lock
repnz
in
enter
aas
inc
cltd
insb
rolb
adc
pop
cmpb
mov
icebp
sbb
add
insb
testb
mov
popa
imul
or
dec
fnop
adc
sarl
mov
icebp
iret
jl
fucomp
sbb
pusha
inc
in
mov
push
add
pop
jl
mov
ja
imul
lods
push
push
mov
xchg
imul
cmp
addl
scas
cmp
imul
or
test
dec
dec
adc
test
jg
movsb
mov
cli
jl
in
stc
jnp
out
cli
inc
mov
imul
cmp
iret
shrl
shlb
sub
xor
sub
inc
std
outsb
rorb
inc
into
dec
inc
test
adc
pusha
xchg
lret
jnp
sbb
les
jnp
inc
iret
jmp
xchg
ret
aas
mov
ss
and
in
dec
ffree
xchg
xor
jmp
add
dec
push
ds
mov
loopne
fldt
arpl
mov
idivl
add
jecxz
dec
inc
gs
out
outsl
in
cmp
mov
iret
fnstsw
stos
loopne
xchg
jg
clc
sub
inc
sti
and
jns
xchg
jbe
js
fisubrl
or
sbb
jns
addr16
loope
mov
jp
test
inc
push
adc
jb
xchg
cmp
sti
pop
jmp
pop
pop
lret
mov
mov
cwtl
aad
aad
aam
pop
mov
jns
ja
mov
sti
mov
and
movsb
jmp
lds
push
stc
fdivr
bswap
dec
stc
adc
and
jmp
fiadds
movsl
push
jnp,pt
lods
pop
mov
or
in
cltd
add
cltd
lods
and
js
pop
pop
addr16
out
jge
scas
leave
jl
mov
add
add
fistps
add
add
cs
dec
sti
xchg
pop
fdiv
sti
cmp
jb
repnz
data16
in
je
sub
decl
pop
push
pop
cmp
outsb
scas
es
call
les
jmp
add
scas
shlb
les
push
mov
into
mov
fbld
ds
lcall
fucomip
mov
movsl
push
xchg
outsb
jle
popa
xlat
mov
jecxz
insb
cmpsb
leave
mov
mov
push
push
jmp
leave
std
fst
cld
jbe
scas
gs
js
bound
lahf
aad
fsubs
aam
fimull
jl
lds
jae
push
ja,pn
cmp
push
mov
cmp
icebp
repz
jg
subl
fstpt
mov
in
jns
xlat
sub
daa
mov
cmc
adc
xor
test
cvtdq2ps
jno
cmp
mov
cmp
es
add
rolb
jno
movsb
inc
mov
arpl
data16
inc
push
cmp
add
jbe
pushl
pop
and
add
sahf
fcmovnu
aas
outsl
repnz
sbb
dec
jns
sbb
cwtl
sub
fisttpl
cli
aaa
jns
insl
imul
sbb
sub
push
stos
jno
xchg
shrl
cmp
sbb
jne
jo
paddw
jne
mov
jns
aaa
leave
arpl
mov
enter
and
cmpsb
add
pop
jg
cmp
mov
push
int3
rolb
mov
push
mov
xor
cmp
ja
and
ret
mov
mov
xor
jg
in
mov
lahf
rolb
popa
fidivrs
fidivl
out
dec
clc
arpl
sub
dec
rcrl
adc
scas
add
cli
adc
mov
cmp
xchg
and
jb
xor
cmc
or
xor
and
mov
xor
imul
and
jge
dec
rorl
push
scas
imul
pop
push
hlt
outsl
mov
into
sbbb
xchg
cmp
and
lds
push
fidivrl
pop
int3
jno
rorb
push
mov
lret
add
insb
adc
push
pop
mov
js
scas
imul
inc
aaa
cmc
test
js
lock
pop
inc
push
mov
jle,pn
arpl
mov
dec
outsb
jecxz
loope
scas
sahf
sahf
shrl
jmp
cltd
mov
jg
jp
test
and
jns
out
fwait
xor
cmpsl
leave
jge
and
xor
mov
jg
xchg
xor
jge
lea
pop
dec
fadd
aad
cmp
jb
mov
test
inc
dec
add
pop
sahf
jg
js
sub
adc
call
cld
je
jl
ljmp
push
jmp
rep
cwtl
imul
sbb
aad
aam
pop
and
addr16
pop
and
mov
dec
cmp
lahf
xor
jmp
fistpl
jne
scas
jnp
jne
mov
adc
add
jbe
jno
stos
bound
or
mov
cmp
jae
adc
jae
cltd
icebp
fiaddl
push
andl
mov
fldcw
adc
lahf
mov
mov
lcall
inc
cmpsl
shr
popa
iret
dec
mov
adc
mov
lahf
jne
xor
ret
jbe
ja
aam
xchg
inc
mov
mov
xchg
or
mov
movsb
loopne
sub
outsb
mov
rorb
pop
inc
jmp
aad
rcll
jnp
xor
fisubrs
popf
mov
fldenv
sbb
aas
mov
jg
jbe
aad
lds
mov
loope
jns
mov
aas
jns
pop
push
outsl
rcrl
mov
adc
fcmovnb
insb
inc
popa
mov
jns
lods
adc
loop
loop
rorb
inc
rolb
push
mov
push
hlt
xchg
push
loope
cld
cmp
and
xor
sub
inc
push
jnp
ja
fsubrl
lcall
xor
rclb
pop
clc
xor
sbb
sti
mov
cmp
pop
iret
in
pop
push
adc
inc
sahf
xlat
push
imul
jecxz
into
jnp
add
xchg
push
js
popa
stos
jl
jl
movsl
aas
pop
fists
add
aam
pop
mov
push
pop
mov
xchg
and
dec
repz
cltd
jg
add
jns
addb
dec
xchg
pop
lods
lret
sub
jecxz
out
shll
xor
dec
adc
add
leave
out
mov
cli
aaa
sub
pop
add
nop
xchg
inc
jnp
pop
mov
ret
movlps
out
push
ds
ficomps
adc
stc
and
mov
pop
dec
jns
push
sbb
iret
jnp
lock
pop
mov
iret
shll
pop
out
xor
jg
cmpsl
jle
imul
sti
fbstp
dec
sar
out
hlt
icebp
push
and
inc
add
and
mov
xchg
mov
subb
icebp
mov
in
popa
mov
jnp
add
inc
or
jns
sub
inc
cwtl
icebp
ss
cltd
outsl
lds
scas
sahf
repz
leave
fildl
decl
nop
adc
jecxz
cli
or
jnp
ss
rcll
sti
mov
and
mov
lcall
push
mov
aam
fiaddl
add
mov
out
mov
in
or
mov
sbb
repnz
mov
incb
xchg
into
jmp
cmp
sub
inc
or
jnp
je
add
xlat
jecxz
decl
loopne
jmp
fdivrs
jmp
add
sbb
sti
mov
out
fistl
ljmp
in
test
orb
insl
dec
mov
fiaddl
mov
scas
out
sub
and
fidivs
push
insb
aas
lea
arpl
ja
outsb
stc
mov
mov
push
add
loop
pop
dec
jecxz
call
shl
aas
jbe
push
in
sbb
mov
fstpt
mov
rcll
push
jp
push
xorl
and
cmp
aad
mov
jnp
mov
aaa
mov
inc
mov
inc
mov
xor
repnz
pop
cli
xor
int
das
daa
sub
mov
sbb
jg
ret
nop
xor
jae
mov
xor
fxch
outsb
and
adc
in
sbb
jae
pop
xchg
pop
scas
adc
mov
xor
adc
add
sbbb
pop
test
pop
test
leave
sbb
lret
pop
inc
mov
sub
in
aas
add
outsb
out
leave
repnz
stos
push
fcomip
jb
push
test
and
sbb
or
xor
mov
sub
and
mov
mov
add
cltd
xchg
xchg
loop
mov
add
in
nop
sbb
cmp
dec
cmp
mov
cmp
icebp
test
icebp
xchg
out
and
iret
pop
cmp
lds
mov
adc
div
aam
fwait
mov
loopne
aad
in
xor
jae
xchg
in
lds
inc
arpl
pop
push
sti
into
orl
orb
fisubrl
sub
cltd
cwtl
lret
pop
cmp
jo
jno
xor
std
mov
mov
insb
in
clc
aaa
or
repz
out
stc
gs
js
mov
mov
cmc
push
rcrb
pop
cli
aas
pop
add
and
inc
add
loop
pushf
mov
or
jo
jns
ret
mov
ja
arpl
mov
sub
loop
adcb
in
mov
aaa
mov
push
mov
add
gs
test
jnp
in
fldl
push
mov
adc
xor
push
mov
inc
shlb
into
adcb
jmp
lds
cmpl
out
mov
pop
inc
aad
arpl
mov
inc
lret
jnp
test
mov
std
xor
cmp
clc
int
out
lock
test
lods
mov
test
and
add
or
popf
and
cld
mov
inc
jae
mov
fildll
jecxz
xchg
sbb
and
int
sub
out
pop
cli
fnstenv
cmp
and
jne
or
jo
hlt
in
out
scas
fimull
xor
inc
rorl
lods
xchg
mov
in
lds
out
int
in
les
mov
out
mov
xchg
imul
mov
out
divl
xor
popf
fisubrl
pop
das
inc
in
lcall
rcrl
in
push
jno
add
mov
xchg
mov
xchg
shll
dec
jno
pop
push
pop
pop
adc
ljmp
cmp
mov
sub
pop
push
dec
jge
lret
rcll
jne
arpl
pop
cmp
xchg
jecxz
ret
shr
and
push
aas
push
pop
cmpsb
mov
lret
mov
xor
andb
sub
icebp
jge
imul
push
push
jns
jl
ds
lcall
cli
shlb
nop
pop
ds
inc
xchg
sub
gs
test
ja
xchg
cmp
sub
sarb
lods
jp
aas
lret
jne
enter
inc
in
stc
sti
jns
fistpll
stos
cmpsb
fcomip
lahf
add
xchg
jle
inc
movsb
mov
sbb
je
outsb
imul
movsb
arpl
orps
movsl
push
and
ja
jle
mov
pop
roll
cmp
insl
outsb
aaa
fcoms
outsl
mov
out
mov
imul
push
loope
jp
or
push
push
mov
and
xchg
fcoml
push
xchg
dec
adc
add
xorb
push
lock
inc
jge
jp
outsb
arpl
cmpsl
fiadds
lret
jno
cmove
sbb
xrelease
inc
test
int
dec
lock
popf
xchg
mov
and
call
cltd
add
and
inc
jnp
movsb
xchg
je
jns
inc
outsl
in
add
add
dec
out
lahf
mov
cmp
out
xchg
and
notl
subb
mov
and
pop
pop
popa
aad
jecxz
bound
enter
in
dec
dec
loopne
jmp
loop
jle
ljmp
and
mov
int3
lret
push
lret
push
cs
push
insl
in
xor
add
and
std
arpl
test
or
in
add
dec
cmp
cs
ja
shl
fcmovb
add
adc
push
mov
stos
pop
adc
push
push
push
cli
pop
or
repnz
aas
dec
imul
add
and
psubusw
jns
bound
scas
adc
in
ljmp
xchg
xchg
inc
mov
jb
js
movsb
aam
and
cmpsl
mov
aas
in
les
lock
pop
incl
fadds
jmp
mov
mov
ja
mov
stos
out
test
sub
and
je
loopne
dec
clc
imul
jp
push
inc
mov
lds
cmp
clc
movsb
add
loope,pn
stc
je
mov
or
mov
leave
jge
mov
inc
test
bound
popa
jle
mov
fcomp
sti
xchg
cltd
popf
mov
test
sbb
aaa
jmp
ss
dec
jle
cmp
push
xorl
imul
je
fisubs
mul
ret
mov
cmpsb
dec
jbe
fbstp
mov
jnp
popf
add
decb
mov
repz
in
sub
pushf
cmpb
pop
lock
fnstsw
ja
pop
in
scas
xchg
sub
dec
insl
addr16
dec
push
sub
movsb
cli
imul
sub
mov
inc
and
shll
inc
cld
das
mov
mov
lahf
push
popa
push
in
pop
jns
aas
mov
cmp
mov
jmp
mov
sub
pop
repnz
scas
ficoml
pop
cwtl
clc
sub
out
lds
mov
xchg
mov
jae
cwtl
sub
paddusb
push
dec
sbb
fwait
push
inc
jns
push
mov
push
mov
outsl
ret
sarl
xor
pop
cs
adc
mov
punpckhbw
insb
pop
mov
punpckhdq
clc
mov
jbe
psubusw
sub
into
jmp
inc
adc
xchg
pop
stos
jbe
repnz
push
iret
out
cwtl
fnsave
mov
js
shrb
xchg
xchg
rdpmc
test
scas
cltd
in
sbb
ret
sub
bound
testl
dec
inc
jmp
or
fisubrl
xlat
xchg
push
xchg
cmp
sti
incb
push
push
dec
aas
push
mov
mov
fdiv
xor
aas
push
mov
pop
and
fadds
dec
pusha
mov
pop
popf
into
add
mov
ds
cltd
in
jns
divb
sbb
mov
and
mov
jo
add
push
and
sti
fs
jmp
addr16
add
test
cmpsl
fildl
shrb
test
jae
mov
rclb
out
mov
pop
jmp
cs
test
sbb
mov
cmp
cmp
pop
inc
imul
and
scas
xor
out
add
in
push
int3
stos
mov
rorb
push
test
out
pop
mov
jnp
daa
jns
add
xlat
jns
pop
xchg
jns
cmc
out
popa
idivb
cmpl
inc
mov
out
sbb
dec
addr16
mov
mov
pop
jno
aam
mov
push
jp
out
js
fbld
xor
inc
popf
mov
lar
jb
jns
test
jp
jnp
test
add
arpl
cmp
adc
scas
imul
hlt
std
inc
lods
jne
rcll
pop
cwtl
outsl
std
jge
mulb
lcall
add
stos
pop
push
dec
pop
into
add
dec
cmp
pop
in
pop
and
hlt
test
clc
arpl
stos
cli
jg
mov
sub
in
and
sbb
cmp
sbb
pop
aam
xchg
test
mov
cmpsb
ficompl
jo
jle
fstpt
push
mov
inc
sbb
movsl
cmp
ret
test
and
loope
cmp
lds
pop
inc
sbb
dec
addr16
and
jno
dec
stc
xor
in
scas
mov
inc
and
ret
stc
iret
loopne
mov
outsl
and
pop
push
ljmp
add
outsb
je
je
loopne
iret
imulb
bound
mov
lret
mov
mov
stos
xchg
jns
xchg
add
jae
test
jnp
cmc
cmp
mov
inc
jnp
jg
push
aas
adc
xor
pusha
jle
xor
popf
repnz
clc
negl
and
push
cmp
popa
mov
or
aaa
shrb
gs
cmp
sbb
jae
fistpll
mov
pop
mov
cmp
adcb
xchg
aam
mov
cltd
das
stos
pop
xor
ret
jns
out
jno
lcall
setno
lret
daa
fcos
inc
jae
aas
jle
aas
js
scas
ljmp
loope
fdivrp
pop
rcll
das
mov
mov
loop
stos
mov
fidivs
ficompl
sbb
jle
clc
repz
adc
xchg
sub
dec
sub
js
dec
pop
add
icebp
leave
lock
jle
jb
jo
cmc
add
ja
jno
cli
cld
repnz
jl
std
fwait
ljmp
and
faddl
xorl
xorb
es
mull
and
fistl
or
add
sub
sbb
add
out
lahf
mov
jnp
xchg
movsl
fistpl
mov
loop
das
cli
cmpsl
jge
dec
fisttpl
xor
into
jbe
test
inc
jne
cmp
sahf
add
es
dec
dec
dec
lahf
add
mov
enter
and
sbb
std
int
dec
je
in
xor
out
xor
push
mov
jle
push
jns
add
movsb
lahf
into
fistpl
sbb
cmp
xor
fimull
stos
push
inc
pop
add
jns
sub
jo
lahf
arpl
scas
inc
stos
mov
mov
jnp
into
cmp
push
cmp
loopne
ja
pop
mov
fwait
outsl
mov
call
rorb
clc
in
into
addb
cs
pop
call
stos
pop
shl
loop
jne
sub
mov
sub
test
mov
inc
cmp
pushf
loop
add
insb
out
jb
mov
mov
fdivrl
scas
cmp
mov
test
mov
or
adc
adc
or
xor
jae
mov
xor
shrl
jns
and
mov
cltd
pop
std
ja
dec
or
adc
cmp
aad
test
hlt
xor
add
add
ret
xchg
mov
cmpl
ja
mov
mov
push
rsqrtps
lock
push
pop
sti
jge
jnp
sbb
popf
cmp
bound
push
xchg
adc
mov
sub
jecxz
pop
shrl
aas
pop
out
mov
adc
cmp
arpl
lret
fdivrs
jae
cmp
mov
addl
aam
call
test
in
or
mov
xchg
jp
add
lds
dec
bound
pop
xchg
lret
sarb
xor
repz
repz
push
popf
arpl
sub
jb
repnz
add
xor
sub
enter
push
jnp
xor
outsl
jno
jo
test
loopne
out
push
push
orb
fs
jae
shl
mov
loop
lret
movd
inc
cmpsb
add
mov
ret
pop
ret
in
jge
jnp
cmpsb
bt
ret
out
push
clc
arpl
arpl
sbb
and
hlt
inc
adc
cli
push
stos
fwait
jno
cmp
inc
sbb
sti
fisubs
loopew
ja
cmp
cmp
mov
and
sti
inc
inc
xchg
mov
sub
ljmp
mov
jae
js
dec
pop
sub
ret
mov
rclb
shll
inc
mov
dec
subl
es
rorl
sub
shlb
xorb
and
mov
testl
nop
jp
push
xchg
movsb
mov
jae
and
mov
aaa
pop
test
add
popa
jl
mov
pop
scas
fldl
cs
hlt
push
bnd
aam
push
sbbl
test
push
pop
leave
push
les
cmp
cmpl
mov
push
pop
adc
sahf
test
xchg
in
subb
xchg
aad
dec
cli
mov
rorl
std
push
sub
xor
subl
sub
pusha
jnp
lods
sub
cli
lods
xor
adc
fdivrl
je
jbe
ss
lods
mov
outsb
fisubl
rol
inc
ds
dec
outsl
xor
cmp
pop
pop
cmp
cmpsl
je
pop
add
fwait
in
xchg
das
pop
sbb
cmpsl
jmp
xlat
cmp
sub
insl
bsf
mov
mov
inc
pusha
add
cmpsl
aad
cmpsb
dec
mov
inc
and
mov
jb
inc
rcrl
jne
or
insl
cmp
movsl
mov
sub
sahf
add
ret
push
test
ss
push
icebp
mov
adc
rcl
adc
stos
insl
pop
sub
cmpl
sub
and
ljmp
out
mov
xor
jne
xchg
jae
xchg
in
leave
jle
or
jns
inc
dec
shll
loopne
mov
arpl
pop
lahf
loopne
sar
test
jg
mov
pop
push
fisubrs
repnz
dec
out
test
lcall
xchg
enter
sub
rcl
out
out
es
in
fmuls
into
cli
mov
inc
rcll
scas
mov
jge
fnstcw
test
lods
fdivs
lods
iret
test
cli
push
xor
ljmp
push
xlat
cmp
inc
and
aam
inc
fistpl
push
cmp
adc
dec
lods
push
fiadds
rcrl
adc
test
dec
jne
cwtl
add
lret
aam
fdivs
pop
es
out
out
lcall
jg
incl
mov
lret
jne
ret
aad
cwtl
sub
push
rcrb
cmp
pextrw
mov
shl
and
divb
mov
bound
aad
jae
fistpl
sbb
aad
cwtl
shrb
push
psllq
and
pop
mov
sarb
outsl
outsl
mov
mov
xchg
jnp
jge
aam
loope
lods
jmp
pop
iret
xchg
je
lahf
jecxz
add
lock
push
in
add
idiv
repz
jl
pop
pop
shrl
adcb
cwtl
sbb
lret
push
cwtd
repz
sbb
bswap
cmp
lea
js
xchg
or
scas
mov
cmpsl
ret
xchg
rcll
lock
sbb
push
rol
setnp
xchg
jb
mov
jle
pop
insl
outsl
mov
pop
or
stos
add
mov
xor
aam
xchg
ror
lcall
sub
test
mov
inc
shrb
jae
test
popa
add
or
outsl
dec
aas
ja
pusha
out
insl
xchg
leave
jae
pop
add
mov
cmp
fisttpl
xchg
mov
mov
jns
out
pop
xchg
and
ja
jnp
roll
jnp
incl
sti
lock
jnp
in
dec
and
in
add
push
mov
xor
cmp
inc
aam
or
dec
cli
cmpsb
pushf
add
stos
inc
movsl
sahf
mov
mov
clc
outsl
sub
xchg
inc
or
rorb
ljmp
fstpl
mov
jae
loopne
data16
je
jns
push
push
cltd
pop
inc
jg
pop
mov
and
incl
jns
lahf
shlb
xchg
xor
shrl
into
sub
cwtl
daa
mov
arpl
movsl
add
pop
mov
rorl
fdivrp
rol
and
or
lret
xor
dec
movsl
test
xor
lcall
mov
push
out
jns
push
jns
xchg
lock
xor
sbb
int
std
ja
or
pop
pop
mov
push
bnd
mov
in
int
fsub
repz
mov
jle
fsubr
gs
xor
mov
inc
pop
cld
popa
mov
dec
aaa
mov
roll
fucompp
daa
or
jmp
inc
jp
push
or
int
add
jnp
cld
push
inc
imul
xchg
mov
push
xorl
xchg
test
rorb
cmp
and
bound
pop
mov
push
sbb
add
enter
jp
es
idivb
mov
notb
and
xchg
pop
test
add
pop
jecxz
mov
mov
orl
mov
add
pop
jns
test
cmp
xlat
icebp
pop
pop
xchg
test
test
cmpb
jl
cmp
jge
mov
or
cmpsb
push
push
or
fs
dec
jnp
xor
push
addr16
mov
xchg
jecxz
jae
fwait
mov
lret
cltd
cmp
scas
ss
bound
out
mov
test
cmp
sub
aaa
or
adcb
rcrl
xchg
push
jg
notl
xchg
jge
test
rorb
mov
adc
insl
push
repnz
xchg
add
mov
rorb
add
pop
aas
pmaddwd
clc
fdivrl
mov
mov
pop
lret
inc
inc
jecxz
pushf
jl
addl
lods
push
jns
test
inc
or
jle
insl
inc
mov
icebp
loopne
test
fstpt
pop
mov
pop
lods
decl
push
xchg
sbb
mov
pop
xor
dec
psrlw
xchg
in
js
sbb
sbbb
lods
orl
icebp
cmpsb
repz
inc
sarb
shll
popa
clc
js
fimull
push
mov
fdivs
or
and
iret
dec
aaa
jae
test
inc
fdivr
mov
sbb
add
jle
daa
mov
mov
fsubr
leave
les
add
dec
inc
fs
loopne
adc
add
ss
and
clc
xlat
cmc
pop
icebp
dec
insl
pop
xor
jne
stos
mov
or
xor
mov
call
and
cli
mov
aas
jmp
stos
bswap
je
mov
mov
or
xlat
cli
jae
es
pop
or
clc
mov
and
js
and
rolb
jbe
stos
pop
dec
fldl2e
pop
pop
jae
out
ja
fld
cmp
mov
loope
sub
adc
shll
lods
lods
outsl
mov
sti
sub
fsubrs
and
nop
add
bound
loope
mov
scas
mov
and
outsl
aas
sub
aam
das
or
lret
fcmovbe
aas
jb
js
xchg
in
jbe
rcrl
xchg
hlt
xor
lret
mov
jno
stos
repz
test
mov
inc
xor
fistpl
mov
push
nop
add
test
mov
rorb
repz
aad
ficomps
cmp
mov
cld
inc
pop
ljmp
mov
lods
ja
pop
lods
dec
aam
je
add
les
sub
mov
sbbb
divl
punpckhbw
loopne
int3
test
adc
mov
sbb
cmp
xor
shrl
enter
pop
sahf
lret
nop
aam
iret
in
xchg
cmp
pop
fdivrs
jg
xor
push
mov
mov
jmp
jmp
and
out
jns
jecxz
cmpsb
jnp
mov
mov
xchg
push
mov
fdivl
xlat
mov
adc
or
sbb
xchg
aas
movsb
pop
xchg
mov
movsl
push
mov
lcall
outsl
mov
xlat
mov
and
aas
mov
fdivl
adc
in
mov
push
pop
pop
sub
dec
xor
add
fistps
xor
jg
mov
ds
repnz
cmp
push
mov
xchg
cmpsl
cli
jp
cmp
dec
xchg
mov
and
test
mov
fcomip
leave
icebp
aad
andb
ficompl
and
js
mov
mov
js
xchg
mov
ds
in
jb
jge
call
push
lds
test
cld
cmp
cmp
xor
push
cli
scas
out
sub
or
pop
jle
lea
mov
sbb
sbb
mov
xchg
and
cli
add
pop
push
jg
mov
iret
in
cwtl
sbb
mov
jb
xor
ror
flds
add
xchg
gs
test
cs
int3
lret
insb
xchg
movsb
icebp
xlat
dec
push
mov
int3
mov
pop
push
fcoms
dec
loope
sbb
mov
outsl
test
inc
test
xchg
call
leave
add
xor
mov
pop
out
mov
cmpsb
jmp
leave
fs
mov
test
xor
sbb
arpl
xor
test
dec
xchg
lahf
inc
test
icebp
pop
cmc
pop
jmp
pop
ds
cmp
jge
jmp
fbld
mov
jno
pop
and
cld
std
mov
and
lds
mov
ja
cmc
push
mov
cmp
out
and
lock
add
cmc
stc
xor
add
mov
aas
arpl
mov
loopne
repnz
jmp
mov
jmp
jo
xchg
sbb
sub
cmpsl
and
punpcklwd
movsb
push
pop
arpl
push
popa
cmc
andl
jmp
outsl
xchg
sub
test
repz
aaa
inc
test
mov
xchg
loop
dec
aam
mov
cmp
jnp
test
loopne
adc
in
addr16
jecxz
pop
pop
push
dec
call
stos
jp
dec
add
mov
lock
add
mov
cwtl
stc
jp
add
loopne,pt
in
push
fiaddl
jo
test
jo
jp
pop
jp
push
sub
loope
mov
mov
xor
test
xor
cmpsb
cmc
lds
xor
aam
mov
mov
mov
lods
lret
sub
sub
out
in
or
jge
inc
jnp
outsb
test
popa
mov
dec
fcom
rcl
jnp
rorb
lea
icebp
pop
adc
cmc
call
mov
sahf
mov
inc
mov
test
mov
in
aas
bound
leave
jnp
shrb
notl
ds
add
sarb
movb
addr16
aas
jge
cmp
and
adc
lcall
pop
inc
stos
outsl
mov
sub
add
lahf
push
dec
mov
movsb
push
aas
jle
ljmp
and
testb
pop
jge
mov
icebp
or
popa
sub
mov
fmuls
cmp
pop
mov
and
jmp
std
adc
jae
cltd
cmp
cmp
or
mov
dec
adc
std
xor
mov
jns
out
pop
lret
sub
pop
inc
adc
jge
push
ja
fadds
push
sub
dec
sti
fcmovnu
pop
ss
cltd
sub
and
push
fsts
add
jmp
jnp
cwtl
add
mov
mov
outsb
jne
rcrb
rdmsr
mov
cmc
push
xor
xchg
jle
cltd
cmc
bound
shl
push
rcrl
xlat
sarb
ret
hlt
pusha
and
out
pop
mov
imull
dec
cmp
add
fs
xchg
push
mov
jb
out
mov
loope
jp
aam
dec
inc
and
sahf
jb
dec
jbe
cmc
add
shll
sti
lods
cmp
das
out
dec
std
mov
cmp
pop
mull
outsl
cmp
fiadds
mov
scas
mov
xor
pop
scas
jnp
mov
jns
cld
jg
shll
ficoms
and
mov
les
mov
dec
stc
jl
test
leave
cmpsb
repz
lret
xlat
push
mov
jno
popf
mov
aad
pop
jns
jbe
jbe
sarb
add
cmp
or
sar
test
xchg
add
mov
adc
scas
jnp
xchg
adc
movaps
push
mov
fxch
popa
out
fsubs
pop
jge
cmp
and
lcall
ficomps
repnz
aas
inc
pop
and
adc
mov
jne
call
cmp
jae
pop
fbld
xor
sbb
dec
pop
sub
jae
xchg
das
pop
mulb
sub
popa
imul
dec
cltd
mov
xchg
jb
sbb
push
lock
jle
movsl
js
cltd
push
or
insl
mov
cmpsl
cld
in
push
add
outsb
in
mov
mov
inc
lock
jge
lret
mov
adc
popf
pop
mov
mov
cld
or
lret
jge
mov
in
jg
outsb
sub
dec
test
lcall
shrb
push
pop
stos
int3
das
mov
inc
loop
or
fbld
nop
jbe
je
mov
repz
mov
jl
arpl
add
lock
clc
mov
push
sbb
arpl
pmaddwd
in
cs
xor
adc
lds
orl
in
mov
inc
lcall
push
push
sarl
add
leave
imul
imul
xchg
lods
fcmovb
push
int
sbb
mov
xchg
lea
mov
mul
xchg
outsb
in
cmc
jno
mov
aaa
pop
jo
out
xor
stos
loope
cmp
adcb
outsb
movsl
xchg
mov
mov
test
shl
insl
imul
and
mov
iret
std
inc
dec
add
push
pop
shll
rolb
xlat
mov
out
sbb
xchg
lds
jmp
fimull
movsl
dec
lret
mov
mov
mov
add
icebp
or
xor
mov
ret
ficoml
test
daa
mov
cmp
lods
test
push
adc
jae
mov
xor
repz
jg
jnp
popl
adc
shll
xor
mov
jnp
jp
mov
mov
jmp
sub
mov
xor
mov
dec
xor
or
int
xchg
add
adc
add
ss
sbb
icebp
les
sarl
push
int3
push
test
xchg
fidivrs
push
clc
push
adc
jecxz
and
ret
jnp
add
jmp
push
out
fcmovnu
shlb
pop
jg
loope
repz
sub
aad
mov
jae
mov
pop
sub
mov
dec
scas
push
mov
jmp
jge
fistpl
pop
repnz
and
pop
adc
test
sub
jp
jb
in
inc
lcall
shrl
fstps
mov
mov
dec
clc
dec
in
add
les
xorb
outsl
stos
sti
negl
dec
loop
fadd
mov
stos
cmp
out
xchg
test
mov
jb
or
in
out
cmpb
jg
std
gs
mov
mov
fwait
ljmp
loope
jmp
gs
jmp
sbb
into
dec
or
in
cltd
mov
sub
sarl
movsl
xor
push
shlb
das
inc
fsubrs
popa
xchg
loopne
nop
sahf
mov
cmpb
add
mov
mov
pop
push
sub
in
cmp
xor
fisubrl
ret
sarl
orb
mov
mov
ror
sbb
insb
sub
inc
addr16
cltd
hlt
jo
mov
inc
mov
popf
pop
adc
mov
test
pop
adc
incl
repz
and
jne
lcall
jb
jno
mov
sub
iret
fdivl
pop
data16
mov
jge
push
int3
add
xor
out
sub
push
bound
adc
adc
stos
outsl
rcrb
inc
mov
addr16
mov
bound
pop
or
xor
int3
mov
mov
out
inc
arpl
sbb
jge
stos
cmp
jns
std
das
mov
sbb
xchg
pop
fdivs
jg
dec
lds
outsl
adc
shlb
cmp
ret
mov
jp
pop
lret
dec
sahf
sbb
out
cmp
mov
cli
inc
movsb
push
inc
jecxz
test
xor
jg
xchg
ficompl
daa
jp
loopne
iret
xchg
sbb
xor
xor
ret
and
xchg
and
mov
sub
push
jg
popa
or
jg
push
add
mov
pop
fimuls
cmp
pop
rclb
cli
mov
mov
xchg
cmp
pop
pop
mov
sub
adc
sahf
nop
arpl
out
cmp
sub
ja
popf
roll
cmc
repz
sub
pop
push
mov
jb
sub
sbb
jle
xor
inc
inc
jnp
mov
jnp
test
add
adc
mov
cmp
mov
xlat
and
dec
jp
push
ret
mov
into
hlt
sbbb
cmp
lods
sarb
fisubrl
xor
sub
pop
pop
loop
scas
test
icebp
stc
in
popa
cmpsl
lds
pop
das
test
jbe
add
roll
push
cmp
jns
xchg
cmp
rolb
sbb
rcr
xorb
mov
data16
pusha
pop
push
es
cwtl
mov
sti
rdpmc
loope
add
test
inc
adc
lods
insb
idivl
rcrb
test
out
jge
aas
pop
fcmove
movl
pop
sub
dec
fstpl
mov
jae
icebp
dec
jno
or
movsl
pop
mov
sbb
jnp
push
lea
popa
cmp
movsb
and
imul
inc
jb
inc
in
and
je
jmp
repnz
sbb
les
jns
fdivr
shl
rcr
fistpll
jnp
adc
mov
lea
jecxz
push
rorb
loopne
cli
pop
rcrl
xchg
iret
sbb
les
xchg
into
subb
sarl
sbb
insb
cs
movsl
sub
aam
dec
adc
popf
adc
mov
push
jnp
cmp
subb
aad
inc
call
xchg
fimull
ds
pop
mov
shll
mov
jmp
inc
jecxz
popf
fcomi
rcrb
pop
inc
fs
clc
popa
jl
xor
and
pop
data16
insb
out
int3
push
xor
insb
xor
xrelease
decl
sahf
mov
aas
addr16
test
jl
cld
mov
push
jnp
out
mov
cwtl
cmpsl
aas
jbe
dec
loope
xchg
es
cmp
adc
pop
int
movsl
or
or
xchg
ret
insl
pop
mov
push
std
iret
jne
movsl
push
mov
xor
das
ja
mov
xchg
rorb
incl
test
jb
repz
sahf
sahf
movsb
xor
imul
stos
and
lods
cli
adc
add
jl
sub
fdivp
iret
je
mov
cmp
sub
dec
movsl
cwtl
testb
sbb
out
iret
xor
lret
jp
out
lods
enter
loop
enter
pushf
inc
pop
fmuls
mov
cmp
les
rorb
addr16
mov
iret
movsl
or
lock
cli
inc
cmpb
xchg
add
fwait
xor
adc
sub
add
mov
movsb
in
rorb
pop
inc
gs
dec
mov
iret
push
and
or
icebp
addl
xchg
aam
lea
test
xor
cmp
jmp
bound
cs
int
test
cs
mov
sub
cmp
insl
fucompp
lcall
push
lds
cltd
mov
std
jecxz
jae
mov
jns
push
inc
xor
cltd
hlt
movsb
test
stos
xor
ret
rdtsc
mov
jecxz
popf
bts
rcll
imul
mov
add
mov
arpl
push
and
cltd
fistps
ja
popa
xchg
inc
pusha
mov
ret
cs
or
mov
adc
pop
sbb
dec
mov
jnp
mov
mov
cld
inc
xor
sub
arpl
mov
push
loop,pt
lahf
jl
mov
nop
aad
push
push
push
sbb
lock
repz
mov
popa
pop
inc
repnz
inc
jl
jbe
xor
repz
popf
inc
push
add
add
inc
jne
jp
push
jp
outsb
add
jno
leave
insb
inc
mov
jmp
loope
loope
ret
pop
xchg
mov
rsm
sbb
fdivrs
mov
xor
jno
mov
leave
jns
rcrl
inc
pushf
adc
imul
mov
arpl
aam
mov
subb
repnz
dec
push
push
sti
cltd
fsubp
rolb
mov
les
cld
cmp
jle
jg
stc
sub
sti
inc
mov
arpl
out
orl
jmp
scas
outsb
jb
call
inc
inc
test
fldt
mov
scas
push
bound
jl
ret
jb
iret
leave
std
xor
in
and
push
mov
adc
add
jns
sahf
fdivr
test
or
shlb
into
loope
out
movsb
enter
fcoms
enter
or
sti
cmp
xchg
scas
mov
mov
ret
shll
lods
or
aas
pop
dec
jge
loop
cmp
mov
push
jns
js
pop
fisttpl
push
pop
outsb
and
xchg
les
xor
repnz
pop
addl
ja
test
out
int
inc
shrl
insl
imul
mov
mov
iret
xchg
inc
inc
das
les
xor
pop
fidivl
mov
or
sets
outsl
inc
mov
lds
ljmp
sti
adc
arpl
mov
movsb
xor
sbb
adc
stos
jle
push
xor
decl
cltd
pop
rcl
push
pop
jbe
stos
icebp
jp
adcl
jns
add
sub
dec
popf
cltd
divps
push
push
mov
jl
pushf
push
adc
outsb
cmp
sub
jg
sbb
aam
enter
test
dec
loopne
fisubrs
int3
mov
jns
mov
sub
add
stc
push
cs
jae
fistl
insb
lods
jns
push
stc
lods
lret
pop
xchg
lcall
mov
insl
adc
xor
sbb
repz
cli
stos
push
jnp
into
ret
stos
sbb
aaa
inc
push
jae
cmp
pop
mov
imul
jns
jg
pusha
iret
out
pop
inc
pop
or
pop
inc
bswap
push
pop
sbb
push
cmp
daa
push
ret
add
test
push
nop
in
les
nop
dec
mov
imul
xor
push
mov
jno
repnz
lahf
jp
aas
mov
bound
fnsave
xor
jne
inc
or
leave
add
fsubl
lods
in
loopne
into
pop
inc
jb
jbe
adcl
seto
shll
jle
adc
mov
fisubrl
push
inc
in
and
jg
push
aam
add
ret
jbe
insl
push
jne
or
cmp
and
push
sarl
mov
mov
dec
inc
aas
mov
sarb
popa
mov
cmp
pushl
pop
rolb
out
leave
pop
inc
mov
jg
shl
adc
jle
out
fcompl
loopne
mov
mov
inc
push
or
pop
push
cmp
into
inc
push
loopne
cmpb
loop
lock
jle
lahf
movsl
xor
pop
mov
sbb
jns
cmp
std
sbb
es
xor
fisttpll
jmp
xchg
addr16
inc
push
insb
jp
sti
jne
ja
mov
lahf
mov
add
out
out
dec
fs
dec
dec
enter
cmp
enter
pop
mov
sahf
lcall
cmp
jbe
aaa
notb
outsb
pop
pop
loop
mov
ss
push
fucomi
test
jl
pusha
test
xor
sbbb
pop
fwait
bnd
pop
out
push
push
lods
cmpsb
xchg
mov
add
push
pop
repnz
mov
mov
jnp
inc
xor
pop
cmp
ljmp
push
mov
mov
push
out
lds
mov
mov
in
mov
jg
or
jb
jnp
xor
imull
jo
mov
pop
mov
mov
mov
out
dec
or
ds
cltd
lcall
in
jle
cmp
mov
movsl
cli
lea
push
lock
ss
fimull
clc
stos
cmp
jns
inc
cli
cmp
cmpb
adc
pop
or
pop
iret
pop
add
jae
aam
lods
popf
mov
es
xor
out
mov
fs
cmc
lcall
xlat
adc
idiv
ja
push
pop
add
adc
stc
clc
jns
mov
shl
sbbl
or
ffreep
pusha
enter
push
dec
or
adc
pextrw
or
ror
stc
xchg
dec
xchg
fdivrl
cmpsl
cmp
lret
ret
scas
push
jae
xor
sub
lret
fiaddl
jmp
adc
xor
in
hlt
out
or
pop
inc
outsb
mov
aas
inc
testl
cmp
mov
pop
xor
outsl
daa
push
mov
cmp
xchg
push
mov
jb
push
pushf
ljmp
lds
les
push
je
mov
inc
out
repz
ds
xchg
and
dec
and
fwait
aas
jp
adc
xchg
jecxz
pop
mov
outsl
inc
icebp
xchg
mov
xchg
adc
mov
fists
or
out
cmc
xchg
adc
dec
inc
mov
or
mov
in
sub
mov
mov
sti
test
imul
sarl
lods
push
ds
aam
adc
sbb
lods
test
mov
dec
mov
fwait
xchg
test
repz
negl
test
push
mov
cmc
xchg
ja
mov
mov
jne
loope
jbe
imulb
loopne
int
adc
and
jmp
mov
lock
jnp
pop
mov
mov
scas
repz
in
outsb
outsb
jne
loop
sbb
lock
lret
icebp
mov
inc
cmp
dec
add
decl
jg
sbb
cmpsl
rcrl
pop
rcr
aam
repnz
jnp
repnz
mov
or
lea
jg
repz
sub
adcl
jl
mov
and
iret
cmp
ja
cmp
jno
aaa
mov
data16
and
xor
popa
dec
test
lcall
xchg
sti
lods
jbe
sub
dec
xchg
jmp
xor
clc
xchg
in
daa
jle
pop
mov
dec
lea
add
lods
aas
pandn
cmp
add
mov
jns
nop
das
loop
mov
jb
push
repz
mov
ret
outsb
push
xorl
ret
inc
cmp
mov
dec
dec
or
jnp
mov
sub
addr16
push
jb
loope
sbb
je
jns
mov
xor
xchg
mov
insb
cmpsl
scas
mov
mov
mov
push
repz
or
push
decb
mov
sti
nopl
and
sub
cmp
pop
es
mov
inc
bound
or
cmpl
call
loope
mov
adc
hlt
imul
dec
inc
jg
cmc
xor
lods
jmp
sbb
in
jae
les
inc
jnp
mov
scas
fucomip
jno
scas
push
js
inc
mov
popf
fldl
and
sub
outsb
repz
jae
fcompl
shrb
jbe
icebp
sub
add
jnp
mov
jo
into
push
hlt
jb
lret
inc
inc
movsb
push
dec
mov
jg
rorb
sbb
stos
jae
cmp
nopl
jge
push
or
pop
in
lea
and
xor
imul
sbb
mov
out
repz
xor
push
out
xor
push
pop
pushf
test
mov
cmc
adc
out
out
mov
idivb
shrb
mov
inc
push
mov
outsb
lock
cvtps2pd
pop
lahf
push
mov
in
mov
out
add
push
fimull
push
xchg
nop
mov
cld
punpckldq
xchg
push
mov
sti
scas
out
dec
mov
xor
pop
and
stc
pop
into
fimull
movq
fisttpl
aaa
jl
mov
mov
mov
call
mov
add
mov
icebp
stos
adc
mov
lods
fisubrl
ss
mov
jns
mov
data16
lahf
sub
push
cmp
into
andb
push
jmp
bswap
aas
in
ret
pop
fsubr
jg
mov
sarb
loopne
xor
subb
out
dec
adcl
inc
out
fprem1
icebp
add
jecxz
loop
rcpps
inc
cmp
pop
popf
add
rcr
movsb
cmp
sbb
and
imul
pop
lds
or
inc
mov
stos
jp
xchg
dec
xchg
jmp
push
popf
sbb
leave
jecxz
jle
rorb
shlb
enter
loop
mov
std
push
jp
fstpl
andb
sub
adc
push
mov
loope
into
cld
inc
arpl
adc
sub
sbbb
cld
mov
inc
and
sti
repz
fisttpl
and
cmp
fcoml
outsb
push
xchg
or
xor
push
loop
cs
outsl
roll
and
jb
sti
mov
insl
ds
and
xchg
adc
test
imul
std
int
jge
orl
test
lret
inc
out
pusha
inc
jno
jl
jnp
dec
jbe
mov
inc
mov
dec
xlat
iret
dec
negb
fmulp
dec
icebp
mov
insl
out
aas
bound
mov
and
sub
je
std
xchg
divl
xchg
pusha
push
jg
stos
and
psubq
scas
push
push
andb
mov
and
mov
sbb
clc
ljmp
aam
dec
mov
sarl
mov
and
loopne
je
arpl
jmp
or
or
xor
jns
jnp
test
in
fwait
scas
add
jl
bnd
jns
scas
lds
adc
inc
les
cli
sarb
dec
sti
jbe
cli
and
mov
jo
sti
push
movswl
xor
xchg
sti
pushl
push
jp
push
pop
mov
rcrl
cmp
mov
ljmp
cmp
clc
push
adc
mov
arpl
and
or
jnp
stc
mov
xchg
mov
test
in
jg
ror
mov
lea
notrack
push
xchg
dec
cmp
dec
clc
push
dec
sbb
les
sbb
xor
jns
notb
sub
fidivl
call
ret
shll
mov
and
out
lods
in
out
bound
pop
dec
jb
mov
mov
jmp
jp
test
sahf
jo
sub
jnp
mov
mov
ret
pop
xchg
out
sub
popa
aad
aaa
or
pop
inc
fs
pop
pop
adc
xchg
add
xchg
and
int3
ret
mov
cmp
adcl
mov
int3
pop
xchg
cld
ds
jge
rolb
js
pop
ss
push
xor
lahf
in
xchg
movd
and
imul
repz
xor
push
cmp
mov
test
mov
mov
dec
jge
lcall
ficomps
fnstenv
jp
jns
mov
jge
xchg
roll
fsubp
xlat
jg
mov
jns
daa
faddl
inc
shlb
xchg
xlat
pop
daa
and
rorb
addb
and
mov
xchg
mov
arpl
fdivl
aam
mov
and
lcall
cmpsb
mov
decl
js
iret
test
sti
xchg
push
mov
in
ret
iret
into
mov
fldt
jmp
movsl
std
xchg
cld
mov
pop
out
in
outsb
xor
sbb
aam
iret
arpl
fstpl
loope,pt
mov
data16
out
dec
sub
xchg
repz
cmp
mov
xchg
test
pop
push
jo
icebp
xchg
pop
mov
add
out
cmp
push
cmpsb
iret
mov
ss
shlb
les
loopne
nop
and
movsl
jmp
push
inc
pop
jno
dec
nop
in
dec
add
add
mov
fstpl
or
push
arpl
aas
mov
cmp
stos
adc
out
imul
scas
lahf
cmpsb
es
jp
inc
cmp
pop
jge
shl
and
sahf
dec
mov
fwait
repz
outsl
cs
fcomip
scas
std
loope
outsl
and
push
pop
loopne
pop
sahf
mov
jmp
push
mov
sub
leave
sbb
xor
outsl
dec
popf
mov
mov
loop
sti
stc
ficoml
mov
jne
ret
je
dec
sti
lret
jns
xor
lcall
xor
add
aaa
enter
adc
jb
mov
inc
incb
popa
test
cmp
aaa
fcmovne
lds
inc
jno
pop
jecxz
lcall
fucomip
dec
outsl
cmp
mov
cmp
jmp
xor
scas
fimull
arpl
popa
pop
mov
inc
iret
ror
jb
loopne
jge
mov
outsl
paddd
cmp
mov
fdivs
filds
pop
movsb
jno
lods
fidivs
pusha
sarl
inc
xor
push
push
js
ret
push
scas
lods
inc
dec
and
dec
push
pop
pop
les
sarl
dec
or
pop
std
icebp
sub
fisttps
pop
mov
push
data16
jno
jnp
leave
jbe
and
inc
push
sarl
cmpsb
adcb
cmp
pop
pop
xchg
mov
test
pushf
stos
aas
repz
lea
int
test
fmull
lock
push
std
cmp
pop
mov
sahf
testl
xor
xchg
xchg
pop
std
xchg
push
pop
loop
mov
rcr
je
das
pop
aas
leave
stc
adc
xchg
and
cmp
xor
inc
lods
scas
arpl
psubusw
xorb
add
xchg
pop
repnz
inc
pop
mov
int
cmp
xchg
pcmpeqb
mov
inc
mov
sub
add
ret
push
out
xor
decb
ret
out
cmp
pop
decb
mov
arpl
stos
jmp
leave
xor
pop
mov
insb
push
test
fistps
xchg
aam
fmul
imul
lds
lds
arpl
sarl
ret
sbbb
and
xchg
out
adc
iret
sbb
push
add
mov
sub
adc
shll
cli
pop
mov
ja
pop
cmp
pop
mov
cli
inc
mov
cli
mov
push
vpsubb
lds
jp
xor
pop
cmp
div
ret
roll
jne
pop
dec
repz
lret
cmp
mov
xchg
aas
jl
mov
fneni(8087
mov
cmpsl
shl
rolb
int3
jp
dec
ljmp
ror
movsb
test
enter
sbbb
xor
loopne
and
mov
test
mov
sti
loope
aas
scas
inc
ja
sbb
sbb
std
imul
mov
jbe
xchg
imul
fstpt
roll
pop
xor
mov
jns
push
jbe
mov
inc
adc
mov
fucomi
setle
shrl
jmp
mov
sbb
sub
pop
test
xor
mov
mov
mov
out
paddusw
dec
adc
jo
aad
stos
cmp
icebp
mov
mov
jns
shrl
mov
ljmp
inc
clc
adc
stc
inc
psubq
mov
cmp
repz
cmp
lret
pop
xor
xchg
xchg
in
test
xor
jno
daa
fadds
sub
pop
jmp
cmp
inc
js
inc
xor
inc
push
into
lret
sahf
jae
bound
inc
pushf
add
sbb
push
stos
xchg
jnp
loop
cli
xchg
cwtl
jb
sbb
mov
xchg
and
push
das
push
dec
fisubl
div
mov
mov
mov
mov
and
xchg
xor
pop
sbb
out
clc
aaa
popf
test
cmc
push
and
lods
punpcklbw
lahf
ss
jecxz
insb
fistps
or
je
mov
test
imul
test
mov
out
ficomps
arpl
stos
leave
in
aas
dec
repnz
loop
sbbb
pmullw
in
pop
sub
js
imul
jae
repz
sarl
jnp
sahf
shrb
repz
rorl
mov
jl
rcl
popf
subb
outsb
dec
outsb
cmpsl
sub
lahf
clts
out
cmp
mov
push
icebp
jge
or
mov
add
and
test
jb
jge
lret
jne
mov
aam
xchg
add
testb
sbb
rorb
mov
and
out
jge
dec
xchg
ficompl
sub
cmp
out
cld
cmc
cmp
xor
mov
cmpb
addr16
repz
fiadds
mov
jle
popf
mov
inc
js
arpl
shl
shlb
pop
fwait
fs
sbb
add
push
lret
pop
pop
lods
insb
push
xchg
sarb
fcmovb
aas
pop
jb
popf
fdiv
out
dec
xchg
pop
jno
push
adc
jg
mov
mov
or
jb
fsubp
lods
inc
sbb
cmp
ret
movsb
test
loop
ds
push
xchg
cmove
inc
push
push
mov
fwait
pop
call
cmpsl
in
dec
cmpb
jae
cmc
aaa
lahf
in
or
stc
insl
sub
add
enter
mov
imul
adc
add
adc
pop
hlt
leave
adc
push
xchg
xchg
rorl
xor
fcom
xor
loopne
call
jge
jae
imul
xlat
inc
jl
lcall
cli
mov
jns
lods
cmpsb
incb
imul
cmpl
jo
jg
aad
cli
pop
test
jmp
jo
les
inc
push
lods
popa
xchg
add
and
jns
fidivs
add
ja
ficomps
xor
dec
ja
sub
dec
xchg
fisubl
divb
add
push
push
xor
pusha
pop
outsb
in
jge
lods
out
mov
jbe
pusha
mov
cmp
out
xchg
push
xlat
cwtl
fisttpl
push
add
stos
xor
inc
pop
fisttpl
dec
adc
xchg
push
jno
dec
sbb
xchg
jle
hlt
mov
dec
add
xchg
mov
mov
mov
pop
pusha
inc
cltd
cmp
sti
pop
sub
add
adc
mov
imulb
jne
in
mov
xchg
push
adc
test
push
insb
adc
jnp
stc
sub
pop
mov
xor
add
cmp
mov
test
icebp
pop
ja
fistpl
add
negl
popa
shll
sahf
sub
lock
sub
std
push
jae
jg
sarb
pop
lods
out
adc
jecxz
xorl
pop
ret
icebp
dec
jns
and
jbe
sbb
cmp
add
add
arpl
mov
and
je
cmp
dec
sbb
repnz
ljmp
xchg
push
pop
fiadds
or
pop
push
sbb
mov
sbb
cltd
mov
aaa
jnp
sahf
mov
dec
xor
adc
stos
mov
push
rcrb
ljmp
ret
fsubrs
jo
fnsave
sbbb
out
sbb
daa
jb
popf
es
pop
aas
iret
fmull
or
aad
hlt
mov
filds
ja
shlb
stos
push
out
mov
ja
push
jne
or
cmp
dec
fnstcw
fidivl
dec
nop
loop
jp
lret
iret
test
cwtl
sbb
imul
jp
pop
bnd
out
sahf
adc
gs
cli
cmpsl
clc
cmp
and
in
xor
push
fstps
ja
loopne
push
mov
jo
pop
add
in
outsl
minps
in
pusha
jne
mov
mov
gs
or
cltd
pop
aam
mov
xchg
fiaddl
ljmp
mov
js
xchg
fmul
pop
pusha
ret
rcr
push
rcl
add
mov
mov
jmp
lahf
clc
mov
push
mov
xor
shll
clc
pop
jge
loopne
idivl
inc
dec
pop
xor
dec
jmp
scas
jl
add
push
out
addr16
rcpps
out
addr16
mov
jnp
mov
xlat
inc
mov
mov
push
mov
cmp
mov
jge
sbb
jl
testl
sti
or
ret
test
jl
cmp
pop
fistl
lahf
icebp
adc
pop
sbb
and
sbb
mov
push
lcall
out
inc
xchg
cmc
mov
aas
loop
sti
bound
sahf
sbb
xchg
mov
iret
loop
jge
mov
pop
test
lret
dec
insb
adc
call
leave
add
sahf
pop
fs
lds
jns
gs
les
shrl
fadd
imul
sbb
pop
in
xchg
sbb
mov
pushf
xor
mov
ret
adc
dec
pushf
sarl
shll
inc
test
aaa
rorl
jne
int
xor
out
sbb
jecxz
push
jl
or
repnz
test
pushf
pop
mov
addb
and
sub
lock
push
mov
pop
cmp
stos
or
cmp
add
and
jnp
mov
shlb
mov
lahf
dec
mov
pop
pop
aam
xor
out
mov
mov
movsb
movsb
or
movsl
mov
xchg
gs
movntps
out
xchg
xchg
push
inc
jg
clc
inc
test
les
jle
rolb
into
ret
mov
jg
mov
cmp
les
pusha
xchg
and
lahf
xchg
pusha
or
xchg
xchg
nopl
test
push
int
cmpsl
rcr
call
int3
xor
add
dec
lods
loope
jo
or
imul
sub
dec
fldl
js
pop
push
out
jae
inc
popf
add
pop
pop
and
enter
sahf
jecxz
add
mov
ds
or
jne
and
inc
hlt
arpl
sbb
rol
int3
sub
cmpb
xor
sti
jnp
cmp
mov
loope
cmpsb
cmp
repz
push
or
and
cmpsl
or
lcall
and
shrl
sarl
repz
mov
orb
sub
cmp
cmp
jmp
adc
xchg
dec
ja
jp
or
pushf
or
icebp
das
imul
mov
xor
and
dec
jg
jno
sbb
rolb
imul
mov
fldenv
add
ds
mov
lret
pop
mov
sbb
movsb
cmp
std
jmp
mov
test
in
fldcw
stc
cmp
xor
les
clc
ja
xchg
movsb
popf
imul
add
out
mov
dec
jb
test
enter
xchg
fisubrl
push
sbb
xchg
fs
cmp
inc
jb
cld
mov
xor
pop
int3
sub
push
lea
clc
mov
js
mov
cmpsb
xor
sbb
nop
cs
jne
ror
cmp
fs
pop
pop
mov
loopne
dec
bound
add
fisubrs
xchg
sub
aam
insb
push
dec
bound
cmp
enter
repnz
jne
mov
fistpl
jecxz
fs
dec
fiaddl
ret
cwtl
jle
push
cld
aas
inc
lret
mov
dec
leave
add
mov
sub
sbb
cmpsb
xchg
add
in
loop
pop
inc
mov
fildll
sub
sub
pop
insb
or
mov
lods
loopne
xchg
dec
enter
xchg
push
in
dec
out
sub
scas
inc
test
iret
out
inc
orl
pop
movb
jb
fiadds
movsb
int
dec
fcmove
hlt
shr
fisubrl
xchg
ljmp
out
cmpb
movb
cmpsb
bound
mov
push
jp
daa
mov
shll
test
test
lcall
insl
adc
fildll
mov
xchg
jmp
mov
int
lret
test
pushf
insl
cmp
test
cmp
lcall
xchg
test
adc
dec
movsl
xchg
addr16
inc
loopne
out
sbbb
popl
daa
inc
and
add
imul
pop
rcll
lret
js
xchg
sarl
les
push
sti
add
cmp
rol
aad
inc
pop
pop
mov
push
jg
repz
btr
iret
cli
sbb
jg
roll
cmp
xor
mov
and
push
pusha
sahf
add
mov
or
add
out
sub
dec
mov
mov
bound
decl
mov
outsb
xor
cmp
jmp
pop
pop
lock
fmul
leave
icebp
aas
faddl
sarl
lock
jmp
adc
xchg
cmp
xchg
xor
mov
int3
jmp
push
or
mov
sub
pop
mov
ret
scas
leave
sbb
repz
pop
adc
test
std
lcall
mov
pop
cmp
lahf
adc
shrl
xlat
sahf
rcll
scas
or
mov
ret
inc
je
dec
mov
cmpsl
je
jnp
popl
psraw
lret
notl
sti
sub
repnz
lea
aas
pop
inc
bound
shl
adc
cmp
push
pop
ljmp
pusha
stos
rorl
scas
inc
notl
insb
cmp
cmp
lods
ja
sarl
inc
sti
mov
shl
mov
dec
shlb
xchg
push
mov
cwtl
test
push
ja
fdivs
lret
adc
xor
push
mov
repz
pop
inc
jle
mov
push
pop
sbb
jb
xchg
inc
fnsave
add
lea
in
out
cmc
mov
adc
repz
movsl
repz
out
sti
jl
jnp
add
pop
xchg
xor
popf
mov
ljmp
es
nop
sub
mov
dec
inc
loope
jecxz
inc
inc
movsl
rorb
lahf
flds
std
or
in
out
es
out
or
mov
lds
jge
push
inc
mov
mov
mov
dec
or
jmp
in
push
arpl
mov
mov
sarb
inc
add
inc
mov
loop
aaa
ja
pmovmskb
inc
push
lret
mov
out
adc
inc
dec
xchg
arpl
xchg
mov
pop
aaa
repnz
mov
ret
dec
jnp
imul
cmpb
push
push
and
inc
fisubrl
cmp
sbb
mul
pop
and
hlt
ds
inc
out
dec
fdivrs
pop
ret
enter
insb
jg
in
daa
sbb
subb
dec
fisttps
mov
popa
mov
adc
dec
jns
repz
pop
hlt
push
lods
iret
addl
insb
sahf
adc
movsl
ja
pusha
xchg
or
sahf
jb
pusha
fistpl
shufps
nop
fistpl
xor
xor
mov
jmp
xchg
sbb
mov
andb
out
out
add
rcr
ja
pop
jl
sub
jnp
mov
and
addl
rolb
dec
adc
mov
cld
mov
cmc
loop
pusha
out
xlat
mov
fs
inc
movsl
icebp
mov
push
xor
xchg
xor
inc
lock
cli
jo
xor
pop
adc
jg
ret
add
fcom
data16
fdiv
insl
lock
fstpt
stos
jmp
pop
insl
aas
inc
imul
pusha
repz
or
inc
jb
lds
cmc
leave
dec
adc
ja
pop
das
cmp
cmc
lcall
pop
add
xchg
add
out
lret
out
adc
xlat
xchg
popf
lret
insl
ja
in
arpl
shll
ret
and
sahf
lock
js
xorb
fidivs
sbb
push
add
popf
scas
sub
cltd
rorl
fs
movsb
xor
jnp
lahf
pop
lods
enter
xchg
insl
hlt
pop
mov
jb
cli
icebp
push
fwait
or
push
jp
pop
xchg
in
cmp
and
mov
aas
or
vprotw
in
add
jg
or
shrl
out
or
in
and
pop
add
xchg
clc
jecxz
jmp
mov
jl
sub
loop
jg
rcrl
xchg
js
loop
inc
js
cmpsb
outsb
xor
lock
aas
rorb
add
popf
iret
imul
subb
loopne
push
cld
aas
in
xchg
leave
sahf
mov
xor
popa
outsb
repz
jne
mov
jnp
imulb
lock
mov
addr16
jbe
jnp
jecxz
mov
xchg
cld
dec
pop
cmpsl
jb
or
pushf
fisttpl
push
call
imul
mov
ret
pop
adc
push
adc
cmp
dec
scas
inc
jg
or
aas
bound
adc
out
jne
cmpsl
ret
out
add
mov
jb
enter
outsb
mov
push
nop
sub
add
lcall
cwtl
xchg
mov
mov
inc
add
sbb
push
in
jge
jmp
cli
sti
inc
xchg
fsubrs
jae
fistpl
dec
push
clc
out
mov
mov
shrb
cltd
cmp
adc
mov
fidivrl
repz
pop
decb
push
push
cmp
mov
dec
mov
mov
cmp
aam
out
cmp
dec
jae
and
jne,pn
ss
jnp
mov
jo
roll
jbe
mov
sti
arpl
in
mov
mov
or
xchg
dec
mov
pop
cmpsb
dec
cmp
xchg
in
pop
std
jg
inc
xchg
cmc
test
jno
stos
mov
shr
es
out
dec
arpl
dec
mov
in
movd
xor
repnz
out
xchg
xor
mov
psllw
cld
dec
cwtl
int
xchg
xor
rcrb
andb
in
xor
lret
fistpl
in
fnstsw
mov
shll
and
mov
xchg
cmp
addb
or
cmpsl
jo
mov
add
mov
jno
mul
stos
pextrw
mov
popa
addr16
sahf
hlt
out
scas
mov
addr16
popf
fildl
in
aad
loopne
mov
popf
sbb
idivl
jmp
pop
popf
insb
adc
mov
mov
pop
or
jg
lock
nop
mov
dec
push
fdivl
sub
mov
dec
sarb
mov
inc
int
lods
adc
cmp
xchg
dec
jb
and
jns
inc
lock
in
inc
mov
adc
into
lea
ljmp
repz
and
cmp
addb
pop
cmp
and
rcrl
and
mov
icebp
dec
aas
push
push
add
pop
xorb
das
dec
mov
sub
fadds
jmp
outsb
lahf
sti
fistl
rorl
xchg
add
jmp
out
divb
mov
repz
and
ljmp
jmp
imul
popa
xchg
mov
sub
ja
out
cmp
and
dec
adcl
aas
shlb
dec
lret
sub
je
popa
mov
lods
jno
or
jns
xchg
and
xor
inc
mov
minps
rclb
into
lcall
sbb
and
sub
enter
test
jns
adc
out
and
lcall
jmp
scas
jno
push
enter
loopne
lret
push
cmp
aam
hlt
sbbb
sub
mov
xchg
push
xchg
jne
fs
aad
popf
push
cli
inc
push
add
cld
rorb
inc
xchg
pusha
packuswb
inc
xchg
andb
cmp
test
push
pop
iret
adc
cmp
aas
xor
dec
pop
lods
sbb
lock
in
mov
push
and
xchg
aad
lahf
cmp
pop
test
lds
mov
mov
jp
jns
jmp
bound
inc
sbb
jae
lcall
lds
xchg
xchg
fucomp
sti
add
inc
decb
jge
pop
sub
cld
jge
lea
rorb
pop
inc
ja
sti
in
flds
xor
push
and
xchg
out
pop
jnp
push
clc
push
mov
cs
clc
pop
cmp
sahf
xchg
mov
sbb
xor
lods
sub
or
test
dec
test
sbbb
aam
pop
xchg
and
scas
jno
xchg
push
outsb
and
jno
sbbb
jno
lahf
lahf
inc
cmp
jmp
stc
cwtl
fxch
rolb
movups
adc
cli
mov
pop
mov
jp
push
jecxz
adc
sub
aad
rcll
mov
paddsw
test
out
xchg
cmp
es
pop
dec
fwait
call
xchg
daa
jno
push
out
xchg
imul
cld
sub
mov
out
push
imul
cmpsb
jno
dec
iret
insb
xchg
mov
lods
pop
fnstsw
ffree
jp
mov
inc
dec
inc
sti
cwtl
pop
pop
mov
dec
sbb
ds
lret
loopne
movntps
fimull
sub
jno
imul
ret
into
lcall
cmp
loop
fsubs
scas
int
inc
add
add
add
jae
jnp
movsl
sub
inc
aas
mov
rcrl
jecxz
add
mov
or
jns
mov
pop
mov
out
and
mov
or
ja
xchg
mov
imul
loope
test
out
cmp
and
push
mov
fdivs
inc
pop
jge
cmp
fcomp
mov
cmp
push
push
sbb
mov
popf
pop
pusha
out
xor
pop
dec
insl
into
cmc
jg
adc
push
cmp
leave
mov
jnp
xlat
push
addl
popf
jmp
xor
or
div
push
pop
ja
aas
je
paddsw
or
xor
pop
cmpb
aad
inc
ret
test
icebp
ss
out
jp
pop
push
aad
push
cmp
iret
xorl
xor
jae
jl
pop
cwtl
cmp
adc
xor
push
push
xor
sub
leave
jge
cmc
imul
insb
xor
out
sub
jge
pop
pxor
icebp
cmpsl
arpl
lcall
stc
lcall
out
jno
ret
and
shll
pop
and
mov
je
xchg
sbb
imulb
outsb
xor
xchg
add
imul
arpl
out
cmp
and
dec
mov
scas
xchg
fcmovne
rcrb
insb
mov
fidivs
int
fdivr
cmpsl
fstpl
xor
mov
xchg
fs
jno
push
icebp
arpl
or
out
stc
or
or
rorb
push
mov
sub
push
aam
vcmpneqss
xchg
pop
fldcw
cwtl
out
cwtl
test
xchg
stc
test
outsl
cld
maxps
and
mov
das
fbstp
loopne
orl
mov
andl
cltd
bswap
jge
jl
int3
fcomps
mov
pop
push
imul
idivl
inc
xor
cmpsl
mov
mov
pusha
mov
push
lds
push
mov
dec
pop
addb
ret
fisubs
repnz
ja
loop
xchg
stos
les
cmp
lcall
sbb
jmp
cltd
cs
and
push
xchg
jb
imul
mov
sbb
pop
in
ja
sarb
test
mov
not
addb
leave
ja
enter
jnp,pt
aas
addb
test
mov
adc
cwtl
repz
pop
jle
mov
push
lock
arpl
dec
scas
cmc
add
lcall
xor
in
loop
stc
pop
cmc
pop
ret
fcomps
iret
mov
adc
mov
cmp
cmc
and
dec
xchg
je
cli
outsl
not
jecxz
push
dec
shr
push
dec
jge
jo
lock
jge
dec
imul
inc
push
fistpll
sti
add
sub
cltd
ja
repnz
lahf
push
adc
mov
stc
mov
cmpsb
lcall
fidivrs
inc
jnp
xchg
jle
loop
mov
outsl
push
aam
push
test
pop
enter
lock
xorb
imul
fcompp
out
bound
and
aad
popf
scas
jb
push
add
rcrl
mull
addr16
ja
jb
mov
add
in
repz
sti
sbb
cmp
jns
test
in
xlat
mov
jecxz
outsl
ja
mov
fists
jle
ja
ret
dec
rcll
inc
push
in
xor
sti
pop
lahf
push
pop
adc
add
jecxz
mov
shl
pushf
stc
cmp
data16
jnp
xchg
js
sbb
and
jae
pop
or
cmp
jne
push
cmpsl
jnp
stos
mov
leave
sub
dec
pop
mov
aad
mov
jb
bound
repnz
jnp
mov
jno
hlt
xchg
adc
int
repz
adcl
sbb
call
loopne
add
push
jbe
lret
dec
pop
lods
std
repz
push
or
stos
leave
orb
inc
mov
pop
dec
test
mov
fisubrs
push
mov
mov
push
xchg
pop
mov
rorl
push
sub
inc
leave
mov
sysexit
out
push
xchg
mov
sbb
movsb
dec
aas
loope
push
jecxz
jg
pusha
movsl
iret
add
mov
dec
ds
pop
fimuls
fidivl
add
aad
and
stos
cmp
xchg
adc
jecxz
jg
jp
fwait
cmp
test
lahf
push
jns
lods
call
lods
cmp
xlat
adc
test
pop
mov
into
sar
lock
dec
cld
inc
xchg
in
cld
jbe
orb
jl
sub
decb
sti
outsb
mov
jb
mov
out
sets
cmp
adc
sti
outsb
ret
jnp
leave
fldt
add
push
mov
jno
jecxz
cld
fadds
xorl
movsl
mov
or
pusha
mov
aaa
mov
movsl
iret
in
cmc
into
add
jge
out
sbb
dec
add
fildl
inc
jge
xor
mov
jnp
or
mov
push
xlat
es
scas
pop
lahf
das
std
icebp
insl
sub
test
mov
jl
ror
cli
sub
adc
cmp
adc
ja
imul
jbe
stc
addl
mov
loope
jae
jne
push
lcall
out
popf
in
add
les
loope
cmpsl
jnp
push
add
cmp
add
and
add
push
aad
mov
mov
cwtl
jb
cld
cmpsl
add
push
ja
sti
push
shlb
jp
jnp
imul
xchg
mov
and
xchg
or
mov
or
stc
aad
inc
or
insl
movsl
xchg
imul
sub
fisttpll
fnsave
imul
arpl
xchg
fistpl
cmpl
out
aas
pop
mov
cli
out
out
movsb
out
dec
pop
push
std
mov
mov
in
jns
arpl
xchg
mov
pop
orl
imul
add
fwait
dec
xor
test
repz
fdivrs
inc
jae
cwtl
lds
sub
sbb
jp
xchg
popf
popf
mov
scas
adc
clc
and
pop
inc
cmpsw
in
cmp
push
lock
les
push
gs
ds
imul
flds
push
add
cmpsl
dec
call
insl
pop
aad
mov
ffreep
inc
cmp
data16
or
imul
add
iret
filds
pop
stos
pop
fcomp
repz
icebp
push
xchg
orl
xchg
xor
dec
pop
or
jns
jp
add
repnz
iret
xlat
sub
dec
push
pop
inc
pusha
adc
inc
mov
rolb
jb
aam
xrelease
xchg
mov
fwait
sbb
adc
jl
lock
xchg
inc
scas
out
stos
xchg
les
or
xor
xchg
mov
sbb
outsb
inc
daa
cmp
fsubl
pop
inc
and
ficoml
sbb
cmp
fldcw
pop
fimull
movsb
jns
push
std
cmp
in
xor
leave
add
cmovbe
push
repnz
mov
cld
add
aaa
adcl
or
scas
dec
je
dec
add
shr
out
sar
xchg
das
sbb
sub
jae
xchg
jg
loope
ds
into
jns
scas
fnstcw
insb
xlat
mov
sbb
jp
loopne
jmp
pop
aas
dec
lcall
mov
lods
push
xchg
shl
out
inc
push
roll
mov
imul
lock
int3
fbld
fs
aaa
cmc
bound
loopne
rcr
aam
lea
sti
int
test
pop
cwtl
xchg
xchg
mov
xchg
jg
pop
pop
lea
mov
int3
faddl
pushf
sbb
les
and
jg,pt
lods
sub
sbb
xorl
popa
xchg
xchg
jno
add
inc
hlt
jecxz
cmpb
sarl
cmp
jb
add
jecxz
dec
jns
loopne
jp
mov
cmpsb
jp
fs
stc
in
pop
push
cmpps
cmc
scas
pop
cltd
xlat
mov
jg,pt
push
in
push
fs
in
es
sbb
je
push
pause
and
xor
xchg
outsb
xchg
gs
inc
jp
push
aad
cmp
pop
cltd
movsl
inc
pop
dec
in
add
scas
push
jns
inc
mov
das
nop
mov
stc
subb
jbe
dec
lods
icebp
dec
lcall
addl
mov
inc
push
xlat
in
pop
xchg
sbbl
push
push
jl
and
mov
push
aad
sbb
sbb
inc
pop
out
sbb
jmp
push
inc
and
add
dec
inc
icebp
cmp
mov
icebp
mov
cmp
pop
xchg
cmp
jmp
std
mov
ljmp
inc
loopne
fisttpl
or
xor
enter
js
test
jo
mov
pop
loope
adc
push
add
lea
add
push
das
mov
mov
icebp
idivl
push
sti
cli
loopne
push
xchg
add
jns
out
fisttps
add
sub
in
fcompl
sub
jns
mov
paddsb
dec
aad
inc
clc
inc
jg
daa
jb
rcrl
push
sbb
push
rclb
dec
mov
mov
mov
sbb
fwait
sbb
subb
inc
sti
jno
mov
js
push
mov
pop
mov
dec
pop
fimuls
stc
xor
jle
pop
sti
push
out
push
and
dec
push
dec
addr16
or
sub
or
mov
or
fadds
mov
ds
xchg
fcom
dec
ds
mov
aam
jo
imul
jns
or
dec
jecxz
fcoms
lods
iret
je
and
cmovl
repz
shr
pop
jecxz
mov
pusha
lea
inc
leave
jp
inc
push
cmp
mov
push
fidivrs
sub
in
xchg
jecxz
inc
shrb
repz
test
push
imul
shrl
mov
mov
pop
inc
sbb
inc
cld
aas
push
pusha
pop
push
mov
lahf
jne
mov
sbb
stos
test
inc
rolb
les
in
rcrb
cmp
std
test
into
cmp
frstor
sarb
adcl
pop
xor
lahf
push
mov
pusha
je
dec
jns
and
aas
fnsave
sbbl
inc
xchg
imul
sbb
or
push
sbb
push
pusha
xchg
fistpll
jle
inc
iret
jne
imul
fistpl
fimull
jo
inc
push
add
add
push
cs
xchg
loopne
sahf
rclb
arpl
jl
dec
lret
dec
jge
cld
cmp
out
push
decl
hlt
js
inc
jns
mov
repnz
jno
or
cmc
pop
xor
movd
adc
xor
push
mul
push
jnp
lods
and
les
mov
lcall
push
jae
in
mov
xor
jge
ja
jno
mov
dec
adcl
sbb
push
repz
stos
mov
dec
inc
aam
mov
sti
clc
and
jb
test
clc
jns
adc
into
mov
imul
mov
cli
mov
mov
std
test
and
aas
rolb
pushf
movsb
nop
call
in
jge
cvtdq2ps
push
std
mov
lods
cmp
fadds
jb
push
imul
outsl
cmpsl
cmp
pop
test
jecxz
pop
mov
dec
push
mov
cli
mov
lahf
xchg
shll
sub
lcall
fstpt
insb
jl
or
mov
pop
aas
add
or
cld
cmpsb
jno
add
jae
scas
popa
imul
rcll
in
add
mov
popa
fs
mov
rcrb
or
add
pop
sbb
cmp
or
les
push
xchg
jns
add
inc
dec
mull
clc
shlb
xor
rol
cmp
mov
jle
mov
mov
cltd
jae
inc
mov
push
inc
ljmp
loope
jmp
dec
int3
cmp
adc
inc
xlat
fdiv
or
fwait
cld
jns
dec
fldcw
lahf
dec
xorl
inc
sar
sbb
ret
sti
cli
repz
mov
sbb
mov
testl
inc
sti
adc
adc
outsb
gs
loope
mov
jo
xchg
inc
xor
insb
dec
cmpl
inc
mov
pop
xchg
jb
addl
sub
out
ja
cmp
incl
mov
xor
fmuls
shll
out
jmp
loopne
push
outsl
inc
ja
fsts
cltd
xchg
orb
pop
icebp
mov
mov
pminub
dec
fistpll
inc
test
sub
fs
je
pop
fcomp
dec
icebp
add
xchg
jb
jns
xor
jne
sahf
les
out
add
pop
popa
xchg
dec
cltd
cmp
cmp
out
and
inc
insl
push
add
pop
jnp
enter
repnz
enter
xlat
enter
testl
cmp
sbb
mov
sbb
cwtl
test
pop
push
pop
push
ret
or
lea
inc
mov
stc
int
repz
sarl
testl
mov
push
xchg
jo
jmp
or
push
jno
mov
jmp
pop
cmpsb
jecxz
and
leave
pushf
test
xor
add
jns
jno
xor
dec
jecxz
dec
mov
or
call
adc
adc
mov
in
adc
jb
dec
lds
jmp
lcall
inc
and
loope
jp
sub
xchg
sub
xchg
std
sbb
cmc
add
leave
jp
xchg
rcr
mov
add
in
inc
jg
popa
mov
psubsw
daa
popl
add
pop
outsb
addb
dec
mov
lahf
mov
and
outsl
imul
push
je
and
ss
sti
jno
out
test
xchg
pop
pop
mov
icebp
insb
rcrl
jnp
stos
pmullw
jmp
faddl
ret
pop
cld
outsb
push
mov
loop
push
cli
jb
hlt
dec
dec
mov
ret
rolb
test
out
fmull
xchg
mov
cmp
gs
jne
mov
sti
push
add
inc
sbb
xchg
xor
jg
popl
leave
sti
loop
mov
jle
mov
jnp
cli
or
outsl
paddd
xchg
rolb
lcall
cltd
popa
adc
roll
jecxz
or
out
xchg
cmpsb
aas
mov
push
mov
sarl
xchg
mov
pop
mov
imul
sarb
pop
fiaddl
int3
aad
stos
cmp
mov
int
cmovne
inc
fldl
or
je
sbb
les
nop
mov
lock
scas
or
cmp
shll
into
shr
cmpsl
dec
shrl
jo
stos
and
insb
insb
jmp
gs
jae
mov
push
xchg
mov
and
pop
xchg
shlb
pand
push
hlt
sub
xor
scas
ret
movsl
aas
add
xchg
dec
jns
fsubr
jmp
xchg
push
pop
pop
je
dec
ja
aam
jb
ds
icebp
scas
mov
mov
adc
shlb
orps
mov
lods
std
arpl
cs
scas
mov
and
jge
leave
and
scas
jg
mov
movsb
nop
out
jecxz
outsb
add
outsb
cmpsl
mov
int
repnz
jp
and
jl
jp
test
mov
js
mov
aaa
repnz
jecxz
sarl
addr16
cmp
xchg
sbb
cltd
sbb
dec
movsb
out
pop
mov
les
outsb
and
pusha
sbb
fidivs
call
hlt
mov
and
add
lea
stc
xor
and
cmpl
and
push
sub
mov
pop
pop
xor
shl
jae
cli
cld
pop
fwait
inc
nop
loope
call
cmpsl
pusha
inc
scas
outsb
mov
jecxz
fnsave
rorl
outsb
mov
dec
pop
cltd
push
dec
inc
repz
mov
sub
std
mov
bound
dec
push
movl
clc
icebp
push
jnp
jp
ja
cmp
pop
nop
pop
dec
push
stc
adc
mov
clc
lock
imul
mov
mov
sub
jns
cmp
push
jle
in
sub
scas
out
cmp
xor
fdivrs
cmc
into
rcl
add
xlat
int
inc
mov
test
xchg
jo
popa
cmp
push
mov
fistpl
leave
hlt
bound
pop
test
mov
jbe
inc
in
stos
dec
sahf
flds
sbb
repnz
mov
or
jb
jle
add
and
xor
or
jnp
jns
leave
pusha
test
add
lahf
mov
test
in
in
fcmovne
test
in
inc
lahf
frstor
movsb
cmc
in
aad
sarb
jnp
jns
shrd
mov
xor
adcb
pop
sub
mov
mov
int3
sarb
and
adc
xchg
xchg
dec
ja
jae
arpl
in
fidivrs
test
dec
inc
out
pop
clc
add
stos
loopne
pushf
jns
jl
ds
cmp
iret
ja
mov
pop
sub
mov
jne
xor
cmp
enter
cmp
icebp
repnz
inc
dec
loope
je
fdivl
mov
cld
sarl
inc
cmovno
jle
popa
and
jnp
popa
fcomps
fcomi
sti
outsl
call
out
out
cli
js
pushl
jb
rcrb
cld
pop
in
mov
testl
psllw
jnp
fs
outsl
sar
cmp
or
aas
dec
xchg
mov
popf
gs
into
mov
movsb
mov
scas
dec
mov
imul
lret
xlat
pop
rcll
stc
sub
push
inc
or
aad
jge
outsl
aam
jecxz
loop
push
xchg
cli
es
scas
dec
mov
out
xchg
cmpsl
scas
sub
lods
es
jp
add
mov
sbb
fldenv
jp
adc
fcmovu
in
xlat
push
popf
mov
jg
pushf
add
sahf
mov
outsb
push
or
repnz
adc
shll
scas
xchg
mov
leave
repz
lahf
mov
in
testl
xor
mov
roll
jns
ret
pop
shr
fcompl
jb
xor
lods
or
mov
gs
enter
out
cli
icebp
bound
ja
adc
pop
pop
fiaddl
lret
push
lahf
sbb
aas
cmpsl
xchg
push
jnp
xor
cwtl
push
xor
out
fbstp
fwait
sbb
mov
leave
xchg
push
aas
les
ret
jl
decl
push
ljmp
repz
popa
jne
mov
mov
addr16
fnsave
scas
fmull
test
cmpl
popa
mov
mov
adc
stc
inc
les
ss
enter
mov
or
push
adc
gs
bswap
mov
js
jno
cs
pop
push
dec
leave
xor
jns
mov
cld
mov
aas
pop
jg
rolb
clc
enter
out
sbb
xchg
xorb
jecxz
add
std
loopne
or
or
aad
mov
jp
mov
lcall
and
add
aad
xor
fisttpl
inc
loope
push
jp
add
jge
test
dec
inc
bound
cmpsl
dec
push
shlb
inc
cmp
fcoms
cli
cli
or
add
rolb
fidivrs
mov
test
pop
xchg
test
sti
int3
mov
movsl
inc
add
rolb
cmpsb
push
pop
lret
enter
cld
clc
fs
insb
or
in
cmc
jcxz
into
add
mov
nop
in
nop
adc
cwtl
add
xchg
mov
sbb
xor
in
and
in
int3
fistpll
jecxz
in
xor
or
orb
xchg
mov
add
arpl
in
cli
mov
repnz
loop
jg
jb
cs
cld
jb
sub
mov
xchg
ror
push
cmpsl
aas
inc
jns
mov
mov
jp
test
sbb
cli
fimull
cmp
mov
clc
or
lock
ds
loopne
notl
jl
sub
jnp
mov
jo
hlt
or
jmp
inc
mov
ret
sti
addb
leave
std
outsl
mov
mul
outsb
jae
pop
mov
cld
cmp
movsl
push
push
and
shll
arpl
sarb
cmp
outsb
add
movsb
adc
inc
adc
mov
inc
lds
imul
xchg
add
cmp
roll
jbe
ret
bound
fmull
sub
stc
ret
sbbb
fstpt
div
mov
daa
and
fistpll
fidivrs
jle
inc
mov
xor
fstps
shl
outsl
lds
mov
xor
pop
aas
daa
ret
sbb
push
sbb
pop
xchg
jb
das
jg
int3
stos
xchg
mov
inc
xchg
hlt
cmp
sbb
fdivs
aas
add
clc
mov
loopne
inc
and
stos
lret
ja
fnstenv
sub
das
adc
jns
mov
jb
jge
paddusb
out
jae
popa
lcall
jae
lds
mov
jb
mov
mov
das
mov
iret
nop
sbb
cmpl
jb
cmc
rcrl
imul
pop
and
cld
ds
bound
xchg
lds
jl
jbe
and
or
js
rorb
stos
clc
andl
rcr
jnp
imul
outsl
or
fists
repz
insl
lods
ds
cld
insb
jecxz
sub
mov
popa
dec
into
in
testl
jns
mov
rcrl
jne
fs
outsb
jle
iret
in
sub
push
fcomps
jns
mov
arpl
push
cmpl
add
dec
sbb
pusha
jg
in
add
mulps
in
xchg
add
je
fsub
mov
testb
mov
leave
mov
mov
out
pop
lock
stc
push
imul
cmp
cs
popa
add
adc
roll
out
pop
lahf
imul
add
and
push
sbbb
stos
cmp
xor
jp
decl
cmpb
idivb
add
lret
out
jle
sub
xor
test
sub
cmp
cmp
jbe
std
hlt
lret
leave
mov
lods
jle
mov
jns
and
jmp
jns
xchg
cmp
call
xor
cli
and
push
test
cmpsl
xor
sub
mov
mov
data16
jb
and
gs
push
fisttps
xchg
push
cmp
dec
ja
stos
orb
mov
sahf
mov
cmpl
xchg
in
and
test
push
sbb
inc
or
mov
or
and
add
sub
repz
shlb
lret
scas
push
cmp
xchg
or
sub
div
xor
popf
scas
push
pop
and
repz
aas
add
push
out
sub
iret
mov
lea
popa
fistl
testb
dec
andb
adc
xchg
mov
inc
sbb
fsubrp
stc
mov
imul
mov
mov
inc
pop
mov
jg
ffreep
orl
jge
repz
pop
jae
stos
add
js
pop
mov
add
repnz
jecxz
jle
aad
fdivs
outsl
inc
add
dec
pop
pop
dec
mov
adc
mov
arpl
jae
xor
ds
cmc
fwait
insl
lcall
mov
add
push
inc
mov
or
fwait
lahf
andl
hlt
out
or
xchg
jmp
rorl
mov
and
adc
cltd
not
lret
jp
flds
cmp
or
push
mov
jnp
add
xor
int3
inc
inc
dec
inc
push
sub
cmp
xor
xchg
pop
push
jg
jle
neg
xor
ja
cmpsb
mov
out
sbb
adc
mov
jne
mov
push
mov
mov
js
out
out
dec
jg
sub
xchg
push
jl
or
and
aaa
adc
test
ljmp
fnsave
loopne
leave
mov
and
jbe
dec
push
add
fidivrl
mov
insl
pop
jae
sbbb
xchg
or
add
test
daa
outsl
add
jecxz
orl
inc
and
outsl
dec
sbb
inc
stos
jae
in
orl
stc
in
ja
mov
lret
cmp
push
add
push
inc
xchg
push
add
jle
push
or
xchg
mov
dec
hlt
jno
pop
cld
adc
or
mov
sbb
andb
sub
aad
dec
loop
mov
xor
leave
loopne
daa
dec
add
arpl
bound
test
jns
fwait
mov
test
int3
idivb
pop
add
sarb
xchg
cld
out
lret
dec
ret
inc
xchg
inc
movsb
movsb
bnd
jbe
jb
lret
push
rcll
xchg
dec
lret
out
enter
cld
ret
cmpsl
lcall
inc
fmull
sbb
push
adc
add
lods
and
xor
ret
and
out
sahf
aas
pop
add
insl
jns
ret
mov
jmp
std
add
and
pop
mov
loopne
mov
es
mov
mov
mov
fistpll
insb
sbb
lahf
scas
stc
or
mov
dec
mov
mov
adc
rcll
mov
cld
int3
into
mov
call
popa
jns
jmp
and
and
mov
sbb
lret
and
dec
std
mov
inc
lock
gs
in
outsb
sbb
test
stos
pop
loop
mov
and
imul
aam
sub
loopne
mov
jecxz
dec
inc
jecxz
jecxz
fs
in
fwait
push
adc
pop
sub
xchg
es
rol
mov
imulb
jno
stos
rclb
jno
cmp
xchg
jae
push
push
add
cmpxchg
jecxz
iret
repnz
mov
loopne
movsb
inc
jg
idiv
lsl
push
and
arpl
movsl
ds
bound
insb
leave
mov
push
pushf
mov
outsl
loop
test
icebp
ror
stc
insl
divl
jg
inc
mov
fwait
stos
jg
leave
inc
iret
mov
sti
bound
into
iret
lods
push
jnp
push
repz
movsl
sarl
xchg
inc
mov
mov
jne
jo
jnp
outsl
jae
jnp
iret
insl
stos
jno
pop
jg
add
fildll
repnz
cmp
test
push
xor
and
bsr
popf
out
arpl
iret
fcmovu
out
sarl
mov
data16
xlat
lahf
mov
js
mov
jnp
ret
stos
mov
push
cmc
ret
lea
fsubrl
shll
in
push
pop
ja
sub
sbb
inc
push
inc
push
in
sbb
repnz
pop
les
jle
insl
xor
jle
data16
mov
fidivrs
pop
in
jecxz
imul
repz
add
xchg
rcrb
sbb
in
mov
dec
fwait
ret
cltd
pusha
lret
add
imul
rcll
int
cld
iret
repnz
inc
cltd
push
cmp
rolb
jg
push
and
icebp
outsl
in
clc
fstl
xchg
sub
es
stc
sub
lahf
lea
add
mov
js
roll
jns
dec
inc
adc
notb
stc
loop
lds
jnp
jp
jns
mov
jns
popa
jne
insl
stc
jae
push
mov
cmp
das
fldt
jle
mov
imul
inc
js
push
adc
xchg
repz
in
jp
cmp
mov
xchg
aad
fistps
in
pop
sbb
les
add
cli
ljmp
outsl
fildll
mov
inc
sbb
mov
test
or
aas
and
and
mov
jg
dec
push
fimuls
xchg
xchg
fdivs
dec
test
shll
sbb
rcl
fdivl
push
and
mov
clc
pop
sbb
into
ret
jbe
negl
repnz
pop
inc
xlat
add
stc
xchg
push
xchg
cltd
mov
add
mov
cs
jge
push
mov
cld
mov
fwait
dec
sbb
jmp
mov
out
fnstenv
stc
cmpsl
cmp
dec
repz
sti
mov
sbb
mov
call
xor
imul
jp
cli
imul
fmuls
movsl
sbb
lods
jge
xorb
add
inc
mov
pusha
add
icebp
test
imul
cld
repnz
test
loopne
cs
out
pop
popa
inc
or
jo
aas
adc
in
push
imul
add
enter
and
push
xorl
orb
push
ja
jecxz
sbb
jns
add
xchg
shlb
and
cmp
mov
xchg
and
mov
fistps
or
mov
pusha
push
sbb
sbb
popf
cmp
jg
push
loop
xor
shrb
dec
or
in
cmp
xor
movswl
pop
push
inc
pop
cld
cmp
fistpl
xchg
dec
or
dec
dec
jae
stos
jns
mov
shr
subl
mov
xchg
mov
xlat
jnp
pop
xchg
mov
inc
inc
jb
dec
xchg
or
ja
pop
cmc
dec
insb
test
test
insl
adc
outsb
sub
sbb
roll
mov
out
mov
outsb
and
jp
sub
add
out
lds
xchg
stc
jg
fidivrs
test
shrl
data16
subb
pop
bnd
insl
sbb
dec
sbbl
add
fsubs
lret
stos
ror
inc
jno
pop
adc
out
cmpsl
imul
jb
fs
mov
loop
add
out
je
xchg
inc
imul
es
js
cmp
dec
loopne
add
js
idivb
jns
mov
mov
inc
in
fwait
pop
adc
outsb
xor
push
mov
out
sahf
ss
or
arpl
repz
fsubl
decb
aas
mov
imul
and
xchg
jne
ja
arpl
fisubs
add
or
ss
adc
add
sbb
out
test
add
addb
pop
rcr
scas
popa
dec
aam
fildll
repz
jecxz
fistpl
xchg
sbb
jns
subb
out
sarl
sbb
jno
jp
mov
setl
jns
jmp
iret
pop
jo
in
pop
dec
aam
test
pop
test
mov
shl
and
mov
iret
mov
xchg
dec
dec
insb
test
dec
ror
xchg
insb
xchg
push
inc
xor
test
fnstcw
cmp
or
sbb
es
mov
cmpsb
repz
jle
pop
js
lods
rolb
arpl
dec
push
sub
push
std
aaa
ljmp
pop
out
testl
fists
mov
jmp
test
iret
sarb
jmp
arpl
jne
jg
and
testb
jno
hlt
adc
imul
cmpsb
jle
popa
jecxz
cmp
mov
xchg
into
or
sub
push
cld
je
pop
pop
sbb
push
fiadds
inc
jp
cltd
lahf
xchg
sub
popa
andl
xchg
adc
inc
sarb
jmp
pop
pcmpeqw
rcl
push
out
cld
into
decb
ja
iret
fdivl
adc
jbe
arpl
bound
stos
aam
test
sbb
ds
pop
jne
lret
adc
xor
fcoms
call
fisubrs
jo
and
bound
inc
xlat
xchg
xchg
cli
push
mov
pop
mov
xchg
sbb
lcall
adc
fstpl
pop
imul
add
fldl
leave
pop
jns
stos
pop
clc
ljmp
xchg
cltd
push
inc
call
std
xor
dec
fnstsw
push
clc
ja
xchg
xlat
push
js
push
fildl
arpl
jp
fmulp
mov
jg
fucomip
enter
mov
add
insl
cmp
fs
pop
outsl
inc
shll
mov
inc
mov
std
aas
xor
lret
mov
inc
jb
orl
lods
and
and
and
test
movaps
aaa
push
mov
insb
imul
adc
cmpsb
cmp
mov
in
pop
mov
pop
dec
xor
fisubs
jb
inc
xchg
inc
dec
mov
add
or
mov
subl
xor
sub
leave
ja
mov
loop
fstpt
pop
sbb
push
adc
scas
imul
push
fistl
dec
push
cmp
aas
push
fs
inc
push
and
xchg
aam
push
pusha
lcall
ret
mov
mov
pop
lods
mov
mov
xor
jns
fistpl
dec
lret
hlt
inc
out
jl
sub
fmull
popa
addr16
insl
insb
cld
sub
add
add
push
xchg
icebp
lret
sbb
pop
data16
jmp
test
clc
dec
jge
imul
maskmovq
negl
adc
pusha
repz
frstor
and
int
clc
sub
cmp
ja
sub
loop
sti
xor
dec
mov
shlb
jae
clc
xor
std
pop
divb
cmp
jp
jb
cmp
jbe
mov
loopne
aas
add
cmp
fidivrl
imul
xlat
test
xchg
cs
dec
jg
in
jge
and
inc
andb
loop
notl
push
incl
lods
in
ljmp
push
shlb
pop
or
ret
lds
add
repnz
sbb
xchg
lret
lea
mov
insb
xchg
push
insl
xor
sbb
scas
jnp
in
add
pop
jne
cmpb
je
mov
jns
jg
mov
scas
cmpl
shr
inc
xlat
or
pop
jp
pop
popa
cld
dec
xlat
mov
jae
fsubrs
mov
add
les
mov
addr16
test
gs
lods
pop
inc
jnp
inc
fdivl
ljmp
pop
push
jg
js
jno
mov
mov
in
out
leave
repnz
sub
pop
jp
and
dec
test
mov
add
cmpsl
fisttps
inc
loope
popa
les
cmp
je
sub
lcall
cltd
or
sub
dec
pop
pusha
sarb
add
imul
jno
jns
xchg
mov
lods
incb
jns
jp
jnp
repz
loopne
add
cmp
sbb
mov
sarl
add
cld
cmp
js
add
mov
lods
or
add
adc
fisubrl
movsb
pop
jmp
popf
lcall
scas
js
inc
cmp
cmpxchg
cli
dec
sbb
fsub
rorb
mov
rep
roll
cmp
les
mov
mov
jmp
ror
and
mov
frstor
push
leave
leave
clc
jg
out
and
or
inc
shl
xor
repnz
ds
xchg
lret
out
sbb
jbe
movsb
dec
lcall
es
jae
sub
mov
rcrb
and
pop
cmp
jnp
ds
inc
sub
je
ja
aas
fcompl
push
std
insl
or
xor
push
add
inc
push
cmpsl
mov
aam
out
mov
divl
or
add
movl
mov
and
sbb
loopne
add
push
adc
lea
pslld
dec
xchg
jbe
xchg
push
push
dec
sti
inc
outsl
mov
ds
jmp
lahf
mov
lea
mov
pushl
lea
nop
jb
add
push
sbb
gs
and
jnp
and
outsb
loope
pop
pop
scas
xor
jns
mov
testl
fisttpll
repnz
popa
lods
cmc
jecxz
sbb
in
cmp
pop
jg
in
cmc
jg
pop
lock
decb
jle
movsl
call
js
push
jns
or
xlat
and
jg
pop
jns
rcr
fcmovnb
inc
xor
adc
add
pop
mov
fadds
mov
xchg
xlat
jae
aam
lret
pusha
sub
int
push
jne
rorl
xchg
push
mov
repz
imul
jae
cli
inc
out
xor
xchg
cmpsl
pusha
ja
jg
mov
into
add
pop
push
int
aas
xor
scas
jge
sti
jns
jg
ljmp
into
lea
inc
and
incb
es
mov
and
into
mov
push
xchg
imul
loop,pt
stos
jecxz
scas
jnp
es
xchg
les
subl
roll
pop
enter
lea
outsb
fstpt
push
mov
cmp
test
addb
mov
lea
jg
test
in
leave
in
xlat
jbe
add
insb
mov
and
aaa
cmp
ret
dec
pop
std
ret
out
lahf
add
xchg
xchg
push
outsl
sbb
fdiv
cmp
xchg
out
pop
add
add
loop
push
ret
std
pcmpgtw
fsubs
pop
into
and
ljmp
jo
jbe
pop
mov
mov
insl
cpuid
popa
aam
cmpsb
sub
xchg
out
lds
mov
rcl
or
shr
imul
imul
pushf
iret
shr
lcall
icebp
mov
dec
insl
push
iret
sti
in
pop
lods
xchg
movsb
outsl
std
loop
setb
mov
aas
test
ret
in
fildl
stc
vandpd
add
push
scas
sbb
stos
push
mov
call
sub
test
add
hlt
cmpb
sbb
iret
imul
enter
add
dec
out
sbb
iret
gs
stc
mov
push
xchg
push
pop
pop
iret
outsl
fs
fcomi
lea
mov
pop
cmp
sbb
jle
in
pop
icebp
or
pop
mov
jb
lds
and
push
push
add
mov
add
cwtl
insb
ret
rcl
cmp
cld
sbb
cmp
jns
daa
icebp
je
jbe
jnp
scas
arpl
dec
clc
jge
inc
add
andb
xor
mov
idivl
subl
jne
fcompl
pop
sti
std
sbb
cli
push
test
jbe
sti
dec
or
jl
xchg
test
lahf
xchg
mov
mov
std
aad
jo
mov
mov
sbb
movsb
repz
movsl
subb
test
mov
outsb
add
dec
scas
sarl
and
cmp
leave
dec
les
adc
imul
xor
outsb
ret
xor
fistpl
mov
pop
mov
in
loope
pop
es
stos
mov
pop
push
inc
lcall
jge
in
sahf
test
mov
xor
ret
xchg
push
push
inc
jle
fcmovb
pop
lret
jae
mov
pop
inc
lcall
in
aad
pop
lods
out
fistps
sub
pop
mov
data16
cmp
mov
pop
stc
sub
lods
fdivrp
outsb
pop
ljmp
jmp
dec
std
into
mov
dec
push
inc
jmp
insl
leave
stc
and
mov
insl
dec
jbe
das
idiv
stc
sti
push
psubusb
sub
fdivrs
lahf
fisttps
iret
and
sti
mov
fsubrs
pop
enter
dec
pushl
mov
test
loopne
jg
js
flds
xchg
pusha
fbstp
in
dec
pop
cmpsl
std
fsubrl
mov
mov
adc
arpl
arpl
pand
mov
pop
ds
cmovo
add
push
enter
pop
and
outsb
mov
psrlq
inc
inc
shlb
cmpsb
les
xchg
dec
pop
jo
xchg
pushf
in
inc
pop
ja
fisttps
and
jmpw
cld
adc
sbb
sti
faddp
xor
aas
mov
jmp
outsl
jae
loop
stc
in
js
lock
in
cmpsb
stc
emms
fcmovb
adc
dec
xorb
mov
fiaddl
imul
sahf
and
cld
mov
mov
imulb
mov
mov
loop
inc
jae
push
push
pushf
ss
lcall
popa
fistps
into
andb
fdivr
dec
lods
jecxz
inc
std
dec
imul
jns
jecxz
std
imul
rcrb
sbb
push
sarl
gs
xchg
cmp
push
test
sbbl
ret
dec
gs
pop
mov
rcrb
push
arpl
inc
addr16
xchg
inc
inc
jg
inc
pop
psubb
cmc
ret
jae
or
outsl
or
push
mov
jno
cmp
test
stc
add
or
fldcw
add
loop
and
or
add
mov
inc
sahf
xor
sub
mov
mov
jne
cmp
mov
les
mov
xchg
cmpl
mov
cmp
xchg
shrb
cmp
add
add
and
xor
pop
inc
loopne
imul
lds
pushf
insl
or
mov
mov
aas
in
push
daa
mov
dec
xchg
sub
pop
pusha
jno
jg
add
jne
jl
into
add
cli
sbb
arpl
repnz
pusha
sub
repnz
sbb
popf
jg
ja
sub
cli
adcb
xchg
mov
shll
lds
sbb
cmp
jecxz
fistpl
repnz
movsb
stc
or
dec
push
mov
pop
aas
lds
inc
jbe
rcr
jge
je
cmp
pop
xchg
sub
scas
xchg
repnz
xchg
out
and
iret
repz
sar
iret
xchg
mov
mov
or
mov
cmp
pusha
push
xchg
mov
repz
adc
push
sbb
into
popa
pop
jno
jb
cmpsb
sub
jge
cltd
inc
mov
loope
xorb
stos
cmpb
xor
push
sub
bndstx
imul
jns
aaa
aam
test
jo
repz
test
lahf
pop
leave
pushl
push
gs
mov
test
enter
pop
or
jns
add
or
sbb
dec
mov
xor
mov
push
jle
mov
mov
dec
xchg
fbstp
push
loope
mov
repnz
jns
push
cmp
in
xchg
jle
repz
push
test
inc
outsb
out
pop
inc
pop
mov
jb
jmp
sub
sbb
jne
leave
test
lret
into
push
aaa
push
or
sub
scas
inc
mov
es
inc
mov
in
insb
mov
ret
aam
out
mov
sarb
and
cld
jb
loop
inc
rcl
clc
ret
sar
test
sub
inc
setae
and
stos
into
stos
sbb
cmp
enter
inc
loop
pop
mov
mov
int3
out
or
orb
jns
ds
stc
jnp
mov
rcll
sarl
stc
stc
enter
ss
or
push
cmp
push
addr16
les
and
inc
pop
icebp
jb
imul
dec
loop,pt
sahf
mov
jg
pop
ja
fistpll
inc
push
add
lods
out
ljmp
out
iret
inc
icebp
test
push
js
sarl
mov
iret
jp
rclb
push
sti
jp
lea
mov
xchg
iret
idiv
int
outsb
jl
arpl
push
in
xchg
repz
sbbl
daa
mov
pop
jp
ret
cmp
sbb
push
int
gs
xchg
xchg
iret
push
aas
test
nop
or
fimuls
test
jecxz
or
sub
sbb
shlb
nop
andb
and
add
sahf
inc
jno
pop
insl
es
ljmp
xchg
mov
mov
repz
push
xchg
nop
imul
jle
cvtdq2ps
jp
jbe
mov
dec
jl
loop
ljmp
insl
outsl
xchg
xchg
and
jno
add
in
mov
xchg
adc
out
cmp
lods
shrb
and
mov
into
add
mov
por
cmp
dec
loopne
jns
cmp
mov
dec
sarl
mov
adcb
lds
push
ds
mov
xchg
faddp
mov
sub
std
nop
out
mov
mov
mov
xchg
rcrb
push
call
jecxz
repz
add
ret
ret
mov
outsb
leave
jl
mov
jmp
bound
jbe
mov
into
jnp
js
lock
aas
sti
jno
js
xchg
test
jne
cld
mov
dec
sbb
xor
movsl
add
mov
andb
fldcw
je
pop
popa
add
daa
fs
jecxz
inc
pop
je
inc
push
outsl
call
push
fsub
jmp
icebp
cmpsb
xchg
adc
jp
ss
pop
sub
int3
das
push
adc
lock
mov
jne
leave
ret
inc
and
cmc
or
lcall
fistpl
call
push
or
cs
jmp
mov
nop
sbbb
jb
stc
mov
and
push
imul
shlb
push
ljmp
xchg
and
lahf
pusha
bound
push
fadds
lahf
aas
push
mov
mov
decl
fsubs
sti
insl
test
outsl
xor
jb
fisttpl
sub
push
imul
movsb
xor
jnp
mov
bound
fs
xorl
dec
xlat
leave
sub
leave
add
shrl
mov
cltd
add
cli
in
jl
ret
daa
scas
jae
popf
imul
cmp
mov
repnz
pop
dec
aad
fisubl
inc
pop
outsl
mov
fcomps
xchg
push
adc
lock
xchg
inc
adc
push
add
xor
adc
xlat
pop
push
pop
out
loop
dec
add
and
xchg
call
jg
xchg
add
lds
inc
adc
inc
test
aad
add
aas
xchg
or
dec
xchg
jecxz
sub
pop
and
mov
cltd
orl
js
scas
push
dec
test
ss
pop
fistl
gs
mov
inc
imul
jecxz
inc
arpl
fwait
arpl
sbb
push
push
adc
jmp
jg
gs
cmp
ret
pop
xor
sub
out
jge,pn
scas
andl
fwait
inc
xor
adc
repz
xchg
shlb
mov
jg
mov
adc
xchg
xlat
out
lock
in
sti
mov
mov
fisubrl
xchg
cmpsb
jns
add
out
and
add
inc
movsl
lahf
mov
loop
push
and
dec
add
pusha
iret
out
pushf
in
je
call
inc
mov
fidivs
imul
cltd
cmp
inc
fnstenv
cmpsb
cmp
stos
sub
jp
mov
add
ja
jg
ljmp
mov
das
data16
sarl
pop
jge
add
pop
jno
pop
mov
mov
sarl
jo
mov
inc
mov
jae
or
jns
fwait
repnz
in
sub
jg
sti
add
jp
arpl
jmp
cmp
icebp
test
ret
cmp
xchg
push
inc
rorb
out
mov
sahf
jb
adc
fwait
shlb
icebp
ret
fdivrl
mov
aam
pop
xor
notl
add
mov
pop
jb
in
loop
sbb
shl
ja
jg
pop
jae
scas
frstor
pusha
jge
jecxz
jg
por
jmp
fisttps
out
adc
jmp
call
mov
inc
mov
movsl
ss
add
pusha
and
push
adc
movsb
mov
mov
imul
imul
sub
sti
xchg
sbb
fcoms
inc
xorb
push
les
cltd
mov
cmp
xchg
mov
push
mov
dec
sbb
mulb
in
lods
jae
push
or
inc
add
adc
and
leave
icebp
inc
pop
add
dec
cmc
in
xchg
fdecstp
test
ret
jbe
test
jecxz
test
enter
mov
std
dec
push
int
arpl
cmpsl
pop
pop
jl
jmp
sarl
shlb
mov
xor
jbe
movsl
dec
cmp
jnp
psrld
icebp
mov
jg
xor
mov
add
sar
fstpt
jae
add
rcrl
add
insb
dec
sbb
out
shlb
ds
cmova
addr16
negl
push
bound
or
test
push
repz
insb
rcll
xor
fidivrl
jle
cmp
out
sti
pushf
loopne
sbb
jne
sbb
pop
xchg
or
cli
dec
sbb
sub
imul
mov
out
outsb
mov
rorb
hlt
and
dec
leave
neg
aam
jns
outsb
mov
in
pop
popa
popf
addr16
mov
scas
in
cmovbe
rol
ja
mov
xor
mov
fcmovb
nop
sub
aam
fdivl
inc
les
push
xchg
sbb
jae
lahf
decl
popa
mov
add
subb
push
jb
sarb
pushl
sub
aad
xor
pop
sti
pop
js
ja
sti
into
add
sbb
mov
push
or
dec
leave
clc
call
add
xchg
jns
cmp
std
ret
pop
xchg
push
push
sarb
mov
andl
push
pop
jg
pop
popa
inc
mov
mov
fwait
lods
inc
jnp
push
data16
add
scas
cwtl
jno
or
mov
pop
dec
and
mov
jge
jp
cmp
clc
fimull
cs
jp
and
sahf
mov
mov
inc
ljmp
mov
fwait
out
sahf
stos
jl
andl
sahf
std
shlb
xor
xchg
jns
sbb
adc
aam
aam
xchg
mov
jge
enter
call
cmp
jl
daa
cli
jno
inc
pop
cmp
icebp
mov
daa
push
fucom
or
movsl
mov
xchg
pop
fwait
mov
jne
pop
jmp
add
adc
nop
jne
out
rcll
push
push
aad
icebp
aam
ds
sarl
jecxz
sbb
in
mov
pushf
fnstcw
jno
adcb
add
in
pop
stos
jp
mov
shlb
jl
pop
int
data16
lcall
out
bound
jge
jne
pop
leave
push
jns
andb
insb
mov
jb
or
testl
and
repnz
and
out
jae
aam
into
das
cmc
ljmp
stc
rolb
ja
inc
pushf
and
fstpt
mov
jg
movsb
int
cltd
jle
arpl
mov
jge
jg
and
or
jb
cli
jne
push
xor
out
xchg
and
into
add
aad
shlb
rorl
js
push
data16
addr16
fisttpll
jecxz
push
fildll
ss
loope
imul
das
mov
fs
pop
test
insb
or
mov
jp
push
fucomip
popa
jns
add
call
sahf
add
testb
imull
imul
addr16
jb
sub
jb
jg
jbe
mov
insl
outsb
and
dec
addr16
outsl
jp
adc
xchg
into
pop
arpl
mov
fcomip
push
dec
loope
aam
mov
testl
pop
cmpsb
adc
out
fsubrl
push
jmp
cmp
cli
pop
lahf
int
fcmovu
jnp
into
push
mov
inc
push
fcmovu
clc
in
add
call
pop
sub
lods
in
or
xor
repz
out
pusha
push
out
orb
add
jb
pusha
js
leave
push
rolb
orb
mov
pop
or
incl
mov
jns
jge
pop
cli
test
jnp
cmpl
fstpt
dec
fisubs
fistl
fnstenv
ja
insl
mov
mov
ja
repz
shr
testl
divl
hlt
lahf
adc
cwtl
addl
jnp
mov
sbb
enter
loope
mov
pop
sub
lret
mov
mov
jge
out
ficomps
shll
ja
test
adc
jp
mov
loop
adc
icebp
xchg
or
cmp
ljmp
jge
loop
shl
pop
mov
jmp
stc
adc
push
mov
pop
movsl
je
mov
pushf
pop
in
fcoms
mov
pavgw
and
jmp
clc
into
add
pop
ret
cs
ja
ds
cmc
xchg
bound
enter
insb
inc
lea
cwtl
xchg
in
dec
cmpb
mov
add
cmp
jbe
test
mov
sbbl
jg
xor
test
cmp
push
cmp
pop
xor
xchg
inc
dec
in
fidivrs
fstpt
ret
push
xchg
aam
mov
sbb
sub
cmpsl
test
aas
and
cmp
push
mov
movd
stos
dec
lret
dec
jmp
jns
inc
sbb
lret
test
hlt
mov
jmp
and
pop
addb
fsts
gs
and
pop
sbb
sbb
push
sub
lea
cmc
cmp
xchg
inc
popl
out
insl
ret
sub
incl
cs
jae
lods
xchg
sbb
cmp
fbstp
jl
pop
xchg
adc
inc
sti
inc
pop
fisubrs
aas
negl
icebp
sti
cltd
or
xor
mov
jns
sbb
imul
fwait
lcall
out
popf
sub
fs
mov
push
xor
jle
filds
push
xchg
aam
dec
movsb
sarb
mov
mov
shrl
xor
jmp
cli
and
cli
mov
nop
je
cli
jle
stos
in
inc
jg
stc
mov
clc
mov
and
stc
jns
xor
fwait
hlt
ss
icebp
mov
add
pop
mov
subl
sbb
ljmp
fbld
mov
popa
dec
inc
in
push
xor
mov
fldl
and
mov
pop
lahf
or
cmp
clc
mov
sub
pop
imul
fildll
and
movsb
mov
dec
ret
repz
dec
fistps
xor
pop
aam
lods
push
ficoms
pop
pop
outsb
clc
hlt
sub
lahf
popa
ljmp
dec
jp
push
jle
repz
mov
xchg
jno
lods
call
push
in
outsl
adc
addb
inc
jg
rorl
sub
ljmp
idivl
les
sbb
mov
call
loope
js
bound
jnp
sti
fldenv
jp
sub
aaa
jns
push
inc
inc
fisubrl
sti
lds
sub
in
popa
aas
jmp
inc
xchg
movsb
jns
sub
xchg
pop
fdivs
data16
cmp
mov
in
cmc
ret
nop
or
addr16
aas
sahf
fdivrs
into
movsb
repz
test
push
lods
xor
sti
cmpl
inc
aas
mov
leave
roll
dec
lods
mov
jp
sub
adc
jmp
shrb
cmpsb
mov
nop
sbb
aaa
mov
add
in
pop
jns
mov
jns
add
packssdw
sub
leave
enter
lock
cmpsl
cmp
fisubl
into
sbb
dec
mov
sbb
push
mov
fadd
inc
sbb
jp
mov
fstl
shr
rcll
enter
push
fwait
inc
test
mov
mov
ficoms
xchg
jmp
lsl
in
clc
jae
jo
mov
test
rcrl
ds
mov
or
subb
sub
sbb
add
in
xchg
fistpl
mov
mov
adc
jb
push
adc
and
js
jge
imul
inc
pop
ljmp
push
xchg
add
loopne
xorb
dec
mov
aam
cmp
addl
dec
push
jp
outsb
imul
lods
pop
dec
dec
pop
push
lcall
xchg
pop
sub
or
in
ficomps
cmp
mov
jb
xchg
mov
mov
adc
test
scas
xorb
fdivs
in
xor
test
cmpb
push
or
xchg
fdivs
sti
push
iret
dec
shl
lock
lods
cwtl
xchg
pop
mov
test
ja
out
cmp
push
jg
addl
loopne
lcall
add
test
out
test
shrl
lods
cld
test
pop
fdiv
popa
test
mov
leave
lret
mov
mov
jl
xchg
mov
inc
movsb
popa
enter
and
sbb
aas
mulb
shl
lcall
shlb
pop
scas
out
jb
clc
and
fisubrl
mov
jge
push
leave
push
mov
lret
mov
mov
pop
iret
mov
test
lahf
ds
inc
daa
cmpsl
enter
popl
dec
add
icebp
sub
push
or
aaa
in
lods
out
pop
cs
rorb
jp
pop
lea
pop
adc
mov
sbb
and
sbb
out
xchg
dec
pop
pop
jne
and
rcll
gs
pop
xorl
in
cmpsl
push
adc
sti
xor
xor
mov
mov
addb
push
xor
cmp
leave
repnz
lea
xlat
dec
lds
or
lock
jmp
gs
dec
add
adc
je
pop
insl
pop
push
xor
pop
mov
mov
addps
mov
xorl
stos
stc
aas
push
popl
jbe
pmaxub
mov
jge
mov
bound
and
leave
ja
xchg
jge
jl
clc
es
or
ss
xor
mov
mov
icebp
pop
xchg
mov
test
mov
jecxz
outsl
pop
cmp
mov
cs
pop
es
test
imul
out
pop
mov
xchg
cmp
sbb
or
insb
fnstsw
fcmovbe
mov
fcmovnu
jae
inc
std
ljmp
push
into
gs
fucomip
lahf
sub
mov
cmp
mov
or
jb
popf
ds
outsl
mov
jl
jae
inc
dec
mov
cmp
outsb
movsl
addr16
jns
xchg
test
std
mov
add
das
pop
dec
sbb
das
lods
inc
pop
fistpl
fmull
dec
and
lret
insb
popf
pop
cmp
push
ret
mov
mov
pop
js
mov
mov
inc
lds
jnp
sbb
xchg
jge
cltd
ljmp
out
push
cld
adc
hlt
fdivs
filds
mov
xor
insl
test
mov
push
enter
ja
pusha
ja
loopne
xor
ja
psrld
push
fsubrs
pop
repnz
mov
mov
ljmp
fwait
aam
sub
jl
ljmp
xchg
pusha
jecxz
imul
loop
sub
outsl
pop
cs
pop
mov
daa
cmp
fwait
cmp
inc
cmp
rol
aad
inc
sti
out
mov
cmpsl
fisubl
dec
xor
jnp
push
aas
scas
repz
inc
push
mov
les
out
into
adc
adc
adc
xchg
popf
mov
les
mov
xchg
mov
pop
ja
push
in
ljmp
imul
pop
dec
jno
jns
sahf
adc
and
leave
xchg
fisttpll
in
mov
push
in
jae
push
cmpsl
jle
sub
mov
arpl
adc
inc
stc
jno
pop
enter
arpl
aaa
adcl
xchg
xorb
mov
sarl
out
les
pop
jne
sbb
sahf
sbb
jp
sti
test
leave
inc
js
jg
jnp
push
icebp
ret
jmp
lcall
out
les
out
les
testl
js
xchg
or
scas
jmp
arpl
loop
leave
orb
adc
xor
fs
sbb
mov
shll
fdivr
popa
cmovs
es
leave
in
mov
mov
ja
imul
out
push
mov
xor
xor
dec
ljmp
dec
ljmp
mov
ds
imul
sarb
mov
jbe
pushl
inc
loopne
cmp
loop
bound
aam
xchg
mov
xor
and
sub
pusha
cmp
jecxz
add
fdivrl
pop
cmp
add
punpcklbw
in
dec
fsubrl
jmp
sbb
jmp
mov
and
sbb
cli
xchg
mov
pop
out
sub
lcall
in
pop
lcall
push
dec
pop
loop
faddl
out
mov
add
test
mov
mov
mov
push
aad
or
sub
dec
mov
mov
mov
jecxz
jle
aas
loope
jnp
jnp
daa
add
jae
push
mov
clc
xorb
cltd
insl
out
or
popf
jge,pt
aad
pop
cmp
imul
imul
and
xchg
popa
xchg
outsl
xor
shll
pop
cmc
imul
shll
loop
jae
std
fidivrs
jle
add
cli
pusha
jb,pn
je
dec
dec
hlt
scas
mov
jnp,pt
adc
cmp
pop
outsl
mov
mov
in
outsb
iret
daa
sub
std
insl
mov
stc
ja
jge
bswap
jno
xor
iret
xchg
add
cmp
shrl
mov
repnz
stos
sarl
cmp
inc
fidivl
shlb
and
adc
add
and
add
pop
mov
or
mov
jns
mov
inc
mov
cmp
xchg
mov
mov
into
call
jg
adc
fwait
cwtl
jns
lods
inc
dec
jg
sbb
adc
jb
jo
push
inc
out
add
popa
xlat
and
shll
push
xchg
enter
lea
loop
mov
add
in
cmp
and
popa
xchg
mov
jge
pop
outsl
inc
arpl
loopne
jae
mov
movsb
cmpsl
xorl
jne
lds
mov
arpl
xchg
in
sbb
cwtl
cld
es
or
inc
jnp
fs
sbb
aad
mov
add
adcb
popa
cmp
inc
mov
jo
fwait
push
jb
arpl
movsl
mov
adc
mov
int
sbbl
cmpl
outsl
sqrtps
ds
fstps
add
notl
scas
repz
xor
mov
cmp
mov
jmp
add
cmp
je
icebp
jbe
scas
stc
loop
cmp
pop
mov
cmp
add
or
mov
push
out
aam
insb
lods
mov
inc
out
iret
in
cmpsb
mov
mov
add
aam
cmp
cli
inc
int3
jg
mov
jmp
aam
lock
jp
push
pop
inc
leave
and
stos
sub
mov
int3
pop
xchg
or
idiv
loopne
addr16
sub
dec
es
jb
sbb
pop
mov
out
inc
aam
fldt
gs
add
shlb
arpl
xor
xchg
lock
faddl
sbb
pop
add
jnp
loope
sub
cmp
mov
and
jo
movsl
rorb
pop
out
or
stc
pop
add
push
fcmovnb
lods
pop
jg
test
call
scas
out
cmc
add
stos
push
test
cmpsl
inc
ficompl
jns
popf
cld
cmp
in
test
add
pop
push
jg
push
stos
push
insl
jl
loope
out
lods
fiadds
xchg
sub
inc
jno
fnstsw
dec
cmc
cli
addr16
push
jne
jns
dec
orl
adc
repnz
fcomps
mov
adc
push
jne
add
fstpl
xchg
stc
pop
xlat
cmp
mov
fs
mov
jp
rclb
shr
jae
adc
shld
xorb
test
sbbb
lea
jne
xchg
cmp
push
cmpb
lea
addr16
adc
and
and
adc
and
test
ret
mov
sbb
outsb
mov
mov
inc
add
and
add
cmp
fiaddl
addr16
dec
mov
pop
jne
fs
mov
inc
ljmp
adc
ret
pop
pop
dec
xchg
mov
and
fmull
cmp
rcl
rcrl
push
mov
test
push
stos
sbb
or
pop
ja
rcl
jno
adcl
into
cld
push
paddsw
mov
jnp
cmpsl
sti
sub
mov
ljmp
in
loope
mov
roll
mov
add
shr
sarb
ret
ds
stc
xor
push
jb
jge
nop
ds
mov
pop
sbb
sbb
movsl
out
je
stos
ja
fstpl
inc
cwtl
xchg
pop
iret
enter
inc
mov
fmull
popa
jb
mov
fsubl
mov
add
push
js
cld
repnz
pop
stc
xchg
arpl
jno
cld
mov
and
and
pop
mov
sti
inc
xor
or
jmp
shrl
adcb
or
hlt
lock
xchg
jo
cli
push
pop
cmp
pusha
scas
dec
lcall
gs
testl
adc
ds
aas
sub
stos
loopne
pop
jns
leave
jecxz
jo
stc
stos
or
lret
and
and
mov
add
xchg
leave
hlt
fs
out
outsl
dec
clc
stos
test
imul
jle
jb
iret
and
jbe
pop
pop
jbe
testl
xchg
adc
sbb
outsb
xchg
mov
xchg
lahf
sub
out
fwait
mov
loopne
jne
jg
sbb
push
lar
pushf
mov
xlat
in
fildll
lcall
out
iret
aaa
aam
les
xchg
xchg
sub
out
add
das
sti
mov
dec
aam
cltd
popf
jns
ret
stos
fdivrs
loop
aas
dec
inc
fistpl
imul
fdivr
mov
jne
jg
push
popa
sbb
sub
pusha
adc
xchg
pushf
je
inc
pop
mov
and
xchg
in
cmp
fldt
cmp
inc
add
leave
cmc
pop
push
ljmp
loop
into
lock
jg
jo
mov
orl
fs
lock
popa
inc
in
pop
ds
sahf
aam
jb
cmpps
lcall
xor
jle
mov
sub
push
leave
push
pop
jnp
mov
data16
mov
filds
pusha
arpl
loop
scas
jp
js
sysenter
and
dec
push
imul
mov
andl
mov
cwtl
push
gs
sbb
iret
hlt
mov
push
jmp
aas
rcr
fstpl
pop
sub
in
fistps
xchg
std
data16
in
mov
pusha
cmpl
xchg
shr
stos
outsb
dec
sub
arpl
push
jge
sbb
pop
pop
sub
movsl
mov
sbb
jle
mov
jae
mov
adc
jl
aas
pop
mov
enter
or
scas
and
dec
out
jns
les
push
xor
mov
pop
in
cwtl
jno
loop
out
aad
inc
cmp
pop
push
insl
and
jmp
xchg
xor
push
mull
mov
jmp
add
imul
mov
fldl
push
xor
outsb
leave
adc
std
mov
icebp
xor
lahf
insl
cmovg
arpl
jg
adc
push
icebp
or
cmp
shrl
scas
fnsave
stos
push
cmpsl
filds
cmp
pop
fsubrl
call
sbb
xchg
pop
pushf
adc
fs
in
pop
sarb
push
lret
sbb
and
jmp
fcmovnu
sub
xchg
mov
andl
cmp
adc
aam
xchg
je
imul
dec
cli
jno
addb
pop
sub
mov
ja
adc
incb
movsb
mov
outsb
inc
jmp
xorb
jmp
mov
pop
out
js
jae
push
in
push
stos
xor
jp
stos
jl
adc
jo
loope
repz
mov
adc
frstor
scas
repz
psubusb
call
movsb
test
outsl
push
std
xlat
wrmsr
in
fistps
jbe
imul
pcmpgtw
xor
inc
js
push
cmp
xlat
jno
mov
out
fiadds
adc
movsl
fs
fiaddl
dec
inc
aad
jo
xchg
xchg
xor
push
fildll
lcall
cmp
mov
add
sbb
out
inc
and
xorb
sbb
jl
imul
push
adc
sub
inc
jb
hlt
add
sahf
cmc
xor
xor
jg
mov
cltd
cmc
xchg
push
or
sti
sti
inc
mov
add
xor
ret
pop
popf
adc
iret
dec
shl
mov
add
push
jg
jge
cmp
adcb
cld
push
pop
aas
mov
fwait
loopne
push
aad
mov
mov
rolb
push
cwtl
pop
dec
xchg
push
push
jg
jae
or
in
push
lods
icebp
fcompl
out
pop
addr16
rclb
jg
subl
out
push
cltd
cli
push
xor
aaa
sbb
aad
or
mov
adc
rolb
push
jno
pop
jmp
jl
rcrl
sbb
fbstp
lods
sbb
stos
icebp
adc
push
lret
sub
push
imul
mov
inc
push
mov
dec
fs
pop
xor
into
aas
xlat
cmpsb
mov
std
bswap
jle
push
or
out
mov
push
psllq
jns
push
mov
cmp
outsb
into
mov
xchg
xor
imul
in
leave
sti
push
fdiv
shrl
jg
aad
inc
jo
mov
cs
push
xchg
cmp
ja
js
jnp
int
jp
jb
mov
ds
sub
sub
jne
outsl
faddl
mov
pushf
sti
cmp
lock
lds
adc
decl
in
sub
call
inc
xor
pop
outsl
mov
rorb
xor
jae
dec
xlat
imul
jg
cmp
sti
ret
mov
push
outsl
bound
pusha
jae
adc
pop
dec
pop
jnp
adc
fdivrl
mov
pop
js
aam
mov
push
ds
test
pop
and
or
cmp
popf
cmp
jae
inc
divl
clc
fwait
addl
fiadds
iret
aad
dec
lods
push
lods
sub
adc
jb
pop
cmp
ret
hlt
aas
addb
fnsave
cld
and
pusha
jne
addb
adc
or
jp
fildl
adc
movb
dec
inc
clc
rcll
sub
mov
push
ror
fcmovnbe
out
xor
push
pop
dec
mov
mov
mov
mov
push
lret
inc
pusha
add
dec
mov
adc
test
pop
insl
in
add
cmp
pop
xor
ljmp
es
pop
cmp
xchg
lcall
xchg
push
lret
andb
push
pop
data16
ljmp
filds
shl
push
jb
mov
test
fildll
fstps
dec
jge
jnp
inc
xchg
jp
cs
push
jnp
outsl
cltd
jns
fstp
andb
pusha
popf
out
mov
mov
outsl
stos
pop
jmp
push
inc
sbb
flds
push
outsl
lods
cmp
lret
jge
add
mov
jl
call
sti
xorb
je
shr
push
imul
cmpl
outsl
mov
lcall
push
jns
test
pop
movsb
fsubrl
aaa
or
ljmp
out
psllq
scas
addl
sti
into
jle
cmpsl
cld
fistl
icebp
push
jbe
enter
jge
cmp
arpl
mov
in
mov
inc
jae
jns
les
js
imul
ja
xchg
pop
mov
jnp
sti
pop
jns
and
imul
push
cmp
repz
aam
popf
and
dec
xchg
push
int
fcomip
dec
mov
lret
pop
imulb
add
lock
sahf
movl
add
mov
imul
mov
outsb
imul
iret
sbb
mov
xor
mov
fistpl
cmp
lods
mov
cld
jle
or
sub
setle
pop
out
xlat
mov
jbe
notb
and
fists
inc
lods
rolb
fs
xor
out
dec
mov
ja
add
fistpll
push
or
enter
arpl
cltd
cmpsb
addr16
dec
xchg
rcr
sbb
sbb
imul
mov
dec
jns
bts
and
push
pop
outsl
mov
cli
mov
jmp
cli
cwtl
jmp
lods
dec
mov
lea
inc
inc
dec
xchg
outsl
aaa
mov
add
movsb
sub
out
movsl
jbe
add
jle
sar
inc
das
sarb
out
mov
push
scas
ret
data16
ljmp
ror
fstp
mov
xchg
lods
cli
jae
arpl
add
pop
push
push
push
je
fdivrp
push
sub
mov
and
arpl
push
xor
pop
add
adcb
add
cwtl
mov
push
pop
jno
mov
imul
gs
jle
push
aas
nop
icebp
ret
pop
sti
sarb
cli
xor
imul
pop
movb
fwait
mov
and
jge
cmove
inc
lret
mov
xor
sub
bound
xchg
les
enter
xchg
cmpsb
push
mov
movsl
cmc
ss
push
xchg
outsl
addr16
push
icebp
ds
push
sbb
xor
sub
ds
mov
iret
aad
lret
sarb
and
arpl
movsl
bound
sbb
sbb
cmp
stos
add
and
pop
mov
addr16
out
pushf
jle
inc
xorb
sbb
inc
fiaddl
loop
xchg
in
in
or
lods
mov
cmp
std
daa
cmp
sti
and
rcr
sti
pop
out
negb
lods
xchg
cmpsb
dec
mov
adc
mov
add
faddl
call
inc
add
inc
mov
jle
add
and
arpl
mov
aad
mov
push
lock
and
cmpl
imulb
jp
fldl
jnp
stc
jge
dec
adc
push
ret
jp
push
mov
lock
dec
aaa
cmp
pop
call
dec
shl
push
xchg
mov
lret
inc
dec
lcall
push
mov
clc
out
lahf
adc
jns
sbb
cmp
mov
xorl
pop
adc
push
jno
inc
and
int3
mov
js
inc
imul
mov
ja
dec
fmull
cmp
dec
rclb
ret
aas
mov
movaps
inc
add
in
ja
je
xor
mov
add
jne
cmp
insb
fdivp
jle
data16
pusha
jne
arpl
ret
dec
pop
mov
and
dec
sbb
idiv
or
clc
inc
adc
repz
xchg
in
mov
popf
fsubs
and
xchg
scas
cmpsb
jb
faddp
sbb
ja
pop
sub
imul
repz
fcmovne
xor
cmpsl
out
pop
xchg
xchg
subb
je
jae
adcl
dec
push
or
jnp
outsl
push
mov
pop
pop
pop
imul
bound
mov
insl
mov
push
das
lods
add
jp
or
cmp
xchg
data16
jle
fiaddl
sbb
or
in
cli
or
aaa
loop
test
cwtl
or
cld
cmpsl
enter
lea
mov
sar
movsl
push
xlat
jno
xchg
mov
sbb
scas
jbe
ds
mov
popa
stos
cs
mov
jns
xchg
xchg
sti
mov
sbb
add
arpl
cltd
mov
fildll
inc
int
jne
sbb
push
je
bound
and
testl
subb
ret
mov
jnp
push
cmp
out
jbe
cmp
push
sub
cltd
jo
incl
jg
mov
jp
sbb
push
insb
outsb
cs
loope
mov
mov
xor
fistpll
push
and
shrb
inc
xchg
out
fisubs
add
fstpt
mov
lods
jmp
int3
mov
sbb
iret
jb
push
ds
out
mov
fdivrl
pop
xchg
jmp
mov
aam
outsb
out
mov
cltd
and
cmpl
out
les
fisttps
lret
movsl
mov
call
loopne
inc
push
push
mov
pop
out
jnp
hlt
xchg
movsl
test
sub
mov
fstpt
clc
insl
in
push
mov
cmp
psubsw
test
mov
dec
leave
mov
fwait
movsl
or
es
dec
clc
mov
jecxz
adc
jge
outsl
ds
pop
out
sbb
mov
xor
lea
popf
arpl
stos
xchg
mov
les
out
lret
lret
or
pop
iret
pop
pop
stc
and
adcb
pop
idivl
lds
push
ret
popl
loopne
xor
or
and
movsl
pop
pop
push
cmp
test
outsb
jns
mov
cmpb
mov
mov
popl
pop
ja
cld
pop
cmp
jg
fdivrs
orb
and
aam
add
push
aam
mov
ret
add
sahf
sbb
roll
mov
test
jbe
fisttps
xchg
enterw
pop
aas
add
enter
scas
lahf
mov
ljmp
jb
test
pop
jne
sbb
jle
movsl
aaa
rorl
or
fwait
rclb
imul
jns
mov
movb
jmp
jp
mov
ret
fildll
sysret
push
pop
fsts
xchg
add
cli
push
mov
lods
mov
pushl
pop
mov
sqrtps
push
mov
call
pusha
add
add
or
das
pop
frstor
add
and
ret
std
adc
lahf
roll
gs
test
outsl
jns
sub
inc
or
sti
fmuls
cs
add
or
sti
xor
pop
mov
test
push
cmc
leave
jle
inc
lahf
mov
sub
xor
and
jo,pt
in
fildll
stos
pop
jbe
jge
or
int
incl
test
aas
leave
in
rcrb
cmpsl
clc
ja
ss
jno
xchg
inc
addr16
jae
loop
jle
push
icebp
addr16
pop
xor
xor
scas
add
pop
mov
sbbl
ret
data16
sub
cmp
push
icebp
jl
mov
cmp
jnp
aam
int
xchg
mov
inc
add
arpl
faddp
mov
cmp
hlt
ljmp
insb
clc
movsl
pop
pop
inc
pop
push
ss
jle
add
jnp
sbb
push
pop
jae
xchg
ja
sbb
cld
out
adcl
movsb
mov
idivb
pop
aad
xchg
mov
imul
adc
int3
mov
sbb
test
mov
add
xchg
push
xchg
xor
xchg
inc
popf
fcmovne
push
inc
cmp
bound
xor
popf
bound
int
shll
mov
jb
mov
in
imul
fmul
sbb
aad
mov
or
jae
add
inc
and
aam
imul
pop
sbb
inc
mov
push
fwait
add
push
xchg
mul
int
adc
xchg
xchg
leave
pop
mov
pusha
and
out
lcall
in
mov
call
cmp
jmp
imul
add
sti
outsl
inc
and
idivl
repz
sbb
mov
pop
ljmp
ja
cwtl
xor
jae
and
fisubl
push
mov
scas
ficoms
xor
popf
jns
mov
stos
or
mov
insb
pop
add
aas
repz
cmp
xchg
xchg
outsl
test
ret
call
cli
popa
xchg
lods
jae
lods
loopne
jg
push
dec
xchg
outsb
push
or
das
addr16
pop
loope
loopne
jp
lods
push
push
jecxz
sub
out
ret
outsb
push
fsubr
fidivrs
cmp
cltd
test
loopne
jle
add
xchg
pop
orb
leave
dec
or
ljmp
cltd
push
xchg
test
xchg
negl
mov
aad
sbb
cltd
push
mov
push
jp
fdivs
lock
shll
jbe
or
insl
adc
cmp
fnstsw
jnp
fldl
pop
jge
or
psubusw
xor
mov
loopne
hlt
xor
cmp
mov
pop
sub
jnp
cli
cmp
add
std
pop
mov
movsl
mov
movsb
sbb
js
test
mov
cld
lea
mov
cwtl
leave
add
incl
lret
sarl
arpl
sbb
inc
mov
jge
leave
xorb
jl,pt
in
cmpb
push
clc
ror
jnp
repnz
imul
cmc
out
mov
jnp
mov
cmpxchg
xchg
fdivl
and
mov
test
fwait
fwait
jg
push
jne
cmc
push
dec
ret
pop
sub
dec
imul
ja
call
mov
fcmovnu
inc
jmp
pop
pusha
adc
jp
cmp
sti
jne
xchg
jb
and
adc
into
jl
pop
out
aam
fwait
jns
push
out
mov
cmp
and
je
in
adc
bound
push
xor
mov
jp
xchg
xchg
out
mov
and
jmp
add
ret
push
stc
or
andl
mov
out
lret
popa
xchg
pop
push
cmc
xor
mov
mov
jb
adc
and
xchg
pop
aad
loope
imul
pop
cmpsl
push
sub
mov
repz
push
mov
fst
out
push
data16
cmc
add
insb
mov
mov
push
xchg
popa
je
mov
jge
fs
push
inc
inc
fldt
jo
push
push
mov
pop
shl
jmp
in
imulb
int
xorb
jb
out
lock
sub
inc
xchg
xchg
xchg
pushf
pop
inc
sti
cmp
xchg
sub
cmp
les
pop
xchg
in
pop
imul
sti
xlat
jg
dec
mov
into
mov
iret
jl
add
xor
js
notl
ljmp
cmpsb
aaa
cs
adc
jnp
cmpb
push
div
pop
mov
jg
jo
loope
insl
pop
xchg
cmp
push
shll
fdiv
xchg
icebp
cli
sarb
in
add
lret
add
push
ss
inc
hlt
adc
push
sub
push
mov
sti
mov
in
ja
mov
mov
test
mov
jns
scas
push
test
mov
idivl
aad
cmp
add
lds
fcoms
dec
xor
push
addb
pop
adc
nopl
arpl
dec
shll
neg
jbe
push
xchg
mov
ss
xchg
or
call
pushf
ljmp
imull
pop
rcrb
cmp
push
jmp
xchg
sti
in
xchg
ds
insl
mov
sub
repnz
sahf
shlb
jle
je
notb
sarl
enter
sahf
mov
pop
int
iret
cmp
jno
popa
mov
loope
pop
adcl
subb
shr
xor
inc
or
sti
jb
outsb
jp
mov
mov
or
add
xchg
jns
scas
jg
and
mov
clc
cmp
jns
jbe
adc
mov
test
shrb
popa
sub
aaa
iret
sarb
jp
jp
mov
mov
fdivrl
jge
mov
testl
mov
popf
pop
sbb
divb
movsb
lcall
add
pushf
cmp
pop
sbb
mov
xor
lahf
mov
imul
mov
pop
cmp
mov
pop
mov
shll
jg
push
mov
loope
mov
jl
mov
cmc
or
shr
gs
dec
mov
repnz
loopne
lahf
test
sbb
sbb
pop
mov
mov
jp
sub
roll
shlb
ja
aam
and
lahf
and
jne
nop
shll
push
push
sbb
pop
fcmovne
jl
out
and
inc
les
popf
or
lret
lods
mov
sub
jg
add
push
cmp
inc
xor
and
insl
and
inc
push
je
fdivrs
mov
lea
idiv
adc
test
inc
xor
sub
sbb
mov
outsl
js
adc
jmp
mov
loope
jl
mov
push
jno
xor
loop
xor
cmp
push
in
pop
pop
ss
movsb
mov
mov
jae
inc
psllw
sbb
mov
xor
ljmp
mov
pop
bnd
jb
scas
test
cmp
shl
adcb
in
fldt
jae
xchg
mov
mov
test
nop
mov
popa
jns
sub
imul
insb
pop
aad
addr16
dec
or
jg
sub
mov
out
push
and
and
xor
ja
or
xchg
jp
jmp
lcall
sbb
ja
fadd
inc
dec
cmp
daa
push
loopne
int3
out
xor
test
jge
jge
mov
popa
nop
in
scas
repnz
leave
xor
jecxz
sub
or
test
stc
roll
int
clc
inc
jb
aad
push
adc
xor
add
test
xchg
jle
xlat
add
mov
out
cwtl
jbe
and
pop
jecxz
jg
mov
mov
data16
jle
cmpb
lds
jne
jbe
ret
iret
stos
jle
cmp
fxch
push
and
dec
sahf
inc
jbe
pop
add
out
or
call
subl
jns
dec
lret
outsb
mov
cmp
xchg
sub
outsb
push
sbb
dec
cmpsl
xor
rcrb
sbb
imul
push
fcmovbe
jbe
setns
bound
mov
xchg
and
jp
enter
xlat
icebp
sub
mov
mov
jb
mov
shrl
repz
les
fdiv
push
nop
pop
and
cmp
jg
out
icebp
aaa
and
mov
push
int
ds
adc
mov
gs
orb
arpl
int
mov
ljmp
cmp
out
and
lods
pusha
addr16
jg
pusha
inc
xchg
pop
mov
incl
dec
mov
imul
xor
jae
adc
mov
sbb
jns
rcll
loop
popf
jo
outsl
scas
add
fsubrs
mov
jp
outsl
fldenv
and
lods
int3
mov
jmp
sub
addr16
push
outsl
dec
add
mov
insb
push
inc
inc
setbe
xchg
or
sar
or
pusha
aad
aam
pop
jmp
popf
jecxz
orb
cmp
xchg
js
jb
sbb
dec
inc
push
lock
stc
ja
insl
inc
adc
roll
jle
jbe
ljmp
out
push
cmp
testl
movsb
xrelease
and
add
ja
aam
shlb
xchg
sbb
sti
dec
add
nop
arpl
cmp
cmc
jo
negl
ds
movsl
icebp
jb
imul
out
into
lahf
stc
dec
mov
or
stos
inc
inc
popa
mov
add
ftst
add
push
push
sbb
mov
roll
sbb
sub
icebp
xchg
into
ja
sti
ds
pop
jge
sti
and
insl
and
call
jp
add
std
jge
pop
into
in
insb
pop
sbb
mov
orb
rorb
cmp
int
xor
sbb
sbb
pop
incb
push
in
cmpsb
inc
push
pop
roll
add
ret
push
adc
jbe
mov
dec
out
int3
cmp
iret
addb
cltd
shll
mov
sbb
add
les
into
imul
xor
mov
icebp
lds
xor
sbb
outsl
sub
or
add
pop
out
mov
int
cmp
mov
lret
cmp
mov
fisubrl
ret
sub
pop
stc
pop
push
inc
fcomp
fstpt
jp
mov
mov
and
dec
pop
es
shll
adc
gs
ljmp
ds
leave
jo
mov
xchg
loopne
idivl
lods
cmp
ljmp
orb
rcl
imul
xchg
fwait
popa
xchg
movsl
fwait
icebp
mov
cltd
shrb
add
cmpsl
xor
xlat
push
xorps
loope
mov
add
sub
cmp
jecxz
xchg
pushf
fiadds
inc
shl
pusha
inc
sarb
mov
aaa
stos
aas
jb
ljmp
loope
mov
in
pop
push
inc
cmp
fstl
movsb
push
out
in
fdivrl
adc
cld
adc
in
imul
insb
ret
jb
insb
inc
push
out
outsb
xlat
rcrl
jno
leave
ffreep
divb
pop
lea
mov
lahf
je
iret
aas
xchg
jnp
lea
stos
add
sti
pextrw
mov
sub
cltd
jae
sbb
in
out
fwait
pushf
outsl
stos
leave
pop
clc
mov
mov
cmp
inc
test
jl
scas
frstor
jns
adc
sbbb
test
in
push
bound
sbb
xorl
call
mov
jns
jp
mov
lea
mov
jl
ja
sti
cmp
std
imul
dec
ret
sti
fcomp
jge
shl
pusha
or
add
fdivl
dec
jns
fdivrl
js
ljmp
mov
push
mov
mov
repnz
fisttps
cli
scas
iret
push
aad
lock
push
int3
push
push
lret
push
ss
icebp
popf
inc
pop
adc
rep
dec
or
pop
mov
dec
pop
test
dec
lahf
fisubs
sub
addl
mov
popa
push
mov
xchg
sbb
jae
leave
cli
stos
inc
cltd
maxps
and
out
aaa
loope
stos
xchg
shrd
scas
mov
ficomps
arpl
stc
pop
add
scas
ret
mov
repz
adc
add
mov
ds
push
les
adc
aaa
dec
mov
roll
fistpll
rcrb
jo
sti
stos
repnz
ret
clts
mov
push
cwtl
xorl
mov
mov
jle
mov
dec
xchg
addb
jns
leave
jns
arpl
pop
mov
ja
cmp
jns
mov
pop
lret
jecxz
stos
insb
imul
mov
jne
xchg
xchg
mov
push
js
aad
ljmp
popa
push
xor
inc
jg
pop
sarb
sbb
mov
xchg
test
aas
das
push
sbb
cltd
lret
es
mov
dec
mov
mov
lcall
fprem1
jno
lahf
stc
cli
sub
jl
mov
scas
or
insl
cmp
leave
dec
add
fucomi
movsl
push
in
jno
out
outsl
outsl
lods
fisubrs
pushf
movdq2q
dec
fadds
xor
cmp
ja
sti
inc
ds
mov
cli
jge
es
daa
dec
scas
or
xor
add
xor
jns
sbb
cmove
mov
xor
mov
loope
pop
add
push
pusha
test
imul
fcmovu
fisttps
icebp
arpl
shlb
push
cli
lock
xchg
ds
jp
cmpsb
push
dec
loopne
push
jge
shr
and
cwtl
jns
mov
jl
popa
cmpsl
sqrtps
mov
jle
mov
inc
lods
mov
pusha
lcall
test
xchg
mov
ss
out
and
dec
fdivr
std
lods
inc
push
outsb
shll
pop
mov
orb
fstpl
mov
aas
out
cli
inc
push
insb
jb
jb
jnp
incl
js
jl
jno
aas
add
ret
js
outsb
jo
test
or
movsl
loope
sub
mov
stos
bound
xchg
mov
sbb
inc
cmp
das
hlt
xor
xor
mov
xchg
out
cld
mov
out
fs
int
aas
clc
mov
insl
adc
add
into
imul
ret
inc
inc
pop
arpl
add
outsl
push
lea
mov
mov
sti
int3
rorl
cli
add
push
xor
jecxz
jecxz
leave
pop
jecxz
fildl
js
fnstsw
pushf
call
cmp
pop
or
cltd
in
outsl
lods
or
mov
push
cmp
addr16
dec
fsts
mov
push
cmpsl
mov
mov
sbb
psrlw
iret
sbb
scas
rcrl
dec
mov
mov
add
sar
loope
push
mov
je
push
mov
jae
add
dec
leave
cli
add
xchg
dec
jns
jg
fdivl
shl
pop
cs
pop
sbbl
xor
dec
lock
cmp
jno
xchg
aam
cwtl
jnp
dec
enter
jge
andb
stos
sub
stos
loop
dec
add
and
jno
scas
hlt
in
popa
rcr
das
lock
imul
fidivrs
mov
inc
rcrl
jg
jnp
shrb
sarl
jecxz
lahf
mov
pop
jnp
xchg
outsl
cli
sbb
add
push
push
mov
xorl
cli
dec
mov
out
mov
into
sti
push
int
pop
jl
ljmp
inc
fsubrs
add
jb
dec
inc
xchg
fwait
stos
push
sub
push
dec
xchg
sbb
add
icebp
in
add
and
cli
lahf
cmc
jnp
mov
ja
add
dec
cld
cmovo
dec
arpl
pop
adc
sub
jp
ja
xchg
lahf
repnz
add
int3
pop
test
dec
movsb
in
leave
sar
lea
pop
pop
add
pushf
push
cmpsb
inc
icebp
js
jbe
mov
out
fmuls
ja
loop
ljmp
mov
jg
push
ret
insl
xchg
pusha
push
lods
mov
call
pop
das
jmp
xorb
jle
and
jge
notl
jae
cmp
mov
popa
and
jge
jae
aam
and
sarb
jbe
sub
mov
in
jno
push
jecxz
out
outsl
inc
jp
loopne
in
sub
push
sbb
jl
mov
and
in
insb
xchg
dec
icebp
rcll
stos
stc
lods
ficoms
in
lods
lods
aad
mov
inc
mov
ds
push
ljmp
pop
cmp
shr
xlat
jnp
mov
out
je
jnp
ljmp
mov
popf
popa
scas
aaa
pop
sub
inc
test
leave
in
lcall
add
push
pop
loopne
and
or
jp
adcl
std
jle
cmp
mov
jbe
incb
out
jg,pn
or
pop
jnp
inc
mov
add
pop
popl
add
and
fnstcw
out
pand
pop
movsl
testl
pop
shrl
cmovg
fildl
enter
sarl
pushf
add
lret
mov
push
loopne
lods
inc
and
lahf
add
lret
mov
dec
jo
cld
repz
clc
repz
fwait
lahf
imul
arpl
mov
or
cmp
fsubl
or
cmpsl
cmp
xlat
test
incl
jnp
shll
scas
test
repnz
adc
iret
mov
xchg
dec
stc
lods
int
ljmp
in
adc
add
cli
outsl
jb
cli
sub
cld
or
out
or
mov
sub
shl
add
orl
sbb
ljmp
pop
test
adc
loopne
sub
add
adc
mov
andl
xchg
jge
orb
dec
jbe
sbb
fimull
xchg
out
pop
stc
test
int
cmp
push
out
adc
mov
jbe
movaps
rcrl
mov
stc
and
and
dec
add
std
inc
jmp
push
lock
sbb
pmulhuw
lods
adc
sar
jns
and
pop
pop
adc
insb
clc
pop
into
dec
addr16
cld
fiadds
cmp
mov
fisubl
mov
or
jle
insl
mov
dec
cmp
hlt
fstps
dec
insl
sbb
ja
ret
mov
mov
jnp
je
mov
popf
adc
popf
and
jb
pop
fbstp
sub
pushf
fstpt
mov
push
mov
fdiv
into
setno
mov
leave
sbb
push
jbe
iret
negl
rcrb
iret
push
xchg
lea
jge
add
jbe
sti
mov
dec
or
iret
jno
xor
inc
neg
mov
incb
jg
xor
xchg
sbb
dec
iret
js
lods
stos
jp
orl
lds
jbe
ja
lea
or
loopne
lods
xchg
mov
push
sbb
js
stos
loope
movsl
xlat
cltd
xor
mov
andb
adcb
std
repz
dec
inc
add
loop
push
bound
mov
cwtl
test
les
outsl
scas
icebp
fstpt
push
and
jns
loopne
loope
popa
xor
dec
mov
mov
fistl
icebp
adc
dec
fiaddl
popa
pop
sbb
jle
mov
iret
lret
xchg
jno
out
scas
push
test
aas
jle
ja
ja
push
sbb
mov
lods
loop
mov
mov
cmp
mov
pop
std
mov
push
inc
sub
sbb
push
es
mov
enter
in
xor
add
addr16
push
in
movsb
add
cmp
rcrb
inc
pop
xor
xlat
xchg
in
cltd
loop
sti
jle
xchg
cmp
mov
xor
jb
adcl
inc
outsb
stos
and
sbb
scas
loop
cli
lds
loopne
insb
je
mov
dec
add
fcmovnu
cmp
enter
fstp
int3
mov
xchg
and
jle
xlat
add
aaa
aaa
mov
movsb
mov
in
push
mov
dec
pop
adc
or
aad
mov
ficompl
fbstp
testl
scas
out
lret
test
xchg
pop
jge
xchg
cmp
call
xchg
stc
cmp
xor
push
test
inc
stos
mov
add
mov
imul
mov
jae
imul
cmp
out
jecxz
imul
jecxz
fsubs
je
mov
sbb
push
mov
mov
mov
les
arpl
in
arpl
mulps
sarb
shlb
push
xchg
dec
cli
arpl
shlb
fildll
imul
mov
jb
jb
sbb
enter
mov
aas
lods
js
rolb
pop
iret
in
roll
inc
xor
icebp
mov
addr16
addr16
movsb
mov
jo
lcall
scas
faddl
adc
pop
mov
je
cwtl
repnz
mov
push
inc
pop
xchg
dec
clc
xor
ds
and
and
mov
fsub
xchg
leave
into
mov
shlb
in
scas
test
imul
in
mov
jg
movsb
cmp
pop
or
cld
pop
movsl
jecxz
push
cmpsl
out
js
sub
jle
lods
test
mov
fs
sub
test
xor
loop
in
jb
shlb
cmp
fstpl
bound
insb
scas
repz
jae
xchg
jb
cltd
scas
jge
out
sahf
xchg
adc
jo
enter
dec
fwait
jmp
mov
decb
cwtl
in
aas
cmpsl
gs
and
mov
lds
inc
orb
ljmp
icebp
dec
cmp
xor
push
hlt
sbb
push
hlt
lock
ret
ficomps
jo
cli
dec
in
inc
movsl
shll
shr
add
add
int3
xor
sub
cld
sub
subb
and
mov
out
xchg
enter
mov
cvtdq2ps
xchg
lock
inc
in
stos
jns
fwait
cwtl
mov
ljmp
mov
pusha
sti
ja
dec
push
popl
push
mov
cltd
pop
jg
inc
das
xchg
push
sbb
scas
daa
les
test
mov
adc
inc
scas
cmpsl
jae
clc
jbe
sahf
pop
jg
out
lret
push
aad
cmp
shrb
pop
int3
leave
loope
cmp
dec
jp
and
push
mov
faddl
or
leave
jo
lock
add
jne
outsl
cwtl
clc
xchg
and
sbb
repnz
jl
jb
incl
loop
push
addr16
fistpl
test
cltd
hlt
lea
fidivrl
push
out
push
out
lahf
inc
mov
cmc
mov
mov
dec
jo
loopne
rclb
ss
rcrb
xor
push
and
clc
mov
jp
inc
and
cltd
pop
pop
add
xchg
rolb
ret
test
or
sbb
xchg
loop
out
shrb
cwtl
sahf
ds
stos
xchg
dec
xor
add
push
negl
and
std
or
aaa
sahf
std
arpl
mov
hlt
int
mov
and
mov
or
jl
out
fildll
dec
es
out
and
test
movsl
mov
into
add
aam
lahf
jb
mov
lahf
dec
dec
imul
push
scas
imul
cwtl
mov
lods
imul
mov
gs
ret
data16
jmp
xchg
xchg
and
fdivr
jnp
xchg
jecxz
jp
fildll
std
lds
repnz
loop
ret
shlb
inc
popa
lahf
ds
add
jp
mov
loopne
mov
loopne
imul
cmp
push
inc
jb
cmp
pop
lock
mov
insl
mov
mov
and
jno
hlt
xchg
adc
mov
stc
add
jno
mov
sahf
mov
mov
sub
inc
inc
add
icebp
les
and
ret
pop
jb
cmp
mov
adc
dec
mov
cltd
arpl
push
xor
mov
repnz
fcomps
cmp
cmpsb
idivl
hlt
in
fdiv
jnp
ss
bswap
cmp
mov
jb
xor
shl
pop
cli
lahf
rorl
lret
fnstenv
jp
loop
fpatan
jmp
rcrb
jg
dec
xor
jne
adc
add
je
out
add
push
fildl
mov
cwtl
and
dec
js
push
sbb
fyl2x
sub
xor
xchg
das
iret
scas
les
push
jno
push
cmp
pop
fstpt
dec
mov
or
enter
add
add
ja
roll
xchg
lret
xchg
out
leave
std
addr16
push
cmp
pop
mov
js
jne
pmulhw
xlat
sbb
iret
mov
ja
cwtl
dec
and
rep
inc
xor
sti
or
iret
lea
icebp
mov
in
pop
pop
jnp
dec
add
out
popa
push
cli
pop
mov
mov
fisubs
sub
mov
xor
pop
movsl
movb
icebp
cld
fdivl
cmove
inc
ljmp
jg
dec
or
sub
adc
sbb
arpl
mov
jae
pop
jb
mov
xchg
or
push
jp
mov
addl
cs
paddw
addr16
push
idivb
shlb
mov
repz
inc
pusha
xor
push
hlt
aas
cmp
out
inc
int
fiadds
ret
sub
add
ja
push
lock
lods
fs
sbb
fwait
inc
aas
pop
mov
mov
xor
mov
sub
pushw
out
cmpsl
mov
sbb
repz
popa
cmp
xor
popf
mov
sbb
xchg
data16
sbb
jmp
push
ljmp
leave
add
jp
lods
fwait
inc
xchg
add
add
mov
push
shlb
lds
outsb
cltd
xor
je
add
push
xchg
mov
mov
popa
pop
mov
test
aam
adcb
decb
and
mov
inc
dec
or
enter
pop
add
sbb
repz
in
ret
push
mov
in
pop
bound
or
loopne
push
and
sub
push
or
mov
and
rdmsr
jge
ret
jp
and
add
in
mov
pop
inc
adc
ret
pop
imul
arpl
rcrl
loop
js
mov
jnp
popa
inc
xor
jg
test
int
js
cld
pop
fildll
sbb
pop
push
lret
shlb
lret
inc
add
lcall
js
aaa
jne
sti
pop
mov
std
lds
sbb
stos
cli
arpl
in
into
outsl
pop
xchg
test
inc
mov
and
lret
fwait
push
iret
loop
sub
movsb
dec
popf
fcmovnb
stc
popf
add
jnp
mov
rorb
and
mov
sbb
inc
inc
inc
aam
mov
xor
popa
cltd
rcll
pop
out
rcrb
add
jae
inc
test
rcrb
jl
jns
imul
pextrw
push
mov
fisubrs
dec
cld
or
add
adc
rcrl
loop
stos
icebp
pop
add
cmp
popa
cli
xchg
fisttpl
fdivl
xor
cmp
xchg
jae
test
fsts
jnp
std
mov
inc
push
popa
int
test
psubusw
mov
arpl
outsl
shlb
mov
out
pop
fwait
xor
imul
mov
mov
loope
clc
imul
daa
jbe
pop
jb
inc
mov
repnz
jle
inc
cmpsl
sti
inc
outsb
mov
stc
cmp
push
fistpll
jae
add
xor
fwait
fs
out
ja
jg
jne
push
xchg
iret
icebp
test
icebp
pushf
mov
sti
orb
pop
fcomip
fwait
add
add
ret
pop
iret
ss
and
mov
mov
bound
mov
idivl
inc
lock
lahf
xchg
push
jg
jmp
inc
push
xchg
lahf
roll
rcrb
mov
jp
push
lods
lds
xor
fnstcw
cli
ljmp
fistl
push
inc
sbb
pop
pop
insl
cli
sbb
push
inc
sbb
cmpsl
push
add
dec
sti
repnz
add
jnp
push
lock
adc
jle
fwait
cld
cmp
je
ror
or
mov
inc
jnp
push
ret
into
jle
add
push
lahf
sub
js
xchg
ret
pop
fildl
push
add
pop
inc
rol
or
pop
and
and
out
imul
pushf
insl
sbb
add
imul
pop
push
mov
add
jecxz
sbb
icebp
sbb
gs
dec
cmp
out
inc
roll
fsincos
cmp
and
lret
fdivr
adc
repz
mov
cmp
repnz
sar
mov
test
mov
scas
sti
mov
mov
cli
mov
sbb
add
cld
mov
fwait
inc
test
sub
mov
stos
cmpsb
pusha
out
les
cmp
nop
jmp
mov
repz
clts
cmpsl
fcmovu
pop
mov
insl
mov
bound
pushw
jl
pop
xor
fistpl
jnp
ficoml
test
dec
ja
iret
repnz
xor
jle
push
pop
icebp
repz
vphaddwd
out
stos
test
fsubs
sbb
mov
jo
ljmp
divl
js
out
push
pop
xor
dec
mov
cs
cld
imul
adc
cltd
call
imul
enter
lret
or
orb
add
sarl
pop
sub
roll
adc
icebp
xchg
jg
jge
icebp
cmp
cltd
sub
stos
fidivrs
xchg
and
mov
popa
popa
mov
clc
jbe
ss
ret
rcl
cmp
xor
imul
cmp
sbb
jecxz
popa
inc
inc
pop
fs
ror
fwait
jle
cmp
inc
mov
incl
jg
xor
pop
inc
movhps
mov
leave
ret
sub
popa
loope
into
sub
fdivrp
jae
push
add
ljmp
daa
push
xbegin
nop
data16
loopne
or
sbb
jbe
sar
jl
test
or
jle
ficomps
test
add
insl
aas
jg
jle
aaa
filds
outsb
mov
pop
adc
xor
outsb
xor
in
in
mov
stos
xor
push
loope
mov
jne
outsb
aam
shlb
je
pop
test
mov
dec
xchg
and
aad
lds
pop
je
loop
ss
jb
call
lock
test
scas
ficoms
outsb
cltd
fstpt
repnz
movsl
add
mov
clc
sbb
pushf
dec
mov
mov
push
jge
sbb
cmp
jbe
adc
add
and
and
aas
add
push
jnp
jb
ja
inc
inc
popa
out
mov
jp
out
add
negl
incl
sub
cli
mov
xchg
loopne
mov
and
sbbl
cmp
mov
add
in
mov
shl
add
inc
std
aaa
aaa
mov
les
fidivrs
pop
cs
fbld
and
stos
gs
push
outsb
rcll
xchg
inc
xlat
mov
rcl
pop
enter
add
aas
imul
xorb
fldenv
ds
pop
repz
out
jg
xor
imul
out
movsl
mov
jmp
xchg
negl
popa
jg
cli
add
imull
clc
jns
mov
mov
into
aad
imul
mov
ret
lds
xor
outsb
int
xchg
mov
jo
jecxz
hlt
fwait
mov
int
pushf
flds
cltd
and
into
sti
dec
push
add
mov
fcomps
cmc
cmpb
fiaddl
popa
test
lock
and
jle
divl
jae
sbb
push
neg
inc
fwait
aas
lahf
out
test
push
mov
notb
xor
dec
stos
lds
test
rolb
popl
adc
jnp
fsts
xor
sbb
xchg
and
sbb
jmp
push
mov
ljmp
mov
icebp
fcomp
lret
cmovg
sbb
stc
loop
insl
in
loope
repnz
mov
scas
push
inc
mov
pop
out
movsl
ret
imul
sti
fnsave
sti
mov
rorb
jns
sub
popa
add
xchg
nop
xchg
fistps
arpl
out
lock
inc
nop
and
clc
stc
inc
dec
ficoms
mov
mov
jl
into
cmc
pusha
add
out
arpl
lahf
jge
repz
out
stc
popf
jp
lods
lcall
cmp
bound
xchg
pop
sbb
sahf
or
scas
scas
imul
and
cmp
mov
xchg
add
push
push
testl
xor
push
popf
mov
jge
xchg
pushl
aas
flds
je
mov
cmp
mov
addr16
or
icebp
leave
push
mov
xor
enter
xchg
sbb
xchg
js
movsl
mov
mov
sbb
add
sbb
mov
cltd
scas
xchg
pop
jns
in
andnps
loope
outsl
negl
sbb
mov
inc
addr16
xchg
fdivrs
xor
xor
xor
sub
cld
shrb
xor
inc
mov
fnstenv
test
mov
fwait
popa
jge
lds
push
mull
cmp
into
test
rclb
xor
loope
shlb
insl
jno
mov
sbb
mov
jae
gs
push
stos
pop
cmp
cmp
int
jl
std
mov
js
mov
pop
jmp
mov
rclb
dec
insl
pop
add
fcomps
xchg
mov
js
hlt
scas
pushf
xor
mov
inc
push
xchg
add
sub
jnp
inc
inc
xchg
adc
xchg
xchg
repnz
sub
scas
pop
lock
mov
cltd
inc
les
imul
filds
cmp
dec
pop
insl
adc
lret
or
arpl
fcomp
fwait
jbe
push
mov
into
insl
cmp
jbe
dec
push
xchg
fidivrs
pusha
ja
pop
mov
fidivl
sbb
test
add
mov
faddl
scas
mov
js
sbb
cmp
mov
mov
pushf
pop
loope
sub
adc
jge
xchg
ds
mov
fcomps
arpl
or
dec
cwtl
and
jb
ds
jl
pusha
pop
setne
lret
shlb
inc
test
jl
xor
sbbb
inc
fidivs
jne
lds
mov
decb
xorb
test
lret
fsts
push
push
xchg
jnp
jmp
out
dec
jp
jbe
subl
mov
and
or
pushf
in
jp
push
lds
push
push
cmp
or
pop
xchg
loop
out
cmp
push
out
iret
sub
repz
in
outsl
enter
xchg
lods
xor
arpl
or
insb
mov
pop
fbstp
fs
stc
dec
inc
outsl
fyl2x
subb
iret
aaa
fucomi
std
nop
repz
xor
ds
out
shll
loopne
mov
mull
pop
in
fwait
adc
sbb
sbb
mov
cld
jbe
inc
test
xchg
push
jns
and
jnp
mov
les
pop
xor
cmp
cmpsb
mov
mov
je
dec
scas
inc
jns
inc
xchg
cmp
iret
push
loope
es
jge
fwait
sbb
or
jne
push
mulb
in
lods
or
inc
pop
jno
pop
sti
pop
fidivl
fildll
rorb
repnz
adc
repnz
pushf
jge
fs
sbb
pop
comiss
fnstcw
mov
add
and
imul
fsubrs
jmp
test
dec
add
in
lcall
loope
dec
inc
jge
outsb
xchg
jbe
sbb
jmp
push
xor
das
call
mov
ficompl
pop
std
in
fisubs
jnp
mov
loopne
aaa
cwtl
xor
jo
stc
ret
pop
out
ret
xor
xchg
loopne
add
in
fsub
xor
and
lock
outsl
into
clc
sti
mov
push
adc
mov
xchg
sti
sbb
and
cmp
icebp
out
mov
jns
mov
les
and
ljmp
out
enter
pop
mov
mov
sub
lea
and
fwait
lds
mov
jno
popf
push
cvtps2pd
int3
repz
aaa
sbb
mov
mov
add
es
push
fstpt
out
outsl
clc
add
jmp
leave
fwait
xlat
subl
cs
lock
xor
fists
or
repz
inc
mov
dec
dec
jnp
clc
dec
jg
out
dec
sub
lret
lret
cmpsl
jge
push
outsl
mov
in
add
cmp
das
cmc
push
mov
sbb
and
scas
jno
rorb
je
scas
mov
and
decb
popa
pop
int
dec
popa
outsl
loope
jnp
std
cld
inc
inc
notl
add
lahf
pop
pmuludq
fmulp
sbb
out
inc
test
push
call
shl
push
and
in
insl
mov
jle
push
in
add
xor
add
push
mov
shll
loope
jbe
lret
int
jecxz
jno
adcb
jp
jno
out
add
aaa
rolb
dec
fistpl
xchg
push
add
and
sbb
cltd
cmc
aas
js
das
mov
cld
aaa
xlat
imul
dec
sti
dec
fwait
insl
fdivl
xchg
rcr
into
sub
fcmove
int3
arpl
stos
in
cmp
sub
pop
pusha
mov
xor
into
cmp
aas
mov
jno
lret
jo
push
scas
outsl
imul
push
xor
jge
push
sbb
fcompl
jecxz
pop
mov
jns
scas
xor
outsb
popf
or
jo
mov
sbb
hlt
mov
nop
leave
cld
cmp
push
imul
fsubrl
jae
adc
loopne
xchg
stc
out
xlat
outsl
mov
rcrl
sbb
sbb
daa
pop
loop
xchg
aad
xchg
inc
cmp
js
jnp
pop
jmp
insb
rol
fs
paddsb
js
fstpt
jae
jns
pcmpeqw
aam
sbb
ljmp
or
mov
bnd
lcall
sbb
cmc
outsb
in
ret
inc
hlt
aas
and
ret
or
std
add
mov
sbb
mov
sbb
push
ja
aam
mov
in
sbbb
xchg
lahf
jg
jnp
mov
pop
pop
pop
in
aas
push
rcrb
loope
out
pop
sub
lcall
stos
mov
lock
pop
into
das
pop
popf
movsl
jno
or
pop
mov
mov
shll
cmp
xchg
test
frstor
js
ds
cs
popa
sub
push
lods
jge
pop
add
int
lcall
and
add
in
shrl
push
mov
icebp
aam
mov
cmc
rclb
pop
fistpl
mov
insb
inc
xor
cmp
fldl
adcl
nop
mov
jo
aad
fnstcw
test
jno
jnp
inc
int
push
mov
sub
movsb
jge
orb
popl
jmp
xchg
pop
dec
jl
mov
negb
dec
decl
das
imul
shlb
fcoms
sub
aas
pushf
outsb
in
incl
inc
pop
adc
push
icebp
push
cmpsb
aam
fstpt
sub
leave
add
cmp
cltd
rcrl
out
dec
jbe
hlt
sub
mov
inc
popa
push
fsubrp
mov
bts
in
rolb
mov
ljmp
xor
sarb
mov
cmp
aas
add
mov
push
jle
jb
outsl
dec
in
add
sbb
mov
clc
jb
out
jmp
cwtl
pop
lea
pop
loope
movswl
std
call
dec
lret
or
adc
sub
mov
adc
es
lods
ret
xor
mov
js
jns
js
xchg
mov
inc
fwait
push
sahf
xchg
jne
imul
dec
rclb
xor
test
xor
pop
testb
jg
pop
lods
into
sub
ret
cld
arpl
fsubs
and
jecxz
loopne
cld
mov
xchg
icebp
rorb
pop
arpl
out
mov
cmp
pop
xor
mov
arpl
xor
lock
and
sub
jmp
jb
xchg
mov
pop
out
and
mov
sub
pop
negl
div
or
jp
enter
lock
inc
outsb
enter
pop
sub
test
xor
push
in
sub
add
test
jno
bnd
fnstcw
mov
test
cld
test
pop
pusha
xor
inc
mov
clc
inc
popa
xchg
jnp
outsl
pop
mov
test
das
fldcw
jg
pop
xor
xor
outsb
jl
push
orb
js
xchg
xlat
adc
fnsave
addr16
lcall
mov
push
out
xchg
dec
xchg
ljmp
leave
aad
cmpsl
or
sub
fldl
inc
bound
mov
mov
shl
or
or
xor
jl
push
fdivrs
push
popa
mov
mov
mov
punpckhbw
and
xor
fmuls
mov
adc
jne
push
in
punpcklwd
shlb
cmp
mov
add
into
out
mov
mov
mov
add
outsl
sbb
mov
test
jo
cmp
lock
jnp
sub
jg
fistpll
shl
add
lods
hlt
loope
in
movsl
icebp
imul
mov
rolb
faddl
loope
mov
out
mov
add
out
ja
mov
jge
arpl
stc
mov
jbe
dec
jp
dec
cmp
jg
jecxz
pusha
push
and
popf
jno
inc
dec
sbb
mov
fadd
out
sbb
sahf
pop
jns
add
mov
outsl
mov
outsl
sarb
and
mov
inc
enter
lock
add
xor
pop
cmp
test
jns
ret
inc
adc
mov
aam
xchg
mov
popf
cmova
in
aam
loope
cmpsb
or
and
popf
lods
addr16
xchg
jmp
iret
xorl
popa
lea
fs
ss
and
repz
data16
dec
lcall
stos
jb
andps
adc
push
dec
cmp
pop
iret
cmpb
or
pop
mov
cmp
mov
jmp
movsb
pusha
cmp
enter
ja
pop
jae
dec
orb
test
fistl
cmp
lret
xchg
jnp
xlat
daa
jl
incb
iret
cmpsl
pop
pop
sbb
bnd
dec
bound
jp
jmp
outsl
loopne
sub
fiadds
cmpsl
dec
mov
in
iret
ss
mov
mov
pop
push
xor
pop
popa
out
icebp
push
add
jb
sub
mov
ret
jmp
fistl
jno
int3
sub
xchg
psrld
rclb
mov
mov
ret
xor
jne
and
jle
inc
shr
mov
or
cmpb
mov
add
cmp
out
mov
hlt
mov
cmp
mov
xchg
pop
cmpsl
scas
test
cmpsb
push
repz
jge
ffreep
push
xor
jp
sub
sbb
mov
pop
insb
leave
inc
push
and
mov
icebp
dec
adc
mov
out
mov
fmuls
dec
lods
daa
sub
in
cwtl
cmp
mov
addr16
jmp
fsub
std
ds
std
jno
aad
sub
repz
fadd
lea
fisubs
pop
add
add
or
pop
inc
push
in
shll
mov
or
bound
imul
les
sub
sbb
daa
adc
loop
sub
jns
cwtl
cld
pop
addb
adc
loopne
inc
ret
cmovge
xor
aam
mov
xlat
mov
lds
jg
adc
imul
loope
outsl
inc
sti
addb
or
push
sbb
loope
jle
mov
pop
jns
stos
mov
dec
ret
mov
sbb
dec
loope
or
push
addl
adc
mov
icebp
mov
pop
cwtl
hlt
popl
add
inc
and
enter
popf
or
sbb
sbbb
push
test
stos
addr16
jb
or
in
jge
jg
xor
valignq
movsl
mov
flds
loop
xchg
inc
mov
je
xor
test
mov
fiadds
out
mov
pusha
sub
xor
ret
cmp
bnd
pop
popf
adc
in
push
loopne
xchg
out
sti
pop
fwait
lcall
inc
lret
xor
mov
or
and
add
cli
xor
lea
pushf
pushf
push
mov
test
stos
cmp
inc
orl
sbb
cli
es
push
ljmp
dec
mov
movsl
andb
testb
je
add
add
dec
jbe
pop
xor
lret
mov
jno
out
dec
and
pop
pop
out
outsl
inc
outsb
pop
fdivrs
xchg
out
xchg
pop
adc
cmp
out
inc
dec
std
aam
movsl
xchg
inc
and
out
and
pop
xor
arpl
push
adc
lret
push
outsl
les
sti
mov
test
in
enter
fwait
mov
jo
mov
jb
cli
std
and
mov
and
adc
xchg
sahf
and
js
scas
adc
out
push
cmpb
dec
xchg
popa
and
leave
stc
loope
enter
add
std
jbe
leave
subb
sbb
ret
mov
cmp
add
sti
fmuls
enter
dec
pop
testl
xchg
xlat
stos
aam
pop
xchg
xchg
clc
jp
jle
scas
inc
jl
jge
mov
dec
mov
ret
mov
loopne
jmp
jno
xlat
dec
sti
add
pop
mov
cli
shrl
lods
shrb
scas
popa
sub
orb
push
sti
sub
sbb
mov
psllw
and
jae
mov
pop
loop
das
pop
mov
loop
add
not
ja
mov
cmp
movsb
sub
push
xchg
xchg
mov
lcall
push
push
cmp
pop
and
ja
cmp
pop
call
add
mov
mov
rolb
jp
cmpb
addb
test
ret
jo
mov
test
ds
mov
xchg
pop
adc
push
push
popf
popa
mov
jge
adc
pop
orb
push
sbb
inc
pop
sub
stos
jmp
sbb
lret
add
cld
inc
shll
std
mov
out
addr16
cmp
mov
dec
lea
ret
fwait
test
dec
nop
jns
into
cmpsl
gs
mov
pop
jge
fisttps
xor
pushf
insb
jnp
sarl
aad
xchg
dec
mov
test
insl
sub
adc
movsl
aad
cmc
imul
aas
int
out
rorb
pop
inc
inc
jecxz
out
adc
ljmp
mov
inc
cli
inc
fnstsw
pusha
ret
adc
add
xor
fwait
push
jno
xlat
pop
popf
rcl
ja
pop
sbb
mov
fiaddl
and
sub
add
popf
jge
xchg
stc
ds
pop
outsb
shll
mul
nop
xor
jnp
inc
mov
pop
popl
pusha
add
cmc
insb
jnp
iret
in
outsb
ds
xor
stos
sub
call
jge
addl
dec
in
xlat
int3
xchg
hlt
cmp
lcall
rolb
aas
add
jns
cmp
adc
js
lahf
xor
int
pop
cltd
xchg
scas
rcrb
ds
cmpsl
xlat
push
pop
minps
jb
push
inc
mov
popf
ret
pop
lea
aad
or
into
js
mov
add
ficoml
bound
mov
fwait
xlat
enter
ret
adc
aad
icebp
rclb
dec
rcrl
pop
popa
jecxz
pop
jae
xor
notl
insb
add
and
jne
fldl
jecxz
popa
xor
lds
mov
push
jno
jns
cltd
sbbl
dec
xchg
test
push
sbb
sti
lods
pusha
arpl
int3
cmp
mov
out
fcmovnbe
inc
and
outsb
jge
adc
mov
mov
out
sbb
mov
inc
daa
or
je
or
dec
jle
push
mov
lcall
aaa
cli
mov
icebp
jae
jno
push
mul
mov
push
bound
xor
cmc
inc
les
push
cli
push
adc
in
and
jp
pop
lret
mov
int3
dec
mov
mov
cli
push
in
in
jecxz
pop
xor
xchg
jnp
and
lahf
imul
lea
cmc
push
sbb
dec
lret
test
sbb
mov
in
dec
repz
push
or
adcl
lea
mov
adc
cmp
inc
lock
mov
xchg
idivb
cmc
sti
sbb
jb
and
daa
mov
push
dec
int
xor
push
bswap
repnz
loopne
add
xchg
sbb
jp
lea
jecxz
push
stc
or
cmp
push
adc
ret
xchg
mov
test
bound
jns
loop
ret
jbe
movsb
inc
test
insl
stc
movsl
psubd
js
cmc
push
incl
jns
inc
cli
or
bnd
in
in
add
dec
cli
fidivrs
lret
arpl
fincstp
lahf
inc
xor
enter
mov
sub
lods
lahf
push
cmp
sbb
repz
cmp
cmp
aad
clc
cmp
jg
lahf
bound
fnstsw
ficoml
clc
mov
xchg
inc
adc
ret
arpl
fsubrl
xchg
leave
and
cwtl
jge
jo
cmpb
and
testl
push
xor
dec
andps
sub
inc
test
mov
mov
add
mov
pop
or
imul
jno
or
cli
ja
add
pop
fstp
add
jp
stos
in
daa
xor
roll
scas
mov
sti
push
dec
pop
adc
movl
iret
jl
rcrb
pop
dec
push
push
pop
inc
scas
in
and
faddl
push
fidivl
jo
dec
pusha
sbb
mov
js
mov
mov
sub
pop
ficompl
out
and
adc
adc
out
sub
or
jmp
int
xor
dec
pop
push
add
dec
cmpb
jno
sub
bound
outsb
jns
out
leave
les
pop
push
push
lock
psrad
stos
mov
push
push
push
and
xchg
lret
pop
pop
cs
mov
shl
xor
cmp
or
outsb
xor
aam
repz
subl
shl
lods
mov
jo
push
shl
sti
lcall
fimuls
outsl
out
jge
test
adcb
ret
xor
sbbl
mov
xor
add
test
cld
mov
inc
js
cmpsb
cmp
mov
add
leave
int3
sti
stos
lret
aas
rcrl
mov
nop
out
push
pop
xchg
jmp
adc
aas
jne
jno
test
mov
xchg
inc
pop
xchg
call
jno
test
lahf
fnstcw
xlat
push
std
inc
aaa
js
stc
cmpsl
jp
dec
sbb
outsb
jp
push
add
lds
int
inc
jp
fistpll
adc
or
mov
rol
stos
aad
lea
lock
scas
push
fimull
inc
bound
fistpll
inc
inc
cltd
aam
lock
aam
or
mov
mov
push
cltd
les
sbb
jb
adc
add
aas
fbld
push
jp
iret
loop
jno
push
test
sbb
adc
bound
jp
mov
inc
jp
insl
jp
js
cmpsl
mov
pop
jne
push
jg
fbstp
arpl
mov
pcmpgtb
ret
popl
popa
test
out
jg
test
rcrl
iret
mov
mov
test
gs
push
ret
mov
clc
xor
cmpl
cmpb
pop
jnp
sub
mov
lea
repnz
lret
or
jge
jle
jp
test
xlat
xchg
mov
and
lret
clc
cmp
inc
pushf
lods
inc
js
mov
mov
gs
lock
jp
stc
leave
aas
neg
sarb
daa
sub
dec
aas
stos
jecxz
psubusb
or
and
inc
lahf
sbb
mov
xchg
dec
ret
into
js
pop
insl
mov
or
es
inc
dec
aas
sub
cmpb
pmaddwd
sbb
sar
bound
adc
out
sarl
and
mov
xor
shr
into
inc
ljmp
mov
adc
xabort
jns
shlb
cmpsb
add
inc
and
xor
ret
push
shr
pop
adc
mov
mov
subl
jbe
adc
ja
out
dec
fbstp
in
sbb
pushw
out
aaa
xor
fstpt
ficoms
sub
int3
inc
cmp
lock
mov
clc
mov
loope
repnz
enter
and
add
add
test
mov
repz
xchg
out
lret
stos
lret
jns
das
sti
sti
stos
mov
cwtl
add
stc
mov
pop
xchg
das
jbe
add
sbb
aas
jg
clc
and
popf
or
scas
adcl
mov
loop
loop
and
mov
lock
js
pop
push
and
repz
sti
sub
jae
imul
jmp
movsl
iret
fsts
pop
fstpl
rorb
dec
out
mov
negl
mov
cwtl
loope
add
out
leave
jl
mov
cwtl
cmp
mov
sub
or
bnd
nop
pop
add
popa
enter
bound
pop
imul
add
fs
sti
sti
fldl
gs
push
arpl
pop
jns
sub
lods
dec
add
jns
xchg
in
lahf
std
xchg
jp
push
inc
dec
rol
jb
stos
repnz
shr
jmp
fcoml
mov
jns
push
movsl
ret
xchg
aad
sarb
sti
in
ljmp
loop
push
addl
faddp
xor
and
and
mov
icebp
aas
ret
push
xlat
cld
xor
bound
add
mov
cmp
testb
test
js
imul
adc
js
xchg
mov
cmp
push
jnp
mov
jmp
bound
scas
repnz
push
cmp
ja
or
xchg
inc
inc
dec
stos
jmp
roll
addl
cmp
nop
bound
test
mov
sbb
inc
ret
out
pop
push
lahf
mov
jnp
ss
lock
mov
push
inc
cli
cmp
xchg
adc
mov
js
add
add
xchg
cli
leave
cli
daa
neg
sbb
and
lcall
out
out
shlb
call
inc
fwait
inc
mov
gs
jle
jae
popaw
or
push
fstps
xlat
inc
pop
dec
std
pop
cmp
cli
pop
std
jge
xchg
add
outsb
lods
cmp
dec
std
inc
ja
scas
loope
incb
push
popf
mov
in
adc
movsl
xchg
sarl
repz
in
mov
push
push
clc
xchg
stc
or
mov
addl
and
imul
daa
sbb
arpl
jle
fwait
adc
dec
fcmovne
sti
loop
pop
call
imul
stos
sti
std
jecxz
out
loop
sub
xchg
fcomps
pop
mov
orl
icebp
gs
mov
jns
fstl
imull
xor
mov
cmpsl
loopne
hlt
or
test
sub
nop
inc
sti
push
xchg
inc
ss
inc
orl
add
ss
pop
pop
xor
test
test
stos
mov
hlt
add
pop
icebp
sbb
in
mov
call
xchg
mov
stc
orb
icebp
pop
imul
sub
orb
das
dec
jge
xor
dec
das
xor
stc
jae
cli
fxch
push
cltd
cmp
int3
sti
sbb
mov
popf
imul
pop
into
rcr
push
jnp
cmpsl
sub
dec
mov
ret
mov
pop
fmull
mov
and
or
test
pushf
jbe
or
ja
cld
mov
and
mov
aam
sbb
jae
fiadds
lret
leave
aam
ret
mov
and
les
fnsave
inc
jle
mov
jne
lahf
push
dec
push
out
cmovne
push
jle
or
push
sbbl
xor
fnsave
rcrl
xor
cltd
inc
in
cmc
outsl
int3
jns
rcl
stc
jle
out
jge
insl
sbbb
orl
push
nop
bound
out
jp
fmul
imul
sub
pop
outsb
xrelease
xor
loop
and
cld
xchg
bnd
jb
shrl
jae
xor
repnz
cmc
fdivr
xor
push
lock
cmp
in
sbb
jnp
cltd
mov
mov
and
enter
jo
add
jp
push
inc
in
out
lret
fcompl
cmc
lds
ja
lods
insl
inc
in
aas
fdivr
and
cmc
cmp
and
aam
sub
add
xchg
mov
lcall
adc
imul
and
shlb
mov
mov
pop
lret
xchg
mov
jp
pop
and
les
jmp
push
repz
pop
loop
pop
or
pop
add
iret
add
clc
outsl
add
and
cmc
inc
and
push
cmp
pop
or
mov
outsl
jnp
arpl
shlb
adc
aas
push
imul
aam
daa
in
shll
pusha
lock
cmp
fsts
mov
fnstsw
adc
mov
pop
cmp
mov
insl
cld
ja
sbb
sbb
inc
adc
lods
pusha
inc
fxch
push
mov
sti
jae
push
cmp
mov
fistl
jo
add
dec
js
mov
xorb
mov
add
or
aas
loopne
sub
jnp
movb
iret
fiadds
add
mov
jns
out
stos
in
or
ficomps
in
js
pop
mov
lock
cmc
cmp
pop
adc
ja
iret
shl
pop
aad
xchg
cmp
shl
cld
sub
and
lods
sar
jge
mov
mov
and
loop
data16
mov
jno
pop
cmp
pop
rolb
lret
xchg
testl
cmc
loop
sarb
xchg
mov
mov
repnz
inc
push
and
add
mov
ret
mov
fisttpll
mov
andnps
lods
incb
pop
jnp
pusha
jae
outsl
or
negb
cmpb
into
adc
xchg
add
cli
test
and
ds
lods
jns
jmp
insb
shlb
xchg
and
mov
mov
fwait
lahf
rclb
inc
inc
push
cmpsl
ficoml
js
shrb
mov
lahf
pusha
mov
pop
mov
cmp
nop
test
imul
shrb
enter
mov
js
sbb
and
lcall
shl
jp
jae
jne
jns
arpl
movsb
leave
pop
ja
lahf
insb
mov
testb
jo
adcb
cli
add
and
fildll
mov
jg
sti
and
and
cld
mov
sbb
cwtl
dec
xor
sbb
inc
mov
mov
repz
pop
mov
jp
add
loop,pt
jne
sub
cmp
mov
add
push
or
push
shlb
push
mov
add
pop
jg
js
lods
cld
bound
ret
scas
std
push
inc
cli
jp
shll
add
add
push
idivl
mov
dec
pop
adc
add
jmp
cmp
mov
fmull
aad
fsubl
test
sub
out
mov
push
sbbl
scas
out
add
xchg
xchg
pop
test
int
sbb
sbb
jp
xchg
pop
cmpsl
xor
add
enter
gs
mov
add
punpckhwd
scas
adc
cli
adc
jno
pop
add
mov
ds
adc
cld
cltd
mov
mov
cmp
mov
pop
int
les
aad
cmpxchg
out
jb
xchg
jg,pt
jecxz
sub
pop
cmp
sbb
pop
movsl
inc
push
push
push
dec
stos
cmc
mov
or
icebp
mov
push
gs
add
add
adc
lods
loope
inc
jbe
mov
lds
cmpsl
imul
adc
mov
sbbl
sbb
lcall
ds
or
lods
call
mov
inc
stc
addr16
and
and
out
mov
ret
repnz
mov
jb
insl
dec
or
inc
ja
jecxz
add
add
mov
movsb
mov
es
andb
adc
ret
aam
and
cmp
js
cmp
mov
divb
sti
jno
mov
mov
fldenv
inc
mov
mov
sbb
sbb
mov
pminub
test
fucomip
test
out
cmpsb
jecxz
ds
leave
jb
pop
std
mov
cmp
icebp
pop
inc
dec
repz
pop
fidivrl
shl
stc
mov
cwtl
lret
out
cmp
lcall
cmpb
mov
push
arpl
loope
jp
cmc
shll
mov
mov
pushl
inc
call
insb
scas
ljmp
dec
cs
out
or
and
cmp
mov
ja
cmp
arpl
ss
mov
out
xchg
fsubs
jmp
roll
jno
ja
mov
mov
mov
xlat
push
cmp
insl
mov
gs
movsl
into
mov
jecxz
out
add
pop
cmpsl
sbb
je
push
test
lods
loopne
int
and
ljmp
mov
icebp
inc
aam
pop
jmp
xchg
xlat
outsb
cmp
and
mov
and
lods
pop
loopne
in
loope
aad
fiaddl
andb
jb
xor
repnz
es
imul
cmpsb
test
xor
in
adc
jno
stos
adc
inc
js
popa
cmp
push
add
sahf
or
cmpsb
pop
adc
aas
adc
mov
stc
mov
icebp
xchg
out
popf
mov
cmc
clc
xchg
push
mov
lahf
mov
incl
shrl
aam
mov
out
dec
jl
rorl
testl
repnz
mov
mov
mov
push
std
mov
lock
mov
jl
xor
dec
cltd
insb
xor
mov
adcb
nop
jg
mov
sti
jl
add
je
fwait
lret
cmp
in
inc
xlat
imul
test
mov
in
lods
xor
inc
add
sub
imul
cld
cld
or
xchg
out
jg
mov
xchg
mov
adc
imull
push
push
les
lea
jmp
sti
aas
jns
pushf
sub
pop
xchg
mov
cmp
int3
orb
cmp
outsl
and
stc
psadbw
outsb
popf
sub
jne
ss
ja
popa
sub
lcall
imul
add
xchg
inc
jne
dec
jae
stos
add
popa
fs
dec
jne
xorl
leave
incb
adc
cmpsb
pop
jg
cmp
lahf
imul
pop
fcmove
push
sbb
lds
jmp
aas
push
outsl
mov
das
jg
adc
jp
pop
mov
outsb
loopne
sbb
insb
mov
dec
mov
add
cli
fdivs
sbb
mov
or
sbb
dec
xlat
push
nop
jge
mov
pop
orl
mov
sbb
es
jnp
repnz
sar
sarb
mov
test
adc
negl
pop
cli
sahf
sbb
jnp
pop
xlat
adc
je
pusha
cmc
ret
das
ss
js
mov
xor
ljmp
lock
lods
cmp
cmp
pop
adc
xchg
outsb
mov
pop
cmpsb
sbb
adc
sbb
shrl
mov
jg
mov
idivl
mov
bound
ds
adcl
stos
dec
pushf
and
fsub
xchg
jg
cmc
push
sub
lret
adc
iret
in
sub
movsl
je
ds
incl
jo
adc
insl
lahf
xor
lods
js
mov
sbb
inc
popa
cmp
sub
sub
mov
lcall
jecxz
out
dec
insb
cmpsl
test
cmpsb
repz
leave
orb
cmp
gs
call
aaa
add
pushf
leave
sbb
mov
add
sbb
cwtl
sti
incl
add
iret
pop
popf
jp
repnz
outsl
mov
pop
mov
leave
out
add
fucomip
insb
mov
add
cs
test
icebp
jg
arpl
jp
jae
lret
dec
jbe
and
lods
and
fucomi
mov
outsl
cmpsl
mov
fs
and
test
test
ds
mov
scas
stos
adcb
loope
into
pop
out
mov
mov
adc
sar
jno
je
mov
mov
fstps
clc
inc
jbe
ficompl
jno
push
and
cmc
repz
xor
outsl
movsl
scas
leave
in
in
xchg
jecxz
dec
std
test
adc
int3
in
ret
pop
inc
sub
jb
mov
aas
enter
data16
adc
mov
xchg
pusha
in
xor
sub
sbb
mov
dec
add
mov
cld
and
sub
adc
pushf
mov
out
bound
outsl
out
out
sbb
jbe
sti
cli
push
and
popa
test
addr16
dec
or
outsb
andl
adc
pop
push
in
pop
arpl
pop
xchg
aas
popf
insb
xor
add
ds
leave
lahf
ret
popf
cmp
push
cli
sbb
loop
sbb
orps
movl
sti
mov
jg
jbe
jecxz
jge
inc
mov
cmpsl
cmc
and
hlt
mov
push
pop
sub
push
pop
push
adc
out
inc
ljmp
outsl
mov
rcrb
pop
push
xchg
jae
mov
xorl
sbb
xchg
das
xlat
imul
mov
push
xchg
cli
add
mov
ret
cltd
xor
pop
jp
and
mov
and
movsb
inc
mov
pop
xchg
outsb
mov
popf
fs
data16
inc
fwait
cld
push
pop
jae
insb
mov
pop
movsl
imul
jae
lahf
inc
xchg
mov
popa
jmp
jmp
add
xchg
lods
aas
sbbb
clc
inc
lcall
xchg
add
fmuls
popa
shr
xor
mov
pop
jns
mov
lahf
add
ret
dec
jge
push
adc
shll
loop
mov
lock
daa
movl
dec
les
inc
movsl
out
pusha
sub
rcrb
in
test
repz
jno
jbe
cmpsl
fwait
aad
lods
add
aaa
popa
lea
cmp
ljmp
fidivl
pop
mov
out
add
sub
mov
xor
aaa
cmp
add
inc
pushl
stos
ret
mov
pop
fistpll
leave
fldcw
pusha
or
inc
xchg
mov
jno
mov
mov
dec
pop
scas
ja
mov
inc
cli
dec
mov
mov
jns
mov
pop
ja
ret
scas
ret
loopne
fimull
xchg
push
mov
imull
jg
xor
pushw
sarl
push
es
mov
clc
into
jae
mov
xor
mov
out
fcoml
fldenv
lcall
cld
insb
dec
mov
adc
xcrypt-ofb
cmpsl
sub
mov
mov
out
test
std
pop
mov
movsb
xchg
sub
imul
jg
or
and
mov
fwait
xor
mov
out
dec
dec
rcll
pop
test
popa
sarl
lods
push
inc
fstl
ds
je
mov
mov
dec
mov
addb
outsl
movnti
dec
dec
js
push
repnz
cmpsb
inc
jns
icebp
and
xchg
je
mov
mov
mov
and
inc
mov
inc
jne
loop
mov
mov
adc
imul
xadd
pop
jb
in
enter
add
sub
in
mov
mul
sbb
sub
or
outsl
shrd
mov
push
mov
pop
fistpl
addb
fisubl
pop
mov
cmc
inc
inc
popf
push
aas
dec
mov
jp
sar
inc
mov
cmc
inc
pop
ljmp
add
js
mov
mov
mov
mov
xor
hlt
jns
sahf
cmpsb
push
ja
out
les
fwait
incl
push
xor
pop
mov
cmp
adc
in
xchg
stc
sar
jb
jb
dec
push
mov
dec
std
sbb
popa
and
pop
idivb
jae
pand
cmc
inc
das
aad
inc
clc
out
lds
pop
roll
mov
pop
enter
pushl
inc
std
sbb
xor
cmp
sbb
push
popa
xchg
outsl
rsqrtps
ds
sub
sbb
pop
mov
cmp
iret
icebp
mov
test
xchg
pop
pop
idivl
hlt
pop
dec
cmp
nop
ljmp
ja
jo
and
inc
cld
inc
stc
ret
inc
push
xchg
fistps
sub
inc
ja
cld
cmp
icebp
cmovl
addr16
inc
mov
lahf
sub
cwtl
clc
jnp
scas
repz
or
jb
pop
fsub
push
mov
mov
test
mov
rorl
out
cmp
xchg
jmp
adc
sbb
jae
out
lahf
dec
nop
mov
es
clc
mov
imul
outsl
bswap
std
and
lcall
mov
pop
mov
rorb
loope
pop
dec
pop
incl
adcb
les
call
test
ret
dec
adc
pop
mov
and
lea
mov
clc
cmpb
push
pop
mov
bound
ret
sub
cwtl
add
popa
int
push
jl
into
jns
cli
push
sbb
jp
add
outsb
idivl
js
rorl
inc
repz
fistl
push
nop
inc
push
movsb
xor
adc
sti
cmpb
xor
fiadds
cmp
jo,pt
or
mov
pop
mov
cli
pop
data16
and
xchg
in
pop
mov
das
cmc
mov
mov
dec
cs
mov
add
mov
and
ss
mov
and
aam
out
dec
fdivrl
mov
lcall
loopne
add
mov
ds
jmp
sbb
in
out
mov
mov
xchg
lea
ficomps
fnstenv
andl
lahf
movsb
dec
mov
dec
mov
sti
cmp
pop
xchg
xchg
ficoml
xchg
jl
mov
bound
inc
popa
or
loop
sti
cmp
pop
jecxz
xchg
xor
mov
pop
adc
jle
je
mov
in
xlat
jecxz
or
cmpsb
mov
divl
adc
cs
sbb
lock
test
push
jmp
clc
fisttpl
enter
dec
or
add
popf
push
pop
xor
xchg
xchg
fildll
mov
ret
jp
pop
push
cli
jns
push
mov
call
mov
mov
enter
xchg
push
sbbb
in
mov
call
xlat
cli
test
adc
cmp
repnz
cmpsb
pop
xor
push
loope
cltd
cmpsl
sub
rclb
add
jmp
mov
xchg
mov
cmp
mov
leave
stc
or
rorl
jno
xchg
sahf
sub
out
add
mov
sub
out
lea
dec
jl
mov
mov
fisubrs
xchg
in
mov
push
test
imul
shll
or
mov
popf
jle
daa
xchg
mov
push
sub
leave
scas
adc
int3
jmp
or
sub
lock
bound
pop
push
jbe
lcall
sub
inc
out
cmp
test
std
shlb
loop
ja
std
jp
jl
jns
setb
popf
in
mov
cmp
xchg
scas
test
sbbb
xor
adc
fadds
roll
test
dec
xchg
push
rcrb
test
mov
jg
std
imul
data16
fistps
pop
jae
lahf
inc
jg
js
jo
repnz
xchg
adc
lret
icebp
ljmp
test
add
sar
fisubl
lds
xchg
sti
add
mull
push
adc
test
mul
stc
fucom
pop
scas
jmp
testl
repz
cmp
rorl
jae
mov
jae
xchg
mov
sub
add
js
pop
mov
xor
or
add
or
repnz
push
pop
mov
arpl
sub
movsb
add
addr16
imul
ja
fldt
cmp
pop
xchg
test
add
mov
push
lods
shlb
sbb
out
sub
pop
mov
popf
stos
jl
shlb
addr16
insl
mov
and
aas
sahf
fcompl
das
hlt
cld
and
shl
mov
inc
aad
xor
inc
lcall
jg
mov
mov
lock
mov
jmp
imul
push
test
cmpsl
fidivl
popa
xor
aaa
shrl
ja
jge
xor
out
sbb
ret
gs
lret
jp
ficompl
fbld
xchg
ret
mov
pusha
loope
jl
test
aaa
ja
lods
xchg
dec
icebp
js
pop
dec
cwtl
sub
insb
jae
jg
and
mov
stos
clc
shrb
xchg
ljmp
std
int
and
ds
popa
jg
clc
loop
jb
ss
rcl
daa
hlt
neg
fstpt
xorb
lds
push
jge
cmp
scas
sbb
sbb
jl
adc
inc
data16
test
jle
js
loopne
imul
in
mov
sbb
adc
mov
jle
fisubrl
test
mov
outsl
sbbb
inc
cmpsl
jle
push
jo
jb,pt
inc
mov
shlb
mov
in
into
ficoml
mov
push
sub
test
xlat
punpcklwd
push
or
in
mov
sbb
jp
loope
pop
xchg
xchg
loopne
fisubrs
aad
pop
xbegin
jmp
sti
xor
js
xor
sbb
mov
lock
pop
sub
and
dec
jge
movsb
imul
into
lahf
test
les
iret
inc
in
mov
popf
outsl
out
insb
fsts
pop
mov
cld
jp
push
or
add
inc
popf
and
les
enter
mov
mov
inc
ss
push
js
xor
test
push
pop
loopne
ljmp
cmp
jns
iret
pop
lret
mov
push
adc
test
sub
push
add
cltd
daa
stc
addr16
shlb
or
gs
cwtl
nop
loop
aam
mov
jne
lcall
gs
out
ss
roll
test
decb
xchg
add
and
inc
das
adc
js
mov
jge
and
outsl
xlat
push
movsl
leave
lret
insl
push
shlb
cmc
ds
jnp
popf
ljmp
add
add
add
xchg
mov
push
inc
push
js
and
sub
push
inc
mov
data16
pop
jecxz
pop
jmp
pusha
out
stos
test
mov
xchg
cmc
mov
mov
dec
lret
decb
flds
pop
push
clc
dec
call
mov
dec
outsl
ret
inc
lcall
or
jge
cmp
push
add
scas
arpl
cmpsb
cmc
inc
mov
mov
mov
dec
mov
dec
mov
dec
push
stc
in
movsb
cs
sbb
jnp
add
jge
jns
ljmp
lods
push
and
pop
std
and
scas
adc
cmp
popf
pop
jo
les
out
jbe
pop
sub
cli
inc
fsubp
sub
push
mov
mov
or
insb
dec
testl
leave
xor
or
cmp
shrl
aad
inc
or
sbbl
ja
mov
in
pop
das
add
jge
rol
je
xchg
loop
jnp
ret
dec
inc
xchg
xchg
jle
or
imull
scas
jnp
popa
fdivrs
scas
xchg
lock
dec
and
ja
stos
imul
mov
icebp
aas
xchg
inc
mov
pop
jge
inc
sub
sbb
push
jmp
pop
cmp
xchg
shll
iret
aam
xchg
ja
aad
pop
mov
pop
adc
sahf
pop
arpl
xchg
push
iret
jmp
les
jne
xchg
push
mov
imul
repnz
mov
dec
cltd
in
sub
mov
mov
jae
les
std
inc
lret
dec
outsl
aad
aad
pusha
stos
call
imul
pop
pushf
inc
sarl
jbe
jecxz
into
fidivrl
jbe
insl
lods
mov
fstl
fsubrp
mov
mov
loope
test
inc
js
ds
jmp
push
xchg
push
int
adc
stos
cmp
mov
mov
inc
pop
fsubl
and
push
jb
sub
cld
cmp
jo
icebp
leave
js
cmpsb
jl
aas
inc
mov
adc
js
lcall
cmp
push
pushf
insl
lret
pop
mov
cld
inc
mov
and
pop
jns
out
mov
mov
xchg
fwait
inc
inc
les
sti
sbb
sbb
cmpsl
shll
cmpsl
popa
mov
pop
pop
xchg
mov
mov
mov
jb
lahf
sub
insl
daa
push
xor
cwtl
jbe
loope
mov
xchg
test
dec
add
stos
add
outsb
cmp
cmp
clc
or
shrl
jmp
in
fsubl
popf
loope
lds
add
les
sub
loop
jge
icebp
sbb
xor
xor
or
cmovg
insl
mov
outsb
xor
pushf
mov
or
xor
out
and
sub
cmp
sub
or
clc
push
mov
mov
fwait
test
inc
sbb
mov
sub
push
ret
jg
rorl
test
mov
xchg
hlt
fldl
fnstcw
pop
xor
add
arpl
pop
insl
sbb
addr16
jg
or
addr16
repz
xor
adc
sub
filds
sbb
mov
pushf
sbbb
jle
inc
jnp
cmp
cmpsb
xchg
fldl2t
pop
outsb
jge
sti
jle
icebp
inc
jge
jbe
or
cmp
loope
push
jge
sti
out
in
dec
ja
jbe
roll
pusha
popl
mov
in
add
cmp
jo
mov
and
jle
cmp
push
cmp
adcb
aad
or
push
push
mov
outsl
jge
imul
enter
add
dec
sbb
outsl
pop
ja
out
pushf
roll
sbb
xlat
or
repnz
lds
js
wbinvd
bound
sbbb
stos
add
mov
movhps
xchg
icebp
out
pop
push
sti
notb
aad
ss
xchg
jo
inc
xchg
or
pop
ljmp
mov
std
inc
mov
test
xchg
hlt
xchg
dec
mov
fisttpl
out
imul
shll
into
lock
cmp
push
dec
mov
movsl
pop
xchg
push
mov
cmc
or
data16
cmp
jge
and
jae
out
sahf
incb
js
inc
pop
inc
mov
push
mov
sbb
mov
jp,pn
jl
adcb
mov
cmp
jae,pn
jle
sbbb
loopne
xlat
dec
aaa
jmp
es
ret
adc
jl
jmp
mov
jb
pop
mov
clc
inc
jo
xchg
xor
xchg
mov
aaa
add
outsl
xor
mov
pop
lret
jne
sbb
fwait
mov
orl
roll
add
insl
cmp
inc
lods
pop
lods
ret
dec
sbb
fdivrl
clc
pop
js
pop
xchg
mov
pop
add
leave
clc
dec
add
cmc
rclb
mov
enter
clc
sti
loop
lods
jge
cmp
push
loope
jnp
xor
je
insb
lret
int3
jg
sbb
push
pop
icebp
cli
out
out
cmc
jae
xor
ds
fidivs
decl
ret
aas
sahf
test
mov
dec
push
xor
pop
xorb
sub
jnp
cltd
mov
mov
popf
add
and
out
inc
inc
mov
sbb
adc
idiv
and
icebp
cmp
pop
jno
ret
pop
push
lea
in
pop
mov
cmp
test
pop
dec
test
and
fcmovu
lahf
fstpt
outsl
loop
mov
incb
dec
cmp
int
sbb
jmp
ljmp
sarl
clc
mov
add
sti
fcompl
stos
imul
iret
lods
arpl
cmpsb
jo
fs
mov
lea
ds
push
jnp
enter
mov
push
mov
push
push
dec
jb
das
mov
ljmp
bound
int
jae
jp
mulb
sti
push
in
enter
fcmovnu
mov
mov
inc
mov
aas
jp
pop
jge
pusha
jle
idiv
mov
xor
push
cli
xchg
clc
ds
jp
iret
mov
push
fdivs
jmp
mov
sub
push
fiadds
fsubs
inc
xchg
cmpsl
sbb
push
cltd
adc
xchg
pop
xchg
negl
cmpsl
insb
inc
into
clc
pushf
imul
dec
div
into
adcb
cld
iret
xor
pop
int3
inc
punpckhbw
xchg
xlat
rorb
pop
push
xchg
test
out
mov
jp
mov
add
aaa
xor
push
into
jb
push
fisttpl
cmpsb
xor
repz
in
loopne
fabs
jnp
lret
xor
mov
sbb
shl
sti
lock
inc
jg
dec
popa
dec
jns
out
icebp
mov
data16
sbbl
insl
or
push
cld
rcrb
imul
add
push
or
mov
adc
mov
mov
jle
jg
dec
mov
insl
mov
sti
jbe
cli
lret
scas
push
xchg
mov
sbb
test
movsb
bound
jle
mov
xchg
mov
ficomps
popa
lcall
out
dec
xlat
and
inc
cmp
addr16
pop
sbb
cmp
popa
testl
cli
and
or
fucom
push
outsl
cmp
popf
add
push
pop
stos
lods
mov
cmpsl
cmpl
ljmp
loop
push
add
test
into
mov
rorl
ss
jge,pt
out
int
sbb
in
jle
pop
subl
push
subb
xchg
aas
adc
fs
lock
jno
pop
andb
add
movsl
cmp
jmp
sbb
adc
and
outsb
push
bnd
adc
dec
int
mov
gs
xchg
pop
fidivrl
test
xor
arpl
das
mov
filds
call
jbe
lret
adc
andb
inc
aaa
fstps
sbbl
adc
mov
push
dec
fildll
jmp
adcb
pop
push
xor
jecxz
adc
add
cmpsb
push
js
insl
pop
xor
adc
dec
shlb
xor
push
jge
cli
addr16
test
sub
mov
cmpsl
ds
mov
pop
int3
scas
push
mov
loop
sub
aaa
xchg
pop
mov
fcoml
imul
cmpsb
xchg
shrl
pop
pop
iret
arpl
jecxz,pt
pop
pushf
pop
popa
cmp
inc
iret
int3
orw
fwait
bound
pop
rorl
pop
out
inc
sub
mov
fcmovu
cli
iret
repz
add
in
test
xchg
adc
sbb
iret
xchg
push
stos
xor
test
iret
or
mov
bound
push
sub
lods
data16
stos
mov
xorb
mov
adc
pop
jae
mov
jb
push
in
outsb
stos
into
or
jb
rol
stos
push
inc
mov
fnstenv
jbe
cli
adc
test
testb
xor
xchg
leave
pop
mov
adc
js
aad
jno
mov
lods
xchg
sub
cmp
into
or
mov
xchg
and
aas
mov
mov
mov
test
rcr
cltd
jecxz
gs
push
in
cmpsl
mov
enter
mov
pop
in
fadds
movsl
dec
icebp
jmp
push
les
arpl
xchg
push
mov
outsl
push
test
fdivrs
arpl
push
icebp
mov
aad
and
and
push
adc
leave
outsl
pushf
xor
adc
int
into
dec
adc
mov
lods
popf
jp
xor
dec
imul
xchg
lods
add
dec
lock
negl
and
iret
mov
je
mov
mov
and
jno
add
cmp
testb
lret
dec
sarb
sbb
sub
xchg
test
jb
pop
adc
cmp
pop
mov
imul
rolb
push
mov
out
or
jae
cmp
fwait
mov
inc
testl
mov
mov
mov
out
pop
add
roll
mov
clc
xchg
loope
sbb
jns
sbbl
in
jae
push
dec
jg
test
and
sti
jp
and
divb
cmp
aas
add
loop
sbb
dec
push
enter
push
leave
push
cmc
js
dec
xchg
int3
je
mov
es
outsl
int
loop
sub
add
fsubrl
jnp
pop
loop
mov
pusha
pop
ror
xor
jp
push
dec
test
xor
jns
add
fidivl
sbb
pop
sti
ss
lret
xchg
sub
inc
inc
push
jae
ret
lret
mov
mov
mov
cmp
stos
or
inc
cmp
mov
xchg
in
rcrb
xchg
pop
adc
xorb
pusha
mov
xor
scas
hlt
repnz
adc
pop
cmp
pop
adc
or
and
cmp
loope
pusha
loopne
push
mov
adc
jg
push
roll
cld
idivb
or
and
jno
jnp
mov
shll
cld
scas
cmp
bnd
pop
add
mov
cld
jo
pop
mov
mov
arpl
lea
imul
cli
add
inc
mov
sub
bound
daa
lds
cmp
fisubrl
stos
fsubs
inc
jno
cmp
cmp
sbb
fldt
mov
sbb
es
add
addr16
add
add
inc
ret
popa
das
int
bound
mov
iret
movsb
dec
dec
stos
inc
jle
fisttpll
jnp
fcmovb
aam
sahf
movsl
adc
mov
in
dec
jg
mov
push
cli
out
mov
aas
jnp
jnp
loop
pop
test
out
jl
js
sbb
jle
dec
js
xchg
out
pop
repz
jg
jge
xchg
jnp
jg
push
lock
jg
add
mov
arpl
inc
xchg
ja
addl
ja
repz
xchg
mov
cld
add
icebp
roll
jb
dec
popa
in
data16
fdivl
filds
cmp
jb
popa
hlt
cmpsl
filds
jnp
lcall
pop
lcall
push
cmp
jb
popa
test
aas
mov
cmpsb
jno
loop
mov
aaa
jnp
jmp
jns
jnp
mov
ljmp
fcmovbe
jb
popa
in
call
jae
pop
imul
xchg
add
add
jmp
push
sti
stc
ds
pushl
jae
and
push
out
sti
pop
xchg
or
push
inc
jmp
daa
aas
push
mov
jl
ret
inc
jae
imul
bound
xchg
dec
jne
pop
push
test
dec
arpl
fcoml
nop
dec
iret
bound
std
leave
add
jmp
icebp
sub
dec
inc
outsl
jae
pushf
call
push
imul
rclb
call
jno
xchg
je
mov
push
lret
inc
jb
imul
jnp
ja
sub
outsl
xchg
ljmp
inc
sti
iret
jp
mov
cli
sbbl
psubw
clc
arpl
mov
mov
imul
ret
test
loop
fs
jmp
jae
ret
cmpsl
mov
repz
jbe
ja
cld
inc
in
push
vcmpsd
shl
xlat
lcall
ja
pop
adc
jmp
or
mov
dec
sbb
call
cltd
popa
xchg
cwtl
mov
xchg
xor
scas
rcll
addr16
xchg
in
jl
gs
and
push
xchg
mov
jae
jns
pushf
outsl
add
addr16
leave
fs
loop
adc
xlat
lea
inc
mov
cmp
fstpl
xor
xchg
mov
lgs
lods
scas
loop
adc
pop
mov
loop
adc
stos
addl
test
mov
movsl
ret
lods
jnp
movsb
xchg
into
ret
adc
mov
lahf
ret
mov
pop
ljmp
xchg
xchg
pushf
lea
jmp
test
jo
fwait
xchg
adc
adc
lahf
popl
push
adc
push
adc
loopne
imul
xchg
jg
jno
popa
or
add
lock
leave
int
add
push
dec
push
pop
dec
stos
dec
push
fimull
add
rorl
stc
mov
jnp
push
sbb
adc
insl
mov
loop
jae
rorb
jae
js
lahf
push
mov
popl
jg
negb
jmp
jne
jg
loope
dec
ret
add
int3
xchg
push
cmpl
roll
mov
inc
sti
fidivs
add
pop
inc
in
jnp
test
and
fcmove
std
scas
sub
sti
mov
inc
in
dec
cs
jnp
pop
lds
addr16
xor
jg
push
add
jle
jp
xchg
testb
imul
sbb
inc
stos
mov
jbe
test
add
imul
inc
cmp
mov
cmp
cmp
insl
jmp
repz
mov
repz
in
es
aam
jnp
rcrl
lock
cmp
stos
clc
fs
jge
addl
cmp
ret
push
loopne
add
out
cmp
xorb
cmp
adc
ss
jns
les
lahf
enter
stos
push
dec
outsl
test
sti
cltd
mov
outsb
sti
and
sbb
adc
cmp
ljmp
popa
cmp
arpl
arpl
inc
mov
dec
add
loopne
ljmp
popa
mov
mov
pop
jo
stos
lcall
shll
jg
mov
test
jg
aas
pushf
xor
aam
cld
lods
negl
jns
leave
xchg
adc
dec
ja
arpl
lahf
jmp
cmp
test
xor
popa
mov
cmp
enter
iret
dec
inc
aas
sti
faddp
mov
fwait
or
jmp
inc
ret
jp
cmp
jb
popa
xchg
popf
pop
jbe
add
out
frstor
mov
lret
push
loopne
int3
pusha
dec
iret
jle
adc
push
pop
inc
xor
jae
push
leave
jno
pusha
pop
ljmp
ret
add
std
add
jmp
dec
jns
xchg
paddw
jnp
ljmp
dec
int3
or
dec
push
jae
mov
pop
std
sarl
pop
pop
adc
add
cld
mov
fsubl
ret
mov
pop
iret
jecxz
jp
fisubrl
imul
in
jae
mov
ror
add
dec
sbb
lods
or
jne
adc
lret
pop
subb
int3
dec
int
lds
in
iret
mov
pop
leave
int
dec
dec
out
push
repz
xchg
jmp
and
enter
cmp
pop
push
jno
test
add
imul
push
cmpsb
in
mov
add
adc
jmp
sub
out
lret
lea
rorl
xor
shr
sahf
insl
push
imull
cmc
ret
jmp
jno
lds
int
adc
loop
push
push
pop
dec
imul
daa
std
jmp
push
jecxz
xor
popa
lret
add
ret
idivb
bound
call
out
push
pop
jb
sub
aam
addr16
mov
ficoms
insl
pop
shlb
inc
gs
jge
out
icebp
lock
ret
jno
insb
jmp
insl
fmuls
xchg
popa
loopw,pn
push
pop
fidivl
sbb
xor
fdivrs
loop
jno
cld
loopne
outsl
fcomp
sbb
data16
insb
adcb
pop
pop
dec
mov
dec
xchg
fs
fstl
ljmp
jecxz
dec
sahf
scas
jns
pop
lea
inc
pop
dec
dec
stos
les
dec
dec
lret
pop
xor
aas
out
stos
leave
fisubrs
cwtl
xlat
xor
divl
ret
ss
xchg
cli
push
or
ja
mov
outsl
ljmp
inc
cmpsb
jb
popa
stos
xor
rol
dec
dec
enter
sub
pop
adc
jnp
ja
mov
lret
jle
dec
rep
jp
jns
push
dec
insb
mov
in
jge
out
pop
int
cmp
and
push
in
into
aad
or
mov
and
popa
jo
push
sarl
push
jne
adc
pop
jnp
push
xorb
jae
arpl
rolb
shl
push
jg
jg
popa
stc
pop
and
repz
int
jg
loop
mov
popa
sbb
cld
mov
push
jnp
cmpsb
lods
mov
addr16
inc
adc
push
inc
pop
jmp
andl
sub
pop
clc
fsubrl
popa
or
dec
push
scas
pop
arpl
add
mov
lods
jnp
pop
call
sarl
iret
jns
fistps
xchg
in
or
popf
jnp
lcall
in
xlat
test
jecxz
lret
jmp
dec
out
sahf
aas
push
add
pushf
mov
jno
fistpll
add
popa
popf
mov
jno
fistpll
ficoml
cmp
ret
xchg
pop
cmpsl
pop
subl
sarl
cmp
xchg
repnz
pusha
call
mov
in
shl
imul
jae
mov
iret
mov
data16
pop
and
icebp
lea
add
or
push
addr16
jnp
mov
je
ds
rolb
lahf
mov
add
push
pop
dec
ja
insb
add
mov
loopne
sahf
popa
addl
push
ja
movsb
cmpsl
lods
in
pop
push
mov
xor
mov
push
or
leave
clc
out
add
repz
incl
fistpl
cs
pop
jle
test
mov
shr
pusha
iret
fildll
adc
cwtl
push
vcmppd
xlat
push
pop
adc
push
mov
pop
lahf
movsb
sbb
push
aas
add
inc
push
enter
or
subl
inc
rorl
mov
mov
loope
in
push
rcl
jg
and
or
je
fs
jl
jnp
aas
call
imull
jo
imul
dec
fcomps
inc
mov
inc
repnz
fadd
add
cmpl
scas
pop
or
jmp
jae
push
mov
mov
sbb
push
std
fnsave
sti
test
sub
xor
xchg
dec
lret
push
jae
lock
imul
jge
ret
jne
test
mov
jne
and
imul
jge
fildll
orl
movsl
pop
and
into
mov
add
xchg
iret
inc
jns
ds
das
aas
imul
dec
jnp
jns
cmpsb
fsubp
js
dec
rcr
aaa
aam
push
stos
mov
xchg
xor
mov
jle
into
insb
jg
cmp
insl
cli
xchg
mov
cld
ds
cs
insb
orb
aad
jns
rorb
xchg
out
fcompl
shll
cmc
lods
xor
jmp
push
add
push
push
lods
or
fwait
pop
xor
fmul
jno
scas
mov
outsl
lea
sbb
mov
pop
jge
dec
stos
mov
cltd
into
in
jle
add
and
cmc
inc
mov
cmpsl
test
mov
mov
std
popa
ret
mov
lret
inc
dec
aaa
jne
push
adc
daa
push
fs
test
popf
mov
push
pop
pop
xchg
push
stos
ljmp
inc
jecxz
jae
fldenv
add
cmp
arpl
pop
andb
nop
xor
cmpsb
aaa
mov
push
sbb
lods
push
push
dec
cmp
push
add
pop
and
xchg
cmp
cmp
lds
pop
mov
sub
stos
mov
fwait
ret
iret
icebp
xchg
adc
shlb
shll
jno
and
aas
mov
inc
adc
adc
pop
dec
mov
dec
addb
cmpsb
inc
scas
outsl
or
repz
mov
int3
xchg
mov
push
xchg
popa
cld
les
inc
insb
add
sub
mov
iret
rcrl
adc
or
inc
inc
insl
arpl
outsb
cmp
pop
jl
sbbb
xor
pushf
nop
add
push
rcl
cmpsb
loopne
es
mov
fisubl
cmpl
into
push
add
mov
aam
insl
cli
jp
add
pop
pop
data16
pop
lds
idivl
cmc
push
add
lcall
rolb
movsl
or
mov
and
jns
push
pop
push
jae
jno
ja
orb
cld
pop
adc
insl
cli
iret
adcl
jnp
sti
xlat
scas
rorl
sub
jle
stos
pop
test
test
or
xchg
mov
cmp
ja
out
jl
outsl
cmp
aas
scas
pop
rcrl
cmp
mov
movsb
frstor
cmpb
iret
mov
dec
out
push
sub
hlt
cmp
push
stos
cmpl
aas
ljmp
fndisi(8087
jns
out
fiadds
aad
jg
cmp
sbb
sti
jp
inc
addr16
and
imul
jae
shlb
add
lcall
push
fcoml
inc
pop
pusha
cmp
jmp
adc
ds
lds
or
cmpb
ja
inc
xor
lret
jnp
lcall
imul
rorl
aas
cltd
je
sbb
xor
arpl
pop
daa
sarl
cmp
test
data16
shl
xchg
xchg
cmp
push
lea
and
jnp
jbe
cmp
jge
icebp
js
add
jne
imul
addr16
lcall
mov
sahf
jbe
les
ljmp
pop
xor
jns
cmp
out
dec
add
fisttps
bswap
sbb
sahf
insl
pop
push
stc
psrld
sarl
jne
fdivrs
xlat
es
push
mov
jecxz
xchg
into
flds
arpl
fisttpl
stc
cltd
cmc
push
jno
jmp
aas
loop
test
cmc
loopne
test
insl
sub
idivb
dec
fs
mov
cmp
xor
fnstcw
lods
cmp
mov
hlt
cld
popa
pushf
daa
adc
in
and
mov
push
rcr
mov
dec
arpl
and
adc
rcr
push
and
dec
je
sbb
aam
aaa
jmp
push
daa
jmp
xchg
add
push
push
cmpb
sbb
arpl
push
xlat
xchg
sub
jg
push
and
scas
pop
inc
in
lret
add
lds
test
pop
jge
inc
cmpsl
mov
pop
dec
fistps
aad
outsl
push
and
roll
jge
push
sahf
xchg
mov
popa
sbb
mov
jg
orl
jnp
lret
loopne
fwait
pop
in
lcall
lock
lods
fwait
xchg
jecxz
dec
sahf
mov
push
outsl
add
ret
jb
pop
loop
dec
jbe
aaa
daa
jne
jle
repnz
mov
mov
or
repz
mov
mov
cmp
mov
subb
mov
lret
das
jge
sub
push
enter
roll
dec
out
sbb
lahf
aas
jbe
jns
xchg
stos
push
lahf
mov
pusha
iret
add
xchg
roll
test
rcll
push
repnz
pop
repnz
jne
ret
outsl
inc
mov
aam
les
inc
jbe
fdivrs
mov
and
xor
mov
jno
outsl
pop
xor
mov
mov
jb
testb
jl
stc
mov
scas
decl
xchg
repz
ja
dec
push
outsb
xchg
push
nop
xchg
scas
adc
loope
jp
dec
ja
lea
mov
or
test
and
in
jnp
dec
dec
imul
jnp
xchg
cmp
int
jne
push
pop
jnp
popl
negl
jg
out
icebp
xchg
pop
push
iret
test
pop
cmp
cmpb
cmpsb
roll
mov
mov
sbb
jb
jl
fildl
cmp
std
filds
shrl
jno
repz
push
test
mov
or
pop
pop
ds
fwait
sub
aas
add
pop
adc
insl
shll
std
inc
jg
pusha
pushf
out
shrb
mov
dec
xchg
mov
rolb
insl
sti
adc
movsb
lds
rcll
cwtl
lds
xchg
xor
iret
in
rolb
push
dec
jecxz
subl
ljmp
lahf
mov
mov
repz
lret
add
xchg
push
adc
data16
imul
dec
aad
xchg
rorb
loop
and
mov
inc
inc
mov
push
dec
mov
inc
rcrl
push
cltd
sub
cmp
stc
js
nop
daa
repnz
rorb
neg
jb
lcall
jns
std
xor
lock
inc
add
xor
loope
popf
bound
xor
cmp
lret
popf
shr
add
ljmp
cld
mov
insl
ja
mov
movsb
inc
jmp
jg
orl
cmovne
repnz
mov
dec
jnp
push
mov
lock
cmp
fisubrs
aas
out
mov
xorb
in
and
repz
and
push
mov
lods
jo
sbb
mov
filds
jno
inc
jle
or
sub
icebp
outsb
jge
shl
jnp
cs
clc
leave
jp
cld
add
incb
int
mov
scas
out
ljmp
ret
cli
fsub
into
pop
out
in
jnp
mull
inc
and
xchg
xchg
pop
cmp
mov
xchg
loope
jno
dec
mov
sbb
push
xor
pop
imul
mov
gs
ja
mov
sbbb
push
mov
cmpsl
pop
test
inc
mov
cmp
lods
repnz
dec
mov
lods
xorb
test
aad
push
nop
rol
dec
pop
or
push
pop
sub
iret
mov
ret
and
imul
mov
ficomps
lock
xchg
decb
push
fdivl
pop
out
loope
mov
adc
cwtl
inc
ret
aaa
sub
jmp
jb
sbb
xor
jl
jno
cmpl
add
arpl
fsubr
frstor
inc
jne
loope
and
lcall
addb
mov
xchg
jno
add
fidivrs
gs
mov
cmp
jne
jae
jne
sbb
pop
push
jno
and
push
fldt
jle
arpl
mov
mov
pop
sub
jno
mov
sbb
imul
scas
enter
sbb
das
test
jbe
scas
add
push
popa
pop
js
adc
jbe
mov
addr16
mov
xor
and
fists
mov
pusha
inc
loope
jnp
lods
add
lahf
ffreep
repz
jnp
mov
xor
cmp
sbb
fisubs
xchg
mov
pop
jge
out
xlat
sub
mov
adc
fldl
pop
cmp
leave
mov
jge
sbb
jo
addr16
out
adc
lods
aad
sub
sti
jge
loop
sbbl
pop
insb
xlat
push
push
insb
js
nop
repz
inc
bound
lods
jno
clc
sbb
lret
mov
lcall
cmc
pop
mov
es
sbb
add
repz
cmp
rorb
xor
fisubl
inc
mov
sub
pusha
js
in
fldenv
cli
mov
pusha
add
mov
jns
mov
jae
pop
negl
xchg
push
jne
bnd
xor
test
js
sarb
xor
dec
xor
mov
mov
push
jg
nop
adc
push
cli
imul
pusha
stos
arpl
cld
pop
sbb
fabs
adc
loopne
cwtl
outsb
jnp
aas
cs
rcrl
fdivrs
cmpsl
inc
mov
cmp
jl
inc
mov
jnp
cmp
outsl
pop
test
test
inc
bound
repnz
mov
jb
arpl
push
cmp
loop
xor
loop
mov
mov
pop
inc
jae
cmp
xchg
pop
fildll
dec
imul
cs
leave
loope
lret
out
pop
cmc
lret
outsb
ret
dec
jnp
and
sti
jae
mov
es
push
scas
mov
aaa
jns
pop
xor
cmp
lahf
out
sbbb
fwait
cmc
xor
stos
sbb
data16
mov
mov
mov
jnp
mov
jecxz
repnz
mov
shr
xchg
mov
push
mov
fwait
and
cltd
inc
outsb
inc
mov
adc
cmpsl
es
xorb
jle,pt
sbb
add
pushf
cltd
push
sub
add
adc
push
data16
aas
jl
push
les
sarl
jl
iret
aaa
les
into
imul
mov
fnstenv
jnp
jb
jge
lcall
inc
mov
pop
mov
pop
inc
mov
lcall
out
jbe
cld
xchg
lea
mov
add
pusha
and
pop
jbe
ret
stos
or
fnsave
mov
frstor
fnsave
std
push
cmpsl
xchg
loop
adc
cwtl
or
test
mov
mov
xchg
cld
jno
int
mov
orb
xor
ljmp
mov
add
pop
cli
into
andb
inc
fstpt
stc
xor
aad
xchg
jecxz
jns
stos
out
mov
bound
lahf
mov
sub
cld
into
stos
sbb
or
outsl
push
insl
xor
dec
jg
fidivrs
pop
fwait
imul
pop
adc
xchg
std
mov
xor
jo
out
inc
popa
jg
mov
addr16
pusha
inc
xor
outsl
bound
mov
loopne
jp
adc
xchg
repz
aas
sarb
outsl
out
addr16
lea
in
and
or
sbb
cmpb
jle
daa
mov
vphaddbw
inc
mov
add
jae
jecxz
xchg
mov
pop
lret
iret
mov
mov
jns
sti
pusha
xor
popf
pop
inc
mov
and
adc
sub
cmp
inc
popa
insl
or
rcl
rolb
jmp
inc
lret
dec
xchg
testb
mov
lret
sub
enter
movb
in
lods
push
add
inc
mov
mov
arpl
ds
inc
rorl
sbb
aad
ret
sarb
lret
dec
test
jg
mov
mov
mov
mov
fwait
movsl
sbb
mov
fcomps
popf
sti
sti
push
adc
jnp
mov
cld
lea
jnp
or
xchg
jp
les
ja
sbb
addr16
mov
push
comiss
fdivrs
test
cmpsb
jno
xchg
jns
pop
sub
shlb
jle
jp
movsb
iret
inc
fisttpll
jmp
sub
fistps
aas
imul
xchg
inc
out
fdivl
fadds
into
mov
out
cs
xchg
les
stos
gs
add
popf
sbb
inc
lahf
std
in
loopne
sti
adc
loopne
xor
stc
push
and
mov
clc
jge
pop
es
js
inc
jo
adc
cmp
call
test
mov
inc
test
fcmovne
ljmp
outsl
pop
pop
in
shrl
mov
and
jge
jo
jbe
imul
push
jo
data16
jae
cmpb
ret
movsl
std
inc
jno
cmp
cmpb
jge
adc
jnp
in
pop
or
push
add
cmpsl
dec
fsubl
dec
jge
int
inc
cmp
bound
nop
arpl
and
jle
lret
repnz
aas
cli
lcall
jp
cmpsl
ja
sti
pop
addl
pop
push
sbb
jbe
dec
repnz
lahf
and
mov
add
stc
push
ds
or
xor
loop
lods
xlat
cmp
pop
jmp
cli
or
pop
inc
or
lods
xorb
pop
pop
mov
mov
lock
inc
arpl
mov
xlat
jns
jbe
jo
sahf
inc
aas
dec
ret
inc
rdtsc
pop
or
sbb
das
bound
mov
mov
dec
xlat
stos
pop
add
ja
xor
pop
ret
js
xchg
dec
xchg
cmp
mov
push
xchg
add
jnp
mov
or
les
aaa
cld
cmp
in
orl
sbb
cltd
repz
cmpsl
mov
dec
xor
pop
aaa
xor
push
sub
mov
cmpsl
testb
sbbb
push
add
xchg
test
into
movb
xchg
imul
les
inc
fisubl
pop
sbb
jp
push
xor
mov
shlb
movsb
mov
xor
pop
pop
xchg
xor
dec
and
lods
scas
fucomi
or
xor
movsb
or
fimull
icebp
or
jno
jmp
push
ja
out
loopne
jge
leave
rcr
cmp
ret
jno
jp
fistpl
pusha
push
fcmovnbe
cld
fcoms
push
lcall
pop
lods
out
fwait
add
or
jns
and
lahf
xor
lock
xor
test
xor
mov
adc
pop
lea
insl
rdpmc
dec
out
cmp
jle
mov
mov
lahf
xor
sub
cmc
aas
add
lret
mov
andnps
push
lock
jae
cmpsb
lods
pop
add
sbb
pandn
mov
xorb
pop
cmpsl
jns
fwait
jle
popa
mov
pusha
stos
in
repnz
mov
mov
popa
mov
sbb
std
mov
lods
shl
mov
stos
shll
mov
test
vmwrite
in
std
fs
xor
mov
adc
lahf
fstpl
add
sahf
fst
stos
repnz
pusha
pop
std
repnz
mov
test
iret
popa
inc
fnstenv
pop
ret
inc
aas
pop
inc
sub
xchg
sbbl
inc
xchg
inc
pop
cmp
daa
ljmp
rol
out
leave
in
mov
aas
jnp
jecxz
mov
xchg
add
clc
inc
mov
iret
jl
lds
ret
cmp
enter
or
mov
loopne
das
lahf
out
xchg
cmp
int3
fwait
lea
mov
jb
test
xor
inc
cmc
push
in
mov
jo
insb
mov
add
fiaddl
or
popa
pop
loope
fiadds
push
leave
inc
pop
mov
rcr
xchg
add
mov
mov
adc
bound
xchg
shl
repnz
mul
leave
out
out
adc
push
adc
jns
movsb
scas
and
mov
ja
clc
cmpsl
mov
push
push
push
cli
iret
jge
loopne
test
push
cmp
shl
leave
jae
inc
les
test
jns
nop
icebp
fbstp
or
aam
repz
and
mov
and
cmp
mov
fildl
in
and
mov
sub
nop
mov
pop
fists
das
push
lret
fcomps
daa
jp
mov
xlat
das
insb
faddl
in
dec
test
or
xor
daa
sahf
inc
pop
aas
cmp
fcomp
insl
outsl
push
ret
mov
push
mov
mov
test
sub
scas
movsl
flds
mov
insl
inc
lds
das
fisubrl
cmp
cmc
decb
pop
or
jo
cmp
mov
jp
inc
movsb
lock
cld
outsb
dec
jecxz
int
jb
orl
pop
sub
pop
and
aam
mov
add
arpl
xor
sti
lahf
les
xchg
pop
pop
cli
or
add
dec
fdivs
jo
fldenv
lods
sub
xchg
pop
or
or
xchg
aaa
push
outsl
xchg
stos
aad
pop
xor
push
xor
adcb
lahf
sub
and
xchg
xlat
movsl
cli
pop
or
movsl
into
stc
decl
stos
aaa
inc
stos
cmc
fisubrs
jmp
jg
decl
mov
fbstp
outsb
das
inc
cmp
shl
test
out
arpl
sbbl
sub
and
xchg
test
xor
mov
mov
repz
cmp
mov
cmp
jno,pn
fsub
and
ret
scas
scas
adc
lea
xchg
cmp
inc
jl
dec
mov
sbb
out
hlt
mov
mov
shl
mov
inc
or
jo
jg
xlat
xor
fildl
ds
dec
mov
or
aad
test
jg
pusha
jge
jnp
jnp
add
xchg
into
clc
cmpsl
mov
int3
ss
jge
or
repz
std
je
lock
outsl
les
fildll
pop
add
push
loopne
std
mov
push
mov
and
pop
jbe
and
xor
push
aas
jl
popa
xchg
icebp
xchg
shlb
pop
outsl
mov
sub
jle
jle
out
insb
adc
shl
lret
js
int3
into
ja
or
dec
jns
jno
lret
stc
clc
std
lret
jno
rcl
clc
mov
mov
repnz
das
mov
div
pop
dec
hlt
mov
fdivrl
xchg
xor
jae
loopne
clc
sti
jbe
dec
int
repnz
cmp
mov
sub
dec
pop
pop
mov
rcrl
in
mov
rcl
mov
jmp
sbb
mov
adc
fmull
jne
test
scas
aam
xor
sti
inc
adc
jecxz
scas
and
dec
popf
mov
sti
das
add
js
sub
test
int3
frstor
lcall
fisubl
sub
mov
out
sbb
push
jp
repnz
sub
jg
mov
lods
fwait
mov
inc
lret
je
inc
js
jg
sbb
add
enter
pop
jp
mov
push
out
out
repz
cmp
lret
stc
popa
jp
push
inc
repz
jb
push
repz
dec
mov
popa
jnp
add
cmp
push
fsub
and
pop
and
leave
loop
mov
rol
sub
shrb
nop
fidivrl
pop
js
std
or
jnp
negb
dec
push
pop
ja
add
cmp
lahf
leave
popa
xor
out
in
aas
push
push
cmp
shll
iret
or
or
dec
rcrb
jge
cmp
gs
leave
or
sbb
rorb
out
in
roll
cmc
inc
sti
cli
test
cmp
test
push
dec
fsubrl
movsl
cmpsb
inc
jp
leave
outsl
push
data16
and
in
testl
dec
lods
movsb
gs
cld
mov
mov
nop
and
xchg
or
fcmovnbe
pop
mov
jne
popa
and
or
jo
mov
jb
inc
jnp
pop
and
movsl
cmp
mov
rol
mov
movsl
xor
cmp
fstps
fisttpll
or
aad
rolb
and
fxch
jp
scas
pop
xchg
icebp
imul
out
jno
xor
push
sbbb
in
mov
xlat
sub
mov
bound
js
test
out
pop
or
dec
lret
cld
out
fidivrl
cmp
jbe
jae
dec
test
in
dec
add
cmp
stos
int
push
xchg
cltd
mov
cltd
aam
icebp
out
fisttpl
cmpb
loop
negb
xchg
lahf
jge
jnp
jae
push
xchg
fs
or
jecxz
jge
ret
dec
cmpb
ret
xchg
jl
dec
jne
test
xor
push
mov
clc
and
das
call
out
add
movsb
push
sbb
test
jns
aas
pusha
les
sbb
call
xor
arpl
push
jp
jns
neg
enter
push
fisttpl
jb
ja
lret
lea
dec
sub
fucomp
jp
pop
icebp
adc
inc
mov
adc
add
mov
xchg
xchg
push
ret
loope
mov
std
scas
adc
fcmove
aas
lsl
pop
arpl
test
test
xchg
daa
jle
inc
sub
ljmp
sbbb
loop
jecxz
cli
mov
mov
add
push
ds
add
arpl
pop
adc
mov
pand
test
cmp
in
mov
movsb
inc
add
dec
jg
adc
bound
out
jae
js
sbb
stos
jge
mov
into
mov
push
cmpl
or
shlb
add
mov
outsb
in
stos
cmp
loopne
mov
mov
xlat
in
lret
push
subb
cmp
les
jb
sti
loopne
in
stc
enter
add
add
ljmp
jmp
cld
ja
filds
aaa
ret
fsubl
xchg
sahf
dec
and
jle
outsb
mov
cld
cmp
bound
arpl
lods
sub
stc
jae
mov
js
add
fbld
faddl
adc
jae
dec
jp
js
lcall
and
scas
and
mov
outsb
lahf
jge
jns
xchg
cmp
ja
filds
arpl
shlb
inc
jge
mov
mov
xor
jbe
adcb
lods
xchg
insl
popa
fldt
aaa
rcr
xchg
dec
stos
das
jno
xor
jge
xchg
jecxz
iret
ja
aam
xlat
jg
add
mov
in
fwait
mov
pop
mov
mov
dec
fdivrl
and
push
jecxz
xchg
cwtl
mov
mov
arpl
sbb
pop
rorl
loopne
shll
cmp
mov
bound
sbbb
leave
lock
in
mov
iret
imul
sarl
pop
mov
arpl
popf
jnp
jbe
popf
out
jns
fmull
add
lods
mov
cltd
sbbl
sub
or
xchg
cmp
mov
rcrl
or
dec
xchg
dec
icebp
loope
sub
rcr
jnp
cmc
push
stos
or
jb
pop
jmp
push
xchg
sbb
dec
jp
lods
mov
jns
rcll
jne
roll
cwtl
pop
sarb
mov
push
das
fistpll
sbb
or
sub
shlb
xchg
fwait
mov
aam
adc
xlat
outsl
jb
push
cmpb
mov
ret
inc
jp
mov
je
call
rclb
fsubl
test
fcoml
loope
add
dec
pop
mov
imul
inc
sub
enter
jno
mov
adc
insb
insb
jecxz
in
jle
enter
and
and
ret
pushl
inc
xor
idiv
jge
leave
cmovs
cmp
pop
mov
xor
xchg
std
es
mov
test
leave
outsl
lret
scas
out
or
repz
sbb
test
cmpsb
test
loopne
jnp
dec
dec
push
xor
test
sub
lea
pop
test
rol
add
outsl
jl
imulb
pushf
dec
push
into
sahf
sbb
adc
ds
jb
and
add
gs
dec
out
mov
imul
push
pop
push
cli
xor
adc
jmp
outsl
jns
jae
movsl
jne
pop
xor
xchg
pop
gs
out
mov
mov
pop
jno
arpl
cmp
xchg
je
ret
mov
fdivl
fmul
cmpl
mov
cmp
sti
sub
xchg
cmp
lahf
inc
bswap
out
xlat
add
xchg
and
mov
jg
xor
out
cmpb
inc
pop
fwait
cmc
insb
and
mov
mov
sub
out
sarl
insl
dec
mov
ja
jbe
bswap
pop
pop
cmp
outsl
daa
dec
ja
mov
inc
xor
push
mov
sbb
pop
cmp
sub
sub
cmp
xchg
rcl
or
sub
xchg
es
xchg
sahf
fiadds
pop
jp
lods
mov
js
inc
ja
repnz
iret
je
add
scas
sarb
push
mov
add
inc
cmc
popl
leave
mov
fwait
out
add
out
mov
loopne
mov
loopne
dec
mov
mov
clc
fstps
mov
xchg
cmpsl
daa
and
push
ret
or
mov
or
mov
stos
jb
pop
flds
pop
jae
call
push
outsl
lcall
pushf
jne
ljmp
addr16
xor
and
xchg
jle
es
das
sbb
sub
mov
xchg
mull
pop
mov
cltd
jge
and
lds
les
rorb
jecxz
xor
mov
inc
jge
cmp
add
cld
lock
jp
test
fidivs
and
vmovlpd
dec
aad
mov
fucomip
fisubrl
and
push
mov
gs
cmc
popa
pop
gs
pop
jne
jl
outsb
cmp
dec
sbb
push
fwait
mull
inc
jo
pop
fidivrl
aam
rol
in
cld
arpl
sub
xor
cld
mov
daa
test
pusha
jge
push
fstpl
arpl
loopne
sbb
ljmp
flds
scas
in
aam
jecxz
or
sti
inc
inc
pop
ja
into
pop
sti
mov
cmp
sbb
mov
sbb
and
out
cmp
loop
adc
scas
mov
sbb
subl
sbb
daa
jg
imul
push
shll
enter
mov
repz
loopne
mov
aam
pusha
jns
adc
mov
xchg
or
dec
loop
mov
insb
outsl
movsl
loop
ficoms
lea
ret
xor
jle
insl
pusha
popf
in
repnz
xchg
nop
mov
jl
mov
scas
lea
pop
adc
int
addr16
lea
inc
cmp
sbb
push
jp
repnz
mov
mov
jle
jge
mov
and
jle
cwtl
inc
mov
out
jo
test
jns
outsl
scas
push
xor
sti
mov
jg
cmp
out
jg
mov
mov
or
inc
gs
std
sti
hlt
lcall
cmp
push
les
xchg
test
lcall
cmpsl
out
int3
ret
out
or
sub
jnp
adc
pushf
adc
mov
mov
stos
and
jno
in
cmp
cli
frstor
pop
pop
icebp
shll
cli
and
mov
xchg
insl
dec
cmc
shlb
lret
add
ret
cmp
enter
sub
add
xbegin
adc
sarl
inc
mov
fucomip
cmp
int
ror
call
jns
int
cwtl
enter
adc
out
std
aam
call
mov
ds
pop
fsub
ret
shll
and
cmp
push
mov
xchg
outsl
mov
out
mov
ja
je
fildll
mov
adc
popa
out
test
sub
ja
cli
inc
pop
xchg
xchg
aas
mov
jle
icebp
dec
lahf
arpl
xor
or
push
mov
shll
mov
loop,pt
sbb
stos
sbb
outsl
aas
inc
push
enter
push
cmp
lock
das
in
mov
je
subl
mov
jnp
mov
sahf
jns
jae
hlt
jmp
lahf
xor
sti
orb
movsb
sti
sub
bound
movsb
incb
and
dec
pop
dec
scas
bound
cmp
ja
and
je
sub
cmc
repz
fistl
mov
push
inc
lret
daa
jle
repnz
out
repz
pop
and
pop
mov
inc
and
mov
in
jns
call
pop
push
ljmp
inc
test
hlt
pop
or
pop
adc
mov
dec
icebp
es
ret
pop
or
and
inc
mov
out
xchg
jbe
xchg
mov
stc
mov
out
pusha
scas
jp
addl
push
inc
fldl
dec
fcmovu
inc
js
cwtl
cmp
call
mov
and
pop
cmpsl
aas
jecxz
rcl
rorb
pop
test
mov
scas
pop
int
jae
jmp
sbb
or
fildll
lds
lahf
loopne
scas
bound
mov
lcall
pop
mov
out
mov
mov
pop
xor
mov
jns
sbb
rcr
movsl
das
popa
lods
scas
loopne
adc
imul
negb
jp
sbb
repz
pop
sahf
dec
inc
dec
ficoml
repz
jnp
mov
mov
cld
push
and
jnp
fwait
mov
sbb
add
lcall
mov
out
pop
call
mov
push
xor
test
fdivrl
mov
scas
add
inc
stc
jge
mov
sbb
sub
add
pop
mov
sti
lahf
jmp
stos
pop
fnstenv
push
das
les
push
mov
pop
into
add
lds
inc
xor
cld
shl
mov
cltd
pop
neg
stc
and
and
inc
sti
sbb
andl
cmp
cmpb
push
cmp
and
cmp
inc
out
adc
xor
test
pop
cld
mov
jp
jge
add
mov
inc
mov
flds
movb
fisubrs
dec
push
mov
jg
test
or
dec
pop
out
mov
shr
ffree
aad
pop
sub
fsubrl
pop
dec
xchg
jge
jns
jne
outsl
push
cli
sub
xlat
es
lahf
xor
imul
sbb
clc
and
jge
push
or
cld
sbb
insl
pop
xorb
fucomip
push
fstpt
mov
sub
repnz
and
and
and
roll
loop
xchg
and
add
push
fisubrs
jb
pop
iret
imul
jle
mov
pop
and
incl
fst
and
mov
icebp
cmp
lods
movb
mov
cmpsl
or
subb
sbb
pop
mov
insb
sub
push
or
pop
jnp
shrb
jae
outsl
jge
cmc
mov
aad
lock
mov
jb
mov
dec
or
dec
inc
pop
mov
loopne
jle
popf
and
ljmp
out
pop
pop
rcll
or
in
out
jg
inc
pop
aas
push
or
mov
mov
push
fildl
jmp
in
data16
lods
push
mov
inc
pop
and
orb
mov
sub
gs
xchg
pushf
imul
mov
or
out
sarl
repz
pusha
subb
mov
pusha
scas
pop
xchg
fnstsw
mov
mov
gs
repz
rol
dec
arpl
lahf
rclb
popa
mov
insl
insl
inc
movsb
pusha
in
repnz
fnstsw
jne
xchg
mov
xchg
lret
or
je
daa
jbe
pushf
sub
loopne
je
sti
je
lret
sub
inc
mov
data16
mov
mov
xlat
pop
clc
pusha
imul
xlat
aaa
jnp
insl
sar
jbe
imul
xchg
jg
jecxz
or
push
jno
sbb
or
addr16
sahf
adc
pop
mov
mov
mov
or
add
jnp
push
rol
and
jb
mov
lock
mov
xchg
movsb
and
fadd
lret
mov
popa
fisubrs
xchg
shll
xchg
mov
and
add
jge
fsubl
adc
or
shl
aad
jnp
cmp
sbb
cmp
and
sub
imul
movsl
and
je
pop
fimull
inc
das
push
sbb
or
or
mov
lods
out
invd
add
xchg
cld
mov
andl
pop
iret
movsl
or
loopne
pop
ljmp
add
repz
mov
fsubp
inc
out
jp
lea
je
test
fiadds
fidivrl
andl
gs
lahf
iret
popf
cs
fstps
pop
test
stos
mov
or
inc
fcomps
push
dec
lahf
ds
js
mov
ljmp
pop
pop
ret
lret
jnp
nop
or
mov
mov
mov
repz
sub
movsl
sbb
xchg
lret
js
scas
push
insl
push
push
popa
mov
push
dec
mov
fbld
test
daa
jle
repnz
jnp
mov
add
pop
insl
int
xlat
lret
jp
pop
adc
xchg
lret
inc
aam
mov
sti
mov
mov
cmp
popa
cld
mov
nop
enter
cmp
sub
loopne
mov
les
mov
add
ret
fdivp
xor
pop
pop
mov
lods
and
xorl
movsb
jnp
leave
dec
ror
sub
sbb
jl
call
add
ljmp
lods
pop
xchg
pop
mov
and
js
jp
push
aas
insl
pop
test
or
movsb
pop
into
mov
and
rorl
cmp
lds
je
loopne
iret
popl
fidivrs
or
fs
push
aas
sbb
fisubs
movsb
jbe
xor
mov
sbb
insb
pop
jp
xor
pop
mov
add
clc
fistpll
add
movsb
loopne
push
push
lods
std
ljmp
testb
cmp
repz
cmp
jb
cltd
sub
stos
out
and
enter
mov
mov
sti
cli
stos
jecxz
push
xor
aaa
push
pop
and
mov
pop
test
add
out
xor
pop
imull
jns
xchg
in
or
scas
das
inc
lds
push
cmpsl
fisubrs
popf
out
lds
test
pop
jnp
inc
pop
ljmp
jle
shrl
lods
xchg
faddl
fimull
lahf
or
and
cmp
sub
sub
pop
sbb
xchg
xchg
add
xor
add
add
sub
int
dec
popa
rorl
icebp
jno
jns
ss
stc
gs
push
clc
mov
imul
mov
jmp
fwait
mov
jp
sub
xor
dec
cmp
sub
fwait
dec
imulb
js
rcrl
or
mov
arpl
icebp
inc
fsubp
inc
clc
icebp
pop
sbb
push
inc
ds
push
jl
popf
jmp
jecxz
jb
adc
mov
mov
sti
inc
xor
dec
dec
es
lahf
pop
daa
in
lock
cmc
sub
adcl
sbb
add
ljmp
and
icebp
clc
jle
mov
pop
pop
rcrl
dec
lahf
inc
into
aad
fwait
stc
mov
cwtl
lret
inc
scas
and
out
inc
in
pop
les
add
xor
cmp
cli
jbe
ja
mov
xchg
add
sbb
cmp
xor
mull
mov
jnp
mov
pop
es
rcrl
xchg
fs
push
push
cmp
mov
jmp
push
push
cmpb
cli
inc
cmpsb
jno
and
lahf
imul
pop
and
lea
mov
stos
cmp
shll
movsb
das
sub
fwait
jnp
push
icebp
test
out
test
idivl
xchg
mov
or
jae
mov
jne
mov
xchg
in
bound
insl
lods
mov
lahf
push
mov
inc
mov
popa
movsbl
repz
dec
fistps
xchg
fnsave
cmp
outsl
cwtl
jecxz
std
jg
rol
add
cwtl
dec
jbe
std
jnp
rorb
or
cmp
jecxz
pop
addr16
rcrb
cmc
dec
mov
jge
dec
int
ret
sahf
jmp
dec
loopne
and
push
and
fidivrs
sarb
inc
add
jp
loopne
pusha
xor
jg
std
pusha
jo
jne
lahf
sti
jne
int3
lock
fsubl
jae
jae
movl
pop
nop
lret
jge
push
roll
sti
jns
jb
push
ja
fmulp
mov
mov
mov
xchg
rol
fs
iret
in
xchg
out
test
orb
cmc
ficomps
les
loopne
inc
mov
xchg
and
scas
fcmovbe
dec
or
fmull
js
rcrl
xchg
fdivrl
adc
icebp
inc
jnp
inc
cltd
movsb
cmp
inc
cmp
cltd
jns
xor
icebp
add
xchg
fwait
test
rcl
jne
bound
mov
inc
aam
gs
xchg
mov
aad
pop
das
sbb
movsl
sub
dec
lret
out
sysexit
repz
rcll
xchg
loop
or
gs
repnz
mov
adc
dec
jle
sarb
push
sub
loop
call
xchg
shlb
fwait
sbb
mov
jle
out
aad
repnz
sahf
mov
or
pop
or
and
sar
jecxz
adc
loopne
jg
mov
iret
pop
xlat
cld
shll
xchg
pushf
mov
jle
mov
shlb
jnp
imul
shll
jmp
pop
inc
sti
movsl
dec
daa
pop
xlat
fmulp
mov
cmp
fisubs
pop
add
mov
js
out
xchg
sub
mov
stc
jbe
push
hlt
mov
jne
stc
xchg
push
idivb
rorl
mov
adc
mov
jg
fs
or
mov
shlb
and
and
mov
leave
add
dec
xor
je
mov
push
das
push
cmp
lcall
jae
and
push
lcall
dec
xor
pop
mov
test
faddl
sbb
std
pop
imul
inc
clc
jg
pop
das
mov
cmc
pop
dec
jbe
js
mov
je
rclb
fnstcw
pop
jno
in
cs
lock
insb
fwait
data16
rorb
jmp
xchg
lahf
int
pop
cmp
dec
mov
jo
jp
jg
push
dec
jg
jge
cmpsl
push
pop
mov
mul
inc
mov
inc
and
jg
fldl
pop
mov
mov
push
dec
outsb
jg
cli
andl
jge
jns
fmulp
in
ds
fidivl
mov
sub
ds
dec
popa
daa
dec
loope
inc
jl
rcll
mull
push
cmp
addr16
jle
sbbl
sbb
pop
cmp
leave
jecxz
cs
mov
test
sarl
push
icebp
inc
dec
loopne
mov
cmp
sbb
out
addl
xor
xchg
mov
int
xchg
jae
push
inc
dec
xor
xchg
cli
xchg
jb
cwtl
div
ljmp
inc
test
cld
xor
and
into
es
fwait
cli
mov
hlt
mov
fwait
jp
xchg
push
lcall
mov
cltd
es
and
xchg
mov
into
cmp
scas
cmpl
pop
sahf
pop
daa
xor
loope
mov
popa
inc
scas
fdiv
lods
or
or
lret
les
js
lods
sti
and
pushf
pop
sbb
inc
arpl
imul
mov
imul
insb
xor
and
cmp
aas
cwtl
mul
mov
adc
jo
dec
lret
pop
out
sub
arpl
push
mov
je
movsl
cmp
push
fdivrl
jp
cmp
add
sti
ljmp
add
arpl
inc
std
cwtl
scas
rcrl
popf
pop
scas
cli
lcall
sti
push
push
xchg
nop
push
gs
push
mov
mov
rcl
or
fimull
sbb
mov
fldcw
int3
or
push
pop
nop
adc
arpl
jp
ret
outsb
fisubl
jns
int3
xchg
in
push
loop
jns
mov
pop
lahf
rolb
repz
jb
aas
jb
mov
cs
fucom
xchg
jmp
repz
xor
jnp
lret
sbb
xchg
xlat
jnp
pop
inc
or
jge
pop
test
out
cwtl
in
mov
pop
inc
jnp
dec
test
dec
sub
pop
imul
fldt
mov
stos
mov
or
stos
adc
jnp
push
add
loopne
xchg
sub
cmpsb
or
out
xchg
and
add
leave
fst
aam
bound
push
icebp
push
xchg
xlat
ret
stos
inc
pushf
jnp
clc
push
inc
outsl
bsf
lahf
lock
jmp
out
cwtl
jbe
rcl
sbb
sahf
imul
push
scas
fdivl
lahf
cmp
pop
add
sub
into
idivl
loopne
aas
test
mov
test
mov
dec
xor
xchg
jg
jns
xor
mov
cmp
sub
loope
dec
adc
out
dec
or
sub
cmp
cld
mov
cltd
and
jl
adc
mov
stos
leave
fst
inc
fwait
ja
inc
fwait
rcr
aam
push
mov
and
adc
fcomi
cmp
fstpt
cmpsl
mov
orb
icebp
xchg
jno
sti
lock
mov
and
cmpsl
pop
pop
je
xor
xor
jg
mov
nop
movsl
jo
lock
jg
xor
addr16
and
or
add
cltd
or
or
inc
jg
xchg
xchg
cmp
push
into
jae
pop
cmpsl
aas
inc
pop
hlt
fmuls
mov
outsb
and
pop
add
jg
xor
outsl
sbb
jae
push
test
enter
lret
js
inc
in
inc
add
mov
outsb
out
jge
xor
cmpsb
fmull
inc
mov
mov
mov
fbstp
cmp
adc
hlt
pusha
leave
cmp
stos
mov
jecxz
shlb
sub
or
out
push
jle
inc
sbb
fistpll
push
pusha
repnz
mov
mov
pusha
jecxz
insl
jo
fsubrl
dec
cmpsl
inc
int
cmc
repnz
pop
push
mov
xchg
or
sub
jge
pop
mov
cld
jge
repnz
cwtl
add
mov
inc
andb
pop
ljmp
or
pop
icebp
mov
out
pop
pop
cld
lcall
pop
pop
outsl
aam
fcomp
jle
stc
jns
insl
cmp
jle
adc
das
xchg
aas
out
dec
ss
adc
inc
into
imul
insl
sarb
xor
fnstenv
cmc
outsb
insl
lret
sub
es
xor
pop
into
jle
and
cmpsb
mov
or
xor
test
jnp
loope
inc
jl
push
cmp
imul
sub
mov
popa
lahf
cmpsb
xchg
cmpsb
push
jae
jns
xchg
out
push
pop
and
or
add
into
insl
add
pop
adc
in
lcall
cmpsl
cmp
inc
cltd
cli
dec
jmp
mov
and
subb
jmp
popa
arpl
popa
and
aas
inc
jge
ds
iret
push
cld
add
and
inc
pop
fldt
imul
jl
xor
pop
aam
mov
mov
in
xchg
ficoms
adc
lret
popa
out
jns
jae
cmp
cwtl
mov
lock
jmp
addr16
out
aas
xchg
dec
jl
add
xor
stos
call
fcoml
push
jbe
in
ret
mov
dec
aas
ds
xchg
ds
jmp
dec
pop
add
push
pushf
add
and
jae
movsl
and
call
ds
xor
and
pop
fsub
pop
sub
cmp
das
fsubr
outsl
cld
mov
leave
scas
jno
xorl
push
xor
mov
fsubl
cmp
sarb
cmpsl
pop
popa
fwait
dec
outsl
lcall
cmovno
imul
jecxz
test
jle
mov
enter
mov
cmp
cwtl
jle
lret
jle
jb
mov
pop
fidivrl
inc
cmp
imul
xchg
fstpt
jle
pop
std
push
cmpsl
fdivl
sbb
xchg
std
mov
bound
addr16
icebp
mov
inc
mov
fdivr
repnz
sub
sub
fisubrs
bound
out
add
lods
lds
jle
push
mov
push
aas
outsl
movsl
jmp
mov
pop
not
rcrb
cmp
lods
repz
or
mov
pop
mov
mov
into
mov
jg
popf
mov
and
loopne
cmpb
js
mov
inc
test
lret
aam
push
cld
jo
and
mov
push
pop
jno
mov
in
jge
push
cltd
roll
cmpsb
incb
mov
xor
fcomp
sbb
cwtl
jg
mov
mov
inc
iret
pop
test
addb
arpl
adc
frstor
xor
out
xor
neg
add
sbb
pop
in
lea
mov
fldt
lock
mov
sub
shl
dec
mov
mov
adc
lret
out
cmp
dec
jne
jb
shrl
fsubl
imul
imul
jb
je
out
inc
jno
sbb
loope
jno
mov
pop
and
or
push
es
stos
fwait
aad
mov
pop
xor
sbb
hlt
in
xchg
enter
push
movsb
adc
mov
jns
movsb
or
aas
rorl
dec
mov
icebp
cld
rorl
pop
test
in
fsubrs
xor
mov
sbb
into
add
xchg
dec
mov
mov
push
in
stc
lds
mov
jle
xor
pop
rorl
push
pop
sub
sti
cs
sub
sub
cmp
pop
pop
fsubr
mov
testl
pop
and
dec
jmp
daa
loopne
imul
xchg
adcb
push
mov
inc
out
push
sbb
fwait
cli
dec
pop
pop
adc
pop
mov
and
xor
pop
out
ficoml
aam
pop
sub
jnp
rol
jg
mov
inc
sbb
lahf
xlat
mov
popa
ljmp
std
xchg
xchg
into
addb
mov
into
stos
mov
dec
mov
pop
movsl
pop
push
rolb
sub
addl
mov
jns
data16
mov
mov
push
push
aad
sarl
inc
xchg
pop
popf
xor
mov
mov
mov
push
stos
movsl
fsubs
mov
jle
dec
or
outsl
popa
sbb
and
outsl
insl
into
std
and
add
fidivrl
and
mov
inc
pop
or
fsubrs
fwait
inc
cmpsl
xchg
adc
leave
inc
rcrb
jecxz
or
sbb
sub
fdivrs
mov
sbb
loop
data16
jp
sub
lds
push
mov
mov
daa
lds
fildll
push
ror
xlat
xchg
aam
mov
iret
mov
out
repz
inc
ror
inc
int3
push
jae
inc
std
pop
jno
add
push
sbbl
std
dec
mov
in
mov
pop
lcall
dec
fdivs
std
inc
cmp
push
sbb
rorb
out
dec
sub
popf
jge
je
xchg
scas
jo
pop
lret
ror
rol
push
fdivp
cwtl
sbb
pop
ljmp
mov
pusha
xlat
enter
xlat
jl
and
into
ret
bound
pop
lods
mov
test
mov
mov
pop
mov
push
xor
mov
sbb
sbb
pop
adc
into
jp
test
imul
mov
loope
dec
fimuls
stos
adc
jb
popl
aas
call
mov
aas
jne
push
int3
pop
shll
test
dec
icebp
dec
sbb
mov
addb
out
pushf
mov
dec
xchg
push
mov
cmp
adc
lret
lock
add
sarb
push
inc
jge
and
icebp
insb
stos
jmp
and
loope
lcall
ret
in
add
mov
mov
xor
inc
dec
lcall
cld
out
jecxz
push
inc
dec
icebp
cmp
adc
xchg
out
lds
dec
ja
int
jg
mov
mov
popa
sub
cltd
dec
aas
inc
jo
std
aas
test
mov
mov
lret
fidivrl
or
push
mov
jo
fst
jno
fildll
add
andb
lock
jae
mov
xchg
imul
popf
inc
mov
push
mov
add
and
cmp
xchg
ret
sub
xchg
jge
repnz
sub
push
mov
xchg
xor
in
and
push
es
mov
movsb
cmp
dec
inc
leave
std
pop
je
js
add
adc
adcb
orb
les
loop
fldcw
mov
shll
jo
sahf
jg
fwait
aas
stc
data16
fucom
mov
mov
jnp
push
pop
adc
sub
scas
jle
mov
push
mov
and
outsb
jbe
movntq
jg
ss
xlat
pop
sahf
enter
jle
je
push
movsb
loop
inc
cmpnleps
inc
cmp
in
loope
pop
sub
pop
sbb
rorb
sarl
shrl
jmp
lds
aad
loopne
lock
pop
mov
icebp
or
jne
dec
mov
push
pop
xchg
fldenv
cmp
subb
cmovs
loopne
xor
out
pop
jp
cltd
add
inc
pushf
sbb
popa
xor
cltd
outsl
add
sbb
inc
fsts
jmp
jle
addr16
insl
inc
inc
cmp
sbb
fildll
push
push
repnz
mov
stc
jle,pt
in
pop
cmc
jae
dec
lods
jle
hlt
lahf
call
jle
fstp
loope
or
cld
loop
push
pushf
mov
adc
cld
repnz
mov
lods
iret
and
test
and
jl
mov
mov
std
pusha
iret
push
iret
adc
das
or
stos
mov
dec
mov
lea
mov
or
mov
add
sti
xorb
iret
jge
xor
jge
or
popa
jne
imul
mov
jno
jns
xchg
repnz
outsl
imul
lcall
cmp
ja
dec
fsts
arpl
dec
lcall
mov
and
inc
iret
lds
pop
stc
fwait
ds
iret
push
sti
xor
xlat
add
pinsrw
mov
mov
mov
adc
mov
sti
sahf
xchg
cs
cmp
je
repz
jle
out
cmove
repz
pop
leave
mov
mov
repnz
mov
lret
cmpsl
jle
fs
sti
adc
push
cli
mov
cwtl
mov
sub
cmp
add
gs
pop
inc
aam
loopne
js
mov
out
jnp
fdivl
mov
jge
adc
mov
js
repz
pop
orl
jle
int
bound
push
xchg
pop
stos
cli
movsl
inc
add
push
mov
jecxz
adc
adc
test
dec
pop
inc
movsb
mov
jp
jns
out
clc
js
imul
inc
jl
dec
popf
mov
out
loopne
in
jb
mov
outsl
inc
push
and
ds
test
cmpl
xchg
sarl
mov
in
mov
sti
pop
cli
xchg
add
jb
clc
negl
dec
inc
fdivs
mov
cltd
and
pop
jle
sbbb
frstor
aad
jnp
mov
mov
push
jns
push
ds
and
push
mov
pop
gs
je
xor
loop
jle
lcall
mov
mov
testb
out
repnz
js
and
push
out
adc
mov
push
aad
aad
dec
inc
cmp
sbb
in
pop
mov
aaa
lods
jle
pop
lahf
push
xor
mov
scas
shl
mov
popa
stc
lret
outsb
jbe
pop
data16
out
sbb
sar
xchg
sarl
jg
inc
ret
fdivr
repnz
test
loope
insl
jge
orb
out
into
or
ficomps
jnp
movsl
sub
push
push
push
pop
jp
fdivrl
fists
push
dec
mov
cmp
es
mov
outsb
dec
adc
dec
cmp
inc
test
clc
xor
mov
mov
jnp
rol
xchg
ljmp
xor
adc
jp
cmp
popa
shll
jp
fidivrs
in
adc
jle
cld
mov
and
xor
inc
xchg
enter
pop
int3
mov
fnstsw
sub
roll
insl
test
aaa
repnz
mov
je
xor
scas
pop
push
mov
pop
jle
add
cmc
leave
mov
adc
inc
out
mov
jns,pn
or
jle
inc
cmp
sbb
lahf
push
insl
ss
std
xchg
push
imul
mov
imul
mov
imul
sbb
lahf
mov
mov
adc
lret
call
inc
sbb
mov
mov
add
mov
push
lock
cmp
in
inc
add
test
icebp
inc
xchg
inc
push
out
mov
fabs
add
sbb
sti
loopne
cltd
sarl
jl
les
leave
into
xlat
or
stos
arpl
pop
inc
xchg
or
arpl
in
dec
jp
aam
ficompl
and
sbb
hlt
sti
loopne
jmp
cs
lea
movsb
rcrb
dec
test
repnz
in
and
shlb
pop
and
sarb
push
lds
jg
pop
testb
stos
stc
ds
mov
inc
dec
sub
insl
mov
inc
mov
popa
inc
rorl
pop
and
dec
cmp
test
movsb
into
sub
cmp
sbb
xor
out
sbb
xor
jnp
call
vorpd
ljmp
push
push
stos
or
out
fisttpl
adc
pop
fadds
in
mov
pushf
push
aaa
lds
inc
xorl
je
test
sti
cmp
fsts
jmp
ljmp
or
test
xor
jle
fistps
bnd
outsb
stos
bound
jg
jle
jge
xchg
jg
jle
mov
insb
sub
pop
je
jns
jns
jnp
push
xchg
out
js
pop
or
mov
scas
shll
lods
sti
and
int3
imul
mov
sbb
repnz
sub
test
cmpsl
pusha
repz
add
test
std
xor
mov
aaa
push
pop
jne
rcll
sub
mov
mov
jmp
pop
dec
mov
sti
hlt
pop
pop
inc
mov
push
xchg
mov
pusha
fxtract
ljmp
gs
stc
in
pop
xchg
sub
adc
sbb
fdivrl
sub
mov
mov
jge
cli
incl
scas
or
in
int3
add
mov
gs
pop
cmp
fs
fs
test
cmp
cmc
sub
mov
movsb
sti
lea
dec
into
add
mov
or
sti
aaa
je
clc
sbb
shll
ret
push
loope
setb
or
push
test
cmp
in
and
fisttpl
stos
xchg
or
mov
out
xor
push
xor
rorl
add
sbb
fistpll
scas
test
pop
lods
repz
cmp
mov
and
sub
and
loop
dec
addl
call
sbb
icebp
out
pop
dec
xor
jg
inc
iret
stos
decl
dec
aas
lods
out
cmp
add
scas
test
scas
cld
xchg
fimull
mov
sarb
inc
sarl
pop
out
pusha
popa
mov
sub
into
fwait
or
add
sub
icebp
xchg
int3
add
icebp
movsl
fsts
push
pop
aas
sub
mov
loopne
shll
xor
cs
dec
jecxz
sti
xchg
xor
fbld
jp
test
cmp
mov
xchg
mov
sbb
fbstp
jno
popa
cmc
pop
cmp
sub
xchg
call
aad
dec
lods
stos
dec
pop
lock
jl
adc
or
stos
das
add
push
sub
jp
and
and
pop
fldcw
cmp
add
xchg
and
mov
dec
fadds
pop
pop
aas
pushf
pop
or
or
or
xor
and
pop
inc
sahf
pop
mov
sarl
adc
pop
lcall
xchg
mov
pop
jne
push
mov
inc
xchg
rcll
push
out
scas
cmp
sbbl
jecxz
cmp
sbb
xor
je
pushf
iret
mov
ret
leave
js
inc
sbb
dec
push
lock
movsb
aas
push
xchg
shl
shlb
loope
daa
jmp
pop
xchg
and
out
and
outsl
loop
dec
inc
mov
pop
repz
repnz
lods
jb
adc
out
cmpsl
mov
lret
orl
test
in
jg
scas
cmp
stos
into
push
test
adc
nop
mov
inc
shrl
lea
icebp
push
jmp
into
mov
je
xchg
das
mov
jo
fisubrs
dec
loop
arpl
flds
mov
xor
ljmp
pop
movb
inc
pop
sub
pusha
movsl
sbb
jg
jp
mov
iret
pop
add
loop
outsl
aas
lds
rcr
xchg
fiadds
sbb
push
xor
inc
push
mov
gs
pop
test
shll
mov
fstpl
sub
mov
jb
addl
mov
jb
sbb
mov
cmp
bound
cli
xor
push
sarb
es
rolb
cwtl
mov
and
out
jp
push
das
xchg
stc
fiadds
jnp
jmp
aas
pop
or
jns
ds
mov
push
mov
repnz
xor
mov
inc
andb
aas
sti
stc
js,pt
pushf
dec
popa
fnstenv
in
dec
jns
mov
push
push
xchg
js
in
cmp
and
pop
leave
ret
decl
and
jbe
mov
and
out
mov
insb
pop
add
or
cmp
loope
jge
scas
faddp
xchg
fcmovnu
cmp
or
insb
and
xchg
push
iret
ret
add
cli
xor
popa
repz
add
cmc
pop
dec
pop
lahf
leave
xchg
xlat
in
sti
scas
or
jo
fisttps
inc
inc
jnp
mov
or
jp
ret
inc
iret
jp
cmp
jle
cmc
pop
loope
push
nop
and
arpl
pop
shr
ja
in
cmp
or
mov
mov
sarl
jno
insb
shr
les
adc
rorb
xchg
pop
test
shll
inc
movl
pop
mov
mov
jnp
push
jno
sub
fnsave
sub
lea
push
and
and
jg
das
mov
pop
push
rcl
movsl
pop
jne
repz
jo
call
insl
movmskps
int3
insl
mov
lret
xchg
xor
pop
fs
out
mov
jg
cmp
push
mov
hlt
push
jg
add
sub
jle
push
sub
mov
jmp
pop
jg
sub
mov
bound
ds
dec
pop
or
decl
add
adc
popa
push
pop
outsb
ljmp
ljmp
filds
out
add
add
xchg
jns
jno
mov
mov
push
pop
ds
ja
cmp
add
lahf
adc
fldlg2
add
out
fs
out
mov
loop
arpl
adc
xor
cli
cmp
mov
jmp
cmpsl
out
add
mov
add
jl
repz
pop
add
jp
cmpb
ds
sub
cmp
repz
xchg
cmp
orb
out
mov
push
jae
xchg
fsubrs
out
xchg
add
out
mov
ror
andl
std
cmpb
out
ror
dec
inc
loopne
or
out
filds
test
cmpsl
fildl
and
enter
mov
scas
add
aaa
add
dec
jb
imul
mov
loopne
nop
mov
mov
rolb
jno
pop
push
fistpll
ja
or
cli
clc
sub
aas
mov
mov
inc
loopne
mov
divl
mov
mov
test
xchg
mov
xlat
xchg
push
push
and
out
jp
pop
stos
pop
add
cmpsb
faddl
and
scas
daa
dec
push
xchg
xchg
jl
aam
shl
jnp
fidivl
outsb
into
pushf
mov
icebp
add
fcomps
sti
inc
push
push
cmp
jnp
xor
ja
movsb
lock
mov
mov
jnp
add
mov
mov
out
mov
push
fwait
add
add
enter
out
add
push
pop
pushf
cmp
in
jae
mov
pop
cmp
icebp
aas
jp
mov
pop
scas
cmp
push
mov
insl
pop
inc
mov
insl
popa
jno
and
in
mov
popa
cld
and
dec
add
push
mov
pop
repz
lret
jns
out
jge
inc
push
inc
fistps
sbb
fists
paddw
mov
push
call
out
inc
xchg
add
fs
push
scas
movsb
jg
adc
sub
add
and
ds
ds
add
jne
xor
cmp
mov
xchg
mov
add
ret
pmaddwd
inc
shlb
inc
dec
dec
sti
fcmovb
pusha
inc
orb
add
test
jns
mov
fdivr
xchg
add
cld
cmpsb
or
cld
jnp
psrlw
imul
jno
adc
cmp
jge
xchg
push
sub
jns
out
filds
dec
js
dec
dec
mov
jno
mov
cli
push
mov
in
fwait
out
lods
mov
jl
std
lcall
jle
shll
gs
js
out
loope
fisubrl
lcall
or
ror
movsl
pop
inc
cmp
jno
push
push
push
xor
xchg
and
aam
pop
jnp
cmp
jae
test
mov
push
sub
cmp
jge
outsl
leave
pusha
ret
bound
data16
out
push
shlb
mov
test
inc
pushw
pop
pop
push
mov
mov
push
cmpsb
jecxz
push
sbb
pop
cmp
jle
inc
xlat
xchg
subb
or
ds
push
pop
ds
pop
punpckhwd
cli
in
xor
xchg
ret
popf
dec
push
dec
mov
addr16
nop
cmp
mov
pop
test
add
daa
insb
push
xchg
mov
idiv
fcomp
hlt
mov
out
inc
iret
pop
mov
adc
xchg
xchg
dec
mov
jmp
jnp
outsb
gs
mov
push
xchg
enter
popa
jmp
shl
add
push
in
sub
insb
ja
jbe
aas
mov
dec
jne
jnp
stc
test
lcall
jnp
les
mov
outsl
loopne
leave
and
pop
add
mov
popf
dec
rcr
int3
cmp
jnp
out
mov
jne
insl
mov
aaa
adc
ja
xchg
lods
out
test
orl
clc
leave
mov
shrl
pop
xchg
movsb
rol
pop
cli
int
aaa
cltd
repnz
or
jp
test
pop
push
fistl
popa
icebp
sbb
mov
xchg
xchg
push
xchg
push
fidivrl
rol
cmp
inc
ficompl
dec
in
cmp
cmc
lods
lock
mov
cli
out
mov
movsl
ficompl
inc
jle
sbbb
jmp
cmp
sub
jne
adc
cli
pop
lahf
test
sub
push
xchg
jbe
jl
int
aas
xor
or
jp
xchg
add
and
push
adc
pop
sub
iret
lret
push
aas
push
mov
orb
and
fnstenv
cmpsl
loope
push
cmp
mov
and
inc
jge
std
mov
push
sub
mov
jnp
cli
in
gs
cli
push
mov
cmp
in
rcr
cltd
push
adc
mov
ljmp
in
and
js
fidivs
outsl
mov
and
out
mov
mov
push
push
jg
lock
push
test
xor
sub
sbb
inc
out
dec
and
push
movsb
sti
push
fbld
sub
out
int3
ficompl
cmpsb
shlb
clc
mov
cmc
lret
sbb
cmp
push
mov
cmp
jmp
lods
sbb
add
xchg
icebp
subw
dec
out
out
xchg
arpl
insl
dec
hlt
scas
cmpsl
inc
rorb
mov
repz
pop
lahf
xchg
aas
lret
fadds
imul
out
mov
sti
push
xchg
insl
fnstenv
push
cltd
nop
push
cld
lds
movsb
dec
dec
scas
mov
jg
stos
sti
lock
pop
mov
into
insl
or
or
xor
xor
pop
push
mov
xchg
ffree
add
out
sbb
fwait
and
das
jnp
jg
adc
push
sbb
mov
jne
inc
imul
cli
leave
ja
sub
fildl
mov
je
rorb
or
std
xchg
mov
push
mov
sub
es
test
cmp
repz
js
jg
daa
sti
lret
pop
imul
sbb
inc
inc
loopne
push
fimull
std
test
adc
xchg
cmc
in
or
jno
insb
xor
push
psrld
jnp
movsl
cmp
fidivrl
ljmp
popa
fldt
jmp
jle
fabs
bound
or
int
div
lret
jne
or
ja
push
iret
jge
pop
shr
in
into
ror
jmp
repnz
lea
jle
outsl
add
and
jg
lret
ja
inc
mov
addr16
repz
shlb
bound
in
lcall
sti
mov
imul
lds
stc
rcl
popf
outsl
in
mov
loop
stc
pop
gs
testl
cmp
icebp
movhlps
fmul
ja
jnp
adc
fstp
push
add
gs
xchg
mov
jb
jnp
decl
cmp
jnp
adc
fcmovb
fwait
into
mov
pop
mov
ljmp
jb
jp
int
lret
movsb
and
push
xor
mov
pop
ja
sarb
mov
xor
and
inc
jne
push
fucomi
mov
scas
fnstcw
cmp
xlat
mov
mov
jnp
repnz
shll
cwtl
outsb
cmp
rcl
xchg
jecxz
addr16
mov
or
ja
inc
arpl
fchs
iret
outsl
cltd
xor
ret
lahf
jmp
sti
into
mov
push
out
hlt
lahf
int
fwait
xchg
loopne
sahf
mov
jae
bnd
pop
jnp
repnz
jnp
repnz
int3
fldt
repnz
mov
xchg
outsl
cmp
enter
popa
int
inc
pop
ja
inc
repz
loopne
inc
inc
fyl2xp1
add
pop
fmuls
test
stos
push
lret
jge
fimuls
and
cmp
lods
std
cmp
pushf
mov
xchg
test
mov
test
push
addl
jle
xchg
sti
clc
and
inc
sbb
pop
push
jmp
adc
xchg
loopne
pop
jmp
pop
xchg
xor
jg
add
jnp
xchg
hlt
jns
fwait
mov
pusha
repz
and
outsl
lahf
jne
jb
repz
jne
repnz
repz
mov
sti
jae
pop
or
into
push
and
je
setp
cmpsl
pop
add
leave
in
daa
pop
sub
test
mov
jae
stos
sub
mov
mov
ds
sbb
ficompl
and
and
pop
loopne
fisttpll
lcall
loop
repz
daa
pop
xlat
mov
push
mov
loop
or
push
shlb
cmp
sti
pop
shl
jne
test
push
test
sbb
pop
andb
add
aaa
mov
gs
adc
pop
mov
vmptrld
ds
popa
ja
in
repz
in
fisttps
stos
pop
mov
cmp
loop
mov
bswap
mov
inc
inc
pusha
leave
insb
in
rcl
call
xchg
punpcklwd
fidivl
add
iret
pcmpeqw
in
daa
rep
out
and
jns
fidivrl
jno
push
mov
or
rclb
xchg
jbe
mov
fcmovu
mov
nop
add
mov
imul
sti
push
mov
repnz
mov
jb
mov
stc
lret
por
les
jg
adc
mov
scas
mov
jae
sub
stos
cmp
test
lock
pop
add
aaa
cmp
adc
adcl
inc
inc
leave
ja
in
testl
xlat
pop
int
mov
sbb
cmp
aas
icebp
loopne
outsb
push
insb
in
loopne
repz
popa
ja
pop
xor
clc
in
loopne
imul
push
bswap
mov
xor
jle
leave
jp
in
loope
dec
adc
xchg
outsl
and
ret
jo
popa
clflush
rcrb
mov
xor
test
pop
jnp
jl
sub
xchg
loope
mov
clc
je
add
enter
dec
cld
pop
call
mov
add
pop
mov
pusha
leave
push
popf
subb
mov
fsubs
repz
cmp
jmp
cwtl
pop
test
inc
mov
jmp
inc
seta
insb
popa
ja
mov
loope
sub
jno
push
lcall
loopne
out
cmp
popa
xorb
loopne
repnz
into
bound
test
repz
rcl
arpl
movsl
movl
shll
out
lret
pop
mov
int3
clc
cmp
and
add
jp
outsb
lret
cld
rcll
aaa
popf
jo
icebp
cmp
out
jmp
fisubl
pusha
cmp
insb
mov
cmp
mov
ficomps
ja
inc
cmp
xchg
push
leave
jnp
stos
gs
sti
mov
insl
adc
pop
mov
repnz
jb
mov
mov
mov
jg
jmp
fcmovnu
push
lods
loopnew
repz
rcrl
clc
shll
cmp
test
pop
in
jne
repnz
rcll
xor
xor
loopne
out
and
movq
mov
mov
xchg
xchg
pop
shrl
aaa
jmp
adc
cmpl
pushf
fcmovnu
out
push
out
jb
lods
xchg
sbb
cmp
clc
or
loopne
jnp
sbb
cmp
mov
jae
push
jns
cmp
inc
push
fnsave
js
repz
testl
jnp
jae
repz
jnp
lahf
pop
fwait
jge
out
shl
pop
popa
add
pop
jg
ja
inc
fisttps
add
fdivs
call
mov
pusha
dec
xchg
loopne
jnp
jns
rep
testb
gs
out
mov
lea
mov
sbb
in
push
mov
xor
mov
inc
mov
sahf
lods
xchg
and
leave
aad
xlat
push
daa
inc
inc
notb
cltd
inc
mov
mov
hlt
mov
xlat
leave
mov
inc
pop
cs
xor
cmpb
jnp
xchg
dec
rcr
and
aad
iret
adc
scas
pop
xchg
bound
sbb
divb
mov
fbld
movsl
and
popa
pop
decl
sub
cltd
popa
adc
adc
cmp
jae,pt
out
repnz
xlat
pop
jns
in
out
orb
jl
and
fcmovne
jle
mov
pop
in
inc
into
outsl
add
inc
outsl
movsl
cmp
inc
fisttpl
je
shrl
fisubl
orb
movsb
stc
xchg
ds
popa
jb
pushf
pop
orl
jb
mov
mov
aam
or
add
sahf
iret
scas
mov
fisttpl
shl
lahf
pop
stos
push
into
lret
dec
jns
js
addb
add
fists
push
cmp
mov
sub
xchg
sbb
and
lods
in
mov
imul
repnz
cmpsl
sti
mov
sub
iret
insl
mov
je
repnz
push
mov
pushl
cltd
pop
push
popa
insb
dec
xlat
je
jae
fdiv
xchg
sti
lahf
sub
jae
lahf
xchg
mov
movsb
mov
sarl
add
popl
addl
cmpsb
pop
adcb
in
bound
ret
push
nop
out
add
cmp
add
movsb
pushf
subl
daa
inc
mov
popf
sbb
arpl
or
jns
xor
sub
pop
sti
paddw
jns
fistpl
pop
xchg
fwait
psubusb
inc
push
sbb
push
cmp
test
loop
or
lahf
mov
dec
leave
mov
lcall
outsb
xor
sar
outsb
icebp
push
aas
mov
dec
mov
pop
cmp
push
adc
jnp
add
mov
inc
add
jo
ret
jo
iret
xchg
jle
mov
shll
pop
jecxz
add
fisttpl
outsb
xor
into
inc
lahf
fistpll
push
lahf
add
lds
aas
mov
sbb
mull
pop
and
rorb
sbb
pushl
push
cmp
cmp
ret
cmpsb
jecxz
cli
lock
fcomip
dec
loop
mov
sarl
pop
scas
jbe
rcrb
and
gs
xchg
dec
addl
jp
add
movsl
jns
push
dec
popf
dec
xor
fistps
dec
dec
lret
jg
add
xchg
jo
jmp
jns
jnp
mov
lods
sbb
dec
mov
push
jnp
add
fisubrl
jbe
mov
mov
adc
pop
or
in
inc
aas
jmp
bound
xor
mov
xor
loopne
sbb
cmc
clc
cmc
andl
faddl
sbb
pop
cmp
cmp
lds
push
std
jl
xor
jae
dec
jno
sbb
ljmp
sub
daa
mov
adc
mov
push
fwait
and
cmpsl
insl
jo
add
repnz
loop
arpl
cmp
sub
sbb
fcmovnb
and
in
out
js
imull
fidivrs
ret
add
stos
xchg
ljmp
xchg
shr
and
fildl
xor
jae
aad
ror
addr16
pop
mov
into
inc
ljmp
jmp
fwait
adc
adc
pop
jp
ljmp
sahf
or
sbb
aam
repz
dec
fcomi
aad
fcomi
iret
dec
push
or
stos
shll
xchg
cmp
jae
in
ljmp
rolb
lock
sti
push
sahf
cmc
cli
into
jmp
vcvttpd2dqx
adc
stos
adc
popa
repnz
daa
dec
push
mov
pop
fmulp
sub
cmp
xlat
cmp
sub
push
sahf
loopne
fdiv
fidivs
xor
gs
jns
les
mov
mov
ror
test
xor
xlat
mov
cmp
iret
call
ror
push
in
fldl
lahf
push
aad
dec
mov
out
push
fistpl
jno
xchg
testb
and
js
cmp
cmpsl
sbb
rcr
xlat
push
ja
movsb
shll
lret
cltd
shll
loop
testl
push
idiv
jle
out
cwtl
popa
push
popf
cmp
pop
insl
fstps
add
dec
xor
adc
cmp
repnz
jnp
stc
xchg
jo
rorl
jmp
xlat
into
add
push
popa
xchg
insl
inc
fdivrl
sbb
popf
hlt
andb
fwait
adc
loop
out
sbb
fistps
jle
call
ds
loop
loope
icebp
fneni(8087
inc
in
jnp
mov
leave
mov
jno
mov
inc
lea
add
adc
mov
mov
popa
or
xchg
push
int
sbb
mov
cmp
clc
pop
insb
jae
test
xlat
sbb
test
mov
cltd
jns
shl
sbb
int
outsl
leave
testb
jg
sti
jno
pop
push
fcoms
jg
cmp
pop
mov
pop
leave
dec
cmp
int
rcrl
jnp
xor
lahf
aad
cwtl
mov
xadd
aad
pop
outsl
lods
sti
rorb
xlat
push
iret
cmp
clc
pop
jge
cmp
push
jl
pop
out
adc
clc
sbb
lcall
int
sbb
sbb
cwtl
lods
incl
sti
mov
lock
sub
sbb
shlb
xsha1
cmpsb
lret
daa
outsl
jge
jns
call
jg
push
pop
orl
popf
in
add
cmpsl
ret
xchg
dec
add
scas
dec
js
mov
and
fidivl
je
repz
into
jb
fcmovne
fmull
in
cmpsl
orl
adc
mov
sub
dec
jo
rorl
shrl
lds
stos
xor
sar
addr16
bound
leave
inc
outsl
out
enter
mov
inc
jnp
sbb
leave
test
cmp
outsl
cltd
imul
rcr
in
mov
cli
dec
fnstsw
mov
out
loopne
cld
xor
mov
mov
scas
xchg
fistps
pop
into
sbb
xchg
popa
jl
add
cwtl
adc
xchg
shr
add
mov
sub
aad
sub
push
xchg
bound
mov
ljmp
aas
outsb
mov
mov
add
pop
ljmp
sbb
mov
in
push
xchg
aas
mov
int3
imul
xchg
out
jle
incb
jl
dec
jp
test
fcompl
add
xor
lret
sbb
add
xor
pop
test
mov
jno
push
dec
mov
mov
xchg
out
pop
sarb
scas
mov
mov
jp
push
in
mov
xor
fidivrl
lods
repnz
clc
jge
pop
je
ret
jp
add
outsb
xchg
jae
imulb
inc
lea
mov
neg
jl
cmp
xchg
add
adc
sub
lods
lock
sti
shll
aas
and
and
dec
jle
mov
insl
jecxz
mov
mov
test
or
outsb
outsl
fwait
loop
adc
dec
mov
pop
cli
test
jg
sub
shll
push
lods
add
ja
jne
fwait
pop
jne
into
outsl
cmc
sub
dec
sbb
push
icebp
nop
aad
pop
dec
adc
rorb
in
das
hlt
fists
leave
cmp
mov
pop
lahf
scas
push
mov
push
subl
enter
bound
aas
arpl
enter
cmpsl
add
inc
cs
push
iret
sub
xchg
aas
pop
sbb
adc
jmp
jmp
jns
fsubs
je
repnz
leave
fdivl
xor
xchg
hlt
sahf
imul
ja
pop
jae
jg
lret
lahf
sbb
cld
into
adc
pop
test
mov
xor
int3
ds
dec
lahf
xlat
out
loope
dec
xchg
faddl
adc
and
in
fcmovnb
out
leave
fcmovu
scas
imul
mov
aaa
and
mov
jge
fstpl
jno
or
test
dec
mov
push
mov
jb
add
mov
movsl
fs
sub
ret
rolb
arpl
and
push
and
dec
inc
bnd
adc
xchg
jnp
pop
orb
mov
in
shll
aas
add
out
loopne
xor
xlat
jb
lahf
add
insl
loop
sub
lds
jl
icebp
lds
into
js
push
jno
psubb
int
andb
xor
add
mov
jl
cmp
sahf
xchg
les
cltd
aad
aam
enter
xchg
seto
hlt
fisubrl
add
xchg
das
inc
iret
femms
lcall
daa
sbb
sbb
cmp
or
jb
mov
shrl
faddp
mov
int
jmp
icebp
lock
xchg
fcomp
outsb
jmp
test
or
dec
and
neg
bound
dec
jns
test
cmp
into
sti
jb
rolb
das
loop
add
sahf
shrb
in
dec
push
repnz
shlb
cmp
popf
jno
loope
aas
bound
and
cmp
daa
in
cmp
js
jl
adc
gs
cmp
int
add
or
jl
xbegin
leave
cli
ficoms
push
std
loop
sbbl
jae
cli
jb
mov
jecxz
xchg
cli
add
and
stos
out
xor
test
mov
filds
repnz
js
movsb
mov
out
pop
add
jg
inc
pop
push
jns
xchg
inc
popa
dec
mov
add
lahf
pop
mov
cmp
pushf
or
jae
and
ljmp
test
mov
js
loop
jmp
icebp
ds
in
pop
inc
xchg
jmp
std
and
mov
aad
mov
or
rorl
movsb
enter
sbb
ret
cmpl
pop
data16
in
cwtl
add
out
out
cmp
push
loop
adc
sahf
sub
js
outsl
mov
fisubl
int
pop
iret
dec
inc
push
dec
jbe
cli
loope
movsl
dec
cwtl
xchg
scas
movsl
stos
mov
add
outsb
mov
or
pop
pop
push
lahf
and
jo
mov
inc
test
and
push
add
mov
stos
jnp
pop
icebp
mov
sbb
adc
jnp
jle
stos
repnz
pop
popf
mov
mov
enter
pushf
fwait
jnp
cmpsl
js
mov
rorl
xchg
stos
jb
bound
repz
popf
shll
insb
push
mov
xlat
lahf
clc
inc
stc
fwait
jnp
and
fcoml
jno
dec
shlb
js
xor
mov
lods
cwtl
cmp
sub
rorb
jae
lock
add
pop
jecxz
mov
test
out
and
push
jle
les
xchg
sbb
dec
pop
js
or
sub
inc
test
push
cld
pop
leave
cwtl
cs
out
jmp
pop
sbb
ss
loope
or
lahf
jnp
mov
jle
xchg
mull
jnp
pop
xlat
js
popf
outsl
xchg
rclb
test
jnp
lahf
fbld
xor
bound
fcmovu
leave
jmp
jle
aam
insl
repz
push
js
out
aas
shl
jnp
xchg
roll
xchg
rorb
cltd
testl
notl
pop
sbbl
mov
vcomiss
movsl
jge
inc
cli
dec
push
push
ds
clc
mov
sti
jmp
adc
pop
adc
rolb
and
adc
iret
pusha
mov
jae
and
aaa
leave
xchg
out
mov
sbb
ss
testb
xorl
ss
fiadds
pop
fisubrl
fildll
fscale
loopne
repz
stos
mov
adc
mov
js
sub
xchg
lahf
lea
jne
inc
jnp
ja
inc
js
mov
xchg
repz
mov
lods
jnp
mov
ja
xchg
pusha
add
cltd
jne
repnz
not
xchg
call
push
popa
gs
cmc
test
jno
imul
andb
jb
jns
mov
jae
sbb
sbb
mov
xor
movsl
jecxz
out
jl
jnp
sub
or
fisubrl
cli
movsl
fiaddl
pop
out
jp
pop
into
xchg
out
jno
lea
nop
stos
stos
cwtl
jecxz
in
gs
loopne
popa
neg
mov
cmp
popa
test
sbb
push
iret
fsubrp
push
jp
xchg
push
pop
push
out
bound
cld
cmpsl
mov
test
inc
fwait
test
xor
add
clc
pop
out
aad
xchg
mov
sti
mov
test
jb
iret
xchg
test
lea
or
jge
lods
push
mov
loop
lahf
pusha
fwait
jg
xchg
jg
loop
mov
cltd
shl
lahf
popf
popa
repnz
sbb
jge
xchg
cltd
lods
bound
icebp
xor
jae
push
inc
xor
test
jmp
xchg
sbb
push
ds
das
cld
sub
push
inc
repnz
loop
stc
mov
mov
in
fisubrl
add
xchg
daa
incl
aad
andl
inc
jecxz
popa
shl
jmp
test
outsb
pop
test
cmp
mov
rcrb
add
jnp
dec
sub
insl
xchg
or
lods
mov
inc
xchg
jno
in
loop
mov
repz
xchg
xchg
decb
xor
lahf
dec
sub
jg
lret
test
cmp
lret
mov
js
aam
jp
xchg
mov
ret
mov
sub
jo
fcoml
mov
ja
inc
pop
push
in
mov
jg
leave
lahf
jmp
insl
sbb
pop
sub
das
out
test
stos
lret
jno
iret
pop
popa
bnd
push
sbb
addb
leave
push
mov
xchg
lods
addr16
cmp
inc
out
dec
jg
outsl
push
in
int
add
cvtdq2ps
sbb
jnp
add
add
inc
iret
test
cmp
push
lock
inc
mov
popa
pushf
loope
add
fldenv
ret
sub
stos
mov
addr16
push
jp
fs
fucomp
inc
out
adc
cmp
xlat
xor
mov
push
jmp
les
or
je
adc
jne
xchg
ds
xor
mov
ret
inc
leave
jge
xlat
push
mov
fadds
stos
rorl
xor
xchg
dec
jmp
or
roll
sub
les
inc
mov
popf
pop
rcll
pop
and
mov
or
push
jle
movb
mov
pusha
stc
adc
test
lahf
repz
inc
mov
pusha
cs
mov
jl
repnz
enter
repz
sbb
jecxz
cli
mov
xchg
loope
adc
cmp
push
aam
loope
pusha
pop
out
or
jge
adc
mov
aaa
cmpl
outsl
cmovle
clc
inc
push
push
and
jg
fcomps
jns
sti
or
xor
mov
jecxz
push
push
lock
mov
adc
popa
out
push
xchg
mov
fcoms
mov
out
pcmpeqd
clc
jg
xchg
fbld
in
bound
or
jb
popa
mov
lret
jle
jns
ja
jge
das
out
xchg
lahf
jmp
aaa
cli
aas
leave
xor
and
stos
mov
jne
pop
jb
mov
shll
in
loopne
mov
dec
rol
fistpll
fsts
pop
jg
frstor
jnp
jg
jge
push
dec
inc
add
out
adc
mov
lea
stc
in
aad
lahf
stc
mov
mov
insb
push
jb
iret
aad
and
lcall
mov
icebp
addl
push
cmp
jnp
and
push
repnz
test
popf
out
lcall
adc
hlt
imul
jns
xchg
jno
jne
xchg
orl
mov
pop
jno
jno
shrb
inc
cmc
xchg
pop
lahf
sub
mov
bound
loopne
jl
and
pop
adc
dec
inc
daa
mov
in
pop
push
rcrl
xlat
mov
mov
lods
pop
cmpsb
int
insb
insl
jp
adc
fwait
je
xor
popf
xchg
bound
test
sti
sub
outsl
dec
jne
push
jnp
add
cld
icebp
xchg
xchg
loopne
jnp
rclb
and
mov
into
test
notl
or
sarb
fmul
jno
sub
das
in
fstpl
jne
mov
mov
outsb
mov
mov
test
loope
fucomip
fldenv
loope
ja
inc
jp
scas
in
cmpsb
jp
outsb
jns
test
outsl
xchg
shlb
xchg
lahf
xchg
int3
fwait
stos
adc
loop
repz
shll
leave
out
xchg
cmp
push
lahf
mov
cltd
jg
pushf
in
mov
lea
xchg
sbb
test
jnp
daa
or
je
pop
mov
movsb
lret
adc
shll
or
add
push
mov
js
sbb
xchg
lahf
sub
mov
mov
lea
add
inc
xor
mov
sbb
sbb
lock
jbe
mov
mov
std
jge
cmp
repz
mov
cmp
push
dec
dec
repz
leave
sub
mov
repz
mov
loopne
repz
popa
xchg
rclb
push
nop
jae
push
aam
pop
cltd
in
cli
and
dec
enter
bound
mov
insb
sub
xchg
popa
sti
insl
jns
xchg
jno
icebp
jns
dec
enter
sub
xor
jns
inc
cli
dec
repnz
data16
or
pop
push
pop
es
jge
out
pop
fdiv
lcall
dec
and
adc
fcmovu
push
jnp
pop
imul
das
aaa
ret
sbb
mov
ja
mov
push
fmuls
sahf
mov
lcall
xchg
mov
or
add
ror
fcoms
insl
js
mov
sbb
sahf
sub
repnz
stc
xchg
ja
hlt
inc
repnz
stc
cmc
insb
mov
jns
jne
sarl
mov
pusha
add
in
xchg
mov
cmp
iret
fsubr
push
rolb
out
inc
jp
leave
loopne
inc
out
xor
fsub
pop
out
repz
leave
outsb
jge
les
loope
adc
leave
stc
pop
jbe
jl
mov
insb
str
jae
cmp
out
out
leave
movsb
insb
stos
sahf
jecxz
xor
jnp
aad
jnp
mov
or
push
mov
decl
jmp
ljmp
xchg
push
and
bound
pop
jge
adcl
out
inc
add
pusha
inc
pop
test
xlat
out
push
loope
dec
mov
inc
jg
dec
je
or
jecxz
test
out
fistpll
and
push
and
lahf
in
cmp
xchg
fbstp
add
jecxz
cld
call
lods
mov
rol
loop
mov
lock
jns
mov
das
mov
cmp
xlat
out
cmpl
lcall
movq
cmpsb
and
mov
xorps
adc
jecxz
les
bnd
pop
jmp
shr
push
mov
mov
lea
pop
mov
aam
lods
jb
sub
aas
pop
fistpl
and
mov
mov
fldcw
mov
mov
dec
and
lds
lock
icebp
or
jns
jno
xor
les
xchg
and
jns
hlt
lahf
mov
pop
int
cltd
inc
jnp
hlt
shll
xchg
lret
fidivs
nop
test
mov
mov
pop
lea
cmp
sti
xor
sbb
iret
pop
mov
pop
loop
mov
cmpsl
inc
jns
insb
mov
sti
cmp
fbld
por
cmpsl
jmp
fidivrs
xorl
push
sti
mov
lcall
popa
add
arpl
mov
mov
into
jb
mov
enter
pop
cmp
out
popf
addl
jecxz
out
sbb
or
test
repnz
and
jns
rorb
sub
xor
bound
imul
xor
test
mov
insb
test
incl
incl
or
and
sub
sub
jbe
xor
dec
or
xchg
movsb
mov
popa
cld
fwait
out
jge
ljmp
and
stos
fnstsw
xor
fisttpl
std
pusha
fisubrl
pop
cwtl
pop
push
sub
xchg
mov
sbb
repnz
jb
nop
ret
jne
dec
outsb
js
stos
sub
movsl
mov
sub
test
dec
jmp
out
aad
test
mov
jg
add
in
jl
lahf
pop
jnp
lods
addr16
push
fbstp
jo
bound
dec
mov
sub
add
aas
add
repnz
sbb
leave
and
fldlg2
push
aas
add
ss
sti
js
sti
push
mov
aam
stos
les
insb
test
add
jns
mov
fisubs
pop
js
and
jns
jb
test
inc
mov
jge
movb
mov
xlat
aam
pop
push
and
mov
sub
fucomi
stos
idivb
shll
in
loopne
popa
arpl
in
mov
sarb
fistpll
pop
dec
pop
xor
in
fwait
cmpsl
xchg
sbb
out
mov
cmp
cmp
push
jns
sub
stos
pop
shll
mull
stc
jge
loop
in
dec
cltd
clc
pop
clc
daa
jne
mov
add
jle
pop
pushl
and
fwait
popf
lods
sbb
insl
scas
cmp
out
mov
jmp
jmp
inc
dec
mov
pop
popl
sbb
les
faddl
jne
lods
int
les
lcall
shlb
fisubrl
rcrl
iret
sbb
popl
xchg
out
adc
int3
in
mov
hlt
scas
cld
and
jl
and
sbb
mov
lcall
popa
mov
mov
jb
cmc
das
sahf
pop
pop
enter
movsb
mov
repnz
stc
sti
ss
fwait
dec
sub
pop
orb
xchg
out
popa
xchg
repnz
mov
and
insl
xchg
stos
enter
std
clts
testb
jo
into
test
lock
push
mov
ret
paddw
dec
in
add
xchg
test
pop
leave
pop
popa
mov
jg
xchg
fsubl
lock
push
and
psubq
test
data16
xor
and
inc
fs
lea
push
mov
xchg
sbb
add
push
les
xchg
push
jb
jnp
imul
cmpsb
cwtl
mov
push
mov
pop
push
or
repz
stos
addb
cmp
xor
cltd
add
or
xchg
andb
pop
loopne
mov
out
sbb
jae
push
inc
jecxz
sbb
loop
push
xchg
jns
das
add
lea
cmp
inc
fnstsw
test
fdivp
xchg
mov
sub
lahf
fcmovnbe
jmp
ds
test
push
sbb
repz
iret
cltd
inc
in
sub
int3
sahf
push
sbb
loop
xor
sub
std
xchg
xchg
dec
iret
setb
xor
inc
in
and
test
imul
push
out
xchg
mov
add
cwtl
je
xchg
xchg
shrb
lds
aad
mov
xchg
jae
xor
leave
clc
arpl
inc
frstor
cmp
cld
rcr
and
push
xchg
sarl
call
jns
jns
nop
sbb
idivl
dec
mov
popa
fldt
bound
lahf
fistl
test
mov
fcomps
iret
or
cmp
xchg
and
jmp
cmp
cmp
xchg
repnz
sbb
xchg
jns
fwait
add
add
and
jbe
add
xchg
jmp
add
add
and
jl
gs
mov
fdivrl
xchg
dec
mov
test
push
fdivs
and
pop
iret
push
push
mov
fstpt
fcmove
das
jb
scas
leave
xlat
stc
jb
cld
mov
mov
sbb
pop
std
cmpsb
in
cmovle
decl
movsl
mov
pop
rcrb
mov
fsubrs
sbb
add
jbe
jg
push
fwait
push
inc
daa
sbb
mov
cwtl
hlt
inc
rclb
pop
jns
pop
loop
test
push
mov
dec
inc
xor
and
adcb
or
jecxz
mov
push
sub
clc
popl
arpl
loope
movb
mov
loope
aas
outsl
mov
mov
lahf
pop
movsl
daa
xchg
popa
and
jle
out
or
movsl
repz
cwtl
icebp
jp
popa
fs
jge
into
mov
enter
inc
push
cmc
xor
fst
fisubs
push
jne
cwtl
inc
mov
pop
mov
loope
jae
inc
and
fldt
pop
jmp
jbe
jg
mov
inc
cmp
and
jb
lods
add
pop
cmp
jp
jno
inc
into
mov
loope
dec
roll
aam
mov
jle
jbe
dec
jb
into
subb
sbb
mov
or
mov
repz
cwtl
push
insb
cs
push
mov
pop
xchg
push
jno
xor
xchg
arpl
xchg
in
lahf
lods
popl
pop
and
xchg
jnp
movsb
ss
mov
mov
pop
push
das
sub
fldenv
push
scas
xor
adc
mov
push
xchg
jns
divl
mov
int3
cwtl
and
xchg
outsl
icebp
sbb
psraw
or
aaa
cmc
push
ja
ficomps
pop
mov
repnz
ds
push
das
cmp
mov
scas
cli
cmp
stc
jne
or
dec
xchg
sub
insl
mov
outsl
sarl
sbb
add
adc
sti
cltd
or
loopne
sbb
mov
fcomps
or
idiv
jmp
leave
push
in
jg
mov
outsl
dec
jl
aad
test
icebp
test
pop
in
bound
mov
mov
mov
out
and
iret
loopne
mov
and
iret
popa
mov
xor
test
mov
stos
pop
push
lea
adc
sarl
sbb
scas
pop
jns
jb
cmp
leave
ds
mov
loopne
jnp
add
sbb
js
les
insl
lahf
jne
test
imul
inc
les
pusha
xchg
jp
testl
cld
mov
mov
jle
ja
mov
mov
jo
push
cmp
fcom
jge
or
inc
pop
adc
push
xchg
fistpll
mov
jp
mov
cmpb
dec
jmp
loope
clc
xchg
mov
sbb
into
shll
push
data16
pop
pop
jns
scas
jp
push
stos
les
icebp
fadds
insb
aaa
xor
data16
and
push
add
xchg
leave
fstp
jnp
cmpsl
dec
cmp
jo
sub
inc
xchg
dec
jmp
das
pop
neg
sbb
std
testl
xor
repnz
js
cvtdq2ps
scas
fistl
fidivs
in
lock
repnz
jns
fwait
sti
lahf
cltd
lret
sti
add
test
popf
icebp
jnp
out
jp
clc
jns
mov
fisubrs
cmpl
pop
jbe
out
ds
js
ds
cli
test
push
stos
mov
push
push
add
mov
mov
push
xchg
leave
jp
scas
dec
jp
inc
icebp
push
loop
add
mov
jne
lock
movsl
mov
jb
cli
cltd
aam
sti
icebp
cmp
sbb
xchg
aad
cmp
inc
orb
loopne
not
jns
mov
pop
pop
cmpsl
outsb
pop
jl
js
jns
cltd
repnz
hlt
mov
mull
incl
popf
test
and
js
fcomp
fwait
pop
xlat
mov
bound
shlb
pop
test
fidivl
repz
repz
imul
lret
jg
mov
xchg
add
ljmp
bound
fwait
push
cmp
jnp
lahf
mov
loop
out
xchg
cmp
xchg
xchg
lods
neg
mov
outsl
mov
ret
bndldx
out
pop
or
sbb
fdivrs
rcrl
dec
adc
pop
mov
lea
out
sahf
mov
dec
mov
push
mov
sahf
xchg
add
mov
xor
out
sarb
jne
pusha
pop
jb
out
mulps
shrl
std
sti
gs
mov
ja
sbb
add
jmp
stc
jb
xchg
orb
jne
xchg
dec
jno
js
ficoml
out
pop
jp
lahf
roll
push
mov
stc
mov
pop
mov
ja
cmp
mov
cltd
addr16
or
outsb
pushf
test
fldcw
ret
lret
cmpsl
repnz
stos
data16
lcall
jnp
pop
lods
mov
lods
ret
mov
in
bound
pusha
xchg
jecxz
insl
jecxz
push
add
mov
sahf
mov
mov
lahf
rcrb
pop
aas
das
into
mov
mov
inc
aas
cmp
aad
dec
mov
call
test
imul
in
test
lret
jns
into
jl
fstps
push
popa
sbb
cwtl
mov
fs
xchg
clc
jnp
ljmp
adcb
mov
in
cmp
sti
mov
pushf
mov
mov
mov
mov
out
jmp
cmp
mov
stos
movsl
jmp
insb
mov
jb
cmp
or
fistpl
or
in
cltd
rcr
repnz
ror
inc
jnp
sar
dec
sbb
push
cmp
shll
jp
pop
xchg
out
cmpb
movb
cld
hlt
stos
add
clc
xchg
movsl
adc
xchg
mov
cmpsl
icebp
sub
dec
xor
out
negl
mov
lea
and
pop
iret
std
rorb
lods
iret
fdivrl
imull
xchg
pop
out
fldl
int
adc
or
rol
inc
push
mov
ja
js
icebp
stos
xor
rcr
sub
mov
inc
fs
jns
xor
mov
add
sub
lret
data16
or
shrb
pop
xchg
sub
inc
hlt
lea
cld
inc
les
leave
mov
pop
cwtl
lea
and
push
stos
sbb
ja
popa
jge
les
aaa
cmp
jno
outsl
mov
out
mov
mov
dec
add
psllw
fistps
in
popf
ja
jl
mov
cmp
xchg
add
xchg
ficomps
das
xor
mov
inc
inc
jmp
add
and
ret
jp
jecxz
or
mov
push
lahf
xlat
xchg
mov
push
mov
mov
test
enter
test
or
cld
push
ds
loopne
mov
gs
decb
fidivs
adcl
push
mov
pop
pop
pop
adc
lock
adc
lds
mov
and
inc
dec
leave
mov
outsl
xor
sub
push
pop
xor
sub
xchg
xchg
push
aam
fs
fstl
imul
adc
movsb
test
mov
lret
ds
leave
jge
rcr
jae
mov
pop
test
pop
stos
lahf
xorb
test
mov
sbb
and
sub
jge
add
mov
xchg
int
jp
inc
in
js
mov
xor
adc
push
pop
dec
pop
or
and
sub
jmp
aad
pop
cmp
repnz
cmp
stos
in
sti
into
hlt
repnz
cmp
pushf
rcr
pop
mov
imul
pop
xor
xchg
xor
ficomps
jg
mov
dec
mov
cltd
cmp
add
cltd
fs
sub
xor
jge
jb
out
xadd
bound
ret
add
sarl
push
sahf
fildl
lcall
jno
jns
rcrb
cmc
inc
fisttpll
mov
jnp
pop
mov
sub
imul
mov
loop
xor
jge
mov
fistpl
cmp
stc
push
add
decl
mov
sbb
lods
dec
stc
push
lods
sti
lods
popf
icebp
mov
mov
sti
cmp
mov
jns
lahf
es
data16
cs
sub
stc
cmpsb
ret
fmull
nop
lret
jne
movsb
and
add
push
or
xor
andb
loope
lret
arpl
in
aas
lock
out
push
sub
imul
loopne
icebp
dec
inc
subb
push
pop
repnz
out
mov
idiv
mov
lret
and
jbe
xor
subl
loope
fnclex
jae
mov
loop
pop
add
cmp
lcall
les
cmp
push
cmp
out
mov
cmp
pop
mov
insl
iret
out
outsl
add
jb
js
loop
inc
inc
jg
jns
repnz
fildll
andb
push
and
push
jnp
pop
push
push
dec
ds
aad
and
inc
sti
add
rcpps
cmpsl
lock
out
fadds
fildll
repz
dec
cmp
out
repz
pop
xchg
fmulp
das
xor
xor
addr16
cltd
aam
xchg
arpl
pop
mov
arpl
inc
pop
jnp
mov
push
xchg
push
sarl
jmp
and
jp
in
inc
repnz
cmp
shll
xorb
push
push
stos
iret
aas
dec
xor
addl
inc
add
pop
jbe
pop
sti
dec
lea
repz
pop
adc
add
push
mov
jb
sti
cli
mov
popa
cmp
clc
rorl
mov
psrlw
cmc
in
arpl
inc
stc
xchg
cmp
fdiv
mov
arpl
std
add
add
jne
mov
jnp
rorl
fistpll
mov
sub
dec
stc
popa
push
adc
shrl
fldcw
xchg
insb
das
repz
sub
icebp
adc
lcall
or
iret
jp
jecxz
fldenv
fists
jns
pop
lret
or
fld
out
inc
out
push
fstp
or
fistps
sub
arpl
cli
cmp
mov
js
adc
mov
mov
inc
pop
dec
dec
xchg
mov
sti
fstpl
adc
dec
fistps
call
mov
xchg
jle
lds
es
fcomip
sub
sti
ja
bound
ds
sbb
push
shrb
sub
mov
xchg
cmp
adc
scas
jo
inc
dec
scas
popa
cmp
xchg
add
sti
push
jb
shll
xchg
or
jne
pop
andb
pop
out
xor
aam
jecxz
orb
or
fwait
popa
cli
outsb
sbb
mov
pop
daa
sti
movsb
xchg
arpl
cmp
les
fimull
cmp
ret
mov
shll
dec
sahf
cmp
sti
orb
sbb
shl
cmc
in
xchg
cmc
cmp
rorb
mov
pop
movsb
stc
xchg
fildll
push
push
aas
subb
inc
xchg
pusha
aas
bswap
xchg
push
mov
xchg
cli
xsaves
fiaddl
aas
push
enter
mov
cmc
insb
sbb
dec
jl
xchg
dec
movb
push
scas
addr16
out
cmp
mov
fmull
pop
rorl
adcl
pop
pop
jp
push
xchg
adc
xchg
add
xchg
sti
lods
cmpb
sub
inc
dec
pop
mov
ret
push
adcb
xchg
mov
aaa
sub
push
clc
add
lahf
xchg
mov
cmc
cmc
sbb
pop
adc
mov
xor
cs
aad
rcrl
cmp
and
out
push
and
mov
in
mov
adc
dec
adc
jnp
mov
xor
push
out
clc
setnp
cmp
cmpsl
or
mov
jne
xor
xchg
movsl
mov
pop
lds
mulb
repnz
and
in
mov
sarl
movsb
ror
lret
jns
pop
and
jne
or
cmpsl
ja
mov
scas
jle
sbb
adc
popa
push
cmp
and
addr16
dec
mov
lret
inc
inc
xchg
nopl
push
test
out
loop
and
pop
mov
cmp
mov
mov
mov
lods
dec
mov
fistps
cmpsl
lret
test
movsl
shrl
lret
cmp
mov
cmp
push
jno
test
test
popf
lods
cltd
inc
jg
add
pop
imul
in
fiaddl
dec
stc
dec
in
pop
decb
lret
xchg
loopne
sbb
sbb
jno
mov
mov
pop
sti
mov
sbb
mov
or
mov
cmp
aaa
mov
dec
ficoms
in
mov
xlat
add
lcall
int
inc
sti
test
imul
fwait
pop
mov
int
jb
das
push
das
sarb
das
mov
testb
sbb
mov
fadds
dec
add
repz
xchg
sti
aam
lock
push
cmp
push
sub
fcoms
aad
adc
push
mov
dec
divl
rcll
push
jno
sbb
cmpsb
jp
insb
pop
into
test
aad
movups
pop
addr16
mov
popa
fcoms
add
xchg
das
xchg
mov
movsl
sbb
pop
xchg
ss
cmp
push
leave
mov
sbb
fnstenv
sub
adc
scas
add
xor
and
ss
faddl
daa
xchg
pop
sahf
out
fstps
mov
decl
enter
addr16
in
mov
xchg
add
fidivrl
jle
inc
sbb
pop
sub
neg
xor
inc
imul
push
mov
imul
out
cmp
mov
clc
loop
arpl
mov
mov
ljmp
xchg
jns
pop
mov
push
sbb
mov
pop
add
jno
cmpb
add
push
adc
cli
dec
or
inc
inc
lock
adcb
jbe
push
cmpb
hlt
lock
lahf
push
push
push
mov
movsb
pop
daa
out
add
aas
pop
out
xorb
jmp
mov
jg
int
pop
mov
add
sub
popa
into
pop
inc
sub
movsl
and
pop
inc
mov
lock
lock
repz
mov
bound
imul
mov
arpl
test
lcall
xchg
jno
push
xor
add
je
pop
mov
mov
jg
out
js
sub
xor
sti
mov
fdivrp
push
scas
js
mov
mov
jns
pop
fistpll
mov
aad
jne
inc
sub
jne
adc
jns
pop
push
cwtl
xor
jp
subb
pushf
out
cmp
pop
xor
add
in
xchg
int
icebp
jnp
aad
rcrl
dec
imul
leave
jbe
mov
cltd
ss
jne
pop
add
pusha
addl
inc
adc
cmp
ja
out
aam
out
push
inc
adc
cmp
xor
ja
dec
jns
pop
in
sbb
push
dec
mov
rorb
ds
imul
xor
sub
cmpsl
fsubs
ds
adc
and
inc
stos
and
roll
sti
and
sbbb
loope
or
ljmp
loopne
sbbb
das
xchg
rol
ret
adc
adc
mov
mov
dec
adc
out
mov
pop
sbb
pop
mov
cltd
stos
mov
out
in
pop
add
rcr
leave
jb
je
lcall
movsl
lock
mov
pop
jne
push
repz
jecxz
leave
push
ja
mov
repnz
push
push
cmp
mov
cmp
mov
cmp
cmp
dec
outsb
dec
jb
inc
pop
repz
popf
mov
cmc
lock
xchg
addb
dec
cwtl
jnp
lcall
cmp
mov
out
pop
mov
dec
fistpll
mov
lahf
sbb
jge
arpl
lcall
jnp
jb
loope
lcall
or
mov
sti
lea
cmp
sbb
shr
int
inc
cmp
aam
jmp
dec
ret
xchg
jnp
test
out
ret
repz
sub
dec
cltd
jle
mov
out
iret
insl
mov
pop
jno
mov
sub
cmp
cltd
mov
fwait
jno
push
push
in
gs
xchg
pushf
adc
shl
lods
and
pushf
pop
out
sbb
jle
in
sbb
jge
gs
out
in
jge
mov
insb
mov
imul
movsb
and
mov
stc
xor
xor
fimull
cmp
push
add
shlb
popa
leave
lock
shr
add
insl
xlat
in
mov
xor
lret
push
inc
sub
cmp
push
orl
out
fistpll
push
sti
and
and
andb
and
pop
adcb
ja
ret
add
mov
sbb
mov
lea
mov
pop
sbb
xlat
mov
jne
flds
out
jb
fbstp
cmp
mov
push
shrb
in
mov
das
loope
cmp
pop
mov
cmpsl
mov
xchg
insl
out
jnp
xchg
mov
gs
addr16
aam
in
stos
out
mov
push
rorb
xchg
imul
out
and
or
and
mov
insb
mov
out
sbb
sbb
sbb
jb
xor
lcall
mov
add
lahf
cmp
mov
or
test
lock
xor
mov
fmuls
test
xchg
cvtdq2ps
pop
pop
inc
or
pop
dec
pop
fistpl
sub
ds
jne
iret
icebp
iret
out
pop
mov
in
fdivr
mov
fsub
pop
aas
fcmovbe
sub
mov
je
jmp
lock
rep
xchg
out
gs
inc
mov
bound
sbb
cmovle
out
sahf
lods
sbb
js
icebp
unpcklps
sub
sti
addb
add
adc
adc
mov
sub
aad
xchg
push
jbe
into
dec
sbb
xchg
pop
jge
scas
out
mov
les
jle
leave
loopne
add
cmp
cmp
icebp
negl
mov
das
add
jg
or
cmp
arpl
xchg
cmp
inc
cmp
cmp
jge
or
xchg
mov
push
popa
pop
mov
fisubrs
adc
lods
and
ds
pushf
xchg
inc
and
in
jecxz
xchg
out
jl
pop
sub
inc
push
in
mov
dec
sar
mov
push
inc
push
mov
sub
jnp
push
ds
data16
and
jb
leave
out
aam
push
addr16
enter
hlt
mov
imul
aaa
movsb
jae
lock
and
cltd
jg
push
pop
mov
or
mov
ds
adc
or
pop
pushf
or
pop
push
sub
loopne
jno
rolb
xlat
pop
fstpt
jne
mov
mov
push
cmpsb
jbe
sub
aas
ljmp
icebp
cs
mov
leave
data16
pop
incl
pop
stos
push
outsb
inc
outsb
pop
fmuls
cwtl
aad
icebp
push
movsb
data16
call
outsb
and
mov
sar
push
sarl
repnz
pop
push
inc
shr
popf
mov
jg
movsl
jne
jae
sha1msg1
pop
dec
push
cmp
in
fucomip
call
sbb
mov
out
je
cld
leave
clc
xchg
incl
mov
scas
mov
cld
xor
sbbb
mov
pop
adcb
add
add
ss
push
pop
lods
jg
cwtl
mov
mov
sti
mov
call
push
ret
cmp
jb
jno
sete
mov
js
ljmp
gs
inc
pop
add
xor
push
pop
xor
in
pop
loop
mov
mov
jg
add
test
and
xor
mov
daa
imul
shll
xchg
xchg
ds
pop
fistps
adc
mov
xor
lahf
dec
or
jge
jno
mov
mov
bound
xor
xchg
pushf
cmp
mov
sbb
xchg
cmp
jle
loopne
mull
popa
femms
andb
mov
test
fldt
lea
ja
mov
fdivrl
lods
imul
xor
mov
cmpl
out
fistpl
pop
lea
mov
xlat
outsl
jg
mov
lcall
in
mov
ja
ds
shlb
stos
mov
xor
das
sahf
cmpsb
xor
pop
or
icebp
hlt
jo
push
movsl
adc
repz
push
cmpsl
sub
jg
aaa
mov
mov
pop
adc
add
add
ds
lea
lcall
pop
popl
inc
push
daa
sarl
hlt
pop
pop
mov
jns
sbb
addps
sub
rcll
orb
dec
jae
mov
cmpsl
fmuls
call
xchg
xchg
push
sar
jmp
push
adc
scas
push
mov
sti
push
xor
mov
andb
cmpsl
sbb
mov
push
addr16
sbb
ficoml
push
addr16
mov
ss
gs
ja
les
xlat
jle
push
dec
pop
and
ficomps
inc
ret
add
lea
shrb
les
lahf
xor
jle
mov
push
or
cwtl
or
cli
stos
pop
pop
push
dec
adc
call
iret
mov
dec
out
xchg
das
sub
dec
pop
imulb
lock
out
dec
ret
gs
dec
xlat
leave
inc
addr16
fcomip
pop
out
cmp
or
int3
or
addb
add
push
repz
jl,pn
out
jge
push
jecxz
iret
test
pop
jl
sub
and
lods
lods
fcmovbe
jg
pushf
xor
mov
adc
gs
fildl
outsl
mov
jb
shr
push
in
mov
arpl
or
jns
leave
pop
cmc
in
jmp
or
loope
cmp
cmp
sahf
test
lcall
movsb
xchg
scas
insl
lods
pop
loopne
cmp
pop
in
jmp
lcall
sub
lods
sub
imul
cwtl
sbbl
cmc
adcb
jle
push
or
jle
jb
dec
mov
pop
shll
pop
aaa
stc
add
jns
test
ss
mov
cli
cli
imul
sarb
inc
lock
idivb
movsl
lret
cmp
jl
pusha
or
mov
dec
adc
mov
ja
pop
add
movsb
bound
jle
rcl
fimull
daa
sub
repz
imul
xchg
adc
popf
jns
xchg
fistps
xor
xor
insl
add
push
mov
push
sbb
push
sbb
push
push
dec
out
push
rcl
sbb
pop
xchg
cmpsl
js
into
mov
iret
shlb
std
bt
mov
fwait
lock
xchg
pop
dec
lock
dec
clc
jl
jg
mulb
ja
push
aad
jne
lods
pop
aaa
scas
pop
mov
xchg
pop
xchg
push
pop
decb
sbb
pop
pop
pop
and
repz
sti
dec
cwtl
jle
test
jo
js
pop
idiv
insl
mov
into
xor
js
adcl
sahf
jnp
icebp
mov
xor
mov
xchg
outsb
mov
lret
add
fistl
testl
jmp
and
stc
das
xor
jnp
xor
adc
movsl
shll
lcall
sub
lahf
jno
push
lds
push
and
mov
inc
fistl
lahf
cmp
mov
push
les
or
fsubrl
pop
fistpll
pop
push
pop
arpl
cmp
lods
sbb
cwtl
scas
les
cmpsl
movsl
cmp
jp
mov
in
fsub
inc
pop
pop
popa
xrelease
jnp
add
mov
mov
inc
dec
sbb
jle
inc
sbb
or
fidivrs
pusha
lcallw
fidivrs
xor
pop
data16
mov
ljmp
pusha
cmp
cmc
test
insb
ds
sbb
cld
inc
lock
es
push
test
or
adc
dec
aas
ficompl
pop
cld
into
aas
fbstp
sbb
and
dec
and
ljmp
inc
add
leave
hlt
imul
cli
pop
mov
lcall
push
call
icebp
lahf
scas
movsb
sub
aam
xchg
xchg
xchg
aaa
mov
sti
jae
xchg
inc
jnp
mov
shll
dec
repz
mov
push
cs
push
lahf
cmp
cwtl
iret
aam
dec
in
clc
fxch
pop
lods
mov
xor
movsb
pop
push
repz
clc
loop
mov
loop
push
or
stc
push
mov
mov
push
idivl
mov
test
std
mov
cmp
inc
jbe
cmp
xchg
sub
cwtl
aas
filds
fidivrl
mov
repnz
mov
add
cltd
xchg
inc
mov
dec
xor
jge
or
popf
outsl
arpl
clc
fcomps
dec
addr16
outsb
jb
rol
jle
xchg
out
dec
popf
add
inc
sub
in
mov
or
push
pop
mov
pop
cltd
or
repnz
mov
dec
pop
mov
in
or
push
shlb
int
in
cmp
ficomps
xorl
add
pop
leave
ja
movsl
stc
arpl
lds
lds
andl
lret
pop
outsl
cli
stos
movsb
cmp
xlat
dec
ds
shll
aaa
rcll
flds
cs
cmp
test
iret
mov
clc
fnstsw
push
sar
testb
iret
clc
mull
stos
int
popf
mov
mov
xchg
pop
mov
jecxz
mov
mov
shr
lea
cmp
add
adc
inc
add
pop
aaa
dec
mov
inc
setle
mov
xor
dec
push
icebp
add
repz
xor
arpl
mov
sub
adc
mov
push
pop
lahf
sti
cwtl
js
lret
cltd
cmp
movsl
movsb
cmp
sub
das
push
test
mov
mov
outsb
jl
mov
inc
imul
lahf
jp
mov
inc
fcmovnb
xchg
xchg
mov
popf
adc
inc
jge
sub
jno
ret
xor
sbb
jbe
ret
sbb
clc
push
cld
pop
ds
out
jae
mov
adc
hlt
pushw
leave
lds
push
adc
aam
cmp
es
les
ret
gs
aad
xchg
dec
or
hlt
jne
xchg
popl
mov
jno
xor
cmp
in
fcmovne
cli
pusha
addr16
imul
out
call
pop
jne
jnp
cwtl
mov
sbb
aas
push
mov
and
push
cltd
xor
fldt
nop
xchg
stos
fwait
xorb
xlat
xor
adc
mov
or
xchg
pop
mov
add
xchg
shlb
sti
cmp
outsb
sbb
mov
sub
sub
mov
add
hlt
mov
cmp
ds
rorb
pushf
pop
cs
jmp
sarl
aas
jb
jb
lods
decl
inc
test
mov
cmpsl
xor
or
lods
pop
fimull
xchg
stos
insl
sbb
mov
mov
das
dec
aaa
jae
jae
ja
dec
out
mov
add
pop
mov
test
lock
sub
add
orl
mov
mov
cld
jo
incl
enter
pushf
sbb
mov
or
cmpsb
sub
pop
cmp
pop
icebp
sub
jl
jmp
out
out
dec
idiv
sti
cmpsl
adc
pop
xchg
repz
imul
cvtpi2ps
mov
xor
out
mov
mov
lcall
testb
mov
sub
loop
and
and
orl
int3
cmp
iret
ret
mov
stc
out
fnsave
mov
fidivrl
jns
mov
clc
out
cmp
fidivrs
mov
inc
or
aad
inc
mov
rorl
jae
mov
pop
leave
jo
movsb
jp
xor
aas
loopne
jne
xor
test
or
or
sub
outsb
not
into
mov
dec
fld
jb
lcall
lds
pop
in
pop
pop
or
or
xchg
nop
rcl
ret
out
data16
enter
les
out
pop
dec
jp
mov
fbld
or
add
pop
in
mov
repz
dec
sbb
leave
stc
jecxz
test
out
sub
mov
insl
pop
jns
ret
ficomps
push
mov
push
jnp
loop
fdivs
iret
test
jge
fistl
push
or
adc
incl
sti
and
push
adc
cwtl
adc
ds
fxam
ret
xchg
add
add
into
cld
jb
ja
xor
jmp
jp
cmpsl
jg
stc
dec
js
fiaddl
ja
jno
faddl
andb
mov
jle
sub
mov
arpl
dec
mov
pusha
adcb
ljmp
jge
andb
cmp
xor
jae
inc
xchg
add
fnsetpm(287
push
stos
fstpt
dec
mov
mov
mov
retw
xor
mov
int3
sub
fstpl
es
pshufw
out
sti
pop
int3
mov
inc
test
stos
mov
and
mov
or
pop
add
adc
jmp
push
repnz
insb
mov
xchg
nop
pop
leave
cs
addr16
sub
xchg
mov
jnp
xchg
xchg
jmp
pop
pop
dec
or
push
adc
loope
push
or
cmp
aam
stos
inc
jne
mov
fistpl
or
jp
add
jae
repz
push
dec
outsl
cli
push
sahf
fdivrl
inc
outsl
cwtl
mov
cs
jge
pop
pop
push
outsl
test
fstpt
outsl
jl
popa
test
or
xor
xor
push
jp
outsl
push
scas
mov
in
add
push
cmp
adc
and
cld
sub
int3
fistpl
adcl
jne
push
inc
mov
pop
lock
adc
jnp
ficompl
pop
mov
movsl
popa
repnz
dec
mov
cmc
in
adc
xchg
in
cmpsl
sar
dec
dec
inc
cmp
cmp
int3
or
daa
push
mov
cmp
sub
inc
es
loope
fs
jge
out
sub
cmpsl
aas
or
add
mov
pop
push
ret
imul
sti
mov
icebp
cmp
dec
out
mov
inc
push
inc
mov
cwtl
cmp
xchg
jg
test
pop
fistpll
inc
jp
xchg
push
in
mov
push
xchg
movsb
sbb
jns
aad
jp
leave
or
mov
mov
jae
push
push
psraw
movsb
dec
cmpsb
popf
xor
fstpt
lea
xor
xchg
lods
add
push
and
lcall
shlb
in
mov
jbe
movsb
pop
cmpsb
cmp
xchg
bound
add
bound
add
or
lods
push
test
jne,pt
cmp
and
dec
push
aaa
out
jnp
pop
int
scas
xor
lds
adc
or
adc
arpl
cmp
stos
xchg
cli
jne
jae
jp
sti
es
out
xor
dec
jg
pop
testl
or
sub
out
mov
loopne
xchg
cmp
int3
jns
cmpsb
xchg
xchg
push
jb
add
rcrl
stos
push
jp
nop
jle
les
dec
jne
cmc
add
in
pop
in
sub
iret
mov
mov
jg
loop
js
adc
sete
jg
mov
sub
mov
mov
aas
fsub
sub
mov
inc
ficomps
outsl
incl
mov
rolb
xor
jno,pn
scas
test
test
xor
aam
push
mov
push
adc
push
xor
push
clc
xchg
jns
bound
sbb
js
popa
movsl
jns
mov
in
imul
or
jp
lods
inc
cvttps2pi
or
out
loopne
pop
or
jnp
mov
jmp
inc
in
inc
movsl
and
shl
popf
js
shlb
rcl
pop
and
nopl
sub
out
adc
mov
push
arpl
out
dec
mov
dec
fcmovnb
les
dec
mov
addr16
xor
cmpsb
sub
jbe
pop
push
aam
pop
sti
cli
mov
inc
jp
lahf
dec
inc
icebp
int
inc
lret
and
xchg
jg
xchg
jo
into
jns
jl
mov
mov
inc
cmpsl
nop
fmull
repnz
push
sub
div
jg
shl
lahf
cmp
icebp
setno
jb
div
xchg
icebp
div
xchg
enter
jg
outsl
sub
imul
add
cmp
and
jb
jno
mov
mov
mov
sub
pop
xchg
lds
dec
push
shll
cmpb
mov
fwait
shlb
pusha
xor
imul
mov
iret
bound
aad
mov
cs
imul
popa
popa
lea
out
mov
or
addr16
mov
dec
push
mov
pop
cltd
arpl
inc
std
and
leave
jg
or
dec
add
mov
les
sti
fisubrs
aad
pop
test
sub
inc
mov
lret
lea
push
mov
sbb
push
mov
pop
lret
fs
sarl
xchg
mov
mov
in
decl
jl
imul
pop
daa
repz
int3
push
dec
mov
bswap
mov
and
dec
inc
pop
sti
add
ja
or
mov
mov
inc
jl
and
lock
into
add
dec
mov
div
shl
mov
mov
in
ret
mov
popa
push
std
jno
mull
aam
aas
dec
dec
inc
clc
aas
jnp
xor
pushf
scas
aam
sub
pop
jno
sub
shlb
inc
inc
imul
adc
push
cmp
in
aad
mov
jg
or
mov
mov
je
or
mov
mov
pop
popa
xchg
shll
scas
repnz
lea
repz
xor
outsl
inc
std
pop
xchg
or
mull
lock
js
push
pop
mov
ljmp
and
jmp
cld
les
icebp
decl
add
and
and
mov
out
adc
mov
in
jne
loope
mov
addb
and
inc
int
loop
jecxz
inc
and
mov
sbb
test
in
andl
fadd
addr16
pop
dec
movsl
cmpsb
shll
push
insb
push
fisttps
cmp
movsl
int
mov
loop
int3
incl
scas
insb
cld
pop
cwtl
cmc
mov
test
loop
cmp
push
dec
je
aad
arpl
int
fld
loop
repz
loope
mov
aas
sbb
jp
push
imul
repz
xchg
repnz
hlt
repnz
jnp
mov
sti
lods
gs
lahf
outsb
xchg
cmp
jnp
fld
loopne
repnz
aam
jnp
cmp
fucom
jne
pop
pop
out
dec
cmp
sub
adc
ret
cmp
cmc
sbb
leave
repnz
pop
orb
pop
push
mov
bound
enter
push
lret
pusha
and
push
rol
insl
test
in
sbb
cmc
aaa
imul
outsb
fiadds
stc
xchg
outsb
outsl
mov
xor
xchg
push
pop
and
in
inc
pushf
out
out
cld
loope
jg
xchg
push
loopne
lret
cwtl
inc
mov
pop
push
loopne
fisubs
js
mov
adc
lret
push
sub
popa
push
insb
int
lds
leave
stc
cmp
push
sti
psrlw
mov
scas
xlat
xor
filds
repz
cmp
inc
jl
test
inc
sti
pop
mov
jno
jns
jb
mov
push
gs
inc
loope
lods
in
sbb
out
gs
sarl
xor
lea
shll
into
cmp
ja
test
pop
lret
in
add
mov
dec
dec
mov
ljmp
aaa
stc
call
xor
mov
mov
xchg
lcall
cld
inc
pop
add
inc
mov
push
cmpl
pop
repz
rorl
add
scas
sti
mov
sti
jnp
je
sub
cmp
mov
rorb
xor
dec
xor
xor
jnp
lods
inc
popf
imul
aad
rcrl
jecxz
inc
xor
xor
push
movsb
sti
outsb
add
lahf
popa
int
rorb
cmp
cmp
data16
push
out
aas
bswap
pop
aas
jns
sub
sub
jns
mov
push
lahf
out
xchg
dec
ja
or
addr16
fistl
pusha
testl
test
xchg
js
sbb
and
pop
cmp
and
sub
sub
pop
inc
in
popa
adc
loop
fcmovnu
repz
iret
or
xchg
ljmp
jnp
stos
mov
pop
out
pop
jg
lock
jle
sti
pop
cmp
push
and
adc
inc
sub
fadds
xchg
aad
cmp
loope
sub
icebp
shll
test
test
scas
sahf
pop
mov
push
shll
xor
cmp
mov
push
fiadds
sti
xlat
cmc
lcall
xchg
imul
fwait
shrl
addb
rcl
xor
sti
addb
pop
fnstsw
int
pop
cwtl
push
mov
inc
clc
popl
mov
aaa
or
push
sub
jge
lds
aam
mov
lock
leave
testl
or
popa
jl
dec
stos
scas
js
fstps
insl
and
mov
and
leave
xor
flds
xor
in
cs
sbb
in
mov
push
notb
rorl
fstps
iret
pop
mov
push
dec
xchg
vpunpcklqdq
jns
dec
cmp
jg
vcvtdq2ps
outsl
ss
iret
in
mov
dec
mov
jle
pop
and
inc
xchg
pop
fdiv
xor
jo
hlt
fimuls
mov
cmp
lcall
xchg
loope
xchg
sbb
arpl
mov
xor
jno
or
aas
jmp
jmp
test
mov
jg
testb
ret
cmp
xchg
cmpsb
and
cmpsb
jge
jp
xchg
sti
jl
test
xchg
in
push
push
jg
les
mull
clc
sti
ds
inc
mov
test
icebp
popa
mov
jmp
repnz
push
mov
in
cs
add
xchg
dec
xlat
push
sbb
out
cmp
mov
push
or
loope
pop
insl
testl
and
aam
adc
test
xchg
jp
push
add
pusha
add
cmp
or
xor
rol
popa
sub
mov
mov
xchg
mov
fldenv
sarl
mov
pop
lock
jns
outsb
mov
add
outsb
cmc
or
mov
call
popf
movsl
into
pop
arpl
pop
subb
or
jno
mov
mov
das
call
into
test
jae
insl
jl
sti
popf
outsb
lea
dec
inc
sub
xchg
and
pop
xor
cmp
insb
xchg
lcall
in
int3
sbb
mov
jns
jo
addr16
dec
les
popf
fdivrs
or
dec
or
adc
sub
dec
ret
add
shlb
cmp
mov
cmp
les
push
pop
jge
push
push
add
out
in
push
lea
in
dec
push
fs
pop
dec
add
push
push
xchg
xchg
fs
inc
jns
les
fidivs
cmp
mov
cs
and
ljmp
pop
mov
outsl
xchg
in
pushf
stc
movsl
mov
lock
push
popf
mov
cmp
mov
jb
leave
pop
loop
stc
lods
out
hlt
jbe
hlt
add
addl
dec
insb
cld
test
in
out
fwait
mov
jno
std
cld
xor
testl
cwtl
scas
cmpb
jb
popa
adc
adc
out
pusha
dec
mov
jbe
fcomp
pop
add
jl
lcall
cmovo
adc
je
jnp
mov
dec
add
mov
mov
cltd
inc
leave
popa
test
aad
inc
int
cmp
in
imul
test
jnp
aas
outsl
adc
aad
and
xor
cmc
sti
repnz
out
push
clc
test
push
ret
mov
pushf
movsl
lods
mov
pop
stc
sti
scas
mov
fadds
clc
lahf
pop
sti
insb
mov
mov
pop
pop
xor
lahf
aad
adc
lcall
mov
iret
outsl
in
cmpsl
mov
stc
dec
pop
sti
out
aaa
adc
frstpm(287
cmp
dec
ja
mov
or
lret
or
lea
sbb
mov
fcmovne
popa
jae
testb
int
jno
icebp
jecxz
sbb
movsbl
stos
sbb
sti
pop
lret
out
add
orb
add
fidivrs
pop
xchg
repnz
fnstenv
in
in
mov
jp
fisttps
mov
mov
push
mov
enter
outsb
icebp
jae
inc
in
or
jg
rolb
adcl
es
push
fimuls
popa
pop
xchg
cs
jae
xchg
mov
mov
jg
cmp
rorb
mov
dec
adc
enter
imul
imul
jle,pt
xchg
jns
loop
jle
push
out
xor
sarb
dec
enter
in
cmp
and
push
jg
dec
test
or
jle
dec
dec
stos
test
push
jae,pt
test
movsl
add
dec
cmp
test
lahf
stos
mov
mul
jns
mov
bound
repnz
add
cs
shl
xor
test
jle
cmp
mov
aas
lds
jmp
push
jb
pop
or
sub
popa
fwait
xchg
push
push
pop
fmul
mov
pop
stos
mov
loope
push
scas
jp
xchg
lahf
ficompl
adc
popf
adcb
cli
test
aad
mov
insb
aad
xchg
and
shl
xchg
sub
iret
push
xor
mov
js
push
fcoms
cmc
cli
cmpsl
and
fsub
ljmp
jmp
stos
test
push
int3
lahf
stc
xor
mov
test
jno
cltd
or
subb
cltd
test
xchg
fsub
xchg
jns
shl
mov
cmp
mov
sub
xchg
cli
pop
cs
faddl
jns
out
in
testb
jle
xchg
in
fistpl
jns
shl
jno
jmp
jbe
cmp
and
mov
jmp
int3
cmc
cmp
sbb
mov
lahf
sbb
sub
fists
test
inc
out
iret
or
setle
lock
pop
xchg
add
or
push
adc
test
enter
sbb
mov
pop
inc
mov
scas
xchg
cli
xchg
loope
mov
inc
mov
cmc
nop
jo
sbb
inc
and
ds
data16
mov
aad
fistpl
pop
dec
fstp
jmp
imul
daa
cmp
bound
jmp
ljmp
ret
sub
sar
or
ret
mov
cmp
sahf
lahf
loopne
cmpsl
mov
hlt
cmp
xchg
imul
jns
lcall
jecxz
sub
dec
sbb
dec
in
lahf
pop
add
sub
mov
movsl
mov
or
jbe
xchg
push
dec
daa
adc
fidivrl
push
cmp
ja
push
and
jbe
push
push
inc
ds
fcmovnb
sti
popa
xchg
lea
jne
pop
sbb
movsl
out
pop
jb
repnz
push
es
cli
push
outsl
gs
push
mov
mov
xorl
push
test
lock
xlat
aam
xchg
leave
add
and
dec
icebp
std
pop
cltd
pushf
shr
push
jmp
out
sahf
xchg
or
leave
test
push
xchg
loop
push
jnp
sarl
test
dec
aam
mov
enter
out
jmp
adc
out
push
dec
bound
adc
mov
repz
xchg
xchg
sarb
pop
dec
loopne
pusha
dec
nop
inc
cmp
rolb
lods
cmp
dec
dec
sbb
sbb
mov
pop
cld
add
push
inc
add
test
idivb
cli
fistpl
lods
xor
push
mov
pop
imul
daa
dec
loopne
dec
nop
out
scas
jmp
jmp
arpl
pop
inc
out
jnp
movsl
mov
shr
pop
sub
out
mov
lock
shl
or
xchg
jnp
shr
push
dec
jae
mov
adc
rcl
iret
in
mov
popa
mov
jmp
popf
sarb
ljmp
mov
icebp
aam
popa
xchg
fmul
aam
cmpsl
das
nop
xor
or
push
test
mov
cs
add
das
aas
pop
gs
int
mov
enter
inc
fadds
rcrl
pop
aas
rdpmc
pop
add
ds
push
mov
lahf
das
sub
insb
cli
xchg
movsb
rclb
add
add
popa
fsubrl
xlat
pop
lcall
and
or
test
push
mov
or
xor
aad
jne
fwait
xor
pop
cld
or
shlb
cmpsl
addr16
in
push
xchg
cmp
cmc
and
cmp
ficoms
jne
sbb
addr16
dec
es
mov
test
jge
pop
lea
xor
fdivrp
add
push
xorl
jae
popl
and
loop
inc
push
xchg
sti
dec
out
mov
dec
mov
fistpl
leave
mull
mov
ret
jae
or
push
adc
movsb
inc
mov
pop
es
fwait
paddusw
sbb
xchg
in
es
adc
adc
xchg
mov
in
add
dec
push
scas
push
mov
jp
ds
xor
cld
test
adc
into
clc
movsl
js
mov
aas
mov
shlb
mov
push
inc
stos
cmp
xlat
pushf
or
cmp
pusha
push
call
test
lea
je
add
shrb
pop
or
ds
xchg
and
inc
pop
leave
jg
addr16
pop
add
outsb
test
jbe
cwtl
cmpl
inc
pop
dec
cmp
dec
push
pop
sarl
dec
adc
lds
das
or
in
mov
cmp
loope
mov
out
js
sbb
test
mov
pop
stos
inc
push
add
stos
ja
jb
lret
jecxz
gs
add
icebp
out
inc
addb
cmp
jno
pop
popf
mov
mov
stc
btc
mov
out
loope
into
imul
mov
stc
pop
int
fisubl
sub
mov
into
add
push
xor
loopne
pop
cltd
xchg
lock
divl
mov
dec
cltd
dec
mov
bound
enter
jp
sbb
jmp
cwtl
fldt
pop
addr16
xchg
cmp
lcall
xor
push
dec
lret
data16
xchg
push
xchg
jbe
fwait
pop
jne
ret
je
insb
adcb
ret
cmp
or
cmpb
xchg
enter
sub
xor
push
jmp
push
enter
lret
hlt
mov
pop
mov
movsl
rcrl
push
addl
or
loope
ja
call
xor
pop
cltd
cwtl
lret
xor
incb
pop
xchg
jno
data16
lret
pop
cmp
jno
push
cmpsb
jb
cmp
pop
aad
in
mov
loopne
rcl
adc
pop
xchg
fiadds
mov
dec
sbb
fdiv
fsubl
test
add
pop
jp
pop
inc
std
stos
pop
cmp
sarl
sahf
pushf
sub
jecxz
repz
jge
lcall
sub
test
push
std
xchg
add
jae
jecxz
fbstp
add
js
stc
rolb
sub
adc
out
cmpsl
pop
pop
mul
loopne
mov
mov
push
fcomi
pop
inc
aas
loopne
jp
ret
push
pop
xor
pop
jb,pn
add
adc
dec
dec
scas
shrl
insl
mov
mov
pop
jns
add
dec
jl
fmuls
push
and
ja
and
push
test
lcall
mov
xchg
fwait
xchg
aad
pop
cwtl
mov
adc
mov
shrl
pop
and
mov
mov
push
pop
push
dec
stos
pop
jmp
enter
leave
fcomip
dec
in
call
cmp
pop
aas
fcmovu
and
insb
cwtl
mov
test
dec
rcrl
dec
lods
lea
lock
sub
into
add
loopne
push
and
or
xor
xchg
pusha
pop
ret
xchg
scas
lcall
int3
iret
pop
fstpt
dec
xor
icebp
test
pop
and
outsl
sahf
bound
pop
call
ss
repz
jl
std
mov
jle
jg
inc
sub
push
imul
sbb
call
jle
and
fwait
mov
add
lret
dec
cld
cmp
mov
xor
xor
inc
push
xchg
pop
pop
or
cmpl
xorb
jae
outsl
jmp
mov
outsb
mov
mov
js
iret
hlt
fmuls
arpl
xor
push
cmp
mov
sbb
xor
push
imul
shlb
fwait
sub
adc
testl
lret
adc
arpl
pop
mov
aad
jnp
es
push
leave
ljmp
movsl
push
or
into
jle
push
cmp
and
loop
cmc
jnp
popa
ret
sub
into
add
shl
push
jns
fsubrl
inc
mov
jne
popa
sub
iret
int
popa
stc
mov
adc
cmp
mov
out
xor
outsl
gs
aam
mov
push
xor
pop
sahf
outsb
ret
addl
mov
jae
mov
cld
mov
cmp
mov
add
jnp
adc
jb
out
std
lock
xchg
aad
inc
fistps
scas
repz
lcall
lods
stos
xlat
idivl
scas
out
popa
inc
jg
popl
sub
aam
pop
xor
push
movsl
outsl
push
or
jge
inc
bound
cmpb
sub
iret
fdivs
lret
fisttps
mov
inc
loop
les
rcl
ss
push
orb
iret
scas
cmp
ja
mov
lahf
test
bound
inc
mov
sub
movsl
xchg
inc
test
aad
int
lahf
cmp
popa
xchg
iret
jnp
mov
lret
repz
mov
out
inc
dec
dec
leave
std
and
fmul
xorl
pop
repnz
or
out
pop
addr16
cld
loop
bnd
jno
pop
push
pop
clc
jmp
adc
and
mov
outsl
and
mov
jne
sti
arpl
jnp
cmp
out
push
pop
sub
cld
jecxz
add
jmp
jecxz
icebp
push
iret
out
jns
jns
es
and
pop
dec
stos
mov
inc
imul
mov
cmp
outsb
jp
xchg
filds
fs
int3
lods
aad
push
negb
iret
ja
dec
and
jno
jp
mov
sahf
daa
rep
jmp
leave
adc
shl
push
lds
push
add
jno
jno
int3
sbb
std
pusha
addb
inc
push
aam
sti
testl
cmp
mov
cmpb
sbb
adc
outsl
mov
addr16
push
insl
add
gs
xor
lods
repnz
incb
pop
aaa
push
aaa
dec
enter
xchg
insb
addr16
dec
sbb
push
imul
fwait
iret
arpl
dec
sbb
sub
lahf
jae
icebp
popa
mov
repz
hlt
sub
mov
out
daa
xor
aam
jmp
popa
push
push
imul
cmp
lahf
rolb
inc
js
jmp
xchg
add
mov
and
jnp
and
inc
lds
sub
mov
in
lock
xchg
jae
xor
test
jg
or
cmp
fcoms
jno
push
jns
into
test
bound
cmp
push
add
xor
add
xchg
imul
push
or
hlt
sahf
mov
jp
ficoml
or
add
or
out
jge
adc
jg
out
mov
jmp
test
sub
bound
add
mov
xchg
or
mov
add
out
pop
cwtl
movsb
pop
mov
addr16
insb
xor
cmp
jmp
jnp
out
jmp
dec
out
lret
fimull
fstpt
sar
and
pop
stos
out
stc
pop
add
inc
add
inc
test
push
xchg
out
and
jae
lds
adc
jmp
pop
test
pop
mov
jge
cmp
shll
jns
fcmovb
je
into
sbb
push
ret
sbb
push
pop
push
sti
push
mov
nop
fidivrl
xchg
jb
iret
loopne
aam
mov
or
mov
test
xor
out
out
push
popl
ljmp
pushf
xchg
pop
mov
pop
cwtl
aad
popa
mov
push
js
inc
push
jnp
outsb
scas
out
or
loopne
and
sbb
pushf
jecxz
pop
out
mov
cli
mov
cmc
push
mov
sarl
test
and
testb
fdivl
push
xchg
and
inc
pop
mov
mov
cwtl
addr16
jae
or
jno
mov
cmp
icebp
jae
inc
aas
fnsave
cmc
dec
pop
notb
inc
and
fcomip
sub
fsubr
jp
jo
push
xor
mov
mov
sbb
mov
mov
sbb
ret
frndint
sahf
repz
push
mov
jnp
sarb
cmp
mov
fdivrs
fiaddl
mov
rcr
in
jnp
adc
loop
cld
subl
shl
pop
cld
mov
test
dec
js
inc
cmpsb
sub
mov
push
push
cltd
sub
inc
mov
lock
pop
roll
in
cmp
sbb
outsl
out
test
adc
lahf
jg
sti
cli
xorb
add
cmp
inc
push
mov
sub
pop
cmp
aam
xchg
adc
in
sbb
nop
pop
scas
lods
mov
imul
or
cli
pop
mov
loope
jle
popa
inc
test
pop
out
fnsave
mov
stc
xor
jno
cmp
mov
movsl
mov
aas
rorl
pop
xchg
sti
gs
lea
icebp
test
mov
xchg
sarb
sub
mull
push
xor
out
dec
std
xor
sbb
mov
or
push
scas
and
mov
mull
add
lahf
out
adc
push
insb
popa
loop
notl
mov
fistps
cltd
das
jo
enter
lock
mov
loopne
pop
mov
loopne
adc
aas
adc
test
fnstsw
stos
cmpl
jne
xchg
sub
popa
imul
insb
roll
add
mov
and
outsb
dec
popa
int
in
adc
mov
rclb
mov
cmp
push
shrb
inc
fistps
call
stos
sbb
mov
mov
inc
arpl
movntq
sub
arpl
mov
and
push
call
xor
pop
inc
jg
test
repz
lods
mov
std
rcll
or
mov
fstpt
lods
or
push
cwtl
mov
sbb
fsubs
test
dec
aam
jmp
adc
lahf
stos
leave
pop
imul
aad
shlb
sahf
clc
mov
xor
mov
cmp
push
scas
icebp
fmuls
push
inc
in
lret
gs
mov
xchg
dec
ja
pop
xor
js
jecxz
jge
repnz
out
jnp
sub
xorl
insb
mov
mov
imul
in
repnz
in
out
jns
xchg
stc
scas
cmp
mov
popa
inc
xchg
fcmovne
mov
dec
mov
outsb
xchg
rcrb
enter
out
add
rcr
sbb
cli
ja
adc
mov
mov
in
and
aas
jl
sub
jb
fstl
pop
lcall
sahf
loope
add
out
jecxz
cmpsb
clc
cmpsl
pop
xor
ret
xchg
fistpl
test
enter
lcall
pop
mov
mov
popa
lret
jae
cmp
mov
push
lods
stos
iret
data16
push
xchg
and
iret
ret
imul
push
lds
mov
pushf
hlt
push
jns
mov
mov
jne
xchg
pop
fcom
mov
sbb
decl
pop
add
cmp
cltd
jo
cli
cmp
repnz
movsl
pop
cmp
cmp
mov
mov
mov
mov
testb
lret
jno
orb
xchg
push
mov
into
xor
in
sub
mov
iret
mov
mov
not
pop
shl
jge
and
sbb
movsl
sti
out
outsl
outsl
ljmp
xchg
aad
cmp
add
pop
dec
loope
add
adc
scas
sbb
push
jl
cmpl
test
fldt
mov
fistps
jle
aaa
pop
fstpl
mov
pop
inc
pusha
je
mov
fs
xchg
int
inc
stos
mov
mov
out
subl
cmp
or
and
push
mov
sub
lcall
sub
xlat
add
outsb
jmp
push
insl
pop
lods
enter
scas
repnz
repz
and
test
mov
icebp
push
and
inc
add
std
add
pop
xor
out
sub
jg
icebp
dec
jns,pn
push
in
fs
dec
or
cwtl
xchg
push
cmp
clc
adc
ja
fwait
and
int3
and
and
mov
sbb
out
add
sub
mov
mov
ja
pop
mov
jbe
jnp,pt
rolb
outsl
push
xor
xlat
enter
mov
popf
repz
insl
mov
clc
lea
inc
pop
outsl
out
lock
out
test
jns
je
push
or
inc
jnp
bound
ljmp
or
jnp
mov
jae
aaa
fists
stc
mov
dec
jnp
ja
arpl
push
xor
in
repnz
lret
add
inc
adc
cmp
or
roll
outsb
xchg
arpl
adc
and
push
jg
and
mov
adc
pusha
and
jp
inc
stc
popa
add
add
in
popf
cmc
inc
loopne
adc
mov
cmp
inc
or
leave
pop
jl
mov
add
mov
fiadds
stos
push
shl
dec
mov
jl
dec
imul
mov
int
dec
daa
push
mov
jbe
movhps
mov
lahf
xrelease
hlt
xchg
ret
or
inc
dec
test
test
orb
popa
xchg
arpl
mov
mov
jae
ret
jge
inc
ljmp
jmp
dec
mov
push
mov
or
sub
je
outsl
dec
iret
orb
je
adc
sbb
jle
xor
sub
int3
dec
incb
ficomps
sti
jno
insl
rol
lods
dec
lds
lock
jae
mov
out
sbb
sti
in
fisubs
sti
add
mov
pop
and
jae
dec
out
out
scas
icebp
dec
imul
push
out
inc
pop
leave
lods
shll
jecxz
in
mov
clc
fistl
cltd
test
jnp
fidivs
inc
dec
jne
repnz
fpatan
jns
dec
shll
jnp
arpl
mov
aas
dec
out
or
repz
pop
dec
out
or
adc
stos
imul
cli
xor
sub
cmp
subl
pop
push
negb
stos
loop
lcall
adc
mov
xor
js
movsl
clc
js
sahf
xchg
insl
fmulp
jle
dec
mov
mov
testb
je
or
fs
push
dec
xchg
add
pop
movsl
imul
sbb
mov
add
enter
dec
imul
ljmp
mov
mov
sbb
cs
xchg
add
mov
hlt
xor
into
push
fadds
cmp
movb
lret
sbb
adc
push
sbb
iret
and
and
mov
adc
test
jecxz
fistpl
jmp
mov
enter
test
test
push
mov
xchg
fistl
cwtl
mov
cmp
aas
jne
pop
add
out
and
std
sti
pushf
add
aas
std
int3
xor
shll
arpl
and
lds
xchg
xadd
inc
aad
hlt
testb
addr16
and
pop
in
outsl
js
mov
pop
pop
cmp
cmc
cmp
add
aas
in
int
cmpb
lret
push
into
cli
xchg
in
adc
adc
neg
int
push
fidivrs
push
aaa
faddl
mov
add
xor
lea
jb
lods
jle
mov
pop
jge
jns
or
inc
sti
mov
cmpsl
daa
jns
pop
jle
mov
lods
jle
mov
stos
adc
sahf
insl
lds
mov
push
aam
repnz
mov
xlat
inc
mov
rep
xchg
lret
pusha
imul
repz
xchg
pop
jp
in
out
outsb
jle
xchg
jae
mov
mov
out
movsb
jns
cwtl
jle
fistpll
jle
mov
cmpsl
mov
jle
ret
fisubl
jle
test
xor
es
jns
fisubs
cli
cltd
jns
pop
sbb
lahf
fistps
cli
dec
inc
sub
les
cmpb
mov
test
int3
xchg
aas
repnz
add
icebp
push
or
mov
adc
ret
mov
imul
dec
pop
ljmp
fs
xchg
push
add
jo
shl
incl
ds
lods
jne
stos
inc
lock
pop
dec
push
imul
inc
in
imul
lret
sbb
adc
ret
add
xor
push
lods
and
dec
jp
movsb
call
daa
into
jnp
in
arpl
repz
es
sti
push
jl
jbe
mov
lock
push
out
movsb
ret
dec
icebp
push
stc
mov
out
mov
jg
and
mov
shr
xchg
sbb
jmp
dec
or
jmp
dec
je
pop
fistps
mov
inc
dec
xor
pop
pop
sbb
cli
paddsw
add
mov
jmp
scas
jns
jbe
mov
push
lods
or
xchg
movsl
outsl
dec
aaa
pushf
mov
das
addb
adc
rcl
loop
jnp
sub
push
insb
fstpt
movsl
call
lret
xchg
repz
pop
clc
jg
or
pushl
imul
or
ja
xor
push
adc
push
lahf
imul
mov
ljmp
xchg
add
repz
dec
jne
mov
lret
or
ds
imul
fcmovbe
std
mov
mov
xchg
xchg
loopne
cmp
nop
jno
frstor
ja
jge
jo
mov
mov
int3
xor
and
addr16
fsubrl
sahf
jnp
jnp
stos
jge
jmp
inc
repnz
roll
cmp
pusha
frstor
lods
sti
mov
pop
pop
and
jge
jp
mov
fmull
jl
cmpsl
inc
jp
fdiv
pop
pushw
cwtl
icebp
adc
pop
mov
or
sahf
xchg
jp
in
int3
outsl
lcall
outsl
jge
jge
pop
mov
dec
xor
sbb
push
jbe
roll
icebp
adc
sahf
sti
or
popa
cmp
in
cmpsb
or
ret
fmull
add
sbb
sar
test
mov
and
cltd
adc
push
add
arpl
aam
push
movsb
nop
into
adc
imul
mov
jp
mov
test
hlt
pop
push
fldl2t
out
mov
jne
loope
jbe
inc
push
xor
ret
loopne
fiadds
xchg
inc
movsl
ja
sti
jle
lcall
insl
stos
push
jae
xchg
or
jbe
xor
loope
add
xorb
add
mov
dec
out
sti
pop
stos
push
xchg
outsb
jl
cld
lret
testl
test
mov
test
mov
sbb
outsl
ficompl
mov
fwait
int3
push
out
mov
in
fsubrs
lods
mov
shl
lea
cmp
repnz
jnp
jb
loope
cmp
jb
fwait
mov
jne
insl
js
and
pop
scas
pop
mov
and
loope
xchg
dec
outsl
pop
into
leave
imulb
shld
jbe
lea
xor
jno
xchg
xor
jae
roll
dec
hlt
xchg
leave
xchg
fcmovnbe
mov
inc
shll
xlat
cmpsl
cmp
fildl
mov
add
mov
aam
cwtl
imul
in
and
jnp
hlt
jns
jge
dec
hlt
je
int
and
pop
arpl
rcll
lar
cmpb
fucomip
cmpl
aas
mov
dec
rolb
push
jp
incl
aam
cld
dec
mov
push
adc
and
lds
dec
ljmp
pop
leave
inc
pop
test
jae
fisttpl
and
cmp
pop
xchg
sub
mov
jp
fbld
adc
sub
int3
jnp
xlat
aas
push
out
jno
or
stc
leave
lcall
adc
adc
cmpb
xor
pusha
insl
repz
jne
jmp
cmpsl
iret
jns
out
outsb
leave
add
cmp
repz
cmp
cmp
pop
jg
jg
and
dec
cli
mov
iret
pop
lds
movsb
cwtl
pop
lock
push
push
push
lock
cmp
jg
addl
out
out
test
out
sarb
fdivs
mov
jb
lea
push
imul
test
std
rol
dec
mov
cwtl
sub
sub
jecxz
mov
out
add
dec
inc
je
push
imul
mov
lea
test
das
push
dec
in
mov
dec
jg
inc
jp
dec
push
sub
lods
jnp
shrb
inc
inc
lcall
cmp
jecxz
cmp
and
movsl
jle
xor
js
test
loopne
fmuls
and
aam
mov
test
sbb
jbe
fstl
fwait
shll
movsl
lret
add
pop
fisttpl
dec
add
pop
cmp
decl
int
insl
insb
cwtl
sbb
pushf
mov
cmc
in
lea
jnp
mov
mov
mov
cmpl
ds
add
sahf
mov
jg
bound
scas
into
lock
xchg
cmpsb
pop
daa
loopne
stos
adc
cmpsb
pop
stos
into
in
dec
xchg
xchg
mov
inc
cmp
imul
movsl
mov
push
push
jge
pop
es
cmc
push
xchg
jno
aas
hlt
fstps
jb
pop
cmp
nop
push
std
mov
fstps
pop
mov
jl
stos
mov
push
adc
cmp
xlat
lret
das
inc
jge
rcll
inc
shrb
aas
loopne
sub
jnp
popf
ja
xorb
xorb
test
pop
or
or
out
push
test
push
cmp
inc
push
lahf
add
add
mov
test
pop
cmp
movsb
popa
jnp
call
dec
imul
sti
mov
test
pop
pop
mov
jl
push
call
and
push
sub
mov
in
cmove
add
lea
arpl
jmp
out
clc
xor
insb
mov
cmpsb
aas
enter
cli
ret
inc
fcoml
jo
sub
into
add
pop
aad
mov
and
sbb
psrlw
add
mov
and
ja
xor
fistpl
or
jg
jns
add
out
cmpsl
sti
cmp
jo
subb
cld
sar
inc
mov
cs
pop
test
fstpl
ja
adc
push
jmp
pusha
jnp
add
jae
cmp
out
sbb
out
test
in
push
jns
pop
jno
fdivl
push
push
cmpsb
add
in
ds
jg
lcall
sahf
in
pop
ja
out
cmp
jne
xor
inc
jge
cmp
mov
sub
test
std
cltd
jg
push
sbb
push
pop
shlb
and
push
insl
scas
enter
filds
xchg
outsb
dec
decl
je
and
xchg
adcb
mov
stos
or
inc
mov
jmp
faddl
sbb
jle
loop
imul
ja
adc
lods
sarl
push
xchg
loope
mov
inc
fidivl
push
cmpsb
mov
xchg
popf
lock
mov
mov
and
idivl
dec
into
rcr
inc
sbb
mov
mov
js
fdivrs
sbb
in
mov
faddp
mov
pop
jmp
popa
out
or
xchg
push
ljmp
sbb
mov
inc
stos
ja
add
add
inc
andb
push
cmp
xor
sub
pop
push
aam
jecxz
push
jge
aam
sbb
repnz
adc
pop
out
jns
in
pop
mov
nop
pop
js
stos
int3
push
outsl
data16
xor
mov
jp
enter
pop
mov
aas
in
xchg
rclb
push
out
in
repz
lret
enter
or
mov
xor
into
cld
imul
in
pop
jle
insb
xor
mov
mov
stc
in
sahf
mov
push
aam
jb
push
leave
and
mov
mov
pop
outsl
pop
xchg
dec
xchg
clc
repz
mov
test
nop
and
cltd
sti
mov
inc
lahf
xchg
pop
add
mov
adc
xchg
je
dec
aam
adc
fisttpl
jnp
mov
pop
fdivs
ja
or
iret
mov
jl
dec
rclb
std
push
leave
negb
imul
insl
xchg
lahf
add
cwtl
mov
out
js
dec
jge
jg
sub
and
jp
ds
mov
loop
bound
into
cmpsl
or
add
fildl
or
leave
ss
sub
jns
das
outsl
in
insl
push
clc
sti
add
mov
mov
pushf
sti
xchg
shl
shll
inc
cmpsl
fmulp
push
lahf
cmp
pop
pop
dec
insl
xchg
cmp
jp
inc
or
pop
jmp
sub
into
outsl
addr16
mov
das
lret
jl
and
outsl
pop
push
mov
push
stc
popf
pop
jl
mov
ja
cwtl
dec
imul
in
stos
negb
mov
std
mov
jle
pop
jge
jne
enter
add
popa
icebp
sahf
xchg
inc
and
sbb
leave
mov
and
xor
leave
push
mov
dec
test
scas
xorb
and
pushf
cmp
pop
mov
shl
pop
out
ret
xchg
fbld
mov
divl
icebp
rol
ja
ja
leave
std
pop
pop
push
push
adc
inc
aaa
sbb
and
pop
icebp
or
iret
shlb
icebp
lret
mov
rorl
pop
pop
push
inc
sti
jg
xor
xchg
and
ja
add
mov
sbb
mov
sbb
push
clc
test
aad
loope
mov
popa
addr16
shll
jmp
adc
push
push
inc
out
cmp
push
cwtl
popl
fcmovne
mov
lcall
icebp
mov
push
cmp
mov
js
loopne
jle
jbe
divl
cli
out
push
cli
pop
into
push
cmpsl
dec
loopne
and
jmp
xor
sbb
out
les
mov
mov
and
insl
pop
lcall
pop
push
push
mov
jno
clc
push
pop
sbb
je
icebp
xor
inc
xlat
jne
mov
ficoml
mov
add
push
lahf
mov
insl
jno
mov
fdivr
subl
jns
inc
data16
jp
or
or
fst
cmp
addl
mov
inc
inc
scas
or
fidivrl
push
pop
fwait
jb
mov
jbe
inc
je
outsl
xorb
movsl
hlt
push
stos
dec
add
jb
pop
add
rolb
imul
or
xor
jbe
sti
jno
mov
xchg
mov
jp
cmpsb
mov
jae
imul
jle
and
jne
add
lcall
xchg
push
sub
lret
mov
out
sub
pop
ffreep
add
xchg
cmp
addb
push
ret
cmpb
cmp
xor
loop
push
add
push
imul
jg
shl
insl
jge
jge
inc
ja
mulb
and
push
outsl
jns
addr16
and
leave
adc
int
addr16
leave
cmc
fildll
icebp
dec
and
nop
fldt
decl
sbb
mov
sub
imul
add
cmp
lcall
popa
jmp
push
cmp
add
push
mov
mov
inc
icebp
aas
add
cmp
xor
or
push
imul
js
cld
sub
repz
jae
push
aas
enter
out
movsb
sbb
add
fsubrs
cmp
push
insb
push
outsb
sub
pushf
xchg
fnstsw
pop
push
sti
push
cli
aad
pop
mov
and
push
pop
aam
xor
cmpsl
add
mov
fdivrp
je
inc
outsb
xlat
rorl
cmp
out
push
inc
rcll
cmp
lret
mov
push
cltd
mov
out
push
mov
pop
jp
ja
sbb
mull
addr16
xorl
pop
mov
out
idiv
cmp
cmpl
pop
and
jge
lahf
sti
inc
push
cmp
loope
pop
lahf
mov
lea
out
jg
dec
insl
pop
iret
add
icebp
stos
les
xchg
xchg
and
lds
push
mov
push
pop
mov
lahf
pop
js
inc
lods
test
cld
cli
aas
cmpsb
push
and
mov
mov
inc
mov
add
jp
push
xor
mov
pop
jnp
rcr
fisttpl
iret
push
lds
xor
pop
fisubrs
cli
lds
in
jg
std
inc
push
pop
mov
pop
into
pop
andl
xor
cmpsb
aas
inc
in
mov
hlt
xchg
sar
jns
mov
inc
repz
test
aas
js
pop
xor
jecxz
sub
pop
out
repnz
repz
inc
jmp
mov
mov
cmpsl
cwtl
popa
xchg
push
adc
cli
pop
lock
sti
adc
xorl
rorl
loop
push
fsubrs
or
stc
outsl
pop
cmp
xor
ret
in
int
es
scas
dec
arpl
into
jle
push
popa
xchg
mov
xchg
add
sahf
xchg
inc
das
cmp
xchg
mov
lods
sete
pusha
add
stc
pop
paddb
leave
adc
rorl
jecxz
shlb
notb
dec
sar
popa
lret
stc
mov
sub
ret
push
mov
xchg
inc
je
dec
pop
in
scas
clc
inc
jecxz
push
rorb
jmp
jl
js
cwtl
xor
jo
dec
in
iret
mov
lahf
sahf
jbe
stc
inc
leave
divb
test
push
into
jl
cwtl
out
pop
test
pop
pop
ret
jnp
es
or
pop
out
xchg
mov
cli
fisttpl
stos
mov
push
jmp
in
dec
fcomp
adc
pusha
aam
push
mov
jb
test
pop
mov
mov
icebp
or
jo
dec
cmp
fsubrl
arpl
xchg
and
or
jl
mov
ret
insl
aam
jecxz
fildl
xor
nop
roll
inc
jle
dec
pushf
popa
lahf
pop
negl
addl
pusha
arpl
mov
mov
xchg
in
leave
mov
pop
shl
hlt
rolb
aas
leave
xchg
or
jae
repz
aad
add
test
sarl
movsb
out
jnp
jbe
mov
inc
mov
and
xchg
cmpsl
ret
sbb
mov
mov
test
sub
dec
addr16
sti
sub
pop
mov
pop
lahf
xchg
xlat
pusha
xchg
inc
mov
mov
mov
jp
setle
jns
inc
mov
into
dec
dec
addb
call
vmovshdup
test
push
nop
les
ficomps
pop
hlt
push
pop
ds
xor
adc
ss
call
inc
and
out
and
sarl
dec
lods
sti
jne
addl
or
shr
rorb
outsl
ds
jne
lcall
push
imul
dec
jnp
xlat
cwtl
stc
adc
dec
pop
sbb
mov
pop
lods
aas
sub
mov
inc
outsl
xlat
jo
fsubl
sub
push
popa
adc
not
mov
inc
push
mov
xchg
mov
dec
scas
ljmp
push
cmp
mov
lea
insl
fldt
enter
data16
jecxz
inc
adc
js
lock
es
outsb
out
lret
sbb
push
into
aas
ja
sub
int
arpl
jnp
inc
sarl
jg
dec
xor
push
mov
push
add
scas
push
lret
outsb
es
sbb
cmp
cmp
movsl
lret
sahf
mov
bound
jle
std
inc
je
fistl
jge
inc
jno
ja
insl
in
fcoml
cmp
jmp
jg
pop
sub
shrl
outsl
pop
out
jle
adc
rcr
lahf
sbb
aad
shll
sar
imul
outsb
jne
dec
cs
pusha
inc
bound
mov
aas
clc
out
dec
mov
inc
inc
fisubl
mov
adc
or
out
xchg
iret
mov
xor
lock
adc
lea
jnp
push
pushf
test
push
movl
jbe
movsl
adcb
lahf
inc
out
rcll
fidivrl
push
jl
pop
inc
cmp
inc
pop
scas
ror
add
jns
mov
cld
and
sub
repz
repz
sbb
icebp
mov
add
out
mov
and
sbb
das
lods
adc
push
and
jg
adc
inc
or
inc
imul
hlt
jnp
jmp
pusha
movsb
xchg
int
arpl
xchg
andb
xchg
es
jbe
push
and
xchg
add
fldenv
jecxz
leave
jb
sbb
je
push
divl
sbb
lret
cld
rcr
lods
andl
jl
jle
adc
cli
push
nop
imul
jb
int3
aas
jmp
push
cmpsb
inc
xchg
jnp
test
popa
jle
sbb
out
cmc
lds
pop
test
ffreep
ljmp
stos
in
in
imul
sub
cltd
lea
dec
das
xlat
mov
leave
mov
mov
xchg
in
out
adc
mov
dec
mov
inc
adc
jge
gs
clc
and
pop
sub
sub
aad
mull
cmpsl
jns
ds
aas
in
cwtl
pop
add
ja
cli
mov
pop
lret
cwtl
or
lds
in
in
or
icebp
dec
mov
jno
subb
push
xchg
insl
push
repnz
leave
idivb
push
jl
pop
idivb
mov
cmpsl
fiadds
lock
sub
into
fisubrl
sub
sub
mov
cmp
pop
imul
ds
stos
adc
aas
orb
jnp
stos
cwtl
cmpsb
js
lret
dec
mov
testb
in
lret
adc
push
out
xchg
shlb
and
test
scas
jle
push
mov
out
jae
movsb
jp
add
lret
xorb
mov
popa
mov
mov
sar
test
push
out
dec
add
movq
push
add
addr16
and
cld
jae
rcrl
pop
push
lahf
mov
adc
mov
insl
sbb
xor
call
ss
and
adc
jnp
or
arpl
pop
jnp
leave
jle
mov
inc
fs
lahf
sti
leave
dec
xlat
push
out
fcmovbe
mov
hlt
shll
add
inc
jp
cmp
jns
popf
cmc
inc
pop
ja
inc
mov
or
pop
loop
pop
xchg
adc
ds
popa
jns
mov
lea
pop
and
sub
mov
xor
sbb
jp
stc
inc
ljmp
mov
ja
jge
cmp
inc
les
xchg
push
push
lds
inc
mov
leave
out
dec
fwait
sbb
mov
data16
lds
jno
es
mov
xchg
aas
add
cmc
inc
in
into
cmp
mov
inc
clc
cmp
mov
jno
fadds
or
outsl
sub
fisttpl
push
sub
mov
lds
mov
je
xor
sub
repz
popa
clc
mov
pop
inc
mov
add
mov
inc
bound
mov
cmp
lcall
fidivl
cmp
sbb
gs
push
loop
xorl
jo
dec
out
pop
dec
push
push
and
outsb
cmp
adc
xchg
test
sahf
cmp
dec
ret
sub
arpl
pop
add
mov
pusha
fistpll
test
mov
bound
lcall
xchg
lds
stos
test
loope
pop
imul
jmp
ret
mov
movsb
testb
out
rsm
divl
xor
test
xchg
inc
imul
leave
add
jge
pextrw
cld
inc
lods
stc
dec
incl
arpl
flds
sti
aam
lds
inc
mov
jecxz
loop
lods
sarl
lods
bound
repz
es
orl
outsl
pop
push
mov
xchg
add
cmp
aaa
cmp
rorl
mov
ror
sub
or
je
ljmp
cmpps
fnsave
xchg
lahf
adc
inc
jge,pn
lahf
mov
fiaddl
sub
mov
in
clts
push
sub
fmull
mov
bound
je
pop
test
sbb
and
mov
jmp
or
xchg
pop
and
sahf
fwait
lock
and
js
xor
clc
test
test
les
les
imul
mov
ret
or
or
loopne
and
lds
sahf
cli
clc
leave
pop
stos
dec
mov
incl
aad
jecxz
xchg
lcall
clc
mov
sahf
pop
hlt
movsb
inc
mov
aam
add
fs
xchg
mov
fwait
ja
mov
jecxz
test
mov
push
outsl
leave
js
adc
loop
ret
jae
stos
test
jae
cld
and
xchg
mov
pop
icebp
fwait
ret
ja
mov
cmp
bndstx
sahf
stos
out
ds
test
shrl
out
pop
adc
sbb
mov
xor
dec
leave
inc
jb
stc
fidivrs
xchg
inc
jp
cmp
popf
xor
outsl
mov
dec
xchg
cwtl
out
lods
or
cmpsb
xchg
dec
sub
outsl
js
les
mov
cmp
push
fistl
add
clc
dec
mov
movsl
and
sbbb
lock
jo
adc
adc
ja
jg
xchg
adcb
orb
stc
movntq
and
cli
in
imul
cltd
lds
push
jbe
setp
fstpt
dec
mov
test
jo
mov
and
cld
insl
imul
mov
pop
jb
pop
xchg
fcmovu
inc
inc
jg
aam
sti
add
pusha
insl
shl
lds
lods
orb
jne
bound
fcmovnbe
sbb
jnp
sti
outsl
fbstp
or
ss
fs
jp
pop
push
sbb
jge
mov
mov
cs
xchg
mov
jmp
inc
xchg
mov
ja
loop
repz
and
es
xor
mov
daa
mov
xchg
xchg
outsl
fsubrs
loopne
pusha
cmp
cmp
lea
addps
pop
xchg
pusha
push
pop
cmp
xchg
xchg
dec
outsl
and
aad
dec
push
bound
fiaddl
pop
aas
bound
inc
mov
sub
jne
jnp
sarb
fdivrs
loopne
and
mov
mov
xor
xchg
out
mov
xorl
hlt
mov
cmpsb
xor
fidivl
jg
pushw
mov
mov
cmp
dec
cld
test
in
scas
cmpsb
std
jle
out
add
test
dec
jbe
orb
rcrl
push
xchg
xor
xchg
jle
lock
xchg
orl
imull
lret
inc
mov
fldcw
add
test
insl
outsb
je
decl
adc
movsb
testl
mov
push
xlat
data16
mov
add
fidivrl
mov
pop
jmp
fdivl
out
lock
dec
imul
fbld
je
jo
or
pop
data16
add
and
xor
mov
xchg
xchg
mov
add
dec
shl
mov
ficomps
cli
and
xorl
popa
inc
outsl
push
and
fs
ljmp
mov
add
and
test
shrb
mov
xlat
mov
mov
jnp
or
adc
push
inc
bound
mov
xorb
rolb
aas
clc
out
mov
ret
lret
int3
imul
jmp
inc
imull
icebp
jno
xchg
repz
jns
jp
dec
stos
enter
popf
in
ljmp
and
sti
and
push
jl
imul
jbe
imul
clc
xlat
jp
into
sti
push
pop
xor
mov
xchg
movsl
xor
lahf
jns
mov
mov
leave
push
jb
inc
mov
ficomps
gs
jle
adc
scas
xorb
jbe
jns
sahf
xchg
jno
hlt
into
out
fldlg2
loopne
movsl
jp
jmp
mov
cmpsb
fiaddl
insl
xor
fcomps
movsl
out
jmp
xchg
test
repz
idivb
mov
pop
pop
mov
pop
mov
into
add
push
aad
jns
sahf
cmp
hlt
push
mov
push
mov
jns
push
loope
jge
xchg
jnp
hlt
lock
mov
xchg
std
popf
pop
fmuls
jae
cltd
arpl
js
push
jnp
mov
add
add
std
mov
mov
push
mov
icebp
aam
test
aaa
out
cmpsl
cs
add
es
fiaddl
je
fs
mov
or
xor
ja
lea
adc
xchg
add
fcomps
fisubl
fadds
xchg
inc
xor
jp
lods
roll
jp
xchg
pop
sub
imul
loopne
dec
mov
pop
xchg
push
pop
xor
icebp
shrl
and
in
mov
jns
fs
lahf
xor
dec
xlat
inc
clc
pop
jge
sbb
add
pop
jp
adcl
mov
sub
test
in
push
out
lea
je
mov
sub
out
negl
xchg
pop
aas
out
pop
sub
mov
jo
into
cwtl
or
inc
push
xchg
xchg
pushf
aas
ja
pop
jnp
push
push
imul
lahf
sbb
scas
dec
rcll
pop
xchg
jnp
dec
fs
dec
and
je
jp
add
ficompl
cli
mov
clc
orl
mov
or
jns
push
cmp
shrl
in
jecxz
fbld
stc
leave
pop
push
jne
fsts
push
lds
jno
xorb
icebp
idivl
sub
scas
xor
xor
stos
xor
sub
xchg
jmp
sub
inc
or
dec
xchg
int
mov
mov
push
mov
js
arpl
mov
push
scas
sub
iret
jge
pop
loope
jb
mov
jbe
push
and
incl
adc
cmpl
and
mov
std
icebp
or
add
cmpsb
adc
gs
insl
or
and
pop
add
xorb
adc
ret
fistpll
cmp
cmpb
add
icebp
ljmp
cltd
std
jmp
add
iret
or
shll
sbb
inc
inc
call
sbb
js
sbb
ret
cmp
pop
aam
rclb
fistps
xchg
or
mov
ljmp
dec
mov
lret
xchg
inc
out
shlb
call
xchg
icebp
inc
insl
leave
dec
inc
mov
shl
insb
daa
lods
call
jg
push
popa
inc
mov
or
xorl
sub
cmp
fsub
mov
jns
aas
cs
loopne
adc
les
adc
push
mov
mov
gs
mov
inc
stos
cmc
mov
shl
lods
negl
andb
xchg
jbe
inc
insb
cmp
cmp
inc
xchg
cs
lcall
jns
aas
in
aam
push
daa
pop
fsubrs
mov
mov
mov
jl
push
cmp
ss
cmpsl
aas
icebp
cli
lds
pop
jns
into
mov
rorb
pop
fists
jle
add
sbb
jae
mov
call
in
lret
jle
jge
pop
addr16
bound
adc
ds
pop
fcmovbe
ljmp
fnstsw
addb
idivl
lea
cmp
movsl
pop
xor
push
inc
jae
loopne
push
mov
mov
pop
or
shrl
enter
push
jae
xor
add
lahf
sbb
scas
ljmp
mov
adc
jns
icebp
inc
adc
pop
rcrw
or
imul
jp
pop
in
fdivl
in
jno
jb,pt
int
bound
push
dec
push
outsl
cmp
or
ljmp
xor
cmpsb
ja
cld
aam
mov
lock
ja,pn
mov
mov
dec
push
fwait
lcall
mov
sbb
mov
add
bound
push
xorb
mov
push
mov
xor
das
mov
jae
lcall
loopne
daa
pop
dec
sub
cmp
stc
xchg
pop
in
outsb
sahf
mov
cmp
mov
loop
sub
js
subl
sbb
fcmove
pop
inc
inc
ljmp
mov
push
xchg
add
mov
enter
mov
pop
xchg
pop
add
push
xor
cmpsl
repnz
add
loopne
mov
mov
jne
inc
pop
daa
std
adc
xchg
cmc
pop
fcomp
push
in
pop
pop
ds
popf
pop
adcl
loopne
dec
mov
out
dec
or
insb
or
cmp
sub
pop
add
fdivrp
jge
test
push
jle
insb
jno
mov
jp
push
insl
aam
pop
orb
mov
pop
and
leave
push
fcoms
add
test
ljmp
insb
xor
imul
in
cld
push
add
shrl
mov
and
pop
fs
imul
lret
iret
adc
xor
ja
dec
pop
mov
sbb
sbb
imul
xchg
jg
into
add
mov
mov
mov
popa
cwtl
ret
in
or
leave
loope
fwait
int3
shll
jo
mov
aam
aam
les
je
arpl
add
push
or
popa
out
pusha
xchg
lahf
sbb
xchg
mov
and
push
cmp
lods
xor
adc
mov
or
mov
addr16
lret
xchg
push
jns
push
add
imul
push
out
mov
inc
xor
cmp
cmpsb
lahf
ljmp
les
cmp
cmpsb
xor
pushf
xor
inc
pop
movsl
jbe
push
in
xchg
push
insl
fdivrl
mov
mov
paddw
jle
cld
dec
out
and
lret
push
and
push
inc
in
mov
aas
ljmp
pop
pop
int3
xchg
insb
mov
inc
mov
jo
jo
mov
xor
sbb
mov
filds
addr16
pop
in
inc
cmp
cmpsb
mov
fadds
mov
iret
xlat
pop
fistpl
jmp
mov
aad
test
xchg
icebp
lcall
mov
or
push
cmp
int
shll
cmpsb
pop
add
dec
sbb
cli
jp
adc
imul
push
stos
dec
lret
dec
lcall
out
xchg
cmp
add
add
sub
adc
test
mov
mov
or
add
ret
inc
adc
dec
pop
leave
repnz
mov
insb
stos
and
xchg
sahf
and
in
out
leave
push
jno
mov
sbb
xchg
mov
imul
mov
outsl
or
incl
lds
aam
jp
push
mov
add
dec
js
movl
mov
pop
adc
cmp
in
cwtl
sbb
fistpl
jge
jae
das
add
out
adc
in
jmp
xor
scas
fadds
fadds
pop
add
or
inc
scas
and
fdivl
and
aas
xor
je
inc
imull
cmpsw
add
leave
cmc
loope
push
cmpsb
lods
mov
decl
cmp
lcall
xchg
mov
int3
repz
lahf
pop
outsb
pop
mov
inc
jo
push
mov
fiadds
lahf
icebp
icebp
insl
outsl
cwtl
and
rclb
mov
dec
add
fildl
cmp
add
jecxz
adc
test
lods
xor
aam
imul
xchg
cmp
adc
xor
into
xor
std
xchg
lds
shlb
sbb
push
dec
xchg
in
jg
or
scas
lret
mov
je
fsubs
pushf
jns
xchg
in
add
repz
in
jbe
cmpsl
js
faddl
scas
add
xor
or
xchg
pusha
test
imul
fistpll
inc
or
mov
mov
pop
mov
jg
mov
repz
data16
ja
inc
pop
shll
imul
mov
fstps
cltd
lcall
jbe
aaa
in
jnp
mov
dec
outsl
xor
imul
sub
and
ja
loopne
sub
mov
push
test
xor
pop
dec
std
pushl
jge
lods
lcall
cltd
and
and
mov
iret
mov
cmp
aam
fistps
les
mov
jl
ret
sbb
adcl
je
nop
loope
xchg
cmp
test
xlat
push
xor
in
pushf
pushf
inc
dec
test
out
adc
cmc
mov
xchg
bnd
in
mov
mov
xchg
or
push
stc
add
loope
sbb
sbb
xlat
dec
jnp
cmc
test
lahf
cmpsb
mov
test
mov
lock
into
jo
mov
jne
mov
xchg
cmpb
test
fwait
test
test
iret
sub
sub
imul
stc
inc
push
push
xchg
dec
out
sub
fimuls
mov
mov
xor
arpl
scas
fdivrs
sbb
dec
mov
into
jp
fwait
xor
mov
mov
mov
leave
fldenv
icebp
xlat
clc
das
mov
mov
shl
outsl
lds
jne
xor
cmp
ljmp
test
aad
add
mov
orb
adc
std
sbb
add
mov
or
mov
repz
repnz
pop
aad
iret
sbb
jecxz
adc
frstor
jmp
icebp
dec
ljmp
lods
out
andb
imul
lds
shll
mov
mov
scas
fildll
imul
shr
loopne
mov
aas
mov
sub
dec
xchg
jns
outsl
fs
sti
mov
jne
leave
clc
in
sbb
fcomp
sub
in
and
inc
and
pop
dec
jmp
fmull
pop
out
test
repnz
lahf
aas
loope
cli
imull
push
mov
subl
mov
roll
lock
mov
int
dec
xchg
and
rcr
insl
ret
xchg
filds
push
cmp
rorl
into
addl
push
imul
cmp
adc
jp
push
leave
xor
xor
fidivrs
mov
pop
jne
loop
in
cs
xchg
test
mov
movsl
outsb
int
jns
push
mov
sub
rcll
stos
shll
mov
daa
fbld
pop
outsb
pop
pmaddwd
dec
fdivrl
insl
push
scas
loopne
push
call
mov
fs
mov
sbb
jno
bound
lods
xchg
sub
in
into
sbb
jge
outsl
clc
shll
ffree
in
pop
xchg
mov
push
mov
movl
sub
in
and
and
or
repnz
hlt
lahf
and
mov
cmp
inc
cvttps2pi
movsl
scas
jmp
push
xchg
iret
pop
lea
push
push
jle
into
aaa
aam
lods
ljmp
outsl
dec
jmp
xor
mov
sti
jge
aam
je
out
in
insb
jg
outsl
push
xor
iret
mov
push
mov
stc
pop
popa
inc
jns
jo
jnp
inc
je
xor
cli
jle
push
outsb
out
push
xlat
inc
mov
subl
xor
shl
pushl
fcoms
lods
in
nop
mov
out
add
rcl
mov
sbb
sub
les
jbe
loope
push
mov
shr
mov
lock
sbb
push
outsl
aas
jnp
pop
mov
icebp
mov
fdiv
and
dec
jae
movd
pop
mov
lds
data16
out
dec
xchg
bound
xchg
jecxz,pt
shl
or
gs
jg
test
loope
ret
push
xchg
jp
cltd
mull
je
dec
jl
mov
sub
imul
lahf
cmpb
push
inc
rorb
imul
mov
adc
mov
and
sbbl
inc
frstor
mov
pop
test
pop
lret
jge
jg
jnp
test
xchg
push
cltd
fidivrl
mov
jp
ficoml
andl
mov
fadds
call
push
sub
and
addb
pop
movsl
cmp
fisttpl
sbb
push
rcl
jne
mov
add
inc
push
mov
cmp
xor
notb
dec
arpl
cs
aas
les
jb
testl
imul
mov
ja
cmc
jno
jg
fiaddl
sti
pop
push
fnstsw
mov
jp
shll
and
add
ljmp
push
jns
jp
insb
jnp
inc
xchg
gs
mov
into
adc
sahf
pusha
add
cmp
pop
jnp
or
ret
push
xor
insl
es
outsl
fst
into
pop
add
or
cmp
icebp
xorl
xor
jnp
ror
pop
arpl
inc
xchg
mov
fidivrs
rcr
jae
jge
outsl
pop
add
jl
or
push
out
pop
mov
add
cmp
cmp
xchg
loopne
repnz
jo
cwtl
ss
push
pop
jnp
jb
scas
pop
push
lods
xor
loope
sbb
rorl
mov
test
popa
cli
mov
cmp
pop
add
bound
sub
and
in
xlat
jmp
add
add
test
add
mov
int
leave
sti
xor
sub
push
jnp
notb
aam
add
and
mov
js
jns
test
add
adc
push
and
mov
aas
push
fistpll
lods
sub
lcall
pop
jl
jecxz
dec
std
pop
add
out
add
and
lods
out
add
jns
or
outsl
arpl
pop
leave
jle
in
pop
fsubl
jns
fbld
cmp
cmpsb
pop
dec
xor
xchg
andl
cmpsw
jge
push
pop
pop
xchg
add
inc
xchg
add
fwait
lock
pop
xchg
aam
jne
jl
cld
cmpb
sti
aas
xchg
lock
mov
clc
out
cmpsl
or
sti
das
adc
test
loope
sub
fisubs
add
mov
xorb
ficoms
xchg
notl
pop
out
xorb
les
fbld
cmp
sub
cmp
lret
dec
jnp
jno
or
stos
jmp
jno
push
add
loope
push
cmp
test
aas
jns
out
data16
xchg
push
mov
mov
cmp
dec
jo
mov
and
movsb
cli
loopne
sub
pop
addr16
dec
out
pop
lods
jg
loopne
arpl
imul
inc
lret
fistpl
dec
mov
push
lahf
cmp
pop
aas
gs
jnp
mov
lea
and
mov
inc
arpl
stc
inc
or
pop
jbe
out
popa
and
arpl
dec
mov
popa
sahf
mov
adc
push
iret
shrl
test
aas
jns
out
jne
sbb
cld
dec
mov
pop
add
cwtl
ja
fs
dec
dec
and
xor
jne
popa
cmpsb
xchg
test
aam
lods
pop
mov
cli
jge
clc
ret
es
xor
ljmp
ret
fwait
enter
cmp
mov
fimuls
jne
add
lods
pop
mov
xchg
xlat
sub
push
push
loop
or
pop
pop
lods
rcrl
ds
add
sar
stc
aam
sub
pop
out
inc
inc
mov
leave
push
adc
and
test
cmp
or
dec
lahf
std
cmovs
push
xchg
xlat
mov
mov
insl
add
inc
push
enter
out
cs
pushf
and
ss
lea
xor
cmpsb
out
lahf
dec
lcall
cmp
pop
test
fsqrt
sbb
adc
jp
test
xchg
mov
fs
xchg
pop
inc
std
add
mov
ss
push
add
jle
lock
mov
dec
lahf
bound
testb
pushf
leave
xchg
pop
pop
movsb
aam
xchg
mov
mov
sti
xor
es
mov
fstl
outsb
dec
subl
pop
jg
adc
jle
jae
outsl
and
xor
mov
movb
and
ss
fildl
mov
mov
or
cmp
cmp
xor
inc
fwait
lahf
dec
add
pop
leave
push
push
ss
push
jbe
pusha
es
fcmovu
mov
xchg
outsb
inc
pop
sub
lahf
test
jp
iret
sbb
jle
into
outsb
scas
push
movsl
loope
jnp
xchg
mov
out
loope
jns
lods
mov
orl
xchg
popa
mov
sbb
out
insb
sbb
xchg
pop
jge
shr
aaa
lret
xor
insl
dec
add
lock
pop
dec
je
shrb
sahf
inc
sub
xor
cmc
lods
jae
mov
push
cld
inc
sbb
inc
popa
push
xor
dec
pop
outsb
sub
cs
lea
icebp
test
scas
inc
inc
pushf
shl
movsl
xor
movsb
std
leave
fldl
aam
mov
xor
jecxz
inc
addb
insb
std
ja
and
aas
loop
add
rcrl
push
dec
icebp
rcrl
xchg
outsl
ljmp
std
clc
and
pop
dec
push
lock
into
fsts
inc
cmp
push
mov
loope
xchg
push
sub
loopne
test
pop
fisubl
mov
sub
cmp
rcll
add
imul
jg
push
jnp
icebp
push
imul
jo
adc
push
jns
sub
push
scas
sub
cli
shrl
jns
mov
cmpsb
imul
mov
mov
addb
dec
fst
fisttpll
or
fldl
xor
cli
out
add
decb
pop
jne
xor
mov
inc
pop
xchg
or
subb
jle
faddl
sbb
lcall
in
stc
push
fisttps
push
sub
dec
rol
cmpsb
add
sub
int3
outsb
xor
xlat
xchg
xlat
jb
in
push
sbb
popa
mov
arpl
xor
or
jnp
mov
cmovg
clc
push
mov
jecxz
fisttpl
jmp
pop
movsl
push
inc
sub
ficoms
dec
mov
inc
idivb
loope
jnp
jnp
outsl
dec
cli
push
inc
mov
stos
es
jnp
ror
add
flds
adc
jp
sbb
loop
jl
jecxz
or
add
into
outsb
xor
cmp
inc
push
inc
mov
jno
jo
dec
xor
xor
cmp
jl
js
cmp
add
pusha
je
xchg
in
and
fcomps
mov
jge
inc
sti
cmpsl
mov
faddl
and
pushf
jno
sahf
sub
adc
jns
sti
sbb
fsts
adc
cmp
clc
jecxz
test
ffree
in
ds
outsl
movsl
mov
outsl
aaa
shlb
cld
cli
sbb
jnp
std
ds
inc
push
aad
lahf
iret
mov
test
inc
dec
cmpb
and
loop
jge
cmp
push
int
cmp
or
dec
add
leave
push
push
xchg
xor
sahf
outsb
xchg
rcrl
out
xchg
xor
pop
fimuls
dec
fisttps
xchg
fisubrs
popf
adc
adc
jo
xor
dec
mov
mov
pop
pop
add
pop
jne
push
arpl
cmp
mov
xchg
add
addb
lret
and
push
das
iret
ljmp
test
sub
or
jg
je
dec
mov
fs
xlat
xlat
data16
inc
pop
cmpsb
nop
bound
jg
mov
in
lret
rorl
fisttpll
fildl
xor
dec
xchg
iret
xchg
ret
mov
and
push
popa
cld
and
call
dec
bnd
jae
mov
bound
emms
popf
add
sbb
js
jl
mov
add
scas
mov
mov
and
and
pop
add
xchg
fbstp
inc
sbbb
sarb
sub
mov
in
jmp
scas
pop
pop
mov
and
jp
push
popa
jg
jg
mov
enter
lcall
inc
jle
push
mov
adc
jne
testl
fisubrl
das
sub
sbb
imul
loopne
jl
jl
add
inc
jg
add
mov
xor
sub
xor
push
out
xchg
pop
or
lock
out
xchg
jnp
int
fldcw
popf
cmp
ror
jnp
xor
fstpl
cmp
ret
out
push
ret
stos
ficomps
insb
scas
sahf
cmp
aam
in
iret
les
pop
dec
jne
inc
jnp
clc
jnp
mov
dec
in
xchg
mov
xor
mov
mov
imul
mov
xchg
adc
mov
cmpb
bound
ja
or
sbb
loopne
ja
jge
push
mov
xor
jns
jmp
shrl
orb
mov
cmp
les
dec
es
jne
shr
repz
jae
repz
pxor
mov
fistps
test
xchg
mull
dec
sub
adc
sub
push
sahf
jp
lods
push
mov
aad
out
repz
inc
repnz
loope
jo
lret
mov
mov
jge
lock
inc
insb
test
adc
in
and
cltd
jle
sub
jmp
testl
pop
add
ljmp
sti
jne
cmp
shrl
cs
xchg
pushf
pop
ret
loop
fmul
sti
push
insl
cltd
cmpsl
add
dec
fisubrs
dec
jno
and
adc
rcll
js
mov
sbb
scas
es
xchg
push
test
lcall
adc
mov
fisttpl
ss
fnstcw
fbstp
pop
lock
jae
aas
imul
and
imul
xorl
movl
sbb
jle
pop
or
pop
xchg
push
fbstp
jno
mov
add
scas
mov
dec
out
rcrb
mov
rclb
aam
jne
fcomps
xchg
nop
imul
fsubs
and
mov
movsl
fst
jge
push
push
fsubs
movsl
outsl
sub
push
xchg
imul
cmp
cltd
incb
mov
sbb
add
popa
subl
ficoml
test
pop
xchg
jge
negl
imul
aam
aad
shll
popf
call
vpmacsdqh
cltd
jnp
pop
mov
dec
out
test
mov
xchg
inc
xor
or
jle
jecxz
popw
ficoml
xchg
push
sbb
xchg
enter
shlb
popa
cmp
mov
push
repz
sbb
mov
leave
add
pop
mov
gs
in
out
bound
cmpsl
push
daa
and
xchg
ja
xor
mov
push
lahf
aad
sub
pusha
movsb
mov
mov
add
mov
aaa
or
pop
pop
add
jg
clc
or
jmp
xchg
fbstp
xor
jle
mov
mov
into
pop
xor
pop
jg
inc
mov
mov
data16
pop
stos
cmp
xlat
jne
arpl
mov
add
mov
incb
jae
cmp
cmp
mov
iret
scas
cltd
jnp
arpl
cmpsl
dec
shl
mov
loopne
and
or
insb
sub
cld
rol
cli
jo
or
movsl
push
cli
ds
shrl
mov
mov
xor
rcr
sub
and
jecxz
ret
jbe
cmp
xor
imul
mov
addr16
outsb
loopne
mov
xchg
pop
repnz
xor
and
xchg
out
jae
push
stc
out
loopne
xor
push
mov
lock
in
push
jo
lret
push
xor
xor
push
repnz
dec
in
push
loope
fs
int
arpl
push
mov
jl
aad
push
mov
add
int
lcall
jge
lds
and
mov
push
jne
sets
cmp
daa
cmpsl
jp
xor
lock
imul
pop
mov
outsb
pop
cmpsb
push
popf
jae
outsl
pop
cmp
sbb
popa
aad
aas
ret
lret
or
push
into
cmp
or
xor
mov
push
lods
pop
xlat
xor
aas
pop
jnp
pop
je
or
jg
daa
push
hlt
xlat
cld
jle
mov
sub
cli
jle
xchg
test
jbe
cmp
xchg
orb
mov
push
pop
daa
xlat
repz
into
or
push
jnp
jmp
jns
inc
push
dec
adc
aas
int
out
test
aam
and
iret
mov
aam
cmpb
xchg
ja
push
ficoms
bound
jns
lahf
inc
and
mov
insb
pop
lock
hlt
enter
clc
pushf
add
std
pop
lret
dec
dec
sub
inc
and
lds
out
jo
jl
pop
pop
ret
stos
loop
aas
insb
xchg
int3
xchg
fsubs
xchg
cmpsb
dec
inc
pop
inc
lcall
in
pop
pop
and
mov
inc
addr16
ljmp
popf
in
out
jae
jle
push
inc
sbb
mov
je
jbe
dec
sub
xor
cmp
adc
arpl
dec
je
inc
les
fwait
test
aad
jne
ret
std
mov
iret
dec
ror
into
jle
movsl
cmc
jno
mov
pop
mov
sbb
fbld
and
push
mov
into
subb
in
pop
clc
out
dec
cmc
lds
mov
mov
cmp
ja
aas
xor
sbb
inc
shlb
jno
adc
lcall
jmp
ret
into
add
fnsave
mov
xchg
loopne
mov
fwait
pop
xchg
mov
dec
orb
xor
lea
and
rol
sub
push
loope
shrb
aam
rep
mov
dec
lret
in
xor
out
jge
loope
jmp
sub
mov
mov
add
mov
sti
inc
or
sti
std
xor
and
jp
jmp
subl
dec
jg
cmp
mov
jbe
pop
add
cli
cmpsl
js
mov
clc
or
or
xchg
out
lock
arpl
xchg
sub
jno
jae
xchg
push
or
lea
pop
mov
fidivs
cli
incl
les
and
rorl
pop
daa
dec
fdivrp
cltd
xchg
sbb
int
pop
dec
test
or
idivl
stc
das
sbb
dec
pop
xlat
dec
push
lods
push
mov
lret
pop
jb
jne
and
cmp
push
sub
mov
jns
add
mov
popa
popa
mov
cwtl
cld
cld
add
imul
pop
fsubrs
mov
push
add
loopne
pop
insl
out
xchg
push
jae
mov
imul
mov
pop
push
xchg
lcall
push
loopne
sub
jo
inc
mov
enter
jge
cmp
faddl
mov
xchg
jbe
inc
pushf
sti
mov
scas
add
repz
jnp
outsl
sbb
or
call
add
inc
insl
ret
in
sbb
and
std
mul
in
je
data16
jl
outsl
mov
jb
sahf
int3
addr16
jns
call
xchg
movsb
sbb
jne
xlat
and
jg
cmp
and
std
xchg
lret
jbe
xor
pop
ja
add
jnp
push
push
xchg
fistps
pop
adc
pop
or
mov
xor
and
lret
jge
mov
mov
inc
imul
call
mov
xorb
bound
xor
fisubs
push
mov
inc
cli
cmp
ret
insb
sub
push
cltd
rclb
xlat
fmul
enter
clc
jmp
sbb
aas
inc
loopne
ja
jnp
mov
clc
adc
das
jo
xchg
xchg
xor
mov
push
dec
add
enter
cmc
mov
cmp
and
xor
fistpll
mov
dec
dec
jo
pushf
lret
popa
ja
dec
mov
stc
push
arpl
pop
in
add
xchg
or
clc
push
std
lahf
add
jmp
push
cmp
add
mov
add
mov
pop
testb
es
inc
or
and
mov
pop
sub
out
shll
js
and
std
cmp
dec
and
push
icebp
popf
mov
jecxz
popl
and
cmp
gs
ret
or
outsl
ret
je
mov
and
pop
ror
stc
mov
mov
jg
or
sub
dec
inc
sbb
in
xchg
sbbb
test
and
and
fidivrs
mov
rorb
test
loope
int
ja
jg
jbe
std
pop
insl
mov
les
test
mov
sarb
jns
add
inc
xchg
jae
mov
aas
push
cmpsl
mov
popa
mov
jl
in
mov
fstpl
inc
add
jge
inc
sub
loope
jb
bound
sahf
aad
push
adc
sub
movsl
xor
scas
push
or
mov
xor
lret
jnp
mov
jmp
outsl
push
orl
push
jnp
mov
jns
insl
mov
sub
mov
cmp
out
aam
fmuls
mov
xor
push
dec
ss
in
loopne
dec
popf
lcall
lock
or
pop
xchg
pop
xor
jb
icebp
int
sti
sti
enter
lods
rcrl
in
pop
outsb
pop
mov
mov
jbe
in
pop
int3
adc
fdivl
test
js
hlt
push
jne
xor
and
fld
cmp
mov
popa
jmp
ret
int3
sbb
dec
aaa
lea
test
shll
dec
xor
pop
imul
in
jp
jl
pop
mov
inc
xchg
jnp
fistpll
fidivl
push
ljmp
pop
add
aam
aas
inc
loop
nop
in
iret
mov
adc
movsl
jbe
pop
push
addl
leave
leave
add
les
jb
iret
popf
jbe
pop
cmp
leave
cld
lods
bswap
add
dec
fwait
repnz
cld
js
stos
inc
or
mov
jp
hlt
mov
test
adc
aaa
subl
mov
cmp
lret
dec
sbb
ds
jge
cmpl
faddl
inc
ljmp
fsubrs
mov
jnp
loope
pop
pop
fmuls
mov
cmpsb
mull
xchg
popf
aas
jle
jnp
adc
lahf
xor
repnz
mov
seta
inc
jg
push
loopne
lahf
jbe
sub
pushl
jl
cs
fldenv
ret
jnp
popa
leave
and
movsb
pop
daa
mov
push
std
sti
push
xchg
mov
cmp
adc
fadds
jne
lock
adc
aas
dec
fadds
dec
aaa
imul
leave
and
mov
adc
xor
loop
mov
xchg
pop
ret
dec
jns
mov
mov
scas
push
add
leave
mov
aas
jp
xor
xor
popa
mov
addl
dec
xchg
mov
bound
loope
mov
mov
jle
jnp
arpl
rorb
push
adc
mov
rorl
jle
sbb
cmp
add
loopne
xchg
pop
lret
cli
ss
in
mov
pop
in
aam
dec
dec
sarb
lcall
mov
pop
js
xchg
popl
sub
mov
loopne
adc
dec
std
xchg
mov
inc
daa
lret
jmp
stc
pop
pop
xor
dec
mov
cld
inc
out
leave
jle
pop
arpl
aam
mov
rcll
jnp
dec
in
ja
js
mov
jmp
xor
cmp
dec
mov
repz
mov
popf
movsb
js
scas
or
imul
cmp
shr
mov
lea
mov
scas
lcall
sbb
mov
out
add
std
loop
aas
fs
pop
mov
mov
and
rorl
clc
pop
pop
scas
in
mov
jbe
add
in
adc
fldt
aad
mov
jns
jae
mov
aam
xor
jle
out
xor
lds
sbb
js
sbb
loopne
aas
cmpb
std
mov
cwtl
mov
orps
imull
fsincos
cmpsl
add
mov
mov
jnp
adc
fsubrl
or
pop
inc
rorb
jbe
xorl
pop
mov
lcall
sarl
iret
ljmp
lods
cmp
jmp
xchg
bound
jbe
fsubs
xlat
sub
mov
inc
mov
inc
movsl
insl
mov
xor
std
out
jne
pop
pop
test
lock
push
mov
xchg
cwtl
fidivrs
cli
sar
sbb
dec
sub
inc
inc
mov
insl
sbb
imul
mov
mov
stos
add
inc
push
mov
push
mov
inc
mov
sub
unpckhps
add
mov
sub
lock
movsl
cmp
push
xorl
lods
popf
arpl
add
xchg
and
xor
dec
lods
cmp
cmpsb
in
out
inc
xor
jne
mov
mov
adcb
pushf
fisubrl
inc
ja
and
adc
ror
inc
jbe
pop
nop
or
mov
pop
enter
das
adc
movsb
clc
sub
repz
lahf
cltd
mov
lock
lock
push
popf
hlt
out
xchg
jge
call
pop
push
fcompl
push
icebp
icebp
scas
test
sbb
pop
inc
insl
xchg
fucomip
inc
aad
stos
mov
cli
ja
scas
pop
or
ja
xor
jnp
xchg
cmc
jge
push
cmp
push
pop
or
and
mov
loopne
aam
mov
push
jmp
pop
int3
push
xor
sub
dec
icebp
js
mov
jno
pop
jo
bound
cmp
gs
sbb
jp
int
lods
roll
fwait
int3
mov
and
arpl
inc
sarl
je
aad
jg
inc
out
jae
mov
lods
jae
jno
orps
inc
repz
sub
jg
div
jp
push
out
lds
mov
fimull
jbe
scas
sbb
loop
xchg
jo
int3
ficompl
in
mov
lret
repnz
inc
add
fdivrl
in
incb
pop
iret
in
mov
add
out
icebp
out
std
mov
leave
push
push
fisttps
or
xchg
divl
add
add
cltd
or
data16
add
lds
jp
pop
pop
inc
fwait
in
fwait
sub
xchg
inc
outsb
xor
jno
sbb
int
xchg
push
enter
cli
xchg
out
jno,pt
mov
sub
ds
push
out
mov
pop
push
scas
xlat
cmp
sub
sub
push
cmpsl
cmp
jg
sub
adc
divl
mov
pop
cmp
push
mov
sbb
hlt
bound
cltd
insl
sbb
push
daa
sub
dec
pusha
out
sub
jp
push
mov
push
mov
jp
cmp
xchg
xlat
jge
jle
pop
mov
fcomps
iret
test
push
inc
mov
jecxz
xchg
sbb
pop
inc
adc
cltd
lret
fmull
push
xchg
into
inc
xor
rclb
xor
pop
dec
dec
mov
push
mov
mov
push
pusha
inc
icebp
jb
or
loop
inc
sub
jp
test
or
and
jnp
stos
test
push
rcr
lds
aas
pop
call
xchg
lret
and
jnp
xchg
sbb
mov
jns
jnp
shll
pop
mov
dec
pusha
pushf
jae
and
std
and
push
cmp
jb
xchg
jns
xlat
js
mov
inc
jbe
add
pop
and
xchg
push
mulb
out
loope
add
inc
das
xchg
adc
lahf
iret
repnz
xlat
flds
add
pop
mov
loop
fmull
imul
push
mov
into
pop
mov
fcomip
int
sti
decb
out
add
push
xlat
add
lds
loope
clc
test
mov
js
pusha
das
adc
add
mov
mov
rcll
push
aad
or
jmp
inc
leave
pop
enter
lods
fdivs
pop
mov
test
fcom
add
sbb
lret
sahf
jne
mov
pushf
out
les
imull
xchg
inc
fwait
lock
cmp
cs
mov
outsl
repnz
add
xchg
mov
jb
or
mov
push
mov
adc
aam
jge
pushaw
inc
sbb
push
push
popf
lea
mov
pop
or
or
mov
rorb
push
rcl
mov
movsl
shll
jle
push
lahf
dec
adc
xor
bnd
bound
mov
pop
jnp
or
xchg
movsl
xor
mov
out
xor
and
test
and
jg
enter
push
rcrb
jle
jns
iret
mov
mov
out
lret
dec
mov
add
xchg
dec
sti
cmpsl
rcl
pop
enter
jbe
mul
loop
xchg
jg
push
jge
jge
jmp
cmpsb
jl
ja
scas
in
js
xchg
sbb
ljmp
and
inc
loopne
pop
pop
mov
cmpsb
pop
sub
pop
jnp
mov
mov
les
mov
repnz
pop
cmp
pop
sub
cmp
mov
and
cs
imul
sbb
push
movsb
cmpsl
sbb
movsl
out
dec
aad
xor
ja
inc
xchg
leave
fs
mov
repnz
mov
out
or
scas
repz
mov
mov
ja
xchg
inc
dec
aas
pop
popl
jp
mov
lret
sub
xchg
lds
add
std
cmpb
ret
and
push
out
lock
inc
in
out
daa
push
jp
pop
mov
ds
jmp
jl
mov
xor
jnp
adc
out
cld
cld
into
cld
and
pop
cmp
test
out
xor
loope
xchg
les
jl
cli
sub
push
aad
cmpsb
inc
sahf
xchg
mov
cmc
loop
dec
add
fsubs
or
cli
lahf
es
adc
outsl
cmc
push
jno
in
stos
je
aas
push
das
or
jnp
out
mov
icebp
dec
repnz
adc
jg
xchg
and
add
dec
cli
xor
stos
or
inc
inc
sub
add
or
xchg
mov
fwait
adc
pop
adc
mov
and
inc
mov
or
imul
subb
and
lods
mov
clc
stos
add
cmpsl
in
jge
add
mov
loop
mov
jmp
pop
push
jg
xchg
dec
bound
andb
add
ret
leave
jo
mov
adc
fcmovnu
pop
jno
lea
mov
cwtl
push
cmp
jle
dec
mov
mov
call
xor
test
leave
js
xchg
cmpsb
filds
es
popa
lea
inc
ljmp
faddl
sub
sbb
fnstsw
pop
mov
bound
fisubrs
pop
xor
cmp
out
dec
das
or
mov
outsl
push
mov
jae
loopne
jae
shrl
gs
les
cmp
push
add
popa
dec
pop
xchg
add
jge
iret
loopne
cmpsl
lret
sahf
aas
fmuls
pop
aas
sub
fnstcw
cli
mov
mov
pusha
mov
sbb
sahf
or
fistpl
cmp
bound
mov
mov
xchg
repz
pop
pop
pop
es
movl
jmp
pop
jno
xchg
in
ja
int
mov
out
cmpsl
cwtd
mov
test
shll
bound
adcb
scas
mov
mov
loope
xchg
outsl
mov
lcall
stos
ds
pop
dec
adc
outsl
into
pop
push
push
ficoms
mov
pop
dec
icebp
mov
or
cld
inc
jp
movsl
fldcw
das
or
jle
subb
mov
sti
in
jno
add
je
add
cmp
cmp
pop
mov
nop
sub
cltd
adc
fistpl
adc
adc
testb
mov
or
jo
dec
push
fwait
add
cwtl
sti
loopne
jnp
js
cmp
adc
pushf
or
pop
mov
mov
outsb
pop
lea
sbb
cmp
pop
addb
push
dec
test
arpl
sbb
adc
mov
push
clc
ds
movsb
jecxz
in
scas
xor
inc
add
mov
sub
adc
jle
lret
movsl
inc
mov
test
or
xchg
movsb
and
xor
outsl
mov
or
in
inc
pop
fldt
or
shlb
xlat
xorb
scas
fildl
mov
pop
pop
and
ret
cmp
and
inc
pop
ljmp
stos
stc
inc
push
stos
std
dec
and
cld
mov
jl
jne
adc
dec
popa
lods
jle
mov
int3
sub
and
jne
jp
test
ret
aad
dec
idivb
pop
lea
mov
add
loopne
inc
lea
imul
add
xor
sub
dec
inc
mov
sub
add
pop
cmpsb
repz
cmpl
pop
inc
push
sbb
inc
iret
test
jle
mov
mov
test
inc
add
add
jle
pop
sarl
add
add
in
mov
mov
xlat
js
xchg
movlps
shrd
stos
jb
sbb
arpl
and
pop
and
cld
inc
jo
jge
gs
jae
lock
jl
scas
add
popl
fdivrs
aam
lar
out
jle
mov
cmpsl
push
popf
not
jg
cmpl
push
inc
jns
xor
xchg
jno
xchg
iret
lods
jne
jno
aad
orl
outsl
fistps
in
shl
pop
sbb
add
aaa
subb
loop
aam
mov
cmp
in
or
push
add
decb
popa
pop
mov
flds
jno
push
lds
dec
xchg
dec
mov
pop
jnp
aad
dec
aam
test
loopne
mov
push
add
in
xchg
jbe
mov
jne
inc
jge
jns
mov
lock
fmull
xchg
cmp
and
add
mov
mov
sarl
pushf
inc
js
jmp
cld
mov
cs
xchg
pushf
mov
and
xchg
pusha
push
add
and
jp
sub
test
sbb
sbbl
filds
fdivs
into
fwait
insl
out
pop
dec
push
inc
xchg
orl
lods
int
jge
and
popa
lret
xchg
pusha
lret
std
or
jl
in
adc
sahf
pop
add
xor
mov
iret
faddl
push
pop
pushf
sbb
shll
outsl
dec
jno
pop
push
adc
adc
je
or
int
dec
cmpsl
sub
leave
cld
xor
jnp
andb
inc
lock
nop
testl
icebp
mov
xlat
mov
inc
xor
insb
out
add
aad
subl
jge
aas
cmp
pop
add
sbb
add
push
sti
mov
inc
jp
and
cmp
loope
test
xchg
sub
aas
push
pop
and
stos
dec
adc
push
out
mov
jp
cmp
arpl
imul
cmp
loope
es
dec
adc
into
popa
dec
add
repz
mov
loope
pop
std
dec
jnp
mov
incb
gs
stos
mov
adc
fsubrp
and
jmp
lret
popa
cmp
das
adc
lods
jge
add
inc
mul
in
js
xor
push
into
add
mov
jb
xchg
popa
ss
xchg
test
outsl
pop
addb
mov
orb
leave
fdecstp
xor
fimull
aas
jno
mov
fadds
addr16
jno
cli
pop
loop
subl
subb
stc
mov
mov
popf
add
jo
inc
sub
std
ret
dec
insb
mov
push
sub
movsl
call
push
pop
imul
sti
addr16
ss
sti
popa
mov
jae
fcmovb
jmp
cmp
pop
mov
dec
ret
xor
stos
inc
mov
lods
jno
addr16
cmpsl
sti
scas
inc
into
scas
jg
fidivrl
jecxz
push
adc
jne
jecxz
ljmp
insb
jno
aad
gs
add
addb
pop
daa
arpl
shlb
cmpb
cs
jns
divb
xchg
add
xchg
roll
jb
sti
mov
cmp
ss
rep
jecxz
iret
test
xor
lahf
cli
add
sub
ljmp
lea
cmpsl
xchg
xchg
xchg
pop
ljmp
xchg
loope
mov
or
sbb
int3
shlb
or
pop
mov
cmp
mulb
lcall
dec
js
mov
mov
stc
cmp
jle
mov
dec
or
xchg
mov
jge
bound
jne
cli
sbbl
ds
cmp
add
out
lods
cmp
fstl
pop
insb
outsl
push
push
jge
cmp
lret
loope
xchg
iret
mov
jmp
ds
arpl
pop
cmp
push
adc
mov
mov
fldenv
iret
jnp
add
or
dec
sub
iret
popa
test
iret
dec
iret
xchg
push
stc
gs
or
fildll
popa
imul
push
add
xlat
xor
jecxz
scas
stc
sbbl
dec
jae
sub
int
in
mov
cmp
jns
clc
cmp
sbb
fidivrl
js
and
pop
jmp
cmc
mov
jl
js
in
jl
icebp
xchg
ficompl
mov
divb
jae
cmovl
sub
xor
iret
push
ret
scas
pop
xchg
jl
fstpt
popf
dec
pushl
push
incb
test
lea
jae
rcll
stos
arpl
movb
adcl
fidivs
ja
sub
ja
mov
repz
inc
jnp
jns
mov
mov
lds
push
jae
orb
repz
pusha
ds
adc
add
jl
orl
addb
stc
mov
ficomps
add
cmc
fldl2t
je
or
jge
fbld
push
incb
ret
inc
jecxz
sbb
inc
shr
or
movb
cmp
jbe
enter
outsl
push
loope
lds
fimull
out
outsb
leave
xlat
and
mov
adc
add
insl
pop
dec
dec
iret
mov
cwtl
into
mov
aad
mov
and
in
leave
jns
iret
movsl
sti
mov
scas
jg
xor
test
xor
pop
cmp
sbb
inc
jl
test
sti
add
jp
ret
ja
popa
clc
mov
jno
imul
test
pop
in
mov
fsubrs
or
mov
push
dec
test
cmpsb
ret
dec
mov
pusha
push
shll
or
ja
jne
in
dec
push
mov
out
xor
adc
fwait
jp
jnp
mov
pop
and
mov
bound
cmp
xor
pop
push
xchg
jmp
jg
aas
clc
int
rcr
mov
les
mov
sbb
js
outsb
das
xchg
add
rcrl
out
mov
out
mov
mov
dec
jle
mov
xchg
popa
xor
inc
aam
jae
clc
push
sbb
ljmp
loop
sub
push
test
insl
insb
jbe
cmpb
sbb
sbb
add
loopne
arpl
mov
iret
mov
add
jno
outsl
jecxz
and
mov
jb
in
and
cwtl
xchg
adc
inc
dec
cmp
jb
imul
jle
mov
cld
push
ror
add
loopne
scas
lods
data16
shl
pusha
xor
ja
jnp
out
dec
dec
xor
inc
lret
ja
xchg
hlt
sbb
xchg
and
nop
scas
ja
jmp
add
mov
testl
cmp
es
mov
adc
imul
aad
repz
add
addb
std
cltd
aas
icebp
mov
jb
inc
mov
stos
jg
mov
dec
pusha
fsubrs
pushf
loope
and
add
xor
sar
jno
cli
jnp
aas
fnsave
lahf
popf
in
test
aaa
in
push
fs
repz
dec
into
hlt
cmpsl
popa
push
xchg
adc
lea
pop
add
sti
pop
add
fsub
adc
jnp
pushl
std
cltd
mov
jne
mov
imul
ljmp
frstor
pop
clc
push
xor
xorl
pop
cmpsl
mov
mov
aas
fxch
out
lods
jno
imul
mov
cld
in
rolb
jno
xchg
out
sbb
mov
pop
jle
scas
jl
mov
xchg
sub
mov
mov
outsl
out
sbb
mov
push
mov
imul
out
mov
sub
lea
arpl
jns
add
jbe
add
mov
insl
push
pop
jnp
ljmp
mov
and
lret
jns
in
pop
imul
dec
bound
cmp
jb
scas
loope
jb
pop
loop
cmp
mov
mov
stc
jne
ret
inc
jp
lds
pop
ret
fisttpl
out
xor
popa
jmp
hlt
out
and
jo
outsb
aas
xor
dec
jmp
sub
fimull
mov
mov
cmp
fimull
push
jnp
loope
arpl
cmp
in
jae
enter
mov
outsl
adcb
stos
push
push
lods
cmpsl
mov
push
jnp
fiadds
cwtl
inc
sub
dec
dec
cmc
push
add
xchg
jbe
repz
arpl
jge
das
test
mov
mov
subl
nop
hlt
aaa
ss
mov
jns
xor
add
popa
mov
add
ffree
dec
out
pop
or
mov
adc
sbb
repz
jae
movsl
pop
mov
sub
push
icebp
or
pop
mov
push
cmpb
mov
aam
pop
out
in
mov
pop
dec
rcl
sti
test
aad
imul
int3
cmpsb
or
inc
pop
addr16
mov
push
xchg
pop
call
rorl
and
dec
loopne
ljmp
insb
adc
test
cmp
sbb
cmpsb
stos
out
jne
test
fdivrl
and
mov
mov
jp
and
dec
cmp
fimuls
fstpl
mov
mov
fcomps
aad
outsb
imul
adc
fimuls
and
push
push
in
sti
shll
repnz
cli
cmp
ret
sti
cmc
test
in
movsb
mov
and
imul
in
jge
jbe
jg
lods
mov
or
jecxz
enter
sub
lcall
and
xchg
loopne
mov
pop
pop
cli
sbb
jle
dec
std
bound
cmp
lret
sahf
shl
icebp
push
testb
jae
jge
mov
jae
jecxz
pop
ds
cmp
cs
mov
xor
data16
mov
and
fisubl
xchg
stos
pop
gs
mov
ret
cmp
js
add
and
push
cmp
pop
scas
xchg
mov
scas
xor
adc
xor
sub
adc
fwait
stos
xchg
xor
jg
in
jle
out
xchg
in
jae
jge
jnp
cmp
leave
icebp
inc
jns
aad
inc
sbb
jne
push
cmp
mov
xor
into
jmp
cwtl
or
lea
jo
mov
orb
dec
mov
lds
xchg
int3
jnp
mov
hlt
fs
add
or
popa
les
jp
mov
cmp
out
cli
scas
push
stc
mov
fisubrs
pop
cmp
outsb
adc
out
mov
jle
insb
mov
aam
sarb
jnp
and
pop
insb
inc
insl
in
insl
cs
addb
add
insl
or
jbe
popf
mov
jae
sti
xchg
ja
lcall
mov
stos
clc
jp
pop
xchg
mov
adc
stos
sub
xchg
out
sbb
lahf
xor
mov
dec
jp
jnp
dec
fmull
push
in
jge
movb
inc
pop
outsl
lret
xor
fistpl
fisubs
dec
arpl
aas
dec
andl
xchg
adc
xchg
or
lret
divb
sub
fbstp
aam
sarb
jno
arpl
outsl
clc
iret
mov
xchg
push
mov
or
cmp
out
sbbb
pmulhw
mov
sbb
js
aas
sbb
test
rcr
in
in
fnsave
mov
shrl
jg
inc
js
add
ljmp
test
add
lahf
adc
push
in
test
aad
repz
inc
sub
ret
and
jmp
cmc
loop
pop
add
ret
pop
add
inc
out
mov
loopne
push
fiadds
ja
dec
xor
fcoms
mov
jb
xor
popa
xchg
add
jmp
lret
inc
into
ja
dec
imul
or
stos
cld
dec
test
jmp
outsl
push
push
pop
xor
fs
pop
fs
lret
stc
mov
aas
fistpl
xchg
bnd
xchg
dec
adc
adc
dec
subb
fs
subl
fcmovnbe
imul
xor
adc
inc
les
lods
and
loope
lret
popa
mov
ret
xchg
add
lret
xchg
adc
imul
ds
mov
repnz
or
loopne
shrl
sub
orl
cmpsb
mov
inc
inc
into
cld
sarb
sub
fnstcw
addb
rolb
jbe
andb
roll
jnp
mov
inc
or
outsb
into
shr
pop
pop
filds
ljmp
pop
outsb
jp
mov
jg
jne
and
or
add
les
adc
jo
or
add
add
pusha
in
dec
add
stos
aam
fstpl
out
in
insl
sbb
cli
xchg
cli
xor
mov
mov
jns
fstpt
xchg
iret
add
inc
mov
leave
mov
push
les
loope
cmpsl
xchg
iret
lods
negl
jnp
aaa
testl
fsubl
add
addr16
repz
pop
pop
sub
dec
pop
or
mov
push
ja
dec
aam
pop
ret
lahf
mov
ds
enter
add
cmp
out
xchg
dec
mov
or
sbb
aas
js
iret
arpl
add
insb
cmp
or
jno
leave
fldl2e
add
ret
adc
andl
push
pop
pop
sti
aad
mov
mov
pop
push
xor
imul
cwtl
fucomp
ja
xchg
in
or
mov
rol
ja
cmp
jbe
orb
jae
loop
sbb
mov
data16
aas
sbb
jb
cwtl
rorb
out
xorb
lock
xor
sub
jae
adc
jl
arpl
repnz
nop
mov
mov
jno
sbb
iret
mov
sbb
outsb
pop
adc
lahf
mov
fucomp
inc
jo
filds
inc
jno
popf
ljmp
push
pop
sbbb
out
ret
cli
add
fldenv
jne
and
and
je
sahf
cmp
sbb
xor
fs
ja
add
js
add
imul
aas
andb
dec
inc
mov
pop
xor
cltd
ss
bsf
mov
sbb
xchg
push
mov
inc
orb
push
pop
add
lea
inc
xchg
outsb
add
xchg
sbb
jno
sub
incb
pop
cmp
ss
and
mov
in
inc
mov
and
outsb
xchg
adcb
addb
push
mov
lock
jnp
nop
arpl
pop
insl
jecxz
jns
mov
push
jb
dec
pushl
mov
out
call
jnp
jl
jno
dec
jp
pop
xchg
add
aas
dec
test
cmp
adc
inc
cld
int
andb
jp
negb
mov
add
inc
lea
pop
add
mov
pop
xchg
lcall
loope
pop
popf
pop
fldt
fwait
mov
dec
mov
jne
pop
dec
mov
xchg
fildll
ja
data16
cmp
ljmp
xor
and
mov
jns
pop
xlat
cwtl
jp
outsb
shlb
ror
shl
mov
fisubrs
sbb
xchg
pop
int3
inc
jg
leave
iret
shl
loope
dec
imul
inc
cmpb
jo
xor
pop
and
jno
incl
ror
sub
xchg
dec
icebp
mov
sub
orb
sub
mov
sbb
push
fiadds
and
pop
aaa
push
ja
pop
fnstsw
mov
pop
sahf
add
sbb
rcrl
ja
and
mov
imul
pop
pop
mov
push
mov
jne
insl
imul
nop
mov
lcall
jae
mov
cmpsl
fisttpll
pop
rcrb
sti
lret
stos
inc
inc
inc
jg
gs
push
push
sbb
mov
out
pushf
jnp
out
fmuls
cmp
lahf
loope
inc
and
lea
enter
xchg
inc
aad
mov
arpl
inc
push
xchg
mov
lock
movsb
dec
ss
sub
lahf
jns
mov
in
xchg
lea
and
jg
popa
std
mov
shll
pop
leave
and
jp
xor
push
xor
and
jle
fstpt
jmp
aad
push
xchg
stc
xor
cmp
out
xchg
jle
mul
ds
hlt
xor
cltd
out
adc
and
in
gs
fwait
pushf
jbe
fs
jge
jge
push
repnz
xor
fdivr
mov
mov
xor
mov
sbb
enter
push
js
ja
mov
rcr
fcompl
jbe
rcl
ja
std
xorl
popf
jge
cmp
andb
test
mov
mov
mov
icebp
jo
mov
in
jl
mov
aam
and
add
mov
ss
and
push
jle
aas
in
outsl
jbe
data16
shll
jecxz
lahf
sbb
xor
popa
iret
add
sbb
aam
jb
inc
out
xlat
xchg
mov
ficoml
mov
mov
imul
cmp
fistpl
cmp
popa
push
cltd
jnp
rorb
lahf
push
enter
loopne
add
jne
mov
mov
mov
xchg
pop
pop
pusha
in
cltd
cld
jmp
fistpll
dec
shll
orl
pop
push
outsb
aam
mov
test
pop
add
jns
dec
lock
jno
dec
test
icebp
mov
mov
loope
mov
lret
dec
xor
icebp
pop
stos
aas
jg
jbe
push
in
mov
pop
loop
loop
sub
xor
mov
pop
inc
insb
inc
stos
jge
jp
cmp
push
je
inc
jg
cmp
lcall
outsb
jno
cmp
mov
bound
add
lcall
aas
stc
mov
ret
popf
addl
cwtl
leave
xorl
xor
js
adc
add
out
xor
push
xor
outsl
aam
jle
jns
mov
out
sti
cmc
jge
fadds
cld
add
jno
push
jl
addb
mov
mov
push
inc
sahf
sub
lods
or
jmp
arpl
mov
dec
repz
inc
jle
jno
js
fcoms
pop
in
push
das
push
dec
dec
popf
push
test
mov
aas
cmp
sbb
xchg
mov
jp
sub
adc
ret
xchg
rolb
and
adc
outsl
and
imul
ja
xchg
jbe
xchg
scas
sbb
jne
push
xor
xchg
ficoml
push
mov
insb
in
or
hlt
test
fadds
xchg
aaa
fsub
das
xchg
mov
xchg
ja
lcall
lock
push
pop
lahf
sbb
sbb
sahf
leave
sbb
mov
in
sub
mov
inc
xor
fcomps
jp
adc
ud0
jae
clc
fiadds
fsubs
in
xlat
movsb
push
xor
out
shlb
fsubl
cs
test
sub
mov
add
pop
insb
jge
dec
xor
sahf
adc
fcomps
addr16
js
cli
or
mov
ja
scas
lret
fwait
repnz
call
add
data16
imull
xchg
add
pushf
clc
fdivrs
pop
mov
repz
mov
sbb
and
loopne
mov
clc
push
jge
or
rolb
loopne
push
repnz
and
mov
test
jp
lods
inc
xchg
ja
sahf
test
cmp
adc
cmpb
popa
xor
leave
in
call
je
pop
push
pop
jns
xlat
mov
rcll
xchg
shlb
ss
xchg
ja
pop
or
sub
addr16
jle
pop
sub
and
jg
xchg
in
sbb
lret
push
pop
jge
sbb
xchg
push
aam
int
adc
iret
mov
gs
lock
dec
imul
sti
fldenv
mov
cltd
jns
mov
dec
enter
movsb
icebp
in
jle
push
jnp
call
push
imul
mov
jns
jp
add
push
jg
mov
int3
jbe
fwait
xchg
mov
jb
ret
cli
adc
lods
aam
xchg
push
add
pop
jne
jno
pop
dec
frstor
cmp
rcrb
adc
ljmp
inc
test
jbe
lret
xchg
and
mov
in
jl
sbb
and
push
jno
inc
pop
cld
jnp
and
add
inc
sub
mov
mov
sub
and
pop
cmc
push
mov
jae
jp
shlb
scas
jmp
cltd
cld
mov
fsubrl
mov
jl
adc
jno
xor
jbe
mov
fisubrs
dec
pop
xchg
push
js
sub
fadd
lods
push
rolb
mov
cld
sbb
cwtl
jo
ljmp
call
mov
xlat
jcxz
push
cmp
jecxz
mov
pop
cwtl
mov
fucomi
xchg
mov
pop
cmp
cmp
push
jg
inc
jae
jno
mov
movsb
popf
cmp
xor
hlt
into
outsl
rcl
mov
jno
push
and
cmpsb
lahf
aas
cmp
or
push
dec
dec
mov
jp
pop
xchg
xchg
lods
faddl
jb
popf
les
nopl
clc
dec
sub
dec
or
imul
fsts
xchg
push
mov
out
pop
xchg
xor
repz
mov
adc
jae
xchg
inc
scas
cld
xor
sahf
mov
xchg
fcomi
lds
test
add
insl
sti
icebp
das
movsb
addb
popa
idivl
adc
lea
xorb
loopne
incb
xchg
mov
ret
push
imul
jnp
scas
jnp
decb
ljmp
sub
dec
mov
in
insb
loope
push
fcomip
dec
popa
inc
lcall
popl
pop
cmp
jae
inc
aas
jge
xor
lods
sub
lods
ror
add
or
cld
pop
cmp
push
mov
sbb
dec
les
mov
call
int
dec
rcr
cltd
push
std
lods
sub
repz
inc
push
sub
xchg
jno
notb
cltd
stos
sbb
jl
out
dec
add
ljmp
adc
aam
adc
or
mov
dec
arpl
jp
jmp
es
mov
cmp
pop
mov
outsl
arpl
mov
xor
mov
xor
dec
out
or
inc
aas
jg
jmp
stos
mov
jle
jecxz
cltd
or
decb
aam
ficomps
xorb
mov
icebp
aad
rolb
jg
push
insb
js
jns
cmpsl
lock
lcall
mov
cli
and
inc
lock
fisttpl
mov
push
stos
cmp
jl,pt
jnp
push
dec
xchg
mov
xchg
push
pop
mov
xchg
jo
aas
roll
stc
mov
fucomip
jg
stos
xchg
loop
movsl
and
xor
and
jecxz
adc
scas
sti
sub
orl
xchg
jge
jmp
mov
stc
pop
mov
pop
outsl
add
insl
lret
xchg
and
jp
jg
adc
dec
push
mov
xor
push
add
enter
jg
pop
inc
add
pop
rcll
lods
bound
and
jbe
cmp
mov
sti
pop
cmp
mulb
pop
jg
jbe
ds
packuswb
test
lret
pop
add
push
adc
cmp
andb
insw
jge
loopne
sbb
mov
js
testl
sbb
sbbb
cmp
mov
dec
jb
mov
lock
mov
hlt
adc
jmp
pop
bnd
mov
int3
xchg
cli
inc
pop
pavgb
punpckhwd
test
mov
stc
andnps
stos
ja
pop
daa
mov
push
lret
bound
ljmp
add
popf
imul
fisttpl
mov
addr16
js
das
fidivrl
stc
gs
pop
stos
pop
fidivrs
in
cli
stc
orl
inc
pop
fdivl
stos
push
jmp
jb
or
sub
in
in
cwtl
mov
into
adc
xchg
es
lds
xchg
imul
and
movsl
inc
pop
sbb
aas
jbe
shlb
jp
mov
inc
push
mov
lret
iret
js
jae
mov
lcall
and
sub
add
jp
add
add
cmp
or
or
iret
in
or
rcrb
lcall
mov
mov
insl
out
std
daa
and
aas
push
inc
pop
cld
in
inc
pop
fbld
add
cmp
in
xlat
loope
out
stos
rcl
xchg
or
mov
sub
cs
mov
add
imul
lahf
int3
aas
lret
scas
and
sti
and
xchg
shll
int3
sub
xchg
mov
lret
xchg
cmp
mov
sub
aas
add
sarl
int
pop
movsl
rcl
pop
push
mov
jb
out
std
ds
push
inc
mov
loop
sbb
fisttpl
bound
insb
out
outsb
dec
lods
lock
sti
loop
jo
int
jb
sbbl
pop
cmp
pop
ljmp
mov
pop
int
popf
int
rcl
xlat
add
push
js
test
jge
cmc
pop
jge
mov
imul
jns
mov
push
mov
sub
push
push
xchg
fistps
lea
sub
pop
icebp
xchg
mov
pop
push
pop
lds
repz
dec
pop
iret
mov
jg
in
mov
ljmp
popf
iret
push
pop
mov
fisttps
aad
mov
mov
add
in
or
ljmp
inc
adc
push
add
jecxz
push
cmc
in
int
aas
out
xchg
xor
outsl
arpl
out
and
loope
sub
push
fsubrs
mov
sbb
jmp
lock
je
pop
cwtl
popa
jns
sub
push
push
int3
inc
int3
dec
jp
imul
xchg
decb
push
jns
into
cmp
pop
in
cwtl
mov
lds
loope
repz
mov
jno
pushl
sbb
mov
xorl
pop
push
jg
xchg
mov
push
mov
jge
xchg
and
fwait
mov
rorl
cmpsb
stc
mov
and
scas
sbb
ljmp
sub
mov
aad
filds
push
sub
inc
mov
or
mov
rcrl
and
subb
push
adc
or
add
fwait
ljmp
sbbb
add
ds
lds
jp
mov
and
add
rorb
inc
inc
pop
pop
in
lahf
test
lock
push
adc
mov
xchg
mov
xorb
orb
push
push
dec
jb
xchg
jbe
cli
cmp
ljmp
inc
dec
pop
repnz
add
lods
test
outsl
mov
out
shlb
rcll
out
fdivr
push
sub
sub
mov
leave
push
dec
and
dec
repz
cmpsb
mov
inc
jge
xlat
aad
inc
inc
cmp
out
jmp
ds
cli
jg
dec
outsb
add
xchg
mov
and
pop
pop
inc
inc
lahf
add
adc
test
iret
sub
xchg
enter
aas
out
mov
rcrl
jmp
mov
add
mov
dec
mov
inc
fists
js
xchg
jnp
cltd
shll
iret
mov
jmp
xlat
test
add
jecxz
inc
dec
subl
shll
jmp
inc
stos
das
push
mov
mov
cmpsl
lods
push
pop
outsl
cmc
push
mov
shl
mov
addr16
jno
dec
xor
movsb
fsubl
loope
movsl
lods
aad
lock
inc
negb
xchg
xlat
jge
adcl
pop
ds
dec
sub
jne
repnz
insl
shl
cmpsb
jns
dec
int
leave
in
or
jo
out
cmpsb
dec
xchg
inc
cmp
out
sbb
iret
xor
jmp
lods
jle
xor
ret
push
inc
add
dec
fcmovnbe
push
add
mov
dec
lret
js
aam
cmpsl
bound
jnp
adc
cltd
roll
xchg
xlat
jo
mul
repnz
mov
scas
out
jae
iret
mov
ret
hlt
adcb
xchg
sbb
inc
sbb
insb
xchg
and
movsb
das
xchg
les
repz
push
out
push
icebp
insb
mov
push
imul
inc
pop
cmpl
jo
pop
loop
and
xor
dec
loope
pop
lret
xchg
aas
stc
mov
sarb
add
scas
js
xor
aam
stos
xchg
cmp
push
test
inc
out
les
mov
mov
orb
adc
cltd
and
or
sbb
orb
and
lock
aad
mov
or
or
jle
push
inc
or
inc
mov
aam
mov
rolb
aam
jnp
jge
pushf
add
push
mov
cs
pop
dec
push
push
push
mov
jecxz
jae
mov
cmp
jno
xchg
leave
pop
insl
cwtl
jp
in
leave
dec
popf
pushf
mov
hlt
iret
push
inc
test
dec
pop
insl
adc
imul
or
dec
ds
or
push
aam
imul
add
jp
pop
push
movsl
mov
jg
and
sub
dec
mov
cmp
orl
mov
je
std
and
pop
fstpt
jne
and
call
repnz
add
inc
add
in
outsb
xchg
jns
inc
faddl
imul
les
frstor
jae
pop
sub
sti
inc
dec
jb
or
sbb
push
imul
rcr
lds
cmp
rorl
insb
cmp
lcall
lock
push
popf
shlb
ficomps
out
mov
jecxz
push
mov
fiaddl
jg
roll
xchg
mov
xchg
iret
pop
or
arpl
out
dec
sbbb
dec
lcall
orl
lock
into
rclb
pushl
xchg
fstp
clc
add
arpl
daa
jecxz
in
mov
or
shl
push
mov
fst
leave
add
xor
mov
icebp
rcll
mov
loop
pop
jp
pop
xor
insl
mov
imul
or
ljmp
pop
icebp
pop
sti
xchg
sub
jp
mov
movsl
dec
insl
pop
je
dec
subb
dec
pop
mov
leave
stc
pop
fs
out
and
pop
outsl
inc
or
sub
push
jle
cmp
pop
pop
cld
test
mov
sbb
push
outsl
imul
ret
addl
push
es
lds
mov
sub
lcall
add
pop
cmpl
push
lds
aas
dec
movsb
in
push
test
pop
cmp
pop
mov
fimuls
test
jmp
imul
cmpsb
pop
add
fldcw
idivl
pushf
popa
fcomip
push
aam
jnp
pop
lahf
out
jge
dec
pop
mov
dec
mov
push
mov
mov
movsl
cmpsl
xor
jo
int3
or
jmp
out
add
jge
jp
dec
push
mov
les
inc
pop
inc
sub
rcr
mov
ret
mov
pop
icebp
jno
div
outsb
cli
ljmp
jg
aas
loope
mov
xchg
mov
pop
scas
mov
jae
and
jl
xor
push
push
lcall
insb
popa
cmp
outsl
dec
fucomp
sub
sbb
in
in
and
lahf
dec
arpl
stos
xchg
jmp
or
or
jge
addr16
dec
mov
test
pop
dec
fsub
and
fbld
scas
jae
pop
scas
mov
mov
rorb
cvttps2pi
frstor
xor
repz
inc
pop
cli
ret
inc
mov
jns
leave
jae
and
hlt
imul
xchg
xrelease
pop
cmc
add
test
repz
adc
inc
int
pop
pop
xchg
jg
xor
aas
mov
push
in
push
ljmp
inc
leave
add
pop
popa
in
int
je
inc
sub
cwtl
jo
loope
loope
out
xorb
loope
data16
pop
mov
xchg
inc
sti
into
adcl
fs
loop
sar
xor
repnz
ss
loope
jae
out
dec
andb
inc
test
cmp
loope
ret
pop
shrb
mov
bound
mov
arpl
mov
sqrtps
out
mov
jb
jmp
divb
aad
sub
jle
fildll
pop
fcoms
mov
dec
dec
sbb
call
add
add
push
jae
loop
add
xor
push
iret
ret
xor
pop
mov
inc
push
jb
icebp
out
cmpsl
xor
push
mov
jl
ja
pusha
inc
into
cmp
sbb
inc
fdiv
cmp
inc
stos
add
xchg
fnstcw
push
leave
je
clc
add
and
lret
sti
movl
xorl
ret
repz
roll
aam
jno
ljmp
scas
add
adc
sub
test
pop
mov
in
pop
imul
scas
icebp
enter
adc
jp
punpckhbw
js
cmpsb
imul
inc
shll
filds
sbb
clc
mov
jno
lahf
ljmp
iret
inc
movaps
sbb
and
loopne
dec
outsl
aas
mov
insb
shll
fidivl
cs
cmp
fisttpl
int3
outsb
xchg
in
inc
out
into
rcl
loope
ss
enter
arpl
push
inc
push
and
push
inc
jno
fildll
cmp
adc
mov
jb
fisttpll
mov
cld
xchg
jecxz
pop
dec
sub
and
push
mov
inc
adc
xor
sub
aam
and
arpl
sbb
neg
sbb
add
add
jns
repz
in
gs
lcall
cmc
add
or
loopne
cmp
mov
out
push
dec
jb
jnp
std
jmp
jno
test
lods
jo
leave
lods
fdivl
mov
push
push
and
popf
loop
mov
sbb
push
jmp
jbe
ljmp
and
xor
mov
pusha
mov
pop
jp
push
int3
or
repz
pop
fstp
out
xchg
je
jo
ja
ljmp
sbb
testb
inc
jnp
icebp
inc
repz
cld
jmp
push
fldt
mov
vphaddubd
cmpsl
cwtl
dec
sbb
es
call
jne
add
fwait
out
lahf
jbe
imul
jg
pop
sbb
sub
jl
xchg
inc
cmp
mov
iret
fisubrl
jb
sbb
mov
push
mov
add
jge
cltd
aad
and
lds
sbb
mov
leave
add
bnd
jnp
cmp
xchg
cmp
pushf
lds
pop
repz
push
dec
cmp
stos
pop
iret
add
roll
test
loop
call
fs
adc
lock
aam
mov
sub
cli
push
subb
lret
mov
xor
mov
ja
xlat
addl
jbe
sar
outsb
pop
ret
lea
lahf
mov
out
hlt
or
fs
jmp
out
dec
movsb
and
addr16
cmp
mov
xchg
cmp
es
fsubl
cli
bound
mov
cwtl
mov
push
xor
sahf
in
fabs
dec
sarl
jecxz
fs
repz
sub
into
insb
sub
sbb
dec
xor
or
out
add
jg
jnp
aam
xor
fisubl
aad
clc
xchg
movsl
cmpsl
js
fdivr
mov
mov
cli
into
imul
mov
enter
adc
push
push
in
dec
jp
adc
add
roll
cmpsb
add
xchg
cmpsb
push
cwtl
mov
insb
and
mov
push
in
push
into
push
ljmp
push
inc
push
lods
cli
gs
cmpsb
inc
push
je
ds
leave
dec
in
out
jae
subb
inc
les
inc
std
fbstp
jns
call
orl
jge
dec
adc
jbe
fistpll
cmp
dec
cmpsb
add
arpl
xchg
dec
pop
sahf
js
cli
jns
pop
add
into
mov
push
insb
fistl
push
cmp
cmp
gs
in
fdivr
mov
xchg
dec
push
into
shll
jle
outsb
sub
arpl
sbb
pop
adc
ljmp
xchg
outsb
jne
scas
testb
and
xchg
push
jnp
xchg
cmp
shrl
icebp
cli
add
into
test
jno
pop
cli
adc
lcall
push
sahf
add
aad
pop
pop
dec
mov
out
emms
push
push
enter
push
lea
xchg
cltd
fldcw
dec
clc
ret
adc
mov
inc
add
jno
mov
out
jnp
mov
stc
repz
push
pop
bt
fdiv
fisubs
js
scas
mov
fwait
arpl
and
jns
das
loopne
call
mov
into
popf
lahf
mov
sub
add
or
orl
and
adcb
into
sub
idiv
cmp
icebp
or
aas
adc
add
and
jnp
adc
push
and
pcmpeqw
sarl
enter
mov
push
repz
shlb
loop
icebp
jge
shrl
add
push
jl
mov
jp
cs
ljmp
mov
shlb
cwtl
ret
add
xchg
xchg
sbb
adc
push
pop
mov
xchg
pop
pop
rorl
ror
out
lcall
ret
sub
popf
roll
push
int
add
cwtl
fdivp
push
fcoms
jmp
adc
pop
ja
sbb
inc
mov
lcall
subb
jbe
loopne
lock
xchg
inc
xor
je
add
loope
mul
and
call
jno
mov
jg
nop
inc
jno
mov
dec
mov
dec
adc
ja
fisttpl
scas
jmp
aad
dec
mov
les
popl
aam
mov
stos
inc
ficomps
mov
out
fistpl
add
je
fldl
pop
rcrl
bnd
jnp
mov
aam
outsl
pop
add
mov
js
cmp
dec
insl
aas
sub
out
jmp
jecxz
shlb
jo
push
xchg
pushf
fldl
and
lods
fdivp
push
lcall
test
and
mov
shl
repnz
sbb
push
jp
aas
fadds
scas
aas
or
xchg
and
cmp
adc
push
add
hlt
stos
movsl
dec
ja
lock
inc
movsl
xor
xchg
dec
call
sahf
testl
jge
lea
cmc
je
or
imul
repz
sti
in
cmpsl
sub
push
popf
repnz
insl
jmp
sbbl
jecxz
addr16
in
hlt
cmp
mov
leave
insb
cwtl
jl
xchg
pop
scas
jo,pt
jg
loope
mov
jle
pminub
shrl
addr16
ljmp
inc
lahf
bound
jae
xchg
add
jecxz
push
cmp
sub
xadd
ljmp
out
jns
jecxz
arpl
cld
jnp
outsl
xor
fcmovu
pop
xchg
add
fisttpll
in
xchg
push
push
sbb
repz
and
roll
out
fistpll
jnp
xchg
pusha
xorb
cmp
psrlq
jecxz
test
out
icebp
add
sub
or
xor
pop
pop
mov
push
xchg
inc
jge
cmc
lret
rcl
out
fcmovb
out
jecxz
mov
lea
and
stos
xor
add
fisttpl
jmp
push
leave
mov
add
sahf
cmp
cltd
out
and
xchg
test
shlb
cli
lret
repz
mov
xor
loope
fcomip
psubsw
scas
xor
fisubs
pushfw
imul
push
adc
loop
jb
xchg
lds
inc
rolb
fiadds
sub
cmpsb
outsl
xor
mov
fdivr
icebp
in
xchg
out
loope
jge
imul
jle
dec
push
mov
xlat
xchg
mov
inc
outsb
jg
jnp
pop
pop
iret
stos
add
mov
in
das
lds
stos
sbb
sub
push
bound
dec
jp
fdivrs
addb
pop
mov
lahf
insb
leave
les
dec
js
cmpsb
inc
mov
ss
jb
aam
scas
jb
lods
cmp
sbb
sbb
jb
mov
mov
add
enter
push
leave
jl
or
ficoms
mov
insb
xchg
inc
push
bswap
push
fisubrl
sbb
adc
shlb
sbb
xlat
sbb
jle
mov
mov
sbb
mov
icebp
jnp
shrb
stc
jno
cmp
outsl
jecxz
push
aas
stc
into
sti
add
inc
sub
pusha
mov
add
dec
imul
fcomp
pop
jae
rcll
frstor
mov
xchg
jle
inc
scas
mov
xchg
aas
insl
add
push
in
jno
js
shr
and
fdivr
mov
sti
cmpsb
or
xorb
mov
subl
cmp
mov
cli
pop
adcb
ljmp
enter
xor
insl
jl
pop
sahf
aam
loopne
subl
adc
pop
or
push
xchg
sub
add
into
jmp
enter
clc
xorps
sbb
inc
pop
xor
dec
pop
outsl
mov
iret
push
or
fisttpll
sbb
jns
rclb
out
ret
into
imul
sub
cmp
icebp
iret
cmpsb
test
pop
fldt
in
adc
sahf
inc
out
push
and
push
mov
mov
cmp
aas
inc
gs
push
shlb
cmp
dec
lea
enter
add
adc
push
xchg
mov
pop
sti
out
rorl
dec
jnp
jnp
incl
dec
sub
fsubs
adc
leave
cmp
jno
adc
xor
in
mov
mov
mov
fstps
add
roll
test
pop
loop
aaa
mov
cmp
push
insb
sahf
cmc
out
icebp
outsl
aaa
gs
insl
in
sub
and
nop
jg
xchg
sub
sub
jmp
repz
fidivs
pop
sbb
rorb
pop
and
jnp
or
mov
mov
addr16
cmp
and
enter
cwtl
aam
ljmp
nop
lret
fisubrs
xchg
add
orb
mov
imul
sbb
pop
xor
sub
xor
daa
leave
cmp
subb
loopw
les
jge
lret
xchg
repnz
or
lea
inc
jae
and
sarl
cmp
mov
in
ljmp
cmpsl
stos
lods
inc
repnz
in
add
sti
test
aas
inc
les
xchg
jecxz
jns
pop
mov
xchg
mov
decb
mov
push
push
scas
mov
push
aam
movsl
es
movsb
mov
mov
lcall
out
jb
inc
add
or
pop
aas
inc
out
add
fwait
pusha
xchg
push
jbe
aad
ror
sbbb
pusha
ds
aaa
cmp
mov
cmp
jne
xchg
les
jne
sbb
mov
cmp
ror
and
or
jnp
addl
jle
aam
into
es
pusha
idiv
icebp
arpl
rcl
mov
sarl
and
ret
pop
inc
jl,pn
jle
lahf
jo
ficoms
inc
xchg
sbb
ret
inc
mov
stos
cmp
jecxz
cmp
adcl
outsb
in
cli
fcos
aaa
adc
lret
insl
data16
cmp
push
and
xchg
loopne
int
lods
sub
lahf
jmp
repnz
jb
jecxz
imul
fisubrs
adc
jnp
in
add
std
cld
movsb
add
imul
test
xor
mov
push
out
int3
cmp
aas
jg
mov
add
outsb
fimuls
into
add
andb
jge
fmul
loop
jno
sbbb
mov
popa
shl
mov
mov
aas
mov
xor
lods
test
shlb
ja
sub
sbb
out
mov
xchg
lock
jns
addb
fs
cmpl
clc
test
mov
xor
aas
xchg
sbb
mov
in
js
xor
adc
push
or
fs
mov
sub
jge
dec
lahf
enter
stc
inc
mov
leave
lahf
lods
lahf
sbb
negb
inc
jp
dec
sti
or
add
stos
push
cmp
jp
add
cmp
popa
incl
or
lahf
dec
mov
not
inc
add
add
scas
push
loopne
jne
in
push
xor
adc
call
mov
in
mov
out
ret
out
fnclex
lea
sarl
jp
mov
dec
pusha
sbb
test
in
loopne
lds
mov
mulb
flds
add
jb
fcoml
mov
imul
pop
test
jle
xor
inc
xchg
aas
xlat
jbe
insl
loop
jb
cmp
jecxz
int3
push
jae
setg
ljmp
lret
jle
fdivrl
xchg
mov
mov
bound
clc
push
inc
std
aas
adc
ds
outsl
mov
cld
mov
xor
adc
push
jbe
mov
adc
jge
pop
jbe
movd
jne
out
cmp
add
add
xchg
das
stc
lock
sbb
cld
icebp
mov
push
pop
xchg
call
aam
fstps
pop
mov
pushf
jb
dec
cld
ret
lcall
je
sbb
test
loopne
xchg
mov
mov
cmp
aaa
cmc
leave
ja
daa
adc
into
adc
xchg
sub
cltd
data16
xlat
sti
popa
sbb
xchg
dec
jl
fcmovu
sbb
lret
sub
not
jno
fs
int3
dec
lock
inc
sbbb
jecxz
xor
mov
loopne
out
insl
aad
and
icebp
inc
mov
mov
scas
subb
jg
popa
mov
ffreep
or
add
fcoms
test
xchg
add
out
sbb
adc
shl
add
and
cmp
aas
xchg
pop
test
add
mov
pushl
push
sti
rcr
pop
ljmp
xchg
daa
pop
data16
jbe
push
scas
fstpt
xor
jbe
out
pop
xchg
jns
adc
lods
mov
icebp
test
insl
out
stc
jno
popa
mov
inc
bswap
das
fs
xchg
je
hlt
testb
imul
lods
fs
ja
pop
cmp
sub
mov
cmp
inc
test
je
loop
hlt
ja
push
xchg
jno
leave
pop
mov
cmp
xor
scas
cmp
imulb
arpl
xchg
leave
js
xlat
inc
sti
imul
rcr
insb
fcomip
rolb
sub
add
leave
jecxz
in
fidivl
sahf
das
das
push
aas
pop
inc
mov
outsb
fdivl
push
mov
sub
pop
mov
mov
cwtl
out
push
out
jp
repz
ja
loope
jg
nop
push
lcall
cmpsl
js
mov
jecxz
cmp
rcrb
insb
jmp
adc
cld
iret
fidivrl
xor
rolb
xchg
inc
ret
mov
and
jle
rorl
fisubrs
lds
lret
inc
scas
insb
xor
psubsb
push
aad
scas
rorl
std
add
imull
test
add
or
bound
jmp
add
outsb
das
test
rolb
or
scas
push
icebp
ljmp
mov
lods
xchg
popf
mov
and
jae
mov
loop
adc
jns
cmp
mov
xchg
cli
add
push
xor
out
arpl
add
push
or
icebp
jmp
or
andl
loopne
ret
fadds
mov
jmp
pop
fbld
aaa
pop
fisubrl
mov
mov
std
test
xchg
ja
jg
sub
out
jbe
rcl
jo
fiadds
mov
mov
fstpt
push
jbe
jne
or
cli
lret
rdtsc
mov
lcall
clc
adc
mov
cwtl
clc
outsb
aas
sub
and
and
push
add
stos
lds
int
jno
pop
decb
jmp
inc
mov
aas
mov
add
ret
test
les
nop
dec
or
in
xchg
loopne
in
loope
adc
fnstsw
stc
adc
dec
jno
jb
test
sub
fistpll
test
jle
addl
adc
das
stc
loopne
pop
das
jl
sti
jle
jnp
fadds
lods
shlb
aaa
dec
jnp
aas
sbb
test
ljmp
cmp
sbb
fwait
cmp
or
inc
out
xchg
push
jno
push
xor
in
fwait
pop
notl
fistps
loope
shll
bound
scas
ljmp
cld
inc
fdivs
je
push
negl
jbe
js
adc
addl
es
ljmp
insl
jno
mov
aaa
loopne
pop
inc
inc
xchg
dec
nop
pop
jp
ficomps
cli
adc
imul
inc
inc
cltd
xchg
cmc
pop
or
lock
leave
mov
mov
xor
or
cmp
jo
xchg
leave
in
fbstp
insl
push
in
pop
pop
mov
cs
mov
xchg
mov
jnp
jnp
inc
xor
sarl
sti
jbe
fdivrs
xchg
fnstcw
minps
shrb
xchg
mov
popa
fnstcw
sub
in
pop
shl
arpl
roll
cli
jle
fstpt
ds
xor
dec
or
in
mov
jb,pt
cli
icebp
outsb
lret
idivl
bound
scas
jge
and
jnp
incb
stos
hlt
nop
lahf
cli
aas
fidivrs
cwtl
icebp
jg
mov
sti
mov
xchg
rclb
add
std
xor
loope
gs
push
jbe
push
test
pop
mov
pop
jp
pop
mov
xadd
int
cltd
adc
xchg
or
incl
movsl
sub
mov
std
pop
xchg
aas
cli
popf
jmp
and
mov
shll
inc
or
mov
sti
test
je
sub
jns
and
dec
cmp
pop
repnz
bound
push
dec
jbe
lods
xchg
mov
movsl
popa
xchg
jg
cmp
aas
inc
ret
xchg
pop
adc
inc
adc
pushf
mov
mov
jno
shll
xchg
xor
out
je
nop
xor
test
js
ja
es
jnp
inc
and
pop
xchg
mov
add
imulb
jo
mov
sti
imul
pop
adc
jae
loopne
outsl
icebp
stc
mov
lock
aas
testb
jnp
jnp
mov
mov
outsb
push
shrb
popa
lea
inc
je
adc
stc
mov
imul
jl
jbe
jne
dec
ret
aaa
lea
lcall
fwait
pop
jnp
cmpsl
mov
inc
jae
jg
sub
ljmp
add
neg
fstl
aad
xor
ret
cs
cmp
cmp
decb
enter
divl
mov
or
in
pop
inc
in
hlt
mov
mov
mov
push
sbb
add
sub
cmp
mov
sbb
inc
mov
xorl
or
xchg
shl
jno
xchg
jg
sti
jae
adc
mov
mov
adc
xchg
sti
ss
adc
popa
xchg
mov
je
lret
popa
add
adc
xor
push
push
iret
mov
inc
add
in
jmp
inc
and
sbbb
jbe
jg
popl
cld
fisubs
cld
addb
mov
jle
cwtl
pop
sub
je
mov
xchg
in
stos
jg
push
mov
cli
pop
mov
fiadds
enter
or
ds
sub
testb
fwait
sub
loope
shl
addr16
pop
ja
add
cs
sti
jno
add
cwtl
stc
in
jl
cmpsl
xor
clc
pop
adc
in
sbb
push
mov
ds
xor
jge
and
lret
add
add
sub
fistpl
mov
xchg
and
fcom
and
sti
lret
jl
cli
mov
mov
imul
data16
cmp
jp
inc
mov
inc
or
add
pop
jnp
stc
sbb
cld
bound
popa
xchg
fldcw
mov
aaa
pop
in
jge
andb
rcll
int3
shlb
mov
pop
jno
mov
bound
mov
pop
mov
sub
mov
insb
loope
loope
std
or
test
fwait
inc
xor
pop
jns
addr16
ja
bound
idiv
jns
clc
cmpb
sbbb
cltd
fidivrl
and
pusha
push
into
push
out
rcl
push
pop
ljmp
pop
js
mov
cmovg
mov
testb
jg
ljmp
jnp
push
lock
fsubr
dec
push
sbb
mov
aaa
aaa
arpl
aam
xchg
enter
cli
fmuls
pop
bound
icebp
addr16
mov
ja
js
or
pushf
jg
hlt
mov
add
sub
aam
mov
lock
sub
test
xor
or
ret
push
pop
mov
ret
inc
sbbl
push
mov
repz
addr16
aaa
xchg
push
popa
jb
lahf
cwtl
cwtl
fdivrp
pop
cwtl
in
fimuls
pop
repnz
into
pop
xchg
lods
lock
aad
incb
add
xor
jg
fcomp
fistl
loope
cltd
popl
inc
sbb
repnz
adc
rcrb
outsl
lods
pop
or
and
fs
fadds
cmp
outsb
adc
cltd
out
cmpsl
sub
pop
fadds
fnstcw
aad
or
push
adc
int3
pop
lcall
aaa
and
add
pop
out
fistps
les
mov
push
jne
mov
jns
xchg
cmp
stos
dec
sbb
aam
popa
dec
mov
xchg
push
mov
pop
mov
mov
dec
iret
je
inc
mov
lock
or
cwtl
mov
cmp
adc
xchg
aaa
add
pushf
movsl
loopne
stos
sub
fbld
mov
out
lret
fldenv
pop
scas
std
xchg
cmp
adc
mov
addb
ds
les
fdivrs
push
mov
sbb
mov
mov
jp
xlat
add
rol
jb
sarl
cmp
iret
jns
das
jae
fisubrl
jbe
addr16
mov
xchg
lods
jmp
mov
js
shrl
movl
mov
bound
gs
jno
xor
xchg
out
add
push
ljmp
xor
push
iret
add
nop
mov
inc
je
leave
fmull
out
movsb
fisubrs
mov
aas
outsl
mov
incl
cld
xorl
push
sub
cmpsb
aam
rcrl
dec
mov
cld
jnp
jl
sbb
and
push
add
pop
faddl
jecxz
jbe
jge
clc
pop
xchg
push
mov
ficoml
jge
xor
dec
or
and
cmc
shll
icebp
pop
and
arpl
pop
mov
add
neg
pop
pop
loop
and
mov
mov
cmp
mov
mov
mov
adc
jp
lock
and
sbb
fwait
cli
out
mov
sti
mov
pop
mov
mov
pop
outsl
mov
out
shl
iret
insl
shrl
stos
push
add
lock
mov
stos
fcmove
shrl
jge
aas
dec
test
jecxz
inc
fisubs
out
cmp
popa
fisubl
mov
ret
icebp
out
test
sbb
cld
mov
mov
add
out
mov
imul
and
fbstp
cmp
mov
jne
fldlg2
in
add
pop
mov
push
and
js
aam
cmp
pushf
add
lods
jmp
sub
ss
jae
push
pusha
jb
xor
add
fwait
pop
fsubs
cmpsb
bound
cld
pushf
jb
add
pushl
cmp
cmp
push
sarb
or
jecxz
aam
pop
xchg
inc
dec
push
popf
mov
ds
lea
inc
pop
lds
scas
and
sbb
testl
xchg
stos
mov
mov
push
shr
add
and
mov
fcompl
cld
mov
dec
lea
insl
insb
mov
cmp
inc
dec
xlat
mov
imul
push
not
jo
fucomip
pop
xor
test
pop
dec
fistl
pop
sahf
cli
cltd
fildl
frstor
add
inc
lock
jge
jle
jp
test
xchg
test
out
test
mov
sbb
pop
mov
jp
cmp
and
inc
pop
mov
mov
xchg
inc
rol
lea
jmp
fs
lea
lods
in
test
jnp
push
fists
pop
pop
mov
fidivl
xchg
arpl
push
jns
xchg
lods
cmp
pop
pop
push
aas
lods
xchg
stos
arpl
xchg
fidivs
xorl
in
in
test
mov
xchg
mov
jnp
je
pop
cltd
cmp
outsl
outsb
sub
call
loop
ror
and
or
jge
mov
xor
mov
xlat
add
sub
jbe
jle
inc
imul
addr16
in
rclb
and
lahf
mov
lcall
rclb
popa
lods
sarb
push
stos
sub
sbb
stos
mov
in
ljmp
fidivs
cmp
jp
jge
inc
mov
imul
cmpsl
push
mov
push
arpl
andb
testl
pushf
jae
dec
sarb
cmp
cmp
decb
cld
push
mov
test
jo
sbb
not
stos
stc
jns
fildll
repz
jle
fisttpl
mov
fdivs
push
cmp
jae
popl
mov
mov
lcall
hlt
ljmp
xorl
dec
jns
mov
xchg
mov
xor
push
mov
jg
sub
cltd
push
jl
lcall
fsubrs
stc
ds
push
xchg
mov
jne
stos
jno
xchg
mov
test
aas
pop
fwait
or
add
out
lahf
repz
roll
jle
ja
xchg
loopne
jb
cwtl
sar
jl
fcmovu
in
jo
jno
iret
mov
jle
inc
mov
cli
and
dec
mov
fsubl
repz
mov
fistpll
adc
into
cmp
jno
js
scas
sti
stc
push
mov
icebp
adc
sub
dec
ds
or
scas
xchg
mov
decb
sub
testl
les
jp,pt
fstl
pop
data16
sub
add
xor
arpl
jns
fnstcw
push
stos
dec
mov
out
mov
outsb
outsb
out
ret
inc
dec
dec
mov
mov
sahf
jecxz
gs
mov
lcall
pop
push
mov
stos
lock
enter
push
push
int
test
sbbl
cmpsl
icebp
push
stos
pop
fnsave
pop
roll
sub
xlat
mov
jle
ret
fisubrs
pop
mov
jp
add
popa
xchg
cmp
dec
xchg
dec
cmp
ljmp
xchg
mov
inc
pop
push
pop
xor
xor
rclb
cmpb
adc
mov
icebp
mov
push
insb
jns
fcomps
aas
xor
mov
sbb
jl
out
add
and
cmc
fistl
push
xchg
jp
pop
mov
cmp
dec
lea
inc
mov
ja
ss
dec
inc
push
jle
loopne
rcr
lahf
aas
gs
xchg
js
gs
jg
cmp
pop
cmp
add
inc
icebp
jmp
push
insl
mov
fists
repz
js
jnp
mov
mov
dec
and
dec
mov
mov
jo
fstp
into
imul
icebp
movsb
jle
les
je
cmc
or
jne
scas
inc
lret
inc
mov
fwait
dec
or
jge
pop
xchg
xlat
cli
pop
loopne
les
jns
popa
mov
mov
and
lods
sbb
fldt
sbb
sub
fstps
mov
rcrl
popf
mov
lods
clc
mov
pop
dec
xchg
pop
mov
xchg
stc
cmp
push
out
mov
lds
and
setge
out
add
xlat
ds
fstps
xor
xchg
incl
jns
push
cli
sub
out
into
cmp
mov
jae
mov
jg
test
lock
xchg
out
and
sbb
test
or
call
cwtl
insl
movsb
adc
pop
nop
jnp
out
jge
mov
jbe
inc
iret
fs
xlat
push
mov
mov
jg
mov
pop
mov
test
mov
jle
test
add
xchg
push
push
jl
xor
dec
push
bound
inc
push
orb
mov
pop
in
or
lcall
sbb
add
sbb
mov
mov
mov
mov
push
out
push
jne
rcrb
and
test
push
xor
std
sti
cmpsl
shlb
cli
je
movsl
sarl
add
stc
mov
arpl
jnp
jp
adc
pop
push
mov
rcrl
and
sbb
cmp
mov
push
jg
mov
daa
xlat
xor
in
push
addr16
jae
lret
mov
push
mov
testl
dec
sbb
rep
bound
sti
or
rcll
mull
pop
call
cmp
jle
jp
jno
push
out
mov
enter
fucom
popl
fistpll
pop
push
xchg
popa
mov
mov
orb
inc
jns
inc
xor
xorl
xor
lds
scas
mov
rorb
cmp
inc
jae
jb
outsb
call
test
daa
fwait
scas
push
lcall
push
ja
test
mov
rcll
jp
xor
inc
push
stos
mov
repz
fsubp
scas
clc
hlt
pop
pop
negl
push
inc
mov
pop
shr
imul
mov
movsb
jae
cld
sub
cmp
icebp
push
stos
cmp
stc
mov
out
cmp
pop
movsb
sarl
mov
xchg
lods
adcb
hlt
enter
insb
sbbl
out
js
and
cmpb
jg
aad
add
stos
xchg
in
jns
iret
xchg
pop
lds
lahf
mov
dec
scas
mov
out
xchg
cld
sub
ret
addb
or
cli
andb
out
out
iret
mov
dec
iret
pop
lea
push
repz
cmp
mov
pop
add
mov
cmp
das
sbbl
movsb
outsl
add
imul
mov
sbb
mov
repz
xchg
xchg
pop
sbb
mov
fcomi
inc
xchg
addr16
pop
lcall
loopne
mov
mov
scas
mov
cld
mov
lret
jae
lret
lahf
mov
mov
leave
cmpsl
mov
clc
mov
fcmove
out
shlb
push
mov
mov
adc
jmp
out
and
cmp
lcall
sarb
pusha
pusha
aas
xchg
leave
ljmp
clc
mov
lock
push
idivl
popa
jnp
out
sarb
hlt
dec
push
mov
insl
in
stos
ljmp
jp
lcall
mov
mov
cmp
rolb
inc
and
jmp
enter
rcll
das
xchg
xchg
jmp
test
or
sbb
sbb
inc
dec
jae
mov
jb
adc
push
jno
movsb
mov
ja
subb
push
into
jge
push
ds
sub
movsl
arpl
fnstcw
sarb
sbb
roll
jmp
cmp
add
dec
xlat
fcompl
push
scas
cmc
dec
imul
mov
mov
push
test
icebp
pop
shrb
sbbl
scas
sti
repnz
aam
mov
xchg
mov
jns
jmp
cmc
sbb
in
and
fisttpl
mov
cli
mov
cwtl
jmp
repnz
in
pop
jmp
push
fsubrp
popa
call
fucomip
jl
jge
jp
mov
push
enter
bound
fdivrs
xchg
out
fldcw
sti
fnstcw
scas
push
in
mov
out
jnp
add
cltd
jns
ja
fidivrl
push
inc
xor
filds
xchg
call
cld
mov
test
inc
sbbl
cmp
jmp
jae
pop
fidivl
mov
fsubs
jae
push
cmp
xor
shlb
xor
push
jno
js
cmp
push
cmpsl
outsb
adc
lock
jnp
xchg
pop
dec
fcmovnu
or
or
mov
xor
stc
call
sbb
popf
pop
leave
pop
je
xchg
jp
inc
je
sub
pop
add
fidivrs
push
hlt
dec
movsl
sub
out
stos
dec
push
mov
push
aas
les
sbb
mov
mov
inc
push
jb
mov
imul
push
scas
mov
das
in
sbb
inc
cltd
cli
adc
mov
and
mov
loopne
loop
pop
jg
je
fstp
cmpsl
push
fistpll
jae
leave
iret
into
inc
add
pop
xchg
movsl
jg
nop
cwtl
fidivs
mov
into
cmpsl
sarb
add
adcb
scas
out
sbb
std
loop
mul
mov
xchg
flds
aas
out
dec
sbb
or
or
into
dec
sub
jp
xor
sub
insl
lahf
fistpl
aas
arpl
dec
fsubl
into
push
in
fisubs
cmp
xchg
ds
mov
dec
xchg
hlt
inc
and
ja
push
repz
jle
push
mov
mov
fimuls
outsb
fcomi
loopne
add
andb
jne
mov
lahf
cmp
pop
outsb
faddl
xor
push
addl
das
aas
sub
out
ficoms
jae
inc
cmp
lds
mov
xchg
mov
mov
lcall
cmp
lds
push
lret
mov
jns
aas
repz
xor
cmp
popf
xchg
jo
xchg
sub
shlb
jle
jecxz
jbe
jne
outsb
xchg
adc
outsb
jae
aam
jge
ret
sub
fsubrl
pop
lcall
jl
mov
cld
aas
imul
cld
pop
xchg
fst
mov
lret
mov
sarl
std
sub
inc
mov
add
add
jno
add
filds
mov
push
fcmovnb
cmp
rcl
les
cli
xorb
rcrb
mov
cli
pop
insl
aam
lods
sbb
arpl
popf
or
inc
mov
jno
outsl
jmp
sbb
ds
push
mov
icebp
xor
sub
ljmp
movb
inc
jae
imul
dec
fisttps
cmp
add
loop
data16
jecxz
dec
cli
add
or
aaa
mov
pusha
shll
or
xor
jno
sub
in
cli
push
add
lds
pop
jmp
shl
aam
mov
jle
xchg
fmull
loope
data16
mov
mov
leave
sub
lret
mov
push
jg
std
leave
aas
fcoms
add
shrb
fildl
pop
movsb
mov
mov
jnp
movsb
mov
inc
pop
imul
testb
insb
out
add
pop
aas
dec
jno
add
lahf
out
rol
into
mov
mov
xchg
jo
aas
mov
clc
mov
fwait
cmp
repz
shrb
mov
jne
out
add
movsb
jo
int
mov
adc
js
sbb
hlt
jne
dec
lock
mov
loope
adcb
jae
or
and
rcll
ja
mov
xor
icebp
lea
test
mov
loope
es
push
sub
sub
jg
push
xchg
cmpsb
mov
fildll
out
push
or
xchg
xchg
push
fsubs
out
jbe
add
xor
ds
test
pop
sbb
mov
out
jl
test
nop
inc
add
cmp
cmpb
jae
inc
rcl
into
dec
lret
add
mov
popa
lahf
and
mov
scas
js
mov
iret
jo
jge
cmp
ret
lret
sbbb
mov
jae
test
inc
jno
xor
pop
mov
out
test
js
test
xchg
sahf
jp
jb
pop
fwait
xchg
mov
enter
test
pop
xchg
decb
cltd
test
jns
jge
and
and
cmc
repnz
jnp
jp
sub
cmc
mov
mov
jl
insl
adc
std
lock
mov
arpl
jp
xchg
pop
js
push
xchg
inc
cmpsb
insb
adc
sub
sbb
lcall
movsb
jmp
mov
add
jne
and
pop
inc
pop
incb
mov
mov
xor
mov
mov
test
in
aam
icebp
xchg
pop
jns
cmpsb
push
push
mov
ljmp
xor
or
jns
xchg
pop
test
cmpl
fidivl
lea
cmp
xchg
fmuls
leave
pop
les
pop
enter
cltd
es
sub
add
cli
stos
iret
aam
add
cmpsl
ret
mov
xchg
movlps
test
out
mov
or
sbb
push
shlb
push
xor
in
jge
jb
dec
sti
inc
fwait
mov
dec
cmp
push
xchg
mov
sub
fisttps
ret
fidivl
test
mov
ja
jg
mov
jp
inc
push
sub
loop
mov
pop
pop
repz
rcl
mov
add
sbb
dec
cmp
cmpsl
fcmovnu
mov
sbb
pop
std
cmp
out
fimuls
inc
mov
xchg
int
mov
pop
jl
mov
lret
xchg
fsubrs
dec
or
sbb
jns
mov
inc
pop
jg
jl
insb
sahf
adc
push
aaa
push
add
leave
or
cli
mov
jg
into
mov
mov
loope
mov
cltd
add
jp
xor
flds
leave
mov
rolb
mov
mov
pop
sar
mov
sub
lret
cmp
es
popa
xor
insb
punpckhbw
sarl
mov
mov
testl
out
pusha
adc
pop
scas
jge
jecxz
mov
jge
aam
add
cmp
icebp
inc
test
loop
jp
adc
repz
xor
xor
pop
cmp
std
or
insl
sti
addb
pop
outsl
repz
adc
pop
mov
jns
shl
les
cmc
adc
in
jbe
mov
mov
pop
or
cmc
outsl
mov
mov
popf
xor
cmp
outsb
ficoml
mov
sub
test
nop
pushf
jno
cmp
fstps
pop
out
bound
incl
sub
pop
cli
jae
jno
xchg
cmp
inc
sahf
fistpl
cmpsb
jns
leave
dec
roll
cmpsl
xchg
cli
sbb
out
cmp
pop
xor
ljmp
jns
xchg
js
jp
jmp
insb
icebp
push
push
nop
push
mov
sahf
dec
jl
pop
push
mov
mov
add
in
push
lds
and
add
mov
aaa
add
sti
nop
setne
mov
push
add
cmp
push
pcmpgtb
jg
cmp
adc
adc
jg
fsubr
fsubrs
xchg
cmc
dec
das
adc
dec
sbb
mov
and
aas
sar
fsubs
out
and
in
push
icebp
push
cld
jg
fmuls
cs
jb
inc
jl
or
int3
mov
bound
inc
ficoml
jp
js
scas
imul
mov
xor
push
pop
and
sti
clc
or
mov
mov
cmp
in
and
adc
bsr
lods
sbb
push
test
add
or
aam
lds
push
fs
mov
aam
inc
and
sbbb
jbe
mov
dec
mov
and
ret
lret
or
lahf
stc
imul
xchg
hlt
push
jno
es
mov
js
inc
jns
mov
mul
mov
divb
fcomi
in
popa
jnp
sub
scas
mov
mov
mov
and
enter
in
mov
pushf
lea
rep
out
inc
adc
or
cmp
fistl
enter
stc
cmpsb
dec
shll
inc
imul
cli
ljmp
roll
mov
adc
mov
pop
mov
pop
push
mov
ja
sbb
mov
xlat
xlat
jnp
xor
sub
scas
xor
fcomps
mov
push
sbb
js
outsb
pop
adc
or
mov
xchg
and
sub
call
mov
cli
pop
add
push
sbb
xor
in
les
pop
mov
or
push
mov
xchg
leave
mov
in
jno
push
mov
lods
jae
and
mov
jmp
in
cmovg
insl
or
popf
push
imul
push
jb
cmp
cmp
ds
pop
imull
imul
jbe
mov
sub
shrl
add
cmovle
shlb
fs
jns
mov
push
jp
add
mov
inc
mov
sti
xchg
repnz
cmc
mov
ljmp
inc
mov
test
lods
fisubl
es
mov
pop
aaa
mov
cwtl
mov
cli
pop
cmp
imul
jge
xchg
cmp
mov
or
xchg
jg
clc
xchg
leave
stc
cmpsl
cwtl
and
mov
mov
cmp
mov
loop
pop
idiv
mov
add
sahf
mov
loopne
jo
mov
out
sbb
mov
arpl
and
cmp
inc
mov
iret
add
sar
fucomi
fsub
lahf
and
iret
fstl
stc
arpl
testl
repnz
xchg
xchg
or
mov
mov
or
ret
mov
repz
leave
in
stos
jmp
aam
mov
dec
mov
cltd
in
mov
push
jb
leave
sbb
and
jnp
hlt
dec
pop
xchg
add
loop
leave
push
and
xchg
pushf
inc
dec
jp
mov
and
leave
outsb
insl
push
push
repnz
repz
mov
mov
mov
mov
fcmovnu
mov
xor
lahf
jl
imul
rorb
cmpb
sbbb
out
loope
sub
mov
jg
mov
dec
je
xor
sbb
jl
cmpl
popa
clc
out
adc
jbe
mov
js
jmp
mov
fdivl
jp
orb
iret
xor
dec
mov
push
pop
insl
mov
aas
sub
ljmp
inc
jge
stos
mov
push
push
ds
loopne
cwtl
xchg
sahf
sbb
push
mov
cmp
cs
sub
cmc
push
adc
jge
outsb
add
sub
nop
pop
push
cmpsb
pop
cmp
add
pop
lret
inc
cmp
xchg
test
mov
mov
dec
inc
mov
lock
jg
mov
aaa
mov
scas
addr16
int
mov
shrd
inc
or
add
loop
ret
loope
add
jo
add
xchg
or
push
push
in
sbb
aad
jle
adc
arpl
mov
stos
es
xor
xchg
mov
dec
sbb
jmp
movsb
pop
or
inc
dec
and
jnp
gs
xor
repz
jno
mov
pop
adc
ds
cltd
adc
dec
arpl
out
xchg
js
add
fisttps
add
ds
xlat
aas
inc
mov
pop
sbb
outsb
lock
push
insl
ljmp
movsl
jecxz
testl
dec
ret
add
rcl
or
sarb
fisubs
in
aam
mov
stos
ficoml
in
out
and
xchg
outsb
lock
not
pop
push
clc
sub
jp
loopne
cmpsl
sbbl
jle
push
pop
cmc
jg
sub
add
leave
repnz
cmpsb
cmp
dec
lret
adc
mov
or
out
mov
mov
pop
sar
cwtl
ret
testl
xor
mov
stos
mov
clc
fmul
jecxz
out
mov
mov
ror
jno
adc
fidivl
test
pop
lock
imulb
fistpll
mov
mov
in
push
xchg
mov
mov
cwtl
jne
enter
setl
lock
cmp
gs
pop
fwait
jns
pop
adc
jns
pop
jbe
clc
cmp
cs
iret
xchg
sbb
lret
test
push
mov
xor
loop
mov
adc
cli
ds
mov
sbb
repz
sub
fs
fidivl
sbb
lret
fnsave
mov
mov
xor
cli
mov
xchg
jg
jb
push
xchg
dec
daa
mov
icebp
out
dec
std
push
fadds
jl
xchg
daa
hlt
outsb
js
dec
shl
inc
jp
push
pop
mov
push
dec
call
pop
gs
pop
sahf
mov
jge
rcpps
mov
mov
xor
nop
xor
ja
jg
push
dec
arpl
inc
xchg
jnp
push
push
imul
test
add
cmc
and
into
add
push
in
pusha
je
pop
inc
mov
icebp
ja
loopne
lahf
jae
xor
arpl
into
lcall
jmp
sbb
in
adc
cwtl
movzwl
mov
stos
test
cli
test
outsl
cmp
neg
repnz
mov
jp
and
xchg
push
and
outsl
fldenv
jns
mov
mov
jp
cs
adc
cmp
sti
fcoms
imul
nop
and
adc
nop
push
outsl
aam
sub
scas
inc
mov
data16
enter
pop
shlb
inc
ja
ret
imul
or
out
sbb
jmp
jnp
adc
pop
add
jb
xchg
sbb
std
xchg
test
mov
ljmp
sar
inc
xchg
push
adc
in
jmp
fwait
inc
mov
xchg
js
sub
cltd
mov
rolb
aam
loope
fbstp
cmp
in
pop
cmc
mov
dec
stos
sub
pop
xor
mov
xchg
sub
jle
arpl
test
mov
in
add
cmp
arpl
insl
and
into
decb
add
xor
cltd
cmc
cld
jb
loop
jb
xor
dec
cltd
and
lcall
and
jne
sub
push
mov
arpl
jns
pop
jbe
dec
in
mov
jae
andl
cmp
daa
adc
pop
pop
dec
imul
fistpl
sbb
lret
push
out
xorb
sarb
mov
mov
add
gs
dec
les
mov
popa
push
mov
lea
outsl
mov
or
in
psubd
movsb
add
testl
mov
gs
sub
jae
addb
xchg
pop
push
shlb
cmp
or
sbb
cli
andl
sbb
arpl
mov
cli
fistpll
mov
addb
ret
shll
push
fbstp
cmp
sbb
gs
mov
fsubrl
cmpsb
jb
scas
scas
mov
sub
push
mov
inc
jb
insl
jp
inc
pop
jge
add
cmp
lahf
fdivrs
and
or
jge
out
jno
aam
jmp
sub
xor
je
rorl
xor
cmp
ljmp
and
outsb
mov
scas
xor
add
sarb
fistpll
gs
subb
inc
mov
repnz
or
inc
mov
inc
rclb
mov
add
cmp
leave
xor
insb
cmp
test
mov
out
imul
loopne
and
inc
mov
outsb
mov
sahf
fists
mov
js
lods
or
std
idivb
jae
idivb
lock
xchg
mov
loope
push
cld
jb
shll
lcall
pop
push
mov
ret
jge
pusha
jge
mov
mov
mov
jbe
jmp
mov
mov
fistpl
jns
testb
mov
ret
push
arpl
lahf
lock
fcmovne
mov
js
rorb
xor
xor
xchg
sahf
lods
cltd
dec
push
adc
sub
dec
mov
repz
jae
outsl
mov
mov
sub
lock
clc
dec
incb
repz
mov
repz
scas
pop
jp
jecxz
rep
mov
add
mov
aaa
xor
daa
lods
cmp
loop
mov
stc
push
adc
jb
mov
bound
jns
sub
mul
cs
inc
push
sbb
adc
roll
or
inc
jecxz
push
cwtl
icebp
mov
pop
pop
and
cmp
xchg
lcall
negl
jmp
mov
sbb
push
dec
push
sahf
sub
sahf
jae
out
mov
int3
test
mov
adc
jne
inc
xchg
mov
aas
add
leave
fimuls
mulb
adc
es
and
pop
mov
jbe
mov
xchg
mull
jns
mov
jns
es
sub
jmp
and
mov
sbb
push
dec
inc
cmp
xor
icebp
les
rcll
mov
xchg
clc
mov
or
dec
clc
adc
and
lds
pop
loope
add
fcomps
cltd
pop
sub
rcrl
pop
inc
in
or
sarl
les
inc
inc
cmpsb
mov
addb
jnp
sub
rorl
scas
arpl
in
dec
loopne
add
loope
inc
jge
gs
test
jl
insb
jg
lea
cmpsl
lds
jnp
out
les
loop
stos
cld
insb
out
cmp
xor
or
jo
push
ljmp
data16
cmc
pop
ljmp
lods
jmp
adc
popa
mov
aas
les
arpl
into
dec
ljmp
xor
jns
jb
lahf
add
test
into
jnp
popf
mov
jae
icebp
push
sbb
in
out
aad
mov
jle
push
test
out
push
mov
jno
jp
loope
pop
sub
loope
iret
shll
aam
ljmp
add
lahf
leave
je
fmull
dec
testl
cmpsl
xchg
je
cli
call
push
jnp
mov
cmpb
mov
shl
imul
mov
aas
cmc
jge
dec
jb
icebp
das
clc
jnp
dec
cmc
lods
jno
jns
repnz
loopne
mov
das
dec
shl
ds
pop
jns
pusha
push
out
jmp
enter
cwtl
shlb
int3
cmpsl
sbb
add
sbb
or
cld
ss
inc
push
mov
jp
mov
inc
fistpll
mov
je
dec
pop
andb
push
out
xchg
pop
mov
push
jae
cmpl
les
cld
sub
sahf
lret
pushf
jb
popf
xlat
adc
sbb
sahf
inc
repz
xchg
cld
cmp
pop
cs
dec
in
loopne
xlat
cmp
roll
mov
enter
sbb
cmp
push
pop
add
mov
stos
imul
jae
push
movsl
movsl
in
sub
adc
xchg
outsb
gs
loop
mov
stc
pop
gs
test
scas
xchg
inc
into
jg
lahf
repz
inc
aas
in
push
bound
mov
pop
dec
incb
add
jae
jne
cmp
popa
dec
push
imulb
mov
outsl
jp
jno
shrb
popa
imul
xchg
test
jecxz
xchg
jno
icebp
pop
xor
scas
add
inc
inc
test
dec
push
iret
mov
push
std
ret
mov
mov
insl
xchg
movsb
mov
stc
mov
inc
dec
cmp
mov
popf
inc
inc
cwtl
push
mov
xor
fsubr
xchg
mov
pop
icebp
test
jbe
jge
arpl
xchg
mov
es
jae
loop
jo
jp
outsl
inc
and
dec
dec
fstl
dec
dec
mov
sbb
inc
rorl
jp
clc
jno
xor
mov
into
xchg
jecxz
popf
dec
jae
loop
sbb
addr16
jmp
dec
imul
or
out
sbb
call
xchg
and
push
adc
or
pop
scas
loope
add
add
call
lds
sub
jo
pop
lret
fisubrs
mov
mov
jns
mov
mov
loope
mov
test
sub
repz
imul
cli
mov
clc
mov
out
jns
sti
scas
scas
dec
popa
out
pop
cs
mov
mov
jnp
inc
call
xor
rcl
ds
sbb
clc
stos
sbb
insb
dec
ret
pop
int
pop
cmp
movsl
rcrb
test
jge
ja
jb
jmp
cwtl
push
jl
mov
ljmp
xchg
and
push
dec
xchg
xchg
aam
or
pop
sub
movsb
mov
iret
mov
pop
inc
pusha
aad
leave
cld
or
test
push
or
mov
xchg
stos
jmp
jp
jge
pop
lock
repz
push
out
jae
fldt
gs
cmpsl
fcmovnbe
mov
loope
add
push
jno
xchg
iret
dec
mov
inc
mov
insl
repnz
and
cmpsb
cwtl
out
jge
movsb
jb
xchg
pop
fsub
pop
into
fcomps
mov
inc
and
xchg
cld
mov
repz
adc
in
xlat
int3
mov
fiadds
out
subb
lea
xchg
jmp
sub
repnz
test
out
dec
sbb
jb
fwait
jo
movsl
lcall
inc
imul
mov
sti
cld
test
movhlps
mov
xchg
mov
outsl
test
pop
clc
jmp
loop
in
test
adcl
orl
scas
mov
jecxz
push
cltd
outsb
push
shrb
jae
mov
ds
or
xchg
mov
add
mov
pop
push
lcall
jmp
cli
cmpsb
mov
pop
xchg
cmp
rorl
sbb
pop
add
jo
addr16
mov
add
cmp
das
adc
sar
xor
mov
lret
cs
sub
push
out
jecxz
push
jae
push
pop
xor
xchg
in
mov
jne
mov
repz
icebp
fadds
fdivl
in
xchg
adc
mov
imul
jge
push
push
sub
pop
notl
cmpsl
dec
mov
pop
aad
push
mov
ret
repz
stos
sti
outsb
sub
in
lahf
in
jecxz
sub
xchg
out
stc
test
mov
add
outsb
scas
xchg
nopl
inc
sub
insl
lahf
or
mov
popf
fwait
rcll
mov
leave
dec
loop
addb
test
ror
mov
jbe
mov
popa
xor
cmc
cmp
mov
sub
jle
jns
mov
xor
mov
std
cmpsb
adc
cmpl
aas
iret
push
out
cmp
mov
cmpsl
mov
mov
shld
sarb
sti
std
stc
cmp
ss
push
mov
cli
aas
inc
int
adc
out
arpl
loope
inc
gs
repz
insl
mov
ljmp
inc
ret
push
lcall
dec
mov
clc
mov
push
clc
mov
cmp
inc
rcl
mov
subb
out
lret
pushl
cmc
test
pop
xrelease
mov
dec
jp
shrb
mov
cli
movsl
add
mov
out
mov
pop
and
cmp
lock
les
mov
jns
cwtl
das
push
mov
push
ret
sbb
ror
cwtl
lock
mov
popf
int3
mov
lds
stos
mov
faddl
lods
jae
leave
fadd
lret
mov
sub
in
in
add
fwait
rcl
xchg
adc
cmpb
shll
les
jmp
cmpb
out
lds
aaa
mov
push
aad
fcoml
ds
mov
pop
mov
imul
fdivl
into
ja
inc
hlt
out
xor
adc
cmpps
insl
rcrl
inc
cmp
popa
pop
int
std
je
ret
flds
ror
rorl
jp
repz
repz
add
cmpl
jno
shrb
add
pushl
ds
xor
lea
lods
pushf
div
push
add
jne
sbb
xchg
addb
mov
outsb
leave
in
jne
into
mov
xchg
js
sbb
test
cmp
mov
xchg
shlb
pop
sahf
push
cmc
stos
fucomip
push
pop
cmp
hlt
repnz
js
mov
adc
pop
pop
out
fdivr
jae
out
push
stos
mov
fnstsw
jge
js
sub
test
add
bt
jge
adc
push
adc
jp
and
xchg
ret
sbb
push
xor
pop
mov
push
cmp
and
dec
adc
xchg
or
pop
jecxz,pn
std
leave
push
fistps
mov
cmp
cmp
es
inc
fisubrs
jo
insw
les
jp
sahf
push
loope
out
in
outsb
mov
mov
ret
mov
lds
fstpl
inc
lods
mov
in
es
mov
mov
jg
push
out
xor
test
jge
jg
pop
sub
test
mov
sbb
adc
mov
fcomip
cmp
mov
jno
mov
rolb
cli
pop
mov
inc
mov
push
jge
lds
xchg
xchg
lock
adc
xor
in
sub
imul
loop
loop
bswap
dec
rcrl
or
sbb
iret
pop
xchg
jno
jb
cmp
mov
jns
pop
fisubs
jns
loop
sbb
loope
jno
fadd
xchg
xchg
sar
js
shl
mov
pop
out
jg
mov
jg
loope
leave
shrl
loope
aaa
fmull
sbb
and
adcl
push
leave
jnp
fcmovbe
bound
push
or
xchg
pop
test
int3
jl
xchg
jnp
sub
cmp
insb
jb
mov
movsl
dec
mov
cmovo
dec
data16
imul
leave
ja
dec
icebp
adc
leave
push
subb
insl
sti
test
shl
fidivs
loop
cli
add
or
mov
cli
dec
subl
lahf
leave
dec
dec
pop
push
arpl
aas
les
out
pop
rolb
mov
pop
sar
sub
lea
pop
test
xchg
dec
je
add
mov
fucomip
dec
jecxz
enter
mov
push
push
jb
pushf
jnp
scas
test
sarb
sub
inc
lods
sbb
jmp
testb
cwtl
inc
faddl
jp
leave
aam
and
gs
popa
jl
cmp
movsb
cltd
jns
popa
and
ds
push
push
jge
gs
movlhps
pop
cmp
incb
dec
xchg
addr16
addb
push
ss
push
sahf
sbb
push
imul
or
pop
mov
loope
imul
pop
in
cmp
and
and
cmp
int
outsl
cmpps
xchg
xor
ss
testb
ljmp
jg
push
mov
pop
out
cmp
lods
push
mov
popf
xor
inc
push
cmp
loop
add
mov
mov
inc
fisttpl
pop
loop
xlat
je
arpl
test
adc
test
mov
jbe
sahf
pop
ret
mov
mov
jnp
roll
es
out
or
push
jnp
fsubl
lock
ljmp
rcll
fisttpll
mov
lea
mov
xor
and
and
add
aaa
or
pop
divl
mov
cmp
cmp
icebp
or
and
sahf
repz
jg
lret
sub
sbb
add
icebp
or
out
jl
incb
lahf
push
ret
sub
lret
mov
js
ja
jo
gs
pop
push
push
repz
les
cmc
cwtl
js
ds
add
mov
insb
in
outsl
xchg
das
bound
test
fsts
cld
ret
pop
mov
je
and
mov
orb
pop
push
leave
jno
dec
fnstsw
push
jne
push
imul
js
iret
jle
jno
sbb
out
cli
xchg
xor
xchg
popa
fisttpl
sbbb
fildll
sub
mov
mov
repz
lea
loope
jecxz
testl
imul
loop
icebp
je
sti
sbb
test
jg
insb
push
call
inc
sarl
jno
fildll
xor
fadds
mov
xlat
mov
lret
xchg
xor
iret
arpl
fadds
xchg
cmp
stc
movsb
repnz
inc
subb
pusha
aad
jp
mov
sub
outsl
out
xchg
pop
aam
jl
je
mov
cwtl
jge
mov
fcoml
aam
fwait
ljmp
mov
mov
inc
sub
xchg
xchg
pop
fldenv
pop
lret
iret
cmc
call
mov
sub
dec
add
mov
aaa
xchg
mov
aad
mov
inc
pop
out
ljmp
fs
jg
stc
incl
aas
jno
movsl
shl
gs
cmpb
call
pop
fisubs
mov
mov
sarb
nop
loope
popl
pxor
mov
adc
shlb
jg
jno
adc
sti
add
mov
inc
ds
jnp
decl
mov
sbb
push
sbb
lds
call
lock
xchg
ret
fnstenv
cmpsl
test
inc
mov
popa
xchg
test
test
ret
repnz
pop
stos
add
xor
ret
xchg
or
add
ss
lods
outsb
inc
leave
jl
jae
sbb
jnp
jle
inc
add
push
out
pop
mov
jae
xchg
inc
jbe
mulb
jns
dec
pop
inc
xor
mov
cmp
fbld
out
add
sub
out
xchg
mov
pop
pop
and
mov
mov
test
jle
push
or
adc
addb
add
popa
add
scas
add
sahf
pop
pusha
out
xchg
cmpsl
push
xor
cld
mov
dec
lahf
xor
popl
cmp
les
jb
jns
sub
aam
iret
ss
movsl
xchg
xor
iret
pop
lcall
daa
cmp
and
stc
sbb
xchg
lods
jle
jns
cwtl
fiadds
dec
xchg
out
out
sbbl
lea
out
mov
push
mov
inc
cmp
and
pushl
ja
add
jp
add
sarl
dec
cli
je
jge
scas
jne
and
or
mov
stos
pop
jne
and
xchg
outsl
lock
dec
sub
icebp
out
or
sub
push
jle
movsl
lods
cmp
popf
out
xchg
std
cmp
std
jne
mov
adc
xchg
out
inc
jle
mov
sti
cltd
and
les
sub
std
cmp
fwait
arpl
mov
dec
mov
fistpl
push
les
and
jmp
lgs
add
xchg
call
test
adc
jae
mov
imul
push
mov
inc
jnp
paddusb
popf
out
aad
pusha
lret
xchg
mov
xchg
mov
inc
fdivr
cmp
and
and
shlb
stos
in
jne
push
or
add
adc
lods
mov
sub
pop
sub
jo
clc
and
dec
dec
nop
leave
es
mov
fstps
je
mov
dec
cmpsl
add
jmp
jae
filds
pop
xor
pause
push
xchg
push
mov
aas
nop
fldt
pop
pop
pop
mov
mov
mov
or
cmpsl
or
adc
dec
inc
jne
inc
xchg
dec
out
jecxz
dec
mov
pop
orb
pop
sbbl
fstl
dec
pop
mov
cmp
pop
outsb
das
fildl
or
jnp
jl
sub
jbe
jp
leave
cmc
fbld
jp
mov
mov
loope
test
aas
jle
loopne
notl
idiv
filds
sti
das
sahf
in
push
pop
jp
cmp
sbb
test
mov
jb
iret
jl
clc
add
mov
xchg
mov
mov
loopne
jl
arpl
into
xor
xor
bound
pop
xlat
aaa
pop
xchg
fdivrs
xor
push
cmp
pop
andb
fsubs
int
shr
clc
push
mov
in
and
add
lahf
out
adc
pop
popf
cwtl
lret
sbb
ror
addr16
fists
cltd
rcr
jge
lahf
repnz
xchg
add
cmpsb
pop
jae
adc
aaa
fmul
cld
mov
arpl
xor
mov
push
lcall
cli
psubusb
pop
jge
test
jns
sbb
das
pop
xchg
xor
jle
mov
push
push
idivl
lea
test
out
jb
mov
mov
xchg
sbb
sbb
push
sub
add
jecxz
add
jnp
mov
dec
mov
sbb
mov
leave
jnp
jnp
imul
fwait
inc
scas
cmp
loopne
add
inc
stos
cltd
leave
inc
cmp
pop
dec
push
popa
pushf
out
pop
adc
fwait
std
adc
mov
push
out
pop
jnp
shl
mov
negb
sub
mov
fildll
mov
jp
mov
cmp
mov
outsb
dec
sub
fiadds
out
dec
aam
sbb
jmp
cmp
rcll
fists
jp
cvtpi2ps
in
scas
dec
test
cs
dec
or
aas
mov
dec
jl
in
jb
jle
mov
ret
fimull
sbb
decl
mov
bound
push
repz
push
mulb
jecxz
add
mov
stos
test
ret
popf
sbbb
stos
or
pop
jns
aas
push
or
mov
sarb
ljmp
mov
sahf
push
add
pop
rcrb
pop
xchg
shll
lret
adc
out
mov
dec
sbb
inc
aas
rcrb
int3
adc
outsl
jbe
pop
mov
xor
xchg
out
push
mov
andl
out
sub
mov
push
shrb
in
pop
in
into
xor
dec
sbb
pop
mov
pop
mov
ret
sbb
mov
adc
adc
cltd
adc
sbb
iret
xor
inc
idiv
xchg
mov
push
or
out
in
inc
adc
outsl
adc
out
adc
xor
ss
pop
out
or
sarl
dec
sub
inc
les
push
fidivrs
cmpsb
mov
loope
or
or
pop
xchg
pop
loope
jp
push
out
scas
hlt
lahf
jae
pop
xchg
jmp
rolb
out
fidivrs
es
jno
sti
fwait
cli
into
cmpb
or
out
lcall
shll
outsb
aas
jl
inc
and
jp
ja
pusha
repnz
cltd
ds
pop
dec
out
fwait
lahf
pop
bound
pop
and
ja
movsb
icebp
loop
bound
add
ja
cmp
sub
pop
jecxz
ret
daa
pop
imul
scas
scas
push
adc
push
dec
dec
jno
imul
jg
adc
or
pop
or
inc
inc
or
push
mov
mov
stos
std
sbb
push
test
jno
out
mov
mov
inc
push
sbb
pushf
jae
adc
imul
aam
and
call
inc
sahf
imul
and
xor
fildl
les
xor
es
mov
lock
jno,pn
mov
mov
lock
loope
inc
out
sub
orb
mov
mov
mov
cmp
mov
fnstcw
fsubr
sub
imul
adc
mov
pop
aas
inc
mov
and
ss
aaa
push
xchg
dec
pop
js
into
fmuls
sub
movsl
shll
jge
adc
iret
pop
push
lods
mov
dec
popa
fdivr
in
stc
mov
push
mov
cmpsb
sbb
adc
loope
bound
imul
bnd
daa
cwtl
sbbb
add
adc
lock
incl
lea
outsl
xchg
add
inc
outsb
mov
sarb
push
in
lods
add
push
xor
jg
lahf
add
ds
jo
mov
jno
js
dec
jl
mov
nop
cmp
jp
in
or
test
insb
nop
dec
lds
aas
xlat
jno
sti
mov
ds
mov
adcl
adc
mov
cmp
and
cmpb
mov
ret
push
add
mov
cs
push
cmp
fldenv
fstp
ret
data16
loopne
push
xchg
test
lea
pop
in
ds
inc
jl
dec
cmpl
lds
jle
inc
std
out
test
ret
jecxz
cmp
cmovb
pop
cs
shl
iret
ret
int
push
cmpsl
jg
or
test
pop
test
neg
mov
imul
jae
daa
sub
out
or
insb
test
mov
mov
and
dec
sbb
rcll
jle
aaa
insb
mov
mov
lahf
pop
and
push
dec
enter
pop
call
scas
insl
movsl
ds
mov
stos
enter
scas
rorl
fldt
icebp
loopne
rorb
jb
push
rolb
rorl
and
dec
test
fistps
pop
jl
shll
or
out
enter
jl
or
and
or
push
iret
jno
jnp
lea
aam
call
xchg
xlat
lock
add
lret
xchg
xchg
push
ljmp
jno
les
fsubs
xlat
clc
aam
ret
push
sub
test
adc
push
jp
scas
ljmp
cli
xchg
lds
call
push
mov
stc
mov
es
push
jg
idivl
fldl
cmc
mov
jne
lods
jg
subl
push
jge
add
aas
add
push
add
xlat
xor
in
jae
inc
subb
jp
lds
pop
adc
repnz
les
adc
adc
shl
push
adc
push
setno
shl
inc
mov
sahf
sbb
icebp
fisttpll
scas
jbe
sbb
xchg
insl
inc
in
push
fistl
in
xchg
in
mov
movb
jbe
cmpl
or
arpl
imul
iret
movsb
addl
outsb
inc
insb
jns
aad
daa
aad
lea
pop
cli
loop
lods
sub
jnp
add
add
and
arpl
xchg
divl
push
lahf
or
xchg
pusha
ret
push
lret
jns
jle
fidivs
sarb
testl
cwtl
dec
cmp
xchg
and
adc
fcoml
jg
dec
sti
lret
lret
mov
dec
lcall
push
mov
cli
lcall
jle
add
mov
jno
inc
pop
mov
nop
jno
cmpb
aam
push
pusha
push
scas
loope
in
ret
dec
popa
mov
aas
add
xor
sbb
shll
jge
mov
pop
pop
leave
inc
dec
in
inc
dec
out
movsl
pop
outsb
push
shrl
mov
cmpsl
imul
insl
insb
std
pop
dec
mov
or
js
cmp
scas
jle
sbb
pop
les
sti
jne
fsubrs
or
lock
pop
add
xchg
sub
nop
inc
jp
push
lock
xchg
jg
aas
and
or
jae
push
cmc
in
lea
xchg
sbb
cli
pop
mov
adc
xchg
scas
insb
ret
sbb
inc
dec
cmc
cmp
stos
push
ljmp
stos
jae
shl
dec
std
outsl
into
xchg
mov
jnp
fsubp
stos
lret
dec
mov
aam
mov
mov
test
lret
jge
fildll
arpl
leave
pop
test
dec
fcmovnbe
fiadds
test
cmpl
leave
in
iret
cmp
push
pop
cwtl
aaa
mov
fldcw
dec
mov
loope
jg
and
shll
cmp
pop
mov
pop
arpl
fistpll
popa
outsb
add
fnsave
jge
pop
xchg
pop
cmp
enter
outsl
or
and
inc
mov
ds
mov
or
cltd
adc
fiadds
pop
xchg
or
into
inc
mov
and
cmpsb
insl
cltd
sub
imull
sbb
jg
shrl
stos
shlb
arpl
pop
mov
inc
ds
popa
fisttpl
jge
xor
imul
ror
sbb
push
cmp
or
jb
dec
imul
ror
aam
popa
mov
fcmove
mov
stc
test
js
mov
jnp
fdivl
jno
mov
js
or
jge
mov
fimuls
mov
andl
movsb
fidivrs
pop
inc
pop
sbb
inc
mov
pop
xlat
push
pop
pop
pop
mov
inc
sbb
add
les
sbb
rcr
inc
pop
or
sub
enter
jnp
call
shlb
mov
jb
incb
stos
push
adc
xchg
jb
movsl
xor
push
lock
jge
pop
cmp
jb
dec
push
xor
pop
mov
test
push
jae
out
jns
jp
stos
repz
mov
sbb
lds
cmp
ljmp
inc
add
push
add
cmpsl
sub
sbb
inc
cli
fld
loope
mov
push
sbb
mov
mov
loop
pop
cmp
pop
jno
cmpsb
jl
fmul
das
test
and
mov
lcall
rorl
repz
aaa
test
outsb
push
sbb
adc
sbb
push
mov
ja
imul
es
sbb
jle
ficomps
mov
cmpl
inc
mov
pop
jne
pop
mov
pop
or
mov
cmp
out
or
lcall
push
push
into
imul
orl
imull
mov
jno
dec
inc
cmpsb
mov
pop
dec
ss
js
pop
pop
cmpsl
loope
or
insl
popa
out
fisttpl
and
jb
ss
xor
jnp
push
cmp
testl
mov
fwait
sbb
pop
js
xor
pop
add
push
nop
lods
enter
popf
fdivrs
adc
or
dec
dec
ficoml
cmp
leave
rcrl
mov
inc
cld
inc
mov
pop
and
test
pop
lahf
pop
adc
call
mov
pop
shll
push
fisubs
mov
popa
and
imul
or
shll
and
pop
imul
add
mov
or
mov
int3
mov
mov
fnstenv
add
fmul
jecxz
cmp
cld
outsl
cli
fsts
fsubrl
pop
stos
mov
stos
pusha
mov
repnz
push
jge
jae
adc
aad
push
cmpsl
in
mov
pop
stos
popf
inc
dec
fisubs
push
test
aad
jo
cld
es
adc
je
mov
jecxz
xor
hlt
jae
jno
hlt
mov
cmp
or
int
cmp
out
shll
add
pop
pop
frstor
je
fistpll
jp
and
cmp
jns
inc
cmp
mov
fstpt
sti
sbb
pop
add
mov
pop
icebp
call
fiaddl
rcr
clc
loope
sub
scas
or
mov
rcrb
dec
mov
sbb
imul
in
adc
mov
scas
repz
ja
js
out
stos
lods
aam
jge
jns
xor
cwtl
icebp
mov
push
and
pop
fsub
lods
mov
scas
xchg
xor
out
xchg
std
leave
cmp
cs
cmp
xchg
sbb
lock
jae
jl
out
add
lahf
dec
ret
jecxz
out
and
cltd
cli
push
les
into
test
stc
and
orl
cmp
lret
inc
movsb
jmp
popa
or
call
pop
lods
sub
xchg
push
pop
fbld
loop
cmp
add
sbb
xor
lret
jle
inc
or
in
xchg
insl
into
incl
test
ja
adcb
jbe
cli
js
jp
or
popf
sti
insb
push
lret
inc
das
in
fidivrl
popf
loope
xchg
nop
xor
add
xchg
pushf
adc
xchg
pop
test
movsb
shrb
cmp
mov
fnclex
dec
fiaddl
pop
movd
xchg
and
pop
hlt
xchg
push
dec
dec
cmp
orb
fldt
in
aaa
cmp
xchg
sub
push
mov
xor
jne
cmc
jae
fldt
cwtl
sar
push
lret
sarb
pop
out
leave
lock
je
rcrl
jecxz
lahf
add
mov
add
jg
jnp
insl
subl
ja
push
into
cld
cmp
xor
or
icebp
sbb
scas
fsubs
pop
stc
pop
icebp
loopne
gs
int
push
lahf
das
xchg
bswap
insb
jo
pushf
pop
sti
xlat
into
in
in
in
outsl
cwtl
addb
mov
lock
jecxz
stc
push
jnp
ffree
jecxz
push
xchg
fcompl
push
jne
leave
jle
and
stos
pop
xchg
sub
mov
mov
scas
cmc
xchg
imul
fdivrp
mov
hlt
mov
pop
mov
xor
fcom
dec
push
leave
insb
and
test
cmpsl
fwait
loope
push
dec
bound
jo
jmp
out
ret
ja,pt
xlat
fbstp
fcomps
fistps
cli
cltd
mov
push
sbb
or
mov
cmp
cmp
out
movsb
sti
and
xor
fistl
shrb
bswap
loopne
mov
pop
push
test
inc
dec
leave
push
ret
jns
pop
das
xor
popf
stos
aas
push
aas
dec
sub
dec
out
jnp
mov
mov
add
shlb
arpl
sbb
add
cmp
xchg
dec
pop
out
loopne
add
add
lods
in
mov
punpcklwd
sub
xchg
cmc
ja
push
fisubrs
dec
cli
leave
pop
inc
inc
pop
inc
jb
test
add
call
jmp
ret
ja
repz
mov
test
test
pusha
scas
add
out
or
cmpsb
push
lea
adc
mov
dec
push
pop
sbb
push
lds
icebp
andl
enter
push
andb
jb
js
std
imul
incl
cmp
leave
incl
mov
in
add
stos
aas
pop
fiaddl
push
movsl
out
test
inc
ret
jge
loop
outsl
xchg
icebp
movsl
push
mov
pop
add
mov
lock
pop
jg
test
push
pusha
cmp
xchg
std
mov
xor
insl
mov
dec
fnstsw
jg
bound
mov
dec
clc
scas
pop
lock
pop
push
arpl
jp
addr16
leave
jne
jae
clc
insb
outsb
movsl
cmc
fists
jno
mov
test
psllw
arpl
cmp
out
imul
lock
push
scas
sub
jge
movsl
insl
pop
xchg
inc
jle
mov
cli
sbb
lea
movsl
out
test
enter
shl
and
imul
ljmp
out
outsl
cld
sarl
mov
sti
mov
ljmp
mov
and
pop
xchg
jne
pop
sbb
push
sbb
stc
negb
and
test
test
mov
int3
cmp
imull
jl
push
mov
je
mov
push
jnp
jno
rcrl
adc
xchg
jne
shll
pop
iret
inc
test
push
cli
mov
in
pop
loopne
or
push
fiadds
std
orb
out
daa
outsb
mov
jl
add
repnz
fidivrs
add
iret
push
lods
xchg
mov
mov
popa
push
out
mov
enter
cmp
mov
mov
imul
jb
jnp
inc
out
pop
icebp
cmpsl
fidivrl
jns
mov
shrb
test
push
pushf
ret
inc
in
xchg
in
adc
push
or
mov
cli
push
xchg
pop
ja
xchg
in
popw
fs
mov
fisubrs
jb
fwait
gs
decb
ds
sbbl
aas
movsl
adc
lods
hlt
loopne
push
pushf
sub
add
push
insl
bswap
mov
addr16
xlat
shrl
imul
mov
jno
mov
gs
js
loopne
jp
iret
call
add
cltd
xchg
gs
push
lds
rolb
cwtl
hlt
xchg
lock
shll
out
arpl
insl
subb
aas
pop
cwtl
dec
push
ja
popf
add
cmp
in
faddl
jle
pop
jnp
fstps
les
inc
mov
jecxz
mov
push
out
imul
cmp
xchg
das
in
out
and
fsts
test
inc
imul
rcll
test
sidtl
adc
cli
xchg
lret
push
bound
icebp
mov
add
test
sub
pop
imul
aaa
or
cld
fs
movsb
les
fcmovbe
out
popa
imul
add
sahf
std
imul
js
leave
out
inc
sbb
mov
adc
arpl
xor
repz
cmp
cli
push
sbb
mov
jb
jmp
cmc
jno
out
cli
mov
cs
cmc
jecxz
imull
out
and
jne
test
imul
cwtl
int3
adc
jge
jp
outsl
xchg
js
fisubl
jne
test
dec
icebp
js
cmp
outsl
mov
in
cmpl
dec
adc
push
pop
ret
pop
push
mov
arpl
mov
jnp
add
pop
pop
push
jne
adc
inc
ret
into
pop
sbb
add
movsb
sarb
repz
mov
cmc
pop
xchg
pop
mov
mov
cmp
loop
add
jmp
mov
push
fs
addb
out
pop
jl
add
mov
faddp
aas
dec
pushf
push
stos
lret
inc
test
jg
or
sbb
icebp
sti
testb
repnz
inc
mov
xor
xchg
stc
sti
test
ficompl
xchg
iret
test
hlt
aaa
outsl
les
sqrtps
cmpsl
xchg
ret
add
jo
jl
add
jae
cmpb
inc
sti
clc
shl
mov
out
fwait
adc
cmpsb
jno
mov
out
sarl
std
xchg
fcmovb
in
out
inc
xlat
push
jns
out
add
into
icebp
aaa
push
fistpl
xchg
mov
push
stc
jle
aas
stc
jl
dec
out
push
ljmp
add
repnz
sti
mov
inc
repz
bound
push
pop
icebp
and
pusha
and
jg
dec
adc
pop
mov
sbb
imul
mov
je
push
and
fwait
mov
movsl
pop
shrb
fisubrs
inc
pop
dec
adc
imul
daa
fs
jb
sbbl
sbb
insl
pop
popl
fstl
jg
cld
inc
adc
and
sbb
dec
inc
dec
outsl
mov
clc
fldt
sti
ret
vpmacsdqh
stos
adc
sbb
orb
add
dec
xchg
add
iret
call
pop
testb
mov
shll
out
pusha
cs
outsb
nop
imul
jb
lret
xchg
add
inc
pop
jle
mov
das
lock
bound
inc
fsts
mov
or
add
xor
push
lds
jb
aas
pop
fisttpl
add
sbb
push
sbb
jge
sbb
sub
cli
cmp
adc
dec
lea
insl
negb
mov
xor
inc
adc
outsl
or
repz
mov
fdivrs
jb
ds
fucom
lock
mov
adc
add
sbb
test
and
pop
jmp
xor
orl
out
leave
lods
dec
lock
sti
xlat
cmc
aas
les
push
mov
cmp
xor
fisttps
fsub
mov
jae
jno
and
add
ja
push
mov
lods
fmuls
push
mov
lret
jne
rolb
loopne
push
test
pop
cltd
push
xor
push
int
fisttpl
sub
jae
pcmpeqw
mul
pop
fnsave
cwtl
popf
aam
adc
addr16
push
adc
inc
push
lahf
and
mov
in
inc
mov
cmpsb
stc
orl
xlat
call
outsb
adc
adc
xchg
orl
and
cmp
mov
jnp
lods
insl
insb
jle
pop
xor
js
xchg
aam
stos
or
iret
fcmovbe
lock
scas
mov
jne
out
or
mov
inc
lock
test
insb
add
ja
scas
ds
xor
mov
mov
cmc
jle
jecxz
jge
push
clc
bound
es
add
out
leave
lds
imulb
imulb
inc
outsb
jnp
pop
adc
jb
mov
nop
xchg
push
scas
test
push
sub
and
or
mov
and
or
out
les
js
sbb
lret
add
sub
xor
pop
frstor
fcmovnb
stc
inc
pop
iret
notl
popa
lock
sti
leave
movsb
movsl
lahf
in
ljmp
mov
mov
xchg
cmp
adc
and
mov
adc
push
stos
imul
aas
inc
pop
xchg
idivl
aam
xchg
stos
fmuls
push
movsl
pop
test
xchg
xchg
popl
adc
aas
jge
popf
mov
cltd
addr16
cwtl
jmp
jo
and
ret
and
outsl
adc
adc
popf
ds
pop
push
mov
stc
sti
cmpsl
mov
jbe
es
xchg
pop
pop
lods
mov
mov
dec
jecxz
mov
pushl
inc
sbb
into
pusha
mov
mov
pop
add
sub
inc
insl
xchg
cmpl
adc
sbb
sub
sarl
inc
loopne
repz
inc
cld
mov
cmp
into
test
cltd
in
or
outsl
mov
mov
push
aas
jg
jge
mov
jns
or
fildll
fcomps
sti
mov
ret
inc
out
mov
mov
lret
mov
pop
jp
mov
jns
xchg
add
faddl
sbb
push
dec
lcall
sub
pop
mov
pop
loop
gs
cli
fsub
xchg
cmp
sbb
inc
mov
xchg
das
out
movsb
jae
out
inc
inc
pop
and
ljmp
ret
push
sbb
out
jecxz
xor
fwait
pushl
push
pop
mov
mov
cmp
pop
cmp
mov
jge
mov
xchg
push
jb
xlat
push
inc
arpl
sbb
sbb
jg
sti
jnp
xor
push
stos
cmp
jg
ret
out
and
icebp
xlat
jge
lea
clc
out
xchg
outsl
ds
pop
pop
mov
test
xchg
inc
push
rcrl
cmp
jg
add
jle
repz
pop
inc
sub
jns
test
xchg
cmp
dec
jmp
stos
lret
jle
lock
xchg
push
mov
enter
sarb
cmp
pop
movsb
and
jnp
dec
jno
pop
out
fmulp
lods
repnz
push
outsb
xchg
push
clc
mov
fucompp
mov
push
ljmp
jo
xchg
je
mov
out
call
push
lahf
xchg
pushf
sbb
push
cld
incb
add
lds
lret
mov
add
mov
mov
pop
icebp
shlb
push
lds
xchg
test
sub
cld
loope
add
push
inc
nop
adc
aad
adc
adc
fistps
jo
xchg
push
and
out
xchg
mov
gs
loop
aaa
repnz
sar
out
jmp
lret
mov
bnd
pop
fldl
aam
idiv
bound
xchg
orl
pusha
fdivrl
pusha
mov
imul
mov
les
jnp
pop
lcall
xchg
cmpsl
popfw
shrl
sbb
leave
imul
push
pop
mov
push
mov
adc
pop
mov
aam
pop
out
add
sbb
sbb
add
shlb
fsubrs
sbb
xor
leave
push
xor
sub
pop
pop
les
shll
cmp
fs
rcll
xor
adc
or
lock
and
jp
lcall
repz
mov
ds
push
add
addb
mov
test
jnp
mov
push
jae
insl
sub
dec
sub
dec
je
faddl
inc
inc
popa
inc
jl
cmp
fdivrp
pop
cmp
test
das
mov
out
movsl
jp
or
sbb
out
inc
jnp
shll
push
fistps
sbb
test
mov
sub
or
or
idivl
in
push
pop
jg
out
sahf
fmull
aam
sti
outsb
gs
push
jge
mov
dec
push
mov
shlb
push
es
cld
frstpm(287
mov
pop
stos
enter
lds
sub
push
daa
std
shl
lock
lcall
mov
rorb
movsb
xchg
dec
pop
push
jno
int
jne
jle
jnp
fsubl
mov
pop
ret
xchg
test
outsb
outsl
arpl
jb
dec
test
ja
movsb
add
mov
add
push
cmc
jne
scas
or
and
jne
push
inc
pandn
fdivr
roll
xchg
xor
jno
sbb
jae
cli
leave
out
jle
xor
jl
xchg
stos
fwait
cmp
mov
jmp
mov
lahf
jo
mov
js
jp
fadd
cmpsb
aad
mov
fisttps
pop
mov
leave
aas
mov
popf
insl
stc
jmp
mov
repz
xor
mov
std
xchg
jne
push
dec
stc
fbld
scas
dec
dec
sub
movsl
cld
icebp
aas
pop
or
jg
lock
or
fsubrs
jbe
cmp
sarb
or
jge
out
mov
pop
jge
cmp
outsb
xchg
mov
jbe
jne
int3
inc
outsb
pop
insb
repz
arpl
addr16
xor
lahf
jo
cmp
dec
leave
xchg
lds
call
popf
adc
out
adc
xor
cltd
xchg
test
fdiv
xchg
icebp
mov
pop
xor
mov
dec
jp
sbbb
mov
pop
cmp
xchg
cli
pop
xchg
popf
add
outsl
test
aaa
jno
cmc
jnp
mov
test
lret
mov
test
xchg
adcl
inc
mov
xor
aas
test
cmp
or
pushf
xchg
inc
iret
jl
cli
mov
sub
stos
hlt
dec
outsl
stos
ficomps
xchg
stos
mov
mov
leave
jp
movsb
jo
xchg
into
add
dec
xchg
leave
or
pop
cmpsl
int
ja
sbb
and
sub
out
inc
mov
push
adc
dec
outsb
psubsw
pop
icebp
mov
popa
fbld
mov
mov
in
cli
inc
test
xlat
fcmovnbe
imul
sub
inc
cli
jne
loop
gs
cwtl
pop
pop
mov
or
pop
and
ljmp
in
popa
sbb
neg
fldl
dec
mov
stos
add
jne
rorl
notl
mov
out
lret
dec
cmp
ljmp
fildll
xchg
in
out
or
icebp
sbb
jae
dec
popa
iret
dec
popa
cmp
loop
sbb
popa
or
mov
add
and
cmp
xchg
lret
sarb
aaa
push
repnz
xchg
pop
xchg
inc
dec
pop
out
pop
ror
shlb
daa
dec
mov
jge
pop
push
lahf
push
cmp
mov
inc
jle
jg
divb
inc
outsl
bound
in
jae
add
push
push
xor
ror
inc
ljmp
lahf
int
icebp
leave
into
outsl
into
fstpt
cli
jo
cmp
inc
lea
std
xchg
jp
mov
xchg
fwait
lds
pop
out
jns
add
out
jno
ljmp
push
cltd
call
jp
sbb
les
daa
pop
and
push
xor
mov
lret
push
das
push
xor
es
add
das
add
leave
or
scas
loopne
cmp
fmuls
gs
les
jmp
push
sub
pop
mov
in
xchg
mov
fstp
cwtl
arpl
loope
aas
movsb
jno
push
mov
andb
cmp
pop
mov
ss
test
stc
push
xchg
out
je
or
jne
xlat
xchg
inc
outsl
mov
xchg
sub
xchg
out
dec
js
adc
mov
mov
add
out
or
jae
cli
jecxz
pushf
insb
dec
fisttpl
jbe
mov
fwait
push
cmp
sti
mov
add
jge
cld
insl
rorb
shlb
cltd
adcb
push
xchg
and
jl
lods
add
sub
rorb
xor
jle
cmpsl
popf
jmp
and
inc
rcrl
push
cmp
ljmp
iret
xchg
shlb
pop
pop
jecxz
push
sarl
jns
pop
jb
mov
pop
outsl
icebp
insb
mov
enter
into
sub
leave
add
or
shl
and
lods
jge
cltd
push
lock
cmp
ja
mov
inc
scas
test
sub
pop
jecxz
loopne
pop
int
add
sbb
pop
jmp
divb
mov
aaa
mov
adc
lret
xchg
aas
test
mov
mov
sub
jns
movsl
jne
pop
xchg
mov
scas
push
fidivl
lock
xchg
pop
inc
mov
stos
repnz
push
lret
lahf
enter
and
xor
push
subl
mov
push
mov
stos
inc
iret
ljmp
xchg
jns
loope
mov
fwait
rcl
ret
pop
add
inc
cmp
loop
pop
ds
sti
sbb
jne
pop
xor
xchg
dec
inc
xchg
gs
cld
fdivr
mov
lahf
clc
pop
mov
in
sbbb
mov
sub
xchg
and
add
pop
in
mov
pop
cmc
out
sub
lcall
outsb
inc
adc
rcr
xchg
add
aas
jle
cmp
add
icebp
mov
jne
mov
jb
cli
add
clc
xchg
les
popa
and
pop
inc
push
out
xlat
dec
js
jp
aam
das
popf
mov
pop
rcrb
jnp
sub
pop
push
xchg
fmuls
add
mov
jg
inc
loope
fs
loopne
jg
jb
pop
out
and
outsl
cli
jo
adc
test
lock
lret
leave
cld
xchg
cmc
cli
jnp
lahf
xchg
fisubrl
test
pop
or
mov
mov
cli
ret
iret
push
fsts
icebp
jg
sarl
lock
adc
js
fmul
sbb
xchg
popf
fisubs
sarl
lahf
pusha
fldz
pop
in
dec
jne
out
cmc
mov
fistpll
inc
movl
add
sahf
dec
imul
les
jg
std
pop
pop
inc
inc
rol
sub
mov
push
jge
xchg
test
dec
pop
sbb
hlt
les
fsubs
inc
push
and
sbb
mov
dec
out
pushf
lcall
dec
xchg
pop
pop
xchg
lret
in
lock
add
daa
daa
xchg
negb
clc
mov
jo
lahf
inc
add
testb
push
sarl
sub
roll
pusha
jns
out
les
lret
or
mov
push
les
pop
aas
jnp
jl
pop
or
dec
xchg
imul
cmp
outsl
jno
xchg
xlat
mov
mov
and
pop
mov
mov
rcrl
dec
popa
out
cmc
push
mov
jns
sbb
cmp
arpl
out
lahf
fsubrs
cs
push
popa
xchg
xor
jg
mov
jge
ficompl
or
and
out
mov
cld
mov
daa
ret
fldenv
out
jne
out
jmp
dec
add
sbb
fcmovb
jnp
out
sbb
cmp
les
mov
jle
mulps
cmpsl
jnp
and
jne
add
out
ja
adc
arpl
jl
add
xlat
mov
xor
adc
mov
outsl
xchg
lods
in
and
sbbl
jae
pop
pop
pop
push
jecxz
jae
divl
pop
add
lock
fdiv
ja
jecxz
lea
out
cmp
jl
and
popf
fldcw
or
icebp
mov
lcall
jae
mov
push
xchg
fxch
aaa
cmp
stos
fldt
sti
imul
jmp
fsubl
push
or
jns
pusha
in
outsb
mov
jae
fwait
mov
jle
test
pop
or
pop
inc
leave
imul
xchg
sub
xor
out
jecxz
add
jno
outsb
icebp
scas
add
jae
movsb
repz
inc
test
dec
daa
push
cmp
fisubrs
mov
fldl
insl
pop
and
jg
adc
fidivl
mov
xor
sbb
je
jb
jns
stos
xor
outsl
inc
clc
ror
push
add
out
pop
sub
pusha
out
xchg
inc
or
pop
popa
imul
out
pushf
enter
mov
adcl
out
pop
pop
push
addb
mov
out
fbld
mov
scas
sbb
mov
les
lcall
mov
xor
mov
aam
aas
mov
icebp
add
pop
cwtl
lret
pop
xchg
clc
mov
loope
std
mov
mov
pop
and
out
es
or
addb
inc
sti
or
cli
pop
xlat
movsb
push
push
fsubl
jnp
mov
ret
ret
leave
dec
out
jl
inc
push
into
jp
fadd
stos
inc
scas
leave
xor
sbb
scas
sbb
fiaddl
addb
mov
xchg
adc
lea
rorl
repnz
jp
stos
outsl
testb
imul
lods
xchg
push
cmpsl
mov
mov
and
cmpsl
jns
jmp
pusha
or
sbb
add
ja
mov
adc
fistpll
nop
sub
mov
sbb
add
mov
rorl
xor
xorl
cmp
cmp
fcmovu
mov
xor
insb
inc
aam
jns
test
jae
mov
in
pop
dec
inc
pop
inc
xor
iret
dec
inc
mov
or
jg
pop
and
in
push
and
testb
xor
pop
out
dec
and
jno
mov
jl
iret
pop
mov
or
push
xchg
setl
add
xchg
and
jnp
in
adcl
xchg
add
aam
sub
dec
adc
imul
mov
mov
js
mov
lds
pop
addr16
inc
fstpt
insl
out
xorl
popa
mov
icebp
iret
add
cmp
inc
inc
adc
aam
jbe
mov
pop
ja
xor
imul
aaa
lahf
insb
push
xor
jge
leave
xchg
sbb
cmp
clc
push
lcall
jmp
shrl
shlb
lods
icebp
fs
add
aas
js
and
xor
mov
inc
mov
mov
fisubrs
stos
test
fwait
lods
in
pop
xchg
fs
cli
fisubrs
mov
test
lahf
xchg
add
orb
dec
ret
mov
inc
icebp
mov
inc
repz
into
and
popl
out
dec
mov
and
test
inc
or
jp
lods
cmp
aam
add
clc
fnstenv
cmc
mov
mov
shrl
cmovs
mov
sahf
dec
pop
jns
pop
sub
cmpl
orb
push
xor
cmpsb
pop
pop
inc
jnp
cmp
xchg
xor
mov
mov
fstps
sub
pusha
mov
enter
jmp
mov
pop
aas
ds
leave
and
xlat
mov
aam
inc
xchg
ds
stos
mov
mov
test
mov
sub
fsts
sbb
arpl
lahf
fwait
clc
mov
sub
xor
lret
add
push
in
adc
data16
outsl
jp
ret
rclb
sbb
inc
stos
lods
mov
sub
stos
mov
adc
shl
ljmp
jne
cmp
sub
push
xchg
xchg
iret
jno
cld
leave
ret
jp
shl
imul
mov
popa
test
mov
xchg
fwait
dec
cmpsl
loop
out
xor
push
int
sahf
gs
das
cld
jno
add
out
xchg
les
mov
fcmovnb
pop
mov
aas
sti
es
mov
addl
mov
or
jp
arpl
cld
fisubs
dec
mov
mov
bound
cmc
mov
pop
fistpl
out
adc
lock
shlb
in
cmp
inc
in
outsl
add
add
mov
not
pop
lret
aad
out
adc
pand
cld
pop
mov
jbe
neg
loopne
mov
movsl
and
idivl
scas
sbb
loopne
or
subl
lock
scas
mov
ljmp
mov
mov
bound
and
or
adc
dec
outsb
lret
fnstenv
xchg
cmp
clc
pushf
and
pop
ss
pop
xchg
xor
xor
xor
movsl
mov
dec
push
push
xchg
adc
testb
mov
xor
fdivrl
sahf
xor
mov
sti
ret
pop
jp
scas
push
cmp
jecxz
dec
pop
clc
xchg
dec
leave
aaa
fsubl
imul
and
in
mov
decl
add
mov
jl
xor
cmp
mov
jle
jl
in
idiv
dec
lock
jae
imul
push
xchg
aam
xor
shll
daa
sub
mov
imul
adc
xor
mov
ret
shrb
sbb
add
fsubl
idivl
push
push
call
andb
xchg
cmp
add
iret
pushf
sarb
jbe
xor
jnp
push
jl
inc
jb
cmp
into
insb
ret
cltd
jno
scas
push
je
cld
push
adc
mov
cmpsl
mov
sbb
mov
and
icebp
into
add
mov
jne
and
dec
iret
les
rcll
js
test
dec
push
lcall
jle
flds
push
in
loopne
sub
jb
inc
xor
les
bound
lock
jb
mov
jnp
xchg
inc
stos
cmp
jb
mov
jnp
mov
jg
or
jmp
test
pop
xor
mov
sub
movzbl
push
sub
and
sbb
jno
das
insb
and
push
xchg
and
jns
mov
xor
sub
sbb
cmp
add
fisttps
dec
mov
inc
pop
add
clc
mov
imul
push
mov
xchg
fimull
jbe
insb
mov
push
out
imul
fldz
dec
and
mov
cmp
into
idiv
dec
ret
sub
inc
mov
stos
scas
repz
icebp
inc
scas
icebp
mov
mov
pop
lea
popa
aad
xchg
jmp
leave
cld
icebp
sub
call
xor
clc
fsubp
dec
xchg
push
xchg
push
out
or
shll
aam
das
jne
sub
xchg
gs
add
jnp
orl
iret
out
and
aas
mov
jno
xor
dec
pop
lcall
inc
jg
pop
stos
pop
insl
out
add
movsl
push
les
in
ja
out
mov
je
or
rolb
push
aam
push
jl
ljmp
add
mov
or
push
xor
mov
js
ret
push
test
cmp
out
test
sarl
mov
mov
jge
lds
fnstenv
stos
sub
cs
lods
repz
out
loopne
pop
xor
js
outsl
inc
push
addr16
mov
aaa
out
mov
jb
mov
and
ljmp
mov
xchg
fdivrs
popa
cltd
lret
shl
scas
lahf
test
out
fcmovnu
inc
loop
push
pusha
jno
add
mov
popf
cmpsb
sbb
cld
push
pandn
ret
loopne,pt
xchg
js
inc
leave
out
and
inc
loop
jno
pop
push
push
dec
pop
cmp
in
push
test
arpl
add
pop
push
and
in
ljmp
jb
imul
jbe
ljmp
pop
cmp
lods
lahf
cmp
loopne
je
scas
jle
stc
outsl
xchg
loope
test
cltd
push
adc
xor
popa
mov
push
test
inc
ret
lcall
dec
out
inc
push
mov
dec
pcmpgtw
incl
or
mov
sub
lods
pop
stos
jg
sbb
cmp
roll
push
data16
xchg
dec
cld
mov
outsb
pushl
mov
cmp
pop
jo
and
aam
mov
xor
dec
stos
aas
xchg
aad
ret
pop
test
jge
out
les
out
ret
repz
cmp
mov
xchg
insb
sub
mov
lea
add
inc
repz
imul
aaa
jnp
jg
iret
lcall
ljmp
test
cmp
xor
cmpsb
test
mov
imul
lea
xchg
call
and
mov
push
cltd
enter
xchg
cmp
and
pop
mov
decb
out
out
js
inc
ret
pop
loopne
icebp
push
outsl
push
fisubrs
cmpb
rcll
dec
out
mov
jl
jnp
data16
lea
mov
popa
ret
ds
sub
shrl
sbb
out
lret
dec
mov
aad
fldcw
add
mov
mov
xchg
inc
mov
in
bound
add
inc
pop
xchg
lahf
mov
loop
inc
add
adc
and
dec
dec
repnz
iret
cld
arpl
ret
push
imul
iret
rcr
loop
push
inc
lea
xor
xchg
sub
pop
clc
insb
es
leave
jg
inc
sahf
mov
fnstenv
sub
or
ja
es
aaa
push
jb
add
or
lods
mov
dec
sbb
cmp
mov
add
sub
lret
mov
xor
enter
xchg
mov
add
into
cmpb
xchg
loopne
adc
xchg
jle
push
dec
push
add
sub
jle
mov
sarl
xchg
push
sti
addr16
push
leave
inc
scas
pop
inc
and
push
fs
xchg
fs
outsl
rcl
icebp
inc
jge
xor
repnz
mov
jmp
lds
adc
add
cmp
xor
fnstcw
movsb
ds
push
and
shl
outsl
cmp
out
jg
jg
jbe
pop
push
es
test
call
jle
xlat
ds
stos
jge
repnz
addr16
cmpsl
iret
cs
cmp
inc
aas
rcrb
mov
sub
adc
push
ja
dec
mov
jns
jl
pop
push
xchg
cmpsb
in
cmp
jmp
jg
leave
fcomps
lock
les
jecxz
cltd
adc
pop
loop
xchg
xchg
cld
add
sub
adc
outsl
push
pop
pop
xor
mov
mov
inc
psrlq
pop
push
aaa
cwtl
cmpsl
dec
pop
scas
ds
fisttpl
mov
xor
jno
cld
leave
push
ds
testb
cli
icebp
xchg
or
fdivrs
lods
repnz
pop
jp
push
xchg
stos
mov
testb
imul
mov
xlat
lock
arpl
mov
inc
out
jns
lret
lret
iret
mov
lds
pop
jge
pop
int
mov
dec
mov
jns
and
cmp
sub
insl
push
imul
adc
rorl
push
faddp
aas
loopne
pop
push
int
jp
into
out
push
shr
mov
imul
int
xor
aaa
cli
inc
fistpll
jge
arpl
inc
in
mov
clc
pop
ljmp
pop
das
xchg
int
into
xlat
jmp
icebp
xchg
fcmovnu
dec
push
jo
adc
fcomps
std
mov
push
cld
insb
clc
jae
lock
ds
mov
adc
aam
mov
xchg
dec
xchg
push
shrl
pop
mov
aam
adc
dec
movsb
mov
mov
mov
cmpsb
lcall
mov
orb
nop
int
iret
daa
in
xchg
into
cmpl
repz
inc
dec
addr16
fsubrs
or
aas
bound
cmc
insl
js
mov
addb
test
mov
cmp
test
xor
sub
cli
jmpw
cld
leave
test
inc
iret
scas
fisubrl
ficoml
push
inc
fidivrs
push
gs
add
xchg
les
add
in
add
and
loopne
js
int3
lods
pop
pop
push
call
fildll
xchg
sbb
ror
cs
leave
jmp
inc
inc
addr16
xor
repz
test
inc
nop
sub
jecxz
and
and
aas
xor
imul
pop
inc
in
dec
mov
in
insb
out
gs
test
iret
lret
call
cmp
fninit
pushf
outsb
and
xor
pop
and
fdivrp
lahf
ret
out
xchg
dec
adc
popf
mov
clc
rorb
test
pop
aad
icebp
or
fidivrs
testl
sar
or
icebp
inc
sub
idiv
mov
or
sub
push
movsl
cmp
or
je
orb
lea
aam
push
aas
iret
adc
mov
lret
add
mov
jae
jno
in
sti
jns
movsb
andb
test
sub
je
insb
pop
cmp
add
add
into
mov
test
adc
cli
enter
sbbb
in
mov
mov
add
incl
loop
mov
and
mov
aad
mov
inc
scas
jbe
xchg
dec
cmp
mov
loope
mov
sub
arpl
aam
mov
wrmsr
cwtl
mov
in
out
pop
mov
sub
mov
aas
jg
lcall
sbb
ret
or
out
test
in
mov
leave
dec
sbb
sahf
jnp
fidivs
adc
out
pop
sbb
lahf
ftst
int
mov
sahf
and
sbb
cli
push
lods
bound
fwait
icebp
pusha
and
pop
leave
inc
cli
pop
xchg
in
imul
xor
jbe
mov
testl
ja
xor
mov
lahf
adc
pop
pop
mov
test
jecxz
pop
mov
imul
push
cltd
popl
cld
cmp
ds
adc
pop
xlat
out
in
sbb
mov
lcall
xchg
popf
fs
popl
sbb
mov
popf
out
inc
mov
cmp
bound
in
pop
add
cmp
fwait
cwtl
xchg
movsl
in
cmpsl
dec
idivl
in
arpl
mov
xchg
xor
rorl
out
jb
push
xchg
xchg
in
sub
fcoml
arpl
xor
pop
pop
dec
cmp
mov
fnstsw
outsb
addr16
xor
cmpsl
pop
mov
dec
cmpsl
xchg
mov
pop
inc
enter
sub
mov
sub
or
push
jmp
out
fistpl
outsl
out
pop
xchg
in
mov
mov
jne
movlps
dec
sub
and
sti
les
outsl
jb
cmp
lock
pop
push
fidivs
inc
arpl
and
pop
mov
cmp
pop
in
arpl
add
out
mov
sbb
or
cld
rcl
and
dec
addr16
icebp
add
outsl
leave
and
outsb
arpl
les
and
cmp
loopne
push
cmpsl
sti
addl
adc
scas
dec
ss
and
call
pop
sti
in
outsb
mov
das
out
pop
adc
xor
fsubrl
fidivrl
std
add
cli
outsb
aas
jae
fistpll
out
hlt
jns
gs
scas
sbb
pop
cmpsb
sub
sub
fisttpl
dec
sarb
andl
jle
push
mov
jg
aas
pusha
inc
test
dec
jl
adc
sti
mov
pop
and
pop
pushf
inc
iret
sub
nop
ret
repz
sbb
jns
mov
aaa
movsl
jae
loope
rorl
mov
sahf
jp
xchg
mulb
mov
fyl2xp1
jb
dec
and
leave
xchg
bound
cmc
xchg
fidivrs
mov
lds
cmp
rep
add
add
pop
fcompl
leave
mov
add
add
push
fimuls
mov
add
sbb
pop
mov
mov
stc
rolb
inc
mov
aas
pop
cmp
repnz
popa
sbb
jmp
ja
add
clts
sbb
or
test
pop
jle
sarl
pop
cmp
cli
test
int3
dec
push
add
jne
ficomps
ljmp
sti
leave
jmp
jae
pop
lret
aas
push
in
mov
mov
sub
jp
lret
pop
pop
xchg
dec
js
out
push
jle
mov
jecxz
jo
pop
mov
jnp
and
fwait
xchg
das
movb
mov
mov
out
mov
adc
mov
sbb
bound
xchg
jns
jae
mov
cmp
xor
scas
dec
out
jne
pop
push
adc
enter
pop
repz
out
ja
jb
in
sbb
outsb
filds
subl
pusha
cmc
fstpt
into
sub
movsb
iret
rolb
add
mov
andb
leave
sar
and
fadd
clc
inc
cmpsl
cld
call
outsb
mov
jns
fimull
mov
lret
aam
and
fdivl
inc
das
es
cmp
imul
aad
clc
pop
mov
mov
sub
push
adc
imul
pop
test
iret
push
aam
in
jg
out
shl
fwait
dec
aam
lods
push
xor
dec
xor
mov
add
dec
or
mov
pop
pop
xlat
jg
aad
sbb
out
push
xor
movsl
mov
adc
fwait
mov
pop
roll
cmovg
cwtl
xor
aad
lock
daa
stc
xchg
cmp
nop
dec
leave
fisubl
jge
jge
call
shlb
and
mov
add
divl
fiadds
nop
popf
fildll
ds
leave
ret
push
sub
test
jbe
fisubl
pop
mov
aam
repnz
rcl
mov
pop
xchg
divb
ret
mov
jg
and
sub
popa
fwait
pop
or
mov
cmp
mov
fimuls
xor
icebp
jno
bound
stc
popf
jb
inc
incb
test
imul
clc
out
lea
std
push
imul
pop
daa
push
jae
push
int
cmp
mov
loope
movsl
fsubrs
mov
jae
and
into
shr
aas
aam
sub
add
mov
popa
mov
inc
lea
xchg
rolb
jle
jle
inc
xchg
repz
data16
icebp
test
lock
pop
and
jns
outsl
mov
push
lret
push
lock
lcall
adc
jbe
dec
or
dec
or
fwait
arpl
shrb
pop
cmp
mov
into
popf
fs
mov
xchg
sar
xor
cmc
ret
pop
repz
or
jecxz
sahf
push
sahf
test
fisubrs
divb
incb
iret
mov
fstpt
cwtl
dec
push
es
lcall
mov
push
and
aad
dec
add
sti
cmp
pop
pop
mov
and
arpl
jp
pushl
cmp
mov
roll
cmp
lock
mov
int
mov
fstl
test
cmp
jno
jg
add
repnz
sub
sti
mov
imul
out
fistpl
and
mov
ds
outsl
xor
and
fwait
cwtl
fnstsw
pop
pop
pop
adc
jns
imul
test
xchg
daa
jne
fadd
inc
call
jno
popf
aas
inc
push
mov
arpl
and
leave
mov
loope
cmp
out
outsb
insl
jle
mov
mov
jle
mov
mov
or
xchg
inc
shll
mov
push
pop
into
sahf
inc
cmpsl
mov
ljmp
addr16
cmp
int
cmp
pop
orl
push
xor
mov
ss
imul
outsl
loope
mov
add
add
jne
sbb
xchg
data16
shrb
jns
jnp
jno
inc
xchg
lahf
ja
mov
stos
xchg
jb
lods
dec
push
sub
leave
cmp
outsb
jp
in
mov
adc
ret
mov
inc
mov
add
sti
and
xchg
cmp
mov
stos
inc
xchg
fdivl
dec
fldl
cld
add
pop
inc
lock
cli
pop
jmp
cmpsl
incl
rol
xlat
xor
mov
and
dec
ds
xchg
sti
dec
int
leave
sbb
popf
dec
out
xchg
push
pop
mov
mov
xor
push
cmp
fsts
gs
sti
push
xchg
fbld
sarl
dec
test
xlat
xchg
in
ret
out
dec
and
mov
sbb
fnstsw
pop
pop
mov
lods
dec
outsb
pop
enter
push
fcmovb
jbe
fstpt
gs
xchg
cmp
loope
jnp
add
pop
adc
ret
cmova
int
push
mov
adc
push
addl
fisubrl
popf
push
cltd
xchg
mov
jo
jno
jo
leave
jcxz
sbb
mov
shl
jne
push
pop
lods
fistpll
adc
jo
repz
ds
sti
addr16
jno
ficoms
push
rcr
xorl
adc
jb
xchg
mov
jbe
cmp
mov
in
std
js
cmpsb
xchg
sub
and
in
mov
dec
xor
xchg
out
sahf
add
mov
repz
sub
xchg
adc
cmpl
inc
sub
add
add
or
js
xor
pop
push
mov
xor
mov
push
lods
push
mov
mov
inc
jg
nop
jecxz
pop
test
jmp
mov
lock
lret
cmpsb
pop
insb
or
outsb
xlat
pop
jns
adc
pop
clc
scas
jno
mov
aam
and
pop
xor
js
insb
shrl
data16
jg
addr16
jge
cmpsl
dec
fwait
and
rcrb
jns
ds
aas
jo
inc
sub
dec
popa
pop
ret
gs
loop
int
sbb
jns
fwait
pop
mov
mov
inc
in
stos
fwait
inc
test
xchg
psubd
les
fldenv
xchg
mov
pop
outsb
das
jae
pop
xor
pop
stos
popf
add
mov
add
xchg
mov
push
test
mov
aaa
cmp
shlb
inc
clc
addb
sbb
push
and
and
xchg
test
mov
cld
cs
sbb
lea
cmp
test
pop
ja
loope
data16
xor
jecxz
adc
sbbl
shl
sar
mov
sub
or
test
in
mov
popa
mov
sbb
cli
seta
push
adc
adc
cli
mov
cwtl
andb
mov
or
pop
icebp
xchg
aad
dec
xchg
inc
mov
or
jge
pushw
pop
or
testb
add
dec
into
gs
mov
sub
jno
or
aas
jg
xor
loop
xor
testl
fmull
hlt
imul
fisubs
pop
push
out
int3
jo
sti
in
ljmp
pop
mov
sub
xchg
gs
sub
mov
jp
cld
cmpsb
icebp
cmp
xchg
scas
cmp
xor
aas
jmp
iret
into
aas
out
divl
pop
std
fmull
imul
movsl
std
into
jnp
fstl
jno
and
pop
pop
jns
mov
dec
inc
xlat
ljmp
adc
shlb
loope
sahf
add
aam
and
mov
mov
xchg
imul
hlt
cmp
in
cli
leave
cld
inc
or
not
adc
imul
iret
sub
jo
andl
jns
setp
lahf
movsl
dec
push
xchg
sbb
mov
jns
insl
push
push
fidivl
pop
mov
dec
idiv
or
and
inc
hlt
imull
pop
cmp
fidivrl
mov
mov
int3
ja
jge
add
push
jae
mov
adc
out
lahf
dec
mov
jle
mov
and
loopne
mov
adc
mov
out
adc
push
call
jbe
pop
mov
ja
inc
sbb
and
sti
xchg
sub
adc
inc
fistpll
insl
inc
mov
mov
mov
xchg
pop
pop
dec
sti
shl
dec
jp
xor
and
leave
pop
xchg
mov
repz
mov
js
adc
faddl
movsl
bound
ss
scas
jno
sti
mov
test
adc
bound
imul
iret
jae
popa
push
je
sbb
xchg
xlat
fwait
add
ds
jo
pop
std
xor
xchg
imul
pop
scas
outsl
mov
mov
in
mov
mov
push
lret
retw
cs
mov
cmp
jp
jns
mov
mov
sub
imul
push
adc
jbe
mov
mov
ficoms
mov
push
push
iret
andb
cmp
jno
pop
mov
adc
fsubl
add
inc
pop
or
icebp
add
pop
lods
es
xor
or
sbb
inc
jo
mov
cli
aam
mov
inc
fcoml
je
pop
stos
cwtl
jae
test
inc
inc
push
pop
push
sahf
or
mov
pop
mov
jns
jbe
xchg
cmp
push
jb
stos
in
push
mov
push
test
lret
pop
sub
mov
lds
pop
sub
call
imul
fwait
mov
les
cmc
mov
push
out
inc
jb
lret
jb
lahf
shl
jg
dec
imul
loop
xchg
loop
xchg
dec
negb
add
cmpsb
cld
cmp
cli
pop
popf
or
imul
mov
jecxz
sub
or
pop
xchg
mov
in
cmp
xchg
jp
rcrl
icebp
mov
pop
cmpsl
xchg
rcll
popl
aam
pop
inc
xor
out
dec
sti
test
jle
test
bound
xchg
add
and
into
loope
mov
or
add
mov
jg
test
clc
sub
inc
jp
push
sbb
scas
sbb
adc
pop
mov
mov
inc
inc
mov
inc
pop
es
cwtl
cld
sub
pop
jp
loopne
mov
pop
mov
fwait
lahf
jne
sub
mov
lods
movsl
dec
aad
jmp
adc
pop
jg
xchg
sahf
pop
sbb
mov
mov
mov
mov
sahf
pop
mov
lcall
jl
xchg
test
hlt
pop
and
mov
mov
jae
inc
ja
xlat
add
cld
cmp
stos
pop
into
stos
pop
dec
xchg
push
inc
pop
cmp
cmp
aaa
out
cmpsl
shrb
or
nop
mov
lds
into
test
push
or
fmuls
in
data16
in
rcrl
imul
iret
sar
push
testb
mov
call
lods
rcrb
push
jle
pushl
stos
dec
mov
jmp
fwait
sub
gs
pop
sub
roll
les
sarl
pop
clc
loope
dec
mov
push
push
popf
out
shlb
ja
add
testb
aad
cmp
sub
push
insb
lods
cmp
cmc
and
scas
sub
jp
sbb
fnstenv
out
xchg
add
out
jecxz
ljmp
cld
aas
adc
sbb
cld
xlat
nop
mov
outsb
fmuls
rcrb
xchg
mov
in
sahf
cli
cmp
push
ret
and
xchg
pushf
pop
add
imul
cmpb
mov
mov
push
xlat
setnp
add
or
stos
repz
icebp
or
stc
aas
repz
arpl
cmp
das
mov
add
add
ret
mov
movsb
fisubrl
aas
pop
out
test
call
sub
out
mov
and
fdivr
fisubs
jne
test
aad
xor
stos
mov
push
in
insl
enter
ret
outsl
hlt
mov
cli
mull
jnp
jnp
mov
stos
sbbb
cmp
and
call
pushl
jne
in
push
out
and
out
adc
jns
jnp
iret
gs
pop
mov
out
adc
add
add
fcmovbe
mov
clc
mov
addb
call
jbe
jp
pop
mov
in
xchg
fisubs
cmp
adc
jle
dec
adc
and
ja
pop
jecxz
xchg
sub
ljmp
pop
push
xor
push
je
and
pop
stc
jge
cwtl
cmp
fisttps
adc
jle
aas
jns
add
xchg
cmpl
cmpsb
cmpl
fstpl
incl
sbb
or
or
pushf
dec
inc
paddsb
mov
test
pop
std
imul
loop
or
push
data16
insb
aad
mov
push
inc
orl
xchg
in
leave
push
cwtl
ss
pop
cmp
lret
pushf
cmp
jo
fdiv
je
insb
cld
popf
and
aaa
in
les
dec
and
in
jb
bsr
adc
js
mov
dec
in
or
jns
test
addr16
mov
jge
sbb
test
jnp
and
enter
cmc
pop
push
inc
sbb
ret
repz
mov
test
sub
adc
out
jge
or
aas
loopne
lock
dec
cmp
orb
add
cmc
or
mov
fstl
jecxz
sbb
push
jns
aaa
lods
insl
push
bound
push
repz
mov
mov
sbb
dec
adc
out
and
ljmp
mov
jle
jl
fwait
jg
ret
aas
test
push
pop
sbb
inc
mov
mov
fcoml
and
add
mov
dec
and
data16
sbb
pop
ds
arpl
imul
in
nop
jo
pop
pop
js
sahf
cmp
aas
sarb
scas
andl
sub
test
mov
mov
pop
push
pop
ljmp
add
push
push
in
and
add
pop
and
jge
jecxz
xchg
jp
leave
pushl
dec
pop
outsb
lock
sbb
lock
repz
inc
popa
xor
subb
mov
mov
outsb
jnp
loop
jae
bound
loopne
movsb
mov
push
lods
mov
test
mov
jae
dec
sbb
pop
stos
push
lock
daa
adc
jo
sub
fidivrl
pop
pop
push
jno
jmp
nop
cmp
cmp
sti
dec
mov
sub
cli
movsl
sub
inc
lods
jns
scas
inc
cmp
jl
jp
sub
movb
aaa
dec
icebp
rep
dec
jle
jg
mov
mov
or
mov
jnp
mov
pop
imul
incb
xchg
rcrb
mov
push
fnstsw
and
fwait
cmp
adc
ljmp
pusha
push
gs
or
movsl
sub
jecxz
ljmp
shll
xor
or
push
jae
divb
testl
popa
inc
mov
iret
jne
mov
mov
adc
ja
xchg
shll
rorb
mov
xchg
xor
cwtl
push
xchg
leave
aas
cli
xor
cmp
mov
and
inc
nop
jp
mov
movsb
xor
cli
inc
das
or
mov
dec
outsl
push
test
xchg
cli
cmp
test
add
add
cmc
je
mov
fwait
cmpsb
sarl
cltd
and
rolb
loopne
mov
xor
rorl
popa
pop
add
xchg
ljmp
mov
daa
pop
lret
cmpsl
out
xchg
lret
lds
pop
inc
add
stos
jle
jns
lods
lock
inc
inc
jae
inc
push
jg
jp
pop
in
popa
addr16
xchg
dec
fildl
xor
in
icebp
iret
idivb
aad
imul
mov
cmpsl
add
inc
mov
jb
movsb
fst
ret
mov
cld
pop
cmpsb
sbb
xchg
js
cmpsb
out
in
pop
dec
out
icebp
xchg
stos
cli
cmp
icebp
jg
jns
orl
gs
dec
std
xor
pop
aas
xor
scas
negl
cmp
inc
pop
inc
jle
jg
xchg
jb
cmpsl
dec
pushf
fcmovnu
xchg
xlat
mov
aam
jmp
pushf
push
lea
popa
ljmp
fsts
xor
loop
bnd
push
popa
out
adc
jns
push
out
adc
inc
orl
pusha
scas
aas
xchg
mov
mov
fidivrl
fdivrl
pop
repnz
out
jmp
xchg
xchg
cmc
sub
notl
das
xchg
mov
clc
ds
aas
jle
ret
dec
lahf
stc
add
xchg
pop
adc
push
push
mov
ds
test
movsl
cmp
pushf
js
jecxz
fs
xchg
adc
push
fwait
push
and
xor
shr
rcr
and
lcall
cmpsl
mov
mov
push
mov
decl
jo
fdivp
cli
inc
cmp
push
mov
jb
mov
js
out
cmpsb
leave
cmp
mov
xor
sub
imul
cs
or
mov
das
mov
jg
or
jo
outsl
jb
negb
jae
out
pushl
cltd
adcl
mov
fdivrl
pop
fwait
out
and
mov
adc
fsubl
jmp
jo
and
and
test
push
lret
out
push
jnp
jmp
or
in
or
pop
push
loope
jns
pop
mov
ljmp
cmpsb
addl
inc
xor
push
sarb
mov
cld
rcrb
imul
mov
popa
imul
inc
fnstsw
and
jg
fistps
ja
cmp
adc
fisubrs
jmp
fimuls
cltd
fs
repz
js
cli
bound
dec
cmp
daa
imul
mov
xchg
test
push
leave
nop
mov
test
leave
bound
shlb
inc
jle
jl
and
add
js
inc
mov
jge
fstpt
mov
mov
mov
cmp
add
sarb
dec
enter
lret
dec
mov
mov
mov
cli
cli
cmpb
out
inc
aad
aas
aaa
or
mov
jmp
pop
icebp
jmp
inc
scas
iret
sarl
jb
add
arpl
fstps
scas
in
fs
jp
test
add
aam
mov
jle
popa
cli
jp
cltd
lahf
les
sti
or
jmp
rorb
arpl
adc
sbb
loope
ror
iret
fimull
pop
xchg
ret
dec
ret
rol
mov
pop
push
mov
add
jg
imul
jb,pt
loopne
pop
leave
push
adc
add
in
sbb
cli
jle
and
adc
add
xlat
ds
das
aas
or
mov
and
xchg
jecxz
fidivrl
out
pop
jp
mov
add
loopne
je
cmpsb
pop
scas
enter
in
out
xlat
jae
fdivrl
arpl
stc
mov
into
push
cmpsl
add
sahf
es
dec
shl
icebp
loop
inc
push
sub
push
cmpsb
pop
jb
mov
clc
sbb
sbb
mov
js
mov
std
jecxz
ficomps
imul
xor
arpl
jae
push
inc
fists
std
cmp
ds
in
lret
jecxz
adc
cmp
movsb
xor
jl
pop
test
loop
xchg
inc
popa
fmuls
mov
pop
mov
arpl
out
jp
cmp
pop
ja
lds
mov
rclb
sub
pop
std
out
or
push
popf
sarb
lret
fcmovu
nop
mov
lahf
dec
jae
cmc
jl
mov
loop
leave
xor
pop
pop
and
mov
push
jge
and
xor
testl
daa
nop
mov
inc
mov
and
jno
sub
sbb
pop
and
jbe
mov
popa
cmp
pop
jbe
fnstcw
pop
mov
mov
jmp
xchg
adc
or
mov
jb
mov
pusha
pop
sbb
movsb
icebp
adc
xchg
addb
roll
mov
rolb
cmp
popf
arpl
jnp
dec
fisttps
fmull
stos
sub
adc
mov
iret
dec
xchg
cmp
lcall
loopne
mov
add
int
push
aas
fmuls
jbe
aam
xor
nop
cmp
or
mov
addr16
clc
add
test
cmpsb
stos
repnz
and
cmpsb
jmp
and
and
xchg
cmp
inc
xchg
das
test
pushf
enter
je
jecxz
inc
sbb
arpl
pop
mov
loope
inc
sbb
jnp
mov
bound
pop
pop
or
mov
mov
jp
int
inc
xor
mov
push
sbb
test
push
sbb
cld
addl
jge
es
cmp
cld
or
push
lods
int
data16
jp
lahf
or
subl
inc
outsb
xchg
inc
xchg
cmp
movb
cs
in
sbb
cwtl
and
push
inc
lret
jge
movsl
xchg
sub
mov
lret
jnp
jge
out
xchg
jl
xchg
bound
sbb
push
nop
jbe
fstl
es
call
mov
std
sarl
mov
lds
sub
test
sarl
lea
int
adc
inc
jns
fiadds
repnz
cmp
xor
imul
das
test
imul
ds
add
int3
add
mov
sti
out
add
dec
inc
ficomps
push
mov
out
mov
clc
lea
mov
add
pop
in
out
xchg
mov
push
jo
fisubs
jnp
sbb
imul
jp
and
push
mov
push
out
lds
incl
xchg
inc
jo
imulb
repnz
lods
push
loope
out
aad
popa
xchg
push
rcr
andb
mov
out
jae
xchg
icebp
lds
addb
or
jnp
imul
jg
fistpl
in
lahf
mov
fdivrp
lods
pop
call
inc
add
out
lahf
aas
cmc
jl
out
inc
or
add
jbe
jno
xor
push
xor
jno
subl
aam
or
sbb
setbe
outsb
mov
cmp
jbe
pop
jp
lock
out
mov
lds
mov
sbb
sbb
dec
xchg
cld
lea
pop
inc
pop
stc
mov
aam
les
push
jmp
out
and
inc
adc
mov
xlat
out
sbb
loop
xor
pop
arpl
add
outsl
out
push
aad
sbb
ljmp
icebp
fmuls
xchg
jns
out
ret
add
fsubs
test
les
fildl
dec
pop
and
sar
pop
jle
orb
cmp
push
orb
xor
iret
xchg
jae
in
ja
mov
leave
out
inc
mov
in
sbb
sub
test
add
test
sbb
repz
or
imul
mov
cli
adc
mov
fdivs
fsts
push
int
pcmpgtb
push
sbb
push
sbb
pop
mov
add
mov
sbb
inc
and
lcall
pop
mov
test
and
test
popf
xchg
into
subl
scas
sub
or
add
xchg
adc
mov
add
and
incb
adc
fistps
ds
jp
adc
adc
mov
pop
lret
jp
push
dec
xor
data16
repz
test
pop
scas
loop
shl
pop
scas
lret
aam
int
outsl
mov
outsl
arpl
cmpsb
cltd
mov
push
xlat
sti
jne
icebp
jmp
sti
fdivrp
scas
jle
ja
sti
pop
jne
test
pop
jecxz
dec
mov
ljmp
aas
ja
mov
sub
pop
sub
xchg
ljmp
sbb
jae
xchg
jno
test
or
cli
imul
xor
ljmp
sahf
cmp
pop
outsl
push
fiaddl
push
mov
mov
sar
andb
dec
or
push
inc
mov
jbe
add
insb
xor
bnd
dec
add
push
out
push
push
jbe
jg
mov
jo
pop
cltd
stos
sahf
inc
ss
js
mov
mov
add
insb
jg
fdivs
add
out
or
adc
lds
cmp
mov
daa
pop
sahf
cmp
imul
lock
ret
sbb
lret
movsb
sub
sub
sbb
aas
or
mov
xor
jg
movsl
scas
sarl
sbb
cmp
lahf
add
and
or
cmp
cs
shll
add
lahf
jp
xchg
rcl
insl
fwait
add
push
js
movsb
inc
mov
insl
and
add
fwait
add
movsb
fdivr
add
leave
add
sbb
xor
jb
inc
lds
and
repnz
negl
dec
add
dec
add
and
rorl
cwtl
cmp
xlat
adc
fstps
mov
cs
pop
addr16
fildll
test
arpl
pop
push
xor
icebp
push
dec
scas
mov
test
xor
pop
mul
clc
cmc
cmpsb
push
popa
jg
test
decb
mov
jnp
push
jbe
aad
in
ss
aaa
test
fcomps
xor
ss
inc
add
fdivl
ffreep
pop
mov
push
arpl
jbe
filds
dec
add
pop
xchg
cltd
cmp
data16
mov
add
ret
ds
push
repz
enter
add
pop
jns
cmp
mov
sahf
or
es
jg
sub
retw
cs
aad
in
xchg
add
xor
fcmovnu
lds
loopne
aad
lea
pop
in
rclb
jecxz
test
cwtl
adc
and
adc
xor
jae
lock
xchg
nop
ljmp
xchg
pavgw
cmpsb
insl
cmp
mov
cwtl
xchg
push
minps
xchg
mov
decl
pop
jg
sbb
xor
cld
ret
sbb
xor
add
add
fisttpll
sub
sbbb
xor
and
sub
push
xchg
sbb
fdivrl
cwtl
shl
inc
mov
and
out
pop
jg
mov
stc
pop
adc
lcall
xchg
adc
fsubrs
lahf
adc
or
iret
lods
jge
popa
push
lret
out
aad
push
sbb
pusha
dec
or
arpl
popa
jne
mov
popa
lahf
dec
arpl
push
pop
les
jge
pushl
pop
leave
insb
cmc
mov
movsl
andb
pop
ss
stos
out
dec
movb
pop
loopne
mov
aas
push
xor
mov
inc
cmp
pop
ror
je
je
cltd
lods
cwtl
jne
or
cltd
mov
jg
nop
jns
mov
leave
jl
lds
pusha
gs
lahf
inc
popf
push
cmp
outsb
loopne
mov
lds
sbb
nop
jo
add
adc
dec
jp
ret
mov
inc
loopne
push
cmp
aas
add
xor
pop
enter
mov
mov
jecxz
lcall
xor
add
sbb
cmp
inc
jbe
inc
cmpsl
cmp
push
clc
clc
out
pop
jo
or
mov
imul
lret
arpl
xchg
xor
js
mov
jns
out
nop
scas
push
stc
sbb
dec
push
inc
lock
mov
lea
aas
inc
adc
jle
mov
jns
inc
ja
jle
mov
addb
dec
sub
jae
jge
cmp
subl
pop
pop
in
addr16
lock
loopne,pn
push
xlat
jecxz
ret
std
pop
outsl
inc
hlt
lcall
add
adc
and
inc
ficoms
fmull
pusha
mov
outsl
ljmp
nop
stos
cs
dec
aad
add
hlt
out
dec
arpl
pop
aas
dec
cld
mov
data16
repz
mov
cmp
add
push
inc
pusha
cmp
sub
and
sub
cltd
jne
jns
jns
pop
inc
popa
cli
int3
dec
cltd
insb
inc
outsl
insl
mov
or
push
xchg
popa
imul
cld
inc
in
jo
pop
xchg
dec
rolb
movsl
lcall
and
addr16
lea
test
xchg
add
push
iret
test
mov
cmp
pop
xchg
clc
dec
jne
outsb
jno
ljmp
pop
jno
dec
rorb
xchg
and
iret
adc
pop
sbb
push
add
inc
push
jns
ja
les
push
mov
push
add
and
fwait
test
or
int3
imul
fildl
out
jne
push
scas
ss
mov
addr16
pop
test
jo
add
rol
into
shll
fistl
mov
sbb
adc
out
sar
fdivs
pop
push
xchg
mov
icebp
iret
daa
sbb
add
lods
push
mov
fwait
dec
pop
ds
in
sub
and
out
mov
cli
fnstcw
rcl
adc
sti
js
jp
sub
mov
dec
dec
pop
int
cmp
lcall
add
cld
mov
mov
push
pop
adcl
aad
adcl
out
sbb
cmp
dec
fdivrp
js
mov
inc
ljmp
sub
cmpb
push
jb
outsl
ja
nop
push
xor
mov
jl
adc
aam
movlps
adc
inc
xchg
jle
add
push
push
xchg
cmpsl
jne
mov
adc
pop
sbb
loop
inc
arpl
jo
adc
aad
adc
out
mov
push
mov
adc
in
pop
xchg
imul
xlat
pop
incl
jmp
scas
jge
loopne
sub
dec
xchg
sti
mov
lock
fcmovnbe
bound
push
popa
sbb
rcll
dec
inc
inc
add
and
mov
xchg
shl
outsl
cmp
enter
inc
lcall
lahf
xlat
arpl
adc
cmp
push
push
jb
dec
addb
rol
int3
lahf
dec
jnp
mov
mov
incl
add
lret
mov
inc
xchg
inc
push
out
mov
test
xor
or
int
sub
lret
popf
hlt
add
adc
jbe
sub
fstl
fwait
outsl
out
cld
jno
pop
xlat
xchg
jge
jg
incl
push
push
shll
sbb
movsl
adc
mov
out
enter
add
adc
mov
mov
std
addr16
cmc
arpl
mov
pop
js
cmc
jbe
rcr
mov
cmp
call
and
sbb
and
subb
in
pop
int
sub
repnz
sbb
sbb
xor
sub
ja
add
testl
mov
je
jmp
push
xor
rcrb
ja
jnp
mov
imul
mov
inc
or
ds
stos
or
lahf
les
mov
movsb
ficompl
clc
pushf
lods
test
sarl
pop
popa
fwait
lret
xchg
aam
add
push
divb
ds
pop
mov
mov
xchg
mov
bswap
mov
cmp
pop
imul
loop
mov
mov
dec
dec
jnp
js
fsubs
adc
xchg
lret
idivb
add
mov
inc
pop
lcall
add
lret
sbb
cltd
int3
inc
pop
mov
out
lods
mov
push
mov
add
shr
pop
lcall
pusha
cmp
sbb
test
jne
xchg
jp
fmuls
cmp
jl
add
pop
fistl
mov
xchg
add
mov
jle
ret
gs
ret
add
js
cmp
bts
and
call
adcl
test
ret
fcoms
jno
cli
aam
jle
in
aam
popa
out
sbb
and
push
xchg
mov
js
idiv
in
test
cwtl
out
fstl
dec
push
push
fldcw
inc
push
ret
sbbl
or
inc
icebp
lods
mov
and
bt
inc
rorb
pop
movb
sbb
jge
aad
inc
adc
or
dec
test
int
jp
adc
dec
lret
mov
lcall
in
jo
out
data16
add
les
jno
je
push
rcrl
inc
sbb
stos
sbb
jo
and
mov
push
cltd
inc
out
adc
pop
and
pop
sbb
xchg
inc
daa
adc
in
fs
scas
lret
ja
fisubrs
sub
mov
adc
fimull
insl
mov
xor
xchg
mov
xor
mov
mov
movsl
push
fistpll
out
std
out
jle
cwtl
pop
xlat
insl
lds
xchg
outsb
outsb
stos
and
aad
inc
incl
push
aas
mov
sbb
decl
popf
arpl
shll
js
jo
test
sub
pop
mov
and
mov
jge
shl
test
dec
jl
cld
test
loope
jo
jbe
cs
sarl
lods
sbb
addb
fistpll
cmpsl
mull
xchg
pop
fninit
out
aas
inc
popa
sti
and
fistpl
daa
or
arpl
lods
popf
cmp
arpl
push
in
adc
lods
jae
or
xor
pop
rolb
imul
addr16
push
mov
fiaddl
js
mov
or
mov
mov
push
mov
jmp
shr
push
leave
iret
rcl
ds
inc
nop
xor
or
insl
outsb
push
les
lahf
mov
jge
jns
xor
pop
mov
mov
imul
roll
gs
ja
adc
mov
pop
xchg
ret
insl
mov
mov
lds
sbb
or
nop
inc
movsl
pop
fwait
les
test
lock
aam
sub
ss
xlat
mov
out
xchg
fiaddl
pusha
gs
popa
bnd
add
ds
shrl
movsl
hlt
in
gs
imul
pop
fcmovu
movsb
jmp
stc
ret
ljmp
test
pusha
add
mov
mov
lahf
push
icebp
rcrl
shlb
xor
out
fwait
lcall
jg
out
lahf
push
mov
dec
pop
jne
test
mov
jb
movsl
imul
repnz
inc
cli
and
sub
movsb
mov
loop
addr16
stos
and
mov
pusha
sbb
mov
xor
mov
mov
imulb
cmp
fimuls
dec
rolb
mov
mov
dec
clc
aaa
sti
out
pop
repnz
mov
in
sti
lods
pop
out
sbb
arpl
and
cld
dec
pop
lods
enter
xchg
in
popf
add
cmp
scas
out
xchg
insb
addl
pop
and
ficoms
cmpb
mov
xchg
in
pushf
mov
xchg
push
mov
cltd
ljmp
add
cs
jb
and
add
test
fnstcw
mov
mov
loop
mov
lods
into
adc
jns
idivb
cmp
mov
sti
jns
repz
xor
mov
lret
xor
add
jge
cld
mov
mov
fwait
or
adc
addb
and
dec
outsb
out
xlat
test
aas
pop
shrb
sub
popf
sbb
rclb
imul
es
cs
in
les
push
fadd
pop
or
std
add
clc
cmp
arpl
dec
inc
imul
hlt
jnp
push
jno
adc
lcall
jns
jno
out
mov
cmc
int
repnz
ja
pop
jno
mov
mov
inc
js
or
arpl
push
neg
xchg
rol
ficomps
and
cld
sti
pop
addr16
pop
xchg
sbbl
ds
fildl
in
jae
ja
hlt
add
jno
and
inc
add
rsqrtps
jmp
bound
pop
xchg
in
mull
ja
mov
mov
call
in
fadds
aaa
add
mov
dec
push
xor
cmp
dec
loopne
sub
adc
arpl
lret
popf
cs
and
mov
call
lret
outsl
icebp
les
cmc
jo
lret
and
lds
imul
adc
outsb
cli
inc
jge
xor
jae
fcomip
xchg
mov
fldt
and
ss
out
add
fsubs
and
sar
and
mov
jp
fildl
pop
mov
bound
sti
out
les
inc
out
xorl
mov
pushl
cli
aas
sar
shll
js
cs
push
jg
pop
sbb
in
inc
jge
push
lahf
inc
add
or
cmp
mov
pop
jnp
and
cld
push
out
xorb
lret
lea
jnp
jbe
ljmp
sbb
mov
aad
or
push
sub
adc
les
test
std
cmp
lods
movsb
sarl
movsl
mov
mov
pop
loopne
cmp
fldl
icebp
xor
jge
pop
cld
shlb
mov
mov
loope
jp
leave
adc
addr16
pop
imul
sbb
lahf
pop
lods
bound
leave
pop
push
fisubs
lock
push
jno
jno
push
insl
mov
sbb
cmp
adc
mov
stos
cmp
outsl
mov
outsb
push
xchg
movsb
ficoml
sbb
insl
mov
pop
popa
notl
dec
jecxz
pop
insb
sbb
stos
adc
push
lahf
dec
insl
cmp
xor
adc
push
idivl
clc
add
jl
mov
sub
mov
jne
lods
jge
int3
sbb
cld
ret
or
movsl
pushl
sbb
test
clc
cmp
jno
cmp
add
cmp
pop
insb
pusha
clc
jp
adc
mov
test
lcall
xor
cltd
pop
jno
lahf
add
leave
icebp
mov
add
lea
fbld
mov
icebp
mov
pop
mov
add
and
dec
repz
out
pop
fcompp
ss
jns
xorb
aad
lcall
inc
mov
addr16
jp
jp
sarl
imul
adc
jnp
cmp
rorb
jbe
jno
loop
jne
xorb
les
dec
sub
push
sbb
cld
pop
mov
adc
lds
jl
out
in
movsl
mov
fwait
addb
jb
add
add
fimuls
xchg
jecxz
jg
out
ret
lret
rcll
adc
enter
icebp
les
das
sahf
nop
fs
mov
inc
icebp
scas
lahf
jb
fadds
pop
xorl
inc
sarl
std
fwait
mov
inc
fldt
pop
std
jno
aad
js
xor
sbb
jbe
rolb
movsl
pusha
inc
insl
frstor
into
push
js
lcall
lahf
ja
fistpll
stc
repnz
popaw
arpl
xchg
and
cmp
jge
faddl
dec
jnp
mov
addr16
fcmovnb
xchg
sub
ja
mov
stos
cmp
js
fwait
std
xor
lock
mov
cmp
pop
jg
mul
jns
jne
jnp
ja
jae
push
fsubr
and
in
sub
jae
jge
sbb
arpl
adc
movsl
js
jge
jg
jnp
push
int
shl
cld
imul
jg
fnstsw
repz
fstps
mov
push
sub
jp
jecxz
ret
repz
mov
sti
push
arpl
ja
push
loopne
push
mov
fwait
mov
cmp
cmp
xchg
dec
mov
hlt
stc
dec
jbe
rcrl
ficompl
mov
movsb
aas
call
adc
sub
mov
icebp
ljmp
pop
mov
mov
jp
mov
aam
or
mov
sbb
sbb
pop
in
ret
add
mov
add
pop
inc
lcall
and
dec
xchg
adc
mov
js
add
lock
pop
test
pop
push
add
push
sti
mov
xor
fs
adc
insb
mov
mov
mov
aas
sub
es
push
scas
frstor
pop
mov
jp
lahf
mov
fmull
cli
lret
mov
fisttps
outsb
leave
mov
pop
mov
cli
and
lret
jno
popa
mov
add
xor
sbb
pop
pop
pop
shrl
out
cwtl
inc
fistpl
hlt
or
jnp
aas
dec
jle
mov
iret
adc
popa
jg
inc
fstpl
jbe
aas
jle
rolb
and
xor
ljmp
sahf
dec
jge
rorl
das
jg
push
push
inc
inc
fbstp
sbb
mov
inc
into
cli
ss
dec
and
jbe
iret
xor
dec
loop
aad
into
jae
fcoml
cwtl
sti
jno
cmp
xchg
cmp
test
outsl
aad
cli
lock
add
ljmp
orb
pop
outsb
cmpl
mov
push
popf
outsl
imul
inc
sahf
out
out
stos
mov
pop
jae
xchg
xchg
push
fistps
jbe
mov
xlat
jg
out
out
dec
dec
jne
push
bound
outsl
les
mulb
cli
fsubl
popf
je
sahf
jbe
xlat
mov
cwtl
loope
shrb
mov
out
and
scas
incl
pop
xchg
xchg
sub
icebp
mov
test
sahf
cmpsb
loopne
arpl
jne
jae
and
and
sub
popa
outsb
repz
ret
in
push
leave
idiv
cmp
into
fstps
fdivl
imul
jmp
mov
cmp
jp
loop
jno
pop
mov
imul
lcall
jl
dec
adc
jnp
adc
sbb
pop
mov
mov
insl
jmp
dec
pop
cmp
outsb
add
fsubs
add
lock
sbb
inc
lock
dec
xchg
sarb
and
jns
pop
cli
jo
insb
loope
iret
add
sub
push
movsl
xchg
jecxz
mov
and
scas
mov
arpl
imul
sub
jle
jg
cmp
psubq
loope
imul
psrlw
mov
xchg
xor
out
xor
in
push
aam
pop
add
shlb
sub
inc
ljmp
in
dec
inc
mov
pminub
shlb
clc
repz
cltd
orl
mov
cmpl
jp
xchg
fwait
mov
aam
aas
dec
push
and
pop
and
cmp
jecxz
pusha
outsl
dec
int
sbb
inc
sahf
lock
add
inc
pop
mov
in
inc
jo
jo
push
add
ds
jmp
or
sbb
fdivs
scas
fs
pop
test
jp
adc
or
jl
cs
inc
iret
outsb
jns
jg
inc
sahf
pop
push
mov
and
push
shlb
adcl
out
fstpt
xor
pop
es
outsb
sbbb
jbe
cmp
xor
and
ljmp
fcomp
cmpb
sbb
das
pop
cltd
cwtl
fstpt
sbb
and
scas
shr
cs
subb
jne
xor
sarl
mov
dec
xchg
or
mov
mov
movsb
adc
ret
int
lret
mov
jae
mov
cmp
jmp
dec
lock
fcomps
dec
outsl
insb
pushf
jmp
mov
jno
popa
cli
addr16
out
outsb
daa
loopne
fcmovnbe
push
stos
stos
xor
lahf
push
rcl
mov
sti
or
add
sahf
es
add
xor
mov
pop
in
or
neg
adc
sbbb
loopne
jmp
lods
push
rcrl
adc
out
lahf
pop
outsb
data16
pop
fisubl
pop
ds
lcall
test
loopne
inc
arpl
movsb
mov
cmpsb
pop
pop
jo
sar
repz
idivl
pop
and
fcmovnbe
orb
jnp
ds
fnstenv
ja
test
mov
rclb
pop
jge
outsb
in
jmp
cmp
les
xor
and
adc
bound
sub
mov
std
jnp
fs
dec
inc
mov
cmpb
sti
pop
rorb
mov
inc
sbb
mov
loope
rorb
out
pop
xchg
jns
jp
push
cmp
mov
adc
adc
push
and
jnp
and
daa
addb
mov
outsb
pop
sub
inc
lret
pop
jno
pop
imul
inc
ljmp
daa
sbb
or
jge
pushf
cmp
enter
xor
jo
pushf
lret
jnp
lods
fidivrl
je
mov
mov
gs
in
sti
mov
fnstsw
popa
out
mov
hlt
mov
add
outsl
aam
aaa
jnp
dec
mulb
mov
lahf
out
aam
sbb
mov
mov
jp
push
sbb
popf
mov
mov
pop
in
sbb
fsubr
out
add
and
add
lods
adc
outsb
cmp
jae
inc
ja
mov
sti
push
ret
popa
add
ret
add
daa
sub
js
outsl
pop
sahf
and
sub
push
xchg
mov
mov
testb
lods
sti
cmp
jne
stos
cmp
push
push
mov
data16
dec
mov
into
lods
add
out
aaa
fs
and
xchg
dec
fcomps
pop
dec
mov
jp
dec
ficomps
dec
push
dec
inc
scas
or
jnp
test
pop
lret
inc
cmp
lods
ja
mov
and
jno
divl
out
mov
shrl
pop
ss
push
loopne
add
cld
out
scas
popa
lret
fs
mov
push
adc
mov
dec
inc
fidivl
leave
fmull
dec
jnp
jno
xor
test
sub
out
pop
xchg
jne
lods
xchg
aas
cmp
mov
dec
rclb
jns
in
xchg
push
inc
inc
test
aam
jno
add
and
add
or
add
pop
leave
fs
sub
aaa
pop
mov
lock
dec
imul
mov
orl
fadds
call
sbb
out
repz
arpl
pop
fstps
add
cs
ljmp
jo
out
and
adc
jl
fs
dec
scas
lret
cltd
sbb
pop
lahf
sbb
push
cmovs
pop
mov
adc
sti
jnp
adc
jle
push
mov
aas
sub
jge
in
mov
jmp
pusha
mov
orl
or
jno
adc
data16
lods
sub
push
cmpsl
movsb
mov
std
je
in
incl
cwtl
sarb
xchg
arpl
aam
pop
and
and
adc
outsb
rolb
adc
pushf
add
mov
icebp
aas
insl
inc
cltd
add
aam
cmpsb
fadds
pushf
imul
icebp
imul
mov
icebp
fildl
jge,pt
mov
mov
or
cmp
rcr
mov
out
and
shrl
out
pusha
pop
imul
adc
mov
dec
clc
dec
xor
outsb
lock
or
imul
inc
sub
ret
lock
pop
add
xchg
inc
cmc
jno
test
push
jnp
push
mov
add
in
in
pushf
add
sbb
adc
mov
push
add
push
push
pop
into
cmp
sub
mov
add
jmp
inc
testb
arpl
xchg
jbe
fisubrl
in
mov
jo
in
sbb
test
jge
lds
jnp
dec
jnp
jb
jae
jp
cmpsb
pop
mov
jle
fidivrs
fcomps
inc
pop
rclb
inc
mov
push
mov
mov
jecxz
fmulp
mov
dec
push
insl
add
mov
lds
sub
sbbl
in
into
add
xchg
ds
mov
lds
sub
adc
jmp
push
push
out
lods
arpl
xchg
shlb
inc
fcompl
mov
and
push
push
out
cld
fldenv
outsl
arpl
add
fadd
jae
mov
fbstp
jae
xchg
or
jg
sbb
push
mov
inc
jg
fisubrs
jne
ret
inc
roll
push
mov
ljmp
add
lds
js
xchg
scas
pop
jp
xor
adc
push
in
out
movsl
aas
test
cmp
fs
cwtl
adc
icebp
inc
jae
cmp
cmp
add
push
out
xor
popf
adc
dec
cmp
sbb
xlat
add
sti
xor
push
pop
in
out
xor
loope
and
push
pop
mov
pop
mov
xor
pop
push
cwtl
jg
push
cmpsb
adc
out
hlt
jns
mov
xchg
mov
pop
pop
add
cmp
mov
and
or
adc
xchg
outsb
testl
xor
xchg
mov
sub
xchg
cmp
sub
add
dec
in
stos
xchg
xor
imul
sbb
add
pop
imul
dec
fistpl
fidivrs
mov
movsb
sbb
pop
insl
scas
adc
inc
mov
lcall
les
inc
xor
inc
xor
and
stos
adc
mov
aad
and
cwtl
jno
je
xchg
pop
cmp
jnp
push
pop
xchg
orb
inc
enter
jae
scas
mov
dec
push
popa
bnd
add
imul
hlt
and
xor
rolb
jecxz
or
ficoml
inc
inc
dec
cld
test
mov
dec
dec
mov
insb
jb
dec
scas
js
add
dec
jnp
cmpl
out
cmp
mov
jne
jnp
xor
jge
xor
jmp
inc
iret
and
test
sbb
sahf
cmp
mov
push
mov
adc
xor
push
enter
ret
loop
mov
imul
sub
inc
push
jno
mov
jecxz
mov
add
add
push
pop
fimull
mov
push
hlt
pop
pop
in
mov
bound
xchg
mull
adc
movsl
jae
pop
jo
test
sbb
add
outsb
das
ret
or
mov
push
sub
xchg
dec
push
push
data16
loop
adc
jne
cwtl
or
lea
cmpsb
test
icebp
sbb
jecxz
out
popa
sub
inc
add
loop
fimull
fsubr
imul
jp
sti
bound
jns
push
add
out
adc
outsl
mov
ret
bound
fstps
dec
rorb
fsubl
push
aam
cmp
aad
aam
push
fdivs
sub
push
pop
pop
sar
push
les
repz
rorb
adc
fdivl
mov
sub
sbb
inc
xlat
pop
cli
les
out
daa
xor
mov
pop
jge
std
mov
orb
lahf
sti
jbe
inc
dec
sbb
cmp
mov
push
lea
sbb
and
xor
lcall
push
in
outsb
jge
bound
push
jg
lods
xchg
push
xchg
jmp
outsb
sbb
dec
ds
into
pop
outsl
jae
stos
add
and
enter
sti
adc
pslld
cld
sub
xchg
fs
out
lret
inc
and
mov
and
push
mov
into
push
inc
lods
pop
mov
insb
stc
or
jae
mov
sti
mov
jp
cli
fwait
add
mov
pop
nop
pop
mov
fsubp
sbb
mov
jns
popf
cmpsl
pushf
inc
addb
cltd
orb
sub
jmp
xchg
dec
push
out
jp
lods
add
cld
sub
mov
out
jae
loop
mov
jge
je
mov
loope
jne
jmp
lds
fs
push
jns
push
jle
jne
cmp
lcall
sub
mov
xchg
fcmovnu
out
add
lcall
clc
orl
xor
mov
out
cmpsl
fisttps
ret
cli
js
stos
fildl
fldenv
out
push
enter
sahf
pop
popf
pop
fwait
nop
add
adc
fmull
mov
xchg
mov
addr16
scas
test
inc
mov
mov
aad
mov
push
jae
jecxz
jmp
roll
mov
sbb
outsb
push
sbb
das
mov
xor
scas
jge
pop
jne
das
mov
cmpb
inc
rcl
in
cmp
imul
push
mov
or
mov
jecxz
pusha
repnz
fcoms
ljmp
and
dec
inc
fnstsw
lods
pop
push
mov
jns
xchg
add
push
sub
mov
outsl
aam
xor
add
lcall
std
out
rorl
scas
aas
mov
cmp
inc
sub
push
jp
aad
hlt
jle
pop
in
inc
and
mov
subps
cwtl
arpl
dec
nop
mov
inc
xor
dec
in
sbb
mov
adc
rcll
sub
nop
fwait
arpl
repnz
sub
rolb
pop
pop
lds
cmpsl
sub
popf
fnsave
mov
pop
xchg
jecxz
inc
fisttpll
out
outsl
enter
jno
xor
jmp
mov
xchg
pop
stc
aas
or
rcrl
cmpl
cmp
cmp
lret
mov
inc
pop
negl
sub
in
sub
outsb
cmpsb
pop
cmp
int3
xchg
sar
inc
scas
cmp
push
sub
into
add
into
push
mov
imul
jno
scas
icebp
or
jp
inc
xchg
mov
sub
pop
cmpsb
inc
movsl
cmpsl
jno
loopne
mov
into
sbb
pop
mov
add
fcmovbe
pop
aam
jo
xor
js
mov
enter
xchg
sti
out
aad
or
inc
jb
mov
jmp
and
pop
inc
orl
jno
fucomip
pop
mov
cmp
push
jno
inc
mov
mov
push
pop
adc
mov
fstpt
mov
inc
scas
and
shll
fninit
in
and
mov
mov
and
jge
andl
test
inc
xchg
or
adc
in
aam
imul
bound
xor
xor
outsb
fsubrs
jmp
imul
fsubrl
or
shl
cmp
aas
fsubl
xor
iret
jns
mov
pop
pop
pop
icebp
push
mov
and
pop
jg
subl
xlat
mov
mov
fisubs
push
hlt
inc
iret
cmp
pushf
outsb
cmp
js
adc
outsb
pop
mov
mov
leave
js
rcl
gs
sbb
push
lock
loopne
sub
adc
push
push
or
out
mov
inc
fsubs
jg
add
mov
movl
lods
stos
cmpsl
jmp
in
ja
and
negb
repnz
in
xchg
mov
sti
push
adc
std
iret
jno
scas
xchg
lods
cli
mov
fmull
sub
out
adc
jns
outsb
leave
sbb
cld
dec
cltd
xor
scas
jae
xchg
ret
push
mov
into
scas
std
cmc
adc
add
sahf
and
jbe
enter
jl
dec
xor
push
cmp
jp
jno
adc
jecxz
int3
mov
fistpll
mov
jecxz
dec
jae
lea
push
fidivrs
jns
enter
hlt
mov
test
cmp
dec
dec
and
cld
cmp
popa
jg
ljmp
test
sbb
jp
daa
adc
jecxz
int3
mov
in
add
mov
jecxz
test
add
or
mov
sbb
push
sar
cld
ret
mov
in
faddp
hlt
inc
cmp
popf
pushf
fadds
shll
sbb
cmp
aaa
je
jns
jge
fmull
cs
test
fcmovnu
inc
dec
push
leave
clc
jl
out
mov
push
imul
dec
or
jne
xor
sub
add
cmpsl
sti
xor
sti
sbb
addr16
aam
jb
push
sbb
leave
shlb
cmp
scas
sti
inc
push
jle
imul
cmp
lahf
bound
inc
int
lds
adc
fmul
cld
ljmp
in
stos
stos
pop
adc
push
xchg
mov
aam
pop
clc
xchg
dec
repnz
sbb
jo
or
lahf
popf
xchg
sbb
mov
sub
fisttps
pop
mov
fisubrl
lahf
outsl
sub
cltd
adc
xor
unpcklps
dec
sbb
push
jno
aam
loope
mov
inc
mov
mov
dec
sub
jmp
and
or
leave
loope
scas
addb
add
mov
fisubrs
mov
or
xchg
mov
pextrw
cltd
lods
stos
pop
aaa
cmp
mov
cld
add
sub
stos
mov
sbbb
mov
in
mov
push
leave
jmp
cli
xchg
adc
add
out
inc
cmc
dec
aas
mov
jp
xchg
idivl
jnp
cli
cmp
call
pop
mov
mov
lock
and
out
cmovae
ss
fiadds
frstor
jae
xorb
and
ret
and
stos
out
cli
pop
icebp
adc
mov
inc
ljmp
fwait
iret
and
add
ret
rcrl
in
dec
out
movsl
or
jb
or
jg
sti
rcr
mov
clc
mov
lahf
add
cmc
aad
stc
sub
pop
sub
aas
rorl
es
push
mov
out
and
fcoml
jns
lock
xchg
lcall
jp
and
pop
jp
pop
sub
jp
xchg
scas
inc
cmp
aaa
mov
mov
fdivl
sbb
cmpsl
dec
mov
inc
fldl
imul
xlat
pop
rorb
mov
and
aaa
imulb
mov
mov
jae
push
fs
cwtl
and
fisttps
mov
jmp
sbb
aaa
xchg
jne
cmp
mov
repnz
mov
add
mov
mov
mov
movsb
out
sub
mov
sbb
pop
cmp
push
lcall
cltd
mov
pop
mov
fucom
outsl
out
cmp
mov
mov
in
sbb
les
jns
filds
out
sub
fisubrl
push
dec
fisttpl
insl
mov
pop
pop
insl
shll
fidivrs
xor
aam
lds
dec
inc
jg
cmp
push
outsl
jmp
dec
sti
xor
rol
mov
jns
xchg
stos
in
jns
jo
lods
push
add
or
jo
sete
inc
dec
imul
inc
cwtl
cmp
pop
sbb
and
lock
mov
mov
mov
repz
mov
aaa
cmp
mov
pusha
jno
mov
xchg
xlat
popf
mull
jne
mov
idiv
in
add
pop
mov
pop
into
xchg
js
add
addr16
sbbb
fistpl
mov
add
xlat
push
stos
dec
pop
and
outsl
sub
or
adc
in
shrb
stc
bnd
std
mov
xchg
jp
or
scas
add
outsl
hlt
sti
adc
popf
ds
test
clc
dec
inc
shl
push
out
ret
xchg
add
cli
mov
getsec
das
ljmp
jns
iret
inc
xchg
in
inc
js
jnp
mov
loope
mov
shl
mov
aas
mov
outsl
loope
xor
mov
xchg
jp
stos
jl
pop
aas
jge
int3
push
jecxz
sbb
movsb
call
cmp
lods
mov
push
fildl
imul
add
gs
jge
wbinvd
mov
mov
jl
int3
or
scas
push
out
test
adc
cmp
ljmp
mov
aad
push
ds
xlat
mov
out
movsl
test
adc
push
xorps
xchg
jecxz
out
push
and
lahf
cmpsb
sti
push
jge
cmpb
jb
pop
bound
sbb
sti
push
add
lret
lcall
mulb
add
xchg
adc
push
xorl
mov
insl
xor
jmp
popa
push
push
aas
dec
cli
jmp
mov
aaa
fldt
xor
xchg
repz
mov
xchg
mov
jle
fnstcw
lock
mov
adc
mov
enter
inc
dec
popa
xor
xorl
add
push
adc
mov
pushw
push
pop
in
push
push
leave
xchg
mov
inc
fld
jno
int
mov
popf
rorb
mov
in
pop
mov
rorb
sbb
dec
sbb
mov
mov
mov
fcompl
adc
lret
lret
xor
cmp
mov
mov
xorb
addb
mov
cwtl
sub
popa
xor
sub
into
cmp
popa
cmpsb
xchg
jecxz
inc
sub
push
mov
addr16
rcrb
jne
mov
pop
jo,pt
std
xlat
orl
aas
jne
jbe
inc
das
mov
clc
mov
jmp
mov
sti
ds
lret
scas
dec
out
mov
or
jb
jg
js
push
inc
cmp
cs
jle
cmp
es
jmp
cmp
movsl
or
cmpsb
imul
stos
cmp
test
jp
das
lcall
fiaddl
sbb
push
movsb
push
sarl
push
loope
test
push
push
addr16
shrb
xor
adc
mov
add
in
sbb
push
out
fcomp
cmp
aad
bound
xchg
out
sbb
jnp
xchg
test
cs
dec
stos
pop
aam
cli
fisubl
jno
jecxz
mov
in
lcall
clc
add
adc
add
bound
ret
and
cmp
cmp
ret
mov
shlb
loope
outsl
inc
inc
dec
scas
sub
cmp
out
shlb
out
or
jae
popa
arpl
pop
sbb
xchg
push
stos
mov
cmp
popf
repnz
lock
pop
mov
mov
test
mov
mov
jbe
dec
sahf
addl
cld
or
filds
push
xor
fdiv
mov
roll
push
add
pop
sahf
ljmp
scas
js
daa
repnz
sub
rcrl
cmpsb
repnz
xchg
jns
fistpl
dec
adc
call
mov
mov
jge
cwtl
or
or
aad
out
pop
add
fistpl
gs
pop
notb
stos
pop
push
jns
jne
mov
cmpsb
jge,pn
stc
add
pusha
add
jnp
fildl
mov
xchg
xchg
push
pushf
adc
add
in
push
loopne
mov
mov
inc
das
sarl
lea
in
pop
inc
dec
cltd
sub
mov
in
lcall
dec
add
imul
in
add
idiv
mov
out
pusha
cli
lds
addb
mov
mul
cmp
mov
ja
mov
mov
sub
mov
inc
loope
pop
push
jb
clc
out
mov
mov
addl
jbe
negl
and
cmp
popl
bound
push
sahf
jl
sub
add
lret
shlb
push
fcmovnb
shl
lahf
scas
xor
shrl
pop
mov
call
repnz
jno
jmp
insl
test
inc
jno
addr16
lret
ss
rcrb
out
cs
data16
mov
cld
stc
test
push
mov
inc
notl
xchg
sbb
jb
popa
jae
pop
cmp
cmp
push
or
popf
scas
push
pop
insl
mov
cmpsb
sub
adc
sbb
sti
cmpsl
push
mov
jl
out
add
iret
sbb
mov
push
fmuls
jge
andl
push
jae
gs
or
rcr
scas
push
pop
mov
mov
push
dec
roll
pushf
lods
xor
mov
mov
js
mov
jmp
mov
dec
ds
inc
xchg
jle
leave
fbld
xorb
repnz
rcr
out
jno
mov
cmpsb
aam
incb
pop
movsb
jbe
int3
jg
ljmp
aam
shl
pop
scas
mov
lock
dec
pop
lcall
int
mov
jmp
jno
imul
jbe
ja
jge
mov
pop
jns
sbb
sbb
xchg
add
lcall
xchg
std
popa
in
or
mov
xchg
cltd
movsb
dec
orl
and
push
int
or
mov
loopne
imul
mov
shlb
pop
cmp
cmp
arpl
lds
loope
imul
es
mov
mov
and
push
sub
loope
loope
jmp
lds
aam
pop
cltd
test
sbb
inc
jl
ja
ret
sbb
add
or
sbb
out
sbb
jnp
filds
and
test
and
jno
push
jnp
cwtl
aas
fs
xchg
ss
outsb
in
je
ss
push
mov
arpl
repnz
lods
jno
insl
mov
sub
cwtl
add
add
sbb
add
hlt
xor
out
mov
xchg
cltd
cmp
pop
leave
xlat
cmp
cltd
xchg
imul
mov
arpl
jp
jp
jg
popl
push
adc
add
inc
xchg
fadd
cmp
or
push
dec
mov
shl
inc
lcall
xor
test
out
mov
jns
jns
call
adc
cmp
loope
jnp
inc
mov
bound
inc
ja
imul
in
jnp
pop
in
cli
addb
jg
inc
mov
mov
ds
outsl
out
ret
lahf
insb
add
add
lds
cmp
movsb
or
add
out
sahf
inc
divb
mov
push
lahf
dec
jae
outsl
jl
in
clc
sahf
les
adc
cmp
scas
pop
fadd
mov
bound
cli
adc
loope
inc
call
jmp
enter
outsl
jge
pop
jge
add
imul
dec
push
cli
mov
add
pop
sub
and
sbb
lods
ss
xor
xchg
outsb
push
psubd
repz
clc
cwtl
push
leave
jno
or
addr16
clc
mov
lods
xchg
jmp
xchg
cmp
popa
es
loop
test
pop
push
insl
pusha
icebp
test
fldl
testl
and
cltd
cmp
cld
jns
jbe
xchg
mov
sbb
and
jnp
out
scas
fnstenv
dec
jae
xor
insl
mov
pop
rolb
or
fld
sbb
cmpb
pop
pop
adc
xor
dec
icebp
mov
jne
orb
or
or
jp
or
xor
loopne
lea
pop
jge
jnp
into
ja
mov
popa
cmp
fadds
subb
jmp
data16
inc
adc
outsl
sub
mov
imul
push
rorl
jbe
mov
test
inc
jb
xchg
test
add
sub
mov
xor
jnp
notb
icebp
mov
sub
cmp
adcl
jns
mov
js
fidivl
adc
scas
jns
jo
inc
push
jnp
push
imul
dec
jns
out
stos
add
inc
xchg
leave
jo
add
gs
jge
inc
adc
cmp
pop
lahf
into
gs
sbb
mov
push
or
rcrb
pop
or
add
test
push
subl
inc
imul
gs
add
push
or
out
xchg
sub
xchg
fucomi
fldt
mov
dec
inc
jno
dec
dec
movl
mov
hlt
sbb
scas
cmpsb
xchg
push
sbb
fiaddl
adc
sub
rorl
test
cmove
pop
mov
cltd
loopne
aam
lahf
sub
adc
int3
add
aam
loopne
inc
or
jns
push
inc
mov
addr16
arpl
xacquire
jl
jp
out
jge
jle
test
xchg
js
stc
add
sub
inc
xchg
mov
loopne
jp
fmuls
clc
mov
fdivl
fistpll
xchg
test
out
lds
fwait
lret
rorb
inc
mov
pusha
cmpsb
inc
cmp
jecxz
fldl
jg
inc
sub
jno
dec
fildll
mov
shrl
pop
sbb
jns
inc
dec
lret
out
sbb
fs
test
xchg
pop
pop
jno
int3
add
jle
add
xor
add
data16
cmpsb
mov
xchg
adcb
pop
cmp
xchg
movsl
xchg
jns
cs
mov
mov
loop
out
dec
bound
stc
bound
enter
jae
adc
xchg
call
test
jge
aas
dec
sarl
es
jno
jno
mov
push
cmp
jg
decb
dec
subb
push
stos
imul
aad
push
xor
jbe
add
dec
push
sub
inc
pop
xchg
sbb
ret
inc
rorb
cmp
jecxz
out
fwait
sbb
aaa
cmpb
inc
ja
lret
jnp
arpl
lea
inc
sub
clc
scas
cmpb
sbb
testb
add
aas
add
out
hlt
cli
mov
and
pop
mov
jl
fiadds
and
pop
push
adc
cmp
popf
js
addr16
cmp
inc
lret
mov
mov
mov
fdivs
ficomps
adc
es
mov
ljmp
cs
stc
rcr
pop
popa
jae
ret
scas
mov
movl
xlat
adc
stos
imul
pop
lret
or
outsb
pop
shll
mov
xor
push
add
outsl
scas
jnp
movl
xor
xchg
xchg
ds
shrl
jae
ja
fwait
mov
xor
xchg
sbb
xor
out
dec
mov
xor
repnz
or
mov
ficoms
pop
jmp
cmc
mov
mov
icebp
dec
insb
jle
idivl
dec
ja
xor
ret
sarl
add
xlat
mov
or
stos
pusha
les
jg
inc
push
jle
dec
out
sub
ss
fstpl
pusha
insb
dec
dec
mov
outsb
into
cmpsl
jne
scas
xor
pop
idivl
jae
jg
sub
mov
jbe
sarl
test
xor
or
stc
mov
pop
push
cli
jp
jae
pop
cmp
aam
jnp
enter
mov
pop
outsb
jmp
stos
inc
jns
push
pop
cmp
and
jg
inc
pop
xchg
int
add
mov
lock
pop
jle
cmpl
mov
adc
pop
loop
hlt
adc
clc
es
out
cmp
push
or
call
pop
xchg
pop
fistpl
stc
pusha
add
addl
jp
pop
jb
into
jo
cmp
repnz
mov
cwtl
mov
jo
cli
cld
movsb
xchg
repnz
aad
push
and
push
les
sbb
sarl
or
outsl
out
ret
fs
orb
shrb
jg
add
mov
mov
aam
xchg
stos
sti
loop
xchg
orb
push
es
nop
fs
or
lret
cmp
icebp
mov
inc
int3
stos
addr16
fldl2e
scas
lcall
and
inc
aad
xchg
jge
jns
iret
lds
mov
sbb
and
pop
or
fmul
mov
add
cmp
jae
cmp
nop
js
lret
add
add
andb
hlt
repz
jae
inc
loop
pop
lds
bound
pop
popa
sub
adc
out
push
in
and
inc
in
movsb
mov
inc
push
lds
pop
pop
jg
lahf
bound
jnp
jl
mov
jbe
mov
jp
arpl
lret
stc
ret
iret
push
add
mov
not
add
rolb
cmpsl
add
push
stc
pop
mov
fisttpl
pop
inc
push
cmp
loope
cmp
or
pop
ja
aam
cmpsb
xor
push
mov
fwait
cmp
stos
pop
mov
movsl
sbb
lods
lock
popa
jecxz
ds
push
in
xchg
mov
lea
mov
lock
jns
xchg
mov
fbstp
leave
in
loopne
das
ret
cmc
rol
xlat
xchg
lds
cmp
jg
sbb
or
or
orb
ret
pop
in
cmp
or
imul
cmp
out
xor
imul
fstpl
sub
leave
mov
add
inc
xchg
pop
scas
sbb
popa
es
sub
out
xchg
inc
icebp
pop
cli
xchg
jae
out
sub
imul
push
jle
icebp
cmc
jo
jbe
outsl
inc
test
aam
xlat
jmp
cmp
mov
dec
pushf
pop
mov
xchg
and
sub
outsb
das
out
and
xorps
in
lret
test
js
ja
jno
jg
les
mov
loopne
jno
bound
mov
fnstcw
lock
add
push
xchg
bound
inc
fimull
aas
mov
scas
fdivl
and
in
in
loope
and
call
pop
mov
mov
dec
je
add
jge
jnp
aas
ss
cmp
jbe
cmpb
aad
mov
add
fisttpl
jp
dec
ffreep
or
jns
push
inc
mov
push
in
outsb
jge
iret
push
push
ja
lcall
mov
mov
xlat
test
addb
js
idiv
fwait
mov
xchg
inc
jg
repnz
cmp
sub
cmpsl
mov
mov
push
push
mov
je
cltd
in
cmp
pop
dec
mov
mov
mov
aam
sarb
loope
jp
push
cmp
and
mov
pop
lea
jg
cmp
lock
pop
movsb
rcr
xchg
out
dec
imul
pop
movsl
loope
ljmp
lret
mov
sub
mov
pushf
enter
out
addl
aad
gs
pop
xor
pop
in
cmp
imul
push
and
jnp
mov
rorl
jl
notl
jmp
push
fs
out
lods
push
sbb
arpl
out
xchg
and
rorb
std
push
lret
insl
xor
inc
push
xchg
call
mov
mov
sbb
loop
into
into
mov
cmpsb
test
jb
cmp
aaa
insl
out
mov
cmc
rorb
push
jno
xor
inc
stos
loopne
fdivs
mov
imul
add
inc
push
jl
jg
or
clc
add
mov
shlb
inc
test
pop
push
jp
andl
mov
mov
es
pop
inc
jb
push
repz
pop
xlat
outsb
lods
pop
aas
add
add
cmp
in
ja
xchg
inc
pop
jmp
out
ss
scas
mov
or
xlat
fildll
paddusb
push
and
add
add
xor
fcmovbe
mov
leave
pop
mov
inc
add
sbb
xor
lahf
pop
and
addb
mov
xchg
cmp
or
js
xorb
lods
stos
ret
into
ja
mov
outsb
cmc
sbb
or
loop
mov
add
push
add
bound
xchg
int3
cmp
icebp
jb
and
scas
add
popf
inc
sbb
fucom
mov
xor
pop
cmp
xchg
xchg
fsubr
mov
mov
out
and
rcrl
dec
out
daa
pop
jp
jne
jecxz
mov
cmp
ja
lahf
lock
pop
jg
add
lcall
lahf
ljmp
sti
data16
mov
orb
or
jle
out
inc
aam
xchg
repnz
mov
jns
dec
fdivp
out
stc
inc
xchg
pop
movsb
mov
xchg
mov
std
fisttpl
pushf
lahf
pop
out
outsl
mov
push
es
pop
scas
aam
pop
mov
adc
inc
nop
test
pop
jbe
lcall
out
loope
leave
loop
stos
inc
int
add
les
cmp
mov
sbb
push
mov
inc
hlt
mov
ljmp
add
cld
sub
mov
jl
add
js
xchg
mov
mov
sbb
and
add
js
push
push
xchg
cltd
xor
mov
subl
popf
mov
pop
dec
pop
cmc
xchg
das
adc
jbe
pushl
lods
and
in
fmuls
fistpl
dec
inc
or
jg
add
or
sub
insb
pop
dec
add
rcrb
cli
adc
jecxz
xor
sbb
je
pop
movsb
mov
inc
mov
pop
fisttpl
inc
mov
dec
mov
jno
lea
inc
mov
dec
cmp
dec
or
pop
mov
fisubs
test
in
jno
xor
out
mov
xchg
push
push
test
test
pop
test
pop
xchg
pop
inc
popa
fisttpll
in
or
sub
shll
push
repz
mov
cmp
in
outsl
pop
mov
sub
lret
lods
xchg
push
mov
test
popa
rorb
inc
pop
xor
cmpsl
mov
cmp
mov
add
dec
test
inc
test
mov
sbb
cld
inc
aaa
inc
fmuls
jno
sti
dec
stos
lods
dec
cltd
push
pop
stos
insb
scas
xor
in
aad
mov
loope
jns
push
aas
idivb
pop
jg
cmp
sub
fs
push
aas
popa
jmp
int
addb
and
add
mov
or
ret
pop
mov
mov
xchg
inc
sub
mov
push
shll
mov
and
jnp
cld
test
ret
xchg
jg
sbb
xlat
mov
jmp
mov
mov
sti
les
or
jns
dec
mov
add
outsb
sub
fwait
mov
out
iret
cwtl
pushf
jle
aam
gs
jge
cld
jno
pop
loopne
and
rolb
adc
fninit
mov
xchg
xor
fs
cwtl
mov
jp
sti
xchg
jns
jp
mov
xor
daa
movsl
dec
cmp
and
cmp
int3
xchg
push
repz
xor
test
add
fnsave
cmp
pop
xchg
mov
mov
fsubrl
ja
lea
dec
aad
es
bound
ljmp
mov
or
jns
out
sbb
loopne
test
shlb
pop
mov
jmp
test
stc
ljmp
jge
test
int
dec
sub
inc
das
subb
cld
mov
jecxz
adc
jg
cli
jae
xlat
jns
mov
xor
repz
pop
test
add
sbb
in
out
insl
fs
repnz
cmp
ror
mov
clc
incl
sbbb
loop
cmp
daa
hlt
iret
mov
push
xchg
out
leave
fs
enter
rcr
call
fsubp
loop
cmp
je
pop
cwtl
pop
mov
mov
xor
pusha
imul
pop
imul
pop
lcall
pop
test
mov
cmc
add
out
dec
cwtl
push
sti
dec
xchg
out
inc
jge
movsb
lcall
push
adc
out
or
popa
arpl
out
add
outsb
popl
mov
lahf
mulb
repz
jns
sbb
mov
ja
cmp
loope
roll
mov
ret
ret
pop
pop
mov
cmc
fucom
sub
enter
rcll
sarl
imul
enter
xlat
shrl
push
rcrl
out
jg
ds
fucomi
dec
cmp
cld
mov
stc
jnp
cmp
push
xchg
imul
pop
mov
stc
stc
lahf
gs
std
repz
movsb
jns
fdiv
mov
sbb
leave
lret
jg
jecxz
jo
stc
ljmp
mov
testb
jg
scas
push
cld
leave
jl
xor
add
cmp
inc
pop
in
iret
push
in
leave
das
inc
dec
lcall
scas
push
jge
jnp
pop
daa
jne
fnstenv
imul
inc
mov
iret
ret
cmp
cmpl
xor
bswap
or
repz
adc
fsts
cmp
push
mov
mov
inc
mov
mov
leave
movsb
setge
test
jae
xor
test
addb
pop
movsb
mov
cmp
jp
mov
std
mov
mov
cwtl
jnp
test
gs
jg
ds
jns
ds
repz
add
cmc
dec
rol
fwait
daa
xor
aam
xchg
cwtl
or
dec
push
or
stos
shlb
pop
repz
data16
inc
icebp
das
rorb
pop
stos
call
stc
into
jns
push
ffree
ret
jae
stos
jmp
cli
mov
push
dec
xor
pop
test
pop
cltd
fcmovnu
aas
dec
jl
aad
lock
pop
cmp
jg
mov
fcoms
and
mov
test
mov
mov
and
fdivs
rorl
sbb
cmpsl
sarl
lods
clc
xchg
xor
mov
lock
xchg
pop
bound
inc
fdivrl
pandn
pop
add
icebp
int3
data16
xchg
imul
std
adc
in
loopne
add
or
sbb
jbe
jge
out
add
insb
cmpsl
sahf
mov
pop
loopne
mov
inc
call
nop
lock
add
push
push
adc
test
sub
jnp
pop
sbb
sub
cmpl
out
ret
pop
int
stc
and
and
nop
jp
mov
out
ficompl
ficomps
stos
mov
jb
fld
loop
xor
xor
pop
lret
pop
repnz
xchg
sti
dec
jns
es
add
scas
or
icebp
mov
je
cltd
xchg
jp
cld
mov
movsb
sub
jae
outsb
sbb
pop
fldenv
mov
jnp
cmpsb
push
cwtl
ja
js
sub
xchg
push
inc
sub
fcos
and
xchg
in
adcl
xchg
inc
mov
stc
push
fistpl
mov
cmp
mov
sbb
push
xor
push
jae
leave
int
or
mov
and
jge
std
ret
outsl
insl
xchg
sub
inc
fidivrs
stc
jae
aam
push
cmpsl
dec
jg
outsl
mov
outsl
push
lcall
dec
movzwl
lods
fisubrl
mov
adc
push
loop
shr
outsl
test
pop
in
cwtl
nop
in
or
inc
pop
mov
aam
sbb
mov
sbb
lock
add
and
jmp
push
mov
sbb
and
ja
adc
sarb
pop
clc
sbb
aam
xor
fs
push
leave
jmp
lahf
xor
into
or
fcomp
jbe
andb
aad
scas
stos
cmp
int
stos
fisttpl
lods
out
push
fcoml
lret
inc
pusha
cmc
cmp
sbb
xlat
add
pop
subl
sbb
or
lock
jns
mov
cmpsb
xor
outsb
push
jno
and
mov
cmpb
jns
inc
push
mov
and
pop
ja
icebp
push
and
xor
and
xor
out
mov
mov
jb
ret
sti
mov
loopne
arpl
loope
filds
mov
pop
or
pop
add
arpl
dec
push
xor
add
sub
inc
in
mov
add
and
out
dec
fs
push
add
add
ja
scas
jo
ja
dec
cld
cmpb
cmp
push
inc
adc
xchg
sbb
roll
aas
les
js
adc
dec
or
sub
aas
outsb
add
out
fmull
lcall
fstpt
fstpl
inc
push
mov
cmpsl
leave
sub
adc
adc
imul
cmpsb
pop
in
movsl
pop
push
pop
xchg
mov
sbb
mov
mov
call
push
js
push
xor
jae
push
lock
adc
stos
inc
sti
addr16
sbb
mov
xchg
in
mov
adc
and
outsl
cmp
xchg
rorb
jge
aaa
stos
or
add
fildll
jae
mov
inc
lea
jns
push
test
pavgw
jne
test
mov
fsub
adc
and
xor
repnz
outsl
dec
add
cld
sub
fldcw
test
leave
outsb
leave
call
pop
jo
addr16
adc
imul
jge
sub
jnp
dec
jge
mov
lods
mov
add
out
por
repz
jge,pt
dec
inc
loope
xor
js
es
jns
xchg
jo
dec
mov
fwait
test
xor
in
xor
leave
ljmp
cmc
fcomps
js
ficoml
icebp
add
loop
sti
bound
sti
clc
fisubs
cmpb
and
cmp
push
dec
mov
jg
inc
loopne
xchg
sbb
or
jecxz
and
fldpi
and
loop
cmp
cmp
fdivl
fcoms
sub
andb
cmpsl
xchg
or
sub
adc
aad
mov
pop
adc
push
push
sbb
and
jns
push
dec
sub
sbb
inc
xlat
jecxz
adc
xlat
rcll
push
add
fisttpl
push
jp
push
out
xorb
sahf
out
call
sbb
push
jno
decl
xchg
pop
outsl
inc
rolb
cld
sub
dec
dec
jmp
out
cs
mov
add
arpl
or
std
cld
sbb
ds
out
adc
jo
push
or
stos
sarb
jle
out
sbb
out
or
movsl
jmp
outsl
das
sti
outsl
add
push
jg
into
adcb
clc
sub
sub
jle
and
into
gs
in
or
sub
push
push
sbb
ja
jg
fs
fiaddl
shlb
sbb
mov
jle
data16
pop
mov
cmpb
fwait
xlat
sub
adc
push
add
mov
pop
xorb
pushf
inc
scas
and
gs
mov
inc
insb
adc
in
push
and
add
fld
pop
ret
fs
and
les
cmovns
into
std
inc
xor
pop
add
dec
xor
out
fldl
shll
mov
fists
loope
in
and
jmp
pushf
mov
pop
sub
popf
fdivs
pushf
sub
out
lret
sar
jns
fldl
js
add
sbb
icebp
adc
sarb
enter
fmull
cmp
fimull
iret
loop
in
lahf
hlt
andb
loope
lcall
cmp
inc
rcr
add
andb
and
lret
jno
movl
jo
aas
arpl
jge
xor
movswl
push
mov
inc
orb
jge
ror
outsb
mov
cld
inc
xchg
outsb
xchg
into
add
aaa
push
or
ja
push
mov
cmc
repz
leave
cs
int3
and
push
mov
add
adc
dec
testb
in
jmp
fs
xlat
jbe
lret
and
pusha
jmp
mov
das
fdivrl
jecxz
pop
and
mov
cmpsl
xchg
orb
push
or
xlat
xor
jp
jae
sub
out
and
fildl
add
icebp
jge
xchg
add
repnz
add
movsb
inc
test
int
or
lds
fstpl
outsb
or
icebp
push
outsb
scas
mov
ret
dec
ja
les
mov
xchg
xlat
jae
and
xlat
iret
cmp
push
aaa
dec
dec
lret
cmpl
jae
shrl
incl
cli
xlat
enter
cmp
mov
out
fists
orb
jo
repnz
mov
lock
or
sub
in
jo
in
pop
lcall
js
and
cmp
xchg
inc
inc
add
inc
and
shl
aam
lahf
sbb
add
rcl
inc
fidivs
test
add
loop
fidivl
in
pop
mov
fadds
mov
jp
mov
add
icebp
loop
mov
xchg
out
test
shlb
fcoms
orl
inc
push
imull
in
jb
jmp
out
fistpll
xchg
fs
jg
lock
shl
mov
pextrw
inc
or
jle
jmp
and
or
stos
enterw
add
jl
jo
das
shrl
fiadds
mov
add
jg
dec
jns
cld
jle
std
mov
stc
repnz
insl
ffreep
bound
imul
out
jb
shlb
les
js
cld
sub
jl
out
add
pop
push
shl
mov
aad
pop
outsb
add
jle
mov
ljmp
test
test
mov
jb
push
push
popf
inc
pop
jnp
aad
add
mov
cmp
dec
xchg
movsl
ret
aaa
add
out
leave
sbb
mov
addb
and
into
test
fisttpl
out
imul
mov
xchg
repz
xor
cmpsl
out
push
xchg
xchg
dec
fsubl
mov
cmp
cmp
lret
add
lock
jae
mov
js
mov
xor
xchg
add
mov
fs
xor
in
in
mov
jne
fcmovne
sbb
sbb
movsb
inc
mov
mov
pop
cmp
test
icebp
push
cltd
or
cmp
shll
fldt
les
add
jnp
loop
pop
aad
dec
les
add
pop
add
adc
sub
jl
mov
xchg
sub
add
scas
aad
in
cmp
outsl
cmp
ficoms
arpl
popf
je
cltd
xlat
inc
cmpl
leave
cmpb
push
fadds
outsl
pop
ret
shll
pushw
pop
enter
icebp
and
jb
jno
ficompl
sbb
idivb
jb
cmp
cs
sarb
and
nop
cmpsb
xor
cmp
push
cmp
iret
pop
push
cltd
sub
jl
xchg
clc
cmp
cmpsl
push
sbb
and
push
dec
sbb
sub
arpl
outsl
xchg
fadd
ja
sbb
pop
loopne
out
loope
xchg
inc
nop
test
les
pop
push
rcr
or
int
lret
out
adc
addr16
pop
sub
dec
push
lahf
or
insb
ds
xlat
jae
add
aas
aas
pop
jno
cltd
pusha
jns
insb
das
outsl
call
mov
jg
rcrl
jmp
loope
inc
adc
dec
inc
pop
ficompl
and
inc
sbb
xchg
fadds
inc
imul
inc
into
aas
push
pop
jns
dec
outsw
dec
insb
push
add
ja
jg
dec
inc
rcr
jmp
aas
movsl
fstpl
pop
fnstcw
jnp
leave
in
lret
cmp
pop
iret
adc
jecxz
lea
sub
push
cmp
testl
jns
xchg
pop
sbb
mov
push
loop
add
add
out
push
lret
out
es
sti
cmp
aad
ja
push
div
jge
shl
repz
add
ficompl
pusha
jne
jno
pop
dec
xor
insb
into
mov
aas
sub
in
pop
repnz
stos
dec
inc
lahf
jge
icebp
bound
add
push
or
or
push
add
ja
mov
arpl
psllw
jecxz
jp
inc
sbb
add
testl
mov
shrb
out
mov
dec
push
ret
ror
jecxz
sbb
into
pop
cmp
aaa
push
rorl
pop
fsubl
and
arpl
inc
mov
xchg
jp
fbld
gs
mov
mov
leave
out
pop
in
dec
mov
inc
iret
ror
int
aas
xlat
xchg
fisubrs
popf
cld
pop
sti
int
fldenv
dec
shl
jae
dec
push
add
fstpl
fdivs
lret
mov
lahf
jmp
sbb
bound
jg
sbb
mov
out
mov
and
stc
fcmovnu
fs
xchg
cld
mov
xlat
dec
cs
aam
inc
fs
jo
or
jno
mov
and
nop
inc
daa
lock
lahf
mov
in
xchg
pop
cmp
inc
pop
mov
jne
mov
testl
push
inc
loopne
inc
aad
daa
jno
mov
xchg
mov
loopne
gs
nop
ret
jb
call
and
in
lcall
insl
and
push
push
mov
and
xchg
mov
cli
jnp
jp
jae
mov
inc
sub
inc
aad
sub
xchg
cmpb
lret
jg
fnstcw
aas
pop
push
outsl
hlt
ljmp
imul
inc
jno
popa
sarb
add
sub
jne
frndint
aam
jo
xchg
movsb
ret
popa
push
jo
rcll
dec
pop
pop
popa
pop
xchg
jge
xlat
inc
adc
adc
jb
cmc
ds
sbb
jae
out
inc
cli
dec
aad
dec
cmp
push
pop
popa
or
out
push
mov
pop
and
out
pop
mov
lret
lea
lcall
mov
leave
in
out
insl
enter
push
adc
mov
imul
pop
mov
mov
lcall
fidivs
inc
add
repnz
and
xor
into
cld
fdivr
mov
add
xor
cmpb
aaa
jge
out
test
aas
add
aas
jp
cli
inc
add
jnp
mov
jmp
jno
cs
lds
jg
lods
bound
add
mov
in
mov
imul
and
or
cmp
cmpsl
jp
or
xchg
movsl
jbe
popf
cwtd
fiaddl
fnstsw
pop
addl
lahf
pusha
jne
dec
xor
pop
pusha
test
bound
pop
sub
jo
sbb
mov
icebp
cmp
popa
or
xchg
inc
enter
mov
jg
xorl
jb
xorl
jne
xor
fstpt
pusha
cld
and
mov
lcall
or
add
and
insl
pushw
jnp
jge
push
cmp
sahf
and
cmp
jno
lea
ret
jge
push
mov
shl
jns
mov
enter
mov
not
jge
shll
pop
leave
loop
sub
sti
jle
dec
insb
cmc
xor
push
jp
mov
sub
mov
frstor
les
pusha
xchg
out
stc
fadd
out
repnz
add
out
dec
repz
stos
orb
lock
xchg
mov
or
pop
sub
leave
xchg
dec
sbb
cwtl
out
sub
pop
push
xchg
pop
insl
out
cmpsb
pop
test
imul
xlat
mov
test
subb
pop
and
lea
insl
jns
shr
in
add
or
inc
pusha
dec
in
andb
inc
push
test
mov
jge
jg
out
or
mov
fistpll
aaa
mov
jns
pop
add
mov
mov
mov
push
sbb
xchg
inc
mov
nop
in
sub
xor
sbb
jge
in
xchg
pop
sub
test
ret
ret
adc
inc
dec
lock
iret
or
fsubs
inc
jge
cmovg
lcall
dec
stos
popa
inc
add
xlat
insl
inc
push
adc
lods
add
cmc
fstps
jp
fcomip
xchg
lahf
or
les
mov
jno
lret
add
insl
mov
xor
lods
inc
jno
mov
icebp
pop
inc
stos
sarb
inc
bound
aas
xchg
call
push
es
sbb
mov
push
jp
addr16
mov
mov
sub
xchg
and
into
pop
aas
mov
cmpl
lock
pop
mov
orl
sub
pop
stos
ja
arpl
std
lcall
test
das
dec
pop
in
lret
jae
sbb
sbb
adc
sbb
test
ja
aad
inc
outsb
jl
inc
ret
mov
pop
sbb
shl
jno
fidivrl
and
jmp
adc
or
pusha
ds
xlat
out
cld
pusha
xchg
xor
mov
fldl
xchg
cmp
clc
loope
icebp
adcl
pushf
in
arpl
mov
mov
inc
lock
adc
cmpsl
ljmp
push
sti
add
xor
ja
jle
and
incl
lds
cmp
sbb
mov
adc
mov
idivl
jecxz
loopne
dec
les
inc
stos
mov
adc
hlt
mov
out
cwtl
es
jge
out
pop
inc
push
adc
adc
js
shll
dec
scas
xor
mov
or
mov
test
cld
shll
into
jns
mov
cwtl
ret
pop
aam
cmp
shll
mov
lret
leave
inc
cmp
push
jno,pn
sub
fmuls
xlat
insl
sbb
ret
sub
mov
add
data16
movb
xor
sub
pop
shl
aam
enter
pop
mov
and
sahf
fcomps
jb
out
inc
adc
loop
inc
mov
rolb
test
pop
and
mov
or
pop
loopne
fidivrl
inc
push
pop
out
out
stos
rclb
mov
addr16
iret
shll
fsts
ret
lea
fsubrl
cltd
or
stc
mov
push
orl
or
fidivrs
ljmp
addl
jle
inc
pop
ja
insb
sbb
js
hlt
push
imul
fnsave
and
sarb
jle
adc
js
shlb
testl
push
and
sbb
cs
mov
push
push
pop
sbb
leave
pop
mov
enter
jns
loopne
js
into
fcmovne
fcomi
jl
mov
add
jge
push
out
inc
std
out
loope
shll
js
movsl
loop
mov
jns
mov
scas
mov
add
jae
inc
fbstp
dec
xor
test
icebp
cmp
cmpsl
bound
mov
bound
cmpsb
xor
loope
mov
add
dec
fildll
andb
cwtl
jne
mov
dec
push
jae
rcl
or
dec
insl
xor
or
aaa
xchg
pop
stos
js
pop
mov
push
push
popf
idivb
out
movsb
xlat
add
push
sub
jl
mov
cwtl
sahf
outsb
mov
pop
pop
out
push
pop
pop
mov
add
sbb
rolb
outsb
cmp
fcmovnu
icebp
dec
js
cmpb
jmp
inc
cmpsl
xor
into
insl
mov
push
stos
adc
call
push
dec
sub
or
adc
lcall
push
xchg
lea
leave
inc
xor
cmpsb
push
pop
or
mov
in
adc
aad
xorb
mov
jp
out
jp
jno
pop
xchg
or
jge
jne
jge
jle
sti
inc
sbb
iret
or
cmp
xchg
icebp
jmp
jae
cmpsl
insl
xchg
popa
mov
pop
xor
mov
and
clc
mov
cmc
mov
pop
push
cmp
jno
cmpsb
xor
ret
inc
pop
lret
xor
scas
loope
ljmp
add
lret
int
mov
fiadds
addl
je
jns
into
sub
fldl
pop
jle
inc
in
insb
int
jmp
mov
dec
sub
inc
test
cwtl
cli
dec
mov
add
sbb
scas
stc
pop
sub
push
ja
lds
dec
adc
lret
cld
bound
leave
test
aas
loop
add
gs
sub
sub
add
jae
xor
fstpl
adc
stc
icebp
cmc
cmp
cmp
aas
jecxz
dec
inc
cltd
jge
rcr
xchg
stc
add
jno
shlb
inc
pop
push
jb
cmp
lock
pop
pop
sbbl
add
xchg
cmpsl
mov
xchg
dec
lahf
mov
cmp
xchg
aad
ror
outsb
mov
bound
mov
and
fstpt
push
add
inc
lea
pop
mov
add
jecxz
pop
pop
xor
jge
jp
pop
loope
mov
mov
jnp
test
stc
cmp
inc
out
jns
stos
rcr
aaa
fnstsw
aaa
add
xchg
dec
pop
popf
jns
outsb
jl
imul
loopne
cmp
loop
mov
xchg
lods
jno
jnp
xchg
inc
push
and
jle
lcall
mov
pop
cs
sbb
add
xchg
loopne
and
sti
imul
adcb
movsb
shl
loop
std
arpl
loope
mov
test
push
daa
xlat
aas
sbb
cmpsl
aas
orl
ret
push
orb
stos
aad
bound
icebp
pop
iret
and
out
in
cmp
dec
push
jge
xchg
and
sub
popa
or
mov
adc
stos
lods
push
arpl
in
out
jge
test
sbb
lcall
pop
push
es
or
sbb
popl
jg
testb
ja
lds
popl
cwtl
sub
xchg
cmp
mov
and
push
inc
mov
out
pop
xor
push
or
mov
cmpsb
ljmp
adc
aas
push
js
push
cmp
mov
jmp
cli
cld
and
mov
xor
pop
push
sti
out
add
data16
pop
dec
xor
adc
insb
movsb
push
xor
pop
pop
add
stos
mov
xchg
lds
cmp
mov
push
fwait
inc
pop
inc
gs
sbb
daa
dec
aad
pop
adc
jge
adc
stos
arpl
add
cli
inc
popa
mov
pop
negb
jecxz
jp
xchg
mov
cmp
orb
or
ret
inc
aad
das
pop
addl
pop
insb
icebp
cmpsl
mov
sarb
push
xchg
pop
popf
xchg
jl
scas
pop
xchg
loopne
sbb
mov
pop
pop
gs
mov
addr16
stc
in
mov
sub
xor
xchg
popa
cmp
lock
jle
or
inc
popf
jp
xchg
aaa
xor
sahf
sub
jo
sbb
movsl
jnp
aam
lret
mov
scas
cmc
stos
bswap
mov
data16
pop
out
push
fmull
movsb
jb
xchg
pop
pop
iret
add
mov
sti
sahf
cli
in
xchg
test
push
sbb
fcoms
mov
jle
inc
xchg
push
fildll
outsb
xchg
push
in
cld
mov
mov
cmp
jb
mov
je
pusha
ja
jns
jmp
inc
push
ja
cmpsl
out
nop
dec
pop
movsl
sbb
mov
pop
jl
clc
sbb
jmp
pcmpgtd
pop
push
mov
pushf
mov
mov
xor
lock
imul
hlt
mov
inc
insl
ret
adc
sahf
shrb
mov
xor
and
fwait
sub
sar
xor
add
cmc
sbb
lcall
pop
mov
push
cltd
pop
dec
pop
jb
les
mov
jecxz
test
shrd
sub
jnp
dec
mov
into
add
jb
jl
xchg
or
lret
mov
and
sbb
sahf
and
in
out
push
xchg
lods
fisubrl
sarl
push
sub
push
loop
mov
add
test
sbb
jle
out
adc
or
aad
dec
js
mov
ret
jb
cmp
jne
fisttps
popa
clc
cmpsl
jae
repnz
inc
aad
adc
sbb
xchg
lds
and
iret
out
sahf
mov
aam
dec
xchg
test
sbb
iret
adc
popa
cld
push
mov
shl
xchg
fnsave
and
mov
cmp
add
cmp
mov
xchg
ljmp
repnz
fcoms
xor
pop
movsb
fcmove
xchg
inc
jge
rorb
loope
add
outsb
cs
inc
insb
adc
push
or
mov
ja
rclb
pop
fsubrs
push
mov
in
xchg
sahf
jns
push
sub
sbb
mov
xchg
cmp
jae
mov
push
addr16
xchg
sbb
xchg
sub
fidivrl
jnp
pop
pop
mov
sbb
ror
mov
test
push
mov
jb
push
add
sub
loopne
int3
and
jle
adc
fbld
out
jne
mov
jp
add
and
addr16
mov
sbb
cli
pop
mov
aas
mov
out
or
sarb
and
adc
int3
cmpsb
cs
fld
dec
pop
cmp
aam
cmp
lds
lea
pop
lret
inc
dec
xchg
pop
add
xchg
mov
ficompl
xchg
mov
xor
insl
lds
outsl
push
adc
jb
lea
mov
das
out
mov
xorl
push
inc
out
stos
or
lret
add
xchg
jb
mov
arpl
pop
mov
sub
jmp
mov
fnstsw
jno
ret
add
xor
dec
repz
rep
outsb
cli
subl
or
inc
xorb
cmpsl
inc
jg
fcoml
outsb
mov
sbb
repz
or
dec
add
jl
leave
testl
in
in
mov
xchg
js
test
mov
and
jle
outsb
pop
jl
pop
cli
fcmovnb
scas
jnp
std
push
ljmp
push
std
testb
popa
jle
xchg
orb
mov
mov
xchg
jo
pop
pop
pop
or
jne
xchg
es
push
in
inc
sub
cmc
dec
jp
fisttps
ret
add
cmc
arpl
mov
push
ret
ja
aad
fistpll
gs
pop
fidivrl
inc
pop
rclb
ja
test
stc
jnp
jp
les
ret
push
clc
inc
pcmpgtb
push
push
lret
mov
fildl
add
push
cltd
orl
out
cld
cmp
fsubrs
xor
test
xchg
jne
mov
pop
mov
pushf
jo
inc
add
sub
pop
movsl
and
jp
push
das
jle
sub
xor
mov
hlt
lods
cmpsl
or
out
hlt
inc
hlt
fucomip
push
icebp
pop
mov
push
push
sub
fcoml
rol
mov
mov
mov
jg
dec
bound
jecxz
dec
pop
sahf
fdivr
jns
loope
mov
bound
adc
mov
imul
popa
data16
push
test
fwait
cltd
lahf
cs
xor
push
imul
aas
inc
pop
shrl
mov
fimuls
add
mulb
and
movsl
inc
xchg
in
xchg
and
xchg
scas
sub
jg
xchg
adc
jo
leave
xchg
lock
and
push
mov
movsl
jmp
mov
dec
inc
cli
es
and
imul
sbb
jle
rclb
fwait
cli
pop
lret
dec
sar
xor
fcmovne
enter
mov
test
fcmovbe
jnp
icebp
rcll
arpl
movsb
inc
inc
arpl
into
cmp
ds
pop
mov
fwait
arpl
cmp
xor
push
mov
aas
mov
jge
mov
cmpsl
je
lods
jp
into
add
pop
xor
out
inc
decl
popf
adc
testl
mov
sub
pop
xor
ss
sbb
jle
sub
pop
jl
jns
ljmp
or
ret
or
xor
push
cli
and
fsubl
imull
jp
push
stos
cmp
loopne
out
and
inc
cli
iret
dec
pop
mov
cmp
cmp
imul
pop
xchg
iret
iret
sbb
inc
xchg
insl
inc
xorl
imul
mov
lock
inc
repz
adc
lcall
test
cmp
or
mov
std
lea
jmp
iret
fwait
insb
addl
jae
das
mov
sbb
and
scas
push
jns
iret
and
cwtl
push
mov
ja
push
imul
xchg
aaa
fnstenv
arpl
sbb
cmp
add
ljmp
dec
subl
addr16
div
mov
or
lock
idivb
roll
lock
and
xchg
pop
mov
jno
js
mov
in
mov
loope
aas
push
inc
in
and
sub
mov
jae
and
cmc
mov
insl
adc
pop
sti
sbb
cmp
jae
cmp
and
enter
mov
add
call
loopne
push
jnp
or
pop
cmpsl
inc
nop
pop
xor
pop
dec
mov
xchg
pop
fwait
push
sbb
jmp
mov
hlt
push
mov
adc
adc
sbb
mov
pop
xchg
adc
push
add
add
jno
push
lahf
pop
inc
scas
lock
cmpsb
and
mov
push
xor
push
scas
stos
shll
jp
or
sbb
subb
cmpsl
repz
push
out
repz
pusha
jge
cwtl
insl
mov
mov
lahf
sbb
test
add
outsb
sub
je
xchg
jg
push
popa
in
xchg
fwait
inc
mov
cltd
mov
ret
fcoml
xchg
xor
pop
ret
cmp
vaddsubpd
ficomps
repnz
sbb
dec
fldenv
call
jg
lock
jo
ja
call
inc
imul
xchg
mov
pextrw
fsubs
add
arpl
jecxz
fs
or
clc
xorb
mov
pop
sub
sbb
out
push
jno
pushf
ja
xchg
mov
inc
nop
data16
and
push
add
cmpsl
stos
fs
and
pop
add
jns
add
inc
icebp
cwtl
out
popf
insl
ret
fdivl
ds
xchg
enter
jl
repnz
js
adc
pop
sub
xchg
gs
in
lahf
adc
lock
in
mov
ficoms
jne
cwtl
call
push
lahf
loop
mov
ret
or
icebp
dec
jmp
test
lock
out
lret
je
fnstcw
cmp
push
push
clc
mov
sbb
cmpsb
mov
jle
fistpl
jp
jnp
jnp
add
bound
insl
rcrb
lahf
nop
jle
aas
rclb
popf
inc
stos
scas
inc
xchg
imull
mov
add
xchg
inc
mov
aas
jo
dec
dec
cmp
clc
pop
dec
lcall
std
xchg
push
jnp
les
cmpb
cltd
dec
push
imul
cmp
fs
gs
inc
and
dec
out
jmp
lcall
ljmp
xchg
jle
bound
hlt
shl
dec
rorb
iret
xchg
push
rep
stc
lret
insl
test
dec
jl
iret
xchg
pop
sahf
insl
cwtl
jnp
incl
mov
sub
cmc
mov
inc
mov
inc
jb
ds
and
xor
or
loopne
adc
mov
insl
jb
jbe
shl
jne
ret
mov
push
xor
cmp
adc
xor
mov
sti
idivl
lahf
jns
or
stc
cmp
clc
push
adc
jno
sbb
sbb
jp
fucomp
sti
cmpl
or
pop
add
out
dec
orb
inc
out
cmp
cli
test
loopne
pusha
jne
xor
stos
mov
xor
ds
inc
mov
cmp
sub
sbb
dec
xor
sti
mov
iret
inc
rorb
adc
pop
add
icebp
mov
fiaddl
ret
push
cmc
inc
ficoms
popf
addr16
sahf
stc
clc
push
xor
lods
addr16
scas
pop
dec
mov
fcmovnu
mov
cmc
ret
pop
call
out
arpl
sub
es
aas
in
and
jae
or
sbb
xchg
lods
call
xchg
flds
clc
dec
or
call
loopne
pop
aas
insb
mov
mov
sbb
sbb
or
dec
fiadds
jg
jmp
mov
lret
xor
fs
scas
sub
roll
add
lock
int
fcompl
or
outsb
jae
xchg
and
pop
push
imul
jge
jbe
xchg
mov
inc
cmp
push
sub
dec
outsb
je
lret
pop
outsl
push
ret
push
lret
push
aas
mov
call
inc
sbb
movsb
lds
rclb
aaa
lret
push
cli
xor
fnsave
sub
dec
mov
in
inc
pop
mov
inc
inc
pushf
ds
movsl
add
jns
cld
fisubs
sbb
ja
inc
push
icebp
adc
movsb
mov
stos
movsb
aad
in
or
bound
dec
int3
movsl
lcall
sarl
jae
icebp
dec
jg
xchg
shl
mov
dec
jmp
inc
ljmp
mov
xchg
xchg
and
movsb
cmp
push
mov
scas
mov
xor
in
mov
mov
fwait
jne
cmpsl
popa
inc
mov
int
pop
mov
adc
xchg
aaa
adc
mov
or
aas
cmp
push
popf
push
mov
pop
jp
stos
outsl
add
das
and
shr
jae
fsubrl
xor
dec
fs
mov
sahf
jne
and
cld
sub
stos
mov
cmp
js
out
movsb
lahf
hlt
and
es
stc
ds
sub
add
mov
or
inc
mov
fdivl
jmp
push
mov
scas
cmpsb
or
xchg
lea
mov
add
fiaddl
in
jnp
je
filds
jae
inc
add
push
fsts
inc
fsubp
test
popa
sub
pxor
adc
pop
jp
push
hlt
sub
scas
xor
dec
loop
test
adc
es
pop
out
mov
shrl
sub
and
jns
test
rcll
in
fistl
andl
pop
aad
inc
jno
jnp
cs
xchg
movsb
cmp
cmp
sbb
es
push
int
scas
jle
pusha
xor
lcall
out
inc
sub
jne
stc
stos
ja
jb
pusha
lret
inc
ret
sbb
adc
nop
mov
cltd
das
loopne
xlat
lret
lahf
lods
sbb
sbb
and
xchg
or
fwait
adc
bswap
xchg
dec
cld
aam
int
loop
clc
sbb
in
mov
out
cld
loop
mov
int
jno
enter
mov
xor
je
adc
mov
scas
cli
push
repnz
cltd
aaa
das
repz
add
push
dec
mov
stos
dec
out
rol
nop
rcrb
add
out
mov
in
enter
dec
adc
fldcw
fcmovu
mov
xchg
adc
je
aas
pop
into
dec
push
xchg
jecxz
and
jmp
sub
idiv
xchg
push
sub
adc
daa
pop
and
dec
inc
imul
add
stc
ss
in
dec
jle
test
push
mov
mov
or
dec
filds
aas
fistpll
or
adc
ret
stc
or
loope
jb
dec
andb
or
mov
shll
out
mov
xor
lcall
es
and
fistpll
in
mov
mov
jns
xor
jp
cmp
and
addl
xchg
push
jge
and
jae
xlat
jg
pop
mov
and
jge
and
cwtl
dec
test
cld
jmp
sbb
cmp
nop
jno
test
popf
adc
into
cmp
sbb
repz
rep
push
mov
lcall
xchg
lock
hlt
in
pop
jp
pop
xchg
fcmovnb
enter
loop
xchg
xchg
push
jb
or
addl
cmp
cmp
es
out
shlb
xor
int3
mov
inc
mov
es
in
mov
roll
pop
fisubl
mov
insl
sbb
inc
std
sbb
fildl
in
int3
movsl
xlat
sub
enter
jg
dec
xchg
pop
pop
mov
push
sbb
ret
push
jge
arpl
xor
jns
shl
mov
aas
dec
cmp
push
test
pop
in
sub
leave
out
adc
and
loop
add
sub
inc
fsubl
mov
es
xlat
add
lret
and
je
sbb
imul
shlb
sbb
movsb
xchg
int3
push
call
int
insl
sub
add
cld
cmp
aam
out
mov
ljmp
cmp
ret
cmc
pop
stos
ret
sbb
cmp
xchg
ret
scas
bound
leave
dec
adcb
shrb
mov
add
and
xchg
fbstp
mov
push
jmp
into
jns
push
lds
lahf
xchg
and
push
pop
pop
hlt
dec
mov
fdivrp
sahf
es
xchg
xor
dec
aam
pop
fnstenv
leave
add
jecxz
sub
roll
fildl
dec
dec
or
cwtl
cli
icebp
or
dec
out
mov
leave
and
add
out
push
jnp
das
sbb
cmp
sub
insl
add
stos
dec
jecxz
lds
movsl
and
mov
ret
mov
cmp
sub
jp
mov
inc
out
push
cmp
mov
insl
sbb
dec
pop
push
jp
sub
cmpsl
inc
inc
push
mov
adc
jecxz
and
mov
mov
out
push
inc
lea
push
pop
cmp
mov
and
dec
inc
mov
das
sahf
jns
jnp
dec
jno
in
push
sbb
mov
jns
add
lods
mov
jge
pop
push
out
xchg
xchg
mov
lds
mov
mov
fcomi
cmp
popa
addr16
push
stos
sbb
out
rcrb
lahf
cmp
pop
xchg
hlt
pusha
xor
fisubl
jno
add
sbb
icebp
cmc
ja
outsl
cmp
inc
inc
repz
loop
lock
imul
sbb
ret
inc
adc
sar
jns
mov
test
mov
scas
mov
sub
ljmp
cmpb
jo
mov
shl
sub
or
out
test
jns
dec
ja
xchg
aas
jne
lret
push
jp
imul
ret
cli
sub
loop
inc
or
add
pop
fwait
movsl
mov
out
cmp
mov
pusha
mov
inc
jnp
out
lock
ror
xchg
cli
xor
fwait
xor
test
lods
pushl
mov
enter
or
dec
xlat
pushf
cmp
and
inc
xchg
cltd
les
mov
ja
imulb
leave
loopne
or
push
movsl
addr16
jns
rcrb
jo
ja
inc
popa
add
cmpsb
pop
sbb
dec
out
add
xchg
mov
add
jp
mov
mov
imul
jb
aas
mov
sub
sub
insb
testb
insl
push
or
push
pop
int3
sub
sbb
arpl
js
bound
pop
loope
cmp
add
and
xor
das
mov
dec
jne
jmp
cmp
loopne
adc
pop
iret
clc
das
mov
sti
jmp
aas
push
and
push
daa
mov
ss
dec
mov
hlt
into
bound
xchg
fiadds
jb
imul
dec
jno
aas
lods
inc
add
mov
outsl
es
add
mov
push
les
js
addl
loopne
inc
je
add
add
lea
jl
shll
ljmp
sub
insb
dec
mov
mov
mov
js
out
aad
xchg
aas
jmp
fidivrl
jnp
mov
nop
outsl
in
pop
adc
lds
inc
aas
jns
cmc
jl
jp
mov
sub
out
movsl
mov
pop
inc
jnp
sbb
push
stos
pop
or
rolb
jg
mov
xlat
push
add
cmpb
popf
fbstp
cmp
cld
add
xchg
dec
mov
hlt
and
jne
jecxz
mov
mov
xor
vmovsd
adc
mov
fcoml
mov
adc
dec
popa
pop
push
leave
push
test
dec
in
push
add
xchg
sbbl
or
test
jno
push
mov
adcl
out
sbb
or
out
and
repz
push
dec
adc
mov
lret
sub
adc
push
outsb
mov
in
jg
inc
sti
orb
pusha
or
hlt
ret
in
icebp
jnp
jp
cld
and
data16
jge
add
sbb
sub
pusha
jp
imul
inc
dec
sbb
jle
fdivl
and
push
and
pop
pop
xor
jge
or
and
call
fdivs
pop
jnp
lret
mov
std
sti
lea
jg
add
mov
or
outsl
pop
movsl
shlb
pop
js
push
cmp
sahf
xchg
rcrb
cld
mov
cs
inc
pop
fstpt
xchg
cmp
jb
lahf
dec
adc
mov
or
repz
and
and
pop
inc
mov
gs
mov
in
xchg
mulb
cmc
sbb
pop
or
sbb
dec
cld
leave
jns
cmpb
push
out
fsubs
pop
push
testl
adc
icebp
out
mov
stos
fidivs
adc
dec
cmpsb
push
cwtl
faddp
jnp
push
sbb
fcmovne
fnsave
cltd
testb
adc
jle
imul
mov
roll
push
scas
or
fstpt
push
pop
aam
inc
into
or
fdivl
xchg
jne
add
xchg
dec
cmp
xchg
sahf
pop
orb
test
in
daa
lret
xchg
push
lea
out
ljmp
call
lahf
dec
push
mov
fistl
mov
cs
jp
pop
lods
aad
fistps
add
out
aad
test
jecxz
mov
js
out
fwait
and
lea
mov
adc
dec
aaa
out
lods
mov
cli
clc
clc
test
push
imul
or
loop
jbe
mov
add
jns
push
ljmp
cmc
daa
loopne
jo
jecxz
loop
cmpsb
cmp
movsl
dec
mov
stos
das
jge
movsl
inc
mov
add
int3
inc
inc
jmp
out
rcrl
in
jno
mov
dec
rcrl
xor
test
sahf
push
test
jne
xlat
out
les
and
inc
in
jns
rorl
sbb
cltd
data16
sub
loopne
dec
psllw
adc
mov
fildl
push
or
jmp
xor
xor
js
jae
rorl
cmpb
repnz
arpl
out
sbb
mov
addr16
mov
jno
ss
pop
lds
fcompl
sub
cmp
leave
and
ret
cmp
fxch
add
int3
jge
mov
xor
shr
pop
arpl
or
scas
dec
xchg
cmpsl
movsl
sub
mov
or
inc
pop
pushf
stos
pop
scas
jns
mov
push
ffree
pop
movl
ds
adc
pop
sbb
std
fidivrs
shl
push
mov
xor
xchg
dec
push
add
sbb
sbb
sub
ljmp
push
test
and
sub
mov
popa
aad
cmc
or
jno
popf
and
in
mov
aam
aas
inc
cmp
xor
xchg
dec
sub
cwtl
repz
test
cs
scas
sbb
jmp
cmc
roll
daa
movsl
aad
int
mov
mov
add
cmp
dec
push
int
in
push
lcall
mov
scas
jg
adcl
outsb
leave
ljmp
mov
add
ret
aas
mov
jg
add
test
in
sub
sub
jns
jp
js
test
loopne
lods
or
inc
nop
cltd
pushf
xor
adc
xor
and
mov
mov
addl
test
inc
lcall
repz
xchg
pop
jb
xor
leave
pop
xor
jecxz
xchg
jbe
add
lea
push
push
cmp
call
aam
rorb
in
and
xchg
loopne
mov
fs
out
mov
jno
movsl
aaa
inc
cmp
fdivs
xchg
xchg
adc
jo
hlt
lahf
jmp
pop
lret
gs
xchg
iret
sbb
lds
int3
add
xor
pushf
jb
stos
es
jg
or
es
push
orl
dec
push
mov
jbe
arpl
dec
pop
cmp
sahf
int
in
push
pop
iret
cmp
cmpsl
ds
ficomps
xchg
into
pop
inc
iret
jp
mov
adc
mov
add
cmpsl
outsb
push
cmp
fs
adc
std
test
orl
inc
pop
cmp
cmc
add
pop
xchg
bnd
arpl
cmpl
fistpl
mov
mulb
mov
icebp
je
shlb
shl
xrelease
jb
add
fildll
cmp
aam
mov
js
sbb
pop
das
insl
ljmp
das
cmc
inc
jns
rclb
sbb
mov
aad
stos
mov
fwait
jge
out
jecxz
cmp
arpl
dec
jnp
cli
jnp
jno
inc
cmpsl
ret
cwtl
push
pop
cld
sbb
aam
dec
mov
fcmovu
jb
mov
lods
lock
aas
add
jns
aam
sub
mov
punpckldq
test
mov
in
pop
popa
std
jbe
pop
scas
movsl
out
lcall
into
test
xchg
rclb
sti
test
xchg
repnz
jns
outsb
fwait
xchg
mov
ja
sub
push
lahf
xchg
sti
fnstsw
adc
sahf
push
rcrb
add
xchg
enter
push
call
es
sub
inc
pop
jae
fdivrp
psrlw
mov
or
in
imul
cmp
mov
fninit
push
mov
outsb
mov
push
mov
inc
push
out
mov
xor
xlat
ja
mov
dec
jp
fidivrs
setp
daa
sub
mov
nop
fwait
adc
cltd
mov
xchg
aas
je
outsb
loop
dec
push
jp
out
sub
into
mov
jno
fnstcw
mov
mov
pop
mov
xorl
and
xor
scas
mov
and
int3
repz
push
adcl
inc
or
cs
sar
mov
mov
ficoml
sbb
xlat
push
push
sbb
sub
and
mov
lahf
ja
or
imul
jnp
fcomi
mov
and
js
add
push
bound
mov
lret
pop
jnp
rcr
jae
cli
js
ficomps
imul
out
mov
mov
repnz
ja
dec
sub
stc
in
add
mov
push
fcmovne
imul
repz
adc
xor
ret
cld
and
test
mov
pandn
push
mov
and
jb
outsl
frstor
popa
mov
sub
roll
es
xchg
and
cmp
jp
jge
inc
cmpb
jg
push
jno
adc
rcrl
push
pop
jbe
jo
adc
jae
or
xchg
push
std
inc
sbbl
mov
mov
sbb
ret
mov
or
repnz
hlt
in
stos
gs
mov
push
inc
inc
rolb
push
jae
sbb
mov
mov
shrd
int3
push
mov
jne
xchg
mov
icebp
mov
jecxz
nop
cld
in
nop
pop
xor
lret
bound
stc
and
jo
pop
adc
jns
aas
fsubrs
pop
arpl
ss
jl
add
mov
push
adcb
sarb
leave
xlat
mov
or
out
mov
cmpsb
aas
jmp
jecxz
insb
clc
sarb
pushl
inc
sarl
test
and
hlt
dec
insb
dec
clc
inc
cld
cwtl
cmp
fidivrl
mov
shll
into
hlt
cli
stc
and
icebp
sahf
aam
out
lahf
and
cmp
sti
pop
leave
movb
hlt
push
jne
jnp
cmp
test
insb
gs
scas
stc
mov
push
pop
ds
pop
iret
jp
add
shlb
inc
loopne
add
pop
mov
repz
add
xchg
xor
inc
mov
push
dec
jp
aam
icebp
or
and
jg
sbb
cld
cmp
inc
pop
cltd
push
out
adc
repnz
mov
mov
push
repnz
xchg
sar
aaa
lret
repnz
cli
mov
sbb
jns
repnz
arpl
jmp
and
and
jo
xchg
or
test
cmp
pop
jb
test
jb
negl
jle
imul
imul
mov
sar
mov
inc
add
mov
jecxz
jge
mov
aam
or
jno
cmc
es
xor
andl
pcmpgtb
clc
cmp
aas
inc
rorl
in
mov
or
mov
repnz
push
sbb
lods
outsl
pop
addr16
xor
insl
insl
push
subl
mull
fwait
scas
or
push
int
jge
paddq
movsl
dec
sub
icebp
bnd
xchg
inc
push
or
incl
out
aad
ds
cmp
xorl
icebp
inc
push
or
aam
pop
aas
fwait
loopne
xor
push
scas
mov
out
rcrl
jg
mov
pop
ljmp
and
lock
fwait
xor
cwtl
shr
nop
jl
out
in
add
ja
inc
jp
mov
sbb
into
jg
sbb
pop
movsl
lock
in
xchg
push
pop
jg
sbb
iret
add
push
push
mov
xchg
jne
inc
sti
add
xchg
in
inc
lods
in
xchg
test
inc
arpl
xorl
sarl
inc
add
sbb
and
rolb
xor
ljmp
xchg
push
addl
fiaddl
pop
jns
fidivrs
and
ja
mov
and
sbb
push
imul
pop
jns
jg
or
push
orb
jmp
fsubrs
mov
mov
xlat
scas
lahf
jp
roll
scas
xor
xlat
xchg
iret
jge
mov
xor
js
jmp
cmp
imul
jne
sbbl
sbb
fnstsw
scas
lock
gs
push
add
xor
cmovae
xor
setae
ljmp
xor
mov
je
cli
int
stc
fidivrs
sbbb
pop
lds
aas
aas
mov
loope
add
les
or
aaa
jmp
or
jecxz
push
sbb
inc
dec
fiadds
imul
cmp
fsubrp
call
jp
fildll
repz
push
outsb
sbb
dec
test
into
pop
pushw
int
push
fisubrs
sub
jmp
into
mov
movsb
push
les
xchg
ja,pn
jnp
fs
cmpsl
jmp
mov
insb
sbb
push
or
dec
dec
xchg
call
rcr
mov
fdivrl
add
cmp
push
enter
into
jg
mov
test
xchg
push
cwtl
lahf
iret
push
cmp
cli
in
and
mov
fwait
jns
inc
jg
imul
fistl
jno
outsb
lods
add
mov
push
mov
xchg
sub
jns
jne
dec
jp
add
mov
mov
jg
jge
jecxz
cwtl
out
je
mov
fnstsw
sbb
and
in
mov
cld
jecxz
jns
sbb
loopne
jns
inc
nop
das
lahf
insl
leave
js
and
jnp
ffreep
fcmovnu
fildll
add
sub
test
pop
lods
sbb
jg
andl
div
out
inc
addb
popa
dec
and
pop
cltd
add
fistpl
addl
push
xchg
mov
stos
lea
cmpsl
lods
cmp
mov
arpl
enter
jae
sti
lcall
adc
mov
loop
les
push
cli
jg
dec
sub
mov
adc
aad
dec
rorl
int3
enter
add
mov
sti
test
jge
loopne
cmp
xchg
ret
repnz
insl
out
xchg
push
rcrl
orb
pop
cmp
ljmp
and
aas
les
dec
gs
xlat
movsl
or
mov
xchg
xchg
cmp
shll
shrl
es
shlb
xchg
push
nop
inc
mov
ds
mov
adc
cli
std
mov
xchg
in
mov
mov
lret
neg
cmp
inc
sub
inc
aas
push
inc
cmp
push
jns
aad
mov
aam
or
cmp
xchg
leave
out
aam
aas
adc
cld
push
orb
inc
int
mov
mov
out
and
ljmp
popa
sarb
les
scas
fsubl
inc
mov
ja
mov
inc
sbb
jae
or
mov
and
inc
sbb
leave
jl
loop
aam
out
scas
outsb
test
fisubs
xlat
cld
and
and
jae
sub
sbbl
data16
dec
cmp
sbb
adc
andps
leave
insl
in
cld
sub
adc
adc
mov
pop
scas
push
inc
or
sub
pop
movsl
pop
sbb
pop
mov
sti
mov
adc
push
insb
icebp
cli
or
mov
mov
sub
mov
lea
mov
jae
fmull
icebp
lahf
pop
out
test
out
lret
leave
push
mov
iret
mov
jb
les
fildll
push
fmul
mov
cmp
jnp
push
loope
out
ficompl
add
mov
pop
sarl
cmp
out
test
testl
add
rolb
pusha
inc
pop
ficomps
ficompl
pushf
and
jno
aas
or
inc
or
jae
les
jno
xchg
adc
icebp
jp
aam
out
jl
leave
hlt
pop
int3
jp
mov
lods
sub
popa
sbb
cmp
inc
bound
xchg
into
mov
les
and
mov
adc
push
or
mov
jb
std
shll
aas
pop
mov
jae
xchg
icebp
jb
cmpsb
stos
fwait
dec
push
jae
sarb
lahf
xchg
push
lds
adc
xor
mov
iret
imull
sbb
jns
cwtl
and
sysret
les
popa
sub
fildll
loope
ret
add
aam
mov
jg
fwait
push
pop
xchg
cs
test
xchg
in
mov
ret
xchg
repz
cmp
inc
xchg
sub
pop
lds
mov
in
jl
push
xor
mov
cld
inc
pop
xor
inc
sti
jp
add
sbb
or
loop
fildl
add
pop
mov
aam
cs
sarl
and
iret
adc
fidivl
jae
icebp
psubusw
stos
std
adc
ud1
icebp
sbb
sub
aam
jns
jg
sbb
or
out
dec
pop
mov
pop
sahf
sbb
inc
out
inc
mov
je
cmp
fmuls
stos
mov
pop
add
sbb
icebp
xchg
cmp
popf
pop
jns
xor
movl
add
push
mov
decb
popa
inc
mov
daa
lret
mov
cmp
test
popl
sti
jle
popa
arpl
cmp
cmp
sub
and
jns
add
gs
jle
rorl
dec
cltd
fsubs
sbb
cmc
les
andl
es
and
stos
out
mov
add
jmp
jg
add
push
out
lods
xor
fbstp
fsubrl
pop
mov
cmpb
iret
push
add
jae
cmpsl
xlat
jae
jg
std
inc
out
arpl
ja
xchg
fsubs
mov
jmp
iret
cmp
fst
mov
cmp
leave
dec
xor
inc
xor
pop
xchg
push
inc
cmp
js
outsl
fneni(8087
arpl
fnstsw
mov
jp
mov
jne
subl
adc
push
inc
jno
decl
xor
push
pop
ja
pop
xchg
movsl
pop
add
inc
ror
sarb
out
jbe
jle
cmpsl
dec
in
or
jge
popa
icebp
pop
mov
jmp
pop
jle
pop
fisubl
add
sysret
test
dec
jbe
loope
pushl
jo
dec
push
and
shr
pop
adc
pop
jo
mov
stos
sub
leave
bnd
bound
je
ljmp
lock
stos
mov
mov
cwtl
dec
push
or
addl
inc
icebp
leave
je
js
cmpb
push
stos
xor
ret
adc
push
sbb
and
or
addl
sub
jge
jge
pop
jle
mov
bound
gs
mov
pop
sub
adc
sti
xorb
adcl
cmpsl
ret
mov
bound
sti
mov
sbbb
je
test
jne
ret
mov
in
pusha
pop
jp
jg
fcos
ds
xor
dec
jp
sub
push
push
push
xchg
dec
enter
mov
ds
in
stc
pop
cmp
dec
bswap
fs
ss
loopne
popf
jge
and
pushf
adc
bound
adc
jae
and
iret
fldt
add
xchg
cld
clc
ds
ret
pop
lahf
add
sbb
inc
lds
jecxz,pt
jae
int
pop
dec
lods
mov
insb
add
push
cmpsl
scas
testl
movb
jne
mov
jle
insl
xchg
adc
call
jle
pop
push
mov
jge
inc
orl
incb
mov
je
cmp
push
jnp
pop
pushf
subb
mov
mov
rorb
push
cmp
xchg
movsb
push
inc
lea
add
stos
xor
mov
dec
xchg
loop
cmpsl
and
mov
cltd
das
sbbb
mov
push
push
push
add
fidivrs
adc
mov
lcall
cmp
cmp
mov
cli
sub
outsb
cmp
inc
and
xchg
rolb
into
mov
push
test
push
adc
leave
dec
movsb
lcall
cmp
push
jnp
sub
mov
outsb
test
jecxz
leave
hlt
mov
mov
jae
dec
jl
or
bound
push
mov
adc
jb
or
orb
int3
popf
sub
mov
bound
ret
hlt
inc
adc
jle
rcr
push
into
dec
lret
xchg
sarl
ds
mov
or
add
add
daa
inc
lahf
mov
shll
and
xlat
push
fisttpl
lods
icebp
ret
decl
mov
loopne
out
outsl
inc
aad
movsl
imul
push
frstor
cmp
aad
mov
lods
and
push
orl
lods
cmc
adcb
int3
push
mov
lahf
iret
fldl
jno
dec
repz
pusha
jg
repz
lds
cmp
and
pop
jo
js
pop
aaa
jae
insw
inc
inc
and
sti
gs
ja
or
sub
add
stos
xor
mov
aam
inc
mov
loop
dec
jae
mov
jbe
cmp
dec
in
mov
pmullw
push
adc
sub
cmp
pop
out
jp
aas
icebp
pop
jle
jo
dec
mov
sbb
and
dec
mov
mov
mov
pop
or
dec
mov
push
fsub
addr16
into
fdivrl
mov
lods
aaa
mov
adc
cmp
pop
nop
mov
mov
pop
xchg
cmp
pop
sbb
inc
jo
cli
jge
push
add
orl
jnp
lea
pop
push
mov
add
icebp
test
jle
add
pop
repz
inc
xchg
xchg
out
jg
imul
sub
addr16
mov
incl
mov
mov
imulb
push
add
andb
bound
lock
push
test
xor
add
movsl
iret
shrl
fistps
test
sub
jnp
hlt
cmp
pop
sahf
jp
fdivs
aaa
ja,pt
cmp
out
xchg
mov
rclb
outsl
xchg
add
popf
jno
push
pusha
xchg
std
pop
xchg
sbb
out
inc
add
pop
push
and
sti
pop
pop
sub
mov
lea
xlat
clc
fimuls
jb
cmpsl
cmp
jl
pop
mov
into
jle
mul
pop
jge
pop
ret
jns
add
stc
dec
iret
mov
push
dec
or
cmpsl
mov
and
std
xchg
jbe
jl
jnp
xchg
call
enter
icebp
lahf
mov
pop
mov
sarl
decl
out
pop
dec
lock
movsl
xor
out
mov
add
test
cmp
sub
mov
mov
and
jge
mov
notb
icebp
addr16
sbb
aam
imul
arpl
inc
popa
addb
int
aas
jge
ret
les
jo
push
gs
jno
dec
rol
pop
in
push
repnz
out
xchg
vunpckhps
out
inc
jmp
dec
fucomip
repz
dec
out
aas
sub
les
sub
cmp
stos
pop
fcmovu
in
add
xchg
vmovapd
mov
test
out
adc
clc
and
pop
out
jge
out
icebp
lds
xchg
and
xchg
mov
into
xchg
add
mov
cmp
lock
pop
push
mov
in
jbe
xchg
pop
push
lcall
sbb
pop
xchg
scas
push
test
pop
mov
xchg
push
pop
add
insl
test
mov
jns
movsl
jnp
mov
das
mov
push
and
sbb
pushf
pop
cmp
mov
outsl
xchg
xchg
ja
xchg
and
push
add
cwtl
cltd
pop
insl
ret
sbb
inc
bound
jecxz
pop
mov
mov
sti
dec
js
addl
inc
popa
xor
xlat
inc
shl
subb
mov
dec
jge
push
aaa
aaa
sub
fldenv
lcall
out
ror
stc
push
aas
mov
push
sbb
jbe
inc
mov
cmpsl
out
inc
inc
sarl
or
jle
hlt
jg
dec
xor
xor
jp
ljmp
loope
ret
sub
mov
jne
push
xor
adc
pop
jg
cli
shlb
mov
mov
fwait
push
mov
adc
push
push
xlat
pop
inc
sbb
imul
push
hlt
push
je
or
sub
lea
or
divb
or
popf
add
mov
mov
push
lds
jmp
mov
std
inc
add
xchg
sub
jne
ret
push
inc
sub
or
in
pop
push
xchg
cltd
sarl
dec
mov
jl
ret
test
pop
out
push
jle
pop
mov
fdivr
or
idivb
push
cld
jb
imul
cmpb
xor
jno
ret
pop
pop
mov
push
mov
jp
aaa
cmpb
int3
sub
bound
les
jp
add
pusha
or
mov
mov
cmpsl
das
ljmp
popa
push
cmovge
rcrb
jne
and
push
es
jnp
mov
jecxz
add
bound
pop
ds
and
cltd
mov
mov
and
fnclex
popa
lahf
jmp
out
cmp
repnz
mov
icebp
fisttpl
das
dec
in
ja
or
sbb
inc
add
inc
int3
dec
adc
add
jb
xchg
push
mov
fiadds
xchg
xchg
cmpsl
jb
fcomi
push
fsubrl
jno
vpsubusw
roll
jne
push
addr16
insl
mov
dec
stc
pop
jge,pn
xchg
movsb
cmp
jnp
mov
xor
lds
xchg
or
pushf
mov
pop
jnp
cmp
pushf
mov
inc
inc
inc
cmpl
aas
pop
imul
inc
push
and
jg
inc
out
mov
sub
scas
jo
les
adc
fs
jnp
xor
or
stos
imul
shr
mov
movsb
int
insb
cmp
cmp
jae
and
xor
mov
and
adcl
aaa
ret
mov
int3
out
scas
push
jae
push
adc
cmp
dec
fildll
imul
xchg
pop
inc
or
dec
negl
in
xchg
lcall
mov
movsb
outsb
in
fimuls
jb
jnp
xchg
fwait
movsl
icebp
push
mov
fs
mov
sub
pop
mov
jmp
fbstp
repz
dec
jbe
in
push
mov
pop
push
mov
jae
jp
jb
lcall
xor
push
mov
sub
and
ja
test
mov
test
pop
or
mov
rcr
inc
mov
xchg
push
iret
push
pop
sbb
loopne
fisttpl
pop
or
pop
sub
mov
and
dec
fdivrp
inc
mov
fmull
ss
mov
fildll
in
push
push
add
fdivp
call
fwait
mov
outsl
cmp
repnz
jns
or
arpl
in
mov
pop
push
inc
lcall
jnp
or
leave
outsb
sbb
insb
dec
lret
mov
mov
cmp
mov
out
outsl
mov
test
mov
dec
add
cmp
imul
ffreep
imulb
subl
jo
add
insl
inc
cmovno
adc
aas
into
mov
dec
imul
dec
pop
fstpt
in
mov
or
test
ret
in
popf
push
jp
pop
out
mov
jmp
into
rolb
sub
push
repz
fcmovnu
cld
jge
xchg
cmc
add
leave
movsb
sbbb
fildl
cmp
data16
sarb
decl
call
cmp
scas
xor
or
js
cmpb
leave
repz
xor
pop
or
cmp
stos
rcr
lods
fsubs
lret
outsl
mov
xchg
pop
insb
dec
mov
rolb
jecxz
and
stos
or
push
cmp
lock
pop
ss
out
sti
je
add
and
push
mov
adc
repz
stos
or
insl
out
icebp
sbb
sub
sub
es
out
enter
pop
pop
xchg
inc
xchg
in
jle
js
and
fs
cld
in
mov
lods
ss
sarl
lahf
test
ja
xchg
mov
lods
cmpsb
inc
jno
call
mov
and
mov
cltd
mov
push
test
ret
or
fisttpl
push
orl
sti
inc
or
dec
ss
jg
fwait
add
gs
push
aas
or
sbb
push
push
lcall
das
add
pop
repz
nop
jae
out
test
push
cmp
push
inc
imul
aaa
ret
xchg
mov
fbld
jae
inc
gs
jmp
js
cltd
lcall
cli
push
ds
dec
cmp
pop
dec
jo
jecxz
nop
push
inc
push
mov
xchg
sbb
xchg
andl
ret
and
cmp
jne
mov
ja
xor
pop
mov
aaa
repz
jno
push
test
ja
and
push
xchg
sbb
push
loop
les
sub
and
inc
pop
sbb
cli
in
lcall
xchg
push
pop
xchg
inc
jno
cltd
jbe
jae
add
jl
dec
jle
movsl
sbb
icebp
and
lock
push
mov
cs
jmp
xor
es
sbb
jns
mov
sub
mov
and
std
add
lods
jno
mov
test
iret
jne
jns
push
arpl
iret
cmp
movsl
aam
pop
arpl
adc
jo
mov
mov
mov
dec
mov
add
add
xor
mov
push
je
in
or
shlb
mov
sarl
ja
data16
dec
add
inc
leave
out
pop
jg
ret
push
cli
add
pop
shrl
dec
sahf
mov
xor
pop
add
cld
test
fldenv
leave
fcom
aas
push
fldt
jnp
jge
sarb
cmc
jl
testl
stc
sub
pop
inc
test
mov
out
and
jnp
sbb
jp
repz
xchg
xchg
hlt
and
xchg
jp
into
fistpl
pop
out
mov
lcall
and
jb
mov
repnz
inc
stos
aam
add
xchg
lret
pop
pusha
jae
cmpsl
mov
adcb
lock
xchg
push
cltd
pop
sti
std
ret
js
aaa
movsb
test
or
nop
dec
roll
jnp
mov
pop
daa
sub
sub
cmp
lds
sub
popa
fwait
and
shrl
inc
vpunpckhwd
loop
sahf
ret
cvttps2pi
push
icebp
iret
ret
aad
iret
ret
xrelease
fildl
mov
push
cmp
sbb
jns
es
mov
jns
jno
mov
sub
pop
pop
jns
push
jp
add
adc
es
or
shll
mov
cmp
fs
iret
adc
fnstenv
jns
mov
dec
adcb
repz
faddl
adcb
push
testl
mov
aam
fstpt
push
push
leave
aad
push
ficoms
jmp
movsb
mov
rcrl
scas
mov
jg
inc
out
test
cs
mov
icebp
fsubr
pop
dec
mov
jns
outsl
xrelease
in
in
push
inc
pushf
add
sbb
inc
and
cmc
ljmp
ss
cmpsb
cmpsl
lahf
addr16
ror
mov
pop
outsb
into
imul
icebp
ror
pop
cmpsl
push
push
push
fisttpl
xchg
pop
push
mov
int3
mov
addr16
data16
out
cltd
ljmp
cld
inc
mov
pop
push
inc
xchg
int3
cmp
out
sbb
mov
leave
push
fiaddl
adc
pop
jp
test
sub
sub
and
xchg
xchg
sarb
adc
cltd
jle
inc
int
aaa
dec
inc
pop
js
rcr
jno
inc
daa
jp
cmp
psraw
cmp
mov
scas
test
jae
sti
pop
and
out
xchg
lret
out
xchg
or
dec
out
dec
incb
cwtl
fwait
jg
ja
sti
jns
je
bts
addr16
fstps
jns
pop
or
adc
jl
scas
leave
dec
sbb
pop
mov
push
xchg
scas
ljmp
sub
jnp
cmp
sbb
push
pop
inc
push
sarb
push
sbb
push
jo
dec
mov
xchg
cmpl
mov
inc
test
xor
fisubl
enter
and
out
cmp
sbb
sbb
add
cmp
fwait
mov
cmp
inc
pop
mov
fdiv
enter
out
lahf
cmpsl
out
cmp
xchg
jbe
lahf
out
std
iret
sub
push
enter
sbb
jp
jns
jno
clc
outsl
into
inc
sub
pop
cmp
or
mov
xor
add
xor
jecxz
mov
loope
lret
pop
xor
pop
ds
shrl
mov
adc
ret
and
test
inc
bound
loope
scas
push
fdiv
mov
imul
into
jg
shlb
inc
sbb
mov
push
stos
push
dec
or
xor
mov
pop
push
fdivl
mov
in
outsl
and
push
faddl
sub
jle
xor
mov
push
jae
imul
mov
inc
pop
icebp
push
leave
cmp
add
gs
cmp
fisttpl
cmc
mov
push
lahf
xor
jne
add
push
cmc
pop
fldenv
leave
cmp
stc
imul
jne
add
sar
cmpl
jg
lahf
jl
addr16
out
jo
test
lret
pop
pop
lret
jl
addr16
stc
add
hlt
mov
outsb
arpl
lods
jnp
sti
jnp
test
jns
mov
mov
je
lcall
xchg
pop
mov
mov
sarl
add
pop
loope
fsubrl
ljmp
jne
pop
loopne
jge
dec
das
push
incb
popa
fsubrs
pop
stos
ja
ffree
loope
pop
fnstcw
dec
dec
jnp
push
jl
pusha
popa
lock
add
mov
cmp
aas
ret
and
fnstsw
cmp
ljmp
popa
outsl
jne
jl
test
orb
test
scas
popa
mov
aas
ret
jp
jno
fildll
jbe
jl
addl
test
scas
cmp
leave
aas
sarl
jno
fildll
jae
jl
sti
mov
adcb
cmpsb
jb
popa
mov
aas
jp
jno
cmp
jb
jns
arpl
mov
cmp
aam
fnstsw
jno
fbstp
jnp
xchg
or
lcall
mov
jge
cmpsl
test
fwait
jno
fisttps
fnsave
imul
lret
add
enter
sar
jp
jno
fistps
mov
je
outsb
jno
cmp
jb
popa
mov
jno
fistps
jae
and
jno
imul
aaa
insl
and
aaa
sti
mov
jno
frstor
fstps
cmp
jae
gs
aas
lret
jp
jno
fildll
mov
popa
cltd
mov
jno
fistpll
push
popa
xchg
aas
sahf
jp
jno
fistpll
popa
rcr
aas
arpl
mov
jns
jae
mov
xchg
fildll
popa
lret
fdivrs
loopne
push
mov
ljmp
pushl
aaa
ja
aam
fdivl
fildll
jo
jbe
xchg
and
shlb
jp
jno
fistpll
cmpl
xchg
popf
aas
cmpsb
jp
jno
fistpll
popa
rcr
aas
bound
jno
fistpll
xchg
jb
add
test
cmp
jb
popa
rcl
aas
fdivrl
jno
fildll
je
jge
mov
jp
jno
fistpll
popa
aam
aas
popa
jp
jno
fbstp
jb
jae
and
mov
fistpll
popa
rclb
test
add
pop
mov
fstpt
addr16
jno
popa
xchg
jb
inc
add
imull
jne
jge
mov
rorl
cmp
outsl
mov
idivl
cld
jp
jno
cmp
jb
popa
lahf
mov
add
aas
sub
mull
jno
fbstp
popa
cmp
xorl
fnsave
sti
aas
add
incl
cmpb
jns
in
sahf
mov
ret
int
call
mov
jb
popa
orl
cmpsb
jno
fbstp
rcl
cmp
jmp
mov
lods
jp
jno
fists
push
jb
popa
jo
aas
fistpll
jno
ffreep
cmp
jb
popa
stos
mov
jno
push
mov
insb
gs
fnstsw
jno
cmp
jb
popa
scas
stos
aas
movsb
jp
jno
fisttps
sbb
addr16
fidivrs
jno
ffreep
cmp
lahf
aas
xchg
jp
jno
fidivrs
aaa
jne
outsb
jp
jno
mov
add
pop
int3
dec
leave
cmp
cltd
push
ljmp
pop
dec
and
int3
imulb
push
ja
mov
lret
rclb
roll
add
or
mov
ror
add
dec
pop
dec
int
aad
inc
les
orb
pop
cmp
insb
fs
addr16
push
fs
fnsave
movsb
push
xor
loope
int3
pop
lret
ja
pusha
inc
mov
dec
dec
xor
outsl
jno
movsb
inc
outsb
out
dec
call
testl
ja
and
ja
pop
fimull
rol
mov
mov
lret
inc
int3
lret
jecxz
xor
fs
loope
into
sbb
scas
push
mov
loope
add
dec
dec
mov
push
pop
push
out
add
fdivrl
stos
movb
mov
push
xor
mov
push
mov
ss
pop
jae
xchg
rorb
mov
movsb
sub
push
and
sub
gs
jp
or
pop
mov
clc
sahf
jae
arpl
data16
bound
push
fldt
jl
insl
pop
dec
shl
cs
push
dec
jg
push
push
rolb
jno
pop
shll
add
rorl
popa
cmpsb
lret
bound
mov
xrelease
inc
add
sarb
pop
mov
mov
and
shrl
popa
roll
ljmp
roll
fadd
mov
outsl
rorb
push
dec
xor
std
loope
lods
add
dec
dec
fisubl
je
outsb
mov
mov
and
int3
js
ret
lret
fists
push
jno
inc
jp
popa
pop
dec
shr
xor
pop
mov
jne
mov
mov
add
fwait
pop
aaa
aaa
imul
cmp
and
jnp
or
pop
inc
jmp
mov
cmpsl
out
push
insl
mov
xchg
hlt
ss
jo
outsb
sbb
push
adc
sbb
lcall
add
dec
imul
cli
mov
sbb
shlb
pop
cltd
fcmovnbe
jno
push
sub
cmp
pop
jge
or
shrl
shrb
mov
js
jb
outsb
popa
test
cmc
lret
fimull
ret
lret
add
je
pop
push
dec
mov
and
push
fstpt
jecxz
outsl
int
outsl
jns
loope
jge
mov
enter
add
xor
fiaddl
in
pop
adc
jle
mov
adc
fcmovbe
int
mov
dec
inc
outsb
into
jl
mov
addr16
fmuls
stos
dec
add
or
into
sub
fcoms
pop
outsl
mov
iret
xor
adc
mov
out
jno
jp
testl
jno
jns
mov
mov
ret
mov
jl
les
xchg
push
lock
add
rcl
into
cmp
stos
pop
push
outsb
pop
push
mov
push
xor
dec
lea
lret
aas
xlat
enterw
xlat
mov
enter
push
xor
mov
jo
xchg
rorb
sbb
jg
xchg
jno
and
add
pop
dec
lods
cmpb
pop
mull
mov
mov
xchg
cltd
push
ret
push
jno
in
popf
jnp
pop
sbb
ret
ficoms
je
loop
cwtl
aad
mov
loope
add
dec
pop
shl
iret
insl
push
inc
dec
jmp
adcb
pop
outsl
jno
jge
sub
enter
mov
jl
cmp
xchg
paddb
in
xlat
xchg
in
enter
dec
xchg
cmc
jns
mov
bound
push
push
icebp
sahf
enter
inc
push
rolb
test
dec
or
insb
movsb
jg
push
dec
push
lret
dec
push
daa
mov
push
cmp
pop
lea
je
insl
ret
jmp
sarb
adc
repz
dec
imul
sahf
in
dec
dec
outsl
test
repz
negl
rorb
iret
or
jge
lods
test
cs
arpl
shrl
sbb
fimull
aad
mov
dec
cmp
gs
roll
loop,pt
jge
xchg
iret
inc
pop
mov
push
outsl
ja
pop
lahf
cli
rcrl
mull
clc
bound
push
leave
fisttps
pop
mov
clc
and
jp
popa
lahf
loop
roll
push
rcr
adc
pop
inc
divb
xor
mov
xchg
dec
or
and
ljmp
sbb
mov
addr16
imul
movsl
lret
jp
jp
rcll
cmp
bound
xor
xorb
lret
imul
in
jbe
push
iret
aaa
loope
fnstenv
int3
mov
int
sub
jge
leave
jno
stos
fstpl
sti
add
lcall
jo
call
outsb
pop
xchg
jne
lods
push
stos
outsl
pop
pushf
jp
addr16
lret
mov
mov
xor
aaa
pop
in
xchg
mov
lret
push
lods
movsl
mov
mul
dec
mov
lret
imul
jg
imul
outsb
fst
ret
or
xchg
push
lret
xchg
leave
pop
pop
cmp
fbld
lret
cmp
xchg
mov
push
lds
out
aas
mov
dec
mov
xlat
mov
sahf
aas
sti
sti
jg
and
push
add
rcr
cmpl
mov
stc
mov
rcl
jns
incb
dec
add
fldenv
cmp
js
fdivrl
jge
sahf
popa
lret
push
mov
mov
int
loop
mov
mov
adc
mov
dec
push
add
popf
jno
mov
call
sbb
mov
rcrb
inc
dec
shlb
or
pop
aas
ds
mov
jbe
loope
mov
fistl
ret
popw
xchg
in
subl
repz
push
orl
mov
pop
fs
shrb
jmp
in
sub
mov
push
aas
fidivrl
jo
mov
int
repz
push
fnstcw
outsl
fcmove
movsl
sbb
and
mov
mov
cmp
incl
inc
inc
mov
fbstp
cmpsl
push
fisttpl
push
nop
icebp
aam
ljmp
hlt
push
mov
push
fnsave
js
leave
shlb
sti
iret
rcrl
sarl
pushf
scas
jno
stos
fbld
fdivrp
mov
pop
fbld
sarl
pushf
hlt
xchg
lea
and
insb
leave
pop
out
idivl
jmp
fildll
sub
dec
ja
pop
sbb
lahf
jle
add
enter
fs
pop
dec
mov
fdivl
aaa
push
sahf
insl
mov
jbe
sub
insl
movsl
adc
cld
mov
rcll
gs
mov
push
repz
sub
fildl
xor
fnsave
popa
imul
jb
adc
jbe
jle
loopne
insl
aad
lods
ds
sahf
clc
mov
and
dec
lock
fistpl
imul
mov
push
outsl
or
outsl
lcall
aam
test
nop
insl
mov
xor
shrb
pop
sti
add
ror
aad
icebp
or
xor
jo
lret
pop
pop
mov
stos
jno
push
mov
mov
add
scas
sbb
outsl
ljmp
adc
sub
jno
or
or
outsl
clc
shr
cld
jne,pn
xor
jbe
mov
cmpsl
mov
adc
sar
cs
xlat
push
icebp
sub
out
xchg
lcall
cmp
adc
jne
jno
mov
mov
mov
pusha
fnstsw
jno
fcmovne
stos
xorb
mov
sbb
jno
aas
jno
dec
aaa
mov
push
test
jae
stos
pop
mov
cld
mov
pop
dec
push
loop
add
mov
pop
inc
outsl
mov
inc
xchg
dec
daa
popf
clc
jb
mov
jge
cmp
mov
pop
pop
jmp
mov
pop
test
jno
sub
lock
sti
cmpsl
insb
jg
lahf
clc
pop
sbb
arpl
jmp
loop
mov
in
loope
sbb
movsb
dec
mov
xchg
insl
jae
fcoml
dec
rolb
mov
mov
rol
jge
aas
fiaddl
addr16
arpl
push
fnstsw
pop
sub
mov
in
bound
iret
mov
pop
lahf
adc
xchg
push
push
jo
out
stos
push
add
mov
inc
xlat
aas
fsubs
mov
icebp
enter
pushf
mov
jne
push
pop
leave
test
xorb
lret
dec
pop
movsl
jp
cmp
leave
jge
xlat
mov
sar
pop
int3
fistps
jecxz
enter
dec
lea
jg
lret
fwait
xchg
inc
sahf
xchg
bound
aad
out
jl
push
js
outsb
lods
mov
insl
shl
movsb
ret
jbe
push
mov
loope
cli
jnp
or
pop
add
jno
jb
sar
repz
jl
adc
addr16
insb
jp
pop
mov
mov
call
sbb
jae
push
xchg
aaa
icebp
in
pop
fcom
je
pop
stos
cmpl
icebp
xchg
fidivs
jnp
arpl
sub
fmulp
mov
dec
fcmovbe
push
lahf
inc
inc
add
shl
jp
xor
jb
mov
bound
jp
or
and
push
xor
cmp
xchg
xchg
push
pop
xorl
fildll
lret
movl
add
fistps
movsb
int3
lods
test
inc
js
imul
lods
roll
jb
ds
push
loopne
pop
mov
add
bound
mov
xchg
mov
push
push
xchg
add
xor
hlt
outsb
or
xor
push
ljmp
stc
pop
dec
jb
jb
pop
xchg
dec
pop
cvtps2pi
cltd
push
jnp
pop
je
push
shll
jnp
cmp
imul
mov
test
jl
mov
cmp
js
fstp
data16
push
mov
jae,pt
jg
bound
xchg
ret
shll
cmp
popf
pop
pop
clc
mov
pop
xlat
push
pop
push
mov
jecxz
iret
fdivrp
pop
jmp
fwait
mov
mov
pusha
ja
icebp
movb
jnp,pn
std
cmp
jmp
fcomip
fdivl
outsb
dec
jmp
push
int3
xchg
aam
in
aaa
jns
mov
dec
fldenv
and
xchg
loopne
shrb
in
aaa
outsl
and
pusha
jle
or
fisttpl
mov
inc
jb
dec
cltd
pcmpeqd
into
sub
jmp
lods
lret
loope
sub
pop
inc
push
jp
push
enter
and
stos
fildll
rclb
leave
bndldx
push
mov
mov
xchg
movsl
push
int
fnsave
cli
rcll
push
jo
jns
cmp
gs
cli
add
sub
mov
jo
lret
scas
pop
jecxz
mov
sarb
je
xor
push
mov
pop
ret
test
push
aas
xchg
jno
fsubs
jns
je
mov
mov
aaa
mov
sar
add
imul
xor
and
inc
subb
add
leave
lods
jne
jg
fwait
push
inc
fwait
popa
int
sti
lahf
cmc
cmpsl
sarl
call
imul
jecxz
mov
fwait
mov
jne
xchg
xchg
xchg
hlt
sti
jnp
add
repnz
je
inc
dec
addr16
mov
cmp
ja
addr16
xchg
loopne
mov
lahf
cmp
xchg
lcall
stos
xchg
jno
dec
jb
pop
fwait
cmpsl
cmp
and
lret
inc
fsubl
iret
jmp
sahf
dec
gs
adc
insb
cmp
std
adcb
movsl
xchg
addr16
jg
lahf
xchg
xchg
adc
lahf
lahf
xchg
insl
mov
aad
jge
filds
dec
lahf
pshufw
or
shll
xor
sarl
test
inc
xchg
lods
jb
fwait
jg
cmc
xchg
fdivs
aaa
outsl
jmp
cmp
fwait
mov
push
jg
ja
ja
xor
addb
ja
dec
xchg
jno
fstps
fidivrl
imul
cmpsl
jecxz
mov
scas
mov
imul
cmp
mov
jnp
repz
outsl
pusha
fnstcw
mov
repz
pop
xlat
cli
mov
outsl
rcll
call
bnd
mov
hlt
fs
arpl
xchg
jecxz
mov
add
arpl
push
cmpl
jae
mov
jge
add
cmp
pop
push
or
loope
inc
xchg
les
sahf
je
addr16
loop
shr
sar
add
add
iret
in
mov
sbb
outsl
popa
fildll
jbe
add
jns
popa
fistpll
negb
push
test
mov
je
add
fisubrl
mov
sub
push
xchg
dec
or
inc
movsb
xor
jne
je
pop
loop
cmpsl
mov
ja
imul
lahf
aas
jge
sti
mull
xor
cmp
jmp
ja
add
xor
xchg
repz
xchg
das
jle
sbb
jno
mov
cld
sti
or
inc
hlt
add
and
xchg
je
fcomi
add
jo
fisttpl
jg
or
repnz
jl
add
fisttps
fstl
ja
pop
add
sbb
es
jns
jg
rcll
outsl
jg
sbb
jae
jg
fbstp
mov
pop
mov
jb
ret
ja
sbb
scas
jg
lret
xchg
fldt
mov
push
ja
xlat
jae
ja
mov
stos
mov
loope
cmpb
jae
jne
loopne
jns
xchg
addr16
sbb
cmpsl
daa
mov
sti
ret
xchg
mov
xchg
pop
mov
cmp
dec
jnp
ja
mov
cmp
push
jne
push
sub
add
lea
cwtl
repz
xlat
jl
jb
fisubl
cwtl
repnz
outsl
jae
ds
xchg
cmp
shll
pop
jge
arpl
xchg
push
add
mulb
mov
sub
gs
xor
jb
popa
adc
jge
xor
cmpb
jp
jno
mov
fldt
mov
fldcw
js
mov
pop
jecxz
fucom
fnstcw
push
dec
andl
hlt
in
push
add
sub
mov
xchg
cld
mov
gs
fs
jbe
cmpsb
jg
sarl
xor
add
sti
bnd
inc
adc
test
xorb
lret
jae
push
mov
xor
push
push
sbb
jae
jns
xor
jnp
pop
inc
mov
ret
addr16
sbb
or
cmpsb
mov
xor
push
push
lahf
outsl
sbb
cmp
sub
mov
repz
jno
imul
int
pop
pop
enter
push
and
sub
mov
pop
xchg
aas
lea
xchg
adc
lds
ja
mov
xor
xchg
shlb
out
cmc
testl
scas
bound
movsb
ffree
mov
out
pushf
pop
lds
out
cmp
unpcklps
add
jg
mov
vmwrite
mov
adc
add
and
lods
mov
adcb
fwait
jae
sub
stos
jg
cmp
add
jmp
lcall
push
jae
push
enter
daa
adc
or
lcall
outsl
pop
test
shrb
pushl
lret
insl
call
mov
cmc
cmpl
cmp
repz
inc
mov
mov
or
repz
ficoml
sti
xor
inc
inc
xor
test
repz
push
and
lret
push
push
xchg
inc
test
jg
jne
xor
jecxz
test
sbb
lret
jbe
adc
loopne
test
mov
lret
mov
push
sbbl
sub
leave
mov
push
stos
aam
notl
jns
xchg
out
test
lock
add
stos
jnp
fcomi
lret
add
test
add
cli
frstor
addr16
int
push
lock
popf
loopne
fldt
das
popf
inc
aaa
jmp
stos
pop
popa
adc
push
imul
lret
leave
lret
push
push
int3
std
xlat
out
jns
push
mov
jne
test
int
bound
bound
addr16
out
dec
ja
bound
rcll
jge
inc
inc
movsb
jmp
lret
add
ss
lret
cmpsl
lret
cmp
pop
push
dec
ret
pop
dec
enter
cld
mov
jecxz
sbb
sbb
jp
dec
popa
push
jb
mov
lret
mov
add
mov
fstps
mov
push
leave
aaa
dec
push
leave
stos
repz
push
xor
imul
shr
iret
inc
jle
inc
fbstp
decl
iret
pop
imul
cmpsb
dec
cmp
push
pop
pop
fwait
cld
je
mov
aam
xor
cmp
lcall
loope
mov
pop
loopne
pop
loopne
push
iret
lods
fs
sarb
mov
jo
adcl
testb
arpl
shll
push
push
mov
fists
lods
fldt
jo
fcmovbe
lret
int3
jp
leave
mov
imul
mov
adc
push
ret
test
add
fstps
jo
push
mov
repnz
push
icebp
inc
push
fists
xor
jp
fs
and
jp
mov
xor
xchg
or
sub
fwait
mov
addr16
mov
shlb
mov
jnp
sbbl
dec
jecxz
int
fcomp
xorl
into
pop
pop
pop
dec
clc
mov
pop
lcall
fiaddl
mov
arpl
mov
jmp
out
shll
pop
sub
sbb
push
jmp
clc
xor
mov
dec
cwtl
sub
dec
aad
or
pop
pop
push
cmp
fcmovnu
pop
inc
fisttpll
pop
loope
sub
mov
out
mov
xchg
inc
int
inc
leave
jg
jae
cmc
addb
mov
jae
push
imul
shlb
mov
lahf
add
mov
xchg
pop
nop
faddl
fsts
push
cmpsb
and
sub
push
iret
int
sub
sub
dec
mov
out
pushl
jns
repz
repnz
lahf
dec
ret
mov
mov
jge
xchg
clc
leave
pop
ret
popa
dec
cmp
fwait
push
mov
mov
mov
inc
add
pop
ja
outsl
jae
jns
jg
lret
xchg
repnz
stc
xlat
mov
sbb
mov
dec
test
mov
xor
cwtl
jns
mov
jg
push
loop
dec
cmpsl
rcr
xlat
fdivs
mov
fisttps
jne
jns
leave
ja
push
outsb
dec
cmp
dec
stos
push
fisubrs
jns
testl
pop
mov
fistpll
aad
lds
addr16
into
mov
jne
addr16
jae
loopne
dec
sahf
arpl
xorb
pop
jmp
hlt
je
js
daa
xchg
int
push
sub
leave
jge
mov
jnp
loope
jb
mov
jmp
inc
jp
clc
cmp
mov
add
jmp
sbb
loopne
insb
mov
mov
arpl
mov
push
inc
in
push
mov
fmull
fistps
ss
stos
popa
ror
cmpsl
mov
xchg
fdivp
test
ficomps
jbe
fmul
jo
dec
les
mov
mov
xchg
call
xchg
push
xchg
push
gs
dec
mov
lock
cmp
dec
push
mov
iret
fisubs
jp
stos
mov
stos
mov
rcrb
int3
fldl
jae,pt
xchg
mov
jbe
mov
xor
dec
jecxz
rclb
mov
xchg
inc
lret
ss
pop
dec
ror
pop
dec
xchg
les
dec
cmc
sbb
jae
adc
mov
inc
loope
lret
int
jb
sbb
mov
cmpsl
xchg
rolb
gs
sahf
push
pop
frstor
lret
pop
loopne
pop
dec
scas
js
hlt
fs
jnp
hlt
xchg
jae
jmp
and
ja
xlat
push
jnp
aaa
lret
jmp
lahf
mov
mov
mov
cmc
hlt
divl
or
jae
jno
imul
xchg
icebp
jo
mov
xchg
mov
jno
mov
dec
sbbl
ja
inc
addr16
cmpsl
pop
aas
enter
icebp
ja
jl
sahf
jnp
xorl
mov
fistpll
loope
shrb
filds
movsl
mov
jge
out
mov
jnp
push
mov
std
mov
outsl
jae
jg
mov
pop
jae
ret
mov
stos
xchg
outsl
in
loop
xchg
lods
lret
test
leave
mov
sub
jae
fs
jae
push
cmp
push
dec
shll
loope
push
dec
in
xchg
jno
inc
aam
or
xchg
cmpl
jge
add
daa
ja
xchg
dec
sbbl
sbb
dec
xlat
push
mov
js
pop
fidivl
push
lret
lahf
ja
popf
xchg
scas
outsb
xchg
sbb
iret
mov
loopne
mov
dec
stc
dec
push
jno
xor
push
js
aas
mov
fisubl
fwait
pop
insb
mov
jp
pushf
mov
imul
mov
jle
ja
jno
mov
ja
mov
jmp
aam
fbstp
xchg
rcr
jno
aam
iret
outsl
inc
nop
ret
push
fisubrl
sub
mov
imul
xlat
in
jge
lods
add
pushl
push
popa
lret
adc
aaa
xchg
or
lret
xchg
sti
pop
and
dec
mov
add
or
sub
jmp
aad
in
les
int
scas
insb
sub
jg
lret
jae
fldt
pop
shrl
in
out
mov
and
outsl
push
lock
sti
jp
xlat
adc
add
jns
out
dec
adc
dec
mov
in
jmp
jmp
insl
jae
cmpb
add
sarb
mov
cmpl
stos
aad
repz
aad
mov
jno
fs
rcr
jp
fstp
inc
jge
dec
lret
aam
lods
add
je
push
push
dec
dec
cli
and
dec
mov
fsub
fcmove
pop
pop
fdivrl
or
nop
push
pop
pushf
shrb
jno
jae
push
ljmp
lahf
dec
dec
mov
mov
test
pop
fcmovnu
outsl
jecxz
movsl
out
fistps
es
and
ret
ficoml
mov
jae
cmp
dec
xor
stos
jns
rclb
jnp
pop
rorl
mov
out
in
enter
cmp
movhps
pop
push
fidivl
push
das
scas
jns
test
stc
or
inc
out
pop
loope
mov
out
dec
out
out
les
sub
cmp
jnp
jne
xchg
cmp
or
pop
les
popa
xor
xor
int
lea
jnp
pop
mov
adcb
enter
dec
cmp
sbb
rcr
mov
adc
mov
sub
push
outsl
push
shrl
xor
sahf
sbb
mov
lret
aaa
lods
in
push
and
xchg
jl
stc
xchg
jecxz
xor
movsb
jb
fwait
xchg
lock
and
leave
cmp
sarb
lret
xor
aam
jg
lods
add
and
es
negl
int
mov
loop
jnp
ret
testb
loope
push
fnstenv
dec
lret
sbb
fcomps
mov
push
mov
mov
loop
xlat
in
outsb
loop
inc
iret
ljmp
ficompl
jns
dec
mov
add
jo
sbb
jo
loope,pn
jp
dec
mov
xchg
dec
jne
outsl
pop
adc
repz
pop
bound
jnp
mov
outsl
insb
addb
pop
pop
mov
sahf
daa
ja
and
test
pop
fsub
push
or
cmp
sar
pop
jae
pop
jno
lea
insb
jno
push
jno
orb
push
iret
fldt
push
jnp
in
jle
test
sbb
icebp
notl
std
lock
or
jecxz,pt
enter
lods
js
dec
mov
ljmp
jmp
fisubrl
jne
adc
ja
sbb
mov
das
je
cmpsl
negl
xlat
aam
ja
jg
xchg
mov
cmpl
ja
movsb
ficomps
jno
add
cmpsl
scas
xchg
fsubp
pushf
arpl
movsl
fwait
lds
sbb
inc
outsl
jae
imul
data16
push
cmpsl
mov
mov
hlt
cld
mov
outsl
xchg
roll
adc
xlat
lock
mov
sti
cmpsl
popa
test
sti
ja
popl
lret
scas
mov
sbb
jnp
sbb
rcr
rol
pushf
jb
loopne
sbb
scas
sti
cmp
jnp
iret
xchg
pushf
jp
imul
cmc
mov
xchg
jnp
iret
lret
mov
jecxz
add
outsl
loop
lret
popf
jg
jns
addr16
ret
cmp
jnp
insl
add
sti
push
mov
outsb
mov
scas
xlat
sbb
mov
insb
mov
popa
in
or
lret
mov
fstl
sti
aas
push
jp
cmp
cs
dec
add
rcrl
test
test
adcb
ja
cld
cmpb
jl
cltd
sub
jg
mov
in
push
lahf
lret
add
cmp
sbb
jg
addb
loopne,pt
jnp
sub
jnp
lcall
cmp
cmpl
icebp
arpl
ja
and
das
lret
aam
jns
aad
lds
bound
jp
jno
pusha
cwtl
mov
cmp
ficoms
adc
add
mov
sti
jle
mov
jnp
aas
sti
jp
jno
fbstp
cli
jnp
push
jb
loope
add
jb
jbe
aad
aas
jno
jne
test
fstp
sti
inc
aas
xchg
jp
jno
filds
popa
cmpsl
add
js
popa
xchg
add
jg
into
sarb
lds
xorb
out
and
jns
dec
lahf
cli
add
insl
shlb
ss
arpl
aas
jp
addl
pusha
loop
fldt
fidivl
pop
jg
pop
push
push
aaa
vpaddusw
cmp
pusha
lret
imul
test
ret
inc
out
fstp
cmp
out
jp
aaa
jnp
aad
mov
lret
pusha
xor
sub
sbb
dec
jge
lret
iret
push
inc
push
inc
pop
mov
test
in
imul
fildl
je
hlt
out
jp
jno
pop
sub
mov
push
imul
jno
fadds
shl
mov
xchg
rorb
mov
lret
jae
ret
and
pop
aaa
repz
cmp
xorb
add
arpl
add
mov
cmpb
add
jnp
jg
mov
jae
mov
addr16
iret
mov
fcmovne
gs
push
sti
add
cmp
xchg
pop
add
or
lahf
sti
jle
xlat
jb
popa
lret
jnp
mov
ffreep
cmp
lds
jp
sub
and
inc
jno
fistpll
cmp
jnp
add
cmp
cli
jge
shll
push
sti
jno
fistpll
mov
jl
mov
in
mov
mov
jae
mov
fstpt
cli
jp
jno
push
sarb
mov
aaa
stos
sti
sarb
jno
fists
sahf
sti
jnp
sbbb
arpl
popa
xlat
cld
arpl
lret
aas
jnp
mov
cmp
cmpsl
popa
cli
fwait
aas
jns
jno
test
ja
aam
imul
cmp
jb
popa
sarl
aas
sti
jne
cmpb
je
mov
jae
mov
popa
jg
jg
cmp
popa
addr16
aas
movl
sub
jmp
mov
jmp
cmp
ja
lahf
popa
notl
jno
popa
jnp
jg
cmp
cmc
popa
arpl
aas
xlat
jp
jno
cmp
lret
cmpsl
aas
dec
jp
jno
fisttps
jl
aas
ja
loopne
subb
cmpsb
popa
sarl
pop
jp
jno
fistpll
popa
frstor
jno
fisttps
cld
jb
popa
jae
aas
addr16
jno
fistps
iret
jb
push
jp
jno
cmp
xlat
aas
xchg
jp
jno
mov
shll
outsl
aas
aad
arpl
cmp
jb
popa
push
mov
jno
fbld
popa
push
aas
iret
clc
cmp
jb
popa
imul
jp
jno
fisttps
jb
popa
mov
dec
jno
cmp
leave
mov
jp
jno
fbld
dec
jb
popa
iret
aas
inc
clc
xchg
cmp
jb
popa
inc
stos
aas
lds
jno
fists
jae
xorl
popa
outsl
sub
arpl
stos
jg
xlat
jno
cmp
xor
mov
fildll
cli
ret
mov
and
dec
jno
cmp
dec
popa
aas
sarl
jno
fsubrs
jb
sarl
sti
pop
aas
mov
fists
cmp
stc
popa
adc
addr16
cmp
jb
jae
add
sti
inc
add
mov
jecxz
pop
stc
and
repz
pop
cld
lahf
xchg
repz
or
lahf
outsl
fcomip
mov
xchg
in
mov
scas
pop
loop
mov
jg
clc
xchg
ja
mov
xchg
repz
pop
iret
cld
lahf
mov
hlt
mov
or
test
xrelease
ja
rep
pop
addr16
lahf
ffreep
loop
mov
hlt
mov
xchg
mov
repz
pop
cmpsl
cld
adc
pop
xchg
cld
lahf
pop
loop
or
cld
mov
mov
mov
xchg
iret
in
movl
cmpsl
hlt
and
mov
xchg
jg
hlt
jnp
test
xchg
addr16
filds
xlat
cld
lahf
iret
mov
scas
inc
xchg
cmpsl
in
inc
xchg
xchg
in
popl
xchg
mov
ja
outsl
cld
lahf
addr16
xlat
hlt
mov
xchg
mov
scas
cld
lahf
cmpsl
les
loop
mov
mov
mov
xchg
xlat
in
iret
pop
cld
lahf
mov
scas
hlt
mov
mov
xchg
xchg
jnp
cmc
xchg
xchg
outsl
in
addr16
lahf
xlat
hlt
mov
xchg
scas
in
cmpsl
push
mov
repz
pop
cld
lahf
xchg
repz
or
lahf
outsl
fcomip
mov
xchg
in
mov
scas
pop
loop
mov
jg
hlt
xchg
ja
mov
xchg
repz
pop
iret
cld
lahf
mov
hlt
mov
or
test
xrelease
ja
jb
jp
xchg
xlat
ljmp
jae
les
jnp
jnp
mov
sub
mov
cmp
fldt
mov
loopne
mov
xchg
inc
jle
ss
jg
cmp
outsl
mov
lahf
cmp
scas
mov
push
arpl
iret
mov
xchg
sub
jp
jl
mov
cmpsl
and
jne
jl
cltd
sahf
jnp
jg
mov
add
cmpb
data16
inc
mov
stos
sbb
stos
imul
shlb
xchg
mov
cmp
lds
cmp
xor
xchg
cmp
rcrl
ret
pusha
fadds
dec
iret
imul
jae
mov
lahf
insl
jnp
arpl
loop
rcll
mov
in
fucomi
imul
add
fstpt
ljmp
add
pushf
pop
shl
jno
ficompl
jns
mov
out
lret
scas
movsl
fwait
out
arpl
jae
mov
stc
xor
mov
mov
addr16
jl
mov
add
fstpt
adcb
mov
mov
mov
loopne
jae
add
ja
inc
jnp
gs
mov
add
pop
mov
mov
arpl
jae
int3
jnp
or
fld
mov
int
cld
xchg
fildl
movsl
repz
ror
repz
cmpsl
xchg
fistpll
sar
testl
mov
mov
stos
xor
mov
jecxz
add
ja
andb
mov
mov
sbb
adcl
xor
mov
shll
int3
jae
fisubrl
ret
enter
push
mov
push
pop
mov
jl
outsl
sarl
adc
jl
addr16
frstor
jae
imul
sub
xchg
es
jne
mov
mov
imul
adc
mov
inc
jg
push
jns
arpl
scas
mov
or
insl
jae
cmpsl
test
cld
xor
push
ja
data16
loop
sarl
xchg
xlat
xlat
jbe
jae
jg
jge
repnz
add
xlat
jno
fwait
xor
fldt
popa
ljmp
out
xchg
jnp
mov
xlat
mov
inc
popa
pop
jnp
xchg
pop
out
enter
push
or
jne
fwait
push
inc
ret
mov
jae
lds
mov
mov
andl
mov
mov
test
mov
xchg
push
jae
mov
cmp
and
aam
ret
pusha
mov
mov
gs
jge
jae
filds
mov
jae
dec
repz
and
jae
shll
xor
movsl
incb
fistpl
mov
push
cmp
mov
xchg
mov
ret
adc
xor
test
jae
je
imul
gs
mov
rolb
and
jnp
mov
andb
cmp
mov
jle
scas
jnp
test
cmp
popa
sub
jg
sub
shrl
lahf
sub
cmpsl
mov
jg
xor
popa
mov
jg
inc
mov
ds
fsub
jl
iret
push
xlat
rclb
xor
fldenv
push
insl
jb
loope
in
push
jle
popa
sub
jo
mov
ficoml
idivl
int3
outsl
shr
push
push
mov
rcll
shrl
sti
cs
popa
jno
enter
repz
mov
lahf
push
aaa
int3
add
jne
enter
mov
push
pop
or
inc
int3
stc
dec
or
test
fisubs
imul
in
push
in
out
popl
push
mov
dec
sar
movl
xchg
and
add
outsb
jecxz
mov
addr16
imul
into
push
stos
rcr
aad
cmp
bound
push
loope
stc
push
stos
icebp
jo
stos
aad
jae
sbb
das
lret
mov
cld
jp
insl
mov
cwtl
addr16
and
stos
stos
push
mov
push
popa
ret
lods
mov
addr16
outsb
dec
int3
sahf
les
push
pushl
lret
std
out
ret
mulb
and
or
pop
rorb
sti
mov
lret
pop
shlb
hlt
mov
dec
out
nop
mov
cmp
mov
cmp
test
jb
stos
dec
xor
out
mov
xchg
scas
shll
inc
mov
leave
cmp
jp
out
test
scas
cli
int
jbe
test
pushf
jno
ljmp
bound
test
loop
jecxz
sahf
aaa
mov
jo
fists
loop
push
cmp
out
cwtl
push
dec
mov
add
jne
fisubrl
fnstcw
jae
jmp
dec
repnz
cmpsl
fimull
dec
jl
shrb
mov
xchg
std
push
jnp
das
in
out
les
dec
xor
jne
xlat
ljmp
mov
scas
je
adc
lret
loopne
mov
leave
stos
test
insb
xor
mov
mov
push
push
fneni(8087
xchg
les
mov
rolb
int
int
cwtl
aaa
mov
in
xor
outsb
dec
push
test
pop
insb
aad
xchg
loop
loope
jp
jecxz
jo
cmp
mov
xchg
push
xchg
lods
push
mov
xchg
sub
lods
movsb
pop
mov
pop
dec
int
cmpsl
mov
cmp
cmp
xchg
pop
push
jp
pop
mov
lods
xlat
pop
leave
rcrb
iret
insb
sahf
jg
fbstp
sub
fmull
testb
add
jae
jnp
std
orl
push
jmp
je
xor
ret
sub
add
cli
mov
jle
add
jg
add
xorb
incb
loopne
sahf
jnp
mov
jne
imul
loope
pop
add
add
cmp
cld
jo
pop
andl
mov
or
nop
cli
jb
mov
js
adc
cli
jns
fisubrs
adc
sub
int
popf
jle
jp
fcmovnb
lea
std
push
aaa
pop
jp
outsl
lock
cmpl
jecxz
je
ret
repz
cmpsb
nop
in
aad
pop
leave
sbb
xchg
imul
cmc
add
idiv
arpl
lret
xchg
inc
xchg
lret
outsl
das
daa
mov
mov
push
jo
insl
in
cmp
call
inc
lret
insb
insl
fiadds
das
iret
xchg
fcoms
fwait
ret
mov
sbb
icebp
mov
add
add
test
lahf
incl
ljmp
cld
add
rcrl
cmp
fs
xchg
hlt
orb
cmp
jb
jae
xor
cwtl
outsb
mov
jmp
adc
int
aad
iret
lods
stos
orb
xor
jmp
fwait
and
out
rcrb
pop
dec
stos
and
sbb
mov
imul
or
insl
mov
mov
fbld
inc
sahf
jle
insl
fsub
add
jae
mov
jp
add
mov
jae
push
lret
add
fcoml
cmp
mov
std
push
sub
pop
aaa
leave
imul
xor
mov
push
and
rep
mov
ficompl
push
aaa
fnstenv
outsl
mov
leave
ret
iret
jno
shl
lock
test
pop
pop
push
jge
sub
cmp
mov
lret
lods
push
addl
pop
enter
int
mov
or
jle
sti
sub
push
pop
sahf
inc
inc
mov
mov
and
fisubl
repz
lret
ficoml
jb
cmp
cmp
xor
pusha
stos
xchg
test
push
not
cmp
xchg
call
cmp
pop
lret
pop
pusha
xchg
inc
xchg
inc
fldenv
aam
faddp
xchg
and
aad
lcall
jne
stc
add
fwait
jnp
bound
add
mov
dec
outsb
clc
mov
arpl
cwtl
add
sbbl
push
daa
aam
sub
dec
adc
rcll
ds
out
stos
sti
cmp
fmul
jmp
stc
add
jnp
jp
dec
and
xor
repz
js
inc
jnp
js
inc
jnp
mov
jnp
lret
mov
jne
andl
fistl
andl
lods
aam
arpl
xchg
pop
xchg
out
leave
or
xchg
shrl
xor
xlat
leave
scas
jl
xchg
push
cltd
pop
dec
add
add
add
cmp
xchg
jnp
jl
int
inc
sub
add
popa
dec
arpl
int
mov
mov
leave
mov
pop
sbb
test
lcall
jb
jno
cmp
dec
and
mov
mov
repnz
cmp
fldt
gs
pusha
inc
nop
mov
jbe
and
sub
xchg
inc
jnp
stos
mov
arpl
add
adc
xchg
mov
lcall
push
in
and
mov
jb
cmpsl
lcall
popa
jge
sub
xchg
add
xchg
add
cld
sbb
xchg
cs
pop
sbb
mov
popf
inc
cmp
sub
outsl
jg
or
mov
dec
loope
repnz
sbb
add
dec
jg
jnp
mov
scas
adc
leave
out
inc
rcl
mov
in
mov
scas
lret
mov
test
lahf
push
mov
cmp
out
mov
cmp
add
fbstp
fmull
xchg
mov
mov
nop
add
dec
jno
push
aas
mov
inc
scas
call
push
insl
cmp
ret
cmp
add
cmp
sbb
hlt
xchg
lahf
cld
mov
lret
ja
sub
std
xchg
aad
std
arpl
adc
arpl
mov
repz
scas
jb
mov
jg
inc
jl
inc
sbb
inc
stc
sub
push
cli
and
imul
nop
dec
jecxz
push
pop
inc
mov
fwait
sar
mov
ret
test
subb
lret
ret
jg
jg
enter
notb
jae
push
mov
scas
pop
add
sub
int3
ret
and
lods
arpl
xor
jnp
ffree
or
jae
push
or
imul
lahf
fistpl
inc
sti
xchg
clc
jne
out
jae
jmp
movsb
dec
xor
test
rcll
adcl
adc
fadd
jge
pop
sti
pop
sbb
addr16
ljmp
incb
mov
icebp
mov
pop
je
inc
add
loope
movb
imul
repnz
clc
iret
icebp
or
push
mov
push
add
mov
inc
fdiv
jnp
aam
dec
repz
fiaddl
jnp
xchg
add
aad
cmc
sti
psubusb
push
add
dec
adc
jae
inc
call
pop
cld
data16
stos
or
lret
stos
jnp
js
inc
or
or
jnp
aaa
mov
jnp
xorb
jnp
cmp
xor
arpl
mov
mov
fcmove
mov
arpl
xchg
pop
sahf
stos
scas
pusha
add
test
add
orl
cld
stos
jge
out
jns
cmp
xchg
into
scas
addl
jg
pop
rcr
add
mov
jg
loope
sbb
fucom
fistl
jnp
adc
jg
mov
jne
cs
test
xorl
xchg
mov
mov
popf
loopne
add
ret
fnsave
gs
push
movb
dec
add
addl
ret
push
sti
les
popf
call
inc
xorps
fldl
test
in
pop
test
call
aad
in
inc
xor
add
add
jno
mov
sbbb
data16
xchg
cmp
mov
clc
xchg
sbbb
xchg
jae
cmpl
lcall
js
flds
jne
imul
dec
mov
andl
movb
cmp
imul
fwait
add
cmpl
fcoml
jae
jge
outsl
jne
imul
cld
cmp
mov
outsl
jno
insb
imul
je
sbb
mov
sbb
jnp
pop
mov
fdivrs
jge
in
addr16
xlat
jo
jae
popa
mov
push
lret
repz
add
das
repz
orl
imul
lret
sbb
in
adc
test
addl
ljmp
call
ret
adcb
xchg
jp
outsb
imul
xchg
xchg
mov
loop
fs
xor
popa
jnp
fisttpl
testl
or
outsl
arpl
repz
cld
arpl
xor
dec
repz
pushl
rorl
cmp
addr16
dec
pop
mov
xor
jns
add
cmpb
addr16
outsl
mov
andb
fstp
sbb
shlb
ret
popf
mov
push
mov
jg
rcr
or
fimull
iret
or
xor
shlb
adc
sbb
rorb
ffreep
test
adc
rclb
arpl
xor
or
pop
call
aad
ljmp
rorl
in
pushf
sti
orb
mov
jne
popa
test
inc
inc
int3
imul
mov
cld
les
pop
add
sbb
lods
call
jne
scas
fwait
imul
sbbb
int
sar
jle
add
fadds
xor
cmp
jl
orb
mov
push
or
xchg
xor
gs
jg
lret
ficompl
jge
movl
jnp
fwait
leave
xor
int3
pop
jnp
inc
rol
add
cld
jne
jecxz
ds
test
jl
cmpl
loope
push
adc
mov
fldenv
in
inc
fidivrl
fnstcw
mov
sarl
mov
scas
ds
ret
add
mov
shl
xorl
leave
popa
xor
jp
popa
arpl
mov
sub
ds
jae
mov
mov
mov
mov
mov
sbb
dec
push
xlat
mov
std
jae
insl
inc
xchg
jae
pop
je
jle
stc
aaa
outsl
add
mov
mov
lret
ss
sar
jg
cmp
cli
out
das
mov
test
and
jge
jl
push
out
mov
mov
sarl
sbb
aas
jb
fcmovb
shll
jl
aad
mov
adc
push
sar
mov
aaa
js
std
cmp
mov
loope
repz
fisubs
mov
inc
push
jl
push
jnp
mov
jb
push
andl
lds
into
push
inc
imul
data16
subl
add
dec
mov
fidivrl
mov
movsl
pop
out
xchg
dec
insl
sbb
shlb
iret
fbstp
lods
loope
jns
movsl
aas
fbld
sub
add
dec
scas
mov
fisubrl
mov
addr16
jbe
xchg
xor
jnp
das
fnstcw
lods
push
or
cli
cmp
iret
roll
mov
jo
int
inc
mov
cmp
mov
mov
stos
xor
sahf
mov
push
aas
jge
jo
cmpsl
mov
pop
cli
mov
pop
aam
popa
ret
xchg
jge
jle
mov
xchg
outsl
jbe
xor
fldl
imul
push
dec
dec
shrb
js
jge
push
subl
jno
push
shlb
xchg
popa
call
pusha
sti
jle
iret
mov
data16
lods
int3
adc
es
jno
test
fcmove
iret
adc
jb
sbb
rcll
pop
jle
enter
adc
out
xchg
jl
lret
mov
fmul
mov
mov
mov
pop
mov
or
mov
jno
mov
pop
push
inc
popa
fbstp
leave
sarl
sti
mov
les
outsb
stos
outsb
movsl
arpl
sbb
arpl
iret
cmp
ja
jns
sarl
shrl
dec
dec
outsl
cmc
add
aas
addb
jns
jl
jae
add
cld
ret
jp
idivl
subb
popa
popf
jge
add
imul
inc
std
sarb
add
sbb
cmp
mov
cld
mov
pushl
test
imul
popa
jl
aaa
divl
pusha
or
mov
xor
xor
jnp
js
lret
add
scas
inc
push
ljmp
sbbb
js
setp
scas
cmp
mov
lret
mov
add
and
mov
roll
ret
sti
jge
jg
add
lret
adc
andb
mov
sti
add
sub
addr16
ret
daa
test
jns
add
aas
jmp
mov
dec
jns
decb
mov
inc
ret
xchg
add
xorl
sar
gs
jg
ss
jge
jb
mov
add
in
jle
aaa
add
addr16
jp
pop
lahf
ss
cmp
mov
push
fcmovnb
mov
add
bound
xchg
jae
add
enter
das
xchg
add
mov
stos
jg
jp
xchg
leave
hlt
mov
es
mov
lds
jg
inc
fnsave
jns
lcall
cmp
and
repz
cltd
xchg
xorb
add
insb
icebp
xchg
lea
ret
filds
cmp
jmp
leave
add
bound
inc
ret
std
sarb
movsb
sbbl
cld
inc
push
out
addr16
les
jae
popa
adc
orl
jle
bound
jp
jb
mov
push
mov
daa
xlat
xchg
sahf
pushl
jge
mov
pop
jg
mov
jg
stos
jns
mov
mov
ss
lahf
jle
or
arpl
jle
arpl
inc
pop
je
loop
into
xchg
data16
decb
pushf
mov
popf
stos
sti
fldl
jmp
add
pusha
insl
mov
lcall
cwtl
filds
hlt
cmp
inc
das
push
jnp
xchg
mov
fwait
jge
mov
fs
ds
jle,pt
andb
mov
xlat
cmp
dec
insb
cld
jp
pop
mov
push
mov
lods
inc
mov
pusha
jb
jnp
fnstsw
pop
jge
mov
mov
insb
inc
lcall
cmp
call
scas
mov
test
lock
jae
push
clc
jnp
mov
scas
mov
in
add
iret
shll
cmpb
jle
mov
sarl
pusha
insl
mov
mov
leave
incl
mov
int
xorl
pop
jae
daa
xor
mov
or
mov
pop
sti
cld
insb
jae
out
lcall
mov
inc
pop
mov
pop
mov
fwait
jnp
arpl
rcrb
mov
ja
jg
repz
ss
cld
mov
lahf
jle
incl
mov
dec
jp
cmp
enter
add
mov
jg
test
icebp
sbbl
jns
jg
lods
mov
addb
jns
scas
jle
mov
in
mov
or
jne
mov
shlb
jno
pop
mov
loopne
xchg
mov
mov
sbb
cmp
jle
arpl
stos
insl
sti
mov
cld
lcall
iret
enter
xor
addl
mov
cwtl
loop
xlat
pop
add
cltd
nop
test
push
push
jg
ret
cmpl
dec
mov
jle
sbb
mov
and
sub
dec
jg
mov
mov
mov
sbb
lret
sbb
scas
cmp
mov
outsl
mov
xlat
mov
fistpll
add
lds
push
mov
faddl
inc
dec
stos
cmpl
mov
idivl
jecxz
xor
jmp
cmpsb
cmp
mov
ret
clc
lret
pusha
jg
ror
jl
adc
decb
idivl
divb
lods
scas
lods
sarb
daa
andb
int
xchg
in
pop
fxch
mov
xchg
out
dec
rol
loop
out
sbb
cmp
fcmovu
cltd
mov
shlb
stc
push
pop
leave
clc
push
jbe
sahf
push
sbb
jecxz
pop
fldcw
js
rcr
sahf
jg
xor
or
dec
test
pop
cmp
push
mov
or
dec
outsl
sbb
dec
lret
sub
sbb
leave
push
scas
dec
xchg
les
addb
xchg
dec
std
subb
dec
cmpsl
sahf
movsb
or
add
jb
inc
xor
push
cwtl
out
jle
mov
jg
mov
lret
jnp
pusha
jecxz
andl
lahf
scas
in
push
dec
jg
jns
aam
jge
push
fidivrl
mov
lret
movsb
mov
ret
inc
insb
decb
leave
mov
je
cmp
mov
jp
adc
push
mov
jo
stos
lcall
and
daa
aaa
lahf
lahf
ret
in
mov
out
and
insb
shll
mov
divl
outsb
push
ret
cli
fbstp
stos
stc
jge
scas
das
sbb
pop
data16
inc
fnstcw
cmp
jle
pop
lret
scas
mov
mov
stos
sbb
lcall
cmp
and
mov
addl
sbb
incb
mov
fimuls
cmpsb
fistpll
mov
sbb
cmpl
or
xchg
push
stos
pushf
mov
and
push
nop
cmpl
ja
lahf
sahf
jg
test
mov
add
jp
imull
mov
pop
enter
mov
cmpsl
dec
scas
fmulp
jg
cmp
outsb
test
js
pop
imul
add
xor
jg
jge
ret
fwait
jnp
fistpll
das
mov
and
pop
xchg
gs
cmpsl
dec
outsl
mov
hlt
pop
and
out
fsts
clc
mov
stos
dec
test
fistps
jge
pop
jnp
lods
jg
je
arpl
xor
or
push
xchg
jl
mov
test
stos
mov
xchg
shl
popa
jo
int3
sub
aam
or
mov
and
test
pop
repnz
aas
sub
cmp
addl
push
jl
push
sahf
in
rclb
or
data16
pop
roll
jnp
push
mov
push
mov
bound
jne
fiaddl
bound
push
mov
jne
jae
xchg
dec
jg
jne
testl
mov
into
shr
jle
lret
xchg
xchg
fistpl
popf
dec
lcall
add
je
jno
pop
mov
jmp
fs
nop
out
jns
rcl
xor
fdivp
add
jl
jno
xchg
stos
pop
xchg
cltd
sbb
inc
push
xchg
movb
and
paddusw
dec
jl
pop
pusha
sti
mov
mov
dec
ss
lock
xor
mov
sbbb
into
popf
jp
add
inc
jno
lret
jns
es
lds
mov
jnp
and
jecxz
xchg
jg
in
cmp
mov
outsb
bound
imull
mov
js
mov
xor
pusha
popa
iret
test
iret
leave
mov
pop
or
jg
out
lret
mov
fcmovb
into
jle
in
cs
jns
scas
fdivrl
shll
xlat
pop
add
xlat
mov
loopne
push
aam
sahf
push
aam
rcrl
clc
iret
jae
out
cld
jge
aam
mov
lods
jbe
mov
jo
sub
arpl
into
movsb
jge
mov
shrb
mov
test
xor
repnz
xor
cmp
stos
add
loop
dec
das
or
leave
xchg
insb
lret
ficoms
push
stos
insl
cmp
sti
inc
xor
les
enter
and
dec
xorb
jno
mov
jo
clc
arpl
orl
dec
icebp
push
jb
mov
mov
xchg
cmp
test
pop
push
test
loope
sbb
cltd
stos
daa
xchg
outsb
jg
jbe
mov
popf
cmp
stos
lcall
ja
leave
xlat
jg
or
mov
mov
inc
hlt
ja
or
or
mov
jecxz
int
mov
sbb
cmp
popf
mov
popa
pop
jb
test
mov
inc
push
mov
mov
ret
clc
jnp
sahf
inc
ds
pop
pop
sarl
bound
leave
mov
mov
js
stos
and
jns
xchg
aam
lock
lret
jp
das
ret
xlat
cmp
mov
xchg
mov
gs
cmp
inc
pop
adc
in
pop
cwtl
test
jp
rcrb
into
lahf
sbb
outsl
leave
mov
jns
lds
pop
scas
popl
jle
lcall
pop
mov
mov
lcall
mov
mov
push
fwait
shrl
xchg
inc
sub
daa
pop
gs
fs
outsl
mov
lahf
xor
cmp
sti
jp
fbstp
leave
push
popa
cld
test
mov
lods
aam
popa
jnp
push
jns
outsb
fidivrs
cmp
sarl
xchg
jl
frstor
xchg
pusha
jl
outsl
cmpsb
outsb
bound
xor
loopne
xlat
lock
popf
lret
mov
fldt
lea
mov
fisttpl
jl
loopne
jge
jnp
xchg
mov
push
iret
test
test
dec
and
pop
mov
cld
fists
mov
xchg
mov
popa
sahf
fst
loopne
test
and
test
mov
and
int3
out
pop
flds
cmp
test
cmp
or
imull
popa
int3
arpl
fxch
mov
mov
mov
mov
jp
pop
and
adc
cmp
pop
mov
test
mov
incl
xchg
arpl
mov
sbbb
pop
jno
test
andl
andb
scas
mov
jb
scas
and
cmpb
out
jb
sub
xchg
jbe
les
pop
insb
jp
jnp
jg
jl
or
adc
jb
minps
sbbb
push
ja
jnp
js
stos
es
subb
test
jb
add
push
std
test
jb
cmp
xor
sbbb
jno
jnp
jb
jge
fcompl
fwait
sbb
adc
outsl
rcr
icebp
fcmovbe
mov
or
jnp
shll
pop
cmpb
mov
addr16
mov
jnp
sbb
fnstcw
sbb
cwtl
inc
ficompl
les
enter
in
shl
popa
lret
sub
lret
cmp
jg
lahf
idivl
sahf
bnd
jns
loope
xor
dec
inc
shll
xorb
sbb
mov
ret
mov
fwait
mov
and
pop
cmp
les
or
fdivrs
add
outsl
push
dec
lock
clc
loopne
mov
mov
dec
mov
rol
jmp
movsl
insl
sbb
outsl
stos
push
lahf
out
loop
arpl
aaa
inc
inc
jecxz
jp
aaa
imul
sahf
jbe
mov
jge
subl
cltd
lret
neg
stc
pop
dec
and
repz
andl
imul
leave
scas
popf
sub
into
or
add
addr16
adc
mov
add
imul
out
jg
pushl
jmp
sub
fwait
test
inc
mov
pop
and
lods
stos
mov
insl
mov
wbinvd
adc
mov
shl
dec
popa
rcr
xchg
sub
test
dec
mov
xchg
cltd
frstor
xor
xor
stc
xchg
in
pop
jl
jmp
adc
fwait
push
sbb
out
push
pop
iret
pop
add
mov
inc
pop
adcb
sbb
fnop
lret
das
pushf
jo
dec
push
jecxz
pop
insb
scas
sub
and
call
mov
lret
sub
enter
int
sti
ja
cltd
lret
lods
test
es
jp
cmp
jle
push
movsl
mov
sbb
mov
xor
outsb
outsl
mov
ret
out
ret
xchg
stc
into
lret
bound
std
add
sbbl
xchg
pop
movsl
lods
insb
xchg
divl
add
jge
xchg
int3
or
aas
leave
movsb
xchg
xchg
add
imul
outsl
cld
rcl
cwtl
or
mov
stos
jecxz
lret
mov
popa
mov
xlat
jno
or
mov
inc
push
lret
dec
addr16
jno
mov
pop
outsl
fdivs
push
xchg
cmp
int3
dec
int
incl
loopne
fsts
insl
std
jnp
pop
in
mov
xchg
dec
fldt
add
hlt
jmp
in
mov
fstl
imul
lahf
aaa
ljmp
mov
xlat
inc
movsl
jnp
jae
jb
popa
fstpl
roll
jg
fists
mov
jg
jb
popa
fwait
imul
popa
sar
jg
mov
jb
jae
popa
cmpsl
jne
jge
aas
xchg
sti
subb
fists
mov
cmpl
arpl
mov
jp
mov
mov
jns
test
lds
popa
arpl
mov
jp
jb
ja
mov
jnp
jb
popa
lahf
insl
arpl
aas
mov
xlat
testb
rcr
mov
jnp
je
popa
xchg
arpl
mov
jg
inc
int
fwait
jb
repz
outsl
bnd
popa
mov
arpl
mov
jp
jb
jo
lods
popa
jnp
jg
cmp
mov
sub
imul
jp
jb
out
andl
hlt
lea
mov
add
subb
int3
arpl
jns
xor
jae
sti
jns
jae
popf
repz
loop
cmp
cltd
push
addr16
cltd
loope
fs
rep
lret
xchg
pop
subl
dec
add
lahf
jnp
pop
imul
addb
add
xchg
push
fwait
imul
fidivrl
cltd
lds
adc
jb
jno
add
jnp
lahf
into
add
popf
and
jns
shll
mov
inc
fbstp
cmp
lods
jg
lahf
push
sti
rcrl
mov
ror
pop
cmp
lahf
mov
pushf
push
out
add
xlat
gs
arpl
lea
sarl
sti
pop
imul
lahf
fidivrl
pop
ja
popf
and
adc
ret
cmp
fildll
int
in
loopne
mov
inc
mov
rcll
jmp
jnp
ja
mov
jbe
shll
jg
jle
sti
xchg
lahf
imul
bound
rcll
mov
mov
push
jle
xchg
rcll
jg
sahf
int
shrl
and
mov
incb
mov
cltd
out
bnd
mov
and
xchg
std
rolb
lret
fcomps
aad
scas
insl
pop
call
roll
lahf
xor
add
mov
mov
and
push
rcrl
push
inc
jl
mov
sarl
lods
iret
mov
xorb
jle
and
mov
ret
mov
gs
mov
mov
rcrl
mov
insl
mov
mov
pop
jp
sarl
mov
fst
lret
mov
fistps
cli
mov
clc
jae
lahf
out
jge
mov
lcall
inc
shll
inc
sahf
aas
cld
rcrl
insl
mov
xchg
pop
pop
mov
shrl
xor
sbb
jno
lret
stc
jb
lock
fiaddl
sarl
ret
arpl
mov
addr16
stos
icebp
jb
xor
push
daa
jo
mov
insl
cmp
imul
lahf
jle
jnp
imul
test
loope
cmp
imul
aad
jg
xchg
ss
dec
imul
shl
daa
mov
addr16
testb
fbld
push
movsl
adc
mov
call
bnd
or
hlt
fnsave
not
cmpsb
loopne
lahf
sbb
mov
ret
sti
pop
cmpsb
and
cs
jne
js
in
sarl
icebp
mov
sti
sbb
test
cmc
outsl
pusha
fnstenv
jae
call
je
jg
cmp
popa
fwait
lret
xchg
jp
insb
cmp
pushf
hlt
subl
push
jae
mov
ds
fisttps
fnstsw
cmpl
cld
aam
cmc
jnp
test
xor
cmp
gs
fldl
repz
pop
in
movsl
mov
fwait
xor
lods
fstpl
jle
dec
pop
mov
fstpt
aas
leave
sub
xchg
popa
sbb
adc
push
repnz
xor
xchg
rorl
fidivl
jae
out
iret
jle
mov
mov
fists
les
mov
in
lahf
mov
ror
rcr
lahf
stos
jo
shll
mov
iret
mov
outsb
mov
push
in
lahf
mov
ror
rcr
lahf
sub
pop
lahf
jnp
adcl
divb
aad
lahf
mov
jg
push
push
sti
xchg
sahf
vpinsrw
stos
mov
pop
and
mov
mov
push
xchg
jg
stos
out
mov
fnstsw
add
and
pop
stos
in
arpl
pop
mov
lahf
loope
sbb
lahf
insl
jp
sarb
mov
test
sarl
fwait
jnp
push
pop
clc
stos
jne
jg
dec
push
jg
andl
stos
mov
stc
mov
pop
and
fdivl
xchg
and
jae
in
jae
lret
xor
jns
rorl
mov
pop
or
pusha
outsl
push
sti
add
xor
jno
dec
xchg
jb
loope
lcall
lahf
stos
xchg
lret
lret
push
repz
ljmp
lahf
fst
mov
ds
lret
leave
imul
incl
jb
xchg
mov
ret
loope
lcall
insb
jmp
xlat
mov
ror
rcl
jae
push
xchg
inc
jnp
movsl
jnp
add
xchg
cmp
movd
fucomp
mov
add
inc
imul
fnstsw
rcrl
leavew
inc
clc
outsl
in
push
iret
mov
add
inc
jnp
fs
xlat
fnsave
out
pop
insb
xchg
sahf
xlat
mov
xchg
jb
jmp
scas
xchg
aad
aas
pop
push
mov
fildll
bound
aas
jae
out
mov
jns
in
adc
gs
xchg
sti
mov
stc
cmp
fbld
pusha
mov
in
leave
mov
sti
addr16
xchg
cmpsl
xchg
movsl
test
outsl
ds
mov
aas
fs
in
fdivr
int
jns
xchg
fwait
xchg
movsl
popf
mov
popa
movsl
test
outsl
movsl
pop
in
imul
and
adc
mov
sarl
jg
mov
sti
push
and
addr16
jno
movsl
clc
xor
ret
xchg
jmp
jnp
pop
shll
lods
bound
cmp
jmp
jno
roll
push
mov
loop
sub
roll
mov
sub
vprotd
aaa
rcr
jne
push
sti
pop
push
mov
loopew
fldcw
xor
rcl
mov
fistps
loopne
mov
popf
mov
ror
jb
call
fbld
in
cmpsl
loope
mov
jp
ds
jb
movd
ffreep
mov
rcl
mov
ss
shlb
inc
shll
jno
daa
mov
lea
jg
mov
sub
ret
cmp
aaa
rcrl
cs
jnp
cmpsb
movsb
sti
jg
mov
mov
xchg
jne
es
mov
sti
int3
mov
xor
mov
lret
sarl
adc
adc
xchg
fnsave
leave
and
js
adc
aas
faddl
jnp
adcb
and
sub
jl
repz
arpl
icebp
add
arpl
xchg
outsb
out
fcmovnbe
jnp
pop
mov
fisubrl
insl
xchg
xchg
lret
and
shll
adc
test
add
xor
mov
ret
lahf
fcomp
fcmovbe
jae
out
scas
lahf
mov
mov
fistps
cmpsb
bound
pop
out
setg
pusha
lahf
out
outsl
roll
shrl
lahf
mov
cli
fistpll
aad
gs
and
aad
arpl
lahf
xchg
pop
ret
pop
ret
lds
jg
mov
lahf
out
fcom
lock
jae
clc
movsl
jnp
jg
repnz
cmp
jb
paddd
movl
xor
pop
mov
stos
out
lahf
xlat
dec
lahf
cmp
arpl
xor
mov
cmpl
movsl
mov
xlat
jg
pop
mov
sub
ficomps
mov
stos
stc
lret
lahf
lahf
xchg
cwtl
loop
or
popl
xchg
mov
xchg
repz
aad
insl
int
icebp
mov
addr16
std
ja
pop
int
inc
fidivrs
arpl
insl
jp
rorb
pop
cmpsl
movsl
sahf
insl
rcl
fisttps
pusha
pop
cmp
and
aam
imul
rcr
mov
pop
inc
sbbl
in
rcrl
pop
rcrl
xchg
push
shrl
ret
insl
pusha
call
lcall
adcb
lahf
jmp
mov
fwait
mov
shll
mov
lahf
mov
mov
push
imul
out
pop
rcll
stc
jae
rcl
fnsave
out
rcl
cmp
jl
mov
addb
rorl
cmp
aad
jno
lahf
pop
jnp
jge
in
clc
mov
jmp
mov
fisubrs
xchg
sub
pop
push
mov
sub
mov
outsl
rcrl
ret
pinsrw
jo
shll
mov
popa
lahf
xchg
sbbl
mov
mov
int
xchg
out
xlat
jne
pop
sti
iret
sub
mov
out
xlat
negl
sahf
lret
rcl
scas
popa
sub
pop
arpl
lahf
sahf
dec
rcrl
mov
jg
lods
lahf
pusha
shll
addr16
addr16
ret
je
movsb
sti
jae
mov
jge
xor
cmp
mov
test
loope
lcall
aad
lahf
push
sti
fistpl
jge
daa
fstl
popa
shrl
jle
mov
pop
imul
ja
rcr
imul
jle
jg
mov
and
pop
lahf
insl
xchg
pop
lret
dec
jb
in
sub
push
jge
ret
bound
cmc
mov
xor
or
cmp
ljmp
in
fisttpll
jnp
ret
mov
sti
cmpsl
jecxz
fwait
mov
sarl
mov
sub
jae
popf
imul
lahf
mov
insl
rcrl
jp
mov
sub
movsl
sarb
adcl
sti
das
roll
test
add
subl
imul
sti
mov
and
stos
pop
stos
push
ja
sarl
sub
sti
insl
add
inc
sbb
sub
insl
mov
push
and
repnz
cmp
or
ja
cmp
rcrl
aas
xchg
in
leave
fidivrl
jmp
test
fldl
mov
xchg
push
hlt
jb
or
and
mov
pop
ja
arpl
jne
cmp
jg
mov
sarl
or
cmp
stc
mov
ja
cmp
pusha
mov
sar
jb
aaa
fs
mov
lret
lahf
xchg
in
lret
ja
mov
ja
pusha
repnz
xchg
fsin
jmp
hlt
repnz
cmp
adc
ret
lahf
nop
pop
xchg
jne
cmp
mov
cwtl
xchg
cmp
ja
jnp
or
mov
leave
mov
xchg
mov
pusha
lea
jae
sub
lcall
jnp
addr16
push
repz
jb
xor
aas
mov
in
fdivrs
mov
test
pop
xchg
xor
mov
dec
mov
cli
shrb
lcall
ret
aas
scas
hlt
jnp
jns
lahf
pusha
cs
test
add
aas
je
ja
cmp
repz
ja
lds
jp
fs
xchg
xchg
mov
and
js
fmuls
scas
jno
fildll
fstpt
fs
lret
iret
aas
test
jae
cmp
addr16
popa
test
cmp
cmp
jae
dec
jg
mov
cli
add
je
jnp
push
bound
outsb
cmp
xchg
cmpsl
sub
mov
daa
sub
nop
gs
arpl
and
jmp
scas
fsub
ja
mov
mov
bound
cmp
ja
movsl
jno
fbld
jae
inc
jp
fs
in
out
loopne
rorl
sub
sti
repnz
out
pop
ja
jns
aad
push
fmulp
ja
mov
ja
xchg
jno
xchg
ret
fcomps
lahf
mov
lahf
repnz
mov
pop
ja
int
xchg
hlt
jb
xor
xchg
and
cmpsl
mov
pop
imul
aaa
jmp
push
ficoml
jb
popa
fistps
shll
jae
fnstenv
mov
pop
ja
fwait
repnz
lret
fsubrs
mov
insl
cmp
loope
fidivrs
test
ja
aas
mov
repnz
jne
rolb
ret
cmp
dec
cmp
xchg
jb
pusha
jo
fbstp
lret
sahf
lock
lods
jp
repz
cmp
jnp
adc
leave
cmp
mov
pop
ja
gs
lret
sahf
fnstenv
mov
jnp
add
cli
sub
ja
iret
aad
adc
gs
mov
ja
imul
shrb
cmp
xchg
cltd
cmp
sub
out
in
push
shrl
jno
inc
popa
aam
stos
sahf
shlb
mov
orl
hlt
loopne
popf
lahf
adc
jb
rorl
rolb
ds
scas
ljmp
cs
or
pop
out
mov
daa
cwtl
ja
push
mov
add
dec
dec
aaa
addl
mov
mov
add
test
imul
jge
lret
and
ret
jge
arpl
pusha
std
sarl
xchg
sub
mov
lea
sti
cmp
fstpt
ja
inc
ja
cli
arpl
clc
dec
imul
ret
arpl
jnp
jns
jne
lret
cli
je
arpl
arpl
mov
fwait
jnp
mov
shll
shrl
jno
mov
push
iret
je
sti
ret
icebp
adc
jo
jnp
lock
imul
rcrb
out
and
outsb
shll
jno
inc
mov
mov
outsl
cmp
jae
xchg
xor
bound
mov
xchg
xorl
push
adc
imul
cmp
pushl
jle
jge
inc
mov
loop
sahf
cld
mov
jnp
jge
sti
jno
jp
jge
inc
mov
loop
lahf
clc
inc
ja
repz
jbe
divb
jge
jne
cmc
mov
lahf
arpl
loop
sahf
jb
push
repnz
jge
jno
push
icebp
insl
jge
inc
mov
loop
lahf
outsb
inc
out
cld
rep
xchg
in
gs
inc
mov
mov
push
push
ljmp
jle
ficoms
xchg
dec
leave
rorl
push
insb
mov
rcrb
lds
mov
rol
sti
imul
cltd
fs
arpl
and
call
pushl
test
loope
mov
out
lret
push
mov
jae
mov
mov
mov
sub
lods
in
add
outsl
das
add
pop
mov
jb
jg
jae
jb
test
aas
out
das
or
mov
shrl
aaa
out
shl
mov
test
imul
jns
mul
inc
lea
inc
test
imul
call
mov
sarl
xor
xlat
ja
daa
fldcw
pop
mov
jnp
pop
shll
das
xor
mov
pop
popf
ljmp
xor
cs
ljmp
mov
popf
jmp
mov
jns
orb
fstpt
out
mov
popa
sahf
repz
mov
pop
fwait
mov
fs
out
inc
addr16
leave
jnp
aaa
pop
xchg
out
aaa
jmp
mov
xchg
mov
mov
std
in
incl
iret
cli
jg
jns
out
imul
add
pop
loop
fsts
ja
dec
jmp
lretw
lret
std
movsl
add
pop
fsubs
push
leave
sahf
add
xor
leave
jle
addr16
test
addr16
loopne
dec
jbe
arpl
lds
sub
lock
addr16
inc
lret
bound
push
popf
pop
leave
iret
inc
push
in
inc
in
test
stc
addr16
aam
fiadds
mov
fdivrl
xor
fwait
scas
push
lret
mov
jae
js
enter
imul
mov
mov
pushf
push
xor
rcrl
lret
mov
pop
or
jae
jnp
jno
pop
jbe
loope
mov
lods
jne
test
mov
jne
outsb
addr16
pop
enter
add
inc
xchg
pop
inc
rcrl
jns
add
aad
shlb
pusha
xchg
add
aaa
loope
xor
mov
mov
fsts
movsb
xor
mov
xorb
out
xor
test
lods
leave
inc
in
repz
jns
add
jns
andb
int
mov
mov
jmp
sbb
push
lret
mov
xchg
lcall
or
data16
pop
mov
jg
stc
addr16
sbb
cmp
jne
add
pop
jnp
mov
sub
gs
cmp
pop
fistps
lret
jno
outsl
test
in
aaa
repz
hlt
pop
fs
addl
cli
adc
cmp
jg
fldl
xchg
lcall
jnp
cs
insl
fcoml
sbb
jno
movsb
xor
outsl
arpl
out
mov
xchg
stc
stos
jns
cld
mov
addr16
push
pop
xchg
mov
repnz
sbb
and
cmpsl
add
adc
inc
pop
jnp
push
add
outsl
pop
mov
roll
cli
adc
jge
sub
outsl
imul
fbstp
jns
inc
repnz
sub
xlat
ja
out
imul
jnp
fbstp
iret
pop
mov
pop
in
in
popf
addr16
stc
mov
outsb
bound
adc
outsb
insl
lods
mov
out
cld
pop
ja
jbe
mov
sahf
mov
push
mov
ret
mov
imul
xor
out
lods
push
cli
cmpsl
sbb
ja
in
sbb
scas
lock
sub
cltd
andl
jno
sbb
adc
cld
movsl
clc
mov
bound
pusha
mov
repz
addr16
mov
add
mov
sbb
scas
test
push
ss
cmp
orl
mov
in
mov
dec
push
out
push
dec
or
aad
jl
ja
jns
icebp
xchg
stc
nop
jnp
lods
jno
xor
inc
pop
popa
js
loopw
rorl
xchg
scas
js
arpl
icebp
fisttpll
mov
clc
popa
jbe
add
jae
lret
fnstsw
fistpll
jae
ficompl
iret
push
lret
jns
cltd
clc
lret
push
hlt
jbe
add
lcall
ja
pop
fcompl
sbbl
mul
fnsave
sbbb
rcl
mov
sub
outsl
out
jl
cli
daa
jp
imull
mov
out
insl
jbe
andb
inc
cli
mov
hlt
pop
push
test
addr16
dec
cmpsb
jno
movsb
mov
jbe
xor
fiaddl
ret
lock
lret
add
dec
je
jae
test
dec
clc
int3
sub
inc
in
mov
mov
out
mov
loopne
sti
pop
lods
pop
pusha
rorl
inc
jne
xchg
in
and
iret
pop
jae
jnp
mov
dec
int3
xor
pop
xchg
test
jbe
and
xchg
pushl
cmp
sti
stos
cmc
inc
ja
mov
fisttps
jns
jb
ret
pop
mov
iret
xor
inc
sar
mov
mov
in
data16
arpl
outsl
insl
mov
filds
fwait
cmp
xchg
clc
lahf
jg
lods
out
decb
stos
jmp
out
fbld
cmpsl
loopne
sar
das
mov
mov
fists
insl
aad
imul
clc
shrl
jne
addr16
jns
addr16
test
das
and
stc
shll
inc
out
imul
jns
jne
jge
adc
testb
scas
mov
fsubrl
cltd
xchg
add
insl
add
pop
xor
xchg
fdivrs
and
push
mov
mov
and
cmpsl
mov
repz
mov
cmpsb
cmp
mov
out
dec
ficoml
mov
fwait
mov
insb
fst
xlat
xchg
fldcw
loopne
sar
jo
xor
pop
insl
cmp
cltd
scas
stc
inc
lds
sub
xchg
mov
xchg
gs
daa
rcrl
lock
mov
ljmpw
in
dec
dec
imul
adc
xlat
xor
jno
daa
jae
sub
imul
mov
mov
mov
xchg
push
packsswb
push
add
sbb
add
out
insl
iret
pop
out
mov
outsl
popf
pop
sub
lcall
push
dec
dec
shlb
dec
jle
outsb
xchg
pop
lcall
outsb
xor
mov
mov
xchg
arpl
repnz
out
sub
lret
jp
push
imul
mov
jle
jne
icebp
fistpl
aad
jne
fs
test
mov
pop
dec
call
ljmp
int
jns
pushf
outsl
inc
pusha
in
push
leave
xor
pop
js
add
movsl
dec
loopne
xor
mov
sbb
jns
add
jno
orb
pop
arpl
inc
lret
sar
pop
cld
fwait
aam
adc
popf
incb
stos
lret
leave
xchg
add
iret
enter
filds
subb
leave
enter
mov
repnz
jg
pusha
or
mov
sbb
popa
dec
inc
roll
xchg
xchg
bound
addr16
in
fwait
enter
jecxz
lret
andl
enter
lock
bound
mov
subl
or
jecxz
mov
sub
into
test
fnsave
int3
push
dec
pslld
lahf
add
mov
mov
mov
sbb
push
ficoml
jns
arpl
mov
faddl
int3
dec
jp
mov
fs
int3
dec
mov
mov
subb
test
fdivrl
push
jns
enter
imul
outsl
mov
ret
fnstenv
int
cmp
jmp
imul
ja
cltd
imul
lods
imul
dec
scas
jns
shll
loop
dec
adc
jnp
ss
pop
bound
dec
jns
sar
adc
pushf
xchg
ret
jns,pt
jmp
out
orl
jle
int3
shl
fsub
xchg
mov
or
ret
push
bound
lods
xlat
loopne
adc
pop
repnz
imul
jg
cltd
mov
push
movsb
ljmp
add
imul
imul
scas
lret
push
pop
mov
popa
imul
addr16
jne
jae
imul
mov
dec
cmp
fnstsw
loopne
mov
std
scas
jg
adc
loop
aad
leave
outsb
dec
test
loopne
leave
cmp
dec
xor
jle
ljmp
jae
mov
cld
inc
jno
repz
outsl
andl
sbb
sub
repz
lret
insl
mov
dec
fdivl
and
lock
aad
dec
pop
jae
clc
imul
mov
das
jno
fimull
pop
jno
fadds
xor
cmp
add
rcr
pop
rolb
mov
jp
mov
int
dec
cmp
iret
cld
shll
scas
inc
cmp
pop
xor
add
rorl
add
popl
jns
std
jnp
cmp
fnstsw
jne
mov
jnp
shrb
cmp
scas
push
mov
fwait
fwait
shrl
sbb
aad
test
lcall
insl
arpl
imul
shrb
ja
test
ja
incl
push
xchg
iret
xor
jns
pop
mov
xchg
stc
in
insl
out
loope
icebp
popf
insl
jo
jnp
pusha
out
jle
insl
movsl
fnstsw
lds
ljmp
mov
das
lcall
jae
jno
sarl
loop
jp
jae
ret
jge
and
sub
fimuls
xchg
fucom
pop
pop
push
mov
js
fwait
aas
mov
mov
in
cld
inc
cmp
inc
push
loop
jne
jno
imul
jbe
pusha
or
sbb
inc
mov
fidivrs
lahf
jl
xchg
xchg
lods
push
pop
rcrl
jge
fcmove
jne
jae
push
cmpsl
mov
pop
fadds
dec
in
jnp
adc
roll
jno
jg
fdivrs
cmp
in
jae
jno
test
xor
insl
iret
jecxz
fidivrl
outsl
dec
aam
mov
hlt
fmull
outsl
lea
arpl
fwait
dec
dec
dec
jae
test
icebp
andl
xchg
lods
adc
icebp
arpl
sub
jne
or
fiaddl
popl
bound
pop
add
cld
jl
push
fcompl
mov
fnstsw
fsubrl
pop
popa
loopne
lret
out
add
lret
cmpsb
push
push
dec
mov
ret
jae
or
gs
dec
dec
ret
int
pop
ficoml
jnp
cld
shl
jnp
cmp
jbe
inc
mov
jae
sti
lret
ss
cmp
fstpt
sti
shll
dec
fdivl
inc
imul
mov
dec
test
lds
mov
add
rcrl
dec
adc
mov
stos
fnsave
test
sarb
imul
fisttpl
sarb
adc
pop
lods
repz
cli
xor
lcall
fsts
aas
shll
aas
outsb
into
dec
mov
jnp
pop
inc
mov
int
push
pop
push
jl
sbb
cmp
mov
inc
scas
insl
jae
or
pop
inc
sub
lret
xor
xchg
imul
arpl
xor
sub
popf
popf
jnp
xlat
jnp
shl
std
loop
sbb
popf
test
hlt
sti
rcl
jp
lods
in
sbb
frstor
fstpl
popa
xor
iret
popf
jno
stc
scas
shl
aas
fwait
ret
push
int3
int
pop
rcr
mov
xor
jno
mov
inc
fsin
push
nop
repz
icebp
pop
push
pop
jns
outsl
js
cli
repz
pop
xchg
sub
and
xor
cld
push
jns
sub
pop
addr16
sbbl
xor
std
lahf
arpl
mov
imul
jle
mov
xchg
add
js
jbe
mov
adc
cmp
rcr
xor
ret
iret
inc
cld
imul
pop
jmp
pusha
mulb
mov
jl
test
out
stc
pop
xchg
mov
or
rolb
lret
cli
in
jbe
cmp
enter
mov
inc
arpl
xlat
aaa
mov
test
sbb
pop
pop
loope
mov
clc
mov
jne
jg
inc
imul
cmp
push
jne
movsl
stc
repz
sbb
fimull
cmc
iret
fcomps
lods
imul
add
jne
mov
mov
xor
fistpll
pushf
aad
mov
push
fwait
jb
jns
aad
push
scas
add
sub
movsl
fwait
ds
mov
loopne
jmp
idiv
pop
jnp
mov
sbb
cli
iret
sub
clc
dec
outsl
jg
sti
jecxz
and
test
pop
add
lds
lahf
ja
in
aaa
push
xchg
imul
scas
jns
ret
fldt
test
orb
dec
ret
mov
scas
push
jnp
xchg
stc
mov
and
cmp
not
lret
fimull
arpl
jecxz
arpl
push
inc
fnstenv
jne
rcll
imul
mov
je
andb
jnp
loope
imul
iret
je
andb
mov
adc
fwait
inc
xor
lret
shlb
imul
xchg
loop
pop
pop
in
je
imul
mov
sbb
shll
subb
ret
inc
cmp
lcall
fldl
and
loop
jbe
insl
cmp
xchg
outsl
jbe
xchg
lahf
imul
and
dec
jg
xchg
inc
aam
cmp
bound
mov
jne
mov
iret
jno
out
icebp
and
mov
lret
imul
ret
imul
je
addr16
cltd
ret
xor
add
mov
iret
dec
popa
ret
fiaddl
jnp
js
stos
gs
push
outsb
mov
mov
jge
test
jl
dec
iret
dec
mov
cmpsb
mov
mov
cmp
or
mov
jg
mov
dec
cmc
clc
jl
xchg
aaa
jl
jns
or
lock
stc
jo
xchg
dec
out
inc
xchg
sbb
and
jp
push
dec
mov
add
xchg
jnp
jbe
repz
popl
ljmp
jne
jp
adc
jl
bound
sub
lret
dec
rcrl
sub
jo
dec
pop
cmc
loop
jo
mov
mov
xchg
clc
repz
addr16
fwait
fwait
jbe
js
sub
mov
clc
jno
pop
mov
pusha
fnstcw
add
jmp
inc
fxch
out
push
test
push
mov
jp
jle
es
xchg
xchg
incb
adc
adc
ret
mov
ljmp
mov
jno
rcl
push
ljmp
mov
or
xchg
adc
push
imul
shlb
jns
jge
mov
dec
lret
iret
mov
jecxz
push
dec
mov
inc
gs
pop
in
out
pop
pushf
jne
lahf
cld
mov
dec
mov
mov
add
jnp
jnp
int
pop
inc
addr16
enter
lods
jg
outsl
test
iret
popf
jns
shrl
mull
leave
xor
xor
mov
fcmovnb
leave
inc
loope
and
add
jno
int3
adcl
cmp
mov
mov
ficompl
ja
fwait
mov
stc
or
dec
mov
cli
mov
aas
pusha
push
arpl
and
push
leave
mov
lds
ja
fcmovnu
cli
fstp
pop
adcb
outsb
or
cmp
frstor
fidivs
lar
rolb
xchg
jp
push
ret
imul
mov
imul
leave
pushf
jp
xor
and
clc
jg
sub
add
repz
pop
addb
fbstp
gs
insl
dec
mov
insl
aad
sti
roll
repz
inc
mov
mov
jns
out
in
insl
jnp
lock
fstpl
ret
jnp
js
lret
lret
rcr
xchg
xchg
sar
jns
cld
pop
jp
jne
xchg
rorb
mov
addl
repz
mov
add
push
inc
loope
imul
das
mov
mov
ja
out
cli
pop
push
lret
sub
std
push
add
jnp
rol
inc
ror
cmpl
jo
shrl
and
xor
int
xlat
hlt
jns
or
repnz
bound
adc
scas
mov
ds
cmc
jnp
rol
mov
fwait
out
jno
lds
out
jg
mov
enter
mov
scas
insl
cmc
subb
mov
mov
xchg
hlt
mov
fildll
out
sarb
aad
mov
filds
outsl
lret
shlb
fcmovnb
js
outsl
mov
jmp
push
mulb
icebp
mov
je
ja
inc
out
fnsave
xchg
mov
mov
adc
filds
shlb
test
mov
jns
jns
sbb
jge
cmp
xor
fnsave
mov
addr16
jae
out
iret
fidivrs
jb
fldcw
leave
rcr
lret
add
imulb
jmp
iret
outsl
mov
in
mov
xchg
out
push
pusha
mov
jns
imul
sub
mov
imul
jle
bound
jg
jp
imul
out
cmp
lret
mov
test
add
pop
int3
lret
mov
ja
js
lods
jb
loop
fstpt
sub
sti
or
add
jae
mov
jo
jmp
jmp
cmpsl
out
in
xchg
add
bnd
aad
push
fnsave
sti
imul
in
cmpsb
imul
cmpb
outsb
push
mov
fs
jns
lret
int3
jbe
add
jp
xlat
fdivp
jno
lea
and
jmp
xchg
jbe
mov
mov
loopne
mov
repz
jne
add
subl
aaa
mov
imul
xor
idivb
pop
es
jne
aas
imul
sarb
fiaddl
repz
add
mov
mov
inc
ss
jnp
jbe
std
imul
cmp
push
scas
mov
jne
pop
and
xchg
jb
mov
icebp
jbe
push
xchg
mov
pop
add
jbe
imul
jb
pop
int
fnstenv
jp
jae
fwait
roll
mov
xlat
inc
mov
dec
or
lods
jb
mov
jae
negl
xorl
sub
pop
ja
cmp
ret
stos
lds
aas
repz
mov
xchg
pop
bound
mov
xchg
out
addr16
int
mov
jnp
pop
push
ficoml
sub
loop
jne
mov
mov
clc
dec
movsb
xchg
mov
adc
je
cli
ljmp
fld
arpl
hlt
push
bound
jb
leave
cmp
lret
jbe
fldenv
call
fucomp
jecxz
jp
faddl
ret
fst
idivb
jne
adcl
js
stos
ret
jbe
out
ret
mov
cmpsb
frstor
jg
inc
shll
outsl
fwait
insl
shlb
inc
popa
sbb
out
add
or
iret
popa
pop
mov
lds
adc
jne
ljmp
bound
and
xchg
repz
xchg
pop
repnz
jne
mov
adc
or
xor
sbb
daa
int
shrb
aad
mov
iret
sarl
shl
jo
imul
fisttps
incl
movsb
jae
scas
dec
push
lret
jne
jo
push
mov
outsb
lret
jl
inc
cmc
xor
mov
xchg
int3
xlat
mov
filds
leave
jbe
rorb
movsl
lds
xchg
mov
shl
icebp
mov
cmp
mov
jb
roll
fsts
jge
mov
mov
imul
test
add
imul
cmpsl
js
mov
lret
cmp
cmp
jmp
xchg
loopne
shr
lret
inc
int
ja
cli
jg
popa
inc
pop
jp
dec
lret
ljmp
add
cmp
leave
xlat
jg
pushf
add
shll
fwait
jne
insl
jno
rcll
fbld
lock
pop
jp
xchg
in
outsb
dec
imul
stos
and
rcr
cmp
ja
mov
rorl
mov
mov
mov
add
fistl
cmp
ja
and
adc
je
adc
fldl
jns
mov
insl
jle
pop
lods
bswap
popa
jno
fldl
outsb
das
adc
xchg
rcrb
pop
pop
jae
cmc
cmpb
mov
out
loop
cmp
icebp
ja
mov
outsb
jmp
xor
jno
inc
hlt
cmp
dec
filds
xchg
push
xorb
ret
push
lods
xor
int
lahf
popa
and
xor
dec
clc
les
pop
lahf
ja
and
outsb
mov
lahf
fstps
mov
hlt
jae
icebp
pop
dec
int3
outsl
push
leave
jns
fldt
jb
cltd
cli
ficoml
aas
xor
mov
jb
inc
mov
inc
jns
out
jnp
popa
mov
jns
jae
imul
aas
fmul
aaa
popa
jns
bound
add
icebp
andl
int
jns
jb
jb
cmp
adc
inc
jns
imul
add
jns
jbe
xor
pop
repz
sahf
loopne
frstor
sahf
lea
mov
mov
js
out
dec
jbe
imul
jp
hlt
out
push
subb
movsl
jmp
dec
subb
jg
inc
in
fsub
test
iret
mov
xlat
sarl
sub
mov
add
fnstenv
iret
jnp
cmp
iret
lods
icebp
lret
rclb
lods
outsl
dec
das
andb
fbstp
popa
loopne
stos
adc
sub
xchg
out
mov
lahf
stos
pop
push
nop
iret
repz
cmc
std
dec
and
xor
xlat
stc
shll
sub
sti
cmp
aad
outsl
mov
lret
xor
insl
mov
lods
inc
lock
xor
mov
jge
lahf
jg
fsubrl
jns
icebp
mov
xor
popa
jg
scas
inc
push
dec
pushf
shlb
rcr
out
iret
sub
pop
cmc
fwait
imul
scas
mov
shrl
cltd
mov
outsl
imul
test
enter
fiaddl
xchg
lret
pop
sarb
lods
insl
and
subl
sahf
dec
ja
mov
jno
scas
sti
pop
ja
test
inc
imul
fsubrs
inc
pop
xor
jnp
imul
push
pop
dec
jne
jne
mov
lods
jne
xchg
dec
pop
xor
jg
imul
inc
out
fstpl
gs
lods
or
jne
inc
jno
fistpl
into
jno
inc
mov
mov
jae
out
sbb
outsl
js
ror
push
mov
aad
push
sub
jle
jns
daa
insl
mov
push
push
jo
cmpl
jnp
push
mov
sti
pop
pop
inc
jae
dec
cltd
mov
sbb
iret
dec
int
popa
cltd
popa
pop
in
lahf
mov
das
js
adc
sahf
xchg
mov
jl
mov
fwait
imul
rorb
sbb
mov
arpl
xchg
xlat
stc
dec
lret
shlb
addr16
mov
in
pop
xor
sarb
ret
iret
mov
int
shl
popf
mov
out
loop
jns
jae
clc
sbb
jnp
jbe
subl
fs
outsb
mov
and
mov
iret
je
lds
sahf
mov
int
sbb
xchg
std
div
arpl
sub
pop
mov
sarb
jp
subb
ret
xor
cwtl
enter
stos
aad
jg
xchg
repz
in
jbe
xchg
addr16
jae
fwait
repz
out
dec
dec
stos
mov
push
fldenv
cmp
lods
mov
test
lret
int
mov
addr16
scas
sbb
push
add
insb
out
aad
popf
cmp
dec
sbb
lds
mov
pop
xchg
xchg
jle
arpl
cmp
les
loopne
icebp
in
mov
subb
cmp
je
addr16
sub
gs
lods
dec
cmc
mov
std
push
xchg
sar
js
outsl
mov
jl
testb
arpl
fstpl
clc
add
fnstcw
jmp
inc
mov
jecxz
jmp
imul
mov
jecxz,pt
shll
aas
adcb
xchg
jp
clc
dec
jns
imul
add
nop
mov
adc
cmp
js
into
rep
jle
jo
xor
insb
inc
xorl
iret
or
icebp
xlat
lock
or
test
jnp
add
jnp
sbb
js
fcoms
arpl
sub
mov
pushf
mov
mov
mov
outsl
imul
fs
jp,pn
sub
mov
jb
jns
lahf
sbb
js
fnstcw
stc
insl
stc
mov
sarl
rcrl
aas
jne
xchg
out
dec
sub
mov
imul
imul
imul
popf
adc
sarb
fwait
idivl
shlb
bound
out
aaa
fdivl
lock
out
repz
divl
mov
scas
inc
jnp
lret
insl
mov
sbb
roll
push
mov
jle
mov
jbe
imul
gs
mov
or
xlat
jno
pop
jno
inc
add
fwait
outsl
lock
scas
inc
cmpsl
aad
ds
insl
xchg
icebp
sbb
sti
xor
mov
lods
inc
adc
or
cld
orb
xchg
cmc
sbb
and
mov
and
push
jne
fisubrs
fucom
into
fdivrp
les
cltd
jns
je
icebp
in
fwait
push
jo
insl
cltd
bound
ja
addr16
ljmp
dec
push
negb
mov
pop
fbstp
adc
pop
orb
dec
lock
jb
mov
cmpsl
push
iret
xchg
idivl
insl
mov
adc
popf
push
ret
fwait
cmpsl
outsb
shll
mov
test
jl
movsb
xor
dec
fmulp
aaa
popf
add
imul
out
pop
imul
mov
insb
aad
ror
out
lds
jns
js
aad
pop
int
test
mov
ja
jae
jae
into
adc
or
in
ficoml
ret
outsl
jns
loope
test
jb
jno
fwait
ja
fucomp
lcall
iret
ljmp
mov
push
cmp
out
in
mov
mov
pop
mov
leave
xchg
mov
out
leave
jno
cmp
mov
ljmp
xor
xchg
jmp
jnp
rorb
push
sar
arpl
fisubrl
sti
jno
stc
popa
push
idivl
pop
aad
push
sti
mov
mov
arpl
pop
std
fisttps
mov
idiv
ja
xchg
test
movsl
cmp
imul
ficoml
jp
int
outsl
xlat
push
sub
ljmp
xlat
imul
jne
jae
jne
in
cmp
jge
inc
jo,pn
out
popa
ret
int
lret
mov
fildll
xor
popa
ja
jecxz
out
xchg
aas
insl
ds
fcoms
jge
gs
pop
sub
xchg
push
hlt
jns
std
arpl
pusha
gs
test
in
push
xchg
mov
fildll
jns
lret
stc
lahf
add
xchg
out
jnp
das
xchg
lret
mov
xchg
jp
sbb
push
test
aad
jge
test
push
mov
leave
insl
jns
lret
shlb
mov
inc
inc
inc
repz
fucompp
mov
sub
mov
imul
aad
pop
arpl
fstl
and
fstpt
jae
adc
hlt
in
out
fstps
gs
mov
mov
in
lret
aam
jnp
call
and
cmp
mov
in
push
dec
fbstp
popa
and
int3
sub
imul
outsl
fs
inc
mov
jnp
out
jg
lahf
sub
mov
fisubrl
js
pop
pand
jns
out
jns
enter
cmp
jb
retw
fistl
bound
lret
inc
jae
lods
aad
jge
jecxz
mov
in
mov
ja
call
lods
inc
mov
aas
fldl2e
mov
shlb
mov
lret
cmp
push
dec
pop
mov
sarl
cwtl
cmp
jg
test
rcl
xchg
stos
outsl
js
mov
push
cmpsl
lcall
lods
adc
pop
jo
push
xlat
push
cmp
jns
outsl
shrb
dec
aam
loop
inc
arpl
addl
jb
xchg
xchg
push
lock
or
fstpt
xor
iret
dec
je
jne
jbe
mov
cwtl
dec
jae
sbb
cli
out
pusha
lret
mov
mov
addl
jbe
ja
mov
movsl
fisubrs
xchg
fucomp
jne
jl
mov
es
xor
int
cmp
lret
je
push
imul
movsb
mov
jne
out
sub
outsl
addr16
jle
imul
jae
test
test
dec
out
arpl
repz
and
jmp
xchg
leave
dec
sub
ja
ja
js
aaa
jno
rolw
push
mov
mov
jne
fwait
bound
mov
call
and
xor
jo
mov
pop
jns
mov
jecxz
pusha
lret
sbb
out
fcmovnu
ret
or
orl
ja
mov
fwait
mov
push
inc
push
xchg
mov
mov
xlat
into
out
in
jno
jns
filds
mov
aam
ffreep
jle
gs
test
or
jae
ror
sub
movsl
into
pop
dec
lret
mov
xlat
leave
out
insl
xor
sbb
hlt
cmp
in
pop
jge
gs
imul
ret
iret
ja
ret
stos
enter
scas
jmp
lahf
ljmp
pop
and
jle
bound
movsl
js
inc
mov
sbb
addr16
imul
sub
lret
out
aam
xlat
cltd
in
imul
cmpsl
addr16
imul
stc
and
js
jmp
notb
sbb
xor
outsl
in
lock
and
or
addr16
fwait
mov
push
jmp
testl
dec
dec
int
lods
arpl
xor
das
xor
test
addr16
cmp
out
xor
out
jbe
ja
and
movsl
fisubrl
jp
and
xor
in
mov
dec
jbe
les
cmpl
and
push
jns
inc
imul
pop
push
dec
test
fwait
lea
xchg
jae
push
out
int
jne
imul
testb
ja
or
mov
sub
cmpl
mov
popa
jle
push
iret
inc
shrl
jnp
imull
mov
mov
cmp
jmp
leave
dec
aas
int
rclb
popa
pop
cmpsl
xlat
xchg
or
mov
jg
shrl
iret
out
mov
mov
cltd
fcmovnu
mov
cmp
ret
repz
jae
cmp
loope
jae
cmp
jae
out
frstor
ljmp
jbe
or
popf
outsb
incl
jge
jle
push
sti
dec
mov
imul
mov
ja
xchg
add
imul
imul
ret
and
dec
cltd
and
test
mov
mov
ret
ja
addr16
popa
pop
push
jnp
dec
sbb
mov
push
pop
xchg
mov
push
cmpsl
mov
push
lret
pushl
fnstsw
mov
mov
cmp
jbe
aad
xlat
mov
imul
jnp
insl
ret
rol
xchg
dec
add
rclb
addr16
fnstsw
ret
shrb
lds
lret
pusha
mov
leave
xrelease
ljmp
mov
jmp
shrb
adc
jmp
push
in
mov
js
insl
loope
popf
mov
pop
push
imul
imul
add
addr16
aam
mov
mov
adc
add
mov
test
inc
inc
in
clc
loopne
out
adc
nop
push
out
mov
mov
xor
mov
mov
inc
xor
cmpsl
pop
popa
pop
dec
imul
dec
sbb
dec
push
fwait
push
mov
clc
imul
pop
add
loope
xchg
imul
loop
loopne
in
lock
lahf
mov
rorb
daa
cltd
in
mov
mov
rolb
pop
cmpsl
popf
pop
popf
jp
or
push
sub
hlt
xor
fneni(8087
cltd
dec
inc
mov
or
jns
ret
cli
imul
imul
pop
jno
jnp
popa
cmp
xchg
fwait
je
into
jae
imul
lcall
jb
mov
cld
jge
aas
maskmovq
mull
fists
bound
jo
pop
mov
mov
cmp
mov
lods
push
inc
sarl
fnstcw
jno
iret
arpl
fbld
rcll
shrb
add
xor
mov
popa
repz
dec
rolb
cmp
call
push
sub
inc
hlt
push
pop
fisttpl
daa
mov
pop
fcoml
xlat
jnp
dec
mov
jmp
insb
mov
mov
jne
in
pusha
dec
jae
test
js
test
jns
loope
xor
int3
insb
cli
clc
mov
mov
incb
and
add
sar
jae
movsb
pop
pop
sub
in
lret
or
jae
outsl
rorb
inc
int3
or
jb
hlt
push
xor
popa
repnz
imul
dec
mov
inc
adc
jmp
movsb
jmp
je
pusha
dec
fcoml
loopne
sbb
shrl
movsl
fcoms
pushf
dec
xchg
cmp
testb
xor
fistpll
sub
rclb
xor
shll
push
test
faddl
lods
lret
icebp
cltd
sbb
pop
ja
sbb
cli
imul
mov
pop
repz
je
imul
out
jns
shll
scas
fiadds
notl
out
xchg
mov
jne
mov
and
mov
icebp
mov
mov
adc
bound
leave
lods
jbe
jl
cli
movsl
dec
pop
dec
pusha
iret
repnz
repz
jecxz
rcrl
xchg
jnp
ljmp
push
jmp
cmpsb
and
addr16
mov
ficoml
icebp
or
jae
rcll
ja
pop
jno
in
jle
out
repz
jne
in
push
repz
icebp
idivl
xlat
fildll
adc
inc
loope
popa
in
popf
sub
mov
jo
outsl
jne
mov
jne
sub
test
cmp
fwait
pop
stc
fistpll
stos
mov
jo
mov
cli
outsb
adc
shll
inc
mov
sar
jmpw
divl
pop
mov
stc
mov
mov
ja
fwait
jns
mov
xchg
mov
xlat
bound
inc
outsb
pop
mov
push
movsl
pop
fstps
cmp
movsl
dec
push
scas
lret
fisubrs
jae
push
loop
pop
push
sbb
enter
xorw
outsb
mov
mov
cmp
and
iret
js
xchg
pop
into
ficoms
int
pop
idivb
test
jbe
ja
aaa
mov
outsb
mov
dec
neg
test
test
push
jecxz
pusha
mov
mov
xor
dec
arpl
fdivl
imul
inc
pop
jge
sub
test
negl
hlt
rorl
mov
fidivrl
sti
mov
leave
out
insb
cmp
push
leave
bound
mov
add
clc
adc
mov
jne
dec
xor
imul
dec
pop
mov
xlat
cmovle
mov
xchg
cld
out
daa
cltd
sub
mov
jae
mov
in
scas
repnz
cs
sahf
mov
pop
lahf
push
scas
mov
mov
pop
sahf
xor
add
insb
xor
aaa
mov
and
aaa
push
fmull
or
and
movsl
pop
shll
imul
rol
iret
dec
test
mov
imul
repz
adc
inc
inc
adc
sbb
js
jno
clc
ja
dec
lret
jno
psrlw
xchg
aas
arpl
pop
sahf
out
test
loop
cmc
fisubs
mov
insl
in
into
mov
es
mov
rcr
call
cmp
mov
inc
sbb
pop
push
jne
mov
shrl
or
push
mov
js
adc
mul
loop
stos
sar
ror
imul
sbb
fwait
sub
xchg
leave
repnz
pushf
mov
push
mov
fwait
arpl
xchg
lahf
pop
das
push
xchg
dec
xchg
fistps
rcl
xchg
jno
mov
imul
out
cmp
mov
mov
push
mov
lock
cmpsb
fwait
mov
cltd
dec
imul
shll
dec
jno
popa
jmp
js
lret
movsl
adc
ficoml
jno
lea
xchg
xor
stos
out
ss
lret
cmpsl
fistpll
jp
outsl
sysenter
jo
jae
fwait
lea
lret
frstor
pop
cmp
icebp
mov
in
lcall
pop
in
push
or
lahf
or
loop
pop
pusha
mov
or
les
mov
bound
mov
sahf
in
loop
bound
inc
pop
dec
mov
xchg
xchg
xchg
jecxz
adc
fimull
dec
xor
enter
lahf
push
into
ja
int3
adc
lcall
or
ja
popa
pop
arpl
test
outsl
dec
mov
dec
add
out
insb
push
push
lret
sbb
add
outsb
dec
mov
xchg
xchg
rcr
js
mov
stc
aad
push
push
jb,pn
sarl
mov
mov
mov
shrl
pop
jae
dec
sub
mov
mov
icebp
jae
push
pushf
stos
lret
aam
ficompl
lds
xchg
pop
pop
in
daa
xor
imul
jbe
dec
outsl
rcr
inc
jns
ja
fsub
jle
pop
popa
or
jne
push
loope
test
imul
push
push
dec
clc
mov
xchg
push
stc
icebp
imul
outsl
iret
jbe
cmp
cmpsb
fbld
icebp
jno
push
enter
inc
dec
push
outsl
pusha
stos
pop
pusha
stos
mov
sbb
sub
mov
mov
cmp
xor
lea
ljmp
out
jae
outsl
inc
jnp
insb
adc
bound
fstpt
push
and
inc
push
bound
mov
stos
insl
and
sbb
dec
test
dec
punpcklwd
fistpll
leave
out
loope
jns
popa
outsl
dec
sbb
pop
lret
xchg
inc
adc
pop
push
pushf
mov
fsubrl
and
cmpsl
jno
ret
push
xchg
mov
cwtl
dec
mov
imul
int3
aam
rorb
cmp
add
mov
mov
cmp
icebp
pop
outsl
mov
or
outsb
mov
orl
or
out
xor
jnp
insb
sti
test
in
jge
jecxz
mov
mov
insl
rolb
bound
icebp
cmp
dec
dec
imul
mov
in
pop
sbb
push
jl
cli
ret
dec
mov
insb
je
loope
int3
iret
sahf
pop
add
js
outsb
aad
mov
outsl
pop
ds
dec
lds
mov
fwait
ds
pop
loopne
sub
mov
mov
jo
sub
ret
dec
cwtl
in
dec
cmpsb
mov
cmp
xlat
mov
imul
sbb
int
test
mov
insb
cmpsl
xor
loopne
test
aad
dec
cmp
mov
adc
pop
push
std
pop
cld
lods
mov
icebp
lds
repz
aad
fdivr
jp
rclb
push
loopne
lcall
mov
lret
insb
mov
pop
add
in
outsb
ja
mov
adc
imul
xor
ret
jnp
mov
in
inc
shlb
imul
xor
out
stc
jno
or
sub
jo
repz
lret
mov
sub
je
cld
xor
jp
jns
push
popa
insl
in
f2xm1
movsb
xchg
adc
dec
mov
jno
icebp
scas
sbbl
push
out
push
in
into
xor
movsb
sbb
sub
popf
cmp
xor
into
jae
mov
jb
aas
lods
rcrb
fnsave
mov
push
ret
push
fsubrl
outsl
mov
mov
adc
xchg
mov
cmp
rclb
clc
repz
pusha
dec
out
hlt
xor
add
loop
cmp
cmp
or
xchg
iret
lahf
mov
jns
lock
jae
xchg
push
pop
xor
out
dec
pop
jae
lret
fmull
sub
sbb
fucomp
jle
popa
shrb
fcmovnb
xor
xor
das
out
insb
cli
lcall
mov
movsb
aaa
push
sahf
adc
ficoms
clc
outsb
shll
mov
nop
sub
xchg
stos
push
push
outsl
fidivrs
sbb
jno
fldcw
pop
mov
mov
into
lea
cwtl
mov
or
mov
out
lock
mov
hlt
shll
dec
jne
fldt
inc
cmp
sahf
lods
dec
pop
dec
ss
cltd
push
test
jbe
aam
jno
pop
outsb
mov
pop
pop
pop
mov
cmp
out
out
xchg
jecxz
in
rcrb
cmp
aam
enter
fistps
in
inc
xchg
sub
push
xchg
add
jne
stos
jge
aas
pop
lea
mov
push
mov
jo
jo
test
xchg
dec
scas
movsb
sbb
mov
sub
inc
inc
out
fninit
rorl
dec
xor
icebp
sahf
pop
push
stos
pop
imul
aad
xor
std
int
loope
das
jp
xchg
push
sti
aad
cwtl
mov
cmc
pop
repnz
iret
lahf
stos
fbstp
jns
inc
cwtl
bnd
inc
movsb
push
jg
std
mov
leave
sbb
add
int3
insl
fnstsw
lods
pop
push
push
push
add
pop
aaa
jnp
mov
iret
adc
mov
mov
mov
mull
push
lret
inc
cmp
lret
in
push
mov
sbb
fisubrs
rcr
lcall
push
clc
adc
fildll
lock
lock
in
ror
cmp
js
out
inc
roll
stos
hlt
in
ror
fnstsw
cmp
xorl
test
lcall
mov
and
loopne
daa
sbb
jmp
shll
dec
stc
insb
mov
sub
jne
inc
insl
xor
pop
lods
xor
inc
sub
shrb
pop
iret
push
jp
cmc
push
sub
pop
sbb
push
push
icebp
sahf
fiadds
xor
xor
jb
into
int
mov
jbe
mov
mov
or
rcl
mov
dec
cltd
xor
xchg
or
lahf
popa
sti
arpl
cmp
call
repz
leave
loopne
sbb
mov
fst
test
lret
stos
push
dec
shl
in
push
cmp
dec
enter
sub
xor
fldcw
xor
pop
daa
movsl
aad
xor
inc
ss
iret
shll
pushl
insb
in
popa
lods
jo
cmc
mov
xor
cmp
lahf
pop
pop
mov
sbb
sarl
sbb
movsl
cmp
mov
sub
xor
pop
aas
sbb
push
sub
cs
mov
mov
and
fwait
ds
cmpsb
and
xchg
jae
aad
mov
pop
mov
or
mov
pushf
pop
in
mov
data16
out
pop
dec
xlat
sysret
dec
jb
leave
push
shrb
cmp
dec
outsl
fcompl
sahf
fimuls
pusha
jnp
loop
ficompl
ljmp
xchg
push
insb
dec
cs
push
in
je
sub
rolb
loope
stos
and
fwait
sbb
test
std
int3
push
sbb
leave
pop
js
leave
popf
push
push
cs
out
pop
mov
fnsave
insb
repnz
test
xchg
mov
rcrl
xor
fisubs
in
dec
dec
push
cmp
ret
call
mov
les
sbb
and
mov
sub
fmull
xchg
mov
pop
push
movsl
out
xchg
dec
pop
scas
ficomps
nop
add
jbe
jae
lods
jp
outsl
xchg
shlb
jnp
jecxz
mov
gs
mov
mov
pop
shlb
mov
jl
shll
fcompl
aaa
cmp
bound
pusha
push
or
icebp
data16
out
cmp
pop
movsl
add
ret
sub
lock
mov
fcoml
lock
popa
and
aas
lock
leave
inc
push
sbb
mov
stos
sbb
and
or
cmp
dec
lahf
sub
xchg
push
rorl
dec
cli
rclb
ljmp
inc
pop
mov
jbe
stc
jp
inc
xchg
outsb
push
jmp
shrl
mov
xchg
ljmp
bound
icebp
jns
in
pop
insb
and
test
insb
fsubrl
cmp
xchg
ficoml
movsb
aad
adc
inc
stos
sub
outsb
cld
cmp
cmp
adc
adc
imul
mov
push
fcomi
inc
subl
push
fiadds
fs
pop
cmp
jg
and
add
imul
lret
stc
loop
pop
sub
hlt
push
pop
add
bound
fwait
or
rolb
inc
or
outsl
pop
insb
test
sbb
and
pop
fisubrl
cmp
imul
aad
or
xlat
loopne
jae
out
inc
sti
mov
movsb
sahf
aam
push
call
in
pop
dec
in
icebp
fisubrs
pushf
arpl
mov
cmp
xchg
stos
fmulp
xchg
mov
lods
push
sub
adc
fwait
mov
cmp
lret
inc
outsl
mov
cmp
pop
int
iret
add
dec
das
cld
hlt
loopne
pop
pop
and
mov
inc
fimuls
mov
push
lcall
fldcw
xor
cmp
popa
push
xchg
mov
xor
pop
dec
adc
push
cmp
inc
into
push
lcall
test
pop
js
lcall
fwait
add
adc
pop
test
fcmovu
imul
xchg
or
dec
push
pop
push
aam
bound
cmp
aas
dec
insl
pop
xlat
xchg
mov
popa
pop
cli
cld
cmp
test
push
ljmp
cmpl
cmc
stos
pop
fisubs
sbb
cmpsb
pop
add
push
mov
or
cmpsl
loop
dec
leave
sbb
das
mov
out
mul
mov
mov
loope
or
fnstenv
pop
adc
lea
push
pop
outsb
adc
pop
ljmp
popf
xchg
rolb
sbb
aas
pop
push
cmpsl
in
data16
mov
popa
mov
imul
lock
xchg
sbb
loope
test
cmp
rolb
sub
test
fmull
into
xor
out
xor
icebp
aad
ja
push
cmp
lret
sbb
sub
jl
jb
imul
sbb
in
or
aaa
add
push
push
insb
aas
imul
jbe
test
dec
adc
pop
ds
stc
imull
repnz
pop
adc
lret
pop
dec
rolb
mov
pusha
inc
pop
insl
or
xchg
ficompl
rcll
popf
add
in
mov
ss
xchg
xor
rcrb
ficompl
dec
pop
f2xm1
sbb
mov
leave
and
outsb
data16
in
add
mov
imul
mov
xor
insb
shl
xchg
popa
test
cmp
stos
lcall
int
xchg
mov
jo
fistpl
repz
push
lods
insb
or
pop
clc
cmp
or
mov
mov
sbb
inc
or
cmp
lcall
aaa
push
jge
shll
push
dec
jno
mov
call
sub
in
or
aas
mov
inc
imul
cli
mov
pop
sub
inc
push
daa
in
fstl
or
xor
jmp
add
mov
xlat
icebp
clc
xor
popf
pop
dec
loope
pop
sbb
cmp
out
in
fimull
mov
pop
mov
cmp
dec
je
mov
ljmp
jne
xor
and
mov
sbb
mov
xor
movsb
int
test
jp
xor
xor
scas
xchg
dec
scas
adc
pusha
int
pop
inc
into
push
cmp
loop
mov
dec
insl
cmp
rorl
mov
ljmp
dec
xchg
jmp
mov
adc
mov
cmc
mov
mov
lods
in
sarl
dec
les
dec
or
je
pop
cld
dec
pop
insl
clc
dec
gs
push
xor
leave
roll
cmp
push
xor
and
dec
cmp
in
sub
div
lods
xor
dec
roll
stos
jle
sub
jl
fbstp
and
out
lret
cmpb
sbb
jg
out
and
mov
xor
cmp
mov
mov
dec
les
in
jns
inc
mov
dec
rcrl
es
sti
xor
enter
jo
aad
push
mov
mov
icebp
insb
icebp
push
mov
lret
push
insb
lock
cmp
or
lods
xchg
aaa
cmpsl
mov
jno
daa
lret
or
pop
inc
scas
mov
cmp
pushw
inc
fstp
lcall
adc
loope
rorb
cmp
jns
gs
lahf
cmpsl
shrb
xchg
hlt
mov
lret
mov
inc
fwait
loope
nop
fxch
pop
mov
mov
out
ja
out
jns
mov
fmul
ss
mov
insb
loope
iret
imul
push
popf
pop
lods
hlt
addr16
push
jge
pop
mov
push
xchg
das
insl
or
loopne
pop
pop
test
push
or
aam
pop
lock
mov
enter
btc
dec
cmp
ljmp
dec
push
into
sub
jmp
inc
jge
cs
addr16
mov
adc
nop
sbb
cli
ret
fs
xchg
adc
insb
sub
mov
mov
or
int3
out
push
pop
mov
lret
push
dec
enter
ror
xor
adc
adc
jns
jle
out
std
ja
sub
mov
pop
pop
fucomi
leave
or
mov
decl
fs
mov
dec
mov
lret
jnp
out
pop
mov
cli
outsl
int
pop
in
scas
dec
mov
in
ja
lods
jle
mov
sub
divb
jns
ljmp
dec
loope
data16
fisttpll
jp
or
push
test
sarb
cld
push
jg
fcoml
incl
jns
add
mov
pop
fcompl
pinsrw
jno
lahf
jbe
fdiv
fisttpl
adc
push
jo
lods
iret
fsubrs
popa
into
lds
sub
jp
pop
push
js
push
sbb
cs
enter
xchg
mov
lret
cmp
ss
lock
sbb
sbb
push
in
enter
out
fwait
mov
push
outsl
push
sub
jo
fldl
dec
int
sbb
lahf
lret
lds
mov
mov
pop
lds
loop
pop
mov
imul
fdivrs
cmp
mov
cwtl
push
pop
leave
out
movsl
adc
lea
push
aas
xor
push
push
jne
lret
fsts
mov
mov
ds
into
cli
mov
insl
xchg
ja
iret
punpcklwd
mov
inc
test
inc
mov
in
cltd
adc
test
popa
add
mov
shl
mov
test
push
cmp
mov
adc
mov
cld
test
pop
mov
fiaddl
adc
dec
xchg
out
sbb
cmp
mov
movsb
shlb
fs
scas
cli
bound
stos
dec
and
and
sub
fnstenv
ret
ret
inc
push
dec
data16
imul
ret
inc
aas
dec
les
cmpsl
pop
jb
mov
int
mov
cmpsl
push
nop
test
clc
pop
pop
orb
ret
xchg
xchg
lock
scas
pop
sbb
shll
mov
mov
repnz
inc
mov
dec
mov
push
aaa
cmp
out
pop
inc
bnd
pop
or
dec
cwtl
lods
dec
lcall
int
push
mov
push
xor
outsl
shr
sahf
xchg
dec
in
sbb
dec
leave
push
into
sbb
sub
lret
cmp
mov
mov
xor
out
jge
push
rcll
jb
addr16
pop
push
lcall
mov
aad
testb
fsubrs
push
iret
push
gs
and
pop
bound
scas
dec
jge
sub
mov
xor
lret
inc
cmpl
cs
fmull
dec
insl
frstor
cmp
lret
ljmp
mov
dec
in
cmpsl
insb
icebp
sub
fiaddl
dec
loope
and
dec
ss
repnz
jecxz
dec
int3
fnstsw
and
xorl
lock
mov
dec
leave
sbbb
mov
push
outsl
sbb
mov
call
fisubrs
xchg
fdivrs
cmp
adc
test
lcall
vmwrite
jnp
push
sarl
pop
cwtl
mov
addr16
out
in
fs
in
jns
out
add
sub
or
int
inc
insb
push
jno
shrb
pop
cmpsb
dec
lds
sub
push
or
xchg
mov
inc
dec
dec
pop
push
popa
xchg
add
leave
addr16
lds
ret
mov
divl
rcl
rorl
lahf
cmp
pminsw
insb
mov
pop
ljmp
push
js
imul
xor
lods
insb
push
fs
ljmp
cmp
daa
enter
out
insl
mov
mov
inc
jnp
sub
in
scas
lods
daa
insl
fidivrl
mov
xchg
sub
sub
int
in
popa
xchg
movsb
popa
mov
iret
movsb
mov
fnstcw
jmp
sub
xor
inc
loopne
mov
stos
mov
add
mov
test
call
dec
mov
and
pop
dec
into
aad
lds
dec
lods
imul
xor
mov
daa
jmp
mov
dec
cmpsl
repnz
push
mov
lret
pop
lds
icebp
sub
in
imul
pop
xor
iret
push
rcrl
jle
push
dec
aas
push
push
arpl
xor
or
fldlg2
fisubl
insb
js
out
push
inc
and
sbbl
cmpsb
test
adcb
sub
add
xor
pushf
add
lock
mov
pop
fcomi
dec
lret
xor
leave
test
imul
sub
dec
pop
xor
cmp
xor
dec
data16
mov
add
scas
pop
or
xor
xor
mov
or
in
xor
pop
daa
and
in
out
fcmovbe
adc
insb
fdiv
fldt
dec
pop
adc
pop
js
shll
das
int
cmp
mov
daa
xchg
das
dec
js
das
mov
mov
fstl
dec
adc
scas
in
xlat
xchg
pop
mov
push
lcall
das
push
mov
lcall
cld
lcall
push
fucomp
stos
dec
push
sbb
out
mov
jb
xlat
mov
repnz
fcomps
pop
in
in
int3
ds
fdivl
shll
xlat
pop
mov
jmp
lcall
int3
ret
pop
pop
mov
pop
dec
mov
mov
lcall
sbb
xor
pop
stos
in
mov
add
pop
lea
insb
outsl
jg
cmp
lahf
outsl
lret
push
shlb
sub
outsb
and
fs
test
fimull
lcall
dec
test
cltd
cmc
mov
or
mov
push
aas
daa
adc
mov
sub
dec
rcl
push
add
fdivl
outsl
les
push
jbe
les
lea
cmp
xchg
push
sub
in
popa
sbb
pushf
push
icebp
pop
lods
mov
pop
fldcw
rep
sbb
int3
ljmp
int3
mov
out
dec
cmp
pop
mov
push
pop
jns
cmp
pop
xchg
fistl
test
xchg
jge
push
mov
lahf
inc
pop
xchg
dec
pushf
push
les
xor
xor
icebp
cmp
icebp
cmp
shrl
sub
insb
icebp
test
out
out
addr16
lcall
fdivrl
push
xchg
stc
xor
dec
dec
aam
pop
out
in
mov
jp
rcr
loope
lahf
test
mov
jne
out
jl
mov
scas
loope
dec
insl
test
jne
loope
lock
sub
sbb
cmc
outsl
lock
lret
movsl
sbb
xor
cmp
jg
aam
pop
mov
insb
fs
mov
pop
lea
pop
inc
aas
pop
into
pop
mov
mov
push
cmp
lret
neg
push
test
in
dec
sub
decl
test
sub
sbb
lock
dec
popa
jno
test
and
inc
insb
outsl
imul
xchg
jmp
hlt
mov
push
ss
mov
dec
pop
xor
adcb
ficomps
pop
mov
fstpt
in
iret
pop
aam
push
cs
xor
mov
dec
push
ret
addr16
sub
test
lcall
sub
jl
insb
cltd
test
insb
popa
pop
sub
adc
or
xchg
and
sarl
push
lret
jmp
push
sbb
in
das
xor
hlt
sub
test
test
in
repz
out
push
cmc
mov
in
imul
xchg
lret
stos
push
dec
xor
push
dec
rorl
push
out
xor
push
mov
mov
lds
fmul
pop
jle
loope
outsb
adc
call
outsl
popa
loop
dec
pusha
out
gs
int
data16
lret
in
fstpt
aaa
je
aaa
clc
jle
cltd
and
insb
mov
pop
scas
imul
jg
sub
mov
arpl
xorl
jae
nop
test
push
lods
loop
jb
arpl
xchg
mov
fstpl
cltd
jmp
out
fwait
out
rorb
aas
lds
int3
mov
sub
sbb
sbb
and
xor
pop
sbb
gs
xor
xchg
lcall
out
rcrl
push
push
je
mov
loopne
icebp
insl
pop
pop
sbb
cli
jge
cmpsl
xchg
dec
fildll
out
inc
les
vdivss
xor
icebp
enter
jne
imul
xor
mov
sub
xor
jle
pop
dec
sarl
jno
sbb
loopne
cmp
insb
jmp
sub
cli
int3
out
add
mov
dec
in
imul
sub
outsb
dec
cltd
test
inc
aas
insb
jns
push
iret
in
addr16
lds
cmpsb
nop
jmp
pop
loope
dec
push
jne
mov
lods
mov
test
sub
adc
jecxz
mov
test
sub
dec
dec
mov
pop
rcrb
dec
insl
cwtl
mov
sbb
mov
push
mov
xor
add
push
imul
js
in
cmp
lcall
mov
fldt
pop
pop
data16
fmull
or
les
pop
aam
jle
pop
mov
rorb
icebp
cltd
mov
fsubr
lahf
insl
mov
rcll
sbb
fsubrl
sbb
xor
divl
sub
jmp
movsl
in
lock
pop
mov
adc
mov
cs
xor
aaa
push
fwait
xor
fisubrl
cli
insb
testl
pop
data16
in
push
int
lods
pop
mov
push
cltd
mov
push
xchg
cwtl
aaa
test
lds
or
xchg
test
push
roll
fcoml
aas
inc
decl
aas
js
mov
dec
dec
push
pushf
enter
sbb
pmuludq
inc
mov
into
cmp
movb
mov
xchg
add
pop
cmp
xor
adc
or
push
clc
lds
dec
cwtl
push
or
nop
popf
mov
ss
or
popa
lock
jb
roll
mov
daa
lret
les
rorl
aad
inc
es
aad
sbb
mov
jno
test
mov
push
in
or
roll
push
push
push
cmp
mov
mov
in
addr16
test
mov
or
imulb
aad
dec
adc
xchg
xchg
jg
fwait
sbb
push
fcomps
add
cmp
lock
mov
in
das
call
cltd
inc
int3
adc
cmp
dec
cmpb
or
jmp
ss
mov
out
mov
outsl
xor
mov
aam
pusha
out
aaa
inc
cmpsb
fnstcw
loope
gs
or
andl
aad
pop
sbb
mov
shlb
nop
rep
jb
sbb
sub
cwtl
jb
pop
mov
lods
jb
push
cmp
lock
cli
lock
inc
int
insl
pop
ljmp
popf
dec
loopne
iret
cmp
ss
pop
in
push
daa
jl
out
and
jge
insl
jg
sbb
jne
jg
cmc
add
lahf
out
pop
sarl
lret
jg
adc
jg
add
in
jg
sti
std
out
jg
mov
lret
ja
std
jnp
xlat
jg
shrl
mul
lret
fnstsw
mov
mov
ja
in
scas
aaa
jnp
jne
rol
mov
mov
jg
mov
jg
pusha
ja
xchg
xchg
ljmp
mov
ja
rol
adc
jg
mov
adc
add
ja
shll
sub
loopne
repnz
lahf
lret
pop
lods
scas
pop
push
jg
shrl
lret
xchg
xlat
sub
frstor
pop
std
sbbl
out
jmp
jne
mov
mov
sahf
xchg
jnp
inc
lret
mov
jnp
loopne
sti
jg
mov
lret
out
leave
jl
jns
jnp
cmpl
imul
mov
pop
fcmovnu
sti
mov
sarl
mov
xchg
jne
mov
mov
mov
arpl
jnp
stos
mov
mov
jg
xchg
lret
ja
jne
mov
pusha
das
lret
loopne
repnz
jnp
aas
ja
ja
mov
test
fcmovne
fbstp
addr16
aas
jle
jp
xorl
cli
mov
mov
sti
mov
ja
out
frstor
mov
mov
adc
add
repnz
addr16
adc
jnp
lahf
jae
jnp
and
fildll
pop
addl
jnp
jne
mov
pop
stc
iret
out
iret
addr16
adc
push
in
out
cmc
and
ja
mov
pop
scas
sar
jge
mov
cmpsl
and
ja
mov
loope
mov
pop
mov
and
mov
ja
mov
dec
dec
addr16
ret
mov
ja
mov
repnz
jae
xlat
addr16
rcll
jg
ja
out
jne
loopne
repnz
movsl
not
mov
dec
add
mov
push
cmp
jae
jne
jnp
rcrl
jg
lock
bound
mov
imul
out
jne
mov
or
lret
aaa
jnp
mov
loopne
out
mov
mov
fldt
repnz
mov
mov
jmp
jne
mov
repnz
jne
mov
add
ret
icebp
mov
mov
lret
fbstp
or
mov
sarl
iret
sahf
pop
ja
jmp
add
loop
arpl
mov
cmp
lahf
stos
adc
lahf
push
out
out
fstp
leave
mov
out
mov
mov
lock
repnz
outsl
jnp
pop
xchg
addr16
mov
addr16
fcomi
push
mov
xchg
push
lret
jnp
jne
rol
aad
mov
add
add
or
popa
test
sbbl
cmp
imul
mov
mov
dec
sarl
adc
mov
test
clc
jge
adc
idivl
mov
mov
imul
jg
jbe
sti
filds
outsl
jae
pop
subl
fildll
jno
xor
jge
std
ja
xchg
subl
cmp
dec
filds
sbb
cmp
xlat
repnz
push
xlat
pop
int
sbb
std
cmp
mov
aad
rcl
pop
fstpt
dec
lds
fscale
mov
pop
gs
add
jno
dec
lds
mov
mov
popf
lds
mov
test
cltd
fistpll
mov
shlb
dec
popa
cld
test
jmp
mov
lods
dec
imul
int
add
arpl
jo
popa
cmp
ja
addr16
jg
mov
mov
test
aaa
popa
aas
lds
pushl
sti
mov
mov
ffreep
aas
popf
jp
mov
int
js
xor
jp
imul
mov
jnp
add
jns
jecxz
add
mov
xor
jle
or
popa
fidivl
mov
imul
pop
outsl
loopne
adc
popa
inc
mov
sbb
loop
lahf
pop
roll
ffreep
inc
fdivrs
cmp
lods
gs
shl
adc
popa
xlat
mov
mov
mov
push
mov
jg
les
jp
je
repnz
push
loop
lahf
push
sarl
xchg
popa
jg
addr16
loopne
adc
popa
push
jae
mov
mov
aam
gs
idiv
test
push
jp
je
push
bnd
sbb
loop
lahf
rcl
cld
dec
xchg
fbstp
cmp
loop
pop
shlb
jb
popa
add
jno
fistpll
jb
popa
std
jl
cld
jp
jo
not
sar
fistpll
popa
lahf
xchg
aas
mov
jge
push
jae
addr16
cmp
jb
lds
mov
jb
cmp
mov
out
ja
xor
movsb
stos
aaa
cmpsl
call
lahf
call
cmp
pop
xchg
scas
sarb
xchg
rol
jp
jno
jae
lahf
fidivl
int
arpl
clc
cmpl
call
jae
xchg
mov
outsl
lahf
dec
xor
lock
int
sub
jmp
fisubl
lahf
add
int
fcomi
leave
aam
push
push
outsl
push
inc
jns
int
jno
out
lahf
inc
mov
cmp
jnp
cli
xchg
lds
mov
movl
pop
inc
jp
je
jae
adcl
lods
mov
fwait
jge
sti
daa
cmpsl
mov
jno
or
mov
jg
ret
mov
cmp
and
out
inc
mov
cltd
ffreep
mov
divb
out
jmp
outsl
roll
sbbl
shl
outsl
scas
inc
sahf
jmp
outsl
push
inc
jge
mov
jmp
insl
outsl
mov
das
and
jp
mov
addr16
fbstp
aad
popa
leave
mov
jno
pop
lea
out
mov
mov
popa
cmp
out
lahf
mov
xchg
shl
jg
mov
fcmovu
outsl
pop
cmp
cmp
mov
subl
xchg
add
ret
aad
repz
lods
add
lret
fimull
adcb
fidivrl
mov
push
cmpsb
pop
popa
jns
mov
lds
inc
lret
fisubl
xchg
repz
rol
pop
aad
loop
repnz
push
jb
ret
lahf
inc
roll
int
ds
mov
inc
jge
cmp
mov
ljmp
xchg
xchg
adc
push
lea
shl
lahf
sbb
jl
sbb
lods
jbe
rclb
sahf
ja
xor
insb
stos
mov
idivl
mov
jp
je
mov
cld
shll
push
jb
xchg
lahf
xor
jnp
mov
mov
leave
ja
mov
loopne
mov
ret
outsl
fwait
jae
bnd
sti
push
jb
xchg
lahf
sti
sar
int
ds
mov
jge
cmp
jns
inc
jnp
lahf
stc
push
mov
loop
lahf
stc
sarl
xchg
fstl
loope
lcall
ja
clc
cmpsb
popa
mov
notl
jbe
fistpll
test
fbld
cmp
mov
repz
jne
imulb
imul
div
test
mov
iret
inc
cmc
jge
cmp
mov
repz
es
repz
popa
lahf
inc
mov
mov
repz
mov
loope
lcall
jb
scas
stos
dec
jg
outsl
push
push
repz
mov
pop
push
movsb
push
jns
stc
fistpll
clc
jb
popa
divl
idivb
jno
fbstp
jb
popa
repz
shll
scas
jmp
xor
outsl
fcmovnu
lret
cmp
or
jnp
imul
aad
lret
mov
cltd
jb
fnstcw
jno
fnstsw
jb
popa
movsl
xchg
aas
test
jae
outsl
mov
cmp
stos
lahf
cmp
aam
mov
xchg
or
int3
pop
test
cmp
addr16
sar
mov
xchg
int
sub
fstp
ds
addr16
cmp
jg
test
imul
outsl
pop
mov
jp
mov
jg
jnp
xchg
jae
data16
aaa
loop
lahf
aaa
les
mov
mov
call
call
jno
lds
fisubrl
outsl
or
movsl
mov
mov
jno
in
jae
rolb
ficompl
imul
call
inc
cmpsl
das
mov
inc
xor
cmp
repz
adc
in
out
popf
imul
push
popf
popa
flds
cmp
orb
mov
lock
mov
dec
gs
inc
jge
fisubl
idivl
jno
mov
shlb
pusha
idivb
daa
movl
popa
ret
repz
sub
add
xor
gs
mov
movl
mov
push
gs
mov
cmp
add
imul
jge
mov
pop
add
mov
andb
xor
mov
aaa
mov
xor
mov
fldz
mov
cmp
gs
arpl
gs
js
popa
insl
sahf
jmp
loopne
lahf
push
fcomip
insl
repz
mov
stos
xchg
mov
jne
idivl
mov
pcmpgtw
std
outsb
fcmovnb
loop
jb
bnd
lahf
jns
pop
add
js
fldz
std
gs
lahf
push
mov
cld
rcl
push
divl
inc
jns
cmp
jnp
aad
cld
sub
inc
mov
jp
xor
mov
cmpsl
jns
test
shl
sti
push
gs
xchg
mov
cli
push
sahf
iret
mov
jnp
mov
jns
mov
aad
jns
gs
cli
sub
inc
mov
stc
gs
lret
mov
inc
jnp
stos
leave
idiv
push
gs
mov
js
repz
mov
mov
mov
fistpll
ja
lds
dec
gs
mov
jbe
xor
fs
xor
lds
shl
dec
gs
aas
idivb
jne
popa
scas
jge
hlt
mov
lods
pop
jne
outsb
mov
mov
gs
mov
das
cmp
mov
jns
fwait
popf
lods
bound
push
cmc
dec
gs
inc
mov
inc
and
jae
pop
mov
repz
scas
test
repz
jae
and
push
mov
repnz
sub
mov
lods
jb
gs
shrl
lods
lahf
mov
stos
test
inc
jns
cmp
rol
sahf
icebp
gs
stos
stos
fldz
jo
ja
ss
jo
gs
gs
xor
outsl
ja
push
jns
sahf
out
test
movsl
cmp
lock
outsl
xor
gs
mov
ljmp
cmpb
outsb
lahf
mov
out
sub
imul
insl
jp
scas
mov
out
imul
jns
mov
add
jne
xorl
fwait
mov
insl
gs
adc
fisttps
inc
mov
insb
push
gs
mov
loope
cmp
inc
sti
xlat
repz
jge
arpl
int
pop
jmp
outsb
xchg
fsubrs
mov
mov
xchg
mov
ljmp
lods
mov
lahf
ljmp
mov
imul
lahf
inc
and
jb
inc
fidivrl
jmp
imul
push
test
test
stc
cmc
mov
push
ss
roll
testl
inc
ss
add
jp
inc
pop
test
add
jg
mov
cmp
adcb
add
cld
popa
adc
mov
jnp
bound
mov
pusha
jp
cli
cmp
stc
xchg
js
popl
mov
xchg
xchg
jge
jmp
jne
mov
cmpsl
bnd
imul
jle
sti
xchg
jbe
jne
rcr
je
lds
popa
mov
jae
jne
fnstcw
mov
dec
or
cmpsb
popf
fcom
shrl
sbb
lock
xchg
fdivrl
jmp
shll
test
pop
leave
sbb
popa
shll
pushl
in
aaa
xchg
popf
inc
lods
mov
movsl
cli
xchg
lret
cmp
jmp
mov
popf
jp
icebp
jns
adc
in
mov
xor
xor
jmp
imul
scas
sti
xchg
pop
mov
imul
and
or
mov
jne
inc
xchg
cmpl
fcom
xor
jns
sub
int
imul
sub
aad
fcmovnu
pop
popa
lret
js
add
ffree
jge
mov
stos
lret
dec
jg
adc
roll
sub
fs
or
ret
lret
jnp
leave
mov
dec
insl
jno
stos
push
xorl
lcall
rcll
loop
jb
pusha
lds
sub
jno
lds
add
jno
mov
add
icebp
mov
shrl
cmp
aas
gs
mov
jg
jae
int
jg
sbb
cmpl
je
xor
xor
mov
sarl
inc
popa
fwait
mov
cmp
gs
xor
lret
js
outsl
mov
repnz
xchg
sbb
xchg
aas
xchg
xchg
incb
insl
push
negl
stos
lcall
lea
xchg
inc
xor
mov
cmp
gs
sbb
jns
stos
in
popa
lahf
outsl
jge
loopne
jb
loop
lahf
jno
popa
hlt
and
add
insl
shrl
aas
std
insl
lds
sarl
int
cmp
xor
popa
xor
xchg
jl
mov
pop
mov
cmp
jp
cli
shrb
popa
shrl
stos
shll
fcmovnu
mov
hlt
jb
sub
xchg
mov
movsl
pop
cmpsl
mov
imul
int
mov
addb
sub
jo
sub
cmp
gs
stos
sub
fxch
jno
int
aas
xchg
pop
sbb
pop
cltd
test
ret
lret
lahf
jne
sbbl
lock
ret
jnp
sahf
cmpsl
mov
out
inc
lea
dec
xor
xchg
mov
sar
addl
mov
addr16
mov
jge
sahf
pop
mov
int
popf
xor
sbb
push
es
int
cmp
mov
je
mov
jae
jno
js
pandn
push
imul
mov
das
arpl
movsl
lds
andl
jnp
mov
stos
insl
scas
mov
dec
stos
and
out
fnstcw
xchg
jns
popa
out
jae
popa
add
jo
mov
fs
bnd
mov
aas
test
cwtl
mov
or
fdivl
push
gs
popf
xchg
jae
mov
dec
gs
jge
add
mov
gs
and
xchg
mov
xchg
mov
gs
movsl
mov
fistl
gs
mov
sbb
repz
iret
lds
in
dec
mov
and
insl
outsl
je
and
mov
jle
xchg
cmp
mov
loop
jb
pusha
leave
pop
mov
repz
jge
fidivs
rcl
sbb
arpl
cld
shlb
cmp
and
movb
jl
gs
mov
lret
mov
repz
push
mov
gs
mov
popa
and
out
mov
cli
inc
mov
xchg
cmp
int
stc
jge
aas
mov
lock
repz
ror
push
sub
sbb
leave
idiv
jge
mov
cmp
xchg
in
jle
mov
js
gs
bound
lds
shr
imul
test
repz
xchg
cmp
jnp
stos
rcrl
test
stos
add
popf
xchg
daa
mov
jae
andl
lahf
test
repz
mov
cmp
enter
mov
pusha
mov
jb
stos
loope
les
sti
xchg
jb
popa
fnstcw
jg
sti
popa
jb
popa
movsl
xchg
jp
jno
pop
mov
mov
xchg
mov
lds
xchg
xchg
push
cmpsb
subl
push
popf
xor
insl
outsl
sbb
pushf
fidivs
cmp
shll
pop
jae
lea
ja
aaa
jle
jmp
shll
pop
mov
out
cmp
sahf
fwait
mov
fwait
pusha
gs
sbb
lahf
inc
loop
mov
lods
inc
dec
jge
pop
add
mov
mov
in
cmp
cltd
int
cmp
addr16
aas
mov
mov
movsl
fistpl
int
xor
outsl
loop
mov
fmulp
clc
xchg
xchg
popf
lahf
movswl
mov
and
pop
into
mov
clc
xchg
out
mov
push
jne
hlt
gs
mov
mov
push
fidivs
mov
in
stos
repnz
inc
mov
lds
popf
arpl
add
mov
cmpsl
out
repnz
jne
jge
jb
jg
lea
aas
enter
inc
rcr
gs
insl
jmp
icebp
inc
xchg
popa
or
or
insl
popa
rcr
gs
push
jmp
xchg
icebp
mov
xchg
lret
fwait
add
xlat
test
mov
xchg
xor
scas
aam
les
xchg
jge
gs
mov
outsb
push
aad
or
mov
test
pop
fnstenv
jp
mov
insl
fimuls
jne
fs
aad
jne
out
out
sti
gs
test
mov
or
sub
fwait
mov
cmp
mov
gs
fwait
pop
cmp
mov
lds
jns
in
jno
pop
mov
jge
lahf
lds
mov
sti
xchg
or
mov
or
jle
jne
movsl
mov
fs
out
sahf
mov
repnz
pop
mov
mov
pop
jne
pop
mov
adc
test
pop
or
repz
dec
aam
enter
lcall
lods
push
lods
cltd
lds
mov
gs
add
mov
jg
jae
sahf
ffreep
xchg
jns
lds
mov
mov
hlt
gs
cmp
mov
jb
out
mov
sahf
cmc
xchg
repnz
scas
shl
repz
jge
inc
mov
xchg
pop
lahf
xchg
fwait
jns
fldz
icebp
imul
cmp
pop
mov
sbb
in
push
jne
jae
insl
ret
aad
icebp
jge
lret
lea
lahf
jo
xchg
iret
pop
xchg
mov
imul
js
movsl
repnz
xor
mov
call
sbb
mov
outsb
shll
lods
mov
lahf
sti
mov
insl
js
nop
lahf
loop
jb
repnz
and
lret
js
in
lcall
or
lahf
fsts
std
jg
in
xor
in
out
xchg
test
cmp
cmpb
xlat
jle
stc
lahf
repz
jg
andb
inc
mov
scas
pop
fmuls
jae
fbld
push
repz
cmp
movsl
ja
cmp
scas
mov
leave
mov
andl
lret
jg
fwait
xlat
sbb
iret
mov
xchg
cmp
xchg
jg
jnp
cli
dec
fcomip
ja
mov
lret
aam
pop
clc
shll
dec
jae
pop
addr16
repnz
repnz
jno
aad
mov
pop
je
jae
icebp
shll
rcr
fistps
mov
cmp
icebp
dec
gs
xchg
rcr
mov
cmp
repnz
inc
mov
cmp
push
mov
ret
popa
gs
jno
shlb
mov
jns
bound
mov
jbe
add
lahf
test
ja
imul
cmp
mov
leave
iret
inc
jp
cmpsl
mov
pop
cmc
jno
add
mov
jno
shrl
jge
inc
mov
imul
loop
arpl
add
aaa
ja
dec
roll
mov
int
test
lea
mov
mov
push
mov
loop
repz
lahf
insl
sar
mov
loop
lret
fisubs
imul
call
add
addb
sub
xchg
addr16
negl
cltd
shlb
push
lret
pop
movsl
insl
dec
xor
aad
les
addr16
jo
push
ljmp
xchg
imul
jo
scas
pop
out
pusha
movsl
sti
int
mov
addr16
fidivl
imul
aas
shll
lret
and
xchg
sbb
fwait
gs
out
ds
repnz
jo
outsb
sbb
fildl
cltd
aam
cltd
xchg
lods
in
fbld
cmpl
fistps
inc
jns
das
ret
mov
pop
cmp
pop
lahf
sbb
out
push
mov
mov
fisubrl
testl
lcall
add
jg
jnp
lock
add
fisttps
mov
cmp
filds
into
insb
test
pop
aad
enter
fwait
imul
fistps
out
push
sarl
aam
fnstcw
and
iret
lds
pop
adc
adc
and
iret
lds
and
inc
xchg
out
push
sarl
aam
fnstcw
and
iret
lds
jb
repnz
adc
xchg
arpl
lock
insl
fwait
gs
fsts
xchg
aam
aad
xchg
mov
xor
mov
adc
dec
adc
mov
gs
xchg
inc
test
insb
mov
or
pop
stc
fbld
sub
test
adc
ficompl
fbstp
gs
or
pop
popf
movsb
jne
jns
add
lock
iret
lds
lds
and
iret
jnp
lahf
adc
mov
clc
xchg
sub
jbe
xchg
pop
lret
cwtl
xor
repz
cmp
nop
pushf
mov
xor
out
jne
dec
mov
dec
jge
adc
pop
outsl
fimull
test
pusha
repz
xchg
xor
sahf
fwait
mov
cmp
popl
ja
lock
xor
sahf
or
fwait
jnp
sub
call
mov
jae
andb
aam
fwait
adc
inc
mov
addr16
insb
mov
add
adcl
and
in
jns
lock
lret
outsl
jno
cmpl
mov
repnz
xor
mov
sti
xchg
jnp
add
fildl
jae
jg
arpl
cmp
outsl
jg
call
lds
push
adc
scas
sti
lock
mov
xchg
mov
in
push
in
fbld
mov
cmp
push
jg
call
dec
shll
cmpl
fwait
jge
push
outsl
inc
outsl
sti
subl
or
imul
ss
sub
xchg
sbb
loop
xchg
xor
jnp
add
in
mov
stc
xchg
sub
jae
pushf
jnp
gs
jmp
clc
xor
outsl
or
adc
lds
fsin
jmp
pop
addr16
cmpsl
jne
outsl
icebp
les
gs
daa
movsl
push
inc
jnp
xor
sahf
xchg
pop
jnp
hlt
gs
rcll
jnp
mov
pop
ret
test
dec
aad
in
xor
pop
jnp
repz
lret
sbb
inc
mov
gs
xor
jno
pop
pushf
fcmovne
mov
dec
icebp
cmpsb
fwait
push
mov
cmpl
mov
insl
xchg
pop
mov
fwait
pop
outsl
lock
xchg
ror
xchg
pop
sar
xchg
add
lcall
movsl
inc
xor
and
leave
sub
cmpsl
dec
rcll
xchg
fs
sub
or
jns
iret
scas
xchg
outsl
adc
xchg
insl
mov
rcl
mov
jnp
jmp
mov
fnstsw
inc
fpatan
mov
lret
popl
xor
dec
bound
hlt
gs
adc
xor
jp
inc
iret
xor
fisttpll
dec
xor
push
adc
sub
jmp
sub
jg
pop
jl
gs
or
jge
or
fwait
pop
stos
mov
es
mov
mov
dec
and
xor
iret
xor
or
cli
or
scas
out
ja
jns
adc
push
xchg
mov
jno
stc
cli
gs
cmp
fwait
mov
xor
mov
test
fwait
or
test
xchg
clc
cli
or
scas
aad
cmpb
mov
int3
stos
adc
hlt
sbbl
sub
xchg
lods
cmp
lcall
lcall
jno
sub
scas
sub
movsl
out
xchg
scas
fisubrl
fimuls
ret
fimuls
cltd
lcall
mov
dec
mov
repnz
pcmpgtw
shll
insl
sbb
inc
gs
test
mov
leave
divb
out
xchg
sti
xchg
cmpsb
fimuls
sub
fidivs
adc
gs
xchg
push
xchg
mov
stos
jns
add
mov
out
and
xchg
test
sbb
arpl
mov
fstps
mov
and
xchg
inc
imul
pop
push
clc
mov
pop
call
aad
test
cmp
pop
cld
gs
icebp
out
inc
lds
xchg
pop
mov
subl
popa
mov
leave
xlat
push
xor
xchg
mov
pushw
xchg
inc
imul
add
nop
xchg
mov
add
test
push
filds
xor
cmpb
adc
push
and
jg
subb
sub
adc
fnstenv
mov
pop
int
fstpt
int3
test
jnp
inc
lds
mov
aam
fists
sub
fisubrs
add
mov
popa
sbbb
lahf
lods
sub
cmpsl
fildll
jg
and
arpl
jg
pop
jp
je
decl
outsl
jle
mov
lea
outsb
data16
xchg
movsb
loop
std
jno
gs
inc
xchg
jl
insl
inc
jl
outsb
addr16
rol
mov
loop
xchg
jnp
stos
jnp
mov
sti
repz
sti
in
jp
popa
xchg
jae
xor
fstpl
dec
jae
addr16
fldln2
outsl
sub
pop
addr16
stc
mov
jae
pop
jns
js
jmp
outsl
test
sub
jns
cs
cs
jo
mov
aas
popf
jp
jno
popa
jg
push
imul
dec
inc
mov
aad
cmp
clc
leave
addr16
scas
add
mov
imul
cmp
imul
pop
fwait
gs
jns
movl
xor
lret
pushf
enter
jbe
shl
sub
mov
orl
jno
addl
outsl
out
inc
xchg
in
mov
out
jp
xchg
test
int3
jb
out
cwtl
mov
ficomps
pop
ret
gs
outsl
adc
cwtl
xor
mov
pop
arpl
je
sub
mov
hlt
pop
lods
sub
mov
and
xchg
movsb
dec
xor
shlb
fcoms
mov
xchg
pop
out
mov
jae
inc
stos
jns
inc
sub
pop
ja
arpl
adc
addr16
mov
inc
adc
mov
lahf
repz
mov
fcomps
xchg
movsb
out
fistps
test
lcall
jno
movsb
inc
cmp
push
outsl
push
fisttps
lds
lcall
ret
push
test
pextrw
or
gs
out
stos
lds
fwait
push
gs
outsl
cwtl
filds
gs
fists
lock
jge
jge
fwait
negb
sbbl
xor
test
push
fisttpll
enter
enter
aad
push
inc
dec
lret
jne
filds
aam
mov
jns
add
rcrl
mov
movl
cmp
addr16
out
dec
rcll
popf
outsb
mov
out
shlb
in
xor
fimuls
xchg
fldcw
gs
gs
mov
bound
pushf
rcrl
dec
fidivrs
cmp
stos
fldcw
ror
lds
mov
aas
imul
xor
cmp
movsl
xchg
les
pop
sti
mov
and
rcrl
iret
or
sub
mov
mov
mov
insb
lea
lea
rorl
dec
ds
nop
jns
mov
fs
ret
and
dec
mov
mov
scas
insl
or
xchg
hlt
gs
leave
mov
push
and
imul
pop
mov
and
sub
imul
dec
movsl
rcl
imul
pop
lds
xchg
clc
aam
xlat
pop
in
jnp
call
jle
ja
mov
imul
cmpsl
xor
imul
gs
test
and
ja
imul
push
push
xchg
fxch
mulps
pop
pusha
aad
int3
xchg
xor
mov
jge
cmp
mov
lcall
pop
pusha
subl
cmpl
dec
movsl
add
popa
lds
imul
jno
leave
xchg
xchg
jae
imul
add
outsl
cmp
fistps
mov
repnz
aaa
cmp
mov
aam
imul
push
mov
cmpb
gs
std
inc
int3
lds
adc
rorl
je
loop
aam
lds
stos
lds
shlb
inc
popf
std
inc
into
lds
or
add
dec
shrl
js
shrl
inc
outsb
and
jmp
outsb
mov
out
fimull
rorl
test
int
int
in
mov
cmp
fs
insb
je
leave
mov
nop
imul
popa
sahf
imul
popa
jmp
inc
sub
rorl
outsl
push
push
dec
out
shrl
jmp
mov
sahf
rcll
outsl
loop
sahf
rcrl
outsl
and
sahf
rcrl
outsl
mov
sub
out
jmp
outsl
dec
jae
outsb
shll
call
insb
subb
ffreep
sub
jnp
out
mov
mov
xchg
inc
xchg
out
jg
addr16
xchg
fidivs
push
gs
in
insl
insl
outsl
in
insl
pop
scas
jno
movsl
lahf
lcall
jns
icebp
jne
push
xchg
mov
popa
imul
icebp
insl
in
push
xchg
mov
subb
leave
lahf
fmul
add
xchg
adc
push
dec
iret
in
pop
mov
dec
or
fnstcw
inc
insl
fisttpll
dec
xor
mov
adc
and
outsl
daa
imul
push
or
mov
mov
sbb
sub
xchg
mov
gs
outsb
js
xchg
mov
bound
cmpb
andb
gs
dec
xchg
xchg
mov
push
loop
lods
dec
add
js
mov
or
xlat
xor
xor
lret
popa
jmp
lock
lahf
cwtl
fstps
loope
adc
ret
mov
cmp
gs
or
pop
fstl
mov
int
fsts
mov
cmpb
leave
mov
mov
gs
scas
cmp
mov
fsub
cmp
out
xchg
mov
jle
mov
mov
fs
and
or
int
fucomip
sub
push
fildll
scas
ja
mov
or
xchg
dec
rolb
lods
iret
cs
pop
ret
movsb
mov
pop
lret
aad
mov
push
rorl
ficomps
subb
and
mov
mov
stos
sub
mov
cmp
xchg
test
inc
mov
xor
push
clc
pop
mov
out
lods
sbb
lods
sbb
xchg
lret
test
mov
imul
out
loop
xchg
lea
fisttpll
adc
in
jmp
fs
sbb
pop
imul
test
and
loop
in
pop
inc
gs
pop
dec
mov
cmpsl
jge
sub
bound
movsl
testl
jg
sub
push
gs
pop
xchg
stos
outsb
js
mov
xchg
bnd
loope
push
addr16
inc
test
and
mov
push
sub
push
mov
lret
fcmovnbe
jp
popa
in
stos
mov
fistpl
lock
js
pop
jge
arpl
cmp
inc
xchg
fnsave
in
lahf
xchg
shr
ljmp
mov
jbe
pusha
lea
pop
inc
ror
jns
add
scas
aad
xchg
imul
jge
xor
js
xor
lret
loopne
loop
jnp
call
inc
or
jg
jmp
out
repz
ljmp
push
mov
push
cmp
repz
sub
popa
call
addr16
pusha
mov
inc
or
jge
vshufps
call
mov
data16
pusha
loope
mov
bound
addl
xor
popa
out
jg
loop
jb
pusha
rcrl
js
jge
out
jne
cmovle
xchg
fidivs
mov
mov
jg
outsl
sub
xor
or
fstps
icebp
leave
cwtl
insl
mov
test
xorl
mov
cwtl
jnp
cmpl
je
imul
frstor
adc
lds
fwait
pushl
daa
mov
xor
and
add
xchg
xchg
fnstsw
cmp
ljmp
std
dec
inc
nop
lods
push
xchg
lcall
ret
jb
addr16
loopne
outsl
or
and
rorl
pop
leave
gs
pop
hlt
aam
xlat
jne
mov
fcomps
add
loope
add
lods
test
pop
popa
jnp
pop
inc
dec
dec
jg
xlat
cmp
mov
sub
push
jmp
push
jmp
repz
jmp
dec
sbb
and
xchg
shrl
imul
mov
xchg
mov
push
push
jge
push
imulb
movsb
gs
leave
rolb
push
jge
aam
sub
imul
aad
push
push
adc
imul
dec
sarl
sbb
lahf
sbb
mov
mov
jl
aam
lahf
gs
sub
shl
test
mov
mov
sti
jl
jp
loop
bnd
mov
cli
push
fisttps
insb
xor
ja
into
jae
clc
shll
pop
xchg
out
jae
shrl
aad
push
daa
imul
in
push
lds
sahf
ret
mov
inc
arpl
xchg
mov
mov
addr16
sarl
pushl
add
lds
mov
inc
loop
adc
mov
repz
je
push
shll
cli
add
push
lret
pusha
ds
cwtl
mov
push
push
mov
inc
push
outsb
scas
inc
fwait
rep
jge
loopne
pusha
test
shll
adc
jmp
addr16
imul
scas
xchg
repz
out
fistpll
popa
aam
scas
scas
shlb
adc
jmp
cmp
popa
aad
cmp
jnp
rol
sub
lds
mov
fs
iret
mov
bound
mov
sbb
xor
sbb
dec
sahf
pop
cltd
gs
dec
push
cmpsl
jnp
ljmp
xchg
movsb
mov
pop
jge
gs
lds
gs
lds
jno
push
dec
pop
fcmovne
gs
ss
mov
xlat
xchg
and
stos
int
test
xchg
ds
pop
mov
inc
and
mov
xchg
dec
inc
int
cltd
ljmp
pop
jno
lock
jmp
int3
iret
lahf
mov
mov
iret
sub
dec
jmp
outsl
test
int3
pushf
jno
gs
icebp
fwait
fs
jno
lret
pop
jmp
outsl
or
xor
das
iret
or
jnp
sub
pop
insl
fisubs
dec
int3
xlat
repz
pop
sbb
dec
gs
xlat
push
sub
flds
jno
lret
push
gs
lret
fildll
and
fistl
js
gs
mov
xchg
dec
jp
bound
lea
add
sub
addr16
leave
pop
mov
out
leave
ds
imul
jbe
gs
or
xor
jnp
stos
dec
inc
outsl
pop
iret
gs
mov
bound
cmp
and
xchg
mov
inc
gs
aas
mov
cmp
dec
pop
pop
lds
lods
imul
pop
mov
movl
pop
sbb
sbb
mov
mov
sub
xor
aam
mov
mov
mov
mov
dec
stos
clc
lahf
imul
push
stos
aam
mov
cmp
lds
outsl
sub
sub
mov
gs
iret
cmp
mov
or
fstl
jle
mov
in
lahf
cmp
out
jge
sahf
pop
mov
test
mov
imul
gs
cmpb
repz
pop
inc
xor
les
dec
or
lcall
imul
sarl
insb
lods
imul
imul
mov
pop
cs
xchg
dec
mov
imul
cmp
sub
imul
cmpsl
jecxz
icebp
cmc
ror
push
cwtl
mov
syscall
call
inc
js
clc
aaa
xorl
jb
and
push
sti
test
out
jne
mov
push
test
addr16
add
ja
mov
cmpsl
push
dec
xchg
xor
movsl
les
dec
jnp
loop
xor
lahf
syscall
cmp
rol
jmp
scas
rorb
jae
add
jmp
cltd
aas
jnp
shlb
inc
hlt
mov
imul
sub
jmp
xor
push
add
scas
xchg
jmp
rcrl
int
cltd
jmp
ret
jmp
das
xchg
sti
ret
outsl
rol
push
mov
int
call
xor
lahf
fldenv
cltd
stos
xor
jb
loop
xchg
jae
mov
and
jnp
xor
and
pushf
insl
lahf
lahf
mov
jbe
cmp
pop
outsl
repz
xor
insl
push
sahf
mov
sahf
pop
dec
lahf
push
lret
jno
mov
movsl
jb
pop
mov
scas
stos
lahf
cmpsl
shrl
arpl
test
mov
arpl
dec
mov
mov
int
mov
mov
repz
mov
mov
gs
test
outsl
push
mov
cmp
pop
cmp
iret
mov
cli
scas
xchg
ds
cmp
pop
cmp
cltd
lahf
mov
mov
jnp
addr16
cmp
sahf
incl
popa
cmp
das
fistl
in
jb
repz
mov
fidivl
sahf
cmp
outsl
decl
les
jae
fstpt
aas
outsl
cld
out
mov
rcr
pop
fcmove
lret
and
daa
fldcw
cmp
jns
fildl
in
mov
lds
mov
sbb
xchg
mov
mov
iret
inc
lock
adc
leave
fs
roll
mov
insl
sub
mov
inc
mov
bound
sub
movl
sbb
lahf
mulb
add
sub
scas
mov
sub
cmp
cmp
mov
loop
xchg
scas
mov
xor
gs
movsb
xor
mov
hlt
gs
pop
pop
cmc
fnsave
mov
mov
inc
lds
jp
data16
mov
sub
icebp
lds
pop
mov
jl
xchg
fsts
sahf
les
test
ret
jns
add
addr16
movsl
mov
iret
lds
aad
lock
adc
jns
mov
mov
setne
lahf
xor
fs
shl
xor
mov
jne
mov
mov
mov
add
enter
gs
es
push
into
stos
out
stc
gs
xchg
neg
sub
xchg
in
xor
dec
xor
mov
mov
xchg
xchg
inc
gs
aam
in
push
jns
fiadds
mov
pusha
fidivrl
mov
mov
pop
xor
das
mov
adc
fldcw
xor
pop
outsl
pop
gs
pop
sarl
out
jne
repz
dec
shll
ret
scas
adcl
sub
outsb
mov
gs
mov
cmp
fdivs
mov
test
mov
lahf
test
pushf
xchg
aas
xor
jns
xor
test
fs
xchg
mov
xor
test
adcl
stos
mov
sub
or
mov
loop
jb
pusha
lea
fsubl
mov
push
gs
scas
and
cmpl
lock
call
xchg
sub
mov
pusha
scas
lret
mov
or
inc
scas
xchg
xor
mov
inc
scas
enter
cmp
imul
ds
outsl
pop
or
pop
pop
or
gs
dec
push
scas
fisubrs
mov
outsl
sub
mov
cmp
and
xor
enter
and
mov
sub
xlat
data16
adc
popa
push
lods
leave
xchg
aad
lods
addr16
out
into
pushf
popa
fwait
gs
into
xchg
popa
lahf
fsts
int3
ds
mov
data16
sub
popa
pop
pop
ja
push
gs
outsl
sub
jb
mov
cwtl
lods
popa
or
xchg
out
mov
sub
push
jae
sub
aad
bound
lods
popa
mov
xor
push
int
popa
sbb
jge
fildll
pop
stos
push
lods
data16
push
xchg
fsubrl
mov
stos
mov
in
test
sub
sub
stos
sub
sbb
outsb
inc
fstpt
jnp
leave
push
inc
in
mov
cmpsl
test
mov
jns
mov
ret
andl
xchg
sub
in
outsb
ja
loop
push
xor
mov
pop
arpl
arpl
test
pop
jecxz
xorb
imul
jle
xchg
jno
jne
shlb
repnz
cmpsl
and
outsl
loop
mov
dec
gs
rcll
loope
popa
mov
lahf
arpl
repz
loopne
mov
daa
popa
jnp
daa
mov
push
addr16
sub
pop
jb
or
repnz
mov
loop
out
fbld
imul
rcrl
es
lds
mov
push
fistpll
sub
mov
pop
jb
pusha
popf
lahf
movsl
xchg
xchg
insl
pop
inc
mov
xchg
cmp
fincstp
pop
jge
aas
test
repnz
pop
repz
cmp
gs
push
aad
fnstcw
mull
arpl
jecxz
data16
insl
lahf
pop
push
rcr
test
mov
push
fldenv
insl
shll
in
shrl
insl
lahf
push
fmulp
gs
cmpb
incl
mov
sub
iret
mov
loop
repz
movsb
repnz
mov
js
leave
add
pop
gs
js
test
xlat
sahf
lds
insb
cmp
mov
adc
movsl
cmp
cltd
jge
sub
movb
mov
and
popa
push
cltd
gs
pop
popa
pop
mov
add
cli
pop
shll
and
mov
jne
cmc
lret
pusha
je
jae
repz
ret
addr16
loopne
aam
mov
orl
jg
das
mov
shl
jno
sub
xchg
xchg
or
test
test
dec
lahf
popf
adc
mov
mov
stos
push
push
xchg
sub
cmpsl
xchg
mov
push
xchg
jmp
jnp
mov
mov
out
cmp
lahf
sbb
mov
sbb
mov
sbb
mov
addr16
repz
pusha
xchg
and
in
jb
mov
cltd
sub
pop
lds
fwait
pop
xchg
imul
inc
sub
insl
jnp
iret
mov
xchg
sti
jne
adc
mov
jp
fbstp
popa
mov
inc
leave
into
movsl
imul
sar
mov
xchg
jp
or
int
sub
lahf
cmpsl
sbb
daa
xlat
imul
ljmp
cmp
jns
mov
popa
std
xor
ret
and
clc
cmpsl
imul
enter
imul
mov
clc
mov
mov
movsb
in
repnz
enter
push
and
insb
imul
dec
mov
imul
rep
cmp
in
and
dec
and
pushf
rcrl
mov
jns
inc
mov
repz
pop
mov
std
lahf
imul
rorl
js
jge
inc
inc
jnp
repz
jnp
lahf
sti
push
popa
jge
cmp
mov
and
repnz
mov
adc
aam
insl
or
in
pop
clc
mov
push
push
outsl
fldenv
adc
popa
adc
jg
data16
mov
ja
mov
jae
pop
aad
aam
nop
jno
xchg
repnz
mov
push
cltd
pop
fcomps
add
push
jno
sbb
mov
faddp
nop
mov
add
and
fs
aam
scas
mov
jge
and
sub
mov
jnp
cwtl
xchg
mov
cwtl
mov
pusha
and
test
lcall
insb
sti
lahf
jmp
out
pop
andl
adc
cmpsl
pop
cltd
mov
cmp
lods
test
mov
cmp
mov
insb
xchg
dec
outsl
push
shrl
fists
cs
pop
arpl
mov
test
and
lds
mov
mov
xchg
mov
xor
in
sub
cmp
ja
mov
popf
ss
xor
and
lds
jnp
sbb
sbb
inc
lock
enter
add
mov
xchg
sbb
or
mov
imul
out
int
aam
mov
movsl
lods
sub
fwait
or
test
gs
cmp
sbb
mov
xlat
pop
xor
pop
push
lods
push
je
lcall
outsb
lahf
push
movsl
lods
or
pop
push
lods
xchg
fstps
xchg
lahf
ret
adc
lds
test
dec
and
loope
push
mov
xchg
hlt
gs
mov
aad
or
rcr
rcrb
gs
cwtl
shll
lods
outsl
jge
movsl
daa
rcr
xchg
mov
inc
fisttps
lcall
xlat
lret
cmpsl
cmp
jnp
mov
aam
test
in
xchg
or
dec
xchg
jne
lret
in
lds
pusha
imul
xor
call
cmpb
jecxz
fs
fstpl
lds
jns
popf
out
pop
mov
push
popf
daa
mov
inc
jns
gs
cmpsb
out
jns
mov
or
mov
or
outsb
mov
mov
xlat
xor
jns
hlt
gs
mov
jns
and
push
cmp
imul
mov
mov
push
stos
xchg
mov
fwait
mov
mov
cltd
mov
enter
in
subl
cmp
gs
movsb
sbb
cwtl
or
cmpl
xor
iret
mov
out
mov
rorl
inc
cmpsb
stos
adc
test
mov
popa
test
jno
fbstp
cmpsb
push
fwait
jno
xor
mov
fwait
push
repz
fwait
test
xor
mov
mov
or
jge
adc
idivl
in
repz
inc
xchg
negb
test
cmp
xchg
xchg
in
repz
push
shr
sarl
shll
jno
sbb
dec
push
addr16
xchg
lcall
push
xlat
mov
mov
aad
xchg
aaa
imul
mov
xchg
scas
shrl
xchg
repnz
jns
xchg
rcll
sub
jge
jp
mov
xchg
adc
lret
fnstcw
cmc
shll
gs
add
imul
fnstenv
out
fnstcw
adc
dec
adc
lret
fidivrs
mov
xchg
jb
aad
ficoms
out
loop
adc
jp
push
adc
adc
xchg
pusha
ror
lds
or
popa
in
adc
ret
icebp
pusha
ror
lds
push
cld
fsubrl
mov
sub
sub
scas
enter
or
mov
test
sub
loopne
pop
pop
mov
mov
jne
cltd
ficompl
push
lret
iret
lds
mov
push
pusha
jnp
sbb
fimuls
sbb
cmpsl
or
stos
sbb
mov
mov
ret
cwtl
jg
jae
call
das
call
mov
inc
mov
or
scas
cmp
xchg
test
mov
in
xchg
pop
jno
pop
in
jnp
call
adc
iret
out
mov
sub
push
jg
sti
popa
subl
mov
jge
fsubrl
scas
fwait
gs
scas
sub
test
lcall
fwait
xchg
add
popf
sub
sub
imul
sub
sub
adc
dec
gs
hlt
gs
push
jg
aad
push
xor
scas
xor
mov
dec
scas
pop
fwait
in
fildll
mov
enter
add
jg
sbb
dec
outsl
dec
jnp
adc
mov
scas
cmpsl
jp
lock
jge
cmc
scas
xor
das
xchg
add
xchg
gs
repnz
fcmovbe
fisttpll
int3
cmpsl
sub
xchg
mov
cmovp
pop
inc
xorl
sbbl
movsl
inc
je
dec
cmpsb
out
jb
loop
push
int3
pop
push
movsl
rorl
fisttpl
movsl
enter
xor
lret
mov
outsl
jmp
int
nop
cmp
bound
dec
cmp
mov
jns
sub
mov
fs
jg
imul
out
pop
lahf
gs
lret
popf
js
imul
gs
jmp
pop
jnp
gs
mov
test
pop
loope
scas
push
dec
outsl
arpl
imul
sahf
leave
mov
xchg
gs
std
popa
mov
add
mov
sti
adcl
shll
dec
add
icebp
leave
arpl
gs
mov
imul
dec
xchg
mov
fs
js
rcrb
pop
aad
test
add
popf
jge
popl
in
push
cltd
mov
js
mov
xchg
cltd
movsb
in
sub
fisttpl
movsb
lret
xor
popa
cmpsb
leave
xor
jg
jmp
out
jne
loopne
sti
mov
cmp
jne
scas
ja
das
int
jb
xor
inc
imul
hlt
gs
sbb
bound
mov
cmp
lock
sbb
aas
lret
shll
sub
mov
inc
mov
jg
imul
jg
std
pop
dec
adc
lahf
fistps
jae
sbb
dec
pop
outsl
sub
rorl
xor
cltd
pop
inc
or
jns
inc
xchg
fistpl
xchg
stos
frstor
fcomps
out
loop
adc
lds
lea
imul
mov
imul
jb
out
insl
push
fistpll
lret
mov
mov
ret
xchg
xchg
pop
movsl
jnp
sbb
inc
icebp
gs
mov
push
mov
xchg
xor
jg
push
cmovge
cmp
insl
xchg
rcrl
jns
pop
mov
mov
jecxz
add
fistpl
mov
add
leave
mov
push
lret
sbb
cmpsl
mov
xor
ret
out
outsl
test
xchg
arpl
rcll
test
cmp
insl
or
add
outsl
outsl
jg
pop
popf
or
jp
mov
arpl
outsl
icebp
jle
arpl
fldenv
rcrl
in
stc
shll
call
fwait
jae
xchg
jmp
outsl
push
loop
sarl
aas
ret
jle
popf
push
imul
jecxz
mov
jae
jmp
decb
roll
adc
mov
cmp
mov
rcr
in
push
fistl
xchg
cltd
pop
sti
std
out
xchg
gs
std
push
iret
js
mov
inc
gs
sbb
aam
jl
pusha
push
mov
in
in
out
loop
nop
or
cmp
gs
jns
ja
cli
mov
fs
jnp
aad
sti
jnp
mov
push
mov
or
andl
sti
lock
repz
popf
xchg
hlt
gs
jb
repnz
jae
inc
popf
loop
nop
or
fisubrs
xchg
cmpb
sbb
xor
lds
add
inc
ret
push
pop
iret
test
pop
jns
repz
enter
add
mov
or
fcoml
cltd
mov
or
lea
fistps
icebp
mov
pusha
repz
xchg
fwait
decb
sub
gs
xchg
not
test
icebp
clc
test
aad
outsl
mov
insb
fistl
push
and
lods
icebp
ja
int
push
ja
lahf
scas
je
sub
jo
xor
push
andl
aas
notl
jnp
sub
lods
mov
mov
aas
jbe
cmp
imul
movsl
test
jnp
mov
movsl
pop
cmpsl
mov
fcoml
movsl
sub
jno
icebp
sub
fwait
jp
stos
mov
icebp
mov
jecxz
mov
divl
jne
cmpsl
sarl
jne
lock
mov
dec
cmc
cmp
cltd
imul
mov
jnp
imul
dec
jns
xchg
loop
mov
mov
pop
insl
push
or
mov
rcrl
or
add
lds
rorb
fdivs
mov
imul
gs
out
lods
jbe
clc
inc
or
cltd
sub
dec
outsl
sub
jl
pop
pop
sub
popl
lret
loopne
repnz
xchg
cmp
mov
lret
lret
icebp
mov
sbb
lahf
pop
pop
cmpsb
lds
pop
mov
lcall
dec
dec
jne
loop
xorl
sbb
adcl
mov
jg
pop
in
mov
hlt
jmp
lret
jae
inc
mov
repz
push
jg
jmp
aad
bnd
xchg
repz
dec
xchg
clc
lret
icebp
jmp
jmp
rolb
mov
lcall
repz
out
inc
hlt
popa
sub
mov
bound
outsl
sarl
lahf
push
insl
jge
cmp
imul
movsl
std
inc
mov
xchg
jl
addr16
test
and
mov
mov
ret
mov
fldl
dec
jns
xchg
scas
inc
lods
lds
rcl
je
dec
cmp
cmpl
imul
inc
jns
add
popa
xor
cwtl
mov
andb
mov
lret
xchg
iret
or
jns
into
mov
out
xchg
inc
xchg
sub
xor
mov
pop
mov
push
sbb
mov
popa
adc
inc
popf
loop
adc
cmp
arpl
popf
adc
pop
mov
outsl
mov
cld
cmp
pop
mov
and
fdivrl
jp
xchg
fwait
gs
in
xlat
xor
iret
lds
jnp
popf
arpl
fmul
gs
inc
cmp
lds
clc
gs
inc
push
loopne
pop
fcom
gs
jecxz
jg
push
pop
lcall
xor
xor
imul
lahf
stc
inc
clc
jne
adc
loopne
sti
in
mov
mov
xlat
popa
repz
cmpsl
stos
stos
or
pop
jns
pop
insl
jp
mov
outsb
jg
xchg
cmpsb
xchg
adc
rcrl
imul
lods
popa
test
ret
pusha
iret
aas
loop
ret
fldenv
popa
xchg
hlt
gs
fstps
fisttps
xchg
cmp
or
mov
fists
rorl
jg
mov
lahf
sub
dec
movsl
sub
cmp
xchg
mov
mov
imul
cmp
sbb
lahf
loope
push
lret
pop
pusha
mov
sbb
outsl
test
sub
sbb
lret
dec
stc
int
dec
inc
rcrl
imul
dec
leave
inc
cs
pop
enter
pusha
test
jmp
inc
jmp
call
or
push
ds
mov
mov
and
mov
mov
lds
fcomps
gs
xchg
cld
cmp
mov
sbb
push
stos
lahf
lds
pop
pop
jp
test
pop
mov
mov
cld
gs
jnp
jg
fucomp
add
icebp
outsl
out
inc
jnp
repz
cld
shrl
dec
popf
jle
addl
cwtl
mov
mov
dec
gs
or
ret
pop
dec
cmc
mov
mov
and
fdivrl
pop
leave
gs
fsubr
push
jnp
jge
xchg
xor
int
sti
repz
jl
pop
call
pop
xchg
xchg
fdivr
lds
call
sahf
sbb
xchg
dec
pop
ja
gs
in
push
mov
mov
push
mov
hlt
gs
aas
mov
bound
jns
fistpll
xlat
jg
and
sahf
jp
xchg
in
fstpt
mov
or
xchg
cltd
loope
in
xor
add
pop
iret
mov
jg
js
push
jno
mov
ret
filds
xchg
fisttpll
jge
rorl
mov
pop
negl
rcll
jns
cmc
add
inc
cmpsb
mov
mov
les
cwtl
es
imul
scas
sub
fnstenv
arpl
aam
data16
lea
fiadds
xchg
xor
jecxz
in
jne
loope
ror
xor
mov
mov
jbe
jb
jnp
pop
adcl
outsb
adc
out
repnz
add
movsl
xchg
pop
or
xor
fwait
adc
dec
test
loop
nop
or
adcl
pop
lahf
int
pop
mov
fstps
gs
lea
lea
cmp
int3
mov
jns
inc
add
xorl
lds
jg
mov
andb
inc
scas
rcll
shll
out
jnp
scas
push
out
aad
lahf
das
outsb
push
sbb
ja
insl
movsl
pop
popf
xchg
mov
dec
xchg
jae
in
popf
aad
outsl
fmuls
aad
jno
imul
push
push
pop
ret
dec
gs
adc
popa
sub
adcl
xor
stos
pop
dec
adc
xor
mov
add
int
test
inc
and
xor
xor
je
mov
xor
daa
in
sbbl
jne
testl
das
incb
dec
xlat
vpandn
mov
test
ret
lods
xor
jns
mov
jbe
sbb
orl
sti
int
inc
dec
jg
shr
sti
lods
dec
nop
out
and
push
out
int
push
shlb
call
xchg
rcr
insl
rcll
iret
push
rcr
mov
mov
fistpll
insl
push
sub
popf
mov
testl
out
stos
jnp
call
shufps
sbb
mov
andl
sbb
mov
sub
shlb
inc
popf
std
insb
sub
mov
sbb
xchg
or
jo
mov
adc
xor
lahf
sarl
mov
cmpsb
mov
lret
jb
sar
add
jge
jnp
mov
mov
jecxz
mov
cli
in
push
sub
cmc
ret
out
hlt
out
insb
out
aaa
lret
call
jb
jg
arpl
daa
jb
xchg
rorl
gs
mov
sub
cld
jg
mov
bound
add
mov
or
cmpb
jl
arpl
fs
push
add
test
add
fucom
add
add
popa
bound
mov
mov
pop
insb
jmp
outsl
addr16
jb
loope
ret
mov
or
mov
mov
incl
add
cmpb
ror
loope
out
jmp
pop
lea
jae
jg
arpl
ret
cld
dec
or
imul
mov
fdivrl
jle
jae
add
pop
add
jae
lret
push
lret
int3
push
xchg
lret
xchg
shrb
daa
jp
bound
das
aad
aaa
ret
stos
loope
data16
inc
jno
aas
loopne
test
repz
inc
xor
je
cld
gs
sahf
inc
arpl
je
jae
push
in
sub
dec
aas
int
add
jle
movsl
push
push
sti
cmpsl
fisttpl
pushf
gs
push
jb
fstpl
popa
neg
mov
mov
push
aaa
pop
xor
and
das
dec
pop
std
shrl
pop
xlat
clc
xor
inc
push
inc
mov
leave
je
ret
sahf
cmp
mov
lret
shlb
shrl
repz
mov
leave
mov
inc
stos
mov
in
jns
stos
mov
jge
leave
jg
jge
scas
test
sub
insl
jge
inc
adc
stos
pop
mov
fsubrp
mov
ret
loop
repz
vmwrite
fcoms
mov
xor
xor
cld
mov
mov
aam
jle
mov
out
stc
fistl
dec
bnd
inc
rcr
fldl
jns
mov
fnstsw
scas
lret
loopne
lret
add
scas
outsl
pop
inc
outsl
mov
into
jno
outsl
cli
cmc
out
out
jmp
push
pop
fs
pop
xchg
in
lahf
jl
jb
sahf
shrl
enter
pop
rol
leave
fcomp
cmpsl
pop
dec
loopne
fldenv
out
roll
into
fwait
or
sbbb
sub
mov
jne
out
fwait
lret
inc
popa
das
jo
jno
xor
dec
add
fldenv
cmp
into
imul
gs
lret
mov
addr16
bound
sub
push
dec
jp
sbb
fwait
mov
lods
loopne
add
divl
xlat
iret
adc
mov
xchg
lahf
repz
jg
scas
in
xchg
andb
repnz
aas
pop
and
subl
scas
inc
mov
and
xorl
ss
frstor
out
sbb
pop
ljmp
dec
lods
subl
jb
xor
bound
mov
mov
lahf
sbb
addr16
rep
aaa
fmuls
test
fistl
jecxz
lret
icebp
add
push
sbb
adc
aad
jnp
jb
pusha
xchg
jno
push
sbb
pop
mov
jge
inc
rol
in
fldl
mov
aam
xor
lock
or
notl
pop
push
aas
xchg
in
movsb
adc
mov
xor
mov
cmp
sub
mov
mov
notl
fldenv
insl
in
mov
popa
mov
fwait
scas
sbb
popa
push
insl
dec
xorb
xchg
jo
outsl
ds
or
repnz
aad
outsb
fwait
rclb
mov
sarl
push
fcmovb
rcr
mov
dec
imul
pop
sub
xchg
aad
jns
lahf
push
mov
dec
shlb
dec
push
or
jge
xchg
cmp
pop
int3
jbe
push
ja
imul
fsts
shrl
jne
jp
js
fwait
lret
lret
push
sbbl
mov
pop
stos
es
push
arpl
jno
enter
sub
je
jg
pop
imul
mov
push
jno
dec
mov
loopne
inc
fisubl
mov
dec
xlat
xchg
imul
addr16
loop
fildll
fwait
push
loopne
arpl
cmp
cmp
in
imul
push
jae
pop
cmp
test
mov
jno
mov
cmp
dec
fnstcw
jae
fidivrl
scas
xchg
xor
fnstenv
int
push
dec
mov
dec
lods
imul
insb
lretw
int
xchg
test
icebp
xor
mov
sub
cmp
xlat
mov
mov
dec
aad
outsl
pop
push
mov
mov
mov
fnsave
leave
push
pop
cmp
frstor
shll
mov
lret
adc
jg
jmp
in
mov
ss
push
fsts
jge
pop
inc
jo
fs
dec
insb
scas
andb
lret
mov
xlat
loopne
inc
lds
cmpsl
inc
mov
and
int
jo
loope
mov
xchg
fmuls
sub
movsb
insb
add
stc
xchg
mov
std
enter
xchg
std
inc
int
cmpb
jno
xchg
or
pop
test
cmpsb
lods
cltd
lds
in
js
loop
popf
loop
lret
mov
lds
push
and
cwtl
mov
ret
jno
loop
test
fdivrp
dec
xlat
iret
jle
arpl
leave
lret
fisubrs
fstps
inc
mov
fcomi
bound
imul
push
popa
repz
mov
icebp
and
jmp
or
pop
div
insl
cli
pop
stos
mov
pop
mov
sub
cmp
bound
pusha
fcomip
addr16
daa
lcall
fwait
jns
icebp
xchg
pushl
ror
shrl
loopne
rcrl
iret
insb
aas
push
jbe
hlt
xor
xor
jae
lret
repnz
jp
test
pop
pop
xor
aaa
mov
icebp
fdivrs
mov
insl
subl
jns
in
in
mov
fisttps
add
push
mov
insl
je
jae
rcr
xor
stos
iret
sub
aaa
js
push
in
mov
xchg
mov
insl
adc
ret
addr16
push
addr16
aad
jg
jecxz
push
out
jl
adc
fwait
rorl
stc
lcall
mov
mov
jne
jmp
lret
jp
lock
push
leave
push
lods
cmp
repnz
pop
sub
sbb
mov
arpl
out
leave
xchg
popa
lock
mov
xchg
add
das
scas
xor
outsl
incb
lock
jecxz
inc
jmp
add
ds
icebp
shl
cmp
push
jbe
jo
aam
arpl
scas
inc
aas
outsb
std
shlb
jo
enter
xchg
popa
mov
lea
pop
bound
out
dec
arpl
cltd
xor
fistpll
xlat
jns
arpl
fsubrs
aad
sbb
xlat
mov
xor
loope
cli
jo
insl
out
inc
insl
cmp
shl
mov
mov
jbe
mov
in
pop
vpmullw
shr
mov
pop
jle
aaa
insl
add
shlb
ljmp
jb
pusha
lea
repnz
shlb
loop
dec
sti
orb
pop
in
leave
pop
pop
mov
mov
aad
sub
adc
in
jb
jle
jge
imul
iret
sbb
push
aas
mul
mov
cwtl
lahf
jnp
dec
mov
cmpsb
int
jbe
xchg
int
leave
andb
sbb
icebp
pop
xchg
lret
mov
insl
mov
mov
pop
jo
mov
push
dec
outsl
push
sbb
lods
bound
mov
dec
or
mov
aam
jne
js
in
mov
fdivs
insl
lret
adcb
xchg
xor
leave
lret
shlb
sub
xorb
jmp
mov
into
lods
addr16
in
xor
mov
shr
arpl
jge
inc
push
pop
cli
mov
lret
cmpsl
jecxz
pop
mov
loop
lcall
and
out
arpl
orl
jo
or
in
dec
push
adc
sarl
jne
or
jo
aad
dec
ret
mov
mov
push
jo
ja
mov
jge
inc
rorl
hlt
pushf
cmpsl
xlat
jo
test
ret
repz
punpckhdq
jo
cmp
je
xchg
mov
or
fcoms
xchg
insl
ljmp
push
lea
push
xchg
test
inc
fistl
mov
outsl
outsb
lock
pusha
scas
loopne
push
pop
arpl
jg
pusha
lds
aad
addr16
xor
sub
mov
fsts
pushf
jg
inc
push
jns
lods
lret
ror
scas
mov
jnp
lahf
popa
sbb
stos
scas
pop
enter
add
roll
jne
sbb
nop
xchg
mov
aaa
push
repz
movb
sbb
push
gs
dec
imul
mov
shll
or
fwait
data16
jge
popf
out
dec
sti
rolb
push
xchg
scas
dec
sbb
movl
idivl
pop
mov
inc
out
mov
jbe
push
mov
mov
inc
xchg
scas
aam
lds
jmp
lds
les
icebp
xchg
stc
add
jne
mov
xor
push
test
fldln2
mov
mov
scas
sbbb
ficompl
out
arpl
in
ljmp
sub
mov
iret
add
test
in
jb
xchg
and
call
rolb
test
push
jl
sahf
cmpsl
or
jle
lret
jp
jns
sarb
add
scas
ss
loopne
push
mov
or
xlat
fnsave
sub
cmp
fsubrs
dec
lea
imul
jne
inc
gs
mov
fcmove
inc
inc
ret
mov
mov
out
jmp
imul
push
jb
arpl
xchg
leave
lods
mov
lods
fists
clc
add
and
mov
mov
mov
hlt
xchg
add
arpl
jo
lret
daa
cmp
mov
mov
lea
imul
sbb
das
loopne
jns
scas
call
gs
dec
rcll
or
mov
insl
cs
mov
push
mov
sbb
and
xchg
mov
int
rol
rep
add
dec
in
mov
push
ds
jno
kaddb
loop
sbb
test
inc
fistps
std
jle
push
cli
in
popf
xor
fistl
mov
jge
ret
stos
sahf
int3
lret
inc
jo
add
jnp
jns
xor
xchg
fidivrs
fdivrl
jle
fistpl
xchg
stos
xchg
pop
cmp
mov
fnstsw
xchg
imul
add
ljmp
out
dec
fimull
cmp
sti
cli
cmp
fs
lock
roll
mov
sarb
xor
fsubrs
and
or
outsb
mov
sbb
insl
cltd
iret
lcall
ja
insl
out
jne
sbb
mov
jno
mov
repnz
push
jle
and
iret
cmpsl
add
inc
fcoms
out
dec
popa
push
ja
movsl
addr16
lret
outsb
loopne
sbb
movswl
sbb
dec
mov
fcomip
pextrw
mov
pop
fstpt
frstor
pop
fbld
push
jbe
jg
sbb
dec
aas
jle
sbb
mov
fsubs
repz
psraw
mov
jp
mov
mov
xchg
dec
mov
mov
mov
jge
cmp
pop
jo
xchg
mov
loop
repz
cmp
fs
cmpsl
pop
xor
fisubrs
out
xchg
pop
xlat
fdivrs
movsb
popf
mov
aam
arpl
jae
bound
lahf
imul
leave
sbb
leave
int
mov
repnz
nop
nop
mov
rol
push
rcll
pop
xlat
mov
fdivrl
bound
mov
jae
enter
pop
xchg
xchg
sbb
xchg
int3
in
fistl
push
ror
jns
loopne
lcall
and
test
stos
addb
js
sub
ja
cmp
inc
test
out
xchg
pushf
outsl
jg
les
mov
fnsave
sub
leave
or
fdivp
jno
mov
lret
pop
mov
dec
ret
lds
xlat
mov
into
adc
push
das
fnstcw
das
ret
lods
iret
das
fucomp
cld
pop
adc
fdivrl
sub
jg
push
mov
jns
push
adcb
adc
arpl
movsl
jge
adc
or
into
pop
jle
gs
aam
int
cmp
lahf
int3
arpl
jp
insl
push
mov
insb
pop
lods
pop
jnp
in
aaa
fsubr
iret
addl
jnp
les
xor
and
cmp
fidivl
add
mov
test
jbe
mov
pop
outsl
insl
xlat
scas
loopne
jns
in
incl
jo
imul
dec
mov
shll
push
cmc
mov
jnp
mov
pusha
fnstcw
loope
mov
fimuls
imul
lret
cld
sarb
xor
xchg
dec
dec
in
jmp
popf
lret
aas
fstpl
int
pop
xor
xor
and
fistpl
into
cmpl
inc
jbe
test
sbb
popa
xor
inc
cmp
into
mov
jo
fists
ret
rol
add
dec
mov
loopne
sti
pop
push
xchg
imul
cmp
xchg
lret
pop
xchg
push
jmp
rcl
inc
pop
mov
lret
aaa
xlat
jbe
dec
loopne
imul
outsb
out
mov
scas
jne
mov
repnz
add
jns
inc
sarb
aas
shl
in
mov
lea
fists
pop
lret
enter
outsb
jmp
pop
jae
addr16
dec
jne
xor
icebp
loopne
loop
mov
sub
insl
pop
pop
dec
and
cmp
mov
mov
imul
jo
sub
iret
cmp
mov
daa
mov
pop
imul
cmp
pushf
imul
jae
imul
inc
stos
jo
mov
and
xchg
fcmovnbe
in
mov
loope
mov
addr16
cmpl
aam
rcl
lahf
repnz
jle
xlat
call
iret
inc
neg
test
imul
arpl
cmp
lcall
repnz
jnp
pop
mov
cwtl
mov
imul
nop
xor
fnstcw
jns
add
add
add
jnp
loopne
xchg
xchg
out
add
pop
icebp
outsb
add
adcl
jnp
nop
mov
out
cmpsl
cld
inc
jp
fisubrs
lret
jnp
add
cmp
jae
add
jae
mulb
mov
imul
fstpt
cmp
cld
push
adc
roll
imul
stos
aam
mov
in
cltd
subl
rcrb
mov
jae
fwait
mov
sub
mov
pop
test
imul
int
dec
xchg
fnstcw
push
mov
jbe
jae
push
jne
sbb
aaa
mov
push
jge
loope
jp
dec
ja
out
xor
enter
sub
lea
jmp
dec
pop
rcrl
js
shrb
fstl
lcall
add
daa
mov
sarl
fidivs
lret
fstl
fnclex
push
cmpsb
sahf
sub
jns
mov
out
mov
out
divb
sub
ja
mov
js
lahf
mov
js
xor
cwtl
loop
repz
loope
hlt
insb
cmp
fidivrl
jne,pn
jns
xchg
nop
xor
cmp
call
jnp
jp
lret
xchg
xchg
cmc
push
xchg
push
fistl
int
push
inc
test
mov
lods
and
ffreep
inc
dec
cli
lret
mov
jae
enter
mov
dec
mov
mov
es
pop
cmp
fnstenv
cmpsl
fmulp
mov
adc
loopne
sub
aas
rorb
xchg
lahf
xchg
fsts
iret
imul
mov
or
sub
in
int3
xor
int3
cmp
aad
insl
dec
mov
lret
fld
push
mov
push
mov
cwtl
loope
jns
or
push
mov
gs
mov
aad
mov
cwtl
lds
insb
sbb
pop
leave
je
jo
movb
xor
shrb
dec
xor
ljmp
xor
sub
dec
popa
enter
or
rorl
aam
pop
lahf
stos
sub
inc
aad
push
js
pop
loopne
fisttpll
mov
xchg
dec
dec
jbe
jo
loopne
xchg
in
imul
insl
jbe
fsubs
lcall
dec
mov
mov
js
movsl
jbe
jae
pop
jne
cli
jecxz
rcll
pop
jns
pop
andb
jecxz
cwtl
cmp
in
nop
push
inc
xchg
xchg
cmp
add
mov
mov
mov
push
lret
push
lods
dec
stos
sahf
into
gs
pop
lret
outsl
mov
fnstenv
arpl
aad
push
sarb
loope
jns
lret
mov
inc
nop
loope
cmp
ja
push
cmp
pusha
cmpsb
out
js
dec
in
icebp
xor
aad
loop
fwait
je
dec
aad
loopne
movsl
sub
xor
movsb
sub
mov
dec
dec
aad
dec
cmp
lea
das
out
leave
jns
scas
stc
mov
ret
ja
ja
cmp
clc
jae
jno
dec
mov
push
xorb
lcall
mov
mov
pusha
stos
sarl
dec
xchg
mov
aas
shl
int3
stc
int3
cltd
sbb
lret
mov
es
fsts
jno
jae
cmpl
cwtl
rol
xor
jp
mov
scas
in
jno
popa
push
cmp
test
movl
in
xchg
mov
dec
mov
xor
push
mov
pop
iret
mov
add
pusha
test
leave
imul
pop
jno
shrb
sub
pop
pusha
jo
cltd
mov
sbb
data16
cmp
jae
push
xchg
xchg
pop
jnp
cs
int
push
lret
outsb
sahf
nop
push
jb
push
outsl
xchg
or
lea
in
int3
scas
inc
mov
shlb
out
ret
icebp
test
push
mov
outsl
enter
dec
das
xchg
mov
rcrb
ljmp
fsubrl
pop
xchg
cli
in
ret
mov
jl
shrl
sbb
outsl
cmp
jb
stc
leave
cltd
lds
and
scas
insb
lret
fsubl
jae
fsts
shlb
fimull
pushf
mov
jno
aaa
mov
nop
enter
lcall
mov
pop
xchg
xchg
mov
int3
cmp
cmp
mov
stos
test
jl
jb
push
sbb
push
out
jmp
jae
or
lock
mov
cmp
imul
mov
push
lds
lahf
mov
mov
push
enter
fsubrs
xlat
ret
stos
sub
mov
xchg
paddq
leave
ja
push
pop
scas
iret
popa
lahf
fnstcw
cmp
jp
push
out
mov
pusha
mov
mov
dec
popf
outsb
mov
rcrb
mov
xchg
push
jge
shl
pcmpgtb
sub
mov
sub
xlat
out
mov
xchg
push
popf
fisubl
fildll
test
jl
mov
jl
xchg
in
jl
jno
pop
jo
fnstcw
es
mov
neg
lret
mov
mov
cmp
into
rclb
loop
mov
mov
test
mov
rorb
xor
push
xor
xchg
rclb
lret
vpacksswb
call
push
jne
add
jns
filds
pop
leave
iret
mov
add
fs
movsl
scas
aad
pop
pop
lcall
cmp
stos
xor
loop
cmpsb
mov
popa
pop
rcrb
popa
leave
mov
insl
outsb
mov
jl
jae
jge
lret
inc
cltd
jns
mov
outsl
test
jne
push
outsl
icebp
stc
cltd
scas
mov
movsb
popf
subl
int3
jb
enter
jnp
push
scas
pop
out
xchg
js
pop
int
push
jne
cmp
mov
fcmove
jo
fdivl
lock
loope
jp
mov
adc
nop
mov
gs
push
outsl
push
mov
jl
jle
mov
dec
aaa
data16
and
insb
out
mov
mov
out
mov
clc
ljmp
leave
adc
lcall
add
xchg
mov
jnp
outsb
out
shr
xor
lds
jnp
jae
jno
out
mov
arpl
jecxz
js
dec
mov
sub
in
in
lcall
ret
push
jns
ret
sbbb
sbb
out
push
jno
dec
mov
inc
mov
push
out
jmp
je
mov
pop
loope
pop
push
dec
out
iret
xchg
test
dec
jae
out
jne
push
movsl
aam
mov
ds
dec
ret
stc
shll
shl
dec
gs
out
or
cltd
sbb
into
pop
push
push
or
mov
xchg
sahf
dec
dec
out
mov
or
insb
push
ffreep
daa
shrb
test
in
push
mov
das
popa
pop
pusha
mov
pop
jnp
popa
insl
pop
pop
dec
nop
pop
sbb
sbb
mov
shrb
pop
jbe,pt
push
mov
lcall
xchg
add
insb
mov
cli
enter
xchg
mov
insb
mov
loope
popf
fisubrl
fmul
cmp
lret
rcrl
dec
fcmovnu
rcrl
pop
imul
test
out
xchg
dec
cltd
test
repz
loopne
stos
mov
xchg
int3
adc
enter
sub
ret
fidivl
cmp
fidivs
jg
lcall
cmp
paddusb
cmp
pop
movsb
scas
xor
pop
inc
push
dec
xchg
or
push
mov
lret
xchg
lret
aad
ficoml
popf
mov
push
mov
lret
stos
cltd
daa
jbe
out
insb
mov
dec
cmp
mov
fdivr
pop
sahf
mov
lahf
insb
aad
gs
pop
icebp
insb
cmpsl
mov
jne
ret
cmp
mov
push
mov
add
dec
mov
lret
mov
in
mov
pop
mov
out
test
mov
pop
xchg
xchg
rol
lea
mov
mov
pop
jbe
pushf
lret
in
pop
pop
outsb
cmpb
cmpsl
ffreep
movsl
shlb
xlat
ljmp
fistpl
fidivrs
jae
fsubrs
sarl
fcomps
mov
mov
sub
xor
sub
mov
cmp
adc
mov
push
dec
lods
mov
ret
mov
push
daa
into
cmp
cli
mov
data16
jbe
outsb
outsb
scas
pop
cmp
je
loope
cli
dec
aaa
cmpsb
outsb
out
cltd
ret
das
outsb
cmp
in
dec
loope
jno
das
mov
icebp
dec
or
jp
pop
scas
leave
js
adc
cmpsl
filds
andl
lret
cmp
push
das
push
cmpsb
popa
push
cmpsb
rcrl
mov
outsl
mov
pushf
fdivr
fiaddl
fisttps
test
mov
jno
xor
pop
pop
fisttpl
jbe
push
jno
fnstcw
jno
lret
adc
mov
iret
sub
icebp
dec
or
jns
xlat
rcll
inc
out
int3
outsb
lods
xchg
std
or
pop
and
stos
cmpsl
popa
cmp
push
dec
es
jb
pushf
xchg
std
pop
xor
aam
pushf
mov
out
sbb
in
int
scas
icebp
inc
leave
dec
mov
test
stos
les
or
iret
stos
sahf
mov
or
or
jb
mov
int3
xchg
out
xor
ror
test
inc
pop
out
les
mov
push
xor
adc
mov
test
xor
shlb
jge
mov
jl
cmp
ret
lret
cmp
mov
push
and
push
imul
shr
mov
lods
into
mov
jge
ficomps
inc
bound
loope
jle
jns
pop
fs
test
push
int
mov
sbb
push
iret
sahf
dec
xor
mov
scas
mov
cmpsl
cmp
cmpsl
push
das
push
dec
fnstcw
mov
test
flds
jb
stos
jno
ret
ret
cmp
movsl
imul
lcall
xchg
cmp
xchg
mov
lahf
sahf
xchg
pop
jnp
sbb
in
js
into
movsl
push
mov
push
pop
pop
scas
test
outsl
addb
pop
nop
lret
mov
fdivrs
test
dec
enter
and
test
subl
mov
dec
push
mov
sahf
jns
xor
sub
xchg
or
jae
pusha
push
jo
data16
and
insb
sub
and
bound
scas
leave
mov
mov
lahf
dec
sub
fisubl
enter
daa
cmp
dec
mov
scas
mov
in
je
cmp
xchg
cmp
sbb
sbb
sub
shlb
xchg
mov
xor
add
sar
mov
jo
cmp
jno
aad
outsl
sub
and
mov
int
lods
mov
mov
mov
sbb
int3
out
mov
outsb
stos
cwtl
cmp
stos
cmc
pop
xor
sets
in
pop
rorb
sahf
push
insb
pop
dec
out
rorb
insb
arpl
push
fldt
pop
aaa
xlat
aam
mov
push
mov
or
lret
leave
loopne
sub
icebp
dec
inc
ja
inc
xchg
int3
cmp
lcall
stos
cmp
out
jo
push
or
test
imul
in
rcll
add
shr
js
sti
or
popa
scas
add
xchg
lret
xchg
fcmovnu
mov
dec
repz
sub
rol
orb
pop
jl
roll
rol
pop
inc
mov
fstps
xchg
fcmovnbe
pop
jo
sub
xor
ret
popa
repnz
data16
imul
or
pop
mov
std
jae
pop
insb
mov
lock
push
push
ja
jbe
xchg
jle
push
ja
sub
jmp
fsubrp
outsb
mov
loope
repz
add
iret
out
cli
mov
subl
sahf
shll
lea
xor
loopne
sub
js
pop
loopne
push
mov
in
mov
rcrl
fstpl
cmp
push
fmull
loope
pop
adc
mov
jge
les
dec
mov
xchg
mov
outsb
mov
xchg
mov
mov
insl
push
in
jg
xor
scas
and
sub
in
dec
push
mov
add
imul
roll
cmp
insl
je
loopne,pn
jg
dec
inc
mov
pop
imul
pop
adc
leave
mov
in
stos
dec
sbb
fadd
jno
adcl
out
dec
lods
or
cmpl
dec
push
lods
loope
push
inc
lret
imul
sahf
sbb
shr
push
cltd
lahf
cli
fstl
lods
mov
inc
stos
or
fdivl
push
rorb
test
xor
xor
mov
xchg
cmpsl
aad
jno
pop
outsb
mov
sbb
icebp
fstpl
mov
fmuls
ret
jl
out
das
mov
rcl
mov
test
les
and
mov
sbb
fdivr
mov
sbb
pop
xor
mov
push
cmp
pop
and
xchg
mov
test
mov
mov
outsb
popa
rorb
in
je
pop
sahf
push
sahf
pop
movsb
sbb
frstor
int
sub
push
out
aaa
shr
adc
int
xchg
ret
call
outsb
lret
mov
jmp
stc
int3
fcmovbe
stos
push
inc
cmp
mov
stos
lcall
gs
repz
lret
xchg
leave
leave
add
xchg
lcall
or
mov
mov
adc
inc
jo
outsb
mov
lcall
cmp
xchg
cmpsl
dec
cmp
shrl
stos
jle
mov
lret
jge
fsubrl
leave
scas
push
mov
repz
insl
pop
bound
sub
aad
jb
mov
lret
daa
jle
adc
aad
sub
mov
test
xchg
push
push
mov
nop
pop
mov
data16
push
mov
or
movsl
insb
cmp
mov
jmp
mov
fdivrl
mov
xor
lea
popa
clc
mov
fsts
push
in
lret
pop
xor
lret
push
mov
in
pop
mov
cltd
es
pop
pop
test
lea
and
adc
xor
dec
test
stos
push
xor
mov
orb
dec
xchg
xchg
rcl
cmpsl
stos
loop
lcall
outsb
fdivrl
jmp
dec
nopl
aaa
mov
rcrl
fdivrl
mov
mov
xchg
mov
test
stos
lcallw
pop
test
push
mov
xchg
je
fimull
fs
push
clc
fisubrs
mov
ss
loope
dec
imul
jne
dec
or
xor
push
and
gs
xchg
lret
arpl
jp
dec
js
rclb
xchg
lcall
icebp
fmul
mov
rolb
lods
mov
pushf
and
rclb
mov
sub
fcmove
in
xchg
les
stos
in
mov
rcrb
xchg
mov
enter
int
dec
sahf
shl
in
dec
or
insb
data16
mov
ret
lcall
loopne
pop
popf
sahf
int
and
aad
lock
aaa
outsb
mov
mov
popf
test
rol
arpl
pop
test
inc
call
mov
fisttpll
out
jne
inc
stos
hlt
mov
icebp
cmc
jns
icebp
bound
inc
and
add
jbe
inc
js
test
push
mov
dec
jp
xchg
movsb
aad
mov
ljmp
mov
cmp
lea
es
out
outsl
mov
mov
rorb
xchg
push
cmp
int3
push
imul
mov
dec
sarb
mov
and
mov
push
in
lock
mov
hlt
mov
xor
mov
test
fdivrs
leave
insb
sbb
lret
lea
pop
dec
out
push
pop
pop
xchg
leave
mov
cwtl
sub
dec
lock
popa
jb
push
mov
xchg
mov
jg
mov
pop
fadds
rcl
dec
and
inc
cmp
sahf
cmpsb
ficoms
pop
lret
aam
fstp
das
js
cltd
in
mov
sub
scas
sub
loopne
fnsave
pop
popf
iret
gs
cmp
jg
addr16
lea
mov
jmp
pop
insb
data16
pop
and
loope
push
in
stos
lret
sahf
subl
test
or
or
jle
hlt
jae
push
rorl
cwtl
push
push
movsb
mov
add
fstp
pusha
pop
mov
enter
decb
out
push
out
iret
in
jl
aas
call
push
or
test
jbe
dec
out
int3
dec
je
test
movsl
adcb
imul
icebp
lret
pop
bound
icebp
mov
xor
jo
or
stos
outsl
imul
pop
movsl
in
sbb
scas
mov
mov
or
andl
fdivs
push
mov
hlt
test
push
addr16
cwtl
insb
inc
lret
out
mov
aam
mov
lret
scas
mov
push
jmp
mov
movsb
mov
in
jno
and
sbbb
fisttps
and
stc
lock
outsl
dec
mov
mov
mov
es
lcall
mov
rcrl
pop
xchg
es
iret
in
es
lock
ja
pop
je
roll
ret
jnp
cld
data16
bound
dec
dec
in
int3
mov
repnz
paddq
xchg
mov
push
pop
jl
or
push
mov
cmpsb
lcall
into
mov
cmp
aas
enter
mov
nop
lcall
mov
arpl
push
movsl
xchg
xor
faddp
xchg
rclb
lods
pop
lock
aad
pop
fs
pop
shlb
sub
test
das
fmull
jp
mov
inc
loope
xchg
mov
mov
cmc
jb
adc
push
mov
adcb
cmc
pop
mov
dec
cmp
enter
aad
lods
test
stc
xchg
xor
insb
dec
pop
sahf
aam
or
xor
nop
xor
lret
ret
pop
ficoml
fistl
adc
test
mov
push
adc
mov
sarb
dec
push
or
movsl
jg
cmp
push
xchg
aam
or
jnp
adc
lret
gs
test
aam
icebp
test
sub
mov
fldenv
pop
pop
cmpsb
pushf
sbb
movsl
xchg
add
mov
in
stos
fxch
test
dec
loope
lret
pushw
pop
js
les
movsl
ficoms
mov
ds
movsl
imul
lcall
cmove
movsb
jg
mov
dec
pop
or
lret
jno
and
adc
mov
sub
loope
in
scas
adc
push
vmovq
cmpsl
jnp
bound
xor
shr
mov
test
jno
lahf
pop
jl
mov
dec
xlat
aad
push
test
xchg
mov
in
bound
cmpsl
fnstenv
pop
fildll
setbe
mov
aam
xchg
or
sbb
pop
jbe
xor
lock
aam
or
push
popa
xchg
rolb
test
pop
jae
lret
aad
adc
cmp
adc
outsb
pushf
pop
lods
fwait
lods
loop
addps
jl
dec
test
push
jne
adc
pop
cmpsl
mov
push
cmp
les
int
xchg
popa
mov
in
mov
loope
int
cmpsb
fidivrs
jp
ret
rcrl
mov
sbb
gs
test
cmp
aam
scas
loop
in
out
mov
insb
jns
sub
dec
pop
xchg
push
dec
xor
jns
dec
mov
xor
push
out
stos
les
aaa
popa
dec
jp
ds
inc
fdivp
call
and
dec
dec
repnz
sub
repnz
pop
test
push
mov
xchg
xor
push
jo
cmp
push
pop
xor
das
out
stos
lret
test
das
data16
lods
shrl
sub
pop
jae
sub
mov
xor
xchg
jecxz
inc
xchg
pop
xchg
int3
dec
popf
sub
leave
jle
inc
pusha
xchg
cmp
push
dec
js
fcomps
arpl
stos
leave
cltd
fidivrl
jne
outsb
fimuls
insb
mov
adc
adc
jge
jo
in
je
jg
ret
cmp
insl
lret
insl
pop
faddl
fwait
dec
lret
adc
inc
xchg
fwait
pcmpgtw
or
mov
xlat
data16
loopne
fs
addl
cmp
loope
fs
ficomps
pusha
mov
insl
stc
sub
pop
jns
in
lahf
pop
pop
mov
cltd
inc
fdivs
mov
pop
adc
pop
jo
dec
outsl
loope
movb
xchg
out
lea
add
insb
ret
mov
xchg
inc
push
out
mov
inc
rcrl
sbb
fnstcw
mov
leave
pushw
inc
cltd
mov
xor
repz
aam
jle
or
into
xchg
shl
icebp
jmp
and
xchg
clc
lret
xchg
pushf
mov
dec
or
inc
sub
pop
xor
fcomp
inc
adc
pop
out
scas
aam
push
jnp
data16
imul
fistps
test
mov
cs
ficoms
scas
push
rcrb
cwtl
lahf
inc
in
dec
loopne
push
push
fdivrs
or
test
and
fs
imul
ret
adc
pop
adc
leave
or
xchg
or
aad
aam
les
test
into
dec
adc
ficoml
aad
dec
bswap
xor
in
popa
sbb
xlat
lcall
mov
cli
inc
sbb
dec
add
ret
imul
outsb
pop
jae
dec
ja
push
imul
lods
sub
pop
call
jns
cmp
loopne
jns
cli
aad
pop
sub
push
inc
lret
sub
movsl
cwtl
xor
insl
push
fistl
in
test
testl
test
rcrb
iret
jp
jo
inc
aam
jns
addr16
xor
cli
hlt
sub
push
dec
les
fsubs
mov
push
push
leave
xchg
movsl
ficompl
lods
mov
fdivrl
xchg
jbe
pop
subl
scas
test
dec
push
jmp
mov
fcoml
jbe
push
fsub
imul
sar
fucomp
and
fcmovbe
fsubl
xchg
or
test
mov
into
sbbl
fisubrl
andb
jecxz
fidivs
dec
pop
stos
xor
push
lods
data16
mov
sub
xor
loope
icebp
and
push
movsb
aam
mov
sbb
fisubrs
xchg
pop
in
aam
mov
and
sub
in
jne
lods
mov
pushf
lret
mov
and
fcoms
mov
mov
lods
push
inc
fs
push
loope
add
fsqrt
pop
push
out
xor
push
movsb
insl
test
out
int
das
scas
scas
dec
cmp
add
xor
int3
mov
mov
mov
movsl
rcrl
sub
jp
lret
pop
les
outsb
in
int3
sub
xlat
sub
xchg
inc
or
rcr
mov
xchg
adc
pop
lds
cmp
pop
leave
mov
das
int3
mov
sub
fs
fcoml
in
ror
cmp
in
lods
shrl
xor
sub
pop
cwtl
add
shll
sbb
push
dec
int
movsb
aam
mov
sbb
out
fsubs
mov
lods
sbb
test
fsubrs
bound
mov
pop
pop
clc
imul
cs
lds
in
out
xchg
mov
push
jns
push
fdivs
mov
inc
daa
cltd
push
jns
js
outsb
mov
cwtl
sbb
mov
xchg
gs
sbb
push
aad
mov
enter
lea
test
imul
push
mov
enter
mov
insb
je
in
pop
fsubs
dec
adc
push
push
lret
xor
jb
js
js
adc
mov
imul
xchg
jns
stos
movsb
leave
leave
adc
xor
mov
push
or
pop
inc
aam
lds
cwtl
fwait
inc
cmp
push
sbbl
mov
jo
jo
push
loope
leave
mov
jns
test
cbtw
pop
fwait
dec
or
loope
add
pop
push
out
ret
daa
outsb
adc
push
xchg
arpl
xchg
xor
cltd
and
pop
mov
pop
push
cmpsl
loope
mov
lret
outsb
mov
mov
xorb
push
dec
lahf
inc
or
sahf
int3
cmpsb
loopne
mov
test
push
in
or
addl
cmp
mov
xor
adc
mov
iret
xchg
push
inc
loope
xchg
in
mov
cmp
aad
pop
push
xchg
das
lahf
jp
movsl
je
push
cwtl
ljmp
xchg
loope
jle
les
pop
jno
sub
mov
mov
sarb
mov
cmp
lahf
xchg
fnstenv
jo
les
test
cmpsl
int
enter
stc
fucomip
jecxz
mov
fdivl
in
movsl
cmpsb
out
out
scas
shlb
gs
in
cli
add
int3
pop
and
mov
push
les
inc
pop
fstps
ret
sbb
call
fs
jns
cmpl
xor
mov
mull
sub
cwtl
lods
insb
mov
pop
test
push
dec
movsl
outsl
stos
loopne
mov
es
fdivrs
das
lret
pop
add
aam
push
push
stc
movsb
fisubl
cmp
int3
jo
addr16
fstpt
fstl
pop
test
sahf
dec
aad
test
jp
lock
mov
pop
rorl
mov
pop
xor
xchg
insb
mov
es
or
fiadds
clc
jae
dec
fmull
mov
pop
xor
dec
into
jg
xor
movsb
or
or
arpl
adc
dec
cmc
fs
xchg
mov
xor
cmp
sub
gs
fistl
sarl
xchg
mov
inc
mov
fcomps
movsl
push
fistpll
daa
jle
stos
mov
mov
lds
leave
mov
mov
xor
test
push
das
outsl
bound
movsb
aam
pop
dec
call
dec
push
xor
inc
pop
int
adc
fdivrs
xlat
and
sarl
mov
sbb
pop
lods
insb
mov
arpl
mov
sarb
das
mov
js
scas
mov
scas
dec
sub
dec
lret
sbb
push
in
je
in
lret
loope
or
mov
fisubs
aad
sub
cld
fistpll
xchg
out
fs
data16
adc
mov
leave
mov
outsb
jo
pop
stos
enter
cmp
xchg
leave
scas
push
xor
movb
cmp
or
fnstcw
jmp
mov
stos
mov
mov
aad
cmpsb
pop
mov
fisttps
push
push
or
xchg
fldcw
and
inc
je
sub
sub
xor
jg
insl
xor
in
pop
lret
ficompl
and
cltd
mov
lcall
or
xor
inc
push
fsubp
cmpsl
shll
mov
pop
pop
inc
mov
fistpl
loope
and
mov
xor
lret
je
xor
insb
sbb
add
sbb
dec
jmp
jae
push
adc
push
ja
xor
lods
dec
mov
test
lock
pop
sbb
aam
lcall
push
das
xchg
and
jp
sbbl
mov
lret
insb
push
push
or
push
mov
lock
cmc
fists
clc
les
cwtl
xor
sub
push
pop
sbb
aad
cwtl
test
cmp
mov
pop
cltd
adc
mov
push
shl
es
mov
adcb
jno
or
mov
cld
lcall
rcr
sub
jle
ja
movsl
stos
mov
jne
arpl
push
in
sahf
fsubl
push
dec
in
push
dec
movsb
iret
cltd
leave
xor
stos
sbb
int3
lea
pop
mov
sub
jns
outsl
jo
pop
out
push
lods
jp
dec
ficoms
stos
pop
jmp
fucomi
shlb
mov
lcall
sahf
les
push
jl
xor
add
lods
dec
imul
cmp
inc
cmp
xor
mov
adc
lahf
imul
xchg
pop
sbb
add
inc
sahf
fistpll
in
mov
mov
mov
sbb
pop
loope
sub
push
fidivl
mov
dec
cmp
mov
in
das
insb
xchg
mov
insl
imulb
push
movsl
data16
imul
pop
cwtl
xchg
mov
ficompl
leave
sbb
divl
sbb
sbb
xlat
cmp
pop
test
lods
cmp
lret
mov
cmp
int
stc
aad
push
test
in
jp
push
xor
mov
mov
fstpt
test
jns
enter
popf
aaa
ret
shr
orl
insb
addr16
jns
call
test
mov
push
clc
scas
mov
xor
scas
xor
mov
insl
loope
in
mov
mov
add
lea
adc
lcall
and
adc
nop
adcl
int3
xor
les
pop
mov
sbb
pusha
out
mov
rcrb
push
cmpsl
cmpsl
or
mov
mov
xchg
pop
inc
inc
mov
imul
dec
inc
insb
xchg
iret
cwtl
insl
adc
mov
imul
test
push
je
inc
into
and
ss
mov
mov
push
push
popa
sbb
cmpsb
push
mov
xchg
cltd
cmp
ja
filds
or
movb
jle
loopne
push
adc
jnp
and
xor
cli
loop
fstpt
cmpsb
push
arpl
sti
add
jno
les
mov
inc
lcallw
sub
fdiv
insl
mov
pop
shrl
pop
sub
xorb
pop
push
mov
pop
xchg
mov
push
in
aad
jo
sahf
popf
fisubs
fsubrs
sub
stos
fsubrp
push
in
xchg
xor
fsubp
in
mov
push
inc
data16
aam
mov
into
push
jns
fsubrl
xorb
test
mov
fiaddl
lret
jo
or
push
push
lret
or
jbe
sahf
pop
pop
push
mov
push
jb
adc
pop
sub
mov
push
push
dec
pop
shll
dec
hlt
xchg
jo
or
cmpb
loope
jae
lret
pop
jle,pt
dec
mov
pop
imul
add
mov
xorl
sahf
pop
into
icebp
stos
cs
mov
stos
gs
fdivl
xchg
aaa
jge
and
mov
int
or
push
lock
iret
adc
push
pop
dec
mov
stos
pop
push
xchg
test
dec
jge
loope
fstps
outsl
add
int3
repnz
dec
or
cmpsl
shrl
leave
imul
je
cmp
mov
cmp
push
dec
mov
unpcklps
mov
pop
neg
mov
push
mov
addr16
or
sub
mov
in
or
nop
out
jnp
call
in
lds
pushf
rclb
ja
outsb
mov
icebp
pop
lds
pop
pop
lods
mov
das
or
pushf
dec
sbb
cmp
adc
jo
std
cmp
scas
scas
adc
mov
dec
push
in
pop
pop
into
add
dec
mov
push
movsb
out
push
scas
aam
fwait
scas
in
fld
loopne
inc
push
jo
bound
mov
icebp
dec
iret
jo
xor
sub
xchg
push
push
or
cwtl
mov
mov
sub
fidivrl
or
cs
or
mov
pop
jno
adc
mov
icebp
insb
cmp
pop
push
xor
sub
sahf
gs
out
ja
dec
sbb
lods
or
mov
lret
pusha
sarl
pop
adc
dec
pop
sbb
cmp
pop
xchg
bnd
pop
jnp
xor
test
in
lock
sbb
push
pop
stos
dec
leave
aad
sub
mov
mov
jge
push
xchg
sbb
pop
mov
mov
mov
aam
cmpsl
faddl
in
mov
rclb
sub
pop
pop
dec
xchg
pop
loope
push
xor
mov
xlat
fmull
inc
xchg
shrb
pop
scas
mov
out
sub
sahf
das
mov
popf
jo
jns
test
mov
insl
push
jge
jb
aad
stos
mov
adc
flds
cmpb
aas
dec
cwtl
mov
add
cmpsb
jnp,pt
sub
movsb
xchg
flds
jb
mov
inc
in
pop
inc
and
pop
adc
out
push
mov
sub
sub
or
mov
mov
xor
push
in
clc
push
mov
push
enter
scas
adc
adc
cmp
or
add
fldenv
fimull
sahf
mov
outsb
pop
ds
pop
es
aam
and
xor
shrb
or
lcall
cmpsb
fstps
cmpl
imul
sub
add
dec
lahf
mov
mov
inc
xchg
insl
popa
xchg
mov
mov
insl
sbb
xor
add
outsb
iret
in
loope
popa
xchg
setp
xchg
lahf
cmp
int3
pop
mov
pop
push
lods
gs
pusha
xor
aas
dec
or
pop
lods
int3
xchg
mov
adc
jl
xchg
add
subb
cmp
repnz
sbb
dec
push
jno
fisubrs
ljmp
loope
dec
jo
jmp
mov
insl
pop
lcall
mov
xor
gs
sub
bound
xchg
inc
and
mov
aad
movsl
pop
sub
dec
pop
test
mov
in
mov
or
sub
test
adc
lea
adc
mov
mov
outsb
or
pop
and
popf
sbb
jge
xchg
arpl
inc
nop
dec
dec
sahf
fisubs
xchg
fsubrs
shrb
or
adc
insb
cmp
xor
pop
clc
filds
pop
jae
cmp
or
insl
push
test
in
outsl
mov
es
clc
sarb
loop
mov
push
movsl
cmovns
in
iret
cwtl
idivb
pop
ret
leave
addr16
dec
mov
push
in
sbb
addr16
sahf
clc
fldt
sub
or
adc
adc
pop
mov
cld
add
xor
in
adc
pop
sbb
mov
jne
imul
and
in
inc
xor
syscall
aas
mov
aam
in
setb
mov
mov
lds
iret
test
push
icebp
jb
mov
xchg
mov
pop
into
loope
push
loopne
mov
and
xchg
scas
xchg
mov
dec
into
scas
fwait
stos
shll
push
or
test
lods
xchg
and
add
or
mov
stc
arpl
loopne
aaa
subb
popf
mov
or
mov
into
insl
jno
mov
je
push
es
fisttpll
dec
ds
in
out
cltd
cwtl
push
icebp
jmp
cmp
mov
stos
jbe
xor
addr16
aaa
movsl
cwtl
test
pop
dec
out
jae
lret
pop
leave
repz
inc
xor
mov
stc
test
adc
jae
test
jne
cmp
push
push
xchg
fmuls
mov
leave
leave
popa
int
jne
bound
leave
lods
out
push
insb
mov
push
repnz
pop
pop
cmp
inc
add
rol
jmp
jne
inc
jns
pop
outsl
and
or
aad
mov
push
push
mov
lahf
sbb
adc
push
jns
fsubr
jl
jg
or
test
jle
inc
inc
nop
lahf
push
hlt
jno
add
out
scas
dec
lahf
out
jns
dec
mov
rcrb
push
jle
roll
movsb
adc
pop
xchg
out
int
xor
jl
int3
pop
test
sti
dec
and
cmpsl
jnp
xchg
jg
cmp
sub
pop
imul
addr16
imul
xchg
stc
scas
insl
rcl
cmp
pop
or
cli
lods
movsl
ret
stc
add
lahf
cmp
sub
lret
stc
imull
testb
outsb
sub
jmp
sar
jns
int3
imul
punpckhdq
cmp
int
je
lock
mov
loopne
jge
push
cwtl
xchg
adc
fdivrs
jge
mov
pop
lcall
jge
int
mov
mov
outsl
enter
mov
add
mov
jo
shrl
mov
sub
in
sub
fdivp
lahf
imul
fisubrl
jnp
imul
loopne
rclb
or
sti
lock
fidivrs
adc
sahf
js
fdivrs
lcall
dec
into
bound
fwait
dec
xor
xchg
enter
shlb
xchg
xorb
loopne
mov
inc
data16
push
xchg
pop
cmpsb
rol
cmp
in
push
push
pop
add
mov
movsb
mov
ja
leave
test
cmp
jae
dec
adc
xchg
pop
jp
fdivrl
popa
xchg
icebp
cmp
mov
frndint
pushf
push
inc
jns
push
lock
arpl
std
lretw
dec
enter
movb
inc
les
les
cmp
cmp
les
xor
xor
les
sub
sub
les
and
and
push
les
sbb
sbb
push
les
adc
das
add
cmc
jmp
data16
out
push
mov
xchg
mov
jb
inc
test
out
fstpt
dec
xor
xchg
imul
fisttps
fisttpll
fisttpl
inc
or
or
xchg
outsl
in
lea
out
mov
test
test
test
out
cmc
les
adc
cltd
and
cmp
push
punpckhdq
lods
pushf
movsb
pop
loop
jmp
fsubs
xchg
sub
pop
mul
data16
data16
gs
in
fs
jmp
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
jno
js
out
fcoml
pop
mov
xor
sub
pusha
mov
shll
push
xchg
inc
mov
or
mov
jmp
xchg
inc
out
mov
iret
imul
sub
mov
outsb
pop
rorl
repnz
out
gs
in
fs
jg
imul
out
jo
pusha
enter
lret
vpinsrw
les
les
mov
scas
inc
insl
gs
lock
pusha
mov
in
lahf
out
fs
iret
mov
cld
mov
ss
gs
add
pop
pop
xchg
rorl
cmpsl
mov
lds
ljmp
and
out
mov
in
fs
in
outsb
lea
fwait
jp
add
push
lods
jg
jp
divl
stos
in
inc
pop
xor
addr16
jno
xchg
scas
inc
out
pop
jg
push
fnstsw
lods
fistl
out
gs
fcompl
cmp
xor
sub
and
fs
xchg
js
cmc
lea
mov
les
les
les
in
jl
in
fdivr
mov
outsb
pop
imul
movl
add
bound
pop
adc
adc
aam
push
adc
adc
adc
nop
pusha
mov
xor
mov
sub
adc
adc
nop
xchg
arpl
dec
mov
xor
or
push
xor
and
cwtl
fs
mov
mov
jns
xchg
les
les
les
les
les
les
les
xchg
imul
jge
jnp
jns
ja
jne
jae
jno
outsl
pop
insl
cmp
fildl
test
filds
flds
roll
int
lret
test
test
test
test
test
test
test
lret
scas
test
test
test
mov
xchg
rorb
or
jmp
jge
jnp
jns
ja
jne
jae
jno
outsl
or
imul
arpl
popa
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
mov
jl
cld
addr16
fdivl
cld
loop
out
cmp
xor
sbb
adc
or
mov
data16
test
fisttps
out
fdivr
mov
jo
in
cmp
pop
andb
pop
fadds
aad
rolb
dec
pop
dec
add
sbb
adc
jbe
lret
jmp
pop
jecxz
fildll
fadds
shll
les
pushf
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
lret
out
andl
in
fs
jne
jae
xor
xor
cmp
iret
sub
test
mov
mov
pop
sub
mov
cli
add
jno
int
sbb
cld
dec
pop
ds
sbb
sbb
sbb
cwtl
and
cltd
fwait
inc
subl
rcrl
into
in
in
in
in
jl
jmp
fdivr
mov
pop
xchg
filds
stos
shrl
and
xchg
les
jne
push
xor
es
cmp
sbb
sbb
and
ljmp
jno
in
sbb
in
fisttps
pop
or
or
int
lret
or
adc
adc
pop
lcall
sbb
pushl
jmp
nop
js
push
sahf
jl
call
xchg
and
pop
cmp
mov
addr16
fimuls
jne
xor
in
cmp
xor
int3
fs
dec
mov
xchg
das
imul
bound
pusha
sub
and
mov
xchg
adc
adc
adc
clc
sbb
adc
insb
andb
mov
fcmovb
aad
rcr
lret
mov
test
test
imul
cmp
xchg
test
les
jne
jmp
xchg
mov
je
xor
add
push
ret
int3
adc
cmp
scas
pusha
adc
addr16
jae
jno
outsl
adc
imul
andb
xor
xor
xor
cmp
pop
mov
sbb
sbb
sbb
sbb
sbb
sbb
pop
jecxz
ret
pop
roll
pop
mov
pop
mov
mov
mov
mov
scas
pop
lods
pop
stos
pop
test
pop
mov
pop
popf
pop
fwait
pop
cltd
pop
xchg
pop
xchg
pop
xchg
pop
xchg
imul
jns
ja
jne
jae
jno
outsl
adc
imul
adc
adc
popa
adc
adc
sbb
aad
rorl
rorl
rcll
adc
aad
test
and
xchg
out
xor
jne
gs
xor
xchg
add
repz
in
inc
pop
inc
push
xor
sbb
xor
scas
or
test
cltd
les
les
les
les
les
xor
outsb
mov
les
add
out
jno
lods
popa
mov
fadd
mov
sbb
jg
jbe
repz
sub
xchg
test
inc
push
pop
jg
jge
jnp
jns
ja
jae
jno
outsl
pop
insl
pop
imul
xchg
gs
arpl
popa
pop
filds
fldl
fildl
flds
xlat
pop
aad
roll
roll
iret
jno
lret
test
test
test
test
test
mov
mov
mov
mov
mov
scas
pop
lods
mov
test
mov
popf
pop
fwait
pop
cltd
pop
xchg
imul
lea
mov
xchg
test
out
xorl
jns
ja
jne
jae
pushf
outsl
xor
adc
adc
arpl
or
or
mov
dec
roll
roll
iret
jmp
mov
jne
imul
dec
and
ret
or
mov
mov
push
daa
stos
rcll
pop
jmp
pop
fidivl
mov
sarb
mov
lahf
xchg
or
insl
je
mov
adc
pop
pop
fadds
push
pop
dec
pop
enter
inc
in
in
in
in
in
incl
fs
or
pop
sbb
inc
andl
xchg
rorl
mov
xor
xor
cmp
loopne
cmpsl
les
mov
pop
data16
out
jno
shll
je,pt
cmp
push
out
gs
loopne
xchg
xchg
stos
test
test
imul
jmp
je
je
mov
mov
fcmovne
les
jne
push
mov
xor
hlt
sub
imul
pop
push
add
int
enter
mov
mov
mov
scas
les
les
les
out
cmp
fsubrl
push
mov
pop
test
xor
jo
movsl
mov
add
fs
jno
mov
stos
inc
mov
xchg
lea
jmp
int3
xor
jg
mov
addr16
icebp
fs
jl
pop
out
faddl
cmp
in
sub
lret
sbb
lods
out
aad
pushf
out
insl
xchg
jl
mov
xorl
jae,pt
js
adc
imul
arpl
popa
ffreep
fcmovnb
fld
xlat
aad
aam
sbb
mov
jno
mov
imul
std
out
hlt
lock
add
cmp
stos
pop
cmpsb
lret
int3
out
mov
or
pusha
data16
and
sbbb
insb
imul
mov
out
ljmp
push
bound
test
mov
enter
rol
les
les
push
push
xchg
in
fs
in
jl
call
rcrl
cld
aas
pop
scas
cmp
mov
mov
insb
mov
mov
mov
xchg
cmc
repnz
out
mov
mov
ret
xchg
inc
aam
mov
push
sub
bound
rorb
cmp
mov
mov
cmc
div
icebp
mov
cli
jmp
fcompl
shl
pop
dec
pop
inc
cli
xor
mov
stos
or
dec
xchg
pop
stc
insl
cwtl
cmp
pop
jno
adc
adc
adc
xchg
test
test
cmpsb
fcmovne
loopne
pop
mov
xchg
xchg
sub
lret
xor
inc
jmp
xchg
add
hlt
push
cmp
pop
data16
fcomps
xor
adc
mov
data16
popf
push
loopne
icebp
push
inc
orl
adc
adc
jle
stc
fwait
adc
cmp
push
push
lock
lret
adc
adc
cmp
movsl
les
xor
ljmp
mov
aam
mov
repz
call
jno
insb
xchg
and
push
pop
dec
jno
roll
hlt
mov
xor
xor
cmpsl
jne
jge
clc
cmc
repnz
je
xor
js
mov
shrl
cmp
mov
xor
sub
and
cmp
or
std
out
xchg
xor
out
pop
outsb
mov
mov
inc
jo
jmp
fcmovu
jno
jb
xor
mov
sahf
mov
out
xchg
lret
arpl
ljmp
jmp
arpl
mov
aam
xlat
push
mov
mov
xchg
fstpl
mov
lahf
aam
inc
cltd
and
xchg
pop
xchg
pop
xchg
pop
popl
lea
mov
mov
test
lret
push
leave
inc
xor
and
adc
adc
frstor
out
gs
stos
fs
or
jne
aam
sbb
mov
js
mov
pop
and
sahf
setnp
mov
and
data16
mov
push
mov
scas
les
cmpsl
sbb
andb
popf
sbb
sbb
sbb
push
xchg
jecxz
popl
lea
mov
mov
xchg
inc
out
pop
jg
movsl
mov
hlt
lods
jp
mov
cmpsl
test
rcl
enter
xlat
outsb
mov
hlt
shrl
jle
rol
mov
mov
xor
cmp
fwait
test
test
mov
xor
in
pop
push
bound
fwait
rorb
add
jge
loope
and
adc
pop
sub
dec
test
pop
lret
inc
aas
inc
push
xchg
mov
in
pop
in
mov
mov
outsl
mov
leave
sbb
sbb
sbb
push
rcll
clc
mov
jno
test
sbb
cmp
jo
inc
jno
int
mov
fwait
loop
lcall
subb
xchg
enter
jns
ja
jne
jae
xchg
outsl
sbb
sbb
pop
imul
pop
popa
jecxz
fldl
fildl
flds
xlat
pop
roll
roll
iret
pop
int
lret
imul
mov
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
mov
cmp
adc
mov
test
jg
jnp
fcmovnbe
ja
lds
fsub
outsl
insb
imul
jne
gs
aad
push
fcomip
jno
adc
adc
xchg
aad
mov
lret
adc
sbb
lds
pop
mov
mov
loopne
mov
mov
xchg
lods
push
fildll
pop
mov
pop
fwait
leave
mov
xchg
test
cmpsb
mov
mov
subl
sub
xchg
xchg
outsb
xchg
test
js
ds
mov
fidivl
jle
fs
push
rcrl
sbb
inc
xchg
adc
lea
mov
pusha
jge
jnp
jns
xchg
and
jae
jno
mov
and
mov
fistps
fstpl
xlat
aad
rol
rol
iret
fmul
cld
xchg
pop
lds
popa
scas
stos
cwtl
sbb
jl
in
fmul
ds
sti
fwait
jnp
ja
cmp
dec
xchg
test
add
dec
push
sub
pop
imul
mov
mov
mov
cmp
mov
gs
ljmp
mov
lret
or
pop
lahf
pop
popf
insl
sahf
in
in
xchg
inc
jg
xchg
stos
fwait
mov
test
jg
jge
jnp
ja
jne
jae
jno
outsl
xor
xor
mov
cmp
test
fistl
fsts
xlat
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
movsl
xchg
lock
js
xchg
adc
test
test
lock
in
jae
jl
dec
insl
inc
xorb
mov
cmp
lahf
adc
xchg
test
mov
lea
xchg
test
jne
jbe
jne
jae
pop
ja
fnstsw
lret
pop
leave
gs
in
in
lock
mov
xchg
in
in
in
mov
loopne
lahf
xchg
popf
xchg
lock
adc
pop
fs
mov
mov
and
lds
je
cmp
mov
insl
test
add
popa
adc
adc
xchg
fisttpl
aad
shrl
cwtl
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
cmp
stos
sub
stos
cmpsl
adc
in
lock
add
les
test
daa
ja
jae
jns
sti
imul
jnp
xchg
jbe
jne
jae
jno
outsl
or
sbb
and
inc
les
popa
fistps
jg
or
mov
leave
mov
sarl
or
mov
fsts
popf
mov
test
test
hlt
mov
xor
xor
cmpsl
jne
xorl
mov
test
jno
outsl
test
decb
mov
arpl
popa
jecxz
fldl
fildl
xlat
pop
aad
cld
mov
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
pop
mov
mov
lret
scas
or
cltd
hlt
mov
xor
xor
xor
xor
xor
xor
xor
xor
xor
mov
jne
cwtl
or
pop
pusha
insb
jl
xchg
aas
adcb
ds
cmp
mov
stos
cmpsl
gs
in
sbb
jl
jmp
clc
sbb
cld
pop
pop
aad
xchg
push
xor
xchg
push
movsl
xchg
xlat
cmpsb
daa
outsl
adc
cmp
cmp
lahf
pop
mov
push
movsb
fmuls
scas
icebp
lahf
sub
shlb
shl
lret
adc
mov
jo
inc
in
mov
outsl
data16
xor
mov
int3
cli
jle
sarb
push
lods
push
and
leave
addl
xor
cmp
dec
pushf
jo
fwait
les
lcall
dec
mov
inc
mov
mov
cwtl
push
xchg
xchg
jns
xchg
leave
movl
setb
sbb
push
pop
iret
insb
in
push
jecxz
into
adc
jo
inc
in
in
xlat
test
push
dec
enter
sub
mov
movsl
jo
push
loop
rcr
push
test
clc
int3
mov
mov
scas
ljmp
adc
sbb
in
lock
inc
outsb
loope
frstpm(287
int3
fs
in
icebp
mov
enter
pop
ljmp
and
in
cmp
mov
lcall
inc
movl
or
les
les
fcoml
and
mov
lds
in
lock
insb
scas
jle
mov
das
add
and
lcall
mov
arpl
sti
push
sar
testl
add
dec
adc
xchg
in
aad
out
insb
xchg
fsubs
negl
ljmp
fisubs
loope
cmp
inc
or
mov
pop
fbstp
fs
mov
xor
mov
insl
add
repnz
dec
cmp
jb
test
pop
xor
andb
dec
mov
push
int3
rorl
inc
or
xor
mov
sub
ffreep
in
cmp
lods
sbb
and
call
les
mov
out
in
cmp
gs
inc
outsb
stos
and
fisttpll
push
test
enter
mov
or
fidivs
mov
sub
xchg
sbb
pop
cs
lcall
loop
xlat
stos
push
mov
scas
jbe
cwtl
sbb
mov
jle
loopne
mov
loopne
pop
cld
test
shl
mov
pop
dec
pop
iret
mov
mov
cmpsl
cmpsb
xchg
stos
les
les
add
or
addr16
pop
jp
arpl
imul
cli
xchg
jmp
push
roll
dec
xchg
cmp
leavew
aam
dec
aam
inc
rol
ret
cmp
into
jp
pop
addr16
push
daa
xor
and
pushf
adc
adc
movups
adc
lock
push
jecxz
fistpl
mov
cld
insl
sub
movsb
xchg
jns
jmp
divb
movsb
push
push
enter
and
sbb
xchg
xchg
adc
test
mov
jp
lods
enter
aaa
xchg
inc
and
cmpsl
rcr
mov
les
das
add
out
xchg
data16
popf
pop
ret
jae
dec
jg
pop
imul
into
xor
je,pt
mov
fildl
ljmp
je
mov
flds
stos
cmp
pop
and
mov
adc
mov
jl
push
push
pop
loopne
dec
pop
arpl
stos
xchg
push
test
test
test
das
scas
add
cli
outsb
and
repz
pop
dec
pop
inc
pop
inc
pop
mov
xor
test
mov
jg
stos
mov
fcoms
jle
xchg
xchg
push
hlt
cld
sub
out
xchg
test
test
add
and
test
sbb
xchg
push
xchg
and
mov
xchg
add
loopne
inc
cmp
mov
mov
add
push
fdivrp
iret
inc
and
adc
leave
and
xchg
clc
mov
jae
ljmp
mov
das
mov
mov
adc
sbb
sbb
push
sbb
popf
pop
jmp
iret
outsl
ja
movsb
ret
outsl
push
sub
push
outsl
jbe
dec
addr16
xor
icebp
fisubl
cmp
repnz
test
cmp
mov
pop
movsb
xchg
cmp
sbb
sahf
push
out
loopne
lods
push
adc
cld
mov
mov
lret
ret
adc
test
inc
jl
in
pop
loope
mov
popf
pop
and
cld
mov
pop
mov
sbb
shrl
jne
leave
mov
jne
imul
cmpsl
rorl
push
and
xchg
dec
bnd
sub
pop
mov
loopne
int3
les
test
pop
leave
test
mov
in
jns
xchg
jb
cld
outsb
in
aas
push
mov
out
gs
in
pop
inc
pushf
pop
adc
lcall
push
add
ret
inc
fbstp
jl
setb
popf
mov
addl
inc
cmp
dec
into
mov
mov
mov
shl
jb
int
cmp
and
sub
xchg
pop
sub
repz
mov
aad
cmp
fistps
push
outsl
mov
fs
lods
stc
jno
loopne
jp
or
xchg
gs
std
pop
mov
xor
test
mov
popa
jl
in
xchg
dec
xchg
out
mov
adcl
dec
push
mov
pop
mov
je
push
arpl
mov
push
sahf
pop
mov
jmp
in
enter
int
outsb
mov
sub
lds
or
hlt
or
pop
inc
add
jno
scas
cld
popa
lock
push
inc
fcmovnb
pop
faddp
cmpsl
ret
xlat
loopne
fisubs
mov
xchg
jne
call
fnstenv
test
clc
ljmp
loopnew
andl
out
out
shll
jno
inc
leave
fwait
jbe
jne
gs
xor
push
mov
lock
fimuls
xchg
mov
js
repnz
leave
test
enter
arpl
mov
mov
adc
fdivl
mov
jne
mov
into
pop
jbe
jo
loopne
fstpt
ret
into
imul
mov
pop
xchg
ljmp
pop
cld
adc
xchg
ficomps
cld
or
andl
fsubl
and
fldcw
xor
sbb
pop
lock
xlat
mov
fadd
jb
mov
insl
pop
fcompl
or
inc
xor
fld
or
and
hlt
data16
test
cmc
mov
xor
cli
sbb
mov
lock
not
jae
jp
insb
sbb
cmp
fiadds
flds
aam
iret
pop
lret
rorb
mov
cwtl
enter
test
and
pop
mov
hlt
mov
scas
cmp
mov
xchg
jne
xor
dec
cli
lods
arpl
ret
sub
arpl
or
sarl
imul
popa
ret
push
test
call
inc
lea
mov
es
sbbl
jp
xchg
lea
jg
test
jns,pt
std
xlat
jne
push
pop
jl
mov
stc
lahf
fwait
arpl
pop
or
jbe
jbe
stos
pop
insb
stos
xchg
jecxz
cmp
data16
icebp
lret
ja
dec
pushl
mov
loop
imul
dec
paddusw
jge
mov
sbb
pop
push
push
fwait
imul
pop
jl
sub
mov
sub
fsubr
adc
cltd
mov
xchg
xchg
test
xor
ret
lock
push
and
sbb
inc
pop
xor
mov
imul
xchg
mov
data16
insb
int3
jns
addr16
xlat
cmp
mov
mov
test
jbe
xor
jo
xor
mov
xchg
cltd
push
mov
insl
mov
fistps
mov
stos
int
mov
pop
mov
rorl
xor
fimuls
fisubrs
lcall
icebp
shll
inc
mov
lods
xchg
mov
aam
pushl
fwait
jae
fwait
xchg
iret
xor
push
rcr
popl
and
sbb
mov
orl
mov
xchg
add
lea
xchg
fdiv
mov
cmp
lea
lahf
les
mov
popf
hlt
adc
jg
jbe
out
in
bound
rcr
pop
adc
xchg
push
movsl
lret
in
icebp
inc
adc
cmp
mov
fwait
loopne
movsb
inc
bound
dec
fimuls
jl
inc
inc
fidivrs
arpl
dec
jecxz
sbb
fstpt
mov
pop
xor
mov
or
jne
add
and
js
pop
jge
repz
lds
cmc
push
fadds
push
sub
lds
lret
jp
jmp
cli
push
adc
mov
test
inc
push
mov
push
jnp
add
icebp
mov
or
dec
cltd
jbe
shll
mov
in
gs
xlat
mov
mov
daa
pop
jl
cs
adc
mov
rorl
push
pop
pop
mov
xor
pcmpgtw
lret
sub
jge
sbb
xchg
cwtl
fisttps
xor
movhps
enter
sarb
mov
cmp
test
xchg
push
fstpl
adc
lock
pusha
fistl
mov
push
sub
flds
scas
cld
into
mov
pop
xor
sub
insl
pop
test
in
in
jl
gs
fdivl
push
iret
mov
int
or
cli
adc
mov
into
rcr
xchg
js
cmc
push
sbbl
sbb
pop
push
xchg
fimuls
xchg
adc
jge
movsb
cmc
fdivp
les
ds
mov
xchg
pop
pop
sti
xchg
and
xchg
dec
imul
add
sbb
sbb
ja
repz
lret
xchg
adc
mov
mov
mov
or
fwait
imul
mov
jp
mov
or
xchg
leave
inc
test
mov
hlt
mov
xchg
imul
or
cmpsl
push
adc
xor
xor
lods
lcall
call
fdivp
ret
push
mov
test
stos
imul
mov
cmp
push
and
xor
xor
arpl
xor
inc
arpl
mov
dec
jbe
xor
jbe
pop
and
push
js
and
dec
or
add
and
xor
cwtl
es
js
lods
jns
rcll
out
in
arpl
scas
lret
leave
mov
xchg
and
cmpsl
ja
mov
fbstp
les
popa
dec
sub
enter
in
lock
loope
mov
add
mov
mov
clc
cpuid
iret
or
fiaddl
cli
inc
jno
outsl
xor
hlt
push
xor
mov
test
add
xchg
in
in
in
icebp
add
sar
pusha
jbe
repz
mov
dec
add
adc
adc
mov
test
sub
xchg
lcall
pop
cld
iret
push
cmp
push
dec
leave
xchg
adc
aad
and
add
imul
clc
int3
scas
bound
jle
xchg
enter
xchg
out
leave
fs
push
fisubl
out
imul
outsb
mov
outsl
ds
cld
jae
pop
pextrw
sahf
cli
jbe
mov
enter
mov
into
les
les
pop
xchg
popa
jno
jnp
xabort
stos
mov
lret
jg
jne
icebp
cmp
icebp
cmc
sbb
sub
jge
outsb
and
xor
stos
dec
xlat
outsb
aam
sahf
jns
popf
mov
adc
mov
insb
lahf
insb
jp
jl
jo
jg
xlat
add
aad
fcmovnb
leave
dec
enter
mov
addr16
jl
xchg
push
jge
xchg
cmc
xor
add
xor
lcall
adcl
mov
xchg
scas
mov
test
les
icebp
and
and
pop
popa
pop
fcomip
pop
mov
roll
jne
add
lds
stos
mov
dec
les
dec
push
dec
scas
lock
and
pushf
mov
xor
xor
inc
js
hlt
cmp
mov
adc
jecxz
out
sbb
shll
mov
and
jno
mov
cmp
jo
int
lock
jmp
fimull
xor
subb
pop
cltd
test
mov
loopne
push
inc
jb
fwait
das
mov
jns
mov
test
out
mov
mov
js
ret
add
jb
mov
jp
mov
les
arpl
lret
adc
in
mov
xchg
leave
aam
stos
pop
jnp
lock
xchg
nop
pop
popf
gs
in
jno
mov
lret
jge
cld
inc
mov
pop
clc
lret
lea
aad
ds
xchg
gs
sbb
incl
jl
lahf
int3
stos
mov
cltd
hlt
pop
jbe
test
lret
lret
pop
leave
gs
in
dec
and
inc
scas
sbb
lods
jb
cmp
rclb
mov
jecxz
movsb
pop
pop
pushl
lock
aam
adc
mov
jne
jecxz
call
and
mov
adc
push
inc
scas
in
lock
lods
xor
fwait
lcall
imul
mov
movsl
cmpb
jmp
pop
inc
cltd
mov
ret
fwait
mov
in
stos
leave
arpl
call
lock
inc
xchg
rcl
sub
cmpsb
fdivrl
xchg
lahf
adc
mov
fs
lret
js
pop
mov
mov
shlb
pop
test
cmpsl
jae
jb
jmp
icebp
incl
cmpsl
sub
hlt
sbb
lock
imul
cmp
aaa
mov
imul
inc
into
sub
gs
in
or
lcall
outsl
and
cwtl
jl
jmp
push
adcb
bound
sbb
arpl
outsl
mov
mov
movsb
imul
sbb
in
xorb
jnp
xchg
cmc
sbb
js
jb
mov
mov
jnp
mov
shlb
mov
inc
inc
test
mov
aam
fwait
int3
in
inc
push
xor
popf
jmp
imul
daa
push
jge
negl
cmpsl
lea
sub
mov
fadd
xchg
add
jmp
sbb
call
adc
js
xchg
leave
mov
sub
add
loop
shll
jg
adc
retw
nop
enter
js
xchg
mov
xchg
fiadds
leave
test
add
push
icebp
cwtl
test
outsb
adc
mov
cmp
cld
fs
loope
xor
popa
sbb
inc
mov
jnp
imul
mov
jne
push
cmp
ret
xchg
fsqrt
push
ljmp
push
push
stos
jne
or
mov
repnz
mov
xor
sbb
out
pop
push
movsb
subb
xchg
mov
jge
pop
inc
mov
and
popa
adc
roll
push
loop
in
jo
lea
pop
and
sti
mov
pop
mov
imull
mov
aas
inc
ret
xchg
mov
xchg
sbbb
adc
sarl
insb
pop
in
fs
adc
xorps
addr16
lock
cmp
cld
test
push
mov
dec
cld
mov
inc
insb
jecxz
pop
leave
mov
incb
gs
ret
fadd
aad
ret
sub
mov
jno
and
fwait
movsb
cmp
sub
cli
push
cli
rclb
cmp
aam
jp
repz
fisubrl
outsb
jmp
mov
pop
sarb
popf
mov
mov
imul
xchg
movb
aas
andl
outsl
inc
pop
inc
fcmovnb
jp
jmp
lea
lret
cmp
arpl
xchg
test
xorb
pop
mov
stos
aad
cmpsl
add
pop
in
cltd
ljmp
cmc
xor
mov
outsb
in
pop
ss
mov
fs
aad
cmpsl
add
fidivs
stos
dec
lods
out
sub
jae
sarb
jg
fwait
add
jne
push
cmp
mov
popf
rolb
mov
mov
fstpt
mov
jbe
pop
subl
loopne
sub
arpl
mov
gs
in
pop
add
mov
push
fs
int3
jb
or
ret
jnp
vandps
iret
fcomi
idivb
cltd
test
repz
jp
stos
mov
inc
stos
iret
xor
xor
je
push
icebp
inc
and
stc
les
test
clc
pushf
and
xchg
cmp
mov
jl
in
fsubrl
inc
push
lods
cmp
sahf
cli
jo
jbe
mov
jae
xchg
lret
fldcw
push
xchg
xchg
mov
and
in
push
add
sub
push
jbe
cmp
xor
daa
out
out
mov
ficomps
mov
sub
mov
int3
adc
cwtl
and
mov
test
cmp
int3
sbb
add
leave
add
je
jp
ret
xchg
xlat
decl
fdivrp
fs
sub
hlt
sbb
jmp
dec
and
fsubl
js
mov
xchg
xlat
out
xchg
xchg
jle
jl
pop
ds
and
adc
mov
mov
arpl
addr16
repz
mov
sbb
mov
dec
imul
fldl
pop
jb
jae
movl
fisubrl
fistpl
and
mov
pop
jecxz
or
out
mov
repnz
mov
imul
call
js
js
xchg
addr16
icebp
sub
lods
lds
cmpsl
mov
aad
cmc
sbb
add
dec
jae
shll
in
imul
sahf
dec
xchg
dec
cmp
insl
loopne
jl
push
mov
sub
jmp
cmpb
icebp
retw
jne
cmp
movsb
lock
mov
ljmp
cld
imull
jp
stos
popa
insl
out
mov
fdivrs
mov
fs
pop
mov
mov
pop
iret
mov
mov
push
fistpl
data16
out
in
repnz
mov
mov
pushf
movsb
roll
sti
in
scas
leave
out
in
mov
xchg
cmpsl
scas
mov
jmp
inc
pop
push
ljmp
dec
test
mov
les
lds
aam
and
imul
lahf
in
icebp
push
xlat
addr16
fimuls
mov
jo
jns
bound
ficompl
and
mov
in
jl
out
pop
or
push
enter
movb
fdivp
shl
lret
add
dec
fs
pop
inc
fs
mov
jp
xchg
scas
lcall
jbe
jns
scas
jno
fsts
icebp
das
mov
jae
cmp
scas
jmp
pop
lods
test
lds
fdivs
mov
mov
inc
xchg
lods
cwtl
clc
or
jl
movb
shll
or
mov
rorb
jl
leave
jge
xchg
stos
mov
mov
add
cmpsb
cli
push
xchg
or
jbe
fisubl
fists
mov
js
xchg
inc
mov
jp
jp
pop
shrb
mov
adc
cmc
imul
flds
inc
mov
xchg
jae
test
fs
jmp
and
lea
or
inc
jb
cmp
mov
xchg
mov
lret
xchg
and
push
clc
inc
loop
add
cmp
xchg
fwait
or
movl
lea
ds
pushf
es
arpl
sub
push
mov
pop
outsb
jl
shlb
in
mov
gs
in
aad
mov
or
in
adc
inc
jo
push
xorb
stos
call
xlat
adc
pusha
xlat
xorb
test
mov
and
and
mov
mov
pop
out
inc
subb
sub
push
sub
xchg
pshufw
enter
inc
ret
xlat
jae
jne
imul
jae
out
jl,pn
xor
push
xchg
ja
aas
and
ror
pop
pop
push
adc
pop
xor
mov
les
pop
push
sub
dec
imul
imul
enter
dec
pop
mov
and
push
jno
sub
stos
sub
dec
pop
xor
pop
stos
dec
pop
stos
fsubs
pop
pop
sbb
push
adc
mov
dec
pop
test
push
inc
mov
and
cmp
leave
pushf
xor
sub
mov
inc
xchg
sbb
add
lods
and
test
icebp
mov
les
nop
push
sysret
and
jp
jp,pn
stos
jae
jge
scas
fcompl
fcoms
dec
inc
mov
js
scas
popa
jno
inc
insl
bound
mov
cmpsb
outsb
les
xchg
out
insl
cmp
scas
jl
push
jo
xor
std
addr16
test
xchg
jp
clc
cmp
mov
shrb
outsl
add
data16
insb
cmp
fisubrs
fisubs
jg
mov
aas
stos
inc
cmpl
cmp
in
mov
imul
jne
jmp
cmp
mov
cltd
xchg
mov
pop
sub
ja
mov
cmc
xor
mov
dec
in
pop
cmpb
jecxz
sub
add
xor
stos
loope
add
dec
and
xchg
xor
sbb
adc
sbbb
ret
mov
mov
mov
mov
jb
add
sti
lock
pop
push
or
leave
iret
sub
jp
cmpsb
cmpl
icebp
aam
jp
sub
out
rorl
shll
mov
sbb
icebp
mov
roll
jmp
cld
lret
cld
das
pop
sub
and
jb
mov
jp
lahf
mov
xor
jmp
ret
cwtl
test
repnz
fcmove
xor
pop
ficoms
xor
lds
sarl
sbb
scas
dec
and
mov
mov
pop
add
sub
sar
ljmp
jnp
cmp
xchg
and
adcb
in
jns
xlat
icebp
inc
inc
fnstenv
jmp
mov
shlb
fsubrs
fwait
jne
mov
cmpsb
jg
sbb
insb
and
add
popa
popa
cmpsl
xchg
frstor
shrb
dec
fldt
je
gs
inc
loope
cmp
ret
push
add
pop
jp
pushf
pop
test
xchg
inc
mov
mov
push
mov
subl
pop
into
jmp
push
sub
mov
andb
ss
mov
insb
cmc
push
clc
add
rcl
mov
sub
stos
fbld
inc
xor
push
cld
mov
in
stos
imul
test
mov
movsl
outsb
cmp
stc
test
cli
cmc
mov
in
lea
and
jno
insb
cmp
addb
out
insb
fcomps
and
mov
xor
test
mov
mov
xchg
stos
ret
into
stos
scas
xor
in
push
test
out
icebp
outsb
cltd
xchg
clc
dec
stos
jne
mov
xchg
subb
jmp
int
icebp
sbb
jno
out
les
aam
js
mov
frstor
mov
jp
fstl
fsubrp
jl
rcrb
mov
inc
iret
ret
test
cmc
mov
in
in
xor
rcr
jl
in
dec
ror
clc
jmp
cmc
jl
shl
ljmp
or
das
lret
fistpl
fcomip
roll
adc
add
inc
mov
xor
mov
pop
push
int3
cld
xlat
cmp
mov
call
sbbl
fsts
movsl
sahf
loope
scas
xchg
outsb
gs
inc
ljmp
gs
sti
inc
adc
je
lds
out
mov
into
fisubl
dec
and
lret
sbbl
pop
sbb
pop
sbb
push
iret
lods
out
in
lea
test
ds
push
call
addr16
clc
jns
iret
out
les
data16
insb
out
in
xor
xchg
cli
fsubrl
xchg
xchg
xor
xor
stos
xchg
mov
aas
aad
lds
xorb
shrb
pop
sbb
insb
jae
test
iret
decl
sbb
mov
ja
xchg
insl
mov
sub
mov
and
jmp
push
mov
mov
inc
xchg
inc
gs
stos
mov
fldcw
xor
jle
js
ret
jae
test
xor
mov
xor
xchg
jl
inc
xchg
mov
jmp
xchg
bound
xchg
jl
inc
sbb
decb
andb
cmpsb
inc
mov
mov
mov
jp
mov
call
in
les
xchg
imul
add
mov
lahf
ret
fs
sub
mov
lret
js
stos
lcall
rcrl
fsubrl
mov
popa
mov
jecxz
clc
int
out
in
mulb
retw
jle
mov
dec
ret
fldt
sub
xor
popa
xchg
xlat
shrl
inc
cwtl
xor
aam
mov
dec
inc
movsb
cmp
mov
mov
inc
xchg
inc
xor
mov
jmp
xchg
cmp
mov
outsl
xchg
leave
lea
cmc
hlt
cmp
pop
cmpsb
pop
cmp
pop
sub
jge
scas
iret
mov
cli
mov
xor
jmp
rcl
sbb
popf
cli
cmp
jae
mov
jle
push
aam
imul
and
ljmp
push
outsb
rcll
outsl
frstor
or
es
imul
leave
jecxz
push
movsb
mov
lcall
xchg
push
filds
push
and
jbe
ficoml
cmpsl
cmovnp
inc
sbb
pop
inc
xchg
inc
mov
push
xchg
cwtl
pop
add
xlat
mov
and
nop
mov
ljmp
mov
stos
mov
mov
fisubrs
cs
scas
jp
xchg
aam
popa
add
les
mov
cwtl
popl
mov
push
fwait
leave
ret
pop
dec
add
cltd
stos
adc
ret
jecxz
shl
cli
pop
stos
lea
imul
notl
push
sbb
int3
cld
mov
pop
ret
leave
mov
mov
jecxz
jno,pt
icebp
in
out
jecxz
jg
inc
subb
cwtl
cmc
mov
enter
movsb
pop
ja
ret
xlat
mov
ficomps
and
clc
mov
in
mov
adcb
out
data16
push
arpl
xchg
leave
xchg
cli
pop
ljmp
inc
fcoml
jg
in
addb
jns
aad
jb
roll
inc
inc
hlt
pop
jo
stos
mov
je
cmp
and
lea
mov
lds
in
popw
jecxz
mov
enter
pop
cs
cwtl
mov
clc
pop
imul
fs
daa
jno
mov
ficoms
mov
out
inc
jno
outsb
bound
pop
scas
insl
jl
push
pop
mov
mov
push
cmp
les
jmp
in
push
mov
inc
mov
jp
xchg
fs
xchg
into
pop
inc
rcr
mov
add
sbb
jns
outsl
into
mov
stos
sahf
cmovg
or
invd
gs
adc
jecxz
in
in
scas
mov
add
mov
movsbl
pusha
fdivrs
fdivrs
cmp
icebp
or
fisttpl
aas
aas
xor
mov
push
adc
fidivs
push
jne
adc
int3
jl
mov
clc
inc
mov
stos
test
test
push
mov
clc
jmp
clc
mov
dec
xchg
pushf
clc
insl
or
rcrl
mov
cmp
cmp
or
or
and
fidivs
adc
mov
mov
movsb
push
sub
push
pop
sub
pop
or
iret
inc
xor
imul
ret
leave
xchg
js
xchg
mov
movsb
mov
aam
mov
mov
mov
cmpsl
fwait
gs
sti
pushl
dec
lret
mov
pop
inc
gs
and
fadd
movsl
mov
decb
shrl
mov
push
dec
jl
mov
gs
leave
cmp
xchg
mov
inc
add
mov
mov
push
mov
adc
outsl
jl
or
push
incb
ficomps
mov
adc
sbb
nop
push
pop
push
addr16
in
sub
fcoml
and
xchg
stos
nop
cltd
mov
mov
divl
fistps
int
movsl
shr
into
inc
addr16
sub
hlt
push
jbe
xor
sub
xchg
enter
cs
addr16
movsb
movsb
cli
and
lds
jo
in
adc
pop
repnz
lcall
shr
aas
cmpl
mov
pop
jp
inc
fcmove
mov
outsb
les
aam
mov
jae
fidivs
arpl
jp
das
lods
js
add
pop
aas
mov
fidivl
out
addb
pop
dec
out
lea
aas
sub
call
lret
lock
add
aam
mov
sahf
and
ret
jl
push
lahf
cmp
pop
inc
xchg
fdivs
stos
nop
xchg
cltd
lret
xor
inc
mov
lahf
xchg
cltd
mov
push
adc
jno
es
push
lock
fstps
cmp
lods
mov
int
mov
adc
jmp
inc
mov
and
cwtl
sub
pushf
add
dec
gs
test
not
jno
lea
pop
mov
jp
mov
sub
mov
adc
out
out
in
in
xchg
lods
rol
push
push
dec
lahf
in
inc
fwait
xchg
stos
icebp
cmpsl
rol
mov
sbb
test
fs
fcmovne
push
pop
mov
shll
cmp
stos
jp
repnz
push
inc
mov
mov
mov
fbld
lock
rorl
mov
mov
lock
loopne
pop
lahf
cwtl
iret
test
mov
mov
pop
mov
push
jo
inc
cli
xchg
jl
pop
js
mov
out
jp
mov
inc
pop
cwtl
jo
jl
test
ja
mov
sub
and
mov
and
out
decl
mov
sbb
loopne
shrl
jo
jnp
loopne
pop
mov
and
fsqrt
in
in
inc
push
sbb
test
hlt
stc
sbb
aad
call
add
mov
xlat
nop
push
dec
mov
cli
xor
jne
movsl
nop
data16
pop
adc
cmpsb
cwtl
xor
jp
push
sub
lahf
mov
sbb
add
mov
lcall
jp
fstpt
roll
mov
inc
sbbl
jge
mov
cmp
scas
pop
cmp
and
fs
push
ret
dec
popa
mov
stos
cmp
test
xor
shrl
mov
xchg
xchg
lahf
std
insb
ljmp
in
pop
inc
mov
mov
mov
cmc
scas
clc
fisubrl
cltd
sbb
add
out
andb
jl
jne
js
jbe
je
jb
jo
mov
mov
pop
mov
jl
icebp
cmc
mov
xchg
adc
mov
add
loope
lret
mov
imul
jp
push
leave
mov
pop
mov
cli
and
pushf
pop
sbb
iret
nop
mov
enter
adc
and
into
movsb
in
jno
cmpl
cltd
push
cmp
pop
mov
jno
push
mov
scas
lock
fsubs
mov
addr16
les
dec
icebp
int3
or
mov
pushf
stos
mov
xchg
ss
je
sti
daa
out
data16
lret
and
cmpl
andl
mov
or
pushf
xchg
adc
ljmp
fwait
das
push
aas
push
mov
into
cld
mov
sbbb
je
xchg
pop
dec
xchg
popf
mov
xchg
jp
add
icebp
add
in
mov
xchg
out
bound
sbb
addl
ljmp
orb
mov
mov
sbb
nop
mov
pushl
mov
stc
inc
inc
sbb
fld
mov
in
in
lret
and
pop
mov
push
mov
mov
pop
test
shr
mov
jb
push
dec
xchg
ja
jmp
enter
jno
pop
in
push
fcom
rcr
fwait
xor
jb
imul
out
pop
mov
jecxz
xchg
movups
mov
mov
dec
in
xchg
jecxz
bound
fsubs
icebp
jecxz
mov
in
dec
push
js
decb
add
jp
mov
pop
xchg
push
movsl
cmp
mov
ret
jb
imul
mov
shrl
scas
mov
movsb
imul
fwait
add
stos
pop
sti
mov
arpl
jl
mov
in
addr16
add
scas
lea
fyl2x
fs
mov
cwtl
inc
adc
pop
or
aaa
mov
jnp
imul
js
repz
in
test
jnp
lret
jecxz
cmp
push
xchg
pop
dec
ret
dec
test
mov
lods
je
in
cmpsb
ret
pop
dec
jle
xor
jne
ret
pusha
cmpsl
loope
scas
imul
in
jae
mov
sub
mov
mov
mov
mov
adcb
sub
out
lods
outsl
cmp
incl
mov
push
fmull
ret
insb
aad
fs
pop
dec
jl
inc
pop
mov
js
mov
sub
jl
cltd
mov
decb
jmp
jbe
shll
outsl
push
call
xchg
sbb
jo
sahf
cmp
sub
gs
psrlq
cmp
clc
mov
clc
cmp
push
lds
xor
out
inc
cmpl
jns
mov
mov
cmp
jne
mov
imul
repnz
lods
in
and
pop
imul
mov
cmc
in
jmp
push
daa
call
inc
icebp
cmp
sbb
push
inc
mov
push
inc
jge
outsb
lds
sub
xchg
push
enter
js
xchg
sarb
cmp
cmpb
xchg
jne
pop
xchg
leave
fnsave
adc
ret
push
add
test
push
leave
ret
pop
inc
cltd
lods
cmp
fisttps
in
mov
mov
push
cltd
mov
pop
xchg
sahf
and
ret
fcmovnbe
data16
cmpsl
mov
mov
lods
xchg
data16
in
test
cmpb
jmp
jl
dec
inc
lret
addr16
jecxz
mov
mov
aam
xor
xadd
aad
push
jecxz
pop
or
outsl
insb
sub
loope
rclb
dec
out
push
rorb
inc
mov
cltd
aam
ret
fidivrl
ja
push
into
les
dec
push
faddl
sub
xchg
lret
loope
gs
in
fs
in
insb
fnstenv
fnstcw
push
rcr
xchg
push
es
cld
gs
aad
popl
in
and
fistl
fnsave
mov
mov
adc
pop
lcall
add
jle
adc
movsb
adc
jno
cmp
in
loope
push
pop
cmp
mov
push
lahf
xchg
outsb
incb
filds
dec
and
les
xchg
js
mov
mov
add
jnp
jns
ja
jne
sbbl
test
gs
fbstp
xlat
adc
roll
shl
cld
mov
pop
lret
jecxz
leave
stos
ret
test
mov
aam
cld
lods
mov
mov
cmp
in
icebp
popf
and
fsts
and
fistps
pop
loopne
xor
je
jne
les
xor
ja
adc
dec
xchg
xor
enter
xor
lret
stc
xchg
dec
mov
xchg
mov
mov
pop
and
inc
gs
arpl
aam
xchg
test
adc
xor
xchg
xchg
mov
sbb
xchg
fcoml
push
fisubs
xchg
adc
cmpsl
jae
pop
xchg
rcrl
aad
sahf
lcall
pop
or
int3
lcall
les
push
mov
xchg
lcall
test
fistpl
xchg
adc
pushf
lahf
aam
mov
mov
andb
insl
inc
mov
test
pushf
test
fdivs
ja
xorb
pop
test
xor
test
and
ret
pop
imul
inc
fimull
xor
mov
dec
xchg
out
mov
cli
cmp
ficompl
xchg
popf
mov
jne
cmp
cmpsl
out
in
test
mov
mov
in
or
xchg
lcall
out
inc
ret
pop
sbb
ret
pop
mov
mov
stos
ficoms
push
and
subb
addb
or
jg
popf
sti
fucomp
and
mov
out
imul
xchg
jmp
inc
lods
lret
inc
pop
stos
cmp
movsl
jp
fldcw
pop
jecxz
mov
xor
lods
pop
in
lods
fs
or
jnp
imul
inc
jg
sbb
es
inc
lea
ljmp
sbb
mov
addr16
cmp
adc
ret
lds
gs
xor
fisubrs
mov
mov
jl
sahf
test
push
sbb
mov
fadd
mov
stos
jl
push
fisubrs
nop
cli
mov
movsl
jl
mov
das
icebp
stos
mov
jp
lret
xchg
fiadds
test
pop
dec
sbb
in
xchg
mov
jge
out
movsl
cld
mov
mov
xchg
add
scas
out
icebp
sbb
mov
enter
jnp
xor
adc
bound
lock
add
fs
pop
jne
stos
ret
jge
add
cmc
xor
xor
xchg
mov
or
cmpsb
clts
sub
and
pop
xor
inc
pusha
cmp
inc
out
cmpsl
data16
inc
scas
arpl
sbb
seta
xchg
mov
pop
add
stos
fisubl
stos
lds
mov
jne
jmp
xor
xlat
and
inc
stos
mov
int3
push
int
out
lock
fldenv
in
mov
mov
scas
sbb
hlt
lahf
xor
mov
xor
jb
mov
mov
test
lcall
xchg
xlat
pop
popl
rolb
mov
shrb
shlb
test
mov
mov
add
insl
xchg
push
leave
xor
lds
mov
inc
out
cmp
lret
cmp
lret
icebp
fwait
adcb
ret
xlat
sahf
fsubl
push
fsubrs
pop
outsl
cmpsl
mov
mov
jle
aas
fdivrl
aas
jecxz,pn
insl
in
stos
dec
fisttpl
mov
xchg
mov
pop
aad
mov
cmp
mov
mov
pusha
test
cli
xor
arpl
out
cmp
jo
xchg
fwait
mov
jmp
in
fst
fidivl
mov
cmp
rcrb
lock
insl
pop
test
loope
aam
popa
inc
lahf
fwait
xchg
inc
aad
ljmp
js
pop
shll
roll
mov
adc
imul
ja
outsl
mov
or
bound
call
pop
push
out
xchg
xchg
ds
mov
cli
in
xchg
popa
ja
andl
cli
decl
cmpsl
jns
xchg
pusha
in
loope
lea
push
xchg
pop
imul
loopne
lods
cwtl
sub
xchg
jl
cld
pop
neg
stos
popa
ret
adcl
mov
in
lods
push
push
mov
push
shrl
push
movsb
je
sub
in
xor
subb
jecxz
insb
iret
mov
scas
cwtl
jo
jne
add
xlat
jmp
mov
mov
nop
add
cld
or
lds
push
js
push
adc
sub
mov
ljmpw
mov
cld
sub
ficomps
jmp
xchg
ret
mov
stc
cmpsb
jl
gs
inc
push
or
inc
rclb
rcr
lcall
pop
inc
jb
int3
mov
cmp
mov
mov
adc
stc
in
in
sbbl
icebp
in
and
aam
cmpsl
jnp
jno
sub
cmc
aaa
cli
sbb
das
scas
or
ja
scas
arpl
sysexit
add
fcomip
movb
inc
popa
ljmp
fadds
addr16
out
gs
xor
outsl
push
cld
dec
pop
leave
fwait
mov
and
push
aam
test
mov
or
xchg
je
mov
dec
jge
xchg
mov
xor
stos
cmp
cltd
icebp
lahf
fldt
cwtl
cwtl
jle
push
mov
cwtl
fnstsw
fucomp
insl
fwait
loopne
enter
popfw
jo
xchg
jle
xchg
mov
push
test
ffree
je
inc
imul
lock
or
fwait
out
sarb
lahf
enter
and
insl
dec
leave
mov
push
mov
addr16
push
push
sub
pop
aam
add
in
lods
jne
sbb
sub
mov
rcrb
icebp
sub
dec
lahf
xchg
insl
mov
jge
shl
stos
lock
popa
in
jne
or
mov
dec
dec
aam
in
mov
jle
pop
mov
push
int
paddw
xchg
xor
add
mov
pop
imul
cmp
mov
popl
pusha
loopne
push
arpl
addl
dec
push
pop
lods
xchg
sub
mov
mov
pop
cmp
xor
cmpsl
in
lock
leave
and
push
out
test
push
idivl
mov
mov
fsubrl
mov
jns
leave
jnp
cmp
jge
insb
mov
das
mov
sbb
outsb
jl
nop
xor
pushl
loop
into
pop
shll
cmp
lods
xchg
sbb
out
rorb
cmpsl
jp
mov
mov
cmp
adc
prefetchw
jl
add
fisubl
add
sub
ja
sbb
jge
sahf
lods
lcall
andb
popf
popf
mov
iret
in
data16
test
pusha
fwait
roll
push
mov
cli
cmp
mov
lcall
les
and
sbb
jmp
call
subl
jp
fcmovnbe
xor
mov
cld
test
imul
mov
jle
jmp
push
push
lahf
mov
mov
mov
mov
icebp
xchg
fcoms
clc
cmp
adc
xchg
lret
je
jmp
shrb
inc
or
subb
insb
out
dec
incb
sub
mov
or
pop
loop
mov
cwtl
dec
rolb
int3
js
popa
inc
xchg
and
xchg
xor
jb
sbb
pop
add
mov
jno
nop
push
dec
mov
out
fsub
jl
or
outsl
fwait
icebp
cs
xlat
pop
jp
aam
mov
jno
outsb
xor
js
xchg
and
bound
mov
add
es
dec
out
jecxz
icebp
insl
xlat
or
arpl
fwait
sbb
rcr
stos
ficomps
popa
cmpsl
aam
and
and
xchg
addr16
add
test
mov
stc
jecxz
data16
cmp
mov
je
into
pop
push
cld
xchg
mov
jecxz
or
xchg
lea
lret
mov
cli
stos
mov
js
imul
mov
mov
xrelease
movsl
popf
jp
cmpsl
mov
xchg
jp
and
aad
jno
cmp
fsubl
pop
sbb
jo
das
lahf
lock
jmp
gs
nop
icebp
in
mov
jp
xchg
xlat
std
cmp
in
inc
adc
cmp
jno
stos
mov
pusha
push
push
nop
fs
ss
pop
test
lods
mov
mov
cmpsb
mov
mov
jmp
mov
and
xchg
fdivl
hlt
fnsave
add
push
inc
dec
mov
imul
fsubr
sub
mov
pushf
jne
cmp
into
mov
xor
into
cmpsl
xchg
movsw
xor
mov
sar
mov
ffreep
xlat
sub
shrl
pop
mov
cmp
mov
mov
je
add
xchg
test
movsl
jge
imul
xor
test
jnp
sub
insl
lds
test
cmp
pop
inc
jns
mov
pop
icebp
jne
arpl
mov
fmull
orl
sub
and
insb
push
insl
test
mov
or
lret
or
loope
pop
mov
cmp
lcall
leave
inc
lea
jb
mov
fs
daa
movsl
shlb
in
adc
js
test
xlat
lcall
adc
or
es
jns
data16
cmp
mov
cltd
add
mov
fwait
mov
push
ret
lds
lds
and
push
jno
inc
lea
pushf
pop
or
pop
push
dec
sub
mov
lret
jo
xlat
ret
mov
sbbl
hlt
fwait
mov
mov
lock
in
subl
insl
les
clc
stos
lret
imul
sub
shl
xchg
movsl
js
dec
shll
icebp
ret
ljmp
cmp
sub
mov
xchg
jno
xlat
push
ret
and
xchg
cmc
jno
jp
movsb
rcrl
scas
loope
lods
mov
imul
lods
xor
jne
mov
lock
jecxz
pop
dec
jne
jp
rcll
stc
testl
call
lods
outsb
inc
pushw
xchg
bound
mov
cmp
or
pop
push
sbb
shl
sahf
andl
aas
cmp
in
enter
lahf
adc
dec
mov
mov
mov
call
fcmovbe
scas
aam
cmpsl
cwtl
cmp
pop
add
sahf
push
lds
jne
mov
mov
jp
pop
bound
vpcmpgtw
jo
rcl
in
jb
xchg
mov
ficomps
stos
mov
add
mov
mov
push
mov
js
mov
inc
xor
mov
bnd
mov
leave
fs
fsubrl
jl
stos
inc
mov
mov
jbe
orl
or
rol
sahf
stos
pop
btr
or
dec
jl
jecxz
into
lret
aad
ds
xchg
sub
and
iret
or
outsl
jge
stc
inc
dec
push
cld
movsb
cmp
sbb
sbb
push
pop
fstpt
icebp
cmp
mov
mov
inc
mov
push
mov
int3
lret
insl
inc
cld
jns
pop
pop
lret
add
aam
mov
fsub
xchg
mov
hlt
xor
cmp
xlat
mov
into
sub
inc
xchg
cmp
mov
mov
icebp
jl
imul
mov
and
js
push
and
mov
faddp
ret
les
xchg
lret
lods
jmpw
test
addr16
pop
push
jecxz
cmp
aaa
int
in
movsl
adc
addr16
fldt
icebp
test
mov
xor
push
stos
fmuls
fistps
jno
in
iret
fidivs
ret
xchg
fdivrl
fldenv
outsb
aas
adc
movups
data16
into
push
sbb
xor
mov
sahf
jecxz
push
imul
sbb
icebp
movl
outsb
push
rol
mov
aas
xchg
popf
les
sub
xchg
xchg
sbb
leave
hlt
or
push
lea
clc
in
xchg
push
shrl
xchg
in
inc
subl
test
cmpsb
pop
mov
mov
sbb
js
ret
mov
adc
add
jno
stos
mov
jl
shll
pop
stos
push
stos
jb
cwtl
fists
movsb
repnz
and
lcall
fidivrl
and
stos
mov
fnstenv
jno
xor
adc
test
icebp
or
dec
sbb
mov
pop
mov
mov
inc
jns
jg
push
pop
ljmp
cs
mov
arpl
xchg
lret
xchg
fnstenv
mov
xorl
das
lods
jno
adc
ret
ds
and
mov
imul
push
into
mov
lret
push
xchg
mov
jnp
icebp
fcmovne
andl
lock
xlat
mov
icebp
adc
cmpsl
xchg
int3
les
mov
lods
xor
mov
std
xchg
lock
and
inc
fs
fbstp
leave
jl
sahf
stos
mov
adc
mov
sahf
lods
pop
fs
insb
icebp
cmp
ret
mov
inc
mov
call
enter
jne
mov
xor
inc
xchg
mov
clc
cmp
movsl
sub
ret
pop
or
test
jge
in
enter
jae
mov
inc
fistps
negl
test
dec
fiaddl
fadd
and
mov
cld
adcl
jb
add
loope
stos
or
popa
xchg
cmp
push
leave
xchg
test
sub
xchg
je
cld
mov
jp
mov
mov
scas
sarl
mov
cli
or
xor
lea
dec
bound
mov
lret
sub
adc
mov
lret
jg
lret
sbbl
pop
decl
jge
cltd
xchg
mov
fdivrl
mov
out
fidivs
mov
jne
jl
mov
push
cmpsb
push
push
scas
mov
adc
fucomip
cld
scas
lods
minps
cmpsl
fidivrs
mov
lea
mov
lds
out
mov
test
cmpsl
fwait
mov
js
mov
shrl
in
mov
test
js
mov
adc
ret
pop
mov
into
cld
jns
cmp
push
daa
leave
push
xchg
stos
fwait
xchg
mov
stc
test
mov
jge
and
push
cltd
les
idivb
ds
add
jno
mov
lcall
pop
cmp
mov
mov
je
cli
frstor
mov
lea
adcl
or
xchg
push
fcmovne
pop
aas
clc
shll
mov
in
lds
js
fs
lock
sarb
lea
mov
sub
xchg
inc
and
cmpsl
xchg
in
in
or
jg
mov
lock
fldl
test
call
lea
cwtl
add
das
lea
mov
and
iret
pop
jecxz
mov
sbb
mov
mov
push
xor
push
sbbb
in
sub
jne
popa
arpl
std
out
xchg
enter
fs
pop
arpl
popa
mov
xor
xchg
xchg
jl
xor
sbb
mov
mov
mov
add
mov
repz
push
mov
push
xlat
mov
xor
addr16
icebp
inc
shrl
jl
push
fsubrl
mov
data16
lcall
ret
xchg
fcompl
inc
xchg
ret
aad
jne
cmp
mov
xchg
mov
jne
cmp
jns
cmp
xchg
mov
movsb
pop
punpckhdq
fildll
pop
ret
mov
in
in
lret
mov
jb
push
dec
xor
mov
xchg
ja
mov
mov
scas
fwait
sub
mov
jg
mov
sub
xlat
fisubs
arpl
fwait
add
push
clc
mov
je
js
inc
sahf
scas
fdivrl
mov
rcr
inc
xor
bound
lret
jg
xchg
mov
adc
into
ret
cwtl
lock
mov
xor
mov
sub
xor
fstpl
pushf
lock
jno
popa
jo
cwtl
mov
out
push
cmc
xchg
xchg
roll
imul
sub
nop
ds
sbb
push
push
scas
imul
mov
enter
aam
jle
and
xor
leave
and
and
test
inc
xchg
mov
in
fcmovnbe
dec
out
dec
jle
mov
cmpsb
inc
and
into
push
in
cmp
jbe
aad
jno
cmpsl
lds
jno
ret
cmp
shlb
jns
jmp
divb
in
lock
fnstcw
add
cld
lret
cwtl
pop
outsl
ret
in
push
aam
loope
stos
shll
test
insl
jp
push
movsl
jge
push
mov
fs
outsl
push
insb
xchg
jl
pop
ljmp
pop
cld
icebp
mov
into
and
scas
mov
lahf
xlat
cld
aad
mov
xchg
outsb
sbb
jge
je
mov
aam
pusha
inc
mov
fstpt
out
fstpt
dec
xchg
iret
fisubrs
sub
fmull
lock
aaa
jl
cs
in
jo
mov
shll
mov
imul
mov
push
sub
xchg
or
xchg
ja
mov
push
enter
xchg
fs
xor
fidivs
addr16
iret
stos
xchg
fadd
mov
cmp
scas
jge
or
add
aam
test
aas
mov
mov
push
adc
mov
xchg
xchg
cld
pop
xchg
hlt
mov
rcr
enter
pop
mov
sti
xchg
in
jo
iret
frstor
icebp
aam
mov
leave
fs
mov
aas
and
add
and
cs
popf
leave
xchg
enter
stos
mov
fnstenv
mov
cmpsb
decb
sar
jge
repnz
jl
inc
mov
and
test
outsl
mov
sarl
in
je
mov
pop
cld
movsb
inc
cmp
jnp
cmp
dec
fwait
stos
and
cwtl
dec
notl
mov
aaa
sub
jo
dec
flds
mov
hlt
fdivrp
shll
mov
mov
leave
and
test
adc
mov
mov
das
sbb
pop
cltd
insb
and
out
aad
mov
mov
ret
and
shl
mov
xchg
xchg
fisttps
dec
xchg
cmp
fildll
popf
test
cli
scas
fdivrl
xchg
movsb
rclb
fwait
xlat
lret
clc
cld
push
stos
out
lret
mov
and
addr16
mov
add
call
test
mov
clc
mov
pushf
pop
pop
outsl
dec
jge
cltd
mov
gs
shlb
lret
jecxz
les
mov
test
mov
mov
lods
cmp
pop
in
loope
into
loope
mov
cmp
lods
les
aam
mov
jl
jl
out
adc
in
aaa
fwait
jp
and
jp
add
lret
in
and
jo
gs
imul
into
aas
pop
xchg
movsb
pop
xor
sub
mov
test
ret
xchg
lds
movsl
sbb
cmc
clc
jp
xchg
dec
jecxz
cmp
in
jae
lret
scas
inc
repnz
push
adc
mov
scas
pop
and
xchg
out
gs
lock
xchg
pop
mov
jb
sbb
cmp
lea
jl
scas
mov
adc
lods
test
mov
popa
jne
cmp
shrl
sarb
mov
lcall
mov
mov
in
cmp
xchg
jbe
cmp
iret
filds
in
adc
push
pop
decb
sub
and
lret
mov
addl
test
insb
jmp
inc
ljmp
fisttpl
push
outsb
cmp
imul
cmp
adc
jle
mov
pop
fs
jns
xor
movsl
adc
andb
rclb
lahf
sbb
nop
fs
dec
mov
cld
jle
pop
mov
iret
es
xchg
mov
xchg
lods
and
jp
and
subl
scas
ret
cwtl
aad
add
xchg
ror
test
add
lret
xchg
push
je
jo
mov
mov
movsl
outsl
cli
das
stos
jp
sub
arpl
mov
pop
jp
mov
xchg
jb
fsubrp
xchg
insl
mov
test
jmp
xor
cmp
insl
and
sbbb
jne
pop
push
mov
lahf
jle
lret
jbe
aad
outsb
js
lea
xchg
cltd
rcrl
mov
clc
inc
out
mov
sub
mov
ret
flds
mov
add
jp
in
stos
jge
push
les
push
jmp
pop
adc
mov
pop
lods
fcomps
sbb
push
inc
xor
lock
jge,pn
fidivrl
xorl
lea
and
data16
jno
cs
push
add
setl
out
fcmovne
fisubs
push
inc
adc
cld
movsl
decb
pushl
popa
adc
jnp
fwait
jns
repnz
ss
incb
dec
cmc
sub
and
cltd
mov
mov
mov
push
in
xchg
mov
or
je
xchg
cltd
in
mov
adc
fisubrl
imul
leave
dec
enter
ret
aad
incl
cmpsl
lea
jno
mov
stc
in
mov
ljmp
mov
xchg
aam
lock
xchg
aad
xor
adc
repnz
movsl
push
mov
shl
arpl
mov
pushf
xchg
lret
mov
je
je
aad
pop
sbb
shl
mov
call
pop
pop
sti
faddp
test
jp
and
jp
fwait
mov
repz
sub
js
lea
stos
in
xchg
bound
hlt
mov
dec
adc
push
xchg
xlat
mov
out
out
lods
loop
lods
stos
cmc
nop
cmp
adc
stos
js
inc
gs
xchg
aad
clc
xor
xchg
ds
jns
jno
leave
test
hlt
sahf
jp
mov
cmc
clc
jns
mov
cmp
outsb
int
cmpsb
stos
sub
ja
mov
lcall
lock
jne
stos
mov
push
pop
cmp
jnp
mov
dec
ret
test
jo
lods
mov
mov
fstps
ret
vpsubd
shll
or
add
fcoml
push
fstpt
daa
aam
ret
aam
cmc
sar
xchg
lret
xchg
data16
mov
inc
stos
sbb
rcr
loop
int
loopne
sbb
jl
in
fsub
mov
popa
mov
jg
mov
jae
arpl
mov
cmp
test
out
lods
or
mov
mov
xorl
lea
rclb
dec
mov
mov
clc
enter
out
in
pop
test
sarb
mov
outsb
sbbl
mov
xor
mov
jp
xchg
in
pop
add
test
lcall
mov
leave
out
push
ret
mov
cmp
shll
cmc
push
jp
lea
out
jae
xchg
enter
mov
fdivl
scas
icebp
fcomp
jnp
mov
mov
test
mov
js
sub
xchg
test
cmc
fidivrs
mov
les
nop
mov
gs
pop
mov
fcom
hlt
sbb
cwtl
pop
je
mov
xchg
call
mov
add
movsb
inc
xchg
scas
in
inc
shll
test
sbb
adc
in
jns
and
lock
mov
insl
mov
mov
negb
sub
rdtsc
bound
mov
scas
ret
or
cli
sbb
movsl
lret
fidivrs
insl
icebp
adc
mov
data16
lret
mov
es
and
mov
inc
scas
pop
jle
push
movsl
ret
pop
lods
add
inc
lret
in
mov
jp
add
xchg
shrl
in
fldln2
xor
enter
and
imul
cmp
mov
jmp
das
sbb
test
jnp
adc
mov
jmp
cmpl
sahf
leave
cmpsb
cmc
or
dec
mov
pop
jnp
cltd
push
stos
dec
pop
sbb
fcmovnbe
leave
mov
out
addr16
xchg
leave
popf
cmpsb
gs
dec
mov
andb
xor
in
xor
mov
pop
and
in
incl
mov
ret
movsl
js
arpl
mov
in
lock
fldenv
in
xchg
sbb
hlt
xlat
popa
push
shlb
enter
cmpsl
mov
mov
test
mov
ja
mov
in
adc
xor
jge
jns
mov
push
iret
mov
and
mov
mov
add
inc
and
mov
sbb
mov
push
int
pop
icebp
mov
int
lea
addr16
mov
in
mov
shlb
in
arpl
mov
ret
xor
rcrl
bound
cmpsb
decl
ror
bound
data16
jl
rcrl
dec
xchg
mov
mov
outsl
xorb
insb
fsubrs
push
mov
leave
jnp
jmp
mov
jbe
mov
sbb
sbb
into
out
lock
insl
jnp
mov
lcall
inc
mov
lret
add
loop
rol
mov
jne
lods
fldcw
mov
xchg
jns
lret
imul
cli
xor
lret
in
xchg
jecxz
sub
cld
dec
jl
aas
mov
popf
lret
cli
fidivs
aad
movsb
arpl
dec
lods
sub
push
cmpsl
ds
cld
jae
cmp
push
push
decl
iret
in
push
fwait
mov
gs
xor
inc
insb
stc
addr16
pop
push
addr16
ds
xchg
mov
mov
sbb
mov
push
cmp
mov
mov
mov
shll
fcmovne
enter
inc
jmp
data16
out
fsts
in
arpl
mov
dec
mov
and
filds
ret
fdivrl
imul
inc
xchg
jl
addb
shrl
xor
jp
lods
ret
lds
movsl
sub
mov
insb
add
xchg
mov
jae
pop
data16
push
in
dec
inc
fnstsw
lret
mov
jge
dec
pop
mov
dec
in
lahf
lret
jmp
mov
jno
jnp
jl
cmp
stos
int3
leave
aam
test
mov
cmp
icebp
shl
mov
fisubrs
inc
push
call
cmp
js
bnd
mov
dec
movsb
mov
adc
mov
mov
inc
jo
dec
test
xchg
xchg
loope
imul
fimuls
adcb
jne
dec
cmp
fdivrl
test
dec
enter
aam
or
enter
gs
inc
push
stos
sti
sbb
mov
inc
je
mov
jbe
push
or
test
aas
mov
jecxz
mov
in
cmpsl
jecxz
bswap
add
jne
aam
aam
jecxz
leave
sub
movsb
add
movb
add
push
add
lds
jecxz
mov
fldenv
mov
loope
mov
loopne
cs
mov
mov
pushf
stos
lcall
icebp
xchg
inc
fmull
mov
xchg
imul
jle
xchg
xor
mov
pop
push
xchg
data16
cld
jo
pop
loopne
push
fcoml
xor
adc
loope
mov
jno
sarl
pop
stos
mov
and
loopne
incb
movd
lret
lock
mov
mov
aad
cwtl
out
in
push
andl
inc
jle
loope
xchg
jnp
sti
imul
add
roll
mov
inc
mov
call
fbld
rcr
scas
mov
xlat
adc
jae
xchg
jne
mov
xchg
add
cmp
mov
stos
scas
mov
inc
mov
into
dec
inc
insb
inc
icebp
mov
les
jmp
mov
jp
lods
mov
push
xchg
lock
adc
ret
lods
mov
dec
add
mov
orb
out
ret
xchg
addr16
and
fsubs
xchg
scas
movsl
ret
insb
cmpsb
jnp
sbb
cltd
incb
jb
ret
jne
or
test
sub
jns
jno
cmpsl
test
mov
in
jnp
xchg
fsubl
fcmovbe
xlat
cmpsb
fidivs
cmpsl
xor
push
rcrb
push
stos
in
rolb
xor
fdivl
push
into
mov
add
arpl
jns
mov
push
aam
incl
xchg
data16
pop
pop
lea
mov
mov
aam
xchg
xor
rol
in
popf
ds
mov
cmp
int
jg
lcall
cli
lods
js
inc
mov
adc
stos
push
xor
cmp
stos
jle
in
imul
mov
in
fbld
push
xchg
jle
cmp
faddl
jge
call
dec
movsb
sbb
pop
test
adc
mov
das
mov
pop
ss
aad
xlat
insl
pop
add
jbe
aad
je
je
cmp
add
gs
test
ljmp
in
or
jb
jmp
cmpl
arpl
mov
cld
lret
add
mov
inc
pop
ret
lret
les
ror
adc
xchg
popa
push
mov
xor
and
or
aam
mov
movsl
mov
mov
in
fisubs
cmpsl
pop
sbb
jle
xchg
mov
mov
cli
push
test
cmp
cmpsl
xchg
in
pop
adc
add
lcall
and
mov
je
repz
lods
xchg
in
sbb
lret
jne
push
frstor
hlt
aas
cmp
insb
cmpsb
sarb
sbb
and
mov
cmp
jle
xchg
ds
jp
stos
xchg
dec
mov
imul
mov
push
push
mov
lods
or
icebp
movsl
fmul
das
mov
inc
fdivrl
in
push
jl
call
scas
dec
inc
mov
cmpsl
jbe
lret
enter
ret
lret
jae
and
xchg
cmp
or
push
les
scas
mov
mov
mov
ret
cs
aam
mov
pop
outsb
mov
loope
aam
xorb
sub
mov
inc
fstpl
aad
jle
pusha
arpl
in
cld
pop
imul
sar
ret
jle
jnp
gs
xchg
iret
test
stc
add
mov
jl
pop
dec
xchg
fistl
push
cltd
xchg
jo
in
sarb
mov
mov
fs
daa
inc
outsl
stc
aad
fld
mov
sti
imul
inc
test
out
sarl
lea
jp
xchg
in
ret
xlat
cwtl
pop
mov
xchg
imul
cmp
adc
out
stos
mov
xbegin
lea
and
mov
add
xchg
imul
jne
mov
jae
jb
xor
aad
cli
imul
jmp
mov
dec
lret
jg
aam
sub
scas
lea
hlt
out
gs
cmpsb
add
and
inc
xchg
sbb
nop
icebp
rcl
out
sar
push
inc
int3
xor
xchg
jmp
mov
mov
mov
mov
jo
jp
xchg
pushfw
icebp
jmp
mov
data16
lock
ret
fisubs
xor
lcall
add
divb
out
xchg
jns
int3
fwait
mov
es
xchg
lahf
les
mov
and
or
hlt
cmp
test
mov
sbb
push
mov
movsb
in
xchg
int
xor
fwait
mov
arpl
lret
mov
mov
mov
popf
sub
jnp
mov
dec
mov
cmp
pop
mov
mov
xchg
mov
mov
insl
push
lcall
mov
jl
xchg
cltd
pop
mov
pop
lea
ja
mov
ret
int
into
loope
or
arpl
mov
pop
jno
push
leave
dec
pop
popa
lods
out
das
jge
xchg
js
jg
jne
lea
inc
xchg
pop
test
nop
test
lcall
imul
cmp
pop
int
jmp
mov
mov
js
das
mov
popa
mov
icebp
lds
mov
lea
lds
imul
sarl
mov
xchg
cmpsl
cmpsb
push
xchg
xchg
test
lret
jg
sarb
arpl
sahf
xlat
outsb
xchg
cwtl
mov
insb
xchg
mov
sub
jg
sahf
in
jae
addr16
adc
scas
jb
lret
into
nop
inc
xor
jb
mov
xchg
fimuls
xchg
mov
fsubrl
andl
cpuid
aad
ret
aad
jp
lods
mov
mov
mov
lods
stos
lods
movsl
test
mov
fldcw
gs
add
bound
xchg
andb
fldlg2
mov
popf
leave
or
mov
outsb
lods
insb
or
mov
js
dec
xchg
cmp
lcall
test
leave
popf
js
lods
sarb
mov
push
xor
in
loopne
aas
fcmovne
inc
frstor
cmpsb
icebp
popa
cmpsb
js
cmp
js
vpmacssdqh
gs
jns
lds
out
leave
fmuls
push
out
imul
mov
rorl
popf
mov
mov
jge
iret
scas
rorb
mov
and
sbb
xorb
lods
jae
sub
test
jnp
xchg
mov
xchg
lcall
scas
adc
xchg
jmp
mov
data16
insb
mov
cmp
xor
fisubrl
popa
je
fs
sbb
xlat
stos
lret
fstps
xchg
fwait
lods
movsl
mov
aaa
jnp
push
in
fildll
mov
mov
mov
int3
ja
imul
push
lods
pop
movsl
push
test
mov
or
movsl
fimuls
jns
xchg
jno
xchg
scas
xchg
fld
aad
shrl
pop
jo
test
jno
fildll
popa
jb
popa
ror
aas
roll
inc
add
lcall
dec
dec
sbb
or
insb
rcl
pop
push
in
mov
xlat
jbe
incb
arpl
cmp
rcr
or
mov
push
in
out
xor
jmp
jb
cmpb
push
add
out
mov
cmpl
pop
out
ljmp
adc
mov
mov
addr16
jne
sbbb
mov
dec
pushf
ret
subb
pop
ret
cmpl
mov
rdpmc
cli
iret
inc
mov
sarl
outsl
addb
negl
jne
jl
dec
push
stc
inc
xchg
xor
pop
sub
mov
hlt
scas
cmc
addb
pop
cmpl
fcoms
dec
pop
xchg
push
je
jae
add
leave
push
faddl
jmp
imul
repz
repz
jl
insl
jae
fwait
push
insb
dec
jmp
imul
repnz
movsb
movsb
mov
adc
lea
enter
jb
dec
jnp
jmp
imul
insb
sub
pop
jae
pop
jecxz
bound
jle
push
sub
loop
loope
mov
fcoml
jmp
test
clc
std
outsb
fs
push
pop
add
inc
je
mov
ljmp
aad
inc
xor
sbb
ffreep
aas
orb
sbb
mov
lds
inc
xchg
jne
subb
std
pop
xchg
pop
xchg
add
pop
ljmp
add
btc
adc
sbb
xor
push
inc
xlat
jnp
add
push
dec
stc
add
les
je
mov
sti
popf
mov
sbb
in
ret
popf
jns
shrl
subl
out
subl
int
les
test
je
in
sbb
leave
out
movsb
cli
flds
mov
sbbl
inc
and
jnp
jb
cltd
sub
push
popa
adcl
or
addl
je
push
or
roll
aas
mov
push
loopne
fldt
xor
sbb
mov
adc
add
stos
cmpl
mov
lcall
cmp
subl
outsl
mov
cmpl
fbstp
and
xchg
sbb
ret
add
lods
pop
dec
addr16
push
popf
movsl
ja
cmpb
dec
mov
jbe
jnp
add
aad
sarb
pop
cmpsb
add
ja
ljmp
out
movsl
and
sahf
mov
pop
jle
sbb
out
out
push
orl
dec
rclb
mov
sub
push
popa
iret
fs
pusha
data16
js
sub
enter
push
cld
das
in
push
lret
push
jno
jne
pop
lock
in
out
cli
je
mov
mov
fnsave
adc
add
mov
push
and
add
out
jbe
xchg
ret
subl
cmc
mov
mov
mov
inc
pushf
out
addl
cmp
mov
sbb
mull
cmp
mov
mov
pushf
adc
cmp
cmpsl
push
cli
in
nop
mov
lret
stos
or
push
movsb
icebp
bound
mov
jne
or
cld
cltd
fldl
mov
outsb
xchg
idiv
cmp
stos
or
cmc
pop
adc
xchg
mov
push
xlat
subl
cltd
xchg
pop
pop
jl
dec
push
jae
aas
sahf
ret
sbbl
and
adc
loopne
mov
in
sbb
push
inc
add
lods
daa
in
mov
ljmp
addl
mov
insb
dec
mov
nop
in
add
movsb
bound
scas
pop
mov
jb
xor
stc
pop
dec
xor
out
mov
addb
insb
cmp
outsb
movl
jmp
mov
popf
sub
jl
add
add
xor
jmp
push
jnp
dec
jno
jno
fidivrs
cmp
lahf
jp
lahf
xchg
pop
cmpsl
jecxz
imul
cmp
push
cli
add
mov
jae
in
popa
jno
rol
jmp
xchg
sbb
sub
mov
jno
jne
mov
cli
loopne
icebp
cmpl
hlt
jns
stc
jne
addl
aam
in
or
insl
ja
add
jno
fisubrl
jge
popf
movsl
push
addl
or
add
movsb
or
jae
push
ja
ds
xorb
cmp
inc
int3
fs
or
jle
jl
adc
das
add
mov
das
mov
push
orl
mov
orl
pop
xor
jne
jg
arpl
and
and
gs
lea
popl
push
lods
pushl
addl
notb
add
mov
addb
ds
sti
sbb
push
lea
cmp
add
jmp
loope
mov
jb
loop
jno
add
jp
lock
jmp
pop
mov
dec
dec
stos
jne
jo
aas
sti
inc
pop
je
jne
stc
sub
inc
dec
xchg
int3
jmp
imul
idivl
jae
aas
subb
mov
sbb
dec
pop
inc
int
mov
or
sub
jne
paddb
mov
cmc
das
ret
and
mov
cmp
aam
orl
xchg
sub
xor
lds
ss
cmp
subl
or
fsts
xorl
rcl
and
shl
cwtl
cmc
gs
cld
addl
mov
dec
mov
iret
jo
fwait
insw
xchg
jge
xlat
mov
add
adc
addr16
subl
sar
es
pop
push
lods
ret
xor
in
dec
fisttpll
aaa
test
fildl
xor
das
adc
out
ja
shll
in
push
ret
cmc
call
or
mov
and
loope
sub
ret
inc
data16
cmc
dec
leave
mov
ljmp
repz
dec
call
add
add
push
mov
add
mov
inc
stos
pop
or
out
aam
orl
mov
stos
sbb
or
gs
movsl
mov
mov
inc
pop
inc
jae
cli
stos
adc
xor
xor
xorb
mov
js
ret
jnp
fwait
lret
or
dec
lret
pop
les
add
add
xor
in
dec
ret
mov
popa
mov
mov
hlt
jmp
xchg
dec
sti
xchg
aad
sub
mov
push
add
mov
nop
repz
sub
test
addr16
out
das
push
hlt
dec
in
arpl
jmp
cmp
into
test
mov
adc
jae
mov
inc
sub
xor
out
call
cmc
xor
mov
fnstenv
pop
repz
cwtl
stc
or
lods
or
push
add
adc
std
pop
mov
adcl
jle
mov
jnp
sbb
xorb
ret
xchg
add
adc
push
pop
and
fldcw
jp
mov
les
call
scas
dec
adc
lret
mov
fwait
into
in
lcall
scas
jmp
xor
cltd
jne
xor
ljmp
shrb
jle
mov
in
sbb
push
jp
add
dec
xor
lcall
sub
aaa
pop
mov
add
movsb
nop
lret
adc
cmp
shlb
push
in
icebp
sti
adc
pop
push
sbb
fwait
jle
push
dec
fmul
jge
leave
sbb
imul
jecxz
push
rorl
jb
mov
jle
cmp
stc
adc
imul
and
jbe
rcll
fiaddl
jecxz
push
push
jnp
mov
xchg
mov
jl
cmpl
data16
dec
call
mov
and
subb
and
inc
les
push
js
cld
pop
out
or
mov
out
int3
fldenv
addr16
sbb
imulb
jo
sub
cmp
xchg
hlt
pop
mov
bndldx
sbb
mov
call
sbb
sbbl
cld
ja
pop
pop
jno
aaa
loope
pusha
dec
shrl
test
jge
pop
cmpsl
dec
cld
out
data16
adc
stos
mov
faddl
adc
rolw
and
movsl
mov
pop
add
sub
popf
outsb
mov
mov
subl
cwtl
imul
xor
ljmp
in
mov
subl
nop
sub
outsb
jl
add
enter
fs
pop
jns
or
adc
mov
pop
xchg
add
icebp
and
add
jae
outsl
mov
rorl
push
sbb
imul
ror
jl
js
jns
out
aad
imulb
es
inc
or
sahf
insb
jns
std
imul
orb
je
pop
rolb
loop
jecxz
pop
pusha
outsb
adc
pop
mov
inc
adc
loope
xchg
xorl
fisttps
lods
cmpl
test
daa
push
xorb
into
out
inc
pop
xor
in
pop
mov
mov
out
mov
adc
in
outsb
add
cwtl
sbbb
addl
pop
jg
mov
sbb
stc
popa
jne
roll
mov
push
jo
call
cltd
push
cmp
xchg
adc
sarl
addl
jnp
mov
inc
xchg
pop
addl
pop
xchg
push
andl
sub
jl
imul
pop
popa
push
mov
dec
nop
mov
loope
dec
mov
andl
sbb
cmc
aad
pop
movsb
lock
mov
int
testb
mov
xor
rol
das
clc
xor
cld
andb
jmp
cli
in
addl
ds
push
mov
push
je
push
push
aam
addl
imul
mov
fxch
mov
push
cld
sbb
push
add
loop
roll
mov
pop
inc
fs
aaa
mov
addr16
test
int3
hlt
movsb
repz
pusha
xor
mov
pop
outsb
pusha
ret
scas
aaa
and
lock
in
fucom
jp
dec
insb
addl
leavew
sbb
jae
mov
in
adc
loope
mov
out
or
mov
jg
fs
xchg
arpl
sahf
mov
test
lahf
lock
fwait
inc
orl
movsb
notl
add
in
cmc
add
sbb
gs
jo
sbbl
out
mov
mov
dec
xor
add
xor
hlt
punpckhwd
fcompl
xchg
xchg
pop
subb
bound
cmpsl
push
push
mov
pusha
dec
div
fs
into
push
or
add
test
fadds
inc
pop
mov
loopne
add
fiadds
subl
andb
std
bswap
fistpl
and
dec
lret
and
push
imul
jo
inc
test
push
jb
push
jno
in
fwait
imul
pop
shlb
orl
iret
arpl
xchg
loope
sbb
xor
jle
mov
sbb
or
aaa
pop
dec
xor
pop
jae
test
test
inc
aam
subl
jae
adcl
out
pushl
leave
mov
imul
push
fcomp
fisubrs
cld
hlt
and
mov
out
sbb
dec
fucomip
mov
loopne
jnp
outsl
rorl
leave
dec
or
pop
outsb
imul
jmp
addl
jns
cld
xchg
sub
adc
mov
add
pop
push
xchg
aaa
das
mov
push
ret
repz
push
arpl
and
rcrl
and
test
or
adc
xor
xchg
cmp
xor
loope
enter
imul
mov
aas
or
arpl
push
sub
ret
mov
outsl
xchg
cmpl
and
adc
filds
mov
and
movsb
repz
sub
inc
iret
repnz
xchg
ja
inc
cmpsl
pusha
add
out
mov
aas
int
add
in
bnd
std
add
mov
loope
psrlq
aaa
add
dec
mov
cmc
out
cmpl
or
ljmp
pop
ret
cld
adcl
shlb
push
push
insl
lret
popf
inc
fcoml
addl
shlb
pop
cmp
mov
jle
sbbl
lock
xchg
sbbl
addl
xor
js
out
sub
xor
mov
mov
dec
addb
jge
jle
jg
jl
decb
push
hlt
mov
jp
jnp
adc
pushf
and
mov
sub
jge
jmp
imul
imul
aaa
loop
dec
es
int3
lds
ret
jae
and
andb
enter
cwtl
jb
std
jae
xchg
jmp
dec
xor
cmp
popf
mov
into
xchg
sub
pop
pop
xchg
add
sub
adcl
jp
add
mov
cmp
cltd
pop
sbb
xor
mov
orl
aam
sbb
lahf
or
movsl
dec
frstor
lcall
mull
aad
add
leave
mov
in
mov
adc
xchg
pop
sbb
sub
movsl
int
ret
sbb
mov
cmpl
pop
mov
sbb
mov
fisttpl
pop
inc
mov
push
pop
adc
sbb
and
insl
arpl
cli
out
lock
rcrl
inc
mov
push
inc
sub
adc
pop
mov
in
push
out
jge
les
mov
pop
cmp
out
push
arpl
and
test
adc
int
test
arpl
xor
rolb
cwtl
xor
sbbb
xor
pusha
mov
ljmp
mov
mov
movsb
ret
ja
and
add
add
cld
mov
es
incb
movsl
push
cltd
cmpsl
lcall
fiadds
and
jo
inc
fcmovnbe
cmc
loopne
inc
dec
aaa
mov
pusha
cmpsl
add
mov
addr16
mov
sbbl
add
push
sub
mul
test
hlt
xor
clc
mov
inc
js
aam
andl
sbb
pushf
scas
inc
sbbl
pusha
dec
addr16
outsl
add
mov
fwait
jb
sbb
adc
in
dec
xorl
mov
rcl
lahf
mov
notb
jne
shrl
iret
pusha
jecxz
push
mov
add
stos
outsl
test
fwait
and
sub
pushf
jnp
mov
adcl
mov
xor
loopne
or
and
add
cmp
daa
xchg
jecxz
hlt
in
mov
mov
mov
sbb
add
aas
pop
insb
jae
cmpsb
push
mov
lcall
daa
stc
fcmovb
aas
flds
and
xchg
add
xchg
es
insl
adc
loopne
in
sbb
cmpsl
dec
ror
jne
fs
pop
add
and
jae
stc
test
xor
pushf
lea
call
pushf
jmp
push
pushf
movl
jmp
jmp
movw
movl
pushf
jmp
call
jmp
pusha
movl
pusha
push
pushf
pushl
movl
mov
mov
lea
jmp
dec
push
push
inc
push
dec
xor
inc
dec
dec
add
aad
mov
addr16
int3
hlt
je
mov
shlb
sbb
dec
cmp
mov
xchg
jae
inc
and
les
mov
call
and
stos
outsl
inc
data16
cs
jl
pop
jmp
bound
sub
pushf
lea
jne
stc
cmp
call
sarb
xor
xor
fstpl
inc
lahf
adc
mov
inc
test
push
mov
add
in
mov
fdivrs
xor
push
das
scas
into
shr
xor
dec
mov
rcrl
sub
dec
push
popf
mov
or
add
lods
dec
into
cwtl
cli
mov
push
stos
lcall
push
push
jge
in
cmc
push
push
das
pop
and
decb
int3
rcl
mov
pushf
lret
pop
aas
lods
dec
into
arpl
sti
cmp
stos
lcall
pop
roll
pop
cli
insl
pop
adc
pop
cmp
scas
xchg
aad
push
xlat
pushf
inc
test
insb
scas
xor
call
aas
or
push
pop
pop
roll
mov
cli
insl
jne
fdivl
hlt
or
jle
dec
pop
pushf
inc
cmpsb
sub
jns
lds
ds
push
adc
pushf
loopne
mov
xor
inc
mov
pop
ret
dec
sub
lret
stos
inc
aas
add
andb
sbb
in
lret
add
movsb
shll
mov
jae
leave
mov
fdivr
cmp
mov
mov
ror
and
pushf
push
movw
pushl
lea
jmp
lea
call
pushf
lea
jae
test
cmp
stc
xor
jmp
inc
push
leave
mov
addr16
jl
dec
xor
adc
testl
adc
or
mov
sbb
enter
bound
sub
sub
or
mov
jae
repnz
addb
clc
pop
cmpsb
lret
rcl
xchg
fdivr
and
mov
push
fs
outsb
mov
addr16
sub
repnz
pop
inc
daa
dec
mov
int3
add
mov
adc
stos
sbb
pop
fxch
and
mull
mov
aam
mov
dec
stos
out
cmpsb
rcrb
jp
das
pop
scas
in
sbb
add
dec
cmp
push
xchg
inc
jo
or
in
mov
mov
movl
push
mov
mov
cs
cmc
lock
cmp
jl
sub
das
ja
mov
fisttpl
and
lahf
inc
sti
ret
cwtl
push
dec
inc
pop
dec
lds
sarl
inc
cmp
mov
jns
imul
inc
jo
push
adc
mov
cld
dec
mov
rcrl
fstps
ja
divl
jmp
lock
and
cmp
daa
mov
dec
push
xor
outsb
test
lcall
cmp
ret
aam
pusha
mov
adc
mov
nop
test
pop
in
std
mov
xor
xchg
mov
xor
out
sub
shll
mov
pushf
push
fbstp
in
rcrb
ja
hlt
test
sub
or
mov
icebp
sahf
sub
jl
push
sti
das
popa
clc
shll
and
sub
aas
orl
dec
sub
addl
repz
cmpsb
imul
outsb
in
cwtl
ds
mov
movl
popl
mov
pushf
pushl
ret
lea
jne
push
push
movb
pushfw
popw
bt
stc
mov
bt
not
clc
jmp
push
pushf
jmp
call
loop
sub
mov
or
ret
xchg
mov
adc
js
and
loopne
sub
inc
or
je
out
xchg
in
jmp
push
jge
stc
loope
sbb
ljmp
pushf
mov
jnp
cmp
jae
shrb
mov
mov
pop
mov
insl
js
cmp
push
ljmp
imul
ljmp
dec
adc
ret
mov
aad
sbb
lds
add
add
mov
sub
pusha
mov
pop
xchg
pop
mov
mov
pop
movsbw
lea
jne
pop
pushf
call
movl
pusha
pushl
movl
push
pusha
lea
jmp
inc
mov
sub
dec
paddq
aaa
jo,pt
dec
pop
or
int3
jmp
int3
push
jge
sti
arpl
inc
pop
mov
in
mov
jge
add
fxch
jp
cmpsb
test
and
test
mov
push
bound
push
mov
xor
stc
jge
loope
enter
jge
sub
lea
ficompl
in
rclb
mov
xchg
xchg
lret
movsl
xchg
mov
sub
cwtl
mov
das
mov
push
ja
and
call
bound
repnz
call
mov
clc
dec
xchg
cwtl
mov
mov
jo
xchg
aam
jp
mov
mov
jp
mov
cs
jmp
aas
add
xorl
cli
adc
fnstenv
jg
inc
or
adc
or
jno
cld
pushf
mov
jmp
inc
mov
les
add
ja
adc
add
ds
jno
imul
and
pop
fcom
jle
movsl
mov
loope,pt
lcall
aas
aad
insl
bts
shrl
aad
jge
add
and
cmp
sub
sbb
aaa
fadds
xor
jmp
es
mov
mov
mov
ja
xchg
std
xchg
repnz
movsb
pop
xchg
cmp
mov
push
mov
imul
jno
inc
mov
icebp
nop
sub
mov
jge
mov
mov
push
sbb
int3
test
cmp
push
inc
pop
rcrb
lret
ljmp
nop
das
iret
addr16
arpl
call
lcall
xchg
xorl
dec
rcl
xchg
mov
ds
fistpll
xor
popf
jmp
jge
mov
rolb
sti
xchg
imul
jne
mov
mov
insb
mov
sub
andl
test
enter
push
je
outsb
addr16
fiaddl
or
popa
lahf
mov
ret
fsubs
repz
or
push
rorl
rcrl
pushf
jle
cmpl
iret
popa
lcall
into
imul
ljmp
addr16
aad
sti
repz
mov
inc
lret
push
jns
rolb
insl
jno
sahf
call
fists
fbstp
adc
mov
sti
cmp
and
jg
jnp
cmp
fs
adc
jo
inc
mov
push
mov
test
test
jae
imul
sbb
pop
jl
cmp
and
lds
arpl
insb
data16
sbbl
push
mov
jb
add
sar
inc
loop
idivb
cli
pop
jae
jg
ficompl
andl
xchg
mov
jae
fbld
int
jnp
xchg
out
add
and
add
dec
push
jns
jmp
imul
clc
mov
out
mov
loope
fldcw
xlat
cld
repnz
push
leave
and
int
adc
into
adc
bound
fiadds
mov
iret
insl
bound
pop
add
lret
aas
movsl
loop
mov
lret
stc
sbbb
jb
int
inc
scas
fnstsw
jae
jmp
mov
ret
xlat
in
inc
lods
sti
mov
sti
mov
shl
call
mov
stos
fbld
cli
popf
jo
jnp
aaa
scas
out
cmp
test
cmpsb
sti
mov
fnstenv
jecxz
call
jp
jno
fnsave
mov
popf
sti
lahf
cli
fwait
ljmp
xchg
popa
xchg
test
arpl
jae
js
das
lahf
ret
sbb
jnp
repz
stos
sti
ljmp
fistl
sarl
mov
mov
cmp
call
imul
jmp
push
iret
ljmp
ret
jo
enter
repz
stc
jge
imul
cltd
pop
andl
mov
jmp
arpl
add
fwait
in
adcl
popa
repnz
nop
into
inc
jge
cltd
pop
lret
mov
fxch
adc
dec
scas
xchg
jne
fildl
fwait
in
ret
jo
add
jae
mov
sahf
pushl
jno
shlb
mov
imul
cmp
jge
lret
mov
push
insb
frstor
push
inc
sub
enter
roll
add
jle
xorl
outsl
int
aas
jnp
js
iret
idivb
mov
push
push
add
gs
mov
cmpsl
ret
sub
mov
hlt
fdivs
fistpll
insb
xchg
call
out
jge
jg
aad
insl
adc
data16
movsl
mov
jg
inc
iret
aaa
test
ljmp
xchg
neg
insb
pop
out
aas
push
jae
gs
addr16
js
pop
not
cmp
jb
popa
mov
mov
jae
stc
rclb
leave
arpl
sbbw
sti
pop
lret
jge
call
out
insl
addr16
jmp
dec
scas
leave
popf
jecxz
call
aas
leave
jp
jno
popa
imul
sti
scas
lahf
lcall
jmp
aad
cmp
sti
jg
mov
mov
jnp
mov
lcall
in
mov
mov
jno
fists
jmp
aad
mov
xchg
jb
in
jae
cmp
ljmp
jecxz
xchg
push
sti
jl
mov
sti
popa
jns
aas
test
aaa
pushl
jae
ljmp
fnstcw
pop
mov
loopne
ror
out
mov
popa
mov
inc
gs
jno
bound
xorl
xchg
push
adc
cmpl
mov
jg
fs
popa
or
test
gs
lahf
ljmp
stos
jmp
jmp
ljmp
xchg
adc
jle
js
jae
jae
mov
jno
mov
shll
mov
imull
mov
imul
popf
jmp
repz
xor
popf
jb
pop
mov
mov
repz
mov
repz
loop
dec
aad
jmp
mov
pop
popa
lahf
stos
mov
inc
outsl
mov
incb
imul
imul
gs
arpl
mov
mov
scas
jmp
sahf
repz
xlat
aad
inc
xchg
jp
mov
subl
xchg
out
lea
outsl
pusha
stos
repz
ja
outsl
test
xchg
mov
out
cmpsl
jne
inc
mov
pop
pop
jl
repnz
and
mov
out
pop
add
cmp
jo
or
aaa
outsl
mov
ret
lahf
outsl
mov
xchg
andb
jo
imul
popf
mov
ja
aas
jns
fwait
mov
outsl
int3
sbb
stc
cmp
outsl
mov
pusha
xchg
repz
add
repnz
cmp
lahf
sahf
repz
xlat
jno
inc
jp
mov
subl
jne
mov
sbb
jmp
jmp
jg
pop
xchg
jo
pushf
lret
loop
mov
jmp
repz
call
or
add
xor
in
cmp
dec
popa
inc
cmp
xor
jno
fists
cmp
jnp
insl
jb
popa
ljmp
mov
sti
shrl
addr16
cmp
vphadddq
pop
xchg
stos
add
xorl
inc
enter
les
out
fcmovnb
mov
push
jb
test
lds
in
shrl
add
popf
inc
mov
or
pusha
add
cmc
inc
ret
xchg
popa
in
int
and
insl
lahf
sbb
mov
sub
movsl
jmp
rcrl
jge
hlt
jns
shrl
xchg
pop
aad
push
out
rcl
mov
rcll
xor
enter
mov
inc
mov
sbb
xchg
out
cmpsl
push
mov
mov
inc
mov
jo
hlt
popf
or
ret
shl
ljmp
fs
dec
and
out
popl
jne
push
xchg
jle
jae
stos
xchg
jns
xchg
push
gs
in
shll
jg
loope
mov
stos
mov
mov
repz
loope
out
outsl
mov
dec
stos
xor
repz
bound
cltd
jle
test
repz
mov
lret
xor
mov
imul
mov
lods
daa
mov
in
js
push
jno
jb
cmpsb
bound
xorl
mov
jne
and
addb
roll
andl
arpl
jns
jmp
cmp
leave
icebp
jns
addr16
add
outsb
jge
das
ja
jle
jmp
pop
iret
imul
add
pop
dec
rorl
int
jmp
loopne
lret
jae
cmpsb
xchg
ret
mov
fbld
pop
xchg
addr16
addr16
pop
and
pop
and
and
fsubs
pop
and
and
and
jl
push
jl
push
xchg
jg
push
lret
lret
lret
dec
lret
into
pop
dec
and
dec
xchg
fidivs
jne
jp
jne
js
xchg
dec
and
rolb
lea
xchg
push
ljmp
shl
cmpsl
dec
xchg
in
ror
loop
push
jge
neg
mov
dec
push
lret
int
push
sub
pop
mov
pusha
and
jno
xchg
imul
xchg
mov
mov
iret
inc
fcmovb
mov
push
jp
test
mov
iret
mov
rcrl
decl
push
leave
push
ret
push
addr16
jle
lret
dec
push
nop
dec
and
inc
stc
sar
push
leave
aaa
push
stos
cmpsb
jg
push
dec
test
fld
pop
mov
shll
fldl
lea
xor
iret
inc
lret
dec
fisttpl
pop
or
sarl
jno
rcr
imul
cmp
mov
popf
sbbb
int3
push
pop
mov
push
mov
sarl
popa
and
fists
scas
sti
mov
popf
cmp
mov
jne
xchg
sbb
enter
mov
pop
shlb
scas
jecxz
jg
imul
insl
imul
cli
pop
iret
shll
ret
cmp
fs
std
push
out
dec
mov
arpl
pop
lds
xchg
int3
fwait
loop
imul
jge
mov
pop
rcr
inc
popf
mov
loopne
mov
pop
mov
mov
jae
popa
outsl
loope
aad
push
push
dec
dec
cmp
loop
cmc
dec
jge
jae
pop
push
jns
mov
jl
pop
push
imul
loope
shlb
push
out
aad
int
enter
test
push
stc
dec
mov
push
jbe
dec
add
pop
into
repnz
push
push
inc
subl
jg
leave
fucom
shl
push
pop
stc
xorb
dec
mov
push
int3
loope
cmp
push
fldenv
fsubs
push
push
mov
lods
filds
xor
push
test
xor
jno
ljmp
fucomip
imul
pop
add
sti
sub
sbb
mov
aad
fdivs
movsl
mov
push
jmp
arpl
fwait
stos
push
movsl
dec
fwait
outsl
jge
in
fisubrs
xchg
lcall
xchg
mov
xorb
jnp
xor
pop
adc
sub
mov
int
dec
jecxz
xorb
pop
fsubl
popw
sbb
shll
mov
mov
xor
xchg
roll
xlat
xor
pop
xchg
js
data16
lock
dec
jle
jae
hlt
dec
xor
and
fmuls
xchg
dec
int
in
rorl
jbe
incb
pop
fstpl
test
adcb
pushl
test
out
sahf
mov
sub
inc
xlat
stc
mov
orl
fidivs
dec
and
jne
lea
popa
mov
mov
add
out
add
aam
push
add
xchg
xlat
data16
repz
pushl
cmp
fstl
push
outsl
int
ret
addr16
xlat
fbstp
cmp
adc
leave
std
pop
int3
imul
fisttpl
fstpt
insl
jno
push
int3
jns
lahf
push
ljmp
popa
push
jmp
ja
inc
call
lret
jmp
jg
jne
mov
mov
mov
iret
jge
mov
cmp
jg
jg
ljmp
call
mov
xchg
jmp
arpl
fistpll
fnsave
popa
aas
aad
shll
cmp
jb
popa
leave
xchg
add
xor
pop
gs
out
fs
gs
outsl
jle
jge
lods
push
fs
xchg
out
jp
subl
js
jnp
loopne
cmp
mov
fildl
bnd
dec
mov
jp
jmp
int
fldz
push
mov
fstl
jl
bound
aaa
sar
scas
fdivrs
mov
jge
rcrl
addr16
dec
iret
jg
cmpw
in
mov
add
jge
shll
outsl
pop
add
enter
push
jmp
mov
or
mov
mov
xchg
adcb
and
jns
std
push
xor
iret
fcomp
xlat
leave
les
xchg
lods
or
add
sbb
cmp
and
sbb
xlat
insl
rorb
push
flds
mov
aad
xchg
pop
add
js
adcb
arpl
mov
jnp
mov
stos
or
int
xchg
fistps
sub
push
jb,pn
pop
ret
dec
mov
int
push
bound
fdiv
jp
aas
lcall
leave
add
jno
in
adc
insl
mov
data16
push
push
lcall
mov
lea
insb
lret
mov
iret
mov
jmp
int3
movsl
push
dec
dec
push
dec
push
jge
lret
dec
mov
leave
lock
jp
loope
jno
push
rol
fs
fptan
mov
dec
mov
test
dec
cmp
add
mov
cld
sarb
fpatan
mov
mov
xor
stos
std
idivl
rcrb
push
jo
jle
sbbl
in
incb
add
lret
add
push
repz
popa
mov
mov
mov
pop
inc
cmc
inc
push
xor
sarl
fisubrs
jmp
fildll
jns
roll
daa
push
lock
aad
fdivl
shlb
jne
cmp
aas
sbb
sub
push
mov
ret
pop
aam
push
xchg
iret
and
or
inc
pop
dec
push
data16
mov
pop
cmp
cmpb
outsl
dec
sub
jl
or
adc
insl
inc
mov
xchg
mov
jge
rcrl
pop
inc
imul
in
rcr
xchg
dec
scas
jp
jns
sbb
xor
jb
outsl
pop
pop
mov
jge
mov
in
xchg
ficompl
jp
sbb
mov
jg
adc
lods
pop
mov
das
xchg
arpl
jge
outsl
into
mov
mov
jge
inc
scas
fcmovnu
jb
test
pushf
inc
cmpsb
cmc
insl
popa
outsl
out
adcl
pop
inc
dec
mov
imul
mov
rorl
push
insl
mov
cwtl
aad
aad
aad
aaa
mov
insb
das
test
xchg
xlat
jb
sub
js
push
lret
sub
popa
jae
inc
aaa
jg
jne
mov
jle
outsb
fld
das
mov
mov
push
popa
jle
repz
movsl
mov
out
xchg
jae
mov
add
jl
int3
mov
fiaddl
outsb
out
bound
xchg
dec
shl
sbb
xchg
adc
int
aad
and
faddl
add
pop
aam
scas
or
xchg
sub
cmp
jns
jb
popa
rcl
sahf
shrl
rol
cmp
jo
pop
imul
std
xor
cmp
push
rorl
dec
gs
js
aam
push
pop
jp
pop
ljmp
mov
jp
dec
ds
xchg
inc
xchg
je
dec
xor
lret
jne
sti
in
out
dec
lea
jb
dec
in
pop
lcall
pop
xchg
push
dec
ret
leave
cli
mov
mov
jp
iret
mov
xor
xchg
les
fwait
jne
fsub
mov
sahf
rcrb
fisubrs
push
add
mov
mov
jb
iret
pop
fwait
jp
sahf
insb
fidivrl
shll
movsb
mov
jecxz
mov
out
popa
push
mov
xlat
icebp
es
icebp
xchg
pop
popa
mov
out
lahf
jmp
sub
shll
ja
shrb
push
fs
fld
push
lds
xchg
jo
pop
sti
movsb
movsl
mov
mov
mov
mov
aas
imul
ret
and
lcall
xchg
jo
mov
andb
fcmovbe
aad
add
pop
stos
lods
leave
call
out
loop
dec
insb
rcrl
mov
sarl
imul
pop
sbbl
mov
push
fistl
test
lret
xchg
leave
cmp
insl
fisubl
outsl
jl
daa
lret
xor
hlt
stos
popf
mov
mov
popa
lcall
add
flds
mov
lods
ss
je
fwait
int3
mov
xchg
jae
and
xor
dec
loopne
shll
push
adc
ret
outsl
jo
jle
pop
adc
pusha
inc
and
mov
jo
pop
std
pop
enter
xlat
insb
aam
fs
mov
fldcw
xchg
xor
and
repnz
jmp
jg
mov
push
dec
outsl
in
add
mov
insb
inc
pop
outsb
inc
sub
out
jg
aaa
cmp
add
add
test
mov
push
aam
int
jg
mov
test
jg
hlt
jne
fucomp
sti
push
jae
cmp
pushf
cmpb
iret
add
pop
dec
imul
fisubrs
sub
repz
loopne
sub
addb
outsl
popf
dec
fwait
outsb
fistpll
add
loop
adc
xchg
xchg
xchg
fistl
sbb
cltd
adc
jg
ja
ja
dec
mov
addr16
adc
call
xchg
jne
dec
ja
cmp
xorb
addr16
imul
arpl
mov
repz
inc
jg
and
xlat
adc
jbe
gs
jg
xchg
xchg
xor
ds
push
pop
fcmovne
jne
aad
sbb
pop
pop
out
addr16
pop
out
arpl
and
popa
sub
sbb
ja
iret
jg
jg
in
lea
jnp
jne
jne
dec
iret
mov
inc
push
xchg
adc
pop
xchg
popf
lcall
pop
aas
jg
mov
pushf
jg
imul
mov
fsts
addl
lret
push
mov
xchg
pop
mov
or
lcall
stos
lcall
jecxz
fbstp
mov
pop
push
imul
fwait
push
jae
stc
push
fwait
ja
and
mov
adc
push
xchg
mov
xchg
or
lahf
sahf
push
fwait
movsl
mov
loope
pop
inc
xchg
lds
xchg
outsb
or
movsl
pop
jae
mov
cmp
xchg
mov
imul
pop
mov
adc
xchg
and
mov
std
bound
and
cmp
lcall
jnp
cltd
jg
push
jg
jne
adcb
push
mov
outsb
lea
sub
jg
insl
push
inc
js
adc
mov
cmp
mov
cmp
lcall
jae
sub
jae
mov
outsb
adc
jne
lret
ja
rcl
frstor
xchg
cwtl
lods
mov
fldt
mov
mov
negl
and
pushf
push
mov
and
cltd
xchg
into
xchg
push
mov
lea
cmpsl
ljmp
mov
jg
notl
fwait
into
cmp
ljmp
lcall
outsb
mov
fsubs
shll
push
xchg
dec
cltd
into
mov
fildll
outsl
dec
rcrb
xchg
lods
xchg
shll
scas
outsl
pushf
jg
insl
xchg
aaa
xchg
sahf
sbb
xchg
scas
into
jae
fldcw
xchg
int3
mov
jnp
xchg
jg
iret
lcall
jge
cwtl
mov
mov
imul
fisubs
ret
mov
push
out
pushf
pop
lret
cwtl
aaa
dec
lcall
leave
ja
mov
sti
push
xchg
or
popl
adc
adc
xchg
ja
mov
jp
push
jne
inc
pusha
xchg
in
testl
idivl
jp
sti
ds
ret
jl
sti
mov
jne
mov
inc
pusha
in
mov
andl
pusha
ja
jae
push
mov
and
ret
sub
push
push
ret
lods
out
scas
fistl
adcl
cmp
jge
mov
lea
ja
aas
cmpb
je
std
mov
cmp
aas
hlt
imul
repnz
mov
mov
mov
cmp
das
orl
out
sbb
fildl
and
add
ds
add
inc
int3
sub
aas
sti
add
dec
xchg
add
cmc
dec
mov
ret
ds
mov
jl
aas
lods
movsb
cmp
add
xchg
xchg
sbb
jne
adc
cmp
inc
mov
jge
fcom
cmp
jle
lahf
push
add
ds
inc
xchg
shlb
clc
inc
pushf
mov
mov
dec
repnz
incb
lods
subb
rcrb
inc
mov
cli
fs
aam
dec
addl
idiv
push
aam
jns
mov
ds
in
sti
jle
xor
out
shll
jns
ret
repz
ds
scas
insb
xchg
cmpsl
mov
adc
rorb
fiadds
loope
push
cmpsb
ja
aas
mov
dec
jl
push
into
jle
subl
dec
add
and
mov
cmp
notl
rcrl
xor
mov
adc
inc
insb
jne
scas
mov
xchg
ret
dec
roll
loop
jo
cld
add
jge
addb
xorb
cmpb
push
div
inc
jge
inc
sbb
mov
xchg
push
call
sarl
or
jge
ss
cmp
arpl
ds
ret
aam
xor
jns
jl
or
fwait
imul
addl
and
aas
mov
jo
jge
dec
arpl
lret
cmp
cltd
test
stc
jge
imull
cmp
inc
mul
orl
movb
std
mov
dec
sub
call
adcb
mov
out
mov
shlb
cmp
jb
insb
cmc
sbbl
dec
hlt
lock
mov
repnz
jbe
mov
lods
aaa
inc
xchg
xor
dec
jmp
fistpll
xlat
mov
out
out
mov
push
jl
mov
lret
fs
mov
cltd
testl
dec
xor
in
and
stc
jl
inc
add
inc
jg
repnz
divb
lahf
jae
icebp
and
xor
jo
fs
mov
jne
bound
cmp
movsl
add
push
jle
mov
rol
jge
xchg
mov
sbb
mov
orl
xor
and
add
in
shl
push
decb
and
sti
cmp
sbb
mov
jge
sub
xlat
andb
jl
popa
fsubrs
xor
add
mov
sar
das
mov
inc
sub
stc
js
loop
mov
into
jp
dec
xchg
xor
sahf
pop
bound
cmp
xchg
dec
jecxz
push
out
jecxz
lahf
xchg
mov
sub
fidivrs
or
mov
stos
xlat
sub
lahf
push
and
dec
inc
shrl
sti
sub
and
push
mov
jmp
sbb
ds
sti
jb
rclb
add
jp
addr16
jnp
mov
mov
jne
andb
jns
cld
gs
mov
in
dec
cli
aas
sbb
roll
cmpsl
xor
cmp
sti
testl
ds
pushf
sub
icebp
cmp
ret
xchg
idiv
hlt
cmpsl
sti
shrl
lret
jo
jge
in
push
pop
lret
fldt
jle
jg
pop
add
sti
jl
xor
mov
sub
jae
inc
sub
mull
sub
hlt
jns
and
or
mov
lods
insl
lds
js
cmp
test
push
adc
scas
shlb
lahf
aam
inc
cmp
inc
lahf
cmp
and
cmpsl
inc
fidivs
inc
bound
mull
jne
cmpb
mov
jno
push
sub
jl
test
sbbl
nop
cmp
ret
jl
add
cmp
jp
jl
out
aad
jge
mov
pop
jle
call
xorl
push
repnz
add
xorb
sti
push
out
dec
fidivrs
jge
test
or
test
push
hlt
jecxz
jbe
loop
jl
les
push
and
mov
pop
or
sahf
shl
mov
jg
add
notrack
outsl
add
jl
sub
std
lods
aas
add
bnd
test
add
xchg
fdivs
fadd
pusha
ja
jns
int3
push
gs
pop
mov
add
dec
pushl
dec
push
mov
in
jge
xchg
add
push
cmc
pop
xchg
jae
cwtl
ja
incb
loope
ficompl
mov
jp
outsb
cwtl
test
inc
cwtl
jb
cmp
aas
add
xlat
aad
pushl
sti
jge
inc
in
mull
mov
xor
adc
and
xchg
inc
sbb
aad
cmp
andl
mov
cmpb
cmp
inc
inc
loopne
ret
cld
mov
jp
cmp
jge
xor
aas
add
filds
jge
sub
pop
icebp
push
imul
jae
jecxz
mov
out
mov
mov
addr16
shl
mov
cmp
xor
ret
xlat
jbe
js
aam
jp
jno
adc
mov
negl
lods
aas
mov
add
mov
jg
inc
scas
rolb
inc
dec
xor
jne
lock
jge
inc
mov
lcall
lcall
add
inc
in
jmp
imul
ret
shrl
mov
cmp
aas
sbb
std
jl
mov
dec
ret
stc
fdivrl
ret
jl
mov
jp
test
rcr
push
out
xor
insl
out
xchg
movsl
jle
lcall
fst
loopne
or
imul
jno
cmp
xor
mov
aad
cmp
sub
sbb
xorb
loopne,pt
sarl
lret
shll
and
popf
insb
push
jg
testl
mov
enter
icebp
xchg
cmc
ds
insl
stos
mull
mov
pop
fidivl
mov
push
cli
rolb
or
jl
decl
cmp
orl
add
in
jge
outsb
je
mov
aad
loope
mov
out
inc
mov
xchg
push
push
mov
ds
das
mov
fcmovb
inc
xchg
jg
jp
sbbl
test
fs
aas
inc
jg
dec
mov
xchg
scas
out
out
mov
xbegin
into
mov
idiv
sub
fimull
cmp
mov
fwait
cmp
clc
hlt
jb
and
repnz
sbb
ret
sub
js
mov
icebp
xchg
loope
mov
add
scas
shr
out
loope
xor
icebp
call
aas
js
xor
repz
outsb
std
jp
inc
mov
mov
lret
jmp
ds
test
rcrl
jno
mov
sub
add
add
lods
sti
push
jmp
jge
jbe
xor
adc
rcrb
in
xor
movsb
pop
icebp
in
aas
mov
inc
ret
mov
cmc
push
mov
jno
jl
bnd
cmp
in
outsl
xchg
das
in
stos
fwait
add
jge
xor
fimuls
addr16
push
dec
sbb
adc
test
inc
gs
or
jge
push
cmc
push
mov
xchg
movsl
mov
stc
ret
jle
sti
les
rcll
std
mov
pop
inc
sbb
loope
jno
ss
inc
adcl
jp
outsb
push
icebp
xor
pop
cmpl
hlt
sub
cmp
dec
jp
mov
inc
movsb
mov
movsl
mov
mov
sahf
ds
iret
in
mov
and
cmc
mov
mov
inc
jl
mov
incl
jl
push
aam
xchg
jp
ret
add
jge
mulb
sbb
sub
outsl
movsb
xor
lds
dec
pop
pop
addr16
sbb
and
sbb
fldl
fstpl
xor
rcll
fsubp
inc
push
ja
loop
inc
bnd
cltd
fdiv
out
add
jp
in
jl
mov
fdivl
mov
xchg
and
add
aam
xchg
or
and
out
jns
or
cmp
add
lods
sub
add
inc
mov
mov
scas
lods
adc
out
es
popf
icebp
jmp
mov
mov
cmpsl
in
mov
cli
dec
ret
mov
sarb
cmp
jne
mov
xor
mov
les
inc
lds
aas
mov
pop
jg
adcb
call
lods
pop
ficoml
xor
jmp
push
out
mov
sbb
repz
inc
lods
daa
add
fsubrs
aam
mov
movsl
push
cmp
add
jl
xchg
xchg
cmp
mov
push
ret
mov
jle
cli
sub
stos
repz
in
sti
popa
mov
xlat
sub
test
into
dec
sub
jle,pt
pop
inc
adc
cmp
mov
lock
jge
mov
testl
xchg
pop
mov
mov
aaa
lahf
mov
movsl
repnz
inc
xorl
enter
xor
jg
mov
inc
fdivl
mov
ret
inc
dec
pop
push
cwtl
xchg
mov
and
cmp
lahf
jge
jbe
pop
jae
cli
xor
ja
inc
testl
jbe
inc
cmp
add
fdivrs
ret
rorl
mov
ds
js
in
out
ret
push
mov
addr16
fmull
mov
out
addb
dec
ss
sub
cmp
in
fidivrs
or
mov
cli
ret
push
clc
cmp
packssdw
add
cmc
ret
or
test
ds
cmp
outsl
jl
mov
imul
aas
imul
cmp
and
shl
inc
or
pusha
addb
es
gs
in
stos
xor
cmp
inc
in
inc
mov
pusha
mov
and
out
and
and
repnz
and
int
inc
pusha
ret
aaa
jae
je
loopne
lahf
inc
flds
jnp
test
jle
bound
jnp
cld
xor
jnp
xchg
movl
cmc
inc
sti
ljmp
add
addl
mov
shll
jo
mov
in
mov
push
jg
dec
test
lret
xchg
xchg
les
pusha
cld
inc
popa
add
out
test
stc
jns
jmp
xchg
add
and
ljmp
call
hlt
in
jecxz
mov
dec
xchg
mov
xor
test
add
stos
fbld
fldl
mov
mov
xchg
pop
aaa
test
rcll
sbb
aam
jnp
shlb
test
mov
jnp
push
test
mov
ret
jnp
push
cmpsb
filds
inc
sub
xchg
jns
fld
js
pop
inc
mov
jmp
xchg
xchg
push
push
out
jnp
mov
add
mov
jae
dec
lds
add
ds
gs
xchg
inc
test
cmpl
test
test
pop
jnp
pop
cld
aas
arpl
mov
aaa
xchg
subl
inc
mov
push
ret
in
sbb
inc
aad
and
test
xor
and
in
test
mov
xchg
sti
xchg
add
mov
repz
add
cld
test
mov
pop
in
popa
mov
jae
cli
mov
xor
cmp
add
lret
rolb
mov
jae
jno
stos
jae
fiadds
insb
jnp
sarb
lock
jnp
jle
add
lret
mov
pop
push
dec
mov
mov
pop
cld
jnp
js
add
cli
inc
roll
cltd
jge
lret
das
jnp
jg
mov
dec
jne
ja
repnz
push
add
cmp
xchg
and
mov
incb
lret
repz
add
hlt
mov
jnp
xchg
fdivrl
dec
jg
lahf
push
stc
inc
scas
loop
mov
out
insb
mov
cmc
jo
jnp
inc
ret
cmc
mov
xchg
cld
ret
shrl
mov
sbb
ficompl
jnp
xchg
addl
jp
push
mov
lods
xchg
jle
in
mov
mov
xchg
cmp
adc
or
pop
adc
pop
andb
adc
ret
push
fnsave
test
cli
and
and
and
and
jg
jne
adcl
loope
jnp
iret
jne
mov
jne
ds
icebp
out
mov
inc
lock
hlt
clc
sbb
stc
jne
ljmp
cld
dec
ja
mov
dec
jae
outsl
sti
out
je
sbb
daa
imul
xchg
arpl
out
in
and
mov
cmp
and
loope
pop
addr16
add
jg
jno
iret
xchg
test
jo
lret
dec
jl
ja
mulb
sub
pop
out
jns
inc
mov
sbb
adc
sbb
stos
sbb
scas
jnp
add
sbb
ja
adc
sbb
dec
mov
xchg
sbb
jg
leave
arpl
bound
xchg
sub
mov
jmp
rcll
fstpt
add
addr16
addr16
jnp
and
ss
sbb
pop
xchg
sbb
mov
push
aaa
add
push
lcall
sbb
pop
xchg
mov
rcrl
sbb
pop
sbb
xor
shll
lahf
mov
out
pop
cwtl
cmpsl
call
cmp
adc
incl
sbbl
jp
jno
fldl
jecxz
sahf
call
addl
imul
call
jno
pop
popa
ljmp
jmp
jge
aaa
imul
out
jne
sahf
ljmp
jbe
out
ljmp
shll
jmp
jae
jg
jle,pn
cmpb
mulb
adc
xchg
fldenv
mov
imul
shll
mov
xchg
ss
outsl
mov
sbbl
sub
scas
aaa
jge
mov
xchg
dec
inc
aas
cltd
idivl
and
cmp
mov
insl
mov
dec
orl
pop
sahf
cmp
pushf
jo
sbb
dec
sti
test
cmp
inc
and
data16
addr16
mov
push
ret
adc
ja
test
jne
push
nop
out
push
shl
ljmp
repz
cltd
sbb
sub
les
movsb
sbb
int
lea
adc
dec
hlt
inc
js
dec
lret
je
jge
decl
cmp
jle
jmp
fdiv
inc
dec
scas
leave
xchg
push
add
push
sar
push
inc
std
arpl
iret
cmp
push
aam
ret
je
mov
push
push
sub
test
fadds
fistpl
jg
jae
sub
loopne
insb
jecxz
jns
arpl
jge
pop
pop
xor
shrb
fdivp
jnp
pop
sub
mov
sti
repnz
lods
clc
dec
popa
adc
pop
loopne
out
jo
sub
insl
jo
in
outsb
ret
cmpsl
in
jecxz
jnp
mov
call
lcall
cli
in
mov
cmc
jmp
cmp
xchg
adc
push
in
movsb
pop
out
call
mov
pause
in
add
fiadds
add
jno
pop
jo
lock
fdivp
fdivr
repz
and
mov
addr16
neg
xorb
jl
jnp
and
fcompl
shlb
sar
sbb
xchg
cmpsb
mov
orl
mov
adc
outsl
out
shll
push
and
sub
jmp
int
out
in
jge
hlt
xchg
xlat
pop
push
test
and
and
inc
outsl
in
nop
inc
mov
out
fwait
fwait
js
push
mov
mov
call
pushf
fcmovb
ds
hlt
dec
add
dec
xchg
jl
or
scas
jnp
lods
lock
arpl
jg
mov
mov
push
jno
cltd
mov
pop
cli
test
jl
jl
ljmp
test
jns
push
ffreep
ja
dec
xchg
mov
push
mull
cmpsb
imul
mov
sbb
pushf
iret
jmp
ljmp
aas
popa
scas
pop
ljmp
shlb
mov
jl
fwait
jb
pop
orl
jno
sub
aas
mov
jno
in
lret
into
and
imul
pop
sti
int
jp
jg
mov
jle
aad
or
mov
gs
outsl
cmp
dec
stos
adc
mov
mov
pop
cli
fucomip
jns
mov
pop
mov
arpl
addr16
std
test
std
imul
sar
jp
rcrl
out
jns
mov
mov
repnz
lock
add
sbbl
aad
lods
stos
lret
in
inc
stc
lock
js
adc
push
ja
add
push
cld
pusha
mov
mov
or
jns
negl
lret
sbb
fwait
jns
leave
sahf
not
push
jbe
jg
sahf
sub
mov
xchg
jns
mov
mov
stos
jl
fldcw
inc
adc
xor
push
cli
pusha
mov
push
out
mov
mov
stos
xor
jno
xchg
adc
push
je
int
sti
jnp
ja
mov
inc
flds
cmp
sahf
xlat
ret
sbb
subl
repz
push
add
lods
std
out
jbe
pushl
push
dec
mov
clc
mov
jns
cmpsb
and
add
cli
xlat
leave
mov
pop
jl
cmp
dec
das
add
ljmp
sub
fcompl
xor
push
jnp
in
sbb
jb
arpl
inc
and
pop
out
jmp
or
test
jmp
add
outsl
push
jge
shr
add
or
ret
icebp
cwtl
mov
push
pop
sti
push
add
xchg
and
out
fadd
jne
fxch
jge
cmp
sbb
xlat
push
jne
ficompl
lcall
ja
scas
cmp
add
mov
inc
dec
test
daa
xchg
fisubs
mov
aas
addl
in
mov
insb
pushl
inc
jne
cwtl
mov
xchg
add
lock
jl
xor
xchg
fldt
adc
in
mov
psllw
dec
xlat
add
sub
and
pop
hlt
mov
mov
push
mov
mov
jmp
loop
ret
add
jno
mov
xchg
mov
in
fmull
add
into
xor
cld
mov
sub
jne
pusha
cwtl
add
cmc
jnp
subl
pop
inc
lahf
add
aas
push
jb
cmpsl
and
data16
mov
jl
es
push
outsl
pushf
pop
add
fdivrl
gs
sbb
mov
add
xlat
pushf
mov
fwait
pop
test
mov
outsb
pop
adc
xchg
sbb
fidivrl
add
mov
xor
sbb
mov
mov
lock
add
and
lahf
andb
add
jne
push
adc
jg
mov
test
jne
jmp
sbb
ret
fmuls
xchg
lods
je
jle
adc
dec
add
mov
cmp
imul
sbb
js
lods
add
sbbb
xchg
jle
test
jmp
dec
sbb
mov
call
xlat
aaa
cmpsl
and
jns
fs
jae
popf
add
jge
add
jecxz
add
sbb
arpl
fmuls
xchg
add
mov
xchg
addl
lods
mov
popa
add
popf
xor
shll
outsl
lds
lea
test
add
add
mov
in
aad
filds
dec
loope
lods
pop
aad
jmp
shrl
lret
jp
jmp
jne
cmp
fistl
stos
aad
sub
xchg
out
xchg
xchg
mov
mov
cltd
ja
iret
mov
addr16
test
popf
push
notl
scas
js
fisubl
jne
repz
out
xlat
rcr
loope
xorb
adc
popa
mov
inc
ret
cltd
or
popa
sbb
lods
subl
sbb
cmp
cmp
popa
mov
cmp
pop
jno
xor
xchg
sub
jae
pop
add
adc
xor
xor
jmp
xchg
or
push
subb
xlat
clc
pop
add
popf
push
sti
dec
ljmp
sarl
sarl
add
push
add
xchg
loop
xchg
dec
mov
lcall
mov
mov
mov
pop
movsl
lcall
mov
int
cmp
movsl
xor
stos
push
adc
push
outsl
jbe
jne
fists
out
ret
sbb
xlat
dec
pop
ss
mov
addr16
cmpsl
adc
dec
cmp
in
sbbl
or
imul
dec
push
xchg
outsl
xchg
call
sub
scas
jae
pusha
inc
stc
nop
sub
lds
xchg
sub
outsl
adc
in
add
jg
lcall
test
jle
sbb
fwait
lcall
ret
fwait
ja
gs
sbb
mov
mov
and
inc
cltd
insl
mov
sbbb
lret
xchg
in
rcl
rcll
mov
add
js
xchg
mov
and
mov
lods
addr16
adc
xchg
in
rcrl
ljmp
aaa
xchg
add
pop
xchg
subb
pushl
aam
leave
sbb
fnsave
pop
xchg
popa
mov
scas
cmp
push
add
jg
loope
push
mov
sub
xor
jne
dec
mov
mov
in
sbb
lcall
cmpsl
xchg
or
push
pop
and
mov
cmpsl
cwtl
push
add
pop
clc
sub
mov
rcl
orb
xchg
dec
lods
pop
adc
outsb
sbb
fldt
adc
jl
lcall
outsb
push
lcall
shufps
jg
adc
in
scas
jmp
jne
aam
ret
sub
push
rorl
mov
fsts
sbb
mov
add
mov
mov
mov
cli
popf
jle
jno
in
outsl
fldt
sbb
jp
mov
mov
xchg
ret
scas
mov
mov
sti
push
sahf
pushl
movsl
in
mov
fwait
rcl
sbbb
xchg
push
fildll
leave
mov
cmp
clc
dec
jp
add
mov
dec
out
mov
adc
sbb
imul
lcall
popf
sbb
rcll
and
adc
lds
int
mov
xchg
mov
call
out
push
cmpsl
jnp
fstpt
or
cli
enter
mov
cmp
popf
repz
andb
mov
rcll
lret
jo
lcall
dec
xor
mov
aas
jge
gs
sub
pop
pop
cltd
dec
in
shrb
insl
pushl
push
add
aam
lret
cmp
das
sub
mov
mov
pop
sti
cwtl
rcr
jle
mov
ja
movsl
cli
addr16
jge
in
xchg
push
xchg
mov
jae
sub
pop
and
xlat
aas
sbbb
pushf
imul
leave
or
mov
daa
mov
movsl
mov
jae
mov
dec
sti
pop
mov
xorb
lods
xchg
jo
popa
and
ja
iret
gs
shrl
lahf
les
and
add
pushf
int3
outsb
adc
xchg
adc
mov
jl
add
xchg
mov
adc
fisttps
add
dec
sbb
dec
push
js
xchg
push
pop
sarl
faddp
mov
enter
xchg
mov
xlat
shll
and
test
cmp
add
add
sbb
mov
ret
in
rcl
sbb
push
pop
add
jg
stos
jnp
dec
dec
jne
jbe
in
add
mov
and
mov
add
fisubl
test
test
rcl
push
out
orb
jbe
cltd
jno
test
pushf
add
lret
sbb
mov
movsl
icebp
mov
orl
cltd
pop
loope
frstor
cld
int
and
mov
mov
out
mov
xor
int
lcall
pop
das
mov
add
xchg
out
mov
add
test
sub
outsl
add
add
ficoml
lods
fidivrl
lret
pop
xchg
rcrl
ret
mov
cmp
arpl
in
mov
ja
lcall
leave
insb
sbb
pop
mov
adc
call
adc
jmp
sti
mov
and
xchg
popf
dec
jno
xchg
iret
lcall
cltd
sar
out
mov
popf
lcall
stos
loopne
mov
sub
pop
lret
cltd
movb
mov
lcall
sub
xor
dec
inc
lret
mov
jecxz
out
lahf
mov
mov
push
inc
jno
addr16
xchg
jmp
cmp
pop
xchg
add
adc
repz
push
pop
xor
lods
popa
movsl
insl
mov
jno
das
movsl
sub
dec
cmp
arpl
mov
pop
add
mov
pushf
inc
mov
imul
push
inc
mov
dec
mov
addr16
mov
mov
mov
push
repnz
cmp
out
xorl
lahf
mov
add
jnp
xchg
jecxz
xchg
aas
popf
jp
fbld
add
pop
sbb
xchg
ss
xorl
pop
shrb
cmp
faddl
jecxz
jb
pop
mov
aam
js
aas
lods
mov
mov
arpl
mov
sbb
pop
test
and
mov
mov
add
fcmovu
and
scas
sbb
int
adcb
inc
add
push
jno
jmp
pop
fstl
xlat
adc
gs
int3
sar
sti
faddp
arpl
mov
mov
in
mov
cltd
int
fildll
cltd
data16
jl
rcll
adc
xchg
aad
xchg
lock
mov
arpl
jg
ja
jns
sbb
test
ret
dec
outsl
loope
xchg
in
mov
mov
inc
jae
mov
xor
cmp
scas
ror
inc
mov
and
iret
push
out
scas
dec
jno
push
lcall
int
jge
arpl
sahf
jns
iret
pop
jns
fdivp
add
mov
jp
xlat
dec
xchg
sbb
test
pop
mov
insl
mov
ja,pn
int3
mov
mov
leave
decl
jg
popa
and
lds
addr16
loopne
mov
sub
push
mov
lea
mov
pop
inc
and
mov
out
ja
shrl
mov
xlat
adc
push
std
jg
filds
jp
pop
jns
mov
test
jne
add
adc
lahf
jne
pop
adc
lret
cmp
scas
iret
jge
sbb
aad
call
mov
subl
adcb
aaa
jp
jno
fbstp
xchg
popa
enter
mov
xor
jno
filds
cmp
orb
xchg
call
lahf
in
cmp
bnd
popa
dec
in
outsl
jp
aad
xchg
mov
xchg
jns
movsl
leave
pop
aam
mov
lahf
sbb
pop
into
mov
jnp
cltd
mov
xchg
push
jnp
jno
lcallw
xchg
dec
insl
insb
pushf
jae
fwait
repz
cmovae
adc
mov
roll
mov
fcmovnbe
sarl
aaa
xchg
mov
xor
ja
int
mov
lds
dec
cmp
popa
dec
fwait
repnz
add
mov
fs
clc
mov
xlat
sub
mov
imul
xchg
mov
fldenv
ja
mov
lret
cmp
xor
jno
mov
inc
xchg
jo
add
popa
mov
ficompl
jns
idiv
or
scas
call
imul
in
sbb
mov
pop
mov
andl
push
sti
into
adc
lahf
outsl
notl
daa
andb
movq
repz
aas
pop
icebp
jns
sub
ja
mov
jae
test
push
ficompl
mov
pop
iret
gs
xchg
mov
iret
sbb
adc
loop
xchg
jecxz
adcl
arpl
lods
aaa
push
push
jle
or
fucom
xchg
mov
iret
xlat
push
mov
stos
outsl
pop
aas
xchg
popa
test
and
inc
fldenv
sbb
mov
jge
pop
sbb
xchg
or
js
jb
add
ja
addr16
sbb
movl
sbb
push
ret
pop
add
mov
jo
mov
jne
sbb
adc
inc
cmpsl
mov
mov
jne
push
jmp
sbb
scas
rolb
adc
rcl
ret
mov
jp
adc
pop
cli
shl
and
sarb
mov
lret
cmp
dec
mov
ficoms
stos
cmpsl
jno
addr16
mov
jne
icebp
cltd
lcall
fnsave
imulb
dec
inc
stos
mov
imul
inc
xchg
jge
push
pop
sbb
leave
push
lods
xor
vmovhps
js
jmp
xchg
lock
cltd
jne
dec
test
mov
pop
sub
imul
jne
pop
int
jae
push
sbb
stos
scas
mov
add
pushf
jno
aas
aad
xlat
addr16
jle
lea
roll
sbbl
xchg
xor
xchg
sub
mov
jg
cwtl
dec
add
xchg
add
fwait
scas
sbbl
cli
xchg
movsl
mov
fisubs
shll
sbb
xor
ja
cmpsl
sbb
push
and
lahf
add
jge
cmc
ja
jle
add
jnp
fwait
lcall
xchg
jns
dec
out
idivl
rcll
add
ret
pop
jnp
imul
ficoms
pusha
mov
jecxz
mov
mov
in
cwtl
jo
ficomps
addr16
cmp
xchg
leave
test
jno
jbe
mov
addr16
cmp
pop
ss
sbb
iret
xlat
scas
leave
lds
insl
lock
mov
lcall
int
jmp
sub
adc
xchg
add
lods
push
mov
aas
xchg
lds
icebp
xchg
fildll
xor
fisubs
add
xlat
fdivrl
mov
lcall
stos
inc
fisttpll
jp
mov
stos
xor
shll
adc
add
movsl
andb
fists
in
push
lds
mov
add
scas
jmp
in
cld
scas
arpl
test
pop
cmp
daa
mov
mov
daa
ret
xchg
push
xor
push
dec
mov
sbb
xlat
fbld
into
jno
scas
fwait
fwait
jmp
and
mov
xchg
gs
fistpll
add
add
test
pop
mov
mov
dec
movl
ror
popa
xchg
push
pop
std
movsl
sbb
mov
xchg
jge
cmpl
fstpt
adc
sbb
lea
movsb
gs
dec
mov
sbb
cltd
iret
shl
add
push
cmpl
fwait
cmp
filds
in
mov
inc
xchg
xchg
mov
jecxz
inc
outsb
xchg
jg
movsl
xchg
and
stos
xor
xchg
xchg
hlt
fwait
xchg
cmc
popa
in
xchg
jge
fcmovnu
push
xchg
ja
cli
lret
sarb
mov
lcall
js
pop
andl
bound
add
jno
cmp
mov
scas
xchg
imul
in
iret
call
xor
fwait
nop
mov
test
cltd
lock
xchg
fsubl
push
add
int3
pop
les
pop
enter
add
fdivr
lds
adc
or
mov
xchg
in
ja
pop
pop
xchg
jg
test
add
gs
addr16
in
cmp
hlt
inc
fisttps
adc
test
xchg
cmc
jmp
mov
in
mov
repz
call
test
cmc
push
jle
pop
xchg
jnp
rcll
and
add
jecxz
mov
xchg
mov
xchg
mov
dec
add
pop
mov
or
push
mov
mov
jg
or
xchg
inc
loope
jnp
jg
xchg
or
and
jno
cld
test
cli
scas
int
ret
jp
ja
or
adc
adc
lahf
or
adc
scas
fistpll
and
inc
iret
mov
sar
outsb
fsubp
adc
cltd
ret
dec
rcr
stos
fxch
sbb
xchg
sub
xchg
iret
mov
cwtl
add
cmp
adc
fwait
sbb
and
cmpl
mov
movsl
jl
push
outsb
adc
xor
enter
mov
cmp
push
fldenv
pop
lret
imul
mov
clc
loope
mov
iret
cmp
lcall
dec
mov
sub
outsl
pop
mov
pop
mov
add
fdivs
popf
ja
lret
xchg
mov
and
outsb
xlat
cmp
mov
mov
dec
imul
scas
mov
mov
jae
pop
lret
sbb
mov
movsl
arpl
or
and
xchg
pop
cli
xchg
mov
dec
aam
mov
inc
mov
mov
jns
in
cmp
mov
sub
shl
out
mov
sbb
sbb
les
cltd
test
cli
fwait
inc
scas
adc
pushf
sarb
xchg
pop
xchg
sub
lcall
lcall
lock
in
cwtl
mov
xor
cltd
in
rolb
fwait
rcll
xchg
rcrl
insl
dec
test
mov
bound
inc
xchg
add
adc
sbb
xor
mov
insb
mov
mov
bound
gs
fcomip
movsl
adc
mov
cmp
aas
adc
mov
xchg
push
mov
push
inc
xchg
adc
ret
testl
pop
xor
jg
mov
ja
outsb
mov
xchg
add
loope
lods
stos
mov
iret
jg
add
jp
pop
cmpl
mov
andb
out
fldl
out
popf
sub
mov
add
in
cwtl
nop
mov
sbb
pusha
popf
repnz
ljmp
xor
add
sar
sbb
pop
xlat
xor
insb
icebp
mov
shll
push
in
popa
lret
popa
cmpsl
fnsave
fists
mov
sbb
jno
cs
xlat
aas
xchg
in
mov
test
stos
stc
lcall
aam
jp
fstl
mov
add
mov
loope
test
roll
popa
ret
mov
jg
jg
cmp
push
jmp
sbb
push
mov
sahf
ret
xchg
scas
fiaddl
ret
mov
xchg
jmp
out
sbb
lahf
in
mov
jae
scas
xlat
lock
lahf
outsl
dec
movsl
jo
std
int
mov
sbb
mov
test
lahf
scas
mov
test
and
addr16
call
jg
jne
xchg
in
ja
and
push
lds
int3
cmpsb
mov
pop
ret
iret
imul
addl
fwait
aas
cltd
in
mov
rcl
jg
movsb
jmp
add
mov
popa
cltd
and
fnstcw
fiadds
movsl
mov
fsubrl
arpl
aam
scas
fucom
xchg
sarb
xchg
jg
iret
imul
imul
test
mov
dec
lret
cmp
mov
mov
inc
arpl
les
mov
pop
jecxz
int3
jmp
xor
pop
popf
dec
mov
jae
andb
pop
xor
scas
pop
inc
mov
pop
std
popa
scas
inc
cmc
mov
out
mov
pop
jns
pop
xchg
rcll
jo,pn
inc
xchg
mov
mov
outsb
scas
jnp
test
cli
ret
pop
jge
pop
mov
movsl
rcrl
test
pop
leave
add
popa
in
pop
fxch
test
lods
mov
cwtl
mov
jne
sub
popf
mov
sub
dec
xchg
insb
jns
imul
jno
test
popl
sub
orl
fidivl
ret
aad
cmp
add
adc
add
fstl
pop
ret
test
jl
pop
jmp
fists
daa
ret
mov
adc
das
lds
jno
fldl
pop
fs
rorl
stos
out
orl
lods
adc
andb
cltd
add
mov
push
popa
clc
sub
xchg
arpl
jno
mov
testl
loopne
jae
sbb
pop
adc
dec
dec
in
andl
add
loopne
cmp
fldt
insl
outsl
adc
mov
mov
imul
sti
cmp
jae
inc
jle
ffreep
mov
mov
dec
icebp
sbb
and
mov
cmpsl
mov
mov
pop
jne
arpl
sbb
lahf
mov
fwait
dec
push
mov
adc
xlat
jae
or
mov
scas
and
xchg
decl
sti
test
popa
jmp
jg
push
jmp
xor
mov
imul
mov
fucomi
sbb
push
mov
mov
pop
fldl
pop
xchg
mov
sti
shll
adc
add
test
and
pop
xchg
xchg
add
xor
outsl
push
cmp
icebp
sti
add
sbbl
nop
xchg
pop
push
sbbl
insl
leave
dec
lret
iret
pop
cmp
fldcw
mov
mov
mov
xchg
faddl
outsl
push
addb
inc
jecxz
mov
xchg
sub
ja
jns
mov
mov
sti
cmp
fucom
jnp
jg
and
mov
icebp
jae
sbbl
mov
mov
mov
sub
mov
fistpl
fwait
lret
int
sbb
inc
sub
andb
jno
into
lods
out
stos
lds
out
mov
flds
jno
iret
aaa
ss
sub
dec
mov
aam
jne
mov
xchg
sti
fwait
icebp
xchg
ret
mov
adc
imul
fisubrs
outsb
sub
jno
inc
xchg
iret
xor
aaa
mov
lret
lock
mov
cmpsb
mov
sbb
lret
sarl
lret
clc
mov
sbb
imul
aad
scas
pop
add
xlat
mov
ret
mov
jp
pop
arpl
imul
cltd
sbb
rcr
jno
lcall
mov
ret
sbb
fnstcw
jmp
mov
imul
rcrb
fwait
xchg
aas
arpl
jno
arpl
fidivl
inc
popf
ret
xchg
test
mov
outsl
aad
jne
jge
rcll
xchg
jg
stos
aaa
shll
int3
popf
jno
pop
scas
insl
ja
or
jg
jg
addr16
mov
cmp
inc
pop
xchg
sub
imul
mov
mov
xor
mov
add
cld
mov
cmpb
fstpt
mov
mov
outsb
mov
mov
rcrl
jbe
xchg
mov
mov
mov
mov
outsl
pop
pop
xlat
imul
lret
int
push
aad
xlat
leave
sbb
mov
jns
popa
push
andl
andl
js
scas
mov
inc
fwait
xchg
test
sahf
jns
mov
jmp
sbbl
ret
rcl
aas
lods
out
iret
leave
xor
enter
lea
xor
xlat
ja
sub
and
cmp
adc
fcmovnb
pop
inc
scas
sbb
sub
cwtl
pop
test
cmc
pop
cltd
push
incl
mov
add
xchg
sbb
jg
movsl
adc
xor
insl
xchg
mov
jp
shrl
rcrl
arpl
adc
pop
xchg
mov
ffree
lds
add
fstl
mov
jge
stc
divl
repz
arpl
fists
stc
mov
in
sti
roll
js
sar
mov
stos
mov
add
add
jg
loop
bound
cwtl
iret
cmp
jne
add
popa
subb
adc
ja
jnp
mov
ret
inc
inc
fwait
jl
ret
fsubrs
xchg
cli
xchg
loop
fisubs
popa
xchg
cld
outsl
test
ja
lcall
adc
test
cmp
fwait
jle
mov
popf
cmp
mov
jge
ja
test
push
xor
dec
out
and
cmp
icebp
fildll
icebp
inc
jl
enter
pop
shrl
pop
adcb
and
jp
sbb
imul
adc
into
addr16
lods
inc
stos
iret
lahf
cmp
xchg
insl
movsl
outsb
xchg
dec
add
mov
xchg
lret
loope
and
sbb
das
xorl
movsb
aaa
sub
fucomp
inc
cmpsl
sbb
shld
xchg
mov
ss
fstl
xlat
aaa
cmp
jmp
jae
fwait
aad
iret
jl
jl
push
mov
cmp
sub
shll
movsl
push
daa
fucompp
mov
jg
loopne
addr16
test
lret
rolb
outsb
ret
pop
mov
jns
movsb
int
sbb
jecxz
mov
imul
push
popf
pop
lods
ficompl
rcr
mov
arpl
cmp
lcall
push
stos
shrl
lahf
rcrl
fnsave
xor
out
addr16
imul
sub
push
dec
lret
jmp
sbb
aas
stos
sbb
ja
pop
mov
mov
fstps
lea
cmp
mov
xchg
mov
das
mov
mov
es
imul
sbb
ret
ja,pt
xlat
cmp
clc
adc
add
loop
lret
pop
dec
scas
mov
push
cmpsl
mov
mov
push
sbb
in
xor
xchg
cmpb
loopne
add
outsb
pusha
dec
pop
adc
ljmp
jp
mov
jge
shll
or
addb
cltd
call
addb
and
jmp
cld
jge
xchg
add
cmc
jecxz
mov
ja
add
sarb
insl
jb
orb
jne
aad
jp
sbbl
mov
add
xchg
out
jp
inc
insl
add
in
add
call
mov
stos
pop
sub
in
xorb
subb
inc
ljmp
stc
add
mov
inc
pop
add
lret
addb
repz
cmpb
jo
je,pn
aaa
pop
ja
push
insw
xchg
and
jle
jmp
dec
rcrb
rol
add
inc
pop
jns
lea
xorb
daa
movsb
rolb
xchg
jno
sub
xchg
jno
pop
lret
jge
jns
cmp
lods
dec
mov
xchg
out
xchg
jnp
jg
jecxz
dec
arpl
fcmovne
iret
leave
push
dec
jle
xor
pop
lea
cmp
mov
data16
sub
or
xor
jp
cmp
add
out
adc
inc
stc
add
mov
orb
lahf
add
jo
add
popa
inc
inc
insb
lods
aad
aas
fstpt
pop
fnsave
out
clc
in
add
jnp
cltd
and
les
jl
scas
ret
das
push
shll
cmp
xchg
xchg
sti
jle
je
cld
test
ja
adc
es
pop
add
or
dec
dec
jl
jnp
sbb
xor
bound
enter
dec
arpl
sti
jg
bnd
add
jb
in
or
addb
cli
in
jmp
outsb
add
xlat
outsl
ljmp
imul
or
mov
pop
add
cmc
stos
gs
jge
out
inc
gs
fwait
jecxz
push
cli
xorl
push
jns
xor
stc
fisubl
rolb
sbb
add
cmpl
dec
jmp
inc
jo
cmp
adc
mov
lcall
shll
orl
loopne
mov
cmp
sub
fcom
enter
mov
mov
andl
dec
inc
cmp
sub
sti
xchg
adc
jbe
iret
shlb
inc
ret
jp
mov
dec
jb
add
inc
cmp
and
sbb
adc
mov
imul
add
mov
clc
mov
pop
push
inc
test
inc
mov
add
leave
jns
fiadds
or
mov
push
xchg
addl
sub
sbb
xchg
scas
xchg
test
xchg
jmp
movsb
adc
or
inc
lea
sbbl
mov
ss
mov
orl
push
dec
sbb
xchg
add
mull
shll
push
ljmp
inc
lcall
dec
sets
orl
clc
xor
mov
dec
test
dec
adc
and
in
scas
sub
loope
add
pusha
mov
shrl
mov
adc
jmp
mov
dec
push
insb
pop
insl
lret
fiaddl
mov
and
mov
dec
subb
ret
cltd
push
fstps
lock
dec
xor
pop
mov
push
mov
add
imul
inc
sahf
jne
pop
lahf
push
cmpsb
insb
sbb
popa
xchg
adcl
inc
inc
in
shlb
jbe
shrl
rol
push
out
fistl
in
adc
xchg
aam
pop
pop
mov
xchg
xor
adc
push
mov
ss
jo
mov
dec
pop
int3
scas
inc
adc
data16
roll
xor
xlat
xor
push
and
fucom
test
shl
xchg
xor
adc
cld
int3
loopne
testb
push
ja
out
mov
lahf
popa
fwait
pushf
jo
arpl
mov
push
sarl
sbb
push
and
pop
mov
mov
mov
cmp
fwait
and
out
xor
and
addl
test
clc
loopne
pop
subl
mov
andl
shll
inc
fldl
cmp
add
push
pushf
out
pop
outsl
mov
mov
negl
mov
xchg
orl
adc
or
subl
xchg
movb
daa
inc
roll
ret
fbstp
leave
adcl
aas
ja
jmp
cmp
loopne
ret
mov
inc
add
mov
sbbl
mov
add
jmp
iret
insb
cltd
cmp
sub
rolb
in
fdiv
call
and
cmc
movsw
pop
mov
scas
and
fldenv
sub
add
add
dec
dec
loopne
cmp
popa
daa
and
xchg
or
xchg
movsb
subl
hlt
fisubs
xchg
aad
cmpsb
or
push
add
mov
unpckhps
xor
mov
sarl
test
orl
or
sbb
sub
fisubrl
mov
fs
rorl
sub
ret
pop
jne
mov
addl
mov
jg
sbb
insl
mov
pop
fwait
or
xorl
push
sub
lret
sub
or
mov
mov
add
and
mov
clc
test
faddl
dec
xchg
in
mov
out
mov
pop
dec
arpl
hlt
orl
or
or
and
xchg
and
mov
fadds
inc
pushf
inc
sub
orl
mov
sti
cmp
mov
in
sbb
lret
clc
imul
call
stos
add
orl
adc
cmp
push
xchg
pop
dec
subl
jge
xor
stc
ss
imul
fadds
mull
fs
and
sbb
add
daa
orl
push
andl
test
xchg
aas
add
mov
add
sub
out
and
mov
fiadds
pushf
out
test
xchg
xor
or
orl
mov
or
aam
lock
dec
sub
arpl
push
mov
mov
out
xorl
popf
inc
lahf
sbb
popa
adcl
jb
mov
xchg
cmpsl
test
sbb
loop
sub
xor
sbb
jl
xchg
rclb
cmp
stos
mull
pop
push
push
xchg
adc
mov
xchg
cmp
mov
bound
add
stos
mov
dec
adc
lea
lret
in
jp
sbb
andl
xorl
mov
xchg
xor
add
adc
stos
lret
adc
or
and
sub
rolb
pop
dec
movsb
sub
sub
add
arpl
mov
ret
sub
ret
and
mov
and
cmpsb
sub
mov
in
cs
je
mov
or
dec
repz
femms
add
cwtl
aam
push
int
inc
jge
xchg
lret
add
push
mov
dec
mov
cmpsl
fsubr
and
dec
mov
popf
aad
sub
lret
fs
je
add
push
std
push
or
cld
pop
popl
lds
mov
test
sub
sub
lret
adcl
daa
xor
or
in
ret
jo
push
shrd
or
push
push
dec
out
hlt
and
sub
mov
stos
les
jo
jge
and
int3
dec
enter
mov
adc
sbbl
push
les
sbb
sbb
and
or
jb
subl
mov
adc
test
cmp
mov
add
andl
push
rcr
xchg
adc
repz
stos
addl
cli
cmpb
out
insb
sbb
cmp
pop
frstor
jae
or
or
mov
add
loop
push
mov
dec
xlat
in
jmp
and
lcall
mov
mov
andl
int3
scas
cwtl
mov
jb
popf
and
jl
push
ds
xchg
test
push
lea
add
jl
or
jae
aad
pop
jae
mov
imul
lret
sbb
and
cmp
sbb
mov
je
lret
daa
adc
fsubr
jge
inc
arpl
flds
lcall
lods
iret
dec
pusha
cmpl
and
popf
aaa
stos
mov
dec
jnp
jl
jno
mov
mov
js
pop
orl
mov
dec
ja
scas
cli
leave
jecxz
add
pop
or
jge
imul
adc
dec
not
pop
test
subl
push
dec
cld
orl
outsl
test
mov
mov
insb
xor
leave
push
add
cmpl
mov
add
add
lret
pop
add
pusha
xor
inc
cmp
jae
cld
scas
add
adc
hlt
push
sub
test
scas
test
je
push
into
adc
and
flds
call
movsl
mov
loope
test
movsl
or
cmc
ret
aaa
ja
std
inc
pop
in
fdivl
mov
push
lcall
inc
mov
fadd
aad
lods
pushf
fs
mov
inc
sbb
fldlg2
xchg
mov
xchg
jne
xchg
pop
std
inc
jno
mov
clc
fidivrl
cmpb
arpl
daa
subl
lcall
pop
cld
cmp
push
int3
arpl
lret
dec
andl
or
mov
mov
mov
dec
or
ds
jl
mov
pop
repz
stos
ljmp
pop
pop
orl
jae
repnz
push
jg
addr16
jl
jns
ret
push
mov
je
jnp
je
add
sahf
jmp
add
jle
std
icebp
jl
sarb
jb
add
push
push
jl
shl
jmp
push
aaa
mov
fldcw
mov
in
inc
jb
loop
addr16
lret
fiaddl
mov
xchg
inc
repz
xrelease
popl
jne
cmp
jnp
jbe
add
add
push
adc
add
cld
lds
fadd
push
jp
lods
or
imul
arpl
int3
lock
int
stos
les
shll
xor
leave
jmp
sub
int
int3
push
pusha
mov
xor
bound
fidivrl
iret
jae
inc
cmp
dec
sub
lods
fcomps
sahf
add
cli
jp
incl
std
out
pop
popa
aad
add
lret
lret
cli
inc
orb
push
shlb
pop
jmp
repz
push
dec
sarb
stos
shll
fucomp
jle
ret
jbe
dec
push
jae
sbbl
dec
lret
loope
pushf
pop
inc
bnd
pop
dec
push
push
cmp
leave
or
push
gs
xor
leave
dec
add
leave
pop
dec
pop
fnstsw
jg
loop
push
incl
lret
bound
loope
sti
cld
mov
add
sahf
loopne
lcall
cmp
mov
in
stc
in
inc
rclb
into
test
bound
mull
fsubrl
bnd
pop
cld
mov
mov
icebp
pop
hlt
js
jge
add
pop
hlt
ja
adc
iret
in
xchg
popf
fildll
roll
fidivl
sti
push
add
roll
push
jnp
xor
data16
and
loopne
stos
pop
icebp
ja
wbinvd
dec
lock
mov
cltd
int
cld
mov
cmp
mov
je
inc
iret
push
leave
decl
jle
mov
jb
outsl
dec
loop
pop
stos
roll
shlb
adc
addr16
leave
mov
int3
dec
insb
push
dec
nop
enter
dec
incb
lret
jmp
imul
mov
jae
mov
or
gs
rcl
jp
jmp
hlt
loop
iret
pusha
ffreep
lret
jecxz
fsts
dec
popf
out
add
in
jle
data16
dec
lret
adc
int
test
adc
clc
in
sbb
push
pop
fisttpl
and
or
xchg
in
push
insl
jge
lret
dec
enter
mov
push
rcl
data16
mov
xchg
cmc
lret
out
dec
xor
xlat
fistl
out
sbbb
daa
sub
loope
dec
inc
int3
mov
or
repnz
iret
xlat
int3
or
fwait
imul
popa
push
dec
push
mov
cmp
bound
fldenv
mov
xor
data16
mov
jmp
jnp
lods
inc
add
out
push
xchg
sar
push
ljmp
jge
push
and
inc
dec
leave
ret
dec
jae
cld
xchg
xlat
pop
pop
lret
imul
jge
out
gs
jne
imul
fcoml
int
popa
das
std
in
test
lods
fs
fwait
push
jbe
jbe
repz
and
vmaxsd
in
fs
jae
jno
shl
les
ljmp
xor
push
inc
cmp
hlt
sahf
sub
addr16
fisttps
mov
mov
and
pop
rcl
pop
test
cld
data16
push
mov
mov
out
xlat
fidivl
pop
stc
ljmp
jne
push
inc
xchg
push
bound
pop
push
inc
mov
push
clc
clc
out
in
insl
or
lret
push
jg
out
cmc
rol
mov
popa
jmp
and
jl
repz
push
mov
push
addr16
outsb
sbb
ret
roll
inc
insb
in
sub
sbb
sbb
shll
cmp
insl
lret
cmp
sub
int
lods
dec
mov
ret
sub
push
pop
mov
xchg
aas
dec
push
xlat
xchg
leave
sub
fs
mov
push
adc
mov
inc
or
pop
mov
mov
pcmpgtb
aas
and
inc
pop
dec
or
data16
repz
push
push
in
into
lret
sbb
jnp
js
fs
bound
hlt
imul
jmp
sbb
dec
push
int3
ret
xchg
stos
icebp
inc
xchg
mov
add
add
add
repz
mov
adc
movq
xchg
pop
add
adc
ficoms
idiv
jl
sub
jne
add
xchg
imul
push
je
sahf
imul
jbe
jne
stos
xchg
out
lods
aam
cwtl
pop
add
jo
or
and
shlb
lods
pop
add
jb
push
cmpb
xor
stc
push
ja
adc
cmpl
jno
ret
and
pop
mov
andl
sub
clc
leave
and
inc
lods
ja
roll
fcomps
pop
subl
jecxz
push
dec
inc
cmp
out
sbb
ret
addr16
iret
movl
sub
pop
push
dec
inc
aas
aaa
subl
pop
pop
sysret
outsb
sbb
into
mov
sahf
xchg
mov
outsb
pop
dec
sbb
and
add
add
stos
subb
cmp
sub
repnz
ror
or
jno
imul
icebp
mov
push
stos
mov
xchg
outsl
popa
inc
sub
cmp
add
loope
lock
mov
sbb
and
loopne
pushf
jne
test
mov
mov
stc
or
lea
sub
shrb
add
fwait
loope
push
add
stos
ret
dec
scas
cmpl
pop
hlt
or
leave
jecxz
je
sbb
push
cld
imul
push
ror
xchg
or
shr
loop
dec
add
mov
sbb
xorl
adc
out
sbbl
add
sbb
inc
sub
add
imul
je
shl
xor
or
stos
iret
leave
inc
cmp
sub
add
cmpl
and
sbbl
jo
adc
sub
lods
mov
push
inc
mov
sbb
xchg
addl
push
call
jle
and
push
push
ss
in
fs
add
mov
xlat
lret
and
stos
push
dec
repz
mov
in
orl
test
in
dec
rcrl
aas
lds
inc
je
push
push
subl
xchg
ret
add
jae
mov
mov
cs
or
sbb
and
sarl
add
subb
inc
xor
cmp
ljmp
xchg
add
xchg
stos
pop
fsubl
push
sbb
ficomps
fs
cmpl
aas
adcl
ljmp
ds
popf
xorl
gs
call
mov
out
loopne
outsb
sbbl
repz
push
push
hlt
pop
ss
cmp
jb
arpl
or
mov
push
pop
push
cmpsl
xorl
xchg
pop
movsb
shrl
clc
xchg
add
daa
sbbb
incl
mov
fiadds
push
repnz
add
xchg
fisttpl
cmpsl
add
mov
cld
mov
pop
inc
lods
sbb
adcl
mov
mov
push
mov
pop
mov
adc
xorl
pop
sub
adc
nop
push
lahf
in
sbb
mov
imul
mov
lds
sub
mov
orl
fisubrl
aad
xor
repz
sahf
loop
mov
int
or
cmp
jo
mov
lahf
push
sub
push
gs
subl
lea
xchg
and
jns
andl
andl
pop
pusha
mov
and
mov
cld
popf
dec
lock
or
cmpl
dec
inc
shr
sub
subl
das
dec
dec
emms
daa
add
sahf
inc
jo
test
jle
fs
sub
scas
and
mov
pusha
and
in
daa
cmpsb
and
and
push
xor
adc
dec
and
outsl
or
bound
pop
aas
mov
xchg
stc
les
fistpll
nop
add
mov
add
push
scas
dec
call
orl
test
divb
xlat
clc
mov
loopne
pushf
lods
scas
adcl
gs
imul
cmpl
push
pop
add
cltd
xor
loopne
cmp
jp
cld
jle
mov
add
movsl
or
es
arpl
sub
lds
fdivl
sahf
imul
push
arpl
subl
stc
and
dec
daa
adcl
out
push
andl
mov
adc
adc
cmc
orl
data16
aaa
ljmp
adc
push
dec
cmp
clc
and
stc
xchg
nop
movsl
cmpl
sbb
push
lods
pusha
add
mov
pop
out
loop
lods
je
mov
jno
test
or
outsb
and
test
inc
lret
cwtl
inc
ret
cmp
sahf
and
push
insl
fcos
cld
jnp
add
push
cmp
sahf
fsub
stc
add
in
test
ss
mov
push
mov
push
mov
leave
and
ds
mov
icebp
arpl
pop
add
mov
sbbl
ja
add
mull
cmp
es
std
push
ds
fs
testl
mov
adc
addr16
and
dec
imul
test
insb
ret
or
sub
inc
inc
sub
fs
xorl
pop
pop
ficomps
mov
fwait
nop
push
testl
cmpl
jo
test
push
mov
adc
and
inc
cs
ljmp
sbb
imul
xorl
mov
out
lahf
ret
mov
ret
stos
sahf
cli
imul
adc
dec
fwait
gs
mov
inc
arpl
int3
mov
or
icebp
xchg
cmp
cmp
and
movsl
xor
sub
adc
add
xchg
out
sbb
xor
xchg
mov
mov
adc
and
inc
cs
xor
insb
sbb
mov
mov
cs
aas
jp
pop
xchg
dec
add
nop
cwtl
mov
xchg
scas
push
out
inc
add
or
clc
mov
jmp
add
mov
ljmp
pop
cwtl
lods
ret
orl
repnz
dec
mov
lret
ss
lea
xchg
xor
cmp
fucomp
push
fs
inc
arpl
adcl
and
int3
sub
jl
rclb
xchg
sahf
xchg
cltd
in
mov
cmp
dec
bnd
or
cltd
fstpl
ret
dec
mov
cltd
andl
shlb
add
add
jae
arpl
adc
inc
lods
cltd
pusha
insl
out
ret
jg
mov
add
out
push
mov
sub
leave
push
cmc
lock
mov
movsl
sbb
ds
xchg
push
subl
icebp
cmpl
stc
addl
push
adc
out
popa
je
imul
stos
push
add
pop
fwait
ss
fs
lret
ret
and
std
mov
cld
pop
sub
push
fs
jl
adc
sbb
dec
cmp
cwtl
mov
jmp
stos
insb
test
add
pop
scas
cmp
and
decl
bound
les
loopne
jge
pop
mov
sti
aas
clc
lcall
xchg
sbb
and
sub
push
xor
mov
clc
mov
andl
dec
mov
mov
xor
xchg
ret
or
std
pusha
cld
sbb
ret
scas
sub
ljmp
jnp
or
addr16
adc
push
inc
hlt
cwtl
pop
in
int3
mov
ljmp
je
mov
inc
test
jb
aad
inc
add
cmpsl
sub
gs
push
clc
mov
je
std
xchg
mov
pusha
mov
add
in
adcl
push
mov
out
hlt
xor
in
and
icebp
ds
outsl
mov
sbb
cld
mov
arpl
pop
push
mov
cmp
add
inc
lods
popa
add
adc
fstpl
iret
mov
into
cs
lods
int3
stos
mov
sti
xorl
das
and
dec
cs
cld
pop
lret
xchg
mov
popf
cli
scas
cld
cmp
and
add
stos
add
pop
add
mov
lds
dec
mov
cmp
rcrl
add
test
xchg
mov
adc
mov
push
dec
sub
enter
nop
lods
adcl
inc
out
jmp
pushl
dec
ret
ss
adc
lea
cmpsb
arpl
xlat
add
adcl
adc
out
cmpl
inc
or
xor
loopne
jns
mov
lahf
andl
or
jo
pop
add
mov
call
xchg
dec
mov
sub
test
jmp
jae
or
idivl
sub
ljmp
xlat
fs
cmpb
sbb
inc
pushf
faddl
or
mov
cmpsl
jbe
jbe
subl
bound
fwait
cmp
and
or
fisttps
sbbl
and
mov
add
insl
or
mov
mov
ret
adc
imul
cs
and
sarb
adc
mov
ss
loope
test
inc
lods
repz
jno
mov
xor
mov
test
mov
dec
int3
into
daa
jbe
push
xchg
push
in
cmp
adc
mull
repz
cli
mov
roll
ss
les
lds
xor
aam
jo
nop
pop
addl
mov
popl
add
xlat
jp
cs
sbbl
push
aaa
je
andl
lds
dec
movb
gs
mov
mov
loopne
mov
ljmp
lcall
push
pop
and
sbb
or
xchg
add
mov
ret
dec
lock
xorl
add
sbb
pop
push
fwait
push
inc
add
add
ret
in
adc
lahf
subl
inc
js
ret
cmpsl
ljmp
fldcw
inc
sub
push
mov
pusha
add
cmp
imul
sbb
addr16
push
xor
aaa
and
adc
aam
adcl
repz
popa
cli
pop
jno
in
adc
mov
mov
cmpsl
test
sbb
or
das
jae
and
xorl
pop
rol
ret
jg
testl
in
test
xor
loopne
mov
push
dec
cmp
out
push
pop
enter
leave
cld
mov
lret
jl
mov
lahf
popa
fwait
mov
mov
dec
sbb
leave
pop
sub
or
and
add
stos
cltd
push
ret
out
add
std
repz
cmp
ret
fnsave
faddl
fistpll
cmp
sbb
jl
cwtl
and
stos
push
mov
mov
std
mov
fcmovu
stc
cmpsb
or
rorb
add
mov
mov
js
adc
xchg
test
ja
nop
xchg
aam
cltd
and
jne
mov
outsl
int3
mov
repnz
test
ja
or
cmp
push
inc
popf
jae
lea
jmp
xchg
mov
shr
jmp
inc
popa
repz
cmp
inc
testb
xor
test
mov
sbbl
xor
jecxz
push
loop
dec
jl
in
ja
mov
or
adc
add
loopne
inc
ret
adc
jns
jne
and
arpl
adc
xchg
addl
or
dec
jbe
jl
insl
jne
sbb
mov
fsubl
rolb
repnz
lods
pop
xorl
jno
xor
add
sub
mov
add
popf
or
adc
push
cs
xchg
sub
popa
xor
sbb
xchg
subl
xchg
mov
adc
ja
push
leave
dec
push
mov
add
and
mov
sbbl
inc
loopne
xchg
mov
mov
sub
je
mov
mov
jno
pushw
rorb
add
pop
outsb
mov
add
mov
cmp
cmpl
in
cmp
cmpsl
subl
aas
xchg
xorl
sbb
into
dec
in
xchg
iret
orl
and
pop
insl
xlat
subl
or
dec
call
mov
push
rcl
mov
mov
cmc
inc
sbb
add
xor
ja
and
sarl
stos
in
dec
imul
in
insl
xchg
push
push
sub
aas
add
lcall
sbb
cltd
in
push
or
loop
mov
outsl
cli
out
fnstsw
mov
sub
mov
mov
inc
rorb
es
push
dec
pop
jne
add
jnp
cmpl
scas
cmpsb
mov
nop
sbb
xor
iret
out
pop
dec
ret
sub
sahf
test
jo
addl
sbb
clc
hlt
push
pop
pop
ret
and
pop
cmpl
cmc
xor
xchg
pop
dec
rorl
jp
mov
arpl
inc
push
add
or
xchg
jbe
gs
mov
das
sti
outsb
cmpl
daa
inc
sub
insl
fs
stos
cmpsb
mov
cld
jae
in
je
subb
pop
stc
cmpl
fildll
mov
sub
sbb
jnp
or
lahf
orl
out
and
push
into
cmpl
push
mov
push
arpl
dec
lret
pusha
mov
sbbl
int
jno
jb
sbbl
inc
ret
fdivrl
rcll
add
scas
mov
jnp
cmc
das
pop
and
lods
lods
fldcw
inc
sbbl
mov
subl
push
and
int3
xchg
call
push
mov
out
mov
ret
ja
imul
stos
pop
mov
sbb
out
mov
test
aas
sub
vpmaddwd
dec
out
jns
add
sub
xchg
jl
add
and
hlt
dec
decl
lea
or
inc
mov
rol
andl
inc
or
cmc
jno
loope
ja
xchg
jge
std
jecxz
dec
lret
clc
pushf
add
je
ret
stc
xchg
xor
push
imul
sub
fiaddl
jo
inc
adc
sbbl
out
push
cmp
enter
mov
test
inc
cmpl
gs
test
les
cmpl
pushf
sbb
lcall
arpl
inc
repnz
int3
jmp
mov
dec
aaa
inc
cmpl
popa
push
push
sbb
adc
fildl
and
mov
in
stos
jb
adc
xchg
cltd
and
insb
mov
mov
int3
icebp
into
jae
cld
or
enter
addr16
xor
cmp
mov
outsb
add
or
push
ljmp
dec
in
mov
push
arpl
insl
andl
ds
push
sub
xchg
push
dec
insl
aad
pushf
add
cmp
stos
sahf
adcl
cld
lcall
pusha
orl
dec
lahf
leave
add
test
into
rorl
xor
inc
mov
and
or
adc
andb
mov
jnp
sbb
push
jne
hlt
dec
lar
mov
add
xchg
xor
and
cmpb
stos
sub
sbb
push
hlt
pop
mov
dec
icebp
adc
or
and
push
fcoml
sub
inc
js
pop
andl
xchg
lods
mov
sub
repnz
cmc
enter
jmp
xchg
int
mov
xor
cwtl
push
or
mov
push
push
cmpsb
mov
sbb
loop
fnsave
hlt
arpl
cmpl
mov
cmpsb
mov
push
or
lret
xchg
and
hlt
or
loope
mov
icebp
incl
jo
mov
add
xrelease
pop
insb
xchg
add
cld
cltd
jmp
inc
arpl
out
insl
rol
imul
pop
outsl
out
clc
and
rolb
mov
sbbl
mov
and
test
inc
xor
in
pop
sub
in
dec
mov
lahf
ja
jns
fisubs
xchg
fisttpll
and
xor
mov
cs
xor
xchg
in
xchg
stos
arpl
push
fcompl
mov
sub
sti
mov
add
dec
inc
sbb
in
cmp
fwait
push
push
hlt
xchg
jne
mov
rcll
jno
mov
fs
sbb
pushf
dec
or
add
out
leave
ret
ret
lcall
push
dec
jle
addr16
sub
pop
dec
sbb
and
xorl
or
lcall
mov
mov
shll
fildl
mov
sbb
cli
or
movsl
imul
mov
mov
inc
dec
pop
add
mov
int3
in
xchg
test
mov
cmp
out
and
insl
sbbl
push
xchg
add
in
inc
test
repnz
outsl
sti
jnp
insb
push
jns
or
xor
inc
add
add
pop
mov
dec
popf
movb
push
add
xorl
arpl
ret
mov
lahf
cs
mov
pop
cmp
popf
xchg
jge
int
flds
or
mov
divl
jno
roll
dec
subb
push
push
mov
push
cld
push
sub
inc
aaa
mov
push
xchg
cmpsb
sbb
cwtl
clc
cmp
loopne
cmp
or
xor
fidivrl
cld
out
into
push
push
push
mov
std
inc
out
loope
push
mov
sbb
xchg
jne
xchg
inc
mov
scas
faddl
or
faddp
sub
fnstsw
push
movsl
cmp
lahf
xchg
jl
jmp
frstor
gs
or
ss
int3
push
ljmp
es
sub
or
jge
push
addl
xor
xchg
push
pop
xchg
jecxz
sub
fsubrs
jle
dec
addl
subb
push
push
mov
call
sbb
jbe
push
arpl
add
push
popf
or
add
jp
jp
mov
repnz
cmpsl
mov
loopne
xchg
hlt
push
fs
push
add
jae
adc
jmp
fisttpll
pop
jnp
add
jl
into
xor
lahf
andl
add
sbb
jnp
xchg
add
add
jg
add
sbbb
in
inc
pop
pop
dec
into
push
jmp
mov
jle
jb
jecxz
jnp
inc
popa
mov
dec
push
iret
jno
jnp
mov
mov
data16
jnp
into
add
jbe
inc
xorl
xchg
fbld
in
insl
add
cld
mov
cld
test
test
adc
pop
jmp
mov
ret
jb
flds
mov
lahf
push
mov
test
ret
push
push
stos
and
imul
fdivrl
jns
cmp
clc
add
cmpb
dec
dec
add
cmc
pop
incl
add
pusha
lea
jp
inc
hlt
fidivrs
mov
jl
arpl
in
mov
jge
pop
add
inc
jb
jge
loop
jnp
add
andb
subl
lcall
xchg
or
add
push
loopne
jp
push
popa
imul
and
rcrb
push
movsl
stos
aam
push
xchg
adc
ljmp
std
cmpb
incb
jle
scas
cwtl
xchg
jg
add
jg
adcb
push
lret
push
mov
mov
jne
inc
adcb
sti
add
sbb
pop
mov
mull
push
jo
cmp
jnp
mov
loope
xchg
jge
add
mov
jno
loope
call
repz
xchg
hlt
push
cmp
pop
not
sahf
mov
daa
das
cli
fadds
lret
pop
jmp
push
xchg
cmp
and
xchg
in
mov
mov
repnz
movsb
fmulp
popf
test
add
mov
mov
push
subb
test
or
cli
je
cmpsl
add
repz
sbb
lahf
outsb
mov
push
push
std
movsb
xchg
mov
hlt
inc
iret
les
cltd
mov
xchg
inc
iret
test
push
bound
daa
jle
xchg
sub
scas
cs
ss
jnp
bound
xchg
xchg
scas
sbb
stos
xchg
mov
mov
xchg
xor
xchg
sub
xor
addb
jg
adcl
jl
xor
shl
cld
mov
aad
sbbl
ljmp
cmp
push
add
scas
lret
jne
cmp
and
mov
stc
mov
dec
jmp
mov
jmp
mov
jge
addb
mov
js
pop
cltd
arpl
bound
stos
sti
icebp
jg
add
and
ret
inc
std
xchg
outsb
subb
out
dec
rorl
sti
push
push
jb
dec
icebp
ja
pop
nop
aas
test
dec
xor
bound
loop
jp
jg
or
cwtl
popa
push
sbbb
out
clc
std
out
cmpsl
mov
leave
repnz
test
push
jbe
jmp
dec
shr
mov
clc
add
stos
xor
push
add
xchg
dec
jmp
jno
testb
jecxz
idiv
ret
ja
mov
push
jg
push
cli
dec
adc
imul
imul
scas
jg
fs
mov
mov
inc
add
xchg
pop
test
std
add
ret
repz
inc
arpl
hlt
mov
in
fildl
dec
jbe
nop
mov
int3
imul
sahf
jae
jg
inc
xchg
addl
js
std
xchg
stos
push
jbe
jnp
adc
xchg
push
jnp
pop
dec
int
dec
jle
je
lock
icebp
ja
jg
out
push
leave
insl
add
lock
test
jne
xchg
adc
or
data16
mov
addl
jmp
lret
outsl
bound
cmp
sbb
mov
mov
or
jl
jne
dec
mov
mov
jle
ljmp
add
pop
push
into
stos
xor
mov
jo
fnstcw
ja
mov
arpl
imul
repz
lods
jge
mov
stos
leave
aas
test
cmpsl
mov
lock
mov
add
jae
cs
nop
popl
aad
divb
addr16
jo
sub
shr
jae
push
insl
jo
jns
mov
cmp
addr16
lods
jp
call
shl
jmp
jge
add
pop
push
jg
or
jge
sub
ja
cmpb
jb
pop
nop
lock
sbb
jno
roll
insl
test
dec
out
mov
cld
and
in
jbe
aaa
and
scas
add
loope
pop
iret
jns
shll
cmpsl
xchg
lock
jl
add
fisttpll
cmpl
loopne
testb
imul
repnz
add
cld
sbb
arpl
stos
insb
cltd
nop
jno
jecxz
imul
mov
lret
xchg
loop
repz
sarl
dec
mov
shll
jne
mov
call
aad
ds
xchg
bound
xlat
in
aas
lods
mov
cmp
test
enter
xchg
imul
mov
out
loop
ss
fs
pushl
push
das
outsb
je
lcall
inc
sti
loop
pop
mov
test
mov
lods
aad
imul
mov
clc
jge
jns
jg
jne
and
push
jbe
fldl2t
arpl
lds
jg
and
fistpll
jb
pushf
jg
out
aad
jg
aam
inc
aad
stos
call
test
jg
outsl
add
mov
insb
push
imul
popf
mov
cltd
stc
aad
leave
aaa
insb
popa
loope
xchg
jne
fmulp
xorb
cmp
movsl
push
call
jno
cmp
lock
imul
jmp
es
jns
xchg
imul
mov
iret
ds
cwtl
and
push
cli
icebp
jg
pop
xchg
or
pop
int3
subl
jle
shrb
pop
add
arpl
mov
jns
jge
and
repz
sbbb
jno
scas
pop
iret
pop
xchg
mov
xchg
mov
divb
jl
xlat
pushf
fdivp
xchg
lret
into
xchg
repnz
add
pop
mov
ljmp
mov
rorb
std
add
sub
nop
rclb
loop
push
push
mov
jp
mov
daa
pop
dec
mov
lock
mov
rep
jno
jle
jnp
test
dec
xchg
dec
leave
aam
pop
idivl
je
jmp
mov
rcrl
mov
xchg
imul
pop
leave
movl
xor
ret
mov
jns
jg
mov
cmpl
sti
jmp
mov
add
xchg
jbe
mov
sbbb
bound
fisttpll
shl
leave
mov
repz
jmp
hlt
stos
test
call
loopne
add
data16
dec
jl
repnz
sti
loopne
popf
pusha
mov
mov
jns
arpl
jne
cli
xchg
dec
xchg
adc
jnp
mov
pop
mov
rcrl
scas
jnp
f2xm1
stc
sub
sti
jae
or
in
mov
push
dec
sbb
jae
fstl
decl
outsl
leave
cmc
sub
cmp
jg
js
scas
addr16
nop
push
and
lcall
cmpl
stc
jge
cli
xor
inc
scas
pop
mov
lods
adc
enter
aad
outsl
xchg
jbe
shr
data16
int
gs
jg
mov
shrb
addr16
jb
popa
fildll
imul
outsl
jmp
jae
jno
add
xorb
dec
insb
mulb
test
fcoml
filds
rcrl
mov
popa
push
dec
popa
popf
fimull
ret
pop
xor
adcl
add
mov
xor
arpl
loopne
enter
sbb
addr16
clc
lret
in
and
push
jbe
fucomp
imul
and
aad
jnp
fcoms
mov
gs
pop
add
ss
xor
mov
push
nop
or
movsb
ret
and
jb
lahf
je
lock
test
outsl
jne
sbb
fsubl
push
not
addr16
push
jge
mov
in
testl
jne
in
jnp
and
dec
fnstsw
or
pop
mov
push
pop
cld
addr16
xchg
test
cld
xchg
cld
sbb
popa
push
fwait
mov
arpl
jg
fistpll
rorb
fsubl
inc
rsqrtps
adc
add
jbe
fnstsw
mov
popa
popf
add
jo
pop
incl
jbe
jb
cltd
popa
fwait
popf
mov
mov
jb
xchg
dec
xlat
testb
iret
fnstsw
cli
jg
push
stos
in
movsl
jno
cmp
adcb
pop
outsl
dec
bound
testl
jge
jecxz
dec
or
jo
pop
subl
jno
jbe
jl
clc
bound
retw
dec
aam
add
jnp
lock
cmpb
adc
pop
enter
pusha
imul
testb
adc
out
cltd
sub
jle
sub
out
scas
outsb
cltd
fsts
ljmp
divl
stos
shll
inc
fldenv
cmp
push
mov
imul
or
xor
popa
fstpt
stos
arpl
inc
orb
ja
jl
aaa
jmp
imul
lods
jbe
and
push
repz
out
jns
imul
subl
jno
bound
stos
mov
xor
xchg
dec
je
mov
inc
lds
xchg
lret
dec
xchg
jp
mov
fnsave
and
jo
mov
inc
in
xchg
ds
or
xchg
out
sbb
fstl
rcr
outsl
mov
imul
imull
fidivl
dec
pop
out
aas
xchg
shll
xor
xlat
jnp
jae
jecxz
rorl
xlat
js
out
xlat
cmpsb
bound
sbb
or
adc
shrl
aam
cmpsb
dec
lahf
shl
and
outsb
outsb
stos
sbb
andb
fisttps
jle
ds
mov
inc
subb
pop
jb
push
mov
fwait
in
push
das
roll
loop
call
scas
jo
pop
jno
mov
lock
lea
fcomip
jns
jns
push
orb
jo
data16
jae
jl
push
inc
mov
fimull
nop
jge
test
cmp
fwait
bound
cmp
sbb
das
cmpsb
jge
add
jl
jnp
je
subb
gs
jnp
js
stc
repz
mov
cmp
adc
out
mov
push
shr
mov
mov
push
scas
add
imul
in
shll
pushf
mov
aaa
lea
jns
mov
leave
cltd
pop
sbb
jns
popa
sbb
adc
cmp
cmp
incl
or
mov
lea
out
incl
jle
mov
movsl
loopne
jnp
add
in
popa
sub
insb
mov
dec
ret
arpl
xlat
push
mov
test
in
test
add
gs
mov
dec
xchg
mov
dec
int
enter
lds
cmpl
jno
scas
dec
test
mov
dec
xchg
movl
adc
sub
mov
test
jnp
mov
push
xchg
jno
adc
shll
mov
lea
inc
mov
std
insb
pop
je
test
jnp
and
gs
fucom
insl
cmp
jnp
mov
pop
jp
mov
addb
repnz
rep
dec
sahf
jne
pop
in
xor
jnp
stos
fdiv
jnp
cmpsl
jle
scas
fists
jmp
pop
jns
outsl
mov
adc
popf
cmp
push
cmpsl
cmpsl
aad
mov
test
ljmp
xor
xor
jno
daa
push
mov
out
arpl
jbe
imul
jg
popa
mov
xchg
jno
test
and
adc
mov
aas
ja
test
mov
pop
lcall
scas
jl
mov
je
lods
dec
shrl
test
add
in
leave
stc
mov
pusha
cld
test
jb
mov
lcall
jo
jg
cmp
push
ror
bnd
adc
inc
xchg
xchg
aam
mov
in
lahf
mov
jno
cmpsl
and
jp
mov
bound
xlat
push
push
xlat
faddp
fnstenv
mov
mov
repnz
bound
adc
mov
cmpb
sbb
xor
cs
ja
inc
movsb
jns
dec
mov
aam
push
xor
test
fbstp
roll
cltd
in
mov
aas
imul
push
xor
in
sub
mov
cmp
cmp
push
into
iret
rcl
test
jle
jecxz
imul
jb
loope
mov
mov
mov
aad
insb
mov
mov
int
add
orl
int3
js
iret
pop
add
out
leave
jle
mov
outsl
push
push
xchg
jno
fidivs
or
insb
jge
stos
shll
in
xor
fcompl
loope
sub
out
jle
fcomps
imul
mov
fisubrs
addr16
jle
adc
jno
outsl
jb
leave
xchg
sbb
fdiv
fsubr
mov
lcall
stc
sub
leave
jmp
jp
push
cmpl
scas
xorl
push
ljmp
shrl
add
jmp
mov
lods
call
push
repz
shrl
xchg
cmp
data16
sub
bound
sahf
gs
inc
aad
pop
and
aas
xor
lcall
fildll
jl
cmpl
je
in
leave
loop
lahf
arpl
jg
inc
jecxz
mov
sar
repz
repz
stos
testb
jae
or
jae
popa
fnstsw
cmp
mov
arpl
jb
loopne
clc
mov
shl
test
add
lock
outsw
insl
add
sti
or
or
loope
and
mov
jl
fistpll
in
je
xchg
cmp
jg,pn
fadds
add
movsl
sti
jnp
jbe
jns
xlat
push
mov
notb
arpl
sarl
imul
pop
arpl
aad
fcomi
pop
fldenv
imul
push
fstpt
jne
aas
leave
mov
jge
mov
movsl
scas
insl
test
adc
mov
xchg
jae
inc
mov
es
jge
jns
pop
inc
sub
sbb
imul
jnp
mov
pop
call
icebp
outsb
add
jb
mov
adcb
jmp
xor
ret
hlt
push
jle
add
dec
sub
mov
add
sbb
mov
cmpsl
push
test
aaa
lret
notl
or
mov
dec
push
cli
fucom
ror
fiaddl
in
add
in
test
mov
shll
pusha
leave
mov
lods
xlat
lods
popa
fwait
in
sbb
jno
push
mov
or
lods
mov
leave
lret
test
frstor
push
stos
lods
repz
mov
iret
xchg
jg
lods
stos
push
mov
js
push
icebp
scas
xor
scas
mov
mov
inc
adcb
mov
cmp
shll
outsl
mov
jl
popa
dec
xchg
outsl
adc
sarb
dec
jmp
rcrl
into
stos
jecxz
addr16
cmp
mov
mov
jne
loope
out
push
mov
xor
mov
jno
mov
outsl
cld
inc
testl
inc
mov
out
pop
xchg
xor
leave
leave
mov
xor
pushf
push
sti
data16
dec
push
test
cmp
outsb
rclb
daa
jmp
jl
arpl
lcall
mov
in
mov
jg
adcl
gs
pop
mov
in
jnp
add
testb
faddl
push
mov
out
sub
lea
or
add
addb
xchg
shrl
aaa
inc
std
pop
cmpb
ret
lcall
jb
aam
push
scas
mov
mov
imul
dec
jge
rol
pop
gs
jle
or
imul
jl
pop
mov
scas
loope
fisttpl
fisubl
jae
adc
fdivrl
fisttpl
fcomp
jo
fmul
ja
jne
outsb
jle
mov
cmp
mov
pop
andb
jno
daa
mov
aad
cmp
outsb
mov
loopne
lahf
outsl
lds
repnz
shll
dec
popa
add
mov
loopne
adc
sub
js
int
jb
jae
into
jmp
int
arpl
fcomi
xchg
xorl
rep
shll
push
fldt
shll
shll
clc
out
out
shrb
adc
ljmp
fidivl
nop
inc
mov
je
je
xor
mov
cs
in
and
mov
xor
push
out
mov
cmc
dec
jnp
out
push
cld
js
je
mov
mov
out
incb
add
in
fisubl
insl
fildl
push
lret
enter
roll
enter
lret
mov
outsb
jae
aas
sub
loope
subl
in
pop
call
add
ljmp
ljmp
and
lock
xor
fdivrl
xor
jns
push
fdivs
out
scas
fwait
jl
inc
jp
cmpl
ds
mov
ret
test
test
leave
or
pop
push
lahf
jno
cmp
int3
daa
arpl
outsb
sub
jae
mov
sub
sub
add
test
repnz
cmpsb
aad
movsl
dec
das
or
icebp
adcl
lods
sub
cmp
dec
stos
mov
jnp
jle
jp
mov
jne
inc
in
stc
xchg
add
ficompl
nop
test
hlt
and
aam
mov
mov
outsb
loopne
cld
jns
or
mov
mov
inc
mov
movsl
mov
andb
xchg
jno
and
les
inc
or
in
sti
add
popa
add
jne
add
imul
inc
popf
pop
sub
cwtl
add
pushf
pushf
jp
add
shll
rorl
shll
out
pop
subb
insb
lods
dec
mov
loope
adc
pop
mov
lcall
jge
cmp
mov
lahf
mov
adc
mov
jmp
cmc
cld
sub
stos
mov
js
sbb
xor
mov
jnp
or
hlt
cmp
imul
int
jae
mov
jnp
jb
iret
inc
mov
stc
dec
jmp
mov
sbb
pushf
sar
je
inc
mov
loop
loop
outsl
inc
mov
mov
sti
loope
push
xchg
repz
cmp
popa
fs
add
sarl
fs
inc
mov
sbb
cmp
xchg
repz
fcoms
stc
int3
test
movsb
fcoms
pop
inc
jge
jg
jge
mov
xchg
icebp
mov
jbe
jge
jmp
addr16
mov
adc
call
dec
popa
or
xor
jb
sbb
in
xchg
imul
inc
lcall
mov
fldenv
xlat
xor
repnz
cwtl
fistpl
inc
mov
out
dec
pcmpgtd
loope
call
aas
in
jne
add
data16
or
add
push
cltd
leave
fidivrl
inc
cltd
std
pop
jno
shrb
xor
cmp
popf
repz
mov
sarb
fsubs
int
shll
test
mov
mov
xchg
xorb
incl
push
imul
jo
das
rcrb
sahf
sar
jge
insl
jecxz
jl
ficoml
shr
popa
or
test
int3
outsl
insb
xchg
add
mov
ljmp
cld
cmp
mov
jae
jne
sbb
and
sti
lcall
test
incw
push
mov
int3
jne
mov
gs
mov
bound
adc
loopne
mov
mov
repz
mov
mov
xor
inc
and
mov
jno
mull
aas
arpl
insb
xor
dec
loopne
push
mov
inc
loope
pushf
xor
fstpl
and
cmc
xor
mov
jnp
xchg
jae
je
imul
rclb
sti
hlt
cmpsl
lret
inc
xor
loopne
int
sti
repz
leave
inc
popa
jb
repz
repnz
jmp
test
insl
inc
push
cmp
cwtl
mov
stc
xchg
mov
add
and
xchg
aam
fcmovnb
mov
arpl
stos
jo
lock
mov
std
bound
xchg
sub
ljmp
fistl
cmp
jne
add
push
mov
pop
xchg
outsl
aas
push
enter
push
dec
push
pop
aad
repz
imulb
mov
jne
add
shr
pop
xchg
adc
xor
insb
lret
sti
arpl
pop
jnp
enter
shr
mov
add
insl
push
repnz
mov
fs
xchg
icebp
ss
repnz
jno
or
jb
sbb
jmp
je
adc
arpl
jnp
xchg
mov
jp
mov
xchg
lahf
xchg
aam
in
sbb
imul
add
mov
movl
insb
shll
or
push
in
jge
mov
mov
imul
test
mov
fistpll
fldcw
ja
jg
push
xchg
test
fwait
jp
lahf
jp
shll
xor
nop
call
jae
data16
lods
push
mov
dec
ret
test
xor
mov
fidivl
push
jp
out
loopne
xor
in
xor
test
loop
jmp
outsl
xor
ja
pusha
scas
dec
add
pop
mov
cltd
hlt
add
and
loopne
mov
out
inc
icebp
fwait
sub
sbb
in
cltd
push
pop
mov
cli
add
push
fsub
add
pop
mov
fcoms
xchg
xchg
mov
sub
cmp
aas
lcall
aaa
fldenv
rolb
int
mov
int3
clc
repz
lods
inc
std
xor
push
jnp
adc
call
xchg
outsl
out
gs
mov
jmp
in
pop
decb
popa
xlat
pop
mov
call
aam
decb
test
or
jae
xchg
xchg
pop
hlt
js
fsts
loopne
lahf
fstl
out
mulb
jno
shrb
into
in
push
jbe
cmpb
popl
lahf
fildll
out
jecxz
in
inc
ret
jno
fwait
sub
ja
jns
jp
cmp
subl
lret
fstp
add
mov
hlt
xchg
pusha
hlt
xchg
fcomi
fcompl
or
jnp
movsb
repz
pusha
repz
xlat
cmc
popa
jb
mov
xchg
cmp
mov
arpl
jnp
add
mov
pop
out
cmpsl
addr16
repz
in
xchg
add
std
mov
add
xchg
jmp
pop
loop
gs
lock
imul
fs
fadds
mov
cmp
bound
mov
popa
fld
popa
shl
rep
pop
fnstsw
leave
mov
pop
sti
xlat
mov
cli
fidivrs
hlt
cmp
lds
scas
repz
jno
fs
rorb
hlt
jns
mov
or
jb
orl
idiv
mov
mov
aaa
nop
loopne
lret
jb
pusha
xchg
shll
fistps
inc
in
dec
mov
pop
cmp
fcomp
aam
pop
dec
jno
dec
jg
ss
int
xor
jne
jp
push
xor
xchg
jno
mov
and
sarl
cltd
loop
xlat
mov
insb
sahf
add
cmp
int
lods
jbe
mov
js
mov
add
cmp
jmp
neg
mov
xor
or
fiaddl
sbb
jbe
dec
addr16
mov
stos
ret
fdivr
addl
pop
aad
jo
jnp
mov
pop
shll
mov
arpl
fidivrl
inc
popa
sbb
popa
mov
mov
jns
out
jnp
sub
adc
mov
sbb
or
js
fsubr
lahf
push
jne
xor
fmulp
mov
pop
fldenv
push
lret
pop
or
fs
push
sub
push
cltd
xor
cli
les
stc
xchg
jmp
cltd
out
xor
imul
dec
jo
cmp
in
into
idiv
mov
loopne
and
imul
in
pushf
sti
mov
pushl
flds
out
shll
pusha
jo
and
push
sti
adc
and
rorb
mov
mov
xor
jne
stc
call
rcr
into
pop
imul
mov
lock
mov
mov
xchg
out
pushf
sahf
push
in
stos
sub
mov
sub
js
stc
jne
js
psadbw
std
iret
lret
std
sub
jle
pop
loopne
out
jno
enter
negl
outsb
icebp
inc
mov
test
pop
xor
ror
data16
pop
sub
mov
push
add
fcoml
xor
xchg
aas
xchg
jo
lods
pop
sub
mov
popl
ja
clc
mov
mov
push
aad
mov
xlat
sub
adc
mov
jb
and
mov
fldcw
mov
xorb
jp
cs
imul
jno
fbstp
jae
jne
ja
mov
nop
jg
insl
sub
scas
mov
xlat
jb
loope
loopne
jg
xchg
cmpsl
aas
mov
jno
fbld
popf
add
mov
setg
sti
xchg
jmp
sub
xchg
rcrb
mov
mov
sti
rcr
lcall
fdivrs
jg
std
popa
jl
jge
aas
jns
sti
mov
out
jo
not
pop
gs
jmp
notl
shll
ror
out
clc
filds
bound
dec
rcll
lahf
jmp
ret
or
and
add
jle
psubq
jae
les
add
jno
lcall
pop
es
or
cmp
testl
movsl
xchg
add
jge
mov
aas
push
or
or
dec
jno
lds
roll
insl
jecxz
push
sub
mov
data16
push
test
subb
jnp
mov
mov
inc
arpl
cmp
loope
dec
ja
jg
dec
fisttpll
jae
fmulp
fldcw
pop
fwait
lcall
imul
add
sbbl
sbb
addr16
lahf
push
ljmp
test
dec
repnz
data16
mov
nop
jnp
bound
mov
repz
jo
icebp
negl
nop
sbb
pop
pop
jg
and
jmp
sbb
xchg
cmpsl
lret
lds
push
popf
mov
cmp
out
fmull
out
mov
dec
cmpsl
pop
cld
jg
adc
xlat
sarb
rcr
pop
fadd
ljmp
sbb
add
stc
rcl
and
push
xor
lea
jne
xchg
mov
bt
sub
mov
mov
bt
sub
call
mov
lea
jae
jmp
movl
push
movl
push
pushf
pushf
lea
jmp
lea
pushf
mov
setge
lea
movsbl
movl
sets
lea
pushf
jmp
add
dec
gs
popa
addr16
outsl
js
add
and
lea
je
push
dec
mov
sar
or
or
bswap
add
rcl
or
bswap
add
mov
mov
test
pusha
push
lea
je
and
add
sets
shl
movzbw
mov
cmc
pushf
mov
add
cmc
bt
stc
mov
or
not
sub
mov
test
cmp
cmp
cmp
mov
jmp
pushl
movl
movb
push
mov
movb
lea
jmp
jmp
repnz
mov
addr16
jno
mov
adc
cmp
ja
imul
pop
cmpsl
js
push
ret
in
dec
adc
sbb
out
fidivrl
sarl
inc
stos
sar
push
cli
cmp
or
jp
les
cmp
fdiv
push
xchg
sbb
aam
push
ror
iret
cmp
andb
lds
test
shlb
jnp
mov
push
or
stc
sbb
cltd
jnp
adc
fbld
xchg
pop
mov
shl
mov
dec
xchg
sbb
addr16
cmpsb
push
and
xchg
add
test
mov
in
in
sbb
ret
mov
cmp
and
push
hlt
sbbb
add
xchg
pop
mov
add
add
pushl
pushf
movb
pusha
lea
jmp
mov
call
push
call
call
addr16
sbb
jae
mov
pushf
and
push
cmp
lret
cmp
sub
sub
jl
xchg
adc
pop
shlb
testl
fstps
jb
repz
xor
rorb
fs
pushf
aas
outsb
imul
movsl
jno
loope
and
or
stc
sbb
or
das
mov
sub
cld
lret
fsubl
mov
dec
rorb
mov
mov
mov
out
or
push
adc
lcall
push
jne
push
inc
mov
push
add
or
mov
xor
stos
imul
sub
bound
pop
pusha
xor
lahf
jecxz
jg
aas
insl
btr
popa
mov
pushf
dec
pop
ljmp
jno
sbb
xor
sbb
xchg
and
test
mov
sti
test
xchg
and
out
stc
aam
jnp
and
movsl
inc
ret
in
je
dec
xlat
mov
inc
fyl2x
mov
maskmovq
divl
leave
jp
leave
push
stos
repz
adc
fldcw
cmp
ss
jne
jecxz
clc
daa
dec
fisttpl
int3
mov
cld
jge
nop
jge
mov
add
enter
jl
add
jmp
push
out
push
outsl
dec
or
insl
enter
pop
push
iret
repnz
insl
mov
sub
out
aaa
cmpsl
jbe
fidivrl
loopne
sub
loope
inc
jne
cmc
pop
and
ja
mov
cmp
das
jp
pop
ret
xor
xor
jg
dec
jl
push
out
jae
mov
sbb
push
xchg
fistl
and
lods
jp
ss
push
in
mov
xor
pop
mov
cld
push
enter
sub
add
xor
push
outsb
jno
xchg
cmp
dec
je
jle
aas
jnp
shlb
into
std
jge
fsubl
lods
lss
pop
dec
push
or
fisttps
ret
push
or
push
mov
aad
fstpt
movsb
stos
mov
xlat
pop
jmp
cmp
das
leave
pop
lock
aas
mov
cld
addb
repnz
jb
and
lret
cmpl
sbb
and
stos
into
xor
mov
pop
fdivrl
inc
orl
sahf
and
inc
arpl
push
mov
ret
test
rcll
pop
cmp
adc
cld
shr
add
add
inc
lods
cmp
inc
dec
es
ljmp
mov
jge
dec
int3
lcall
das
or
out
les
shll
mov
int
lock
xor
or
jb
idiv
shl
btc
mov
jmp
mov
cmc
inc
push
neg
push
bswap
adc
pusha
rol
mov
bsr
bt
stc
bsr
mov
dec
add
bsf
rol
mov
sbb
rol
clc
mov
rcr
rol
and
mov
xor
lea
not
push
lods
rcr
clc
shl
not
sub
jle
sub
clc
clc
rcl
ror
sub
and
clc
sub
not
mov
stos
jmp
and
loopne
cmpsb
in
mov
xchg
xor
iret
fistpll
pusha
xchg
jg
xor
ret
sub
jns
fstpl
mov
insl
mov
adc
sub
test
lods
jl
dec
mov
cmpsl
in
adc
cli
jge
test
jne
data16
xchg
push
lods
xchg
add
jmp
mov
pushf
push
push
lea
jmp
push
mov
pusha
lea
jne
pushf
jmp
pusha
jmp
add
add
push
add
push
add
loopne
add
add
out
add
add
add
xchg
push
jecxz
addr16
mov
mov
push
ret
dec
adc
mov
outsb
stos
jl
pop
insl
push
sub
mov
loop
and
loope
or
iret
lcall
lock
sbb
and
sub
jbe
cmpsb
popa
add
cmp
fisubrs
xorb
mov
mov
test
adc
in
push
xor
xchg
sub
fnstcw
xchg
mov
add
insl
fbld
or
inc
mov
mov
mov
or
sbb
out
jo
sub
adc
push
je
stos
cmp
adc
push
mov
inc
push
pop
cs
xor
fidivl
hlt
sbb
and
stos
dec
int
imul
fdiv
adc
mov
cltd
sub
sbb
mov
shl
rol
pop
bound
pop
pop
jg
test
bound
out
or
mov
push
and
xchg
pop
std
jmp
das
xchg
cmpsb
ljmp
mov
imul
gs
arpl
jns
out
jb
xor
mov
aas
loop
xchg
sub
in
call
adc
cmp
mov
or
xchg
loope
xor
addl
pop
jl
pop
mov
pop
mov
call
call
outsl
add
shll
cld
xchg
pop
inc
lret
add
mov
ljmp
roll
or
and
das
or
sub
add
movsb
movb
pop
and
incb
mov
cld
shl
sbb
push
orl
inc
mov
aaa
xor
cmp
sub
mov
mov
pusha
and
shlb
inc
subl
gs
add
fbstp
pop
xchg
imul
ret
test
mov
rcrl
and
and
mov
rorb
and
ret
test
insl
inc
js
pmaddwd
mov
and
aad
cmp
insl
paddd
add
frndint
shll
ffreep
xchg
mov
cmpb
jecxz
aas
mov
popf
inc
packuswb
rorl
mov
or
jns
dec
xor
jb
aas
adc
xor
jmp
inc
inc
aaa
popa
loope
cs
test
and
sbb
xchg
xchg
leave
sbb
fwait
popl
fistpll
hlt
movsl
lahf
andl
shlb
ds
xchg
pop
cs
arpl
inc
shlb
jge
packssdw
adc
sbb
adc
ja
sub
jne
adc
dec
mov
iret
daa
xchg
xchg
pusha
add
xchg
sbb
repnz
jnp
subl
fldl
push
in
rol
xchg
xor
mov
das
xchg
cld
mov
mov
mov
xchg
aas
icebp
dec
mov
xchg
fnstcw
out
fsts
imul
jae
add
xchg
mov
addb
mov
lcall
add
xor
xorb
jnp
comiss
lret
ret
fistpll
movsl
mov
xor
inc
shl
fisttpl
mov
lahf
rol
out
movq
jne
popf
cmc
ds
dec
add
pop
push
push
jno
movsb
les
push
fnstcw
aam
outsb
addr16
mov
or
pushf
iret
aaa
js
scas
xlat
aas
aad
fs
push
insl
jb
or
sub
mov
push
xchg
enter
adc
stc
or
jns
sbb
fnstcw
xor
xchg
or
shl
hlt
push
fsubp
sub
test
mov
dec
inc
fisubs
ret
adcb
insb
popa
jle
addr16
cld
ja
sti
cmp
and
inc
push
xlat
movsl
cmpb
rcl
xor
mov
cmp
mov
or
and
aaa
mov
sub
xchg
bound
or
mov
lods
cld
add
inc
sarl
inc
pop
inc
ficompl
xchg
xorb
roll
jbe
aas
divb
orl
inc
add
popf
and
jbe
add
mov
repz
imul
roll
mov
push
and
jae
pop
xchg
call
aam
jmp
test
mov
std
arpl
into
sbb
xor
sahf
mov
jb
add
inc
mov
and
stos
es
incb
jmp
pop
ret
dec
jge
jae
imul
xchg
push
mov
push
jmp
shrb
lret
mov
or
imul
mov
pop
outsb
and
jmp
jnp
loop
scas
mov
clc
and
cmovbe
xorl
out
jae
test
je
negb
cwtl
mov
add
fbstp
adcl
jbe
mov
pop
rorb
fstpl
xchg
add
fldt
call
inc
sahf
jae
frstor
mov
imull
rcll
pop
inc
clc
filds
sbb
jne
fisubrs
xor
jae
iret
adc
mov
cli
shlb
jg
cmp
movsb
and
aaa
add
pushf
dec
loopne
rolb
jmp
cmp
ja
test
mov
and
cli
imul
sbb
ljmp
jo
add
jbe
adc
xlat
xchg
adc
jp
pop
add
and
or
pop
mov
cvttps2pi
fidivrl
pop
subl
int3
sarl
adc
es
aas
adc
rorb
cvtps2pd
in
js
jae
pushf
test
lcall
or
mov
cs
jl
adc
aas
sbb
cmc
orl
dec
aad
xchg
popl
mov
jg
jae
fisttpll
xor
bound
dec
and
orl
fldenv
push
gs
mov
hlt
push
push
mov
pop
dec
xlat
jnp
imul
loopne
fdivrs
inc
jae
aam
test
xchg
lahf
ret
sbb
xchg
pop
cmpb
cmp
lahf
pop
aas
aaa
push
mov
dec
scas
ja
cmp
ja
adc
dec
jnp
ret
std
arpl
addr16
inc
xor
lcall
cwtl
pop
fwait
in
xor
shrl
gs
mov
and
imul
mov
push
adc
lahf
repnz
imul
lret
incb
cmc
xchg
push
dec
dec
inc
push
fidivrl
arpl
ret
push
push
push
jo
pop
xor
pandn
jne
cwtl
mov
stos
mov
add
inc
xchg
cmpsl
out
insb
dec
mov
sbb
jns
adc
cmc
fldenv
ret
jae
in
js
dec
inc
push
subb
subl
movsb
jmp
loope
ret
iret
adc
rorb
mov
sbb
rorb
fcmovnu
jmp
je
xor
insl
test
test
mov
mov
lahf
xor
outsb
lods
and
popa
stos
scas
jae
mov
aas
and
popf
into
jne
mov
aas
xor
dec
scas
mov
jmp
leave
inc
inc
mov
mov
daa
jp
push
fcmovbe
faddl
pandn
mov
fistpl
sbb
or
jb
addl
mov
mov
sub
sbb
in
stc
mov
jae
or
jl
sbb
rol
loopne
rorb
btc
mov
jmp
and
repz
push
int3
adc
mov
jns
outsl
push
jl
inc
jge
fsts
mov
rorl
jl
repnz
pusha
out
jecxz
aas
add
push
inc
ljmp
push
and
adc
mov
sbb
and
pop
inc
movd
das
and
adc
mov
int3
jnp
lock
icebp
sub
mov
add
ret
add
cmpsb
cmpl
arpl
jns
out
cmp
popa
cmp
imul
push
arpl
xchg
subb
add
sub
inc
pmullw
push
arpl
rcll
inc
adc
lcall
stos
adc
xchg
xchg
cmpsb
lcall
mov
imul
dec
rcrl
dec
in
dec
fcomi
or
cmpsl
xchg
cmp
xchg
jnp
dec
mov
shl
loope
or
lock
add
lret
stos
cltd
lahf
shrl
mov
mov
add
pop
pop
mov
pop
pop
jnp
or
jne
xor
push
mov
out
int3
in
lcall
ja
cld
jmp
sarl
mov
aas
sub
and
xchg
xor
sub
popf
out
push
push
idivb
xlat
ret
pop
lret
pop
shll
jge
imul
rorb
or
retw
rcll
rol
mov
daa
mov
stos
popf
adc
lods
mov
xor
addr16
shr
dec
add
push
pusha
dec
outsb
movsb
es
jns
jnp
test
jo
shrl
push
mov
outsl
ret
mov
mov
repz
lcall
push
mov
inc
mov
adc
repz
clc
daa
xor
inc
mov
into
ret
rcrl
idivl
add
fnstsw
cld
ret
xor
jle
lea
add
stos
jecxz
lret
arpl
push
fsts
push
push
jnp
jmp
lret
sub
sti
add
test
jb
out
mov
lcall
frstor
sbb
iret
add
cmc
xlat
rdpmc
ljmp
and
jne
and
cld
shl
jns
mov
je
jno
jbe
cs
sarl
fxch
mov
and
fwait
movd
lahf
pop
cmpsl
dec
or
push
dec
jecxz
jmp
push
out
into
pop
sub
xchg
mov
mov
aaa
aaa
outsb
pop
pop
aaa
nop
aad
roll
in
scas
lods
push
dec
loope
scas
sarb
xchg
xchg
jne
sbbl
jb
add
dec
xor
ret
jbe
iret
mov
xor
imul
mov
ret
xor
aad
jbe
sarb
mov
in
dec
fistps
enter
out
and
add
shl
gs
aam
call
mov
int
sub
nop
adc
into
addb
xchg
popl
add
jle
int
aas
fcomip
xor
scas
add
jo
jb
shll
mov
rcr
imul
and
aas
and
sub
cmp
cmp
jnp
xchg
aas
cmp
mov
iret
movsl
push
mov
rcll
push
pusha
pop
pop
hlt
std
fsubp
push
loope
jg
shlb
cmpsl
inc
mov
shl
push
leave
cli
xor
ret
cmp
jbe
dec
les
xchg
mov
jg
or
pop
lahf
pop
fstps
mov
sbb
orl
ret
xchg
fs
pusha
lcall
loope
cmp
andb
push
test
add
jp
out
jl
or
mov
jmp
sbb
loop
sbb
and
in
sub
jmp
mov
xchg
jp
cltd
cli
or
inc
pop
jnp
loope
mov
or
iret
pusha
sbb
push
shlb
dec
imul
ljmp
fs
repnz
or
bnd
mov
ja
dec
imul
out
sbb
rorl
test
jl
outsb
jb
rcr
jg
mov
mov
and
test
lret
sub
gs
dec
inc
mov
addr16
mov
lcall
inc
jge
push
sti
push
xor
adc
xor
arpl
adc
ret
test
inc
jae
repz
and
xchg
jnp
jae
andb
cltd
jmp
int
push
xchg
lcall
xchg
ja
jp
jns
jns
push
cmpsl
jnp
lds
xchg
xlat
add
fbstp
inc
jnp
ds
fcom
das
mov
rorl
pop
insl
cmpsb
fbld
ficoml
inc
jle
fidivrs
nop
fptan
dec
pop
push
fwait
mov
push
cmpb
cld
pusha
repz
or
addr16
sbb
stc
arpl
leave
outsl
xlat
ljmp
addr16
dec
jmp
jnp
sar
ja
loop
iret
aas
gs
mov
cli
aad
fwait
mov
xchg
mov
xchg
mov
mov
fidivrs
fwait
outsb
mov
jg
jno
sti
mov
jno
stc
mov
mov
gs
dec
or
outsl
fsubrs
stc
xchg
xlat
mov
pop
scas
jns
ja
popa
xchg
ficompl
ja
aad
ret
cwtl
cmpsl
bound
fidivrl
subl
imul
repnz
jae
lods
stos
xchg
sbb
lea
pushf
push
ja
or
sbb
mov
fdivrs
into
mov
arpl
xor
jno
fbld
shlb
xchg
popa
mov
pop
loope
scas
mov
xchg
ret
movsl
fsubrs
ficompl
loope
shrl
aad
mov
mov
xchg
jnp
xlat
mov
mov
icebp
lods
out
jg
mov
arpl
punpckldq
cmpsb
jne
or
xchg
outsl
aad
dec
add
lret
outsb
lcall
mov
sbb
xlat
xchg
pop
and
mov
push
dec
std
or
or
cmc
push
fnstsw
and
or
fucomi
test
test
mov
mov
int
mov
sub
dec
jo
cmpsl
lods
shrb
faddl
cmp
test
addl
testl
fimuls
adc
ror
fwait
push
imul
push
insl
cld
inc
jecxz
aas
adc
pop
lret
rcll
test
cmp
push
mov
mov
mov
jnp
negb
movsl
aas
dec
lcall
xchg
mov
dec
xor
movsl
mov
fwait
and
add
push
push
iret
subl
mov
addr16
jnp
sub
add
jae
pop
mov
pushf
xchg
xchg
lds
push
sarl
mov
cmp
aas
cmp
packuswb
clc
pop
mov
es
popa
data16
out
fidivl
sub
mov
leave
mov
pop
in
fwait
adc
and
jns
pop
mov
outsl
lds
fcompl
xchg
jge
popa
add
pop
pusha
pop
jl
out
out
fidivl
inc
jmp
and
xor
in
mov
jns
outsb
xchg
iret
jae
dec
mov
les
mov
call
cmp
cmp
test
nop
mov
fdivrl
and
lods
adcl
and
ret
adc
mov
clc
sbb
and
and
jae
lahf
xorb
shr
xchg
out
test
aam
mov
addl
insb
sbb
sub
mov
or
addr16
add
mov
iret
and
test
icebp
roll
jl
sahf
mov
pushf
iret
cmpsb
inc
xchg
jno
inc
sbb
inc
jb
jl
inc
sub
pop
xchg
or
loop
sbbb
mov
or
cltd
mov
push
or
ret
cmp
mov
mov
scas
out
mov
jnp
lea
xor
test
pop
outsl
dec
pop
cli
movsb
fwait
enter
push
push
arpl
push
add
loopne
push
pushf
fwait
inc
rcrl
jge
sti
jb
dec
imul
inc
or
and
data16
les
les
cmp
push
jno
addl
push
inc
dec
scas
xor
in
mov
add
sbbl
sbb
xchg
mov
fwait
push
mov
sarb
jmp
inc
lcall
aam
call
mov
orb
fcompl
mov
imul
sub
and
mov
mov
xchg
xchg
mov
incb
mov
fdiv
mov
ss
jb,pt
jae
and
cmpb
cmp
fsubrl
shlw
lcall
pushl
mov
or
adc
inc
sub
icebp
shl
push
rorl
pop
lods
fsubrl
in
stos
movb
mov
shrl
pop
xchg
xchg
imul
and
into
fildl
ja
ds
jo
mov
cmp
jno
aas
push
shll
pop
push
lahf
xchg
addr16
jp
fstpt
xor
push
inc
adc
cmp
mov
push
jmp
mov
pop
and
xor
adc
xor
aam
repz
lods
mov
addr16
or
sbb
rorl
jecxz
jae
mov
or
lret
mov
pop
mov
imul
jp
rol
mov
xlat
inc
cli
lock
mov
jo
hlt
std
push
add
mov
mov
add
stos
arpl
imul
jne
out
popf
dec
or
outsb
cmp
test
int3
mov
ja
rcll
sar
mov
push
cld
or
push
sar
ja
mov
inc
hlt
popf
je
bound
js
cli
jge
mov
xor
dec
cmp
iret
mov
lds
add
hlt
loop
or
mov
popf
xlat
and
mov
mov
loop
shll
mov
mov
loope
adc
ja
loope
inc
call
push
rcrl
cmp
xchg
out
cwtl
or
cld
cli
ret
fiaddl
iret
and
js
imul
pop
in
mov
shll
push
or
popf
bound
pop
add
cmc
in
lahf
pushf
mov
iret
and
jge
scas
rsm
pushf
jge
adc
push
aaa
jo
ret
out
pop
mov
fcompl
lcall
mov
hlt
xchg
jg
mov
jae
js
cmp
jge
push
out
sbb
aad
sub
lock
push
fs
roll
movsl
sbb
popa
jo
ret
inc
pop
cmpsb
lock
dec
aas
loope
adc
mov
mov
jmp
fs
mov
xchg
mov
mov
adc
fs
cmp
movsb
or
enter
aad
mov
leave
push
movsl
inc
pop
iret
mov
cmpsl
pop
outsl
rclb
or
and
adc
mov
inc
push
push
insl
sub
push
aaa
addl
lahf
mov
mov
pusha
cld
test
movsb
movl
js
orl
push
std
jp
xchg
mov
mov
cmp
jmp
fs
adc
cltd
fwait
scas
popf
add
push
test
scas
sarb
inc
pop
test
filds
mov
ds
and
pop
je
fstpt
inc
fs
add
gs
ja
mov
popf
mov
jnp
mov
xorl
in
out
lret
mov
rcl
fsts
mov
xchg
jle
ljmp
pushf
mov
inc
outsl
psrlw
pushf
sbb
fdiv
pusha
jnp
jae
jecxz
pop
add
pop
pop
add
or
ret
mov
pop
loop
setb
cmp
pop
repz
xor
mov
adcb
and
imul
jge
mov
jmp
getsec
insl
aam
pop
popa
call
clc
neg
imul
ljmp
cmp
out
jecxz
daa
and
jmp
dec
das
push
xchg
movsb
pusha
mov
js
adc
imul
cld
inc
jae
out
out
pop
pop
movsl
jno
pusha
faddp
push
daa
std
mov
out
xor
pop
pop
xlat
inc
aam
in
add
mov
loope
divl
add
jb
add
fwait
loop
arpl
cmp
jge
rol
push
cld
testb
ds
xchg
mov
add
mov
in
inc
lock
or
aam
aas
rol
aas
mov
mov
aas
nop
jae
adc
lahf
jle
rorl
fwait
repz
arpl
push
into
in
out
and
push
js
xchg
jg
jp
fsub
mov
inc
add
push
outsl
loope
jp
xor
mov
sub
adc
mulb
xchg
sub
std
sub
popf
sub
out
sbb
or
dec
ret
fmulp
cmp
push
dec
leave
lcall
ja
out
ja
mov
in
lock
mov
into
fidivrs
jno
fcmovbe
push
imul
cli
jb
jge
punpcklbw
lds
clc
ret
test
mov
xchg
outsl
add
mov
adc
push
xchg
adc
mov
push
mov
js
jle
jmp
push
add
pop
lods
xor
clc
js
in
mov
jns
int3
add
cmp
out
mov
aad
stos
imul
xor
ljmp
xor
jns
xchg
jnp
mov
fnstenv
xchg
jp
fisubrl
and
xor
mov
add
enter
jno
pop
imul
fwait
sbb
jge
mov
pop
lahf
js
add
arpl
mov
cmp
orb
push
loopne
pop
push
jecxz
mov
arpl
push
mov
int
jnp
cmp
psllq
lret
out
xchg
movsb
mov
ror
jl
or
arpl
bswap
int3
cltd
jl
mov
add
fimull
mov
mov
jae
out
cmp
inc
mov
jg
icebp
pop
aas
inc
rorl
mov
inc
sub
ret
movsl
adc
pop
and
ljmp
adc
dec
push
lods
lret
shl
out
mov
sbb
push
add
and
xchg
ss
repz
pop
cwtl
jnp
aad
mov
roll
mov
inc
arpl
pop
fnstenv
mov
out
test
mov
dec
dec
mov
imul
inc
out
cwtl
xchg
add
push
or
add
jb
loope
xchg
rcr
outsb
add
pop
mov
pop
mov
add
inc
or
sbb
ret
pop
mov
xlat
loopne
popf
mov
in
sbb
cld
cmp
mov
fwait
in
xchg
cmp
dec
mov
mov
pop
imul
and
out
clc
cld
sub
movsl
dec
hlt
ja
jmp
add
mov
bound
insb
jae
cmp
mov
insb
ficomps
dec
outsl
mov
jle
test
cmp
es
std
push
in
cli
sub
add
adc
inc
cmc
jg
xchg
les
add
mov
dec
push
stos
fcmovb
rcrb
into
sbb
push
in
add
pop
push
xor
fildll
mov
sbb
aaa
xchg
out
cmp
std
dec
jmp
in
mov
aaa
cltd
ret
mov
sub
imul
js
and
fldt
mov
test
insb
insb
ss
mov
fisttps
lock
shll
pop
cmp
mov
jns
xchg
jge
ds
xchg
mov
roll
mov
adc
idivb
movsb
je
jno
push
mov
cmp
xorb
pop
fisubs
outsb
loopne
xor
cmp
or
pushf
mov
arpl
pandn
inc
fwait
inc
pop
add
sub
es
fwait
popf
bound
mov
mov
inc
pop
xchg
aam
rcll
rcrb
xor
pop
jae
and
pop
insl
stos
mov
dec
aad
and
inc
rclb
arpl
xchg
jns
or
inc
mov
dec
sub
push
negb
mov
fistpll
packssdw
inc
add
cmp
aad
inc
xchg
lea
mov
pop
cmp
mov
jg
xor
jnp
fnsave
xor
sub
hlt
or
mov
addr16
divl
mov
push
xorb
pop
shlb
jmp
jo
mov
out
incb
test
dec
inc
push
jmp
sbb
ret
movsb
mov
or
test
xlat
jp
jbe
orl
jp
jno
sbbl
jmp
test
fwait
mov
dec
ss
jae
mov
jae
outsl
cld
pop
mov
jg
mov
or
dec
cmpb
cltd
mov
imul
mov
xchg
cmp
mov
ret
lcall
pop
rorl
mov
push
or
push
cmpsb
fildl
mov
cmp
testl
add
sbb
sarb
mov
shll
pop
cmc
mov
dec
out
out
fimull
mov
incb
adc
pop
mov
add
cltd
or
sbb
mov
dec
sub
dec
outsl
int
bound
cmp
mov
pop
andb
jle
minps
inc
push
aad
repnz
incb
sub
jnp
inc
push
ror
jp
push
add
push
pop
fsqrt
js
mov
add
and
leave
or
leave
imul
lcall
jg
xchg
jp
outsl
xchg
and
or
cwtl
fimull
sbb
out
mov
mov
jae
mov
inc
stc
pop
pop
into
pop
aas
loope
out
testl
pop
jp
mov
dec
scas
xor
xorl
shll
adc
iret
lds
pop
testb
cli
or
push
insb
lea
fidivrl
vphaddbd
mov
js
js
mov
cs
insl
jns
mov
lahf
adc
pop
aam
jno
mov
icebp
push
inc
ret
scas
andl
mov
mov
nop
add
xchg
inc
mov
add
push
jae
jo
xor
mov
test
loop
push
xor
aas
fdivs
out
addr16
mov
in
sahf
adc
mov
mov
pushf
jg
in
in
or
cmp
pop
xchg
sbb
mov
mov
pop
test
repz
mov
xlat
push
xor
aaa
sti
xor
inc
cmc
pop
bound
mov
sub
mov
cmp
adc
xor
outsl
insl
xadd
dec
add
imul
cmp
sub
vmread
add
or
fxtract
sub
mov
fcoms
into
or
cli
sub
mov
mov
inc
ljmp
fmul
xchg
cld
out
scas
repnz
js
hlt
out
mov
jge
mov
adc
inc
mov
sbbl
jns
fmuls
cld
enter
push
sub
pop
jne
pushf
sbbl
jae
scas
rcl
rcrb
fdivl
pop
mov
jnp
push
mov
lods
mov
popl
daa
imul
out
cwtl
sti
mov
or
push
aam
jecxz
jecxz
cmpsb
fidivl
lahf
mov
dec
sbb
lahf
xlat
fsts
aas
mov
pop
lahf
inc
pminsw
adc
lret
in
rorl
lret
iret
or
cmpsb
push
xchg
ljmp
scas
push
push
andl
movsl
ds
filds
rcll
fwait
xchg
in
cmp
movsb
sbb
or
mov
decb
bound
idivb
addr16
insl
lods
dec
dec
aad
jnp
fcomip
andl
test
imul
xchg
subl
cmp
out
xor
arpl
jo
pop
or
add
push
test
sbb
jg
adc
sbb
jl
iret
add
add
loopne
aam
into
adc
adc
mov
pop
jae
shlb
dec
call
add
mov
dec
xchg
pop
jmp
pop
dec
inc
repnz
and
jne
orps
jmp
fnstsw
fbld
cmp
pop
aas
dec
in
mov
mov
dec
sarb
mov
xor
jb
dec
lahf
xchg
or
mov
daa
clc
pop
addr16
xorb
pop
rcll
add
sub
fnstsw
push
stos
pop
sbb
lahf
sbb
cmp
mov
in
add
test
fidivrl
xchg
pop
test
add
fsubrs
xor
sub
lcall
out
idiv
jg
fs
mov
outsl
cld
es
or
clc
ret
mov
jge
subl
mov
mov
call
ret
add
addb
mov
or
int3
or
cli
int3
loopne
or
sub
and
insl
ret
cmpl
xor
lss
notb
inc
push
outsl
sti
inc
jg
or
insl
xchg
fidivs
jmp
filds
and
leave
imul
in
decl
pop
jp
out
xchg
xchg
mov
cmp
jae
xor
mov
mov
gs
cmpsb
jg
and
testl
leave
jle
push
fchs
popf
jns
jne
out
sarb
mov
push
pop
pop
mov
sarl
mov
pop
loopne
je
cmp
xlat
cld
mov
mov
imul
jp
fstpt
pop
jno
mov
jno
call
shlb
fcom
sbb
ret
xchg
push
push
fdivs
ret
push
mov
mov
jmp
mov
jg
pop
fistpll
in
pop
mov
cmpsb
xchg
jg
fistps
add
rcr
add
pop
and
in
push
inc
inc
or
xchg
sub
xchg
push
mov
shl
call
iret
mov
jno
cmp
out
dec
jmp
movd
push
jge
or
outsl
mov
add
jno
cltd
or
mov
jb
clc
or
out
dec
les
arpl
out
pop
or
ret
or
addr16
sbb
xor
cmp
shr
pop
cmp
push
cmpb
imul
pop
and
pop
pop
mov
insb
add
test
aad
xchg
xor
mov
jnp
in
int3
push
add
cmp
sub
pop
cmp
push
pop
xor
nop
testb
insl
cmpsl
out
inc
imul
or
mov
sub
inc
into
jl
xchg
shl
mov
jnp
and
jmp
enter
cmpl
fnop
inc
add
ret
hlt
mov
mov
fmul
lods
cmp
in
push
adc
in
cmpl
scas
cs
into
imul
sub
mov
insl
stc
jg
pop
add
ficompl
pop
out
sti
xchg
add
aam
xor
orl
push
fwait
mov
mov
scas
ret
shll
dec
mov
add
imull
push
call
jge
inc
xchg
push
test
in
inc
fldcw
xchg
gs
xor
mov
jp
stos
mov
decb
add
iret
mov
testl
cmpsl
scas
imul
insl
fcomps
lods
lods
sub
mov
inc
push
stc
jno
imul
pop
xchg
sub
add
fcmovnbe
xor
sbb
lret
shr
mov
cmovb
cmp
and
loope
sub
das
ds
dec
jge
jo
psllw
shlb
iret
jbe
sub
mov
cld
std
lahf
cvttps2pi
in
out
pop
out
mull
pop
iret
rorl
pop
stos
sbb
nop
add
fmul
sub
ret
mov
repz
mov
insb
arpl
sub
mov
mov
or
ret
lahf
ror
orl
repnz
inc
sarl
sbb
out
pop
lock
in
jp
mov
iret
or
lret
pop
inc
enter
cld
mov
jle
push
cmp
add
or
sbb
inc
lea
add
aas
xchg
sbb
hlt
mov
sub
jmp
cmp
sbb
lcall
pusha
ret
mov
fwait
cwtl
pop
imul
imul
arpl
mov
aam
sbbb
insl
adc
and
mov
xor
sahf
into
in
dec
sahf
mov
xchg
sub
cltd
jp
subb
add
pop
jne
unpcklps
dec
mov
and
xchg
xor
je
rclb
xchg
push
orb
jl
pop
jae
cltd
clc
lock
sub
test
repz
xchg
scas
rorl
test
xchg
add
cmp
and
fldenv
fwait
mov
mov
xor
in
mov
mov
subl
gs
or
jno
jg
jae
mov
shrl
pop
adc
adc
les
fwait
shlb
pop
xchg
fwait
popl
mov
ljmp
idivb
mov
fadds
jno
adc
sahf
aad
cmp
sbb
and
jnp
inc
push
fcomi
shll
xchg
mov
imul
arpl
and
and
sub
and
pop
push
push
mov
jmp
rcrl
adc
in
sub
sbb
mov
flds
or
and
arpl
push
cld
jmp
stos
adc
push
iret
sub
cwtl
sbb
test
mov
sub
mov
in
mov
mov
ljmp
fwait
push
loopne
fcoms
les
mov
add
cs
dec
xchg
pop
sub
decb
xorl
mov
iret
push
pop
xor
andnps
xchg
pop
jecxz
sar
adc
ret
pop
nop
jp
ja
jns
sub
cmp
adc
imul
jbe
ss
outsl
daa
mov
sub
inc
pop
roll
push
pop
shll
loopne
pop
inc
and
jmp
jb
js
mov
or
dec
and
repnz
or
dec
out
inc
sbb
jns
ja
jbe
or
push
jne
ret
fldenv
rcrb
pop
pop
popf
je
cmp
bound
mov
inc
sub
dec
mov
pop
imul
les
pusha
fstpl
iret
lcall
dec
in
lret
inc
outsl
in
fldt
jg
adc
adc
bt
cmp
pop
mov
iret
ljmp
xor
xchg
clc
mov
mov
pop
sbb
jge
pushf
mov
sti
add
les
gs
movb
mov
imul
lret
cmc
add
das
inc
add
in
push
sub
cmp
pop
lahf
scas
jg
mov
orl
aas
xchg
enter
iret
inc
jp
jmp
sub
xchg
xor
cmp
sbb
mov
fnsave
mov
inc
push
fnstcw
test
flds
mov
imul
popf
movsb
mov
insb
cltd
push
inc
pop
pop
pushl
mov
ss
xchg
pop
sahf
sub
iret
ljmp
daa
ret
popa
aaa
xchg
jge
xor
insb
shrl
jb
dec
sub
mov
jg
and
mov
call
mov
rcll
inc
es
xchg
jbe
mov
mov
icebp
loop
leave
sbb
jnp
aad
cwtl
push
mov
movsl
icebp
sbb
shll
or
pushf
imul
add
movsb
push
push
xor
loopne
sbb
fmull
sbb
iret
jp
fwait
add
sbb
or
orl
fstps
cmp
mov
sbb
xchg
add
jbe
lea
outsb
arpl
cmpsb
or
lcall
andl
fimuls
mov
mov
xor
cwtl
lret
decl
xor
pop
in
pop
insl
nop
jnp
xchg
ret
insb
in
orl
sbbl
xchg
mov
and
fisubl
add
out
subps
mov
loope,pt
cmp
jge
jl
pop
repnz
mov
ja
cwtl
inc
das
call
icebp
loopne
mov
xchg
lret
insl
pop
jmp
mov
pop
jo
mov
mov
fnsave
stc
inc
popf
jmp
dec
pushf
lahf
adc
loope
icebp
cld
orb
dec
mov
popf
loopne
or
xchg
mov
xor
dec
jecxz
in
repz
cmovge
and
nop
jecxz
mov
sti
or
popl
daa
mov
jne
rorl
add
xor
arpl
pop
in
movsb
inc
sbb
test
mov
pop
push
fstpt
xor
pop
xor
cmp
inc
cmp
mov
les
adc
arpl
mov
outsb
icebp
and
leave
test
je
lock
lods
push
insl
pop
pop
sbbl
lahf
arpl
xor
sub
hlt
out
mov
js
fidivrs
mov
push
add
call
mov
mov
popa
iret
fdivr
adc
inc
loopne
scas
xchg
daa
push
popa
lcall
aaa
loopne
jl
std
xchg
mov
fwait
adc
jb
aad
or
and
sbb
cmp
andb
hlt
mov
inc
pop
ret
mov
pop
test
jl
adc
or
mov
out
xchg
nop
inc
xchg
test
add
adc
and
xchg
fstps
xchg
adc
in
jp
test
call
js
lods
xchg
add
ja
cmpl
setae
lcall
int3
int3
lahf
adc
in
ror
insb
pop
loopne
rorl
outsl
mov
pop
mov
iret
pop
mov
or
lcall
out
ljmp
cmp
pop
subl
repz
jmp
sub
xchg
jl,pt
pop
jb
sarl
pop
popf
xor
jno
jb
and
jg
jae
clc
fildl
add
mov
popa
invd
dec
pop
fcompl
jb
mov
pusha
into
mov
mov
ds
and
iret
xlat
clc
ror
mov
dec
jbe
cmc
inc
adc
mov
pop
adc
xchg
adc
xchg
test
xor
iret
addb
or
rorl
aaa
mov
in
or
xor
xabort
and
fldenv
jae
cmp
xor
shl
inc
sub
or
xor
pop
idivl
jbe
inc
psrlw
fwait
xor
in
pop
mov
andb
sbb
mov
dec
xchg
cli
mov
mov
lret
sbbl
adc
pcmpgtb
sub
pop
mov
cmp
or
insl
pop
rcl
xor
stos
sub
add
iret
jae
call
arpl
pop
sub
les
adcl
adc
inc
fwait
xchg
lcall
frstor
push
lock
push
adc
and
cli
inc
pop
lret
imul
leave
mov
fmulp
icebp
pop
jae
jg
rcl
xchg
lods
mov
mov
sarl
pushf
andl
aas
cwtl
xchg
mov
jo
rcl
leave
in
icebp
in
sub
jno
ret
sbb
cmpsb
jnp
lea
fiadds
cmp
mov
int
sbb
sbb
and
add
es
in
rcll
cli
push
xor
mov
fninit
prefetcht0
das
addr16
xor
and
push
pop
jmp
mov
xlat
lret
inc
call
mov
roll
mov
iret
andl
mov
mov
xchg
pop
mov
jb
lcall
ret
nop
orb
fcoms
mov
xchg
or
fiadds
jae
roll
mov
cmp
addr16
lcall
movsb
sbb
inc
js
sbb
fwait
hlt
dec
mov
nop
xchg
mov
xchg
outsl
and
fistpl
mov
arpl
rorl
pop
sbb
iret
jle
stc
jae
mov
fidivrs
push
xchg
and
repz
popa
movsl
iret
cmp
mov
pop
mov
je
mov
jae
iret
lea
pop
cmp
aas
or
jnp
mov
sbb
insb
xchg
stos
les
sub
test
cmp
xchg
lods
pushf
aas
cmp
mov
loope
in
pop
jb
jp
mov
in
mov
mov
pop
add
pop
ds
imul
in
shlb
push
lret
je
aas
in
mov
pop
xchg
pop
fsubr
ljmp
ret
setne
lods
in
jl
divl
or
shlb
int3
icebp
xchg
jnp
push
fidivs
push
add
xchg
and
dec
adcl
xor
nop
dec
dec
scas
in
in
inc
outsl
lcall
jns
clc
mov
cmp
cs
and
in
cmp
xchg
adc
sti
repnz
push
mov
push
insl
dec
icebp
mov
add
mov
outsl
jns
cmp
aaa
lret
cmpl
ficoml
pop
sub
push
icebp
xchg
sub
fdivs
pop
xchg
out
paddsb
mov
pop
adc
sahf
rcrl
hlt
imul
mov
sub
fwait
pusha
es
push
push
push
push
and
loopne
call
mov
add
rorl
andl
fcmovne
xor
sbb
inc
ss
xor
xchg
xchg
add
mov
fisubrl
jne
xor
mov
inc
adc
pop
lret
shr
and
fisubl
pushf
dec
ds
sub
fnstenv
inc
jg
imul
imul
sub
pop
movzbl
lds
out
jge
arpl
bound
ret
and
xor
mov
imul
inc
mov
paddb
in
mov
sub
and
movsb
lahf
js
mov
cmpl
xchg
stos
lods
mov
hlt
push
por
mov
mov
or
aam
dec
mov
sbb
mov
mov
xchg
movsl
ret
mov
mov
dec
bound
push
std
dec
push
scas
xchg
pop
cmp
pop
adc
lcall
add
stos
lods
shlb
ret
cmp
out
out
or
xor
cmc
loop
dec
push
cld
aas
lods
insb
jno
popa
inc
lret
imul
or
bound
jecxz
repz
insl
mov
gs
xchg
sbb
dec
lcall
fucomi
xchg
pop
xchg
mov
pop
jg
movsl
stos
addb
pop
cmp
mov
repz
pop
test
shl
outsl
iret
or
fldl
mov
push
pop
xor
jmp
lea
cmp
rcrl
lock
aad
mov
es
xchg
sbb
xor
xchg
pop
fdivrl
mov
test
jg
mov
cwtl
sbb
fnstcw
int3
push
add
pop
mov
cli
inc
mov
mov
daa
decb
mov
loope
incb
or
sbb
or
das
icebp
cmp
insb
out
out
mov
insb
mov
fwait
cmpl
xchg
out
ss
clc
mov
add
mov
fidivrs
cwtl
jno
sub
mov
outsl
movsl
lock
ljmp
fdivs
or
popa
xchg
psllw
and
aas
jg
add
pmuludq
jno
add
nop
mov
daa
das
aaa
jne
and
pop
mov
fisubrl
dec
enter
ret
jge
nop
shr
ficoml
lcall
mov
dec
sbb
sub
xchg
fwait
sahf
pusha
adc
cwtl
je
mov
add
ret
mov
leave
mov
ds
mov
mov
inc
imul
jno
jbe
lcall
xchg
fisttps
mov
sti
xchg
imul
and
cmc
jmp
movl
xor
jae
fs
nop
iret
std
push
stc
adc
xor
jae
gs
iret
fbld
sbb
pushl
in
mov
arpl
jmp
cmp
and
fcompl
stos
inc
mov
lods
pop
lahf
es
mov
sbb
sbbl
pop
and
mov
sub
hlt
div
ret
mov
mov
fistl
icebp
xchg
stc
dec
xchg
or
aam
call
and
dec
scas
mov
jecxz
insl
movsb
jb
jnp
jns
rcrb
repz
pop
inc
scas
xor
jl
das
jmp
mov
aad
add
cmpsl
pop
push
sahf
xchg
mov
mov
sbb
iret
sbb
xor
sbb
lock
in
popf
fs
lret
fs
xchg
pop
loopne
data16
decb
cli
mov
xchg
insb
arpl
cltd
rsqrtps
es
scas
pop
rclb
jae
fadd
les
fidivrs
inc
jecxz
insb
jb
jge
adc
and
dec
mov
xchg
hlt
leave
inc
pusha
jl
mov
jae
xor
hlt
js
dec
mov
xlat
loop
jne
jnp
push
ror
in
sub
mov
cmp
call
xor
out
and
pop
sbb
sbb
mov
out
lea
pop
jge
jns
or
sbb
cld
mov
pop
cli
icebp
mov
orl
or
lods
fmull
jp
dec
je
xlat
ja
add
icebp
test
or
aas
mov
mov
dec
out
jo
xchg
cli
fidivl
cmp
mov
jae
mov
ss
popa
aas
cmc
xor
stos
fsubs
xchg
sbbb
mov
push
insb
cmpb
out
and
xor
mov
push
lret
rcll
rcrb
or
mov
sahf
sbb
arpl
fisubrl
mov
xchg
daa
js
push
lea
push
lds
mov
sub
leave
repz
ds
popa
inc
inc
call
or
mov
incb
mov
add
or
dec
bnd
pop
push
addr16
call
scas
mov
loopne
pop
push
imul
sub
and
push
add
out
mov
add
xacquire
bound
test
ja
dec
fsubp
fucomi
cmovbe
rcrl
fldl
nop
ror
ss
bswap
fs
mov
cld
sbb
cmp
jg
inc
or
and
stos
icebp
out
xchg
loop
jo
add
inc
xlat
dec
ja
into
xchg
aaa
es
gs
int3
je
or
mov
ret
fmul
clc
mov
repz
test
or
mov
mov
mov
iret
pop
sbb
pop
mov
xchg
adc
inc
jns
fsub
rorl
into
cmpsb
aas
mov
pop
mov
icebp
adc
add
lods
adc
out
movsl
and
or
aas
inc
and
inc
and
loop
sub
cmpsl
mov
add
mov
xchg
cmpb
das
mov
jnp
fisubrs
jb
or
adc
jl
add
fmuls
adc
scas
and
icebp
or
loopne
mov
mov
iret
mov
scas
cltd
add
scas
xchg
sub
arpl
fisubs
pushf
aas
mov
faddp
xchg
aad
jl
inc
cmp
shr
lea
les
rclb
xor
mov
scas
sub
loope
xor
stos
in
mov
movsb
mov
sub
jbe
pop
or
inc
fucomi
es
xchg
orl
or
jo
test
fisubl
in
popf
inc
cli
add
pop
scas
movsb
cmp
loope
outsl
cmp
lcall
mov
lock
pop
pop
iret
push
sbb
jg
dec
cmp
imul
jnp
mov
lds
push
addl
jae
rcll
lods
push
xor
mov
iret
in
or
jo
cli
add
jnp
cmc
fistpl
mov
add
mov
imul
push
dec
lcall
ret
mov
lea
push
add
inc
xor
mov
push
iretw
add
sbb
add
ds
mov
xchg
out
xlat
fwait
sarl
xor
pavgb
and
and
cmp
cmpsb
sbb
add
cmp
pop
add
mov
iret
mov
xor
rclb
sub
xchg
lahf
insb
cmp
scas
xor
or
inc
pop
dec
outsl
cmpsl
push
sbb
cmp
xchg
jne
cwtl
rcrb
cmpsl
sub
inc
mov
mov
jle
shrb
sub
icebp
ds
orb
popa
and
pop
jmp
aas
xor
test
rcll
ret
lea
push
cmp
in
mov
movsb
mov
call
push
rcrl
in
xor
movsl
ja
inc
or
ficoml
mov
sbb
lahf
dec
adc
fldlg2
bound
testl
push
mov
mov
bound
cwtl
add
imul
mov
fimuls
add
outsl
orl
sbb
ja
out
jo
ja
shrl
sbb
movsb
sub
mov
cmp
add
xor
out
pop
ja
jne
js
push
or
jb
pop
sub
scas
pmaxub
mov
mov
ljmp
or
jns
je
iret
sub
jnp
inc
pop
mov
cld
xchg
xor
lock
fdivrp
and
incb
mov
mov
dec
mov
pushl
add
mov
cli
cmpsb
sti
lods
fstpl
cmpsb
dec
mov
mov
lock
jle
js
mov
aad
popf
inc
ficomps
xlat
cli
rcll
repz
fisttpll
scas
jne
loopne
mov
mov
cmp
mov
jo
or
out
sbbb
cli
test
js
jl
jmp
pop
loope
out
mov
jae
xchg
addr16
adc
mov
push
xchg
pushf
mov
fcompl
inc
inc
adc
popf
or
and
xor
subl
std
push
jae
mov
and
pop
adc
out
jp
stos
mov
sti
ljmp
pop
sbb
push
fucomip
cmp
lcall
out
pop
icebp
cmp
out
cli
pop
lcall
mov
xorl
jb
push
xchg
jl
andl
or
cli
cmpsl
imul
movsl
sbb
test
pop
jae
mov
rorl
popf
lock
xchg
or
insl
lret
mov
imull
xchg
out
mov
jne
fisubrl
ds
mov
out
fisubrl
paddw
pop
mov
jne
andl
cmpsl
xchg
mov
adc
or
lock
pop
mov
sub
test
cmp
jg
unpcklps
xor
cmp
mov
fsts
mov
inc
jp
das
fs
orb
inc
imull
popf
mov
push
mov
mov
stc
imul
fiaddl
rcll
push
loop
pop
cmpsl
mov
loope
subb
cld
roll
inc
gs
dec
push
scas
cmp
arpl
jmp
cmp
sub
xlat
dec
cmp
inc
sub
out
clc
push
movq
adcl
fwait
pop
mov
subl
in
mov
imul
xorl
pop
insb
in
rcrb
mov
ret
adc
jne
push
loope
stos
xchg
and
adc
pop
mov
xlat
test
lret
mov
jno
dec
mov
sbb
jmp
mov
jmp
inc
aam
jmp
lret
xchg
adc
mov
jo
loop
fldcw
xorl
inc
sbb
lret
in
into
xchg
add
mov
xchg
mov
adc
cld
pop
cld
xor
aad
mov
jecxz
or
test
mulb
cs
mov
jo
mov
jae
in
fcomps
daa
xchg
subb
sbb
jecxz
mov
jno
mov
repnz
xchg
or
fnstcw
data16
lret
dec
ret
and
or
inc
add
stos
add
fbld
fcmovbe
xorl
paddusw
push
scas
je
xlat
out
orl
iret
leave
inc
jg
bound
push
sub
mov
hlt
fmuls
loope
jns
xrelease
fidivs
push
rcl
cmpsl
mov
test
loope
cmpl
pop
xor
pop
arpl
lods
xchg
rcrl
cld
or
insl
out
fst
ret
iret
mov
ret
mov
rol
mov
push
aam
mov
popf
int3
push
xorl
mov
rcrl
jbe
push
adc
sahf
imul
imul
aaa
lea
ja
mov
mov
xorl
jp
cltd
mov
jnp
arpl
fnsave
cwtl
push
mov
add
inc
jge
imul
jno
sbb
cmpl
mov
pop
xor
jae
jae
mov
mov
mov
rclb
jg
test
jge
fbstp
rcr
mov
jno
adc
fwait
outsl
leave
ret
cs
cmpl
fnstsw
int
test
fcmovbe
jno
stc
mov
xchg
iret
jecxz
pop
cmpl
int
cmp
mov
imul
int
mov
fwait
iret
jecxz
dec
cmp
mov
inc
sub
or
movsl
jle
inc
mulb
or
mov
inc
aas
adc
or
adc
cld
xor
cli
mov
andl
add
mov
aaa
xchg
pcmpgtd
mov
add
arpl
sbb
ret
add
inc
and
cli
mov
ret
lcall
or
loopne
insl
nop
mov
fs
cmp
and
lcall
out
fnstenv
jecxz
jl
sbb
cmp
push
jnp
push
cld
mov
xor
mov
mov
jge
popl
or
test
xchg
in
mov
fdivr
or
add
flds
jg
inc
add
jae
iret
jp
icebp
push
cmc
daa
iret
popf
or
or
orl
ret
mov
add
and
cltd
jne
jl
or
lock
mov
je
cmp
cmpsb
and
mov
sarb
and
test
icebp
and
xor
in
mov
xchg
popl
and
jmp
pop
daa
cs
cmp
lahf
add
push
sbb
stc
or
test
iret
xor
fcmovnb
cmp
mov
repnz
int
popf
jae
xor
das
roll
arpl
or
or
mov
stos
rcll
inc
arpl
mov
xor
xchg
pop
in
sahf
xor
cli
into
and
aas
in
std
int
ffree
mov
or
sbb
inc
mov
xchg
arpl
insb
in
insl
cli
aas
mov
pop
arpl
push
addr16
push
rcrb
ret
xlat
movl
or
pop
dec
popa
inc
xor
mov
xor
inc
or
imul
rcll
cld
cmp
mov
pop
hlt
sub
addb
push
insl
shl
adc
dec
cmc
inc
daa
jle
cmp
xchg
jns
sti
cmp
sub
orb
push
sbb
fwait
pop
imul
ds
pop
jno
jae
jge
add
push
insl
xchg
hlt
lcall
or
daa
loop
sub
dec
cmp
arpl
lret
sbb
xorb
out
fsub
ret
dec
iret
mov
or
lea
shrd
xchg
fcoml
pop
xor
push
adc
cmp
ret
testl
mov
fdivrl
orb
mov
lea
movsl
and
and
push
add
out
bnd
fs
xchg
cmp
mov
jecxz
gs
out
testb
add
scas
pusha
leave
in
shrl
mov
insl
pop
pop
fistps
imul
shrl
cld
leave
inc
movsl
pop
bound
jno
fs
sbbl
andl
ret
lds
push
hlt
fisubrl
add
div
xchg
xchg
xchg
mov
lahf
fwait
insl
push
popa
jp
roll
add
cmp
cmpl
cmpsb
mov
add
and
jnp
mov
sti
dec
imull
jp
pop
jmp
mov
in
lahf
imul
mov
add
cli
pop
and
fabs
lods
jg
xchg
aam
sbb
push
cli
mov
jle
shl
inc
push
rcrb
int3
into
out
adc
mov
iret
or
sub
leave
popf
scas
dec
sbb
es
mov
mov
cwtl
pop
mov
jge
push
add
xchg
lcall
das
add
test
ljmp
pop
stos
sub
sti
adc
and
pushf
dec
sti
call
mov
pop
ja
xor
inc
cmp
jae
iret
xor
cld
fnstsw
inc
aam
stos
mov
iret
add
mov
cmpsb
jno
mov
js
nopl
sub
jmp
mov
pop
lea
pcmpgtw
iret
xchg
sbb
sub
and
jnp
insl
cmp
mov
cltd
fstpt
dec
ficomps
mov
and
cmp
lock
mov
xchg
lcall
fistpll
nop
xor
and
jnp
cmp
cmc
mov
lds
xor
orb
fisubl
push
mov
in
sbb
lcall
xchg
cmp
mov
iret
jle
add
mov
test
mov
iret
je
popa
xor
sbb
jne
icebp
sbb
and
pushf
ja
clc
popl
inc
mov
idiv
out
movsl
jp
sarl
js
test
jnp
cmc
add
andb
sub
data16
jl
jno
mov
inc
lahf
mov
ja
sbb
aas
sbb
fidivrs
sbb
dec
lcall
mov
dec
sub
sbb
dec
jae
jmp
aaa
or
add
ljmp
pop
and
cmc
outsl
sub
push
cld
ds
insl
lds
push
out
insb
repnz
mov
xchg
sub
ja
in
or
aam
out
xchg
shrb
shll
gs
jg
mov
and
sbb
or
mov
mov
jl
mov
fsubrs
fildll
jg
lahf
daa
test
test
mov
mov
jp
push
out
jo
mov
gs
jl
adc
jns
cmpsl
or
or
jg
jmp
loopne
in
jle
mov
mov
push
cld
adc
mov
and
inc
xor
sbb
add
jmp
jae
fcom
into
fmuls
mov
push
dec
mov
adc
adc
xor
add
cmpsl
std
add
arpl
mov
mov
dec
testl
orb
into
es
or
leave
fadds
lods
lock
push
nop
xlat
xor
xchg
arpl
arpl
test
mov
fcompl
add
jle
adc
popf
push
cmp
sbb
and
insb
push
insb
xchg
inc
loop
lds
or
or
or
mov
mov
push
nop
cmp
push
sub
lcall
inc
cs
mov
pop
or
adc
bound
push
pop
aad
xor
shll
out
sbbl
mov
inc
nop
lea
fs
sbbb
jp
add
sbb
test
test
decl
scas
jp
scas
shrl
ret
sub
icebp
repnz
sbb
inc
outsl
mov
inc
loope
add
adcl
xchg
aam
popa
addr16
iret
dec
test
pop
xchg
sbb
ljmp
rol
jo
js
jb
adc
aas
fiaddl
orps
push
sub
mov
daa
ljmp
and
int
sub
imul
mov
cmp
outsl
xchg
or
addb
shrl
jb
sbb
call
jno
es
xor
or
das
lea
jmp
fcomps
loop
sahf
in
or
jnp
lcall
scas
rolb
jmp
js
arpl
pop
jg
fcomip
outsb
ja
mov
jge
adc
ror
add
jl
jg
push
pusha
imul
jg
shll
push
jae
cmp
ljmp
repz
add
adc
jle
test
data16
jnp
cmp
and
xorb
mov
jg
into
sbbb
jae
lret
in
and
jle
cmp
jecxz
mov
mov
fdiv
mov
ja
std
into
out
fstps
fwait
ja
loopne
jnp
jbe
in
int
jge
lahf
sub
xor
popa
test
jne
jno
jnp
dec
mov
ret
lds
aad
push
jge
ret
enter
outsb
jnp
scas
mov
scas
fstpt
mov
fnstsw
pop
xchg
testl
xchg
inc
shll
insl
imul
addr16
into
xlat
mov
outsl
sbb
pop
or
iret
sub
fstpt
lods
jmp
xchg
jns
jnp
stos
rcrb
outsl
int
imul
sub
jecxz
push
rol
stc
stos
jae
add
aaa
leave
adcl
jg
jb
shrb
mov
mov
jo
jecxz
cmp
lds
lret
jno
jnp
insl
cmp
sub
iret
movsl
iret
push
leave
mov
fidivrl
or
loopne
jecxz
repz
jecxz
idivl
rcrl
repz
jle
iret
mov
xchg
fistpll
movsl
jno
lahf
jnp
ja
idivl
fwait
push
mov
lahf
bnd
fldcw
movsb
cmc
mov
jnp
jle
push
push
rol
gs
sbb
mov
mov
cld
jl
mov
and
jl
sbb
sbb
fbstp
push
add
pushl
imul
pop
loope
sub
int
shr
orb
xlat
or
pop
sahf
cmp
inc
lcall
pop
mov
cld
xor
test
xchg
ror
shll
dec
pusha
testb
jecxz
cs
jle
pop
iret
mov
push
punpcklwd
in
sub
jb
movsb
or
fs
sbbb
sub
mov
fiadds
cmpsl
ret
jns
inc
ficoml
pushf
push
jmp
rclb
or
inc
iret
mov
sbb
bswap
hlt
push
jp
dec
div
cli
push
or
lods
jne
pop
out
fcmovnu
jg
rcll
lock
mov
push
push
pop
or
inc
icebp
jle
rcrb
mov
imul
call
int3
mov
mov
pop
lret
cmp
arpl
inc
mov
dec
lahf
add
lds
pushl
inc
mov
cmp
imul
jl
sarl
ret
xor
sbb
fst
push
pop
jo
decb
sub
scas
iret
lock
push
in
jmp
sbb
mov
icebp
insl
sbb
fnsave
jp
bound
add
jg
cmpsl
or
in
std
jo
out
mov
iret
sbb
adc
push
cld
cs
out
enter
pop
inc
xor
js
test
jns
mov
sahf
ficoml
in
clc
test
push
xchg
out
aas
pop
add
loopne
repnz
mov
xchg
cmp
rdmsr
idiv
add
inc
jmp
mov
mov
outsl
fmuls
orb
in
jno
xchg
mov
mov
cmp
mov
shr
ljmp
and
call
movsb
and
lock
stc
fmull
adc
and
pop
out
ljmp
rsqrtps
jb
jns
pop
mov
push
sub
lret
gs
mov
ret
addr16
mov
flds
fdivs
pop
xchg
mov
adc
mulps
bound
out
int
mov
sbb
jnp
xchg
popa
fldt
jb
test
cmp
mov
mov
icebp
ret
sbb
pop
testl
cmpsb
push
outsb
fldln2
mov
push
xor
ja
pop
aam
mov
popa
mov
and
inc
inc
gs
dec
cli
sarl
cmp
mov
xor
fsubrs
mov
sbb
dec
in
adc
push
jmp
nop
or
lock
mov
pop
xchg
fsts
adc
popf
add
pop
add
sbb
imul
jae
addr16
imul
adc
pop
into
test
pop
jae
fcmovbe
test
sbb
pop
push
adc
das
sarb
cmpl
insl
std
mov
add
cmp
call
cld
ds
add
outsl
add
pop
cmp
das
outsb
cmpsl
ss
test
fucomi
shlb
outsl
in
orb
mov
bound
or
daa
mov
testl
jge
mov
insb
jns
popf
jne
js
inc
and
test
sbb
or
xchg
sbb
vmread
or
cmp
repz
mov
sub
adc
fwait
loopne
push
outsl
pop
dec
subl
mov
iret
arpl
nop
stos
fadd
cld
inc
xchg
bound
int3
and
iret
cmpsb
cmp
jge
mov
stos
add
cmp
fdivrs
inc
mov
mov
push
jb
aam
push
hlt
rorb
sbb
addps
fildl
mov
ret
popa
sbb
cli
paddusb
loope
lds
jb
es
scas
nop
add
pushf
mov
mov
popf
mov
mov
adc
xchg
and
nop
dec
xlat
dec
sbb
dec
mov
stc
sarl
mov
ficoml
cld
and
jp
sub
push
stos
jge
jno
psllw
iret
adc
pusha
sbb
mov
mov
enter
cmp
mov
dec
andb
mov
std
es
aad
inc
repnz
in
movsl
leave
xchg
mov
jmp
add
fisubrl
fstl
and
fcmovnb
cmp
orb
movsl
popa
jg
ja
lods
mov
movb
rolb
add
mov
xchg
nop
aam
outsl
pop
or
lock
arpl
inc
push
lea
lret
shll
stos
mov
add
pop
js
jb
imul
aaa
push
cmpsb
xor
lds
mov
stos
clc
shll
mov
imul
je
xchg
stos
mov
sarl
push
xchg
inc
adc
mov
adc
lods
xchg
push
in
pop
in
jns
xchg
xor
sbb
and
aas
and
pushf
dec
mov
addr16
jnp
and
int3
cmp
ret
inc
xor
cmpsb
leave
cmp
pop
leave
dec
clc
aam
pushf
sahf
inc
xor
test
jge
mov
jmp
scas
mov
mov
adc
fnstcw
push
jecxz
pop
lcall
cli
sbb
cld
pop
pop
jo
push
insl
jle
pusha
rol
rcll
jmp
hlt
cmp
fldcw
repz
notb
xchg
jno
sbb
pop
or
sbb
stos
add
stos
nop
mov
insl
mov
xchg
sahf
es
cmpsb
adc
mov
pop
in
pop
mov
in
push
pop
mov
lret
outsl
adc
mov
mov
icebp
push
mov
in
add
call
ret
mov
push
mov
jmp
arpl
xchg
pop
rcll
ja
rcrb
jle
addr16
pop
jo
aas
lret
popa
sbb
add
mov
mov
das
addr16
sahf
pop
test
cmc
sbb
pop
xor
orb
loope
adc
dec
pop
jp
lret
pop
cltd
and
out
aam
loope
sbb
mov
inc
mov
cld
jno
pop
lods
addr16
fstpl
jp
sbb
xchg
andl
jo
jl
mov
mov
cli
outsl
fstpt
sub
xchg
js
fistl
mov
sar
cli
incb
cltd
add
repnz
popf
fs
adc
add
mov
inc
cs
mov
lods
mov
cmp
sub
and
ja
add
jns
mov
jo,pt
dec
loop
sbb
and
mov
or
ret
mov
stos
rcll
stos
push
test
or
loop
jge
cld
icebp
out
flds
iret
sub
push
fs
jb
aaa
scas
in
and
bound
cmp
mov
insl
mov
ds
jae
pop
mov
mov
jg
leave
add
stos
cmp
outsl
pop
stos
ljmp
imul
xchg
clc
fildl
adc
iret
lcall
xor
inc
push
lods
hlt
or
and
xchg
sbb
lods
out
and
rorl
jno
scas
in
cmp
aad
mov
dec
mov
div
inc
stc
jge
mov
dec
sbb
or
cli
sub
sub
pusha
xchg
cmp
test
xor
cld
aam
int3
ja
adc
pop
addl
faddl
pop
push
or
and
adcb
fwait
adc
addl
repz
cmpsb
xchg
push
rol
sahf
mov
int3
lock
cltd
mov
xchg
mov
and
loope
and
insl
fsubr
pushf
add
or
dec
xchg
mov
lahf
ret
pop
jno
mov
or
jne
inc
pop
mov
xor
arpl
xlat
insl
mov
inc
shr
jle
adc
jae
orl
cs
or
arpl
pop
lock
or
cld
mov
fiadds
adc
mov
ds
add
popl
in
xlat
dec
mov
cwtl
jae
mov
mov
lock
mov
pop
outsl
xchg
mov
ja
sbb
xchg
shrb
xchg
mov
arpl
inc
xchg
inc
cmpsl
mov
stos
and
mov
mov
pop
subps
cmpb
jb
test
jg
xchg
std
mov
adcb
or
bound
rcrl
adcb
insl
push
fldt
xchg
enter
pop
leave
cmp
popa
sbb
mov
pop
cs
test
subl
jle
imul
arpl
popa
out
sbb
mov
push
xor
test
xchg
inc
addr16
mov
and
mov
mov
inc
jg
mov
packssdw
lods
rorb
andl
fmul
pop
fstl
jb
stc
mov
cmp
fmuls
mov
ret
in
roll
lock
mov
decl
popl
xor
mov
xor
adc
ret
incl
es
mov
mov
aad
push
and
ret
lea
adc
sbb
fmuls
ljmp
adc
rcr
mov
inc
aas
or
or
xchg
jge
aas
xchg
aad
xor
ds
ret
imul
outsl
fsubr
sub
cmpl
pop
shl
inc
hlt
icebp
jns
fisttpll
aam
ret
ds
mov
mulb
dec
fstpt
sbb
movsbl
pop
or
add
fwait
add
imul
int3
fcmovnb
stc
pop
ret
adc
and
mov
repnz
lahf
pop
mov
sbb
dec
movzwl
pop
fdivrl
jp
fsubp
xlat
and
movsl
jno
mov
int3
imul
pop
sbb
cmp
xor
scas
and
pop
mov
iret
dec
mov
xor
and
pop
std
notl
jae
inc
int3
fwait
push
jne
mov
fbstp
cmp
flds
pop
push
fisttps
jno
adc
pushf
repnz
add
addb
pop
in
loopne
out
mov
aas
nop
imul
mov
inc
push
mov
jno
mov
add
adc
rcrl
fdivrs
dec
jne
sub
test
fs
push
and
cmp
mov
xor
or
or
cld
sub
roll
in
sbb
xchg
inc
orb
pop
aas
adc
es
cli
addl
aad
lds
fdivs
popa
jl
dec
cwtl
lahf
mov
scas
icebp
lcall
add
and
mov
cli
push
mov
scas
pushf
and
stos
test
jg,pt
mov
divl
popa
inc
fwait
and
mov
cmpsb
mov
repnz
pop
fidivl
sub
push
adc
mov
add
test
out
or
into
mov
fildll
xchg
mov
or
ret
add
jo
push
push
test
mov
mov
stc
fnstsw
sbbl
lcall
pop
cld
ret
sahf
jae
xchg
mov
andb
cwtl
outsb
mov
jns
lods
mov
add
arpl
orb
fstps
mov
rol
mov
add
add
jo
fcompp
mov
pop
or
mov
iret
loopne
ret
xor
adc
enter
lock
fsubp
or
xor
adc
in
out
xchg
das
in
outsl
int3
notl
dec
cli
mov
push
push
fbld
inc
pop
cld
out
movhps
jecxz
in
iret
mov
test
addr16
xchg
sub
pop
das
dec
adc
mov
icebp
sbb
data16
sbb
inc
clc
sbb
sbbl
lock
cmp
jp
in
sub
and
or
xchg
jnp
jg
ret
fisubl
repz
movsb
jno
push
inc
rclb
into
sub
or
jae
xor
call
int
inc
shll
mov
mov
aaa
ret
iret
imul
inc
in
and
mov
cmpsl
cmp
xor
sub
sub
test
lock
cli
pushf
movsb
push
xchg
cwtl
in
cmp
fisubrs
call
shl
xor
mov
xor
pusha
pop
ja
mov
mov
imul
xchg
pop
dec
or
popl
xchg
stos
and
andl
pop
jmp
mov
add
push
or
mov
push
cmp
je
jnp
mov
mov
jp
push
jmp
add
dec
rorb
adc
jecxz
mov
popl
sbb
cmpsb
arpl
pop
cmp
icebp
addl
sti
add
jecxz
or
fdivs
filds
icebp
xor
sar
test
fistl
pop
mov
push
push
test
dec
xchg
lock
imul
jb
mov
pop
stc
cld
cmp
sub
mov
xchg
in
push
xchg
scas
in
shlb
cmpl
inc
mov
and
pmaxub
cli
pop
mov
inc
jae
leave
sbb
shll
mov
cli
cmp
add
dec
dec
inc
add
imul
in
cmp
cmp
sbb
dec
and
es
or
imul
push
mov
jg
inc
pop
or
addb
clc
pop
adc
int3
mov
mov
and
fcmovnbe
in
sbb
mov
nop
jb
aaa
mov
fcoms
loopne
push
mov
int
xor
addb
jle
jo
loope
addl
mov
jnp
andps
scas
xchg
enter
cmp
sub
dec
and
shlb
inc
iret
mov
cmp
enter
lds
aad
data16
aam
mov
or
arpl
add
mov
xchg
mov
xchg
pop
notb
cmpsb
in
testb
in
fidivl
in
pusha
inc
xchg
aam
testl
cmpsl
sbb
popl
mov
sbbb
jo
mov
iret
pop
bound
pop
bound
lods
xchg
inc
out
sbb
push
add
test
dec
mov
iret
jecxz
paddd
scas
fs
aas
and
jg
or
or
adc
icebp
xlat
or
clc
jmp
adc
cmpl
adc
pop
mov
mov
mov
fwait
pop
mov
mov
in
xchg
out
cmpb
test
test
and
xchg
cmp
push
lcall
mov
int
jne
push
jae
mov
mov
add
sti
xchg
into
std
cwtl
inc
pop
stc
lods
imul
lods
cmp
sti
mov
push
add
pop
js
mov
test
push
pop
sub
ss
sub
xor
aam
pop
dec
stos
clc
cmpsb
nop
mov
pop
fmul
xchg
pop
mov
jns
and
call
push
push
jae
in
in
in
std
or
scas
adc
popf
sub
fwait
jmp
jmp
mov
cli
pop
pop
test
cli
jbe
or
add
or
pop
push
lret
xchg
push
xchg
imul
nop
arpl
lock
cld
incb
jge
inc
jne
mov
orl
lcall
and
adc
mov
fidivrs
push
jne
jge
insl
cld
mov
xchg
sub
cmp
imul
pop
inc
push
inc
mov
adc
mov
movsb
test
pop
sbb
cmp
push
pop
sub
sub
mov
lock
pop
sbb
std
push
sbb
iret
fwait
js
xchg
in
cmp
mov
test
lock
outsl
mov
jbe
fstpl
xor
adc
aad
adc
cvtps2pi
lahf
cmp
mov
pushf
dec
fidivl
mov
inc
pop
fidivl
mov
inc
arpl
inc
ljmp
outsl
dec
pop
pop
data16
adc
in
xchg
inc
pop
rcl
and
pop
cmp
xchg
push
jge
sbb
sub
push
adc
mov
lea
aad
mov
mov
push
sbb
xchg
sbb
push
push
out
fs
lahf
mov
imul
jle
mov
jle
jae
cmp
inc
pop
ficomps
pop
js
sahf
push
insb
and
scas
fmull
xchg
into
jnp
mov
pop
xchg
addr16
sti
fidivrl
jp
jmp
addr16
jbe
sub
shl
pop
hlt
mov
stos
inc
rorb
cs
fstps
mov
inc
or
cmp
xchg
mov
jle
imul
or
mov
aas
push
imul
in
mov
dec
mov
cli
rcll
or
mov
lahf
add
clc
pop
mov
ss
insb
add
lcall
aaa
scas
cmpb
push
and
iret
lret
aam
rorl
mov
sub
jnp
lret
sahf
ljmp
mov
movzbl
add
pop
pop
stos
add
push
jo,pt
push
and
hlt
add
insl
arpl
xorb
and
std
pop
push
jbe
pop
mov
iret
xchg
loope
repz
cmpsb
xchg
lea
jno
sahf
int3
push
mov
or
mov
gs
jp
mov
dec
sub
push
mov
lcall
push
push
push
push
sti
xor
sbb
rcll
sub
and
xor
jne
insb
fcmovbe
or
mov
push
in
shr
fsts
stos
push
dec
fwait
lock
dec
arpl
inc
mov
mov
jecxz
imul
or
bound
cltd
xchg
sahf
inc
dec
loop
xchg
popf
xchg
out
sub
shll
stos
fucomp
mov
shrl
cmpsl
and
cmp
inc
dec
ret
push
or
xrstors
xchg
jg
lods
movsb
jns
fsubrp
outsl
and
ja
cltd
or
test
lahf
push
ljmp
cmp
sub
mov
add
ds
mov
clc
inc
pop
sti
divb
subl
mov
pop
and
lods
jne
jg
mov
stos
mov
jl
mov
add
ja
sbb
ret
rolb
xchg
test
add
mov
dec
incb
xchg
mov
arpl
cwtl
add
sahf
iret
lods
jp
cmp
jne
lock
add
and
xchg
dec
sar
mov
sbb
xor
cltd
xor
nop
jnp
cmp
ja
pop
jg
arpl
arpl
mov
push
or
jg
call
jae
mov
sbb
shr
ja
xor
dec
out
ret
jb
ret
jp
ret
mov
or
sub
mov
pop
xchg
jae
jmp
adc
lcall
int
cmc
ja
lock
insl
inc
mov
mov
jg
mov
sbb
jae
jae
jae
xor
cs
sbb
ja
jbe
xor
test
jg
ja
sub
cwtl
subl
jnp
stos
out
sbb
mov
push
add
mov
mov
pop
adc
lahf
or
pop
outsl
cmpl
xor
mov
loop
jmp
fstpt
shrl
shll
pop
dec
add
sbb
lods
test
dec
jge
jnp
push
pop
jae
test
arpl
imul
inc
mov
jnp
jno
repz
jns
jnp
fcmovnb
mov
jae
mov
jae
shll
mov
jnp
lahf
stos
mov
push
lahf
aad
xchg
cmp
ret
das
outsl
movsl
inc
jnp
arpl
inc
imul
jg
fistpl
push
mov
jge
mov
jge
xor
jno
jno
sahf
xchg
lods
lods
out
shlb
js
fwait
mov
mov
mov
popf
repz
jae
mov
xchg
jb
into
xchg
movsl
lret
jp
mov
jae
mov
gs
js
int
scas
jg
fwait
pop
push
lods
add
popf
aad
jge
int
mov
push
movsl
adcl
mov
mov
cmp
lods
mov
imull
repnz
cwtl
in
adcb
lock
mov
imul
mov
mov
ficoml
sub
cmpsb
arpl
xchg
fstps
adc
mov
xchg
and
daa
movsl
push
in
sub
jno,pn
lods
popf
incl
sub
mov
xor
sete
jle
fs
pop
mov
sub
xor
sub
rcrl
sub
cmp
cmp
sbb
mov
ja
sbb
and
adc
ret
inc
xchg
mov
dec
shlb
fstpt
sbb
sbb
and
sar
out
inc
sub
lea
xchg
mov
mov
pusha
dec
rorl
fcmovnbe
pop
pop
cmp
fstps
dec
cmp
mov
insb
lret
ljmp
lock
mov
xor
fbld
jge
scas
xor
test
leave
pop
and
ret
lahf
test
mov
xchg
repz
xor
mov
dec
mov
shrb
ret
pushf
sub
lods
clc
jle
clc
sarl
jg
fwait
inc
popf
popl
pushf
push
pop
popa
outsl
mov
sub
lock
mov
inc
sbbb
jg
jbe
bswap
inc
and
cmpb
jmp
enter
xchg
shrl
movsb
jmp
outsb
cmpb
xchg
dec
xchg
xchg
and
push
pop
in
add
les
mov
mov
fistpl
inc
xor
sbb
xchg
bnd
stc
cmovl
mov
daa
cmp
mov
cltd
rclb
ja
jp
scas
arpl
push
repz
daa
ljmp
push
or
lds
imul
sbb
mov
adc
emms
lcall
test
icebp
pop
xchg
rolb
and
andl
test
ficoml
test
sub
xor
mov
and
mov
sbb
sub
enter
ret
and
cli
xorb
lods
scas
ljmp
or
jp
js
or
out
mov
imul
subb
fiadds
sub
add
fstl
and
add
call
lahf
sarl
and
cmp
test
inc
inc
mov
fs
push
jae
mov
test
mov
dec
jg
js
pushf
pop
popa
and
shll
pusha
push
outsl
mov
fwait
pop
push
push
rolb
int3
or
pushf
jns
cld
jmp
jmp
sub
xchg
out
stos
lea
ret
iret
fwait
js
mov
dec
cmpsl
incl
ds
push
jg,pn
sbb
mov
mov
and
test
scas
ss
push
inc
fadds
ds
hlt
lea
sbb
pop
fs
fmulp
sahf
fistl
mov
jns
outsb
jp
incb
imulb
jo
or
lea
iret
add
or
pop
imul
sub
pop
movsl
and
popa
les
and
mov
rol
sar
ficoms
lcall
sub
mov
out
sub
sub
cmc
loope
fists
mov
xor
dec
push
shrb
and
mov
mov
decb
jns
jno
adc
insl
pop
mov
xchg
test
dec
inc
outsl
push
and
sbb
cmpsb
mov
xchg
inc
pop
pop
sbb
popa
scas
xchg
inc
pop
lock
fwait
hlt
lcall
add
jmp
in
in
in
jns
scas
xchg
fbstp
jge
scas
adc
sbb
daa
push
aam
or
movq
sub
pop
subb
xor
aad
sub
and
mov
fstpt
arpl
loopne
out
gs
jb
pushf
sarl
fcoms
sub
xlat
aas
pop
paddsb
and
mov
popa
jmp
iret
nop
sti
loope
add
test
ret
mov
and
mov
cld
aam
adc
fisubl
mov
add
push
jecxz
in
lret
pop
fdivrl
jp
push
push
mov
mov
aas
jb
shll
fisttpll
dec
cld
rclb
pusha
fisubrs
shlb
loopne
mov
in
inc
adc
xchg
pushl
jmp
testb
xchg
xchg
bound
xchg
icebp
sbb
fsub
mov
sbb
pop
or
cmp
fisubrs
push
mov
push
daa
scas
mov
sbb
mov
push
push
roll
jo
pop
adc
cmpsl
lret
mov
lret
push
push
dec
clc
addr16
inc
mov
pop
insl
inc
mov
ret
adc
out
mov
xchg
lret
addr16
pop
jp
add
mov
ret
lahf
add
adc
fcmovne
jns
sub
mov
sbb
xchg
add
push
xchg
scas
inc
icebp
pop
push
popa
test
push
rolb
jns
or
rclb
outsb
mov
mov
ja
fadds
mov
inc
in
mov
push
mov
pop
and
mov
sbbb
jg
inc
cmc
jnp
punpckldq
sub
xor
xor
test
jle
out
adc
mov
aad
adc
insb
inc
pop
js
call
cmpl
pop
jae
xchg
sets
sub
jno
sbb
aas
je
mov
popa
inc
fidivs
and
mov
inc
aad
xor
rolb
outsb
cmp
dec
mov
dec
cwtd
sub
clc
dec
dec
mov
icebp
stos
xchg
xchg
xor
ds
repnz
jl
or
add
pusha
and
push
add
pushl
lea
mov
ret
test
aam
cmc
dec
mov
iret
pop
jle
popa
xchg
mov
stos
mov
sub
repz
fidivrl
icebp
pop
adc
shrl
or
in
jp
mov
lock
inc
popa
adc
xor
sbb
lds
mov
icebp
int3
sub
jne
and
push
fmul
mov
in
out
data16
and
push
mov
push
aam
ret
mov
push
faddl
scas
aam
cmpb
fcomip
int
push
mov
mov
pop
out
fldcw
js
pop
cmp
jb
loope
ljmp
jecxz
aas
xor
pop
adc
sub
repz
push
fiadds
cmpsl
stos
mov
push
push
in
popf
mov
jae
movsl
mov
ror
fstps
loopne
xor
js
jae
cmp
clc
jmp
pop
sub
aas
fisubrl
ror
mov
lock
or
es
in
out
mov
mov
movsb
sbb
pop
adc
jecxz
and
int3
sub
rcll
cli
rcrb
sub
scas
hlt
add
das
mov
push
out
jecxz
sbbl
and
dec
push
bound
adc
cmp
or
xor
in
fdivrs
mov
flds
cwtl
sahf
sbb
or
push
jle
and
popl
in
enter
imul
data16
xor
ret
frstor
lcall
subl
sti
jge
pop
bound
dec
sbb
mov
mov
sub
sahf
in
test
insb
pop
jae
push
testb
cs
and
arpl
jns
mov
xchg
js
sbb
xchg
pop
and
cmp
cli
adc
push
notb
je
and
jnp
fsubrs
insb
mov
cmp
sub
aas
pop
shlb
lcall
pop
inc
aad
ret
mov
sahf
outsl
mov
mov
fwait
insb
mov
mov
jl
xchg
das
sub
sarb
aas
mov
scas
lahf
pop
add
cmp
movsb
aam
loop
pop
hlt
jge
popf
lret
mov
xchg
incl
icebp
push
cli
enter
sub
lods
imul
shll
mov
adc
imul
push
pop
dec
xor
std
nop
out
stos
mov
int3
cmp
lcall
iret
push
jns
xor
push
sub
mov
pop
adc
mov
pop
ret
adc
arpl
jns
pop
outsb
js
stos
or
subb
rcll
test
mov
xor
pop
xchg
and
dec
daa
pop
cmp
test
aaa
push
or
sbb
and
sbb
or
and
xchg
imul
xor
outsb
cmpl
repz
mov
jecxz
cmp
icebp
shlb
lock
add
and
jle
ret
sbb
mov
or
out
shll
and
std
subl
push
out
shll
dec
inc
mov
jg
mov
jp
xchg
mov
mov
lock
jge
in
out
into
out
mov
mov
mov
stos
in
imul
jno
je
fcoml
aas
push
and
sub
test
sub
cmpsb
mov
jp
mov
cmc
sbb
xor
leave
and
in
xlat
sub
add
cmp
mov
pushf
xchg
dec
push
jmp
or
push
icebp
outsb
out
xchg
or
add
fstpl
std
in
into
ss
or
jge
arpl
movb
jnp
or
xor
sub
lock
jg
enter
or
and
gs
pop
adc
pop
outsb
cmpsl
cli
jnp
pop
sbb
stos
enter
daa
ret
cmp
push
data16
pushf
inc
out
push
mov
mov
sbb
pop
push
fs
lahf
mov
insl
call
adc
sbb
mov
fs
nop
mov
push
xor
cwtl
mov
pop
jg
sbb
out
push
cmp
lcall
inc
cli
incb
xchg
les
mov
jne
sahf
pop
push
xchg
inc
int
lock
push
pop
xor
in
sub
inc
mov
dec
mov
insl
adc
push
mov
movnti
imul
xchg
mov
lret
sbb
jns
cmp
jns
ret
sbb
fiadds
rolb
pop
fbstp
addb
cmp
sub
icebp
mov
pop
sbb
jmp
loop
cmc
in
fwait
mov
mov
leave
sub
mov
push
addb
sub
shll
adc
cmp
mov
sahf
shlb
mov
lcall
in
push
lcall
addr16
lret
jae
repnz
jbe
and
ja
add
shll
js
icebp
xlat
add
imul
orb
add
lds
ja
xor
inc
rorl
push
rsqrtps
mov
xchg
cmpsl
iret
jle
add
inc
mov
fs
mov
scas
nop
xchg
insb
in
es
lods
pop
push
or
pusha
fisubrs
and
cmpsb
push
enter
fs
dec
scas
xor
jne
cld
clc
mov
sub
aam
shlb
icebp
test
orb
fdivrs
mov
sub
ret
iret
movsb
sbb
jae
add
mov
and
jns
fsubrs
jno
lods
pop
or
jnp
mov
push
jns
mov
push
lods
mov
dec
xor
mov
jge
jecxz
mov
inc
data16
lahf
pushf
ret
adc
mov
sub
push
mov
mov
in
push
leave
nopl
testl
fists
push
icebp
pop
pushf
push
push
jmp
lret
mov
fwait
lea
lcall
arpl
push
pop
sub
icebp
sub
add
sbb
or
or
jmp
mov
jo
dec
xor
hlt
xor
xor
repz
and
outsl
xchg
enter
stos
and
popf
lds
xchg
mov
cmp
gs
aas
leave
push
mov
movsl
outsl
adcl
push
xor
add
icebp
shlb
mov
insb
mov
or
mov
jnp
faddp
pushl
in
dec
inc
in
stc
pop
jne
adcl
repz
in
push
xchg
jo
inc
pop
xchg
into
pushf
scas
test
jl
xchg
fisubrl
mov
popf
mov
and
mov
and
add
leave
mov
aam
xchg
and
dec
mov
jge
sahf
lret
adc
dec
dec
mov
jo
sbb
shlb
stc
test
ret
xor
jns
daa
icebp
es
push
mov
ret
mov
adc
pop
fmull
mov
test
mov
fucom
divps
fucomi
push
mov
sub
fcmovb
shlb
sbb
leave
xchg
or
sbb
and
ds
adc
imul
ror
jne
int
lock
leave
in
cmp
das
outsl
cmp
and
loopne
pop
sbb
and
pop
dec
jp
roll
cmc
cltd
int
mov
mov
lods
loopne
mov
test
add
add
fdiv
jl
pushf
adc
push
rcr
addr16
mov
out
imul
cli
pop
mov
fdivs
xor
sti
mov
leave
dec
ds
jo
cmp
pop
das
adc
ja
negl
out
outsb
adc
cmp
movsl
xchg
in
jne
mov
outsl
cld
mov
flds
xchg
push
jne
and
std
out
fists
loop
adc
outsb
cld
lahf
ret
add
add
cs
stc
scas
data16
aaa
leave
sub
pop
jecxz
sti
inc
hlt
test
outsb
pop
es
lahf
xchg
dec
test
mov
aad
int3
add
hlt
mov
mov
add
pop
dec
and
sbb
fisttpl
cmp
pusha
add
inc
jne
lds
insb
aaa
adc
xchg
std
mov
inc
cld
mov
scas
mov
test
mov
popl
fs
fnstcw
cs
shll
cmc
jle
int3
push
sbb
mov
sbb
add
mov
lods
repz
mov
mov
xchg
cs
or
and
xlat
mull
icebp
push
jns
lods
sbb
sbb
sub
jno
sarl
dec
xchg
in
adc
into
mov
icebp
cs
fbld
jp
mov
jnp
xor
dec
les
sbb
dec
jp
rcl
lods
cmp
popa
sub
jbe
fnstsw
test
fwait
loopne
xchg
sub
pop
mov
mov
xchg
addl
movsb
jb
sbb
cmpsb
xor
xchg
mov
pop
mov
add
rcl
repz
jmp
popa
dec
mov
sti
or
call
cmp
cmp
or
mov
adc
push
mov
jb
clc
pop
jns
inc
jp
shr
pop
loopne
pop
push
arpl
das
mov
fnstenv
dec
popl
mov
bound
mov
ficompl
cli
gs
mov
fs
add
mov
push
push
jnp
aaa
sbb
popa
das
mov
imul
fdivrl
aaa
divl
bound
pop
ja
mov
mov
ljmp
push
cli
push
mov
push
in
push
mov
mov
cmp
adc
and
aam
test
dec
sarl
popf
cmpsl
jae
scas
sub
mulb
shrb
rcr
shr
das
fists
fcoms
sub
jo
mov
mov
js
das
or
xchg
jle
lods
pop
jle
pushf
movsb
mov
mov
ret
adc
inc
mov
setbe
sbb
out
sub
into
in
sub
sqrtps
sub
sahf
shlb
xor
lds
int
clc
pushf
or
mov
cld
leave
lea
and
mov
aas
sub
orl
sbb
and
dec
cmp
out
cmpsb
fidivl
xor
punpckhbw
sub
push
fcomi
mov
sub
sbb
push
or
ja
pop
jmp
mov
inc
cmp
mov
insl
or
mov
inc
xchg
jne
jg
imul
sub
xor
xchg
shrb
and
rcrl
stos
cmp
out
jp
sub
loopne
add
jne
in
js
test
out
popf
push
mov
pop
mov
dec
push
jno
outsl
pop
decl
pop
rolb
xchg
rorb
enter
cmp
sti
sbb
arpl
ds
dec
je
icebp
shr
dec
xchg
inc
pop
setno
mov
insb
jae
cmp
roll
add
pop
xor
subb
hlt
jle
outsl
push
xchg
dec
in
decl
xor
cs
inc
test
xor
mov
repz
adc
sbb
inc
lock
out
sub
outsl
pop
pop
aaa
in
push
xchg
sbb
aam
add
pop
popl
sub
dec
ret
xchg
and
and
mov
jns
pop
addr16
lea
jp
mov
jg
out
mov
dec
jb
lea
aas
xor
and
out
subl
push
imul
and
cmp
enter
sahf
imul
xchg
push
xchg
and
jmp
fmul
bound
imul
mov
inc
iret
hlt
test
ljmp
out
mov
call
in
jne
xchg
push
pop
rcll
jnp
js
rcrl
lock
cmp
mov
fidivrs
xor
repnz
stos
adc
and
xor
lahf
ror
mov
push
xor
ret
xlat
dec
adc
popa
in
mov
jnp
jp
test
push
cli
aam
sbb
mov
outsl
xchg
jns
setae
jle
adc
iret
push
add
fsubrs
mov
jp
sbb
pusha
xchg
aam
popa
int
xchg
inc
out
in
fwait
adc
mov
xlat
jl
andl
ja
xor
or
or
xor
jl
in
pushf
icebp
and
jp
xor
rdpmc
scas
pop
shll
es
scas
lods
lods
or
push
xchg
push
push
popa
test
insl
in
andl
popf
aad
sub
addl
notl
sub
push
addr16
dec
in
in
sub
jp
pop
rcll
push
mov
arpl
mov
repnz
iret
and
mov
cmp
icebp
cli
out
into
jno
sbb
sub
jns
lahf
cmp
add
mov
xor
movsl
popf
hlt
mov
movswl
data16
sbb
dec
fidivrl
sbb
rcrb
ja
inc
sub
inc
sub
lods
push
mov
jno
aam
js
rolb
sub
adc
sbb
cmp
aaa
popf
pop
stos
jp
repnz
into
push
out
mov
nop
int3
stos
mov
andl
cmp
repz
pop
inc
jnp
push
dec
jbe
shlb
sub
jne
inc
jnp
ret
imul
int3
fistpll
dec
or
inc
decb
xor
cmp
fidivs
jmp
loop
sub
enter
mov
mov
xchg
aad
js
scas
add
stos
dec
movsb
rol
mov
lcall
and
or
mov
lods
jp
add
out
mov
ja
mov
iret
xchg
sub
movsl
mov
or
out
cmp
roll
sub
aas
arpl
xor
fdivrs
popf
ret
jae
sahf
in
jnp
mov
cmc
xchg
outsb
rcrl
sub
dec
jp
mov
leave
lock
stos
mov
pop
fdivs
pop
cmpb
data16
fs
aaa
jmp
imul
les
mov
mov
mov
lret
pusha
jns
dec
jge
push
sbb
cmp
add
addl
sbb
mov
jge
jmp
jnp
lahf
cmp
shll
test
cpuid
xor
lea
jg
cltd
jno
jnp
push
jp
pop
adcl
aam
cwtl
dec
fmuls
jno
daa
iret
mov
add
and
and
stc
in
in
fcmovnu
fisubrs
or
mov
cmpsl
fldcw
add
into
enter
xor
movd
push
test
adc
push
mov
push
addb
lret
iret
sarb
xor
pop
bnd
ja
std
cmpsl
mov
pop
inc
pop
mov
fidivrl
movsl
in
in
lcall
cwtl
xchg
psllw
adc
js
in
insb
or
push
mov
mov
jp
pop
stos
mov
ja
insl
xor
adc
in
jl
outsl
lcall
pop
lret
ret
push
scas
mov
inc
iret
xchg
xor
pop
dec
jnp
ret
roll
dec
jns
push
push
fidivs
pop
xchg
jmp
scas
inc
pop
push
sub
outsb
test
imul
shrb
loopne
push
mov
shrb
or
mov
mov
test
loopne
fsubs
dec
xchg
mov
xor
mov
ja
jl
inc
out
xor
pop
inc
lahf
shll
insl
fst
ja
cmp
cli
icebp
into
mov
lcall
and
dec
dec
xchg
movsl
xchg
xchg
std
sub
int
or
popf
shrb
decb
pop
pop
mov
pop
push
lods
jmp
out
pop
sub
sub
mov
cli
shrl
clc
imul
rorl
jns
in
inc
or
jle
xchg
sahf
cmp
sbb
push
iret
pusha
aas
aaa
mov
sbb
xlat
mov
dec
lods
sbb
xor
and
or
or
rcll
cmp
clc
fdivrl
fadd
int3
cmp
lea
and
adc
pop
repz
aaa
lcall
lahf
mov
inc
inc
test
lcall
cmp
aaa
hlt
clc
inc
jns
ss
mov
mov
pop
in
mov
push
xchg
ds
or
loopne
sub
mov
decl
nop
xchg
pop
jne
xchg
cmp
mov
or
in
outsb
adc
inc
das
or
icebp
call
loopne
sbb
imul
movsb
lahf
clc
nop
sub
xor
ds
jg
mov
or
nop
arpl
cld
lret
arpl
pop
in
rcr
push
xor
mov
mov
push
in
jmp
sbb
and
iret
movsl
and
popf
mov
inc
or
adc
jecxz
push
sub
jg
sub
std
or
add
sbb
ljmp
cltd
xchg
or
add
icebp
loope
add
aas
cmp
nop
sbb
popa
sub
pmaxub
and
ficoml
cmp
out
cwtl
add
mov
movsl
or
mov
or
jbe
dec
fbstp
imull
and
sub
xlat
mov
and
jecxz
in
test
int
movsl
or
pop
iret
stos
ljmp
enter
jb
add
arpl
pop
cld
jle
inc
jae
pop
add
mov
pop
scas
les
and
cmpsb
push
xchg
sahf
subb
int3
loopne
dec
pop
sbb
div
ljmp
xor
int3
sbb
aad
push
addr16
adc
frstor
into
test
jl
mov
dec
andl
outsl
movsb
xor
jecxz
xchg
mov
cmp
sbb
xchg
xor
jg
lcall
push
in
mov
test
sub
or
imul
add
sub
cmc
push
cmp
insl
mov
cmp
outsl
add
stc
xlat
shl
sarb
lock
cli
xor
insl
divb
inc
lahf
or
lds
mov
fwait
pop
icebp
xlat
add
mov
cmpsl
xor
and
aaa
fildll
addr16
mov
sub
xlat
ja
lods
incl
add
mov
popf
int
sbb
fsubs
fisubl
test
sub
hlt
lds
into
rcrb
out
pop
popa
cli
push
mov
nop
or
pop
mov
mov
inc
mov
test
lods
pop
fldcw
into
hlt
push
outsl
jp
mov
or
mov
and
lahf
mov
xor
cmpsb
lock
pop
xor
or
add
sbb
hlt
dec
fstl
orb
jge
jae
add
fcmovnb
nop
dec
mov
rorl
fsubrl
shrl
int3
inc
jg
fdivrs
sbb
pop
repnz
aam
adc
lret
data16
mov
ret
xchg
dec
decl
flds
dec
xor
mov
jnp
pusha
fidivrs
jmp
ljmp
jns
and
cltd
mov
pop
or
call
lock
xchg
mov
cmp
in
in
js
icebp
scas
push
rcll
mov
mov
popf
ja
push
lea
fnstenv
pop
mov
js
in
jmp
sub
sbb
pop
inc
mov
enter
jp
test
xor
stos
jb
add
xchg
pusha
xor
rcr
jno
inc
pop
mov
inc
and
lret
adc
mov
inc
subb
addr16
les
and
outsb
sbb
mov
lcall
aad
neg
mov
das
out
or
lret
mov
imul
push
jae
jg
mov
mov
repnz
imul
icebp
xor
sbb
idivl
cwtl
pop
sub
movsl
dec
inc
pop
mov
call
jecxz
fldcw
in
fildl
popf
arpl
dec
mov
adc
pop
jae
mov
nop
jns
push
pusha
sub
mov
lahf
icebp
mov
fwait
jns
sub
inc
xchg
xchg
inc
cmpsb
sub
adc
jns
imul
xlat
or
xor
mov
mov
das
shlb
jge
std
xchg
sbb
dec
lock
xor
fwait
ret
test
pop
ret
mov
orb
movsl
xchg
add
pop
outsl
lahf
pop
call
and
or
outsl
rolb
loopne
test
xor
xlat
lcall
lahf
cmp
pop
jecxz
lahf
cmovle
lahf
xchg
in
xchg
pop
addl
pop
inc
pop
test
cmp
push
jl
pushf
int3
popf
cmpsb
movsb
in
dec
and
push
ret
mov
call
mov
lret
fldenv
adc
inc
push
mov
aam
repz
lods
inc
subb
and
cmova
pop
inc
shll
insb
pop
pop
clc
mov
sub
mov
cs
dec
mov
test
cli
pop
and
outsb
out
and
lret
adc
aas
xlat
jns
inc
pushf
mov
fldcw
in
push
fwait
and
cld
push
nop
jo
mov
sub
mov
cld
shr
pusha
ror
mov
xor
inc
pop
mov
cli
xchg
add
ds
pop
cmp
cmc
mov
adc
push
jmp
push
push
shlb
jle
loop
mov
out
xchg
lret
dec
adc
out
scas
ds
add
mov
scas
out
inc
fildll
test
shll
out
or
add
jne
cmpb
jns
es
and
paddsw
fprem
ss
insl
sarl
mov
sbb
xorb
pop
rcrl
mov
hlt
adc
dec
sbb
iret
push
dec
add
in
sub
popa
arpl
in
cmc
stos
dec
jmp
add
dec
push
iret
pop
mov
adcl
out
daa
mov
push
fs
jle
push
cmp
push
jae
mov
xchg
xchg
and
mov
or
dec
mov
cmpl
jge
ja
adc
popa
jne
es
orl
adc
aam
je
cmp
pop
frstor
rcr
adc
jns
cmp
or
loopne
cmp
pop
icebp
sub
or
out
dec
stos
cmp
mov
mov
inc
popa
dec
lea
iret
in
cwtl
fwait
pop
mov
xchg
ljmp
icebp
mov
jle
cmp
xor
daa
mov
fwait
stos
cmp
insl
cmp
or
fisubl
lods
jae
je
ljmp
xor
arpl
sub
sub
add
daa
jge
dec
insb
insb
xor
jnp
or
cld
shl
cltd
dec
xchg
arpl
xchg
mov
fucom
pop
jl
arpl
push
jmp
xchg
or
pop
aam
adc
or
ljmp
pop
imul
scas
lds
xchg
movq
lret
dec
inc
push
jg
out
xchg
add
mov
outsl
fdivl
mulb
test
xchg
add
adc
fnstenv
je
rolb
push
call
pcmpgtd
push
jae
stos
arpl
mov
cmpsl
push
and
gs
in
aas
fsubl
fstps
xchg
data16
mov
js
insl
pushf
lcall
pop
fstps
cmp
push
mov
and
add
fwait
mov
pop
andl
mov
imul
pop
xchg
xlat
insb
smsw
arpl
dec
hlt
insl
fisubs
lds
pop
call
insb
pop
js
add
out
push
push
aas
push
jmp
and
insb
push
fstpl
sti
dec
cmp
cld
jl
add
cmpsb
lret
xchg
jle
frstor
jns
push
xchg
mov
mov
mov
imul
cltd
add
cs
fwait
int3
sub
jge
inc
mov
sbb
and
pcmpgtb
popf
mov
adc
pop
xchg
ds
clc
fldt
cmpsl
fdivs
mov
lock
mov
lcall
loopne
cmp
les
shll
pop
sbb
push
cltd
dec
test
rcrb
rcrl
rolb
cwtl
push
push
adc
cmpsl
scas
ret
jne
addr16
sub
gs
sahf
stos
add
int3
jg
paddb
jl
inc
push
int3
xchg
flds
sar
fwait
dec
pop
aas
nop
ffreep
pop
dec
xor
dec
dec
sbb
pop
bound
loope
cmpb
addb
outsb
and
jnp
jns
frstor
jne
mov
pop
ljmp
xchg
adc
sbb
lcall
imul
out
inc
dec
mov
xchg
cmpsb
jbe
jge
dec
je
adc
aaa
lds
cmp
xchg
push
dec
mov
rcrb
js
add
jbe
mov
cli
fwait
and
sarl
pop
aaa
push
ss
xor
lea
mov
adc
jp
cmp
pop
and
dec
lret
shl
ret
sbbl
das
shl
sbb
les
mov
xchg
adc
aad
lret
sahf
aas
sub
rclb
shlb
or
iret
cmp
jae
adc
push
add
aaa
adc
aas
hlt
cmp
or
cmp
subl
add
sbb
imul
rcrb
xchg
movsl
mov
rcr
stos
xchg
jo
dec
ret
iret
sub
aas
mov
xchg
scas
cmp
shrb
cmp
scas
cli
xor
mov
sbb
push
pop
jo
arpl
fisubrl
repz
movsl
and
data16
push
push
xor
enter
mov
lea
test
mov
mov
cli
sbb
sarl
push
xchg
xchg
popf
movl
sbb
mov
movsl
mov
push
cli
lock
imul
xchg
loop
aad
mov
test
mov
add
ds
fst
gs
cli
xchg
fsubrs
ret
fidivrl
lret
pop
and
lods
js
push
ficompl
or
insb
testl
adc
mov
out
jg
popf
sbb
aam
jecxz
orb
xchg
clc
pop
arpl
outsl
sbb
data16
jle
iret
mov
lahf
lahf
jle
jbe
mov
movsb
jae
jp
push
out
jmp
adc
mov
pop
inc
stos
ficomps
sahf
orb
pop
mov
pop
sub
xchg
iret
and
out
xchg
pop
outsl
ja
adc
fcomps
das
cli
mov
jne
jo
lds
cli
inc
inc
jp
mov
push
push
sub
pop
push
mov
dec
sbb
push
xorl
test
nop
cmp
nop
sbb
loope
mov
jg
jmp
movsl
sbb
mov
dec
faddl
sti
mov
lahf
add
orb
inc
dec
add
imul
lahf
loop
cmp
sbb
jp
test
mov
mov
or
mov
shrb
xor
iret
and
add
js
out
sahf
adc
lods
jbe
xchg
mov
fsubr
mov
cmp
ret
mov
mov
js
mov
fstps
xchg
jg
shld
pop
imul
shll
and
test
test
cmpsb
out
mov
xor
aas
sub
cmp
cmpsb
mov
lock
pop
lret
cmp
dec
notb
stos
pop
fadd
jecxz
mov
nop
je
jl
stos
adc
mov
xchg
push
in
rorl
test
in
pop
mov
or
mov
push
cmp
test
dec
push
scas
insl
pop
mov
fdivrs
int
in
fcmovne
into
mov
jae
add
nop
pop
jb
in
lret
cld
imul
sub
and
sbb
mov
sti
sub
decl
cmp
and
les
mov
nop
pop
pop
cmp
push
pusha
ds
mov
bound
in
popf
inc
xor
jmp
clc
and
inc
int
lods
outsl
sbb
or
or
pop
push
pop
sbb
push
cltd
lds
mov
lods
ja
jecxz
xchg
into
mov
lock
cmp
sbb
loopne
inc
aas
or
mov
ja
adc
mov
jl
bound
pop
bound
cmp
mov
sbb
lock
lds
cmp
add
in
or
pop
mov
cmp
arpl
add
cmp
or
outsl
dec
sbb
in
lods
push
push
js
stos
ucomiss
jo
and
call
xor
pop
mov
pop
cmp
mov
mov
daa
xchg
dec
xchg
out
dec
xor
inc
insb
leave
filds
mov
jae
cltd
push
and
pushw
inc
test
rorl
adc
inc
sbb
jle
lock
repz
cmp
jne
pop
dec
fldenv
fsubr
vpcmpeqw
lea
stos
orl
push
mov
jl
add
into
mov
mov
aad
sbb
ret
mov
fbld
pop
int
nop
repnz
pushl
xchg
jecxz
jnp
pop
cmpsl
add
cmp
arpl
loope
lret
mov
and
cwtl
jp
lcall
mov
dec
jne
aas
lds
fs
adc
xlat
icebp
xchg
enter
mov
mov
imul
ror
mov
loop
adc
shrl
push
aas
movsl
cwtl
cmp
mov
sub
pop
cld
push
xor
mov
mov
arpl
lcall
and
xor
outsb
lahf
pop
xchg
cmc
jp
lods
call
xor
icebp
sbb
mov
jg
jbe
iret
dec
loopne
or
and
addl
scas
mov
or
out
sub
mov
pop
add
xchg
inc
scas
ret
icebp
dec
lods
mov
shll
jge
cmp
cld
rorl
or
xchg
push
dec
mov
push
aas
mov
fldenv
mov
in
lds
adc
fldl
mov
sub
repz
int
adc
outsb
sbb
or
cld
mov
shrl
xchg
cmp
pop
std
jge
into
cmp
jno
popl
jp
pop
mov
adc
sub
xor
daa
int3
in
mov
or
xchg
add
test
aad
jne
adc
or
insb
jle
mov
popl
outsl
sbb
sti
aam
mov
jp
lods
mov
lcall
mov
sbb
shrl
jge
dec
adcl
or
movsl
sbb
fisubrl
out
xchg
inc
mov
jne
shrl
or
xor
pushf
add
mov
pop
loopne
pop
mov
mov
cltd
jnp
mov
imul
test
pop
sub
xchg
cmpl
es
repnz
mov
and
and
mov
ret
xor
sbb
test
arpl
jnp
mov
lods
xorb
les
popa
stc
in
js
iret
cltd
sub
in
sar
inc
xchg
cmp
pop
ret
mov
xor
lcall
jnp
pop
xor
sub
imul
inc
out
xchg
int3
dec
icebp
cmc
test
cmpsb
repz
cmp
cmp
or
scas
sbb
jae
and
xor
gs
xchg
and
cs
iret
push
daa
sbb
psubsb
sbb
nop
push
addr16
cmc
sub
ja
arpl
cmp
insl
inc
push
and
mov
arpl
popf
mov
clc
add
sub
cmp
or
mov
lret
pop
and
fcmovnb
mov
pop
cmp
push
gs
repz
jg
mov
jle
sbb
icebp
cmp
icebp
and
cmp
inc
add
dec
xchg
push
cli
jmp
xchg
outsb
mov
jne
add
jbe
xchg
jg
cmpl
movsl
push
mov
jnp
jnp
pop
inc
call
cmp
jno
in
push
rorb
jo
mov
xchg
ljmp
test
cwtl
xchg
fistpl
ds
imul
mov
push
push
sbb
and
popa
lahf
jne
andl
mov
fwait
push
loope
cmpsb
nop
lods
and
movsb
sbb
fcmovu
insb
imul
rcrl
adc
add
stc
push
xchg
out
mov
or
lods
mov
outsl
inc
jae
loope
int
hlt
in
mov
mov
xchg
mov
gs
iret
adc
test
fwait
mov
lcall
js
imull
enter
push
leave
fisubs
push
aas
icebp
jge
fstpt
aas
out
je
mov
mov
ja
gs
sbb
pop
mov
jae
jb
xor
mov
incb
pop
aad
mov
int
test
jnp
jno
arpl
adcl
in
jecxz
ss
out
sbb
call
inc
mov
sbb
or
test
push
mov
jmp
mov
jb
push
pop
sub
jns
fsubs
lcall
fildl
dec
aam
sti
stos
clc
xchg
ret
sub
xor
outsl
add
or
in
xchg
aas
mov
add
je
cwtl
out
xchg
pusha
test
fstps
ds
inc
in
mov
push
mov
ffree
rcrb
mov
xlat
mov
push
or
lahf
push
iret
xor
sub
sbb
aaa
sub
mov
pop
jne
int
and
fdivrp
sar
push
pop
xchg
jge
inc
xorps
test
into
lahf
mov
insb
aas
shll
popa
cmpsb
ret
fistps
and
add
inc
xchg
fwait
aas
jmp
pop
sahf
xchg
inc
mov
pop
mov
or
or
pushf
iret
mov
add
psrlq
popf
sbb
cmp
mov
jae
pusha
mov
ret
aas
inc
aaa
lret
mov
add
xchg
lcall
pop
jne
cmp
mov
add
idiv
cmp
fmuls
rcl
or
imul
push
jae
ds
mov
mov
aaa
jecxz
xchg
xchg
out
add
fsubrl
js
pop
push
fnstsw
or
mov
xchg
imul
lods
out
lea
push
insl
cmp
jne
cmp
jl
mov
popa
sbbb
inc
icebp
ret
test
jl
sub
mov
loope
jmp
in
es
cwtl
mov
insb
jbe
sbb
mov
jle
mov
xchg
popl
push
rcl
cmp
add
and
adc
popf
loope
jno
inc
xchg
sbb
mov
test
fadds
decl
mov
cmpsl
ret
jnp
loop
ds
and
in
insb
xor
subl
fs
jg
mov
dec
movsb
in
cmp
fcoml
jp
mov
mov
mov
movsb
ds
cmpsb
mov
push
test
mov
ljmp
sarl
fbstp
fmuls
xchg
cmp
gs
sbb
or
mov
psubw
xor
arpl
andl
lea
add
sub
xor
mov
addl
std
shll
outsb
add
xlat
loope
lods
push
bound
lds
mov
xor
dec
mov
pop
outsl
in
sbbl
adc
push
jl
fwait
mov
lahf
out
xor
xchg
iret
gs
fwait
ds
jg
idivl
iret
arpl
das
or
dec
dec
outsl
jl
mov
in
loopne
pop
fisubl
popa
mov
arpl
clc
pop
imul
dec
sbb
mov
xchg
sahf
mov
push
mov
adcl
push
sbb
jo
rorl
ficomps
sbb
icebp
mov
cli
icebp
xchg
bound
or
orb
cmp
cli
cmp
sarb
in
pop
sub
mov
cmp
xor
fs
je
scas
stos
push
test
hlt
jg
sbb
jle
xchg
mov
fsts
jnp
sahf
aas
adc
aam
pop
dec
mov
bound
and
mov
mov
iret
add
sub
or
scas
cli
cmp
cmc
sub
adc
inc
jle
in
mov
hlt
adc
and
xor
mov
and
faddl
sub
test
jno
iret
xor
jmp
xchg
add
jmp
inc
sub
and
clc
ja
scas
test
test
mov
orl
loope
mov
jnp
jno
cmp
or
cmp
mov
jmp
pop
inc
xlat
xor
daa
outsl
xchg
sub
xchg
aad
or
out
adc
aam
jb
xlat
jnp
push
push
lods
repnz
int
rcpps
lock
or
cmpsl
push
sub
nop
mov
es
adc
push
cs
pop
cli
scas
stc
xor
push
fistpll
mov
mov
cmc
ret
into
ds
inc
push
mov
cli
ret
mov
call
mov
sub
dec
int3
sub
mov
mov
mov
pop
rorl
or
pushf
xchg
push
pop
js
lods
xchg
dec
push
pop
mov
aad
xor
cmp
icebp
gs
inc
aad
cs
loopne
test
push
imul
mov
lea
imul
pop
jl
add
call
cmp
jbe
fildll
imul
inc
sbb
mov
aas
mulb
cld
mov
fmuls
jle
mov
inc
dec
insb
fisubs
orl
cmp
cmp
loope
aas
pmuludq
cmpsl
add
fadd
pop
rcrb
leave
pop
cs
mov
inc
sahf
cmp
mov
xchg
jmp
rep
xor
xchg
mov
jecxz
subb
shl
stos
aam
lock
call
rclb
sbb
xor
iret
stc
sub
push
rcr
scas
adc
mov
movsb
ds
mov
mov
popa
mov
icebp
push
push
jp
sbb
sahf
ds
push
pop
inc
iret
xor
pop
lcall
jno
and
mov
jbe
enter
pop
pop
stos
dec
jg
loopne
insl
xchg
negb
jae
jae
test
xor
or
sbb
add
pop
outsl
and
mov
test
mov
js
sub
cs
hlt
sar
stos
ret
adc
push
bound
adc
cmpl
movsb
cmpsl
lret
sarl
fwait
daa
push
mov
pop
in
sbb
jp
mov
fcompl
xchg
xor
lea
stos
adc
mov
adc
push
aas
and
iret
ljmp
cmp
in
int
xchg
mov
push
cmp
cmc
ljmp
add
sub
push
loop
clc
out
sbb
or
js
jnp
es
clc
pop
pop
cmpb
fwait
xchg
aam
jecxz
js
scas
addr16
in
xchg
inc
aas
inc
aad
xor
outsb
mov
adc
icebp
adc
jg
fs
orb
mov
jae
shlb
cltd
or
scas
inc
aaa
lcall
cmp
xchg
out
jge
add
push
fwait
popf
xchg
pusha
scas
ret
test
scas
pop
lea
sbb
adc
movsl
fmull
scas
mov
out
jae
xor
and
pushw
xchg
in
or
out
aaa
push
mov
mov
fwait
mov
fdivp
cmp
xchg
testb
std
inc
sarb
ret
icebp
push
test
adc
dec
enter
movsb
cltd
cmp
pop
push
out
in
pop
or
lret
cmpsb
mov
jl
jle
rcll
test
aaa
test
je
jb
push
push
mov
xlat
pop
unpcklps
push
jae
outsl
fwait
mov
xchg
ret
xchg
aad
xor
mov
ds
inc
ss
jnp
sub
and
xchg
pop
subps
subb
dec
cmc
pop
pop
jmp
repnz
subb
mov
out
ret
pop
xchg
add
adc
fldln2
cmp
fstpl
sub
stos
data16
sbbl
test
mov
push
inc
add
scas
adc
sub
mov
rorl
jle
lock
inc
lahf
leave
pushf
and
shr
xchg
les
enter
sahf
lea
fimuls
add
and
iret
aas
into
sbb
jns
ja
lcall
clc
add
pop
test
ss
popf
jp
mov
jg
jnp
loope
in
call
jp
cmpb
scas
call
xchg
sarb
out
lcall
and
loopne
push
scas
xchg
in
cmp
pop
cmp
pop
icebp
movsl
xchg
popf
mov
sbb
fs
mov
pop
ret
lcall
std
lods
xchg
mov
jnp
sbb
mov
sahf
add
lcall
cmp
jae
fimull
mov
pushf
test
out
fidivl
push
decl
pop
mov
push
pop
test
dec
stos
mov
imul
fnstsw
jnp
mov
in
cmpsb
xor
cmpl
lock
imul
in
jo
bound
lahf
lcall
or
sub
lock
push
enter
notl
dec
mov
loopne
inc
stc
lock
cmpsb
xor
pushf
cld
aad
mov
fs
pop
fimull
push
xchg
dec
mov
dec
add
mov
pusha
dec
push
lea
mov
or
es
insl
and
or
scas
ja
bound
inc
jae
decb
mov
pop
mov
mov
stos
outsb
ficompl
sbb
punpcklwd
pop
jbe
inc
jno
mov
pop
sahf
cmpsb
sti
stos
push
jnp
sbb
pop
lods
nop
iret
shll
outsl
lods
lcall
add
xchg
adc
shr
fmuls
aam
add
pop
es
add
add
push
rcrl
jg
sbb
and
jle
jmp
pop
mov
and
xlat
frstor
jb
xor
repz
cli
mov
testl
xchg
aad
sub
xchg
inc
addl
test
fwait
mov
xchg
clc
roll
loopne
shrb
in
leave
fcomps
xchg
lret
pop
fisubs
lahf
sbb
lds
inc
movsb
andl
fs
and
leave
movsl
lock
enter
cmp
out
jp
jbe
cmp
pop
insb
rcrl
pop
popf
sbbb
add
mov
mov
shlb
xor
out
loope
mov
jp
push
fstpl
or
out
adc
adc
mov
sub
pop
cmpb
jae
pushf
stos
js
lret
iret
add
cltd
or
out
data16
test
je
add
nop
popf
in
ja
das
xchg
sahf
push
xchg
adc
mov
out
mov
sub
mov
lds
test
xchg
loopne
inc
dec
call
xor
decb
ror
cmc
aas
pusha
lds
lahf
mov
pop
and
xlat
leave
add
xchg
imul
lcall
hlt
cwtl
int
inc
fdivrl
test
rorl
mov
or
fidivrl
and
cmp
faddl
stc
mov
add
xchg
test
cmp
jecxz
dec
pop
icebp
lock
mov
cli
aam
pop
out
icebp
addr16
add
dec
js
lahf
xchg
dec
pop
inc
addr16
and
frstor
sbb
into
pop
imul
in
dec
mov
and
adc
out
xchg
aaa
cmc
cmp
xchg
aas
hlt
xacquire
pop
push
xchg
jnp
stc
mov
shlb
push
mov
incl
mov
jle
jle
pandn
sub
sarl
xchg
out
cmp
insb
fnsave
or
xchg
test
pop
fcomps
jmp
sbb
inc
sti
cltd
xchg
nop
xchg
jmp
ja
popf
jo
xor
in
ret
dec
dec
divb
cwtl
mov
xor
pop
mov
sbb
addr16
push
or
mov
inc
xchg
imul
outsl
stos
pop
mov
lahf
push
mov
lock
mov
fstps
jno
sbb
sub
pop
fistpll
cmp
sub
push
dec
mov
rorl
jp
xor
lret
test
sarl
inc
outsl
pop
mov
cmp
call
insb
or
mov
fildll
outsl
rorb
push
cld
gs
cmp
sub
mov
push
insl
xchg
fcmove
arpl
cmp
outsl
cmp
aas
mov
mov
pop
xor
rorl
xor
incb
mov
mov
fisubrl
mov
repz
xchg
jae
mov
lret
mov
ficomps
jb
jne
sbb
mov
and
into
in
push
sub
scas
je
mov
sbb
test
scas
jo
popa
lock
imul
mov
je
fldenv
jmp
jg
cmpsl
rorb
jmp
cli
aam
or
sbb
push
loopne
pop
mov
movsb
lds
add
das
icebp
push
sbbb
mov
fcompl
add
mov
push
decl
mov
ucomiss
outsb
test
in
fcmovnb
and
push
paddusb
inc
inc
imul
rol
aad
lahf
ret
js
pop
pop
lds
dec
cmp
test
stos
popf
and
add
mov
gs
test
pop
xchg
in
in
pop
loopne
fcom
arpl
in
ret
repz
push
lret
das
mov
into
pop
inc
out
shll
cmp
jo
movl
add
pop
call
leave
inc
mov
or
mov
inc
inc
fsubrl
mov
lcall
push
xor
jmp
jnp
xchg
jge
popf
mov
out
mov
or
mov
and
mov
pop
icebp
jbe
mov
loope
sub
mov
enter
ret
xchg
sbb
xchg
inc
inc
mov
adc
rcll
mov
aad
mov
in
push
and
pop
push
insl
fs
loop
push
cmpb
aaa
test
push
mov
lcall
or
jecxz
sbb
mov
mov
or
cwtl
and
mov
mov
scas
test
xchg
iret
stos
or
xchg
xchg
aas
fildll
mov
xchg
jle
stos
test
icebp
pop
out
push
imul
pop
push
add
or
mov
inc
mov
aam
lea
shlb
scas
stos
fsubl
jae
xor
or
enter
stc
mov
jnp
mov
insb
rorl
loope
int
ficoms
xchg
popf
mov
jp
mov
test
rcrb
stos
stos
decb
daa
xchg
fsts
cli
mul
and
icebp
jp
adc
jg
mov
push
adc
int3
decl
adc
scas
mov
and
mov
inc
outsl
lcall
das
adc
addr16
movlps
arpl
stos
shrl
fstps
mov
lods
shll
arpl
addps
out
inc
mov
cli
or
pop
dec
subl
jg
out
test
or
aas
jg
jne
cmc
push
iret
lock
shrl
cmp
ret
cmp
mov
jno
inc
xor
adc
cmpsl
orl
mov
push
xchg
lret
lret
pop
sub
xchg
xor
movsb
push
pop
fisttpll
fwait
dec
add
std
rcll
shrb
fsub
mov
daa
inc
sbbl
inc
jbe
ret
mov
das
inc
outsl
outsb
std
inc
sahf
mov
data16
lahf
ret
fmuls
addr16
xchg
inc
mov
rclb
sbb
cwtl
cmp
mov
fsts
mov
gs
fmull
add
nop
in
mov
pmulhuw
das
fnsave
lcall
mov
mov
push
ret
rcrb
pop
inc
and
out
xchg
cmp
inc
adc
cmc
sub
or
outsb
loopne
lock
jae
lahf
iret
dec
push
cmc
mov
cmp
cmpsb
pop
jae
into
hlt
iret
jle
xchg
adc
xor
orb
insl
cmpb
ficompl
mov
fwait
sbb
outsl
cld
clc
inc
xchg
fwait
icebp
gs
cmp
xchg
andnps
loope
dec
push
sub
es
jle
pop
shrl
popf
out
mov
lret
mov
pop
pop
in
cld
ret
rcrl
adc
cmp
adc
mov
push
mov
or
pop
mov
jne
lods
add
fdiv
stc
cmp
call
adc
jmp
fcmovne
jbe
adc
add
pop
sbbb
pop
out
add
scas
cmp
adc
imul
mov
xchg
dec
popf
mov
mov
loope
xchg
jp
sub
mov
lock
dec
inc
in
mov
pusha
popf
ficoms
iret
inc
or
jecxz
sub
les
and
popf
xlat
or
int3
mov
popa
pop
in
fdivs
fdivrs
cltd
push
jg
loop
sub
xchg
inc
jmp
addr16
int
lcall
test
cmpl
pop
pop
stos
mov
mov
jno
out
pop
and
jge
mov
pusha
addb
mov
dec
mov
rclb
mov
insb
or
pop
shll
jp
loop
jae
dec
je
lock
roll
or
cmp
mov
cmpsb
inc
fsubl
repnz
cs
rcrb
pop
out
or
aas
movhps
imul
aad
inc
add
sahf
pop
fsubrp
add
test
mov
daa
xor
and
cmp
mov
icebp
mov
sub
int
enter
xchg
or
mov
rcl
and
and
mov
dec
cmp
enter
pop
pop
movsb
push
jbe
mov
jg
insl
dec
sbbl
add
mov
mov
popf
cmp
aam
or
icebp
add
pop
inc
call
in
or
pop
mov
cmp
stos
stos
mov
mov
imul
jmp
lcall
jo
xchg
cs
lds
adc
cmovne
mov
cli
push
fadds
xchg
cmp
arpl
adc
lods
add
pop
push
and
adc
sbb
dec
sahf
pop
jo
jge
pop
addr16
cli
pop
mov
scas
ret
adc
imul
mov
pop
lret
fidivl
xchg
sub
jg
pusha
icebp
inc
inc
lahf
test
mov
jae
pop
movd
push
roll
lods
xchg
cmpb
ret
ret
xor
leave
repz
ret
hlt
cs
sbb
fwait
orl
push
decl
adc
call
or
scas
jae
mov
fisttpl
mov
fwait
jp
sahf
mov
push
mov
mov
inc
mov
inc
int3
ret
in
pop
push
sub
inc
lret
test
cltd
mov
not
lods
sbb
jnp
sbb
push
repz
mov
std
add
jb
add
jge
sbbb
jp
xchg
pop
shll
sar
fidivrl
flds
enter
mov
fcoms
addr16
call
clc
out
dec
and
jo
test
jmp
lahf
inc
lea
testl
sbbl
fcoms
enter
adc
sub
jb
xchg
jnp
jb
dec
cmpb
sbb
adcl
cld
sahf
push
push
push
orl
arpl
fs
mov
clc
pop
pop
mov
inc
mov
sbb
sbb
or
or
aam
or
out
aam
loope
test
mov
scas
cmc
inc
mov
icebp
push
cwtl
dec
add
sbb
xor
ljmp
icebp
mov
push
jne
gs
lahf
scas
sahf
test
js
or
test
hlt
out
mov
jp
pop
sbb
fwait
pop
mov
aas
push
pusha
mov
xor
jne
test
push
mov
mov
in
xor
adc
jne
and
roll
outsl
cmp
rolb
fs
mov
xchg
add
pop
iret
push
aas
mov
jae
or
out
sbb
cmp
sub
add
jo
loopne
aam
xchg
adc
pop
dec
cli
adc
fiaddl
popf
or
push
inc
mov
push
mov
clc
mov
or
rol
pop
stos
mov
movsb
dec
adc
xor
ja
inc
push
cmp
repnz
add
pop
xor
fs
xchg
jns
mov
or
mov
and
ficompl
cltd
xchg
pop
shrl
psubsb
dec
jmp
outsl
aad
sub
stc
jp
sbb
shll
sbb
push
loopne
in
cmp
inc
sti
dec
les
mov
loopne
add
mov
xchg
popa
int
cmpsb
popf
push
popf
push
lock
sbb
test
xchg
arpl
ljmp
popa
pop
stos
add
xchg
jo
stos
push
pop
add
pop
fmuls
popa
cmpsb
xchg
mov
or
ret
cmp
inc
and
rcrb
andl
pop
xchg
push
or
mov
adcl
mov
rolb
fcompp
sbb
cmp
data16
paddb
xor
pop
cmp
fsubrl
lcall
movsl
fisttps
push
shrb
pop
incb
int3
pop
iret
xor
and
bound
mov
hlt
imul
arpl
or
push
mov
vmaxss
sub
sbb
or
iret
lret
mov
lds
add
int
loopne
mov
out
sub
outsl
jg
jge
push
and
rcrl
jns
subb
movsb
cli
mov
jmp
lds
push
scas
imul
lret
lret
xor
ret
mov
dec
cmp
negl
sbb
popa
jecxz
imul
xchg
mov
popw
in
add
faddl
mov
mov
xor
loopne
mov
mov
or
dec
mov
imul
es
mov
ja
push
cmpsb
ret
iret
xchg
adc
lea
ror
pop
inc
fcompl
int
fstps
arpl
mov
xor
hlt
mov
in
mov
outsl
sti
inc
stc
outsb
push
fsubl
jp
cmp
das
inc
lcall
fcmovnbe
sub
aas
xor
scas
comiss
add
nop
jae
iret
dec
outsl
push
aam
or
pop
or
jnp
mov
jge
cltd
pop
dec
inc
loopne
push
pop
jae
mov
cld
test
mov
pop
mov
mov
fcmovnu
test
adc
aad
push
mov
sub
dec
push
lods
inc
xchg
ffreep
in
cwtl
lea
cld
mov
out
xchg
mov
cltd
pop
shl
pop
push
jne
mov
and
cmp
add
push
pop
add
iret
into
pop
bound
pop
xchg
sbb
mov
test
testl
or
out
jp
mov
fbld
push
loopne
xchg
out
jmp
mov
mov
aas
sbbl
mov
test
nop
std
and
push
aad
ret
incl
and
rorl
loope
pop
or
mov
ret
test
scas
cmp
mov
mov
in
mov
add
dec
sbb
sub
and
mov
pop
mov
pop
mov
neg
scas
icebp
xlat
or
jmp
pop
and
dec
popf
adc
jnp
out
ss
lock
pusha
sbb
mov
xorb
mov
xor
pop
mov
aas
loop
mov
divb
jmp
cmp
rorl
cltd
addb
dec
mov
sub
aam
sti
lret
movsl
xchg
mov
aaa
sub
loop
mov
rcrb
sub
roll
cmc
xorb
jp
lock
cli
pop
cmp
cmp
mov
and
inc
push
rorl
mov
sbb
imul
stos
xchg
push
fmuls
subps
and
mov
frstor
orl
ds
les
mov
or
mov
mov
jae
mov
lock
xchg
jne
adc
movsl
add
sub
jns,pt
mov
sub
inc
iret
xchg
pop
xchg
push
in
shr
lcall
jb
repz
pop
sub
pop
in
jg
xor
iret
push
pop
shrl
icebp
in
sbb
add
or
aam
jp
and
ret
mov
ja
and
cltd
mov
push
lds
mov
ja
pop
in
pop
mov
movaps
jno
mov
mov
mov
sbb
mov
cltd
mov
shll
inc
mov
stos
xchg
or
xchg
stos
jae
movsl
mov
cmpsb
mov
pop
insl
iret
fwait
mov
pop
inc
sub
xor
fadds
add
mov
cmc
inc
jle
inc
cmp
int
lahf
jnp
lock
in
inc
aaa
loope
enter
aas
xchg
xchg
xchg
pop
shrl
sub
dec
cmp
popa
int3
push
arpl
mov
popf
loope
imul
add
nop
test
inc
mov
out
inc
mov
jne
sbb
ss
mov
push
push
cmp
sbb
int3
fldt
jge
or
adc
aas
loope
pop
jno
bound
sti
inc
mov
shll
adcb
fwait
mov
test
xchg
es
and
sbb
sarb
jp
mov
fmuls
loope
or
psrlw
iret
ljmp
outsb
test
sub
rol
jo
jge
lcall
inc
in
adc
gs
out
lret
dec
pop
jle
mov
mov
lahf
in
enter
aad
lods
cs
jnp
mov
mov
mov
cmp
fnstcw
mov
and
sbb
xchg
icebp
or
adc
enter
push
mov
cmpsl
mov
in
mov
sub
mov
push
sti
jge
mov
cmpsb
sub
and
inc
xchg
decl
xchg
push
xchg
xlat
or
and
jl
mov
pushf
jle
sbb
adc
lahf
jae
addb
mov
cmc
jg
xchg
sub
lret
jl
inc
scas
fiaddl
push
je
and
mov
iret
sub
icebp
bound
xlat
out
jno
xchg
inc
jae
inc
cs
add
movsl
jmp
jge
add
adcl
pop
lret
mov
fwait
jno
mov
cmpl
test
xor
mov
out
ljmp
push
sarb
in
pop
mov
cmpsl
xor
ret
sub
filds
xsave
inc
sarl
mov
dec
jp
fwait
shll
in
out
mov
jae
clc
cmp
stc
push
xchg
inc
out
wrmsr
dec
cmp
arpl
aas
rol
setge
cmpsb
outsl
test
fbld
and
jp
lods
fwait
or
pop
cld
in
lds
aam
mov
shll
cmp
sbb
or
repz
fidivl
sub
xchg
arpl
xlat
mov
cmp
imul
mov
lock
mov
xchg
sub
je
mov
out
sarl
cmc
add
xchg
or
cld
xor
decb
orb
rcrb
shr
ds
shll
lahf
test
xor
add
out
test
lods
mov
lcall
repz
aas
add
rorl
adc
out
scas
pop
insb
dec
xorl
addl
xlat
push
sbb
popa
pop
mov
mov
cltd
add
push
cltd
adcl
xor
das
fcompl
aas
gs
push
mov
jmp
std
insb
pushf
jae
daa
ucomiss
and
insl
push
jp
pop
sbb
mov
nop
lock
and
xchg
inc
xor
add
pop
lods
adc
mov
xchg
ret
rcrb
jge
pop
push
pop
dec
gs
rol
or
xchg
lds
jbe
inc
aaa
test
insb
repnz
out
adc
in
mov
mov
push
lock
cmp
mov
fistpl
gs
fistpll
cmovo
lods
int3
mov
out
jecxz
mov
rcrl
jo
popa
mov
leave
sub
cmp
or
pushf
or
pop
lods
fisubs
jb
or
jae
lahf
test
out
insb
fnstcw
negl
int3
subb
cld
pop
dec
mov
push
pop
cmp
andl
xor
push
sub
xor
lret
fistl
std
lds
mov
popl
fadds
sub
popf
inc
cmpsl
or
inc
outsl
mov
jmp
pop
insl
xorl
decl
add
push
mov
push
aad
mov
insl
jns
adc
shll
jp
fisttps
into
movd
push
mov
cmp
and
das
mov
add
xchg
adc
lock
pop
mov
xor
in
je
lea
and
pop
xor
mov
sbb
cmp
mov
pop
add
push
mov
pop
and
pshufw
fiadds
mov
pop
mov
sub
orl
aas
fistl
inc
and
jp
gs
dec
icebp
fwait
pop
mov
sub
test
imul
pop
sbb
lret
lods
mov
vpmadcsswd
mov
cmpsl
pusha
adc
icebp
mov
add
add
mov
sub
lret
add
in
in
xchg
popa
jecxz
je
mov
loope
cmpsb
adc
mov
xor
adc
mov
xchg
push
imul
pop
add
mov
leave
popa
mov
stos
out
xor
xor
arpl
fldenv
insl
jmp
mov
enter
cmp
mov
in
jmp
mov
adc
mov
in
push
fsubrp
mov
cmp
imul
xchg
imul
jge
repz
ljmp
and
in
es
cmp
pop
js
inc
push
jg
lcall
push
popl
jne
inc
clc
jnp
loopne
sti
decb
aaa
pop
leave
jl
xlat
cmpsl
mov
sub
dec
lcall
call
fcmovnb
pop
and
rcrl
scas
sbb
jno,pn
pop
mov
js
in
dec
mov
mov
daa
pop
out
leave
mov
push
and
cmp
or
jae
icebp
add
fstps
and
repz
or
push
xor
les
adc
aad
dec
jae
pop
syscall
cmp
les
cli
pop
stos
mov
ja
pop
es
rolb
es
and
xchg
cld
xor
jg
cmpsl
mov
mov
jnp
test
mov
jg
xchg
cmp
jae
std
bnd
cmp
jge
mov
xor
ja
cmp
jns
nop
jge
jae
dec
jnp
outsl
xchg
mov
cmp
add
jnp
lods
ja
sub
rcr
loop
jns
dec
arpl
imul
arpl
shlb
outsl
idivl
add
cmp
or
test
jmp
lds
mov
mov
fdivrs
shl
jnp
shlb
jg
dec
ja
mov
jno
and
out
cmpsb
mov
jecxz
stos
mov
loop
test
fildl
jno
dec
scas
imul
jnp
mov
imul
jns
fistpll
test
mov
cli
imul
mov
add
iret
push
jg
mov
imul
leave
inc
stos
pop
js
mov
movsl
test
and
fwait
cmp
outsb
xchg
fistpll
cmpsl
bound
cmpsl
ja
arpl
jecxz
push
jae
jns
sarl
mov
add
outsl
mov
fstl
imul
sbb
loopne
filds
mov
int
iret
mov
push
aas
jno
jns
test
scas
cmp
mov
cmp
cmp
ret
std
xchg
xchg
jg
fnstsw
fwait
iret
cmpsl
fwait
lahf
cmpsl
das
mov
iret
mov
push
ljmp
push
gs
rorl
sub
cltd
push
mov
adcl
jne
int
jno
jg
cmp
repz
fcomip
arpl
rorl
js
cli
mov
cmpsb
xchg
sar
mov
orb
xchg
lods
in
mov
sbbb
addb
lcall
decl
or
sahf
sbb
inc
insb
fiadds
imul
jmp
xor
aas
aam
pop
icebp
jge
popf
add
mulps
sub
push
std
mov
push
aam
jmp
sahf
add
ret
fldenv
in
pop
aas
into
jp
or
lahf
lock
mov
add
push
and
loopne
mov
add
mov
or
cltd
pop
sbb
lcall
and
xor
push
int3
pop
dec
arpl
ja
test
pop
aad
add
jb
idivl
fstps
xor
jae
cmpsb
test
in
xchg
or
mov
xchg
xchg
sub
cvtpi2ps
leave
xchg
pop
lret
js
sub
pop
lahf
push
sbb
pop
jg
cmpsb
add
xchg
iret
les
jecxz
inc
mov
subl
cmpsl
sbb
ror
je
jmp
jmp
addb
pop
dec
out
pop
pop
orps
idivl
fisttpl
mov
cwtl
mov
rolb
xlat
push
and
sub
jmp
cs
lds
mov
ficoms
out
jmp
addl
mov
setge
das
clc
xor
mov
fmull
icebp
cmp
test
cmp
mov
jnp
out
rcll
xchg
and
xchg
fdivrs
iret
pop
sbb
mov
mov
popf
pop
xchg
out
mov
pop
cli
dec
mov
jg
mov
js
add
jbe
ja
je
lea
loop
xor
repz
push
mov
inc
add
jge
pop
ja
loopne
sti
je
inc
out
jb
rorb
mov
xchg
hlt
aad
cmp
fidivrl
rclb
mov
ret
inc
sarl
jge
ret
mov
push
jnp
push
jge
scas
jg
out
dec
lea
test
xor
cmp
rorl
jg
mov
fistpll
mov
fbstp
lods
addl
mov
mov
shll
xchg
jg
push
adc
daa
stos
lods
sbb
cmp
arpl
lret
jg
repz
push
ja
fisubrl
jnp
ljmp
loopne
pop
mov
push
bnd
cmp
cmp
xchg
mov
mov
cld
arpl
xchg
jns
pop
jns
mov
jbe
lods
mov
shll
jne
mov
leave
xor
lahf
jp
andb
stos
xchg
mov
jns
sbb
sarl
out
addr16
test
xor
jae
shll
mov
jns
xlat
jmp
mov
shl
jg
std
pop
clc
fistpll
imul
fildll
xor
ja
cmpsl
push
mov
imul
shll
lret
sub
aad
xchg
sti
mov
mov
mov
xlat
cltd
fdivrs
test
aad
ret
jae
iret
repz
int
lcall
mov
fwait
mov
mov
mov
insl
jo
into
mov
ljmp
mov
xlat
cmp
das
testl
mov
lods
cmp
std
popl
fstpl
ret
mov
adc
in
mov
pop
mov
fistps
cmp
push
xchg
jbe
aas
cwtl
test
repnz
adc
inc
sti
cwtl
mov
daa
lds
mov
icebp
cmp
mov
sbb
rcrb
mov
das
sarl
es
jae
push
fisubrl
jl
push
sbb
fildl
iret
push
pop
and
es
pop
shll
hlt
mov
js
aas
jns
std
push
mov
ret
push
int
mov
movsb
mov
dec
arpl
fldl
fldenv
cmp
sub
out
dec
pop
mov
shl
cmp
ds
mov
xor
stos
xor
push
cmp
xor
and
orb
mov
aas
mov
push
ficoms
add
lahf
dec
shll
jp
setl
dec
cltd
in
idivb
nop
mov
push
dec
sbb
mov
lock
sbb
test
push
xor
cld
aas
cmp
sub
pop
mov
push
int
pop
pop
jne
mov
adc
fildll
pop
sahf
push
lret
xchg
lahf
inc
xchg
jae
inc
icebp
and
std
fimuls
and
cld
mov
js
xor
lret
clc
mov
pop
xchg
mov
hlt
scas
xor
lcall
lods
mov
decl
inc
inc
sahf
mov
ja
mov
add
jae
pop
dec
add
daa
push
mov
fs
adc
aas
xchg
jmp
push
ret
cmp
shr
xor
xor
jns
icebp
lods
roll
mov
aam
pushf
ljmp
adc
repz
movsb
mov
and
movsb
pop
or
fidivl
outsb
pop
scas
jg
push
in
cmp
cld
inc
out
icebp
mov
add
shll
jmp
mov
xchg
add
popa
leave
or
cmpsb
mov
sub
test
or
jmp
jno
jge
testl
movsl
fistps
insb
fsub
call
sbb
xchg
pushf
pop
push
jo
popf
mov
jg
xor
lahf
repnz
pop
pop
loop
mov
fs
iret
jl
jge
push
sbb
sbb
mov
scas
push
jne
add
push
jl
and
add
jne
sti
and
mov
inc
stos
in
rclb
jmp
in
cs
ja
imul
sub
and
dec
ret
addps
inc
sbb
cmp
rorl
mov
lods
pop
mov
dec
scas
jmp
sarl
inc
repnz
mov
cmp
jle
jl
xchg
add
adc
aam
aas
rcr
enter
testb
cmpsl
dec
mov
mov
xor
dec
cmc
push
xor
jge,pt
outsl
fcmovne
sub
roll
stos
in
pop
or
mov
xchg
xchg
sub
or
add
dec
imul
test
test
cs
xchg
pop
mov
in
fwait
or
or
push
or
dec
aas
mov
push
imul
add
hlt
xchg
enter
outsb
mull
into
jge
iret
mov
push
sbb
xchg
arpl
fxch
inc
shr
adc
outsl
mov
lock
mov
cwtl
shlb
jo
jmp
orb
sub
xchg
push
jno
jl
lea
pop
aas
loopne
ss
call
mov
mov
mov
dec
mov
push
insl
aaa
test
dec
lods
sbb
jl
and
popf
dec
cmp
enter
pop
in
sahf
rcrl
push
pop
sub
sahf
cmc
cmp
aas
out
inc
jmp
push
xchg
test
dec
dec
add
mov
jg
mov
lods
and
fwait
dec
pushf
xor
nop
dec
fstl
ret
sti
leave
ret
jl
xor
mov
cmpsb
xlat
jl
shll
jb
add
ret
movsb
mov
xor
jo
lcall
lock
adc
sbb
mov
dec
loop
imul
and
cmp
scas
in
stos
dec
cltd
push
icebp
mov
push
cmpsb
jb
ss
loop
sub
les
out
jmp
mov
in
adc
repnz
insl
test
inc
ja
icebp
and
pmulhuw
jns
setbe
movsb
popa
mov
jmp
mov
sahf
mov
aas
aas
add
pop
pop
lret
pop
lea
dec
arpl
pushl
sbb
ljmp
push
push
test
pop
inc
inc
xor
cli
fs
pop
jno
inc
mov
inc
adc
cmp
mov
pop
pushf
or
and
leave
in
aas
pop
stc
mov
xlat
pop
or
xchg
sar
fimuls
jl
push
sub
pop
scas
adc
shlb
mov
inc
xchg
xchg
cltd
jmp
and
sbb
mov
mov
mov
decb
popa
pop
xchg
fidivl
sub
dec
pop
cmp
imul
mov
mov
in
sub
lcall
xchg
mov
es
pop
outsl
inc
mov
outsl
mov
add
mov
add
jo
mov
jge
outsb
sub
mov
mov
ds
inc
mull
lds
dec
loope
int3
in
sbb
xchg
fwait
and
cmc
xchg
mov
insl
mov
xchg
ret
iret
cmp
inc
add
push
push
adc
mov
aas
in
ret
imul
jo
xor
xor
push
fnstenv
lret
iret
or
gs
mov
test
loope
inc
lock
jmp
aas
gs
jns
mov
pop
aam
cli
fcomps
jecxz
data16
test
xor
lds
bound
adc
daa
xor
faddl
inc
pop
inc
pusha
cmp
in
and
sbb
cmp
fadd
mov
ret
mov
and
add
push
cwtl
fwait
mov
mov
pop
sbb
or
jp
adc
pop
adc
pop
repnz
clc
stc
sbb
and
js
pop
or
js
repz
mov
sub
xchg
sbb
mov
cli
int3
and
cmp
pop
jnp
popl
jp
sub
lcall
mov
push
in
mov
inc
daa
lock
in
cltd
and
out
inc
xchg
jae
ljmp
and
lea
icebp
aas
pop
mov
mov
push
cmp
add
ja
ret
nop
pusha
mov
push
lea
push
scas
out
sbb
push
and
icebp
jge
imul
sbb
add
adc
xchg
dec
xchg
popf
and
inc
mov
test
aad
xchg
xchg
jle
aam
test
lcall
les
pop
xchg
cmp
push
arpl
inc
jnp
pmaxsw
lds
pushf
sub
xchg
mov
mov
and
or
jmp
jmp
xor
test
bound
popl
pop
arpl
pop
add
mov
push
out
mov
and
insl
mul
xor
iret
icebp
xchg
insb
mov
test
mov
andl
test
xor
imul
pop
movzwl
xchg
aaa
ja
adc
mov
scas
out
sahf
sbb
mov
cli
outsl
jne
sub
jns
fwait
mov
addb
mov
lcall
fsub
ja
stos
stos
iret
jge
sbb
test
or
pop
adc
movsb
icebp
das
test
xor
pop
sub
sub
das
xor
in
sar
cwtl
mull
inc
inc
ficompl
dec
pop
mov
scas
jmp
xchg
mov
and
pop
stos
mov
push
mov
das
fstps
xor
sbb
out
in
pop
xlat
fwait
mov
mov
push
jno
mov
mov
stc
sub
not
fnstcw
insb
pop
mov
xor
sub
jp
xchg
mov
and
jbe
push
addl
int
jns
add
push
sbb
test
out
movsl
lcall
jp
xchg
lea
or
and
repz
ss
dec
psubb
or
lods
add
pop
hlt
sbb
cs
push
cmpsl
cld
pmovmskb
dec
xchg
jno
dec
les
imull
scas
jno
pop
pushf
cwtl
in
loopne
fucom
cmpsb
mov
cmp
push
add
adc
push
push
and
and
stos
leave
jns
inc
mov
out
inc
aad
push
shll
in
mov
ds
fists
repz
or
aas
or
negl
sbbl
add
mov
xchg
push
dec
sbb
inc
push
dec
arpl
iret
aad
inc
cli
cmp
sbb
test
mov
clc
pop
leave
stos
pop
sbbl
cli
lcall
add
sbb
mov
sbb
add
and
inc
pop
add
xchg
pop
incl
loopne
mov
pop
push
mov
pop
mov
mov
mov
inc
ret
lea
push
sbb
test
add
push
pop
sbb
jp
mov
push
ja
ja
adc
fldl
push
mov
mov
sbb
cld
cmp
les
mov
and
inc
test
fld1
arpl
shrb
add
xchg
dec
xchg
fbld
sub
out
and
cmpsb
xchg
xchg
cwtl
ja
aad
jno
gs
jl
sti
jp
rorl
loopne
mov
nop
out
iret
adc
mov
jmp
ret
popl
popa
pop
out
adc
adc
mov
jmp
lret
sub
or
fmull
xchg
xchg
mov
lock
xchg
sbb
or
ret
add
mov
xchg
mov
nop
push
loopne
dec
ficomps
mov
pushl
mul
add
mov
xchg
push
shll
dec
mov
movsl
jae
jmp
jecxz
and
cmove
sbb
dec
push
dec
sbb
adc
dec
sub
xor
loope
fmulp
sti
add
sub
in
outsb
movsl
iret
aas
jle
xchg
or
push
mov
aas
push
cli
adc
por
les
xchg
fcoms
pop
pop
jp
mov
inc
test
addr16
xchg
add
adc
lcall
cmpsb
mov
mov
out
clc
inc
arpl
iret
ret
mov
sti
jb
mov
or
andl
mov
or
xchg
aas
sbb
cmp
les
push
sub
ret
cld
push
mov
jae
push
mov
sbb
data16
mov
std
jg
aas
adc
stos
call
mov
arpl
lret
jmp
in
or
cmp
ret
push
loop
mov
pop
cmp
cmp
popf
or
adc
sub
les
insw
xor
loope
xchg
mov
jl
lcall
mov
or
incl
int
and
dec
inc
jb
scas
sub
mov
outsl
iret
stos
movsl
pusha
imul
jmp
add
ja
outsl
and
test
jmp
pop
sub
stc
aam
mov
inc
adc
xchg
adcb
iret
cwtl
xchg
jle
arpl
xor
leave
sub
je
clc
jns
and
icebp
cmp
xchg
lods
movsl
mov
inc
jp
inc
xchg
movsl
pushf
ljmp
add
outsb
cmp
cs
xor
pop
out
cmpsb
mov
jp
mov
mov
jne
test
aad
xchg
fisttpll
loopne
sub
sbb
pop
mov
jae
jg
mov
js
test
mov
mov
daa
lahf
push
aam
mov
sbb
or
and
push
repz
insb
test
aas
rcr
data16
push
popa
lahf
clc
int
scas
mov
xlat
fcoms
pop
lret
xor
incl
popa
sbb
pop
shll
dec
andb
mov
shl
clc
push
sti
jg
fiadds
iret
xchg
adc
jno
scas
jae
nop
aas
jg
popf
dec
sbb
inc
sbb
ds
xchg
fmul
jne
call
push
xor
inc
ret
cwtl
jecxz
xchg
lahf
cmp
shlb
mov
cmpsb
push
fnstenv
jo
or
cmp
or
pop
xor
inc
or
pop
cli
out
fldl
popl
ret
rcr
psubusb
jl
aam
and
adc
fcompl
jp
and
or
cmp
lea
sbb
popa
push
xor
pop
in
or
aam
aas
mov
sub
test
fcomps
add
mov
jle
aas
cmpsb
or
sub
inc
cmp
arpl
push
jo
dec
jne
sub
leave
popa
jg
in
sbb
jle
mov
addr16
lock
lea
mov
psraw
add
repnz
dec
push
xor
jmp
mov
sbb
xchg
xor
cltd
pop
out
and
out
test
xor
and
ja
inc
nop
push
dec
xchg
fdiv
mov
mov
jg
jae
loop
rolb
shlb
cmp
fidivrs
inc
pop
mov
lcall
psrad
sbb
push
pop
jns
dec
add
leave
inc
icebp
sbb
call
dec
dec
scas
mov
and
xchg
mov
sbb
ljmp
lahf
fldenv
loope
mov
fcomip
sets
inc
sahf
les
adc
or
in
mov
lret
out
movsl
or
jb
adc
sub
loop
mov
div
cmp
aas
sbb
pop
nop
or
insl
sbb
flds
pop
addl
aas
test
jae
fisubrs
xchg
push
ljmpw
sahf
lock
daa
clc
scas
push
movsb
repz
or
inc
inc
pop
js
icebp
mov
lcall
inc
xor
add
inc
addr16
cltd
outsb
jp
into
xor
push
mov
shrb
xchg
jge
add
pop
push
sub
fcmovu
addr16
jns
shrb
xchg
xor
lock
sbbl
jns
and
push
jmp
xchg
mov
cmpsb
adc
stos
imul
icebp
xchg
jl
mov
in
or
in
lcall
ss
xorl
ret
fidivs
lods
clc
int3
dec
ret
mov
mov
imul
clc
rol
inc
jno
dec
and
jbe
bswap
or
andb
xor
pop
imul
mov
jae
push
pop
fwait
daa
mov
sbb
outsb
pop
xchg
pop
cmp
mov
push
ja
ficompl
mov
sub
frstor
mov
adc
int3
test
orb
dec
cmp
test
sbb
pop
outsb
cwtl
push
pushf
lret
fstp
sbb
loopne
push
std
push
adc
mov
aam
sub
clc
paddusb
mov
dec
lock
mov
inc
jae
fadds
daa
rorl
mov
inc
xchg
jae
pop
in
out
mov
lods
xor
test
adcl
jo
jge
push
xor
into
popf
mov
push
jle
cmc
iret
add
shll
xchg
xor
lea
hlt
aam
mov
mov
cmp
jecxz
sbb
shl
or
mov
les
shr
inc
push
pop
out
jno
adc
out
dec
jmp
sub
shufps
sahf
das
mov
lea
lfs
or
lods
fndisi(8087
in
movl
popa
xchg
movsl
xchg
jle
popf
push
arpl
jp
pop
or
pop
or
xchg
dec
icebp
adc
push
lock
jp
cltd
mov
sub
fwait
mov
push
cmp
push
shll
cmpsb
mov
unpcklps
fcmovu
jno
mov
clc
in
fnsave
mov
icebp
cmpsb
inc
push
pop
add
sbbl
xchg
pop
sub
cmpb
dec
mov
in
loope
push
ret
ljmp
push
rorl
movsl
imul
push
jge
inc
fcompl
out
fld1
xchg
adc
jns
jmp
sub
inc
repz
stos
cltd
in
pop
and
jge
and
pop
shrb
in
mov
push
mov
jle
cmp
fdivs
and
movsl
decl
out
stos
rorb
fstpl
xchg
xor
cmp
mov
and
jo
or
sbb
andpd
adc
das
ja
xchg
aas
dec
dec
cld
sbb
jns
jnp
xchg
inc
movsb
fmull
adc
aaa
imul
xchg
mov
lods
cmp
gs
and
and
clc
push
jne
inc
and
fcomp
and
sbb
and
testl
sub
sub
mov
cld
adc
xor
mov
and
sbb
dec
dec
mov
mov
mov
les
mov
xchg
xchg
xchg
xorl
xor
pop
jb
ja
or
xorb
ja
push
cmp
scas
lret
add
lods
push
loop
andl
jmp
add
ror
mov
cmp
sbb
inc
icebp
insl
cli
call
jae
xchg
in
xchg
push
sub
adc
mov
out
sub
push
jecxz
sbb
sbb
inc
test
or
pop
xchg
jae
stos
sub
add
in
sbb
orb
adc
mov
fisubs
and
mov
clc
mov
aam
enter
or
aam
inc
push
ret
fsqrt
ja
loope
cmpsl
sbb
daa
and
mov
movsl
jo
aaa
mov
stc
mov
xchg
mov
xchg
mov
ja
adc
jae
out
sbb
addr16
xchg
inc
push
cmp
adc
adc
test
loop
xor
push
out
iret
cmpsl
pmaxsw
jl
repz
iret
xchg
xchg
mov
push
xchg
stos
pop
insl
xor
mov
xor
and
mov
addb
inc
add
xor
cwtl
mov
test
shlb
adc
jo
mov
xlat
jecxz
aas
mov
test
adc
xor
loopne
jp
fstp
lock
xchg
pop
je
mov
cmpsl
fwait
movb
mov
mov
or
pop
leave
xchg
loop
add
jbe
add
and
xchg
xchg
hlt
sub
mov
xor
and
sbbb
fildll
ret
and
pop
mov
or
fisttps
xchg
fdivp
adc
ds
or
lret
gs
shl
orb
push
pop
jb
sahf
xchg
test
cmp
hlt
fsubs
sub
outsl
cmp
aas
dec
push
adc
ja
js
mov
xchg
mov
lahf
fists
mov
in
cld
jnp
vcmpngtss
stc
push
addr16
jp
adc
cmp
push
dec
xchg
add
push
call
cs
fisttps
iret
stos
clc
int3
adc
lcall
cmpsb
stc
jne
enter
pop
jge
cmp
push
dec
aas
ja
scas
jg
aad
sub
movsl
cmp
cmp
sbb
mov
in
test
insb
cwtl
pop
mov
xchg
adc
pop
cwtl
inc
bswap
or
arpl
pop
mov
xchg
clc
ret
stc
sub
jo
push
cli
in
stos
sbb
jnp
xchg
sti
and
or
in
mov
int
pop
ljmp
shl
insb
and
orl
xchg
mov
pushf
cld
push
iret
aaa
cmp
sub
mov
cltd
adc
sub
rolb
or
pop
sbb
push
push
jb
shrl
pushl
test
mov
jge
out
ret
icebp
sahf
in
pop
lahf
ss
push
lcall
jnp
jno
xchg
fnstenv
rclb
shll
mov
dec
add
fbld
mov
sub
adc
cmp
inc
add
push
stos
fld
in
pop
pushl
fimull
sub
xor
daa
pop
and
inc
inc
out
mov
pop
movsb
inc
lock
lock
push
jns
ja
dec
add
dec
js
aad
jae
sub
call
fisttpll
jp
sub
dec
cs
push
cmpsb
out
cwtl
je
fsubs
push
add
out
es
pushf
ss
sub
push
jne
aas
and
adc
sbb
ret
test
shrl
cmpl
xchg
and
push
mov
repz
cmp
fisubs
push
jb
sbb
cmp
xchg
xor
sahf
test
pop
and
std
dec
stos
xor
mov
test
mov
test
inc
insb
mov
lds
mov
push
int
push
jnp
in
rcrl
mov
movsb
xchg
pop
lahf
jg
imul
fildll
dec
decb
arpl
out
in
inc
adc
out
mov
sbb
int3
aas
xor
push
pop
int
sub
jmp
inc
mov
ficoml
pmuludq
pop
ljmp
mov
roll
pop
loopne
pop
or
mov
xor
lods
cld
jmp
fmull
nop
sbb
sub
xor
mov
pop
mov
pop
lock
mov
adc
sahf
pop
sub
iret
jb
out
xchg
popf
jns
jae
dec
icebp
dec
adc
push
repnz
and
push
dec
sub
jnp
inc
jp
pushf
push
pop
mov
or
out
lods
daa
mov
ja
movsb
push
insl
out
gs
bound
outsl
cmp
rorb
in
mov
lahf
decb
sub
imul
pop
inc
sbb
push
add
mov
andb
mov
arpl
dec
pop
mov
pop
mov
add
pop
mov
ret
xchg
jb
pop
lret
xchg
sub
stos
mov
jns
mov
push
pop
xchg
mov
pushf
dec
push
and
push
mov
std
lahf
sub
push
jns
cmpsl
fisubl
movsb
mov
inc
icebp
mov
loopne
cs
mov
push
and
dec
loope
adc
call
movups
js
bnd
dec
lahf
aam
xchg
divw
lods
jbe
ret
or
icebp
je
xchg
push
stc
jnp
sbb
mov
pop
jp
dec
subl
icebp
sub
adc
add
mov
add
mov
mov
and
xchg
jno
imul
in
xor
outsb
xchg
dec
mov
cli
orps
xor
adc
cld
out
jecxz
ljmp
fiaddl
jne
stos
enter
pop
nop
fcoms
daa
in
stc
mov
push
rolb
sbb
xchg
fcmovb
mov
lds
sahf
ja
push
pop
jg
arpl
inc
shrb
jae
dec
mov
jmp
ja
loopne
cmp
xchg
or
jg
pop
mov
and
jnp
cmc
iret
repz
jmp
outsl
xor
mov
sbbb
sub
outsl
dec
fcomp
fsts
dec
lcall
xor
lret
rorb
outsl
and
add
cmpsl
arpl
mov
pop
outsl
shlb
cmpsl
ret
cli
out
jnp
fs
popf
mov
movsl
sbb
mov
push
mov
xchg
outsl
loop
loope
call
shl
ja
xchg
jg
pop
cmpsl
jns
xchg
fldl
gs
mov
ja
rolb
outsb
mov
out
adc
imul
push
jg
jecxz
mov
mov
fstpt
mov
jg
jp
fwait
mov
mov
in
ror
dec
fnstcw
outsl
jnp
jge
paddusw
ret
xchg
cmp
aad
fstpt
jnp
lahf
mov
dec
sbb
ret
mulb
push
outsb
or
jnp
scas
jno
imul
jecxz
push
mov
sarl
gs
jns
jnp
iret
mov
stc
rcl
jnp
mov
rol
mov
fidivrl
out
mov
jnp
sub
lcall
mov
cltd
mov
jg
arpl
mov
stos
divl
ja
hlt
fwait
jno
mov
jae
mov
jge
ljmp
mov
mov
cmpl
push
jns
pop
rcr
popa
pop
mov
adc
rcll
cltd
mov
pop
xor
lock
lcall
or
addr16
jns
jno
xchg
jmp
xchg
sbb
jns
icebp
loope
ret
insl
cmp
icebp
xchg
dec
inc
addr16
rorl
icebp
mov
sti
loope
int
sarl
jne
mov
aam
push
mov
lods
jp
mov
orb
fldt
loopne
leave
fsts
lea
sbb
push
jnp
mov
sbbb
or
push
int3
mov
inc
out
dec
in
or
idiv
pop
jge
gs
mov
push
mov
movhps
xchg
mov
push
xor
and
lret
mov
jno
loopne
incb
xchg
addr16
lcall
subb
insb
xchg
or
mov
mov
icebp
adc
ficompl
cwtl
jg
lock
shrl
cmpl
push
sahf
jp
ja
call
push
inc
sahf
mul
cmp
jmp
mov
sbb
inc
adc
mov
in
jp
mov
jp
lock
iret
enter
into
aaa
loope
lds
jp
mov
or
sub
push
sub
fisubl
fstpt
aam
push
add
das
mov
in
iret
orl
cmp
mov
test
push
mov
mov
jmp
mov
jae
xor
bound
xchg
lods
movsb
add
mov
push
dec
addr16
call
sub
mov
int3
lcall
fisubrl
lahf
cs
push
xlat
pop
movsl
rorl
dec
cmp
sub
mov
push
cli
xchg
add
scas
fwait
pushf
and
add
push
and
fnstcw
pop
push
mov
mov
decb
addr16
imul
push
xchg
mov
jp
push
out
jge
imul
idivb
fistpl
push
add
pushf
outsb
mov
repz
roll
mov
in
cmp
mov
adc
mov
imul
mov
cmpsb
call
inc
pushf
fsubs
pop
js
jae
sub
pop
aam
jae
sbb
push
test
jmp
sub
loopne
jns
jmp
dec
jl
sahf
int3
cli
and
orl
nop
and
mov
repnz
out
jp
aaa
fldcw
pusha
jmp
xor
cmpsl
xchg
icebp
sti
mov
mov
pop
fs
icebp
jae
ss
and
pop
push
das
mov
xchg
jne
jo
jp
jae
jns
xor
and
in
dec
mov
jbe
in
sbb
ret
rol
xorl
mov
sub
pop
jnp
loopne
ja
adc
sub
mov
or
jge
xor
movsl
sub
add
lcall
inc
jno
push
les
popa
stos
inc
xchg
sub
sub
mov
and
xor
jl
lods
xchg
hlt
cmp
jle
jge
cmp
push
inc
xor
pop
xchg
lcall
jnp
mov
sub
stos
andb
mov
pop
out
adc
imul
pop
es
icebp
addr16
loopne
add
fucom
add
mov
push
mov
sub
lcall
cwtl
push
push
push
and
movsb
and
orl
loope
mov
fmull
add
inc
jb
sbb
sub
mov
dec
imull
mov
arpl
pusha
hlt
pop
push
adc
ljmp
xchg
inc
lcall
or
icebp
dec
mull
ds
jg
inc
movsl
jg
dec
add
mov
js
fldcw
adc
xchg
fbstp
and
dec
dec
or
xor
ret
shr
lahf
pop
aas
sbb
jge
add
aam
das
jp
sahf
mov
sub
mov
mov
icebp
mov
fwait
sub
lods
bound
push
add
and
pop
adc
out
jmp
pop
mov
jp
and
fdivl
sbb
sbb
dec
mov
xchg
pop
pop
loop
iret
movsl
lcall
and
mov
xchg
jp
mov
scas
mov
icebp
ret
pop
push
outsl
push
dec
push
cmpl
cwtl
and
xor
pop
loopne
lock
xchg
fdivs
mov
sub
sbb
dec
fimull
into
pop
push
lds
or
mov
and
xor
xor
or
sub
fs
dec
cmpsl
jmp
pop
fldcw
sub
jp
xchg
es
decb
push
shr
jo
aad
or
sub
popa
jae
sub
xorb
jl
adc
bound
icebp
jg
mov
add
mov
push
sbb
inc
jae
mov
bound
iret
mov
orb
fdivs
jns
adc
pop
sbb
dec
pop
cwtl
aam
inc
or
sti
sbbl
stos
jp
mov
lcall
aas
or
push
add
jne
and
mov
adc
fldenv
xor
add
mov
inc
jecxz
xor
movsl
push
data16
popl
mov
or
fs
and
dec
or
adc
mov
inc
int
xchg
outsl
and
fmull
push
faddl
sbb
cmc
xor
inc
cld
sbb
cli
mov
stos
aad
sti
pop
adc
popa
inc
mov
aaa
mov
ficompl
std
fbstp
int3
jg
and
leave
inc
add
sub
stos
cmp
ficoml
adc
lcall
outsl
cmp
fldenv
xchg
aam
sub
cmpsl
arpl
arpl
mov
popa
data16
and
xchg
jge
cli
cmp
das
arpl
loop
pop
dec
ja
push
outsb
pusha
xor
lds
add
push
scas
adc
iret
int3
dec
hlt
xor
leave
sub
aam
jbe
mov
or
outsl
pop
daa
push
es
in
fwait
add
add
xchg
jbe
fbstp
jmp
cmp
inc
mov
ret
mov
add
and
rcll
pop
es
cmp
insl
lcall
ljmp
adc
pop
add
lahf
or
jno
ret
mov
mov
loopne
adc
mov
and
cmp
test
xchg
shll
jmp
adc
inc
push
jmp
cmove
mov
loope
sub
dec
mov
or
enter
mov
mov
insl
inc
mov
lcall
test
fistpll
sub
insb
adc
mov
xor
cmp
push
pop
movsb
jle
or
iret
rcrb
mov
les
out
enter
push
jae
punpcklwd
xchg
jle
mov
mov
adc
push
mov
jbe
arpl
into
adc
inc
popl
xchg
mov
xchg
adc
mov
mov
nop
mov
pop
pop
lods
push
rorb
mov
popl
push
pop
fwait
fistpl
mov
rorb
sbb
sbb
inc
ficoml
xor
adc
adc
out
pop
loop
lret
pop
aas
and
xchg
or
mov
sub
je
mov
push
stos
aas
iret
mov
icebp
nop
jbe
xchg
cld
mov
insb
and
daa
cmp
pop
cmp
jmp
push
mov
loopne
outsb
stos
repnz
cmp
movsl
sahf
mov
inc
orl
cmp
pop
notl
xchg
xchg
lahf
arpl
roll
in
lods
push
inc
mov
subb
vpacksswb
jl
mov
mov
cmc
pop
ret
mov
mov
add
sub
mov
lods
pop
xlat
mov
inc
test
push
mov
and
mov
jle
lcall
sub
pop
lds
jnp
jne
pop
pop
in
jge
fnstcw
mov
jge
mov
and
mov
es
mov
mov
subb
test
test
gs
mov
stc
mov
shlb
mov
shr
scas
xchg
xchg
adc
push
add
cltd
pop
shll
mov
or
arpl
cmp
imul
push
subb
xchg
call
push
cmp
jne
ds
mov
imul
aas
push
flds
cmp
mov
add
jno
fmull
pop
pop
in
sub
xchg
xchg
jnp
add
xchg
and
or
aam
adc
in
xchg
add
pop
adcl
imul
stos
mov
nop
ret
in
pop
pop
in
into
pop
push
mov
scas
mov
sti
xor
rorl
popf
pop
mov
ds
cmp
push
jbe
pop
mov
sub
jnp
jbe
int
sub
jo
out
inc
inc
sbb
jp
xchg
push
pop
mov
outsb
mov
cmpsb
pop
adc
ret
das
lret
mov
adc
shl
add
add
inc
or
in
jg
shr
xchg
lea
sahf
push
mov
jmp
jne
out
xchg
ret
sti
jmp
cmp
sar
xchg
testl
mov
insl
fsubs
mov
inc
mov
pcmpeqw
cmpb
das
test
jbe
gs
imul
pop
cmpsl
out
xlat
imul
dec
cmp
test
jp
fucom
add
dec
mov
cmp
inc
decl
pushf
xorb
sub
lcall
fisttpl
lods
jb
mov
jle
xchg
cmc
push
push
jne
add
shrb
or
das
sub
jae
xchg
adc
inc
xor
mov
jns
jbe
pop
pusha
lods
in
pop
aam
push
ds
xchg
aad
popa
shrl
xchg
stos
mov
or
iret
scas
sbb
xchg
ret
pop
sete
mov
add
jo
lcall
mov
or
cs
fnstenv
movsb
jecxz
ds
mov
mov
or
mov
lods
lods
mov
pusha
in
cmc
adc
push
xchg
test
jmp
outsb
ljmp
ficompl
lret
lock
aaa
dec
in
adc
fstpl
movsb
outsl
nop
cmp
daa
lcall
movsl
jmp
sbb
xchg
aam
pusha
jnp
fwait
dec
inc
pushf
mov
das
subl
test
popa
mov
loope
jae
in
ret
hlt
and
pop
lods
ficoms
adc
test
scas
push
cwtl
sbb
inc
ja
dec
mov
mov
test
icebp
cmpl
lret
in
jae
sub
inc
fdivs
adc
in
jbe
jno
fnstenv
mov
cmp
pop
cmp
addr16
fnstenv
insb
xor
inc
int3
dec
mov
add
je
cld
mov
cmp
lahf
mov
mov
push
cmp
jae
rcll
pop
xor
mov
fs
cmp
popa
lock
sbbl
test
pop
cmp
cmp
xorl
jnp
clc
pop
cmp
adc
inc
je
enter
mov
jmp
aad
push
push
push
and
int3
mov
mov
mov
fs
mov
mov
and
push
xor
je
cmpl
cmp
clc
lods
iret
add
pop
divb
and
dec
outsl
aas
in
sbb
rorl
push
add
mov
gs
ja
repz
call
sub
popa
push
jg
arpl
jecxz
add
pop
add
shll
dec
shlb
mov
jg
inc
mov
dec
int
jnp
jg
ret
or
les
aad
and
out
fidivrs
std
imul
jge
iret
sub
fadds
jae
jge
mov
dec
pusha
ret
and
ret
sub
jmp
xchg
jnp
jl
arpl
outsb
in
cmc
jge
sti
cmp
stc
push
lods
ja
add
or
mov
out
dec
mov
xchg
xchg
js
sub
jae
mov
mov
mov
mov
out
aaa
divb
jno
gs
stos
repz
sahf
jae
icebp
leave
ret
repz
xor
aad
ret
jmp
movq
data16
xlat
mov
imul
jo
iret
xchg
mov
and
pop
popf
jne
mov
pop
flds
jns
lds
xchg
push
pop
leave
subl
jg
cltd
xchg
arpl
ja
neg
fcmovu
pop
xchg
push
mov
and
push
mov
imul
test
cmp
jno
bnd
jae
lods
cmpsl
mov
int
popa
add
leave
icebp
cmpsl
sti
scas
rol
repz
jmp
lods
arpl
mov
mov
jecxz
fldenv
aaa
movsl
add
shrb
cmp
leave
jno
lahf
jae
fwait
jno
stc
mov
jne
mov
outsl
dec
iret
jmp
sahf
push
mov
out
scas
pop
imul
jo
pop
rcrl
jne
mov
xchg
pop
mov
pushl
mov
shll
mov
fldenv
push
shll
imul
xchg
mov
mov
sbb
mov
arpl
arpl
aas
dec
dec
enter
mov
pavgw
leave
mov
adcl
bound
cld
lcall
jg
xchg
jg,pt
pop
cmp
in
inc
fistps
lret
mov
flds
jmp
fwait
and
push
js
mov
push
out
mov
ficomps
scas
aam
ret
mov
cld
ja
cmp
mov
mov
adc
mov
stc
xor
xchg
addr16
push
orb
aad
fwait
jnp
push
add
mov
mov
in
cmp
xor
mov
lcall
lock
pop
mov
mov
ret
mov
daa
cmp
cli
icebp
fidivrs
in
or
push
mov
and
xor
mov
sub
or
jle
pop
fcoms
jbe
arpl
mov
cmp
int
cmp
pusha
icebp
xor
add
shr
xlat
or
mov
mov
lret
pop
fmull
ljmp
sbb
mov
mov
insl
or
icebp
dec
lahf
inc
btc
mov
sbb
pop
lret
push
mov
xchg
sbbl
add
and
fiaddl
mov
popa
cltd
mov
in
xchg
js
xchg
je
ss
fs
push
jge
fwait
sbb
cmp
push
cmp
mov
iret
fcom
outsl
push
xchg
pop
sbb
cmp
fimull
sarl
out
cmpsl
sbbl
or
in
sub
xorl
fidivl
mov
in
iret
adc
out
mov
movsl
sbb
iret
dec
add
xchg
in
sbb
pop
fstpt
pop
mov
lret
shll
pop
rcrb
in
sbb
loope
add
in
sbbl
les
ret
lcall
sbb
xchg
cmp
mull
fnstcw
and
push
inc
loopne
jae
bound
es
xchg
jg
ds
shrl
ret
push
sbb
mov
stos
adc
add
bnd
arpl
mov
std
xor
dec
fadd
mov
gs
mov
or
rcl
xchg
jnp
cld
cli
sbbl
and
sbb
jnp
inc
xchg
push
xor
ret
mov
push
ds
cwtl
test
pop
das
out
mov
sarl
fwait
xchg
lds
mov
xlat
mov
roll
pxor
mov
push
rorl
ja
and
lcall
adc
iret
decl
mov
mov
push
aas
lret
pop
pop
push
xchg
leave
mov
sub
repz
or
pop
pop
xchg
xor
xor
mov
add
call
insb
cli
stos
not
cmp
repnz
fisttps
lcall
pop
jmp
xor
jnp
jnp
dec
dec
imul
push
addr16
aad
iret
imul
je
pop
ja
rcrb
lcall
dec
pop
cmp
movsl
xor
ffreep
push
repnz
mov
shl
or
cmp
jb
cltd
je
pop
mov
insl
add
or
aas
lods
aam
jp
popa
stos
cmp
lock
xor
push
jae
add
mov
mov
arpl
sub
inc
xchg
jecxz
xor
repnz
test
dec
inc
mov
cmp
and
dec
imul
in
addps
or
shrb
jbe
adcl
cld
mov
test
testl
ret
dec
pop
add
ret
mov
jnp
xchg
mov
test
leave
dec
sub
loope
inc
arpl
movsb
push
in
add
cmp
and
sub
and
hlt
jns
cltd
jp
inc
fsubl
and
movsl
mov
pop
fidivrs
sti
clc
pop
pop
out
repz
adc
adc
and
rorb
pop
push
mov
push
xchg
aas
pop
add
mov
dec
jae
and
lcall
jp
or
push
test
cmp
xchg
jae
ret
lea
aas
mov
jg
jmp
fwait
add
cltd
xchg
sub
cmp
mov
loope
push
mov
hlt
push
cs
sbb
xchg
cld
aaa
push
jae
fxch
xchg
add
jmp
xchg
jbe
push
fists
hlt
cmpsb
mov
inc
adc
fadd
jne
add
lods
jnp
stc
fbld
xchg
lock
enter
pop
rorb
pop
dec
mov
iret
jp
in
fwait
pop
nop
repnz
xchg
insl
test
inc
fwait
in
fsts
lcall
incb
cmp
cmp
shlb
stos
xchg
ret
rolb
or
xchg
out
dec
int3
lods
int
xor
stos
out
imul
into
stc
jb
outsl
fcmovu
loope
xchg
ds
inc
mov
sbb
sbb
fs
sub
dec
xchg
stos
in
nop
mov
cmp
jnp
adc
std
jnp
pop
mov
dec
cwtl
sbb
pop
push
or
addr16
jg
or
mov
das
cmp
ret
sub
popf
ficoml
mov
fists
and
mov
test
pop
push
loop
xchg
out
aaa
in
push
nop
pop
fmull
mov
and
jnp
push
inc
filds
cmpsb
jg
cltd
add
int
xchg
pop
inc
cmp
in
push
shlb
sbb
lock
lcall
cmp
mov
and
sbb
cmp
pushf
cmp
cmp
sub
sarl
lods
addb
xor
add
ror
mov
int
subl
pusha
adc
addr16
bound
jle
push
push
enter
mov
inc
sarb
push
es
inc
mov
nop
loope
es
push
jnp
mov
xchg
sbb
mov
add
mov
ret
cwtl
and
inc
jns
int3
js
pop
stos
push
add
cmp
addl
sub
fbld
and
out
aam
shrl
sbb
push
sbb
stos
aas
insb
or
adc
pushf
test
mov
inc
incb
inc
or
push
jg
lods
clc
or
loop
outsl
test
pop
cli
or
test
inc
lock
cmp
xlat
pop
cmp
out
mov
jno
les
mov
loopne
insb
popl
mov
pop
mov
sub
jb
xor
xchg
xchg
sub
sbb
add
xor
fsubrs
sub
je
clc
mov
call
mov
lret
push
dec
mov
add
jmp
xor
sbb
lods
arpl
arpl
cwtl
idivb
psraw
xchg
jl
xlat
shrl
movsb
push
pop
and
jnp
sysexit
arpl
iret
jmp
push
dec
xchg
xor
andb
scas
sbb
je
popa
cmpsl
mov
mov
add
shll
in
ret
jns
and
and
sbb
stos
cmp
pop
rcl
lahf
test
jmp
sarl
test
pop
cld
mov
ret
pop
int3
inc
xor
les
mov
jno
mov
sub
sbb
mov
add
inc
bound
fwait
push
fcmovnb
push
mov
ffreep
or
or
mov
jns
in
jns
or
mov
cltd
ds
pop
lahf
and
push
ffree
sbb
and
bound
sub
mov
daa
sbb
in
flds
test
js
fiadds
xor
scas
push
test
cli
jg
jg
mov
f2xm1
sub
aam
test
cwtl
popf
fwait
ss
lea
mov
push
sbb
pop
sarb
or
sub
push
mov
inc
sub
mov
mov
add
cmp
fisubl
les
mov
push
adcl
inc
movsb
add
pop
iret
xchg
mov
cmp
mov
test
mov
xlat
sbb
lock
repz
lock
mov
inc
je
sbb
loopne
nop
xchg
incb
rcrl
pop
xor
cmp
decb
enter
cmp
lock
aas
sbb
inc
add
aam
popf
pusha
jb
and
sbb
bswap
push
and
push
jnp
mov
cld
mov
test
adc
mov
add
xor
in
xchg
out
jnp
pusha
js
mov
add
notb
loopne
xchg
xor
pop
in
mov
xchg
sbb
jg
and
mov
jo
aaa
mov
orl
loope
jl
push
inc
xorl
and
mov
in
movsl
sbb
mov
pop
xchg
mov
and
popa
pop
call
xor
in
mov
mov
loopne
in
addl
lret
addr16
xchg
pop
xchg
inc
clc
push
std
xadd
pop
sti
xorl
mov
mov
cmc
rol
fcmovu
cmp
cmp
ja
iret
pop
js
add
dec
mov
add
icebp
xchg
mov
insl
push
fmuls
les
xchg
and
cwtl
loopne
roll
cwtl
mov
loope
mov
fcoml
add
jp
jecxz
adc
and
push
repnz
mov
aam
mov
jmp
mov
push
xchg
mov
cmp
jo,pt
in
arpl
lock
jb
mov
mov
rorl
pop
or
aad
dec
adc
fcomps
jae
notb
insb
fdivl
push
rorl
mov
pop
cmp
adc
mov
add
int
lret
push
mov
sub
mov
cmp
ret
cmp
cmp
dec
pop
inc
lods
or
inc
mov
out
and
enter
rcrl
arpl
test
je
lcall
mov
mov
roll
jnp
les
mov
push
cmp
loop
pop
jnp
jno
insb
cmp
movsl
inc
sub
add
fs
jno
popf
xchg
push
inc
or
and
add
or
fcomp
and
or
adc
and
lds
pop
icebp
sbb
fistl
and
testb
rorl
mov
decl
lcall
sbb
jno
aas
fsubp
stos
fidivl
gs
inc
jp
iret
cmc
push
jecxz
in
adc
dec
pop
xor
inc
ret
dec
loop
es
and
arpl
iret
ljmp
push
pop
jle
cmp
push
cmp
inc
mov
cmp
pop
arpl
push
leave
jne
rcrb
push
push
arpl
popf
inc
inc
imul
jnp
push
adc
insb
push
pushl
dec
push
ljmp
ds
imul
lcall
imul
mov
jo
pop
and
xor
inc
das
ret
inc
mov
jecxz
mov
imul
iret
pusha
imul
pop
repnz
and
cmpl
pop
cs
mov
decl
adc
jnp
or
sbb
dec
call
mov
jmp
mov
pavgb
test
pop
fldcw
mov
xor
jae
icebp
push
pop
inc
fucom
xor
mov
rorb
rorb
lock
addr16
fwait
jp
cli
add
jmp
movsb
iret
xchg
push
cs
pop
add
inc
xchg
cmp
sets
mov
mov
clc
jne
mov
fwait
and
add
mov
ljmp
pop
roll
cmpsb
inc
pop
les
cmp
adc
dec
sar
xchg
stc
dec
out
pop
gs
addl
mov
and
lock
iret
lahf
or
add
add
cmp
je
xchg
xchg
bound
lahf
getsec
or
in
xorl
cmpsl
and
adc
fistpll
std
mov
mov
js
scas
push
pop
sbb
js
push
aaa
psadbw
lock
iret
mov
movnti
faddp
add
pop
push
dec
cs
fdivs
loop
xor
or
mov
adc
cmpsl
adc
outsb
movsl
cltd
mov
insl
nop
xlat
ja
cs
aaa
xor
or
cld
xchg
fildl
and
loop,pn
add
das
and
mov
pop
jecxz
xchg
push
arpl
or
dec
fistpll
out
xchg
mov
decb
fsub
cmp
inc
push
outsb
dec
jmp
cwtl
mov
xchg
push
mov
xlat
push
bound
js
sub
cwtl
fldcw
xchg
shll
in
inc
in
cmc
into
cwtl
mov
shl
sbb
sub
or
scas
shl
xchg
idivb
or
pop
fmull
add
lret
nop
xchg
xor
fidivrs
pop
outsl
dec
data16
test
xor
mov
and
or
mov
lret
insl
mov
iret
inc
clc
pop
bound
icebp
inc
outsb
inc
bound
repz
rolb
cmp
mov
jnp
clc
mov
bound
lcall
in
jae
fidivrs
jle
mov
fdivrp
push
and
or
jae
ret
cmp
insb
int
cmpsb
xor
dec
iret
and
xchg
jmp
shll
cmpsb
mov
fsts
push
xchg
cmpsl
push
inc
stos
xor
push
mov
pusha
or
jns
sti
mov
adc
fwait
gs
sub
hlt
cmpsl
jo
adc
outsb
idiv
jns
mov
sub
frstpm(287
shrb
pop
insl
hlt
mov
xchg
popf
scas
std
lret
add
mov
add
loop
stos
nop
lahf
mov
push
mov
outsb
push
mov
pop
sbb
lahf
ret
pushf
decl
repz
rclb
ret
movsb
mov
mov
inc
add
mov
inc
nop
shll
pop
mov
sbb
addl
cmp
adc
pop
int
mov
aam
ret
pop
in
fiaddl
xor
mov
ret
fcmovnu
out
jo
sub
xchg
sbb
mov
sub
add
pop
sbb
pop
xlat
xchg
shl
cmpsl
add
out
in
push
retw
cmpsl
jnp
pop
mov
out
sub
es
lcall
and
sahf
leave
push
icebp
or
push
inc
in
or
sub
fdivrs
add
int3
xor
insb
pop
in
pusha
clc
or
mov
push
jle
cmp
mov
mov
sbb
xchg
test
jns
or
pop
mov
fs
push
dec
subl
pop
outsl
inc
and
icebp
sarl
mov
lds
outsb
out
sbb
sarl
mov
rclb
negb
mov
mov
fst
jno
or
and
xchg
pop
mov
push
or
gs
into
fldt
aaa
gs
shl
fistpll
enter
adcb
add
mov
xor
in
outsb
fistl
imul
in
das
jp
jo
or
fs
fdivrp
xchg
addr16
jo
dec
jg
outsl
fcom
mov
enter
xchg
or
and
mov
inc
mov
lret
lcall
push
out
cmp
add
sbb
movsl
add
adc
loop
jo
test
mov
push
roll
xor
arpl
cltd
dec
push
mov
jae
ljmp
cmp
sbb
pop
imul
xchg
loopne
and
std
rcrl
lahf
cmpsl
ret
push
jbe
add
xor
adc
loope
add
mov
test
mov
pop
mov
fildll
sbb
inc
dec
mov
jo
hlt
hlt
mov
fsubp
xor
ljmp
add
push
cmp
jg
jp
ret
aaa
sbbl
divb
jp
pop
jbe
pop
sarb
jno
lea
rcl
and
leave
rcrb
jno
mov
fsubrl
pop
jb
addr16
or
aad
mov
lock
adc
arpl
push
xchg
push
loopne
jno
js
dec
int3
inc
insl
int
addr16
cmp
or
sbb
sbbl
rcrl
and
sub
pop
pop
in
xor
push
jg
dec
pop
ja
inc
mov
aas
or
insl
mov
mov
pop
add
popf
clc
and
pop
paddd
pushf
jb
roll
or
jne
pop
int3
popa
in
or
sub
add
adc
ds
ret
loopne
mov
fnstcw
mov
inc
sbb
pop
mov
xchg
outsl
ret
pop
adc
icebp
cmp
jle
pop
mov
xchg
push
jno
addr16
lahf
ret
inc
mov
shrl
popl
out
sarl
inc
xchg
scas
loopne
imul
mov
icebp
lcall
adc
adc
mov
lods
and
popf
xor
popa
sub
jns
jp
insl
jge
mov
xchg
imul
out
xchg
movsb
add
sbb
cmp
test
jo
sbb
test
pop
and
inc
cmp
jae
enter
push
adc
xor
mov
jg
xor
test
lcall
mov
mov
ret
pop
in
pushf
lret
fnstcw
xor
popa
mov
sub
js
inc
jecxz
inc
outsb
mov
pushl
pop
mov
xorl
or
fidivrs
in
imul
test
outsb
jae
and
cld
adc
arpl
icebp
gs
fsubr
adc
repz
daa
icebp
out
ror
clc
movsb
lods
pop
icebp
xor
mov
jp
mov
cmp
in
xchg
into
jno
add
loopne
xor
sbb
cs
cmp
cmp
aas
fistpl
test
cld
inc
shr
lds
lret
xchg
and
clc
or
iret
nop
mov
add
jl
fidivrl
xlat
fcmovnb
xchg
call
pop
arpl
mov
lcall
mov
xor
ja
pop
ret
bswap
sbb
gs
cmp
or
cltd
jle
cmp
mov
jl
pop
out
roll
xchg
pop
dec
mov
stos
add
jge
fwait
das
xor
xor
or
arpl
cmc
mov
bound
xor
or
scas
cld
or
push
add
pop
pcmpgtb
outsb
jb
sahf
push
xchg
test
inc
fsubl
mov
inc
ljmp
sahf
pushf
jle
xchg
lods
dec
xchg
push
pop
mov
cmp
out
mov
jno
xchg
inc
push
cli
xchg
ss
imul
add
mov
scas
stos
sub
rcrl
add
fcmovb
fstpl
jno
inc
clc
sbb
dec
dec
xor
dec
cmp
iret
pop
cli
sub
nop
repz
imul
lock
fnstenv
cmc
lret
outsl
jb
fwait
sub
jecxz
cld
ret
mov
or
cmp
dec
lahf
aaa
add
adc
es
test
xor
sub
xchg
and
outsl
and
push
cwtl
mov
popa
fwait
pop
orb
mov
in
je
ret
and
xchg
jns
cltd
shll
push
push
jmp
jbe
xchg
data16
xchg
cltd
xchg
add
lea
pop
aaa
and
aas
sbb
add
jae
inc
and
push
rcl
aam
sahf
rorl
jae
sti
sbb
lahf
jmp
cs
push
xor
sub
out
jbe
sahf
mov
ret
pop
imul
mov
js
fsubl
adc
jno
pop
cmp
mov
jae
subps
pop
ficoms
mov
popa
fildll
lea
pop
shl
mov
add
pop
in
or
iret
scas
mov
xor
aad
ret
mov
nop
das
push
inc
or
ljmp
and
mov
or
pop
push
pop
add
in
mov
jmp
roll
push
lahf
mov
rcrl
mov
cmp
mov
adc
flds
sbb
lcall
sub
test
inc
outsb
ret
push
xlat
insb
inc
fiaddl
mov
rcrl
xor
nop
pop
js
rorl
mov
imull
addw
imul
add
mov
stos
pop
jbe
std
shlb
mov
push
dec
push
jp
test
jg
loopne
lods
sbb
mov
sbb
sub
in
pop
in
bound
and
lret
xchg
fisubs
mov
and
pop
sub
lods
fldt
cmovb
xchg
adc
xchg
loope
mov
in
xor
js
mov
pusha
insl
test
adc
pop
cltd
or
insl
push
mov
lods
in
sahf
icebp
pop
xchg
push
orb
nop
sbb
jl
sahf
mov
aas
or
popf
dec
lret
lret
xor
aam
jp
lahf
sbb
fidivs
jp
xchg
mov
daa
push
push
push
in
sub
and
xchg
call
dec
pop
mov
nop
xchg
icebp
cmpsb
loop
sbb
call
shll
jle
cli
scas
mov
fnsave
jp
mov
mov
repnz
dec
popa
and
adc
int3
das
sbbb
jp
sbb
repz
pop
mov
mov
jg
push
orps
pop
ss
shll
adc
sub
cmp
cmp
psubsb
popf
dec
jno
loopne
shll
arpl
adc
ss
xchg
add
mov
xchg
dec
jno
cwtl
addr16
xor
add
daa
push
sub
out
arpl
iret
pop
jge
inc
cmp
iret
mov
add
roll
xchg
mov
test
mov
pop
jmp
mov
lock
fadd
mov
mov
sub
adc
imull
push
jnp
mov
mov
rclb
dec
push
xchg
xchg
inc
cmp
adc
and
add
jle
push
jae
xchg
cld
cmp
stos
and
dec
mov
and
xchg
push
xor
cltd
cmp
inc
fcompl
and
lret
punpckhbw
out
mov
mov
enter
ljmp
lret
int3
stos
loopne
daa
dec
cmp
lahf
dec
test
lea
lea
inc
or
jae
pop
incl
sbb
test
iret
fadds
nop
arpl
mov
test
add
lret
adc
mov
js
inc
cmc
in
jl
popa
vmovddup
or
cmp
sbb
leave
hlt
sbb
aaa
imul
sbb
mov
and
sub
mov
cs
into
mov
xorl
or
pop
mov
idivl
das
xchg
fbstp
adc
lahf
inc
in
icebp
icebp
clc
xor
aam
ljmp
mov
fiadds
int3
movsl
jmp
add
jmp
inc
xchg
xchg
in
pop
aam
fcoms
decb
pop
ret
and
push
daa
and
mov
addr16
lahf
cmpl
mov
imul
push
repz
cld
rcll
mov
jl
jae
sbb
jo
sar
cmp
in
fbstp
mov
xchg
outsb
hlt
cld
sbb
sub
pop
test
inc
cld
ret
dec
push
jmp
in
es
sub
sahf
movsl
sub
outsb
push
popf
pop
fildll
push
sbb
or
push
adc
cmp
pop
push
pop
sarb
mov
jae
std
cmp
mov
add
mov
repz
mov
daa
in
push
fildl
das
push
fnstsw
sbb
lds
cmp
decl
lock
icebp
pop
dec
xchg
aad
and
aas
or
mov
jne
in
out
int
xor
popl
fidivs
aas
psubq
jmp
fwait
je
mov
jae
shlb
lock
loope
imul
mov
xchg
jmp
jnp
jecxz
jae
push
jg
xor
add
mov
dec
inc
add
out
jno
cmpsl
mov
out
popf
fstpt
mov
jecxz
ja
jge
adc
adcl
jg
mov
fstpt
jae
pop
mov
iret
inc
jbe
sarl
into
test
or
aad
in
jae
jne
sub
push
mov
add
mov
adc
jecxz
xor
jae
inc
jae
pop
mov
fadds
cmpsl
iret
mov
bound
mov
mov
lods
jne
jecxz
jle
into
lret
ja
or
cmp
bound
ret
jae
movsl
pop
mov
mov
xor
mov
sbb
mov
push
imul
cmp
repz
outsl
mov
fbstp
cmpsl
ret
jne
loope
jmp
jne
addl
jge
imull
fwait
lods
fistps
jae
mov
stos
jns
xchg
mov
adcl
adcl
cmpsb
sarl
pusha
push
jmp
imul
sarl
jmp
lds
insl
jecxz
stc
jmp
roll
jnp
popa
mov
jp
popa
jne
jno
cmpsl
loope
popa
arpl
daa
mov
imul
lds
jecxz
notl
lds
mov
cltd
bound
addr16
dec
xor
jge
shrb
arpl
pop
xchg
mov
lahf
pop
xchg
negl
jno
stc
rol
mov
arpl
mov
imul
sarb
cmp
iret
aad
lahf
push
fwait
inc
pop
mov
jle
imul
lods
push
fstps
add
lods
add
lcall
mov
call
push
sarl
inc
mov
in
fisubrl
mov
add
mov
mov
in
inc
wbinvd
xor
sub
outsl
and
movsb
movb
ret
xchg
daa
lock
cli
adc
aaa
popl
pop
push
jb
xor
orb
or
outsl
shll
sbb
sbb
pop
cmpsl
push
adc
lret
test
mov
dec
dec
and
add
pop
jge
ds
jg
cs
cwtl
lods
mov
rorl
mov
sub
dec
xchg
ljmp
popa
les
ret
and
sub
push
scas
or
cltd
dec
sub
out
sbb
mov
push
sub
fiadds
cltd
out
xchg
inc
jne
fstp
push
rorb
or
je
cli
cmpxchg
lock
popl
in
jmp
mov
stc
jno
jp
adc
jo
leave
je
pop
cmp
adc
inc
arpl
fsubs
xor
sub
std
fsin
adcb
in
and
xor
dec
pop
jae
push
inc
pextrw
addr16
add
fisubrl
and
mov
cltd
sbb
inc
faddl
fnstenv
add
rcrl
mov
and
adc
sqrtps
xor
fcmove
lahf
fsubrs
jge
cwtl
cli
and
shl
dec
jae
mov
and
insl
cmp
call
xchg
jmp
fucomi
aam
fdivrl
cmp
lcall
fisubrs
adc
or
lds
jnp
sub
aam
push
push
sbb
fisubs
fdivl
movsl
pop
sbb
pop
rol
and
popf
sbb
jg
pop
cmp
or
sbb
add
hlt
xchg
mov
lahf
or
outsl
cmp
sub
call
test
adc
jl
ret
mov
mov
dec
mov
xchg
xchg
mov
xor
subb
and
ret
repz
sbb
out
lods
jg
adc
lahf
xorb
aaa
loope
and
scas
imul
sarl
xchg
push
test
pop
push
cmp
sbb
movsbl
mov
mov
and
fcoml
fiadds
fcmovne
cmp
in
jne
inc
in
sub
ror
hlt
mov
aas
pop
ret
and
fcom
test
mov
xchg
stc
push
jb
scas
popf
aad
divb
mov
sub
imul
sbb
mov
pop
mov
imul
rcrl
arpl
jbe
push
imul
mov
nop
out
push
fstp
jnp
dec
divl
xchg
adc
mov
xor
cmpsl
xchg
cmpl
fst
pxor
inc
les
mov
push
lss
cltd
pop
test
adc
mov
or
aad
mov
fcmovnbe
jecxz
movsb
xlat
shll
add
jge
sub
xor
jmp
leave
xchg
loop
and
mov
jo
and
popa
mov
stos
lods
jle
add
pop
in
or
xchg
test
push
lret
jnp
movsb
inc
fxch
sbb
ret
pop
xchg
or
or
scas
inc
sub
jp
subl
insl
mov
adc
sbb
mov
cwtl
outsl
push
add
fiaddl
icebp
inc
unpckhps
sub
jb
jns
fnstcw
sarl
push
shl
shrl
cmp
or
cmpsb
xchg
lahf
mov
outsb
imul
dec
das
mov
and
mov
push
mov
in
aas
sahf
daa
add
pslld
mov
stos
pushl
pop
gs
mov
adc
adcb
mov
inc
bound
into
add
jae
cmp
incb
mov
js
adc
cmpsb
and
mov
pop
cmp
sbb
sub
mov
data16
push
jp
adc
pop
pop
pushl
dec
xor
sbb
inc
scas
jmp
xor
or
mov
xchg
or
mov
push
pop
jae
mov
pop
mov
push
xorb
jnp
jmp
sbb
mov
pushf
push
and
das
stc
mov
arpl
push
add
pop
or
sbb
or
decl
int3
sub
out
repz
xchg
stc
pop
inc
pop
jns
xchg
or
and
lea
lock
sahf
jae
pop
and
pop
pop
mov
fwait
stos
dec
outsb
pop
xchg
sbb
dec
lock
xor
and
push
cmc
lret
cmc
rorl
lret
xor
stc
es
mov
out
inc
mov
lds
adc
sub
ljmp
sbb
popf
lahf
cmp
fsubrl
cmp
cmpsl
jg
xlat
pop
orb
xchg
inc
add
test
mov
mov
imul
and
aad
sahf
pop
loopne
jnp
xchg
outsl
stos
sbb
jmp
iret
les
or
inc
cli
mov
xor
bound
xchg
adcl
pop
fldt
sub
inc
xor
xor
orb
push
jl
fstl
mov
lcall
sarb
ret
loope
push
and
imul
aam
xchg
adc
adc
test
test
mov
ror
pop
mov
sub
sub
inc
in
popa
dec
mov
repz
loop
popf
cmc
jge
cmpsb
gs
jp
fildll
insb
out
std
mov
mov
mov
pop
fcomps
xchg
imul
mov
insl
lock
adc
imul
iret
out
and
clc
pop
aas
and
sar
popa
subl
mov
xchg
shrl
fiadds
jb
imull
stos
or
sbb
or
mov
mov
dec
in
addl
repz
xor
mov
pop
jnp
jb
jl
push
fbld
sarb
daa
addr16
in
push
mov
out
adc
rcll
paddsb
mov
popl
sub
jnp
and
ret
add
push
scas
sbb
clc
pop
push
sbb
out
add
xchg
ds
or
push
ret
xorb
push
jp
lcall
xchg
js
rcll
jnp
xchg
test
in
nop
lds
jg
cmp
dec
push
push
enter
push
inc
loopne
mov
rcrb
nop
daa
xor
xchg
sub
jns
daa
in
xchg
sarl
mov
fwait
lahf
outsb
cmp
xor
testb
add
inc
lcall
lret
mov
xor
popf
rcr
je
fsubr
xorl
lock
test
add
or
jmp
push
inc
sub
rolb
insb
pop
dec
mov
aas
sbbb
mov
xchg
mov
sbb
jno
das
sar
aaa
adc
mov
and
mov
loop
repz
test
inc
xchg
xorl
lock
sbbl
ret
outsl
cltd
insl
cmp
sub
sbb
xchg
add
test
pop
sbb
roll
cmp
xchg
mov
in
cltd
sarb
cmpsl
or
ret
jb
icebp
leave
movsl
cmp
jo
pushl
pop
test
int3
mov
sbb
pop
xchg
scas
push
pop
aam
or
mov
mov
xlat
xchg
movsb
or
sub
jns
mov
jo
xchg
into
ret
jmp
aam
jmp
push
out
cmp
sahf
clc
xchg
add
ret
xchg
pushl
addb
pop
xchg
cs
inc
mov
jge
rorl
sbbl
pop
mov
push
mov
les
dec
mov
mov
sbbl
mov
iret
xlat
icebp
cld
test
jmp
xchg
mov
mov
inc
lahf
sti
pop
fisttpl
pop
or
in
xchg
insb
dec
adc
mov
outsb
sbbb
cmp
mov
mov
stc
xor
mov
stc
push
sbb
insl
pop
popf
cmp
test
mov
cwtl
jp
xchg
mov
outsb
lods
jmp
jge
and
mov
mov
fs
or
dec
in
jg
jno
es
jnp
xchg
iret
push
fmuls
mov
insb
out
push
add
push
and
flds
sbb
jnp
enter
pushf
repz
mov
inc
arpl
push
rcrb
out
orb
add
sti
jae
mov
jg
fidivrs
pop
jge
out
enter
mov
push
push
cmp
ja
inc
pop
jg
sbb
xchg
pop
sub
add
clc
jnp
pop
out
push
lahf
outsl
xorl
mov
in
xchg
test
bound
addb
pusha
jnp
shll
vpunpcklqdq
jno
jge
jbe
shrb
sub
jae
fimull
arpl
popf
adc
sub
jecxz
cmp
mov
push
jnp
cmp
jg
mov
fistl
imul
pop
hlt
xlat
or
sbb
mov
fidivrs
jne
arpl
arpl
das
popf
pop
pop
cmpsl
jg
adc
push
jno
roll
mov
mov
filds
jle
mov
jo
jg
mov
mov
mov
pusha
jno
pop
data16
test
shr
shl
repz
repz
and
pop
xchg
faddp
popa
sbb
lods
fidivrl
mov
fstpl
outsl
mov
mov
ret
jae
fnstenv
int
fnstsw
jp
jp
jp
or
out
jnp
jnp
outsl
mov
xor
jnp
outsl
push
andl
insl
mov
cmp
jp
sti
test
inc
mov
ret
roll
fstps
pushl
jecxz
andb
and
jae
cmpsl
fbstp
cmpsl
mov
into
cmpsb
test
xor
leave
cmp
jnp
jae
outsl
jo
fistpll
jo
ja
jg
insl
jnp
jnp
adc
cmp
sbb
jae
imul
push
mov
gs
mov
sbbl
or
outsl
stc
aam
test
cmpsl
push
cli
inc
mov
out
pop
mov
mov
in
cmc
aam
mov
xorl
dec
lea
xor
clc
push
jg
cmp
in
leave
pop
scas
out
or
jnp
dec
stos
inc
xchg
in
movsl
sbb
imul
push
mov
or
lcall
and
ja
xchg
or
cmp
daa
or
jle
dec
jp
xchg
pushf
cmp
testl
jp
test
mov
adc
cmp
cmp
rcl
and
lcall
ud0
or
xchg
mov
data16
mov
mov
push
add
adc
mov
xor
arpl
loopne
icebp
push
or
ret
leave
or
mov
enter
cmc
pop
lea
sbb
push
das
add
jle
pop
mov
iret
into
test
mov
lock
inc
sti
sbb
or
outsl
push
outsb
test
std
inc
data16
fnstcw
iret
jecxz
outsb
cmpsb
loopne
gs
fbld
xchg
add
push
xor
jl
ljmp
cmpl
out
xchg
jo
xchg
and
fstl
mov
mov
or
rcll
psrlq
ljmp
mov
shll
cmp
sbb
icebp
stos
xor
out
rcr
xchg
and
scas
out
scas
popf
lods
jnp
das
imul
arpl
mov
mov
movsl
add
out
dec
aas
or
inc
jae
std
or
iret
mov
les
fcom
loop
rolb
gs
jmp
pop
cmpsl
sbb
mov
push
push
movsb
cmp
push
cwtl
mov
mov
rol
inc
push
jno
cld
and
mov
dec
lret
insl
xorps
scas
push
decl
aas
lcall
aam
push
mov
dec
or
rol
mov
cltd
decl
aaa
cmpsb
xor
jns
xchg
je
or
cmpsb
int
addr16
jmp
shll
into
cs
stc
pop
pop
mov
mov
rorl
push
sti
xor
into
cltd
jbe
or
mov
lahf
loope
and
jns
adc
adc
mov
cmp
dec
rcrl
test
mov
adc
xor
aad
rcll
jmp
ret
xchg
dec
movb
adc
push
fadds
or
xchg
cmp
xor
in
mov
imull
ret
popl
pop
mov
mov
fwait
cmp
mov
iret
mov
ret
fbstp
xchg
mov
dec
dec
lahf
cmpsl
call
arpl
pop
and
lds
pop
pop
jp
push
bound
inc
mov
pop
fcmovnb
jg
sbb
or
xchg
dec
call
mov
jns
test
sbb
push
push
aas
or
retw
pop
cmp
dec
lcall
movsl
pop
ret
out
iret
imul
or
mov
loopne
dec
jle
mov
add
stc
push
test
shrb
out
inc
fsubs
out
sub
sbb
enter
imul
repz
pop
das
jnp
sbb
andl
xchg
in
add
cmp
lock
pop
mov
roll
pop
int
jmp
or
andl
ja
out
add
mov
jno
mov
lcall
pop
clc
xchg
adc
push
fwait
inc
inc
mov
jae
imul
adcl
lea
in
out
mov
pop
andl
jnp
dec
test
in
lret
sub
data16
jb
cmovs
hlt
pop
in
pop
int3
fistl
push
ds
cmpl
xchg
shlb
mov
xsetbv
mov
xlat
pop
data16
lea
nopl
cmp
dec
pop
cmp
xlat
arpl
xchg
and
mov
add
push
icebp
sbb
push
popf
lret
testl
into
das
ss
mov
incb
and
in
push
cmp
jae
cld
sarb
scas
push
jecxz
pop
in
mov
insl
push
xchg
cmp
mov
icebp
addr16
shlb
aaa
stos
cmp
pushf
push
std
jno
or
lea
cmpl
mov
cmpsl
hlt
jbe
pop
xor
filds
pushf
push
cmpsl
inc
test
aam
test
mov
outsl
add
push
jmp
outsl
cmpsl
add
mov
lahf
xor
push
bound
fptan
jnp
mov
sbb
shlb
jnp
lods
dec
in
pushf
mov
mov
fcmovne
jl
test
roll
sahf
push
imul
pop
or
paddusb
neg
fsubl
push
sbb
push
inc
mov
mov
sub
and
test
ret
add
adc
popf
arpl
dec
mov
and
cltd
fmull
ret
sbb
jae
cli
add
rcll
cmc
jae
pop
fnsave
and
ja
or
push
jne
icebp
pop
inc
scas
sub
movsl
push
cmp
mov
pcmpeqb
and
test
fisubrl
jp
jo
clc
sbb
js
adc
outsl
aaa
mov
and
mov
push
or
cmp
dec
out
mov
lods
pop
xchg
rorb
mov
xchg
int
and
fisubrs
inc
repnz
mov
loopne
or
lahf
mov
in
jle
lret
add
call
xchg
sub
inc
sbb
mov
das
pushf
iret
xchg
call
or
mov
jg
test
mov
jecxz
ffreep
adc
test
aas
ret
push
push
nop
fistpl
push
push
pop
les
mov
xor
and
xlat
out
leave
dec
loope
popa
fstpt
dec
cmp
mov
test
test
in
mov
mov
insb
pop
ds
mov
lods
in
mov
jo
lcall
inc
int
popa
ror
cmp
jl
repz
push
arpl
scas
push
xor
shlb
mov
daa
test
inc
js
cwtl
scas
imul
mov
pop
mov
and
frstor
clc
xchg
je
or
adc
mov
jns
subb
es
movl
call
fildl
cmp
wrmsr
shll
stos
xchg
imul
jmp
xchg
andl
mov
mov
mov
mov
jl
insl
sar
and
jge
outsb
jecxz
orb
filds
in
add
arpl
imul
dec
push
aam
and
mov
and
repnz
movsl
mov
lret
dec
or
movsb
push
sub
xor
inc
test
mov
ret
and
test
shll
lock
push
push
adc
pushf
inc
or
out
std
and
and
xchg
in
jecxz
cld
sub
je
inc
mov
mov
fisttpl
jg
test
inc
mov
jae
iret
cld
sbb
repz
lahf
and
js
xchg
cs
les
btc
test
lahf
ljmp
pop
and
dec
jne
mov
lock
ret
test
fwait
stos
inc
push
pop
push
and
subb
test
movsb
bound
cmp
jp
outsl
pushf
jl
sbb
popf
mov
jl
lahf
mov
push
test
imull
sub
lcall
jp
mov
js
stos
or
cmpsl
cltd
inc
lcall
addr16
hlt
dec
add
inc
inc
mov
sbb
enter
lahf
mov
jp
cltd
xchg
adc
mov
movsb
and
movsb
cli
cmp
stos
inc
icebp
jbe
xchg
sub
jp
sub
push
inc
xchg
mov
or
imul
subb
or
jb
sub
out
arpl
sbb
imul
mov
in
sub
inc
mov
testl
aad
out
mov
cmp
sti
in
xchg
dec
sbb
mov
aas
cmp
aaa
pop
push
in
mov
jno
test
adc
js
or
jle
imul
mov
add
sbb
inc
mov
enter
dec
pop
or
test
scas
or
pop
pop
add
fsubl
lcall
sub
cwtl
sbb
mov
lret
mov
inc
xor
or
xor
sbb
or
cmpsb
cltd
jns
add
pop
pop
data16
mov
cs
pop
pop
xchg
jp
add
mov
sbb
cmp
shrb
insb
sbb
inc
cwtl
mov
cltd
lret
xchg
pop
imul
nop/reserved
lret
into
and
clc
jecxz
nop
jbe
sar
cwtl
inc
fcoml
leave
adc
mov
mov
shr
test
pop
add
mov
mov
lahf
and
movsb
fucom
adc
addr16
xchg
or
jae
or
dec
repz
pop
or
push
jae
inc
aas
xchg
dec
pop
mov
mov
into
aaa
stc
lcall
jle
scas
mov
rcll
outsb
pusha
jnp
push
pop
movsl
mov
push
pop
xchg
test
push
in
jp
mov
pop
sar
xchg
jb
decl
xchg
jl
mov
sub
sbb
add
mov
les
decl
dec
rolb
clc
notl
ret
mov
jmp
mov
ds
xchg
aas
int
rolb
rcll
jmp
jnp
call
push
decb
push
and
testl
xchg
sbb
out
cmp
push
mov
sarb
ret
sub
cld
jmp
enter
jne
xchg
dec
inc
jno
add
jg
mov
adc
inc
xor
outsb
and
shll
int
sbb
mov
cmp
rcl
daa
mov
fcomp
mov
jecxz
fldcw
test
jo
les
xor
cmp
xlat
sub
push
imul
lods
aas
lods
dec
ret
inc
mov
lcall
push
iret
call
xchg
cli
vmwrite
push
inc
add
xor
xchg
aas
cld
dec
test
pop
cmp
mov
push
xor
cmp
aas
popa
inc
mov
or
mov
jle
adc
gs
or
pushf
adc
xlat
jp
cmp
or
pushf
pop
lcall
jnp
fistps
outsb
ja
xor
shrl
xchg
sbb
shufps
popf
imul
sub
iret
or
sahf
cmp
sarb
adc
dec
movsl
and
cmc
fsubs
call
xchg
xor
mov
mov
mov
inc
divl
popa
iret
pop
fisubrs
push
arpl
xchg
xchg
pop
sbb
mov
pop
lods
and
icebp
and
or
pop
subb
sub
iret
lods
insl
push
cwtl
stos
dec
icebp
jns
cmc
outsb
mov
cld
mov
push
call
shrl
xchg
scas
outsb
inc
test
cmpl
mov
pop
in
movsb
sbb
jne
movsl
cltd
jg
lret
cmpsb
mov
aas
movsbl
or
lea
mov
js
xchg
jns
add
icebp
outsl
push
faddl
popf
aam
adc
inc
in
loopne
fimuls
movsl
int3
in
or
arpl
cmp
fisttpll
xchg
aas
adc
or
cli
inc
jmp
jbe
xchg
jg
jb
lods
xchg
std
fdivp
inc
push
test
jp
faddl
popf
sbb
out
scas
xor
pushf
loop
cmp
jno
cmpsb
xor
mov
in
xchg
pop
ret
xor
int
pmaxub
shrl
mov
push
jge
jl
outsb
jns
xchg
mov
sub
xchg
insb
popa
cmp
roll
or
iret
mov
jnp
or
xchg
or
xor
aam
and
test
aas
loop
sbb
jmp
xor
adcl
jmp
test
xor
sbb
arpl
ret
sbb
or
pop
popa
push
std
xor
push
sbb
mov
inc
cmp
add
test
add
push
mov
popa
dec
gs
mov
jp
pop
pop
xchg
mov
xor
lcall
xchg
jge
arpl
sbb
lahf
sti
filds
rorl
insb
decl
adc
add
repnz
xchg
cmc
cmp
in
ret
jge
add
add
fsubrp
lahf
movsl
xchg
inc
cmp
xor
mov
or
loop
psrld
inc
dec
push
push
sbb
adc
adc
xor
fdivrs
xchg
jo
jg
mov
inc
mov
mov
push
rorl
mov
stos
in
pop
mov
dec
test
dec
sahf
cwtl
and
pop
cmpsb
arpl
cli
mov
cli
clc
cmp
popf
add
flds
dec
movsl
add
jae
sbb
xchg
and
pop
mov
pop
lods
add
sarb
mov
cli
or
jae
sbb
add
pop
mov
int
popf
rclb
mov
push
loopne
repnz
cltd
fldz
faddl
push
pop
lds
push
sbb
mov
push
sub
jno
inc
dec
aam
xor
aas
iret
aaa
lcall
dec
pop
out
insb
out
fdivrl
pop
gs
popa
and
sub
xlat
mov
xor
shl
lea
lock
jge
mov
int3
mov
push
cmp
lcall
mov
ret
jnp
sbb
aaa
jns
sahf
adcb
lret
sbb
int3
incl
test
pop
dec
mov
sbb
shl
getsec
ret
sahf
jmp
or
pushl
and
psrlw
subb
roll
cltd
int
mov
pop
jbe
jbe
stc
test
testb
or
shll
subb
sbb
and
push
aam
cli
adc
mov
cmp
jne
fiaddl
das
outsl
inc
sub
xchg
push
clc
test
call
in
aaa
inc
cli
mov
xchg
data16
inc
iret
daa
xorb
fidivl
lea
mov
or
push
inc
cmpsl
xchg
faddl
ret
jne
in
cwtl
aad
sahf
cmp
push
int
sti
sbb
pop
aad
stos
push
cmp
fstpt
xchg
out
cli
pop
movsl
shlb
test
cltd
cld
stos
lock
mov
or
ret
in
clc
fnstenv
in
jns
leave
repnz
or
int3
lods
jne
roll
dec
rcrb
push
jp
jge
mov
clc
adc
decb
sahf
xor
dec
stos
jl
adc
xor
cwtl
popa
xor
push
add
jl
push
cli
movsl
movb
and
mov
pusha
outsb
or
pop
subb
cld
jmp
lret
vpsrlq
jbe
adc
xchg
or
subb
mov
xchg
sub
xchg
ss
push
mov
push
js
pop
add
and
push
rcll
in
iret
maxps
push
fdivr
push
inc
aad
dec
xchg
xchg
fs
push
imul
cmp
xlat
mov
testb
or
lahf
into
scas
and
gs
pop
and
pop
mov
push
scas
pop
mov
outsb
lods
push
lods
mov
or
fsub
lret
pop
or
sub
jl
or
loope
scas
sbb
aas
sbb
sub
inc
fs
int
popa
stc
jp
cld
mov
pop
cmp
jae
stos
stos
or
test
iret
add
adc
jns
xchg
mov
push
sub
xchg
or
mov
jle
push
call
dec
sbb
jno
adcl
stos
fisubl
fisttpl
push
mov
push
insl
jnp
sbbl
nop
rorl
mov
in
add
shrd
and
cmp
mov
pop
insl
xchg
ret
push
cmp
push
vdivss
in
mov
sbb
cmp
xor
and
pop
dec
jg
leave
cld
mov
mov
ja
xor
movsl
cmp
mov
xor
pop
scas
fwait
movsb
jae
pop
mov
ja
into
push
and
jle
dec
mov
mov
fadd
mov
sub
fisubs
sbb
xchg
es
cmpsl
inc
mov
popa
test
inc
fisubrl
lcall
sbb
aas
jns
clc
pop
cld
mov
jle
mov
lock
nop
mov
add
jae
and
mov
orl
btr
mov
gs
xor
dec
cwtl
add
add
inc
mov
gs
cld
mov
loopne
outsb
adc
xor
in
cmp
cmc
out
cmp
mov
jge
xchg
inc
cmpsl
mov
mov
rcrb
sub
shll
xchg
adc
mov
push
mov
fcmovne
fiadds
xchg
ror
fcoms
sysenter
add
inc
popf
fwait
inc
xchg
nop
in
orl
xlat
mov
pusha
fists
mov
movd
pop
push
sbbb
addr16
lcall
cs
jg
mov
iret
or
popa
jno
addr16
out
and
lret
push
ljmp
add
xchg
sbb
sub
popa
pop
repz
fwait
mov
cwtl
ret
fs
push
movq
pop
mov
inc
iret
and
xchg
push
dec
vmovaps
pop
aad
ret
lahf
xchg
mov
fldenv
mov
xchg
daa
out
and
sub
jecxz
dec
cs
adc
xchg
add
pop
jecxz
mov
pop
dec
push
mov
out
iret
inc
add
inc
out
ljmp
cwtl
mov
lahf
pop
xchg
cmpsl
xchg
xor
subl
and
push
xchg
aas
ljmp
pop
ds
and
jp
lahf
in
jg
sub
mov
inc
fcomps
push
inc
adc
xchg
sub
int
jmp
push
cli
lods
cld
inc
out
fwait
add
mov
addl
cmpsb
in
leave
decb
rcrl
xchg
mov
andb
bound
repz
xor
iret
sbb
mov
cmp
push
sbb
outsl
xor
pop
mov
xchg
addl
in
add
flds
pop
inc
push
js
jle
cwtl
clc
jae
mov
test
add
es
neg
je
rclb
pop
or
cld
pop
push
out
add
into
adc
repnz
sbb
test
sar
adc
hlt
arpl
jne
xor
mov
cmp
sub
scas
cmp
arpl
jb
hlt
outsl
psadbw
sub
clc
xchg
pop
mov
jecxz
and
lea
xchg
pop
pop
and
mov
pop
and
clc
iret
loop
sub
in
jecxz
sbb
push
pop
xchg
in
aaa
popf
movsb
push
faddl
push
repz
jae
jne
pushf
insb
mov
sub
sqrtps
add
mov
dec
popa
add
sahf
and
aas
inc
sbb
sbb
ja
cmc
push
mov
dec
jmp
inc
jl
push
icebp
in
mov
nop
pushf
aas
and
sar
xor
ss
dec
decb
loopne
mov
and
add
faddl
mov
xlat
pop
shrl
adc
add
into
mov
jns
enter
cwtl
mov
fwait
addr16
icebp
test
push
jo
insb
ret
cwtl
andl
cmp
fcoms
sub
dec
sahf
mov
loop
mov
aad
pop
aam
stc
and
jne
cmp
mov
iret
jp
fildll
xor
mov
in
xchg
pop
sub
mov
pop
cld
cmp
stos
pop
in
push
fbstp
lcall
push
fisubs
les
xchg
mov
xorl
xorl
inc
sbb
movsb
jb
sbb
imul
fldcw
sub
sti
xchg
cmpsb
inc
stos
cs
fldt
rorb
add
mov
imul
imul
arpl
addr16
sahf
pop
aaa
cmc
test
add
loop
jne
or
jnp,pt
test
aam
pop
push
cltd
adc
sub
enter
push
mov
lea
movntps
hlt
xorl
push
stc
sahf
add
sub
xchg
mov
std
fwait
sbbb
test
arpl
idivb
dec
shrl
sbb
fldl
ss
jecxz
mov
cmp
or
mov
out
dec
es
and
or
divl
cmp
cli
ss
lock
testl
lods
cmp
jecxz
into
xchg
test
pop
inc
mov
mov
mov
cmp
jae
icebp
cmp
mov
jne
dec
popf
sbb
adc
ds
mov
cwtl
outsl
pop
cmp
lock
push
jbe
or
jg
push
js
sub
out
pusha
lret
jecxz
lret
jbe
out
jno
or
ret
sbb
popa
jne
xchg
fcompl
mov
mov
cltd
icebp
mov
lahf
loopne
xchg
scas
sbb
jnp
xchg
aam
xchg
mov
dec
mov
iret
imul
test
pop
mov
jae
iret
lret
mov
xchg
addl
xchg
xchg
mov
test
or
rcl
mov
sub
or
xchg
fadds
pop
pop
lcall
or
popa
and
test
xor
fucomip
sbb
inc
mov
cmova
and
jp
inc
pop
xorb
rcrb
movsl
mov
les
inc
stos
popf
mov
xchg
and
aas
cmp
xor
pop
adc
push
nop
add
out
sub
aam
add
or
sub
out
and
mov
xor
aas
lods
dec
xchg
jno
xor
cwtl
sbb
sub
cmp
xor
push
sarl
popf
scas
push
mov
mov
out
mov
lea
sbb
sbb
addr16
repz
pop
pop
imul
mov
adc
mov
mov
push
sub
mov
mov
fstpl
inc
mov
test
arpl
jns
push
fcoml
sub
pushf
ret
adc
mov
lods
jae
jnp
jne
fdivl
xchg
mov
incb
incb
cltd
jp
dec
inc
lret
sub
xchg
cmc
cmp
inc
out
inc
pop
jmp
pop
jbe
lea
rorb
arpl
vmwrite
test
mov
mov
and
mov
jp
inc
pop
je
sub
dec
xchg
iret
ret
iret
xchg
inc
add
aad
xor
cwtl
test
sahf
stos
scas
mov
inc
xchg
push
jp
cs
mov
add
adc
mov
sbb
cmc
rorl
push
sti
push
sub
or
xchg
or
arpl
pop
scas
mov
jmp
cmp
lcall
jp
and
cmpsb
xor
int
push
pop
cmc
mov
sbb
pop
in
mov
xor
in
pushl
stos
paddusb
icebp
jns
leave
adc
and
cld
xor
xor
sbb
mov
inc
add
sub
mov
xchg
sub
outsl
sbb
cmpsb
jmp
movsl
aam
pop
xchg
or
mov
arpl
mov
mov
ja
xchg
pop
popl
mov
push
xchg
aas
jnp
inc
movb
daa
or
les
jo
mov
inc
es
xchg
jg
adc
mov
mov
push
in
add
adc
ret
sub
hlt
and
fldz
in
pop
stos
jl
xor
xor
push
sub
idivb
ds
add
jmp
cmpsb
xor
ds
and
cs
test
arpl
arpl
out
test
push
push
mov
aad
or
out
dec
jge
sub
cmpsb
ljmp
fldt
cmp
push
mov
jg
sbb
test
mov
inc
mov
fimull
cmp
psrlq
pop
mov
lahf
add
or
decb
sbb
mov
cltd
dec
sub
pop
or
test
bound
ja
jae
arpl
shrl
cld
test
movsl
mov
in
jne
js
stos
cmpsb
mov
rcrl
ja
sbb
mov
aaa
int
mov
rol
pop
add
adc
pop
inc
jnp
xchg
add
or
adc
jno
xchg
push
xlat
dec
sbb
mov
in
xchg
icebp
xor
mov
setne
es
pop
adc
push
imul
inc
xchg
cli
xor
or
mov
xlat
out
ficomps
push
mov
ss
jns
arpl
andb
insl
ffreep
lods
push
dec
dec
loope
add
push
popf
shll
shlb
pusha
popf
add
dec
xchg
icebp
add
pop
mov
pop
fisubl
test
insb
ret
in
je
stos
xor
movsl
icebp
and
add
dec
mov
cld
movsl
test
fstpt
mov
adc
test
scas
jp
sub
icebp
lock
arpl
inc
lea
ljmp
cld
ja
sub
cmp
movsb
push
jo
in
fisubl
pushf
loopne
mov
fcompl
ret
fcom
mov
iret
js
mov
cld
and
repnz
jns
test
lds
iret
pushl
cmp
or
test
jge
mov
mov
mov
mov
add
xchg
adc
out
sahf
lods
cmp
js
loop
outsl
sbb
fsubrs
lret
sub
push
iret
icebp
call
mov
imul
dec
sub
sub
shll
xchg
js
xchg
sbb
lds
mov
fsubrs
dec
rorl
jl
inc
xchg
cli
cs
addr16
xor
and
push
frstor
enter
mov
popa
sub
clc
and
lea
lds
rolb
pushf
fucomp
je
std
pop
fs
cltd
mov
cmp
out
or
and
bound
adc
jae
and
outsb
or
cmp
add
les
rol
fsubrs
cs
popf
jp
xchg
mov
jns
or
pop
adc
add
pushf
call
out
sub
xchg
cmp
lcall
movsl
xor
stos
mov
mov
ficompl
mov
in
jg
loopne
or
xchg
mov
xor
jp
mov
jmp
pushf
pop
or
mov
aam
adc
jp
movsb
gs
dec
jp
mov
addr16
push
insl
mov
xchg
pop
and
adc
or
lock
imul
movsl
cli
lret
lcall
cltd
lret
shl
or
add
jmp
and
orl
jns
mov
or
cmpsl
mov
shrl
xor
lods
sti
xor
mov
stos
pushf
iret
sbb
xchg
rcll
out
mov
and
ret
mov
add
pushf
cmc
icebp
sbb
and
xchg
cld
subl
xchg
fstpt
loopne
xchg
ret
test
aas
add
cmp
sub
jmp
out
mov
xor
sub
push
push
notl
pop
fstpl
js
mov
ja
aas
xchg
clc
sbb
mov
fwait
aaa
cs
in
mov
icebp
addb
pop
imull
andl
mov
test
cli
jno
sbb
cmpsl
sub
and
cmp
push
imul
mov
imul
dec
adc
dec
subl
mov
ret
dec
mov
adc
dec
cmp
stos
dec
dec
sbb
mov
xor
pop
test
aas
jns
adc
call
ds
and
push
xor
jp
por
lods
dec
ficomps
imul
pxor
inc
push
jmp
sbb
push
jmp
mov
mov
push
cmpsl
push
and
mov
pop
lahf
dec
lcall
pop
mov
lret
adc
test
outsb
pop
addr16
int3
inc
imul
in
mov
mov
mov
or
lret
push
cli
rorl
xor
mov
inc
mov
push
mov
dec
and
cmp
cli
or
mov
and
andb
sub
scas
mov
outsl
and
inc
ja
xchg
mov
fwait
dec
lea
adc
iret
clc
ds
repz
sbb
insb
xor
or
ss
cmp
pop
pop
notb
scas
aas
push
mov
dec
jnp
fmull
xor
jo
add
and
ja
inc
test
nop
rclb
jmp
sbb
iret
jg
fnop
inc
mov
add
xor
jnp
add
filds
mov
lods
inc
inc
or
push
in
orl
shl
call
aas
pop
mov
xor
and
push
mov
iret
call
repnz
leave
dec
sarb
dec
ljmp
imul
scas
pop
int3
cmp
call
mov
outsl
insl
mov
or
fwait
pop
xor
jmp
out
inc
loope
adc
push
ret
inc
js
xchg
das
pusha
lret
or
addb
icebp
pop
loope
xor
icebp
adc
scas
jecxz
setb
add
push
adc
ljmp
jmp
orb
aas
jns
adc
or
pop
add
sub
fmuls
pmulhw
adc
test
xor
mov
push
loopne
cmpl
mov
icebp
pop
outsl
arpl
mov
xlat
into
mov
in
adc
cltd
jb
xlat
and
adc
mov
and
and
cwtl
mov
add
into
mov
call
lcall
out
mov
pop
and
cs
jnp
push
rcl
mov
and
aam
and
lahf
jl
mov
data16
cmp
aaa
inc
push
xchg
lea
push
push
fdivl
fwait
subl
out
inc
xor
lods
mov
inc
aas
addl
xchg
fwait
in
dec
xor
fidivl
sbbb
fs
mov
mov
les
dec
call
lcall
push
pop
shll
pushf
stos
insl
ret
xchg
cs
mov
add
xchg
orl
cmp
or
stos
lcall
test
and
das
and
enter
mov
mov
jmp
dec
push
xcrypt-ofb
cmpsl
das
in
jo
icebp
sub
pop
jl
lcall
adc
sbb
loopne
xchg
test
mov
aam
jmp
push
jge
or
push
or
loopne
jp
mov
push
mov
cltd
cs
mov
add
dec
in
lahf
cmp
xchg
das
cmp
gs
mov
test
fsubrl
test
fstps
loope
add
ret
sbb
iret
je
or
pop
aas
inc
sub
mov
cmp
jns
shll
push
pop
jnp
mov
test
sub
mov
call
mov
arpl
daa
imul
out
jne
sbb
mov
sub
outsl
or
into
pop
mov
lahf
aad
insb
or
in
pop
fiaddl
sbb
roll
and
mov
aas
lea
jmp
inc
movl
data16
rolb
test
loopne
inc
pop
inc
scas
imul
xor
add
fistps
or
inc
push
adcl
pop
adc
sub
inc
mov
loope
sbb
xlat
mov
or
fisttpl
insl
testl
dec
add
sbb
iret
xor
push
pop
sub
test
add
leave
iret
adc
cmp
pop
icebp
mov
push
arpl
loopne
popl
sub
and
mov
mov
pop
xchg
repz
adc
sahf
loopne
pop
mov
mov
or
adc
cld
lea
or
std
mov
leave
mov
ja
cmp
insb
pop
xor
dec
sti
sbb
insl
fcoms
bound
mov
out
push
rorl
mov
add
cmpl
sti
loop
in
imul
jmp
inc
jae
pop
mov
int
nop
add
push
pop
pop
jmp
test
enter
dec
or
inc
xchg
and
aam
fcmovu
sbb
sahf
pop
sbb
add
add
cli
test
in
xchg
repnz
pop
fmuls
add
xchg
imul
inc
aaa
repnz
cld
je
mov
test
sub
pop
add
rol
sbb
sbb
or
aaa
lods
scas
out
mov
leave
gs
jecxz
stos
sti
bound
mov
aas
ffreep
ds
inc
subl
fs
shll
jne
mov
sub
stc
mov
mov
cmpsb
mov
fildl
gs
icebp
jp
aam
pop
shll
in
sbb
jnp
lock
xchg
pminub
test
test
xchg
pop
dec
roll
dec
fcoml
fsubrp
mov
fstpt
in
cmpsb
push
sahf
inc
xchg
dec
jae
jb
lods
ja,pn
movsl
or
and
ja
push
fldenv
mov
dec
xor
fimuls
aas
in
fmuls
addr16
mov
inc
imul
mov
mov
push
add
and
push
loop
add
ljmp
shll
arpl
dec
mov
jp
mov
popl
andb
arpl
into
or
jl
xchg
decl
mov
sti
cmp
mov
sub
gs
rol
into
aaa
jl
lock
jnp
mov
bound
inc
scas
ja
push
mov
pop
int
cmp
jo
fimull
push
jne
pop
jmp
add
inc
popa
out
cmp
stos
adc
and
scas
ja
mov
jp
add
div
fcmovnbe
mov
jecxz
jae
movsl
lcall
pop
and
insb
or
or
iret
and
fdivr
mov
in
aas
jne
adc
iret
push
xchg
lret
je
jns
popa
adc
sub
adc
sbb
and
add
pop
js
aam
dec
jp
dec
pop
std
pop
test
add
test
and
pushf
cmp
ret
das
cmp
pop
mov
jnp
sbb
add
add
push
addl
mov
add
and
adc
addr16
sub
stos
push
nop
pusha
jp
xlat
repnz
iret
fstl
or
jl
mov
push
lea
jge
xadd
or
subb
dec
enter
inc
test
ret
jmp
into
pop
and
les
aam
inc
arpl
pop
cmp
cli
add
ljmp
out
mov
fyl2xp1
adc
add
ror
lcall
xchg
jle
mov
leave
cmc
pop
movsb
add
inc
xor
aad
mov
pop
sbb
popf
sbbb
imul
jb
arpl
filds
or
xchg
movsl
mov
seta
ret
inc
and
jbe
in
xor
jb
fnstsw
mov
xchg
and
mov
dec
fldenv
cmp
iret
popf
test
jne
mov
jge
divb
adc
cmpsl
adc
add
fwait
pop
xchg
add
aad
arpl
pop
mov
xor
das
mov
ret
pop
and
mov
pop
orb
punpckldq
mov
push
cmp
mov
xchg
pop
mov
mov
pop
adc
fidivl
movsl
mov
mov
stc
frstor
into
loopne
call
shrl
xchg
clc
movhps
inc
lret
cmp
mov
lahf
adc
pop
sub
pop
lock
and
insl
mov
push
ret
jno
inc
shll
cmpb
jnp
jnp
test
sub
dec
ljmp
xchg
aaa
inc
pop
cwtl
nop
loop
mov
dec
jbe
push
clc
add
les
cld
sub
in
and
mov
xchg
dec
shll
sti
mov
fimull
fs
call
std
loopne
mov
pop
lock
inc
jg
aas
jmp
add
sbbb
mov
scas
xchg
cs
push
inc
xor
and
xchg
rcrl
xor
jns
mov
or
std
imul
mov
cltd
cmp
adcb
inc
cmp
push
pop
outsb
out
imul
mov
fisttpl
mov
pop
lcall
and
lds
stos
pop
and
aas
pop
incl
loop
push
mul
loopne
pop
mov
daa
flds
notl
mov
push
shlb
jno
loope
test
loopne
movsb
jp
or
test
iret
xchg
mov
ljmp
pop
xchg
js
add
bnd
push
loop
jg
js
inc
test
je
jnp
addr16
xor
fisubl
ds
mull
in
leave
mov
mov
or
test
or
cmp
push
iret
jp
aas
pusha
xorb
mov
stos
test
sysret
jnp
es
cltd
mov
xchg
mov
fcmovnu
push
adc
and
out
push
add
cmp
popa
mov
sub
subl
out
jne
cmpsl
cli
mov
arpl
ret
dec
ret
jb
mov
psrld
shrb
mov
push
arpl
push
sbbl
and
add
mov
mov
inc
and
call
out
in
stos
ret
cmpsl
inc
xchg
btc
jne
push
mov
xchg
pushf
add
test
js
cmpsl
jle
arpl
mov
movsb
mov
or
shrd
jne
or
push
mov
sub
daa
push
scas
out
sbb
es
jp
insl
stos
adc
mov
xor
decl
add
inc
test
pop
mov
cli
mov
push
jno
es
aas
daa
jecxz
and
jo
inc
iret
mov
mov
adc
xchg
lahf
dec
iret
in
std
in
xchg
sar
stos
add
test
adc
shll
add
cmp
out
sbb
mov
pusha
push
sbb
cmp
scas
cmp
mov
rorb
inc
aam
ret
fdivrl
nop
loop
sub
mov
test
push
fisttpll
xor
insb
test
in
rorl
mov
dec
mov
rcll
mov
aas
push
jae
imul
cmp
pop
pop
pop
mov
inc
xorl
mov
mov
lret
shll
cmp
incb
push
loopne
sub
inc
inc
inc
jge
ja
bound
mov
dec
jg
lret
ja
call
adc
dec
push
repz
scas
xchg
cmp
ljmp
into
int
mov
pop
nop
imul
das
dec
inc
lock
push
stos
sarb
or
push
test
movsb
sbb
and
test
sbb
loopew
or
lret
clc
clc
jae
ds
shll
loope
or
jl
rcrl
xchg
fisttpll
jnp
ffree
xlat
fs
js
lds
jg
adc
ret
and
mov
lea
divb
fwait
inc
xor
andl
aad
fcoml
ljmp
in
mov
cmp
shl
cli
cmpsl
test
mov
cmp
push
in
mov
or
sbb
fldl
popa
std
sub
inc
ds
push
hlt
lds
mov
mov
icebp
bound
fwait
cmpsb
lods
dec
fstpt
dec
mov
jno
and
mov
orps
pop
rcrb
sbb
cltd
rorb
add
fidivrl
mov
mov
push
fimull
dec
in
jo
imulb
cmpsb
jp
jge
pop
sbb
out
jae
add
pop
js
subl
inc
fnsave
arpl
arpl
pop
inc
xchg
dec
xchg
lods
mov
movsb
cmp
les
aas
fstpl
push
xchg
cmp
pop
faddp
jnp
jecxz
pop
adc
in
cmp
fwait
roll
rcrl
imul
mov
push
mov
iret
imul
mov
pop
or
arpl
adc
rorl
xchg
jne
pop
mov
out
scas
ret
xchg
int
fsts
jp
jnp
decl
adc
pop
outsl
mov
inc
fnstenv
jmp
aad
xchg
cmpsb
pop
xchg
xchg
mov
bndldx
add
movb
cwtl
push
andl
cmp
ret
shr
adc
pop
sub
pop
cmp
sub
daa
inc
sahf
je
shl
mov
jge
iret
pop
cli
mov
pop
add
subb
aam
shrb
sub
sbb
push
arpl
mov
nop
mov
fwait
pop
aaa
sti
fs
inc
insl
mov
das
adc
iret
int3
mov
imul
mov
mov
pop
rol
fldenv
icebp
or
dec
movaps
pop
mov
das
add
jg
jge
xchg
mov
mov
cld
push
out
xor
sub
xor
sub
aam
cmpsb
iret
xchg
out
inc
cmp
cmp
insb
inc
jnp
enter
sbb
icebp
jecxz
icebp
add
pop
jmp
repz
in
mov
lods
mov
nop
push
dec
scas
lock
ret
pop
cmpb
mov
imul
outsb
mov
fwait
mov
in
shll
mov
pop
cltd
movsl
pop
icebp
gs
lods
loop
inc
iret
pusha
push
lcall
mov
rcll
jp
dec
mov
outsb
movsl
fsubs
or
inc
cmp
mov
xchg
int
inc
inc
insl
js
cmpsl
sbb
mov
clc
jmp
mov
jno
adc
cltd
scas
iret
cmp
data16
icebp
pop
and
stos
push
push
cld
xchg
jg
out
in
fmull
mov
cmpsb
pop
pop
cmp
pop
leave
test
push
mov
jns
cvttps2pi
push
push
iret
aaa
arpl
movsl
mov
or
psllq
jo
dec
inc
aaa
pop
cmp
bt
hlt
mov
add
sbbl
mov
push
pusha
push
lods
or
push
js
inc
stc
adc
mov
push
cmp
ret
lock
test
les
js
fsqrt
sbb
mov
mov
ds
push
cmp
addr16
xor
mov
prefetch
or
lret
icebp
push
add
aad
int
xor
sahf
mov
jnp
inc
ret
push
orl
xchg
out
sub
aaa
mov
dec
dec
std
jge
popa
or
int3
in
mov
scas
movntps
in
lods
call
adc
ja
imul
and
push
or
adc
subb
xor
psrlq
jecxz
es
mov
scas
mov
ret
iret
mov
cmp
fs
ret
sbb
mov
icebp
adc
mov
push
ja
jg
mov
pop
mov
xchg
or
rcrb
xchg
clc
mov
insb
jmp
inc
imul
popa
hlt
and
pushf
jge
addr16
add
push
jae
add
je
jp
insb
sbb
add
adc
lcall
aaa
add
adc
imul
fistpl
rcl
les
xchg
call
cmp
mov
nop
test
fistpll
fistl
sahf
popf
imul
incb
mov
mov
jl
je
test
cld
jg
lods
out
test
out
aaa
jns
xchg
xchg
testl
ljmp
cli
jo
sbb
sbb
mov
fiaddl
inc
push
lods
or
in
js
jge
les
fcomip
mov
es
sti
mov
mov
inc
push
lret
lods
mov
subl
les
scas
adc
mov
jp
ret
xchg
push
xchg
jae
mov
mov
ja
dec
scas
mov
pop
push
ret
jg
mov
inc
or
push
sbb
popf
imul
cld
adcb
arpl
xor
pushl
jb
mov
ja
add
shrl
lds
jle
lret
xchg
je
dec
popf
add
mov
pop
xchg
lds
xor
outsl
mov
mov
stos
inc
lds
mov
adc
add
je
idiv
jo
data16
xchg
xchg
lret
jns
add
mov
in
push
outsb
imul
mulb
jge
jmp
adcl
push
pop
xor
jo
into
jae
mov
sbb
or
add
push
cmp
or
sahf
cmp
popf
mov
jb
sar
pop
inc
mov
js
negl
mov
mov
aam
pusha
popf
mov
les
in
sbb
push
sub
mov
adc
pop
cmpsl
adc
and
xchg
movsl
or
cmpb
ret
fistpl
or
ret
sub
jmp
fcomip
cvtps2pi
push
add
mov
mov
sbbb
popf
mov
les
and
jbe
das
iret
fnstsw
fistps
xchg
jne
addr16
fcomp
add
outsl
rcll
push
mov
mov
loop
ror
mov
ret
adc
push
sti
sub
ror
popf
les
inc
jle
mov
mov
xchg
xchg
add
stos
clc
pop
ja
cmp
sub
adc
sahf
push
dec
or
fldl
and
sub
fiadds
into
add
dec
pop
repnz
test
mov
pop
push
popf
leave
movsb
dec
mov
popa
mov
and
fidivl
pop
pop
roll
out
jl,pt
iret
sub
icebp
int
jecxz
insl
and
push
dec
push
aas
xchg
cli
popa
mov
pop
dec
jp
adc
sbb
pop
dec
fdivrs
sbb
mov
ljmp
sarb
inc
call
das
xlat
xor
aad
jnp
mov
push
adcl
cmp
sahf
sbb
or
sahf
mov
ss
sarl
dec
or
mov
xor
test
imul
sbb
cmpsb
icebp
lds
enter
xchg
adc
mov
movsl
mov
push
dec
pop
pop
mov
fsubp
iret
andb
mov
mov
lds
lahf
sbb
jnp
lret
sbb
pop
jle
aas
fstpt
jo
jmp
dec
mov
jae
mov
xchg
out
pop
mov
in
mov
mov
ror
rorl
fldcw
adc
inc
pop
imul
cmc
cmp
sbb
loop
lods
add
pop
xchg
popf
adc
dec
and
popl
inc
pop
jo
dec
xor
lret
out
mulb
dec
cmp
bound
cmpl
cmp
movsb
sbb
stos
pop
cmpsb
jo
xor
fnstcw
mov
fcomps
test
lds
pop
or
fimuls
neg
push
push
fildl
lds
rcll
jae
adc
ja
xchg
repz
rorb
call
das
popa
sbb
adc
pop
fdivrs
stos
mov
imul
or
mov
daa
or
or
or
imul
fcmovne
adc
nop
sbb
push
mov
pop
lods
repz
jnp
sbb
adc
and
or
pop
adc
lret
xchg
test
mov
or
mov
jp
and
pop
jl
jo
clc
std
lret
and
enter
mov
jae
subps
popa
adc
sti
xor
iret
push
daa
mov
or
ret
pop
lods
ret
sbbb
loop
test
aaa
add
icebp
mov
pop
adc
nop
mov
adc
jg
shll
out
in
mov
sbb
loop
jb
push
out
arpl
loope
lock
sub
ror
sub
sti
jnp
fcoms
mov
mov
add
in
fisttpll
outsl
cli
pop
cmp
mov
mov
stos
scas
and
ret
inc
push
ret
xchg
adc
push
sbb
iret
xchg
mov
pop
xchg
nop
adc
in
sahf
roll
stos
fsubrs
test
pop
cmp
mov
pop
push
mov
mov
jb
jnp
insl
add
mov
lods
adc
push
lods
cs
xor
sub
ljmp
mov
test
jae
or
hlt
add
into
out
test
inc
fstpl
movl
cmpl
add
mov
jmp
arpl
hlt
lea
adc
fcompl
clc
jno
cltd
aam
arpl
daa
jne
outsl
stc
ret
mov
cmp
insb
loop
adc
icebp
add
or
loopne
mov
cmc
lea
inc
mov
sbbl
lahf
push
out
clc
scas
fmul
add
mov
mov
jecxz
adc
mov
dec
mov
bound
xor
add
out
and
jno
cltd
push
pop
and
orl
xor
add
mov
inc
adc
adc
jg
ret
ret
jnp
fbstp
pusha
mov
xor
mov
sbbb
jno
orb
push
cli
cmpsl
shll
addr16
ret
enter
outsl
fsubl
fbstp
cltd
pop
push
and
stc
iret
mov
adc
push
jmp
adc
mov
fcmovnbe
ret
js
fnstcw
push
adc
mov
push
jg
lods
cmc
rcll
sbb
sbb
fisttpll
sbbl
lahf
xchg
add
add
push
sbb
adc
rcll
fldt
and
addr16
or
adc
sbbl
sti
test
add
in
mov
inc
mov
jns
lahf
fmulp
mov
lret
aad
pop
sar
lock
mov
outsl
sub
xchg
jle
push
repz
xchg
mov
jnp
arpl
pop
int
inc
movups
mov
pop
jns
jno
xchg
jnp
sbb
stc
lahf
mov
adc
movsb
dec
add
roll
into
mov
xchg
inc
mov
cli
adc
fisttps
fidivrs
test
inc
loope
subl
lahf
inc
in
icebp
dec
sbb
clc
lods
jae
mov
add
add
jmp
jno
andb
mov
mov
arpl
push
or
int3
lds
popf
jae
jno
push
add
xor
xlat
cli
mov
ja
ficoml
mov
movsl
jnp
cmp
pushf
test
mov
mov
repz
adc
clc
xchg
mov
mov
cmpsl
aas
inc
aaa
add
ja
xchg
jl
cld
cltd
push
xlat
sbb
xchg
ret
fwait
outsb
stc
jg
nop
cmp
mov
addl
loopne
add
dec
add
or
fbld
adc
cmpl
add
rcll
lahf
and
sbb
sbb
mov
sub
mov
pusha
cltd
xlat
jns
adcb
cmp
xchg
das
dec
cmp
sbb
pop
fchs
test
cmp
cmc
das
cmpl
stos
jnp
ret
jg
mov
adc
sbb
loope
dec
push
fs
sub
mov
adcb
lods
or
inc
add
xor
mov
sbbl
pop
sbbl
pop
and
lds
xor
andl
stos
pop
inc
add
out
xchg
aad
sbbl
jns
push
sbb
movsl
push
out
xchg
out
inc
add
test
je
inc
clc
fiaddl
xchg
lea
or
sahf
loop
sbb
cmpsl
nop
int
jecxz
xorl
pop
lea
orl
scas
ja
jo
adc
test
push
data16
pop
adc
push
ret
mov
push
mov
imul
mov
dec
orl
insb
ret
fstl
or
jne
cmp
and
sub
cwtl
testb
cli
pushf
repnz
push
jge
mov
mov
adcl
into
aam
repz
mov
pop
leave
xchg
jb
sbbl
adc
lods
faddl
icebp
xchg
fldenv
andb
iret
insb
fs
andl
mov
cmp
ret
xchg
add
and
sub
je
push
dec
pop
cmpsb
int
testb
cwtl
fistpll
gs
add
sbbb
sbb
js
jne
cmp
xlat
pop
cmp
ja
ret
mov
jg
test
divl
sub
inc
mov
xor
add
push
bound
jmp
xchg
mov
xchg
pop
xchg
rorb
inc
push
add
ja
or
xor
mov
pop
adc
adc
ret
xchg
icebp
push
lahf
mov
or
lds
cmc
mov
jecxz
andb
fbstp
cmpl
xchg
mov
inc
cmpsl
mov
lock
jg
add
sbb
jge
mov
pop
dec
loop
inc
test
push
insl
lea
fistps
adc
loope
add
cwtl
int3
repnz
jno
mov
mov
or
mov
sbbl
sar
add
pop
push
xor
xchg
je
or
cmp
int
push
sub
stos
add
sub
sbbb
mov
scas
arpl
adc
inc
jno
in
out
subl
adcb
stc
push
arpl
add
add
call
loopne
flds
cld
and
jecxz
lret
add
insl
or
roll
aam
dec
xchg
adcb
add
pusha
sti
jae
hlt
mov
ret
in
pop
jae
mov
fcom
sbb
pop
or
in
jmp
test
data16
les
fbld
orl
cmp
adc
mov
add
les
dec
mov
out
andb
out
jg
fstpt
mov
mov
mov
std
add
jno
aad
stc
and
enter
adcl
jecxz
aam
cmpl
inc
clc
stc
adc
add
xor
push
cs
mov
jl
test
cmp
pushf
subl
inc
dec
mov
daa
cmc
add
pop
sbb
cmp
or
cs
fwait
mov
or
in
sbbb
add
xchg
adc
cltd
adcl
pop
dec
mov
ss
add
repnz
insl
lret
test
sahf
test
push
cli
stc
sbb
leave
jp
fidivs
add
aaa
push
popf
and
pop
sbb
mov
dec
jecxz
cli
les
xor
or
pop
mov
xor
insl
xor
fistpll
pop
pusha
ret
in
pop
adcl
add
cmpb
cmp
orl
inc
push
mov
mov
insl
xchg
pop
push
mov
outsl
cmp
pop
sub
pop
pusha
cmp
dec
ret
mov
add
pushf
mov
orb
jbe
data16
sub
insb
andps
mov
jg
jmp
js
mov
clc
and
mov
jae
ljmp
xchg
mov
cld
repz
lret
arpl
sub
push
xor
mov
mov
pop
int
push
xchg
lret
mov
xchg
jae
dec
and
add
sbb
and
aaa
adc
dec
mov
mov
out
adc
int
jg
subl
stc
sub
les
jnp
sub
sarb
popf
pop
fidivs
dec
cmpl
mov
sbb
lcall
mov
filds
inc
mov
add
xchg
test
jno
iret
ret
xorl
jl
test
sbbl
jp
imul
add
jg
mov
xchg
jne
in
pop
ret
lods
push
stos
mov
and
mov
jl
pop
mov
push
add
and
sub
pop
xorb
push
xchg
sbb
push
sub
fwait
adc
or
outsb
inc
sub
mov
mov
lods
bnd
xor
xor
cld
insb
lret
jnp
jp
std
pushf
mov
xor
das
jno
dec
push
je,pt
or
dec
push
int
divb
lcall
orb
xorl
push
pop
decl
std
mov
ret
push
mov
es
mov
sbb
aas
xchg
test
mov
sbbl
dec
mov
sbbl
iret
jecxz
adc
add
ret
dec
mov
or
inc
and
iret
inc
adc
xor
dec
jnp
stc
sub
mov
sub
pop
mov
xchg
or
push
pushf
mov
xchg
sbbl
imul
push
stos
jecxz
and
jp
inc
mov
pop
jmp
push
pop
daa
ret
jno
repnz
push
and
jle
xchg
cmp
cltd
adc
inc
cmc
xor
push
sbbl
fsts
push
pop
fcomip
fbld
fsubrl
cmp
shr
mov
push
pop
sbb
cmpl
cld
out
roll
fiaddl
mov
adcl
int
inc
cmpsl
je
cld
movsb
inc
adc
and
mov
in
inc
cld
add
jb
jae
xchg
add
fbld
jmp
xor
cmp
fwait
popa
stos
test
in
push
adc
dec
filds
mov
push
add
shlb
pusha
ret
push
push
jecxz
push
adc
adc
pop
mov
inc
popa
in
pop
adcl
xor
clc
push
incb
sbb
push
mov
adc
int
nop
xor
and
bound
add
inc
jno
lret
cs
pop
or
mov
jg
sub
xor
sub
sub
test
or
add
push
addb
shll
jbe
hlt
jnp
cmpb
xchg
push
in
bswap
push
jae
mov
ret
jmp
adc
xorl
inc
call
in
rclb
insb
adc
sahf
mov
stc
push
fbstp
mov
jae
lret
add
xorl
or
je
sub
int
push
das
xchg
jae
jb
xchg
cli
cmpsl
dec
in
add
mov
mov
inc
sbbl
in
sub
cmp
mov
mov
clc
jns
cld
inc
or
pop
pushf
ret
push
xor
arpl
push
add
add
cltd
xchg
ret
add
or
xchg
fstpt
lea
add
jmp
and
dec
int
shl
adc
add
or
cmp
pop
ltr
out
mov
imul
jno
fadd
or
inc
loop
mov
in
andl
xor
jg
mov
es
stos
jae
lahf
js
stc
addb
adc
jno
les
add
adc
add
cld
insl
imul
ret
add
add
and
divl
push
jae
ljmp
jmp
dec
gs
or
arpl
addr16
mov
out
or
pcmpgtb
lahf
xlat
in
lret
shrl
jo
xor
loop
push
cmp
test
outsl
jge
pop
in
arpl
cltd
arpl
ljmp
pop
out
sub
jl
push
pop
xor
addr16
add
arpl
subl
ljmp
mov
call
loopew
jns
push
arpl
push
jae
shll
jae
out
out
dec
xchg
popa
jno
out
fadds
or
ljmp
out
fsubl
out
les
cmp
add
pop
imul
popf
call
add
out
cmp
mov
imul
negl
fstps
int
addr16
out
icebp
fwait
jge
mov
push
and
popf
mov
push
inc
or
call
pop
addr16
out
xor
inc
in
mov
add
lods
cmp
mov
push
out
mulb
subl
xchg
in
out
inc
mov
gs
fnstcw
sub
xchg
shl
push
ljmp
test
arpl
arpl
in
xchg
pop
xor
imul
subl
sbb
out
jge
aad
dec
mov
lods
mov
mov
pop
jmp
repz
or
jne
jmp
mov
or
xchg
xchg
jo
xorl
push
ljmp
rorl
and
std
data16
xor
or
ret
int3
ljmp
xchg
jns
cltd
push
imul
and
push
pop
leave
mov
inc
pop
pushw
repz
lods
stos
pop
into
jns
mov
push
cmp
xor
jge
es
out
data16
fidivl
outsl
lea
jne
cmc
imul
bound
loop
mov
out
fs
loop
in
mov
fnsave
push
xchg
mov
out
mov
in
outsl
in
iret
loopne
add
imul
adc
imul
lahf
jmp
push
fstpt
jno
sub
imul
movsl
adc
addr16
mov
jmp
mov
xchg
fildll
cmpl
and
pushw
aaa
xlat
stc
lret
mov
fsubrp
inc
mov
jmp
lret
call
adc
in
out
inc
push
in
cmp
cltd
out
xchg
jl
call
cmpsl
mov
jae
imul
jne
jmp
inc
shr
inc
jae
imul
inc
or
addr16
sbb
xchg
fwait
mov
jne
fs
push
rcr
repz
imul
pop
cwtl
xchg
clc
jmp
push
mov
out
push
mov
das
out
or
xchg
pop
adc
leave
sbb
xchg
movsl
xor
dec
icebp
or
test
jl
sub
fdivl
ds
cld
addb
push
cmp
ljmp
outsl
es
shlw
out
add
int
sub
call
jmp
and
push
fbld
stos
iret
xor
pop
mov
cmp
jp
sub
add
mov
enter
lods
mov
push
sar
out
cmpb
push
imul
enter
sbb
int
sub
mov
push
lods
jbe
and
lea
jbe
sub
pop
lods
push
lods
idivb
push
cmp
adc
ret
ljmp
mov
loopne
ja
dec
movsl
fistps
mov
add
and
stc
sub
cmp
mov
add
mov
cmp
jle
sub
pop
jae
push
mov
sbb
repnz
imul
mov
ret
pop
leave
mov
push
push
mov
or
fnstsw
xchg
pop
rol
cmpsb
pop
addl
frstor
fnsave
or
aas
cmp
sti
and
into
mov
push
mov
mov
ficoml
lods
jmp
fistps
fidivrl
xor
or
mov
in
sub
ljmp
jnp
out
ss
xor
cmp
rcrb
pop
xorl
in
inc
cltd
jae
xor
movsl
ljmp
test
xchg
mov
in
in
enter
dec
in
cltd
mov
sbb
ds
mov
fwait
xor
mov
lret
int3
cmpsb
inc
hlt
fsubrp
test
push
ds
insb
push
loopne
es
testl
or
xor
pop
inc
leave
lret
xchg
mov
mov
cld
inc
inc
mov
mov
call
call
pop
pop
push
mov
pushl
ret
pusha
call
popf
rdtsc
nop
jmp
pusha
pusha
pushl
adc
pushf
jmp
movl
push
movl
pusha
push
lea
jmp
jb
jns
fbld
enter
cmp
sub
repnz
pop
cmp
lcall
idivl
shl
push
in
push
arpl
sbb
stos
jmp
jp
stc
adc
cwtl
fwait
loopne
or
roll
pop
jns
mov
call
pusha
adc
mov
movw
call
pushl
lea
call
call
adc
js
fbld
pop
sub
mov
loop
xor
cltd
pushf
lret
inc
inc
out
negb
bound
faddl
push
sti
jns
xchg
mov
ret
adc
les
fwait
jb
push
sub
inc
or
ss
pop
bound
adcl
and
sbb
sbb
rol
push
xor
fmuls
subl
movl
or
dec
lea
jmp
cltd
xchg
fbld
dec
push
scas
mov
stc
mov
jge
jo
pop
aam
inc
jle
aas
fwait
jg
push
fidivs
mov
lret
mov
mov
repz
test
jbe
imul
popf
pop
in
mov
fbld
mov
or
push
dec
aas
lods
iret
cmpb
cmpb
dec
mov
pop
jmp
sub
aaa
mov
jnp
inc
xchg
jle
inc
out
rorl
ret
sar
fidivrs
push
fbstp
mov
mov
ret
idivl
ss
xchg
xchg
sbb
xchg
and
jg
sbb
int3
shll
mov
ds
dec
insb
xor
or
test
in
sti
rclb
cwtl
insb
outsb
mov
int3
mov
sti
pop
add
sahf
es
nop
lds
arpl
xchg
ljmp
or
xchg
fstl
cli
ret
mov
es
clc
cwtl
nop
aad
pop
mov
int
sbb
jbe
ja
xlat
mov
mov
test
mov
cs
jle
popf
int
sahf
jbe
stc
cmp
bound
cmc
fldenv
fwait
adc
mov
mov
shl
shrl
jo
sbb
subb
lahf
xchg
lcall
jecxz
or
cltd
sub
adc
mov
mov
aas
xchg
push
fnstcw
xor
cli
ret
sarl
add
mov
push
pushf
leave
les
cli
xlat
testb
lcall
stc
xor
cmpsb
inc
dec
dec
int3
or
add
addb
jecxz
mov
lret
mov
cld
sahf
outsl
pop
popa
cmc
cmp
sub
xlat
cmp
leave
outsl
data16
push
dec
xor
scas
lahf
xchg
cmp
fbld
out
call
mov
fwait
test
mov
das
icebp
push
mov
mov
cmc
daa
scas
ds
imul
mov
sahf
or
arpl
xor
mov
xchg
mov
std
insl
lods
xlat
or
mov
stos
push
jecxz
inc
test
sub
xchg
dec
push
and
push
jecxz
out
jnp
xchg
outsb
mov
lods
mov
jae
jge
inc
pop
jmp
xchg
mov
cmp
sarb
js
aaa
inc
jmp
cmp
shl
sub
jmp
mov
pushf
mov
pushf
pushf
pushl
ret
add
dec
outsl
popa
fs
imul
add
or
add
movl
pushf
pushl
movl
movb
push
lea
jmp
push
jmp
in
divb
addr16
mov
shlb
lock
imulb
insl
push
inc
test
cmp
idivl
adc
xorb
rcll
pop
mov
pop
mov
ret
jg
inc
jo
dec
cmpsl
iret
mov
inc
add
push
popf
aad
xor
cltd
aam
popa
cmp
or
add
dec
pop
lods
jmp
dec
int3
iret
loope
pop
ds
jecxz
int
jg
mov
cmp
jmp
push
mov
into
lret
lfs
test
xchg
sti
int3
xchg
jno
pop
out
mov
cmpsl
or
jbe
mov
lcall
addr16
sti
dec
clc
in
sti
arpl
popa
push
mov
xor
pop
mov
push
push
aas
push
stos
push
jl
std
inc
dec
xor
xorl
or
or
loop
pop
add
sbb
xlat
cmp
aaa
sbb
call
xlat
mov
test
lods
js
cli
icebp
mov
jmp
pop
sbb
pop
in
or
aad
movsl
mov
dec
sti
rcrb
shrl
out
mov
fsub
lret
sbb
fnstcw
cmpsb
xor
mov
mov
in
add
pop
jae
mov
jno
push
cmp
out
lock
lods
insb
outsl
in
sbb
mov
xchg
dec
xchg
movq
sti
push
xor
cmp
adc
popf
and
in
and
orb
sub
aas
inc
test
jns
mov
out
xchg
in
push
jnp
inc
sahf
cmp
push
je
cmp
jbe
jecxz
lret
daa
je
push
insb
aas
fisubs
mov
je
mov
lcall
adc
xchg
pop
mov
xchg
cli
mov
pushf
movl
pusha
pushf
push
movl
push
lea
jmp
pop
jp
mov
add
test
insl
mov
fwait
pop
add
mov
mov
das
mov
cmp
xchg
pop
inc
push
out
dec
hlt
sbb
cmp
pop
adc
and
and
insb
js
int3
push
pop
fs
loopne
jae
cmp
lods
scas
repnz
pop
sbb
adc
pop
lock
jg
out
push
sarl
test
iret
mov
imul
mov
das
jbe
lcall
mov
push
cmp
out
fisttpl
int
push
lock
push
inc
push
add
xchg
adc
fwait
andb
or
jle
sbb
inc
mov
jp
and
mov
leave
daa
push
lods
sub
mov
xchg
mov
test
jo
mov
and
movsl
gs
stos
pop
jmp
mov
and
mov
insl
sbb
sub
shlb
mov
pop
adc
fwait
cmpsb
jno
xor
stc
or
hlt
cld
pop
jl
cmpsb
and
lret
adc
mov
mov
rorb
push
jo
lea
lahf
xchg
adc
daa
les
pop
aas
insl
fs
lea
mov
dec
xchg
push
xor
jo
pop
mov
ja
or
push
sub
jae
ds
mov
pop
rcrl
dec
xchg
push
mov
in
movsb
aaa
push
ljmp
sub
repnz
jne
xor
movsl
lods
cld
pop
inc
in
mov
fisubrs
shr
arpl
xchg
pop
stos
push
mov
cmpsb
cmc
out
out
enter
and
enter
lods
push
jg
in
and
sahf
ds
jne
lea
ror
push
addb
insb
dec
and
ror
pop
andl
test
jae
mov
std
sub
jne
inc
adc
inc
test
lods
dec
ret
cwtl
aad
ljmp
xor
xor
sbb
test
sub
mov
adc
gs
dec
ret
mov
and
jae
mov
not
mov
push
lea
js
inc
setne
pushf
mov
pushf
jmp
call
xchg
jmp
xlat
push
test
pop
leave
scas
xchg
sub
aaa
gs
push
fistps
ret
and
dec
mov
outsl
adc
pop
inc
int3
jae
pop
imul
jmp
xor
aaa
test
pop
pusha
jmp
in
shll
in
cmc
mov
insl
incb
adc
jge
cld
fidivrl
shll
xor
xor
loopne
std
jg
dec
loope
xchg
dec
fsubs
pop
pusha
hlt
addl
cs
mov
jnp
or
jbe
pop
add
xchg
inc
adc
cmpsb
sbb
add
les
xchg
push
mov
sbb
xor
add
shrl
stos
ja
sahf
jg
imul
and
ja
mov
and
cmp
bound
and
jae
or
cld
jecxz
inc
js
sbb
push
jl
adc
jbe
shr
push
xchg
inc
mov
adcb
pop
jno
adc
jecxz
scas
jecxz
lret
hlt
ja
jae
test
cmp
cmpsl
int
adc
add
adc
mov
in
call
outsl
sub
sbb
mov
lret
pop
inc
pop
stos
aas
jmp
and
jb
loopne
or
push
test
nop
mov
outsl
pop
jbe
lret
outsb
popf
xchg
mov
pop
add
mov
dec
push
push
pinsrw
into
inc
fimuls
lds
push
mov
jns
add
cmp
inc
pop
jae
testl
div
push
mov
sub
cmp
mov
xlat
pop
xchg
adc
jecxz
cmp
push
dec
ds
adc
lcall
rcll
out
pushl
inc
movsl
adc
into
cs
mov
xchg
js
loopne
mov
cld
repnz
jns
sbb
cmpsb
ljmp
xlat
stc
xor
mov
jg
repnz
add
push
jns
pop
imul
fisubl
pop
mov
xchg
mov
xchg
dec
jmp
dec
jp
pop
xchg
div
ret
mov
dec
xor
mov
pusha
ficompl
and
mov
jge
loop
sbb
fs
movsl
mov
mov
adc
mov
mov
loop
popf
scas
push
dec
xchg
movsb
cwtl
mov
xor
lcall
bound
pop
pop
add
int
test
cltd
jle
arpl
lcall
mov
test
int3
sbb
push
dec
sbb
insb
arpl
into
xchg
and
push
lret
mov
xchg
inc
or
loope
rcrb
jge
idivl
data16
movsb
lahf
push
inc
mov
pop
or
ja
idiv
cli
mov
dec
ss
test
cwtl
jmp
jmp
std
movsb
out
dec
inc
pop
les
cmp
pop
or
pop
sti
pop
xchg
lods
insb
repnz
in
lret
pop
push
imul
shlb
sub
jp
lret
pop
xorl
loope
dec
das
mov
xchg
pop
inc
sub
mov
dec
into
or
xchg
or
pushl
mov
mov
pslld
pop
pop
mov
xchg
clc
test
cmpsb
les
mov
loop
bound
fcmovnu
cld
jecxz
cmpsl
push
mov
aam
xchg
or
cmpsb
add
pop
mov
data16
mov
repz
das
jne
cmp
push
inc
rolb
jbe
sbb
popf
mov
out
lds
pop
ret
icebp
test
ret
jmp
jno
mov
sarb
mov
ljmp
dec
cvttps2pi
jnp
pop
in
pop
sti
movsl
xor
pusha
popf
stos
pop
pop
sbb
popf
xor
lods
loop
adc
nop
idivl
insl
lcall
call
inc
mov
dec
xchg
fidivrs
ror
jmp
adc
sub
mov
cmp
std
mov
inc
mov
cmc
and
mov
add
pop
pop
outsb
outsl
mov
psraw
push
pushf
jecxz
stc
or
push
push
cmp
cmp
repz
xor
xor
je
sbb
sahf
inc
rol
ja
fistpl
das
shlb
sti
ret
jg
out
in
mov
add
inc
and
popf
ficoml
or
adc
mov
xor
pop
hlt
mov
push
insb
xor
dec
mov
sbb
xor
xor
push
mov
inc
cli
ja
inc
mov
outsl
addr16
cmp
or
jns
mov
ljmp
test
dec
inc
xchg
insb
lock
sub
es
add
mov
and
lret
imul
xor
pop
clc
ret
sbb
adc
dec
rcll
lret
ds
push
mov
subb
outsl
add
jne
mov
shr
hlt
xchg
sub
mov
mov
xchg
dec
adc
out
push
jmp
inc
or
mov
imul
outsb
xor
jns
mov
iret
push
adc
and
ds
repnz
mov
sbb
jno
out
outsl
jp
mov
sbb
aad
clc
mov
pop
mov
insl
repnz
ret
inc
push
pop
xchg
insb
jp
push
adc
js
or
pop
adcl
out
sbb
push
pop
enter
int3
lret
mov
mov
fsts
mov
lret
pop
movsl
aas
aam
and
mov
jbe
lahf
and
imul
pop
nop
mov
pop
aaa
cld
or
xchg
lcall
daa
xchg
adc
js
popf
in
dec
repnz
dec
leave
mov
movsl
push
mov
dec
adc
mov
data16
adcb
dec
add
sub
inc
int3
pop
push
sar
mov
mov
xor
mov
push
xchg
das
pop
idivl
das
icebp
jno
js
addl
in
xchg
sbb
jg
popf
push
mov
loop
pop
jno
mov
dec
sbb
scas
cs
outsl
mov
mov
icebp
sbbl
or
cmp
js
jle
cmp
and
dec
fldl
xor
popa
inc
jge
lds
arpl
movsl
add
fistpl
dec
adc
sub
sbb
jae
push
mov
add
repz
imulb
xor
in
mov
in
inc
dec
cmp
lds
cmpsl
sbb
xchg
inc
push
xor
into
daa
adc
nop
leave
in
xor
xchg
movsl
int3
push
mov
lods
shll
mov
cmp
jge
mov
sub
sub
inc
mov
add
dec
xor
pop
bound
or
fwait
cwtl
shll
and
fs
call
pushf
jmp
jbe
sbb
lea
and
das
int3
push
mov
jbe
jo
push
xchg
scas
push
pop
insb
sti
jge
movsl
dec
mov
jge
test
mov
mov
stc
sub
dec
push
or
adc
xor
push
movsb
mov
addr16
sub
clc
add
into
ljmp
repnz
cmpsl
mov
fcomps
ret
jmp
mov
sbb
int3
jb
sub
scas
nop
xor
loope
aam
aad
jo
jb
movsl
jnp
ja
dec
xchg
les
mov
and
int3
filds
out
dec
push
dec
leave
fisubrs
std
in
jmp
arpl
stos
cmp
ret
fnstsw
dec
arpl
and
cmpsb
ljmp
mov
enter
sub
icebp
sub
out
mov
lods
pop
mov
movsb
icebp
scas
mov
outsb
js
jo
loope
push
and
jle
rcrl
add
inc
sub
and
cmp
push
stc
mov
pushf
cwtl
lea
lahf
mov
lea
jmp
rcll
fbld
adc
pop
add
dec
push
ja
roll
or
or
pop
pop
jmp
pop
shlb
int
rorb
sub
cmp
mov
cwtl
jns
xchg
jecxz
or
mov
in
pop
imulb
lods
imul
and
push
add
sbb
mov
xchg
push
jecxz
push
mov
outsl
xor
cld
push
push
and
lods
scas
xor
lahf
inc
push
jmp
sub
bound
jmp
movl
pushf
push
push
lea
jmp
xchg
test
mov
addr16
jmp
ljmp
mov
nop
in
scas
push
mov
aad
pop
addb
imul
sbb
mov
divl
andl
and
sbb
mov
ret
movsl
and
or
ret
test
inc
xchg
aaa
movsb
icebp
jnp
data16
filds
scas
nop
or
or
mov
outsl
push
push
cld
repz
arpl
mov
mov
or
cmp
pop
mov
out
adc
adc
xor
push
dec
out
mov
cmp
lods
push
adc
scas
mov
ljmp
jl
insl
les
pop
inc
sub
cmp
popf
cmp
mov
ljmp
mov
js
jnp
xor
outsl
jb
mov
jb
mov
mov
imul
pop
pop
inc
dec
inc
mov
lds
and
test
cmp
mov
xchg
movzbl
rcr
movsbw
mov
push
jmp
cmp
call
lea
jb
bt
push
cmpb
jmp
stos
inc
push
fbld
clc
fldl
enter
push
push
loop
lret
clc
das
push
insl
insl
fmuls
push
mov
jno
call
or
mov
add
in
addl
pop
test
or
subl
mov
lahf
inc
jecxz
push
add
sub
fbld
xchg
xchg
pop
xchg
and
jle
ret
rsqrtps
mov
dec
mov
mov
push
sbb
and
jp
xchg
clc
and
outsb
sub
insl
int
aad
stos
or
out
pop
orb
and
dec
popf
push
imul
insb
lock
dec
sub
mov
into
jne
mov
je
push
mov
rcrb
lahf
aam
mov
mov
addr16
iret
shl
push
insb
push
enter
jae
cmp
js
push
sub
mov
xchg
push
mov
andb
scas
call
daa
dec
imul
sub
and
lret
mov
jae
jmp
in
or
dec
shl
and
and
or
jno
cmp
imul
outsb
sbb
iret
jnp
stc
xchg
lock
adc
inc
jnp
data16
addl
leave
lret
mov
cmpsb
mov
push
or
pusha
pusha
call
iret
leave
adc
cmp
adc
jo
mov
cli
std
xor
clc
scas
movsl
mov
pushf
and
mov
repz
hlt
mov
push
js
aas
mov
outsb
icebp
or
incb
movb
bound
dec
sbb
xor
pop
xor
movsl
dec
sub
stc
incb
jb
in
mov
pop
sub
loop
rolb
std
pop
xchg
push
add
fadd
inc
cltd
mov
fbld
jo
mov
ljmp
sbb
aad
int
or
mov
sti
jecxz
into
xor
and
popf
and
mov
pop
cmovno
popf
fwait
xchg
push
mov
jb
outsl
mov
pop
inc
addr16
push
sti
repnz
test
in
sti
lret
dec
fdivrs
lcall
mov
lock
dec
push
fnsave
inc
aam
rcrl
xchg
in
pop
mov
aad
inc
test
mov
in
rclb
in
je
push
stos
hlt
fwait
int3
lea
cld
push
ret
sub
cli
cmp
aad
mov
das
les
inc
out
add
push
push
cltd
mov
inc
pusha
inc
sub
ljmp
loopne
mov
xorb
dec
jno
fisttpl
xor
popa
add
push
cli
ret
xchg
icebp
ror
pop
and
mov
add
xchg
push
add
push
pushl
mov
lea
ja
pop
mov
pop
push
lea
lea
not
mov
bswap
mov
call
add
add
pusha
bt
mov
bt
push
stc
test
pushl
lea
je
call
push
pushf
push
call
pop
pusha
movw
pushl
ret
pushf
lea
jae
pusha
lea
jne
push
pushf
stos
pushf
lea
jmp
movw
lea
call
jmp
jmp
mov
jcxz
into
cmc
pop
cmp
movsb
or
fcomi
stos
add
push
pop
dec
dec
inc
and
cmp
pop
mov
aas
inc
or
cmc
in
lods
mov
in
call
mov
pusha
ret
inc
or
outsl
push
clc
push
mov
mov
xchg
fbld
add
mov
sbb
ret
adc
insb
popf
dec
lcall
mov
pop
cld
cmc
or
jle
insb
es
fsubrs
xor
mov
mov
push
daa
push
and
fmulp
pop
mov
cmp
aad
mov
leave
rdmsr
xor
gs
sbb
ret
pop
inc
jne
jns
xor
inc
test
xor
adc
push
cltd
or
ret
ror
pop
inc
idiv
and
addr16
sbb
jnp
pop
lock
mov
clc
push
inc
push
pop
xchg
inc
jmp
out
or
cmp
sbb
mov
sbb
sbb
js
xchg
ret
es
mov
add
xchg
stc
scas
repz
adc
mov
pavgw
insb
fadds
jne
sahf
push
cmc
clc
in
inc
das
loopne
mov
inc
mov
fisttpll
and
xor
sub
ret
adc
sbb
mov
out
sbb
jbe
or
sbb
cmp
mov
pop
jg
iret
loop
lock
cmpsl
cmp
xchg
mov
std
pop
inc
sub
out
cltd
mov
cld
lea
addr16
movsb
jmp
movsl
xchg
pop
addl
imul
xchg
popa
and
fdivs
lret
mov
addl
mov
int
sub
pop
or
adc
aas
out
scas
lcall
inc
fistpl
decl
test
add
call
movsbw
movsbw
jmp
daa
xor
clc
mov
jns
orl
call
push
pop
repz
ret
mov
sub
add
sub
inc
inc
cmpb
mov
cmc
repz
fmuls
xchg
bswap
cmp
add
sub
lods
push
out
cmp
nop
and
xlat
out
arpl
jne
sub
cld
roll
js
inc
and
cmp
xchg
js
sub
or
xchg
cmp
incl
lock
mov
push
pushl
lea
call
pushf
mov
mov
adc
jmp
add
inc
gs
outsl
fs
gs
imul
add
test
and
add
jmp
cmc
mov
fbld
cs
pop
jle
mov
mov
pop
mov
or
cwtl
jno
in
fs
addl
popa
dec
out
xchg
nop
push
idivl
out
mov
hlt
int
jmp
xchg
sub
rclb
pop
mov
mov
pusha
popl
xor
pop
xchg
fbld
dec
in
xor
mov
les
sub
push
dec
xor
es
xchg
lret
insl
mov
and
inc
push
hlt
mov
call
lret
aaa
pop
movsb
les
arpl
mov
scas
push
push
add
push
fisubrl
mov
lods
adc
push
and
jnp
inc
gs
pop
scas
in
pop
hlt
adc
mov
mov
mov
push
xchg
outsb
lahf
mov
in
add
ficoms
jle
push
push
pop
jle
inc
mov
rcr
sbb
es
rcr
and
orb
pushl
addr16
loope
jge
test
add
dec
cli
adc
and
mov
jbe
fiadds
imul
mov
cs
add
add
and
test
mov
adc
mov
xchg
aad
mov
jno
inc
test
call
aam
pop
pop
enter
lea
sub
pop
inc
mov
pop
popa
mov
add
lret
lea
ret
into
jl
clc
xor
in
jl
and
or
stc
shll
or
jg
or
mov
jnp
and
into
dec
shlb
es
icebp
rorb
imul
addr16
outsb
push
sbb
inc
dec
in
icebp
push
sbb
push
fildl
push
xchg
xchg
cmc
popf
and
inc
into
aam
dec
mov
inc
cmpl
test
mov
mov
sbbl
dec
cmp
or
mov
cld
mov
repz
not
out
test
pop
lods
sbb
cmpl
in
insb
outsl
xor
add
jo
adc
and
fbld
clc
filds
mov
into
leave
jg
mov
and
hlt
outsb
push
pop
rcll
out
aam
pushf
mov
aam
cwtl
dec
dec
xchg
incl
mov
ja
lds
imul
repnz
bound
push
cmp
add
cld
jecxz
sub
fcomp
pop
sub
push
push
mov
push
call
dec
loopne
gs
pop
pop
fstps
insb
aaa
enter
pop
jecxz
xchg
xchg
xor
adc
adc
push
push
cmp
std
sub
cwtl
mov
lods
xchg
add
and
es
insl
outsl
idivl
push
call
inc
xor
enter
bound
decl
xchg
rorb
rorb
add
lea
je
test
cmp
push
pusha
pushf
jmp
movl
push
mov
pushf
lea
jmp
sub
jmp
cmc
add
push
jmp
jmp
neg
lahf
mov
aaa
cmc
sub
daa
bswap
push
jmp
mov
push
xchg
fbld
or
sti
and
scas
xchg
and
xchg
cmpsl
jmp
cmc
sub
dec
inc
icebp
nop
enter
jp
xchg
mov
gs
loop
sbb
lcall
push
xchg
pusha
leave
aam
mov
cs
pop
add
cmp
test
enter
mov
test
jo
clc
jge
imul
adc
cmp
mov
jmp
cmp
and
das
stc
stc
xor
pushf
mov
inc
cmp
push
cmp
jmp
sub
mov
out
mov
mov
xchg
cmp
mov
movsb
cld
cmp
sbb
stos
mov
and
stos
add
lret
pop
or
inc
dec
xchg
sbb
or
sub
add
pop
or
push
mov
jmp
add
popf
in
sarb
jmp
sub
les
roll
aaa
pushf
andl
dec
repz
mov
xchg
fbld
mov
adc
push
push
lret
int
xor
lods
mov
inc
jno
daa
inc
or
or
gs
in
call
out
in
or
adc
mov
dec
stos
sbb
mov
addl
lea
call
push
lea
jne
pushf
movw
stos
mov
pusha
pushl
movb
lea
jmp
ror
ror
not
sub
not
pushf
pushl
stos
pusha
mov
movb
pushl
call
popf
cpuid
nop
pusha
movl
call
mov
mov
movw
pusha
push
lea
jmp
adc
pusha
jmp
bswap
movl
bswap
pusha
push
call
movsb
pop
stos
cltd
fbld
push
pop
andb
or
dec
mov
lret
add
jmp
sbb
xor
lds
sub
leave
push
xchg
sub
sub
sbb
cld
cltd
fcomps
mov
inc
outsb
mov
xor
inc
ret
and
push
jmp
test
sbb
lcall
sbb
in
popf
lds
or
inc
jae
mov
sub
hlt
pop
adc
scas
dec
mov
xchg
js
fstpl
pop
pop
or
outsl
out
push
mov
les
xor
jae
xor
xchg
scas
or
int
mov
orl
arpl
lods
repz
mov
xor
adc
sbb
adc
lock
ljmp
adc
fbld
push
ficoml
inc
cwtl
or
cmpsb
mov
pop
jmp
push
out
xor
out
push
jl
and
lret
addb
data16
rorl
or
sbb
icebp
sub
sub
push
mov
dec
cmp
ljmp
sub
movsb
pop
lods
xchg
push
std
call
outsb
xor
add
lods
int
rcrb
xchg
popa
lock
sub
aaa
cld
lcall
dec
stc
cmc
decl
add
call
movl
pusha
jmp
call
cmp
shlb
iret
inc
shl
dec
pushf
cmc
mov
adc
fdivp
or
icebp
dec
or
adc
sbb
push
sub
or
popf
jge
lods
out
sbb
push
jns
push
popa
xchg
xor
inc
inc
jo
stc
nop
fcompl
arpl
shlb
imul
imul
inc
into
adc
sub
cmpsb
sbbb
xchg
pop
or
adc
ret
mov
push
lock
mov
cwtl
sub
jns
inc
pop
add
fcomps
out
xor
push
mov
mov
jbe
cwtl
pusha
and
xchg
call
out
jp
fbld
and
je
mov
xor
mov
lea
inc
xor
shrb
jp
in
shlb
insb
cmc
dec
sub
jmp
in
lret
dec
lcall
icebp
and
fistl
mov
sar
pop
rolb
into
or
ret
fdivl
rolb
mov
es
sarb
jne
test
push
fnstenv
or
addb
in
subl
shl
js
or
pop
ret
dec
adc
rcrl
xor
insl
cmc
add
cmp
lods
dec
xor
aad
push
dec
lods
xor
aas
xor
dec
push
cmp
jecxz
cmp
aam
sub
lret
cmp
cmp
in
xor
or
xchg
pop
and
or
icebp
add
sub
mov
imul
mov
inc
mov
cmp
xor
cltd
lock
mov
lods
outsb
mov
nop
popf
or
push
fidivrl
ficompl
cmpsb
loope
and
xchg
in
mov
stos
cmpb
pop
and
mov
and
push
fidivrl
lcall
call
pop
sub
mov
hlt
pop
add
lea
or
inc
ds
fldcw
shlb
push
das
push
xchg
xorb
mov
in
lgs
gs
ds
cli
cmc
insb
aaa
orl
or
outsl
pop
mov
sub
js
inc
push
xor
pop
dec
xchg
sbb
mov
out
mov
insl
mov
mov
sbb
mov
or
in
sub
jmp
pop
sbb
jae
adc
ja
and
and
loope
fld
cmc
ret
std
cmp
pop
sahf
push
cld
icebp
clc
fbld
mov
fstpl
popf
fbld
pop
pop
pusha
add
sub
lcall
aam
dec
loope
cmp
ret
std
cmp
repnz
je
mov
xchg
in
and
loopne
push
loope
fcompl
pop
jne
scas
stc
loope
in
ret
or
clc
xchg
in
sbb
fwait
xchg
push
imul
mov
lds
sub
inc
enter
das
push
mov
addr16
pop
push
cmc
mov
inc
add
repnz
lds
jp
fbld
lds
push
inc
add
in
dec
das
push
mov
les
mov
mov
faddl
mov
test
mov
fdivrl
inc
dec
mov
mov
test
cmp
icebp
lret
test
frstor
cmp
bound
jge
mov
lods
test
hlt
into
hlt
mov
cmp
andb
mov
sbb
jo
xchg
jns
aaa
mov
ffreep
sub
push
xchg
lahf
push
mov
fnstenv
adc
stos
pushf
mov
push
lea
jmp
cmpsb
xor
adc
cltd
fldl
dec
xchg
int
inc
dec
or
add
cwtl
or
cmp
lock
fisubl
cmp
iret
imul
outsb
jo
pop
inc
inc
jb
clc
mul
in
or
out
les
xor
jmp
xchg
cmp
bound
xor
xchg
lahf
fbld
jae
jnp
and
or
xor
js
mov
in
rcl
enter
mov
inc
lret
pop
jo
push
sbb
movsl
dec
xchg
aad
data16
lock
sub
jmp
fcmovnu
push
data16
hlt
pop
pop
jne
pop
iret
add
pusha
sahf
pusha
imul
add
mov
sbb
mov
outsl
and
into
shrb
bound
cli
xchg
sbb
sub
lret
jmp
loope
stos
ds
or
jl
lds
data16
ficoms
jnp
cs
lret
or
repz
jo
aas
mov
xor
jp
pusha
inc
call
pop
call
mov
mov
jmp
add
pushf
cmc
test
add
pusha
pusha
dec
pushf
call
add
lea
pusha
pushf
pushf
or
pushl
call
setnp
mov
pusha
call
movl
pushf
pushf
lea
jmp
mov
addr16
ds
popa
sub
pushf
add
inc
lret
loopne
dec
stos
test
orb
jge
sbb
stos
in
js
pushf
pop
mov
stc
and
cwtl
mov
adc
cmp
int
add
test
jl
mov
jl
fwait
inc
add
jne
out
or
sahf
rol
dec
xor
mov
pop
xor
in
sub
mov
fsubs
sbb
and
mov
je
mov
les
xor
sbb
cmp
notl
ret
clc
sub
xchg
js
jge
sti
push
xchg
add
neg
bsf
aam
mov
cmc
shl
mov
bt
jmp
mov
pushf
lea
je
jmp
call
add
fisubs
cmp
dec
adc
aas
push
xchg
std
cmpb
xor
cmp
xchg
jne
addl
enter
lcall
mov
fwait
jge
or
mov
jmp
mov
fildll
fcomps
jmp
sub
add
gs
inc
mov
mov
push
pop
xchg
pop
mov
xor
inc
xchg
int3
int3
andl
sub
pushf
dec
bt
mov
push
pushl
call
push
call
rep
pop
bswap
mov
pusha
pushl
pushf
lea
jmp
call
in
inc
add
addr16
sbb
test
sub
pushf
ficoms
and
scas
push
add
movsl
or
outsb
xchg
mov
pop
ret
mov
dec
mov
jg
adc
add
add
push
xor
rcl
stos
movl
mov
jns
push
xchg
lods
ss
xchg
push
rclb
cmp
ret
nop
pushf
pusha
pop
mov
je
push
mov
movsl
mov
xlat
add
fs
mov
out
hlt
jge
sbb
inc
xchg
sbb
pop
and
lock
sub
inc
outsb
xor
mov
div
fbstp
test
js
jp
loope
mov
div
cmp
mov
addr16
clc
sbb
or
push
mov
loopne
lock
nop
fstpl
movsl
js
jnp
mov
lcall
int3
xor
sbb
sbb
add
dec
arpl
inc
push
jmp
jg
ss
movsl
rcl
adc
sub
stos
lea
mov
adc
xor
or
mov
notl
scas
mov
jo
jmp
or
jle
ds
mov
and
ror
test
loope
mov
xor
xchg
lods
enter
pop
int
popa
decb
sbb
sbb
xchg
fs
out
decl
cmp
insb
addb
mov
shll
test
fisubs
and
mov
pop
loope
mov
xchg
jo
lods
sti
pusha
movl
movl
movl
mov
pushl
pusha
lea
jmp
push
movb
lea
jae
bt
push
xor
jmp
jmp
out
cmc
fisubs
je
scas
repnz
mov
je
mov
jo
inc
xchg
push
or
push
jecxz
int3
hlt
fwait
pop
shlb
mov
push
std
add
pop
jnp
jge
cmp
or
fmul
pop
mov
xchg
cwtl
pop
shlb
test
out
or
jg
and
pusha
xchg
add
or
dec
push
pop
aas
push
repz
and
cld
ja
sub
stos
jle
inc
push
push
lods
mov
aad
in
and
cmp
pop
in
insb
arpl
shrl
jne
jmp
lods
movb
rol
jmp
add
add
bts
push
jmp
call
push
lea
ja
xor
sar
add
sar
cmc
xor
dec
mov
jmp
str
call
dec
clc
jmp
push
jecxz
fisubs
jb
pop
loope
stos
lock
lcall
outsb
pop
xor
ret
fdiv
jne
test
adc
mov
fildll
cli
aad
inc
or
xor
xchg
std
push
or
ret
mov
xchg
fcompl
test
mov
dec
or
popf
mov
inc
outsl
mov
sub
mov
adc
pop
lods
rolb
cmc
jge
cmp
addb
and
shlb
adc
xor
pusha
movl
pushf
lea
jmp
xor
pushf
pushf
dec
call
pushf
lea
jb
push
cmp
movb
cmp
call
jmp
jmp
adc
fisubs
jnp
inc
push
dec
xor
rcrl
repnz
cmp
mov
int3
out
sbb
add
mov
push
mov
xor
cmp
add
ja
cmp
out
pop
inc
rcrb
mov
xlat
inc
mov
mov
jo
jbe
pop
xor
jle
add
rclb
jno
push
pop
and
dec
stos
mov
jmp
add
mov
sbb
and
and
cs
les
dec
jb
fldl
dec
sti
rolb
mov
pushf
lea
ja
push
push
movl
pushf
push
call
not
cmc
movb
pushf
cmp
sub
clc
cmc
clc
ror
jmp
push
lea
je
test
shl
xor
and
rcr
mov
clc
rcr
mov
shl
btc
add
sub
shr
dec
lea
mov
pusha
test
or
jmp
cmp
pusha
cmp
pushl
call
fildll
adc
add
sbb
add
sub
add
sbb
add
add
add
daa
pop
add
call
movb
jmp
mov
out
fisubs
fdivrs
dec
stos
push
mov
mov
shlb
ljmp
sbb
inc
jnp
sbb
cmp
mov
cwtl
jne
iret
daa
insl
out
lret
add
test
sbb
mov
cmp
mov
fisubl
or
adc
hlt
mov
xchg
lahf
push
cmp
or
call
sbb
rclb
xor
cmpsb
imul
in
mov
inc
data16
bound
mov
mov
shlb
addr16
fwait
pop
cmp
pop
out
xchg
jae
mov
push
out
add
int
pop
filds
jp
cmp
imul
add
cmp
popa
inc
mov
scas
into
and
xor
or
fisubs
adc
xor
mov
popf
aas
mov
mov
jnp
or
cmp
in
rcrl
leave
mov
mov
enter
outsl
mov
loopne
jb
push
clc
sbb
mov
je
jae
add
jnp
adc
ret
lods
out
in
pop
jp
movsl
cmpsb
jae
test
fstpl
mov
xor
nop
fadds
outsb
cmp
dec
mov
lcall
cld
mov
jecxz
or
xchg
lock
outsb
pop
inc
dec
add
mov
sarb
and
in
push
mov
test
and
cs
mov
mov
add
mov
shld
ror
data16
filds
out
push
xchg
jge
sub
xchg
dec
dec
into
and
mov
lcall
idivb
loope
jb
cmp
das
inc
lret
out
repz
addb
adc
mov
lea
ja
dec
jmp
aam
imul
jl
lret
bnd
and
iret
inc
clc
cmp
sub
jne
jne
hlt
xchg
into
nop
jae
pop
pop
jmp
sti
mov
sbb
cld
pusha
sti
mov
xor
icebp
fwait
scas
add
in
sub
dec
lret
cmpsb
enter
repz
xchg
sub
repnz
xor
jl
rcl
enter
pop
lods
fdivrl
xor
pmuludq
jle
and
xchg
mov
and
out
mov
aad
adc
fisubs
clc
sbb
gs
mov
and
pop
stc
pop
mov
sti
push
mov
mov
outsb
icebp
xchg
movsl
cmpsb
mov
xchg
mov
sub
adc
jle
mov
push
ss
cmc
roll
jg
push
and
repz
jbe
imul
push
add
pop
ficoms
inc
out
std
mov
inc
sub
jecxz
adc
add
mov
lds
jo
sbb
or
sar
mov
shll
roll
rcl
xchg
mov
ss
cltd
push
out
hlt
mov
push
stc
mov
cmp
push
test
loope
add
aad
sahf
out
xchg
aad
imul
pop
sub
dec
dec
lcall
filds
lahf
ret
in
popl
mov
sub
shr
jne
idiv
es
imul
sub
gs
pop
jp
adc
jbe
out
hlt
bound
dec
lock
cmp
mov
movsb
ljmp
pop
and
ja
sub
inc
xchg
mov
out
hlt
dec
mov
push
lods
xor
and
into
mov
das
and
push
call
addr16
rcll
leave
stos
adc
xchg
rcrl
hlt
xor
stc
mov
insl
xchg
lcall
mov
jne
mov
jbe
pop
mov
dec
out
cmp
fwait
pop
jg
test
push
and
cmp
aam
jo
jns
pop
mov
mov
mov
js
push
enter
jge
inc
jmp
cmpsl
mov
mov
daa
loope
fisubs
jg
xchg
mov
loope
cmp
repnz
mov
mov
inc
je
loope
incb
fmull
push
xchg
xchg
cmp
in
test
xchg
mov
push
jmp
mov
in
out
lcall
mov
add
mov
sti
sbb
push
addr16
test
inc
cmpsl
mov
sbb
dec
lcall
fisubs
pop
and
insl
lock
orb
fisttps
clc
and
push
addr16
lods
scas
outsl
mov
mov
mov
int
out
push
out
repnz
sbb
movsb
es
mov
jmp
jmp
addr16
outsl
push
hlt
pop
add
loop
jnp
cwtl
repz
popf
hlt
add
fildll
sbb
movsb
xchg
arpl
lahf
das
xlat
addl
sbb
jl
mov
lahf
or
lcall
cmc
mov
sbb
divl
sub
xor
xchg
jns
dec
lea
ja
push
push
jmp
pushf
stc
sub
cmp
cmp
pusha
jmp
push
lea
jae
cmc
sub
jmp
dec
mov
insl
fisubs
mov
sti
pop
popa
test
cmp
jae
sub
cmpsb
je
in
aas
in
into
inc
jl
scas
sub
shl
cmp
mov
sbb
iret
push
out
xor
les
xor
inc
and
fwait
int3
mov
pushf
mov
movw
pushf
lea
jmp
adc
fisubs
dec
stos
push
je
movsb
xor
cmp
jmp
enter
cmp
pop
jge
test
aad
dec
cmp
test
ljmp
mov
inc
sbb
mov
hlt
aaa
mov
push
and
js
fidivrl
outsl
rorb
mov
sub
andl
dec
ljmp
lahf
cmpl
mov
negb
scas
sarl
cmpb
dec
pop
lods
aas
add
in
xchg
fwait
adc
xor
push
pop
stos
hlt
and
mov
int3
xor
int3
adc
dec
xchg
sub
cmp
stc
sub
push
jmp
push
movl
push
lea
jmp
inc
jae
insb
fisubs
xor
jp
jecxz
and
pusha
in
icebp
jbe
loopne
jne
push
dec
mov
mov
mov
lahf
mov
mov
out
adc
jmp
int3
in
pop
stos
pop
iret
shll
push
cwtl
mov
mov
outsb
jo
lcall
xchg
push
cmp
push
pop
fnstsw
mov
shlb
sbb
stos
pop
and
or
sti
mov
pop
shlb
inc
jle
mov
xor
pop
mov
cmp
xor
jmpw
add
lods
insb
roll
sti
xor
push
sti
in
fldln2
jnp,pt
sub
iret
xor
scas
pop
jnp
rcll
fists
and
cmc
mov
in
bound
sti
mov
lock
shlb
insl
adc
and
sbb
shlb
sub
fcmovu
rol
pop
fiadds
sbb
es
clc
jo
push
sbb
mov
jl
add
dec
push
aam
rorl
or
pushf
out
or
scas
adc
stos
mov
popa
data16
les
iret
adc
mov
daa
and
fwait
outsb
push
pop
fnsave
pop
test
lea
dec
lea
shr
xchg
cmpsb
stos
clc
jmp
std
ljmp
scas
xor
test
mov
cmp
popa
test
fwait
pop
incl
inc
pop
lea
stos
dec
cld
push
or
addl
sub
and
add
addr16
add
mov
andb
push
stos
mov
daa
test
negl
jle
mov
dec
add
outsb
jae
pushf
mov
not
dec
mov
pushf
dec
pushl
mov
push
pusha
pushf
pushf
mov
mov
jmp
lea
call
push
movb
push
mov
lea
jne
pusha
lahf
movzbw
lahf
mov
pusha
lea
jmp
mov
jno
addr16
mov
xor
add
mov
aas
or
jmp
orl
dec
inc
cmc
notl
not
fwait
cmpsb
mov
in
push
sub
dec
xchg
ljmp
jo
sahf
out
adc
insb
incb
mov
and
mov
mov
es
pushf
add
sub
outsl
dec
inc
scas
jp
je
mov
std
and
cmp
jns
cwtl
pop
push
lods
ja
jecxz
cmp
lret
popf
bound
imul
or
inc
mov
inc
cld
call
jb
pushf
pushf
pusha
pushl
ret
jnp
out
jno
loopw
fwait
testb
ret
dec
mov
cmp
push
fwait
outsb
scas
push
ja
pushf
rcr
std
mov
aam
pusha
roll
cs
cs
scas
mov
add
jne
sbb
roll
sarl
xchg
mov
mov
in
add
cmp
out
leave
add
mov
stc
push
fsubl
jb
les
or
push
push
and
cmp
and
insl
xor
fimuls
adc
lods
pusha
jecxz
mov
xchg
sbb
or
loopne
adc
sahf
js
jo
addr16
dec
xchg
pushf
addl
jno
mov
xchg
out
insl
in
sbb
movl
call
in
push
test
in
add
add
fsubp
mov
test
sbb
mov
jne
setge
pushf
lahf
bswap
movb
mov
mov
lea
lea
jmp
jmp
mov
xor
hlt
xchg
mov
or
enter
mov
rcl
sbb
and
stos
nop
xchg
jns
popa
cmpsb
in
bound
fwait
dec
or
sub
shll
call
cwtl
lret
sbb
xchg
cwtl
jp
cmpsb
andl
push
clc
inc
adc
dec
test
pop
mov
and
fs
xor
icebp
shll
fcompl
lahf
rcrb
push
sti
mov
fildl
dec
icebp
xchg
xchg
cmp
rol
aaa
aas
jo
ljmp
pop
add
lods
iret
mov
cmp
aad
xchg
adc
inc
ds
push
push
hlt
test
in
repnz
jns
test
jno
femms
test
mov
fadds
lds
ret
icebp
mov
enter
mov
jbe
movsb
or
pop
jg
cltd
pushf
andl
mov
jge
jb
lock
dec
inc
std
fs
sbb
movsb
mov
out
test
xchg
movsb
fwait
mov
add
push
cmpsb
call
push
mov
mov
dec
mov
icebp
mov
add
loopne
ficomps
neg
cmpw
dec
mov
mov
in
test
das
or
push
inc
pop
rcll
mov
pushf
ret
outsl
mov
stos
and
push
aas
mov
out
push
lret
cmpw
sub
xchg
inc
mov
sarb
rcrl
add
enterw
insb
jl
fidivrl
lcall
inc
les
pop
aad
and
sub
daa
mov
dec
dec
les
shrl
dec
fdivl
push
sbbl
lea
dec
sysret
jb
mov
scas
mov
ja
mov
xchg
pop
imul
lahf
push
icebp
sarb
int3
push
pusha
call
pushf
inc
jmp
pushf
jmp
call
cs
adc
adc
mov
daa
push
aaa
adc
cmpb
fistps
mov
scas
pushf
push
clc
pop
or
xor
jmp
out
jno
cmp
inc
dec
xchg
mov
outsl
fstpl
fisubs
dec
adc
pop
fsubl
inc
dec
jno
xchg
pop
mov
dec
cwtl
cmpsb
jmp
leave
jmp
ds
out
xchg
cmp
xchg
js
shll
xor
xchg
scas
add
pop
test
mov
mov
btc
pushf
mov
sar
add
xchg
cmc
shr
and
bts
clc
mov
btc
bsr
shr
cmp
add
movsbw
pushf
mov
lea
pushf
pushf
push
mov
sete
movb
setb
jmp
stc
dec
and
mov
jmp
pushf
mov
call
mov
bswap
pop
call
lods
mov
jne
addr16
mov
jno
pop
ficoms
das
mov
outsl
push
push
int
movsb
cld
cmpsb
sub
js
lahf
decl
std
add
pop
pop
dec
xor
out
push
mov
ret
xchg
inc
orl
sbb
popf
add
cs
imul
ror
and
pop
aas
ret
adc
sub
or
sahf
and
stos
sub
hlt
fdivr
subl
mov
clc
lret
sbb
call
pop
std
std
mov
insb
push
mov
ret
jg
aaa
ss
std
outsl
mov
adc
pop
xor
xor
sbb
int3
insl
jge
dec
in
dec
dec
dec
mulb
aam
pop
lds
call
fwait
cmpsb
inc
test
sahf
pop
add
xchg
inc
and
xchg
push
push
movsb
test
mov
dec
xchg
add
jmp
sbb
inc
call
ss
fnstenv
dec
in
adc
stc
mov
push
lcall
pop
fs
dec
sub
negb
xchg
cmpsl
leave
not
inc
roll
cmc
jp
mov
arpl
dec
movsl
push
jl
les
xor
sbb
xchg
je
pushl
jmp
aaa
repz
fisubs
dec
dec
adc
xlat
sbb
cmpsl
mov
xchg
or
repnz
enter
ret
jbe
loope
mov
lcall
loopne
jmp
outsl
loopne
les
xchg
mov
or
jp
and
add
data16
jle
cmp
sbb
adcl
and
call
jmp
movsbl
pusha
mov
xchg
bswap
mov
seta
not
mov
pushf
mov
pushf
pushf
mov
not
mov
call
not
inc
or
sub
xchg
dec
sar
push
setnp
mov
clc
adc
cmc
mov
pushf
jmp
cmpsl
xor
push
mov
enter
mov
fisttps
mov
push
mov
push
mov
out
push
jl
pop
sub
inc
cmp
xchg
or
icebp
decb
mov
daa
lcall
repz
stos
call
in
jp
in
mov
in
les
xchg
lcall
mov
test
icebp
and
fsubrl
stos
std
jg
pop
add
jns
movsb
int3
mov
sbb
les
das
jle
test
jns
push
call
jne
gs
xor
fs
insb
add
ret
pop
bt
pushf
pushf
clc
cmp
pusha
jmp
insl
in
jbe,pt
mov
xchg
fidivrl
dec
jns
lret
adc
xchg
testb
push
and
iret
add
roll
test
call
lcall
addl
cmp
xchg
pushf
push
push
das
add
je
ljmp
addr16
mov
pop
imul
iret
jecxz
dec
push
sti
mov
sti
xor
out
int
mov
push
mov
sub
repz
pop
lret
xchg
loopne
sti
ret
inc
dec
shr
mov
addr16
in
xchg
mov
jp
addr16
loopne
or
sub
out
jae
sbb
xchg
adc
push
insl
pop
xor
stc
and
stos
gs
cmpsb
das
push
xorl
cmp
dec
dec
push
mov
clc
lahf
rcrb
icebp
shlb
mov
iret
pusha
pushf
movl
push
call
jge
push
mov
push
mov
pusha
push
lea
jmp
call
pusha
pushl
jmp
pusha
test
jmp
mov
jmp
push
add
call
aad
bsf
shl
cmp
mov
and
sbb
bsf
add
mov
push
pusha
pusha
jmp
sub
test
lea
jne
not
bt
sub
pusha
stc
neg
stc
pusha
sub
clc
pushl
test
lea
jmp
btr
shl
movzww
clc
bt
xor
jmp
bt
push
add
call
ja
movzbw
mov
pusha
jmp
bt
stc
shl
pushf
shr
stc
jmp
pushf
lea
jmp
mov
rcl
dec
add
jmp
xchg
test
cmp
mov
jmp
pusha
pushf
mov
push
jmp
stc
push
cmp
lea
jo
jne
pushf
mov
xorb
lea
pushf
setae
mov
pusha
pushf
push
pushl
lea
jmp
push
pushf
mov
jmp
movw
inc
clc
sub
mov
pushf
call
mov
rol
clc
push
xor
mov
stc
call
pushf
popl
mov
pushl
pushl
popl
pushf
lea
jmp
clc
stc
sub
jmp
shrd
rol
shld
mov
jb
mov
pusha
pusha
stc
add
call
test
push
mov
clc
call
mov
push
lea
jmp
xor
pushl
bt
cmp
mov
cmc
pushf
test
stc
sub
movb
call
cmp
sub
call
pushf
pushf
mov
push
pusha
pushf
mov
movw
mov
pushf
mov
mov
mov
pushf
pushl
lea
jmp
mov
pusha
mov
movl
mov
lea
jmp
call
sbb
and
cwtl
mov
pushf
sub
mov
rcr
mov
bts
mov
movzbl
dec
rol
mov
btc
sbb
sbb
mov
test
mov
movzbw
mov
shld
das
xadd
pushl
popf
pushl
rdtsc
movsbw
call
clc
neg
clc
lea
jl
stc
ror
test
test
cmp
xor
cmp
jmp
lea
cpuid
bt
clc
clc
sub
test
cmpl
pushf
jmp
movl
mov
call
movb
jmp
push
pushf
mov
pushf
pusha
mov
lea
jmp
pushl
popl
pusha
lea
jmp
pushf
pusha
pushf
popl
pusha
jmp
cmp
sub
call
test
sub
clc
jmp
mov
mov
pushl
pusha
pushf
mov
push
mov
mov
pushf
lea
jmp
pushf
pushf
mov
mov
movb
mov
movb
pushf
pushl
ret
pushf
call
pushf
movb
mov
lea
jne
clc
pusha
push
bt
xor
call
pusha
pushl
mov
push
pushf
mov
lea
jmp
dec
not
adc
rol
mov
shl
btr
pusha
mov
cmc
push
add
pusha
mov
pushf
pushf
lea
jmp
mov
push
jmp
pushf
push
jmp
mov
pusha
movw
pushf
lea
jmp
lea
cld
xchg
jmp
movl
pushf
not
bt
xor
call
pushf
jmp
clc
sub
pusha
test
test
pusha
add
mov
call
push
sub
bt
clc
cmc
and
mov
call
pusha
pushf
pushf
mov
call
mov
jmp
neg
cmc
jmp
pusha
shl
lea
stc
stc
pusha
cmp
push
jmp
mov
shr
mov
push
clc
call
jmp
pushf
popl
movb
call
push
inc
rcr
sub
bts
neg
pushf
ror
btc
xor
cmp
movsbw
rcl
btr
mov
bt
add
jmp
jmp
bswap
sbb
mov
cmp
bt
add
pushf
call
mov
pushl
mov
pushf
push
pushf
lea
jmp
cmp
xor
pushf
push
jmp
das
mov
jmp
mov
movb
mov
lea
jmp
stc
mov
push
bt
add
mov
push
lea
jmp
pushf
push
movzbw
mov
call
pushf
or
mov
bts
cmp
sub
mov
add
ja
push
pushf
add
pushf
call
jmp
jmp
not
adc
jmp
jmp
lea
ja
push
pusha
jmp
push
bsf
rcr
mov
dec
xor
shrd
pop
sub
pushf
neg
bswap
test
and
pushf
sub
not
pushf
pop
ror
pusha
push
inc
dec
setbe
dec
sub
ror
neg
sar
call
pusha
mov
push
mov
pushf
mov
pushf
push
pusha
pushf
mov
pushf
pushl
lea
jmp
mov
pushf
lea
jmp
movw
push
mov
pusha
jmp
call
shld
shr
mov
pusha
stc
add
pusha
mov
lea
jmp
call
pushf
inc
pushf
pushl
movb
movl
mov
movb
pushl
pushl
lea
jmp
jmp
mov
pushf
mov
pushf
lea
jmp
jmp
or
mov
push
dec
pop
mov
rol
not
sub
ror
mov
cmp
bt
add
cmc
cmp
clc
pushf
shrd
call
mov
movw
mov
pushf
pusha
movl
lea
jmp
not
mov
stc
neg
jmp
push
mov
movb
mov
call
cmc
mov
sub
pushf
mov
pushf
pushf
lea
jmp
mov
mov
movzbw
cwtl
movzbw
mov
movzbw
pop
mov
push
pushl
movb
push
pushl
ret
test
xadd
shr
mov
test
sub
not
xor
add
mov
pusha
mov
pusha
movb
mov
jmp
and
jmp
jmp
or
das
mov
jmp
ror
cmp
sub
test
mov
jmp
call
push
pushf
pushl
mov
pusha
mov
pushl
pushl
pushl
pushl
mov
jmp
push
not
cmc
stc
test
neg
jmp
movzbw
jmp
jmp
mov
pusha
sub
movb
movb
pushl
pushf
mov
pushf
push
pushf
lea
jmp
rol
inc
sbb
clc
mov
cmp
jb
stc
xor
call
jmp
stc
sub
jmp
add
call
or
cmc
bsr
mov
dec
sbb
mov
bt
add
jmp
mov
pushf
mov
pusha
mov
pushf
pushf
pushf
lea
jmp
mov
lea
pop
bswap
not
push
movsbw
push
pushf
pushf
pushl
xchg
repz
popl
call
test
jmp
mov
movw
push
mov
lea
jmp
pushf
popl
movb
pushl
popl
pushf
pushf
pushl
lea
jmp
not
call
mov
movb
mov
lea
jmp
call
mov
push
movb
lea
jmp
call
jbe
push
pusha
movw
pushf
jmp
sub
call
pushf
lea
movw
movl
call
pusha
pushf
popl
mov
pushl
popl
movb
lea
jmp
pusha
cmc
add
push
jmp
jmp
call
mov
clc
adc
pusha
mov
bt
call
pushf
jmp
push
movb
mov
jmp
dec
bt
clc
dec
mov
cmp
jne
sub
pushf
pusha
call
call
pushl
popl
pushf
push
mov
lea
jmp
call
push
mov
movw
pushf
push
mov
movl
pushf
movb
lea
jmp
sar
mov
inc
push
dec
xadd
mov
or
dec
mov
pushl
bt
pushf
cmp
add
cmc
pushl
pushf
shld
call
mov
call
pusha
add
pusha
pushf
push
pushf
lea
jmp
movb
pusha
pushf
popl
pushf
mov
pushl
pushl
popl
push
lea
jmp
rol
movzbw
mov
pushf
mov
push
push
add
mov
jmp
mov
pusha
jmp
dec
bts
mov
dec
sub
movzbw
lea
not
not
inc
call
mov
pushf
pushl
ret
jmp
jmp
call
jmp
mov
pushf
pushl
movb
push
lea
jmp
jmp
movb
mov
pusha
movl
jmp
call
ror
pusha
sbb
movzbl
pushl
jmp
push
mov
pushf
pushf
mov
movb
lea
jmp
shl
inc
shrd
mov
and
or
mov
test
call
inc
clc
mov
cmp
test
pusha
mov
call
call
add
pushf
push
mov
mov
mov
movb
push
pushl
ret
jmp
btc
mov
test
seto
mov
cmc
sub
jmp
pushf
push
call
stc
bt
add
stc
clc
sub
cmc
clc
stc
movw
rol
call
push
call
cmp
cmp
sub
call
mov
push
mov
call
lahf
cmc
test
mov
rol
push
mov
call
mov
movl
push
pushf
mov
pushf
pushf
pushl
ret
cmp
dec
mov
pushf
bt
test
add
pushf
movb
pusha
push
mov
mov
mov
movb
mov
lea
jmp
pusha
mov
pushl
mov
pushl
mov
mov
mov
mov
pushf
push
movw
lea
jmp
dec
mov
cmc
bt
add
pushf
pushf
push
push
lea
jmp
lea
jp
rol
clc
xor
pushf
pusha
test
push
cwtl
cmc
cmc
cmc
push
sub
pushf
jmp
mov
movb
mov
pushl
lea
jmp
mov
call
movw
pushf
mov
pushf
jmp
mov
clc
test
sub
test
mov
jmp
movb
jmp
pusha
pushf
pushl
popl
mov
pushl
push
lea
jmp
mov
xchg
jmp
pushf
mov
movb
call
pushf
add
jmp
pushf
pushl
pusha
mov
push
jmp
jmp
pusha
mov
bt
ror
bt
stc
sub
pushf
call
pusha
mov
call
stc
clc
call
pushl
popl
cmp
cmp
add
pusha
pushl
popf
mov
mov
pushf
lea
jmp
push
call
mov
call
not
and
not
notl
lahf
mov
jmp
mov
mov
mov
call
clc
cmp
sub
test
push
test
shr
movl
push
pushf
mov
call
pushl
push
mov
movl
lea
jmp
pusha
push
mov
call
clc
movw
call
push
mov
push
test
sub
push
pushf
lea
jne
push
cmc
pusha
sub
movl
push
call
mov
call
mov
pushf
pusha
pushf
push
lea
jmp
or
cmp
push
stc
test
xor
mov
inc
pushf
decl
pusha
pushl
lea
jne
pusha
mov
pusha
pushl
lea
jmp
push
mov
pushl
lea
ja
pushf
pusha
mov
pusha
lea
jmp
call
call
call
call
pushf
mov
pusha
mov
call
movw
mov
pushf
movb
push
mov
mov
pushl
push
lea
jmp
add
sub
bsr
sbb
rcl
cmp
mov
shl
rol
bsr
push
mov
test
shrd
shrd
add
bsr
mov
setb
shld
movzbl
call
shl
mov
btr
shld
sub
rol
not
sub
pusha
cmc
or
sub
shr
neg
xor
sub
shr
rol
cmp
mov
jmp
pusha
push
pushl
popl
mov
push
pushf
push
lea
jmp
pushf
mov
mov
pushf
pushf
lea
jmp
mov
pushl
popl
mov
mov
movb
lea
jmp
call
add
add
lea
jne
xor
mov
bt
jmp
push
mov
mov
pushf
jmp
pushf
cld
pushl
pushf
mov
mov
rep
or
mov
rcl
mov
clc
movb
pushl
popf
mov
movw
movw
lea
jmp
pushf
not
mov
push
setae
movb
mov
push
call
shr
not
adc
btr
mov
test
pusha
cmp
add
pushl
push
pushl
push
lea
jmp
sub
stc
add
push
call
sub
movl
push
pushl
mov
mov
lea
jmp
das
mov
cmp
cmp
pusha
cmc
xor
cmp
jmp
movb
jmp
mov
pop
seto
call
pushf
pusha
mov
mov
lea
jmp
pusha
call
pushf
movw
movb
lea
pushf
push
mov
pushf
pushl
push
push
lea
jmp
lea
je
pusha
xchg
call
call
add
rcl
xor
rcl
mov
stc
pusha
add
pushf
pusha
pushf
lea
jmp
mov
pusha
jmp
pushf
movzbl
stc
test
test
cmp
sub
clc
push
pusha
neg
pushf
push
test
test
sub
jmp
lea
js
pusha
mov
jmp
pushf
mov
jmp
add
pushf
lea
jmp
pusha
pushl
popl
push
mov
lea
jmp
pusha
call
mov
rol
inc
sub
bt
movw
movzbl
bt
call
mov
pusha
mov
mov
pushl
lea
jmp
call
jmp
push
movsbw
dec
dec
bsr
pushf
inc
dec
xor
rcr
add
add
bts
rol
ror
lea
and
mov
jmp
call
cmc
pushf
neg
call
sub
jmp
cbtw
bt
cwtl
clc
pushf
test
cmp
sub
jmp
pushf
mov
mov
pusha
pusha
lea
jmp
mov
jmp
mov
pushf
movw
lea
jmp
cmc
cmc
rol
bt
pushf
stc
xor
cmc
cwtl
call
mov
mov
call
push
call
lea
jl
push
mov
pushf
lea
jmp
push
pushf
push
pushl
mov
pushf
lea
jmp
jmp
btc
btr
push
movzbl
movzbw
rol
jmp
call
push
movb
pushf
mov
pushf
pushf
lea
jmp
lea
lea
pop
mov
pusha
clc
ror
bt
cmc
mov
call
lahf
pushf
mov
pushl
call
push
jmp
mov
mov
call
push
pushf
popl
call
jmp
rcl
mov
bt
jmp
mov
movw
lea
jmp
stc
call
push
push
mov
pushf
jmp
jmp
pusha
neg
pop
bswap
dec
jmp
pusha
jmp
mov
mov
lea
jmp
pusha
mov
push
movb
pushf
pushf
popl
mov
movl
pushl
popl
push
movb
lea
jmp
dec
movzww
clc
pusha
clc
xor
jmp
daa
mov
call
pushl
popl
movw
mov
mov
lea
jmp
jmp
mov
pushl
popl
pushf
pushf
lea
jmp
not
push
mov
pop
mov
pusha
divl
movw
mov
pusha
call
pushl
popl
pushl
movb
lea
jmp
pusha
pusha
mov
movl
lea
jmp
mov
mov
pushl
lea
jmp
call
jmp
push
not
movzbl
mov
stc
call
jmp
cmp
mov
pusha
test
clc
add
pushf
lea
jmp
shl
xadd
shr
movzbl
mov
btr
test
xor
movsbw
not
call
call
adc
stc
and
not
mov
cmp
cmc
add
pushf
call
mov
pushf
push
lea
jmp
mov
jmp
pushl
popl
mov
mov
lea
jmp
movw
mov
mov
pushf
movw
lea
jmp
mov
pushf
pushf
pushf
pusha
lea
jmp
cwtl
mov
jmp
bt
or
push
lea
je
clc
cmc
xor
pushf
add
jg
xchg
pusha
movb
jmp
jmp
pusha
mov
mov
push
lea
jmp
push
mov
push
pusha
mov
call
shl
mov
call
cmp
call
jmp
mov
movw
pushf
movw
lea
jmp
pusha
mov
movw
mov
pushf
mov
mov
pusha
pushf
pushf
call
clc
sub
bt
test
add
movl
pushf
movb
mov
movb
mov
movw
lea
jmp
pusha
mov
pushf
push
lea
jns
push
mov
call
pusha
xchg
push
push
movw
push
movl
pushl
call
or
sub
movsbw
mov
ror
xor
mov
test
add
pushf
call
mov
push
mov
lea
jmp
call
sub
cmp
stc
bt
call
rcr
lahf
mov
pusha
shld
bt
mov
pusha
cmc
add
mov
pushf
mov
pushf
mov
movb
push
lea
jmp
pushf
popl
mov
call
push
pushf
mov
call
movzbl
pushf
clc
mov
call
mov
push
pushl
lea
jmp
mov
pushl
pushf
pushf
mov
pushf
mov
mov
lea
jmp
stc
shl
call
mov
push
cmc
add
call
jmp
pushf
pushf
mov
rol
test
xor
mov
bt
sub
test
shl
call
add
cmp
clc
setb
neg
pushf
pop
dec
push
rcr
ror
pop
and
jb
movzbw
add
btr
mov
clc
add
call
pushl
add
push
call
sub
pushl
call
inc
pushf
mov
lea
jmp
mov
mov
mov
mov
pushf
popl
mov
call
call
shl
bts
bt
pusha
mov
stc
add
movb
pushl
movw
lea
jmp
push
lea
jne
bts
bsr
xorb
pusha
mov
pusha
push
pushf
lea
jmp
pushl
jmp
mov
push
mov
pushf
movb
lea
jmp
cmc
mov
movb
sub
push
call
test
sub
pusha
call
push
mov
mov
pushl
pushf
pushf
pushf
lea
jmp
movl
pushf
mov
push
mov
movl
push
mov
jmp
mov
call
push
pushf
mov
jmp
mov
pushf
pushf
push
movb
pushl
ret
push
btr
aaa
aas
mov
inc
mov
cmp
cmp
not
bt
not
pushf
and
jmp
clc
sub
pushf
neg
bt
sub
cmc
call
movb
mov
call
sub
bt
stc
add
pushf
pusha
pushl
lea
je
pushf
jmp
call
call
pusha
clc
cmc
shr
pushf
mov
jmp
mov
jmp
mov
push
lea
jmp
pushf
call
shl
pushf
mov
pusha
pushl
pushf
popl
movw
jmp
pushf
movw
mov
mov
lea
jmp
mov
pushf
mov
pushf
push
mov
push
mov
mov
movb
lea
jmp
call
not
xchg
movl
push
dec
mov
lea
jns
movsbw
inc
dec
pusha
movsbl
dec
stc
xor
bswap
shld
sub
inc
add
pop
lea
lea
shr
sub
shld
adc
mov
sub
pusha
mov
jmp
push
movzbw
lea
mov
pusha
push
lea
push
call
mov
pusha
mov
mov
pushf
lea
jmp
mov
push
mov
call
inc
bt
sub
movb
call
cmc
pusha
pusha
ror
cmc
push
test
xor
cmp
test
cmc
clc
mov
movb
sub
pushl
mov
call
shr
mov
pushf
mov
lea
jge
pushf
pushf
popl
jmp
pushf
popl
push
pushf
call
mov
mov
push
mov
pushf
pushf
mov
call
call
cmc
push
cmc
ror
pushf
cmp
call
mov
call
lea
ja
setge
shrd
xadd
rdtsc
mov
rcr
lea
lea
das
sub
pushf
mov
sar
lea
cmp
inc
and
cmc
sub
pusha
mov
pushf
movw
pushf
popl
bswap
not
pusha
xchg
movzbw
mov
push
bswap
movzbw
call
lea
shrd
mov
bsf
add
and
sub
setb
jmp
pushf
pusha
mov
push
mov
lea
jmp
pushl
popl
push
movb
lea
jmp
sub
bswap
inc
movzbw
pushf
not
bswap
pop
inc
stc
btr
rol
test
bswap
sub
jmp
jmp
call
rol
mov
cmc
add
pushf
mov
pusha
lea
jmp
push
pop
shl
clc
mov
call
sub
setge
dec
shl
mov
adc
clc
shl
call
xor
jb
pop
add
pop
add
and
sub
pop
add
cs
add
sub
mov
ss
add
and
int3
and
sub
pop
add
pop
add
pop
add
pop
add
daa
pop
add
sbb
aad
pop
add
sbb
js
pop
add
xor
add
es
add
pop
add
aaa
pop
add
pop
add
and
sub
pop
add
and
bound
pop
add
pop
add
cmp
add
pop
add
and
test
pop
add
xor
mov
pop
add
pop
add
pop
add
cmp
add
pop
add
pop
add
and
sub
pop
add
aaa
pop
add
pop
add
pop
add
cs
add
cs
add
cs
add
cs
add
cs
add
cs
add
cs
add
cs
add
sub
pop
add
xor
or
pop
add
and
test
add
pop
add
cmp
add
sbb
es
add
sub
xchg
pop
add
sbb
push
sub
add
pop
add
and
pop
add
das
pop
add
pop
add
daa
pop
add
sub
add
pop
add
sbb
test
pop
add
push
pop
add
sub
pop
add
das
pop
add
pop
add
pop
add
sub
nop
and
pop
add
pop
add
and
icebp
pop
pop
add
pop
add
sbb
js
pop
add
sub
mov
and
pop
add
sub
pop
add
and
sub
pop
add
pop
add
xor
xor
xor
xor
xor
xor
xor
ds
pop
add
pop
add
pop
add
es
add
pop
add
pop
add
pop
add
and
add
pop
add
xor
jb
pop
add
push
pop
add
xor
jb
pop
add
sub
mov
cs
add
das
pop
add
pop
add
sub
mov
and
pop
add
pop
add
pop
add
cmp
add
ss
add
sbb
test
pop
add
cmp
add
sbb
push
sub
pop
add
pop
add
push
pop
add
cs
add
daa
pop
add
sub
add
pop
add
cmp
add
xor
addr16
pop
add
pop
add
sbb
test
pop
add
aaa
pop
add
sbb
aad
pop
add
pop
add
cs
add
cs
add
cs
add
cs
add
cs
add
cs
add
cs
add
and
sub
pop
add
cmp
shll
add
pop
add
push
pop
add
xor
mov
pop
add
pop
add
sbb
lods
and
add
pop
pop
add
pop
add
pop
add
xor
or
pop
add
and
sub
pop
add
pop
add
pop
add
pop
add
cs
add
pop
pop
add
and
sub
pop
add
pop
add
pop
add
pop
add
xor
addr16
add
cmp
add
and
sub
pop
add
sbb
pop
add
pop
add
das
pop
add
pop
add
cmp
add
sub
nop
daa
pop
add
and
sub
pop
add
push
pop
add
cmp
test
pop
add
and
add
das
pop
add
pop
add
xor
xor
xor
xor
xor
xor
xor
ds
bsf
btr
add
add
jmp
mov
pusha
mov
mov
lea
jmp
not
stc
test
mov
pushf
not
clc
test
stc
pushl
sub
cmp
cmp
mov
and
pushl
call
lea
pushf
btr
stc
mov
pusha
cmc
ror
cmc
call
shrd
jmp
movw
inc
push
lea
jmp
daa
push
mov
test
push
jmp
pushf
pushf
popl
movb
pushf
pushf
call
pushl
mov
pushl
movb
lea
jmp
mov
call
or
mov
jmp
jmp
sbb
shr
call
pusha
inc
mov
setge
mov
pop
mov
xchg
xchg
sete
xchg
bswap
setle
pushl
popl
call
pushl
popl
movw
pushl
pushf
lea
jmp
bsf
sub
mov
cmc
add
push
pusha
lea
jmp
pushf
mov
push
pushf
push
movb
lea
jmp
stc
add
pusha
pushf
popl
pushf
call
push
movw
pusha
pushf
popl
jmp
ror
rdtsc
rdtsc
jmp
push
seta
ror
or
clc
and
inc
jmp
pushf
push
mov
pusha
mov
pusha
mov
movw
jmp
