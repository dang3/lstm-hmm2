push
nop
pand
nop
push
nop
pand
nop
mov
nop
pand
nop
push
jmp
push
jmp
push
nop
pand
nop
push
nop
pand
nop
mov
nop
pand
nop
movsl
nop
pand
nop
pop
jmp
test
jmp
pop
nop
pand
nop
mov
nop
pand
nop
sub
nop
pand
nop
xor
nop
pand
nop
push
nop
pand
nop
push
jmp
pop
jmp
push
nop
pand
nop
push
jmp
and
inc
jmp
add
add
add
push
nop
pand
nop
call
nop
pand
nop
push
nop
pand
nop
mov
nop
pand
nop
mov
nop
pand
nop
mov
nop
pand
nop
mov
jmp
ds
add
mov
add
and
nop
pand
nop
inc
nop
pand
nop
je
nop
pand
nop
sub
nop
pand
nop
jmp
nop
pand
nop
add
nop
pand
nop
movl
nop
pand
nop
xor
nop
pand
nop
lea
nop
pand
nop
lea
nop
pand
nop
push
nop
pand
nop
push
nop
pand
nop
push
jmp
xor
jmp
push
nop
pand
nop
xor
or
nop
pand
nop
add
nop
pand
nop
mov
nop
pand
nop
mov
nop
pand
nop
lea
nop
pand
nop
mov
nop
pand
nop
push
nop
pand
nop
push
jmp
mov
jmp
mov
jmp
push
nop
pand
nop
inc
nop
pand
nop
push
nop
pand
nop
addl
nop
pand
nop
inc
nop
pand
nop
push
nop
pand
nop
addl
nop
pand
nop
push
nop
pand
nop
addl
nop
pand
nop
mov
nop
pand
nop
push
nop
pand
nop
call
nop
pand
nop
add
nop
pand
nop
mov
nop
pand
nop
lea
nop
pand
nop
nop
nop
pand
nop
nop
nop
pand
nop
nop
nop
pand
nop
push
nop
pand
nop
push
nop
pand
nop
push
nop
pand
nop
push
nop
pand
nop
nop
nop
pand
nop
nop
jmp
add
jmp
nop
nop
pand
nop
call
nop
pand
nop
pushl
pop
nop
pand
nop
cmp
nop
pand
nop
nop
nop
pand
nop
jne
nop
pand
nop
jmp
nop
pand
nop
int3
nop
pand
nop
push
nop
pand
nop
subl
nop
pand
nop
mov
nop
pand
nop
mov
nop
pand
nop
mov
nop
pand
nop
pop
nop
pand
nop
push
nop
pand
nop
push
nop
pand
nop
push
nop
pand
nop
push
nop
pand
nop
pushl
nop
pand
nop
pushl
nop
pand
nop
push
nop
pand
nop
movl
nop
pand
nop
call
nop
pand
nop
pop
jmp
push
jmp
pop
nop
pand
nop
pop
nop
pand
nop
pop
nop
pand
nop
add
nop
pand
nop
mov
jmp
call
jmp
xor
or
nop
pand
nop
xor
nop
pand
nop
sub
nop
pand
nop
mov
nop
pand
nop
mov
nop
pand
nop
mov
nop
pand
nop
mov
nop
pand
nop
xor
jmp
push
jmp
sub
nop
pand
nop
cmp
nop
pand
nop
jb
nop
pand
nop
push
nop
pand
nop
push
jmp
pop
jmp
mov
nop
pand
nop
xor
nop
pand
nop
lea
jmp
mov
jmp
push
nop
pand
nop
mov
nop
pand
nop
mov
nop
pand
nop
movzbl
nop
pand
nop
movzbl
nop
pand
nop
push
add
pop
nop
pand
nop
push
add
pop
nop
pand
nop
movzbl
nop
pand
nop
sub
nop
pand
nop
xor
or
nop
pand
nop
cmp
nop
pand
nop
jb
nop
pand
nop
xor
nop
pand
nop
mov
nop
pand
nop
mov
nop
pand
nop
inc
nop
pand
nop
mov
nop
pand
nop
cmp
nop
pand
nop
jb
nop
pand
nop
xor
nop
pand
nop
xor
nop
pand
nop
pop
nop
pand
nop
mov
nop
pand
nop
mov
jmp
pop
jmp
jbe
nop
pand
nop
sub
nop
pand
nop
movzbl
nop
pand
nop
mov
nop
pand
nop
movzbl
nop
pand
nop
push
add
pop
nop
pand
nop
movzbl
nop
pand
nop
lea
nop
pand
nop
mov
nop
pand
nop
nop
nop
pand
nop
mov
nop
pand
nop
mov
nop
pand
nop
mov
nop
pand
nop
nop
nop
pand
nop
push
add
pop
nop
pand
nop
movzbl
nop
pand
nop
movzbl
nop
pand
nop
xor
nop
pand
nop
inc
nop
pand
nop
dec
nop
pand
nop
jne
nop
pand
nop
pop
nop
pand
nop
pop
nop
pand
nop
pop
jmp
ret
jmp
pop
nop
pand
nop
add
nop
pand
nop
push
nop
pand
nop
ret
nop
pand
nop
xor
add
nop
pand
nop
shr
nop
pand
nop
mov
nop
pand
nop
shl
nop
pand
nop
mov
nop
pand
nop
mov
nop
pand
nop
pushl
nop
pand
nop
push
nop
pand
nop
xor
nop
pand
nop
xor
nop
pand
nop
mov
nop
pand
nop
add
nop
pand
nop
cmp
nop
pand
nop
je
nop
pand
nop
sub
nop
pand
nop
jmp
nop
pand
nop
xor
nop
pand
nop
xor
or
nop
pand
nop
lea
nop
pand
nop
lea
jmp
xor
jmp
mov
nop
pand
nop
lea
nop
pand
nop
add
nop
pand
nop
xor
push
add
pop
nop
pand
nop
add
jmp
add
jmp
add
add
push
dec
mov
xor
and
jae
std
mov
mov
movsb
aas
pushf
mov
ds
int3
adc
xchg
inc
mov
pushf
jg
pop
sub
and
push
sbb
test
and
add
sub
es
das
lods
push
loop
push
xor
add
inc
outsb
dec
sbb
shlb
in
sbb
or
outsl
nop
mov
add
xchg
fistps
sahf
adc
dec
and
repnz
pop
in
movsb
out
lahf
push
inc
mov
insl
xchg
out
mov
mov
cwtl
cld
add
sub
or
sbb
inc
dec
in
fucom
jno
and
xor
lret
test
pop
mov
jmp
jo
jne
adc
jno
lods
movsb
adc
andb
xchg
repnz
ficoml
fcomps
adc
pop
jp
sub
in
mov
aam
jae
lock
sbb
fcoml
repz
out
xchg
test
sbb
shl
insb
adc
les
js
xchg
cltd
add
mov
ss
and
mov
in
inc
jmp
dec
cmp
lret
mov
outsb
xchg
je
fistpll
rclb
sub
pop
cmp
or
cmpl
jle
in
and
movsl
int
jnp
test
aas
push
and
or
jno
add
bound
adc
mov
push
adc
pop
pushf
outsl
rcl
shr
push
aaa
arpl
fisubs
daa
mov
cmp
sub
bound
mov
or
jge
jo
cmp
mov
ljmp
pop
sbb
xor
imulb
shll
and
loope
outsb
cmpsl
xchg
mov
and
jns
jp
shll
fstpt
je
cmovae
ds
jmp
mov
pop
ljmp
outsl
scas
fnsave
push
adc
iret
gs
std
sub
in
hlt
cmp
call
pop
xor
lods
add
dec
xor
cmpsl
pop
push
jp
cmp
jp
xchg
add
sbb
push
pop
imulb
or
mov
loope
fdivr
cmpsl
lret
sub
jnp
add
inc
cmc
dec
pop
dec
popa
ret
sbb
mov
mov
lock
rcll
mov
pop
add
sarb
fidivl
lock
mov
xchg
jno
lret
dec
test
pop
mov
sarl
movsl
lret
cmp
jnp
bound
mov
cltd
cwtl
cmpsb
adc
hlt
cmp
cmp
pushf
pushf
inc
cwtl
imul
or
xchg
inc
add
scas
cld
xchg
mov
xchg
rolb
adc
inc
add
pop
push
lahf
push
ret
mov
mov
dec
jae
dec
loopne
push
lock
inc
jns
adc
mov
jecxz
jns
rorl
int3
lds
cmpsl
cmp
je
pop
ja
movsb
repnz
cltd
inc
and
cmp
mov
fmull
inc
lret
mov
adc
fisttpl
fmull
add
cmp
lods
xchg
or
or
arpl
cmp
inc
or
sbb
pop
pusha
mov
add
fidivrs
scas
jne
lds
icebp
cmpsb
jno
rorb
mov
inc
xor
adc
dec
mov
xchg
ret
pop
jg
xor
leave
adc
jge
rorl
cmp
cwtl
mov
push
into
and
lahf
push
jae
outsb
cmp
outsl
mov
fsts
roll
lahf
fstps
icebp
imul
and
pop
cwtl
mov
shll
lret
and
int
mov
neg
mov
mov
mov
in
pusha
mov
xchg
push
sbb
shl
neg
lea
xchg
jmp
inc
xor
int3
inc
dec
mov
and
jmp
test
adc
cmp
mov
lahf
cs
adc
daa
jns
gs
call
and
arpl
mov
xlat
imul
mov
adc
mov
xchg
push
lahf
aas
testl
jae
ret
mov
les
in
sbb
jge
iret
mov
mov
dec
jne
mov
sbb
into
leave
mov
push
pusha
cmp
lods
cld
pop
minps
and
es
rclb
jno
cmc
dec
mov
test
mov
gs
fwait
sub
sbb
ret
into
icebp
movsl
sbb
je
add
in
adc
push
sbb
pop
into
pop
adc
addr16
ret
pop
mov
inc
hlt
inc
mov
gs
in
jnp
test
xor
add
pop
and
add
inc
shrl
push
cmp
and
bound
sub
push
sbb
cwtl
xchg
pop
mov
roll
pushf
cmc
nop
sbb
test
lahf
sub
shrb
loopne
fwait
shll
lret
mov
mov
and
and
pusha
mov
int3
fsubrl
in
clc
cmp
jo
sbb
cmp
sub
xor
sub
cmp
jo
fwait
prefetcht0
lahf
ja
mov
icebp
cmp
into
ljmp
nop
es
sub
clc
cmpsl
sbb
dec
insb
or
fistpll
cld
fs
mov
addb
push
repnz
cltd
adc
pop
xchg
lods
movsb
rorb
pop
dec
add
mov
in
pushf
pop
rorb
mov
xor
mov
inc
ds
adc
cmp
iret
mov
cmp
out
lods
xchg
sbb
pushl
jg
and
xchg
mov
loope
xor
pop
pop
out
shrb
mov
jne
fldl
dec
mov
push
repz
lcall
aad
or
aaa
in
mov
mov
outsl
out
jnp
subb
sbbb
ficoms
jl
fmulp
call
xchg
cltd
aam
mov
push
aad
ret
pop
add
cmp
aam
adc
fbstp
dec
andl
call
aad
rep
dec
rolb
stos
and
pushl
and
sbb
xor
cmpsb
lds
insb
cmp
mull
sbb
xlat
pop
test
fmull
mov
out
cmp
xchg
push
cmpsl
xor
and
jp
lret
mov
and
sub
adc
in
movsl
iret
mov
add
mov
popf
icebp
enter
sub
jb
sarl
lret
jp
mov
out
daa
sub
ds
sub
push
inc
xor
daa
cmp
pushf
insl
sbb
sbb
adc
sbb
fnstenv
hlt
repnz
shl
sbb
xor
outsl
push
shl
pop
je
cmp
cmp
xor
outsb
cmpsb
sti
jl
xor
sbb
mov
leave
sbb
sarl
lret
xchg
cmc
fstpl
mov
xor
es
shll
mov
scas
icebp
neg
xor
aas
xlat
sub
je
pop
or
cld
push
xchg
jbe
mov
jb
sarl
xchg
fstps
sbb
test
data16
and
inc
lock
test
aaa
sub
xchg
loopne
fimuls
leave
jge
out
clc
jae
fsubrs
enter
jl
sarb
mov
or
rcll
sbb
mov
movsl
mov
stos
jb
jnp
mov
dec
mov
add
popf
xchg
fwait
mov
imul
cltd
lods
xor
cmp
mov
fldt
sbb
jb
es
push
das
pop
jns
mov
adc
dec
cmp
shll
aas
pop
inc
sub
xlat
iret
jp
es
sbb
jmp
repz
jmp
cld
call
sahf
cli
loopne
les
sbb
or
and
gs
jb
dec
mov
or
or
or
mov
jp
es
call
sbb
mov
cmp
negb
out
sti
jnp
mov
insl
xor
cli
in
sub
in
push
pop
bound
or
fwait
jne
mov
ljmp
shr
cmpb
cmpb
cmpb
sbb
cmpsl
scas
nop
xchg
jb
les
mov
and
or
jo
shlb
xor
divb
jg
dec
hlt
jns
mov
in
int3
stc
push
inc
out
lea
jge
jge
ljmp
bound
jns
add
xor
jecxz
jmp
mov
xor
les
xchg
jl
cmp
sbb
and
decl
clc
adc
int3
push
adc
imul
lods
pushf
pop
xchg
int3
pop
cltd
adc
and
inc
dec
sbb
je
mov
mov
mov
shl
fisubrl
xor
cmp
mov
jp
dec
fadds
pop
arpl
pop
xchg
cmp
push
adc
push
and
cmp
daa
scas
dec
xor
mov
outsl
push
call
out
into
sub
leave
ret
mov
cmp
pop
adc
addr16
jo
push
andl
stc
imul
or
mov
mov
lock
sbb
movsb
push
push
mov
adc
fsubrl
inc
push
pop
jmp
mov
in
mov
pop
pop
xchg
fsubrs
push
dec
les
mov
cmpsb
fbstp
lods
cmp
mov
sub
adc
cmp
dec
vunpcklpd
push
outsl
popl
fstp
and
cltd
clc
mov
movups
push
dec
mov
in
cli
dec
in
aaa
mov
sbbb
adc
jle
fcoms
jo
loope
lods
and
dec
push
dec
fisubs
mov
aam
movsb
aam
and
lods
pop
sbb
in
leave
add
add
dec
hlt
gs
xchg
cltd
push
pop
mov
adc
pop
sbb
xchg
je
add
lea
scas
jle
lds
jns
pop
and
push
pop
jmp
add
dec
add
loopne
rcl
mov
cmp
data16
xchg
icebp
adc
mov
and
xorl
mov
pop
clc
push
sti
adc
std
mov
loop
mov
cwtl
xor
aam
scas
lock
push
test
sbb
lcall
add
shll
scas
subb
push
push
xor
rol
lret
xchg
sarb
cltd
mov
rolb
push
mov
push
lahf
adc
mov
sub
pop
gs
lret
pushf
faddl
sub
iret
and
lods
and
jge
cli
add
ss
xor
cmp
arpl
bound
mov
dec
ftst
add
aas
inc
sbbb
fimull
int3
xchg
sti
or
pop
lret
xor
xchg
les
mov
pop
aas
divb
mov
jnp
push
mov
data16
inc
dec
sbb
mov
daa
shll
test
cmp
leave
mov
imul
jl
fsts
outsb
add
in
mov
sti
mov
outsb
rorb
sub
xchg
sbb
adc
repz
dec
in
push
xchg
mov
in
lods
cmp
pop
out
out
jns
and
mov
cmp
js
pushf
xor
xchg
sub
scas
cmpsb
mov
cmp
scas
lock
mov
jmp
sti
cmp
adc
jp
imul
dec
imul
mov
stos
gs
out
lret
lock
shr
push
cmp
adc
ja
cli
fwait
xor
pop
dec
mov
mov
and
cmp
imul
jge
sbb
repnz
or
leave
pop
lea
into
xchg
in
test
mov
aam
xchg
aam
pusha
out
test
movsl
push
mov
lahf
jns
push
push
fwait
dec
cmc
repnz
xor
mov
adcl
jo
fcmovnb
push
es
in
xchg
jne
aam
mov
and
in
outsl
ds
pop
push
xchg
pop
rcll
add
sbb
add
std
out
es
int3
push
adc
cmp
adc
rcrl
ffreep
mov
std
in
pop
lret
rorl
test
and
cli
pop
adc
sub
data16
test
jp
pop
dec
push
jbe
insb
insb
xlat
aam
sbb
ret
insl
and
jle
sbb
or
xchg
add
dec
mov
sub
or
and
or
and
aas
xchg
insl
cmp
mov
les
adc
fists
sbb
out
xchg
clc
dec
pushf
push
jnp
cmpl
loop
jns
clc
dec
mov
rcrb
test
insb
nop
sbb
adc
xchg
xor
mov
push
mov
adc
repnz
adc
adc
pop
movsb
dec
outsl
jns
inc
lock
push
mov
add
add
loop
cmp
or
push
mov
pop
stc
mov
mov
stc
jg
pop
ret
ret
insb
add
aam
les
mov
bound
popa
subl
xchg
ljmp
add
push
aaa
test
int
and
xor
pop
sti
add
xchg
lods
and
jecxz
jge
scas
sti
es
push
divb
mov
ja
notl
sbb
inc
cmp
inc
arpl
mov
cmc
cmpsl
jecxz
bound
sahf
rcll
mov
xor
adc
test
mov
jmp
cmp
dec
mov
push
mulb
stos
nop
mov
fsubr
pop
mov
out
addb
and
movsl
sub
minps
lods
push
push
repz
push
sub
mov
stos
subb
and
popa
xchg
loope
in
pop
scas
adc
xchg
cmpsl
and
fcmovnbe
test
mov
cmp
sbb
lods
or
xchg
faddl
xchg
xchg
pop
hlt
out
push
xchg
add
jmp
cmp
xor
ret
ja
lds
mov
das
sbb
add
xchg
rcl
sub
sub
adc
xorl
dec
je
sbbb
add
popa
and
iret
ds
cmp
sub
int
sub
push
pop
sbb
sub
dec
movsl
fs
pop
fildl
js
lods
cld
cwtl
mov
insb
loop
jmp
repz
sbb
or
stos
sbb
inc
push
add
or
into
sub
call
jecxz
sbb
sub
in
aaa
lahf
jmp
mov
jl
call
stos
pop
add
shl
aas
cmp
add
jne
and
hlt
mov
aam
loop
pushf
rorb
xchg
push
mov
push
imul
dec
adc
in
or
stos
cli
cld
xchg
int3
dec
dec
fwait
out
cmp
fidivl
push
cmp
je
jle
and
movsb
addr16
push
lock
add
loop
mov
adc
andb
xchg
push
in
xor
pusha
or
aaa
inc
sub
cltd
insl
jbe
jns
scas
xchg
mov
int3
shrb
push
mov
fadd
mov
movb
add
aas
mov
cli
xchg
cli
cmc
js
jnp
std
jns
mov
jns
push
mov
js
lock
jns
ss
push
sbb
xor
xchg
push
jp
aas
loop
cli
inc
cmp
imul
or
in
jle
dec
jecxz
cmp
outsl
rolb
cmp
das
cmp
sti
push
mov
sbb
sahf
mov
je
or
lea
pop
rcr
lret
mov
sub
je
out
mov
cmp
or
ret
outsl
or
ret
cwtl
xor
fisttpl
ja
sahf
sbb
or
les
jp
and
push
subb
lds
add
and
ret
into
push
jle
push
ss
je
fiadds
stc
inc
and
sub
adc
into
inc
push
pop
ja
rcll
shrl
test
adc
in
and
fistpll
arpl
aam
cltd
cmp
outsl
test
bound
imul
lods
sahf
or
cmp
cmp
test
mov
mov
popa
and
inc
xchg
lock
addr16
jl
movsl
lcall
jbe
into
test
push
xchg
mov
testl
and
push
mov
mov
pop
pop
mov
jae
xor
stos
ss
lahf
cmp
and
loop
das
out
add
clc
hlt
xor
mov
cmpsb
xor
je
sub
in
mov
es
adc
lock
imul
pop
sbb
inc
lea
inc
aas
pop
xor
sub
xchg
inc
mov
std
aam
jecxz
push
xchg
xchg
pusha
imul
push
cmp
mov
lods
out
clc
add
and
and
cmc
jnp
fists
and
aaa
xchg
ficompl
test
scas
shll
aad
lcall
sti
decb
dec
dec
mov
cmp
faddl
test
push
sbb
andb
js
mov
cmp
dec
inc
cmp
sub
enter
movsl
fnstcw
subl
js
mov
mov
push
or
mov
pop
adc
lcall
dec
adc
xorb
inc
in
inc
testl
push
loope
cwtl
adc
leave
stos
lods
dec
pop
mov
arpl
adc
je
fs
pop
push
out
jge
add
imul
inc
icebp
pop
stos
xchg
sub
insb
ds
or
jnp
mov
push
out
xchg
es
mov
jecxz
cld
jmp
sub
push
shlb
sbb
mov
dec
out
faddp
out
push
xchg
pop
rolb
xchg
xor
dec
mov
in
or
mov
push
adc
or
and
dec
jbe
fimull
xchg
fwait
or
sub
or
clc
inc
shl
fistpl
and
mov
mov
sub
subb
jle
push
or
jle
adcb
mov
repz
lcall
fwait
sub
cmc
in
lret
lods
call
jb
inc
je
outsb
cs
mov
stc
push
dec
mov
shrb
adc
add
imul
in
xor
leave
add
ljmp
push
idivb
fsubr
rclb
mov
sbb
xchg
jmp
fbstp
fadd
hlt
leave
ret
sbb
ja
ficomps
cmp
pusha
stos
pop
dec
sbb
test
sub
loop
jge
sub
or
ss
push
dec
sub
inc
xchg
mov
arpl
pop
jns
jnp
cmp
sti
add
fimuls
dec
push
jns
adc
add
lods
hlt
mov
mov
cmp
orl
mov
mov
fdivs
push
and
mov
out
xlat
mov
sbb
in
sub
fiaddl
pop
xorb
push
or
lock
mov
push
sub
ret
repz
or
sbb
insl
rcll
jecxz
mov
negb
cwtl
dec
fisttpl
xor
sub
leave
pop
popa
data16
jnp
mov
jge
jle
sub
clc
out
leave
je
mov
icebp
cmp
add
push
pop
ss
jne
mov
push
jl
into
push
fidivl
adc
xchg
movsb
sti
outsb
push
mov
mov
rcrb
jl
sub
and
add
stos
fldl
movsb
jecxz
dec
xor
xchg
mov
pop
lahf
stos
dec
push
fdivrl
cli
pop
and
enter
mov
aas
pop
daa
push
cli
test
lahf
mov
ret
lea
add
inc
aas
ss
fcomps
mov
lahf
jl
xchg
cld
lret
daa
adc
sbb
dec
addr16
in
arpl
incl
pop
mov
rorl
rorl
adc
xor
xor
ficomps
cli
lahf
inc
cmpsb
dec
jmp
push
cmc
cld
les
pop
add
iret
xor
fadds
fmull
jb
or
push
lret
cmp
out
loop
and
popa
arpl
jnp
inc
std
jecxz
repnz
cmp
sbb
xchg
scas
shll
xchg
jp
cmp
pusha
loopne
out
aam
andl
xor
aaa
sbb
stc
fwait
mov
jno
mov
out
add
push
jne
fwait
popf
insl
inc
lahf
insl
xchg
pushf
adc
mov
stos
inc
xor
inc
jae
pop
leave
mov
xlat
sbb
rol
mov
cltd
test
rorb
mov
iret
add
and
dec
mov
xchg
xlat
pop
push
cmp
xor
mov
jl
sub
cmp
rorb
mov
dec
stos
sbb
scas
or
pusha
test
cli
imul
inc
add
cmpsb
or
xor
mov
xor
mov
es
std
pop
jae
inc
mov
fiaddl
sub
xchg
mov
inc
ds
pusha
and
adcl
and
lret
cwtl
and
stc
push
movzbl
ret
pop
inc
gs
and
sbb
std
add
sbb
jno
movsb
mov
in
mov
gs
enter
ja
sub
out
cmpsl
scas
lea
imul
pop
add
xchg
xlat
pop
lods
mov
popf
push
aam
not
cmp
mov
mov
jmp
adc
incb
insb
notl
setle
xchg
out
stos
into
in
sbb
or
or
mov
in
jecxz
std
jle
jbe
and
mull
xchg
mov
fwait
mov
cmpl
xchg
fidivrl
push
js
sarl
inc
jo
mov
or
push
jae
jae
repz
mov
movsb
inc
adc
fisttpll
call
mov
cmp
pusha
daa
push
aas
push
jmp
sbb
js
out
lods
mov
test
jecxz
clc
jg
inc
xor
jmp
push
cs
in
cwtl
das
cli
or
lods
adc
test
mov
jp
jge
je
pop
sub
mov
lahf
into
push
movb
adc
or
mov
je
and
mov
and
sub
popf
pop
mov
mov
jle
mov
inc
shlb
jnp
pusha
rorl
dec
dec
jb
dec
mov
sub
inc
or
mov
repz
jg
popa
lcall
pop
xchg
fdivs
xchg
adc
pop
pop
pop
shl
std
xchg
sbb
jecxz
mov
xor
insl
xorl
rorb
mov
sti
pop
sub
movsb
push
mov
jecxz
xor
ds
mov
bound
movsl
push
div
dec
mov
das
mov
and
pop
add
movsb
jne
sti
inc
cmp
in
lock
fs
mov
xor
movsb
test
xor
jne
call
xchg
dec
enter
ret
xchg
inc
cmp
insb
xchg
mov
mov
sub
or
ret
cmpsb
push
rclb
sub
lea
call
std
adc
aas
fcomps
lea
iret
cmp
or
hlt
pusha
push
loop
sub
dec
leave
dec
daa
mov
fwait
push
cmpl
and
mov
outsb
out
mov
nop
decl
das
add
mov
cs
scas
push
jnp
inc
cmc
pop
mov
sub
ss
insl
sbb
lock
in
lock
rol
jns
std
divb
push
adc
lea
fs
std
fs
sbb
ja
or
jp
inc
dec
pop
xchg
sti
adc
mov
mov
fnstenv
cltd
or
testb
es
jle
xor
mov
mov
stos
inc
scas
lods
cs
push
sub
rcrl
in
movsl
data16
push
lods
adc
mov
push
jl
sub
and
stos
xchg
mov
dec
dec
xchg
jo
adc
cmpb
ret
xor
pop
jg
cmc
jge
add
cmpsb
or
pop
nop
ret
ret
cmpb
adc
icebp
or
pop
sub
stc
pushf
and
jno
rcrb
out
test
loop
iret
in
shll
test
mov
mov
sub
xchg
in
jmp
dec
subl
xor
jbe
mov
fisubl
sbb
fnsave
jbe
sub
mov
adc
mov
lcall
and
lea
jo
mov
out
push
pop
stos
jnp
fsubp
mov
jno
aas
repnz
pop
cli
mulb
popa
dec
into
push
cli
xchg
inc
xchg
cmc
sub
push
repz
adc
inc
mov
mov
pop
aad
cmp
clc
add
scas
inc
mov
dec
in
sub
jp
int
hlt
push
lcall
popf
subl
rcrb
jo
adc
sub
movb
sbb
lret
xchg
cmp
cmp
sbb
aam
enter
cmpb
inc
jbe
pusha
stos
add
pop
pusha
or
lods
fisubrl
add
and
fdivl
push
cmp
mov
mov
lret
pop
mov
inc
pushf
xchg
scas
stc
les
ret
scas
cli
xor
insl
je
sbb
push
jmp
mov
fstpt
pop
mov
sbb
mov
loope
pop
outsb
fsubs
mov
mov
cmp
les
ret
pop
mov
hlt
js
jg
xor
fstpl
adcb
mov
dec
add
jecxz
xchg
mov
lcall
fs
pop
das
cld
xchg
scas
dec
lcall
push
inc
imul
daa
jb
test
mov
out
or
inc
xor
xor
fdivl
clc
mov
mov
lea
cltd
jb
sub
jb
dec
cs
ss
pop
inc
sub
movsl
shr
add
cmpsl
xchg
jp
adc
pop
ds
jg
push
jne
lea
ja
and
pop
out
adc
sub
xchg
popl
adc
push
idivb
cltd
xchg
pop
jg
and
enter
rcll
push
dec
cmpsl
int3
sbb
loopne
add
jmp
add
inc
cmp
lcall
xchg
gs
push
cld
xchg
fidivs
jge
mov
or
pop
iret
mov
inc
js
pop
add
loope
ss
cmp
js
movsb
push
loopne
gs
xchg
aas
and
jno
ds
dec
pop
inc
mov
pop
andb
mov
pushf
pop
mov
in
arpl
mov
sub
jecxz
jl
xchg
dec
test
bound
je
scas
xchg
ljmp
in
andl
and
inc
repz
lds
pushf
roll
mov
or
in
and
xlat
scas
or
test
dec
pop
push
and
into
push
xor
pop
dec
pop
loop
add
adc
rorb
cli
imul
out
cmp
push
loope
push
sbb
les
movsb
add
jb
sub
sbb
daa
push
sbb
jp
lock
dec
loopne
pop
bound
gs
inc
out
mov
inc
int
sub
leave
outsl
xchg
lods
es
dec
jb
iret
dec
mov
outsl
sti
sub
out
out
lods
xchg
pop
out
test
es
mov
imul
lds
mov
adc
in
ljmp
push
pop
cli
or
push
mov
adc
jmp
adc
xchg
scas
mov
nop
cmp
pop
fsubl
xchg
out
ja
mov
outsl
in
push
imul
inc
out
