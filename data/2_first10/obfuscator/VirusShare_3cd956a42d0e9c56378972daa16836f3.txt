add
pusha
shr
dec
movb
xor
adc
decl
sbb
psraw
add
or
sub
push
inc
pop
or
push
inc
pop
jmp
mov
sbb
add
rcr
xchg
movw
and
jmp
add
jle
xchg
pop
mov
pop
and
movb
addps
xor
jmp
add
movups
mov
and
shl
jb
jmp
rolb
dec
movb
add
sbb
jmp
mov
punpckhwd
push
dec
pop
andps
add
sbb
and
movb
adc
or
push
inc
pop
add
movd
push
dec
pop
or
and
jp
orps
xor
rcl
paddsw
or
shl
movb
push
dec
pop
or
jmp
addl
daa
sub
adc
or
pandn
push
dec
pop
sub
movl
jmp
push
mov
pop
add
cmc
movb
and
jmp
or
add
sbb
push
inc
pop
jnp
psrad
or
jmp
ss
jge
je
movb
sbb
adc
mulps
sbb
psubusb
jno
or
sub
jge
or
jne
movl
packsswb
add
and
jmp
daa
dec
rcr
jmp
adc
jmp
or
adc
xor
movw
jb
sbb
and
add
psubusw
push
inc
pop
or
imul
adc
jmp
std
jne
adc
rol
and
push
xchg
pop
movl
shr
sub
jmp
shll
sbb
movb
adc
cmp
add
decl
ret
mov
jmp
add
sbb
jne
mov
rcl
je
pop
inc
pop
mov
cmpsl
les
aad
loopne
aad
loopne
pop
div
mov
fildll
xchg
cs
fistpll
scas
pop
mov
pop
btr
mov
cmpsb
xor
pop
dec
cli
mov
mov
mov
out
cmp
cli
mov
mov
in
mov
scas
push
loopne
aad
ja
cmp
mov
mov
xchg
pop
imull
out
js
mov
adc
scas
pop
mov
mov
imull
out
imul
mov
fstpl
dec
sbb
cmc
xor
pop
out
scas
ja
xor
mov
imull
push
pop
imul
mov
negb
aaa
adc
pop
inc
imul
mov
mov
lods
adc
pop
notl
jbe
push
sub
mov
mov
jle
negl
out
rcrb
sub
pop
fildll
xchg
mov
mov
mov
fistps
mov
mov
sahf
jo
cmpsl
pop
mov
push
pop
jne
mov
mov
negl
inc
or
dec
pop
lgs
mov
mov
or
push
sub
xchg
mov
mov
icebp
lcall
aad
loopne
aad
and
ret
mov
in
pushf
pop
sbb
cmpsl
xchg
mov
mov
imull
fucom
dec
cli
cmp
xor
mov
jmp
fiadds
test
cmp
xor
mov
mov
divl
sbb
iret
cmp
sarl
cmp
xchg
scas
sub
xchg
mull
xor
mov
xor
dec
xor
lahf
xchg
movsl
sub
push
sbb
adc
mov
dec
xor
out
movsl
dec
push
das
mov
mov
mull
cmp
mov
mov
daa
daa
mov
daa
daa
mov
out
dec
xor
jecxz
mov
jl
cmp
adc
arpl
mov
dec
pop
mov
jmp
xchg
dec
jge
gs
pop
mov
loopne
push
mov
xor
xchg
sbb
add
xchg
ret
push
mov
arpl
push
cmpsl
xchg
pop
test
mov
mov
mov
mov
mov
fwait
xor
mov
mov
cmp
mov
pop
into
xchg
out
es
out
dec
enter
imul
outsl
pushf
into
cmp
jmp
xchg
mov
dec
pushf
lea
ret
push
out
xor
mov
scas
xchg
mov
mov
mov
ret
pop
xchg
aad
pop
mov
pop
cmp
mov
pop
add
mov
mov
mov
ret
pop
xchg
aad
pop
mov
pop
sbb
in
popa
jo
lcall
jne
pop
fwait
call
mov
cwtl
out
mov
cmp
mov
xor
lahf
mov
jae
out
jae
cmp
xor
mov
sbb
mov
cmp
xor
mov
xchg
sbb
mov
cmp
mov
sub
pop
xor
xchg
xchg
lahf
mov
mov
cmp
ljmp
cmp
mov
mov
dec
ja
cmp
inc
pop
mov
sbb
mov
jle
negl
loopne
push
pop
mov
sbb
mov
popa
cmp
bound
mov
sbb
mov
mov
test
inc
or
sub
mov
mov
dec
inc
dec
or
sub
notl
sub
fnstenv
pop
fnstcw
sbb
pop
loope
lds
dec
fistpl
dec
rcrb
loope
lds
dec
fistpl
inc
fdivrs
fdivrs
data16
dec
lds
sub
jp
jp
jo
imul
lds
insb
mov
ret
jnp
inc
cltd
jnp
inc
mov
ret
jg
jb
pop
loope
rcrb
jns
dec
aam
fiadds
pop
clc
pop
ret
outsl
ret
jp
pop
rorb
fidivs
imul
lds
jno
inc
lds
pop
fidivs
jp
jo
dec
les
mov
mov
mov
mov
mov
mov
cmpsl
pop
mov
jnp
xchg
sub
mov
xchg
xorps
pop
mov
mov
add
add
int3
add
add
add
add
add
add
add
add
add
push
or
add
outsl
leave
cmpsb
insb
xorl
das
aas
or
decl
sbb
ss
dec
sub
jne
jns
ds
insl
add
ja
cmc
les
add
add
add
add
pushf
inc
push
icebp
mov
fld
out
in
jmp
in
sti
push
lcall
fndisi(8087
loope
mov
shll
and
mov
insb
pop
lret
pusha
loop
mov
nop
rol
inc
mov
dec
xchg
mov
dec
nop
add
add
dec
add
shrb
out
add
add
add
add
add
add
push
imul
add
xchg
add
add
imul
add
add
and
add
add
add
push
fidivs
add
add
add
add
add
add
pop
add
add
add
push
add
add
iret
pop
add
add
add
xchg
addl
add
adc
popf
add
add
in
adc
dec
add
add
cmpsb
add
add
sub
add
mov
jno
fdivrs
int3
add
add
add
add
add
add
jbe
outsl
test
add
fs
lcall
in
add
add
xor
add
add
sarl
adcb
ret
call
add
add
sbb
sbb
mov
add
shrb
out
pop
mov
mov
xor
sub
int3
aas
mov
scas
shr
and
sub
adc
pop
sub
insl
fstl
add
pop
jno
mov
or
hlt
mov
adc
pextrw
stos
movsb
xor
pusha
mov
adc
mov
into
push
mov
sub
shl
sub
xchg
in
mov
dec
add
xlat
dec
sub
sbb
and
mov
xor
pop
dec
xor
or
sbb
inc
pop
ljmp
data16
data16
push
popw
scas
pop
data16
fdivl
mov
pop
fsubp
mov
mov
pop
mov
xchg
jecxz
adcb
jge
inc
and
je
movsb
push
ss
lods
push
iret
cmp
mov
int
mov
sub
and
insb
pop
xor
sarl
jp
jg
jmp
into
jo
fcmove
cmc
aad
ficomps
sbb
loopne
fsubrs
xchg
ret
or
xchg
jbe
cltd
push
adc
lcall
inc
push
jns
gs
mov
loopne
jge
ja
adc
sub
outsl
mov
pop
cld
lcall
xchg
pop
ficoms
mov
push
adcl
lret
push
jmp
push
dec
loope
cmpsb
dec
insb
cmp
sub
cltd
sub
sub
push
sar
psllq
xor
inc
or
xchg
add
mov
inc
pop
loope
xor
call
cmpl
xor
jnp
xchg
cmp
xchg
insl
flds
jb
dec
das
inc
or
push
and
sbb
popf
sub
cmp
loope
dec
dec
xor
mov
xor
xchg
iret
fwait
shrl
mov
fisubl
sbb
cwtl
fwait
lahf
inc
cmp
mov
lcall
push
mov
js
testb
out
mov
sub
ljmp
rcll
mov
sub
lcall
or
mov
adc
into
mov
xor
cmp
daa
dec
dec
call
push
lods
add
aaa
adc
cmp
mov
mov
shlb
fldln2
and
call
inc
lods
js
and
out
sti
or
lahf
push
xor
add
clc
test
push
jmp
imul
hlt
sub
mov
dec
mov
jae
cmpsb
cmpsl
js
negb
adc
cmpsb
sbb
fldenv
mov
mov
mov
stos
or
mov
mov
mov
test
and
sub
cltd
adcl
cmp
xchg
outsb
rolb
push
je
inc
cwtl
addl
rorl
fcmovbe
add
pop
jecxz
fisttpl
sahf
shr
push
xor
xchg
inc
scas
iret
sahf
call
pop
std
lds
xlat
test
push
insb
mov
cmp
pop
cmpsb
sub
push
dec
arpl
movsb
imul
sbbl
mov
test
ds
addl
repz
in
test
jbe
mov
or
mov
dec
mov
push
xor
dec
shl
xor
add
lret
dec
insl
adc
out
mov
sbbb
lds
dec
add
add
adc
test
push
mov
sbbl
imul
sbb
lods
mov
dec
les
in
test
mov
dec
orb
scas
into
stc
xchg
pop
dec
fxch
mov
xchg
fwait
xor
xor
mov
mov
sub
mov
mov
mov
sbbb
dec
arpl
imul
leave
pop
mov
arpl
sbb
xor
pop
sub
mov
adc
pushf
dec
imul
mov
or
mov
hlt
jmp
mov
arpl
ret
fidivl
jne
xor
stc
jo
mov
sbb
ds
and
lret
cmpsb
pop
mov
cmp
mov
enter
sub
test
dec
dec
sahf
mov
inc
xor
setno
push
jmp
pop
push
aaa
ljmp
adcl
out
loope
jmp
pop
xor
lcall
dec
loop
js
jns
test
mov
pop
jmp
cmp
bnd
dec
es
xor
scas
sbbl
mov
mov
dec
inc
iret
scas
add
std
frstor
inc
mov
sub
rcrl
aaa
xor
cmp
xchg
popf
add
lea
scas
lret
xlat
jbe
repz
ja
and
sarb
mov
add
pop
dec
in
mov
lcall
xor
mov
xor
mov
sbb
cmp
ds
inc
add
pop
outsl
and
inc
dec
dec
mov
or
hlt
lods
repnz
ret
or
inc
mov
pusha
pop
jne
and
test
add
sar
fadds
aaa
inc
sub
outsb
mov
mov
sub
push
jp
popa
dec
in
js
hlt
ss
test
insb
pop
in
sahf
mov
jnp
xorl
mov
test
js
sub
enter
out
sbb
jmp
sbb
inc
int3
aaa
mov
inc
xchg
lea
movsl
sbb
xchg
jb
mov
cmp
cmp
andl
sub
outsl
lock
into
negl
lret
inc
cmp
jmp
iret
adc
fistpll
fwait
jae
aad
cwtl
adc
mov
mov
rolb
jbe
push
sarb
icebp
out
or
es
and
push
jg
sahf
push
insl
inc
mov
aas
pop
out
dec
data16
xor
mov
shr
mov
cmp
nop
xor
adc
cmc
fldt
aaa
mul
lahf
sub
pop
cmp
sub
xor
test
lcall
scas
fmuls
pop
in
js
push
xchg
and
repnz
pop
xor
imul
add
lret
outsb
mov
ds
dec
sbb
inc
sub
test
ljmp
popf
les
push
mov
mov
cmp
imul
arpl
call
add
cwtl
sub
sbb
cltd
dec
sar
repnz
int3
imul
into
nop
or
dec
jae
or
addr16
xor
pop
fwait
inc
jle
push
jp
xchg
jp
xchg
insb
mov
cld
mov
mov
test
push
sub
pushf
fstl
lods
jae
sub
icebp
loopne
in
sbb
add
pop
imul
sbb
mov
nop
lcall
das
push
cmp
mov
jp
lcall
sti
lods
sub
ljmp
movsb
sub
mov
sbb
cld
call
movsb
in
jns
push
mov
mulb
mov
popf
idivl
push
push
and
int3
orl
mov
mov
mov
push
add
mov
ljmp
call
lds
inc
adc
les
mov
cmpb
push
lret
test
add
out
sbb
test
out
js
into
jns
lods
inc
adc
xor
sub
pop
in
push
sub
test
inc
fsubl
clc
lods
lods
imul
mov
adc
and
mov
je
sub
or
std
dec
sbb
sbb
sub
push
leavew
xor
out
popa
dec
jmp
dec
outsl
xor
fisttpll
in
cmc
fistps
push
mov
lahf
jge
nop
scas
push
xchg
insl
mov
add
outsb
push
fiadds
insb
fmull
call
inc
or
addr16
daa
jle
sti
xor
pop
cmc
lret
clc
hlt
lret
leave
mov
jns
or
es
jae
jg
test
adc
xor
imul
mov
test
pop
jmp
xor
or
mov
adc
loope
jl
scas
scas
push
xlat
push
scas
ljmp
test
jns
fidivs
aas
scas
pop
jl
aam
push
andb
cmpsb
out
mov
outsb
loopne
clc
mov
add
lock
fistl
pop
adc
cli
cmpsb
jle
mov
stc
out
cmp
push
sub
xor
sbb
sbb
jne
lahf
ret
sub
cwtl
inc
pop
loope
inc
push
jge
pushl
dec
pop
xchg
sbb
and
je
fwait
iret
imul
xchg
inc
outsl
arpl
mov
push
sbb
xchg
and
mov
fsubrp
xor
idivb
std
mov
addb
push
cmpsb
dec
scas
xor
divb
sbb
ficoml
loope
cmp
lock
pusha
or
testb
jl
xchg
xchg
js
cmp
mov
outsl
mov
xorb
lcall
je
push
iret
cmp
cmp
clc
cmpsb
push
cmp
xchg
call
lret
ljmp
aas
shlb
mov
mov
ret
mov
add
fsubrl
cld
test
dec
push
xor
jns
mov
int
and
ja
add
pop
pushf
cli
orb
imul
adc
inc
mov
jb
add
push
loop
clc
mov
mov
iret
xor
popf
adc
dec
fistl
fsubrs
or
pop
sbb
sub
mov
sarb
cmp
nop
data16
xor
cli
jnp
add
test
mov
ja
jno
cmpsb
dec
scas
xor
cmp
mov
adc
push
lods
loope
sub
mov
or
sub
push
jmp
sbb
xor
push
pop
push
push
xchg
xchg
xor
shlb
ljmp
pop
std
cmpsb
out
cmp
mov
cmp
mov
mul
popa
repz
scas
mov
mov
jnp
or
test
je
movsl
cli
mov
iret
and
and
mov
mov
dec
mov
sbb
ficoml
lahf
xchg
test
inc
xchg
out
fcompl
jo
pushf
stc
pop
add
icebp
sub
cmp
lret
pop
add
dec
out
mov
lock
fisubs
lcall
insb
outsl
mov
or
pusha
xchg
call
cmp
jge
mov
push
ja
sub
ss
rorb
jb
jge
movsl
popa
xchg
jmp
jl
mov
or
sub
subb
cltd
mulb
adc
adc
xor
ss
lds
and
sbb
fisttps
out
mov
mov
aaa
cmpsl
lods
adc
mov
jp
jb
pop
xchg
imulb
push
jg
lret
xchg
lock
shll
icebp
and
out
cwtl
push
lea
nop
dec
mov
and
idiv
sub
xchg
mov
xchg
xorl
sahf
add
add
xor
xor
cmp
sub
retw
test
and
pop
ficomps
push
es
stos
adc
cmpsl
sar
xchg
sbb
scas
cltd
push
or
pushf
mov
pop
jb
mov
test
inc
pcmpgtd
les
mov
mov
aam
jnp
shl
push
punpckhwd
mov
xor
lods
jl
xor
jno
jb
pop
xchg
nop
js
pop
sub
loop
std
pop
in
cmp
mov
aam
ror
or
mov
mov
dec
mov
mov
ja
fnstcw
and
decb
sub
mov
dec
mov
in
pop
xchg
outsb
adc
jl
clc
push
shlb
ret
mov
cmpsl
jae
adc
icebp
sub
adc
mov
imul
shrd
ss
out
repz
jmp
cli
in
flds
mov
cmpsb
mov
push
dec
cmp
insb
stos
outsl
dec
out
mov
insl
testb
pop
mov
sub
jb
cmp
sahf
mov
xor
jmp
xchg
mov
mov
cmp
push
inc
jb
mov
out
in
sub
xchg
int3
je
mov
decl
call
jmp
jl
mov
or
xor
outsl
jp
mov
addr16
aad
mov
push
push
adc
jnp
cs
cs
sub
mov
fistpll
lret
add
jl,pt
shrb
sti
jg
enter
jns
xor
mov
pop
in
pop
cmc
clc
pop
xor
bnd
shrb
mov
into
in
sahf
or
mov
adc
sti
jp
lods
xchg
std
pusha
mov
cmp
jns
jne
bound
inc
ljmp
jg
xlat
inc
fsubrl
mov
jg
cmp
out
sbb
enter
adc
addb
rolb
xor
mov
and
or
sub
dec
sub
shlb
cs
or
js
ljmp
shl
inc
aam
jg
lret
pop
mov
add
int
addr16
push
in
iret
push
cwtl
hlt
or
das
int3
sbb
scas
pop
loopne
popf
aad
es
sbb
inc
push
sub
cmc
mov
jmp
pop
adc
add
or
mov
mov
push
mov
mov
push
sti
rorl
or
push
cmp
pop
inc
pop
jmp
sub
leave
push
and
and
mov
cmp
lea
mov
fidivrl
or
xlat
out
add
cli
inc
pop
cmp
sahf
xchg
push
dec
push
aaa
mov
push
inc
cwtl
jnp
lcall
cmp
mov
daa
outsl
movsb
shr
paddd
xchg
adcb
mov
scas
rol
push
or
shll
aas
push
jecxz
sub
xchg
nop
outsl
or
mov
cmp
inc
scas
mov
jecxz
sbb
std
fildll
push
or
mov
daa
sbb
iret
jae
arpl
jl
push
loope
push
add
adc
mov
jne
pushf
push
or
mov
out
mov
pop
fbstp
inc
mov
pop
pop
cmp
fcoml
iretw
xor
sub
mov
xor
das
sti
das
or
adcb
inc
loop
push
xchg
inc
mov
and
daa
out
icebp
loop
pop
lock
and
arpl
js
dec
jle
fstps
inc
ret
push
orb
jl
pop
push
jnp
add
mov
in
pop
lock
aad
xor
les
mov
xchg
push
imul
xor
inc
fistpl
sbb
sbb
mov
imul
dec
gs
mov
mov
inc
pop
push
mov
or
shrb
push
lret
fnstcw
jnp
inc
dec
in
movsl
push
nop
push
mov
inc
mov
adc
sbb
push
cmp
pop
fldcw
fwait
sub
push
push
lods
bound
mov
and
xchg
gs
mov
jmp
shll
and
mov
mov
jne
jmp
iret
mov
enter
pusha
dec
jno
adc
inc
mov
mov
sarl
rorb
call
rcrl
arpl
inc
ret
mov
out
sbb
fwait
mov
sbbb
movb
rcrl
popf
into
pusha
int3
push
int3
popa
into
lcall
ss
push
cmc
xor
inc
push
sbb
imul
mov
cmpb
rorl
lret
bound
shlb
add
push
pop
or
jg
pop
mov
lea
sub
dec
insb
push
push
sbb
mov
fidivrs
imull
xor
ds
out
xchg
dec
xchg
mov
test
and
xchg
xchg
ficomps
pop
sbb
cmp
sbb
iret
sub
push
outsl
mov
mov
or
cmp
js
add
daa
cmc
jb
mov
imul
mov
mov
loopne
or
leave
dec
imul
pop
or
push
push
in
jae
jp
test
cmp
xchg
sub
lahf
or
inc
cld
scas
jmp
mov
jnp
jle
xchg
cli
mov
lods
fdivrl
testb
hlt
stos
inc
add
arpl
insb
xor
xor
iret
idivb
jmp
pop
sahf
xor
aam
xchg
push
sbb
bound
jp
out
mov
or
jae
cmpsl
mov
nop
fucomi
jnp
xchg
movsb
dec
jp
int3
popa
and
stos
add
jp
push
in
fdivs
push
lret
lcall
add
in
aas
push
jmp
push
dec
fldl
push
pop
jmp
add
scas
leave
fnstenv
push
sbb
enter
mov
or
jl
pop
or
repz
repnz
mov
mov
clc
mov
sub
fwait
ret
xlat
lods
adcl
mov
fsts
das
stc
fbld
mov
adc
adc
xlat
int
add
int
pop
cmp
mov
test
rclb
dec
clc
dec
fsts
out
push
adc
jg
jp
test
push
dec
and
pop
xchg
std
inc
inc
jne
dec
idiv
or
push
xchg
test
lds
pop
imul
and
inc
mov
movsl
shll
repz
or
bnd
jg
mov
xchg
mov
and
lret
in
call
ds
pushf
dec
arpl
mov
cmp
sbb
sub
xchg
mov
cmpl
dec
faddl
js
pusha
push
sahf
sahf
fwait
pop
fwait
mov
int
push
and
test
subb
je
fimuls
push
inc
fs
inc
xor
cmp
adc
inc
mov
leave
enter
aad
or
sub
jnp
jbe
cmc
xchg
push
mov
inc
xchg
push
push
dec
jmp
orb
jp
mov
int3
cmc
or
push
into
imul
dec
fldenv
ret
jmp
mov
sarb
jae
sbb
sahf
xchg
inc
mov
push
or
jg
shlb
mov
sbb
mov
shrl
xchg
shlb
inc
cmp
fcomp
sbb
popa
mov
jbe
add
stos
jo
dec
stos
insl
cli
sti
sub
xchg
pop
in
shll
int
sub
aaa
dec
jbe
daa
xlat
mov
inc
sub
fwait
das
aad
cld
sub
je
pop
leave
mov
icebp
clc
xchg
pop
cmp
pop
idiv
rclb
subl
lods
addb
push
loope
or
add
out
xacquire
dec
mov
js
out
inc
mov
mov
je
test
push
mov
cmp
cmpl
and
js
lret
sbb
mov
fwait
scas
out
call
mov
push
cmpsb
mov
jbe
fld
fnstsw
push
sub
mov
rorl
fnsave
sbb
shll
jmp
xor
clc
bound
cmp
inc
inc
mov
imul
sbb
sbb
repnz
aad
aad
aam
pop
lds
test
cmc
mov
in
push
mov
sbb
add
push
adc
arpl
je
lods
stos
jnp
mov
addr16
xchg
mov
aaa
and
mov
int
test
lock
mov
or
out
pop
sbb
jl
fisttps
popa
ret
scas
mov
rclb
imul
test
ss
jecxz
movsb
push
cmpsb
lock
mov
dec
xlat
sub
daa
call
jno
jge
cltd
pop
rcll
xor
subl
jo
hlt
inc
lcall
xchg
ret
pop
cmp
jbe
lahf
adc
frstor
sti
jno
jecxz
cld
cmp
into
mov
jbe
rep
push
lahf
aad
insl
xchg
and
mov
sbb
dec
mov
sbb
pop
jns
cmp
sub
dec
jge
mov
jl
pushf
rcr
into
sub
fs
cmp
addr16
ficoms
idivb
jo
dec
pop
arpl
push
dec
push
movsb
xchg
icebp
dec
daa
jne
cltd
or
shl
or
pop
mov
aad
or
inc
pop
jns
jne
push
jne
fs
mov
outsb
addr16
mov
jp
sub
outsl
mov
outsl
out
ret
in
mov
dec
shll
notl
in
insw
mov
mov
fisttps
xchg
dec
das
fdiv
mov
mov
jg
popa
cld
dec
fwait
adc
or
pop
xchg
mov
cmc
push
dec
add
push
mov
cld
imul
out
stc
push
inc
or
idivb
dec
shrb
shl
xor
cld
xchg
aam
jnp
mov
cmpsl
or
ss
jae
lcall
adc
mov
cwtl
mov
jnp
sti
aas
std
cmp
dec
cld
mov
cltd
fidivl
mov
xlat
popa
sti
pop
or
mov
mov
lret
sbb
add
inc
pop
pusha
sub
sbb
sub
sbb
sub
roll
jno
add
cmp
aad
sbb
add
push
repz
dec
arpl
jbe
lods
mov
ss
xchg
cld
jle
andl
mov
cmp
add
mov
xor
sbb
loopne
int
push
dec
fisubrs
mov
notl
sbbb
fwait
push
jle
adc
sti
in
jbe
add
cs
jle
gs
fidivl
out
rcll
aad
pop
jnp
jl
aas
or
ret
sahf
shrb
mulb
ss
dec
in
shl
das
sbb
mov
jle
es
mov
inc
jmp
inc
and
call
shlb
xchg
push
pop
push
xchg
addr16
mov
dec
cmpsl
mulb
push
and
xor
test
roll
push
lret
imul
dec
and
leave
je
jge
ja
jge
mov
pop
xchg
pop
sub
mov
adcl
fs
notb
jmp
aam
inc
popa
adc
es
lret
add
adc
subl
in
push
stc
ds
jne
pushf
rcrl
lods
icebp
mov
xlat
mov
addr16
lods
out
inc
mov
aaa
xchg
mov
stos
xchg
nop
mov
xchg
stos
and
lret
push
jb
sbb
test
hlt
cli
cltd
repnz
push
loopne
popa
jbe
fimull
dec
inc
frstor
sub
dec
inc
fstpl
adc
xchg
and
cmp
cli
mov
je
inc
jnp
xchg
lock
cmpsl
push
test
xlat
mov
mov
mov
sbb
js
scas
sub
xchg
push
push
shll
mov
xchg
adc
fsubrp
int
adc
inc
push
leave
adc
inc
cmpsb
or
jl
sbb
shlb
mov
decb
jl
sahf
and
add
pop
mov
adc
inc
sahf
les
leave
repnz
jle
inc
mov
cmp
cmc
inc
pop
aas
jl
cmp
mov
inc
mov
push
mov
pusha
and
mov
sub
stc
daa
pusha
rclb
xchg
cld
mov
or
cltd
aam
mov
adc
lock
es
fs
jbe
loop
dec
rcrl
dec
shrb
add
xchg
inc
mov
lods
nop
into
mov
jns
popf
add
mov
test
mov
ljmp
or
cmp
xor
mov
sbb
pop
aam
call
call
enter
dec
dec
xchg
lods
icebp
sub
cmc
cltd
data16
punpckldq
cmc
mov
or
cwtl
push
mov
dec
lods
jg
pusha
daa
iret
incb
push
sbb
push
sbb
leave
gs
push
jae
mov
or
or
in
imul
cmpsl
mov
cld
inc
push
ficompl
test
fxch
xor
inc
push
fcmovne
cmp
add
mov
sub
cmc
jno
sub
insb
out
lea
clc
shlb
push
mov
nop
pop
xor
jb
jns
pop
xorb
and
in
add
fwait
icebp
fdivrs
pushf
push
ljmp
lret
or
xchg
mov
jecxz
sub
jge
cmp
inc
adc
xor
inc
mov
push
mov
aad
dec
outsl
lods
ljmp
xchg
push
sbb
cmpsl
adc
out
popf
aaa
jno
int
pop
lds
cmp
fiaddl
bound
cltd
loop
xchg
stc
addr16
sub
jl
jecxz
adc
push
jge
test
faddl
daa
dec
mov
addr16
lock
push
jns
add
int
enter
scas
scas
jbe
ret
fwait
pop
pop
mov
fwait
jnp
cmp
popa
cmp
cmp
out
push
movsl
pop
es
sbb
xchg
movsl
ret
pop
fsubr
loop
push
gs
xchg
sbb
mov
pop
xor
ret
or
mov
popa
test
jg
mov
add
lcall
jmp
mov
add
mov
xlat
loope
inc
pop
xchg
cld
add
icebp
pop
enter
jo
ja
shl
insl
lret
mov
add
jbe
pop
pop
ss
mov
mov
repnz
aam
pop
and
sbb
setns
push
adc
xor
loop
enter
dec
jle
cld
pop
das
in
jl
fucomi
enter
int
mov
ret
cltd
and
pushf
mov
or
mov
repnz
pop
xor
mov
out
jnp
addr16
add
sbb
stc
das
or
pop
mov
sub
xchg
in
pop
jg
jne
mov
or
mov
push
sub
mov
in
cmc
xor
js
adc
sub
or
out
iret
mov
inc
pop
imul
pop
mov
cmp
insl
adc
addr16
and
cmp
cmp
int
jns
fwait
test
aam
or
pusha
loope
or
cmp
add
pop
jo
jae
push
popf
or
in
inc
xchg
std
mov
add
cmp
push
mov
stos
imul
sahf
hlt
sbb
xor
lret
sub
dec
mov
fcompl
push
out
or
cs
scas
xchg
sete
xchg
pop
inc
jg
adc
out
xor
add
les
mov
jl
pop
lods
inc
pop
rorl
pop
cmpl
mov
xchg
int
add
nop
push
sbb
pop
stc
or
fstpt
adc
push
sub
stos
push
lds
cld
shll
and
mov
sbb
mov
mov
iret
shrb
lods
lcall
jmp
lods
outsl
mov
push
std
fisubrs
or
dec
or
sbb
roll
sbb
jnp
add
les
fwait
test
popf
out
sbb
add
fwait
inc
mov
loope
mov
and
out
mov
aam
cli
sarb
rolb
jp
mov
sahf
pop
into
inc
mov
pop
std
jb
mov
xchg
xor
sbb
out
mov
in
shll
std
sahf
repz
ja
cmc
xchg
insl
addl
out
xor
ret
cmp
mov
icebp
cmpsl
insl
dec
xchg
inc
stos
pop
mov
mov
cmc
mov
cmpsl
dec
xor
add
ss
leave
xchg
adcb
mov
es
sahf
ret
sti
rclb
pop
mov
add
jno
add
xor
sbb
mov
popf
mov
test
cmpsb
test
pop
iret
inc
loopne
sbb
or
and
movsl
mov
xchg
xorl
jp
pop
mov
out
js
adc
fidivrl
cltd
xchg
outsb
jecxz
push
lds
xchg
xchg
loope
out
jle
mov
xchg
jo
fwait
add
jecxz
inc
fdivrl
clc
mov
enter
jecxz
xchg
sbb
enter
push
sub
shrl
sarb
faddl
std
push
insb
aas
daa
in
mov
mov
pusha
test
cmc
rolb
lcall
mov
bound
iret
cwtl
or
js
aam
xchg
mov
in
jnp
jns
icebp
sbb
sub
rcl
add
xor
or
push
sbb
inc
daa
cwtl
adc
sti
pusha
jns
rolb
push
xor
push
fsubrs
fdivrl
lcall
or
jmp
or
leave
inc
adc
push
orl
mov
jp
insb
mov
sbb
out
or
out
test
push
inc
jae
repz
push
lahf
dec
jecxz
rorb
jg
cmp
in
out
lods
aad
out
repz
jnp
add
mov
add
jnp
das
push
jbe
jecxz
xchg
sbb
mov
push
arpl
lcall
dec
dec
push
cwtl
cwtl
shl
and
dec
cmp
sbb
shl
fdivrl
lret
addr16
inc
out
cmpsl
xor
dec
mov
and
loope
xchg
les
je
inc
jnp
add
call
lods
aam
ret
pop
jnp
int3
sbb
ret
sbb
test
cltd
aam
cmpsl
dec
lahf
add
lods
lret
push
and
sahf
stos
push
pop
pushf
frstor
dec
mov
mov
mov
inc
pop
push
cld
sub
xor
icebp
jecxz
insl
imul
rorb
lock
or
push
add
aam
xor
cli
cmp
in
xor
adc
push
test
aad
lret
mov
cld
lahf
sbb
sti
add
dec
loopne
jnp
inc
stos
sti
push
mov
sub
out
xor
jmp
xchg
ljmp
jbe
xor
pushf
movsl
cmp
rol
lock
push
movsl
imul
mov
cld
mov
sbb
clc
stos
jb
lcall
sti
cmp
pop
push
push
jo
dec
mov
out
out
insl
sbb
mov
adc
push
sarl
jmp
sbb
sbb
fdivrl
mov
mov
int3
loop
push
cld
pop
inc
movsb
rorl
mov
loope
cmp
xor
pop
and
mov
sub
or
jb
add
gs
loopne
pop
or
jb
aad
jecxz
xor
pushl
clc
pusha
test
sub
push
push
cmp
lret
adc
jmp
mov
stc
ret
push
mov
les
movsb
jge
mov
mov
pop
jnp
mov
push
popa
and
jge
out
aad
in
add
outsb
mov
shlb
mov
push
cmp
cmp
cld
jae
fdivrs
sub
call
mov
or
in
sub
and
pop
jae
xchg
mov
adc
popf
cmp
mov
sub
popf
adc
psubsb
fsubl
mov
push
mov
push
push
and
outsl
sbb
imul
and
pop
sti
lcall
cmpsb
scas
mov
push
sbb
add
std
add
sub
repz
push
add
in
mov
xor
lahf
mov
and
stos
pop
and
xchg
mov
sub
add
push
iret
dec
ljmp
leave
fs
adc
or
loopne
shll
sarl
cmp
jb
cmp
xor
testb
mov
fwait
cmc
push
shrb
jge
nop
aad
imul
jp
test
xchg
ret
sbb
push
or
mov
sti
out
icebp
jg
rcr
sbb
dec
add
cmpb
sub
push
fnstsw
lea
xchg
ret
ljmp
in
sbb
mov
push
adc
mov
inc
dec
ror
add
add
or
and
in
mov
ret
and
out
aas
xchg
pop
lahf
adc
jno
sub
into
les
xchg
push
or
mov
fnsave
out
sbb
negb
aas
out
xchg
call
jmp
sbb
push
xlat
repnz
inc
mov
mov
lret
jno
jp
out
inc
rolb
mov
jo
sbb
xor
jbe
insb
sub
hlt
add
shll
adc
mov
or
xorb
sub
jno
cmc
cmpsl
dec
push
daa
out
pusha
jecxz
cmpsl
dec
push
aas
mov
mov
imul
add
testb
pushf
ret
fisttpl
test
mov
in
cmp
push
insl
or
mov
sub
adc
push
stos
rorl
jmp
mov
hlt
mov
mov
or
fsubl
aaa
mov
call
int3
popa
and
lret
mov
idivb
stos
xchg
fcomi
mov
jl
jo
into
sub
push
cmpsl
xchg
cld
aam
aas
or
lcall
cmp
or
push
mov
lahf
dec
dec
push
in
or
hlt
xor
test
cli
xchg
cmp
aad
scas
push
dec
ds
xor
test
shlb
stc
fs
sub
sbb
fsub
sbb
test
in
xchg
or
add
push
inc
inc
add
push
xchg
stos
out
mov
aam
sub
push
and
and
or
in
adc
add
push
jns
inc
cmp
sub
dec
and
outsl
test
bound
and
jg
dec
mov
xchg
xor
and
out
pop
push
mov
rcll
cmp
mov
push
fs
std
stc
pop
xor
sbb
pop
push
pop
out
fs
repz
daa
in
adc
inc
jge
xchg
fiadds
sbb
mov
popf
stos
inc
scas
movsl
push
arpl
ret
inc
lock
cmp
jl
pusha
push
pop
sub
xchg
sub
xchg
cmp
mov
xchg
cmp
rolb
stos
push
push
cmp
stos
ja
xchg
mov
dec
xor
pop
cmpsl
push
push
push
aam
inc
daa
push
imul
mov
add
cmp
mov
sbb
dec
inc
test
dec
ljmp
divb
pop
rcrb
lock
push
lock
mov
int3
fimuls
cmpsl
fbstp
xchg
inc
xchg
cmp
dec
mov
inc
adc
mov
jp
in
ret
or
icebp
rcrb
jmp
jp
fcmovnu
popf
cmp
xchg
cmpsb
pop
rclb
rorb
and
mov
lock
cmp
leave
std
clc
negb
mov
mov
lds
imull
fimuls
mov
inc
xchg
fnstenv
arpl
mov
fisubl
enter
push
pop
popl
push
imul
cmp
rclb
cmpsl
push
xor
adc
sbb
pop
pusha
cld
xor
fdivl
stos
jmp
inc
mov
imul
mov
js
das
lds
mov
popf
out
ja
pop
dec
mov
iret
out
shrl
mov
jge
sub
push
sbb
push
dec
call
cltd
stos
mov
adc
cli
xchg
mov
inc
repnz
loope
in
imul
hlt
cmc
ljmp
insl
stos
sub
push
mov
faddl
mov
lahf
aas
into
fdivrs
xchg
jg
mov
pop
subb
jecxz
push
xchg
adc
lock
ss
enter
enter
ds
and
ret
xor
push
test
dec
cltd
aam
sub
and
pop
cltd
add
or
filds
fimull
cmp
push
push
subb
jne
cmp
movsb
pop
subl
sti
mov
add
and
xchg
push
jo
mov
outsl
mov
xchg
xor
xor
aam
mov
xchg
mul
mov
jmp
ljmp
add
add
test
addr16
data16
cmp
mov
aad
orb
xor
jo
cli
push
cmp
and
js
jmp
pusha
stos
pop
inc
mov
gs
mov
and
pop
clc
movsb
fnstsw
gs
ret
int
mov
inc
sbb
jg
cmp
adc
incb
int3
cmp
xchg
xchg
inc
pop
pop
dec
xchg
aaa
push
sub
cmc
jo
mov
add
pusha
loopne
arpl
and
shlb
out
push
testb
imul
outsl
cmpsl
out
int
popf
fistps
fimull
inc
add
repnz
loopne,pt
jmp
mov
iret
jb
sbb
lds
lock
faddp
pop
dec
imul
pop
shll
jbe
adc
pop
mov
lea
mov
fsubr
or
pop
inc
std
fwait
jmp
cmpsl
jecxz
mov
stos
rolb
pop
inc
bound
and
movsl
cmp
mov
mov
addr16
jl
mov
in
int3
xlat
test
loop
pop
iret
push
mov
xchg
inc
push
lds
enter
cli
mov
push
xchg
lcall
jb
pop
ja
pop
ret
inc
cmc
mov
ficomps
ret
sahf
add
inc
dec
lds
mov
int
mov
mov
cwtl
mov
bound
inc
add
aam
adc
sbb
es
roll
dec
nop
int
xor
insb
dec
loop
js
sub
mov
jae
jns
jns
xor
sub
mov
mov
xor
mov
or
fmull
push
dec
imul
sub
mov
enter
mov
iret
xchg
ss
sub
cmp
jns
pop
sahf
push
pop
lret
sbb
fistpl
test
inc
lret
stos
sarb
test
fisttpl
dec
cmp
mov
xor
scas
or
push
jbe
rcrb
enter
add
xchg
jns
jge
cli
xor
add
mov
rcr
popfw
fsubp
enter
sub
repz
sti
or
popf
clc
xor
xor
sub
push
cmc
gs
sbb
jns
imul
mov
xchg
add
add
incl
xor
push
cmp
jge
xor
pusha
fildll
rorl
insb
mov
pop
cwtl
add
mov
scas
jne
jp
xor
insb
and
dec
ja
cmp
mov
mov
inc
cs
sub
roll
pop
sub
cmp
pop
add
popa
aad
pop
cltd
stos
into
jecxz
fs
into
sbb
mov
mov
fstpl
mov
or
jno
subb
sbb
sub
out
push
mov
mov
pop
pop
cmp
int
cmp
xor
push
and
jbe
pop
lea
push
xchg
popw
and
or
insl
cld
adc
aam
aam
rolb
aas
xor
sarl
push
shl
mov
push
test
push
rolb
data16
sbbb
hlt
push
jge
mov
outsb
xor
fcmovnu
push
sbb
nop
sbb
repnz
cld
sub
cmp
aad
jnp
inc
divb
fsubs
push
mov
push
sbb
ret
add
incl
mov
adc
sub
mov
insb
adc
sbb
rcrl
ss
sti
insb
xchg
lcall
inc
inc
xor
sahf
movsl
lret
xchg
in
test
mov
sub
mov
cmp
xchg
fs
orl
mov
push
jecxz
mov
cmp
into
or
fidivrs
out
and
xchg
aaa
pop
ficomps
add
mov
push
into
aam
into
or
addr16
xor
in
or
pop
mov
mov
jecxz
loopne
ljmp
mov
push
jo
add
push
testb
test
jl
mov
mov
andl
mov
lds
mov
sbb
jmp
adc
pop
es
sahf
jl
sub
out
rcrb
daa
inc
stos
jle
out
sti
stos
cmc
adc
shr
in
insb
push
adc
add
mov
mov
xchg
insb
mov
sub
mov
testb
fidivl
mov
cmp
jmp
aaa
mov
add
jnp
pop
shr
addr16
xor
arpl
lahf
and
stc
jnp
push
cwtl
fnstsw
jle
xchg
pop
push
shll
or
add
mov
jnp
cmpsb
ds
pop
jp
inc
jnp
mov
in
test
fwait
cltd
mov
in
andb
scas
sar
sub
leave
cltd
cmp
js
push
iret
xor
enter
bound
adc
std
dec
cmp
pop
or
cmp
xchg
dec
and
xor
mov
push
mull
cld
dec
dec
push
mov
add
jp
loope
lahf
mov
mov
xor
cmp
add
pop
mov
fisubrs
aaa
jae
dec
and
cltd
inc
mov
mov
in
xchg
push
xlat
sbb
cmp
cmp
xchg
mov
mov
in
arpl
inc
jl
fwait
xor
mov
aas
fimull
and
mov
inc
mov
sub
xchg
pop
or
insl
cld
adc
movl
aad
lds
ljmp
enter
divb
jp
out
xchg
pop
int
xchg
sub
jge
ds
cmp
mov
loope
mov
jae
jmp
mov
xor
push
aas
mov
ret
mov
jge
inc
rcll
movsl
icebp
notb
and
pop
insb
rorb
sub
jle
sub
push
lret
insb
dec
sbb
insb
pushf
dec
invd
fwait
or
int
or
and
jecxz
repz
rclb
mov
adc
ss
mov
fs
test
cmp
and
frstor
popf
enter
push
jmp
or
and
cmp
ss
push
out
cmp
je
sub
in
int
int3
popf
add
into
test
daa
adc
xchg
dec
pop
and
mov
nop
xchg
insb
fwait
push
cmp
mulb
xorb
sbb
shll
sbb
fchs
cmpsb
rcrb
xchg
ds
addr16
repz
mov
les
cwtl
test
in
jl
xor
in
adc
push
test
jmp
iret
adc
dec
nop
or
pop
out
inc
dec
xchg
cmpsl
aad
das
imul
arpl
nop
pop
shrb
sahf
cmc
dec
outsb
push
sbb
and
and
stos
xchg
xor
insb
pop
or
fstps
mov
cmpsb
push
sbb
and
inc
lcall
pop
repz
jno
int3
and
int3
xchg
mov
push
inc
mov
lret
lock
cmp
pop
and
sbbb
icebp
ljmp
iret
jae
mov
lods
xchg
push
xor
sbb
leave
out
fwait
sbb
xchg
das
xor
and
or
lahf
inc
xorl
add
repnz
push
nop
mov
ja
ret
xchg
rorb
insb
loope
out
jno
adc
imul
fisttpl
add
pop
mov
stos
xchg
or
int3
mov
popl
xchg
and
mov
sub
mov
into
sub
leave
and
jecxz
xchg
lea
or
lret
pop
inc
mov
into
test
test
fidivl
ret
loopne
and
into
pop
mov
xor
out
iret
rcrl
icebp
adc
mov
subb
sub
xchg
mov
jne
sbb
mov
cmpsb
push
mov
add
popa
pop
out
pop
inc
js
nop
ja
es
cmp
mov
xchg
cmpb
xchg
inc
sbb
pop
xchg
icebp
filds
loope
daa
test
outsl
insb
into
cmp
repnz
and
lds
fstpl
jle
outsb
fisubs
and
dec
jne
push
inc
jbe
enter
xor
ss
xchg
or
lahf
mov
jno
lret
push
inc
loop
xor
scas
daa
add
inc
icebp
mov
mov
xor
sub
sbb
loopne
enter
or
mov
lret
loop
or
test
leave
pop
dec
mov
sub
cmpsb
test
xchg
mov
fst
jbe
push
rsqrtps
ret
mov
outsl
or
mov
inc
test
insl
pop
xchg
sahf
or
fadds
stos
stos
es
push
sbb
adc
test
lcall
cmp
enter
rsm
in
cmpsb
imul
je
xor
cmp
jle
push
adc
pop
mov
push
pusha
pop
sbb
std
inc
inc
add
mov
mov
fidivrl
sbb
daa
and
cmc
inc
pop
sti
sub
cmp
sbb
test
xor
sbb
dec
movsl
popf
mov
mov
fmul
cmp
pop
xor
jge
mov
sub
mov
int3
and
dec
inc
shlb
pop
adc
cs
movsb
or
arpl
mov
movsl
sbb
inc
mov
mov
and
mov
push
lods
mov
scas
pop
sub
int
cmp
cmp
daa
outsl
xchg
sti
mov
cs
clc
fstpl
xor
lret
pop
repnz
insl
insb
add
push
mov
call
mov
or
mov
mov
ret
sub
cmp
adcb
fld
mov
popa
cmp
push
add
cmp
fsts
inc
cmc
mov
and
insb
mov
fdivrs
sbb
les
call
pop
xor
in
ret
in
fcoms
aaa
inc
inc
dec
xor
or
adc
sbb
push
frstor
mov
cs
mov
jge
mov
int
adc
xor
pop
push
in
shl
in
movsl
mov
or
push
jb
mov
in
jne
int3
adc
loopne
sub
shr
or
inc
in
arpl
xor
mov
jle
aad
xor
rorl
sbb
cli
mov
es
inc
sbb
xchg
jmp
jae
cli
decl
popf
xor
push
or
fnstsw
pop
push
xor
sbb
adc
mov
adc
xchg
push
fnsave
mov
jge
sbb
mov
adc
xor
or
and
pop
cwtl
cltd
es
or
inc
ret
inc
arpl
dec
push
je
add
stos
bound
push
in
mov
shll
xchg
dec
inc
mov
dec
je
into
movsb
fstps
pop
jns
orb
jmp
add
adc
int
add
push
mov
jl
dec
sahf
movsl
mov
andb
imul
popa
mov
flds
mov
push
adc
sub
adc
fs
test
test
adc
lods
cmp
addl
xor
das
mov
and
or
cwtl
sub
mov
icebp
ret
fwait
outsl
sbb
sbb
xlat
jecxz
xchg
out
xchg
test
daa
inc
repz
jg
push
das
call
or
dec
mov
xor
shr
imul
cld
add
mov
mov
mov
inc
add
shlb
cltd
mov
or
icebp
pop
mov
mov
sub
cmpl
push
cmp
lret
mov
lret
fs
sub
mov
imul
imul
and
fcompl
in
pop
arpl
adc
xor
dec
jne
and
mov
lahf
pop
pop
cmp
sbb
fmuls
mov
dec
stos
sti
and
inc
lea
mov
push
mov
pop
mov
pop
inc
push
shll
insl
or
adc
xor
pop
outsb
cli
mov
mov
mov
xor
int3
xor
adc
push
leave
xlat
xor
sti
in
inc
movsl
lcall
sbb
push
and
sti
adc
cld
shrl
or
lods
and
adc
jb
xor
loope
and
leave
xchg
lret
dec
daa
jno
or
xor
imul
out
lock
sub
aaa
cmp
cltd
enter
push
xor
fidivs
sub
xchg
sub
inc
rcl
dec
inc
xchg
movsb
sbbb
int3
push
push
out
push
adc
or
test
push
xlat
shrb
fdivs
fidivs
and
xlat
jo
aaa
ds
mov
pop
lahf
leave
pop
lahf
imul
or
pop
popf
int
inc
jg
es
mov
push
pop
fsubr
adc
sbb
adc
scas
dec
pop
in
cmpsl
std
dec
lock
mov
jp
jge
xchg
and
lds
xchg
xor
cmp
movsb
sub
stos
js
stc
decb
mov
cmp
dec
ja
push
fxch
ret
lods
cwtl
test
rclb
popf
push
inc
ret
cmp
mov
out
and
inc
mov
push
mov
movl
sub
jmp
cmpsb
cwtl
psrld
in
loopne
fs
mov
sub
xlat
iret
popa
roll
fldt
fisttpll
loopne
push
andl
arpl
xor
pop
add
aad
xchg
idivb
dec
int3
sbb
mov
fisttpl
mov
ljmp
fbld
push
pop
add
cmc
pusha
adc
lcall
repz
sbb
pop
and
jo
mov
pop
push
jnp
jp
xchg
mov
test
out
cwtl
mov
ds
dec
ret
sbb
cmpsl
dec
jae
sbb
rcr
out
sub
stos
call
repnz
or
insb
scas
pop
bound
pop
fisttpll
pop
pushl
jg
insb
pushf
push
and
outsb
mov
mov
sub
push
in
push
nop
fdivl
es
adc
subl
mov
mov
xchg
movzwl
negb
cwtl
cmp
inc
cmc
int3
sbb
mov
mov
mov
bnd
pop
or
mov
mov
add
shl
dec
fildll
sahf
ss
or
int3
dec
loop
sub
mov
cmp
cmpsb
and
cmpsl
inc
lds
xchg
lods
lahf
insl
adc
or
lock
aas
cmp
fidivs
shlb
jbe
sub
jg
mov
add
sbb
cmp
cmp
xor
mov
stc
imul
roll
repz
mov
adc
fsubrs
repz
cmp
subb
add
sbb
out
insb
cmpsl
jnp
xor
lret
mov
jnp
cltd
aam
or
ljmp
inc
xor
insl
lret
js
pop
pop
add
iret
pusha
test
cwtl
xchg
jnp
shr
imul
inc
test
fwait
jl
ds
inc
dec
mov
popf
and
pop
aas
jge
pop
or
push
inc
xor
mov
loop
es
aad
adc
leave
or
pop
push
loope
dec
stos
mov
mov
jecxz
mov
or
and
pop
daa
or
sub
jp
stos
fnstsw
inc
mov
js
pop
jp
add
jno
push
movsl
xlat
add
lods
xor
int
pop
cmp
mov
push
cmp
cmpl
int3
sub
xlat
cs
jp
lcall
dec
push
aas
xor
xchg
pop
jmp
mov
inc
lods
or
fs
bnd
dec
and
out
adc
jge
sub
pop
in
outsb
mov
inc
and
movsb
imul
sub
ja
test
lcall
sarl
fsub
jecxz
mov
imul
in
mov
in
sub
jmp
sbbb
jae
mov
mov
push
mov
movsb
mov
pop
xchg
and
inc
sub
cmp
cmp
push
mov
mulb
sbb
dec
test
outsl
std
sub
icebp
das
and
mov
and
dec
mov
push
cmp
sbb
xor
xchg
repnz
add
into
out
cmp
mov
mov
aad
add
daa
loope
add
aad
adc
push
pop
add
loop
insb
fsubr
dec
pop
add
dec
scas
jl
or
lahf
or
pop
bound
jp
add
das
xchg
jb
push
sub
je
lea
cli
pop
cmpsb
lcall
xor
inc
xchg
add
clc
inc
arpl
add
cmp
xor
push
stc
mov
add
cmp
mov
and
jae
xor
push
pusha
inc
leave
xor
sahf
ja
push
fwait
mov
xlat
dec
addr16
push
leave
or
jb
movb
jb
fnsave
sub
push
enter
std
mov
mov
sbb
mov
mov
jo
stos
scas
loopne
dec
pop
lcall
cmpsb
in
aaa
mov
ret
and
scas
leave
stos
test
xchg
jp
stos
lods
lret
mov
int3
xchg
test
popf
pop
and
dec
test
adc
xor
out
outsb
mov
add
mov
cli
push
lret
call
xor
rcrb
scas
sbb
sarl
cld
mov
mov
std
int3
or
inc
mov
iret
leave
xor
xor
add
and
push
push
lock
push
test
adc
lcall
divb
jns
mov
int3
and
jo
push
or
or
inc
mov
push
or
and
aas
adc
inc
lods
out
jb
and
xchg
test
add
std
imul
or
add
mov
adc
and
push
movsb
dec
pop
int3
add
mov
xchg
fdivrs
movsb
cmp
inc
inc
mov
nop
rcll
aam
sbb
dec
shr
jle
shr
in
inc
and
sub
aaa
outsl
pop
sub
adc
arpl
pushw
xchg
shll
pop
mov
jg
pop
gs
dec
decb
cmp
or
addr16
pop
lock
mov
sahf
fmulp
enter
sub
cmpsb
lods
nop
rorl
sbb
outsb
ja
mov
mov
cli
cld
mov
or
popa
inc
es
xchg
stos
adc
dec
call
test
dec
xchg
inc
mov
sahf
cmp
add
inc
pop
scas
cmp
cmp
lock
jl
or
mov
nop
xchg
test
add
lea
cmp
xchg
mov
jle
sbb
js
and
push
fisubs
aad
push
push
dec
fwait
std
sahf
stos
aam
int3
jge
cmp
and
js
and
cmp
adc
sbb
ret
xchg
mov
push
lods
cmp
pop
inc
inc
fildll
bound
test
clc
loop
adc
out
aas
and
test
mov
popa
test
das
or
xchg
sub
cmp
push
push
mov
stos
out
pop
lret
outsb
mov
mov
add
mov
mov
cmc
push
mov
jmp
icebp
testl
sbb
xchg
push
dec
xchg
je
push
sahf
mov
popf
sarb
cli
mov
ljmp
movsb
dec
pop
fwait
or
loope
mov
adc
xchg
xchg
in
divb
and
push
test
bound
sbb
js
je
sbb
js
cmp
mov
jb
inc
scas
add
sub
aas
aam
inc
sbb
aam
add
push
mov
dec
test
xor
mov
pop
and
mov
cmpsb
int3
jmp
fldenv
jl
je
mov
clc
insb
icebp
daa
mov
pusha
push
or
loope
loope
repz
and
clc
or
je
data16
frstor
addb
inc
scas
fs
lcall
dec
movsl
mov
fdivl
xchg
decb
mov
mov
jmp
das
mov
addr16
fisubl
sbb
fstps
and
push
xchg
inc
xor
lahf
cmp
jnp
add
addr16
cmp
or
lret
seto
mov
and
test
adc
dec
gs
or
jle
cmp
icebp
ds
iret
outsl
xchg
mov
aad
inc
mov
add
addr16
lods
pop
popa
insl
mov
cmp
and
imul
cs
je
xor
lock
cmpsb
int3
xchg
imul
addb
mov
lret
pop
and
or
mov
mov
xor
fildll
adc
mov
fcmove
or
jb
pop
aad
and
bnd
jle
mov
in
push
popa
and
jno
ljmp
clc
repz
add
sarb
clc
in
mov
dec
mov
jle
cs
lahf
divb
dec
ds
inc
iret
cmp
and
jmp
pushf
mov
mov
ds
mov
shll
sarl
or
mov
seto
cmp
xchg
mov
pop
add
pop
jl
cli
and
mov
push
or
and
adc
in
xor
xlat
into
icebp
cmp
stos
mov
icebp
and
xchg
fstpl
or
test
jnp
sbb
jp
imul
sbb
daa
xchg
xchg
push
loope
jae
lods
dec
or
lahf
pop
popa
jno
gs
dec
shlb
xor
ja
cmp
rcll
std
std
cli
stos
in
or
ds
dec
sti
xchg
adc
in
outsl
mov
push
ljmp
sbbb
cmp
mov
xor
cltd
dec
je
test
jno
int3
lock
and
lods
or
in
les
into
gs
mov
mov
mov
adc
jecxz
leave
shrb
add
sar
push
out
push
dec
ret
mov
cmp
sti
aas
xchg
pop
nop
pop
and
xchg
inc
jg
mov
repz
and
add
mov
lods
jo
push
jno
xor
jg
testl
mov
notb
adc
jne
or
rcrl
fisubl
sbb
add
push
int
jno
pusha
mov
and
jmp
jb
mov
lahf
arpl
cmp
xorl
cmpsl
dec
mov
outsl
lock
jg
jmp
push
es
pop
adc
dec
lods
mov
xchg
loop
imul
xchg
ljmp
sbb
int3
sbb
lock
cld
std
dec
lock
xor
outsb
sub
mov
loopne
pop
jb
test
sbb
ja
sub
rclb
int3
mov
fisubl
and
jge
ret
add
leave
jb
xor
in
cmp
test
bound
and
lods
pop
and
mov
or
andb
mov
dec
push
les
push
insl
pop
out
rolb
jg
pop
inc
rorl
arpl
fsubrs
pop
adc
out
sbb
mov
aas
fdivs
fcoms
sbb
lcall
mov
adc
bound
inc
aam
and
push
sahf
shlb
jp
inc
dec
ret
std
addr16
mov
sahf
or
dec
cmp
mov
add
iret
cmp
xlat
add
test
xchg
xor
imul
adc
imul
xchg
sahf
mov
push
pusha
pushf
aaa
loopne
mov
mov
inc
mov
out
movsl
add
pop
push
inc
pusha
gs
mov
xchg
or
movsl
cmpsl
cmp
sub
or
sub
stos
pop
mov
adc
cmp
or
mov
sbb
orb
in
mov
mov
imul
lods
jno
push
and
loop
adc
cwtl
ror
mov
mov
sub
call
stos
inc
dec
mov
cltd
fmuls
jns
sub
xchg
and
orl
mov
sahf
in
call
add
into
sbb
nop
jns
cs
push
xor
inc
and
and
icebp
repz
cli
popf
or
pop
jmp
in
testl
jo
adc
xor
pop
test
sbb
test
loopne
push
cld
push
dec
and
xchg
in
add
dec
jg
cwtl
mov
add
es
fwait
negl
cmp
fsubr
ja
dec
aas
imul
fwait
pop
jp
fs
fstpl
in
xchg
sub
divl
push
ret
test
jle
fs
ljmp
fwait
mov
pop
and
mov
out
andl
lods
xor
vprotw
lock
fwait
ror
faddl
sarl
sub
or
lret
cmpsl
xchg
push
and
mov
fidivrl
xchg
pop
int3
push
xor
mov
icebp
imul
aaa
push
jg
xor
xlat
cmp
jp,pn
adc
inc
leave
lock
add
mov
mov
pop
mov
addr16
inc
mov
aad
ror
jae
add
push
cmc
cmp
imul
stos
jl
stos
out
add
sbb
mov
jp
xchg
sbb
js
xchg
dec
es
fucomp
jne
xor
insb
or
mov
mov
mov
push
mov
push
cltd
sub
jle
push
pop
dec
add
sub
test
test
scas
aas
pusha
ret
stos
push
fadd
xor
sub
stos
ss
or
adc
push
xor
daa
mov
xor
test
clc
xchg
push
mov
mov
inc
fucomip
xchg
es
nop
sub
lahf
pusha
cwtl
in
clc
adc
jno
jnp
fcoml
in
popf
out
jp
mov
inc
std
outsb
sub
fdivs
push
divl
jbe
mov
test
bound
div
lock
lea
adc
add
je
add
sbb
std
test
out
sub
iretw
and
icebp
cmp
fcomps
xchg
out
mov
push
scas
insb
xchg
push
shll
push
jnp
push
jae
dec
xchg
inc
jae
mov
adc
cwtl
mull
std
sub
xorl
and
iret
sbb
int
xlat
dec
cmp
mov
jns
lods
jae
cmp
inc
cmp
inc
add
andb
push
sub
js
mov
loope
mov
mov
or
scas
cmp
jbe
in
int
lret
xchg
mov
jmp
movsb
jge
mov
test
into
mov
dec
push
mov
mov
xor
jae
add
mov
mov
popf
and
mov
or
sub
int3
leave
in
cmpsb
stos
in
mov
or
jge
mov
int
lods
inc
aaa
hlt
adc
mov
inc
in
sahf
repnz
mov
mov
adc
sahf
mov
rol
shl
xor
pop
mov
adc
push
cmc
es
shl
int3
mov
bound
or
movsl
and
dec
fmulp
adc
jg
sub
rclb
mov
dec
aam
out
shrl
loope
fsubl
cmp
int
sub
dec
mov
pop
aaa
xchg
push
test
mov
mov
sahf
int
lods
cmp
sarl
add
test
jle
cmp
lea
shll
sbb
mov
js
jne
sub
bswap
mov
sar
sub
andl
jl
xchg
jmp
std
jnp
fs
shrb
sub
aad
push
out
xor
xor
nop
dec
in
sub
or
jge
outsb
dec
cmpsl
ss
rclb
inc
test
lock
cmp
out
sbb
shr
mov
pushf
stos
iret
mov
ds
cmp
sbb
insb
mov
vfnmsub132ss
and
sti
push
add
mov
sub
xchg
insb
and
aaa
pop
mov
push
pop
mov
add
out
sub
inc
in
in
mov
loopne
les
inc
fdivl
js
mov
cli
mov
fnstsw
ss
jno
jbe
xor
mov
pushf
push
arpl
adc
cmpsl
ret
leave
cmpb
popa
or
cltd
inc
fidivrl
inc
lcall
mov
pop
je
scas
lcall
push
test
mov
cmp
sarl
mov
sub
xor
inc
fsubl
dec
stos
xor
adc
pop
test
imul
mov
jmp
cmp
push
dec
sbb
clc
ljmp
fwait
mov
and
aad
cmp
push
jle
push
stc
push
pop
jmp
mov
sbb
rcrl
hlt
pop
sbb
icebp
nop
xor
mov
mov
and
pop
mov
subb
and
mov
dec
inc
fistpl
test
call
shlb
lods
xchg
loopne
or
mov
pushf
cmpsb
jle
mov
pop
mov
out
pusha
cld
lret
aas
cmp
mov
fsubrl
jmp
aaa
test
icebp
pop
pop
movsb
loope
or
xchg
out
sub
mov
pop
stos
shlb
jmp
cmp
cmp
nop
or
push
fucom
sub
aaa
lret
xor
in
mov
dec
les
dec
movsl
outsb
inc
push
inc
enter
negb
mov
or
mov
jp
outsb
scas
insl
pop
mov
fcmovu
jne
scas
add
mov
pop
mov
inc
in
pop
loop
push
ds
scas
leave
pop
dec
cwtl
cmp
mov
jl
mov
loop
mov
insl
popa
mov
push
add
sub
lods
sbb
outsb
inc
leave
or
mov
in
and
out
dec
inc
fucomp
fisubl
and
push
dec
ljmp
jle
inc
adc
dec
sub
cltd
enter
cwtl
pop
mov
jo
int3
out
and
int3
enter
xor
or
add
jo
push
xchg
adc
sbb
in
rcrl
sbb
ret
lods
push
and
fsub
mov
fstl
push
dec
or
pop
add
mov
adc
mov
ljmp
sbb
aas
outsb
pop
mov
hlt
lods
and
or
stos
cmpsl
out
popf
ficompl
out
lds
lds
stc
in
negl
add
aam
shr
cmpsl
fisubs
sub
test
lahf
movsb
notl
cmc
leave
pushf
jmp
int3
sbb
addr16
adc
or
xchg
xchg
rcl
bound
leave
cmp
sbb
arpl
out
cmp
and
pop
fcompl
cmp
ret
push
imul
xor
jecxz
and
inc
aad
xchg
test
cmp
xor
sbb
iret
pop
pop
sub
inc
xor
cltd
fpatan
rol
push
jge
cli
sbb
not
xchg
popa
pop
sbb
sti
mov
iret
xor
scas
mov
out
ds
scas
andl
icebp
and
xor
pop
test
cmpsl
mov
enter
movsb
xor
lods
push
mov
mov
push
mov
ja
cltd
lcall
pop
aad
mov
sub
inc
mov
fcompl
dec
add
dec
scas
sub
sub
lds
jle
sbb
aaa
inc
adc
dec
pop
jbe
cmp
pop
adc
pushf
jne
adc
popa
or
scas
xor
sbb
sbb
push
fsubrl
cmp
loopne
mov
in
mov
lock
mov
ja
aad
jge
bound
adc
rcrb
mov
cmp
pushf
pop
add
mov
sbb
repnz
cmp
or
mov
loopne
and
mov
mov
fcmovne
sub
jbe
nop
loope
pop
in
shrl
mov
popa
and
pop
push
test
dec
or
jmp
rolb
fstpl
mov
loop
xor
mov
sti
fdivl
ja
xor
jno
cmp
xchg
scas
inc
das
in
xchg
test
stos
jg
push
jo
in
push
xor
repnz
test
test
call
add
sub
lret
sbb
and
push
pop
orb
inc
loopne
adc
ror
popa
pop
lds
cltd
sbb
jge
lahf
loope
hlt
hlt
and
mov
mov
lock
dec
inc
out
out
movsl
jge
push
xorb
lret
push
cmp
inc
sbb
or
cmp
lret
addr16
das
dec
sub
les
sub
nop
cmpsl
dec
rcl
sbb
pop
push
mov
lcall
mov
push
insb
lods
out
cmp
mov
icebp
and
push
xor
jge
or
mov
xchg
mov
or
add
mov
cs
mov
or
jae
adc
mov
orb
pop
sub
cs
or
scas
imull
ficoml
mov
lahf
jae
inc
jbe
test
dec
bound
rcll
out
jecxz
sub
adc
lret
and
pop
mov
into
insb
orl
push
pop
mov
jnp
int3
call
rclb
enter
sbb
dec
je
cmp
ss
mov
rorl
sub
or
add
jmp
xor
sub
es
shlb
cmp
mov
mov
mov
fwait
push
rol
dec
mov
mov
xor
mov
mov
push
adc
data16
xchg
shrl
lds
sbb
lea
mov
pop
cli
test
jb
aas
jmp
mov
jae
fbstp
iret
aaa
pop
jns
les
push
jb
lahf
mov
or
dec
dec
scas
cmp
push
sub
movaps
mov
scas
test
loope
jb
inc
jns
push
and
enter
imul
and
popa
repnz
lret
pop
cmpsb
das
adc
arpl
cmpb
inc
adc
sub
xlat
lret
std
sti
lret
mov
outsl
mov
cs
cld
mov
mov
mov
cs
popf
add
sbb
and
push
lods
xor
and
lock
in
cltd
jle
inc
aas
loope
pop
setge
jecxz
push
lret
mov
mov
xchg
or
xor
xchg
nop
int3
gs
mov
or
lahf
push
incl
cld
mov
out
sbb
lock
iret
xchg
sbb
cmp
adc
jecxz
pop
cli
mov
dec
cwtl
jbe
call
sbb
jb
push
outsl
addr16
movsb
xorl
test
out
jo
icebp
aas
rol
aaa
leave
and
mov
fidivl
aam
jp
gs
movsl
mov
mov
rcl
xor
shlb
sub
std
pop
repz
dec
push
in
xor
sbb
je
sbb
mov
mov
cld
fs
fsts
aas
sbb
clc
mov
testl
ljmp
cmp
fnstenv
mov
inc
pushf
pop
mov
sbb
imul
push
pop
movsl
add
jb
mov
inc
push
pop
push
xchg
xor
adc
add
fnstenv
mov
cmp
rorl
andb
out
sbb
pop
jge
pop
dec
adc
push
cmp
xchg
pushf
xchg
mov
test
popa
mov
ja
xor
cmp
dec
clc
aaa
adc
push
jp
les
sbb
xor
xchg
lods
and
lret
cmp
lds
pushf
sahf
imul
cmc
stc
jg
call
movsl
mov
pop
mov
mov
adc
mov
das
pop
std
sub
out
add
pop
je
rcl
testb
mov
jns
cmp
jns
repz
add
sbb
rcrl
xchg
and
int
mov
ss
lahf
xchg
mov
stos
or
cmp
dec
aaa
pop
mov
mov
inc
mov
inc
or
lods
scas
mov
pop
xor
scas
sbbb
adc
xor
popa
pop
imul
jnp
sbb
jae
push
inc
sub
test
shll
sbb
mov
dec
lret
sbb
shlb
pop
cli
mov
ljmp
gs
cli
or
mov
add
xor
fists
leave
movsl
cmpb
cmp
fwait
mov
imul
fnstsw
dec
sub
shll
xor
insb
loopne
scas
inc
push
xchg
mov
stc
push
jmp
ljmp
pop
je
movsb
xchg
lock
in
jecxz
mov
fdivp
lahf
pop
or
negb
sbb
aas
mov
and
aam
sarl
mov
das
jmp
cmp
pop
scas
sub
lods
mov
test
test
jne
and
inc
shrb
test
mov
sbb
dec
xchg
add
shrb
lret
jbe
aad
ljmp
add
daa
or
cmp
sub
mov
dec
clc
scas
fsubs
icebp
xor
ljmp
loop
loop
mov
data16
add
sti
jnp
aad
push
or
imul
fnsave
push
inc
cld
stc
mov
pop
pop
jns
lcall
jge
sub
testb
scas
fsts
inc
cmp
repnz
mov
and
jno
dec
dec
cmp
and
mov
push
rol
xchg
sti
inc
inc
mov
add
mov
aas
adc
xchg
inc
sub
clc
pop
inc
push
inc
adc
orb
cmp
sub
repz
or
out
in
lods
push
out
xor
cmp
push
push
add
ljmp
adc
adc
rolb
ja
ds
addr16
insl
xchg
mov
imul
nop
adc
in
dec
dec
cmp
ja
add
fwait
cld
fbstp
xor
mov
daa
leave
and
out
lcall
movsl
mull
fildll
nop
or
ror
out
clc
imul
fdivl
int
hlt
fwait
sbb
adc
lds
mov
push
ret
insb
cld
or
jns
mov
pop
sub
imul
push
es
in
std
jbe
aaa
sub
mov
and
dec
pop
add
movsl
push
dec
jbe
cmpsl
mov
mov
repz
div
sbb
or
jae
jl
pop
clc
pop
cli
cmp
sbb
ljmp
lds
mulb
push
scas
iret
fistpll
arpl
xor
mov
mov
push
xor
jmp
out
pop
les
rcll
pop
xlat
jecxz
jp
mov
loop
fcoml
mov
or
mov
flds
pop
rol
insl
xchg
out
jmp
mov
xchg
ds
imul
adc
cmp
rcrl
je
setge
ds
testl
sbb
scas
scas
pop
hlt
add
mov
mov
clc
adc
insb
outsl
cld
mov
adc
cmp
out
daa
rcr
fdivr
push
pop
insl
adc
and
dec
xchg
add
out
adc
push
mov
std
jae
adc
adc
xor
and
mov
sbb
mov
stc
xchg
or
int3
lahf
jecxz
stos
cs
ficomps
leave
adc
aam
inc
push
shll
jbe
mov
xorl
out
cmc
adc
ret
in
in
aam
iret
loope
clc
jle
fsubrp
sbb
les
sbb
lret
xchg
cmc
xor
mov
cmp
mov
mov
mov
and
shll
dec
add
fisttpll
insl
sbb
jg
adc
loop
sarl
aad
jne
ja
js
lahf
mov
adcl
mov
stc
pop
cmpsl
mov
xchg
inc
je
pop
mov
add
mov
pushf
push
or
inc
jnp
shr
pop
and
rcr
sahf
xchg
lods
mov
addl
lahf
jl
enter
fidivrs
rcrb
jl
popa
dec
stc
sahf
lods
clc
ljmp
or
mov
out
dec
add
adc
stos
cmc
push
ds
dec
lahf
mov
add
ljmp
loopne
sbb
outsb
push
lahf
popa
js
cld
aam
mov
xlat
lock
sbb
fstps
jbe
and
mov
loope
xchg
cmp
std
cmp
test
test
insl
fnstsw
into
fists
fstpt
scas
lret
jecxz
pop
cld
pop
cltd
dec
insb
push
mov
mov
push
xor
dec
or
andb
pop
daa
cmpl
cmp
in
outsl
fcomi
inc
bound
cmp
add
dec
dec
xchg
dec
or
scas
in
cmp
sbb
sti
cmp
iret
and
xlat
or
inc
push
jmp
je
adc
push
pop
fnstsw
inc
dec
push
das
ja
sub
loopne
push
jecxz
mov
pop
inc
fcmovu
sahf
cmp
out
jb
inc
subb
lods
xor
or
adc
js
and
adc
lret
xchg
aaa
jmp
movsl
fwait
jmp
aas
loopne
mov
mov
xor
mov
into
insl
jns
flds
adc
aaa
xchg
push
add
psrld
mov
lock
mov
mov
mov
lock
xchg
jo
sahf
sbb
push
xchg
fisubrs
mov
shlb
push
enter
rcl
stos
sub
sub
or
and
lahf
lret
in
icebp
outsl
cltd
inc
xor
orl
xor
pop
xchg
cld
sbbl
sub
cmp
xor
mov
loope
push
add
inc
jnp
bound
mov
sub
cmp
dec
jmp
fisttpl
jno
out
lar
lock
call
outsb
lea
lods
test
xchg
xchg
mov
js
je
mov
pop
bound
decl
mov
pop
pop
nop
bound
sbb
inc
jne
sub
and
push
add
stos
dec
jb
xor
push
xchg
jno
aad
jo
or
fsubrl
insl
mov
sub
push
mov
push
out
pop
adc
pop
rcrb
cmp
pusha
and
dec
aam
jge
or
rorl
mov
adc
jb
fisttpll
roll
stos
mov
push
sbb
and
movsb
aas
lods
sbb
pop
pusha
scas
loop
xchg
xor
jb
cld
mov
cltd
or
pop
mov
inc
mov
aaa
hlt
or
outsb
fcompl
testb
pop
jb
cmp
xchg
rcrb
xor
ljmp
mov
mov
adc
hlt
es
pop
xor
and
xor
fwait
dec
mov
mov
cmp
xchg
stos
clc
xchg
adcl
mov
scas
pushl
movb
adc
ficomps
mov
push
push
push
lock
cmpsl
or
jo
pop
pusha
popa
sbb
push
add
dec
stc
nop
mov
cmc
test
xor
in
mov
mov
adc
mov
sbb
inc
sti
pop
sbb
hlt
movsb
lret
mov
les
inc
mov
stos
add
dec
dec
xor
adc
fwait
cmp
dec
add
daa
push
cmp
push
adc
dec
mov
lcall
pop
mov
lea
ss
dec
mov
hlt
jl
leave
xor
sbb
sbb
xchg
outsb
mul
xor
mov
imul
loop
inc
push
call
push
cmp
fisubs
jmp
rcl
stos
push
fsqrt
rolb
pusha
mov
out
scas
lret
pop
mov
imul
xchg
fcom
cmp
or
js
push
inc
je
ficomps
int
ret
scas
idivl
or
out
cmp
or
xchg
mov
jb
adc
or
jae
sarl
lds
dec
and
mov
loopne
mov
imul
loope
hlt
adc
inc
mov
rcl
mov
fbld
dec
jnp
mov
inc
add
dec
sarb
pop
add
and
xor
addr16
mov
adc
imull
adc
lcall
js
cs
dec
mov
mov
cmpsb
cmpsb
pop
call
addr16
call
ror
mov
adc
clc
mov
addr16
push
adc
sbb
xchg
rclb
imul
sbb
out
repz
leave
cmp
test
ja
cmp
pop
imul
xorb
cmpsl
stc
xor
fistpl
jmp
fucom
aaa
shlb
xchg
popf
loope
mov
aam
mov
std
shll
stos
mov
rorl
lcall
in
mov
ret
into
aas
jecxz
pop
cltd
faddl
out
xchg
loopne
fs
push
push
ret
sbb
cwtl
and
aas
mov
mov
pusha
scas
adc
cmp
and
dec
xchg
add
cwtl
xor
add
ljmp
inc
scas
into
in
scas
mov
xor
icebp
push
ja
in
fwait
pop
mov
sti
or
iret
testb
cmp
push
mov
lret
cld
mov
inc
popa
push
mov
mov
or
loop
testb
pop
pop
xchg
or
cli
jbe
sub
rcll
out
cld
inc
push
xchg
fstps
mov
nop
cmp
sarl
testl
or
cmp
or
dec
cmp
jecxz
pushf
dec
jp
mov
adc
adc
sub
push
pop
mov
dec
lcall
arpl
cmp
lcall
sahf
mov
jmp
sbb
push
and
mov
pushf
dec
push
fs
lcall
inc
or
sbb
inc
add
les
out
fwait
mov
inc
mov
jnp
loopne
sbb
hlt
iret
leave
mov
xchg
or
or
or
inc
lock
movsb
imul
jl
ret
xchg
pop
repz
data16
sub
cli
cwtl
aam
sub
cwtl
cwtl
dec
fsubl
cmc
xchg
xor
mov
leave
xchg
mov
sarl
cmp
repz
ficompl
pop
enter
in
lods
stc
repz
adc
clc
push
cmp
pop
push
dec
test
leave
xchg
notl
push
ret
jle
sti
sub
scas
adc
mov
movsl
mov
push
imul
inc
imul
cmp
data16
adc
rcl
sbb
shll
xor
sti
or
push
mov
lret
pushf
movsb
scas
jb
xor
xchg
pop
mov
dec
out
in
push
or
fisubrs
dec
adc
xchg
jmp
push
fisttpll
ljmp
xchg
cli
test
cld
scas
pop
or
test
shl
pop
gs
aaa
and
gs
ret
cs
jnp
mov
sbb
push
xor
lock
pushf
mov
inc
rolb
add
leave
lahf
inc
popf
or
xlat
sub
or
xor
pusha
sub
sub
xor
sahf
inc
xchg
fbstp
fsubrs
lock
mov
pop
dec
stos
enter
jecxz
push
lods
dec
stos
xchg
out
in
inc
outsl
cmpsb
mov
pop
lret
jge
ja
std
lods
daa
filds
iret
jmp
lahf
lcall
shlb
cld
lret
ret
fadds
push
lds
fwait
je
xor
int
data16
sti
mov
ja
jnp
addr16
fiadds
enter
daa
fildl
js
sub
inc
popf
inc
mov
in
mov
xchg
mov
and
cli
add
lds
cmp
mov
jle
cmpsb
cmp
incb
fwait
push
cmp
bound
pop
jp
dec
xchg
hlt
dec
adc
cld
adc
jge
ds
jne
push
sbb
adc
ds
sbb
pop
push
dec
jmp
dec
sub
jb
xlat
inc
out
loope
int
pop
xchg
push
fldl
inc
or
or
into
test
iret
in
or
add
stos
aam
fistpl
mov
push
rorl
jo
or
mov
pop
jae
stos
pop
mov
jg
mov
pushf
sbb
test
mov
adc
adc
daa
dec
jge
enter
lret
or
sbb
hlt
push
jbe
push
lret
adc
xor
jno
xlat
pop
lock
shr
adc
xor
leave
sbb
sahf
and
mov
fstpl
orl
roll
sti
rcll
cmpsb
or
sbb
andl
dec
adc
sub
mov
fidivrs
sbb
add
loopne
arpl
push
add
or
cs
call
or
aam
int3
push
pushf
dec
push
testb
insb
enter
call
xlat
gs
lret
aad
lahf
mov
jge
cmp
xor
imul
test
inc
mov
ds
int
or
jnp
hlt
pusha
mov
in
jns
imul
jb
push
les
jns
insb
popa
lock
arpl
loopne
insl
sbb
push
leave
hlt
aaa
sub
fstpl
xchg
ret
mov
stc
rorb
inc
jg
call
loop
out
out
or
lods
scas
imul
scas
out
or
pop
lds
inc
std
cmp
dec
or
shl
or
xchg
lahf
in
xor
aad
popf
cmp
cmpl
xor
jl
jp
mov
push
add
sub
sti
cs
shll
cwtl
mov
daa
inc
popf
dec
repnz
sbb
add
icebp
cli
jmp
and
in
or
test
push
fbld
mov
fisubs
mov
shll
dec
mov
test
dec
push
or
or
nop
shl
out
movsb
and
cli
mov
inc
sahf
sbb
mov
cmp
mov
jecxz
adc
arpl
gs
jp
and
jno
jns
lock
fiaddl
outsl
sub
ret
jno
mov
mov
hlt
and
inc
pushf
popf
xor
repnz
push
and
in
lahf
xlat
jb
mov
add
cmp
mov
pop
and
mov
addl
lods
pushf
cmpsl
nop
cmp
test
imul
ret
mov
inc
cmp
mov
mov
aam
sbb
fidivrl
push
repz
in
popa
imul
inc
lods
or
mov
scas
cmp
xchg
lcall
xchg
sbb
dec
iret
aas
inc
sar
xchg
subb
mov
mov
push
js
in
jmp
jg
add
push
pop
and
xchg
sub
popf
mov
popf
dec
popa
lret
sbbb
insb
loopne
lods
push
inc
lret
xchg
fs
xchg
push
push
add
adc
testb
test
add
xchg
aad
inc
call
sti
jmp
in
ficoml
xor
and
pop
inc
sahf
lahf
cmp
repz
hlt
rcrb
dec
sbb
int
and
jecxz
add
inc
es
test
adc
call
ret
sti
jno
rcll
fnsave
lock
pop
cmp
repnz
mov
roll
nop
xor
mov
cwtl
add
aas
std
loope
addl
cwtl
nop
sub
xchg
repz
push
mov
clc
adc
cs
push
mov
push
addb
ret
out
jne
fiaddl
loope
loopne
cmp
add
push
adcb
movb
add
mov
push
sub
popa
cmpsl
sbb
xor
push
jg
jbe
and
xor
cltd
addb
and
cld
fstl
inc
push
mov
aas
mov
mov
xor
and
add
dec
push
and
mov
rolb
push
xor
fisubl
xor
sub
ret
gs
in
out
add
xchg
push
inc
out
cmp
shl
mov
loopne
hlt
xchg
dec
stos
mov
dec
imul
aaa
in
inc
or
in
shl
fcomip
pop
mov
adc
imul
loop
mov
sub
leave
jp
movsb
das
int3
pop
cmp
adc
out
or
and
das
add
jmp
pop
insb
mov
jb
mov
and
fnstenv
mov
lea
fdivr
dec
sub
jecxz
cmp
imul
xchg
sti
and
test
mov
test
add
sub
addr16
mov
call
inc
cmpb
push
inc
adc
cli
cld
pushf
jp
add
insb
fdivrl
or
jnp
cmc
mov
cmp
cmc
jg
cmp
rcll
and
pop
gs
mov
into
xlat
inc
gs
scas
outsl
add
arpl
icebp
ja
dec
xor
xor
test
popf
xchg
jg
std
dec
or
add
mov
add
lret
insl
and
lds
cmp
es
aaa
je
stos
inc
mov
add
cli
out
shlb
adc
cmp
jmp
sub
insb
mov
mov
jae
das
leave
int
int
popf
ficoml
dec
test
das
out
fs
pop
mov
iret
xchg
mov
mulb
xchg
lahf
pop
stc
cmp
add
jp
pusha
leave
jne
xlat
stos
push
gs
out
lcall
mov
pop
cmpsb
sbb
pushf
mov
std
jo
or
mov
jl
adc
mov
aaa
inc
cmp
lods
xor
push
or
cld
rcll
mov
jno
adc
cmp
fs
mov
loop
into
push
push
cmp
push
and
xchg
inc
add
das
scas
inc
std
jae
xchg
and
cmc
mov
jmp
mov
adc
mov
inc
mov
aas
popf
xchg
adc
dec
xchg
fists
fwait
in
adcb
leave
jge
jnp
cmp
lea
out
mov
mov
in
les
mov
add
pop
aaa
insb
outsl
sbb
scas
jb
cmp
aad
pop
gs
lock
push
loopne
mov
std
mov
fsub
enter
and
aam
out
add
jns
stc
ds
add
test
jecxz
xchg
mov
push
pop
push
sbb
sub
movsl
xor
jno
push
iret
lahf
adc
ficoms
bndstx
lods
packsswb
add
cltd
ds
sbb
xchg
pop
icebp
sub
push
movsb
fiaddl
and
jmp
loope
mov
popa
mov
nop
es
aas
mov
jp
mov
ret
orb
mov
les
int3
mov
jb
mov
int3
stc
mov
jl
fstl
shl
push
mov
cmpl
push
js
mov
mov
out
mov
xchg
icebp
sahf
push
sarl
adc
cmp
lds
inc
in
imul
and
jbe
ja
cmp
sbb
fwait
mov
pop
xor
notb
mov
stc
ss
les
loop
xchg
mov
cmpsl
popf
xor
shlb
push
xor
movsl
iret
dec
mov
rolb
pop
adc
push
in
iret
push
imul
jl
data16
lock
sahf
movsl
adc
bnd
adc
dec
lds
push
cmpl
or
addr16
fmulp
pop
and
push
sub
xchg
cmp
inc
sub
fisubl
stos
nop
lods
test
fldenv
cld
mov
adc
ret
in
out
inc
mov
xchg
iretw
mov
pop
mov
stos
mov
rclb
pop
das
sbb
das
push
mov
pop
leave
cmp
mov
inc
loop
add
fadd
inc
repz
je
jno
mov
cmpsl
lock
mov
loope
mov
inc
mov
or
mov
mov
push
int3
or
iret
nop
stos
sbb
fwait
stos
sarb
insb
das
push
insl
add
pop
mov
cmp
pop
cld
mov
xor
andl
sub
add
repnz
ret
adc
stc
into
push
mov
out
jmp
repnz
js
out
and
and
insb
fldcw
jo
inc
xchg
cld
push
sarl
mov
mov
lret
aaa
cmp
push
jecxz
mov
loope
push
jns
dec
push
je
push
rcll
adc
mov
mov
arpl
into
dec
add
scas
sub
sub
lds
mov
pop
jg
pushf
sbb
add
and
fwait
mov
je
repnz
xchg
out
xor
adc
cmp
push
and
out
sub
ds
mov
bound
test
inc
dec
jp
jg
sbb
xor
xor
cmp
ficoml
sbb
movsb
fwait
sub
jo
std
or
sbb
fwait
xor
dec
gs
and
dec
enter
push
sub
in
ret
cmc
stc
add
jp
cmp
addb
adc
repz
mov
daa
adc
dec
mov
or
addr16
rol
push
sub
jecxz
push
into
subl
dec
cld
rorb
mov
xchg
mov
mov
stos
repz
enter
cmp
in
pushf
loope
add
cmp
or
jg
shrl
push
mov
jne
scas
cmp
lods
dec
push
es
sbb
repz
cmp
mov
scas
and
out
xor
mov
aaa
mov
push
pop
adc
cmp
enter
or
sub
mov
int3
daa
mov
popf
dec
cwtl
and
jp
lret
out
dec
cmp
int3
aaa
adc
out
push
adc
push
call
fstps
dec
cld
xchg
add
ss
pusha
bound
cmp
xchg
inc
loop
adc
call
fsubrs
mov
adcb
orb
jl
xchg
pushf
fcomps
cmp
mov
mov
inc
andb
push
inc
jge
mov
mov
cmp
iret
cmc
lock
sbb
fistpl
fnsave
xchg
mov
dec
xor
rcll
adc
das
add
lcall
mov
dec
negl
aaa
rcrl
and
adc
ss
js
sqrtps
loopne
ret
sub
popf
test
dec
mov
push
lods
roll
inc
mov
xor
xlat
shl
stos
dec
or
jmp
sti
js
cltd
call
push
rolb
call
pushf
das
icebp
arpl
adc
out
imul
addl
push
push
mov
pusha
mov
jno
add
push
dec
mov
pop
ficoms
mov
rorl
mov
sti
out
cld
dec
adc
and
sahf
and
shll
mov
movsl
daa
mov
lahf
ss
adc
push
xchg
inc
data16
cmp
outsl
repz
adc
popf
jmp
mov
adc
xchg
xchg
test
pop
and
xchg
mov
sbb
fwait
rcr
adc
xlat
cmpsl
xlat
ljmp
lods
or
mov
sbb
sbb
sub
mov
jo
div
ds
mov
inc
mov
mov
sub
or
xor
ljmp
xchg
or
jb
les
mov
addl
push
icebp
rorb
scas
sbb
sub
inc
repz
pop
sub
inc
cmp
pop
push
scas
or
mov
out
push
and
cmp
jmp
jg
js
addl
movsl
bnd
in
adc
push
out
ss
mov
adc
lock
mov
sahf
inc
xchg
cmpsb
repnz
pushf
inc
fs
pop
mov
mov
adc
popa
inc
lds
xor
xchg
adc
dec
test
and
and
adc
popf
pop
nop
test
cwtl
or
mov
mov
jmp
xlat
stos
pusha
push
jno
ja
push
cltd
jmp
jns
mov
push
xlat
adc
mov
js
in
mov
add
out
incl
push
mov
daa
lds
jge
jne
xchg
test
sbb
addr16
imul
jae
adc
andl
aad
push
pusha
adc
and
ret
push
movsb
push
and
or
xchg
mov
push
mov
inc
push
mov
cmp
pushf
jns
push
orl
push
jb
adcb
push
es
test
mov
call
insb
jl
push
inc
jmp
aas
sbbb
cmc
lret
outsl
sub
and
insl
pop
jl
rorb
in
lret
push
dec
in
inc
pushfw
clc
mov
fsubrl
enter
mov
in
fisubl
jno
push
imul
testl
sub
mov
mov
test
popf
add
adc
sub
xor
cmpsb
cmp
add
sbb
mov
add
in
and
jo
cld
loopne
test
fldt
test
out
movsl
jmp
add
rcrl
pushf
and
in
sbb
ljmp
mov
sub
xchg
cmpsl
dec
fdivl
loopne
outsb
mov
ja
ljmp
push
es
fdivrs
jecxz
push
dec
bound
cmp
loop
jecxz
mov
lods
dec
sub
sti
les
jg
or
push
out
and
jnp
pop
inc
cmp
jo
sub
jnp
jno
mov
jno
fistpll
and
lock
ret
fbstp
subl
and
xchg
fcom
imul
jle
fidivs
push
fnsave
cmp
cmp
cmp
scas
jge
sub
rcll
push
add
mov
ja
sahf
gs
bound
pusha
cmp
mov
repz
stc
aaa
xchg
cli
sbb
pop
fldl
sub
inc
mov
add
mov
fcoml
into
pop
ret
insb
lret
pushf
mov
sub
and
pop
repnz
out
loopne
das
mov
test
aam
fistps
cmp
mov
sbbl
add
mov
sbb
push
aam
roll
popf
loope
in
out
dec
pop
les
fld
rorl
clc
fs
lcall
addr16
hlt
xor
jge
fistl
dec
xchg
mov
iret
stc
test
andl
ljmp
mov
lcall
aaa
and
mov
js
jmp
cltd
mov
mov
dec
aad
add
sar
push
popf
out
ret
stos
notb
repz
push
cwtl
shll
mov
pop
adc
jp
jg
xor
imul
or
lcall
in
push
xchg
pop
bound
mov
and
imul
ljmp
mov
xchg
and
mov
insb
or
inc
dec
mov
pop
or
push
pop
xchg
xchg
mov
pushf
mov
clc
add
mov
inc
inc
imul
test
mov
or
mov
icebp
movsl
mov
adc
clc
dec
xchg
push
sti
sub
sub
cs
sbb
out
inc
scas
jbe
adc
add
pop
jne
ja
loop
insb
jl
sarb
sbb
inc
das
pop
xchg
mov
popf
fwait
jo
mov
and
shlb
mov
xchg
jecxz
inc
ficomps
movsl
push
scas
js
decb
sbb
mov
mov
mov
sti
popf
jne
mov
lods
es
xchg
loope
xchg
fidivl
rolb
lds
jl
adc
push
sbb
mov
stos
or
jo
fld
jp
loope
xlat
loopne
repnz
frstor
push
xlat
mov
and
out
fsubrs
adcb
cmpsl
xchg
push
xor
rolb
hlt
out
xor
clc
cmp
fldenv
sbb
mov
test
pop
xchg
aas
mov
fwait
xlat
xchg
pop
ja
pusha
js
push
imul
imul
add
and
push
rol
mov
fisubrl
cmp
or
andb
js,pt
lcall
cmp
loop
aaa
enter
fisttpll
fdivrs
adc
jo
push
enter
mov
mov
sbb
lahf
mov
jbe
sar
push
jne
mov
push
adc
mov
cmpsl
add
out
mov
test
mov
cltd
cmp
test
cld
pop
dec
inc
sbb
roll
rcrl
mov
xchg
jge
mov
les
sbb
dec
idivl
daa
aam
xor
je
lahf
push
xchg
sbb
mov
mov
xor
sbb
std
test
pop
mulb
dec
jbe
repz
xor
popa
jle
aam
outsb
mov
sbb
scas
es
adc
inc
iret
cwtl
add
decb
adc
mov
inc
lods
inc
ss
aas
lret
add
mov
xchg
lds
movsb
jecxz
hlt
addr16
pusha
sub
hlt
hlt
es
jb
mov
cmc
lcall
lcall
sub
arpl
push
gs
jle
mov
and
fmuls
or
mov
sub
jae
out
adcl
out
push
sub
mov
sbb
or
xor
stc
into
ljmp
into
sbb
stos
sbb
add
scas
repz
adc
nop
pop
inc
sbb
xchg
push
mov
ret
and
les
out
mov
lods
adc
adc
push
mov
cmp
shl
pop
jne
decb
popa
inc
sbb
xchg
sbb
xchg
inc
rcll
push
sahf
xchg
pop
in
test
test
loopne
les
fisubl
lea
andl
sub
mov
stos
push
iret
inc
stos
ja,pt
aas
leave
mov
rcl
nop
or
xorb
pushf
mov
jp
sub
mov
lods
ds
bound
sub
lods
test
jp
push
out
xor
or
ljmp
push
mov
lock
and
dec
xchg
mov
xchg
inc
loop
xor
dec
ds
adc
push
jp
xchg
int3
mov
mov
fbld
sub
pop
xor
add
mov
sbb
shrl
xchg
bound
xlat
mov
lods
mov
sub
in
sti
pop
aam
setg
inc
in
mov
popf
adc
sbb
and
mov
fnop
jmp
jns
cmp
cmp
mov
ds
aaa
xchg
xchg
sub
add
repnz
pop
push
inc
mov
lock
cmpsb
add
pop
mov
or
test
in
inc
movsl
xchg
lcall
in
push
mov
bound
addr16
push
fwait
sbb
cmp
aaa
repnz
cmp
sbb
lret
pop
push
repnz
scas
ljmp
je
mov
jo
push
rorb
mov
test
cmp
xor
cwtl
les
std
sub
popa
sub
lcall
out
mov
cmc
lock
push
jle
push
mov
dec
mov
add
int
in
out
outsb
jns
insb
mov
mov
push
sub
ljmp
lods
mov
pop
mov
dec
mov
je
mov
lds
inc
je
mov
lret
sti
fucompp
lds
cmc
mov
pop
in
xchg
fadds
adc
and
mov
icebp
seta
aam
sbb
jne
or
mov
imul
mov
xor
dec
mov
mov
icebp
mov
fs
or
repz
cmp
push
mulb
shrb
push
insl
pop
cli
stos
and
jle
adc
hlt
pop
loop
sub
aad
sbb
jo
in
outsl
push
add
js
push
or
gs
jge,pt
mov
or
iret
fbld
adcb
jle
cmp
sbb
push
test
mov
iret
mov
lret
es
outsb
push
adc
cmpl
sub
xor
xor
imul
jl
ss
les
mov
cmp
sbb
cmc
inc
push
addr16
mov
aas
scas
pop
mov
mov
adc
imul
test
scas
mov
dec
lds
ficomps
mov
add
jge
into
pop
mov
mov
sub
dec
cmpsl
xchg
test
inc
test
cmpsb
dec
fcomps
fwait
imul
pop
xchg
aaa
mov
adc
xor
cs
cmp
std
sub
pop
sub
scas
cvtpi2ps
test
mov
add
mov
and
jnp
xchg
cmp
stc
xchg
imul
clc
xor
sbb
fwait
push
jns
imul
add
ss
sub
ljmp
enter
and
imul
jnp
xchg
push
xor
roll
out
mov
cmpsl
insl
ret
stos
push
fsubp
cmp
push
and
stc
push
xchg
jl
stos
jb
jno
mov
lcall
out
add
lods
imul
or
iret
outsl
ret
dec
xchg
pop
push
and
addr16
gs
movups
mov
rclb
push
xchg
rorl
lods
in
mov
subb
pusha
sbb
popf
cmp
je
test
adc
movsl
rol
out
xchg
xchg
and
fwait
int
mov
or
sub
clc
fildll
cmp
add
ret
jnp
shlb
int
push
pop
xor
das
and
xor
and
and
mov
icebp
mov
pop
xchg
rcll
je
pop
jg
xchg
sbbl
mov
lods
incb
push
mov
cld
divl
lret
jecxz
fmull
pop
inc
xlat
dec
and
pop
push
idivb
mov
mov
xor
jae
sbb
out
cmp
push
cli
imul
hlt
xchg
xchg
test
pop
cmp
test
popf
cmpsb
pop
mov
xor
lret
add
lods
test
std
lods
pop
rol
and
aaa
xchg
orl
xchg
xor
popa
mov
insb
jl
in
inc
push
lret
into
cmp
cld
gs
mov
or
loopne
and
jno
in
and
lds
movsb
inc
inc
jecxz
icebp
jg
cwtl
push
add
mov
pop
sarb
jmp
xchg
mov
adc
out
xchg
xchg
dec
dec
mov
sbb
push
jp
lret
stc
jmp
and
shl
mov
cmp
arpl
nop
jae
mov
pop
inc
xchg
adc
push
adcb
rcl
sbb
clc
std
mov
in
cmp
shll
inc
arpl
adc
jae
add
imul
xchg
mov
xchg
mov
imul
dec
inc
fs
sbb
push
rcr
cmp
sti
fmull
mov
jns
dec
popa
pop
pop
ficoms
pop
jnp
ret
es
nop
sahf
mov
in
mov
sbb
xlat
mov
pushf
xchg
sbb
add
movsl
mov
jg
hlt
inc
ret
lahf
mov
adc
hlt
ss
sub
inc
pop
mov
lods
scas
cltd
mov
add
aam
mov
ficoms
int
dec
mov
push
pop
rcll
jno
mov
push
push
outsl
enter
pop
lcall
cmpsl
lret
push
aam
mov
imul
loopne
dec
incb
cmp
fisubs
pop
insb
out
jg
jb
pop
aaa
mov
sub
xchg
cmpsl
sti
cwtl
xchg
xor
cmp
mov
and
loop
mov
test
xchg
movsl
cmp
mov
dec
sbb
mov
in
mov
pushf
icebp
je
add
into
ja
fcoms
and
xorl
js
bound
movb
push
adc
sub
add
mov
xor
and
push
shll
ds
mov
sbb
xchg
jmp
adc
pop
xchg
ljmp
pop
pop
mov
lds
nop
mov
push
mov
popf
mov
sub
or
mov
mov
dec
pop
loopne
ds
cwtl
daa
mov
jne
ljmp
mov
shr
sub
gs
sub
xor
jge
pop
mov
pushf
pusha
gs
and
xor
adc
and
push
mov
scas
cltd
js
int3
int3
push
loope
and
fwait
inc
jns
pop
push
pop
mov
inc
insb
push
push
pushl
xor
in
mov
std
pop
push
in
jbe
das
cli
lcall
fstpl
or
int3
test
rcll
call
cmpsb
add
iret
clc
jecxz
mov
movb
test
xlat
lea
xor
add
in
loop
or
mov
pop
xor
push
in
clc
hlt
mov
mov
lahf
mov
hlt
mov
pop
jmp
and
xor
inc
ret
adc
dec
cmpb
call
sub
jns
out
in
and
push
push
in
aam
negl
bound
push
push
clc
dec
pop
inc
cmp
stos
and
out
out
push
mov
lock
jae
jo
dec
sbb
leave
push
xchg
das
arpl
icebp
xor
scas
inc
cmp
test
pop
xchg
ret
fs
pop
daa
fwait
cmpsl
adc
add
scas
jb
jno
xchg
lods
xor
dec
call
push
sbb
jnp
lcall
dec
lahf
stos
and
int
push
in
push
adc
stos
push
dec
sbb
xor
daa
aad
and
push
repnz
pop
aas
lea
pushf
cmpl
sbb
cmp
in
mov
icebp
cmp
fmull
int3
sub
push
jmp
lcall
les
das
scas
inc
bound
ret
jne
mov
fidivrl
call
lds
xchg
sbb
push
cwtl
push
mov
sub
push
jle
nop
jbe
inc
in
test
add
mov
lds
adc
push
adc
mov
cmpsl
popa
mov
pop
ja
outsb
mov
stos
cmpsl
mov
xor
insb
lods
and
mov
mov
add
pushf
mov
or
ret
outsl
sub
cmp
pop
xchg
data16
fisttps
cmc
test
dec
test
popa
das
push
jmp
sbb
lds
push
aad
mov
xchg
mov
sub
mov
and
lods
cmp
xchg
or
jg
xor
cwtl
fwait
mov
adc
mov
jl
xchg
cmp
idivb
cmpsb
adc
stos
fstps
or
aam
cmpsl
mov
enter
cmp
cmp
adc
mov
mov
cmp
es
ficompl
push
mov
subl
loop
imul
adc
cmc
fidivrs
pop
push
pop
mov
inc
clc
enter
jns
out
sub
ds
xchg
popl
add
add
cld
sub
adc
sbb
imul
inc
dec
ds
stos
shlb
lock
movsl
sbb
jecxz
out
jmp
dec
sbb
cmp
test
mov
inc
jo
mov
fwait
js
arpl
sbb
stos
lret
daa
xor
iret
lea
cmp
movsb
xor
lcall
cmpl
ret
sub
sbb
shl
cs
sbb
in
push
mov
and
ret
jge
das
into
adc
rclb
push
js
ja
popf
mov
cmp
adc
movsl
sbb
mov
mov
subb
scas
or
lcall
mov
pushf
test
int
push
subl
vunpckhpd
out
xchg
gs
or
xor
scas
dec
mov
js
or
addr16
and
mov
inc
cmp
or
or
push
add
les
jno
pop
adc
sahf
pop
pop
shll
call
js
jb
jae
popa
jnp
mov
mov
fistpl
out
jns
jns
mulb
mov
outsb
js
xor
lods
dec
lret
pop
das
or
rcrb
mov
fcomp
jnp
sub
sbb
mov
les
negb
push
cmp
enter
jg
mov
dec
out
sub
jne
mov
int
cmp
jmp
ljmp
movsl
divb
mov
int
aas
movsb
movsl
lock
add
sbbb
in
mov
jg
out
jo
adc
movsl
in
pushf
fmulp
lcall
mov
or
xor
inc
push
sub
icebp
aad
icebp
ja
mov
cmpb
jecxz
xchg
dec
outsl
xor
and
sarl
outsb
push
fsubrl
mov
nop
push
stc
nop
sbb
pusha
or
fwait
mov
and
push
xchg
inc
andl
pusha
xchg
fidivs
xlat
in
mov
cmp
push
imul
lret
mov
popa
fst
adc
mov
scas
cltd
mov
xchg
or
pop
leave
dec
shlb
pop
inc
dec
test
mov
aaa
mov
mov
xor
mov
mov
add
aam
stos
repz
aas
scas
or
imul
out
and
jnp
add
xor
sub
stc
int3
ficoml
mov
nop
add
loop
mov
push
stc
int3
out
faddl
adc
imul
test
and
test
in
out
pop
dec
mov
pop
jnp
int3
arpl
negb
jg
addr16
sarl
dec
mov
dec
js
scas
stc
mov
cwtl
mov
lds
repz
int
push
add
inc
pop
add
popa
and
xchg
mov
aam
outsl
subl
jne
scas
jge
lods
sub
dec
pop
sbb
jns
scas
sti
pop
ljmp
sub
daa
adc
xor
arpl
lret
inc
xor
push
sbbl
jno
cmp
cmp
stos
and
mov
mov
mov
fstl
push
adc
cld
ss
or
das
cs
and
inc
test
add
push
add
shll
dec
in
push
int
cwtl
ljmp
dec
roll
xor
iret
das
sahf
iret
mov
repz
pop
lock
mov
fcomip
lcall
xor
je
pop
mov
or
sub
sti
sbb
mov
negb
and
leave
lds
insl
clc
fimull
fs
popf
jae
mov
fisttps
pushf
cmp
or
fnstsw
rcl
ficoms
dec
jl
xchg
and
lret
mov
sub
jb
xor
insb
and
cmc
sbb
dec
sub
and
frstor
leave
inc
sbb
lods
lretw
lods
movsl
aad
pop
fadds
into
cmp
ja
sub
sub
xchg
aas
data16
cs
test
inc
xorl
cmpsb
cmp
xor
addb
movb
leave
cmp
sbb
cmc
mov
ja
and
jge
mov
mov
daa
jecxz
mov
call
adc
sub
adc
sbb
lods
outsl
mov
dec
insl
mov
or
rcll
out
dec
lock
dec
jno
fidivrs
in
aaa
jo
sub
and
cmp
mov
sti
lds
or
rcll
and
pop
sbb
pop
clc
xchg
sbb
rcr
nop
adc
jbe
jne
daa
pusha
lret
int
mov
sub
jae
shlb
push
jbe
fs
cmp
fdivrl
ret
xchg
or
stos
fs
dec
daa
int
push
mov
inc
stos
bound
pop
xor
push
les
out
mov
movsl
mov
imul
fucomip
lea
and
out
cmp
dec
scas
orl
sahf
mov
dec
push
lock
aaa
scas
out
pusha
data16
lcall
push
test
lock
dec
push
sbb
cld
mov
cmpb
add
dec
xchg
pusha
movsl
jmp
cmc
sbb
rcl
stos
mov
fdivs
dec
fwait
xor
repz
loop
lret
push
jbe
and
rorb
xor
push
scas
cmpb
and
push
cmp
xchg
fisubs
pusha
jo
movsl
lahf
gs
aad
jae
fstl
jmp
sub
xor
out
pop
xchg
loopne
imull
jecxz
into
repz
xchg
dec
outsb
mov
addb
cs
lods
ret
mov
movsb
imul
lods
cmp
pop
cld
inc
clc
cli
jnp
scas
stc
xor
mov
lods
mov
xchg
jp
add
andl
and
les
pop
xor
loope
cmp
cmp
sub
jle
mov
insb
lds
in
sarl
bound
cmp
mov
mov
dec
xchg
arpl
stos
sbb
jnp
pop
add
inc
add
shll
aaa
or
int
lahf
lds
fcomps
fldenv
pusha
test
add
clc
loop
test
daa
shr
xor
shlb
cmp
repnz
mov
stc
jg
xor
ljmp
xchg
imul
add
sbb
sub
sbb
aam
mov
imul
push
std
xchg
ret
fnsave
loopne
jmp
test
test
sub
iret
dec
mov
adc
mov
mov
xlat
pop
push
daa
push
dec
jg
sbbb
inc
mov
adc
mov
pop
sarb
mov
or
inc
dec
jbe
and
mov
imul
pop
jecxz
dec
int3
std
in
ss
xor
int
loop
pusha
bswap
test
gs
inc
out
xor
or
es
cmpsb
cld
or
out
xchg
push
xchg
push
cmp
mov
push
mov
outsb
std
scas
jg
lods
inc
mov
mov
fimuls
inc
or
sarl
xchg
xchg
hlt
xor
icebp
scas
fistpl
pop
dec
dec
test
imul
lahf
push
ret
jno
popa
sbb
lock
push
xchg
xchg
lret
lods
mov
xchg
stos
jge
xchg
out
in
aaa
adc
sub
xor
mov
sbb
dec
or
ret
fadds
mov
ficoml
mov
dec
in
ja
cld
dec
shll
xchg
pop
adc
xchg
dec
or
dec
imul
test
or
into
push
lock
inc
into
outsb
sbb
dec
orb
sti
sub
outsl
mov
pop
scas
pop
icebp
incb
sub
cmp
mov
push
out
cmp
fistpl
movsl
and
popa
je
mov
cmp
je
hlt
addr16
lock
pushf
dec
dec
dec
xchg
jp
cmpl
mov
cmpb
addr16
add
aad
xor
stos
movsl
data16
imul
xchg
jbe
lds
mov
lcall
sahf
les
stos
xchg
data16
inc
imul
xor
addl
inc
popf
inc
xor
push
popf
pop
mov
pop
ret
mov
imul
inc
aas
sbb
movsb
lods
push
mov
dec
dec
jne
mov
cmp
xchg
rorl
cmp
xor
mov
popf
movsb
push
inc
out
jg
mov
leave
cmp
sarl
rcr
sbb
mov
movsb
jb
mov
mov
cmp
mov
clc
inc
mov
fwait
outsl
lods
and
mov
flds
fildll
out
shrl
xchg
into
cmp
pop
divl
sbb
mov
pop
sub
adc
mov
lret
cmpsl
es
cmp
int
loop
cmp
js
movsl
orl
imul
jnp
push
jno
ret
int3
cmpsb
mov
and
mov
or
push
mov
inc
pusha
inc
adc
jb
jmp
out
ret
jo
jo
test
lods
ds
mov
and
mov
mov
xchg
xchg
xlat
cltd
nop
xchg
pop
cmpsb
sub
ds
add
dec
inc
xor
or
push
orl
inc
fistps
inc
dec
data16
push
out
das
insb
mov
aam
ret
and
lds
add
push
mov
out
movsl
cmp
cmpsb
test
mov
fs
sbb
mov
stc
stos
jb
leave
ror
repz
or
mov
fmuls
sub
insl
inc
fldcw
int3
mov
movsl
test
add
inc
bound
sarb
mov
inc
sahf
sub
cs
shrb
sbb
in
jno
mov
pop
cltd
fsubrs
jmp
js
repz
xor
inc
imul
push
in
testb
arpl
cmp
sbb
push
popa
push
movsb
mov
fwait
adc
sub
push
testb
scas
gs
mov
adc
stos
loopne
push
repz
dec
dec
out
enter
inc
inc
nop
pushf
mov
xchg
test
imul
jnp
dec
mov
iret
sbb
sbb
lahf
pop
fiaddl
xor
mov
jg
daa
pop
mov
pushf
lea
mov
mov
xlat
push
and
inc
mov
pop
sub
mov
add
int
in
shrb
jno
test
pop
shl
mov
adc
cs
inc
push
push
shrb
fistpl
out
jecxz
jecxz
lods
pop
push
pop
mov
ja
add
addr16
lea
sub
enter
cmc
dec
mov
mov
sbb
mov
xchg
pop
bound
out
int3
adc
jbe
pop
shrb
sub
jae
mov
cs
ffreep
int3
fnstenv
imul
xchg
ror
jle
cmpsl
sbb
repz
dec
pop
mov
jb
les
pop
pop
and
and
xor
bound
mov
int3
mov
xchg
inc
in
test
jge
adc
in
jb
pop
jmp
xchg
dec
insl
mov
movsb
mov
add
in
fwait
mov
cmc
xchg
inc
leave
xchg
in
xchg
dec
mov
or
adc
mov
cli
mov
cs
xor
in
es
xchg
and
les
mov
pusha
int
frstor
xor
cmp
mov
sub
test
mov
popa
sub
adc
push
and
mov
mov
sub
lcall
xchg
cwtl
ret
out
push
add
cmpsl
insb
ss
aaa
insl
push
cmp
push
sub
es
movsl
jle
shlb
shl
insl
jbe
inc
adc
das
daa
sbb
ficompl
inc
mov
push
jns
in
imul
xchg
cmc
jmp
mov
xchg
dec
dec
ljmp
xor
orl
pop
lret
xchg
scas
sbb
adc
push
jbe
das
push
loopne
push
pop
and
loopne
push
insb
fidivrs
mov
arpl
dec
push
mov
mov
adc
add
pushl
xlat
jg
loop
jb
mov
adc
jle
push
in
cwtl
mov
add
inc
jge
imul
mov
inc
outsl
or
stos
loop
jb
cmp
sub
sub
sbb
cli
cmp
pop
dec
popf
ret
aaa
xor
repnz
inc
pop
popw
xor
dec
fidivs
jecxz
xchg
mov
loope
mov
js
test
or
jne
idivb
jg
dec
pop
aas
hlt
add
push
cmpsb
in
or
and
jge
or
bound
daa
lock
mov
jmp
add
sahf
gs
inc
js
inc
pop
stos
jne
fs
inc
orb
call
lahf
jnp
push
inc
insb
mov
test
xor
test
sub
mov
dec
in
or
or
aaa
jl
jge
cmpsb
daa
cmp
mov
cmp
mov
ds
repz
and
gs
sqrtps
add
cmp
adc
xor
pusha
add
sbb
daa
jns
mov
in
fdivr
inc
lock
lods
lret
stos
cmp
repnz
dec
add
aaa
or
jo
mov
testb
dec
xchg
aad
aaa
dec
lahf
test
test
nop
cmpsb
push
mov
and
sub
arpl
stos
outsl
enter
push
out
jbe
xchg
sub
mov
and
and
mov
int3
mov
sbb
inc
loop
mov
pop
jge
inc
xor
mov
mov
outsl
sbb
mov
lds
or
sub
inc
fistpl
jmp
sbb
xor
stos
lahf
and
sub
imul
xor
cmp
rorl
lahf
mulb
dec
daa
or
pop
shrb
mov
and
rcll
stos
inc
inc
nop
dec
stos
int
xchg
mov
adc
daa
mov
or
push
rclb
add
push
cmp
cld
mov
push
in
mov
jbe
leave
pop
bound
int3
scas
test
cmc
pop
pop
je
fst
or
test
mov
add
aad
jae
push
pop
repnz
sbb
dec
outsb
push
lret
rcll
insb
inc
int3
sub
repz
pop
and
xchg
test
aaa
fsts
inc
add
nop
cwtl
push
test
int
mov
sbb
xchg
push
ljmp
mov
xor
adc
and
or
and
fisttpl
cld
cli
cmp
jge
jns
mov
mov
xchg
sub
mov
je
lahf
dec
jo
imul
xlat
sub
fstps
dec
or
out
rolb
hlt
daa
andl
push
and
jo
pop
bound
insb
movsb
dec
mov
mov
ja
movsb
iret
or
inc
pop
stos
fists
fidivs
shlb
xor
stos
xchg
sub
push
prefetch
repz
push
push
aaa
mov
xchg
inc
sub
inc
test
int3
icebp
pushf
nop
movsl
xchg
imul
and
lcall
adc
xor
mov
lods
inc
xchg
js
xchg
push
sub
sub
loopne
and
mov
imul
repnz
imul
pop
stos
jecxz
jmp
test
decb
jne
pop
fcoms
and
negl
dec
lret
sub
push
mov
movb
sbb
and
mov
shrb
fisubrs
push
ss
fsubrl
adcb
jnp
ror
pop
add
cmp
and
add
sub
insb
pop
or
cmp
out
xchg
cld
cmpsb
movsb
dec
lret
cwtl
ret
rcll
pop
or
cmpsl
dec
pushf
scas
fisubl
and
add
jg
push
lahf
cmp
into
int
loope
stos
mov
ja
shrb
dec
ror
mov
inc
test
in
shrl
dec
and
mull
fnstcw
pushf
and
in
or
mov
ljmp
mov
mov
mov
fisubrl
xchg
mov
push
lods
imul
push
icebp
pop
std
in
icebp
nop
add
xchg
inc
pop
pop
push
jbe
cmp
out
scas
ljmp
popf
leave
rol
les
ret
cmp
jp
lret
pop
xchg
sahf
mov
das
jne
push
fwait
adcl
out
sbb
jge
jae
mov
xor
addb
cmp
mov
repnz
sub
ljmp
rcll
fstps
ds
pop
pop
xchg
or
and
mov
frstor
inc
mov
aam
fstps
pop
xchg
jl
jnp
in
leave
test
enter
es
xor
jl
scas
movsb
xchg
xchg
jmp
mov
push
out
jge
push
inc
clc
daa
pop
lods
jne
and
testb
dec
jne
mov
dec
and
sub
add
push
inc
and
jmp
cli
icebp
pop
add
jnp
xchg
add
fwait
pop
and
xor
xchg
jl
outsb
sub
stos
or
pop
cmc
xchg
repz
popa
pop
mov
xorb
push
mov
shll
outsb
mov
mov
cmpsl
xchg
mov
fcoms
push
std
mov
sub
and
sar
int3
fs
xchg
aaa
in
andb
icebp
sub
push
pop
inc
dec
cs
movsl
pop
test
xor
repnz
and
xor
pop
pop
pop
or
scas
dec
cwtl
mov
push
popf
out
pop
mov
test
add
in
cmp
in
add
in
loope
out
pop
pop
cmp
into
lock
test
mov
js
fnstenv
sbb
xor
jp
aam
rcrl
adc
ds
lcall
repz
fcoms
mov
jl
hlt
xchg
and
stc
imul
stc
pop
sbb
xchg
fidivrl
or
ret
popf
adc
pop
cs
inc
pop
lahf
stc
stos
mov
push
iret
xor
dec
in
sub
in
insb
pop
lock
pop
push
and
inc
add
xor
mov
aad
and
ja
shrb
jno
test
jae
icebp
fistl
or
adc
fs
jle
clc
cmp
jle
icebp
sbb
push
xlat
or
lea
xor
pop
shrb
inc
fwait
sbb
test
mov
insb
aas
add
xlat
sarl
and
xchg
mov
dec
lcall
fmuls
fstpl
dec
inc
jp
push
inc
arpl
jle
cmp
xlat
xchg
les
lret
das
loop
pusha
sbb
jle
pop
in
mov
cmp
xlat
ja
sbb
cmp
mov
iret
out
insb
lea
daa
test
pop
adc
repz
out
mov
out
lock
ljmp
xchg
jb
pushf
add
loopne
scas
bound
ret
inc
push
mov
ds
xor
sub
movsb
xor
xor
ret
iret
or
push
mov
cmpsl
adc
or
sub
push
sub
pop
jo
ljmp
mov
jb
ret
cmc
dec
cltd
rorl
dec
jl
js
iret
or
lods
loope
std
incb
adc
jae
dec
fstl
dec
jge
sub
icebp
clc
xor
cmpsl
adc
sub
jp
inc
inc
cwtl
loop
pop
mov
add
or
push
fwait
and
or
jae
stos
icebp
pop
pop
mov
rcrb
imulb
cmp
cmpsb
inc
lock
mov
movsb
lea
sub
inc
mov
push
notl
roll
lea
inc
imul
xchg
dec
orl
std
cmpsb
adc
aam
sbb
dec
xchg
mov
dec
pop
push
orl
sub
fiadds
repnz
mov
int
or
inc
mov
inc
sub
loop
test
imul
fisubrs
push
lahf
push
bound
aad
scas
shlb
xlat
push
sti
mov
pop
jb
jmp
mov
js
inc
xchg
call
int3
addr16
cmp
into
push
loop
lods
loopne
jns
add
adc
lods
das
push
in
jne
cmp
rcll
int3
ss
mov
xchg
nop
cltd
push
icebp
ds
or
cmp
imul
inc
jge
push
adc
lds
out
pop
xchg
jne
mov
rcrl
out
pop
outsl
inc
inc
mov
jo
test
ss
xchg
add
shr
or
es
js
sub
inc
aam
or
push
mov
dec
cmp
jne
addb
jle
arpl
xchg
lods
sahf
mov
jb
lcall
cld
pop
in
inc
push
mov
out
mov
cmp
push
push
fwait
add
rorl
ret
enter
arpl
test
mov
and
xchg
jmp
dec
aaa
adc
fdivp
pop
jge
jl
xor
stos
sub
jne
add
test
stc
mov
dec
jnp
jle
push
leave
ror
std
fstl
cmpl
sbbl
mov
push
inc
sbbl
daa
mov
rep
fsts
pop
mov
ss
sub
sub
mov
xor
jmp
xor
xlat
mov
enter
xchg
mov
dec
sub
or
xor
push
mov
fcomp
add
jb,pn
jae
addb
minps
ljmp
cs
inc
shlb
cld
adc
inc
outsb
mov
in
cmc
jge
pop
jge
fstl
filds
std
xchg
pmulhuw
in
mov
xchg
shrb
dec
ret
test
mov
jnp
pop
into
fdivs
daa
and
ss
std
fiadds
mov
and
or
push
jge
sub
stc
jmp
mov
rcll
icebp
xchg
aad
cmp
out
jl
bound
cmpsl
loopne
int3
push
fnsave
andl
push
loop
push
fs
out
push
adc
sbb
push
sbb
jnp
pop
rcl
mov
mov
jle
xchg
inc
jecxz
into
stos
mov
pop
and
or
test
out
andl
inc
xor
in
jae
mov
dec
aam
mov
pop
pop
ss
sub
orb
aas
rorb
loopne
int
lahf
xchg
add
mov
dec
mov
adc
inc
and
xor
sub
ljmp
ret
pushf
jmp
adc
sbb
mov
insl
dec
clc
pop
sarl
or
stos
test
in
push
repnz
inc
pop
pop
push
mov
inc
xchg
adc
add
scas
and
arpl
mov
lods
outsl
test
les
mov
xor
sub
scas
pop
xchg
aam
std
sti
and
dec
add
pop
pop
loopne
cmpsb
imul
mov
jnp
mov
out
sbb
out
ja
or
sbb
in
or
pop
ficoms
pusha
into
mov
rcrb
lea
sub
ljmp
xchg
cmp
dec
inc
dec
in
lahf
cli
imul
mov
mov
mov
mov
inc
movsl
cli
pop
cmpsb
sub
add
sbb
sbb
pop
sub
sbb
pop
mov
js
sbb
pop
out
test
dec
aam
icebp
add
hlt
jp
lret
imul
pop
adc
sub
mov
ja
dec
or
ds
mov
xor
pop
push
push
lds
push
imul
andb
mov
mov
pop
dec
xor
cmp
xor
inc
add
sub
hlt
fsubrl
sti
mov
xchg
jl
inc
popf
xchg
mov
xchg
adc
or
mov
push
aad
test
shll
fildl
push
data16
and
std
jbe
adc
push
pop
lret
and
jo
or
jbe
adc
stc
aam
out
notl
mov
mov
and
pop
xchg
repnz
mov
fdivrl
cmpsb
lea
jg
push
inc
cmpsl
andl
outsl
pop
xchg
shr
dec
add
std
es
sarb
fistpll
repnz
push
pop
mov
bound
sbb
hlt
adc
mov
aam
lahf
pop
push
scas
push
lret
fsts
push
jo
ret
push
and
cmc
test
push
and
insl
ja
xchg
pushf
push
sbb
mov
movsl
or
arpl
jnp
lods
adc
dec
cmc
jne
sub
pop
mov
es
adc
mov
pusha
sbb
jns
jne
inc
mov
imul
add
or
enter
loop
sbb
fxch
test
scas
pop
jmp
pcmpgtb
cmp
xchg
popa
and
pop
clc
mov
shll
mov
jl
cmp
lcall
pop
gs
mov
aad
xchg
leave
rcrl
icebp
push
dec
rorb
inc
sub
into
popa
add
adc
adc
xchg
iret
es
jns
imul
xor
xchg
pop
cld
add
fstpt
jp
mov
imul
mov
add
pop
cwtl
cwtl
push
push
shrb
push
inc
filds
cs
aad
aaa
lcall
cmp
push
push
insb
push
data16
rorl
cmp
cld
insl
jmp
adc
mov
inc
xor
outsb
pop
sti
adcb
pop
jp
xchg
int
aam
pop
das
jl
jo
movsb
lds
fisubs
pop
adc
xchg
mov
sbb
xchg
xor
into
sub
test
mov
xor
test
lods
aaa
push
jo
or
mov
mov
test
jne
pop
ljmp
leave
jae
pop
and
sar
dec
adc
mov
xchg
mov
imul
shrl
sti
repnz
mov
sbb
mov
les
jmp
addl
jae
subl
fnstsw
popf
push
mov
cs
jg
cmp
dec
fcompl
push
mov
push
je,pn
cmp
std
rcrb
clc
aaa
fwait
adc
jle
into
mov
aaa
das
dec
xchg
pushf
push
mov
sub
je
inc
loope
imul
out
je
push
cmc
sub
mov
or
and
adc
popf
xor
cmp
mov
aas
les
xchg
rcrl
imull
clc
popa
lcall
mov
push
int
int
in
loopne
rcrb
mov
pop
nop
test
std
shr
add
pop
and
xchg
aam
or
add
movsl
mov
je
inc
test
test
push
dec
jae
dec
ficoml
lock
cmpsb
rolb
adc
jae
clc
xchg
inc
mov
push
hlt
inc
call
int3
mov
sbb
in
jl
adc
popf
xchg
loope
sbb
mov
mov
and
jne
dec
sbb
mov
mov
pop
push
fiadds
hlt
insl
push
push
and
mov
adc
fldt
mov
das
addr16
int3
out
filds
xlat
nop
lret
or
dec
and
inc
and
push
jnp
divl
ja
cli
rol
movsb
xchg
fisubs
add
push
ss
icebp
aad
fs
add
dec
enter
mov
mov
push
mov
je
xchg
ja
cld
lret
sbb
xchg
push
adc
imul
insl
rcrb
sub
addr16
mov
push
xchg
cli
xorb
mov
scas
sbb
scas
sbb
pop
loopne
mov
les
adc
lret
cmpsl
mov
cltd
push
jbe
loopne
inc
and
pop
sub
iret
jnp
jo
lock
xchg
mov
inc
faddl
fidivrs
data16
cmp
add
sahf
push
jns
push
pusha
pop
arpl
lea
mov
xor
jo
pop
popa
xlat
loopne
xchg
movsl
mov
iret
decb
stos
mov
jnp
add
jno
andb
add
cmp
xchg
repz
out
mov
mov
fidivl
testb
pop
mov
scas
push
cmc
mov
fistpl
sub
dec
test
push
xchg
outsb
adc
jecxz
insb
rcll
lods
shl
mov
mov
clc
cmp
xchg
xor
int3
or
inc
mov
pop
mov
lods
loop
and
add
fisubs
testl
sub
xchg
dec
xchg
ljmp
cmpsb
add
add
subl
push
dec
shlb
popf
push
sub
int
push
jae
add
mov
fsubl
jnp
push
dec
fcomps
push
shrb
es
int3
shrl
or
outsb
lret
xchg
sti
inc
fs
and
mov
pop
ja
nop
sub
xlat
outsb
xchg
inc
daa
inc
std
adc
sti
mov
and
push
or
pop
pop
rcl
in
into
mov
push
out
outsb
lea
sbb
dec
mov
sbb
push
pusha
adc
cld
mov
shll
mov
out
mov
cmc
push
mov
rcrb
int3
xchg
sbb
std
mov
mov
sahf
jns
lods
xchg
jecxz
inc
xchg
sti
cmp
jae
aad
mov
fdivr
outsl
clc
dec
cmc
iret
xchg
jle
movsl
mov
ljmp
or
mov
dec
cltd
dec
push
lock
xor
movsl
jae
sbb
mov
jo
mov
mov
mov
lods
push
scas
out
xor
outsl
sti
cwtl
xchg
scas
inc
jmp
add
pusha
mov
pop
lds
loopne
lret
out
loopew
push
lcall
stos
cmp
sub
adc
or
or
addr16
dec
push
iret
jecxz
sbb
rep
pusha
sbb
xchg
or
xchg
test
fbld
pusha
cltd
div
or
into
jnp
ds
add
loopne
jae
xor
mov
ja
icebp
daa
and
scas
insb
in
aaa
push
mov
push
nop
xor
sub
ds
add
lods
rcr
ret
dec
pop
xor
pop
pusha
and
idivb
adc
ds
xchg
call
cmpsb
jmp
jbe
rol
jmp
imul
int3
add
push
je
adc
add
and
aas
sbb
lret
cmp
outsl
stc
sahf
cltd
xor
jp
sti
pop
lret
dec
aam
and
test
aad
enter
sbb
or
mov
enter
jle
into
roll
add
add
xchg
loop
gs
push
cwtl
xchg
xchg
sbb
pusha
or
cmpsl
xlat
movsb
out
rcll
jmp
cmc
fcomps
inc
pop
and
push
movsl
push
xchg
jnp
or
fwait
push
nop
ja
clc
cmp
popf
js
cmpsl
mov
mov
pop
xor
xchg
sarl
jo
out
rorb
loopne
subb
xchg
xor
mov
movsb
pop
and
adc
test
mov
out
add
clc
add
add
mov
cli
mov
push
dec
push
inc
xchg
xchg
dec
lcall
popf
pop
clc
insl
mov
mov
out
jge
inc
and
inc
or
mov
into
or
xlat
mov
fbstp
aad
mov
or
loop
or
mov
xor
scas
add
inc
imull
fs
lea
clc
sub
adc
ds
xor
dec
mov
xchg
movsb
sub
push
inc
shl
inc
cmp
sbb
and
lock
cmp
or
loope
mov
jbe
xchg
push
mov
movsb
xchg
pop
mov
mov
push
jb
or
ljmp
push
dec
inc
and
xor
adc
out
adc
pop
out
push
enter
xor
and
sub
daa
dec
sub
mov
pop
and
aaa
and
and
cmp
xchg
les
sahf
popa
jecxz
ja
jg
test
fistl
or
outsb
pop
shll
cltd
add
jle
lods
mov
es
out
cmp
dec
inc
inc
scas
shrl
test
fsts
or
inc
clc
fprem
mov
jo
sarb
fadd
sahf
push
aaa
mov
ror
inc
mov
mov
dec
stos
inc
pushf
xorb
add
out
and
jae
mov
push
inc
dec
lahf
in
pop
daa
cmp
xchg
mov
add
dec
cmpsl
out
xor
movnti
cmpsb
int
int3
and
nop
adc
mov
or
cmp
cmp
mov
or
sti
iret
mov
adcl
fcoms
mov
scas
jl
cmp
add
pushl
fdiv
jmp
xor
cmp
mov
inc
js
lcall
inc
push
nop
push
mov
push
movsb
cmpsb
jae
xor
push
xor
std
pop
sbb
in
jae
adcb
mov
jo
test
mov
mov
sub
cmpsb
and
push
lret
push
aas
outsb
dec
jg
es
mov
push
loope
cmpsl
jbe
pop
or
cltd
mov
mov
xchg
xchg
insb
dec
lods
mov
xchg
aam
xchg
xorb
jge
push
mov
ss
mov
xchg
sbb
fucomi
roll
fiadds
xchg
mov
pusha
push
jp
cmpsb
rorb
fbstp
xchg
es
arpl
xor
test
incl
or
and
sub
dec
inc
mov
arpl
fldcw
sbb
pop
repnz
cmp
xchg
or
enter
xchg
xchg
xchg
movsb
pop
push
imul
daa
ds
mov
push
pop
mov
and
pop
scas
jb
incb
imul
adc
fmuls
xor
jg
fstpl
xchg
jp
xchg
xor
loopne
rol
gs
mov
scas
mov
sbb
pop
push
dec
cmp
js
ljmp
ss
mov
repz
xchg
push
mov
repnz
dec
outsl
sbb
out
xchg
clc
xchg
push
sub
movsl
enter
loopne
inc
dec
scas
adc
push
push
insb
xchg
fucomi
inc
dec
jle
jge
fsubs
int3
pop
int
paddq
mov
mov
std
aas
add
repz
jecxz
lods
and
movsl
cmpsb
pop
pop
jg
stos
aad
enter
mov
and
mov
movsl
jbe
xchg
mov
adc
push
push
daa
test
daa
aaa
cwtl
insb
xchg
mov
add
cmp
movsl
mov
cmp
es
and
jno
mov
xor
aam
jmp
aas
mov
or
into
and
push
or
pop
mov
or
jge
decl
jne
jle
mov
pop
enter
add
sub
jnp
and
cmp
mov
imul
loope
loope
cmp
cmp
push
mov
int3
dec
adc
or
lret
repnz
push
fsts
pop
loope
leavew
mov
adc
add
das
mov
call
mov
xchg
out
icebp
mov
xchg
add
xlat
sub
data16
inc
push
ret
hlt
adc
addr16
aam
xchg
fsts
jno
pop
adc
push
dec
cmp
sahf
in
mov
or
dec
movsb
test
add
inc
add
cltd
scas
push
shl
jnp
mov
lea
mov
mov
arpl
sub
sub
pop
int3
lahf
das
sbb
in
test
fsubrl
int3
jbe
imul
push
repnz
lcall
cli
in
inc
lcall
outsl
loopne
jo
and
inc
jmp
jge
fwait
cmp
and
incl
sbb
and
mov
jnp
pop
adc
loop
adc
mov
rorl
push
sub
in
xor
and
xchg
daa
pop
pop
fdivrs
pop
jae
mov
and
or
cli
shlb
add
jmp
mov
mov
ds
jmp
and
mov
cmp
incb
xor
pop
mov
and
pop
test
dec
and
and
sub
cmp
mov
in
popf
cmp
aam
outsl
mov
xorl
mov
iret
fwait
pop
sub
bound
fdivl
jl
es
call
cwtl
lret
fimuls
out
or
out
xor
xor
std
cmp
imul
add
inc
cli
lret
push
out
mov
je
cli
mov
cwtl
ret
inc
mov
testl
push
loop
xor
pop
adc
mov
call
je
pop
fwait
popf
pop
shrb
push
mov
aad
int3
int3
cmp
cwtl
insb
adc
mov
add
out
mov
pop
jbe
xchg
lods
mov
lds
xor
push
loope
dec
lcall
ret
sbb
jne
out
dec
cmp
imulb
mov
das
cmc
mov
mov
xor
xchg
jb
dec
movsb
xchg
cwtl
inc
lret
int3
pushf
jne
test
dec
xor
or
scas
ds
movsl
and
push
add
push
lods
fcompl
repz
stc
aad
fisttps
ret
adc
xor
mov
cmp
mov
push
pop
test
test
push
mov
les
sti
xchg
repnz
push
notb
test
gs
pop
movsb
add
mov
sbb
dec
dec
insl
dec
arpl
outsb
push
dec
jne
and
dec
sub
dec
shlb
std
mov
jnp
jle
or
ret
shll
xchg
mov
sahf
stc
sbb
insl
addr16
sarb
mov
inc
or
ja
mov
mov
hlt
or
xor
jge
nop
push
sub
arpl
push
xor
sbb
xor
aad
dec
xor
movsb
pop
or
lret
popf
divl
or
mov
mov
pop
rolb
jmp
cli
push
aad
scas
fldl
mov
push
orps
pop
dec
shlb
orb
lcall
xor
jnp
mov
clc
push
jmp
cmp
je
fidivs
sub
push
dec
int3
loopnew
mov
xor
mov
inc
push
cmp
sub
cmpsb
inc
or
hlt
pop
inc
or
aaa
imul
stos
add
in
xchg
adc
pop
push
repnz
jbe
ret
ret
mov
mov
loope
sbb
sub
adc
stc
je
cmp
std
aas
inc
pop
jo
mov
das
daa
mov
xor
incb
bound
cs
mov
repz
push
push
cltd
fbld
jmp
insl
xchg
lods
or
mov
pop
cmp
inc
iret
in
shlb
fdivrl
pop
adc
push
fdivrl
push
aas
ss
pop
jp
adc
andl
push
ja
push
lcall
imul
cmp
pop
dec
and
lea
imul
jmp
jmp
in
iret
and
or
mov
das
cmovp
inc
or
das
inc
in
xchg
call
call
or
out
xchg
xor
add
dec
lds
pop
addr16
into
sti
fidivrl
mov
dec
repnz
cmp
inc
das
adc
pop
and
cli
xchg
jne
xchg
cli
insl
fidivrl
insl
xor
mov
leave
push
out
in
ja
leave
repz
fs
xor
push
jecxz
pop
push
mov
sub
push
jmp
sarb
fsubrs
movsl
adc
loopne
cs
sti
or
xlat
mov
mov
mov
adc
leave
cmp
push
fbstp
out
lea
push
jae
add
repnz
addr16
repnz
pop
or
and
add
scas
lock
out
jmp
and
mov
adc
push
sub
inc
test
lods
cli
jns
in
xor
lea
or
cli
sub
mov
cmpsl
rcll
pop
mov
xchg
and
push
mov
lock
movsb
test
cmp
in
cmp
lds
hlt
mov
sahf
cmpsl
adc
cmpb
cmpsl
mov
xchg
data16
testb
and
cmpsb
push
test
push
int
lea
adc
jmp
jae
pop
cmc
dec
cwtl
mov
in
loop
cmp
icebp
fs
in
sub
mov
jmp
jmp
testl
push
inc
in
xchg
pop
cmp
in
aaa
xchg
out
pop
clc
add
and
nop
imul
mov
aaa
mov
xor
jecxz
sti
jp
or
das
xor
dec
pop
or
inc
stc
adc
xchg
scas
lea
push
scas
loopne
mov
xlat
jo
cmp
xor
shrl
sbb
mov
iret
out
stos
enterw
inc
mov
hlt
mov
in
mov
rcrb
jge,pn
inc
xor
adc
out
and
cltd
frstor
shrb
out
xchg
jl
mov
enter
testb
add
outsl
icebp
cmp
leave
jmp
stos
imul
fidivl
jno
cmp
out
scas
sub
and
inc
or
inc
mov
int
dec
fistpl
sarb
dec
or
std
mov
rol
aaa
ljmp
insl
adc
fs
cs
lahf
sub
jae
out
sbb
mov
lret
insl
popa
cmp
xor
lcall
mov
sti
push
dec
fcmovnu
bound
push
sbb
sbb
jle
mov
mov
popa
cmpsl
inc
or
fisttpl
push
inc
sarl
into
insb
mov
cmp
push
fistl
mov
iret
movsb
stos
ja
cvtdq2ps
gs
cli
dec
std
inc
jmp
xchg
loop
jge
mov
or
addr16
es
and
fistl
mov
or
xchg
aas
pusha
push
xor
pusha
lock
cld
inc
xchg
in
add
cs
pop
and
in
les
call
out
and
add
ja
jmp
jmp
call
pop
ds
mov
fs
mov
push
xchg
out
in
fbld
shll
or
ficoml
sub
fcmovbe
push
adc
xchg
sub
dec
cmp
cmp
push
dec
xor
lahf
nop
pop
pushf
push
sti
js
jg
adcl
popa
mov
mov
pushf
push
ds
pusha
test
xchg
or
inc
movsb
xchg
xchg
insb
js
dec
jp
das
insl
xchg
icebp
xor
mov
sbb
std
and
add
iret
dec
add
dec
ss
lods
insb
cmp
adc
es
cli
int
insb
mov
pop
and
mov
imul
gs
cli
inc
lahf
jb
enter
icebp
sbb
and
inc
cmp
mov
test
insb
push
push
jb
mov
in
adc
rorb
and
push
decb
mov
jle
xor
and
and
rclb
addb
fldenv
ret
jecxz
sbb
add
in
imul
sub
or
fcomps
popa
fiaddl
test
icebp
rcrl
and
movl
adc
fisttps
mov
sti
loopne
sbb
push
sahf
aaa
push
pop
lods
in
mov
stos
ret
ja
loop
xchg
mov
jge
add
push
das
imul
addr16
and
stos
pop
xchg
inc
mov
add
popa
std
fs
xor
push
mov
repnz
xlat
inc
xor
and
lahf
insb
stos
insl
jge,pn
push
xchg
mov
pushf
aas
push
or
inc
subl
test
mov
xchg
insb
les
jg
adc
subl
push
or
xor
out
jge
adc
imul
pop
test
aas
out
aas
sbb
sub
push
je
pop
das
push
out
dec
arpl
andl
inc
addb
push
push
fiadds
sbb
mov
fidivrs
xor
in
bound
gs
ja
int
jp
sub
jl
add
add
xchg
lods
fistl
into
xchg
and
xor
in
xchg
jecxz
bound
jae
out
add
mov
ret
testl
and
jbe
xchg
sahf
jne
dec
pop
scas
jne
xor
stc
cmpsb
pop
push
out
fistpl
and
pop
aas
inc
repz
mov
xor
rcrl
xchg
adc
inc
cmp
out
xor
sti
ljmp
cmp
and
mov
xchg
push
imul
addb
rcr
pop
imul
or
cmpsb
jb
in
ds
in
sub
or
adc
dec
jle
mov
inc
mov
sbb
cmp
push
roll
loopne
cmp
adcl
daa
xchg
outsb
xchg
sbb
stos
aad
cmpsb
sub
data16
sahf
test
xchg
cmpsb
adc
lods
fstpt
cmove
test
dec
mov
sti
lea
pop
pop
xlat
sbb
push
nop
cs
mov
std
loopne
ja
inc
call
pop
push
stos
pop
mov
test
sbb
fnsave
add
cli
mov
ret
hlt
xchg
cwtl
neg
mov
lret
aaa
mov
fisttpl
inc
scas
inc
xor
out
adc
shlb
fildll
leave
in
aad
mov
mov
pusha
adc
lods
shl
pop
sar
out
ljmp
aas
mov
dec
test
loope
push
push
or
push
loop
std
daa
js
sbb
mov
or
jmp
repz
movl
out
fnstsw
and
je
fiadds
inc
fwait
insb
imul
adc
jb
xor
xchg
pushl
stos
movsl
lods
out
daa
imul
fimull
mov
mov
xchg
repz
movq
pop
xchg
mov
dec
insb
test
push
pop
sub
divl
jl
lods
rolb
leave
in
sahf
lock
pop
jle
hlt
gs
out
push
sub
loop
ss
testb
adc
aaa
testl
sbb
inc
add
cmp
sub
fbstp
mov
fidivrl
pushf
pop
loopne
js
cwtl
repnz
in
cmc
cmp
cmpb
jnp
xchg
outsl
mov
fisubrs
mov
cmp
inc
sbb
and
jo
fs
insb
popf
xchg
sbb
cmp
xlat
add
sbb
fcomp
lods
lahf
popa
jnp
int3
push
repz
rorl
popf
pusha
cld
mov
cmp
sbb
scas
inc
and
test
mov
js
pushf
imul
mov
xchg
movsl
mov
mov
daa
lods
push
fidivrs
xor
add
aad
jbe
jp
testb
int
data16
cs
add
add
ja
sbb
mov
xchg
cmp
mov
xchg
test
loope
movlps
sub
pop
cltd
push
testl
addr16
ljmp
inc
mov
dec
mov
pop
and
mov
xchg
fildll
aam
sbb
out
mov
mov
inc
dec
xchg
push
or
adc
jns
jae
xchg
cmp
hlt
addr16
mov
mov
fdivl
or
push
ss
sbb
and
ret
or
aaa
cltd
arpl
and
cltd
pusha
testl
push
push
loope
hlt
mov
cmp
lods
add
add
lods
or
push
xchg
adc
and
lret
adc
push
jmp
pop
scas
in
push
pushf
adc
cmpsb
xchg
dec
lods
cmpsb
push
mov
mov
pop
lahf
inc
mov
popa
mov
repnz
stc
and
fwait
rolb
add
sbb
push
jp
pop
pop
mov
add
xchg
pop
arpl
adcb
push
sub
das
jmp
fcmovu
dec
cli
push
cmp
xor
int3
cmp
imul
dec
cmpsl
mov
mov
sbb
stos
jae
cwtl
pop
xlat
push
mov
lcall
mov
or
pop
aam
sub
arpl
mov
push
aad
popa
jg
sti
xor
cmp
mov
movups
add
popa
ret
or
push
mov
and
mov
pop
and
inc
add
jno
push
mov
mov
faddl
xor
or
test
sbb
aaa
lods
lahf
sub
fidivl
add
stos
fsubrs
push
push
mov
push
mov
repz
pop
cmpsl
negb
xor
add
sbb
cmp
out
ret
mov
or
lcall
adc
aaa
dec
xor
jno
xor
inc
aaa
pop
mov
cmpsl
and
mov
mulb
fcoml
dec
add
sub
das
mov
adc
stos
adc
imul
and
sub
pop
cmc
jp
test
inc
push
add
mull
adc
imul
inc
xchg
lods
push
mov
xor
ljmp
dec
std
lret
add
aas
call
cld
push
aas
cmp
outsl
std
rcl
inc
inc
insl
ljmp
fdivrl
push
xor
xlat
sub
xor
mov
jnp
dec
cltd
dec
xor
pop
or
sbb
pop
leave
and
add
pop
test
test
sahf
push
mov
push
mov
repz
pop
cmpsl
outsl
out
or
inc
stos
cltd
repz
mov
push
test
jns
loopne
dec
adc
dec
aad
mull
add
adc
scas
repz
mov
mov
jle
cmp
inc
std
adc
cmc
sub
cli
jb
aad
push
in
dec
das
xchg
push
dec
mov
leave
test
sbb
push
cmp
imul
pop
add
gs
xchg
js
shlb
aam
push
pop
shlb
dec
or
jns
stos
dec
sub
das
ss
sbb
mov
pusha
fst
inc
cmp
imul
cli
inc
mov
aad
jl
std
xchg
push
jle
fbld
les
insl
cltd
ss
xchg
iret
mov
pop
xlat
inc
or
xchg
fs
dec
pop
in
imul
mov
es
jae
out
add
mov
push
jmp
push
and
fs
dec
xchg
sarb
sbb
icebp
cmp
push
fwait
out
cli
out
xor
mov
push
les
out
push
cld
fidivl
adc
ljmp
into
push
imul
and
jb
in
pushf
mov
adc
hlt
ret
ret
sbb
pop
cmp
in
adc
cmpsl
xchg
or
mulb
inc
inc
push
cs
inc
pop
pop
ljmp
pusha
sahf
sahf
cwtl
mov
aam
int
in
fistpl
xchg
dec
fwait
push
jnp
mov
push
mov
add
pop
cwtl
inc
iret
fadds
sub
cmp
mov
sub
sbb
pushf
push
add
add
pop
std
rclb
xlat
adc
cltd
mov
ja
add
or
jae
jmp
sub
push
lahf
aad
add
aam
pop
pop
out
pop
std
jp
sbbb
add
xor
or
in
adcl
sbb
push
pop
mov
in
jle
shll
adc
dec
adc
cmp
xor
lods
sahf
mov
cld
push
xor
add
call
clc
mov
ret
add
xor
jmp
xchg
test
sarb
xor
rcrb
xor
test
mov
cld
mov
mov
dec
cwtl
dec
sub
pusha
popa
cmpsb
addr16
popl
xor
cmp
fisttpl
mov
mov
pop
test
outsb
mov
loopne
stc
pushf
popf
push
bound
adc
add
fwait
xchg
mov
xor
movsl
xor
mov
xchg
stos
bound
lods
push
push
xchg
xor
mov
pushf
mov
adcb
rclb
test
push
inc
scas
insb
mov
dec
xchg
lods
imul
add
in
pop
dec
push
test
clc
or
test
and
sahf
jg
sub
xchg
adc
xor
sarb
mov
xchg
inc
daa
imul
call
cs
lret
insl
cs
cmp
out
rolb
imul
inc
dec
cmpsb
rolb
pop
inc
int
and
pop
inc
xchg
iret
ror
or
cmp
ds
into
test
cmp
cmp
ret
inc
and
jns
push
sbb
jb
xchg
xlat
repz
notb
aam
cli
and
iret
sbb
adc
popa
add
ror
rorb
les
stos
loopne
sbb
sbb
popf
scas
push
inc
push
popf
push
cmp
das
sbb
lret
mov
sbb
mov
add
mov
pop
xchg
or
fs
sbb
cwtl
xorb
fldcw
daa
and
and
insb
fisubrs
fs
loop
adc
inc
aaa
xor
lret
push
add
data16
addr16
cld
push
pop
ss
daa
mov
into
cld
sahf
hlt
loopne
mov
push
mov
mov
test
adc
pop
pop
adc
insb
jmp
repz
pop
adc
rorl
pushf
mov
ja
adcb
xor
mov
pusha
mov
push
add
add
out
and
mov
cmp
and
mov
enter
jbe
adc
jne
xor
mov
push
inc
adc
jns
push
movsb
ja
adc
mov
mov
mov
stc
dec
dec
cmp
dec
es
jne
dec
inc
pop
lds
rolb
sbb
stos
test
rcrb
mov
cmp
adc
mov
nop
sub
out
outsb
fwait
je
pop
fwait
sub
in
push
sub
xchg
sub
les
mov
test
outsl
lahf
dec
add
or
gs
mull
mov
adc
cmp
out
mov
mov
cld
daa
rol
lret
xlat
dec
subl
xor
xchg
xchg
pop
push
sub
movsl
xor
xchg
inc
inc
orb
lods
stos
int
test
std
sbb
incb
push
mov
mov
movsb
sbb
cs
mov
jns
xchg
int
mov
xor
mov
in
inc
dec
and
sbb
pusha
xchg
outsb
iret
add
ret
sub
sub
mov
mov
sbbl
and
mov
cmpsb
mov
lret
int
cs
das
xchg
adc
inc
pushf
pop
mov
push
cmp
jno
push
mov
adc
and
movsl
aaa
mov
jns
add
mov
lret
push
xchg
cmp
lea
xchg
mov
cmp
sahf
imul
int3
push
shlb
xor
fs
into
lods
xor
stos
and
cmpsb
and
call
ds
jo
bound
push
pusha
adc
ja
fwait
int3
fcompl
not
adc
cld
push
sahf
stos
xchg
into
xor
loop
insb
or
adc
xor
decl
ljmp
push
mov
xchg
push
xor
xchg
sti
shl
jo
lret
pop
jnp
inc
rcr
vmovq
and
ret
inc
iret
or
fstpl
lea
hlt
into
xor
push
addr16
mov
mov
lods
vpsrlq
inc
mov
aas
flds
sub
dec
xor
dec
pushf
hlt
out
fstpl
int3
mov
test
sbb
pop
or
data16
stos
pop
dec
shll
in
xor
gs
push
imul
ljmp
incl
lds
into
call
adc
dec
or
call
sbb
sbb
ds
cltd
and
mov
push
or
mov
ljmp
bound
out
aam
mov
pop
xchg
fsubs
scas
mov
or
mov
andl
int
dec
pushf
hlt
sbbb
lods
ret
inc
dec
cmpsb
push
mov
lds
insb
ret
call
adc
xor
add
cmp
movsb
push
mov
shlb
adc
int3
inc
mov
mov
mov
jge
sbb
jne
mov
adc
mov
mov
aad
hlt
adc
lea
jmp
test
cmpl
and
push
jbe
insb
dec
cmc
stc
cmp
cmpsl
lret
and
adc
gs
rcll
ret
mov
ficompl
scas
sub
andl
mov
mov
jno
xchg
or
push
mov
mov
mov
jmp
int
negb
setns
sbb
adc
mov
fisubl
fimuls
int
xor
lahf
arpl
in
in
xor
fisubl
fiaddl
fisttps
jmp
jle
xchg
les
in
leave
ficoml
loop
dec
pop
ret
xchg
mov
stos
pextrw
jae
cmp
pop
sbbb
push
adc
inc
push
inc
mov
cmpsl
push
cltd
inc
pop
loop
mov
dec
fidivrl
sbb
push
sahf
cltd
jecxz
mov
sbb
in
popf
das
lahf
mov
adc
out
inc
pop
jge
jle
into
scas
movl
repnz
scas
xor
sub
cmp
test
in
dec
sub
das
in
adc
pusha
test
cmp
push
dec
jo
cwtl
jle
cmp
shrb
call
fisubrl
adc
out
stc
fcomip
lods
cs
mov
add
ja
mov
push
fwait
js
lret
jns
cwtl
mov
popf
or
movsl
adc
mull
cmpl
mov
out
mov
out
loope
in
ds
jle
adc
fsts
ficoms
out
dec
mov
dec
test
push
cmp
repnz
lea
sub
sub
mov
adc
jb
rcr
pop
sbb
aas
test
inc
mov
dec
cli
sub
lods
repnz
leave
repnz
push
int3
les
repnz
daa
push
mov
es
sub
in
loope
cmp
inc
sub
cmp
sub
jg
cmp
adc
lahf
pop
mov
add
inc
cltd
push
jmp
movsl
mov
ret
lahf
xor
cmp
adc
sbbl
mov
fucom
dec
orb
lock
dec
adc
adc
lahf
loop
cmpsl
and
les
insb
xchg
pop
mov
xor
and
dec
cvttps2pi
enter
mov
and
cmpsl
adc
fsubp
loope
mov
push
mov
insl
push
push
daa
mov
movsl
xchg
sub
inc
xchg
and
or
cs
cwtl
add
and
ds
push
push
lahf
lret
shl
xchg
rorl
fdivrl
and
push
mov
repz
lock
mov
movb
fwait
outsb
mov
jle
mov
jne
repz
jns
enter
fsubl
mov
hlt
jno
enter
into
mov
inc
jnp
xchg
mov
add
push
mov
rclb
dec
mov
xor
xchg
adc
sti
aaa
xor
in
arpl
inc
adcl
or
add
mov
loop
movl
xchg
sbb
out
cmc
fs
rcrl
ja
xchg
test
or
cld
xor
lock
repz
aam
or
jl
add
and
xchg
insl
sar
push
aaa
rol
xchg
enter
std
loopne
pop
pop
mov
pop
push
loope
lea
xchg
clc
inc
pop
push
int
inc
inc
xor
imul
mov
mov
dec
adc
push
or
dec
xchg
or
shlb
cmpsb
or
fwait
pop
lahf
lods
mov
and
mov
out
sarl
mov
xor
nop
push
iret
fstp
popa
jle
icebp
in
sahf
lcall
and
lret
ds
popf
in
rorl
jmpw
sti
add
lahf
stos
sub
lods
aam
cli
inc
add
xchg
push
ljmp
ja
test
scas
lret
js
aaa
inc
cmpl
inc
insb
push
cmp
mov
js
sub
rol
cltd
mov
jo
pop
outsb
lcall
jge
push
es
inc
loope
outsl
xor
jae
ficoms
mov
stos
ffree
mov
in
cmc
cmp
rclb
xor
jo
sbb
out
out
loope
dec
adc
mov
fiaddl
xchg
rorb
sbb
pop
mov
sbb
test
mov
sub
sahf
rcr
mov
repz
adc
mov
push
pusha
rol
add
lods
mov
push
xchg
std
xchg
aaa
push
adc
in
adc
out
cmp
fcoms
fs
mov
arpl
jg
out
sbb
test
cmp
dec
test
xchg
fcomi
xor
sub
jg
push
mov
inc
cmp
mov
pop
mov
addr16
pop
mov
xlat
xchg
push
das
imul
dec
in
or
push
pop
push
mov
imul
negl
loop
xchg
stc
jbe
lea
pop
sub
fcmovbe
scas
insb
dec
rorb
dec
jnp
push
and
fdivrs
sbb
cmp
lret
bswap
outsb
les
xchg
imul
inc
filds
mov
movsb
fmuls
leave
bnd
movsl
pop
movsl
clc
ret
cmp
jle
orl
leave
push
data16
xor
ffreep
loope
repnz
cmp
out
les
and
xor
and
xor
and
popf
in
ljmp
adc
imul
cmp
adcl
aad
lods
es
nop
cmp
pop
das
jbe
and
and
or
sub
mov
lahf
stos
sbb
movsb
lret
mov
jl
pop
jnp
xor
fbld
cli
aas
int
lock
scas
fisubrs
mov
shlb
mov
ffree
push
ret
clc
mov
push
push
push
nop
divb
dec
xor
das
cmp
add
add
test
sbb
fdivrl
mov
xor
sub
or
in
pop
lods
cmpsl
mov
xchg
in
adcl
aaa
repz
fcompl
inc
ret
xchg
sub
adc
add
stos
inc
pop
xor
lds
data16
mov
inc
push
or
ljmp
push
xor
sub
mov
lods
scas
xchg
xchg
and
loopne
add
pop
arpl
call
pop
fistpll
aad
jnp
or
add
lahf
test
push
mov
popf
lahf
adc
lahf
or
cwtl
pop
and
ret
iret
mov
sbb
dec
daa
dec
xchg
and
dec
xor
loopne
mov
mov
push
pop
in
clc
lods
addps
insb
stos
rorb
lock
xchg
das
pop
or
jmp
mov
orl
push
pop
mov
fldt
mov
and
xor
xor
pop
scas
jne
out
cli
pushf
test
in
shl
add
mov
mov
mov
jns
test
lret
dec
or
stos
insl
lds
dec
daa
nop
sti
lcall
push
fucomip
dec
xor
sub
or
mov
mov
nop
add
add
xor
cmp
or
fmuls
lds
lods
lock
outsl
test
dec
mov
jno
aad
ret
addr16
aad
into
push
push
push
lock
and
sbb
hlt
or
xlat
lahf
and
das
or
outsl
push
mov
dec
fmull
ret
outsb
adc
out
into
jmp
mov
mov
and
mov
out
mov
out
insl
mov
pop
sbb
xor
mov
fimull
sub
mov
insb
ljmp
push
adc
pop
mov
aaa
shrb
loopne
fsincos
add
imul
call
pop
int3
cmc
jae
and
jmp
imul
mov
dec
ret
call
pop
sub
pop
push
ss
ds
mov
xchg
xor
xchg
out
add
push
xchg
out
push
cmp
lahf
fdivrp
ss
pop
mov
add
daa
gs
cmp
xchg
repz
cs
ds
push
dec
and
les
test
mov
mov
fisttpll
push
scas
adc
out
add
shrl
adc
js
fsubr
jns
imul
ljmp
pushf
out
rolb
sub
sahf
movsb
iret
clc
movsb
mov
std
push
daa
fdivr
pop
dec
test
adc
gs
lods
arpl
cmp
imul
js
jbe,pn
incl
mov
fiaddl
paddusw
lcall
sub
aad
lahf
xchg
imul
or
fcoms
scas
dec
mov
pop
sub
xchg
paddb
ret
je
imul
int3
stos
outsl
mov
cmpsb
xchg
cwtl
inc
gs
mov
int
push
and
in
mov
or
xchg
adc
orl
fcmovb
lea
adc
dec
push
pop
mov
or
stc
dec
aas
dec
and
mov
lret
outsl
pop
rcll
lds
or
repz
mov
fdiv
das
flds
adc
leave
icebp
mov
lea
pop
lahf
xchg
out
std
mov
inc
mov
clc
pop
push
sbb
ret
and
inc
out
hlt
pop
loopne
jae
inc
int3
mov
xlat
xchg
addr16
push
inc
cmp
ret
mov
aaa
sub
pop
xchg
cmc
lret
aad
rorl
jg
pop
push
cld
clc
sub
cmp
xchg
sahf
mov
outsl
jge
sub
stos
mov
and
and
movsb
loope
jae
xor
test
mov
loop
popa
and
movsb
divl
in
inc
lcall
xchg
loope
xor
adc
hlt
ret
repnz
jle
imul
add
outsl
jle
or
push
fisubrs
aad
push
js
stos
push
or
scas
and
aaa
xor
cmp
std
mov
cmp
sub
xchg
pop
enter
pop
pusha
cs
fbstp
inc
jecxz
cwtl
in
pushaw
xchg
ljmp
jb
sbb
iret
sbb
ds
imul
push
jecxz
xchg
pop
fnstenv
icebp
add
adc
lret
test
icebp
ds
dec
lea
pop
test
or
push
leave
mov
lret
outsb
aaa
das
add
jb
adc
repnz
push
fistl
pop
emms
bound
xchg
xor
in
pop
lcall
cmp
mov
push
shlb
into
sahf
and
fwait
push
imul
pusha
aaa
scas
rolb
mov
aam
push
push
sub
stos
fistl
daa
jge
hlt
jnp
test
and
es
inc
incb
fadd
bound
in
or
aas
test
push
xchg
sub
js
iret
filds
and
dec
push
nop
adc
add
es
cld
sbb
aam
cmp
enter
pop
push
out
addr16
cmpsb
cmovp
push
jge
popf
cmp
mov
pop
insb
push
jg
adc
xchg
je
xlat
sti
aad
loope
push
push
mov
daa
dec
test
test
xchg
rcr
xchg
xchg
jns
lret
aas
dec
mov
or
jl
mov
sbb
add
movsl
xchg
imul
adc
adc
rol
andb
pop
ja
loop
sbb
pop
mov
pop
cmp
ret
xchg
pxor
dec
shl
int
cld
xor
js
lock
xchg
push
fnsave
roll
movsl
and
push
fiadds
jg
xchg
fisttpl
jae
dec
dec
ficompl
fldt
in
push
inc
cmp
and
stos
sarl
xor
push
fcmovnu
or
cmp
push
out
xchg
fcomps
data16
movl
push
test
mov
leave
mov
iret
lea
cmp
shll
into
push
mov
cs
jg
dec
fsubs
out
imul
xor
push
push
xchg
cltd
pop
or
xchg
jg
dec
jg
cmp
stc
jno
pop
jmp
repnz
adc
dec
stos
push
repz
jno
enter
dec
ljmp
mov
ja
in
loop
ja
sub
pop
cltd
push
xchg
jnp
sub
mov
sub
inc
or
andb
in
hlt
lret
notl
cwtl
cmp
shl
cmpsl
cltd
stos
aaa
pop
hlt
and
imul
int3
inc
scas
cmpsl
test
or
leave
call
loop
sub
fnstenv
out
mov
xchg
jp
sbb
mov
iret
test
dec
adc
adc
into
mov
cmp
xchg
push
test
in
lret
mov
and
jg
cmc
xorb
mov
inc
into
mov
fsubs
pop
in
mov
outsb
wrmsr
sub
mov
ret
cmp
xchg
cmp
fs
xchg
out
mov
inc
shll
ror
movsb
test
dec
lcall
lret
into
add
rolb
xrelease
mov
dec
sbb
ret
dec
pushf
rolb
mov
cwtl
pop
sarl
ss
popf
and
bound
fdivrl
sbb
cli
sbb
fs
or
mulb
inc
mov
adc
outsl
and
adc
mov
pop
scas
inc
std
sbb
shlb
das
movsl
push
fists
add
outsl
scas
clc
mov
loop
fsubl
stos
add
push
xchg
mov
add
cmp
pop
pushf
push
push
js
mov
stos
adc
movsl
mov
lret
int
aad
in
push
or
ret
cltd
addr16
mov
repz
ror
mov
jp
lcall
cli
lcall
sub
outsl
js
mov
repz
es
sarb
and
arpl
mov
xchg
fldenv
movsb
sub
jle
loopne
jne
aaa
jne
xchg
pop
dec
movsb
aaa
pop
sub
ja
scas
push
inc
and
and
jmp
add
mov
pop
jb
lcall
inc
xchg
dec
pop
xchg
or
stos
sub
adc
cmp
repnz
mov
cmp
insb
add
subb
pop
mov
push
mov
pop
popa
sub
inc
pand
xchg
mov
fidivrs
xor
and
mov
xor
pop
pop
and
xchg
xor
cmpl
fimull
lods
loope
jge
mov
lock
fbstp
or
mov
adc
push
and
inc
cwtl
sub
ljmp
cmpsl
rclb
mov
push
jns
bound
pop
mov
or
rcrb
adc
push
sti
shll
mov
mov
movups
or
movsl
out
cli
cmp
sti
cmp
movsb
push
mov
rcll
mov
lea
shl
inc
and
jmp
jno
mov
outsl
jbe
aas
ret
aad
repz
mov
jmp
cmp
cmp
sbb
out
jne
or
cmpsb
faddl
push
jo
and
divl
pop
xor
sbb
mov
and
xchg
pop
push
push
shlb
aad
mov
lret
stos
aam
out
outsb
mov
mov
leave
mov
jnp
fmuls
mov
lret
add
scas
insl
mov
shl
sahf
mov
mov
push
mov
cmp
cmpsb
mov
jp
sbb
jae
aaa
fildll
lret
in
mov
bound
lcall
iret
mov
ret
adc
pop
cmpsb
decb
jge
xor
inc
stos
lea
pop
inc
mov
fnsave
push
sbb
insb
imul
inc
cmpsl
xchg
mov
fidivl
daa
fisubs
xor
hlt
ja
ljmp
sti
sbb
iret
sbb
aas
dec
pop
pop
jns
pop
xor
insb
add
jle
fisubrs
and
adc
shrl
jns
ljmp
push
pop
dec
inc
inc
mov
dec
je
jo
imul
mov
ljmp
sbb
and
xor
pusha
mov
gs
adc
iret
mov
cld
loope
addl
not
inc
cli
lods
dec
inc
aas
or
xor
jle
es
es
insl
ficomps
jp
adc
fidivrs
popa
and
push
add
add
xor
into
arpl
mov
xor
mov
push
les
dec
xor
fiaddl
clc
cmp
les
int3
jne
push
xor
mov
or
jp
fidivs
or
loop
jg
lret
jle
jecxz
daa
insl
xlat
leave
test
push
inc
jns
mov
adc
test
stc
inc
dec
out
xor
mov
ret
in
cli
jge
andl
pop
and
arpl
int3
call
push
sbb
adc
adc
int
je
out
ja
lcall
popf
ret
cmp
movsl
or
aad
dec
and
adc
insb
cmpsb
mov
adc
mov
imull
or
dec
add
mov
rclb
aam
pop
or
int
adc
xchg
and
test
push
loope
xor
mov
pop
es
push
sbb
jmp
sub
vpmulhuw
mov
cs
rolb
dec
in
addr16
jno
mov
xor
icebp
pop
rcr
cmc
mov
cmpsb
hlt
in
and
adc
dec
jbe
pop
add
add
movsl
jnp
jmp
mov
xchg
jno
leave
inc
sbb
and
ret
ja
push
int3
ror
sbb
cli
addr16
jo
mov
xchg
mov
pop
mov
inc
mov
mov
inc
fcmovnu
into
test
adc
dec
add
adc
push
std
mov
jnp
push
cs
add
loop
bound
sub
adc
sub
in
or
movsb
mov
ret
mov
fisttpl
outsb
dec
mov
scas
jbe
fwait
out
sbb
das
mov
adc
pop
outsl
mov
lods
orl
loope
jb
mov
xchg
mov
pop
mov
xchg
outsl
push
in
outsl
imul
jecxz
enter
jb
or
and
lea
ret
jne
or
ret
js
mov
inc
imul
das
add
xchg
lock
push
mov
sbb
mov
enter
sbb
adc
out
pop
dec
mov
lahf
aam
or
mov
test
or
or
push
ljmp
jecxz
andl
xchg
gs
outsb
xchg
das
loopne
add
fistps
cmc
mov
roll
bound
dec
nop
pop
cmpsl
test
sub
add
fnsave
dec
stos
mov
dec
dec
lgs
sub
xor
aam
in
push
cmp
push
ret
jmp
and
fnstenv
sbb
and
ja
inc
push
lock
or
inc
in
cltd
bound
pop
ja
xchg
pop
cmp
call
mov
push
mov
jle
cmp
ss
test
daa
rcll
in
mov
pop
jno
aas
inc
sti
adc
jae
xchg
mov
push
sbb
fmuls
inc
testb
mov
xor
xlat
or
cmp
dec
add
addb
outsl
pop
cmpsb
inc
dec
xlat
or
daa
outsb
adc
clc
adc
xchg
adc
push
mov
mov
insl
aas
adc
cmp
aad
jg
pop
push
push
popf
jne
push
or
add
dec
mov
dec
and
test
cmp
pop
lahf
faddp
pop
imul
xchg
pop
jbe
or
cmp
adc
lret
and
jecxz
aaa
mov
jb
dec
pop
add
sti
sub
adc
push
loop
int3
stc
sti
or
cmp
push
divps
fwait
insl
cmpsb
add
cmp
test
and
and
and
sub
or
mov
ret
sub
nop
cmpl
add
inc
repnz
sub
jge
shll
adc
dec
lret
out
add
cmp
aad
lods
sbb
das
mov
or
pop
cli
or
mov
add
adc
jne
add
push
ficoms
repz
xor
cmp
jne
cs
mov
push
mov
push
stos
leave
xor
adc
mov
imul
jp
sbb
repnz
push
dec
cmp
or
sbb
fcomps
cmp
cmp
out
rcrb
inc
push
sbb
cmc
sbb
ja
lock
cmp
xchg
pop
mov
add
dec
inc
jg
out
fildl
sbb
cld
or
rolb
test
dec
push
cli
mov
mov
xor
addr16
faddl
or
shrb
loopne
push
xor
rorl
or
pop
dec
test
add
sti
inc
dec
lock
cmp
cmp
fwait
inc
sti
call
mov
xorl
xor
push
hlt
fisttps
popa
enter
arpl
cmp
jle
stc
divps
lods
sti
outsb
mov
andb
lahf
add
fsub
adc
pusha
ret
adc
push
aam
cltd
icebp
mov
push
push
inc
sub
std
cmpsl
nop
push
mov
sbb
cmc
out
push
or
insb
mov
pushf
stos
push
sbb
hlt
rclb
incl
in
add
mov
mov
cmp
jp
inc
dec
ljmp
jae
jo
mov
push
shrl
lock
adc
cs
pop
jns
and
sbb
icebp
pop
push
rclb
pop
aaa
les
adc
insb
testb
fcmovbe
fnstsw
cltd
scas
mov
pop
popf
sub
addl
lods
cmpsb
or
bound
outsl
iret
mov
pop
cmc
push
add
fimuls
ss
icebp
jl
xchg
cmp
jecxz
popa
push
add
fdivl
loopne
xor
jmp
andb
int3
ret
shl
push
push
fisubrl
sbb
outsb
arpl
repz
push
xlat
xor
rorl
int3
insb
es
push
fs
mov
fcoml
or
mov
jno
sbb
outsb
dec
test
mov
cld
cs
mov
xor
movsl
inc
mov
jns
inc
dec
test
rclb
dec
jp
dec
xlat
sub
push
cs
in
jg
nop
xchg
fnstsw
aaa
jb
mov
adc
xor
push
sbb
pop
movsb
xorb
pushf
js
outsb
rol
mov
jle
mov
dec
lock
outsb
pop
stos
leave
addb
insl
xor
scas
pop
cmp
mov
push
notl
sti
fmull
mov
nop
sahf
lea
mov
push
pop
adc
aad
orb
test
js
loope
insl
pop
ds
mov
adc
or
mov
test
xchg
ret
jnp
mov
jno
es
outsb
or
fcoml
inc
jg
xor
sti
pop
pop
iret
fldt
mov
out
mov
pop
add
movsl
mov
mov
sub
cmp
dec
xor
pop
fprem1
xlat
js
test
xor
insl
sub
sub
jno,pn
data16
and
sub
outsb
mul
inc
ja
pushf
adcl
lods
pusha
out
mov
push
mov
sti
lea
push
sbb
xor
inc
jl
pusha
ret
jmp
xlat
das
movsl
pop
pushf
cmp
sub
mov
and
out
cmp
aaa
adc
ja
dec
cmpsb
insl
shll
or
adc
repz
and
sbbl
and
orb
fisubrl
or
leave
leave
cmpsl
es
and
pushf
fucomp
ret
loopne
jmp
or
out
ficompl
xor
sbb
xor
add
ret
jge
add
enter
roll
test
dec
xchg
xlat
shlb
mov
jmp
in
loopne
test
cpuid
cltd
add
std
test
or
aas
mov
mov
inc
mov
das
xor
push
mov
sti
xchg
std
xchg
sbb
adc
insl
mov
sahf
lock
mov
push
stc
fcomps
insb
cmpsb
shrl
push
ljmp
rclb
sbb
or
sub
xor
mov
add
addr16
ss
test
mov
dec
push
jmp
daa
aad
aaa
inc
pop
ja
repnz
stos
inc
js
jb
sar
cltd
lcall
loopne
lret
xchg
xchg
xchg
sub
cwtl
arpl
ds
jnp
je
out
or
rorl
push
mov
mov
jmp
mov
aam
mov
mov
xor
mov
dec
dec
xor
sarl
fldt
cmp
add
xor
pop
adc
sbb
or
out
out
hlt
iret
sub
jae
push
sar
mov
nop
sub
dec
movsb
sahf
popf
inc
push
mov
lcall
or
cwtl
das
inc
xchg
xorb
sti
xchg
or
rorl
std
adc
push
add
pusha
insb
push
adc
roll
sub
jecxz
dec
xlat
test
or
xchg
xlat
or
jb
movsl
and
sbb
push
loopne
aam
sub
mov
dec
pop
xor
inc
mov
cmp
lcall
jg
xor
xchg
push
xchg
clc
push
test
add
jno
jl
das
adc
push
mov
lahf
sub
and
jg
mov
jno
in
loopne
lret
call
stos
mov
adc
daa
sub
xor
pop
rorl
inc
icebp
mov
insl
nop
pop
dec
scas
mov
cltd
sbb
enter
jmp
fsubrl
popa
jns
mov
cmp
cmc
xor
repnz
sbb
xchg
repnz
lods
sub
decl
adc
enter
jns
jnp
repnz
scas
and
icebp
mov
std
push
rcrl
xor
ret
push
lock
aas
lds
push
movsl
out
cs
push
mov
sbb
stc
push
pop
lahf
dec
mov
fcoms
pop
xchg
repnz
fcomp
out
loop
addb
cmp
add
ss
mov
in
popf
sub
mov
mov
or
rcrl
jb
outsl
add
aam
sbb
stc
lea
pusha
ljmp
mov
shrl
pop
test
dec
iret
xchg
mov
ja
xchg
fistpl
das
hlt
vpmullw
sub
xchg
ja
cld
sahf
sbb
jae
pop
lds
mov
adc
sbb
push
mov
ljmp
or
jo
lock
inc
mov
aaa
cs
jg
push
movsl
in
out
cmp
jl
aaa
mov
pop
outsl
cmc
and
pop
jae
lock
out
mov
add
fmuls
pop
and
sbbl
xchg
cmp
jnp
cmpsl
rcrl
inc
push
dec
and
je
je
mov
xorl
cmc
stos
out
mov
ljmp
lods
stos
fiadds
cld
push
cli
and
pop
add
out
out
das
push
insl
test
lea
and
inc
inc
leave
dec
pop
and
push
icebp
jb
leave
push
inc
pusha
mov
cwtl
jne
sti
insl
lret
inc
mov
or
cmp
pop
lds
push
icebp
int3
ret
push
ss
divl
sbb
std
cld
ja
sub
push
imul
frstor
bound
cmp
stc
xlat
sti
lea
adc
jecxz
cmp
push
test
imul
dec
push
clc
push
adc
add
add
jle
pop
out
and
xor
sbbl
repnz
xor
loope
in
ret
cltd
adc
sbb
pop
xchg
push
in
xchg
rolb
mov
mov
stc
inc
lock
cmpsl
addr16
lahf
dec
test
jle
lret
aam
add
mov
fiaddl
pop
mov
cli
fisubl
sub
into
insb
push
or
cmp
jp
sub
xchg
adc
jl
sbb
mov
hlt
dec
aas
xchg
mov
daa
mov
dec
scas
mov
jae
adc
dec
testb
outsl
push
loope
in
xchg
add
ret
stos
xor
test
sbb
push
jbe
mov
add
aas
jo
in
xor
imul
sysenter
mov
and
fisubs
jnp
cmp
jae
jmp
push
xor
test
shlb
sti
popf
in
in
sahf
pop
and
loope
push
shll
adc
rcll
das
jp
inc
lds
cmp
push
jns
ror
xchg
pop
fdivrs
pop
jl
dec
ret
mov
enter
or
sbb
nop
mov
fcomps
repnz
jbe
repnz
sub
fldcw
test
jle
sbb
lods
hlt
and
sub
push
pop
imul
jle
inc
and
or
std
popf
js
adc
dec
andl
push
addr16
les
mov
aam
jns
pop
outsl
dec
insl
mov
jnp
lret
fbld
fsubs
mov
mov
rorb
fnstenv
in
popf
fisubl
pop
mov
jnp
lock
xor
shlb
xor
js
dec
or
mov
dec
and
bound
fsubrs
scas
xchg
shr
hlt
mov
adc
movsl
push
or
lret
jno
add
add
mov
jns
mov
inc
popa
sbb
cmp
gs
pop
mov
cmc
pop
mov
shll
lods
and
sub
ja
mov
jmp
fcoms
outsb
adc
xlat
or
test
sub
xchg
and
inc
iret
jne
or
cmp
jo
mov
xchg
pop
jmp
xor
pop
loop
into
pop
fstp
xchg
mov
cltd
cld
je
inc
xor
xchg
test
sti
cmpb
cld
xchg
push
xor
in
or
fs
or
int3
fxch
push
sub
imul
test
jns
cli
jge
idivb
push
lods
notb
shr
mov
lahf
fsubl
clc
aaa
fdivrp
or
dec
jge
sbb
loopne
sub
xchg
pushw
inc
adc
mov
int
xor
stos
ds
push
in
std
add
imul
and
in
fsubrl
mov
ja
pop
mov
in
js
scas
mov
movsl
loopnew
mov
ja
stos
mov
push
stc
clc
mov
sbb
inc
jae
jmp
inc
sbb
and
mov
popa
insl
fists
adc
sbb
in
xor
imul
add
aas
out
pushf
xchg
add
adc
fstpl
mov
fdivp
sti
push
push
rorl
and
mov
adc
jp
cld
inc
iret
idiv
mov
dec
fldt
call
jbe
inc
xchg
cmp
test
dec
lea
mov
test
adc
dec
int
pop
mov
and
inc
xor
mov
adc
or
iret
ja
sub
fs
sbb
lods
push
addl
pop
test
inc
sub
mov
mov
clc
pop
mov
sbb
pusha
dec
pop
imul
inc
or
adc
lods
in
cmp
repz
test
cmpb
cld
push
inc
loope
imul
mov
jl
decl
push
rcrl
xchg
jmp
icebp
fsubs
xchg
into
push
and
push
stos
fwait
lahf
ss
jmp
rcrl
arpl
sbb
or
pusha
int3
push
mov
cs
into
add
mov
ja
mov
dec
lret
clc
out
xor
xchg
add
popf
ljmp
rclb
div
bound
mov
imul
dec
lcall
jle
sub
cmpl
hlt
pop
jge
lea
jae
jae
dec
cwtl
je
in
xor
mov
push
sub
dec
aaa
in
adc
fucomp
xchg
sbb
jg
pop
push
outsl
pushf
cli
arpl
dec
mov
xor
mov
rorl
lea
dec
jns
pop
and
fs
lods
cli
mov
aas
cmp
push
lahf
clc
in
ds
mov
rcrl
jmp
jp
mov
idivb
xchg
mov
jb
std
sbb
or
jl
inc
cmpsb
sub
push
mov
mov
sbb
dec
mov
inc
mov
movsb
lods
movsl
test
dec
and
and
push
push
out
inc
mov
sbb
sub
jb
pop
icebp
aas
cli
loope
cmp
pop
out
xor
cmpsb
xchg
sbb
dec
daa
cmp
sbb
lcall
jb
incl
icebp
mov
stc
push
scas
jmp
pop
sub
push
cmp
stos
shl
dec
xchg
mov
aas
lods
dec
scas
mov
push
and
sbb
icebp
sub
rcr
pop
nop
imul
testl
pop
fcomps
add
mov
inc
popa
gs
cmp
cld
sti
mov
sarl
ds
shll
insb
cmp
shrl
imul
sub
mov
fstpl
sbb
push
jmp
adc
fistps
test
imul
fisubrl
mov
test
ljmp
push
push
js
jns
in
imul
cwtl
xchg
or
dec
bound
add
ja
pusha
and
sti
jo
mov
sbb
dec
cmp
dec
lahf
cltd
in
xchg
cmp
inc
inc
lea
pusha
bound
stc
adcl
cmpsl
xchg
or
fcoml
fwait
gs
sbb
or
test
cmp
lds
push
mov
push
lods
xchg
mov
xchg
mov
sbb
mov
add
xor
test
fadds
and
fisttpll
push
sarb
and
into
scas
cmp
mov
jp
sub
push
je
jge
je
rcr
and
gs
fsin
jbe
inc
ficompl
xorb
pop
mov
cwtl
cwtl
xor
push
lret
gs
js
popa
arpl
mov
jle
out
cmp
mov
lret
jmp
popl
cmpsl
push
int3
pushl
and
xchg
sahf
xorl
or
sti
outsl
adc
and
push
loope
and
ljmp
outsb
mov
and
xchg
xor
jno
ret
aas
jb
repz
jmp
inc
loopne
cli
fs
in
xchg
ja
jnp
lea
movzbl
scas
push
icebp
out
sbb
cmp
and
leave
shlb
mov
push
mov
cmp
stc
std
test
mov
and
ret
add
ljmp
lahf
xlat
push
mov
push
ret
xor
stos
mov
clc
xchg
cmp
popa
adc
or
aad
lret
daa
in
sub
inc
mov
sub
mov
stc
testb
dec
mulb
cmp
bound
in
je
fisttpll
fmull
add
xchg
dec
pop
in
xchg
jle
jge
arpl
sbb
mov
sti
jbe
xchg
int3
fdivrl
dec
out
sub
fsubl
mov
paddsb
push
xchg
xchg
sti
mov
sti
jp
cmc
repz
push
cmp
xor
in
jno
scas
loope
out
push
arpl
stos
xlat
xacquire
popf
imul
push
movl
aam
mov
pushf
xor
inc
xchg
ljmp
xchg
lret
mov
clc
push
lahf
and
jp
pop
test
ret
cmpsl
mov
std
cmp
xchg
mov
cmc
add
mov
sub
sti
sbb
shl
push
mov
xlat
lahf
adc
xchg
cmpsb
sub
fildll
jg
jl
jge
into
daa
jbe
loopne
das
rcll
cmp
fisttps
mov
cmc
inc
and
dec
fisubrs
lcall
adc
push
dec
cmp
dec
push
call
pusha
adc
and
bound
je
in
outsl
inc
xchg
or
fnstsw
and
movsb
addr16
jns
divb
xchg
int3
inc
mov
clc
jecxz
div
push
sbb
pop
add
xor
outsl
sbb
pop
jg
mov
out
imul
mov
cmp
cld
cmpsl
shlb
jae
adc
inc
adc
fldl
inc
ja
inc
outsl
cmp
cmp
cmpsl
dec
ja
and
mov
insb
icebp
loopne
mov
jno
inc
outsb
and
add
mov
cmp
mov
push
fnstsw
into
xor
mov
bound
dec
sbb
jno
pop
ret
cmp
bound
pop
jae
and
int3
xchg
pop
pop
in
cmp
adc
data16
mov
inc
xor
xor
dec
mov
test
mov
jno
jecxz
pusha
dec
int3
adc
dec
mov
sub
in
lods
sbbl
ljmp
sub
xchg
cmp
xlat
mov
in
negl
mov
test
xchg
enter
sub
jp
sub
xlat
mov
mov
jb
mov
xor
mov
jmp
movsb
ja
pop
mov
into
jb
sub
das
lods
leave
inc
test
jmp
pushl
mov
add
dec
dec
mov
xchg
jae
pop
jno
mov
aas
mov
cli
add
scas
inc
test
idivl
js
mov
fcmovnbe
stos
cmc
std
les
vpavgw
mov
daa
cmp
jl
push
into
sub
mov
jbe
jecxz
and
inc
cmp
or
test
test
pop
scas
mov
pop
pop
loopne
sbb
mov
orb
pop
or
jnp
and
mov
outsl
rcr
out
mov
icebp
pop
mov
out
insb
sbb
insb
push
xchg
fdivr
bound
icebp
repnz
movsl
pop
mov
sbb
push
call
lret
lds
mov
shlb
pop
mov
sahf
push
mov
jno
cmp
cwtl
movsb
dec
adc
ret
adc
sub
daa
inc
in
mov
cli
sti
add
mov
cmp
mov
out
sbb
and
mov
jns
ret
xor
push
ret
data16
pop
ret
cmpl
jecxz
fs
das
lods
dec
pop
repnz
mov
pop
jmp
add
mov
mov
cld
iret
or
sbb
push
int3
cmc
push
aad
mov
push
dec
mov
add
in
sub
shlb
sbb
jb
jmp
jge
xchg
cmp
in
lock
jno
pop
sub
mov
inc
and
or
mov
sti
pushf
pop
push
cmp
xchg
jmp
jbe
aaa
es
loop
repz
pop
lock
and
dec
jb
mov
mov
cmp
cmp
test
xchg
mov
mov
imul
xchg
sbb
cwtl
nop
outsb
fcmovne
loopne
sub
push
push
xchg
mov
sahf
sub
repz
iret
mov
xchg
dec
pop
cli
pop
sbb
or
jl
imul
mov
sbb
or
add
mov
lock
bndstx
data16
mov
les
stc
lock
daa
loop
pop
add
mov
sbb
mov
in
sbb
ljmp
mov
push
mov
movsb
mov
adc
inc
inc
es
cs
and
cwtl
jns
sbb
jl
lods
mov
outsl
loop
jne
in
cmp
hlt
push
bound
out
push
shr
lock
loopne
cmova
jmp
mov
mov
lods
adc
mov
push
sub
jno
movsb
rcr
mov
and
popf
daa
movsb
loopne
sahf
mov
inc
mov
and
es
data16
fsubrs
xor
sub
orb
jbe
or
and
fnstsw
stos
andnps
rcll
jge
cmp
int3
icebp
add
sub
cmpb
jp
mov
subl
push
lock
xchg
das
push
outsb
add
je
jge
std
rcrb
mov
push
xor
and
scas
adc
and
xchg
xor
stos
mov
sub
js
push
xchg
stos
mov
insb
adcb
jne
daa
popa
aas
mov
data16
outsb
pop
jmp
icebp
jg
lods
mov
loop
movsb
lock
pop
mov
sub
xchg
lods
mov
push
mov
lahf
imul
in
call
mov
dec
outsl
sub
jns
fists
mov
les
mov
inc
leave
dec
arpl
xchg
xchg
fst
inc
jl
imul
lods
jge
jb
daa
sbb
movsb
jecxz
mov
dec
jbe
sub
and
sarl
mov
cmp
adc
sbb
cltd
push
lods
imul
outsl
hlt
pop
fwait
cmp
sti
mov
cli
in
and
xor
clc
in
jge
clc
and
cmpl
pop
out
pop
std
xor
and
lret
and
mov
pop
jae,pn
sbb
ljmp
add
movsb
rcrl
ljmp
repz
push
shl
adc
scas
movb
pop
push
mov
insl
add
loop
in
stc
sbbb
adc
mov
je
leave
push
push
add
push
adc
mov
int3
pop
xchg
mov
pop
jmp
hlt
mull
out
pop
mov
mov
out
les
xlat
and
lcall
frndint
or
push
or
mov
roll
ret
loopne
or
sbb
dec
mov
ror
aam
add
mov
enter
mov
cld
push
push
sbb
push
jl
push
repnz
cltd
xchg
xchg
dec
outsl
int
mov
repnz
lcall
enter
out
sub
hlt
dec
test
das
lock
sbb
inc
test
ds
mov
mov
stos
popa
cwtl
clc
mov
dec
xchg
aaa
int3
daa
mov
pop
jp
cmpsl
outsl
fdiv
add
test
push
sub
mov
fstpl
fwait
cmp
lret
mov
sbb
jbe
jo
xor
mov
imul
aam
cmpsb
js
out
idiv
fs
fisubrs
mov
dec
xor
cmpl
adc
adc
loop
shl
mov
add
sbb
arpl
dec
sub
int3
push
je
stc
mov
repz
mov
sbb
dec
std
mov
jge
sub
mov
lods
jg
add
pop
add
lahf
andb
imul
xchg
test
rorb
add
push
movsb
loop
mov
inc
sahf
push
imul
outsl
pop
sbb
sahf
or
or
or
cmp
adc
push
lock
scas
dec
xlat
pop
pop
and
call
cmp
pop
sub
xlat
pusha
lds
out
ret
push
jmp
add
mov
dec
jg
cmc
div
jge
adc
in
int
adc
pop
and
fistps
icebp
jb
push
adc
incl
adc
gs
pop
fwait
xor
push
xchg
ret
adc
pushl
push
stos
es
outsl
mov
adc
sub
mov
popa
inc
and
imul
lods
add
mov
lds
push
lahf
mov
leave
jnp
sub
xchg
or
add
xchg
call
adc
jmp
add
int3
or
test
xor
lcall
pop
dec
enter
cs
in
scas
mov
and
adc
add
and
xlat
jecxz
pop
loope
cmp
xchg
mov
mov
call
es
mov
pop
inc
xchg
jae
and
xchg
mov
insl
push
lcall
mov
jp
push
push
lret
cmpl
lock
je
cltd
mov
stos
call
adc
dec
ficoms
test
loope
in
xchg
sarl
sub
push
adc
sub
mov
lret
xor
das
sbb
test
mov
lea
lret
adc
sahf
les
daa
hlt
mov
lock
lcall
int3
repnz
or
pop
adc
xchg
add
scas
pop
into
mov
data16
mov
and
aad
rcl
cmp
in
add
shlb
jl
imul
push
mov
push
push
sub
cmp
frstor
add
mov
mov
test
jge
push
dec
mov
addr16
repnz
imul
sbb
les
mov
pop
xchg
pop
mov
jno
rorb
adc
arpl
cmp
mov
std
adc
pop
inc
repz
nop
dec
aaa
fsubrl
dec
stc
fsubp
inc
cwtl
or
push
loopne
mov
xchg
test
arpl
add
mull
cld
js
mov
jo
and
movl
mov
addr16
je
test
sub
dec
inc
imul
sti
cwtl
xchg
inc
mov
fwait
test
shll
sbb
mov
in
not
sti
repnz
or
in
xchg
pop
hlt
stos
nop
mov
movsl
pop
addr16
movsb
xchg
je
out
subl
push
subb
or
cmp
je
fsubr
sarl
pop
cmp
xchg
push
xlat
inc
dec
jle
cmp
loope
xlat
pop
adc
imul
test
enter
mov
pop
mov
mov
adc
fucomi
loopne
and
jmp
cmc
loop
lds
or
mov
jmp
pop
fstpt
scas
lret
push
mov
test
pop
cs
leave
and
push
lock
pop
mov
addr16
dec
sub
mov
or
jg
dec
lret
xchg
sti
jge
xchg
scas
sti
sub
pop
test
mov
add
push
and
add
push
lods
jmp
pushf
dec
jno
mov
adc
cmpsb
xchg
cmc
stos
mov
jns
loope
mov
out
repnz
movsb
add
xor
aad
mov
or
adc
or
pop
xchg
xchg
insl
or
in
gs
adc
out
mov
cs
push
loopne
xlat
xchg
cs
jne
jecxz
xchg
cs
xor
cmp
arpl
xchg
adc
int
rcrl
jge
jno
jle
or
jb
cli
movsl
xor
cmp
aam
jle
out
sbb
mov
push
out
lcall
addr16
lock
mov
push
addr16
pop
repnz
mov
push
lcall
dec
mov
imul
jae
xchg
mov
and
cmp
aaa
imull
test
leave
lea
imul
adc
adc
mov
push
in
add
push
xchg
icebp
cmpsb
pop
add
insb
and
or
push
ds
pop
sti
test
es
dec
xlat
jmp
push
or
test
mov
dec
mov
cmpsl
pop
push
push
mov
xchg
ds
adc
pop
movsl
jmp
ja,pt
inc
cmp
aam
mov
ljmp
call
and
mov
xchg
int
pop
fbld
in
nopl
mov
repz
fistl
imul
popf
out
cli
repnz
dec
loopne
lea
adc
mov
dec
fsubrl
int
rcrb
mov
xchg
stos
mov
je
inc
les
mov
or
mov
inc
or
adc
mov
stos
xlat
add
sub
cwtl
fiaddl
sbb
sbb
iret
out
and
dec
outsl
xchg
and
add
or
gs
push
stc
xorb
pop
sbb
shlb
or
mov
test
mulb
aam
sub
lds
xchg
in
pop
and
in
sbb
or
fidivl
xchg
mov
adcl
add
jp
sarb
pop
in
frstor
xor
and
xchg
lods
pop
inc
rolb
insl
jns
fldl
sbb
out
cmc
cmp
lock
inc
sbb
xlat
or
int3
pop
xchg
add
rclb
mov
loop
int
icebp
cmp
pushf
inc
add
pop
movsb
aaa
repnz
inc
mov
fmulp
adc
popf
je
dec
jne
test
lods
adc
xor
call
movb
divl
stos
mov
mov
sahf
faddl
sti
ss
add
cmpsb
jle
stos
jp
outsb
test
or
mov
jb
push
push
xchg
pop
mov
and
cmc
mov
or
jp
and
enter
or
addr16
jecxz
xor
push
fisttps
add
das
inc
in
sbb
dec
add
fcmovne
adc
sbb
fs
in
repnz
inc
jg
xchg
dec
adc
xchg
sbb
in
ljmp
pop
scas
call
push
push
jo
push
xchg
xchg
add
in
sub
cmp
data16
gs
jno
pop
pop
mov
cmc
adc
push
jns
repz
cmc
fcmovnbe
setns
mov
mov
scas
stc
leave
pop
inc
fisubrs
stos
add
and
mov
test
inc
aas
fcmove
cmp
scas
adc
mov
cmp
cmp
call
sbb
shll
xor
mov
jg
pop
sbb
xchg
out
aaa
or
mov
or
lock
aas
in
pop
cs
lcall
and
cmp
mov
cmp
xor
stc
xchg
into
cmpsl
lcall
add
mov
mov
lret
imul
mov
inc
pushf
rorb
jl
jge
or
sub
sub
notb
xchg
cmpsl
inc
icebp
mov
cli
repnz
push
mov
test
dec
xchg
inc
xlat
inc
mov
fadds
xchg
lds
xchg
cwtl
jl
in
aas
ljmp
pop
sahf
sbb
xchg
loopne
popf
dec
mov
push
insb
jg
push
pop
test
pop
inc
pushf
mov
jecxz
bound
lcall
insb
push
push
jae
in
sbb
insl
cmp
dec
dec
xor
jecxz
sub
sub
adc
lock
js
loopne
mov
mov
imul
fsts
mov
inc
scas
sbb
iret
sbb
nop
popa
jmp
pushf
stos
sahf
jns
es
insb
jbe
lahf
lcall
adcb
lds
mov
mov
add
neg
gs
insb
nop
insl
fldenv
push
sub
sub
inc
insb
dec
push
incl
into
repnz
xor
test
and
jnp
mov
gs
dec
lods
fwait
xchg
cmp
pop
jae
or
pop
xorb
std
orb
test
fists
mov
lcall
sbb
cld
in
shll
shll
leave
in
out
lock
ret
mov
xchg
xor
mov
fisttpll
mov
jmp
xor
pop
jp
add
ret
outsl
icebp
cmp
mov
fstps
lods
scas
sbb
sub
andb
or
cld
aas
push
or
mov
adc
shlb
pop
insb
mov
pop
fdivrl
addr16
mov
mov
pop
bnd
rcrb
pop
sbb
fcmovnbe
mov
bound
cmpsl
ret
adc
loope
xor
jne
dec
push
pop
cmpsl
test
je
cmp
int
sbb
cltd
lcall
jmp
mov
iret
aam
lods
es
mov
dec
test
call
in
test
add
hlt
push
cmpsb
mov
dec
decb
or
fisttpll
and
js
push
and
fstps
xchg
aas
mov
sub
pop
in
enter
stos
arpl
sub
sbb
and
inc
insb
inc
jge
mov
sti
push
ss
cmp
jne
lcall
xchg
add
xor
fildll
mov
push
jle
mov
lds
pop
inc
adc
mov
sbb
or
inc
stc
mov
push
cs
push
aam
mov
dec
or
push
sahf
adc
pop
test
mov
rclb
das
cld
cmp
add
ljmp
popf
mov
jp
stos
jecxz
mov
jns
push
stos
filds
push
push
movsl
mov
mov
xchg
and
dec
js
sti
add
gs
xlat
and
ret
xchg
jns
add
and
movsb
cmp
or
cmp
add
cmp
dec
and
popf
xchg
xor
insb
sub
mull
out
fcomps
add
ret
or
enter
push
pop
add
js
push
inc
ljmp
mov
mov
xchg
imul
xchg
repnz
mov
push
push
insl
push
hlt
and
js
sub
sbb
xchg
mov
or
and
pushw
cli
gs
mov
xor
aam
inc
out
lock
in
daa
shll
inc
test
cmp
pop
je
jge
cmpsb
js
jne
inc
inc
aas
or
data16
shr
dec
jmp
inc
fdivr
push
xchg
test
sbb
pop
and
fiaddl
je
or
mov
push
fsubrs
xchg
fisttpll
mov
fdivl
cs
pop
or
dec
pop
or
sub
cmp
repz
repz
sbb
fxch
ret
outsb
jge
and
xchg
mov
mov
insl
ret
ret
add
shll
dec
cmp
pusha
pop
xchg
clc
pop
xchg
arpl
std
cmp
stos
stos
cwtl
xor
adc
lahf
cmp
pop
bswap
hlt
mov
cmp
mov
scas
dec
mov
jbe
xchg
fs
outsl
movsb
pop
sti
push
scas
mov
push
aas
push
cmpsl
out
loop
rclb
pop
test
jae
mov
lret
pop
pop
cmp
popa
inc
in
mov
leave
mov
xchg
imul
add
or
or
dec
jno
out
jmp
pop
fbstp
les
enter
sub
add
mov
sbb
stc
test
stos
sbb
xor
movsl
push
xchg
inc
cmpsl
xchg
fidivs
cmp
stos
xor
and
sub
aas
push
out
xchg
ss
rcll
cmp
xor
inc
rcrl
dec
fldenv
jmp
fxtract
add
jnp
ss
add
fdivrl
inc
mov
jle
test
aas
repz
ds
adc
mov
sbb
and
xor
pusha
dec
mov
or
icebp
movsb
pop
adc
addr16
and
mov
xchg
in
out
mov
mov
arpl
pop
insl
out
lcall
mov
mul
stos
sahf
dec
iret
add
into
mov
adc
test
xor
icebp
jnp
jb
test
shlb
sbb
cmp
cmp
fld
scas
push
xchg
ljmp
xchg
or
jecxz
sub
mov
and
imul
dec
add
sub
or
push
iret
test
rep
pusha
daa
sbb
cmp
leave
mov
dec
insl
xchg
cmp
jno
mov
or
scas
cmpsb
pop
mov
sub
je
xchg
mov
cli
js
call
subl
pop
shrb
dec
in
mov
mov
ljmp
test
mov
jmp
and
mov
lret
pop
pusha
cs
sti
add
push
std
inc
cmpb
jp
mov
or
cmp
mov
fbstp
stos
mov
sti
dec
insl
pop
xchg
stos
rolb
mov
imul
jno
sahf
mov
mov
cmp
jae
pop
cmp
jns
loop
xchg
xchg
or
nop
out
mov
popf
and
pop
jg
adc
pop
cltd
icebp
xchg
test
ljmp
ror
mov
mov
dec
sub
mov
jecxz
lea
push
inc
je
mov
fwait
adc
clc
daa
xor
push
in
clc
push
and
inc
pop
ficoms
jg
scas
sub
mov
sahf
push
pop
cmpsb
mov
lods
mov
add
jns
jnp
aaa
add
les
add
jle
xchg
jnp
inc
inc
int3
or
pop
test
cmp
dec
icebp
sbb
sbb
mov
push
mov
test
mov
or
or
pushf
adc
pop
aad
in
sbb
test
dec
sub
shrl
jae
int
dec
fmuls
bound
dec
das
andb
mov
cmpsl
call
dec
adc
pop
inc
jg
mov
pop
lock
in
xchg
sub
add
push
lret
aam
xor
jp
mov
ljmp
nop
lods
sbbl
mov
add
mov
insb
ret
and
arpl
mov
cmp
ss
xor
sbb
mov
pop
ss
pop
jg
mov
gs
inc
and
into
adc
divl
jmp
jmp
jecxz
repz
mov
mov
pop
mov
jbe
push
push
mov
in
add
pop
imul
mov
push
in
rorl
jno
xor
pushf
dec
push
dec
cli
add
lret
mov
addr16
imul
ss
lds
ret
out
gs
xor
xchg
push
mov
lods
add
add
inc
mov
stc
mov
insl
shll
mov
jno
push
jmp
mov
lds
dec
push
sub
xor
je
xchg
imul
add
pop
xor
pop
movsb
adc
ljmp
or
xor
jae
mov
es
sub
scas
in
fwait
rcr
mov
jb
xchg
cmpsl
add
stos
inc
insb
xchg
pushf
cmpb
fstl
sahf
cmp
adc
loopne
mov
pusha
loopne
cli
and
cs
mov
aas
pusha
dec
mov
bound
mov
xchg
and
push
push
ja
call
in
fdivrl
fs
xor
cmp
cmp
cmp
cmp
push
repz
call
or
mov
rorl
callw
test
cmp
loope
repz
push
das
push
sbb
aam
ljmp
dec
sub
xor
decl
rol
mov
les
mov
xor
jl
cwtl
adc
jae
or
dec
mov
hlt
add
cmpsl
pop
jo
mov
cmp
icebp
fs
mov
jbe
fidivrs
scas
bnd
ja
cmp
aaa
outsl
inc
inc
mov
mov
imulb
cs
fimuls
int
or
cmpsb
cmp
pusha
stos
clc
pop
call
mov
mov
movsb
mov
inc
cmp
test
scas
addr16
xchg
scas
es
cmpsb
pop
imul
and
ffreep
or
mov
mov
sub
scas
sarl
insl
xchg
pusha
addr16
mov
ja
cmp
cli
repz
rcr
sub
rclb
mov
jbe
push
mov
repnz
push
sahf
mov
inc
out
mov
test
inc
pop
xchg
xor
jno
insb
ja
stc
movsl
jmp
push
cmp
orl
jnp
adc
and
pop
jg
or
clc
mov
xchg
xchg
mov
xor
add
push
inc
int
stos
ljmp
mov
stos
pop
mov
sub
inc
test
pop
jl
pop
inc
or
jbe
add
hlt
insb
stc
hlt
or
je
dec
push
push
and
dec
xor
test
add
out
stc
and
push
mov
dec
pop
push
shll
call
lret
int3
xor
arpl
inc
es
xor
add
stc
cmp
data16
and
cwtl
push
push
mov
cmp
xchg
add
sub
mov
dec
pop
sarl
out
sbb
sub
cmc
js
test
or
jne
aam
inc
pop
clc
pop
sti
es
mov
and
filds
stos
jecxz
test
jbe
lods
dec
int3
adc
cwtl
call
dec
mov
fcmovu
jge
and
dec
mov
mov
fsubl
lods
dec
mov
es
push
xchg
sub
lock
lcall
gs
pop
jns
int
mov
test
rcll
inc
or
sarl
and
mov
pop
movntps
mov
add
sarb
cmpsb
inc
and
cvtpi2ps
mov
adc
mov
sbb
scas
xchg
mov
sbb
das
or
add
dec
xor
add
mov
fstp
scas
out
sub
add
testb
testl
sub
dec
movsb
gs
aad
dec
push
or
sub
xor
sub
or
sub
es
pop
add
or
mov
lds
test
jle
cli
mov
int
aaa
mov
lea
mov
scas
pop
addb
and
mov
movsl
sub
pop
repz
stos
js
shrl
mov
lods
daa
jb
lret
add
ret
enter
int
cmp
jb
arpl
outsl
and
cmp
inc
hlt
aad
in
push
push
imul
icebp
adc
add
mov
and
inc
pop
pop
push
sub
mov
pop
pushl
arpl
pop
movsl
dec
pop
or
fs
iret
cli
in
pop
jp
push
mov
ret
cld
ja
push
lods
pop
hlt
into
mov
mov
outsb
fwait
xchg
fistps
js
cld
sbb
bound
push
loope
in
cmp
in
mov
aad
xchg
dec
scas
iret
jno
and
adc
push
lea
in
or
lea
xor
inc
mov
leave
sub
cmp
and
sbb
xor
and
lods
adc
iretw
inc
mov
sbb
inc
adc
and
mov
into
lret
scas
ret
mov
into
push
fstps
dec
ljmp
sbb
xlat
or
fidivrs
or
sub
in
mov
cmp
inc
hlt
sarb
into
jbe
iret
icebp
stos
into
xchg
add
and
rorb
das
push
mov
js
jmp
or
sbb
repz
in
bound
insl
insl
mov
adc
lret
movsb
fstps
into
dec
lahf
dec
loope
scas
mov
cmp
xchg
sbb
mov
sbb
jnp
jl
aas
inc
push
sub
mov
cmp
jne
push
xchg
je
cmp
dec
or
sub
adc
cltd
or
xor
test
cmp
pop
push
mov
aaa
jo
sarl
jb
fiaddl
iret
cmp
imul
popf
sbb
mov
test
dec
mov
inc
mov
xchg
hlt
lret
push
dec
add
cmp
out
inc
push
aam
push
inc
scas
jmp
mov
xor
repnz
test
and
roll
xchg
xor
xchg
mov
push
andb
cmp
call
add
sub
push
mov
inc
add
adc
mov
scas
testb
dec
outsb
pop
fsubrs
cwtl
pop
jb
sar
dec
lods
icebp
ret
iret
cmpsl
ret
pop
jg
movsb
imul
pop
mov
xor
and
cmp
cmp
mov
sbb
xchg
lcall
fstps
js
rcll
jnp
mov
cmc
gs
add
int3
jg
xor
push
jl
and
pop
imul
mov
shll
fs
sbb
sub
pop
icebp
mov
mov
sbb
cmp
lods
popa
mov
pop
shrl
fldl
ss
hlt
fdivr
data16
mov
xor
test
mov
arpl
cld
ss
into
xchg
mov
mov
ret
mov
adc
cld
fs
and
and
sbb
inc
clc
popl
dec
scas
jo
pushf
ds
add
mov
outsb
adc
je
mov
divl
pop
xchg
in
xor
and
pop
xor
or
bnd
mov
cld
nop
leave
mov
negb
lea
das
mov
jnp
add
jmp
or
mov
sub
fildll
mov
es
rolb
dec
es
mov
movsb
scas
neg
jne
mov
pop
fiadds
cmp
popa
outsl
and
rcr
es
mov
movsb
lds
leave
mov
mov
inc
cld
dec
mov
test
fldl
jl
push
pop
pusha
mov
jecxz,pn
mov
mov
xlat
out
loopne
shrl
icebp
cmp
lds
push
shl
mov
outsl
lret
mov
mov
sbb
add
xchg
mov
cmpsb
add
movsb
xchg
shlb
test
push
je
iret
aad
jnp
cmpsl
pushf
adc
push
ss
stc
mov
cltd
fisttps
xchg
jl
jne
xor
leave
fsubl
mov
mov
iret
loope
je
pop
add
sbb
rcl
sarb
inc
cmpsl
jno
sarl
inc
enter
loope
dec
popa
sbb
lahf
jno
cmp
ficoml
fxam
mov
stos
in
or
cmp
push
aam
mov
adc
je
in
xchg
jle
mov
popf
lret
push
aaa
jb
repnz
add
outsb
stos
stos
sbb
cltd
add
cwtl
dec
adc
inc
test
fldl
or
push
sbb
adc
push
jns
fisubs
sti
aaa
and
bound
mov
pop
add
push
cli
lcall
dec
imul
mov
rclb
xor
adc
pop
pop
jno
pop
testl
inc
sub
orl
dec
arpl
movsl
imul
popa
mov
rolb
into
sarb
movsb
movsb
in
aaa
cld
inc
jo
pop
sbb
mov
out
or
jae
mov
or
jmp
cmpl
lds
push
xchg
push
push
daa
inc
inc
mov
push
jae
adc
dec
push
rolb
push
in
scas
dec
xor
adc
dec
in
add
push
rolb
lds
lods
cmp
xchg
xchg
daa
and
jo
dec
shlb
and
or
pop
aam
divb
daa
pusha
mov
imulb
xor
sub
imul
push
pop
lret
pusha
mov
add
arpl
mov
rorb
mov
cli
xchg
ret
xor
cmp
cmpsl
add
sbb
or
lods
and
shlb
addb
or
ror
push
jae
pusha
sahf
mov
icebp
sbbl
stos
lds
add
sub
loopne
mov
aam
jb
ja
cmp
cmp
sarl
push
mov
hlt
mov
nop
jl
in
stos
xchg
stos
fnstcw
mov
stos
cltd
arpl
ljmp
imul
jbe
and
enter
out
hlt
xchg
aaa
fisttpl
mov
add
das
out
mov
cmp
loope
sbb
daa
enter
push
lret
in
mov
xor
pop
jl
xchg
sti
push
jbe
mov
loop
shr
xchg
out
mov
xchg
or
lods
mov
xor
dec
dec
inc
xorb
dec
xchg
xorl
dec
insl
jl
stos
sbb
test
fbld
and
pusha
mov
popf
mov
dec
jge
je
push
xchg
movsl
xchg
sbb
inc
insb
cmpsl
call
mov
imul
xchg
dec
les
mov
dec
repz
js
lock
movsb
jne
dec
cmpl
xor
xchg
sub
xor
pop
clc
cmc
mov
lret
or
push
fld
and
cwtl
cmp
push
sub
adc
cs
aam
mov
shrl
ret
and
mov
fcoml
call
lahf
jno
ja
testb
daa
xlat
jns
mov
scas
cmp
sub
inc
mov
ficomps
pop
sub
mov
ljmp
pop
xor
mov
ret
clc
movsb
mov
insb
mov
pushf
in
dec
push
add
mov
decb
cmp
test
stos
mov
ficoml
sbb
xchg
push
inc
js
fdivs
push
fisubrs
jb
pop
pop
mov
ret
sbb
adcb
mov
sub
scas
out
std
scas
hlt
or
mov
gs
sbb
mov
or
int3
lds
and
loope
cltd
xchg
pop
mov
aas
daa
addr16
cmp
mov
xlat
fucomi
divl
out
jnp
dec
cmp
fucomi
lahf
inc
cwtl
sahf
out
sub
in
cld
xchg
ret
les
cmp
fstpl
sub
pop
jae
push
js
lds
jg
test
mov
or
fs
add
mov
mov
mov
dec
scas
mov
or
shl
mov
sbbl
mov
and
dec
aas
push
cmp
push
mov
add
jmp
scas
fistpl
aad
loopne
pusha
inc
icebp
xchg
inc
fs
stos
jnp
aas
or
adc
jo
or
clc
loop
mov
icebp
mov
jl
pop
mov
outsb
in
fsubl
sti
test
mov
push
xchg
and
jmp
mov
mov
int
cmp
divb
insl
and
mov
fs
jns
xorb
fsub
cli
iret
std
mov
scas
inc
dec
jecxz
and
lsl
out
mov
out
fwait
mov
sub
or
jbe
je
dec
xchg
mov
negl
pop
pop
fidivrs
inc
fcmovne
lea
pop
fcoml
mov
and
aas
loope
mov
imull
aad
jns
adc
jo,pt
mov
xor
xchg
mov
sub
sbb
xor
cli
inc
dec
add
or
sti
sbb
or
pusha
aas
loope
popf
enter
cmp
jp
or
fiadds
cs
xlat
jge
inc
cmp
imul
gs
cmp
inc
addb
pop
in
xchg
std
movsb
pusha
fcomi
sbb
add
mov
mov
fidivrs
pushf
cmp
iret
cmp
or
std
test
xchg
sahf
or
lea
aad
int
mov
mov
test
lock
adc
cmp
and
fildll
or
mov
dec
dec
xor
aam
divl
test
mov
xchg
mov
hlt
cmp
movsl
movsl
lea
or
and
loop
and
lahf
outsl
mov
adc
insb
pop
out
lret
jp
push
mov
push
fstps
adc
enter
push
dec
add
xor
mov
and
adc
inc
imul
mov
xor
sub
pop
orb
adc
ret
add
cmc
xchg
or
push
xchg
mov
jecxz
fmuls
ljmp
xor
or
movsb
cmp
je
mov
ds
jmp
xchg
and
sahf
pop
sub
and
jbe
int
test
add
das
mov
es
insl
adc
sub
clc
xchg
movsb
mov
int
aad
sbb
push
adc
int3
push
adc
add
sbb
jae
jne
es
adc
test
inc
and
xchg
cmp
dec
jge
or
jbe
mov
lcall
push
xor
jmp
or
mov
fdiv
mov
push
sbb
jg
xchg
test
mov
xor
cmpsl
cmp
dec
and
imul
mov
xchg
dec
dec
out
mov
pop
and
sub
add
pop
xor
fcmove
int
add
pop
outsb
popa
adc
pushf
lahf
in
jmp
aaa
add
mov
pop
cmp
jb
dec
add
push
aaa
mov
mov
sub
or
and
aaa
sahf
mov
scas
iret
push
les
mov
inc
leave
mov
adc
push
sub
int
insb
xorl
xor
push
mov
in
mov
outsb
lods
pop
addr16
aad
sbb
je
push
xor
in
fisubs
add
fstl
sbb
fisubl
mov
xor
imul
pop
xchg
push
and
or
jmp
cmpl
push
ljmp
adc
jmp
dec
push
subl
lret
daa
and
in
xchg
dec
xor
gs
aaa
add
push
ja
in
int
call
cmp
inc
addr16
push
xor
fimuls
fwait
jmp
mov
add
cmpsl
sbb
out
mov
and
lds
add
xchg
sbb
push
or
fcompl
pop
dec
push
xor
or
imul
test
arpl
ljmp
xchg
lret
aaa
jo
jge
out
xor
xor
cld
mov
outsl
push
mov
jmp
scas
sbb
adc
stos
dec
lds
sbb
mov
enter
filds
push
dec
shr
sahf
adc
insl
adc
push
push
ret
aam
jae
inc
cld
dec
out
and
scas
jbe
mov
divl
gs
test
sub
push
outsb
sbb
mov
pushf
push
ljmp
sbb
mov
push
fdivs
push
enter
insb
inc
call
inc
pop
sub
xchg
lods
sbb
into
bound
outsb
or
addb
pop
lahf
inc
imul
add
mov
sbb
jp
icebp
test
sarl
ret
lahf
fsts
inc
sub
inc
mov
nop
cld
pxor
out
add
push
ds
add
rcll
add
lea
lret
add
add
adc
andl
add
push
mov
icebp
pop
test
sbb
lea
add
jge
in
add
cltd
ljmp
xchg
add
adc
cmp
ss
add
cmc
in
add
lcall
add
jb
add
add
and
fwait
xchg
lea
int3
ror
add
aaa
daa
dec
push
outsl
sbbb
dec
ja
jb
pop
mov
add
scas
je
mov
in
mov
mov
stos
add
gs
scas
es
pause
sub
scas
mov
sub
add
or
inc
lds
add
outsl
outsl
dec
add
or
add
test
stc
mov
add
cwtl
jl
add
popa
lods
adc
add
out
xchg
out
movsl
xchg
add
xor
test
add
sub
les
add
xor
aad
mov
add
xchg
add
pop
xor
push
add
xchg
mov
add
xchg
dec
movsb
add
jge
movsb
jg
pop
outsb
les
jns
stos
push
inc
sbb
add
insb
fadd
in
pop
push
pusha
xchg
loope
mov
and
shlb
roll
movl
mov
leave
addr16
mov
mov
add
add
add
scas
and
movsb
add
sti
xchg
push
lods
mov
iret
mov
flds
nop
pop
sub
push
mov
or
sbb
std
mov
add
pop
mov
add
mov
add
in
push
repz
inc
add
sti
movsb
out
call
jns
mov
add
test
cmpsl
pop
jp
testl
mov
pop
fidivrs
ror
push
pop
xchg
push
testb
add
iret
aad
cld
add
sub
lds
jno
stos
into
ret
adc
out
in
xchg
add
xchg
jae
cmpsl
rolb
lds
add
push
dec
add
add
or
jo
cmpsl
mov
xchg
add
hlt
rorl
incb
sbb
jne
add
or
and
pop
imul
clc
jno
and
mov
pop
in
mov
pop
jnp
jl
repz
orb
jbe
lret
stos
or
inc
push
arpl
shl
push
imul
mov
adc
out
inc
fs
test
or
fwait
and
xor
sbb
cld
inc
sarb
out
jp
sbb
pop
fdivr
mov
leave
test
add
xchg
adc
pop
add
jp
add
xor
pop
aaa
jno
inc
lods
add
mov
das
int
lods
add
dec
push
add
test
frstors
jnp
jbe
add
pop
outsb
xchg
daa
add
sldt
xchg
jmp
cmc
mov
add
in
sbb
push
xchg
push
test
out
xor
repz
ljmp
lret
dec
nop
jns
or
dec
fcompl
add
jmp
dec
add
add
jp
mov
jb
invd
int
add
add
popa
pop
in
add
dec
outsl
xchg
add
fiadds
add
sub
sub
jle
add
cmp
pop
jnp
sbb
xchg
or
sarb
jbe
push
sub
push
mov
pop
xor
inc
movsl
push
js
cmp
adc
jle
stc
push
push
or
or
add
out
cli
mov
push
mov
test
and
xchg
add
lds
pop
mov
add
jnp
stos
dec
test
push
cmp
sub
jge
xchg
loop
push
xor
lcall
sti
movsb
push
cld
sahf
pop
int3
adc
jo
sub
add
lods
xor
push
mov
scas
lret
add
mov
and
sub
xor
add
cmp
add
sub
pop
jp
rolb
fldl
push
add
add
push
or
xchg
jbe
add
xor
pop
add
outsl
inc
test
add
add
aad
add
jae
mov
xchg
gs
xchg
ljmp
jbe
xor
sbb
lcall
pushf
mov
inc
jbe
pop
jo
icebp
int
lds
xor
jl
sub
xlat
scas
and
cmpb
inc
push
loopne
mov
fdivrs
mov
add
push
insl
add
jns
arpl
in
xor
add
or
dec
add
cmp
cmpsl
dec
add
data16
add
pop
add
aam
add
pop
sub
pop
lret
push
aaa
add
mov
call
add
adc
ja
xchg
inc
lahf
cmp
xchg
fs
in
scas
mov
push
adc
mov
call
push
or
push
ret
add
or
push
add
mov
add
sbb
push
dec
dec
dec
push
add
add
aad
sti
and
push
add
inc
int3
mov
mov
cs
add
mov
push
inc
add
lods
fucomi
add
adc
scas
xor
push
adc
iret
jl
add
clc
push
ffreep
push
add
sti
or
inc
add
add
test
adcl
mov
mov
jb
stos
ficoms
adc
repz
and
add
and
test
fiaddl
dec
or
popf
add
jbe
push
add
out
add
jecxz
pop
adc
dec
pop
add
push
fcmovu
stc
add
loop
fldl
xor
add
xchg
pop
hlt
out
sahf
mov
adc
xchg
ja
mov
movsb
jle
add
inc
fistpl
lods
pop
bound
xchg
add
sar
dec
daa
add
mov
sahf
sub
cmp
sub
add
sar
js
inc
fisubrl
jmp
shll
add
lahf
xchg
cltd
cmp
stos
and
lds
jae
push
cmp
add
sbb
cmp
in
fdivl
add
aaa
movsb
mov
dec
jae
and
popf
es
add
cs
jp
add
adc
lds
ljmp
sbb
pop
je
sub
inc
add
push
clc
std
and
cmp
imul
inc
xor
push
add
cmc
jnp
out
add
add
push
dec
add
add
or
add
in
inc
dec
and
push
add
sti
movsb
mov
sbb
add
fildll
add
jg
push
pop
roll
and
xchg
rcrl
inc
pop
xchg
sarl
dec
cli
out
add
push
mov
pop
in
leave
aam
outsb
cltd
ror
add
push
addl
test
add
aaa
insb
mov
add
xor
pop
dec
andb
dec
xchg
out
sub
add
rclb
sub
cmp
add
movsb
sbb
insl
rcrb
add
sar
xlat
ret
mov
add
xor
mov
xorl
mov
in
ficoml
sub
add
add
mov
add
mov
xor
ljmp
add
add
pop
aad
add
xchg
add
add
arpl
add
lds
repnz
add
add
push
xor
add
fstpl
shlb
sbb
adc
sarb
imull
frstor
cld
frstor
push
mov
sbb
and
or
and
push
add
inc
pop
call
jo
or
add
add
jge,pt
mov
add
xchg
insb
mov
push
ja
lret
data16
je
fildl
add
sbb
add
mov
xchg
add
inc
insb
std
inc
insb
mov
pop
rcl
mov
and
xor
aaa
jl
mov
add
cs
hlt
call
cld
int
bnd
mov
or
adc
test
call
add
jl
lcall
lock
push
dec
movsb
into
dec
xchg
cltd
rorb
adc
mov
imul
xor
jns
mov
and
ret
jg
cmc
inc
mov
pop
add
pop
js
sub
test
jb
in
out
jbe
add
jmp
hlt
bound
and
sarl
add
xchg
test
lahf
rorl
int3
jbe
inc
xchg
cmc
mov
add
xlat
adc
les
add
xor
add
add
lods
hlt
pop
lret
push
je
mov
add
mov
cmpsb
xchg
jmp
add
fwait
mov
ds
fsubrs
fisubrl
or
shrb
push
dec
dec
cli
frstor
scas
and
add
shr
pop
out
cmp
push
cli
mov
mov
pop
adc
lods
negl
imul
push
pop
dec
lret
ljmp
in
pop
dec
mov
add
xchg
movsl
or
imul
or
pop
test
mov
bnd
jo
cs
xchg
cli
out
pop
add
xor
mov
sub
ret
notb
xchg
add
add
cmpsl
add
add
cmpb
xor
inc
sbb
movsl
leave
je
add
stos
add
add
mov
add
imul
push
push
xor
cmpsl
sub
scas
ret
movsb
fstl
xchg
mov
popa
in
add
jns
and
push
int3
fiadds
ljmp
ds
and
sbb
and
loope
inc
rcl
push
push
loopne
mov
js
add
jns
lret
fmulp
mov
add
sub
inc
cmc
add
enter
mov
inc
bound
mov
std
pop
push
js
in
sub
fs
fdivrs
xchg
fisttps
scas
push
shrl
mov
add
jmp
jecxz
cmc
bnd
jmp
and
sub
add
fnsave
or
cmpl
inc
push
or
mov
push
pop
sti
int3
ss
ss
mov
sub
cld
xchg
add
add
inc
mov
push
add
push
jp
sub
xlat
cmp
movsb
stc
mov
add
add
cli
or
and
out
decb
loop
fistpll
fistpll
jo
aaa
and
and
dec
daa
jnp
pop
sbbb
test
push
scas
fisubl
add
enter
or
adcl
shl
dec
sbb
fs
or
clc
cmp
data16
mov
mov
das
je
lock
adc
mov
adc
addr16
out
and
inc
fs
ret
cmp
movzwl
cmpsb
nop
out
pop
sbb
out
jbe
add
adc
fldt
jecxz
or
adc
repnz
sbb
decl
add
add
adc
ret
xor
xor
add
add
add
fst
or
fiaddl
sub
aaa
int3
cld
sub
testb
mov
out
sbb
fldt
xchg
xchg
mov
dec
inc
xor
add
outsl
or
test
mov
mov
mov
dec
neg
pop
enter
jle
mov
or
sub
mov
pushf
lds
cmp
test
mov
jmp
bound
movsb
movsb
add
xchg
cs
cs
dec
mov
dec
lock
and
stos
xchg
adc
push
add
shll
dec
sbb
insl
jge
add
xchg
mov
enter
inc
xchg
add
mov
aad
dec
add
dec
test
loope
jns
out
pop
js
or
test
shlb
arpl
add
repz
test
xor
int3
cltd
adc
shrb
or
add
cmp
sbb
add
xchg
sub
mov
add
add
add
popa
adc
pop
dec
pop
loop
pushf
shll
fistl
imul
stc
sub
inc
movb
ja
mov
add
les
sub
add
movsb
and
dec
xchg
add
loope
jecxz
icebp
add
cltd
dec
push
shll
mov
leave
push
cmp
and
add
mov
mov
add
add
push
mov
dec
sub
jle
pushf
repnz
sbb
sbb
int3
mov
add
add
rolb
insb
mov
shl
pop
add
jns
arpl
inc
loop
mov
int3
stos
and
mov
pusha
popf
adc
call
in
xor
test
idivb
inc
fcomps
aad
add
push
add
jge
adc
movsl
stos
cmp
rclb
push
push
jbe
jl
std
xor
das
add
dec
pop
pop
popa
jae
pushf
dec
jnp
jg
sbb
test
mov
push
sub
add
mov
cmp
imul
mov
stos
mov
mov
aam
add
sub
jl
or
insb
cmp
cmpb
movsb
jp
mov
lock
inc
dec
vmovlpd
movsl
mov
mov
mov
dec
mov
pop
xchg
push
jno
sbb
dec
cmp
adc
mov
sbb
cmp
push
and
rorl
sti
lods
mov
in
je
sahf
sbb
mov
imul
outsl
sub
xchg
call
add
mov
incb
inc
aam
pushf
pop
mov
lret
cmp
push
add
aas
movsl
in
das
xor
add
and
xchg
cmc
cmp
or
and
jne
ss
push
cmc
scas
push
jns,pn
lcall
pop
fnsave
fldcw
cmp
inc
or
or
mov
stc
sbb
add
cmc
pop
and
xchg
popa
scas
mov
lahf
rol
push
add
loop
aaa
cmpsl
addb
pop
inc
add
and
adc
jo
in
add
sub
xor
scas
cmc
push
push
cmp
sbb
push
jo
mov
fsubp
push
fs
movsb
insb
sbbb
add
add
test
push
push
test
test
mov
xchg
fcoml
dec
hlt
clc
dec
mov
add
shlb
sub
lods
inc
fisubrl
and
jnp
mov
js
in
repz
call
mov
push
jmp
and
fimuls
in
mov
cmp
pusha
filds
mov
cmp
mov
sbb
add
mov
aad
lea
and
adc
sub
in
mov
xor
out
add
adc
in
lods
sti
fildl
push
flds
pop
addl
push
cmp
addr16
jge
shrl
mov
js
xchg
mov
jecxz
add
insl
pop
ja
test
aas
and
or
or
mov
lods
sti
sub
mov
int3
clc
insl
xchg
add
lea
add
jbe
icebp
jns
jb
inc
add
add
add
lods
dec
xchg
xor
push
dec
icebp
mov
aam
cmpb
test
add
cwtl
cmpsb
int
xor
xchg
inc
push
mov
jns
xchg
mov
push
add
pop
xchg
mov
icebp
add
and
icebp
or
push
jmp
sub
sbb
adc
adc
lds
bound
addb
push
inc
outsb
ss
mov
fidivl
and
int
add
pop
stos
or
sub
add
int3
or
add
add
dec
es
add
mov
add
or
popa
int
add
ret
bound
lret
flds
fstpt
std
int3
pop
add
add
add
arpl
pushf
int
add
fistpll
pop
mov
add
mov
mov
test
add
mov
add
add
add
pop
or
mov
cmp
adc
mov
in
mov
jbe
mov
jmp
add
mov
test
pop
xor
add
insb
mov
push
imul
mov
jge
inc
sub
arpl
fcompl
test
mov
push
add
jge
or
int
nop
aas
sbb
pop
push
rcl
mov
cmp
add
mov
jno
xor
add
setne
xchg
out
out
or
fildll
xlat
ljmp
scas
xor
repz
jno
mov
xchg
add
popf
dec
xor
addb
jae
dec
lods
lds
add
popa
out
sub
arpl
lret
push
fwait
in
sbb
add
scas
mov
add
into
cli
or
inc
jns
add
divl
push
cwtl
mov
add
xchg
ret
add
push
imul
sahf
fisttps
add
push
add
pop
push
and
mov
add
xor
push
adc
shll
cmpsb
add
add
ret
sub
add
icebp
lds
jno
add
add
pop
sbb
outsb
lods
lcall
jle
mov
roll
test
dec
mov
pusha
lcall
jo
or
mov
add
insl
rcrb
push
mov
add
lods
scas
jmp
mov
add
ja
add
mov
imul
mov
dec
cmp
out
out
add
or
stc
outsb
je
pop
iret
push
xchg
jno
add
mov
mov
mov
mov
add
add
or
adc
pop
in
sub
insb
lock
aas
add
aam
fsubs
or
bound
xor
xor
ret
push
add
push
inc
pop
and
mov
add
sub
add
inc
dec
pop
adc
add
aaa
pop
dec
add
add
les
jmp
cmp
adc
or
mov
mov
add
inc
add
jno
sub
add
lock
jmp
add
jmp
ret
dec
xor
add
add
jo
mov
add
loopne
lods
pop
xchg
into
add
add
mov
inc
sub
ret
inc
pusha
cmp
adc
stc
mov
stos
into
jne
fadd
movsl
add
and
fiaddl
xchg
mov
pop
or
and
xchg
add
inc
mov
cmpl
dec
les
add
xchg
lock
lret
mov
xchg
xor
xlat
pop
pop
sbb
repz
adc
out
add
and
add
pusha
in
cmp
add
or
addr16
rolb
and
test
pop
ret
xchg
gs
flds
ret
pop
cmpsb
xchg
insb
add
jecxz
sbb
add
and
push
push
in
out
mov
ja
mov
mov
mov
add
lock
add
add
adc
add
pop
xchg
mov
inc
mov
or
sub
xor
add
std
push
add
add
iret
inc
cmpl
push
in
xor
roll
jecxz
mov
cmp
push
cmpsl
leave
cmc
xchg
fists
sbb
mov
mov
imul
shlb
ret
add
add
jp
addb
aam
inc
mov
sub
push
mov
int
jg
fstpt
test
xor
pop
rolb
jmp
mov
add
add
fcompl
or
sbb
jno
lds
sub
outsb
xchg
out
cli
das
movsb
lods
add
push
cmp
cltd
sti
add
pop
aas
loopne
aas
and
or
js
inc
cmp
mov
in
out
scas
pop
sub
jne
bound
or
adc
rcl
lcall
popa
leave
push
add
out
imulb
pusha
mov
add
scas
je
movb
call
dec
pushf
inc
shlb
ret
das
xor
dec
arpl
outsb
fldl2t
scas
dec
imul
pop
jnp
fcomi
xlat
popa
add
incl
inc
mov
mov
push
hlt
fiaddl
add
repnz
mov
fiaddl
add
add
into
jno
ss
fs
mov
int3
or
lea
mov
xchg
jns
shll
add
xchg
push
repz
hlt
mov
mov
pushf
add
push
pushf
int3
int
add
int3
stc
mov
pushf
push
loope
add
mov
add
pop
jno
jno
push
push
push
push
jp
mov
sub
jmp
popa
out
scas
imul
add
fidivl
adc
cmp
lods
rol
mov
aas
xor
mov
add
sldt
mov
and
loope
jno
jg
cmp
inc
aas
add
clc
add
fadds
push
shr
outsl
xor
push
add
stc
out
dec
into
cmp
adc
fs
jp
mov
mov
xor
mov
rcll
add
mov
add
mov
subl
add
and
jnp
sbb
and
push
cltd
push
jle
rolb
cmp
faddp
push
lods
je
ds
daa
sub
daa
mov
xorb
nop
data16
fwait
inc
and
add
out
cmp
movnti
jne
rorb
imul
add
push
sbb
loop
xor
jne
lcall
cmp
sbb
add
inc
pop
cmpsl
fistl
insb
push
das
lret
mov
add
cmp
outsl
and
pop
cli
sahf
in
leave
cmc
stos
add
sbb
pop
popf
mov
jp
movsb
adc
filds
loopne
repnz
rorl
mov
push
sub
add
or
xchg
sbb
add
pusha
faddl
dec
call
dec
data16
pop
add
lret
mov
ja
ret
enter
lret
add
test
test
call
bnd
pushf
and
add
out
add
outsl
test
movb
jb
xchg
std
test
jnp
aad
mov
sahf
stos
dec
jne
dec
push
push
popa
mov
add
push
adc
popf
mov
pop
es
pop
sbbb
add
adc
add
and
push
add
or
add
mov
add
xlat
dec
cld
cmp
push
mov
cwtl
sbb
in
sbb
add
add
pusha
or
mov
popa
cmp
add
xor
nop
pop
inc
ret
add
icebp
pop
insb
insl
data16
fiadds
mov
sub
xchg
and
mov
add
clc
sub
iret
xor
scas
fisttpll
add
inc
fs
adcb
roll
add
dec
add
add
add
roll
call
add
xor
cmp
cmp
add
outsl
movsb
fists
pop
pop
std
in
fdivr
mov
adc
mov
add
shll
xlat
pushf
or
add
or
mov
std
stos
pop
es
mov
add
mov
sbb
pop
or
outsb
add
int
jns
in
test
push
mov
rorb
add
repnz
fst
mov
ret
add
dec
xchg
stc
int3
and
jae
add
mov
pop
jno
jge
aad
aas
inc
cld
js
ret
das
icebp
cli
ficomps
and
std
xchg
cmp
or
jmp
lds
sub
mov
sub
pop
ss
leave
pop
dec
mov
xor
dec
sbb
mov
mov
adc
cmp
jnp
shl
lods
add
scas
push
xchg
xor
adc
ret
les
jo
stos
dec
pop
dec
in
adc
add
add
mov
fisttpl
aas
je
mov
mov
jcxz
sti
jg
pop
std
xor
push
cwtl
adc
nop
xchg
insb
inc
jb
dec
out
cmpl
decb
dec
inc
pop
adc
lods
sub
xchg
sub
sarl
outsl
add
mov
mov
pop
scas
mov
xchg
xchg
testb
xorl
jns
add
movsl
pop
xchg
jo
lcall
xchg
pop
mov
inc
xorl
repnz
fdivl
push
add
pusha
out
lahf
ds
jge
out
jo
xchg
mov
scas
xor
and
lret
xchg
lea
xchg
dec
add
jbe
xchg
sar
lds
inc
adc
sbb
add
push
and
cwtl
jge
inc
jo
shlb
repz
sbb
xchg
loop
and
out
pusha
fcmovu
dec
int
pop
adc
sbb
push
iret
mov
fdivl
xor
int3
out
pop
mov
push
jg
xor
inc
or
add
and
lahf
sahf
adc
xchg
fsubs
mov
lock
inc
and
add
rorb
cltd
dec
mov
mov
js
cmp
in
cmpsl
hlt
jae
pushf
and
mov
loop
sub
inc
inc
jg
repnz
lahf
popa
inc
and
ret
iret
adc
and
mov
and
shll
cltd
sbb
add
mov
cli
test
lods
jb
adc
sbb
sbb
scas
out
add
jae
xor
adc
das
arpl
jno
jae
call
cld
adc
add
cltd
dec
inc
and
jl
stc
imul
filds
out
jns
sub
stos
insb
jmp
in
ret
mov
add
neg
mov
scas
add
insb
icebp
dec
sbb
xor
sub
cmp
insb
ljmp
adc
test
xchg
or
imul
mov
xchg
xor
adc
jo
pop
mov
add
cmp
inc
add
jcxz
mov
cmpsl
negl
sub
fildl
inc
fdiv
pop
jo
and
int3
bound
cmpsl
xor
rolb
dec
cmp
add
mov
roll
add
fmull
mov
jne
imul
iret
stc
cmpsl
sbb
outsl
cld
popf
adc
in
mov
mov
xchg
ret
cmp
jbe
dec
cltd
or
adc
xor
dec
add
cmp
stc
inc
jno
sti
dec
pop
in
cmc
xchg
xor
rorl
xlat
sub
push
mov
imul
shrl
pop
movl
add
push
add
jl
add
add
mov
out
shl
jl
and
fcmovnb
xchg
ret
xor
mov
add
add
sub
add
add
in
add
mov
push
lret
pop
sbb
jle
pop
nop
jb
add
push
add
add
add
push
ret
call
mov
test
int
into
push
ret
dec
mov
cld
xchg
cmc
add
add
daa
clc
sub
in
gs
outsl
popa
pop
sub
mov
add
dec
jne
cmp
xchg
xor
or
mov
mov
add
add
push
xchg
insl
mov
xacquire
ret
or
xor
outsb
add
adc
add
scas
push
cmp
jg
cli
add
sub
sahf
cmc
add
jl
inc
ret
lret
mov
add
jne
icebp
xor
mov
out
pop
mov
rol
add
daa
shrb
add
adc
push
cmpsl
cmpsl
in
push
int3
movsl
popf
jae
mov
add
push
xlat
pusha
fisttps
js
and
loopne
push
cmp
or
xor
jnp
movsl
fsts
and
sub
add
les
push
stos
lret
mov
inc
xor
pop
dec
adc
ss
out
pop
shrd
dec
dec
sub
mov
pop
in
aaa
mov
mov
sbb
js
add
xchg
dec
and
mov
inc
jb
xor
or
sbb
lcall
sbb
mov
lods
add
dec
adc
lods
ret
int
push
add
cmp
add
add
sbb
mov
mov
rorb
jbe
into
and
loop
dec
subb
add
stos
repnz
pop
repz
scas
lahf
loope
lods
pop
icebp
mov
cmp
pop
in
mov
jae
out
scas
sbb
aam
mov
dec
mov
ja
divl
fcmovnbe
mov
mov
imull
aas
xor
xorb
add
push
xchg
or
stos
xor
sbb
sbb
call
hlt
push
mov
push
mov
pop
cmp
out
dec
out
push
adc
mov
repz
icebp
xor
fimuls
pop
lret
repz
add
test
jb
les
xchg
shl
lock
gs
adc
xchg
sbb
mov
xor
fldcw
std
fucomp
ret
out
sbb
repz
sub
mov
adc
adc
insb
adc
lcall
hlt
lahf
cs
jge
or
and
lods
dec
imul
int3
mov
call
add
ret
cwtl
ret
mov
rorl
fidivl
testb
repnz
or
fisubs
xchg
cli
push
pop
rol
pusha
mov
add
lea
mov
adc
inc
pop
movsb
data16
clc
ss
ja
mov
jecxz
add
jns
scas
push
hlt
mov
push
outsb
add
xor
sbb
or
cmp
push
fwait
pop
in
mov
loopne
call
and
dec
out
mov
xorb
insb
inc
mov
dec
mov
mov
pop
jb
inc
pop
push
adc
push
xchg
insl
fcoms
push
xchg
xchg
inc
push
in
mov
push
icebp
into
scas
add
jae
pop
mov
repnz
mov
bound
jmp
bound
cltd
add
xchg
int
aaa
add
mov
outsb
adc
add
inc
pusha
nop
arpl
cmp
add
push
and
pop
add
dec
adc
jb
mov
add
repnz
mov
sbb
dec
in
or
sbb
pop
push
push
mov
in
jp
push
add
xchg
adc
mov
ljmp
xor
and
mov
dec
sbb
loop
int
ret
mov
add
lahf
jp
add
or
repz
stos
push
adc
movsl
jo
or
jno
outsl
sub
xchg
fwait
sarl
in
es
aas
gs
sti
pop
push
or
or
in
mov
add
or
rclb
mov
je
lret
pop
movsb
imulb
mov
jp
jle
decl
mov
xchg
call
lods
dec
nop
xlat
scas
pop
cmp
test
in
jo
insb
add
add
std
push
xor
push
fwait
adc
jp
and
xor
mov
jle
decb
mov
inc
fnstenv
test
and
pop
js
mov
xchg
pushf
and
mov
les
mov
lods
mov
shrb
dec
cld
xor
or
lahf
data16
in
addb
data16
push
test
cmp
sub
sbb
dec
cltd
mov
push
fisubl
jl
xchg
add
fistpl
xchg
push
filds
leave
xchg
addl
cwtl
inc
cmp
fdivr
pop
pop
loop
clc
call
sbb
mov
xchg
mov
xchg
jb
or
and
pop
or
aad
rorl
sahf
and
std
fimuls
shr
inc
imul
lods
mov
out
or
xchg
test
rcrb
pusha
mov
xchg
repnz
dec
xlat
and
mov
aad
clc
js
jecxz
rol
jmp
add
pushf
adcl
les
jmp
mov
lods
xchg
sarl
ss
adc
fisttpl
jmp
and
testb
imul
mov
jmp
add
add
int
xchg
push
stos
je
or
xchg
inc
add
add
sbb
and
add
add
add
or
mov
out
call
je
ljmp
push
inc
out
push
jecxz
out
cltd
xchg
and
add
add
add
int3
mov
push
icebp
ds
mov
adc
out
xlat
pop
and
lret
xchg
sub
sahf
mov
lds
ret
les
sub
mov
imul
movsl
sbb
cmp
lea
push
sub
mov
movb
jnp
inc
mov
jno
lods
daa
aad
xor
lods
mov
stos
inc
loopne
rcrl
dec
cmp
jbe
popf
cltd
jb
ja
pop
icebp
lock
jb
xchg
mov
insl
mov
push
push
or
inc
lock
flds
out
imul
sbb
mov
adc
je
sahf
xor
outsl
dec
add
mov
add
adc
adc
add
add
cltd
sahf
mov
test
leave
aad
mov
cli
leave
push
jp
or
dec
mov
jb
sub
push
push
sbb
jg
cltd
jp
jmp
out
outsb
hlt
aas
mov
out
add
fsubrl
sub
cmp
add
and
jb
roll
pop
add
dec
sub
inc
divps
xchg
popf
or
add
lret
hlt
loope
inc
out
mov
push
negb
loopne
out
mov
nop
das
arpl
enter
inc
fs
mov
stos
pop
xor
ret
fsubs
push
insb
xchg
lods
push
and
pop
push
daa
pop
adc
cmpsl
notb
add
pop
cmp
mov
jo
sbbb
xchg
mov
pop
add
les
push
mov
xchg
and
mov
adc
mov
lds
ret
add
adc
pop
jecxz
mov
wbinvd
imul
test
add
pop
mov
test
add
cmp
add
and
es
fidivl
add
test
push
xchg
add
cld
data16
jmp
sbb
push
push
mov
call
mov
add
sub
stos
call
pop
sub
stos
add
push
or
mov
pop
icebp
movsb
or
jns
add
or
loop
add
iret
popa
outsl
movsb
aam
mov
mov
mov
add
xchg
jecxz
mov
nop
xchg
inc
mov
lods
mov
ret
xor
subb
add
clc
arpl
cld
add
add
ja
ret
cmpsb
lods
loope
adc
ds
and
les
jb
add
pop
dec
or
dec
aaa
pop
or
pop
adc
sub
add
sbb
adc
nop
and
sbb
fld
icebp
mov
js
push
jmp
cli
or
dec
push
inc
cmc
jl
mov
pop
add
ss
add
ret
mov
adc
cmp
jg
add
mov
lods
add
cmc
dec
repnz
es
dec
cmp
pop
inc
xor
and
scas
fs
stos
popa
loop
adc
add
push
test
add
mov
out
sbb
rcl
rcll
push
cmpsl
cmp
inc
mov
xchg
call
jnp
xchg
cmpsl
movsl
sbb
imulb
rcll
data16
pop
push
cmp
inc
push
add
xchg
repz
push
lahf
add
add
xchg
rcrl
add
lret
xchg
dec
and
rorl
xchg
mov
push
sub
test
mov
add
jnp
dec
sub
in
or
in
xchg
int
cli
push
sbb
insb
pop
jge
sbb
adc
stos
leave
addr16
scas
xchg
or
add
ficomps
sub
xlat
add
mov
movsb
inc
scas
mov
inc
add
add
mov
inc
add
adc
fimuls
cwtl
lahf
dec
cmp
push
andb
leave
inc
pop
pop
cli
adc
data16
xlat
mov
pop
shr
and
inc
clc
add
sti
mov
gs
lret
add
ja
sub
sbb
pop
add
int
ficoms
ret
enter
mov
dec
fwait
dec
jmp
js
fwait
out
or
add
add
dec
lds
subb
and
scas
cmp
rcr
or
rcl
mov
es
call
mov
xor
scas
aad
lods
adc
add
xchg
mov
adc
std
xchg
ds
in
mov
mov
jae
jnp
pop
add
lds
insl
add
add
lretw
jp
add
int3
or
mov
and
pop
add
add
cwtl
inc
adc
scas
or
je
int
add
cmpsb
cld
repnz
or
xchg
jmp
xlat
fistl
push
mov
out
repnz
in
testb
leave
sub
daa
add
add
mov
add
add
sub
mov
fiadds
add
pop
insl
jno
add
into
arpl
add
jnp
cmpb
sub
daa
adc
fstl
jns
add
mov
lret
lock
xlat
jmp
pop
fisubrs
nop
mov
add
test
add
adc
loop
scas
sbb
xor
dec
push
mov
or
add
rorl
add
add
cmp
mov
add
add
add
add
stc
add
inc
adc
lret
add
push
jge
adc
jae
sub
aas
add
add
push
mov
outsl
es
pop
dec
in
daa
sbb
jp
push
xor
ds
push
push
in
gs
sahf
adc
mov
jne
pop
add
int3
xchg
rorb
sahf
test
jo
cmp
pop
push
test
jns
addl
add
add
rorl
jmp
sub
int3
sub
testb
popa
into
movsb
sub
jg
shrb
cltd
out
ret
add
sbb
hlt
add
cmpsl
pop
arpl
in
mov
imul
add
cld
ja
out
fisubl
cmp
pop
push
lret
insb
test
pop
push
nop
jne
xor
mov
pop
fiaddl
xchg
std
lds
in
fmuls
xchg
push
lret
in
lods
divb
decb
add
mov
xchg
sub
and
pop
in
adc
mov
test
xor
divb
mov
lock
lea
add
cwtd
lret
outsb
push
sbb
add
mov
mov
add
mov
mov
add
dec
xchg
add
add
and
out
inc
push
dec
shlb
xor
fistl
call
mov
adc
add
pop
cmp
shrb
cmpsb
xor
jns
fbstp
inc
push
add
inc
sub
or
add
ss
xchg
add
push
lock
xor
call
in
into
and
add
ss
stos
add
add
mov
cmp
add
jne
cmp
pop
xchg
loop
xor
sub
repnz
fldt
cmp
lods
call
mov
pop
mov
jne
shll
fs
stc
add
or
pop
test
pop
pusha
add
add
jmp
lahf
add
imul
push
dec
into
lret
cld
push
movsl
sub
dec
lods
les
dec
lock
add
push
push
xchg
and
add
add
and
mov
insb
mov
add
pop
mov
ljmp
add
popa
sub
arpl
cmp
cmp
repz
add
and
add
add
add
divl
inc
or
or
add
mov
insb
roll
incb
stos
movsl
inc
add
add
add
jle
jecxz
add
mov
rorl
xor
inc
mov
test
out
add
pop
push
cli
mov
data16
xlat
mov
ficompl
sub
add
adc
lock
leave
out
add
in
mov
or
add
add
mov
or
sar
inc
push
pop
ds
rcrl
repnz
jo
add
jno
xor
add
inc
es
mov
arpl
cmp
mov
adc
cmp
or
adc
scas
pause
popa
mov
in
mov
arpl
shrl
add
inc
dec
cmc
push
mov
add
jns
xchg
addr16
inc
and
add
mov
dec
push
call
jnp
pop
add
mov
xorw
mov
popa
ljmp
test
mul
pop
mov
add
jne
push
aaa
adc
add
lahf
int3
clc
xor
int3
icebp
add
call
add
lret
mov
inc
icebp
rolb
mov
cmp
jg
cli
or
dec
repz
and
dec
aam
stos
add
dec
lcall
out
stc
inc
arpl
lds
xor
jns
dec
lods
and
xchg
mov
push
add
add
dec
adc
add
aad
sub
xchg
adc
jne
mov
and
xlat
test
sub
fdivp
mov
fwait
cmp
pop
in
cmp
push
stos
push
pop
movsb
lods
aaa
in
test
add
jge
push
add
push
push
xor
pusha
in
add
cmp
mov
and
mov
icebp
imul
repnz
addl
add
add
mov
adc
dec
and
mov
call
cltd
add
add
imul
mov
flds
jecxz
repz
mov
push
div
enter
mov
leave
add
fdivrs
add
addr16
hlt
jmp
sbb
adc
fs
dec
incb
out
mov
xlat
push
sub
fisttpll
add
add
les
mov
popl
mov
xor
sub
pop
les
adc
test
xchg
inc
loopne
mov
lock
jg
jge
lds
mov
inc
lcall
add
jo
pop
inc
xor
add
fiaddl
les
jae
sub
and
push
mov
xor
or
mov
cmp
sub
dec
subl
jo
fmulp
xchg
lcall
sbb
sub
insl
add
std
je
mov
lea
inc
out
add
scas
mov
fnstcw
les
xchg
push
inc
les
scas
mov
dec
ret
xor
cwtl
or
mov
in
subl
add
mov
imul
mov
push
sarb
insb
das
rcr
mov
aam
loopne
inc
add
add
adc
fnstsw
jns
mov
xor
push
daa
add
stc
add
movsb
inc
sbb
lret
mov
call
aaa
xchg
inc
dec
dec
xor
add
pop
xchg
and
xchg
jo
aad
fadds
loope
outsl
repz
aad
add
ffree
pushf
shlb
int3
and
fistps
sbb
test
fs
ljmp
add
pop
aad
stc
movsb
cmpsl
test
xchg
ss
inc
and
cmpsl
xchg
jge
push
xchg
dec
adc
cmp
mov
test
add
sbb
mov
adc
or
pop
mov
sbb
cmp
in
adc
mov
add
add
jl
call
les
add
dec
mov
add
das
add
scas
mov
icebp
divl
mov
mov
loop
sbb
fsubr
ljmp
cld
lret
sub
lea
dec
imul
pop
or
jmp
xchg
jo
or
add
add
test
gs
sbb
jg
in
adc
add
jecxz
add
orl
mov
adc
fwait
xchg
das
addr16
lds
cmp
sub
fadd
xor
movsb
call
mov
mov
out
iret
notl
cmp
loope
daa
pop
xchg
nop
xchg
and
sub
sub
outsb
push
adc
push
imul
add
add
add
xchg
adc
add
add
add
add
cmp
mov
add
ret
daa
and
cmp
stc
add
add
mov
mov
add
data16
rcl
sub
lret
cmp
je
add
add
stos
add
sbb
xchg
and
jo
add
add
add
xchg
and
in
insb
movb
add
aam
mov
mov
add
dec
js
add
sub
ljmp
add
add
test
es
mov
movl
mov
lcall
add
add
mov
push
add
add
rolb
ret
pop
adc
add
sub
in
adc
add
addl
pop
enter
jbe
xor
add
add
lods
sbb
lahf
add
pusha
mov
mov
and
add
decl
fists
or
jg
cld
int
movsl
jae
xchg
pop
lods
sub
test
fwait
and
mov
test
lret
sbb
cmpsl
xlat
pop
loopne
push
cmp
js
sbb
add
add
mov
aam
mov
ljmp
inc
sbb
push
fsubl
popa
add
add
inc
bound
or
add
add
outsb
pushf
xchg
addr16
mov
push
pop
xor
add
sbb
jl
add
sub
lahf
addl
and
mov
lds
call
cmp
add
das
mov
add
in
push
and
lods
popf
out
push
repnz
dec
dec
dec
mov
add
mov
jo
add
push
add
add
mov
movsb
ds
add
and
gs
and
xor
add
add
test
stos
aad
add
add
test
aas
push
dec
adc
cmp
add
mov
xchg
pop
stos
xor
stos
nop
cli
cmp
std
shl
ds
or
lret
and
repz
and
jl
xor
push
and
add
sahf
enter
das
int
stos
hlt
rcll
mov
lods
rcll
lods
int3
lcall
jo
xchg
jp
fwait
inc
aaa
adc
xor
adc
fwait
mov
add
add
arpl
cmc
mov
adc
and
jecxz
dec
jl
fnstsw
xchg
dec
cli
in
es
mov
cmp
pushf
adc
inc
mov
sub
mov
jecxz
cmc
xlat
sbb
push
xor
cwtl
adc
cltd
insb
test
es
jle
orl
jne
mov
xor
es
mov
repz
sub
mov
or
mov
test
jns
cmp
mov
rcrl
cmp
loop
sub
cltd
jmp
add
and
cmp
sub
jno
jae
or
shll
xor
repz
in
mov
xchg
mov
and
adc
add
pop
rcrb
add
pop
data16
enter
movsl
pop
int
add
ucomiss
add
xchg
in
popa
push
aas
lds
arpl
scas
adc
ret
mov
inc
sbb
out
add
daa
xor
mov
xor
add
cmp
xchg
in
cld
sbbl
pop
mov
dec
mov
out
mov
movsl
jae
roll
add
pop
addb
popa
dec
adc
sarl
dec
and
cmp
push
test
lock
or
mov
sarl
imul
sub
mov
mov
inc
lea
cmp
add
pushf
cmp
jg
movsl
xchg
shll
imul
inc
xchg
push
pop
cld
xchg
gs
out
dec
mov
pop
lea
push
adc
hlt
xlat
jl
sbb
add
pop
sahf
mov
cltd
mov
aam
les
int3
jmp
stos
sub
or
aam
adc
jl
stos
fcompl
stc
dec
andb
fisubrl
adc
inc
cli
pop
loop
jmp
dec
mov
sbb
mov
jmp
jns
dec
ss
adc
out
jmp
out
loop
hlt
sbb
popa
push
fwait
enter
mov
inc
adc
fwait
rcl
sbb
xor
cmp
out
xchg
adc
inc
lods
or
shrl
dec
add
add
and
insl
mov
insb
enter
lret
test
pusha
pop
std
add
cmpsb
add
add
lahf
ret
es
sub
loop
add
add
aad
push
xor
out
add
add
push
add
test
or
data16
add
sahf
out
push
add
add
add
sarl
xchg
sbb
add
add
add
testl
cmc
and
mov
adc
xor
add
cld
lret
je
stos
jnp
add
test
add
lret
pop
add
add
xchg
jge
push
add
popf
push
lcall
add
sbb
mov
jne,pn
dec
cmp
add
sub
cmp
pop
add
inc
pop
iret
int
jns
lods
add
jmp
add
lods
je
out
std
push
push
add
adc
mov
jmp
lods
int3
out
dec
leave
dec
adc
mov
or
sbb
or
stc
fdivp
or
fildll
mov
nop
sbb
cld
addr16
gs
jns,pn
sbb
insl
and
mov
cmpsl
mov
push
test
add
jp
out
test
cltd
jno
adc
add
mov
inc
int3
sbb
mov
add
xchg
inc
xor
les
adc
fadds
sbb
sub
ret
add
fiaddl
add
adc
fwait
jno
add
mov
loopne
add
add
sbb
rcl
pop
in
in
pop
ds
fstl
lret
rorb
jmp
and
adc
loop
pop
roll
sbb
cmp
xchg
outsb
add
mov
lret
inc
mov
pusha
fcmovu
dec
iret
push
in
xchg
jb
inc
mov
push
and
lods
push
jae
cmp
push
mov
add
sbb
fwait
rcr
sbb
scas
cmp
push
xchg
lret
add
mov
in
pusha
sbb
add
add
fiaddl
add
mov
or
rolb
add
pop
add
add
lock
mov
and
lret
mov
fidivs
inc
add
mov
faddp
and
add
push
sub
decb
dec
mov
inc
pop
cmp
add
mov
add
add
lea
sti
into
rclb
add
jno
fdivrs
jae
inc
mov
cmpsb
and
enter
enter
add
imul
xchg
mov
mov
or
lock
pop
rolb
sti
dec
pop
idivl
xchg
fwait
or
pop
lret
push
xchg
repz
js
fsubrl
mov
inc
lods
adc
jb
in
add
popa
pop
aam
xchg
add
ja
bswap
jl
cmp
jae
adc
pop
dec
cltd
ret
add
jge
cmp
fsubrs
add
icebp
pushf
jbe
add
fdivr
es
mov
mov
adc
outsl
adc
test
repz
xchg
jne
pop
fnstenv
dec
add
add
mov
ss
enter
ss
movsb
cmpsb
mov
add
imul
push
test
jle
sub
add
xor
add
call
insb
pop
paddsw
dec
cmp
add
int3
outsb
lea
jmp
imul
popa
adc
mov
jo
call
add
add
add
pop
xor
scas
push
push
inc
test
jne
add
mov
repnz
jge
dec
pop
inc
shlb
push
pop
insl
in
jae
scas
push
inc
pusha
aad
mov
or
imul
jnp
cs
in
test
add
nop
push
pop
add
add
pop
daa
mov
out
nop
es
adc
les
bound
add
pop
int3
xchg
movb
lods
jo
add
int3
rorb
fisttpl
icebp
outsb
sub
hlt
mov
push
sub
dec
sbb
arpl
pop
sub
push
push
repnz
push
add
sti
movsb
push
popf
in
add
dec
cmp
add
xchg
aas
les
or
lods
mov
pop
xchg
mov
je
in
cs
in
cmp
push
mov
add
add
pop
dec
test
cmp
xor
dec
dec
or
into
add
add
sbb
std
inc
imul
loop
fcoms
push
push
js
sub
stc
push
add
bound
jp
lds
enter
add
fistps
cmpsl
lods
mov
cmpsl
dec
and
cmp
sbb
pop
out
push
mov
cltd
or
lahf
pop
sub
lods
fisubrs
cmovne
and
adc
pop
pusha
fs
xchg
dec
out
adcb
xchg
jb
fmuls
xor
adc
loop
or
add
push
mov
or
push
mov
leave
ljmp
sti
jae
xorb
mov
dec
mov
mov
lret
sub
add
lods
pop
cmp
add
add
sbb
xchg
or
xor
or
stc
push
stc
movsl
iret
stc
cmpsl
sbb
loopne
int
cmp
mov
je
inc
cmp
push
test
test
jnp
lods
lods
push
es
sbb
xchg
inc
repnz
add
ret
mov
xchg
add
nop
jmp
adc
stos
shrl
shr
jl
fnstenv
aad
mov
icebp
sub
dec
lock
repz
stc
mov
pop
sarl
icebp
jmp
push
or
xor
xchg
inc
xor
xor
std
mov
divl
mov
out
add
add
aaa
aaa
orb
mov
int3
cltd
and
out
mov
pushf
int3
std
mov
pop
add
jns
pop
jge
or
jge
dec
fcmove
out
clc
mov
jnp
mov
or
push
imul
push
mov
imul
add
add
lret
cli
inc
mov
int
or
popf
int
add
add
dec
fsts
xchg
cmp
adc
push
cli
mov
add
lods
push
stc
xchg
push
int3
lea
mov
add
cmpsl
push
ffreep
add
ss
rdmsr
xorl
in
ret
fistpll
add
sbb
test
sti
loopne
and
fbld
fstps
test
int3
pop
sbb
pusha
adc
dec
ja
push
jl
addr16
mov
jo
add
popa
jmp
mov
add
ja
aam
or
mov
sub
mov
jno
nop
in
in
loopne
cli
fnstenv
adc
jae
daa
out
push
out
stos
push
outsl
adc
cmp
add
repz
cmc
negl
nop
lods
mov
lahf
adc
lea
mull
clc
push
sub
cmp
add
push
fdivs
enter
cmp
sbb
add
add
push
pop
lcall
jl
xor
cmpsb
call
out
adc
jne
cld
arpl
int
add
test
inc
xchg
pop
and
cmc
data16
add
xchg
adc
xor
cmp
ss
fcmovnbe
ds
jae
and
hlt
stos
sub
xchg
rclb
add
or
fwait
adc
icebp
ret
mov
jns
mov
fwait
add
out
push
std
xchg
icebp
into
mov
dec
mov
leave
stos
xchg
sbb
cmpsb
add
inc
clc
arpl
pop
sub
lcall
sub
cmpl
add
add
add
mov
add
cmp
jno
fistpll
lds
fwait
push
test
roll
jp
popl
add
xor
hlt
and
in
lods
addr16
cmpsb
and
inc
fsubrl
fstpt
imul
lahf
mov
add
add
or
cltd
fimull
add
add
in
pop
imul
jns
lcall
and
mov
mov
in
adc
xor
mov
movsb
sub
cmp
shrd
jb
add
les
test
std
cmp
mov
fld1
fcmovnbe
out
hlt
mov
add
jne
add
mov
js
jns
and
into
notl
sub
mov
pop
cmp
ficoms
mov
negb
and
xchg
pop
or
add
cmpsl
dec
cmp
mov
pop
sar
cmp
mov
pop
insl
fstps
sbbl
jbe
mov
mov
sub
and
leave
out
insl
daa
mov
icebp
dec
fwait
out
mov
cli
lods
cmc
dec
and
push
dec
add
mov
and
inc
dec
shl
dec
das
cmp
jns
shll
scas
mov
test
inc
adc
insb
int
flds
add
sbb
rorl
xor
daa
roll
pop
rcrl
mov
jno
sub
adc
xlat
repz
xchg
sbb
inc
add
adc
mov
lret
jg
fstpl
mov
push
jae
or
mov
xor
pop
sahf
sub
mov
sbb
add
int
js
nop
imul
and
mov
xchg
loope
rorb
or
loope
dec
sbb
mov
sub
push
aas
cmp
inc
insw
lods
xchg
push
xor
push
add
adc
xchg
inc
mov
mov
mov
fildl
inc
pop
cmpsb
add
add
nop
gs
movsl
xchg
leave
inc
inc
mov
sbb
movsb
addr16
aas
sti
jg
pop
std
xor
add
fildl
mov
ja
jb
mov
xor
orl
or
add
mov
xor
in
mov
aam
mov
ds
pop
test
ret
and
inc
addl
push
cmp
popf
xor
fildl
push
add
pop
mov
testb
mov
lods
imul
mov
and
dec
mov
test
lcall
outsb
mov
sub
sbb
mov
mov
cmp
pop
xchg
jge
mov
outsl
fsubl
sarb
nop
or
out
stc
push
cmp
nop
out
inc
or
push
mov
cmp
stos
sarl
popf
imul
popa
push
int
cli
add
add
insb
popf
mov
sub
xchg
rclb
add
sbb
sbb
mov
jcxz
mul
xchg
ret
lds
push
sbb
arpl
cld
mov
clc
sahf
je
loope
dec
lahf
jns
rolb
add
pop
mov
sub
xor
cltd
adc
xor
rcrw
sub
jnp
push
lods
and
sbb
pop
jns
movsl
cs
xor
mov
lods
aad
mov
imul
pinsrw
dec
pushw
in
mov
out
pusha
xor
jnp
add
xor
cmp
push
into
xor
fcmovb
cmp
pop
inc
insb
out
add
add
ds
cmpsl
cmp
add
jno
mov
fadd
add
jl
adc
jne
je
xchg
dec
add
add
filds
shl
push
or
jmp
mov
cmp
lahf
callw
sub
int3
sub
xor
call
sbb
mov
add
lds
add
rol
in
and
mov
push
int3
push
in
mov
mov
test
aad
je
jmp
rclb
add
add
pop
cltd
arpl
enter
fildl
add
mov
adc
push
jle
jle
mov
add
mov
add
jns
mov
xchg
mov
add
mov
add
jle
xor
add
push
stos
push
mov
fisttpll
out
test
mov
fisttpl
fildll
jmp
into
pop
add
fdivl
pop
fnstsw
rolb
add
add
lods
mov
or
sub
jecxz
popa
sbb
add
add
add
push
gs
test
add
push
adc
popf
sbb
cmp
adc
lret
fdivp
jmp
xchg
lcall
mov
mov
cmp
jl
iret
adc
cmp
inc
jnp
in
movsb
add
cltd
sbb
cmp
push
stos
pushf
lret
ljmp
xchg
clc
aad
inc
add
les
das
xchg
fildl
and
mov
mov
rcr
pop
push
mov
adc
in
jb
inc
add
es
adc
pop
add
xchg
mov
push
dec
mov
jmp
mov
outsb
push
sbb
cmc
mov
jge
jnp
cmpsb
cld
div
outsb
mov
insb
ret
pop
jmp
mov
in
imul
ds
idivl
jae
les
or
mov
std
mov
loop
jbe
push
lret
mov
add
in
and
mov
add
or
xchg
clc
movsb
add
add
jns
dec
cmp
xchg
mov
ds
and
popa
ret
mov
adc
add
dec
dec
xchg
cld
push
cmp
jge
lahf
test
fnstcw
paddusb
add
add
sbb
push
mov
add
dec
push
sahf
loopne
add
mov
adc
dec
xchg
xor
movb
xchg
stc
dec
fdivl
add
push
adc
adc
ret
stc
push
lea
sbb
and
pop
std
out
or
test
add
shll
pushf
adcl
rcrb
or
push
add
scas
pop
insl
popa
or
push
sbb
mov
add
mov
arpl
lods
shr
sbbl
stos
cmp
push
adc
cmp
jg
pop
in
jne
and
xchg
fs
jmp
pop
xor
pop
adc
fiadds
or
or
or
insb
or
hlt
sub
pop
data16
sub
sbb
test
and
mov
pop
pop
jnp
mov
sub
pop
add
pop
addr16
push
sbb
ret
mov
dec
iret
outsb
mov
jg
sub
ret
cmc
dec
cmp
leave
add
lret
out
ljmp
adc
jae
sub
cmc
add
loop
cmpsl
cmp
lret
fnstenv
es
popa
cld
dec
ljmp
fistl
push
arpl
dec
jne
in
mov
out
outsl
push
les
add
ja
fstpt
test
add
xchg
push
sbb
push
add
or
divl
add
add
add
add
repz
xor
test
jo
fldcw
aas
sub
add
sub
xor
ds
in
jne
rorl
dec
mov
add
add
out
fiaddl
jo
hlt
pop
jnp
mov
add
lahf
loope
movsb
into
jne
add
imul
js
add
and
mov
and
sub
add
test
fs
repz
adc
add
add
pop
xchg
mov
mov
mov
jno
inc
add
cmp
xchg
mov
loopne
cltd
lret
add
dec
sub
ret
xor
subb
test
fldcw
inc
dec
xchg
nop
xchg
push
out
jno
cmp
fs
sbb
add
pop
fimuls
add
jae
cwtl
jns
icebp
push
lock
jl
mov
sub
ss
loope
call
loopne
add
lret
mov
es
sarb
ror
sbb
adc
mov
dec
fwait
jmp
add
inc
push
imul
sarl
cltd
cmp
stos
mov
jae
inc
mov
adcb
xor
jl
outsb
adc
jne
push
xchg
test
orl
pop
xorl
cmpsl
stos
add
sbb
leave
stos
pop
xor
jnp
orb
cmpsb
aad
add
mov
inc
pusha
add
pop
push
int3
lods
mov
add
push
add
add
pop
mov
sbb
lret
sub
stos
add
lods
xchg
jb
add
add
inc
push
ret
cltd
adc
jcxz
mov
enter
stos
or
add
add
mov
and
outsb
and
add
fs
cmp
mov
xor
add
shrb
int3
adc
jnp
loopne
add
int
imul
or
stc
pop
dec
lcall
pop
sbb
ret
aaa
xlat
fadd
imul
loope
ret
push
xchg
xor
mov
in
pop
push
xor
pop
push
and
cmp
sbb
cmpsb
and
arpl
in
push
ret
xor
dec
mov
cmpsl
imul
inc
push
test
inc
sub
push
test
push
lea
add
inc
fcmovu
out
orb
and
imul
aad
add
imul
mov
mov
add
add
add
fwait
cmp
cli
imul
lods
mov
mov
ret
insl
movsb
mov
enter
lods
in
pop
lret
mov
inc
and
inc
sbb
xlat
stos
stc
push
add
hlt
sahf
int3
inc
jmp
and
sub
inc
mov
push
pop
jmp
xor
int3
inc
and
adc
xor
rolb
clc
add
add
xchg
inc
mov
mov
ljmp
scas
btl
and
std
adc
inc
add
cmp
test
jge
and
cmp
test
and
sbb
jbe
add
cmp
pop
or
sub
xchg
mov
rcrl
cwtl
jb
adcb
cmpsl
icebp
subl
popa
inc
ret
add
and
fidivrs
pop
push
aad
mov
scas
inc
pop
jbe
notl
sub
add
mov
dec
repz
in
fisttpll
xchg
dec
dec
push
dec
enter
add
and
add
mov
push
xchg
jae
pop
xchg
stc
add
adc
lahf
daa
iret
fcmovnb
xchg
fbstp
or
xor
lcall
add
pop
mov
adc
or
and
xchg
ret
mov
xor
int3
push
imul
mov
inc
inc
pushf
inc
jo
iret
shlb
add
leave
xchg
int3
jns
in
out
clc
jge
stc
mov
cs
in
add
or
ret
mov
repz
ret
lock
push
push
pop
pop
add
add
pop
in
jg
aad
aas
cmpl
fstpl
fldl
inc
cld
xor
sbb
adc
pop
dec
lret
inc
inc
inc
adc
out
sbb
in
jmp
or
add
addr16
and
mov
mov
cmc
fldenv
cmp
js
stos
add
std
jae
sti
mov
popa
inc
xor
sahf
xchg
ret
les
test
lea
rolb
das
mov
adc
pop
pop
mov
ja
cwtl
add
lock
mov
push
and
xor
aaa
ret
add
fildl
popf
les
add
add
jne
sbb
add
adc
cltd
push
add
scas
or
jle
leave
adc
pop
cmpb
xchg
xchg
dec
cmp
push
push
sbb
add
in
or
nop
mov
daa
add
add
sub
lret
add
or
jnp
fcompl
xor
stos
into
paddsw
or
testl
addr16
shrl
sbb
push
sub
and
popf
mov
mov
es
adc
mov
in
dec
movsb
outsl
pop
add
add
mov
pop
add
enter
mov
inc
cmp
jns
push
stc
pop
cmp
fwait
dec
xlat
sbb
aaa
add
inc
inc
pop
stos
mov
ret
fs
and
shlb
or
lods
testb
or
clc
aaa
cmp
add
add
inc
popf
add
add
ret
or
out
mov
cmpsl
out
cs
outsl
scas
dec
inc
inc
mov
inc
adc
mov
ret
subb
jnp
bound
lods
enter
shrl
test
push
ljmp
movzwl
cmpsl
dec
leave
je
jle
or
test
dec
mov
inc
daa
fcmovnu
lret
adc
rolb
pop
jle
push
dec
jl
loop
ret
std
dec
or
and
sub
inc
shr
jmp
data16
and
fcmovnu
mov
mov
call
movsl
ror
push
dec
and
mov
mov
or
dec
mov
add
sub
into
xor
popa
inc
adc
cmp
cwtl
hlt
sbb
dec
and
xchg
loopne
cmpsl
adc
jae
push
cld
sbb
push
ljmp
out
or
jno
sbb
rcr
in
icebp
test
call
fadds
cmc
popa
add
jnp
out
dec
add
push
dec
inc
cli
repz
lcall
lods
add
mov
push
popa
jns
movsl
iret
stc
cmpsl
sbb
in
and
fstp
imul
mov
iret
jo
add
adc
inc
call
mov
addb
dec
repnz
mov
add
sbb
cwtl
in
mov
add
je
repz
mov
out
mov
sub
jo
out
or
mov
cmpsl
jmp
out
fisubs
push
pushf
inc
in
insb
test
add
mov
sub
push
jle
cmp
mov
xchg
push
lret
repz
cmc
adc
loop
mov
out
jmp
or
xor
out
loop
cmp
cmp
popf
bound
mov
or
jae
pop
jbe
adc
out
mov
or
adc
or
mov
mov
dec
pusha
lahf
lods
xor
xor
fldt
call
sbb
fsts
dec
repz
icebp
pop
lock
mov
cmp
ja
mov
in
mov
ret
mov
dec
xchg
stc
int3
cmp
and
in
mov
out
sub
js
mov
hlt
ja
mov
iret
scas
dec
inc
or
push
and
mov
in
shlb
inc
addl
dec
in
aam
pop
or
mov
inc
aam
fwait
mov
push
pop
scas
fwait
out
lahf
call
bnd
pop
adc
add
add
sub
jnp
mov
add
aad
iret
in
push
addb
add
push
test
mov
mov
cmp
add
and
push
adc
jg
add
add
fadds
fldcw
add
and
dec
mov
add
inc
jecxz
adcl
adc
adc
add
add
call
add
push
dec
fsubs
ss
sahf
out
into
lods
imul
push
add
or
adc
shll
lods
hlt
jnp
pop
mov
cltd
mov
jne
sbb
sbb
xor
fs
dec
xchg
sbb
sbb
adc
xchg
cmp
add
cwtl
xchg
dec
cmp
clc
mov
ret
inc
inc
cmp
fistps
add
push
in
mov
popf
into
sahf
mov
jae
shl
pushl
jno
cmpsb
mov
int3
pop
mov
idivb
unpckhps
mov
cmpsb
mov
imul
test
popa
mov
dec
subl
arpl
xchg
xor
mov
lods
lret
add
push
loope
push
pop
push
imull
sub
jnp
and
xchg
pop
add
jnp
lock
fstpl
jecxz
jge
shl
cs
int3
sbb
add
push
mov
cmpsb
notl
and
cmp
mov
orl
test
cmpsb
xor
enter
paddd
sub
in
xor
mov
pop
ss
aad
and
pop
push
mov
xor
scas
push
sbb
or
sbb
inc
cli
mov
add
add
add
insb
pop
and
sbb
push
inc
insl
xchg
mov
out
js
sub
add
add
xchg
and
pop
adc
pop
mov
fwait
inc
fistps
adc
sub
mov
aad
das
and
or
cli
ret
mov
xchg
jno
mov
push
fstpt
cmc
mov
xchg
and
push
pop
jnp
mov
mov
adc
mov
push
insb
ds
mov
xor
mov
or
jg
into
xchg
lea
cmp
mov
push
scas
sub
mov
mov
cmp
cli
add
pushf
roll
mov
add
cltd
dec
jmp
pop
add
sub
xor
inc
jecxz
mov
add
dec
test
or
loopne
add
push
int
sub
imull
stc
push
mov
popf
lcall
enter
jmp
aas
inc
jg
and
mov
imul
mov
adc
inc
js
and
testl
adc
xor
jae,pn
gs
pop
jno
ja
rcrl
jbe
jg
cmc
movsb
ja
push
out
and
mov
lods
add
xchg
and
xchg
arpl
in
mov
or
gs
mov
cwtl
pop
push
inc
cmp
sbb
rorb
push
mov
sub
pop
mov
call
fcoms
lock
adc
rclb
add
pop
adc
sub
sarb
cmp
add
mov
jecxz
sbb
pusha
mov
in
pop
fwait
out
scas
mov
pushf
int3
xor
repz
lock
jbe
mov
push
nop
sbb
cmp
ljmp
sbb
push
inc
ror
mov
mov
sbb
add
add
in
mov
insl
fldt
push
clc
add
add
mov
stos
int3
verr
push
add
add
jle
in
and
inc
mov
cmp
nop
mov
or
push
je
fidivs
jl
sub
jg
cmpsb
sbb
adc
aaa
add
dec
cs
test
push
mov
sub
dec
cmpl
sbb
add
mov
sub
xor
mov
das
lds
ficompl
mov
mov
roll
add
xchg
push
rorl
aas
sbb
lods
add
jg
stos
orl
lea
out
adc
sub
cmp
je
out
dec
sub
xor
xchg
pusha
fs
jmp
or
mov
insl
sbbl
adc
hlt
stc
sahf
les
lcall
inc
pop
enter
jns
xlat
inc
jne
add
push
inc
inc
push
lock
rorl
movsl
sbb
mov
lods
push
or
mov
mov
or
scas
loop
cli
add
add
jne
and
test
imul
add
jp
add
dec
roll
sub
stc
mov
js
adc
movsl
dec
adc
inc
mov
push
pop
incb
into
popf
pusha
nop
mov
rep
mov
rclb
and
pop
cmp
mov
jmp
cs
add
add
xchg
daa
push
xchg
inc
add
push
stos
add
mov
add
sbb
fldt
icebp
imul
fmuls
imul
jns
push
ss
mov
outsb
inc
sub
adc
js
or
push
add
ds
sahf
loope
pop
adc
hlt
loope
jo
and
mov
pushf
cmp
mov
add
div
add
mov
sub
add
cmc
mov
xor
add
sti
cwtl
lcall
fwait
add
insb
xor
push
xlat
add
out
mov
lds
repnz
add
adcl
mov
xchg
imul
lcall
je
add
mov
add
fiaddl
push
das
add
loopne
sbb
sbb
mov
push
mov
inc
add
mov
mov
add
fdivs
mov
shlb
add
add
add
test
jae
jno,pn
movsb
imul
xlat
xchg
insl
add
lahf
das
lret
sbb
add
movsb
jg
add
test
jmp
add
adc
fidivs
add
add
add
add
test
mov
pop
sbb
loopne
sub
add
les
sbb
mov
sub
js
and
int
dec
add
add
push
dec
mov
add
add
inc
jae
cli
mov
dec
and
into
sahf
push
add
add
jb
add
adc
lea
pushf
xor
xchg
lahf
jns
jle
out
or
cmpl
xchg
mov
adc
xor
shrl
dec
add
add
xor
outsl
jg
lock
stos
jl
add
stc
movl
dec
imull
rorb
lea
add
add
sub
adc
out
int3
mov
cmp
adc
mov
sahf
jbe
add
dec
repz
divl
xchg
add
add
add
adc
add
add
mov
je
insl
add
add
adc
pop
mov
and
scas
and
sbb
outsl
es
xchg
push
adc
add
add
and
add
xchg
fidivl
cmp
inc
add
push
mov
mov
jl
aas
mov
test
jno
pop
add
sahf
jb
push
cmp
mov
ss
add
sub
pop
mov
sbb
and
mov
mov
dec
pop
adcb
cli
pop
add
add
mov
rclb
movsl
out
jl
lods
push
jg
idiv
lods
sbb
test
shrb
cmp
add
and
inc
mov
add
push
fdivrs
lret
mov
shlb
movsb
cld
push
ds
or
push
inc
sbb
cmp
sbb
xchg
mov
mov
mov
sarl
data16
xor
xor
mov
add
xchg
or
and
mov
jl
loope
nop
mov
mov
shrb
and
mov
aad
xor
arpl
add
sbb
dec
sbb
ror
xor
popa
fcompl
daa
lcall
jp
dec
arpl
jmp
xchg
jmp
push
pop
call
add
inc
sub
outsl
xor
add
in
xor
jb
bswap
or
icebp
test
mov
test
cmpsl
movsl
add
mov
in
sbbl
lahf
aad
dec
aas
dec
add
push
and
sbb
lea
xor
inc
jbe
jno
push
add
je
xchg
jle
dec
mov
jb
mov
into
rclb
cmc
sbb
mov
je
out
xor
data16
aaa
mov
loope
ret
int3
push
lock
pand
cmc
jle
inc
jp
out
push
push
jae
jbe
jmp
pop
push
mov
imul
out
add
add
mov
adc
rcr
ljmp
enter
push
les
mov
xchg
bound
pop
add
mov
addr16
add
add
nop
sbb
mov
iret
lock
insb
dec
sbb
add
jbe
inc
inc
repz
fxch
xchg
add
jae
rcl
pop
cmp
lahf
adc
testb
into
push
mov
push
push
es
ffree
jae
mov
jno
hlt
mov
mov
out
clc
and
push
sub
add
inc
repz
sbb
cli
out
sbb
add
pushaw
hlt
cli
add
mov
xchg
inc
cmp
xchg
jp
scas
jle
cmp
and
cmp
shrb
addr16
in
out
repz
lds
rcrl
xchg
jp
add
xchg
lods
pop
mov
xchg
or
mov
je
ss
test
pushw
dec
push
xor
add
daa
mov
pop
std
add
inc
bound
push
fstps
add
mov
fldl
outsb
cmp
sub
scas
or
and
pop
jmp
and
add
add
push
test
add
inc
pop
in
pop
push
or
mov
aad
outsl
icebp
jno
sbb
mov
cmc
shrl
pop
adc
rorl
mov
pushf
xor
lds
movsl
add
push
jno
mov
xchg
fstl
push
push
bound
lahf
movsb
lea
push
mov
fs
test
add
jp
add
push
iret
cltd
sub
dec
adc
cli
in
fdivrs
pop
dec
rcl
adc
sbb
adc
push
add
fninit
xchg
rcrl
mov
sub
and
pushf
inc
ja
mov
sahf
aad
dec
aam
fwait
out
sub
push
push
cli
adc
inc
push
loop
jg
or
adc
data16
sub
popf
jae
pop
cld
add
or
mov
pusha
stos
inc
xchg
inc
or
ja
jg
test
xchg
push
add
add
sub
add
sbb
mov
nop
out
cmp
fdivrs
out
cmc
fsubr
addb
mov
cltd
inc
call
out
lahf
add
dec
das
xchg
pushf
mov
xchg
rol
push
sbb
mov
into
mov
add
push
ret
mov
insb
inc
add
cmp
pop
sub
add
xlat
add
and
pop
ret
lds
imul
pushf
jecxz
and
out
clc
adc
xor
repz
pop
cwtl
mov
dec
or
mov
add
lods
xor
flds
arpl
int3
movsl
shlb
out
jnp
hlt
or
xor
dec
and
jae
test
jnp
mov
lea
mov
lret
test
add
add
xchg
stc
cmc
ljmp
mov
mov
or
add
mov
cmp
ret
jmp
mov
fs
movsb
sbbb
stos
fsubrs
mov
and
mov
cmc
lret
loope
add
popf
pushf
pop
lods
xor
test
add
jl
imul
lds
aad
and
add
outsl
xlat
xlat
push
push
addl
int
fldl
add
xchg
cmpsb
sarl
push
add
add
inc
jle
xchg
andl
sbb
mov
out
mov
mov
add
and
das
sub
out
ss
arpl
cmp
loopne
jmp
popa
add
repnz
jg
jbe
cmp
xor
sbb
xor
dec
shll
repnz
pop
into
xor
cmpsl
mov
pop
outsl
repnz
push
cmp
addb
sbb
push
gs
push
sub
js
add
sub
and
das
pop
into
enter
adc
xorl
shll
std
adcl
add
mov
add
add
and
psrld
xor
int
cmpl
pop
sbb
or
add
pop
sub
mov
add
push
ss
inc
fcmovb
lods
out
pop
mov
dec
fldcw
xor
and
adc
cwtl
xchg
mull
sub
shlb
adc
sbb
xor
test
add
mov
jb
cmp
jecxz
jb
add
cmp
dec
add
add
mov
xchg
push
inc
add
push
fcoms
xchg
out
mov
scas
cmp
xchg
lahf
add
ja
mov
adc
jle
sub
scas
or
cli
pop
jmp
jmp
les
add
xorl
xor
sub
pop
jge
ja
push
fidivrl
add
sbb
pusha
sbb
pushf
fucomip
mov
clc
mov
cmp
inc
addr16
mov
sarl
xlat
sub
push
mov
fs
mov
mov
mov
leave
xchg
pop
sub
mov
jae
pop
out
fiaddl
int3
adc
sbb
push
lret
xchg
frstor
push
enter
push
int
rcll
ret
popf
inc
jbe
in
inc
lcall
sbb
nop
dec
ljmp
jbe
jle
sub
iret
jne
lods
addr16
xor
fstps
or
add
aas
call
enter
addr16
add
add
push
int3
movsb
and
jns
mov
inc
sub
inc
mov
popf
or
shlb
icebp
adc
outsl
lds
push
stos
and
and
lret
cmpsl
mov
pop
xchg
cmp
mov
push
cld
jp
jmp
add
add
cmpsb
xor
add
jg
mov
push
loop
aad
and
cmp
ja
add
outsl
icebp
xor
stc
sarl
sub
sub
add
pop
or
cmp
test
cli
fisubl
push
aaa
dec
mov
hlt
out
mov
ficoms
push
xor
in
rcll
xor
aas
cmp
lcall
test
das
cmp
les
jae
add
dec
xchg
lds
je
jo
ret
bound
in
testl
test
cmp
daa
ss
mov
add
cmpsl
ss
sbb
in
idivl
add
inc
add
repz
dec
add
inc
sbb
pop
out
jne
fwait
call
lldt
add
cwtl
loop
add
xor
add
cmc
add
cli
inc
add
mov
add
adc
add
mov
addl
cmpl
jae
cmp
mov
sub
add
ret
add
stos
cli
add
cmpsl
add
and
lahf
jne
add
cld
xor
adc
mov
add
scas
add
sbb
hlt
subb
sbb
add
jp
add
je
add
cmc
mov
add
sub
mov
aaa
inc
add
and
jo
fldl
add
mov
add
xor
imul
add
pop
add
add
ror
pop
add
outsb
je
addr16
scas
add
repz
and
add
push
add
add
add
add
add
add
add
add
add
add
add
dec
sti
add
cwtl
add
adc
add
fdiv
ret
fstpt
pmuludq
add
add
mov
push
leave
lret
pop
add
add
mov
mov
add
xor
add
add
add
les
shrb
fadds
daa
outsb
pop
pop
leave
into
in
adc
das
pop
aam
cmp
push
and
sbb
pop
sub
mov
xor
dec
push
cs
mov
popf
mov
pop
loope
mov
fidivs
cltd
cmpsb
enter
xchg
mov
movsb
sbb
sbb
adc
int3
sub
outsl
mov
fldt
mov
lds
sarb
cmp
and
test
xchg
rolb
mov
cmp
pop
xor
add
add
pop
out
mov
sbb
jle
dec
inc
dec
mov
popf
jmp
daa
inc
cmp
ficoml
popa
jmp
jge
or
pop
sbb
addr16
test
jle
fildll
or
push
out
or
mov
pop
cmp
mov
mov
mov
sub
push
xor
dec
pop
cltd
outsl
xlat
imulb
daa
addr16
fsubs
add
pop
sub
jbe
aas
inc
sbb
push
das
fsubl
outsb
push
outsl
inc
in
and
notb
sbb
sbb
fucomip
dec
jo
lods
lahf
dec
test
orl
jno
xor
mov
xchg
test
inc
into
fwait
sarl
mov
lds
cmpsl
pop
xchg
lahf
addr16
mov
pop
sub
shrb
cmp
jno
imul
xor
mov
mov
pusha
pop
lret
cmp
cmp
mov
mov
adc
ss
ljmp
dec
fnstsw
cltd
movsl
aaa
sbb
test
mov
push
mov
add
add
pop
mov
push
xchg
mov
push
scas
sbb
push
loope
leave
sahf
cmp
aas
cmpsl
aaa
jbe
and
sub
lods
sbb
xor
dec
pushf
mov
sub
xchg
js
push
dec
cltd
addr16
cmpsb
jnp
xor
ds
popf
jne
xor
push
jl
mov
or
xchg
or
outsl
pop
out
sbb
mov
sbb
fisttpl
rorb
lods
repnz
divb
inc
xorl
jnp
jb
shr
cltd
repnz
sbb
iret
xchg
into
sub
add
dec
adc
xchg
xor
and
xor
cmp
mov
inc
test
dec
in
xor
or
pop
ds
push
xchg
add
add
mov
fsub
jecxz
lea
push
push
sub
stos
jle
push
inc
or
lods
jb
add
daa
push
mov
push
fnsave
loop
mov
enter
add
add
jbe
out
pop
xchg
test
lret
gs
lcall
fadds
or
xor
add
add
add
decb
jae
cmp
add
xor
inc
pushf
mov
outsb
movsl
sub
sub
pop
inc
lret
cs
jmp
xchg
sub
fs
ds
mov
add
or
std
or
dec
jae
cs
in
or
testb
push
xchg
adc
cmp
loop
data16
shrb
add
jno
in
sub
pop
cmp
sar
clc
or
push
xchg
pop
pop
inc
xchg
cmpsb
dec
add
add
addl
xlat
xor
shlb
hlt
ss
add
mov
inc
cwtl
stos
dec
out
jge
pop
mov
cmp
add
xlat
cmp
in
jo
ss
push
xor
jne
dec
push
add
mov
mov
lods
cmpsb
stos
int3
pop
shlb
popa
add
or
dec
push
mov
or
outsb
js
test
call
pop
roll
or
cmp
int3
aaa
cmp
pop
test
scas
and
dec
xchg
jmp
push
sbb
shl
jnp
dec
push
sahf
not
cmp
sub
fs
es
shrb
pop
ss
test
es
push
outsl
pop
and
repz
daa
addr16
sbb
adc
shrb
out
iret
sbb
add
pop
in
jns
add
add
jno
pop
xchg
mov
mov
mov
int3
mov
inc
cmp
ret
and
cmp
cmp
ja
out
loop
push
icebp
jle
pop
out
pop
lods
test
movsb
xchg
aas
sbb
incl
or
sbb
jne
dec
cmp
add
sahf
pop
andl
sbb
imulb
lods
mov
jmp
insb
xchg
or
push
xchg
insl
push
sbb
add
or
add
add
enter
popf
imul
xchg
pop
jbe
call
sub
stos
sbb
mov
mov
dec
ljmp
stos
cmp
mov
sub
imul
shr
imul
add
in
inc
cmpb
pop
inc
push
and
dec
dec
ss
lds
cmp
add
add
add
add
add
mov
add
add
add
jo
add
add
add
add
push
popf
add
add
add
add
add
clc
xor
add
add
add
cmp
add
add
add
cmp
add
add
add
add
add
add
pop
lret
add
add
add
add
ret
repz
add
add
add
add
fxsave
add
add
add
out
add
sub
add
movsb
mov
pop
xor
sbb
add
add
add
add
jmp
movl
rolb
push
add
add
dec
iret
sbbl
xor
scas
add
add
das
in
sub
and
jl
mov
imul
xchg
cmpsb
dec
icebp
xchg
sbb
mov
add
add
flds
loop
dec
insb
sub
out
je
outsb
inc
or
add
jl
test
mov
dec
inc
cmp
pop
lock
xor
jb
add
add
ret
arpl
sahf
or
mov
add
std
call
inc
ret
adc
add
ss
add
lcall
lods
push
add
repz
fldl
inc
inc
aaa
and
jb
adc
mov
inc
pop
pop
and
jno
xchg
dec
bound
popf
out
sub
inc
add
mov
bound
add
mov
test
clc
dec
mov
test
cmp
and
fisttpll
inc
mov
sbb
push
les
mov
lds
inc
xchg
mov
fildll
into
xor
sub
add
jno
inc
add
add
add
add
pop
add
add
add
add
add
add
jo
dec
add
add
add
add
add
add
add
add
add
data16
add
add
add
add
add
add
add
pop
add
add
aad
faddl
rolb
fwait
add
add
sbb
ljmp
add
add
add
add
add
mov
add
jmp
pop
add
add
add
add
xor
jns
lahf
add
add
popa
add
add
add
push
add
add
mov
add
push
add
add
add
lret
add
add
add
add
add
add
add
rolb
add
add
add
add
add
add
add
sbb
ltr
add
add
add
add
add
add
add
add
verw
adc
add
add
sub
push
add
add
test
out
add
add
add
add
add
add
add
mov
sub
lcall
cmpsl
jne
and
fcompl
push
xor
mov
jle
cmpsb
cmc
scas
pop
xchg
sbb
sub
sub
xor
add
add
add
add
push
push
push
out
xor
push
lds
cs
and
sti
xor
xor
lahf
jecxz
out
rcl
jnp
pop
cmp
inc
ja
sbb
cmp
insb
faddl
jge
mov
add
add
add
sbb
dec
add
add
in
in
add
add
add
dec
add
add
fadds
pop
add
add
add
sbb
incl
add
add
cli
add
add
add
add
add
mov
add
add
insb
add
add
out
or
dec
add
fadds
je
stos
add
push
iret
cmp
xor
and
fildl
and
dec
loop
aam
jne
dec
cmp
mov
addr16
pop
repz
mov
sub
pop
pop
inc
jp
add
push
das
mov
inc
cmp
inc
xchg
imul
aaa
subb
fistps
ja
mov
sub
sarb
jne
and
fcompl
jno
xor
mov
outsl
add
cmpsb
imulb
sub
loope,pn
inc
shll
add
sub
loopne
and
paddusw
xchg
cmp
mov
pop
pop
mov
iret
pop
xchg
hlt
xchg
mov
jle
aam
cmpsb
vphaddbd
lods
pop
test
push
cmp
nop
sti
test
shl
or
or
repz
dec
mov
das
cmpsb
jle
and
stc
out
aas
popl
xchg
orb
bound
xchg
pop
adc
fildl
jb
add
cltd
inc
pop
add
inc
push
lret
into
cmp
sub
dec
out
sub
ret
pop
testb
push
insl
push
push
xor
inc
pusha
and
mov
sub
fdivrs
jae
dec
xor
popa
sbb
cmp
push
inc
push
sub
jne
mov
sbb
sbb
lock
and
mov
jnp
ret
xchg
cli
sub
adc
push
in
jne
jb
shl
cwtl
cmc
adc
inc
aad
fldt
push
push
pushf
cmp
les
pop
cwtl
jecxz
sub
ret
or
or
hlt
mov
jo
nop
push
fldl2t
mov
cmp
jg
pop
andl
mov
dec
cmpsl
inc
jge
lret
xor
shll
push
xchg
shrl
stos
push
into
in
cltd
or
or
js
xchg
dec
mov
and
fdivrs
addb
repz
fs
arpl
inc
xchg
jo
or
scas
ss
cmp
rcl
mov
stos
fwait
push
leave
outsl
mov
inc
add
dec
shr
rcl
cmpsl
mov
scas
push
and
ret
push
cmp
in
pop
mov
xchg
loope
add
repnz
or
aad
repnz
cmc
inc
test
aad
pop
push
mov
pop
addr16
clc
test
push
jp
or
add
xchg
mov
insb
cmc
pushf
repnz
push
sbb
pop
push
pop
pop
lods
in
cs
xlat
sbb
mov
stc
inc
scas
fistpl
insb
push
test
mov
or
push
push
cld
fucom
and
cmpsl
js
dec
rcrl
sbb
mov
and
mov
or
cmp
das
repnz
stos
mov
rorl
sbb
pushf
xchg
fsincos
imul
add
inc
movsl
and
pop
mov
sub
sarl
mov
ljmp
jecxz
fbld
mov
mov
rorl
cmp
imul
inc
mov
jb
inc
xchg
add
sarl
dec
aad
out
fwait
lea
stos
add
movsl
into
in
lods
pop
aas
sbb
test
hlt
iret
mov
in
or
or
test
ret
icebp
dec
movsb
sahf
fnstcw
call
push
cld
mov
fbld
adc
xor
add
fsubs
cwtl
testb
jns
imul
sub
shrl
fisttps
add
mov
out
clc
add
dec
cmp
lcall
dec
mov
add
xchg
mov
add
add
cmpsl
cmp
or
add
push
icebp
xchg
outsl
xorl
dec
push
daa
adc
add
dec
inc
or
add
scas
lea
add
jb
sub
add
add
add
add
dec
sub
add
add
repnz
je
add
mov
arpl
add
add
xchg
bswap
cld
adc
je
aad
add
dec
les
and
sbb
mov
sub
add
pushf
xor
pop
scas
dec
add
lods
push
add
es
push
xorb
add
xchg
je
sub
dec
pop
lret
incl
add
add
and
loopne
das
push
add
add
fs
add
inc
fimull
inc
add
adc
in
add
cmp
add
inc
jmp
add
mov
pop
add
sbb
add
testl
add
add
mov
adc
xor
jmp
addl
adc
loop
out
cmpsb
pop
gs
cltd
loope
mov
fistpll
cmp
cmp
adc
add
add
add
cli
add
add
push
inc
add
xor
sub
add
lret
add
movb
cli
loop
mov
add
add
add
add
cmc
adc
cmp
sbb
jg
lds
jl
inc
dec
lea
xchg
dec
in
adc
add
add
lods
movl
gs
flds
add
add
out
lea
add
add
cmp
push
ret
add
cmp
add
insl
movsb
jcxz
dec
out
in
inc
add
add
add
and
jbe
mov
adc
out
add
add
scas
or
test
add
add
sbb
and
js
or
in
lods
add
add
ss
inc
pop
add
add
add
mov
add
aam
add
and
add
cld
or
add
mov
sbb
mov
xor
add
add
add
inc
icebp
pop
add
add
push
std
cltd
mov
clc
or
add
mov
mov
add
add
call
add
add
fisubrs
add
mov
add
test
add
add
stc
mov
add
fmulp
mov
add
add
jle
stos
in
push
lcall
add
add
dec
mov
add
add
inc
aam
add
add
cmp
cld
add
add
add
mov
add
add
add
add
add
add
add
jne
mov
mov
fiaddl
add
add
addb
add
push
cmpsl
imul
add
in
aam
add
add
shrb
add
mov
add
add
mov
add
loopne
mov
add
lds
add
add
lods
jnp
fwait
add
add
int
sbb
add
add
sti
cmp
add
loopne
add
add
pop
sbb
add
cmc
jnp
mov
scas
xchg
push
lret
add
pop
imul
add
add
cmc
adc
add
add
sub
add
rol
add
add
or
pop
add
add
add
ret
add
add
sbb
add
adc
lods
add
add
fiaddl
fildl
add
add
stc
fldcw
add
cmp
add
ret
dec
mov
add
loop
add
add
add
pop
addl
mov
std
add
add
fcmovb
and
mov
xor
add
add
cltd
adc
add
ret
ja
jb
add
add
and
pop
or
leave
stc
leave
add
hlt
mov
add
dec
inc
add
push
xor
pop
xchg
add
loope
add
push
rolb
jb
dec
add
mov
dec
add
add
movsl
add
mov
dec
add
jp
mov
push
add
adc
xchg
fwait
inc
add
push
add
fwait
dec
add
sub
mov
jo
jp
mov
cs
add
adcl
push
add
push
jne
fs
add
mov
add
sbb
out
adc
add
cmpsb
add
mov
add
sub
add
in
inc
out
stos
add
or
jbe
add
sbb
add
scas
movb
fldt
add
or
add
loop
cmp
lahf
push
add
add
add
cmp
jnp
pop
sub
jb
pop
je
push
into
sub
mov
and
dec
dec
xor
lea
xlat
sti
pop
rclb
repnz
loop
fwait
addr16
dec
mov
int3
iret
sbb
sahf
arpl
out
mov
call
pop
fadds
lcall
aaa
xlat
rorb
and
fwait
and
add
gs
pop
dec
lret
sub
xchg
aad
and
iret
adc
and
push
push
ss
and
add
inc
lds
loope
imul
jle
nop
clc
sbb
js
add
ja
out
adc
xchg
xlat
mov
xchg
scas
je
xor
add
int3
fwait
in
adc
lret
dec
mov
fadds
or
jb
lahf
and
mov
or
loope
lock
imul
jbe
add
mov
mov
and
dec
outsl
sti
add
or
gs
jle
add
imul
or
mov
jae
es
lods
in
fldt
add
push
out
stc
jb
adc
xor
ja
dec
add
or
in
pop
and
lret
les
negl
lds
pushf
pop
lahf
js
aas
fwait
add
roll
cmp
movsl
inc
stos
inc
arpl
loope
sbb
nop
pop
mov
add
jnp
jge
jecxz
xor
test
cwtl
sbb
push
ficompl
and
fsubs
push
or
data16
cltd
adc
jne
add
aas
jmp
inc
sahf
int
roll
movsb
inc
es
jmp
cmp
mov
or
cmp
pop
dec
into
sub
out
and
lods
pop
push
cmp
shrl
cmp
insl
movl
jmp
push
loope
add
or
mov
dec
dec
sti
xchg
insb
andl
js
add
outsl
mov
push
outsl
mov
lds
fwait
mov
jae
add
fisttpll
and
pop
ret
sub
jg
or
dec
es
sbb
lock
add
sti
cmp
xchg
js
fisttpll
das
xchg
jp
mov
rcl
test
xor
test
add
add
add
cmp
xchg
je
sub
sbb
pop
pop
shlb
add
stos
push
xor
je
cli
fldcw
pop
xchg
inc
das
sub
pusha
push
and
add
add
sti
push
push
inc
and
push
daa
add
mov
sbb
sbb
rol
push
xor
mov
push
xlat
mov
sbb
or
cmp
jne
jo
jl
movsl
jmp
addb
pop
fdivs
fs
sbb
mov
dec
inc
jecxz
ja
xor
ss
and
imul
jb
mov
adc
mov
add
flds
loope
add
adc
pop
stos
insl
add
outsl
mov
lds
mov
add
add
outsb
shll
test
pop
rcll
cld
or
add
lcall
outsb
dec
pop
add
adc
loop
add
pop
stc
push
dec
aad
aam
mov
lcall
iret
leave
mov
and
outsl
xor
mov
add
cmp
mov
jae
fbld
add
add
or
rol
inc
lcall
dec
push
ds
cmp
and
stos
push
sub
cmovne
inc
add
sbb
mov
fistpl
jmp
add
mov
in
ja
shlb
test
push
incb
push
jb
mov
sbb
add
jns
cmpsb
loope
fsubrs
in
dec
inc
mov
add
add
stc
jne
out
add
mov
jmp
aad
add
pop
repnz
add
add
add
and
add
jbe
add
add
jecxz
xor
cmp
jg
add
push
xchg
cmp
add
sbb
add
add
sbb
add
add
or
filds
cli
add
add
js
add
add
add
add
add
add
add
jl
adc
pop
sub
nop
add
add
jge
add
add
add
test
add
jae
adc
mov
push
lret
add
add
inc
add
cli
rolb
movsb
add
add
lea
add
add
add
add
add
fcmovnb
and
test
add
cwtl
adc
stos
add
add
add
jnp
add
mov
add
add
add
cli
add
add
add
add
add
sub
add
add
add
mov
add
popa
add
add
add
add
add
add
add
hlt
add
add
add
add
add
testl
add
sbb
add
pop
add
add
add
lret
add
add
mov
add
add
add
add
add
push
add
add
add
add
add
add
add
into
add
add
add
add
add
add
add
add
add
add
add
out
add
das
add
add
add
add
add
add
add
add
add
in
add
add
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
movsl
add
add
add
add
add
add
add
add
add
jecxz
add
roll
add
add
add
add
add
add
add
add
push
add
add
add
add
add
push
add
add
add
add
add
add
add
add
add
inc
add
add
add
add
add
add
add
add
add
add
add
adc
add
mov
add
inc
add
add
add
add
add
add
add
mov
add
ja
add
jp
add
xchg
add
add
add
add
add
add
add
add
add
add
push
add
xchg
add
add
add
add
xchg
clc
add
xor
add
xor
fstps
add
ror
add
cmp
add
sbb
add
test
cmp
cmp
mov
ljmp
mov
pop
xchg
inc
xchg
inc
add
add
add
inc
cmp
outsb
push
bswap
addl
dec
fsts
jp
subb
mov
out
jl
push
sub
in
cwtl
dec
inc
sbb
addb
add
add
mov
jnp
filds
sbb
sti
adc
cmp
bswap
dec
scas
es
sub
add
call
jle
cltd
arpl
push
or
cwtl
stos
popf
push
jmp
cmp
add
add
aad
cmp
call
arpl
sbb
adc
add
cli
rolb
add
jnp
and
xlat
popa
xlat
divl
xor
in
aaa
push
add
add
add
mov
push
add
inc
data16
and
jno
clc
xchg
push
pop
ds
sbb
aaa
add
jne
popf
mov
add
push
iret
andb
add
lea
add
cmp
add
add
add
pushf
sbb
add
add
add
add
mov
add
or
add
add
add
xor
add
add
add
push
mov
inc
fistps
add
mov
add
add
add
mov
add
add
add
out
xchg
add
aam
iret
mov
add
add
add
add
add
aam
loopne
add
add
outsl
push
pop
jae
fisttpl
bound
fstpl
scas
mov
add
xchg
and
add
push
pop
xchg
add
add
bound
add
add
add
test
add
jmp
adc
gs
je
pop
mov
xchg
pop
dec
add
imul
add
add
add
add
add
xchg
add
testb
add
add
lods
out
lret
ja
add
repnz
dec
or
incl
add
add
sub
fildl
out
adc
mov
xorb
and
add
xchg
insb
movsb
addr16
popa
aas
add
mov
add
xchg
lret
int3
jecxz
cltd
shll
add
movsb
pop
add
sub
add
pop
pop
add
adc
mov
mov
add
sbb
add
adc
jb
push
add
lods
add
inc
add
xlat
add
jmp
or
aam
verr
push
movl
xchg
push
rolb
cmp
imul
mov
add
fiaddl
rep
add
leave
add
xchg
out
add
inc
add
ja
int3
adc
add
adc
add
fiaddl
rcrb
inc
add
sbb
add
in
add
add
add
add
add
add
add
xor
add
mov
out
add
dec
pop
add
imul
out
jne
inc
es
add
mov
lret
jmp
add
dec
add
add
add
add
add
add
add
jo
add
fistps
pop
pop
add
add
mov
xchg
add
mov
sbb
mov
add
in
push
cmc
adc
add
add
add
add
add
add
sub
add
repz
add
add
jmp
add
add
add
add
pop
out
add
xchg
enter
xchg
sbb
add
sbb
add
or
add
mov
add
pop
add
add
add
pop
add
add
add
sub
pushf
add
es
add
aaa
cltd
add
add
add
mov
add
movsb
nop
faddl
outsl
test
add
add
add
rolb
dec
pushf
stos
push
lcall
dec
les
das
push
lahf
xlat
jg
lock
mov
jecxz
cld
negl
lahf
fildl
pop
mov
xchg
and
insl
ja
push
cld
ficompl
inc
stc
push
jge
mov
sbb
push
pop
aaa
dec
dec
inc
sbb
inc
das
sti
dec
xor
jg
mov
cwtl
lods
sbb
leave
or
xchg
popf
and
xchg
lcall
cmp
movsb
dec
sub
icebp
mov
jp
xchg
out
push
push
mov
std
adc
cmp
jno
inc
xchg
dec
cwtl
scas
sarb
es
mov
xor
aas
orb
jnp
in
add
aas
xchg
imul
aam
xchg
sbb
xchg
dec
jmp
add
outsb
cltd
add
push
ret
andl
or
push
aas
and
push
inc
leave
and
scas
xchg
movsb
push
cwtl
xlat
xor
push
mov
push
ret
sub
sbbb
add
push
xchg
push
stos
outsl
mov
mov
xchg
pop
sbb
jecxz
sti
fistpl
addr16
lock
dec
xchg
jle
sub
inc
les
aaa
dec
xor
mov
cmp
xor
in
aad
negb
idivl
cmp
movsl
fisttps
push
sub
xor
dec
mov
lret
xchg
sub
cs
xor
aam
or
pop
jmp
sahf
fwait
pop
adc
push
push
fsubl
dec
lcall
cmp
adc
jbe
cmp
sbb
pop
cmp
mov
std
jns
jecxz
cmp
xchg
imul
jg
pop
lret
ss
dec
out
adc
add
push
cmp
add
pop
int3
leave
xchg
jns
dec
lea
out
mov
push
cmp
rorb
push
inc
iret
and
aas
mov
aad
sbb
push
shll
imul
add
mov
mov
imul
pushf
sbb
mov
sbbb
adc
pusha
je
push
stc
mov
sahf
out
or
ja
xor
subb
sbb
mov
sub
xor
inc
ss
stc
or
cmpsl
sbb
lods
movsb
aad
cmc
xor
mov
mov
fdivrs
dec
jne
xlat
repnz
cs
mov
pop
mov
sbb
sahf
in
addr16
adc
xor
adc
ret
sbb
inc
loopne
in
mov
push
push
les
mov
adc
movsl
mov
in
pop
jecxz
call
pushl
dec
mov
jle
jl
add
and
test
xchg
out
es
mov
mov
jbe
xor
dec
xchg
inc
enter
jmp
pop
aam
pop
push
lret
aas
cmc
fcoml
pop
lret
and
dec
nopl
or
inc
jbe
and
and
mov
and
aas
push
pop
int
aam
jnp
aas
jp
in
enter
xchg
ffree
incb
loopne
mov
cmp
lret
xchg
movsb
xlat
scas
sbb
enter
add
shrl
adc
cmp
push
lods
push
adc
xchg
push
push
enter
scas
leave
mov
pop
mov
data16
pop
xlat
sbb
clc
std
xor
loop
cs
jo
ret
jl
test
mov
cli
pop
or
out
sub
push
adc
xor
jae
movsb
test
lret
add
sbb
shll
adc
ss
jns
or
xor
js
jle
or
out
rorl
ja
daa
pop
dec
loope
in
adcb
jo
sub
into
xor
add
push
lcall
push
enter
divl
enter
movsb
dec
or
cld
mov
push
xchg
gs
bound
inc
repz
mov
jb
sub
sbb
dec
pop
out
jbe
jl
lcall
dec
lock
jae
sub
mov
xlat
movsl
push
xchg
rolb
sahf
stos
aad
sbb
dec
lea
cmp
pushf
lods
adc
movsb
pop
test
cld
ss
adc
shll
je
lret
call
stos
sbb
fnstsw
jecxz
pop
mov
cli
cli
pushl
mov
roll
inc
mov
xor
pop
sbb
xchg
xor
and
shll
lahf
fwait
addr16
in
fists
aad
cltd
call
push
je
or
in
lods
cwtl
dec
mov
jmp
xchg
xorb
insb
xor
stos
cmovl
pusha
sarb
and
inc
pushf
mov
push
test
pop
push
into
std
inc
xor
shll
das
sub
mov
popa
xor
or
es
push
popl
mov
mov
insb
mov
and
jne
sti
je
les
call
sahf
aam
lock
iret
mov
and
nop
fldl
clc
xchg
test
cmc
mov
jp
xlat
lahf
lahf
adc
test
xor
or
int3
popa
xchg
push
cmpsb
into
jecxz
dec
test
fldenv
jle
cmp
push
push
stc
sti
loop
jge
or
cmp
xchg
jne
sarl
mov
pop
or
sbb
dec
push
adc
xor
scas
xchg
clc
aaa
stos
xor
cwtl
push
or
rcr
jo
adc
sub
or
sub
jne
ja
push
hlt
out
fimuls
mov
in
test
mov
cs
dec
nop
inc
iret
cmp
add
dec
pop
roll
mov
les
clc
mov
insb
repz
cs
or
sbb
sub
inc
icebp
xchg
cs
sahf
mov
outsl
daa
cmp
aas
cmp
ret
je
sti
jl
les
lods
jae
push
int
imul
scas
shlb
push
adc
mov
pushf
scas
push
test
int
mov
pop
cmp
lahf
xchg
fsubl
cmp
or
adc
outsl
cltd
fiaddl
into
push
lret
shlb
pop
push
mov
ljmp
lahf
jge
mov
sbb
outsb
cmp
cltd
cmc
cmp
shrb
push
aad
or
sbb
push
push
sbb
cmp
das
clc
aaa
shlb
cwtl
add
fbstp
sbb
lret
aam
sbb
cld
sub
push
repnz
add
sbb
mov
jnp
out
cmpsb
xchg
test
scas
pop
xchg
stos
loopne
popf
int
mov
loopne
push
and
mov
jnp
xor
test
pop
mov
mov
xor
test
mov
lea
popf
mov
push
je
push
int3
jb
stc
jnp
movl
ret
scas
ret
jle
cld
enter
push
popf
fimuls
negl
out
xchg
and
lock
adc
rclb
push
sbb
adc
push
jle
iret
insl
sahf
pop
aam
dec
xlat
repnz
inc
ds
mov
std
push
into
add
lock
js
cwtl
push
ljmp
cmp
mov
inc
adc
xor
sbb
cmp
lahf
jnp
pop
add
cld
repz
cmp
push
ljmp
les
add
and
scas
or
and
mov
xchg
cmpsb
insl
scas
and
test
out
loope
and
test
cld
stos
dec
js
xor
push
xor
inc
push
or
add
stos
sbb
dec
dec
imulb
dec
and
sub
imul
adc
jno
pop
pusha
adc
sbb
les
fwait
xor
jmp
mov
jp
push
shlb
or
cmpsb
xchg
in
movsl
and
repnz
xchg
sbb
cld
xor
mov
or
and
nop
hlt
dec
movsl
cld
xchg
jae,pn
js
ret
out
jecxz
daa
cmp
inc
int3
dec
mov
idivl
std
or
add
xchg
dec
cmp
mov
or
sub
push
aam
pusha
adc
xor
pop
pop
sbb
add
xchg
cltd
push
mov
cmp
in
add
ret
test
jmp
push
scas
push
add
and
xchg
ret
lea
int3
sbb
push
pop
inc
mov
cmp
mov
test
movsb
arpl
roll
inc
data16
rorb
cmc
popf
imul
fisubs
sub
inc
arpl
and
xor
orl
mov
inc
scas
xor
xor
lea
jecxz
loope
js
cmp
mov
call
sub
shll
fnsave
cmpsl
scas
lret
fidivrs
fistl
add
cltd
out
pop
or
mov
popf
and
mov
icebp
inc
fdivrs
cmp
jb
js
dec
int
call
or
dec
xor
pop
mov
xchg
in
adc
std
push
mov
pop
add
rol
and
repnz
std
faddp
insb
xchg
push
and
jbe
hlt
and
xchg
xor
fadd
je
inc
xchg
sub
icebp
mov
movsb
push
stos
outsl
test
ds
mov
es
cmp
cmpsl
dec
push
inc
fxtract
fidivs
out
dec
jp
cmp
and
cmp
stos
xor
ret
mov
aaa
movsb
adc
mov
mov
in
xor
cwtl
popa
test
dec
leave
xor
sarl
lea
jns
push
ret
ljmp
fldenv
xlat
test
movsl
call
mov
jo
rcll
mov
cmp
lods
test
push
fs
out
sbb
mov
lret
imul
outsl
and
dec
ret
clc
icebp
add
xor
add
mov
mov
inc
mov
sub
sbb
mov
sbb
daa
inc
jmp
stos
data16
cmp
decl
xchg
jecxz
clc
shrl
add
dec
imul
fmuls
fucom
mov
push
jg
jmp
mov
mov
scas
data16
jecxz
inc
xchg
xor
inc
bound
sub
orb
or
fisubrl
inc
jae
cmp
and
or
mov
sbb
mov
subb
xchg
dec
dec
insl
push
ss
in
aaa
dec
xchg
das
add
daa
into
movsb
popa
xor
repz
mov
fildll
loope
fisubs
lods
hlt
mov
or
fisubs
cs
pop
insl
paddusb
call
pop
adc
dec
scas
fwait
cmpsb
adc
mov
bound
mov
sbb
cmc
ss
mov
lcall
jecxz
outsb
mov
movsl
xchg
repz
sbb
sbb
mov
pop
pop
ret
ret
out
cmpsb
push
outsl
std
inc
jne
or
into
insb
sahf
sub
aas
sti
sbb
ds
je
mov
stc
jmp
jnp
and
sub
insb
fs
out
lds
push
scas
push
int
je
jns
mov
mov
loope
les
aad
mov
ss
dec
mov
imul
fmull
mov
enter
daa
sti
fldl
iret
in
mov
ret
mov
cmc
inc
mov
adc
in
int3
or
out
dec
mov
add
les
pop
popf
in
loopne
mov
jl
jae
in
cmp
mov
mov
aas
dec
cmpsb
scas
lds
je
outsl
lds
enter
add
inc
fst
cli
xorl
cmpsb
js
stos
sbb
aad
pop
pop
out
out
fimull
std
xor
or
fisubl
sbb
sub
mov
jp
xor
pop
leave
out
dec
stos
sub
jmp
loope
add
insl
cmp
mov
inc
loope
sarb
popa
cltd
push
lahf
mov
das
sahf
dec
push
pop
fmulp
into
leave
mov
jne
cmp
movsl
js
xor
daa
or
pop
das
mov
mov
or
es
pushf
lods
ds
xor
mov
xchg
sbb
test
leave
rcll
into
into
ret
xchg
scas
cld
mov
cmc
fcompl
in
or
xchg
ret
xchg
mov
insb
cmp
xor
jge
rcr
jle
ret
push
out
pop
sarb
movsl
dec
inc
and
cmpsb
leave
jo
jb
inc
int
in
gs
fwait
rcr
cmp
dec
dec
cmp
xchg
cmpsl
inc
lods
nop
mov
pop
or
add
mov
test
add
cmp
pop
pop
mov
inc
xor
lahf
jmp
insl
mov
push
sub
test
adc
jno
aas
ret
out
insb
or
sub
pop
xchg
jmp
adc
nop
aam
xor
imul
cs
cmp
mov
jmp
popf
call
lods
pop
mov
add
roll
dec
inc
mov
mov
jns
insl
xor
scas
xor
sarb
adcl
push
jl
movb
push
test
int
lcall
cwtl
shlb
or
push
ret
test
jecxz
xor
in
mov
xor
loop
push
xchg
decl
push
sarl
push
sbb
sbb
dec
ret
fwait
int3
das
outsb
inc
and
cmp
je
add
dec
cltd
or
adc
scas
push
push
inc
jle
jl
imul
push
mov
add
pop
movsl
movb
adc
rclb
shlb
pop
and
notb
push
xor
xchg
bound
ja
inc
scas
aas
fwait
jne
dec
scas
and
jmp
add
cmp
fcompl
inc
pushf
push
mov
mov
mov
xor
movsl
dec
dec
aas
rcrb
pushf
add
pusha
xor
xchg
fs
leave
xor
loope
lods
mov
push
jl
int3
cltd
push
andb
test
aaa
movsb
mov
mov
enter
sbb
mov
out
popf
mov
mov
mov
popf
in
jp
out
inc
enter
test
test
add
leave
cmp
pop
and
out
aad
add
fwait
adc
and
mov
mov
cmp
fwait
call
nop
cld
psrld
aas
scas
mov
lock
inc
pop
cs
movsb
dec
push
inc
add
jnp
mov
out
lock
mov
adc
loop
in
mov
mov
repz
aas
fwait
nop
repnz
repnz
std
cwtl
or
xchg
cmp
lods
sbb
jecxz
xchg
int
leave
or
mov
or
icebp
jecxz
mov
lcall
and
inc
insl
mov
sub
jns
sub
test
jl
or
adc
lods
lahf
ja
cmp
sub
mov
orl
mov
aas
into
popf
xchg
cmp
pushl
mov
or
jge
sub
ret
mov
cmc
loopne
dec
pop
pop
movsb
loopne
jg
cmp
mov
mov
gs
xchg
push
je
les
add
out
sub
dec
xchg
stc
or
push
mulb
and
andb
dec
in
ror
mov
movsl
xor
in
push
mov
push
dec
inc
imul
out
dec
out
sub
mov
and
mov
repnz
push
stos
call
sub
push
pop
mov
div
or
sbb
push
mov
pop
out
xchg
ds
fwait
jl
push
mov
sbb
cmc
mov
js
sub
rsm
popa
cmpsl
jge
xor
adc
cltd
sub
xor
ja
fstp
sbb
test
jge
jmp
stc
xchg
aas
lcall
iret
xchg
sub
adcb
cwtl
mov
stos
jecxz
xor
aaa
int
mov
mov
rorl
mov
mov
push
into
out
cwtl
jecxz
pop
test
xor
mov
push
sahf
xor
out
cwtl
xor
addb
jmp
mov
mov
out
in
mov
stos
aam
imul
jg
inc
push
jle
or
test
cmp
and
xlat
push
popf
in
clc
jecxz
into
dec
add
cmc
popl
std
aam
jg
rcrb
push
das
dec
push
rcrb
pop
adc
ds
pop
add
and
push
sbb
movsb
cld
idivb
movsb
and
xor
ds
aad
shll
dec
push
fcmovb
sbb
jl
roll
fldcw
push
shrd
cmpsb
add
leave
cltd
out
and
inc
nop
push
xchg
insl
cmpsl
sbb
xor
fwait
xchg
stos
ss
into
test
xchg
xchg
aam
subb
mov
lods
sti
enter
loop
sub
loope
negl
shlb
fwait
stc
pushf
outsl
aam
test
decb
inc
ljmp
outsb
push
sbb
adc
movsl
lret
cmc
cld
inc
loopne
push
lea
fcmovb
or
mov
rorb
cwtl
scas
dec
inc
mov
push
xchg
popf
sbb
out
loope
cmp
shl
pop
movsl
sbb
mov
inc
jle
mov
or
test
insl
jmp
sbb
popa
pop
movsl
imul
cmpb
mov
mov
mov
cli
fisttpl
sbb
or
push
rcrl
jmp
and
nop
and
fstpt
cmp
jmp
lods
xorb
loope
daa
in
pushf
jmp
mov
cmp
insl
cwtl
shll
pop
jnp
aam
int3
stos
lret
neg
fldt
add
xchg
or
mov
mov
pop
xchg
push
insl
mov
xor
cli
cwtl
in
inc
mov
into
movsl
std
push
mov
jno
jns
add
int
jo
insl
mov
lret
add
mov
imul
push
cmc
aaa
or
movb
imul
jno
fs
ds
sti
sub
mov
add
in
call
or
leave
or
push
mov
repz
push
xchg
cmp
dec
fwait
cmp
leave
in
add
imul
repz
fcmove
or
push
mov
in
into
lahf
push
jae
shl
cmp
jl
inc
dec
inc
jecxz
adc
fs
shlb
rcrl
cmp
lcall
dec
or
stos
iret
lcall
fs
lret
stos
mov
xchg
addr16
xchg
push
add
mov
push
fsubp
lods
mov
mov
rorl
in
inc
mov
test
cmc
out
add
loopne
sub
sub
mov
cmc
xor
sti
lahf
int
cli
push
in
js
dec
scas
fs
ds
adc
pop
or
add
xchg
sbb
fwait
scas
nop
pop
mov
stc
adc
inc
jne
clc
stos
mov
xchg
stc
inc
inc
jae
bound
pop
frstor
repz
test
cmp
sbb
xor
lcall
leave
loop
push
outsl
xchg
fwait
shl
pop
testb
fdiv
cmp
inc
popf
das
loop
mov
pop
aad
loopne
xchg
fs
xchg
aam
ljmp
cmp
adc
xchg
idiv
mov
ficoms
mov
jb
outsl
jns
push
xor
jmp
in
icebp
aam
mov
lds
sbb
add
xlat
mov
mov
out
mov
or
adc
hlt
mov
mov
pusha
fists
addb
es
pop
negl
imul
cmp
pop
iret
lods
cli
lods
arpl
andl
dec
ja
xor
push
add
push
mov
imul
pop
pop
and
xchg
pop
mov
jnp
outsb
imul
mov
scas
lock
inc
jbe
sub
cmp
ret
pop
lcall
sub
sbb
in
cs
rcl
bound
xor
push
movsl
cld
lret
xchg
jbe
jg
pop
cmpsb
push
mov
dec
jle
mov
xor
call
clc
and
ficompl
xchg
repnz
mov
ret
lcall
mov
jp
enter
push
aaa
std
iret
out
mov
mov
sbb
inc
xchg
push
mov
out
cmpsb
lcall
sbbl
mov
mov
fiaddl
dec
xchg
inc
je
jns
xor
outsl
xchg
and
sub
enter
pop
scas
into
or
sub
xchg
fnstcw
sub
or
inc
add
add
gs
pop
dec
dec
sbbl
addr16
mov
inc
or
ret
int3
out
negb
mov
ret
sbb
test
pop
outsb
bound
sub
push
sbb
cld
pop
xor
lea
pop
pop
fidivs
imul
or
fistl
int
mov
fidivrs
mov
jno
mov
scas
pushf
pop
jl
rclb
imul
jecxz
or
and
shlb
dec
ss
dec
imul
fs
iret
fldenv
pop
mov
fnstenv
and
cmp
in
dec
mov
mov
loope
data16
call
mov
inc
fists
pop
loop
jnp
ss
in
jo
add
and
push
push
enter
pop
pop
add
pusha
pop
sbb
mov
fldl
int
fcoml
push
pop
and
xchg
addr16
in
stos
mov
jae
popa
imul
jnp
std
cltd
mov
fcomp
sub
repnz
aad
loope
inc
and
test
cmp
xchg
leave
pop
test
push
mov
movb
out
adc
xabort
jle
fimuls
adc
jno
sbb
fimull
rcrb
push
fnstsw
mov
js
nop
outsb
push
neg
sub
mov
outsb
dec
in
fcmovnbe
daa
ret
push
adc
aas
dec
sbb
pop
or
sub
dec
pop
pushf
push
cmp
ja
cmp
fsubrl
inc
xor
mov
or
mov
cli
fcom
mov
incb
lock
imul
mov
stos
mul
push
movsb
push
pop
jno
mov
adc
xchg
arpl
leave
enter
stos
sub
pop
dec
mov
ret
adc
adc
push
and
fwait
push
add
xchg
scas
add
mov
mov
adc
mov
js
dec
fisubs
mov
jg
xchg
mov
fadds
out
outsl
push
mov
sqrtps
pop
jno
loope
cld
adc
xlat
dec
test
jae
inc
js
lret
addr16
inc
jnp
in
iret
gs
xchg
mov
arpl
das
add
inc
dec
nop
lods
cwtl
pusha
xchg
push
andb
xchg
ret
inc
rorb
lea
dec
adc
cmpsl
mov
mov
mov
negb
jmp
cmp
xchg
push
hlt
cwtl
or
fcomp
push
push
pop
push
pop
cmp
lods
in
in
sub
incb
mov
mov
ljmp
mov
push
mov
inc
add
