sti
dec
mov
sbb
fs
movsl
aad
mov
pop
ret
or
pop
pop
pop
or
and
add
adc
or
ret
add
cld
pop
jmp
add
pop
adc
pop
pop
pop
ret
or
push
ficompl
jnp
pop
xor
xor
push
sub
shll
inc
adc
add
call
add
push
and
in
fucomi
incl
add
adc
addb
push
jbe
inc
add
add
mov
stc
add
or
fstpl
pusha
inc
add
sbb
mov
int3
mov
push
cmp
add
push
or
mov
mulb
adc
add
sbb
sbb
add
push
arpl
clc
add
mov
andb
or
sbb
js
test
push
adc
add
push
andb
aam
adc
stos
imul
sbb
push
adc
inc
fadd
jbe
push
pusha
add
inc
jne
xchg
add
andl
inc
fadds
or
xchg
mov
jbe
arpl
add
mov
pusha
sub
aas
shlb
mov
sbb
xor
inc
adc
sbb
mov
push
push
inc
mov
out
pop
sub
adcb
shrl
and
add
jmp
xor
out
mov
adc
add
jg
push
mov
add
movl
mov
mov
shrb
add
clc
mov
in
dec
mov
inc
mov
sti
popf
stc
push
call
sub
mov
imul
sti
mov
jle
dec
in
and
mov
or
adc
mov
fistps
xlat
mov
mov
xor
not
mov
popf
hlt
mov
roll
add
aaa
loope
rolb
jne
sub
fisubs
add
pop
fmull
fimuls
inc
dec
ret
sub
mov
lods
std
sbb
in
add
mov
stos
aam
dec
lcall
aam
ret
adc
mov
mov
js
jbe
bound
sub
jl
mov
and
sbb
mov
int
mov
gs
loop
jp
adc
std
in
fcmovnu
push
push
call
sub
les
jne
nop
insl
shl
adc
add
pusha
sbbl
inc
sti
adc
cmpl
sbb
std
cmpsb
test
out
sbb
sub
rcll
sbb
addr16
loopne
shlb
xchg
sbb
or
sub
adc
cld
mov
repnz
cld
loopne
or
fnstcw
or
lds
and
cmp
out
mov
js
sbb
jnp
jo
jne
out
jl
jnp
adc
jge
es
xor
es
xorl
and
mov
aaa
daa
js
add
in
or
fstpt
dec
push
in
sub
dec
jns
pop
inc
or
sbb
dec
lock
cwtl
not
es
push
mov
pop
sbb
test
out
push
mov
mov
pop
push
pextrw
aas
icebp
push
sbb
mov
inc
sti
aas
ret
in
mov
sbb
jecxz
jb
lea
inc
and
addr16
hlt
out
add
push
inc
mov
in
or
or
pop
rcrl
rolb
push
jge
mov
xchg
jge
add
out
mov
imul
ret
roll
pop
xor
rolb
out
jl
sub
add
adc
xor
shlb
xlat
movb
jmp
inc
dec
add
xchg
sub
mov
stos
sbb
test
movsl
pusha
aad
sbbb
inc
mov
out
add
fmuls
adc
mov
aad
fisttps
and
fldcw
xchg
adc
pop
in
add
mov
add
in
scas
adc
pop
xor
packuswb
jo
clc
ret
icebp
neg
xchg
imul
sbb
and
xor
add
andl
nopl
mov
jbe
mov
js
jmp
push
fwait
sub
movsb
jl
mov
xchg
xor
cld
int3
adc
loopne
xor
dec
sbb
xor
sbb
roll
arpl
mov
mov
notb
imul
inc
data16
imulb
adc
pop
mov
mov
divl
stos
mov
ret
das
test
loopne
add
xorl
or
xor
push
scas
js
popf
inc
cmpsl
mov
nop
jo
loopne
sbb
test
mov
push
mov
inc
cmpsl
add
nop
shl
inc
push
mov
int
inc
or
mov
repnz
fucomi
jmp
pcmpgtw
or
test
xchg
arpl
ret
jp
inc
andl
je
mov
or
enter
stos
inc
add
cmpsb
iret
mov
out
enter
adc
cld
push
cld
pusha
pop
rorl
inc
lahf
adc
sub
cmp
test
and
les
xor
add
jb
pop
testl
orb
add
sub
bts
or
les
lock
scas
pop
lock
dec
push
dec
mov
inc
push
icebp
aas
sbb
cmp
pop
jb
lock
add
pop
or
and
sbb
fcmovnu
scas
dec
sbbl
dec
cld
rcl
mov
outsb
idivb
lock
or
mov
inc
adc
out
popl
lock
add
popa
mov
push
js
or
orb
sbb
sbb
cs
sub
enter
aas
mov
jo
add
ret
mov
sbb
loopne
popa
mov
pop
cld
adc
shll
js
and
in
es
jge
adc
jp
rolb
xor
or
aaa
sub
jl
fadds
mov
lcall
and
lds
pusha
adc
out
pop
sti
cltd
push
gs
js
dec
lret
mov
and
or
lock
jo
in
dec
xor
roll
pop
or
add
rolb
cld
xor
mov
repnz
pshufw
into
push
push
mov
arpl
jae
xor
jp
jle
faddl
icebp
push
lret
mov
add
inc
xor
sub
and
rorb
mov
inc
adc
lock
dec
neg
inc
jmp
inc
adc
pop
cld
int
mov
xor
sub
fildl
test
incb
ljmp
jmp
mov
jae
push
enter
add
sbb
rcll
adc
mov
adc
pop
sbb
or
fwait
mov
add
xor
inc
lock
adc
int3
mov
imul
adc
mov
sbb
test
sub
inc
mov
adc
and
add
shll
sbb
sub
mov
js
pop
or
mov
xor
mov
repnz
pop
popa
std
or
out
mov
xor
add
loopne
ficompl
jo
sub
or
pop
pop
icebp
cmp
mov
cmp
loopne
mov
push
xor
push
sub
repnz
push
outsb
or
adc
rorb
in
arpl
dec
add
fisttps
or
ja
add
fildl
pop
mov
shlb
leave
xchg
testl
lds
in
stos
push
jl
pusha
or
mov
lea
icebp
jg
daa
or
bound
push
sub
cltd
sbb
cmpsl
lret
stc
add
inc
lahf
in
sub
or
mov
mov
jne
push
lea
pop
or
add
mov
pop
jl
frstor
loopne
loope
pop
sysenter
cmp
int
rorl
ss
mov
adc
inc
dec
roll
xchg
gs
dec
sahf
lahf
mov
adc
orb
xchg
add
addr16
shl
push
adc
stos
cld
lahf
push
stos
and
seta
push
push
fimull
xor
outsb
mov
cmpsl
fwait
dec
push
loop
pop
xor
xchg
sets
mov
int3
sbb
and
nop
mov
dec
dec
xor
neg
inc
popf
dec
dec
in
repz
and
or
arpl
cmp
add
nop
and
test
mov
clc
cmpsb
add
in
add
sbb
sub
addr16
add
fmuls
outsl
lcall
aaa
ret
dec
push
jne
xor
xor
inc
mov
arpl
aad
subl
in
aam
out
inc
hlt
mov
sub
adc
mov
rolb
and
in
clc
xchg
add
adcb
jg
test
frstor
adc
sbbb
push
or
sbb
push
das
test
dec
sbb
jecxz
mov
mov
ds
ror
outsl
adc
je
xchg
clc
pushf
in
cmp
sub
dec
xchg
add
loopne
push
add
ret
jmp
cmpsb
lds
ljmp
sbb
xchg
add
xchg
xchg
test
jge
pop
lock
jne
shlb
in
adc
jns
mov
xor
mov
shll
sbb
adc
or
addl
add
lret
jl
dec
imul
clc
hlt
incb
aas
push
hlt
jg
jl
inc
test
ret
xor
cmpsb
jnp
sub
add
shlb
cmpsl
je
xor
popa
mov
ret
lret
xor
bound
jo
mov
mov
xchg
outsl
mov
adc
inc
jp
ss
jne
xor
xlat
enter
jmp
fidivrl
icebp
fisubs
push
test
mov
ficoml
cmp
movsb
je
dec
mov
xlat
dec
loop
bswap
mov
cs
mov
les
or
stc
mov
idivl
ret
mov
xlat
jmp
loopne
icebp
roll
pop
stos
dec
loop
jnp
scas
invd
jle
and
out
mov
aam
inc
pushf
fbstp
push
aaa
lcall
cmp
clc
fdivl
xor
xor
hlt
adc
scas
mov
push
roll
call
xchg
call
rcr
inc
das
xor
mov
add
jp
add
test
jb
data16
xchg
mov
push
mov
clc
adc
lret
stc
pop
cs
inc
dec
add
aas
jb
hlt
add
mov
inc
dec
jmp
adc
repnz
fisttpll
inc
jb
push
dec
adc
cld
cli
sti
and
push
sub
xor
cmp
jb
insb
shlb
xor
inc
daa
loope
pushf
mov
jp
imul
dec
aas
cmp
mov
ljmp
movl
repz
mov
iret
arpl
jp
sub
test
ja
add
shll
jbe
out
jne
mov
int3
out
inc
lock
push
adc
in
cld
cmp
jno
clc
dec
aam
in
test
ja
clc
jo
add
cltd
je
nop
mov
jmp
push
repz
mov
add
inc
paddusb
push
xchg
add
push
popa
mov
ds
int3
cs
aam
pop
or
jmp
das
xor
mov
add
loope
jmp
and
in
js
nop
dec
fnsave
scas
out
xchg
sub
cltd
repz
jmp
call
xchg
mov
xor
xchg
dec
rol
jge
stc
inc
mov
mov
mov
cld
lea
clc
add
push
adc
mov
lods
jle
call
inc
push
insb
shl
daa
lea
loopne
loop
dec
sbb
lret
or
lock
adc
daa
xchg
xchg
fwait
cli
mov
fwait
je
repz
xchg
aam
and
cld
cli
data16
jmp
stos
add
adc
leave
ret
jo
xor
lahf
pop
push
sbb
and
bound
jnp
xor
jnp
fwait
sbb
ja
stos
jg
adc
call
sti
into
pop
adc
movb
or
loope
in
jbe
and
jmp
out
jne
negb
enter
mov
jle
rcll
jp
pusha
daa
divl
push
cmp
addl
or
ds
out
and
sti
roll
mov
popa
push
jg
pushf
xchg
adc
in
imul
inc
inc
inc
mov
xor
mov
addr16
dec
or
push
mov
es
faddl
into
decl
sahf
lds
mov
andb
sbb
cmc
test
imul
sub
stos
fidivrs
jno
xor
lahf
mov
mov
cmp
subl
out
or
xor
add
nop
sbb
push
mov
inc
lods
mov
out
sub
mov
stc
dec
std
test
mov
fistpl
sarl
adc
cltd
test
gs
popa
out
xchg
fisubrs
mov
jnp
imul
cmp
sbb
psubq
insl
jns
stos
xchg
out
jle
hlt
addl
testl
jmp
inc
adcb
mov
nop
add
mov
fdivs
shlb
movb
fbld
adc
cmp
roll
decb
or
sbb
pop
xlat
mov
pop
add
mov
sbb
xor
movsl
adc
movsl
out
sbb
aad
repnz
negl
mov
pop
adc
mov
ror
ljmp
lock
inc
sahf
icebp
cs
dec
jo
enter
push
ljmp
aaa
sbb
jnp
popa
pop
ljmp
comiss
mov
mov
mov
shlb
inc
jno
aas
sbb
or
dec
testb
or
shlb
lock
add
mov
fsubrp
jno
test
mov
push
dec
or
dec
in
fcomps
pop
mov
repnz
adc
jmp
loope
push
mov
sbb
jg
push
xchg
adc
nop
pop
adc
popa
clc
jno
lahf
or
rcrl
stc
clc
mov
xlat
in
jl
cmp
mov
and
push
fadd
add
ja
jmp
adc
push
jl
lock
push
xor
push
mov
pop
or
enter
jmp
jno
andl
dec
call
dec
lods
mov
jmp
mov
hlt
fmull
adc
mov
sbb
jae
dec
or
push
test
inc
test
ljmp
lds
sub
xor
cmp
loop
shll
jb
lock
stos
xlat
push
add
sbb
or
aas
jle
mov
shrb
loopne
es
and
pop
xchg
sub
rcrb
loopne
roll
fmuls
nop
loope
xor
adc
xor
loope
or
dec
mov
inc
out
shlb
jo
mov
or
jp
sub
mov
push
push
pop
sbb
lock
imul
push
daa
mov
mov
dec
sbb
xor
cmp
dec
mov
hlt
clc
dec
aas
popa
mov
dec
add
js
sub
cwtl
push
aaa
mov
out
jmp
pop
ja
jmp
push
test
cli
push
cltd
adc
in
js
inc
daa
lds
lock
mov
inc
rcrl
out
push
fmuls
adc
sbb
jle
adc
xchg
pop
mov
xchg
sbb
mov
scas
insl
repz
sbb
lahf
pop
add
mov
sub
push
mov
mov
in
imul
gs
call
add
fucomp
pop
pop
add
ljmp
sub
rol
or
inc
sbb
rol
sbb
push
sbb
mov
mov
sbb
sahf
push
iret
xchg
cmp
in
mov
cmp
dec
nop
add
repnz
shl
repnz
inc
cmc
pop
addr16
stos
scas
xchg
ret
add
xor
add
inc
inc
addb
mov
mov
push
inc
add
or
cli
pushl
push
jl
push
dec
cld
push
call
mov
mov
mov
or
push
lret
xor
xchg
sub
push
jmp
sub
and
mov
add
shr
mov
scas
jb
rep
leave
sub
xor
adc
scas
sahf
es
mov
inc
jne
clc
pop
dec
mov
jp
test
ljmp
jp
inc
jmp
or
inc
lret
jle
dec
sbb
imull
push
adc
add
leave
add
and
add
inc
lock
adc
pop
sti
jge
hlt
or
negl
add
push
sbb
stc
xor
dec
in
hlt
test
or
inc
dec
cwtl
out
sub
inc
push
fldl
sub
and
xchg
call
mov
mov
test
imul
adc
cld
in
ja
inc
pusha
inc
xchg
fcompp
scas
orl
ficoml
adc
adc
or
sbb
cmc
hlt
dec
adc
add
cmp
dec
or
scas
push
mov
sbb
push
outsb
jae
and
jmp
mov
ret
jle
inc
enter
addl
arpl
sbb
jp
cmp
dec
enter
je
sub
mov
add
std
roll
mov
jp
in
add
cmp
dec
and
roll
scas
loopne,pn
inc
mov
stos
jo
push
xchg
test
stos
push
fucom
movsb
sarb
out
into
out
iret
lea
push
shl
xor
mov
ljmp
ficomps
jbe
or
push
int3
inc
jl
loopne
rorl
or
das
fwait
dec
cmp
fbstp
mov
int
mov
push
movsb
shlb
sbb
jo
adc
and
sub
xor
xchg
push
pop
fnstenv
mov
sbb
push
sub
shlb
pop
and
rolb
jl
add
push
faddl
mov
filds
shrl
outsl
sub
push
add
add
xor
lret
cmc
jg
mov
inc
dec
sub
mov
rcrl
lcall
inc
fmull
js
fs
out
mov
mov
and
mov
add
jmp
into
jae
out
and
xor
dec
xor
lahf
adc
mov
inc
jecxz
es
jecxz
cmp
fnstcw
push
icebp
test
mov
scas
inc
mov
jo
pushf
inc
sbb
sbb
push
popa
xchg
push
lds
jl
xchg
add
mov
inc
and
mov
and
push
dec
pop
or
sti
ljmp
fs
adc
push
sbb
adc
mov
mov
xor
cmp
jne
movsb
add
mov
test
pop
add
jnp
add
int3
pop
fistpl
call
fists
hlt
add
xchg
mov
orl
xor
pop
inc
and
cmp
pop
sbb
aad
cmpsb
adc
lret
sbb
cmpsb
ss
push
add
add
push
xor
push
mov
xchg
sbb
xchg
adc
xchg
lods
shll
rolb
cmp
add
loop
add
mov
clc
push
jne
mov
call
stos
pop
sub
or
enter
fdivs
dec
sub
or
in
push
filds
loope
mov
or
test
or
fsub
mov
cmp
jno
fcomps
push
test
loopne
enter
add
ja
loope
add
call
cli
or
call
fwait
or
fmuls
or
xchg
fildl
imulb
movl
mov
add
xor
testl
js
test
sbb
jecxz
ljmp
pop
int3
xlat
add
xchg
into
fs
jle
xchg
or
jae
xor
mov
or
test
add
mov
mov
inc
sbb
addr16
and
xor
ret
dec
xor
scas
sbb
add
imul
lods
mov
pusha
andb
jbe
arpl
add
mov
dec
inc
in
lea
fwait
icebp
jmp
shlb
fldl
cmp
jl
sbb
int3
pop
jmp
adc
xlat
loope
js
mov
sti
rcl
sbb
jg
sbb
and
mov
xchg
or
sub
add
pop
dec
lea
cmp
cmp
pop
push
arpl
outsl
loope
test
mov
fucomip
in
push
push
push
push
call
mov
out
in
adc
fmul
lods
push
cmp
mov
test
mov
or
ret
rcr
mov
dec
sub
fadd
aaa
push
or
jno
and
nop
or
enter
mov
lret
sub
mov
mov
inc
inc
and
mov
loopne
inc
mov
adc
or
arpl
adc
dec
sbb
add
adc
rcl
sbb
xor
jg
xor
sub
mov
hlt
dec
push
stos
xchg
xchg
cmc
pusha
hlt
inc
stos
xchg
sub
aad
pop
out
sarb
adc
into
test
iret
out
andb
aaa
int3
addb
shll
fldz
ss
jns
das
add
add
or
pop
cmp
shrb
bnd
shr
pop
sahf
orl
jne
or
jp
roll
mov
jno
mov
xchg
mov
les
fucomp
jbe
out
popa
ret
dec
bound
sbbl
out
fldcw
in
lock
ss
loopne
adc
or
adc
and
adc
aas
inc
ds
mov
stc
or
loop
mov
or
inc
push
popa
add
sub
adc
mov
mov
jmp
inc
loope
cmp
out
in
inc
and
insl
mov
sub
test
loopne
or
cmovnp
mov
and
push
sbb
sub
cwtl
insl
int3
je
sub
cli
push
ljmp
ret
pop
sub
jnp
sbb
pop
addl
fs
shll
push
fcmovu
sar
lods
mov
inc
rorl
sar
add
xor
in
inc
cmc
pop
pop
ljmp
stos
add
imul
ret
popa
daa
movsb
sbb
lock
sub
and
dec
fiadds
rolb
cmp
sbb
in
cmp
dec
jae
rcrl
add
aam
adcl
cltd
neg
adc
xchg
or
movsl
or
adc
jb
xor
add
jae
inc
lahf
into
push
filds
inc
jmp
divb
loope
push
xchg
sub
sbb
cmp
popl
shll
decl
fidivrs
mov
xor
and
xor
lods
xchg
xlat
lret
or
arpl
js
adc
inc
clc
cmp
out
nop
push
lock
adc
sub
mov
popa
test
push
cmpsb
pop
sub
hlt
daa
mov
arpl
sbb
stos
inc
adc
test
lods
xchg
dec
mov
jb
jecxz
or
pop
icebp
add
push
lea
push
push
outsl
rolb
call
dec
insl
scas
xor
add
fstpl
sbb
mov
lahf
push
in
dec
in
adc
orb
and
adc
cmp
faddl
scas
sub
icebp
push
mov
jb
jecxz
add
xlat
push
adcl
in
push
adc
rolb
shll
ret
aaa
outsl
pop
jge
hlt
add
ja
push
adcl
mov
inc
and
dec
jmp
call
xlat
inc
rclb
sub
push
sub
ljmp
sub
loope
mov
inc
sub
mov
arpl
out
out
adc
dec
fcoms
imul
dec
in
xchg
jge
push
mov
aad
sbb
sub
xchg
cmp
cmp
jns
add
insb
jne
ficoms
push
sub
aas
hlt
add
lods
in
ljmp
xchg
pop
pop
outsb
push
add
int3
negb
sbb
push
adc
jmp
sbb
mov
or
inc
jle
pop
out
lock
mov
clc
mov
fcmovnbe
xlat
addb
icebp
je
pop
jo
sbb
enter
mov
xor
jl
fisubrs
loop
xor
jp
push
sbb
adc
roll
popw
mov
cld
and
cmp
xchg
pop
add
icebp
jbe
inc
je
or
pop
in
stos
sarb
cs
pop
pop
call
push
mov
scas
aam
and
jo
sub
movsb
es
jmp
add
jo
mov
push
or
mov
pop
test
sahf
and
pop
ficoms
repz
es
shlb
xor
mov
inc
sbb
mov
std
mov
add
pusha
sub
cmpsb
inc
bsr
jno
ja
adcl
xchg
push
push
hlt
and
adc
das
cmp
xor
shlb
xchg
push
push
sub
add
mov
and
jg
and
pusha
ret
data16
test
popa
dec
test
and
cmpl
xchg
cmp
jbe
repnz
push
or
add
mov
xchg
pop
popa
test
push
cmp
sub
lock
add
mov
xor
mov
push
jbe
jmp
adc
ret
add
xor
je
daa
inc
push
sbb
andl
cmp
jbe
mov
sbb
and
sbb
mov
fildl
dec
inc
mov
ret
insb
add
mov
add
fmul
int3
adc
cmp
ret
dec
je
imul
jp
lods
lock
add
jge
dec
inc
js
ret
xchg
and
cmpb
rorb
ss
call
filds
sahf
sbb
add
push
jge
sarb
mov
adc
mov
cmp
data16
ds
test
sahf
xor
mov
stos
lock
shll
fiadds
hlt
push
test
inc
jmp
mov
mov
cmpsb
pop
sbb
adc
xor
in
and
jmp
cmpsb
or
mov
adc
rcrb
add
add
xchg
das
loop
and
add
push
dec
test
fistl
cld
sbb
jo
dec
xchg
aam
test
hlt
fcoms
ljmp
add
and
xor
fmuls
push
je
faddl
ds
fdiv
je
sub
add
or
mov
orl
xor
push
test
jno
mov
cmpsl
jo
aas
clc
jae
inc
inc
sub
sub
dec
or
and
sbb
push
jecxz
aam
sub
xchg
js
sbb
or
in
aam
sbb
and
jecxz
push
shl
ficomps
dec
mov
add
xor
fcompl
bound
scas
jb
gs
jecxz
jo
cmc
test
rolb
sarb
xor
jae
mov
roll
add
int
test
add
cmp
mov
fisubrs
shrb
add
dec
iret
mov
cmp
jo
or
jnp
fistpll
loop
mov
bound
jl
insb
shll
insl
adc
sub
shr
mov
sarb
hlt
and
or
insb
or
imul
subl
mov
xor
or
sbb
mov
movsl
arpl
je
mov
in
call
inc
inc
sub
and
mov
dec
data16
cmp
pushf
jo
sub
xchg
mov
stos
add
outsl
int3
fldl
xor
cmp
lret
lret
or
mov
and
jmp
fcomps
cld
push
popf
dec
fwait
mov
movsl
mov
addb
rcrl
cmpsb
inc
cltd
xor
add
or
call
int
mov
pop
inc
test
pop
fimull
enter
sbb
jmp
insl
add
cs
addr16
dec
ds
sahf
int3
lock
out
js
pop
ficoml
mov
cmp
xchg
enter
pop
sbb
loope
pop
or
push
add
fpatan
cmove
add
pop
dec
test
mov
shrl
xor
out
xlat
inc
cmp
cmc
int3
cmpsl
mov
inc
loopne
call
clc
add
pushf
pop
mov
sub
jne
jo
adc
sbb
sti
pop
out
jno
sub
xor
mov
dec
xchg
fcomps
clc
lret
loopne
stc
movsb
adc
es
push
push
push
mov
and
ret
lahf
shl
or
pop
dec
and
aas
popf
pop
rcl
movsb
sbb
enter
mov
ret
out
mov
movsl
push
dec
xchg
cmpsb
xor
ljmp
enter
pushf
adc
std
pop
test
jg
and
add
pop
dec
inc
jl
push
push
sbb
xor
add
sbb
and
pop
jmp
aas
push
cli
ljmp
andl
sti
sbb
sbb
and
jb
pop
in
xchg
jo
sub
mov
lea
pop
icebp
std
add
push
jmp
pop
jp
push
xor
inc
add
fwait
js
ds
je
or
add
cmpsl
pop
jmp
sbb
push
loope
mov
jle
outsb
sub
les
jo
lahf
push
ja
add
pushf
push
or
adc
cmp
dec
out
in
js
dec
pcmpgtd
popl
mov
pop
inc
cmp
mov
clc
scas
adc
jp
rcrb
clc
jmp
lea
mov
xchg
inc
xchg
sub
xor
cmp
or
andl
add
add
pop
add
sarb
fsts
and
mov
pop
cld
je
outsl
mov
or
xchg
in
popf
jno
cmp
and
loope
xchg
adc
das
xor
and
or
fiadds
sbb
clc
jg
pushf
or
xor
adc
sub
sti
dec
out
adc
in
imul
cld
sub
movsl
iret
fisubrl
jmp
loope
sbb
les
pop
add
add
sbb
xor
pop
adc
cmp
cltd
outsb
adc
adc
mov
sub
jb
sub
mov
inc
mov
mov
aas
popf
clc
mov
decl
pop
inc
mov
mov
insb
test
inc
aam
arpl
pushl
es
fldenv
rcrb
sbb
adc
out
xchg
mov
das
shr
mov
push
xchg
icebp
ljmp
inc
jmp
mov
ret
and
dec
sub
jmp
aam
pop
les
mov
cmp
sbb
ret
jg
inc
or
add
pop
inc
cltd
es
test
pop
lock
adc
add
jbe
or
imul
in
ss
add
add
add
cmp
push
call
cmp
jp
mov
lcall
lds
jl
roll
adc
aad
cmp
mov
pop
jnp
push
fcoms
cld
mov
pop
clc
js
mov
or
add
sub
test
xchg
pop
cmp
out
ja
add
ret
mov
pop
sbb
or
mov
adc
or
pop
or
jge
dec
xor
or
xchg
rorb
cmp
inc
xor
sbb
lods
sbb
sarb
test
push
shrb
pop
aaa
or
mov
lea
notb
inc
pop
pusha
or
mov
pop
pop
xor
lock
cmpb
clc
xchg
xor
imul
lods
push
and
sbb
rolb
and
fdivrl
mov
jb
out
arpl
insl
cwtl
jge
rorb
mov
aaa
bound
popa
movsl
jno
cmp
mov
and
xlat
jbe
inc
scas
adc
cli
xor
roll
mov
aad
or
jmp
pushw
popf
xchg
jne
in
imul
push
push
test
shlb
dec
sbb
and
test
adc
shlb
orb
negl
inc
and
pushf
add
daa
aad
adc
loop
insl
rcrl
lea
cmpsl
push
fcoms
imul
push
jbe
out
adc
push
ret
loop
orl
nop
mov
stos
adc
adc
lds
cmpsb
test
andb
mov
pusha
fwait
push
and
icebp
push
fwait
mov
shlb
es
xchg
pop
mov
enter
test
inc
push
xor
xor
pop
jb
or
lock
fistpll
insl
push
dec
aas
sbb
jmp
xor
fsubrl
repz
out
in
pop
loopne
je
dec
jl
sub
jg
enter
add
loope
das
into
mov
mov
aas
cltd
push
and
cmp
sbb
add
sub
pop
add
mov
rorb
out
sub
mov
js
and
out
mov
push
mov
repz
inc
cmp
add
outsb
xchg
fstpt
lds
fdivrl
jecxz
mov
and
inc
sbb
push
inc
or
or
test
in
sbb
ds
aam
sbb
adc
jl
lds
jg
push
and
rolb
bnd
pop
pandn
in
xchg
shl
aam
inc
sub
movsl
fcomps
sub
mov
add
adc
adcl
iret
in
inc
aas
xor
dec
mov
sbb
or
add
add
int
sarl
push
ljmp
sbb
sarl
sbb
inc
and
mov
loopne
push
push
sbbb
cmp
or
sti
loopne
adc
dec
sub
dec
sbbb
cmp
mov
adc
aaa
sub
popf
test
xor
ret
addr16
test
pop
popa
xor
popf
push
pop
xor
xchg
mov
addr16
inc
mov
cmc
fdivrl
mov
lea
std
aaa
fildl
jne
inc
sbb
jne
push
push
clc
sbb
das
or
cmp
das
loope
test
mov
in
jns
add
jmp
add
add
mov
fbstp
cmp
insb
or
cmc
shl
adc
call
add
clc
dec
add
push
jmp
fcmovnu
clc
mov
inc
stc
popa
sbb
idivl
add
rorb
push
or
adc
and
mov
std
push
xor
mov
fwait
dec
or
pushf
repnz
js
fdivr
jne
enter
pusha
lods
xor
add
pop
jecxz
cmp
jl
lods
fildl
loope
pushf
out
fsubr
imulw
bound
imul
mov
cld
and
addb
xlat
sub
xor
daa
sub
sbb
clc
dec
xchg
push
jmp
xchg
mov
in
jmp
hlt
outsb
inc
sbb
rcrb
out
clc
inc
pop
xchg
pop
stos
js
add
push
cmpsl
fbld
popf
dec
adc
jbe
xor
fs
jecxz
add
fcoms
pop
add
ret
or
stos
push
push
mov
addb
push
call
lock
lds
dec
iret
cmp
test
in
jae
lds
test
add
fmull
add
jl
add
pop
in
push
in
dec
or
test
fstpl
fistps
xchg
add
and
jmp
mov
movsb
add
shll
sub
aad
xor
sbb
ljmp
lock
add
lret
test
mov
stos
fidivrl
ret
test
jne
outsl
mov
sbb
pop
push
jecxz
cmpb
shrl
jbe
push
sub
mov
inc
jb
sbb
rolb
pop
mov
lret
xor
inc
insb
xchg
xchg
ret
repz
pop
inc
xor
sub
outsb
jmp
mov
xchg
or
jo
notb
sub
or
xchg
mov
ljmp
lds
add
mov
pop
lahf
sbb
adc
flds
test
add
lock
jno
cmp
lods
sub
mov
insb
int3
push
or
idiv
jl
pop
pop
inc
fidivl
add
out
and
push
cld
jg
inc
aad
push
mov
jnp
test
pop
dec
add
and
or
loope
inc
fcoms
mov
jbe
hlt
add
push
mov
dec
sub
lock
loop
outsb
and
cmc
jp
or
push
addr16
inc
pop
cwtl
shll
out
lock
gs
inc
add
in
stos
or
add
sub
dec
jmp
mov
mov
fnstcw
ds
pop
xlat
xchg
jmp
push
fs
adc
call
xchg
jne
cmp
and
arpl
out
fiaddl
jo
clc
in
mov
shll
pop
mov
dec
fldcw
arpl
stc
jl
push
xchg
push
in
pop
sub
xchg
mov
xchg
shll
push
mov
js
cwtl
xchg
dec
or
add
xor
lock
xor
cmp
in
dec
jmp
lock
icebp
add
push
and
mov
add
div
mov
sbb
push
inc
mov
imulb
adc
mov
and
and
add
mov
mov
and
push
std
and
add
adc
adc
test
adc
fldt
movb
inc
mov
lock
add
pop
loopne
add
aas
out
les
xchg
push
jmp
fsubs
out
pop
adc
rorl
clc
push
jne
xor
inc
jmp
aaa
lock
fldl
jmp
das
scas
mov
gs
xchg
into
andb
push
in
nop
scas
and
stos
sbbb
clc
fildl
inc
jmp
sub
dec
push
es
fidivrl
ss
ficoml
adc
pop
mov
dec
jmp
mov
out
dec
mov
leave
scas
fiaddl
das
jbe
xchg
push
mov
inc
xchg
adc
loope
rol
sahf
test
pushf
inc
lret
jae
pop
xor
and
sbb
jae
int
adc
arpl
fmull
data16
or
or
outsb
adc
mov
inc
fldcw
movsb
subl
inc
inc
icebp
rorl
and
or
jo
pushw
ss
push
adc
xchg
fmuls
push
push
ss
loopne
mov
das
pop
fimuls
pop
push
xchg
cmp
in
sbb
adc
cwtl
adc
and
daa
dec
and
lcall
dec
pop
xlat
push
push
ljmp
sbb
dec
mov
push
fsubr
cld
mov
clc
dec
ljmp
js
loop
push
in
les
adc
sbb
and
dec
inc
or
movsl
scas
movl
cwtl
ds
mov
mov
cli
outsb
pop
jo
dec
adc
add
into
add
sahf
cmp
syscall
adcl
xchg
sbb
sbb
lods
jle
add
fisubs
xor
jle
orb
inc
aam
cmpb
and
jo
jne
xor
lods
out
pop
mov
int3
fnsave
push
shll
jg
jo
out
or
outsl
lock
xchg
mov
push
or
xlat
stos
ss
mov
cmpl
add
in
mov
enter
xor
and
cmp
dec
lahf
pushf
clc
ja
push
mov
fistps
sbb
test
mov
dec
mov
shrl
mov
add
sbb
dec
sbb
out
paddw
ret
dec
fwait
aaa
aam
pushf
les
and
ret
and
je
aad
inc
arpl
adc
lahf
pusha
mov
mov
ficomps
cld
push
lock
fisubrl
xchg
sbb
and
js
cmpsb
outsl
fisubrs
mov
rcl
int3
xchg
xchg
ret
jno
jl
incb
pop
adc
sbb
adc
fimull
in
xor
or
pushf
addl
out
stc
loope
add
pop
push
sbb
push
mov
add
dec
xlat
iret
std
out
and
xchg
and
add
or
rorl
add
dec
in
cmpsb
push
jge
lcall
and
inc
inc
add
scas
push
movsb
insb
adc
mov
xor
mov
inc
and
out
or
inc
sub
push
mov
inc
mov
push
mov
cmc
test
fdivrs
jge
sub
sub
shrl
or
push
fnstcw
loop
fsubl
add
ljmp
or
loop
pusha
pop
mov
inc
and
in
pushf
xor
sub
add
cltd
clc
mov
jl
das
icebp
into
lds
jb
add
mov
in
inc
mov
rolb
mov
jno
das
arpl
repnz
adc
mov
inc
fmull
add
and
pop
inc
add
stos
arpl
jle
mov
cmp
adc
mov
and
inc
into
addl
ficoms
xlat
or
mov
jno
mov
jge
cmpsl
pop
sub
out
xacquire
addb
mov
adc
sbb
and
cs
test
outsl
out
or
add
xchg
mov
rcrb
sbb
hlt
out
pop
push
dec
sbb
jge
imul
xchg
sub
xchg
bound
pop
mov
mov
daa
insb
dec
int
lds
pop
sbb
add
movb
mov
sub
repnz
inc
pop
in
idivb
in
add
stc
fildl
inc
push
adc
inc
cmp
aas
loope
shl
fcomip
rolb
add
sub
jmp
stc
jbe
push
cmp
adc
push
rol
adc
cld
in
xor
aam
sub
xor
mov
push
popa
dec
push
or
xlat
push
push
ret
pushf
movsl
enter
cli
or
inc
sbb
push
cmp
dec
push
pusha
inc
sbb
ret
insb
cmp
jb
push
insl
add
adc
scas
ja
out
xchg
hlt
pop
pop
sbb
jmp
push
jmp
addl
push
or
movsb
loopne
in
js
sub
adc
mov
js
repz
sub
mov
aaa
jne
and
jns
cld
sub
xor
icebp
add
loope
pusha
hlt
mov
in
repnz
sub
xor
leave
dec
ss
xor
lock
adcb
xchg
rol
sbb
push
movsl
and
pop
jae
jne
mov
push
dec
inc
loop
into
fimull
cli
mov
outsl
sub
loop
add
movsb
mov
outsb
inc
inc
inc
ret
leave
shrb
ret
adc
sbb
dec
xchg
and
mov
shl
pop
sbb
adc
pop
js
pop
cmpsb
iret
loop
arpl
sbbb
jae
cmc
ja
mov
pop
nop
fisubl
adc
mov
mov
sbb
pop
add
orb
sbb
adc
cld
loopne
data16
cwtd
ret
aaa
iret
add
inc
roll
outsl
dec
add
cmp
stc
fldenv
or
ljmp
and
inc
sbb
sahf
cmp
dec
mov
xchg
sbbb
iret
mov
mov
adc
loop
push
loop
mov
lock
xor
add
cltd
mov
mov
jae
pusha
xor
push
hlt
add
mov
and
addl
xrelease
or
inc
xor
pop
cmp
add
int3
std
xor
fcomp
test
push
jbe
mov
sbb
mov
pop
daa
dec
in
sub
hlt
mov
mov
and
add
inc
movsl
nop
dec
js
insb
add
add
sbb
or
rcrb
dec
push
cmp
mov
rcr
decb
sbb
cltd
ret
mov
push
das
or
ljmp
push
and
push
mov
icebp
mov
push
in
test
lock
imul
mov
pop
mov
sbb
xor
iret
dec
decl
loopne
push
add
ljmp
in
test
not
inc
pop
jmp
xor
test
add
in
mov
add
adc
aas
lcall
jle
push
and
jp
jmp
sub
xchg
push
lods
sbb
repnz
pop
mov
mov
lds
cmp
loopne
movsl
sbb
pop
sti
xchg
bound
push
push
mov
add
stos
mov
mov
and
mov
outsl
cwtl
dec
xor
pushf
xchg
lret
ret
add
pop
or
add
mov
dec
loopne
jo
jecxz
imul
inc
or
xchg
bnd
dec
pusha
or
add
jl
das
imul
or
sbb
mov
sahf
aam
pop
mov
int3
cmc
cmpsb
mov
ret
enter
inc
push
lret
shll
push
sub
scas
mov
pusha
pop
cmp
add
add
insl
jne
arpl
mov
imul
sbb
in
call
mov
push
mov
push
mov
sbb
dec
mov
lret
jle
mov
lret
xor
sbb
movsl
cwtl
and
je
inc
dec
jns
insl
add
sbb
gs
push
dec
jnp
mov
sbb
jbe
aaa
mov
fwait
xchg
mov
mov
push
xchg
sbb
xor
test
loop
inc
and
or
dec
bound
popf
rol
xchg
movsb
push
sbb
mov
add
jb
inc
adc
jnp
dec
orl
xchg
lock
or
pop
lea
fists
pop
jge
nop
sbb
pop
mov
push
test
xchg
aam
sbb
mov
fwait
jo
add
js
mov
scas
out
dec
mov
aaa
dec
lcall
rcr
push
imul
sbb
mov
mov
mov
add
shlb
sbb
adc
mov
pushw
push
lods
jmp
jmp
add
xlat
add
adc
cmpsl
xchg
mov
sbb
xor
push
cmpsl
das
pop
les
mov
lahf
mov
push
or
mov
add
orb
jo
dec
jmp
test
jae
xchg
imul
scas
cmp
flds
fsubrs
and
cmpsb
movsl
dec
sbb
into
mov
xchg
adc
mov
ret
fbstp
cmp
loop
dec
test
in
inc
inc
sub
dec
inc
stos
sarb
mov
sti
push
mov
mov
fcomps
adc
int3
mov
inc
mov
cmpsb
mov
add
aam
or
pop
and
sbb
push
xor
mov
int3
push
iret
ljmp
mov
repz
rolb
mov
mov
add
sub
pop
mov
je
push
lods
dec
call
or
hlt
addr16
rolb
fiadds
jle
ret
jmp
mov
loopne
out
and
add
pop
sbb
dec
jo
mov
je
mov
ja
sbb
cmp
ret
push
xchg
loope
cmp
orps
insb
aam
nop
mov
sbb
aas
dec
loopne
data16
adc
fwait
xchg
sbb
or
mov
adc
or
rolb
sub
add
movsb
int3
mov
push
fidivl
aas
shlb
jnp
xor
sbb
dec
sub
sub
mov
mov
adc
or
shlb
adc
lock
rcr
mov
fwait
mov
std
xor
adc
push
clc
add
bound
or
sbb
test
ret
push
test
mov
inc
push
sbb
adc
cmc
inc
loop
xchg
les
mov
je
imul
cwtl
incb
hlt
adc
in
adcb
fldl2t
nop
dec
pop
jne
jbe
adc
lea
call
cwtl
aam
xor
fidivs
int
rolb
outsb
sub
imul
cmp
test
popf
test
mov
rcrb
loope
mov
stc
notl
xchg
pushf
fistpl
sbb
addr16
inc
jge
inc
push
mov
fcoms
add
loopne
mov
cmp
xchg
mov
or
fisttpll
loop
push
inc
jl
xor
call
cmc
add
outsl
sub
lahf
arpl
out
shl
mov
popa
and
cmp
jecxz
cmp
jne
fidivl
pusha
jne
fwait
dec
mov
icebp
ds
rorb
das
imul
lds
and
inc
push
arpl
sbb
imul
mov
push
add
xor
jnp
or
push
enterw
or
cmpsb
addr16
push
cmp
call
xchg
push
testb
and
cwtl
add
adc
and
pop
push
jbe
mov
jmp
mov
sub
push
ljmp
sub
bound
fwait
ret
mov
lods
outsl
inc
ja
punpckhbw
clc
jne
lods
hlt
xor
or
pop
pop
ficompl
and
icebp
out
add
outsl
lods
leave
push
push
out
sbb
mov
mov
adc
iret
shl
jle
pusha
and
and
push
inc
inc
push
lock
push
leave
jp
lret
or
lock
jno
movsl
push
cwtl
int3
clc
and
mov
sub
xchg
clc
sbb
add
nop
insl
mov
mov
ja
add
les
xchg
jge
xor
les
adc
sbb
popa
outsl
xor
push
cmp
addr16
cmpsl
sbb
call
sbb
cmp
out
sub
mov
or
test
outsl
nop
ret
jo
ret
lods
mov
xchg
je
xchg
fwait
test
add
adc
mov
fcmovbe
add
shrb
aas
ret
out
shll
or
xchg
push
sbb
add
popf
add
mov
in
scas
mov
xor
jg
sbb
sahf
pop
call
test
cvtps2pi
add
test
stos
sbb
hlt
jae
sbb
add
int
gs
shlb
push
movsl
jbe
add
sbb
dec
dec
cmc
pop
sbb
mov
cld
lea
and
mov
xchg
mov
in
sub
push
test
cmp
iret
es
cli
sub
dec
js
add
inc
mov
ret
add
out
les
xorl
add
or
hlt
dec
mov
cs
pusha
sub
sub
daa
jns
add
pop
pop
dec
mov
loope
pop
pop
adc
inc
in
in
rorb
adc
subb
pop
sub
loop
iret
or
xchg
lods
test
out
pop
fisubs
cmp
fmuls
add
xor
add
mov
or
push
pop
mov
in
add
push
sbb
mov
cmp
subl
inc
loopne
push
adc
push
xchg
mov
movb
mov
and
add
sub
rorb
pop
xchg
and
add
jbe
ret
ljmp
rclb
and
jo
or
add
jne
mov
xor
push
rorl
add
dec
js
faddl
outsl
js
or
and
adcb
push
lock
dec
dec
loop
or
xor
cmp
sbb
lret
pusha
jns
pushf
cmp
mov
sbb
push
mov
inc
adc
dec
les
repnz
inc
sub
imul
adc
lahf
das
and
inc
add
add
aaa
add
test
sub
mov
fcomip
aam
cli
nop
jbe
and
aaa
jnp
sbb
inc
mov
stos
sbb
aam
rorl
ja
ljmp
dec
cs
sub
in
add
adc
test
daa
in
or
rolb
popa
adcl
stc
mov
data16
ret
mov
ja
out
xchg
lods
adcl
adc
jle
fwait
rcr
mov
add
or
popa
add
cld
jecxz
cmp
daa
cmp
sub
cltd
xchg
sbb
and
add
or
adc
mov
cmp
dec
sub
fwait
jge
roll
push
loopne
lock
pop
in
ret
lret
or
xchg
insl
xchg
cmp
ja
movsb
outsb
xor
das
xchg
adc
xlat
fwait
push
xchg
xchg
push
popa
mov
adc
push
pop
dec
add
in
js
pusha
mov
mov
xor
rorl
mov
add
xchg
and
icebp
jb
or
xor
xor
rcll
inc
ljmp
inc
mov
call
mov
jp
pop
sahf
jo
xor
sub
out
cmp
sbb
adc
mov
sbb
lods
inc
leave
pop
rolb
mov
mov
aad
loope
out
push
xor
inc
ja
xor
and
fisubrs
test
decl
push
xor
imul
stos
fcom
push
nop
ja
xchg
xor
cld
push
call
mov
cmp
mov
add
xchg
inc
adc
sub
pushf
sub
dec
mov
or
mov
add
std
mov
popa
rcll
rorb
fs
and
dec
cmp
or
pushf
add
faddp
xor
add
insb
leave
mov
jae
aas
lcall
daa
xor
lret
push
int3
test
push
inc
jg
lods
jp
adc
adc
jecxz
pop
aas
daa
das
mov
mov
xchg
adc
sub
dec
jmp
mov
enter
mov
lods
cld
clc
push
sub
xchg
xor
and
mov
adc
or
xor
add
jne
push
push
ss
or
sbb
je
pop
dec
enter
adc
shlb
push
push
iret
sub
lret
add
sub
push
cmp
pop
das
jne
or
enter
dec
rorb
pmaxub
add
ficomps
add
mov
call
xchg
fwait
or
mov
add
jge
adc
rclb
pop
inc
lahf
enter
out
push
fwait
aam
cltd
cld
add
adcb
lock
orb
mov
insl
xchg
call
or
aaa
pusha
sbb
mov
adc
pop
xchg
pop
imul
mov
push
mov
adc
xchg
call
push
shrb
mov
fldl
lock
pop
shr
xchg
lcall
filds
sbb
add
cmp
or
sbb
cmp
inc
loopne
aas
push
jb
cmp
arpl
stc
lods
mov
mov
outsl
push
lods
pop
popa
subb
pusha
jnp
aas
ficoms
sbb
mov
add
sbb
adcl
es
mov
push
sti
xbegin
jg
test
dec
inc
push
or
xor
cltd
mov
repnz
mov
sbb
push
lock
mov
add
fldt
sahf
icebp
and
sub
push
or
rol
popa
or
inc
pop
inc
dec
jne
sub
push
add
mov
lock
sbb
mov
pop
xlat
push
push
xorb
jns
cmp
xor
scas
loopne
jno
or
stos
mov
adc
addl
fsubl
call
push
xchg
bnd
int3
fldenv
test
sbb
test
insb
popf
enter
popl
test
fildll
into
jnp
mov
daa
fnstenv
dec
pop
lcall
addb
loopne
mov
sub
aam
inc
les
pop
or
jns
fimuls
adc
xlat
or
fcompl
flds
mov
out
loop
lock
pop
inc
call
mov
xchg
sub
stos
adc
repz
loope
clc
jnp
jmp
popl
mov
mov
or
inc
add
in
mov
shll
adc
ret
dec
scas
cltd
rcl
mov
sub
sbb
loop
fisubl
xchg
or
push
or
xor
shr
sbb
emms
inc
cmpsb
inc
and
scas
xor
gs
loopne
mov
mov
mov
cmpl
add
mov
push
shll
and
lahf
rcrb
shr
cs
lret
leave
ss
push
mov
add
jne
dec
mov
aaa
pushf
cmp
cld
xlat
pop
and
add
shrl
ret
push
aas
sbb
push
push
mov
lea
mov
out
push
call
dec
sub
sti
xchg
ret
movsl
pop
popf
les
pushf
sbb
inc
dec
and
adc
movsb
iret
pop
mov
cmpsl
push
loop
push
cwtl
je
and
xlat
or
adc
sub
mov
ja
jno
push
pushf
add
and
in
fs
lcall
insb
cmp
in
xorb
pushf
xchg
xchg
push
add
jl
insb
bswap
icebp
xlat
push
jl
or
xor
jge
xchg
loop
les
ljmp
in
cmp
fisubrs
push
xchg
push
inc
sbb
mov
cmp
add
ror
pop
jbe
add
insl
in
pop
mov
push
std
add
dec
push
jmp
mov
pop
ljmp
loopne
mov
shrb
ficomps
add
push
mov
scas
mov
inc
jg
and
in
neg
sub
mov
dec
lret
adc
clc
mov
dec
mov
jne
scas
repz
fisubrs
arpl
cli
sub
push
mov
aam
rolb
ret
inc
jmp
cmp
mov
imul
out
xchg
mov
in
mov
sbb
enter
adc
xor
push
dec
icebp
and
not
ffree
sub
das
mov
inc
add
mov
shll
add
inc
ret
mov
jmp
inc
xor
pusha
pop
ljmp
out
mov
jg
and
jbe
mov
dec
xor
mov
xchg
dec
sub
ja
ds
mov
shlb
xchg
popf
mov
or
add
enter
pusha
int3
ja
cmpsl
xorb
loop
push
mov
jge
neg
dec
cwtl
nop
push
mov
cs
sub
or
mov
jecxz
cs
stos
and
repz
mov
shlb
jbe
loopne
push
mov
inc
mov
inc
fnsave
test
daa
and
outsl
pusha
fldenv
mov
mov
or
xchg
stc
jno
lock
lret
mov
sahf
jp
lock
xchg
xor
imul
jae
shrb
add
fcmovnb
and
movsb
push
stc
shrb
and
xchg
add
loopne
les
pusha
adc
les
mov
push
sahf
fldl
cmpsb
or
and
xchg
push
xchg
or
lret
mov
mov
out
jne
popf
aad
call
push
xor
out
aam
sub
insb
insl
dec
les
cltd
divl
dec
lret
adc
enter
adc
sbb
sbb
push
mov
xlat
push
imul
sbb
cld
shll
add
pop
cmp
repz
sbb
pop
test
addl
ret
jnp
adc
add
xor
gs
popf
fstpl
test
fistpl
stos
sbb
and
adc
jmp
jl
xor
fstpt
movsb
imul
mov
push
sbb
and
orb
rorl
push
fsubr
call
ljmp
hlt
fldenv
cmp
jb
ret
lret
jmp
movsl
pop
popa
mov
jmp
xlat
add
xlat
das
adc
or
xor
cld
test
push
mov
call
or
dec
call
add
or
fiadds
cwtl
mov
xor
jmp
push
sete
sub
mov
push
push
add
cli
ss
scas
jbe
jbe
xlat
sub
push
int3
mov
into
add
imul
daa
and
pop
dec
adc
out
jp
mov
pushf
and
scas
clc
push
mov
jle
add
jmp
sbb
jo
xchg
sub
les
inc
in
data16
aam
add
xchg
cmp
loopne
sbb
insl
dec
lret
test
jl
push
cs
lret
push
fiadds
idivb
mov
btr
and
lods
sahf
fildl
push
lds
fdivr
jle
addb
inc
pop
and
cmp
mov
subb
scas
add
sub
mov
sbb
xchg
adc
call
nop
mov
dec
and
mov
ljmp
cli
adc
rolb
inc
and
sub
or
pushf
gs
sub
in
sbb
inc
outsb
loope
jae
in
bound
dec
adcb
jle
andb
scas
cs
mov
adc
mov
pop
sbb
add
adcl
lods
mov
mov
mov
mov
pusha
pop
adc
sub
pop
out
mov
dec
clc
imul
cs
mov
std
ja
out
push
cmp
add
inc
clc
cmp
sbbl
enter
dec
pop
insb
cmp
fildll
cmp
mov
mov
pop
pop
enter
cmp
mov
test
ss
mov
sub
mov
dec
and
test
fcoml
cmpb
dec
add
icebp
test
es
cmp
xchg
or
fcmovbe
mov
xchg
mov
jge
mov
movsb
enter
push
dec
push
push
push
inc
lea
prefetchnta
sbb
mov
jl
pusha
sub
adc
mov
jp
xlat
add
incb
add
sub
loope
pop
rolb
pop
and
add
and
xchg
aad
fisubrl
xchg
outsl
sub
mov
and
inc
push
ljmp
push
mov
add
pop
add
stos
mov
or
pop
into
andl
mov
out
dec
add
xor
jno
cli
das
orl
dec
dec
sbb
subb
fidivrl
cmp
lock
pop
mov
jmp
push
fwait
or
in
mov
cmp
jmp
mov
xor
mov
movsb
xchg
scas
scas
dec
push
dec
clc
or
mov
or
or
add
clc
dec
xor
in
dec
and
sbb
sbb
xor
add
jp
fildl
shll
or
fbstp
ffreep
mov
xor
lea
cli
and
or
mov
add
cmp
ret
xlat
fnstcw
mov
mov
push
daa
inc
out
jns
leave
add
sbb
adc
hlt
jp
stos
xchg
inc
adc
jae
sub
push
pop
in
pop
pop
shl
add
sub
cmp
mov
js
xchg
dec
xor
iret
jg
pop
movsl
lret
test
pop
or
push
lahf
dec
rcr
xor
jecxz
imul
imul
inc
sbb
addr16
jae
jmp
mov
inc
loop
or
or
jne
mov
xchg
cli
xchg
shlb
push
fbstp
xchg
jmp
jmp
decb
test
mov
adc
add
or
mov
mov
lock
rcr
aam
rclb
jmp
testl
lock
push
int3
xor
jmp
and
add
insb
lret
repz
jmp
subl
sbb
jmp
in
lret
inc
jge
mov
pop
cmp
push
xlat
in
pusha
rcrb
xor
push
mov
add
adc
lret
sbb
addl
lods
jle
push
push
mov
inc
daa
mov
pop
orb
pop
dec
cmp
aaa
loope
sbb
lds
jno
or
mov
or
inc
fsts
xorb
mov
adc
repz
lods
clc
arpl
fdivrp
sbb
roll
add
lock
scas
movsl
inc
into
pop
pop
into
push
insb
movsl
mov
sub
cld
jnp
inc
jae
cli
out
inc
lcall
mov
sub
testb
xor
lock
leave
js
and
jl
fstp
into
pusha
int3
inc
pop
cmp
fbld
add
frstor
inc
mov
dec
cmp
mov
dec
pop
pop
cmp
mov
sub
or
sbb
dec
jb
sub
mov
pushw
bound
shlb
sbb
add
pop
mov
testb
mov
hlt
ja
add
sub
adc
jp
sti
test
xchg
sti
lret
add
lods
mov
jo
das
and
xchg
inc
fistpll
mov
and
add
mov
cmp
dec
fildl
fsubl
and
push
or
int3
or
fisubrs
lea
push
jmp
hlt
xchg
out
aam
push
pop
dec
inc
les
pusha
add
sbb
xor
sbb
test
js
mov
andb
push
add
das
rolb
inc
aaa
ror
mov
mov
ja
andb
xor
cmp
push
push
dec
in
jno
fisubrs
cmp
mov
or
xchg
add
mov
test
mov
add
xchg
fmuls
imul
sbb
jg
sub
cmp
xchg
jne
rcr
loopne
jne,pt
xchg
mov
jnp
loope
adc
fisttpll
jecxz
sbb
xchg
or
xchg
add
dec
add
jle
sbb
cmp
push
js
dec
lods
nop
dec
xchg
mov
pop
push
xor
push
fbstp
push
out
push
rclb
pop
pop
out
andb
test
add
or
mov
rcll
sbb
push
adc
ds
add
push
gs
daa
add
jecxz
sub
mov
outsl
addl
jg
rolb
addb
cmpsl
fs
testl
ret
cmpsl
adc
pop
cmp
inc
dec
rorl
out
or
push
icebp
jmp
or
pop
mov
xor
loope
mov
jecxz
adc
jg
ret
jg
ret
das
mov
pop
repz
push
push
inc
js
cmpsb
fwait
inc
sbb
hlt
xchg
dec
fdivrl
push
adc
add
loopne
andb
or
adc
pop
or
sbb
icebp
jp
insl
test
xchg
xor
aas
adcl
shr
and
push
dec
jmp
lock
cmc
or
and
sub
and
push
sbb
fs
mull
add
inc
out
rol
jmp
mov
xchg
xor
jle
jmp
std
into
test
jae
xchg
out
call
sub
sbb
fmulp
pop
sub
sets
mov
pop
rcrb
cmp
mov
lods
stos
pop
sub
icebp
dec
aam
inc
jmp
loopne
xchg
repz
ret
sbb
shll
int3
adc
mov
testb
adc
jge
mov
jns
repz
hlt
fistps
test
in
xor
enter
adc
jnp
sbb
or
orl
test
addl
push
popa
or
or
je
xor
cmp
fildl
mov
jmp
or
aad
into
adc
aad
inc
das
inc
movsb
mov
aad
in
xor
dec
mov
sti
pop
jne
xchg
cld
cmp
pushf
lock
sahf
cld
sbb
push
or
mov
rolb
faddp
shr
mov
aaa
pop
jb
test
stos
mov
xchg
jo
or
mov
fs
and
and
lret
jmp
pop
adcl
inc
dec
lcall
jmp
cmp
sub
psubb
sub
sbb
jg
das
jp
push
rcrb
adc
and
roll
cld
stos
pusha
pop
gs
scas
jo
sub
dec
dec
mov
mov
mov
out
dec
sub
pushf
sti
jo
clc
sub
sbb
lods
filds
adc
jnp
ljmp
lock
ljmp
mov
lahf
sbb
add
xlat
ret
cmpsl
sbb
stos
xchg
and
enter
pop
aam
je
jbe
ja
sub
dec
icebp
mov
lea
push
inc
std
out
pop
jne
push
call
push
outsb
sbb
sbb
adc
and
add
pop
pop
push
fidivrl
cltd
inc
ret
sub
fisttpll
or
frstor
jo
cwtl
in
cmp
inc
or
test
cld
adc
jb
loope
movsl
push
adc
push
adcb
aaa
jo
clc
mov
pop
xor
rcrb
adc
out
add
test
push
repnz
aad
jne
lock
cmpb
outsb
jg
or
add
mov
es
xor
ficomps
or
mov
ret
gs
adc
pop
pop
cmpsb
loope
cltd
js
adc
or
mov
add
ret
cmp
jb
loopne
lods
imull
pop
sbb
jo
lods
or
add
add
loope
cwtl
lahf
mov
dec
ret
adc
xlat
lahf
add
and
sbb
cmpsl
jmp
pop
js
das
test
jmp
call
pop
xlat
mov
push
add
add
in
adc
rcrb
inc
stos
out
imul
mov
sbb
fdivrl
xchg
cmp
cmp
das
test
fsubrs
push
daa
icebp
add
cwtl
mov
sbb
cmp
ret
scas
add
fnstenv
or
push
scas
icebp
mov
xlat
fwait
pop
push
mov
pop
imul
fcmovu
add
lds
or
ret
push
insl
aas
loope
xor
jmp
adc
outsb
adc
cld
mov
mov
gs
sub
add
fildl
nop
add
pop
je
enter
sub
sub
or
outsb
fs
popa
mov
movsl
pop
push
mov
sub
movsl
or
mov
maxps
int
push
popf
mov
add
gs
or
loop,pt
lea
outsl
cmp
add
sub
mov
sbb
mov
pop
pop
pop
pop
jmp
aam
test
inc
rcrb
lcall
sbb
push
adc
adc
icebp
into
shlb
or
and
push
les
mov
iret
test
ja
mov
lock
testl
out
bound
mov
addr16
std
jmp
outsl
mov
add
mov
jl
push
sbb
push
dec
cmp
jne
adc
mov
add
lock
sti
adc
ss
jnp
sub
ret
cs
leave
push
ljmp
test
ds
inc
mov
and
pushf
cmp
dec
mov
pop
pop
lods
xor
xchg
lret
xchg
xchg
cmp
and
sub
sbbb
xchg
fs
add
ja
jmp
out
fimuls
pop
add
cld
repnz
dec
testb
inc
sbb
add
icebp
mov
or
pop
jne
dec
sub
adc
push
sbb
xor
sub
sub
mov
cmp
inc
fwait
stos
mov
mov
cld
sarl
mov
sub
xor
pop
aad
je
mov
xlat
rclb
jg
scas
lds
adc
xor
push
push
push
scas
dec
lock
pop
cmp
pop
push
push
jne
inc
xor
outsb
addb
arpl
push
test
mov
lahf
repnz
aad
das
cmp
shrb
jmp
sahf
test
sub
jae
inc
sub
lock
mov
pop
cmp
add
jbe
jmp
xor
dec
add
jecxz
in
lds
lods
or
mov
push
bound
add
insl
bound
xor
push
mov
sarb
rclb
push
es
cmp
cmpl
jecxz
sub
lret
mov
or
movb
or
adc
xchg
adc
stos
gs
movsl
rol
decl
outsl
pop
jae
out
jb
sti
jp
xchg
inc
ja
loopne
push
jp
xor
arpl
push
mov
mov
add
add
ss
mov
repnz
fwait
dec
xlat
push
ret
scas
cltd
stos
in
push
loopne
mov
mov
enter
dec
add
ljmp
repnz
cmp
cld
mov
test
dec
mov
ja
fidivrl
xor
shrb
fcomps
sub
or
xchg
pop
pop
pop
push
cmp
mov
stos
call
fs
push
call
addb
lock
pop
pop
push
lods
les
inc
adc
add
mov
aaa
pop
mov
testl
push
mov
shll
sarb
pop
js
jns
push
rcl
and
cli
shlb
or
pop
pop
sbb
divb
hlt
jl
loop
sub
cltd
shl
xorl
pop
mov
jge
or
add
and
dec
mov
roll
inc
outsl
lea
aad
jb
push
bound
or
faddl
cwtl
lock
adc
push
repnz
ret
sarb
shlb
iret
push
xchg
jge
fbld
mov
or
addb
dec
movsb
mov
scas
ja
test
andl
ret
dec
xchg
jnp
dec
idivl
cs
cmp
enter
jne
lods
rol
dec
sbb
das
inc
cmp
or
dec
rcrb
or
callw
rorb
sub
adcl
or
adc
movsl
ret
in
test
and
sub
xor
call
and
xor
scas
inc
add
dec
inc
cld
scas
inc
and
js
dec
push
icebp
ja
andl
mov
in
xor
push
add
movl
jne
nop
xor
adc
mov
cmp
mov
ss
loop
mov
jecxz
in
jb
je
sbb
lahf
jg
movsl
dec
test
cmpsl
dec
hlt
rcr
xchg
xchg
dec
jno
fcomps
sarl
fcoms
add
sub
sbb
jno
clc
andl
dec
xor
adcl
jae
jge
jo
xchg
cmp
dec
xchg
icebp
push
sbb
pop
and
sti
push
call
sub
cli
ret
pop
and
loope
xor
dec
push
rclb
push
call
imul
lea
ret
mov
ja
sbb
clc
and
icebp
xor
push
clc
int3
mov
push
and
sbb
ja
mov
jp
cmpl
pusha
or
and
je
imul
ret
pop
inc
mov
cmp
sbb
add
popa
sub
roll
mov
xor
and
jb
test
or
test
jne
aad
sbb
inc
or
jno
out
adc
pop
sub
shlb
int3
xchg
xchg
sti
fstpl
sub
mov
push
xchg
mov
inc
sub
js
mov
jmp
and
movsl
xchg
test
fwait
mov
addb
inc
insb
mov
rorb
dec
sbb
inc
jns
xchg
daa
xchg
add
and
scas
mov
arpl
icebp
jg
call
mov
pop
fistpll
sbb
add
mov
xor
imul
pop
and
inc
sub
rcrb
cld
pop
inc
scas
pop
cmp
push
xor
mov
das
push
sbb
cmpsl
inc
mov
lcall
mov
adc
stos
and
enter
jne
mov
imul
add
and
add
jecxz
jae
sub
cmovnp
ljmp
fmull
adc
fsubr
add
dec
lahf
dec
sbb
or
sub
mov
clc
xadd
scas
int3
out
sbb
imul
push
clc
imul
sbb
lds
jecxz
and
jbe
scas
icebp
shrl
add
addr16
pop
rcr
icebp
dec
es
loope
mov
pop
sub
inc
add
out
inc
sbb
or
clc
bound
inc
in
mov
adc
lock
rcrb
xchg
rorl
sbb
sbbb
out
stos
iret
push
mov
add
fidivrl
into
add
das
ja
ret
mov
mov
cmp
push
cltd
rorl
jl
mov
loopne
lcall
jmp
add
add
cmp
loope
rorb
and
dec
loope
icebp
xor
neg
xor
aad
xchg
in
lock
hlt
jecxz
push
push
or
iret
das
fwait
out
add
sbb
pusha
add
mov
xor
sbb
rol
mov
add
jo
or
mov
push
flds
cltd
and
sbb
sbb
jmp
lret
sub
rorl
mov
adc
pop
xor
adc
mov
fcomps
popf
cmp
fmull
sub
jb
cmp
sar
sti
add
stos
nop
pop
rol
dec
ret
cs
add
xchg
lock
adc
shrb
and
cmpb
push
pop
mov
imul
jmp
sbb
sub
add
add
or
jns
mov
insl
mov
roll
andl
addr16
and
nop
jmp
imul
and
inc
adc
test
push
test
add
push
test
imul
imul
fsubrl
and
or
notb
movsl
frstor
ljmp
mov
ds
adcb
neg
addr16
or
test
fs
nop
test
adc
mov
cmp
fscale
stos
ja
jne
mov
add
or
pop
mov
push
and
jae
sbb
bound
outsl
ds
pop
mov
outsl
or
stc
xor
add
jge
push
rolb
setno
test
icebp
dec
pop
movsl
sbb
push
pop
jo
push
pop
sbbb
fisubrs
rorb
add
call
push
dec
clc
mov
bound
fdivrp
cmp
add
cltd
stc
loope
xor
out
cmp
mov
in
and
add
stc
bound
add
pop
std
inc
movsb
inc
or
cld
adc
inc
mov
aam
dec
fisubrs
inc
xor
pop
push
jecxz
xor
add
add
and
sbb
add
xorb
adcb
sub
ret
add
fisttpll
mov
sbb
xchg
xchg
lods
mov
dec
jae
pop
in
je
repnz
pop
cmpsb
test
xor
or
test
call
push
cmpb
fidivrs
pushf
in
inc
jmp
sbb
mov
sahf
jmp
cmp
push
add
adc
xor
adc
xor
call
sbb
das
int
testl
jg
adc
cli
test
fld
scas
mov
mov
out
rcrl
add
cmp
push
andl
inc
inc
add
lret
arpl
rolb
mov
xor
iret
cmp
cmp
pop
shll
gs
inc
jnp
jg
lcall
cld
pop
sbb
ficompl
sub
movsb
ficoml
lret
rorl
je
or
lock
xchg
ja
push
adc
pop
stos
push
mov
imul
push
dec
mov
jecxz
cmpb
pop
ljmp
pop
icebp
push
mov
adcl
push
mov
fldcw
stos
scas
shl
icebp
out
add
andl
das
movsb
addr16
movaps
adc
jmp
rolb
and
aas
and
inc
sub
xor
pop
arpl
orb
shlb
inc
je
andb
pop
mov
pop
stos
divl
leave
mov
test
out
push
insb
adc
in
les
loope
ja
lock
jge
push
not
outsl
cmp
mov
sbb
loop
scas
stc
mov
cld
arpl
idivb
add
cmp
bound
das
ret
jecxz
and
sahf
loope
lea
out
dec
popa
rol
push
jbe
xchg
scas
gs
pavgw
xor
icebp
jae
mov
xor
or
add
imul
add
cmp
jmp
sub
jne
test
pop
mov
jl
mov
rcrl
dec
shlb
xlat
fdivrp
inc
out
add
data16
scas
push
xor
mov
or
push
jnp
dec
inc
mov
or
pop
mov
cld
rolb
or
dec
xchg
sub
lret
loop
pop
addb
mov
mov
jmp
stos
adc
or
loope
fldl
sbb
cltd
mov
loopne
cmp
or
add
or
push
push
jmp
add
pushf
mov
xorb
xchg
sahf
cmp
mov
add
stos
and
mov
call
add
pop
add
push
and
ret
add
cmp
jmp
push
push
inc
das
cmp
negl
pop
push
jp
add
xor
or
sbb
das
outsb
xor
and
xor
fs
ds
test
jbe
movsb
xchg
and
call
dec
js
push
cmp
or
iret
dec
iret
mov
add
lods
test
xor
std
or
and
sbb
cmp
cmp
cs
int3
call
mov
loopne
pop
ret
xchg
in
cmpsl
add
adc
fdivrp
sbb
arpl
dec
cltd
pusha
add
adcl
pop
std
mov
xchg
ja
lea
mov
pop
sub
rcrl
in
das
cmp
adc
add
scas
mov
mov
or
mul
mov
sbb
add
push
idiv
cmp
icebp
movb
outsl
bound
rcrl
and
push
xchg
sub
cmp
push
stos
pop
insl
fstps
inc
shlb
cmp
xor
rolb
test
adc
cmp
out
sub
lret
pop
fmulp
and
lods
movsl
ret
arpl
jg
fstps
xor
and
ret
sbb
outsl
pop
js
pop
repnz
or
ds
cmp
and
lret
shlb
push
hlt
add
adc
push
inc
sub
cmpl
adc
add
adc
jae
ret
cltd
xchg
pusha
and
mov
fsubrs
xchg
jb
pop
cmp
push
js
pop
ret
fildl
and
pop
dec
rcrl
jg
sbb
stc
repnz
cmpsb
out
pop
xor
int
in
hlt
mov
add
cmpsl
daa
cld
dec
push
mov
cmc
je
inc
leave
icebp
and
subl
sub
arpl
push
xor
and
js
mov
fldenv
aas
loopne
pop
imul
adc
adc
xorb
ret
add
sahf
xchg
cmp
jmp
xor
mov
add
fwait
out
push
roll
test
test
inc
dec
inc
xchg
and
or
jo
gs
loopne
add
push
enter
popa
push
jmp
add
sub
cmc
subb
iret
sbb
inc
xor
repz
sub
sbb
inc
inc
add
cmpsl
es
out
and
xchg
dec
fisttpll
test
fimuls
add
aam
lahf
ret
adc
dec
jg
mov
adc
sbb
cmpsb
add
aas
push
pop
pop
pop
pop
movaps
fmuls
push
and
lods
xchg
mov
testb
ret
mov
cmp
daa
cs
jmp
mov
sbb
loop
js
out
inc
xchg
outsl
enter
loop,pt
xchg
orl
sahf
push
push
xor
or
xchg
neg
sbb
cld
push
jle
daa
cld
sub
xchg
mov
xor
test
push
lea
rcrl
pop
iret
jae
add
dec
adc
mov
loop
inc
adc
dec
pop
das
dec
lock
cmpsl
in
rolb
shlb
dec
mov
pop
rolb
ljmp
pop
maxps
andl
xchg
and
xor
scas
xchg
addr16
fst
push
adc
shrl
imul
add
cmp
ja
jp
movsl
sbb
push
roll
cmp
fldl
or
and
popf
pop
add
aaa
adc
dec
ud2
outsl
and
test
mov
pop
and
imul
xor
inc
dec
jecxz
cmp
nop
sbb
sub
push
push
jmp
daa
cmp
cli
xchg
loop
dec
add
test
aad
add
jbe
adc
sbbb
push
rcrl
repnz
out
sbb
mov
fistpll
fdiv
movb
sub
shrl
es
inc
icebp
or
sbb
cmp
cmp
inc
ret
ja
shll
lods
loope
fildll
ret
cmp
mov
pavgw
scas
rclb
mov
pop
mov
xorb
ja
add
adc
adc
stos
lret
jmp
push
jbe
sbb
sub
cld
nop
adc
add
lcall
inc
xchg
xor
xor
iret
jmp
jo
push
pop
sbb
fnstcw
inc
aas
cld
sbb
push
adc
push
fsubrp
and
push
into
loope
cmp
pop
out
or
fdivrs
test
sub
aaa
sarl
adc
imul
xchg
push
repz
sub
fisubl
xor
push
sub
inc
bnd
sub
push
icebp
xchg
mov
add
imul
stos
test
push
xlat
add
xlat
ror
stos
mov
cwtl
dec
out
push
mov
add
and
or
nop
inc
test
dec
inc
xorl
add
dec
pop
mov
lods
jae
jmp
inc
mov
lock
mov
insl
mov
lret
scas
dec
jl
add
enter
jns
stos
inc
aaa
add
sbb
mov
js
jle
jae
stc
scas
and
dec
sub
sbb
loopne
sub
movsl
mov
cmp
jae
cmc
push
dec
dec
or
add
int
in
dec
test
arpl
cli
pop
test
push
inc
jl
jnp
aam
and
mov
push
loop
stc
imul
dec
jge
sbb
lcall
mov
xchg
push
dec
xchg
sub
insb
push
mov
xor
stc
and
inc
sub
xchg
sbb
cltd
cmc
les
test
test
pushf
sbb
mov
or
mov
jecxz
cmp
jb
mov
jl
hlt
or
xchg
jmp
mov
shlb
mov
cmpsl
daa
xchg
ds
cmp
or
add
enter
stos
clc
out
int3
and
cmp
jp
jns
add
mov
fisubrs
xchg
push
pop
sub
hlt
or
or
jp
add
dec
lds
sbb
sbb
aad
pop
addb
clc
roll
push
push
sbb
mov
or
xor
test
shll
add
jg
sub
sub
les
jnp
inc
xor
add
pop
dec
lahf
lock
cmp
push
jns
imul
mov
movsb
xor
sub
dec
mov
mov
push
ds
or
sbb
or
sbb
dec
aam
dec
test
ds
inc
cs
test
cmp
cmc
ljmp
jmp
scas
icebp
pop
mov
stos
das
mov
dec
pop
ret
filds
adc
test
mov
or
and
push
add
test
jl
ds
mov
dec
cltd
nop
inc
sarb
ror
ret
sub
xchg
add
sti
gs
test
cmpsl
push
nop
push
rorb
pop
jne
push
cwtl
cmp
jo
mov
pop
dec
adc
xor
pop
xor
es
call
lods
push
adc
mov
dec
and
pusha
ficompl
or
les
inc
mov
ljmp
fiadds
push
xor
filds
adc
mov
stc
xor
and
adc
inc
ffreep
dec
sub
and
adc
and
xchg
add
clc
dec
rorb
outsl
and
adc
sti
outsb
outsb
fnstsw
dec
inc
mov
dec
xchg
push
pop
dec
push
out
xor
dec
push
lods
mov
jb
movsl
imul
or
cmp
pop
call
movups
or
dec
xchg
fwait
icebp
mov
sbb
xor
cs
repz
faddp
repz
dec
add
xor
lock
cwtl
das
cli
cmp
ret
adc
cmpsb
mov
aad
sub
ja
mov
loope
inc
sub
js
rcr
add
add
call
inc
ljmp
cmp
mov
and
ljmp
iret
and
sbb
jle
js
xchg
xchg
fists
loope
hlt
cmp
cmpb
icebp
jne
js
fisttpl
sahf
push
cltd
dec
dec
inc
not
jge
mov
mov
nop
ss
aaa
imul
xchg
je
jae
cmpsb
cmp
cs
insl
movsb
push
icebp
add
mov
xchg
dec
dec
rolb
add
lret
lcall
inc
inc
or
aaa
insb
filds
jl
js
popf
and
pop
imul
call
adc
sub
andb
mov
fldt
cmp
jo
lock
loopne
in
xor
incl
push
fadds
loopne
mov
loope
roll
fisubrs
loop
and
inc
lahf
jo
adc
pop
repz
cmp
test
in
imul
sbb
cmp
pop
jae
loopne
add
je
test
ror
sbb
and
scas
stos
jge
xorl
adc
or
rol
jae
mov
pop
aam
lahf
dec
addb
add
adc
test
pop
in
movsb
pop
push
rcl
or
push
add
aas
out
mov
sbb
pop
or
cmpsl
fstpt
cmp
aam
mov
xchg
shrl
add
push
nop
add
inc
inc
pop
movsb
xchg
stc
cmp
jo
pop
subl
loopne
ret
test
jae
enter
mov
inc
js
std
rorb
clc
daa
bound
push
cmp
xor
push
adc
add
out
adc
xchg
test
mov
data16
clc
aad
les
xchg
mov
mov
inc
and
rol
scas
dec
das
shll
xchg
in
stos
adc
xchg
add
jnp
loopne
jnp
mov
dec
outsl
fs
dec
pusha
xorb
shlb
bound
mov
mov
inc
jnp
fsubrs
inc
faddl
lods
add
jmp
cmp
jae
push
test
push
fwait
inc
jmp
insl
cmp
dec
arpl
cmpsl
lods
push
ja
cmpsl
arpl
inc
loop
mov
cmp
mov
testl
dec
sbb
cmc
sub
ret
lcall
loope
stos
test
or
sub
xchg
mov
add
mov
imull
or
cmp
ret
jo
mov
inc
sub
inc
aam
or
imul
mov
dec
xor
cmpl
lahf
aaa
jl
and
jo
stc
or
cvtpi2ps
imul
add
rcl
cli
and
add
dec
mov
jge
push
clc
sub
and
cmpsl
or
inc
loope
clc
mov
or
push
pusha
cmp
clc
mov
sub
pusha
cmpsb
mov
mov
sahf
sub
add
popf
xchg
add
mov
enter
test
jmp
add
add
lret
lret
mov
cmovbe
les
bound
dec
mov
xor
add
push
adc
aam
push
imul
xor
lock
arpl
sbb
sbb
test
adc
popf
mov
xchg
push
sub
add
lcall
std
aas
in
sbb
enter
call
jmp
sub
mov
jbe
sub
xchg
movsl
nop
jbe
leave
inc
cli
push
pop
cmp
ret
xchg
ds
int3
sub
fisubl
pop
xchg
pusha
jb
or
push
data16
cmp
int
fwait
mov
dec
adc
sbb
icebp
aad
shrb
pop
in
inc
or
lcall
dec
int3
jbe
inc
or
iret
xchg
jbe
clc
mov
pop
outsl
xchg
or
inc
in
add
rcrb
inc
sub
notl
inc
es
clc
mov
nop
jo
adc
xchg
xorl
pop
sub
adc
ja
or
xchg
imul
ret
clc
out
movl
dec
push
jg
xor
repz
aad
in
in
mov
pop
xchg
icebp
or
ss
sub
xchg
hlt
pop
push
clc
inc
sub
scas
cmp
jecxz
adc
cmpsl
mov
popf
pusha
cmp
ret
daa
xchg
dec
pop
xor
loop
outsl
sub
mov
inc
rol
inc
add
cmp
js
pop
mov
ret
jbe
fwait
hlt
repnz
mov
sub
and
ljmp
adc
fisttpl
jecxz
imul
and
push
xchg
push
roll
dec
mov
adc
add
je
scas
test
xchg
add
cmp
cmp
xor
rolb
fdivl
adc
inc
and
ret
je
xor
adc
add
rclb
dec
imul
adc
push
clc
outsb
adc
rcl
jl
sbb
inc
mov
enter
rol
or
sub
xchg
cmp
pop
enter
cmp
fnsave
xchg
rorl
mov
rclb
inc
mov
popa
test
adc
push
sbb
sbb
xchg
outsb
pop
xchg
jmp
xor
clc
repz
mov
push
es
sbb
insb
cld
aam
sbb
arpl
push
inc
lods
jo
ljmp
xor
add
xchg
leave
cwtl
and
int
add
sub
cmp
mov
pushf
aas
add
mov
push
les
fwait
addr16
into
adc
xor
fidivrs
ss
stos
inc
xchg
or
aad
and
push
xor
aaa
inc
pop
cmp
insl
aas
sub
add
shll
xchg
stos
insb
cld
adc
sbb
pop
sub
gs
shl
test
ja
cmp
incb
aad
push
lods
fists
push
ds
pop
xchg
xchg
xor
cmpb
nop
xchg
jmp
mov
jecxz
push
test
lock
push
in
out
sub
add
inc
pushf
aas
xchg
inc
cwtl
es
or
add
ljmp
sub
lds
pop
inc
sub
js
shll
cmpsb
cmpsb
jbe
inc
xlat
test
cmp
fnstcw
add
fstl
cld
dec
sbb
mov
adc
ljmp
out
mov
call
ljmp
xchg
cli
pop
in
push
xchg
add
clc
lahf
in
jg
cmp
test
dec
popf
aaa
addr16
sub
jbe
call
shll
xchg
push
lods
insl
ret
pop
stos
ljmp
and
adc
inc
and
push
enter
and
sub
xchg
aaa
mov
jmp
hlt
pop
pop
add
lds
jecxz
adc
mov
jne
xor
rolb
xor
xchg
fs
call
mov
aaa
cmp
mov
pusha
pop
adcb
or
gs
inc
out
imul
jno
call
fwait
cmp
cmp
mov
inc
iret
ret
add
ljmp
adcb
or
mov
les
dec
fcmove
les
adc
xor
and
adc
adc
xor
cltd
add
loopne
and
les
addb
fucomip
inc
cmp
popa
movsl
jmp
fcomps
ss
and
clc
xchg
icebp
add
imul
daa
jp
dec
clc
les
fstps
test
inc
dec
pushf
shll
mov
mov
ret
xor
movsb
adc
mov
in
test
xchg
push
dec
lret
pop
lods
shl
loopne
cli
xor
in
cli
push
push
shll
push
push
adc
or
or
adc
shrb
add
insb
xchg
jo
leave
dec
shrb
jge
sub
in
fcoms
or
sbb
add
mov
jecxz
ljmp
divl
mov
and
int3
jnp
add
dec
clc
cmp
jae
cmp
lret
loop
add
add
call
add
sbb
add
ret
filds
mov
and
lea
jno
out
jno
stos
sub
dec
out
outsl
in
xchg
imul
cmpsl
jmp
dec
xchg
add
int3
push
xchg
sbb
push
arpl
mov
icebp
mov
cmpb
push
je
mov
inc
or
xor
cmp
cmpsb
call
cmpsb
pushf
out
repz
cmp
inc
or
xchg
adcb
mov
ret
xchg
and
mov
test
add
lret
pop
add
pop
mov
xor
add
repnz
or
repnz
add
lods
jle
jecxz
or
adc
sub
or
das
jmp
fistpll
pusha
aam
cmovp
js
stos
add
outsb
pop
popf
xchg
fisttpll
lods
push
mov
inc
mov
cld
mov
mov
jne
mov
push
fdiv
mov
fwait
jmp
fldt
and
ja
int3
cmpsb
pusha
out
shl
int3
addr16
jbe
mov
xor
jo
push
jmp
jp
call
js
adc
add
push
inc
sub
or
loop
push
push
adc
push
push
clc
push
push
add
or
into
xchg
lahf
aaa
mov
int3
xchg
imul
sbb
aad
rcrl
adc
add
and
cmc
imul
add
cwtl
fs
fcmovb
xlat
test
inc
jmp
loopne
sub
outsb
orb
fs
xor
mov
nop
mov
out
daa
xchg
or
jp
insl
or
loopne
stc
pop
shl
test
lods
out
xchg
xor
xchg
add
jl
pop
mov
subl
pusha
jecxz
outsl
inc
fisttps
mov
lds
call
lock
lock
arpl
out
ret
add
mov
add
mov
and
xor
lock
dec
ljmp
mov
dec
inc
or
push
arpl
mov
cmp
pusha
mov
or
adc
xchg
std
sub
inc
addr16
out
lods
adc
cmp
push
inc
mov
xor
xchg
imul
cld
jle
or
scas
cmpsb
inc
call
rcrb
and
call
scas
out
dec
pop
push
loope
mov
xchg
push
cwtl
test
out
fisubl
add
push
mov
insb
adc
sub
movsb
call
mov
add
dec
aas
and
stc
shr
or
test
xchg
ret
into
pop
mov
call
cmp
inc
js
inc
dec
jp
xchg
inc
clc
sbb
push
jl
test
loopne
add
sbb
push
mulb
into
inc
ficomps
inc
sarl
arpl
ret
pop
inc
push
call
or
or
or
shll
dec
iret
push
adc
or
inc
shr
sub
mov
adc
jbe
pop
imul
adc
outsl
dec
mov
jbe
adc
add
aaa
int3
push
mov
add
and
inc
xchg
arpl
adc
stos
popa
clc
aam
adcl
pop
mull
adc
adc
aam
mov
jl
icebp
and
cmpsb
out
or
mov
adc
jbe
push
rorb
in
nop
leave
dec
pop
add
xor
add
cld
adc
pop
aaa
mov
inc
aam
or
cmpsb
movsl
lods
and
xor
push
cmp
mov
rorb
adc
dec
push
add
test
mov
mov
insb
and
adc
pop
sbb
pop
ret
jno
xchg
sbb
sbb
or
subl
imul
ss
jne
mov
inc
dec
add
roll
push
mov
push
rcrb
mov
bound
cmp
inc
pop
maskmovq
testl
and
fisttpll
mov
sub
adc
xor
inc
xor
leave
mov
rolb
mov
adc
cltd
ret
cmp
bound
sub
movsl
fsubs
stc
sbbb
add
jl
sub
or
cmp
lock
call
and
nop
adc
loop
mov
push
adc
or
sub
xor
push
push
popa
ds
cmp
sub
sbb
aaa
ljmp
and
add
stos
mov
fdivs
and
add
push
jne
xchg
lods
rclb
mov
push
push
adc
movb
and
push
les
xor
aad
mov
in
incb
sti
adc
enter
lahf
sub
dec
test
adc
dec
sbb
mov
shlb
sbb
jmp
cmc
orl
fstps
mov
push
icebp
jno
cmc
xor
pop
inc
mov
stc
xor
jne
fsubrl
push
push
pop
out
es
lcall
loopne
xchg
aaa
loop
nop
push
loopne
sub
xorb
mov
mov
cmp
in
mov
and
inc
and
adc
push
adc
ljmp
icebp
mov
cmp
add
cmp
jo
mov
lods
cltd
pop
xor
cmp
xor
lock
push
dec
inc
mov
outsb
xor
mov
and
mov
fisttpll
loopne
sbb
int3
pop
roll
test
dec
in
call
add
sbb
and
pop
add
add
jne
mov
pop
push
push
push
call
je
ret
inc
repz
mulb
pop
sbb
aad
add
add
add
mov
orl
or
dec
or
subb
ljmp
pop
imul
cmp
jl
rol
dec
mov
cmp
mov
mov
cmpsb
push
cmc
fwait
adc
jecxz
mov
add
std
add
fildll
inc
jle
mov
jns
inc
loop
add
cmp
sbbb
shl
dec
lret
adc
fcomps
inc
sbb
cli
les
aaa
xor
mov
shlb
mov
test
jmp
es
add
fidivrl
addb
nop
rcl
push
mov
outsl
shrb
sub
pop
ficomps
and
inc
xchg
dec
jmp
cmp
push
in
test
dec
pop
daa
int
movsl
movsl
xchg
icebp
jno
aas
int3
dec
in
push
lock
outsl
data16
xchg
adc
xchg
or
push
cmp
pop
test
inc
shll
test
es
incl
xor
sbb
mov
lods
pop
in
aas
cmp
ret
or
mov
push
fisubs
sub
cli
loope
xor
add
add
cli
sub
dec
pop
shlb
dec
cmpsl
lcall
push
add
pop
mov
scas
lods
imull
sar
jnp
push
pushf
mov
xchg
push
mov
fadds
cmp
adc
mov
adc
aam
aas
add
add
lahf
jge
js
jo
mov
test
push
iret
adc
pusha
fidivl
or
mov
mov
jge
imul
out
frstor
mov
pusha
mov
cmp
mov
nop
jo
sbb
push
insb
adc
insl
movsl
fdivl
aam
mov
ss
test
or
dec
in
popa
xchg
xor
inc
adc
cmp
popf
das
pop
or
add
or
mov
loope
adc
sbb
add
pop
mov
shld
rcrb
mov
xchg
in
sti
in
xor
call
pop
push
loopne
pop
test
pop
es
andb
shl
in
sub
ljmp
xchg
pusha
add
mov
push
out
jecxz
cmp
push
adc
cmc
arpl
mov
loopne
loopne
push
out
pop
xor
dec
das
fdiv
hlt
and
outsl
and
mov
or
ja
je
fcoms
inc
cmp
sbb
adc
call
xor
rcl
shll
jge
push
pop
jp
rolb
lds
lret
mov
xor
sbb
scas
enter
sub
flds
out
and
xor
add
push
fadds
cs
adc
test
int3
and
into
test
push
ficomps
stos
in
dec
sub
adc
inc
xor
ret
ret
fldl
loopne
imul
std
jge
sub
addb
cld
ss
ss
aad
pusha
pop
mov
inc
add
push
add
or
and
cmp
add
call
pop
call
idivl
sub
ds
pushf
cmc
sbb
sub
nop
nop
cli
push
xchg
hlt
dec
jmp
fiaddl
incl
clc
call
and
sbb
jno
mov
inc
loope
pop
pushf
cmp
pusha
cwtl
add
xchg
test
subb
jmp
fldcw
ljmp
pop
ss
lahf
push
dec
mov
push
rcrl
adc
xor
outsl
arpl
jmp
dec
imul
mov
cmp
nop
dec
call
js
add
xchg
dec
test
cltd
sbb
jno
inc
enter
sub
jg
push
adc
bsr
iret
mov
and
xchg
repz
xchg
fcomp
les
jge
add
adc
rolb
mov
inc
cmpsl
or
mov
jecxz
loopne
add
jno
sub
xor
sbb
or
and
push
fisubl
mov
cld
in
insl
sub
ja
inc
enter
rolb
add
out
out
inc
push
jne
shrb
sti
pusha
or
or
pop
and
and
pop
repnz
call
stos
dec
adc
or
mov
clc
sahf
xor
imul
push
add
dec
mov
mov
xchg
mov
out
pop
add
mov
sbb
scas
ljmp
sbb
movb
aam
push
jne
add
pop
xor
call
and
scas
daa
mov
ficompl
xchg
in
and
call
cltd
mov
xchg
push
sub
inc
sub
loopne
loopne
bound
sahf
ds
sub
add
mov
shlb
lret
in
xor
mov
ret
mov
or
loopne
jecxz
add
loop
sub
std
xor
popa
add
add
xor
adc
test
xor
mov
daa
sbb
je
enter
ss
jne
inc
cmp
call
add
lahf
js
mov
sar
adc
popf
adc
or
imul
loop
xchg
out
test
arpl
mov
push
adc
add
mov
pop
xchg
test
adc
insl
xchg
xor
nop
inc
pop
xor
adc
and
xchg
xor
xor
add
xchg
cmp
sub
cmp
movsb
int3
aaa
sbb
int
and
je
repnz
insb
mov
scas
test
jo
cs
popa
aam
adc
decl
pusha
loope
xor
add
orb
loopne
sbb
mov
icebp
aam
lret
ret
pop
mov
mov
idivl
dec
shrb
xor
into
fwait
test
testb
subb
xchg
adc
test
movl
push
rorl
roll
ret
imul
jle
sbb
bound
loopne
mov
jnp
or
jp
add
or
add
nop
negb
cmp
inc
fiadds
mov
loop
rcrl
ret
dec
je
fldpi
mov
add
or
test
adc
mov
dec
jo
loope
hlt
fistl
dec
gs
pop
add
mov
std
jnp
add
pushf
push
ret
in
test
add
cmp
fisubl
addb
push
ss
jno
rolb
pop
stos
xor
or
xchg
lds
cmp
clc
inc
mov
je
dec
cmp
test
push
bnd
outsb
lods
mov
adc
outsb
jb
movsb
mov
inc
sub
pop
sbb
mov
mov
and
mov
cmpsb
fidivs
scas
ss
inc
clc
addr16
and
fmuls
inc
mov
call
sub
shl
stos
call
in
ret
and
mov
lock
aad
jecxz
cltd
adc
dec
fistl
adc
pop
clc
out
shl
negl
mov
mov
push
sbb
mov
push
icebp
lds
das
lods
data16
loopne
lock
nop
cmpsb
xor
pop
psubd
cmp
jne
stos
mov
mov
mov
adc
pop
dec
or
push
scas
mov
or
adc
insb
movsl
js
mov
decb
or
cmc
out
inc
mov
add
jns
sub
jle
ret
jo
push
and
cmc
mov
xchg
sub
iret
and
adc
and
mov
in
pop
adc
jne
sbb
xchg
fiadds
and
sub
shlb
jbe
das
add
lods
dec
or
inc
cwtl
das
jp
xchg
jl
dec
inc
adc
stos
mov
mov
andl
xchg
daa
adc
pop
add
pop
or
push
int3
sub
pop
arpl
inc
jmp
mov
and
pusha
mov
fcoms
xchg
das
sub
add
add
dec
sbb
cwtl
rcrl
mov
and
add
mov
lret
or
imul
pop
ret
or
adc
lods
lret
call
adc
inc
fidivl
mov
call
nop
and
popa
jp
test
or
out
add
or
daa
and
rol
push
cwtl
cmp
pop
mull
and
sub
ror
cmc
dec
cmp
and
dec
add
dec
push
cs
insl
dec
sbb
sbb
xchg
popf
and
pop
mov
pop
jecxz
adc
sub
aas
lock
or
int
sub
sbb
loop
data16
mov
adc
or
orl
lcall
loop
rolb
lods
cmpb
sbb
adc
inc
cli
or
or
roll
and
inc
mov
or
jmp
mov
outsb
mov
data16
pop
cltd
and
into
sub
push
cmp
mov
ret
dec
mov
push
add
scas
xor
in
cli
adc
test
jae
mov
mov
sub
cmpsl
je
mov
sub
in
pop
adc
out
imul
orb
jb
add
mov
sbb
js
and
data16
rolb
push
jae
lea
push
push
call
pusha
mov
je
les
loop
xadd
pusha
sub
xchg
fdivr
lahf
lahf
clc
xor
xchg
fisubl
and
lret
sbb
xorb
push
push
lret
int
rcrb
ret
add
jbe
dec
xchg
dec
loopne
xlat
push
mov
adc
sbb
adc
cmp
or
push
or
and
shlb
mov
xor
stos
sub
loopne
add
adc
jb
sti
sub
or
fildll
pusha
in
loop
cmp
adc
inc
xchg
enter
loop
jb
ficomps
lock
add
lret
fsubrs
lea
fcmovbe
mov
cld
fs
orl
sub
cld
bound
and
sbb
pop
lret
fistpll
or
cmp
add
dec
cmp
sbb
aas
inc
iret
jb
rclb
fdivp
hlt
addr16
scas
in
loope
inc
aam
inc
outsb
mov
mov
add
mov
loopne
inc
or
and
fiadds
xor
jb
aad
rolb
shrb
and
push
xor
cmp
neg
or
mov
jbe
and
lcall
das
pop
cmp
jne
push
add
xchg
lock
loopne
or
pop
cmp
jbe
jecxz
mov
pop
add
push
in
stc
jmp
sub
outsl
test
in
pop
or
and
sbb
inc
shrb
aas
ret
jmp
jecxz
xor
jbe
lret
ret
or
dec
mov
rcrb
xchg
add
and
js
ret
cwtl
icebp
pop
nop
jae
jbe
je
in
loopne
xor
inc
inc
mov
adc
lods
add
aam
hlt
mov
mov
inc
xchg
jns
and
adc
jno
pop
clc
loopne
dec
inc
dec
adc
mov
jmp
adcl
aaa
jno
gs
popa
adc
cs
daa
enter
inc
icebp
add
ret
xchg
sub
adc
or
stc
adc
adc
dec
incl
jmp
mov
jno
aas
cmc
sub
loope
fdivl
pop
lods
icebp
jl
sbb
pop
or
adc
push
push
call
and
pushf
adc
inc
or
jmp
inc
add
jne
into
out
xchg
push
mov
xor
roll
or
cmp
mov
mov
adc
pop
and
jb
mov
and
xor
inc
xor
dec
mov
add
dec
push
js
pop
fistpl
add
sbb
outsl
adc
jecxz
xor
es
rcll
nop
mov
daa
cmp
aas
jo
imul
mov
and
iret
ss
or
mov
filds
jne
xor
js
inc
inc
daa
or
push
aaa
push
stos
shlb
xor
out
sbb
sbb
popa
rolb
cmp
fwait
loop
adc
cmpsl
mov
xor
pop
hlt
movsl
shll
daa
sbb
push
out
xor
aaa
je
dec
ss
jns
cmp
push
testl
sti
lds
push
test
daa
mov
push
or
adc
or
sbb
sub
cmp
mov
inc
add
and
pop
mov
test
imul
test
addr16
xor
push
add
les
js
les
adc
lods
dec
add
cltd
sbb
das
lock
jne
jecxz
mov
dec
and
or
mov
nop
inc
icebp
or
jo
or
sub
push
loopne
icebp
cmp
jp
enter
aam
daa
or
out
sub
mov
xorb
lret
adc
fwait
push
test
fucomp
iret
dec
dec
mov
adc
jmp
imul
test
xchg
lock
fs
mov
jo
dec
lea
push
std
unpckhps
sti
add
adc
inc
cmp
or
jo
or
test
xchg
jmp
rclb
fisubl
or
jg
ret
in
iret
xchg
cs
enter
add
xchg
cmp
imul
sbb
ret
adc
push
jbe
ret
push
add
xchg
popf
in
int3
mov
inc
sub
cmpsl
lahf
sbb
ljmp
sbb
test
movsb
sbb
push
push
mov
rolb
adc
jle
arpl
adc
pop
ljmp
repnz
sahf
int3
push
sub
jl
sub
add
enter
sbb
pop
sbb
into
popf
call
and
in
or
out
int
jno
out
or
jb
sub
fsubrs
ljmp
dec
adc
sub
addr16
sbb
shlb
call
xchg
ss
or
cmpsl
sub
test
lahf
fstpl
mov
dec
adc
lcall
cmpsl
jmp
inc
rorb
test
mov
adc
movsb
cltd
sbb
dec
nop
out
in
shlb
add
xchg
call
enter
test
in
jno
testl
ret
enter
pop
fdiv
outsl
inc
sbb
pop
jge
lcall
add
push
addb
std
lret
sub
loopne
clc
ds
mov
push
inc
and
push
pop
cmpsb
icebp
sub
fdivs
test
push
push
rcll
and
jmp
in
loop
ret
ss
sbb
cmp
int3
fisttpl
sbb
adc
stc
mov
pop
sub
jno
xchg
nop
xchg
add
inc
out
cmp
fistpl
stos
or
mov
add
mov
cmp
js
xor
popa
add
fdivrs
inc
add
dec
xor
dec
sbb
push
ret
jne
push
add
gs
and
in
inc
out
dec
pop
push
loope
jmp
mov
enter
add
adc
push
push
adcb
xchg
push
mov
fadd
cmpsb
fdivl
out
or
rcrl
mov
mov
push
addr16
sub
mov
xchg
pop
add
xor
fsub
adc
xorb
and
inc
push
ret
add
cmc
iret
xchg
jno
sub
call
push
aas
mov
sahf
and
imul
mov
mov
imul
push
push
pop
mov
js
dec
pop
jp
mov
sub
fimull
xchg
jmp
cli
dec
lahf
add
rcl
aaa
ret
xchg
mov
pop
icebp
xor
popa
dec
ret
adc
pop
inc
add
add
xor
call
sbb
movsb
mov
add
mov
ss
aas
and
sub
sbb
pop
inc
sub
rorb
loope
pusha
inc
jl
mov
rcrl
mov
jae
test
popa
sub
xor
mov
pushf
idivl
jns
dec
hlt
inc
out
lcall
iret
push
add
adc
imul
dec
loopne
sbb
or
inc
ficompl
mov
das
cmc
xor
jno
orb
jg
mov
or
nop
loop
xor
aas
bound
sub
imul
adc
lret
dec
push
sbb
pop
push
push
add
test
loop
dec
ret
lods
dec
sbb
inc
addl
or
cli
pop
shrb
or
mov
aas
add
dec
pop
sbb
cmc
pushf
jp
movsl
sbb
movsb
shlb
push
lea
xor
pop
stos
add
test
mov
jae
ret
test
push
test
xchg
fistl
int3
fistpl
movsl
sarb
ljmp
ficompl
adc
xchg
movsl
ret
dec
out
sub
or
mov
inc
hlt
and
adc
outsl
std
out
hlt
stos
jne
inc
push
fsub
out
mov
add
mov
xor
inc
out
cmpsl
and
scas
adc
inc
test
ret
ficompl
sbb
push
add
imul
jno
pop
sub
inc
loopne
push
jnp
xor
repz
shlb
xchg
xor
lea
add
mov
cmp
xchg
adc
nop
mov
shr
add
pop
dec
add
add
mov
addr16
add
xor
aas
mov
jmp
inc
jns
jp
sub
inc
xor
dec
mov
add
push
js
sub
subl
sar
andb
scas
push
fisttpll
or
pop
or
lds
sahf
push
test
jle
push
jb
push
add
add
rcrb
jo
popf
mov
iret
dec
pusha
jb
cld
in
adc
or
test
mov
xchg
test
push
mov
mov
lock
jnp
xchg
jmp
cmp
jbe
lahf
push
das
loope
imul
mov
pop
push
ljmp
popa
pop
add
cmp
je
add
lret
repz
test
insl
sar
movsb
inc
pop
in
mov
mov
ret
scas
dec
add
add
arpl
dec
xchg
cld
nop
jno
jp
cmpsb
daa
sbb
inc
loope
xchg
cld
and
inc
js
adc
leave
add
add
xchg
cld
inc
and
rorb
xchg
popa
jo
xor
inc
pushf
cld
jns
add
sub
cld
sub
not
stos
or
mov
adc
mov
rcl
dec
cltd
cmp
or
mov
jp
mov
push
jmp
jg
lds
cld
mov
jl
inc
stos
cli
xor
pop
xor
jmp
inc
test
shrl
fsubs
int3
add
call
add
fstl
sbb
mov
mov
mov
or
xor
mov
sub
or
jl
sbb
aad
mov
mov
bound
jb
or
data16
orl
lds
add
orb
adc
out
es
fwait
sbb
and
lea
xor
sbb
pop
inc
and
ffreep
sbb
push
std
and
test
pop
cmp
fnstcw
hlt
inc
push
add
xchg
push
xor
adc
jmp
lahf
xor
imul
adc
fnclex
or
fs
push
jecxz
das
lods
add
in
add
add
mov
xor
orl
mov
jg
push
outsb
insl
xchg
mov
add
fdivp
pop
mov
xchg
jbe
or
mov
jnp
ss
movsb
adc
shlb
fbstp
xlat
xor
outsb
pop
rolb
pushf
fadds
jae
add
pop
loopne
push
push
xor
xchg
sub
adc
dec
pop
xor
or
xorb
xor
or
sub
test
dec
mov
and
add
and
push
les
shlb
nop
add
add
adc
fnsave
xor
out
subb
and
test
sub
mov
subl
orb
test
clc
jne
dec
test
or
test
or
and
mov
test
pop
loope
xor
call
sub
jae
pop
in
adc
inc
test
nop
pusha
xor
stos
mov
inc
and
hlt
imul
jecxz
es
add
adc
or
imul
fisubs
cmc
in
push
or
sbb
pop
sub
or
inc
std
xor
lods
and
jg
push
and
dec
fldcw
push
clc
sahf
pop
in
movsb
dec
inc
or
mov
push
std
add
or
or
sbb
add
out
jp
ret
call
cmp
jmp
push
xor
pop
je
imul
mov
lcall
jno
push
jecxz
jno
adc
imul
out
arpl
nop
mov
sbb
adc
out
sub
pushf
ljmp
mov
jb
fucomi
xor
rorb
les
pop
arpl
sub
adc
xchg
mov
xchg
or
faddl
in
shrb
loopne
repz
or
imul
or
clc
push
adc
sahf
push
movl
adc
cwtl
cwtl
xor
fstp
insl
int
cld
addr16
out
adc
adc
adc
adc
jne
cmp
mov
adc
push
or
insl
stos
mov
add
xchg
dec
inc
imul
dec
insl
xchg
adc
xchg
add
mov
inc
sbb
and
cmp
push
sbb
sub
repnz
into
xchg
push
add
faddl
stc
stc
fadds
pop
inc
inc
adc
or
jp
rcr
sbb
add
sbb
or
xchg
ret
lcall
mov
popf
dec
clc
ljmp
movsl
mov
xor
popf
clc
push
inc
sbb
or
or
sub
daa
inc
fadd
adc
add
shll
call
sub
jge
std
adc
mov
jl
add
mov
sub
test
dec
jp
pop
out
arpl
mov
dec
leave
fwait
and
arpl
or
push
jecxz
clc
xor
xchg
mov
jecxz
jle
enter
enter
mov
pop
dec
mov
or
pop
mov
push
call
mov
ljmp
in
dec
ret
std
mov
cld
les
mov
or
lds
add
mov
mov
mov
fcmovnbe
mov
or
inc
dec
dec
fcmovnu
std
aad
mov
pushf
scas
adc
sbb
mov
sbb
mov
dec
mov
ret
sub
push
out
rcrl
xchg
push
rclb
add
xor
push
repnz
and
cmp
daa
pusha
loope
push
rolb
leave
ret
lods
dec
add
xchg
xchg
or
mov
sahf
add
xor
add
fwait
ss
or
push
leave
and
inc
push
add
sbb
gs
lods
into
test
rclb
pusha
dec
fidivrl
xchg
add
aam
js
add
dec
cs
or
mov
fisubrs
nop
and
push
pop
pop
or
jp
mov
fwait
aaa
adc
loope
jle
fmuls
loopne
mov
inc
push
or
imul
sbb
iret
push
pop
dec
insb
aaa
scas
xor
inc
sub
movsb
or
in
sub
das
jmp
lock
test
nop
adc
fsub
outsb
dec
sbbb
push
add
xchg
ret
and
into
mov
icebp
call
sub
es
std
sub
icebp
dec
cld
dec
push
call
or
scas
int
sbb
pop
add
mov
dec
jb
pop
jne
mov
imul
sbb
fmuls
icebp
sbb
sbb
dec
xchg
loope
idiv
mov
testl
call
or
loope
ja
repz
push
cmp
sub
sarb
and
fwait
and
push
test
outsb
mov
adc
rcrb
test
jne
jmp
adc
shll
sbb
mov
mov
xchg
js
imul
cwtl
adc
sbb
and
sbb
dec
or
xor
mov
lds
and
in
xor
or
imul
aam
mov
add
push
cmp
xchg
jae
lds
jno
xchg
or
mov
in
inc
repz
or
and
sbb
out
jbe
in
xor
sub
out
sbb
xor
scas
push
mov
jl
sar
push
sub
lea
lret
adc
outsb
mov
cld
rolb
test
push
js
adc
add
pcmpeqd
out
push
jmp
into
xchg
js
jo
jl
pop
xchg
fmuls
sub
sti
add
cmp
and
insl
fcmovu
cltd
jp
std
or
lahf
cmpsl
sub
lock
or
dec
movsl
xor
hlt
packuswb
in
inc
pop
enter
in
adc
mov
imul
and
push
xchg
jns
and
fstpl
scas
mov
pop
add
inc
loopne
adc
loopne
fdivr
enter
stc
cmpsb
int3
sar
sub
push
dec
pop
sub
in
and
adc
mov
xchg
jns
arpl
mov
sub
sub
or
pop
addb
xor
xchg
in
inc
inc
fs
push
test
loope
jp
pop
aam
add
test
imul
cwtl
add
sub
imul
pop
lds
add
or
push
nop
and
cltd
push
or
adc
inc
mov
fmuls
mov
dec
loopne
sub
lahf
mov
lea
cld
sbb
jg
adc
cmp
inc
nop
idivb
xchg
xchg
cmp
and
sbb
scas
mov
cwtl
mov
xchg
aaa
ret
or
addr16
sbb
call
and
int
pop
outsl
push
sub
out
sbb
stos
pop
adc
aam
hlt
cmp
jge
ficoms
adc
and
cmp
push
or
mov
les
push
andnps
mov
pop
and
test
clc
or
cmp
cmp
aaa
mov
xor
adc
dec
lret
test
cs
xor
push
or
add
sub
xchg
dec
dec
fdivrl
dec
sbbl
and
adc
or
jne
pop
ret
js
adc
pusha
add
jp
or
and
divl
add
adc
and
add
pop
dec
xchg
js
mov
dec
mov
xlat
xorl
outsl
clc
xchg
fcoml
cli
jne
adc
xor
jne
sbb
movb
aas
or
cmp
into
test
push
mov
imul
or
dec
push
mov
ret
mov
dec
stc
push
lea
adc
gs
lea
scas
mov
push
pusha
adc
push
shll
mov
or
mov
pop
xor
and
and
dec
xchg
or
das
fldenv
or
push
test
xchg
inc
subb
jnp
daa
xor
lahf
add
pop
rclb
subl
mov
test
sbb
cmpl
popf
dec
out
popa
pop
inc
ficompl
inc
and
jae
push
js
push
jge
dec
and
and
icebp
lds
pushf
fs
out
jae
js
cs
stos
cmp
cmovs
scas
ljmp
cld
sub
jb
ds
push
add
sarb
mov
pop
loopne
std
add
and
out
movsl
xor
fnstcw
push
sbb
sub
sub
es
cmp
xchg
sbb
daa
sbb
loop
ja
mov
pop
add
mov
jg
lods
iret
arpl
mov
stos
fxch
arpl
mov
inc
sbb
rcrl
mov
and
pop
lret
shll
aam
outsl
push
das
lods
jno
or
add
jmp
push
mov
stos
inc
dec
notb
out
rol
inc
sbb
mov
les
movl
mov
call
and
icebp
fstpt
and
sti
rcrl
ret
cmp
mov
and
mov
jl
call
jecxz
add
sbbb
mov
mov
pop
pop
pop
decb
push
loopne
xor
repnz
adc
jnp
push
xchg
int
or
out
xchg
data16
inc
push
nop
fildl
cli
lcall
mov
sub
int3
fdivl
jns
mul
cld
idivl
pop
js
lret
mov
and
xchg
lahf
nop
sub
inc
test
mov
push
mov
scas
push
lods
clc
out
add
pop
jge
mov
xor
jno
adc
sub
outsb
insb
sahf
or
pop
mov
incl
mov
sbb
js
in
pushf
inc
and
lods
fiadds
std
insb
fidivrs
push
mov
push
call
mov
mov
mov
dec
or
pushf
sub
jle
rcrl
pop
aam
into
in
ljmp
sahf
les
aaa
push
pop
mov
fdivrs
out
xchg
out
rcll
dec
orl
mov
sub
mov
sbb
add
repz
add
mov
mov
adc
adc
fs
and
add
jne
dec
movsl
loopne
mov
ja
push
and
mov
out
sbb
daa
mov
repnz
lds
mov
test
cmp
je
out
scas
loopne
pop
mov
pushf
add
adc
mov
sub
mov
xor
jl
das
sbb
movsl
jmp
into
or
adc
xor
roll
sbb
sbb
jmp
sub
mov
loope
les
and
cmp
or
in
sub
lret
dec
lcall
pop
iret
les
lret
add
out
jbe
outsl
mov
mov
aam
push
movsb
cmp
xor
test
or
gs
adc
dec
lea
lock
dec
push
rclb
fildll
push
or
xor
aaa
or
or
roll
and
test
loopne
clc
dec
inc
jmp
push
mov
mov
sub
dec
incb
add
add
or
adc
jmp
adcb
sub
and
mov
fisttps
clc
aaa
ret
cmpl
ret
pop
sub
mov
popa
mov
mov
mov
xchg
mulps
sbb
dec
and
mov
in
adc
adc
mov
jecxz
rorl
jbe
mov
sub
lcall
loopne
call
mov
jbe
adc
sbb
inc
nop
lret
sarl
les
and
syscall
jne
sbb
add
cmp
out
std
lcall
insl
sarb
jge
jb
mov
out
cwtl
add
push
sbb
aas
cmovno
adc
ds
xorl
inc
cli
in
jl
xchg
jle
or
push
fadds
jmp
sbb
xor
arpl
pop
push
xchg
and
mov
test
out
adc
and
add
add
jmp
xchg
aaa
fwait
mov
sbb
mov
and
int
arpl
xchg
sbb
adc
add
ja
pusha
add
enter
adc
jp
ds
mov
push
jbe
xor
je
cmpsl
lds
jecxz
adc
or
popa
sub
pop
dec
push
xor
or
enter
jecxz
cli
jmp
add
rcrl
and
jecxz
add
fdivs
push
adc
ret
test
xchg
add
cmp
imul
enter
sub
jo
movb
jbe
adc
imul
dec
dec
pop
dec
jmp
jno
sbb
lds
aaa
sbb
lret
or
test
mov
sbb
repnz
lret
add
sahf
leave
sbb
pop
xor
jg
das
shr
repz
clc
fwait
mov
sbb
adc
sub
jle
leave
jg
jmp
pop
rcrl
jo
pop
jns
pushl
sbb
les
cmp
stos
xchg
sub
xchg
fcomi
outsb
icebp
adc
mov
std
mov
ret
add
mov
push
pop
add
mov
imul
sti
shrl
add
mov
sbb
rcrb
mov
add
les
xchg
mov
adc
sub
xor
push
je
les
cmpb
mov
test
or
xor
in
gs
data16
dec
inc
movsb
sbbb
jmp
sbb
insb
bound
fcomi
jmp
jg
jo
lret
les
cmp
ret
sub
out
aad
or
fcoml
jle
fs
and
cld
sbb
les
or
mov
cli
test
into
clc
imul
mov
scas
addb
sbb
psrlq
mov
jle
mov
movsl
xlat
or
xchg
sub
sahf
rorb
xchg
cmc
add
xchg
jle
sar
dec
jno
rcrb
outsb
fmull
je
pop
jge
push
and
xchg
push
ficoms
fcoml
sub
sbb
add
jg
mov
jbe
add
adcl
enter
ljmp
pop
and
sub
add
int
stos
movb
or
push
mov
push
mov
xor
test
arpl
ljmp
or
test
jg
pusha
shll
mov
rcl
add
dec
je
dec
aad
dec
sub
add
xchg
mov
fsts
xchg
add
xor
lea
fwait
cmc
inc
sbb
and
shll
ds
das
dec
adc
std
nop
inc
mov
rorl
and
push
cmc
cmp
mov
inc
daa
aad
sub
rcr
xchg
mov
in
and
cmp
call
jb
pop
mov
push
push
push
pop
pop
loope
push
or
scas
pop
orb
sbbl
bound
pop
insb
push
add
push
add
lods
das
imul
fsubl
ljmp
lret
dec
in
adc
insl
sub
call
adc
or
mov
sbb
or
jmp
inc
sbb
mov
mov
mov
adc
or
pop
push
inc
adc
pop
or
adc
daa
push
mov
add
and
cmp
orb
inc
dec
enter
pop
or
ja
bound
stos
dec
inc
inc
rcrl
sarl
xchg
movsl
fmulp
jle
insl
mov
xor
sub
inc
adc
aad
push
loop
jg
ret
dec
dec
lea
cld
ja
lock
call
and
test
sbb
inc
fisttpll
push
sbb
push
or
mov
fwait
jno
pop
or
push
sbb
adc
les
loopw
mov
cmp
fldt
dec
adc
in
stos
inc
xor
cmp
inc
mov
mov
mov
imul
xlat
call
and
xorl
add
fimuls
push
test
hlt
adcb
jae
loop
fistps
leave
xchg
cmp
and
repz
cmp
or
lds
push
popl
add
inc
in
xorb
push
push
xor
jb
pop
nop
jecxz
dec
fistl
mov
sub
lods
or
jo
movsb
in
and
lret
movsb
aaa
loope
stos
inc
mov
mov
out
jne
pop
mov
and
push
into
pop
sub
jge
inc
jge
test
cmp
pop
das
es
and
fsubl
icebp
jg
int
jmp
adc
xorb
nop
pop
or
push
adc
xchg
sub
or
rcrl
xor
sub
dec
cltd
fwait
std
call
lea
adc
insb
mov
xor
repz
xchg
push
jg
fstl
nop
clc
xchg
lahf
dec
xor
mov
lock
sbb
jmp
imul
outsb
adc
in
stos
test
aaa
mov
and
or
cs
adcl
add
jno
fbstp
jmp
popf
inc
xor
inc
imul
dec
scas
sahf
mov
sbb
ret
cmp
push
js
mov
shlb
lret
fld
push
in
mov
add
daa
pop
inc
jae
cmpsl
xchg
fiadds
jp
pop
adc
fisttpl
add
push
jge
fdivs
popf
aad
int
fistpl
scas
fiadds
add
in
xchg
cs
adc
mov
movntq
out
cmp
hlt
dec
or
cwtl
push
or
test
pop
rcll
add
push
xor
sub
test
mov
add
jecxz
dec
sbb
jg
aas
push
outsl
mov
xchg
cmpsl
aas
adc
jae
sbb
pop
lcall
xorl
lods
mov
shrl
in
sbb
inc
push
das
aas
fildll
add
mov
je
jo
xlat
clc
and
es
and
cld
pop
jp
sub
outsl
cli
mov
arpl
sub
cmp
in
add
cmpsl
lcall
add
jmp
xorb
sbb
fistps
movl
adc
test
fidivrl
cmp
add
mov
add
sub
cmp
andl
push
adc
pop
cmc
jo
rolb
xchg
ret
mov
daa
loopne
cmpsl
and
sub
mov
repnz
jae
mov
shlb
push
mov
or
aam
ficoms
out
imul
mov
adc
mov
outsl
xchg
add
dec
ret
sub
sub
adc
and
pop
in
cs
sbb
adc
addb
dec
pop
dec
cli
imul
shll
adc
movb
add
pshufw
mov
push
or
ficomps
add
iret
add
add
mov
imul
jg
push
cs
jp
mov
dec
adc
add
sbb
adc
aas
mov
xor
shrl
rclb
add
and
dec
das
mov
fadds
mov
xor
xor
cmpsb
or
sbb
push
insl
ret
sbb
in
push
imul
jle
xchg
add
cs
push
sbb
cld
lea
xchg
xchg
les
mov
push
lds
sub
push
daa
icebp
ret
mov
xchg
push
mov
adc
pop
jno
inc
enter
pop
xchg
insl
test
rcr
xor
lock
enter
bound
and
addr16
push
std
hlt
cltd
inc
in
pop
sbb
adc
aam
arpl
add
sbb
dec
ret
scas
push
adc
ljmp
jnp
loopne
xchg
cld
daa
imul
push
in
sbb
fiaddl
int3
xor
push
imul
jl
pop
or
xlat
stos
push
add
test
cmp
xchg
lret
sub
mov
aam
push
push
es
or
xchg
ret
push
mov
xchg
and
movsl
sahf
andl
pop
shll
fs
cmpsl
shll
test
add
mov
add
dec
cmp
mov
dec
les
sbb
mov
leave
loopne
xchg
scas
mov
mov
add
dec
push
es
or
dec
ljmp
adc
testb
aam
in
dec
les
js
dec
xlat
adc
je
enter
ffree
and
mov
sub
shll
dec
push
out
add
sbb
mov
jno
imul
inc
movsl
sub
insb
sub
sbb
fnstenv
les
les
divl
xchg
orl
inc
mov
and
or
jno
adc
sbb
test
mov
lods
adc
xchg
pop
or
add
divl
xor
loope
cmp
inc
push
scas
rcll
sub
inc
mov
jl
mov
xor
mov
mov
test
cwtl
ljmp
xchg
mov
mov
sub
les
jmp
or
cmpsb
mov
mov
jge
movsb
loopne
ss
add
cmpl
cli
fcomps
push
or
push
test
sbb
add
jge
cld
add
mov
vpmaddwd
push
shlb
add
das
loopne
ficomps
test
mov
add
sahf
add
jnp
adc
pusha
inc
sarb
repnz
inc
fidivl
push
mov
test
xchg
add
sbb
or
rcrb
inc
xor
rcrb
mov
sub
mov
dec
inc
and
pop
sbb
push
icebp
push
or
and
mov
cltd
xchg
pop
add
cmpb
jecxz
imul
xchg
push
out
dec
fwait
sbbl
ja
or
mov
jl
das
mov
mov
push
mull
nop
pusha
loopne
push
and
mov
sbb
or
and
dec
pop
fimull
lock
pop
inc
ret
lret
sarb
xchg
aas
inc
jo
sbb
rolb
dec
loopne
hlt
icebp
pop
jecxz
shlb
add
jmp
icebp
mov
or
jmp
dec
sbb
sub
dec
and
mov
cltd
lea
mov
push
sbb
jo
push
ret
push
es
lods
xlat
adc
and
inc
cli
clc
aad
pushf
inc
pop
icebp
test
ret
jmp
pop
mov
sti
adc
cmpsb
xlat
cmp
pxor
xor
hlt
inc
add
sbb
sub
es
out
rcrl
or
push
movsl
or
data16
xchg
xchg
pop
cwtl
aam
loop
mov
test
insb
filds
and
push
loopne
scas
adc
and
mov
lcall
lret
push
dec
or
loop
mov
adc
inc
loope
dec
and
inc
rol
mov
cmc
sub
or
ret
cltd
mov
pop
nop
addl
mov
cmpsl
into
movb
sub
call
jne
ret
and
mov
rclb
je
add
xchg
les
popa
cmp
mov
inc
sbb
scas
and
mov
inc
int
mov
fiadds
cmpsl
in
add
dec
fwait
add
push
aad
aad
scas
or
add
mov
mov
outsw
loope
mov
pop
mov
rcl
add
inc
imul
ss
cmp
jno
fsubr
ror
add
adc
popf
xor
dec
sub
pop
mov
xlat
mov
out
add
pop
jle
pop
ret
and
or
sbb
and
insl
jb
insl
loopne
push
push
cwtl
sti
add
or
mov
scas
or
inc
inc
adc
iret
pop
sbb
in
xor
pop
and
mov
or
cmp
pop
xor
cld
or
test
ljmp
in
sti
push
aas
xchg
sub
lahf
adc
or
loope
fsubrs
out
dec
aad
ja
mov
or
adc
sbb
sbb
int
dec
prefetch
pop
sub
in
xchg
arpl
mov
add
xchg
and
nop
add
fidivrl
add
aaa
and
je
or
loope
adc
jnp
leave
js
add
dec
or
sbb
test
mov
pusha
jb
dec
add
xlat
test
testl
shlb
nop
push
xchg
adc
aam
cld
movsl
mov
test
orb
dec
call
xor
mov
and
incl
xor
jmp
ljmp
and
pop
push
dec
lcall
lods
cwtl
testb
stos
roll
mov
or
jbe
or
roll
dec
and
add
add
push
or
and
mov
clc
xchg
push
data16
or
addl
movsb
rcll
lret
sbb
push
aam
mov
fcoms
push
into
jecxz
fildll
inc
dec
ss
lahf
leave
jmp
aaa
jp
fisubl
xchg
pop
in
xchg
add
and
inc
mov
jmp
aas
push
pop
shrb
inc
mov
unpcklps
pushf
sub
push
outsl
adc
sbb
outsb
pop
mov
dec
js
in
call
add
and
mov
adc
jmp
rclb
and
cmp
rclb
mov
data16
or
push
ror
cld
ficoms
rorl
xor
xlat
push
inc
adc
dec
or
push
jmp
or
call
pop
fstps
dec
inc
jbe
and
out
xor
add
add
jle
imul
addb
xadd
push
or
popa
lea
push
adc
add
inc
or
aas
std
or
int3
sbb
mov
or
daa
mov
pop
mov
ja
xchg
xchg
mov
fildl
test
out
inc
sbb
shlb
push
add
insb
mov
shrb
dec
iret
popf
mov
pop
daa
jecxz
les
sbb
jb
test
push
push
jne
dec
or
scas
gs
movl
popl
push
jbe
and
xchg
dec
mov
pop
push
pop
add
inc
ret
sbb
scas
imul
add
inc
push
xor
sub
addl
enter
xor
dec
mov
sub
dec
and
fidivs
push
sbb
pushf
push
scas
lods
push
push
sbb
or
popl
push
ja
lcall
aaa
addr16
mov
in
les
add
sbb
stos
or
les
mov
xorl
aam
pop
or
test
pushf
fimuls
or
lock
les
dec
daa
jo
movsb
xchg
adc
xor
xor
loope
jecxz
mov
scas
sbb
scas
add
jns
fwait
les
jp
and
rcr
push
or
xor
inc
int3
and
pop
push
adc
shl
jne
push
daa
fadds
mov
ljmp
lds
cmp
add
push
sti
cs
nop
add
mov
jb
jns
int3
aaa
jge
mov
loope
jmp
adc
inc
outsb
jg
dec
mov
sbb
aas
pop
add
or
mov
nop
cmp
ret
mov
pop
and
sbb
lea
xchg
inc
inc
sbb
leave
imul
stos
mov
adc
jmp
add
nop
jp
add
iret
orb
jno
sub
fildll
fdivs
mov
cltd
in
add
adc
rcll
sbb
dec
adc
pop
cmp
xor
in
addl
fcomps
add
add
sbb
lods
stos
addr16
fstpt
test
loopne
lea
sub
inc
jge
test
scas
out
mov
loopne
mov
ret
mov
add
adc
dec
mov
cmpb
adc
xchg
loop
fmuls
push
scas
pop
sub
and
or
ret
jnp
arpl
cs
or
and
int
test
lret
cmp
jb
dec
add
into
fwait
dec
and
clc
inc
mov
pop
ljmp
xor
in
call
rcr
inc
fwait
sbb
jbe
xchg
repz
shll
sarl
sbb
jp
xchg
fadd
out
rolb
and
movsb
dec
push
mov
ds
mov
lods
fwait
inc
dec
orb
imul
out
ss
mov
stos
mov
sahf
clc
add
adc
je
push
xlat
clc
add
xor
xchg
cmp
test
nop
icebp
daa
xchg
sbb
clc
shrb
fcmovbe
cmp
inc
addr16
shlb
mov
pop
jbe
sub
arpl
repnz
js
push
dec
call
mov
xchg
add
test
or
sarb
mov
pop
or
insb
jl
inc
loopne,pn
mov
or
lods
mov
call
lock
or
and
xchg
outsb
sbb
ret
add
popf
rcll
mov
add
cmp
into
mov
cltd
lea
out
and
or
jg
dec
push
call
movsl
sbb
js
xlat
xchg
mov
push
les
loope
int
xor
adc
mov
cmp
push
mov
aam
or
inc
and
dec
jecxz
add
sub
dec
out
dec
xlat
push
stos
sbb
movsl
jle
icebp
inc
mov
pop
add
and
dec
pop
incb
xchg
test
lcall
je
dec
addr16
fyl2x
imul
shlb
pop
add
inc
pop
mov
mov
ljmp
aas
xchg
jno
push
push
xor
ljmp
xor
inc
mov
sub
jne
xchg
arpl
lock
xor
stos
movsl
xchg
addl
mov
jno
or
sti
in
cmp
inc
cmp
jo
lods
daa
inc
push
mov
mov
push
test
or
mov
push
add
mov
pusha
in
jl
mov
adcb
push
and
in
add
dec
dec
pop
mov
push
xchg
pop
pop
cmp
or
cwtl
ret
add
mov
lret
lcall
in
stos
out
pop
inc
sbb
push
std
cs
or
mov
lock
scas
xchg
xor
sbb
es
jmp
mov
fs
or
jmp
cltd
jo
cmp
jno
mov
push
hlt
pop
das
aam
movsb
arpl
cmpsl
jg
cmp
nopl
imul
shlb
dec
aas
mov
cmpsb
xor
inc
pop
fwait
gs
lods
roll
sub
jbe
xorps
and
lea
xor
push
dec
xor
cwtl
imul
loope
sub
adc
push
mov
lock
cmp
sbb
daa
jb
rsqrtps
mov
push
mov
cli
push
pusha
dec
inc
mov
inc
pop
lahf
repnz
inc
or
jne
inc
outsl
xchg
add
jecxz
sbb
stc
lea
std
xor
fwait
push
mov
inc
pop
jmp
sbb
add
push
add
sub
in
lret
call
out
out
xlat
subl
jge
nop
cmc
icebp
das
add
or
testl
test
lea
arpl
sbb
push
fsubrl
inc
add
or
and
test
cmp
mov
and
mov
add
add
dec
ret
dec
lret
or
into
xchg
inc
sbb
es
push
sbb
inc
outsl
stos
imul
inc
mov
jo
test
push
adc
adc
mov
sbb
add
stos
test
aam
dec
rep
lds
mov
sbb
add
add
popaw
inc
test
test
das
test
mov
movsl
or
jo
and
lock
inc
orl
stc
test
aam
xor
jl
or
add
dec
adc
loop
aaa
bound
popf
mov
xlat
cmp
hlt
jg
dec
shrb
and
call
std
xor
outsl
and
sub
jo
fwait
adc
mov
clc
xchg
inc
sbb
or
icebp
inc
and
mov
clc
das
cmc
push
outsl
iret
dec
mov
call
in
jl
push
mov
aam
cmovge
cli
inc
dec
jl
sub
popa
rcr
add
jno
ljmp
mov
ljmp
mov
jmp
mov
add
movsb
shr
pushf
test
andl
cli
bnd
add
fsubrs
sbb
rcll
and
jg
add
shl
jns
push
pop
jb
xor
lock
adc
or
mov
sbb
xchg
add
or
jle
movl
mov
sti
aas
clc
fsubs
loope
xor
test
shlb
in
xor
push
and
pushf
ja
mov
add
std
mov
or
notl
push
rolb
sbb
push
adc
pop
rcll
icebp
mov
pinsrw
mov
xchg
add
lcall
popa
movsl
enter
xor
xchg
mov
push
or
dec
pop
int
pushf
lea
cmpsb
lret
add
pop
add
xor
dec
dec
outsl
fcmovnu
jp
dec
xchg
jmp
dec
pop
enter
in
movsb
mov
push
adc
xchg
xor
sub
add
lret
xchg
push
jp
or
icebp
mov
test
mov
xor
jns
arpl
mov
and
fildl
les
or
sbbb
adcb
lods
jmp
sbbl
loop
sahf
js
adc
xchg
add
or
cmp
add
sbb
imul
pop
xor
pop
dec
or
jmp
sarl
add
sub
daa
cmp
jne
and
add
push
add
mov
lock
dec
and
leave
roll
outsl
push
cmp
incl
arpl
aad
lods
lcall
add
test
adc
jp
pop
lods
add
sbb
pop
andl
fcomps
aas
mov
fisttps
adc
sbbl
aaa
nop
adc
add
jl
push
je
je
faddl
mov
jp
mov
outsb
ret
mov
add
dec
or
sbb
dec
inc
adc
add
loope
jo
nop
inc
and
shll
clc
loope
add
push
shlb
cmp
pop
daa
inc
imul
inc
out
andb
jecxz
mov
iret
xor
in
mov
aas
sbb
in
jl
xor
sbb
dec
out
movsb
pop
jmp
sbb
mov
sbb
adcl
sub
repnz
test
shlb
les
adc
adc
in
inc
push
push
push
add
xchg
pop
inc
aad
add
mov
fsubs
jg
cld
cwtl
add
pop
rolb
addb
adc
jae
gs
mov
xchg
cmc
inc
add
and
add
scas
jns
popa
in
sub
push
sub
data16
push
insb
in
and
int3
xor
pop
and
mov
aam
test
sbb
sub
dec
adc
hlt
pop
clc
push
adc
ljmp
pop
or
push
dec
rorl
pop
ret
pop
mov
std
mov
xchg
test
or
rcrb
cmp
outsl
in
xor
jmp
mov
repz
fcmove
push
push
lods
aas
roll
and
ss
dec
mov
push
lock
mov
cli
test
push
addb
mov
mov
adc
leave
cmp
incl
and
adc
cld
jae
inc
nop
add
mov
push
ret
shrl
push
or
pop
pop
dec
popa
test
cmp
sar
arpl
jbe
clc
imul
nop
or
push
pop
add
test
int
movsl
push
adc
adc
xor
add
push
sbb
cmpsb
inc
cltd
and
out
clc
cs
lcall
test
dec
fsub
sub
sbbb
scas
cmp
icebp
sub
or
in
xchg
sub
addb
aas
addr16
mov
mov
test
cmpb
test
les
in
hlt
adc
sbb
sahf
lahf
ljmp
mov
push
aad
add
ret
jns
cmpsl
cltd
and
cmp
or
mov
jmp
es
pop
or
in
inc
mov
add
fsubrp
or
lahf
imul
adc
nop
rorb
shll
adc
movsb
pop
stos
in
push
loopne
xor
loop
scas
test
dec
xor
movsl
jns
rorb
sub
jo
cmp
dec
sub
mov
xlat
pop
das
daa
icebp
sbb
and
call
push
fiadds
jno
daa
mov
xor
or
pop
jmp
ret
rcrb
xchg
aaa
es
cmc
jp
push
pop
iret
and
sbb
or
cltd
and
adc
sarb
dec
pushf
jmp
pcmpeqb
push
and
js
cld
sub
mov
decb
inc
mov
mov
out
in
stos
test
add
add
add
psrld
and
cmp
add
out
out
add
xchg
out
add
out
aaa
decl
mov
add
inc
add
mov
adc
lret
cmpsb
add
sbb
adc
or
adc
pop
sub
fmul
cmp
add
sbb
push
or
jle
call
lahf
ds
push
dec
or
push
sub
adc
push
xlat
xchg
xchg
dec
movsl
stos
in
or
jns
sub
enter
jnp
dec
movsl
xor
dec
mov
mov
sbb
cmpsl
or
sbb
pop
int
lret
fwait
lods
inc
add
cmp
jae
orb
dec
imul
mov
roll
add
xor
add
add
add
ret
adc
subl
insl
pop
adc
cmp
ljmp
out
icebp
push
push
mov
jb
push
jmp
loop
shl
inc
cld
push
ret
add
shll
fistl
outsl
cwtl
xchg
mov
dec
xchg
in
cmp
outsl
push
dec
add
in
push
lock
sahf
xchg
jp
add
jbe
or
pushl
add
pop
outsb
or
cmpsb
add
movsb
aas
xchg
enter
outsl
sar
call
ljmp
stos
adc
mov
dec
xor
bound
loopne
iret
dec
mov
inc
inc
inc
sub
mov
mov
in
lcall
or
pop
mov
xchg
pop
pushw
lret
popa
and
lock
negb
mov
test
or
pop
pop
sbb
mov
lcall
add
sub
xchg
out
sub
and
inc
test
and
cmp
xchg
jg
popf
inc
sbb
push
mov
add
test
arpl
daa
push
loope
and
inc
js
ljmp
push
test
icebp
xchg
pop
mov
and
rorb
std
dec
fwait
jg
test
inc
out
push
sub
std
in
cld
int3
mov
mov
dec
add
loopne
loope
loope
call
or
pop
mov
sub
ret
adc
add
mov
add
cmpb
sbb
push
and
xor
xchg
inc
movsb
repz
call
lahf
jae
xchg
xor
in
jg
enter
xchg
add
std
mov
xchg
sbb
ljmp
fstpt
pop
mov
or
addr16
lds
mov
rcll
push
decl
dec
pop
add
push
mov
loop
mov
je
or
bound
mov
inc
lock
js
inc
fists
push
je
and
mov
inc
push
pop
popa
add
aas
out
rcll
stc
shlb
xchg
and
mov
dec
dec
xchg
jo
mov
xchg
jle
das
clc
test
add
push
out
lret
sbb
xor
mov
pavgw
mov
cltd
add
inc
insb
faddl
cwtl
les
scas
dec
in
jae
insl
jg
pop
aad
and
test
push
add
ja
and
lahf
pop
jae
sub
cmp
jo
mov
add
aas
jge
cmp
add
mov
mov
out
in
call
or
xor
xor
mov
push
xchg
idivb
stos
movsb
push
and
pushf
lret
lods
pop
lock
or
inc
testb
jl
pop
je
mov
lahf
jbe
inc
test
or
sbb
decl
lcall
mov
add
cld
xchg
xor
push
incl
ds
stos
hlt
xor
pop
cmpb
cmp
out
jbe
push
add
pop
lock
fisttps
out
inc
xchg
xor
inc
xlat
pop
and
shlb
mov
cld
fcoms
loop
and
xchg
hlt
pop
scas
add
push
rcrl
pop
jne
jge
popf
mov
pop
and
push
cltd
pusha
decl
cmp
add
xchg
cmpsb
sbb
pusha
mov
push
xor
test
jg
and
mov
lcall
es
int3
sub
push
cld
popa
ret
push
and
insb
xchg
dec
pop
or
or
int3
push
mov
adc
aam
nop
mov
inc
popa
mov
inc
nop
xlat
xchg
adc
jg
jmp
adc
lods
nop
clc
sub
aas
rclb
and
pushf
and
pop
dec
sarb
out
scas
cmp
pop
ret
push
incl
pop
dec
push
and
adc
mov
push
inc
inc
inc
sbb
pusha
movntps
sub
adc
in
mov
std
pop
cmc
sbb
xchg
add
add
xchg
clc
sarl
es
pop
pusha
movsb
inc
push
ret
sub
fwait
aam
mov
decl
jg
or
fisubs
cmp
in
cs
push
mov
fsubl
decl
mov
jns
jbe
mov
push
pavgb
testb
jo
shlb
jae
cld
test
adc
outsb
inc
es
push
cmpsb
int3
call
data16
add
sbb
adcl
xchg
cwtl
cld
xchg
dec
mov
mov
icebp
pop
adc
ds
or
movsb
pop
mov
dec
scas
in
test
xorl
ljmp
and
mov
cld
sbb
add
bound
ficoml
cmpsb
stc
fcomip
notb
xchg
or
inc
sub
jge
dec
lcall
mov
cmp
insl
xor
push
loopne
js
sub
mov
and
lcall
mov
test
stc
jl
jle
adc
pop
loopne
lcall
adc
popl
jge
mov
lcall
cmp
out
and
sub
in
loop
mov
insb
and
adc
cld
pop
fcoml
nop
xchg
lea
push
incl
popa
dec
jecxz
inc
lret
xchg
inc
pushf
dec
das
jl
cld
xorb
push
adc
movsl
pop
sbb
fdivp
cmc
cmp
in
fs
outsb
pop
adc
or
fwait
sbb
jno
add
and
leave
jp
clc
sbb
pop
popa
rcll
repnz
and
outsl
lcall
cmp
jo
add
cmpsb
inc
mov
jb
ds
mov
mull
or
out
movl
mul
aas
loope
sti
bound
mov
cmp
adc
adc
sbb
es
add
push
push
in
push
mov
sub
ja
aaa
fbld
test
sbb
pop
inc
mov
jmp
das
or
shll
mov
mov
dec
add
pusha
fs
inc
or
sbbb
cmp
fcomip
clc
mov
jns
sub
and
fisubs
add
add
add
mov
and
ljmp
jg
xchg
cwtl
cmc
add
daa
int
sub
imul
cld
aas
ret
xchg
and
insb
js
dec
pop
test
xchg
xor
and
pop
in
outsb
adc
push
nop
imulb
pop
push
aaa
and
test
js
addl
std
aad
test
push
jmp
int3
mov
mov
je
lea
inc
push
push
add
hlt
cmp
lcall
jl
push
push
ret
insl
inc
mov
mov
cmp
pop
shll
outsb
xchg
decl
cld
dec
in
inc
or
cmpsl
add
cld
out
lea
sar
in
shrb
lods
ss
adc
into
aam
into
das
adc
addl
cmp
fmuls
inc
lea
js
pop
cmp
stc
push
push
sub
adc
xchg
fistl
stc
negb
sar
cmp
aas
add
add
pop
sbb
test
fcmovb
sub
mov
mov
subl
int3
sarb
loop
sarb
xchg
fwait
mov
or
clc
pop
xchg
jmp
sbb
or
int
inc
mov
xchg
jnp
adc
repz
insl
add
mov
xchg
repz
ds
or
push
add
pop
or
pop
fsubrs
jl
mov
test
sarb
imul
cmp
or
sbb
fwait
js
mov
cmp
sub
stc
adc
jle
add
pushf
add
call
sti
mov
fmull
cmp
push
test
ficoms
add
hlt
inc
mov
and
sahf
inc
mov
std
or
xor
adc
pop
mov
push
dec
into
jnp
sub
cmp
add
pushf
pop
jb
outsb
clc
out
push
fs
fldenv
into
aad
add
sbb
pop
jb
push
ret
adc
js
jnp
test
int
cmp
add
jge
cmp
in
imul
mov
xchg
enter
fimull
adc
or
pop
xchg
aam
shlb
sbb
movsl
add
cs
imul
inc
push
sub
and
jecxz
mov
and
push
test
push
mov
or
fistpl
imul
cmp
sahf
shll
in
adc
or
dec
arpl
inc
mov
popf
jmp
icebp
loope
sbb
lods
inc
sub
hlt
mov
sbb
mov
cmp
jle
rol
push
push
xchg
mov
rclb
push
add
rorb
sub
adc
inc
shr
mov
add
pop
test
push
push
mov
jg
jo
aam
scas
jno
xor
lock
mov
jge
or
sub
sbb
loop
decb
adc
xchg
jo
hlt
jns
add
pop
and
sbb
ret
adc
or
jle
add
jg
lds
add
ret
scas
cmp
mov
or
mov
pop
add
add
test
imul
loope
add
scas
or
pop
iret
add
ljmp
push
scas
inc
test
lcall
hlt
add
add
addb
adc
pushl
inc
add
cs
jge
fldt
inc
or
mov
add
iret
aas
inc
push
mov
loopne
dec
ror
out
jmp
bound
jg
cmpb
shrl
adc
rolb
add
aaa
add
std
jmp
jge
out
add
nop
jmp
push
int3
daa
push
xchg
ljmp
out
add
pushl
push
xor
lds
arpl
pop
call
pop
cmpsl
jge
scas
loop
jg
inc
and
jnp
jns
call
cmp
adc
add
push
jmp
clc
mov
xor
repz
jg
aaa
ficoml
shrl
lds
outsl
xor
aam
std
scas
loopne
dec
pop
mov
push
push
push
push
adc
mov
fadds
push
xchg
pop
je
std
enter
movsb
subl
add
add
cmp
rcrb
push
test
call
in
push
inc
xor
jp
push
sbb
mov
pusha
das
sub
out
add
lcall
adc
mov
pop
jp
add
adc
cld
lcall
adc
mov
gs
or
inc
pop
inc
dec
pop
pop
lods
push
test
or
xor
clc
xchg
or
xchg
and
test
call
mov
push
cmpsl
cmp
jmp
shll
lcall
or
pop
into
ljmp
pop
or
jbe
mov
push
mov
rorl
sbb
ds
xor
fnstsw
pushf
push
mov
stos
call
pop
or
jmp
daa
into
lret
shrl
jp
add
push
loopne
clc
call
in
das
mov
lods
lds
cmp
test
pop
jne
mov
push
inc
jmp
cs
test
fxch
mov
or
cmc
inc
xchg
dec
in
shrl
xor
add
push
ja
sbb
nop
hlt
mov
mov
scas
into
test
jg
test
xchg
and
cmpsl
ret
jae
jecxz
or
call
bound
push
pushl
cmpsl
cmp
ss
cwtl
sbb
sbb
sti
add
scas
mov
std
adc
dec
and
dec
les
shl
dec
aaa
std
out
adc
pop
inc
adc
jge
or
mov
scas
ss
jg
pop
mov
xlat
rol
cwtl
or
test
cmpsl
mov
pushf
mov
sbb
pop
sub
fimull
mov
push
shl
jne
fildll
mov
mov
int
imul
in
std
mov
or
adc
pop
popf
frstor
scas
ja
mov
rolb
aaa
inc
adc
pushl
jmp
pushf
aas
push
sbb
mov
nop
addr16
inc
sub
rcrb
inc
lret
mov
clc
push
jg
xor
orl
push
jmp
jg
scas
call
cwtl
das
into
xchg
sub
ficompl
pop
cld
fldt
lock
rcll
xchg
ret
add
push
and
aad
nop
jg
std
push
and
push
loopne
push
aad
js
stc
sub
loope
cmp
add
loopne
cmpl
xorl
repz
sbb
orl
pop
mov
ds
push
push
fadds
ja
ret
pusha
icebp
test
inc
xlat
add
mov
and
xchg
repz
fildll
test
gs
popa
inc
adc
iret
xor
rorl
add
push
fisubrl
imul
jp
adc
loope
outsb
out
inc
scas
mov
sar
cmpsl
outsl
ret
xor
xor
ljmp
imul
mov
add
lds
or
bound
je
mov
sub
andb
js
cmpsb
jbe
incl
repz
add
lahf
jmp
ja
adc
cmp
cli
cwtl
and
lea
stc
ja
sub
adcl
xor
cmp
decl
jg
adc
push
sub
jmp
mov
xor
xor
adc
jmp
push
fisubl
lcall
incl
xchg
sub
jb
add
nop
jo
adc
pushl
sbb
stos
push
dec
dec
cs
jnp
stos
dec
je
add
out
les
mov
push
insl
fwait
lock
cmp
push
xor
xchg
or
fwait
mov
daa
inc
jae
clc
insb
add
sub
jb,pn
xchg
mov
into
repz
add
or
scas
mov
or
lods
push
icebp
aas
mov
cs
fsubrs
addb
add
pushl
push
jl
mov
or
mov
scas
cmp
push
ja
rcrl
imul
sbb
into
insb
xor
cld
into
or
pop
rcll
repz
clc
popa
sub
push
repz
iret
addl
mov
mov
cmp
pop
adc
arpl
pop
outsl
lahf
pop
pop
inc
cld
ds
add
push
push
xor
aad
pop
or
call
in
lret
shr
lahf
cmpb
mov
pop
add
cmpsl
out
jnp
and
mov
fidivl
mov
fistl
rcrl
sub
je
pushf
cmp
and
mov
mov
xor
shr
sbb
test
push
mov
push
and
lods
cmp
rcl
repnz
ljmp
movl
cmp
subb
jae
jae
sbb
sbb
mov
test
pop
xchg
xchg
dec
jne
dec
mov
outsl
scas
pop
pushf
aam
fdivl
inc
and
adc
int3
cmp
jecxz
stc
add
fsubrs
clc
nop
mov
add
adc
div
outsl
clc
idiv
fwait
pop
xchg
xchg
push
xor
adc
sub
push
jo
sbb
ud0
add
inc
inc
shl
aas
or
inc
pusha
push
inc
inc
jns
into
out
repz
mov
rcrb
mov
add
sbb
aaa
or
inc
mov
push
insb
cli
pop
stos
and
push
cmp
mov
in
mov
loopne
aas
xchg
inc
mov
cld
pushl
call
pop
lock
add
jno
in
imul
pop
cmp
insb
sub
xorl
mov
sub
jl
sbb
ffree
ljmp
dec
add
sbb
adc
cmpsl
jg
out
cltd
mov
loopne
inc
xor
jg
xorb
pop
cld
nop
fnstenv
ljmp
mov
ljmp
outsl
insl
leave
adc
das
stc
inc
daa
xchg
in
sbb
mov
add
add
sbb
or
xor
or
jo
xor
pop
cmp
das
mov
jno
jno
subb
pop
cmc
jmp
jbe
jmp
mov
bound
aam
fbld
test
xor
popa
test
xor
cmc
loop
mov
in
jno
dec
scas
mov
mov
pusha
rol
add
mov
cmc
push
cmp
push
dec
inc
loope
rcll
sbb
cmc
add
outsl
push
movb
mov
adcb
add
mov
push
push
cmp
popa
hlt
addr16
lret
fsts
js
inc
sub
sarl
mov
stc
aaa
jne
scas
push
lahf
push
fbstp
xchg
ljmp
add
add
adc
adc
inc
cmp
push
cmpb
xor
ja
das
dec
dec
cmp
test
rcrl
outsl
hlt
mov
inc
push
jge
out
sub
call
ljmp
pop
scas
jb
xchg
mov
bound
cmp
pop
aas
dec
cwtl
add
pusha
xchg
rorb
sbb
jmp
mov
mov
mov
add
ljmp
ja
rcll
test
outsl
popa
push
jg
adc
mov
divl
mov
dec
into
fnsave
fs
and
hlt
lcall
lock
lock
sbb
ret
lock
test
gs
sbb
inc
cmpsl
pop
and
dec
rol
xor
mov
adc
adcl
and
enter
in
sahf
dec
es
and
sbb
add
xor
fstpt
jb
decl
xchg
pop
push
aas
adc
add
into
bound
pop
mov
lods
pop
dec
xchg
or
push
xorb
cli
loope
mov
lcall
sti
dec
add
daa
jge
dec
negl
lcall
decl
cli
dec
ja
push
dec
adcb
ret
mov
fnstcw
or
xor
ret
dec
lods
add
sbbb
xor
aas
jle
stc
test
jns
xchg
add
push
popa
out
imul
push
sub
add
rolb
xchg
cmp
orb
ljmp
roll
add
negb
or
mov
lock
adc
dec
push
jecxz
jecxz
add
cmp
loopne
mov
mov
sbb
fiadds
loope
out
test
jo
out
cld
push
cltd
push
mov
rorl
std
dec
add
in
mov
shr
xorb
add
scas
ret
push
cmpsb
xor
int
pop
mov
test
movsb
jl
xchg
pushf
fstpl
xchg
sar
dec
xchg
add
incl
insb
imul
push
data16
push
jle
xchg
insb
mov
pop
icebp
push
fidivrs
sbb
insl
js
xchg
or
movl
sub
cmp
inc
jp
repnz
lea
mov
dec
inc
mov
push
sub
arpl
xlat
push
and
mov
fisubrs
mov
push
jb
mov
jae
pop
xchg
dec
lds
sub
sti
adc
popf
fidivs
add
sbb
nop
dec
inc
sbb
pop
jno
lcall
shrb
cs
dec
scas
jnp
gs
sbb
test
andb
cld
incl
out
loop
inc
ret
and
mov
out
mov
and
dec
pushl
mov
add
scas
pusha
xor
xchg
jae
icebp
cmp
mov
mov
stc
into
jmp
fwait
or
jmp
dec
sbb
loop
and
cmp
mov
iret
stos
push
and
add
fldt
loopne
call
and
add
insl
shl
jecxz
stc
pop
mov
call
mov
push
cmpsb
pushf
rol
sub
inc
fsub
or
pusha
and
aas
mov
push
cld
jg
gs
dec
jns
aam
leave
add
push
xchg
mov
add
jp
shll
mov
insl
mov
insl
adcl
cmp
jle
fnstenv
pop
lahf
hlt
jge
add
inc
into
inc
add
cmc
outsl
push
popa
sub
adc
insb
jb
nop
fcomip
decl
push
aad
shrb
movsb
fsts
mov
dec
xor
jmp
ret
jnp
bsf
and
imul
aad
ret
adc
mov
in
cmpsl
sub
test
je
push
xor
inc
aaa
or
stos
xor
inc
inc
and
push
outsb
popf
jns
mov
and
jo
dec
sbb
fldt
int
pop
inc
cmc
aam
push
jae
int
rcrb
enter
pop
mov
xor
mov
ret
mov
aas
cmp
testl
test
fucomp
push
mov
cs
in
orb
or
cwtl
movsb
mov
or
loop
sub
jge
add
cwtl
cld
ret
push
jp
and
add
dec
jb
mov
add
outsl
sbb
or
sbb
adc
add
aam
dec
push
leave
cmp
jg
sub
mov
xchg
or
fsts
lret
pusha
push
icebp
cmpsb
push
mov
out
mov
bound
pop
pushf
add
adc
sub
or
fldenv
inc
std
insl
add
aas
add
cs
mov
add
cmp
add
push
in
shlb
pop
push
xor
or
out
push
into
adc
mov
xchg
arpl
xor
sub
arpl
std
mov
cmpl
or
nop
pop
add
or
or
sarb
jge
dec
xor
mov
jno
push
outsl
nop
mov
xor
inc
mov
or
mov
fidivrl
and
loope
adc
mov
test
push
sub
mov
scas
xor
jg
in
int
cltd
and
pop
popa
jecxz
insb
cli
xchg
sbb
ret
lcall
or
lods
inc
cmp
shlb
cld
mov
jp
mov
ficompl
mov
xor
and
fisubrs
sbbb
scas
sbb
pop
jmp
and
xor
es
stos
lods
xlat
jmp
lret
inc
das
in
ja
sub
push
add
jg
add
mov
cmp
sbb
mov
mov
lods
adc
mov
fsub
call
outsb
insl
decl
ror
xlat
call
add
in
and
aas
std
dec
iret
outsb
mov
mov
std
outsb
add
jno
test
sbb
loopne
push
pop
flds
test
or
les
test
clc
mov
lods
sub
inc
lea
repnz
xchg
test
in
jb
sub
mov
mov
clc
add
or
xchg
lcall
adc
idiv
decl
sub
mov
pop
inc
dec
pop
dec
negw
sbb
call
clc
push
stos
sbb
imul
sbb
enter
movsb
adc
ja
mov
add
fs
add
push
pusha
jbe
decl
in
aad
lahf
das
add
add
add
imul
addr16
mov
push
testl
enter
adc
mov
jae
jg
xor
cmp
shl
insb
rclb
mov
mov
xchg
sar
mov
and
clc
mov
imul
jbe
add
out
or
jg
hlt
jg
add
mov
and
loop
or
nop
sbb
call
mov
rol
rorb
outsl
scas
arpl
jnp
and
stc
xor
addr16
fists
lea
fucom
cwtl
adc
cmp
sbb
cmp
ret
cmp
loope
in
or
enter
add
jp
mov
push
sbb
sub
pusha
mov
cmpsb
mov
xor
cmp
es
jp
pop
outsb
mov
pop
xchg
add
orl
call
rcrb
fildll
in
dec
sub
mov
imul
xor
adc
jnp
cwtl
add
jl
xor
mov
cmp
es
adc
cld
dec
data16
inc
cld
imul
sub
fidivl
push
pusha
jl
xchg
cmpsb
or
pop
loop
cmp
sbb
ret
stc
pop
xchg
mov
lahf
decl
data16
rol
add
out
out
aas
mov
push
mov
sub
das
clc
xchg
mov
mov
jg
js
pop
loopne
mov
enter
xchg
mov
std
ljmp
jns
hlt
insb
add
push
sbb
or
jno
icebp
outsl
mov
mov
outsl
mov
inc
sahf
jmp
loopne
jp
push
pop
inc
mov
adc
and
inc
subb
scas
push
mov
lods
int3
adc
pop
push
sbb
decb
push
mov
xchg
loop
mov
ss
xor
adc
cmp
xchg
aas
adc
sbb
xchg
je
mov
loop
cmc
push
enter
movsl
repnz
int3
add
push
fstpt
repz
aas
inc
lods
add
jo
mov
ret
mov
mov
idivl
push
test
pop
mov
cltd
data16
cmp
cli
idiv
lcall
dec
test
jns
pusha
and
mov
sub
rcl
inc
jmp
add
fbld
jge
outsl
icebp
xchg
sbb
inc
cld
cmp
mov
add
pop
cmp
xor
ret
ret
mov
sbb
sub
cmpsb
call
cmp
add
stc
pop
cmc
aas
mov
cld
dec
xorl
jle
xchg
jae
pop
popa
cli
mov
shl
pop
mov
xor
xor
pop
xchg
js
jo
into
sub
movsb
mov
incl
xchg
cmp
xlat
pushl
movsb
xchg
and
rcr
cs
mov
popa
stc
sub
sub
mov
fistpll
je
cmp
outsl
inc
xor
sub
xchg
ds
ljmp
lea
mov
add
inc
sub
incl
incl
ljmp
popf
and
loope
scas
xor
xchg
incb
xchg
dec
dec
outsl
fsubrs
outsb
popa
cmp
dec
aas
push
out
mov
mov
cs
pop
dec
xchg
jbe
push
and
and
mov
insb
or
jmp
scas
mov
mov
mov
jp
cmp
or
ret
jne
mov
outsl
xchg
mov
sub
sub
or
pop
jge
adc
cmp
dec
or
lods
sbb
add
jo
cld
daa
mov
lcall
cmp
ss
sbb
cmp
xchg
cmp
mov
clc
aaa
out
cli
loope
inc
out
lock
xchg
sbb
imul
shll
incl
push
sbb
faddl
roll
dec
sbb
mov
adc
cmp
in
negb
pop
and
stos
xchg
negl
jno
rcl
adc
lret
or
add
test
lfs
mov
or
push
mov
test
insb
data16
sub
outsb
jmp
and
sbb
addr16
push
out
and
ljmp
clc
push
dec
mov
ljmp
push
dec
xor
sbb
cmpsl
fwait
adc
dec
incl
pop
cli
add
or
and
in
pop
testl
clc
dec
mov
data16
mov
mov
xor
add
dec
stc
dec
pop
jp
mov
xchg
hlt
add
in
ret
out
imul
xor
mov
push
popa
add
ljmp
jbe
xchg
fnsave
ret
pushf
mov
mov
sbb
imul
push
popa
or
adc
jnp
cld
cmp
push
add
pusha
push
sbb
loopne
sub
repz
or
xor
stc
je
lods
je
outsl
ret
mov
jb
lock
sbb
mov
out
bound
cld
pop
xor
add
xchg
loope
std
movsb
cltd
add
sbb
lock
jg
pop
js
sub
add
adc
jnp
jle
decl
bound
nop
or
pop
mov
fistl
jo
pop
rcrb
cmp
jmp
mov
mov
xor
ret
add
ficoml
lds
fistpll
or
aad
add
push
pop
test
mov
add
leave
and
add
cli
lret
insb
add
test
mov
ret
ljmp
nop
loop
int3
or
pop
and
ret
mov
stos
adc
xchg
push
sub
rcr
test
mov
into
addr16
push
and
or
lcall
aam
jle
lret
add
imul
aaa
cmp
jg
xbegin
iret
sbb
out
and
push
mov
sub
filds
nop
or
push
inc
add
clc
cld
insb
sbb
add
out
js
test
pop
aas
jg
jp
push
roll
mov
test
pop
adc
add
inc
jbe
sti
or
stos
loop
mov
mov
js
push
mov
add
mov
insl
or
xchg
in
pop
xchg
pop
or
out
push
adc
adc
mov
out
cmc
lock
sbb
icebp
mov
dec
movsl
shlb
sub
loopne
dec
pop
push
daa
lock
cmpsb
arpl
or
ja
mov
test
mov
sub
fnstenv
stos
cmp
mov
inc
push
movaps
and
jo
inc
push
test
call
push
es
iret
and
loopne
cmp
sbb
mov
pop
les
shl
and
fcomp
push
pusha
mov
pop
add
ss
scas
test
add
ret
dec
data16
call
fidivrs
std
lds
imul
mov
jle
clc
incl
or
mov
inc
leave
xchg
sub
es
mov
pushf
xor
gs
aam
test
in
jns
loop
addr16
adc
xor
add
icebp
adc
sbb
inc
sbb
stc
lret
add
sbb
jb
js
scas
lcall
jecxz
popa
mov
pop
test
jmp
jmp
lds
fs
push
lea
adc
mov
adc
nop
data16
repz
jo
sbb
mov
andb
lock
pop
jmp
shr
outsb
xchg
addr16
add
xchg
pop
ljmp
mov
icebp
and
bound
in
sbb
jnp
push
xchg
xorb
inc
cltd
shlb
aaa
cld
out
es
out
repnz
cmp
pushf
cmp
cli
out
sahf
gs
test
fstpl
adc
sub
mov
repnz
stos
dec
cmp
dec
mov
ret
pop
rcr
mov
cmp
jg
outsl
rcrl
cmp
shll
push
lods
mov
out
fsubp
mov
mov
decl
pop
push
pop
bound
sbb
ret
test
mov
aas
test
loopne
int
sub
inc
jo
test
mov
enter
rcll
dec
add
sub
out
fmuls
out
mov
into
or
shlb
push
data16
push
mov
out
and
jge
add
or
jmp
movsb
dec
inc
push
xor
insl
mov
data16
xor
orl
pop
inc
sbb
adc
mov
sbb
fisttps
sbb
sbb
sbb
inc
xchg
arpl
dec
roll
imulb
ret
sbb
js
jge
in
in
jns
xchg
lea
pop
ja
fcmovnbe
sub
push
sbb
nop
push
cltd
imul
add
ljmp
mov
push
and
adc
stos
nop
das
inc
and
test
pop
cld
in
sub
adc
rcrb
dec
inc
dec
pop
xor
push
rcll
sub
dec
cld
add
push
mov
pusha
cmp
sub
sub
jmp
insl
mov
call
xor
std
push
icebp
sub
push
out
pop
sub
jbe
cltd
and
sub
sub
jecxz
cld
push
js
sub
movsl
add
fisttpl
fsub
cltd
fbstp
push
cli
xchg
or
bound
push
and
decl
inc
cmp
mov
or
mov
icebp
shll
popf
punpcklwd
incl
cs
xor
dec
mov
jl
inc
mov
movsb
xchg
lcall
arpl
fsubs
mov
ret
or
fwait
push
or
outsb
repz
call
mov
cmpsl
inc
scas
xlat
add
fs
jo
andb
add
daa
scas
mov
inc
xchg
inc
cmp
jno
stos
data16
dec
lret
jecxz
cmp
sub
ret
movsl
decl
iret
pushf
test
add
je
push
add
sbb
xor
jbe
test
add
mov
xchg
fs
repnz
jmp
mov
adc
pop
scas
popa
and
movsl
ja
or
data16
arpl
data16
adc
movsb
push
clc
push
add
mov
mov
mov
push
jl
xchg
mov
test
mov
xchg
aas
lcall
lock
fs
push
and
out
push
inc
mov
mov
addb
pop
dec
daa
dec
jp
dec
cmpsb
cmpsb
pushf
clc
inc
je
jo
int
hlt
push
pop
cmp
sbb
negl
add
jne
or
add
sbb
test
inc
int
dec
sbb
pop
lock
imul
pop
std
cmpb
push
sub
jmp
inc
lahf
adc
pop
add
cmpsl
jge
stos
mov
cld
loope
pop
mov
pusha
inc
mov
ljmp
pop
in
add
and
dec
or
and
cwtl
fmuls
push
in
insl
push
incl
xor
or
sti
and
inc
sub
shll
pop
sbb
or
xchg
mov
push
mov
filds
movl
adc
es
xor
das
cli
fucomip
push
add
mov
or
in
test
push
sub
fs
cmp
rclb
add
std
ljmp
rol
divb
scas
xchg
out
out
or
aad
and
mov
and
xlat
scas
fwait
jmp
rorb
pushl
xchg
pop
rcrb
movsb
push
xor
popa
or
add
add
inc
jb
pusha
pusha
push
jns
notb
ljmp
bound
int
xchg
test
push
add
add
je
je
push
and
mov
mov
loope
push
mov
push
pop
push
mov
js
decl
mov
push
and
test
cmpsb
rcr
xchg
and
movsb
mov
and
jg
ss
mov
mov
sbbl
push
xchg
sub
pop
and
fwait
cmpsl
add
pop
cmp
mov
and
pop
lds
shr
adc
mov
sub
add
loop
jg
jno
dec
in
lcall
jo
push
and
test
cmp
mov
shlb
insb
lret
fistpll
or
add
ret
or
rolb
dec
mov
add
or
push
mov
push
icebp
pop
xchg
jbe
cmpsl
mov
cmp
sub
jmp
sub
sbb
xchg
decl
cld
out
sarl
stc
adc
lods
das
dec
mov
lea
test
mov
lcall
test
add
push
sbbb
add
adc
add
push
loope
add
movsl
mov
sbb
hlt
add
inc
inc
ret
sbb
lds
mov
cli
incl
jnp
dec
push
cli
dec
jp
xchg
popa
cmp
jg
pusha
add
push
push
lret
out
decl
cli
out
add
or
and
fxtract
dec
add
pushl
mov
in
lods
js
fldl
and
inc
in
test
jns
jnp
movzbl
daa
mov
arpl
push
sub
sub
and
bound
fisttps
nop
or
and
cmpl
fsubs
adc
cmp
cwtl
je
sub
fistpll
cmp
data16
ret
insl
dec
cmp
or
jmp
cli
fcomps
pushl
mov
or
in
int3
cli
dec
sahf
iret
push
lock
cmp
and
pushf
test
repz
notl
mov
and
lods
push
mov
pushf
mov
cmpsb
inc
insb
stos
movsb
inc
and
dec
sub
add
pop
movups
xchg
popa
xor
pop
and
adc
pushl
call
loopne
dec
popa
lret
mov
sbb
outsl
decl
add
fimull
mov
add
lret
mov
mov
sub
jnp
push
loop
decb
inc
mov
nop
icebp
sub
lcall
and
aad
ret
and
pop
sbb
decl
and
sbbl
loop
sub
mov
mov
and
ljmp
dec
push
test
jbe
es
movb
scas
add
push
loop
adc
pop
lods
and
mov
xchg
in
ret
dec
andb
hlt
out
clc
xchg
mov
mov
call
ret
test
jo
das
sar
adc
daa
enter
outsb
aam
cmp
fdivr
add
loop
inc
push
incl
or
inc
setp
dec
cmpsl
dec
jge
xchg
add
xor
xlat
inc
jecxz
push
decl
cmpb
xchg
pop
push
fs
test
xchg
adc
cwtl
add
test
fs
mov
ret
stos
pop
aaa
lea
or
mov
push
lds
loop
pushl
push
push
add
pop
aad
out
add
mov
dec
or
jnp
icebp
and
jnp
jecxz
popf
in
inc
mov
pop
aaa
or
adcl
lret
dec
and
push
push
dec
inc
ret
pop
add
cmp
sbb
divb
mov
inc
in
mov
or
into
lock
push
popf
cmc
popa
or
or
scas
adc
mov
fadds
aas
sbb
repnz
stos
mov
pop
je
cld
lods
loop
cld
lcall
inc
cs
call
pop
xor
lods
fildll
mov
or
mov
popf
jp
call
sbb
push
outsl
scas
rol
add
jge
stos
mov
adcl
cwtl
mov
xor
sbb
inc
mov
sbb
test
add
cltd
mov
mov
cltd
push
jnp
fbstp
add
pusha
lahf
jae
js
push
jl
rol
aaa
cmp
jb
mov
lds
xchg
ja
dec
cmc
push
cltd
dec
cwtl
or
mov
pusha
xchg
lcall
call
xorb
movsb
ja
dec
nop
xchg
mov
hlt
fisubs
jno
insl
mov
outsl
clc
cmc
jmp
sub
add
mov
sub
gs
jne
clc
inc
sub
push
jmp
xor
testl
sbb
cmpsb
adc
aad
gs
add
loopne
clc
lods
leave
sub
jno
adc
andl
dec
int3
aad
inc
mov
add
jnp
mov
and
loope
pop
sbb
cld
mov
decb
or
mov
sub
stos
fldl
pop
in
imul
outsb
std
inc
aaa
lret
aaa
xchg
and
gs
mov
rclb
daa
add
sbb
push
inc
mov
mov
stc
daa
mov
mov
sbb
js
ror
sub
cmp
int3
ja
popa
xlat
cltd
icebp
mov
adc
outsb
jbe
xchg
jecxz
dec
push
push
mov
and
sub
cmp
ljmp
fdivrs
pop
repz
add
jmp
popa
imul
js
jmp
loope
and
push
bound
inc
aad
cmp
adc
add
inc
movsb
pop
popf
popf
add
lock
add
adcl
addr16
xor
incb
or
sar
sar
lea
cli
add
push
outsb
mov
jae
popa
adc
hlt
ds
pushl
out
mov
inc
jbe
sub
jg
sub
daa
test
and
mov
add
pop
pop
decl
ja
pop
test
sahf
push
mov
push
pop
aas
pop
adc
add
mov
mov
cli
lret
inc
add
mov
inc
popa
adc
push
sahf
xor
cmp
pop
cmc
fists
pop
adc
movsl
sbb
hlt
arpl
add
and
test
aaa
mov
or
xchg
add
arpl
fildl
pop
inc
mov
sbb
push
iret
aad
dec
mov
push
insb
popa
insb
xchg
sbb
adc
cmp
sub
aaa
cld
andl
add
int
jp
push
insl
jbe
mov
jle
adc
adc
cmp
dec
dec
cwtl
cmp
add
es
pushl
call
mov
inc
insl
adc
dec
mov
inc
add
sub
mov
pop
je
sub
aas
and
outsb
mov
add
mov
or
dec
mov
jecxz
lock
das
mov
icebp
add
push
cwtl
xchg
stos
cmp
and
push
or
loopne
sbb
push
adc
add
insb
shlb
js,pn
inc
sub
jp
jl
sbb
nop
jb
test
mov
jg
ja
decb
nop
cmp
xor
rclb
out
lods
or
mov
cld
arpl
cltd
pushf
pushf
shrl
inc
add
scas
das
pop
test
bound
xor
je
movsb
inc
sub
mov
xor
repz
cmp
fildll
lds
or
rcl
repz
xlat
fsubrs
cli
push
sbb
and
or
cmp
push
add
popa
ja
jle
lcall
add
push
mov
add
cmpsl
in
movsb
mov
loope
fistps
aam
and
clc
mov
xchg
add
cmp
mov
jl
and
lea
stos
cmpsl
inc
push
lcall
rcrl
cmp
cmp
push
fstpl
hlt
js
sbb
xlat
das
adc
jle
xor
mov
adc
xchg
lock
lods
add
fsubs
xor
xchg
mov
ljmp
lcall
inc
inc
shr
movsb
add
mov
pop
cmc
pushf
lea
sub
and
roll
aad
dec
xor
nop
cmp
xor
xchg
sub
test
es
xor
ficompl
and
inc
std
pop
push
mov
pop
lea
jle
ret
in
js
jle
sbb
test
fcompl
mov
clc
in
ljmp
push
into
iret
add
je
subl
push
sbb
dec
and
and
daa
fwait
add
and
in
mov
test
lods
mov
xchg
xchg
inc
inc
loop
jb
fildll
sahf
loop
scas
clc
pop
cld
dec
xor
or
xor
popf
cs
pop
cmc
xchg
lcall
loopne
ljmp
sbb
ror
xorl
test
adc
rcll
stc
and
clc
pop
ret
cmp
add
push
sub
add
push
push
jo
jle
sbb
or
cmc
or
sahf
aas
in
sbb
mov
mov
sbb
inc
mov
cmp
sahf
mov
sahf
pop
fists
cld
jbe
mov
lahf
pop
add
insb
fs
sub
xchg
cs
xor
cld
xor
cmpsb
es
pop
xchg
xor
jbe
aam
sbb
ficoml
and
repnz
xor
xor
insb
xchg
push
int3
cltd
decl
bound
mov
jle
xlat
pusha
inc
daa
sub
jmp
das
jb
push
or
das
cld
pusha
add
loopne
cs
mov
mov
lods
call
icebp
mov
mov
outsl
mov
add
jge
cmp
cwtl
shrl
in
call
cmp
mov
sbb
or
xlat
sub
movsb
aaa
lcall
lcall
add
pop
dec
add
cs
clc
ja
pop
dec
dec
or
push
jo
aaa
mov
addr16
or
and
out
lock
jge
xchg
mov
adcb
pushf
cmp
xor
add
sub
pop
add
inc
push
jecxz
loopne
and
in
das
jbe
incb
pushf
xlat
push
insl
insb
idiv
sti
xchg
ficompl
movsl
clc
pusha
loope
das
clc
incl
add
out
push
inc
jl
push
fistps
jbe
scas
repnz
mov
pop
rcr
sbb
push
and
pop
add
jb
inc
lods
dec
icebp
mov
cmp
inc
aas
insl
adc
push
or
lds
cmp
mov
repnz
adc
mov
in
out
stos
clc
in
ret
es
or
je
mov
ret
mov
in
adc
pusha
fsubl
aaa
mov
sub
xchg
dec
cmp
shlb
mov
fwait
sbb
cmp
or
out
out
fwait
sbb
test
mov
push
je
test
out
ss
sub
cmc
push
loopne
loope
arpl
cmpb
lock
sbb
sbbl
add
sub
rcrb
xlat
dec
mov
pusha
cmpsl
es
mov
cmp
jg
lods
jbe
push
lock
imul
cld
clc
sub
aam
dec
lcall
mov
push
sub
and
int3
mov
orl
loopne
ret
jg
xlat
mov
std
aad
cmp
cmp
sbb
pop
xchg
sbb
and
push
inc
push
sbb
call
add
sub
std
sub
outsb
xor
dec
mov
movsb
mov
push
xor
adc
ljmp
xlat
in
sbb
add
fwait
mov
sub
push
ret
push
cs
sub
mov
add
add
mov
and
lcall
ljmp
pusha
stos
insl
sti
or
cld
lods
bound
loopne
das
out
clc
clc
add
out
call
cli
dec
mov
jo
push
jo
inc
mov
ret
mov
stos
or
xor
xchg
pushf
mov
jb
mov
inc
mov
push
call
loopne
nop
sbb
shr
inc
mov
ret
rorl
ja
push
inc
jae
lcall
subl
cmpsb
ret
mov
out
lcall
cmpsl
dec
clc
and
pop
stos
fsts
je
cld
push
pop
sti
pop
pop
movsb
mov
sbb
jle
mov
sti
push
outsb
cwtl
stos
sbbb
mov
mov
mov
add
push
mov
fldl
scas
push
sbb
test
mov
mov
ja
inc
push
rorl
push
das
xor
mov
shr
adc
shrb
mov
addb
lcall
pop
xchg
leave
lcall
cmp
add
test
cld
cmp
out
xor
pop
shrb
mov
and
scas
clc
pop
mov
push
add
outsl
or
adc
aam
bound
xchg
push
pop
pop
loope
test
pushf
loope
aaa
jo
js
loopne
fdivrl
stos
pop
xchg
inc
pop
and
dec
or
pop
pop
add
jge
out
push
sbb
fimull
pop
mov
add
xor
mov
xor
mov
lret
mov
and
call
push
out
jge
testb
pusha
popa
sahf
js
add
or
test
mov
xor
nop
js
pusha
jo
ds
arpl
cmp
pop
jg
jle
mov
or
shrl
call
orl
mov
dec
cmc
jbe
cld
notl
popf
jnp
test
sub
fwait
ljmp
aas
pop
in
dec
ret
cmp
movsl
fisubs
dec
popa
sbb
push
decl
test
punpcklwd
into
push
and
stc
xor
push
fisttpl
mov
sbb
sbb
sub
add
je
inc
ss
xchg
add
sbb
ret
sub
push
pusha
push
inc
test
jg
xor
loopne
test
std
xchg
sub
incl
push
sahf
hlt
aad
jb
add
adc
cmp
pop
fprem
push
nop
xor
cmpsl
in
jns
std
jle
mov
cli
incl
sub
xlat
cmpsl
cmp
inc
insb
lods
xchg
gs
outsb
pop
pushf
or
pop
out
incl
xor
mov
lock
inc
mov
jb
outsl
and
sbb
fdivrp
into
into
xchg
dec
xchg
test
xor
xor
stos
cli
jg
dec
mov
xchg
sbb
aam
sub
push
and
cmp
dec
push
pop
add
leave
xor
mov
lret
scas
mov
icebp
dec
fcmovb
incl
icebp
mov
sbb
mov
dec
inc
push
in
jb
adc
mov
ss
dec
adc
jge
stos
inc
add
test
aas
or
aas
mov
scas
adc
add
out
push
nop
push
pop
mov
add
in
imul
sbb
or
add
push
pop
hlt
xchg
add
push
pop
cld
ret
xchg
mov
ss
imul
lcall
loopne
daa
jno
pop
ds
cli
xor
js
inc
cmp
mov
imul
mov
mov
icebp
mov
mov
hlt
lahf
sahf
stos
mov
mov
test
sbb
cmp
lock
mov
or
add
cmc
outsl
jns
xor
int
in
pop
orl
dec
scas
xchg
mov
add
pop
sub
loop
std
dec
or
inc
aaa
pop
push
mov
adc
daa
lahf
add
jbe
loopne
icebp
xlat
sti
inc
xlat
jmp
outsl
cmp
inc
in
mov
fsubrl
shr
push
out
orb
clc
xchg
in
xchg
sbb
push
add
or
imul
inc
adc
fsub
outsl
or
pop
pushf
or
test
sarb
mov
pop
adc
push
xchg
push
iret
cmp
push
ss
cmp
pusha
filds
cmp
insb
lcall
ret
lret
jne
jns
outsb
pxor
rdtsc
out
jmp
jo
jne
decl
cmp
ljmp
incl
xor
inc
and
movsl
das
out
xchg
repnz
add
repz
cmpsb
lods
out
pop
subb
ja
enter
call
jmp
cmpsb
cld
pushf
xor
and
push
mov
cmp
lret
pusha
sbb
jb
push
hlt
imul
lock
xchg
lahf
lahf
pop
adc
and
push
mov
pop
push
shll
fstpl
jg
jl
inc
mov
add
popa
sti
push
adcb
out
xor
xchg
imul
pop
or
popa
pop
cld
sbb
repnz
push
je
xchg
pop
mov
lods
rolb
call
xchg
out
cmp
clc
xorl
add
cwtl
icebp
xchg
mov
or
jle
mov
pop
pushf
clc
out
iret
and
je
or
fmuls
mov
pop
or
jg
push
mov
pop
add
jp
enter
jmp
ljmp
rol
and
xchg
and
push
adc
push
inc
dec
lds
add
jg
pop
std
cmp
mov
int3
fsubs
or
jns
in
push
jg
or
inc
jp
int3
xchg
pop
xchg
xchg
pop
hlt
scas
jl
pop
dec
nop
in
aad
xor
popa
jg
incb
push
lods
pop
push
adc
lods
cmc
roll
and
cmp
mov
shrl
pop
inc
rcl
jmp
mov
add
xchg
incb
pop
andb
xor
add
mov
std
lods
inc
stos
mov
shrl
cmp
aas
cs
das
jle
les
ror
addr16
outsb
lcall
pop
lock
and
or
je
les
xchg
xchg
mov
test
jecxz
test
adc
xchg
cmpsl
negb
fisttps
and
cmpsb
pop
xchg
cltd
xor
and
adc
xchg
andb
stc
add
xor
aaa
jg
pop
mov
pop
add
cmp
add
sub
sub
mov
jo
xchg
mov
and
add
les
in
in
outsl
js
mov
loope
ret
push
addl
lcall
imul
mov
sbb
push
fdiv
out
in
pop
xor
and
pop
andb
stc
sets
arpl
ljmp
mov
jmp
addr16
xchg
inc
test
mov
loopne
stos
cmp
sbbb
add
and
sbb
scas
nop
xor
scas
imul
outsl
pop
or
add
add
push
jo
dec
icebp
add
xor
cmp
shll
outsl
fisubs
add
or
jg
fstpl
sub
test
insl
xchg
jno
inc
add
popa
add
cltd
mov
push
cmpsb
out
mov
and
mov
mov
add
dec
and
cmp
add
push
fdivrl
fdivs
je
fldl
mov
cmp
and
xchg
pop
std
inc
loop
xor
xchg
cmp
mov
mov
fld
les
lret
sub
movb
or
out
xor
add
mov
cmp
push
pop
xchg
inc
jl
xchg
les
xchg
cmpb
or
ret
pop
in
push
je
inc
and
mov
ficoml
sbb
push
lahf
decb
xchg
push
pop
stos
cltd
push
add
sub
mov
jmp
adc
mov
add
sub
jge
in
call
jl
cmpsl
fldl
mov
in
adc
sbb
cmp
pop
adc
cmpsl
mov
loopne
sub
fistps
and
mov
fdivp
mov
dec
push
sar
mov
adc
daa
mov
pop
jp
jecxz
loop
jge
push
and
adc
and
cld
call
test
sbb
decl
mov
jbe
in
dec
jbe
pusha
sbb
jg
lcall
xor
mov
add
xor
outsb
adc
sahf
out
cmpsb
mov
lcall
ds
scas
add
mov
push
icebp
sbb
orb
push
add
jnp
inc
rolb
bound
adc
loop
aas
fsubrs
pop
test
shrb
mov
or
cmc
out
out
mov
mov
test
nop
fs
pop
aad
pop
clc
pop
adc
jo
mov
xchg
inc
mov
mov
pop
mov
int
fcoms
xor
xor
stos
lods
fsubrs
add
clc
push
fwait
push
mov
fs
loopne
inc
repz
in
mov
mov
push
sbb
add
push
mov
cs
inc
mov
or
int3
andl
add
xor
inc
xlat
mov
jl
ja
aas
out
adc
add
inc
jecxz
dec
into
add
loop
inc
add
xchg
fwait
dec
add
call
mov
dec
xor
hlt
mov
pop
mov
xchg
lahf
cmp
push
std
mov
ss
inc
arpl
not
std
out
and
jecxz
shlb
xchg
jge
jns
mov
imul
sub
cmp
outsl
and
sarl
xor
loope
xor
cmpsl
iret
xor
loope
xor
out
lods
je
mov
std
mov
mov
pop
lahf
xchg
sub
inc
or
inc
adc
or
xchg
decb
mov
sbb
fbstp
aas
add
cli
ljmp
call
pop
sbb
rep
push
cld
pushl
cmp
das
xchg
ds
lods
cmc
add
xor
inc
incl
mov
les
sub
aaa
mov
add
scas
push
fxch
push
jle
test
js
push
fildl
add
paddd
cmp
push
loopne
in
stc
inc
pop
popf
fimuls
stc
or
jo
es
pop
mov
loopne
mov
sbb
or
mov
aam
call
cmpl
mov
add
daa
dec
scas
adc
out
arpl
ret
lcall
add
fisubs
and
xchg
les
adc
sbb
xchg
cmp
arpl
lcall
mov
lods
push
push
dec
push
or
push
xor
mov
mov
jmp
mov
data16
dec
mov
xor
imul
invd
jg
pop
lcall
sub
ret
add
mov
or
loopne
adc
inc
in
das
cli
incl
sbb
jae
ss
sbb
test
jg
fbld
in
mov
pop
and
adc
icebp
xor
add
scas
xor
out
xor
stc
jnp
mov
pop
jg
mov
jae,pt
ret
pop
popa
ss
xor
adc
xor
cmc
imull
aas
add
xchg
das
lret
adc
jg
addb
movsl
lcall
adc
lcall
and
fdivs
sbb
cmp
push
mov
cld
lcall
int3
cltd
and
js
xor
dec
push
mov
and
lret
leave
xor
cmp
mov
jmp
add
push
xor
shlb
mov
scas
jp
into
cli
or
inc
lds
pop
or
sbb
or
lds
loopne
shrb
and
ljmp
add
cmp
xor
into
orl
int3
in
iret
insl
pushf
inc
fistpll
mov
adc
test
xchg
fs
lret
sbb
add
sub
adc
xor
sbb
out
rorb
movsb
outsl
lcall
mov
adc
fldl
cwtl
push
or
mov
push
aad
das
clc
mov
push
sar
mov
jmp
sbb
dec
hlt
inc
mov
or
add
test
fistl
cmp
sti
or
sub
cltd
test
pop
xchg
jb
iret
or
inc
test
fiadds
pop
loopne
jle
lods
jecxz
push
or
or
dec
mov
adc
jnp
sub
cmpsb
lcall
cmp
ror
mov
imul
xchg
test
sub
insb
divl
dec
xor
mov
adc
mov
inc
test
and
scas
push
push
jp
out
mov
push
pop
jmp
push
loope
cld
add
ss
icebp
or
daa
aad
nop
loop
add
mov
cld
dec
cmp
rcr
cmp
call
jp
insb
lock
pop
or
add
mov
dec
inc
xor
push
inc
add
inc
js
cmp
fs
fs
hlt
push
jg
popl
jnp
add
jp
cmpsl
mov
jb
lcall
add
sti
out
jno
data16
incl
out
xchg
rol
test
fcomp
mov
add
subb
shlb
push
xlat
das
add
test
xor
add
shr
lds
loopne
lret
push
xor
pop
stos
pop
pop
scas
subb
sub
cmp
push
movsb
and
mov
jbe
pop
mov
test
push
or
repnz
dec
fs
add
out
js
and
hlt
push
fs
out
out
in
ret
pop
add
sbb
test
mov
adc
jecxz
imul
push
fldcw
repnz
loop
mov
add
addr16
xchg
sub
arpl
arpl
aam
cmp
push
scas
cmp
fcoml
iret
xorb
cli
dec
and
test
push
sub
jl
pusha
mov
mov
call
mov
jmp
mov
dec
loopne
push
pop
cmp
cmp
jb
insb
int
popa
psubd
jne
or
push
xchg
jo
sbb
aam
ja
add
push
rolb
add
fisttpl
push
lcall
inc
jg
sub
insb
mov
popa
iret
aad
ror
test
adc
mov
cmp
jp
jp
mov
pop
imul
movsb
pop
mov
lret
insl
adc
push
ret
jo
arpl
cltd
mov
fucom
out
es
decl
dec
mov
inc
sub
cltd
add
xchg
mov
mov
sub
ljmp
int3
dec
addl
mov
fisttps
adc
aam
add
fwait
add
lods
inc
and
add
mov
pop
decl
arpl
cmp
pop
mov
mov
out
add
sbb
pusha
dec
mov
leave
cmpsl
add
insl
mov
je
add
add
rcl
loopne
iret
pop
insb
adc
or
add
push
insb
fidivrs
data16
lahf
insb
mov
push
xor
mov
adc
xchg
inc
in
xchg
cmpsb
xlat
int3
inc
mov
add
lret
movsb
sub
xchg
std
add
int3
fidivrl
jns
loop
jmp
jnp
mov
shlb
and
movsb
mov
mov
sub
sub
mov
cld
add
clc
sbb
movsl
mov
lds
push
xchg
fdivrp
int
loope
mov
cmp
loope
xor
in
mov
in
add
das
jl
inc
lcall
xchg
inc
mov
add
decb
lret
cmp
int3
sbb
xor
add
or
adc
push
cmp
bnd
sub
jmp
test
jnp
call
loope
popa
les
and
push
mov
int
and
sbb
mov
hlt
call
dec
push
mov
sbb
cmp
xchg
lods
xchg
xchg
pop
xor
jg
insl
dec
jo
cld
daa
add
mov
int3
and
adc
add
xor
lods
add
pop
and
adc
add
jecxz
out
mov
pop
jge
js
inc
hlt
mov
pop
sub
mov
dec
icebp
mov
or
push
xchg
ja
inc
inc
jp
dec
insl
lods
std
sub
cmp
add
mov
xor
add
imul
lcall
mov
mov
dec
fwait
xchg
add
aas
sub
je
inc
out
test
lahf
cld
jg
jecxz
jmp
adc
sub
jp
dec
lock
std
aaa
push
pop
push
xchg
jne
add
inc
and
mov
xchg
pop
hlt
outsl
sbb
add
sbb
lret
sbb
add
mov
insb
pop
pop
jmp
and
xchg
xchg
jb
push
fcomip
add
xor
std
sbb
dec
aaa
adc
xor
xchg
adcl
ljmp
dec
pop
shl
sarb
xor
test
mov
cltd
int3
lock
sti
ljmp
mov
sub
mov
jg
shl
lock
xchg
std
or
mov
jecxz
jbe
sar
cmp
sub
inc
push
cwtl
mov
xchg
fiaddl
imul
xchg
add
in
incl
ret
shlb
pop
cltd
push
pop
popa
push
fdivs
ja
sahf
aaa
cwtl
incb
roll
xor
push
sbb
addb
mov
ljmp
cs
aaa
testb
push
sub
sub
stc
mov
cmpsb
and
out
fdiv
jg
mov
jo
loopne
adc
push
add
adc
insl
aaa
loopne
insl
ss
jo
clc
push
jp
outsl
mov
sub
xchg
mov
xchg
repnz
pop
inc
sbb
and
dec
call
mov
test
mov
ret
inc
shl
lcall
jge
orb
and
iret
add
or
pop
push
fistpll
add
ds
stc
test
inc
fst
decl
push
add
insb
mov
add
lcall
inc
lret
pop
nop
adc
cwtl
mov
outsb
fs
fldt
test
icebp
add
mov
cmp
std
mov
fldt
adc
sbb
nop
push
call
xchg
notb
aad
jmp
xchg
fsubs
stc
movsl
xor
pop
adcl
add
dec
push
dec
sti
mov
ret
cwtl
cmp
cwtl
cmc
mov
and
mov
jbe
mov
jg
stos
fsubr
cmp
mov
dec
add
and
adc
ljmp
adc
arpl
xor
inc
cmp
push
stos
add
ljmp
adc
or
jg
sbb
cld
inc
loop
bound
mov
add
and
pop
adc
or
sti
or
sbb
push
cmc
adc
addr16
fadds
jp
aam
repnz
sbb
andb
lds
mov
mov
add
sub
std
dec
xor
mov
je
mov
lds
pop
jbe
int
mov
push
xchg
lock
add
out
sti
das
bound
loope
fucomip
ja
idivb
and
rclb
or
jg
sbb
add
movsb
and
jb
sbb
or
lock
add
pop
push
dec
push
xor
mov
mov
dec
xchg
or
rcrb
aas
in
mov
stos
ds
or
adc
movsl
jp
push
std
in
mov
arpl
movsb
cltd
add
in
dec
mov
das
sub
mov
notrack
mov
mov
or
jp
push
push
mov
insb
add
cld
decl
je
call
add
movsb
pop
jmp
adc
mov
data16
aad
adc
test
test
mov
push
das
clc
mov
jmp
adc
pop
cltd
fucom
xchg
xchg
or
dec
adc
sbb
add
jb
cs
mov
mov
xor
cli
and
fdivrs
lea
inc
mov
sbb
add
cmpsl
dec
inc
shl
aas
cli
mov
lock
mov
push
jo
add
adc
fisttps
sbb
mov
fisttps
fists
sbb
or
rolb
mov
movsl
insb
mov
negb
es
rcl
loope
and
pushl
lret
jmp
mov
push
inc
push
subb
sub
icebp
sub
sbbb
cmp
shl
sar
and
ljmp
or
sub
pushl
shll
test
int
popa
movsl
mov
mov
test
int3
call
mov
aad
fs
add
cmpsl
dec
dec
mov
icebp
outsl
inc
out
xor
xchg
btr
icebp
repnz
aaa
mov
inc
cmp
or
push
pusha
outsl
ret
mov
clc
dec
add
aad
add
jbe
push
dec
pop
dec
cwtl
mul
mov
jo
add
fiaddl
repnz
imul
call
jl
sub
xchg
es
rol
cltd
or
adc
in
push
rolb
push
cmp
popa
pushf
pushf
loop
pop
imul
les
push
inc
adc
or
fucomip
fisubrl
cld
stc
cmp
jo
inc
popa
fwait
lock
sub
insb
sar
outsl
mov
and
test
adc
add
mov
je
sar
jg
cmpsl
or
cltd
push
inc
and
shl
loopne
sub
fbld
sarl
add
les
ljmp
cmp
adc
roll
inc
scas
clc
jl
ja
jl
call
pop
into
mov
xchg
shl
push
aam
xor
imul
out
push
add
std
or
push
xor
loop
add
cmp
scas
aam
adc
pop
add
push
sbb
xor
fistl
popa
cld
mov
stos
inc
mov
mov
sbb
xor
pop
cltd
inc
sub
cmc
and
sahf
hlt
inc
dec
xchg
xor
jp
dec
add
mov
rol
dec
add
movsb
popa
add
mov
xor
dec
orb
xchg
addb
lcall
push
jbe
mov
cwtl
rol
xchg
nop
adc
lods
push
adc
fwait
and
jmp
xchg
jecxz
mov
fcoms
sub
inc
mov
xchg
cmp
dec
sub
lret
xor
into
stc
decl
test
mov
test
sbb
xchg
pop
cmpsb
out
into
cmovl
jmp
inc
and
test
xchg
data16
sarl
andb
cmp
push
lcall
push
push
les
xchg
mov
aaa
add
js
add
add
arpl
icebp
xchg
sub
incl
xlat
and
loope
loop
add
fdivrl
add
push
out
dec
push
jge
cld
fisubrs
pop
and
insl
adc
mov
int
lret
cwtl
adc
mov
push
add
jmp
jg
ljmp
sub
mov
mov
ljmp
push
sbbl
incb
sbb
push
add
mov
pushl
add
sahf
fsubrs
ret
sti
fsts
and
pop
test
in
mov
loope
mov
push
inc
cmp
jg
and
into
and
adc
jg
adc
sub
sbb
jge
test
shrl
xor
jbe
jg
lock
mov
fsubrs
jl
push
dec
test
decl
test
dec
mov
and
pop
or
inc
xor
add
push
jmp
push
sbb
inc
or
jmp
sub
movsb
xchg
cli
fcomip
add
jo
fs
ja
arpl
cwtl
fdivrs
ret
mov
cltd
shlb
inc
or
stos
sbb
mov
mov
jg
add
addl
push
and
ret
add
xchg
cld
ljmp
jo
out
pop
loopne
mov
mov
dec
dec
xor
push
xchg
cmp
add
pmulhuw
or
cmc
icebp
and
jns
lret
sbb
mov
lods
lds
jne
jl
fisttps
or
add
push
jl
mov
pop
pusha
dec
jp
call
cmp
pop
inc
add
mov
cltd
in
fcomp
add
pop
scas
cli
jg
outsl
inc
sbb
test
xor
mov
push
std
das
xor
jo
xchg
js
mov
mov
add
call
dec
xchg
sub
mov
add
jb
adc
xchg
hlt
incl
xor
pushf
adc
mov
mov
mov
aaa
sub
or
add
or
adc
pop
icebp
jg
dec
and
jg
xchg
adc
dec
in
add
mov
insl
out
mov
stc
and
pop
out
sub
imul
cmp
sar
out
clc
or
mov
int
xchg
cmp
insb
push
cmp
iret
pop
iret
aam
pop
xor
decl
or
clc
stc
adc
and
mov
or
cmp
popl
cmp
inc
test
pop
aas
add
in
js
cmp
call
and
sub
sbb
outsb
add
gs
mov
ljmp
add
xchg
adc
and
movsb
add
mov
inc
add
decl
sldt
xchg
and
sbb
aad
inc
xor
cmc
mov
lahf
cmp
mov
idivl
mov
cmp
les
xor
push
cmp
imul
sbb
sahf
jo
idivl
push
mov
popa
and
jg
jl
loope
fadds
loop
sbb
fcoml
add
ss
push
add
jl
hlt
push
stos
mov
fcomps
mov
or
mov
mov
mov
add
mov
lds
sub
adc
cmpsl
and
dec
xchg
add
in
xchg
int3
clc
push
cmc
dec
or
test
dec
ror
hlt
sbb
or
xchg
enter
add
ja
fisttps
push
add
call
lock
movl
push
rcll
cld
daa
mov
into
mov
push
inc
stos
push
inc
add
mov
mov
inc
push
cltd
and
leave
sub
xor
sub
fstpt
aam
fisubl
cwtl
icebp
call
or
push
jg
sbb
add
xchg
outsl
jo
fadds
mov
incl
cli
or
hlt
and
mov
fsubrs
fbld
xchg
or
into
xor
add
lcall
out
fwait
add
in
sub
inc
enter
int
stos
je
call
or
mov
shll
adc
loopne
jp
daa
mov
xor
mov
cmp
je
rorb
add
cmp
or
pop
rorb
js
incb
xor
das
push
xchg
inc
dec
push
in
or
mov
cli
add
sahf
mov
xchg
fildl
dec
sbb
jg
push
mov
repz
dec
lock
mov
mov
cmp
das
pop
mov
mov
add
lods
ud0
and
and
out
test
decl
add
pop
xchg
inc
clc
mov
pop
mov
loopne
cmp
push
mov
insl
sub
dec
pop
and
out
clc
pop
enter
push
cli
pusha
lret
xchg
push
lcall
outsl
js
ljmp
subl
sbb
lcall
test
dec
sahf
push
xor
and
or
and
xchg
dec
cwtl
adc
mov
out
inc
push
jecxz
jmp
mov
push
rclb
push
add
loopne
xor
int3
xchg
fisubl
mov
add
dec
call
push
rdmsr
ficomps
jg
inc
cmp
or
das
cmp
or
or
mov
data16
dec
jb
add
ja
call
adc
inc
and
pop
mov
and
popa
dec
shll
pop
nop
and
jg
add
pop
adc
mulb
lret
insl
aad
sbb
add
cmpsl
xchg
pop
incl
test
shrl
xorb
dec
sub
clc
add
loop
add
mov
sbb
add
clc
pop
inc
jb
push
or
fucomip
testb
jae
and
int3
xor
jecxz
mov
sub
add
push
xor
sbb
sahf
add
jo
ja
out
aam
cli
psrlq
mov
add
cmpsl
xor
adc
jo
cli
fildl
xor
add
or
aaa
divb
push
cmp
inc
xlat
notl
shrb
jl
xor
movsl
adc
std
repnz
in
aas
or
sbb
jb
cmp
add
sub
mov
xor
or
mov
bound
ljmp
xor
outsb
fistpl
xchg
adc
call
loopne
sahf
add
aad
mov
inc
push
mov
add
pop
mov
das
sar
mov
outsl
xchg
test
xor
test
push
jl
pop
or
jnp
jno
jne
and
inc
rolb
fucomip
fisubrs
xchg
cmp
push
idivl
jne
int
cmc
cmp
stos
dec
add
mov
xorl
adc
incl
clc
push
sub
dec
or
lahf
adc
pusha
test
bound
int
sbb
mov
decl
aad
add
adc
lret
add
xor
fwait
mov
adc
mov
mov
ret
jae
or
lods
jnp
or
push
std
je
ds
or
lock
dec
les
ljmp
inc
lea
les
xlat
mov
mov
fcomip
jo
arpl
out
push
push
cltd
lret
xor
hlt
jmp
call
cld
add
add
mov
and
xchg
add
jmp
and
xchg
mov
or
std
mov
push
or
push
sbb
jp
test
and
adc
stos
push
incl
xlat
fs
inc
fs
je
testb
xor
xlat
push
sarb
push
mov
ja
fists
call
pop
jo
into
push
xor
loopne
add
or
aaa
dec
jl
into
and
in
call
inc
add
scas
push
repnz
cli
aaa
movsb
push
cmp
cld
test
pop
ficompl
and
arpl
clc
pushl
enter
cmp
stos
icebp
cmp
cli
ljmp
decb
imulb
in
inc
add
jge
mov
decl
xor
push
inc
or
insb
sub
dec
xor
in
sub
mov
mov
cmp
xchg
mov
cmp
add
cmp
adc
sub
cmpl
push
or
add
jmp
clc
push
add
add
test
or
cmpsb
sahf
add
xchg
cmc
stc
cltd
add
push
dec
mov
cmc
mov
into
sbb
add
arpl
jl
sarl
inc
call
inc
das
addl
pushf
inc
dec
out
lock
push
mov
std
cmpsb
nop
cmp
pop
add
roll
test
inc
stos
cwtl
les
inc
daa
lock
ret
mov
scas
add
cwtl
inc
mov
add
adc
out
shrb
test
test
cmp
pop
mov
lock
cmc
or
add
inc
cmp
movl
lods
jo
ljmp
jl
adc
jmp
loop
clc
mov
add
mov
cmpb
sub
fnstenv
enter
mov
rolb
sub
testb
add
gs
pop
lods
add
imul
push
ss
add
add
loop
inc
xchg
sub
jo
push
stos
mov
sbb
xor
setnp
test
lcall
movsl
or
jmp
adc
cmp
pop
push
std
add
jns
dec
insl
mov
adc
add
rclb
shlb
add
cmc
sub
aaa
ret
inc
jbe
jne
sbb
push
out
mov
incl
outsb
pop
adc
xchg
inc
xor
jl
adc
push
rcrl
sti
push
cmpsl
js
rolb
push
push
popf
mov
fistpll
add
mov
fcmovnb
out
mov
cmp
cmpsb
or
jecxz
xchg
rclb
data16
push
inc
loope
ret
mov
cmp
mov
pop
cwtl
and
add
inc
test
in
sub
push
shrb
and
pushl
mov
add
fsubs
or
in
push
pusha
pop
in
add
inc
idiv
pusha
or
xor
in
add
cld
cmp
loope
mov
sbb
add
loopne
sahf
xor
outsl
mov
lods
js
push
fucomi
stos
cmp
pop
shr
mov
test
fs
xchg
into
dec
mov
jg
pop
jecxz
mov
or
loop
inc
nop
insb
mov
std
add
sbb
pop
or
inc
lods
repz
lcall
aas
cmpsb
mov
fisttps
lret
popa
aaa
lds
iret
sbbb
movd
mov
cmc
dec
mov
pop
push
xor
xchg
sub
shr
dec
incl
mov
mov
sbb
pop
jns
loope
jg
mov
inc
dec
gs
xchg
out
cmc
pop
sarb
addr16
sbb
push
xor
cmp
sub
and
imul
and
mov
cli
jnp
add
pop
imul
lahf
movsb
lcall
repnz
scas
dec
adc
jo
rorb
and
or
or
xor
add
pop
sub
jo
pop
mov
stos
mov
mov
cld
repz
ds
ljmp
addr16
cmc
ret
add
add
mov
jg
xor
outsl
out
fisubl
jno
inc
inc
fwait
dec
mov
inc
adc
stos
pop
sbb
or
out
stc
jo
inc
or
das
leave
jecxz
inc
pop
xor
lret
mov
mov
mov
lods
or
or
xchg
mov
or
cld
add
cmp
dec
push
std
cmp
adc
xchg
icebp
data16
xchg
test
js
out
pop
push
pop
mov
pop
add
orb
cli
aad
fwait
decl
fwait
pop
rclb
in
xchg
adc
jmp
mov
sbb
jg
divl
out
sbb
adc
ja
lods
lahf
je
sbbl
cmp
test
pushf
cmp
loop
loopne
test
in
insl
and
ja
mov
cmp
mov
sub
push
pusha
push
jmp
xchg
fldcw
je
in
adc
adc
ljmp
pop
lcall
sub
add
xchg
add
fmuls
push
jp
or
mov
adc
call
into
and
lds
pop
inc
out
xor
jne
fiaddl
sbb
xchg
incl
in
andb
jbe
dec
xchg
or
call
push
mov
add
andl
test
fisttpl
mov
std
xlat
pop
jb
jmp
sbb
or
lods
or
push
je
jmp
inc
fwait
movsl
fnstsw
xor
rorb
jg
push
sarl
adc
and
xor
and
rcll
xor
jg
ds
add
jmp
shll
jbe
popl
sbb
pop
fcomps
out
pushf
addr16
daa
daa
jnp
jp
pop
lds
jge
pusha
mov
push
std
nop
jecxz
mov
mov
std
adc
cmp
jle
fwait
lea
xor
add
or
add
lcall
std
mov
std
add
loopne
xor
pop
mov
xchg
pop
movsb
repnz
xchg
mov
mov
push
ds
stos
or
lods
jns
ds
leave
pop
and
loopne
lods
daa
lock
xchg
nop
push
sahf
sbb
or
dec
dec
in
push
flds
mov
das
loop
sub
pusha
into
pop
iret
push
push
bswap
jns
inc
out
orl
or
xchg
and
pop
pop
fwait
inc
adc
pop
or
scas
and
xor
add
outsl
pop
pop
mov
xor
mov
pusha
outsb
cmp
push
into
inc
sti
das
shl
mov
inc
insb
add
cmp
aad
imul
cs
stos
cs
je
or
add
subb
lahf
push
jmp
andb
outsb
mov
sub
pop
pop
mov
call
mov
and
push
pop
add
mov
fnstsw
nop
sbb
jl
int
repz
int
or
xchg
push
push
test
dec
lods
loopne
mov
pop
loopne
shlb
cmpsb
cs
popf
cli
mov
out
dec
push
push
inc
pushf
ja
inc
cmp
jbe
sbb
or
incl
xor
outsb
fildl
jle
add
push
subb
or
std
stos
out
pop
add
adcl
xchg
or
outsl
test
xor
and
adcb
mov
xor
scas
imul
outsl
out
mov
nop
dec
push
fwait
push
or
fadd
stc
mov
andb
inc
cmp
pop
pop
xchg
and
es
mov
xor
cld
clc
sar
decl
sub
rcll
pop
lahf
enter
or
inc
pop
sbb
xor
into
sbb
adc
icebp
lock
bound
xchg
lcall
aas
add
jge
hlt
nop
clc
or
cmpsb
shlb
xchg
sbb
sbb
loopne
xor
pop
pushl
in
aaa
bound
aaa
pop
movsl
out
fisubs
push
clc
push
or
aad
subl
push
icebp
jg
push
aaa
dec
xchg
stos
push
call
inc
and
loope
scas
fiaddl
dec
dec
sub
xchg
mov
xchg
ljmp
push
push
mov
xchg
xchg
xchg
movzwl
push
pop
adc
loope
jl
jg
inc
pushf
sub
jo
jge
cmp
adc
je
push
scas
lock
xor
mov
stos
ljmp
movsl
out
mov
shll
sub
testb
lock
push
imul
mov
addr16
dec
ja
adc
mov
mov
cli
pushl
mov
inc
js
scas
sub
mov
push
xchg
test
incl
xchg
stos
int3
lcall
and
mov
sbb
push
cmc
dec
xor
lea
add
loopne
and
sub
sub
outsb
mov
ss
das
sub
test
jo
addl
cmp
inc
lret
lods
adc
push
clc
filds
out
pop
cmp
fsubrp
mov
sub
adc
ljmp
sub
mov
sub
nop
lods
gs
jg
mov
sub
jo
cmp
sub
out
int
out
clc
outsl
test
mov
cmp
pop
pop
jmp
outsb
test
arpl
sub
leave
test
jmp
in
aad
fiadds
incb
jae
mov
jp
xchg
rol
xorb
mov
cmpsl
inc
cltd
mov
loope
aad
aam
push
in
jb
loopne
pop
add
dec
pop
test
adc
in
mov
imulb
mov
or
add
xor
or
rclb
aaa
aam
adc
aad
les
out
dec
loopne
lock
adc
inc
mov
js
add
js
or
les
add
leave
mov
add
lock
add
xor
in
dec
jo
mov
cmp
test
or
dec
or
outsb
mov
inc
lahf
lods
repz
cld
adc
jne
je
shrb
or
stc
lock
mov
jnp
lret
add
sub
adc
xchg
sbb
sbb
ljmp
push
mov
loopne
or
enter
sub
in
mov
out
dec
test
push
fisubs
outsb
jo
dec
push
bound
or
push
dec
push
add
test
fmul
flds
pop
mov
fiaddl
ret
adc
push
dec
push
aad
orl
ja
fistpl
mov
add
cli
daa
pop
arpl
push
mov
push
xchg
add
mov
inc
fcmovb
out
arpl
fcmovbe
shll
in
mov
pop
cmp
loopne
mov
add
ss
dec
movsl
push
inc
xor
xchg
out
jp
mov
xor
les
hlt
divl
adc
sbb
sbb
dec
jg
xchg
fistpl
test
mov
ficoms
jecxz
decb
fucomip
cmc
inc
xor
ret
js
in
nopl
jmp
fwait
sub
call
lods
xor
pop
adc
repz
push
incl
test
add
add
repnz
add
add
cmp
sbb
test
mov
jo
xchg
dec
cwtl
pop
mov
sub
mov
lods
fcmovu
pop
nop
inc
rclb
cld
sbb
js
mov
xchg
out
dec
cmp
ljmp
push
mov
insl
sahf
and
fcoms
push
enterw
rcll
mov
xchg
leave
xchg
jge
pop
mov
popa
push
repz
xor
fcompl
lret
sub
pop
cld
inc
fs
cmp
inc
add
dec
push
xchg
mov
inc
mov
sub
inc
or
cmp
push
or
push
mov
cmp
js
xor
int3
fsts
test
es
lcall
add
dec
popa
rcrl
pop
dec
and
and
dec
les
mov
pop
mov
nop
enter
lahf
dec
xchg
cmpsb
and
in
mov
and
jae
push
adc
add
add
cmp
inc
inc
xor
mov
fs
dec
out
inc
add
in
das
bound
ret
pop
cmp
into
and
adc
movsl
shr
lea
mov
daa
push
aaa
es
clc
cmp
shlb
popa
stc
cmp
decl
mov
xchg
test
cmp
fistps
pusha
lahf
xchg
sub
ljmp
loop
jne
into
outsb
adc
mov
push
sub
cmc
mov
inc
push
loop
mov
jno
mov
xorb
pop
pushf
daa
mov
jg
jg
cwtl
cmp
icebp
mov
sarl
rcrl
lods
xchg
inc
mov
mov
lock
pop
mov
xchg
xchg
outsb
jbe
hlt
mov
lcall
or
add
mov
movl
outsl
incl
cmp
sbb
fwait
sbb
popf
adc
mov
adc
incl
xchg
mov
loope
pop
push
stos
inc
ror
in
imul
xchg
jmp
adc
rclb
inc
lcall
sti
push
shl
mov
adc
mov
fstpl
jg
sbb
inc
cwtl
xchg
popl
cmp
adc
imul
lcall
cmp
aam
push
mov
icebp
je
xchg
xor
and
push
xlat
pushl
loop
lret
jmp
shll
mov
incl
sub
shlb
je
aad
mov
les
notl
fwait
or
cmpsb
sub
adc
jecxz
add
dec
add
out
loop
repnz
dec
push
test
cs
push
push
shrb
dec
xor
hlt
xchg
fimull
cmp
divb
aaa
cld
cmp
lret
add
pop
test
xor
inc
dec
and
clc
mul
and
pop
add
test
add
nop
and
mov
lock
imul
fsubrl
jecxz
pop
rolb
call
rcll
jbe
sahf
bound
push
les
hlt
in
call
fcompl
sarb
bound
mov
mov
mov
pop
cmpsl
mov
lahf
clc
xor
lea
ficompl
mov
push
mov
sub
xor
jp
mov
sar
fwait
jg
fdivp
stc
add
push
test
aam
add
out
push
add
dec
cmp
push
cld
in
add
jge
or
out
xchg
or
adc
pusha
pop
jg
mov
call
test
lret
jnp
leave
mov
add
mov
pop
lods
push
insb
add
jg
cmpsl
mov
jmp
dec
lcall
cld
test
sbb
pop
add
test
sahf
add
xchg
pop
stc
out
mov
pushf
dec
cmp
cld
jae
loop
inc
rcll
add
add
fdivrl
rorb
mov
int
shlb
ljmp
in
xchg
sbb
test
push
ljmp
xchg
inc
das
insb
pop
add
movsb
bound
or
or
or
ljmp
insl
data16
inc
mov
mov
fiadds
push
add
push
add
ss
mul
xchg
cs
mov
sbbb
fs
out
sub
ljmp
fistpll
lcall
xchg
and
add
mov
outsb
pop
inc
ret
lahf
mov
pop
shlb
sub
add
lcall
inc
sbb
inc
and
test
in
xor
mov
scas
in
data16
divb
int3
cmp
push
clc
inc
cmp
adc
or
dec
add
jne
inc
dec
pop
mov
mov
js
int
xchg
or
sub
push
pop
es
repnz
mov
xchg
jmp
shlb
cmp
or
sbbl
stc
pop
enter
or
push
mov
cmp
add
push
fisubs
roll
mov
or
int
incl
call
cmp
jo
ja
xor
ss
sub
sub
faddl
inc
out
pop
cmp
sti
sbb
shrb
loopne
or
inc
iret
je
outsl
iret
bound
stos
pop
push
mov
xchg
inc
and
jae
int3
jg
mov
jb
jae
push
pop
mov
push
add
pusha
decl
insb
lret
pop
cmp
jns
data16
pop
addr16
jb
inc
incl
xor
rorb
xor
xchg
movzbl
int3
add
loop
decl
idivb
enter
mov
add
dec
mov
dec
out
xchg
mov
lock
outsb
pusha
bound
addr16
adc
adc
xor
adc
js
scas
fwait
xchg
enter
mov
pop
and
loop
cmp
xor
add
incb
add
add
rorl
sub
lock
jp
adc
leave
lock
cmp
mov
hlt
dec
adc
incl
test
mov
sbbl
scas
sbb
decl
xlat
popf
or
push
loopne
mov
pop
pusha
movl
jecxz
mov
mov
pushf
in
inc
sub
inc
adc
inc
ss
ja
or
ret
sbb
fcomip
add
hlt
aad
mov
adc
push
arpl
sti
push
cmp
mov
mov
add
cmp
dec
mov
test
mov
pop
cld
jns
dec
sub
lcall
fildl
jecxz
mov
cli
out
arpl
mov
fdivl
mov
pusha
pop
jecxz
push
out
dec
mov
dec
xor
js
mov
inc
push
mov
mov
daa
mov
inc
aas
jb
mov
or
fisubrs
jg
fldcw
imul
add
pop
ds
js
add
mov
stos
fldt
mov
add
fsubrs
call
add
add
xchg
cs
lods
lods
mov
mov
pop
lods
push
pop
rcl
out
out
inc
add
lods
push
inc
jbe
push
jnp
mov
clc
fwait
cmc
shll
push
mov
cli
and
repnz
cwtl
pop
adc
adc
pop
mov
sub
das
mov
jp
and
bound
add
push
sub
das
xchg
loopne
pop
test
mov
sbb
xchg
stc
mov
int3
sbb
loop
shrl
rclb
aas
dec
aaa
jl
unpckhps
negb
rcll
mov
xchg
sub
ljmp
push
pop
ljmp
jo
scas
idiv
jg
pop
insb
add
gs
std
aad
and
xchg
inc
loope
fstpl
inc
push
push
cld
ss
call
arpl
add
fidivrl
dec
les
push
insb
pop
outsb
push
rorb
lods
les
or
mov
cmp
test
inc
cmpsb
xchg
and
leave
loopne
pop
clc
mov
dec
sub
cwtl
lods
cs
test
mov
loop
dec
cmp
sarb
add
xchg
lds
es
jp
stos
sub
out
rclb
cmpsl
mov
cli
mov
xchg
jbe
mov
mov
ja
popa
cmp
push
lea
sbb
sbb
pop
mov
fisttps
mov
lock
sbb
test
xor
es
and
add
popa
out
inc
hlt
notb
xor
lcallw
xchg
add
ret
pop
jg
xor
xor
adc
scas
add
fistps
das
js
mov
jl
out
lret
mov
aas
icebp
cmpsl
dec
fisubl
xor
sbb
pop
loope
sub
or
clc
mov
loopne
cli
mov
add
ja,pt
push
mov
or
in
push
into
xor
inc
sbbl
sbb
fadds
scas
mov
or
and
clc
cmp
cmp
jge
cmp
popf
lock
call
or
pop
push
sub
mov
pop
dec
push
icebp
push
sbb
ljmp
fsubrl
jno
push
add
rcrl
xchg
mov
in
ljmp
jno
je
sub
and
mov
neg
fcomps
jo
dec
cld
pop
inc
mov
adc
push
xor
cmp
out
add
push
sub
or
scas
jb
mov
push
loopne
lea
ljmp
adc
pop
mov
test
mov
test
loop
jg
loop
mov
mov
fs
mov
add
repz
into
cld
pusha
push
pop
mov
out
lcall
int3
orb
stc
fs
mov
xor
cmpsl
aas
ret
jg
sarl
dec
pop
cmp
add
mov
mov
aaa
mov
add
sbb
addb
jb
lock
pop
mov
orb
in
push
or
pop
sbb
sbb
sarb
pusha
gs
sub
and
xchg
adc
jl
shlb
stc
jo
hlt
lock
or
sub
add
mov
mov
clc
mov
adc
outsb
jne
push
sbb
lret
popa
mov
rolb
stos
imul
pop
loop
pop
adc
sub
pop
push
pop
out
loop
mov
pop
test
push
cmp
lcall
xchg
push
pop
xchg
push
mov
cmc
insb
repnz
jg
decl
ret
jecxz
imul
es
jo
cmp
push
es
call
loop
mov
push
inc
ret
cld
or
leave
cmpsb
js
lods
sbb
add
cmpb
addl
and
inc
movl
rcll
dec
sbbb
add
arpl
shll
adc
add
dec
add
lcall
add
jbe
sbb
out
add
dec
xchg
xchg
nop
fbld
dec
pop
verw
adc
adc
ja
adc
jno
or
xchg
mov
in
stc
jg
mov
and
jmp
dec
leave
les
inc
sbb
cmp
test
adc
xorb
inc
outsb
jno
mov
decl
ret
xchg
dec
adc
xor
cmp
lret
loope
mov
ss
cmp
stc
inc
roll
outsb
push
mov
fiadds
push
clc
cmc
idivl
mov
mov
xchg
jns
jl
xor
mov
push
push
nop
ja
test
mov
push
dec
add
jmp
mov
mov
pop
add
lea
mov
out
aaa
pop
jb
xchg
xchg
cwtl
insl
out
test
out
xchg
repz
stc
movsb
es
jae
popa
incl
int
add
inc
ds
xchg
mov
sub
add
sbb
add
incl
or
adc
jl
pop
add
and
cwtl
xchg
add
into
inc
orb
pop
insb
dec
pop
xchg
adc
dec
cli
pop
xchg
fcoms
lret
sbb
mov
ja
icebp
enter
cs
je
inc
shll
jno
push
out
sar
int
icebp
test
sbb
cs
or
mov
mov
repnz
inc
push
or
scas
jp
cld
rolb
push
mov
cmp
inc
adc
cld
mov
rclb
or
sbb
or
int3
lds
cmp
cli
dec
cmp
rolb
jecxz
aaa
dec
cmp
outsb
pop
mov
cltd
mov
data16
lcall
nop
or
fwait
dec
incl
addl
cwtl
add
inc
or
fcomip
jle
in
add
xor
orb
xor
mov
inc
pop
fs
movsb
fmull
jl
mov
shlb
adcl
push
inc
int3
or
addr16
or
jg
push
dec
stc
ja
jns
pop
mov
xor
out
xchg
cmp
es
fwait
push
data16
xchg
stos
adc
and
std
mov
push
jns
je
aas
jg
sbb
sub
add
test
lock
movb
mov
pop
insl
pop
inc
pop
xor
add
sahf
sub
vpsraw
test
testl
sbb
sti
add
xlat
pop
push
mov
pusha
push
mov
movsl
pop
ret
js
stos
or
dec
jne
cltd
pop
cmovo
aam
mov
rcrb
mov
ljmp
pop
mov
sbb
cmp
xchg
rorb
shlb
inc
lret
fildl
jmp
loope
sbb
in
mov
jns
dec
rol
sbb
cltd
test
loope
inc
pop
lods
loope
or
cmp
pop
ret
shll
mov
cs
add
stc
sbb
or
loopne
and
nop
add
adc
add
sbb
shr
mov
add
jmp
inc
mov
mov
call
push
jg
or
sarb
sub
inc
andl
jg
fistpll
or
xchg
xor
mov
in
fldl
stos
xchg
movsb
scas
mov
pop
sbbl
ljmp
lcall
ud2
aas
add
addr16
jg
lret
aas
dec
lcall
cld
fs
xor
push
xor
iret
imul
enter
adcb
push
cwtl
or
jo
mov
push
loope
inc
fcomip
add
mov
sub
inc
sub
xor
cmp
cli
jg
lahf
dec
mov
setns
cld
scas
into
or
inc
fwait
movsl
dec
pop
dec
call
andb
imul
sub
inc
lahf
lods
mov
std
incl
inc
dec
sub
testb
add
xor
loope
arpl
xchg
arpl
aam
jl
mov
push
dec
rcrb
fsts
dec
xchg
dec
or
clc
subl
das
add
std
call
mov
data16
dec
outsb
rcll
int
pop
sbb
sbb
jno
adc
or
call
loop
icebp
mov
test
sahf
push
jge
scas
push
mov
int
cmp
sarb
pushf
rolb
insb
dec
push
sub
aam
mov
pop
xlat
aad
mov
cltd
loopne
mov
dec
sar
incl
pushf
sbb
outsl
hlt
push
ret
add
cmovp
pop
test
nop
and
jne,pt
jg
mov
mov
dec
std
lret
adc
addb
outsl
xor
mov
jg
add
test
enter
jo
push
add
addr16
aad
jmp
or
push
sbb
mov
lods
fisttpll
out
push
pop
outsl
fbstp
loop
cmc
add
or
jae
push
push
mov
int
sub
adc
pop
clc
xchg
es
cwtl
sbb
lea
lret
pop
inc
ds
pop
jmp
mov
mov
in
xor
push
xor
push
lcall
ljmp
push
mov
xchg
jg
shll
out
sbb
pop
jbe
mov
xor
decl
dec
xchg
dec
add
dec
push
andl
cmp
rcll
inc
dec
mov
mov
sub
sbb
mov
mov
out
inc
ja
mov
add
aaa
pop
sbb
add
sub
ror
xchg
cmpsb
movb
add
sub
mov
xchg
inc
cli
pop
lcall
mov
and
push
jp
fimuls
int
add
rcll
jae
incl
or
aam
mov
enter
xchg
xchg
dec
mov
decl
jmp
mov
mov
imul
mov
insb
mov
lods
or
mov
xchg
cs
dec
int
push
mull
loopne
pushl
lock
sar
popf
jo
adc
rorb
sbb
out
clc
cmp
addr16
scas
jae
mov
sar
incl
call
notb
sbb
sbb
or
sub
add
stc
pushl
icebp
lahf
xor
mov
cli
and
mov
add
and
incl
inc
xlat
nop
aas
fdivr
and
pop
add
in
cmp
or
ljmp
fcmovbe
mov
pop
cli
sbb
mov
div
lcall
and
or
lods
aas
aam
decl
dec
inc
mov
and
sarl
pop
add
popf
aam
addw
and
loopne
mov
lcall
pop
xor
mov
mov
xor
or
test
sbb
sbb
lds
movsl
ret
add
push
or
mov
mov
mov
loopne
jmp
scas
imul
aaa
inc
fisttps
fiadds
push
add
sub
jg
dec
push
add
stc
or
subl
sti
loope
jg
sahf
leave
stc
or
decl
cwtl
add
or
mov
xor
fsubp
sar
sbb
cmp
cwtl
sub
mov
icebp
ljmp
int3
add
push
and
mov
jge
fimull
std
mov
fstpt
out
sub
mov
xchg
movsb
out
add
push
jge
jno
or
jmp
jmp
sahf
adc
sbb
int3
jno
decb
movsb
and
std
xchg
jecxz
add
push
cs
fcomip
cmp
jae
inc
js
add
in
jg
sbb
jp
scas
mov
jb
sarb
incl
stos
dec
mov
inc
inc
popa
and
dec
mov
pop
popa
mov
push
popa
mov
add
jg
es
xchg
jp
iret
dec
adc
stos
hlt
jmp
mov
pop
add
int
popa
xchg
xorb
mov
enter
xchg
pop
pop
imul
xchg
stc
sbb
pop
inc
aaa
push
iret
sti
pusha
jns
cmpsb
icebp
std
xchg
cmp
fcmovu
inc
loopne
xor
ret
scas
adc
mov
jp
sbb
jno
movsl
dec
cmpb
shrl
mov
sub
ja
inc
xor
lahf
jg,pn
mov
pop
bound
xor
sub
adc
movsb
xchg
ret
insb
adc
shll
pop
mov
push
pop
imulb
addl
loope
pop
out
xchg
movsl
adc
pop
fisttpll
aad
mov
andl
add
or
and
push
pop
mov
ss
or
lcall
inc
dec
pop
cmp
ret
lods
push
and
dec
or
adc
scas
and
jnp
ficoml
jl
adc
jmp
fildll
mov
fstpt
rcll
or
mov
test
je
sbb
movsb
or
sub
and
rolb
fistpl
pusha
xor
pusha
mov
bound
push
data16
xchg
mov
sbb
mov
or
push
xchg
pop
aad
gs
mov
dec
aaa
or
push
push
jmp
cmp
inc
testb
enter
sar
pushl
add
sub
mov
add
test
enter
inc
es
clc
das
add
add
push
and
pop
fadd
push
stos
in
cld
pop
insb
dec
test
out
sub
nop
addl
fildll
icebp
scas
cmp
add
sub
scas
sti
pop
add
sub
sub
mov
and
cmp
cmp
ljmp
lock
orb
xor
andb
push
jb
outsl
out
lret
ss
test
lds
int
daa
and
cmp
xor
push
jecxz
ljmp
sub
pop
sbb
ja
or
leave
test
push
add
xchg
add
push
mov
fnstcw
inc
jne
push
or
in
fwait
loope
rclb
jo
mov
push
rclb
xchg
sub
pop
fwait
push
aaa
loope
out
enter
fstpl
aaa
ds
mov
adc
mov
mov
xor
dec
xor
rclb
rcpps
mov
lock
aas
ror
cmpsl
add
mov
popf
jg
fwait
mov
cli
lcall
iret
xor
in
pushf
or
clc
fbld
js
cli
xor
add
mov
push
and
add
add
adc
push
repnz
mov
cmp
mov
bound
imul
addl
mov
adc
push
es
add
icebp
fcmovb
iret
jl
jne
addb
push
cli
push
sbb
mov
iret
cli
mov
add
sti
ss
or
mov
add
adc
jne
in
out
mov
xor
dec
adc
pop
dec
rolb
push
cmp
push
addr16
sarb
inc
adc
jmp
push
les
dec
dec
sti
cs
test
jmp
pop
andl
stos
adc
std
jle
mov
pop
stos
iret
faddl
pusha
xchg
add
add
jno
arpl
rcl
mov
xor
and
sbb
lock
jns
nop
cmp
outsl
mov
add
lock
sahf
dec
fstpt
xlat
jne,pt
add
jecxz
inc
loope
mov
lock
inc
mov
dec
cmpl
sbb
pop
rcrl
decb
loop
int3
mov
adc
test
push
bound
movsl
lock
repz
loope
adc
cmp
movsb
jns
pop
insb
cmp
mov
adc
or
mov
test
cmpsb
mov
scas
add
push
mov
cmpsb
sub
jecxz
jecxz,pn
add
jle
push
and
sbb
mov
jnp
test
mov
adc
pop
sbb
outsl
adc
pop
ret
cmpsl
popl
into
je
adc
or
dec
mov
xchg
adc
data16
lahf
jbe
int3
jo
push
or
sbb
inc
sbb
or
scas
mov
adc
and
dec
inc
scas
call
mov
pop
imul
xlat
sub
add
pop
mov
cmp
mov
ss
test
mov
repnz
ljmp
shlb
lea
xor
push
rcrl
mov
js
push
mov
sub
push
sahf
sub
scas
das
mov
mov
mov
aad
daa
mov
inc
gs
addl
sub
adcb
sbb
icebp
in
dec
icebp
push
pop
or
inc
or
push
inc
or
imul
push
je
es
fildl
jge
loopne
inc
xor
pop
fdivl
sub
imul
and
in
adc
pop
push
inc
push
dec
jne
jg
lock
jno
cmovs
mov
jno
jne
mov
ljmp
cmp
dec
mov
pop
fisubl
inc
call
imul
pop
jmp
xor
push
inc
push
dec
aam
mov
push
push
adc
fidivl
push
fcmovnbe
test
scas
hlt
mov
jp
idiv
pop
ljmp
and
insb
out
jp
add
test
or
sbb
ljmp
add
incl
es
mov
inc
adc
pop
cmc
fisubs
cwtl
imul
adc
sbb
lcall
cmp
cmp
inc
ljmp
das
rcrb
adc
stos
shlb
mov
jo
ret
sub
mov
stos
inc
inc
xlat
push
imul
sub
jg
lcall
int3
adcb
mov
lret
mov
jnp
xor
arpl
in
andl
mul
pop
fcomps
jnp
sub
xchg
add
aaa
je
aam
and
or
push
aam
aad
data16
pop
dec
jae
sub
repz
adc
ljmp
mov
add
incl
clc
lcall
xor
in
pop
add
inc
outsb
addr16
cmpsb
sbb
inc
pop
test
pop
pop
mov
add
jb
sub
mov
push
xorb
cwtl
dec
add
inc
dec
dec
lret
push
mov
xchg
repnz
out
sbb
or
or
cli
xchg
and
lret
sub
or
jmp
jnp
dec
out
inc
adc
push
pop
add
mov
in
dec
das
sub
movsb
xchg
or
xchg
ja
ljmp
pusha
shll
ficomps
les
das
xor
lea
or
ljmp
and
rclb
in
ljmp
mov
dec
or
mov
mov
pop
lcall
sbb
mov
and
mov
cmpsb
jp
mov
movsl
loop
jl
incl
dec
ret
das
fnop
cwtl
movsl
mov
mov
stos
jg
pushl
repnz
movsl
aad
jecxz
stc
loope
mov
xor
jne
jg
test
mov
insb
mov
fwait
js
mov
pop
and
push
pop
ret
ret
dec
leave
pop
cmp
push
jl
stc
add
aas
shrb
jg
jbe
dec
mov
adcb
mov
inc
xchg
xor
sub
int3
sbb
shlb
outsl
jle
cld
pavgb
repnz
mov
adc
inc
mov
mov
jmp
sbb
add
xchg
dec
int
lret
xor
aad
mov
movsb
out
lods
rolb
out
aaa
dec
mov
mov
pop
lds
jbe
dec
call
push
or
jl
mulb
cmp
jmp
cltd
add
push
sub
pop
adc
add
std
sub
sbb
xchg
sub
rcl
mov
sub
cmc
lahf
js
hlt
repnz
mov
movsb
mov
mov
je
ds
sub
push
subl
loopne
js
mov
cmpsb
fsqrt
push
out
mov
inc
sub
movsl
adc
pop
sti
mov
loop
jne
cmpsb
ds
jbe
clc
aad
in
fistps
fdivl
loopew
mov
dec
lock
loope
fwait
add
cli
add
jecxz
mov
mov
cmc
or
lcall
pop
or
dec
nop
add
arpl
cmpsl
mul
mov
sbb
or
adc
jo
xor
in
mov
mov
popa
test
dec
or
sub
outsb
push
jbe
cmp
mov
and
or
aad
add
cmc
shrb
nop
push
pop
push
andl
ljmp
out
pusha
add
mov
lcall
scas
loop
sbb
mov
inc
test
push
jp
shlb
xor
in
jmp
ss
push
sbb
in
ret
loopne
pushf
fwait
mov
nop
mov
clc
aas
sub
mov
cmp
outsb
push
xor
cld
outsl
incl
push
daa
add
xlat
xchg
movsl
add
xor
cmp
jg
mov
pop
mov
sub
dec
jle
sahf
pop
cmp
add
lds
inc
ja
loope
out
cld
xor
xchg
test
adc
lcall
mov
cltd
das
xchg
xlat
cmpsb
lods
je
fs
add
and
mov
mov
mov
and
imull
mov
loop
jne
je
lea
mov
sub
leave
in
push
dec
or
shrb
cmpsl
add
jg
loopne
incl
daa
adc
sub
pop
lret
out
jmp
mov
dec
loopne
jmp
fucom
int3
fisttps
cmp
add
adc
sbb
or
jg
movups
jge
push
cld
lret
or
sbb
add
xchg
sub
pushl
fmulp
aaa
aam
mov
pop
jecxz
mov
push
jecxz
or
push
insl
cmp
xchg
sar
push
sti
out
icebp
stos
clc
int3
pop
stos
rorb
add
sub
insb
adc
or
jle
add
push
dec
mov
sub
xchg
inc
xchg
ss
mov
out
push
out
nop
stos
pusha
mov
cld
decl
or
adc
mov
cmp
clc
decl
and
mov
mov
out
test
push
aad
ret
adc
loopne
adc
mov
sbb
insl
jg
fimull
xchg
inc
rcl
mov
and
jmp
cld
incl
mov
jmp
or
testb
call
mov
inc
mov
push
sub
and
xor
rclb
xor
icebp
repz
cmp
mov
ss
repnz
mov
fisubrs
xchg
nop
mov
js
add
loopne
push
movb
cmpsb
ja
std
or
mov
add
dec
xchg
arpl
push
add
clc
dec
jnp
aad
incl
mov
add
shl
sahf
cmp
or
sbb
dec
inc
dec
cmp
push
cmp
outsb
fmull
loop
lcall
cmpsb
jb
xchg
xchg
arpl
jl
pop
add
loopne
lcall
or
lcall
cld
loop
xor
in
loope
add
xor
jo
add
pushl
cwtl
mov
test
adc
jo
mov
mov
adc
mov
cmp
or
pop
jns
pop
cmp
fldenv
push
inc
push
add
xchg
test
xchg
add
cmp
data16
mov
jl
shl
orl
mov
aam
rorb
cli
pop
sahf
outsl
push
inc
mov
sub
mov
dec
sub
scas
cli
push
mov
sub
cmpsl
int3
add
xchg
lret
loope
outsl
incl
mov
mov
loopne
inc
dec
add
cld
mov
hlt
cmp
rorl
dec
pop
add
push
push
std
inc
adc
add
rolb
andb
and
dec
jg
xor
rcrl
xor
scas
nop
or
add
mov
add
mov
gs
out
incl
adc
push
add
dec
fsubl
icebp
or
fcomip
dec
add
add
mov
jp
test
hlt
lcall
xchg
mov
xchg
adc
xor
cmc
and
cld
ljmp
fs
inc
jecxz
add
lret
push
dec
pop
in
jne
pusha
inc
fs
jg
push
dec
sub
pop
divb
addr16
cwtl
sub
mov
and
icebp
adc
aaa
push
xchg
add
ds
into
push
fcomps
clc
mov
lods
stos
add
sbb
cmc
pop
negb
nop
mov
adc
dec
ss
inc
xchg
xchg
incb
lret
fs
fcmovne
lahf
in
ds
lods
or
xor
loope
mov
mov
sub
or
lahf
or
enter
and
bound
das
xchg
rcll
sub
cmpsl
iret
outsb
outsl
xchg
sbb
mov
mov
jl
add
pop
or
or
les
pop
fcmovbe
in
mov
pop
inc
loope
push
jmp
dec
sub
into
dec
xchg
inc
mov
mov
sbb
ret
clc
mov
fiaddl
in
pop
orb
js
xlat
es
pop
cmp
mov
add
clc
sub
les
and
push
add
dec
ret
sbb
cmp
pop
xchg
cwtl
and
push
xor
add
jne
mov
outsl
hlt
sbb
cs
sbb
xchg
loop
clc
js
push
or
pop
in
incl
inc
pop
cmp
mov
dec
addl
mov
and
jo
adcl
scas
daa
loope
inc
sub
out
hlt
pop
pop
mov
cmp
jo
test
shrb
cmc
xchg
ds
repnz
inc
inc
cli
inc
jge
mov
test
pop
test
push
pop
jle
icebp
add
call
stc
adc
ljmp
push
add
in
mov
aad
hlt
cmp
inc
aam
pop
pusha
shrb
push
sbb
add
cmp
mov
fmulp
les
cmp
sbb
gs
psubb
push
cmp
shll
jl
popa
dec
shlb
call
and
bound
rclb
push
test
jecxz
mov
mov
sbb
dec
arpl
or
add
ljmp
notb
rcr
aam
mov
sbb
addl
inc
adc
pop
mov
fimuls
outsb
or
jg
loope
sar
insb
xchg
pop
push
add
mov
mov
jg
test
and
lret
out
and
pop
and
xchg
cmpb
add
iret
imul
lahf
push
push
and
in
cmpsl
sub
sbb
ret
data16
inc
sbb
mov
jg
and
clc
xor
jb
loopne
inc
add
test
cmp
orb
das
fisubrl
jbe
decb
loopne
and
ret
and
loope
pop
add
add
pop
jbe
jmp
jmp
cmp
or
xor
sub
loop
lea
lea
and
insb
loope
aad
pop
dec
push
add
sarb
aad
sbbb
fbld
mov
aaa
rcll
mov
mov
cmp
ret
int3
or
outsb
inc
and
xlat
sar
out
push
cwtl
ljmp
jne
sub
pushf
lahf
push
lahf
xchg
into
lock
lock
cmp
call
or
add
in
rolb
adc
lcall
xor
aam
fdivl
and
push
adc
popf
mov
out
xchg
decl
xor
cltd
xchg
push
cld
push
xor
imul
into
pop
pop
mov
out
mov
add
pop
xchg
push
stos
mov
xor
js
mov
pop
mov
pushl
add
dec
inc
mov
mov
or
mov
and
jne
jg
incl
pop
lea
jo
xchg
ret
inc
dec
cmp
sbb
pop
lcall
pop
mov
hlt
sbb
ja
push
ds
call
add
mov
inc
push
adc
aam
push
cwtl
inc
jmp
mov
mov
mov
pop
outsl
stos
and
mov
aaa
mov
mov
pop
das
sbb
add
nop
jp
jg
jbe
or
icebp
test
push
inc
pop
int3
mov
outsl
cmpsl
mov
cli
pop
and
pop
xlat
fwait
push
or
xchg
in
mov
jecxz
push
add
mov
xor
add
mov
xchg
es
and
fbstp
add
cwtl
scas
push
je
xor
add
clc
fdiv
mov
sub
dec
test
or
ret
roll
sub
les
ret
clc
jb
inc
shlb
mov
sar
add
xchg
mov
insb
fs
add
or
cmc
stos
xchg
ss
call
and
mov
mov
jle
dec
ret
aas
movb
insl
dec
or
and
clc
jle
fisttps
ljmp
lahf
or
loope
pop
lock
aaa
inc
xlat
jg
dec
mov
bound
push
inc
xor
jmp
fwait
push
jo
rorb
dec
in
push
push
mov
and
add
sar
inc
pusha
xor
jnp
cmp
fxch
inc
dec
ljmp
ret
add
xor
repz
scas
iret
xor
xchg
cwtl
cmp
jg
scas
aaa
xchg
rcll
call
in
jecxz
sub
inc
clc
outsb
orl
cmpb
and
cmp
push
pusha
ss
stc
pop
pop
loop
test
jbe
enter
jge
popa
inc
lret
lret
pop
insb
push
sbb
outsb
lock
cmp
addb
adc
std
add
mov
test
pop
xchg
lock
or
cs
idivl
push
dec
mov
nop
insb
dec
jbe
lcall
and
fstpt
and
bound
clc
fldl
lock
repnz
inc
fbstp
push
add
push
or
cmp
incb
cld
dec
loopne
adc
insb
sub
inc
and
pop
pop
mov
cld
add
or
mov
mov
inc
and
stc
pop
out
adc
jl
inc
mov
ja
add
sub
les
xor
push
dec
xchg
pop
pop
dec
outsl
sbb
ret
leave
subl
mov
xor
lcall
jns
sub
inc
nop
add
loopne
lea
repz
push
cmp
test
lcall
std
jecxz
pop
lock
sbb
add
adc
mov
incl
inc
mov
aaa
add
mov
inc
push
lock
xor
add
jmp
mov
add
testl
inc
sub
mov
inc
lds
std
mov
loope
mov
jns
std
stos
cmp
mov
push
test
xor
cmp
test
pushf
addr16
aam
cld
mov
fmuls
add
movsb
push
scas
pop
jl
cmpsl
leave
lcall
push
ret
pop
and
inc
xchg
jle
nop
jb
jbe
mov
add
lods
divb
jo
sar
mov
test
int
jg
popa
or
das
in
cmpsb
mov
fistps
mov
inc
je
or
test
mov
inc
mov
jl
cmp
add
push
mov
and
sbb
decb
push
or
and
or
in
lcall
mov
scas
xchg
lret
or
out
or
pushl
dec
mov
xor
cmp
push
mov
mov
call
and
push
jecxz
jp
lret
call
pop
rolb
ret
cmpsl
mov
cmp
or
lahf
stos
cmpsb
fadds
ljmp
push
cwtl
xchg
and
xchg
add
xchg
ljmp
daa
lock
inc
push
xchg
icebp
addr16
add
pop
scas
inc
scas
lods
pushf
add
ret
cmp
and
cs
or
push
and
ltr
pushl
shrb
imul
add
xchg
adc
in
add
and
cmpsb
push
fadds
add
call
xchg
je
sbbb
jbe
decb
adc
or
fists
sbb
mov
sub
mov
lock
add
addps
add
insb
lods
xlat
dec
call
decb
fdivr
int
push
xlat
hlt
mov
push
std
pop
jmp
xor
std
cs
out
cmp
scas
add
popf
pop
sub
mov
fcmovb
inc
dec
add
sub
dec
push
lds
ret
or
add
dec
fcoms
push
jecxz
test
popl
lahf
xor
sbb
ret
gs
dec
jo
lcall
adc
cltd
popf
jb
pop
test
outsb
cltd
add
leave
cmp
fsubrl
fcompl
jmp
daa
mov
push
push
add
add
cs
pop
negb
popf
inc
out
decl
lock
cmc
cmpsl
inc
mov
bound
hlt
xor
jnp
jecxz
xor
inc
adc
inc
aaa
dec
mov
sbb
outsb
test
enter
aad
inc
mov
lea
and
dec
mov
add
loop
int
and
pop
les
fisttps
mov
jbe
push
cmp
daa
sbb
psrlw
scas
insl
fmuls
nop
popf
fstpt
sbb
pop
push
adc
int
inc
jbe
fscale
mov
or
stc
cli
stos
rolb
shll
out
lods
dec
or
xor
movsl
data16
add
outsb
jnp
bound
dec
lret
push
mov
mov
rclb
xchg
mov
in
fstps
sbbb
gs
and
stos
dec
adc
pop
loope
add
add
sbb
or
add
dec
pushw
cltd
fsub
add
pushf
lret
ret
out
dec
xchg
fadd
outsb
cli
incl
sub
add
loop
and
popa
push
lcall
or
xchg
das
add
sub
push
mov
aad
mov
push
adc
pop
inc
addl
or
insl
popa
lods
cld
push
push
adc
push
rorb
lds
or
inc
lahf
sti
or
sbb
mov
test
and
mov
scas
xchg
lock
incl
xor
and
enter
or
xchg
outsl
sti
pusha
pop
pop
cmc
fistpll
mov
stos
pop
shr
fstl
pop
cli
sbbb
xchg
push
clc
mov
insl
inc
lcall
jmp
fs
push
push
jbe
push
inc
add
mulb
adc
cbtw
pop
xchg
shll
and
pop
mov
pop
cmp
testl
sub
inc
push
push
aam
dec
cmc
add
jbe
ret
nop
idivb
cli
adc
test
pusha
aad
dec
dec
call
cmpsl
xlat
inc
mov
or
adc
cmc
ret
das
testl
lret
pop
fiaddl
imul
add
icebp
mov
lret
bound
lods
or
decl
shll
sbbl
add
mov
sub
push
aas
add
inc
xor
pop
mov
addl
clc
xchg
sbb
jae
es
dec
mov
push
mov
rcll
shrl
cmc
add
xchg
roll
jg
dec
popa
push
aaa
jge
xor
scas
testb
incl
pusha
jg
pop
dec
push
jle
inc
test
jge
push
xchg
inc
mov
adc
test
push
xor
mov
int
jns
or
jmp
subb
mov
gs
mov
in
stc
sar
mov
fwait
sbb
fcoms
stos
push
mov
xlat
cltd
adc
xchg
jge
inc
and
adc
test
add
add
ljmp
notb
lret
inc
cmpsb
int
hlt
incl
push
shl
not
push
fcoml
jae
cmp
xchg
cmc
and
cmc
or
push
popa
and
push
in
fs
add
inc
lea
addl
dec
leave
call
ret
lret
pop
add
adc
add
dec
mov
call
add
outsb
fdivs
je
movb
xor
add
xchg
mov
sbb
or
add
outsl
neg
hlt
call
jg
insl
cmp
js
lahf
inc
aam
mov
or
leave
nop
in
incl
xchg
enter
or
jle
add
ljmp
ljmp
and
call
pusha
sub
xlat
cmp
popa
sub
fimull
cmpsl
aad
adc
ljmp
jnp
test
dec
jne
call
fiadds
or
jge
cltd
adc
push
iret
mov
out
nop
ucomiss
dec
jmp
stc
pop
pusha
stc
jae
shlb
iret
xorl
mov
jecxz
fildl
std
sub
js
adc
xor
add
mov
or
jg
jbe
lds
cmp
add
or
cmpb
sub
popf
es
inc
pop
cmpsl
gs
lock
inc
cmp
ret
add
push
insl
push
ss
push
mov
clc
pop
dec
aam
iret
mov
pop
popa
cmpsl
push
clc
inc
dec
cld
add
xchg
inc
sub
cmpsb
jne
xor
rcrl
inc
push
push
aad
popa
jo
xor
outsb
dec
add
add
leave
das
clc
pushl
adc
aam
cli
xchg
mov
mov
jmp
sahf
or
mov
pop
cmc
filds
sbb
cmc
int3
xchg
push
pushl
arpl
and
adc
shlb
std
es
xchg
xchg
mov
repnz
xor
jo
pop
scas
loopne
fs
push
mov
jp
out
pop
test
cmp
and
xor
pop
icebp
lahf
andb
pop
sub
cmp
cld
sbb
add
lret
inc
rol
fstpl
sbb
or
jg
das
mov
aad
mov
pop
mov
fsts
pop
lea
mov
push
push
xchg
stc
ljmp
and
aas
add
mov
add
pop
sbb
pop
dec
clc
ljmp
dec
sti
cmpsl
adc
cld
dec
loopne
movsb
lods
adc
loopne
jle
or
call
das
inc
mov
cmp
cs
cmpb
out
cmpb
fisubl
pop
call
sub
in
push
or
pop
ljmp
push
xchg
aad
sub
js
pop
mov
int3
cmp
add
pop
icebp
bswap
mov
push
je
in
and
fbld
shl
movsl
les
pop
inc
cmp
push
jne
call
insl
ret
inc
jge
dec
inc
and
out
dec
xchg
mov
mov
push
xor
insl
subl
ret
dec
pushf
cmp
adc
ljmp
add
mov
loopne
lcall
lret
imul
shrl
out
test
xor
cmp
and
les
lods
xchg
aaa
mov
add
pop
push
or
cwtl
call
and
or
jge
add
add
arpl
out
dec
iret
push
mov
and
out
mov
and
jb
notb
clc
sbb
js
cmc
insl
mov
decl
mov
or
mov
mov
shrb
lds
cmp
mov
frstor
movsb
jle
cs
add
int3
icebp
ljmp
lods
adc
inc
inc
imul
push
mov
cmp
jmp
cli
and
jl
test
ljmp
jle
pusha
sub
add
push
xchg
jmp
add
pusha
add
push
aad
stos
mov
xor
pop
mov
decl
sbb
pop
xchg
add
in
mov
repz
std
aad
mov
outsb
pop
sahf
imul
movsb
sbb
push
pop
mov
dec
divl
scas
sbb
test
xor
mov
aas
xchg
scas
push
nop
fwait
cmpsl
mov
or
cmp
ficompl
shrb
shrl
mov
xchg
ljmp
sbb
pop
imul
xor
ljmp
add
xchg
sub
aam
jns
dec
mov
das
popa
xchg
cmpsb
mov
and
add
decl
or
pusha
mov
jl
inc
incl
in
mov
add
test
fs
push
ret
push
mov
push
fstl
xorl
aas
jecxz
idiv
add
push
rcl
idivb
lcall
les
aas
adc
out
xor
loop
or
sub
loop
push
mov
mov
or
subl
inc
xchg
sub
jmp
adc
enter
pushl
sub
arpl
push
in
popa
xchg
or
add
pop
sahf
leave
aad
sub
add
ret
cs
lahf
test
cmp
and
jo
scas
sub
into
adc
ljmp
call
inc
and
lds
imul
aas
out
or
push
mov
negb
frstor
dec
and
cmpsb
in
popa
jecxz
fwait
cli
xor
mov
pop
fdivs
mov
and
jecxz
dec
adc
mov
sub
xchg
in
test
sub
xor
pop
test
mov
mov
lock
ljmp
loop
adcb
scas
pop
lods
pop
pusha
pop
mov
inc
mov
cmp
sbb
cmp
adc
orl
out
or
push
clc
push
xchg
hlt
mov
sbb
add
xchg
in
inc
outsb
cmp
push
jle
xor
in
adc
sbb
sahf
inc
je
ret
icebp
aad
jle
and
mov
xor
icebp
mov
mov
notb
and
sbb
sbb
xlat
shlb
xchg
in
test
mov
and
into
add
add
jecxz
enter
push
push
popa
dec
movsb
fldenv
adc
testb
inc
or
outsb
mov
cmp
inc
or
sbb
dec
sahf
jne
aaa
add
mov
pop
xlat
cli
and
xor
fildll
stos
push
sub
mov
jne
psubsw
add
mov
mov
mov
mov
or
aam
loop
pop
pop
xchg
and
push
pop
subl
lahf
movsb
sub
push
loope
dec
into
cwtl
out
in
lahf
clc
ja
mov
push
test
xchg
sbb
decl
aam
roll
rcll
sbb
cs
push
outsl
decl
test
mov
fadd
jnp
sahf
shlb
ret
xor
decl
lcall
pop
cmp
mov
sbbl
mov
sub
mov
xor
out
and
sub
testl
cmc
sbb
cmp
je
pop
xlat
out
add
mov
dec
sti
ss
jle
int3
cwtl
bound
sbb
ss
cld
rorb
scas
mov
nop
xor
dec
in
mov
or
js
jecxz
add
lcall
xor
mov
and
xchg
rclb
add
lcall
adcl
fwait
sub
int3
test
pop
push
pop
fnstsw
out
inc
jne
lea
cmpb
pushf
loopne
clc
or
ljmp
dec
push
push
cmpsl
gs
adc
mov
les
jg
dec
repnz
sub
adc
lock
loopne
jl
ljmp
outsb
std
jl
lahf
and
mov
mov
lahf
call
fisubrl
add
pop
adcl
pop
mov
icebp
inc
add
test
sub
sub
sbb
adc
decl
lret
mov
out
jae
cmp
xor
scas
in
mov
addr16
mov
hlt
jg
stos
cltd
stc
cmp
jne
mov
enter
cmp
das
cmc
aaa
sub
dec
jmp
orb
push
sbb
pop
leave
testl
xchg
lcall
cs
pop
sahf
jae
clc
lahf
ret
dec
cmpb
inc
mov
mov
decl
icebp
mov
inc
into
push
adc
pop
cmpl
test
incb
test
jmp
outsl
cli
sahf
popa
pop
dec
adc
ja
gs
into
out
repnz
outsb
clc
mov
mulb
mov
sub
add
sarl
jle
iret
adc
nopl
test
in
dec
loope
sar
or
shl
test
imul
mov
les
loope
arpl
bound
cmc
push
rcl
fdivrl
cs
add
and
adc
mov
pushf
push
mov
sti
mov
mov
scas
xchg
es
ds
push
jge
in
ja
clc
mov
push
ret
dec
flds
pushf
xor
jns
rcr
cli
scas
dec
pusha
mov
popf
add
mov
push
add
push
or
fdivr
dec
mov
das
mov
pop
adc
ss
adcb
dec
sarb
or
push
ljmp
pushl
dec
fildl
push
call
add
xlat
push
fwait
jnp
ljmp
cs
xchg
adc
xchg
jl
add
xlat
mov
dec
inc
sbb
pop
dec
mov
add
add
mov
in
sbb
fwait
pushl
dec
inc
cli
push
sar
into
lret
mov
sbbb
add
out
xor
stos
jg
incl
outsb
aad
or
gs
roll
pop
inc
repnz
add
inc
out
es
add
or
xchg
rolb
mov
add
dec
decl
enter
mov
or
jg
cmp
inc
mov
jno
mov
dec
lock
xchg
add
push
mov
cld
inc
dec
sub
pop
lret
hlt
jns
xor
jp
sahf
jbe
popa
lea
push
repnz
fmull
cmpsb
xor
mov
andl
mov
add
jbe
cmc
add
mov
mov
jb
std
aas
ja
push
add
cmpb
pop
mov
sub
or
cld
sbb
outsl
in
clc
rsqrtps
gs
cmp
add
mov
mov
jl
shlb
sbb
ja
test
sbb
imul
lret
ja
push
mov
in
add
arpl
out
roll
jl
add
inc
push
in
inc
mov
imul
ret
push
jg
or
imul
mov
pusha
push
ds
pop
pop
cmp
mov
call
jno
mov
adc
add
mov
push
jp
mov
rorl
call
pop
lock
mov
lcall
movsb
xchg
popf
mov
addl
xchg
stos
push
cmp
popa
inc
xor
pop
hlt
cltd
lock
out
inc
mov
inc
sarb
dec
and
in
dec
and
fmuls
mov
movsl
inc
jmp
lret
into
push
add
loope
out
inc
loop
push
inc
pop
std
rorb
adc
movsb
inc
adc
pop
or
xchg
ret
or
push
add
scas
pop
add
sub
in
loopne
cli
ror
mov
mov
xor
or
or
inc
mov
adc
and
push
inc
cmp
rep
push
jno
movsl
jb
loope
add
sub
scas
xchg
inc
pop
lahf
in
xor
and
stos
adc
.byte
gs
push
add
sti
dec
mov
sbb
fs
movsl
aad
mov
pop
ret
or
pop
pop
pop
or
and
add
adc
or
ret
add
cld
pop
jmp
add
pop
adc
pop
pop
pop
ret
or
push
ficompl
jnp
pop
xor
xor
push
sub
shll
inc
adc
add
call
add
push
and
in
fucomi
incl
add
adc
addb
push
jbe
inc
add
add
mov
stc
add
or
fstpl
pusha
inc
add
sbb
mov
int3
mov
push
cmp
add
push
or
mov
mulb
adc
add
sbb
sbb
add
push
arpl
clc
add
mov
andb
or
sbb
js
test
push
adc
add
push
andb
aam
adc
stos
imul
sbb
push
adc
inc
fadd
jbe
push
pusha
add
inc
jne
xchg
add
andl
inc
fadds
or
xchg
mov
jbe
arpl
add
mov
pusha
sub
aas
shlb
mov
sbb
xor
inc
adc
sbb
mov
push
push
inc
mov
out
pop
sub
adcb
shrl
and
add
jmp
xor
out
mov
adc
add
jg
push
mov
add
movl
mov
mov
shrb
add
clc
mov
in
dec
mov
inc
mov
sti
popf
stc
push
call
sub
mov
imul
sti
mov
jle
dec
in
and
mov
or
adc
mov
fistps
xlat
mov
mov
xor
not
mov
popf
hlt
mov
roll
add
aaa
loope
rolb
jne
sub
fisubs
add
pop
fmull
fimuls
inc
dec
ret
sub
mov
lods
std
sbb
in
add
mov
stos
aam
dec
lcall
aam
ret
adc
mov
mov
js
jbe
bound
sub
jl
mov
and
sbb
mov
int
mov
gs
loop
jp
adc
std
in
fcmovnu
push
push
call
sub
les
jne
nop
insl
shl
adc
add
pusha
sbbl
inc
sti
adc
cmpl
sbb
std
cmpsb
test
out
sbb
sub
rcll
sbb
addr16
loopne
shlb
xchg
sbb
or
sub
adc
cld
mov
repnz
cld
loopne
or
fnstcw
or
lds
and
cmp
out
mov
js
sbb
jnp
jo
jne
out
jl
jnp
adc
jge
es
xor
es
xorl
and
mov
aaa
daa
js
add
in
or
fstpt
dec
push
in
sub
dec
jns
pop
inc
or
sbb
dec
lock
cwtl
not
es
push
mov
pop
sbb
test
out
push
mov
mov
pop
push
pextrw
aas
icebp
push
sbb
mov
inc
sti
aas
ret
in
mov
sbb
jecxz
jb
lea
inc
and
addr16
hlt
out
add
push
inc
mov
in
or
or
pop
rcrl
rolb
push
jge
mov
xchg
jge
add
out
mov
imul
ret
roll
pop
xor
rolb
out
jl
sub
add
adc
xor
shlb
xlat
movb
jmp
inc
dec
add
xchg
sub
mov
stos
sbb
test
movsl
pusha
aad
sbbb
inc
mov
out
add
fmuls
adc
mov
aad
fisttps
and
fldcw
xchg
adc
pop
in
add
mov
add
in
scas
adc
pop
xor
packuswb
jo
clc
ret
icebp
neg
xchg
imul
sbb
and
xor
add
andl
nopl
mov
jbe
mov
js
jmp
push
fwait
sub
movsb
jl
mov
xchg
xor
cld
int3
adc
loopne
xor
dec
sbb
xor
sbb
roll
arpl
mov
mov
notb
imul
inc
data16
imulb
adc
pop
mov
mov
divl
stos
mov
ret
das
test
loopne
add
xorl
or
xor
push
scas
js
popf
inc
cmpsl
mov
nop
jo
loopne
sbb
test
mov
push
mov
inc
cmpsl
add
nop
shl
inc
push
mov
int
inc
or
mov
repnz
fucomi
jmp
pcmpgtw
or
test
xchg
arpl
ret
jp
inc
andl
je
mov
or
enter
stos
inc
add
cmpsb
iret
mov
out
enter
adc
cld
push
cld
pusha
pop
rorl
inc
lahf
adc
sub
cmp
test
and
les
xor
add
jb
pop
testl
orb
add
sub
bts
or
les
lock
scas
pop
lock
dec
push
dec
mov
inc
push
icebp
aas
sbb
cmp
pop
jb
lock
add
pop
or
and
sbb
fcmovnu
scas
dec
sbbl
dec
cld
rcl
mov
outsb
idivb
lock
or
mov
inc
adc
out
popl
lock
add
popa
mov
push
js
or
orb
sbb
sbb
cs
sub
enter
aas
mov
jo
add
ret
mov
sbb
loopne
popa
mov
pop
cld
adc
shll
js
and
in
es
jge
adc
jp
rolb
xor
or
aaa
sub
jl
fadds
mov
lcall
and
lds
pusha
adc
out
pop
sti
cltd
push
gs
js
dec
lret
mov
and
or
lock
jo
in
dec
xor
roll
pop
or
add
rolb
cld
xor
mov
repnz
pshufw
into
push
push
mov
arpl
jae
xor
jp
jle
faddl
icebp
push
lret
mov
add
inc
xor
sub
and
rorb
mov
inc
adc
lock
dec
neg
inc
jmp
inc
adc
pop
cld
int
mov
xor
sub
fildl
test
incb
ljmp
jmp
mov
jae
push
enter
add
sbb
rcll
adc
mov
adc
pop
sbb
or
fwait
mov
add
xor
inc
lock
adc
int3
mov
imul
adc
mov
sbb
test
sub
inc
mov
adc
and
add
shll
sbb
sub
mov
js
pop
or
mov
xor
mov
repnz
pop
popa
std
or
out
mov
xor
add
loopne
ficompl
jo
sub
or
pop
pop
icebp
cmp
mov
cmp
loopne
mov
push
xor
push
sub
repnz
push
outsb
or
adc
rorb
in
arpl
dec
add
fisttps
or
ja
add
fildl
pop
mov
shlb
leave
xchg
testl
lds
in
stos
push
jl
pusha
or
mov
lea
icebp
jg
daa
or
bound
push
sub
cltd
sbb
cmpsl
lret
stc
add
inc
lahf
in
sub
or
mov
mov
jne
push
lea
pop
or
add
mov
pop
jl
frstor
loopne
loope
pop
sysenter
cmp
int
rorl
ss
mov
adc
inc
dec
roll
xchg
gs
dec
sahf
lahf
mov
adc
orb
xchg
add
addr16
shl
push
adc
stos
cld
lahf
push
stos
and
seta
push
push
fimull
xor
outsb
mov
cmpsl
fwait
dec
push
loop
pop
xor
xchg
sets
mov
int3
sbb
and
nop
mov
dec
dec
xor
neg
inc
popf
dec
dec
in
repz
and
or
arpl
cmp
add
nop
and
test
mov
clc
cmpsb
add
in
add
sbb
sub
addr16
add
fmuls
outsl
lcall
aaa
ret
dec
push
jne
xor
xor
inc
mov
arpl
aad
subl
in
aam
out
inc
hlt
mov
sub
adc
mov
rolb
and
in
clc
xchg
add
adcb
jg
test
frstor
adc
sbbb
push
or
sbb
push
das
test
dec
sbb
jecxz
mov
mov
ds
ror
outsl
adc
je
xchg
clc
pushf
in
cmp
sub
dec
xchg
add
loopne
push
add
ret
jmp
cmpsb
lds
ljmp
sbb
xchg
add
xchg
xchg
test
jge
pop
lock
jne
shlb
in
adc
jns
mov
xor
mov
shll
sbb
adc
or
addl
add
lret
jl
dec
imul
clc
hlt
incb
aas
push
hlt
jg
jl
inc
test
ret
xor
cmpsb
jnp
sub
add
shlb
cmpsl
je
xor
popa
mov
ret
lret
xor
bound
jo
mov
mov
xchg
outsl
mov
adc
inc
jp
ss
jne
xor
xlat
enter
jmp
fidivrl
icebp
fisubs
push
test
mov
ficoml
cmp
movsb
je
dec
mov
xlat
dec
loop
bswap
mov
cs
mov
les
or
stc
mov
idivl
ret
mov
xlat
jmp
loopne
icebp
roll
pop
stos
dec
loop
jnp
scas
invd
jle
and
out
mov
aam
inc
pushf
fbstp
push
aaa
lcall
cmp
clc
fdivl
xor
xor
hlt
adc
scas
mov
push
roll
call
xchg
call
rcr
inc
das
xor
mov
add
jp
add
test
jb
data16
xchg
mov
push
mov
clc
adc
lret
stc
pop
cs
inc
dec
add
aas
jb
hlt
add
mov
inc
dec
jmp
adc
repnz
fisttpll
inc
jb
push
dec
adc
cld
cli
sti
and
push
sub
xor
cmp
jb
insb
shlb
xor
inc
daa
loope
pushf
mov
jp
imul
dec
aas
cmp
mov
ljmp
movl
repz
mov
iret
arpl
jp
sub
test
ja
add
shll
jbe
out
jne
mov
int3
out
inc
lock
push
adc
in
cld
cmp
jno
clc
dec
aam
in
test
ja
clc
jo
add
cltd
je
nop
mov
jmp
push
repz
mov
add
inc
paddusb
push
xchg
add
push
popa
mov
ds
int3
cs
aam
pop
or
jmp
das
xor
mov
add
loope
jmp
and
in
js
nop
dec
fnsave
scas
out
xchg
sub
cltd
repz
jmp
call
xchg
mov
xor
xchg
dec
rol
jge
stc
inc
mov
mov
mov
cld
lea
clc
add
push
adc
mov
lods
jle
call
inc
push
insb
shl
daa
lea
loopne
loop
dec
sbb
lret
or
lock
adc
daa
xchg
xchg
fwait
cli
mov
fwait
je
repz
xchg
aam
and
cld
cli
data16
jmp
stos
add
adc
leave
ret
jo
xor
lahf
pop
push
sbb
and
bound
jnp
xor
jnp
fwait
sbb
ja
stos
jg
adc
call
sti
into
pop
adc
movb
or
loope
in
jbe
and
jmp
out
jne
negb
enter
mov
jle
rcll
jp
pusha
daa
divl
push
cmp
addl
or
ds
out
and
sti
roll
mov
popa
push
jg
pushf
xchg
adc
in
imul
inc
inc
inc
mov
xor
mov
addr16
dec
or
push
mov
es
faddl
into
decl
sahf
lds
mov
andb
sbb
cmc
test
imul
sub
stos
fidivrs
jno
xor
lahf
mov
mov
cmp
subl
out
or
xor
add
nop
sbb
push
mov
inc
lods
mov
out
sub
mov
stc
dec
std
test
mov
fistpl
sarl
adc
cltd
test
gs
popa
out
xchg
fisubrs
mov
jnp
imul
cmp
sbb
psubq
insl
jns
stos
xchg
out
jle
hlt
addl
testl
jmp
inc
adcb
mov
nop
add
mov
fdivs
shlb
movb
fbld
adc
cmp
roll
decb
or
sbb
pop
xlat
mov
pop
add
mov
sbb
xor
movsl
adc
movsl
out
sbb
aad
repnz
negl
mov
pop
adc
mov
ror
ljmp
lock
inc
sahf
icebp
cs
dec
jo
enter
push
ljmp
aaa
sbb
jnp
popa
pop
ljmp
comiss
mov
mov
mov
shlb
inc
jno
aas
sbb
or
dec
testb
or
shlb
lock
add
mov
fsubrp
jno
test
mov
push
dec
or
dec
in
fcomps
pop
mov
repnz
adc
jmp
loope
push
mov
sbb
jg
push
xchg
adc
nop
pop
adc
popa
clc
jno
lahf
or
rcrl
stc
clc
mov
xlat
in
jl
cmp
mov
and
push
fadd
add
ja
jmp
adc
push
jl
lock
push
xor
push
mov
pop
or
enter
jmp
jno
andl
dec
call
dec
lods
mov
jmp
mov
hlt
fmull
adc
mov
sbb
jae
dec
or
push
test
inc
test
ljmp
lds
sub
xor
cmp
loop
shll
jb
lock
stos
xlat
push
add
sbb
or
aas
jle
mov
shrb
loopne
es
and
pop
xchg
sub
rcrb
loopne
roll
fmuls
nop
loope
xor
adc
xor
loope
or
dec
mov
inc
out
shlb
jo
mov
or
jp
sub
mov
push
push
pop
sbb
lock
imul
push
daa
mov
mov
dec
sbb
xor
cmp
dec
mov
hlt
clc
dec
aas
popa
mov
dec
add
js
sub
cwtl
push
aaa
mov
out
jmp
pop
ja
jmp
push
test
cli
push
cltd
adc
in
js
inc
daa
lds
lock
mov
inc
rcrl
out
push
fmuls
adc
sbb
jle
adc
xchg
pop
mov
xchg
sbb
mov
scas
insl
repz
sbb
lahf
pop
add
mov
sub
push
mov
mov
in
imul
gs
call
add
fucomp
pop
pop
add
ljmp
sub
rol
or
inc
sbb
rol
sbb
push
sbb
mov
mov
sbb
sahf
push
iret
xchg
cmp
in
mov
cmp
dec
nop
add
repnz
shl
repnz
inc
cmc
pop
addr16
stos
scas
xchg
ret
add
xor
add
inc
inc
addb
mov
mov
push
inc
add
or
cli
pushl
push
jl
push
dec
cld
push
call
mov
mov
mov
or
push
lret
xor
xchg
sub
push
jmp
sub
and
mov
add
shr
mov
scas
jb
rep
leave
sub
xor
adc
scas
sahf
es
mov
inc
jne
clc
pop
dec
mov
jp
test
ljmp
jp
inc
jmp
or
inc
lret
jle
dec
sbb
imull
push
adc
add
leave
add
and
add
inc
lock
adc
pop
sti
jge
hlt
or
negl
add
push
sbb
stc
xor
dec
in
hlt
test
or
inc
dec
cwtl
out
sub
inc
push
fldl
sub
and
xchg
call
mov
mov
test
imul
adc
cld
in
ja
inc
pusha
inc
xchg
fcompp
scas
orl
ficoml
adc
adc
or
sbb
cmc
hlt
dec
adc
add
cmp
dec
or
scas
push
mov
sbb
push
outsb
jae
and
jmp
mov
ret
jle
inc
enter
addl
arpl
sbb
jp
cmp
dec
enter
je
sub
mov
add
std
roll
mov
jp
in
add
cmp
dec
and
roll
scas
loopne,pn
inc
mov
stos
jo
push
xchg
test
stos
push
fucom
movsb
sarb
out
into
out
iret
lea
push
shl
xor
mov
ljmp
ficomps
jbe
or
push
int3
inc
jl
loopne
rorl
or
das
fwait
dec
cmp
fbstp
mov
int
mov
push
movsb
shlb
sbb
jo
adc
and
sub
xor
xchg
push
pop
fnstenv
mov
sbb
push
sub
shlb
pop
and
rolb
jl
add
push
faddl
mov
filds
shrl
outsl
sub
push
add
add
xor
lret
cmc
jg
mov
inc
dec
sub
mov
rcrl
lcall
inc
fmull
js
fs
out
mov
mov
and
mov
add
jmp
into
jae
out
and
xor
dec
xor
lahf
adc
mov
inc
jecxz
es
jecxz
cmp
fnstcw
push
icebp
test
mov
scas
inc
mov
jo
pushf
inc
sbb
sbb
push
popa
xchg
push
lds
jl
xchg
add
mov
inc
and
mov
and
push
dec
pop
or
sti
ljmp
fs
adc
push
sbb
adc
mov
mov
xor
cmp
jne
movsb
add
mov
test
pop
add
jnp
add
int3
pop
fistpl
call
fists
hlt
add
xchg
mov
orl
xor
pop
inc
and
cmp
pop
sbb
aad
cmpsb
adc
lret
sbb
cmpsb
ss
push
add
add
push
xor
push
mov
xchg
sbb
xchg
adc
xchg
lods
shll
rolb
cmp
add
loop
add
mov
clc
push
jne
mov
call
stos
pop
sub
or
enter
fdivs
dec
sub
or
in
push
filds
loope
mov
or
test
or
fsub
mov
cmp
jno
fcomps
push
test
loopne
enter
add
ja
loope
add
call
cli
or
call
fwait
or
fmuls
or
xchg
fildl
imulb
movl
mov
add
xor
testl
js
test
sbb
jecxz
ljmp
pop
int3
xlat
add
xchg
into
fs
jle
xchg
or
jae
xor
mov
or
test
add
mov
mov
inc
sbb
addr16
and
xor
ret
dec
xor
scas
sbb
add
imul
lods
mov
pusha
andb
jbe
arpl
add
mov
dec
inc
in
lea
fwait
icebp
jmp
shlb
fldl
cmp
jl
sbb
int3
pop
jmp
adc
xlat
loope
js
mov
sti
rcl
sbb
jg
sbb
and
mov
xchg
or
sub
add
pop
dec
lea
cmp
cmp
pop
push
arpl
outsl
loope
test
mov
fucomip
in
push
push
push
push
call
mov
out
in
adc
fmul
lods
push
cmp
mov
test
mov
or
ret
rcr
mov
dec
sub
fadd
aaa
push
or
jno
and
nop
or
enter
mov
lret
sub
mov
mov
inc
inc
and
mov
loopne
inc
mov
adc
or
arpl
adc
dec
sbb
add
adc
rcl
sbb
xor
jg
xor
sub
mov
hlt
dec
push
stos
xchg
xchg
cmc
pusha
hlt
inc
stos
xchg
sub
aad
pop
out
sarb
adc
into
test
iret
out
andb
aaa
int3
addb
shll
fldz
ss
jns
das
add
add
or
pop
cmp
shrb
bnd
shr
pop
sahf
orl
jne
or
jp
roll
mov
jno
mov
xchg
mov
les
fucomp
jbe
out
popa
ret
dec
bound
sbbl
out
fldcw
in
lock
ss
loopne
adc
or
adc
and
adc
aas
inc
ds
mov
stc
or
loop
mov
or
inc
push
popa
add
sub
adc
mov
mov
jmp
inc
loope
cmp
out
in
inc
and
insl
mov
sub
test
loopne
or
cmovnp
mov
and
push
sbb
sub
cwtl
insl
int3
je
sub
cli
push
ljmp
ret
pop
sub
jnp
sbb
pop
addl
fs
shll
push
fcmovu
sar
lods
mov
inc
rorl
sar
add
xor
in
inc
cmc
pop
pop
ljmp
stos
add
imul
ret
popa
daa
movsb
sbb
lock
sub
and
dec
fiadds
rolb
cmp
sbb
in
cmp
dec
jae
rcrl
add
aam
adcl
cltd
neg
adc
xchg
or
movsl
or
adc
jb
xor
add
jae
inc
lahf
into
push
filds
inc
jmp
divb
loope
push
xchg
sub
sbb
cmp
popl
shll
decl
fidivrs
mov
xor
and
xor
lods
xchg
xlat
lret
or
arpl
js
adc
inc
clc
cmp
out
nop
push
lock
adc
sub
mov
popa
test
push
cmpsb
pop
sub
hlt
daa
mov
arpl
sbb
stos
inc
adc
test
lods
xchg
dec
mov
jb
jecxz
or
pop
icebp
add
push
lea
push
push
outsl
rolb
call
dec
insl
scas
xor
add
fstpl
sbb
mov
lahf
push
in
dec
in
adc
orb
and
adc
cmp
faddl
scas
sub
icebp
push
mov
jb
jecxz
add
xlat
push
adcl
in
push
adc
rolb
shll
ret
aaa
outsl
pop
jge
hlt
add
ja
push
adcl
mov
inc
and
dec
jmp
call
xlat
inc
rclb
sub
push
sub
ljmp
sub
loope
mov
inc
sub
mov
arpl
out
out
adc
dec
fcoms
imul
dec
in
xchg
jge
push
mov
aad
sbb
sub
xchg
cmp
cmp
jns
add
insb
jne
ficoms
push
sub
aas
hlt
add
lods
in
ljmp
xchg
pop
pop
outsb
push
add
int3
negb
sbb
push
adc
jmp
sbb
mov
or
inc
jle
pop
out
lock
mov
clc
mov
fcmovnbe
xlat
addb
icebp
je
pop
jo
sbb
enter
mov
xor
jl
fisubrs
loop
xor
jp
push
sbb
adc
roll
popw
mov
cld
and
cmp
xchg
pop
add
icebp
jbe
inc
je
or
pop
in
stos
sarb
cs
pop
pop
call
push
mov
scas
aam
and
jo
sub
movsb
es
jmp
add
jo
mov
push
or
mov
pop
test
sahf
and
pop
ficoms
repz
es
shlb
xor
mov
inc
sbb
mov
std
mov
add
pusha
sub
cmpsb
inc
bsr
jno
ja
adcl
xchg
push
push
hlt
and
adc
das
cmp
xor
shlb
xchg
push
push
sub
add
mov
and
jg
and
pusha
ret
data16
test
popa
dec
test
and
cmpl
xchg
cmp
jbe
repnz
push
or
add
mov
xchg
pop
popa
test
push
cmp
sub
lock
add
mov
xor
mov
push
jbe
jmp
adc
ret
add
xor
je
daa
inc
push
sbb
andl
cmp
jbe
mov
sbb
and
sbb
mov
fildl
dec
inc
mov
ret
insb
add
mov
add
fmul
int3
adc
cmp
ret
dec
je
imul
jp
lods
lock
add
jge
dec
inc
js
ret
xchg
and
cmpb
rorb
ss
call
filds
sahf
sbb
add
push
jge
sarb
mov
adc
mov
cmp
data16
ds
test
sahf
xor
mov
stos
lock
shll
fiadds
hlt
push
test
inc
jmp
mov
mov
cmpsb
pop
sbb
adc
xor
in
and
jmp
cmpsb
or
mov
adc
rcrb
add
add
xchg
das
loop
and
add
push
dec
test
fistl
cld
sbb
jo
dec
xchg
aam
test
hlt
fcoms
ljmp
add
and
xor
fmuls
push
je
faddl
ds
fdiv
je
sub
add
or
mov
orl
xor
push
test
jno
mov
cmpsl
jo
aas
clc
jae
inc
inc
sub
sub
dec
or
and
sbb
push
jecxz
aam
sub
xchg
js
sbb
or
in
aam
sbb
and
jecxz
push
shl
ficomps
dec
mov
add
xor
fcompl
bound
scas
jb
gs
jecxz
jo
cmc
test
rolb
sarb
xor
jae
mov
roll
add
int
test
add
cmp
mov
fisubrs
shrb
add
dec
iret
mov
cmp
jo
or
jnp
fistpll
loop
mov
bound
jl
insb
shll
insl
adc
sub
shr
mov
sarb
hlt
and
or
insb
or
imul
subl
mov
xor
or
sbb
mov
movsl
arpl
je
mov
in
call
inc
inc
sub
and
mov
dec
data16
cmp
pushf
jo
sub
xchg
mov
stos
add
outsl
int3
fldl
xor
cmp
lret
lret
or
mov
and
jmp
fcomps
cld
push
popf
dec
fwait
mov
movsl
mov
addb
rcrl
cmpsb
inc
cltd
xor
add
or
call
int
mov
pop
inc
test
pop
fimull
enter
sbb
jmp
insl
add
cs
addr16
dec
ds
sahf
int3
lock
out
js
pop
ficoml
mov
cmp
xchg
enter
pop
sbb
loope
pop
or
push
add
fpatan
cmove
add
pop
dec
test
mov
shrl
xor
out
xlat
inc
cmp
cmc
int3
cmpsl
mov
inc
loopne
call
clc
add
pushf
pop
mov
sub
jne
jo
adc
sbb
sti
pop
out
jno
sub
xor
mov
dec
xchg
fcomps
clc
lret
loopne
stc
movsb
adc
es
push
push
push
mov
and
ret
lahf
shl
or
pop
dec
and
aas
popf
pop
rcl
movsb
sbb
enter
mov
ret
out
mov
movsl
push
dec
xchg
cmpsb
xor
ljmp
enter
pushf
adc
std
pop
test
jg
and
add
pop
dec
inc
jl
push
push
sbb
xor
add
sbb
and
pop
jmp
aas
push
cli
ljmp
andl
sti
sbb
sbb
and
jb
pop
in
xchg
jo
sub
mov
lea
pop
icebp
std
add
push
jmp
pop
jp
push
xor
inc
add
fwait
js
ds
je
or
add
cmpsl
pop
jmp
sbb
push
loope
mov
jle
outsb
sub
les
jo
lahf
push
ja
add
pushf
push
or
adc
cmp
dec
out
in
js
dec
pcmpgtd
popl
mov
pop
inc
cmp
mov
clc
scas
adc
jp
rcrb
clc
jmp
lea
mov
xchg
inc
xchg
sub
xor
cmp
or
andl
add
add
pop
add
sarb
fsts
and
mov
pop
cld
je
outsl
mov
or
xchg
in
popf
jno
cmp
and
loope
xchg
adc
das
xor
and
or
fiadds
sbb
clc
jg
pushf
or
xor
adc
sub
sti
dec
out
adc
in
imul
cld
sub
movsl
iret
fisubrl
jmp
loope
sbb
les
pop
add
add
sbb
xor
pop
adc
cmp
cltd
outsb
adc
adc
mov
sub
jb
sub
mov
inc
mov
mov
aas
popf
clc
mov
decl
pop
inc
mov
mov
insb
test
inc
aam
arpl
pushl
es
fldenv
rcrb
sbb
adc
out
xchg
mov
das
shr
mov
push
xchg
icebp
ljmp
inc
jmp
mov
ret
and
dec
sub
jmp
aam
pop
les
mov
cmp
sbb
ret
jg
inc
or
add
pop
inc
cltd
es
test
pop
lock
adc
add
jbe
or
imul
in
ss
add
add
add
cmp
push
call
cmp
jp
mov
lcall
lds
jl
roll
adc
aad
cmp
mov
pop
jnp
push
fcoms
cld
mov
pop
clc
js
mov
or
add
sub
test
xchg
pop
cmp
out
ja
add
ret
mov
pop
sbb
or
mov
adc
or
pop
or
jge
dec
xor
or
xchg
rorb
cmp
inc
xor
sbb
lods
sbb
sarb
test
push
shrb
pop
aaa
or
mov
lea
notb
inc
pop
pusha
or
mov
pop
pop
xor
lock
cmpb
clc
xchg
xor
imul
lods
push
and
sbb
rolb
and
fdivrl
mov
jb
out
arpl
insl
cwtl
jge
rorb
mov
aaa
bound
popa
movsl
jno
cmp
mov
and
xlat
jbe
inc
scas
adc
cli
xor
roll
mov
aad
or
jmp
pushw
popf
xchg
jne
in
imul
push
push
test
shlb
dec
sbb
and
test
adc
shlb
orb
negl
inc
and
pushf
add
daa
aad
adc
loop
insl
rcrl
lea
cmpsl
push
fcoms
imul
push
jbe
out
adc
push
ret
loop
orl
nop
mov
stos
adc
adc
lds
cmpsb
test
andb
mov
pusha
fwait
push
and
icebp
push
fwait
mov
shlb
es
xchg
pop
mov
enter
test
inc
push
xor
xor
pop
jb
or
lock
fistpll
insl
push
dec
aas
sbb
jmp
xor
fsubrl
repz
out
in
pop
loopne
je
dec
jl
sub
jg
enter
add
loope
das
into
mov
mov
aas
cltd
push
and
cmp
sbb
add
sub
pop
add
mov
rorb
out
sub
mov
js
and
out
mov
push
mov
repz
inc
cmp
add
outsb
xchg
fstpt
lds
fdivrl
jecxz
mov
and
inc
sbb
push
inc
or
or
test
in
sbb
ds
aam
sbb
adc
jl
lds
jg
push
and
rolb
bnd
pop
pandn
in
xchg
shl
aam
inc
sub
movsl
fcomps
sub
mov
add
adc
adcl
iret
in
inc
aas
xor
dec
mov
sbb
or
add
add
int
sarl
push
ljmp
sbb
sarl
sbb
inc
and
mov
loopne
push
push
sbbb
cmp
or
sti
loopne
adc
dec
sub
dec
sbbb
cmp
mov
adc
aaa
sub
popf
test
xor
ret
addr16
test
pop
popa
xor
popf
push
pop
xor
xchg
mov
addr16
inc
mov
cmc
fdivrl
mov
lea
std
aaa
fildl
jne
inc
sbb
jne
push
push
clc
sbb
das
or
cmp
das
loope
test
mov
in
jns
add
jmp
add
add
mov
fbstp
cmp
insb
or
cmc
shl
adc
call
add
clc
dec
add
push
jmp
fcmovnu
clc
mov
inc
stc
popa
sbb
idivl
add
rorb
push
or
adc
and
mov
std
push
xor
mov
fwait
dec
or
pushf
repnz
js
fdivr
jne
enter
pusha
lods
xor
add
pop
jecxz
cmp
jl
lods
fildl
loope
pushf
out
fsubr
imulw
bound
imul
mov
cld
and
addb
xlat
sub
xor
daa
sub
sbb
clc
dec
xchg
push
jmp
xchg
mov
in
jmp
hlt
outsb
inc
sbb
rcrb
out
clc
inc
pop
xchg
pop
stos
js
add
push
cmpsl
fbld
popf
dec
adc
jbe
xor
fs
jecxz
add
fcoms
pop
add
ret
or
stos
push
push
mov
addb
push
call
lock
lds
dec
iret
cmp
test
in
jae
lds
test
add
fmull
add
jl
add
pop
in
push
in
dec
or
test
fstpl
fistps
xchg
add
and
jmp
mov
movsb
add
shll
sub
aad
xor
sbb
ljmp
lock
add
lret
test
mov
stos
fidivrl
ret
test
jne
outsl
mov
sbb
pop
push
jecxz
cmpb
shrl
jbe
push
sub
mov
inc
jb
sbb
rolb
pop
mov
lret
xor
inc
insb
xchg
xchg
ret
repz
pop
inc
xor
sub
outsb
jmp
mov
xchg
or
jo
notb
sub
or
xchg
mov
ljmp
lds
add
mov
pop
lahf
sbb
adc
flds
test
add
lock
jno
cmp
lods
sub
mov
insb
int3
push
or
idiv
jl
pop
pop
inc
fidivl
add
out
and
push
cld
jg
inc
aad
push
mov
jnp
test
pop
dec
add
and
or
loope
inc
fcoms
mov
jbe
hlt
add
push
mov
dec
sub
lock
loop
outsb
and
cmc
jp
or
push
addr16
inc
pop
cwtl
shll
out
lock
gs
inc
add
in
stos
or
add
sub
dec
jmp
mov
mov
fnstcw
ds
pop
xlat
xchg
jmp
push
fs
adc
call
xchg
jne
cmp
and
arpl
out
fiaddl
jo
clc
in
mov
shll
pop
mov
dec
fldcw
arpl
stc
jl
push
xchg
push
in
pop
sub
xchg
mov
xchg
shll
push
mov
js
cwtl
xchg
dec
or
add
xor
lock
xor
cmp
in
dec
jmp
lock
icebp
add
push
and
mov
add
div
mov
sbb
push
inc
mov
imulb
adc
mov
and
and
add
mov
mov
and
push
std
and
add
adc
adc
test
adc
fldt
movb
inc
mov
lock
add
pop
loopne
add
aas
out
les
xchg
push
jmp
fsubs
out
pop
adc
rorl
clc
push
jne
xor
inc
jmp
aaa
lock
fldl
jmp
das
scas
mov
gs
xchg
into
andb
push
in
nop
scas
and
stos
sbbb
clc
fildl
inc
jmp
sub
dec
push
es
fidivrl
ss
ficoml
adc
pop
mov
dec
jmp
mov
out
dec
mov
leave
scas
fiaddl
das
jbe
xchg
push
mov
inc
xchg
adc
loope
rol
sahf
test
pushf
inc
lret
jae
pop
xor
and
sbb
jae
int
adc
arpl
fmull
data16
or
or
outsb
adc
mov
inc
fldcw
movsb
subl
inc
inc
icebp
rorl
and
or
jo
pushw
ss
push
adc
xchg
fmuls
push
push
ss
loopne
mov
das
pop
fimuls
pop
push
xchg
cmp
in
sbb
adc
cwtl
adc
and
daa
dec
and
lcall
dec
pop
xlat
push
push
ljmp
sbb
dec
mov
push
fsubr
cld
mov
clc
dec
ljmp
js
loop
push
in
les
adc
sbb
and
dec
inc
or
movsl
scas
movl
cwtl
ds
mov
mov
cli
outsb
pop
jo
dec
adc
add
into
add
sahf
cmp
syscall
adcl
xchg
sbb
sbb
lods
jle
add
fisubs
xor
jle
orb
inc
aam
cmpb
and
jo
jne
xor
lods
out
pop
mov
int3
fnsave
push
shll
jg
jo
out
or
outsl
lock
xchg
mov
push
or
xlat
stos
ss
mov
cmpl
add
in
mov
enter
xor
and
cmp
dec
lahf
pushf
clc
ja
push
mov
fistps
sbb
test
mov
dec
mov
shrl
mov
add
sbb
dec
sbb
out
paddw
ret
dec
fwait
aaa
aam
pushf
les
and
ret
and
je
aad
inc
arpl
adc
lahf
pusha
mov
mov
ficomps
cld
push
lock
fisubrl
xchg
sbb
and
js
cmpsb
outsl
fisubrs
mov
rcl
int3
xchg
xchg
ret
jno
jl
incb
pop
adc
sbb
adc
fimull
in
xor
or
pushf
addl
out
stc
loope
add
pop
push
sbb
push
mov
add
dec
xlat
iret
std
out
and
xchg
and
add
or
rorl
add
dec
in
cmpsb
push
jge
lcall
and
inc
inc
add
scas
push
movsb
insb
adc
mov
xor
mov
inc
and
out
or
inc
sub
push
mov
inc
mov
push
mov
cmc
test
fdivrs
jge
sub
sub
shrl
or
push
fnstcw
loop
fsubl
add
ljmp
or
loop
pusha
pop
mov
inc
and
in
pushf
xor
sub
add
cltd
clc
mov
jl
das
icebp
into
lds
jb
add
mov
in
inc
mov
rolb
mov
jno
das
arpl
repnz
adc
mov
inc
fmull
add
and
pop
inc
add
stos
arpl
jle
mov
cmp
adc
mov
and
inc
into
addl
ficoms
xlat
or
mov
jno
mov
jge
cmpsl
pop
sub
out
xacquire
addb
mov
adc
sbb
and
cs
test
outsl
out
or
add
xchg
mov
rcrb
sbb
hlt
out
pop
push
dec
sbb
jge
imul
xchg
sub
xchg
bound
pop
mov
mov
daa
insb
dec
int
lds
pop
sbb
add
movb
mov
sub
repnz
inc
pop
in
idivb
in
add
stc
fildl
inc
push
adc
inc
cmp
aas
loope
shl
fcomip
rolb
add
sub
jmp
stc
jbe
push
cmp
adc
push
rol
adc
cld
in
xor
aam
sub
xor
mov
push
popa
dec
push
or
xlat
push
push
ret
pushf
movsl
enter
cli
or
inc
sbb
push
cmp
dec
push
pusha
inc
sbb
ret
insb
cmp
jb
push
insl
add
adc
scas
ja
out
xchg
hlt
pop
pop
sbb
jmp
push
jmp
addl
push
or
movsb
loopne
in
js
sub
adc
mov
js
repz
sub
mov
aaa
jne
and
jns
cld
sub
xor
icebp
add
loope
pusha
hlt
mov
in
repnz
sub
xor
leave
dec
ss
xor
lock
adcb
xchg
rol
sbb
push
movsl
and
pop
jae
jne
mov
push
dec
inc
loop
into
fimull
cli
mov
outsl
sub
loop
add
movsb
mov
outsb
inc
inc
inc
ret
leave
shrb
ret
adc
sbb
dec
xchg
and
mov
shl
pop
sbb
adc
pop
js
pop
cmpsb
iret
loop
arpl
sbbb
jae
cmc
ja
mov
pop
nop
fisubl
adc
mov
mov
sbb
pop
add
orb
sbb
adc
cld
loopne
data16
cwtd
ret
aaa
iret
add
inc
roll
outsl
dec
add
cmp
stc
fldenv
or
ljmp
and
inc
sbb
sahf
cmp
dec
mov
xchg
sbbb
iret
mov
mov
adc
loop
push
loop
mov
lock
xor
add
cltd
mov
mov
jae
pusha
xor
push
hlt
add
mov
and
addl
xrelease
or
inc
xor
pop
cmp
add
int3
std
xor
fcomp
test
push
jbe
mov
sbb
mov
pop
daa
dec
in
sub
hlt
mov
mov
and
add
inc
movsl
nop
dec
js
insb
add
add
sbb
or
rcrb
dec
push
cmp
mov
rcr
decb
sbb
cltd
ret
mov
push
das
or
ljmp
push
and
push
mov
icebp
mov
push
in
test
lock
imul
mov
pop
mov
sbb
xor
iret
dec
decl
loopne
push
add
ljmp
in
test
not
inc
pop
jmp
xor
test
add
in
mov
add
adc
aas
lcall
jle
push
and
jp
jmp
sub
xchg
push
lods
sbb
repnz
pop
mov
mov
lds
cmp
loopne
movsl
sbb
pop
sti
xchg
bound
push
push
mov
add
stos
mov
mov
and
mov
outsl
cwtl
dec
xor
pushf
xchg
lret
ret
add
pop
or
add
mov
dec
loopne
jo
jecxz
imul
inc
or
xchg
bnd
dec
pusha
or
add
jl
das
imul
or
sbb
mov
sahf
aam
pop
mov
int3
cmc
cmpsb
mov
ret
enter
inc
push
lret
shll
push
sub
scas
mov
pusha
pop
cmp
add
add
insl
jne
arpl
mov
imul
sbb
in
call
mov
push
mov
push
mov
sbb
dec
mov
lret
jle
mov
lret
xor
sbb
movsl
cwtl
and
je
inc
dec
jns
insl
add
sbb
gs
push
dec
jnp
mov
sbb
jbe
aaa
mov
fwait
xchg
mov
mov
push
xchg
sbb
xor
test
loop
inc
and
or
dec
bound
popf
rol
xchg
movsb
push
sbb
mov
add
jb
inc
adc
jnp
dec
orl
xchg
lock
or
pop
lea
fists
pop
jge
nop
sbb
pop
mov
push
test
xchg
aam
sbb
mov
fwait
jo
add
js
mov
scas
out
dec
mov
aaa
dec
lcall
rcr
push
imul
sbb
mov
mov
mov
add
shlb
sbb
adc
mov
pushw
push
lods
jmp
jmp
add
xlat
add
adc
cmpsl
xchg
mov
sbb
xor
push
cmpsl
das
pop
les
mov
lahf
mov
push
or
mov
add
orb
jo
dec
jmp
test
jae
xchg
imul
scas
cmp
flds
fsubrs
and
cmpsb
movsl
dec
sbb
into
mov
xchg
adc
mov
ret
fbstp
cmp
loop
dec
test
in
inc
inc
sub
dec
inc
stos
sarb
mov
sti
push
mov
mov
fcomps
adc
int3
mov
inc
mov
cmpsb
mov
add
aam
or
pop
and
sbb
push
xor
mov
int3
push
iret
ljmp
mov
repz
rolb
mov
mov
add
sub
pop
mov
je
push
lods
dec
call
or
hlt
addr16
rolb
fiadds
jle
ret
jmp
mov
loopne
out
and
add
pop
sbb
dec
jo
mov
je
mov
ja
sbb
cmp
ret
push
xchg
loope
cmp
orps
insb
aam
nop
mov
sbb
aas
dec
loopne
data16
adc
fwait
xchg
sbb
or
mov
adc
or
rolb
sub
add
movsb
int3
mov
push
fidivl
aas
shlb
jnp
xor
sbb
dec
sub
sub
mov
mov
adc
or
shlb
adc
lock
rcr
mov
fwait
mov
std
xor
adc
push
clc
add
bound
or
sbb
test
ret
push
test
mov
inc
push
sbb
adc
cmc
inc
loop
xchg
les
mov
je
imul
cwtl
incb
hlt
adc
in
adcb
fldl2t
nop
dec
pop
jne
jbe
adc
lea
call
cwtl
aam
xor
fidivs
int
rolb
outsb
sub
imul
cmp
test
popf
test
mov
rcrb
loope
mov
stc
notl
xchg
pushf
fistpl
sbb
addr16
inc
jge
inc
push
mov
fcoms
add
loopne
mov
cmp
xchg
mov
or
fisttpll
loop
push
inc
jl
xor
call
cmc
add
outsl
sub
lahf
arpl
out
shl
mov
popa
and
cmp
jecxz
cmp
jne
fidivl
pusha
jne
fwait
dec
mov
icebp
ds
rorb
das
imul
lds
and
inc
push
arpl
sbb
imul
mov
push
add
xor
jnp
or
push
enterw
or
cmpsb
addr16
push
cmp
call
xchg
push
testb
and
cwtl
add
adc
and
pop
push
jbe
mov
jmp
mov
sub
push
ljmp
sub
bound
fwait
ret
mov
lods
outsl
inc
ja
punpckhbw
clc
jne
lods
hlt
xor
or
pop
pop
ficompl
and
icebp
out
add
outsl
lods
leave
push
push
out
sbb
mov
mov
adc
iret
shl
jle
pusha
and
and
push
inc
inc
push
lock
push
leave
jp
lret
or
lock
jno
movsl
push
cwtl
int3
clc
and
mov
sub
xchg
clc
sbb
add
nop
insl
mov
mov
ja
add
les
xchg
jge
xor
les
adc
sbb
popa
outsl
xor
push
cmp
addr16
cmpsl
sbb
call
sbb
cmp
out
sub
mov
or
test
outsl
nop
ret
jo
ret
lods
mov
xchg
je
xchg
fwait
test
add
adc
mov
fcmovbe
add
shrb
aas
ret
out
shll
or
xchg
push
sbb
add
popf
add
mov
in
scas
mov
xor
jg
sbb
sahf
pop
call
test
cvtps2pi
add
test
stos
sbb
hlt
jae
sbb
add
int
gs
shlb
push
movsl
jbe
add
sbb
dec
dec
cmc
pop
sbb
mov
cld
lea
and
mov
xchg
mov
in
sub
push
test
cmp
iret
es
cli
sub
dec
js
add
inc
mov
ret
add
out
les
xorl
add
or
hlt
dec
mov
cs
pusha
sub
sub
daa
jns
add
pop
pop
dec
mov
loope
pop
pop
adc
inc
in
in
rorb
adc
subb
pop
sub
loop
iret
or
xchg
lods
test
out
pop
fisubs
cmp
fmuls
add
xor
add
mov
or
push
pop
mov
in
add
push
sbb
mov
cmp
subl
inc
loopne
push
adc
push
xchg
mov
movb
mov
and
add
sub
rorb
pop
xchg
and
add
jbe
ret
ljmp
rclb
and
jo
or
add
jne
mov
xor
push
rorl
add
dec
js
faddl
outsl
js
or
and
adcb
push
lock
dec
dec
loop
or
xor
cmp
sbb
lret
pusha
jns
pushf
cmp
mov
sbb
push
mov
inc
adc
dec
les
repnz
inc
sub
imul
adc
lahf
das
and
inc
add
add
aaa
add
test
sub
mov
fcomip
aam
cli
nop
jbe
and
aaa
jnp
sbb
inc
mov
stos
sbb
aam
rorl
ja
ljmp
dec
cs
sub
in
add
adc
test
daa
in
or
rolb
popa
adcl
stc
mov
data16
ret
mov
ja
out
xchg
lods
adcl
adc
jle
fwait
rcr
mov
add
or
popa
add
cld
jecxz
cmp
daa
cmp
sub
cltd
xchg
sbb
and
add
or
adc
mov
cmp
dec
sub
fwait
jge
roll
push
loopne
lock
pop
in
ret
lret
or
xchg
insl
xchg
cmp
ja
movsb
outsb
xor
das
xchg
adc
xlat
fwait
push
xchg
xchg
push
popa
mov
adc
push
pop
dec
add
in
js
pusha
mov
mov
xor
rorl
mov
add
xchg
and
icebp
jb
or
xor
xor
rcll
inc
ljmp
inc
mov
call
mov
jp
pop
sahf
jo
xor
sub
out
cmp
sbb
adc
mov
sbb
lods
inc
leave
pop
rolb
mov
mov
aad
loope
out
push
xor
inc
ja
xor
and
fisubrs
test
decl
push
xor
imul
stos
fcom
push
nop
ja
xchg
xor
cld
push
call
mov
cmp
mov
add
xchg
inc
adc
sub
pushf
sub
dec
mov
or
mov
add
std
mov
popa
rcll
rorb
fs
and
dec
cmp
or
pushf
add
faddp
xor
add
insb
leave
mov
jae
aas
lcall
daa
xor
lret
push
int3
test
push
inc
jg
lods
jp
adc
adc
jecxz
pop
aas
daa
das
mov
mov
xchg
adc
sub
dec
jmp
mov
enter
mov
lods
cld
clc
push
sub
xchg
xor
and
mov
adc
or
xor
add
jne
push
push
ss
or
sbb
je
pop
dec
enter
adc
shlb
push
push
iret
sub
lret
add
sub
push
cmp
pop
das
jne
or
enter
dec
rorb
pmaxub
add
ficomps
add
mov
call
xchg
fwait
or
mov
add
jge
adc
rclb
pop
inc
lahf
enter
out
push
fwait
aam
cltd
cld
add
adcb
lock
orb
mov
insl
xchg
call
or
aaa
pusha
sbb
mov
adc
pop
xchg
pop
imul
mov
push
mov
adc
xchg
call
push
shrb
mov
fldl
lock
pop
shr
xchg
lcall
filds
sbb
add
cmp
or
sbb
cmp
inc
loopne
aas
push
jb
cmp
arpl
stc
lods
mov
mov
outsl
push
lods
pop
popa
subb
pusha
jnp
aas
ficoms
sbb
mov
add
sbb
adcl
es
mov
push
sti
xbegin
jg
test
dec
inc
push
or
xor
cltd
mov
repnz
mov
sbb
push
lock
mov
add
fldt
sahf
icebp
and
sub
push
or
rol
popa
or
inc
pop
inc
dec
jne
sub
push
add
mov
lock
sbb
mov
pop
xlat
push
push
xorb
jns
cmp
xor
scas
loopne
jno
or
stos
mov
adc
addl
fsubl
call
push
xchg
bnd
int3
fldenv
test
sbb
test
insb
popf
enter
popl
test
fildll
into
jnp
mov
daa
fnstenv
dec
pop
lcall
addb
loopne
mov
sub
aam
inc
les
pop
or
jns
fimuls
adc
xlat
or
fcompl
flds
mov
out
loop
lock
pop
inc
call
mov
xchg
sub
stos
adc
repz
loope
clc
jnp
jmp
popl
mov
mov
or
inc
add
in
mov
shll
adc
ret
dec
scas
cltd
rcl
mov
sub
sbb
loop
fisubl
xchg
or
push
or
xor
shr
sbb
emms
inc
cmpsb
inc
and
scas
xor
gs
loopne
mov
mov
mov
cmpl
add
mov
push
shll
and
lahf
rcrb
shr
cs
lret
leave
ss
push
mov
add
jne
dec
mov
aaa
pushf
cmp
cld
xlat
pop
and
add
shrl
ret
push
aas
sbb
push
push
mov
lea
mov
out
push
call
dec
sub
sti
xchg
ret
movsl
pop
popf
les
pushf
sbb
inc
dec
and
adc
movsb
iret
pop
mov
cmpsl
push
loop
push
cwtl
je
and
xlat
or
adc
sub
mov
ja
jno
push
pushf
add
and
in
fs
lcall
insb
cmp
in
xorb
pushf
xchg
xchg
push
add
jl
insb
bswap
icebp
xlat
push
jl
or
xor
jge
xchg
loop
les
ljmp
in
cmp
fisubrs
push
xchg
push
inc
sbb
mov
cmp
add
ror
pop
jbe
add
insl
in
pop
mov
push
std
add
dec
push
jmp
mov
pop
ljmp
loopne
mov
shrb
ficomps
add
push
mov
scas
mov
inc
jg
and
in
neg
sub
mov
dec
lret
adc
clc
mov
dec
mov
jne
scas
repz
fisubrs
arpl
cli
sub
push
mov
aam
rolb
ret
inc
jmp
cmp
mov
imul
out
xchg
mov
in
mov
sbb
enter
adc
xor
push
dec
icebp
and
not
ffree
sub
das
mov
inc
add
mov
shll
add
inc
ret
mov
jmp
inc
xor
pusha
pop
ljmp
out
mov
jg
and
jbe
mov
dec
xor
mov
xchg
dec
sub
ja
ds
mov
shlb
xchg
popf
mov
or
add
enter
pusha
int3
ja
cmpsl
xorb
loop
push
mov
jge
neg
dec
cwtl
nop
push
mov
cs
sub
or
mov
jecxz
cs
stos
and
repz
mov
shlb
jbe
loopne
push
mov
inc
mov
inc
fnsave
test
daa
and
outsl
pusha
fldenv
mov
mov
or
xchg
stc
jno
lock
lret
mov
sahf
jp
lock
xchg
xor
imul
jae
shrb
add
fcmovnb
and
movsb
push
stc
shrb
and
xchg
add
loopne
les
pusha
adc
les
mov
push
sahf
fldl
cmpsb
or
and
xchg
push
xchg
or
lret
mov
mov
out
jne
popf
aad
call
push
xor
out
aam
sub
insb
insl
dec
les
cltd
divl
dec
lret
adc
enter
adc
sbb
sbb
push
mov
xlat
push
imul
sbb
cld
shll
add
pop
cmp
repz
sbb
pop
test
addl
ret
jnp
adc
add
xor
gs
popf
fstpl
test
fistpl
stos
sbb
and
adc
jmp
jl
xor
fstpt
movsb
imul
mov
push
sbb
and
orb
rorl
push
fsubr
call
ljmp
hlt
fldenv
cmp
jb
ret
lret
jmp
movsl
pop
popa
mov
jmp
xlat
add
xlat
das
adc
or
xor
cld
test
push
mov
call
or
dec
call
add
or
fiadds
cwtl
mov
xor
jmp
push
sete
sub
mov
push
push
add
cli
ss
scas
jbe
jbe
xlat
sub
push
int3
mov
into
add
imul
daa
and
pop
dec
adc
out
jp
mov
pushf
and
scas
clc
push
mov
jle
add
jmp
sbb
jo
xchg
sub
les
inc
in
data16
aam
add
xchg
cmp
loopne
sbb
insl
dec
lret
test
jl
push
cs
lret
push
fiadds
idivb
mov
btr
and
lods
sahf
fildl
push
lds
fdivr
jle
addb
inc
pop
and
cmp
mov
subb
scas
add
sub
mov
sbb
xchg
adc
call
nop
mov
dec
and
mov
ljmp
cli
adc
rolb
inc
and
sub
or
pushf
gs
sub
in
sbb
inc
outsb
loope
jae
in
bound
dec
adcb
jle
andb
scas
cs
mov
adc
mov
pop
sbb
add
adcl
lods
mov
mov
mov
mov
pusha
pop
adc
sub
pop
out
mov
dec
clc
imul
cs
mov
std
ja
out
push
cmp
add
inc
clc
cmp
sbbl
enter
dec
pop
insb
cmp
fildll
cmp
mov
mov
pop
pop
enter
cmp
mov
test
ss
mov
sub
mov
dec
and
test
fcoml
cmpb
dec
add
icebp
test
es
cmp
xchg
or
fcmovbe
mov
xchg
mov
jge
mov
movsb
enter
push
dec
push
push
push
inc
lea
prefetchnta
sbb
mov
jl
pusha
sub
adc
mov
jp
xlat
add
incb
add
sub
loope
pop
rolb
pop
and
add
and
xchg
aad
fisubrl
xchg
outsl
sub
mov
and
inc
push
ljmp
push
mov
add
pop
add
stos
mov
or
pop
into
andl
mov
out
dec
add
xor
jno
cli
das
orl
dec
dec
sbb
subb
fidivrl
cmp
lock
pop
mov
jmp
push
fwait
or
in
mov
cmp
jmp
mov
xor
mov
movsb
xchg
scas
scas
dec
push
dec
clc
or
mov
or
or
add
clc
dec
xor
in
dec
and
sbb
sbb
xor
add
jp
fildl
shll
or
fbstp
ffreep
mov
xor
lea
cli
and
or
mov
add
cmp
ret
xlat
fnstcw
mov
mov
push
daa
inc
out
jns
leave
add
sbb
adc
hlt
jp
stos
xchg
inc
adc
jae
sub
push
pop
in
pop
pop
shl
add
sub
cmp
mov
js
xchg
dec
xor
iret
jg
pop
movsl
lret
test
pop
or
push
lahf
dec
rcr
xor
jecxz
imul
imul
inc
sbb
addr16
jae
jmp
mov
inc
loop
or
or
jne
mov
xchg
cli
xchg
shlb
push
fbstp
xchg
jmp
jmp
decb
test
mov
adc
add
or
mov
mov
lock
rcr
aam
rclb
jmp
testl
lock
push
int3
xor
jmp
and
add
insb
lret
repz
jmp
subl
sbb
jmp
in
lret
inc
jge
mov
pop
cmp
push
xlat
in
pusha
rcrb
xor
push
mov
add
adc
lret
sbb
addl
lods
jle
push
push
mov
inc
daa
mov
pop
orb
pop
dec
cmp
aaa
loope
sbb
lds
jno
or
mov
or
inc
fsts
xorb
mov
adc
repz
lods
clc
arpl
fdivrp
sbb
roll
add
lock
scas
movsl
inc
into
pop
pop
into
push
insb
movsl
mov
sub
cld
jnp
inc
jae
cli
out
inc
lcall
mov
sub
testb
xor
lock
leave
js
and
jl
fstp
into
pusha
int3
inc
pop
cmp
fbld
add
frstor
inc
mov
dec
cmp
mov
dec
pop
pop
cmp
mov
sub
or
sbb
dec
jb
sub
mov
pushw
bound
shlb
sbb
add
pop
mov
testb
mov
hlt
ja
add
sub
adc
jp
sti
test
xchg
sti
lret
add
lods
mov
jo
das
and
xchg
inc
fistpll
mov
and
add
mov
cmp
dec
fildl
fsubl
and
push
or
int3
or
fisubrs
lea
push
jmp
hlt
xchg
out
aam
push
pop
dec
inc
les
pusha
add
sbb
xor
sbb
test
js
mov
andb
push
add
das
rolb
inc
aaa
ror
mov
mov
ja
andb
xor
cmp
push
push
dec
in
jno
fisubrs
cmp
mov
or
xchg
add
mov
test
mov
add
xchg
fmuls
imul
sbb
jg
sub
cmp
xchg
jne
rcr
loopne
jne,pt
xchg
mov
jnp
loope
adc
fisttpll
jecxz
sbb
xchg
or
xchg
add
dec
add
jle
sbb
cmp
push
js
dec
lods
nop
dec
xchg
mov
pop
push
xor
push
fbstp
push
out
push
rclb
pop
pop
out
andb
test
add
or
mov
rcll
sbb
push
adc
ds
add
push
gs
daa
add
jecxz
sub
mov
outsl
addl
jg
rolb
addb
cmpsl
fs
testl
ret
cmpsl
adc
pop
cmp
inc
dec
rorl
out
or
push
icebp
jmp
or
pop
mov
xor
loope
mov
jecxz
adc
jg
ret
jg
ret
das
mov
pop
repz
push
push
inc
js
cmpsb
fwait
inc
sbb
hlt
xchg
dec
fdivrl
push
adc
add
loopne
andb
or
adc
pop
or
sbb
icebp
jp
insl
test
xchg
xor
aas
adcl
shr
and
push
dec
jmp
lock
cmc
or
and
sub
and
push
sbb
fs
mull
add
inc
out
rol
jmp
mov
xchg
xor
jle
jmp
std
into
test
jae
xchg
out
call
sub
sbb
fmulp
pop
sub
sets
mov
pop
rcrb
cmp
mov
lods
stos
pop
sub
icebp
dec
aam
inc
jmp
loopne
xchg
repz
ret
sbb
shll
int3
adc
mov
testb
adc
jge
mov
jns
repz
hlt
fistps
test
in
xor
enter
adc
jnp
sbb
or
orl
test
addl
push
popa
or
or
je
xor
cmp
fildl
mov
jmp
or
aad
into
adc
aad
inc
das
inc
movsb
mov
aad
in
xor
dec
mov
sti
pop
jne
xchg
cld
cmp
pushf
lock
sahf
cld
sbb
push
or
mov
rolb
faddp
shr
mov
aaa
pop
jb
test
stos
mov
xchg
jo
or
mov
fs
and
and
lret
jmp
pop
adcl
inc
dec
lcall
jmp
cmp
sub
psubb
sub
sbb
jg
das
jp
push
rcrb
adc
and
roll
cld
stos
pusha
pop
gs
scas
jo
sub
dec
dec
mov
mov
mov
out
dec
sub
pushf
sti
jo
clc
sub
sbb
lods
filds
adc
jnp
ljmp
lock
ljmp
mov
lahf
sbb
add
xlat
ret
cmpsl
sbb
stos
xchg
and
enter
pop
aam
je
jbe
ja
sub
dec
icebp
mov
lea
push
inc
std
out
pop
jne
push
call
push
outsb
sbb
sbb
adc
and
add
pop
pop
push
fidivrl
cltd
inc
ret
sub
fisttpll
or
frstor
jo
cwtl
in
cmp
inc
or
test
cld
adc
jb
loope
movsl
push
adc
push
adcb
aaa
jo
clc
mov
pop
xor
rcrb
adc
out
add
test
push
repnz
aad
jne
lock
cmpb
outsb
jg
or
add
mov
es
xor
ficomps
or
mov
ret
gs
adc
pop
pop
cmpsb
loope
cltd
js
adc
or
mov
add
ret
cmp
jb
loopne
lods
imull
pop
sbb
jo
lods
or
add
add
loope
cwtl
lahf
mov
dec
ret
adc
xlat
lahf
add
and
sbb
cmpsl
jmp
pop
js
das
test
jmp
call
pop
xlat
mov
push
add
add
in
adc
rcrb
inc
stos
out
imul
mov
sbb
fdivrl
xchg
cmp
cmp
das
test
fsubrs
push
daa
icebp
add
cwtl
mov
sbb
cmp
ret
scas
add
fnstenv
or
push
scas
icebp
mov
xlat
fwait
pop
push
mov
pop
imul
fcmovu
add
lds
or
ret
push
insl
aas
loope
xor
jmp
adc
outsb
adc
cld
mov
mov
gs
sub
add
fildl
nop
add
pop
je
enter
sub
sub
or
outsb
fs
popa
mov
movsl
pop
push
mov
sub
movsl
or
mov
maxps
int
push
popf
mov
add
gs
or
loop,pt
lea
outsl
cmp
add
sub
mov
sbb
mov
pop
pop
pop
pop
jmp
aam
test
inc
rcrb
lcall
sbb
push
adc
adc
icebp
into
shlb
or
and
push
les
mov
iret
test
ja
mov
lock
testl
out
bound
mov
addr16
std
jmp
outsl
mov
add
mov
jl
push
sbb
push
dec
cmp
jne
adc
mov
add
lock
sti
adc
ss
jnp
sub
ret
cs
leave
push
ljmp
test
ds
inc
mov
and
pushf
cmp
dec
mov
pop
pop
lods
xor
xchg
lret
xchg
xchg
cmp
and
sub
sbbb
xchg
fs
add
ja
jmp
out
fimuls
pop
add
cld
repnz
dec
testb
inc
sbb
add
icebp
mov
or
pop
jne
dec
sub
adc
push
sbb
xor
sub
sub
mov
cmp
inc
fwait
stos
mov
mov
cld
sarl
mov
sub
xor
pop
aad
je
mov
xlat
rclb
jg
scas
lds
adc
xor
push
push
push
scas
dec
lock
pop
cmp
pop
push
push
jne
inc
xor
outsb
addb
arpl
push
test
mov
lahf
repnz
aad
das
cmp
shrb
jmp
sahf
test
sub
jae
inc
sub
lock
mov
pop
cmp
add
jbe
jmp
xor
dec
add
jecxz
in
lds
lods
or
mov
push
bound
add
insl
bound
xor
push
mov
sarb
rclb
push
es
cmp
cmpl
jecxz
sub
lret
mov
or
movb
or
adc
xchg
adc
stos
gs
movsl
rol
decl
outsl
pop
jae
out
jb
sti
jp
xchg
inc
ja
loopne
push
jp
xor
arpl
push
mov
mov
add
add
ss
mov
repnz
fwait
dec
xlat
push
ret
scas
cltd
stos
in
push
loopne
mov
mov
enter
dec
add
ljmp
repnz
cmp
cld
mov
test
dec
mov
ja
fidivrl
xor
shrb
fcomps
sub
or
xchg
pop
pop
pop
push
cmp
mov
stos
call
fs
push
call
addb
lock
pop
pop
push
lods
les
inc
adc
add
mov
aaa
pop
mov
testl
push
mov
shll
sarb
pop
js
jns
push
rcl
and
cli
shlb
or
pop
pop
sbb
divb
hlt
jl
loop
sub
cltd
shl
xorl
pop
mov
jge
or
add
and
dec
mov
roll
inc
outsl
lea
aad
jb
push
bound
or
faddl
cwtl
lock
adc
push
repnz
ret
sarb
shlb
iret
push
xchg
jge
fbld
mov
or
addb
dec
movsb
mov
scas
ja
test
andl
ret
dec
xchg
jnp
dec
idivl
cs
cmp
enter
jne
lods
rol
dec
sbb
das
inc
cmp
or
dec
rcrb
or
callw
rorb
sub
adcl
or
adc
movsl
ret
in
test
and
sub
xor
call
and
xor
scas
inc
add
dec
inc
cld
scas
inc
and
js
dec
push
icebp
ja
andl
mov
in
xor
push
add
movl
jne
nop
xor
adc
mov
cmp
mov
ss
loop
mov
jecxz
in
jb
je
sbb
lahf
jg
movsl
dec
test
cmpsl
dec
hlt
rcr
xchg
xchg
dec
jno
fcomps
sarl
fcoms
add
sub
sbb
jno
clc
andl
dec
xor
adcl
jae
jge
jo
xchg
cmp
dec
xchg
icebp
push
sbb
pop
and
sti
push
call
sub
cli
ret
pop
and
loope
xor
dec
push
rclb
push
call
imul
lea
ret
mov
ja
sbb
clc
and
icebp
xor
push
clc
int3
mov
push
and
sbb
ja
mov
jp
cmpl
pusha
or
and
je
imul
ret
pop
inc
mov
cmp
sbb
add
popa
sub
roll
mov
xor
and
jb
test
or
test
jne
aad
sbb
inc
or
jno
out
adc
pop
sub
shlb
int3
xchg
xchg
sti
fstpl
sub
mov
push
xchg
mov
inc
sub
js
mov
jmp
and
movsl
xchg
test
fwait
mov
addb
inc
insb
mov
rorb
dec
sbb
inc
jns
xchg
daa
xchg
add
and
scas
mov
arpl
icebp
jg
call
mov
pop
fistpll
sbb
add
mov
xor
imul
pop
and
inc
sub
rcrb
cld
pop
inc
scas
pop
cmp
push
xor
mov
das
push
sbb
cmpsl
inc
mov
lcall
mov
adc
stos
and
enter
jne
mov
imul
add
and
add
jecxz
jae
sub
cmovnp
ljmp
fmull
adc
fsubr
add
dec
lahf
dec
sbb
or
sub
mov
clc
xadd
scas
int3
out
sbb
imul
push
clc
imul
sbb
lds
jecxz
and
jbe
scas
icebp
shrl
add
addr16
pop
rcr
icebp
dec
es
loope
mov
pop
sub
inc
add
out
inc
sbb
or
clc
bound
inc
in
mov
adc
lock
rcrb
xchg
rorl
sbb
sbbb
out
stos
iret
push
mov
add
fidivrl
into
add
das
ja
ret
mov
mov
cmp
push
cltd
rorl
jl
mov
loopne
lcall
jmp
add
add
cmp
loope
rorb
and
dec
loope
icebp
xor
neg
xor
aad
xchg
in
lock
hlt
jecxz
push
push
or
iret
das
fwait
out
add
sbb
pusha
add
mov
xor
sbb
rol
mov
add
jo
or
mov
push
flds
cltd
and
sbb
sbb
jmp
lret
sub
rorl
mov
adc
pop
xor
adc
mov
fcomps
popf
cmp
fmull
sub
jb
cmp
sar
sti
add
stos
nop
pop
rol
dec
ret
cs
add
xchg
lock
adc
shrb
and
cmpb
push
pop
mov
imul
jmp
sbb
sub
add
add
or
jns
mov
insl
mov
roll
andl
addr16
and
nop
jmp
imul
and
inc
adc
test
push
test
add
push
test
imul
imul
fsubrl
and
or
notb
movsl
frstor
ljmp
mov
ds
adcb
neg
addr16
or
test
fs
nop
test
adc
mov
cmp
fscale
stos
ja
jne
mov
add
or
pop
mov
push
and
jae
sbb
bound
outsl
ds
pop
mov
outsl
or
stc
xor
add
jge
push
rolb
setno
test
icebp
dec
pop
movsl
sbb
push
pop
jo
push
pop
sbbb
fisubrs
rorb
add
call
push
dec
clc
mov
bound
fdivrp
cmp
add
cltd
stc
loope
xor
out
cmp
mov
in
and
add
stc
bound
add
pop
std
inc
movsb
inc
or
cld
adc
inc
mov
aam
dec
fisubrs
inc
xor
pop
push
jecxz
xor
add
add
and
sbb
add
xorb
adcb
sub
ret
add
fisttpll
mov
sbb
xchg
xchg
lods
mov
dec
jae
pop
in
je
repnz
pop
cmpsb
test
xor
or
test
call
push
cmpb
fidivrs
pushf
in
inc
jmp
sbb
mov
sahf
jmp
cmp
push
add
adc
xor
adc
xor
call
sbb
das
int
testl
jg
adc
cli
test
fld
scas
mov
mov
out
rcrl
add
cmp
push
andl
inc
inc
add
lret
arpl
rolb
mov
xor
iret
cmp
cmp
pop
shll
gs
inc
jnp
jg
lcall
cld
pop
sbb
ficompl
sub
movsb
ficoml
lret
rorl
je
or
lock
xchg
ja
push
adc
pop
stos
push
mov
imul
push
dec
mov
jecxz
cmpb
pop
ljmp
pop
icebp
push
mov
adcl
push
mov
fldcw
stos
scas
shl
icebp
out
add
andl
das
movsb
addr16
movaps
adc
jmp
rolb
and
aas
and
inc
sub
xor
pop
arpl
orb
shlb
inc
je
andb
pop
mov
pop
stos
divl
leave
mov
test
out
push
insb
adc
in
les
loope
ja
lock
jge
push
not
outsl
cmp
mov
sbb
loop
scas
stc
mov
cld
arpl
idivb
add
cmp
bound
das
ret
jecxz
and
sahf
loope
lea
out
dec
popa
rol
push
jbe
xchg
scas
gs
pavgw
xor
icebp
jae
mov
xor
or
add
imul
add
cmp
jmp
sub
jne
test
pop
mov
jl
mov
rcrl
dec
shlb
xlat
fdivrp
inc
out
add
data16
scas
push
xor
mov
or
push
jnp
dec
inc
mov
or
pop
mov
cld
rolb
or
dec
xchg
sub
lret
loop
pop
addb
mov
mov
jmp
stos
adc
or
loope
fldl
sbb
cltd
mov
loopne
cmp
or
add
or
push
push
jmp
add
pushf
mov
xorb
xchg
sahf
cmp
mov
add
stos
and
mov
call
add
pop
add
push
and
ret
add
cmp
jmp
push
push
inc
das
cmp
negl
pop
push
jp
add
xor
or
sbb
das
outsb
xor
and
xor
fs
ds
test
jbe
movsb
xchg
and
call
dec
js
push
cmp
or
iret
dec
iret
mov
add
lods
test
xor
std
or
and
sbb
cmp
cmp
cs
int3
call
mov
loopne
pop
ret
xchg
in
cmpsl
add
adc
fdivrp
sbb
arpl
dec
cltd
pusha
add
adcl
pop
std
mov
xchg
ja
lea
mov
pop
sub
rcrl
in
das
cmp
adc
add
scas
mov
mov
or
mul
mov
sbb
add
push
idiv
cmp
icebp
movb
outsl
bound
rcrl
and
push
xchg
sub
cmp
push
stos
pop
insl
fstps
inc
shlb
cmp
xor
rolb
test
adc
cmp
out
sub
lret
pop
fmulp
and
lods
movsl
ret
arpl
jg
fstps
xor
and
ret
sbb
outsl
pop
js
pop
repnz
or
ds
cmp
and
lret
shlb
push
hlt
add
adc
push
inc
sub
cmpl
adc
add
adc
jae
ret
cltd
xchg
pusha
and
mov
fsubrs
xchg
jb
pop
cmp
push
js
pop
ret
fildl
and
pop
dec
rcrl
jg
sbb
stc
repnz
cmpsb
out
pop
xor
int
in
hlt
mov
add
cmpsl
daa
cld
dec
push
mov
cmc
je
inc
leave
icebp
and
subl
sub
arpl
push
xor
and
js
mov
fldenv
aas
loopne
pop
imul
adc
adc
xorb
ret
add
sahf
xchg
cmp
jmp
xor
mov
add
fwait
out
push
roll
test
test
inc
dec
inc
xchg
and
or
jo
gs
loopne
add
push
enter
popa
push
jmp
add
sub
cmc
subb
iret
sbb
inc
xor
repz
sub
sbb
inc
inc
add
cmpsl
es
out
and
xchg
dec
fisttpll
test
fimuls
add
aam
lahf
ret
adc
dec
jg
mov
adc
sbb
cmpsb
add
aas
push
pop
pop
pop
pop
movaps
fmuls
push
and
lods
xchg
mov
testb
ret
mov
cmp
daa
cs
jmp
mov
sbb
loop
js
out
inc
xchg
outsl
enter
loop,pt
xchg
orl
sahf
push
push
xor
or
xchg
neg
sbb
cld
push
jle
daa
cld
sub
xchg
mov
xor
test
push
lea
rcrl
pop
iret
jae
add
dec
adc
mov
loop
inc
adc
dec
pop
das
dec
lock
cmpsl
in
rolb
shlb
dec
mov
pop
rolb
ljmp
pop
maxps
andl
xchg
and
xor
scas
xchg
addr16
fst
push
adc
shrl
imul
add
cmp
ja
jp
movsl
sbb
push
roll
cmp
fldl
or
and
popf
pop
add
aaa
adc
dec
ud2
outsl
and
test
mov
pop
and
imul
xor
inc
dec
jecxz
cmp
nop
sbb
sub
push
push
jmp
daa
cmp
cli
xchg
loop
dec
add
test
aad
add
jbe
adc
sbbb
push
rcrl
repnz
out
sbb
mov
fistpll
fdiv
movb
sub
shrl
es
inc
icebp
or
sbb
cmp
cmp
inc
ret
ja
shll
lods
loope
fildll
ret
cmp
mov
pavgw
scas
rclb
mov
pop
mov
xorb
ja
add
adc
adc
stos
lret
jmp
push
jbe
sbb
sub
cld
nop
adc
add
lcall
inc
xchg
xor
xor
iret
jmp
jo
push
pop
sbb
fnstcw
inc
aas
cld
sbb
push
adc
push
fsubrp
and
push
into
loope
cmp
pop
out
or
fdivrs
test
sub
aaa
sarl
adc
imul
xchg
push
repz
sub
fisubl
xor
push
sub
inc
bnd
sub
push
icebp
xchg
mov
add
imul
stos
test
push
xlat
add
xlat
ror
stos
mov
cwtl
dec
out
push
mov
add
and
or
nop
inc
test
dec
inc
xorl
add
dec
pop
mov
lods
jae
jmp
inc
mov
lock
mov
insl
mov
lret
scas
dec
jl
add
enter
jns
stos
inc
aaa
add
sbb
mov
js
jle
jae
stc
scas
and
dec
sub
sbb
loopne
sub
movsl
mov
cmp
jae
cmc
push
dec
dec
or
add
int
in
dec
test
arpl
cli
pop
test
push
inc
jl
jnp
aam
and
mov
push
loop
stc
imul
dec
jge
sbb
lcall
mov
xchg
push
dec
xchg
sub
insb
push
mov
xor
stc
and
inc
sub
xchg
sbb
cltd
cmc
les
test
test
pushf
sbb
mov
or
mov
jecxz
cmp
jb
mov
jl
hlt
or
xchg
jmp
mov
shlb
mov
cmpsl
daa
xchg
ds
cmp
or
add
enter
stos
clc
out
int3
and
cmp
jp
jns
add
mov
fisubrs
xchg
push
pop
sub
hlt
or
or
jp
add
dec
lds
sbb
sbb
aad
pop
addb
clc
roll
push
push
sbb
mov
or
xor
test
shll
add
jg
sub
sub
les
jnp
inc
xor
add
pop
dec
lahf
lock
cmp
push
jns
imul
mov
movsb
xor
sub
dec
mov
mov
push
ds
or
sbb
or
sbb
dec
aam
dec
test
ds
inc
cs
test
cmp
cmc
ljmp
jmp
scas
icebp
pop
mov
stos
das
mov
dec
pop
ret
filds
adc
test
mov
or
and
push
add
test
jl
ds
mov
dec
cltd
nop
inc
sarb
ror
ret
sub
xchg
add
sti
gs
test
cmpsl
push
nop
push
rorb
pop
jne
push
cwtl
cmp
jo
mov
pop
dec
adc
xor
pop
xor
es
call
lods
push
adc
mov
dec
and
pusha
ficompl
or
les
inc
mov
ljmp
fiadds
push
xor
filds
adc
mov
stc
xor
and
adc
inc
ffreep
dec
sub
and
adc
and
xchg
add
clc
dec
rorb
outsl
and
adc
sti
outsb
outsb
fnstsw
dec
inc
mov
dec
xchg
push
pop
dec
push
out
xor
dec
push
lods
mov
jb
movsl
imul
or
cmp
pop
call
movups
or
dec
xchg
fwait
icebp
mov
sbb
xor
cs
repz
faddp
repz
dec
add
xor
lock
cwtl
das
cli
cmp
ret
adc
cmpsb
mov
aad
sub
ja
mov
loope
inc
sub
js
rcr
add
add
call
inc
ljmp
cmp
mov
and
ljmp
iret
and
sbb
jle
js
xchg
xchg
fists
loope
hlt
cmp
cmpb
icebp
jne
js
fisttpl
sahf
push
cltd
dec
dec
inc
not
jge
mov
mov
nop
ss
aaa
imul
xchg
je
jae
cmpsb
cmp
cs
insl
movsb
push
icebp
add
mov
xchg
dec
dec
rolb
add
lret
lcall
inc
inc
or
aaa
insb
filds
jl
js
popf
and
pop
imul
call
adc
sub
andb
mov
fldt
cmp
jo
lock
loopne
in
xor
incl
push
fadds
loopne
mov
loope
roll
fisubrs
loop
and
inc
lahf
jo
adc
pop
repz
cmp
test
in
imul
sbb
cmp
pop
jae
loopne
add
je
test
ror
sbb
and
scas
stos
jge
xorl
adc
or
rol
jae
mov
pop
aam
lahf
dec
addb
add
adc
test
pop
in
movsb
pop
push
rcl
or
push
add
aas
out
mov
sbb
pop
or
cmpsl
fstpt
cmp
aam
mov
xchg
shrl
add
push
nop
add
inc
inc
pop
movsb
xchg
stc
cmp
jo
pop
subl
loopne
ret
test
jae
enter
mov
inc
js
std
rorb
clc
daa
bound
push
cmp
xor
push
adc
add
out
adc
xchg
test
mov
data16
clc
aad
les
xchg
mov
mov
inc
and
rol
scas
dec
das
shll
xchg
in
stos
adc
xchg
add
jnp
loopne
jnp
mov
dec
outsl
fs
dec
pusha
xorb
shlb
bound
mov
mov
inc
jnp
fsubrs
inc
faddl
lods
add
jmp
cmp
jae
push
test
push
fwait
inc
jmp
insl
cmp
dec
arpl
cmpsl
lods
push
ja
cmpsl
arpl
inc
loop
mov
cmp
mov
testl
dec
sbb
cmc
sub
ret
lcall
loope
stos
test
or
sub
xchg
mov
add
mov
imull
or
cmp
ret
jo
mov
inc
sub
inc
aam
or
imul
mov
dec
xor
cmpl
lahf
aaa
jl
and
jo
stc
or
cvtpi2ps
imul
add
rcl
cli
and
add
dec
mov
jge
push
clc
sub
and
cmpsl
or
inc
loope
clc
mov
or
push
pusha
cmp
clc
mov
sub
pusha
cmpsb
mov
mov
sahf
sub
add
popf
xchg
add
mov
enter
test
jmp
add
add
lret
lret
mov
cmovbe
les
bound
dec
mov
xor
add
push
adc
aam
push
imul
xor
lock
arpl
sbb
sbb
test
adc
popf
mov
xchg
push
sub
add
lcall
std
aas
in
sbb
enter
call
jmp
sub
mov
jbe
sub
xchg
movsl
nop
jbe
leave
inc
cli
push
pop
cmp
ret
xchg
ds
int3
sub
fisubl
pop
xchg
pusha
jb
or
push
data16
cmp
int
fwait
mov
dec
adc
sbb
icebp
aad
shrb
pop
in
inc
or
lcall
dec
int3
jbe
inc
or
iret
xchg
jbe
clc
mov
pop
outsl
xchg
or
inc
in
add
rcrb
inc
sub
notl
inc
es
clc
mov
nop
jo
adc
xchg
xorl
pop
sub
adc
ja
or
xchg
imul
ret
clc
out
movl
dec
push
jg
xor
repz
aad
in
in
mov
pop
xchg
icebp
or
ss
sub
xchg
hlt
pop
push
clc
inc
sub
scas
cmp
jecxz
adc
cmpsl
mov
popf
pusha
cmp
ret
daa
xchg
dec
pop
xor
loop
outsl
sub
mov
inc
rol
inc
add
cmp
js
pop
mov
ret
jbe
fwait
hlt
repnz
mov
sub
and
ljmp
adc
fisttpl
jecxz
imul
and
push
xchg
push
roll
dec
mov
adc
add
je
scas
test
xchg
add
cmp
cmp
xor
rolb
fdivl
adc
inc
and
ret
je
xor
adc
add
rclb
dec
imul
adc
push
clc
outsb
adc
rcl
jl
sbb
inc
mov
enter
rol
or
sub
xchg
cmp
pop
enter
cmp
fnsave
xchg
rorl
mov
rclb
inc
mov
popa
test
adc
push
sbb
sbb
xchg
outsb
pop
xchg
jmp
xor
clc
repz
mov
push
es
sbb
insb
cld
aam
sbb
arpl
push
inc
lods
jo
ljmp
xor
add
xchg
leave
cwtl
and
int
add
sub
cmp
mov
pushf
aas
add
mov
push
les
fwait
addr16
into
adc
xor
fidivrs
ss
stos
inc
xchg
or
aad
and
push
xor
aaa
inc
pop
cmp
insl
aas
sub
add
shll
xchg
stos
insb
cld
adc
sbb
pop
sub
gs
shl
test
ja
cmp
incb
aad
push
lods
fists
push
ds
pop
xchg
xchg
xor
cmpb
nop
xchg
jmp
mov
jecxz
push
test
lock
push
in
out
sub
add
inc
pushf
aas
xchg
inc
cwtl
es
or
add
ljmp
sub
lds
pop
inc
sub
js
shll
cmpsb
cmpsb
jbe
inc
xlat
test
cmp
fnstcw
add
fstl
cld
dec
sbb
mov
adc
ljmp
out
mov
call
ljmp
xchg
cli
pop
in
push
xchg
add
clc
lahf
in
jg
cmp
test
dec
popf
aaa
addr16
sub
jbe
call
shll
xchg
push
lods
insl
ret
pop
stos
ljmp
and
adc
inc
and
push
enter
and
sub
xchg
aaa
mov
jmp
hlt
pop
pop
add
lds
jecxz
adc
mov
jne
xor
rolb
xor
xchg
fs
call
mov
aaa
cmp
mov
pusha
pop
adcb
or
gs
inc
out
imul
jno
call
fwait
cmp
cmp
mov
inc
iret
ret
add
ljmp
adcb
or
mov
les
dec
fcmove
les
adc
xor
and
adc
adc
xor
cltd
add
loopne
and
les
addb
fucomip
inc
cmp
popa
movsl
jmp
fcomps
ss
and
clc
xchg
icebp
add
imul
daa
jp
dec
clc
les
fstps
test
inc
dec
pushf
shll
mov
mov
ret
xor
movsb
adc
mov
in
test
xchg
push
dec
lret
pop
lods
shl
loopne
cli
xor
in
cli
push
push
shll
push
push
adc
or
or
adc
shrb
add
insb
xchg
jo
leave
dec
shrb
jge
sub
in
fcoms
or
sbb
add
mov
jecxz
ljmp
divl
mov
and
int3
jnp
add
dec
clc
cmp
jae
cmp
lret
loop
add
add
call
add
sbb
add
ret
filds
mov
and
lea
jno
out
jno
stos
sub
dec
out
outsl
in
xchg
imul
cmpsl
jmp
dec
xchg
add
int3
push
xchg
sbb
push
arpl
mov
icebp
mov
cmpb
push
je
mov
inc
or
xor
cmp
cmpsb
call
cmpsb
pushf
out
repz
cmp
inc
or
xchg
adcb
mov
ret
xchg
and
mov
test
add
lret
pop
add
pop
mov
xor
add
repnz
or
repnz
add
lods
jle
jecxz
or
adc
sub
or
das
jmp
fistpll
pusha
aam
cmovp
js
stos
add
outsb
pop
popf
xchg
fisttpll
lods
push
mov
inc
mov
cld
mov
mov
jne
mov
push
fdiv
mov
fwait
jmp
fldt
and
ja
int3
cmpsb
pusha
out
shl
int3
addr16
jbe
mov
xor
jo
push
jmp
jp
call
js
adc
add
push
inc
sub
or
loop
push
push
adc
push
push
clc
push
push
add
or
into
xchg
lahf
aaa
mov
int3
xchg
imul
sbb
aad
rcrl
adc
add
and
cmc
imul
add
cwtl
fs
fcmovb
xlat
test
inc
jmp
loopne
sub
outsb
orb
fs
xor
mov
nop
mov
out
daa
xchg
or
jp
insl
or
loopne
stc
pop
shl
test
lods
out
xchg
xor
xchg
add
jl
pop
mov
subl
pusha
jecxz
outsl
inc
fisttps
mov
lds
call
lock
lock
arpl
out
ret
add
mov
add
mov
and
xor
lock
dec
ljmp
mov
dec
inc
or
push
arpl
mov
cmp
pusha
mov
or
adc
xchg
std
sub
inc
addr16
out
lods
adc
cmp
push
inc
mov
xor
xchg
imul
cld
jle
or
scas
cmpsb
inc
call
rcrb
and
call
scas
out
dec
pop
push
loope
mov
xchg
push
cwtl
test
out
fisubl
add
push
mov
insb
adc
sub
movsb
call
mov
add
dec
aas
and
stc
shr
or
test
xchg
ret
into
pop
mov
call
cmp
inc
js
inc
dec
jp
xchg
inc
clc
sbb
push
jl
test
loopne
add
sbb
push
mulb
into
inc
ficomps
inc
sarl
arpl
ret
pop
inc
push
call
or
or
or
shll
dec
iret
push
adc
or
inc
shr
sub
mov
adc
jbe
pop
imul
adc
outsl
dec
mov
jbe
adc
add
aaa
int3
push
mov
add
and
inc
xchg
arpl
adc
stos
popa
clc
aam
adcl
pop
mull
adc
adc
aam
mov
jl
icebp
and
cmpsb
out
or
mov
adc
jbe
push
rorb
in
nop
leave
dec
pop
add
xor
add
cld
adc
pop
aaa
mov
inc
aam
or
cmpsb
movsl
lods
and
xor
push
cmp
mov
rorb
adc
dec
push
add
test
mov
mov
insb
and
adc
pop
sbb
pop
ret
jno
xchg
sbb
sbb
or
subl
imul
ss
jne
mov
inc
dec
add
roll
push
mov
push
rcrb
mov
bound
cmp
inc
pop
maskmovq
testl
and
fisttpll
mov
sub
adc
xor
inc
xor
leave
mov
rolb
mov
adc
cltd
ret
cmp
bound
sub
movsl
fsubs
stc
sbbb
add
jl
sub
or
cmp
lock
call
and
nop
adc
loop
mov
push
adc
or
sub
xor
push
push
popa
ds
cmp
sub
sbb
aaa
ljmp
and
add
stos
mov
fdivs
and
add
push
jne
xchg
lods
rclb
mov
push
push
adc
movb
and
push
les
xor
aad
mov
in
incb
sti
adc
enter
lahf
sub
dec
test
adc
dec
sbb
mov
shlb
sbb
jmp
cmc
orl
fstps
mov
push
icebp
jno
cmc
xor
pop
inc
mov
stc
xor
jne
fsubrl
push
push
pop
out
es
lcall
loopne
xchg
aaa
loop
nop
push
loopne
sub
xorb
mov
mov
cmp
in
mov
and
inc
and
adc
push
adc
ljmp
icebp
mov
cmp
add
cmp
jo
mov
lods
cltd
pop
xor
cmp
xor
lock
push
dec
inc
mov
outsb
xor
mov
and
mov
fisttpll
loopne
sbb
int3
pop
roll
test
dec
in
call
add
sbb
and
pop
add
add
jne
mov
pop
push
push
push
call
je
ret
inc
repz
mulb
pop
sbb
aad
add
add
add
mov
orl
or
dec
or
subb
ljmp
pop
imul
cmp
jl
rol
dec
mov
cmp
mov
mov
cmpsb
push
cmc
fwait
adc
jecxz
mov
add
std
add
fildll
inc
jle
mov
jns
inc
loop
add
cmp
sbbb
shl
dec
lret
adc
fcomps
inc
sbb
cli
les
aaa
xor
mov
shlb
mov
test
jmp
es
add
fidivrl
addb
nop
rcl
push
mov
outsl
shrb
sub
pop
ficomps
and
inc
xchg
dec
jmp
cmp
push
in
test
dec
pop
daa
int
movsl
movsl
xchg
icebp
jno
aas
int3
dec
in
push
lock
outsl
data16
xchg
adc
xchg
or
push
cmp
pop
test
inc
shll
test
es
incl
xor
sbb
mov
lods
pop
in
aas
cmp
ret
or
mov
push
fisubs
sub
cli
loope
xor
add
add
cli
sub
dec
pop
shlb
dec
cmpsl
lcall
push
add
pop
mov
scas
lods
imull
sar
jnp
push
pushf
mov
xchg
push
mov
fadds
cmp
adc
mov
adc
aam
aas
add
add
lahf
jge
js
jo
mov
test
push
iret
adc
pusha
fidivl
or
mov
mov
jge
imul
out
frstor
mov
pusha
mov
cmp
mov
nop
jo
sbb
push
insb
adc
insl
movsl
fdivl
aam
mov
ss
test
or
dec
in
popa
xchg
xor
inc
adc
cmp
popf
das
pop
or
add
or
mov
loope
adc
sbb
add
pop
mov
shld
rcrb
mov
xchg
in
sti
in
xor
call
pop
push
loopne
pop
test
pop
es
andb
shl
in
sub
ljmp
xchg
pusha
add
mov
push
out
jecxz
cmp
push
adc
cmc
arpl
mov
loopne
loopne
push
out
pop
xor
dec
das
fdiv
hlt
and
outsl
and
mov
or
ja
je
fcoms
inc
cmp
sbb
adc
call
xor
rcl
shll
jge
push
pop
jp
rolb
lds
lret
mov
xor
sbb
scas
enter
sub
flds
out
and
xor
add
push
fadds
cs
adc
test
int3
and
into
test
push
ficomps
stos
in
dec
sub
adc
inc
xor
ret
ret
fldl
loopne
imul
std
jge
sub
addb
cld
ss
ss
aad
pusha
pop
mov
inc
add
push
add
or
and
cmp
add
call
pop
call
idivl
sub
ds
pushf
cmc
sbb
sub
nop
nop
cli
push
xchg
hlt
dec
jmp
fiaddl
incl
clc
call
and
sbb
jno
mov
inc
loope
pop
pushf
cmp
pusha
cwtl
add
xchg
test
subb
jmp
fldcw
ljmp
pop
ss
lahf
push
dec
mov
push
rcrl
adc
xor
outsl
arpl
jmp
dec
imul
mov
cmp
nop
dec
call
js
add
xchg
dec
test
cltd
sbb
jno
inc
enter
sub
jg
push
adc
bsr
iret
mov
and
xchg
repz
xchg
fcomp
les
jge
add
adc
rolb
mov
inc
cmpsl
or
mov
jecxz
loopne
add
jno
sub
xor
sbb
or
and
push
fisubl
mov
cld
in
insl
sub
ja
inc
enter
rolb
add
out
out
inc
push
jne
shrb
sti
pusha
or
or
pop
and
and
pop
repnz
call
stos
dec
adc
or
mov
clc
sahf
xor
imul
push
add
dec
mov
mov
xchg
mov
out
pop
add
mov
sbb
scas
ljmp
sbb
movb
aam
push
jne
add
pop
xor
call
and
scas
daa
mov
ficompl
xchg
in
and
call
cltd
mov
xchg
push
sub
inc
sub
loopne
loopne
bound
sahf
ds
sub
add
mov
shlb
lret
in
xor
mov
ret
mov
or
loopne
jecxz
add
loop
sub
std
xor
popa
add
add
xor
adc
test
xor
mov
daa
sbb
je
enter
ss
jne
inc
cmp
call
add
lahf
js
mov
sar
adc
popf
adc
or
imul
loop
xchg
out
test
arpl
mov
push
adc
add
mov
pop
xchg
test
adc
insl
xchg
xor
nop
inc
pop
xor
adc
and
xchg
xor
xor
add
xchg
cmp
sub
cmp
movsb
int3
aaa
sbb
int
and
je
repnz
insb
mov
scas
test
jo
cs
popa
aam
adc
decl
pusha
loope
xor
add
orb
loopne
sbb
mov
icebp
aam
lret
ret
pop
mov
mov
idivl
dec
shrb
xor
into
fwait
test
testb
subb
xchg
adc
test
movl
push
rorl
roll
ret
imul
jle
sbb
bound
loopne
mov
jnp
or
jp
add
or
add
nop
negb
cmp
inc
fiadds
mov
loop
rcrl
ret
dec
je
fldpi
mov
add
or
test
adc
mov
dec
jo
loope
hlt
fistl
dec
gs
pop
add
mov
std
jnp
add
pushf
push
ret
in
test
add
cmp
fisubl
addb
push
ss
jno
rolb
pop
stos
xor
or
xchg
lds
cmp
clc
inc
mov
je
dec
cmp
test
push
bnd
outsb
lods
mov
adc
outsb
jb
movsb
mov
inc
sub
pop
sbb
mov
mov
and
mov
cmpsb
fidivs
scas
ss
inc
clc
addr16
and
fmuls
inc
mov
call
sub
shl
stos
call
in
ret
and
mov
lock
aad
jecxz
cltd
adc
dec
fistl
adc
pop
clc
out
shl
negl
mov
mov
push
sbb
mov
push
icebp
lds
das
lods
data16
loopne
lock
nop
cmpsb
xor
pop
psubd
cmp
jne
stos
mov
mov
mov
adc
pop
dec
or
push
scas
mov
or
adc
insb
movsl
js
mov
decb
or
cmc
out
inc
mov
add
jns
sub
jle
ret
jo
push
and
cmc
mov
xchg
sub
iret
and
adc
and
mov
in
pop
adc
jne
sbb
xchg
fiadds
and
sub
shlb
jbe
das
add
lods
dec
or
inc
cwtl
das
jp
xchg
jl
dec
inc
adc
stos
mov
mov
andl
xchg
daa
adc
pop
add
pop
or
push
int3
sub
pop
arpl
inc
jmp
mov
and
pusha
mov
fcoms
xchg
das
sub
add
add
dec
sbb
cwtl
rcrl
mov
and
add
mov
lret
or
imul
pop
ret
or
adc
lods
lret
call
adc
inc
fidivl
mov
call
nop
and
popa
jp
test
or
out
add
or
daa
and
rol
push
cwtl
cmp
pop
mull
and
sub
ror
cmc
dec
cmp
and
dec
add
dec
push
cs
insl
dec
sbb
sbb
xchg
popf
and
pop
mov
pop
jecxz
adc
sub
aas
lock
or
int
sub
sbb
loop
data16
mov
adc
or
orl
lcall
loop
rolb
lods
cmpb
sbb
adc
inc
cli
or
or
roll
and
inc
mov
or
jmp
mov
outsb
mov
data16
pop
cltd
and
into
sub
push
cmp
mov
ret
dec
mov
push
add
scas
xor
in
cli
adc
test
jae
mov
mov
sub
cmpsl
je
mov
sub
in
pop
adc
out
imul
orb
jb
add
mov
sbb
js
and
data16
rolb
push
jae
lea
push
push
call
pusha
mov
je
les
loop
xadd
pusha
sub
xchg
fdivr
lahf
lahf
clc
xor
xchg
fisubl
and
lret
sbb
xorb
push
push
lret
int
rcrb
ret
add
jbe
dec
xchg
dec
loopne
xlat
push
mov
adc
sbb
adc
cmp
or
push
or
and
shlb
mov
xor
stos
sub
loopne
add
adc
jb
sti
sub
or
fildll
pusha
in
loop
cmp
adc
inc
xchg
enter
loop
jb
ficomps
lock
add
lret
fsubrs
lea
fcmovbe
mov
cld
fs
orl
sub
cld
bound
and
sbb
pop
lret
fistpll
or
cmp
add
dec
cmp
sbb
aas
inc
iret
jb
rclb
fdivp
hlt
addr16
scas
in
loope
inc
aam
inc
outsb
mov
mov
add
mov
loopne
inc
or
and
fiadds
xor
jb
aad
rolb
shrb
and
push
xor
cmp
neg
or
mov
jbe
and
lcall
das
pop
cmp
jne
push
add
xchg
lock
loopne
or
pop
cmp
jbe
jecxz
mov
pop
add
push
in
stc
jmp
sub
outsl
test
in
pop
or
and
sbb
inc
shrb
aas
ret
jmp
jecxz
xor
jbe
lret
ret
or
dec
mov
rcrb
xchg
add
and
js
ret
cwtl
icebp
pop
nop
jae
jbe
je
in
loopne
xor
inc
inc
mov
adc
lods
add
aam
hlt
mov
mov
inc
xchg
jns
and
adc
jno
pop
clc
loopne
dec
inc
dec
adc
mov
jmp
adcl
aaa
jno
gs
popa
adc
cs
daa
enter
inc
icebp
add
ret
xchg
sub
adc
or
stc
adc
adc
dec
incl
jmp
mov
jno
aas
cmc
sub
loope
fdivl
pop
lods
icebp
jl
sbb
pop
or
adc
push
push
call
and
pushf
adc
inc
or
jmp
inc
add
jne
into
out
xchg
push
mov
xor
roll
or
cmp
mov
mov
adc
pop
and
jb
mov
and
xor
inc
xor
dec
mov
add
dec
push
js
pop
fistpl
add
sbb
outsl
adc
jecxz
xor
es
rcll
nop
mov
daa
cmp
aas
jo
imul
mov
and
iret
ss
or
mov
filds
jne
xor
js
inc
inc
daa
or
push
aaa
push
stos
shlb
xor
out
sbb
sbb
popa
rolb
cmp
fwait
loop
adc
cmpsl
mov
xor
pop
hlt
movsl
shll
daa
sbb
push
out
xor
aaa
je
dec
ss
jns
cmp
push
testl
sti
lds
push
test
daa
mov
push
or
adc
or
sbb
sub
cmp
mov
inc
add
and
pop
mov
test
imul
test
addr16
xor
push
add
les
js
les
adc
lods
dec
add
cltd
sbb
das
lock
jne
jecxz
mov
dec
and
or
mov
nop
inc
icebp
or
jo
or
sub
push
loopne
icebp
cmp
jp
enter
aam
daa
or
out
sub
mov
xorb
lret
adc
fwait
push
test
fucomp
iret
dec
dec
mov
adc
jmp
imul
test
xchg
lock
fs
mov
jo
dec
lea
push
std
unpckhps
sti
add
adc
inc
cmp
or
jo
or
test
xchg
jmp
rclb
fisubl
or
jg
ret
in
iret
xchg
cs
enter
add
xchg
cmp
imul
sbb
ret
adc
push
jbe
ret
push
add
xchg
popf
in
int3
mov
inc
sub
cmpsl
lahf
sbb
ljmp
sbb
test
movsb
sbb
push
push
mov
rolb
adc
jle
arpl
adc
pop
ljmp
repnz
sahf
int3
push
sub
jl
sub
add
enter
sbb
pop
sbb
into
popf
call
and
in
or
out
int
jno
out
or
jb
sub
fsubrs
ljmp
dec
adc
sub
addr16
sbb
shlb
call
xchg
ss
or
cmpsl
sub
test
lahf
fstpl
mov
dec
adc
lcall
cmpsl
jmp
inc
rorb
test
mov
adc
movsb
cltd
sbb
dec
nop
out
in
shlb
add
xchg
call
enter
test
in
jno
testl
ret
enter
pop
fdiv
outsl
inc
sbb
pop
jge
lcall
add
push
addb
std
lret
sub
loopne
clc
ds
mov
push
inc
and
push
pop
cmpsb
icebp
sub
fdivs
test
push
push
rcll
and
jmp
in
loop
ret
ss
sbb
cmp
int3
fisttpl
sbb
adc
stc
mov
pop
sub
jno
xchg
nop
xchg
add
inc
out
cmp
fistpl
stos
or
mov
add
mov
cmp
js
xor
popa
add
fdivrs
inc
add
dec
xor
dec
sbb
push
ret
jne
push
add
gs
and
in
inc
out
dec
pop
push
loope
jmp
mov
enter
add
adc
push
push
adcb
xchg
push
mov
fadd
cmpsb
fdivl
out
or
rcrl
mov
mov
push
addr16
sub
mov
xchg
pop
add
xor
fsub
adc
xorb
and
inc
push
ret
add
cmc
iret
xchg
jno
sub
call
push
aas
mov
sahf
and
imul
mov
mov
imul
push
push
pop
mov
js
dec
pop
jp
mov
sub
fimull
xchg
jmp
cli
dec
lahf
add
rcl
aaa
ret
xchg
mov
pop
icebp
xor
popa
dec
ret
adc
pop
inc
add
add
xor
call
sbb
movsb
mov
add
mov
ss
aas
and
sub
sbb
pop
inc
sub
rorb
loope
pusha
inc
jl
mov
rcrl
mov
jae
test
popa
sub
xor
mov
pushf
idivl
jns
dec
hlt
inc
out
lcall
iret
push
add
adc
imul
dec
loopne
sbb
or
inc
ficompl
mov
das
cmc
xor
jno
orb
jg
mov
or
nop
loop
xor
aas
bound
sub
imul
adc
lret
dec
push
sbb
pop
push
push
add
test
loop
dec
ret
lods
dec
sbb
inc
addl
or
cli
pop
shrb
or
mov
aas
add
dec
pop
sbb
cmc
pushf
jp
movsl
sbb
movsb
shlb
push
lea
xor
pop
stos
add
test
mov
jae
ret
test
push
test
xchg
fistl
int3
fistpl
movsl
sarb
ljmp
ficompl
adc
xchg
movsl
ret
dec
out
sub
or
mov
inc
hlt
and
adc
outsl
std
out
hlt
stos
jne
inc
push
fsub
out
mov
add
mov
xor
inc
out
cmpsl
and
scas
adc
inc
test
ret
ficompl
sbb
push
add
imul
jno
pop
sub
inc
loopne
push
jnp
xor
repz
shlb
xchg
xor
lea
add
mov
cmp
xchg
adc
nop
mov
shr
add
pop
dec
add
add
mov
addr16
add
xor
aas
mov
jmp
inc
jns
jp
sub
inc
xor
dec
mov
add
push
js
sub
subl
sar
andb
scas
push
fisttpll
or
pop
or
lds
sahf
push
test
jle
push
jb
push
add
add
rcrb
jo
popf
mov
iret
dec
pusha
jb
cld
in
adc
or
test
mov
xchg
test
push
mov
mov
lock
jnp
xchg
jmp
cmp
jbe
lahf
push
das
loope
imul
mov
pop
push
ljmp
popa
pop
add
cmp
je
add
lret
repz
test
insl
sar
movsb
inc
pop
in
mov
mov
ret
scas
dec
add
add
arpl
dec
xchg
cld
nop
jno
jp
cmpsb
daa
sbb
inc
loope
xchg
cld
and
inc
js
adc
leave
add
add
xchg
cld
inc
and
rorb
xchg
popa
jo
xor
inc
pushf
cld
jns
add
sub
cld
sub
not
stos
or
mov
adc
mov
rcl
dec
cltd
cmp
or
mov
jp
mov
push
jmp
jg
lds
cld
mov
jl
inc
stos
cli
xor
pop
xor
jmp
inc
test
shrl
fsubs
int3
add
call
add
fstl
sbb
mov
mov
mov
or
xor
mov
sub
or
jl
sbb
aad
mov
mov
bound
jb
or
data16
orl
lds
add
orb
adc
out
es
fwait
sbb
and
lea
xor
sbb
pop
inc
and
ffreep
sbb
push
std
and
test
pop
cmp
fnstcw
hlt
inc
push
add
xchg
push
xor
adc
jmp
lahf
xor
imul
adc
fnclex
or
fs
push
jecxz
das
lods
add
in
add
add
mov
xor
orl
mov
jg
push
outsb
insl
xchg
mov
add
fdivp
pop
mov
xchg
jbe
or
mov
jnp
ss
movsb
adc
shlb
fbstp
xlat
xor
outsb
pop
rolb
pushf
fadds
jae
add
pop
loopne
push
push
xor
xchg
sub
adc
dec
pop
xor
or
xorb
xor
or
sub
test
dec
mov
and
add
and
push
les
shlb
nop
add
add
adc
fnsave
xor
out
subb
and
test
sub
mov
subl
orb
test
clc
jne
dec
test
or
test
or
and
mov
test
pop
loope
xor
call
sub
jae
pop
in
adc
inc
test
nop
pusha
xor
stos
mov
inc
and
hlt
imul
jecxz
es
add
adc
or
imul
fisubs
cmc
in
push
or
sbb
pop
sub
or
inc
std
xor
lods
and
jg
push
and
dec
fldcw
push
clc
sahf
pop
in
movsb
dec
inc
or
mov
push
std
add
or
or
sbb
add
out
jp
ret
call
cmp
jmp
push
xor
pop
je
imul
mov
lcall
jno
push
jecxz
jno
adc
imul
out
arpl
nop
mov
sbb
adc
out
sub
pushf
ljmp
mov
jb
fucomi
xor
rorb
les
pop
arpl
sub
adc
xchg
mov
xchg
or
faddl
in
shrb
loopne
repz
or
imul
or
clc
push
adc
sahf
push
movl
adc
cwtl
cwtl
xor
fstp
insl
int
cld
addr16
out
adc
adc
adc
adc
jne
cmp
mov
adc
push
or
insl
stos
mov
add
xchg
dec
inc
imul
dec
insl
xchg
adc
xchg
add
mov
inc
sbb
and
cmp
push
sbb
sub
repnz
into
xchg
push
add
faddl
stc
stc
fadds
pop
inc
inc
adc
or
jp
rcr
sbb
add
sbb
or
xchg
ret
lcall
mov
popf
dec
clc
ljmp
movsl
mov
xor
popf
clc
push
inc
sbb
or
or
sub
daa
inc
fadd
adc
add
shll
call
sub
jge
std
adc
mov
jl
add
mov
sub
test
dec
jp
pop
out
arpl
mov
dec
leave
fwait
and
arpl
or
push
jecxz
clc
xor
xchg
mov
jecxz
jle
enter
enter
mov
pop
dec
mov
or
pop
mov
push
call
mov
ljmp
in
dec
ret
std
mov
cld
les
mov
or
lds
add
mov
mov
mov
fcmovnbe
mov
or
inc
dec
dec
fcmovnu
std
aad
mov
pushf
scas
adc
sbb
mov
sbb
mov
dec
mov
ret
sub
push
out
rcrl
xchg
push
rclb
add
xor
push
repnz
and
cmp
daa
pusha
loope
push
rolb
leave
ret
lods
dec
add
xchg
xchg
or
mov
sahf
add
xor
add
fwait
ss
or
push
leave
and
inc
push
add
sbb
gs
lods
into
test
rclb
pusha
dec
fidivrl
xchg
add
aam
js
add
dec
cs
or
mov
fisubrs
nop
and
push
pop
pop
or
jp
mov
fwait
aaa
adc
loope
jle
fmuls
loopne
mov
inc
push
or
imul
sbb
iret
push
pop
dec
insb
aaa
scas
xor
inc
sub
movsb
or
in
sub
das
jmp
lock
test
nop
adc
fsub
outsb
dec
sbbb
push
add
xchg
ret
and
into
mov
icebp
call
sub
es
std
sub
icebp
dec
cld
dec
push
call
or
scas
int
sbb
pop
add
mov
dec
jb
pop
jne
mov
imul
sbb
fmuls
icebp
sbb
sbb
dec
xchg
loope
idiv
mov
testl
call
or
loope
ja
repz
push
cmp
sub
sarb
and
fwait
and
push
test
outsb
mov
adc
rcrb
test
jne
jmp
adc
shll
sbb
mov
mov
xchg
js
imul
cwtl
adc
sbb
and
sbb
dec
or
xor
mov
lds
and
in
xor
or
imul
aam
mov
add
push
cmp
xchg
jae
lds
jno
xchg
or
mov
in
inc
repz
or
and
sbb
out
jbe
in
xor
sub
out
sbb
xor
scas
push
mov
jl
sar
push
sub
lea
lret
adc
outsb
mov
cld
rolb
test
push
js
adc
add
pcmpeqd
out
push
jmp
into
xchg
js
jo
jl
pop
xchg
fmuls
sub
sti
add
cmp
and
insl
fcmovu
cltd
jp
std
or
lahf
cmpsl
sub
lock
or
dec
movsl
xor
hlt
packuswb
in
inc
pop
enter
in
adc
mov
imul
and
push
xchg
jns
and
fstpl
scas
mov
pop
add
inc
loopne
adc
loopne
fdivr
enter
stc
cmpsb
int3
sar
sub
push
dec
pop
sub
in
and
adc
mov
xchg
jns
arpl
mov
sub
sub
or
pop
addb
xor
xchg
in
inc
inc
fs
push
test
loope
jp
pop
aam
add
test
imul
cwtl
add
sub
imul
pop
lds
add
or
push
nop
and
cltd
push
or
adc
inc
mov
fmuls
mov
dec
loopne
sub
lahf
mov
lea
cld
sbb
jg
adc
cmp
inc
nop
idivb
xchg
xchg
cmp
and
sbb
scas
mov
cwtl
mov
xchg
aaa
ret
or
addr16
sbb
call
and
int
pop
outsl
push
sub
out
sbb
stos
pop
adc
aam
hlt
cmp
jge
ficoms
adc
and
cmp
push
or
mov
les
push
andnps
mov
pop
and
test
clc
or
cmp
cmp
aaa
mov
xor
adc
dec
lret
test
cs
xor
push
or
add
sub
xchg
dec
dec
fdivrl
dec
sbbl
and
adc
or
jne
pop
ret
js
adc
pusha
add
jp
or
and
divl
add
adc
and
add
pop
dec
xchg
js
mov
dec
mov
xlat
xorl
outsl
clc
xchg
fcoml
cli
jne
adc
xor
jne
sbb
movb
aas
or
cmp
into
test
push
mov
imul
or
dec
push
mov
ret
mov
dec
stc
push
lea
adc
gs
lea
scas
mov
push
pusha
adc
push
shll
mov
or
mov
pop
xor
and
and
dec
xchg
or
das
fldenv
or
push
test
xchg
inc
subb
jnp
daa
xor
lahf
add
pop
rclb
subl
mov
test
sbb
cmpl
popf
dec
out
popa
pop
inc
ficompl
inc
and
jae
push
js
push
jge
dec
and
and
icebp
lds
pushf
fs
out
jae
js
cs
stos
cmp
cmovs
scas
ljmp
cld
sub
jb
ds
push
add
sarb
mov
pop
loopne
std
add
and
out
movsl
xor
fnstcw
push
sbb
sub
sub
es
cmp
xchg
sbb
daa
sbb
loop
ja
mov
pop
add
mov
jg
lods
iret
arpl
mov
stos
fxch
arpl
mov
inc
sbb
rcrl
mov
and
pop
lret
shll
aam
outsl
push
das
lods
jno
or
add
jmp
push
mov
stos
inc
dec
notb
out
rol
inc
sbb
mov
les
movl
mov
call
and
icebp
fstpt
and
sti
rcrl
ret
cmp
mov
and
mov
jl
call
jecxz
add
sbbb
mov
mov
pop
pop
pop
decb
push
loopne
xor
repnz
adc
jnp
push
xchg
int
or
out
xchg
data16
inc
push
nop
fildl
cli
lcall
mov
sub
int3
fdivl
jns
mul
cld
idivl
pop
js
lret
mov
and
xchg
lahf
nop
sub
inc
test
mov
push
mov
scas
push
lods
clc
out
add
pop
jge
mov
xor
jno
adc
sub
outsb
insb
sahf
or
pop
mov
incl
mov
sbb
js
in
pushf
inc
and
lods
fiadds
std
insb
fidivrs
push
mov
push
call
mov
mov
mov
dec
or
pushf
sub
jle
rcrl
pop
aam
into
in
ljmp
sahf
les
aaa
push
pop
mov
fdivrs
out
xchg
out
rcll
dec
orl
mov
sub
mov
sbb
add
repz
add
mov
mov
adc
adc
fs
and
add
jne
dec
movsl
loopne
mov
ja
push
and
mov
out
sbb
daa
mov
repnz
lds
mov
test
cmp
je
out
scas
loopne
pop
mov
pushf
add
adc
mov
sub
mov
xor
jl
das
sbb
movsl
jmp
into
or
adc
xor
roll
sbb
sbb
jmp
sub
mov
loope
les
and
cmp
or
in
sub
lret
dec
lcall
pop
iret
les
lret
add
out
jbe
outsl
mov
mov
aam
push
movsb
cmp
xor
test
or
gs
adc
dec
lea
lock
dec
push
rclb
fildll
push
or
xor
aaa
or
or
roll
and
test
loopne
clc
dec
inc
jmp
push
mov
mov
sub
dec
incb
add
add
or
adc
jmp
adcb
sub
and
mov
fisttps
clc
aaa
ret
cmpl
ret
pop
sub
mov
popa
mov
mov
mov
xchg
mulps
sbb
dec
and
mov
in
adc
adc
mov
jecxz
rorl
jbe
mov
sub
lcall
loopne
call
mov
jbe
adc
sbb
inc
nop
lret
sarl
les
and
syscall
jne
sbb
add
cmp
out
std
lcall
insl
sarb
jge
jb
mov
out
cwtl
add
push
sbb
aas
cmovno
adc
ds
xorl
inc
cli
in
jl
xchg
jle
or
push
fadds
jmp
sbb
xor
arpl
pop
push
xchg
and
mov
test
out
adc
and
add
add
jmp
xchg
aaa
fwait
mov
sbb
mov
and
int
arpl
xchg
sbb
adc
add
ja
pusha
add
enter
adc
jp
ds
mov
push
jbe
xor
je
cmpsl
lds
jecxz
adc
or
popa
sub
pop
dec
push
xor
or
enter
jecxz
cli
jmp
add
rcrl
and
jecxz
add
fdivs
push
adc
ret
test
xchg
add
cmp
imul
enter
sub
jo
movb
jbe
adc
imul
dec
dec
pop
dec
jmp
jno
sbb
lds
aaa
sbb
lret
or
test
mov
sbb
repnz
lret
add
sahf
leave
sbb
pop
xor
jg
das
shr
repz
clc
fwait
mov
sbb
adc
sub
jle
leave
jg
jmp
pop
rcrl
jo
pop
jns
pushl
sbb
les
cmp
stos
xchg
sub
xchg
fcomi
outsb
icebp
adc
mov
std
mov
ret
add
mov
push
pop
add
mov
imul
sti
shrl
add
mov
sbb
rcrb
mov
add
les
xchg
mov
adc
sub
xor
push
je
les
cmpb
mov
test
or
xor
in
gs
data16
dec
inc
movsb
sbbb
jmp
sbb
insb
bound
fcomi
jmp
jg
jo
lret
les
cmp
ret
sub
out
aad
or
fcoml
jle
fs
and
cld
sbb
les
or
mov
cli
test
into
clc
imul
mov
scas
addb
sbb
psrlq
mov
jle
mov
movsl
xlat
or
xchg
sub
sahf
rorb
xchg
cmc
add
xchg
jle
sar
dec
jno
rcrb
outsb
fmull
je
pop
jge
push
and
xchg
push
ficoms
fcoml
sub
sbb
add
jg
mov
jbe
add
adcl
enter
ljmp
pop
and
sub
add
int
stos
movb
or
push
mov
push
mov
xor
test
arpl
ljmp
or
test
jg
pusha
shll
mov
rcl
add
dec
je
dec
aad
dec
sub
add
xchg
mov
fsts
xchg
add
xor
lea
fwait
cmc
inc
sbb
and
shll
ds
das
dec
adc
std
nop
inc
mov
rorl
and
push
cmc
cmp
mov
inc
daa
aad
sub
rcr
xchg
mov
in
and
cmp
call
jb
pop
mov
push
push
push
pop
pop
loope
push
or
scas
pop
orb
sbbl
bound
pop
insb
push
add
push
add
lods
das
imul
fsubl
ljmp
lret
dec
in
adc
insl
sub
call
adc
or
mov
sbb
or
jmp
inc
sbb
mov
mov
mov
adc
or
pop
push
inc
adc
pop
or
adc
daa
push
mov
add
and
cmp
orb
inc
dec
enter
pop
or
ja
bound
stos
dec
inc
inc
rcrl
sarl
xchg
movsl
fmulp
jle
insl
mov
xor
sub
inc
adc
aad
push
loop
jg
ret
dec
dec
lea
cld
ja
lock
call
and
test
sbb
inc
fisttpll
push
sbb
push
or
mov
fwait
jno
pop
or
push
sbb
adc
les
loopw
mov
cmp
fldt
dec
adc
in
stos
inc
xor
cmp
inc
mov
mov
mov
imul
xlat
call
and
xorl
add
fimuls
push
test
hlt
adcb
jae
loop
fistps
leave
xchg
cmp
and
repz
cmp
or
lds
push
popl
add
inc
in
xorb
push
push
xor
jb
pop
nop
jecxz
dec
fistl
mov
sub
lods
or
jo
movsb
in
and
lret
movsb
aaa
loope
stos
inc
mov
mov
out
jne
pop
mov
and
push
into
pop
sub
jge
inc
jge
test
cmp
pop
das
es
and
fsubl
icebp
jg
int
jmp
adc
xorb
nop
pop
or
push
adc
xchg
sub
or
rcrl
xor
sub
dec
cltd
fwait
std
call
lea
adc
insb
mov
xor
repz
xchg
push
jg
fstl
nop
clc
xchg
lahf
dec
xor
mov
lock
sbb
jmp
imul
outsb
adc
in
stos
test
aaa
mov
and
or
cs
adcl
add
jno
fbstp
jmp
popf
inc
xor
inc
imul
dec
scas
sahf
mov
sbb
ret
cmp
push
js
mov
shlb
lret
fld
push
in
mov
add
daa
pop
inc
jae
cmpsl
xchg
fiadds
jp
pop
adc
fisttpl
add
push
jge
fdivs
popf
aad
int
fistpl
scas
fiadds
add
in
xchg
cs
adc
mov
movntq
out
cmp
hlt
dec
or
cwtl
push
or
test
pop
rcll
add
push
xor
sub
test
mov
add
jecxz
dec
sbb
jg
aas
push
outsl
mov
xchg
cmpsl
aas
adc
jae
sbb
pop
lcall
xorl
lods
mov
shrl
in
sbb
inc
push
das
aas
fildll
add
mov
je
jo
xlat
clc
and
es
and
cld
pop
jp
sub
outsl
cli
mov
arpl
sub
cmp
in
add
cmpsl
lcall
add
jmp
xorb
sbb
fistps
movl
adc
test
fidivrl
cmp
add
mov
add
sub
cmp
andl
push
adc
pop
cmc
jo
rolb
xchg
ret
mov
daa
loopne
cmpsl
and
sub
mov
repnz
jae
mov
shlb
push
mov
or
aam
ficoms
out
imul
mov
adc
mov
outsl
xchg
add
dec
ret
sub
sub
adc
and
pop
in
cs
sbb
adc
addb
dec
pop
dec
cli
imul
shll
adc
movb
add
pshufw
mov
push
or
ficomps
add
iret
add
add
mov
imul
jg
push
cs
jp
mov
dec
adc
add
sbb
adc
aas
mov
xor
shrl
rclb
add
and
dec
das
mov
fadds
mov
xor
xor
cmpsb
or
sbb
push
insl
ret
sbb
in
push
imul
jle
xchg
add
cs
push
sbb
cld
lea
xchg
xchg
les
mov
push
lds
sub
push
daa
icebp
ret
mov
xchg
push
mov
adc
pop
jno
inc
enter
pop
xchg
insl
test
rcr
xor
lock
enter
bound
and
addr16
push
std
hlt
cltd
inc
in
pop
sbb
adc
aam
arpl
add
sbb
dec
ret
scas
push
adc
ljmp
jnp
loopne
xchg
cld
daa
imul
push
in
sbb
fiaddl
int3
xor
push
imul
jl
pop
or
xlat
stos
push
add
test
cmp
xchg
lret
sub
mov
aam
push
push
es
or
xchg
ret
push
mov
xchg
and
movsl
sahf
andl
pop
shll
fs
cmpsl
shll
test
add
mov
add
dec
cmp
mov
dec
les
sbb
mov
leave
loopne
xchg
scas
mov
mov
add
dec
push
es
or
dec
ljmp
adc
testb
aam
in
dec
les
js
dec
xlat
adc
je
enter
ffree
and
mov
sub
shll
dec
push
out
add
sbb
mov
jno
imul
inc
movsl
sub
insb
sub
sbb
fnstenv
les
les
divl
xchg
orl
inc
mov
and
or
jno
adc
sbb
test
mov
lods
adc
xchg
pop
or
add
divl
xor
loope
cmp
inc
push
scas
rcll
sub
inc
mov
jl
mov
xor
mov
mov
test
cwtl
ljmp
xchg
mov
mov
sub
les
jmp
or
cmpsb
mov
mov
jge
movsb
loopne
ss
add
cmpl
cli
fcomps
push
or
push
test
sbb
add
jge
cld
add
mov
vpmaddwd
push
shlb
add
das
loopne
ficomps
test
mov
add
sahf
add
jnp
adc
pusha
inc
sarb
repnz
inc
fidivl
push
mov
test
xchg
add
sbb
or
rcrb
inc
xor
rcrb
mov
sub
mov
dec
inc
and
pop
sbb
push
icebp
push
or
and
mov
cltd
xchg
pop
add
cmpb
jecxz
imul
xchg
push
out
dec
fwait
sbbl
ja
or
mov
jl
das
mov
mov
push
mull
nop
pusha
loopne
push
and
mov
sbb
or
and
dec
pop
fimull
lock
pop
inc
ret
lret
sarb
xchg
aas
inc
jo
sbb
rolb
dec
loopne
hlt
icebp
pop
jecxz
shlb
add
jmp
icebp
mov
or
jmp
dec
sbb
sub
dec
and
mov
cltd
lea
mov
push
sbb
jo
push
ret
push
es
lods
xlat
adc
and
inc
cli
clc
aad
pushf
inc
pop
icebp
test
ret
jmp
pop
mov
sti
adc
cmpsb
xlat
cmp
pxor
xor
hlt
inc
add
sbb
sub
es
out
rcrl
or
push
movsl
or
data16
xchg
xchg
pop
cwtl
aam
loop
mov
test
insb
filds
and
push
loopne
scas
adc
and
mov
lcall
lret
push
dec
or
loop
mov
adc
inc
loope
dec
and
inc
rol
mov
cmc
sub
or
ret
cltd
mov
pop
nop
addl
mov
cmpsl
into
movb
sub
call
jne
ret
and
mov
rclb
je
add
xchg
les
popa
cmp
mov
inc
sbb
scas
and
mov
inc
int
mov
fiadds
cmpsl
in
add
dec
fwait
add
push
aad
aad
scas
or
add
mov
mov
outsw
loope
mov
pop
mov
rcl
add
inc
imul
ss
cmp
jno
fsubr
ror
add
adc
popf
xor
dec
sub
pop
mov
xlat
mov
out
add
pop
jle
pop
ret
and
or
sbb
and
insl
jb
insl
loopne
push
push
cwtl
sti
add
or
mov
scas
or
inc
inc
adc
iret
pop
sbb
in
xor
pop
and
mov
or
cmp
pop
xor
cld
or
test
ljmp
in
sti
push
aas
xchg
sub
lahf
adc
or
loope
fsubrs
out
dec
aad
ja
mov
or
adc
sbb
sbb
int
dec
prefetch
pop
sub
in
xchg
arpl
mov
add
xchg
and
nop
add
fidivrl
add
aaa
and
je
or
loope
adc
jnp
leave
js
add
dec
or
sbb
test
mov
pusha
jb
dec
add
xlat
test
testl
shlb
nop
push
xchg
adc
aam
cld
movsl
mov
test
orb
dec
call
xor
mov
and
incl
xor
jmp
ljmp
and
pop
push
dec
lcall
lods
cwtl
testb
stos
roll
mov
or
jbe
or
roll
dec
and
add
add
push
or
and
mov
clc
xchg
push
data16
or
addl
movsb
rcll
lret
sbb
push
aam
mov
fcoms
push
into
jecxz
fildll
inc
dec
ss
lahf
leave
jmp
aaa
jp
fisubl
xchg
pop
in
xchg
add
and
inc
mov
jmp
aas
push
pop
shrb
inc
mov
unpcklps
pushf
sub
push
outsl
adc
sbb
outsb
pop
mov
dec
js
in
call
add
and
mov
adc
jmp
rclb
and
cmp
rclb
mov
data16
or
push
ror
cld
ficoms
rorl
xor
xlat
push
inc
adc
dec
or
push
jmp
or
call
pop
fstps
dec
inc
jbe
and
out
xor
add
add
jle
imul
addb
xadd
push
or
popa
lea
push
adc
add
inc
or
aas
std
or
int3
sbb
mov
or
daa
mov
pop
mov
ja
xchg
xchg
mov
fildl
test
out
inc
sbb
shlb
push
add
insb
mov
shrb
dec
iret
popf
mov
pop
daa
jecxz
les
sbb
jb
test
push
push
jne
dec
or
scas
gs
movl
popl
push
jbe
and
xchg
dec
mov
pop
push
pop
add
inc
ret
sbb
scas
imul
add
inc
push
xor
sub
addl
enter
xor
dec
mov
sub
dec
and
fidivs
push
sbb
pushf
push
scas
lods
push
push
sbb
or
popl
push
ja
lcall
aaa
addr16
mov
in
les
add
sbb
stos
or
les
mov
xorl
aam
pop
or
test
pushf
fimuls
or
lock
les
dec
daa
jo
movsb
xchg
adc
xor
xor
loope
jecxz
mov
scas
sbb
scas
add
jns
fwait
les
jp
and
rcr
push
or
xor
inc
int3
and
pop
push
adc
shl
jne
push
daa
fadds
mov
ljmp
lds
cmp
add
push
sti
cs
nop
add
mov
jb
jns
int3
aaa
jge
mov
loope
jmp
adc
inc
outsb
jg
dec
mov
sbb
aas
pop
add
or
mov
nop
cmp
ret
mov
pop
and
sbb
lea
xchg
inc
inc
sbb
leave
imul
stos
mov
adc
jmp
add
nop
jp
add
iret
orb
jno
sub
fildll
fdivs
mov
cltd
in
add
adc
rcll
sbb
dec
adc
pop
cmp
xor
in
addl
fcomps
add
add
sbb
lods
stos
addr16
fstpt
test
loopne
lea
sub
inc
jge
test
scas
out
mov
loopne
mov
ret
mov
add
adc
dec
mov
cmpb
adc
xchg
loop
fmuls
push
scas
pop
sub
and
or
ret
jnp
arpl
cs
or
and
int
test
lret
cmp
jb
dec
add
into
fwait
dec
and
clc
inc
mov
pop
ljmp
xor
in
call
rcr
inc
fwait
sbb
jbe
xchg
repz
shll
sarl
sbb
jp
xchg
fadd
out
rolb
and
movsb
dec
push
mov
ds
mov
lods
fwait
inc
dec
orb
imul
out
ss
mov
stos
mov
sahf
clc
add
adc
je
push
xlat
clc
add
xor
xchg
cmp
test
nop
icebp
daa
xchg
sbb
clc
shrb
fcmovbe
cmp
inc
addr16
shlb
mov
pop
jbe
sub
arpl
repnz
js
push
dec
call
mov
xchg
add
test
or
sarb
mov
pop
or
insb
jl
inc
loopne,pn
mov
or
lods
mov
call
lock
or
and
xchg
outsb
sbb
ret
add
popf
rcll
mov
add
cmp
into
mov
cltd
lea
out
and
or
jg
dec
push
call
movsl
sbb
js
xlat
xchg
mov
push
les
loope
int
xor
adc
mov
cmp
push
mov
aam
or
inc
and
dec
jecxz
add
sub
dec
out
dec
xlat
push
stos
sbb
movsl
jle
icebp
inc
mov
pop
add
and
dec
pop
incb
xchg
test
lcall
je
dec
addr16
fyl2x
imul
shlb
pop
add
inc
pop
mov
mov
ljmp
aas
xchg
jno
push
push
xor
ljmp
xor
inc
mov
sub
jne
xchg
arpl
lock
xor
stos
movsl
xchg
addl
mov
jno
or
sti
in
cmp
inc
cmp
jo
lods
daa
inc
push
mov
mov
push
test
or
mov
push
add
mov
pusha
in
jl
mov
adcb
push
and
in
add
dec
dec
pop
mov
push
xchg
pop
pop
cmp
or
cwtl
ret
add
mov
lret
lcall
in
stos
out
pop
inc
sbb
push
std
cs
or
mov
lock
scas
xchg
xor
sbb
es
jmp
mov
fs
or
jmp
cltd
jo
cmp
jno
mov
push
hlt
pop
das
aam
movsb
arpl
cmpsl
jg
cmp
nopl
imul
shlb
dec
aas
mov
cmpsb
xor
inc
pop
fwait
gs
lods
roll
sub
jbe
xorps
and
lea
xor
push
dec
xor
cwtl
imul
loope
sub
adc
push
mov
lock
cmp
sbb
daa
jb
rsqrtps
mov
push
mov
cli
push
pusha
dec
inc
mov
inc
pop
lahf
repnz
inc
or
jne
inc
outsl
xchg
add
jecxz
sbb
stc
lea
std
xor
fwait
push
mov
inc
pop
jmp
sbb
add
push
add
sub
in
lret
call
out
out
xlat
subl
jge
nop
cmc
icebp
das
add
or
testl
test
lea
arpl
sbb
push
fsubrl
inc
add
or
and
test
cmp
mov
and
mov
add
add
dec
ret
dec
lret
or
into
xchg
inc
sbb
es
push
sbb
inc
outsl
stos
imul
inc
mov
jo
test
push
adc
adc
mov
sbb
add
stos
test
aam
dec
rep
lds
mov
sbb
add
add
popaw
inc
test
test
das
test
mov
movsl
or
jo
and
lock
inc
orl
stc
test
aam
xor
jl
or
add
dec
adc
loop
aaa
bound
popf
mov
xlat
cmp
hlt
jg
dec
shrb
and
call
std
xor
outsl
and
sub
jo
fwait
adc
mov
clc
xchg
inc
sbb
or
icebp
inc
and
mov
clc
das
cmc
push
outsl
iret
dec
mov
call
in
jl
push
mov
aam
cmovge
cli
inc
dec
jl
sub
popa
rcr
add
jno
ljmp
mov
ljmp
mov
jmp
mov
add
movsb
shr
pushf
test
andl
cli
bnd
add
fsubrs
sbb
rcll
and
jg
add
shl
jns
push
pop
jb
xor
lock
adc
or
mov
sbb
xchg
add
or
jle
movl
mov
sti
aas
clc
fsubs
loope
xor
test
shlb
in
xor
push
and
pushf
ja
mov
add
std
mov
or
notl
push
rolb
sbb
push
adc
pop
rcll
icebp
mov
pinsrw
mov
xchg
add
lcall
popa
movsl
enter
xor
xchg
mov
push
or
dec
pop
int
pushf
lea
cmpsb
lret
add
pop
add
xor
dec
dec
outsl
fcmovnu
jp
dec
xchg
jmp
dec
pop
enter
in
movsb
mov
push
adc
xchg
xor
sub
add
lret
xchg
push
jp
or
icebp
mov
test
mov
xor
jns
arpl
mov
and
fildl
les
or
sbbb
adcb
lods
jmp
sbbl
loop
sahf
js
adc
xchg
add
or
cmp
add
sbb
imul
pop
xor
pop
dec
or
jmp
sarl
add
sub
daa
cmp
jne
and
add
push
add
mov
lock
dec
and
leave
roll
outsl
push
cmp
incl
arpl
aad
lods
lcall
add
test
adc
jp
pop
lods
add
sbb
pop
andl
fcomps
aas
mov
fisttps
adc
sbbl
aaa
nop
adc
add
jl
push
je
je
faddl
mov
jp
mov
outsb
ret
mov
add
dec
or
sbb
dec
inc
adc
add
loope
jo
nop
inc
and
shll
clc
loope
add
push
shlb
cmp
pop
daa
inc
imul
inc
out
andb
jecxz
mov
iret
xor
in
mov
aas
sbb
in
jl
xor
sbb
dec
out
movsb
pop
jmp
sbb
mov
sbb
adcl
sub
repnz
test
shlb
les
adc
adc
in
inc
push
push
push
add
xchg
pop
inc
aad
add
mov
fsubs
jg
cld
cwtl
add
pop
rolb
addb
adc
jae
gs
mov
xchg
cmc
inc
add
and
add
scas
jns
popa
in
sub
push
sub
data16
push
insb
in
and
int3
xor
pop
and
mov
aam
test
sbb
sub
dec
adc
hlt
pop
clc
push
adc
ljmp
pop
or
push
dec
rorl
pop
ret
pop
mov
std
mov
xchg
test
or
rcrb
cmp
outsl
in
xor
jmp
mov
repz
fcmove
push
push
lods
aas
roll
and
ss
dec
mov
push
lock
mov
cli
test
push
addb
mov
mov
adc
leave
cmp
incl
and
adc
cld
jae
inc
nop
add
mov
push
ret
shrl
push
or
pop
pop
dec
popa
test
cmp
sar
arpl
jbe
clc
imul
nop
or
push
pop
add
test
int
movsl
push
adc
adc
xor
add
push
sbb
cmpsb
inc
cltd
and
out
clc
cs
lcall
test
dec
fsub
sub
sbbb
scas
cmp
icebp
sub
or
in
xchg
sub
addb
aas
addr16
mov
mov
test
cmpb
test
les
in
hlt
adc
sbb
sahf
lahf
ljmp
mov
push
aad
add
ret
jns
cmpsl
cltd
and
cmp
or
mov
jmp
es
pop
or
in
inc
mov
add
fsubrp
or
lahf
imul
adc
nop
rorb
shll
adc
movsb
pop
stos
in
push
loopne
xor
loop
scas
test
dec
xor
movsl
jns
rorb
sub
jo
cmp
dec
sub
mov
xlat
pop
das
daa
icebp
sbb
and
call
push
fiadds
jno
daa
mov
xor
or
pop
jmp
ret
rcrb
xchg
aaa
es
cmc
jp
push
pop
iret
and
sbb
or
cltd
and
adc
sarb
dec
pushf
jmp
pcmpeqb
push
and
js
cld
sub
mov
decb
inc
mov
mov
out
in
stos
test
add
add
add
psrld
and
cmp
add
out
out
add
xchg
out
add
out
aaa
decl
mov
add
inc
add
mov
adc
lret
cmpsb
add
sbb
adc
or
adc
pop
sub
fmul
cmp
add
sbb
push
or
jle
call
lahf
ds
push
dec
or
push
sub
adc
push
xlat
xchg
xchg
dec
movsl
stos
in
or
jns
sub
enter
jnp
dec
movsl
xor
dec
mov
mov
sbb
cmpsl
or
sbb
pop
int
lret
fwait
lods
inc
add
cmp
jae
orb
dec
imul
mov
roll
add
xor
add
add
add
ret
adc
subl
insl
pop
adc
cmp
ljmp
out
icebp
push
push
mov
jb
push
jmp
loop
shl
inc
cld
push
ret
add
shll
fistl
outsl
cwtl
xchg
mov
dec
xchg
in
cmp
outsl
push
dec
add
in
push
lock
sahf
xchg
jp
add
jbe
or
pushl
add
pop
outsb
or
cmpsb
add
movsb
aas
xchg
enter
outsl
sar
call
ljmp
stos
adc
mov
dec
xor
bound
loopne
iret
dec
mov
inc
inc
inc
sub
mov
mov
in
lcall
or
pop
mov
xchg
pop
pushw
lret
popa
and
lock
negb
mov
test
or
pop
pop
sbb
mov
lcall
add
sub
xchg
out
sub
and
inc
test
and
cmp
xchg
jg
popf
inc
sbb
push
mov
add
test
arpl
daa
push
loope
and
inc
js
ljmp
push
test
icebp
xchg
pop
mov
and
rorb
std
dec
fwait
jg
test
inc
out
push
sub
std
in
cld
int3
mov
mov
dec
add
loopne
loope
loope
call
or
pop
mov
sub
ret
adc
add
mov
add
cmpb
sbb
push
and
xor
xchg
inc
movsb
repz
call
lahf
jae
xchg
xor
in
jg
enter
xchg
add
std
mov
xchg
sbb
ljmp
fstpt
pop
mov
or
addr16
lds
mov
rcll
push
decl
dec
pop
add
push
mov
loop
mov
je
or
bound
mov
inc
lock
js
inc
fists
push
je
and
mov
inc
push
pop
popa
add
aas
out
rcll
stc
shlb
xchg
and
mov
dec
dec
xchg
jo
mov
xchg
jle
das
clc
test
add
push
out
lret
sbb
xor
mov
pavgw
mov
cltd
add
inc
insb
faddl
cwtl
les
scas
dec
in
jae
insl
jg
pop
aad
and
test
push
add
ja
and
lahf
pop
jae
sub
cmp
jo
mov
add
aas
jge
cmp
add
mov
mov
out
in
call
or
xor
xor
mov
push
xchg
idivb
stos
movsb
push
and
pushf
lret
lods
pop
lock
or
inc
testb
jl
pop
je
mov
lahf
jbe
inc
test
or
sbb
decl
lcall
mov
add
cld
xchg
xor
push
incl
ds
stos
hlt
xor
pop
cmpb
cmp
out
jbe
push
add
pop
lock
fisttps
out
inc
xchg
xor
inc
xlat
pop
and
shlb
mov
cld
fcoms
loop
and
xchg
hlt
pop
scas
add
push
rcrl
pop
jne
jge
popf
mov
pop
and
push
cltd
pusha
decl
cmp
add
xchg
cmpsb
sbb
pusha
mov
push
xor
test
jg
and
mov
lcall
es
int3
sub
push
cld
popa
ret
push
and
insb
xchg
dec
pop
or
or
int3
push
mov
adc
aam
nop
mov
inc
popa
mov
inc
nop
xlat
xchg
adc
jg
jmp
adc
lods
nop
clc
sub
aas
rclb
and
pushf
and
pop
dec
sarb
out
scas
cmp
pop
ret
push
incl
pop
dec
push
and
adc
mov
push
inc
inc
inc
sbb
pusha
movntps
sub
adc
in
mov
std
pop
cmc
sbb
xchg
add
add
xchg
clc
sarl
es
pop
pusha
movsb
inc
push
ret
sub
fwait
aam
mov
decl
jg
or
fisubs
cmp
in
cs
push
mov
fsubl
decl
mov
jns
jbe
mov
push
pavgb
testb
jo
shlb
jae
cld
test
adc
outsb
inc
es
push
cmpsb
int3
call
data16
add
sbb
adcl
xchg
cwtl
cld
xchg
dec
mov
mov
icebp
pop
adc
ds
or
movsb
pop
mov
dec
scas
in
test
xorl
ljmp
and
mov
cld
sbb
add
bound
ficoml
cmpsb
stc
fcomip
notb
xchg
or
inc
sub
jge
dec
lcall
mov
cmp
insl
xor
push
loopne
js
sub
mov
and
lcall
mov
test
stc
jl
jle
adc
pop
loopne
lcall
adc
popl
jge
mov
lcall
cmp
out
and
sub
in
loop
mov
insb
and
adc
cld
pop
fcoml
nop
xchg
lea
push
incl
popa
dec
jecxz
inc
lret
xchg
inc
pushf
dec
das
jl
cld
xorb
push
adc
movsl
pop
sbb
fdivp
cmc
cmp
in
fs
outsb
pop
adc
or
fwait
sbb
jno
add
and
leave
jp
clc
sbb
pop
popa
rcll
repnz
and
outsl
lcall
cmp
jo
add
cmpsb
inc
mov
jb
ds
mov
mull
or
out
movl
mul
aas
loope
sti
bound
mov
cmp
adc
adc
sbb
es
add
push
push
in
push
mov
sub
ja
aaa
fbld
test
sbb
pop
inc
mov
jmp
das
or
shll
mov
mov
dec
add
pusha
fs
inc
or
sbbb
cmp
fcomip
clc
mov
jns
sub
and
fisubs
add
add
add
mov
and
ljmp
jg
xchg
cwtl
cmc
add
daa
int
sub
imul
cld
aas
ret
xchg
and
insb
js
dec
pop
test
xchg
xor
and
pop
in
outsb
adc
push
nop
imulb
pop
push
aaa
and
test
js
addl
std
aad
test
push
jmp
int3
mov
mov
je
lea
inc
push
push
add
hlt
cmp
lcall
jl
push
push
ret
insl
inc
mov
mov
cmp
pop
shll
outsb
xchg
decl
cld
dec
in
inc
or
cmpsl
add
cld
out
lea
sar
in
shrb
lods
ss
adc
into
aam
into
das
adc
addl
cmp
fmuls
inc
lea
js
pop
cmp
stc
push
push
sub
adc
xchg
fistl
stc
negb
sar
cmp
aas
add
add
pop
sbb
test
fcmovb
sub
mov
mov
subl
int3
sarb
loop
sarb
xchg
fwait
mov
or
clc
pop
xchg
jmp
sbb
or
int
inc
mov
xchg
jnp
adc
repz
insl
add
mov
xchg
repz
ds
or
push
add
pop
or
pop
fsubrs
jl
mov
test
sarb
imul
cmp
or
sbb
fwait
js
mov
cmp
sub
stc
adc
jle
add
pushf
add
call
sti
mov
fmull
cmp
push
test
ficoms
add
hlt
inc
mov
and
sahf
inc
mov
std
or
xor
adc
pop
mov
push
dec
into
jnp
sub
cmp
add
pushf
pop
jb
outsb
clc
out
push
fs
fldenv
into
aad
add
sbb
pop
jb
push
ret
adc
js
jnp
test
int
cmp
add
jge
cmp
in
imul
mov
xchg
enter
fimull
adc
or
pop
xchg
aam
shlb
sbb
movsl
add
cs
imul
inc
push
sub
and
jecxz
mov
and
push
test
push
mov
or
fistpl
imul
cmp
sahf
shll
in
adc
or
dec
arpl
inc
mov
popf
jmp
icebp
loope
sbb
lods
inc
sub
hlt
mov
sbb
mov
cmp
jle
rol
push
push
xchg
mov
rclb
push
add
rorb
sub
adc
inc
shr
mov
add
pop
test
push
push
mov
jg
jo
aam
scas
jno
xor
lock
mov
jge
or
sub
sbb
loop
decb
adc
xchg
jo
hlt
jns
add
pop
and
sbb
ret
adc
or
jle
add
jg
lds
add
ret
scas
cmp
mov
or
mov
pop
add
add
test
imul
loope
add
scas
or
pop
iret
add
ljmp
push
scas
inc
test
lcall
hlt
add
add
addb
adc
pushl
inc
add
cs
jge
fldt
inc
or
mov
add
iret
aas
inc
push
mov
loopne
dec
ror
out
jmp
bound
jg
cmpb
shrl
adc
rolb
add
aaa
add
std
jmp
jge
out
add
nop
jmp
push
int3
daa
push
xchg
ljmp
out
add
pushl
push
xor
lds
arpl
pop
call
pop
cmpsl
jge
scas
loop
jg
inc
and
jnp
jns
call
cmp
adc
add
push
jmp
clc
mov
xor
repz
jg
aaa
ficoml
shrl
lds
outsl
xor
aam
std
scas
loopne
dec
pop
mov
push
push
push
push
adc
mov
fadds
push
xchg
pop
je
std
enter
movsb
subl
add
add
cmp
rcrb
push
test
call
in
push
inc
xor
jp
push
sbb
mov
pusha
das
sub
out
add
lcall
adc
mov
pop
jp
add
adc
cld
lcall
adc
mov
gs
or
inc
pop
inc
dec
pop
pop
lods
push
test
or
xor
clc
xchg
or
xchg
and
test
call
mov
push
cmpsl
cmp
jmp
shll
lcall
or
pop
into
ljmp
pop
or
jbe
mov
push
mov
rorl
sbb
ds
xor
fnstsw
pushf
push
mov
stos
call
pop
or
jmp
daa
into
lret
shrl
jp
add
push
loopne
clc
call
in
das
mov
lods
lds
cmp
test
pop
jne
mov
push
inc
jmp
cs
test
fxch
mov
or
cmc
inc
xchg
dec
in
shrl
xor
add
push
ja
sbb
nop
hlt
mov
mov
scas
into
test
jg
test
xchg
and
cmpsl
ret
jae
jecxz
or
call
bound
push
pushl
cmpsl
cmp
ss
cwtl
sbb
sbb
sti
add
scas
mov
std
adc
dec
and
dec
les
shl
dec
aaa
std
out
adc
pop
inc
adc
jge
or
mov
scas
ss
jg
pop
mov
xlat
rol
cwtl
or
test
cmpsl
mov
pushf
mov
sbb
pop
sub
fimull
mov
push
shl
jne
fildll
mov
mov
int
imul
in
std
mov
or
adc
pop
popf
frstor
scas
ja
mov
rolb
aaa
inc
adc
pushl
jmp
pushf
aas
push
sbb
mov
nop
addr16
inc
sub
rcrb
inc
lret
mov
clc
push
jg
xor
orl
push
jmp
jg
scas
call
cwtl
das
into
xchg
sub
ficompl
pop
cld
fldt
lock
rcll
xchg
ret
add
push
and
aad
nop
jg
std
push
and
push
loopne
push
aad
js
stc
sub
loope
cmp
add
loopne
cmpl
xorl
repz
sbb
orl
pop
mov
ds
push
push
fadds
ja
ret
pusha
icebp
test
inc
xlat
add
mov
and
xchg
repz
fildll
test
gs
popa
inc
adc
iret
xor
rorl
add
push
fisubrl
imul
jp
adc
loope
outsb
out
inc
scas
mov
sar
cmpsl
outsl
ret
xor
xor
ljmp
imul
mov
add
lds
or
bound
je
mov
sub
andb
js
cmpsb
jbe
incl
repz
add
lahf
jmp
ja
adc
cmp
cli
cwtl
and
lea
stc
ja
sub
adcl
xor
cmp
decl
jg
adc
push
sub
jmp
mov
xor
xor
adc
jmp
push
fisubl
lcall
incl
xchg
sub
jb
add
nop
jo
adc
pushl
sbb
stos
push
dec
dec
cs
jnp
stos
dec
je
add
out
les
mov
push
insl
fwait
lock
cmp
push
xor
xchg
or
fwait
mov
daa
inc
jae
clc
insb
add
sub
jb,pn
xchg
mov
into
repz
add
or
scas
mov
or
lods
push
icebp
aas
mov
cs
fsubrs
addb
add
pushl
push
jl
mov
or
mov
scas
cmp
push
ja
rcrl
imul
sbb
into
insb
xor
cld
into
or
pop
rcll
repz
clc
popa
sub
push
repz
iret
addl
mov
mov
cmp
pop
adc
arpl
pop
outsl
lahf
pop
pop
inc
cld
ds
add
push
push
xor
aad
pop
or
call
in
lret
shr
lahf
cmpb
mov
pop
add
cmpsl
out
jnp
and
mov
fidivl
mov
fistl
rcrl
sub
je
pushf
cmp
and
mov
mov
xor
shr
sbb
test
push
mov
push
and
lods
cmp
rcl
repnz
ljmp
movl
cmp
subb
jae
jae
sbb
sbb
mov
test
pop
xchg
xchg
dec
jne
dec
mov
outsl
scas
pop
pushf
aam
fdivl
inc
and
adc
int3
cmp
jecxz
stc
add
fsubrs
clc
nop
mov
add
adc
div
outsl
clc
idiv
fwait
pop
xchg
xchg
push
xor
adc
sub
push
jo
sbb
ud0
add
inc
inc
shl
aas
or
inc
pusha
push
inc
inc
jns
into
out
repz
mov
rcrb
mov
add
sbb
aaa
or
inc
mov
push
insb
cli
pop
stos
and
push
cmp
mov
in
mov
loopne
aas
xchg
inc
mov
cld
pushl
call
pop
lock
add
jno
in
imul
pop
cmp
insb
sub
xorl
mov
sub
jl
sbb
ffree
ljmp
dec
add
sbb
adc
cmpsl
jg
out
cltd
mov
loopne
inc
xor
jg
xorb
pop
cld
nop
fnstenv
ljmp
mov
ljmp
outsl
insl
leave
adc
das
stc
inc
daa
xchg
in
sbb
mov
add
add
sbb
or
xor
or
jo
xor
pop
cmp
das
mov
jno
jno
subb
pop
cmc
jmp
jbe
jmp
mov
bound
aam
fbld
test
xor
popa
test
xor
cmc
loop
mov
in
jno
dec
scas
mov
mov
pusha
rol
add
mov
cmc
push
cmp
push
dec
inc
loope
rcll
sbb
cmc
add
outsl
push
movb
mov
adcb
add
mov
push
push
cmp
popa
hlt
addr16
lret
fsts
js
inc
sub
sarl
mov
stc
aaa
jne
scas
push
lahf
push
fbstp
xchg
ljmp
add
add
adc
adc
inc
cmp
push
cmpb
xor
ja
das
dec
dec
cmp
test
rcrl
outsl
hlt
mov
inc
push
jge
out
sub
call
ljmp
pop
scas
jb
xchg
mov
bound
cmp
pop
aas
dec
cwtl
add
pusha
xchg
rorb
sbb
jmp
mov
mov
mov
add
ljmp
ja
rcll
test
outsl
popa
push
jg
adc
mov
divl
mov
dec
into
fnsave
fs
and
hlt
lcall
lock
lock
sbb
ret
lock
test
gs
sbb
inc
cmpsl
pop
and
dec
rol
xor
mov
adc
adcl
and
enter
in
sahf
dec
es
and
sbb
add
xor
fstpt
jb
decl
xchg
pop
push
aas
adc
add
into
bound
pop
mov
lods
pop
dec
xchg
or
push
xorb
cli
loope
mov
lcall
sti
dec
add
daa
jge
dec
negl
lcall
decl
cli
dec
ja
push
dec
adcb
ret
mov
fnstcw
or
xor
ret
dec
lods
add
sbbb
xor
aas
jle
stc
test
jns
xchg
add
push
popa
out
imul
push
sub
add
rolb
xchg
cmp
orb
ljmp
roll
add
negb
or
mov
lock
adc
dec
push
jecxz
jecxz
add
cmp
loopne
mov
mov
sbb
fiadds
loope
out
test
jo
out
cld
push
cltd
push
mov
rorl
std
dec
add
in
mov
shr
xorb
add
scas
ret
push
cmpsb
xor
int
pop
mov
test
movsb
jl
xchg
pushf
fstpl
xchg
sar
dec
xchg
add
incl
insb
imul
push
data16
push
jle
xchg
insb
mov
pop
icebp
push
fidivrs
sbb
insl
js
xchg
or
movl
sub
cmp
inc
jp
repnz
lea
mov
dec
inc
mov
push
sub
arpl
xlat
push
and
mov
fisubrs
mov
push
jb
mov
jae
pop
xchg
dec
lds
sub
sti
adc
popf
fidivs
add
sbb
nop
dec
inc
sbb
pop
jno
lcall
shrb
cs
dec
scas
jnp
gs
sbb
test
andb
cld
incl
out
loop
inc
ret
and
mov
out
mov
and
dec
pushl
mov
add
scas
pusha
xor
xchg
jae
icebp
cmp
mov
mov
stc
into
jmp
fwait
or
jmp
dec
sbb
loop
and
cmp
mov
iret
stos
push
and
add
fldt
loopne
call
and
add
insl
shl
jecxz
stc
pop
mov
call
mov
push
cmpsb
pushf
rol
sub
inc
fsub
or
pusha
and
aas
mov
push
cld
jg
gs
dec
jns
aam
leave
add
push
xchg
mov
add
jp
shll
mov
insl
mov
insl
adcl
cmp
jle
fnstenv
pop
lahf
hlt
jge
add
inc
into
inc
add
cmc
outsl
push
popa
sub
adc
insb
jb
nop
fcomip
decl
push
aad
shrb
movsb
fsts
mov
dec
xor
jmp
ret
jnp
bsf
and
imul
aad
ret
adc
mov
in
cmpsl
sub
test
je
push
xor
inc
aaa
or
stos
xor
inc
inc
and
push
outsb
popf
jns
mov
and
jo
dec
sbb
fldt
int
pop
inc
cmc
aam
push
jae
int
rcrb
enter
pop
mov
xor
mov
ret
mov
aas
cmp
testl
test
fucomp
push
mov
cs
in
orb
or
cwtl
movsb
mov
or
loop
sub
jge
add
cwtl
cld
ret
push
jp
and
add
dec
jb
mov
add
outsl
sbb
or
sbb
adc
add
aam
dec
push
leave
cmp
jg
sub
mov
xchg
or
fsts
lret
pusha
push
icebp
cmpsb
push
mov
out
mov
bound
pop
pushf
add
adc
sub
or
fldenv
inc
std
insl
add
aas
add
cs
mov
add
cmp
add
push
in
shlb
pop
push
xor
or
out
push
into
adc
mov
xchg
arpl
xor
sub
arpl
std
mov
cmpl
or
nop
pop
add
or
or
sarb
jge
dec
xor
mov
jno
push
outsl
nop
mov
xor
inc
mov
or
mov
fidivrl
and
loope
adc
mov
test
push
sub
mov
scas
xor
jg
in
int
cltd
and
pop
popa
jecxz
insb
cli
xchg
sbb
ret
lcall
or
lods
inc
cmp
shlb
cld
mov
jp
mov
ficompl
mov
xor
and
fisubrs
sbbb
scas
sbb
pop
jmp
and
xor
es
stos
lods
xlat
jmp
lret
inc
das
in
ja
sub
push
add
jg
add
mov
cmp
sbb
mov
mov
lods
adc
mov
fsub
call
outsb
insl
decl
ror
xlat
call
add
in
and
aas
std
dec
iret
outsb
mov
mov
std
outsb
add
jno
test
sbb
loopne
push
pop
flds
test
or
les
test
clc
mov
lods
sub
inc
lea
repnz
xchg
test
in
jb
sub
mov
mov
clc
add
or
xchg
lcall
adc
idiv
decl
sub
mov
pop
inc
dec
pop
dec
negw
sbb
call
clc
push
stos
sbb
imul
sbb
enter
movsb
adc
ja
mov
add
fs
add
push
pusha
jbe
decl
in
aad
lahf
das
add
add
add
imul
addr16
mov
push
testl
enter
adc
mov
jae
jg
xor
cmp
shl
insb
rclb
mov
mov
xchg
sar
mov
and
clc
mov
imul
jbe
add
out
or
jg
hlt
jg
add
mov
and
loop
or
nop
sbb
call
mov
rol
rorb
outsl
scas
arpl
jnp
and
stc
xor
addr16
fists
lea
fucom
cwtl
adc
cmp
sbb
cmp
ret
cmp
loope
in
or
enter
add
jp
mov
push
sbb
sub
pusha
mov
cmpsb
mov
xor
cmp
es
jp
pop
outsb
mov
pop
xchg
add
orl
call
rcrb
fildll
in
dec
sub
mov
imul
xor
adc
jnp
cwtl
add
jl
xor
mov
cmp
es
adc
cld
dec
data16
inc
cld
imul
sub
fidivl
push
pusha
jl
xchg
cmpsb
or
pop
loop
cmp
sbb
ret
stc
pop
xchg
mov
lahf
decl
data16
rol
add
out
out
aas
mov
push
mov
sub
das
clc
xchg
mov
mov
jg
js
pop
loopne
mov
enter
xchg
mov
std
ljmp
jns
hlt
insb
add
push
sbb
or
jno
icebp
outsl
mov
mov
outsl
mov
inc
sahf
jmp
loopne
jp
push
pop
inc
mov
adc
and
inc
subb
scas
push
mov
lods
int3
adc
pop
push
sbb
decb
push
mov
xchg
loop
mov
ss
xor
adc
cmp
xchg
aas
adc
sbb
xchg
je
mov
loop
cmc
push
enter
movsl
repnz
int3
add
push
fstpt
repz
aas
inc
lods
add
jo
mov
ret
mov
mov
idivl
push
test
pop
mov
cltd
data16
cmp
cli
idiv
lcall
dec
test
jns
pusha
and
mov
sub
rcl
inc
jmp
add
fbld
jge
outsl
icebp
xchg
sbb
inc
cld
cmp
mov
add
pop
cmp
xor
ret
ret
mov
sbb
sub
cmpsb
call
cmp
add
stc
pop
cmc
aas
mov
cld
dec
xorl
jle
xchg
jae
pop
popa
cli
mov
shl
pop
mov
xor
xor
pop
xchg
js
jo
into
sub
movsb
mov
incl
xchg
cmp
xlat
pushl
movsb
xchg
and
rcr
cs
mov
popa
stc
sub
sub
mov
fistpll
je
cmp
outsl
inc
xor
sub
xchg
ds
ljmp
lea
mov
add
inc
sub
incl
incl
ljmp
popf
and
loope
scas
xor
xchg
incb
xchg
dec
dec
outsl
fsubrs
outsb
popa
cmp
dec
aas
push
out
mov
mov
cs
pop
dec
xchg
jbe
push
and
and
mov
insb
or
jmp
scas
mov
mov
mov
jp
cmp
or
ret
jne
mov
outsl
xchg
mov
sub
sub
or
pop
jge
adc
cmp
dec
or
lods
sbb
add
jo
cld
daa
mov
lcall
cmp
ss
sbb
cmp
xchg
cmp
mov
clc
aaa
out
cli
loope
inc
out
lock
xchg
sbb
imul
shll
incl
push
sbb
faddl
roll
dec
sbb
mov
adc
cmp
in
negb
pop
and
stos
xchg
negl
jno
rcl
adc
lret
or
add
test
lfs
mov
or
push
mov
test
insb
data16
sub
outsb
jmp
and
sbb
addr16
push
out
and
ljmp
clc
push
dec
mov
ljmp
push
dec
xor
sbb
cmpsl
fwait
adc
dec
incl
pop
cli
add
or
and
in
pop
testl
clc
dec
mov
data16
mov
mov
xor
add
dec
stc
dec
pop
jp
mov
xchg
hlt
add
in
ret
out
imul
xor
mov
push
popa
add
ljmp
jbe
xchg
fnsave
ret
pushf
mov
mov
sbb
imul
push
popa
or
adc
jnp
cld
cmp
push
add
pusha
push
sbb
loopne
sub
repz
or
xor
stc
je
lods
je
outsl
ret
mov
jb
lock
sbb
mov
out
bound
cld
pop
xor
add
xchg
loope
std
movsb
cltd
add
sbb
lock
jg
pop
js
sub
add
adc
jnp
jle
decl
bound
nop
or
pop
mov
fistl
jo
pop
rcrb
cmp
jmp
mov
mov
xor
ret
add
ficoml
lds
fistpll
or
aad
add
push
pop
test
mov
add
leave
and
add
cli
lret
insb
add
test
mov
ret
ljmp
nop
loop
int3
or
pop
and
ret
mov
stos
adc
xchg
push
sub
rcr
test
mov
into
addr16
push
and
or
lcall
aam
jle
lret
add
imul
aaa
cmp
jg
xbegin
iret
sbb
out
and
push
mov
sub
filds
nop
or
push
inc
add
clc
cld
insb
sbb
add
out
js
test
pop
aas
jg
jp
push
roll
mov
test
pop
adc
add
inc
jbe
sti
or
stos
loop
mov
mov
js
push
mov
add
mov
insl
or
xchg
in
pop
xchg
pop
or
out
push
adc
adc
mov
out
cmc
lock
sbb
icebp
mov
dec
movsl
shlb
sub
loopne
dec
pop
push
daa
lock
cmpsb
arpl
or
ja
mov
test
mov
sub
fnstenv
stos
cmp
mov
inc
push
movaps
and
jo
inc
push
test
call
push
es
iret
and
loopne
cmp
sbb
mov
pop
les
shl
and
fcomp
push
pusha
mov
pop
add
ss
scas
test
add
ret
dec
data16
call
fidivrs
std
lds
imul
mov
jle
clc
incl
or
mov
inc
leave
xchg
sub
es
mov
pushf
xor
gs
aam
test
in
jns
loop
addr16
adc
xor
add
icebp
adc
sbb
inc
sbb
stc
lret
add
sbb
jb
js
scas
lcall
jecxz
popa
mov
pop
test
jmp
jmp
lds
fs
push
lea
adc
mov
adc
nop
data16
repz
jo
sbb
mov
andb
lock
pop
jmp
shr
outsb
xchg
addr16
add
xchg
pop
ljmp
mov
icebp
and
bound
in
sbb
jnp
push
xchg
xorb
inc
cltd
shlb
aaa
cld
out
es
out
repnz
cmp
pushf
cmp
cli
out
sahf
gs
test
fstpl
adc
sub
mov
repnz
stos
dec
cmp
dec
mov
ret
pop
rcr
mov
cmp
jg
outsl
rcrl
cmp
shll
push
lods
mov
out
fsubp
mov
mov
decl
pop
push
pop
bound
sbb
ret
test
mov
aas
test
loopne
int
sub
inc
jo
test
mov
enter
rcll
dec
add
sub
out
fmuls
out
mov
into
or
shlb
push
data16
push
mov
out
and
jge
add
or
jmp
movsb
dec
inc
push
xor
insl
mov
data16
xor
orl
pop
inc
sbb
adc
mov
sbb
fisttps
sbb
sbb
sbb
inc
xchg
arpl
dec
roll
imulb
ret
sbb
js
jge
in
in
jns
xchg
lea
pop
ja
fcmovnbe
sub
push
sbb
nop
push
cltd
imul
add
ljmp
mov
push
and
adc
stos
nop
das
inc
and
test
pop
cld
in
sub
adc
rcrb
dec
inc
dec
pop
xor
push
rcll
sub
dec
cld
add
push
mov
pusha
cmp
sub
sub
jmp
insl
mov
call
xor
std
push
icebp
sub
push
out
pop
sub
jbe
cltd
and
sub
sub
jecxz
cld
push
js
sub
movsl
add
fisttpl
fsub
cltd
fbstp
push
cli
xchg
or
bound
push
and
decl
inc
cmp
mov
or
mov
icebp
shll
popf
punpcklwd
incl
cs
xor
dec
mov
jl
inc
mov
movsb
xchg
lcall
arpl
fsubs
mov
ret
or
fwait
push
or
outsb
repz
call
mov
cmpsl
inc
scas
xlat
add
fs
jo
andb
add
daa
scas
mov
inc
xchg
inc
cmp
jno
stos
data16
dec
lret
jecxz
cmp
sub
ret
movsl
decl
iret
pushf
test
add
je
push
add
sbb
xor
jbe
test
add
mov
xchg
fs
repnz
jmp
mov
adc
pop
scas
popa
and
movsl
ja
or
data16
arpl
data16
adc
movsb
push
clc
push
add
mov
mov
mov
push
jl
xchg
mov
test
mov
xchg
aas
lcall
lock
fs
push
and
out
push
inc
mov
mov
addb
pop
dec
daa
dec
jp
dec
cmpsb
cmpsb
pushf
clc
inc
je
jo
int
hlt
push
pop
cmp
sbb
negl
add
jne
or
add
sbb
test
inc
int
dec
sbb
pop
lock
imul
pop
std
cmpb
push
sub
jmp
inc
lahf
adc
pop
add
cmpsl
jge
stos
mov
cld
loope
pop
mov
pusha
inc
mov
ljmp
pop
in
add
and
dec
or
and
cwtl
fmuls
push
in
insl
push
incl
xor
or
sti
and
inc
sub
shll
pop
sbb
or
xchg
mov
push
mov
filds
movl
adc
es
xor
das
cli
fucomip
push
add
mov
or
in
test
push
sub
fs
cmp
rclb
add
std
ljmp
rol
divb
scas
xchg
out
out
or
aad
and
mov
and
xlat
scas
fwait
jmp
rorb
pushl
xchg
pop
rcrb
movsb
push
xor
popa
or
add
add
inc
jb
pusha
pusha
push
jns
notb
ljmp
bound
int
xchg
test
push
add
add
je
je
push
and
mov
mov
loope
push
mov
push
pop
push
mov
js
decl
mov
push
and
test
cmpsb
rcr
xchg
and
movsb
mov
and
jg
ss
mov
mov
sbbl
push
xchg
sub
pop
and
fwait
cmpsl
add
pop
cmp
mov
and
pop
lds
shr
adc
mov
sub
add
loop
jg
jno
dec
in
lcall
jo
push
and
test
cmp
mov
shlb
insb
lret
fistpll
or
add
ret
or
rolb
dec
mov
add
or
push
mov
push
icebp
pop
xchg
jbe
cmpsl
mov
cmp
sub
jmp
sub
sbb
xchg
decl
cld
out
sarl
stc
adc
lods
das
dec
mov
lea
test
mov
lcall
test
add
push
sbbb
add
adc
add
push
loope
add
movsl
mov
sbb
hlt
add
inc
inc
ret
sbb
lds
mov
cli
incl
jnp
dec
push
cli
dec
jp
xchg
popa
cmp
jg
pusha
add
push
push
lret
out
decl
cli
out
add
or
and
fxtract
dec
add
pushl
mov
in
lods
js
fldl
and
inc
in
test
jns
jnp
movzbl
daa
mov
arpl
push
sub
sub
and
bound
fisttps
nop
or
and
cmpl
fsubs
adc
cmp
cwtl
je
sub
fistpll
cmp
data16
ret
insl
dec
cmp
or
jmp
cli
fcomps
pushl
mov
or
in
int3
cli
dec
sahf
iret
push
lock
cmp
and
pushf
test
repz
notl
mov
and
lods
push
mov
pushf
mov
cmpsb
inc
insb
stos
movsb
inc
and
dec
sub
add
pop
movups
xchg
popa
xor
pop
and
adc
pushl
call
loopne
dec
popa
lret
mov
sbb
outsl
decl
add
fimull
mov
add
lret
mov
mov
sub
jnp
push
loop
decb
inc
mov
nop
icebp
sub
lcall
and
aad
ret
and
pop
sbb
decl
and
sbbl
loop
sub
mov
mov
and
ljmp
dec
push
test
jbe
es
movb
scas
add
push
loop
adc
pop
lods
and
mov
xchg
in
ret
dec
andb
hlt
out
clc
xchg
mov
mov
call
ret
test
jo
das
sar
adc
daa
enter
outsb
aam
cmp
fdivr
add
loop
inc
push
incl
or
inc
setp
dec
cmpsl
dec
jge
xchg
add
xor
xlat
inc
jecxz
push
decl
cmpb
xchg
pop
push
fs
test
xchg
adc
cwtl
add
test
fs
mov
ret
stos
pop
aaa
lea
or
mov
push
lds
loop
pushl
push
push
add
pop
aad
out
add
mov
dec
or
jnp
icebp
and
jnp
jecxz
popf
in
inc
mov
pop
aaa
or
adcl
lret
dec
and
push
push
dec
inc
ret
pop
add
cmp
sbb
divb
mov
inc
in
mov
or
into
lock
push
popf
cmc
popa
or
or
scas
adc
mov
fadds
aas
sbb
repnz
stos
mov
pop
je
cld
lods
loop
cld
lcall
inc
cs
call
pop
xor
lods
fildll
mov
or
mov
popf
jp
call
sbb
push
outsl
scas
rol
add
jge
stos
mov
adcl
cwtl
mov
xor
sbb
inc
mov
sbb
test
add
cltd
mov
mov
cltd
push
jnp
fbstp
add
pusha
lahf
jae
js
push
jl
rol
aaa
cmp
jb
mov
lds
xchg
ja
dec
cmc
push
cltd
dec
cwtl
or
mov
pusha
xchg
lcall
call
xorb
movsb
ja
dec
nop
xchg
mov
hlt
fisubs
jno
insl
mov
outsl
clc
cmc
jmp
sub
add
mov
sub
gs
jne
clc
inc
sub
push
jmp
xor
testl
sbb
cmpsb
adc
aad
gs
add
loopne
clc
lods
leave
sub
jno
adc
andl
dec
int3
aad
inc
mov
add
jnp
mov
and
loope
pop
sbb
cld
mov
decb
or
mov
sub
stos
fldl
pop
in
imul
outsb
std
inc
aaa
lret
aaa
xchg
and
gs
mov
rclb
daa
add
sbb
push
inc
mov
mov
stc
daa
mov
mov
sbb
js
ror
sub
cmp
int3
ja
popa
xlat
cltd
icebp
mov
adc
outsb
jbe
xchg
jecxz
dec
push
push
mov
and
sub
cmp
ljmp
fdivrs
pop
repz
add
jmp
popa
imul
js
jmp
loope
and
push
bound
inc
aad
cmp
adc
add
inc
movsb
pop
popf
popf
add
lock
add
adcl
addr16
xor
incb
or
sar
sar
lea
cli
add
push
outsb
mov
jae
popa
adc
hlt
ds
pushl
out
mov
inc
jbe
sub
jg
sub
daa
test
and
mov
add
pop
pop
decl
ja
pop
test
sahf
push
mov
push
pop
aas
pop
adc
add
mov
mov
cli
lret
inc
add
mov
inc
popa
adc
push
sahf
xor
cmp
pop
cmc
fists
pop
adc
movsl
sbb
hlt
arpl
add
and
test
aaa
mov
or
xchg
add
arpl
fildl
pop
inc
mov
sbb
push
iret
aad
dec
mov
push
insb
popa
insb
xchg
sbb
adc
cmp
sub
aaa
cld
andl
add
int
jp
push
insl
jbe
mov
jle
adc
adc
cmp
dec
dec
cwtl
cmp
add
es
pushl
call
mov
inc
insl
adc
dec
mov
inc
add
sub
mov
pop
je
sub
aas
and
outsb
mov
add
mov
or
dec
mov
jecxz
lock
das
mov
icebp
add
push
cwtl
xchg
stos
cmp
and
push
or
loopne
sbb
push
adc
add
insb
shlb
js,pn
inc
sub
jp
jl
sbb
nop
jb
test
mov
jg
ja
decb
nop
cmp
xor
rclb
out
lods
or
mov
cld
arpl
cltd
pushf
pushf
shrl
inc
add
scas
das
pop
test
bound
xor
je
movsb
inc
sub
mov
xor
repz
cmp
fildll
lds
or
rcl
repz
xlat
fsubrs
cli
push
sbb
and
or
cmp
push
add
popa
ja
jle
lcall
add
push
mov
add
cmpsl
in
movsb
mov
loope
fistps
aam
and
clc
mov
xchg
add
cmp
mov
jl
and
lea
stos
cmpsl
inc
push
lcall
rcrl
cmp
cmp
push
fstpl
hlt
js
sbb
xlat
das
adc
jle
xor
mov
adc
xchg
lock
lods
add
fsubs
xor
xchg
mov
ljmp
lcall
inc
inc
shr
movsb
add
mov
pop
cmc
pushf
lea
sub
and
roll
aad
dec
xor
nop
cmp
xor
xchg
sub
test
es
xor
ficompl
and
inc
std
pop
push
mov
pop
lea
jle
ret
in
js
jle
sbb
test
fcompl
mov
clc
in
ljmp
push
into
iret
add
je
subl
push
sbb
dec
and
and
daa
fwait
add
and
in
mov
test
lods
mov
xchg
xchg
inc
inc
loop
jb
fildll
sahf
loop
scas
clc
pop
cld
dec
xor
or
xor
popf
cs
pop
cmc
xchg
lcall
loopne
ljmp
sbb
ror
xorl
test
adc
rcll
stc
and
clc
pop
ret
cmp
add
push
sub
add
push
push
jo
jle
sbb
or
cmc
or
sahf
aas
in
sbb
mov
mov
sbb
inc
mov
cmp
sahf
mov
sahf
pop
fists
cld
jbe
mov
lahf
pop
add
insb
fs
sub
xchg
cs
xor
cld
xor
cmpsb
es
pop
xchg
xor
jbe
aam
sbb
ficoml
and
repnz
xor
xor
insb
xchg
push
int3
cltd
decl
bound
mov
jle
xlat
pusha
inc
daa
sub
jmp
das
jb
push
or
das
cld
pusha
add
loopne
cs
mov
mov
lods
call
icebp
mov
mov
outsl
mov
add
jge
cmp
cwtl
shrl
in
call
cmp
mov
sbb
or
xlat
sub
movsb
aaa
lcall
lcall
add
pop
dec
add
cs
clc
ja
pop
dec
dec
or
push
jo
aaa
mov
addr16
or
and
out
lock
jge
xchg
mov
adcb
pushf
cmp
xor
add
sub
pop
add
inc
push
jecxz
loopne
and
in
das
jbe
incb
pushf
xlat
push
insl
insb
idiv
sti
xchg
ficompl
movsl
clc
pusha
loope
das
clc
incl
add
out
push
inc
jl
push
fistps
jbe
scas
repnz
mov
pop
rcr
sbb
push
and
pop
add
jb
inc
lods
dec
icebp
mov
cmp
inc
aas
insl
adc
push
or
lds
cmp
mov
repnz
adc
mov
in
out
stos
clc
in
ret
es
or
je
mov
ret
mov
in
adc
pusha
fsubl
aaa
mov
sub
xchg
dec
cmp
shlb
mov
fwait
sbb
cmp
or
out
out
fwait
sbb
test
mov
push
je
test
out
ss
sub
cmc
push
loopne
loope
arpl
cmpb
lock
sbb
sbbl
add
sub
rcrb
xlat
dec
mov
pusha
cmpsl
es
mov
cmp
jg
lods
jbe
push
lock
imul
cld
clc
sub
aam
dec
lcall
mov
push
sub
and
int3
mov
orl
loopne
ret
jg
xlat
mov
std
aad
cmp
cmp
sbb
pop
xchg
sbb
and
push
inc
push
sbb
call
add
sub
std
sub
outsb
xor
dec
mov
movsb
mov
push
xor
adc
ljmp
xlat
in
sbb
add
fwait
mov
sub
push
ret
push
cs
sub
mov
add
add
mov
and
lcall
ljmp
pusha
stos
insl
sti
or
cld
lods
bound
loopne
das
out
clc
clc
add
out
call
cli
dec
mov
jo
push
jo
inc
mov
ret
mov
stos
or
xor
xchg
pushf
mov
jb
mov
inc
mov
push
call
loopne
nop
sbb
shr
inc
mov
ret
rorl
ja
push
inc
jae
lcall
subl
cmpsb
ret
mov
out
lcall
cmpsl
dec
clc
and
pop
stos
fsts
je
cld
push
pop
sti
pop
pop
movsb
mov
sbb
jle
mov
sti
push
outsb
cwtl
stos
sbbb
mov
mov
mov
add
push
mov
fldl
scas
push
sbb
test
mov
mov
ja
inc
push
rorl
push
das
xor
mov
shr
adc
shrb
mov
addb
lcall
pop
xchg
leave
lcall
cmp
add
test
cld
cmp
out
xor
pop
shrb
mov
and
scas
clc
pop
mov
push
add
outsl
or
adc
aam
bound
xchg
push
pop
pop
loope
test
pushf
loope
aaa
jo
js
loopne
fdivrl
stos
pop
xchg
inc
pop
and
dec
or
pop
pop
add
jge
out
push
sbb
fimull
pop
mov
add
xor
mov
xor
mov
lret
mov
and
call
push
out
jge
testb
pusha
popa
sahf
js
add
or
test
mov
xor
nop
js
pusha
jo
ds
arpl
cmp
pop
jg
jle
mov
or
shrl
call
orl
mov
dec
cmc
jbe
cld
notl
popf
jnp
test
sub
fwait
ljmp
aas
pop
in
dec
ret
cmp
movsl
fisubs
dec
popa
sbb
push
decl
test
punpcklwd
into
push
and
stc
xor
push
fisttpl
mov
sbb
sbb
sub
add
je
inc
ss
xchg
add
sbb
ret
sub
push
pusha
push
inc
test
jg
xor
loopne
test
std
xchg
sub
incl
push
sahf
hlt
aad
jb
add
adc
cmp
pop
fprem
push
nop
xor
cmpsl
in
jns
std
jle
mov
cli
incl
sub
xlat
cmpsl
cmp
inc
insb
lods
xchg
gs
outsb
pop
pushf
or
pop
out
incl
xor
mov
lock
inc
mov
jb
outsl
and
sbb
fdivrp
into
into
xchg
dec
xchg
test
xor
xor
stos
cli
jg
dec
mov
xchg
sbb
aam
sub
push
and
cmp
dec
push
pop
add
leave
xor
mov
lret
scas
mov
icebp
dec
fcmovb
incl
icebp
mov
sbb
mov
dec
inc
push
in
jb
adc
mov
ss
dec
adc
jge
stos
inc
add
test
aas
or
aas
mov
scas
adc
add
out
push
nop
push
pop
mov
add
in
imul
sbb
or
add
push
pop
hlt
xchg
add
push
pop
cld
ret
xchg
mov
ss
imul
lcall
loopne
daa
jno
pop
ds
cli
xor
js
inc
cmp
mov
imul
mov
mov
icebp
mov
mov
hlt
lahf
sahf
stos
mov
mov
test
sbb
cmp
lock
mov
or
add
cmc
outsl
jns
xor
int
in
pop
orl
dec
scas
xchg
mov
add
pop
sub
loop
std
dec
or
inc
aaa
pop
push
mov
adc
daa
lahf
add
jbe
loopne
icebp
xlat
sti
inc
xlat
jmp
outsl
cmp
inc
in
mov
fsubrl
shr
push
out
orb
clc
xchg
in
xchg
sbb
push
add
or
imul
inc
adc
fsub
outsl
or
pop
pushf
or
test
sarb
mov
pop
adc
push
xchg
push
iret
cmp
push
ss
cmp
pusha
filds
cmp
insb
lcall
ret
lret
jne
jns
outsb
pxor
rdtsc
out
jmp
jo
jne
decl
cmp
ljmp
incl
xor
inc
and
movsl
das
out
xchg
repnz
add
repz
cmpsb
lods
out
pop
subb
ja
enter
call
jmp
cmpsb
cld
pushf
xor
and
push
mov
cmp
lret
pusha
sbb
jb
push
hlt
imul
lock
xchg
lahf
lahf
pop
adc
and
push
mov
pop
push
shll
fstpl
jg
jl
inc
mov
add
popa
sti
push
adcb
out
xor
xchg
imul
pop
or
popa
pop
cld
sbb
repnz
push
je
xchg
pop
mov
lods
rolb
call
xchg
out
cmp
clc
xorl
add
cwtl
icebp
xchg
mov
or
jle
mov
pop
pushf
clc
out
iret
and
je
or
fmuls
mov
pop
or
jg
push
mov
pop
add
jp
enter
jmp
ljmp
rol
and
xchg
and
push
adc
push
inc
dec
lds
add
jg
pop
std
cmp
mov
int3
fsubs
or
jns
in
push
jg
or
inc
jp
int3
xchg
pop
xchg
xchg
pop
hlt
scas
jl
pop
dec
nop
in
aad
xor
popa
jg
incb
push
lods
pop
push
adc
lods
cmc
roll
and
cmp
mov
shrl
pop
inc
rcl
jmp
mov
add
xchg
incb
pop
andb
xor
add
mov
std
lods
inc
stos
mov
shrl
cmp
aas
cs
das
jle
les
ror
addr16
outsb
lcall
pop
lock
and
or
je
les
xchg
xchg
mov
test
jecxz
test
adc
xchg
cmpsl
negb
fisttps
and
cmpsb
pop
xchg
cltd
xor
and
adc
xchg
andb
stc
add
xor
aaa
jg
pop
mov
pop
add
cmp
add
sub
sub
mov
jo
xchg
mov
and
add
les
in
in
outsl
js
mov
loope
ret
push
addl
lcall
imul
mov
sbb
push
fdiv
out
in
pop
xor
and
pop
andb
stc
sets
arpl
ljmp
mov
jmp
addr16
xchg
inc
test
mov
loopne
stos
cmp
sbbb
add
and
sbb
scas
nop
xor
scas
imul
outsl
pop
or
add
add
push
jo
dec
icebp
add
xor
cmp
shll
outsl
fisubs
add
or
jg
fstpl
sub
test
insl
xchg
jno
inc
add
popa
add
cltd
mov
push
cmpsb
out
mov
and
mov
mov
add
dec
and
cmp
add
push
fdivrl
fdivs
je
fldl
mov
cmp
and
xchg
pop
std
inc
loop
xor
xchg
cmp
mov
mov
fld
les
lret
sub
movb
or
out
xor
add
mov
cmp
push
pop
xchg
inc
jl
xchg
les
xchg
cmpb
or
ret
pop
in
push
je
inc
and
mov
ficoml
sbb
push
lahf
decb
xchg
push
pop
stos
cltd
push
add
sub
mov
jmp
adc
mov
add
sub
jge
in
call
jl
cmpsl
fldl
mov
in
adc
sbb
cmp
pop
adc
cmpsl
mov
loopne
sub
fistps
and
mov
fdivp
mov
dec
push
sar
mov
adc
daa
mov
pop
jp
jecxz
loop
jge
push
and
adc
and
cld
call
test
sbb
decl
mov
jbe
in
dec
jbe
pusha
sbb
jg
lcall
xor
mov
add
xor
outsb
adc
sahf
out
cmpsb
mov
lcall
ds
scas
add
mov
push
icebp
sbb
orb
push
add
jnp
inc
rolb
bound
adc
loop
aas
fsubrs
pop
test
shrb
mov
or
cmc
out
out
mov
mov
test
nop
fs
pop
aad
pop
clc
pop
adc
jo
mov
xchg
inc
mov
mov
pop
mov
int
fcoms
xor
xor
stos
lods
fsubrs
add
clc
push
fwait
push
mov
fs
loopne
inc
repz
in
mov
mov
push
sbb
add
push
mov
cs
inc
mov
or
int3
andl
add
xor
inc
xlat
mov
jl
ja
aas
out
adc
add
inc
jecxz
dec
into
add
loop
inc
add
xchg
fwait
dec
add
call
mov
dec
xor
hlt
mov
pop
mov
xchg
lahf
cmp
push
std
mov
ss
inc
arpl
not
std
out
and
jecxz
shlb
xchg
jge
jns
mov
imul
sub
cmp
outsl
and
sarl
xor
loope
xor
cmpsl
iret
xor
loope
xor
out
lods
je
mov
std
mov
mov
pop
lahf
xchg
sub
inc
or
inc
adc
or
xchg
decb
mov
sbb
fbstp
aas
add
cli
ljmp
call
pop
sbb
rep
push
cld
pushl
cmp
das
xchg
ds
lods
cmc
add
xor
inc
incl
mov
les
sub
aaa
mov
add
scas
push
fxch
push
jle
test
js
push
fildl
add
paddd
cmp
push
loopne
in
stc
inc
pop
popf
fimuls
stc
or
jo
es
pop
mov
loopne
mov
sbb
or
mov
aam
call
cmpl
mov
add
daa
dec
scas
adc
out
arpl
ret
lcall
add
fisubs
and
xchg
les
adc
sbb
xchg
cmp
arpl
lcall
mov
lods
push
push
dec
push
or
push
xor
mov
mov
jmp
mov
data16
dec
mov
xor
imul
invd
jg
pop
lcall
sub
ret
add
mov
or
loopne
adc
inc
in
das
cli
incl
sbb
jae
ss
sbb
test
jg
fbld
in
mov
pop
and
adc
icebp
xor
add
scas
xor
out
xor
stc
jnp
mov
pop
jg
mov
jae,pt
ret
pop
popa
ss
xor
adc
xor
cmc
imull
aas
add
xchg
das
lret
adc
jg
addb
movsl
lcall
adc
lcall
and
fdivs
sbb
cmp
push
mov
cld
lcall
int3
cltd
and
js
xor
dec
push
mov
and
lret
leave
xor
cmp
mov
jmp
add
push
xor
shlb
mov
scas
jp
into
cli
or
inc
lds
pop
or
sbb
or
lds
loopne
shrb
and
ljmp
add
cmp
xor
into
orl
int3
in
iret
insl
pushf
inc
fistpll
mov
adc
test
xchg
fs
lret
sbb
add
sub
adc
xor
sbb
out
rorb
movsb
outsl
lcall
mov
adc
fldl
cwtl
push
or
mov
push
aad
das
clc
mov
push
sar
mov
jmp
sbb
dec
hlt
inc
mov
or
add
test
fistl
cmp
sti
or
sub
cltd
test
pop
xchg
jb
iret
or
inc
test
fiadds
pop
loopne
jle
lods
jecxz
push
or
or
dec
mov
adc
jnp
sub
cmpsb
lcall
cmp
ror
mov
imul
xchg
test
sub
insb
divl
dec
xor
mov
adc
mov
inc
test
and
scas
push
push
jp
out
mov
push
pop
jmp
push
loope
cld
add
ss
icebp
or
daa
aad
nop
loop
add
mov
cld
dec
cmp
rcr
cmp
call
jp
insb
lock
pop
or
add
mov
dec
inc
xor
push
inc
add
inc
js
cmp
fs
fs
hlt
push
jg
popl
jnp
add
jp
cmpsl
mov
jb
lcall
add
sti
out
jno
data16
incl
out
xchg
rol
test
fcomp
mov
add
subb
shlb
push
xlat
das
add
test
xor
add
shr
lds
loopne
lret
push
xor
pop
stos
pop
pop
scas
subb
sub
cmp
push
movsb
and
mov
jbe
pop
mov
test
push
or
repnz
dec
fs
add
out
js
and
hlt
push
fs
out
out
in
ret
pop
add
sbb
test
mov
adc
jecxz
imul
push
fldcw
repnz
loop
mov
add
addr16
xchg
sub
arpl
arpl
aam
cmp
push
scas
cmp
fcoml
iret
xorb
cli
dec
and
test
push
sub
jl
pusha
mov
mov
call
mov
jmp
mov
dec
loopne
push
pop
cmp
cmp
jb
insb
int
popa
psubd
jne
or
push
xchg
jo
sbb
aam
ja
add
push
rolb
add
fisttpl
push
lcall
inc
jg
sub
insb
mov
popa
iret
aad
ror
test
adc
mov
cmp
jp
jp
mov
pop
imul
movsb
pop
mov
lret
insl
adc
push
ret
jo
arpl
cltd
mov
fucom
out
es
decl
dec
mov
inc
sub
cltd
add
xchg
mov
mov
sub
ljmp
int3
dec
addl
mov
fisttps
adc
aam
add
fwait
add
lods
inc
and
add
mov
pop
decl
arpl
cmp
pop
mov
mov
out
add
sbb
pusha
dec
mov
leave
cmpsl
add
insl
mov
je
add
add
rcl
loopne
iret
pop
insb
adc
or
add
push
insb
fidivrs
data16
lahf
insb
mov
push
xor
mov
adc
xchg
inc
in
xchg
cmpsb
xlat
int3
inc
mov
add
lret
movsb
sub
xchg
std
add
int3
fidivrl
jns
loop
jmp
jnp
mov
shlb
and
movsb
mov
mov
sub
sub
mov
cld
add
clc
sbb
movsl
mov
lds
push
xchg
fdivrp
int
loope
mov
cmp
loope
xor
in
mov
in
add
das
jl
inc
lcall
xchg
inc
mov
add
decb
lret
cmp
int3
sbb
xor
add
or
adc
push
cmp
bnd
sub
jmp
test
jnp
call
loope
popa
les
and
push
mov
int
and
sbb
mov
hlt
call
dec
push
mov
sbb
cmp
xchg
lods
xchg
xchg
pop
xor
jg
insl
dec
jo
cld
daa
add
mov
int3
and
adc
add
xor
lods
add
pop
and
adc
add
jecxz
out
mov
pop
jge
js
inc
hlt
mov
pop
sub
mov
dec
icebp
mov
or
push
xchg
ja
inc
inc
jp
dec
insl
lods
std
sub
cmp
add
mov
xor
add
imul
lcall
mov
mov
dec
fwait
xchg
add
aas
sub
je
inc
out
test
lahf
cld
jg
jecxz
jmp
adc
sub
jp
dec
lock
std
aaa
push
pop
push
xchg
jne
add
inc
and
mov
xchg
pop
hlt
outsl
sbb
add
sbb
lret
sbb
add
mov
insb
pop
pop
jmp
and
xchg
xchg
jb
push
fcomip
add
xor
std
sbb
dec
aaa
adc
xor
xchg
adcl
ljmp
dec
pop
shl
sarb
xor
test
mov
cltd
int3
lock
sti
ljmp
mov
sub
mov
jg
shl
lock
xchg
std
or
mov
jecxz
jbe
sar
cmp
sub
inc
push
cwtl
mov
xchg
fiaddl
imul
xchg
add
in
incl
ret
shlb
pop
cltd
push
pop
popa
push
fdivs
ja
sahf
aaa
cwtl
incb
roll
xor
push
sbb
addb
mov
ljmp
cs
aaa
testb
push
sub
sub
stc
mov
cmpsb
and
out
fdiv
jg
mov
jo
loopne
adc
push
add
adc
insl
aaa
loopne
insl
ss
jo
clc
push
jp
outsl
mov
sub
xchg
mov
xchg
repnz
pop
inc
sbb
and
dec
call
mov
test
mov
ret
inc
shl
lcall
jge
orb
and
iret
add
or
pop
push
fistpll
add
ds
stc
test
inc
fst
decl
push
add
insb
mov
add
lcall
inc
lret
pop
nop
adc
cwtl
mov
outsb
fs
fldt
test
icebp
add
mov
cmp
std
mov
fldt
adc
sbb
nop
push
call
xchg
notb
aad
jmp
xchg
fsubs
stc
movsl
xor
pop
adcl
add
dec
push
dec
sti
mov
ret
cwtl
cmp
cwtl
cmc
mov
and
mov
jbe
mov
jg
stos
fsubr
cmp
mov
dec
add
and
adc
ljmp
adc
arpl
xor
inc
cmp
push
stos
add
ljmp
adc
or
jg
sbb
cld
inc
loop
bound
mov
add
and
pop
adc
or
sti
or
sbb
push
cmc
adc
addr16
fadds
jp
aam
repnz
sbb
andb
lds
mov
mov
add
sub
std
dec
xor
mov
je
mov
lds
pop
jbe
int
mov
push
xchg
lock
add
out
sti
das
bound
loope
fucomip
ja
idivb
and
rclb
or
jg
sbb
add
movsb
and
jb
sbb
or
lock
add
pop
push
dec
push
xor
mov
mov
dec
xchg
or
rcrb
aas
in
mov
stos
ds
or
adc
movsl
jp
push
std
in
mov
arpl
movsb
cltd
add
in
dec
mov
das
sub
mov
notrack
mov
mov
or
jp
push
push
mov
insb
add
cld
decl
je
call
add
movsb
pop
jmp
adc
mov
data16
aad
adc
test
test
mov
push
das
clc
mov
jmp
adc
pop
cltd
fucom
xchg
xchg
or
dec
adc
sbb
add
jb
cs
mov
mov
xor
cli
and
fdivrs
lea
inc
mov
sbb
add
cmpsl
dec
inc
shl
aas
cli
mov
lock
mov
push
jo
add
adc
fisttps
sbb
mov
fisttps
fists
sbb
or
rolb
mov
movsl
insb
mov
negb
es
rcl
loope
and
pushl
lret
jmp
mov
push
inc
push
subb
sub
icebp
sub
sbbb
cmp
shl
sar
and
ljmp
or
sub
pushl
shll
test
int
popa
movsl
mov
mov
test
int3
call
mov
aad
fs
add
cmpsl
dec
dec
mov
icebp
outsl
inc
out
xor
xchg
btr
icebp
repnz
aaa
mov
inc
cmp
or
push
pusha
outsl
ret
mov
clc
dec
add
aad
add
jbe
push
dec
pop
dec
cwtl
mul
mov
jo
add
fiaddl
repnz
imul
call
jl
sub
xchg
es
rol
cltd
or
adc
in
push
rolb
push
cmp
popa
pushf
pushf
loop
pop
imul
les
push
inc
adc
or
fucomip
fisubrl
cld
stc
cmp
jo
inc
popa
fwait
lock
sub
insb
sar
outsl
mov
and
test
adc
add
mov
je
sar
jg
cmpsl
or
cltd
push
inc
and
shl
loopne
sub
fbld
sarl
add
les
ljmp
cmp
adc
roll
inc
scas
clc
jl
ja
jl
call
pop
into
mov
xchg
shl
push
aam
xor
imul
out
push
add
std
or
push
xor
loop
add
cmp
scas
aam
adc
pop
add
push
sbb
xor
fistl
popa
cld
mov
stos
inc
mov
mov
sbb
xor
pop
cltd
inc
sub
cmc
and
sahf
hlt
inc
dec
xchg
xor
jp
dec
add
mov
rol
dec
add
movsb
popa
add
mov
xor
dec
orb
xchg
addb
lcall
push
jbe
mov
cwtl
rol
xchg
nop
adc
lods
push
adc
fwait
and
jmp
xchg
jecxz
mov
fcoms
sub
inc
mov
xchg
cmp
dec
sub
lret
xor
into
stc
decl
test
mov
test
sbb
xchg
pop
cmpsb
out
into
cmovl
jmp
inc
and
test
xchg
data16
sarl
andb
cmp
push
lcall
push
push
les
xchg
mov
aaa
add
js
add
add
arpl
icebp
xchg
sub
incl
xlat
and
loope
loop
add
fdivrl
add
push
out
dec
push
jge
cld
fisubrs
pop
and
insl
adc
mov
int
lret
cwtl
adc
mov
push
add
jmp
jg
ljmp
sub
mov
mov
ljmp
push
sbbl
incb
sbb
push
add
mov
pushl
add
sahf
fsubrs
ret
sti
fsts
and
pop
test
in
mov
loope
mov
push
inc
cmp
jg
and
into
and
adc
jg
adc
sub
sbb
jge
test
shrl
xor
jbe
jg
lock
mov
fsubrs
jl
push
dec
test
decl
test
dec
mov
and
pop
or
inc
xor
add
push
jmp
push
sbb
inc
or
jmp
sub
movsb
xchg
cli
fcomip
add
jo
fs
ja
arpl
cwtl
fdivrs
ret
mov
cltd
shlb
inc
or
stos
sbb
mov
mov
jg
add
addl
push
and
ret
add
xchg
cld
ljmp
jo
out
pop
loopne
mov
mov
dec
dec
xor
push
xchg
cmp
add
pmulhuw
or
cmc
icebp
and
jns
lret
sbb
mov
lods
lds
jne
jl
fisttps
or
add
push
jl
mov
pop
pusha
dec
jp
call
cmp
pop
inc
add
mov
cltd
in
fcomp
add
pop
scas
cli
jg
outsl
inc
sbb
test
xor
mov
push
std
das
xor
jo
xchg
js
mov
mov
add
call
dec
xchg
sub
mov
add
jb
adc
xchg
hlt
incl
xor
pushf
adc
mov
mov
mov
aaa
sub
or
add
or
adc
pop
icebp
jg
dec
and
jg
xchg
adc
dec
in
add
mov
insl
out
mov
stc
and
pop
out
sub
imul
cmp
sar
out
clc
or
mov
int
xchg
cmp
insb
push
cmp
iret
pop
iret
aam
pop
xor
decl
or
clc
stc
adc
and
mov
or
cmp
popl
cmp
inc
test
pop
aas
add
in
js
cmp
call
and
sub
sbb
outsb
add
gs
mov
ljmp
add
xchg
adc
and
movsb
add
mov
inc
add
decl
sldt
xchg
and
sbb
aad
inc
xor
cmc
mov
lahf
cmp
mov
idivl
mov
cmp
les
xor
push
cmp
imul
sbb
sahf
jo
idivl
push
mov
popa
and
jg
jl
loope
fadds
loop
sbb
fcoml
add
ss
push
add
jl
hlt
push
stos
mov
fcomps
mov
or
mov
mov
mov
add
mov
lds
sub
adc
cmpsl
and
dec
xchg
add
in
xchg
int3
clc
push
cmc
dec
or
test
dec
ror
hlt
sbb
or
xchg
enter
add
ja
fisttps
push
add
call
lock
movl
push
rcll
cld
daa
mov
into
mov
push
inc
stos
push
inc
add
mov
mov
inc
push
cltd
and
leave
sub
xor
sub
fstpt
aam
fisubl
cwtl
icebp
call
or
push
jg
sbb
add
xchg
outsl
jo
fadds
mov
incl
cli
or
hlt
and
mov
fsubrs
fbld
xchg
or
into
xor
add
lcall
out
fwait
add
in
sub
inc
enter
int
stos
je
call
or
mov
shll
adc
loopne
jp
daa
mov
xor
mov
cmp
je
rorb
add
cmp
or
pop
rorb
js
incb
xor
das
push
xchg
inc
dec
push
in
or
mov
cli
add
sahf
mov
xchg
fildl
dec
sbb
jg
push
mov
repz
dec
lock
mov
mov
cmp
das
pop
mov
mov
add
lods
ud0
and
and
out
test
decl
add
pop
xchg
inc
clc
mov
pop
mov
loopne
cmp
push
mov
insl
sub
dec
pop
and
out
clc
pop
enter
push
cli
pusha
lret
xchg
push
lcall
outsl
js
ljmp
subl
sbb
lcall
test
dec
sahf
push
xor
and
or
and
xchg
dec
cwtl
adc
mov
out
inc
push
jecxz
jmp
mov
push
rclb
push
add
loopne
xor
int3
xchg
fisubl
mov
add
dec
call
push
rdmsr
ficomps
jg
inc
cmp
or
das
cmp
or
or
mov
data16
dec
jb
add
ja
call
adc
inc
and
pop
mov
and
popa
dec
shll
pop
nop
and
jg
add
pop
adc
mulb
lret
insl
aad
sbb
add
cmpsl
xchg
pop
incl
test
shrl
xorb
dec
sub
clc
add
loop
add
mov
sbb
add
clc
pop
inc
jb
push
or
fucomip
testb
jae
and
int3
xor
jecxz
mov
sub
add
push
xor
sbb
sahf
add
jo
ja
out
aam
cli
psrlq
mov
add
cmpsl
xor
adc
jo
cli
fildl
xor
add
or
aaa
divb
push
cmp
inc
xlat
notl
shrb
jl
xor
movsl
adc
std
repnz
in
aas
or
sbb
jb
cmp
add
sub
mov
xor
or
mov
bound
ljmp
xor
outsb
fistpl
xchg
adc
call
loopne
sahf
add
aad
mov
inc
push
mov
add
pop
mov
das
sar
mov
outsl
xchg
test
xor
test
push
jl
pop
or
jnp
jno
jne
and
inc
rolb
fucomip
fisubrs
xchg
cmp
push
idivl
jne
int
cmc
cmp
stos
dec
add
mov
xorl
adc
incl
clc
push
sub
dec
or
lahf
adc
pusha
test
bound
int
sbb
mov
decl
aad
add
adc
lret
add
xor
fwait
mov
adc
mov
mov
ret
jae
or
lods
jnp
or
push
std
je
ds
or
lock
dec
les
ljmp
inc
lea
les
xlat
mov
mov
fcomip
jo
arpl
out
push
push
cltd
lret
xor
hlt
jmp
call
cld
add
add
mov
and
xchg
add
jmp
and
xchg
mov
or
std
mov
push
or
push
sbb
jp
test
and
adc
stos
push
incl
xlat
fs
inc
fs
je
testb
xor
xlat
push
sarb
push
mov
ja
fists
call
pop
jo
into
push
xor
loopne
add
or
aaa
dec
jl
into
and
in
call
inc
add
scas
push
repnz
cli
aaa
movsb
push
cmp
cld
test
pop
ficompl
and
arpl
clc
pushl
enter
cmp
stos
icebp
cmp
cli
ljmp
decb
imulb
in
inc
add
jge
mov
decl
xor
push
inc
or
insb
sub
dec
xor
in
sub
mov
mov
cmp
xchg
mov
cmp
add
cmp
adc
sub
cmpl
push
or
add
jmp
clc
push
add
add
test
or
cmpsb
sahf
add
xchg
cmc
stc
cltd
add
push
dec
mov
cmc
mov
into
sbb
add
arpl
jl
sarl
inc
call
inc
das
addl
pushf
inc
dec
out
lock
push
mov
std
cmpsb
nop
cmp
pop
add
roll
test
inc
stos
cwtl
les
inc
daa
lock
ret
mov
scas
add
cwtl
inc
mov
add
adc
out
shrb
test
test
cmp
pop
mov
lock
cmc
or
add
inc
cmp
movl
lods
jo
ljmp
jl
adc
jmp
loop
clc
mov
add
mov
cmpb
sub
fnstenv
enter
mov
rolb
sub
testb
add
gs
pop
lods
add
imul
push
ss
add
add
loop
inc
xchg
sub
jo
push
stos
mov
sbb
xor
setnp
test
lcall
movsl
or
jmp
adc
cmp
pop
push
std
add
jns
dec
insl
mov
adc
add
rclb
shlb
add
cmc
sub
aaa
ret
inc
jbe
jne
sbb
push
out
mov
incl
outsb
pop
adc
xchg
inc
xor
jl
adc
push
rcrl
sti
push
cmpsl
js
rolb
push
push
popf
mov
fistpll
add
mov
fcmovnb
out
mov
cmp
cmpsb
or
jecxz
xchg
rclb
data16
push
inc
loope
ret
mov
cmp
mov
pop
cwtl
and
add
inc
test
in
sub
push
shrb
and
pushl
mov
add
fsubs
or
in
push
pusha
pop
in
add
inc
idiv
pusha
or
xor
in
add
cld
cmp
loope
mov
sbb
add
loopne
sahf
xor
outsl
mov
lods
js
push
fucomi
stos
cmp
pop
shr
mov
test
fs
xchg
into
dec
mov
jg
pop
jecxz
mov
or
loop
inc
nop
insb
mov
std
add
sbb
pop
or
inc
lods
repz
lcall
aas
cmpsb
mov
fisttps
lret
popa
aaa
lds
iret
sbbb
movd
mov
cmc
dec
mov
pop
push
xor
xchg
sub
shr
dec
incl
mov
mov
sbb
pop
jns
loope
jg
mov
inc
dec
gs
xchg
out
cmc
pop
sarb
addr16
sbb
push
xor
cmp
sub
and
imul
and
mov
cli
jnp
add
pop
imul
lahf
movsb
lcall
repnz
scas
dec
adc
jo
rorb
and
or
or
xor
add
pop
sub
jo
pop
mov
stos
mov
mov
cld
repz
ds
ljmp
addr16
cmc
ret
add
add
mov
jg
xor
outsl
out
fisubl
jno
inc
inc
fwait
dec
mov
inc
adc
stos
pop
sbb
or
out
stc
jo
inc
or
das
leave
jecxz
inc
pop
xor
lret
mov
mov
mov
lods
or
or
xchg
mov
or
cld
add
cmp
dec
push
std
cmp
adc
xchg
icebp
data16
xchg
test
js
out
pop
push
pop
mov
pop
add
orb
cli
aad
fwait
decl
fwait
pop
rclb
in
xchg
adc
jmp
mov
sbb
jg
divl
out
sbb
adc
ja
lods
lahf
je
sbbl
cmp
test
pushf
cmp
loop
loopne
test
in
insl
and
ja
mov
cmp
mov
sub
push
pusha
push
jmp
xchg
fldcw
je
in
adc
adc
ljmp
pop
lcall
sub
add
xchg
add
fmuls
push
jp
or
mov
adc
call
into
and
lds
pop
inc
out
xor
jne
fiaddl
sbb
xchg
incl
in
andb
jbe
dec
xchg
or
call
push
mov
add
andl
test
fisttpl
mov
std
xlat
pop
jb
jmp
sbb
or
lods
or
push
je
jmp
inc
fwait
movsl
fnstsw
xor
rorb
jg
push
sarl
adc
and
xor
and
rcll
xor
jg
ds
add
jmp
shll
jbe
popl
sbb
pop
fcomps
out
pushf
addr16
daa
daa
jnp
jp
pop
lds
jge
pusha
mov
push
std
nop
jecxz
mov
mov
std
adc
cmp
jle
fwait
lea
xor
add
or
add
lcall
std
mov
std
add
loopne
xor
pop
mov
xchg
pop
movsb
repnz
xchg
mov
mov
push
ds
stos
or
lods
jns
ds
leave
pop
and
loopne
lods
daa
lock
xchg
nop
push
sahf
sbb
or
dec
dec
in
push
flds
mov
das
loop
sub
pusha
into
pop
iret
push
push
bswap
jns
inc
out
orl
or
xchg
and
pop
pop
fwait
inc
adc
pop
or
scas
and
xor
add
outsl
pop
pop
mov
xor
mov
pusha
outsb
cmp
push
into
inc
sti
das
shl
mov
inc
insb
add
cmp
aad
imul
cs
stos
cs
je
or
add
subb
lahf
push
jmp
andb
outsb
mov
sub
pop
pop
mov
call
mov
and
push
pop
add
mov
fnstsw
nop
sbb
jl
int
repz
int
or
xchg
push
push
test
dec
lods
loopne
mov
pop
loopne
shlb
cmpsb
cs
popf
cli
mov
out
dec
push
push
inc
pushf
ja
inc
cmp
jbe
sbb
or
incl
xor
outsb
fildl
jle
add
push
subb
or
std
stos
out
pop
add
adcl
xchg
or
outsl
test
xor
and
adcb
mov
xor
scas
imul
outsl
out
mov
nop
dec
push
fwait
push
or
fadd
stc
mov
andb
inc
cmp
pop
pop
xchg
and
es
mov
xor
cld
clc
sar
decl
sub
rcll
pop
lahf
enter
or
inc
pop
sbb
xor
into
sbb
adc
icebp
lock
bound
xchg
lcall
aas
add
jge
hlt
nop
clc
or
cmpsb
shlb
xchg
sbb
sbb
loopne
xor
pop
pushl
in
aaa
bound
aaa
pop
movsl
out
fisubs
push
clc
push
or
aad
subl
push
icebp
jg
push
aaa
dec
xchg
stos
push
call
inc
and
loope
scas
fiaddl
dec
dec
sub
xchg
mov
xchg
ljmp
push
push
mov
xchg
xchg
xchg
movzwl
push
pop
adc
loope
jl
jg
inc
pushf
sub
jo
jge
cmp
adc
je
push
scas
lock
xor
mov
stos
ljmp
movsl
out
mov
shll
sub
testb
lock
push
imul
mov
addr16
dec
ja
adc
mov
mov
cli
pushl
mov
inc
js
scas
sub
mov
push
xchg
test
incl
xchg
stos
int3
lcall
and
mov
sbb
push
cmc
dec
xor
lea
add
loopne
and
sub
sub
outsb
mov
ss
das
sub
test
jo
addl
cmp
inc
lret
lods
adc
push
clc
filds
out
pop
cmp
fsubrp
mov
sub
adc
ljmp
sub
mov
sub
nop
lods
gs
jg
mov
sub
jo
cmp
sub
out
int
out
clc
outsl
test
mov
cmp
pop
pop
jmp
outsb
test
arpl
sub
leave
test
jmp
in
aad
fiadds
incb
jae
mov
jp
xchg
rol
xorb
mov
cmpsl
inc
cltd
mov
loope
aad
aam
push
in
jb
loopne
pop
add
dec
pop
test
adc
in
mov
imulb
mov
or
add
xor
or
rclb
aaa
aam
adc
aad
les
out
dec
loopne
lock
adc
inc
mov
js
add
js
or
les
add
leave
mov
add
lock
add
xor
in
dec
jo
mov
cmp
test
or
dec
or
outsb
mov
inc
lahf
lods
repz
cld
adc
jne
je
shrb
or
stc
lock
mov
jnp
lret
add
sub
adc
xchg
sbb
sbb
ljmp
push
mov
loopne
or
enter
sub
in
mov
out
dec
test
push
fisubs
outsb
jo
dec
push
bound
or
push
dec
push
add
test
fmul
flds
pop
mov
fiaddl
ret
adc
push
dec
push
aad
orl
ja
fistpl
mov
add
cli
daa
pop
arpl
push
mov
push
xchg
add
mov
inc
fcmovb
out
arpl
fcmovbe
shll
in
mov
pop
cmp
loopne
mov
add
ss
dec
movsl
push
inc
xor
xchg
out
jp
mov
xor
les
hlt
divl
adc
sbb
sbb
dec
jg
xchg
fistpl
test
mov
ficoms
jecxz
decb
fucomip
cmc
inc
xor
ret
js
in
nopl
jmp
fwait
sub
call
lods
xor
pop
adc
repz
push
incl
test
add
add
repnz
add
add
cmp
sbb
test
mov
jo
xchg
dec
cwtl
pop
mov
sub
mov
lods
fcmovu
pop
nop
inc
rclb
cld
sbb
js
mov
xchg
out
dec
cmp
ljmp
push
mov
insl
sahf
and
fcoms
push
enterw
rcll
mov
xchg
leave
xchg
jge
pop
mov
popa
push
repz
xor
fcompl
lret
sub
pop
cld
inc
fs
cmp
inc
add
dec
push
xchg
mov
inc
mov
sub
inc
or
cmp
push
or
push
mov
cmp
js
xor
int3
fsts
test
es
lcall
add
dec
popa
rcrl
pop
dec
and
and
dec
les
mov
pop
mov
nop
enter
lahf
dec
xchg
cmpsb
and
in
mov
and
jae
push
adc
add
add
cmp
inc
inc
xor
mov
fs
dec
out
inc
add
in
das
bound
ret
pop
cmp
into
and
adc
movsl
shr
lea
mov
daa
push
aaa
es
clc
cmp
shlb
popa
stc
cmp
decl
mov
xchg
test
cmp
fistps
pusha
lahf
xchg
sub
ljmp
loop
jne
into
outsb
adc
mov
push
sub
cmc
mov
inc
push
loop
mov
jno
mov
xorb
pop
pushf
daa
mov
jg
jg
cwtl
cmp
icebp
mov
sarl
rcrl
lods
xchg
inc
mov
mov
lock
pop
mov
xchg
xchg
outsb
jbe
hlt
mov
lcall
or
add
mov
movl
outsl
incl
cmp
sbb
fwait
sbb
popf
adc
mov
adc
incl
xchg
mov
loope
pop
push
stos
inc
ror
in
imul
xchg
jmp
adc
rclb
inc
lcall
sti
push
shl
mov
adc
mov
fstpl
jg
sbb
inc
cwtl
xchg
popl
cmp
adc
imul
lcall
cmp
aam
push
mov
icebp
je
xchg
xor
and
push
xlat
pushl
loop
lret
jmp
shll
mov
incl
sub
shlb
je
aad
mov
les
notl
fwait
or
cmpsb
sub
adc
jecxz
add
dec
add
out
loop
repnz
dec
push
test
cs
push
push
shrb
dec
xor
hlt
xchg
fimull
cmp
divb
aaa
cld
cmp
lret
add
pop
test
xor
inc
dec
and
clc
mul
and
pop
add
test
add
nop
and
mov
lock
imul
fsubrl
jecxz
pop
rolb
call
rcll
jbe
sahf
bound
push
les
hlt
in
call
fcompl
sarb
bound
mov
mov
mov
pop
cmpsl
mov
lahf
clc
xor
lea
ficompl
mov
push
mov
sub
xor
jp
mov
sar
fwait
jg
fdivp
stc
add
push
test
aam
add
out
push
add
dec
cmp
push
cld
in
add
jge
or
out
xchg
or
adc
pusha
pop
jg
mov
call
test
lret
jnp
leave
mov
add
mov
pop
lods
push
insb
add
jg
cmpsl
mov
jmp
dec
lcall
cld
test
sbb
pop
add
test
sahf
add
xchg
pop
stc
out
mov
pushf
dec
cmp
cld
jae
loop
inc
rcll
add
add
fdivrl
rorb
mov
int
shlb
ljmp
in
xchg
sbb
test
push
ljmp
xchg
inc
das
insb
pop
add
movsb
bound
or
or
or
ljmp
insl
data16
inc
mov
mov
fiadds
push
add
push
add
ss
mul
xchg
cs
mov
sbbb
fs
out
sub
ljmp
fistpll
lcall
xchg
and
add
mov
outsb
pop
inc
ret
lahf
mov
pop
shlb
sub
add
lcall
inc
sbb
inc
and
test
in
xor
mov
scas
in
data16
divb
int3
cmp
push
clc
inc
cmp
adc
or
dec
add
jne
inc
dec
pop
mov
mov
js
int
xchg
or
sub
push
pop
es
repnz
mov
xchg
jmp
shlb
cmp
or
sbbl
stc
pop
enter
or
push
mov
cmp
add
push
fisubs
roll
mov
or
int
incl
call
cmp
jo
ja
xor
ss
sub
sub
faddl
inc
out
pop
cmp
sti
sbb
shrb
loopne
or
inc
iret
je
outsl
iret
bound
stos
pop
push
mov
xchg
inc
and
jae
int3
jg
mov
jb
jae
push
pop
mov
push
add
pusha
decl
insb
lret
pop
cmp
jns
data16
pop
addr16
jb
inc
incl
xor
rorb
xor
xchg
movzbl
int3
add
loop
decl
idivb
enter
mov
add
dec
mov
dec
out
xchg
mov
lock
outsb
pusha
bound
addr16
adc
adc
xor
adc
js
scas
fwait
xchg
enter
mov
pop
and
loop
cmp
xor
add
incb
add
add
rorl
sub
lock
jp
adc
leave
lock
cmp
mov
hlt
dec
adc
incl
test
mov
sbbl
scas
sbb
decl
xlat
popf
or
push
loopne
mov
pop
pusha
movl
jecxz
mov
mov
pushf
in
inc
sub
inc
adc
inc
ss
ja
or
ret
sbb
fcomip
add
hlt
aad
mov
adc
push
arpl
sti
push
cmp
mov
mov
add
cmp
dec
mov
test
mov
pop
cld
jns
dec
sub
lcall
fildl
jecxz
mov
cli
out
arpl
mov
fdivl
mov
pusha
pop
jecxz
push
out
dec
mov
dec
xor
js
mov
inc
push
mov
mov
daa
mov
inc
aas
jb
mov
or
fisubrs
jg
fldcw
imul
add
pop
ds
js
add
mov
stos
fldt
mov
add
fsubrs
call
add
add
xchg
cs
lods
lods
mov
mov
pop
lods
push
pop
rcl
out
out
inc
add
lods
push
inc
jbe
push
jnp
mov
clc
fwait
cmc
shll
push
mov
cli
and
repnz
cwtl
pop
adc
adc
pop
mov
sub
das
mov
jp
and
bound
add
push
sub
das
xchg
loopne
pop
test
mov
sbb
xchg
stc
mov
int3
sbb
loop
shrl
rclb
aas
dec
aaa
jl
unpckhps
negb
rcll
mov
xchg
sub
ljmp
push
pop
ljmp
jo
scas
idiv
jg
pop
insb
add
gs
std
aad
and
xchg
inc
loope
fstpl
inc
push
push
cld
ss
call
arpl
add
fidivrl
dec
les
push
insb
pop
outsb
push
rorb
lods
les
or
mov
cmp
test
inc
cmpsb
xchg
and
leave
loopne
pop
clc
mov
dec
sub
cwtl
lods
cs
test
mov
loop
dec
cmp
sarb
add
xchg
lds
es
jp
stos
sub
out
rclb
cmpsl
mov
cli
mov
xchg
jbe
mov
mov
ja
popa
cmp
push
lea
sbb
sbb
pop
mov
fisttps
mov
lock
sbb
test
xor
es
and
add
popa
out
inc
hlt
notb
xor
lcallw
xchg
add
ret
pop
jg
xor
xor
adc
scas
add
fistps
das
js
mov
jl
out
lret
mov
aas
icebp
cmpsl
dec
fisubl
xor
sbb
pop
loope
sub
or
clc
mov
loopne
cli
mov
add
ja,pt
push
mov
or
in
push
into
xor
inc
sbbl
sbb
fadds
scas
mov
or
and
clc
cmp
cmp
jge
cmp
popf
lock
call
or
pop
push
sub
mov
pop
dec
push
icebp
push
sbb
ljmp
fsubrl
jno
push
add
rcrl
xchg
mov
in
ljmp
jno
je
sub
and
mov
neg
fcomps
jo
dec
cld
pop
inc
mov
adc
push
xor
cmp
out
add
push
sub
or
scas
jb
mov
push
loopne
lea
ljmp
adc
pop
mov
test
mov
test
loop
jg
loop
mov
mov
fs
mov
add
repz
into
cld
pusha
push
pop
mov
out
lcall
int3
orb
stc
fs
mov
xor
cmpsl
aas
ret
jg
sarl
dec
pop
cmp
add
mov
mov
aaa
mov
add
sbb
addb
jb
lock
pop
mov
orb
in
push
or
pop
sbb
sbb
sarb
pusha
gs
sub
and
xchg
adc
jl
shlb
stc
jo
hlt
lock
or
sub
add
mov
mov
clc
mov
adc
outsb
jne
push
sbb
lret
popa
mov
rolb
stos
imul
pop
loop
pop
adc
sub
pop
push
pop
out
loop
mov
pop
test
push
cmp
lcall
xchg
push
pop
xchg
push
mov
cmc
insb
repnz
jg
decl
ret
jecxz
imul
es
jo
cmp
push
es
call
loop
mov
push
inc
ret
cld
or
leave
cmpsb
js
lods
sbb
add
cmpb
addl
and
inc
movl
rcll
dec
sbbb
add
arpl
shll
adc
add
dec
add
lcall
add
jbe
sbb
out
add
dec
xchg
xchg
nop
fbld
dec
pop
verw
adc
adc
ja
adc
jno
or
xchg
mov
in
stc
jg
mov
and
jmp
dec
leave
les
inc
sbb
cmp
test
adc
xorb
inc
outsb
jno
mov
decl
ret
xchg
dec
adc
xor
cmp
lret
loope
mov
ss
cmp
stc
inc
roll
outsb
push
mov
fiadds
push
clc
cmc
idivl
mov
mov
xchg
jns
jl
xor
mov
push
push
nop
ja
test
mov
push
dec
add
jmp
mov
mov
pop
add
lea
mov
out
aaa
pop
jb
xchg
xchg
cwtl
insl
out
test
out
xchg
repz
stc
movsb
es
jae
popa
incl
int
add
inc
ds
xchg
mov
sub
add
sbb
add
incl
or
adc
jl
pop
add
and
cwtl
xchg
add
into
inc
orb
pop
insb
dec
pop
xchg
adc
dec
cli
pop
xchg
fcoms
lret
sbb
mov
ja
icebp
enter
cs
je
inc
shll
jno
push
out
sar
int
icebp
test
sbb
cs
or
mov
mov
repnz
inc
push
or
scas
jp
cld
rolb
push
mov
cmp
inc
adc
cld
mov
rclb
or
sbb
or
int3
lds
cmp
cli
dec
cmp
rolb
jecxz
aaa
dec
cmp
outsb
pop
mov
cltd
mov
data16
lcall
nop
or
fwait
dec
incl
addl
cwtl
add
inc
or
fcomip
jle
in
add
xor
orb
xor
mov
inc
pop
fs
movsb
fmull
jl
mov
shlb
adcl
push
inc
int3
or
addr16
or
jg
push
dec
stc
ja
jns
pop
mov
xor
out
xchg
cmp
es
fwait
push
data16
xchg
stos
adc
and
std
mov
push
jns
je
aas
jg
sbb
sub
add
test
lock
movb
mov
pop
insl
pop
inc
pop
xor
add
sahf
sub
vpsraw
test
testl
sbb
sti
add
xlat
pop
push
mov
pusha
push
mov
movsl
pop
ret
js
stos
or
dec
jne
cltd
pop
cmovo
aam
mov
rcrb
mov
ljmp
pop
mov
sbb
cmp
xchg
rorb
shlb
inc
lret
fildl
jmp
loope
sbb
in
mov
jns
dec
rol
sbb
cltd
test
loope
inc
pop
lods
loope
or
cmp
pop
ret
shll
mov
cs
add
stc
sbb
or
loopne
and
nop
add
adc
add
sbb
shr
mov
add
jmp
inc
mov
mov
call
push
jg
or
sarb
sub
inc
andl
jg
fistpll
or
xchg
xor
mov
in
fldl
stos
xchg
movsb
scas
mov
pop
sbbl
ljmp
lcall
ud2
aas
add
addr16
jg
lret
aas
dec
lcall
cld
fs
xor
push
xor
iret
imul
enter
adcb
push
cwtl
or
jo
mov
push
loope
inc
fcomip
add
mov
sub
inc
sub
xor
cmp
cli
jg
lahf
dec
mov
setns
cld
scas
into
or
inc
fwait
movsl
dec
pop
dec
call
andb
imul
sub
inc
lahf
lods
mov
std
incl
inc
dec
sub
testb
add
xor
loope
arpl
xchg
arpl
aam
jl
mov
push
dec
rcrb
fsts
dec
xchg
dec
or
clc
subl
das
add
std
call
mov
data16
dec
outsb
rcll
int
pop
sbb
sbb
jno
adc
or
call
loop
icebp
mov
test
sahf
push
jge
scas
push
mov
int
cmp
sarb
pushf
rolb
insb
dec
push
sub
aam
mov
pop
xlat
aad
mov
cltd
loopne
mov
dec
sar
incl
pushf
sbb
outsl
hlt
push
ret
add
cmovp
pop
test
nop
and
jne,pt
jg
mov
mov
dec
std
lret
adc
addb
outsl
xor
mov
jg
add
test
enter
jo
push
add
addr16
aad
jmp
or
push
sbb
mov
lods
fisttpll
out
push
pop
outsl
fbstp
loop
cmc
add
or
jae
push
push
mov
int
sub
adc
pop
clc
xchg
es
cwtl
sbb
lea
lret
pop
inc
ds
pop
jmp
mov
mov
in
xor
push
xor
push
lcall
ljmp
push
mov
xchg
jg
shll
out
sbb
pop
jbe
mov
xor
decl
dec
xchg
dec
add
dec
push
andl
cmp
rcll
inc
dec
mov
mov
sub
sbb
mov
mov
out
inc
ja
mov
add
aaa
pop
sbb
add
sub
ror
xchg
cmpsb
movb
add
sub
mov
xchg
inc
cli
pop
lcall
mov
and
push
jp
fimuls
int
add
rcll
jae
incl
or
aam
mov
enter
xchg
xchg
dec
mov
decl
jmp
mov
mov
imul
mov
insb
mov
lods
or
mov
xchg
cs
dec
int
push
mull
loopne
pushl
lock
sar
popf
jo
adc
rorb
sbb
out
clc
cmp
addr16
scas
jae
mov
sar
incl
call
notb
sbb
sbb
or
sub
add
stc
pushl
icebp
lahf
xor
mov
cli
and
mov
add
and
incl
inc
xlat
nop
aas
fdivr
and
pop
add
in
cmp
or
ljmp
fcmovbe
mov
pop
cli
sbb
mov
div
lcall
and
or
lods
aas
aam
decl
dec
inc
mov
and
sarl
pop
add
popf
aam
addw
and
loopne
mov
lcall
pop
xor
mov
mov
xor
or
test
sbb
sbb
lds
movsl
ret
add
push
or
mov
mov
mov
loopne
jmp
scas
imul
aaa
inc
fisttps
fiadds
push
add
sub
jg
dec
push
add
stc
or
subl
sti
loope
jg
sahf
leave
stc
or
decl
cwtl
add
or
mov
xor
fsubp
sar
sbb
cmp
cwtl
sub
mov
icebp
ljmp
int3
add
push
and
mov
jge
fimull
std
mov
fstpt
out
sub
mov
xchg
movsb
out
add
push
jge
jno
or
jmp
jmp
sahf
adc
sbb
int3
jno
decb
movsb
and
std
xchg
jecxz
add
push
cs
fcomip
cmp
jae
inc
js
add
in
jg
sbb
jp
scas
mov
jb
sarb
incl
stos
dec
mov
inc
inc
popa
and
dec
mov
pop
popa
mov
push
popa
mov
add
jg
es
xchg
jp
iret
dec
adc
stos
hlt
jmp
mov
pop
add
int
popa
xchg
xorb
mov
enter
xchg
pop
pop
imul
xchg
stc
sbb
pop
inc
aaa
push
iret
sti
pusha
jns
cmpsb
icebp
std
xchg
cmp
fcmovu
inc
loopne
xor
ret
scas
adc
mov
jp
sbb
jno
movsl
dec
cmpb
shrl
mov
sub
ja
inc
xor
lahf
jg,pn
mov
pop
bound
xor
sub
adc
movsb
xchg
ret
insb
adc
shll
pop
mov
push
pop
imulb
addl
loope
pop
out
xchg
movsl
adc
pop
fisttpll
aad
mov
andl
add
or
and
push
pop
mov
ss
or
lcall
inc
dec
pop
cmp
ret
lods
push
and
dec
or
adc
scas
and
jnp
ficoml
jl
adc
jmp
fildll
mov
fstpt
rcll
or
mov
test
je
sbb
movsb
or
sub
and
rolb
fistpl
pusha
xor
pusha
mov
bound
push
data16
xchg
mov
sbb
mov
or
push
xchg
pop
aad
gs
mov
dec
aaa
or
push
push
jmp
cmp
inc
testb
enter
sar
pushl
add
sub
mov
add
test
enter
inc
es
clc
das
add
add
push
and
pop
fadd
push
stos
in
cld
pop
insb
dec
test
out
sub
nop
addl
fildll
icebp
scas
cmp
add
sub
scas
sti
pop
add
sub
sub
mov
and
cmp
cmp
ljmp
lock
orb
xor
andb
push
jb
outsl
out
lret
ss
test
lds
int
daa
and
cmp
xor
push
jecxz
ljmp
sub
pop
sbb
ja
or
leave
test
push
add
xchg
add
push
mov
fnstcw
inc
jne
push
or
in
fwait
loope
rclb
jo
mov
push
rclb
xchg
sub
pop
fwait
push
aaa
loope
out
enter
fstpl
aaa
ds
mov
adc
mov
mov
xor
dec
xor
rclb
rcpps
mov
lock
aas
ror
cmpsl
add
mov
popf
jg
fwait
mov
cli
lcall
iret
xor
in
pushf
or
clc
fbld
js
cli
xor
add
mov
push
and
add
add
adc
push
repnz
mov
cmp
mov
bound
imul
addl
mov
adc
push
es
add
icebp
fcmovb
iret
jl
jne
addb
push
cli
push
sbb
mov
iret
cli
mov
add
sti
ss
or
mov
add
adc
jne
in
out
mov
xor
dec
adc
pop
dec
rolb
push
cmp
push
addr16
sarb
inc
adc
jmp
push
les
dec
dec
sti
cs
test
jmp
pop
andl
stos
adc
std
jle
mov
pop
stos
iret
faddl
pusha
xchg
add
add
jno
arpl
rcl
mov
xor
and
sbb
lock
jns
nop
cmp
outsl
mov
add
lock
sahf
dec
fstpt
xlat
jne,pt
add
jecxz
inc
loope
mov
lock
inc
mov
dec
cmpl
sbb
pop
rcrl
decb
loop
int3
mov
adc
test
push
bound
movsl
lock
repz
loope
adc
cmp
movsb
jns
pop
insb
cmp
mov
adc
or
mov
test
cmpsb
mov
scas
add
push
mov
cmpsb
sub
jecxz
jecxz,pn
add
jle
push
and
sbb
mov
jnp
test
mov
adc
pop
sbb
outsl
adc
pop
ret
cmpsl
popl
into
je
adc
or
dec
mov
xchg
adc
data16
lahf
jbe
int3
jo
push
or
sbb
inc
sbb
or
scas
mov
adc
and
dec
inc
scas
call
mov
pop
imul
xlat
sub
add
pop
mov
cmp
mov
ss
test
mov
repnz
ljmp
shlb
lea
xor
push
rcrl
mov
js
push
mov
sub
push
sahf
sub
scas
das
mov
mov
mov
aad
daa
mov
inc
gs
addl
sub
adcb
sbb
icebp
in
dec
icebp
push
pop
or
inc
or
push
inc
or
imul
push
je
es
fildl
jge
loopne
inc
xor
pop
fdivl
sub
imul
and
in
adc
pop
push
inc
push
dec
jne
jg
lock
jno
cmovs
mov
jno
jne
mov
ljmp
cmp
dec
mov
pop
fisubl
inc
call
imul
pop
jmp
xor
push
inc
push
dec
aam
mov
push
push
adc
fidivl
push
fcmovnbe
test
scas
hlt
mov
jp
idiv
pop
ljmp
and
insb
out
jp
add
test
or
sbb
ljmp
add
incl
es
mov
inc
adc
pop
cmc
fisubs
cwtl
imul
adc
sbb
lcall
cmp
cmp
inc
ljmp
das
rcrb
adc
stos
shlb
mov
jo
ret
sub
mov
stos
inc
inc
xlat
push
imul
sub
jg
lcall
int3
adcb
mov
lret
mov
jnp
xor
arpl
in
andl
mul
pop
fcomps
jnp
sub
xchg
add
aaa
je
aam
and
or
push
aam
aad
data16
pop
dec
jae
sub
repz
adc
ljmp
mov
add
incl
clc
lcall
xor
in
pop
add
inc
outsb
addr16
cmpsb
sbb
inc
pop
test
pop
pop
mov
add
jb
sub
mov
push
xorb
cwtl
dec
add
inc
dec
dec
lret
push
mov
xchg
repnz
out
sbb
or
or
cli
xchg
and
lret
sub
or
jmp
jnp
dec
out
inc
adc
push
pop
add
mov
in
dec
das
sub
movsb
xchg
or
xchg
ja
ljmp
pusha
shll
ficomps
les
das
xor
lea
or
ljmp
and
rclb
in
ljmp
mov
dec
or
mov
mov
pop
lcall
sbb
mov
and
mov
cmpsb
jp
mov
movsl
loop
jl
incl
dec
ret
das
fnop
cwtl
movsl
mov
mov
stos
jg
pushl
repnz
movsl
aad
jecxz
stc
loope
mov
xor
jne
jg
test
mov
insb
mov
fwait
js
mov
pop
and
push
pop
ret
ret
dec
leave
pop
cmp
push
jl
stc
add
aas
shrb
jg
jbe
dec
mov
adcb
mov
inc
xchg
xor
sub
int3
sbb
shlb
outsl
jle
cld
pavgb
repnz
mov
adc
inc
mov
mov
jmp
sbb
add
xchg
dec
int
lret
xor
aad
mov
movsb
out
lods
rolb
out
aaa
dec
mov
mov
pop
lds
jbe
dec
call
push
or
jl
mulb
cmp
jmp
cltd
add
push
sub
pop
adc
add
std
sub
sbb
xchg
sub
rcl
mov
sub
cmc
lahf
js
hlt
repnz
mov
movsb
mov
mov
je
ds
sub
push
subl
loopne
js
mov
cmpsb
fsqrt
push
out
mov
inc
sub
movsl
adc
pop
sti
mov
loop
jne
cmpsb
ds
jbe
clc
aad
in
fistps
fdivl
loopew
mov
dec
lock
loope
fwait
add
cli
add
jecxz
mov
mov
cmc
or
lcall
pop
or
dec
nop
add
arpl
cmpsl
mul
mov
sbb
or
adc
jo
xor
in
mov
mov
popa
test
dec
or
sub
outsb
push
jbe
cmp
mov
and
or
aad
add
cmc
shrb
nop
push
pop
push
andl
ljmp
out
pusha
add
mov
lcall
scas
loop
sbb
mov
inc
test
push
jp
shlb
xor
in
jmp
ss
push
sbb
in
ret
loopne
pushf
fwait
mov
nop
mov
clc
aas
sub
mov
cmp
outsb
push
xor
cld
outsl
incl
push
daa
add
xlat
xchg
movsl
add
xor
cmp
jg
mov
pop
mov
sub
dec
jle
sahf
pop
cmp
add
lds
inc
ja
loope
out
cld
xor
xchg
test
adc
lcall
mov
cltd
das
xchg
xlat
cmpsb
lods
je
fs
add
and
mov
mov
mov
and
imull
mov
loop
jne
je
lea
mov
sub
leave
in
push
dec
or
shrb
cmpsl
add
jg
loopne
incl
daa
adc
sub
pop
lret
out
jmp
mov
dec
loopne
jmp
fucom
int3
fisttps
cmp
add
adc
sbb
or
jg
movups
jge
push
cld
lret
or
sbb
add
xchg
sub
pushl
fmulp
aaa
aam
mov
pop
jecxz
mov
push
jecxz
or
push
insl
cmp
xchg
sar
push
sti
out
icebp
stos
clc
int3
pop
stos
rorb
add
sub
insb
adc
or
jle
add
push
dec
mov
sub
xchg
inc
xchg
ss
mov
out
push
out
nop
stos
pusha
mov
cld
decl
or
adc
mov
cmp
clc
decl
and
mov
mov
out
test
push
aad
ret
adc
loopne
adc
mov
sbb
insl
jg
fimull
xchg
inc
rcl
mov
and
jmp
cld
incl
mov
jmp
or
testb
call
mov
inc
mov
push
sub
and
xor
rclb
xor
icebp
repz
cmp
mov
ss
repnz
mov
fisubrs
xchg
nop
mov
js
add
loopne
push
movb
cmpsb
ja
std
or
mov
add
dec
xchg
arpl
push
add
clc
dec
jnp
aad
incl
mov
add
shl
sahf
cmp
or
sbb
dec
inc
dec
cmp
push
cmp
outsb
fmull
loop
lcall
cmpsb
jb
xchg
xchg
arpl
jl
pop
add
loopne
lcall
or
lcall
cld
loop
xor
in
loope
add
xor
jo
add
pushl
cwtl
mov
test
adc
jo
mov
mov
adc
mov
cmp
or
pop
jns
pop
cmp
fldenv
push
inc
push
add
xchg
test
xchg
add
cmp
data16
mov
jl
shl
orl
mov
aam
rorb
cli
pop
sahf
outsl
push
inc
mov
sub
mov
dec
sub
scas
cli
push
mov
sub
cmpsl
int3
add
xchg
lret
loope
outsl
incl
mov
mov
loopne
inc
dec
add
cld
mov
hlt
cmp
rorl
dec
pop
add
push
push
std
inc
adc
add
rolb
andb
and
dec
jg
xor
rcrl
xor
scas
nop
or
add
mov
add
mov
gs
out
incl
adc
push
add
dec
fsubl
icebp
or
fcomip
dec
add
add
mov
jp
test
hlt
lcall
xchg
mov
xchg
adc
xor
cmc
and
cld
ljmp
fs
inc
jecxz
add
lret
push
dec
pop
in
jne
pusha
inc
fs
jg
push
dec
sub
pop
divb
addr16
cwtl
sub
mov
and
icebp
adc
aaa
push
xchg
add
ds
into
push
fcomps
clc
mov
lods
stos
add
sbb
cmc
pop
negb
nop
mov
adc
dec
ss
inc
xchg
xchg
incb
lret
fs
fcmovne
lahf
in
ds
lods
or
xor
loope
mov
mov
sub
or
lahf
or
enter
and
bound
das
xchg
rcll
sub
cmpsl
iret
outsb
outsl
xchg
sbb
mov
mov
jl
add
pop
or
or
les
pop
fcmovbe
in
mov
pop
inc
loope
push
jmp
dec
sub
into
dec
xchg
inc
mov
mov
sbb
ret
clc
mov
fiaddl
in
pop
orb
js
xlat
es
pop
cmp
mov
add
clc
sub
les
and
push
add
dec
ret
sbb
cmp
pop
xchg
cwtl
and
push
xor
add
jne
mov
outsl
hlt
sbb
cs
sbb
xchg
loop
clc
js
push
or
pop
in
incl
inc
pop
cmp
mov
dec
addl
mov
and
jo
adcl
scas
daa
loope
inc
sub
out
hlt
pop
pop
mov
cmp
jo
test
shrb
cmc
xchg
ds
repnz
inc
inc
cli
inc
jge
mov
test
pop
test
push
pop
jle
icebp
add
call
stc
adc
ljmp
push
add
in
mov
aad
hlt
cmp
inc
aam
pop
pusha
shrb
push
sbb
add
cmp
mov
fmulp
les
cmp
sbb
gs
psubb
push
cmp
shll
jl
popa
dec
shlb
call
and
bound
rclb
push
test
jecxz
mov
mov
sbb
dec
arpl
or
add
ljmp
notb
rcr
aam
mov
sbb
addl
inc
adc
pop
mov
fimuls
outsb
or
jg
loope
sar
insb
xchg
pop
push
add
mov
mov
jg
test
and
lret
out
and
pop
and
xchg
cmpb
add
iret
imul
lahf
push
push
and
in
cmpsl
sub
sbb
ret
data16
inc
sbb
mov
jg
and
clc
xor
jb
loopne
inc
add
test
cmp
orb
das
fisubrl
jbe
decb
loopne
and
ret
and
loope
pop
add
add
pop
jbe
jmp
jmp
cmp
or
xor
sub
loop
lea
lea
and
insb
loope
aad
pop
dec
push
add
sarb
aad
sbbb
fbld
mov
aaa
rcll
mov
mov
cmp
ret
int3
or
outsb
inc
and
xlat
sar
out
push
cwtl
ljmp
jne
sub
pushf
lahf
push
lahf
xchg
into
lock
lock
cmp
call
or
add
in
rolb
adc
lcall
xor
aam
fdivl
and
push
adc
popf
mov
out
xchg
decl
xor
cltd
xchg
push
cld
push
xor
imul
into
pop
pop
mov
out
mov
add
pop
xchg
push
stos
mov
xor
js
mov
pop
mov
pushl
add
dec
inc
mov
mov
or
mov
and
jne
jg
incl
pop
lea
jo
xchg
ret
inc
dec
cmp
sbb
pop
lcall
pop
mov
hlt
sbb
ja
push
ds
call
add
mov
inc
push
adc
aam
push
cwtl
inc
jmp
mov
mov
mov
pop
outsl
stos
and
mov
aaa
mov
mov
pop
das
sbb
add
nop
jp
jg
jbe
or
icebp
test
push
inc
pop
int3
mov
outsl
cmpsl
mov
cli
pop
and
pop
xlat
fwait
push
or
xchg
in
mov
jecxz
push
add
mov
xor
add
mov
xchg
es
and
fbstp
add
cwtl
scas
push
je
xor
add
clc
fdiv
mov
sub
dec
test
or
ret
roll
sub
les
ret
clc
jb
inc
shlb
mov
sar
add
xchg
mov
insb
fs
add
or
cmc
stos
xchg
ss
call
and
mov
mov
jle
dec
ret
aas
movb
insl
dec
or
and
clc
jle
fisttps
ljmp
lahf
or
loope
pop
lock
aaa
inc
xlat
jg
dec
mov
bound
push
inc
xor
jmp
fwait
push
jo
rorb
dec
in
push
push
mov
and
add
sar
inc
pusha
xor
jnp
cmp
fxch
inc
dec
ljmp
ret
add
xor
repz
scas
iret
xor
xchg
cwtl
cmp
jg
scas
aaa
xchg
rcll
call
in
jecxz
sub
inc
clc
outsb
orl
cmpb
and
cmp
push
pusha
ss
stc
pop
pop
loop
test
jbe
enter
jge
popa
inc
lret
lret
pop
insb
push
sbb
outsb
lock
cmp
addb
adc
std
add
mov
test
pop
xchg
lock
or
cs
idivl
push
dec
mov
nop
insb
dec
jbe
lcall
and
fstpt
and
bound
clc
fldl
lock
repnz
inc
fbstp
push
add
push
or
cmp
incb
cld
dec
loopne
adc
insb
sub
inc
and
pop
pop
mov
cld
add
or
mov
mov
inc
and
stc
pop
out
adc
jl
inc
mov
ja
add
sub
les
xor
push
dec
xchg
pop
pop
dec
outsl
sbb
ret
leave
subl
mov
xor
lcall
jns
sub
inc
nop
add
loopne
lea
repz
push
cmp
test
lcall
std
jecxz
pop
lock
sbb
add
adc
mov
incl
inc
mov
aaa
add
mov
inc
push
lock
xor
add
jmp
mov
add
testl
inc
sub
mov
inc
lds
std
mov
loope
mov
jns
std
stos
cmp
mov
push
test
xor
cmp
test
pushf
addr16
aam
cld
mov
fmuls
add
movsb
push
scas
pop
jl
cmpsl
leave
lcall
push
ret
pop
and
inc
xchg
jle
nop
jb
jbe
mov
add
lods
divb
jo
sar
mov
test
int
jg
popa
or
das
in
cmpsb
mov
fistps
mov
inc
je
or
test
mov
inc
mov
jl
cmp
add
push
mov
and
sbb
decb
push
or
and
or
in
lcall
mov
scas
xchg
lret
or
out
or
pushl
dec
mov
xor
cmp
push
mov
mov
call
and
push
jecxz
jp
lret
call
pop
rolb
ret
cmpsl
mov
cmp
or
lahf
stos
cmpsb
fadds
ljmp
push
cwtl
xchg
and
xchg
add
xchg
ljmp
daa
lock
inc
push
xchg
icebp
addr16
add
pop
scas
inc
scas
lods
pushf
add
ret
cmp
and
cs
or
push
and
ltr
pushl
shrb
imul
add
xchg
adc
in
add
and
cmpsb
push
fadds
add
call
xchg
je
sbbb
jbe
decb
adc
or
fists
sbb
mov
sub
mov
lock
add
addps
add
insb
lods
xlat
dec
call
decb
fdivr
int
push
xlat
hlt
mov
push
std
pop
jmp
xor
std
cs
out
cmp
scas
add
popf
pop
sub
mov
fcmovb
inc
dec
add
sub
dec
push
lds
ret
or
add
dec
fcoms
push
jecxz
test
popl
lahf
xor
sbb
ret
gs
dec
jo
lcall
adc
cltd
popf
jb
pop
test
outsb
cltd
add
leave
cmp
fsubrl
fcompl
jmp
daa
mov
push
push
add
add
cs
pop
negb
popf
inc
out
decl
lock
cmc
cmpsl
inc
mov
bound
hlt
xor
jnp
jecxz
xor
inc
adc
inc
aaa
dec
mov
sbb
outsb
test
enter
aad
inc
mov
lea
and
dec
mov
add
loop
int
and
pop
les
fisttps
mov
jbe
push
cmp
daa
sbb
psrlw
scas
insl
fmuls
nop
popf
fstpt
sbb
pop
push
adc
int
inc
jbe
fscale
mov
or
stc
cli
stos
rolb
shll
out
lods
dec
or
xor
movsl
data16
add
outsb
jnp
bound
dec
lret
push
mov
mov
rclb
xchg
mov
in
fstps
sbbb
gs
and
stos
dec
adc
pop
loope
add
add
sbb
or
add
dec
pushw
cltd
fsub
add
pushf
lret
ret
out
dec
xchg
fadd
outsb
cli
incl
sub
add
loop
and
popa
push
lcall
or
xchg
das
add
sub
push
mov
aad
mov
push
adc
pop
inc
addl
or
insl
popa
lods
cld
push
push
adc
push
rorb
lds
or
inc
lahf
sti
or
sbb
mov
test
and
mov
scas
xchg
lock
incl
xor
and
enter
or
xchg
outsl
sti
pusha
pop
pop
cmc
fistpll
mov
stos
pop
shr
fstl
pop
cli
sbbb
xchg
push
clc
mov
insl
inc
lcall
jmp
fs
push
push
jbe
push
inc
add
mulb
adc
cbtw
pop
xchg
shll
and
pop
mov
pop
cmp
testl
sub
inc
push
push
aam
dec
cmc
add
jbe
ret
nop
idivb
cli
adc
test
pusha
aad
dec
dec
call
cmpsl
xlat
inc
mov
or
adc
cmc
ret
das
testl
lret
pop
fiaddl
imul
add
icebp
mov
lret
bound
lods
or
decl
shll
sbbl
add
mov
sub
push
aas
add
inc
xor
pop
mov
addl
clc
xchg
sbb
jae
es
dec
mov
push
mov
rcll
shrl
cmc
add
xchg
roll
jg
dec
popa
push
aaa
jge
xor
scas
testb
incl
pusha
jg
pop
dec
push
jle
inc
test
jge
push
xchg
inc
mov
adc
test
push
xor
mov
int
jns
or
jmp
subb
mov
gs
mov
in
stc
sar
mov
fwait
sbb
fcoms
stos
push
mov
xlat
cltd
adc
xchg
jge
inc
and
adc
test
add
add
ljmp
notb
lret
inc
cmpsb
int
hlt
incl
push
shl
not
push
fcoml
jae
cmp
xchg
cmc
and
cmc
or
push
popa
and
push
in
fs
add
inc
lea
addl
dec
leave
call
ret
lret
pop
add
adc
add
dec
mov
call
add
outsb
fdivs
je
movb
xor
add
xchg
mov
sbb
or
add
outsl
neg
hlt
call
jg
insl
cmp
js
lahf
inc
aam
mov
or
leave
nop
in
incl
xchg
enter
or
jle
add
ljmp
ljmp
and
call
pusha
sub
xlat
cmp
popa
sub
fimull
cmpsl
aad
adc
ljmp
jnp
test
dec
jne
call
fiadds
or
jge
cltd
adc
push
iret
mov
out
nop
ucomiss
dec
jmp
stc
pop
pusha
stc
jae
shlb
iret
xorl
mov
jecxz
fildl
std
sub
js
adc
xor
add
mov
or
jg
jbe
lds
cmp
add
or
cmpb
sub
popf
es
inc
pop
cmpsl
gs
lock
inc
cmp
ret
add
push
insl
push
ss
push
mov
clc
pop
dec
aam
iret
mov
pop
popa
cmpsl
push
clc
inc
dec
cld
add
xchg
inc
sub
cmpsb
jne
xor
rcrl
inc
push
push
aad
popa
jo
xor
outsb
dec
add
add
leave
das
clc
pushl
adc
aam
cli
xchg
mov
mov
jmp
sahf
or
mov
pop
cmc
filds
sbb
cmc
int3
xchg
push
pushl
arpl
and
adc
shlb
std
es
xchg
xchg
mov
repnz
xor
jo
pop
scas
loopne
fs
push
mov
jp
out
pop
test
cmp
and
xor
pop
icebp
lahf
andb
pop
sub
cmp
cld
sbb
add
lret
inc
rol
fstpl
sbb
or
jg
das
mov
aad
mov
pop
mov
fsts
pop
lea
mov
push
push
xchg
stc
ljmp
and
aas
add
mov
add
pop
sbb
pop
dec
clc
ljmp
dec
sti
cmpsl
adc
cld
dec
loopne
movsb
lods
adc
loopne
jle
or
call
das
inc
mov
cmp
cs
cmpb
out
cmpb
fisubl
pop
call
sub
in
push
or
pop
ljmp
push
xchg
aad
sub
js
pop
mov
int3
cmp
add
pop
icebp
bswap
mov
push
je
in
and
fbld
shl
movsl
les
pop
inc
cmp
push
jne
call
insl
ret
inc
jge
dec
inc
and
out
dec
xchg
mov
mov
push
xor
insl
subl
ret
dec
pushf
cmp
adc
ljmp
add
mov
loopne
lcall
lret
imul
shrl
out
test
xor
cmp
and
les
lods
xchg
aaa
mov
add
pop
push
or
cwtl
call
and
or
jge
add
add
arpl
out
dec
iret
push
mov
and
out
mov
and
jb
notb
clc
sbb
js
cmc
insl
mov
decl
mov
or
mov
mov
shrb
lds
cmp
mov
frstor
movsb
jle
cs
add
int3
icebp
ljmp
lods
adc
inc
inc
imul
push
mov
cmp
jmp
cli
and
jl
test
ljmp
jle
pusha
sub
add
push
xchg
jmp
add
pusha
add
push
aad
stos
mov
xor
pop
mov
decl
sbb
pop
xchg
add
in
mov
repz
std
aad
mov
outsb
pop
sahf
imul
movsb
sbb
push
pop
mov
dec
divl
scas
sbb
test
xor
mov
aas
xchg
scas
push
nop
fwait
cmpsl
mov
or
cmp
ficompl
shrb
shrl
mov
xchg
ljmp
sbb
pop
imul
xor
ljmp
add
xchg
sub
aam
jns
dec
mov
das
popa
xchg
cmpsb
mov
and
add
decl
or
pusha
mov
jl
inc
incl
in
mov
add
test
fs
push
ret
push
mov
push
fstl
xorl
aas
jecxz
idiv
add
push
rcl
idivb
lcall
les
aas
adc
out
xor
loop
or
sub
loop
push
mov
mov
or
subl
inc
xchg
sub
jmp
adc
enter
pushl
sub
arpl
push
in
popa
xchg
or
add
pop
sahf
leave
aad
sub
add
ret
cs
lahf
test
cmp
and
jo
scas
sub
into
adc
ljmp
call
inc
and
lds
imul
aas
out
or
push
mov
negb
frstor
dec
and
cmpsb
in
popa
jecxz
fwait
cli
xor
mov
pop
fdivs
mov
and
jecxz
dec
adc
mov
sub
xchg
in
test
sub
xor
pop
test
mov
mov
lock
ljmp
loop
adcb
scas
pop
lods
pop
pusha
pop
mov
inc
mov
cmp
sbb
cmp
adc
orl
out
or
push
clc
push
xchg
hlt
mov
sbb
add
xchg
in
inc
outsb
cmp
push
jle
xor
in
adc
sbb
sahf
inc
je
ret
icebp
aad
jle
and
mov
xor
icebp
mov
mov
notb
and
sbb
sbb
xlat
shlb
xchg
in
test
mov
and
into
add
add
jecxz
enter
push
push
popa
dec
movsb
fldenv
adc
testb
inc
or
outsb
mov
cmp
inc
or
sbb
dec
sahf
jne
aaa
add
mov
pop
xlat
cli
and
xor
fildll
stos
push
sub
mov
jne
psubsw
add
mov
mov
mov
mov
or
aam
loop
pop
pop
xchg
and
push
pop
subl
lahf
movsb
sub
push
loope
dec
into
cwtl
out
in
lahf
clc
ja
mov
push
test
xchg
sbb
decl
aam
roll
rcll
sbb
cs
push
outsl
decl
test
mov
fadd
jnp
sahf
shlb
ret
xor
decl
lcall
pop
cmp
mov
sbbl
mov
sub
mov
xor
out
and
sub
testl
cmc
sbb
cmp
je
pop
xlat
out
add
mov
dec
sti
ss
jle
int3
cwtl
bound
sbb
ss
cld
rorb
scas
mov
nop
xor
dec
in
mov
or
js
jecxz
add
lcall
xor
mov
and
xchg
rclb
add
lcall
adcl
fwait
sub
int3
test
pop
push
pop
fnstsw
out
inc
jne
lea
cmpb
pushf
loopne
clc
or
ljmp
dec
push
push
cmpsl
gs
adc
mov
les
jg
dec
repnz
sub
adc
lock
loopne
jl
ljmp
outsb
std
jl
lahf
and
mov
mov
lahf
call
fisubrl
add
pop
adcl
pop
mov
icebp
inc
add
test
sub
sub
sbb
adc
decl
lret
mov
out
jae
cmp
xor
scas
in
mov
addr16
mov
hlt
jg
stos
cltd
stc
cmp
jne
mov
enter
cmp
das
cmc
aaa
sub
dec
jmp
orb
push
sbb
pop
leave
testl
xchg
lcall
cs
pop
sahf
jae
clc
lahf
ret
dec
cmpb
inc
mov
mov
decl
icebp
mov
inc
into
push
adc
pop
cmpl
test
incb
test
jmp
outsl
cli
sahf
popa
pop
dec
adc
ja
gs
into
out
repnz
outsb
clc
mov
mulb
mov
sub
add
sarl
jle
iret
adc
nopl
test
in
dec
loope
sar
or
shl
test
imul
mov
les
loope
arpl
bound
cmc
push
rcl
fdivrl
cs
add
and
adc
mov
pushf
push
mov
sti
mov
mov
scas
xchg
es
ds
push
jge
in
ja
clc
mov
push
ret
dec
flds
pushf
xor
jns
rcr
cli
scas
dec
pusha
mov
popf
add
mov
push
add
push
or
fdivr
dec
mov
das
mov
pop
adc
ss
adcb
dec
sarb
or
push
ljmp
pushl
dec
fildl
push
call
add
xlat
push
fwait
jnp
ljmp
cs
xchg
adc
xchg
jl
add
xlat
mov
dec
inc
sbb
pop
dec
mov
add
add
mov
in
sbb
fwait
pushl
dec
inc
cli
push
sar
into
lret
mov
sbbb
add
out
xor
stos
jg
incl
outsb
aad
or
gs
roll
pop
inc
repnz
add
inc
out
es
add
or
xchg
rolb
mov
add
dec
decl
enter
mov
or
jg
cmp
inc
mov
jno
mov
dec
lock
xchg
add
push
mov
cld
inc
dec
sub
pop
lret
hlt
jns
xor
jp
sahf
jbe
popa
lea
push
repnz
fmull
cmpsb
xor
mov
andl
mov
add
jbe
cmc
add
mov
mov
jb
std
aas
ja
push
add
cmpb
pop
mov
sub
or
cld
sbb
outsl
in
clc
rsqrtps
gs
cmp
add
mov
mov
jl
shlb
sbb
ja
test
sbb
imul
lret
ja
push
mov
in
add
arpl
out
roll
jl
add
inc
push
in
inc
mov
imul
ret
push
jg
or
imul
mov
pusha
push
ds
pop
pop
cmp
mov
call
jno
mov
adc
add
mov
push
jp
mov
rorl
call
pop
lock
mov
lcall
movsb
xchg
popf
mov
addl
xchg
stos
push
cmp
popa
inc
xor
pop
hlt
cltd
lock
out
inc
mov
inc
sarb
dec
and
in
dec
and
fmuls
mov
movsl
inc
jmp
lret
into
push
add
loope
out
inc
loop
push
inc
pop
std
rorb
adc
movsb
inc
adc
pop
or
xchg
ret
or
push
add
scas
pop
add
sub
in
loopne
cli
ror
mov
mov
xor
or
or
inc
mov
adc
and
push
inc
cmp
rep
push
jno
movsl
jb
loope
add
sub
scas
xchg
inc
pop
lahf
in
xor
and
stos
adc
andl
adcl
pop
sub
sahf
mov
inc
adc
in
mov
arpl
inc
jge
sbb
dec
push
test
bound
push
ficomps
int
jns
test
sbb
or
push
jbe
sbb
cs
pop
or
in
inc
add
imul
ret
shrl
test
push
movsl
jecxz
jnp
mov
lock
in
inc
sub
pop
addr16
outsb
lods
mov
jnp
loope
clc
scas
mov
or
fistpll
fbld
sahf
push
imulb
enter
dec
les
push
loop
sub
test
repnz
cmp
getsec
sahf
ret
shlb
or
decl
cwtl
insb
shll
in
sub
pop
and
xlat
push
imul
out
insb
loopne
repnz
mov
es
aaa
sub
loop
mov
jmp
loop
mov
pop
pop
cmpsb
js
verr
sub
stc
pop
mov
fs
in
sbb
jno
inc
scas
fdiv
inc
dec
pop
jp
adc
ss
mov
cwtl
clc
outsb
or
dec
push
inc
shl
adc
xchg
xor
lcall
jg
or
jne
incb
push
rclb
pop
mov
pusha
lock
add
jns
xchg
gs
mov
pop
je
adcb
shlb
push
sar
sbb
inc
inc
xchg
jl
ja
push
push
cmp
jg
mov
push
push
and
pop
add
dec
cmp
cmp
push
inc
mov
roll
mov
sbb
jb
jns
movsb
test
ljmp
mov
sbb
jl
loopne
mov
pop
loopne
mov
pop
incl
inc
jl
add
adc
or
jo
bound
jg
mov
sub
push
xchg
bound
icebp
sbb
sub
pushl
jne
xor
loopne
into
sub
mov
iret
enter
and
cwtl
sar
call
cmpl
icebp
xchg
jae
mov
push
inc
mov
jp
iret
fs
push
and
pop
jg
push
or
or
aad
add
lock
cld
stc
aaa
inc
adc
or
jae
mov
sub
mov
rclb
test
xchg
sbb
pop
sbb
xchg
push
jge
aas
dec
movsl
mov
orl
pop
stos
sub
adc
rolb
popf
dec
stos
xchg
fiadds
jge
or
push
stos
xchg
fimull
or
add
mov
fs
push
sbb
les
iret
push
fcomi
xchg
bound
xchg
xchg
adc
sarl
jns
rcll
mov
es
sub
push
in
je
jl
cmc
ret
jl
sbb
addl
xor
loope
aad
add
or
add
cmpsl
mov
mov
pusha
sbb
aaa
jg
sar
incl
mov
mov
out
in
push
aas
inc
hlt
cwtl
stos
cmp
cwtl
inc
mov
loop
push
out
out
test
cli
cmp
jg
faddl
push
mov
loope
sbb
push
push
mov
pushf
jbe
subl
mov
cmpsl
cmp
ret
xor
aam
cmpsb
mov
fiadds
cmp
xchg
enter
leave
hlt
int
cmp
leave
iret
stc
pop
subb
ja
xchg
and
mov
hlt
call
clc
cmp
push
cmpb
data16
gs
or
prefetcht1
push
push
and
hlt
push
addr16
lcall
je
push
mov
sbb
xchg
cmp
popa
push
orb
incl
xor
and
test
add
hlt
inc
sub
pop
mov
in
pop
cmc
xor
loopne
push
jno
cmpsb
dec
adc
les
rolb
movsb
scas
xchg
inc
mov
les
jl
scas
xor
push
xor
lock
push
inc
sarb
jno
xchg
adc
shlb
mov
jo
aaa
inc
mov
les
shr
add
fbld
sbb
jno
flds
js
mov
push
sub
scas
jmp
add
push
rorl
fisttps
out
xorb
add
ret
cwtl
xchg
stos
mov
fwait
call
fbld
inc
mov
add
mov
ficompl
add
rcrl
in
inc
push
repnz
orb
sti
pop
or
out
mov
in
stos
lock
sarl
sar
mov
mul
pop
and
lret
and
mov
fists
mov
or
out
mov
jmp
adc
adc
sbb
xor
add
rorl
into
roll
shlb
inc
pop
call
nop
and
dec
add
pop
in
dec
push
jmp
mov
adc
lock
mov
pop
pop
mov
rcrl
sarl
clc
add
mov
dec
movl
rcl
xchg
lock
pushf
inc
insl
int3
add
leave
mov
std
fbstp
push
shrb
cmp
lea
mov
add
or
decl
jle
and
iret
or
push
daa
xchg
push
enter
std
cmp
cmp
outsb
rorb
les
les
loopne
push
jl
mov
pop
pop
push
fs
cmp
ljmp
jno
add
adc
enter
inc
sbb
shlb
adc
sub
and
cld
aas
mov
or
div
pop
adc
bound
je
mov
inc
mov
mov
jae
scas
mov
aam
mov
aaa
jl
rcl
in
sar
scas
jbe
pop
jg
add
loope
dec
or
jo
pushf
inc
sub
scas
inc
mov
xor
stc
inc
cmpsb
cs
cwtl
push
add
fcoml
test
mov
ja
aam
inc
roll
sti
xor
mov
sub
inc
cmp
scas
cmpsl
ds
jg
outsb
aad
lock
out
ret
mov
dec
pushf
lcall
int3
cmp
xor
add
inc
push
push
push
jmp
in
mov
mov
mov
enter
leave
movsb
mov
shll
movntq
ja
test
rcrb
push
add
adc
fbstp
cmpsb
stos
inc
pop
jl
jl
jecxz
sub
xor
call
orl
lods
mov
pop
out
sbb
add
mov
sbbb
dec
cld
outsl
mov
add
cmp
das
or
and
aad
or
ds
xor
sub
jmp
jg
mov
add
test
sbb
jne
mov
jl
pusha
outsb
aaa
sbb
iret
jp
in
cli
sub
jecxz
loopne
jg
fisubs
pop
stos
inc
ror
dec
or
fwait
jb
jmp
fbstp
int
cmp
mov
decl
add
xchg
add
or
or
cmp
stos
and
xchg
or
push
mov
mov
xlat
dec
shll
pushf
test
dec
dec
inc
and
sub
daa
and
xchg
mov
outsl
cli
lcall
cmp
mov
mov
xchg
push
out
push
fdiv
push
dec
cwtl
roll
adc
test
mov
mov
incl
loopne
push
inc
aas
adc
pop
add
loope
xor
clc
incl
pop
mov
shrb
push
insl
movsb
sbb
out
cmpsb
movsb
mov
jg
outsl
sbb
cli
add
movsb
push
or
icebp
add
call
xor
jae
aas
add
mov
push
enter
sub
imul
inc
loope
xor
aam
dec
jg
push
push
test
ljmp
push
out
add
sub
push
loop
lock
loopne
cmp
xor
clc
mov
add
in
inc
mov
js
xchg
ljmp
push
hlt
or
shll
add
mov
movl
decl
add
add
insl
sahf
mov
iret
xchg
std
leave
xorb
bound
mov
mov
push
sbb
mov
cwtl
scas
mov
jecxz,pn
adc
sti
mov
push
pop
daa
lds
pop
loop
jb
hlt
add
sbb
daa
les
and
jg
jmp
add
outsb
xor
ja
outsl
xlat
mov
mov
xchg
xor
jo
or
ljmp
orb
std
push
jne
lret
and
dec
add
dec
ja
jg
pop
cltd
cmpsl
mov
pop
pop
push
pop
and
enter
ljmp
hlt
xlat
ja
and
stos
leave
push
sti
dec
insb
test
int3
xchg
xchg
fiadds
int
and
or
mov
imul
pop
icebp
sub
addr16
or
nop
clc
sbb
decl
call
push
sub
pushf
testl
fldenv
clc
ljmp
fcmovb
push
fwait
lods
jp
add
cmpsb
bound
or
dec
in
aas
adc
ret
out
xchg
jb
lds
js
sbb
mov
inc
jp
shrb
fwait
je
clc
jg
lods
lret
movsl
negl
es
lods
push
test
repnz
outsl
hlt
mov
stc
and
mov
sub
loopne
mov
add
out
mov
push
sbb
out
mov
mov
sar
pushl
aam
cwtl
sahf
pop
sub
add
es
add
call
sub
add
fcomip
ja
and
sahf
xor
sbb
adc
cld
mov
call
lahf
shl
cmpb
add
popa
gs
mov
xor
push
pop
cld
sbb
rorb
add
adc
jnp
int3
pusha
nop
add
ret
lock
push
sti
js
jle
daa
fldlg2
mov
jmp
inc
out
mov
xchg
and
jmp
and
fadds
mov
add
inc
ret
push
punpckldq
push
and
push
inc
cmp
in
cmpsl
incl
add
push
nop
dec
scas
mov
sbb
call
push
and
int
cltd
mov
shrb
je
jo
adcb
push
jle
les
jno
xchg
cmovno
cmp
addb
dec
sar
fildll
xor
fildll
andb
sbb
jae
mov
repz
mov
jp
sbb
shr
push
xor
add
jo
inc
add
lcall
aas
inc
or
cmp
and
lret
jns
in
xorl
cmpsb
fsubrs
test
inc
lods
or
in
inc
and
test
jg
push
cmp
xorb
add
fnstcw
push
add
lock
mov
cmp
punpckhbw
stos
mov
mov
mov
outsb
mov
les
rorb
xchg
into
lods
ljmp
dec
inc
cwtl
and
add
jle
popf
xchg
inc
and
icebp
negb
sbb
or
call
cs
push
dec
pushf
je
adc
sub
add
adc
mov
fisttpl
and
clc
mov
mov
scas
out
hlt
xchg
je
push
xlat
mov
lahf
inc
xchg
out
adcb
call
ljmp
into
mov
pop
shll
adc
mov
jmp
adc
loop
mov
loopne
xchg
sarb
xchg
lock
cmpsl
stc
jle
movsb
push
add
pushf
add
nop
jno
mov
int
arpl
loop
mov
outsl
out
outsl
sar
add
push
hlt
push
repnz
shlb
mov
or
filds
push
add
gs
fsubrl
mov
add
negb
jp
ljmp
loopne
cmp
scas
aaa
add
cmp
sub
pop
les
lahf
push
enter
mov
add
mov
lea
sbb
cmp
jnp
xor
stos
pushf
icebp
push
mov
xor
loope
insb
icebp
pushf
ja
ret
push
pop
add
out
mov
pop
lock
lcall
sbb
xor
rolb
lock
cmp
rolb
jge
mov
xchg
xchg
cmpsb
add
fisttps
pop
dec
lret
in
flds
lret
pop
mov
mov
xor
out
es
lcall
out
outsl
sbb
loop
sub
cmp
shll
inc
ss
push
mov
mulb
mov
push
and
std
mov
push
imul
fcmovbe
imul
add
gs
pop
sub
inc
int3
fdivr
jae
lret
mov
loope
fs
adc
add
aaa
hlt
mov
leave
hlt
jno
aaa
mov
xor
addb
push
push
stos
rclb
jnp
movsl
xor
xor
or
pop
push
or
pop
popf
inc
push
xchg
jecxz
faddp
adc
fs
popa
ficoms
outsl
push
jge
pop
and
fdivrs
jnp
outsl
shlb
mov
add
hlt
add
add
scas
add
jg
out
mov
xor
mov
mov
clc
push
imulb
xchg
push
lods
mov
psrld
mov
movsb
mov
inc
and
inc
enter
inc
fisubl
lods
nop
adc
mov
xchg
adc
dec
inc
and
cwtl
dec
clc
outsl
xchg
dec
ret
ret
out
sbb
pop
cwtl
insl
add
dec
xor
mov
and
fistl
stos
mov
pop
xor
pusha
xchg
leave
fcoms
in
push
xor
mov
pop
jp
xchg
sbb
add
iret
out
addl
jle
js
inc
or
add
inc
cli
lock
call
test
shrb
adc
mov
loope
adc
xor
pop
stos
mov
jle
pop
aas
fstpl
xorl
push
test
adc
add
push
inc
fldl
andl
cmp
pop
gs
add
pop
push
mov
das
mov
popf
test
jg
xorb
addb
cmp
xchg
jb
clc
or
jg
arpl
pusha
mov
inc
je
push
call
adc
lret
cltd
pop
inc
sbb
adc
popf
mov
imul
and
mov
cmp
gs
sub
or
fsubrl
mov
pop
xchg
cmp
mov
popf
mov
lret
andb
test
add
and
loopne
push
or
call
cmp
inc
cli
movsl
hlt
add
pop
jmp
loop
test
push
sub
mov
push
out
test
xchg
or
and
pushl
arpl
pop
dec
xchg
mov
adc
add
inc
ret
cmpsb
iret
jbe
fists
cmp
hlt
jg
jbe
rcll
pop
pop
dec
and
lcall
je
xor
bnd
sbb
sbb
mov
data16
adc
pop
ret
outsl
pop
xor
mov
or
jae,pn
cmpsl
mov
bound
mov
outsl
and
ljmp
push
lods
hlt
je
sub
aas
leave
or
aam
mov
ja
cmc
push
daa
mov
imul
or
pusha
mov
or
mov
sub
loope
clc
xor
sub
jmp
leave
js
outsb
insl
push
mov
loopne,pt
xor
pop
cmp
mulb
mov
pop
adc
ja
dec
lods
out
filds
push
rcl
add
jmp
xor
movsl
rclb
pushf
lock
jmp
push
sbb
push
test
xchg
movsl
mov
mov
cmpsb
sar
out
fstl
jg
pop
enter
jl
ficompl
mov
loop
or
or
mov
add
outsl
inc
jp
idivb
stos
cmp
mov
ss
pmaddwd
pop
mov
stos
je
and
cmp
mov
jns
or
dec
lea
adc
cmpsl
test
pusha
inc
add
push
cld
or
icebp
add
mov
inc
scas
sub
add
xchg
out
adc
es
and
jl
enter
adc
ret
adc
pusha
sbb
or
xor
das
dec
lahf
in
insb
out
icebp
lock
push
xlat
lea
mov
lods
mov
or
jns
aam
call
jnp
in
loope
pushf
jecxz
mov
xor
pop
cmp
add
xor
add
repz
mov
les
loope
aaa
mov
test
sbb
loopne
cmpb
and
decb
test
or
int
push
pop
jp
shrl
inc
push
adc
add
pop
adc
pop
or
lss
xchg
rcl
xor
clc
mov
mov
test
inc
cmp
test
jo
cmp
jmp
call
shl
testl
xorl
popl
jbe
mov
jecxz
outsb
hlt
xor
fiadds
mov
adc
inc
in
mov
push
decb
mov
js
inc
out
fdivrs
arpl
lock
sub
bound
mov
js
outsl
loop
in
scas
sbb
adc
call
data16
lahf
faddl
roll
cmp
jmp
add
cmp
mov
cmp
push
mov
inc
stc
or
xor
dec
xor
push
sbb
lcall
iret
roll
mov
cmp
dec
jno
xchg
ret
cmc
pop
mov
andb
pushf
arpl
adc
push
or
mov
xorb
ss
xchg
mov
stos
mov
pop
stos
and
mov
arpl
add
pop
sub
clc
sub
cmc
inc
lock
hlt
repnz
cmp
scas
adc
dec
sbb
pop
adc
clc
fisubs
push
mov
loopne
add
scas
add
push
aam
icebp
cmc
adc
push
rol
push
leave
popf
push
fld1
in
jg
aad
sbb
arpl
pop
push
and
repz
incb
pop
mov
push
mov
mov
mov
jg
jo
int
or
mov
add
test
aam
js
stos
test
push
call
enter
mov
ljmp
add
lods
in
stos
adc
loop
movb
or
or
xor
pop
lock
jno
mov
std
lret
push
mov
rcr
cwtl
mov
pushf
and
xlat
or
cli
stos
andb
pop
popf
enter
or
cmpsb
ljmp
sbb
jnp
and
inc
daa
mulb
les
arpl
lret
popf
ja
jl
outsl
mov
and
std
iret
roll
xor
mov
outsl
inc
xchg
jae
js
repnz
inc
mov
dec
ja
push
jbe
push
dec
inc
daa
clc
xor
stos
cmp
inc
fmull
mov
js
pop
sbb
lcall
leave
sahf
push
in
sbb
test
fcomip
leave
cmp
add
add
jg
clc
ljmp
sub
in
xchg
mov
jno
sbb
nop
adc
mov
leave
je
test
das
mov
or
mov
cmp
jle
push
push
pop
hlt
ljmp
call
add
adc
ljmp
fsubs
inc
and
inc
jecxz
add
pop
add
push
pop
js
clc
push
loop
sbb
adc
xor
mov
mov
test
xchg
or
das
or
xor
sbb
mov
push
cmp
mov
jae
pushl
rolb
int3
mov
repz
jno
movsb
sbb
lcall
dec
out
mov
or
and
xchg
adc
xchg
push
pop
test
adc
dec
mov
ret
clc
loope
inc
mov
and
inc
inc
xchg
jge
dec
or
roll
pop
fcoml
adc
rcll
mov
cli
popf
mov
add
loope
sub
mov
lea
inc
mov
out
jo
and
add
add
pop
icebp
aas
and
gs
int3
mov
xchg
mov
imul
lock
popa
jecxz
inc
inc
inc
lock
cmp
lods
hlt
sub
sbb
push
shrl
pop
fstps
xor
cwtl
lods
push
jmp
add
mov
cli
jg
cwtl
jge
enter
sbb
sti
test
rorb
pop
in
out
cmp
das
adc
xchg
subl
sbb
cmpsl
repnz
pop
loopne
inc
push
add
mov
std
mov
xchg
push
fs
xor
fs
add
push
jnp
in
ret
imul
fstpl
mov
movsl
je
push
pop
mov
mov
lret
cmp
stos
decb
loopne
out
mov
sub
push
jbe
pop
into
adc
clc
sub
adc
cld
cld
push
push
push
add
xchg
dec
xor
add
pop
cmc
mov
pop
shr
inc
scas
shr
loop
add
das
xor
outsl
je
xchg
inc
push
mov
add
and
mov
or
orb
xchg
add
mov
xor
xchg
cmpsb
inc
push
out
insl
and
ja
ret
sbb
adc
imul
push
mov
sti
dec
inc
inc
mov
rcll
cmp
into
add
and
mov
cmpsb
aad
loope
je
int
pop
and
into
out
test
out
jo
mov
cs
mov
loope
aaa
jp
push
decl
data16
mov
in
or
push
in
loopne
stc
shrl
inc
fwait
sub
push
outsb
ljmp
push
xor
cs
sub
dec
aad
shlb
insl
lcall
or
lock
cmp
adc
or
add
adc
or
mov
iret
sbb
outsl
jp
fmull
sub
or
flds
add
mov
mov
imulb
inc
adc
nop
sti
sub
inc
je
call
cmpsl
test
or
in
inc
dec
psrld
dec
in
andb
fmulp
xchg
add
add
pop
jg
inc
rolb
inc
jp
ficomps
sti
aaa
dec
incl
in
jne
xchg
add
rcll
hlt
add
push
jbe
adc
or
and
push
sub
pusha
dec
jbe
push
pusha
xor
clc
or
jg
add
dec
inc
sbb
enter
sbb
incl
dec
loopne
pop
shll
scas
mov
dec
add
xchg
fnstsw
fbld
lds
inc
dec
dec
js
call
mov
ret
inc
xchg
mov
negl
or
aad
lods
ret
xchg
jle
in
mov
or
dec
fwait
dec
cmp
push
out
inc
push
mov
popf
jge
lock
mov
mov
jno
mov
jmp
push
inc
push
rclb
inc
xor
pop
add
dec
adc
pusha
or
loope
jmp
mull
jmp
out
cmp
mov
in
push
movb
call
shlb
mov
inc
add
cmpsl
outsb
add
adc
sbb
inc
pop
or
outsb
ljmp
push
es
lock
lock
push
and
mov
testb
cmp
bound
jg
je
xchg
lock
lcall
mov
and
aas
pop
mov
dec
cmp
je
jno
sub
call
jmp
add
cmp
test
add
fistpll
cmp
int3
mov
out
lahf
mov
sahf
out
cld
in
ss
inc
mov
push
das
xlat
movsl
xor
jne
add
loope
or
in
leave
ja
push
lds
mov
cmp
daa
shl
mov
or
dec
lcall
shr
outsb
dec
cmp
fwait
insl
dec
or
jo
pop
push
push
lret
jo
xchg
jp
cltd
jl
pop
aas
inc
lods
ror
sarl
es
icebp
enter
xchg
push
cltd
enter
sub
lret
pop
inc
ja
stos
daa
inc
div
push
adc
clc
data16
mov
add
out
es
rorl
mov
xor
movb
xchg
sbb
mov
jl
popa
vmptrld
pop
loopne
shrb
js
push
incb
mov
mov
pop
jo
jp
cs
mov
aaa
dec
mov
loop
add
inc
mov
and
jecxz,pn
pop
sbb
mov
push
bound
xlat
popa
pop
inc
jg
sbb
and
lahf
sbb
cmp
aas
inc
ret
sub
lea
xchg
xchg
pop
mov
inc
mov
pop
adc
push
jmp
and
jg
jecxz
fcoms
dec
das
decb
shlb
add
ljmp
push
mov
aam
xchg
in
test
call
insl
xchg
rolb
mov
pop
xchg
sbb
push
in
push
insb
aas
mov
inc
ljmp
add
loop
sub
cwtl
in
das
cmp
outsl
dec
test
ljmp
pop
or
nop
dec
rolb
mov
sbb
jl
mov
add
add
imul
cmp
lods
add
test
stos
jp
adc
mov
jecxz
sbb
inc
out
aam
add
mov
sbb
in
xchg
pop
out
mov
push
mov
repnz
add
inc
hlt
sbb
and
jecxz
movq
xlat
cmp
cmp
sub
or
pop
cltd
mov
cmp
lock
cmp
jnp
adc
sub
fwait
mov
jmp
shl
andb
add
or
cwtl
jb
sub
icebp
mull
das
sub
sbb
mov
add
cmpl
dec
movsb
shll
loope
mov
pop
mov
mov
clc
xchg
in
mov
mov
add
pop
sub
shll
add
loopne
decb
mov
xorl
pop
call
push
inc
inc
cmc
push
or
and
jle
or
push
sbb
mov
out
jl
and
sub
cli
inc
fistpll
or
or
or
jg
mov
inc
add
sbb
mov
push
pop
or
clc
pusha
sbbb
outsl
dec
add
in
cltd
aas
dec
clc
inc
jecxz
or
cmpl
dec
outsl
movsb
iret
inc
jg
pop
mov
js
jle
xlat
and
in
sbb
xchg
nop
jb
mov
sub
or
test
or
popf
mov
loop
inc
cmpsb
ds
cwtl
gs
test
inc
shl
std
loope
hlt
add
sub
int3
sbb
aaa
fdivp
outsl
clc
ds
lcall
sar
icebp
mov
jbe
jg
fwait
ret
mov
dec
inc
out
sbb
push
in
js
cmpsb
dec
fnstenv
inc
fwait
out
repz
mov
adcb
cmp
test
ss
faddl
lcall
push
clc
pop
mov
sub
adc
inc
fisubl
ffree
push
push
sbb
lea
test
call
mov
cmc
sarb
icebp
inc
outsl
mov
cwtl
repz
fadd
adc
mov
nop
lock
mov
sbb
or
inc
std
cmpsb
mov
test
clc
mov
rcll
jo
inc
inc
sub
and
add
mov
aad
pop
mov
hlt
aaa
xor
pop
sbb
pop
out
int
mov
jle
or
pop
push
movsb
decl
int
xor
fs
addr16
clc
push
add
lcall
aas
out
ret
rorb
push
dec
add
testl
xchg
jp
jne
jns
xor
call
mov
jo
mov
and
ret
andb
dec
loopne
in
inc
lods
cld
mov
cli
adc
into
xor
test
mov
adc
cmp
loope
adc
jb
addr16
xor
loope
pop
clc
or
cmp
xor
cmp
push
test
jmp
lcall
push
jo
xor
hlt
jo
imul
icebp
push
cld
push
and
inc
xor
cmp
jmp
addr16
cld
int
and
pushf
sub
pop
adcb
movsl
or
cmp
push
xor
mov
adc
pop
fadd
lds
std
jns
bound
loopne
mov
cmp
in
dec
push
xchg
xor
andl
push
mov
push
push
pop
lahf
int3
sub
pop
ret
push
outsl
inc
pushf
push
mov
cmp
mov
enter
cmpsl
add
sbb
das
incb
loopne
dec
adc
xor
subl
out
test
and
add
push
popa
and
adc
in
sub
push
fs
pop
add
hlt
add
sbb
dec
cmp
xchg
mov
sbb
aas
loopne
sti
jg
ret
das
mov
mov
mov
mov
xchg
mov
out
mov
push
jp
cmp
xchg
out
sahf
mov
mov
dec
push
mov
outsb
shr
dec
daa
std
jg
add
popa
push
das
push
xor
into
add
add
loope
cmpl
mov
and
add
mov
cmpsb
push
jne
sbb
addr16
roll
std
sbb
and
jg
sub
in
and
add
stc
decb
xchg
mull
nop
orl
test
std
mov
cld
mov
xor
and
xor
mov
movsl
mov
or
adc
pop
mov
fimull
xor
test
add
xlat
inc
es
cmp
fdivrp
inc
adc
push
cld
stos
sub
leave
aas
inc
or
mov
inc
mov
adc
lods
outsb
jno
add
add
jg
mov
add
das
popf
cmp
or
pop
xchg
xchg
shrb
mov
adc
fucomip
ja
pop
les
adc
dec
xor
mov
mov
push
outsb
aam
jno
add
mov
cmp
pop
or
sarl
rcrb
push
js
decl
dec
stos
jbe
pop
fs
mov
fwait
adc
stos
sub
add
arpl
xchg
mov
fisttpl
sbb
mov
sbb
xlat
dec
fcmovb
or
dec
or
and
and
jns
fildll
cmpsb
ja
and
push
loop
adc
js
andl
pushl
add
sbb
xchg
add
test
pusha
imul
or
jmp
mov
add
xor
popf
call
cmc
jg
icebp
add
mov
movsl
adc
loope
in
paddd
mov
loopne
and
sbb
or
jno
pop
mov
or
sub
sbb
mov
outsl
adc
idiv
incl
rol
pusha
or
inc
test
movsl
add
das
push
or
xor
pop
js
push
jl
dec
inc
ss
cmp
or
sub
cmp
adc
rcl
jl
xor
pop
ss
test
cli
xor
test
ljmp
jg
jle
push
addb
or
test
push
lcall
cli
or
lods
add
add
int
in
je
push
pusha
dec
ret
ret
popf
mov
xor
add
cs
mov
push
aaa
add
jg
sbb
in
std
sub
mov
int3
jno
fdivr
lcall
mov
push
dec
sub
call
insl
mov
dec
xor
sbbb
pop
or
es
cmp
mov
bound
push
or
inc
adc
mov
push
xor
jp
or
mov
xor
ffreep
xor
imul
repz
add
jle
mov
xchg
outsb
addr16
cmp
and
outsl
incl
pop
or
ret
push
repz
xor
adc
fidivrs
xchg
push
inc
ss
popa
pop
enter
push
cmp
fisubrl
add
jo
push
jmp
call
inc
xlat
lcall
test
add
arpl
cmp
pop
add
push
pushf
cltd
pop
fdivrl
fwait
add
xchg
xor
repz
arpl
push
xor
or
aaa
push
shl
push
inc
cld
mov
fsts
or
lret
xor
mov
dec
loope
push
jne
sbb
shr
jle
xchg
in
or
xchg
gs
sbb
addl
or
cmp
add
loopne
rclb
ss
mov
aam
adc
ret
dec
fcomip
int
or
adc
arpl
in
jl
aas
add
aaa
push
and
jge
inc
scas
call
inc
icebp
xor
sub
inc
jle
negl
mov
add
loopne
enter
mov
xchg
jp
adc
push
push
add
and
inc
rclb
mov
add
pop
mov
sahf
out
mov
xor
jl
les
inc
inc
enter
jecxz
push
fcoml
lea
sub
add
shrl
push
adcl
outsl
adc
mov
push
mov
push
cli
fs
ds
insl
or
test
hlt
adcb
mov
xchg
outsb
aaa
divb
sbbl
std
adc
dec
jmp
push
loope
mulb
mov
les
mov
add
std
mov
rolb
push
jg
roll
mov
imul
adc
fcomip
pop
mov
lahf
push
mov
jl
mov
inc
or
pop
push
dec
jb
mov
aaa
aam
mov
inc
push
sbb
into
ret
xchg
les
inc
pop
fadds
push
jae
stos
ret
push
or
add
pusha
subl
pop
out
pop
jmp
sbb
in
in
subb
sbb
inc
dec
enter
cmp
js
fnstcw
test
lcall
xchg
pop
cmp
and
pop
inc
mov
dec
into
jno
std
xchg
or
adc
mov
dec
in
dec
dec
hlt
sbb
cmpsl
lds
add
cld
adc
lea
and
sbb
mov
call
xchg
mov
lret
add
lea
xor
inc
xchg
nop
outsl
cmc
rorb
adc
movsb
call
add
in
test
mov
cmp
fwait
outsl
les
movsl
aam
xchg
imul
mov
cltd
cli
mov
cmp
cmp
or
xchg
or
fcomps
push
pop
dec
push
push
lock
stc
aaa
adc
int3
add
push
push
lea
loope
ljmp
ret
fcmovbe
cli
mov
pop
mov
clc
pop
sbb
sti
dec
add
mov
inc
popf
add
push
cld
sbb
add
pusha
pop
out
xchg
bound
insl
outsl
or
pop
cwtl
int
xor
inc
xchg
or
stos
aas
xchg
or
cs
clc
mov
adc
cmp
jp
outsb
cmp
lret
aaa
fsubr
cs
xchg
or
add
xchg
js
push
push
testb
add
rcrb
mov
push
sub
pusha
push
in
or
add
mov
and
loop
loopne
mov
jb
mov
in
push
mov
out
clc
fistl
add
jmp
int3
xchg
pushf
cmpsb
xchg
mov
add
aaa
jmp
loop
hlt
xor
lret
lds
ss
mov
js
std
adc
mov
inc
call
idiv
fisttpl
jne
fxch
iret
push
xor
pop
ret
sub
mov
adcb
mov
je
loopne
inc
mov
sub
stos
or
lock
stc
cli
outsb
lock
cmp
inc
jle
sub
std
jg
add
popa
shr
mov
or
insb
ret
cmp
test
xchg
pop
cwtl
push
xchg
lret
loope
add
cmpb
popa
adc
or
mov
and
mov
incl
sti
repz
and
jmp
movsl
pushl
pop
aam
or
mov
cmp
sub
sahf
cmp
std
mov
mov
xchg
adc
stos
mov
fimuls
jecxz
or
mov
and
xchg
clc
aaa
in
cli
loop
fdiv
fstpt
movsb
fcompl
cmp
sub
pop
out
in
aaa
mov
sar
xor
pop
mov
or
xchg
cltd
test
sub
cli
or
lcall
xor
mov
adc
mov
sub
sbb
idivb
xchg
loopne
dec
inc
mov
mov
xor
sbb
fdivrs
and
adcb
dec
inc
fistpll
repnz
lret
jle
mov
fildl
mov
pop
xchg
mov
xchg
fsubs
push
cld
aas
int3
jmp
out
sbb
int
sub
mov
incl
fsub
das
lahf
xor
and
add
aas
adc
pushf
mov
or
pop
push
xorb
inc
sbb
push
aaa
ret
sbbb
pop
and
imul
push
incl
and
das
cmp
out
push
es
or
call
cmp
out
std
sub
mov
cmp
xor
dec
pop
cmp
je
inc
movsl
nop
incl
subb
add
adc
scas
add
xor
js
sbb
push
pop
cmp
add
lods
ficompl
jp
addl
xchg
sbb
outsl
clc
ja
jbe
loop
cmpb
add
sub
fbstp
icebp
sbb
cwtl
test
movsb
pop
mov
hlt
lds
les
mov
addr16
popa
push
or
dec
inc
nop
test
outsl
idivb
hlt
lea
outsb
add
aad
lock
add
lock
incl
sbb
or
fstpt
push
inc
testl
rclb
lods
lret
add
aaa
xchg
adc
xor
xchg
jns
pop
cmc
pop
inc
dec
jo
stos
push
add
ljmp
shrl
in
popf
xor
js
add
push
pminsw
fsub
shll
dec
push
popf
test
push
pop
or
out
ss
jbe
nop
stos
inc
push
sti
pop
pushl
mov
insl
sub
push
std
sbb
jg
sub
push
mov
mov
outsb
cli
mov
or
inc
inc
jno
add
pop
adcb
out
daa
pop
inc
adc
add
and
mov
pop
dec
mov
pop
xchg
cmp
lock
fs
jns
pop
in
ljmp
or
stos
fdivrl
push
enter
movb
pop
in
cmpsl
mov
repz
mov
pop
mov
bound
or
mov
lcall
jmp
mov
pushl
mov
sub
scas
xor
inc
mov
pop
or
ret
mov
mov
or
inc
sbb
aas
lods
loopne
out
inc
lahf
les
bound
stos
popf
mov
push
sti
cltd
and
and
filds
push
rcrl
addl
stos
or
jg
sbb
sbb
inc
add
inc
xor
cmpb
and
jae
dec
out
or
cmc
es
mov
or
mov
ret
sbb
pause
xor
lret
ds
mov
sbb
loopne
pop
sbb
sub
aas
test
xchg
or
xchg
sbb
xchg
xchg
scas
ja
jns
ds
push
jne
testb
nop
mov
adc
push
and
sub
jnp
rclb
mov
call
mov
or
mov
inc
into
jnp
lahf
cltd
das
mov
sbb
mov
xor
mov
cmc
enter
xor
int3
ficoms
rcrb
popa
push
dec
inc
in
jg
scas
clc
dec
pop
fisttpll
dec
arpl
sub
cmp
loope
cmp
mov
test
pop
leave
icebp
outsl
test
cmpsl
fmulp
gs
sub
scas
push
mov
adc
icebp
cmp
xchg
call
mov
pop
pop
cld
mov
ljmp
mov
add
inc
jl
mov
fisubs
dec
mov
mov
pop
cld
push
jp
xor
jg
je
pusha
xchg
pushf
push
mov
mov
insb
mov
lock
push
mov
decl
mov
cmc
push
lea
xchg
shr
sbb
push
loopne
mov
divl
jnp
aas
or
sbb
shll
jmp
xor
icebp
or
sbb
rcrb
call
inc
ret
add
cmpsb
push
adc
in
xor
dec
cli
loopne
js
jns
sahf
dec
adcl
mov
xor
movsl
push
jle
aaa
xor
mov
jnp
insl
xchg
in
dec
js
and
rolb
cmp
lret
add
mov
cs
fisubrl
imul
push
mov
fcomps
add
jecxz
les
push
leave
mov
push
sbb
pop
push
dec
test
fiaddl
ret
xor
test
ret
nop
popa
jge
mov
and
enter
xchg
mov
push
rol
dec
mov
in
pop
inc
pop
mov
mov
sub
testl
or
add
int3
les
cld
mov
cmp
out
cmp
decl
and
mul
push
mov
cwtl
test
sub
das
pop
cltd
pop
testb
jmp
stos
fdecstp
xchg
sub
cmp
ljmp
outsl
xchg
shll
stos
cmp
jecxz
ja
lods
lock
pop
jle
test
jmp
sub
lods
lds
popa
adc
cmp
cmp
decl
imul
mov
and
jl
test
mov
lcall
cmp
cmp
xchg
inc
gs
jne
sub
imul
out
js
incl
push
test
fs
outsb
sub
mov
sub
lods
stos
push
pusha
or
push
dec
das
fdivp
and
ss
inc
add
jmp
into
push
sti
add
jae
jp
repnz
lcall
pop
icebp
push
call
cs
mov
mov
sbb
pusha
pop
jnp
jne
or
and
test
outsl
xor
roll
fiadds
pop
mov
popf
je
jmp
stos
ss
addr16
cwtl
je
dec
adc
mov
daa
xor
adc
insl
ds
mov
pop
ljmp
push
push
rcll
adc
cmpsb
jg
jmp
sbb
adc
sarb
loope
daa
mov
xor
jmp
sub
mov
xlat
mov
dec
dec
xor
scas
fcmovne
cwtl
js
decb
or
dec
lods
jg
xchg
fs
ljmp
jge
xor
mov
pushf
adc
in
sbb
jne
call
fs
jo
xor
sub
shll
and
div
and
cwtl
fsubl
push
jns
mov
hlt
mov
stc
sbb
sub
pusha
shl
call
insl
jae
push
insl
fmuls
test
pop
popf
inc
insl
cld
lea
lea
addr16
mov
pop
nop
jecxz
stos
jo
mov
push
xor
movsl
mov
mov
jae
jns
outsl
adc
pop
sar
out
mov
popa
jge
call
insb
movsl
dec
xor
inc
mov
cwtl
pop
les
cmpsb
lret
dec
dec
adc
test
adc
fcmovnb
mov
inc
push
pop
xchg
in
sbb
add
jno,pt
push
sub
or
dec
aaa
pushl
adc
stc
add
mov
out
and
cmp
mov
mov
jg
lock
jmp
aad
add
orb
orb
inc
aad
inc
cmp
xor
aaa
inc
jl
mov
orb
push
jp
pushl
jle
mov
add
mov
push
pop
xchg
mov
out
xchg
decl
test
pop
cli
adc
pop
dec
loope
in
cwtl
mov
fcompl
jo
ret
sahf
adc
decl
loopne
test
fsts
push
lret
pop
iret
int3
dec
insl
in
ljmp
mov
adc
xor
xor
shr
cmp
bound
dec
or
xlat
sbb
jnp
jle
aaa
icebp
mov
js
sti
mov
sbb
xchg
or
lods
into
stos
and
sbb
mov
mov
aad
cmp
cltd
jle
push
push
in
scas
xchg
sub
stos
xchg
shlb
clc
loopew
aad
incl
push
das
mov
add
insb
es
and
test
jg
jb
cmc
loope
cmp
clc
pop
mov
cmp
xchg
jg
call
sar
add
in
shrb
cmpsb
or
inc
sub
lcall
mov
pop
shr
sub
dec
mov
rcl
push
xor
cmpsl
cld
ljmp
mov
int3
in
xchg
xchg
mov
jp
cmp
cmp
jb
aaa
jno
decl
add
outsl
rcll
push
je
push
xorb
imul
ds
mov
inc
jnp
push
cmp
dec
add
jno
jb
lods
push
cmp
add
mov
xor
mov
clc
ret
adc
rcr
je
icebp
pop
inc
lcall
int
or
incl
xchg
mov
or
scas
iret
mov
and
xor
mov
jbe
inc
add
pushl
xchg
call
sub
and
sub
adc
nop
mov
jg
fnsave
mov
cmpsb
inc
or
inc
push
inc
pop
test
fsubr
sbb
pushl
jo
imul
leave
push
cltd
jge
push
xchg
repz
push
sub
lock
push
rcl
push
insl
dec
rcrl
ret
pop
lock
push
adc
mov
push
out
clc
push
movb
mov
dec
scas
xchg
xchg
dec
xchg
pushl
repnz
dec
and
cmp
push
xor
lret
pop
scas
ret
and
je
incl
xchg
mov
leave
rclb
sub
jne
negl
add
xchg
cmp
push
xchg
jecxz
cmp
ljmp
cli
in
lcall
cmpsl
int
mov
lahf
stc
dec
xchg
jmp
test
and
lret
xor
mov
jo
rolb
add
push
pop
xchg
pusha
pusha
fbstp
fcoms
mov
decl
dec
xor
jle
jp
outsl
je
aad
aam
adc
xchg
icebp
pop
and
sbb
jae
jmp
mov
iret
sub
pop
test
xor
cmp
add
mov
je
xor
mov
pushl
cmc
xor
dec
push
and
arpl
repnz
mov
and
test
jecxz
adcb
dec
cmpsl
loopne
add
lods
push
pop
push
test
mov
sub
loop
or
scas
adc
mov
into
sarb
or
mov
pop
cmpsl
xchg
mov
mov
repnz
aad
xorb
dec
outsl
gs
inc
cmp
fistps
mov
mov
lcall
je
mov
shll
xchg
in
cmp
fnstsw
push
arpl
ds
xor
pop
popa
inc
and
hlt
shlb
enter
sub
push
xlat
sub
cmp
and
cld
ljmp
or
jmp
dec
cmpsl
iret
dec
mov
mov
aad
decl
stc
fldenv
and
sub
or
dec
xor
sbb
das
jp
mov
cmpb
mov
std
cmp
adc
es
ja
mov
outsb
pop
or
cmp
sub
xor
enter
loopne
ljmp
fiadds
sbb
cld
inc
bswap
loope
jge
mov
inc
mov
sbb
cs
leave
push
inc
and
ljmp
cmp
fldenv
sbb
jle
sar
jbe
add
pop
std
pushl
enter
mov
add
lret
sub
addr16
mov
fwait
ja
jmp
sar
cs
dec
imul
loope
out
mov
dec
cmpl
outsl
mov
push
cmc
push
jns
test
iret
fisttpll
scas
ret
xlat
gs
xor
xchg
int
aad
inc
inc
jmp
jg
pushl
dec
mov
lea
push
push
scas
pop
inc
xchg
push
sub
xchg
sbb
ficoms
jbe
cmp
and
mov
push
lret
jne
or
jle
jmp
pop
cmp
sbb
lods
call
aaa
or
jmp
repnz
sub
js
dec
mov
test
fwait
add
in
test
dec
sarl
decl
fwait
pop
pop
xchg
xor
adc
jb
push
mov
xlat
inc
fdivl
cmp
imul
pop
lea
incl
cmp
repnz
push
xor
jne
in
sbb
sbb
xor
rolb
adc
inc
mov
sbb
decl
or
or
das
pop
sub
nop
add
xor
fidivrs
incl
mov
adc
pop
stc
out
fstpl
dec
loopne
cmpb
js
ficoml
loope
incl
mov
insb
mov
inc
xchg
ss
sbbl
scas
pushf
popf
mov
loope
pushw
xor
xor
add
sbb
ja
mov
mov
mov
mov
push
test
xchg
cwtl
pop
outsl
pushf
fsub
movsl
out
icebp
jp
sub
mov
xchg
dec
push
xchg
mov
mov
cli
jmp
xchg
dec
jl
imul
dec
sbb
sbb
int3
adcb
in
pushl
mov
je
xchg
lret
addr16
cmpsb
call
pop
idivb
dec
add
lret
push
addr16
incl
lock
push
rorl
dec
adc
inc
cmp
ljmp
mov
dec
inc
push
pop
jb
inc
outsl
lea
pop
lods
mov
clc
iret
dec
scas
ljmp
add
adcl
mov
and
and
dec
lea
pushl
jb
loopne
out
pop
sahf
lods
lahf
rcll
int
fldl
mov
dec
pop
pop
or
pop
lret
cli
jmp
jne
lcall
or
xor
cmc
enter
xchg
sub
adc
ljmp
sahf
push
insl
push
std
inc
stos
sbb
and
data16
mov
pushl
imul
sbb
sbb
and
cmpsb
mov
test
das
loope
ret
jmp
mov
mov
filds
adc
sar
add
jmp
aad
push
jmp
add
rcrb
push
mov
push
mov
aad
mov
mov
lds
pop
pop
call
repz
mov
mov
decl
inc
pop
sub
mov
mov
sahf
testl
pop
std
test
cs
mov
inc
push
out
ror
fs
mov
pusha
push
jl
jl
out
and
out
push
repz
sbb
adc
lcall
fstpl
cltd
nop
jb
ljmp
repz
imul
xchg
aad
les
jo
rol
out
jg
decl
pop
mov
mov
xchg
xchg
mov
pushl
cld
mov
out
in
sub
dec
cmpsb
xor
mov
roll
lret
gs
test
xchg
xor
ret
push
sbb
push
adc
jae
mov
orl
inc
nop
loopne
incl
and
lahf
stos
outsb
adc
bnd
ret
xor
sbb
dec
push
lea
cmpsl
fistpll
pushl
sub
popf
cmpsl
mov
mov
jno
fisubrs
arpl
sub
outsl
dec
mov
fisubs
jl
lods
push
sti
out
jecxz
xchg
nop
mov
pop
sub
dec
sub
in
add
inc
mov
add
fs
mov
jle
pushl
cld
mov
js
dec
test
stos
and
adc
int
fwait
inc
testl
mov
push
pop
scas
subb
aam
dec
data16
decl
mov
scas
jne
out
daa
test
shrl
stos
movsl
rcr
icebp
incl
inc
sbb
shl
into
add
ffreep
jo
add
stos
call
xchg
xor
inc
mov
cmp
xchg
test
mov
jns
pop
cmp
hlt
decl
repz
mov
mov
ret
or
in
cmc
sub
push
ret
cmp
cmpsl
add
bound
jl
pop
pop
loopne
cmc
or
fildl
jbe
mov
mov
das
jmp
mov
incl
mov
repnz
push
and
mov
lcall
aad
push
mov
nop
aaa
stos
fsubl
xor
xor
daa
dec
pop
jmp
add
push
jmp
pusha
dec
xor
in
ret
subb
fadds
adc
xor
jb
add
sub
inc
clc
aas
aas
ja
push
sbb
sub
iret
sub
decl
test
fld
cmpsl
insb
and
mov
mov
push
push
inc
je
imul
incl
pop
mov
mov
lods
out
dec
xchg
insl
dec
push
addr16
jl
jg
inc
mov
cmc
mov
test
xor
lods
xlat
stc
inc
sti
ljmp
ret
add
add
sbb
fadd
les
repz
or
mov
out
pop
mov
and
dec
jns
mov
mov
andl
mov
adc
fisubs
dec
or
mov
std
push
adc
loop
dec
push
sbb
xchg
fisubl
lcall
idivl
push
int
xchg
xor
or
and
out
shll
lods
insb
sub
mov
fldt
int3
repnz
xor
and
cltd
xchg
mov
cmp
call
rolb
call
dec
pop
lret
inc
or
repz
dec
imul
push
movsb
scas
imul
xor
cmp
cmc
cmpsb
test
xor
jmp
dec
lds
adc
loope
ds
xchg
cld
cld
pop
dec
or
ljmp
fcmovnb
jmp
cmp
and
jecxz
shlb
movsl
mov
xchg
js
mov
clc
ljmp
xchg
into
push
loope
popf
stos
movsl
push
popf
outsl
add
jl
shrb
cmp
or
mov
cmp
scas
fsubrl
into
dec
icebp
movsb
add
es
sbb
pop
pushl
sub
pop
stos
dec
inc
push
mov
cmp
out
enter
push
fs
pushl
adc
cmp
and
xor
mov
into
mov
lret
sbb
test
sbb
sub
mov
movsb
insl
fs
test
mov
ljmp
cmp
sbb
pop
inc
mov
lock
push
dec
in
and
cmp
sahf
xchg
sub
jecxz
mov
lret
mov
cmp
or
mov
stos
lods
push
jge
flds
out
std
incl
shlb
les
loope
movsl
mov
or
mov
or
outsb
cmc
sbb
jmp
sahf
xchg
jg
jno
pop
mov
xchg
mov
fcmovb
sbb
outsl
in
rorl
lcall
add
into
mov
and
stc
cmp
out
jno
bound
lret
incl
lea
dec
push
enter
xchg
mov
dec
push
fstps
xchg
dec
or
decl
mov
mov
aam
mov
out
outsl
mov
xor
test
pusha
movsb
mov
sbbb
inc
xor
mov
in
mov
loopne
das
clc
ljmp
jo
sti
popa
sbb
sub
outsb
pop
sbb
sbb
xchg
or
loop
pop
roll
xor
xchg
jg
push
cmc
xchg
dec
mov
pushl
stos
mov
inc
mov
jbe
fstpl
and
mov
dec
push
iret
rcrl
lods
dec
cmp
ja
daa
decl
in
or
xor
out
call
pop
add
cs
cmp
jg
and
mov
jmp
sti
and
es
fs
lods
test
incl
jge
lahf
aad
xchg
jmp
or
push
out
sbb
mov
roll
outsl
cmpsb
shl
xlat
xchg
sbb
jg
dec
push
xor
dec
int
xor
jg
pop
inc
xor
call
jbe
out
sbb
xor
push
mov
mov
push
adcb
jecxz
mov
inc
push
cli
or
cmp
and
dec
loop
xchg
jno
sahf
push
cld
aas
mov
lahf
push
and
jmp
in
dec
jb
xor
ss
add
add
pop
mov
xchg
xlat
xor
out
bound
sub
adc
mov
cld
push
mov
arpl
inc
jecxz
jo
les
mov
xlat
mov
hlt
xor
lock
pusha
shrb
stos
repz
cmp
jbe
dec
loope
or
out
call
or
dec
in
in
xor
call
dec
jp
push
popf
mov
shlb
int
xlat
mov
inc
mov
je
mov
sbb
jg
dec
in
fadd
nop
cwtl
xor
xchg
iret
inc
mov
and
add
inc
out
jmp
and
imull
fcmovbe
push
xchg
adc
jmp
push
incl
mov
adc
mov
cli
xor
int3
cmp
xchg
xor
movsl
inc
push
fdivrs
pop
mov
aad
xchg
fistpl
xlat
xchg
ljmp
cli
popa
pop
cmc
call
in
fcomp
cmc
mov
pop
pop
jno
or
outsl
add
decl
and
int
lods
and
cld
push
popl
cmp
pushf
adc
add
mov
xor
or
ja
inc
add
popa
ret
adc
xchg
mov
mov
scas
test
sub
in
push
popf
lcall
and
jge
mov
call
mov
pop
push
test
mov
out
or
mov
xchg
jns
aam
push
lods
add
ds
xchg
cli
imul
pushl
sub
add
imul
in
lret
ljmp
ljmp
mov
add
mov
sub
or
mov
xor
sti
outsl
into
or
pushf
imul
fwait
popf
dec
inc
fimuls
leave
repz
mov
call
push
aam
xchg
sarl
mov
jp
out
movsl
js
push
clc
es
call
icebp
rolb
popf
add
mov
push
pushf
arpl
out
jb
inc
cli
mov
nop
cmpl
cmp
fstpl
push
adc
mov
dec
call
icebp
sahf
rorl
in
cli
mov
dec
aas
cmpsl
push
arpl
call
lock
je
mov
sbb
add
or
icebp
enter
jg
adc
call
imul
xchg
pop
aad
push
push
dec
insb
mov
aaa
mov
test
insl
fbld
jmp
iret
das
inc
int3
and
out
xchg
loope
jns
aas
in
out
movsb
lock
push
cld
loop
jnp
sbb
mov
lret
mov
pushf
repnz
movsl
rcrb
fcomp
cmp
outsl
jmp
fdivl
sbb
fcompl
xchg
and
nop
mov
mov
and
lock
lcall
and
push
jl
mov
sub
cmp
pop
mov
push
outsb
jl
mov
inc
cmpsb
mov
iret
js
inc
insl
push
hlt
add
ds
pop
jg
fsts
loop
dec
dec
pushl
pop
ficoms
mov
inc
add
mov
add
mov
sub
int
ret
mov
cmp
daa
jns
jne
jbe
hlt
jg
adc
jns
imulb
roll
pop
mov
jmp
jae,pt
pusha
sub
fnstsw
idiv
mov
outsl
mov
lcall
ja
jns
cmp
or
xorl
mov
dec
cltd
rol
fidivs
mov
decl
nop
dec
push
dec
xchg
adc
xchg
jp
xor
xor
aas
pushf
ret
dec
pop
into
lods
push
inc
shll
mov
mov
sub
jle
scas
btc
mov
adc
fs
incl
mov
adc
or
mov
push
sahf
stos
daa
or
repnz
dec
push
pusha
mov
cmp
daa
movsb
mov
lret
and
pop
sbb
and
adc
lcall
decl
in
inc
xchg
sbb
sbb
fucomip
dec
ja
in
arpl
jg
aaa
sti
sbb
lcall
out
jecxz
inc
movsl
xor
and
test
sbb
jmp
xorl
psllw
in
sbb
jo
xchg
mov
outsl
cltd
cmp
gs
dec
pushl
sub
cltd
add
push
les
and
mov
mov
add
add
jbe
std
lcall
or
add
pop
mov
and
paddusb
mov
cmpsl
or
jg
jmp
mov
push
jbe
sarb
in
mov
push
adc
cld
and
scas
pop
arpl
cmp
fsubl
das
inc
dec
jne
mov
mov
rorl
aas
push
sbb
jmp
fdiv
test
fildl
in
daa
fwait
jno
dec
lcall
js
rclb
and
fdivl
cmp
or
and
push
add
pushl
and
sbbb
inc
and
stos
pop
mov
pop
sar
pushl
shll
or
mov
ja
jb
ret
and
mov
clc
cmpsb
in
mov
fistl
cmp
mov
or
or
rclb
addr16
incb
fcoml
mov
incl
pop
and
test
adc
push
mov
ja
in
movsl
and
add
jne
pushf
adc
lcall
pop
mov
mov
add
adc
imul
jg
movsb
cmp
jb
loop
inc
out
mov
ret
adcb
ret
mov
sbb
cltd
and
call
xchg
popa
stc
dec
sbb
cmp
in
push
cld
jmp
stos
popl
xchg
adc
outsl
int3
push
mov
in
or
gs
incb
pushl
pop
sahf
pop
jno
inc
and
inc
sub
dec
test
mov
add
sub
ljmp
or
es
loope
and
out
adc
std
aad
inc
dec
fadds
insb
loop
sarb
aaa
mov
mov
sarb
loopne
icebp
lods
les
mov
dec
incl
dec
repz
adc
fistpl
ret
adc
jg
mov
jnp
mov
sub
inc
xchg
adc
decl
cwtl
arpl
hlt
pop
test
das
nop
stc
xor
push
mov
add
push
add
in
xor
mov
sub
push
xchg
pop
bound
lea
lods
popa
cmp
pushl
add
daa
test
mov
push
aaa
test
call
mov
int3
bound
outsl
mov
lcall
sub
decl
push
mov
cmp
cmp
lahf
sarl
fptan
scas
clc
out
fstpl
push
ljmp
negl
xchg
stc
lcall
adc
lods
mov
and
das
mov
mov
outsl
push
mov
mov
sub
mov
or
popa
mov
xchg
sarb
ficoms
xchg
cld
adc
fwait
stc
dec
int3
dec
in
call
test
xor
dec
stos
dec
insb
push
and
jl
sbb
clc
adc
or
add
test
mov
dec
jno
inc
jnp
or
pop
scas
mov
int3
jbe
fwait
outsb
cmpsb
shl
pop
loopne
mov
dec
roll
popf
lret
cld
xchg
push
into
popf
decl
xchg
daa
jle
mov
out
insl
mov
xchg
adc
dec
sahf
rorb
mov
ljmp
add
pop
push
add
xchg
push
fldenv
lahf
std
dec
mov
rolb
call
adc
cmp
jecxz
cli
sbb
fsub
cs
cmpsb
je
insl
loop
movsl
jle
adc
xor
mov
cmp
xor
cmp
sbb
rclb
push
or
push
daa
ss
mov
fdivrl
add
jo
rol
pop
lcall
out
repnz
add
pop
outsl
push
cmp
jl
fcomip
outsb
cmpsb
daa
dec
pop
mov
mov
xor
xor
icebp
js
cmp
cmp
aaa
out
outsb
jnp
rorb
lret
mov
mov
mov
sbbl
add
dec
push
cmp
push
sub
mov
dec
pop
push
add
mov
andl
sbb
lds
pop
in
ss
sub
xchg
out
leave
push
into
inc
inc
in
mov
pushl
push
das
pusha
pop
and
imul
cwtl
pop
iret
lods
rclb
and
in
jmp
popf
mov
jle
jo
ret
lahf
es
outsb
repz
mov
or
add
decl
push
sarb
les
cmp
fidivl
lret
in
lods
pop
shl
loopne
sub
subl
mov
decl
clc
into
sar
mov
push
insl
add
and
jns
sbb
cltd
mov
call
cld
clc
loopne
jno
mov
jo
push
xchg
testl
decl
sub
push
jo
inc
jp
popf
shlb
xchg
mov
inc
out
xor
aaa
cld
call
enter
gs
cmp
cmp
pop
lds
add
xor
adc
incl
sbb
cmp
data16
sarb
xchg
sub
aas
mov
loop
rcr
push
mov
adc
pop
jge
or
xchg
xchg
gs
fwait
jo
arpl
popa
andb
loop
lcall
adc
std
xor
inc
cmp
repz
mov
rolb
divl
out
in
push
jmp
outsb
dec
jecxz
into
or
adc
sub
jbe
cmpsb
cmp
push
dec
cmpsb
adc
enter
das
out
mov
pop
push
push
push
mov
mov
cltd
test
inc
or
mov
decb
pop
les
sti
mov
decl
mov
push
lret
jo
cmp
aad
cmp
push
adc
clc
push
jno
les
xchg
push
sub
mov
outsb
cmovno
fidivrl
mov
xchg
mov
mov
mov
arpl
mov
mov
jecxz
xchg
jbe
sti
jecxz
mov
stos
mov
jmp
sahf
stc
mov
sbb
mov
sub
jmp
jp
int
cmc
call
in
mov
insl
cli
mov
mov
add
hlt
das
add
arpl
ja
jnp
dec
decl
adc
jae
out
add
mov
in
cmpsb
pop
sbb
ljmp
mov
call
xchg
pusha
adc
fs
iret
dec
xor
cmp
jmp
pop
xchg
fsub
fildll
pop
and
sub
out
push
sub
mov
mov
mov
cld
incl
sub
inc
dec
test
sbb
pop
or
mov
ljmp
cmc
je
mov
pop
mov
pop
mov
pop
push
mov
das
cli
lcall
jmp
addr16
test
xchg
pop
bound
js
mov
cmovs
out
cli
decl
lahf
jp
mov
and
mov
sbb
jmp
xor
ljmp
int
mov
adc
sbb
or
insb
lock
adc
push
sub
fidivl
and
mov
nop
cli
mov
xor
pusha
fdivl
inc
cmp
mov
add
lock
call
in
push
mov
cmp
xchg
arpl
mov
test
jmp
decl
stos
outsl
out
add
jbe
test
in
mov
mov
adc
aaa
cld
notb
stos
push
mov
dec
xchg
jecxz
cmp
add
mov
daa
test
inc
jl
pop
jno
add
cmpsb
inc
sub
mov
jns
mov
rcrl
cmc
or
lcall
xor
mov
jmp
ficomps
pop
mov
in
stos
xor
add
ljmp
pop
or
xlat
xor
lcall
mov
mov
lret
scas
outsb
insb
int3
lahf
lea
ds
pop
sub
lcall
mov
rorl
les
jb
mov
arpl
inc
cwtl
ljmp
movsl
lret
sub
push
add
aas
mov
les
ss
pop
ja
sbb
pushl
push
orl
mov
push
pop
rcrl
push
mov
pop
and
sbb
fadds
pushf
lock
jmp
add
cmp
sarb
call
lock
xor
decl
jbe
in
xor
sbb
xchg
cmc
xchg
out
pop
daa
call
lret
xlat
fucomi
lock
cwtl
or
test
loop
popa
inc
out
clc
incl
add
mov
stos
xor
sbb
mov
fcmovnbe
in
adc
push
mov
push
lret
push
insl
fldcw
mov
aaa
cmp
inc
cli
and
outsl
sub
mulb
mov
mov
inc
jge
mov
cmp
pop
test
ljmp
add
test
mov
adc
lcall
mov
pop
mov
shll
call
nop
enter
je
icebp
sti
imul
imul
hlt
ja
mov
push
lcall
and
or
mov
cltd
stc
cld
fimuls
fildl
cmpsb
jmp
lds
pop
decl
sbb
sbb
sub
pop
mov
push
fstl
cmpl
ja
dec
add
fists
mov
pop
sti
jmp
shrl
lock
inc
clc
mov
outsl
adc
in
enter
shll
and
push
scas
xor
jecxz
in
jns
stos
ljmp
mov
out
je
inc
cmpsb
andb
pop
mov
mov
decl
jg
mov
repz
loopne
ret
cld
inc
pop
sub
pusha
movsb
mov
and
lods
ja
incl
mov
lahf
sub
xor
loop
mov
aaa
or
push
inc
push
sub
push
mov
mov
cmp
aam
fldenv
pop
leave
imul
outsl
sbb
fstp
leave
add
lcall
test
push
and
cltd
insl
outsl
loope
fisttpl
subb
call
icebp
mov
fs
push
testl
xor
shl
mov
dec
je
push
std
sub
int
sahf
lock
testb
adc
je
inc
cmp
loopne
cmp
xchg
loope
test
sub
loop
adc
jbe
bound
pop
xchg
movsl
inc
out
call
xlat
in
and
call
mov
xchg
xor
xchg
aam
es
push
push
mov
insl
inc
ret
fistps
jmp
les
sbb
popa
aaa
adc
push
popf
scas
mov
xor
inc
sbb
mov
inc
incl
js
clc
fsts
call
dec
ss
lods
jg
xchg
add
xchg
hlt
shlb
enter
pushl
dec
movl
loop
movsl
push
call
inc
xchg
sbb
mov
inc
lea
pushl
cld
js
and
xchg
push
fimull
mov
enter
test
andb
in
subl
add
xchg
repz
stos
cld
das
cmpsl
cmp
jecxz
add
std
dec
xor
push
push
xchg
into
popf
hlt
lcall
loop
adc
jp
or
lock
aaa
insl
std
cmpsl
mov
call
imul
xor
out
adc
jb
in
xor
dec
test
sub
pushf
mov
push
aad
mov
xchg
repz
jns
inc
imul
xor
test
dec
flds
call
ljmp
lods
cmp
lahf
popa
inc
mov
stc
orl
loop
mov
inc
repnz
add
in
jecxz
xchg
lret
aam
xchg
cld
mov
aam
aam
jmp
int
roll
dec
push
imul
cmp
clc
pop
shlb
outsb
xor
call
jg
aaa
mov
fwait
pop
xchg
stos
sub
inc
mov
xor
jg
mov
cli
mov
mov
call
push
cmp
xor
adc
popa
cmp
inc
ja
bound
loopne
incl
dec
ret
adc
lret
out
dec
and
cs
js
jne
push
es
ret
fwait
xor
push
pushf
ja
pop
jecxz
jmp
insl
dec
or
rolb
shll
pushl
ret
aad
mov
int
pop
std
les
pop
ds
add
jle
or
js
pop
negl
sbb
mov
xor
loope
xchg
add
orl
cld
rcrb
incb
cltd
pop
sub
mov
mov
addr16
mov
xchg
pushf
cli
jmp
cld
out
adc
into
mov
fs
mov
sbb
sub
call
cmp
in
or
lret
jno
shl
roll
cmp
xor
inc
jmp
inc
jne
xchg
inc
mov
scas
mov
das
sbb
jecxz
mov
mov
xchg
lcall
inc
xchg
jnp
mov
lock
mov
scas
std
or
or
mov
inc
adc
out
lret
fs
es
mov
daa
outsl
xor
push
aaa
adc
inc
cwtl
inc
cmc
std
stos
or
xacquire
aaa
sbb
adc
decl
sub
call
pop
xchg
sbb
or
or
xor
mov
jl
adcl
call
fs
cmp
cmp
movsb
lcall
push
lea
and
out
add
ret
push
imul
lcall
and
cmp
dec
pop
inc
insb
sbb
popa
adc
inc
aad
nop
ja
jecxz
add
iret
into
xchg
xchg
lea
push
lret
out
jbe
jge
mov
lea
mov
push
nop
test
adc
jnp
or
pop
stc
push
xchg
cmc
aaa
jl
xor
dec
sbb
ret
mov
rorb
fisttps
aam
xchg
lods
xchg
testl
or
jo
dec
leave
jmp
ret
cwtl
andl
dec
ds
mov
sub
mov
or
fcomps
inc
mov
lcall
rcr
subl
fmull
and
call
cmp
mov
push
pushf
gs
cli
cmp
addr16
fisubs
pop
test
lock
mov
shrb
dec
call
mov
out
mov
les
stos
lcall
inc
sbb
jl
mov
and
mov
sarl
into
mov
jmp
jo
xor
popf
addl
rorb
aas
xor
loopne
out
cmpsb
cwtl
std
mov
xor
cmp
test
push
jnp
cli
and
xchg
pop
pushl
jl
cli
stc
or
pushf
sbb
ds
or
adc
cmp
or
divl
mov
data16
inc
cmp
inc
mov
dec
push
sarl
decl
adc
int
xchg
mov
stos
jno
aad
pop
pop
mov
mov
incl
pop
dec
add
jg
or
jo
xor
and
cli
or
push
xor
cmpsb
xchg
jg
in
or
js
bound
lret
cmp
imul
mov
inc
push
stos
add
outsl
xchg
pop
lock
call
shrl
mov
pop
es
test
pop
movsl
subb
call
das
pop
outsl
push
and
ds
cs
mov
popf
loop
int3
outsb
mov
push
mov
jge
sbb
int3
cmp
es
ljmp
hlt
in
and
in
ds
out
adc
cmpsb
xor
push
pop
stos
add
fidivrs
jne
pushl
leave
call
idivl
loopne
imul
adc
daa
cmp
sbb
fs
jb
js
fadds
adc
lcall
inc
aam
cld
sub
push
inc
fistps
cmp
cmpsb
cmp
cmp
ljmp
mov
or
or
add
jbe
lcall
mov
adc
sbb
enter
aad
stc
int
leave
icebp
sbb
pushl
xchg
cmp
fwait
lea
jge
repnz
xchg
movd
scas
ficoml
push
jne
jle
incl
cmp
fcmovnb
ds
dec
xchg
or
push
add
cld
mov
insb
aam
push
jp
inc
cmpsl
push
jle
pusha
pop
scas
insl
or
jp
decl
xor
subb
sahf
inc
je
data16
fsubrl
into
incl
test
das
mov
jbe
and
xchg
mov
lcall
rolb
inc
xlat
push
cld
out
jl
cmc
sbb
jg
or
js
or
repnz
ja
push
out
insl
mov
mull
data16
xchg
incl
cld
pushl
nop
mov
fisubrs
sti
mov
dec
xor
std
mov
xchg
in
insb
cmpsb
fisttps
movsb
and
out
cli
lea
or
xor
aam
sub
loopne
xchg
mov
jmp
pop
pop
cmp
xchg
or
aam
leave
fdivrl
mov
lock
cmpsb
shll
pushl
cltd
test
sbb
pop
mov
test
ljmp
mov
call
mov
dec
cltd
and
adc
daa
fstps
call
loopne
pushf
ret
out
dec
and
enter
sti
aam
push
negl
cmp
add
pushl
xor
dec
sbb
lret
lret
sahf
push
or
test
inc
imul
cmp
hlt
out
movsb
push
pop
sarb
dec
ja
cwtl
jg
cmpb
or
ljmp
int3
out
mov
cmpl
mov
jo
addb
push
pop
push
ja
add
ljmp
pop
or
xchg
adc
push
fcmovbe
lds
jg
pushl
cmc
mov
adc
int
aas
in
lcall
lock
push
outsl
dec
sbb
lret
enter
hlt
mov
call
sbb
bound
daa
mov
adc
jmp
outsl
and
jge
lds
stos
lcall
ljmp
push
faddl
or
loope
nop
mov
sub
incl
shrl
mov
inc
imul
mov
loope
cmc
cmc
mov
xor
adc
pextrw
lret
dec
mov
out
push
xor
out
jp
nop
cmpsl
outsl
incl
mov
mov
lahf
ds
movsb
cmpsb
xchg
test
cmpsb
jne
mov
lcall
mov
add
mov
fnstenv
mov
or
loop
xchg
xchg
jne
ss
repnz
incl
xchg
fldenv
adc
fdivrs
cmovns
popf
jmp
int
decl
ds
mov
in
mov
bound
test
stos
icebp
jae
aam
sbb
adc
inc
jmp
insl
jnp
mov
cmpsb
test
dec
adc
push
leave
das
cmp
mov
push
insb
subl
ljmp
xchg
mov
shrb
add
mov
adc
loop
mov
mov
lods
nop
xor
jle
dec
gs
ljmp
clc
adc
inc
xor
sub
jge
outsb
leave
or
lods
dec
adcb
fsubr
subl
mov
push
mov
cmp
xchg
inc
xchg
aas
sbb
test
cld
stos
dec
outsb
xchg
cmpsb
pusha
cmp
adcl
xor
je
jae
js
pushl
sahf
gs
dec
bound
rep
movsl
ds
insb
rcrb
mov
or
popf
mov
stc
mov
fwait
lret
sub
or
out
jge
pop
sbb
std
mov
sbb
adc
mov
mov
xor
dec
sub
mov
incl
sbb
call
xor
mov
jns
cmp
or
cmp
and
jecxz
pop
cmp
insl
adc
lcall
ret
or
into
dec
mov
push
dec
std
scas
push
add
insb
adc
loope
cwtl
mov
inc
cmpsl
add
mov
ss
decl
mov
dec
lea
mov
fwait
sar
lret
call
xchg
out
xor
decl
out
repz
adc
nop
and
sub
clc
sti
adc
cmp
mov
setge
call
inc
nop
add
sbb
aam
inc
push
push
xchg
andps
dec
jp
ljmp
lods
cwtl
clc
out
clc
hlt
mov
lret
xchg
inc
aam
fwait
aas
or
ljmp
adc
sbb
push
mov
outsl
jecxz
std
lods
push
movlps
lcall
clc
adc
and
xor
inc
add
je
addr16
jb
punpckhbw
outsb
jl
mov
lods
gs
adc
jmp
fdiv
hlt
ficoml
mov
push
pop
push
outsl
xor
scas
or
cmp
in
dec
test
sub
xlat
in
lret
mov
fisubrs
lds
xchg
out
sar
call
xchg
gs
fsubrl
fdiv
in
cmp
xor
pop
jnp
sbb
iret
and
jg
push
cs
and
jecxz
jb
xor
inc
sub
jns
cmp
jmp
mov
jne
push
divb
lret
cwtl
rorl
xchg
enter
call
pop
mov
in
stos
push
mov
lods
fs
clc
loop
mov
mov
ficoms
dec
clc
jg
jns
xlat
add
out
cmpsb
sbb
cmp
out
addb
ss
in
and
mov
push
insl
test
mov
fnstcw
mov
cmp
clc
mov
int
inc
dec
cmp
not
pusha
mov
mov
and
push
jno
xchg
decl
fildl
sbb
mov
dec
imul
inc
cltd
inc
les
incl
xchg
xchg
int3
pop
pop
std
and
mov
in
sbb
je
daa
mov
jg
call
jp
sbb
lods
lea
inc
mov
add
dec
mov
call
and
xchg
or
mov
int
cmpsb
bound
mov
jmp
mov
mov
mov
mov
push
subl
or
mov
and
or
outsb
pop
icebp
or
mov
in
in
pop
push
out
clc
call
test
jmp
push
fs
and
icebp
adc
lods
pop
bound
pushl
test
in
cmpsb
push
cmp
mov
lahf
xchg
mov
mov
js
pop
not
add
dec
sub
call
call
mov
in
fs
test
jb
lock
imul
adc
insl
call
decl
je
adc
hlt
jmp
xchg
push
and
push
push
xor
bound
dec
hlt
std
mov
scas
out
adcb
lcall
xchg
push
cld
mov
stos
shl
lds
bound
inc
gs
decl
mov
mov
into
cmp
ficoms
test
cltd
ret
lods
lcall
push
jmp
aas
out
adc
fsubl
ja
mov
dec
dec
mov
xor
fistpll
std
sti
mov
or
xor
mov
lods
xor
decl
nop
test
addl
cli
gs
or
cmc
shl
or
dec
sbb
fnstcw
xor
pop
sbb
aas
adc
call
jecxz
popa
sarb
push
dec
inc
xor
les
insb
in
sbb
sti
mov
push
out
cmpsl
and
xchg
mov
test
push
cmpsl
jmp
cmp
je
and
xor
out
es
jl
pusha
dec
inc
dec
mov
jl
push
jmp
rclb
sub
cmp
imul
xchg
sbb
jle
iret
rclb
rdtsc
in
fbld
jmp
sub
mov
cmp
pop
fdivrp
iret
xchg
jge
movsb
testb
mov
call
inc
sub
adc
repnz
and
sub
inc
sbb
test
sub
add
jns
dec
pop
sub
xor
fidivrl
cmp
sbb
inc
inc
sub
jmp
lcall
and
mov
fimull
sbb
sub
mov
loop
adcl
push
jle
mov
in
jns
mov
xchg
mov
push
mov
dec
lcall
clc
mov
xor
jns
es
mov
aam
adc
push
incl
mov
push
jge
lahf
enter
adc
sub
pop
xchg
int3
loop
mov
addr16
lcall
pop
or
repz
cmp
push
hlt
mov
mov
in
fs
call
pushl
jnp,pn
mov
mov
imul
lcall
fs
xchg
lods
or
mov
dec
imul
movsl
dec
mov
mov
outsb
jmp
dec
insl
mov
cmp
sti
sub
pop
pusha
sbb
daa
push
jecxz
and
sarb
cmp
inc
ljmp
std
les
daa
gs
fisubs
mov
icebp
push
je
ljmp
pusha
inc
idivb
cmp
cmp
hlt
mov
mov
call
in
loope
stos
mov
mov
scas
mov
andb
cli
call
add
test
jecxz
ljmp
xor
sbb
jl
xchg
xor
js
mov
aaa
xor
cs
in
cmp
xor
incl
pop
push
jl
sub
rorb
cmp
nop
dec
add
lcall
push
pusha
aad
jo
jno
movsb
inc
addr16
popf
insb
mov
lods
jl
in
pop
into
sub
sub
cld
pushl
sub
jne
icebp
mov
frstor
push
push
fcomip
sbb
mov
popa
jge
inc
int3
xchg
or
out
xchg
jb
jmp
mov
aam
stos
das
cmpsb
mov
ljmp
in
inc
pop
fldcw
mov
addl
cld
adcl
sbb
mov
mov
stos
jmp
mov
decb
jnp
pop
inc
pop
out
sahf
mov
cs
pushl
and
movsb
mov
pop
jne
xor
daa
dec
and
scas
push
mov
sbbb
jmp
add
scas
cmp
sbb
arpl
or
lds
pop
push
out
imul
in
cmp
or
mov
mov
sub
adc
pusha
jo
jl
pop
ret
push
loopne
mov
lret
pop
mov
push
pop
daa
add
xor
decb
adc
add
mov
jp
xor
jno
out
add
femms
fistl
sub
and
mov
movsb
popa
dec
je
or
cli
push
ljmp
mov
es
enter
jne
hlt
xchg
movsl
scas
push
jmp
jmp
ss
loope
jle
addr16
xchg
cwtl
xchg
frstor
addr16
cmp
add
cld
incl
test
lcall
jg
pop
mov
lahf
or
and
push
and
adc
xor
lods
pop
test
jns
test
incl
lea
mov
xchg
pop
push
add
add
pop
repz
dec
mov
sbb
out
pop
adc
shll
test
mov
jbe
mov
shrb
loop
mov
jb
flds
mov
sub
das
adc
jp
jmp
and
cwtl
sub
cs
mov
push
dec
out
loopne
sub
lcall
in
xor
es
dec
add
jno
dec
jnp
adc
and
out
mov
pop
push
push
mov
mov
pop
jmp
shrl
sbb
lods
mov
xchg
and
jmp
or
xor
call
pop
stc
mov
jns
or
and
push
xlat
lret
and
std
repnz
call
inc
aam
out
clc
add
shlb
pop
sarb
ja
test
js
mov
decl
lods
sbbl
sahf
aaa
in
ret
mov
test
cmp
leave
push
mov
inc
adc
or
popf
jmp
aaa
sbb
int3
daa
dec
test
mov
pusha
adc
push
sub
pusha
xor
mov
inc
sbb
sbb
push
aaa
shrb
push
pusha
inc
jo
repnz
ljmp
jle
out
cltd
mov
fsubrl
enter
xchg
xlat
jmp
fwait
mov
fimuls
bound
jl
loop
imul
ss
pop
popa
daa
jg
ljmp
ret
cmpsb
stc
mov
sbb
and
subl
pop
adc
or
loope
aas
push
cmp
xchg
stos
je
and
xlat
aad
jecxz
iret
dec
jbe
stos
loopne
call
std
clc
jbe
js
jo
imul
cwtl
dec
fldl
mov
pop
int
cld
das
xor
stos
lahf
push
mov
xor
stc
ret
loope
dec
mov
xchg
push
or
call
pextrw
add
jmp
push
in
data16
and
fstpl
lcall
add
and
aam
or
xor
popf
or
jg
sub
cmp
pop
sbb
mov
mov
lcall
testl
cmp
pop
mov
decl
out
mov
xor
dec
jg
dec
popa
mov
nop
pop
sub
incl
xchg
repz
rcrb
ja
mov
xchg
xchg
sbb
insl
cs
lcall
jmp
lcall
into
dec
inc
pop
pop
push
or
sahf
sbb
mov
decl
jmp
nop
jo
movb
adc
jecxz
incl
pop
and
jno
cltd
pop
cmpl
fs
mov
sub
and
and
stos
stos
fs
jno
sbb
ljmp
mov
or
jecxz
sbb
scas
lret
int
jl
push
push
push
sub
sahf
mov
jmp
leave
in
add
mov
jmp
add
psrlw
cmpsl
mov
jo
or
decl
pop
push
or
xlat
shlb
gs
add
jl
xorw
xor
js
adc
jnp
mov
dec
sti
pop
add
rcll
idiv
fisttps
xor
push
inc
fs
out
xlat
icebp
imulb
decl
xor
shlb
hlt
test
dec
decl
mov
push
cmpsb
xchg
fisubs
iret
icebp
mov
jle
inc
and
add
mov
daa
push
dec
mov
sub
mov
jmp
mov
inc
insb
les
sahf
cmc
jb
cmp
adc
sub
div
mov
add
jp
test
push
ret
xchg
adcl
call
xchg
out
mov
pop
cld
fsts
adc
mov
cmp
pop
add
loope
dec
dec
jmp
push
in
add
ljmp
push
push
aas
add
rclb
repnz
cs
xchg
pushl
dec
pop
call
sub
dec
bound
xor
sub
ret
enter
or
incl
push
jae
cmpsb
test
movb
or
std
and
fcoml
adc
lds
loop
outsb
shlb
fwait
movsb
lcall
aaa
test
jle
dec
out
cmp
or
lock
test
push
add
sbb
icebp
out
push
int3
in
mov
ja
sbb
dec
dec
or
lcall
andb
lods
sub
mov
test
inc
add
pop
negb
out
push
push
outsl
mov
xor
das
loopne
rolb
jno
es
arpl
mov
push
ret
and
clc
loopne
pop
hlt
add
aam
cmp
or
add
mov
xchg
mov
ret
add
lods
or
ss
dec
orb
movsl
fsubs
pop
scas
into
xor
imul
mov
xchg
add
sbb
test
adc
pop
sub
pushf
or
int
add
gs
dec
add
jecxz
dec
enter
scas
insb
push
xor
and
cmp
dec
push
push
jmp
or
add
aad
aaa
lods
es
orb
fildl
or
or
or
inc
mov
popa
sbb
movsl
scas
jns
mov
adc
xor
mov
aad
xlat
roll
insl
adc
divb
jg
mov
fs
pop
sbb
stos
in
or
sti
inc
rcrl
jns
cmp
pop
cwtl
aas
cmpsb
cmp
ds
add
dec
cmc
jo
or
jg
cmp
mov
iret
xchg
push
cmpsl
roll
lods
iret
xlat
int3
sbb
lcall
inc
or
jmp
loopne
cwtl
verw
add
push
sub
lcall
test
lods
adc
mov
shl
or
clc
outsl
nop
incb
sub
mov
mov
add
mov
sub
adc
lods
iret
lds
call
cli
ss
stc
hlt
or
add
scas
inc
mov
xchg
ljmp
loopne
pusha
sub
ror
aaa
dec
lret
push
shll
and
movsb
ljmp
ljmp
cwtl
fldenv
cmp
ds
cmp
cmpb
add
mov
mov
mov
nop
fisttps
outsl
dec
call
add
add
adc
cmc
loop
inc
sub
ljmp
sarl
add
and
lcall
pop
imul
pop
mov
cltd
inc
mov
mov
adc
adcl
jbe
xor
add
cld
jg
ljmp
mov
adc
jb
fwait
sbb
mov
and
ja
lahf
push
add
lcall
xchg
es
or
int
inc
xorl
cli
xchg
bound
movsl
jae
mov
or
les
mov
dec
loope
sbb
bound
inc
stos
jmp
hlt
clc
cwtl
pop
movsl
push
icebp
es
repz
pop
leave
les
xchg
or
sbb
adc
mov
mov
xor
dec
mov
test
xchg
push
dec
xchg
sub
sub
sbb
in
cli
mov
adc
cmp
pop
jle
xchg
adc
repnz
clc
cmp
and
dec
cmp
leave
popa
cmpsl
lcall
mov
hlt
inc
rol
or
out
or
cmp
mov
movsb
jmp
popf
inc
sub
pop
loop
in
fstl
or
mov
ret
pusha
js
mov
addr16
or
insb
out
mov
fcmovne
pop
mov
jge
or
test
enter
mov
fwait
lret
or
pop
xchg
cmc
add
das
ds
hlt
and
je
sbb
mov
das
loopne
fbld
jo
push
pop
out
pop
cli
fsubrs
xor
lahf
add
es
popa
sbb
aas
test
jns
filds
mov
sub
xorb
or
sbb
dec
mov
xlat
stc
cmp
outsb
push
sbb
and
and
pop
fcoms
push
je
adc
push
vpmacssdd
sbb
sub
pop
add
xchg
sbb
or
push
cltd
or
push
into
test
pop
sbb
lods
outsl
xchg
push
jbe
daa
js
out
mov
jae
cmc
cmpsl
out
and
aam
fwait
cmp
cltd
int
scas
sbb
ljmp
mov
sbb
push
mov
mov
push
int
sub
cmpb
aam
fisubs
lcall
adc
fsubs
cld
outsl
incl
lock
xor
jne
mov
fcmovnu
mov
jnp
mov
or
mov
push
xor
sbb
xchg
inc
push
pusha
loopne
mov
cmp
xor
cmp
cmp
mov
pushf
adc
adc
or
icebp
mov
cltd
mov
stc
in
into
filds
adcl
push
add
loop
loopne
decl
push
sbb
int3
ss
das
cmpsb
mov
test
inc
push
aaa
mov
jle
add
enter
mov
hlt
jg
mov
add
or
adc
pushf
int
orl
push
adc
and
sbb
sub
inc
pop
jb
sub
pop
fcomps
int3
sbb
lcall
jp
outsl
cmp
add
inc
add
shl
adc
add
or
sbb
mov
mov
add
mov
dec
sub
loopne
push
push
push
pop
push
sub
sahf
inc
fisubrs
mov
xor
cwtl
cs
adc
jb
mov
push
jnp
adc
std
sub
mov
aam
mov
add
push
les
mov
stos
push
fcoms
pop
ret
aaa
mov
daa
in
loop
cli
adc
outsl
mov
ljmp
insl
decb
outsb
jae
pop
sub
in
int
adc
push
jo
jle
mov
mov
xor
jbe
les
pop
clc
stos
lcall
push
or
add
ret
clc
jb
dec
xor
cmp
pushf
loop
cmp
sbb
call
dec
sti
pop
mov
jns
or
rcrb
fistpll
test
add
lahf
jge
push
mov
ror
js
cld
fwait
adc
pop
add
out
std
jo
test
xchg
mov
cmp
pushl
mov
cmp
dec
add
jno
fbstp
test
stos
cmpsl
xor
add
icebp
cli
add
xor
out
sbb
movsl
jl
push
xchg
cmp
xor
test
pop
nop
xchg
jb
mov
dec
pop
mov
mov
es
lock
fsubl
and
inc
adc
sub
sbb
jmp
jp
xchg
fwait
decb
add
in
jmp
cmpsb
idiv
fildll
out
loop
out
test
mov
inc
test
adc
mov
out
sub
pop
pusha
dec
mov
decl
inc
pop
lock
pop
popa
test
dec
inc
jl
ret
jmp
dec
pop
dec
in
pushl
xor
lock
daa
ret
rclb
fdivp
xor
outsl
add
popf
aad
or
iret
xchg
sbb
les
and
sbb
shlb
cld
idiv
sub
mov
fdivr
or
inc
jge
add
jo
stos
sarb
lret
xor
rorb
scas
inc
lret
fidivs
or
or
cmp
lahf
add
sbb
or
lods
push
cmpb
xor
push
ds
mov
mov
enter
addr16
push
stos
sbb
pop
inc
aas
dec
scas
loope
scas
and
mov
xor
push
adc
addr16
add
cli
pop
mov
jp
push
shrb
jnp
mov
push
xor
sbb
adc
or
lahf
and
sub
or
sahf
or
ljmp
in
scas
jae
inc
je
xchg
mov
xor
mov
push
inc
mov
daa
loope
call
mov
or
in
outsb
incb
shrb
pop
sbb
adc
movsl
add
rolb
and
bound
outsb
adc
sub
add
jb
add
push
or
cmpsb
mov
shr
cmpsb
hlt
gs
js
pop
mov
in
movsl
scas
clc
fcmovb
push
ds
adc
mov
int
dec
incl
and
or
pop
test
cmpsb
sbb
incl
loope
loopne
popf
in
iret
xor
mov
fs
inc
jmp
incl
ja
enter
mov
cwtl
mov
ficomps
stos
icebp
jp
pop
dec
test
das
pop
orb
push
mov
adc
add
cmp
dec
add
orb
fsubrs
pop
inc
das
mov
xor
add
inc
add
cs
decl
cmpsl
mov
mov
mov
andb
ret
rcl
mov
sbb
push
xchg
das
or
adc
and
inc
hlt
xor
outsb
bound
inc
das
mov
push
sbb
loopne
push
roll
inc
mov
es
dec
stos
pop
rcl
mov
daa
and
sbb
mov
inc
pusha
dec
add
jmp
push
add
mov
int
sahf
icebp
inc
mov
int3
pushf
into
sub
mov
mov
lcall
push
xor
inc
aas
sahf
mov
sbb
repz
jae
cld
adc
pop
and
add
sahf
jb
rorb
inc
xchg
push
jge
push
inc
fdivr
fldl
or
sbb
or
dec
shlb
iret
pop
incl
push
nop
and
sbb
stos
les
jg
ljmp
mov
add
jge
bound
cmpsl
mov
inc
xorps
sbb
sbbb
pop
call
inc
xchg
je
std
in
jg
addr16
fmull
adc
nop
push
les
mov
clc
outsb
es
mov
mov
fsubrl
xchg
jns
dec
jg
adc
rcrl
xchg
jae
aaa
cmp
push
adc
mov
dec
fisubs
pop
ja
inc
pextrw
xor
lods
dec
add
add
popf
incb
lcall
mov
test
loope
fcomps
insl
mov
jne
out
pop
xchg
push
iret
lea
int3
pushf
in
mov
hlt
rep
flds
adc
jo
fs
cmpsb
adc
incb
pop
lcall
xchg
push
test
pop
test
fcomp
dec
sarb
mov
lcall
loopne
xchg
xchg
mov
pop
in
dec
mov
repz
add
mov
mov
idiv
jg
and
push
jo
inc
shll
pop
enter
mov
mov
inc
cmc
test
inc
mov
clc
jno
push
movb
enter
inc
dec
sub
xorb
mov
and
popa
mov
add
enter
inc
cmp
add
mov
shll
mov
mov
clc
push
pusha
sbb
sub
add
mov
inc
movsl
loopne
push
dec
jecxz
add
inc
icebp
andl
xchg
sub
flds
cwtl
hlt
lcall
ret
cld
rolb
mov
call
out
imul
scas
nop
or
enter
xchg
pop
mov
mov
sub
sub
clc
mov
sub
xor
sar
mov
ficoml
xchg
scas
add
push
pop
loopne
inc
add
fcompl
je
jmp
fmull
movb
sbb
xor
add
pushl
loopne
mov
addl
xor
cmp
cmp
xchg
test
or
add
pop
icebp
test
xor
ffree
cli
xor
dec
dec
inc
sbb
inc
push
mov
pop
jl
cld
jle
daa
xchg
push
incl
and
mov
pusha
fstp
out
sar
cmp
add
mov
cmp
adc
rorb
dec
jle
sar
into
adc
cmpsb
mov
sbb
inc
sti
push
adc
jmp
or
inc
shll
sub
cs
pop
mov
call
add
cli
cli
push
fs
out
arpl
sub
lcall
cmpsb
ljmp
xchg
pushl
pop
add
aaa
cmp
mov
mov
ljmp
lds
xchg
mov
cmp
insb
push
mov
lret
shl
shll
xchg
loopne
cld
out
and
xor
jo
add
jl
jp
loopne
pop
adc
in
pusha
mov
and
adc
add
inc
out
add
mov
add
sub
lds
sub
jg
loop
mov
stc
sbb
leave
lock
xor
fchs
aas
es
loopne
je
inc
add
orb
insb
sub
je
adc
shrb
or
dec
incl
loopne
push
addr16
xchg
mov
mov
cmpsb
add
gs
ljmp
in
imul
mov
push
mov
add
aad
jl
enter
inc
js
outsl
mov
sbb
lahf
add
iret
jg
incl
add
or
faddl
xchg
add
pusha
cmc
fcomip
cld
dec
pop
and
jbe
and
bound
nop
andl
push
outsb
cli
fistpll
or
push
fwait
rolb
orb
arpl
xor
jg
clc
or
jmp
or
add
idiv
jg
sub
cmp
inc
fisubl
xorl
scas
or
mov
lret
add
out
dec
push
sub
lret
mov
stos
xchg
incl
jmp
insb
cmpsb
lret
bound
and
and
incl
push
jmp
das
add
mov
lret
dec
add
adc
cmc
push
mov
fdivs
lcall
mov
cmpsl
mov
mov
jno
ljmp
pop
mov
sbb
movsb
sbb
or
repz
in
ficompl
jmp
fsub
jb
outsl
dec
and
mov
dec
inc
outsl
std
cmp
scas
mov
lret
xor
dec
subb
mov
sbb
push
dec
adc
or
mov
scas
andl
sbb
sbb
mov
divb
cmpsb
pusha
mov
lea
push
sub
das
out
mov
cmp
jo
jg
xchg
jge
ret
sub
xchg
scas
ss
notl
dec
xchg
mov
aas
cltd
movsl
enter
mov
rcl
push
or
lds
mov
mov
mov
and
insb
xchg
shr
popa
lods
pop
push
icebp
hlt
sub
test
lret
decl
aad
rcl
xchg
jg
add
in
jge
aas
test
incl
adc
fldcw
in
push
enter
pusha
sub
decl
out
adc
pop
inc
sbb
cmp
add
es
pop
inc
int3
aas
cmpsl
jbe
xchg
imul
lcall
roll
mov
rolb
or
mov
pusha
cmp
jle
aad
adc
or
cli
iret
xchg
push
push
daa
add
mov
test
mov
add
xchg
incl
jmp
adc
cli
xchg
and
add
adc
gs
dec
mov
insl
std
sub
xchg
jg
dec
ret
out
inc
add
mov
mov
inc
push
adcb
adc
mov
push
sub
xchg
push
call
dec
lock
or
push
xlat
dec
lods
xor
cmpsl
loop
iret
cmpsl
daa
test
xlat
and
popf
outsb
push
sahf
loopne
jl
sbb
adc
add
aas
push
add
ds
decl
jmp
cltd
mov
dec
hlt
sysenter
dec
push
inc
scas
ret
cmp
or
div
sub
adc
das
mov
xchg
ret
dec
loopne
out
pop
idivb
dec
mov
loop
scas
test
add
loope
enter
stc
lcall
lds
inc
rcll
sbb
jbe
and
cmp
aaa
and
mov
dec
pop
mov
adc
ljmp
mov
notl
and
inc
icebp
mov
sub
repnz
negb
jg
jecxz
stos
jb
adc
sti
jmp
movsb
outsb
xor
decl
mov
int
cmpsl
popf
call
hlt
push
mov
pushl
dec
add
mov
add
adc
into
das
in
mov
mov
filds
mov
push
inc
mov
inc
and
pop
icebp
incl
sub
add
stos
xor
stos
xchg
mov
ror
sti
ret
cmp
fwait
in
pop
scas
clc
inc
pop
lods
push
inc
insb
fldcw
test
push
rorb
jbe
dec
sub
inc
insl
mov
iret
fsubs
sub
aaa
mov
xor
inc
jle
jecxz
mov
call
lds
or
pop
nop
pop
cmp
xchg
mov
add
inc
add
pop
jecxz
push
je
scas
xchg
icebp
pop
sbb
lret
xchg
add
data16
aaa
jecxz
pop
lcall
mov
mov
mov
ja
cli
or
and
lods
mov
jns
pop
in
push
dec
insb
push
sti
xor
pop
std
add
roll
cmpsb
lret
out
clc
inc
enter
sbb
shrb
aas
movl
ss
inc
mov
mov
inc
pop
push
cmp
fucomi
cmp
mov
lea
xchg
clc
fwait
clc
mov
mov
inc
mov
pusha
outsb
fisttpl
add
jns
mov
inc
pusha
pop
js
sbb
cmp
decl
sub
mov
mov
cmpsl
incl
push
push
cltd
out
mov
mov
mov
call
sahf
pop
neg
lret
mov
add
pop
fs
inc
push
clc
pop
jg
xor
or
std
jmp
cmpsb
jns
mov
cli
cmp
ja
rcll
xchg
or
pop
rolb
int
stc
and
mov
pop
pop
sbb
repz
mov
add
loopne
mov
cwtl
jbe
pop
xchg
cld
add
shl
mov
xchg
pandn
ljmp
bound
cmp
enter
inc
cwtl
call
rcrb
int
cs
mov
aas
std
sub
push
stc
ret
aaa
push
push
cwtl
sbb
sub
data16
pop
xchg
rcr
out
jl
xchg
jb
push
and
pop
adc
call
add
shll
ret
lods
rolb
pop
call
xchg
inc
stos
nop
lods
pop
dec
mov
scas
mov
dec
mov
mov
mov
jnp
or
add
ficomps
add
xorb
jb
mov
xchg
and
sbb
outsl
sub
sub
fcoml
inc
cltd
jbe
add
pop
ds
loopne
out
or
test
lahf
jnp
or
xlat
sub
push
sbb
adc
decl
mov
ljmp
into
cs
iret
insl
movsb
mov
xchg
add
fsubp
add
out
andl
or
outsl
mov
dec
or
push
pop
cmp
dec
add
and
cld
sub
sbb
cmc
sub
xor
mov
mov
jle
jle
scas
ds
push
cli
mov
lea
xlat
xor
ffreep
sbb
mov
mov
mov
cmpb
fsts
lock
int
and
push
mov
mov
jno
mov
shll
or
aam
inc
fisttps
push
adc
sti
push
clc
fcomip
bound
test
add
cmc
jp
cmc
pushl
mov
int3
dec
xor
cmpsl
mov
xor
mov
inc
inc
sub
pushl
enter
iret
into
mov
and
add
cltd
lods
jo
dec
fadds
loope
decl
pop
xchg
mov
pusha
icebp
pop
lds
jo
fdivr
pop
orl
fsubrs
addb
sbb
push
jmp
pushf
inc
inc
cmp
in
mov
add
imul
jmp
push
sahf
in
sbb
mov
mov
aad
adc
dec
movsb
jne
inc
adc
dec
or
mov
dec
push
xchg
scas
mov
pop
pop
add
mov
sbb
mov
test
push
fcomip
es
sub
repz
dec
fildl
xor
xchg
in
out
mov
lret
add
jmp
jg
mov
das
dec
les
push
paddusb
mov
adc
in
iret
add
das
jo
inc
test
testb
pop
lods
add
popa
pusha
jl
adc
dec
xor
and
mov
push
ds
subb
ss
pusha
dec
lock
push
or
sub
fcomps
push
add
fcomp
push
xor
push
sbb
in
or
sar
inc
adc
add
jns
add
pushl
std
stos
mov
ds
sahf
fwait
adc
aad
popf
ret
out
mov
test
nop
mov
push
mov
xor
fisubrl
lods
xchg
sbb
push
jle
bound
jg
pop
shlb
es
add
cmp
aad
into
xor
scas
mov
pop
and
mov
jmp
pop
mov
stos
or
cmp
insb
mov
cmp
xorb
pop
sarl
fwait
cmc
mov
stos
jno
hlt
and
rcrl
ret
ret
add
inc
push
in
adc
mov
dec
lret
cwtl
loope
or
sbb
flds
scas
insl
scas
sarl
jb
add
insl
cmp
out
inc
rcrb
dec
pop
mov
cld
mov
add
or
dec
sbb
mov
jecxz
push
lret
fldcw
movsl
add
aad
cltd
outsb
inc
inc
ret
fs
mov
fs
adc
sbb
mov
ja
push
adc
cmp
jne
mov
fildl
pop
adc
jp
xor
adc
mov
mov
mov
data16
push
push
add
sub
andb
mov
imul
xor
push
jg
mov
mov
push
push
dec
test
push
mov
cmpsb
cmp
mov
fwait
lods
push
mov
jg
cmp
loope
cmp
pop
lock
notl
sahf
mov
sbb
cld
jg
and
pop
cli
dec
call
fisttpl
out
adc
mov
or
mov
xchg
jbe
sbb
xchg
dec
cwtl
or
mov
shr
add
and
nop
scas
scas
imul
mov
test
jbe
or
inc
mov
les
cmp
xchg
clc
mov
daa
int
test
pusha
add
imul
out
xor
ja
ret
add
test
sahf
outsl
les
jg
loope
and
adc
xor
pusha
cmp
adc
jle
cmp
test
mull
jns
shlb
inc
test
rorb
xor
or
ficoms
stos
sahf
jns
or
andl
mov
push
or
cld
fs
das
pushf
sub
out
lret
adc
jle
lock
and
scas
dec
cld
push
push
mov
and
adc
out
xor
dec
stos
push
shl
or
or
sbb
pop
pusha
push
mov
movsl
nopl
jl
xchg
pushf
sub
aaa
jl
orb
cmp
add
inc
psadbw
mov
mov
jl
testl
stc
nop
pop
cmc
push
rorb
inc
jo
stos
stc
inc
int
fwait
fs
lock
pop
bound
xchg
push
icebp
and
enter
add
inc
add
std
stos
sub
inc
test
push
test
out
pop
or
xchg
cmp
xchg
fbld
jle
pop
mov
pop
or
icebp
fildl
mov
jbe
push
outsb
dec
cwtl
mov
fisubl
xor
fists
add
xlat
dec
rep
hlt
sub
xchg
imulb
jl
or
outsl
pop
or
mov
lret
dec
adc
out
clc
add
xor
xor
push
and
data16
mov
daa
xor
js
decl
aas
ficoml
repz
jg
call
mov
lods
lds
aas
jmp
dec
add
popa
outsb
lret
pop
test
inc
add
lea
pop
dec
jae
call
mov
inc
mov
jbe
lahf
push
jae
orl
cltd
jmp
sub
inc
and
add
clc
inc
addb
cli
dec
add
js
xor
test
test
mov
call
sbb
or
test
mov
mov
jp
mov
adcb
repnz
cmpsb
int
push
jno
loop
jle
push
jl
mov
cmp
addr16
jo
xchg
subb
rcrb
jmp
mov
pop
add
cmp
repnz
sarb
mov
and
push
xchg
sbb
sbb
test
lea
and
xor
lds
mov
loopne
xchg
cmp
sub
dec
dec
add
das
mov
enter
mov
aad
push
imul
lock
inc
adcl
and
std
add
test
xlat
inc
push
ret
xchg
or
insb
mov
repz
pop
sbb
mov
add
pop
mov
mov
roll
pop
lods
sub
pushl
insb
mov
cmpsb
and
out
pop
stos
pop
xchg
pop
dec
sub
dec
cld
bound
and
arpl
sbb
ja
js
jecxz
out
mov
mov
cmp
inc
fbld
ja
add
cli
ja
movsb
rclb
mov
and
iret
cmpsl
push
js
in
sbb
adc
add
push
daa
aas
pusha
sbb
adc
pusha
xchg
pop
and
mov
sub
daa
add
push
or
or
mov
add
lea
cmp
push
cltd
imul
jle
decl
inc
daa
stos
aas
push
or
inc
adc
rclb
scas
cli
xor
and
loopne
lcall
dec
scas
loopne
lods
add
fucom
outsl
dec
lea
sbb
inc
fs
test
pop
fsubr
ss
lods
mov
clc
cltd
stos
xor
xor
jg
into
xchg
cmc
pop
lahf
or
cmp
stos
dec
push
test
icebp
inc
les
add
add
xorb
popf
fstpt
push
in
add
mov
adc
int
leave
mov
xor
adcl
mov
jb
ljmp
jp
andl
jbe
xorb
loopne
mov
sbb
aam
mov
shlb
mov
gs
or
cmpsl
add
iret
loopne
iret
lahf
mov
clc
cmpsb
ljmp
mov
mov
or
adc
dec
leave
cmc
sbb
mov
jb
jle
xor
repz
fwait
jle
bound
xchg
or
push
imul
jl
aas
cli
jg
test
cs
idivl
popa
icebp
inc
into
add
pop
jle
loopne
pushl
add
outsl
lret
jae
push
test
mov
xchg
xchg
mov
sbb
pop
icebp
aas
push
cmpsl
mov
adc
jg
xlat
loop
in
dec
jmp
cld
outsl
clc
decl
and
xchg
lods
scas
das
out
mull
mov
sub
popa
repz
dec
cmpsl
and
outsl
jp
jb
jecxz
ljmp
arpl
sbb
mov
mov
mov
mov
xor
cmp
rcl
and
xor
add
add
mov
xchg
in
fldenv
clc
scas
ret
addr16
pmaxub
inc
fdivrl
pushf
stos
mov
xor
fists
mov
dec
and
js
loopne
xchg
jo
lock
lahf
push
jmp
icebp
push
sahf
orl
cmp
fstpl
add
add
call
jg
daa
lret
loope
pushf
and
scas
jae
xorl
fdivr
scas
push
cmp
lods
ret
cmp
inc
sbb
dec
mov
adc
sub
je
repnz
push
icebp
cmc
insl
mov
add
in
ja
inc
dec
cs
lret
sub
out
das
cmp
or
rolb
cltd
push
push
xlat
call
jmp
pop
in
lock
add
loop
outsb
cmp
xchg
je
xchg
test
test
rolb
ljmp
mov
xchg
cmp
es
inc
mov
dec
ss
xor
decl
clc
clc
ret
sub
mov
fdivrs
inc
rcr
rorb
jmp
inc
xchg
pushf
and
sub
decl
push
xchg
sahf
add
cmp
xchg
push
lock
cld
xor
xchg
pop
call
incb
popf
cmp
sahf
xor
cmp
sub
add
xor
test
int
outsl
push
inc
into
test
incl
sbb
add
adc
jle
cmp
test
decl
lock
mov
add
into
nop
aas
cmp
jmp
cwtl
loopne
test
adc
or
leave
xchg
add
and
mov
adc
mov
or
and
push
xchg
rcr
inc
aaa
add
addr16
insl
enter
cmp
int
pop
test
add
dec
dec
jo
mov
inc
add
pop
adc
sbb
lock
out
xchg
or
jno
xchg
jo
jns
out
mov
aaa
lea
mov
add
repnz
jg
loopne
leave
mov
jbe
add
cs
mov
sub
pop
mov
shll
idiv
aas
loope
ljmp
sti
mov
add
sub
call
aaa
and
repz
add
jp,pt
mov
cwtl
mov
dec
inc
loop
add
xchg
pop
test
jno
lret
dec
adc
cmpsb
mov
iret
lods
js
test
push
pop
movl
push
test
push
sbb
dec
mov
clc
decl
add
daa
dec
xchg
dec
add
jg
jge
pop
xor
adc
cwtl
lcall
inc
inc
sub
xchg
push
loope
mov
pusha
jmp
sub
fildl
jb
mov
loopne
rorb
dec
xchg
lods
fwait
xchg
lret
and
dec
andl
mov
jmp
xor
pusha
insl
jp
int3
imul
test
stos
mov
push
pop
sub
cmp
sub
cmp
or
shrl
pushl
mov
inc
in
xor
pop
inc
dec
jg
jb
add
or
outsb
xchg
ljmp
clc
jne
in
xchg
pop
into
cmpb
pop
js
arpl
push
cld
aam
ds
push
and
stos
add
lock
mov
push
inc
or
push
loope
lea
mov
ss
fnsave
iret
lods
xchg
xor
or
aaa
mov
sub
inc
dec
add
push
loop,pt
jg
pop
or
adc
push
pop
addb
rcll
cmp
lea
mov
cld
leave
and
mov
clc
mov
call
andb
mov
call
xchg
cwtl
loope
or
insl
and
je
mov
aas
mov
add
pop
sub
fwait
push
in
and
rorl
incl
xor
mov
jbe
xchg
into
enter
add
xchg
call
movsl
jle
and
inc
lock
lock
xor
incl
fldl
in
cltd
inc
stos
dec
pop
mov
xor
mov
loopne
sahf
outsb
aam
andb
sbb
decl
das
mov
jmp
inc
xor
push
push
scas
lock
sbb
lods
out
out
pop
popa
or
js
jb,pt
jmp
dec
cmpsb
lcall
sbb
fistpl
rcrb
cld
push
int3
xor
add
pop
rcrb
mov
sub
and
mov
aas
out
popf
das
icebp
jmp
sub
mov
mov
es
xlat
popf
lods
incl
or
jg
out
jecxz
dec
and
mov
cmp
out
sub
jmp
leave
or
mov
inc
push
adc
jmp
out
push
mov
and
mov
jns
cwtl
inc
cmp
std
inc
fsubs
lea
adc
dec
nop
lcall
cmp
add
pop
or
outsl
repnz
sub
xor
jne
cmp
xchg
out
stos
mov
arpl
push
mov
xorb
nop
pop
cmp
jo
out
or
aad
and
enter
sub
pop
xor
fists
xchg
daa
sahf
sbb
cmc
stc
push
test
sub
dec
sub
jns
fcmove
decl
xchg
fdivrl
rcll
xchg
sbb
negb
call
dec
mov
ss
aam
mov
jns
rcll
call
jb
subb
in
loop
ss
lcall
notl
or
fs
adc
mov
addl
cwtl
mov
xchg
push
mov
and
xchg
inc
nop
mov
mov
sbb
mov
andl
xchg
mov
or
or
int
daa
xchg
ds
xor
cmp
push
xor
jmp
icebp
jg
sahf
out
leave
push
aad
mov
mov
clc
out
cli
xor
add
dec
inc
outsl
imul
pop
push
clc
ds
fucom
out
mov
rcr
rclb
stos
sub
mov
jne
mov
pop
lcall
or
push
pop
push
js
pop
data16
xchg
lret
or
mov
sbb
xor
dec
add
xor
stc
mov
add
dec
stc
cld
pop
sub
outsl
scas
icebp
mov
sbb
mov
cs
cmp
sbb
pop
sub
add
push
mov
add
push
mov
int
xchg
sub
add
aaa
push
xchg
or
cld
pushl
mov
dec
push
enter
xchg
push
and
fbstp
lahf
inc
inc
inc
imul
pop
fwait
sub
jne
fsubl
pop
fistpll
push
es
stc
adc
pop
ljmp
in
lock
cmpsl
mov
and
test
jg
nop
addl
movsb
aad
sub
add
js
aam
xchg
push
push
pop
mov
sub
push
mov
jb
movsl
rolb
pop
aas
iret
iret
mov
push
or
sub
les
pop
std
fstpt
adc
mov
jns
mov
push
jge
pop
push
dec
ljmp
inc
test
cmp
sub
push
dec
inc
scas
inc
cmp
dec
push
push
mov
xor
pop
insb
outsb
pop
sbb
push
loopne
out
aas
jne
adc
test
sbb
push
lcall
inc
pushf
lahf
push
add
cld
lret
stos
into
js
push
cmp
sbb
jg
jmp
and
lock
xlat
and
sbb
xchg
mov
pop
sbb
pop
inc
repz
fwait
hlt
les
adc
pushl
pop
sahf
loope
jbe
popf
test
dec
negb
gs
stos
pop
add
cmpsb
xor
xbegin
xchg
out
aaa
xor
cmc
push
jb
xchg
xor
push
fnsave
sbb
into
cmp
and
jle
cmp
rolb
clc
les
ffree
jg
push
outsb
test
add
sbb
mov
mov
push
icebp
mov
test
xlat
pop
loopne
lods
das
pop
add
cwtl
fwait
lock
iret
xor
les
aam
add
xchg
out
sub
out
pushf
push
push
hlt
decl
js
add
dec
jg
or
fisttpl
push
and
icebp
stc
jb
or
adc
jbe
inc
cld
ret
popa
pop
in
loop
mov
and
push
enter
leave
add
ds
orl
mov
std
incl
fcoms
sub
insl
movsl
sahf
push
lea
movb
sub
into
jge
cmc
cli
jbe
sbb
mov
into
movb
jecxz
add
divl
mov
fadds
clc
sub
xchg
xchg
cwtl
out
clc
aaa
push
rorl
pushf
sub
loop,pn
cmp
adc
lret
pop
lret
add
push
loope
cld
cmpsb
push
lret
inc
and
and
loop
or
mov
fisubs
adc
adc
add
ret
xor
or
mov
or
fnstsw
in
add
mov
icebp
xchg
and
movsl
xor
or
push
jle
jmp
cmp
incl
sbb
popa
loope
adc
fwait
mov
sub
lock
sahf
unpckhpd
sub
jb
cmc
cld
scas
decb
dec
push
mov
movsb
jno
fistps
or
adc
lock
inc
clc
jmp
movzbl
add
or
stc
fisttpll
in
shl
popf
scas
repnz
movsb
pop
push
or
nop
fdivrs
mov
pop
jg
mov
xchg
or
cmp
xor
clc
push
push
push
jo
pop
loopne
mov
mov
or
ss
aam
aaa
sbb
dec
sbb
mov
movb
hlt
scas
push
cmc
push
ljmp
sarb
repnz
mov
fwait
jge,pn
push
xchg
mov
sub
ja
jecxz
xorb
jmp
mov
dec
adc
xor
divb
sub
cwtl
ret
jl
movsl
call
push
inc
jle
je
adc
add
loop
mov
ffree
push
sub
aas
push
decl
pusha
mov
xchg
loopne
lods
cli
mov
mov
mov
cmc
jbe
adc
push
in
scas
cli
scas
pop
xchg
pop
xchg
js
aas
jg
adc
and
inc
and
add
pop
movsl
jmp
and
cmp
mov
gs
adc
xor
and
cmp
roll
bound
xchg
pop
test
fmull
pushf
dec
cmp
jg
in
xlat
and
add
clc
and
add
jg
push
es
push
mov
setle
test
inc
lods
addps
jbe
push
cwtl
rcrb
adc
fisttpl
xor
int3
inc
jg
ljmp
jbe
mov
lret
inc
xor
movsb
bound
pop
mov
pop
ss
subb
push
jno
xchg
enter
lods
ljmp
call
mov
test
dec
stos
testb
cmp
ljmp
pusha
jle
cmp
icebp
clc
cmp
cmp
xorl
add
fdivl
test
clc
mov
cmpl
int3
aas
mov
xlat
insb
inc
lods
sub
sub
or
mov
push
rol
mov
push
jbe
add
scas
cli
cmpl
aas
lods
loope
and
jecxz
fidivrs
std
xchg
or
push
inc
sarl
stc
xor
sbb
arpl
dec
xor
add
mov
std
jge
cmp
fldcw
pop
clc
in
add
lods
mov
xor
fcoml
add
xchg
add
push
xchg
pusha
das
cld
jmp
sbb
ss
xchg
inc
std
jae
in
push
faddl
daa
sar
cmpsb
jmp
decb
add
and
xor
inc
cmp
cmp
es
call
sub
xchg
xor
adc
sti
add
add
cwtl
or
divb
push
pop
and
xor
and
cld
xchg
pop
iret
and
int3
jae
sbb
push
cld
es
popa
xchg
push
addb
jge
imul
pop
mov
adc
addb
hlt
push
mov
fdivrp
mov
cmp
push
mov
add
sbb
push
sbb
andl
mov
into
sub
pushf
add
mov
and
cmp
out
rcrl
test
js
add
xor
sti
jb
daa
xchg
jns
xorl
dec
in
mov
cmc
repnz
fucompp
out
test
cmp
jo
cmpsb
mov
in
mov
sub
and
add
pop
push
clc
add
pop
adc
pop
sbb
and
adc
pop
jo
lea
or
dec
and
push
or
ja
loop
fs
outsl
cli
inc
fcompl
xchg
push
clc
xchg
in
addb
cmpsl
pushf
mov
mov
clc
stc
xchg
cli
loopne
mov
test
cmp
loopne
data16
inc
jg
movl
je
sbb
icebp
mov
add
pop
and
test
jo
xchg
cld
loop
incl
push
or
rcll
mov
add
add
sub
dec
xor
add
pop
jle
xor
addb
movsl
aas
sbb
mov
fistpl
and
or
jb
sbb
inc
sahf
call
jle
mov
cld
jp
outsb
sub
xchg
pop
negb
xor
jg
add
inc
out
stc
sub
xchg
repnz
add
nop
push
into
add
and
push
mov
mov
mov
mov
lea
cmpsl
jmp
xchg
faddl
stos
cli
inc
data16
lret
out
add
shll
and
ret
jg
pop
push
pop
sbb
out
add
mov
cmc
jg
fsub
dec
add
mov
xor
add
inc
add
inc
and
fbstp
cwtl
sub
add
int3
ss
mov
dec
mov
inc
mov
pop
lds
in
rcl
mov
mov
add
dec
jmp
add
add
push
xchg
stos
jno
pop
push
xchg
clc
pop
add
mov
and
adc
mov
inc
pop
decb
inc
fs
decl
adc
cmp
in
push
sahf
pop
lock
cmpsl
jne
cs
sahf
lcall
xor
inc
ljmp
test
cmp
scas
shl
mov
int
xchg
lahf
add
mov
jo
addr16
into
add
dec
loop
jg
jbe
fisttpll
xlat
in
add
mov
aam
dec
bnd
jo
incl
ss
unpcklps
jae
mov
jo
sub
add
stos
xor
push
adcl
gs
fs
and
push
div
add
adc
inc
cmc
and
mov
xor
jno
out
pop
rcrl
push
pop
mov
sbb
push
pop
add
add
or
add
sbb
or
or
sarb
fcoml
pop
hlt
dec
adc
sbb
test
std
add
inc
or
mov
call
fmull
mov
xchg
mov
add
addr16
lcall
inc
sti
ja
xchg
and
xchg
dec
fistl
xor
fidivrl
or
inc
mov
jecxz
bound
lahf
ljmp
cmp
sbb
fidivl
rorb
outsl
xor
add
dec
inc
or
mov
or
roll
rcr
bound
lea
outsl
ljmp
into
dec
and
jbe
mov
or
cli
lcall
imul
ffreep
scas
ret
ljmp
adc
mov
rclb
xor
add
loope
add
and
in
push
scas
add
les
gs
push
ficoml
pop
sbb
cmc
jmp
jecxz
mov
push
inc
daa
lods
dec
add
sbb
call
cwtl
jo
jae
gs
jo
roll
lret
add
std
clc
aas
ret
cmp
insb
add
fs
push
mov
xchg
dec
scas
push
cmpsb
js
loope
or
out
mov
repnz
sarb
lcall
adc
jo
and
mov
mov
mov
pop
adc
cmp
or
stc
jl
xchg
pop
dec
js
pusha
add
decl
push
movsb
xor
jp,pt
test
inc
mov
shll
dec
add
mov
fcomps
mov
mov
ljmp
mov
repnz
pusha
mov
add
sbb
mov
mov
lock
and
adc
push
adc
rcrb
dec
and
add
fmull
add
test
sub
loop
mov
cs
lcall
sti
and
cmp
cmp
mov
xchg
daa
push
pop
and
or
cli
mov
xchg
or
outsl
mov
sbb
test
mov
scas
inc
stos
lock
ja
dec
cmp
aaa
arpl
lods
lea
adc
scas
icebp
push
in
sbb
repnz
insb
cmp
out
iret
xor
ja
and
or
call
mov
inc
loopne
ret
add
pop
hlt
in
je
or
in
and
inc
scas
negb
jbe
pop
mov
lret
jg
nop
stc
jl
inc
adc
sahf
xchg
stc
push
or
incb
loopne
loopne
ret
rorb
pop
or
lock
or
test
mov
pcmpeqd
mov
xchg
stc
or
pop
aaa
cmpsl
int
pop
adc
dec
push
add
xchg
xchg
sbb
pop
out
lea
xor
sbb
xchg
pop
jo
cvtdq2ps
lret
dec
push
cld
int
pop
inc
sub
and
pusha
cmp
jmp
sub
jb
inc
pop
mov
paddsw
in
mov
cmpsl
or
ret
dec
sbb
movl
sbb
mov
add
icebp
jmp
cmpl
xor
rclb
icebp
inc
sbb
cld
and
jp
mov
std
pop
clc
dec
or
in
je
es
cmp
or
add
push
ror
sti
stc
fimull
push
pop
aas
push
jo
mov
into
xor
add
cli
rcr
ret
adcl
xchg
sahf
jbe
push
dec
pop
loope,pt
push
cli
test
in
cmp
mov
or
nop
out
repz
aam
jl
adc
cmp
test
ret
testb
je
xchg
and
jp
movsl
mov
roll
or
adc
ljmp
xor
jle
pop
mov
test
xor
jae
test
sub
adc
cmp
inc
pushl
data16
mov
addr16
repnz
mov
hlt
arpl
jno
add
fmuls
push
bound
push
pop
call
push
stos
test
iret
push
daa
pop
push
pop
add
xchg
repnz
and
movsl
and
lcall
push
outsb
negl
or
in
cmp
or
push
test
decl
insb
ret
add
sub
movsl
test
sub
mov
insb
cmpsl
fs
xor
cmp
pushf
jecxz
xlat
and
add
mov
cli
shrl
pushf
add
push
mov
addr16
jno
add
imulb
mov
push
sub
push
mov
mov
cli
mov
cmc
push
jge
mov
add
push
and
outsl
ret
lods
sub
push
fisttps
lods
cmp
cmpsl
cmpsl
xchg
sbb
addl
clc
imull
mov
dec
cli
jg
ret
cmp
dec
cmp
xor
xor
add
pop
sbb
scas
xchg
mov
xchg
add
pop
add
mov
push
jecxz
adc
sub
pop
movsb
and
mov
mov
dec
rcll
rcrb
cli
add
mov
sub
pop
hlt
ljmp
stos
repz
lds
jb
cltd
jge
int
cmp
sub
into
ljmp
stos
ret
xchg
jns
sub
xchg
pop
scas
movsb
sahf
sub
popf
mov
sub
mov
jg
decl
cmp
clc
mov
lahf
scas
js
sub
je
inc
loop
inc
data16
test
sbb
arpl
daa
cmp
dec
adc
mov
dec
aaa
loopne
inc
mov
xchg
cmp
mov
ficomps
cmp
sbb
and
push
pop
mov
out
xchg
scas
sbbl
call
or
cld
pop
inc
test
daa
lret
scas
fidivrl
mov
cmp
rolb
sbb
pop
ja
mov
test
int3
je
rcll
mov
pushw
pop
fcmovu
xchg
jge
aam
imul
cmp
or
ret
repnz
lds
push
xor
sbbb
push
and
clc
aam
dec
mov
into
into
shrl
mov
loop
inc
mov
std
into
mov
cld
mov
cmc
shlb
call
aam
push
xor
or
adc
mov
data16
mov
pop
gs
jae
dec
add
jmp
dec
sub
add
push
lret
pop
outsl
add
sbbb
mov
scas
pushl
cld
test
imul
inc
push
sub
hlt
pop
mov
push
insb
shlb
out
mov
daa
xor
mov
add
dec
jg
stos
jb
inc
sti
push
test
loop
in
or
cmp
cmp
dec
scas
cmpb
or
dec
std
leave
inc
add
xor
xchg
add
and
dec
dec
push
arpl
ret
movsb
pop
andb
cmp
add
jg
jg
jb
xor
cmp
xchg
dec
xor
sbb
xchg
or
and
mov
roll
inc
push
mov
push
push
jg
das
inc
lock
decl
sub
jns
add
cmp
mov
fidivs
fldl
aas
shr
sub
xchg
movsb
push
adc
pop
add
in
add
gs
lock
add
enter
lods
xor
shlb
repz
or
pop
mov
add
stos
loop,pn
dec
xor
ja
addr16
rorl
xchg
sbb
adc
pop
pushf
mov
mov
movsb
in
test
xchg
jno
dec
cs
mov
enter
dec
popa
inc
ja
and
sub
pusha
leave
lahf
sbb
leave
or
movsb
icebp
sub
sub
fwait
inc
fidivrs
add
lcall
pop
inc
pop
mov
stos
mov
aaa
rcrb
fimull
pop
add
pusha
inc
mulb
add
data16
adc
cmp
pop
inc
cli
inc
jle
push
push
test
stc
mov
and
jae
insl
mov
movb
cld
jno
bound
std
adc
or
or
nop
inc
mov
sbb
pushl
call
mov
lock
push
jns
or
call
scas
test
es
adc
fidivrl
push
pop
es
cwtl
dec
dec
insl
xor
push
inc
sub
outsb
adc
add
inc
sbb
dec
aam
rclb
add
jg
shlb
pusha
mov
adcb
iret
clc
sbb
loopne
sahf
sbb
aam
ret
mov
push
sbb
popf
xchg
mov
and
sub
mov
xchg
rcrb
mov
xchg
stc
adc
cmpsl
leave
outsb
xor
add
push
sahf
mov
xchg
or
inc
add
stos
ds
sub
ficomps
inc
jecxz
inc
push
outsb
icebp
enter
sub
pop
test
add
pmuludq
dec
je
dec
pusha
mov
inc
lahf
adc
cmc
lock
scas
fnsave
adc
iret
movsl
mov
popf
ret
inc
hlt
add
dec
mov
out
dec
out
inc
sbb
inc
inc
ret
add
and
xchg
dec
shll
add
push
das
fcompl
repnz
dec
pop
sbb
inc
out
or
push
in
mov
aas
mov
push
push
test
scas
in
inc
or
daa
mov
scas
fcoms
mov
stos
xor
aam
mov
xor
inc
cmp
push
mov
and
adc
push
lcall
hlt
jle
iret
jbe
je
dec
out
add
fists
push
mov
inc
jl
daa
aam
cmpl
test
add
jl
stos
in
lods
insb
mov
imul
cmpb
lret
aas
or
cld
cmp
jne
inc
loope
and
push
fwait
addr16
stos
pop
dec
sbb
dec
lcall
or
push
cli
or
and
jmp
and
or
adc
and
arpl
or
ljmp
cmpsb
ljmp
movsb
fisttps
adc
es
and
test
xorb
decl
in
jp
int
sbb
ficompl
adcb
mov
decl
xchg
inc
rorl
std
xchg
xchg
push
stos
dec
cmpb
add
sub
ljmp
cmpl
test
or
pop
sub
inc
inc
dec
add
adc
mov
clc
or
cmp
xchg
mov
xor
sgdtl
ffreep
hlt
ja
cli
aas
repnz
adc
adc
in
push
pop
xchg
or
mov
dec
push
sub
mov
pop
mov
rorb
jbe
xor
lock
push
clc
add
xorl
clc
sub
pusha
mov
lock
sub
xchg
add
mov
fs
push
add
inc
shrl
xchg
push
xchg
lock
incl
xchg
pop
push
jb
inc
jp
mov
add
jo
cli
loopne
and
std
sqrtps
add
mov
inc
dec
arpl
aad
outsb
subb
push
jp
and
mov
cld
clc
test
out
bound
lods
and
push
clc
push
inc
mov
sub
pop
mov
or
hlt
add
std
add
loop
dec
test
add
mov
dec
cld
roll
xor
cmp
lea
daa
scas
cld
jg
cli
nop
movsb
jmp
inc
cmp
sub
fldl2e
pop
mov
pop
jl
or
sub
mov
out
sub
lock
cmp
rorl
pop
and
jo
inc
or
inc
shll
and
adc
and
fucom
cmpb
nop
cmovbe
mov
fisttps
add
sub
xor
ret
mov
outsb
xor
incl
loope
movsl
in
inc
xor
scas
jmp
sub
icebp
repnz
mov
dec
cli
lahf
mov
pop
mov
clc
outsl
inc
push
loopne
addl
adc
mov
shll
pop
fistl
test
ret
mov
adc
mov
jbe
adc
dec
repnz
hlt
ss
sub
pop
loopne
mov
cmpsb
test
push
inc
push
dec
jp
stos
sub
ret
jae
mov
xor
enter
js
inc
fadds
scas
hlt
or
adc
lea
inc
das
and
add
fstl
mov
ds
or
or
or
insb
imulb
and
repz
add
inc
cmc
sahf
ret
add
aaa
add
inc
add
cmpsb
out
stos
fldl
data16
inc
les
test
clc
mov
mov
shl
sbb
decb
js
push
repz
mov
push
repz
pop
mov
arpl
inc
push
adc
aam
push
sti
jae
insl
lods
jnp
sbb
sub
add
arpl
sub
inc
loopne
xchg
and
sbb
xchg
dec
pop
dec
mov
sub
outsl
push
fsubl
mov
out
xor
jg
inc
jae
lcall
ret
mov
cmp
icebp
fucomip
movsb
fdivl
mov
loopne
test
and
jo
jo
fnstcw
or
enter
insb
cwtl
xchg
repz
mov
nop
dec
loopne
jnp
xchg
iret
xchg
push
push
stos
std
cltd
jecxz
roll
xchg
mov
sbb
fcmovne
and
adc
xorl
lret
cmp
fwait
xchg
rcrb
mov
or
push
and
and
xchg
inc
bound
inc
mov
push
data16
xor
test
and
or
into
and
sahf
push
xchg
jle
addr16
cli
push
inc
xlat
stos
pop
dec
or
jbe
jge
inc
dec
cmp
stc
lods
mov
pop
cmpsl
jb
dec
cmp
mov
pop
adc
or
popf
icebp
nop
inc
push
mov
jp
inc
fldl
pop
imul
sub
mov
lahf
aad
sbb
cltd
into
fbstp
popa
adc
fcomip
and
cwtl
xlat
mov
dec
lds
or
ja
ret
decl
pop
push
and
sub
mov
shrl
fs
adc
xor
arpl
icebp
lcall
sub
or
push
mov
and
cmp
and
fs
inc
out
scas
inc
ljmp
jno
cli
enter
push
ret
arpl
dec
inc
mov
movsb
sbb
pop
loopne
add
and
in
or
jp
sahf
sbb
fisubl
sti
fildll
js
movb
dec
negb
clc
fstpt
es
rclb
xor
loopne
insb
and
push
pop
lods
cld
xchg
das
jbe
jecxz
add
cmpsl
fisttps
jg
in
icebp
fnsave
pop
sub
in
or
clc
mov
mov
pop
or
dec
push
loopne
in
sub
push
xchg
lea
nop
cmp
aam
aam
sbb
sbb
sub
sbb
cld
cs
mov
inc
sub
pop
jg
outsb
mov
fbld
sbb
or
jb
inc
test
lcall
mov
pop
dec
cmp
xchg
arpl
mov
xor
dec
cli
fists
xchg
fistpl
fcmovnb
lock
cmp
decl
ret
jne
test
outsl
lock
sub
push
pop
xchg
sahf
test
jle
mov
into
mov
pop
xchg
daa
call
xor
push
jns
or
cmp
test
add
push
push
es
testl
js
push
push
andb
adc
movsl
bnd
sbb
add
lods
lock
fcos
cli
mov
shlb
push
sbb
cmpsb
rcrl
fimuls
loop
adc
fidivl
sbb
add
cltd
mov
mov
push
sub
dec
sbb
cmp
jno
add
popl
adc
dec
sub
bound
and
inc
cmp
imul
test
xor
and
ss
inc
pop
mov
outsb
test
mov
out
ljmp
cli
sahf
pop
cmp
mov
jle
int3
loop
std
pop
pop
lcall
pusha
scas
cmp
pop
adc
lods
or
arpl
fisubrl
shrl
jns
subb
clc
call
aam
or
orl
or
inc
xor
cmpsl
sub
fildll
cs
lret
and
mov
addl
andl
fisubs
xchg
test
push
cmpsl
inc
pop
cld
add
lret
popa
or
xor
fwait
mov
lahf
pushl
rorl
xchg
push
sub
rcrl
in
add
pop
es
push
cld
lcall
pop
call
mov
and
std
jecxz
pop
cmp
push
dec
inc
jmp
pusha
es
xor
loopne
add
subl
xchg
pushf
add
scas
shll
loopne
test
insb
xchg
jecxz
jp
lahf
jmp
mov
icebp
pop
add
dec
push
jecxz
nop
sbb
scas
cs
in
inc
gs
aad
dec
adc
hlt
mov
mov
mov
stc
jns
mov
loop
dec
loopne
fdivr
loopne
jmp
cli
sub
subb
out
js
call
add
clc
rcrb
cs
inc
mov
inc
cli
push
ljmp
out
add
std
xlat
xor
movsl
es
ja
and
mov
mov
idiv
loopne
ljmp
inc
and
in
and
loop
loope
xchg
ljmp
xor
lods
add
das
sar
add
and
pop
xchg
xchg
push
mov
xor
jmp
xchg
mov
lods
adc
mov
sub
ja
sbbb
dec
call
aad
jle
cld
fldcw
fisubrl
inc
in
add
mov
mov
je,pn
jp
scas
xchg
jge
sbb
lcall
xor
cmc
stos
inc
dec
clc
nop
add
inc
loopne
jp
pop
aam
popf
in
clc
pop
inc
loope
lods
in
xor
fs
adc
nop
scas
jg
fcomip
lcall
ret
mov
xor
rcrb
decl
lods
les
pop
mov
mov
lods
mov
add
insl
aas
dec
pusha
xor
arpl
loopne
ljmp
clc
inc
imul
lock
imul
sub
icebp
mov
test
jmp
mov
cmpsb
pop
xor
sub
sub
mov
mov
ljmp
jb
push
insl
jmp
jge
out
out
popl
lods
in
adc
push
sti
dec
mov
mov
popf
xchg
fcoml
cli
cmpsl
lds
push
jo
fwait
mov
xchg
sbb
adc
sub
je
into
dec
push
pop
hlt
add
in
cs
psllq
jg
aas
jmp
out
in
imul
outsl
js
push
ret
mov
add
add
sbb
push
scas
cwtl
inc
adc
adc
dec
xor
mov
dec
test
rol
mov
aad
incl
sbb
daa
cmp
jae
and
std
arpl
addb
ljmp
xor
cli
pop
stos
xor
jg
cld
jg
out
sub
push
add
shrl
in
add
sbb
inc
add
mov
pop
enter
jmp
mov
adc
filds
adc
and
and
adc
ljmp
iret
mov
insb
ljmp
sub
data16
leave
dec
add
jae
out
jecxz
add
add
mov
mov
or
loop
outsl
call
fwait
cs
loop
pop
aad
add
mov
dec
das
rcll
inc
fdivp
add
inc
or
int3
jmp
sub
add
out
adc
adc
loopne
aas
dec
dec
sub
scas
pop
jle
jmp
stc
or
ja
push
pushl
test
out
xor
push
dec
rcl
cmpsb
pop
stos
arpl
fdivrs
and
cmp
mov
sbb
scas
bound
les
ja
mov
movsl
stc
dec
test
loop
cld
call
inc
push
pop
pop
inc
sub
ljmp
cli
inc
or
in
add
push
into
jbe
xchg
and
add
sar
lcall
adcb
mov
and
lds
xchg
sti
sub
pushf
loop
and
addr16
jae
and
das
jl
loopne
popf
add
les
mov
rcl
mov
add
xchg
push
xor
jle
fldenv
fiadds
and
push
add
fistpl
mov
lahf
inc
push
mov
in
jg
nop
sub
jne
lret
xchg
loopne
divb
outsl
lods
aas
and
xor
cmp
mov
dec
pop
clc
xchg
inc
imul
and
outsl
or
xchg
jo
or
imul
pop
leave
jnp
repz
pop
loopne
lret
inc
in
xchg
jge
inc
aad
add
and
mulb
cmc
in
insb
fildl
adc
mov
and
adc
or
cmpl
ljmp
lret
push
mov
outsb
add
xchg
das
mov
and
adc
in
mov
sahf
sbb
movb
stos
xor
pushl
push
cmp
call
mov
ljmp
sbbl
add
pop
pop
pop
shl
fs
push
scas
add
pusha
dec
int
hlt
shr
popa
dec
mov
add
icebp
push
stos
xor
fists
push
pusha
dec
push
cmp
and
int3
sub
mov
inc
shr
loopne
add
out
mov
cmpsl
faddl
out
push
mov
fcomp
outsb
imul
push
or
push
adc
into
lock
fnstenv
add
test
jge
aam
stos
dec
push
idivb
nop
and
push
lret
rcrb
outsl
and
sbb
ds
loop
sti
fistpl
jns
ljmpw
xchg
pop
sub
icebp
sbb
and
add
jp
movsb
leave
frstor
jns
call
xchg
cltd
and
rolb
inc
popf
and
pusha
fs
stos
push
push
or
dec
pop
in
rcll
ret
mov
daa
rclb
mov
and
push
jecxz
jbe
sbb
test
dec
sub
mov
das
sub
adc
push
adc
xchg
cmp
je,pt
test
aaa
fidivs
push
dec
aaa
std
or
mov
pop
sbb
dec
or
jge
clc
mov
les
shrl
mov
jmp
inc
push
mov
in
dec
in
mov
out
push
mov
and
hlt
imul
mov
jg
lcall
les
or
cmpsl
jno
shl
adc
sub
mov
ljmp
add
pop
mov
aam
mov
decl
sbb
iret
adc
and
enter
mov
push
cmp
pusha
mov
and
mov
fs
inc
inc
or
mov
inc
push
fucomi
sti
int3
outsb
ljmp
das
cmp
shrb
lods
push
mov
cltd
das
aad
aaa
sbb
mov
cmp
ret
sub
jno
xor
or
dec
adc
sub
sub
pusha
inc
xor
and
inc
pop
rclb
imul
sbb
mov
adcb
adc
out
sub
in
pop
mul
cmp
dec
aam
xchg
sbb
sbb
xor
and
xor
push
insl
inc
mov
dec
adc
test
dec
ja
add
xor
or
inc
cmpsl
xchg
sub
push
adc
jmp
jge
data16
es
add
cwtl
fcomp
jb
int
rolb
sbb
stos
xor
jns
sub
xor
das
mov
stc
mov
push
out
das
ds
jbe
sar
hlt
cmpsl
cmp
inc
xchg
adc
mov
mov
aas
das
out
cwtl
sbb
sub
repz
inc
push
dec
in
push
fidivl
jne
icebp
loopne
or
jp
jmp
sbb
out
test
rcl
push
stos
sbb
dec
jmp
mov
pop
add
jle
clc
push
xor
push
inc
sub
les
jae
push
subb
dec
xlat
shr
add
mov
mov
jp
dec
cmc
les
add
xor
mov
pop
xor
pop
inc
fwait
mov
repnz
dec
pop
pusha
ret
push
mov
test
and
and
fdivrp
jo
vmovaps
pop
dec
adc
scas
mov
add
hlt
mov
push
add
cwtl
fadds
cwtl
cli
xchg
out
ljmp
add
sub
inc
js
scas
pusha
push
test
cmc
sbbb
cs
add
es
add
xor
loopne
pop
push
cmc
cltd
sbb
push
fbstp
mov
ret
incl
mov
sahf
push
push
loopne
pop
outsb
mov
lods
or
cltd
inc
stos
int
imul
rorl
dec
insb
int
negl
cmpsl
movsb
inc
push
fsubl
aad
lock
sahf
insl
xchg
mov
inc
mov
jb
or
lret
ret
jg
ss
adc
push
adc
movsb
xor
add
dec
bound
jmp
int3
ljmp
out
add
sarl
sbb
or
enter
inc
xchg
inc
jne
add
roll
out
mov
fstps
lock
ljmp
xchg
adc
push
add
scas
push
sbb
jmp
add
fildll
jecxz
and
ds
jl
jg
jmp
lret
bnd
lret
stos
pop
enter
sbb
or
aad
subl
pushl
aaa
mov
inc
ret
adc
mov
adc
ljmp
movsb
popf
push
insl
add
inc
mov
push
mov
jo
adc
call
shr
call
das
cmpsl
das
mov
ljmp
movsl
add
pop
clc
rorb
sarb
jb
clc
shlb
and
add
cmp
arpl
xor
test
shrl
aaa
inc
xor
testl
mov
push
xchg
xor
fldcw
sti
cwtl
pop
in
mov
dec
xor
add
add
enter
mov
inc
or
stos
sub
xor
gs
push
subl
dec
mov
jns
xchg
jns
mov
sbb
rol
push
hlt
in
add
insb
cmp
nop
mov
dec
divl
dec
leave
je
aam
mov
jp
mov
lock
cmpsb
add
loopne
test
mov
add
fistpll
cmp
mov
mov
xchg
out
cmp
adc
xchg
mov
es
loopne
cmp
call
popf
into
roll
test
es
insb
gs
imul
and
hlt
pop
inc
adc
or
or
jecxz
fmul
insb
inc
addb
popf
jnp
test
roll
dec
in
sar
fnsave
dec
jle
je
jl
xchg
cmp
xchg
mov
std
addb
xor
shl
sar
mov
inc
aam
test
sbb
mov
fcmovnbe
cmp
out
das
test
mov
imul
inc
dec
push
hlt
and
xlat
sbb
aam
adc
cmpsl
dec
jle
lds
cmpsb
add
imul
mov
out
pop
cmc
lea
adc
push
xor
cwtl
dec
dec
mov
in
sub
add
dec
or
mov
hlt
sbb
jg
fbstp
xor
in
mov
push
sbb
mov
adc
ljmp
repnz
stc
fisubl
clc
dec
std
mov
cmp
push
pop
leave
xor
pushf
out
das
jg
mov
loop
sub
mov
xor
mov
xchg
sbbl
mov
inc
outsl
loope
inc
mov
hlt
or
adc
outsb
jo
insb
fldenv
into
and
xchg
in
add
icebp
in
lea
pop
inc
mov
rep
inc
pop
add
pop
int
subl
fcoms
lahf
lea
ud0
movsb
cmp
mov
pop
hlt
js
cmp
xchg
mov
push
push
ds
call
add
stos
test
sub
ficoml
cmc
clc
dec
imul
mov
outsb
iret
mov
fbstp
xor
inc
cli
icebp
push
or
clc
jecxz
mov
add
jmp
mov
mov
add
test
pop
scas
stc
sbb
repz
adc
jmp
pop
adc
lret
sti
sbb
nop
fidivs
cmp
jecxz
lods
jp
test
jo
call
movsl
vcvtsi2sd
aad
aad
pushf
test
sbb
xor
mov
jb
sub
mov
test
push
out
popf
orl
add
andb
std
pop
hlt
imul
clc
push
ret
pop
loope
push
nop
mov
dec
sbb
stos
ret
pop
cmp
jo
in
adc
icebp
loopne
adc
aad
xchg
cmp
xchg
mov
push
outsl
js
dec
mov
lahf
mov
xlat
push
ss
and
je
ficompl
mov
outsl
sub
cmpsl
loopne
out
in
fildl
insl
mov
mov
insb
jmp
add
xlat
sub
ret
jp
pop
mov
pop
push
add
mov
inc
mov
rorb
ret
rep
int
push
pop
je
dec
pop
xor
pop
add
add
and
mov
push
outsl
loopne
jmp
push
adc
pop
std
inc
out
pop
lds
fiaddl
mov
rolb
xor
push
mov
jp
pushf
xchg
sahf
stos
jmp
mov
das
inc
sbb
adc
dec
iret
mov
sahf
xor
or
pop
stc
mov
xor
pop
push
stos
mov
out
xor
xor
arpl
ss
enter
dec
sbb
pop
in
lcall
outsl
jb
dec
cmp
adc
add
mov
sarb
outsb
insb
jmp
sbb
add
mulb
cmp
sub
push
xchg
mov
add
gs
inc
scas
push
push
add
rorl
sub
aam
jno
xor
cmp
mov
je
int
sti
lods
xor
mov
call
inc
in
shll
and
add
xchg
xchg
sub
adc
adc
mov
xchg
jp
std
jg
inc
inc
sbb
sub
jl
shlb
lret
xchg
ljmp
add
add
mov
dec
add
jns
aad
movsb
jle
jnp
jae
pushf
shl
pop
push
pop
lock
xor
hlt
cmp
mov
pop
push
inc
xchg
ret
jmp
jecxz
ss
sub
test
ljmp
cli
jge
ficomps
ffreep
jb
fcmovne
jb
loope
aaa
pushl
fwait
mov
xor
cld
jg
xchg
add
test
inc
cmp
andb
xchg
lds
pop
hlt
das
clc
ljmp
jge
arpl
pop
inc
push
addb
push
or
fidivrl
fsubl
aaa
ret
lock
lds
outsl
sarl
incl
call
push
sub
add
add
mov
cmp
lahf
lcall
in
js
or
das
pop
add
jno
and
and
inc
add
loop
cli
cltd
mov
pop
fwait
add
js
push
sbb
push
test
or
adc
mov
test
add
pusha
stc
inc
or
ss
and
out
lods
lods
inc
mov
mov
sbb
call
xchg
sahf
xchg
add
cmp
jmp
std
stos
mov
and
and
out
fisttpll
lods
xor
xor
out
push
jle
jbe
les
jl
pop
sidtl
cmp
mov
pop
mov
and
jne
pop
roll
mov
push
jle
popa
mov
add
bnd
cmp
xchg
aam
pop
loopne
mov
add
jns
mov
or
mov
jp
and
adc
xchg
data16
loope
jnp
mov
sub
fstpl
push
in
call
push
push
pop
mov
dec
iret
xor
add
push
dec
and
add
add
mov
js
jge
mov
inc
out
mov
fnsave
mov
push
lods
pushf
push
cmp
sbb
fmuls
sbbb
sub
lret
clc
inc
mov
mov
dec
ljmp
add
loop
mov
pop
xchg
dec
inc
mov
sbb
fistpll
pusha
fucomi
push
ss
xchg
inc
xor
mov
mov
maxps
and
xorb
sbb
adc
stos
popa
std
push
adc
mov
cmp
pushl
aas
fsubrl
pop
and
push
fildll
mov
cmp
in
mov
decl
push
add
sti
xor
sbb
aaa
or
shrl
shll
fdivrl
imul
dec
inc
adc
pop
mov
jl
aam
aaa
out
push
mov
cmp
mov
push
in
out
mov
aam
sbb
cmpsl
jmp
mov
sub
shlb
dec
decl
xchg
mov
adc
or
sbb
sbbb
hlt
sar
mov
push
mov
jp
push
push
mov
or
pop
decb
xchg
or
mulb
pop
cmp
stos
fs
test
addb
aaa
nop
clc
imul
add
jb
mov
sbb
inc
sub
in
push
and
jbe
jnp
push
rcll
and
scas
gs
or
cmpsl
xorb
ja
jg
inc
xlat
popf
jle
sbb
xchg
hlt
jbe
sbb
decl
out
add
and
out
dec
orb
add
mov
xor
jo
lods
int3
mov
push
shrb
dec
int
cwtl
add
andb
out
js
xchg
mov
jge
fs
mov
sub
pop
inc
nop
and
stc
ljmp
mov
es
mov
fiadds
sub
and
or
loop
out
pop
mov
mov
cmpsl
cmp
pushl
add
repz
add
sub
push
mov
addb
sub
test
pop
leave
outsl
popa
call
cli
fld
and
jb
add
push
jno
fiaddl
pop
jp
cmpsl
scas
ds
cmp
cltd
out
fsubp
or
pop
es
mov
push
push
mov
int
aad
and
loop
fwait
and
or
push
cmpl
jnp
inc
sub
pop
adc
push
stc
jno
push
jns
int3
icebp
aad
xor
lods
or
mov
mov
es
and
xchg
fidivrs
add
xchg
cld
mov
mov
mov
jmp
inc
pop
xchg
mov
jecxz
sbbb
xchg
xchg
cmp
pop
call
lret
outsl
lret
xor
jge
fcompl
push
adc
cli
pop
add
aaa
adc
inc
cmc
cld
pushf
pushf
cmp
adc
sub
insl
mulb
scas
hlt
pushl
movzbl
aam
or
pop
imul
push
push
test
ja
pop
fimuls
push
lea
ja
movntps
stos
shl
cmc
out
add
les
cli
incl
gs
into
lods
or
jb
pop
mov
lcall
sub
jle
aaa
add
fiadds
je
lock
or
adc
out
cmp
xchg
stos
in
fimull
push
sbb
jmp
ljmp
and
xorl
arpl
les
call
les
cli
mov
movsb
adcl
mov
pop
andl
stos
lods
sub
fidivrl
cmp
dec
push
push
push
cmp
test
cld
add
mov
push
ja
xchg
mov
lods
jnp
cmp
inc
xor
sbb
orl
cmp
mov
and
outsb
lcall
sub
mov
or
outsb
adc
add
mov
add
mov
movsb
cs
mov
pop
mov
js
lcall
ret
add
scas
pop
orb
sbb
dec
pushf
lret
lods
imul
push
lods
out
or
rorl
xchg
out
sub
fwait
and
lock
call
rcrb
lret
iret
xor
cs
sbb
pusha
inc
hlt
call
push
stc
scas
jmp
add
xchg
fsubrl
stc
loope
push
sbb
lcall
dec
outsb
ds
incb
cmp
push
cmpsb
jnp
bound
lock
rcl
lret
add
out
cli
lcall
out
sub
add
sub
mov
movsb
lods
dec
adc
pop
pop
push
cmpsb
xchg
mov
adc
dec
sub
lret
xor
jle
sarl
cmp
test
fstpl
push
leave
sbb
imulb
mov
test
push
mov
repnz
leave
mov
and
das
push
xor
imul
or
jg
ret
add
add
jmp
push
mov
out
adc
hlt
jl
jmp
dec
pop
int3
inc
fadd
cmove
push
fwait
inc
std
pop
inc
shlb
mov
jo
or
xchg
push
xchg
ja
lcall
in
fwait
ljmp
xchg
jb
xor
clc
pop
outsl
cmpsb
push
inc
clc
push
sahf
jb
ss
movsb
cmpsl
cs
xlat
lcall
jo
loop
mov
outsl
pop
adc
outsb
and
push
mov
test
popf
sbb
pop
lods
dec
loope
jbe
push
ljmp
test
pop
mov
hlt
daa
sub
call
jg
mov
pop
loopne
in
enter
pop
xchg
inc
mov
pop
mov
data16
mov
push
mov
inc
add
or
jmp
mov
lret
jmp
inc
add
inc
xchg
ss
xchg
push
pop
cmc
lock
mov
mov
fwait
pop
fmull
mov
cli
call
mov
pop
xor
pusha
cwtl
cmpsb
dec
push
mov
outsl
lcall
pushl
shll
sahf
jbe
sbb
enter
add
repz
dec
add
mov
sbb
es
cmp
mov
out
pmaxub
aad
ljmp
mov
gs
lret
flds
and
dec
pop
and
xor
pop
gs
xorb
add
loopne
andl
push
ds
or
add
movd
stc
sar
xor
aam
jmp
lcall
xchg
sbb
push
imul
push
dec
jmp
jg
sub
push
or
push
aaa
mov
pop
add
add
cld
and
je
shl
shll
push
adc
inc
fcompl
in
mov
sti
dec
in
dec
cmp
adc
js
cmpb
push
push
push
mov
jp
mov
loopne
pop
rorb
fcoms
movsl
jae
push
imul
cli
lock
sbb
pop
js
jne
sbb
cmp
ficomps
sub
xsha1
cmpsb
dec
add
stos
call
xchg
fiadds
rcr
xor
mov
xor
mov
out
lahf
and
clc
sbb
or
and
jne
mov
sub
aaa
cld
repz
test
pop
sbb
pop
int3
cs
inc
push
sub
outsb
mov
pop
cmpl
insb
js
or
pop
loop
dec
jno
add
sub
dec
or
sbb
dec
cmpsb
and
sbb
or
enter
and
add
sub
inc
std
mov
test
rol
andb
sbb
jmp
mov
fsubr
js
inc
out
loopne
movb
mov
sarb
loope
pusha
icebp
lahf
mov
xchg
jge
jecxz
and
fistpl
cmc
pop
lret
mov
or
mov
stos
cmpsb
roll
into
mov
fnstsw
es
push
mov
loop
outsl
incl
add
xor
clc
aad
mov
mov
fs
dec
or
cmpsb
aam
sahf
jg
sbb
mov
xor
insl
dec
push
daa
dec
je
pop
xor
movsb
pushf
cvtpi2ps
imull
mov
push
call
cmp
mov
jb
jl
pop
and
into
shll
and
pop
dec
cmp
jg
cmp
inc
and
jl
imul
sub
xchg
daa
jp
shlb
push
aad
js
dec
clc
and
xchg
xchg
adc
inc
push
lods
push
sti
icebp
cmp
pop
cmp
or
popf
and
test
pop
dec
sahf
dec
or
hlt
cmpb
jle
aaa
add
imul
insl
loop
mov
xor
lods
jo
aas
ret
movsb
sbb
loope
mov
lock
and
in
push
push
sbb
stc
mulb
jge
int3
jmp
sbbb
jecxz
ret
arpl
nop
pop
dec
nop
and
jecxz
cli
xor
or
or
pop
aas
aam
pop
loop
xchg
xchg
cli
stos
adc
lods
add
je
pop
cmpb
adc
dec
ret
repnz
dec
inc
or
mov
bound
ret
jg
mov
dec
push
test
fisubrs
outsb
dec
mov
sti
cmpsb
sbb
aaa
add
sub
xchg
aam
into
or
add
xor
jmp
push
iret
cmp
xor
mov
test
decb
cmp
push
add
push
or
in
dec
pop
push
jmp
mov
add
out
xchg
test
mov
rep
add
push
push
push
add
popa
loop
mov
adc
xor
mov
add
push
and
out
jno
mov
jl
add
jge
add
fiadds
xchg
aas
loopne
xchg
out
mov
clc
ret
dec
jl
dec
cli
dec
nop
xlat
lods
movsb
imul
lret
in
mov
push
sbb
nop
popa
pop
xor
or
rorl
arpl
fbld
cld
mov
int3
inc
movsl
adc
pop
cld
mov
mov
out
or
dec
mov
bswap
jne
cmpsb
fimuls
ret
jne
add
mov
xchg
test
mov
or
jb
ds
fcoml
call
lods
fdivp
call
xlat
add
or
add
jg
pop
xor
or
test
scas
cmp
sarl
adc
pop
arpl
cmp
push
repnz
sbb
cltd
xor
xor
cmp
int
dec
cmpsl
cwtl
lock
fmuls
inc
dec
movsb
pop
jae,pt
mov
inc
jp
push
xor
sbb
cld
add
add
cmp
xchg
push
add
push
sahf
cmp
sbb
imul
add
jle
cmpb
rorl
push
dec
dec
mov
jmp
push
xchg
add
pop
nop
inc
out
repnz
out
cmp
jb
push
and
outsb
ss
add
push
bnd
sbb
adc
dec
addl
xor
adc
stos
cwtl
add
loop
xchg
push
shrb
in
call
cmpl
aam
jp
rcrb
jno
or
xor
sti
jo
cs
mov
loopne
rorl
loope
push
lods
lret
jecxz
lahf
lret
push
call
cwtl
inc
pcmpgtw
add
int3
out
xchg
clc
mov
outsb
mov
rorb
shl
call
mov
mov
ljmp
mov
add
repz
mov
xchg
mov
push
adc
push
fdivr
shll
ror
or
inc
lea
add
leave
daa
mov
inc
andb
xchg
ja
jmp
mov
add
mov
sub
test
sub
lock
sub
cs
subb
add
sbbl
lds
loopne
push
jo
and
or
xchg
movsb
in
or
je
mov
cwtl
dec
sti
je
call
push
add
mov
xlat
outsl
insl
add
adc
or
xchg
and
or
rcrl
inc
mov
cmpsb
inc
or
jl
sar
adc
aad
xchg
test
movsl
push
add
push
dec
in
dec
xchg
dec
adc
lock
add
test
and
add
lret
sbb
pusha
lahf
clc
incl
dec
mov
cmpsl
jp
sahf
es
mov
jne
adc
pop
xor
cltd
mov
scas
movsb
sbb
sub
mov
jnp
adc
mov
cs
sbb
mov
cli
inc
mov
and
cmpsl
call
fwait
adc
jo
mov
rorl
jg
or
mov
pop
cmc
testb
push
lock
mov
inc
loope
decb
dec
dec
jge
sti
rclb
xlat
dec
pop
xor
iret
mov
sub
into
xor
clc
lret
dec
sbb
push
es
in
fstpt
test
add
pop
sub
push
mov
fnstcw
addb
int3
gs
mov
pop
sub
jg
xor
fsubr
fcoms
test
or
inc
pop
xor
leave
mov
and
mov
or
mov
loop
fdivr
sti
pop
xchg
add
dec
loope
pop
sbb
clc
push
cld
push
xor
push
jp
cmp
fstpt
cld
push
stos
and
fs
sbb
and
inc
test
lods
jno
mov
mov
mov
fistl
or
pop
pop
push
xlat
mov
das
and
test
lock
jle,pn
stos
fiadds
aam
push
adc
ret
xchg
xor
xchg
fadds
or
add
sbbl
and
mov
mov
inc
add
cs
push
add
inc
in
ja
lcall
adc
sbb
or
add
filds
jmp
add
stos
aas
sub
jae
or
ljmp
push
jecxz
add
lret
jne
ja
cmc
call
ret
aaa
adc
sbb
sbb
movsl
out
sar
in
jle
and
mov
pushf
xchg
adc
popf
js
sbb
jl
sbbl
adc
ds
xchg
mov
mov
sahf
test
imul
ficomps
adc
scas
jo
clc
jg
loop
add
cmp
adc
lcall
push
iret
adc
adc
mov
mov
mov
or
pavgb
sub
inc
enter
cmp
jnp
dec
mov
jmp
xchg
inc
fiaddl
fmuls
lock
das
out
push
mov
adc
pop
pushl
adc
out
ret
ror
inc
call
sub
xor
cmp
jbe
pop
lret
adc
sub
incb
std
in
cmp
mov
test
add
add
les
dec
sti
inc
loopne
jl
xor
sbb
sbb
icebp
add
cmpsl
aas
rep
mov
out
divb
push
mov
addb
loopne
dec
jno
leave
pusha
into
mov
hlt
sbb
imul
pop
jo
xor
ret
cmovo
jmp
add
fstps
cmpsl
xorb
scas
pusha
das
push
mov
outsb
rorl
jle
test
aaa
das
lds
mov
jne
sbb
orl
pop
hlt
jmp
rorl
dec
ss
mov
add
lcall
jg
lret
lcall
or
push
pop
add
or
scas
add
scas
push
movsb
loopne
mov
popa
scas
mov
pushf
mov
imul
gs
lcall
mov
inc
add
sub
in
ja
ja
call
or
lret
jle
cmc
outsl
mov
xchg
cmp
ret
push
push
cmp
and
and
cmp
test
in
push
push
sub
or
imul
int3
flds
scas
mov
dec
mov
xor
dec
and
mov
adc
push
pop
je
or
add
pop
insl
ret
scas
cli
pop
cmp
push
sbb
or
and
xchg
movb
dec
decl
imulb
add
add
ljmp
mov
add
nop
adc
cli
mov
call
push
xor
jo
out
jmp
out
data16
cld
dec
jp
test
mov
pop
testl
inc
cmp
ja
or
sub
aad
les
rorl
pop
mov
push
sub
sbb
clc
or
orb
sub
add
jp
adc
es
cmc
in
pushf
jl
sub
inc
sbb
adc
scas
gs
in
xchg
cld
or
mov
sub
or
add
lahf
out
movsl
lods
sub
stos
xor
loop
or
cli
xchg
sbb
mov
push
incb
sub
mov
lcall
test
push
mov
xchg
daa
test
sbb
adc
jnp
out
rol
adc
xor
fwait
addb
or
jns
adc
xor
addr16
mov
mov
dec
mov
lock
call
xchg
and
pop
and
fcmovnbe
push
push
lods
mov
andl
push
xchg
adc
and
sbb
sbb
dec
fidivs
sbb
test
inc
xchg
scas
dec
mov
loop
pop
ret
add
add
inc
mov
mov
inc
imul
cmpb
mov
dec
lea
xchg
mov
outsl
xchg
inc
es
cld
mov
pop
xor
lret
rorl
and
insl
xchg
bound
or
repnz
adc
sti
mov
ljmp
add
cmp
dec
pusha
pop
mov
jp
repnz
mov
push
cmp
pop
or
sbb
data16
add
les
add
pop
mov
adc
movsb
dec
push
pop
dec
mov
insb
rcrl
cli
adc
jno
add
ljmp
sarb
add
add
add
imul
or
fcompl
dec
push
inc
loopne
bound
dec
jp
mov
loopne
mov
push
rclb
loop
inc
imul
push
sbb
sub
jp
out
out
add
push
hlt
sar
pusha
sub
pop
xchg
push
cmpsb
in
mov
cmp
mov
fbstp
cld
and
mov
xor
jge
add
jp
dec
mov
loope
or
loopne
cmp
mov
add
sarl
outsb
div
stos
cmpsb
pushf
rorl
mov
lahf
lret
outsb
mov
enter
movsb
mov
push
and
ljmp
incl
add
js
hlt
test
inc
out
mov
fwait
add
out
int3
sub
inc
add
loopne
rcrl
sbb
cmp
jg
pop
mov
lock
fldl
adc
repz
mov
lcall
nop
mov
test
dec
inc
inc
pop
add
cli
incl
test
insb
cs
or
outsl
sti
mov
mov
fadds
hlt
ljmp
aaa
jmp
jp
cmpsl
jns
bound
les
add
mov
adc
mov
fwait
dec
push
imul
push
push
loopne
cmpsb
xchg
ljmp
sub
iret
mov
sarb
stos
and
mov
lcall
lcall
sbb
test
mov
lret
jb
mov
imul
shlb
xchg
pusha
sbb
rcl
xchg
jnp
add
cli
cmp
test
xchg
mov
and
ret
or
scas
aaa
adc
mov
imul
xor
pop
les
je
sbb
inc
roll
ljmp
push
fs
adc
mov
xchg
push
add
enter
hlt
shlb
data16
inc
add
clc
sar
push
dec
inc
xchg
adc
sbb
mov
inc
clc
test
add
repnz
clc
dec
push
decl
bound
pusha
aad
inc
inc
xchg
inc
push
sbb
sbb
or
pushl
ffreep
jl
sub
sub
les
mov
dec
and
cmp
nop
inc
mov
cmp
jg
adc
sbb
cmp
movl
adcb
jmp
test
fwait
paddq
inc
cmp
in
loopne
mov
xor
xor
jo
and
pop
dec
xchg
add
jmp
pop
inc
sbbl
out
icebp
mov
xchg
push
lds
sub
sbb
repnz
repz
or
hlt
dec
cltd
rclb
popf
rol
sbb
sub
push
mov
add
lret
dec
call
sbb
mov
mov
push
flds
cmpsb
or
mov
punpckhdq
inc
mov
test
cli
in
inc
hlt
dec
push
cmp
adc
hlt
inc
sbb
loope
mov
js
lock
inc
daa
shrl
adc
dec
push
and
add
sbbl
hlt
push
jp
cmc
mulb
clc
jecxz
jns
shlb
scas
scas
test
cmp
jmp
xor
mov
add
add
or
cld
mov
ss
pop
es
insl
addr16
sbbb
push
pop
or
add
mov
sti
mov
xor
or
push
adc
jae
out
inc
cmp
pushf
subb
lock
jno
mov
fcmovu
dec
pop
or
andb
mov
add
ret
and
and
scas
lret
and
lcall
add
cmp
add
xchg
mov
xchg
test
cmp
lock
jbe
push
and
pop
out
cmpsl
mull
fwait
mov
cmpb
sbb
cwtl
insb
enter
lock
outsl
clc
fsubr
lods
aad
bound
jbe
pop
and
sar
mov
mov
add
ds
iret
outsl
xchg
lret
aam
js
or
insb
xlat
jp
cmp
and
mov
jae
cmp
xor
or
mov
lret
push
std
push
rcrb
sbb
repz
inc
and
pop
cmp
mov
and
popl
jb
inc
inc
cmpsb
add
addb
out
sbb
adc
push
movsb
insl
mov
rcr
cmp
push
mulb
ret
sbb
int
sub
iret
xor
pusha
cltd
pop
subb
push
add
inc
fldt
int
mov
cs
xor
mov
vmovhps
testb
sub
outsb
mov
sti
sub
mov
mov
cli
out
clc
sbb
and
lods
jge
into
pop
add
cmpsb
mov
test
dec
mov
inc
bound
dec
sbb
or
xchg
pop
out
sarb
aam
xchg
jp
jge
or
sbb
ret
dec
xchg
cltd
xor
loopne
sahf
inc
mov
and
iret
jae
push
jno
inc
in
das
test
sub
jo
push
lds
loop
std
pop
icebp
ds
cmp
cmpb
add
push
out
cmpsb
and
lret
sub
mov
inc
mov
xor
lahf
xchg
jnp
addl
fnsave
xchg
xchg
dec
pusha
jae
les
cwtl
es
push
mov
in
dec
stos
setle
sbb
xchg
or
mov
adc
mov
lret
sbb
dec
clc
inc
push
xchg
faddp
test
push
shlb
lods
dec
icebp
rol
popf
sti
sbbl
cmp
inc
repz
pushl
push
dec
popf
cwtl
adc
sbb
cmp
sub
jg
subb
adc
xor
add
inc
or
int
fiadds
outsl
dec
cld
decl
dec
jo
and
outsb
pushf
mov
cli
xchg
adc
inc
xchg
mov
fistps
add
call
add
lret
clc
nop
stc
jno
mov
clc
mov
fdivs
xchg
test
sbb
les
jnp
xor
stc
xchg
js
adc
bound
aam
cmp
jg
lds
lret
nop
and
pop
movsb
or
out
cmpsb
cld
pusha
mov
out
ljmp
xchg
xor
lret
test
mov
jne
xlat
jnp
hlt
xchg
xor
gs
bound
push
lret
lcall
push
lds
lods
xor
sbb
dec
nop
and
in
push
inc
mov
outsb
mov
call
and
add
mov
push
sti
out
inc
push
rcrl
sar
addl
lea
scas
clc
pop
or
inc
pop
add
pusha
sbb
clc
sarb
lahf
mov
mov
push
jp
jecxz
dec
xchg
idivl
fstpt
sbb
test
ud2
js
or
cmp
int3
test
insl
sar
add
adc
pop
or
adcl
push
push
pop
adc
filds
sti
mov
rclb
xchg
inc
test
xchg
nop
mov
filds
cmp
pop
shrb
sahf
inc
and
addr16
or
call
mov
push
push
out
ret
imul
mov
rorl
icebp
stos
lock
inc
clc
mov
loope
fcomip
pop
aam
mov
leave
or
sbb
sub
ja
stos
ret
rol
mov
xchg
add
lds
xchg
cmp
pop
lcall
jge
xchg
popf
ljmp
lcall
test
movb
xor
incb
dec
pop
push
hlt
adc
inc
mov
mov
int
jnp
test
mov
test
imul
aad
sub
cmp
adcl
pop
cld
mov
fistps
mov
jmp
in
add
xor
and
xor
dec
jg
mov
andl
scas
inc
ret
adc
and
fldcw
add
cmpsb
pop
cwtl
leave
and
mov
lret
pusha
mov
lock
lcall
and
rcrl
push
sub
add
scas
mov
add
fucomi
sub
lods
pop
and
jg
das
mov
or
fisubs
dec
mov
jmp
mov
decl
pop
sti
lcall
loop
std
mov
leave
push
scas
sub
mov
lock
add
dec
outsl
push
or
clc
call
inc
mov
je
out
leave
adc
or
cmpsb
cmp
test
add
adc
js
sbb
les
dec
sub
sub
pushf
or
inc
lcall
xchg
xor
imul
dec
dec
mov
jge
sbb
mov
subl
repnz
mov
rcrb
out
test
insb
mov
inc
mov
or
mov
adc
rolb
push
dec
in
and
inc
insl
arpl
cwtl
sbb
cld
and
dec
mov
pop
lock
sbb
and
fs
lods
repz
inc
mov
sub
mov
inc
aas
scas
nop
xchg
pop
push
mov
adc
adc
push
lcall
testb
adc
and
idiv
incl
or
jge
ss
enter
push
inc
faddl
nop
and
cmp
pop
dec
test
dec
mov
pop
mov
fildl
test
jg
sbb
sub
mov
xor
ret
push
sbb
fmull
inc
and
cmpsb
in
inc
stc
push
cld
insb
xchg
sbb
jg
cmp
mov
dec
xchg
movsb
add
sbb
lds
xor
mov
enter
fsubrs
xor
shlb
add
mov
in
mov
mov
sti
push
mov
xorb
out
jno
hlt
sub
icebp
ret
es
and
rcl
repz
nop
stos
jo
cltd
dec
add
jge
add
leave
sbb
je
lds
mov
or
add
lods
xor
cmp
dec
sub
loopne
push
roll
test
push
add
mov
adcl
sub
roll
loop
cmp
or
cmp
std
out
shlb
movsb
inc
loope
add
insb
push
add
movsb
icebp
decl
mov
js
popa
iret
add
sbb
out
in
add
lcall
repz
fwait
cs
push
in
or
pop
sub
dec
fs
movb
pop
adc
push
out
ljmp
sarb
mov
mov
cmp
jl
push
dec
jbe
mov
inc
jp
add
push
mov
stc
pop
pop
or
mov
mov
test
int
hlt
bound
cmpsb
lcall
stc
cli
ljmp
test
mov
mov
cmc
mov
stos
push
dec
mov
clc
pop
fistl
mov
push
ret
js
xorb
loopne
jmp
and
and
cmpsl
xchg
iret
fsubrs
xchg
mov
xlat
roll
es
nop
mov
cmpsl
call
pop
jo
jo
and
out
pop
cli
add
test
jle
in
imul
je
jo
xor
call
push
movsb
mov
repnz
push
pop
dec
push
inc
inc
mov
aaa
mov
mov
mov
stos
stos
scas
and
incl
andl
es
and
inc
and
fiadds
call
roll
add
or
ljmp
add
daa
sbb
jb
cld
pushf
dec
dec
shr
enter
mov
mov
add
adc
lcall
add
insb
mov
push
pusha
sub
cmpsb
pop
and
cmp
sbb
push
lds
jle
movsl
and
mov
adc
gs
add
sbb
call
insl
fs
cli
push
cmp
dec
cmovo
les
jecxz
lock
cwtl
jbe
push
or
adc
xor
sub
inc
cmp
sahf
and
add
fbld
lods
call
adc
xor
adc
fbstp
outsl
pop
cmpsl
push
cltd
mov
sbb
out
aad
lahf
push
hlt
add
adc
mov
sbb
xchg
mov
cs
mov
sbbb
mov
jb
and
xlat
repnz
add
pop
xchg
cmpsb
xchg
je
xchg
add
aas
mov
jecxz
aam
pusha
into
mov
sub
mov
inc
mov
sti
add
out
adc
push
call
push
ljmp
mov
loopne
mov
int
xor
push
xor
mov
fadds
pushf
sub
sub
out
fcomip
add
pop
xor
lcall
pop
add
add
dec
jno
jns
mov
jg
pop
scas
inc
es
mov
jb
movsb
ficomps
xor
add
cmp
cwtl
cli
inc
je
mov
dec
lock
ljmp
inc
jecxz
rcr
xor
cmpsb
sub
aas
jge
push
xor
addl
test
push
pop
inc
in
stos
add
jp
arpl
int3
mov
movsl
cwtl
sahf
daa
add
cli
loope
sbb
pop
inc
cld
mov
pop
cli
cmpsb
add
cmp
inc
sbb
cmp
pop
lock
mov
lcall
dec
notb
and
add
dec
sbb
add
adc
push
cld
add
loop
jg
cmp
dec
xor
jle
lcall
out
inc
shlb
dec
rcll
jle
std
add
movsl
push
adc
push
sarb
aam
lcall
addb
imulb
sbb
lock
cmp
jne
push
xchg
rcl
dec
dec
cld
aaa
insl
and
xchg
add
jo
cwtl
xchg
sbb
aad
sbb
cld
cmpsl
insb
mov
scas
addl
sahf
icebp
add
sbb
loopne
testl
mov
mov
xchg
jle
in
daa
add
add
arpl
aad
push
popf
jge
pop
inc
js
les
jl
push
mov
mov
dec
xchg
popa
add
movsb
pop
sar
sub
test
and
mov
cli
shl
loop
fwait
clc
xor
jnp
popa
loope
xorb
mov
scas
push
jno
jl
sarb
cwtl
adc
sbb
mov
scas
xchg
popa
loope
fisubs
mov
divb
add
call
add
pop
ss
outsl
lcall
mov
clc
adc
pop
or
add
sbb
and
or
rolb
mov
adc
add
jg
inc
clc
cmpsb
shl
out
sahf
adc
sub
and
mov
aad
jo
repnz
add
sub
pop
jo
stos
out
clc
inc
adcl
dec
adc
ljmp
sbb
or
cmp
mov
pushf
lret
lahf
shl
mov
loop
mov
loopne
out
jmp
cli
arpl
enter
scas
adc
jae
pushf
inc
or
sbb
push
cmc
inc
mov
mov
cmp
pop
and
jg
xchg
ljmp
xchg
mov
inc
push
mov
jnp
sub
sbb
xor
movsl
inc
and
sub
in
or
xor
sub
inc
or
scas
and
pop
aaa
sbb
sub
rorb
cmc
mov
push
lcall
push
scas
adc
lock
rcrb
aaa
pusha
fcmovnb
add
test
jecxz
js
divl
sbbl
mov
mov
sub
cmp
xor
pusha
in
incl
jnp
lods
in
aas
cmp
jg
xchg
sub
push
cmc
mov
push
movsl
push
mov
mov
sbb
insb
outsl
clc
ljmp
sub
cli
clc
xchg
and
sarb
and
cmc
dec
adc
inc
int
cmc
and
cmp
hlt
pushf
sti
push
mov
pop
addl
push
stos
inc
inc
sbb
xchg
icebp
mov
xor
mov
push
int3
ret
sub
adc
dec
or
xchg
icebp
ljmp
shl
push
movsb
inc
pusha
sub
and
jg
jns
jb
push
xor
mov
and
aam
add
and
scas
mov
fidivl
test
rcll
scas
sbb
es
out
cmp
mov
adc
inc
clc
pop
cmp
dec
mov
mov
es
push
xor
mov
mov
aam
testl
out
push
mov
push
std
mov
test
jl
mov
scas
scas
mov
cmpsl
mov
ret
scas
lcall
aas
sbb
inc
xor
xchg
adc
cmp
inc
mov
xor
lahf
mov
mov
in
pushl
fildl
xor
inc
inc
enter
ret
aas
cmp
jnp
jl
sbb
and
and
mov
add
fcomip
hlt
push
cmp
dec
popf
xor
pop
add
mov
mov
ret
mov
repz
fisttpll
je
or
out
mov
mov
jo
shlb
xor
cmp
jmp
cmp
jae
sahf
mov
or
pop
xchg
mov
incl
pusha
dec
pop
hlt
push
add
fidivl
push
add
cmc
scas
fadds
jbe
lahf
cmpsb
mov
cs
sub
cmp
lods
xor
and
inc
lds
daa
jg
aas
mov
out
xchg
adcl
mov
pop
xor
mov
mov
add
pop
test
adc
mov
ja
mov
nop
fwait
add
sbb
inc
sbb
dec
ljmp
sti
and
shrb
and
xchg
jp
xchg
adc
insb
dec
outsl
sbbb
cmp
and
ljmp
lea
add
sub
or
sub
dec
movsb
testl
push
add
mov
jbe
xor
jmp
popf
out
add
mov
cmp
and
mov
jbe
ss
cmp
cmp
les
add
sub
jg
out
jo
out
loopne
sbb
cmp
cmc
pop
inc
lret
jb
cs
xor
mov
adc
add
adc
ljmp
pop
add
mov
cmpsl
icebp
outsl
or
push
xor
cli
iret
aad
jmp
lret
ss
imul
pop
fdivrl
les
pop
fistpl
sub
push
adc
call
into
aad
mov
sbb
mov
xlat
add
repnz
mov
push
mov
mov
ret
mov
ss
test
cmp
sub
xchg
pop
icebp
fcomip
or
ja
dec
in
cmp
aaa
jne
cmp
sarl
sub
dec
push
push
sbb
jmp
pop
hlt
aas
fmull
dec
mov
push
sahf
mov
std
jno
ja
and
xor
cmpb
add
stc
mov
or
push
lret
jmp
add
xchg
mov
out
jno
lret
stc
push
sub
jg
bound
push
in
jns
cmp
and
clc
add
sbb
cmp
pop
jmp
lods
sub
test
sbb
mov
add
into
xchg
add
call
scas
push
adc
lea
repz
push
sbb
or
push
xlat
or
enter
hlt
jb
cli
loop
ds
push
dec
mov
in
outsb
add
adc
call
lcall
loopne
and
mov
adc
mov
sub
call
test
cmp
and
stos
adc
je
sbb
pop
xchg
inc
ja
lret
jae
xor
or
sarl
pop
stc
sbb
and
insb
inc
jle
rolb
das
add
or
push
stos
into
insb
fcompl
push
inc
mov
pop
inc
cli
lahf
or
adc
pop
in
rcrl
dec
sbb
mov
push
pop
fwait
jle
in
push
sub
lret
push
push
lahf
jp
add
sbbb
xchg
in
sbb
jp
fcmovne
mov
jns
shl
ret
or
push
mov
repnz
mov
popa
sbb
and
cmp
in
adc
aam
lock
inc
inc
adc
pop
mov
xor
sahf
mov
sarl
lock
sahf
xchg
repnz
jp
cwtl
cmp
lret
lcall
mov
dec
ja
push
negb
inc
push
sbbb
and
add
and
mov
and
add
mov
mov
mov
aam
cmc
ljmp
call
daa
push
push
mov
push
inc
test
xchg
mov
insb
xchg
pop
mov
out
push
dec
movsb
lods
pusha
shll
rcl
add
adcb
ljmp
fcmove
xor
lods
movsb
fildll
push
call
add
mov
xor
pushf
pop
jl
orb
shr
jg
add
or
shlb
sbb
adc
mov
insb
mov
sbb
fs
mov
mov
mov
out
pop
in
out
jg
out
mov
aad
add
mov
fs
inc
into
je
dec
and
callw
cmp
or
sahf
pop
test
ror
or
leave
inc
or
mov
xchg
pushl
inc
cli
cmpsb
inc
shrl
sbb
aas
adc
stos
stc
mov
fisubs
cmp
and
std
mov
es
mov
pop
lret
mov
inc
jmp
icebp
data16
lcall
cmp
or
mov
fs
aas
pop
fstl
cmpsl
sar
aad
lock
jne
repz
inc
insb
jb
jg
sub
adc
pop
sbb
adc
lock
push
loopne
ret
mov
cli
xchg
pushf
pop
add
xlat
add
in
lea
call
fiadds
and
test
test
test
pop
or
cmp
mov
jecxz
imul
and
add
out
sbbb
mov
mov
add
addr16
cwtl
fnstenv
lret
cmp
jne
and
jp
ljmp
push
bound
pop
rcl
mov
ss
add
jg
or
dec
jmp
aad
dec
lcall
mov
xchg
add
pop
push
or
mov
cmp
add
test
iret
pop
out
clc
or
nop
xor
lret
cmpsb
js
dec
pop
clc
lea
add
lahf
sbb
cmp
es
dec
mov
mov
leave
fidivs
xchg
bound
and
test
xchg
std
cmc
decl
out
push
jne
shrl
cmp
mov
cld
jmp
jecxz
into
xor
out
push
stos
or
in
jmp
dec
push
add
insl
vaddsubps
jmp
add
pushf
mov
popa
add
add
xor
or
imul
push
roll
mov
sbb
pop
popf
mov
mov
jns
and
mov
scas
aas
sub
add
decb
out
xchg
push
pop
rorl
scas
mov
sub
pushl
cmp
xchg
test
or
arpl
mov
arpl
call
mov
test
xor
pop
cmp
nop
movsl
push
sub
xchg
sbb
out
ljmp
sub
push
mov
call
cmp
pushl
loopne
inc
imul
out
cwtl
scas
pop
stos
jmp
das
enter
inc
loop
clc
ja
adc
movsb
out
mov
inc
xchg
rorb
ljmp
imul
cmp
cli
mov
cmp
inc
arpl
pop
fistpll
jbe
mov
xor
cs
pop
adc
insl
adc
pop
aam
dec
enter
or
imul
int
sub
sarl
push
and
cmp
or
xchg
loop
and
pop
lock
mov
push
aam
loop
std
inc
lods
cmp
sbb
andl
jl
adc
mov
pushl
add
mov
inc
jp
sbb
jne
aam
add
call
mov
push
cwtl
out
xorb
icebp
lcall
push
dec
sub
mov
sbb
fbld
aaa
add
and
xorl
mov
lds
outsl
sar
sub
adc
inc
enter
andl
decl
and
mov
insl
out
xchg
lds
dec
mov
outsl
adc
sub
in
loop
jmp
push
lahf
cs
call
fimull
xlat
jo
incl
dec
mov
add
adc
or
outsl
sub
pushl
jb
fwait
mov
insl
add
push
push
inc
mov
dec
sub
xor
jb
add
or
push
gs
cli
mov
xchg
repz
dec
mov
test
xchg
repnz
mov
decl
iret
push
xchg
mov
xchg
data16
call
decl
sub
cwtl
dec
xchg
xchg
and
adc
xor
push
inc
sub
add
jg
cs
call
movsl
test
xchg
nop
mov
jge
mov
mov
push
jecxz
xchg
roll
xchg
inc
or
sar
decl
lcall
inc
lds
test
add
adc
movsb
and
cs
cmp
push
sub
jno
test
mov
pop
aad
sub
or
enter
cli
cmp
adc
inc
jb
cli
and
es
in
in
and
pop
mov
sub
mov
or
add
insb
inc
fmull
fst
loop
sub
jmp
and
movsl
or
pop
adc
cmp
in
or
subb
repz
jns
ret
addl
add
or
mov
xchg
out
jmp
shll
pop
mov
and
enter
test
subb
adc
add
imul
incl
cmc
mov
dec
push
xor
cmp
mov
cmp
jnp
loope
pop
jl
push
mov
mov
or
add
test
rorb
mov
add
stos
inc
and
fwait
outsb
loop
daa
loope
leave
xor
pop
insb
xchg
cs
pushf
xchg
in
dec
add
sub
inc
rolb
sbb
scas
fnstsw
lock
ljmp
int3
test
int
or
mov
lcall
and
pop
cld
rorb
inc
add
rcll
leave
sub
loopne
sbb
mov
ret
stc
cmpsl
adc
loopne
xlat
mov
bound
push
or
push
lods
mov
adc
or
sbb
mov
mov
jg
jae
xor
push
iret
cmpsl
imul
inc
push
mov
hlt
stc
dec
jmp
pop
adc
out
dec
aam
scas
xchg
push
sar
mov
mov
nop
pop
and
scas
je
icebp
dec
inc
jle
add
cmc
mov
sub
cmp
dec
xor
shrb
fwait
cmpb
dec
xchg
push
xchg
mov
mov
clc
jecxz
inc
jb
es
adc
scas
cmp
mov
sbb
loop
les
xor
add
mov
mov
cld
shl
sub
js
enter
jne
addl
cmp
repnz
cs
push
aad
sub
sbb
mov
cmp
scas
xchg
jbe
out
ljmp
inc
pop
inc
jno
and
sub
ds
les
jmp
lods
cwtl
jl
add
sub
mov
lock
dec
jmp
inc
add
push
jnp
je
loop
out
call
cmp
jp
dec
add
call
cmpsb
add
adc
stos
inc
lds
insb
fidivl
pop
scas
int
pusha
dec
adc
scas
inc
mull
lret
mov
fwait
imul
jg
cmc
imulb
lcall
sub
cmp
addb
or
mov
out
cmpsb
in
daa
out
icebp
ljmp
movsl
lret
push
pop
fadds
movsb
aad
pop
or
inc
or
pop
gs
jae
lds
xor
imul
pop
jno
or
pop
gs
cmpsb
jne
mov
push
movsl
cmp
decl
adc
cmp
xchg
jl
ss
inc
lea
push
dec
add
dec
mov
jl
xchg
shrb
int3
pushl
add
rep
test
cmpsl
in
jle
xchg
sar
mov
jno
lock
dec
add
jmp
movsb
cmpb
sqrtps
mov
lret
sub
pop
arpl
outsb
test
mov
arpl
lods
pop
pop
decb
fsubrs
or
cmp
mov
subl
push
cmpb
add
xchg
clc
cmpsb
ljmp
imul
jecxz
aaa
addl
mov
ss
mov
cmp
jbe
and
mov
jl
pop
adcb
flds
fcmovnu
and
stos
das
xchg
scas
inc
loopne
pop
cmpsb
adc
aas
push
inc
fdivr
mov
push
std
mov
push
ret
out
in
mov
mov
std
xchg
mov
loop
adc
mov
pushf
pop
pop
mov
push
sar
xor
js
imul
pop
xor
test
jae
call
clc
cmpsb
clc
mov
mov
adc
add
out
shl
insl
sar
cmpsl
incl
test
xchg
stos
push
subb
push
nop
cmc
ja
sub
in
loop
inc
xor
sbb
cmp
incl
loope
andb
cli
and
xchg
shrl
xchg
pusha
cwtl
xor
lea
mov
dec
call
aad
xchg
pop
pop
mov
mov
pop
pop
clc
loope
stos
orl
shlb
inc
dec
push
pop
clc
xchg
hlt
or
inc
xchg
orb
jb
hlt
jo
xlat
mov
pushl
rolb
aam
or
or
test
clc
jg
daa
add
adc
into
testl
mov
in
cmp
imul
sbb
lock
add
stos
int3
or
pushf
into
fldt
adc
fdivp
xchg
sahf
imul
cmp
into
push
fmuls
cs
mov
mov
cmp
add
outsl
mov
fwait
push
lods
int3
jmp
lahf
sahf
adc
mov
jg
incb
inc
adc
and
lret
pop
xchg
push
sub
xrelease
lcall
xorb
std
cmpsb
icebp
mov
xchg
int3
lods
cmp
dec
loop
imul
xor
and
jg
mov
lods
adc
cmpsb
pop
test
arpl
pusha
lret
loope
es
fcoms
inc
or
push
mov
push
inc
and
push
push
xchg
jns
ret
incl
add
jecxz
mov
cmpsl
shlb
test
sub
das
fsubrs
cld
and
ret
push
fwait
mov
bound
test
pop
push
rol
loope
pusha
xor
mov
adc
push
add
lret
mov
sbb
sahf
and
xchg
jae
clc
mov
dec
mov
jb
call
or
cmc
dec
push
shlb
in
decb
xchg
out
sbb
jmp
adc
fildl
lock
adc
pop
sbb
or
cltd
ficompl
test
mov
loopne
add
jp
pop
std
sub
cld
inc
out
test
fucom
mov
and
add
stos
or
imul
adc
cmpsl
cmp
fcompl
out
push
mov
leave
mov
enter
movsb
jg
data16
dec
push
xor
movsl
adc
mov
mov
mov
xor
inc
fildl
out
loopne
addl
fwait
pop
xor
pop
lea
push
cmp
jnp
adc
clc
or
test
rcrb
cs
aaa
mov
data16
aam
mov
add
add
mov
and
push
les
push
pusha
repnz
pop
pop
fiadds
xchg
test
daa
cmp
push
fldl
cltd
fwait
imul
test
and
jo
sub
pop
lods
sub
lahf
sbb
repnz
fisubrs
pop
popa
dec
or
in
push
loope
test
pop
push
mov
pop
and
mov
lock
fcompl
xor
pop
mov
scas
test
jo
lcall
fldcw
sbb
inc
cwtl
lods
inc
sub
mov
mov
mov
push
add
test
mov
jecxz
adc
pushf
enter
mov
push
into
lcall
fildl
inc
add
mov
outsl
sub
adc
arpl
pop
mov
adc
incl
cld
push
sbb
rorl
lret
jg
insl
gs
mov
mov
xor
ds
jl
push
add
mov
sahf
cmp
push
subl
inc
add
pop
add
outsl
repnz
mov
push
popa
add
adc
ja
xor
imul
sbb
nop
mov
adc
andl
ds
fsubs
pusha
stos
mov
rolb
or
pushf
or
rcrl
xchg
xchg
int
add
and
pop
and
mov
push
movsb
das
cs
imul
ret
xor
int3
es
std
mov
fdiv
ret
rorl
outsl
mov
adc
xor
pop
inc
cmp
push
sti
pop
adc
and
inc
ds
inc
arpl
sbb
pop
mov
adc
or
clc
outsb
jne
ljmp
dec
test
inc
sub
jle
addr16
mov
push
push
scas
jbe
jbe
pop
pop
jecxz
pop
enter
inc
push
pop
lea
cmpsl
xlat
std
les
inc
pop
out
cmp
test
es
jecxz
lcall
adc
jbe
inc
dec
dec
and
es
insl
fwait
adc
cmp
test
clc
or
adc
shrb
dec
mov
addb
cmp
mov
loop
xchg
mov
and
and
dec
and
jns
lds
loop
or
fsubrl
fimuls
in
and
sub
leave
es
pop
xchg
outsb
pop
adc
push
xor
mov
jb
aaa
pop
ficompl
cli
ds
pop
aaa
cmc
sbb
sub
push
stc
iret
je
cmpl
mov
xchg
movsb
sarl
int
call
xor
dec
pop
mov
jo
cmpb
mov
push
add
cli
lods
aas
push
inc
andnps
jb
sub
jae
aam
jmp
jp
adc
outsb
xor
loopne
xlat
lock
mov
mov
push
das
int
cmp
pop
xor
std
xor
mov
pop
or
insb
xor
adc
push
jns
push
ret
repnz
inc
xor
hlt
addr16
ljmp
dec
roll
out
xor
sub
pop
mov
pop
jge
leave
sub
dec
add
and
or
fmull
les
fldenv
xchg
ja
es
stos
and
jg
int
sbb
and
cli
push
aas
enter
call
sub
push
jmp
rclb
lcall
mov
fldt
int3
pop
or
mov
push
mov
ds
jnp
hlt
out
ss
bound
hlt
shlb
mov
aaa
pop
xchg
add
test
aas
fcomip
outsl
out
mov
lret
dec
push
cltd
sub
mov
push
mov
inc
push
sbb
cmp
adc
jno
mov
icebp
xchg
imul
mov
sbb
sub
enter
mov
mov
add
mov
push
out
insl
cli
mov
leave
mov
pop
inc
xchg
pushf
mov
pop
nop
xor
jmp
xchg
fs
ja
aaa
push
adc
or
call
mov
and
test
mov
das
jne
test
mov
dec
lea
in
nop
sarb
loopne
mov
jl
in
add
decl
adc
push
sbb
pop
dec
add
insl
test
jg
outsb
cmp
pop
incl
sbb
mov
adc
jne
adc
jge
xlat
dec
pop
mov
inc
or
movsl
shrl
xor
ss
leave
pop
cmp
dec
cmpl
xor
test
jp
mov
and
jmp
gs
lret
in
fucomp
test
jmp
mov
sarb
nop
jl
int
fisubrl
mov
roll
out
ss
add
and
add
pop
rclb
xor
dec
fsubs
orb
mov
xor
jbe
ljmp
fildl
inc
xchg
aas
sbb
mov
dec
push
lock
push
icebp
int3
xor
add
ret
ljmp
xchg
push
repnz
lock
jo
lcall
jl
inc
dec
add
incl
pusha
mov
xchg
dec
test
ds
add
lock
inc
shl
jno
adc
cwtl
sbb
ljmp
sahf
adc
push
add
jo
xor
sub
loope
inc
jns
incb
ret
jo
jl
test
jg
je
fadds
or
les
outsb
fwait
mov
aam
adc
cwtl
mov
lcall
pop
inc
jp
int3
sub
cmp
adc
mov
stos
add
jmp
jmp
mov
imul
sbb
scas
js
sahf
sar
mov
loope
inc
push
outsb
sbb
jg
dec
aam
decl
mov
lea
mov
cltd
add
sbb
ljmp
add
std
or
inc
mov
aas
cmp
mov
daa
sbb
popf
mov
xchg
shrb
aam
orl
xchg
pop
mov
sahf
xchg
xchg
add
loop
pop
cld
xor
clc
clc
les
jno
scas
add
fistpll
push
outsl
pop
mov
idiv
sub
ja
add
add
mov
hlt
inc
lcall
add
jecxz
dec
pop
add
cld
les
fisttps
add
test
jnp
loopne
mov
and
mov
push
cmp
sbb
pushl
leave
punpcklwd
leave
les
mov
add
xchg
outsl
lock
lock
hlt
push
ret
inc
inc
jp
sbb
and
inc
or
mov
cmp
cmp
add
pop
xor
mov
das
fwait
xchg
pop
int
out
fs
add
add
adc
adc
push
subb
pop
sbb
lods
aam
push
aad
xchg
xor
inc
es
sti
bound
add
lods
stos
rcr
pop
mov
mov
mov
push
iret
mov
add
cs
lcall
add
push
mov
sbb
jb
push
inc
jp
clc
xchg
jecxz
scas
push
out
ja
mov
enter
jl
orb
stc
xchg
fisttps
fdivrl
pop
pushf
test
fists
xchg
hlt
arpl
xlat
dec
mov
scas
call
pop
cmp
mov
push
jmp
mov
sar
imul
sti
les
adc
inc
shlb
xor
fstp
inc
rcrl
dec
or
shl
addb
mov
outsl
stc
mov
cmp
add
out
mov
and
outsl
jmp
jns
fmul
lds
loop
mov
cmc
adc
lcall
insl
popf
andl
rol
pop
add
fsubs
cmp
je
imul
lret
ficompl
xlat
push
xchg
es
std
lock
pop
mov
movsb
or
sub
sub
push
cmc
push
cli
sarb
rol
add
fistpll
cmp
push
fst
fs
std
add
pusha
inc
mov
sub
jecxz
mov
icebp
lock
pushf
xchg
cs
pop
shrl
test
and
and
lock
scas
sahf
rol
lock
push
cs
pop
add
add
dec
adc
sbb
cld
lcall
es
pop
ljmp
fsubs
mov
pop
lcall
hlt
iret
faddl
subb
pop
mov
mov
lods
sarb
mov
fisubs
mov
sarb
ja
scas
hlt
or
pushl
movsl
jbe
jns
mov
dec
flds
and
or
add
icebp
rol
rorl
hlt
int3
mov
int3
jmp
sbb
shrb
xor
bound
sbb
lea
mov
jo
push
mov
leave
mov
cmp
cmp
out
and
add
sbb
gs
cs
push
call
pop
aad
pop
in
push
repz
loop
mov
sti
divl
or
mov
inc
test
xchg
mov
pop
pushf
ror
hlt
or
mov
sbb
enter
les
sub
sarl
cmc
cmp
lods
cwtl
inc
lcall
ja
cmpsl
push
sub
mov
mov
sbb
idivl
jl
dec
popa
insl
add
daa
repnz
mov
xchg
popa
pusha
int3
push
ljmp
ret
ret
cmpsb
fwait
decb
push
in
adc
pusha
jne
test
pop
jg
or
dec
pusha
negl
lds
cmp
movsl
sub
adc
jb
or
bound
and
sti
inc
pop
jge
clc
cmovbe
mulb
dec
push
into
xchg
and
xor
cld
ffreep
inc
andb
cli
aaa
pop
jmp
fsubrs
fildl
or
xchg
sub
addb
mov
pop
std
subb
mov
pop
xchg
adc
sub
ljmp
push
inc
inc
jmp
loopne
add
daa
xor
rcll
xor
andb
or
adc
shlb
call
dec
dec
jg
push
mov
test
out
mov
or
stc
bound
test
and
es
or
int3
xchg
mov
push
push
adc
pop
cld
fwait
sub
pop
mov
lcall
in
movsb
pushl
iret
jg
cwtl
subb
pop
add
dec
lea
and
jg
test
out
ret
and
scas
jle
xchg
lods
in
mov
cld
lcall
call
add
push
xor
push
xchg
xchg
push
cli
inc
ljmp
lcall
insb
ljmp
dec
imul
dec
cld
scas
filds
sbb
inc
add
pop
push
aas
pop
dec
or
int
lds
mov
add
add
ljmp
aaa
push
or
and
sub
decl
dec
insb
rolb
data16
aas
ret
call
in
mov
jo
xchg
hlt
gs
insb
ljmp
add
inc
and
add
mov
push
push
loop
add
pop
std
icebp
adc
lds
ss
push
ja
add
push
enter
rolb
push
sarl
mov
ds
adc
test
mov
cltd
fs
mov
inc
fldl
mov
cmpsl
and
les
cltd
jl
push
sub
or
mov
mov
jne
push
mov
rcrb
faddl
or
jg
hlt
loop
xorb
add
jge
cmp
incl
pop
pop
mov
or
xlat
push
bound
inc
cltd
inc
cmpsl
inc
inc
das
add
andl
xor
inc
mov
push
mov
es
mov
push
xor
ja
lock
jns
mov
mov
int3
mov
loop
inc
inc
ljmp
data16
stos
dec
ret
mov
repz
add
lock
dec
daa
stc
xor
push
testl
sarb
pop
pop
mov
mov
fmull
sbb
push
push
or
jmp
mov
sub
imul
stc
cmpsb
cwtl
popf
orl
jg
and
lods
cmp
cmp
decb
fldl
xor
sbb
les
addr16
push
xchg
xor
cmp
scas
inc
popa
jecxz
add
in
clc
dec
stc
mov
cmp
jecxz
cmpsl
xchg
or
cs
enter
std
adc
mov
lret
add
test
cli
testl
out
ret
lar
iret
sub
sbb
scas
test
icebp
and
cs
sbb
sbb
pop
add
repz
fcomip
pusha
or
mov
xchg
test
xor
jp
mov
lods
shr
adc
add
test
mov
fmuls
repz
adc
adc
fwait
or
pushl
out
push
add
add
cmpsl
test
rorb
arpl
lock
pop
push
in
enter
and
mov
add
lods
sub
pop
cld
mov
aad
mov
jns
decl
cmpsl
xchg
jns
sub
addb
jp
repnz
jbe
push
and
ret
inc
mov
std
fwait
out
mov
cmp
push
call
repz
xchg
pop
nop
xchg
xor
out
cmp
xchg
outsb
xor
fnsave
cltd
push
test
jle
stc
cld
cmc
mov
dec
cmp
ret
mov
mov
ljmp
mov
pop
xchg
addr16
xchg
or
pop
jle
dec
pop
lahf
test
mov
ret
inc
int3
movsb
scas
mov
out
push
jns
xor
loopne
xor
jecxz
jb
bound
imul
scas
and
cmp
push
test
xchg
sub
iret
xor
and
mov
jle
sub
arpl
push
xchg
and
inc
xchg
cs
pusha
out
mov
mov
push
jg
insl
mov
cwtl
pushf
lods
mov
jmp
cli
push
mov
jo
sub
lcall
mov
aaa
mov
mov
mov
sbb
jmp
inc
xor
xor
inc
mov
das
jne
loope
call
out
add
stos
ds
lea
out
dec
and
mov
inc
or
ja
or
les
outsl
dec
loope
jno
rorl
push
sbb
pop
inc
fld
call
and
mov
loop
rcrl
nop
add
inc
sub
jmp
sbb
sbb
mov
push
mov
sbb
mov
mov
add
xor
mov
mov
mov
mov
adc
cmp
inc
or
hlt
lock
mov
xchg
fimull
das
orl
adc
mov
cltd
mov
imul
jae
cmp
xor
fiaddl
subb
lcall
stc
decl
pop
and
or
jo,pn
mov
lods
jbe
inc
jno
outsb
xchg
mov
xor
adc
aam
outsl
add
pop
les
push
push
adc
inc
sub
pop
movsl
xchg
cmpb
fstpt
add
mov
adc
data16
add
adc
dec
xchg
cltd
pop
shlb
call
pop
push
sbb
inc
adc
push
xchg
add
sub
les
cmp
xchg
jle
sub
imul
fdivl
jge
xchg
mov
int3
imul
int3
leave
shrb
iret
filds
cmc
setle
dec
int3
nop
add
loopne
test
adc
push
jnp
dec
mov
pop
mov
scas
out
clc
mov
scas
mov
pop
outsl
pop
ret
mov
fisttpll
mov
enter
out
mov
mov
jp
xor
xchg
aam
add
js
pop
inc
std
mov
sbbb
push
sub
imul
and
imul
or
in
pop
push
sbb
inc
mov
inc
inc
xchg
loop
call
dec
cmp
dec
sub
mov
pop
in
cmp
movsl
nop
push
add
pop
lcall
jp
scas
lods
xor
xor
outsl
mov
clc
add
push
notl
adc
cmpsl
fidivrs
clc
cmp
xor
call
inc
sbb
das
iret
adc
adc
xor
fldcw
movsb
jne
add
fdivl
idiv
cmc
test
xchg
push
fsubrs
dec
lcall
push
jns
inc
xchg
xchg
ret
push
jecxz
cmp
decb
pushl
pop
xor
insl
sar
add
cld
movsl
mov
push
pushl
xor
ljmp
jmp
jle
ja
scas
sbb
or
imul
loopne
jne
shll
inc
jmp
inc
jb
aam
xchg
cmpl
out
xchg
xchg
mov
stos
mov
repz
bound
sbb
ret
imul
inc
incl
repnz
add
js
jg
cld
fmuls
xor
andb
jg
push
or
hlt
cmp
dec
push
ret
mov
cmp
pop
jb
or
cltd
jae
adc
nop
fimuls
orb
jne
imul
mov
xchg
test
cltd
je
test
stos
scas
js
movsl
xchg
cmp
pop
clc
rcrb
cli
call
cmp
add
lret
cmp
hlt
dec
sarb
in
push
sub
and
std
ja
call
cmc
xor
push
inc
movsb
pop
cmpsl
pop
insb
mov
sub
leave
mov
shl
xchg
adc
testl
and
or
aam
xchg
faddl
and
pop
and
add
pop
pusha
add
add
fisubl
or
dec
sbb
imul
or
or
add
add
or
add
je
lods
lcall
or
xchg
add
fstpt
pusha
adcl
sub
and
inc
add
mov
add
adc
aaa
cwtl
add
inc
repnz
sub
xchg
xchg
negb
repnz
or
adc
add
addl
sub
jbe
add
add
dec
mov
pusha
adc
cmpl
addb
adc
add
push
xchg
fs
add
adc
push
out
adc
cwtl
flds
adcb
push
fadds
push
add
pop
scas
pop
cmpl
cmp
fcomps
or
sub
pop
fcoms
mov
or
pop
add
adc
out
mov
xchg
add
xchg
xor
stos
dec
and
sbb
shlb
or
add
and
add
adc
cmp
dec
xor
push
rcr
sub
and
add
sbb
cs
push
push
call
mov
mov
push
ds
mov
andb
mov
sbb
pop
pusha
adc
out
pusha
prefetch
xor
or
lods
sub
addl
add
inc
add
enter
add
sbb
xor
insb
add
add
push
or
adc
punpckhdq
add
sbb
mov
push
mov
sub
mov
add
scas
loop
or
out
adc
add
add
or
add
cs
or
sti
xchg
or
movsb
inc
push
pusha
push
add
mov
mov
mov
xorb
fidivl
pusha
sarb
push
xor
scas
sahf
add
or
jle
sbb
add
cmp
sahf
mov
shlb
or
jo
push
fadds
faddl
add
cmp
clc
sub
or
cwtl
sub
js
pop
shrl
add
xor
rol
pusha
fs
add
or
orb
ss
insb
mov
ds
add
out
sarb
jp
sbb
sahf
rcll
adc
sbb
sbb
test
sub
dec
repnz
push
xor
lret
ds
adc
adc
add
or
adc
pop
movsb
rcl
pusha
pusha
push
sbbb
xor
push
or
inc
mov
pop
int3
and
or
test
psllq
addb
sbb
lret
insb
mov
lds
pop
shlb
mov
loopne
fsubs
shlb
test
add
lock
add
pusha
push
out
rol
mov
inc
into
loopne
movlps
push
mov
lcall
push
mov
cmp
subl
inc
sub
or
add
xor
fsub
mov
out
lock
add
adc
adc
push
popf
adc
lock
xchg
loop
xchg
mov
xor
pop
loopne
or
mov
rorb
pushf
ret
mov
ficompl
ss
jbe
adc
push
into
repnz
mov
mov
push
test
inc
dec
mov
and
cmp
jle
shlb
testb
jbe
xor
sbb
inc
or
cltd
jmp
add
add
addb
test
pusha
es
loope
xor
into
and
ljmp
or
add
in
enter
xchg
add
scas
out
hlt
ret
outsb
and
push
add
data16
mov
pushw
mov
int3
popl
sub
jle
xor
add
lock
test
fstps
mov
or
adc
push
mov
pop
aad
xchg
pop
push
andl
in
pop
xor
pop
jnp
pushf
movsl
bound
add
jb
push
push
sub
lds
mov
inc
push
jbe
enter
add
or
mov
data16
mov
add
int3
jp
xchg
mov
pusha
mov
or
push
pop
hlt
dec
fs
add
add
xchg
dec
add
xor
xchg
add
lods
xor
xchg
imul
xchg
mov
dec
call
xor
sbb
mov
test
cwtl
push
mov
rolb
test
inc
push
adc
popf
jne
hlt
mov
or
lock
data16
mov
mov
adc
push
sbb
push
incl
sub
js
shll
mov
sub
cli
clc
add
cmp
stos
add
push
loopne
subl
js
ljmp
cmp
sbbl
cli
adc
and
and
inc
lcall
and
into
or
xor
adc
mov
sbb
scas
ljmp
popw
or
xor
fsubr
lret
pop
out
orb
orb
add
mov
xchg
rcrb
bound
add
cwtl
rorl
mov
dec
add
pop
xor
dec
dec
dec
cmp
mov
sub
enter
jne
push
mov
or
mov
adc
xchg
test
add
cmp
sbb
dec
movb
mov
addl
mov
cltd
cltd
shlb
xor
and
jns
rol
insb
pusha
jecxz
pop
xor
int3
xchg
xor
sahf
add
bound
mov
push
es
daa
mov
sbb
xor
cmpb
push
fidivs
adc
pushf
cmpsl
ss
arpl
ss
dec
cmp
sbb
lcall
dec
add
in
mov
fmul
push
sbb
inc
pop
mov
outsl
loope
pop
mov
add
jbe
mov
in
mov
sarl
fadds
popf
push
int3
add
push
cmp
mov
adc
ret
adc
add
pop
loope
roll
popf
in
xor
push
adc
add
or
and
jbe
sbb
sub
or
cmp
xchg
ret
mov
or
in
ljmp
or
add
rorb
add
dec
add
lock
adc
cmp
and
cmpsl
mov
leave
int3
adc
adc
hlt
mov
jno
mov
ficoml
adc
pop
adc
lret
sbb
inc
shlb
push
mov
in
fs
inc
subb
add
jo
push
inc
mov
popa
dec
test
push
push
fiadds
or
sub
mov
cs
pusha
in
cmpb
or
cmp
pop
mov
cltd
xchg
mov
fsubrs
addl
lods
hlt
mov
adc
add
xor
shlb
fs
sti
mov
or
adc
dec
setbe
addr16
xchg
js
cld
aam
xor
ret
dec
pop
add
xchg
les
jbe
mov
inc
movsb
cmp
cs
and
ss
pusha
xor
adc
push
or
pop
mov
adc
mov
popa
and
in
or
loopne
test
pop
or
repnz
stos
sub
push
or
mov
mov
mov
add
bound
pusha
insl
jmp
mov
mov
xor
stc
mov
add
ret
pop
jge
insl
jle
push
faddl
rol
into
push
ror
out
mov
repnz
mov
or
testb
push
and
jns
repz
cli
test
pop
add
inc
or
xor
adc
lahf
dec
jae
pop
sbb
lahf
and
push
push
fidivs
das
adc
dec
jg
outsl
shl
roll
jo
jg
push
incl
xchg
adc
lcall
xchg
add
dec
pusha
xor
int3
inc
xor
std
inc
inc
add
add
push
les
inc
and
in
push
push
int3
xor
mov
shrl
xor
push
add
popf
adc
add
cltd
add
push
fneni(8087
cmp
pop
sbb
insl
pop
das
add
push
or
mov
out
push
or
insw
or
stc
in
sbb
das
ja
jg
pop
popf
fs
jo
pop
or
mov
movsl
out
xor
mov
mov
and
lock
add
scas
test
push
jae
jae
mov
add
or
add
rcrb
cmpsl
cs
and
add
jae
add
jo
and
data16
mov
pushl
add
mull
mov
xor
js
xor
js
jne,pn
fucomp
ja
subb
xor
or
addr16
imulb
subb
jo
mov
stc
push
add
pop
push
pushf
in
xor
jg
pop
lods
cld
nop
xchg
aaa
jae
jnp
cmp
stc
repz
stc
mov
xor
jnp
add
loope
or
push
dec
mov
stos
mov
or
push
xchg
add
fstps
or
push
push
and
add
fistps
sbb
add
fwait
int
add
and
sub
xor
aaa
cmp
xor
sbb
adc
sub
xlat
jle
aaa
xor
add
add
cmp
add
cmp
ds
pop
int
jbe
dec
add
cmp
push
cmp
outsb
inc
cmp
dec
es
dec
push
dec
mov
mov
push
push
dec
ds
dec
inc
push
dec
push
xor
imul
add
bound
push
dec
dec
pusha
add
insb
push
push
fs
adc
dec
jp
dec
push
pop
jno
or
fistl
push
bound
add
push
sbb
fidivl
data16
jns
push
jae
ds
aaa
outsl
pop
dec
cld
push
es
jns
fildl
jle
or
es
push
xor
repz
cmp
dec
add
dec
add
cmp
push
sti
int
ss
aas
push
add
aas
pop
add
xor
dec
add
xor
add
adc
popa
and
and
xor
mov
das
aas
jns
inc
dec
push
inc
push
dec
ss
imul
insl
pop
jae
push
insb
push
pop
outsb
inc
inc
js
pop
jne
push
gs
imul
add
imul
jle
arpl
push
inc
add
add
roll
cmpl
out
int3
int
iret
mov
or
jl
jno
or
pop
xor
mov
add
push
outsl
xchg
sbb
imul
cwtl
sbb
xchg
push
imul
pop
rolb
push
test
lea
add
push
add
lahf
xchg
adc
add
add
xchg
mov
add
outsb
cwtl
cwtl
and
xchg
sub
sahf
sahf
sub
mov
and
cmpsl
movsl
out
lds
mov
lods
stos
xor
cmpsb
movsl
cmp
mov
mov
fiadds
push
jmp
stos
stos
mov
mov
add
scas
push
push
mov
arpl
push
mov
cmpsb
dec
jle
mov
mov
pop
push
addr16
lret
inc
aam
add
aad
push
hlt
faddl
and
mov
inc
fwait
add
outsl
push
mov
push
pop
jbe
add
jp
add
jp
arpl
das
jo
add
outsb
in
xor
xchg
push
jne
aas
js
jle
cmpsl
cs
mov
insl
jle
push
jo
dec
roll
push
les
inc
pop
push
aas
neg
mov
push
ja
xchg
pushf
push
add
testb
std
lods
loop
nop
sbb
sbb
mov
lock
add
movsb
xchg
push
sbb
and
int3
add
enter
cmp
leave
inc
mov
inc
mov
fidivrs
pop
shll
jle
push
inc
test
mov
inc
faddp
sti
add
addr16
fucomi
rolb
inc
mov
int
ret
push
enter
enter
pop
aad
outsl
jecxz
mov
data16
mov
mov
lods
add
test
roll
into
xchg
jecxz
xchg
add
in
add
lret
subb
push
call
xchg
insl
fwait
lods
loope
leave
in
int
xchg
loop
loope
lock
int
push
xchg
mov
ror
add
cmc
int
push
lcall
fsubr
iret
repz
in
mov
insb
lcall
stc
in
adc
pop
inc
fidivrl
add
adc
pop
adc
shrb
in
adc
popa
or
pop
sarb
notb
sub
pop
push
pop
jbe
insl
jle
sub
or
adcl
jne
cwtl
in
insb
popa
shrl
adc
jne
cwtl
out
popa
icebp
outsl
sub
push
pop
pop
cmp
jnp
repz
std
jg
cmp
popa
rcrl
xor
xor
or
jmp
repnz
popa
mov
xor
or
ljmp
das
das
xor
mov
push
inc
pop
xchg
std
push
push
and
and
das
cmp
adcl
sub
mov
adc
sbb
sbb
das
xor
xchg
rcrl
sti
ficoms
mov
in
pop
push
jo
pop
and
xor
mov
sbb
mov
push
sbb
sbb
and
xor
cmp
fwait
jns
add
sahf
mov
or
add
repnz
divl
xor
jno
xchg
lahf
mov
incl
or
or
adc
data16
jo
jo
push
data16
push
jno
or
pop
add
dec
adc
jnp
dec
dec
dec
adc
std
jg
dec
dec
pop
mov
mov
mov
jmp
mov
in
in
mov
push
call
add
push
cmovno
push
push
pop
pop
cmpsl
mov
cmpsl
cmpsb
pop
pop
adc
mov
dec
add
add
pop
shr
inc
inc
push
fs
sub
cmpsb
mov
test
mov
push
inc
inc
inc
pop
inc
inc
popa
push
cmp
pop
into
aam
mov
add
clc
jg
inc
inc
popa
pop
cmpsl
ret
sarb
nop
push
add
pop
pop
movsl
cmpsb
mov
cld
lret
int
mov
push
add
fdivrs
enter
mov
in
popa
push
push
add
lret
ror
int3
int
incl
or
arpl
movsl
cmpsl
ret
ljmp
rcl
xlat
mov
fs
pop
mov
fstpt
mov
cmpsb
mov
sti
out
fnstsw
mov
mov
pop
pop
cmp
mov
popa
lods
ljmp
and
cvtdq2ps
pop
cmpsb
pop
push
ficoms
pop
add
cmp
pop
sarb
push
adc
pop
mov
lahf
ljmp
push
pop
adc
das
xchg
jle
pop
xchg
jo
jo
fisubrs
cmp
nop
mov
insl
movsb
jnp
inc
inc
jmp
rolb
add
out
fistps
jl
cltd
xchg
jmp
repz
iret
lret
jbe
mov
mov
sti
xor
xor
repz
ja
xchg
pop
pop
push
aas
xor
int
movsl
bound
pop
push
ds
aad
insl
inc
das
push
aas
mov
push
mov
mov
outsl
notl
cld
bound
push
lds
ja
push
xchg
ja
js
adc
adc
xor
xor
adc
repz
decl
add
cltd
adc
inc
mov
jmp
mov
mov
fdivl
or
or
or
mov
or
jmp
or
add
sub
aaa
fidivs
or
fistpll
int
jae
add
push
lcall
add
daa
add
jecxz
push
xor
add
sarb
je
ds
inc
inc
push
dec
pop
ja
shll
pop
pop
push
es
jbe
push
add
push
int
iret
incl
imul
pop
adc
outsb
jno
jl
ja
mov
push
and
cmp
inc
cmpsb
inc
dec
outsb
dec
push
add
jbe
adc
xor
add
ljmp
add
inc
dec
dec
inc
into
inc
dec
dec
add
dec
add
dec
add
add
jle
inc
dec
push
dec
push
add
dec
push
pop
add
pop
pop
push
push
push
push
pop
push
push
dec
pop
add
pop
add
pusha
push
pop
bound
popa
pop
popa
add
push
pop
fs
mov
add
es
mov
add
push
jo
jne,pt
idivb
jp
jle
cmp
add
mov
add
and
cmpsb
stos
mov
push
inc
dec
jmp
lea
push
shll
push
push
jae
outsl
mov
pop
jp
sbb
jp
xor
mov
fstpt
les
push
or
adc
mov
push
or
insb
jle
cmp
pmuludq
add
aaa
fcomi
fbld
icebp
add
mov
xor
mov
fcomip
add
mov
pop
mov
mov
mov
mov
or
inc
lea
or
mov
push
fwait
nop
lcall
push
pusha
test
orb
movl
mov
fdivrp
outsl
push
adc
ret
scas
and
sub
out
enter
and
outsl
fwait
out
sub
push
adc
out
add
xlat
call
insb
pop
push
and
jmp
in
repnz
push
xor
push
cmp
pop
rcrb
loope
push
out
testb
ret
insl
roll
dec
push
hlt
jl,pn
idivl
fwait
xor
orb
push
push
test
popf
cltd
aaa
fildl
push
mov
mov
add
cmpsb
sti
incl
insl
popf
test
movsb
add
stos
mov
lcall
data16
mov
mov
push
mov
mov
or
mov
add
mov
xlat
pop
mov
add
sarl
fsubs
jle
fwait
insl
inc
fisubrs
loope
jecxz
mov
xabort
call
xchg
mov
iret
add
add
outsb
push
mov
aad
rcr
aad
sub
dec
fs
es
rep
mov
andl
int3
push
mov
fdivs
mov
fidivl
fimuls
jecxz
insl
mov
data16
roll
push
fucomp
shrb
in
push
push
in
xchg
mov
cs
ds
lock
ret
sbb
fisttpll
in
push
loop
enter
out
imul
add
ljmp
scas
jmp
add
in
lock
imul
mov
out
repnz
push
aad
lods
fisttpll
jbe
call
jmp
xchg
ljmp
loope
in
idivb
jecxz
mov
xor
stc
repz
add
repnz
pop
pushf
std
xchg
cmp
cmp
lret
cli
nop
add
xor
add
insb
orb
pushl
jbe
cmp
ss
imul
or
rcrb
and
sub
adc
or
add
sub
lods
mov
or
pop
or
push
adc
lahf
repnz
or
scas
lods
add
push
cmp
xor
out
jg
out
lds
ret
push
ret
shrb
or
stos
cmp
mov
lds
lret
lret
or
or
das
jbe
scas
pushf
sarl
lods
cmp
sbb
lidtl
or
or
shr
pusha
lds
outsl
mov
cmp
dec
adc
dec
jecxz
out
jnp
es
mul
or
lods
or
fadd
cmp
jbe
mov
pop
dec
adc
loop
pop
ljmp
cltd
in
out
imul
push
daa
fadd
cmp
mov
mov
ret
std
ss
call
cmp
dec
sbb
sti
mov
daa
out
pop
or
mov
push
dec
lock
add
daa
pop
cmp
aaa
jae
fwait
pop
or
add
jg
bound
push
loope
loope
in
jmp
daa
mov
sub
or
jmp
addr16
test
adc
xor
stc
das
clc
or
sub
inc
out
loope
sub
pop
dec
adc
push
mov
mov
nop
or
out
negb
sub
or
cmp
jo
pop
jg
pop
adc
int
into
or
daa
into
das
jmp
inc
div
cld
cld
cmp
xor
jb
or
mov
lea
mov
fwait
pushf
cld
add
das
xchg
push
pop
lock
pusha
loop
cmp
inc
inc
popf
fdivr
fisttps
into
std
add
lahf
popf
inc
xchg
jnp
js
or
cmp
fistpll
or
sub
cmp
popf
cld
mov
lcall
jns
or
or
pop
dec
arpl
rorb
rorl
aad
flds
fcos
repz
mov
test
daa
aad
cmp
fistpll
sub
xor
inc
cli
mov
loopne
int3
pushf
ljmp
or
cmp
or
or
sub
int3
std
repz
cli
mov
icebp
pop
mov
hlt
aaa
fsubl
xlat
jg
in
lcall
aam
xlat
sub
inc
cmc
scas
mov
repnz
cmp
dec
push
fisubrl
fildl
mov
sti
jg
imul
cmp
in
cmovg
add
fidivrl
fcompl
test
jl
sti
fimull
or
push
mov
mov
loopne
xor
cmc
add
mov
jg
pop
push
sbb
or
inc
fldt
add
lcall
das
in
mov
add
movsb
or
xchg
sub
cmp
daa
pop
mov
or
jl
or
mov
mov
add
mov
cmp
and
adc
add
daa
movsb
or
pop
lcall
dec
cmp
ja
lret
outsl
orb
or
repnz
mov
jg
dec
xchg
insl
push
mov
int3
lcall
mov
cmp
lret
mov
jle
xchg
mov
or
outsb
or
inc
das
cmp
cmp
cmpsb
les
mov
daa
inc
or
fnsave
cmp
cmpsl
mulb
nop
mov
add
pop
jo
lcall
cs
addl
push
pushf
test
add
xchg
xchg
mov
add
add
call
xor
div
push
add
add
push
xor
sti
ja
jecxz
ja
mov
lcall
add
lret
mov
add
in
fucom
pcmpeqd
lock
jle
std
addr16
or
mov
mov
adc
stos
cltd
mov
mov
xchg
scas
xor
push
pusha
iret
test
orl
push
cmp
cltd
sbb
mov
adc
push
pusha
imul
xor
mov
out
pop
adc
lock
adc
adc
add
popf
xchg
movups
mov
jnp
sub
xchg
in
stc
mov
in
adc
xor
lock
pop
mov
mov
sbb
into
mov
shll
das
mov
pusha
fistpll
cmp
icebp
jg
adc
mov
pop
call
xor
push
jg
jg
adc
and
in
cmc
hlt
cmc
icebp
add
adc
adc
add
cmp
sub
xor
outsb
testb
out
pop
push
push
fs
jo
push
js
xor
fdivr
outsl
cmp
jae
add
dec
jnp
jae
sbb
push
arpl
add
add
aas
add
and
mov
xor
bound
sbb
push
xor
inc
shlb
mov
jbe
xor
jbe
pusha
add
push
ds
add
data16
inc
add
push
and
add
dec
dec
add
push
dec
fdivs
adc
jbe
push
push
inc
insb
push
dec
jb
mov
mov
push
jp
ja
or
jbe
push
rcr
arpl
jae
jle
add
push
push
jbe
inc
inc
in
fsubs
or
push
dec
ds
dec
outsl
fdivs
xchg
pop
arpl
jno
nop
inc
pop
fs
insl
adc
inc
addr16
pop
imul
add
add
push
xchg
loopne
push
and
xchg
xor
lea
pop
add
mov
add
push
cmp
add
negb
imulb
jg
mov
ss
cmp
mov
dec
loop
adc
repnz
pop
call
les
pop
xor
repz
and
lret
popa
push
shrb
insl
mov
mov
pop
xchg
add
push
jbe
mov
push
outsb
dec
iret
jae
jp
push
fistl
sub
jnp
add
jp
adc
push
cmp
dec
mov
bound
push
add
ja
outsb
jge
push
mov
sub
andl
add
lea
fldl
xorl
js
test
std
xchg
add
xchg
push
icebp
xchg
outsb
mov
imul
adc
mov
mov
push
addl
sbbb
push
sub
es
lahf
in
add
fs
xor
add
push
add
jne
add
js
push
push
mov
mov
jb
outsb
jns
jl
add
jnp
dec
dec
jle
xchg
pop
nop
out
mov
push
fmuls
out
jp
je
jb
mov
fcompl
or
movsl
notb
xchg
stos
sub
dec
insb
jnp
lds
add
dec
pusha
imul
addl
fwait
xchg
mov
xchg
mov
int
lods
mov
cmpsb
jle
mov
lods
loop
ds
test
xchg
push
popa
fisttpl
xchg
push
jg
sahf
push
mov
push
add
aam
sbb
enter
xchg
imul
outsl
jbe
rolb
xor
xchg
fidivrs
movsl
push
inc
stos
push
pop
mov
mov
sub
ret
ret
mov
push
add
fistpll
loop
pop
int
inc
lret
jle
xlat
aad
imulb
mov
inc
push
ljmp
add
mov
mov
mov
lcall
mov
push
pop
push
add
push
movsl
inc
mov
ret
insl
add
xor
in
xchg
out
icebp
popf
push
rep
push
shll
mov
push
jmp
enter
into
jmp
mov
sub
fidivs
movsb
flds
aad
jmp
fldt
jbe
lret
repz
sar
push
push
fdivl
mov
lret
pop
fcmovu
into
fcom
add
mov
jmp
push
fneni(8087
fbld
jmp
add
out
in
aaa
inc
fldt
ljmp
add
sti
cld
add
aaa
std
jg
jl
jnp
jns
pusha
push
push
dec
dec
dec
inc
inc
xchg
inc
dec
push
pop
sti
lcall
bound
dec
inc
inc
inc
mov
pop
loopne
add
jle
jg
jge
pusha
push
dec
dec
dec
inc
inc
inc
or
ja
stc
xchg
jge
js
fistps
inc
add
add
aaa
das
es
pushl
cmpsl
enter
ror
mov
add
out
fs
pop
ja
pop
dec
dec
inc
inc
add
xor
cmpsb
scas
lret
pop
out
jg
push
aaa
mov
fs
dec
inc
inc
inc
or
popa
or
into
scas
insl
fistpl
dec
inc
dec
pop
pop
inc
or
xor
into
pop
sub
xor
cmp
clc
inc
inc
push
inc
or
sub
sub
sub
pop
add
sysenter
jge
jmp
inc
adc
mov
nop
nop
inc
rcr
movsb
pop
or
pop
add
aas
lcall
jo
aas
xchg
or
sti
mov
add
mov
lea
jle
rcr
roll
add
xchg
lods
lods
and
lret
mov
add
rcr
fst
mov
add
add
lods
mov
lock
test
repnz
repnz
pop
popf
std
decl
sbb
xchg
mov
sub
mov
adc
loop
das
nop
pop
or
div
fdivl
sub
sti
fcmovnu
add
mov
sbb
mov
mov
cmp
fcomi
cld
cmc
test
outsb
das
xor
pop
ret
fcomip
ret
mov
xchg
pusha
rcl
xor
mov
in
hlt
scas
loop
mov
mov
xor
es
xchg
mov
pop
shr
xchg
adc
push
ret
push
clc
cmpsb
clc
jmp
mov
mov
push
and
pop
or
in
aad
jmp
xchg
pop
incb
mov
mov
and
test
idiv
mov
call
pusha
mov
addr16
rcrb
adc
jae
jecxz
cli
stc
int
pop
xlat
ljmp
mov
fstpt
sbb
mov
fsubp
in
int
fistl
sahf
pop
cld
pop
inc
cmovge
incl
and
push
and
loope
addr16
adc
sahf
es
pop
out
mov
adc
mov
in
pop
and
add
pushf
cmp
int3
mov
cmp
mov
pushl
lock
add
cmp
mov
neg
jmp
and
mov
pop
aas
fdivl
push
adc
bound
inc
push
xchg
and
mov
sbbl
add
pop
pop
mov
add
and
repz
add
cs
imulb
sub
mov
stc
mov
pop
push
xor
xchg
addr16
cmpb
mov
push
push
cltd
pusha
xor
pop
jg
xor
movsb
movsb
popa
inc
pop
fidivs
insl
pop
movsl
mov
outsl
testb
cld
popa
pop
add
push
inc
loop
inc
push
adc
push
stos
aad
inc
sbb
aad
or
sahf
push
pop
adc
ljmp
mov
adc
das
es
fbstp
jo
sub
xor
and
and
aad
clc
out
int3
out
in
add
add
xchg
xchg
pop
cmp
add
dec
jb,pn
jb
pop
jb
xchg
and
and
js
fs
add
pop
fcompl
ficoms
xchg
leave
and
in
add
cltd
xor
imul
xor
adc
pop
xlat
pop
xor
mov
dec
sub
mov
cmove
pop
popl
adc
jne
daa
pop
pop
pushf
and
vmaxps
aaa
add
pop
insb
add
cmp
xor
push
aas
in
pop
nop
push
jne
xchg
ss
add
and
ja
incl
dec
xor
add
xor
xor
push
add
add
sbb
rcl
push
sbb
and
adc
dec
add
sub
add
pop
add
cmp
aas
sbb
je
jae
data16
sbb
inc
cmp
dec
mov
dec
push
dec
push
add
push
pop
inc
addr16
popa
add
insl
repz
pop
bound
jbe
jge
pop
push
pop
imul
cmp
out
dec
inc
add
pop
std
subb
scas
jo
insb
jo
add
mov
insl
imul
imul
inc
clc
mov
test
xchg
sbb
push
hlt
int
mov
add
sbb
sahf
xor
push
das
pop
mov
stos
xor
push
fwait
cmp
inc
fsubrs
sti
or
orl
lret
push
push
xlat
push
es
fdivs
ljmp
xchg
imul
jbe
jl
mov
fcomip
test
add
add
outsb
lods
mov
add
mov
loopne
loopne
push
add
xchg
pop
push
or
pop
cmp
mov
shlb
out
cmp
add
mov
cmpsb
cmpb
sub
testb
push
pop
xor
add
cld
outsl
cs
popf
add
pop
xchg
add
insl
add
jo
js
push
jge
sub
add
lea
mov
arpl
mov
mov
mov
das
dec
scas
push
mov
cmp
dec
push
lahf
cmp
mov
inc
push
pop
pop
fldt
dec
test
je
push
jnp
outsl
xchg
fdivr
idivb
push
jge
add
mov
sub
cmp
gs
mov
inc
ret
mov
jno
push
dec
pop
ret
jae
add
mov
insb
or
xchg
adc
lea
cs
loopne
fnstenv
cwtl
push
cmp
mov
pop
mov
add
push
inc
nop
cltd
roll
cmpsb
mov
mov
pop
fwait
push
push
fdivl
push
test
push
xchg
mov
or
fisubs
mov
cmp
aad
ds
fistpl
leave
cmpsb
mov
or
fcoml
xor
push
xor
outsl
pop
mov
add
loope
test
pop
sub
mov
inc
push
mov
xchg
xchg
jbe
pop
hlt
add
lret
rcr
test
pop
mov
cld
jmp
fadds
bound
les
rcrl
jo
faddl
imul
mov
mov
push
mov
jne
stc
add
sub
enter
fmulp
mov
push
shl
add
rorb
sub
std
add
enter
cmp
insl
fildl
add
repz
outsb
imul
rcl
inc
lret
clc
xchg
in
push
or
cld
push
je
nop
orl
xchg
xchg
jle
mov
ret
xchg
mov
data16
mov
cs
testl
aad
data16
push
cmpsl
fcoms
xchg
out
sti
rcrb
add
add
aam
pusha
add
push
sbb
sbb
push
sbb
inc
and
hlt
insl
or
sbb
adc
pop
and
sub
outsl
and
insb
push
add
add
sub
mov
imul
pop
adc
insl
xchg
adcb
imul
imul
pop
add
push
sbb
in
bnd
insl
xchg
sbb
pop
push
jp
sub
imul
jbe
imul
xchg
and
in
ja
out
lods
mov
mov
ret
inc
sub
jns
test
data16
fldln2
xchg
jns
out
jnp
pop
je
pushf
add
dec
sub
push
mov
mov
push
divb
mov
mov
sti
cmp
lret
pop
mov
ret
imul
or
pusha
adc
add
jge
outsl
sub
add
test
sub
or
add
push
int3
lret
and
cmp
mov
mov
fdivrs
cmp
sub
inc
dec
mov
mov
sub
sbb
outsl
mov
iret
mov
jl
push
push
mul
xor
add
mov
sahf
cmp
pop
sbb
mov
and
jo
or
mov
and
pop
sbb
jne
outsb
cmp
sbb
cli
scas
sbbl
jle
xchg
loop
ret
inc
mov
sbb
sbb
push
iret
add
sub
dec
pop
pop
jg
mov
test
sbb
jne
sahf
push
inc
mov
dec
movsb
cmp
mov
add
pop
jnp
clc
sub
dec
jns
insl
into
mov
or
ljmp
and
into
imul
mov
and
push
sbb
mov
mov
nop
sbbb
aaa
in
shl
and
and
pop
imul
cld
mov
insl
sbb
test
ljmp
hlt
mov
es
sub
and
dec
adcb
loop
jne
outsl
imul
adc
mov
add
sbb
and
testb
mov
mov
jno
jo
jl
leave
sub
jp
mov
and
add
inc
outsl
adc
jbe
enter
jns
sbb
ficoms
mov
push
les
or
jg
cmp
mov
ret
sar
lret
mov
faddl
mov
add
out
xor
test
mov
testl
mov
add
test
inc
add
enter
mov
adcb
add
or
cmp
xchg
pop
imul
rol
test
pop
pop
jle
jle
js
loope
push
push
inc
sbb
lahf
int3
cs
add
cmpl
scas
add
call
xor
js
bound
call
imul
jle
dec
mov
mov
jge
lods
loopne
adc
stos
loopne
ljmp
leave
int3
fists
add
sbb
cld
xor
inc
add
sub
push
push
xor
sarl
jns
xor
jle
or
ljmp
cmp
cmpsl
cmp
xor
pi2fd
push
adc
inc
dec
dec
pop
pop
pop
push
push
pop
in
out
les
mov
add
mov
iret
xor
movb
in
fwait
das
sub
inc
inc
dec
pop
decl
dec
and
rorb
or
lcall
sbb
lods
and
rcl
mov
or
xor
lret
jo
int
movsb
xor
or
cmp
int3
test
dec
push
orb
mov
jle
cli
cmc
idiv
mov
mov
daa
cs
fidivl
pop
add
andb
push
push
les
add
add
aad
cmc
aad
jg
jnp
mov
mov
cltd
cs
pop
add
cmp
inc
outsl
orb
ds
inc
cmp
aad
push
pop
sbb
xchg
js
xlat
add
xchg
mov
jmp
mov
jno
and
and
ds
or
inc
cmp
pop
cli
dec
dec
mov
add
adc
jl
sti
call
and
push
ss
es
int3
fisttpll
pop
or
or
dec
aaa
adc
and
outsl
and
and
cmc
cmc
div
aad
and
mov
pop
jl
sub
xor
js
std
xchg
lret
inc
or
cmc
xlat
cmc
sarl
add
mov
mov
outsl
mov
and
jg
mov
jg
sbb
push
mov
or
mov
mov
sub
mov
iret
imul
xchg
imul
fbstp
roll
xlat
scas
sub
mov
ret
jge
push
fdiv
testl
sti
jecxz
shl
xchg
outsl
scas
pop
and
xchg
push
cli
inc
adc
sbbb
or
mov
lret
subb
jle
idiv
add
jle
loope
inc
mov
mov
xchg
xchg
cmc
cli
jl
addb
scas
mov
aaa
js
mov
addl
pushl
jg
mov
jg
mov
adc
add
mov
jle
subb
scas
add
sub
jge
iret
testl
jge
mov
add
cmp
jge
decl
fs
sti
stc
stc
hlt
repz
xlat
call
add
insb
jg
ret
shr
idivl
ret
jnp
rcll
andl
add
pushf
mov
outsb
or
cmp
or
sbb
jle
inc
shll
sbb
jnp
std
jg
out
jmp
cmp
xlat
daa
jno
mov
fsubp
jmp
jp
aad
sahf
mov
lods
push
scas
sti
loopne
inc
aad
andl
sti
xlat
ss
ficoms
cld
jb
enter
push
or
mov
jbe
iret
pusha
add
sbb
jle
add
mov
faddl
push
aad
popa
xchg
fcomip
incb
sti
cli
in
aad
call
imul
aad
addr16
gs
jle
mov
xchg
jmp
mov
loopne
or
call
stc
adc
lds
shl
push
mov
ret
jl
andl
jecxz
loope
sarb
xchg
sti
adcl
adc
sub
lret
jle
andl
jl
xchg
ss
popa
xchg
sub
adc
rclb
jle
add
mov
ret
pop
push
jge
jg
repnz
std
push
subl
in
adc
xchg
mov
out
sahf
loope
mov
dec
iret
jle
adcw
jecxz
mov
sbb
adcl
push
adc
jns
jle
mov
jle
pusha
xchg
cmp
mov
cli
sub
jne
adc
pop
sub
cld
decb
pop
inc
push
cmpb
scas
cld
fidivrl
push
ja
test
je
inc
push
jl
aad
sub
int3
loopne
jle
sti
test
mov
jg
pop
jle
sti
and
dec
push
jge
outsl
and
sub
mov
adc
call
aaa
dec
jno
push
sbbb
stc
and
pop
fs
call
addb
cli
dec
mov
add
cld
dec
push
jle
sti
sbb
xorb
dec
jno
idiv
jg
mov
int
mov
adcl
jl
repnz
push
lods
mov
xchg
clc
addl
jg
insl
xchg
test
mov
xchg
mov
pop
xchg
cwtl
push
daa
aas
insb
popa
arpl
cli
lds
sarl
lock
xchg
call
sbb
push
fnstsw
incl
jbe
add
jecxz
aas
test
outsl
ret
lods
adc
lds
cmp
add
pushl
clc
lods
outsl
cld
and
or
xchg
mov
jl
xchg
xchg
popl
jg
ret
pop
ds
cld
cmp
or
std
out
into
ret
cmpb
jnp
add
sti
xlat
ret
jl
add
add
int3
add
mov
addr16
jge
push
jg
mov
cmpb
push
sbb
popl
aam
insl
push
sbb
mov
lds
iret
fistl
in
sub
clc
sarb
gs
outsl
insb
push
jle
ror
subb
shr
out
jnp
xor
sti
cmc
lret
jle
push
lods
aam
ss
fadds
adc
mov
xlat
lds
addb
adc
add
xlat
aam
add
call
xor
push
mov
mov
jle
call
add
clc
cli
rolb
out
call
mov
inc
sti
rol
jmp
lret
scas
pop
pushf
xlat
cmc
push
clc
je
or
pop
subl
out
add
inc
aad
clc
decl
cmp
stc
add
mov
pop
cltd
adc
jecxz
les
xchg
int
add
testl
or
repnz
out
push
lret
xlat
cmp
add
pop
add
xchg
inc
add
int
sti
inc
jp
inc
mov
or
add
pop
add
xchg
int
cmp
lcall
sub
mov
pop
mov
pop
lock
outsl
jnp
pop
xor
xor
xor
aaa
mov
or
js
fnsave
popf
fstl
xor
das
ja
pop
fucomp
insl
outsl
xor
xor
fldl
fadds
pop
push
inc
arpl
jg
or
and
scas
add
push
inc
or
add
add
or
mov
push
inc
sbb
pop
aaa
add
aas
add
and
add
mov
sub
outsl
push
push
outsb
sub
sbb
dec
push
cs
add
aaa
push
add
cmp
cmp
cmp
sbb
push
outsb
ljmp
outsb
adc
inc
push
mov
popa
add
ja
negb
es
and
add
push
inc
and
mov
int
dec
jns
push
cs
jge
jns
inc
mov
mov
dec
test
push
push
decl
mov
ss
nop
jbe
mov
xor
add
pop
xchg
add
pop
xchg
add
fldt
sti
push
arpl
sub
add
gs
push
push
cmp
add
fwait
add
jno
add
push
add
xor
jp
ss
int
jge
add
test
inc
jno
js
inc
jge
jle
lods
and
add
mov
test
neg
mov
inc
sbbb
cs
mov
inc
xorl
dec
lea
mov
dec
xchg
mov
add
inc
xchg
rolb
in
pushl
dec
fwait
into
push
lahf
int3
add
add
roll
pop
stos
aam
stos
sbbb
fldl
cmpsl
cmpsb
cmpsb
ss
test
lods
std
mov
add
ficoml
mov
push
loopne
je
xlat
add
add
in
push
mov
add
in
add
testb
jne
sbb
iret
repz
push
ja
push
fsubl
push
mov
addl
push
mov
push
dec
dec
mov
xchg
push
xchg
xchg
xchg
cwtl
es
cltd
push
xchg
xchg
ds
fstpl
pushf
lahf
add
test
add
mov
mov
mov
mov
movsb
cmpsb
test
cmpsb
xchg
cmpsl
push
stos
test
push
or
lcall
scas
add
lods
cmpsb
add
scas
out
mov
sbb
add
push
mov
xchg
lds
iret
mov
out
mov
sarl
lret
mov
fildll
les
sarl
enter
mov
push
push
jle
mov
rol
iret
ret
scas
lds
int
mov
inc
mov
fldt
xor
push
int
rcrb
mov
fdivl
push
sbb
jl
insl
xor
repz
sahf
cli
jo
cmpsl
fldenv
outsl
fisttpl
fcmovb
add
movb
lret
leave
out
enter
jge
fbstp
push
ror
lret
rcr
shlb
ror
fcmovnbe
outsb
mov
loopne
fcmovnbe
rcll
flds
in
outsb
out
insb
es
roll
fstpt
loop
int3
pushw
jmp
fstl
pop
in
dec
in
fistpll
fisttpll
mul
push
jmp
push
mov
lret
in
jmp
loop
add
jecxz
aad
lods
xor
add
out
ljmp
in
es
add
mov
std
out
push
repnz
pop
les
push
fdiv
std
mov
add
push
out
add
in
in
in
jecxz
loop
mov
ljmp
push
in
call
repz
push
in
cli
mov
mov
punpckhbw
in
jbe
xchg
hlt
std
incl
jp
nop
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
cmp
add
adc
xchg
xchg
ss
push
sarl
xchg
mov
add
cmp
push
ds
fistpl
and
add
negl
adc
fsts
sbb
rcr
rcl
jecxz
jecxz
fcomp
sub
fldcw
fistpll
rcr
rcll
rcl
scas
in
in
mov
mov
ror
rcl
shrb
jg
in
mov
push
xchg
std
xor
scas
test
push
fidivrl
fwait
test
lret
sub
jnp
loopne
mov
scas
rorb
xchg
sti
out
mov
outsb
jbe
lahf
scas
fdivrs
jbe
adc
ficomps
jne
mov
pop
scas
pushf
jge
imul
mov
and
add
imul
scas
ret
sub
jae
sub
std
ljmp
mov
push
sti
pop
sub
or
aas
outsb
jl
sarb
cmp
inc
outsb
mov
pop
int
or
or
popa
addr16
sbb
push
push
adc
add
aas
ret
sub
and
sbb
std
lods
mov
idiv
fisttpl
push
sub
and
aaa
cmp
xor
sbb
mov
test
cmpsl
imul
sub
std
stos
orb
sub
cmp
sbb
aas
rcrb
pop
cmp
cmp
pop
subb
adc
xor
push
sbb
popa
pop
push
or
lret
lcall
inc
arpl
sub
pop
sbb
pop
jecxz
lods
pop
lret
sbb
fs
in
sti
mov
mov
ds
xchg
out
sbb
sti
jmp
mov
pop
sbb
dec
adc
sub
jmp
pop
pop
pop
addr16
inc
cmp
mov
pop
ljmp
loope
jae
outsl
call
sbb
cmp
push
add
pop
sub
cmp
cmp
call
movsb
sub
sub
and
xor
sub
imul
stos
xor
mov
jo
mov
ret
aas
mov
sub
loope
stos
ret
lods
movsb
std
imul
pop
in
ret
and
decb
sub
lods
lret
fs
jle
mov
call
stos
mov
call
jbe
loope
jmp
sub
in
ret
xor
push
mov
stos
stos
mov
vmovdqa
subl
popf
dec
das
fwait
mov
mov
push
popf
cltd
insl
out
aad
sub
aaa
mov
in
mov
xchg
loope
mov
or
rol
out
mov
icebp
out
mov
into
mov
lds
outsl
cmp
jecxz
rcr
mov
aad
mov
jmp
ja
out
les
mov
ss
jecxz
mov
xchg
sub
fisttpll
in
mov
js,pn
or
out
sub
imul
ljmp
out
into
lds
les
out
into
into
aad
out
or
out
fstp
iret
outsb
addr16
push
jmp
mov
ret
in
outsl
or
vpunpckhbw
out
mov
adc
into
fidivs
sub
ljmp
out
shll
cmpsb
bound
aam
test
cmpl
repz
sarb
adc
idiv
fs
mov
push
jno
inc
jb
movsl
fucom
out
mov
jnp
push
in
movsb
mov
mov
jae
incl
inc
jae
ret
mov
stos
div
lcall
dec
push
idiv
push
icebp
lock
movsb
andl
dec
sti
incl
sbb
insl
ja
mov
mov
pop
cld
mov
idivb
movsl
sbb
sub
testb
push
xor
js
mov
jns
dec
enter
or
pop
clc
mov
sbb
or
push
jno
jns
inc
ljmp
push
or
sub
movsb
leave
in
mov
push
repz
mov
xchg
dec
push
icebp
pop
addl
dec
pusha
mov
xchg
fstpt
mov
mulb
fldl
mov
adc
and
out
stos
or
cmp
mov
jo
iret
fs
or
pop
stc
clc
fcmovnu
push
cmp
loop
cmp
mov
push
mov
cmp
push
add
cmp
jbe
lods
xchg
cmp
stc
in
std
lcall
add
adc
dec
data16
arpl
mov
mov
out
mov
push
adc
sbb
notb
cmp
cld
stc
insb
out
jle
or
not
mov
add
repnz
jnp
outsb
ja
clc
repnz
clc
cld
sarl
lock
repnz
pop
sub
mov
mov
outsb
cmpsb
pop
clc
std
ss
popf
es
imul
leave
movb
leave
out
push
push
pushl
and
les
sub
in
push
push
dec
and
jbe
out
mov
inc
std
cmp
sub
lcall
add
push
das
cmp
sbb
push
and
std
ja
in
cwtd
cld
or
jnp
fnstsw
daa
inc
adc
insl
pop
fstl
pop
cld
xor
jne
adc
cld
std
subb
adc
mov
adc
pop
mov
add
pusha
xor
adc
in
mov
sbb
and
xor
aaa
adc
add
xor
push
in
mov
hlt
add
inc
aaa
push
push
adc
adc
sbb
fwait
inc
dec
dec
add
dec
dec
push
dec
imul
inc
inc
push
dec
inc
add
pop
lds
filds
gs
add
jbe
fldln2
imul
add
dec
add
dec
dec
ds
insl
push
dec
je
es
incl
push
jp
add
add
add
push
add
push
inc
loope
je,pn
fwait
fwait
jns
dec
jl
mov
icebp
pushl
cmp
xchg
jno
mov
outsb
nop
mov
jne
jg
pop
mov
mov
lcall
cwtl
add
mov
mov
push
add
outsl
test
ljmp
add
mov
cmpsb
sahf
push
lahf
nop
jle
lahf
mov
mov
xchg
mov
stc
filds
pushf
xchg
add
xchg
sahf
xchg
add
adc
movsb
popf
add
add
cli
in
call
scas
test
cwtl
mov
mov
mov
aam
fwait
es
mov
scas
xor
push
mov
add
and
add
leave
lcall
sarl
mov
lods
mov
scas
push
mov
ret
add
mov
lds
mov
ror
aam
add
in
aad
push
aam
dec
xlat
int3
xlat
into
ds
add
shll
add
ror
push
rcr
push
fcom
push
rcl
jl
in
rolb
fcom
add
fxch
add
iret
add
mov
fdivr
add
push
out
pop
loop
xchg
aam
add
fldcw
mov
movl
outsb
push
shlb
xor
fsubp
push
in
in
out
into
mov
imul
call
loopne
out
js
insl
imul
roll
in
out
cld
jecxz
cli
cmpsl
outsl
fwait
jecxz
in
repnz
add
out
inc
cld
int3
mov
cmc
out
in
in
ss
outsb
lock
push
cs
jmp
repnz
sub
icebp
xlat
outsb
outsb
not
loopne
push
outsb
arpl
jmp
push
filds
in
aad
jecxz
fsubp
add
out
fucomi
out
loope
call
insl
mov
inc
in
call
outsb
mul
ds
loope
ss
out
icebp
ljmp
hlt
out
push
stc
jmp
fldt
jbe
dec
cli
pop
call
outsb
mov
imul
call
repnz
loopne
mov
loop
pop
cli
lock
repnz
icebp
out
rcr
cmc
cmpsb
mov
push
repnz
xlat
xchg
push
cli
repz
xchg
hlt
int
fnstcw
ss
sti
idiv
into
clc
out
sti
loopne
stc
mov
push
jmp
out
out
repz
outsb
mov
cmc
hlt
outsb
push
lock
push
std
hlt
sub
div
push
outsb
repz
in
fisubl
stc
fadds
clc
icebp
adc
xchg
inc
push
lock
clc
ss
fistps
incl
cmc
stc
add
div
cli
divb
call
cli
push
push
ds
out
or
cmp
push
push
clc
cld
mov
cli
xchg
es
cld
cld
mov
or
adc
out
test
sub
cmp
out
xlat
clc
push
inc
cltd
fiaddl
dec
mov
pop
cmp
add
mov
jg
or
cli
xchg
mov
rol
lcall
or
aaa
mov
and
lock
cmc
jg
push
or
mov
lds
pop
or
rcrb
and
or
pop
sub
dec
xor
dec
dec
add
out
aaa
fsubs
jmp
jecxz
lret
sahf
xchg
cltd
add
xor
aas
mov
pop
dec
js
push
push
fs
mov
lret
aaa
insl
repnz
movsb
int
out
pop
pop
xor
pop
stc
daa
push
lods
je
arpl
mov
out
jecxz
loope
repnz
decb
xor
jne
jns
mov
fisubrs
in
repz
lock
lcall
icebp
stos
xchg
in
mov
xchg
popf
ret
rorl
xlat
cld
aam
sar
scas
xor
gs
ja
rcrb
rcr
imul
push
pop
pop
pop
pop
outsl
jo
jae
mov
ja
test
sti
or
push
inc
bound
inc
inc
inc
ds
aas
inc
inc
inc
inc
push
pop
or
xor
test
bound
sbb
adc
in
mov
sbb
add
sub
mov
scas
pop
and
and
dec
sbb
push
sbb
pop
push
xor
fiadds
fistpll
lcall
shrb
fbld
xor
pop
in
jns
push
dec
xor
xor
test
addr16
jb
adc
pop
cmp
testl
stos
lods
add
jecxz
pop
dec
jp
xor
xor
sub
jl
outsb
or
sub
es
fdivr
jge
pop
in
pop
pop
xor
mov
out
mov
fisubs
dec
pop
dec
bound
fxch
int
cmp
cmp
pop
daa
pop
sub
es
das
mov
dec
pop
xor
push
addr16
stos
mov
testl
push
xor
and
push
fs
push
and
mov
push
and
in
jg
addl
jge
adc
add
fs
loop
divb
popa
outsb
call
jle
jmp
roll
pop
add
push
mov
ret
jge
testl
lods
popa
das
fcompl
lea
adc
jbe
pop
push
dec
sub
cmc
pushf
femms
jle
add
movups
pop
mov
and
add
mov
mov
xor
pop
adc
cmp
mov
inc
outsb
addl
cmp
add
or
int
imul
rcrl
pop
mov
pop
push
rcll
sbb
je
mov
adc
add
call
adc
dec
add
cmp
dec
dec
push
push
mov
pop
push
add
push
add
push
imul
add
mov
push
mov
fwait
int
repz
mov
xor
cmp
mov
add
push
mov
fildl
pop
mov
mov
push
dec
dec
rorb
loop
pop
sti
mov
rclb
push
push
ret
push
pop
pop
les
insb
or
dec
repnz
repz
data16
hlt
pop
cmc
pop
negb
movb
cld
add
fdivr
mov
es
cld
add
imul
fxch
lcall
outsb
jle
leave
out
jo
push
jo
push
jae
stc
in
jnp
jne
ja
jne
jns
jle,pt
repz
insb
ss
mov
int3
jp
jl
jge
jg
ss
mov
jg
popa
testl
stc
fucom
shrl
jno
sti
ja
xchg
lea
nop
and
xchg
js
add
idiv
insb
dec
add
testb
jp
mov
pushf
addb
cltd
add
mov
add
fistpll
test
xchg
add
push
mov
xchg
add
xchg
roll
fwait
add
pushf
mov
int
fcmovnu
mov
or
mov
push
iret
push
sar
test
push
insb
ss
insl
test
push
xchg
xchg
mov
mov
mov
int
insl
mov
xchg
rolb
xchg
aad
xchg
xlat
xchg
dec
stos
fnstenv
push
xchg
fcoms
mov
ficompl
mov
xchg
lcall
addr16
push
cltd
sahf
mov
aam
cmpsb
aad
cmpsb
pop
fisubs
out
imul
filds
scas
subb
outsl
scas
data16
scas
jbe
cs
mov
mov
int
out
mov
mov
lea
out
int3
movb
lds
xlat
int
add
aam
divl
lret
jmp
int3
ret
sbb
mov
fisubl
loopne
iret
rcl
push
cmpsb
addr16
jge
fstp
push
lret
repnz
in
in
push
mov
idiv
repnz
cmc
clc
inc
jae
in
aaa
stc
jbe
pop
add
pop
nop
lret
add
jno
popa
sbbb
pop
add
mov
jmp
pop
add
add
movsl
mov
and
popa
pop
decl
subl
xchg
xchg
xchg
mov
pop
sbb
stos
lods
lods
mov
mov
add
sbb
cld
jmp
daa
daa
das
xor
xor
aaa
cmp
cmp
jne
orb
cvttps2pi
dec
dec
dec
jbe
js
jl
subb
fimuls
popf
popf
xchg
mov
iret
push
inc
fwait
add
cmpsl
test
mov
mov
mov
sbbb
inc
inc
dec
dec
dec
dec
jae
jns
jge
xorl
lods
test
cltd
cmpb
and
cwtl
cmpl
addb
mov
sbb
mov
les
sahf
mov
add
mov
imul
fwait
cmp
inc
repnz
cmpsl
mov
pop
mov
lret
lret
outsb
imul
aas
add
jle
popa
jg
mov
pop
mov
jg
mov
cmp
movsl
xchg
leave
lret
insl
push
and
test
pop
push
push
insb
outsb
or
popa
mov
repz
jns
cmpb
add
data16
or
out
int
cmp
sahf
jle
xchg
sbb
decl
pop
popa
jae
mov
mov
push
arpl
pop
xor
popa
dec
fwait
bound
jle
pop
popa
pusha
pusha
push
cmp
mov
mov
mov
xor
loopne
clc
dec
fwait
jbe
mov
pop
iret
mov
or
xchg
mov
adc
and
fwait
dec
daa
xchg
mov
pusha
call
adc
negb
mov
pop
mov
in
add
ret
inc
fwait
dec
es
pop
pop
inc
add
push
pusha
pop
ret
fwait
inc
and
pop
push
adc
or
lods
add
xchg
stc
xchg
mov
add
xor
movsl
mov
outsl
les
add
fsubs
fisubl
les
push
push
jle
adc
mov
adc
pop
and
jg
sub
sub
add
sub
dec
dec
push
push
cwtl
push
push
mov
mov
pop
aas
add
ret
add
test
dec
or
in
sub
das
add
adc
push
and
add
push
pop
rcrl
xor
xor
add
pop
sti
push
jns
xor
push
sbb
add
ss
inc
fnstcw
es
push
push
push
arpl
jae
idivb
inc
push
cmpl
orl
mov
negl
push
mov
arpl
dec
shl
jae
call
pop
inc
mov
imul
jae
adc
inc
outsl
jle
fnstcw
jae
mov
xchg
stos
xchg
add
rcll
mov
xchg
aas
dec
movsb
mov
ret
mov
out
imul
int3
sahf
cmpsb
rcrb
rcr
push
sub
add
jecxz
in
imul
in
repz
push
hlt
pop
hlt
sti
loopne
movsl
jns
ljmp
scas
sub
xor
les
add
add
enter
cmp
insl
sbb
add
add
stc
mov
or
inc
sub
mov
cmp
cmp
dec
dec
dec
dec
dec
dec
inc
inc
inc
cmp
idivl
push
popa
ds
xchg
notb
inc
push
push
popa
inc
imul
xor
and
inc
sbb
ret
push
lock
pop
adc
or
or
pop
jmp
mov
cmp
sub
sub
pop
or
cmp
ss
rorl
xchg
push
xor
fildl
push
fcmovbe
loopne
sub
pop
or
dec
pop
cmp
pop
jns
idivb
xor
xor
dec
sub
sbb
or
sbb
jl
and
xor
aam
outsl
sbb
and
aaa
cmp
mov
inc
dec
pushf
and
cmpsb
popf
imul
adc
fldl
mov
adc
pop
repnz
mov
mov
and
dec
jo
push
cmp
add
jns
in
sub
or
ds
adc
push
sbb
mov
or
lcall
lods
add
inc
sbb
fsubl
push
and
add
mov
pop
push
push
adc
or
pop
pop
xchg
popa
pop
aaa
sbb
push
and
add
pop
push
push
and
add
lds
dec
mov
add
insl
mov
push
pop
fldl
out
push
push
pop
pop
mov
pop
push
pop
push
pop
pop
pop
push
loop
mov
movsl
add
dec
scas
add
add
cmp
in
loope
iret
add
push
ja
push
lock
pop
movsl
sbb
fidivl
add
lret
outsl
fcomip
ljmp
pop
cli
cmp
stc
nop
outsl
neg
fst
stos
push
das
cli
add
mov
ud0
adc
outsl
jnp
das
xor
xor
das
aas
notb
xor
xor
incl
pop
insl
stc
and
pause
jo
cld
mov
sub
je
pop
outsl
pop
mov
mov
out
inc
das
add
push
add
cmp
int
push
push
push
inc
push
push
add
fldt
push
jae
js
jnp
xor
or
aad
imul
add
jb
mov
scas
sahf
aaa
jge
push
cmp
sub
data16
sub
data16
mov
add
sahf
add
pop
pop
pop
fwait
leave
ljmp
push
jbe
mov
push
add
insb
sahf
mov
rolb
test
xchg
xchg
mov
or
lock
nop
push
lcall
sbb
push
or
mov
sub
insl
addb
xchg
dec
pop
sarb
insb
cmpsb
adc
push
xchg
cwtl
dec
outsl
mov
cmpsb
test
add
add
mov
mov
xchg
lods
lods
arpl
jmp
imul
add
mov
or
mov
adc
test
xchg
add
mov
test
sbb
add
add
xorb
xor
push
aaa
push
or
cwtl
dec
aaa
aaa
pop
xchg
push
cmp
or
cmp
add
outsb
sbb
mov
ds
xchg
push
inc
shrb
outsl
push
push
inc
popf
add
inc
lcall
mov
mov
fisubs
sub
mov
aaa
sub
dec
nop
xchg
add
dec
cltd
dec
ljmp
mov
push
cs
dec
sub
sub
sub
push
sahf
add
jle
insl
rcrl
dec
mov
push
das
push
mov
fcmovnbe
outsb
xor
push
pop
pop
ss
push
xor
xor
lahf
fwait
lcall
add
pop
movsl
add
pop
xor
and
ds
insl
aaa
mov
push
cmp
test
cmp
out
push
mov
pop
jl
dec
insb
cmpsl
add
dec
inc
imul
jae
pop
jge
inc
push
in
mov
ss
inc
insb
push
inc
outsb
mov
push
push
imul
dec
outsb
mov
inc
inc
outsl
mov
add
ss
push
jae
jbe
lcall
push
js
add
mov
add
dec
jne
add
push
jl
push
jge
add
ds
decl
pop
jle
add
add
pop
mov
outsb
mov
push
inc
or
cmpb
andb
mov
outsb
orl
enter
stc
fwait
lods
cmp
mov
add
lret
mov
outsb
mov
push
mov
imul
into
sti
lods
fisttpll
popf
iret
mov
jno
push
mov
xchg
rcrl
xlat
add
es
aad
mov
ret
fsubr
movsl
fnsave
push
push
fneni(8087
nop
loopne
fwait
int
sti
filds
xchg
add
jbe
jbe
mov
mov
push
mov
push
mov
mov
or
mov
push
mov
mov
pop
add
inc
into
cmpsb
push
sub
mov
push
test
sahf
mov
xchg
mov
lcall
fldt
mov
mov
add
es
mov
aaa
cmpsl
shl
ret
loope
loop
lret
out
imul
out
mov
mov
add
mov
ljmp
mov
mov
xlat
repnz
add
rolb
fcoms
or
in
add
aam
rcl
push
add
and
push
fsubrs
add
xchg
fcoml
addr16
and
jl
xchg
movsl
lcall
bound
pop
outsl
mov
mov
mov
in
xlat
mov
call
jl
pop
pop
push
jns
cltd
test
ss
shl
in
lcall
and
fnstcw
pusha
pop
push
jae
push
mov
lds
sub
repnz
stc
stc
stc
out
fnstcw
imul
sbb
adc
push
ljmp
mov
mov
push
jbe
out
xor
push
enter
pop
push
dec
ds
aaa
das
nop
or
push
cmp
jmp
add
repz
xchg
xchg
or
repnz
sbb
aas
inc
fdivr
out
cmpb
mov
push
sbb
aas
nop
addl
sub
out
xchg
incl
push
inc
jns
jle
into
faddl
cld
out
cmp
std
xor
pop
mov
and
cmc
sbb
inc
lahf
sub
hlt
lea
add
int
out
incl
test
addb
jns
out
sbb
push
pop
adcl
mov
add
out
shl
aad
stos
xchg
subl
dec
ja
fwait
lods
mov
and
jg
fst
mov
cwtl
mov
push
dec
jg
mov
clc
mov
loope
jmp
cwtl
xchg
pop
sbb
fbld
cwtl
mov
dec
add
push
dec
dec
dec
dec
cmpxchg
cmp
inc
inc
pop
adc
push
pushl
lret
sar
not
lret
pop
adc
dec
loopne
adc
adc
in
cmp
push
pop
mov
ljmp
and
lret
fimull
std
and
and
adc
icebp
and
mov
pop
sti
and
testb
adc
fwait
mov
mov
and
and
movb
les
in
mov
and
std
idiv
std
or
pusha
out
fildl
insb
movlps
ret
and
pop
sub
push
shl
jo
std
cld
pusha
add
xchg
scas
or
shlb
scas
or
pop
rcrb
aaa
shr
push
rcrl
add
daa
pop
sti
rcrb
dec
mov
fistpl
add
sbb
int3
pop
pop
lret
stc
int
inc
add
mov
shlb
pop
lcall
mov
test
rcrb
and
adc
sbb
push
pop
push
pop
or
fsub
dec
and
add
pop
sub
xchg
cmc
mov
jns
cmp
add
or
adc
mov
push
sbb
or
or
call
call
sbb
add
push
cmp
std
pushl
aas
add
and
add
sub
add
push
cs
and
push
ss
cs
push
ss
mov
jnp
add
push
inc
ds
inc
outsb
arpl
add
cmp
sub
loopne
dec
xor
sarb
inc
dec
push
push
aas
pop
add
dec
jo
inc
pop
add
dec
jecxz
std
das
sub
dec
add
inc
add
push
pop
dec
inc
jo
dec
xchg
cmc
scas
or
rorb
add
outsb
inc
popa
jo
dec
push
fs
pop
add
shll
jo,pn
imul
sbbl
data16
xchg
add
js
addr16
imul
es
inc
add
sahf
jl
dec
add
ljmp
pop
push
imul
je
subb
sti
push
mov
bound
bound
jp
imul
jbe
ss
js
imul
push
jo
jne
jle
inc
fdivr
fstpt
mov
add
ja
mov
push
es
cmpl
jg
add
pop
push
jae
test
jl
mov
xchg
outsl
incb
push
xchg
xchg
xchg
jge
add
lea
test
jg
cltd
cltd
cwtl
outsb
xchg
jle
nop
xchg
arpl
out
push
xchg
xchg
push
mov
mov
or
nop
pushf
push
mov
mov
addb
mov
add
sbb
mov
mov
push
and
mov
mulb
ret
incl
add
mov
add
into
add
jmp
aaa
les
add
cmc
add
in
cmc
cli
add
es
xchg
cmpsl
push
push
test
pop
jmp
mov
out
lods
mov
lods
fisubl
test
aam
ret
xlat
in
es
outsl
jbe
sahf
push
mov
mov
add
mov
push
test
jg
mov
std
mov
mov
mov
mov
rcr
inc
push
and
lds
cmpsb
test
lret
mov
mov
push
leave
leave
lds
leave
into
ret
push
mov
and
lret
add
fadds
rcl
out
mov
call
clc
in
adc
pop
push
test
fcmovb
mov
mov
out
iret
rcr
rcl
add
in
mov
adc
loop
aam
fisubl
fisubl
imul
fidivs
fisubs
out
loop
repz
sub
fwait
jmp
ficoms
in
dec
fsub
cs
incb
jecxz
in
data16
pop
fdiv
out
add
out
in
inc
cmpsl
xor
jmp
outsb
cli
jle
shl
es
clc
push
sti
jge
adc
push
fdiv
push
in
aam
mov
push
loopne
idiv
loopne,pt
call
call
sti
fisubrs
out
cs
cli
push
decl
cli
xor
jns
mov
cmp
push
push
pop
push
sub
xchg
mov
inc
and
add
dec
inc
insl
add
add
in
jnp
shrb
jle
mov
test
in
mov
and
adc
jnp
shrb
scas
add
rol
rol
jbe
scas
ret
movsl
jle
add
test
scas
add
in
ret
lcall
ret
lds
ret
push
adc
mov
fcomp
fstp
dec
cmp
je
cli
or
in
out
mov
repnz
fdivp
hlt
sub
imul
hlt
fdiv
std
xchg
ret
mov
aad
push
mov
pop
lds
fimull
int3
into
int3
iret
fadds
clc
hlt
add
mov
ja
sbb
js
jae
jo
or
jae
push
fcompp
jns
je
jp
add
je
add
jb
fcmovnu
idivb
pop
pop
pop
pop
pop
pop
pop
or
pop
pop
sub
xor
xor
jle
jg
jle
mov
popf
xor
cmc
in
filds
jp
jp
mov
mov
nop
les
dec
jbe
enter
mov
lods
movsl
mov
hlt
jns
push
notb
mov
mov
int
repnz
cmp
ret
add
sarl
cld
hlt
stc
repnz
push
push
mov
lds
lods
push
out
cmpsb
mov
loope
xchg
ja
imul
outsl
xchg
cltd
lods
mov
sti
sbb
lret
stos
pop
adc
jae
dec
add
dec
add
add
push
dec
dec
dec
dec
push
dec
dec
dec
push
mov
js
cmc
pop
push
adc
dec
ss
ss
sbb
fstpt
sbb
push
push
sbb
sub
sub
sub
sub
imul
inc
dec
dec
dec
push
push
pop
pop
imul
fcmovnu
pop
insl
addr16
imul
jbe
jne
jnp
je
in
sti
jnp
jbe
jg
movsl
xchg
xchg
jnp
jp
cmp
pop
pop
pop
push
add
gs
jb
imul
ds
arpl
lock
lret
or
cld
sti
sti
push
imul
and
pop
or
sub
in
decl
out
sarl
mov
imul
imul
lret
mov
imul
insb
inc
mov
insb
enter
inc
push
ss
call
test
inc
dec
or
and
out
insb
push
sub
push
xor
dec
cmp
push
push
pop
pop
sbb
push
insl
xchg
pop
xchg
add
sub
popa
in
push
addr16
jp
loopne
insl
inc
mov
xchg
adc
jbe
mov
fisubl
mov
mov
mov
add
leave
int
ror
push
mov
cmp
ljmp
es
and
and
mov
mov
ljmp
sub
test
cwtl
mov
and
and
clc
ss
push
cwtl
cli
outsb
cmp
div
imul
ljmp
nop
push
movsl
mov
arpl
mov
stc
mov
pop
jns
adc
inc
dec
inc
inc
inc
sub
sbb
es
sub
xor
cld
or
inc
xor
sub
sbb
loopne
lock
addl
repnz
jmp
sbb
outsb
insl
push
add
xor
pushf
nop
adc
gs
sbb
mull
pop
or
jle
xchg
xchg
aas
mov
lods
mov
mov
cmpsl
lods
lods
cmpsl
cmpsl
cmpsb
xchg
nop
or
jmp
and
adc
cmp
cmp
fwait
mov
out
test
cli
cs
clc
out
imul
jmp
repnz
xchg
lock
popa
or
clc
cld
and
sti
fmuls
outsb
clc
repnz
imul
cmp
out
add
or
sbb
sbb
mov
push
or
and
cmp
jb
fs
sbb
xor
adc
sub
or
jecxz
pop
add
inc
inc
subb
outsl
add
dec
xor
dec
dec
pop
push
push
push
jo
je
dec
sbb
insl
dec
jno
loopne
jge
inc
push
push
pop
fs
pop
xor
rcr
jo
addr16
pop
dec
dec
cmp
xor
ljmp
and
cmp
jbe
xchg
jne
xor
out
adc
xchg
fs
cmp
xchg
inc
lds
adc
cltd
mov
rcr
fucomi
divb
clc
adc
add
idivb
in
hlt
lock
inc
or
cld
xlat
ja
xor
out
out
ljmp
loop
mov
cld
xor
test
push
sub
ret
rorl
inc
inc
mov
enter
dec
aaa
inc
clc
or
sbb
and
xor
push
xor
sbb
or
or
mov
je
insb
push
add
sbb
dec
in
cmp
sbb
add
jno
sbb
dec
fs
jb
jnp
shl
scas
jle
xchg
movsl
movsl
stos
sbb
mov
and
cmp
mov
imul
fdivp
out
addl
mov
out
cmc
or
div
negb
sub
std
and
cltd
mov
inc
and
push
in
out
xlat
enter
mov
mov
mov
movsl
popf
mov
mov
jmp
mov
lods
push
clc
aas
pop
adc
mov
add
adc
xchg
push
adc
push
or
inc
mov
pushf
or
or
cwtl
push
ds
add
push
push
dec
dec
ss
aaa
dec
dec
dec
push
sbb
pop
pop
add
inc
jo
ja
jnp
jb
outsl
cmp
inc
xchg
popa
outsb
adc
jl
or
jg
adc
lods
scas
lods
add
mov
cmpsl
xchg
push
xor
daa
cmp
mov
sbb
fdiv
adc
pusha
jo
pop
clc
and
fcoml
lock
in
lock
fcmovne
cs
or
cmc
push
pusha
or
out
aad
shl
mov
movsb
and
out
test
arpl
mov
lods
lock
sbb
cwtl
add
push
inc
mov
mov
add
add
cli
dec
notb
or
inc
sub
test
push
outsl
mov
push
cmp
add
push
cs
cmp
jo
rcr
adc
add
inc
sbb
and
pop
sub
insb
pop
xor
adc
pop
repz
cmpsl
adc
add
xor
addr16
jl
dec
jbe
mov
sub
cmp
pop
ds
dec
jp
xchg
jbe
push
aaa
es
imulb
mov
push
sub
lds
mov
jecxz
in
xor
sbb
dec
cli
xchg
das
sti
dec
hlt
or
call
das
cmp
adc
jecxz
ror
push
jmp
mov
cmpsb
xchg
jb
das
sbb
jbe
mov
decb
scas
stos
movsl
pop
fidivrs
pop
dec
inc
in
icebp
fdiv
dec
inc
inc
inc
sub
adc
or
addl
in
aas
out
sbb
xlat
loope
stos
into
sub
cmp
ss
mov
mov
dec
xor
cmpb
mov
adc
and
or
dec
xor
dec
sbb
or
loope
gs
cmp
pop
dec
cs
adc
lods
or
xchg
mov
xor
xchg
pop
sub
hlt
dec
cmp
je
pushf
call
mov
fstp
jecxz
push
movl
out
add
push
or
sbb
repnz
xor
out
add
mov
pop
int
ljmp
add
aaa
in
cmp
addr16
mov
dec
or
lods
xorb
push
cs
das
sbb
dec
mov
xor
inc
inc
mov
inc
es
pop
or
push
inc
xor
cmp
sub
or
cmpl
inc
loop
dec
inc
sub
push
fmuls
inc
les
fbstp
dec
xor
push
orl
push
xchg
jecxz
xor
and
ss
dec
dec
dec
pop
sbb
jo
adc
ret
or
pop
dec
or
dec
filds
jns
je
outsb
fs
call
jle
pop
mov
or
lcall
push
pop
adc
jmp
xchg
xorb
insl
add
cmp
enter
push
or
mov
fcmovu
xor
out
push
dec
out
fnsave
add
fcmovnu
lret
rcl
fldz
fisttpl
data16
and
int
xor
sub
into
movsl
cmp
imul
scas
sub
stos
or
movsl
jbe
iret
insb
prefetcht2
and
lcall
inc
add
xor
xor
hlt
out
fsubs
inc
pop
sbb
addl
add
insb
lcall
and
ret
jg
inc
dec
push
dec
inc
xor
and
not
or
push
xor
and
je
push
cmp
pop
pop
inc
pop
aaa
or
or
test
sahf
jbe
push
push
push
dec
push
je
xlat
dec
push
mov
loopne
mov
inc
xchg
jns
jnp
outsl
push
xor
mov
call
push
int
cld
popa
sub
leave
out
pop
cwtl
jge
repz
cld
rcl
ror
leave
add
int
fnstcw
mov
mov
es
fdivrl
cmc
int
xchg
fsubl
sbb
pushf
scas
cmpsl
stos
in
cmpsl
je
movsl
push
push
xchg
push
iret
jae
add
jge
pop
inc
inc
add
bound
add
sub
sbb
or
mov
inc
loope
lock
dec
sbb
adc
test
sub
loop
mov
dec
jo
sbb
loope
andps
adc
unpcklps
aam
cmp
xor
ljmp
fcomip
pop
adc
pop
dec
xor
xor
push
gs
je
ljmp
cli
jg
jnp
push
nop
addr16
jbe
pusha
push
bound
loopne
std
imul
or
loopne
les
sub
out
testl
cwtl
xchg
cwtl
add
lret
pop
pop
inc
andl
sarl
pop
negb
push
les
pop
outsl
mov
sbb
cmp
lods
scas
adc
pop
stc
mov
inc
inc
add
or
jp
xor
testl
jmp
or
dec
aaa
ffreep
pop
push
add
add
pop
push
mov
icebp
out
and
or
dec
pop
cmp
push
xor
adc
mov
xor
cs
or
stos
adc
ss
dec
gs
or
push
mov
mov
xor
dec
pop
sbb
je
push
sub
cmp
decb
ja
xor
cs
les
mov
std
mov
aam
fstp
lret
cwtl
imul
cmp
pusha
add
ret
incl
stos
push
andl
scas
fiaddl
sti
popa
fisttps
mov
and
ret
and
add
sbb
arpl
push
jns
xor
das
push
pop
inc
add
out
divb
inc
inc
inc
inc
inc
cs
lock
adc
and
cld
dec
push
pop
push
sub
or
mov
stos
inc
jl
inc
dec
push
push
insb
or
loopne
dec
inc
into
and
in
mov
push
in
out
dec
dec
lock
call
test
xor
sbb
jb
push
jle
pop
pop
pop
ja
jmp
cli
push
dec
and
push
and
cld
dec
inc
shll
dec
or
lahf
mov
scas
test
push
pop
xchg
imul
and
push
es
push
push
push
aam
enter
in
mov
sbb
and
add
cmp
andl
xor
clc
and
scas
int3
sbb
and
inc
lahf
cmp
adc
mov
jle
or
gs
push
push
jmp
add
sbb
and
jecxz
sub
cmp
orl
out
adc
sbb
pop
or
ss
imul
and
jbe
dec
inc
inc
sub
sub
push
in
in
pushf
and
inc
pop
push
add
out
cmp
call
push
add
inc
pop
dec
addb
or
pop
fbstp
xor
orl
sbb
ds
push
xor
je
and
imul
lcall
pop
cmp
and
lret
int3
fdivs
int3
mov
cmp
cmpl
push
push
push
ds
stos
inc
push
or
cld
xor
imul
scas
nop
fsubl
lods
stos
lods
stos
test
push
sbb
adc
mov
js
jo
jns
comiss
hlt
add
inc
dec
pop
add
xor
cmp
sbb
seto
mov
cmp
addr16
inc
or
xchg
adc
mov
dec
inc
pop
push
sbb
je
sub
mov
or
inc
xor
test
mov
jg
cmp
dec
insb
pop
push
add
aaa
sbb
popf
mov
and
add
dec
ret
jo
or
cmpl
or
mov
push
test
lcall
mov
push
stos
stos
stos
adc
sbb
mov
jle
mov
and
and
mov
aaa
cmp
imul
ja
divb
mov
in
push
and
movsl
push
scas
cmp
mov
or
or
fsubs
jae
push
pop
std
loopne
cmp
adc
or
jg
add
sub
pop
push
sbb
or
mov
ljmp
pop
sub
sbbl
push
sub
inc
inc
inc
push
sahf
cmc
mov
sub
sbb
outsl
pop
movsl
or
inc
xor
or
clc
mov
push
dec
pop
add
xor
sub
sahf
fimull
add
jno
push
xor
jg
loope
mov
and
xor
jae
cmp
popa
mov
and
outsl
outsl
imul
scas
mov
ljmp
sbb
fcoms
lea
es
add
popa
int3
iret
ss
outsl
xor
pushf
movsb
push
imul
pop
or
movsl
ds
sbb
mov
jge
loope
stos
jl
adc
imul
aas
push
add
add
sbb
lahf
jbe
jbe
sbb
and
and
mov
in
lcall
ds
adc
push
adc
mov
xlat
out
inc
inc
inc
add
outsl
sahf
lret
mov
ret
sarb
inc
adc
sub
lahf
in
outsl
lock
sub
je
sub
or
lcall
lahf
mov
adc
incl
sbb
mov
insb
pop
and
out
xorb
or
sbb
or
jg
pop
aas
mov
xor
mov
xor
sarb
push
ret
cmp
mov
es
mov
or
shrl
or
and
sbb
and
movsl
jnp
test
lret
shlb
or
jno
jmp
sub
pop
add
sti
scas
jg
daa
or
adc
or
adc
and
dec
cmpb
sub
popf
adcl
jmp
cmp
and
cmp
out
or
sbb
and
sub
cmc
jmp
aas
and
push
adc
push
inc
xor
or
xor
scas
mov
xchg
mov
push
inc
pop
loopne
pop
jnp
dec
xor
insb
pop
dec
sub
jnp
cmpsl
data16
add
test
or
aas
shr
jmp
or
pop
decl
imul
pushf
mov
lods
fmul
fmulp
fmul
iret
mov
sbb
fadd
ja
mov
pop
jge
scas
test
xor
and
sub
mov
pop
jge
jnp
inc
das
sbb
test
or
or
and
rolb
fists
call
sbbl
sbb
mov
mov
popf
test
push
test
pop
jne
pop
inc
add
cmp
sti
and
add
mov
xor
pop
ret
stos
push
das
dec
mov
pop
jno
mov
pop
dec
xor
add
cli
clts
xor
cmp
or
lock
or
mov
popa
aas
mov
xor
pushl
push
xor
ds
cmp
lods
adc
fdivrs
add
xor
imul
imul
popa
out
add
adc
jno
jg
inc
push
sub
or
or
cmp
lcall
and
or
mov
decb
lock
sbb
xor
adcl
pushf
fcomip
cmc
fildll
daa
and
xchg
pop
inc
sbb
or
mov
aas
cwtl
lcall
nop
and
mov
push
aaa
xor
sbb
cmp
push
sbb
pop
xor
ja
incl
mov
jg
scas
add
call
add
xchg
insb
push
ljmp
cmp
test
cmp
popf
ljmp
fcomip
push
test
lahf
fdivp
xchg
cmp
movsl
push
pusha
lahf
out
fldt
movsl
or
xor
ret
mov
scas
fidivrs
mov
jno
sbb
inc
inc
inc
sub
addb
sbb
test
out
out
or
jle
dec
xchg
mov
sub
adc
cld
lods
mov
cs
call
add
cmp
jl
push
push
pop
push
xor
and
sbb
xor
inc
pop
pop
dec
cs
cmc
call
aas
clc
add
inc
gs
and
xor
xor
je
push
add
push
add
lock
cli
decl
lcall
mov
arpl
mov
lock
call
adc
notb
fmulp
loope
lcall
push
mov
and
stos
xor
clc
sahf
or
mov
push
movsl
les
sbb
movsl
mov
iret
pop
sub
ja
push
addb
in
push
inc
inc
cmp
push
or
push
pop
or
mov
stos
pop
rclb
xor
inc
add
cmp
lcall
xor
sub
inc
xor
sub
inc
inc
inc
xlat
clc
mov
and
rcl
je
ss
sbb
mov
pop
gs
dec
sub
call
js
mov
push
sbb
mov
adc
shl
rorb
push
enter
popa
jo
scas
mov
data16
insb
ljmp
in
mov
imul
cmp
test
pushf
fucomi
xchg
nop
push
push
add
lods
fmull
dec
clc
aas
negb
scas
sbb
cwtl
pop
mov
push
or
push
dec
fadd
lret
add
add
jnp
lea
sbb
insb
lock
mov
mov
xor
adc
aaa
sub
lahf
fwait
and
scas
inc
inc
sub
and
and
mov
add
xor
jmp
lcall
adc
daa
mov
push
outsb
jp
jmp
cmp
sbb
jbe
xor
gs
dec
mov
sahf
cs
fs
jle
jl
mov
mov
inc
test
xor
mov
scas
add
dec
jl
int3
int3
lret
mov
xor
sub
arpl
stc
mov
xchg
xchg
fprem
xchg
enter
add
fst
cwtl
ds
add
pop
jns
aas
mov
or
aam
int
jl
ret
mov
mov
js
or
adc
jnp
iret
jns
loope
loope
push
push
push
test
lock
sub
movb
in
and
out
and
xchg
xor
sub
xchg
push
mulb
mov
cmp
loope
push
or
xor
cmp
addb
test
and
jo
push
aaa
push
lock
dec
cld
lea
mov
insl
dec
and
push
fstl
fwait
push
cmc
mov
aas
pop
outsl
lods
or
xchg
mov
xchg
mov
fmul
adc
in
in
stos
lret
fstp
fildl
mov
sub
nop
popf
mov
cmpsb
fxtract
std
push
sti
loope
ss
pop
out
push
xor
movsb
lcall
add
int3
cwtl
enter
push
fisubrl
mov
mov
mov
fisubrl
push
cli
xchg
pusha
outsb
inc
push
sub
or
outsb
pushf
adc
inc
es
aam
mov
mov
int3
dec
push
sar
testb
mov
add
aam
cld
incl
sbb
dec
sub
in
xchg
and
dec
push
dec
ss
push
sub
jp
ret
movsb
adc
daa
and
clc
sbb
outsb
test
jg
add
push
aas
jmp
cmp
aad
jmp
es
or
leave
enter
rcr
aam
loopne
cmp
orb
lock
fnstsw
popf
add
mov
int
std
push
outsl
cmpb
cltd
ds
lea
sahf
jmp
gs
movsbl
sbb
and
mov
gs
mov
add
lods
and
push
push
add
pop
jno
xor
movsb
push
addb
mov
inc
pop
or
push
sub
pop
inc
ss
inc
or
xchg
and
in
out
ficoml
cmp
jmp
xor
dec
xor
sbb
loop
decl
daa
and
and
or
dec
cs
pop
mov
adc
jg
adc
push
cmp
lock
push
xchg
cmp
adc
cs
dec
loopne
leave
fcom
fcom
rcl
mov
add
clc
mov
cmp
out
lock
sar
clc
mov
sbb
stc
out
dec
or
ret
jmp
adc
pshufw
mov
daa
nop
cwtl
cmpb
rcll
jmp
lret
add
mov
mov
dec
jo
lods
aam
adc
xchg
pop
jge
add
lret
push
sbb
sub
cmp
jmp
unpcklps
dec
add
jbe
js
add
xor
cmp
sub
dec
jo
pop
scas
fistpl
xor
pop
pop
push
xor
fwait
loop
sub
pusha
dec
dec
das
fmull
je
xchg
adcl
pop
push
pop
push
aaa
das
scas
push
fidivl
pushf
jp
xchg
jnp
aad
cld
sbb
adc
or
arpl
call
cmc
in
test
bound
shll
adc
jecxz
xchg
mov
aas
stos
fucomi
out
mov
ljmp
mov
clc
xor
mov
movsb
fwait
daa
or
mov
push
repz
imul
clc
mov
int
add
mov
push
movsl
push
ja
nop
add
dec
inc
dec
sbb
xor
rorb
or
push
push
dec
sub
insb
clc
jecxz
loop
lahf
popf
and
add
xor
or
rorb
pop
insb
subl
push
pop
pop
add
pop
cld
sbb
push
ss
push
loopne
mov
fbld
lahf
mov
shlb
popa
aaa
cmpl
fwait
cmp
mov
push
ja
outsb
std
popf
xchg
add
push
lcall
test
xchg
or
outsl
add
mov
mov
fcmovnu
mov
push
in
xchg
imul
js
jl
daa
std
and
cmp
negl
movsb
or
mov
ljmp
in
cmpsl
fwait
std
cmp
ds
mov
lret
sarb
cmp
push
mov
scas
fdivrs
fisubrs
mov
sbb
fwait
movsb
test
enter
mov
sbb
test
add
or
sbb
and
cmc
fdivs
add
and
push
repnz
cmp
dec
mov
xor
and
pop
popa
and
cld
stos
jg
dec
pop
dec
xor
mov
mov
loopne
add
je
push
dec
and
pop
mov
nop
outsl
mov
daa
lea
jne
mov
lock
pusha
cmpsb
xchg
pusha
aas
mov
xor
adc
outsb
xchg
mov
xlat
fstp
sbb
loope
insb
out
out
mov
mov
jl
clc
stos
clc
popf
out
stc
enter
adc
or
cmp
movsb
mov
and
ljmp
popf
and
cwtl
sbb
sbb
lret
adc
cwtl
adc
faddl
enter
add
clc
das
adc
jae
mov
adc
inc
clc
jmp
push
and
orb
push
int3
fbld
adc
push
out
push
add
push
pop
sbb
ret
add
rolb
test
rcrb
stos
adc
lret
call
popa
repz
addb
je
pop
pusha
xor
ret
jbe
xchg
jne
popa
das
sbb
push
lods
test
cli
or
mov
cltd
outsl
cmp
or
jl
push
or
adcb
add
jecxz
out
mov
das
cmp
cmpsb
cwtl
push
jmp
imul
loopne
pop
aas
ret
mov
sbb
hlt
repnz
fstp
in
xor
or
and
mov
cwtl
push
cmp
loopne
xor
mov
subb
stos
popa
clc
jg
test
adc
dec
push
test
in
shll
push
mov
mov
or
mov
inc
xchg
xor
mov
subb
add
into
lcall
outsb
add
jl
mov
push
aaa
test
push
mov
jb
push
xor
aaa
std
jnp
outsl
addr16
dec
jbe
aas
addr16
loopne
cmp
xchg
cmp
stos
jge
mov
das
xchg
lea
loop
sahf
or
inc
ret
push
shrl
loope
out
or
mov
xor
mov
lcall
cli
incl
pushf
icebp
fmul
mov
xchg
ds
orl
in
or
xchg
adc
mov
xchg
not
lods
mov
fcmovbe
cmp
mov
pop
mov
dec
mov
and
imul
movups
push
push
add
sbb
jo
push
push
push
sub
adc
mov
push
sti
dec
pop
sbb
push
adc
orl
gs
popa
adc
mov
lock
xor
add
or
cmp
outsb
or
outsl
adc
adc
push
push
data16
ja
xchg
add
xchg
or
xchg
push
xchg
ja
or
dec
call
das
das
and
pop
and
push
mov
clc
cmpsb
xorb
mov
shlb
xchg
sbb
or
jo
jg
fidivl
pusha
test
hlt
sbb
fld
mov
push
cmp
cmp
ret
scas
cmpsb
ljmp
push
ret
es
and
stos
adc
push
lcall
mov
out
js
sub
mov
notb
fs
adc
dec
sbb
outsb
lods
jbe
pop
dec
repnz
mov
popa
add
and
rolb
push
or
cltd
fs
outsb
inc
push
and
and
outsb
outsl
or
popa
lods
add
jb
adc
jp
stos
push
ja
add
and
call
sub
add
arpl
cmp
mov
add
pop
cld
decl
mov
cltd
xchg
push
and
lahf
test
push
push
cltd
jbe
insl
jp
mov
sub
in
cmc
lock
add
popf
in
mov
xchg
pop
outsb
fdivr
outsl
dec
hlt
aam
xchg
test
movsl
test
mov
fcmovnu
clc
sbb
je
and
mov
shl
rolb
rol
mov
les
jo
out
lods
outsb
mulb
inc
sar
dec
push
sub
mov
call
aaa
sub
es
and
or
call
dec
test
xchg
lock
ds
mov
push
push
dec
lret
cmp
push
mov
jb
jb
outsl
je
push
dec
jne
xchg
push
sbb
xchg
ja
push
or
cmpsb
xchg
lret
mov
loopne
mov
call
and
or
nop
xchg
cltd
or
daa
lahf
in
es
push
or
dec
or
nop
push
cmc
ljmp
pusha
mov
loop
in
mov
ucomiss
scas
or
ffree
lcall
jmp
movsb
or
cwtl
lret
lret
mov
and
and
jb
xchg
shl
add
xor
adc
enter
rcrb
mov
mov
hlt
xchg
xor
cmp
mov
pop
and
inc
hlt
pushl
sub
adc
and
xchg
ds
loope
dec
in
and
adc
divb
sub
push
call
mov
and
ret
ret
imul
cmpsb
adc
xchg
cmp
fcmovb
push
add
mov
andb
popf
loop
incl
es
arpl
data16
ds
les
sbb
mov
push
loop
ljmp
lock
icebp
shll
fwait
bound
repnz
pusha
jp
imul
adc
jl
pop
cmp
push
in
inc
inc
movsb
fwait
out
xor
adc
loop
add
jecxz
ja
add
lods
imul
rclb
jns
sub
adc
pop
cli
push
adc
and
lcall
adc
or
push
pop
pop
cmp
mov
xchg
push
mov
and
dec
or
gs
pop
adc
mov
mov
jne
je
pop
xchg
sbb
xchg
movsb
add
push
or
xchg
lock
mov
stos
lahf
mov
nop
arpl
mov
lock
mov
lahf
mov
adc
adc
mov
sub
adc
xchg
xchg
decl
fcmovne
cwtl
pusha
fwait
loop
cmc
mov
stc
std
or
cmc
or
lret
mov
and
into
andb
ret
incl
sahf
mov
loop
or
call
rolb
mov
aas
xor
cwtl
pop
sbb
jg
mov
add
xchg
mov
push
add
mov
and
mov
rcll
decl
push
gs
lcall
outsb
push
xchg
jbe
pushf
in
push
or
or
xchg
xchg
xor
shl
add
sub
mov
xchg
cmpsl
movsb
loop
mov
adc
decl
adc
mov
xor
mov
xchg
js
jl
mov
sbbb
mul
or
jmp
push
adc
in
fwait
jo
cld
nop
aas
hlt
test
add
ljmp
lods
stc
repnz
out
fxch
mov
mov
mov
mov
mov
push
cwtl
rcr
in
jl,pt
into
loop
rcll
loopne
mov
mov
nop
hlt
stos
pop
jg
add
shll
call
mov
push
call
add
test
ljmp
or
jl
andb
and
xor
sahf
sbb
dec
inc
lahf
pushf
fwait
outsb
sbb
adc
pop
mov
xchg
xchg
xchg
movsb
cmpsb
movsb
or
mov
jmp
mov
mov
push
nop
nop
out
sahf
test
lcall
pushf
les
or
xor
jecxz
ljmp
add
push
out
fistl
aaa
mov
or
cld
sbb
cli
ret
xchg
push
or
repnz
adc
data16
imul
dec
in
push
outsb
js
mov
shll
fsubr
hlt
daa
mov
rdpmc
jg
loope
jle
popa
pop
data16
pop
popa
dec
aaa
dec
aaa
ss
ret
aaa
xor
add
sbb
test
mov
add
and
mov
or
popa
sbb
jp
cmpsb
push
add
cmpsb
jmp
and
and
cmp
push
adc
mov
clc
inc
test
nop
add
push
mov
xchg
mov
xchg
cwtl
mov
push
andl
je
or
push
divl
in
out
push
and
sahf
test
test
std
add
loope
cmp
test
repnz
cltd
mov
mov
mov
jmp
push
fsub
fisttpl
and
aaa
fsubrl
cli
cltd
setae
imul
pop
data16
add
shll
adc
lods
xor
sbb
data16
sbb
add
outsb
lock
jne
mov
outsl
jne
sub
xchg
bndldx
add
xchg
add
adc
ret
push
mov
adc
add
xor
sub
sbb
sbb
fwait
xchg
push
mov
or
in
jecxz
sarl
in
push
sbb
out
inc
imul
mov
push
push
cld
or
scas
jg
push
fs
rcr
cwtl
mov
aaa
insb
add
lret
sbb
ljmp
pop
mov
sahf
lods
fidivl
clc
popf
mov
bndstx
mov
add
xor
pop
clc
or
out
cli
push
or
ljmp
adc
addr16
aas
mov
or
jne
xor
add
cmp
cmp
jbe
cld
hlt
je
xchg
push
or
xchg
pop
xchg
mov
xchg
push
cmp
add
mov
or
xor
loope
mov
add
adc
add
loopne
xchg
roll
nop
jmp
leave
jecxz
or
lock
sbb
add
push
pusha
sarl
add
cld
inc
jl
cmp
int3
adcb
mulb
sbb
add
or
cmp
xor
in
mov
adc
jle
dec
push
hlt
mov
rcrl
popa
icebp
push
data16
sbb
imul
test
cld
add
insl
or
xlat
aaa
fmuls
outsl
outsl
clc
add
xchg
lret
cmp
pop
adc
or
cmp
notb
mov
pop
or
mov
mov
cmp
add
mov
or
xchg
mov
rorb
xchg
out
fimull
cmpsl
ljmp
out
notb
add
pushf
push
push
int
repz
out
cmp
and
cmc
or
jmp
data16
adc
or
jae
lret
sahf
xor
inc
xchg
cli
pop
sbb
mov
stos
mov
mov
push
movsl
sub
xchg
lods
movsl
cwtl
inc
testb
stos
add
stos
into
push
imul
bound
mov
add
add
call
mov
push
mov
or
jb
pop
fimuls
lcall
out
testl
incl
or
sti
std
or
inc
rorb
les
fdivp
into
push
push
xor
pop
cmp
idivb
and
pushl
neg
pop
sbb
sub
xor
xor
xor
or
paddsb
pop
repz
dec
ss
aaa
dec
ss
dec
or
fmull
dec
dec
dec
aaa
or
pop
dec
push
dec
push
sbb
mov
add
add
dec
xor
daa
add
push
push
add
in
mov
add
pusha
pop
pusha
pusha
push
push
notb
or
pusha
add
push
fnstcw
push
add
add
insl
das
imul
cmp
adc
dec
add
or
bound
xor
pop
into
adc
loope
lods
or
add
pop
push
adc
fidivrs
push
push
push
push
adc
nop
pop
testl
push
sbb
mov
outsb
add
add
and
and
add
cs
in
outsl
add
xor
or
xor
xor
dec
sti
xor
push
aaa
dec
add
imull
enter
dec
or
outsb
mov
add
xor
xor
iret
into
fsubl
gs
cltd
out
xlat
fmuls
or
fadds
cld
cltd
add
icebp
or
repnz
add
dec
and
ss
or
incb
push
or
add
les
rorl
adc
pop
pop
push
dec
inc
aas
dec
inc
and
dec
and
push
add
and
sbb
inc
push
pop
or
push
push
push
andb
add
loopne
add
jmp
inc
cmp
and
test
push
inc
push
sbb
add
andb
fstpl
inc
push
push
adcl
sbb
add
lea
rcrl
shlb
mov
adc
rol
pop
adc
adc
inc
stos
fcos
jbe
add
addb
sbb
pusha
push
add
andb
addb
rolb
add
or
lock
pop
add
add
test
push
loopne
das
clc
fildll
push
mov
or
roll
add
inc
cmp
add
loopne
push
or
sbb
or
fisttps
insl
jl
xor
sbbb
test
fadd
pop
faddl
inc
push
mov
add
pop
and
jno
mov
push
adc
or
pop
sbb
or
pop
and
xor
add
push
inc
push
mov
nop
mov
repnz
sbb
and
add
push
es
add
xchg
mov
jo
lods
cltd
rcll
inc
push
add
mov
in
sub
or
and
add
cmp
add
outsb
push
sub
loopne
rolb
shrl
pop
sub
push
or
add
sbb
sbb
lods
sbb
push
cmp
add
jo
mov
add
rcr
dec
cli
hlt
or
cmp
add
and
dec
inc
mov
insl
fmuls
pop
add
and
cmpsl
aad
add
orb
sbb
notb
test
sbb
sbb
add
mov
test
test
rorl
lret
xor
or
mov
xor
test
push
push
addl
sbb
pop
mov
cmp
xchg
inc
sub
push
add
mov
sarb
push
or
adc
inc
loopne
mov
push
ds
and
insb
cwtl
adc
adc
jl
add
add
push
adc
or
ds
add
add
push
cmp
addl
out
fiadds
nop
push
mov
and
add
je
and
mov
xchg
dec
and
adc
mov
adcb
dec
push
push
xorb
adc
cmp
add
ljmp
or
stos
jle
subb
gs
inc
outsb
inc
xor
fildl
xchg
push
mov
jo
inc
cltd
shrb
sbb
outsb
inc
das
push
ljmp
mov
out
dec
add
cmpsb
cli
movsb
in
sbb
data16
cmp
inc
mov
daa
test
adc
inc
movsb
sub
add
cmpb
data16
fs
es
mov
pop
and
pusha
add
mov
insl
dec
adc
or
adc
or
push
add
ds
subl
sbb
or
and
into
or
adc
mov
and
add
xor
popa
xor
mov
adcb
xor
and
test
xchg
pop
cmp
test
hlt
movsb
pop
add
mov
call
push
data16
add
mov
mov
xchg
and
adc
add
mov
xor
xor
imul
mov
add
data16
xor
add
add
sbb
mov
mov
loopne
fmull
push
and
or
xchg
and
inc
add
xor
xor
or
adc
mov
pop
in
shll
outsb
mov
inc
inc
popa
or
xor
sbb
js
adc
or
add
inc
repnz
push
sbb
or
call
fimull
sub
pop
dec
or
je
inc
in
push
ret
adc
add
sub
sbbl
sbb
mov
int3
int3
sub
insb
jle
xchg
pushf
dec
xor
sub
cmp
stos
xchg
add
je
orl
adc
ret
andl
or
lock
mov
into
or
or
adc
add
aam
jbe
in
lock
fld
loopne
pusha
push
rorb
rorb
or
test
sub
enter
xor
jp
or
jp
mov
and
push
out
or
adcb
sub
pop
dec
addb
and
sub
pusha
addr16
ds
sub
cmpsb
inc
pusha
pop
and
aam
xor
or
push
fmuls
add
data16
scas
jp
mov
pusha
add
jo
mov
loop
adc
dec
pop
sbb
xorl
cmp
or
jb
cmpsb
pop
popf
pusha
pop
xchg
or
add
push
inc
pusha
push
inc
mov
mov
inc
inc
cld
fsts
add
mov
aam
stos
xor
mov
inc
push
mov
or
into
jnp
sub
outsb
push
mov
loope
lret
xor
sbbl
mov
mov
jbe
or
or
imul
dec
sti
js
daa
mov
cwtl
dec
xor
notb
and
dec
testb
xor
cmp
test
cmp
xorb
dec
add
bound
les
addb
sbb
add
js
pop
incb
aad
cmp
cwtl
inc
rcrb
sub
cltd
sub
nop
cmp
cmp
int3
jle
sub
sbb
add
jo,pn
les
or
xchg
fchs
and
xor
xor
pop
pop
outsb
add
in
scas
or
inc
hlt
inc
push
sbbb
push
pushw
push
push
add
ret
flds
in
ret
xor
mov
xchg
loop
pop
mov
ss
and
cmp
and
loope
movsb
fisubl
cs
add
test
add
push
xor
subl
pop
inc
andb
mov
or
mov
loop
push
test
lods
jae
cli
push
addl
shl
into
insl
and
adc
lods
xchg
adcb
pop
xor
lods
and
xor
mov
push
xor
pusha
mov
and
mov
ficoml
cwtl
loopne
test
testb
mov
insb
pushf
dec
mov
add
and
push
add
pop
inc
shrb
outsb
pusha
out
ljmp
cmp
and
dec
mov
xor
dec
dec
push
xchg
mov
and
pusha
pop
pop
jo
ds
in
mov
lret
add
inc
roll
adc
call
roll
push
mov
addb
xchg
inc
dec
nop
ret
bound
adc
mov
dec
jo
mov
roll
push
or
into
ljmp
mov
and
push
subl
adc
mov
and
jbe
cmp
jle
lock
les
fs
xor
cs
adc
loope
cmp
push
push
scas
aad
enter
mov
movsb
js
or
pushf
call
loopne
inc
data16
stos
pusha
or
in
xor
add
das
test
add
outsb
arpl
inc
gs
std
outsl
fisttps
popa
imul
push
gs
gs
xor
gs
outsl
fs
gs
xchg
imulb
inc
or
inc
js
je
jb
arpl
inc
push
inc
cmpsb
outsb
and
int
insb
outsb
arpl
imul
mov
sbb
insl
inc
imul
ds
sub
test
test
jo
outsb
outsw
push
pop
imul
inc
push
insl
or
mov
sbb
push
dec
popa
insl
and
jae
lods
push
xchg
inc
mov
mov
in
add
imul
inc
in
sahf
shrb
cmp
movl
sbb
insl
cwtl
push
mov
inc
adc
mov
cmp
lods
push
push
cmp
ja
nop
and
push
add
cwtl
data16
fidivrl
inc
mov
add
data16
outsb
in
movsb
or
dec
mov
push
add
divb
add
xor
mov
sahf
adc
mov
lahf
ffree
out
inc
cmpb
insb
popa
mov
push
outsb
insb
outsl
scas
pop
jns
popa
fs
fisubrs
outsl
add
imul
clc
push
popa
push
gs
imul
or
jp
and
iret
or
dec
push
xchg
or
cmp
mov
pushf
inc
push
inc
fs
faddl
or
or
xchg
xor
gs
adc
sub
lock
adcl
mov
ss
test
add
pop
jno
ret
inc
mov
insb
arpl
mov
inc
dec
add
add
das
dec
adcb
cmp
add
fidivrl
loopne
lahf
dec
les
daa
dec
and
fidivrs
jae
and
xor
or
push
add
fnstenv
jns
adc
xchg
or
add
prefetch
adc
add
aam
push
add
cmp
jb,pn
xchg
add
push
mov
add
and
jo
push
dec
add
pop
sahf
or
cmp
and
add
dec
leave
pop
add
pop
shll
inc
jbe
out
aam
dec
rcrb
cmp
or
pusha
add
add
pushw
jae
dec
ja
repnz
xchg
push
fstps
add
out
push
sbb
push
add
lock
lock
adc
sub
incl
add
add
add
add
call
or
pop
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jb
dec
add
jne
mov
sub
adc
adc
jmp
add
jne
mov
sub
adc
adc
jmp
xor
sub
jb
shl
mov
inc
xor
je
sar
mov
jmp
add
jne
mov
sub
adc
jb
inc
add
jne
mov
sub
adc
jb
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
mov
add
mov
add
sub
ja
add
jmp
pop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
