push
sub
incl
add
and
incl
add
sti
daa
add
in
call
sbb
ss
push
test
sub
test
lahf
xor
test
cmp
mov
mov
imul
xor
mov
mov
sub
jl
jecxz
xor
in
sbb
mov
inc
or
stos
mov
jl
pop
pusha
movsb
je
xor
add
test
xrelease
jne
cmpl
add
add
fisubs
mov
popa
ljmp
ljmp
mov
in
incb
loopne
fisubrs
lcall
and
mov
pop
lods
xchg
ljmp
push
mov
sbb
std
mov
cld
inc
subl
add
add
mov
testb
icebp
mov
dec
call
idivb
popa
std
rolb
add
std
ds
cld
mov
inc
xchg
fistl
pop
inc
cmp
arpl
mov
xor
add
sti
sbb
mov
inc
pop
filds
xor
je
jg
ret
cld
in
jbe
or
incl
add
sbb
mov
sbbb
std
jl
roll
mov
add
push
mov
jmp
ret
xchg
icebp
cmp
xchg
cmp
repnz
mov
sar
test
mov
mov
jne
xor
mov
push
or
pusha
mov
or
mov
mov
clc
incl
add
mov
mov
jmp
test
mov
cld
mov
test
fwait
test
inc
add
hlt
test
cs
push
add
jge
mov
sti
pop
inc
add
sbb
insl
inc
lret
addr16
movsb
jmp
pop
sahf
fwait
push
adc
inc
fcomps
mov
dec
add
mov
add
inc
push
xchg
mov
pop
push
pop
jmp
push
lahf
movsb
xchg
mov
push
pushf
mov
pop
arpl
inc
adc
rcrl
push
sahf
mov
push
arpl
xor
push
mov
inc
adc
mov
xchg
add
xchg
mov
push
mov
mov
adc
mov
mov
push
cmpsb
mov
adc
lahf
movsb
xchg
mov
inc
adc
mov
mov
adc
arpl
push
push
mov
lcall
cmpsl
jmp
pop
mov
mov
cmpsb
mov
add
mov
adc
pop
jmp
or
testl
push
test
inc
push
pop
jmp
adc
out
cmp
movsl
out
xchg
mov
push
dec
pusha
notb
test
inc
pop
test
inc
sbb
scas
push
add
mov
mov
in
pop
lahf
scas
addb
mov
pop
lahf
clc
push
add
lods
dec
pop
mov
inc
adc
mov
add
mov
adc
popa
mov
sbb
jle
push
pop
mov
cmpsb
pop
jno
iret
mov
jno
adc
add
lret
addr16
sbb
mov
rcr
cmp
cmp
sub
sti
add
popf
xchg
fldenv
hlt
shll
push
les
mov
mov
mov
adc
or
xchg
push
repz
das
dec
adc
rclb
aas
push
ss
mov
push
inc
ljmp
fldt
sub
leave
ds
addr16
mov
add
sbbb
je
jno
add
enter
inc
add
cmpsb
mov
inc
mov
out
and
dec
sbb
mov
push
push
outsl
push
sub
inc
or
add
push
test
lret
inc
js
mov
sub
sti
mov
push
nop
xor
shll
fmulp
movsb
sbb
mov
dec
xchg
pop
lahf
adc
gs
add
data16
pop
fnsave
or
xor
movl
mov
xor
testl
movsb
and
mov
fmull
je
or
inc
xor
inc
lret
push
xchg
adc
lret
add
cmpsl
cwtl
mov
addr16
ljmp
or
jo
or
mov
std
fwait
pop
xor
jo
lret
jl
mov
mov
fwait
pop
ja
cwtl
mov
je
sbb
idivb
add
pusha
fcompl
mull
inc
call
push
jp
daa
imul
dec
rorb
mov
push
stos
ret
inc
jge
xchg
aam
xor
jb
mov
jne
add
sahf
xor
xor
sahf
cwtl
sub
rorl
scas
out
jg
scas
out
jae
cli
or
xchg
push
repz
pop
dec
sti
xchg
mov
rcll
ret
sub
push
sub
lret
addr16
dec
test
daa
jo
fs
jne
lret
fs
mov
cwtl
iret
sbb
lret
sbb
sbb
test
es
xchg
jecxz
jae
daa
jo
test
sti
jle
gs
pop
add
push
dec
or
nop
mov
lret
rol
mov
xor
repz
jo
push
sub
lret
rol
aam
daa
jo
mov
inc
mov
push
cwtl
call
nop
fstpt
jmp
inc
lret
addr16
sub
cwtl
call
dec
cmc
dec
or
cmc
push
leave
addr16
jle
cs
ds
xor
ljmp
rcr
or
inc
lret
aam
mov
test
jae
rorl
mov
fdivrl
popf
lret
cmp
andl
and
mov
imul
sbb
cmp
test
pop
and
outsl
inc
pop
sbb
fs
jl
or
mov
jecxz
jae
push
mov
jb
or
fstpt
faddl
push
lret
inc
test
and
xor
or
lds
lds
sbb
rorb
inc
lret
addr16
test
lret
addr16
rcr
add
rcr
add
lret
cltd
mov
adc
cs
mov
adc
xor
frstor
je
flds
mov
fs
mov
pusha
lret
push
jne
nop
pop
xor
es
cli
xor
xor
fistpl
in
push
xor
sub
pop
jp
add
lods
pusha
lret
add
or
jo
out
add
inc
lret
addr16
jno
push
js
xchg
imul
shll
fisubrs
fistpl
es
jo
int3
jnp
and
lret
inc
lret
addr16
outsl
push
add
push
fnsave
push
adc
jae
rcr
ds
repnz
repz
sbb
cmpsb
mov
sti
or
add
imul
sti
cltd
shrl
jo
fstp
ret
add
addr16
mov
pop
xchg
lahf
ja
xchg
inc
sbb
data16
mov
shlb
loop
addr16
push
sub
arpl
jnp
fsubl
mov
fdivl
xchg
outsl
add
inc
mov
mov
fisubrs
add
insb
jo
lret
aas
mov
test
rorl
imul
jb
aam
pop
arpl
or
pop
insb
inc
or
mov
add
cmp
lcall
pop
test
inc
mull
enter
mov
jbe
xchg
push
and
adc
cmc
stc
cmp
int3
mov
mov
jno
icebp
inc
push
mov
sub
fildl
stos
aas
push
test
and
or
divl
sub
mov
inc
rolb
xor
mov
ja
pop
int3
mov
aas
jge
mov
addr16
inc
inc
pop
fstpt
pop
xchg
icebp
test
aaa
cmp
outsb
lods
mov
jmp
cltd
aam
shlb
dec
add
cmp
mov
cmp
arpl
inc
ja
cltd
dec
adc
daa
xor
mov
push
mov
jl,pn
outsl
pop
jecxz
daa
inc
jbe
adc
jbe
shl
shrb
ret
mov
inc
jbe
jae
mov
scas
enter
push
inc
xor
dec
repnz
fwait
pop
mov
mov
and
jne
in
and
inc
adc
mov
loop
cmpsb
outsl
mov
scas
in
push
clc
push
test
enter
sbb
mov
je
imul
mov
push
xchg
jo
xlat
dec
mov
inc
insb
outsl
mov
cmp
adc
jecxz
loopne
inc
clc
inc
mov
ret
das
testl
scas
dec
lock
push
loopne
das
enter
movl
nop
xchg
xor
lods
imul
jmp
mov
rcrb
push
das
out
mov
jne
sub
clc
js
or
ret
dec
imul
lock
inc
and
adc
or
pop
out
in
sub
or
test
add
shll
insb
push
test
mov
into
lcall
pop
js
jecxz
insl
sub
pushf
xchg
iret
push
mul
lds
mov
clc
dec
jae
mov
jle
mov
push
int
cwtl
pusha
mov
cmp
fldl
inc
jae
sbb
jle
mov
xchg
and
leave
test
call
aas
ja
cld
pop
xchg
out
dec
shlb
and
xchg
pushf
add
lods
inc
cmp
lea
sbb
lcall
add
mov
xchg
mov
lea
or
shll
mov
inc
jge
cmp
push
mov
push
mov
xchg
in
rcll
and
add
aad
push
inc
and
loopne
and
and
push
dec
scas
fs
stos
sahf
mov
les
aad
loope
ljmp
out
xchg
sub
mov
int
andl
xchg
add
jl
mov
iret
inc
adc
cltd
mov
lock
mov
loopne
fldl
cmpsb
loop
or
mov
aaa
push
lock
or
repz
jmp
gs
xor
ljmp
pop
fs
fisubrl
iret
ss
jae
out
enter
rcrb
in
in
movsl
subl
mov
cld
stc
fstl
mov
cmc
outsl
enter
push
sbbl
loop
repz
inc
addb
jl
cwtl
mov
add
enter
adc
cmp
ljmp
out
adc
adc
sbb
mov
inc
and
mov
jecxz
es
mov
or
mov
ror
jb
or
push
push
sub
ffree
aad
pop
and
inc
cmp
push
popa
lock
subb
push
pop
jmp
das
rol
lea
loop
fstpt
rolb
mov
pusha
inc
xchg
aam
movsl
je
mov
mov
mov
lock
inc
and
imul
xchg
mov
pop
xor
iret
and
popa
fdivs
inc
inc
mov
ss
gs
mov
sar
shrl
leave
loopne
jae
adc
in
scas
aad
roll
ret
jno
stc
xchg
movsb
add
hlt
rol
out
test
in
xchg
inc
xor
xchg
push
shrl
lahf
in
mov
aam
stc
sub
outsb
fs
push
mov
mov
push
adc
add
adc
jnp
loope
je
cmp
lods
aad
adc
shrl
ret
pop
bound
roll
fildll
inc
repz
xorl
lock
inc
aaa
cli
sbb
sarb
inc
and
pop
loopne
pop
adc
pop
xor
mov
clc
mov
dec
and
push
cmp
sub
mov
jo
or
cmp
loopne
jl,pn
sbb
inc
mov
shll
adc
cmc
int3
jg
sarb
mov
pop
inc
cmp
popa
scas
orl
and
aad
or
shl
cmp
pop
xor
add
xchg
pop
and
test
cmpsb
fidivrl
xlat
cwtl
rcrl
xor
orl
xchg
pusha
dec
mov
insb
mov
xor
jae
inc
imul
notl
imul
je
fs
aam
add
rorb
jnp
addb
pop
adc
mov
nop
data16
in
sub
fs
push
mov
subl
and
sbb
mov
in
cli
insl
mov
add
mov
ja
dec
orl
inc
cmc
fiaddl
dec
div
inc
stc
faddl
mov
pop
cmp
add
imul
rclb
clc
jo
cmp
push
stc
daa
dec
adc
and
pusha
loop
lods
decl
inc
adc
sbb
and
out
push
xor
xor
xlat
pop
adc
jnp
or
je
xchg
rcll
jb
sub
test
inc
lods
jae
ljmp
pusha
fs
sub
push
xor
mov
add
cmp
lods
int
sbb
aad
loope
idivl
mov
out
pop
and
sbbb
nop
mov
pop
arpl
cmp
push
push
lds
lret
xchg
repnz
add
imul
movsl
cmp
cmp
int3
pop
push
jle
push
add
fbld
mov
jmp
adc
dec
pop
loop
pop
adc
repz
or
shlb
in
test
xlat
mov
sti
inc
aad
lock
jg
ret
mov
sbb
arpl
mov
sub
push
arpl
test
scas
add
dec
mov
xchg
pop
xchg
pushf
lret
mov
rcll
mov
push
mov
xchg
inc
lods
sbb
das
push
das
popa
mov
mov
mov
pop
push
mov
and
lea
cmp
sbb
in
pop
lret
shl
popa
pop
aam
dec
or
adc
aad
pushf
test
arpl
fistl
movsl
inc
push
ljmp
add
dec
aaa
mov
enter
fdivrp
or
jns
and
insb
sahf
pop
in
cmp
xchg
leave
pushf
fldenv
dec
sbb
push
shl
xor
addr16
js
mov
stc
inc
jnp
negb
push
dec
pop
inc
jge
scas
inc
ljmp
push
fldl
or
ja
inc
ja
nop
rclb
or
mov
mull
xrelease
inc
movsl
pop
push
mov
mov
inc
cmp
xor
add
out
jmp
or
xchg
inc
repz
jbe
sub
lea
inc
sub
out
popa
dec
push
pop
es
scas
or
pop
ljmp
pop
xchg
sbb
xchg
shl
loopne
stos
mov
in
enter
fs
ret
push
dec
mov
daa
test
rcll
ljmp
leave
push
jmp
es
jmp
xchg
adc
or
add
insb
pop
std
sub
inc
test
arpl
and
cmovg
sbb
pop
jecxz
imul
maxps
add
mov
dec
pop
out
pop
add
cmpsl
roll
insl
jg
data16
idiv
mov
and
bound
pop
xor
shlb
pop
addl
repnz
inc
cwtl
jno
pop
inc
pushf
out
or
jmp
insl
cmpsb
out
bound
test
xchg
gs
xchg
or
inc
lds
mov
sbb
inc
stc
and
mov
inc
inc
pop
xorl
cmp
js
dec
arpl
shll
xchg
lcall
jns
inc
lgdtl
cs
xchg
into
xorb
lock
test
and
add
push
imul
mov
sbb
or
sbb
ss
ret
fisttpll
insb
and
lret
loopne
fs
not
cs
pop
sbb
stos
call
pop
jmp
dec
pop
lods
subl
call
or
arpl
mov
js
inc
mov
mov
jecxz
cmp
adc
jp
or
jg
mov
lret
rorb
xlat
insb
pop
cmp
aam
loopne
pop
cmp
pop
xchg
xchg
inc
outsl
adc
push
stos
mov
js
in
addb
or
int
adc
jmp
outsb
pop
mov
inc
pop
outsb
fisubs
pop
enter
imull
out
loope
jae
data16
ss
fiaddl
sub
ret
sbb
jne
movsl
ja
jbe
mov
test
ret
jne
pop
xor
adc
push
aam
mov
inc
cmp
clc
add
or
jmp
in
sub
roll
pop
inc
daa
insb
repnz
add
and
hlt
mov
popa
lods
cmc
dec
leave
pop
dec
push
mov
or
into
insl
shrl
jmp
push
jbe
lcall
loop
push
imul
out
enter
out
mov
loope
jl
inc
adc
and
popf
jg
dec
push
imulb
sub
jne
sarb
imul
or
stc
inc
jbe
push
adc
mov
or
sbb
cwtl
push
xchg
aad
pop
loop
sbb
std
aam
push
push
cmp
inc
es
mov
ljmp
insl
mov
out
pop
cwtl
jno
jecxz
out
pop
orl
fstpl
ljmp
arpl
mov
mov
cmpsl
mov
cmc
push
push
jl
clc
jae
pop
ja
push
out
mov
repz
decl
fistl
mov
ffreep
mov
sbb
sbb
and
fs
ljmp
test
xor
inc
dec
lea
sbb
sub
and
mov
ja
inc
in
movsl
iret
test
popf
sub
jg
fwait
or
inc
enter
adc
test
push
insb
imul
sub
jb
into
cltd
jecxz
dec
or
andl
imul
rclb
lods
add
mov
nopl
mov
pop
sub
aam
xor
or
mull
mov
iret
idiv
mov
loope
in
mov
sbb
jmp
call
xor
and
sar
xlat
dec
testb
adc
mov
rclb
sbb
cmp
jmp
push
ds
mov
test
enter
out
dec
add
ljmp
jmp
xchg
repz
in
cltd
mov
mov
aad
cmpsl
outsl
mov
mov
sbb
pop
aad
leave
pop
int3
popf
nop
xor
testb
test
push
mov
rcrl
lcall
push
cmp
pushf
addl
cmc
pop
mov
shlb
push
leave
lock
imul
aad
loop
jle
add
inc
mov
nop
dec
repnz
repz
mov
shll
jo
xchg
jae
or
and
ljmp
cmp
pop
inc
ret
out
movsb
repz
ljmp
mov
lar
divl
int
je
inc
inc
fcmovne
sbb
fs
sbb
mov
insb
cmp
arpl
lea
fs
out
mov
and
push
jg
xor
incb
add
cs
push
xchg
insb
stos
fistpl
add
movsb
in
pop
pop
dec
lds
roll
xlat
out
cmp
sbb
neg
sub
mov
leave
jecxz
add
xor
mov
sub
lds
loopne
pop
pop
push
cs
ja
pop
stos
cld
std
sbb
pop
pop
sub
cld
sub
mov
or
cltd
and
add
mov
loopne
shll
mov
jmp
enter
mov
sbb
mov
or
push
adc
cmc
ljmp
dec
aaa
mov
test
mov
cli
das
add
xchg
jecxz
pop
rclb
mov
jne
and
push
xor
add
jbe
out
mov
adc
icebp
pop
and
jo
fistps
xor
xor
adc
in
ss
shlb
inc
int3
fcoms
adc
ret
imull
cmp
xor
push
jb
mov
cli
add
imul
hlt
orb
fdivrl
insb
out
rcrb
sbb
fwait
dec
loope
cmpsb
pop
jae
xchg
inc
jne
adc
mov
push
cmp
mov
cmc
xchg
jl
insl
or
or
and
nop
push
iret
ljmp
dec
out
repnz
insb
test
mov
cmp
cmp
inc
pop
insl
pop
iret
rorl
and
push
sub
xchg
add
pop
in
ret
in
inc
add
jbe
mov
pop
sbb
mov
jle
push
lea
mul
add
or
or
or
movl
adc
push
inc
mov
cli
cmpsb
cltd
or
iret
push
fisubs
mov
xchg
adc
into
pop
jbe
dec
shll
mov
mov
ljmp
mov
xchg
fucomp
jnp
test
hlt
push
cli
xchg
loopne
arpl
shlb
enter
jp
test
push
mov
xor
pop
jmp
xchg
jp
mov
cmp
sarb
jne
inc
cli
dec
loope
jo
jmp
ljmp
out
inc
add
lock
stc
jne
adc
rorl
pop
cmp
fs
jns
leave
adc
stos
std
xor
inc
sahf
cmp
pop
gs
leave
cmp
cmp
jo
dec
add
cld
mov
sub
dec
test
or
mov
insb
call
or
inc
jge
mov
int
in
and
jne
iret
inc
jae
xorl
stos
push
fcmovnbe
pop
sbb
ljmp
pop
push
imul
dec
sahf
jle
arpl
call
lds
repnz
test
mov
imul
xor
bound
mov
mov
fistpl
jo
push
dec
push
arpl
add
inc
andl
and
xor
sbb
inc
orl
cmpb
es
adc
repz
call
fcmovnu
imul
mov
push
add
lods
icebp
push
repz
call
in
mov
daa
lock
notl
push
insl
inc
mov
and
lock
mov
idivb
cmp
and
push
push
movsl
pusha
mov
scas
dec
adcl
lods
mov
mov
cld
cwtl
shl
inc
or
sub
in
mov
xor
ds
jbe
mov
cmp
ljmp
push
out
mov
lock
dec
sub
dec
pop
cli
bound
xor
xor
popa
ret
movsl
pop
dec
mov
popf
mov
sarl
jmp
mov
jmp
add
add
inc
pushf
ss
shll
push
int
cmpsl
outsl
repz
mov
test
arpl
mov
fcomip
shrb
adc
xor
addb
loop
sbb
addr16
jae
inc
inc
cmp
cmpl
stc
lret
inc
fwait
push
jecxz
outsl
and
bnd
adc
in
subb
mov
inc
cltd
imul
push
leave
fucomip
into
jl
roll
push
cli
addr16
and
pop
ljmp
add
cs
mov
inc
inc
pop
mov
sbb
mov
sarb
xchg
movb
pop
imul
imulb
cmp
sbb
cmp
aam
cmp
push
sahf
xchg
fisttpl
and
mov
and
and
loopne
add
jg
subl
sub
rolb
push
xchg
js
and
mov
loope
ret
inc
or
sbb
in
ja
or
cmc
xchg
fsubp
pop
cmp
pop
add
xor
imul
int3
fsubp
arpl
sti
mov
sub
push
pushf
xor
push
test
xor
cltd
push
pop
test
in
mov
xchg
inc
insl
mov
out
stc
jae
cltd
mov
sbb
js
lea
repz
addr16
mov
inc
popa
out
pop
incl
mov
mov
daa
shll
jae
in
and
push
add
fisttps
ljmp
fisttpl
lea
in
inc
inc
notb
cltd
psubsw
test
test
mov
jbe
imulb
call
mov
dec
ret
inc
dec
and
imul
out
cmp
test
xor
sbb
push
test
jmp
clc
sbb
and
js
add
sub
jb
jecxz
std
scas
lret
inc
into
adc
add
scas
clc
rep
push
cmp
mov
imul
mov
rorl
repz
push
inc
adc
out
adc
sbb
in
bound
sub
out
das
je
int3
inc
pop
repz
xor
fwait
jb
cmp
adc
jg
fstpl
xchg
add
adc
shll
loopne
xchg
mov
cmp
dec
addr16
inc
cs
inc
inc
test
mov
incl
stos
rolb
insb
pop
rclb
push
clc
inc
jl
or
arpl
mov
test
ljmp
out
pop
xchg
adc
mov
je
lods
leave
mov
imul
rolb
sbb
inc
mov
lods
inc
fldl
or
fsubp
call
test
pop
sub
insb
fcmovb
data16
xchg
jg
test
adc
imul
into
mov
repz
add
dec
sbbl
fs
addl
pop
pop
push
sub
adc
addr16
mov
int3
inc
mov
ficoml
cmp
into
dec
fbld
in
push
push
out
push
stc
sarl
loope
jae
mov
pop
out
call
add
push
push
and
shlb
rcrb
mov
pop
mov
mov
inc
fbld
add
arpl
add
push
sub
mov
scas
lods
stc
std
or
sbb
cld
lret
mov
outsl
lock
pop
dec
dec
ljmp
into
cli
clc
aam
std
idiv
fwait
mov
insl
movsl
or
pop
cs
bnd
inc
fs
aam
dec
dec
inc
pop
movsl
dec
pop
sub
out
push
jp
shrl
adc
push
sbb
mov
loopne
repz
add
cli
mov
inc
addr16
adc
repz
fwait
sbb
push
sahf
pop
cmpsb
adc
mov
and
jae
data16
test
enter
and
es
xor
addr16
out
popf
roll
xchg
xchg
lock
jo
inc
jecxz
mov
and
sbb
ret
rorl
out
clc
inc
outsl
in
movq
mov
addr16
jle
mov
push
pop
cmc
add
push
sti
lret
xchg
push
adc
mov
test
repz
das
clc
mov
jns
sbb
icebp
idiv
push
outsl
into
jmp
daa
fs
in
ljmp
cmp
mov
mov
movsl
fs
std
insb
bound
aad
test
jge
out
ss
mov
fcoml
push
add
inc
out
adc
pop
and
cmp
adcl
xor
into
cwtl
int3
and
into
or
aam
psubw
bound
pop
adc
dec
ljmp
and
cmpb
sbb
jns
xchg
call
icebp
lret
cmpsl
cmp
inc
jbe
lods
test
push
xor
sbb
fisubrl
dec
ret
adc
addr16
mulb
mov
aad
dec
loopne
iret
stos
das
in
fistpll
ret
mov
pmulhuw
loope
fdivs
repz
cmp
push
sub
aaa
mov
ds
sahf
add
mov
mov
insl
jg
jae
push
aam
scas
jne
cmpsb
pop
insb
pushf
mov
pop
jmp
push
push
mov
lods
ror
mov
pop
mov
xchg
mov
jns
test
inc
imul
aad
cli
mov
jle
push
mov
int3
mov
mov
test
enter
cmpb
cltd
pop
call
sbb
xchg
jecxz
cs
jo
or
arpl
movb
test
std
fwait
push
sbbb
cmp
mov
enter
popa
xchg
jae
mov
sti
in
jno
xchg
int3
imul
or
xrelease
dec
cld
sub
fadds
neg
mov
and
imul
cltd
cmp
cmp
push
lret
shrb
mov
movsl
mov
cli
rolb
ds
mov
add
jmp
ret
js
mov
rolb
dec
mov
je
aaa
loope
adc
int3
pop
cli
ss
pop
popl
sbb
leave
sub
leave
jno
test
ljmp
sbb
inc
fimuls
sub
cwtl
subl
or
shr
lretw
jns
rcrl
orl
sarb
mov
stos
mov
sbb
mov
and
jmp
dec
stc
cmpsb
insl
sub
sbb
stos
sub
lret
pop
jb
dec
insb
mov
inc
cmpsl
mov
cmp
gs
pop
loop
fwait
ljmp
or
lretw
loopne
rcrl
out
cld
jnp
ja
dec
loop
adc
cltd
inc
pop
push
cmpl
pop
jecxz
stc
out
add
pop
mov
mov
sbb
jb
mov
decb
andl
shr
add
jbe
filds
test
or
rcll
enter
sarb
push
adc
push
fstp
xchg
imul
jnp
pop
ljmp
and
test
pop
shl
jmp
out
enter
stos
repnz
xor
shlb
push
fisttpll
je
lds
sahf
xchg
cmp
mov
sub
mov
negl
stc
leave
cli
mov
in
xchg
mov
or
adc
and
sub
int3
pop
cmc
xchg
inc
inc
pop
jno
cmp
scas
rorb
leave
stc
and
or
hlt
iret
fists
jecxz
iret
add
and
mov
movsb
rcl
lods
and
jbe
mov
popa
jl
or
arpl
mov
jl
mov
inc
dec
pop
into
dec
push
add
insb
cmp
pop
scas
push
clc
sub
rorb
int
clc
mov
repz
repz
pop
nop
out
add
shlb
xchg
jmp
pop
mov
mov
mov
lcall
data16
add
rclb
cltd
punpckhbw
ljmp
mov
cmp
arpl
lret
scas
int3
hlt
pop
add
mov
stc
jmp
add
addr16
insl
lods
xchg
mov
mov
rolb
in
jle
popa
test
inc
cmc
add
into
jb
pop
cltd
pop
mov
jl
stos
pop
pop
sub
leave
arpl
jg
shlb
scas
jmp
loop
ss
loope
mov
mov
or
jo
xor
inc
jae
jecxz
out
icebp
ss
pop
xchg
cmpsl
fisttpll
in
andl
pusha
loope
mov
inc
out
push
jnp
in
jmp
sbb
add
aam
pop
inc
jle
jbe
fisubrs
data16
xor
rol
pop
inc
pop
cmp
outsl
jg
add
dec
mov
push
cmpsb
loopne
enter
jo
fdivrs
sbb
adc
cmp
ss
push
fistpl
call
out
out
int3
pop
popf
out
xchg
lds
lcall
and
sub
aaa
loopne
dec
imul
addr16
pop
dec
std
jnp
sarl
pusha
loop,pt
or
push
adc
pop
dec
aad
sbb
sbb
test
push
int3
fs
or
imul
clc
rcl
mov
and
sub
pusha
adc
inc
adc
loopne
xor
jns
fisttpll
dec
jne
jmp
jmp
dec
aad
cli
pop
mov
lock
fldl
adc
das
test
ljmp
out
xor
rcr
pusha
or
push
mov
test
add
neg
push
jle
pop
dec
push
pusha
inc
sti
imul
mov
cmp
mov
and
inc
arpl
add
test
add
in
pushf
cmpsl
jecxz
cmp
enter
xchg
inc
movsb
fildll
rcrl
pop
fdivr
jbe
inc
xor
packuswb
stos
inc
mov
outsl
fidivl
sub
or
sbb
add
jbe
lret
shlb
lcall
jp
dec
jbe
inc
pusha
loopne
and
addb
inc
stos
bound
mov
mov
test
pop
jnp
das
adc
mov
mov
add
or
cs
icebp
data16
mov
mov
jle
data16
and
add
inc
dec
dec
mov
and
jnp
shlb
adc
sub
cmp
push
rorb
cmp
xchg
or
shl
and
pop
insl
push
dec
adc
adc
pop
cmp
clc
loopne
arpl
sub
inc
mov
sbb
test
push
dec
and
lea
jecxz
dec
inc
push
mov
mov
inc
push
imul
icebp
movsb
rcll
lds
adc
or
data16
adc
pop
inc
mov
inc
cmp
inc
mov
orb
daa
sbb
bound
push
cli
ret
mov
add
leave
push
ds
popa
and
or
rcl
pop
xchg
leave
jl
scas
mov
mov
mov
shrb
mov
pop
pop
insb
mov
fisttpl
add
pop
cmp
out
inc
scas
ja
loopne
cli
fadds
xchg
aaa
and
push
fst
push
call
pop
iret
loope
mov
pop
lea
roll
out
popf
pop
jmp
ss
scas
jecxz
loope
inc
jmp
insl
loop
push
add
cmc
testl
out
subl
out
shlb
xlat
fs
dec
std
mov
test
mov
pop
pop
jb
push
xchg
mov
inc
insl
imul
aaa
insb
rol
dec
cltd
push
in
into
mulb
mov
sbb
xchg
xor
notb
pusha
inc
movsb
push
fsubp
hlt
loope
test
xchg
ja
mov
pop
div
cmp
mov
stos
push
dec
xchg
andl
outsl
lock
mov
enter
pop
ljmp
or
dec
dec
les
sbb
push
insb
clc
sub
cmp
and
mov
int3
testl
xor
mov
sbb
idivb
fidivrs
mov
outsb
fsubl
loopne
fwait
push
gs
inc
jb
and
std
inc
enter
and
ljmp
push
enter
inc
clc
or
out
xlat
loopne
mov
mov
dec
ret
push
rclb
aad
xchg
ja
shl
loop
sbb
sbb
inc
insl
test
sub
into
idivb
mov
adc
push
jb
adc
xchg
sbb
repnz
or
mov
stos
mulb
movsl
fs
inc
repnz
insb
pop
test
mov
jl
cmpsb
pop
test
cmpsl
sbb
sbb
fs
push
in
lods
push
xchg
imul
jle
jae
nop
aad
jo
imul
sbb
lods
ret
add
push
out
pop
rcll
and
cli
cmpsb
cmc
in
icebp
test
mov
inc
mov
lea
jmp
inc
adc
stos
test
shl
clc
jmp
dec
fcom
mov
insl
mov
sub
or
mov
xor
aaa
pop
rcrb
cwtl
sbb
fs
jg
mov
push
sti
shlb
mov
lret
ss
jo
sub
std
inc
sbb
inc
iret
xor
rorb
sbbl
jmp
sbb
int3
ljmp
mov
movsl
int3
rcll
movsb
imull
adc
pop
dec
aaa
add
add
enter
mov
test
push
in
mov
xor
dec
cmp
adc
adc
stos
and
jmp
jp
out
jecxz
push
push
mov
jle
inc
cmovno
rcll
lds
sar
dec
pop
push
and
mov
dec
cmc
push
dec
imul
jne
push
stc
inc
mov
xor
jg
cmp
sbb
movsl
mov
cmc
fldl
pop
in
mov
sub
xchg
cmp
cmc
xor
adc
out
jmp
xchg
add
dec
add
mov
and
jo
xor
mov
dec
sarb
cmp
cmpsl
push
ds
pusha
or
repz
sarb
mov
enter
ror
imul
out
repnz
out
jp
mov
inc
imulb
jne
dec
insl
xorb
into
push
jne
or
push
repz
popf
push
rclb
jle
push
sub
fisttpl
std
mov
cmp
in
mov
push
fs
dec
and
xchg
shlb
push
imul
sbb
movsl
mov
in
hlt
stc
sbb
lret
inc
negb
adcl
bound
rclb
in
subl
pusha
lock
sbb
sbb
sub
push
jno
mov
push
jl
adc
rorb
scas
jl
pop
mov
push
sub
cltd
add
sbb
ljmp
icebp
push
das
notl
fsub
repnz
orl
fbld
inc
inc
in
xchg
push
or
std
inc
fimull
repz
sarl
enter
aam
push
mov
sub
xor
add
xor
add
sub
leave
and
and
and
push
sub
or
add
xor
inc
push
xor
push
or
inc
call
xor
call
add
and
mov
add
and
call
push
add
call
xor
xor
and
sub
sub
lea
xor
push
inc
add
push
push
add
push
sub
add
push
or
or
or
and
call
add
xor
and
xor
mov
and
mov
sub
and
mov
xor
sub
shr
add
xor
or
xor
and
jmp
xor
or
xor
lods
inc
dec
add
add
xor
xor
and
mov
dec
dec
mov
mov
mov
je
mov
mov
inc
and
or
jmp
mov
sub
inc
xor
add
dec
mov
jne
sub
pop
pop
and
or
mov
pop
mov
jmp
