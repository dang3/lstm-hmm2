movsb
mov
scas
fistpl
cmp
mov
idiv
push
nopl
mov
jle
jbe
and
insb
jns
jo
imul
or
test
iret
push
push
in
cmc
mov
ficoml
inc
xchg
js
push
jo
daa
leave
test
into
mov
pop
pop
and
clc
pushf
cmp
decl
xchg
sbb
addr16
adc
into
pop
jg
jnp
push
leave
mov
xor
jl
mov
cld
fnstenv
mov
jge
inc
test
mov
push
sub
je
daa
dec
lret
jge
pop
jne
pop
popa
clc
mov
ja
fsubr
xchg
aam
psadbw
adc
adc
lods
mov
push
or
add
sub
pop
cmpsb
cmc
ret
add
or
aad
repz
cmpsb
and
inc
pushf
int3
sub
test
inc
out
mov
lahf
mov
sub
jmp
lea
jne
call
not
setge
mov
pop
bswap
movw
movzbw
mov
pop
mov
call
pushf
pusha
lea
jne
jmp
add
pop
jae
ja
jb
outsb
je
add
pushl
ret
push
adc
pop
bound
movsl
out
mov
sbb
xor
loope
add
arpl
xchg
ss
pushf
inc
jnp
xchg
sahf
fdivl
ds
jl
dec
addb
push
pop
jle
dec
lret
hlt
mov
cltd
test
subl
jge
sbb
push
mov
sbb
cmp
xchg
xor
fstpl
xchg
mov
inc
add
inc
js
je
jb
arpl
jae
mov
inc
dec
mov
not
inc
setbe
mov
lea
pusha
pushf
lea
call
pusha
jmp
not
call
mov
lret
jmp
mov
fadds
and
xor
pushf
dec
aam
scas
ljmp
arpl
inc
dec
aaa
xor
xchg
xchg
ds
xor
sbb
movl
dec
pushf
sub
or
addr16
add
xor
or
pop
pop
call
xor
adc
or
sub
jae
shll
mov
jecxz
aaa
ret
mov
stos
pushl
pushl
lea
jae
pushf
jmp
jmp
pushf
sub
pushl
jmp
cmp
jmp
popa
bound
push
mov
xor
test
dec
fs
sbb
mov
and
in
adc
js
outsl
call
push
loope
jmp
push
xchg
sarb
cmp
loope
sbb
mov
cltd
cmpsl
pop
aaa
and
xchg
aad
movsl
push
pop
je
inc
in
fcmovbe
mov
add
test
push
mov
stos
push
out
xchg
es
push
ljmp
int3
xchg
scas
mov
or
rolb
mov
and
pushf
cwtl
ror
je
mov
shrl
xchg
in
mulb
scas
sub
popf
divb
sti
cs
mov
inc
imulb
add
inc
imul
dec
inc
out
data16
pop
or
rep
cli
mov
je
test
sbb
leave
in
adc
fstps
test
and
mov
sbb
pop
pop
daa
repnz
add
inc
and
into
in
jg
adc
adc
jno
addl
jb
pop
divb
adcb
cs
popa
loope
in
idivb
mov
out
sub
xchg
lret
fistpll
dec
dec
ss
adc
jno
test
xchg
inc
sbb
sub
scas
mov
xor
sbb
pusha
add
mov
pop
push
sub
mov
test
addr16
data16
dec
mov
cli
add
pop
inc
jnp
lret
in
cli
cs
mov
out
sbb
dec
push
xchg
fimull
and
in
les
lahf
stos
adc
add
adc
cld
ljmp
pop
xchg
xchg
mov
test
or
mov
mov
dec
jno
adc
mov
add
dec
stc
mov
mov
adc
nop
andb
inc
xor
push
inc
or
inc
pop
pop
popf
jbe
sub
popf
jno
push
sbb
push
push
pop
andl
stc
jns
jecxz
fstl
cmc
sub
arpl
rcr
sub
iret
jb
das
aaa
cltd
test
sub
adc
insl
mov
sbb
setle
call
or
pushf
jmp
aaa
pushl
dec
fistps
test
addr16
cld
cmp
insb
orb
inc
hlt
adc
sbb
or
cmp
mov
and
addr16
sub
push
or
mov
test
sahf
es
popf
pop
xor
aaa
cmp
loope
add
stos
fwait
sub
cwtl
push
fists
jno
mov
lahf
aas
fisttps
xchg
das
mov
out
mov
nop
clc
cmp
mov
inc
btc
bswap
adc
mov
bt
movb
sub
mov
push
push
jmp
push
neg
mov
movsbl
push
shld
push
movsbw
xadd
xchg
rcr
push
call
lea
jae
pushf
pushf
cmc
jmp
or
cli
sub
push
sarl
fdivr
xor
nop
movsb
mov
loopne
jno
enter
gs
push
cmp
jb
mov
clc
aas
imul
push
cmp
loop
add
dec
sbb
shlb
stos
mov
pushw
dec
mov
out
mov
jae
les
add
sbb
xchg
xchg
lret
stos
push
fidivrl
xchg
loop,pn
and
test
mov
lea
pusha
pushf
pusha
pushl
lea
call
pushf
lea
jae
pushf
test
mov
jmp
jmp
add
int3
sbb
out
adc
cmpsb
mov
ljmp
sub
jns
pop
mov
fs
jg
scas
or
mov
lods
cmpsb
and
inc
jge
aad
xchg
sbb
inc
mov
cmpsl
stos
jnp
xchg
dec
jle
jp
addb
repnz
lret
inc
hlt
sub
cmp
cmp
mov
dec
hlt
mov
xchg
add
jmp
pusha
call
cmp
push
mov
movw
lea
jae
dec
shld
xadd
cmc
mov
pushf
mov
bsr
cmp
and
btc
mov
stc
stc
xor
pushf
pusha
repnz
pushl
pushf
pushl
lea
jne
adc
mov
mov
add
pusha
sub
sar
lea
sub
clc
sub
pusha
test
pusha
clc
pushl
popl
jmp
add
test
cmp
mov
call
hlt
std
xor
push
stos
xor
inc
addb
sub
jo
iret
xor
jne
fidivs
repnz
xchg
mov
mov
pop
cmovle
xchg
mov
arpl
daa
push
push
nop
jecxz
pop
jmp
into
jbe
push
pop
subl
mov
push
sub
jo
out
in
mov
pop
shlb
or
and
popa
in
test
mov
jmp
call
adc
or
inc
adc
mov
mov
fldenv
mov
cltd
xor
popa
gs
inc
jl
push
sub
addr16
mov
stos
xlat
jnp
jge
or
insb
xchg
cwtl
mov
xchg
pop
imul
xor
and
repnz
adcb
icebp
and
cmpsb
bound
cmp
cmpsb
push
lret
lock
sub
lahf
inc
std
add
jno
test
in
int3
in
mov
cmp
xchg
xor
nop
mov
cld
mov
jbe
jo
add
sti
adc
loope
or
fs
mov
dec
mov
xor
sub
fmull
pop
nop
pushf
sar
adc
push
hlt
xchg
iret
jae
or
xchg
pop
das
insl
into
aam
inc
aaa
ret
lret
and
sbb
pop
iret
jnp
cld
mov
scas
scas
pushl
jnp
cmpsl
fsubp
push
pop
pop
jl
insl
pushf
dec
sub
push
addr16
mov
repz
adc
jo
mov
jae
sahf
loop
arpl
fcoms
pop
adc
cs
sahf
cs
idivb
cmpsl
fistpl
pop
inc
xlat
adc
dec
jo
jbe
pushf
xor
loope
and
ret
hlt
adc
outsb
subb
pop
call
mov
jne
popa
in
cmp
xor
in
in
push
xchg
add
fldl
xchg
sbb
pusha
adc
ds
movw
jmp
xchg
xchg
pop
xor
adc
fs
loopne
cmp
xchg
sbb
xlat
xchg
stos
dec
out
rcl
ficomps
push
xor
subb
movsb
nop
push
into
ljmp
testb
xor
inc
and
ror
in
fmul
sbbb
mov
push
cmp
cmpsl
ficompl
push
movsl
pop
inc
add
ja
sub
inc
jns
repnz
int3
push
hlt
test
in
add
pop
add
xchg
out
clc
add
bt
bt
mov
bswap
mov
test
bt
pusha
cmp
pushf
call
jmp
add
dec
outsl
popa
fs
imul
add
cltd
or
add
adc
imul
pop
adc
and
inc
dec
popa
test
push
jge
push
sbbl
xor
or
or
mov
dec
fsubl
add
adc
les
mov
add
cmp
mov
lods
shlb
test
out
mov
xchg
cmpsl
addr16
pop
adc
aad
call
mov
pusha
pushf
movw
lea
jmp
push
lea
jne
call
movl
dec
pop
jne
lods
int
cmc
or
lea
inc
icebp
mov
imul
xchg
cmp
dec
cmp
inc
jge
mov
mov
inc
push
call
es
xchg
dec
xlat
or
sbb
xchg
ljmp
pusha
xchg
and
aas
or
cmp
pop
add
jg
mov
dec
call
push
pushf
jmp
pushf
pusha
pushf
lea
jae
bt
cmc
stc
cmp
jmp
adc
pop
in
subl
push
cmp
xchg
into
cli
push
dec
jbe
outsb
and
sti
lods
xor
cmp
outsl
subl
push
xchg
lock
or
imul
cmp
test
mov
loope
push
lods
pop
insl
sbb
repz
xchg
mov
hlt
nop
xor
test
dec
mov
mov
add
call
cmp
sbb
test
ret
inc
push
js
mov
inc
dec
call
xchg
lods
dec
sbb
stos
ljmp
in
pushf
push
push
cs
scas
divb
add
ret
std
xor
xlat
mov
jl
aaa
pop
mov
adcb
mov
push
mov
test
repz
or
repz
xchg
mov
or
adc
divl
push
ja
les
cmp
subb
cmp
add
sarb
push
loop
clc
jae
push
out
mov
mov
lods
enter
push
sbb
aad
adc
inc
clc
cli
mov
and
fsubrl
mov
add
inc
mov
movsl
inc
jmp
lea
scas
lods
mov
jmp
aaa
mov
lcall
lock
hlt
push
add
sub
push
xchg
pop
fwait
pop
mov
jns
inc
roll
push
data16
lods
mov
sbb
aad
cld
adc
xchg
cs
daa
dec
mov
pop
pop
xchg
mov
push
fwait
cmc
cmpsl
add
loopne
cld
mov
hlt
test
aaa
sub
lret
push
sbb
ds
lock
test
jae
jl
mov
shlb
mov
and
inc
inc
add
adc
popf
mov
fnsave
mov
jl
gs
sub
or
ljmp
xchg
adc
xchg
lods
in
sbb
pop
adc
pop
xchg
out
mov
pop
and
jge
cwtl
pop
inc
incb
mov
loopne
add
jb
in
lock
fadds
xchg
sub
pop
fdivrs
in
xor
pop
in
mov
cwtl
lea
jne
mov
mov
rcl
sbb
sub
movsbw
rcl
mov
cmp
clc
sub
cmp
stc
pushl
stc
bt
cmp
push
lea
jns
pusha
lea
ja
shl
shl
bt
sub
pushf
add
add
bsf
shr
bsf
mov
test
rcl
bt
rcl
mov
pusha
mov
stc
repnz
call
pushf
mov
pusha
lods
call
pushl
push
push
lea
ja
not
lea
pusha
not
mov
not
jmp
in
in
std
xor
ret
or
repz
pop
jg
mov
es
xor
dec
mov
lds
add
dec
repz
push
pop
scas
push
xchg
mov
es
adc
sub
clc
xorb
sub
insl
pop
and
add
adc
pop
jno
push
addl
add
fwait
pop
mov
fildl
orb
cmp
mov
pusha
lea
ja
jmp
inc
inc
dec
xor
cs
insb
add
ficoms
push
pushl
ret
mov
mov
pop
pusha
pushf
pushl
pushl
ret
dec
dec
jb
push
pop
mov
rol
loope
sbb
push
add
or
xor
shl
jne
fwait
roll
pop
das
mov
pop
mov
sub
imul
lcall
xor
pusha
loopne
jp
xor
cwtd
fs
xor
jmp
add
insb
xchg
xchg
sub
sub
repz
movsl
cmp
popa
cmc
test
movsl
push
add
stos
mov
call
mov
pushl
pushf
mov
pushl
lea
call
pusha
jmp
pusha
pusha
cmp
push
call
movl
shr
jmp
rcll
cmc
adc
test
call
aas
pop
addr16
pop
pop
inc
in
jmp
sbb
insw
std
mov
aam
adc
icebp
xor
push
fwait
rolb
mov
in
mov
cmc
adc
jnp
pop
cli
xor
sub
gs
rorb
xor
sahf
sar
xchg
into
inc
push
xor
sbb
lret
jno
mov
dec
or
add
xchg
cmp
pusha
int3
and
jb
or
cmpsl
bound
inc
cld
xor
lret
fists
adc
in
xor
mov
or
and
dec
imul
adc
shll
out
mov
outsb
stos
fists
in
xchg
xor
das
push
aad
cmp
inc
outsb
cmpsb
mov
out
stos
lahf
sub
ds
inc
icebp
add
and
inc
add
ljmp
jle
dec
lods
scas
outsl
inc
push
mov
and
pop
cwtl
aam
pop
repnz
repnz
inc
insl
out
add
popf
sbb
cmp
sub
and
outsl
add
mov
test
jl
ret
add
dec
or
and
push
xchg
lock
aad
lods
dec
inc
ljmp
mov
add
subb
dec
call
je
add
call
and
movl
mov
pushf
mov
pushl
ret
lea
jae
stc
cmp
pusha
movb
pushf
lea
ja
pusha
inc
not
not
inc
test
or
xchg
dec
mov
rcr
shl
mov
test
mov
sar
mov
cmc
stc
cmp
stc
sub
mov
jmp
int
lods
flds
outsb
cmc
loopne
add
push
in
adc
mov
mov
lds
sbb
in
sbb
push
xchg
lcall
gs
insl
sti
loope
xchg
rorb
addr16
adc
test
mov
mov
dec
icebp
adc
xor
aas
or
add
pop
les
les
jbe
or
mov
ljmp
push
addb
push
push
stos
inc
mov
in
cli
xorl
ljmp
inc
and
sarl
push
into
lea
jmp
cmp
cmp
cmp
movb
push
jmp
jmp
push
lea
ja
pusha
movb
setnp
pushf
inc
setl
inc
setge
rcr
neg
bt
xchg
not
daa
mov
call
fwait
arpl
aas
jbe
pop
icebp
and
lock
or
inc
je
lods
sub
outsb
loopne
mov
pop
dec
cld
scas
je
sub
ret
aas
ret
jae
mov
mov
lret
mov
mov
fisubl
lcall
test
xor
test
out
or
es
stos
push
xchg
inc
aad
mov
fwait
push
arpl
xchg
shll
inc
cmpb
addr16
adc
xor
test
movsb
sbb
data16
cmc
push
sub
ja
es
adc
out
jae
ret
ss
or
xchg
inc
lret
jge
call
ficoms
adc
inc
or
inc
dec
arpl
repz
cmp
rol
sub
scas
add
inc
cmc
sub
outsb
das
pop
daa
mov
pusha
jle
jne
das
jbe
mov
scas
push
repnz
cmp
mov
jns
mov
sti
lahf
inc
lret
arpl
xchg
sub
adcl
fstpt
dec
bt
ror
push
sub
cmc
neg
cmc
jmp
pushf
jmp
lea
call
pusha
pushf
pusha
lea
jb
pusha
movw
movw
movb
pushl
ret
cmp
xchg
xchg
retw
sbb
hlt
jnp
jbe
out
sbb
push
xchg
push
gs
cmp
pusha
loop
inc
fldt
xchg
sub
jge
xor
sbb
idivl
sub
mov
sub
push
pop
dec
inc
test
xchg
xchg
and
dec
out
stos
mov
mov
in
sub
and
imul
cmp
pop
je
lods
insl
or
dec
imul
adc
fcomps
push
in
cmp
pusha
sbb
xor
arpl
mov
lea
jmp
sbb
push
pop
xchg
insl
mov
jl
js
aam
or
dec
push
cld
sub
push
mov
xchg
notl
add
add
mov
mov
aaa
iret
add
ljmp
pop
pop
mov
mov
or
test
out
pop
imul
fcmovb
push
lahf
leave
popf
test
faddl
lods
xor
outsl
mov
mov
mov
jno
add
popa
inc
leave
and
pop
mov
or
lcall
test
adc
rorb
sahf
repnz
addr16
and
std
or
lret
dec
push
mov
loopne
xlat
or
sbb
sbb
jb
sub
jae
sub
test
jb
lods
jl
mov
or
sub
add
shl
jge
les
sub
and
inc
lret
push
loopne
sbb
xchg
idivb
mov
ds
sti
das
rcrl
mov
repz
mov
mov
das
adc
in
lds
mov
fisttps
aas
addr16
fisttpl
sbb
ret
imul
cmpsb
mov
dec
mov
cmpsb
lods
mov
cmp
cmp
cld
int3
pusha
sub
mov
mov
pop
pop
ja
xor
or
sti
scas
adc
ret
rcrl
jp
in
push
mov
xchg
mov
xor
jbe
into
push
loop
ds
rcrl
push
mov
decl
test
add
stc
cmc
call
jmp
cmp
call
xchg
mov
imul
jne
mov
out
pop
aas
dec
mov
pop
in
mov
sahf
movsb
les
sub
aad
addb
jmp
fisttpl
mov
iret
add
xor
add
lods
cmp
mov
enter
int
mov
clc
loopne
adc
pusha
mov
dec
in
adc
mov
and
mov
add
lea
ja
not
sub
stc
sub
bt
neg
stc
add
movzbw
bswap
rcr
mov
or
shr
sar
bt
mov
test
stc
repnz
call
jmp
lods
mov
repz
imul
jecxz
iret
lods
add
cmp
fsubl
xchg
mov
push
lock
enter
pop
loopne
mov
add
sub
into
mov
pop
mov
mov
xchg
bound
mov
dec
dec
xchg
push
outsb
cwtl
push
push
movb
cmp
test
mov
jo
shlb
int3
pop
faddl
test
dec
inc
push
dec
inc
dec
xor
cs
insb
add
adcl
jmp
lahf
pop
xchg
mov
sar
comiss
xchg
scas
sar
negl
push
ja
ret
imulb
adc
sub
fldt
ret
inc
jae
test
aam
xchg
stc
dec
pusha
shl
push
or
jmp
push
add
jecxz
add
hlt
lock
fldcw
and
or
add
and
inc
clc
xchg
sbb
subb
mov
aam
mov
bsf
push
and
sub
and
or
mov
bt
test
pushf
pushf
jmp
jl
lea
inc
leave
lret
imull
pop
addr16
jecxz
pop
sub
adc
or
fisttps
daa
bt
jle
sub
mov
cli
cltd
xor
fwait
mov
aam
sbb
adc
sub
adc
mov
cmc
xor
xor
xchg
push
mov
mov
test
sbb
and
dec
add
pop
mov
aas
rep
jmp
cmp
xor
enter
mov
fstps
cs
stc
sub
sbb
or
test
push
jb
pop
sbb
dec
inc
push
test
test
sbb
mov
sbb
jl
test
sub
sbb
loope
leave
test
add
sbb
inc
or
inc
test
jae
pop
lcall
fiaddl
jl
inc
mov
jl
test
pop
inc
mov
jl
test
inc
popf
test
aas
test
pop
sbb
mov
sbb
jl
test
sub
sbb
inc
inc
pusha
test
incl
and
jle
mov
jle
fiadds
aas
stos
sti
sub
cli
and
jle
mov
push
mov
cmp
mov
in
lcall
ret
push
mov
movsb
jb
sbb
sub
mov
call
ja
fwait
inc
mov
pusha
adc
aam
cmp
shr
movsb
pop
xchg
ret
mov
mov
adc
push
imulb
or
inc
fwait
jno
fs
mov
inc
scas
and
dec
mov
pop
jecxz
or
xor
popa
sbb
dec
aaa
pop
ljmp
dec
mov
test
sbb
ftst
mov
movsl
stos
int3
imull
xchg
adc
dec
xchg
call
push
clc
xchg
popf
pop
icebp
sbbl
icebp
mov
mov
icebp
adc
mov
inc
pop
nop
shr
adc
pop
pop
jl
call
lea
jecxz
fwait
fs
add
xlat
jg
jb
mov
dec
add
inc
cmpsb
mov
pop
out
and
xchg
mov
dec
xchg
gs
iret
mov
xchg
inc
rolb
jne
pop
inc
fldt
mov
inc
pusha
add
aaa
push
aad
adc
lds
int
add
jne
repz
in
add
mov
mov
arpl
test
sbb
xchg
test
in
adc
mov
sbb
mov
push
and
sti
mov
insb
sbb
mov
shll
mov
pop
dec
cmpsl
jg
mov
and
xlat
imul
sub
mov
arpl
mov
iret
xchg
xlat
ja
fwait
sub
frstor
or
test
jp
jae
mov
inc
jno
xchg
lods
aad
xchg
jae
and
fadd
sbb
inc
xchg
push
jnp
push
and
sbb
push
dec
push
sbb
imul
sbb
iret
xchg
pop
dec
mov
and
jle
outsw
jno
push
fisttpl
mul
xor
das
js
pop
pop
dec
fcmovne
mov
xor
hlt
and
xor
inc
pop
sti
lahf
das
iret
imul
xor
outsl
jg
jne
rep
xor
test
pop
inc
or
nop
jae
mov
addr16
lret
jg
icebp
or
dec
addr16
push
inc
add
es
cltd
adc
adc
fs
mov
xchg
nop
dec
mov
dec
mov
or
nop
cmpsb
fistps
lea
adc
cs
mov
push
mov
rolb
int
mov
rol
xchg
and
faddl
xchg
mov
xchg
xchg
mov
cmp
jns
movsl
or
lea
je
jmp
call
push
mov
lea
jne
bswap
cwtl
lea
movb
bswap
cwtl
jmp
push
call
bt
pusha
clc
call
jmp
movl
lea
ja
stc
imul
jmp
mov
jecxz
xor
cli
and
jle
lret
or
sbb
lret
pusha
mov
insl
jno
mov
addr16
pusha
insb
dec
cmpsb
aad
vpcmpgtw
stc
out
out
icebp
and
rcll
lret
andl
sub
aam
push
cltd
inc
push
add
sub
fisttps
out
lds
dec
xlat
xchg
mov
xorl
out
xchg
dec
xchg
aad
inc
pop
cmp
add
loop
imul
movsb
pop
pop
mov
xchg
xor
inc
ja
ret
sub
loopne
and
jg
fwait
and
imul
das
fisttpl
jl
dec
mov
sbb
sub
je
dec
push
arpl
cmpl
outsl
mov
and
adc
inc
je
test
and
or
in
inc
add
jno
popl
cmp
xchg
xor
incl
xor
push
sahf
pop
xchg
xorb
pop
test
dec
jns
clc
add
jmp
pop
inc
pop
pop
sbb
or
cmpsl
cmp
subl
test
cmp
add
je
mov
aaa
inc
jnp
xchg
lret
fucomi
jnp
push
sarl
xchg
cmp
xchg
mov
fs
pop
test
jnp
pop
xchg
push
mov
pop
xchg
and
push
inc
lret
test
adc
xchg
dec
mov
imul
inc
adc
mov
les
test
and
fsubl
lret
outsl
sti
mov
fists
mov
sub
sub
dec
or
test
sahf
mov
push
es
dec
outsb
mov
shrl
dec
addr16
push
pusha
bound
add
bound
push
lret
into
jb
cmp
dec
lods
imul
int3
icebp
adc
ret
lock
inc
jnp
mov
push
popa
jno
adc
fsubr
inc
sahf
int
insl
xor
loop
jmp
imul
fidivs
movsb
sbb
js
ret
push
shrl
bound
out
movsb
dec
out
lea
jg
fidivrl
test
sbb
sahf
stos
xor
push
out
mov
adcl
xor
sahf
and
ret
mov
movsb
movsl
add
out
pusha
leave
add
mov
cmp
lcall
push
sub
bts
fsubrl
repz
jbe
mov
mov
xchg
fadd
dec
mov
in
int
sub
jne
jns
leave
pop
imul
cli
idivb
push
pop
test
and
push
pop
mov
fadd
dec
xor
das
push
mov
cmc
xchg
popf
lahf
test
mov
xlat
pop
xchg
jne
pusha
mov
les
sub
cmpb
jnp
shll
xchg
lret
push
out
pop
mov
mov
lock
std
std
mov
loopne
daa
jo
inc
sub
les
sub
pushf
mov
pop
repnz
out
lahf
lods
popf
jge
mov
sbbl
aam
pop
lret
add
in
fbld
daa
test
mov
fiadds
mov
in
inc
push
jecxz
xchg
push
test
in
inc
push
imul
mov
ljmp
mov
fdivp
add
or
daa
inc
lds
dec
dec
add
divb
dec
ljmp
movsb
jae
popa
fidivrs
sub
fwait
mov
pop
pop
int
mov
std
mov
sbb
pop
push
in
fmull
lock
addb
rolb
fistps
mov
in
scas
xor
aad
push
loope
xor
insl
mov
xlat
push
pop
jns
xor
js
ss
push
xchg
pop
sbb
cmpsl
inc
roll
push
xchg
jnp
test
push
scas
mov
mov
movntps
scas
cmp
mov
cmpsb
pop
cmp
jbe
mov
dec
sub
cltd
sub
inc
enter
negl
xor
xchg
dec
arpl
cmp
into
jle
fidivrs
mov
fcoms
ror
stc
clc
cmp
pop
lea
pushf
mov
call
add
inc
jb
popa
je
inc
imul
cmp
test
lods
add
pushf
bt
add
jmp
dec
dec
jb
es
mov
ja
mov
notl
sub
imul
xchg
movsl
dec
push
xchg
push
js
mov
repz
push
leave
testl
enter
mov
inc
dec
test
and
sbb
inc
js
jp
std
push
cld
mov
mov
pop
and
movsb
rolb
lret
outsl
jae
add
sbb
or
xchg
dec
jge
inc
push
out
xchg
inc
xchg
imul
loop
pop
xchg
stos
or
jle
testl
loope
dec
or
pushl
pop
in
pop
and
repnz
ja
sbb
out
mov
mov
dec
jge
sub
dec
in
cs
jp
cld
call
test
pop
ret
push
pslld
add
clc
push
xchg
fldt
cmp
jns
adc
lods
push
shll
mov
pop
jae
jbe
push
and
cmp
xabort
mov
mov
out
stos
ss
outsb
inc
xor
lea
call
pushf
jmp
movsbw
push
shld
xor
sbb
mov
jnp
push
shld
pushf
mov
clc
bts
push
movzbl
push
sub
push
rol
xchg
test
mov
pusha
ror
mov
bsf
or
rcr
mov
test
call
pushf
lea
je
clc
pusha
pushf
cmp
movb
lea
je
push
lea
jmp
leave
lret
push
or
jmp
pop
lahf
ret
iret
pop
das
aaa
cmp
ja
push
in
ss
repz
cwtl
mov
imul
jp
mov
bound
mov
xchg
cs
cmpsl
out
mov
and
add
loop
mov
mov
sub
push
cmpsl
cmp
mov
ret
jecxz
sub
addr16
and
mov
inc
pop
ljmp
adcb
push
in
cmpb
pushl
dec
jmp
outsb
sub
nop
inc
outsl
and
or
push
push
jb
ret
add
push
ds
jle
out
and
out
cmp
repz
inc
loope
dec
push
stc
sub
dec
movsb
fcompl
mov
loope
push
pop
dec
add
fcmove
mov
mov
mov
lea
push
lret
mov
xor
mov
lret
out
es
adcb
dec
scas
outsb
mov
push
outsb
xor
jl
sub
add
and
mov
out
cs
outsb
xorb
sbb
push
mov
and
sub
mov
mov
xor
roll
fwait
xchg
add
in
adc
div
and
xor
mov
cmp
sub
in
aas
repnz
or
shl
in
mov
je
sub
fs
or
cmpsb
fnstcw
mov
imul
cmpsl
sub
loop
inc
xchg
fwait
inc
sbbb
outsl
sahf
lods
cmp
sbb
stos
pop
push
jp
repnz
ds
mov
dec
fiaddl
xor
jmp
pop
sub
in
sub
jb
push
test
lods
cmpsl
int3
loopne
adc
jl,pt
ss
mov
jmp
cmp
hlt
lahf
inc
daa
add
push
loop
mov
sbb
adc
aas
lret
push
out
imul
out
cli
jae
cmpsl
sbb
or
inc
mov
ficoms
fs
jl
mov
test
adc
inc
jne
pop
mov
pop
aas
jg
fwait
iret
rcr
testl
mov
pop
mov
loopne
inc
loope
pop
push
outsl
stos
into
repnz
xorl
mov
out
lds
lock
out
inc
jne
pop
sub
adcb
shll
xchg
lahf
pusha
jns
mov
int3
lods
jp
mov
rcrl
cmpsl
mov
pop
sub
jno
ss
test
stos
jp
pop
stc
cmp
rcrb
and
pop
call
sub
mov
mov
adc
dec
sbbb
movsl
add
fs
faddl
cmp
push
push
sbb
in
jmp
cwtl
ret
xchg
and
testl
xchg
stc
cmp
ficomps
sbb
push
adc
add
cmp
leave
add
aaa
add
and
inc
stc
jbe
decl
xor
cld
cmp
cltd
adc
push
cmp
jl
mov
imul
cmp
jp
fiadds
mov
jmp
sub
or
jmp
cmp
xor
push
mov
jmp
jecxz
xlat
pop
mov
ds
pop
test
or
mov
shll
stos
mov
and
into
add
lock
lods
stos
test
xchg
mov
jge
cltd
dec
sbb
in
inc
shl
test
fmulp
test
test
enter
sti
xchg
and
cwtl
int
sub
push
xchg
push
mov
jle
pop
adc
mov
lea
call
push
lea
jae
setno
dec
pushf
mov
call
call
aad
fwait
mov
pop
pop
test
pop
sub
fisttpll
cmp
xchg
popf
roll
xor
or
movsl
je
inc
dec
inc
sub
clc
push
fucomi
enter
call
mov
iret
pop
xlat
mov
jb
aas
pop
lock
jo
or
mov
fstl
enter
rcrb
cmp
sbb
mov
shlb
mov
mov
leave
xor
adc
or
insb
je
mov
cmp
cmp
ret
push
or
mov
jb
fisttpl
sbb
sbb
jo
push
jno
in
cltd
cmpsb
loopne
ret
call
sub
push
pop
inc
mov
rcr
fsubrp
add
inc
pop
add
test
cltd
mov
inc
inc
dec
dec
inc
push
dec
xor
cs
insb
add
das
cmp
mov
repnz
lcall
mov
pop
cmpsl
cmp
in
pop
sbb
test
or
pushf
outsb
leave
jne
sub
fdiv
test
ss
cmpb
push
push
sub
mov
inc
sti
xor
int3
in
jns
cmp
data16
sahf
push
mov
push
in
int3
sub
insb
repnz
daa
aas
jbe
add
jle
cmp
jecxz
push
add
mov
mov
mov
test
mov
mov
sbb
dec
push
pop
cld
or
mov
fucomip
sbb
out
daa
adc
stc
loop
mov
notb
and
movl
mov
fstpt
aaa
cmp
fwait
mov
xchg
pop
test
pop
or
std
call
mov
in
xchg
pop
insl
adc
pop
aad
or
and
jne
test
cli
mov
or
push
xchg
sub
jl
lods
aam
inc
call
test
mov
ret
push
mov
and
out
pop
jns
adc
imul
jnp,pt
and
fsts
push
lret
push
fisubl
dec
fldenv
stc
imul
test
out
xchg
lea
mov
mov
mov
mov
sbb
adcb
lret
inc
outsb
mov
mov
pop
les
lret
hlt
fld
roll
xchg
lds
xchg
sbb
movsb
jmp
or
bound
aas
inc
in
mov
testb
xchg
cltd
aam
inc
in
pop
ja
fisubrl
sub
jg
mov
std
jbe
or
jecxz
jo
add
or
push
push
jp
push
out
rorb
je
repnz
lea
call
call
sahf
mov
test
lods
scas
ret
repz
arpl
iret
rcll
inc
repz
jmp
out
dec
out
test
xchg
inc
dec
test
push
xchg
dec
fimuls
std
push
adc
sarl
mov
cli
pop
inc
jbe
dec
jp
in
add
dec
pop
cmp
fisubrs
loop
add
je
inc
roll
xor
out
xchg
jns
and
imul
icebp
add
outsl
jne
add
sbb
push
xor
add
push
fucomi
adcb
out
xor
sbb
dec
fnstenv
dec
mov
and
and
pop
adc
jnp
mov
sbb
mov
gs
outsb
or
fadds
inc
mov
jo
mov
fidivl
out
enter
sub
dec
mov
push
mov
mov
sbb
das
shr
sbb
jle
inc
les
sbb
cmp
cmp
ffree
icebp
aaa
insb
rorl
stos
dec
lcall
ds
mov
bnd
sub
cmp
cmp
stos
sbb
mov
pop
lods
dec
and
ret
rolb
add
and
outsb
dec
test
sbb
lcall
adc
mov
dec
push
add
xchg
mov
xchg
dec
hlt
pop
cmp
addl
add
inc
inc
push
adc
mov
jge
push
fwait
insb
push
sbb
leave
popf
jo
xchg
std
xor
or
lock
fisubrs
mov
add
in
int3
shlb
pushl
sub
fwait
out
fisttpll
xchg
fsubrl
xorb
dec
cmp
push
test
pushf
cs
dec
jle
sahf
dec
inc
fwait
inc
sbb
mov
inc
scas
inc
jnp
push
fwait
cli
bnd
movsl
xor
notrack
adc
jo
or
jmp
lcall
stc
jne
inc
scas
dec
mov
add
cmp
cmp
xorb
std
jl
sbb
inc
adc
lret
dec
jle
xchg
jp
mov
and
inc
xchg
push
dec
popa
dec
lahf
inc
jbe
pop
or
sbb
xor
scas
mov
cmp
es
jbe
pop
jle
sbb
or
lea
movsl
jp
movsl
jnp,pt
das
mov
push
or
dec
loope
daa
add
lds
mov
xorb
push
sahf
into
cltd
mov
insl
cld
loope
jecxz
push
mov
into
jnp
fisttpll
shl
stc
adc
dec
add
outsb
sbb
inc
pushf
xchg
mov
inc
sbb
add
ret
inc
mov
movsb
fldenv
and
xorl
dec
cmp
cmp
jae
test
test
fisubrs
jp
mov
enter
fwait
jge
fsub
test
aaa
add
mov
xor
add
cmp
shrl
and
xor
cmp
lcall
add
sbb
repz
cmp
mov
inc
sbb
adc
stc
jp
xor
mov
or
stos
sub
jns
push
add
or
and
cltd
push
in
cli
xor
cli
mov
add
outsl
sbb
frndint
inc
push
sub
dec
pop
add
mov
lods
cld
mov
jecxz
cmc
push
jmp
shll
insb
popa
es
add
ret
outsl
pop
loope
cmp
jge
into
mov
loop
cli
bound
ss
cmp
inc
fwait
adc
cltd
jge
into
jae
mov
xchg
pushf
stc
pusha
sub
pushf
and
rcr
sub
shr
sbb
push
lds
sbb
stos
inc
or
xor
gs
mov
mov
call
mov
pop
pushf
ret
jp
mov
jmp
ds
int3
mov
pop
jge
or
pushf
ret
cmp
push
and
dec
jg
sbb
push
push
sahf
xchg
les
mov
push
les
mov
outsl
dec
ljmp
pushf
leave
out
cmp
movq
mov
pop
inc
stos
sbb
dec
xchg
stc
push
mov
test
adc
or
xchg
xor
mov
jge
inc
mov
sub
aaa
jg
and
in
test
mov
sbb
and
mov
mov
cs
dec
cmc
pop
and
ficompl
jo
adc
in
stc
cmp
cli
pop
stos
sub
mov
fs
dec
mov
sbb
lcall
pop
lods
ds
stc
lods
mov
push
mov
xor
mov
arpl
jp
mov
out
fwait
mov
add
and
jno
loopne
scas
pop
dec
aaa
fwait
repnz
popa
fildll
rcll
jge
fucom
fs
xchg
xor
jo
jo
xchg
loop
test
fdivrs
aad
add
cmp
dec
jle
leave
jp
add
add
jnp
bound
icebp
push
inc
jge
xor
dec
push
gs
cmp
pop
mov
dec
sbb
hlt
add
sub
xchg
mov
xchg
or
dec
sbbb
ret
xchg
fmuls
jnp
jp
sub
fdivrl
or
inc
dec
mov
outsl
orb
std
imul
mov
or
inc
sub
or
jo
inc
je
push
push
daa
stc
ret
add
addr16
out
sbb
popf
inc
fnstcw
pushf
pminub
in
jo
push
inc
nop
cmp
jecxz
xor
je
stos
mov
mov
nop
ror
jo
sahf
js
cmpsb
arpl
xchg
sbb
xor
cmp
mov
sub
ret
das
cltd
add
jg
outsb
cmp
add
test
mov
sbb
andl
cmp
dec
pop
and
cmp
add
mov
adc
data16
mov
aas
mov
xor
shrl
pop
xchg
and
cmp
in
andb
mov
pop
or
push
jl
jns
jo
inc
cmp
adc
dec
push
shrb
or
mov
mov
aad
cmp
xchg
jbe
pop
cwtl
pushl
icebp
add
and
jmp
fcomps
imul
or
imul
jp
int
cmp
insl
pop
add
inc
mov
push
push
fldenv
mov
into
xor
arpl
jl
rcll
sbb
adc
mov
mov
add
daa
pop
dec
shlb
stos
push
mov
mov
divb
aam
dec
xchg
lahf
shll
jmp
adcb
xor
xor
mov
je
xor
or
movsb
mov
jnp
dec
inc
mov
mov
fs
push
shl
jns
jbe
mov
jnp
xadd
mov
icebp
push
or
add
stc
or
add
mov
adcb
inc
cwtd
loop
push
pushf
adc
inc
push
movsb
imul
push
sbb
mov
add
ficoml
mov
stos
rorl
cmp
aam
cmp
dec
xor
test
push
loop
cltd
mov
jl
jge
ja
int
test
mov
pushf
cmp
in
inc
xchg
sbbl
nop
inc
dec
jns
ds
add
movsb
sbb
nop
mov
rorl
popf
or
mov
mov
cmp
lret
mov
inc
jns
jmp
ret
pop
out
pop
sbb
xchg
pop
inc
nop
jb
mov
dec
shlb
mov
add
jge
je
stc
jbe
dec
adc
sub
fidivrs
jbe
inc
mov
xor
sub
loope
pop
cmp
ss
mov
pushf
ret
inc
pop
pusha
loopne
insl
aam
and
cmp
push
jmp
xor
and
cmp
cmp
jge
cmp
mov
inc
aaa
sbb
lret
sub
repz
lcall
pop
xchg
inc
rcl
push
lahf
jmp
mov
xchg
pop
shlb
adc
jmp
or
fs
repnz
cmp
rcrb
ror
jbe
ss
and
std
inc
popa
adc
or
push
pop
cmpb
mov
imul
inc
mov
adc
repnz
adcb
gs
xor
inc
push
mov
jge
or
xchg
popa
mov
push
mov
pop
mov
sbb
or
cmp
and
jb
mov
shr
test
fildl
lods
mov
pop
cmpsb
cs
cmp
inc
ret
movsl
sbb
data16
movsb
mov
sbb
loopne
out
cltd
insl
mov
or
adc
movsl
jg
insl
stc
xorl
adc
aaa
test
mov
addl
sub
jp
cmp
sub
cs
loope
jmp
lcall
xor
loope
xchg
xor
sarl
add
subl
sbb
jle
test
ja
mov
lcall
jns
fs
adc
scas
or
ds
movsb
pop
or
lret
pop
add
lret
mov
pop
mov
mov
pushf
inc
push
jb
mov
fs
decl
nop
ds
cmp
inc
scas
cmpl
add
jnp
and
inc
dec
sub
imul
adc
xchg
rolb
jns
inc
icebp
and
xor
bound
cli
or
pop
cltd
dec
popf
push
loop
cmpsl
pop
insl
mov
mov
cs
test
jbe
outsb
pop
addl
fs
push
mov
test
push
mov
mov
sub
mov
cmp
int3
jge
sub
dec
xlat
stos
pop
jnp
stc
insb
push
pushf
xor
adc
cltd
add
mov
and
mov
xchg
xchg
mov
cld
adc
cli
divl
xchg
cmp
mov
push
and
xchg
sub
and
repnz
shll
push
jae
cmp
lods
xor
loope
mov
add
data16
jl
inc
stos
adc
insl
sti
push
lahf
pop
lods
cltd
mov
xchg
sub
jle
inc
dec
adc
pusha
dec
je
movsb
cmp
inc
lods
and
in
nop
inc
xorb
andl
jecxz
pushf
push
and
out
mov
fisubs
loop
cmpsb
inc
and
lahf
xor
fsubrs
aas
mov
daa
xchg
mov
int
xor
bound
cmc
into
int
xor
add
bound
or
sbb
dec
xor
int
mov
or
lds
leave
mov
iret
test
jge
pop
ja
iret
push
mov
mov
lods
inc
jl
ja
ret
sub
mov
inc
push
sub
bound
mov
negb
xor
pop
lods
cmp
jmp
sub
js
pop
shrl
sub
stos
sbb
pushf
cld
mov
in
cmp
stc
das
rolb
dec
cmpsb
mov
mov
add
insl
cmpb
sbb
mov
mov
pop
inc
mov
jmp
lea
aad
xor
push
push
loopne
movsb
push
mov
sarb
and
push
push
cli
shrl
leave
clc
cmp
jns
aas
jno
insl
rcll
mov
out
mov
adc
loop
ss
ret
outsl
in
sub
enter
pushf
lcall
mov
or
pop
mov
jo
jl
jns
inc
add
es
push
cmpsb
mov
ds
push
movsb
xor
sub
lret
shll
ret
adc
mov
jns
or
pop
imul
push
sub
fsubs
shll
shlb
in
setae
mov
pop
dec
lods
cvttps2pi
xchg
cltd
inc
cmpsb
orb
inc
int
lds
neg
add
inc
pushf
or
jb
push
mov
shrl
aaa
inc
nop
jmp
or
mov
insb
pop
mov
add
mov
jl
fwait
das
dec
call
pop
loope
mov
sub
enter
addb
orl
jg
ds
pop
xor
push
jbe
ljmp
push
pop
push
fcoms
cltd
mov
mov
push
popf
xor
sub
xchg
cmp
ds
xchg
jb
pop
mov
inc
aam
psubsb
movsb
es
sbb
inc
outsb
jge
jae
and
or
fstpl
cmp
xor
pop
inc
in
sbb
xchg
mov
jp
adc
jecxz
push
mov
adc
stos
inc
jl
loop
hlt
test
sub
sbb
push
sbb
and
in
cmp
or
pushf
inc
lret
adc
lods
pop
cmp
loopne
addr16
xchg
mov
adc
mov
sbb
imul
popa
or
cmp
add
mov
sub
sahf
sbb
shl
and
xor
data16
dec
xchg
mov
ret
int
or
xchg
mov
fistpl
es
mov
jge
push
xchg
test
fwait
inc
add
cmp
jb
jne
push
sbb
fimull
cwtl
icebp
dec
push
or
mov
and
inc
mov
fwait
aam
fisttpl
mov
dec
fdivl
cmp
xchg
sub
sbb
jns
mov
arpl
and
or
adc
adc
jmp
test
rcrl
imulb
pop
jmp
mov
cmp
pop
mov
dec
dec
push
mov
sbb
sahf
mov
pop
mov
cs
mov
out
pop
or
sbb
fisubrs
and
cmp
jle
jle
jmp
leave
test
leave
aaa
mov
sub
aad
mov
fstps
sbb
push
test
shlb
and
movsl
lds
stos
jl
sub
shll
sbb
xor
les
inc
push
xor
jle
jmp
gs
sbb
xchg
jb
push
dec
or
adc
pushf
or
ds
into
lret
pop
mov
pop
test
jp
sub
test
test
roll
push
lcall
mov
jb
cmp
and
dec
js
and
jnp
inc
ss
jmp
xor
or
cmpsl
sub
pop
ficoml
add
test
cmp
sbb
decl
outsb
xor
sbb
add
jmp
lock
or
jno
shlb
rcll
popf
inc
and
shll
mov
iret
mov
sbb
leave
and
ret
fisttps
iret
inc
sub
and
cli
or
hlt
inc
sbb
sbb
cltd
in
ret
jg
mov
ds
mov
loopne
xchg
rcrl
mov
jge
ret
sub
jecxz
jns
or
add
inc
push
cmp
stos
dec
fs
or
into
scas
inc
sub
jle
xor
jnp
xchg
mov
jns
mov
fldenv
nop
mov
imul
mov
cld
movsl
test
imul
mov
inc
mov
stc
stos
andl
xchg
mov
and
insl
into
or
cmp
hlt
nop
push
sub
cmpsb
mov
stc
in
sub
cmp
movsl
sbb
enter
mull
imul
popa
xor
mov
push
and
add
pusha
or
pop
xchg
ret
jbe
pushf
insb
jno
sbb
sti
aam
lds
test
xchg
jae
addl
jbe
mov
fldl
mov
mov
mov
sbb
sbb
movsb
pop
jb
int3
dec
sub
jns
adc
jg
dec
rcrl
mov
and
push
inc
movsb
or
xorb
sbb
xchg
inc
mov
repz
aaa
js
xchg
fisubl
pop
inc
push
dec
pop
inc
or
or
sbb
loopne
dec
in
std
pop
loope
loope
pop
inc
mov
cmp
pop
jge
ret
pop
sbb
iret
pusha
sub
cmp
stc
stos
sbb
sub
lock
pop
ds
shlb
xchg
adc
lea
jg
xchg
jl
aad
mov
scas
xor
std
std
cmp
inc
ja
cmpsb
sub
push
pop
xor
sbb
dec
lcall
jp
mov
sbb
jecxz
or
idivb
and
jp
std
inc
loop
cmp
pushf
dec
push
inc
pop
adc
enter
xor
ficompl
adc
sbb
push
pop
or
push
add
pop
mov
jp
ss
or
mov
sbb
mov
out
icebp
dec
call
xchg
mov
test
les
in
out
add
jmp
mov
cli
test
mov
pop
lret
stos
outsb
pop
push
mov
imulb
jbe
fsubrl
fsubrs
push
mov
cmp
fdivrl
mov
inc
dec
loop
jbe
jge
add
add
sub
xchg
sbb
jnp
sbb
popf
cltd
sub
popa
pop
ret
mov
mov
push
sub
nop
xor
shll
daa
bound
insb
sbbl
or
adc
add
stc
ljmp
sub
dec
xchg
mov
push
mov
ss
sbb
xor
pop
mov
or
addr16
das
addb
int
add
inc
xchg
dec
push
insl
icebp
repz
and
adcl
clc
out
das
les
pop
repnz
mov
jle
jge
mov
cmp
sbb
xchg
push
ljmp
jmp
fldcw
stc
mov
add
push
decl
sahf
sbb
xor
pop
pop
fimuls
xor
add
mov
notb
cmp
fwait
lahf
mov
cli
aam
data16
aas
mov
dec
repz
mov
into
dec
ds
imul
push
rorl
pushf
dec
mov
cmp
ret
mov
dec
bnd
es
les
jle
bound
jnp
and
xor
inc
pusha
les
mov
mov
jns
mov
fnstsw
pop
push
daa
pop
imul
aaa
sbb
dec
mov
mov
test
mov
inc
cmp
sub
sub
xor
mov
das
push
pop
dec
rcrb
add
mov
adcb
out
push
jg
push
or
or
jge
jmp
xchg
dec
inc
loopne
push
add
lds
cmp
xchg
in
dec
lcall
test
out
add
popa
mov
scas
and
jmp
cld
sbb
sbb
mov
push
or
or
mov
pop
dec
pop
inc
insl
and
cld
fisttpll
ss
pop
dec
mov
ljmp
cmp
addr16
popl
mov
pop
sub
push
dec
dec
mov
sbb
sbb
pushf
ret
mov
lret
fucomip
mov
adcb
stc
imul
jb
adc
mov
bound
repnz
movsb
push
add
orl
bound
sub
sahf
mov
test
popf
mov
aad
push
insb
sbb
std
cmp
jo
jne
in
test
push
cs
mov
xchg
add
into
jnp
es
movsl
jb
lods
call
jmp
insl
push
jbe
loope
insb
insb
or
hlt
sbb
inc
adc
in
fbld
jmp
mov
pop
cmp
scas
jge
sub
fisubrs
sub
nop
add
es
or
push
adc
add
mov
fldcw
jp
cmp
adc
sbb
ss
inc
xor
fldt
dec
dec
roll
or
pop
cld
push
jns
add
cmp
sub
movsb
inc
and
insl
pop
jp
arpl
pop
dec
fsubl
dec
movsl
and
arpl
movsb
int3
idivb
pop
jae
pushf
or
dec
inc
test
add
adc
or
ret
pushaw
mov
test
inc
fdivr
pusha
aad
je
jnp
inc
adc
mov
fiadds
mov
aaa
mov
dec
addr16
jl
adc
sub
jns
lahf
push
add
arpl
xlat
iret
sub
dec
jo
inc
subb
cmp
ret
cmp
sub
xor
adc
sbb
outsb
xor
pop
inc
jle
test
sbb
push
mov
adc
add
or
insl
add
mov
popf
mov
scas
pop
sub
sahf
or
push
mov
pop
jecxz
inc
out
decb
rolb
push
test
xchg
push
ret
push
nop
insl
pop
loop
xor
dec
cld
dec
inc
cmpl
inc
je
jl
jecxz
repz
movsb
xchg
sbb
push
repnz
in
cmp
addl
mov
jno
xor
sub
outsb
arpl
sub
sub
push
jp
fcompl
add
mov
lock
repnz
xchg
xchg
push
sub
cwtl
mov
adc
sub
shrb
mov
ret
inc
xor
jns
nop
or
pop
inc
mov
sub
in
dec
inc
or
fdivrs
out
loope
sub
and
cld
lcall
inc
fstpl
inc
push
lret
sarb
stos
arpl
das
movsb
popa
lea
and
cli
popf
lds
or
popf
cmp
cld
popf
daa
inc
and
push
dec
mov
rcr
lods
stc
pop
addl
jae
outsb
insb
mov
jl
jbe
pushf
xor
loop
loop
daa
or
sahf
jge
sahf
aam
push
push
repz
or
scas
mov
push
and
dec
xchg
mov
in
jmp
or
clc
add
ss
loop
or
aas
add
les
and
outsb
cmp
or
or
cltd
sub
movsl
test
in
ljmp
out
push
stos
cld
xor
sub
stc
add
sbb
jmp
dec
nop
outsb
outsb
repnz
xor
pop
sub
ds
add
dec
lods
push
add
movsb
ljmp
sbb
dec
and
and
mov
and
das
and
in
add
dec
mov
dec
cltd
dec
fs
mov
mov
push
sbb
push
mov
lahf
jmp
xor
adc
out
repz
xchg
int
insl
ja
sbb
jno
insl
cld
repnz
loopne
push
dec
popa
sbb
mov
sbb
sub
mov
rol
popf
call
pushf
inc
and
stc
jns
push
dec
pop
mov
xor
insl
jmp
mov
insb
std
jb
sub
out
adc
int3
jbe
js
mov
sub
repnz
push
pop
push
inc
aas
pop
stos
mov
mov
inc
imul
dec
sbb
mov
ja
jle
loop
loopne
jo
int
popf
pop
mov
pop
mov
sti
lods
pop
cmp
and
pop
mov
xor
in
jle
sbb
xchg
bound
repnz
sub
pop
or
add
test
inc
or
ljmp
push
adc
lods
scas
push
sahf
dec
sub
dec
pop
mov
xor
add
mov
in
sbb
lods
mov
cmpsl
pop
pop
test
aaa
inc
rcrb
and
mov
adc
fstps
std
mov
fsubrl
fcmovnu
icebp
outsb
es
mov
cltd
pop
fdivrl
cmp
aad
jae
xor
push
mov
mov
mov
pop
rolb
add
cli
sub
adc
loop
fidivs
mov
insl
jno
add
mov
sbb
cmp
insl
fisttpl
scas
outsl
pop
nop
jnp
push
xor
fnstsw
sbb
add
inc
in
dec
pop
aaa
pop
jnp
adc
jle
mov
inc
imul
and
jo
sbb
lcall
and
mov
stos
xchg
dec
orl
xor
decb
xor
mov
mov
clc
jl
and
lahf
lods
stos
xchg
scas
sub
push
xchg
cwtl
subl
mov
fstpl
es
mov
leave
sbb
dec
fs
inc
xlat
push
mov
adc
idivb
or
dec
mov
and
push
jl
mov
xor
add
adc
fistl
pop
pop
sbb
and
les
inc
or
mov
enter
pop
aaa
pushl
pop
lahf
push
pop
pusha
adc
and
pop
lahf
pop
xchg
fsubr
jl
sbb
jbe
mov
cmp
or
sub
sar
shll
lret
pushf
inc
xor
sub
enter
stos
mov
addl
int3
or
pushf
adc
inc
stos
cmpsb
xor
test
xor
xor
js
jmp
inc
adc
xlat
gs
repz
sbb
imul
jge
fildll
cmp
js
adc
cld
adc
sbb
aas
cmp
jae
dec
scas
or
ror
xchg
or
lock
mov
test
out
adc
add
or
add
subl
pop
push
xchg
jbe
add
scas
bound
mov
cmp
movsb
ficomps
out
push
adc
dec
inc
addb
into
stc
negl
pop
and
jns
push
mov
out
inc
daa
test
ret
and
dec
mov
push
ss
arpl
pop
shlb
fisubrs
xor
data16
sarl
sbb
movsb
sbb
dec
imul
cmp
outsb
inc
add
sbb
test
aas
mov
xchg
rcrl
pop
incl
in
xchg
stos
lods
cmp
lcall
xor
push
cmp
add
andb
or
inc
sbb
jae
incl
fcomp
test
adc
sbb
mov
cld
mov
push
fsubrl
mov
in
aaa
jecxz
sbb
subb
or
fs
mov
xor
push
inc
das
sahf
jns
movsb
lcall
xchg
ret
cli
jnp
aas
xchg
fisttpl
mov
jnp
fsubl
repnz
and
repnz
jge
ret
frstor
sub
call
and
incl
ss
adc
inc
xchg
das
push
ret
je
cmpl
xchg
imul
lods
xchg
cmp
roll
pop
scas
fisttpl
pop
mov
and
fidivrl
ret
leave
insl
orb
fnstenv
lcall
push
pop
jns
cmp
mov
insl
mov
cmpsb
cli
cld
push
sub
and
inc
outsb
mov
in
jne
test
xor
and
sbb
sarl
dec
fisubrl
sti
scas
or
mov
roll
and
mov
daa
mov
jo
das
lret
movsb
dec
add
or
fwait
shlb
or
jns
push
sbb
inc
fsubl
sbb
pop
gs
cmp
shrb
xchg
decb
adc
push
pop
out
popf
movsb
jl
sbb
push
or
sub
mov
jns
lods
pop
pushf
loope
sub
pop
shll
repnz
cmp
pop
movsb
sbb
loopne
cmpsb
mov
dec
adc
push
mov
jno
pop
push
jl
test
xorl
in
and
insl
mov
and
jns
outsb
sti
mov
pushf
mov
fisttpll
inc
and
scas
xchg
pop
cmp
sahf
lret
inc
adc
sub
rcl
jbe
jae
inc
mov
lock
sub
cltd
jmp
fcoml
sbb
mov
outsb
and
andb
add
push
cli
mov
inc
int
repnz
sbb
xchg
and
rcrl
xor
cmp
stos
popa
test
lret
mov
test
shl
xor
mov
loopne
add
mov
inc
lcall
in
or
add
mov
mov
shrl
push
and
lret
inc
xchg
cmp
inc
add
or
jp
xchg
or
mov
jbe
aaa
sbb
adc
mov
fcomps
add
add
pop
dec
sub
rcrl
imul
lds
jnp
push
push
in
push
or
roll
nop
test
inc
jge
mov
aaa
movsl
mov
mov
aas
mov
icebp
sub
push
xor
loope
stc
rol
mov
inc
mov
pop
movsb
cld
in
sbb
fisttpl
fwait
test
jb
jg
fsubl
jnp
filds
clc
scas
lret
cs
ret
mov
roll
push
sbb
and
pop
xor
cmp
mov
jbe
repnz
mov
pop
enter
or
mov
ds
pushf
sbb
jmp
enter
ret
data16
fmul
jmp
jbe
sub
inc
es
fnstcw
jb
outsl
shll
lret
hlt
sti
jle
sbb
scas
cmp
ds
out
jbe
mov
mov
lods
repz
push
push
pusha
push
das
repnz
ss
insl
push
or
xchg
cltd
jp
fdivrs
lea
fwait
or
lods
das
push
pop
adc
sbb
jmp
addl
mov
andb
xchg
sub
adc
sbb
aas
jae
pop
insl
sbb
insl
lea
in
mov
pop
sub
ss
lods
dec
pop
or
xchg
lret
std
sahf
inc
in
cmc
popf
loope
xchg
pushf
cmp
shrl
pushf
jns
mov
mov
xlat
xchg
ljmp
lock
inc
cltd
popa
arpl
pusha
fcomip
das
and
lahf
xor
xchg
and
stc
inc
loop
mov
mov
push
add
test
push
pop
addb
sahf
xchg
inc
andps
das
dec
add
jbe
pop
movsb
and
fistpl
jmp
rcrl
xchg
cmp
or
cmpsl
jle
xchg
sub
mov
mov
daa
cmpsl
dec
popf
sbb
or
jbe
sub
cmp
cltd
aaa
pop
mov
jno
push
pushf
roll
push
jp
mulb
adc
pop
xchg
mov
mov
bound
int3
sbb
pop
push
jbe
rcrb
test
adc
ss
xorb
sbb
sbb
stc
push
fidivl
mov
loop
ret
fcmovu
pop
sahf
icebp
or
call
jmp
es
rorl
cmpsb
sbbl
or
push
mov
mov
jo
inc
js
xchg
push
xchg
or
scas
xchg
je
scas
rorl
mov
xchg
jle
xchg
jb
ss
adcl
push
sbb
sub
test
ds
push
inc
mov
in
movsb
fisubrl
xchg
and
aad
cmpl
ja
jle
xlat
das
jb
dec
sub
orb
pop
mov
pop
iret
add
ret
mov
in
mov
dec
lea
ret
mov
aam
mov
popa
rcrl
pop
mov
sbb
push
mov
mov
fistps
popl
push
dec
push
xchg
mov
cltd
push
jnp
int
movlps
mov
outsl
repnz
daa
jl
loop
cmp
aad
mov
xor
mov
das
mov
aas
je
nop
mov
pop
push
pop
push
add
xor
mov
inc
addl
movsb
jns
lret
negl
mov
jecxz
jle
cmp
cmp
in
pop
and
je
pop
fsubr
test
push
mov
je
sub
subb
jmp
sahf
clc
pushf
jb
data16
add
sahf
fwait
lea
jp
adc
jns
cs
lret
repnz
push
xchg
cmpsb
adc
fimull
cmp
push
xor
cltd
je
das
ret
mov
dec
mov
inc
test
xchg
pop
cmp
jge
jle
jns
mov
jae
xchg
inc
push
mov
shll
insl
fisttpll
pushf
sbb
jb
int3
and
inc
in
aas
dec
cmp
pop
sbb
lcall
sbb
std
xor
vphaddwq
inc
mov
xchg
mov
jnp
xchg
std
fcmovu
fnstenv
dec
repz
jno
js
pop
iret
fimull
stos
xchg
sbb
and
nop
es
adcb
add
stos
fidivrs
out
add
test
call
jns
lock
adc
push
mov
adcl
movsb
inc
outsl
loope
push
pushf
mov
or
pop
jge
jno
jecxz
mov
dec
aad
int3
adc
cmp
insl
int
fnstsw
gs
xorb
and
aaa
aaa
jg
cltd
sbb
test
jmp
sbbb
lret
mov
sub
stc
mov
pop
popa
int
inc
das
sub
adc
cmpsl
and
faddp
in
lods
sbb
adc
push
xor
and
add
mov
fldcw
dec
loop
jbe
push
movsl
or
lods
inc
push
popa
movsb
cmp
arpl
insb
mov
shr
add
inc
stc
fisubs
imul
jne
outsl
out
movsl
jo
rcrl
shlb
mov
aas
outsl
mov
xchg
inc
pushf
je,pn
pop
jns
push
in
push
std
fsubr
mov
add
add
lret
popf
fistpl
mov
mov
ror
adc
jb
sahf
pop
dec
push
stos
jmp
sub
mov
inc
sbbb
js,pt
pushf
jnp
nop
sbb
stos
cmp
mov
mov
pop
xchg
sarb
jns
cld
adcl
jp
in
sub
arpl
and
jge
cmpl
mov
icebp
cmpsb
iret
dec
cmp
aam
sub
xor
add
es
insb
cmpsb
cmc
enter
fisttpll
das
dec
lods
push
push
cltd
cmp
stos
pop
dec
lret
or
bound
je
inc
inc
imul
lret
popa
push
iret
pushf
hlt
sbb
test
pop
por
std
repnz
pop
mov
inc
jl
add
lahf
xor
xchg
add
aam
adc
xchg
mov
xchg
push
inc
mov
js
fisubrs
dec
fdivrp
stc
mov
data16
jbe
jp
out
ja
push
popf
adc
pusha
addl
inc
mov
in
dec
dec
or
sbb
sbbl
jbe
popf
imul
jb
mov
pop
and
cmp
ss
xor
ret
in
dec
and
movsb
sub
test
mov
int3
out
addr16
mov
cmp
scas
pop
ret
sbb
bswap
jge
aas
pop
dec
and
pop
sub
data16
lahf
test
jmp
and
jbe
sbb
clc
movsb
fld
jae
addr16
push
lock
inc
lock
mov
lea
jmp
insb
sarb
add
add
xchg
fisubl
cmpsb
inc
jb
repz
es
adc
iret
xchg
mov
inc
cmp
fnstcw
ss
sub
mov
ret
sti
inc
push
imul
mov
aas
mov
test
sub
mov
sub
sub
add
sub
xorl
repz
jmp
add
rcr
or
lods
decl
jnp
cmp
jb
adc
mov
sarl
ds
icebp
je
lcall
inc
add
pop
mov
nop
xchg
mov
add
add
add
stos
fisubs
or
sbb
cmc
xor
js
imul
adc
mov
insb
addr16
imul
mov
jle
pushf
and
lahf
and
sub
out
outsl
pop
push
push
push
jge
or
cmp
lahf
xchg
mov
cltd
cmpsb
mov
inc
test
inc
jae
mov
arpl
and
or
mov
stos
test
bound
sarl
imul
out
ljmp
cmp
and
sub
push
rorl
gs
sub
adc
cwtl
cmp
outsl
shl
out
pop
bound
push
jns
mov
popf
scas
xor
xor
les
add
shlb
inc
fldl
push
lret
cmp
inc
sub
scas
push
dec
jle,pn
dec
add
testb
sub
iret
test
loope
push
xlat
mov
adc
inc
sbb
insb
pop
mov
adc
add
push
rorl
or
pop
jge
adcl
pop
cli
adc
jo
fstpl
cmp
ret
aam
adcl
adc
pop
jbe
mov
inc
bound
repnz
mov
dec
js
jb
mov
inc
loop
mov
pusha
hlt
cld
adc
mov
movsb
inc
and
ficomps
xor
test
or
push
sahf
push
loop
xchg
movsl
fstpl
repz
push
mov
mov
mov
lock
pop
xchg
pushf
cld
imull
dec
daa
mov
xchg
mov
xchg
into
leave
and
cmpsb
xchg
push
mov
xor
cwtl
jp
sub
jnp
cmp
jbe
cmp
incl
mov
push
sbb
mov
or
inc
inc
rcl
popa
aas
lahf
jo
les
ljmp
repnz
nop
sbb
les
ljmp
rolb
jecxz
pop
negl
jp
cmp
test
out
sub
pushf
std
jae
repnz
push
int3
mov
mov
xchg
getsec
mov
push
mov
push
inc
jns
lret
cmpsb
dec
jbe
fistpll
mov
inc
sub
jbe
ret
shlb
jmp
push
mov
xor
inc
sub
sbb
fidivs
inc
xor
lahf
jne
sub
cmp
jbe
movsl
add
xor
and
int
movsb
rol
jae
jbe
lods
jb
pop
push
adc
orb
jp
dec
loop
and
xchg
popf
iret
mov
sbb
popf
xorb
jecxz
or
movsb
adc
jl
xchg
in
int3
pusha
and
data16
negl
cmp
xor
cmp
push
mov
cmp
xchg
dec
jnp
jns
out
seto
dec
movsb
inc
inc
mov
popa
jg
push
or
rolb
aas
jne
cwtl
lods
mov
ret
int
pushf
mov
lods
loopne
fs
xchg
mov
das
test
lahf
fsub
mov
or
dec
sbb
dec
fwait
add
std
jnp
xchg
or
mov
cwtl
push
inc
pop
cmp
xor
scas
orb
pushf
out
stos
xchg
add
loop
sbb
push
jo
add
test
pop
push
seto
add
cmp
das
xor
ljmp
sbb
aad
scas
inc
mov
adc
enter
or
insb
pop
jl
mov
cmp
xor
sbb
xlat
xchg
popf
fscale
xorl
gs
daa
sub
inc
add
and
fists
push
test
add
test
mov
dec
inc
sbb
inc
sub
sub
jb
mov
bnd
add
cmp
je
or
adc
shlb
cwtl
int3
filds
sbbb
inc
adc
or
lods
flds
and
call
loope
or
imul
iret
test
push
lahf
mov
loopne
mov
andb
gs
mov
jbe
pop
mov
mov
popa
in
cmp
mov
lahf
mov
mov
rorb
xchg
ret
push
mov
orl
cmp
mov
fimull
mov
and
lds
pop
repnz
xlat
xchg
rcr
repz
push
xor
mov
sarb
mov
push
xchg
push
popf
shrl
aad
hlt
pop
arpl
or
fsubrp
rol
loopne
adc
sbb
insl
and
inc
imul
gs
pop
iret
push
cmp
xchg
pop
push
and
xor
jle
mov
adc
jae
scas
mov
lcall
mov
or
pusha
test
test
shrb
and
lahf
mov
lcall
and
and
out
jp
pop
mov
adc
rol
push
jmp
subl
sahf
mov
mov
call
inc
in
pop
adc
inc
cltd
and
dec
jp
and
fbld
mov
jp
adc
les
jo
push
mov
dec
mov
negb
adc
sub
aam
adc
bound
jge
inc
cmp
add
push
push
dec
in
mov
ret
data16
mov
and
inc
lods
ss
mov
sbb
pop
fwait
je
data16
cltd
mov
jg
or
push
mov
sub
std
push
pop
and
fdivrs
bound
test
fsubrp
loop
adc
popf
mov
imul
mov
inc
loop
insl
push
jge
mov
loopne
lahf
stc
jle
lahf
jo
sub
and
inc
cmp
mov
sub
pop
inc
jnp
fldt
ja
mov
subb
insl
leave
shl
mov
adc
jnp
adc
inc
push
ds
sahf
ds
je
xor
pushf
stos
imul
dec
daa
insb
add
iret
mov
push
js
mov
sub
jbe
sub
cmp
ror
fcoml
test
ret
andl
mov
out
je
mov
lret
js
cli
sub
imul
add
cmp
jnp
xor
pop
ss
push
sarb
in
outsb
fisubl
sbb
pushf
sbb
shl
xchg
aam
nop
sub
in
fmul
outsb
and
test
stos
and
mov
mov
mov
lahf
ret
and
bnd
push
jnp
mov
ds
in
pushf
inc
cwtl
std
mov
arpl
enter
cmpsb
mov
add
pop
mov
jnp
sub
push
xchg
inc
adc
ljmp
xchg
inc
movsb
or
cmp
mov
iret
jp
enter
jl
roll
push
sbb
lcall
pop
push
stos
push
sub
push
sbb
dec
push
mov
shlb
xor
add
mov
adc
es
bound
jbe
inc
aaa
cltd
xor
scas
movsl
mov
xor
es
orl
adcb
inc
jae
cltd
and
fdivr
sbb
jmp
adc
dec
out
insl
sub
andb
inc
cmpl
data16
lds
lock
ret
inc
movsl
pop
es
or
lods
shlb
or
jbe
inc
add
and
xchg
cmpsb
popa
jae
int
dec
jnp
ret
adc
movsb
pop
jns
mov
pop
mov
dec
fsubrl
imul
test
dec
inc
mov
movsb
popl
fiadds
inc
xor
mov
push
test
ret
jp
mov
jbe
and
pushf
xor
enter
pop
jmpw
and
dec
stos
inc
inc
sbb
sub
pop
cmc
loop
pop
xor
inc
and
cmpb
adc
pop
push
mov
es
sbb
mov
jb
jns
ret
adc
daa
mov
mov
icebp
cs
in
mov
sbb
mov
out
sarl
xchg
repz
jbe
xor
dec
inc
and
or
ret
pop
outsb
adcb
sub
int3
xor
out
jnp
insl
ret
xchg
mov
bound
xor
test
out
adc
shll
inc
xchg
cmp
inc
pop
insb
jp
push
push
sbb
das
rorl
and
daa
movsl
mov
sub
or
dec
xor
shll
mov
lret
rcl
inc
stos
xlat
popa
movsb
and
int3
repz
sbb
inc
aas
and
cld
rcr
jecxz
pop
mov
push
mov
scas
push
jecxz
inc
inc
push
rorl
dec
sbb
outsl
mov
cmp
jmp
jbe
shlb
mov
fiaddl
aaa
xchg
pushf
mov
addb
mov
jg
mov
mov
ret
mov
inc
ds
inc
cwtl
and
sbb
lods
imul
sub
bound
mov
inc
cmc
lds
push
repz
int
popf
or
pusha
pushf
stos
jl
leave
jae
jmp
das
mov
cmp
add
pop
into
les
and
inc
stos
shlb
mov
push
leave
push
or
jo
mov
cmp
push
xor
cltd
sahf
aam
shrb
xor
scas
cmp
movsl
mov
sbb
cmpsb
mov
lds
shrb
dec
jne
icebp
insb
sub
add
aam
pop
or
rcr
cs
jecxz
xchg
into
cmpsl
sub
sbb
mov
jmp
pusha
push
loop
mov
test
divb
mov
cmp
out
adc
pop
fwait
cmp
xor
repnz
push
sti
or
mov
addl
sbb
adc
aad
outsb
pushf
cli
mov
ja
aaa
test
push
in
sub
dec
add
xlat
xchg
mov
je
mov
lahf
ror
mov
push
in
push
inc
jl
in
or
mov
sub
sbb
jns
bound
ficoml
push
addr16
mov
xor
and
xor
mov
xchg
or
lahf
fdivrp
adc
xchg
mov
mov
inc
shl
daa
fldl
pop
notl
push
and
into
push
data16
add
mov
mov
int3
jp
daa
fwait
mov
inc
cltd
pop
rcll
adc
mov
jmp
xchg
test
jmp
sahf
mov
jo
cmp
inc
mov
pusha
andb
sub
xchg
imul
cld
lods
je
xchg
push
out
mov
xlat
mov
add
sahf
push
and
dec
fwait
cs
add
xchg
mov
mov
dec
inc
in
stos
imul
cli
outsl
mov
push
pop
jecxz
mov
nop
sub
orb
lods
mov
test
and
mov
and
sbb
add
jle
outsl
loop
push
jle
pop
les
add
cld
xor
jmp
or
inc
jnp
inc
push
mov
sbb
jl
jae
loopne
jb
inc
bound
adc
jp
test
imulb
xor
add
add
sbb
jnp
sbb
pusha
pop
mov
xorb
xor
cmpsl
inc
mov
jo
jge
andb
pop
in
sub
jl
mov
xchg
push
dec
adc
test
in
fisttpl
bound
dec
test
iret
dec
fs
sub
pop
rcrl
xor
mov
gs
aam
mov
mov
test
rcrl
xorl
pop
psrlw
outsb
test
jle
rcrl
or
sbb
mov
jle
mov
inc
sahf
xor
mov
out
aam
bound
inc
ljmp
fistpll
out
lods
loop
lret
jl
sub
sbb
outsl
sbb
or
mov
nop
or
push
fwait
pusha
leave
aas
push
hlt
and
pop
and
inc
cli
test
sbb
pushf
jge
add
xor
movsb
jp
or
roll
and
inc
mov
fldenv
and
pushf
push
xor
xor
call
sbb
testb
and
sbb
pop
and
xchg
insl
mov
mov
dec
pop
mov
out
mov
jmp
sub
stos
sahf
stos
mov
pushf
and
test
pop
inc
jo
pop
call
xor
pushf
loopne
jbe
xchg
bound
jnp
clc
xor
hlt
mov
mov
sub
mov
or
sbb
stos
add
insb
push
adc
xchg
jnp
daa
sub
outsb
and
fs
test
cltd
and
add
cs
lods
mov
fwait
or
push
inc
mov
pop
or
insl
or
and
cmp
cmp
ret
xor
pop
sub
roll
fadd
xor
es
inc
inc
mov
and
movsb
imul
fldcw
pop
pushf
fisttpl
loope
lock
loop
aas
jns,pt
scas
loopne
mov
push
movsb
stc
test
cs
push
ljmp
and
mov
push
and
mov
std
jle
xchg
jbe
mov
and
cmp
movsb
sbb
adc
insl
call
ret
mov
lret
mov
mov
roll
jp
enter
inc
arpl
adc
pop
push
pop
jns
jno
adc
and
adcb
pop
hlt
in
cli
mov
xchg
jae
jae
sbb
inc
lret
loopne
mov
pop
fistpll
push
cmc
pop
test
loopne
movsb
pop
mov
jl
mov
jmp
and
add
add
jnp
cli
into
push
insb
mov
and
inc
call
sbb
test
inc
mov
adc
mov
in
loope
lods
mov
sub
sub
xor
add
ror
jge
rol
or
nop
add
or
dec
lea
outsb
and
inc
ljmp
sub
jp
stc
jl
fldcw
mov
dec
aad
adcl
pop
insl
add
shll
sarb
dec
addl
jnp
push
dec
xchg
fcmovnbe
je
aad
lahf
adc
leave
inc
mov
scas
mov
cli
and
cmp
mov
leave
scas
jnp
xchg
loop
mov
outsl
gs
paddusw
cwtl
mov
std
mov
pop
int3
mov
push
add
and
ljmp
lods
mov
add
sub
enter
mov
sbb
fcompl
sub
das
into
stos
xor
fmul
jle
jae
sub
jnp
xlat
mov
adc
push
sub
lcall
ljmp
pop
jle
mov
lahf
mov
imul
addb
mov
jg
mov
and
add
fucomip
js
and
inc
lret
jg
insb
cltd
aaa
sti
loope
mov
adc
cltd
movsb
inc
cwtl
or
cmp
and
mov
and
movsl
mov
mov
and
and
pop
movsl
cmpb
and
mov
fimuls
add
jle
sahf
fstl
inc
sbb
scas
out
push
add
or
inc
xor
jbe
loopne
xchg
inc
xor
jge
jp
inc
push
add
mov
pop
and
jae
cwtl
xchg
icebp
movsl
mov
stos
jb
jae
jo
mov
cmpb
int3
jge
push
repnz
mov
sbb
ds
rcll
das
xor
lock
push
dec
fwait
stc
test
pop
shl
sub
sbb
sbb
inc
jl
pop
and
imul
lock
loope
sti
add
mov
xchg
cmpsb
add
lret
sub
mov
fs
inc
dec
xchg
push
stos
sti
pop
into
repz
call
bound
xchg
or
mov
inc
sub
cmc
mov
and
aaa
jle
adc
sti
stos
jl
pop
jbe
jmp
icebp
and
fnstsw
push
mov
jno
jnp
aaa
cltd
sbb
sbb
xchg
jmp
mov
loop
inc
dec
sahf
ss
mov
pop
xor
inc
mov
mov
fwait
std
ds
inc
pop
mov
loopne
sarl
xchg
or
movsb
shrl
sbb
cmp
push
xchg
add
loop
roll
and
sbb
jns
ss
pop
jne
push
mov
scas
ret
pop
xchg
jns
les
pop
mov
jp
inc
daa
mov
arpl
loopne
jo
in
dec
ds
ret
and
pop
cmp
push
roll
insb
lods
cmp
mov
inc
fstps
and
push
pop
sub
jbe
test
lds
jno
mov
divb
push
pop
jb
jecxz
pop
mov
fbld
cmp
icebp
cltd
lahf
int3
bound
pop
mov
shrl
inc
jge
mov
sub
adc
and
pop
fnstcw
lods
mov
ljmp
outsb
or
adc
mov
sub
mov
pop
ds
scas
push
nop
rcrl
inc
scas
mov
pop
nop
test
insl
push
mov
mov
sahf
lea
pop
and
lock
cmp
xchg
out
cmc
fistpll
or
lahf
inc
inc
push
fs
cmp
pop
dec
mov
test
sarl
stos
es
adc
and
test
lret
into
or
inc
pop
jp
data16
add
out
popf
mov
push
or
js
xchg
sbb
fs
cltd
ftst
jnp
movsl
sub
cmp
jmp
push
add
lock
lahf
lret
push
or
pop
fs
leave
cmpb
repnz
xor
cmp
xor
cmpsb
stos
fwait
cmp
sub
fnstsw
popf
scas
or
mov
sbb
push
into
pusha
jne
ds
call
int3
stos
jp
cmp
test
sarb
push
add
inc
mov
mov
jbe
cmp
lds
xchg
push
xor
loopne
mov
jmp
push
lods
pop
bound
cmp
adc
aad
xchg
dec
lret
ds
xchg
dec
jle
xor
sbb
jl
add
nop
sbb
and
push
out
filds
sti
das
faddl
mov
and
inc
mov
nop
jl
hlt
mov
mov
out
dec
inc
out
test
mov
lret
sub
sbb
mov
sbb
jl
jle
jp,pt
sbbl
dec
add
inc
popf
lds
mov
lock
jno
inc
xor
lods
test
fwait
inc
sbb
std
inc
mov
mov
jp
test
fildl
test
lea
fidivs
rcrb
int3
jp
test
ljmp
lods
push
mov
dec
sbb
outsl
inc
add
shlb
inc
or
cli
jl
movsl
add
or
inc
in
scas
movl
sbb
add
or
sbb
pop
inc
fwait
test
pop
test
sub
mov
and
sbb
sub
jmp
inc
mov
cmp
ljmp
mov
sub
sbb
adc
orl
imul
ret
mov
test
jle
inc
pop
test
iret
test
mov
mov
jl
test
out
inc
pusha
test
rol
xchg
dec
sbb
fwait
inc
jge
sbb
sub
pop
test
mov
or
inc
sbb
in
inc
sbb
test
sub
insl
test
ss
js
fbld
lahf
inc
jo
xor
aas
test
push
sbb
pop
inc
mov
fcompl
mov
mov
or
mov
jmp
fdivp
add
jge
dec
mov
test
or
call
out
pop
push
mov
inc
pop
adc
roll
test
imul
push
inc
jp
cmp
mov
fisttpll
lea
adc
push
test
or
lret
dec
enter
and
ds
test
repz
or
out
push
inc
adc
shrb
push
gs
aaa
cmpsl
imul
push
daa
mov
xor
pop
jl
fsts
push
inc
and
aaa
sbb
dec
or
mov
dec
add
xchg
sarl
push
js
nop
sbb
aaa
aad
jg
repz
cmp
pop
push
mov
mov
mov
clc
or
dec
inc
jb
cmc
sbb
add
shl
movsl
mov
push
add
push
cmp
sub
fisttps
inc
and
pushf
dec
lea
cld
inc
xlat
cmp
and
inc
xchg
jnp
ja
sahf
xor
out
fwait
bound
dec
es
jl
mov
fwait
sub
cmpsl
ds
jne
xor
mov
shlb
rclb
inc
nop
rcr
cmp
cli
out
enter
mov
adc
repz
jmp
rol
cmp
lods
jb
movsl
in
jl
idivb
fcoml
push
xorb
popf
add
imul
xchg
cld
test
mov
xchg
inc
insb
mov
idivb
push
cmp
fcmovnb
mov
xor
loope
aas
xor
cwtl
jl
push
push
popf
lock
push
pop
into
cmpsl
in
out
loop
iret
add
or
pop
inc
sbb
daa
shlb
jne
mov
dec
jmp
mov
js
std
push
mov
lret
push
mov
jae
sub
call
or
sub
mov
loopne
in
inc
cltd
and
scas
xorl
pop
lock
add
sbb
sub
add
dec
inc
pop
push
sbb
aas
ss
cmp
movsb
push
push
jle
push
jge
aad
leave
adc
mov
fwait
sbb
stc
lcall
nop
mov
sbbb
dec
mov
dec
es
xchg
cmp
loopne
inc
mov
inc
sbb
xor
mov
sbb
xchg
fidivrl
roll
xor
sub
out
sbb
inc
jl
insl
stc
xlat
frstor
enter
jo
cmp
mov
mov
mov
repnz
and
sbbl
pop
test
sub
push
push
jo
test
and
jp
inc
mov
mov
out
or
and
cmp
adc
daa
rcrb
enter
in
mov
int
sbb
ffree
mov
cmpb
push
mov
mov
cmp
jno
imul
jp
mov
mov
jbe
daa
cli
out
mov
mov
add
in
cli
inc
cwtl
and
nopl
lods
sub
cmp
imull
test
mov
data16
add
ss
insl
xor
fcomp
shlb
arpl
push
in
sarb
dec
push
lods
dec
mov
fwait
add
pop
add
xor
dec
mov
jp
inc
out
xor
mov
mov
xchg
dec
push
lds
dec
lcall
in
dec
xor
add
inc
jp
and
push
out
push
sub
scas
andb
leave
cltd
loop
movsl
imul
jo
add
pop
fistpll
xor
pop
mov
inc
dec
cwtl
pop
push
dec
stc
jb
jmp
aaa
jnp
xchg
addb
fmuls
jae
push
inc
in
sub
jmp
fldl
cmp
lods
rcrb
push
dec
xor
push
add
mov
fsubs
es
adc
test
add
lods
imul
lcall
shlb
in
add
sbb
push
xor
data16
jno
lret
nop
pop
xchg
sbb
andl
test
pop
negw
shrl
fimull
test
imul
push
push
jbe
fwait
push
push
pop
js
jne
and
popa
andb
cwtl
sub
inc
jno
inc
imul
add
clc
mov
loop
out
or
push
repz
pop
out
rclb
leave
push
int3
push
int
adc
cmc
loope
pushf
sbb
cwtl
mov
adc
cmpsl
negb
or
bound
std
out
sub
push
dec
jmp
pop
xchg
cwtl
adc
and
cmp
xchg
mov
cmpb
andb
les
adc
nop
or
cltd
es
ds
fnsave
or
fbld
jle
fidivrl
fs
inc
cltd
mov
fistpll
repnz
jge
addb
xchg
pop
mov
lret
jl
inc
cltd
aas
sahf
jge
adc
fistpl
and
xchg
mov
call
mov
adc
lret
cli
test
push
jno
sub
xchg
push
cmp
loop
cmp
int3
sub
cwtl
dec
jmp
mov
cmp
outsl
jae
sti
lods
sbb
pop
in
aaa
fs
ja
and
adc
dec
add
pop
sbb
test
inc
add
cmp
push
cmp
push
add
icebp
jecxz
and
jo
add
ja
push
test
xchg
sub
xor
sub
pop
mov
fwait
es
pop
inc
push
push
sub
pop
mov
pop
mov
lds
cmove
cmp
or
push
add
jnp
sub
data16
or
test
popa
cmp
mov
inc
dec
dec
xor
or
adc
add
cmc
clts
sub
lcall
push
sbb
push
jle
mov
mov
loopne
push
inc
inc
cmp
stos
pop
jmp
inc
xchg
aaa
stos
mov
shrl
fcmovu
or
or
dec
xlat
or
lods
mov
or
ds
incl
shlb
jns
or
fsubl
lcall
sbb
test
pop
dec
inc
pop
mov
lcall
jmp
sti
lods
rcrb
sub
fcompl
adc
fimuls
call
imul
addb
pusha
adc
repnz
xchg
sbb
sbb
popa
inc
es
pusha
pop
scas
pop
dec
inc
jnp
mov
push
or
pop
sbb
sub
cmp
lcall
cmp
sbb
mov
fidivs
xchg
decb
add
or
and
dec
les
ret
mov
jo
xchg
test
inc
jg
and
aas
lahf
sti
sbb
mov
outsl
jmp
shll
lods
sbb
scas
cmp
jnp
lods
sub
cmp
jle
inc
repnz
add
sub
inc
aas
flds
test
push
pop
clc
cmp
cwtl
repz
scas
ljmp
int
insb
fsts
imul
cmp
out
and
popf
and
je
insl
fs
test
imul
loopne
scas
mov
ror
outsb
xor
jns
cmp
or
push
nop
enter
lcall
jp
lahf
rolb
movsl
push
shlb
es
sbb
mov
push
sbb
lods
and
cmp
push
es
jp
adc
xor
mov
movsl
stc
cli
dec
mov
iret
bound
mov
loop
inc
dec
jl
pop
pop
xor
in
orl
mov
mov
mov
pop
call
inc
cmpsl
shlb
mov
dec
addb
jp
sbb
pop
inc
mov
dec
mov
popf
dec
stos
cmp
sbb
lret
xor
sbb
fwait
lcall
sbb
cwtl
into
data16
or
cltd
fnsaves
shlb
rclb
sub
jno
inc
push
mov
mov
jge
jne
les
cltd
lods
iret
sbb
test
bnd
jo
xor
js
out
lcall
mov
sub
push
mov
mov
daa
sbb
pop
stc
xor
dec
dec
dec
cmp
or
mov
xchg
scas
jno
mov
add
jmp
ds
sbb
or
imul
xor
pop
mov
mov
loop
jle
jge
add
aaa
and
mov
ds
jno
mov
mov
add
xor
or
gs
sbb
sub
jecxz
sbb
bound
xlat
xor
inc
stos
lods
je
hlt
outsb
movsl
outsl
lahf
jne
std
enter
jb
cltd
and
xor
mov
rolb
hlt
sub
es
add
outsl
popa
cwtl
push
outsb
lock
icebp
pop
int3
cmp
jp
in
inc
dec
lahf
inc
mov
xchg
cs
push
or
inc
cmp
hlt
jge
pop
aam
pop
jl
xchg
pushf
push
daa
sub
jne
sbb
pop
push
mov
or
pop
loope
lcall
inc
inc
sbb
push
push
dec
and
outsb
in
out
inc
xor
rclb
and
adc
inc
push
inc
xchg
inc
push
cmp
nop
mov
inc
and
push
cmp
loop
rol
add
int
pop
or
daa
fwait
xchg
mov
jno
dec
test
inc
add
inc
push
mov
adc
xchg
push
push
in
cmp
test
call
or
cmc
scas
jo
cmp
push
mov
fucomip
mov
cltd
nop
iret
loope
loop
shlb
lcall
cwtl
adc
or
ror
jle
shr
mov
mov
sbb
sbb
sbb
adc
es
insb
add
and
lret
mov
insb
or
ds
or
push
dec
out
xor
rcrl
mov
xchg
pop
test
mov
or
jg
xor
dec
cmp
add
jge
pop
or
ds
or
adc
incl
mov
inc
fs
mov
cmp
cmp
push
push
cli
stos
sub
xchg
lods
shl
mov
into
mov
xchg
mov
cmp
adcb
sbb
rclb
cwtl
bound
aaa
add
es
push
pushf
cmp
shrb
sbb
mov
pop
jmp
inc
inc
cmp
fimull
inc
and
jl
ffree
push
cmp
fimuls
divb
call
sar
dec
xchg
push
shl
xchg
roll
xlat
data16
add
sbb
sbb
fiaddl
call
push
loopne
mov
sbb
jbe
sbb
rclb
ficomps
pop
cmp
pop
orb
sti
mov
cmp
jge
scas
xchg
mov
lods
mov
sub
sub
add
fbld
add
add
fwait
lahf
insl
push
adc
data16
lock
fnstsw
or
out
fstps
mov
cltd
jp
fidivrl
and
aaa
mov
stc
push
sub
movsb
lcall
das
mov
in
movsl
iret
lods
lret
jge
aad
fsub
ss
ja
pop
xlat
sbb
dec
lock
cmpb
jle
les
push
xchg
fwait
dec
into
mov
push
adc
cltd
and
push
pop
mov
inc
fsub
adc
cmp
cmp
sbb
ja
aaa
xchg
mov
std
push
pop
jg
bound
pop
scas
loope
lcall
outsl
scas
andl
xchg
or
aas
fldl
xor
jnp
jg
sbb
lods
dec
push
and
cwtl
cmp
jo
adc
pop
test
aas
jge
sahf
sbb
fcompl
cmp
sbb
popa
mov
inc
mov
jmp
add
mov
push
mov
sbb
dec
hlt
mov
or
addr16
pop
jnp,pn
out
jmp
pop
ja
pop
outsl
jnp
fdivr
loope
inc
jmp
sbb
jle
sbb
pop
stos
hlt
call
or
cli
push
mov
sbb
cmp
jle
mov
aas
or
in
mov
and
dec
dec
orl
lcall
xlat
cmp
mov
add
push
int3
mov
cmp
cmp
mov
pusha
jge
fimuls
push
test
jno
mov
mov
call
or
and
shrb
mov
dec
inc
movsb
repnz
sub
push
in
push
add
stc
out
or
into
testl
iret
pop
push
outsl
test
jle
sub
and
mov
sarb
mov
mov
addb
push
jo
test
jnp
lahf
jmp
jl
cltd
aas
lods
mov
mov
mov
pushf
imul
add
ret
dec
inc
sub
jle
jno
cmp
test
sbb
inc
stos
bound
sti
je
test
pop
fwait
mov
mov
xchg
dec
rorl
add
cmp
inc
lods
xchg
cmp
call
loope
or
adc
cld
jmp
je
rcl
pop
lods
push
addr16
jge
subl
push
sbb
push
jg
sbb
cmp
enter
loop
ficompl
rolb
mov
popa
sbb
push
jnp
nop
xchg
dec
orl
add
cwtl
adc
jnp
and
cmpsb
adc
cli
in
pushf
push
in
sub
call
iret
cmp
mov
ret
or
add
sbb
adc
xchg
lods
inc
mov
and
push
cmpsl
stos
and
pop
imul
xchg
jge
push
inc
out
es
or
lods
pop
push
xchg
mov
dec
loope
and
or
push
jp
jl
dec
jmp
cltd
or
out
sbb
sub
add
or
jb
mov
sub
clc
fsts
add
ror
popa
ficoms
add
sti
cmpsb
test
cmp
dec
jmp
jge
lods
push
ds
jecxz
addl
sbb
loop
cmp
aam
movsb
mov
insl
dec
push
pop
aad
mov
jg
mov
sbb
inc
ficoml
xor
dec
test
inc
add
arpl
push
addb
add
xchg
insb
in
push
mov
inc
pop
mov
pop
dec
cmp
loopne
mov
jle
cmp
push
pop
inc
leave
mov
imul
add
dec
mov
push
es
cmp
inc
push
pop
push
xchg
push
incl
arpl
hlt
push
jl
out
dec
dec
lds
pop
insb
mov
pop
out
and
fimuls
jge
std
daa
or
sub
push
xlat
dec
inc
cmc
lods
insl
sti
add
and
mov
pop
mov
mov
inc
frstor
xor
movsb
in
xchg
mov
clc
adc
sti
shll
jbe
fisttpll
scas
mov
or
icebp
dec
pop
sbb
dec
ficoms
sub
loopne
pop
or
and
mov
popa
mov
sarb
or
cs
inc
dec
enter
push
sbb
nop
arpl
dec
insl
test
xchg
test
lret
mov
test
rolb
jbe
loopne
dec
aaa
shlb
out
xlat
mov
call
repz
lret
cmp
insb
cmp
cltd
push
push
or
bswap
outsb
aas
mov
inc
dec
mov
scas
push
lahf
inc
inc
add
dec
or
pop
mov
lock
or
cmp
js
loopne
scas
fnstsw
inc
and
adc
mov
jge
fisubrl
insb
leave
repz
mov
cmp
fnstcw
or
cs
sub
push
or
inc
stos
subb
sub
je
roll
add
mov
inc
and
push
adcb
dec
xorl
inc
pop
mov
add
mov
ret
repz
bound
stos
push
add
test
cmp
xchg
inc
xor
xchg
rcr
ret
in
push
cwtl
rolb
mov
ret
sar
cmp
xchg
jecxz
add
scas
add
xchg
inc
push
aas
mov
hlt
imul
add
je
pop
jp
and
jge
push
mov
leave
in
lds
ds
pop
mov
mov
stos
sub
and
subb
dec
enter
add
repz
mov
in
fwait
push
cli
test
push
cs
inc
adc
stc
loopne
mov
add
inc
mov
cmp
sbb
lods
push
dec
push
xor
pop
lock
jb
mov
and
fs
push
stos
data16
inc
cmp
mov
test
lods
cli
in
fadd
pop
jg
xchg
jp
dec
ror
or
jp
mov
push
add
jecxz
dec
cmp
pop
add
xlat
xor
ret
pop
jae
xor
sbb
pop
ljmp
mov
stc
clc
rolb
test
inc
daa
jp
sub
and
push
mov
sbb
dec
icebp
test
inc
mov
sub
test
outsb
in
pop
or
push
pop
ljmp
ret
cwtl
jp
mov
cmp
sub
jbe
movsb
loop
in
cmp
push
jp
mov
mov
incl
ja
sbb
push
push
cmp
je
mov
adc
mov
push
inc
jne
xlat
je
add
mov
jns
das
pop
pop
mov
cwtl
jbe
fdivl
fimull
sbb
push
and
jmp
add
dec
add
test
loop
mov
mov
clc
xor
mov
aas
adcb
mov
cwtl
xor
addl
cmp
push
fdivrl
test
mov
pop
jl
sti
or
xor
pop
inc
cmp
jmp
sub
sbb
xor
pop
inc
dec
lods
mov
imul
aas
xor
es
cmpb
mov
add
cmp
jle
adc
cmp
sbbb
scas
xor
test
pop
mov
rcr
in
jp
inc
arpl
sti
pop
add
in
mov
lcall
jp
push
pop
fs
cmp
jb
mov
pushl
jle
inc
lcall
add
insl
cmp
inc
cltd
cmp
rolb
inc
fcmovb
sub
push
stc
jnp
popf
pop
mov
sub
add
sar
mov
cltd
popf
mov
sub
and
mov
push
mov
sub
mov
mov
pop
mov
fisttps
outsb
and
mov
and
ds
insb
jl
cltd
sub
mov
mov
fistpll
jmp
fs
jp
mov
scas
pop
lods
fldcw
dec
jmp
mov
sub
lods
stos
pop
pop
pop
mov
pop
mov
addl
and
popa
sbb
and
pop
mov
scas
jp
cmp
jae
lcall
jge
mov
and
sbb
pushf
jle
inc
adc
dec
outsb
jge
inc
cltd
fldcw
out
add
jp
jl
fisttpll
jecxz
dec
adc
cli
push
flds
lcall
filds
test
push
rolb
pop
clc
adc
popa
fwait
js
push
xchg
sarl
push
and
push
or
test
cmp
inc
add
or
cmp
data16
push
mov
iret
dec
pop
xchg
fnstenv
sub
xchg
mov
loopne
mov
adc
xchg
push
sub
cwtl
xor
pop
loopne,pt
push
iret
xchg
ds
mov
lcall
je
xor
xor
mov
fwait
sti
push
and
and
mov
inc
ds
jnp
in
pop
push
dec
cmp
scas
in
mov
push
bound
dec
push
loope
stc
dec
inc
test
ficoml
ror
call
fstl
cmp
cmp
dec
stos
enter
xor
xchg
lahf
ret
push
daa
mov
lds
jb
iret
xorl
and
das
inc
ds
int
mov
ljmp
aad
or
cmp
sbb
jae
mov
fwait
dec
mov
pop
fadds
mov
add
bound
decl
adc
push
insb
jo
cltd
mov
stc
jge
mov
aas
testb
stos
adc
cmp
xchg
xor
flds
jnp
add
pop
jl
mov
rcr
mov
push
and
es
sub
cmp
add
inc
les
mov
push
lahf
dec
pop
shrb
pop
or
out
loop
push
and
lock
enter
or
and
outsl
jbe
pop
mov
in
jae
sub
mov
push
sti
mov
decl
loop
push
incb
sub
icebp
or
cmp
jg
ljmp
aas
mov
cmpb
mov
inc
mov
sbb
mov
andb
insl
mov
iret
push
nop
lcall
pusha
fucomip
enter
lods
xor
in
rclb
push
dec
add
xchg
hlt
mov
jmp
xor
xchg
pop
and
mov
lcall
mov
pop
or
inc
inc
inc
and
leave
inc
arpl
stc
popf
jge
loope
sub
xchg
sti
xchg
test
sub
push
cmp
adc
cmp
jge
mov
add
stc
cli
xor
jecxz
pop
push
test
lods
mov
insb
sub
sub
adc
pop
cmp
mov
negb
mov
jb
and
jle
sbb
add
xchg
xchg
fs
das
dec
jl
sbb
xchg
pop
test
xchg
mov
mov
fwait
sahf
movsb
call
lcall
inc
jno
mov
pop
loop
sub
inc
insb
dec
jmp
movsl
inc
or
in
cmc
cmp
test
dec
cmpsb
cmp
mov
cld
mov
inc
lcall
shll
jb
or
sub
cmpsl
jnp
fs
pushf
mov
sahf
mov
popa
cmp
fmuls
adc
mov
outsb
xchg
stos
lods
enter
jge
les
fidivs
push
or
add
inc
and
push
das
addb
mov
sbb
mov
pop
pop
rcr
sub
movsl
test
mov
daa
push
adc
lahf
andl
repz
pop
pop
jbe
stc
xchg
enter
daa
add
lret
mov
test
fnstsw
cmpb
dec
push
fnsave
add
sub
repnz
stos
clc
sbbb
lahf
sarb
inc
popa
mov
mov
mov
leave
jmp
mov
jecxz
xlat
inc
iret
add
pop
shll
test
add
xchg
ret
popfw
adc
shl
cltd
push
movsl
sbb
nop
lahf
dec
int
lods
push
xor
mov
js
inc
dec
inc
jb
mov
mov
inc
mov
test
or
insb
jl
xchg
dec
mov
js
add
xor
push
fdivs
int3
push
inc
jnp
sub
iret
or
cmp
mov
jne
or
jg
add
cmp
aaa
inc
or
iret
imul
div
xor
jecxz
jg
aam
push
mov
ret
pop
inc
stos
insb
outsw
lods
cltd
or
rorb
pop
dec
push
mov
adc
lods
push
loope
inc
xchg
pop
iret
inc
fstl
outsl
clc
pop
add
pop
lret
jg
sub
test
decb
mov
jbe
ds
dec
dec
loope
stos
push
xchg
mov
jg
or
aad
aaa
jb
inc
add
xor
pop
mov
fsubrl
lock
mov
mov
ret
sub
cltd
dec
pop
cs
and
shll
aas
push
inc
jmp
and
mov
push
fucomi
sbb
lret
inc
jae
insb
out
sbb
adc
pop
xor
fsubrp
mov
out
adc
or
movsl
test
pop
imul
sub
addr16
inc
inc
cmp
fstl
in
mov
add
and
cmpl
mov
push
inc
data16
cltd
ds
mov
jbe
lcall
cmp
arpl
fstpl
and
es
pop
cmp
dec
mov
inc
mov
dec
jge
mov
mov
roll
movsl
lock
in
xor
jl
pop
imul
mov
push
mov
cli
lcall
aas
add
outsb
mov
jle
push
sbb
push
mov
in
adc
or
sbb
push
jbe
in
mov
push
imul
push
arpl
or
jge
stos
mov
push
sbb
insl
xor
cld
aas
aas
out
ds
sub
inc
mov
dec
imul
or
cmp
sub
sbb
dec
mov
push
test
sbb
jl
add
mov
pop
adc
addr16
ret
imul
sahf
xchg
jno
sub
insb
inc
and
cmp
sahf
out
cmpl
xchg
or
aas
lahf
inc
addr16
cltd
nop
mov
aam
ja
sbb
sbb
jl
in
lcall
mov
test
pushf
inc
pop
push
cmp
add
jl
jmp
aad
cmp
dec
repnz
jb
and
lds
and
enter
inc
mov
pop
rcrb
and
dec
sub
jg
and
lcall
out
loope
pop
ret
outsl
test
jbe
ret
xchg
jecxz
sub
and
divb
lods
and
inc
dec
jmp
loopne
sti
mov
fwait
adc
insb
push
fidivl
cmp
and
xchg
adc
popf
mov
and
cwtl
xchg
add
fst
push
sub
add
cmp
inc
mov
jge
push
popl
cmp
mov
scas
lods
aas
addr16
imul
mov
cmpsl
mov
dec
imul
imul
fnstsw
jp
push
add
and
jno
push
js
negb
cwtl
cli
xchg
jbe
sbb
dec
mov
sub
in
xchg
dec
push
ds
pusha
dec
inc
sub
ds
jnp
xchg
out
jb
xchg
stos
lods
inc
mov
fcomp
dec
sbb
pop
xchg
inc
xor
sbb
cltd
ja
jl
sub
xorl
popl
cmp
pop
xchg
cs
insl
pusha
pop
jbe
mov
jbe,pn
test
les
xchg
sbb
and
dec
out
cli
push
lods
stos
out
xor
jge
jp
lods
or
stos
xchg
lock
cltd
icebp
cs
mov
lods
push
inc
mov
jp
push
inc
xchg
sbb
stc
jns
adc
inc
xlat
sub
out
cmp
fdivrs
sub
aas
insl
loope
add
loope
or
mov
add
mov
cmp
adc
xor
lahf
push
pop
cmp
daa
insb
out
divb
xorb
fisubrl
in
push
sbb
push
lock
pop
hlt
mov
jl
mov
adc
je
sbb
stc
cmp
jl
ret
add
and
mov
arpl
xor
mov
sub
lcall
dec
enter
das
shlb
push
dec
mov
cmpsl
out
push
flds
mov
jg
iret
ss
pop
adc
dec
mov
mov
add
mov
fs
inc
incb
jge
pop
xchg
sub
mov
push
testb
pop
inc
jnp
aas
test
mov
cmp
mov
sbb
lcall
and
outsl
imul
int
jbe
adc
inc
or
mov
push
push
subl
cmp
inc
loope
arpl
sti
mov
call
pop
push
and
cmp
inc
out
xchg
pop
sahf
push
inc
shlb
into
xor
aad
mov
std
loopne
ret
lret
fs
or
jmp
dec
jmp
push
fistpl
int3
mov
dec
jmp
aam
sbb
pop
clc
jmp
jb
dec
lock
bound
mov
aam
popa
sbb
and
lahf
adc
arpl
cltd
sbb
pop
insb
inc
inc
ds
pop
sti
jnp
mov
fldl
xor
scas
dec
pop
push
pop
fisttpll
shr
lods
sub
pop
add
xchg
outsb
mov
mov
out
fnstcw
stc
loope
insl
outsl
and
or
sub
les
adc
xchg
cli
mov
push
pop
test
jo
xchg
sub
inc
inc
cmp
ds
add
and
inc
ret
daa
add
dec
sub
aaa
in
mov
jo
jnp
sbb
push
test
jbe
push
mov
jle
mov
mov
sbb
insl
ss
jge
test
testb
mov
inc
add
sbbl
adc
or
mov
stc
adc
movsb
cmpsb
sbb
repz
insl
jge
mov
leave
sbb
repnz
shll
std
enter
aas
mov
fwait
sahf
jmp
or
xor
inc
cmp
icebp
push
out
adcb
adc
xchg
add
mov
inc
sub
in
cmp
ss
mov
mov
inc
jmp
or
dec
mov
in
push
mov
stos
sbb
mov
xchg
sahf
mov
xchg
sti
cmp
cmc
push
idiv
int
xchg
lret
jge
ljmp
sbb
ljmp
ret
adc
shr
fnstsw
pop
popf
dec
movsl
mov
dec
push
jge
xor
mov
dec
mov
dec
add
jno
fildl
xchg
sbb
js
inc
pop
adc
cmp
push
mov
lock
popa
cmpsl
jo
jb
mov
mov
fldt
dec
inc
fldl2e
jl
mov
sub
aam
sarb
movsl
jae
inc
pop
mov
ss
fcmovnbe
dec
and
dec
xor
or
sub
rcl
mov
fwait
sahf
jbe
iret
push
inc
xor
sbb
fstp
and
hlt
cmp
jmp
or
xor
mov
xchg
mov
pop
lods
and
inc
xchg
arpl
xor
sub
jae
and
into
in
adcb
push
pop
cld
sbb
cmp
jb
pop
idivl
ja
sub
sub
fsubrl
iret
cmpsl
push
insb
stc
or
call
dec
out
daa
bound
and
fisubl
push
adc
jb
and
adc
sti
mov
cld
fwait
cli
fildl
xor
xchg
test
cmp
and
dec
sub
mov
cltd
inc
int
sarb
test
dec
xor
jle
pop
sahf
stos
push
jns
jge
gs
lahf
pusha
jecxz
or
xchg
out
cmp
enter
dec
jp
mov
in
arpl
jge
pop
iret
test
mov
xor
movsl
dec
lods
mov
inc
adc
mov
push
lods
std
ficompl
push
out
gs
sbb
jnp
stos
ds
jbe
hlt
fistl
cmp
sbb
dec
iret
xchg
addr16
test
fnsave
pop
jge
inc
inc
ljmp
and
scas
icebp
rolb
les
sub
xchg
mov
mov
lods
jbe
adc
sub
jb
pop
sub
test
inc
sbb
leave
dec
pop
gs
fbld
cmp
mov
jmp
mov
fs
adc
and
or
xchg
std
xor
jge
mov
push
or
mov
jnp
push
push
push
test
cmp
jl
and
lcall
inc
add
add
mov
xchg
pop
xchg
cmc
sarb
cwtl
rcr
arpl
stos
cmpl
cmpsl
clc
add
lock
test
add
scas
cmp
sub
inc
mov
mov
mov
es
push
mov
mov
loop
in
mov
add
jl
inc
test
mov
cs
inc
in
jno
mov
cmp
jge
lock
loope
sub
mov
mov
lahf
inc
cmp
sbb
clc
mov
jge
xchg
cmc
pop
jg
mov
sbb
add
inc
icebp
xor
add
popf
mov
jmp
jge
mov
flds
or
iret
sub
mov
adc
xor
mov
dec
inc
jl
mov
je
xchg
out
push
in
dec
jle
xchg
mov
loop
adc
sub
jl
idivb
or
jmp
add
mov
dec
cwtl
lods
and
adc
pushl
mov
or
es
jmp
int3
fimuls
cmpsl
cmp
jmp
in
cmpsb
mov
and
xchg
mov
jbe
adc
pushf
push
inc
xorb
adc
hlt
fsubrl
push
bnd
gs
fstps
fdivrl
test
jge
cmp
pop
call
sbb
in
sbb
xchg
dec
jmp
mov
in
add
push
pusha
mov
push
in
test
jmp
jecxz
andb
dec
mov
xorb
cmpb
jbe
push
or
and
test
and
add
cmpsb
or
sbb
inc
int3
push
add
ds
cmp
push
or
push
cmp
push
inc
fisttpll
in
sbb
jl
push
mov
into
xchg
daa
pushf
adc
xchg
cmp
xchg
mov
cmp
mov
aas
mov
inc
fsts
push
fstps
xchg
dec
dec
mov
push
adc
popa
stos
ficompl
imul
cli
enter
lcall
pop
pop
push
jge
push
xor
test
addr16
push
imul
sbb
pop
stos
cmp
jno
lods
dec
sbb
inc
push
xor
inc
add
inc
xchg
lcall
pop
scas
shll
stos
cmp
lods
mov
iret
mov
xor
ja
and
fstp
cmp
scas
sub
rdpmc
mov
cs
xchg
jle
rep
inc
adc
or
jle
jno
xchg
jmp
stos
pop
jl
pop
sbb
jp
jp
jbe
lock
imul
mov
mov
push
lret
inc
jp
push
dec
daa
fwait
imul
mov
jbe
adc
test
aas
xchg
push
sub
and
rcpps
sbb
dec
data16
and
out
sub
xchg
jle
fs
scas
jnp
sub
je
stos
inc
cmp
and
stos
mov
mov
sbb
cltd
in
xchg
inc
lods
arpl
mov
inc
mov
jae
xchg
call
dec
cwtl
and
xchg
sti
shrl
mov
ds
in
inc
jne
aaa
roll
cli
inc
dec
mov
mov
cwtl
add
cwtl
lret
mov
jp
push
call
out
push
jbe
xorl
add
fiadds
pop
out
int
lods
xchg
add
cli
and
mov
inc
pusha
sti
pop
mov
add
shrb
push
scas
es
testb
in
pop
mov
das
repnz
cmp
jbe
adc
mov
jb
xchg
add
fwait
mov
cs
ret
pop
pop
jnp
dec
cmp
fwait
mov
inc
pop
ret
lds
fisubrl
dec
int3
push
push
les
lret
jge
fsubs
pop
add
sub
mov
or
jnp
or
dec
pop
xor
mov
popf
mov
xor
enter
scas
inc
cld
mov
popa
jl
popa
leave
dec
popa
adc
and
xchg
mov
mov
enter
cli
mov
cmp
ret
adcb
push
int
mov
and
frstor
push
je
js
movsl
mov
pop
std
and
shrl
and
inc
loopne
sbb
nop
adc
divl
push
mov
sbb
inc
sbb
xchg
inc
jg
call
lahf
scas
sub
push
std
ss
lods
mov
push
shl
mov
push
jge
add
in
jge
sub
push
andb
dec
mov
inc
in
lahf
sbbl
pop
ljmp
aad
lcall
loopne
mov
frstor
push
xor
adc
call
add
dec
je
into
pop
push
xlat
xor
jmp
cmp
push
jmp
pop
pop
enter
rclb
out
adc
scas
jle
push
and
into
pushf
sub
inc
cmp
or
cmp
fstp
xchg
stos
mov
imul
sbbb
lret
loopne
inc
jo
test
lds
mov
add
lods
xor
pop
sbb
mov
pop
adc
mov
sub
or
xor
mulb
and
stc
test
or
or
inc
fcomps
pushf
mov
or
push
jne
inc
fildll
sti
inc
ja
push
lcall
jl
jnp
xor
inc
rep
pop
jne
push
cmp
push
dec
adc
xor
popa
out
mov
sub
jnp
pop
mov
mov
scas
mov
aad
and
mov
nop
test
sbb
pop
test
lock
outsb
dec
pop
jge
xchg
push
sub
fwait
dec
lea
cmp
xlat
jg
and
push
add
inc
pop
icebp
sbb
adc
lods
adc
test
lahf
aad
daa
mov
mov
rorb
adc
negl
mov
adc
orb
lock
inc
mov
insl
push
lahf
and
call
es
shlb
xchg
mov
scas
in
je
cmp
fcomip
test
pop
lds
fwait
jnp
test
fs
pop
pop
add
fsubrl
out
or
dec
nop
xchg
popa
xlat
or
fistpl
cmc
cmp
sbb
jno
pop
lods
sbb
cmpsl
pop
and
and
jp
cltd
sbb
push
and
mov
mov
mov
push
adc
push
mov
push
and
enter
mov
adc
jmpw
pop
sbb
lret
sbb
push
std
mov
sar
pop
jge
repz
push
fdivrl
ljmp
xchg
fmul
pop
addr16
repz
in
stc
movsl
mov
inc
xor
popf
mov
jl
sub
sbb
cmpsb
jmp
incl
jbe
aas
sbb
sti
or
fmull
jnp
pop
ljmp
jle
daa
xor
dec
mov
or
insb
mov
jae
push
es
mov
pop
and
repz
test
aam
lahf
sti
pop
ds
inc
jo
lock
std
mov
xchg
inc
mov
roll
test
and
or
sarl
inc
and
xlat
cmc
fxch
and
and
lods
bound
cmpsl
add
pop
jecxz
mov
es
sub
repnz
sub
out
push
add
mov
enter
adc
jecxz
or
es
pop
lret
mov
mov
icebp
and
xchg
and
adc
inc
push
xor
das
clc
fs
and
inc
scas
int
push
pop
dec
sbb
pop
jae
and
pop
mov
je
testl
int
mov
jb
data16
leave
stos
repnz
jbe
imul
in
lcall
lahf
aas
pop
and
push
push
aad
ljmp
xchg
jae
enter
and
sti
and
lea
dec
dec
mov
inc
out
fdivrl
jge
mov
int3
mov
pushf
adc
repz
dec
clc
pop
mov
xor
jp
or
jnp
adc
add
jne
test
iret
sbb
dec
movsb
bound
xchg
sbb
inc
push
inc
arpl
es
jge
inc
lcall
mov
mov
and
jmp
mov
out
adc
movsw
mov
adc
cmp
dec
pushf
leave
jmp
sub
inc
in
mov
and
in
cltd
test
shrb
shrb
sbb
stc
cmp
pop
add
or
insl
fildl
jne
in
inc
popa
fwait
pop
ret
jp
mov
adc
nop
fistpll
push
cmp
xor
nop
xchg
pushf
adc
jbe
cmpl
les
outsl
icebp
adc
xchg
gs
pushf
js
and
jmp
dec
sub
pushf
inc
sbb
dec
stc
add
mov
lock
xchg
mov
or
and
adc
lret
mov
cmp
cmp
mov
jg
shlb
mov
out
push
divb
cmp
ds
out
data16
lods
sub
xchg
test
es
sbb
leave
dec
or
xchg
cmp
mov
add
inc
loop
dec
xchg
xor
sbb
sbb
mov
cmp
add
jns
cwtl
cmpsl
std
dec
push
cmp
shlb
es
shr
aas
popa
lcall
sbb
jge
push
rolb
and
sbb
jle
arpl
test
dec
inc
inc
das
push
scas
aas
jb
jnp
jge
fisubrl
jl
cmpsl
jbe
mov
add
mov
lock
inc
push
jge
inc
lret
outsl
imul
loopne
sahf
mov
mov
jmp
pop
test
scas
nop
jo
out
sub
sbb
dec
mov
sarb
jge
aaa
rorl
pop
adc
rep
add
lahf
arpl
into
and
lcall
inc
loop
push
jo
xchg
fstl
cltd
mov
incb
push
loope
testb
jg
imul
idivb
mov
and
pop
and
popa
sbb
lcall
int3
pop
mov
add
xor
movsl
inc
aam
pop
shll
pop
stc
aas
cmp
les
jge
lock
mov
cmpsb
jg
push
push
ffree
sbb
test
mov
or
jbe
dec
fld
ret
inc
mov
arpl
pause
mov
imulb
movsb
testb
lea
out
or
movb
aad
loope
fldenv
call
sub
nop
pop
add
mov
inc
mov
mov
add
push
lea
incb
lods
stos
je
pop
dec
inc
outsl
test
pop
sub
xchg
cs
xor
repz
cli
sbb
pop
out
aaa
mov
add
and
mov
sub
ror
pushl
into
pop
lret
ss
jno
fcoml
jl
repnz
jle
fcoml
push
pop
loope
fimull
fldt
loop
daa
jge
xchg
xor
jmp
sub
and
dec
mov
mov
add
mov
lds
fcmovnu
das
xor
inc
lods
shlb
and
cmp
push
mov
sub
inc
scas
lods
pop
and
arpl
mov
cmp
arpl
cli
mov
inc
sbb
inc
pop
scas
je
mov
adc
cmpb
lods
icebp
rorb
out
js
fimuls
sarl
mul
pop
insb
add
mov
sbb
cs
sti
mov
ret
or
lea
add
cmp
and
inc
jnp
xor
fs
out
bound
jp
add
sub
inc
gs
inc
lds
inc
mov
bound
hlt
push
sub
mov
aad
jg
jp
sti
ds
push
dec
mov
or
pusha
andl
int
ja
sub
dec
std
inc
icebp
lcall
and
mov
adc
lret
mov
push
dec
inc
jb
fidivrs
mov
add
inc
in
jle
test
fisubrs
xorl
add
idivb
dec
sbb
inc
sub
popa
cmp
ret
dec
mov
mov
sub
sbb
push
mov
mov
aad
add
cmp
cld
mov
xchg
pusha
xchg
cmp
pop
push
inc
movsl
adc
and
loop
into
nop
test
cld
lds
lock
lea
dec
inc
aaa
divb
add
sbb
sahf
pop
xor
dec
mov
popf
jae
xchg
fidivl
cmp
mov
dec
dec
cmp
mov
xchg
or
in
sub
mov
lahf
fwait
jbe
stc
and
push
test
mov
or
js
movl
xor
shll
xchg
jb
movsb
adc
cltd
dec
jne
push
add
xchg
test
sbb
jp
lods
insb
inc
add
cmp
pushf
fdivrl
mov
add
test
inc
sarb
icebp
mov
sahf
xor
jge
inc
les
sub
in
push
pop
xlat
icebp
fcomps
loope
fldcw
mov
stos
lret
int3
and
out
lods
imul
cmp
mov
test
imull
adc
jb
imul
xchg
mov
int3
pop
dec
sbb
pop
mov
jle
enter
std
je
insl
rcll
dec
stc
into
sti
movsb
fistpl
and
xchg
in
inc
test
cmp
lahf
fidivl
popa
enter
mov
lods
xor
add
stc
aas
xchg
dec
sbb
int
sbb
or
aas
leave
or
into
in
xor
adc
insl
icebp
mov
push
sbb
inc
div
movsl
push
fstpt
add
je
loop
out
lods
add
aad
sbb
mov
sti
in
adc
inc
cmp
and
add
mov
mov
lods
add
push
push
add
fsts
pop
imul
inc
shr
jle
scas
cli
jnp
add
xlat
mov
hlt
test
inc
popa
mov
push
mov
push
daa
adc
pop
rcrb
je
dec
test
out
push
adc
int
cmpl
repz
insl
push
stos
jle
jp
dec
cmp
inc
xchg
int
mov
test
xor
aam
jb
rorl
xor
sbb
int
jle
mov
mov
inc
sub
add
and
mov
outsb
mov
add
jge
xchg
enter
push
jmp
sub
lahf
shlb
fidivrl
test
xchg
addr16
arpl
dec
or
xor
xor
scas
mov
mov
stos
inc
ss
and
ret
mov
push
mov
insb
cmc
or
push
sbb
repz
and
pop
add
rolb
push
inc
dec
push
cmp
gs
lock
lret
dec
mov
push
std
sbb
cmpsb
xor
and
push
out
mov
xor
push
aam
sbb
sub
ja
push
adc
push
testb
insb
enter
mov
mov
mov
mov
sub
ljmp
aad
addr16
jge
and
sub
xor
iret
mov
xor
lcall
mov
xchg
add
movsl
imul
pop
sub
push
nop
int
out
pop
sbb
mov
fimull
add
movsl
add
test
int
call
or
in
cwtl
jb
xchg
cld
xchg
inc
and
cmp
adc
divl
pop
int
enter
idivl
dec
pusha
or
lea
jb
mov
dec
pop
mov
sbb
stos
cmp
or
inc
loopne
lods
mov
push
pop
cmp
mov
cs
fsubl
lret
inc
mov
pop
out
push
cltd
xrelease
div
into
fs
cmp
jg
jle
mov
stos
test
icebp
shlb
pop
in
jae
jno,pt
mov
mov
sbb
arpl
in
scas
loope
pop
addr16
xchg
aas
adcl
stc
mov
loope
jnp
ds
fnsave
or
xchg
ljmp
jge
in
aam
dec
hlt
cmpxchg
popa
jg
popf
xchg
test
inc
cwtd
cmp
test
mov
psubusb
sti
sbb
push
push
inc
repnz
cmp
jge
mov
or
xor
sbb
lcall
add
push
fwait
inc
add
je,pt
stos
fistl
je
push
aaa
int
or
inc
sbb
and
add
push
int
lret
jbe
addb
jbe
mov
ja
loopne
fwait
push
or
repnz
xchg
in
data16
inc
add
xor
cld
jecxz
in
inc
jno
mov
jle
jbe
ret
jge
bound
cwtl
popf
cltd
jae
fs
sbb
xorb
xchg
sbb
add
dec
int3
out
pop
dec
lret
mov
sbb
sub
std
push
cld
push
xchg
repz
mov
fdivl
sbb
push
out
sub
xchg
mov
insb
xor
clc
das
repz
adc
fidivs
jns
rorl
fidivrs
push
bound
jne
mov
rolb
mov
mov
addr16
fdivl
sti
adc
xchg
gs
in
xchg
pop
mov
add
sbb
lcall
fldcw
rorb
xor
and
aam
popa
mov
insb
pop
sub
mov
mov
pop
test
dec
jne
push
jg
sub
cwtl
mov
or
inc
cwtl
sbb
pop
add
push
dec
and
add
add
inc
or
inc
faddl
mov
jg
cmp
test
lret
jbe
add
cmp
xchg
out
pop
mov
clc
xorl
cmp
mov
ficomps
into
addl
in
stos
pusha
bnd
test
btr
push
popa
insl
add
mov
into
dec
lea
out
jge
ds
adc
sahf
adc
adc
and
xor
in
jmp
and
xor
jge
das
mov
out
mov
dec
add
mov
adc
call
out
enter
jecxz
xchg
insl
mov
mov
stos
ja
dec
cmc
hlt
or
and
popf
mov
add
outsl
dec
jecxz
dec
pop
jg
add
or
xor
cli
mov
outsl
shll
scas
aad
mov
lods
ja
mov
cmp
call
pop
jl
jne
sarl
xor
add
icebp
sub
call
pop
js
pop
dec
jmp
and
inc
mov
sub
mov
lods
xor
subb
inc
pop
lds
jb
push
mov
pop
inc
add
inc
sbb
inc
pop
mov
daa
push
pop
loope
xchg
pop
push
loop
jo
aas
mov
test
bound
mov
cmpsl
in
ret
and
mov
xchg
inc
mov
or
lret
popa
idivb
pop
or
mov
std
cmpsb
sbb
pop
cmp
in
stc
fs
fisubl
fmull
popa
mov
and
inc
jb
push
xor
das
ds
and
mov
sbb
mov
mov
mov
popa
dec
mov
or
sbb
dec
daa
in
int3
push
jne
stc
or
sbb
xor
inc
shl
and
mov
arpl
push
pop
xchg
mov
mov
dec
push
add
mov
jbe
adc
push
cs
cmp
ja
addb
out
sahf
aad
jno
and
push
cmpsl
mov
ffree
push
lds
daa
inc
popf
mov
xor
movsl
jne
ja
dec
dec
in
push
je
data16
ljmp
xchg
pop
add
ja
les
pop
dec
jbe
lods
fwait
in
pop
jae
add
inc
push
and
cmp
jp
mov
or
ds
sub
or
lods
add
iret
mov
xlat
outsb
and
pop
dec
mov
loope
addl
stc
sarb
cmp
adc
jo
and
xor
call
push
cmp
ja
mov
daa
sahf
dec
ja
loopne
and
outsl
arpl
stos
inc
bnd
dec
pop
push
icebp
mov
jnp
orl
inc
xchg
in
fistpll
fldenv
push
test
stos
fwait
push
xor
mov
scas
imul
clc
jmp
cmp
inc
mov
dec
cmp
fldcw
jb
inc
pop
inc
xchg
and
jp
ret
pop
dec
fnstcw
lods
pusha
lcall
pop
lea
push
mov
and
mov
jmp
sbb
mov
and
xchg
jmp
andl
mov
cmp
adc
repz
mov
mov
sbb
cmp
pusha
sti
xchg
sahf
dec
in
add
sub
jnp
push
outsb
and
push
fbld
sbb
mov
stos
es
sbb
lret
scas
inc
les
jge
and
sub
lock
adcl
add
cwtl
xor
jmp
jmp
mov
add
inc
mov
mov
test
jp
jl
pop
jecxz
pop
repz
jbe
cmp
and
jmp
imul
push
sbbb
cmp
pop
mov
pop
cmc
clc
inc
out
jo
jne
les
rclb
pop
or
int
cltd
dec
sbb
pop
and
fisubl
jle
mov
into
pop
sbb
jp
sub
jl
mov
popf
cld
idivl
dec
add
bound
mov
mov
push
lret
sbb
pop
or
popf
xchg
mov
mov
mov
add
je
mov
xor
cmp
pop
push
out
sahf
int3
add
xor
push
subl
mov
in
outsl
lods
inc
out
lea
sub
mov
xor
addr16
xor
mov
and
sub
add
pop
jp
in
stos
aas
lret
pop
push
sub
test
xchg
cs
cmpsl
outsl
and
xor
nop
push
jb
dec
arpl
shll
loopne
in
jns
xchg
mov
aaa
test
push
or
sbb
mov
sbb
cmpl
inc
inc
test
push
jnp
cmp
jge
mov
inc
aaa
es
inc
lahf
mov
repz
cmp
jo
jle
sti
rclb
adc
and
cli
lock
dec
or
inc
or
jo
lea
andb
push
xchg
nop
movsl
test
mov
in
mov
stos
and
push
add
and
sub
divb
or
mov
or
imul
test
mov
mov
sbb
cmp
ja
fwait
sub
jle
sub
add
dec
xchg
push
lret
inc
jns
dec
jle
incb
loope
in
mov
cltd
scas
in
out
jl
stc
sarl
jb
popf
sbb
xchg
adc
das
xchg
inc
mov
mov
push
mov
and
das
mov
leave
or
inc
lahf
inc
pop
or
idivb
push
cs
xor
addr16
jnp
in
insl
iret
inc
repnz
lods
pop
fisttps
icebp
cmp
add
jecxz
or
jge
shrb
sub
rolb
add
cwtl
adc
and
jb
inc
scas
ficoms
ds
enter
test
sub
add
cwtl
test
in
lods
pusha
xorl
mov
addl
test
dec
push
dec
push
inc
cli
pop
lock
add
mov
sbb
jg
inc
mov
adc
ffree
cmp
pop
push
sub
sbb
xor
mov
or
or
adc
push
enter
or
out
mov
std
out
shlb
adc
out
dec
cmp
je
test
call
and
mov
aad
inc
roll
sub
clc
xchg
sub
pop
repnz
push
loope
mov
jmp
and
mov
cs
xlat
push
imul
mov
or
mov
pop
shlb
sbb
jmp
jl
mov
cwtl
dec
sbb
push
mov
add
jge
orb
aaa
adc
test
jno
jp
add
imul
loopne
insb
rorb
adcb
push
in
mov
lret
scas
cmpl
nop
xor
cmc
imul
cmpsl
and
or
mov
and
dec
leave
mov
inc
sub
dec
lods
imul
sub
cmp
mov
je
pop
mov
mov
pop
or
test
icebp
dec
mov
mov
scas
arpl
fwait
inc
jo
shr
pop
lret
sub
sbb
inc
fcomip
scas
jae
scas
lods
push
mov
repnz
aas
sbb
test
dec
jl
in
adc
jnp
testb
into
xor
add
inc
ds
xor
fldt
insl
sub
rolb
push
iret
dec
cltd
arpl
popf
repnz
mov
adc
inc
pop
adcl
stos
push
and
xchg
pop
fbstp
xor
jnp
pop
sub
inc
push
add
lret
jp
cmp
stos
mov
fsubrs
mov
mov
adcb
xchg
sub
sub
mov
clc
cmp
and
pushf
and
rorl
adc
lods
imul
cwtl
mov
pop
mov
push
jnp
ljmp
push
fsub
pop
jns
insl
ds
movsl
jmp
inc
stos
inc
jo
push
rcll
lahf
mov
rorl
dec
push
add
sub
push
fistl
push
jmp
sub
pusha
lret
jle
fsubrl
sbb
aam
push
in
xor
pop
dec
nop
inc
or
or
fstl
sub
pop
mov
or
les
inc
lret
mov
test
divl
sub
subb
jge
and
adc
xchg
inc
cmpb
lcall
frstor
mov
push
andl
adc
push
cwtl
mov
pop
lahf
bound
jbe
ret
and
jne
scas
cmp
push
xchg
jp
mov
mov
add
dec
inc
scas
dec
pop
ror
scas
mov
push
cltd
ds
fucom
es
jmp
insb
mov
push
mov
lea
shll
lock
shr
sub
and
xchg
mov
cmp
and
cmc
or
push
add
decb
jge
test
in
cs
jbe
lock
dec
test
or
mov
xchg
test
fisubl
mov
push
inc
clc
add
push
inc
mov
xchg
mov
popa
or
mov
dec
dec
cwtl
jg
ret
xlat
fistpll
xor
out
out
adc
jge
lea
inc
lea
jmp
push
xchg
bound
sahf
mov
out
imul
into
lret
xchg
add
int3
and
jnp
stos
shlb
leave
xor
data16
sbb
fld
mov
in
cmp
daa
xor
movsl
inc
sub
jle
inc
xchg
xchg
add
xor
mov
imul
dec
sbb
push
pop
push
dec
pop
fstpl
jmp
sbb
sahf
test
mov
cld
je
xchg
ds
inc
pop
cltd
jmp
aaa
mov
mov
in
mov
insb
arpl
callw
push
call
or
daa
push
out
xchg
push
jmp
xor
insb
cli
mov
dec
and
jno
jno
xchg
es
pop
lods
cmp
or
jg
insl
mov
sbb
mov
adc
xchg
nop
jmp
in
lods
mov
clc
or
jno
jp
insb
xchg
pop
sarl
push
das
imul
and
ss
movsl
jl
jge
mov
enter
or
inc
imul
xchg
mov
sbb
fwait
xor
jge
push
mov
sti
nop
jne
sbb
scas
mov
dec
es
push
jecxz
insb
or
shll
add
mov
mov
jb
mov
pavgw
sar
xchg
mov
rorb
pusha
clc
test
xchg
arpl
enter
jae
add
add
movsl
cmp
aas
sub
enter
mov
xchg
mov
and
cmp
jge
sub
inc
sub
jno
cs
xor
mov
ljmp
cmp
or
xchg
cli
repnz
add
pop
imul
pop
cli
or
cmp
out
lods
movsl
dec
pop
xchg
sub
stos
adc
xchg
or
popf
sub
imul
pop
ds
sarb
in
leave
push
push
mov
lret
pop
xchg
dec
sti
insb
jo
popa
sbb
adcl
fwait
aas
stos
pop
xchg
addr16
dec
clc
movsl
sahf
sbb
jne
dec
stos
mov
cmc
imul
mov
or
jae
sbb
add
push
push
and
imul
cmp
aad
jne
movb
je
pop
stos
adc
cltd
and
mov
mov
pop
out
in
lods
mov
dec
pop
inc
mov
add
inc
ljmp
adc
mov
cltd
and
xchg
movsb
jbe
push
sub
movsb
adc
cmp
push
dec
ficomps
sarl
push
xor
jb
cli
push
subb
sti
icebp
ljmp
jo
fistpl
ds
shlb
in
pop
or
jne
stos
stos
aad
mov
aad
pushf
hlt
insl
rcl
add
sti
xor
inc
xchg
mov
mov
lock
les
inc
insl
cmpsl
xchg
and
inc
call
push
xchg
pop
movsl
data16
cli
cli
jle
add
xlat
xchg
cmp
inc
sbb
inc
jg
mov
and
xchg
scas
das
cmpsb
adc
flds
lods
popf
xor
inc
in
push
add
fwait
mov
xchg
out
rep
and
insl
cld
addl
dec
jae
mov
push
xor
lret
pop
push
fwait
shll
mov
adc
inc
lcall
frstor
sub
into
rcl
das
cltd
repnz
aaa
cmp
add
mov
cmp
addr16
cld
insb
aam
test
lea
add
xor
dec
add
imul
mov
dec
cmpsl
sub
je
lock
xchg
fwait
aad
iret
jg
xor
js
dec
adc
push
add
mov
negb
dec
xor
cmc
mov
sahf
data16
loopne
mov
cli
enter
pop
jb
dec
ret
ficoms
outsb
inc
push
lcall
inc
call
xor
add
les
cmp
data16
arpl
clc
mov
jmp
scas
push
jp
and
mov
stos
sub
mov
ss
lock
mov
jmp
adc
dec
mov
jle
inc
dec
repz
pushf
sbb
mov
sti
sub
mov
mov
xor
sbb
lods
cmpl
xor
jae
or
jbe
mov
jge
scas
hlt
std
es
push
fildl
push
loop
push
fld
data16
xchg
mov
jge
inc
clc
in
ret
xchg
out
xchg
das
adc
cmpsb
jne
scas
sbbb
das
and
mov
sub
cs
pop
sahf
mov
mov
push
xchg
stos
jae
and
out
test
sub
pop
dec
add
out
cli
mov
xchg
pop
pop
or
dec
lcall
or
daa
mov
dec
outsl
fstp
jge
xor
lea
int
sub
fisttpll
xchg
je
xchg
rcl
lds
lcall
push
jbe
out
xchg
in
sub
lret
add
push
out
imul
add
pop
jbe
scas
cmpl
inc
dec
mov
inc
adc
pusha
xchg
cmp
or
lock
hlt
sbb
cmp
cmp
ljmp
pop
int3
out
insl
cmpsl
or
inc
in
call
mov
imul
fwait
cltd
pop
std
mov
in
sbb
out
mov
into
xchg
cs
dec
int3
inc
jmp
inc
jo
sub
mov
das
push
jno
push
addl
cs
or
arpl
mov
stc
fst
inc
and
lret
movb
pop
les
subl
mov
push
imul
sbb
roll
scas
xchg
dec
pop
lahf
sub
js
mov
push
inc
mov
cmc
or
add
xchg
inc
mov
nop
movsb
cmc
and
add
sbb
in
adc
imul
sbb
je
pop
pop
sub
xchg
mov
cltd
push
dec
sub
in
in
xchg
sub
add
jge
jns
dec
or
and
stos
cmp
rorl
add
inc
les
xchg
mov
lret
push
aad
mov
mov
pop
mov
imul
icebp
adc
adcl
sub
dec
movsb
imul
xchg
pop
jnp
mov
outsb
dec
mov
mov
clc
xchg
icebp
out
adc
mov
je
inc
mov
arpl
push
rdpmc
pop
nop
xchg
jbe
inc
jb
mov
push
sbb
stc
stos
or
jle
cli
ficomps
stos
mov
mov
stc
not
imul
cmp
pop
or
sar
insl
test
xchg
mov
jno
cmp
cmp
mov
jmp
pop
push
hlt
and
mov
mov
pop
in
mov
and
hlt
cmp
or
push
cmp
sub
xor
out
pushf
dec
es
mov
mov
inc
pop
cmpsb
lods
je
sarb
inc
in
jg
loopne
push
loop
sarl
dec
sub
jnp
add
lret
ljmp
sub
pushf
int
jle
cld
jb
lret
jmp
lahf
lahf
les
lods
cmp
mov
sti
add
push
mov
frstor
aas
stc
inc
push
sub
fs
pop
js
in
add
adc
mov
lods
jg
dec
cltd
sbb
push
lock
cltd
in
int
and
push
movl
shl
repz
dec
jnp
rorl
add
test
pushw
jns
bnd
cmp
push
sbb
loopne
cltd
inc
fisubrs
es
pop
xchg
movsb
mov
xor
jb
lahf
addr16
xorb
dec
stc
fwait
push
decl
in
jp
jno
loop
imul
enter
adc
jmp
insb
push
inc
dec
movsl
scas
aad
sub
xchg
lods
sahf
add
sbb
xor
pop
fildl
roll
jge
dec
clc
mov
ss
dec
into
lret
mov
lods
test
aas
adc
jge
xchg
dec
lock
dec
jo
lds
push
jmp
es
push
mov
sti
ret
rcrl
mov
add
cmpsb
je
mov
or
jnp
jle
dec
shlb
mov
xchg
flds
mov
mov
cwtl
mov
roll
popf
scas
jge
mov
subl
lret
ret
cmp
cmp
push
ds
or
mov
aam
lret
add
dec
xchg
pushf
out
lret
xor
or
push
shll
or
jle
inc
rorb
pop
xchg
add
and
inc
stc
cltd
adc
ror
rcl
loope
dec
sti
pop
inc
mov
xchg
adc
and
fstl
push
sub
add
repnz
cmp
clc
push
stos
pop
mov
push
dec
ss
fnsave
push
dec
iret
pop
lds
arpl
push
mov
fdivrl
xchg
adc
pop
roll
adc
mov
scas
ret
or
stc
sub
js
xchg
or
sub
push
cli
bound
and
adc
rcrb
add
pop
hlt
push
cmp
or
jl
or
imul
xor
jp
push
or
insb
adc
dec
mov
mov
dec
mov
jp
xchg
pop
enter
or
pop
cmpl
in
push
cmp
sub
mov
popf
and
pop
inc
pop
jge
or
sarl
enter
fadds
cld
pop
insb
push
stos
push
ds
xchg
and
or
jnp,pn
sbb
cmp
shrl
xor
cmp
cs
sub
cmp
ja
add
push
mov
add
dec
jp
ja
int3
std
lds
insb
outsl
mov
or
sbb
das
mov
mov
dec
hlt
jl
cmp
in
mov
inc
ss
scas
sbb
and
or
cld
roll
xchg
cmp
inc
add
pop
and
out
xor
gs
mov
mov
ds
std
out
sti
and
push
pusha
or
outsl
mov
mov
mov
mov
dec
fstpt
dec
inc
mov
cmp
jp
add
mov
lret
test
jl,pt
insl
into
mov
out
sub
jge
mov
cmp
lret
dec
jecxz
or
cli
dec
scas
fstp
cmpsl
das
add
das
sti
lock
ds
fistpll
loop
pop
fnsave
push
mov
jnp
or
sub
sub
add
dec
sbb
jp
loope
data16
pop
cmp
pop
pushf
jbe
add
sbb
sgdtl
popf
repz
fisubrl
int3
dec
jl
pop
sbb
in
shrl
sub
je
fsubrs
movsb
inc
pusha
mov
xlat
movsl
cld
mov
in
lret
std
ret
cltd
jp
in
adc
out
pusha
and
sbb
ret
out
or
or
testl
jmp
lret
mov
pop
ds
sbb
dec
add
and
sub
sbb
or
rorl
add
hlt
add
outsb
repz
push
sub
das
cmp
cmp
jae
push
push
cmp
andb
aaa
mov
add
das
cmpsb
xchg
cmpsl
stos
mov
iret
jg
push
xchg
les
add
jle
cmp
sub
or
je
push
dec
push
das
loopne
mov
mov
cmp
and
ficompl
jl
pop
mov
mov
inc
add
or
fiadds
ds
mov
ds
push
or
cmp
fisttps
pop
pop
lods
add
inc
push
jl
mov
subb
dec
enter
stc
or
mov
inc
mov
test
mov
mov
pop
xor
inc
fidivrl
inc
mov
shl
orl
cmp
sahf
test
test
loope
cmpsb
cmp
jb
adc
mov
ret
icebp
dec
lea
mov
add
clc
popf
mov
inc
cmp
shll
xchg
mov
insb
push
roll
jge
inc
adc
test
dec
and
pop
pop
aad
stc
es
imul
pop
mov
mov
or
jg
popa
sti
or
jge
jnp
or
push
lcall
and
sbb
push
aas
cmpb
sbb
adc
or
and
push
jmp
jp
or
dec
js
push
add
push
sbb
mov
fmuls
sub
fdivrl
fisubrs
mov
cmp
add
push
pusha
rcrb
stc
add
cmp
inc
ds
push
mov
fstpt
or
aad
repz
jbe
cld
sti
sbb
ja
mov
ror
test
fld
and
cmp
jae
fimull
sbb
ds
mov
xchg
mov
and
or
xor
mov
in
mov
push
lret
ret
test
mov
sub
xor
cmp
jg
sbb
es
insb
test
dec
or
rclb
add
cmp
add
xchg
enter
test
lock
push
cmp
in
inc
mov
mov
add
jnp
xor
and
xchg
push
mov
mov
push
dec
mov
sahf
cld
xor
mov
push
test
pop
mov
cmp
sub
jl
outsl
pusha
aas
jle
fdivrl
mov
push
cmp
cltd
push
push
mov
push
mov
fs
bound
andl
call
jecxz
dec
cmp
fnsave
pop
test
lock
je
mov
xorl
sarl
add
xor
cs
outsb
jge
fldenv
jp
cmp
pop
ds
jae
pop
fdivs
fwait
sarb
jb
dec
mov
decb
std
enter
jp
push
mov
in
cmp
xchg
mov
sbb
aad
ret
sub
or
jle
mov
jl
nop
inc
aam
inc
les
mov
inc
mov
dec
flds
push
test
pop
inc
add
pushf
fisttps
or
add
push
inc
imull
in
sbb
loope
cmp
sub
xchg
and
or
xchg
adc
iret
dec
jp
pop
int3
xchg
jo
add
lods
mov
add
cmp
adc
out
ret
cld
pusha
ds
ret
lret
cld
ds
lds
cmp
mov
xchg
loope
jl
add
adc
fldt
pop
mov
or
jg
movsb
int3
mov
lahf
sub
dec
pop
cmpb
enter
or
jnp
xor
mov
push
mov
subb
push
adc
inc
pop
fildll
mov
movsl
lahf
sub
jnp
dec
sub
xor
adc
pop
adcb
jge
fnstcw
mov
cmp
mov
pop
les
inc
cmp
fsubr
sub
adc
and
movsl
cmp
arpl
ljmp
rcl
mov
add
popa
push
sahf
js
loope
stos
add
add
cmpsb
repnz
push
stc
mov
icebp
scas
mov
adc
pop
enter
lock
pusha
add
fisttps
aam
pusha
in
sub
sbb
in
repnz
jp
inc
xchg
shr
add
pop
gs
xorb
or
lock
ljmp
clc
pop
addl
ss
mov
mov
in
fwait
imul
test
sub
mov
cmc
fstps
aam
dec
mov
xchg
xchg
sbb
ret
sbb
iret
dec
dec
lret
dec
mov
sub
lods
in
pusha
add
sub
outsl
cmp
out
fxtract
sbb
mov
fwait
mov
test
iret
mov
arpl
inc
fs
push
jo
sbb
mov
mov
sbb
data16
jl
aam
push
fisttpll
in
test
inc
jmp
fstpl
jbe
xchg
scas
das
dec
mov
pop
jmp
inc
into
dec
push
jge
inc
scas
xchg
dec
loopne
test
cs
fucom
push
cmp
pop
lret
pusha
cltd
mov
arpl
inc
push
lock
push
jo
mov
sbb
in
cltd
into
lods
cli
fstp
mov
cmp
stos
out
jnp
jge
rorl
inc
shlb
add
pop
shll
out
and
cmpsl
xor
mov
mov
inc
cmc
cmpsl
push
adc
jno
jb
push
stos
or
mov
shlb
subb
cmpsl
daa
jno
cmpsl
push
nop
adc
dec
lods
sbb
fdivrl
mov
add
sub
push
fcmovu
mov
leave
into
lock
mov
and
jp
adc
xchg
ljmp
xor
push
jl
addr16
sbb
rcll
sahf
jae
mov
cwtl
mov
mov
add
jg
add
ljmp
cld
jo
in
arpl
shll
rolb
out
jecxz
inc
pop
repnz
jbe
call
adc
push
in
mov
push
nop
xchg
jb
fwait
cwtl
addr16
lret
int
popa
inc
orb
test
cmp
sbb
sbb
dec
ljmp
outsb
icebp
sti
stos
xchg
test
imul
jns
fwait
int3
sub
popa
clc
jns
inc
jge
pop
inc
mov
or
push
mov
sub
jl
jecxz
sub
lods
xor
hlt
inc
movsb
lret
mov
inc
push
test
negb
adc
mov
lea
mov
sub
push
pop
pushf
call
add
push
ljmp
test
stc
cmp
inc
add
clc
sti
jl
aam
push
repnz
sti
movsl
sbb
mov
pop
push
clc
icebp
lahf
fsubs
fsubrl
in
push
adc
loop
jp
push
call
xor
add
adc
mov
rorb
cmp
ja
push
cmc
pop
add
dec
push
out
inc
xor
fwait
imul
les
jbe
data16
std
add
xchg
sbb
mov
jl
sbb
mov
mov
pop
pop
aas
mov
movsb
push
addr16
mov
mov
fdivrs
push
jbe
int
xchg
inc
or
imul
std
lret
pop
leave
push
and
sub
mov
cmp
ds
or
out
mov
mov
out
push
cmp
mov
xchg
and
push
sahf
xchg
pop
fcompl
adc
scas
lahf
fstpt
jle
xor
add
jne
scas
outsl
adcb
movsb
cmp
lods
cmp
roll
dec
sti
mov
xchg
adc
sarl
xchg
ds
xchg
mov
lret
mov
jnp
xchg
jne
mov
mov
and
mov
pop
xchg
mov
shlb
nop
dec
xor
push
xchg
pop
mov
xchg
jge
ret
sbbl
jbe
xor
sbb
stc
inc
pop
dec
movsl
test
pop
aad
mov
js
cltd
inc
push
mov
mov
xchg
dec
or
xor
jnp
or
dec
jge
push
inc
sub
fwait
outsb
and
imul
test
mov
cmp
ret
aad
xchg
mov
lret
sub
lret
push
sbb
in
jne
out
inc
fwait
inc
xor
pop
push
xor
ds
sub
movl
aad
int
std
or
add
mov
lods
push
int
push
insl
xor
sarl
xor
movsl
into
cmp
xor
out
test
jmp
std
adc
ljmp
xor
xchg
scas
push
jge
mov
dec
and
or
cmp
jp
out
mov
xor
sub
adc
xchg
sbb
sbb
xor
fdivl
xchg
lock
repnz
jo
xchg
mov
cmc
ret
bound
lret
mov
and
es
dec
push
lods
adc
rol
pop
push
inc
fistpll
imul
pop
inc
popf
inc
push
sbb
or
mov
sbb
add
addl
or
rorl
fwait
push
sti
lods
dec
cmp
push
stos
rolb
test
inc
data16
cltd
inc
mov
add
mov
mov
bound
cmp
into
cmpsb
push
aad
int
mov
call
pop
test
neg
adc
jg
cmp
movsl
mov
bound
or
in
ja
push
inc
push
into
int
dec
pop
jb
push
or
fisttps
loop
pop
push
repz
hlt
fstl
je
mov
and
push
pop
mov
test
sbb
fstpt
mov
inc
mov
push
inc
jo
fdivrl
hlt
das
testb
adc
rorl
enter
push
test
popa
aas
daa
sbb
std
pop
loope
add
mov
inc
sub
mov
stos
cmp
scas
enter
push
cmp
mov
cmp
loopne
xchg
or
pop
insb
cmpsl
pop
test
and
pop
pop
mov
scas
enter
adcb
dec
cs
inc
pop
pop
aas
dec
xchg
adc
inc
pop
cmp
nop
popl
aas
lret
mov
or
dec
push
inc
add
push
jo
adc
xchg
fneni(8087
jb
pop
aad
cmp
cmp
inc
leave
test
mov
test
dec
arpl
and
lods
setae
push
dec
sub
cltd
xor
sbb
cmpsb
addr16
pop
mov
dec
dec
into
fstpt
jno
addr16
stos
sbb
mov
imul
inc
or
mov
xchg
jle
mov
pop
and
pop
inc
jnp
jg
js
int3
jg
into
popf
xchg
xor
bound
xor
aaa
es
push
mov
loop
xor
pop
xchg
add
jnp
outsl
sub
xchg
and
and
rcr
adc
stos
pop
std
and
pop
into
cmpsb
test
jae
ret
inc
push
jge
mov
mov
lahf
loopne
imull
das
xchg
mov
adc
test
and
mov
imul
mov
scas
and
push
add
xchg
sub
rolb
cmp
jle
xor
inc
lret
mov
adc
sub
test
xor
nop
cmpsb
cs
out
cs
lahf
popl
pop
loopne
pop
es
lock
mov
testl
push
js
jnp
inc
fnsave
movsb
pop
daa
sarb
scas
inc
pop
test
into
loopne
cltd
lcall
jnp
push
arpl
ret
jmp
rorl
cmp
push
mov
in
push
daa
les
repz
rcrl
lods
push
push
dec
icebp
lods
loopne
sbb
pop
cmp
mov
jbe
fstl
and
clc
ljmp
inc
inc
in
xorl
add
cmp
jae
inc
int
sub
jae
out
movsb
inc
addl
in
jno
adc
aas
in
mov
std
mov
outsb
xor
jmp
mov
lahf
mov
in
pop
mov
mov
sbb
pop
mov
shrb
mov
cli
cmp
mov
lcall
daa
in
subb
mov
sub
scas
sbb
sbb
mov
or
mov
lods
in
sub
imul
mov
dec
jecxz
outsl
pop
pop
jnp
dec
mov
cmp
out
and
out
insb
lock
scas
out
mov
and
sbb
push
jmp
cltd
out
clc
subb
aaa
ret
fsub
bnd
vmovlhps
les
out
mov
xorl
adc
inc
add
inc
out
ret
mov
mov
sbb
cmpb
cmp
hlt
mov
jb
inc
jns
test
dec
test
lret
jp
test
stos
ss
rcrl
mov
pop
mov
push
loope
mov
aas
inc
pop
ds
ret
xchg
inc
rorb
sarb
push
sub
cmp
andb
cmp
cmpsb
sahf
out
inc
xchg
adc
sub
popf
xchg
add
addr16
out
pusha
cmp
and
mov
ficoml
push
aad
loopne
inc
leave
xchg
andb
and
sbb
lods
add
inc
aas
shr
xor
jb
xor
sbb
mov
fwait
jae
cmp
jne
inc
cltd
cmovb
pop
fisttpll
mov
mov
inc
mov
fisubrl
bsr
lret
dec
mov
dec
roll
add
fwait
jno
ret
cwtl
pop
mov
hlt
testl
dec
aas
dec
stos
cmp
inc
sbb
sbb
add
aam
or
fisttpll
les
pop
or
xchg
ss
and
mov
inc
pop
cmpsb
sahf
dec
add
inc
cltd
pop
cmpsb
adc
arpl
mov
popa
psrlq
and
cli
push
inc
lea
xchg
jge
inc
jl
mov
pop
inc
dec
scas
and
fst
push
cmpsb
inc
int
push
dec
inc
push
out
cmpsl
std
fs
push
xchg
gs
ss
ret
stos
inc
shlb
out
mov
adc
fdivs
fists
test
push
test
or
shrb
sbb
pop
jecxz
push
xlat
inc
popf
jp
mov
inc
fstpt
dec
andl
aaa
cmp
mov
jbe
push
aad
orl
into
test
xchg
movsl
xor
pusha
mov
lahf
mov
dec
imul
sub
jb
fmulp
inc
inc
pop
add
int
lock
test
arpl
cmp
pop
adc
xchg
jg,pt
pop
or
mov
push
enter
pop
outsl
and
pop
jae
mov
loope
cmp
dec
ja
add
pushf
inc
sbb
cmp
push
in
aaa
pop
lahf
add
jp
xchg
and
mov
loopne
movsl
scas
adc
cmp
xchg
dec
subl
or
test
cs
jns
aam
cs
loop
xchg
pop
in
mov
pop
std
sub
add
stc
cmp
data16
xchg
inc
pushf
adc
in
xchg
mov
add
jb
sub
dec
movsl
fnstsw
je
xchg
aaa
daa
pop
pop
add
clc
movsl
dec
cmpsb
cld
pop
and
shlb
jb
cmp
dec
inc
and
sub
jge
jg
repnz
inc
sub
fwait
repz
cmp
stos
jbe
pop
inc
orl
lret
inc
xchg
testb
pop
test
je
mov
aam
xor
in
pop
push
push
and
dec
push
or
jecxz
fnsave
mov
in
inc
lods
fcompl
sub
dec
ret
dec
ds
or
movsl
and
stos
and
jl
fists
out
rorl
outsl
push
gs
push
jnp
mov
jne
mov
sbb
in
sub
imul
lods
fnsetpm(287
pop
daa
and
decb
add
dec
cmp
inc
lret
xchg
xor
jmp
add
mov
pop
jle
adc
subl
mov
out
jge
xor
ss
rorb
mov
sbb
movsl
fisttps
lahf
sub
sub
sti
inc
cmp
test
icebp
push
pushf
dec
sbb
jg
addl
dec
mov
lods
andl
fildl
push
sub
fsubs
add
testl
and
enter
cmp
test
add
mov
repnz
mov
cmp
mov
shll
fsave
cmp
test
jg
movsl
mov
ss
fsubrs
scas
ja
test
dec
pop
ss
test
jnp
push
push
mov
pop
add
in
and
cmp
stc
xor
mov
and
outsb
mov
movsl
xor
push
pushf
mov
add
push
inc
add
lea
push
inc
push
add
sub
scas
xchg
fwait
pop
inc
jne
or
je
pop
roll
cmpsl
xchg
cli
add
mov
jne
imul
jmp
scas
or
inc
inc
int
cmp
jge
push
aam
cmp
daa
xor
icebp
mov
es
mov
cmpsb
and
xor
insb
sub
pop
out
and
sub
adc
call
incl
flds
or
fstpt
jle
push
jbe
sub
pop
mov
lds
cwtl
cmp
movsl
sbb
jg
lret
stos
xchg
test
fwait
sub
lea
pusha
nop
sahf
inc
add
mov
andb
sub
mov
and
shlb
add
push
jns
call
rol
dec
insb
fidivrs
sub
enter
inc
into
cltd
push
out
pop
cmp
sbb
xor
mov
push
add
aad
inc
dec
arpl
add
out
daa
test
call
dec
pop
inc
xchg
mov
fwait
movsb
sbb
inc
cmovns
out
mov
fcomps
xchg
mov
xlat
push
cli
xchg
mov
xor
pusha
adc
mov
inc
arpl
inc
insb
cmp
add
inc
jg
add
mov
hlt
mov
clc
push
sub
adcl
outsl
xchg
sbb
pop
popa
xor
pop
packsswb
lret
cmp
roll
repz
pop
pop
mov
inc
lret
sub
imul
or
and
andl
push
data16
cmp
or
imull
ds
jl,pt
add
adc
dec
std
jg
fisttps
mov
fdivr
das
inc
xchg
pop
push
dec
iret
ret
mov
add
mov
cmpsl
stc
adc
mov
mov
xor
imul
stos
xlat
stc
dec
jp
xchg
pop
xor
leave
subb
movsb
lods
xchg
scas
fimuls
xchg
roll
dec
imul
loopne
scas
mov
xor
xchg
xchg
scas
push
push
mov
push
jge
xchg
cmp
mov
gs
mov
mov
push
movsl
out
xor
enter
dec
dec
dec
sbb
and
sub
mov
je
lods
out
dec
lret
lock
jle
scas
dec
into
stos
ret
mov
paddusb
xchg
xchg
and
adc
xor
mov
or
divl
xchg
dec
out
jg
xchg
inc
mov
jnp
int
pop
and
inc
lea
xchg
cld
mov
mov
pusha
es
sahf
lea
pop
sbb
clc
jnp
pusha
out
mov
mov
mov
fldl
mov
inc
arpl
xchg
xor
filds
adcb
mov
mov
mov
test
push
dec
mov
fimull
std
or
aad
cmp
repnz
lock
movsb
adc
sub
sbb
out
pop
loopne
ds
addr16
jge
insl
xor
test
sbb
mov
mull
ffreep
fidivl
sbb
inc
js
jge
ljmp
js
sub
push
add
js
das
mov
cmpl
push
pop
mov
jg
push
pop
sahf
jo
or
ja
aaa
ds
xchg
xlat
js
inc
sbb
mov
xchg
cmc
sub
mov
pop
mov
pop
pop
mov
and
inc
adc
jmp
fbstp
jle
ljmp
imul
mov
std
cmp
stos
mov
inc
es
movl
adc
icebp
clc
loope
loopne
mov
add
bound
into
mov
xor
rcrl
scas
xor
mov
lock
or
add
or
add
repnz
mov
outsb
pusha
sub
fwait
inc
orl
xchg
dec
decb
mov
add
pushf
lret
sub
frstor
jo
mov
jns
adc
cmp
lods
jno
add
mov
in
adc
ds
aam
out
mov
push
and
dec
addr16
sbb
aas
int
dec
sti
imul
jb
rcl
and
mov
sarb
bound
jae
xchg
sbb
cmp
mov
mov
sbb
jecxz
cmp
popa
out
inc
xchg
pop
fmuls
ficoml
mov
mov
mov
mov
ja
mov
cmp
dec
scas
mov
test
add
pop
jb
push
lret
jns
push
sub
jbe
jns
das
jbe
push
mov
jb
out
jge
into
add
repnz
xor
je
dec
cmp
mov
mov
mov
sbb
lea
sub
jns
jae
add
xor
jp
sbb
dec
mov
ds
push
jp
inc
out
push
out
insl
xchg
test
fucom
outsl
xchg
add
push
cmp
jge
mov
xor
sub
bound
std
push
dec
mov
cmpsb
fwait
cmp
inc
pop
inc
mov
push
fs
repnz
sbb
mov
pusha
pop
and
cmp
sbb
movsb
stc
lea
cmp
imulb
imul
ja
mov
dec
ss
pop
outsl
aad
xchg
and
int3
mov
add
mov
mov
xchg
mov
mov
std
sub
ljmp
xor
fdivl
mov
shll
dec
adc
push
test
fisttpl
xchg
rcll
mov
lahf
jno
arpl
ror
mov
clc
and
dec
arpl
pop
stos
cs
in
outsb
adc
bnd
xor
push
out
or
shlb
xor
inc
inc
cmovbe
lods
ficompl
stos
clc
inc
inc
dec
call
xchg
inc
rcrb
hlt
dec
out
push
addb
mov
lods
fbstp
mov
jecxz
jg
sub
add
aaa
xchg
push
aam
inc
jnp
jno
int
adc
jl
andb
imul
mov
out
mov
repz
iret
fbld
test
adc
std
adc
xor
divl
mov
jle
and
outsb
data16
lcall
in
adc
jne
fwait
cmp
sbb
test
jge
outsb
and
and
pop
pop
or
fcmove
inc
out
mov
std
mov
or
and
mov
repz
jnp
insb
sbb
in
andb
xchg
mov
sahf
push
repz
xlat
and
or
int
mov
xchg
imul
inc
lahf
mov
sbb
rcr
scas
cmp
fstpt
sbb
add
in
xor
lds
mov
fisubrs
shlb
xchg
dec
mov
cmpsb
decb
xorb
push
iret
js
cmp
outsl
lods
out
push
adc
dec
cmp
lcall
cli
mov
cmpsl
jne
lret
xchg
sbb
lahf
or
ds
adc
adc
push
fwait
cmp
pop
outsl
mov
sbb
inc
xchg
out
jl
insb
inc
shrl
lahf
mov
add
jge
xchg
adc
data16
scas
mov
mov
inc
jecxz
push
mov
shlb
in
cmp
arpl
sbbl
mov
je
pop
fwait
pop
cmp
stos
pop
inc
xor
push
jge
or
xchg
add
lds
jns
jge
push
push
jne
jmp
pop
dec
dec
fs
sbb
movsb
idivl
mov
pop
lret
fs
cwtl
push
dec
jle
pop
frstor
xchg
jno
ja
testb
movsl
sub
lcall
jb
push
rcr
xchg
mov
movsb
pop
pop
add
aad
adc
inc
dec
inc
jb
in
mov
jmp
pop
jmp
adc
dec
cmp
push
cmp
dec
pop
dec
stos
hlt
sahf
jb
fsubrs
pop
lods
test
je
lcall
lahf
mov
repz
pop
add
cmpsl
lods
dec
sbb
and
pusha
adc
add
test
cmpsb
xor
les
lods
frstor
aam
call
sbb
mov
xchg
loopw
pop
ret
dec
pop
lods
jno
cmp
dec
int3
jmp
shrb
jns
sbb
imul
sbb
daa
and
mov
push
inc
in
xchg
add
daa
cmp
aas
add
push
jl
inc
fstpl
sbb
inc
mov
int3
int
push
mov
inc
arpl
lea
sub
mov
mov
rcll
inc
jae
mov
inc
jno
mov
stos
sbb
jnp
add
inc
xlat
pop
cmp
jp
dec
ffree
add
or
into
push
push
cmp
xor
mov
call
dec
xchg
and
add
xor
repnz
sub
push
pop
lcall
repz
inc
sbb
push
and
inc
pop
loop
cmpb
or
push
cmp
in
sti
fistps
int3
dec
mov
adc
inc
jle
jno
mov
xlat
ja
jl
adc
mov
std
pop
mov
out
pop
mov
mov
xchg
inc
mov
outsl
call
scas
iret
inc
and
outsb
mov
repz
ret
mov
loop
add
jg
in
inc
std
adc
mov
fidivrs
inc
push
sub
cmpsl
cmp
repnz
call
repz
iret
imul
mov
adc
outsb
imul
ds
shll
mov
push
jle
in
cmpsb
adc
inc
testl
and
in
data16
in
test
inc
sbb
daa
int3
cmpsl
sbb
push
mov
dec
loop
jecxz
fwait
cmp
lock
pushf
ficompl
mov
cltd
jge
mov
xchg
mov
mov
shll
nop
mov
xchg
inc
push
inc
mov
dec
sub
mov
idivb
data16
mov
mov
dec
cmpsl
push
rcl
in
cld
int3
sbb
hlt
add
out
cmpb
and
mov
jno
lods
push
popa
enter
cli
mov
popa
add
cmp
sarb
out
or
jg
jl
hlt
cs
inc
push
xchg
mov
scas
stos
cld
xchg
adc
fmull
push
lds
jne
cmp
push
popf
or
jbe
cltd
ror
push
stos
cwtl
les
xor
inc
mov
sbb
es
clc
jb
jns
ss
cmpb
fistl
aas
push
mov
dec
adcl
add
rcl
outsb
jle
aam
test
jge
negb
pop
jb
mov
stos
mov
cmp
dec
pop
sbbl
cli
adc
pop
dec
roll
jle
into
repz
pop
jmp
mov
or
jmp
pop
sub
lock
xor
sub
jp
nop
pop
xor
jb
sbb
stos
fcomip
or
fldl
dec
xchg
cmp
aam
sbb
test
imul
inc
inc
adc
stc
cmp
xchg
jnp
mov
push
jge
nop
repz
dec
xchg
ret
cmp
xchg
mov
loop
jecxz
ds
movsl
aad
xlat
dec
cs
dec
popa
test
inc
mov
je
cltd
dec
mov
mov
lret
int
push
lea
mov
cmp
inc
testb
stos
adc
inc
fwait
pushf
cmp
test
cmp
pop
mov
jnp
jo
jge
xchg
lods
xchg
fcomp
jmp
inc
fbld
fidivrl
xchg
ja
fs
andl
dec
aaa
mov
int
es
xor
lret
lock
xchg
xlat
cmp
mov
sub
lods
jp
rcrl
add
pop
movsb
stos
sbb
pop
jp
inc
cmp
loop
or
aaa
adc
pop
pop
ja
and
and
sbb
mov
aaa
movsb
ret
jg
xchg
mov
test
fisubrs
cmp
stc
dec
or
pop
mov
xchg
dec
cmp
push
imul
inc
pop
mov
xor
in
fcmove
mov
repz
inc
adc
std
mov
adc
xchg
or
sbb
xor
lcall
out
ljmp
adc
ja
mov
stos
test
je
mov
mov
and
jo
add
jmp
jno
add
loope
and
clc
pusha
mov
shlb
data16
ljmp
imul
incl
in
jne
ret
leave
or
push
jno
jmp
push
cmp
out
mov
jmp
mov
in
cltd
subl
mov
mov
test
stos
sti
jl
xor
xchg
cmp
flds
pop
mov
add
inc
add
jns
mov
fcomi
jb
and
mov
test
inc
inc
addb
inc
lcall
insl
adc
mov
inc
test
push
jb
lea
pop
and
and
sub
in
cmpsl
sub
sbb
xor
sbb
test
jp
mov
std
xchg
rorl
loope
and
mov
and
add
popa
cwtl
cld
cmpsl
cmp
adc
dec
sbb
inc
ror
mov
sbb
jge
ret
inc
xchg
arpl
icebp
loop
mov
shl
inc
mov
out
dec
mov
xor
lods
je
lods
push
mov
push
stos
test
fiaddl
jo
lock
mov
xchg
inc
sub
xor
sbb
and
mov
mov
enter
or
mov
imul
push
aas
adc
mov
mov
inc
test
xchg
jae
jb
hlt
jno
xchg
mov
js
mov
jecxz
stos
cmp
loop
inc
ljmp
or
test
pop
jge
fst
bound
rcrl
aaa
xchg
add
pop
mov
cmp
jo
mov
inc
or
jbe
mov
inc
repnz
inc
in
aad
mov
mov
nop
jle
dec
pop
push
incb
cli
xchg
mov
push
mov
mov
lret
fsubp
lods
rcrl
mov
mov
lods
lods
push
or
xchg
into
xor
add
xchg
arpl
cmc
mov
mov
repnz
popf
mov
and
or
pop
add
daa
sub
lea
ret
and
inc
mov
sar
aaa
fsub
pop
pop
mov
pop
movsb
push
out
cmp
dec
sahf
sbb
jb
mov
and
inc
lds
dec
ds
push
inc
in
jg
out
jmp
cmp
mov
aas
xchg
xchg
add
pop
jecxz
jb
in
and
or
push
mov
imul
out
ret
mov
dec
adc
mov
xchg
hlt
dec
or
sti
sub
adc
aam
mov
push
rcrb
jae
dec
sbb
push
ljmp
cmp
pop
out
jbe
out
in
data16
fmul
test
in
and
nop
jb
and
in
das
in
out
fcompl
stos
cld
jle
jmp
into
cmpsl
adc
jg
mov
pop
add
and
bound
jnp
adc
rcll
nop
jmp
dec
aad
xchg
in
mov
out
adc
jmp
mov
lret
lock
xchg
subl
pop
sub
push
dec
xchg
push
popf
sub
jge,pn
sahf
dec
and
movsl
je
fwait
jecxz
add
mov
mov
mov
inc
ret
call
inc
cmpb
xchg
add
cld
lahf
es
xor
xor
inc
int
repnz
movsl
xchg
aaa
pop
pushf
push
mov
rcll
mov
jge
xor
xchg
scas
jmp
inc
jge
mov
mov
add
arpl
mov
sbbb
loopne
and
mov
arpl
cs
mov
jmp
mov
mov
les
pushf
lds
fldcw
add
bound
inc
adc
push
inc
mov
into
push
jno
and
mov
jns
cmpsb
sahf
xor
outsb
cmp
rolb
and
xor
outsb
add
dec
sub
out
lds
push
and
adc
aas
xchg
pop
imul
inc
push
pop
sub
mov
sbb
xor
xchg
cs
pushf
cmp
pop
push
cs
push
pop
jnp
test
sti
jo
bound
call
push
dec
mov
mulb
push
jge
call
mov
mov
jbe
mov
push
jb
cmp
test
dec
negl
and
mov
adc
jp
dec
loopw
xchg
fildl
sub
mov
pop
jecxz
push
mov
push
and
cmp
inc
jmp
dec
adc
cmp
jmp
dec
sbb
jo
lock
das
lcall
push
adc
test
dec
mov
pop
push
mov
xchg
and
in
inc
faddp
es
mov
je
jnp
aas
sub
sbb
mov
lods
ss
inc
mov
repnz
push
stc
push
rcrb
or
bnd
pop
mov
mov
inc
add
in
jae
outsl
clc
inc
push
jp
pushf
pusha
push
into
outsb
fidivrl
mov
call
cld
aas
in
jge
push
scas
les
std
jbe
xlat
lds
ja
inc
cmp
sub
lods
pop
loop
mov
pop
inc
sti
xchg
fidivs
enter
ljmp
jb
cmp
mov
push
inc
daa
jno
cwtl
pop
add
mov
insb
pop
arpl
filds
nop
lea
mov
push
mov
push
cmp
inc
cli
dec
and
xchg
lea
cpuid
add
jge
adcb
add
js
imul
decl
push
fnstcw
std
xor
scas
sbb
dec
pushf
jae
jle
mov
outsb
inc
xor
jp
sbb
push
or
repnz
aad
mov
inc
lock
call
xchg
fwait
jge
jecxz
sub
popf
dec
lds
testb
add
outsl
jnp
inc
andb
roll
inc
lock
or
lods
cmp
data16
inc
ds
mov
push
sti
lods
test
lea
test
movsl
add
scas
sub
lock
fmull
lahf
pop
dec
inc
or
sub
insb
jbe
loope
adc
stos
aam
sub
and
push
aaa
enter
inc
mov
jno
xor
sti
pop
out
movsl
dec
add
inc
sbb
ss
and
test
push
jecxz
lods
loopne
das
cmp
icebp
test
repnz
cmc
icebp
xchg
test
in
dec
aas
and
xor
mov
lock
jge
push
jns
cmp
xchg
cmp
pop
push
and
xor
leave
mov
int3
fwait
inc
push
and
push
cld
adc
sahf
daa
mov
out
leave
inc
adc
sbb
popa
cmp
inc
adc
out
and
ret
jae
xor
jbe
jo
je
lahf
xchg
std
loop
cmp
test
mov
mov
xchg
xchg
leave
dec
stos
xchg
add
push
mov
push
adc
push
sub
pop
arpl
jge
adc
xchg
dec
daa
bndstx
mov
dec
xlat
jge
push
sub
lods
xchg
mov
dec
push
lahf
inc
leave
inc
push
stc
push
and
insb
cltd
pop
jg
lods
pop
add
outsw
scas
stos
insl
xchg
push
push
cmp
xchg
sbb
pop
dec
pop
pop
in
mov
cmpl
and
cmp
je
scas
mov
stos
jno
pusha
or
fisubl
push
pusha
xchg
aas
test
inc
shll
lcall
mov
shrb
out
jp
int
dec
shlb
dec
push
dec
xor
and
fwait
push
jns
jge
pop
aad
dec
cld
shll
mov
movsb
mov
fildl
and
sbb
loop
in
adc
subl
inc
fwait
jge
push
mov
lret
into
add
out
popf
cmp
add
adc
xor
lea
mov
sbb
pop
into
jo
xchg
pop
mov
pop
jp
jbe
jnp
sbb
mov
inc
stos
xchg
stos
sbb
clc
add
mov
push
jmp
sbb
pop
dec
inc
push
fs
outsb
cs
jmp
inc
bnd
xchg
lret
add
and
mov
sub
repz
sahf
adc
mov
aaa
das
ret
aad
cli
mov
shll
aaa
mov
inc
sbb
jp
dec
sahf
sbb
mov
cmp
mov
sbb
add
repz
aad
in
mov
cltd
mov
lea
test
fdivr
jno
mov
popf
lahf
ret
fmulp
stc
jle
pop
adc
push
pop
sub
sbb
push
xchg
push
cmp
adc
cltd
inc
shll
and
jb
clc
dec
jbe
sub
inc
sbb
pop
or
and
adc
sbb
lea
dec
lods
rol
xchg
sub
or
testb
jge
mov
imul
cmp
push
mov
jne
cmp
inc
das
or
aaa
gs
lret
imul
push
enter
push
push
ja
pop
decl
and
mov
push
xor
adc
add
sbb
push
jno
sbb
arpl
push
test
jns
and
fisubrl
cmpsl
sub
sub
xchg
aam
cmp
sub
jge
mov
in
pop
out
xrelease
inc
jmp
pop
pop
xor
sti
jae
inc
cmp
adc
movsl
je
fisttps
mov
insb
sub
xor
mulb
inc
andb
ret
test
sub
pop
and
mov
push
cmp
lods
leave
jg
and
sbb
mov
xor
inc
adc
xor
lea
int
fcomp
xchg
sbb
jl
scas
cmp
nop
xchg
repz
mov
xchg
iret
pop
pop
inc
jnp
push
mov
stos
popa
mov
mov
pop
movsb
inc
stos
mov
jl
mov
aad
or
outsb
lret
jb
inc
fnstcw
cmp
mov
xor
lods
or
xor
sahf
mov
cmp
fnstsw
or
xchg
shrl
mov
mov
cmp
lahf
sub
sbb
lret
pmaddwd
and
push
fistpl
cmpsl
jo
mov
in
mov
mov
mov
inc
add
cli
xchg
jle
xchg
in
int
push
pusha
stos
fs
cltd
pop
mov
fisttps
mov
mov
or
add
and
xchg
rcrb
jbe
push
enter
inc
and
and
out
out
sbb
nop
shll
je
inc
stos
mov
jge
mov
mov
orl
rorl
sbb
push
or
pop
dec
mov
nop
jne
cmp
and
clc
loop
xchg
je
mov
mov
jecxz,pn
mov
mov
and
insl
sub
fcom
int
sbb
test
inc
fst
aam
inc
sbb
mov
inc
pop
push
rep
cmp
push
xor
ja
iret
sti
dec
fiadds
out
shrl
dec
cmpb
daa
jmp
cmp
mov
test
sbb
xchg
mov
adc
inc
cmp
or
and
mov
or
popa
pusha
pop
arpl
pop
sbb
dec
xchg
xor
cmp
mov
loop
call
mov
in
push
inc
clc
lea
jle
mov
out
and
pop
cwtl
aam
push
jge
add
add
test
push
jnp
sbb
cmpsl
mov
inc
dec
mov
xor
jl
mov
rolb
pop
loope
icebp
mov
roll
test
pop
es
insb
ljmp
hlt
fistl
adc
out
inc
dec
cli
sbb
test
mov
loopne
ja
xor
jge
jge
leave
out
std
gs
cs
jecxz
sbb
pop
cmpsl
cmp
addl
jne
mov
adc
mov
and
xchg
fucomp
jmp
shrl
stc
insb
test
inc
inc
mov
std
mov
aad
test
pop
sub
scas
clc
pop
pop
lcall
push
adc
ljmp
pop
pop
fisubl
sbbl
mov
cmp
and
and
test
fisttpl
ja
add
jge
mov
pop
in
iret
stc
lods
and
int3
inc
cmpsb
cmp
push
inc
inc
cs
sbb
inc
cmp
cmp
inc
rcrl
clts
jmp
add
pop
mov
push
cmp
ljmp
das
dec
mov
cmpsl
or
sbb
and
sbb
adc
push
sbb
lea
cltd
inc
pop
cwtl
into
jecxz
xor
push
lahf
xlat
push
arpl
xor
stc
pushf
daa
mov
cmpxchg
pop
push
into
and
mov
cmpsb
jmp
sub
scas
lret
test
pushf
cli
out
out
mov
mov
fwait
pushf
pushf
insb
je
inc
and
and
push
mov
in
mov
cltd
js
daa
lock
pop
jmp
push
jns
cmp
jbe
inc
in
push
in
fmul
hlt
pop
jle
dec
adc
jnp
data16
ret
cmpsb
scas
or
xchg
sub
cwtl
add
imul
popf
push
jge
test
lods
rcl
stos
sti
dec
push
sahf
jl
adc
cmp
xchg
pop
mov
and
add
xchg
mov
out
adc
sub
sbb
int
std
sub
jp
aad
xchg
jbe
mov
andb
xchg
adc
cmpsl
or
mov
aam
fnsave
int
in
dec
call
dec
and
pop
in
dec
fstpl
adcb
jbe
dec
xrelease
dec
sub
sbb
push
and
sub
xchg
fisubl
enter
mov
rorb
or
cmp
jno
fwait
push
add
fcmovne
mov
bnd
idivl
cmpsl
mov
inc
jmp
sbb
nop
jnp
add
lock
lahf
scas
jb
sti
fs
mov
cmp
inc
pop
out
push
aaa
test
scas
cmpsl
jmp
mov
lret
mov
add
sub
pushf
jp
inc
int3
sar
cli
xchg
into
aam
test
loop
subb
jb
je
insb
outsb
clc
cmp
xor
jge
pop
bound
jne
cmp
cli
mov
or
lret
fisubrs
movl
mov
les
aaa
jmp
rep
jb
lret
movsb
mov
sbb
pusha
aas
fdiv
mov
lea
cmc
sbb
stc
mov
adc
inc
mov
mov
dec
and
xor
or
adc
outsl
and
stos
dec
sbb
adc
popf
mov
ja
call
out
pop
lods
push
push
cmp
mov
icebp
xchg
test
pop
stos
push
rcl
jmp
jbe
and
iret
or
pushw
out
add
mov
in
inc
mov
insb
and
push
shlb
mov
rcrl
cld
insl
sbb
or
jge
test
jae
mov
loopne
push
sbb
push
mov
push
sbb
fcomps
rcr
adc
push
cltd
fwait
leave
cmpb
sbb
cmc
fnstenv
mov
sti
aam
popf
jae
or
mov
iret
mov
fisubs
outsl
sti
push
ds
pop
push
mov
sbb
addb
repz
dec
lret
pop
test
jb
rorl
mov
adc
or
inc
mov
cs
mov
popf
sbb
ret
movsb
or
pop
jg
inc
inc
les
sbb
mov
add
pop
outsl
pop
and
js
cmp
or
test
jnp
inc
cmpsb
add
xchg
dec
fwait
dec
sar
in
nop
fidivrl
leave
push
mov
inc
mov
sub
xorl
aad
dec
add
icebp
cmp
imul
ret
fldt
sub
in
mov
lods
fs
or
push
arpl
mov
push
jo
pushl
adc
shl
lock
shll
in
arpl
push
jno
jle
ret
adc
mov
pusha
push
mov
add
shlb
loope
jl
inc
shl
pop
cmpsb
jg
insb
sub
inc
daa
vdivss
fucomip
sub
pushf
add
insb
outsb
pop
xchg
cld
jp
jecxz
jge
adc
repnz
rcl
cs
cmp
xchg
lea
into
xchg
mov
es
jbe
call
inc
scas
mov
or
fdivrl
adc
or
out
mov
xchg
mov
pop
lods
add
pop
movsl
popf
mov
add
pop
jne
or
jecxz
or
les
sbb
bndstx
rcl
test
iret
sub
mov
pop
add
jbe
je
sub
jmp
xchg
daa
pop
mov
sub
cmpsl
test
mov
or
in
stos
subb
mov
fldt
int
pop
loop
adc
es
movsl
or
push
and
jp
ja
adc
loope
lret
mov
jb
sarb
movsl
and
out
mov
pop
bnd
mov
jg
mov
test
dec
jae
cmpsl
lds
inc
dec
adc
fwait
mov
jae
mov
sub
imul
ficompl
or
and
cmp
ss
jle
pop
out
out
cmp
adc
xor
and
xchg
xchg
mov
inc
mov
in
out
outsb
cmpsl
jmp
dec
fs
roll
icebp
loopne
add
rep
scas
jmp
repnz
dec
fwait
add
pop
jle
test
pop
movsl
mov
es
and
aas
cmp
std
insb
jae
aas
cmp
lock
fistpl
aam
movsb
test
push
inc
jae
push
xor
js
test
inc
lret
dec
xadd
pop
cs
cmp
mov
movsb
mov
push
je
fsubrp
test
push
mov
test
dec
push
mov
push
cmp
movsl
mov
and
mov
sbb
jns
pop
jnp
jge
repz
xlat
pop
shl
and
pop
mov
stc
push
xor
mov
inc
fs
ljmp
xchg
mov
mov
les
dec
pop
dec
js
scas
nop
addb
jge
sub
pop
add
mov
jb
mov
in
push
mov
lods
cmpsb
outsb
jne
cmp
mov
jnp
mov
arpl
lods
lea
jno
pop
sti
add
inc
lods
ret
imul
sub
int3
les
fwait
jae
lea
pop
cltd
jle
push
jg
jbe
movsb
stc
inc
dec
inc
insb
outsl
ror
or
xchg
jecxz
jmp
inc
lcall
mov
add
add
mov
sti
push
xchg
inc
xchg
ds
jmp
or
jns
lret
sahf
mov
inc
pop
in
repnz
mov
stc
outsl
inc
or
pop
aad
sti
xchg
sbb
jo
sbb
imul
loopne
push
pop
pusha
mov
push
xchg
gs
add
ret
xchg
test
fiaddl
ljmp
and
push
mov
add
cmp
movsb
fs
xchg
pop
or
cmp
xlat
jl
lock
push
cmp
pop
movsl
in
dec
aaa
fs
ret
xor
test
loop
fildl
sub
xor
fwait
sbb
inc
xchg
jo
out
cld
je
add
sarl
sbb
cmpsb
mov
and
inc
dec
xchg
addr16
inc
int
sar
call
in
pushf
sub
leave
ds
mov
inc
int
dec
std
pop
imul
mov
push
das
jb
aas
cmpsl
outsl
jl
xor
out
int3
cmp
xor
jmp
scas
enter
daa
xchg
clc
pop
or
repnz
mov
xchg
repz
pop
test
aas
fdivl
insb
xlat
sub
inc
into
out
inc
dec
in
sbb
rcrb
push
arpl
lock
inc
sbb
jns
loopne
xor
in
jae
inc
and
fnstcw
int3
test
es
call
jo
dec
movsb
cmp
mov
dec
sub
adcl
dec
mov
xchg
adc
test
pop
xchg
mov
insb
insl
sub
add
int
js
shrb
mov
or
out
sbb
cmp
xchg
push
cmp
inc
out
iret
adc
mov
xor
push
jecxz
lret
mov
dec
loop
mov
jno
inc
mov
mov
into
cli
and
arpl
add
flds
pop
inc
ljmp
cltd
data16
addr16
mov
xor
push
jo
xchg
mov
sahf
movsb
xorl
sbb
sbb
insb
sub
xor
dec
jno
push
add
mov
inc
push
test
cmc
mov
mov
push
push
test
movsb
cmp
popf
fcompl
outsb
loop
dec
jg
inc
aad
aam
sbb
adc
jge
cmp
stc
mov
push
js
shl
jbe
add
outsb
sub
xor
ss
nop
lahf
jle
and
xchg
mov
inc
stos
cmp
add
adc
sbb
fs
ret
mulb
adc
xchg
out
and
sahf
and
lcall
cmp
cmp
decb
mov
popa
adc
xor
mov
cmp
sub
inc
cmp
inc
je
mov
lods
fldl
mov
imul
sbb
ja
push
jge
loope
push
imul
sbb
mov
rcrb
js
jnp
jnp
fnsave
out
repz
mov
arpl
fistpll
clc
push
and
dec
imul
lock
fcmovbe
pop
pop
ret
fisttps
mov
pop
pop
or
jns
out
cmp
jnp
xchg
pop
jb
mov
and
ljmp
jb
lock
movsl
dec
push
dec
ja
sub
das
mov
out
push
push
cmp
cmp
rep
pop
lods
push
leave
into
sbb
ds
and
outsb
cmc
in
or
or
out
xor
add
xchg
push
test
pop
addl
sti
mov
inc
stc
ljmp
or
sub
or
xor
stc
inc
mov
xchg
cmp
xchg
push
inc
mov
pop
dec
pop
adc
xor
push
data16
das
xlat
and
mov
jl
mov
cmp
test
js
inc
push
jnp
outsb
adc
int3
inc
add
mov
in
jl
int
mov
add
jge
jnp
xchg
pop
mov
repz
cmp
mov
xor
insb
inc
fcomps
xchg
inc
nop
xchg
inc
xor
jmp
sub
pop
and
mov
inc
push
scas
jge
arpl
sbb
shr
ss
aad
adc
into
pop
enter
cmp
mov
ds
lods
or
aas
adc
jae
gs
inc
stc
dec
mov
xchg
addb
cmpl
sub
mov
daa
loopne
lods
dec
popa
shrl
je
push
cmp
clc
add
daa
in
and
mov
add
in
xor
and
add
movsl
mov
popa
mov
and
xchg
xchg
stc
push
scas
out
je
lret
out
xchg
lds
addr16
fnstcw
ljmp
sti
or
clc
test
mov
test
push
stos
inc
mov
lea
dec
mov
dec
sbb
mov
and
nop
sbb
lods
mov
jge
mov
rorb
pop
xchg
ret
mov
jge
lret
mov
mov
xor
mov
mov
out
fnsave
add
jmp
xor
and
icebp
mov
and
xor
dec
push
sub
adc
lock
push
test
mov
add
push
jb
int
sti
sbb
mov
adc
xor
lret
fwait
lea
jge
pop
cli
lds
mov
dec
insb
mov
insl
mov
cmp
int
jg
in
mov
lcall
in
xor
and
sub
dec
fistpll
cs
mov
dec
hlt
add
add
aaa
ja
popf
mov
jle
pop
lcall
notb
insl
decl
lea
xor
and
aam
sbb
jecxz
loope
cmp
jge
jbe
mov
cs
lods
ja
std
push
sub
xchg
mov
push
push
fldcw
jecxz
in
add
jbe
inc
in
daa
xor
roll
lock
push
js
xor
cli
jge
loope
push
dec
das
mov
sub
out
xchg
orl
jne
inc
mov
xor
pop
sti
push
mov
add
dec
push
rcrl
scas
push
or
scas
and
mov
cmp
push
dec
cmp
xchg
loopne
pop
adc
fmuls
cmp
sahf
hlt
sbb
aad
sub
out
add
jecxz
xor
insb
mov
mov
call
sub
mov
xchg
jecxz
fwait
cld
fmuls
pop
sti
inc
roll
cmp
aad
pop
or
inc
cmp
sbb
movsb
dec
outsb
cli
std
std
sbb
fildll
shrl
ss
mov
ds
into
adc
dec
push
pop
pop
loop
sbb
es
test
adc
lods
inc
daa
pop
int3
repz
iret
js
int3
sub
inc
mov
cmpsl
in
mov
inc
in
mov
dec
pop
enter
dec
pop
test
dec
push
jle
mov
sub
pusha
push
ror
xor
mov
cmp
dec
mov
and
pop
ljmp
dec
loopne
js
mov
push
sub
roll
iret
push
dec
cmp
jle
dec
jno
push
stos
push
mov
lods
xchg
inc
popa
pusha
cs
mov
adc
jl
mov
test
jb
fstl
in
ljmp
test
add
jns
sub
sub
adc
test
cltd
adc
xchg
jge
mov
test
fcomps
pop
push
repz
mov
shll
jo
outsl
loope
add
pop
and
cmp
mov
sub
jb
in
mov
test
out
adc
nop
lret
xlat
cmc
iret
push
jbe
xlat
add
icebp
adc
nop
scas
dec
dec
ret
sub
or
int3
push
idivb
outsb
jecxz
dec
cwtl
xchg
cmp
mov
aad
notl
jp
jp
sub
and
int3
pop
adc
sub
add
inc
pop
out
arpl
repz
scas
dec
push
inc
test
cli
mov
push
ljmp
pusha
add
loope
push
cmp
shl
xor
dec
mov
jb
inc
push
ja
push
xchg
add
mov
jo
cmp
jl
push
jns
fwait
and
addr16
sub
cmpsb
lods
outsl
jecxz
outsl
data16
sti
jb
add
enter
ja
mov
inc
ljmp
aam
ret
dec
test
or
jne
stos
pop
lret
outsl
pop
cmp
rorl
sbb
popa
bound
dec
mov
mov
dec
xlat
enter
push
dec
lahf
inc
mov
into
pop
into
sti
jle
mov
push
jmp
int3
pusha
push
ds
cmp
mov
fildl
bound
or
repnz
mov
push
inc
push
cmp
in
xor
test
push
fcomi
xor
dec
add
push
xor
sub
imul
xchg
aas
push
lret
inc
adc
ja
test
and
mov
scas
jl
sti
jg
icebp
and
imul
lret
es
sar
es
mov
icebp
idivb
xchg
xchg
inc
mov
inc
push
into
movsb
sbb
in
sub
lods
pop
inc
aam
in
push
addr16
xor
cs
in
and
in
add
les
lods
enter
orb
sbb
movsl
push
cli
into
pop
addr16
fstl
scas
cmp
jge
jb
or
ret
jbe
repz
mov
sub
rep
stos
mov
xchg
mov
sbb
fiaddl
xchg
dec
inc
add
inc
push
adc
cmp
add
cmpsl
aam
pop
lods
inc
js
enter
test
mov
fldt
sbb
inc
or
out
lea
sbb
dec
lahf
add
sbbl
xchg
in
iret
out
jmp
cmp
add
pop
jbe
arpl
jmp
pop
jo
cmp
dec
and
lret
jb
out
mov
ret
lock
sbb
mov
adc
leave
inc
aaa
xchg
jnp
push
mov
mov
jp
movsl
mov
dec
in
cmp
ss
push
sub
add
push
mov
inc
loopne
add
xchg
xlat
pop
mov
pop
mov
mov
cmp
push
pop
cmp
orl
out
mov
xor
mov
or
sbb
in
sbb
jecxz
xchg
add
std
mov
jmp
mov
inc
dec
repz
sbb
mov
dec
add
rcrb
aaa
rcl
in
jp
sbb
std
stos
push
inc
ret
push
mov
jmp
add
add
dec
mov
mov
pop
inc
loopne
pop
push
cwtl
jecxz
pop
cmc
dec
adc
xlat
mov
out
hlt
cmp
sub
jbe
xor
pop
loope
push
je
paddusw
and
xlat
sbb
cli
pop
xor
in
cmpsl
inc
ret
in
pop
dec
or
dec
jae
push
outsb
adc
icebp
and
sbb
arpl
test
imul
in
add
sub
dec
push
sbb
test
popf
xor
mov
sbb
inc
jp
xchg
insl
sbb
pop
mov
mov
test
filds
repnz
sahf
xchg
mov
pop
leave
mov
and
clc
push
test
lea
mov
dec
sub
roll
jo
arpl
scas
push
and
jmp
and
jb
ret
mov
jge
xor
xchg
repz
lods
hlt
mov
out
push
ss
shrb
lods
mov
mov
inc
pushf
ds
mov
lods
push
jge,pt
pop
pop
sbb
add
push
xchg
sub
sub
add
out
sbbl
fnstcw
nop
cmp
mov
test
in
pop
addl
in
sbb
lahf
mov
mov
out
fldt
es
or
enter
pop
mov
xchg
pushl
mov
or
js
dec
dec
or
sub
les
jnp
sub
inc
inc
bound
out
and
fstl
aad
das
mov
and
dec
aam
test
test
inc
jl
lods
mov
inc
xor
test
test
stos
cmp
fidivs
jno
cltd
mov
mov
ds
test
or
fs
adc
jnp
ds
lahf
adc
fucom
das
lea
in
or
inc
call
sahf
loop
jb
xchg
cmc
aam
aaa
js
or
scas
add
sub
shll
hlt
add
mov
cmp
repz
inc
cmc
inc
inc
pop
popl
test
xor
mov
sub
ss
sub
enter
lret
xlat
xchg
test
std
cmp
mov
mov
rcrl
fistps
or
and
cmpb
adc
jnp
cmp
les
jmp
or
mov
inc
scas
inc
mov
dec
push
or
adc
icebp
xchg
icebp
jb
pop
dec
mov
les
mov
jo
scas
fs
imul
stc
mov
mov
sbb
or
cmp
ds
jns
push
cmp
pop
ljmp
fwait
sbb
movsb
sbb
dec
and
cmp
fsubl
hlt
in
std
push
mov
pusha
jmp
cmp
mov
dec
test
int
lods
xchg
inc
xor
or
xchg
adcl
or
shlb
jp
scas
cmpsl
push
cmp
xlat
inc
jl
add
sbb
dec
mov
sbb
jle
popf
dec
or
into
out
pop
psubusw
mov
fs
mov
dec
xlat
pop
gs
fadd
push
cmp
add
adc
mov
push
sub
aad
dec
out
inc
test
test
fimuls
decb
and
xchg
cmp
movsb
test
inc
mov
push
jne
es
je
ljmp
pop
push
mov
enter
fidivl
add
enter
sub
mov
jp
adc
stos
shrb
ljmp
inc
mov
and
sbb
or
xchg
prefetch
pop
lret
loopne
mov
jae
jge
fwait
jns
pushl
je
push
lods
push
mov
xchg
cmp
test
das
xchg
add
setg
daa
push
adc
sbb
inc
rcl
dec
sub
inc
addr16
scas
dec
ss
test
dec
out
mov
mov
add
xor
in
cmp
pop
or
movsl
jno
jge
dec
cmp
mov
fildll
pop
movsb
ds
loop
xchg
inc
outsl
jmp
pop
vpcmpuq
mov
jmp
and
push
xchg
mov
pop
test
pop
out
inc
fidivrl
push
pop
movsb
dec
inc
in
jge
sbb
mov
cmpsl
cs
dec
mov
push
mov
xorl
inc
pop
jecxz
xchg
push
outsl
mov
adc
in
pop
and
out
sti
xchg
sbb
test
imul
cmp
ret
add
or
xchg
fwait
inc
les
aaa
dec
fsubs
roll
aaa
or
loope
adc
xor
dec
jb
lahf
dec
xor
stos
aaa
inc
adc
pop
out
pop
mov
inc
movsl
push
clc
jle
mov
pop
cmp
lds
fucomi
cwtl
movsb
pop
fstpl
pop
pusha
mov
out
test
push
arpl
lret
xorl
xor
xor
inc
dec
aas
cmpb
mull
fwait
mov
cmp
mov
scas
scas
and
hlt
rcll
mov
sbb
or
mov
popa
cmp
push
add
sbb
jae
dec
lds
cs
cmc
sub
cmp
pop
inc
xorb
stc
jne
sbb
arpl
push
inc
inc
in
stos
addr16
xchg
test
jg
pusha
es
mov
and
cmpl
xor
or
movsl
dec
add
dec
and
dec
mov
sbb
fstcw
daa
cmp
ret
ljmp
je
mov
std
xor
aad
je
lods
xchg
stc
and
xchg
inc
mov
outsl
cmp
mov
in
jmp
stos
xchg
stos
cmp
pop
in
mov
out
mov
or
mov
xor
sub
fwait
les
lods
mov
xchg
leave
stos
mov
std
inc
fs
jle
in
jne
roll
xchg
lret
movsl
xchg
cs
fwait
ret
jle
cld
push
lea
mov
rcrb
jne
push
sub
mov
stos
pop
aam
pusha
inc
movsb
xchg
lcall
mov
xchg
add
sbb
dec
push
int3
andb
inc
or
jecxz
lcall
int3
and
ja
sbb
test
sbb
lret
stos
stc
fwait
imul
jmp
and
and
push
mov
pop
add
mov
mov
mov
inc
push
mov
mov
cmp
mov
test
mov
mov
arpl
jae
in
insb
andl
push
lret
and
dec
pop
sbb
in
aad
inc
imull
cmp
in
rcl
add
lods
imulb
into
pop
mov
das
cs
push
jmp
dec
movsb
jmp
push
push
mov
dec
ret
adc
push
and
ror
dec
and
inc
pop
inc
and
mov
sub
jbe
mov
push
sub
sbb
xor
mov
stos
jbe
lret
je
and
dec
cmp
add
mov
pushf
ja
loopne
cltd
aad
add
inc
cmp
lret
push
xchg
cmpb
aad
loope
jp
dec
bound
pop
shlb
jge
xor
fmul
insl
mov
cmp
mov
aas
cs
add
sbb
or
test
push
lret
and
stos
cmpsb
push
mov
and
mov
sbb
push
test
bound
mov
repz
mov
dec
mov
xchg
popa
inc
pop
into
lock
mov
jge
daa
or
xlat
pop
dec
inc
sbb
cli
ja
out
stos
pushf
in
or
jmp
in
xor
dec
fcompl
xchg
daa
push
imul
js
jl
data16
ss
mov
jecxz
dec
and
or
shll
daa
adc
jb
xchg
pop
daa
mov
adc
mov
push
mov
pop
push
mov
movsl
lock
fs
jmp
nop
js
cmp
add
mov
or
aas
sub
scas
xchg
mov
in
jecxz
cwtl
sbb
add
inc
xor
cli
outsl
push
add
das
push
aad
xlat
sbb
in
iret
lahf
inc
xchg
jp
test
jecxz
dec
xchg
mov
out
cli
lahf
sub
or
bound
mov
sbb
fwait
inc
sub
sub
outsb
call
fwait
std
mov
push
mov
in
roll
push
push
fldenv
dec
cmp
ljmp
dec
sub
and
mov
out
sbb
sub
push
mov
mov
sbb
popa
inc
pop
sbb
jl
add
lcall
enter
xchg
sbb
pop
xor
lret
mov
jge
rolb
aas
inc
and
jl
mov
into
testl
mov
test
out
lods
fwait
xor
mov
jge
xchg
jmp
xchg
or
ljmp
int
dec
cs
aaa
in
jo
pop
inc
jbe
lret
adc
pop
int
nop
cs
pushf
pop
insb
cmp
jge
mov
mov
xchg
clc
jg
add
push
xchg
jle
push
jno
xchg
loopne
push
or
addr16
pop
imul
jmp
int
test
mov
and
inc
push
jne
mov
ja
adc
sub
jo
sbb
mov
aaa
add
adc
lods
imul
mov
mov
xlat
mov
push
adc
dec
sbb
cmp
out
add
cmp
jge
sbb
in
cmp
cltd
mov
jge
mov
adc
pop
movl
mov
xor
dec
leave
mov
inc
lods
ss
inc
and
sbb
mov
repz
jmp
jle
sti
mov
js
push
bswap
hlt
adc
fdivrl
jle
dec
lea
inc
stos
or
pop
mov
lret
and
mov
jp
fildll
push
mov
xor
mov
or
jl
jne
pusha
out
imul
mov
mov
aam
mov
fbld
adc
int3
dec
add
fsts
inc
fisttpll
add
mov
push
stos
inc
pop
cmp
idivb
jp
add
adc
jo
insb
sub
bound
cmp
shll
and
cs
popf
or
cmp
mov
ret
idivb
sub
in
xor
inc
ds
in
fisubs
aas
lret
lea
not
and
add
insl
ss
xchg
je
cmp
in
lods
fsubr
shlb
sbb
dec
jmp
test
mov
xor
cmc
pop
pop
cli
out
or
jge
leave
xchg
int3
dec
mov
inc
pop
jg
inc
fs
jle
cmpxchg
rorl
inc
jbe
lret
sbb
outsb
cmp
ficoml
jns
sbb
adc
enter
cs
enter
test
repnz
add
std
jecxz
in
inc
add
shlb
movsl
aad
mov
pushf
bound
stc
xchg
dec
and
push
sbb
movsb
call
push
xorl
in
push
mov
mov
mov
imul
jno
xchg
rclb
inc
fstpt
mov
shl
rcrb
sbb
enter
or
push
jne
pop
and
mov
jecxz
je
int3
or
sub
cmp
jecxz
data16
shl
sarb
or
dec
les
jno
imul
jnp
mov
jp
xor
xor
add
test
fs
test
adc
adcl
mov
jl
shlb
push
xchg
ljmp
xchg
addr16
mov
jae
loopne
sub
dec
xor
cwtl
adc
pop
in
in
ss
sub
cmc
inc
or
pop
fldl
jno
jbe
dec
ds
xchg
fwait
mov
sub
fwait
jb
cltd
mov
ret
or
jo
outsl
add
aaa
fidivrs
jge
mov
aas
add
pusha
paddsw
ror
xchg
sub
call
push
call
lods
inc
push
inc
dec
sbb
fstl
movsb
and
stos
xchg
lock
cltd
sarl
cmpl
pop
into
mov
sti
mov
popf
xchg
das
push
or
add
mov
into
mov
and
fisttps
test
shlb
lcall
fs
sub
inc
jp
dec
inc
pusha
movsb
sub
mov
mov
push
out
inc
in
dec
sbb
aam
daa
push
pop
sbb
push
inc
mov
pop
cwtl
inc
in
jle
adc
stc
fwait
outsl
movsb
test
fisubs
ror
data16
dec
jno
pop
cmp
out
cmp
sbb
push
sti
aad
outsl
fistps
push
imul
lods
or
mov
stos
popf
mov
xchg
mov
lret
into
sub
lret
mov
jb
add
test
rcl
inc
inc
dec
out
insb
test
add
adc
or
inc
lods
outsb
shrl
or
ljmp
std
inc
xchg
inc
test
mov
insb
inc
pop
xchg
je
scas
pop
scas
nop
mov
cmp
jl
dec
jmp
sbb
inc
or
negb
pushf
sbb
fs
mov
leave
out
sbb
add
test
lock
adc
cmp
jl
jge
mov
dec
faddl
mov
loopne
ss
fldt
sbb
fstpt
mov
punpckhwd
pop
mov
mov
pop
popf
outsb
insb
xor
aam
cltd
shrb
mov
dec
mov
sar
sti
jne
inc
int
sub
shlb
loopne
adc
sub
sbb
movsb
jbe
enter
sbb
push
scas
dec
jns
push
sbbl
pop
or
jns
shlb
in
pop
inc
fmull
mov
xor
and
jbe
test
jle
fnstcw
cwtl
fucomp
and
ret
pop
cld
dec
jg
dec
mov
sbb
sbb
mov
adc
push
nop
enter
stc
call
push
add
lods
push
dec
dec
pushf
lret
adc
adc
inc
mov
inc
icebp
pop
daa
add
jnp
lcall
xchg
inc
mov
dec
dec
inc
insl
cmpsb
mov
mov
sub
and
push
push
inc
inc
std
add
mov
in
jb
inc
adc
xor
add
testb
rolb
inc
dec
mov
stos
add
fldenv
dec
iret
dec
add
xchg
adc
mov
xor
hlt
mov
push
pop
pop
cltd
mov
push
or
jl
ljmp
sti
mov
fnstcw
jp
dec
jl
or
mov
jge
mov
xchg
xchg
dec
divl
pusha
jne
stos
addr16
subb
loope
stc
inc
sub
stos
fnstenv
outsl
pop
jle
ja
jne
cmp
cmp
dec
in
lcall
inc
scas
adc
sub
stos
or
xchg
jp
test
cmp
cmpsb
andl
sbb
push
cmpsl
mov
mov
mov
sti
cmc
adc
xor
mov
or
fs
cs
cmp
cmp
sahf
fwait
cs
push
pop
xchg
jecxz
push
cli
pop
fcmovu
in
xchg
mov
push
arpl
dec
mov
and
sahf
and
inc
repnz
push
ja
js
fdivl
nop
mov
repnz
push
inc
js
xchg
dec
xlat
xchg
dec
scas
or
or
gs
insb
xlat
imul
and
lret
test
cmc
or
std
sbb
call
aaa
mov
push
push
xor
xor
fsubs
jg
ficoms
push
clc
mov
shlb
fldenv
lcall
dec
mov
ret
jns
lret
mov
cmp
sti
movsl
mov
insb
frstor
xchg
pop
imul
std
test
and
pop
add
ljmp
loopne
mov
and
nop
dec
punpckldq
dec
adc
pop
push
popf
dec
add
pop
inc
shrb
insl
sub
and
jbe
mov
imulb
jmp
aas
sbb
sbb
pop
xchg
pushf
xchg
xor
mov
mov
dec
jns
xchg
stc
inc
mov
and
jo
adc
push
fwait
cmpsl
or
mov
mov
push
push
cltd
fiadds
xchg
and
repz
mov
mov
out
add
aaa
mov
cs
rol
xlat
sarl
arpl
xor
pop
xchg
mov
call
xchg
lea
ffree
push
dec
js
adc
jge
lods
mov
movsb
pop
adc
inc
ret
fucomip
push
dec
and
fwait
sub
sti
test
pop
dec
xor
adc
and
enter
cmp
imul
pop
gs
outsb
data16
cltd
out
mov
pop
and
scas
mov
rolb
test
stos
sub
and
imul
jl
jns
or
cmp
int3
sbb
push
mov
fistpll
and
mov
es
jbe
xor
test
jge
out
sub
out
fwait
in
lret
jb
jbe
das
js
xchg
cmp
inc
push
lcall
mov
push
mov
xchg
rorb
into
jo
pop
addr16
arpl
jge
ja
call
pop
sarb
dec
das
aaa
jb
in
xchg
stos
cmp
inc
fdivrp
fldcw
scas
sbb
mov
cmc
dec
or
test
mov
mov
dec
repnz
sbb
jne
mov
push
xchg
jl
cmp
in
mov
je
mov
sbb
pop
mov
mov
cmp
in
xor
hlt
adc
mov
cwtl
xchg
or
adc
add
lret
ljmp
cs
dec
daa
fnstsw
or
shr
jle
data16
sub
inc
lea
cmp
dec
mov
cmpsl
inc
adc
movsl
stos
andb
mov
mov
out
dec
dec
fldenv
cmpsb
inc
jl
pop
orb
les
cmp
and
jge
cltd
jg
data16
mov
dec
mov
pop
std
adc
xchg
xor
imul
out
mov
dec
push
add
or
frstor
jb
cwtl
xor
jo
mov
inc
sbb
pop
nop
in
mov
fadds
dec
push
test
push
add
popf
xchg
sub
out
dec
out
inc
bound
add
sub
ljmp
adc
dec
inc
dec
aaa
sub
sarl
mov
sahf
arpl
ja
addw
jae
mov
scas
loopne
jp
int3
dec
sub
sub
mov
std
push
jp
dec
cmp
mov
xchg
mov
inc
incb
xchg
sbb
cld
aas
pop
jne
aam
mov
dec
sbb
and
mov
mov
lea
lods
and
xor
ds
fidivrs
aas
dec
repz
jbe
clc
lret
cmpsl
inc
and
arpl
or
push
xchg
cmp
inc
rep
scas
fildl
pusha
jl
push
pop
mov
inc
ljmp
out
pop
cmp
jecxz
sub
pop
sub
nop
out
popa
cmpl
sub
ret
and
and
js
mov
rcrl
mov
je
jbe
xor
std
scas
lahf
shll
mov
add
jae
loope
sbb
shll
flds
sbb
adc
dec
jne
test
rcll
xchg
lods
xor
xor
push
mov
fnstcw
mov
jns
cmpb
clc
add
xchg
adcl
or
and
or
ljmp
adc
jge,pt
cld
mov
mov
dec
push
cmp
push
inc
shl
pop
cmp
push
or
cld
cltd
mov
mov
inc
mov
aad
cmp
and
sarb
fistpll
push
push
mov
stos
sub
inc
sbb
les
pop
pop
sbb
fsubs
jb
hlt
fwait
adc
stos
repnz
cmp
cmp
jge
sahf
xchg
sub
repnz
cmpsl
and
inc
or
cmp
mov
repz
popa
xchg
test
movsl
decb
xor
test
push
and
fldt
jge
imul
xor
call
jge
add
fimull
xchg
and
push
pushf
push
test
sub
cltd
decl
je
inc
cltd
mov
addr16
fldl
fists
repz
pop
call
out
add
mov
sbb
sub
cmp
inc
lock
push
pop
jp
jle
sbb
fsubs
push
dec
fwait
scas
pop
sti
flds
fnstenv
arpl
add
dec
aas
das
imul
push
mov
movsb
pop
into
int3
xor
stos
add
out
pop
nop
mov
rolb
or
pop
add
mov
clc
cwtl
jl
in
pusha
mov
and
mov
repnz
jge
rorb
push
sbb
scas
add
mov
in
push
sbb
xor
lock
push
out
pop
dec
add
pop
movsb
mov
push
xchg
xor
cli
insl
and
test
cwtl
outsl
pop
sbb
fstl
mov
push
ja
jo
ds
stos
push
inc
sub
mov
xchg
std
sub
inc
cli
pop
shl
je
mov
dec
mov
ds
push
xchg
sub
xor
cmp
jge
mov
jmp
jnp
jae
jge
xor
jle
lods
xor
jmp
ds
cli
push
mov
bound
jmp
fstpt
aad
imul
iret
and
movsl
sbb
cmp
movsl
or
in
mulb
sub
adc
inc
cmpsl
push
pop
xchg
mov
mov
push
jb
lret
inc
mov
fbstp
push
outsb
sub
imul
cmp
jecxz
inc
sbb
mov
push
jbe
call
cmp
dec
movsb
aaa
cmc
dec
out
xorb
jnp
push
hlt
inc
sbb
pop
cmpsb
pop
add
mov
add
xlat
cmpb
lods
insb
out
lods
test
aam
jl
insl
aad
jnp
add
mov
mov
mov
push
sbb
jge
cltd
js
daa
je
imul
cmp
ljmp
xchg
sahf
jno
mov
and
arpl
scas
add
rcr
in
dec
xor
dec
cs
and
jno
or
das
dec
xor
dec
jge
pop
jns
dec
mov
iret
insl
std
xchg
pop
test
add
lods
xchg
sbb
mov
xchg
push
aas
cvtdq2ps
add
push
lods
je
setb
mov
loop
lret
xor
leave
cs
aad
in
xor
or
pop
leave
mov
cmp
xor
push
sub
into
pop
rcll
inc
outsl
xor
cmp
rcpps
sub
jnp
jbe
sti
push
shll
in
jae
jo
cmc
jb
movsl
mov
jo
sti
les
aas
push
outsb
push
cmc
test
movb
push
shrb
and
in
inc
movsb
or
jp
jle
arpl
insl
sahf
adc
ror
inc
ret
push
popa
test
daa
sub
pop
pop
ljmp
jle
push
cltd
jne
xchg
cs
or
das
mov
loope
or
push
mov
adc
addr16
jle
sbbb
cmp
enter
roll
rcr
int3
std
cmc
scas
mov
and
push
fnstsw
jg
jecxz
mov
jl
outsb
test
sahf
and
cmp
sub
cmp
jnp
cmp
int
add
nop
int3
outsb
jmp
adc
lods
fcmovne
movsl
pop
push
cmp
or
mov
fcomi
mov
push
insb
inc
in
jl
fstpl
mov
sbb
mov
in
loopne
lea
cmp
and
xchg
outsl
add
incl
mov
imul
pop
aas
mov
cld
cmp
push
fistl
mov
lret
inc
jns
shll
dec
mov
mov
mov
or
loope
jmp
sbb
add
cs
xchg
repnz
stc
sbb
ljmp
inc
pop
shlb
rcrl
frstor
shlb
jnp
outsl
lock
mov
jb
mov
pop
out
inc
lea
jnp
lcall
int
mov
mov
into
std
cmp
jge
je
ret
imul
inc
movsl
out
push
cmp
pop
and
xchg
or
or
dec
jnp
loopne
dec
loop
mov
and
shll
add
mov
ja
push
outsb
cmp
rorb
stos
push
insb
sub
clc
pop
enter
sti
jle
sub
icebp
lods
pop
pop
fistpl
cmpsl
xchg
fimuls
mov
imul
jns
cmp
xor
pop
jae
xchg
mov
push
add
testb
push
push
dec
cmpsb
push
les
xor
enter
cmp
mov
and
push
jge
or
fsubrs
sbb
test
call
pusha
cmp
rcr
lcall
and
jge
sub
adc
or
test
inc
mov
das
inc
stos
dec
or
fstp
gs
inc
dec
push
aam
lret
cmp
sub
dec
insb
vandnpd
jmp
dec
imul
mov
push
cmp
xchg
pop
add
in
cmp
les
xor
cmp
cmp
cmp
pop
xchg
pusha
scas
pop
lret
mov
pop
lret
std
dec
subb
pop
loope
mov
rorb
push
cmp
mov
mov
popf
cs
lret
add
fldl
cmp
add
inc
and
push
pop
pop
jne
adc
data16
imul
push
into
adc
mov
scas
test
in
nop
ret
fisubrl
push
int3
xchg
cmp
sub
scas
call
lahf
inc
nop
loope
in
roll
and
sti
bound
add
adc
mov
pushf
and
pop
dec
dec
jae
in
and
insb
pop
inc
test
add
dec
fbld
popf
sbb
dec
xor
pop
and
ss
mov
insl
shll
pushf
mov
mov
xchg
les
call
push
lret
rcrl
mov
xor
push
sarb
fxch
xlat
mov
mov
add
fisttps
push
cmp
mov
fwait
sbb
ficoml
out
xor
cmp
mov
mov
mov
aaa
push
fldl
imul
es
add
imul
jp
mov
sbb
push
inc
lahf
dec
shll
repz
or
push
fs
ffree
sbb
xchg
cmp
or
xor
xchg
enter
std
and
fwait
sti
sub
fst
push
pop
mov
insb
stos
adc
sbb
subb
push
pusha
cmpsb
popf
jne
outsl
andb
and
mov
test
enter
mov
mov
ja
in
xlat
dec
and
mov
ljmp
aad
inc
mov
fsubr
lcall
jo
sbb
out
and
gs
frstor
mov
cmpsb
int3
sub
add
inc
enter
test
xchg
loop
in
add
add
jmp
test
inc
inc
es
fldcw
in
lock
sub
and
popa
nop
sbb
inc
add
adc
cmp
mov
repz
jg
lods
lahf
sub
stos
jnp
mov
sbb
cltd
fs
mov
mov
mov
add
outsl
out
arpl
lret
push
cmp
out
lret
mov
add
pop
negb
dec
mov
cltd
movsb
dec
in
sub
mov
ljmp
xchg
xlat
jns
cmpsl
stc
and
or
not
sub
pop
and
push
push
out
mov
testb
sbb
or
shrl
inc
push
repnz
mov
test
lahf
add
xchg
inc
lahf
ret
mov
inc
adc
jg
lahf
iret
dec
mov
mov
inc
jnp
mov
cmp
cmp
scas
or
sbb
cwtl
dec
shlb
mulb
dec
xorl
add
lock
outsl
xor
icebp
nop
iret
xor
sbb
push
leave
add
gs
dec
adc
sbb
xchg
jl
add
ds
sarb
repnz
mov
imul
aad
pop
sbb
aaa
enter
and
dec
push
stos
shl
mov
fwait
xorb
cmpsb
int
addb
jb
mov
xchg
addr16
jne
aad
xor
cmpsl
ja
fisubrs
dec
xchg
dec
and
ret
add
xchg
cmp
std
xor
sti
outsl
add
fs
fstpl
sahf
ss
sub
mov
or
enter
inc
aas
and
jbe
lret
mov
lea
sub
mov
cltd
inc
and
lahf
push
insb
out
lds
rcll
mov
xor
mov
sti
mov
and
rol
xchg
lods
fdivrp
in
push
cmp
pop
ds
mov
sahf
cwtl
jno
and
out
push
adc
or
cmp
dec
inc
push
dec
sub
pop
fstpl
adc
jbe
add
mov
aad
shl
outsl
sti
xchg
lcall
mov
adc
adcb
sub
ffree
xchg
xchg
cmc
lahf
in
mov
fwait
cwtl
push
or
xchg
mov
lds
icebp
stos
jmp
inc
aam
cmc
mov
pop
stc
inc
loopne
sub
test
lret
scas
inc
fidivrs
adc
adc
or
lret
inc
adc
arpl
xlat
mov
cwtl
je
jg
pop
daa
jge
aas
movsb
mov
lock
inc
inc
lret
dec
call
out
sbb
dec
inc
out
cmp
inc
mov
cmp
or
shll
nop
mov
cmp
jge
mov
mov
adc
test
sbb
cmpsl
enter
popa
ret
repnz
sbb
mov
inc
push
mov
mov
insb
jno
std
frstor
sbb
adc
stos
push
repnz
mov
sarb
mov
cmpsb
inc
and
frstor
in
lret
push
xchg
popa
pop
mov
imul
jle
daa
cmp
loopne
cs
aaa
dec
cmpsl
add
in
repnz
inc
data16
ja
pop
cltd
inc
and
push
dec
mov
sbb
out
cwtl
imul
jle
inc
push
pop
test
cmp
push
cmp
jle
mov
mov
gs
or
pop
arpl
cmpsl
std
mov
xchg
xor
rcll
xchg
and
pop
push
scas
pop
dec
push
mov
test
push
fwait
cmc
addr16
arpl
stos
push
sarb
or
mov
or
dec
dec
mov
mov
or
in
xor
sub
ds
xchg
pop
jge
in
cmp
add
inc
inc
cwtl
add
pop
fldl
scas
jge
inc
push
lods
inc
divb
mov
sbb
push
fldenv
xchg
enter
push
mov
loope
test
mov
push
mov
and
jno
inc
jg
inc
mov
mov
xchg
test
mov
dec
sub
xchg
pop
push
je
mov
cmpsb
add
or
and
cld
ljmp
adc
inc
lock
mov
push
cmp
jge
push
popa
xchg
stc
inc
xchg
ds
in
mov
loopne
lret
cltd
repz
movl
dec
pop
loop
push
push
in
movsl
cmp
sub
inc
lret
cmp
mov
faddl
cmp
in
test
scas
call
and
inc
or
push
jb
mov
add
push
mov
push
xchg
mov
outsl
rcrb
imul
jb
push
std
inc
je
bound
inc
ljmp
inc
hlt
je
mov
push
popf
mov
xor
imul
orb
mov
jp
psrad
push
jl
xlat
push
inc
pop
shll
stc
dec
ret
in
nop
loop
cltd
and
pusha
jne
mov
jmp
scas
mov
sbb
dec
scas
and
pop
std
cltd
mov
adcb
insl
jo
insb
sbb
cmp
add
jae
mov
fdivrs
fldl
test
mov
mov
sbb
lock
lret
xchg
dec
mov
addr16
push
push
jnp
adc
stos
jle
pop
mov
dec
adc
addr16
push
sbb
or
jns
std
adc
cmp
arpl
insl
in
pop
mov
mov
cmpsb
iret
mov
jmp
hlt
aas
push
rorl
cmp
inc
in
mov
inc
cmp
cltd
orl
jno
mov
inc
jno
jle
jp
ljmp
sub
add
repnz
es
push
inc
gs
adc
stc
jle
cmp
das
icebp
cli
mov
int3
xchg
mov
inc
push
inc
dec
xlat
mov
scas
std
inc
jno
in
int3
call
lds
fbstp
lcall
mov
jge
add
sbb
and
je
mov
inc
test
sub
sub
sahf
icebp
dec
push
es
std
add
mov
fidivl
inc
pop
inc
xor
aad
out
test
cmp
in
mov
mov
add
mov
cmp
dec
lea
jbe
mov
jl
adc
xchg
jmp
inc
in
add
out
lret
shrb
inc
cmpsl
adc
pop
cmpsl
mov
mov
iret
loop
jmp
negl
push
mov
stc
arpl
and
fdivrp
add
xchg
sbb
popf
pop
lds
aad
mov
daa
sbb
je
xor
ss
jg
inc
pusha
push
push
mov
je
scas
pop
and
xchg
sbbb
push
sub
icebp
mov
aad
es
inc
shl
mov
dec
mov
add
andb
test
jmp
push
pop
lds
imul
popa
orl
sbb
dec
pop
fdivs
push
and
dec
mov
data16
aaa
xor
push
cwtl
mov
lcall
bound
jnp
dec
adcl
sub
adc
in
mov
dec
test
pop
jge
adc
add
xchg
cmp
addr16
pop
and
aam
cld
add
push
add
mov
jnp
jmp
add
jns
into
aad
cmpl
and
mov
enter
push
mov
adc
pop
inc
ret
and
sbb
push
mov
sbb
inc
adc
pop
xchg
cmp
dec
pop
insb
ljmp
inc
mov
test
rcrl
divl
les
cmp
mulb
jno
jl
fisttps
cmp
mov
xor
les
push
fsubl
mov
jns
mov
or
in
and
mov
xchg
icebp
enter
loopne
lods
sbb
and
dec
or
dec
mov
inc
not
and
pushl
jecxz
ficomps
adc
push
in
or
push
dec
jle
sbb
jb
or
std
loop
popl
jo
cmp
std
fwait
xchg
adc
push
aam
or
jmp
inc
mov
repnz
dec
mov
arpl
add
xchg
mov
push
jmp
mov
inc
js
mov
fwait
mov
test
test
push
jb
outsb
cwtl
mov
sbb
adc
fmull
add
jg
mov
insb
arpl
sbbb
aas
iret
test
loope
xor
xchg
and
in
adc
je
sbb
push
mov
jl
xor
push
ret
dec
test
jne
das
and
add
fsub
popa
xchg
push
cli
xor
sbb
and
pop
or
cmpsl
fucomp
xchg
dec
mov
inc
mov
push
jp
cmp
and
or
sbb
or
mov
mov
push
mov
and
jl
data16
dec
inc
push
dec
ret
mov
loop,pt
sub
lahf
scas
aad
or
sbb
and
or
inc
or
outsl
xchg
mov
mov
inc
jge
dec
sub
icebp
or
push
push
mov
sbb
lods
jl
iret
mov
out
mov
les
aam
dec
mov
dec
sbb
jle
mov
daa
cmpsb
ljmp
arpl
jbe
dec
mov
adc
sbb
cli
mov
fucom
stc
je
vhaddps
je
fsub
push
cmp
inc
dec
movsl
fwait
mov
stos
shll
das
push
sbb
rorb
xchg
hlt
out
pop
inc
jle
sbb
jle
clc
aas
scas
rolb
sahf
push
push
ljmp
orl
stos
test
in
or
mov
jae
jg
lods
sbb
out
cmp
cli
cmp
lds
data16
pop
mov
and
inc
lahf
lret
or
xchg
rcll
sub
fsubl
fcomi
sub
repnz
lods
ds
and
cmp
daa
cmp
js
test
add
scas
jo
xchg
sub
mov
jmp
jnp
arpl
mov
mov
jge
inc
sbb
int3
xchg
mov
or
arpl
call
xor
es
jmp
nop
jbe
mov
jbe
fwait
movb
fwait
jo
testl
pop
sbb
js
inc
inc
mov
sub
xor
cmpsl
push
mov
scas
scas
popa
jmp
jb
mov
packsswb
sub
jecxz
sbb
lret
cli
push
cmp
jge
and
lods
outsb
inc
mov
std
add
cmp
sti
add
fldenv
int3
push
sub
lret
push
xchg
rorl
mull
mov
push
sub
add
lods
xor
lea
scas
arpl
mov
xor
stc
icebp
es
sbb
xor
cltd
push
pop
jle
lods
es
mov
and
sub
aam
out
mov
cmp
mov
andb
cs
add
sbb
pop
ljmp
adc
hlt
inc
mov
daa
and
das
cmp
mov
dec
cltd
fildll
mov
and
mov
repnz
sbb
into
outsb
jge
test
push
jge
pusha
add
jb
dec
add
sub
gs
lods
xlat
jne
out
pusha
lret
mov
icebp
xchg
xor
pop
dec
sub
cmp
xchg
pushf
pop
je
push
shrl
insb
inc
mov
dec
xchg
fwait
nop
lods
or
adc
leave
cmp
and
rcrl
xor
jge
cld
xor
sbb
daa
in
sub
imul
xchg
jge
jnp
loope
data16
hlt
movsl
fs
cmc
fisubl
xchg
inc
outsb
lret
imul
sbb
push
ds
inc
fucom
iret
in
pop
adc
sahf
mov
xor
xchg
push
fists
ret
jae
imul
js
test
lcall
outsb
mov
notl
jg
add
add
jp
mov
jg
ret
push
add
inc
inc
mov
push
shlb
enter
dec
into
mov
push
btr
or
pop
ja
rep
sbb
push
loope
fsubrs
loop
out
jnp
jp
xor
mov
jge
mov
pusha
cmpsb
cmpsb
jp
repnz
mov
cmpsl
in
es
sbb
xor
dec
ljmp
rol
testl
cwtl
or
sub
push
xchg
and
inc
adc
ret
mov
jge,pt
ja
lds
mov
enter
lret
divb
xlat
enter
mov
jecxz
stos
mov
mov
popl
push
je
fdivr
pop
rorb
fstpl
popa
pop
jl
xchg
push
inc
mov
loope
xchg
cld
mov
es
add
sub
insb
loop
sub
push
fwait
and
cmpb
and
jmp
shll
cs
mov
cmp
jne
push
add
loopnew
adc
repnz
dec
xor
cs
fs
fnstsw
push
mov
jae
push
out
and
jnp
dec
or
pop
jmp
adc
pop
cs
jge
fildll
pop
out
stos
inc
and
push
cltd
and
adc
in
roll
lcall
leave
das
test
xchg
adc
pushf
rcrb
inc
adc
arpl
xchg
mov
pop
mov
stos
cmp
js
pop
movsl
add
mov
cmp
scas
hlt
addr16
pop
pushf
ret
lock
aaa
es
mov
xchg
push
and
pop
sub
sub
sbb
clc
pop
lea
aad
adc
mov
inc
movsl
pushf
xor
fldt
sub
jbe
inc
inc
in
or
xlat
cld
aad
arpl
jmp
inc
or
nop
mov
xchg
ja
test
mov
sub
and
inc
jge
fcomi
add
arpl
sbb
dec
mov
test
push
out
inc
inc
lahf
jle
in
and
adc
mov
mov
mov
es
dec
pop
add
mov
nop
movsl
js
int3
jmp
and
adc
jle
inc
insb
mov
pop
push
dec
js
negb
jnp
ja
arpl
pop
dec
cmp
inc
insl
adc
cmp
sub
or
sbb
dec
jmp
rorb
cmp
cmp
mov
imul
push
fwait
pop
mov
dec
icebp
sub
mov
mov
add
mov
inc
sub
out
jbe
inc
negb
cmpsb
lret
push
sub
stos
xor
aaa
lcall
cs
das
nop
add
push
adc
adc
mov
popa
and
out
fwait
dec
imul
mov
pop
insl
dec
ret
loope
lcall
out
or
pop
add
ds
mov
dec
repnz
jge
xor
mov
push
movsb
cmc
ret
int3
xchg
aam
xor
std
test
jb
sub
repz
inc
push
sub
cmp
mov
je
jg
lods
xchg
dec
sub
fidivrl
add
push
mov
fldl
inc
divb
sbb
ds
xor
in
push
cli
jle
dec
test
adc
xor
cmp
inc
je
mov
inc
sub
mov
mov
mov
popa
popa
cs
adc
sahf
insb
and
cmpsl
and
pushf
pop
inc
xchg
sbb
sub
jb
ja
into
add
jae
pop
inc
int3
xlat
or
cmp
push
lods
mov
mov
sub
ja
mov
fcmovnb
adc
push
call
push
in
sbb
iret
pop
push
fimuls
pop
aas
les
push
xchg
sbb
pop
xchg
push
or
mov
inc
rorb
call
pop
mov
jle
lret
adc
pop
ds
jge
sub
lret
mov
enter
dec
test
test
jge
sub
inc
fmull
cli
mov
into
fidivl
sbb
inc
add
lods
test
ja
push
mov
push
and
xchg
jmp
enter
and
mov
in
ret
pop
sarb
and
addr16
add
in
insb
cmp
ja
pop
sbb
sub
jno
pop
sbb
mov
test
mov
and
cmp
cmp
es
and
add
cli
lock
push
out
les
lret
and
filds
dec
cltd
lds
aad
mov
mov
or
bound
xor
adc
in
test
fwait
sbb
inc
xor
outsl
test
enter
push
scas
hlt
cmp
fldl
popf
pusha
push
movsl
lea
sub
inc
jmp
repz
scas
mov
jge
int3
ljmp
xchg
mov
lcall
rcrl
scas
popfw
add
or
mov
dec
xchg
pop
je
pop
adc
inc
and
nop
or
push
mov
je
mov
stc
adc
ss
imul
lods
out
sub
jge
push
cmp
adc
into
inc
test
dec
jp
push
jmp
decb
mov
inc
sbb
dec
push
mov
sub
fimuls
mulb
inc
dec
data16
push
scas
icebp
sti
sbb
xchg
pop
std
and
in
cmc
cmp
push
sbb
dec
jno
mov
popf
sbb
insb
adc
jge
inc
stos
push
cmp
mov
pusha
add
arpl
push
lret
das
add
mov
inc
mov
inc
out
or
mov
adc
jno
mov
mov
shrl
rorl
divl
icebp
cmp
pop
out
push
aaa
xchg
mov
lret
dec
lods
stos
sahf
sbb
es
ja
ljmp
jecxz
setbe
mov
clc
fsubs
testb
mov
rcrb
inc
xchg
dec
jno
lods
ret
notb
pop
fdivp
sbb
into
xor
test
jbe
or
and
push
adc
cmc
mov
xor
dec
add
xchg
mov
mov
in
adc
xlat
scas
repz
push
push
mov
add
cmc
ljmp
inc
lock
das
rclb
loopne
push
mov
ficompl
pusha
xor
adc
mov
sbb
xchg
jle
fwait
std
dec
movb
mov
xchg
sub
mov
sub
xchg
jbe
push
pop
lock
ret
push
dec
dec
sarb
inc
jge
test
sbb
and
clc
xor
push
test
lcall
inc
in
out
sbb
ret
add
cmc
orb
test
jbe
or
mov
inc
push
xchg
aam
mov
stos
orl
lds
lcall
stos
mov
inc
rcrl
lret
push
cmp
scas
jmp
and
add
shll
mov
dec
jp
div
jmp
leave
inc
dec
subb
arpl
pop
jge
vpavgw
xchg
test
loopne
jp
add
pop
mov
mov
jmp
dec
xchg
mov
mov
push
cmp
inc
leave
xor
mov
je
orb
dec
imul
mov
cmp
out
pop
leave
inc
dec
jbe
mov
jno
lea
clc
mov
lahf
cmp
inc
dec
je
cmp
pop
sbb
add
imul
jge
test
mov
stos
loope
cltd
out
fs
shll
iret
out
scas
pushf
test
scas
jmp
dec
addr16
jge
push
inc
adc
jecxz
fnstcw
sub
jle
int
adc
lods
movsb
mov
outsb
into
push
push
les
xchg
push
xchg
fidivs
loope
mov
xor
stos
jl
xlat
jae
xchg
sub
push
inc
subb
nop
insb
dec
inc
adc
cmp
sbb
aas
lret
add
mov
xchg
mov
mov
jecxz
and
sbbb
add
xchg
je
fwait
xor
insl
cli
test
test
nop
dec
mov
adc
jl
xor
cltd
insb
add
sbb
ror
dec
loope
loopne
mov
xor
faddl
push
xchg
in
nop
fsubrs
lret
mov
xchg
addr16
push
repz
pushf
pop
and
fdivrs
adc
mov
and
dec
cmp
or
fisttpl
pop
sarb
xor
jns
cwtl
dec
adc
and
je
into
jns
xchg
pop
mov
push
cmp
dec
or
sub
outsb
xlat
adc
sbb
outsl
scas
repz
jne
orl
fucomp
cmp
push
cld
mov
pop
cmp
inc
repz
pop
adc
pusha
mov
dec
jle
fwait
imul
je
push
pushf
out
jbe
jmp
in
stc
dec
repnz
fcmovb
cmp
or
add
dec
and
test
add
and
in
mov
repz
stos
sti
je
pop
push
inc
inc
aad
inc
sub
iret
stos
mov
push
daa
xchg
repnz
fisubrs
mov
sbb
out
sbb
fsubrp
out
mov
or
test
xchg
mov
scas
jmp
lods
cld
fcmovne
add
inc
cmp
nop
jp
dec
dec
pusha
leave
mov
or
cmp
xchg
mov
popf
add
jmp
inc
divb
sbb
dec
cs
imulb
nop
or
stos
xor
sbb
repz
jb
popf
inc
pop
push
mov
nop
sbb
jge
nop
cld
pop
adc
mov
test
sub
mov
test
sub
enter
sbbl
scas
mov
leave
ds
dec
inc
inc
pop
mov
pushf
mov
enter
sti
cmp
dec
jae
fidivs
inc
xor
std
aam
cmp
xchg
sbb
mov
jle
inc
subb
aaa
xlat
cmpsb
cmp
or
adc
xchg
ds
mov
sbb
dec
cmp
xchg
fnstsw
aad
aam
filds
pop
mov
push
aad
in
je
mov
stos
std
and
cmp
xchg
loopne
add
shrb
addr16
fwait
scas
pop
dec
dec
dec
mov
jg
push
dec
pop
scas
cld
mov
lock
js
jo
xchg
sub
filds
adc
loopne
movsl
les
cmp
aam
test
mov
jne
mov
pop
out
inc
shlb
aaa
lret
fsubs
jno
popa
push
fstl
inc
and
push
jge
ds
daa
test
test
mov
lcall
das
mov
and
repz
fisttps
je
hlt
inc
pop
pusha
mov
inc
jns
ret
and
inc
loope
stos
aad
and
dec
inc
mov
sahf
clc
stos
xchg
rolb
jge
xchg
xor
dec
cli
dec
pusha
lods
or
adc
jbe
adc
in
mov
xchg
cltd
fsubrs
push
mov
mov
clc
subb
mov
sub
inc
fs
mov
cwtl
mov
lock
mov
dec
cs
sbb
cmp
cmp
outsl
cs
push
and
cmp
dec
jnp
lcall
mov
xchg
and
repz
sbb
xchg
das
stc
cmpsb
daa
ret
ficoms
lea
imulb
jns
xchg
sbb
inc
mov
lret
mov
enter
sbb
mov
dec
cmp
sbb
mov
mov
jne
stos
sbb
xor
mov
mov
call
jecxz
mov
imul
mov
mov
test
int
xor
shll
mov
xchg
jge
xchg
and
or
incb
sbb
gs
xor
mov
cwtl
jb
popf
cli
mov
aad
insl
add
pushf
sub
scas
sub
fildl
xchg
test
mov
jb
adc
test
in
push
inc
push
add
xchg
je
imul
iret
movsl
jnp
sarb
add
lahf
sbb
cmp
shll
xorb
push
jge
push
arpl
cld
daa
enter
scas
dec
jb
sbb
test
stos
xchg
frstor
mov
ja
jge
test
aam
inc
mov
or
mov
push
jle
sbb
popa
xchg
mov
jne
stc
test
es
loope
mov
scas
push
xlat
ds
ror
jmp
std
scas
aam
mov
mov
push
lret
cmp
adcl
movsl
xor
stos
cmp
mov
into
aam
sbb
mov
dec
in
dec
xor
test
xchg
and
cmpsb
jae
fwait
and
add
cmp
mov
jnp
test
cs
mov
or
dec
push
and
sub
aam
fs
dec
add
sbb
cmp
jo
pop
push
pusha
jnp
dec
push
scas
ja
mov
and
mov
inc
cltd
aam
leave
cwtl
subb
dec
or
test
jae
jle
dec
xchg
dec
sub
sub
xlat
sub
and
dec
add
js
lods
jg
popf
ja
mov
inc
lahf
push
and
dec
cmp
insl
and
insb
ljmp
shll
jbe
mov
push
add
mov
mov
lods
lcall
jle
mov
cmp
int
pop
dec
aaa
pop
jnp
push
in
aaa
jb,pt
adc
mov
les
hlt
shrl
ret
push
or
scas
repnz
xor
and
push
inc
mov
dec
sub
inc
repz
outsl
je
lock
xlat
dec
pusha
sub
cmpsl
add
push
icebp
into
add
inc
popf
int3
mov
in
aad
rcrb
aaa
ds
jb
xchg
fwait
and
mov
pop
push
dec
sbbb
enter
pusha
xor
std
shlb
imul
sub
xor
xchg
and
sbbl
mov
add
and
mov
xor
mov
jmp
rcrb
shlb
cmpb
sub
jge
test
cmp
enter
jle
pop
adc
dec
cmpsb
hlt
add
cld
outsl
stc
cmpsb
jl
inc
andnps
sub
and
call
mov
mov
inc
aas
push
or
mov
shrb
adc
fsubrs
test
test
lea
shlb
sbb
cmp
or
lock
int3
sahf
inc
xchg
inc
test
test
dec
es
cltd
dec
ret
jmp
cld
shl
sbb
mov
fcmovu
push
and
shll
xchg
mov
nop
cmp
ljmp
stos
lock
xchg
je
xchg
push
adc
andb
mov
daa
test
addr16
adc
int3
add
aaa
cld
testl
pusha
test
cmp
aad
xchg
bound
cmc
dec
mov
fimull
hlt
or
pop
cmp
mov
movsl
pushf
pop
popf
sbb
jbe
cwtl
or
mov
imul
cmp
add
das
push
test
cmc
fcompl
inc
push
inc
out
sbb
inc
add
and
xlat
jnp
pop
pop
outsb
fcoml
outsl
xchg
clc
add
mov
ja
cmp
mul
fstpl
xchg
rcrl
fcoms
xchg
clc
daa
adc
cmp
or
pop
xchg
and
dec
and
jle
mov
mov
mov
lahf
dec
ja
adc
gs
cmpsb
test
ss
or
out
cmp
cltd
les
movsb
or
mov
dec
xchg
xor
or
lock
fwait
insl
addr16
push
mov
xor
hlt
test
movsb
dec
mov
mov
aam
cmp
inc
jns
sub
popa
dec
rcll
rolb
xchg
call
lret
arpl
fwait
push
imul
test
rcll
jmp
nop
add
shlb
push
pop
je
inc
fistpl
jl
ficompl
into
push
lods
mov
pushf
fildll
and
mov
rcl
out
ret
or
add
pop
dec
cld
aam
inc
shrb
pop
stc
pop
sbb
insl
nop
pop
daa
inc
loopne
xchg
addr16
imul
jmp
inc
push
mov
inc
jle
aaa
mov
ja
and
fucomp
xor
mov
popf
loope
imul
mov
dec
cmp
dec
dec
push
jle
pop
pop
and
jl
addr16
imul
ret
jmp
ljmp
out
leave
aad
and
imul
xchg
sbb
je
movsl
ds
andb
adc
jnp
addr16
das
adc
cmp
and
lods
repnz
mov
jae
push
jae
cmp
push
sbb
mov
mov
xlat
sbb
stc
push
xor
and
inc
out
orb
and
sbb
cmp
test
mov
ret
sbb
int3
test
add
ss
in
sub
popa
lods
mov
sbb
sbb
sbb
mov
push
ss
and
xor
mov
in
cmp
xor
leave
inc
xchg
lret
mov
adc
das
add
mov
push
stos
adc
fwait
test
mov
mov
jecxz
pop
mov
add
movsb
mov
aad
and
aad
xor
sahf
aad
mov
jge
mov
rolb
cmp
fwait
int3
inc
nop
add
mov
jge
push
xrelease
adc
mov
jns
out
sbb
popa
cmpsl
fmuls
out
filds
repnz
push
out
test
sbb
cmpsb
shrl
mov
pop
dec
shl
push
ja
cwtl
jno
jle
mov
push
inc
xchg
inc
mov
inc
push
xchg
out
popa
loopne
lods
rolb
and
pop
jo
sbb
scas
adc
in
jl
inc
pop
sahf
mov
dec
sbb
push
xor
inc
add
loop
mov
dec
mov
clc
addb
lds
dec
jg
jge
pop
fisubl
in
insl
mov
sbb
sub
or
xor
pusha
add
dec
jb
fwait
jmp
xchg
test
stos
mov
jno
sbbl
dec
lret
push
jge
roll
testb
xor
out
mov
jle
sarb
mov
mov
movsb
push
mov
or
mov
mov
sbb
push
and
pop
rcrb
insb
jge,pt
sub
dec
fistl
in
das
xchg
mov
int3
enter
cmpsl
mov
cmpsb
or
addl
and
pop
test
call
notb
imul
outsb
mov
ret
pushf
jnp
cmp
jo
pop
xor
mov
mov
xchg
out
adc
mov
rorl
push
in
jl
inc
leave
test
jbe
dec
adc
xchg
mov
adc
les
mov
lea
xlat
xchg
out
popf
mov
test
sti
or
jge
loopne
aam
and
inc
or
stos
and
and
test
pushf
jecxz
mov
sbb
or
mov
inc
subb
insl
imul
dec
imul
daa
dec
dec
neg
mov
xlat
add
pop
mov
mov
pusha
popaw
movsb
cmp
fistps
repnz
stos
daa
aas
adc
sbb
pop
cmp
or
inc
mov
push
fcmovbe
sbb
cmp
jge,pt
mov
test
fidivs
mov
ret
std
pushf
test
adc
jnp
inc
pop
sbb
lods
mov
arpl
addr16
xchg
cmpsl
mov
push
inc
jb
repz
incb
jp
hlt
cmp
inc
jecxz
xchg
inc
adc
pop
je
sub
inc
xchg
loopne
ret
ss
xor
mov
stc
sbb
adc
sub
test
jl
data16
mov
bound
adc
imul
jns
add
mov
in
adc
mov
or
push
stos
jp
jecxz
daa
jp
rolb
movsb
inc
loope
dec
clc
jge
xchg
cmp
sbb
test
fdivrl
jnp
mov
pop
js
dec
adc
mov
add
mov
out
cmp
xchg
std
pop
setp
jl
es
cmp
std
mov
lret
jle
dec
adc
int
cmpsl
leave
pop
push
jbe
lcall
sub
pop
jne
imul
sbbb
jnp
gs
and
push
inc
pop
cmp
mov
dec
stc
adc
popf
pop
jle
movsl
sbb
and
pop
fdiv
popa
push
xchg
aam
shlb
mov
or
int
push
push
mov
gs
sbb
add
data16
xchg
pop
ret
add
mov
mov
xor
out
adc
std
flds
bswap
bnd
adc
cmp
fs
adc
int3
jae
test
cld
setge
mov
mov
lea
adc
out
ret
xlat
mov
mov
ds
push
xchg
push
lock
shrb
mov
xchg
les
jb
rcrb
or
stos
xchg
jmp
stos
lahf
dec
movsl
lcall
jbe
push
out
insl
xor
fwait
inc
mov
call
repz
jbe
xchg
mov
adc
lds
dec
fimuls
addr16
sub
fimuls
fldenv
into
movsb
movsl
fdivr
aas
scas
cmp
push
adc
hlt
test
shlb
inc
cmp
insb
push
les
sahf
pop
test
or
jle
subb
movsb
xchg
add
push
pop
pop
cli
mov
push
lds
insb
mov
pop
inc
xchg
clc
sub
dec
sbb
inc
and
pop
cli
mov
xchg
fiaddl
or
movsl
push
into
mov
loope
jo
sub
lahf
pop
rcl
cmpl
cmp
fstpl
stos
xchg
lcall
ja
aad
xchg
lahf
mov
xchg
or
and
add
inc
pop
sub
pop
imul
jmp
movsl
push
push
push
mov
jecxz
sarb
or
loope
bound
mov
loopne
adc
mov
cld
inc
sub
out
cmp
arpl
lock
cmp
negl
aas
cmpsb
bound
insb
mov
xchg
loope
dec
xor
xor
cmc
push
add
notl
push
jge
xor
jg
sbb
jae
hlt
mov
jl
clc
push
inc
loopne
std
push
lret
jne
fstpt
mov
mov
inc
add
out
divb
int
mov
dec
hlt
stos
inc
xor
enter
cmp
and
mov
xor
shrl
push
cmp
adc
inc
pop
repnz
fcomps
pop
ds
call
stc
cmp
ss
dec
shrl
fidivs
xchg
fimuls
push
stos
and
or
jns
inc
ret
rcrb
push
cmp
iret
shlb
jne
and
push
mov
add
sahf
sub
cmp
jl
aas
mov
ret
xor
insl
ret
xor
mov
fwait
dec
xchg
or
ret
inc
test
rep
ret
les
insb
adc
lret
cmp
inc
push
out
xchg
into
pop
decb
outsl
aaa
dec
ja
shrl
push
fucom
ffreep
cmp
mov
sbb
call
pop
scas
push
enter
jge
mov
sbb
into
mov
sub
ret
popa
sub
adc
sbb
sti
fistl
scas
enter
outsl
sub
inc
jns
jne
push
aam
testb
pop
inc
inc
jb
inc
cld
push
daa
mov
hlt
or
dec
aad
in
fwait
inc
add
jecxz
pop
in
mov
cmp
cltd
aad
mov
rcrb
cmpsl
inc
add
rcr
ds
inc
notb
push
cmp
rol
inc
aas
daa
sahf
add
mov
lds
add
jecxz
xchg
mov
hlt
dec
jne
mov
jo
inc
mov
fcmovnu
dec
push
or
loope
xchg
ret
dec
shl
mov
leave
bound
fistl
cmpsb
adc
shlb
adc
jecxz
mov
icebp
cmp
in
sub
lds
aad
loope
cmp
call
mov
push
jge
stos
push
jbe
movsb
mov
mov
pusha
jne
shrl
and
jae
xlat
popf
sti
orl
in
out
inc
mull
and
cmp
push
lahf
in
mov
js
sahf
xor
dec
mov
int3
inc
insb
mov
js
or
sbb
jmp
xchg
inc
ja
imul
in
pop
jnp
test
jbe
cwtl
mull
inc
add
mov
call
sahf
xor
out
scas
rorb
cmp
insb
nop
push
cld
out
stc
popa
sti
push
push
int
addr16
jne
cwtl
xchg
mov
xlat
lods
xchg
stos
psllq
or
sub
test
decb
mov
push
cmp
xchg
jns
cmp
pushf
scas
xor
inc
xor
test
mov
rcll
inc
sbb
das
dec
xchg
or
jge
mov
push
push
scas
mov
lods
push
mov
movsl
lret
shlb
push
popf
ja
popa
dec
std
fistpl
pop
fnstenv
sub
pop
jo
test
mov
loopne
cs
mov
mov
sub
mov
out
adc
push
jo
pop
cmp
dec
cmc
cmp
into
sub
lahf
jno
out
jl
jge
push
jecxz
and
push
xchg
sbb
or
loopne
mov
outsb
jge
inc
jnp
xchg
inc
sti
fmulp
arpl
insb
fsubrl
cmp
jbe
movsb
das
outsb
aad
in
or
in
xlat
lods
sbb
mov
cmp
cmc
shlb
repnz
adc
inc
mov
pop
cmpsl
mov
loop
stos
xchg
dec
pop
xchg
gs
add
ret
scas
xor
jg
mov
dec
xchg
adcl
rolb
aam
mov
pop
andl
mov
adc
mov
ret
lock
hlt
xor
test
sbb
mov
shll
movl
rcrb
cwtl
add
add
and
xchg
inc
cmc
mov
xor
fstpl
aas
mov
pop
dec
std
icebp
sub
sbb
aam
xchg
test
sbb
jge
push
repnz
dec
iret
xchg
sbb
scas
jle
or
pop
inc
pop
sbb
incl
xor
shrb
cmpl
fsubs
jb
or
and
and
or
push
jb
int3
divb
cwtl
lcall
inc
and
inc
mov
sub
jp
push
mov
js
scas
stc
imul
nop
cltd
cmpsb
xchg
pop
add
ja
inc
scas
xorl
pop
fisttps
cmp
cmc
fildl
adc
pop
push
scas
aas
pushf
enter
lcall
jge
inc
jmp
add
out
inc
out
ficoms
xorb
cs
xchg
sti
dec
stos
dec
mov
es
xchg
push
ds
and
add
scas
cli
cmp
repz
adc
out
mov
sub
mul
gs
adc
je
in
iret
xchg
outsl
stos
xchg
test
outsb
inc
fs
inc
mov
loopne
es
pop
outsb
or
add
pop
std
stos
cmp
cld
mov
fs
xor
in
mov
fcoms
sbb
fwait
ljmp
and
jge
adc
sbb
lods
mull
dec
adc
sbb
icebp
pop
sti
dec
xor
outsb
lods
jns
sbbl
shl
or
cmp
mov
jb
and
pop
push
fists
mov
in
jl
push
xchg
divl
jle
out
xor
cltd
popa
mov
inc
pop
cmp
ljmp
sbb
aam
ss
jp
pop
jb
stos
dec
cmpl
iret
cmp
shlb
outsl
dec
loopne
inc
repnz
lcall
movsl
rol
fsubrs
lea
fwait
jae
sbb
nop
jl
inc
scas
dec
lret
popa
jg
pop
ljmp
insl
xchg
shr
sbb
pusha
outsl
in
jae
lock
mov
jge
or
ljmp
xchg
outsl
inc
adc
inc
jo
imul
lods
imul
adc
fldt
jno
call
data16
push
fwait
dec
mov
or
cmp
adc
ds
inc
call
jp
jnp
adc
iret
and
push
sbb
scas
xor
pop
cwtl
xchg
arpl
jnp
mov
jmp
in
stos
adc
ret
jbe
lret
xchg
mov
and
insb
push
sub
push
lret
inc
ja
jg
call
jecxz
cmp
cmp
jae
jmp
xchg
mov
push
and
push
sbb
cli
std
sbb
aaa
inc
dec
test
lods
pop
out
sbb
fildl
add
flds
dec
xchg
jl
icebp
cmp
cmp
es
iret
cmp
addr16
xchg
mov
into
js
dec
cmp
pusha
scas
lods
sbb
das
cmpsb
mov
repz
sahf
sbb
shl
aaa
in
cmp
test
xchg
jp
sub
rolb
mov
jmp
xchg
push
in
adc
je
stos
shl
data16
es
loope
jbe
mov
sbb
sub
pop
fmul
mov
aam
sarb
cmp
xchg
out
push
xor
mov
push
jo
cli
add
adc
pop
in
call
mov
xchg
pop
or
mov
cmpsb
mov
mov
pushf
hlt
sub
jne
lds
cmpsl
scas
repnz
fwait
adc
sub
pop
xchg
cld
fisttpll
das
lods
test
jb
and
sbbb
push
imul
xchg
mov
dec
mov
xchg
xor
int3
repnz
repnz
xchg
xchg
mov
inc
lret
push
pop
out
cld
into
sbb
lret
xor
cmp
sub
push
jb
out
mov
cwtl
and
inc
and
cmp
mov
pop
adc
xchg
inc
push
mov
xor
inc
mov
jne
push
jge
inc
jns
and
push
push
cmp
mov
inc
daa
ljmp
cmpsb
mov
popa
fwait
sub
jg
stos
je
enter
add
push
jmp
sbb
or
cmpb
and
je
lods
notb
fstpl
jbe
das
outsb
dec
add
sbb
in
adc
das
push
inc
inc
out
dec
mov
dec
loop
sbb
out
inc
inc
insb
fadds
inc
add
in
stos
nop
and
daa
jp
mov
or
mov
inc
shrl
adc
jmp
clc
lahf
jmp
and
pop
fnstcw
pop
and
cmp
jl
jp
xchg
and
add
adc
lock
lods
adc
xchg
push
ret
sarb
mov
sbb
mov
sbb
lea
xor
call
arpl
pop
dec
jp
xchg
in
test
and
inc
dec
icebp
push
add
mov
fadds
mov
movsb
inc
sbb
cmc
and
out
insl
jns
mov
and
stos
mov
push
addr16
jmp
push
fwait
xchg
cli
sarl
mov
mov
bound
in
mov
mov
add
xchg
roll
xor
dec
out
fucom
lods
fwait
xchg
lods
addr16
or
inc
mov
je
pushf
or
lret
lea
pop
mov
jecxz
mov
call
out
imul
jns
in
xorl
xchg
mov
and
in
dec
pop
idiv
adc
sub
pop
xor
add
inc
lods
and
push
sti
outsb
jns,pn
std
rolb
push
stos
es
dec
adc
mov
push
test
cmp
imul
in
lock
jae
jecxz
push
cmpsl
lds
mov
pop
lea
push
popa
sub
inc
orb
sub
outsb
je
pop
adc
or
decb
cmp
movsl
fcoml
cmp
arpl
add
jbe
mov
test
cmpsb
pop
inc
jmp
and
rcr
iret
sbb
mov
jae
push
sbb
xchg
mov
cmp
jge
clc
shl
imul
fcmovnb
cld
arpl
notl
add
and
lds
sub
push
xchg
cmp
sub
sbb
cmpsl
lock
or
jle
popf
inc
and
cmpsl
loopne
pusha
int3
sub
in
pop
sub
test
add
push
pushf
jns
mov
fdivr
fisubl
mov
adc
test
fisttps
sub
cmp
fcoml
jl
enter
scas
jnp
repnz
cmp
imul
pop
call
sub
out
je
popa
imul
imul
int3
jae
jge
sub
push
aas
insl
jecxz
pop
daa
aam
xchg
shrl
hlt
sub
in
cmp
or
in
jle
cmp
mov
testl
and
mov
enter
pop
xor
fdivr
jbe
aaa
xchg
and
dec
cmpsb
or
lcall
in
add
pop
arpl
cbtw
mov
jle
cs
xchg
call
lea
mov
out
add
imul
mov
lahf
mov
jnp
lahf
xchg
dec
pushf
mov
leave
push
mov
xor
pop
or
mov
dec
ret
cmp
dec
mov
mov
ficoml
std
inc
pop
mov
dec
cmp
push
sahf
add
add
push
or
dec
clc
sub
push
out
pop
dec
or
push
cmpsb
adc
xchg
stc
aad
xchg
sub
movsb
inc
push
jae
sub
mov
fwait
dec
xor
push
lods
dec
nop
repnz
sar
mov
imulb
dec
cwtl
and
jbe
inc
mov
stos
jecxz
fwait
lea
pop
lds
jge
jl
dec
pusha
pop
add
lret
inc
into
inc
add
adc
adc
call
jl
icebp
fwait
push
add
xchg
dec
jp
ja
jno
mov
cmp
cld
into
xchg
xchg
inc
xor
mov
sti
cld
and
pop
rcll
mov
and
call
sub
mov
shlb
dec
adc
dec
sbb
std
mov
movsb
sti
enter
xchg
add
lahf
ljmp
fdivl
inc
nop
popl
cld
push
adc
adc
inc
cmpsb
lret
mov
mov
inc
loopne
mov
pop
mov
lcall
inc
xor
dec
adc
rolb
mov
je
pop
add
out
jbe
add
scas
push
leave
cmp
jge
clc
xor
adc
xor
cmpsl
rcpps
or
es
das
fcomps
mov
add
pop
stc
pop
dec
imul
mov
xchg
mov
lods
and
arpl
movsl
in
pop
jmp
xlat
and
sub
sbb
xchg
sbb
sub
fists
jp
xchg
scas
inc
aas
ret
mov
int3
jle
mov
jmp
in
gs
xchg
rclb
pop
loope
cwtl
mov
cld
aad
sub
dec
loopne
daa
mov
inc
mov
push
rclb
stos
and
in
push
stc
inc
push
jle
and
xchg
adc
js
sub
jns
fidivs
test
cld
je
inc
lds
add
cmpsb
xchg
xor
andl
test
cmpsl
repz
outsb
mov
and
adc
hlt
xor
lds
into
sub
ror
pusha
push
dec
xchg
pop
xchg
hlt
mov
or
std
mov
jno
xlat
je
xor
lcall
sub
jp
loopne
add
sub
cmpsl
mov
xor
xor
imul
add
xchg
or
das
cli
jbe
insb
ret
cltd
insb
loop
push
jl
stos
sub
push
jl
dec
jmp
aas
enter
loope
xor
shl
xlat
pop
xchg
cmpsb
fisubrl
push
push
xchg
stc
int3
inc
xchg
outsb
mov
daa
pushf
jge
pop
and
add
data16
and
out
stos
sub
leave
mov
je
stc
test
pusha
outsb
cmp
dec
mov
push
push
test
lods
mov
ds
mov
cmpsb
xchg
repz
data16
cmpsl
jno
flds
dec
sbb
sbb
mov
pop
dec
enter
sub
movsl
and
fistpll
ror
lahf
inc
push
cmp
mov
pushf
sbb
loop
mov
sbb
test
push
adc
jnp
sti
jnp
add
test
aaa
jae
add
scas
jmp
insb
ds
inc
enter
sahf
dec
movsl
roll
lcall
fnstsw
inc
push
je
addl
jle
cmp
mov
es
test
inc
dec
fimull
or
pop
and
imul
jge
push
jge
add
test
jle
lea
int3
js,pt
cmp
les
adc
inc
mov
push
lcall
xor
jbe
mov
mov
and
cli
sbb
dec
stc
xchg
add
data16
cltd
stc
and
mov
jp
push
add
cmp
adc
iret
lods
jmp
fs
or
fwait
mov
sbb
mov
shrl
and
sbb
push
dec
xor
pop
ds
dec
arpl
xor
clc
inc
sahf
insb
dec
xor
insb
mov
adc
sub
sbb
out
cwtl
daa
pop
lcall
mov
push
dec
movsb
push
jp
pop
adc
jl
idiv
js
jle
in
jp,pn
int
test
pop
or
rcr
adc
repz
in
inc
push
jle
and
lahf
or
mov
ret
daa
lods
mov
hlt
out
je
sbb
add
push
inc
repnz
rcrb
jge
outsb
roll
negb
je
outsl
fildl
inc
test
imul
rep
cltd
insb
aad
sub
dec
mov
mov
arpl
mov
push
inc
xchg
lods
stos
cmp
ja
xor
and
and
cmp
pop
leave
adc
loop
sub
jecxz
mov
xor
xchg
or
sbb
push
lahf
jecxz
daa
lock
arpl
test
mov
pop
mov
roll
dec
push
ror
pop
sbb
scas
imul
push
mov
test
pop
insb
dec
pop
repnz
das
cmp
ja
dec
loop
push
dec
mov
jmp
sbb
das
and
xlat
xor
pusha
add
sbb
and
pusha
mov
movsl
sbb
cmp
mov
in
pop
dec
ljmp
in
push
push
mov
lods
xchg
fwait
mov
lcall
out
pushf
insb
leave
sub
lods
lcall
fwait
andb
cmpsb
mov
sbbb
orl
fdivl
mov
xor
aam
fwait
psrlw
jle
lock
icebp
mov
arpl
inc
fwait
mov
mov
xchg
jnp
push
inc
cmp
out
movsb
movsb
sub
jl
pop
mov
fmull
inc
push
rcll
aaa
jns
cmpl
outsb
fsubs
pop
pop
aam
xchg
and
mov
les
sbb
dec
icebp
mov
repnz
das
cmp
push
repz
das
das
dec
sbb
lcall
mov
mov
pop
out
jns
and
xchg
mov
rcrl
jne
cmp
jg
jge
jb
push
loope
xchg
sbb
pop
jle
clc
das
jo
popa
mov
test
pop
or
repnz
ds
mov
lret
push
fcomps
les
dec
push
mov
negl
pop
aad
push
and
push
dec
and
xchg
mov
stc
nop
cmp
cmpsl
jb
inc
sub
loopne
dec
subl
xchg
add
inc
inc
loope
adc
mov
arpl
popa
jecxz
jno
insl
push
leave
push
popa
ds
mov
popa
into
push
fldcw
aad
mov
stos
dec
jb
stos
fimull
jp
push
bound
push
adc
pop
xchg
mov
sahf
mov
mov
popa
sbb
xchg
inc
mov
sub
loope
cmpsb
negl
mov
fidivrl
cmc
fwait
inc
insb
out
insl
xchg
das
jb
stos
aad
mov
jle
dec
in
cmpb
lods
lock
lcall
inc
and
fistpll
imul
add
jnp
add
int
cmp
fwait
scas
jno
xor
pushf
lret
jo
mov
je
pop
add
sti
pop
mov
es
enter
addr16
mov
jmp
setp
fldenv
arpl
je
mov
call
sbb
sub
cmp
notb
mov
jb
int
sbb
ljmp
sbb
sub
mov
cltd
sbb
push
xchg
jb
sarl
lea
cmp
imul
jb
inc
enter
lret
push
sbb
sbb
outsb
fidivrl
pop
cmp
sub
leave
jae
fistpll
loop
aad
inc
mov
daa
mov
nop
ret
adc
movsb
in
cltd
roll
data16
jecxz
mov
add
xchg
inc
and
cltd
jmp
add
stc
fnstcw
add
mov
inc
lret
sub
push
sub
jecxz
sub
int3
leave
inc
cmpb
cmpsb
mov
pop
jecxz
inc
int
inc
arpl
jns
xchg
jmp
enter
hlt
ficoml
and
pop
movsb
pop
es
jbe
adc
inc
dec
adc
sub
xchg
stos
rolb
cmpsb
ja
and
je
pop
jns
stos
int3
ret
mov
xchg
add
mulb
std
mov
rcrl
xor
repz
xor
jp
mov
xchg
cli
or
inc
rcll
fdivrs
ds
hlt
outsl
mov
lods
lcall
dec
inc
movsl
loopne
mov
je
fbstp
xchg
jo
and
shlb
idiv
out
cwtl
sbb
jno
stos
sbb
pop
sub
imul
mov
insl
test
dec
xchg
push
inc
jl,pn
xor
pop
inc
add
cltd
in
je
into
mov
inc
jnp
xchg
jmp
xor
and
es
mov
test
lods
add
data16
scas
iret
add
repz
xchg
adc
xor
mov
in
rolb
je
pop
mov
inc
ja
adc
out
mov
aaa
pop
mov
or
mov
test
sbb
sahf
arpl
or
data16
popf
cltd
ror
outsl
lahf
cs
ja
jge
sbb
ds
in
xchg
or
cwtl
mov
imul
cmp
test
jo
pushf
cli
sbb
mov
push
xsaveopt
inc
cmp
sahf
fisubrs
flds
iret
sarb
rcll
cmp
add
lret
outsl
aaa
cli
mov
cmp
idivb
jno
add
inc
inc
xor
jge
xchg
lret
out
loope
loopne
mov
es
rclb
lret
adc
jb
mov
scas
imul
cmp
les
sub
jge
xchg
mov
bound
ret
push
sbb
cwtl
inc
mov
and
jg
in
daa
sub
mov
test
pop
push
jp
inc
xor
cmp
sbb
pop
cmpsb
jl
pop
mov
lock
out
sub
dec
sub
dec
sub
inc
push
rclb
jo
and
in
mov
stos
inc
cs
xchg
mov
bound
popa
in
inc
jnp
arpl
fisubs
dec
push
movsl
pop
inc
prefetch
push
jno,pt
jb
lods
mov
sub
jnp
adc
test
cmp
adc
mov
sub
adc
push
rol
sbb
ds
pushf
cmp
xor
inc
out
fmul
out
mov
mov
sub
mov
inc
jle
cltd
mov
js
dec
push
cmp
xorl
ss
jbe
jb
sbb
rorb
add
push
ljmp
pop
mov
push
jb
mov
jmp
je
out
or
insl
inc
inc
adc
test
cmp
sbb
jecxz
outsl
inc
xchg
test
insb
lahf
xchg
pop
pop
inc
add
scas
mov
inc
out
out
nop
push
aad
arpl
cmovns
imul
xor
xlat
sbb
jno
jge
stc
sub
rolb
int3
scas
sub
and
push
movsb
mov
in
dec
aam
push
fdivs
add
sub
xchg
push
jmp
sub
imul
mov
add
inc
repz
scas
cli
inc
sub
push
push
jg
aas
dec
sti
fbld
sbb
and
pop
xchg
ljmp
mov
dec
sti
test
push
cmp
jge
or
xchg
dec
or
ljmp
sub
cwtl
call
inc
adc
mov
pushf
inc
cwtl
orb
imul
inc
cmp
dec
cmp
sub
xchg
in
inc
mov
push
sbb
scas
outsb
mov
jne
mov
lods
inc
loop
inc
or
in
mov
mov
inc
fsubl
jno
andb
shl
cmp
dec
sbb
inc
sub
lock
cs
and
pop
jno
popa
add
jbe
std
loop
push
add
dec
call
je
fmuls
and
mov
push
frstor
inc
pop
dec
inc
sbbb
and
into
out
mov
insb
sar
add
xor
sub
rcrb
inc
sbb
mov
loopne
shlb
xchg
arpl
pop
or
test
xchg
divl
pop
fnstenv
push
ret
jne
je
test
pop
pop
mov
cmp
jge
into
leave
dec
pop
jne
jg
ret
mov
daa
inc
pop
lock
mov
push
inc
jg
fidivs
cmp
arpl
jmp
xchg
mov
mov
sbb
pop
ret
pop
add
dec
test
daa
and
cmp
jp
clc
xchg
leave
fists
jge
enter
data16
int
mov
xchg
in
pop
std
lret
test
mov
mov
es
std
data16
and
add
loopne
push
sub
jo
sarb
sbb
add
insl
scas
into
call
repnz
dec
clc
xchg
and
cmp
sbb
mov
ja
lods
jo
stos
adc
inc
dec
stos
mov
into
pmuludq
sub
pop
popf
sbbb
cmpsl
jle
les
push
pop
jecxz
aaa
inc
mov
push
std
add
sub
enter
out
sub
jne
sar
in
jp
lock
repz
inc
push
jecxz
pop
mov
popa
add
movq
out
call
xchg
or
and
pop
roll
xor
mov
test
pop
add
and
clc
sub
xchg
testb
repnz
push
gs
sarl
sub
enter
adc
mov
xchg
ficoml
push
xor
mov
addr16
xchg
push
stos
outsl
pushf
dec
pusha
cs
and
dec
jmp
lcall
fmuls
shll
sti
rcrb
ret
add
sub
test
mov
pop
and
xor
mov
inc
cmp
aam
ss
sbb
xor
out
inc
xlat
es
test
stos
cmp
pop
aas
cs
xor
test
push
lret
in
bound
sarb
push
xor
dec
mov
aam
ja
pop
xchg
arpl
mov
movsl
xchg
ja
movl
mov
rcrb
mov
mov
incb
fs
fcoml
jno
mov
and
add
fwait
adc
sar
cmp
mov
push
es
dec
mov
jb
rorl
aaa
jl
dec
dec
lods
pop
std
pop
ret
loop
fnstcw
push
push
xchg
mov
imull
mov
inc
dec
mov
dec
cmp
mov
adc
dec
pushf
cmc
sbb
mov
lret
scas
xchg
sarl
mov
clc
cmp
outsb
jnp
rcll
cmp
addr16
nop
xchg
ficompl
add
mov
xchg
cmp
xchg
movsb
lcall
outsb
inc
lea
or
shlb
sbb
outsb
push
add
or
pop
push
xlat
pop
js
insb
ds
jl
dec
lret
aaa
xchg
in
je
test
inc
stos
icebp
cmpsb
test
and
xorb
mov
popf
sbb
add
in
push
sub
add
data16
lret
cmp
pop
es
inc
je
and
dec
mov
ds
mov
add
jbe
dec
or
mov
or
and
popa
adc
sub
je
jns
stc
mov
decl
ljmp
and
cmp
pop
add
dec
xchg
cmp
cld
es
mov
ret
pop
daa
adc
rclb
scas
les
jae
cmovbe
flds
mov
movsb
dec
jo
movsb
add
dec
inc
je
outsl
ljmp
out
in
pop
out
cld
xchg
inc
and
or
add
mov
movsl
add
add
push
lret
pop
sbb
pop
push
lahf
outsl
dec
shr
adc
mov
mov
push
fwait
inc
sbb
or
call
mov
icebp
arpl
jbe
pushf
jle
jp
mov
call
cmc
clc
clc
xor
ds
dec
inc
int
ret
les
fstp
icebp
cmp
sbb
push
clc
cmp
mov
mov
cli
imul
outsb
cmp
aad
sbb
and
in
lock
push
mov
adc
inc
ja
jle
ud2
int
cmp
pop
mov
mov
aam
test
xchg
mov
repz
hlt
pop
cld
and
outsb
jae
mov
rcrb
push
pop
aam
es
pusha
je
mov
inc
xor
cmp
sbb
push
into
sbb
xbegin
insl
mov
ljmp
mov
fistl
inc
pop
mov
jmp
mov
jb
jae
and
popa
and
repz
inc
inc
lods
subb
xor
inc
xor
insb
fsubrs
sub
sub
call
fistps
adc
or
dec
cmp
ja
sub
xchg
lods
arpl
sti
arpl
xchg
movsl
test
outsb
imul
mov
cmp
push
xchg
data16
lret
outsl
push
push
jmp
mov
xchg
stc
fisubrs
mov
mov
jle
shl
inc
mov
mov
out
jecxz
add
and
fidivrl
pop
jno
sahf
mov
push
ds
cld
sub
jp
dec
jg
pop
adc
lret
mov
fpatan
dec
mov
cmc
mov
lock
sbb
es
add
lret
je
addb
fdivrl
ja
push
and
or
test
mov
hlt
adc
push
mov
push
xchg
dec
into
jl
push
outsl
outsl
mov
mov
inc
iret
aam
sahf
lret
fstl
repnz
cmpsb
ja
jmp
inc
mov
mov
mov
push
and
cmp
outsl
jg
lret
stc
js
jae
xchg
outsb
ficompl
mov
jo
inc
leave
cltd
insl
dec
pop
mov
xchg
pop
mov
iret
pop
jo
fs
inc
sbb
negb
mov
jp
mov
mov
cs
sub
push
outsl
push
jl
test
daa
xchg
push
iret
mov
mov
movsb
dec
lock
sarl
les
mov
in
sbb
jns
icebp
test
xchg
xchg
rcr
negb
xchg
addr16
orb
into
stos
notb
push
or
push
mov
shrl
jmp
and
add
sbb
outsl
test
push
mov
inc
fdivrs
inc
jnp
enter
mov
pop
and
flds
sbb
inc
jle
in
les
jne
ret
ret
cmp
dec
jle
lea
inc
rorl
dec
mov
mov
inc
dec
out
and
fs
inc
movsb
cmpsl
les
test
add
jle
pop
jne
fcoml
out
out
fwait
mov
fsubl
je
rcll
dec
jle
dec
mov
and
inc
shlb
ret
dec
push
pop
mov
popf
xchg
mov
popf
test
mov
add
mov
push
cmpsl
aas
rolb
movsl
cmpsl
lods
adc
sub
out
xchg
sub
jecxz
rolb
in
shl
push
mov
stos
jl
inc
cwtl
xor
bound
out
and
add
movsl
push
adc
arpl
mov
test
inc
outsl
rcrb
sub
or
dec
hlt
mov
ret
gs
leave
test
inc
ja
js
jge
scas
inc
mov
dec
jl
jne
or
push
outsb
lods
push
dec
xchg
mov
sarl
sbb
xchg
mov
js
dec
int3
fistl
jb
scas
dec
out
adc
repz
pop
sub
push
ljmp
dec
pop
mov
aas
data16
and
jle
jmp
ljmp
getsec
fiadds
mov
pop
jp
pop
gs
or
mov
sbb
mov
pushf
pop
sub
mov
xchg
sbb
xchg
js
adc
sub
ror
imul
add
xchg
cmc
pop
add
hlt
pop
adc
sub
push
xchg
adc
cli
pop
inc
cmp
lret
xor
xlat
stos
lcall
jb
mov
fnstsw
iret
ja
xor
jge
inc
out
testb
inc
xchg
jl
sbb
jns
xchg
lret
ret
dec
xor
sbb
into
rol
pop
pop
lahf
fs
sbb
add
faddp
and
inc
mov
ljmp
jecxz
mov
stc
xor
into
mov
mov
enter
mov
sbb
in
in
xor
pop
jno
mov
icebp
mov
out
xor
add
add
fnstsw
insb
das
adc
cmp
mov
rclb
jg
movsb
add
and
mov
pop
cmpsl
mov
out
nop
xchg
mov
add
imul
cmpb
sbb
jg
out
dec
mov
inc
jge
int3
inc
stos
inc
adc
or
jmp
popa
or
jo
int
ljmp
fwait
jns
fwait
dec
pop
in
pusha
cmc
lods
movsb
ds
test
mov
cmp
mov
jp
lea
shl
jmp
inc
xchg
sub
aad
mov
cli
pop
pop
mov
int3
add
inc
cmpsl
je
lahf
or
xor
shrb
lods
push
sbb
dec
inc
add
lock
lahf
jnp
int3
in
and
and
cmp
adc
mov
cmp
push
mov
sti
pop
and
nop
data16
jnp
inc
mov
movsl
nop
xchg
cli
data16
adc
and
mov
stos
incl
hlt
loopne
mov
and
add
test
das
or
ret
xchg
dec
inc
in
inc
arpl
sub
nop
mov
jns
jae
aam
test
mov
jle
enter
push
hlt
add
hlt
mov
inc
das
in
mov
mov
fwait
test
mov
sub
clc
lods
cmp
lods
pop
mov
fst
adc
mov
sahf
js
cltd
ret
mov
mov
add
add
jecxz
enter
and
add
movaps
dec
cmp
outsb
xchg
sub
in
fdivrl
jno
adc
fisttpll
ret
lret
sbb
icebp
jno
cmp
dec
ljmp
clc
arpl
shlb
dec
pop
mov
push
je
mov
push
push
in
call
int
inc
popa
fucomi
xor
cmp
jbe
push
fwait
dec
das
sti
es
cltd
xlat
test
cwtl
jg
jmp
jns
mov
fwait
jne
lahf
lods
into
cmp
rorb
pushf
inc
popa
dec
sub
pusha
sbb
mov
das
cmp
inc
incb
rol
dec
add
insl
lds
shlb
inc
mov
push
sbb
enter
shl
popf
mov
mov
jbe
in
xchg
into
xchg
jb
dec
testl
fnsave
test
jecxz
lods
adc
enter
sub
iret
out
jb
inc
sub
imul
scas
dec
movsb
push
rclw
inc
jbe
sub
jns
int3
icebp
test
sar
inc
pop
inc
sub
aam
in
sti
imul
push
ljmp
xor
in
jnp
ret
fwait
pop
mov
mov
repz
sbb
rorl
inc
mov
ds
push
fistl
mov
mov
mov
into
cmp
test
stos
xchg
fidivs
push
mov
outsb
ljmp
arpl
adc
flds
jns
push
ret
movsl
pusha
and
xchg
jo
push
aad
stos
mov
sub
inc
cmp
aas
push
xchg
in
shrl
sbb
adc
push
inc
adc
jecxz
inc
popf
pop
pop
mov
int
or
scas
fildll
repnz
adc
sub
inc
push
cmp
push
or
rol
daa
divl
jno
adc
insl
shlb
jns
jbe
fsubrl
adc
xor
sarb
inc
enter
sarb
ret
call
js
ficompl
test
lahf
mov
jl
repz
push
movsl
and
in
test
add
dec
inc
jecxz
push
lods
lret
in
stos
test
cmp
and
out
loope
sub
xor
out
mov
jge
add
leave
mov
jecxz
add
jnp
scas
insb
xlat
mov
test
add
repnz
jecxz
dec
popa
inc
xor
jb
into
xchg
bound
imul
in
pop
pop
daa
out
sub
jle
dec
or
arpl
and
push
addl
mov
mov
dec
test
dec
cmp
nop
insb
cmpsl
mov
add
in
js
aas
notl
xor
int
fstpt
out
push
roll
std
daa
test
xchg
and
call
mov
out
or
sbb
or
and
lock
insl
push
call
xlat
xor
mov
fnsave
jne
or
shlb
jmp
adc
cwtl
add
sub
sbb
adc
nop
lahf
jle
sti
sbb
into
lds
je
inc
adc
mov
data16
xor
mov
daa
jne
data16
shrb
inc
cli
dec
bsr
inc
jl
inc
pop
scas
jp
dec
push
cmp
adc
mov
push
out
dec
cmpl
cs
cmpsb
or
xchg
jb
out
mov
push
cmp
sbb
push
pop
clc
add
dec
dec
sub
jbe
sub
in
add
stc
inc
push
inc
cmpsl
dec
or
inc
xor
push
cli
jecxz
inc
fsubl
insl
xor
push
cmp
jbe
aam
cmpsl
pop
fucom
pushf
in
cwtl
test
and
xor
or
and
inc
jb
test
out
push
pushf
dec
push
adc
js
test
jno
mov
inc
test
mov
mov
aas
inc
pop
scas
test
inc
sub
decl
es
lret
inc
jnp
mov
ret
fsubrl
test
pshufw
jo
xchg
cmp
mov
adc
aaa
fwait
adcb
ljmp
or
push
jne
adc
or
xor
dec
pop
adc
sbb
pusha
xor
cmp
dec
mov
sbb
stc
jge
test
fstl
imul
loope
test
sti
jle
popa
xorl
pop
sub
out
jae
dec
adc
cld
aam
cli
cs
push
mov
cli
std
decb
imul
xor
sarl
mov
xchg
clc
rclb
pushw
mov
push
dec
in
das
mov
lods
push
xchg
or
add
aam
pop
jnp
js
and
xor
mov
mov
xchg
sbb
mov
mov
mov
mov
xlat
pop
outsb
sbb
clc
popf
mov
jne
mov
lods
push
mov
enter
adc
leavew
jle
push
sub
dec
loopne
dec
lahf
cmc
shrb
mov
aad
cmp
mov
mov
sbb
daa
mov
repz
test
lcall
xchg
icebp
jns
lock
loopne
sub
fcoms
sbb
fidivrs
xlat
jmp
in
mov
add
jecxz
pop
cs
mov
mov
outsb
cmpsl
out
or
pop
or
inc
dec
out
outsl
sbb
add
imul
in
mov
and
inc
push
push
js
jns
and
fwait
mov
cmp
imul
mov
inc
lret
adc
aad
outsl
mov
outsl
jo
jb
mov
dec
xchg
sub
scas
mov
shrl
rcrb
jle
in
outsb
dec
lods
test
lahf
adcb
test
test
xchg
xchg
insb
das
cmp
mov
mov
in
imul
call
push
xchg
ret
add
loope
aaa
mov
inc
nop
xor
xor
popa
adc
jae
pop
ds
mov
xor
daa
not
fbld
jbe
out
hlt
mov
pushf
movsl
mov
mov
rcrl
stos
popa
imul
popa
inc
ds
inc
xor
sub
stos
push
repz
cmp
mov
popa
jl
pop
mov
enter
repnz
push
loop
les
test
repz
sbb
int3
das
shl
lock
js
push
xchg
inc
je
loop,pn
xchg
cmc
inc
and
sti
sub
stos
dec
imul
pop
repz
or
add
inc
aam
int
mov
aas
gs
arpl
pop
xchg
mov
leave
iret
fdivs
dec
mov
and
pop
lea
ret
jbe
pop
and
test
mov
jno
repz
stos
pop
push
adc
sbb
pop
fisttpll
sti
mov
out
scas
sbb
push
jno
ret
mov
cmp
mov
sarl
or
adc
and
pop
add
or
xchg
cmova
pop
cltd
or
fs
fildll
mov
pushf
movsl
add
mov
gs
cmp
or
adc
jno
mov
mov
lea
mov
aaa
pop
push
push
call
jmp
call
movsb
mov
dec
or
or
les
andl
mov
je
add
out
mov
sahf
push
insb
arpl
cs
int3
xchg
or
aaa
negb
fmuls
jno
add
mov
jp
xlat
out
cmp
cmp
sar
jne
movsl
and
or
stos
shrl
push
push
mov
nop
out
inc
jmp
xchg
xchg
adc
push
mov
xor
dec
ficompl
add
stc
jb
lds
sbb
dec
ja
pop
pop
adc
lods
xlat
decb
xchg
cwtl
cs
dec
and
insb
mov
outsb
ja
fidivrs
in
xor
mov
xchg
in
jb
cltd
inc
fwait
in
inc
stos
js
sbb
mov
hlt
arpl
or
dec
pop
sahf
movsl
and
pop
pop
fs
xor
into
enter
std
adc
call
daa
gs
in
dec
sti
loopne
cmp
mov
sub
cld
sbb
loope
inc
int3
mov
fidivrl
inc
imul
mov
dec
rorb
push
jl
add
cli
xor
inc
arpl
fldcw
mulb
je
mov
cmpsb
or
in
ds
scas
inc
push
mov
andb
or
or
fdivrs
jl
cwtl
scas
dec
cmp
mov
fnstcw
fnstsw
sub
and
aas
adc
sub
dec
subl
sbb
lock
inc
pop
int3
adc
push
push
cmp
pusha
sbb
leave
pusha
xchg
cmp
inc
adc
and
inc
into
fdivl
push
push
mov
add
into
sub
in
lret
push
call
jbe
or
jge
aam
push
outsb
dec
nop
sub
xchg
loop
sbb
das
or
pop
inc
push
or
std
mov
push
cmp
jge
scas
in
out
fwait
inc
jae
lret
push
cmp
movsl
nop
xchg
je
mov
stos
cmp
ljmp
add
nop
addr16
ffree
pop
and
adc
ret
test
pop
mov
inc
xor
push
lahf
mov
push
dec
scas
jl
inc
and
in
xchg
cmp
aam
inc
mov
dec
add
mov
cltd
in
and
sbb
xchg
pop
outsb
lret
adc
aam
dec
sbb
or
sbb
popl
sbb
lret
dec
cmp
js
repz
jo
adc
mov
inc
sbb
jnp
repz
pop
adc
test
inc
push
dec
test
lcall
push
call
adc
or
aad
mov
xlat
dec
sbb
loopne
in
jl
lds
rcl
into
sbb
insb
mov
xchg
call
xor
outsb
mov
enter
int3
out
cli
jno
ds
fisubl
cltd
add
pop
js
aam
cli
in
xchg
arpl
mov
pop
xchg
test
in
cmpl
aam
mov
mov
jl
jnp
xor
ret
pop
pop
popa
xor
xchg
xor
jge
xor
arpl
shlb
scas
pop
xor
cmc
aaa
data16
lods
cmp
jecxz
ss
jecxz
frstor
mov
cwtl
sbb
mov
adc
out
lock
lock
subl
flds
das
jae
aad
fwait
sub
stos
sbb
js
inc
pop
add
je
addr16
cmpsl
or
jge
lods
call
bound
sarl
fildl
xchg
ret
or
mov
sub
in
insl
rorl
clc
pop
movb
jge
dec
into
cmpsb
inc
xor
je
into
dec
das
insl
mov
insl
movb
pusha
push
mov
flds
sbb
pop
xor
xchg
adc
mov
sub
addr16
jne
cmp
test
mov
aas
pmovmskb
in
fadd
dec
sub
dec
sarb
sbb
sub
imul
or
add
dec
outsb
xor
mov
or
xchg
mov
cmp
sub
pop
mov
cmp
xchg
lods
jne
sahf
jo
xor
push
aam
imul
cmp
cwtl
add
cmp
fs
jp
sub
jge
lcall
cmp
jns
imul
inc
aad
pop
push
stos
xor
jecxz
test
sub
xor
and
les
sti
dec
test
pop
sarl
lods
sub
cs
pushf
and
scas
push
sub
sub
cmp
sbb
jns
fsubl
hlt
ret
int3
add
sbb
fbld
fistpll
lods
mov
cmp
orl
push
xor
cmp
pushf
or
movsb
mov
mov
sbb
lahf
xchg
dec
cmp
push
mov
cmp
lods
gs
sahf
push
xor
pushf
push
imul
sub
cmp
pop
push
fisubl
push
dec
sub
sbb
lahf
fstpt
mov
and
push
jae
push
imul
xor
lods
inc
sahf
and
in
cmp
dec
pushf
mov
orps
ss
cmp
dec
ss
xchg
lods
rorb
mov
ljmp
imul
insb
sbb
cmp
inc
sub
loope
mov
dec
fs
lahf
sti
mov
inc
mov
sbb
mov
lret
jle
lock
addr16
add
hlt
inc
mov
int3
das
loop
cmp
fisttps
push
insb
cmp
insl
add
mov
sbb
adc
add
add
xchg
xchg
lock
sbb
fcomps
and
inc
push
or
or
sub
roll
imul
push
xchg
loope
xchg
orl
movsb
lea
nop
loope
and
in
loop
cmp
push
sub
aas
ljmp
pushw
or
add
xchg
cmp
mov
push
push
fs
adc
adc
cmp
adc
pop
fidivrl
sub
sbb
lahf
rcrl
fildll
loopne
push
dec
les
lret
out
sub
mov
cmp
xlat
arpl
adc
mov
faddp
popl
adc
mov
or
insb
aas
xor
sub
cmp
pop
sbb
xchg
xchg
xchg
mov
push
loopne
fistpll
add
jp
sub
sbb
mov
add
mov
push
push
mov
xchg
xor
sbb
jae
out
cmp
lcall
sub
rclb
lds
fbstp
sub
das
and
add
aam
loope
imul
and
popa
lahf
mov
jge
inc
dec
xor
cmpsb
adc
orb
ds
scas
ds
pop
jmp
nop
call
mov
and
adc
jns
movsb
cmp
lea
jl
push
subl
dec
dec
and
pop
imul
popf
mov
inc
out
xor
jp
sahf
mov
adc
stc
mov
mov
push
popa
movsb
pop
int
cmp
xor
cmpl
ja
jle
dec
xchg
enter
push
ss
cmp
lret
inc
xor
ja
cmp
sbb
stos
cmp
cmp
ljmp
insb
cmp
push
test
or
stc
cmp
aad
cmpb
sbb
pop
sub
jns
xor
int3
dec
and
mov
arpl
sub
aad
int
xchg
xor
sub
jecxz
fst
mov
loop
fildll
hlt
mov
je
addr16
sub
xlat
and
xor
xchg
fdivrl
test
add
cmp
sub
decl
adc
addb
inc
xor
mov
push
addr16
arpl
jno
inc
jg
or
lods
mov
pop
adc
inc
in
subb
xlat
cmp
mov
pop
sub
mov
pop
mov
js
sahf
sarl
jge
paddusw
inc
dec
sub
arpl
ss
mov
cwtl
mov
int3
shrb
popa
inc
lret
movsl
pop
cmp
cmpsl
mov
pop
repnz
and
iret
jbe
xchg
rcrb
mov
fildl
pop
and
ja
adc
push
cmp
mov
sbb
dec
sub
popf
ds
dec
ljmp
mov
push
sbb
jp
jge
fidivrl
sub
movsl
xor
scas
int
xchg
aaa
clc
xchg
add
push
je
lahf
les
cmp
sbb
arpl
fistps
dec
stos
xor
in
or
cmp
and
test
in
hlt
push
mov
cmp
dec
xor
push
and
or
push
fnstcw
push
jg
loope
sbb
inc
imul
inc
pop
inc
bnd
push
mov
test
add
in
and
inc
or
sbb
mov
jecxz
mov
decl
jmp
jp
push
sahf
ljmp
adc
lret
popa
inc
loop
and
or
es
scas
iret
ss
cmp
sti
cs
cmp
mov
daa
orl
cltd
inc
test
jne
pop
ds
inc
mov
or
adcb
data16
lcall
jp
dec
jle
cmp
fs
push
and
cmpb
int
xchg
xor
sbb
jmp
mov
xor
js
sbb
cmp
es
jecxz
pop
mov
imul
mov
cld
jg
push
xor
popa
or
lods
cmp
sub
call
jge
push
add
mov
push
cmp
mov
push
call
add
out
add
xchg
mov
sub
add
mov
jg
xlat
loope
sub
push
fidivs
dec
jecxz
in
aad
sbb
testl
jp
sahf
jb
shlb
sbb
mov
inc
mov
pop
cmpsl
jecxz
ret
cmp
fcoms
test
enter
sar
mov
jl
mov
daa
push
dec
mov
test
sarl
mov
cmp
sbb
push
lock
test
add
jns
xchg
mov
arpl
xor
jne
sti
and
sub
dec
cs
cmp
or
cmp
xchg
cmp
mov
inc
mov
cmp
jp
mov
shrl
cmp
sub
xor
push
cmp
add
dec
sub
insb
mov
sub
cmp
bound
push
scas
and
movsl
jl
cmp
lods
sbb
test
mov
cmp
adc
les
mov
pop
push
pop
ficomps
out
cmpsl
sub
adc
and
sbb
cmp
jecxz
out
xchg
std
cli
dec
pop
divl
cmp
mov
and
jl
adc
pushf
call
cmp
rcrb
cmp
add
or
bnd
jle
jp
dec
lea
popa
mov
mov
test
jp
xchg
adc
cs
pop
mov
xchg
ret
or
jnp
jo
flds
stos
fisubl
sarl
imull
jle
imul
sub
adc
lret
cmp
xor
aaa
sub
adc
xchg
loope
insb
cmp
jae
push
push
push
dec
jp
xor
inc
mov
add
push
and
jmp
cwtl
xchg
and
xor
mov
dec
dec
xor
dec
push
jne
mov
cmp
adc
cmp
lods
stos
add
xor
gs
xor
xchg
add
pop
ror
mov
dec
das
les
xchg
jle
xlat
add
fnstsw
sbb
fbstp
and
cmp
lods
fdiv
sub
xor
inc
icebp
pop
xchg
mov
or
cmp
popa
inc
lcall
cmpsl
repz
cmp
xchg
lahf
jl
or
dec
inc
cmp
push
sub
jae
cwtl
addl
cmp
mov
scas
or
push
sbb
xor
mov
cmpsl
mov
icebp
or
popa
gs
data16
lcall
cwtl
push
sarb
sbb
pop
push
sti
popf
mov
int
xchg
push
dec
push
add
pusha
xchg
cmp
negb
lea
cmp
jmp
inc
push
and
lret
xor
sti
sub
cli
and
test
xor
mov
rclb
mov
andl
in
or
sub
jmp
ret
or
jno
test
push
mov
cmp
xlat
xchg
rcrb
cmp
dec
leave
dec
fdivl
cmp
stos
jge
aaa
in
std
dec
sbb
cmp
cmp
test
jl
xchg
cmp
mov
jg
shlb
inc
stos
pop
mov
fs
cmpsl
ret
frstor
cmp
push
in
iret
push
cmp
inc
test
cmp
insl
mov
mov
xchg
mov
cmp
sbb
sub
fistps
inc
xchg
inc
movsl
or
enter
jle
push
in
sub
mov
data16
push
repz
sbb
sbb
add
cmp
nop
test
mov
xor
cmp
xor
or
mov
sub
inc
sbb
cmp
and
sbbb
shll
jns
sub
decl
jge
shlb
mov
push
jne
test
std
les
arpl
mov
cmp
daa
jmp
cmp
and
mov
adc
xor
jb
subps
sbb
push
xlat
add
into
cltd
cmp
decl
jno
mov
push
jmp
bound
in
pop
dec
sbb
scas
jp
sahf
loop
push
push
xchg
shll
aaa
imul
inc
mov
add
cmpsl
mov
add
push
mov
iret
cmp
jbe
popa
xchg
sub
fildl
sarl
jno
sbb
xchg
xchg
xchg
cmp
inc
mov
xchg
xor
sbb
iret
loopne
xor
incl
adc
add
fistl
test
sub
std
sbb
into
inc
xor
scas
cmp
std
add
mov
inc
fs
and
mov
cmp
sub
imul
cwtl
xor
rorl
dec
jmp
sarb
in
or
push
add
mov
inc
mov
ret
or
ds
xor
mov
lret
xchg
andb
lcall
mov
and
xchg
jno
dec
cli
cmpsl
xor
ret
xor
call
xor
xor
lret
mov
aaa
sar
sti
rclb
push
pusha
pop
cmp
mov
stos
push
in
loope
push
sbb
sbb
mov
xchg
hlt
push
mov
in
cmp
ret
add
push
dec
lock
lods
sub
inc
mov
pop
pop
inc
jle
push
add
lea
xchg
adc
fldenv
xchg
ds
mov
lods
fstpl
loope
loope
int
adc
mov
dec
jecxz
stc
repnz
sub
rcr
in
loope
int
adc
loop
adc
adc
cmp
inc
call
cmp
and
in
dec
ffreep
stos
lods
lret
fldl2t
mov
push
cmp
mov
cmp
ret
mov
add
jle
push
adc
add
shl
dec
lahf
jl
mov
mov
fstl
stos
or
add
insb
mov
cmp
lcall
mov
add
in
xchg
cli
cs
pop
jp
cs
lds
inc
mov
cmp
test
fsts
rol
inc
xor
lods
adc
negb
ret
xchg
xor
sub
xchg
mov
aaa
jg
or
mov
push
cmp
mov
cli
adc
cmp
mov
lods
jne
cmc
popa
cli
lods
push
fstps
jnp
in
in
ljmp
sbb
xor
loopw
lret
inc
add
fwait
add
lods
rcrl
stos
stos
in
adc
pushf
xor
lcall
imul
mov
mov
aas
xor
adc
push
or
ljmp
jne
xor
or
dec
mov
pop
inc
sbbl
fistpll
lods
mov
out
fstps
mov
add
mov
cli
inc
ds
ret
repnz
scas
add
fisubrl
cld
pop
mov
cmpb
fwait
scas
ret
jg
xchg
lahf
mov
sub
xchg
insl
and
inc
sub
cli
out
ljmp
inc
ljmp
ljmp
ss
aas
icebp
ror
and
dec
std
cmpb
cmpl
dec
jae
dec
dec
pushl
mov
in
push
ds
aas
mov
std
sub
sub
xor
fucomp
pop
repnz
fcmovnb
loop
dec
cmp
mov
push
dec
xlat
pop
cwtl
sub
cltd
inc
into
lds
sub
ret
fldenv
cmpb
std
mov
lcall
sbb
fnstsw
push
cld
xchg
into
adc
add
ret
fldl2e
lods
push
pushf
dec
flds
fimull
push
insb
lret
inc
mov
xchg
aaa
jbe
push
push
pop
mov
mov
aas
data16
daa
jb
push
lcall
bound
mov
mov
mov
or
xlat
add
push
fidivrl
sbb
stos
gs
mov
ds
mov
and
dec
aaa
inc
ficoms
jmp
push
and
mov
sub
push
subb
and
sbb
pop
jno
icebp
xchg
xlat
cmp
ret
lods
sub
lods
mov
jmp
fucom
call
push
loop
adc
inc
rcl
pop
xchg
mov
jbe
mov
inc
sbb
stos
nop
push
test
xor
sub
dec
fimull
dec
mov
out
pop
ljmp
inc
adc
xor
ror
mov
in
jp
sahf
and
mov
and
mov
sbb
xchg
scas
pusha
fsts
and
loope
fldenv
fisttpl
cld
cli
sbb
dec
mov
ljmp
inc
loop
jl
pop
inc
cmp
es
aas
addl
ret
dec
repnz
pop
faddp
shr
dec
mov
push
push
ljmp
insb
fisubrl
in
loope
int
and
lret
fstpt
into
dec
mov
xchg
ds
sub
je
lcall
lods
popa
dec
lea
sti
cli
into
mov
daa
or
in
add
dec
mov
mov
inc
and
push
push
fisttps
sti
mov
cltd
mov
ret
mov
mov
cli
lods
push
adc
mov
jo
ljmp
pushf
fildl
and
ret
jb
shlb
stc
xchg
mov
ret
imul
loop
mov
cmp
jmp
cli
and
push
xchg
decl
ret
adc
ljmp
jae
sbb
stos
cld
jnp
fwait
aam
pushf
out
fstps
subb
stos
out
cmp
pushf
imull
jmp
ret
fdivrs
add
sbb
jmp
pusha
pushf
ror
cmp
clc
push
test
sub
clc
call
lea
jne
pushf
pushf
pusha
lea
je
push
push
pushf
pushf
mov
pushf
push
movb
call
dec
or
add
add
add
add
or
add
add
ljmp
inc
roll
add
add
das
lods
add
add
add
shl
add
add
add
arpl
add
add
add
push
add
add
add
mov
add
loope
add
mov
add
lret
mov
add
add
mov
add
rol
add
add
add
and
adc
movl
ret
leave
add
dec
test
sbb
xchg
sahf
out
clc
push
and
xchg
or
cltd
inc
jl
mov
jo
mov
movsb
inc
jg
push
fmuls
push
xchg
addl
and
test
ret
dec
iret
xorl
out
xchg
add
outsl
insb
xchg
scas
inc
lret
ret
fcmovnbe
mov
in
jne
dec
ficoms
jbe
int3
push
int
pop
mov
mov
push
lret
imul
push
aam
and
xor
in
int
jne
pop
idivl
mov
xor
xor
imul
nop
mov
test
xor
or
dec
fisubrs
pop
jge
leave
xchg
mov
clc
out
xchg
pusha
pop
jg
xchg
mov
out
jg
inc
pop
rcll
jg
lds
or
arpl
iret
jae
mov
in
cwtl
int3
xorb
mov
xor
xchg
mov
aaa
lds
inc
push
cs
inc
icebp
sbb
insl
popf
cwtl
mov
inc
mov
or
pop
push
repnz
mov
mov
xchg
shll
mov
and
jb
cmp
inc
ficompl
xchg
jp
push
inc
into
push
adc
test
test
aam
sub
test
imul
add
or
push
sbbl
mov
lahf
jge
push
dec
pop
dec
scas
adc
dec
mov
dec
out
ds
stos
mov
sub
push
rolb
pop
mov
fsubs
imul
or
jmp
and
mov
cmp
lock
pop
jne
cwtl
aad
jo
pop
pop
xchg
cwtl
mov
aas
std
cmp
sub
xor
fcmovb
sbb
loop
scas
jo
and
pop
daa
fistps
dec
test
sti
mov
mov
dec
movsl
in
inc
inc
dec
popf
dec
fcomi
pushf
outsb
cmpsl
mov
inc
push
jnp
aaa
pop
dec
inc
pop
jmp
cmp
dec
lock
dec
pop
inc
gs
inc
sbb
jge
int
sbb
inc
jo
xchg
cmp
negl
jl
xor
push
sbb
lods
mov
mov
sub
push
out
cs
fcomps
scas
fsubrl
xchg
adc
xchg
js
lret
leave
xchg
push
jnp
xchg
jge
bound
sub
pop
pop
adcb
push
xchg
pushf
clc
add
aaa
iret
push
add
or
cmp
push
cmpsl
pop
out
repnz
ds
mov
jle
mov
xor
loope
push
xlat
lcall
jmp
mov
jb
inc
jge
aad
mov
pusha
andl
movsl
mov
push
mov
or
mov
mov
xchg
daa
out
pop
mov
push
mov
pop
rcrl
pop
mov
and
mov
jge
int
cmc
test
movsl
call
cwtl
mov
xlat
orb
inc
push
xchg
mov
mov
sub
dec
subl
iret
jmp
ret
mov
in
scas
inc
mov
cmp
cmp
add
push
andb
jbe
sub
inc
dec
dec
pop
xchg
jnp
pop
mov
mov
mov
repz
cmp
push
mov
je
push
mov
or
or
and
lret
pop
pop
mov
daa
scas
dec
jmp
sti
mov
xchg
addl
or
in
inc
inc
and
js,pn
call
js
add
shr
push
add
inc
shr
jae
ret
cmp
pop
vpmulhw
mov
xlat
jecxz
xor
and
cmp
mov
dec
lret
shlb
cli
cltd
ljmp
xchg
imul
loopne
sub
sbb
push
or
cld
pop
arpl
inc
rclb
push
out
pusha
pop
les
push
jmp
les
xchg
add
sbb
sbb
ficompl
jbe
lcall
test
pushf
mov
pusha
lea
je
pusha
pusha
movb
pushf
lea
jmp
push
mov
jmp
and
in
adc
psraw
pop
mov
ss
push
jp
scas
scas
adc
push
not
mov
pop
jno
test
mov
cmp
mov
pop
mov
in
mov
adc
icebp
mov
ret
sbb
movb
or
in
cs
cltd
cmpsl
inc
sti
std
mov
add
sti
xchg
push
ljmp
fwait
cmp
push
out
mov
fucom
repnz
stc
fdivl
cmp
icebp
xor
jge
cmp
mov
mov
bound
in
and
mov
add
dec
mov
mov
in
jo,pt
mov
jg
fdivr
stc
ror
and
filds
scas
mov
cmp
push
lcall
cmc
xor
shlb
mov
add
outsb
cmp
insl
adc
lods
inc
stc
lods
mov
pop
mov
xchg
cmp
add
jmp
cmp
jae
iret
jg
cmc
mov
cmp
es
pop
aas
outsl
add
xchg
insb
test
fs
inc
push
in
push
mov
int3
jge
imul
dec
pop
xchg
mov
mov
imul
lahf
int
cmp
std
add
fisttpl
adc
movsb
xchg
fwait
mov
daa
sub
mov
xchg
lock
fcomi
js
add
push
mov
push
xchg
cmp
push
sub
mov
and
pushf
lea
ja
pushf
pusha
lea
jmp
sbb
dec
jns
push
lods
ret
lcall
adc
dec
fs
pushf
push
mov
cs
int3
xchg
fsubl
lcall
inc
inc
push
stc
mov
cld
aam
sbb
mov
dec
xchg
cwtl
cmp
mov
pop
mov
jae
aam
dec
fisubrl
pop
in
and
add
call
xor
pop
inc
sub
cmp
pop
ss
loop
push
cmpsl
popa
sahf
or
lods
mov
xchg
loope
cwtl
adc
stos
loopne
push
and
rorb
lcall
xor
fidivl
mov
cmc
out
ror
out
cltd
rcll
pushf
sub
push
mov
pandn
push
adc
fildll
push
lret
xlat
mov
sub
mov
mov
push
pop
data16
into
sarb
mov
subb
xor
clc
xor
xchg
mov
jno
repnz
or
lock
js
nop
ret
stos
sbb
inc
mov
xor
stos
cltd
or
cmp
aam
imul
pop
nop
pop
jo
cli
ret
pop
lahf
push
pop
aaa
cltd
scas
fs
push
in
pop
shrb
cli
out
test
xor
fldt
cmpsl
xor
jnp
xchg
pop
lret
push
mov
xor
add
je
outsl
fs
gs
popa
outsb
fs
gs
add
shrd
and
mov
cmp
mov
test
cmc
xor
stc
bt
pushf
call
pushl
push
lea
jne
xor
cmp
mov
sub
setns
dec
bsf
mov
rcl
sub
sub
add
clc
rcl
mov
pusha
stc
test
pushf
lea
je
clc
pushf
sub
stc
stc
push
cmp
mov
pushl
lea
ja
stc
imul
pushf
add
pushf
movb
lea
jmp
test
push
jg
xlat
jecxz
sbb
sbb
addl
mov
mov
lret
cmp
pop
and
stc
push
mov
shll
out
in
sbb
mov
add
cwtl
lret
mov
add
mov
out
adc
mov
jl
xor
add
jle
lea
push
not
movb
bswap
mov
movw
call
mov
ficompl
sub
mov
decb
push
mov
cmp
add
adcb
es
repnz
push
xor
xor
cli
movsl
xchg
or
mov
jno
add
lock
sbb
cmp
and
and
aas
mul
xchg
out
jns
adc
inc
repz
repnz
sbb
ret
ret
std
lock
leave
jge
ss
push
pop
arpl
aaa
dec
imul
inc
cmpsl
cmp
mov
dec
jb
sbb
xorl
jp
dec
fisttps
and
sbb
inc
fldcw
xorps
xchg
fs
fstpt
mov
pushf
iret
mov
fcomps
mov
daa
pop
pop
inc
jbe
lahf
mov
mov
ret
pop
sahf
push
in
lret
pop
adc
fnsave
movsl
xor
xchg
or
test
cmc
test
add
mov
mov
mov
pusha
lea
jmp
sets
pop
pusha
mov
pop
mov
not
pushf
pop
lea
mov
push
pushl
ret
sub
lea
jmp
add
inc
gs
gs
dec
gs
imul
rolb
push
push
call
push
dec
inc
dec
dec
xor
cs
insb
add
sub
jbe
sub
jbe
xor
push
popf
and
pop
xor
pop
ss
jb
pop
pop
xor
pop
outsb
data16
popf
inc
pop
popf
xor
popf
jb
pop
push
inc
outsb
popf
push
inc
pop
dec
popf
push
inc
push
data16
popf
jno
sbb
fs
jne
movzbw
jmp
mov
cmp
pusha
sub
cmp
pushf
pushl
popl
test
call
xor
imul
movb
push
and
mov
lret
push
xchg
leave
loopne
add
and
jmp
aad
lret
jmp
loope
inc
add
pop
pop
or
out
std
xor
xchg
insb
sbb
jns
jge
mov
dec
push
pop
ja
test
iret
or
mov
push
fmul
jnp
mov
mov
pop
sub
push
jns
clc
mov
lods
dec
mov
dec
pop
cs
xchg
scas
pop
negb
fcmovbe
mov
fwait
push
jmp
push
push
push
push
and
sarb
enter
nop
mov
clc
adc
pop
insb
hlt
add
outsb
test
pop
fsubs
and
mov
stc
or
cmpsl
mov
ret
mov
mov
pushf
jge
fdivr
or
push
xor
daa
and
cwtl
addr16
xor
fisubl
mov
outsl
sti
xor
cmp
loop
mov
xchg
cmp
jle
mov
insb
pop
sbb
call
pusha
mov
push
pusha
mov
mov
lea
jmp
int
lahf
lahf
aaa
hlt
inc
add
adc
in
cmp
jno
outsl
ljmp
lds
inc
pop
mov
mov
js
inc
cmp
mov
loop
imul
sub
xor
stc
cmpsb
ljmp
inc
mov
jb
pop
dec
sub
push
cmp
or
iret
je
mov
int3
subb
pusha
clc
mov
cmpsl
cli
jbe
add
add
ljmp
mov
and
mov
test
lea
sbb
sbb
cmpsl
cmp
stos
insb
lahf
lahf
daa
lods
sub
and
adc
out
shlb
mov
xchg
and
add
cmc
jns
push
pop
jp
ret
jb
adc
mov
stos
xchg
xchg
or
cltd
and
addl
fstl
jae
icebp
dec
btr
push
movsbw
clc
shr
bts
mov
bsf
sub
shr
jmp
movl
pusha
movb
movl
push
push
pushf
lea
jmp
lds
lods
ror
inc
dec
pop
xchg
cltd
movsl
mov
push
pop
fyl2xp1
push
and
fwait
out
in
dec
cmc
mov
mov
nop
or
jno
comiss
push
push
out
lds
jno
push
cmp
iret
aad
pop
ret
xor
mov
pop
or
decl
or
scas
jle
into
jbe
cmpsb
sub
cli
scas
ds
mov
adc
loope
bsf
mov
bt
bt
cmp
jmp
pusha
call
lea
ja
pushf
pushf
pusha
lea
jb
push
clc
cmpb
pusha
push
lea
jne
bts
sub
or
mov
pushf
bt
call
rcrl
neg
and
leave
std
sbb
mov
and
cmp
out
inc
dec
hlt
cmc
sbb
sbb
pop
outsb
dec
test
cli
test
cld
sbb
cmp
daa
movsl
pop
adc
shr
and
shrb
mov
icebp
icebp
cmp
mov
roll
xor
mov
fildll
pop
xor
ss
xchg
push
shlb
xchg
es
xchg
inc
shlb
cmpsl
clc
movsb
xchg
pop
lea
je
clc
pusha
cmp
mov
call
add
xor
cltd
iret
fsubrp
sbb
cmp
pusha
mov
je
daa
bound
cltd
inc
cli
cwtl
pushf
imul
lods
pop
add
out
int
gs
mov
pop
test
fxch
test
mov
sti
or
cmp
out
pop
mov
cli
das
mov
clc
aad
mov
fwait
and
and
or
adc
idivl
cmpsl
xor
pop
pop
ret
push
add
clc
sbb
add
or
movsb
or
sub
sbb
mov
call
add
jnp
leave
sub
push
inc
add
imul
xor
push
popf
int3
add
push
sub
les
or
and
fwait
sub
pop
and
jge
add
mov
cli
or
adc
inc
add
jne
mov
stos
or
lds
daa
xor
mov
ffreep
test
or
add
sub
lods
jl
cmovns
test
and
fistpl
popf
xor
popf
imul
add
sub
mov
test
mov
or
inc
add
adc
pop
stos
les
lea
mov
mov
sbb
cmp
sbb
inc
jo
mov
mov
stos
mov
mov
mov
fwait
int3
mov
sbb
aas
les
sub
popf
mov
jg
jmp
mov
pop
movsl
jp
dec
adc
stos
pop
mov
add
inc
cmp
push
mov
lcall
xchg
or
scas
idivl
in
xchg
push
fcmovne
in
add
icebp
pop
stos
pushf
lds
bndstx
adc
pop
dec
fnstcw
cli
cltd
mov
std
and
lret
fs
or
vmovapd
sbb
cmp
cmc
push
mov
movsb
and
jo
jne
ret
sub
add
xor
ds
add
fwait
xor
dec
inc
jge
lcall
sub
mov
jnp
xchg
xor
mov
ljmp
mov
and
add
add
cltd
fsubl
add
rcll
inc
int
in
cmp
push
insb
pop
andb
mov
imul
inc
fdivs
sub
mov
imul
out
jnp
lcall
xchg
mov
shll
inc
outsb
sbb
in
dec
adc
xor
lds
frstor
add
cli
push
sbb
pop
or
add
mov
add
inc
cs
pop
test
jbe
or
and
test
pop
lods
cltd
jl
arpl
sub
jmp
sbb
ljmp
inc
mov
test
push
inc
lcall
pop
cli
inc
inc
xor
call
fadd
pop
pop
sbb
jne
movsb
pop
fbstp
mov
imul
mov
fwait
jp
push
out
sbb
mov
sti
jne
mov
and
mov
dec
fildl
scas
inc
mov
jg
fxch
inc
push
repz
pop
mov
inc
mov
jl
and
lret
push
pop
jge
nop
jmp
lds
or
jl
mov
sahf
sub
lahf
sbb
cli
jle
sub
and
push
jb
fcoml
or
mov
cmp
or
nop
jg
fwait
push
pop
cli
fistps
rorl
xor
mov
mov
sti
fisubl
jnp
lds
xor
mov
inc
into
js
stos
sbb
mov
je,pn
cld
jge
test
jnp
imul
mov
inc
dec
add
dec
cld
mov
int
cmpsb
cld
jbe
mov
jnp
shlb
cli
cltd
and
fnstenv
inc
xchg
ret
or
pop
in
mov
ljmp
ds
push
add
and
scas
cmc
pushf
jecxz
enter
scas
stos
mov
mov
insb
mov
mov
pop
or
xchg
dec
gs
sub
lcall
dec
or
sarl
fdivrl
jle
and
add
inc
jne
arpl
push
fisubrs
push
mov
pushf
sahf
lea
inc
bound
add
mov
stos
aas
in
les
std
dec
sti
imul
stos
ja
test
int
and
scas
cli
outsb
mov
jnp
pop
movsl
fstps
std
jmp
popf
js
sub
push
dec
popf
push
inc
sub
rorb
mov
cld
fistpl
dec
jo
gs
daa
sbbb
or
stos
sbb
and
sub
and
mov
mov
mov
adc
arpl
popf
xlat
arpl
dec
aas
push
imul
bound
ds
sbb
outsl
cmp
push
fisubs
adc
mov
je
dec
dec
add
add
pop
pop
jo
cmp
movsb
mov
inc
in
scas
gs
pop
cli
jne
stos
cld
aas
lea
jge
dec
sbb
cmp
flds
and
cmp
pushf
jle
xchg
repnz
inc
std
loop
test
pop
mov
outsb
add
mov
inc
call
dec
lock
or
call
inc
pop
lret
push
push
push
int3
sbb
mov
popf
pushf
loopne
fistl
jmp
rorl
aas
in
into
pop
stos
insl
mov
mov
sbb
sub
adc
dec
test
int3
sub
lods
push
mov
pop
stos
std
jg
add
mov
jnp
xor
fdivl
lods
mov
dec
jl
das
pushf
repz
pop
or
sub
inc
mov
and
test
int
ficoms
mov
mov
push
popf
adc
and
adc
in
cmpsl
dec
mov
push
popf
int3
mov
sbb
cltd
fldt
outsl
stos
jp
fwait
lea
stos
sbb
lds
pushf
sbb
jg
lcall
fistpl
xchg
cmc
cmp
lahf
jge
mov
lret
sub
mov
xchg
lcall
mov
jl
pop
adc
mov
sub
xor
pop
jbe
sti
fildl
fdivrl
mov
pop
insb
movsb
inc
dec
or
imul
and
inc
sub
sbb
jle
and
mov
into
into
je
or
imul
mov
xor
lods
sub
jne
sbb
lcall
xlat
in
jnp
inc
push
mov
cltd
sub
pop
cmp
in
inc
dec
jb
dec
mov
pop
cli
aas
mov
lods
dec
jle
xchg
dec
pop
cs
popf
mov
insl
iret
jmp
adc
int3
cmc
stc
and
cltd
clc
lahf
push
in
pop
mov
cmpsb
outsb
dec
inc
sub
fildl
lock
or
int
and
in
mov
cmp
mov
jnp
inc
jge
dec
cmpsb
lcall
popa
scas
test
fcmovnu
imul
push
mov
jge
and
in
mov
xlat
ja
lds
loop
aad
pushf
jmp
jo
lcall
lret
sbb
lods
mov
out
and
lock
mov
sbb
in
push
add
movq
fxch
lea
imul
cltd
sub
push
pushf
popf
sub
xchg
stos
inc
sub
pop
gs
js
in
out
dec
cs
call
mov
cmp
or
je
push
aas
cmp
mov
mov
inc
jne
scas
jl
test
and
fistpll
shrb
mov
dec
imul
in
cs
popf
test
test
cmp
popf
fimuls
leave
mov
or
insb
iret
dec
inc
mov
and
jge
and
jle
test
cmovle
jmp
in
lock
sub
push
outsb
cmp
stos
inc
std
or
subl
xchg
lret
pop
push
sbb
jmp
lods
imul
movsb
fwait
insl
scas
inc
mov
push
sbb
add
mov
repz
fxch
pop
and
add
pop
mov
push
outsb
test
add
sbb
mov
bound
add
mov
loopne
icebp
outsb
insb
test
daa
insb
fldcw
and
adc
fisubrs
or
dec
jl,pt
shrb
mov
and
fstpt
mov
fwait
or
cli
or
inc
sub
je
sub
pop
pop
inc
sbb
test
stc
mov
mov
jnp
inc
sbb
or
cmp
pop
stc
movsl
jp
adc
jle
stos
test
sub
jl
dec
in
pop
and
inc
stos
mov
dec
mov
outsb
pop
sbb
negb
adc
fwait
or
mov
sbb
dec
xor
subb
push
mov
inc
add
inc
inc
out
imul
push
in
sub
jp
popa
or
jp
cmp
xor
mov
ds
jp
jmp
stc
jg
outsl
mov
sub
inc
mov
push
xor
xor
add
movd
dec
push
aas
icebp
jp
and
jmp
jp
add
jle
dec
adc
sti
cmovb
mov
fs
call
pusha
movl
adc
call
jp
pop
dec
or
sbb
hlt
clc
adc
js
mov
mov
sbb
mov
ds
test
sub
outsl
mov
cmp
js
ljmp
pop
movsl
xchg
dec
pop
push
out
shl
shrl
mov
mov
push
mov
addr16
mov
fldcw
enter
adc
pop
call
sti
sbb
push
idivl
mov
setnp
jnp
mov
lret
rcrl
mov
pop
popa
jge
mov
push
pop
loope
xlat
xchg
subl
inc
and
fcomp
fisttps
xchg
lcall
adc
fstpl
xor
aam
adc
arpl
adc
fidivrs
popa
pop
adc
in
lods
mov
dec
pop
rcl
je
push
mov
cmp
lret
sub
cmp
sub
ja
sub
mov
sub
out
loope
push
pop
jmp
or
dec
jae
pop
sbb
addr16
inc
push
cmp
dec
fdivl
test
int3
pop
adc
xchg
pop
cmpsl
sub
dec
lods
push
push
pop
xchg
ja
iret
jae
mov
ret
pop
mov
or
icebp
mov
or
pop
push
in
shrb
xchg
pop
rcl
mov
jl
dec
scas
add
sarl
jb
repnz
pop
jne
xchg
dec
cmc
sti
fcmove
or
cwtl
test
sbb
push
mov
jecxz
mov
push
jmp
leave
inc
bound
mov
out
mov
ret
lret
pop
mov
cmp
add
add
or
xchg
xchg
pop
ljmp
mov
int3
pop
mov
jmp
jae
jmp
fs
sbb
dec
lods
and
adc
pusha
inc
arpl
sub
adc
in
push
mov
sbb
dec
outsb
rolb
and
fsubr
jp
add
xor
xchg
xor
adc
push
mov
cmpsb
fcmovu
fpatan
int
jae
ret
adc
push
pop
pop
jae
cmpsl
mov
add
mov
sbbl
or
jmp
inc
pop
mov
mov
mov
push
mov
clc
push
sbb
movsl
loopne
or
pop
fmull
stos
sub
cmp
mov
repz
xchg
in
or
out
add
add
cmpsb
inc
jge
xchg
dec
imulb
and
cld
xorb
mov
lds
adc
and
faddl
imul
hlt
test
inc
in
or
loopne
fstl
rcrl
push
mov
mov
test
scas
cmpsl
pushf
pop
inc
out
ja
mov
pop
pushf
mov
push
mov
pusha
mov
mov
jmp
jmp
jmp
jmp
push
test
cmp
jmp
pusha
pusha
lea
je
pushf
lea
jmp
mov
pusha
movl
lea
jne
movzbw
jmp
or
sahf
movsb
in
or
inc
test
sbb
out
movsl
cld
or
mov
mov
mulb
inc
xchg
aam
sti
or
jg
mov
imul
jb
cmp
mov
cs
cmp
sbb
add
mov
lds
repz
adc
shrb
adc
cwtl
sbbb
push
loope
enter
mov
lods
pop
loopne
and
dec
pop
adc
call
cmp
pusha
insb
cld
adc
dec
push
cmp
sahf
rorb
sub
xchg
lcall
mov
mov
aaa
pop
fisttpll
sub
imul
pop
mov
mov
pop
mov
sub
aas
sub
jno,pt
xchg
inc
xor
sbb
xchg
call
bound
fistpl
into
xchg
sub
pop
cmpsb
cs
cmpsl
call
sub
jmp
fistps
pop
pop
in
scas
or
cmp
stos
fiaddl
inc
inc
jp
jp
xor
sub
mov
stos
xchg
jle
mov
push
imul
jno
xor
lods
mov
push
mov
jle
jg
mov
xchg
nop
push
ja
jns
sbb
outsl
mov
fucom
add
in
call
je
das
mov
fninit
inc
int
xlat
jb
xchg
push
push
jecxz
pop
mov
adc
jb
cltd
and
xchg
cmp
icebp
mov
ss
mov
pop
or
movzbw
mov
pushl
rcr
mov
jmp
pushf
mov
inc
call
mov
lea
call
pusha
cmp
call
je
bt
clc
jmp
btc
cmc
seta
mov
xchg
jmp
add
inc
gs
outsb
jne
add
dec
or
add
add
add
add
or
add
add
ljmp
inc
roll
add
add
das
lods
add
add
add
shl
add
add
add
arpl
add
add
add
push
add
add
add
mov
add
loope
add
mov
add
lret
mov
add
add
mov
add
rol
add
add
add
add
fs
jae
call
pusha
lea
jne
pushf
jmp
push
dec
cmc
cmp
stc
movb
shl
setl
lods
pusha
call
push
or
pushf
pushf
jmp
pusha
mov
jmp
repnz
jmp
add
dec
jo
outsb
push
jb
outsb
je
jb
add
cltd
and
add
and
je
call
mov
rcl
cmp
rcr
xor
lea
jne
pushf
lods
pushf
pusha
ror
rol
ror
not
shr
sub
sub
call
stos
push
lea
jmp
or
adc
rorb
sbb
inc
jo
mov
shrb
mov
xor
inc
aad
insl
daa
ds
xor
pop
jp
test
cwtl
xchg
or
push
sub
mov
mov
adc
push
mov
test
mov
imul
lds
mov
out
mov
xor
push
sahf
inc
rcrb
lcall
out
fs
xlat
out
xchg
inc
jb
out
jg
jmp
sbb
imul
pop
in
inc
pop
push
incb
add
xchg
xor
orl
aad
popa
stc
xchg
xor
or
xchg
mov
dec
imul
sbb
push
out
xchg
sbb
mov
in
jp
xchg
and
ss
xchg
mov
bound
addl
pop
add
fisttpl
sti
mov
jmp
pop
cmp
jecxz
aaa
ret
push
in
cmpsl
stos
jbe
incl
rorl
shll
mov
test
andl
mov
decb
xchg
dec
or
mov
orl
aam
jno
repnz
push
loopne
dec
cld
xor
inc
sbb
out
push
movsl
mov
jmp
mov
in
hlt
lods
insb
stos
push
mov
pop
dec
out
cmp
lods
jnp
adc
icebp
push
push
or
push
bound
add
flds
xchg
imul
insb
subb
jns
dec
push
xchg
mov
repz
or
xchg
out
xchg
pop
rclb
add
xor
adc
mov
mov
mov
mov
jo
mov
in
or
push
xchg
shl
leave
icebp
sbb
cmp
add
loopne
pop
xchg
and
shl
xchg
dec
iret
adc
pop
xor
adc
ja
mov
std
popf
stc
les
xchg
mov
inc
ljmp
add
stos
je
rol
jmp
push
add
bt
add
movb
mov
pushf
jmp
add
cmp
xchg
sbb
test
dec
js
dec
xor
insb
inc
imul
dec
je
cmova
mov
and
dec
arpl
shl
pop
std
xchg
mov
jp
cmp
hlt
mov
stc
jg
add
xchg
push
fsts
fstl
std
pop
push
mov
mov
repz
leavew
sbb
sbb
mov
mov
or
aad
loop
arpl
add
out
cmp
movsl
imul
pop
or
push
ds
mov
out
push
inc
push
pop
jb
ss
sbb
iret
or
out
cmc
sbb
adc
jae
arpl
insl
pop
lock
jmp
ss
es
mov
xadd
movb
xchg
mov
cwtl
inc
js
nop
push
jl
pop
adc
fisttps
mov
lret
pop
pop
mov
rcll
mov
mov
cmp
adc
sub
js
aam
add
adc
sub
mov
fwait
outsl
ds
in
and
jge
push
cmpsb
js
mov
repnz
xor
sbb
subb
sub
inc
or
inc
push
fsubs
cmp
sbb
jb
scas
xor
xchg
mov
mov
into
mov
ud0
cmp
xor
sbb
loope
cmp
mov
std
sbb
dec
or
xchg
sahf
lods
pusha
xchg
mov
sub
adcb
roll
or
aam
jb
jle
xor
xor
mov
bound
fs
mov
js
int3
insb
adc
dec
push
clc
movb
cmp
pushl
pushf
lea
jae
push
pushf
pusha
mov
lea
jmp
mov
sahf
mov
subl
cmp
mov
fs
mov
movsl
dec
andb
mov
negl
cmp
mov
pop
cwtl
or
mov
loop
pop
sub
cwtl
jle
mov
xlat
pusha
jo
sbb
add
es
inc
jg
xor
pusha
out
add
pop
mov
pop
scas
dec
xlat
jnp
xchg
mov
lret
inc
pusha
push
push
lea
call
jmp
add
mov
movw
lea
jmp
sub
dec
jg
or
or
and
mov
cmp
out
jp
inc
js
fistl
mov
imulb
cmpl
test
mov
jge
imul
movsl
bound
js
or
jle
aas
cli
fiaddl
inc
mov
jg
sahf
cmp
mov
pop
out
xchg
jl
mov
movl
icebp
cmc
jns
idivb
int3
add
pop
fwait
pop
cvtps2pd
leave
rcl
push
pop
aaa
mov
mov
adc
dec
fstpl
pop
lcall
xchg
sbb
out
rcl
loop
cmp
fisubl
test
fcmovnb
movsl
jb
jmp
sbb
pop
or
or
and
pop
mov
popl
jmp
adc
adc
xchg
fdivrl
dec
mov
in
movsb
dec
add
sub
cmpsl
loopne
lds
dec
xchg
cmp
adc
shl
test
and
mov
mov
inc
aas
data16
pop
sbbb
fnstsw
mov
add
imul
addr16
gs
pop
dec
aam
ja
push
adc
dec
or
pop
les
pushf
dec
pop
notl
stos
xlat
or
xchg
and
repz
add
pusha
add
cmpsl
fistpll
jmp
cmp
imul
daa
ss
pop
cwtl
mov
or
and
loopne
mov
mov
in
and
jns
lahf
test
cmc
int
lods
or
mov
out
xorb
fnsave
lods
pop
fwait
add
dec
push
jno
insb
dec
mov
xchg
out
jge
mov
xlat
in
adc
sub
enter
sub
shl
jl
lahf
fisubrs
out
and
lret
mov
lods
push
not
pushl
ror
call
sub
test
inc
push
testb
pop
sub
mov
arpl
lcall
int
add
inc
das
pop
insl
and
test
notb
iret
fmull
leave
cwtl
xchg
mov
iret
mov
out
xor
push
int
pop
sub
cmp
push
insb
pop
lods
js
cmp
orb
add
and
mov
fdivrl
or
and
call
jo
push
dec
pop
sub
cmpsl
rcrb
and
inc
data16
fimull
lds
ljmp
xchg
aas
and
out
push
fisubrs
and
dec
lret
mov
je
jg
es
jp
and
and
inc
aad
push
or
sbb
xchg
add
and
cmp
insl
mov
iret
jae
mov
fistl
mov
mov
cltd
cmc
divb
bound
jmp
xor
movsl
int
std
stc
add
jmp
pop
pop
push
aam
test
rcrb
pop
mov
push
popl
and
fmuls
aas
pop
xor
and
mov
movsb
xor
sbb
test
xchg
inc
cld
xor
lods
jmp
sbb
mov
ret
scas
icebp
notl
adc
arpl
xor
out
xchg
inc
shlb
mov
push
mov
arpl
mov
lret
and
add
pop
fnstcw
mov
fnstsw
les
push
adc
push
outsl
lds
leave
push
adc
inc
jne
mov
push
jno
adc
arpl
lcall
fucom
jecxz
ret
movsl
xor
cwtl
xchg
cmp
dec
lret
add
xchg
enter
lahf
std
in
or
das
outsb
jp
movsl
jns
in
das
dec
sub
pop
bound
xchg
test
jnp
out
movsl
dec
mov
mov
std
mov
in
xor
xor
cmp
and
enter
add
jb
std
fisubl
sbb
addr16
adc
add
movsl
popa
je
pushf
jmp
add
sub
btc
adc
mov
sar
mov
stc
cmp
cmc
shr
clc
cmp
push
lea
je
test
cmp
jo
push
pushf
pushf
lea
je
clc
cmp
js
pushf
mov
lea
je
pushf
pusha
pusha
pushf
lea
jmp
rcl
fcomi
adc
or
ss
inc
jbe
fimuls
and
outsb
xchg
stos
fstpl
cmpl
dec
cmpsb
mov
negl
nop
ror
enter
outsb
cli
mov
sbb
outsl
xchg
daa
adc
jmp
sub
or
aad
pop
mov
pop
pop
jbe
adc
popf
ret
sti
mov
aas
sahf
insl
imul
sub
push
add
mov
inc
jge
sahf
ret
inc
lods
in
pop
pop
aas
pop
ja
mov
repz
mov
pop
pop
insb
push
pop
mov
imul
in
mov
daa
jl
rclb
push
cmpsb
jge
pop
outsb
cmpsb
jmp
sbb
cs
sbb
push
pop
outsl
jge
ret
mov
cmpsl
ss
or
mov
sbb
and
mov
or
xor
jne
xchg
push
sbb
mov
fdiv
mov
xor
data16
out
xchg
mov
pushf
mov
sub
dec
push
scas
mov
and
outsl
cmpsl
mov
repz
xlat
ds
mov
mov
push
mov
inc
inc
lahf
xor
fwait
mov
xor
push
push
dec
jg
aam
cwtl
cmp
sub
out
jmp
mov
jmp
mov
and
cmp
aaa
pop
adc
xchg
inc
jg
rorb
sub
scas
outsl
add
cmpsl
fisubrl
and
js
pushf
dec
pusha
clc
stc
jmp
lea
ja
pusha
call
leave
mov
outsb
sub
fprem1
xor
std
std
cmp
shrl
and
mov
in
sti
pop
cmc
or
push
cmpsb
ds
js
sarb
cmpsb
out
xchg
mov
lods
mov
gs
fwait
push
add
pop
mov
mov
add
ljmp
out
jg
cmc
subl
mov
fs
insb
clc
xchg
inc
lock
mov
popa
scas
dec
fucomip
scas
mov
mov
xchg
mov
fs
adc
idivb
sbb
popa
scas
dec
or
test
stos
test
fndisi(8087
popa
sbb
inc
push
mov
push
scas
push
cli
dec
or
mov
adc
lock
stc
popa
icebp
jbe
sub
pop
out
or
scas
mov
aad
fwait
sbb
add
movsb
mov
mov
movb
lea
jmp
mov
lea
jae
call
push
dec
jmp
arpl
mov
push
mov
push
push
inc
outsb
lcall
rorb
jb
dec
repz
icebp
in
sbb
mov
aad
add
outsl
popf
aad
jmp
inc
cmc
aad
mov
out
and
fisttpll
andl
popa
inc
xchg
stc
jmp
xor
mov
fs
jne
xchg
out
mov
cmc
mov
inc
int
cmp
jge
mov
push
jge
stos
ret
sahf
lcall
mov
sub
je
push
pop
push
push
sahf
inc
cmp
repnz
imull
or
cmpsl
cwtl
adc
xor
wrmsr
ds
mov
lods
into
push
mov
mov
and
test
fimuls
mov
jle
mov
pop
xchg
clc
mov
and
pop
ret
dec
scas
pop
gs
lods
leave
aad
fwait
mov
and
insb
add
adc
mov
insb
or
mov
stos
lods
jae
mov
loop,pt
lock
xor
mov
mov
mov
sub
add
cmp
sbb
lret
addr16
push
and
push
and
sti
mov
push
push
sub
outsb
xor
adc
aas
cli
lods
or
insl
jnp
pop
and
sub
push
lock
jbe
repz
lret
push
fistpl
stos
pop
pop
mov
cmpl
cld
std
and
jnp
test
xchg
xchg
cltd
shl
jmp
cltd
cmp
pop
leave
insb
fidivrl
or
loopne
jge
sub
fsubs
inc
repnz
out
add
push
sbb
test
ss
adcb
jmp
aaa
pop
lret
test
popa
cmp
cs
xchg
popf
dec
add
mov
sub
jg
scas
call
inc
jae
mov
scas
jae
test
pusha
clc
jmp
push
adc
jo
scas
fnstenv
cltd
mov
imul
fcoml
cld
lcall
xchg
mov
sbb
cli
gs
or
jecxz
adc
add
mov
add
daa
pop
shrl
fisttpl
aam
pusha
and
add
pop
push
push
jns
lret
leave
push
mov
das
sbb
outsb
fisubrl
jle
into
outsb
or
cmp
js
mov
pushl
imul
clc
call
lea
je
clc
movzbw
and
add
btr
lea
sub
call
lea
je
bt
xor
aam
aam
sbb
bsr
mov
pusha
dec
ror
clc
mov
rcr
shr
sub
inc
movsbw
mov
jmp
out
fsub
cwtl
iret
add
ljmp
idiv
push
sub
push
scas
pop
mov
sahf
pop
sahf
xchg
add
fwait
adc
dec
jb
sti
fldt
adc
xlat
add
dec
std
mov
aad
icebp
mov
jns
pusha
sbb
fcmovu
jp
repnz
cmpsb
lock
xorl
sar
push
or
mov
jbe
stc
cmc
pushf
cmp
mov
pusha
call
aas
pop
cmp
sub
mov
std
sbb
mov
in
pop
mov
push
xor
sbb
mov
jae
jl
test
cmp
cmp
jmp
sbb
mov
mov
repz
push
ds
xchg
loopne
popa
cmp
sub
xor
jle
inc
je
popf
mov
insl
std
jns
mov
leave
mov
jne
fs
je
jmp
pushl
mov
movb
xor
cmp
cmp
pushf
mov
bt
bt
add
stc
stc
jmp
and
inc
mov
sbb
and
pushf
int3
rcr
lock
lods
mov
sti
out
pop
push
cmpsb
lods
pusha
lret
sub
mov
imul
mov
imul
nop
jo
ficoml
adc
mov
fadds
rol
cmovbe
jno
inc
lret
xor
or
call
pop
subb
iret
repz
sti
leave
clc
negl
cltd
xor
pushf
fistl
mov
divl
ret
ja
mov
fbld
mov
fdivr
call
leave
lret
rcrb
sub
fwait
stos
mov
clc
sbb
insb
jl
call
insl
push
xchg
sub
push
push
ud2
dec
adc
addr16
sbb
mov
inc
aaa
test
push
shl
jg
and
jp
jnp
push
fisttpl
addr16
loope
push
jns
pop
pusha
adc
or
jg
test
dec
dec
lret
sub
mov
ljmp
leave
inc
dec
lea
jb
cmc
pushf
cmc
stc
cmpb
jmp
pushl
lea
jae
jmp
lea
je
pusha
lea
jmp
nop
rolb
scas
in
dec
pop
bound
mov
inc
jb
xchg
stos
pop
repnz
push
fisubrl
mov
in
scas
xor
sbb
jne
cmpl
and
lcall
stos
pop
inc
aas
adc
mov
or
mov
stos
stc
repnz
mov
scas
xchg
shlb
push
into
jle
sahf
cs
scas
dec
out
mov
cmpl
out
jne
bound
xor
or
dec
push
loopne
pop
and
inc
inc
push
imul
test
xchg
and
ret
inc
and
mov
xchg
lds
dec
test
mov
gs
popf
pop
jmp
icebp
mov
sub
jo
mov
icebp
cmp
sti
das
inc
outsl
jnp
sbb
xlat
inc
inc
lea
dec
mov
adc
xchg
add
mov
push
push
outsb
adcb
hlt
into
inc
std
xchg
jmp
sbb
or
add
mov
xchg
sti
movb
inc
shl
out
lahf
rcrb
sbb
fcomps
push
xchg
mov
daa
and
sub
dec
std
movsl
pop
cmc
cltd
cmp
adc
vpminub
adc
add
mov
inc
push
pop
cwtl
int3
add
in
dec
adc
push
iret
sti
pop
mov
cwtl
jge
cmp
insb
cwtl
or
das
and
sub
nop
lret
xchg
sub
dec
sbbl
pop
insl
fwait
mov
filds
push
inc
mov
repnz
ja
sbb
cmpsl
aas
icebp
int3
jno
inc
popa
xor
mov
adc
loopne
sub
rolb
pop
add
pushf
lea
je
shr
xchg
neg
mov
neg
adc
add
shl
bswap
pusha
mov
pushf
movb
test
push
pushf
pushf
lea
je
rcl
bts
pusha
bsf
add
mov
stc
mov
push
jmp
pusha
pusha
movw
call
pushf
jmp
movsbl
movb
pusha
call
lea
jae
call
or
inc
pushf
add
and
mov
movb
cmc
cmp
test
pusha
pushf
mov
pushf
lea
je
stc
bt
jmp
pushf
lea
jnp
push
lea
call
push
lea
jae
pushf
call
push
test
mov
test
cmc
lea
jnp
and
cmp
pusha
jmp
cmp
inc
pop
adc
roll
add
jne
cltd
mov
scas
sbb
arpl
lahf
mov
and
mov
lret
push
mov
movups
jge
sbbb
mov
je
imul
je
in
mov
sbb
lock
mov
clc
mov
sub
jl
mov
and
inc
lock
pushf
add
dec
mov
mov
ss
pushf
pop
dec
pushf
fsubl
shll
dec
mov
dec
int3
int
mov
sbb
rcrb
scas
inc
adc
adc
lea
sbb
roll
mov
fcmovnbe
out
cmp
outsb
je
adc
popf
mov
mov
cmp
fimuls
pop
fwait
leave
jns
mov
in
ret
lods
loop
imull
or
in
out
orb
pop
daa
xchg
mov
dec
sbb
test
movsl
xor
in
roll
adc
push
cmc
test
mov
in
cltd
lcall
add
ret
jmp
pop
cmp
lahf
fucomip
and
daa
add
pop
jnp
pop
jg
add
push
cli
ret
pop
xchg
mov
xor
jnp
shr
sbb
lods
loopw
mov
push
cmp
aaa
mov
lcall
loope
lock
pop
sbb
xlat
call
loop
sti
mov
std
jno
icebp
mov
push
ret
mov
ret
bound
into
mov
sbbb
aas
add
rcrb
pop
xchg
movsl
stos
jecxz
push
push
push
mov
mov
sub
mov
mov
enter
dec
aas
push
and
dec
mov
daa
dec
in
stc
xor
in
mov
in
or
addr16
and
je
pop
mov
stos
loop
push
lret
mov
out
jge
and
push
stos
xor
lcall
add
add
cmc
fcmovnu
or
mov
mov
shl
sub
cmp
or
decb
and
pushf
and
popf
pop
push
mov
subl
jb
mov
loopne
lahf
push
mov
ret
sbb
jno
sbb
jbe
sahf
pop
ficomps
mov
push
mov
cli
push
mov
xchg
fs
les
data16
mov
notb
push
ds
jbe
push
rolb
jnp
fsubr
and
xchg
or
cmc
out
or
jecxz
ret
mov
lea
daa
mov
ret
sti
mov
js
ret
dec
adc
movsl
sub
jmp
adc
sarb
daa
xor
imul
idivl
jg
mov
cmpsl
int
icebp
jg
mov
insb
mov
les
sub
leave
int
int
sub
sbb
popf
hlt
cli
and
pop
cmp
push
fisttps
inc
cmp
fwait
out
aaa
fcmovnb
hlt
movsb
xor
dec
lcall
jns
stc
les
in
jns
mov
out
cmpsl
jg
ljmp
orl
mov
jns
je
adc
enter
iret
or
mov
not
or
call
xor
dec
jno
push
jmp
mov
dec
jae
cmpsl
fildl
or
mov
or
out
lret
or
sbb
and
jo
cwtl
jnp
in
cmpl
mov
and
out
out
or
push
mov
jne
pop
and
mov
cmp
or
inc
es
push
jne
mov
loopne
out
hlt
movsb
sub
pop
out
add
jle
mov
mov
outsl
jmp
pop
lahf
aaa
out
stos
inc
rcll
int3
insb
in
jmp
jmp
in
lods
lods
aad
xchg
adc
inc
iret
out
add
push
push
adcl
ret
mov
pop
outsb
add
inc
xorl
push
mov
scas
sub
adc
insl
and
or
addl
insb
daa
fs
paddb
mov
loope
or
mov
cld
outsl
sbb
cmp
inc
ds
into
jp
sahf
push
loop
dec
bnd
xchg
ret
int3
xorl
out
jo
je
shl
adc
movsb
mov
and
jg
or
or
lret
loop
inc
xchg
repz
pop
xchg
int
lea
cmc
sub
scas
xor
and
xchg
ret
lds
or
jns
loop
dec
fsubr
jae
push
jae
out
xchg
int
fldl
jbe
jbe
inc
and
pop
jns
mov
add
push
jmp
call
inc
cmp
pop
or
push
jnp
mov
out
jnp
mov
fdivs
sub
mov
sub
pusha
test
call
addb
xchg
sbb
insl
mov
mov
call
xor
and
ljmp
ljmp
repz
bound
imul
and
cltd
rorb
adc
pop
mov
jl
or
inc
js
mov
pop
cmp
nop
int3
clc
or
pop
push
inc
fmuls
ret
fisttpl
cli
add
dec
aad
adc
rol
adc
jecxz
pop
and
int
pop
mov
pop
test
pop
pop
push
dec
out
rolb
inc
xor
aad
in
and
enter
adc
in
in
jo
mov
cld
mov
or
inc
xor
popa
push
lcall
xor
xchg
mov
int
xor
or
cld
cmp
out
cs
ljmp
stos
jecxz
imul
mov
sub
push
or
push
xchg
int
mov
inc
dec
sbb
std
lcall
jno
lock
cmpsl
lods
into
cli
inc
fildll
add
inc
jns
stc
sahf
rclb
cmpsb
cs
repnz
mov
mov
cmp
cld
cmpsb
fstps
aam
lea
or
mov
adc
push
outsb
into
pop
imul
aaa
inc
jns
push
lods
leave
inc
and
mov
outsl
dec
jae
adc
xor
ljmp
cmpl
std
xchg
xor
scas
jp
or
adc
es
out
push
push
out
lods
mov
mov
cmp
or
fcompl
inc
aam
fdivl
pop
inc
insl
cmpsb
out
mov
or
clc
lods
fisttps
inc
inc
cli
sahf
mov
push
sbb
sub
jne
je
mov
insb
movsb
aam
add
lcall
and
or
adc
add
scas
lock
mov
dec
rorl
data16
rcll
lods
cli
fidivs
imul
jecxz
and
aaa
mov
adc
pop
lret
cmpl
ja
lret
jae
fwait
das
iret
mov
jb
sub
mov
and
ljmp
xchg
xchg
ss
sub
jb
jg
cmp
add
pop
sbb
fwait
mov
jg
mov
pop
mov
in
xchg
push
mov
xlat
rolb
xchg
xchg
add
aaa
dec
sub
lret
push
mov
incb
xor
mov
mov
xor
movaps
repnz
pop
into
mov
data16
into
pop
movsb
pusha
jle
int3
in
push
inc
lret
mov
mov
cmp
cmpsl
lods
jmp
rolb
insb
mov
mov
inc
push
mov
fldl
outsl
std
int3
scas
mov
pushf
mov
movsb
xor
sbb
dec
mov
fisubs
pop
push
pop
adc
cwtl
jmp
adc
insb
repnz
mov
push
xor
gs
pop
into
mov
repz
daa
jo
insb
cli
inc
and
xor
gs
test
lds
test
mov
cmpsl
enter
lea
je
bts
xor
rcr
mov
clc
mov
test
setg
shld
shr
sbb
mov
pusha
stc
or
pushf
lea
je
shld
cmc
add
shl
sar
test
jmp
push
pop
pop
inc
fists
dec
ja
fcomps
fs
rcr
or
sbb
pop
insb
cld
nop
ret
dec
jle
jp
sub
jne
xchg
pop
repnz
cmp
shlb
iret
cmpsb
movsl
ret
push
jno
cmpsl
fnstcw
ret
leave
loop
mov
jb
and
sbb
or
sbb
xor
and
xlat
push
pop
inc
or
inc
xlat
sti
call
in
xor
mov
lods
inc
lock
push
into
arpl
nop
movsb
loopne
stos
xor
add
and
mov
mov
lds
or
int3
cmpsl
stos
into
jbe
mov
sbb
dec
mov
aam
filds
mov
std
das
adcb
clc
sbb
adc
enter
lcall
xchg
gs
dec
loopne
negl
pop
and
outsb
aaa
jecxz
push
icebp
xchg
jbe
push
out
mov
out
push
mov
mov
ljmp
cmp
pop
pusha
push
test
push
lea
je
jmp
popf
sahf
repnz
lods
sbb
or
and
push
js
fsubr
add
les
mov
pop
add
push
or
add
loop
inc
aaa
ror
cmpsl
cmp
aas
repz
adc
dec
adc
iret
repnz
lods
insb
ja
sti
stos
imul
and
push
sub
lcall
out
cmpsb
fidivrl
test
cltd
add
pusha
pusha
lea
jmp
outsl
js
mov
fstl
jnp
shr
sbb
ja
fwait
mov
stos
cmpsl
and
cltd
lods
dec
jbe
fstps
jno
sub
jmp
jl
in
divb
jmp
neg
jmp
decb
iret
in
xor
nop
sbb
fistpll
ja
cli
push
add
out
ret
push
xchg
cmp
test
add
mov
mov
lds
xor
dec
push
int3
add
or
mov
pop
ret
jle
fdivr
sbb
cmp
dec
repz
stos
fiaddl
xorb
jp
lcall
into
pop
arpl
fbld
cmp
xchg
adc
jmp
loope
xor
movsb
sub
in
and
mov
push
ss
dec
push
mov
das
mov
clc
add
popa
fidivrs
pop
fdivs
mov
adc
fldcw
movsl
inc
add
lds
movsl
loopne
ret
addr16
aam
push
popa
in
sub
test
dec
pop
pop
xchg
mov
popf
adc
mov
mov
lods
mov
xor
mov
sti
dec
sarl
dec
sbbb
dec
ret
loopne
dec
mov
out
das
arpl
ja
fwait
pop
out
and
inc
insl
mov
cltd
or
fxch
xlat
add
in
jmp
mov
or
adc
pop
and
sub
orb
mov
popf
add
pop
mov
push
test
mov
xchg
cmp
rcrl
xchg
iret
jg
pop
jno
aas
dec
movsl
sub
es
subb
rcr
and
xor
cmpsl
das
sarb
std
outsl
mov
imull
xorb
pop
ficomps
jge
loopne
pop
sbb
mov
or
cwtl
dec
aaa
movl
jns
in
jns
lods
push
icebp
lea
lods
push
cmc
mov
sbb
out
cli
adc
xchg
mov
cmp
pop
jl
lods
aam
cmp
enter
pop
mov
pop
fsubrs
jbe
test
sbb
mov
inc
xor
jle
jne
insl
jle
fucomi
pop
ret
add
mov
or
lret
dec
mov
xchg
fs
lods
insl
popf
stos
aaa
jmp
popf
fcmovu
sti
dec
inc
aas
lahf
mov
enter
or
add
mov
and
add
jge
leave
pop
mov
xor
insb
mov
sbb
js
mov
xchg
xor
dec
mov
push
mov
lea
jge
xlat
jecxz
gs
pop
aam
xlat
cmp
mov
in
lods
xor
xor
pop
mov
add
nop
cwtl
mov
divb
push
rol
pop
inc
push
sbb
iret
testl
test
mov
sub
bswap
pusha
not
mov
bswap
jmp
rcl
hlt
or
pop
cmp
mov
cs
push
pop
mov
dec
dec
mov
pop
inc
adc
aas
repz
mov
xor
mov
xlat
sbb
out
jl
add
sub
jmp
sarb
and
inc
and
add
imull
xchg
sbb
mov
ret
xor
xor
insb
icebp
test
and
xchg
push
cmpsb
ss
xor
cmc
push
fldt
cli
push
ds
enter
adc
sub
cmc
push
je
fwait
das
outsb
in
cmpsb
push
insl
pop
pop
mov
adcl
ja
inc
xchg
adc
popa
mov
push
aas
sub
loop
dec
xor
xor
stc
std
or
or
mov
in
cmpsl
ret
or
bt
pushf
clc
not
pushf
jmp
jae
inc
inc
in
jl
scas
xor
mov
dec
jle
push
cmpsb
fyl2x
xor
ficompl
test
js
mov
sub
jne
loopne
sti
loope
rep
mov
add
inc
je
ret
ret
rcr
shlb
and
sbb
cmpsl
scas
lcall
xchg
fidivs
cwtl
pop
jmp
bound
les
mov
xchg
xor
lahf
cmp
push
repz
das
sub
mov
inc
cld
jmp
jecxz
sub
andl
sub
pop
repnz
adc
out
inc
je
aad
lret
negl
sar
push
inc
xchg
adc
into
testl
jle
xor
scas
xor
inc
fs
ja
es
int3
fldenv
jecxz
xchg
ljmp
arpl
dec
cmp
xor
inc
and
lds
mov
mov
ja
sub
lea
mov
mov
or
cs
andb
popa
lret
lds
shrb
das
mov
in
icebp
cltd
bound
clc
xor
pusha
rcl
fcomp
ljmp
call
xchg
inc
roll
jmp
xor
mov
std
cmp
and
push
jp
push
mov
sub
ret
xlat
in
jmp
adc
inc
pop
dec
xor
jno
mov
int
shrl
cmpsl
rcrl
mov
test
xchg
add
mov
out
sbb
outsb
xchg
mov
repnz
sbb
sbbb
stos
lea
cmp
into
lret
xchg
iret
scas
mov
cmpsl
sub
or
dec
clc
and
insb
mov
out
fbstp
mov
mov
and
fisubs
leave
cmova
push
jo
mov
aam
adc
divl
mov
xor
shrl
stc
mov
inc
out
jnp
lahf
push
idivl
add
dec
ja
jp
add
das
aas
dec
imul
inc
pop
sbb
test
aam
xor
lcall
xorl
rolb
jo
into
mov
int
sbb
jp
loope
push
push
outsb
mov
push
les
inc
cmp
sub
dec
inc
push
arpl
mov
arpl
mov
scas
stos
mov
push
pop
out
sbb
fdiv
xchg
jns
jmp
daa
push
push
jnp
scas
fucomip
jmp
aaa
jmp
stos
inc
push
hlt
repz
inc
dec
lds
scas
fsubrp
sub
and
inc
sub
das
ljmp
ret
stc
cs
jg
dec
xchg
dec
jo
pop
fcoml
mov
xor
repnz
sbb
shlb
loop
aad
mov
jge
lods
dec
or
mov
push
dec
mov
jae
push
call
fs
pushf
xlat
fstpt
mov
mull
into
push
or
jecxz
mov
adc
cmpsb
adcb
loop
add
addr16
sub
lods
and
ret
sub
arpl
push
hlt
cmpsb
mov
sbb
lock
ret
je
xchg
cli
inc
repnz
and
fisttpll
pop
sub
dec
fnsave
mov
stc
xchg
and
stc
mov
sub
aas
and
jp
sti
or
mov
or
push
out
fabs
mov
or
jge
fldenv
popf
sbb
pop
aas
loop
pop
ret
shll
enter
xchg
iret
or
movsl
test
or
enter
cmp
or
and
fildll
xchg
dec
mov
movsb
push
add
addb
pushf
mov
loope
or
fs
cltd
roll
dec
mov
enter
mov
inc
loop
call
jo
add
lods
cld
dec
mov
xchg
jge
sti
mov
jl
int
sbb
insb
clc
dec
adc
dec
ss
sbb
sbb
and
ficomps
aas
jecxz
adc
xchg
push
jae
inc
jae
or
push
xchg
push
out
dec
pop
cmp
push
mov
lret
bound
mov
mov
popa
xchg
pushf
call
not
bswap
pop
push
pushl
ret
xor
push
jne
pushf
outsl
sbb
fcoms
and
xor
cwtl
int3
in
mov
push
xchg
data16
das
pop
pop
ds
cs
jmp
jl
add
fcoml
lods
es
push
je
sahf
int3
int3
push
fldcw
add
push
pop
aas
mov
mov
push
pop
cmp
ljmp
mov
add
es
fimuls
out
shrb
cmpsb
mov
mov
xchg
leave
xor
cwtl
mov
loopne
sub
dec
push
nop
mov
imul
or
mov
mov
dec
push
push
shlb
add
push
gs
mov
sub
stos
lahf
mov
mov
pop
xchg
pop
or
mov
sbb
push
ljmp
mov
jle
mov
sub
mov
jl
aad
cmp
test
jno
inc
jno
outsl
inc
imul
add
data16
sub
mov
inc
es
cld
ss
mov
dec
adc
insb
je
movsb
loop
mov
loop
mov
lret
add
jl
loopne
pop
mov
cs
xor
jp
into
data16
cmpsl
mov
push
ss
dec
in
hlt
movsb
sub
or
je
mov
and
cmpb
and
mov
mov
push
push
sub
dec
mov
repz
pop
ja
sub
sub
inc
hlt
dec
push
cmp
into
mov
cli
inc
jns
leave
adc
sub
movsb
int
sub
in
jno
imull
test
popf
pop
in
add
mov
dec
xor
and
hlt
cmp
in
repz
pop
jnp
stos
mov
out
pop
daa
lret
or
icebp
dec
add
fwait
mov
sbb
jbe
lea
push
jle
fs
mov
mov
adc
cli
mov
mov
test
movsl
es
dec
decb
push
push
jl
fists
or
inc
jle
leave
loope
ret
sub
das
sub
or
xchg
xchg
cmp
mov
inc
cs
or
mull
mov
rcll
and
cltd
inc
jno
jecxz
or
adc
and
repz
xchg
les
les
and
nop
mov
cltd
arpl
fs
xor
cs
insb
add
cmp
outsb
imul
insl
xchg
cltd
mov
cmp
cltd
xor
cld
adc
pop
jg
or
xor
add
sub
aad
aas
sti
mov
insb
hlt
scas
in
les
mov
test
mov
mov
dec
lea
dec
jne
cmpsl
sub
pusha
xchg
iret
jae
mov
mov
and
pop
pop
in
sbb
clc
push
sbb
push
push
pop
xorb
fimuls
call
jo
or
cwtl
enter
stos
fistps
loop
push
xchg
movsl
dec
jbe
lcall
or
xor
sub
dec
mov
sbb
mov
inc
lret
pop
popa
sbbb
jmp
stos
ds
adc
xchg
inc
std
lea
mov
in
xor
push
jle
push
jmp
jmp
add
int3
add
xchg
stc
sub
mov
or
ss
outsb
jp
sahf
into
pop
adc
xchg
out
cld
addb
mov
fistl
adc
das
repz
add
mov
pop
lret
mov
sahf
test
orb
leave
test
mov
push
sahf
push
mov
jp
push
mov
push
mov
mov
negb
decl
xchg
add
add
stos
xchg
mov
roll
fs
pushf
not
not
test
xchg
sub
inc
adc
rcl
btc
mov
setbe
neg
stc
or
mov
pushf
xchg
or
mov
shl
add
mov
stc
jp
cmp
sub
jmp
clc
shl
lods
xchg
mov
jne
mov
push
jbe
mov
cli
mov
setno
mov
and
in
jo
rcrl
lds
jns
lret
aam
xor
xchg
mov
or
test
stc
sub
insl
adc
push
sub
jmp
loopne
and
add
mov
mov
xlat
xchg
mov
sbb
add
mov
add
add
add
add
push
add
dec
add
test
add
add
dec
add
lods
mov
add
rorb
add
jmp
add
fimull
add
lret
fs
add
dec
add
mov
push
add
dec
add
lret
add
add
dec
add
mov
push
add
dec
add
xor
add
test
add
dec
add
xor
add
mov
add
dec
add
lret
add
add
add
xor
xchg
lret
dec
sbbb
mov
ret
addr16
or
popf
test
sbb
aam
cmp
adc
ret
jnp
fbstp
xchg
dec
mov
testl
movb
lea
jmp
adc
dec
push
mov
fsubr
call
push
je
call
xchg
stos
mov
daa
inc
adc
or
adc
xlat
mov
pop
jp
negb
outsl
mov
test
xchg
jg
cmp
lret
mov
loopne
call
pop
dec
std
lods
mov
sbb
mov
std
movsl
rcll
ror
push
inc
inc
xchg
jecxz
daa
lret
dec
fildll
sub
jo
cli
adc
into
mov
int3
out
sub
inc
pop
xchg
aas
inc
xorl
pop
rorb
popa
pop
jnp
out
icebp
dec
jle
cmp
rcl
push
add
or
push
popa
xchg
dec
mov
cmp
aas
push
pop
push
adc
xlat
xchg
xor
mov
and
xchg
cltd
cmp
xchg
lret
cmpsb
outsl
or
ja
lahf
sub
lret
dec
mov
std
clc
cmp
sub
pusha
call
in
lods
mov
scas
ja
fcomi
cmova
out
sbb
sub
xor
sub
ss
dec
dec
xlat
xchg
mov
sub
dec
ret
or
out
push
adc
dec
imul
adc
xor
add
test
xor
xor
push
adc
pop
jmp
sbb
sbb
test
mov
enter
in
sub
mov
dec
loopne
or
mov
pop
xchg
lcall
mov
and
push
push
xorb
pusha
push
in
lock
inc
hlt
mov
fcoms
jns
cmpps
inc
dec
push
out
pop
aaa
pop
cld
js
xchg
cmp
add
std
jmp
data16
jmp
das
negl
in
cmpsl
xor
and
ret
jae
cmpsl
push
pop
fwait
dec
mov
lcall
xchg
pop
and
push
outsl
mov
pop
jg
push
jnp
mov
mov
mov
hlt
lcall
test
cld
ss
nop
int
or
shl
sub
and
js
ret
sbb
fisubl
dec
filds
push
es
jne
mov
roll
in
mov
jl
xor
mov
mov
pushl
ret
sti
mov
xchg
mov
mov
cmp
xchg
popf
mov
adc
inc
mov
repz
pop
sbb
in
or
mov
les
out
je
jnp
inc
outsl
ljmp
pop
adc
mov
cmp
mov
xor
mov
subl
xchg
inc
xor
inc
testb
iret
push
mov
push
imul
adc
cwtl
inc
rclb
mov
rolb
mov
lcall
inc
cs
add
insl
jae
insl
inc
and
cs
mov
xlat
add
cmp
mov
test
inc
mov
gs
adc
popf
mov
mov
mov
std
movsl
mov
fst
loop
cs
ljmp
iret
aas
dec
sbb
and
cmpsl
pop
fldt
lret
repz
mov
xor
mov
lret
cs
xchg
mov
leave
into
push
bound
push
inc
scas
cltd
or
push
hlt
cld
or
cmp
jo
pop
shll
icebp
fistpl
es
xchg
pop
test
add
push
inc
pop
push
in
fildl
sub
out
push
shrb
pop
sbb
mov
les
sbb
push
push
mov
into
jp
pop
loop
and
sub
les
xor
mov
lret
mov
jg
mov
iret
pop
andl
adc
sbbb
cmc
sub
les
or
mov
outsl
bswap
out
jnp
mov
and
stos
mov
mov
cmc
jmp
xchg
repnz
jnp
test
push
jae
push
arpl
sbb
lcall
mov
jb
mov
aad
or
xchg
push
rorb
mov
pop
shl
pop
inc
push
pop
push
dec
jge
and
sbb
jno
int
mov
and
and
jmp
mov
mov
lds
scas
stos
mov
testl
mov
adc
repz
lret
rolb
je
jnp
cltd
jg
out
sti
mov
mov
das
rcll
aaa
cltd
mov
pop
add
fld
sub
gs
sbb
lods
inc
fnstsw
mov
stc
jne
mov
ret
and
fs
jne
pusha
jmp
movzbl
neg
xor
push
add
shl
movl
pop
adc
mov
pusha
pusha
cmp
push
lea
jbe
shl
sub
inc
cmc
sbb
mov
bsr
test
sar
mov
sub
bt
dec
add
inc
inc
shr
mov
adc
mov
mov
bsf
neg
shrd
pusha
add
pop
mov
movb
jmp
jo
mov
imul
xor
dec
bound
jp
dec
mov
pop
cwtl
lock
sbb
fidivrs
pusha
je
add
push
aam
ficoms
mov
lock
leave
jl
movsb
mov
and
xchg
aaa
and
popf
lds
aam
pop
xchg
add
test
fnstenv
dec
push
ficompl
stos
ss
ret
ffreep
outsb
rcll
jmp
mov
jp
mov
notb
mov
xrelease
lahf
sbb
pop
push
test
enter
jo
pushf
mov
inc
into
or
sbb
mov
sub
dec
jp
call
out
sub
adc
push
hlt
mov
ljmp
lahf
mov
pop
pusha
jns
sub
sub
mov
filds
je
push
cmp
and
cmp
mov
pusha
clc
jl
les
cmpsl
mov
push
sbb
add
jae
popa
addr16
outsl
js
add
out
push
cmp
dec
xchg
mov
popa
xchg
mov
add
out
loope
cmpsl
mov
and
xchg
les
or
cbtw
js
and
jecxz
or
scas
pusha
sti
push
mov
mov
cmp
andb
enter
xor
aaa
dec
fcoml
push
pop
xlat
cmpsb
stos
push
out
push
jle
mov
jb
cmpsl
mov
test
call
and
fsubr
out
and
xchg
mov
cmpsb
sarb
and
jg
sbb
pop
lret
fwait
and
pop
test
xchg
dec
scas
out
add
xor
sbb
hlt
jl
ret
add
mov
int3
clc
add
pop
pop
inc
jecxz
mov
adc
jb
pop
mov
in
xchg
sbb
in
test
mov
xor
icebp
sbb
lahf
push
fsubrp
sti
aaa
dec
outsl
outsl
xchg
cmpsl
filds
or
inc
out
fnsave
mov
mov
mov
fwait
stos
or
xor
pop
aad
lret
movsb
rol
cmpl
aad
mov
add
jns
pop
addr16
lret
inc
xor
push
cmove
fcomp
pop
bound
pop
fldcw
mov
hlt
dec
clc
lods
lahf
push
xchg
pop
fisubl
cmp
jle
xchg
cs
pop
or
mov
mov
shr
cmp
std
sbb
lcall
jnp
jg
ret
repz
dec
sarl
out
fldcw
imull
dec
lret
cs
mov
mov
and
and
xchg
movsb
ret
in
hlt
push
push
push
mov
xchg
adc
fistpll
dec
inc
movsl
cmc
sti
fwait
cmp
pop
jbe
pop
inc
in
sar
rolb
aam
add
cmp
test
cmpsl
lods
push
sbb
jnp
movw
pushf
lea
jmp
push
pushf
pusha
call
push
lea
je
pushf
call
pusha
push
jmp
sbb
adc
enter
xchg
sbb
fucom
sbb
roll
outsl
cmpsl
sti
pop
fstpl
outsl
jge
sub
std
call
lock
loopne
cmp
loopne
adc
sarb
mov
fstl
inc
inc
jns
outsb
hlt
out
lret
dec
push
mov
adc
dec
lea
or
dec
loope
stc
lods
push
stc
mov
cmpsl
lods
lret
mov
push
fstps
idiv
and
imul
mov
jne
xor
dec
push
lds
adc
enter
mov
js
push
outsb
jl
cmpsb
mov
sub
ret
repz
push
adcl
insl
and
ljmp
sub
and
push
ret
lret
pop
mov
or
cmp
stc
pop
stos
icebp
mov
jo
lods
pop
loopne
adc
cmp
mov
jecxz
push
pop
mov
aas
movb
pop
daa
pop
lahf
mov
imul
mov
push
es
stos
mov
bound
sub
int
cmp
repz
sbb
les
fidivs
and
outsb
dec
push
stc
push
xchg
mov
and
or
das
andb
pop
mov
loop
and
outsb
sub
jb
cmpsl
lods
mov
sub
outsb
cli
cltd
cmp
push
mov
cmp
imul
dec
mov
sbb
repnz
and
fdivl
pop
shlb
js
push
xchg
add
mov
adc
push
adcb
mov
xchg
clc
mov
icebp
dec
test
xor
stos
mov
stos
lock
push
fcoml
sub
sub
or
jge
rcrb
xorl
xchg
and
iret
and
cmpsl
lods
adc
int
es
inc
out
or
scas
mov
insb
movsb
rolb
sub
jl
mov
pusha
ds
iret
push
cwtl
dec
sbb
repnz
inc
cmp
pop
xchg
pop
xlat
xchg
ret
jne
icebp
aam
jge
cmp
in
stos
push
scas
mov
cli
cltd
push
je
sbb
enter
call
in
pop
fdivrs
or
push
mov
ret
fiadds
xor
ja
addr16
insb
sub
les
dec
pop
push
mov
pushl
inc
ja
scas
scas
scas
dec
jae
push
cmp
test
pop
mov
dec
xchg
mov
xor
fisubrs
cmp
gs
arpl
mov
xchg
inc
inc
mov
xchg
mov
mov
lea
jge
mov
out
in
nop
pop
rorb
dec
repnz
out
push
orb
cmpsl
stos
cmp
sbb
xchg
shl
jmp
add
dec
outsl
arpl
inc
jb
add
adc
fisubrl
push
push
xchg
scas
mov
sahf
cmp
push
lds
mov
xchg
pop
push
arpl
imul
das
cld
cmp
into
inc
jbe
pop
fwait
shrl
mov
outsb
mov
mov
pop
adc
dec
push
std
movsl
stos
int3
sbb
daa
pop
stos
xchg
cmp
or
pop
sub
lds
sbb
gs
imul
sbb
xor
es
push
jp
mov
xor
test
into
xchg
in
jo
sti
fmuls
lret
and
std
or
jecxz
pop
fcompl
inc
addr16
and
loopne
stc
in
jns
cwtl
push
cli
xor
dec
divb
push
push
pop
std
or
sti
aaa
mov
xlat
jae
mov
mov
lret
or
mov
cmp
pushl
pusha
jmp
nop
push
pop
jp
and
aad
cmpsb
sar
cmp
ss
scas
lret
or
fbld
mov
out
xchg
daa
push
inc
pop
dec
test
out
inc
aam
sbb
push
mov
mov
sbb
test
fisubrl
aas
cwtl
call
popa
or
sub
cmpb
scas
xchg
mov
pop
jno
inc
outsl
cmp
outsl
das
mov
sti
orl
inc
iret
push
mov
fsubs
dec
xchg
jne
mov
mov
and
ja
dec
rcll
push
mov
xchg
cmp
lret
div
mov
cmp
test
rcll
sbb
lea
jecxz
pushf
pop
push
cwtl
push
lds
pop
mov
push
cmp
pop
push
cli
lahf
stos
push
add
mov
out
mov
into
clc
add
clc
stc
cmp
lea
js
push
pushf
pushf
lea
jb
call
pushf
lea
call
pushf
pusha
pushl
mov
mov
pusha
lea
jmp
inc
dec
jge
popf
call
xchg
mov
jae
jnp
rcl
out
mov
pusha
stos
lret
push
out
push
and
mov
fidivs
imul
test
rorb
pop
or
adcl
lods
out
or
mov
dec
cltd
dec
dec
jo
inc
sarl
les
jne
pop
add
adc
pusha
adc
pushf
inc
in
cmpsl
test
mov
ret
int3
shr
lods
adc
fcomip
or
dec
jae
jecxz
sbb
xchg
sbb
movsl
lea
ret
or
jae
pop
pop
rorb
mov
cwtl
addb
outsb
mov
sbb
push
aam
jmp
sahf
in
mov
cmp
inc
gs
pop
mov
decb
mov
into
pushw
mov
ret
mov
mov
mov
or
test
mov
stc
pusha
call
and
ljmp
orb
jne
mov
mov
add
sti
adc
jmp
test
mov
and
lea
ret
call
sbb
jb
mov
repnz
aas
or
out
into
mov
mov
es
pusha
dec
rorl
sar
popf
add
daa
pop
daa
inc
sub
ret
push
or
std
orl
pop
clc
idivb
imul
push
shrb
mov
lret
cmpsb
clc
call
in
js
dec
cli
inc
enter
adc
stos
mov
ljmp
push
test
sti
or
into
jbe
aas
sbb
xchg
cmp
jp
daa
pop
shl
outsl
iret
ret
shl
js
punpcklbw
das
cmp
sub
repnz
insb
andl
xor
int3
loope
mov
std
lods
cmp
lea
leave
or
ficoms
xchg
cmc
mov
outsb
mov
pop
addb
sub
test
pop
data16
ds
cs
ljmp
fwait
daa
xor
sbb
stos
sub
xorl
addr16
cmpsl
cmpsb
xor
sbb
clc
sub
pusha
lea
jnp
pushf
pushf
rep
jmp
add
push
gs
jb
popa
je
dec
gs
add
pop
idivb
xor
outsb
push
sahf
scas
fsubrp
mov
loop
mov
shl
xchg
cmp
adc
adc
addr16
xchg
adc
jns
fcomps
adc
dec
call
cmpsl
cmpsb
and
movsb
not
pop
lea
lea
mov
pusha
push
pushf
lea
jmp
not
not
call
mov
shl
loop
mov
addr16
scas
lret
lret
jecxz
dec
dec
dec
repz
shl
inc
jmp
mov
dec
pop
xchg
daa
push
pop
pop
sarl
movsl
pop
cwtl
int3
xchg
iret
xor
nop
mov
ret
or
test
mov
mov
xchg
push
fisubl
mov
and
mov
mov
xor
dec
push
inc
jns
sub
inc
daa
xchg
xor
loopne
divb
push
sub
and
loop
sbb
aaa
cmp
mov
jne
xchg
jp
ds
mov
pop
adc
ret
jg
dec
push
and
sub
cmp
cltd
push
mov
mov
lods
mov
cmp
jmp
xchg
lret
jo
es
xor
sarb
adc
popa
jmp
cmc
and
aaa
adc
jns
mov
out
dec
jb
sbb
add
jb
idivb
outsb
push
pusha
call
add
sub
divb
dec
or
sbb
pop
xchg
mov
arpl
adc
ret
test
mov
loop
sbb
mov
shlb
cs
adc
xchg
jl
or
in
sbb
pop
pop
test
ja
testb
bound
out
cli
mov
push
push
inc
cmp
pop
ret
mov
jb
pop
jp
movsl
rdtsc
add
in
addl
cmc
jno
mov
loopne
shr
into
ljmp
sbb
jecxz
je
jne
test
add
fcoms
push
ret
push
aaa
in
lcall
loopne
jb
or
and
mov
insl
imul
insb
or
jae
xchg
mov
fsubrs
push
stos
hlt
inc
out
ret
sub
sub
subl
fsts
mov
shll
xchg
push
out
in
fnstenv
addr16
les
aad
loop
bound
ret
fdivrs
mov
in
inc
hlt
jo
jmp
push
test
in
mov
xor
hlt
mov
sub
shl
dec
outsl
cmpb
rcr
xchg
int
inc
loop
push
aas
mov
insl
mov
cmp
lock
dec
fists
das
push
mov
mov
je
and
adc
repz
push
add
sbb
insl
sbb
sub
push
arpl
mov
lods
lods
in
adc
outsb
jge
lahf
fcmovnbe
mull
aas
pop
orl
mov
test
push
and
push
cmp
pushf
or
xor
sarb
inc
lcall
add
sub
xchg
in
arpl
jecxz
fldenv
cmp
jns
arpl
xchg
mov
ss
sahf
sub
out
xchg
cmp
sbb
fs
jne
mov
jmp
xchg
jo
jp,pt
das
sbb
inc
push
push
jg
mov
subl
push
fiadds
lods
inc
sbb
push
mov
inc
pop
inc
inc
jb
movsl
dec
in
cmp
iret
movsl
rcrl
int
int3
mov
movsb
mov
loopne
adc
xchg
fsubrl
in
mov
xchg
adcb
jnp
push
fisttpl
mov
out
cmpsl
mov
pushl
lea
ja
seto
pop
push
lea
pop
lea
pop
setno
jmp
fcompl
xor
dec
dec
popa
insl
int
in
add
fstl
imull
and
rcll
jl
and
mov
add
test
mov
or
rorb
arpl
mov
add
add
adc
push
mov
xchg
shr
leave
repnz
call
or
mov
inc
sti
push
add
or
jl
mov
xor
cmpsl
mov
stc
rcr
stc
mov
bt
mov
jmp
mov
xchg
mov
push
jae
and
fucomp
sub
cmc
adc
xchg
xchg
and
push
cli
xchg
cmpsl
inc
out
call
mov
imul
cmp
cmp
aam
pop
dec
lcall
or
sub
dec
adc
mov
xchg
and
inc
insl
orb
mov
push
jle
xor
pop
lret
loop
dec
xor
sbb
dec
in
inc
rclb
fs
hlt
mov
fs
stc
cmp
call
add
dec
outsl
arpl
inc
insb
insb
outsl
arpl
bt
pushf
ror
xor
setno
sub
jmp
seto
mov
jmp
push
adc
inc
enter
xchg
mov
or
dec
push
mov
cwtd
mov
stc
repz
lahf
lret
idiv
sub
and
hlt
xor
jge
cmp
mov
inc
out
shll
jne
jle
cmp
shl
sti
movsb
stc
and
scas
mov
les
imulb
pop
les
push
add
jnp
sbb
mov
outsl
ds
push
or
push
cli
mov
cli
sahf
and
push
loop
mov
lods
lea
jb
clc
cmp
cmp
push
lea
jae
call
lcall
pop
adc
mov
xlat
out
sub
aaa
inc
jae
dec
mov
loopne
loopne
cmp
in
dec
cli
iret
adc
xchg
rcll
lret
dec
int3
push
xchg
scas
dec
filds
jnp
lret
dec
fninit
mov
and
lahf
ret
pop
push
loope
and
cmp
leave
int
add
leave
jge
pop
subb
ljmp
sub
sbb
inc
dec
test
cmp
int
inc
leave
mov
lahf
leave
pop
jo
dec
fisubl
jge
adc
cmp
repz
insl
fs
cltd
cmp
std
pop
adc
scas
mov
dec
repz
sub
mov
jmp
fistpll
lods
sub
push
pushf
pushl
pushf
repnz
call
in
ret
movsl
push
imul
call
insb
insb
lods
mov
adc
pop
adc
mov
cmp
cmovp
mov
lret
clc
or
push
mov
push
subl
xchg
lods
fbld
mov
inc
pop
mov
call
decb
enter
frstor
lods
iret
lods
dec
sbbb
cmp
cli
cli
mov
aaa
pushf
jmp
or
xor
inc
divb
sub
mov
in
sbb
push
pop
mov
mov
mov
add
sbb
cmpsl
xlat
in
push
push
js
mov
negl
xchg
movsb
jno
in
or
cmp
xchg
fdivrs
xor
das
xlat
pop
xchg
xchg
ret
xchg
lods
or
mov
sub
inc
add
sahf
xor
jl
and
movzbw
mov
not
push
pushf
mov
pushf
pushf
mov
mov
mov
pop
push
pusha
pusha
pushl
pushl
ret
and
test
mov
add
movb
pushl
lea
jmp
pusha
sub
in
idivb
out
and
lcall
xor
neg
js
dec
or
sbb
mov
in
iret
pop
stos
push
in
mov
add
pushf
pop
dec
or
rolb
lds
jmp
call
push
lea
mov
imul
sbb
push
adc
jno
xrstors
and
fists
inc
cmp
enter
xchg
sbb
into
out
hlt
hlt
cmpsl
addr16
pop
jbe
mov
cmp
lods
mov
inc
int3
push
call
orb
inc
xor
mov
xchg
ljmp
pop
out
mov
mov
subb
push
lea
call
pushf
movb
push
lea
jae
test
test
call
lods
push
stos
ds
iret
rcr
mov
into
lret
xor
pop
or
lahf
mov
inc
cmp
cmc
fcoml
mov
rcl
lret
cmp
imul
decl
pop
adc
mov
clc
xchg
rorb
xchg
cltd
mov
lock
lahf
push
es
cld
in
cli
scas
loop
sbb
add
mov
imul
cmp
jp
push
mulb
mov
shrb
jb
cmpsl
pushf
sbb
out
xchg
xchg
xchg
mov
and
ret
add
aas
inc
mov
jecxz
xchg
mov
push
into
in
inc
mov
add
sbb
or
jb
dec
mov
push
ljmp
imul
pop
adc
in
push
movsl
xor
sub
cmpsl
cmpsl
cmpsl
ljmp
mov
pushf
add
pushl
rol
stc
clc
test
clc
xor
bt
cld
pushw
popfw
movb
inc
call
seta
jmp
lods
jne
lods
popa
adcb
mov
data16
lcall
cmp
cwtl
test
outsb
mov
fsts
push
nop
out
int3
xcrypt-ctr
cmpsl
cltd
xchg
or
mov
ja
fwait
pop
insl
dec
outsb
and
rcrl
pusha
and
jb
push
xchg
xor
cwtl
and
dec
divl
sbb
push
pop
les
push
dec
sub
lahf
addr16
push
or
mov
incb
fwait
sub
loope
lret
jecxz
lahf
push
push
daa
xchg
jmp
pop
jns
mov
popa
jno
popf
sub
ficoml
jbe
push
lret
lret
mov
xchg
ss
addl
js
lcall
rol
clc
add
cwtl
inc
pop
and
movb
cld
sub
pop
in
cltd
jne
ds
jge
sub
in
lock
mov
push
mov
add
test
xchg
mov
testl
call
dec
imul
jge
cltd
imul
cmpsl
pop
sbb
popa
jp
ljmp
outsl
dec
mov
cmpsb
dec
gs
jno
mov
xchg
shrb
dec
popa
stc
sbb
lea
shl
add
dec
clc
cwtl
lret
dec
mov
cmp
mov
jmp
pusha
dec
mov
add
jge
xchg
mov
cmpsb
pop
cli
adcb
cmpsl
lcall
idivb
dec
outsl
mov
pop
sub
mov
jmp
add
movsb
pusha
dec
lret
cmp
rorl
in
mov
shr
neg
lods
loop
icebp
sbb
jmp
inc
xor
mov
push
xorb
push
je
push
sbb
fidivrs
addr16
rorb
stos
jae
bound
sbb
push
mov
in
cmc
cli
mov
xchg
notl
lahf
mov
sarl
and
fnstsw
aas
dec
dec
lds
cld
and
outsb
cs
sub
sub
int
and
leave
pop
in
movsl
in
outsl
stos
rcrl
test
and
inc
out
xor
testl
mov
adc
vdivpd
dec
pop
pusha
js
mov
mov
dec
orb
mov
pop
dec
fs
xorl
js
xlat
push
sub
pop
in
aam
insb
fnstenv
mov
leave
push
push
sbb
insl
sbb
inc
imul
cwtl
js
push
cmp
jbe
pop
ret
dec
push
xchg
sahf
outsb
enter
shrb
xor
mov
mov
mov
fstl
mov
pop
jg
push
arpl
or
imul
fistpl
and
add
das
xor
sub
or
sub
ja
inc
mov
mov
outsb
jg
inc
fs
adc
imul
push
xchg
das
dec
sbb
cld
adc
add
imul
pop
jnp
out
pop
mov
popf
adc
leave
jno
mov
inc
outsb
cmc
mov
dec
jp
mov
pop
lea
stc
incl
fwait
sahf
cltd
dec
ret
repz
lods
or
call
pusha
xchg
add
mov
cmpsl
fnstsw
add
mov
inc
ja
xchg
pop
mov
push
stos
stos
adc
dec
shrb
mov
mulb
cwtl
and
jbe,pt
pop
push
inc
loopne
std
adc
imul
add
xchg
push
mov
or
cmp
test
in
mov
lods
sahf
shrb
mov
mov
xchg
leave
sbb
xchg
sub
rcll
mov
push
jp
mov
cmpsb
mov
popf
insb
test
je
cwtl
inc
les
lods
pop
loopne
and
mov
or
test
clc
pushf
stc
stc
or
pushl
pushf
jmp
call
xor
inc
jns
adc
pop
and
inc
jae
mov
xlat
div
sti
sub
scas
roll
xor
iret
fs
in
lret
mov
jecxz
push
lret
shll
mov
jge
daa
out
mulps
mov
push
repnz
jbe
adc
mov
mov
mov
fbld
jae
cmpsl
inc
fisttps
lods
jbe
cwtl
sub
clc
mov
sub
pop
and
and
mov
shl
out
inc
imul
test
jl
pop
or
jae
insb
popa
in
or
pop
mov
sub
loop
adc
mov
mov
sub
out
mov
ds
inc
jb
jne
movsl
in
fcompl
sahf
jge,pt
mov
adc
les
and
pusha
adc
cmpsl
xchg
inc
xor
movl
pushl
lea
jmp
or
dec
imul
adc
das
arpl
add
aaa
push
bt
out
push
outsb
push
lahf
andl
int3
push
pusha
jo
mov
scas
js
jno
insl
jge
pop
xchg
xchg
pushl
inc
test
pop
addl
rolb
cmp
ret
insb
cmp
out
push
out
imulb
adc
adc
add
fstpt
jle
pusha
lea
jne
pusha
jmp
lea
jmp
stos
mov
call
lea
adc
insb
repz
test
and
sbb
xchg
pushf
mov
cwtl
inc
and
inc
loope
addb
push
ss
jecxz
std
pop
push
xor
call
cmpsl
lods
data16
add
jae
xchg
mov
fimuls
ss
ja
sbb
test
cmpsl
fidivs
mov
lret
push
fistps
stos
cmp
cmpsl
xchg
sbb
rol
inc
and
sarl
push
pushf
push
lea
jmp
cmp
xchg
and
leave
jmp
cmp
xorl
outsl
add
subl
pop
fistpll
rcr
loopne
mov
mov
push
lods
aam
dec
xchg
push
out
pop
mov
leave
pusha
fwait
and
or
out
add
xor
call
mov
repnz
xor
data16
mov
push
rolb
icebp
insl
js
xchg
cltd
int
or
pop
jno
jns
mov
popa
inc
pop
cmp
hlt
lret
hlt
ret
mov
stos
adc
pusha
or
ds
hlt
sbb
sub
xor
bound
gs
pusha
clc
sub
gs
sub
and
fldenv
pusha
je
fmuls
fnsave
std
push
popf
sbbb
pop
cmc
xchg
adc
cmc
sbb
shll
test
in
push
xchg
xor
mov
mov
pop
adc
sub
flds
roll
rclb
mov
xor
sbb
lea
push
test
pop
enter
ret
faddl
mov
sub
int3
mov
scas
inc
les
jne
test
jne
fistps
or
pop
and
sbb
shlb
mov
mov
mov
gs
loope
or
add
mov
xor
sbb
push
ljmp
xchg
mov
mov
pop
push
xor
xchg
push
mov
mov
out
sti
and
stos
pop
bound
push
sahf
das
pop
push
xchg
int3
int3
ss
xlat
xchg
mov
arpl
movsl
mov
xchg
pop
cmp
dec
sbb
std
lea
clc
xor
hlt
or
ret
mov
and
push
pop
mov
rcrb
push
daa
mov
pop
mov
ljmp
iret
daa
push
sbbb
pop
jmp
aaa
divl
mov
mov
out
fists
shr
pop
bts
btc
shld
mov
rcl
cmc
test
sbb
add
rcl
mov
call
cmc
cmp
cmp
push
call
push
dec
dec
push
push
dec
dec
dec
cs
push
push
add
shr
bts
mov
pushf
pushl
shrd
sete
add
dec
test
add
pushf
mov
shr
mov
pushf
jmp
jmp
fucomip
cld
sub
testl
jno
lea
sar
daa
sbbb
inc
and
out
push
scas
out
pop
call
dec
insb
lea
or
in
and
rcll
add
fisttps
ja
dec
mov
dec
cmp
pop
test
inc
call
jl
add
mov
cwtl
jge
dec
in
or
popf
push
cmc
sub
fsubl
xchg
pop
or
out
jne
inc
pop
xchg
cmpsb
lret
inc
jb
lcall
dec
rcll
call
hlt
add
js
aaa
mov
in
or
addb
mov
into
xor
outsb
fists
fsubs
aas
xchg
ret
fcom
jge
ficomps
dec
cmpxchg
pop
sbb
jge
xchg
inc
icebp
jne
roll
cmpsl
xchg
imul
fs
jbe
bswap
mov
bswap
shl
shrd
rcl
add
adc
movzbw
bts
mov
jo
bswap
add
bts
ror
and
sub
movl
cmp
xor
inc
mov
push
cmp
stc
cmp
call
lea
jne
bt
xor
dec
mov
call
mov
mov
jnp
popa
call
daa
sub
dec
addr16
mov
jnp
sbb
jg
inc
adc
loope
or
mov
mov
fucomip
call
jl
les
pop
je
fwait
daa
pop
rolb
outsl
pop
inc
jb
imul
jmp
shlb
lret
je,pt
adc
sbbl
in
jge
xchg
cmp
cmp
and
lret
jae
mov
mov
lcall
jns
xor
cwtl
rcr
jg
sub
inc
inc
ja
xorl
sbbl
loope
xor
imul
add
xchg
sbb
out
xor
and
pop
add
cmp
mov
xchg
das
dec
pop
nop
dec
inc
jb
adc
ret
icebp
jns
cltd
xchg
in
cmp
push
ret
add
sahf
es
fisubrl
xchg
inc
push
cmpsl
nop
sub
decl
mov
lock
sub
pop
test
fs
test
pop
aaa
sbb
sub
push
sahf
mov
das
xor
imul
sub
insl
in
mull
outsb
je
cwtl
data16
pop
add
shr
icebp
sarl
hlt
cwtl
sub
push
jo
les
addr16
jns
movsl
mov
inc
outsl
mov
push
jnp
stos
iret
pop
fistl
xchg
xor
icebp
add
inc
push
mov
pop
fcmove
test
jb
in
or
sahf
dec
loopne
rcrb
push
add
in
pop
inc
fs
fsub
mov
inc
jmp
sarl
or
icebp
jge
mov
in
mov
xlat
mov
mov
int3
rorb
test
call
cmp
rcl
fisubrs
pop
add
nop
stc
add
outsb
movb
shrb
add
pop
mov
add
cmova
je
jnp
sub
and
jbe
popaw
imulb
add
pop
push
xchg
sbb
push
mov
mov
in
cltd
dec
leave
imul
xor
push
ss
sub
sub
shrd
bts
test
add
pusha
add
mov
adc
setg
mov
bt
mov
stc
jmp
xchg
lahf
stos
xlat
jae
nop
mov
pop
nop
xchg
sar
or
cmp
mov
mov
shl
cld
or
jl
test
mov
std
hlt
dec
and
add
push
ret
mov
inc
add
aad
pxor
and
icebp
mov
in
icebp
cmp
imul
cmc
push
pop
inc
in
int3
shlb
add
mov
cli
mov
scas
xor
jbe
mov
or
mov
mov
mov
pushf
bswap
movsbl
pusha
lea
movl
movw
pushf
call
adc
imulb
dec
data16
sub
and
push
push
add
inc
dec
icebp
std
jecxz
hlt
add
mov
cmc
popf
shll
je
sahf
mov
mov
sub
sahf
cmp
xchg
push
push
ret
cmpsl
lea
repnz
in
hlt
sbb
fs
fisttps
pushf
cmp
push
subl
roll
bound
push
frstor
pop
sub
lods
dec
pop
icebp
jns
lods
xor
imul
adc
sbb
fdiv
mov
sub
sbb
imul
jae
mov
sbb
rcrl
sbb
sub
inc
dec
leave
cld
or
sub
lea
xchg
out
scas
testb
outsl
loope
lahf
scas
mov
nop
xchg
pushf
movsb
rcl
je
jb
jo
in
xor
in
stc
pop
add
push
clc
shrl
jp
das
fstl
lret
divl
loope
aas
pop
bound
sbb
lock
mov
mov
xchg
add
jp
pop
inc
and
cld
int3
fwait
enter
mov
push
repz
scas
imul
imul
scas
inc
mov
and
cltd
ret
neg
mov
setl
rcl
cmc
rol
rcl
sub
pusha
test
xor
pushf
stos
pushl
call
pop
iret
repz
pop
and
xchg
lret
sub
stos
lret
push
mov
xchg
aaa
mov
or
mov
lds
inc
dec
jecxz
loop
dec
or
adc
fidivs
and
scas
mov
xchg
sub
jmp
pop
push
es
andb
push
mov
xacquire
mov
cmpsl
mov
int3
xchg
lea
ja
push
cmc
imul
pusha
test
cmp
add
pusha
lea
jmp
bt
neg
call
add
inc
gs
outsl
fs
gs
imul
add
test
pushf
pushf
inc
push
lahf
inc
call
pushf
push
push
push
lea
call
jmp
out
sbb
xor
pusha
daa
gs
cmp
orb
push
add
lds
mov
fmuls
outsb
sti
sbb
and
fcoms
int
mov
xor
movsb
mov
scas
shl
daa
pop
aad
pushf
nop
orl
xchg
enter
mov
out
and
subl
popa
xchg
cmp
jmp
sub
les
pop
divl
scas
push
pop
lret
pop
jecxz
aaa
repz
cmpsl
neg
mov
bt
cmc
add
pushf
clc
mov
pushf
test
pushf
call
cmp
push
jmp
mov
jmp
pusha
movl
pushf
pushf
lea
jmp
cmp
movw
jmp
mov
rcrl
xchg
movsb
mov
hlt
add
sub
inc
jl
shl
test
ja
gs
pop
mov
dec
cli
mov
xor
jg
pop
ficoms
sub
push
bound
mov
lcall
out
push
sbb
out
xor
and
jl
out
mov
xor
mov
inc
mov
jg
pop
mov
loope
lahf
pusha
mov
bnd
addl
and
xor
sub
imul
jge
ja,pt
outsb
in
adc
mov
mov
jae
jp
jle
mov
in
mov
outsl
repz
mov
push
sub
fmull
mov
pop
mov
rcrl
push
add
mov
movb
setl
cwtl
pusha
mov
cwtl
lea
pushl
movl
call
bt
cmp
push
pushf
pusha
lea
je
push
movb
lea
jmp
add
out
mov
cmp
push
push
mov
cmp
cmp
push
xchg
xchg
cmpsl
pop
js
or
shl
icebp
stc
cltd
shlb
adc
or
daa
pop
mov
outsb
adc
jmp
aad
in
pop
fisttpll
ficoml
call
icebp
or
mov
pop
mov
mov
jle
insl
push
stc
pop
lods
in
inc
dec
sbb
out
and
pop
lahf
dec
lret
push
mov
xchg
add
loop
std
call
cmc
xor
pusha
jmp
out
out
pop
cmp
and
test
sub
mov
pop
xchg
testl
in
sahf
cltd
inc
add
fisttps
inc
inc
repnz
mov
xor
jp
rep
pop
out
es
mov
ja
inc
int
test
jle
gs
sub
lock
sbb
mov
ficomps
and
idivb
sarl
push
push
test
mov
sti
daa
lock
test
push
and
pop
popa
adc
cld
cmp
in
and
and
call
in
lret
test
call
out
push
pop
pop
std
adc
mov
cmc
movsl
sub
mov
mov
rorb
call
or
out
push
sbb
mov
in
inc
dec
insb
mov
push
in
mov
sub
or
xorl
lahf
jg
pop
jg
into
lock
scas
loopne
sbb
ror
pusha
fldl
sbb
cmp
clc
cmpl
add
test
push
cmp
clc
mov
pushf
test
dec
sbb
rclb
mov
inc
in
js
cmpsl
xchg
jbe
jb
cs
insb
add
stos
pop
jl
insl
hlt
mov
insl
popf
mov
jb
xchg
jg
aam
cmp
or
push
clc
cmc
and
mov
dec
iret
lcall
jae
js
jmp
mov
mov
adc
out
cmpsl
xor
into
scas
fdivp
cmpl
pop
jmp
sub
pop
stc
mov
sarl
shr
dec
rcl
mov
bt
cmpb
push
jmp
movl
pushf
lea
jmp
lea
je
push
mov
cmc
cmp
jmp
sahf
fs
int3
pusha
nop
mov
dec
jle
loop
push
push
push
push
pop
push
data16
ret
ror
jl
xchg
xor
dec
jnp
std
notb
js
push
add
scas
xchg
mov
lea
fstps
ret
mov
test
cmp
cs
imul
out
mov
jae
xchg
pop
mov
in
sbb
ret
outsl
jno
shl
clc
mov
pop
sbb
push
fisttpl
jnp
mov
xchg
enter
lret
inc
cmpsb
xor
sahf
testb
push
pop
pop
jp
mov
ljmp
add
movsl
data16
stc
data16
loop
or
mov
jp
push
jno
int3
cs
push
int3
imul
outsb
jle
mov
dec
std
fsubrl
pop
in
or
testl
shrl
in
mov
inc
push
xchg
xchg
pop
jo
add
int3
push
in
js
mov
outsb
pop
dec
inc
inc
push
inc
push
dec
xor
cs
insb
add
jecxz
pop
jae
pop
fwait
int
ljmp
lcall
inc
jne
mov
add
ret
sti
inc
xlat
add
add
daa
das
out
cmpsl
movsb
xor
push
fcomps
fstl
xchg
and
and
mulb
mov
pop
fcomps
jmp
test
add
sbb
push
aam
adc
cmp
js
mov
adc
les
pop
std
std
xor
pop
ret
jne
xchg
xchg
jg
and
or
adc
pop
stos
ss
mov
jp
in
mov
and
aam
push
ret
add
out
sub
pop
test
shrl
hlt
inc
cmpsb
jb
in
xchg
push
movsl
and
xchg
fsubs
adc
enter
aam
cmp
add
mov
xor
adcl
out
fnstenv
xor
loopne
sbb
fwait
mov
lret
popa
cli
fists
hlt
jp
gs
cwtl
mov
subb
sbb
cmp
or
dec
sbb
mov
cwtl
lret
mov
rclb
pop
int3
xchg
shr
xchg
cwtl
test
movsb
mov
and
mov
push
or
and
fsubrl
pushf
add
hlt
pushf
movl
push
lea
jmp
pushf
adc
mov
pushf
lea
jmp
lea
je
ror
add
push
sbb
sub
btc
shr
neg
push
pusha
mov
rcl
sub
add
cmp
seta
bsf
add
sub
neg
mov
pushf
shr
call
cmp
add
lcall
sahf
shl
push
or
out
dec
and
xor
and
cmc
js
clc
inc
push
in
add
or
mov
mov
pop
aam
dec
call
push
jl
shl
orb
push
or
out
and
fwait
xlat
in
mull
shl
jmp
aas
jle
jle
inc
push
pop
sbb
push
jmp
das
out
negl
mov
out
stc
add
sub
push
cmc
stc
push
add
jmp
cwtl
push
pop
cmpb
mov
ret
jecxz
aas
dec
dec
push
jg
cmpsl
mov
out
sub
lahf
pop
mov
mov
jns
mov
sub
out
std
mov
jne
jno
popa
cmpb
stc
pminsw
data16
fadds
ret
lods
pop
mov
pop
repz
cmp
addr16
stos
das
iret
pop
jmp
dec
mull
jle
pop
xor
jmp
lea
call
clc
cmp
jmp
and
mov
mov
adc
hlt
add
jo
cwtl
mov
cld
cld
pop
out
sub
mov
xor
shr
ret
pop
rolb
repz
jg
and
leave
fnsave
or
in
sub
movsl
lret
jbe
xor
stos
jg
dec
stos
mov
fs
testb
or
je
xchg
push
xchg
stos
cmp
jp
cmp
mov
cltd
gs
imul
fwait
pop
rorb
xor
sub
in
pushf
dec
mov
lahf
daa
inc
jns
and
sbb
outsb
imul
movsb
clc
xor
nop
mov
push
orb
add
movsb
sahf
cs
pop
fiadds
sub
loopw
pop
daa
push
push
test
mov
push
mov
sbb
inc
in
out
std
add
pop
scas
cmp
sbb
mov
jo
shl
pop
aad
out
fisubs
test
pusha
lods
mov
clc
stos
mov
xchg
sti
or
pop
jecxz
roll
lcall
add
or
and
aas
fisttpl
xchg
aaa
out
jnp
fwait
stos
mov
call
mov
or
lea
jle
pusha
pusha
movb
lea
je
pusha
pushf
pushf
call
call
shrd
mov
push
cmpb
movb
pushf
lea
jne
shr
cwtl
xor
pusha
shrd
adc
mov
cmc
adc
adc
add
shl
call
jge
push
popa
in
dec
popf
imul
jmp
and
imul
fucomi
daa
cmp
mull
jae
mov
lret
outsb
popf
int
xchg
or
mov
insb
les
out
shl
cmpsl
cmp
pop
pop
negl
pushf
test
pop
jne
roll
xchg
pushf
push
mov
dec
push
ljmp
push
mov
sbb
lock
push
rcrb
mov
or
cmpsl
addb
cmp
jmp
lcall
iret
loop
pushf
stos
or
push
and
mov
mov
bound
rcl
xchg
adc
cmp
adc
mov
gs
jmp
ljmp
fisubrl
cld
scas
mov
call
orl
sti
lret
and
in
pop
nop
and
mov
inc
jmp
push
subl
jge
leave
jge
xchg
xor
mov
data16
lea
jbe
bswap
sub
mov
adc
xor
mov
stc
shr
mov
pusha
sbb
add
shrd
shr
shl
bsf
clc
ror
mov
xor
sar
add
pop
pusha
mov
lea
call
mov
in
or
sbb
sti
or
inc
outsl
xchg
xchg
mov
and
out
push
or
sbb
cmp
xchg
ret
imul
gs
nop
push
stos
and
add
mov
fisttps
sub
and
xchg
xchg
loope
daa
pop
jns
ror
jg
rclb
mov
lret
and
pop
push
mov
or
repz
lea
rcrl
sub
jnp
cmpsl
mov
inc
jp
fsubl
pop
sbb
fwait
aas
outsl
jne
xlat
negl
inc
cmp
fmull
mov
inc
clc
xchg
sbb
xor
push
jno
lcall
and
pop
data16
inc
dec
loope
or
mov
push
aad
adc
adc
dec
in
movsl
test
adc
bt
shr
call
rolb
nop
mov
les
pop
gs
cltd
test
nop
sub
xchg
adc
push
push
xchg
mov
out
sbb
cmp
push
jnp
test
and
leave
iret
call
pop
xor
and
cmp
mov
add
sti
sbb
jp
jp
ret
jbe
mov
mov
and
fucomp
cltd
addr16
bound
scas
fcmovnu
decl
inc
push
lahf
mov
subb
cli
or
aas
jmp
sbb
mov
push
ret
rorl
repz
add
ljmp
lea
jae
xchg
fcmovb
mov
daa
fists
sub
cmp
dec
pushl
mov
sti
jg
mov
popf
lea
rol
bswap
test
add
mov
bt
and
stc
add
pushf
pushf
movb
lea
jmp
test
xor
mov
push
insb
lods
mov
call
dec
pusha
cld
mov
arpl
lods
mov
jbe
lods
pop
xchg
ret
out
int
rolb
mov
shl
cmpsl
mov
enter
jmp
jnp
insb
push
mov
stos
fnstsw
mov
adc
cld
mov
mov
pop
dec
pop
das
jmp
pop
fwait
inc
out
negl
mov
sahf
push
push
imul
push
push
pop
mov
cmp
cld
movsb
xlat
loopw
sti
leave
push
pop
mov
int3
jmp
mov
mov
fwait
jmp
shl
inc
out
pop
inc
dec
push
adc
mov
cmp
test
ret
rcll
sub
pop
adc
add
mov
cmc
aam
mov
loop
mov
and
dec
loopne
mov
je
test
sub
cmp
sbbb
jno
rcll
adc
jl
adc
fldenv
mov
imul
sti
xor
push
jnp
xchg
fwait
mov
cmovb
xchg
mov
aam
scas
pop
cld
movsb
mov
mov
and
lods
mov
in
xchg
push
jne
rcl
or
ffree
dec
fcoml
mov
adc
xchg
and
flds
xor
push
loop
fiaddl
cmpsb
inc
loop
sub
les
xchg
cmp
clc
mov
shrd
sbb
mov
bt
jmp
jecxz
adc
int3
push
push
cmp
cmpsb
ficoml
sbb
es
xchg
loopne
dec
inc
fwait
xor
add
and
xchg
mov
push
mov
xchg
inc
and
mov
jae
in
fcoml
es
rcrb
push
cltd
lahf
mov
xchg
fists
movsl
fstpt
dec
outsb
jge
inc
ret
jae
jne
add
rorl
inc
leave
jno
popf
push
jmp
add
pop
aam
idiv
xor
loop
loopne
fsub
sbb
jb,pt
jbe
ret
ljmp
pop
mov
dec
fucom
es
fs
cli
add
bound
cmpsb
jl
xchg
stc
dec
pop
mov
xlat
das
sahf
jge
outsb
add
in
sub
push
xor
fptan
pop
les
xor
add
add
fs
xchg
xor
push
jo
test
mov
ja
popf
shrb
lds
sub
xadd
mov
jmp
jle
bound
repz
add
gs
dec
imul
lock
loope
gs
in
out
push
fidivrs
cmp
xchg
lret
xchg
dec
cs
ljmp
into
ffreep
inc
add
mov
sbb
and
or
jmp
push
out
mov
out
cmp
mov
and
inc
or
jmp
das
lock
inc
fwait
ret
push
ret
cmpsb
push
ljmp
in
fstp
arpl
idivb
icebp
sbb
add
or
add
push
outsb
addr16
or
in
add
mov
fsubrs
in
call
inc
inc
cmpsl
daa
or
add
push
outsb
gs
cmp
ficoms
mov
idivb
jp
inc
pop
push
fstpl
pop
mov
cmp
xchg
stos
lret
and
pop
jle
xchg
sub
pusha
nop
popa
push
shrl
ss
ljmp
in
cmpsl
and
xor
dec
adc
mov
arpl
cwtl
lret
fistl
sub
into
or
test
pop
stos
mov
fcmovu
xor
aam
lahf
lods
cmp
xchg
or
mov
or
pop
or
add
jbe
cmpsl
jns
pop
add
or
lea
jmp
xchg
push
imul
cmp
push
lcall
addb
xchg
arpl
sub
dec
pop
and
xchg
dec
dec
jae
arpl
xchg
mov
ljmp
dec
xlat
push
sbb
or
lret
leave
cmpsb
cmp
sub
bound
xchg
jne
cwtl
jnp
shrl
mov
fldt
outsl
stos
inc
jns
push
mov
jbe
pop
imul
mov
mov
cmpsl
pop
sub
mov
inc
pop
mov
or
imul
ja
adc
lea
insb
je
or
inc
js
lods
loopne
xchg
imul
movsl
xor
clc
mov
fs
push
loopne
dec
fimull
gs
cld
mov
jne
mov
lcall
ja
stos
pushl
movl
mov
lea
jmp
cmp
jmp
and
stc
call
test
mov
call
xchg
xchg
into
or
sarb
stc
sbb
push
xchg
mov
inc
std
or
dec
dec
mov
push
mov
insb
clc
sub
aas
lock
cmp
test
cmp
fisttpll
mov
mov
jle
adc
dec
pop
inc
mov
mov
xor
xchg
mov
test
dec
rclb
inc
in
andb
mov
sbb
cmc
pusha
movzwl
lea
lea
not
jmp
lea
jl
jae
call
lret
aam
or
rcl
bound
mov
dec
adcb
jns,pt
pop
dec
aam
lcall
mov
repz
fsts
xor
inc
or
rol
in
pop
pop
cmc
ds
outsb
rolb
loop
mov
lock
xor
xchg
ficomps
ds
mov
jns
outsl
cmp
xor
push
mov
mov
mov
xchg
jae
iret
jae
arpl
xor
ficomps
scas
inc
jbe
dec
mov
xchg
xor
call
mov
push
cwtl
jno
cli
push
inc
pop
jb
fsubrp
sbb
jp,pt
push
in
adcb
or
jno
sbb
dec
push
fistl
sbb
mov
mov
xchg
aaa
mov
scas
nop
scas
mov
xorb
cmp
sbb
add
clc
mov
push
cmp
pusha
jg
dec
jns
xor
cmpsl
mov
insb
insb
insb
cmp
push
in
and
movsl
mov
loop
add
enter
xchg
jmp
jno
push
pop
sbb
mov
xor
xchg
lahf
xlat
add
aas
addr16
daa
sub
lea
icebp
push
stos
mov
aam
loope
sub
cltd
mov
or
pusha
cmc
push
mov
aaa
adc
inc
aam
out
test
mov
jb
xor
jae
add
mov
dec
push
xchg
push
xchg
add
clc
pop
jns
fwait
sbb
stos
mov
xchg
pop
push
sbb
inc
ficompl
lret
mov
dec
mov
test
sub
pop
push
popf
jno
popf
outsb
pop
ss
jb
pop
pop
xor
pop
outsb
data16
popf
inc
pop
popf
xor
popf
jb
pop
push
inc
outsb
popf
push
inc
pop
dec
popf
push
inc
push
data16
popf
jno
sbb
jnp
push
pusha
lea
call
push
adc
lea
jns
push
lea
jae
call
push
push
inc
push
xor
cs
insb
add
inc
and
lret
into
je
pushf
pushf
pushf
call
xchg
xchg
sahf
repz
and
xor
lods
mov
std
xor
lahf
filds
jecxz
dec
aad
mov
ds
loopne
addr16
jmp
xchg
cmovs
in
test
icebp
jge
mov
sub
inc
cmp
js
jle
mov
mov
cwtl
xor
mov
test
cltd
xor
imul
insl
mov
adc
push
test
test
fldl
sbb
insb
mov
jp
pop
and
andb
xor
mov
add
cltd
pop
jae
pop
cmp
cmpsb
cmc
xchg
je
adc
cmp
dec
aaa
add
cli
inc
cmp
mov
rolb
push
adc
clc
mov
mov
fsubrs
test
pop
mov
enter
loop
pushf
mov
pusha
call
cmp
pushf
call
add
inc
jb
addr16
arpl
jo
inc
imul
and
jne
and
shld
sar
mov
clc
cmc
add
jmp
btc
xchg
bswap
stc
call
mov
push
not
lods
bt
jmp
in
loope
adcl
mov
leave
add
inc
mov
icebp
dec
dec
jle
cmpb
inc
jb
adc
outsl
xchg
add
lods
jo
mov
mov
rcr
pop
adc
stc
test
cmp
aaa
lds
aaa
pop
fisttps
dec
int
xchg
push
and
add
fcoml
dec
in
xchg
and
je
cmpsl
jb
sbb
rcr
cmc
sbb
push
pop
das
push
xchg
lahf
mov
push
repz
ss
xchg
mov
ror
test
mov
inc
pop
in
clc
mov
xchg
add
lahf
popa
arpl
rcr
cli
dec
dec
jle
fidivl
test
mov
xchg
lahf
dec
dec
fimuls
dec
dec
imul
fisubs
jle
ficoml
xchg
sbb
cmpsl
jae
jns
cmp
mov
bt
cmpb
call
and
adc
push
xorb
push
mov
in
sbb
test
mov
fdivrp
lret
lcallw
cmp
or
xor
push
cmp
adc
or
cmp
loope
cmc
sbb
cmc
push
cmp
aad
sbb
mov
jno
mov
repnz
mov
mov
rclb
mov
movaps
imul
cmp
imul
push
add
pop
push
pop
mov
adcl
nop
dec
inc
lret
pop
add
aas
lcall
fisubl
mov
cli
jmp
js
push
mov
lock
push
or
aam
jo
lcall
mov
jnp
dec
outsl
add
fdiv
adc
test
dec
rorl
test
sar
mov
adc
in
cmp
loopne
and
mov
gs
cli
mov
mov
and
aam
stc
out
ret
xchg
es
mov
lods
push
pop
pop
mov
pop
mov
push
ret
es
mov
pop
cmp
imul
xchg
and
out
sti
arpl
ds
mov
addr16
aam
mov
adc
add
dec
lock
xor
cld
out
cmp
das
push
loop
xchg
push
mov
or
into
rol
mov
loop
sub
sub
xor
clc
push
add
adc
jno
and
dec
stc
push
mov
mov
push
test
stos
movsw
loope
inc
imul
push
mov
fiadds
inc
hlt
add
mov
mov
push
sbb
cmp
movsb
and
mov
rorl
mov
sahf
pop
xchg
dec
adc
pop
orb
inc
fnsave
lock
es
ja
popf
adcl
jo
mov
add
pusha
mov
inc
lods
lock
xor
js
cmc
call
fadds
push
int
and
mov
iret
and
jb
or
movsb
sbb
pop
out
imul
push
cld
mov
ret
in
insb
push
fwait
stos
jp
xchg
mov
dec
nop
out
roll
inc
sub
fs
add
sub
icebp
std
test
rorb
out
mov
ret
aas
jnp
adc
sti
inc
mov
cmp
lds
aad
push
adc
push
fimuls
stc
out
cli
mov
push
inc
mov
mov
mov
es
fcoms
inc
popa
cmpb
lahf
jno
jmp
push
mov
mov
clc
out
popl
nop
out
cmp
pushl
icebp
add
cs
pop
iret
xchg
adc
arpl
mov
mov
push
in
sbb
sub
scas
and
enter
sub
fstpl
nop
mov
xor
xchg
subl
push
push
xchg
or
stos
jl
daa
add
test
std
ljmp
dec
push
insb
and
ffreep
cld
sbb
adc
daa
push
out
std
xchg
test
addr16
inc
sahf
mov
jbe
cmpsb
inc
add
ds
jmp
mov
shlb
out
mov
pop
je
nop
mov
add
mov
dec
ja
or
ljmp
in
pop
push
aas
stos
add
mov
cli
rolb
sbb
insb
aaa
sbb
jg
inc
movsb
pop
cli
sbb
das
loope
leave
gs
add
jo
pop
roll
fwait
dec
xchg
pop
es
jp
xchg
mov
sbb
into
cmpb
pop
dec
jbe
mov
add
sub
jbe
mov
xor
xor
jp
addr16
lahf
push
into
fwait
jae
jne
mov
push
jbe
mov
sbb
cmpb
mov
cmp
inc
and
push
in
mov
mov
jbe
add
cmpb
mov
jnp
jbe
mov
jmp
jne
mov
stos
sahf
xor
jbe
mov
pop
sbb
cmpsl
jne
mov
js
out
sbb
mov
imul
pop
jbe
mov
push
jne
mov
imul
adc
mov
lods
mov
mov
xor
jnp
jne
mov
and
jns
jne
mov
insb
in
mov
jne
mov
push
in
mov
jbe
mov
adc
decb
fs
mov
scas
data16
xor
mov
inc
lret
push
jbe
mov
clc
loop
add
jbe
mov
in
das
daa
insb
jbe
mov
fwait
xchg
fdivrs
jne
mov
and
lcall
sub
jae
sbb
adc
mov
scas
lods
cmp
repz
stos
addr16
and
insb
jbe
mov
push
push
xor
mov
fisubs
mov
repz
mov
push
stos
dec
scas
pop
jbe
mov
movsb
pushf
pop
jl
jbe
mov
test
outsl
ja
jp
xchg
push
push
mov
insb
ror
shlb
ljmp
lods
dec
mov
xor
movsb
push
jo
or
jnp
inc
push
jae
pop
fcmovnb
test
mov
ror
xlat
pushf
adc
lahf
out
push
ljmp
inc
scas
push
and
ds
hlt
lcall
jge
inc
push
push
mov
or
mov
nop
arpl
add
push
popa
repnz
je
xchg
cmpsb
int
and
hlt
push
cvtdq2ps
iret
test
add
dec
mov
aaa
jge
aam
push
pop
xchg
jge
mov
push
mov
or
pushl
lea
jae
push
pushl
mov
xor
push
pushf
lea
call
push
push
jmp
jmp
cmp
pusha
jmp
cmp
cltd
sub
idivl
imul
pop
dec
push
adc
xchg
sub
sti
sbb
imul
mov
sahf
mov
jg
xor
clc
das
rcr
mov
int
lcall
add
and
aaa
push
clc
das
cmpb
ss
inc
cmp
pop
ret
rcll
test
mov
cli
out
mov
std
movsl
push
jmp
add
mov
adc
mov
pop
stos
mov
pop
imul
xor
sbb
call
add
mov
mov
cmp
inc
jge
lret
cmc
test
movb
shlb
inc
es
or
xor
fucomip
xchg
pop
push
cmp
movsl
cltd
into
and
or
mov
cwtl
push
pop
mov
mov
xchg
xlat
rorb
cmpsl
call
in
mov
sub
stc
movzbw
sub
mov
stc
jmp
call
dec
adc
dec
or
sub
pop
and
mov
aad
and
lds
xor
sub
sub
dec
pusha
cmp
in
adc
mov
inc
push
jg
mov
gs
rcl
cmp
int
popa
jno
xchg
enter
ss
loopne
ljmp
jmp
insb
jl
push
or
insb
in
jl
in
cmpsl
push
mov
shl
not
setnp
lods
mov
ror
jmp
pusha
lea
jb
cmc
cmc
cmp
call
movsb
insb
jo
mov
cwtl
in
or
daa
cmp
outsl
jg
fistl
xor
inc
ja
vmwrite
testl
xor
subb
inc
iret
mov
shrl
jbe
testb
cmpsl
mov
jmp
mov
and
cmp
xchg
and
cmp
mov
jns
sub
push
hlt
fadds
mov
xor
orb
fimuls
mov
add
shll
sub
fistl
dec
or
stos
imul
mov
lret
xor
push
mov
in
mov
xor
das
xor
push
ret
inc
aaa
jmp
cmp
out
ljmp
iret
and
mov
push
andb
xor
out
push
lea
or
scas
pusha
mov
inc
inc
xor
movsl
cmp
sub
dec
add
jbe
sti
lret
popa
nop
mov
pop
ljmp
xor
fbld
mov
and
cmp
test
dec
test
mov
adc
push
sub
rcll
push
sub
inc
and
cs
fcomp
and
pop
sbb
and
jnp
ret
xor
in
lea
lret
leave
cmc
pop
in
sbb
pop
sbb
sub
jge
aaa
cmp
cmpsb
shll
test
in
xor
push
mov
cmp
sub
ds
or
into
xchg
popa
dec
or
pusha
push
mov
lea
je
aam
bts
aad
sub
shl
jmp
add
inc
jb
popa
je
push
je
je
jae
imul
cld
mov
loopne
xchg
je
loopne
xor
mov
mov
lret
hlt
sbbb
cmp
adc
mov
outsb
popf
mov
xchg
lcall
or
add
or
push
jecxz
pop
dec
dec
lds
jmp
and
push
sbbl
sub
inc
push
pop
cmp
pop
xor
add
cld
sbb
scas
inc
mov
add
ret
dec
mov
pop
sbb
sbb
xchg
mov
push
adc
aam
lods
cmp
ret
jl
cs
add
out
mov
jnp
lret
arpl
fwait
pop
roll
xlat
mov
adc
jmp
add
jb
shr
shld
shl
inc
mov
push
bts
shld
sar
add
or
btr
add
cmc
sub
mov
pusha
shr
cmp
cmp
pushf
lea
je
test
cmp
cmp
jmp
call
call
push
push
mov
jmp
sar
sub
dec
mov
adc
movsb
movsb
lret
inc
push
stos
mov
sbb
ljmp
sub
adc
cwtl
mov
or
les
push
out
sub
les
inc
or
dec
pop
push
sub
inc
repz
into
out
mov
push
mov
mov
into
pop
mov
pop
and
dec
pop
adc
push
adc
in
adc
dec
popa
xchg
mov
in
ljmpw
pop
adc
push
cmc
and
repnz
mov
mov
inc
testl
xor
lods
fildll
push
sarl
stos
fldenv
xchg
rclb
xchg
in
mov
inc
and
iret
or
cs
and
mov
push
push
out
mov
cwtl
cmp
push
add
mov
ret
push
int3
hlt
xor
xchg
mov
cmp
xchg
mov
lods
fmuls
push
mov
icebp
jo
sbb
jbe
scas
addl
mov
jecxz
ret
push
imul
push
aaa
push
push
test
mov
jmp
in
out
mov
icebp
mov
fnstcw
lea
cmpsl
gs
inc
das
ror
jmp
push
jb
mov
pop
pop
daa
and
xchg
lret
pop
mov
push
add
mov
mov
cmp
insl
jns
jno
pop
pop
mov
test
inc
push
lret
add
pop
sub
add
xchg
push
jns
sub
shrl
and
dec
push
pop
mov
add
lods
add
mov
push
div
xchg
ret
inc
sahf
push
and
repz
lods
andb
pushf
cltd
enter
mov
lcall
repnz
adc
loopne
test
outsl
movsl
idivb
repnz
out
sub
fstps
sub
add
sub
dec
add
and
pop
xchg
and
pop
scas
adcb
xorl
aad
adc
sub
and
cmp
push
out
sub
jo
hlt
xor
ljmp
aad
repz
dec
xchg
dec
add
xlat
xlat
clc
pushf
insl
test
mov
outsl
fildll
jg
pop
es
arpl
hlt
add
in
lret
pop
sbb
in
mov
adcl
cmc
lods
push
jne
push
pop
jnp
xor
repz
mov
xor
negl
inc
adc
cmp
dec
add
add
inc
mov
lock
jecxz
sub
rcrb
jge
out
repz
scas
jp
mov
loope
add
roll
shl
fwait
push
xchg
lods
mov
jle
pop
dec
dec
xchg
cmp
inc
hlt
xor
dec
xorb
fdiv
mov
sub
cmpsl
jmp
stc
and
push
push
jo
jp
jle
test
and
repz
jle
sub
les
int3
pop
clc
shlb
jmp
cmc
fcmovnbe
or
js
xor
gs
cmpsb
mov
sub
or
push
imulb
push
jb
frstor
mov
mov
mov
jb
xchg
das
outsb
outsb
shlb
mov
dec
mov
xchg
gs
ror
or
repnz
popf
xor
inc
adc
jnp
xor
mov
lock
xor
xchg
cmp
xchg
push
sahf
add
mov
adc
dec
pop
std
mov
test
sbb
shrl
leave
lods
andb
jl
inc
or
imul
add
and
sbb
ss
or
les
mov
and
shlb
jl
sbb
xchg
xchg
xchg
mov
mov
into
and
sbb
repz
or
shr
jmp
dec
dec
outsb
adc
add
aad
movsl
push
jae
xor
push
push
jge
out
cmc
cmp
pop
std
pop
testl
cmc
test
or
fbstp
setge
ja
cwtl
ds
or
aas
testl
adc
and
loop
ret
pushf
hlt
repnz
mov
mov
lods
fdivl
cmpb
jp
in
movsl
in
mov
bound
rcl
adc
js
leave
xor
test
jne
push
sbb
js
sbb
inc
dec
adcl
inc
cmp
daa
xor
mov
jmp
or
or
xor
mov
mov
inc
cmp
pop
jg
mov
dec
xchg
xchg
cs
jo
adc
sub
and
xor
jp
dec
fwait
mov
sti
cs
in
mov
lods
fmull
nop
adc
aam
mov
sbb
scas
leave
decb
xchg
hlt
hlt
adc
and
jb
pop
xor
push
adc
mov
stc
and
xchg
ret
jnp
pusha
xchg
std
add
mov
into
jp
inc
inc
pop
jb
cld
pop
adc
dec
pop
jne
test
pusha
orb
inc
dec
lcall
lret
data16
out
call
jmp
stos
es
push
mov
enter
cltd
cmp
in
stc
sub
clc
mov
push
or
fbstp
mov
mov
fdiv
mov
pop
into
into
out
xchg
testb
mov
add
mov
lods
popa
out
fwait
push
and
jmp
mov
push
lea
out
push
xor
mov
add
lds
mov
sub
cltd
mov
insl
jo
mov
mov
sbb
lock
mov
insl
add
fisttpl
xchg
int
mov
cld
sbb
mov
repz
mov
xchg
and
in
mov
insb
push
mov
rorl
idiv
xor
mov
scas
mov
mov
out
outsb
sbb
rcr
cli
xchg
sub
inc
push
sbb
jecxz
popf
gs
cmp
jge
movsb
andb
sub
fdivrl
add
popf
and
rcl
xor
push
cmp
pop
push
pop
aaa
in
pop
xchg
inc
sti
mov
xor
je
mov
sbb
mov
sbb
xchg
inc
push
mov
push
repnz
xchg
xorl
test
adc
subl
ja
ret
cld
pushf
fldt
int3
std
pop
pop
shr
andb
mov
xchg
int3
mov
das
aaa
insl
adc
dec
and
jnp
xchg
roll
inc
xchg
mov
xor
icebp
pop
push
xchg
xchg
sbb
gs
fwait
aaa
rorl
sub
push
outsb
sahf
test
sbb
xchg
rcrl
sahf
xchg
das
push
lahf
lods
dec
xlat
imul
adc
pushf
mov
call
xlat
adc
and
or
into
arpl
mov
negb
mov
and
pop
and
cmp
and
aad
mov
mov
cwtl
les
mov
sub
jg
xor
adc
int3
rolb
lock
jle
mov
sub
push
shrb
sbb
adc
fidivl
and
faddl
or
mov
cld
ret
in
pop
jecxz
movsl
dec
pop
sbb
adc
repz
fcmove
out
mov
xorb
dec
sbb
add
pop
pop
sub
movl
dec
insl
add
xor
sahf
stos
out
pop
xchg
iret
adc
mov
cmc
ficompl
adcl
sar
pop
rorb
xor
out
pop
pop
ja
adc
movsb
shlb
jp
in
int3
fwait
jmp
mov
ret
jne
lcall
aas
in
mov
gs
pop
push
mov
int3
sbb
cmp
out
mov
jnp
sbb
sbb
sub
mov
mov
jmp
sbb
jae
repz
and
sbb
mov
shrb
adc
cmp
push
dec
jle
outsb
movsl
out
inc
lods
xchg
mov
xchg
dec
lahf
icebp
fstl
cmpsl
ret
pop
rep
stos
push
or
insb
mov
jmp
lods
in
sti
pop
sub
add
in
jecxz
mov
dec
mov
ljmp
int3
add
add
imul
loope
xchg
jge
xor
adc
dec
pop
cmpb
cmp
xor
mov
mov
das
lret
or
mov
jecxz
and
sahf
xor
js
jo
fsubr
pop
jmp
cmovae
mov
push
inc
popa
xor
fbstp
xor
scas
sar
ret
out
pop
push
cli
fildl
dec
in
sub
test
xchg
push
dec
stos
sbb
dec
repnz
mov
lret
pop
loopne
cwtl
int
pop
sar
xchg
mov
in
push
xor
stc
subl
ret
imul
mov
orb
hlt
shlb
mov
xchg
sub
sub
and
cmp
hlt
test
out
cld
enter
test
and
sub
out
jae
mov
test
cmp
sbb
adc
fdivrl
ret
fistpll
outsb
iret
add
jne
sub
loop
pop
pop
push
jns
inc
push
insb
add
add
push
bound
shlb
vpaddsw
stc
jnp
lods
ror
ljmp
or
aas
push
out
sub
or
sbb
xor
scas
xor
xor
pop
inc
sarl
sub
cmp
mov
shlb
div
lret
cmp
movl
push
pop
xor
push
xor
cmp
xchg
shll
data16
add
pop
pusha
pop
mov
mov
xlat
adc
repnz
sub
jp
lock
adc
or
inc
add
fs
sbb
and
add
jge
movl
xchg
loop
shll
jle
test
xlat
pop
adc
in
add
jl
pop
mov
push
pop
xchg
inc
xlat
shll
or
enter
xchg
mov
frstor
jmp
mov
jge,pt
mov
fstl
imul
repz
leave
clc
adc
fisttpll
add
mov
inc
rep
and
jns
mov
mov
out
pop
and
fisttpl
jne
pop
aaa
xchg
dec
push
xor
push
mov
adc
fcomi
or
xor
sbb
cmpl
push
push
or
addb
out
sbb
pop
jg
mov
roll
xor
dec
jb
movb
cmpsl
jecxz
je
push
scas
movsl
sub
pop
outsl
daa
pop
in
and
jg
dec
imul
push
jle
push
in
add
cmc
and
push
pusha
pushf
push
or
int3
mov
mov
and
or
dec
pop
jg
rcll
sub
pop
mov
sahf
fldenv
rcr
adc
mov
insl
ss
lods
fsubs
pop
jno
test
popf
rcrl
cmc
scas
lods
std
popf
stos
addr16
cltd
sarb
xor
pop
mov
xorb
xor
das
push
pusha
pushf
pop
out
xor
sub
xor
sub
sbb
pop
adc
push
iret
or
mov
mov
lret
mov
push
rol
mov
mov
jge
lds
or
and
jg
adc
mov
insl
jae
mov
in
loopne
mov
aas
or
ror
stos
rcrl
push
xadd
xchg
xor
cmp
push
and
fcoml
jg
sub
outsb
enter
sti
adc
das
repnz
or
cmp
movnti
aas
das
ja
loopne
icebp
or
xchg
fcomps
addb
jno
hlt
mov
jbe
fistpll
rcrl
cmp
fimuls
faddl
xor
jle
outsb
or
xor
dec
add
fwait
test
mov
js
pop
push
cltd
leave
xlat
jecxz
lret
jg
shll
repz
jecxz
cld
xor
xor
cld
sbb
shlb
mov
icebp
int
rclb
and
push
mov
aad
add
out
pop
add
cmp
pop
cmp
imul
mov
ret
mov
mov
in
add
adc
pop
mov
dec
repnz
and
dec
arpl
dec
push
repz
fcoml
mov
inc
test
mov
inc
out
out
and
out
bt
pusha
orb
add
or
pop
rclb
xor
add
rcll
and
js
sub
push
mov
popa
dec
dec
push
adc
xchg
xchg
mov
and
sbb
into
jb
mov
pop
in
aaa
inc
popa
pop
xchg
lea
movsl
insb
lea
jecxz
inc
test
mov
mov
int
lds
subl
ret
iret
repz
inc
xchg
popa
sub
or
jmp
pop
mov
add
jnp
mov
mov
jno
mov
iret
outsl
adc
repz
leave
std
sub
popa
imul
pop
scas
call
inc
je
cld
mov
lcall
ss
jnp
arpl
push
pop
mov
sarb
jp
fwait
aas
rcrl
test
cs
or
mov
out
popf
or
into
sahf
stos
or
cltd
test
test
adc
lahf
inc
jp
shll
cmovle
push
xchg
dec
sti
lods
sub
fwait
cwtl
sub
sub
mov
out
lods
add
mov
sub
mov
inc
sti
mov
lods
fisttpl
pusha
nop
sahf
ficoml
or
inc
jbe
ljmp
inc
fiadds
jg
sub
inc
or
dec
jl
lods
imul
icebp
cld
dec
or
sbb
xor
pop
sbb
sbb
adc
mov
cmc
jae
cmp
outsl
push
cmpb
push
fadd
jp
push
dec
dec
jle
cwtl
aam
inc
jg
inc
aas
adc
andl
imulb
xor
inc
cmpsb
cmp
adc
jl
sbb
clc
sbb
cli
xor
cmp
je
jl
cmpl
loope
pop
xor
comiss
xor
jecxz
push
leave
add
cmp
mov
std
aam
xchg
mov
xor
inc
pop
decb
fists
xchg
push
sbb
push
and
dec
aas
notl
ss
or
add
inc
push
mov
sub
daa
mov
and
int
xchg
mov
add
sbb
and
cmp
out
sub
and
sub
dec
pop
xor
inc
mov
pop
loopne
cmc
and
insb
nop
xor
lcall
lahf
pushf
cmp
pop
and
xchg
cld
xor
dec
out
mov
jmp
stos
andl
push
fists
push
out
xchg
pop
push
sub
sub
pop
daa
pop
jns
add
lea
mov
stc
popf
aam
lea
loopne
xchg
mov
insl
xchg
xchg
mov
jl
stos
stos
int3
clc
sub
outsl
xchg
push
sbb
ret
mov
mov
mov
jmp
sub
adc
mov
scas
sbb
mov
xor
repnz
addr16
xor
cmpsb
nop
in
pushf
mov
and
lmsw
jmp
cmp
jecxz
jns
mov
jmp
add
stos
mov
mov
push
add
pop
vpmadcsswd
xchg
pop
sahf
js
mov
ficoml
jns
in
ja
jmp
mov
shl
mov
mov
pop
push
dec
add
into
out
inc
add
scas
mov
cltd
int
pop
icebp
push
sti
in
es
mov
ja
jae
fstl
test
xchg
xchg
in
sub
mov
pop
mov
lret
sbb
pop
out
test
in
pop
fists
pop
cmp
je
sahf
cmp
jl
sbb
pusha
xor
dec
popa
add
call
decb
movsl
mov
push
shl
sahf
addr16
dec
repz
mov
mov
iret
mov
stos
ret
pop
divl
orl
data16
in
cmc
sti
sub
rorl
popa
xchg
int
and
popf
pop
or
movsb
insl
mov
mov
test
push
ja
sub
scas
data16
jo
ja
sbb
push
fildll
pop
leave
je
call
jmp
es
adc
mov
or
or
into
mov
fimull
or
jno
cltd
daa
xor
push
cmp
cmpsb
fstpl
inc
js
and
andb
lods
lret
or
push
mov
out
cmpsb
mov
mov
sbb
bound
and
divb
add
xor
data16
mov
fmull
lcall
aas
jnp
mov
pop
setge
mov
add
sub
test
push
fsubs
dec
push
inc
das
jecxz
mov
sub
in
fcomp
notb
adc
out
dec
push
pop
out
mov
inc
lock
cmpb
fdivs
in
dec
jg
rorl
sbb
into
incb
mov
mov
fsts
mov
xchg
aaa
jbe
roll
jg
sub
push
out
jge
cmc
mov
pushf
nop
fstl
bound
scas
in
add
cmp
lret
out
in
test
cmp
push
push
daa
lret
cmp
in
imul
pushl
std
test
cmpb
sti
icebp
pop
xor
xor
test
push
mov
rcr
jecxz
xchg
stos
jae
mov
adc
ret
stos
xchg
shll
and
push
add
fscale
mov
popf
nop
pop
fisubl
loopne
cwtl
pop
pop
js
mov
sbb
mov
push
pop
loopne
mov
mov
repz
out
lret
or
adc
pop
imul
dec
jle
fnsave
lods
cmpl
popf
xor
xor
fsubr
add
cmp
gs
mov
sbb
es
xchg
jge
rclb
mov
inc
js
mov
inc
sub
imul
sbb
mov
push
lods
jp
shr
mov
jnp
sbb
xchg
xchg
ja
mov
cmp
pop
jne
jo
into
mov
or
imul
xchg
out
rcll
addl
push
jl
push
data16
ljmp
mov
mov
mov
test
mov
sahf
sahf
cmpsb
rcl
fcomi
adc
test
and
lret
lcall
nop
sahf
stos
into
jb
xchg
movsb
shl
repnz
clc
dec
call
dec
dec
add
imul
repnz
out
adc
mov
mov
in
jno
loop
sub
add
sbb
js
fisubrl
cmpsl
jae
jge
sub
pop
push
dec
sbb
jae
ret
xchg
loope
sub
aaa
jp
stos
jnp
pmaxub
out
test
jnp
lods
ror
mov
pop
div
pop
stos
xor
or
sarb
mov
fwait
mov
repz
xor
in
nop
iret
roll
push
and
lret
xor
push
cmp
sar
outsb
xchg
lock
mov
jp
inc
cmovae
jge
push
push
mov
xor
push
mov
and
inc
loope
sbb
rorl
inc
fwait
aaa
adc
jbe
inc
pop
sti
cmp
add
call
dec
inc
push
xchg
dec
fstpt
pop
sub
xchg
mov
and
mov
clc
add
mov
adc
add
aam
pmuludq
adc
sbb
pop
pop
lea
sbb
cmp
dec
and
push
xor
inc
jecxz
fwait
inc
dec
sub
sbb
or
jmp
cmp
and
and
adc
in
or
les
sbb
inc
cli
cmpb
jns
ljmp
clc
sub
mov
stos
mov
lret
inc
repnz
stos
out
cmp
lahf
xor
pop
adc
mov
es
das
inc
imul
xlat
and
or
and
push
cmpsb
stos
lret
bound
or
test
xchg
mov
es
and
lea
ljmp
xchg
test
mov
pop
push
cmp
scas
cld
es
lret
jno
sub
in
sub
les
icebp
outsb
adc
jg
jns
rclb
fucom
adc
dec
fstpl
cltd
dec
mov
std
rol
cmp
test
pushf
xor
push
call
loope
cmpsl
iret
pop
movsb
cld
xchg
sbb
es
inc
dec
jp
sahf
into
sub
sub
cmp
dec
adc
cwtl
mov
faddl
scas
bound
lods
jecxz
out
mov
imul
popf
or
pavgb
mov
insb
inc
push
lock
stos
mov
enter
inc
negl
jnp
ja
scas
in
lret
xchg
out
jae
xchg
scas
cmp
mov
mov
ljmp
or
jb
xchg
cs
stos
inc
out
mov
cmp
decb
sub
int3
shrb
mov
in
or
mov
rorl
mov
push
push
cmp
icebp
cmc
out
push
jg
push
mov
mulb
repz
pop
ret
leave
iret
call
fsub
lds
clc
inc
xchg
jecxz
stc
mov
rclb
mov
jmp
sub
push
cmpsb
xor
dec
mov
jp
mov
dec
dec
ror
mov
bsr
and
bswap
mov
stc
rcr
and
not
shr
pusha
shr
mov
bt
push
or
mov
call
pusha
pushfw
popw
pushf
bt
push
mov
bt
ror
cmp
stc
bt
cmc
sub
pushl
neg
call
push
push
roll
enter
cs
fldl
jmp
mov
lea
add
imul
imul
nop
push
sub
out
jnp
dec
arpl
imul
aas
rcll
mov
lcall
daa
and
mov
inc
sbb
popa
in
mov
adc
incl
xchg
fldcw
sbb
pop
push
or
test
xchg
lret
push
imul
cmp
or
pushf
popf
lds
out
std
sub
clc
pusha
dec
jp
rep
mov
push
outsl
sub
push
jle
adc
icebp
jns
jno
mov
inc
mov
cmp
and
rcl
js
inc
shrl
mov
cld
mull
scas
inc
jmp
or
push
or
dec
add
and
mov
push
lea
jae
cmc
rcr
call
call
cmc
sub
jl
bt
pushf
cmp
pushf
movw
lea
ja
jmp
pushf
pusha
rep
movzbw
bswap
lea
mov
mov
mov
push
push
lea
jmp
test
loope
mov
sbb
dec
bound
push
es
mov
ljmp
xchg
in
out
mov
jne
lods
gs
loope
or
in
push
enter
sbb
nop
dec
sbb
or
das
cmp
mov
pop
test
clc
mov
mov
nop
mov
outsl
neg
rcl
not
rol
shl
setge
and
xor
mov
call
call
lea
je
call
rol
mov
call
outsb
mov
imul
call
pop
nop
fmull
pop
adc
pop
mov
shl
mov
add
jno
out
icebp
cmpsl
mov
rorb
dec
iret
in
repz
pop
xchg
dec
bnd
cli
or
push
nop
int
mov
bound
ret
jle
sub
pop
or
pop
ss
clc
nop
mov
sbb
sbb
cmp
dec
repz
dec
or
cmpsl
dec
sbb
rcll
loopne
nop
ret
pop
rcl
push
ror
pushf
xchg
shr
movzbw
shl
btr
push
jmp
repnz
pop
pop
out
sub
test
adc
jae
mov
push
shrl
and
dec
mov
pop
imul
mov
push
jle
pop
aas
pop
gs
pop
pop
adc
stos
xchg
cmp
pop
dec
aad
cwtl
popaw
sub
or
or
fistps
sti
add
negb
ret
stos
dec
loop
sbb
push
adc
dec
cmp
lea
jne
jmp
add
jmp
push
movzbl
lea
jmp
jne
pushf
call
cmc
cmc
or
pushf
jmp
imul
pusha
pusha
bt
add
push
mov
lea
jmp
add
inc
gs
imul
push
add
add
ret
xlat
jecxz
pop
dec
xchg
jg
test
es
mov
lret
lcall
sbb
mov
ret
add
and
into
add
adc
or
inc
hlt
fsub
sti
jne
jbe
xchg
inc
push
subl
popf
push
and
jle
cmp
shll
lcall
subb
pop
jne
cmp
and
outsb
mov
clc
jmp
insb
andb
jo
rorb
enter
mov
daa
call
mov
pusha
pushl
pushf
pushf
lea
jmp
clc
pusha
sub
bt
cmp
cmc
xor
cmp
cmp
cmc
add
cmc
test
bt
mov
sub
pushl
movw
jmp
rcr
bts
shld
movsbw
mov
not
mov
test
call
stc
cmc
mov
jmp
jmp
ror
test
bt
bt
not
test
pushf
cmp
add
clc
stc
sub
jo
sub
jo
pushf
pusha
mov
pusha
lea
jmp
mov
mov
pusha
pushf
pushl
lea
jmp
test
shrd
pushf
jmp
mov
movl
lea
jmp
push
call
jmp
mov
movb
lea
jne
jmp
mov
push
mov
pusha
jmp
pushf
mov
pushf
pushf
pushf
lea
jmp
repz
popl
call
inc
pop
and
neg
test
jmp
lea
jne
test
jmp
pusha
pushl
pushf
mov
pushf
pushf
mov
pushf
movw
movb
repz
popl
mov
movw
jmp
add
push
call
shl
mov
bt
clc
add
pusha
pusha
mov
pushf
popl
jmp
jmp
mov
dec
stc
rol
mov
or
mov
pusha
cmp
pusha
push
sub
bt
pushl
cmc
shr
pushf
pushf
call
add
call
add
bswap
call
shl
mov
cmp
test
sub
stc
bt
cmc
jmp
call
das
mov
bts
rcr
mov
cmc
clc
cmc
call
pushf
pushf
popl
call
jmp
clc
pusha
rol
jmp
or
and
shl
mov
movb
add
pushf
pusha
mov
push
mov
mov
lea
jmp
xchg
mov
ror
stc
mov
test
clc
sub
call
pusha
movl
mov
push
mov
pushf
jmp
jmp
cmc
btr
rcr
inc
mov
shr
mov
call
call
mov
pushl
push
pushl
lea
jmp
bt
pushl
popl
cmc
stc
mov
push
add
push
pushl
popf
push
push
lea
jmp
pusha
call
push
mov
rcr
pusha
bsf
mov
pusha
pushl
push
not
movb
pushf
clc
not
stc
stc
cmc
test
sub
call
movw
jmp
mov
jmp
xchg
jmp
mov
pushf
repz
popl
pushf
mov
movb
pusha
pushl
mov
lea
jmp
test
pushl
popf
movb
lea
jmp
pusha
pusha
movb
mov
mov
mov
push
mov
mov
push
lea
jmp
bsf
bswap
mov
stc
stc
sub
push
push
cmp
pushf
add
mov
pushf
pushf
popl
call
bt
cmp
call
mov
pushf
pushl
ret
cmc
jg
clc
clc
add
pusha
shld
movl
jmp
shr
mov
rol
shld
mov
clc
stc
std
pushl
popf
movb
push
push
pushf
lea
jmp
cld
mov
pushf
cld
push
call
push
pushf
add
stc
bt
call
pop
setb
pop
pusha
pusha
movl
movw
pushl
ret
mov
lea
jo
push
mov
pusha
pusha
pushf
push
lea
jmp
jmp
jmp
adc
cmp
sbb
mov
push
clc
test
add
push
pusha
pushf
mov
lea
jmp
cmc
and
pushf
pushf
popl
call
mov
movb
mov
mov
lea
jmp
pushf
popl
call
pushl
popl
mov
pushl
mov
lea
jmp
test
shl
mov
lea
neg
add
shld
bsf
sub
shr
call
mov
push
push
pushf
popl
pushl
movb
jmp
pusha
mov
push
pushf
jmp
cmc
sub
pusha
pushf
call
push
mov
pushl
pushf
push
call
mov
pushl
popf
movb
movb
movw
lea
jmp
pushf
popl
movw
pushl
popl
movw
movb
mov
mov
lea
jmp
repz
popl
mov
pushf
push
mov
mov
pushf
movb
pushf
lea
jmp
pushf
lea
mov
cmc
pushf
call
repz
popl
mov
mov
mov
mov
pushf
pushl
mov
lea
jmp
test
mov
test
sub
not
bswap
mov
jmp
mov
neg
add
mov
cmp
add
pusha
movl
push
mov
movb
movb
lea
jmp
repz
popl
setge
xchg
lea
bswap
movsbw
push
xchg
dec
push
xchg
pushf
dec
inc
mov
push
not
dec
xchg
dec
call
pushf
pushf
mov
pushf
pushf
jmp
push
pusha
mov
push
push
jmp
pusha
repz
popl
pushf
mov
mov
push
lea
jmp
mov
pushf
mov
jmp
mov
pushf
pushf
jmp
call
sbb
aam
mov
cmp
dec
sets
mov
cmp
stc
jmp
cmc
pusha
sub
cmp
jmp
jmp
mov
mov
pusha
call
add
xadd
or
stc
mov
bsr
movzbw
bsr
clc
mov
sbb
bt
clc
mov
clc
pusha
push
sub
jle
add
call
mov
pushf
pushf
push
add
jmp
call
test
test
add
pusha
mov
pusha
pushf
pushf
pushf
lea
jmp
call
push
mov
pushl
mov
pushf
mov
movw
lea
jmp
push
pusha
sub
sete
and
or
lea
call
push
push
pushl
popl
pushl
lea
jmp
xor
or
movzbl
neg
and
bsr
stc
or
mov
stc
jmp
btr
add
xor
movzbl
pusha
mov
test
lea
call
xor
pusha
xchg
mov
mov
pushf
call
mov
call
aam
call
not
shld
add
pusha
bswap
push
pushf
lea
btr
sub
bts
mov
btc
mov
clc
dec
add
shl
bsr
not
pushf
mov
jmp
rep
cmc
mov
sar
or
clc
mov
pusha
cmp
stc
call
mov
movb
mov
jmp
pushf
movb
mov
jmp
call
lea
je
clc
sub
push
stc
clc
pusha
xchg
stc
pusha
mov
call
rep
clc
mov
shld
mov
clc
push
cld
pushl
popf
mov
movw
lea
jmp
mov
pusha
pushf
mov
push
lea
jmp
call
lea
lea
jl
pusha
std
push
mov
mov
mov
call
adc
sub
movzbl
cmp
add
bt
inc
shld
xor
btc
movzbl
ror
rol
btc
jge
not
shld
add
test
mov
movzbl
bt
mov
call
jmp
xchg
dec
call
cld
push
xchg
push
pusha
pop
bswap
mov
pusha
std
call
pushf
call
push
mov
movl
lea
jmp
shld
adc
bts
mov
call
mov
pushl
seto
mov
call
mov
pusha
pushf
push
lea
jmp
mov
pushf
lea
jmp
mov
movb
movb
mov
lea
jmp
push
push
pushl
popl
push
push
pushf
lea
jmp
pushf
ror
mov
call
call
push
jmp
lea
jne
push
test
call
push
inc
clc
lea
shrd
rol
neg
add
xor
shl
shl
and
rcl
pusha
bts
clc
mov
movl
sub
lea
je
pushf
pushf
pushf
mov
pushf
pusha
lea
jmp
lea
jbe
mov
pushf
pusha
pushf
mov
pushf
popl
jmp
push
jmp
stc
cmc
sub
call
pushf
mov
pushf
popl
pushf
pushf
call
jmp
lea
mov
mov
pusha
jmp
pusha
xor
jmp
add
stc
pushf
test
pushf
lea
pushf
cmp
call
pushf
dec
stc
add
jp
stc
xor
pusha
jmp
mov
jmp
pushf
mov
jmp
mov
jmp
mov
mov
not
jmp
call
pushf
pushl
popl
push
movw
lea
jmp
jmp
call
mov
jmp
cmp
xor
pushf
cmc
mov
lea
jle
bt
push
sub
call
jmp
pushf
pushf
popl
mov
jmp
btc
stc
mov
test
stc
cmc
cmc
shl
mov
clc
stc
test
shr
call
pushf
clc
ror
cmc
not
bt
add
cmc
sub
jmp
jmp
pusha
repz
popl
call
jmp
movb
push
pushl
popl
pushl
push
pushl
lea
jmp
push
mov
cld
call
push
xor
shrd
mov
bt
pushf
test
bswap
call
dec
mov
pushf
push
add
push
clc
call
pusha
pushf
popl
pushl
call
lea
jbe
pushf
mov
call
mov
push
call
pusha
pushl
movw
rep
sbb
push
ror
shld
mov
rcl
std
bt
bsr
mov
clc
jmp
pusha
mov
mov
mov
lea
jmp
xchg
not
jmp
pushf
popl
push
pushl
popl
pushf
lea
jmp
pusha
ror
dec
cmc
mov
not
rcl
jmp
push
mov
mov
push
push
mov
lea
jmp
push
call
pusha
pusha
pushl
jmp
cmp
mov
test
cmc
cmp
stc
sub
push
pushf
mov
mov
pusha
push
mov
lea
jmp
mov
call
shl
pushf
pushl
jmp
mov
pushl
pusha
lea
jmp
mov
pushf
pushl
movb
push
lea
jmp
jmp
pushl
popl
pushf
pushf
lea
jmp
mov
mov
movb
movb
cld
cld
jmp
cwtl
cwtl
seto
pusha
mov
push
mov
push
jmp
xor
ror
xor
inc
dec
movzbl
pusha
dec
ror
btr
neg
add
not
bswap
rol
sub
xor
xor
shr
shl
shl
add
rcr
mov
mov
movzbl
btr
movl
mov
clc
bt
call
sub
call
pushl
popf
pushf
push
pushl
lea
jmp
pusha
pushl
popl
mov
pushf
push
pushf
lea
jmp
pushl
popl
push
movb
mov
lea
jmp
pushf
pushf
push
mov
push
mov
jmp
or
movsbl
xadd
bsr
mov
pusha
add
jmp
pushf
call
add
jmp
push
push
pushf
popl
pusha
pushl
popl
pushf
movb
push
lea
jmp
and
jmp
push
shl
ror
mov
cmc
call
test
pusha
bt
xor
movb
xor
cmc
bt
mov
call
call
pushf
push
pushf
popl
push
movw
pushf
movb
pushl
popl
pushf
pushf
lea
jmp
jmp
repz
popl
mov
mov
mov
pushf
lea
jmp
pushf
cmp
cmp
pushf
sub
jmp
pushf
push
mov
jmp
clc
not
mov
pushf
and
bt
clc
cmp
pushf
push
jmp
mov
mov
lea
jmp
bts
xchg
shld
mov
call
push
pushf
mov
push
movb
push
lea
jmp
repz
popl
pusha
mov
lea
jle
push
pusha
lea
jmp
jmp
mov
pusha
movb
lea
jmp
mov
call
not
call
bt
sub
jmp
mov
bswap
mov
push
push
mov
lea
push
pusha
jmp
pushf
jmp
pusha
movb
mov
pusha
pushl
repz
popl
pushf
push
mov
mov
pushf
movb
push
lea
jmp
shl
neg
pushf
movzbl
pushf
cmc
push
add
jmp
mov
mov
push
mov
pushl
call
mov
jmp
pushf
pushf
mov
pushl
movb
mov
pushf
lea
jmp
cld
pushf
pushf
mov
rep
rcl
xor
mov
cmp
rcr
mov
jmp
mov
pushf
push
pusha
mov
lea
jmp
call
movb
pushf
popl
jmp
jmp
mov
call
mov
push
pusha
pushl
ret
movzbl
xchg
bsf
mov
shr
mov
bt
not
push
cmp
bt
pusha
not
jmp
add
add
xor
daa
bswap
jmp
repz
popl
movl
jmp
movb
movb
pushf
repz
popl
jmp
mov
push
pushl
pushf
lea
jmp
call
test
cmp
shld
push
mov
push
mov
pusha
jmp
clc
cmc
notl
bsf
daa
and
inc
mov
bt
cmc
pushf
sub
test
call
pushl
mov
movb
lea
jmp
pusha
pusha
pushl
mov
jmp
call
repz
popl
call
pushf
mov
test
call
shr
sub
movzbl
add
setne
cmc
bt
add
inc
pushf
dec
dec
movsbw
pushf
xor
dec
inc
movzbw
movzbw
dec
bswap
rol
pusha
add
xor
shld
mov
movb
add
call
cmp
cmc
pusha
add
pusha
mov
movw
movb
movb
pushf
lea
jmp
pushf
call
add
shr
mov
pushf
bt
add
pusha
pusha
stc
shrd
push
jmp
call
pusha
mov
pushl
movw
mov
push
lea
jmp
test
call
repz
popl
movb
mov
movw
pushf
lea
jmp
mov
bt
add
js
rcl
and
mov
pusha
movb
push
add
call
jmp
jmp
mov
push
pop
lea
cld
push
mov
cld
push
not
mov
movb
cld
jmp
mov
movb
pusha
pushf
movb
lea
jmp
jmp
pusha
jmp
rol
cwtl
mov
jns
sub
push
mov
movl
lea
jmp
rdtsc
movw
clc
sub
jmp
pusha
call
pushl
popl
push
mov
push
lea
jmp
pusha
pusha
pushf
mov
pushf
push
lea
jmp
not
bswap
bswap
mov
call
add
jge
shld
call
pusha
jmp
repz
popl
push
movl
mov
pushf
pushf
pushf
mov
lea
jmp
pushf
pushl
pusha
call
add
call
push
clc
sub
pushf
jmp
pop
push
movzbw
pushl
lea
push
push
movzbl
mov
inc
jmp
call
or
cmp
pusha
clc
pushl
xor
call
jmp
call
mov
pushf
lea
jmp
bt
jmp
lea
jne
pusha
mov
push
push
lea
jmp
stc
add
jmp
sbb
setl
xadd
shl
mov
call
jmp
jmp
push
clc
test
lea
pushl
or
mov
jmp
mov
call
lea
ja
mov
pushf
mov
pusha
lea
jmp
call
bsf
not
sbb
call
pusha
call
push
mov
pushf
movl
mov
call
pushf
mov
jmp
mov
pushl
lea
jmp
xchg
lea
jno
push
mov
pusha
movl
mov
lea
jo
push
pushf
pusha
pusha
pushl
ret
call
pushf
jmp
mov
pushf
call
xor
rcl
clc
sar
rcl
xor
dec
dec
bswap
dec
mov
mov
test
test
add
pushf
pushf
mov
mov
pushf
lea
jmp
mov
pushf
pushf
popl
pusha
pushl
popl
mov
pushl
lea
jmp
jmp
not
sub
mov
stc
test
cmc
add
push
pusha
pushf
call
lea
jne
lea
sub
cmp
xorb
movzbl
pop
push
pushf
pushf
movb
lea
jmp
pusha
push
push
mov
mov
pushl
mov
movl
lea
jmp
pushl
popl
pusha
movb
lea
jmp
pushl
popl
movb
mov
movb
lea
jmp
mov
pushl
pushf
popl
mov
jmp
mov
pusha
mov
jmp
jmp
pushf
mov
pushl
repz
popl
call
jmp
call
lea
movsbl
mov
pushf
jmp
cmp
stc
cmc
shr
movb
mov
movb
pusha
jmp
mov
movzbw
lea
push
lea
jae
push
jmp
and
dec
sub
mov
movzbl
movzbw
mov
push
movl
push
not
pushf
popl
lea
mov
lea
not
mov
lea
mov
std
jmp
mov
mov
lea
jmp
push
repz
popl
pushf
pushl
mov
pusha
push
pushf
pushf
lea
jmp
call
push
push
pushf
popl
call
test
cmp
cmc
or
call
cmc
push
xor
pushl
push
ror
pusha
pushf
dec
call
pushf
call
call
mov
clc
stc
add
push
cmp
xor
pushf
ror
movw
pusha
not
jmp
mov
sub
movb
mov
jmp
pushl
cld
cld
pushf
mov
rep
shl
jmp
push
jmp
jle
push
mov
mov
pusha
push
movl
lea
jmp
push
movb
lea
jbe
push
pushf
pusha
jmp
dec
btr
adc
adc
jmp
dec
push
dec
call
call
lea
jl
push
pushl
pushl
popl
pusha
movb
movl
pushf
lea
jmp
mov
movb
lea
jmp
test
cmc
add
jmp
movl
mov
lea
jb
push
mov
mov
push
pushf
push
pusha
pushl
ret
rcrb
sub
lock
or
popf
sub
xor
sub
mov
sub
rcrb
sub
lock
or
sub
rcrb
sub
inc
lods
sub
test
sub
rcrb
sub
subb
inc
jno
or
popf
sub
lock
or
sub
sbb
or
popf
sub
push
dec
sub
add
or
popf
sub
rolb
or
popf
sub
clc
mov
sub
call
popf
sub
mov
les
or
popf
sub
add
or
pop
sub
rcrb
sub
nop
subb
shr
sub
rcrb
sub
lock
or
sub
rcrb
sub
push
dec
sub
test
sub
rcrb
sub
add
or
dec
sub
rcrb
sub
jo
sub
fcoms
or
or
sub
call
pop
sub
clc
mov
or
mov
or
js
or
in
sub
fcoms
pusha
pusha
sub
test
sub
test
sub
pusha
pusha
sub
xor
sub
fcomps
or
xchg
or
jecxz
or
fisubrs
or
pop
sub
inc
dec
sub
mov
sub
nop
subb
test
sub
loopne
sub
inc
dec
sub
inc
dec
sub
push
pop
sub
shr
sub
lock
or
mov
sub
lock
or
pushf
sub
inc
lods
sub
call
insl
sub
pusha
xlat
sub
inc
jno
or
jo
or
subb
nop
jmp
or
mov
or
pop
sub
push
dec
sub
call
ljmp
or
inc
sub
push
dec
sub
mov
sub
test
sub
clc
mov
sub
pop
ljmp
or
in
sub
inc
lods
sub
fcoms
clc
push
sub
enter
enter
mov
sub
js
sub
mov
sub
cwtl
pop
sub
shr
sub
js
sub
cwtl
pop
sub
inc
dec
sub
lock
or
sub
test
sub
mov
sub
test
sub
js
sub
rolb
or
sub
js
sub
test
sub
sbb
or
sub
js
sub
inc
lods
sub
cwtl
pop
sub
mov
dec
sub
cwtl
pop
sub
call
inc
sub
js
sub
call
insl
sub
enter
js
sub
clc
mov
or
jns
or
sub
fcomps
or
mov
sub
nop
subb
mov
jmp
or
sub
enter
add
or
dec
sub
add
or
push
sub
inc
dec
sub
js
sub
subb
shr
sub
test
sub
js
sub
mov
or
push
sub
nop
subb
js
sub
subb
nop
subb
mov
sub
cmp
sub
xor
sub
fcomps
or
pop
sub
nop
jmp
or
pushf
sub
fcomps
or
les
or
sub
shlb
or
les
or
push
sub
push
dec
sub
enter
shr
sub
nop
jmp
or
subb
call
dec
sub
sbb
or
pop
sub
test
sub
lock
or
pushf
sub
inc
jno
or
sub
push
pop
sub
mov
xlat
sub
pop
ljmp
or
jmp
sub
shlb
or
jmp
sub
loopne
sub
rolb
or
push
sub
or
sub
pusha
xlat
sub
mov
jo
or
shrl
or
pushf
sub
inc
jno
or
push
sub
mov
push
sub
pusha
pusha
sub
loopne
sub
mov
push
sub
call
je
or
push
and
movw
mov
mov
lea
jmp
call
mov
pusha
lea
jmp
cwtl
pushl
mov
pusha
call
daa
mov
rcl
rol
mov
call
std
jmp
pushf
popl
jmp
pusha
push
mov
jmp
mov
pushl
popl
mov
mov
mov
mov
lea
jmp
mov
cmc
add
movb
call
add
pushf
pushf
call
bt
and
mov
call
call
push
mov
pushf
push
lea
jmp
bt
sub
call
movb
push
jmp
movb
pushl
popl
pushf
movb
lea
jmp
pusha
push
pusha
push
mov
pushf
pushl
pushf
mov
pushl
ret
adc
call
call
cld
pusha
rep
or
movzbl
shrd
mov
bsr
sub
bsf
pushf
mov
test
jmp
mov
cwtl
stc
sub
push
mov
pushf
mov
mov
movl
movl
mov
lea
jmp
pushf
add
lea
je
mov
pusha
jmp
mov
pushl
repz
popl
pusha
jmp
btc
or
movzww
cmc
stc
xchg
cmc
xor
cmc
cmc
cmc
clc
ror
call
call
pushf
pusha
mov
call
movl
pusha
mov
mov
pushf
mov
pushl
ret
pushf
pushf
dec
test
jmp
and
stc
call
pushf
mov
movl
lea
jmp
pusha
push
pusha
jmp
pushf
mov
pushf
jmp
mov
lea
je
push
xor
clc
xchg
bt
pusha
pushf
mov
pushf
stc
stc
jmp
clc
pusha
cmpl
pushf
pushl
pushf
mov
call
pusha
cmc
cmp
shld
push
pusha
push
mov
pushf
call
test
lea
cmp
stc
cmp
movb
lea
jle
ja
lea
bsf
aaa
mov
rcl
clc
lea
dec
pushf
btc
aas
sub
xor
lea
bsf
rcl
movsbw
and
shl
mov
bsf
sub
movsbw
jmp
push
pushf
mov
pushl
jmp
inc
pushf
decl
mov
push
call
pushf
popl
call
cbtw
movb
cwtl
push
pushl
pushf
sub
call
pusha
mov
jmp
pushl
mov
lea
cpuid
push
test
cmp
test
sub
call
shl
pushf
pushl
push
push
mov
jmp
adc
mov
mov
push
pushl
sub
pushl
clc
clc
shl
mov
call
push
pushf
movw
mov
movb
jmp
add
pushf
test
jmp
divl
push
call
jmp
lea
mov
movw
mov
movw
pusha
pusha
lea
jmp
pusha
not
bswap
mov
push
jmp
push
push
jmp
push
pusha
mov
push
call
cmc
pushl
popf
movw
pushf
lea
jmp
cmp
ror
ror
mov
movzbw
movsbw
shl
btr
xor
not
btr
mov
push
ror
lea
je
dec
cmp
xor
bt
xor
test
shl
xor
mov
call
push
std
mov
mov
pushf
movzbw
jmp
sub
shl
test
btr
mov
shl
shl
mov
test
sub
cmp
pushf
shr
call
pusha
lea
ja
sub
cmp
bsr
movsbl
mov
dec
ror
cwtl
lea
shl
js
cwtl
xchg
sub
stc
shl
bt
lea
lea
clc
movzbl
and
sub
sub
pusha
pop
mov
mov
bswap
bswap
pushf
mov
lea
bswap
std
push
jns
std
xchg
bswap
mov
mov
lea
pushf
movb
movb
mov
pusha
std
call
movb
mov
jmp
btc
xchg
cmc
mov
clc
adc
test
rcl
add
call
mov
call
mov
pushf
repz
popl
pusha
jmp
sub
movw
jmp
jmp
push
mov
push
lea
jmp
mov
pushf
mov
movw
pushf
popl
push
push
pushl
popl
pushf
push
pushf
push
lea
jmp
xor
cmp
clc
pusha
add
movb
push
ror
stc
not
test
clc
sub
cmc
xor
clc
mov
jmp
clc
xor
pushf
stc
add
bt
jmp
jmp
mov
pushl
popl
push
lea
jmp
mov
jmp
add
mov
lea
jmp
xor
jmp
pusha
push
mov
call
movl
mov
pushf
pushf
repz
popl
movb
pusha
pusha
pushf
mov
pushf
lea
jmp
and
dec
mov
shr
adc
pop
btc
pop
and
shl
pop
bswap
mov
and
pop
aad
cltd
pop
cmc
pop
rcl
sub
pop
lea
pop
aas
popf
setne
movzbl
not
jmp
mov
movb
pushf
pushf
movb
lea
jmp
mov
call
mov
pushl
jmp
pushf
or
inc
rol
mov
btc
call
add
add
dec
add
add
add
jo
add
.byte
.byte
jne
