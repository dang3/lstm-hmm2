mov
lret
rcrb
fadds
add
inc
adc
xchg
mov
push
mov
jb
cmp
dec
outsl
inc
jbe
push
pusha
leave
out
sub
adc
mov
fistpl
daa
outsl
hlt
push
xchg
push
mov
xchg
and
ficomps
lea
xchg
andl
ret
sbb
mov
jmp
sbb
popa
fisttpl
int
lds
je
leave
enter
jbe
jge,pn
xchg
loop
insl
cs
add
pop
jp
xchg
jbe
in
adc
outsl
aam
adc
adc
jo
jae
jp
sub
popa
loopne
adc
or
xchg
daa
les
dec
test
in
test
imul
aad
or
testl
out
push
repnz
inc
aas
adc
pop
out
ljmp
dec
and
stos
adc
dec
inc
adc
jb
scas
push
mov
mov
jg,pt
xor
shrl
incl
xor
cmp
insb
cld
mov
add
push
mov
push
sub
mov
xlat
pop
push
xor
pop
pop
adc
pop
rol
ja
or
stos
xlat
mov
bound
lret
orl
mov
cmp
out
sub
jno
add
jg
or
shlb
sbb
out
or
outsb
setno
and
jb
sub
jns
push
ret
cmp
sub
mov
fwait
inc
or
sub
dec
push
lds
mov
es
imul
and
dec
inc
add
push
or
shrb
das
hlt
and
int3
mov
lock
int3
ljmp
lret
mov
or
push
xchg
push
pop
or
in
lahf
cwtl
sbb
std
or
mov
setae
and
pop
xor
and
nop
xchg
int3
idiv
ret
inc
mov
shll
stos
mov
or
sub
lahf
fiaddl
lods
adc
sub
push
push
and
cmp
fcompl
scas
mov
out
inc
insb
data16
int
movsb
dec
loope
lds
rol
test
xchg
mov
mov
scas
fcomps
cmp
xchg
and
repnz
in
bound
and
jns
add
js
in
lock
stos
in
cmp
sbb
in
daa
mulb
jp
mov
dec
leave
popf
loope
jmp
scas
inc
mov
dec
mov
stos
test
xchg
and
xchg
adc
lods
pop
jp
fadd
ret
in
add
jae
arpl
mov
mov
out
movsl
mov
jbe
scas
or
mov
mov
mov
inc
pop
push
cmp
lods
ret
jp
test
add
imul
and
or
mov
inc
std
cwtl
xchg
adc
lds
push
in
jno
inc
dec
sahf
push
pop
mov
rcl
inc
popa
test
add
mov
cs
out
pop
test
addr16
xchg
cmp
mov
push
bound
bound
mov
dec
inc
xlat
adc
fdivs
repz
sub
dec
pop
and
adc
fsubrs
or
fwait
inc
cmp
mov
enter
lahf
lods
adc
mov
mov
and
mov
pop
repnz
imul
cmp
push
cltd
and
mov
mov
add
inc
adc
sarb
xor
mov
xor
scas
fisubrs
daa
and
adc
mov
aam
jle
adc
cld
mov
sahf
cli
inc
cmp
arpl
jmp
andb
jne
inc
lds
scas
pop
or
loop
xor
cmp
test
mov
or
ds
inc
and
loope
xlat
lods
in
faddl
or
cld
xchg
xchg
into
aad
adcl
xchg
cs
lret
xchg
inc
and
or
imul
xchg
into
dec
cmp
jns
and
xchg
pop
into
mov
and
inc
inc
sub
sahf
mov
sbb
xlat
gs
pushf
rolb
pop
idivb
cs
out
es
jae
mov
ljmp
pushf
shll
jno
lds
mov
test
mov
jl
cmpsl
dec
test
sahf
dec
mov
mov
pavgw
icebp
adc
or
mov
roll
pop
addl
outsb
inc
mov
sub
add
sub
xor
ja
sbbl
mov
sbb
cmp
jbe
fcom
aam
pop
test
or
pop
dec
mov
inc
les
mov
lea
fbld
movsb
in
xchg
pop
sbb
aad
fs
lods
mov
fdivrl
inc
pop
ret
ja
xor
mov
js
pop
adc
mov
mov
iret
and
imul
ss
stc
cmc
cmc
stc
dec
test
jle
aad
ret
fnstenv
popa
in
xlat
jno
add
scas
fildl
pop
arpl
mov
inc
popl
in
jge
std
mov
mov
pushf
fistl
push
cmpsb
xchg
sub
aam
addr16
pop
shlb
jle
pop
xor
cmp
push
aas
inc
xor
xor
jb
imul
jb
push
movsb
mov
add
sbb
add
or
shrb
mov
adcb
push
fs
and
cltd
cld
and
pop
jns
xor
gs
mov
lret
leave
lea
out
xor
out
inc
sub
call
mov
sub
cmp
pop
mov
inc
lea
dec
andb
lcall
call
xor
sub
add
xchg
loope
cmp
mov
movb
es
and
push
pop
int
loopne
jns
and
loopne
dec
push
sbb
in
in
xchg
cmp
cmp
and
jnp
outsb
shlb
jns
lret
mov
sub
rcl
dec
mov
pop
push
std
pop
mov
sbb
je
jbe
jmp
dec
inc
nop
inc
jge
lock
out
loope
test
lahf
icebp
mov
pop
jbe
imul
mov
test
dec
es
clc
mov
xchg
jp
push
sbb
clc
add
lods
sbb
mov
fldt
or
xchg
cli
inc
rclb
sbb
leave
sarl
je
ret
insb
imull
ficompl
ja
push
pop
inc
push
cmp
inc
das
stc
hlt
cmp
jl
das
pop
xor
enter
and
cmp
inc
ret
pushf
scas
ja
aad
pop
adc
sbb
shlb
jne
out
xorl
lock
dec
add
popf
and
outsl
sub
xor
and
es
jl
addl
inc
dec
pushf
xchg
aas
repz
pop
add
cmp
xor
sub
cld
jae
inc
ret
decb
mov
mov
ss
insb
xor
js
and
rcr
or
xchg
push
jg
xchg
xlat
fucomip
lea
imul
leave
jno
scas
or
adc
outsb
movsl
xchg
lahf
mov
jecxz
loopne
aam
and
outsl
mov
or
xchg
pop
add
pop
dec
jbe
mov
pop
dec
jge
in
in
fprem1
xor
ds
push
andl
push
aas
popl
xchg
or
stc
adc
inc
mov
mov
sub
mov
aaa
sbb
and
scas
inc
push
mov
imul
sti
std
xor
popf
mov
jmp
mov
stos
mov
gs
leave
mov
or
or
and
adc
cmpsb
cmc
jge
cmpsl
sbb
push
aam
shlb
sbb
imul
sbb
mov
push
fidivrl
mov
lret
add
pop
fisttps
jp
cmp
test
mov
test
inc
jne
mov
xor
mov
pop
pushf
jg
cmp
jns
mov
sbb
jno
xchg
in
mov
push
xchg
insl
jbe
loope
mov
inc
jo
cld
cmc
push
jo
insb
icebp
pop
lods
mov
lods
xchg
ret
in
sub
dec
sub
cmp
or
cs
cmp
ljmp
jge
jl
mov
sub
push
insl
testl
xchg
sub
neg
dec
and
dec
jecxz
xor
insl
inc
shlb
arpl
cs
xchg
pop
fadds
add
mov
sub
xchg
in
cmp
popa
in
outsb
pop
inc
sub
inc
ds
sub
push
ficomps
aas
jecxz
xchg
cmpps
pop
mov
add
sub
sbb
lods
shll
flds
inc
adc
movsb
test
incl
dec
out
cmp
rcr
xor
nop
inc
and
sbb
sbb
or
aaa
or
out
mov
and
dec
icebp
xchg
push
daa
daa
jnp
insl
arpl
pusha
cmp
inc
fnsave
jmp
call
test
sbb
fbstp
sar
jo
mov
add
rorb
xlat
dec
xchg
rcrl
pop
xchg
mov
pop
sarl
xchg
addr16
lahf
dec
leave
shl
ret
lret
mov
imul
hlt
fcoml
fcoml
mov
pop
mov
lock
sub
and
or
or
in
icebp
cmpb
and
mov
and
in
clc
jne
xor
pop
movntps
mov
adc
mov
out
dec
ljmp
adc
xor
repz
xor
hlt
loopne
cmp
adc
xchg
movsb
jb
addr16
cli
stos
adc
lahf
roll
mov
mov
push
scas
push
pusha
lcall
jle
test
sub
mov
adc
pusha
sbb
out
or
xchg
bound
ja
ds
push
aam
jp
gs
test
leave
jg
test
inc
sub
enter
mov
pusha
cmp
xchg
pusha
subl
shrb
outsb
mov
lahf
repz
les
test
cmp
adc
lcall
ret
stos
dec
repz
popf
hlt
ds
notb
pop
loope
sahf
fs
addr16
ror
inc
ret
cmp
insl
out
ja
cmp
mov
mov
daa
mov
xor
or
arpl
push
call
orl
fstpt
xchg
pop
shr
push
movsb
loope
icebp
out
mov
pop
push
mov
mov
push
lret
jle
push
mov
mov
rcl
xchg
lds
jp
ja
ja
and
inc
inc
mov
aad
add
notl
jne
add
stos
movsl
insb
adc
mov
aas
insb
jmp
mov
push
ds
xchg
out
jge
arpl
sar
out
orl
std
adc
out
xor
mov
outsb
test
in
dec
sbb
cld
adcl
loopne
lahf
stos
faddp
xchg
and
pop
xchg
jns
jle
popf
dec
dec
inc
push
jp
outsb
cld
icebp
daa
add
cmp
std
push
jb
mov
stos
adc
pop
add
shll
aam
jno,pn
push
xchg
jmp
sbb
out
lahf
lods
cmp
int
dec
sub
bound
mov
mov
mov
shlb
std
mov
mov
mov
negb
cld
in
and
imul
cld
dec
jge
xchg
js
or
dec
divb
es
sbb
aad
lock
mov
scas
cmp
and
cmp
scas
je
es
dec
cmp
sbb
inc
mov
xchg
add
adc
mov
mov
sub
std
cwtl
inc
inc
movsb
adc
cmp
mov
shll
xchg
rolb
add
loopne
in
sub
push
movsb
pop
mov
stos
pusha
hlt
mov
fcoml
loop
jbe
jle
outsb
xorb
pop
mov
inc
aas
inc
xlat
adc
jecxz,pt
add
jns
push
mov
je
push
xor
sbbb
leave
sahf
add
hlt
subb
scas
cld
jb
xchg
les
and
adc
bound
push
scas
sub
fidivs
dec
mov
push
popa
push
add
mov
cltd
add
cmp
clc
dec
jo
pop
sbb
in
mov
mov
sbb
into
shll
add
ret
lcall
loope
mov
add
push
pop
cli
mov
loope
testb
sub
dec
inc
jp
xor
xchg
in
fiaddl
icebp
push
addr16
movsb
aas
jp
xor
mov
add
pusha
jle
in
repz
jge
push
pushf
pop
mov
mov
movb
fwait
inc
push
fcoms
jecxz
jns
mov
inc
pushf
lods
mov
cmp
pop
leave
fnsave
ret
sbb
push
jae
int3
pop
mov
in
incl
insb
xchg
cmp
dec
push
xchg
pop
loop
daa
add
inc
repnz
shlb
jno
aad
sqrtps
std
cmpsl
mov
jbe
xlat
loope
add
outsl
cltd
test
cmp
insl
fdivs
cmp
pop
jmp
xchg
push
push
cmpsl
mov
mov
addb
outsb
jge
test
mov
fsubp
sbbl
ljmp
inc
push
lret
or
ja
or
mov
mov
mov
dec
gs
xor
repz
xor
negl
dec
jbe
movsl
iret
jno
xchg
sbb
push
mov
push
mov
xor
pusha
roll
mov
cmp
dec
sub
lds
xchg
in
xlat
push
mov
call
push
xchg
loopne
xorl
gs
cli
adcl
xchg
hlt
xor
fidivrs
dec
or
mul
arpl
sahf
push
xor
lret
xor
call
das
mov
sub
stos
fmull
mov
aaa
mov
rcr
andl
and
lds
push
cwtl
popa
push
jle
add
xor
adc
cmpsl
xchg
mov
in
dec
and
xor
dec
imul
out
stos
sahf
testl
push
sbb
loopne
mov
jle
sbb
ljmp
out
inc
mov
mov
std
adc
ljmp
xchg
aad
sbb
add
xor
add
fstl
inc
imulb
xchg
jge
and
jl
stos
adcl
pushf
push
and
push
movsb
into
push
push
xor
or
repnz
repnz
sbb
cmpsb
adc
pop
cmp
sub
pop
es
addb
repnz
push
imul
and
aam
ljmp
mov
jmp
xorb
dec
mov
testl
sahf
cmc
cwtl
out
push
mov
adc
shlb
mov
jg
adc
dec
bound
stc
add
or
or
jge
add
fmull
cmp
pop
inc
shll
fldenv
push
sahf
mov
xor
sub
push
pop
loopne
call
and
in
jl
inc
jne
es
sub
and
jmp
lods
scas
jecxz
popa
std
js
or
gs
int3
mov
dec
adc
imul
pop
addr16
mov
xchg
je
push
adc
call
std
repnz
pop
ficoml
jp
les
ficoml
jmp
orl
dec
fs
dec
inc
lock
xor
mov
test
mov
ljmp
jo
aad
inc
int
dec
outsb
pop
jecxz
mov
mov
hlt
lret
loopne
mov
ljmp
jg
lret
add
xorb
and
push
adc
sbb
addb
mov
jno
adc
add
mov
push
les
loope
pop
cmp
adc
inc
cmpb
xchg
pop
imul
add
sbb
push
and
loopne
sahf
cs
mov
das
lcall
or
push
mov
pop
int3
mov
sbbl
mov
rorl
adc
cmpsl
push
nop
fwait
aas
movlps
mov
xor
test
adc
xchg
xchg
jge
xchg
fisttpl
sahf
jmp
cs
sbb
sub
xlat
int3
mov
adc
mov
push
inc
inc
inc
jae
imul
xor
push
pop
test
sub
push
mov
in
fidivs
mov
cmp
scas
cmpsb
ljmp
ret
test
and
pushf
pop
in
sub
sub
enter
jp
push
lcall
gs
int3
add
jae
pop
into
xor
dec
fs
and
jp
mov
jo
sbb
sbbb
scas
push
inc
xor
je
push
sbb
dec
into
fstpl
adc
scas
aas
ja
jl
popa
pop
jl
or
mov
pop
dec
mov
lcall
adc
mov
push
popa
not
pop
out
lods
insl
add
xor
or
les
adc
pop
dec
movl
not
sti
lret
xchg
test
xor
and
mov
int3
jo
aam
lret
sbb
mov
mov
adc
sub
pushf
mov
aaa
fwait
cli
fidivrs
mov
inc
arpl
lock
inc
pop
rolb
mov
pop
adc
ja
cwtl
xchg
mov
sbb
xcrypt-ecb
cmpsl
lret
pop
or
and
mov
jge
imul
dec
jne
add
fisttps
and
mov
pop
push
daa
sub
jo
stos
sub
ret
std
lcall
out
sub
cmp
mov
lods
cwtl
fistpll
movsb
mov
mov
cmp
mov
outsb
pop
adc
shlb
jno
mul
jne
lret
popa
xor
mov
dec
loope
cwtl
cmp
mov
jae
pusha
es
mov
inc
loope
ret
push
fdivrl
cmp
push
filds
mov
jle
mov
inc
jno
loopne
std
push
int
sti
push
push
sti
jmp
ljmp
dec
sub
adc
jg
and
pop
mov
sub
mov
imul
mov
lods
ret
jmp
and
in
test
mov
dec
sahf
aaa
pusha
testl
add
stc
xor
mov
jne
aaa
jb
mov
lahf
mov
sahf
popf
sub
sub
mov
jle
mov
add
or
sub
and
daa
xchg
std
lret
addr16
int3
roll
cmp
adcb
sub
add
mov
sub
lahf
imul
sbb
icebp
dec
pushf
and
cs
movsb
mov
lods
outsb
loop
sbb
iret
dec
outsl
cmpsl
loopne
ja
and
jbe
cmp
imul
lcall
popa
lods
bound
inc
jp
xchg
cwtl
or
shlb
mov
or
cwtl
sbb
fcoml
push
out
outsb
mov
aaa
rcrl
push
cmc
into
mov
xchg
sbb
adc
mov
pop
mov
sbb
pop
xchg
roll
mov
repz
pop
lcall
lock
mov
mov
push
mov
dec
scas
lea
jl
fsubrs
stc
lock
ljmp
sbb
mov
cmp
lock
mov
fstps
enter
in
rcl
inc
add
aad
popa
xchg
fisubl
sub
inc
xchg
lods
add
ret
outsl
fs
std
stos
xchg
popf
pop
fdivp
or
testw
pop
xlat
dec
cmp
stos
ror
or
daa
mov
mov
imul
cmp
mov
and
mov
cmp
sub
inc
insl
sbb
ret
fstpl
outsl
or
mov
outsb
inc
push
sub
adc
sbb
movsl
and
jbe
movsl
mov
push
fstcw
mov
loop
bnd
dec
mov
int
pop
addr16
add
repz
push
dec
aad
xchg
popa
rorl
pop
mov
pop
stos
inc
std
add
mov
xorl
sbb
imul
mov
add
dec
add
push
mov
hlt
cmc
ds
jl
xor
dec
xchg
add
inc
xor
jp
push
orb
inc
push
mov
push
pushf
cld
out
ds
xor
mov
cmpsl
push
jl
push
cmc
push
pop
pop
jmp
out
dec
stc
jle
test
jae
sub
fstp
idivb
rcr
in
jmp
popa
es
fistl
pop
push
out
inc
sub
fisubrs
jmp
mov
or
add
xor
fwait
inc
pop
cld
jmp
icebp
mov
aad
movsl
iret
cmp
stc
cmp
dec
xchg
jbe
movsb
fildll
xchg
iret
push
test
push
ds
fldt
add
cmp
sub
cwtl
dec
sbb
aas
leave
push
fildl
fs
adc
dec
jge
cmpsb
icebp
das
sub
gs
cmp
push
jo
dec
pop
mov
out
mov
leave
push
cmpsb
jno
pop
int
test
xchg
loop
loopne
cwtl
cmpsb
gs
stos
nop
mov
sub
push
inc
sbb
popa
insl
outsl
in
xchg
lods
mov
imul
movsl
mov
in
ss
int
outsl
ds
ret
shrb
andl
outsl
inc
test
aaa
sub
out
sbb
in
jg
jnp
ja
sub
ret
sbb
dec
and
xor
cmp
js
mov
mov
adc
add
stos
fdivl
jmp
iret
xorb
sub
dec
cs
or
rcll
mov
insl
jnp
mov
sbb
test
pushf
scas
inc
insb
test
cld
mov
add
pop
test
or
xchg
and
pusha
negb
jmp
call
cmc
pop
cmp
adc
mov
xchg
sbb
add
sbb
jbe
fnstsw
inc
mov
ror
iret
clc
stos
loopne
lcall
jb
fldenv
movsl
push
aaa
aad
int3
add
cmpsb
dec
aam
dec
loop
inc
inc
or
sahf
or
fidivl
mul
int3
dec
jae
sbb
xchg
stos
sub
sub
js
mov
stos
cld
andl
sbbb
mov
jp
dec
jmp
fadd
dec
mov
lods
jne
sub
inc
mov
shrl
cmp
mov
ret
push
das
movsb
sub
bound
repnz
iret
adc
sub
jecxz
pop
jmp
insl
test
insb
cmc
sub
andl
popf
jo
popa
push
inc
lret
jns
das
subb
xchg
mov
pop
es
pop
mov
pop
mov
ret
mov
xchg
adc
cmc
sahf
repnz
or
add
loopne
fists
adc
in
ret
mov
or
mov
insb
mov
scas
jae
cmc
or
and
outsb
inc
xlat
sar
or
addr16
filds
lea
dec
test
pusha
jmp
pusha
out
es
insb
clc
scas
loopne
sbb
add
pop
add
xor
subb
loopne
out
cli
jecxz
es
mov
nop
shrb
push
lock
cmp
mov
jp
outsb
xchg
movl
mov
pop
mov
shlb
jp
sbb
push
insb
stos
int3
pop
lahf
mov
gs
push
inc
push
call
mov
mov
pop
ret
mov
pop
sbb
add
lcall
lds
fcoms
fcmovne
mov
insl
sub
mov
pop
lock
dec
push
cmp
push
dec
or
mov
push
std
dec
call
pop
and
sub
int3
mov
lds
xchg
jg
arpl
xor
sub
push
sbb
or
aaa
pop
pop
add
inc
in
xchg
fisttpl
sbb
cli
mov
mov
clc
cmpsl
push
lods
xlat
ret
popf
pop
dec
clc
pop
sarl
jge
sub
ret
cmc
outsb
and
je
sbb
cmp
dec
jl
inc
ja
ss
and
sbb
enter
in
pop
data16
pushf
xchg
mov
icebp
mov
sub
call
movsl
push
mov
add
popf
dec
or
mov
clc
dec
adc
aaa
adc
lods
fwait
mov
inc
cli
test
jmp
loop
punpckhdq
dec
and
outsl
shll
add
adcl
aas
in
js
int
sbb
sbb
sub
js
loopne
aaa
int3
mov
out
shlb
std
fwait
jb
pop
sbb
ss
xor
pop
lcall
addr16
insb
movsb
es
cltd
jnp
dec
xor
add
fcmovu
adc
pop
cmp
outsb
lds
ja,pt
aam
stos
out
movsb
fcmovnb
mov
mov
xchg
lahf
mov
int3
xor
jl
mov
sbb
push
inc
sub
sarb
xor
out
outsb
imul
mov
je
rcr
incb
add
xchg
push
movl
clc
movb
