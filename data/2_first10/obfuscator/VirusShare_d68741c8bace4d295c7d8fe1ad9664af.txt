mov
in
loopne
adc
ficomps
push
addr16
inc
testl
inc
mov
mov
in
fidivl
inc
out
xor
xor
push
test
aas
rol
fnsave
mov
dec
fldenv
add
pop
addr16
cmpsl
jns
xlat
sti
in
inc
pusha
xor
rcll
or
hlt
mov
je
mov
aad
jae
je
in
stos
inc
or
in
mov
and
icebp
rorb
nop
aaa
call
jne
cmp
fwait
add
lcall
xor
scas
inc
gs
push
dec
les
aam
andl
adc
jae
xchg
daa
xchg
roll
mov
pop
push
cmp
ss
xchg
mov
cmp
push
das
fwait
sub
loope
xchg
andb
in
or
mov
repz
adc
xchg
icebp
into
mov
mov
aam
les
add
lahf
shrb
neg
push
clc
add
stc
call
and
mov
mov
inc
test
fs
mov
pop
and
xchg
jns
inc
adc
enter
cwtl
add
and
std
push
cmp
push
aaa
jae
pop
sbb
jl
push
xor
test
dec
imul
ljmp
mov
ret
adc
or
add
shrb
push
pushf
es
inc
adc
inc
out
xor
xor
orps
fisubl
lods
scas
mov
ds
push
in
test
fidivl
mov
int3
sub
mov
mov
bound
jns
xchg
shrb
adc
xchg
call
pushf
lea
bswap
mov
pushf
call
call
inc
call
setb
pushf
mov
pushf
pusha
mov
pushf
pushf
pushl
call
add
mov
movw
lea
jmp
fnsave
test
lods
inc
and
scas
pop
shrb
cmp
dec
xadd
cvtss2sd
lret
test
mov
mov
sub
mov
rcr
pop
push
pop
and
mov
pop
cwtl
and
mov
scas
movsl
aas
push
fldcw
push
mov
push
outsb
addr16
xchg
xchg
pop
sbb
push
sti
xor
add
ja
repz
adc
outsb
scas
mov
cmp
mov
icebp
mov
fs
call
pusha
call
cmpb
push
lea
jne
aaa
ror
aam
shld
sub
movzbl
aam
mov
sar
rcr
dec
cmp
add
stc
cmc
setns
mov
pushf
push
pushf
call
lea
jbe
adc
sar
sub
bsf
xor
add
dec
mov
bswap
jmp
lea
jae
cmc
push
call
pusha
mov
movsb
cmp
stos
dec
push
arpl
mov
ljmp
xor
push
lcall
sbb
sub
jbe
dec
dec
outsb
rol
xchg
mov
dec
push
push
pop
out
test
shll
sub
xlat
fidivl
cmp
add
sub
xlat
lea
movsbw
mov
jns
dec
dec
pushf
mov
call
pusha
push
pusha
lea
call
pushf
push
movw
pushl
lea
jmp
shrd
rcl
not
mov
test
jmp
push
lea
jbe
bts
btc
xor
pushf
mov
bt
add
xchg
ror
mov
shl
add
bt
movl
test
setg
mov
bt
bt
cmp
pushf
pushf
pushf
pushf
lea
jbe
rol
rcl
shl
sub
btc
mov
rcr
mov
add
shld
mov
shld
add
shl
lea
xadd
mov
shr
mov
adc
bsf
mov
stc
lea
shld
bswap
add
call
clc
or
call
cmpb
call
stc
mov
ror
movb
inc
cmc
call
add
lret
stc
adc
nop
adc
fsubl
pop
sbb
jle
inc
cmp
stos
mov
int3
gs
jmp
xor
shrb
shl
push
aam
dec
and
and
in
push
sub
fdecstp
shll
and
adc
or
mov
mov
clc
sub
push
pushf
rep
not
pop
movsbl
mov
pusha
lea
jmp
push
lea
jne
aas
push
sub
mov
rcr
aas
or
mov
shl
shr
call
cmc
pushl
not
call
mov
adc
scas
rcl
push
sub
push
xor
sub
int3
jno
ds
dec
inc
push
test
inc
shrb
pop
cld
ret
fcom
cmp
sbb
aam
stc
mov
movsl
ret
adc
scas
sub
sub
add
jae
popa
addr16
outsl
js
add
jne
popl
call
push
or
pusha
pusha
jmp
clc
sub
call
mov
scas
je
jp
mov
push
sbb
mov
sub
notb
add
cli
mov
aaa
rcl
repz
push
adc
imul
dec
inc
stc
xor
and
add
out
sbb
push
cmp
shrb
cs
mov
cmp
jg
jnp
jg
jg
mov
cld
jle
mov
cld
jnp
mov
mov
jg
mov
jg
mov
cmp
mov
jp
pusha
jge
pushl
mov
jle
cmp
cmp
mov
sti
mov
add
or
lods
int3
xor
push
les
push
pushf
or
fidivrl
pop
sbb
jl
xor
pop
mov
leave
jecxz
nop
mov
push
add
scas
xchg
scas
sbb
xchg
jns
xchg
enter
mov
cmp
je
popa
mov
aas
sbb
push
add
push
mov
mov
out
lahf
or
jo
cli
adc
fstpl
aas
or
icebp
leave
and
bound
xchg
popf
mov
xor
mov
mov
lcall
cmpsl
xor
xor
mov
stos
pop
adc
cmp
jg
pop
decl
cwtl
test
adc
es
and
outsb
cmp
mov
bound
cmpsb
imul
sub
fistpll
pop
arpl
subb
mov
imulb
adc
pop
shrb
into
cwtl
inc
pop
xor
lods
in
out
push
loope
adc
jno
mov
sub
sbb
push
sbb
adc
das
mov
scas
jecxz
test
dec
loope
clc
push
test
mov
dec
out
jo
lret
sbb
sub
aaa
inc
test
jae
lds
stos
xchg
jbe
shrb
push
sbb
shrl
cltd
push
rcrb
in
sub
shrb
pop
or
adc
rorb
call
pop
test
out
dec
inc
stc
test
sarb
cmp
leave
push
inc
push
fidivl
movsb
xchg
lea
mov
popf
pop
mov
jp
out
cltd
pop
ss
dec
lret
mov
sub
imul
test
mov
jne
stos
loope
enter
fistpl
push
rolb
cmp
sbb
ss
loopne
rorb
arpl
pop
cmpsl
dec
mov
shl
jg
adc
aam
jle
movsb
pop
clc
xor
sub
xlat
cmp
fnstenv
inc
ss
mov
dec
jne
pop
pushf
mov
shrb
fwait
lret
jb
xor
or
push
mov
mov
aad
add
cwtl
inc
outsb
and
hlt
in
fmull
xor
inc
xlat
imul
adc
stc
movl
mov
das
mov
es
dec
fsubrl
icebp
inc
mov
sub
jge
inc
push
hlt
and
mov
jge
xchg
test
mov
cmp
faddp
sub
pushf
inc
cld
std
call
inc
call
lea
je
setb
not
push
mov
not
lea
mov
xchg
jmp
mov
dec
add
cmpsl
mov
imul
and
cmp
lods
push
adc
cli
dec
xchg
in
sti
in
or
mov
addr16
or
stos
out
out
arpl
out
out
fsubs
cmp
outsb
ret
mov
shrb
jmp
mov
test
jg
add
lret
lea
pushf
mov
pusha
movzwl
pushf
mov
bswap
lea
pushf
lea
movsbw
pop
mov
push
mov
jmp
push
pushf
pusha
inc
jmp
stos
jmp
jmp
lea
call
cmp
sub
jmp
movb
cmp
pushl
movb
lea
je
test
test
cmp
jmp
bswap
push
lea
pusha
lahf
mov
lea
movw
mov
pusha
movl
movw
mov
push
pushf
movw
pushl
ret
stc
pushf
adc
mov
clc
clc
cmc
jmp
bswap
jmp
add
cmp
test
movb
call
pushf
mov
add
bt
cmp
jmp
pushf
adc
pushf
mov
pushl
ret
add
dec
outsl
arpl
inc
jb
gs
xor
neg
cmc
pushl
push
pushf
rol
clc
mov
call
pusha
pushf
mov
lea
je
clc
sbb
add
shl
not
mov
pusha
mov
add
jl
add
clc
mov
movsbw
rol
adc
mov
cmc
push
stc
pusha
cmp
jmp
mov
movw
jmp
movb
mov
pushf
mov
movb
call
push
push
pusha
mov
pushf
pushf
mov
movl
pushl
ret
mov
mov
pusha
mov
lea
jmp
jmp
pushf
lea
je
cmc
or
push
call
cmp
jmp
cmpb
push
pushl
jmp
lea
je
pusha
mov
pop
bswap
lea
call
jne
push
stos
push
pushl
mov
mov
lea
jmp
jmp
push
push
pusha
lea
je
cmc
pushf
add
cmc
test
cmp
cmp
jmp
movb
lea
jne
call
inc
stc
rol
push
ror
dec
inc
pushl
clc
not
not
stc
not
cmc
rol
jmp
lea
jne
jbe
pushf
mov
call
mov
daa
adc
les
lcall
scas
jge,pn
inc
push
push
sbb
movsl
xlat
fdivp
mov
mov
popa
fdivp
push
inc
push
test
js
jge
jg
cmp
js
sub
dec
inc
jnp
xor
lds
pop
inc
inc
push
sub
mov
enter
push
popa
pop
out
mov
in
jle
and
lcall
stos
dec
lods
test
add
adc
and
leave
stc
and
inc
dec
push
fadd
push
addr16
mov
movsb
outsb
divl
pop
or
mov
mov
xor
repnz
mov
lea
jne
neg
mov
bswap
shl
add
rcr
sub
rcl
mov
bsf
bsr
mov
push
stc
pusha
cmp
sub
cmc
call
xchg
xor
fcompl
xchg
push
ret
mov
inc
scas
mov
cld
or
sbb
cmpsb
cmp
shll
popa
sub
dec
pop
rorl
mov
cmpsl
roll
xchg
loopne
lods
mov
adc
sarb
or
loope
jle
popl
and
icebp
push
negb
scas
popf
jb
inc
xor
in
sbb
and
ja
outsb
decl
out
sbb
pop
rorl
push
fldt
in
jge
adc
sub
cmpsb
cmp
mov
loopne
dec
jl
out
mov
imul
das
arpl
mov
dec
sbb
mov
mov
xchg
xchg
pop
pop
jns
mov
and
push
lea
mull
add
cs
cmpsb
shrb
imul
and
xchg
pop
push
xchg
mov
mov
test
pushf
orl
or
add
clc
mov
clc
test
pushl
test
push
lea
je
clc
stc
pusha
jmp
movl
call
jmp
shl
jmp
pushl
popl
movb
mov
pushl
ret
ljmp
or
adc
nop
inc
mov
mov
mov
or
and
xchg
sbb
mov
ret
and
mov
subb
adc
jno
xchg
xor
add
sbb
iret
cld
ret
popl
int3
dec
bound
scas
fistpll
cmpsb
mov
dec
cmp
sbb
pop
push
nop
stos
sbb
push
xlat
or
sarb
out
pop
or
mov
das
adc
nop
mov
cmp
add
push
loope
mov
ja
aad
shrb
fimuls
adc
movsl
sahf
pop
push
les
jg
shrb
mov
push
ja
mov
mov
xchg
push
jg
sub
push
jecxz
shlb
int
sub
push
scas
test
in
push
push
jno
in
ss
xor
fld
sub
fs
jb
stc
clc
cmp
call
lea
jb
jmp
ss
push
ljmp
add
sub
insb
jmp
mov
lret
xor
jecxz
cli
push
paddw
jl
nop
movsb
pop
push
adc
scas
in
mov
test
hlt
mov
add
icebp
adc
std
xor
pusha
test
pop
jnp
shrb
cmp
add
inc
dec
popa
lea
call
jmp
inc
push
lds
call
mov
lahf
and
ss
pushf
insl
or
mov
mov
push
mov
fidivrl
imul
test
mov
aad
push
sarl
in
test
inc
std
cmp
sub
xchg
jl
adc
xorb
stc
js
cs
ret
js
or
movsl
lahf
out
lret
rorb
stc
xchg
into
mov
push
popl
sub
test
mov
sub
test
pop
cmp
add
jmp
lea
je
not
lea
mov
bswap
movzwl
movsbw
lea
mov
mov
jmp
adc
cld
mov
pop
xchg
cmpb
pop
and
mov
cmp
add
aad
rcl
ss
data16
cmp
xor
jae
dec
add
jb
xchg
mov
sub
lea
popa
sti
lock
add
mov
ljmp
addl
mov
scas
inc
sub
lock
dec
fucomp
sbb
add
dec
push
and
xchg
pop
push
repnz
int
xchg
lock
outsb
repz
pop
data16
sar
mov
fcoml
xrelease
jnp
mov
xorl
xchg
mov
insl
ds
into
insl
mov
sub
adc
or
sbb
cmp
ds
sahf
push
shrb
jp
leave
mov
lods
cmp
inc
mov
mov
sub
aam
out
mov
sub
cs
movb
xchg
mov
mov
shrb
push
das
adc
mov
or
dec
fs
cmp
mov
mov
adc
sub
int
aaa
dec
repz
push
add
mov
jnp,pn
test
sub
pushf
lea
jmp
or
push
in
push
jl
andl
nop
sbbl
mov
sarb
inc
xchg
fmull
push
insl
das
and
pusha
xchg
sbb
sarb
enter
imul
mov
mov
add
mov
into
shrb
cmpsl
scas
or
mov
inc
or
pop
mov
sbb
add
imul
jae
jmp
xchg
insb
jmp
cmp
out
stos
inc
add
or
pop
mov
add
cmp
add
aaa
jb
lret
mov
popf
add
cmp
sub
sahf
fwait
mov
jb
ljmp
jo
out
in
lret
and
cmp
fstl
test
shrb
ljmp
call
call
pushf
pushf
xchg
pushf
pushf
lea
jnp
push
dec
cmc
cmc
shl
push
mov
mov
lods
mov
pusha
call
cmp
scas
shrb
mov
int
inc
dec
mov
add
in
in
jbe
call
and
shlb
cwtl
loope
les
add
in
and
mov
cld
push
ds
test
lods
add
call
out
loopne
mov
mov
jl
pop
jmp
imul
cmp
mov
inc
int3
dec
fwait
nop
lret
rclb
stos
jmp
sub
arpl
je
mov
es
mov
xor
cwtl
arpl
xor
es
dec
insl
adc
cmc
inc
movzbl
out
mov
lret
jmp
data16
mov
inc
push
sbb
out
pop
sbb
jp
jecxz
push
imul
jmp
cmc
or
movsb
mov
orl
sub
and
jecxz
cmp
add
jnp
dec
mov
jne
es
sbb
cld
jb
add
push
cmp
pushf
addr16
cltd
jns
fisttps
movsb
fdivrs
out
and
xchg
gs
or
enter
stc
add
xchg
or
adc
sahf
mov
and
jb
push
jl
mov
sbb
sbb
cmp
movsb
or
fstp
jge
adc
loop
into
add
jecxz
cmpsl
andb
xchg
ss
and
xor
icebp
ffreep
out
mov
mov
sbbb
inc
je
jge
push
hlt
sti
cmp
and
pushf
add
andl
xchg
das
out
push
cld
inc
mov
call
sahf
jnp
loop
jl
mov
pop
sti
jge
push
icebp
cld
push
jmp
mov
sub
les
repz
les
les
fsubl
add
sbb
sbb
loope
mov
cld
mov
enter
sbb
testl
repz
ficoms
std
in
loope
inc
test
leave
add
sbb
jo
jmp
and
mov
xorl
in
into
in
les
mov
inc
cmp
popa
pushf
test
cmp
test
push
lret
inc
ror
pop
mov
sub
sahf
lret
cmc
xchg
stos
sbb
out
movsb
add
ljmp
jecxz
ret
mov
add
mov
jns
popf
and
in
in
add
iret
inc
mov
shll
in
cmp
sti
loop
sub
arpl
dec
pop
fs
or
das
imul
add
repnz
push
jb
add
insb
enter
hlt
addl
ret
out
and
inc
sub
in
inc
sti
jne
mov
mov
cli
inc
mov
rol
cmpsb
aam
mov
inc
popa
jnp
inc
mov
sub
add
hlt
call
sarb
lock
loopne
xchg
movsb
mov
add
mov
stos
pop
imul
mov
inc
push
add
mov
test
sahf
jecxz
cmp
jae
mov
call
les
xor
sbb
xchg
sub
ret
das
cs
jle
jle
ret
xor
push
in
add
add
mov
adc
loope
mov
sahf
jl
mov
pop
ret
pop
repz
std
movsl
clc
ret
je
jecxz
ret
mov
and
jle
mov
js
jecxz
popa
loop
mov
jecxz
ret
in
jg
aam
cmp
fs
jns
loop
add
inc
mov
pop
shll
mov
inc
mov
orl
lods
sub
sbb
aas
pop
les
inc
jl
test
loope
push
in
adcb
and
jecxz
sbb
test
cmp
jl
add
inc
and
fnstsw
mov
mov
add
mov
adc
mov
inc
in
jl
aas
sti
subl
loope
loopne
cmp
mov
ret
inc
insl
jmp
mov
mov
mov
jg
jnp
add
jl
and
pop
mov
pushf
fidivrs
push
imul
xchg
ds
xor
mov
addl
sbb
inc
pop
in
jl
test
jmp
shlb
jno
std
mov
repz
mov
fidivrl
jle
cmp
ret
and
daa
mov
sarb
sbb
mov
jae
aaa
mov
mov
ret
fnstsw
popf
jmp
movsb
inc
inc
jl
int
bound
mov
inc
loope
mov
adc
add
ret
les
ret
add
in
inc
jae
pop
mov
rolb
cmc
add
add
popf
or
loope
dec
mov
jo
or
add
xorl
mov
les
mov
push
test
pushf
add
and
sti
and
fldl
mov
cmp
movsb
pop
jle
mov
push
popf
pop
inc
xor
popa
inc
jnp
mov
mov
add
roll
pop
xchg
jle
mov
jmp
shll
testb
push
add
push
fiadds
in
and
test
inc
xchg
jo
inc
shr
push
movsb
shl
in
shll
testb
nop
movsb
mov
inc
movsb
fucom
enter
in
enter
mov
cmp
xor
sub
hlt
pusha
rol
in
inc
xor
sbb
mov
pop
mov
clc
addr16
xchg
add
inc
xor
jl
push
inc
repnz
add
insl
lds
dec
imul
out
lcall
test
fcmove
add
cli
mov
add
sbb
fmuls
and
movsb
pop
add
add
je
pop
test
pop
pop
test
movsl
mov
xorb
jb
inc
cmp
rep
fs
sub
and
mov
fldt
sbb
xchg
xchg
sub
int3
ljmp
popa
xor
xchg
test
icebp
movsb
mov
xchg
aam
mov
test
lods
and
movsb
fisubs
and
ljmp
inc
inc
push
add
inc
and
loop
add
sub
sahf
xor
add
and
mov
fdivr
sahf
mov
jecxz
and
cmp
jnp
mulb
jecxz
mov
ret
lcall
and
fisubrl
add
sbb
cmpb
mov
cmp
hlt
add
mov
js
stos
and
and
cld
lcall
push
ss
lret
mov
mov
leave
push
popa
jmp
popa
cltd
imul
ljmp
sti
aam
shrb
pusha
pop
daa
add
sbb
inc
jmp
mov
bound
ret
pop
cmpl
andl
ret
loopne
jae
mov
and
jnp
bound
repz
mov
xchg
out
rorl
loopne
test
mov
xchg
fnstsw
and
cmpl
into
ret
les
pop
test
lock
outsb
jo
add
enter
inc
mov
movsb
inc
ret
les
enter
cmpl
movsb
in
inc
lods
and
ja
movsb
les
inc
mov
les
test
inc
les
int
add
sarb
jns
fldl
in
and
in
icebp
add
inc
and
nop
jmp
cmc
jl
mov
in
roll
mov
ficomps
pop
jns
push
inc
mov
in
pop
pop
fisubs
add
data16
aas
lret
outsb
or
sarb
cmp
and
sarb
inc
js
fdivrp
xchg
mov
rorb
addl
adc
and
sti
repnz
pmuludq
in
loop
sti
les
gs
inc
fs
add
inc
fadds
lret
test
fdivl
adc
fdivrs
push
mov
add
inc
cltd
in
and
ret
mov
loop
test
subb
cmp
jl
fwait
bound
mov
jne
mov
jnp
dec
les
cld
pop
addl
std
sahf
mov
scas
cld
add
cld
sbb
arpl
hlt
rclb
mov
and
clc
jg
paddsb
mov
inc
mov
gs
ds
mov
sbb
ds
aas
clc
rcrl
imul
ret
dec
out
fs
fs
and
scas
cmc
add
mov
pop
cld
jb
loopne
xchg
call
push
test
imul
xor
mov
pop
nop
int3
jmp
xchg
pushf
dec
aam
sti
sahf
mov
jl
cmp
inc
ret
aad
and
xor
xchg
and
sub
scas
fdivs
cld
fistpl
loopne
mov
add
ret
adcb
loop
sarl
push
and
jmp
into
adcl
insb
adcb
ret
jg
or
int
add
and
insb
fisttpll
and
sti
rorb
pop
jl
mov
cmp
lcall
test
add
ja
add
fs
ret
jnp
inc
inc
addr16
mov
mov
fstp
mov
cmpl
and
int3
and
sti
fistpll
inc
add
adc
cmp
in
icebp
jl
std
mov
mov
inc
into
jae
xor
jge
pop
mov
fistps
push
jp
lret
out
fwait
fs
arpl
sarl
jb
lahf
imul
jae
sarl
ret
arpl
push
and
mov
mov
sarl
jge
fisubl
cltd
inc
sahf
ret
mov
jne
faddp
mov
inc
imul
loope
ja
in
cmp
cld
or
sbb
rorb
inc
subb
add
aas
add
jg
adc
flds
inc
jge
pusha
icebp
mov
loope
in
orb
lcall
das
xlat
jno
jge
call
xchg
jge
imul
jecxz
addr16
imul
movsb
repnz
and
jg
xchg
gs
inc
ljmp
ljmp
test
rolb
dec
repz
movsb
mov
mov
or
pop
popf
pop
mov
sahf
idivb
cld
or
pop
sarl
mov
bound
ret
pop
ret
pop
addb
jnp
cmp
add
xorb
inc
inc
inc
data16
mov
mov
xorl
lods
mov
jl
adc
pushf
sti
cltd
and
mov
les
pop
mov
jae
icebp
xorl
xchg
aas
mov
xchg
or
bound
xorl
and
popa
imul
roll
loope
sahf
xchg
fldl
cmp
cmpsb
into
jge
popa
stc
add
xchg
inc
add
pop
mov
test
sub
cmp
mov
pop
cmp
mov
push
shll
clc
sti
cmove
xor
orb
inc
pop
test
add
ret
std
arpl
js
push
sbb
inc
add
in
into
test
mov
add
xchg
inc
mov
or
dec
out
pop
cltd
outsl
mov
test
jmp
sti
arpl
gs
fs
popa
inc
test
movsb
jbe
lret
mull
loopne
mov
jns
repz
movsb
mov
int3
ja
das
cld
addl
fidivs
xchg
in
loope
fstps
and
jp
in
loopne
hlt
fists
aam
popa
movsb
sub
je
data16
cmp
mov
shlb
bound
push
and
loop
mov
std
pop
arpl
cmp
jl
cmp
pop
fwait
roll
std
push
cs
jb
sarl
js
ret
loop
and
repz
into
adcb
fistpll
jle
loope
clc
ds
and
lcall
add
shlb
cmp
inc
mov
lahf
jp
cwtl
cmp
inc
mov
mov
mov
lahf
cmp
mov
lret
jns
xor
dec
mov
loopne
cmpl
xor
lahf
jae
pop
mov
cmp
xchg
aas
jecxz
dec
clc
out
mov
arpl
mov
pop
les
mov
add
mov
into
add
les
cmp
pop
nop
imul
mov
xor
fidivrl
jbe
fs
mov
mov
cmpsb
test
xchg
mov
outsb
movsb
iret
in
movsb
sti
mov
and
mov
movsb
mov
mov
fs
inc
pop
jbe
fidivl
sbb
mulb
insb
mov
lahf
test
inc
sub
outsl
sbb
daa
ljmp
and
add
adc
cld
mov
popf
add
leave
adc
cld
inc
fs
jp
stc
scas
mov
jae
insb
cmpb
cmc
movsb
and
cmp
mov
andl
pop
xlat
scas
cli
sub
xchg
addr16
hlt
les
fmul
out
xchg
mov
arpl
pusha
cmp
add
inc
jg
inc
fdivr
mov
pop
jl
mov
and
pop
jle
xchg
insb
add
lock
repnz
inc
cld
ret
dec
stc
jnp
rol
ljmp
xchg
nop
adc
enter
addl
sbb
inc
xchg
mov
sti
in
popl
add
shlb
jl
inc
sbb
jmp
add
push
jge
inc
ljmp
fsub
push
ret
jmp
add
sbb
mov
ret
ljmp
test
in
fs
test
inc
cwtl
aad
jnp
subb
add
iret
cmp
dec
je
mov
ja
cmp
fsub
sub
add
adc
loopne
stos
jne
mov
sbb
pop
sbb
add
pop
fdiv
outsl
xchg
push
cmc
and
pop
jl
test
int3
cmp
fmulp
add
cmp
loopne
daa
in
pop
les
addl
pusha
cmpl
mov
add
add
popa
mov
add
arpl
ret
test
lahf
mov
mov
inc
test
adc
jbe
cmp
mov
cli
int
or
lret
shrl
mov
les
sarl
add
bound
jnp
fs
push
cmp
pop
mov
mov
mov
cmp
loop
mov
cmp
and
jecxz
mov
xchg
cmp
cmp
inc
mov
repz
shlb
je
jecxz
ret
fdivp
pop
loop
pop
test
fsub
jp
jecxz
arpl
repz
loope
mov
ffreep
js
repz
loop
pop
mov
xor
movsb
loop
jecxz
xorl
ret
add
mov
inc
je
jecxz
ret
adc
fstpt
std
xor
lock
in
rolb
cmp
mov
jl
jl
add
jmp
in
add
cmp
in
add
mov
in
ret
aam
lret
cmpb
test
mov
and
shl
mov
cmpsl
out
and
daa
jp
fldln2
mov
pop
movsl
push
subl
movsb
mov
xor
sub
mov
inc
shlb
pop
into
mov
lods
inc
sahf
hlt
xor
in
in
and
insl
and
mov
xchg
in
add
roll
inc
mov
inc
int3
add
mov
insl
ret
popa
sbb
data16
incl
in
testl
fnsetpm(287
insb
fldl
pop
cmp
adcb
in
inc
mov
repnz
fidivrs
pop
add
mov
sub
out
and
bound
stos
ret
repz
flds
mull
or
and
vrcpps
shrl
sti
xchg
mov
pop
inc
dec
dec
jecxz
mov
daa
mov
add
fstps
mov
mov
cmp
add
aas
add
pop
test
imul
nop
mull
je
mov
inc
shlb
dec
rcll
bound
sti
pop
cmp
movsb
xor
repz
in
pusha
jae
pop
mov
in
ret
mov
fnstsw
outsl
clc
mov
jle
xchg
jae
orl
mov
mov
jl
mov
inc
jl
mov
mov
rcrb
or
js
or
pop
andl
rcr
inc
pop
fbld
push
sahf
cli
mov
movsl
cld
cmp
cld
subb
loop
mov
cli
inc
das
in
movsb
repz
add
jne
mov
add
xchg
push
imul
into
add
fldl
push
imul
jbe
add
adc
lea
je
das
and
movsb
neg
pop
xchg
test
pop
in
popf
adc
adcl
mov
and
sbb
and
push
mov
subb
sti
loop
out
popa
jbe
sti
mov
andl
sti
mov
and
ret
loope
and
pusha
jle
mov
fucomp
mov
in
out
mov
es
popf
into
and
jg
out
shlb
sti
movsb
lea
inc
mov
pop
sbb
daa
repz
xchg
and
and
pop
lcall
lcall
popf
xlat
push
in
jecxz
mov
pop
xchg
and
ret
mov
test
cmp
pop
jnp
jp
cmp
mov
jge
and
rorb
inc
test
arpl
sti
sbb
sbb
loopne
sbb
popf
and
xor
mov
xchg
aas
lret
add
sarl
mov
sahf
or
sarb
and
dec
jecxz
and
lds
loop
mov
xorl
mov
inc
popa
fimull
icebp
jg
lods
mov
mov
jecxz
stos
mov
jge
std
mov
mov
mov
outsl
mov
adc
cmp
sti
mov
cmp
loope
out
cmp
sbb
ret
mov
sbb
inc
dec
cmp
std
cmp
cmp
mov
arpl
mov
or
jmp
mov
test
cmp
mov
sbb
lret
int
xchg
mov
jl
fstpt
loop
in
iret
pop
imul
fwait
aas
lahf
ja
test
jnp
mov
inc
sub
mov
lret
cmp
rolb
fiadds
hlt
jecxz
ret
popf
popa
sub
les
xchg
add
call
les
pop
dec
mov
adc
pop
cmp
and
testl
subl
mov
movsb
rolb
mov
mov
faddp
daa
in
pop
sti
test
or
bound
sahf
or
in
mov
rolb
jg
in
sub
arpl
fdivp
add
mov
and
rcl
rol
push
jnp
push
inc
xchg
fistpll
cmp
aas
loopne
ss
sarl
fcmovbe
add
loopne
cmp
fidivrl
mov
cmp
xchg
pushl
jnp
cmp
adc
pop
pop
fisubs
mov
fiadds
mov
in
xor
repz
push
xchg
jg
stos
orl
andl
out
sub
sbb
xchg
xchg
std
mov
push
mov
mov
in
mov
sbb
jg
pusha
je
dec
test
lcall
xor
mov
loopne
xor
aad
add
and
lahf
jg
ret
push
addr16
std
mov
mov
sbb
test
sbb
mov
stc
inc
rol
push
les
mulb
push
test
push
sti
int3
add
xor
icebp
out
les
hlt
add
dec
and
fs
loope
inc
push
inc
mov
mov
and
arpl
push
les
sub
sbb
rcr
inc
andb
imul
inc
mov
les
rol
enter
lret
sbb
frstor
out
pop
inc
ljmp
ljmp
pop
popa
movsb
jp
movsb
fisubs
push
inc
mov
mov
ljmp
push
jns
arpl
xchg
pop
fsubl
mov
lret
pop
aad
pop
jns
mov
sbb
bound
xchg
pop
sbb
fnstcw
mov
and
fs
rcr
add
das
add
jns
add
add
dec
and
sbb
mov
cmp
sub
mov
pop
mov
into
jnp
mov
aas
add
das
mov
jg
test
pusha
mov
sti
arpl
jl
aaa
add
dec
lahf
cmp
xlat
js
and
xor
mov
filds
loopne
add
loope
jp
iret
jg
cmp
add
mov
dec
inc
xlat
mov
pop
js
mov
dec
and
ret
cmp
mov
adc
pop
filds
ret
xor
loop
bound
mov
jl
repz
mov
sahf
ret
jge
in
idivl
repz
roll
je
jecxz
ret
fdivp
jle
push
popf
mov
hlt
and
mov
repz
add
jecxz
ret
pop
repz
pop
fnstsw
hlt
fs
ret
and
and
shrl
inc
lea
pop
roll
mov
jecxz,pt
ret
sbb
and
ret
arpl
inc
repz
sarb
ret
pop
je
jl
add
into
mov
mov
fadds
outsb
cmp
in
and
add
pop
add
jnp
cmp
cli
je
add
fwait
data16
cmp
inc
scas
jp
cld
lcall
dec
pop
pop
insb
movsb
mov
aad
icebp
jb
inc
or
les
inc
in
sahf
mov
faddp
les
arpl
mov
xchg
add
dec
jp
clc
inc
in
ds
sbb
pop
mov
sbb
enter
cmp
int
mov
movsb
ret
movsb
rolb
add
scas
jno
jne
mov
pop
mov
in
xchg
jp
mov
test
in
xlat
mov
movsb
in
mov
ret
mov
mov
sti
arpl
mov
and
shl
mov
dec
mov
jecxz
stc
pop
mov
add
sahf
out
insb
in
cmp
mov
jmp
add
icebp
and
int3
popa
mov
fidivrs
ret
cmpsl
add
jecxz
add
sbb
test
push
arpl
pop
movsb
inc
add
inc
fiaddl
popf
mov
jecxz
scas
add
ja
mov
movsb
pushf
ret
pop
mov
cmpb
mov
adc
add
cmpsl
inc
adc
sbb
ljmp
and
jge
mov
lcall
in
loopne
xchg
sti
in
jb
loop
mov
outsl
mov
addb
ret
pusha
sti
aam
ja
mov
inc
roll
or
mov
mov
cmpsb
movsb
xor
sarb
jp
bound
js
sub
mov
popf
pop
and
xlat
add
popa
stos
fstl
sub
pop
loope
and
push
mov
cmp
mov
sbb
addb
aad
test
xlat
loopne
stc
fs
mov
test
cmp
ror
mov
and
pop
adc
in
ret
mov
fiadds
js
cmpsb
mov
jecxz
lcall
repz
mov
and
pop
cmpl
jecxz
adc
xorl
data16
popa
addb
lds
lds
inc
outsb
adc
add
inc
jl
cmp
dec
ret
icebp
sahf
and
in
sti
std
pop
test
aam
std
xor
ret
and
test
cld
test
inc
inc
cmp
in
add
pop
xchg
pop
mov
ss
mov
inc
mov
jp
loope
jle
xchg
bound
in
inc
sahf
xchg
mov
bound
xorb
mov
bound
and
lea
scas
addb
fsubl
push
rorb
cmp
fwait
and
in
and
imul
inc
repz
ror
clc
sub
mov
ljmp
and
jp
push
jb
add
subb
add
ret
aas
pop
loop
push
mov
xor
mov
xchg
test
or
popf
loope
scas
pop
add
cmpb
aas
bound
fsin
icebp
ds
dec
mov
outsl
xor
addb
cmpb
lret
stc
mov
ret
mov
add
mov
ret
repnz
xor
mov
mov
mov
loop
fiadds
pop
mov
cld
in
cld
push
xchg
pop
in
and
cwtl
les
xor
push
mov
mov
inc
mov
movsb
cmp
aas
sti
mov
and
mov
add
imul
pop
rcrl
fs
loop
mov
jge
loop
xchg
inc
arpl
addl
lret
add
inc
sti
pop
sahf
cmp
jl
cmp
mov
add
cmp
inc
mov
mov
xchg
test
imul
mov
cmp
insl
push
inc
mov
fisttps
mov
xorl
jg
jp
mov
ror
inc
scas
cli
inc
mov
cmp
jl
jg
mov
repz
and
mov
mov
repz
fnsave
movsb
jl
add
arpl
repz
mov
ret
push
idivb
ret
shl
loop
lahf
mov
sbb
mov
mov
repz
loop
mov
sbb
inc
js
repz
and
mov
std
addl
je
jecxz
ret
mov
std
jo
sti
pop
mov
push
jbe
or
test
mov
ffree
add
mov
loopne
mov
faddp
js,pt
repz
mov
bound
popa
ret
pusha
repz
pop
mov
fwait
mov
les
mov
inc
ret
and
jg
lcall
fnsave
in
loope
mov
and
ret
mov
cmc
fdivrl
mov
ret
mov
xor
fs
arpl
mov
repz
shlb
je
jecxz
ret
cmp
addr16
sahf
xor
pop
out
and
nop
aam
inc
fcmovb
lret
sbb
jecxz
cld
cmp
sub
add
inc
les
xchg
inc
inc
pop
dec
inc
pop
lods
aam
addb
mov
mov
icebp
mov
shll
mov
shlb
movsb
test
and
lret
out
cmp
xor
inc
and
xchg
inc
movsb
pop
dec
enter
movsb
mov
xor
arpl
push
xor
inc
and
push
xor
sti
ret
pop
pop
in
hlt
and
aas
cwtl
mov
loopne
push
inc
lods
mov
inc
pop
in
lahf
dec
jne
rol
out
in
js
movsb
in
jnp
je
xor
loopne
fidivs
les
das
lcall
pop
cltd
in
push
mov
push
mov
ljmp
and
sub
dec
inc
in
mov
push
lods
pop
ss
cmpl
sti
add
pop
popf
les
pop
and
fnstcw
ficomps
jne
shrb
mov
add
fisubrs
into
sahf
loopne
jne
jle
jae
and
mov
or
jp
xlat
fildl
inc
test
imul
inc
fdivrs
inc
mov
push
mov
mov
mov
inc
or
cmp
faddp
and
arpl
fists
push
loope
mov
popa
aad
inc
ficomps
in
scas
mov
les
in
sub
lcall
and
nop
jp
inc
pushf
ret
lods
cmp
inc
stos
push
pusha
xchg
ret
dec
jg
cmpsb
aas
mov
insl
inc
cmp
fiaddl
xor
jae
mov
xorb
lret
pop
inc
add
lret
aam
sahf
jno
xor
inc
jno
adc
mov
mov
inc
in
mov
sti
addr16
repz
in
add
dec
mov
push
mov
es
inc
jae
arpl
mov
and
lahf
insl
jecxz
bound
scas
mov
ret
xor
fs
subl
jnp
and
and
cld
cmc
jmp
cmp
daa
arpl
lods
test
scas
inc
push
dec
scas
andl
dec
jno
bound
nop
fs
and
stos
cmpsb
addb
shrl
xlat
loopne
lods
stos
and
rclb
mov
test
xchg
idivl
in
push
mov
sti
ret
mov
js
mov
in
and
stos
jge
pop
xor
mov
popf
ret
push
fnsave
jge
push
sub
jle
jo
adc
dec
aam
out
lods
push
out
xor
loop
fs
lock
adc
jecxz
and
adc
mov
or
cld
sub
test
lods
inc
scas
mov
das
mov
cmc
dec
rol
stos
adc
dec
out
xor
jns
or
loope
int3
xchg
movsb
mov
adc
mov
mov
cmp
adc
xlat
jecxz
ret
div
mov
aam
mov
je
rcr
cmp
popa
sub
int3
imul
push
pop
ret
fwait
cmp
fsub
les
jae
imul
sarb
mov
mov
cli
mov
mov
popa
sub
pop
lcall
icebp
xchg
les
imul
mov
sbbb
cmp
ret
iret
movsb
loop
ret
in
imul
aad
add
jl
inc
mov
mov
js
fildll
pushf
pusha
xchg
and
dec
test
int3
fwait
mov
mov
sub
sahf
adc
iret
ret
sub
jnp
add
addr16
xor
inc
in
cmp
inc
mov
cmp
std
ja
jae
pop
push
mov
sub
mov
add
jns
div
in
cmp
dec
dec
mov
inc
repnz
loop
scas
shl
leave
cmp
arpl
push
mov
loop
push
and
cmc
scas
xlat
ljmp
inc
mov
push
jae
insb
ljmp
mov
push
push
xchg
loop
and
fcoml
inc
loop
inc
mov
jp
cmp
cmp
test
dec
out
pop
push
xchg
xchg
jl
mov
mov
sahf
mov
push
movsb
adcb
sarl
mov
adc
sti
mov
pop
push
insl
shll
xchg
cld
xchg
shll
fwait
mov
add
dec
mov
pop
lock
loope
push
clc
cli
decb
adc
sub
imul
mov
push
into
add
dec
push
add
iret
xor
in
fidivl
iret
les
ja
xor
jns
rcrl
lods
adcb
cld
sarl
adc
mov
inc
clc
in
repnz
jmp
fnsave
cmp
fnstenv
mov
arpl
dec
mov
mov
shrb
loope
loop
loop
call
and
pop
stos
push
inc
iret
popa
stc
cmp
mov
repz
xor
sbb
aas
push
insb
fs
ret
cmc
leave
popa
mov
loope
mov
and
xor
out
mov
stos
mov
mov
out
cmp
xor
insb
jbe
test
shll
divl
fldcw
add
out
pop
sahf
int3
pop
std
push
stos
or
pop
sbb
cs
mov
cli
push
fs
ret
mov
mov
frstor
clc
ret
sbb
rcrb
push
pushf
add
sub
dec
loop
enter
jo
addr16
cld
pop
jae
inc
ljmp
subl
inc
movsb
jnp
cli
inc
mov
jno
adc
inc
loope
mov
cmp
sbb
push
pushf
inc
jo
loope
stos
test
and
fbstp
push
mov
js
or
stc
and
pop
fs
aad
cmpb
ret
pop
cld
sbb
cmp
flds
xor
add
pop
in
mov
inc
pop
fs
test
jmp
inc
jmp
dec
mov
leave
aas
rcr
lods
popf
and
jbe,pt
insl
push
mov
jae
mov
in
les
mov
cmp
xor
jecxz
add
lahf
pushl
lods
das
add
fidivl
ret
push
bound
adc
mov
pop
fldt
pop
mov
inc
test
and
fistps
sbb
roll
pop
mov
movsb
shlb
mov
inc
add
or
pop
rcr
mov
dec
add
insl
mov
fprem
faddp
inc
add
jecxz
mov
rolb
and
add
cmp
sahf
repnz
jne
rcll
inc
fwait
sbb
jp
bound
sub
je
les
enter
push
bound
les
nop
ljmp
sahf
mov
test
repz
jle
loop
les
xor
rol
out
loop
and
and
xchg
cmpl
and
bound
mov
mov
js
sti
lods
in
mov
addl
std
cmpsb
and
icebp
xor
and
add
enter
fstl
inc
add
ret
mov
cmp
sti
or
ret
in
cltd
jl
rep
cmc
icebp
add
mov
mov
rolb
lahf
aaa
inc
fildll
fisubl
ret
add
add
loop
in
test
lods
mov
cmp
stos
pusha
jne
mov
roll
stos
fucom
pop
out
out
movsb
leave
sbb
pop
xor
push
pop
and
loopne
cmpsl
fidivrs
loope
inc
outsb
ficoms
lahf
shlb
and
in
inc
ja
dec
mov
in
jg
ja
xchg
mov
stos
je
outsl
fdivp
loope
mov
aas
add
ja
shlb
std
push
pop
inc
sub
inc
rol
dec
mov
lahf
inc
popf
xchg
cmp
fwait
cltd
mov
mov
mov
test
inc
in
std
xor
jp
and
mov
subl
in
arpl
sbb
mov
popa
dec
out
mov
dec
push
les
fwait
inc
push
push
arpl
rolb
add
ret
inc
jae
rolb
or
inc
mov
arpl
jns
mov
ljmp
rolb
and
adc
pop
jns
movsb
arpl
mov
fs
pusha
ljmp
push
and
adc
xor
dec
loopne
les
inc
mov
fs
jecxz
loop
add
mov
and
inc
subb
xorb
icebp
movsb
mov
sti
jecxz
mov
sbb
popa
fmul
jl
add
movsb
sti
in
les
pop
and
loope
popa
mov
sbb
int3
movsb
and
mov
and
rcrb
popa
cmpsb
inc
shrb
test
leave
mov
out
inc
loop
push
mov
popa
repnz
aad
push
jb
mov
sub
mov
jg
mov
popa
or
aad
stos
loope
popf
rcl
stos
and
jg
mov
inc
mov
add
test
inc
adcl
push
mov
mov
outsl
rcrl
mov
addl
and
movsb
push
ret
push
outsb
fwait
aad
mov
lret
popf
and
push
fsubs
dec
fs
insb
je
jge
ret
mov
push
jae
in
fidivrs
or
ret
das
cmpl
in
popl
sahf
mov
rorb
jecxz
loopne
inc
jmp
mov
lods
inc
mov
ror
or
jb
add
arpl
xchg
pop
inc
dec
dec
push
aas
std
and
ret
mov
in
les
jnp
push
rcrl
mov
arpl
add
cmp
jl
add
and
cmp
arpl
jl
cmp
pusha
addr16
in
sarl
mov
pop
mov
loop
loop
scas
sub
push
jl
cmp
cmp
aam
pop
fcmovb
add
jmp
inc
les
aam
bound
lret
test
sbbl
bound
loope
popa
xor
subb
sti
hlt
and
adc
lahf
sub
sahf
ljmp
rolb
and
loopne
mov
je
fstpl
and
mov
pop
rcl
ret
sbb
bound
sbb
shl
mov
idivb
bound
jg
pop
cmc
in
mov
movsb
movsb
pusha
jnp
pop
and
addr16
jno
pop
mov
inc
data16
cmpsb
mov
cmp
loop
sub
cmp
inc
xchg
scas
mov
pusha
fmulp
and
ljmp
mov
ja
add
add
and
lret
cmp
in
inc
add
imul
roll
lret
mov
jmp
out
aad
je
sub
sbb
and
cmp
mov
loope
sar
mov
dec
add
cmp
stos
orl
fnsave
or
cmc
movsb
xor
movsb
or
and
pop
arpl
rorb
aaa
inc
loopne
and
inc
aad
or
arpl
in
pop
xor
popa
movsl
push
aas
rcrb
pusha
repnz
fdivrs
popa
loope
cmc
xor
fmul
les
fadds
or
test
scas
fwait
jns
andb
lret
fs
ret
and
lret
les
ss
xchg
test
inc
xchg
ret
shll
inc
call
hlt
sbb
lock
mov
add
cmp
jl
mov
xchg
enter
lods
fists
jg
add
or
popa
inc
push
int
loope
mov
loopne
sahf
adc
loopne
jne
inc
pop
mov
xchg
mov
or
sub
jmp
mov
inc
add
fidivrs
mov
and
cmpl
ficompl
mov
pop
pop
movsl
xchg
shl
sti
add
divl
gs
pusha
mov
rcrl
std
mov
pop
loope
mov
fwait
cmp
mov
pusha
mov
adc
mov
jl
mov
les
je
jecxz
ret
and
pop
jle
jge
cmp
mov
add
clc
ret
xor
pusha
sbb
cmp
jge
repz
mov
test
ret
pop
sub
les
ret
std
icebp
or
daa
in
mov
out
sahf
dec
xchg
addb
popa
enter
fucomip
lret
int
sti
in
pop
enter
out
dec
inc
and
add
fs
hlt
adc
mov
dec
adc
js
insb
jp
loope
imul
jne
sbbl
out
adcb
insl
loop
pushf
fnstenv
sti
jl
ret
jge
shll
cs
cmp
jnp
lcall
mov
fcomp
fidivrs
pop
add
inc
adc
or
sarl
pop
fisubs
add
loop
push
mov
jp
fistpl
loopne
je
jl
mov
adc
shlb
mov
pop
mov
aam
jle
inc
jecxz
fnsave
mov
mov
and
pusha
lods
test
test
mov
faddl
nop
mov
mov
mov
cmp
mov
jmp
repz
es
iret
ret
or
movsl
mov
mov
and
pushl
pop
and
pop
mov
sbb
xchg
popa
outsl
add
mov
jge
fdivrs
add
stos
and
cmpl
inc
insl
jg
mov
nop
rorl
fcomps
inc
test
ret
orb
inc
shl
test
nop
xor
jle
loopne
and
or
cmp
or
bound
bound
fwait
inc
cli
les
fs
shlb
cmp
repnz
fidivs
icebp
andb
addb
ret
fs
xchg
fs
popf
dec
scas
pop
inc
mov
ja
in
stos
mov
shll
cld
pop
push
xchg
out
cmp
js
shrb
jl
add
js
mov
jl
test
je
fs
push
in
outsl
leave
add
fucomip
cmp
push
add
popf
inc
lret
in
jne
ds
pop
xchg
add
aad
inc
sub
fldl
rcrb
les
shll
sahf
mov
adc
adc
sahf
sbb
inc
jge
xchg
and
inc
xlat
in
pop
adcb
or
and
insb
adc
fbstp
popf
ret
pop
mov
in
push
fnstsw
inc
add
xorb
ret
push
faddp
mov
in
gs
rolb
aas
adc
push
inc
jns
arpl
rol
xlat
lods
les
rclb
in
dec
lahf
out
les
add
cmp
loopne
mov
call
dec
jbe
loope
and
ljmp
insl
out
aas
icebp
loopne
bound
sarl
mov
xchg
gs
xor
loope
mov
push
mov
gs
fisubs
pop
int
or
xchg
test
les
iret
inc
sti
xor
bound
stos
xor
inc
cmc
pop
inc
mov
pushf
icebp
bound
cmp
add
jmp
and
push
mov
rcll
ljmp
add
inc
test
jne
xor
aas
push
mov
mov
and
andb
inc
cmp
jae
mov
jl
sub
jmp
addl
and
fmul
shlb
jns
mov
cmp
cmp
sti
sub
and
push
ret
jmp
andb
and
inc
js
mov
mov
mov
mov
xor
and
ret
sbb
jae
mov
and
mov
mov
sbb
nop
adc
addb
inc
fnstsw
jge
sbb
lds
cmp
and
movsb
stos
lds
mov
std
cmpsb
sbb
mov
bound
jno
inc
adc
adc
ret
mov
aaa
mov
or
test
xchg
mov
mov
hlt
dec
jecxz
ret
push
leave
loop
mov
cmpsb
ret
stos
stc
add
rolb
push
pusha
jge
daa
mov
movsb
mov
add
fidivrs
xlat
and
inc
jno
dec
js
mov
sti
aas
xor
std
xchg
add
mov
les
out
lahf
or
push
stos
mov
jg
js
or
lahf
loopne
add
jle
jecxz
cmp
pusha
fcomps
bnd
adc
mov
or
loope
jecxz
mov
outsl
and
test
frstor
mov
fs
popa
lahf
ljmp
pusha
add
test
mov
fnstcw
mov
push
mov
je
push
or
in
sbbb
popa
mov
xor
mov
outsl
mov
stos
add
add
fidivrl
mov
loopne
scas
mov
insb
mov
mov
shrl
gs
inc
ja
shrb
inc
cmp
pop
and
and
arpl
fcomps
fs
dec
xchg
scas
add
int
mov
push
add
mov
in
mov
add
and
cmp
into
inc
mov
shl
out
or
jl
loope
inc
arpl
cmpsb
jl
out
fidivrs
jl
iret
test
cli
mov
testb
in
les
daa
and
mov
imul
cmpsl
arpl
arpl
fcmovbe
loope
sub
xchg
mov
mov
sbb
dec
and
mov
popf
sbbb
jle
cmp
jl
into
and
push
test
jle
pop
mov
lahf
sbb
add
pop
xchg
popa
call
loope
loop
inc
stos
fwait
popf
inc
sahf
pusha
cmp
mov
mov
icebp
std
cmpsb
push
push
ret
dec
daa
inc
in
ds
mov
test
push
js
cmp
mov
cmpsb
mov
pop
cmp
into
add
jl
mov
jge
adc
inc
or
std
repz
pop
pop
pop
shll
test
int3
cmpl
test
mov
popa
cmp
in
sarb
push
mov
outsl
orb
in
push
add
mov
sbb
js
mov
jo
fwait
add
sarl
add
mov
dec
inc
inc
inc
int
loopne
add
rcl
cmp
add
icebp
add
lcall
loopne
into
add
fadd
or
inc
aas
in
push
in
dec
sbb
inc
les
test
inc
cs
fnsave
loope
shll
scas
out
aas
mov
setge
fs
shrb
je
dec
loop
insb
in
mov
inc
dec
fcmovnb
sahf
mov
cmpsl
sub
inc
loop
fs
sub
outsl
in
lret
fcompp
cltd
push
mov
loope
xchg
pop
or
nop
fidivrs
pop
cmp
inc
mov
pop
jl
jl
add
mov
fiaddl
pop
test
xchg
icebp
and
rolb
inc
ret
loope
add
loope
jnp
and
jl
xchg
mov
inc
mov
adc
es
and
and
jne
stos
sahf
frstor
jp
cmp
icebp
movsb
dec
adc
pop
aad
orb
popa
es
test
mov
add
mov
jg
mov
mov
test
jg
jecxz
add
add
adc
popa
jg
scas
pop
sbb
mov
cmpb
jp
repz
pop
insb
jle
in
mov
fdivp
and
ja
pop
sahf
in
and
jne
ja
mov
xchg
pusha
cmpsb
fsubp
loopne
cmp
lahf
jne
mov
in
and
jno
adc
and
fs
jno
add
test
outsl
test
mov
outsl
sbb
sbb
pop
cmp
inc
lods
cmpb
or
lret
jg
fstl
adc
jae
jp
xchg
std
lret
sti
loop
jmp
aas
fnstsw
jno
adc
jle
xor
xchg
mov
lods
adc
popf
pop
pusha
pop
cmpb
rclb
arpl
inc
xchg
fidivrs
jle
popa
push
inc
and
sub
std
nop
fnclex
xchg
ss
sahf
xchg
or
sbb
sub
add
ljmp
jecxz
pop
lock
inc
sti
cmp
sahf
sbb
mov
jmp
test
mov
es
in
aas
jl
rep
loop
push
leave
je
jecxz
ret
inc
repz
loop
gs
pusha
pop
ja
mov
ds
mov
rclb
fisttps
andb
push
popa
das
scas
mov
xchg
loope
ret
sbb
push
mov
sahf
xchg
in
mov
lcall
inc
aas
test
sub
in
and
mov
sbb
fs
popa
daa
mov
or
pop
loope
mov
inc
jge
out
and
sbb
inc
fsubp
iret
xor
mov
mov
mov
cmp
pop
stos
lcall
fst
mov
movsb
xchg
in
arpl
cmp
lods
pop
loopne
push
repnz
test
cld
in
pop
pop
add
stos
fs
sbb
mov
loopne
sub
jecxz
stos
pusha
cmc
sarb
add
add
pop
fidivrs
push
and
fisubs
ss
jmp
xchg
and
fs
mov
outsl
and
pop
jg
mov
sub
mov
xor
sub
insl
lret
cmp
inc
xor
pop
fldenv
mov
test
out
repz
int
loopne
fadds
shlb
repnz
std
aaa
ret
sahf
and
inc
pop
loope
pop
ret
lea
scas
push
data16
out
test
outsl
cmpsl
scas
jg
sbb
mov
outsb
and
and
lahf
fdivs
mull
fdivs
mov
inc
mul
mull
fs
fdivrs
rolb
pop
fwait
dec
inc
in
mov
sahf
sti
push
push
imull
jp
fsub
jo
std
mov
adc
hlt
shll
and
popf
aas
and
in
dec
cmp
hlt
mov
inc
xchg
fcompl
sbbb
sbb
mov
je
push
call
adc
add
sti
mov
dec
js
sti
ds
arpl
mov
cmp
lret
add
mov
mov
pop
pusha
lret
and
jmp
rol
out
and
loop
cld
fsubr
cmp
fs
sahf
les
les
ljmp
mov
loop
ret
jmp
mov
mov
jno
add
je
jl
inc
and
popa
aas
repz
add
bound
loop
jecxz
in
and
and
add
xchg
cmp
mov
jge
ret
ror
jnp
cmp
cmp
pusha
mov
push
sub
orl
orl
ret
add
inc
shlb
inc
shlb
push
ds
xor
jne
mov
lds
in
and
cmp
add
mov
cli
rorb
int3
fmuls
mov
add
mov
mov
fbstp
sahf
push
mov
add
loope
nop
add
xorb
and
jb
jge
roll
in
loopne
xchg
out
les
shlb
and
test
loope
cmp
mulb
in
mov
rcrb
and
adc
inc
push
xor
aaa
jl
fildll
aaa
pop
mov
and
stos
lds
lahf
idivb
sub
jl
add
and
roll
in
add
jecxz
inc
jl
inc
jecxz
pop
mov
pushl
test
insl
les
lret
add
mul
jmp
les
stc
lods
stos
aas
in
shrl
mov
std
adc
xchg
std
idiv
push
mov
test
cld
sub
adc
frstor
jecxz
sahf
jl
mov
mov
cli
fs
jmp
cmpl
les
ljmp
rcrb
sub
mov
jge
mov
ljmp
repnz
cmp
ret
repz
xchg
jg
jecxz
stos
fldln2
cmp
adc
add
and
dec
bound
stos
inc
mov
add
roll
shlb
pop
sbb
imul
pop
pop
popa
iret
in
mov
cmp
mov
cli
xchg
imul
mov
flds
popa
test
loop
sbb
imul
mov
out
loope
arpl
jbe
loop
sbb
mov
or
sbb
xorb
cld
ret
arpl
lret
cmpl
mov
lods
loopne
js
arpl
adc
in
inc
cmp
sub
outsb
xchg
xchg
imul
movsb
and
in
pushw
popa
pop
jno
fldenv
sbb
test
inc
decb
stos
imul
mov
and
stc
cltd
add
clc
dec
fldcw
lcall
popa
add
movsl
insl
pop
ljmp
or
and
repnz
mov
mov
mov
pop
popf
mov
incl
cmp
mov
jg
jmp
adcb
loope
xorb
mov
je
jae
sbb
ret
push
jns
cmp
jge
fmuls
inc
es
xchg
cmp
call
loop
push
push
imul
cltd
imul
cli
repnz
stc
push
movsl
pop
mov
out
fwait
cld
jnp
sarb
lahf
mov
xor
mov
je
hlt
jle,pn
mov
jnp
xor
loopne
out
frstor
and
shlb
inc
mov
lcall
push
daa
cmp
jecxz
xlat
jg
cld
cmp
sti
bound
movsb
jg
in
adc
mov
in
fbstp
jecxz
es
clc
stc
andl
jmp
xchg
sbb
loop
jp
ret
movsl
add
rcrb
repz
shr
mov
and
popf
cli
aad
mov
ret
shll
popa
lret
subl
leave
sti
jp
insl
cmp
and
cmp
outsl
mov
fstps
lock
and
les
shlb
popa
fmull
fmull
cltd
xchg
pop
inc
ljmp
and
fldl2t
pop
cltd
jb
mov
loop
mov
nopl
jle
test
loope
or
xor
into
pushf
fdivl
decb
push
adc
cmp
cwtl
add
hlt
inc
xchg
test
and
xchg
js
fldcw
cmp
lods
xchg
xor
jb
add
lock
sbb
ret
dec
add
and
sub
popa
inc
int
ret
push
test
repnz
push
je
insb
xchg
mov
sbb
mov
mov
je
and
inc
cmpsl
mov
ljmp
sahf
add
inc
les
mov
out
mov
xchg
push
xorl
and
jecxz
xchg
sbb
roll
out
and
fs
movsb
stos
popa
les
dec
sub
inc
lcall
sti
test
dec
sarl
int
js
mov
fidivrl
addb
repz
jle
fs
mov
push
cmc
mov
hlt
xor
and
cmpsl
xchg
stc
inc
inc
aad
in
sub
sarl
sub
push
aam
icebp
or
sbb
mov
pop
pop
jle
jp
or
xorb
cmpb
dec
inc
lcall
mov
fnsave
add
sarl
sahf
adc
dec
jle
mov
jg
jo
andl
hlt
inc
mov
and
div
hlt
add
ret
cmp
and
repnz
cmp
jns
or
es
add
inc
add
mov
les
pop
ret
mov
adc
inc
nop
je
movsb
push
outsb
xchg
popa
cmpl
mov
notb
setg
jecxz
outsl
push
inc
cld
push
pop
in
bound
nop
mov
adc
xor
push
mov
inc
push
aaa
outsb
shrl
sbb
imul
xchg
sub
push
adc
mov
sahf
movb
mov
into
aas
push
adc
cltd
std
insb
mov
test
pop
sbb
insb
push
icebp
add
or
cmp
adc
xchg
insb
cmp
jmp
andb
popa
mov
gs
push
xchg
jl
adc
mov
adc
or
xchg
fstps
cltd
xor
mov
mov
std
inc
push
popa
cmp
jl
movsb
pop
mov
movsb
shl
mov
mov
sarl
jmp
loop
repz
sub
jecxz
dec
pop
movsb
shrb
fsts
xchg
mov
stc
out
jl
sbb
in
mov
imul
loope
imul
mov
std
pop
ja
jl
sbb
nop
imul
mov
or
lods
mov
arpl
loop
mov
xchg
add
test
mov
xchg
sbb
xor
and
lahf
push
fldt
push
imul
jbe
out
push
mov
loopne
stc
cmp
xchg
mov
push
arpl
insl
gs
lea
sub
xchg
jno
mov
imul
ljmp
loopne
pop
cs
fisubs
inc
popa
fcomi
in
sbb
or
jnp
mov
jp
mov
repz
call
test
scas
jae
rorl
nop
sahf
repnz
cmp
mov
jae
mov
jecxz
mov
push
jno
xor
inc
pusha
inc
arpl
fcmovnu
lods
push
shll
lcall
sti
std
fnstcw
adc
xor
ror
xchg
cld
in
inc
lods
mov
movsb
add
shll
sbb
out
mov
les
xor
inc
mov
pop
and
repnz
stos
ficoms
add
pop
imul
fucomip
pop
iret
fs
rol
xchg
repz
fstl
add
leave
and
fdivr
popa
hlt
add
pushf
add
dec
test
ret
mov
mov
add
ljmp
imul
arpl
movsb
mov
shll
iret
jmp
add
arpl
arpl
mov
pop
loope
dec
mov
push
pop
xchg
test
inc
mov
mov
fnstsw
loopne
push
mov
jp
test
nop
rolb
add
mov
dec
in
loopne
add
ret
imul
xor
mov
jl
mov
inc
jl
out
mov
cmp
lret
jno
add
mov
mov
iret
add
imul
insb
xchg
out
xchg
rcrb
cmp
jnp
stc
les
bound
cwtl
test
cmc
fs
sahf
cmc
ljmp
jb
xchg
jb
mov
sbb
inc
cmpsl
lret
and
push
jo
imul
mov
loopne
popa
jbe
xchg
jmp
mov
test
jbe
rolb
rol
ret
jbe
jl
jecxz
movsb
inc
aas
xorl
out
pusha
and
or
movsb
mov
jnp
imul
js
out
add
lahf
cmpsb
je
bound
or
popa
mov
mov
mov
fidivrs
shlb
add
subl
xor
aas
out
add
ret
insl
inc
lcall
int3
scas
jg
jae
insb
rcrl
sarb
mov
cmp
adc
xor
mov
popf
inc
loope
sarl
xchg
data16
inc
cwtl
ret
data16
cmp
fnsave
sti
stc
lods
push
inc
mov
and
jmp
loop
inc
orb
mov
iret
mov
cwtl
test
adc
repz
test
cmp
icebp
add
and
mov
loope
lret
or
xlat
icebp
fcoml
repz
jo
adc
movsb
sbb
mov
insb
xchg
lock
cli
aaa
and
test
adc
mov
pusha
pop
ret
jbe
xchg
insb
in
xchg
in
js
jg
ljmp
jmp
push
fs
ret
and
mov
jp
add
loopne
arpl
and
jl
pop
iret
add
lods
mov
rcll
mov
mov
dec
mov
mov
test
repnz
push
frstor
pop
or
add
inc
dec
icebp
mov
add
sahf
loopne
popa
sbb
mov
add
inc
nop
rolb
add
or
lods
push
mov
stos
xchg
stos
mov
loope
mov
mov
lret
icebp
stc
mov
xlat
insl
cltd
test
in
inc
jmp
loop
inc
fs
jl
mov
scas
and
mov
mov
enter
xchg
mov
adc
push
shlb
mov
inc
ret
jno
arpl
add
xor
sbb
pushw
incl
inc
std
nop
shlb
and
and
push
lret
in
mov
xchg
add
in
add
add
push
in
inc
aad
les
int
hlt
in
iret
mov
mov
stc
inc
mov
sar
fcmovnu
arpl
mov
and
hlt
cmp
test
mov
xchg
pushf
xor
sub
jne
je
dec
aas
mov
repnz
xchg
mov
adc
clc
lahf
aas
pop
rorl
xor
and
mov
sbbb
faddl
incl
cwtl
dec
or
xchg
push
pusha
jo
ret
mov
mov
bound
rcrl
or
push
push
jecxz
jb
and
mov
inc
push
in
rcrl
mov
or
test
mov
les
outsb
inc
iret
inc
js
mov
hlt
mov
push
cmp
add
adcb
inc
add
rclb
repnz
or
fldenv
dec
sbb
mov
cmp
push
shll
rcrb
inc
andb
fcoml
jmp
xchg
lret
inc
adc
ret
sahf
test
repnz
repnz
sbb
add
push
mov
mov
and
jl
dec
imul
xchg
adc
jge
fisttpll
jae
jg
out
clc
in
pusha
inc
fld
cli
xor
ret
pop
dec
icebp
ja
push
es
ret
imul
push
out
fiaddl
hlt
sub
or
ja
mov
or
inc
insb
lret
cmp
dec
adc
shl
add
inc
cmpb
mov
outsl
mov
arpl
insl
repnz
add
sti
xorb
sbbl
int3
xor
lcall
mov
pop
jecxz
test
addb
scas
jno
xor
mov
adc
subb
cmp
mov
lahf
inc
mov
xchg
push
cmp
mov
sub
or
add
or
iret
push
hlt
shrl
xchg
std
jne
mov
inc
call
and
push
adc
jmp
xchg
and
push
enter
xor
xor
mov
ret
mov
dec
sub
mov
les
xor
and
add
add
fcoml
ljmp
ds
icebp
and
jno
mov
arpl
inc
and
xor
push
ret
mov
cmp
mov
in
and
mov
sbb
rol
mov
pop
ret
mov
ret
jmp
bound
fldt
jno
cld
add
shlb
inc
lret
loop
mov
decl
ret
loop
mov
adcb
xchg
pop
mov
and
rcrl
mov
orb
jb
sbb
push
mov
in
test
jecxz
dec
add
lds
mov
mov
aam
stc
mov
or
sarl
scas
lcall
and
cmp
les
inc
pop
or
arpl
fnstsw
lock
cs
mov
xor
popf
xchg
mov
mov
jns
mov
aad
push
ja
mov
mov
movsb
xchg
add
adc
sti
xor
mov
testl
xchg
loop
cld
add
loope
shll
sub
je
in
insl
sbb
dec
out
das
fildl
push
xor
sub
int3
dec
ds
ds
mov
jecxz
les
jb
push
jo
mov
push
in
fistps
in
push
pop
adc
arpl
cmp
pop
mov
in
push
testb
jns
out
xchg
push
jecxz
pop
lret
lret
cli
sahf
shlb
pop
xchg
mov
mov
xchg
movsb
negb
xor
in
stos
les
inc
dec
sub
pop
jno
mov
orb
cmpb
lds
and
ret
addb
test
cmc
jmp
loop
inc
jecxz
cmc
shl
xor
sub
jmp
ss
out
fisubs
loope
sbb
imul
xchg
popa
movsb
and
jns
or
mov
subl
lret
pop
xor
or
fidivrl
jae
cmp
add
sti
push
out
in
and
pop
inc
inc
xor
mov
and
inc
mov
inc
std
cwtl
test
stos
bound
fdivrs
cmp
add
lods
sbb
jae
in
ds
mov
jb
mov
lret
add
ljmp
cmp
dec
stc
mov
xor
scas
lahf
cmp
mov
out
inc
and
and
mulb
loop
nop
shlb
jecxz
pop
and
pop
push
jno
arpl
and
fnsave
and
subb
and
inc
xchg
fidivrl
mov
test
pop
and
inc
fs
cmpsb
mov
and
sub
xor
testl
rorl
lock
sti
adc
mov
lods
fwait
mov
fnstsw
sub
js
in
mov
addr16
lahf
inc
daa
popa
jge
cmpsl
xor
jno
insl
push
inc
orl
imul
dec
jb
sti
cmp
jnp
sti
movsb
aad
les
data16
push
lea
pushf
jge
pop
leave
pusha
fbld
repnz
mov
inc
inc
aad
sti
inc
enter
sub
pop
mov
lods
shlb
arpl
mov
stc
push
fisttpll
cli
mov
cmpb
inc
and
cmp
js
ds
mov
and
loope
and
mov
mov
mov
sti
and
lds
mov
inc
add
dec
stos
ja
insb
pop
add
xchg
mov
xor
ljmp
jl
push
popa
in
lret
bound
fdiv
mov
sbb
jl
lret
int
pushf
pop
ds
jne
fsubrl
push
ret
addl
mov
icebp
fldcw
ficompl
ds
loope
cmpl
loope
dec
je
out
popf
pop
inc
insl
jb
adc
cli
mov
xchg
add
out
or
daa
fisubl
jne
mov
or
push
push
jmp
or
lret
scas
or
xor
add
push
or
xchg
loop
xor
xchg
mov
lds
mov
ret
and
ret
bound
cmp
sub
mov
or
jg
repz
leave
inc
cwtl
out
adc
imul
pop
xor
or
jge
jecxz
mov
jbe
xchg
add
mov
mov
pop
push
movsb
das
test
pop
mov
adc
jge
bnd
orb
je
aaa
lods
aad
adc
rcrb
leave
or
and
mov
mov
dec
in
gs
fisubs
cs
clc
mov
roll
inc
and
ljmp
int
ja
cmp
or
add
std
cli
mov
dec
mov
test
in
dec
test
mov
push
jae
mov
stos
pop
data16
jp
lods
cmp
ret
xor
xchg
mov
inc
xor
mov
pusha
adc
stos
clc
or
cli
fisubrs
ret
sub
jo
cmp
adc
js
hlt
sti
outsl
pop
lret
or
mov
je
mov
stos
dec
ja
test
loop
mov
sbb
clc
push
cmp
jp
test
fwait
aas
pusha
pop
loop
lcall
cmp
imul
adc
add
pop
arpl
fisubs
fisttpl
mov
xchg
pop
sar
jg
rcll
mov
xchg
ss
in
push
bound
mov
add
orb
les
iret
jb
mov
cmp
jge
ret
lods
mov
popf
xchg
and
push
sti
cwtl
daa
js
pop
rorl
cmp
inc
scas
and
xor
and
mul
lcall
in
push
add
nop
add
xor
cmp
jb
fs
fisubrs
mov
push
icebp
add
mov
jbe,pt
mov
dec
fstps
mov
ret
lds
out
add
adc
xchg
sahf
adc
bound
jp
mov
mov
or
je
add
fs
mov
shrl
mov
lcall
and
lock
add
mov
test
ret
scas
pop
jp
mov
push
loopne
aam
popf
out
and
push
mov
andl
inc
fcmovnbe
sahf
ret
loop
xor
pop
fcompl
mov
xor
js
dec
and
in
call
mov
xor
rolb
shrb
dec
ds
adc
jno
mov
mov
repz
dec
cmp
and
cmpsb
cmp
dec
or
mov
js
ja
jl
aam
test
repz
sti
inc
in
test
sbb
out
mov
mov
ljmp
fs
fcmovne
add
fs
jae
cltd
and
fimull
mov
sahf
and
andb
pop
jp
bound
stos
inc
and
shrl
push
mov
movsl
sbb
pop
addl
aam
mov
xchg
ret
sarb
out
arpl
ret
jecxz
bnd
xchg
in
mov
ret
sbbl
shrl
loopne
xor
mov
and
in
jb
in
outsb
sub
fcomip
jae
pop
test
jle
gs
sarl
cld
and
cltd
adc
jbe
cmpb
sbb
movsb
xchg
add
cmp
xchg
jno
repnz
add
fs
cld
and
pop
xchg
stc
call
hlt
sbb
adc
fldcw
frstor
and
call
inc
push
cld
inc
ja
cli
cmpb
pop
and
fsubrl
or
stc
test
mov
push
push
shlb
lret
cmp
outsb
test
push
pop
jle
popf
add
jno
aad
fidivrs
push
add
jb
cltd
mov
les
mov
mov
xchg
sarl
add
push
jne
xorb
loopne
dec
arpl
mov
jecxz
in
dec
loopne
sbb
inc
xchg
inc
mov
je
dec
fsubl
sub
lret
ret
filds
and
jge
mov
push
inc
xchg
add
inc
and
mov
repnz
add
xorb
inc
repnz
icebp
jle
jno
test
test
xchg
cmp
cmp
and
and
cmpsl
nop
test
sbb
jne
adc
mov
jp
mov
js
test
add
test
cmpsb
lock
hlt
dec
and
push
cmp
mov
out
cmpsb
in
das
arpl
fldcw
pop
and
outsb
into
fmul
xchg
mov
xchg
sahf
movsb
lret
xor
jnp
or
flds
inc
cmp
mov
xor
inc
jno
je
ret
jb
movsb
scas
jae
sub
loope
inc
pushf
arpl
add
movsb
outsl
cmp
loop
stos
cmpb
imul
and
add
jae
testl
mov
push
icebp
dec
mov
and
movsb
inc
test
xor
mov
add
and
sarb
aaa
les
js
adc
or
sbb
in
mov
mov
or
repz
sub
mov
aas
rcr
fisttps
mov
inc
in
ret
inc
and
sarb
pop
and
bound
mov
or
fwait
test
out
hlt
mov
jno
and
push
xchg
dec
xchg
xor
mov
push
cmp
out
jle
jle
add
in
dec
xor
test
inc
pop
jb
loope
push
std
loope
dec
xor
xor
pop
cmp
inc
outsb
xor
push
loope
aad
loope
and
jb
inc
mov
xchg
outsl
imul
int
in
and
cld
ret
hlt
jmp
mov
push
inc
and
rolb
xchg
pop
push
iret
les
inc
orl
sub
adc
xchg
pusha
pop
outsl
mov
and
adc
testl
adc
and
and
fs
mov
jb
arpl
mov
cmc
insl
xor
jmp
and
pop
icebp
fs
mov
and
fistpll
and
inc
aad
and
stos
and
inc
stos
add
inc
addb
xchg
pop
add
mov
test
mov
add
inc
xor
lahf
add
add
inc
jbe
ffreep
addb
pop
aad
ds
add
mov
sbbl
fists
and
movsb
jne
cmpsb
icebp
push
xor
and
mov
les
jle
xlat
cmp
mov
mov
jb
addb
jle
outsb
popl
imul
hlt
scas
push
xchg
cmp
sub
rolb
fistpll
outsl
rclb
arpl
pop
test
jnp
lahf
ffreep
inc
jnp
in
ljmp
cmpl
or
icebp
xor
fstl
stos
jnp
mov
xchg
clc
lods
add
and
mov
jp
movsb
imul
push
mov
push
sbb
jle
out
arpl
mov
xlat
inc
shr
cli
std
imul
xchg
jae
inc
mov
repnz
out
imul
push
inc
subl
repz
nop
mov
mov
aas
pop
push
push
jle
mov
cmp
push
and
fs
repnz
ljmp
ja
repz
sti
imul
sbb
scas
ficompl
or
repz
xor
xchg
sub
les
rorb
shll
xchg
cmp
rcll
pop
insl
rolb
jnp
outsb
and
popf
shll
outsb
scas
rol
loope
jno
cmp
jae
ss
jnp
cs
xchg
mov
inc
mov
imul
aas
add
adc
sbb
ret
out
adc
popa
sbb
test
sbb
push
loopne
jl
je
dec
mov
stos
jb
pusha
add
iret
shll
fstl
add
inc
xchg
mov
leave
imulb
js
rorb
rcl
xorl
stos
mov
fidivl
xchg
cltd
jmp
ds
pop
repnz
push
cmp
ret
loop
sbb
xchg
mov
xorl
pop
ja
lods
sub
cmp
adc
inc
cltd
and
mov
mov
cmp
hlt
repz
dec
xchg
fwait
iret
and
add
loope
dec
ror
push
dec
adc
cmp
insl
bound
adc
sar
cld
inc
hlt
fists
inc
dec
les
fs
adc
shl
mov
call
lds
icebp
les
jo
loop
mov
push
jo
out
adc
cmpsb
pushf
imul
loope
stos
pop
add
mov
pushf
packsswb
mov
sub
fsub
imul
inc
push
xchg
mov
jb
bound
daa
mov
adc
mov
je
int
ret
les
loope
bound
mov
mov
ficoms
add
xchg
cwtl
iret
xor
mov
inc
movsb
jecxz
mov
mov
add
jp
jb
mov
movsb
mov
jecxz
fiadds
mov
and
test
ret
add
add
push
mov
xorl
lahf
rcll
addr16
lock
and
outsl
aas
sub
iret
je
popa
fcoml
jp
fs
stos
icebp
xlat
jg
fs
insb
or
clc
cltd
cmp
pop
lea
xor
clc
xor
imul
ds
rcr
popa
jne
hlt
pop
jge
aad
orb
cwtl
mov
dec
push
push
mov
jecxz
les
pop
int3
subb
mov
add
jg
ror
cmp
ret
int3
lea
push
popa
inc
jmp
shrb
cmc
xchg
ret
or
push
lret
and
pushf
and
cs
xor
cmc
xlat
push
fiaddl
jb
les
ret
push
loope
jecxz
adc
ljmp
xor
cmpsl
pusha
jmp
jb
fbld
les
mov
test
les
test
rcll
and
cmp
cltd
add
jmp
out
lret
cmp
lock
mov
ret
lret
cmp
mov
lods
cmpb
andb
imul
xor
jno
pusha
loopne
add
push
push
mov
or
fnstsw
and
add
shlb
in
mov
arpl
pusha
inc
xchg
in
lret
in
jb
test
test
lock
inc
cmp
jnp
jge
dec
lahf
movsb
mov
clc
int3
dec
orl
stos
sbb
pusha
rep
mov
stos
jne
jae
fdivs
mov
test
cwtl
aas
jbe
adc
ficoms
ficompl
test
in
add
inc
orb
push
cld
inc
xchg
rcrb
loopne
add
mov
adc
mov
cmp
xlat
fs
inc
add
pop
or
and
dec
pop
or
push
dec
jae
popa
popf
fcmovbe
sahf
jg
ror
movsb
stc
mov
ret
fs
call
push
mov
cld
std
xor
in
bound
mov
leave
push
cmp
adc
add
xorl
and
gs
cld
add
roll
mov
jb
pop
cmp
cmp
ret
xchg
cltd
xor
xchg
lock
movsb
leave
aas
scas
add
jmp
ret
fadd
lock
jbe
movl
fs
jp
cltd
mov
xor
ret
addr16
jl
lods
int
loop
std
fnstcw
addb
inc
mov
outsl
aas
mov
add
es
and
bound
mov
add
aam
or
add
mov
sub
xor
cwtl
jmp
mov
frstor
call
adcb
test
inc
sub
jge
mov
jge
fisttps
nop
add
add
mov
popa
mov
icebp
loopne
xor
mov
mov
inc
mov
es
mov
mov
push
imul
add
cltd
shll
mov
insl
xor
lods
mov
inc
scas
outsb
jo
out
nop
stos
dec
push
loopne
push
not
jmp
clc
push
push
pop
cli
jno
bound
adc
mov
sbb
shrb
add
je
mov
cmp
jp
cmp
xor
adc
mov
repnz
stos
cmp
mov
cmpl
test
cs
dec
popa
adcb
lods
xchg
and
fcoml
fldcw
mov
sbb
ljmp
pushf
in
mov
mov
rcrl
out
scas
popa
nop
sbb
add
sub
inc
add
cmpsl
rolb
xor
jbe
xor
iret
mov
inc
imul
adc
cmp
inc
sub
je
add
lahf
stos
rcrb
add
icebp
loope
sub
loopne
fxch
daa
sbb
jb
and
fstp
test
jbe
xchg
and
fwait
cli
xor
push
jno
jle
rcrb
shll
jl
pop
and
testb
inc
movsb
xchg
je
out
ret
popa
mov
mov
xchg
mov
push
cmp
scas
push
and
push
ja
mov
inc
ret
mov
xchg
insb
mov
jecxz
je
adc
jns
jmp
pop
and
mov
popf
stos
xor
pop
dec
or
adcl
mov
mov
aas
cmp
rcr
lcall
les
jecxz
inc
xchg
inc
cmp
cmp
push
sti
rorb
ds
incl
and
push
aaa
movsb
dec
stos
scas
inc
je
cmp
add
movsb
scas
add
sub
enter
sahf
xor
fs
loope
push
icebp
pop
test
xlat
addb
pop
jp
mov
cmp
inc
ret
enter
mov
ljmp
and
xchg
and
notb
inc
hlt
roll
mov
inc
int
mov
out
xchg
aas
in
cld
add
add
inc
dec
fsubrl
cmp
mov
lods
jne
ret
push
mov
gs
idiv
testb
gs
arpl
mov
icebp
je
cmpsb
std
fdivl
sahf
fistpll
xchg
jp
faddl
mov
add
jb
pop
jmp
adcl
fwait
pop
mov
inc
add
inc
cmp
stc
popa
adc
sarb
mov
in
inc
aad
rcrb
ret
lret
cwtl
orb
aam
les
xchg
fbstp
push
popf
xor
add
or
push
pop
cmp
cmp
xor
jecxz
lds
add
add
mov
les
push
mov
jecxz
mov
leave
pop
add
cmc
cmp
loopne
addl
dec
les
adcl
inc
jb
or
pop
test
sbb
lea
shrb
arpl
cmp
cmpsb
arpl
mov
sti
imul
mov
aam
dec
shr
or
imul
dec
lahf
and
outsl
imul
fs
scas
push
aam
jl
and
rolb
jb
push
mov
push
ret
jns
movsb
mov
cmp
xchg
jns
inc
rcrl
clc
jecxz
xchg
adc
lea
inc
mov
and
fadd
leave
xor
jecxz
pop
cmp
or
cmp
scas
test
push
mov
and
ret
sti
cltd
jp
ret
add
and
xchg
fidivl
ret
jbe
addb
sbb
scas
addb
and
pop
cld
or
pop
xor
mov
loop
mov
loop,pt
cli
filds
jp
jp
and
jge
inc
jg
mov
fs
inc
fnstcw
arpl
and
out
and
mov
and
loopne
fbstp
test
mov
ret
xor
fnstsw
xchg
adcb
xor
mov
sbbb
popa
xlat
mov
mov
add
fs
xlat
mov
cmp
leave
loopne
inc
stos
icebp
hlt
sarb
and
jl
ret
inc
ss
test
mov
ret
orb
loopne
mov
xchg
push
push
mov
and
popa
xchg
je
mov
lods
inc
mov
sub
jbe
mov
sub
mov
and
dec
sub
pop
test
lahf
mov
xor
test
push
arpl
cmp
inc
in
insb
cmp
and
xchg
mov
mov
test
pop
mov
push
cmp
push
dec
loop
int3
ret
cltd
imul
and
hlt
jmp
adc
loope
hlt
push
movsl
inc
fisubrs
and
fld
rcll
jle
jmp
jg
test
lock
push
ret
mov
rcrl
mov
xorl
xchg
fwait
bound
jg
stc
iret
add
std
dec
fnstenv
xchg
ret
loop
orb
das
adc
sahf
js
loop
bnd
adc
inc
mov
or
nopl
or
xor
test
clc
fsubrl
mov
and
mov
mov
or
test
scas
inc
icebp
pop
fsubrl
in
fxch
lret
addr16
ror
out
js
repnz
ret
mov
fcoml
sub
cmp
test
dec
or
jg
test
rcrb
jne
lock
clc
pop
cwtl
adcl
add
xchg
ret
xlat
xchg
mov
cmp
lods
xor
pop
xorl
pop
push
dec
mov
popf
cmpb
add
icebp
inc
mov
fadd
push
test
jecxz
fmull
shll
call
faddl
pop
mov
repnz
in
adc
sbb
or
mov
imul
push
jns
inc
mov
js
negl
ss
adc
in
cltd
pop
or
gs
leave
jmp
nop
lret
scas
repnz
mov
cmp
popa
adc
add
repnz
dec
mov
lods
std
in
jnp
mov
je
fdivr
lds
fmul
push
ret
ds
push
sbb
mov
fsubrs
jbe
add
aaa
sub
mov
push
loopne
loopne
mov
test
sahf
mov
sahf
sti
mov
pop
faddl
fsubrl
mov
scas
cmp
xchg
popf
sub
ftst
mov
adc
arpl
dec
xchg
push
and
addb
ret
cmp
notl
inc
ret
and
inc
and
orl
or
call
pop
clc
ret
xor
cmp
hlt
jl
and
mov
or
mov
shll
mov
in
mov
test
pop
pop
jg
ficompl
add
int
xchg
mov
int3
and
add
ds
jecxz
je
das
call
stc
add
mov
scas
leave
cmpl
shl
mov
imul
push
clc
mov
loopne
daa
shll
enter
fdecstp
dec
adc
sub
sti
ja
mov
xor
lret
mov
andl
push
mov
test
in
orl
jg
arpl
xor
cli
test
pusha
popf
data16
iret
arpl
test
push
mov
scas
mov
subl
ret
add
jmp
add
jle
mov
inc
cmp
stos
and
rcr
bound
outsb
sbb
ret
and
xchg
popa
popa
iret
lret
jo
inc
mov
push
scas
xor
push
xor
sahf
jo
orl
popf
test
and
and
mov
loopne
push
inc
mov
xor
mov
dec
inc
loopne
xchg
stos
insb
ret
fdivrp
insb
cmp
test
notl
sub
es
fisubs
mov
test
insb
xor
test
pop
shll
inc
stos
pop
or
sti
jge
inc
add
and
add
pop
roll
in
arpl
repz
push
jl
push
aam
arpl
add
mov
and
sbb
mov
jecxz
jmp
dec
push
iret
push
ret
and
jae
xor
push
std
sbb
xchg
lret
mov
dec
lcall
push
push
inc
pop
mov
lcall
mov
jl
add
adc
cltd
and
jmp
inc
pop
fstpt
mov
add
inc
and
arpl
mov
push
stos
pop
jb
je
dec
or
imul
nop
das
popa
xor
cltd
add
dec
popl
ret
insl
pusha
test
icebp
jecxz
xchg
adc
pop
mov
jb
inc
roll
lods
dec
jle
jns
mov
rcrl
dec
mov
mov
mov
call
or
mov
cmp
fsub
push
jecxz
ret
loopne
pop
ret
aam
shrb
loop
ret
pop
scas
mov
rcrb
daa
mov
jp
push
mov
adcb
mov
pop
fld
xchg
and
je
sub
add
insb
ljmp
jne
add
cld
loope
jo
in
xor
pop
add
pushf
cmp
sbb
jno
pop
jmp
add
mov
cs
faddl
roll
sbb
daa
cld
inc
fs
mov
stos
jle
or
jne
sbb
rcr
aas
andl
lods
int3
adc
mov
xorl
inc
jp
fiadds
push
xchg
dec
and
adc
imul
sbb
fmull
shl
jl
adc
repz
mov
icebp
mov
fs
sbb
jmp
add
test
adc
mov
testl
push
jg
pop
jmp
loope
or
sbb
cld
mov
decl
lock
shll
cld
adc
pop
inc
subb
fcomi
adc
cmp
les
ret
cli
sti
or
movsb
aas
je
push
in
stc
sub
popf
add
dec
jle
lea
xor
pop
movsb
js
mov
jg
mov
mov
xorl
jg
push
push
ret
inc
fdivrl
push
xchg
pop
rep
inc
jg
mov
add
xchg
lock
jge
movsb
xchg
xor
shr
test
mov
mov
push
mov
andb
int3
in
inc
jecxz
fsubl
inc
jnp
xlat
pushl
iret
add
imul
std
sub
inc
test
je,pt
cwtl
pop
mov
sbb
pop
jmp
inc
hlt
xor
hlt
pop
inc
lret
mov
cli
inc
mov
mov
sarb
test
add
inc
fwait
ret
dec
sbb
insb
sub
aam
call
fwait
les
out
lock
aas
cwtl
in
sbb
add
ret
pushf
sar
je
lods
xchg
lods
movsb
mov
ja
xorb
cmpb
addl
rclb
inc
in
pushf
notb
mov
rolb
int3
add
jnp
aaa
add
xchg
and
fs
sbb
inc
sar
ret
add
jb
test
in
mov
pushl
ret
and
pop
je
sbb
aam
sbb
rol
nop
std
stc
xchg
cmpl
std
fwait
sub
bnd
rcll
arpl
mov
jns
pop
repnz
outsl
add
rclb
push
jecxz
lret
mov
sbbl
xchg
pusha
add
xchg
mov
repnz
mov
mov
cwtl
ds
cmp
rol
cmc
fiadds
lret
sbb
hlt
fsubp
out
decl
mov
add
rorb
xchg
ret
movsb
inc
xor
rcrb
add
mov
enter
orl
adc
movsb
adc
rcll
inc
add
out
andb
inc
fcmovb
xorl
mov
mov
inc
inc
stos
outsl
mov
test
cmpsb
lock
inc
mov
jge
add
and
loope
dec
pop
into
sbbb
dec
jecxz
popf
lahf
add
ret
mov
ds
xor
add
jecxz
andl
sahf
jle
loop
ret
mov
xchg
inc
add
mov
ret
mov
je
fsubl
shll
call
add
mov
mov
fadds
inc
add
jl
cmp
test
lock
dec
ret
adc
aas
orb
in
cmp
ret
aam
call
and
push
mov
or
pusha
jle
and
std
movsb
adc
popl
jae
lahf
shrb
sahf
sti
adc
mov
xchg
sbb
add
lret
aam
push
push
das
xchg
pop
insl
es
inc
test
pusha
xchg
sbb
add
inc
xor
test
xchg
push
cmp
and
and
cmp
cmp
imul
ja
jae
js
jge
sbb
mov
sub
in
pop
lahf
xchg
outsb
fucomi
add
mov
or
dec
pop
lret
je
pop
outsl
lods
add
pop
mov
cld
loopne
test
xlat
repnz
sbb
jle
in
int3
sbb
rorl
jp
sub
aas
cwtl
rcr
cmp
cmp
inc
vmwrite
xchg
pop
push
cltd
mov
daa
fcomps
mov
cs
xor
insl
cs
add
xchg
cltd
add
std
add
jge
and
pop
pop
decb
dec
fsts
cmpsb
cld
lahf
mov
cmp
add
push
dec
test
lods
push
fsubs
popa
adc
js
cwtl
test
push
aas
mov
add
sub
add
sbb
adc
testl
and
fcoms
cmp
xor
incb
cld
push
fdivp
dec
out
mov
push
lods
push
cmp
lods
dec
xlat
mov
add
notl
pop
shll
add
and
das
cld
cmp
insb
pop
lock
sarl
lea
push
pop
int
mov
mov
cmp
rorl
fisubrs
mov
nop
test
add
rcll
leave
in
sub
test
or
adc
xor
icebp
sarl
jb
cld
daa
jnp
rcrb
in
mov
adc
or
ljmp
jnp
add
adcb
stos
iret
jmp
pop
std
pop
or
dec
inc
or
out
mov
inc
scas
sub
les
fidivrl
inc
mov
mov
into
lds
push
jmp
cmp
sbb
sbb
loop
add
mov
sbb
cmpb
mov
cld
xor
adc
pop
cmp
ss
push
leave
pushl
push
push
lahf
incb
cmp
ds
add
insl
shlb
test
cmp
add
ret
mov
sahf
pop
and
in
stc
out
adc
fs
cmp
add
cld
lods
cmp
and
decb
push
pop
and
fdivrl
mov
and
or
ja
mov
cmc
and
sarl
iret
les
sub
jp
mov
je
leave
or
pop
mov
inc
popf
mov
push
cld
or
in
sahf
add
test
mov
std
jp
rorb
inc
fimuls
movsb
sbb
cld
xor
aas
pop
ja
in
add
dec
inc
outsl
cmpsb
push
xlat
std
int3
cmpsb
add
test
aad
addr16
add
fildll
repnz
xchg
pop
push
add
pop
nop
sub
pop
outsl
push
js
push
fmul
sub
ja
scas
and
push
mov
pop
sti
popf
pop
jl
ret
int3
inc
stos
shl
cmp
aas
movsb
mov
imul
mov
cmp
movsb
sbb
fiaddl
cmp
fnsave
adcl
xor
sub
sub
addl
test
sbb
inc
jbe
or
jmp
addr16
les
add
mov
cld
and
and
dec
add
int3
jl
movsl
shlb
cld
jecxz
hlt
push
jge
inc
imul
jge
inc
addr16
xor
in
repz
lea
sub
icebp
jmp
cwtl
pop
jbe
movsb
jmp
fdivrs
lods
rcrb
testl
sub
and
aas
jp
pushf
ret
jecxz,pn
jp
cli
push
xor
inc
cld
xchg
pushf
add
scas
outsl
out
xor
nop
daa
inc
dec
in
faddl
jo
in
mov
js
pop
add
mov
pop
stc
scas
dec
data16
push
jno
in
add
mov
xchg
adc
jle
dec
sub
stos
in
jno
cmp
hlt
rol
fidivs
xchg
enter
mov
jge
jle
daa
cmpsb
cmp
ja
clc
cld
lret
inc
leave
push
cwtl
aas
loope
jae
insb
loopne
pop
mov
jge
cld
pop
sbb
jle
movsl
fidivs
iret
int
inc
repz
faddl
in
jl
int3
sti
sub
add
adc
or
pop
mov
add
pop
xchg
xchg
idivb
add
in
xor
cmpsl
out
pusha
push
adc
jne
and
je
mov
or
lods
dec
shl
rclb
adc
sub
movsb
adc
xchg
in
xchg
mov
arpl
push
stos
scas
pcmpeqd
arpl
jp
push
repnz
cli
hlt
aam
hlt
enter
mov
cmc
jl
lahf
mov
lcall
or
out
jge
xchg
fwait
jns
jecxz
sbb
jle
xor
pop
cld
adc
add
pop
or
inc
cmp
outsb
movsb
daa
std
mov
pusha
ret
mov
mov
enter
mov
xchg
push
roll
in
in
les
loope
mov
iret
cmp
cld
cld
dec
les
test
cmp
aas
and
addl
or
loopne
or
mov
jg
ds
pop
xor
in
in
pop
loopne
lret
lret
xor
out
cmc
mov
inc
repnz
cmp
xchg
or
out
xchg
repz
in
inc
test
fs
gs
xchg
dec
mov
aas
jmp
xor
fsubrl
inc
sbb
sbb
insb
push
loopne
xchg
or
lret
sahf
push
jmp
pmaxsw
inc
out
sub
loop
mov
ret
mov
rolb
out
jle
sarl
xchg
jl
mov
inc
movsb
sub
hlt
mov
dec
pop
xchg
ja
pop
insl
lock
int
or
int3
adcl
mov
xchg
lods
addr16
ds
sub
dec
mov
inc
cmpsb
cld
call
hlt
pushf
and
push
hlt
js
mov
xor
mov
andb
int3
insl
cmp
xor
ljmp
outsl
les
xchg
push
and
mov
xchg
adc
fadd
int3
int3
test
je
dec
sbb
rep
in
pop
jb
psllw
fdivl
std
jecxz
in
xor
ret
cmc
jmp
insb
shl
cmc
je
push
add
inc
mov
add
fldl
mov
cmpsb
xchg
in
xlat
stos
movsb
sbbl
fistpll
or
repz
in
not
scas
aam
xchg
cmp
xchg
out
fsubs
xchg
cld
fucomip
movsb
ret
hlt
pop
loope
negb
xlat
daa
inc
pop
push
fdivp
outsb
je
shr
inc
faddp
jl
arpl
movsb
xchg
in
jmp
icebp
movsb
hlt
int3
cmp
mov
rol
shll
shr
xchg
andl
fwait
in
stos
les
and
hlt
les
aam
mov
cmp
push
mov
sti
in
jae
jp
add
sti
mov
jmp
sub
mov
add
dec
xchg
mov
push
pop
repnz
sub
out
mov
sti
jb
adc
shll
jae
adc
cmp
xchg
sti
aam
scas
mov
cmp
jmp
test
mov
mov
adcl
lods
pop
cmp
loope
lret
loopne
pop
daa
sub
xchg
or
lods
hlt
out
or
std
outsl
loopne
orl
and
xchg
mov
cmpsb
in
pop
pop
scas
mov
or
push
xchg
xor
jl
mov
ds
int3
mov
inc
pushf
adc
pop
inc
pop
sbb
xor
inc
jne
sub
das
bound
gs
cmp
inc
ficomps
loopne
jb
lret
sub
sub
fwait
scas
mov
in
int3
faddl
inc
xchg
jge
not
or
or
sahf
mov
mov
pop
xlat
add
mov
add
lret
lret
stos
rolb
pop
jp
mov
sub
cmp
fcompl
icebp
mov
mov
imul
repz
add
xlat
popf
clc
addb
fwait
ret
mov
or
ljmp
and
and
jecxz
cmp
mov
jnp
hlt
xchg
cmp
adc
add
push
or
aaa
in
in
js
mov
call
xchg
mov
cmpsl
shl
jno
fidivrs
sbb
and
xor
pop
jb
mov
pop
pop
shl
sub
dec
sub
rcrb
pop
or
jae
push
push
popf
popf
aad
ss
test
outsl
in
xorl
and
pop
pop
scas
lock
mov
xchg
pop
outsb
and
inc
repnz
ret
xor
jae
arpl
push
mov
icebp
add
imul
inc
mov
mov
frstor
std
add
mov
jge
repz
and
inc
jl
and
in
test
cld
hlt
mov
fadd
es
in
inc
mov
in
jnp
in
fadd
cmpsb
or
xor
push
movsb
aad
lods
movsl
dec
sbbl
es
push
xchg
clc
dec
fs
call
inc
lds
cltd
je
sub
sarl
fs
pushf
add
add
adc
out
hlt
push
add
push
std
loope
fdivl
scas
hlt
fcomip
aam
les
test
inc
in
test
dec
cmp
sbb
cli
adc
jl
je
jnp
aam
jp
dec
repz
jae
js
inc
jmp
ja
pop
jb
in
jge
imul
lock
xor
cmp
fcmovnbe
lret
ret
mov
push
dec
inc
cmp
ljmp
mov
push
dec
inc
cmp
jmp
leave
sarl
dec
incb
xor
loopne
ror
inc
mov
pop
push
decb
cmp
out
out
xlat
dec
mov
pop
push
dec
inc
aas
aaa
das
out
out
into
mov
pop
push
dec
inc
ds
cmc
in
in
aad
lds
insl
gs
push
dec
mov
cmp
xchg
and
jl
les
cmp
dec
sar
jl
add
je
cli
jp
stc
jns
repz
fs
incb
jmp
jb
jge
xorb
mov
cmc
ret
or
daa
bnd
aad
jo
dec
adcb
addl
adc
push
xchg
inc
stc
out
popl
aas
jge
xlat
cmpsl
in
sbb
dec
mov
std
mov
xchg
repz
in
add
scas
or
das
mov
dec
add
jne
cwtl
jl
mov
pop
xor
and
push
pop
cmp
xchg
jno
jecxz
cmc
lret
push
div
sahf
push
gs
movsb
cli
sahf
js
addl
stos
into
adc
cmp
add
das
jge
mov
mov
ja
add
stc
sbb
pop
leave
inc
xchg
sarl
data16
out
cwtl
mov
daa
mov
fsubrs
ret
sti
jge
std
subl
adc
push
sar
sahf
loopne
jmpw
movsl
jbe
and
aaa
rorb
ret
out
pop
outsl
cmp
dec
xchg
xchg
jne
mov
mov
stos
lret
and
cmp
out
aad
mov
adc
cmp
push
sbb
jb
call
ds
call
ret
aaa
lock
xor
xor
mov
and
adc
mov
sar
dec
push
fwait
lret
divb
cmp
dec
in
in
adc
cmpsb
andb
out
xor
sub
rcr
push
inc
push
decb
or
and
jl
stc
mov
and
jge
in
movsb
fs
mov
movsl
xor
sub
mov
pcmpeqw
lahf
push
sbb
push
clc
xchg
mov
sbb
repnz
je
outsl
test
adc
inc
dec
out
push
xor
cmp
pop
out
mov
es
xchg
gs
dec
push
cwtl
dec
pop
adc
pop
repnz
push
ds
sbb
icebp
mov
mov
aam
jmp
cmpsl
add
adc
or
into
xchg
int3
mov
mov
lcall
xchg
adc
sbb
push
jbe
ret
je
add
xlat
xchg
pop
outsl
loope
cmp
and
mov
sub
sbb
outsb
or
pop
and
jle
das
movsb
xor
sbb
fs
dec
adc
jge
insl
ss
sub
js
cmpsl
pop
cmp
cmp
sahf
mov
into
push
mov
jno
inc
lea
in
mov
push
xchg
lods
push
or
jne
cmp
sub
cmp
sbb
decb
into
addb
ds
jecxz
scas
adc
and
std
push
jb
fidivs
push
xchg
or
adc
cltd
popf
xor
pop
cmpsb
lds
aaa
or
xor
inc
cmpsl
cmp
mov
addr16
testl
pop
xor
or
mov
repnz
test
inc
packsswb
inc
jecxz
mov
mov
mov
in
cmp
pushf
and
outsl
shrb
lahf
fs
gs
mov
xchg
cmp
adc
mov
mov
push
jns
in
add
push
ss
and
hlt
arpl
popf
inc
xor
sub
dec
ret
mov
sub
test
xor
decb
test
and
dec
icebp
sub
fwait
lahf
nop
dec
sahf
flds
or
jnp
aad
jno
dec
in
aam
popf
xor
dec
out
xchg
imul
sbb
cmc
rcrb
sbb
add
xchg
insb
fucomi
jecxz
sbb
mov
cmp
in
andl
add
pop
push
hlt
cmc
or
rol
sbb
mov
cmp
cmp
daa
dec
sub
jbe
push
testb
jecxz
sti
bound
add
jmp
decb
ljmp
hlt
push
jge
daa
scas
mov
incb
lods
dec
or
sbb
std
sahf
je
ljmp
mov
and
mov
int3
dec
dec
jne
imul
call
sub
cmp
and
fsin
cmc
sub
mov
mov
xor
or
fnstcw
add
pop
nop
or
inc
sbb
cmp
stc
adc
outsl
pop
and
xchg
clc
cltd
lea
and
jle
fcomp
jno
int3
xchg
out
and
add
out
aas
mov
ret
add
xor
mov
mov
out
jne
or
and
in
mov
out
xchg
pop
push
xor
enter
xlat
xor
add
out
lock
in
mov
lods
add
decb
ret
jae
int
cmp
xchg
adc
jge
push
lea
mov
and
outsb
cli
mov
xor
jg
jo
mov
shll
xor
mov
test
adc
pop
sub
mov
adc
push
xor
and
popf
outsb
mov
cmp
xchg
xor
or
divb
ret
hlt
sahf
cmp
nop
inc
call
lock
out
daa
xchg
test
fstl
in
mov
dec
aas
stos
add
out
mov
loope
pusha
std
jmp
mov
cmc
subb
cmpsb
bound
loopne
dec
in
stos
incb
push
cmc
inc
xchg
lea
pop
fdivs
or
inc
cmp
in
nop
sti
jae
imulb
into
add
icebp
movsb
int
mov
ss
dec
aaa
adc
movsl
inc
xor
or
dec
mov
xor
hlt
ds
mov
xorl
cmp
pop
pop
jl
jnp
xchg
fisttpl
and
cmp
loope
jg
rcll
jge
shlb
and
pop
mov
jae
mov
int3
adc
or
lock
adc
mov
aas
dec
test
decb
dec
and
inc
add
insb
mov
sub
decb
stc
lock
pop
sub
lret
jo
test
pop
aad
test
cmp
and
test
xor
imul
pop
jle
push
decb
ficoms
fwait
lcall
cmc
sbb
mov
adc
adc
orl
xchg
incb
mov
jo
lods
or
xor
push
addr16
jne
mov
shl
xchg
add
aam
add
or
fsubl
pop
cld
mov
movsl
xor
arpl
or
sbb
jo
mov
xor
or
jecxz
ret
or
mov
cwtl
pushl
push
into
add
jmp
inc
xchg
out
push
repz
ja
jbe
aas
incb
sub
xor
cmp
and
mov
xchg
fidivrl
std
mov
cmp
in
add
jae
mov
add
or
dec
sub
enter
mov
pop
push
sbb
xchg
in
inc
in
mov
mov
inc
icebp
ljmp
mov
jecxz
sbb
sar
cmpsl
add
test
orl
dec
mov
shrl
push
popf
pop
cmp
aam
mov
sbb
sub
pushf
es
push
inc
hlt
sbb
aam
movntps
and
in
in
dec
mov
push
std
cmp
and
or
push
fistl
aas
mov
aam
sbb
enter
mov
ljmp
adc
sti
paddusb
jb
int3
cwtl
pop
repnz
mov
or
lret
fsubl
pop
fildl
loop
int3
lret
lea
mov
pop
mov
imul
cltd
icebp
or
aas
mov
imull
shrb
in
mov
adc
sti
movsb
in
sbbb
movsb
push
adc
sti
and
fcompl
shl
sub
pushf
es
jmp
fidivs
fs
push
negl
sti
cmpb
xchg
push
adc
sti
inc
mov
mov
dec
ret
mov
les
or
pop
mov
test
jae
sarb
loope
ret
mov
into
mov
hlt
ret
adc
std
pop
out
sahf
adc
lock
xchg
je
outsb
repnz
push
fildl
aaa
data16
and
jle
and
lcall
mov
stc
andb
xor
jecxz
stos
inc
push
mov
in
mov
sti
dec
jne
mov
mov
mov
ret
and
cmp
in
or
xor
lods
fnsave
add
movsb
ror
test
cmp
fcmovu
and
sti
and
mov
sbb
ficomps
and
adc
adc
sub
sti
repnz
sti
or
and
cmpb
test
repz
fcomip
int3
test
push
mov
xor
fadd
sar
jmp
fistps
iret
jge
pop
xchg
add
jb
push
aam
mov
or
into
pop
pop
jge
insb
outsb
mov
inc
dec
out
andb
cmpsl
dec
and
out
mov
jbe
scas
mov
js
xor
movsb
sti
les
js
subl
jmp
mov
cmp
jae
arpl
mov
les
out
pop
gs
xlat
mov
movsb
rcl
in
divb
movsb
inc
mov
mov
aam
dec
jnp
add
lods
mov
adc
stc
sbb
mov
and
ljmp
xor
add
insl
cld
push
adc
sub
divb
sub
loopne
jne
mul
test
cwtl
sbb
or
mov
loop
xchg
mov
pop
roll
clc
aas
dec
sbb
and
inc
pushf
mov
fwait
sti
mov
mov
out
insl
hlt
mov
inc
xchg
xlat
in
movsb
stos
enter
pushf
loopne
mov
mov
mov
dec
xorl
loope
inc
mov
clc
out
outsb
fstpt
les
popf
loope
rcrl
fwait
ret
movsb
dec
loopne
mov
sbb
sub
cmp
inc
pop
push
mov
xorl
inc
aam
out
out
roll
shrl
mov
into
or
repnz
mov
mov
xchg
or
or
push
dec
aam
int3
jl
and
les
xor
jmp
lods
cmp
cmpsb
inc
bound
inc
test
push
cmp
sbb
xchg
jge
call
sub
pusha
rorb
test
mov
and
ljmp
jge
std
adc
cmp
decl
sbb
xchg
inc
loopne
decb
sbb
lcall
push
outsb
push
inc
mov
int3
cmpsb
cld
dec
jo
adc
mov
dec
pop
push
pop
testb
call
mov
iret
mov
movsb
arpl
sbb
loop
lret
lods
sub
incb
out
dec
ds
in
mov
adc
jg
cltd
or
fldcw
test
adc
sbb
aam
cld
and
in
mov
jle
std
and
pop
dec
aam
add
dec
insb
out
sbb
std
push
int3
sbb
out
mov
in
fisubs
jle
enter
mov
xor
dec
mov
sub
pop
rcr
loop
mov
mov
clts
test
cmp
mov
and
sbb
xor
or
cmp
sub
test
mov
popa
xchg
sub
jecxz
popa
shrl
les
pop
pusha
mov
pop
push
jne
lods
fidivrl
fs
mov
cli
inc
sahf
dec
popf
push
in
sbb
es
xchg
sub
lcall
and
mov
test
fwait
adc
imul
push
xor
cs
enter
dec
popf
sub
inc
pop
and
jne
test
decb
outsb
std
jbe
push
inc
in
sbb
mov
test
sub
int
push
mov
movsb
cld
sub
mov
mov
adc
sub
mov
jg
pop
pop
add
dec
jb
movsl
lcall
xchg
cwtl
xchg
scas
pop
add
jecxz
cmp
or
mov
and
out
lods
pop
push
shr
jecxz
andl
jle
xchg
ret
cmpsl
daa
hlt
inc
mov
addr16
ret
mov
std
les
bnd
and
jecxz
jmp
mov
cld
je
pusha
mov
loope
sti
push
aam
sub
jns
xor
pop
ja
mov
int3
and
pushf
cmp
sarb
loop
cmp
fmuls
dec
loop
lods
pop
push
mov
popf
pop
out
lods
inc
pop
push
fsubrl
jmp
stos
les
loopne
pushf
mov
mov
sti
aad
dec
std
dec
mov
aaa
adc
cmp
add
int3
mov
inc
jo
test
jns
lcall
sbb
jo
mov
loop
les
sub
push
pop
jae
cmp
fcompl
add
pusha
bound
fdivr
pop
push
cmp
in
add
xchg
sbb
stc
fwait
mov
insl
xchg
fisubl
push
cld
lahf
jmp
sarl
adc
push
flds
pushf
push
mov
aas
lods
out
in
jns
xor
and
or
jl
fidivl
or
and
movsb
push
add
push
mov
mov
or
in
add
and
mov
loopne
lods
xor
jp
aad
mov
mov
mov
or
enter
ret
xchg
xor
mov
hlt
mov
rorl
inc
loop
jno
les
je
outsb
or
int3
cmp
jl
lret
stos
mov
lret
add
jns
repnz
addr16
scas
ja
das
mov
les
loope
fisttpl
push
ret
dec
mov
shlb
sti
loop
daa
cwtl
adc
cld
js
adc
subl
loopne
or
pop
add
movsb
jno
jecxz
mov
pop
fnstcw
push
pop
xchg
mov
dec
xor
ret
mov
jge
sbb
xchg
pop
pop
fsub
pop
add
dec
pop
mov
ret
lret
jo
in
pop
push
xlat
popa
into
push
pop
jbe
jo
cvtdq2ps
dec
xlat
orl
js
addb
lds
fdivrs
lods
push
mov
cmp
pop
jge
in
mov
andl
pop
jecxz
sahf
mov
movsb
push
mov
pop
and
addl
or
inc
pop
jg
and
mov
push
loop
fisttpl
insb
inc
sahf
loop
push
mov
add
addb
aam
rcl
ds
cmp
movsl
dec
or
faddl
add
fwait
lods
sub
dec
push
sti
in
inc
sub
mov
in
aaa
sbbb
test
orl
cld
xchg
pop
fwait
jno
cmp
mov
andl
loop
mov
adc
icebp
or
adcb
pop
enter
push
js
fmull
out
leave
jl
xchg
je
repz
and
fs
je
adc
fs
add
stos
ret
mov
xor
sar
faddl
adc
pusha
je
mov
inc
mov
subl
out
daa
fistpll
je
push
dec
cmp
xor
in
cmp
test
bound
sarl
xor
xchg
mov
sub
sbb
int
das
stos
and
negl
mov
jo
mov
pop
pop
fcmovbe
xlat
adc
add
sbb
jbe
pop
adc
pop
cmc
hlt
inc
test
aaa
scas
aas
test
adc
and
inc
jg
xchg
xor
lahf
divb
sti
mov
jno
je
adc
fdivrs
jl
adc
and
dec
les
and
push
call
jnp
rcr
jne
insb
pop
out
imul
mov
ja
ficoms
ss
inc
test
shrl
popa
cmp
pop
push
or
jge
mov
xlat
mov
shr
inc
fnsave
and
fcmovne
dec
xchg
mov
fs
cmp
out
dec
inc
data16
shl
mov
jmp
jg
sti
fisubrs
and
mov
sarl
and
das
popf
test
push
jbe
repnz
sti
and
out
insl
mov
filds
repz
rorb
xchg
dec
push
outsb
aaa
sub
mov
dec
mov
test
or
xchg
fsubrl
cmc
adc
insl
fsub
cmp
sbbl
bnd
dec
sbbl
ds
cmp
adc
and
mov
adc
fimull
aam
sub
jne
ret
fbstp
outsl
orl
dec
fcompl
sarb
adc
pop
push
out
mov
std
xchg
jae
or
out
push
icebp
jnp
int3
or
cmp
and
dec
orl
inc
loope
jno
or
and
sti
pop
mov
aas
mov
cltd
xorl
lret
je
jecxz
test
xchg
fucomi
les
pop
xor
push
sub
lcall
mov
iret
sahf
out
arpl
lods
lret
les
fstpt
sahf
scas
cmp
lods
lret
les
adc
push
xchg
loop
xlat
cmp
inc
cmp
outsb
cmp
lods
lret
les
push
push
cmp
enter
inc
sbb
mov
sbb
xchg
js
arpl
mov
pusha
shl
xorl
push
cmp
mov
pop
sti
stos
leave
les
push
outsl
xor
mov
push
lds
icebp
xorb
cmp
hlt
in
pop
pop
sub
repnz
sub
push
fdivrl
add
mov
push
mov
test
aam
lret
push
xor
rcl
mov
pop
xor
les
incl
and
lahf
pop
repnz
out
dec
adc
test
xor
push
pop
pop
lock
in
xchg
mov
fbstp
jp
cmpsb
and
loop
or
and
pop
outsl
and
dec
fidivrs
dec
pop
testb
push
push
sahf
shl
add
mov
arpl
pop
push
mov
dec
jnp
jae
imul
test
push
cli
dec
loopne
cmp
jl
clc
xchg
sbb
xchg
jno
push
mov
out
add
pusha
sub
mov
push
ljmp
fs
and
bound
inc
xchg
sub
and
xor
aaa
inc
cmp
inc
into
fs
xchg
mov
lret
cs
das
inc
inc
sbb
lods
shl
sbb
fimuls
mov
mov
or
aam
rclb
scas
push
pop
xchg
mov
test
fdivl
mov
or
stos
stos
aam
std
and
ret
ret
xorb
ljmp
mov
xchg
out
or
and
test
mov
mov
jnp
popf
in
jp
lret
dec
daa
mov
fisubl
jecxz
and
xchg
pop
xor
add
lods
mov
pusha
xorl
enter
test
mov
xor
jb
sbb
push
pop
hlt
enter
inc
add
inc
fdivrl
xchg
movl
push
xchg
cmp
les
or
fnsave
mov
popa
lahf
out
pusha
xchg
bound
or
cs
mov
les
mov
movsb
aaa
fsubl
je
daa
imul
sahf
mov
cmpl
xchg
lock
jecxz
pop
out
and
lea
fs
aad
stos
ja
mov
sti
loopne
aad
lds
leave
sbb
int3
cmc
mov
test
cmpb
mov
mov
mov
sub
mov
arpl
sbb
push
ficoml
adc
mov
and
mov
adc
sti
inc
mov
jl
movsl
mov
shll
mov
or
lods
inc
jo
mov
lahf
mull
decb
jae
inc
loope
jecxz
mov
add
rcr
frstor
adc
adc
cmpl
int3
das
enter
decl
daa
lret
fisubs
inc
ja
cli
pushf
xchg
jg
lods
imul
dec
mov
cld
lret
push
idivl
or
ret
cmp
cld
out
mov
inc
pop
cmp
das
add
outsl
pop
in
test
dec
jns
jo
loope
out
xlat
push
push
push
or
xchg
jle
ljmp
sbb
adc
inc
dec
add
fcmovne
xchg
arpl
xor
stos
movsl
jns
push
dec
push
sbb
fbld
ret
loopne
loop
sahf
pop
rcrb
mov
jae
mov
dec
iret
add
or
adc
and
jge
into
pop
dec
lcall
cmc
inc
mov
sub
mov
and
aaa
push
mov
cwtl
insl
push
repz
ret
add
jmp
sub
mov
xchg
sbb
gs
xor
call
fdiv
xchg
xor
outsl
xorb
loopne
mov
or
push
sub
mov
and
and
sahf
add
les
stos
in
mov
push
dec
pusha
dec
push
inc
popa
daa
in
test
testb
xchg
data16
mov
inc
repnz
cmc
iret
cmp
out
subl
add
push
mov
adc
pop
jge
push
jmp
and
xchg
arpl
fcmovnu
and
and
aad
or
cmp
mov
cmp
int3
dec
xor
push
enter
orl
decb
test
stos
lcall
add
or
and
shrb
mov
lock
jecxz
andb
fdivrp
sbb
mov
insb
sbb
sub
cmpsb
out
or
in
outsb
push
ds
mov
lret
cli
rolb
clc
mov
sahf
insl
stos
arpl
mov
cmp
fisttpl
or
dec
adc
or
jb
mov
inc
mov
iret
neg
adc
cmp
gs
sahf
mov
repnz
cmp
inc
push
jg
insl
ret
gs
mov
pop
mov
cli
sub
enter
xchg
subl
mov
sbb
cli
stc
add
mov
addr16
cmpsl
mov
ss
ljmp
mov
rcl
xchg
jl
sbb
cmp
out
mov
out
adc
jbe
cwtl
in
out
xor
and
js
jnp
jmp
sub
dec
jns
das
fwait
lds
enter
cwtl
adc
adc
sbb
out
push
daa
pop
psubsb
cmp
xchg
jg
xchg
insb
in
dec
rcrb
jmp
icebp
loopne
bsf
in
fimuls
incl
jecxz
sbb
test
pop
sbb
fbld
mov
cmp
mov
outsb
add
jae
test
incl
or
push
int3
out
dec
shlb
ret
xlat
call
push
stos
or
cmp
lods
test
bound
jo
leave
data16
mov
mov
inc
adc
loop
repnz
lcall
lea
xor
add
dec
in
mov
xor
test
xor
jne
mov
push
pop
lea
test
cmp
push
lea
stos
in
ret
fdivrl
sahf
mov
sbb
bswap
cmp
and
mov
sbb
out
rclb
pop
out
test
pop
ret
es
xchg
add
aas
lods
daa
mov
adc
jns
mov
mov
in
in
push
adc
arpl
and
pusha
sub
popf
jae
repz
mov
ja
insl
and
mov
ret
xchg
xchg
test
jbe
cmpl
push
xor
mov
xor
inc
push
push
mov
or
test
sbb
adc
push
outsl
leave
daa
nop
inc
cmp
pop
les
pushf
sub
sti
cmp
aam
dec
sub
cs
data16
mov
sbb
or
pop
iret
xchg
mov
mov
lods
icebp
fsubl
lock
inc
fdivrl
jae
pop
jnp
in
fidivrs
dec
lods
cmp
mov
mov
imul
sti
addl
icebp
add
adc
mov
cmpsb
xor
mov
pop
aad
inc
dec
aaa
mov
sti
hlt
je
iret
adcb
test
xchg
fdivrs
orl
push
out
adc
inc
cld
in
insb
pop
clc
aam
and
aam
repnz
xchg
pushf
mov
cld
sbb
jl
and
push
test
ljmp
jae
sub
movsw
loopne
sub
jno
jg
adc
fsubl
std
mov
push
lds
enter
jle
aas
jae
fbstp
mov
mov
leave
aam
arpl
sbb
jbe
aaa
or
inc
faddl
push
sti
dec
ret
xchg
xchg
inc
fnsave
add
jae
xchg
xchg
outsl
les
loope
shlw
pop
mov
jp
negb
and
sbb
mov
sbb
xorl
jae
cmp
push
push
inc
or
xchg
mov
mov
mov
pop
jne
out
mov
or
mov
ret
and
in
lret
adc
or
cmp
mov
sbb
loopne
jge
xor
das
fsubrl
jge
mov
push
or
lahf
es
jl
cmp
lock
or
mov
add
jae
inc
push
adc
fs
mov
popa
push
in
sub
sarl
cmp
push
call
mov
lds
enter
decb
pop
inc
fiadds
push
xchg
pop
sbb
or
out
mov
jge
aad
mov
mov
jnp
push
mov
inc
xor
iret
aas
push
push
jmp
push
incb
fisubrs
addr16
mov
push
mov
decb
aam
cltd
sbb
das
inc
loopne,pn
and
adc
addb
sub
ficomps
cwtl
jo
or
insl
int
movsb
adc
fnstenv
add
xor
push
cld
xchg
sub
std
sahf
push
fucomi
cmp
add
jecxz
and
int
add
enter
ret
das
scas
add
mov
ds
es
imul
jmp
movsb
or
jge
enter
sub
pop
sbb
mov
inc
inc
or
mov
mov
js
popf
push
sub
es
jo
outsl
mov
mull
lea
xor
dec
decb
pop
mov
inc
scas
mov
mov
in
jge
int
mov
xor
mov
pop
mov
sub
push
mov
pop
and
sbb
pop
std
out
cs
iret
cld
frstor
mov
jbe
incb
sbb
mov
dec
test
stos
test
push
popa
aaa
js
fcmovbe
mov
inc
pop
loope
sbb
dec
mov
or
test
push
adc
hlt
and
imul
addr16
shrb
pop
ss
in
sbb
xor
js
pushf
push
movsl
outsl
repnz
in
mov
or
jbe
xlat
in
cs
pushf
mov
jge
xchg
push
movsl
sub
and
cltd
mov
lea
dec
inc
xchg
rclb
movsbl
shll
add
mov
pop
ljmp
dec
cld
lret
push
mov
push
xchg
or
cld
inc
ljmp
adc
out
push
imul
negl
mov
stc
pop
fldcw
test
and
pop
xor
cltd
push
popa
xchg
negb
sbb
gs
and
jne
xchg
xchg
lret
xchg
pop
and
pop
pushl
mov
push
xchg
mov
push
push
push
jecxz
add
and
or
or
push
add
push
je
lret
xor
mov
fsts
test
xlat
fsubrl
test
repz
cld
shlb
js
data16
add
pop
out
mov
mov
mov
and
adc
xor
sahf
sub
inc
icebp
stc
add
sbb
jg
ljmp
into
jle
xor
push
sahf
sbb
pushf
popf
imul
fmul
mov
lods
push
push
int3
and
dec
mov
inc
xor
addr16
or
inc
jb
and
in
push
movsb
jg
mov
add
inc
mov
fisttpl
daa
movsb
cmp
add
lock
gs
lock
sbb
adc
popa
push
fcoml
imul
xor
pop
in
adc
add
stc
bound
ret
jecxz
xchg
add
or
cmp
cli
std
push
fsubs
cmp
and
popl
xchg
cltd
pop
mov
dec
ret
sub
mov
clc
sbb
mov
cwtl
incl
adc
stos
dec
sbb
add
cmp
js
daa
pop
imul
mov
int3
push
aad
dec
call
lock
pop
cwtl
push
mov
xor
addb
or
test
ljmp
stos
pop
out
xchg
loope
mov
add
loop
push
jnp
outsb
xchg
mov
stos
fstp
ret
mov
movsl
popa
fldenv
int
or
and
inc
push
leave
xchg
mov
sub
subl
outsl
in
dec
rcll
sub
stos
mov
push
leave
pop
cmp
arpl
inc
mov
rcrl
adc
rorl
lret
cmp
jmp
and
adc
out
cmp
into
dec
mov
in
mov
sbb
lret
cmp
cmp
cmpl
loop
in
mov
test
cmpsl
jmp
cmpsb
insb
shrl
mov
or
insl
dec
je
jl
dec
adc
int3
add
dec
imul
mov
jae
xor
xor
pop
fildll
es
stos
lods
fwait
rcl
push
or
and
insl
pop
cltd
js
nop
ret
jbe
into
shrb
xchg
fistpll
add
xchg
mov
cltd
mov
or
data16
jmp
pop
inc
jo
xchg
cltd
insb
fildll
rorb
xchg
movl
inc
lcall
pop
push
or
xor
repz
decb
js
sahf
sbb
and
ja
cmpsb
cltd
inc
or
add
push
in
insl
xor
bswap
mov
pop
jle
fwait
repz
xor
into
push
gs
jecxz
test
and
mov
es
sbb
mov
mov
lret
nop
inc
imul
inc
in
lock
dec
out
sub
cs
mov
pop
push
mov
stc
lods
dec
mov
adc
xchg
daa
inc
fsubrs
add
push
jp
ss
xchg
mov
jb
in
stos
dec
shl
lods
mov
testb
arpl
shlb
mov
insl
xchg
in
xchg
into
notl
mov
jbe
dec
add
insb
ret
hlt
xlat
decb
jg
xchg
or
loopne
fld
lods
cs
enter
loope
cltd
or
arpl
jne
addr16
jecxz
jg
push
jge
or
mov
add
je
stos
jb
pop
xchg
lret
fisubrl
add
mov
icebp
in
jp
cmpb
adc
cmp
in
mov
or
dec
xor
adc
mov
rorb
dec
cmp
jecxz
sub
jnp
ret
mov
or
xchg
adc
test
movsb
sbb
inc
int
aam
mov
test
std
test
cmp
xor
aas
jno
sbb
adcl
pop
or
xor
lret
adc
sub
pop
push
loope
loop
loopne
sbb
mov
test
xor
sbb
fisubl
stos
stos
fwait
jg
push
adc
movsl
ficoms
ret
outsb
sti
inc
fisttps
add
scas
cmp
fsubrp
sbb
loope
aas
adc
xchg
sbb
jmp
ljmp
push
jg
mov
fwait
test
sar
cmp
test
sub
mov
icebp
and
inc
xchg
and
mov
sbb
mov
mov
jne
cmpsl
stc
or
stos
test
rolb
sbb
cs
popf
jp
insl
pop
incb
and
dec
xchg
mov
lds
mov
dec
and
xchg
ljmp
data16
incb
xchg
decb
pop
addr16
enter
mov
fcoms
fisubrs
add
repnz
sbb
std
mov
cld
lcall
shlb
mov
je
pop
test
imul
sbb
decb
cwtl
add
mov
fistpll
addr16
mov
sub
sahf
lock
cmp
dec
and
fimuls
data16
mov
pop
sbb
gs
push
mov
xor
dec
pusha
add
fwait
jns
popa
xchg
pop
push
add
push
outsb
addr16
sbb
dec
mov
decb
inc
dec
fdivr
and
outsb
push
in
imul
cmp
jbe
xor
fldenv
dec
stos
add
int
ret
repz
cli
out
sbb
aam
lods
or
nop
push
jnp
cmp
inc
pop
adc
out
stos
push
loop
add
aaa
iret
cmpsb
cmp
fwait
cltd
jl
int
mov
sub
aaa
dec
mov
jne
cmp
fists
dec
xor
push
mov
mov
inc
pop
xchg
movsb
lods
inc
jae
pop
fsubr
mov
in
xor
sahf
mov
inc
sarb
loope
push
adc
xor
cmp
mov
loopne
sub
in
stos
pushl
push
out
out
xor
dec
dec
xor
lret
jb
xchg
push
fimuls
jmp
or
cli
mov
fcmovne
pop
jbe
cmp
add
mov
adc
aam
sbb
adc
idivl
lods
xor
fsubrs
inc
mov
mov
outsb
sahf
aaa
cwtl
adc
jle
xchg
cmp
into
popf
lahf
sub
add
pop
test
xchg
adc
jge
fcoms
mov
incb
push
sbb
decb
lock
mov
mov
dec
adc
jecxz
lcall
inc
ds
pop
push
enter
cmp
sarl
mov
les
fidivrs
and
loopne
dec
outsl
push
es
lret
insl
inc
xor
mov
ret
add
and
ja
add
xchg
cmp
or
pop
cmpsl
cld
jae
mov
lea
out
out
std
push
jb
adc
mov
in
or
fwait
sahf
cwtl
mov
cs
call
out
in
or
inc
adc
pop
xchg
xlat
daa
pop
pop
lea
jecxz
add
push
int
and
icebp
js
addr16
bound
add
fsubl
movsl
jp
jne
in
dec
sbb
out
or
push
sbb
cmc
dec
pop
enter
add
sub
xchg
xchg
addr16
hlt
jmp
xor
js
xor
lret
in
mov
and
in
fsts
pop
pop
in
imul
ret
xlat
lock
je
aaa
pop
in
int
call
movsb
xor
add
lea
jge
into
add
decb
fwait
cwtl
cs
stos
jns
mov
in
mov
ja
xor
in
cld
push
scas
mov
xor
or
je
cmp
push
jecxz
jge
nop
push
inc
and
push
enter
mov
dec
xor
inc
incb
inc
in
insb
adc
je
mov
in
xchg
xchg
fidivrl
jmp
cltd
or
add
jno
je
in
sub
repz
cmp
pop
inc
test
add
andb
jne
jge
repnz
lretw
jae
adc
mov
inc
incb
inc
das
test
mov
jns
dec
ret
lret
xor
adc
jl
inc
or
jl
pop
or
stos
mov
mov
push
das
out
xor
cmp
ja
js
aad
mov
fbstp
and
cwtl
mov
push
lods
push
xlat
jne
pop
test
popf
loope
and
mov
pop
or
scas
cmp
inc
in
sbbl
xchg
sarl
push
stc
int3
cmc
test
mov
test
loop
dec
push
mov
lahf
adc
addr16
imul
cltd
and
sub
jno
sub
stos
mov
pop
mov
sbb
add
rcrb
xor
mov
jecxz
push
push
imul
jle
push
sbb
cs
sbb
cmp
out
jmp
aad
jl
adc
pushf
mov
dec
fdivrs
shrb
xchg
xchg
push
push
jle
sub
or
sbb
lock
dec
stos
movsb
aas
call
fsub
js
mov
jecxz
jge
notb
int3
push
pop
or
push
jbe
lods
test
out
ss
pusha
ja
jb
mov
mov
fs
sbb
mov
push
ja
je
fistpl
cmpsb
cmc
push
test
sub
mov
testl
mov
addr16
in
outsb
push
jo
sub
dec
pop
lods
dec
dec
inc
arpl
push
mov
mov
and
jl
xchg
daa
loopne
les
std
les
mov
les
mov
mov
sbb
dec
add
and
adc
lods
mov
negb
cwtl
ljmp
inc
decb
sti
sbbb
ret
imul
repz
sahf
and
dec
dec
cmc
lds
adc
xor
inc
outsb
repz
fisubrs
push
sub
push
negl
pop
data16
fbstp
mov
sbbl
inc
cmpsl
sbb
call
inc
mulb
fwait
cmp
int3
mov
inc
lods
sub
int3
js
and
dec
jne
insl
lea
jl
adc
or
jl
mov
fimuls
movsb
or
lea
and
or
mov
mov
add
imul
mov
sti
shlb
fwait
inc
sbb
imul
lods
test
jp
or
outsl
push
mov
xor
leave
rcrb
push
cmp
out
movsl
jae
jmp
jns
xor
out
mov
add
fsubl
int
aaa
hlt
lock
xlat
push
dec
ds
popf
arpl
pop
lret
idiv
pop
mov
outsb
icebp
jbe
inc
fs
out
dec
cmp
or
mov
add
and
sbb
or
lods
icebp
adc
or
dec
out
mov
lretw
sbb
sbb
mov
into
cs
cmpsb
mov
xchg
pop
push
fwait
add
and
ds
mov
xor
cld
aad
push
mov
pop
sbb
daa
or
fstpt
aaa
std
sub
mov
jae
push
xlat
stos
xchg
ds
in
out
mov
ret
ja
loopne
sub
dec
fcmove
mov
mov
xor
test
adc
push
xor
unpcklps
pop
adc
cltd
add
xchg
push
push
lds
inc
jle
nop
inc
pop
lret
cmp
and
mov
mov
mov
mov
hlt
sub
jmp
rcrb
mov
and
cmp
js
dec
or
mov
pop
mov
xchg
lds
test
and
movsl
add
dec
pusha
adc
movsl
push
mov
push
mov
xor
idiv
lahf
ljmp
or
push
xchg
xchg
adc
std
mov
jns
jl
test
sbb
dec
inc
inc
decb
mov
gs
inc
sub
push
das
pop
push
xor
jbe
dec
push
jno
mov
mov
jns
push
ljmp
mov
lahf
mov
pop
aas
gs
add
or
xchg
mov
dec
into
pop
insb
add
lret
adc
dec
lock
mov
pop
sub
decl
int3
aad
push
cli
jno
mov
add
movsb
jbe
rcl
cmp
out
or
jne
js
or
out
xlat
add
fisttps
int3
lea
idiv
cmpsb
and
lcall
mov
mov
xchg
fnstsw
das
std
add
pop
push
push
lods
aam
ret
adc
in
mulw
xchg
lret
lock
pop
into
adc
push
pop
inc
pusha
inc
xor
lods
add
addr16
jge
and
pusha
cmp
or
pop
push
sbb
xchg
mov
ss
in
xchg
cmp
lea
test
roll
dec
decb
inc
aad
fidivs
in
cmpsb
jmp
adc
outsb
std
cmc
adc
inc
loopne
add
inc
sub
inc
addr16
jne
mov
mov
stos
ss
fwait
pop
test
add
xchg
out
sub
frstor
in
aaa
mov
push
pop
inc
incb
mov
sbb
jmp
sub
sar
pop
push
xchg
sub
fwait
push
jmp
sub
stc
xlat
aas
push
jo
cs
imul
cmpsb
lcall
mov
cmp
mov
ljmp
mov
jbe
mov
loop
sub
jo
xor
sbb
aas
push
push
pop
pop
bswap
or
int3
adc
push
pop
ljmp
int3
int3
cmp
or
push
cltd
decb
xor
pop
sbb
push
mov
out
xchg
pop
xlat
sysret
dec
cwtl
loop
push
fistpll
stc
jno
sub
ror
decb
mov
add
jecxz
inc
daa
les
cld
mov
andl
insb
fsubl
mov
xlat
or
adc
test
fucom
ror
mov
inc
scas
shrb
jmp
sbbb
mov
jmp
lock
jae
push
mov
mov
pushl
fadds
aam
xlat
pop
xor
repz
push
and
sahf
scas
add
fs
sub
aam
mov
sbb
dec
inc
in
xor
cmp
je
imul
jle
mov
mov
shlb
das
mov
je
sub
xor
sbb
or
loopne
push
pop
stc
arpl
xchg
push
lea
sahf
test
aas
js
fwait
in
pop
mov
xchg
mov
and
mov
add
dec
and
jl
or
xchg
cs
gs
inc
xchg
pop
jg
mov
cmp
stos
scas
cli
xchg
scas
adc
imul
mov
hlt
dec
pushf
pop
loope
inc
popa
push
out
mov
or
jmp
fiaddl
daa
out
add
mov
xchg
pop
jecxz
mov
jmp
pop
mov
sbbb
loop
mov
cmp
mov
repz
xchg
stos
cmpsl
mov
scas
ds
jmp
mov
mov
xor
pop
jnp
push
scas
movb
xorl
xchg
and
pusha
faddl
int3
push
dec
test
cwtl
decb
hlt
out
mov
ror
push
sti
lret
repnz
xor
cmpb
icebp
roll
sbb
out
pop
and
aam
movsb
mov
cmp
jo
mov
mul
out
addl
lds
je
pushf
xor
xchg
movsl
test
incl
mov
mov
test
pusha
loope
mov
sysret
mov
or
das
and
or
fcmovne
mov
js
ret
fs
and
dec
and
add
int3
dec
push
and
scas
jp
or
les
and
fistpll
or
dec
sti
lret
dec
sbb
stos
add
in
cmpsb
adc
cmpsb
out
sub
filds
movsl
inc
mov
in
scas
movl
inc
cmpsb
data16
jmp
lods
enter
xchg
movsb
scas
sti
jmp
jge
scas
shr
jmp
or
pop
push
add
mov
xchg
push
test
mov
lods
push
sub
inc
cld
pcmpgtb
mov
lret
lock
inc
insb
xor
add
mov
insb
hlt
sbb
test
das
cmp
les
cmovbe
sahf
jle
cmp
dec
adc
stos
fs
pop
push
cmp
dec
mov
ja
aaa
dec
pop
insl
dec
sub
inc
sbb
insb
add
jl
dec
xor
mov
push
jle
scas
mov
cmp
inc
mov
xchg
xchg
out
dec
jne
sub
pop
push
fcomp
sub
pop
out
pushf
push
jbe
push
and
in
push
jo
movl
popf
cmc
loop
add
lods
aas
sahf
xchg
test
aas
xor
xor
scas
lret
mov
mov
xor
lods
jbe
sub
and
sub
loopne
inc
in
rorl
add
mov
icebp
push
stc
jns
xor
pop
dec
mov
jo
xor
adc
sbb
cltd
psubd
inc
leave
mov
lret
adcl
mov
loopne
or
fstpl
enter
int3
les
adc
les
sti
les
cmp
loopne
in
and
mov
in
xchg
repz
jns
pop
shrb
pop
in
mov
fisubrs
pop
jmp
dec
js
push
push
or
int3
rorb
stc
adc
sti
aas
out
or
mov
adc
dec
inc
jns
xor
loopne
ret
shl
mov
in
jg
xchg
test
sbb
sti
in
subb
ljmp
ds
mov
xor
cmc
pushf
lods
fs
dec
bound
in
ret
mov
out
fcmovb
dec
jg
das
popf
and
mov
fwait
les
sub
out
dec
aas
repnz
aam
jb
in
mov
loope
mov
or
out
xchg
loop
inc
jmp
dec
fsub
sbb
repnz
sbb
inc
mov
mov
fs
ljmp
mov
out
mov
mov
xchg
loop
adc
pushf
or
jb
xchg
adc
jne
mov
outsl
les
ljmp
or
xchg
in
sub
pop
and
movsl
push
ret
pop
mov
jbe
mov
out
in
or
ja
mov
or
jle
dec
idivb
stos
dec
fcomi
cmp
hlt
ficoms
pop
jl
jl
repz
add
adc
out
cmpsb
inc
addr16
aas
cld
sbb
push
fsubrp
or
pop
and
repz
and
lods
jno
cmp
sti
cwtl
and
andl
inc
pop
cmp
mov
cmpsl
dec
jg
push
call
das
xchg
jl
hlt
sti
cmp
push
fs
dec
pushf
cmp
movsb
xchg
loopne
add
sbb
mov
mov
mov
in
push
in
xor
les
out
scas
fs
test
outsb
mov
mov
or
cmc
add
mov
sub
jle
data16
pop
addl
cmpsl
divb
adc
scas
ds
sbb
loop
jge
mov
pop
fiaddl
ret
sub
loope
add
pop
outsb
push
pop
stos
scas
mov
lahf
sub
push
jl
or
jl
xor
jecxz
push
hlt
xor
dec
mov
pushf
repnz
cli
lahf
jg
cli
add
jno
push
xchg
pop
hlt
sbb
mov
movsb
push
sti
adc
bnd
mov
out
ficomps
mov
outsl
push
mov
fucom
outsl
ja
clc
in
iret
sti
insb
cli
xchg
into
jge
aas
stos
and
xor
inc
rorb
jl
mov
add
cmp
mov
imul
add
xor
popf
push
mov
adc
dec
sub
aas
scas
cmpsl
sahf
arpl
push
and
push
and
mov
shl
pop
popa
out
fwait
adc
cmp
push
rolb
hlt
sti
loopne
aam
imul
or
call
jg
add
add
je
push
cmp
and
inc
pushf
rolb
in
dec
shrb
and
lret
dec
insb
jnp
es
imul
or
or
repnz
adc
mov
adc
mov
and
pop
inc
jge
dec
xchg
out
add
test
xchg
xlat
adc
jne
iret
cwtl
dec
lea
cld
adc
xchg
dec
jb
mov
jo
push
jns
pusha
popf
int3
inc
mov
add
pop
popa
dec
mov
addr16
adc
adc
jbe
out
lret
mov
lcall
andl
mov
inc
in
jp
cmp
sbb
mov
out
pop
dec
cmpsb
cmc
xchg
xchg
imul
push
add
out
jnp
rorl
push
sarb
in
push
aaa
inc
mov
jge
adc
jo
divb
xchg
mov
ja
incb
lahf
popa
sub
jo
into
sti
aad
lods
mov
xor
stc
and
inc
add
cmp
add
mulb
shll
cltd
ja
jns
leave
cmp
dec
pop
cmpsl
xchg
out
sbb
into
xchg
lods
test
mov
dec
inc
enter
adc
jne
and
sub
sete
sarl
fsin
aam
adc
cs
test
cmpsl
negl
dec
fs
out
xchg
jl
xchg
mov
scas
in
int3
fcmovu
cld
cmpsl
adc
fwait
mov
dec
out
cmp
add
mov
or
xor
test
in
imul
dec
and
mov
mov
jbe
sbb
or
jo
sahf
or
jle
or
lret
ret
out
mov
jp
aam
arpl
jg
fsubl
icebp
pop
pop
mov
cmp
xchg
mov
ror
pop
push
lahf
ss
fdiv
sub
sub
int
push
dec
fwait
mov
loope
jmp
fcoms
jle
subl
data16
imulb
dec
bound
xchg
lcall
loopne
hlt
sbb
jnp
hlt
int3
in
mov
sti
mov
add
arpl
lds
testl
jne
rcrl
adc
sbb
adc
cli
aad
add
pop
jno
in
scas
comiss
cli
pop
xchg
ret
je
insl
imul
lret
jno
inc
push
dec
add
outsl
sub
shlb
jns
or
lods
mov
push
hlt
ljmp
ror
movsb
xor
push
mov
stos
ds
pushf
xchg
mov
lods
repz
mov
cmp
rorl
sti
repz
and
cmc
insb
inc
sahf
mov
or
bound
arpl
je
xchg
xchg
cmp
pop
and
std
stos
cld
ds
mov
outsb
ret
gs
sti
jecxz
mov
push
mov
push
rep
lds
add
into
or
insb
xchg
xor
les
jbe
aas
mov
ret
fdivs
push
fistl
hlt
and
loop
mov
pushf
out
mov
jae
sahf
mov
sti
cld
jno
push
fists
pop
fs
add
and
mov
push
pop
add
rolb
clc
mov
or
sub
imul
in
mov
ss
cmp
ret
add
xor
test
cld
sub
sbb
sbb
cmc
insb
push
fsubl
fisubrl
ss
xor
fmuls
lods
mov
out
xor
inc
xchg
movsl
sbb
dec
mov
cmp
roll
inc
test
sti
push
cmp
pop
xor
fdivrp
pop
in
xchg
movsb
mov
add
jmp
sub
add
mov
repz
jl
cmp
push
imul
call
aas
adc
movsb
and
push
ja
fsubl
mov
xchg
movsl
mov
lods
cltd
mov
int
insl
in
sub
stos
shrl
adc
cmp
lret
cmpsb
imul
cld
inc
jecxz
pop
gs
and
dec
test
pop
imull
adc
jmp
jecxz
out
xor
incb
jnp
scas
cld
xor
lret
js
xchg
fst
jb
es
arpl
xchg
sub
jbe
jge
push
inc
xchg
lret
aaa
in
jle
stos
push
outsl
pop
mov
aas
in
fwait
inc
cmp
filds
cmpsb
mov
mov
adc
decb
fnstenv
mov
and
adc
jmp
inc
mov
lds
mov
or
mov
cmc
lahf
mov
push
adc
sbb
pushf
mov
out
xor
sbb
jg
cwtd
incb
je
xchg
jae
lea
vcvtdq2ps
xchg
scas
loop
inc
xchg
and
jns
mov
push
lea
inc
js
in
arpl
cld
mov
or
add
xchg
push
jmp
sbb
pop
mov
cmpsb
imul
jle
sub
aaa
nop
inc
sbb
cli
arpl
subl
test
fcmovu
sbb
lahf
inc
or
adc
mov
bound
dec
out
cmp
cmp
or
inc
dec
in
jle
stc
mov
adc
cmc
dec
outsl
adc
mov
stos
ds
and
sub
pop
push
push
mov
add
cmp
incb
cs
jge
xchg
out
adc
pusha
ror
sub
in
pop
aaa
and
and
nop
fists
add
shr
hlt
hlt
pop
leave
jne
push
dec
jge
add
sbb
adc
lret
in
inc
incb
ret
cmpsb
inc
cmc
push
mov
jle
fiaddl
mov
test
mov
fsub
xor
xchg
lea
inc
sarl
out
sti
jo
add
jne
scas
lahf
jle
bound
cmc
xchg
pushf
mov
push
mov
subl
cmpsb
in
rcll
inc
insb
ljmp
bound
das
into
mov
insb
insb
jmp
mov
cld
inc
jne
std
scas
bound
ficomps
xchg
sub
inc
aaa
sub
rorl
sbb
call
fisttps
jo
push
jecxz
xchg
push
jns
outsl
aaa
scas
add
aad
pop
xor
cltd
add
push
shl
int
mov
inc
xchg
and
das
cmp
xchg
dec
stos
xor
xlat
loope
cmp
fidivrs
push
cmp
call
and
push
push
scas
mov
or
push
jnp
xor
pop
xchg
mov
scas
lods
jl
cld
mov
imul
stc
dec
sub
push
decb
mov
or
rorl
sbb
cmpsl
xlat
std
xor
out
stos
push
jo
fbld
mov
adc
and
inc
and
xor
incb
and
ja
movsl
int3
sub
adc
ds
mull
mov
cmpsl
lea
popl
fsubrs
roll
mov
ret
xchg
sbb
add
add
mov
in
in
test
loopne
inc
inc
inc
mov
repz
cmc
hlt
mov
jnp
in
sbb
lret
add
inc
adc
cmp
shll
sbb
fwait
push
sub
cmpsb
inc
adc
push
cmc
cmp
int3
in
jns
jae
dec
out
mov
sub
stc
leave
or
mov
das
pop
xchg
popa
lock
mov
mov
jb
and
sub
add
push
jns
push
mov
int
jbe
mov
mov
inc
sbb
pop
lcall
xchg
push
xlat
mov
add
adcb
pop
inc
mov
iret
sub
testl
subl
sbb
mov
push
xchg
das
ficoml
pop
movsb
mov
cld
popf
push
out
pop
or
fldcw
aaa
pop
daa
movsb
into
and
faddl
inc
push
stc
mov
test
pop
add
xchg
adc
mov
es
mov
clc
fstl
jp
lahf
out
cmp
xor
xchg
xchg
lods
cmp
fiadds
xchg
dec
xor
in
add
sahf
loope
xor
jecxz
cli
pop
adc
or
mov
cmc
jns
mov
xor
xor
int3
sbb
mov
out
cmp
stc
pop
loope
push
sub
ret
sub
in
fcoms
inc
setns
out
add
in
test
repz
cmp
adc
add
push
aas
sbb
pop
dec
popf
and
and
dec
pop
xchg
push
repz
lahf
pop
nop
push
xchg
sbb
decl
pop
lret
ja
popf
aaa
xlat
in
sbb
out
lret
rorb
adc
lods
test
cli
in
lahf
adcl
push
push
loope
jae
mov
int
mov
dec
into
add
xor
lea
adc
and
dec
in
pop
xchg
dec
fadds
repnz
adc
pop
cwtl
test
mov
sub
lock
jmp
rcr
jp
mov
daa
mov
cmp
sbb
lock
ja
pop
addr16
xchg
xor
add
xor
cld
and
fstpt
inc
adc
ds
jge
out
mov
ret
lahf
and
fisttpl
ljmp
cmp
int3
xor
jmp
or
dec
movsb
icebp
addr16
adc
hlt
xchg
sahf
lock
pop
sarb
int3
and
jne
lods
das
int3
mov
and
ja
or
sbb
sub
inc
rorl
test
push
es
mov
fimuls
fldt
jmp
mov
adc
jle
int
std
fcmovb
ficomps
stos
out
cs
out
and
xchg
jmp
mov
sbb
jp
clc
loope
les
adc
jne
bnd
sbb
out
loope
bound
pop
mov
and
xchg
mov
pop
das
incb
ficoml
js
cltd
icebp
test
hlt
fdivr
push
sub
lcall
nopl
cmp
adc
ret
int3
push
js
or
dec
cmp
push
mov
adc
adc
and
lcall
and
mov
fsts
mov
inc
aas
cmp
sbb
mov
aad
ljmp
push
int
rolb
lods
lret
jo
mov
xchg
ret
push
pop
movsl
mov
cmpsl
adc
cmp
inc
into
sub
cmp
pop
dec
cs
xchg
and
call
lock
subl
stc
jno
fisttps
push
jae
rcll
jge
dec
pop
hlt
jl
cmp
lcall
test
repz
aas
decb
fwait
jg
lahf
imul
stc
lock
int3
mov
push
nop
adc
in
call
adc
ret
test
add
ss
sub
fwait
aad
fbstp
jne
add
sub
iret
fldenv
lods
test
cltd
test
in
lcall
or
lahf
pop
push
xor
out
cmp
push
inc
shlb
push
jbe
cmp
cmc
jno
sub
push
hlt
out
mov
push
jbe
pop
rorb
hlt
insb
mov
testl
lea
lret
and
xorb
inc
ficoms
sub
movsl
lods
stc
xor
adc
sbbl
mov
addl
mov
test
mov
cli
filds
inc
fdivrp
stos
cmpsl
push
jmp
jb
dec
mov
inc
pop
test
jp
jnp
push
xlat
mov
outsb
in
aam
ss
pop
mov
in
push
add
xchg
movsb
fwait
mov
xchg
les
in
sbb
int3
in
cld
jmp
cmp
dec
push
mov
cmp
fisubs
push
ret
sub
add
push
xchg
cmp
jnp
mov
push
sub
jmp
xchg
cmc
je
mov
pop
lods
jle
aam
cmc
mov
sarb
push
xlat
cmc
movsb
jmp
fdivrs
mov
insl
push
push
push
lret
jae
pop
sub
mov
es
xchg
ret
mov
rcrl
jmp
iret
loop
cltd
add
pop
aaa
adc
inc
jmp
cwtl
pop
jp
and
out
jl
inc
lods
mov
movl
cmpsb
or
mov
out
add
inc
push
mov
mov
inc
push
dec
sbb
mov
test
out
mov
in
adc
xchg
stc
mov
stos
inc
les
sbb
mov
iret
les
loop
icebp
dec
pop
mov
stos
addr16
clc
dec
daa
xchg
or
xchg
test
orl
fldenv
lock
scas
push
movsb
mov
mov
mov
mov
movsb
sti
stos
cmpb
out
cs
xchg
stos
mov
in
lret
inc
inc
stos
cwtl
mov
cli
mov
enter
mov
xchg
aam
jle
stos
cmpsb
test
or
cs
inc
ret
lock
inc
sbb
inc
sbb
repnz
les
cmc
stos
or
inc
lea
stos
sub
jl
lods
addl
adc
adc
fwait
xchg
aas
cmc
mov
mov
mov
inc
and
test
push
insb
imull
jae
adc
xchg
repz
mov
add
addr16
jnp
lods
fcmovnu
test
jl
mov
lods
lock
movsl
inc
adc
or
or
mov
pop
cmp
in
aad
jl
inc
mov
jmp
dec
add
cmp
push
sub
les
cmp
mov
push
stos
fwait
sbb
mov
aas
arpl
mov
das
pop
icebp
mov
js
stos
sub
ja
pop
add
jo
cmc
jle
mov
cmp
cvttps2pi
out
dec
xor
mov
pop
xchg
fiaddl
xchg
pop
inc
add
lock
cmp
into
cltd
xor
notb
repz
rcrb
jo
mov
and
mov
push
and
enter
cmp
sbb
ja
test
xor
mov
imul
adc
push
add
loop
int
je
aad
push
lcall
mov
les
jge
fidivrl
test
test
lods
int
decb
jecxz
jo
cmp
and
outsl
mov
jns
fimull
mov
cmp
int3
pusha
and
push
orl
sbb
dec
std
inc
and
add
out
mov
pop
push
sub
hlt
pusha
sbb
mov
shrb
xchg
roll
xor
and
mov
sahf
jmp
cmp
loope
jge
call
shll
cmp
mov
std
sub
fwait
sbb
or
ja
pop
jae
sar
fbld
loop
cmp
adc
dec
mov
cmp
shll
jmp
call
pop
stos
mov
inc
xchg
dec
popf
lahf
xor
push
push
inc
in
outsb
fwait
stc
shll
int
xor
pop
iret
pop
lods
insl
jae
xchg
xchg
dec
mov
push
mov
cmpsl
lods
xor
dec
mov
cmp
out
sub
shr
pop
mov
in
out
dec
ja
adc
shr
mov
mov
adc
xchg
dec
pop
nop
xchg
add
xor
js
leave
sbb
sbb
mov
dec
mov
lcall
sbb
test
sarb
and
fistps
scas
pop
push
fsubs
dec
adc
out
out
pop
jecxz
ss
xchg
fwait
popa
lret
push
push
and
stos
sub
dec
gs
stc
ja
test
jge
mov
decb
loopne
dec
in
xchg
mov
incb
adc
jge
shlb
adc
sar
push
pop
mov
cmp
xchg
mov
decb
or
fnstenv
in
sbb
xorb
out
mov
incb
pop
cwtl
or
mov
cltd
nop
mov
mov
mull
xor
sub
daa
popf
adc
push
dec
dec
imul
repnz
mov
incb
pop
mov
test
mov
das
cmp
call
cltd
fistpl
nop
in
xchg
pop
jo
decl
inc
push
stc
sbb
insb
adc
fsubrp
adc
jne
cwtl
and
fildll
or
pop
stos
inc
xchg
ja
adc
mov
loop
imul
dec
mov
in
pop
pop
cmp
inc
push
repnz
mov
or
shrl
sbb
mov
jbe
mov
pop
jg
mov
ljmp
mov
sub
pop
xor
or
rorl
std
or
fdivr
cmc
push
mov
xor
ss
mov
aam
daa
aas
repnz
pop
adc
int3
mov
stos
sub
jge
inc
add
pop
inc
dec
push
adc
jne
xorb
pushf
push
lods
dec
adc
xchg
cmp
cs
icebp
loopne
int
in
push
jb
and
cld
mov
adc
sub
xchg
jge
dec
sbb
decb
inc
push
and
mov
cld
adc
arpl
in
or
inc
int
andb
incb
pop
jge
ret
cmc
rorb
push
je
adc
loop
cmp
or
mov
jo
mov
pop
jg
idivl
and
mov
out
sahf
sar
gs
js
jae
int3
and
in
dec
rclb
stos
mov
cltd
cwtl
nop
pusha
cmpb
mov
fisttps
mov
jo
push
sub
sbb
xor
xchg
adc
in
inc
xchg
pop
test
mov
popl
test
mov
jmp
in
inc
pop
popf
xor
sbb
jb
push
stc
xor
mov
jge
in
sbb
add
shlb
mov
testb
inc
in
cs
jnp
ds
or
sub
pop
inc
push
xchg
cs
mov
or
push
es
add
xor
stc
int3
sbb
ja
stc
fdivr
or
pop
push
hlt
out
inc
inc
ljmp
pop
push
data16
pushl
mov
adc
loop
or
lea
pop
mov
roll
insb
or
add
mov
sub
popf
adc
out
aas
mov
aad
fwait
push
stos
pop
xor
incb
xchg
js
ljmp
iret
stos
fisttpll
fimuls
fists
jge
aaa
pushf
xchg
test
popa
xchg
xor
stos
jns
andb
fstpt
out
sub
loope
jae
jns
lret
mov
push
adc
jle
inc
fnstsw
add
mov
iret
xor
cmp
push
mov
jl
and
push
cmp
dec
into
push
add
mov
loopne
pop
les
or
lret
push
dec
pop
sbb
dec
push
mov
shlb
les
outsl
mov
pop
xchg
out
mov
int3
sbb
out
sahf
cltd
fisubl
xor
inc
push
or
fs
jno
add
add
int3
aaa
dec
ja
insl
add
cmpsb
outsl
outsb
and
ret
scas
dec
lock
pop
push
dec
mov
repnz
fbld
int
add
pop
loop
fidivrl
adc
mov
shlb
repnz
out
push
fsubrp
aas
dec
cltd
xor
call
lods
lret
js
sbb
mov
sub
aad
dec
inc
das
xchg
shlb
mov
pop
mov
jmp
cld
adc
fnstcw
ret
cmp
cmp
mov
jle
push
repz
movl
data16
inc
mov
leave
sti
jae
lods
dec
lret
push
jnp
push
das
insl
lods
xor
test
push
jl
inc
lods
jmp
in
loope
ret
mov
out
push
loop
cltd
sub
pop
jmp
fwait
es
pop
and
ljmp
inc
mov
ret
stos
cwtl
pop
jp
and
ja
jl
inc
lods
jmp
xchg
adc
xchg
icebp
cmpsb
mov
pop
mov
call
xchg
or
daa
out
loop
jae
add
data16
push
aas
pop
add
idivb
cld
aam
mov
mov
lock
xchg
cs
mov
xor
inc
cmp
arpl
cwtl
loope
scas
pop
mov
sub
xchg
pop
das
mov
cmp
setno
hlt
scas
inc
mov
mov
dec
cmp
jnp
test
pop
ret
icebp
inc
add
in
loopne
add
push
pop
loope
xor
lock
adc
pusha
mov
push
out
push
xchg
mov
pusha
adc
stos
xchg
test
sahf
test
adc
mov
das
shlb
pop
fisttpl
push
fnstsw
jp
adc
xor
enter
das
sbb
dec
jle
imul
ds
nop
out
les
mov
jbe
ja
sbb
and
cmp
jmp
insl
xchg
sub
popa
pop
out
and
mov
leave
mov
or
jns
insb
pop
lds
xor
negb
js
jae
ljmp
ja
stos
pop
xchg
mov
cmp
loope
dec
paddsw
fs
inc
adc
xchg
inc
fsubrp
mov
in
add
adc
sti
push
push
cmp
cmp
and
push
fcomip
add
sti
ret
xor
int
bnd
test
mov
fdiv
dec
je
popf
loop,pn
fs
fwait
push
out
cmc
sar
xchg
clc
enter
adc
mov
cmpsb
jp
inc
and
jl
or
dec
nop
ss
inc
dec
out
icebp
dec
xor
adc
or
jl
lods
xor
ret
mov
daa
pop
scas
push
jbe
mov
roll
arpl
movsl
push
lods
cmc
mov
jnp
mov
or
stos
pop
xor
pop
inc
cmp
aam
adc
repnz
adc
rorl
in
dec
pop
push
adc
sahf
add
rcrb
xchg
add
lcall
mov
and
lret
shll
lret
sub
les
es
mov
jecxz
hlt
andl
dec
outsb
xchg
and
popa
repz
pusha
popa
push
jmp
loopne
or
cld
sub
hlt
int3
pop
jnp
mov
movsb
in
mov
inc
mov
mov
clc
mov
push
out
in
and
adc
loopne
in
jo
ret
inc
lods
mov
out
sub
out
and
or
or
les
mov
cwtl
pop
mov
test
xor
out
mov
je
mov
cmp
cwtl
pop
lcall
xor
or
dec
jl
xor
mov
push
and
sarb
xlat
cmp
pop
icebp
jmp
push
adc
popa
xchg
jp
adc
cmp
push
adc
sub
sub
shll
jns
mov
aam
popa
mov
mov
fcoml
cwtl
stos
jbe
rolb
movsb
rcl
xlat
bound
push
add
popf
shlb
jnp
pushf
dec
repnz
imul
push
mov
das
pop
fs
sbb
int
jb
add
insl
mov
adc
jno
andl
pop
in
outsb
adc
test
mov
ror
push
out
rol
jmp
mov
add
fs
xchg
lret
jmp
mov
fucom
xchg
sbb
cmpsb
test
mov
cmp
das
outsb
or
mov
in
in
pop
repnz
dec
int3
je
mov
mov
sti
les
add
mov
and
lds
sahf
mov
and
fdivrl
int
adc
inc
in
insb
inc
push
bound
jge
repnz
hlt
aam
push
dec
movsl
fisubs
lret
add
and
cmp
mov
cmp
ret
lcall
aaa
into
jl
push
jne
les
mov
jl
or
cmp
hlt
in
sbb
pop
aad
loope
sub
xor
mov
sbb
sub
and
add
dec
test
and
mov
cwtl
sub
in
mov
in
cs
xor
repnz
inc
mov
cmp
mov
rol
push
mov
negb
cwtl
pop
xorb
js
inc
mov
sbb
cwtl
pop
repnz
movsb
cmpsb
add
lods
mov
inc
mov
ljmp
adc
mov
movsb
cltd
sub
ljmp
and
pushf
stos
or
adc
or
les
in
or
test
pop
cmp
bnd
xchg
jl
jecxz
stos
sbb
xor
ret
fbstp
push
xor
in
mov
insb
mov
fs
sub
loopne
outsb
ror
xor
mov
scas
xor
mov
sbbl
pop
jg
push
test
xor
fdivrs
lods
lcall
ds
test
push
mov
out
addr16
jae
fiaddl
les
push
adc
aam
jb
inc
shrb
mov
jns
push
fnstenv
inc
ja
mov
push
daa
stos
rolb
cmpsb
inc
fnstenv
icebp
xchg
movsb
cmp
inc
jmp
cwtl
pop
bnd
pushf
cmovne
jnp
lret
mov
daa
jge
incl
or
sbb
mov
mov
sarl
mov
mov
fs
jp
je
xchg
dec
popa
jg
sbb
movl
jge
into
jl
push
cmp
xchg
push
enter
nop
sarb
mov
cmp
in
loope
inc
fmul
daa
mov
xor
aam
loope
add
int3
sbb
int3
test
leave
xlat
cmp
lods
sti
xor
sahf
aam
roll
enter
popa
fnstcw
out
and
test
arpl
jae
and
sbb
sub
cmp
jmp
out
adc
and
push
pop
bound
jns
mov
sti
add
add
in
lods
sti
add
sti
sub
sti
arpl
ret
jns
sub
pop
scas
add
repnz
or
jmp
jmp
sti
push
shll
jecxz
push
loop
sti
pop
pushf
movsb
and
test
pop
fneni(8087
outsb
push
das
out
mov
cld
mov
and
in
or
mov
lcall
adc
addr16
fs
pop
fs
sahf
jge
pusha
add
int3
cltd
sub
mov
pop
add
jo
adc
push
ds
and
push
sti
ror
pop
fwait
add
xor
les
pop
jg
nop
fldcw
dec
xchg
repnz
push
out
std
aas
ret
in
in
sbb
aaa
sub
and
sub
gs
and
sub
sub
clc
inc
mov
xchg
jae
sti
mov
mov
add
cmp
sbb
movsb
pause
or
scas
sub
repz
push
lret
cmc
and
sti
js
and
test
hlt
scas
ja
pop
pop
sbb
pop
insl
inc
mov
pop
cmp
cmpsb
dec
fs
addb
pop
lret
xchg
cmpsl
cmp
mov
mov
sub
dec
push
cmp
push
sub
push
jbe
cmp
fldl
pop
or
mov
cmp
and
test
les
nop
ror
and
pop
out
or
sub
imul
stos
xor
mov
pop
and
push
in
cmp
int
pop
loopne
mov
add
les
or
cld
jmp
dec
push
sub
jmp
adc
outsl
repnz
in
jae
cmp
push
dec
mov
scas
jae
mov
jmp
and
test
in
inc
and
aas
pop
jb
and
mov
rcll
lahf
inc
ljmp
cmp
stos
or
pop
movsb
loopne
lahf
les
xor
dec
push
sti
inc
ficoms
mov
enter
push
inc
outsl
dec
push
cmp
mov
stos
sarb
inc
pop
popa
xchg
jae
mov
xorb
fwait
cmp
stos
mov
cli
cltd
icebp
pop
mov
in
loop
imul
push
xor
into
in
orl
hlt
je
push
fimuls
in
mov
jbe
jmp
add
jge
push
mov
and
add
sub
dec
mov
cli
testb
hlt
fs
pushf
sub
or
pop
add
jbe
add
mov
loope
jae
loopne
hlt
pop
jns
add
jns
ret
ljmp
jno
in
jle
test
xchg
add
out
or
fisubl
mov
and
mov
fidivrl
add
mov
shlb
clc
pushf
in
iret
dec
mov
add
fbstp
xchg
sub
jmp
sti
push
inc
cmp
lcall
jnp
loope
lock
movsb
inc
repnz
in
add
cld
dec
pop
scas
jmp
in
cld
or
bnd
adc
mov
movsl
pop
xor
jb
jp
mov
jl
pop
aam
lea
fs
jp
mov
inc
mul
shlb
pop
test
push
xor
je
scas
xlat
pop
les
add
inc
in
mov
roll
mov
pop
and
insb
pop
jae
dec
repz
rorl
or
mov
lea
jl
dec
jo
je
out
add
xor
adc
mov
mov
dec
repnz
dec
add
lcall
lock
adc
pop
cs
mov
insb
in
add
js
stc
lahf
push
pop
rcrl
mov
sbb
jle
scas
aaa
stos
aaa
push
outsb
das
push
jge
jmp
gs
inc
mov
add
adc
or
add
or
loopne
push
je
xor
sub
in
add
scas
jl
dec
sbb
jmp
mov
loopne
mov
das
out
xchg
mov
dec
sahf
aas
mov
scas
jmp
mov
mov
in
in
xchg
cmp
cmp
jmp
mov
dec
sub
loopne
jl
lods
daa
out
push
lret
scas
fs
jl
dec
scas
sbb
jmp
pushf
sbb
push
test
push
fdivl
scas
sbb
jne
sahf
cmp
fdivrl
js
inc
mov
add
stos
movsl
stos
mov
je
in
jmp
sti
into
movsl
mov
les
cld
xor
inc
loop
test
stc
xchg
imul
add
push
mov
ljmp
push
movsb
and
test
adc
cmp
out
in
sbb
into
mov
std
hlt
inc
and
icebp
cld
les
xor
inc
ljmp
fmulp
sbb
and
ljmp
rcll
faddl
jne
outsb
cmp
xchg
sti
in
js
add
insl
mov
cmp
xchg
push
enter
loopne
hlt
jae
and
hlt
push
stos
fwait
ret
hlt
cmp
adc
adc
xor
sti
cld
mov
inc
leave
enter
and
hlt
movsb
mov
adc
dec
dec
mov
in
and
xor
jecxz
mov
jb
mov
and
faddl
in
in
and
les
call
cmpsb
mov
add
subl
lock
pop
cld
and
cmp
push
sub
les
js
mov
cld
imul
hlt
xlat
pop
stc
mov
mov
int3
and
repnz
insb
fcmovbe
mov
or
push
out
and
xor
fdivl
cmp
pop
fsubl
out
fbstp
cmp
mov
repnz
in
sahf
xor
adc
ret
xor
nop
jp
pop
into
arpl
xor
pop
lods
negl
mov
inc
lods
xor
mov
xchg
fcmovu
roll
pop
jl
aad
outsl
add
inc
sti
orl
add
lret
lds
les
sbb
push
inc
iret
lret
int3
sbb
or
fwait
pop
push
mov
call
out
hlt
daa
pop
jb
rol
ja
leave
adc
and
jp
stc
scas
movsb
shrb
fsts
or
mov
cld
out
jl
xchg
sub
stos
jne
fistpl
cld
out
shlb
stos
scas
stos
xlat
sub
les
xor
dec
xor
cmpsl
lods
add
cli
xchg
pop
popa
mov
dec
bound
in
aas
or
repz
xchg
loope
jnp
lods
fidivrl
or
shrb
lods
popa
mov
fs
ljmp
cmpsb
jmp
inc
or
inc
xchg
jb
in
js
aad
ja
or
scas
mov
sbb
js
mov
mov
das
xchg
in
addb
inc
hlt
jge
jl
cld
inc
xor
rep
std
jp
pop
fnstenv
mov
push
adcb
dec
js
shlb
sbb
pop
je
rcr
into
je
fyl2xp1
mov
orl
aam
push
jno
mov
ja
ret
fsubrl
hlt
mov
inc
jecxz
cld
mov
rcll
mov
nop
sarl
fstpt
add
mov
sti
out
loopne
xchg
cmp
mov
lret
arpl
fadd
sbb
sub
aas
add
add
xor
adc
in
insb
shlb
test
popf
pause
add
or
jge
and
push
fwait
mov
and
xor
jmp
xchg
jb
cmc
icebp
jo
sub
roll
in
push
mov
mov
mov
pop
inc
fbstp
in
imul
cmpsb
sbb
popa
test
addr16
jne
sbb
jecxz
je
and
sbb
das
mov
cmp
sbb
pop
mov
pop
push
or
rol
jne
cmpsl
filds
sub
mov
push
mov
incl
scas
jge
mov
cltd
pop
clc
push
loope
rcrb
sahf
mov
aas
inc
ss
imul
adc
mov
sub
push
or
inc
sub
or
jge
out
dec
shrl
mov
sbb
and
into
cwtl
push
dec
sarb
movsb
stc
fisttps
push
adc
sbb
sub
in
mov
or
push
rclb
jge
xlat
cmc
incb
out
fcompl
xchg
pop
mov
push
dec
ja
mov
cltd
pop
test
lahf
into
es
or
hlt
or
pop
mov
rcll
aas
and
pop
push
pop
jge
xchg
pop
mov
add
mov
jmp
repz
cmpsl
adc
stos
xchg
hlt
cmp
mov
pusha
gs
or
or
xchg
inc
dec
mov
cmc
ss
xchg
fisubs
mov
mov
sub
ret
shr
push
loopne
mov
dec
fmulp
mov
or
add
std
insb
push
sub
xchg
pop
aad
sub
sbb
push
push
idivb
lahf
lea
mov
and
mov
imul
add
pop
mov
stos
and
dec
jne
lds
cli
aaa
les
xor
add
adc
sub
jno
adcl
int3
inc
xchg
jl
das
out
mov
aam
jns
into
roll
mov
sbb
dec
or
cmp
fldcw
mov
adc
inc
ffree
into
jbe
push
push
xchg
dec
incb
mov
xor
rcrb
cmp
js
xor
and
orl
inc
adc
push
clc
dec
gs
js
jle
jb
ret
imul
add
and
ret
dec
je
mov
int3
out
into
sbb
in
or
cmp
filds
xchg
imul
std
fwait
jae
inc
fiadds
notl
push
int3
push
or
popf
sub
ficoms
cmpsl
ret
adc
ss
scas
xchg
iret
sub
add
ret
jns
rcl
decb
int
pushf
jle
xchg
mov
xchg
sarl
cld
pop
mov
mulb
cmp
dec
jle
addr16
push
jle
mov
bnd
mov
push
cmc
push
sbb
jmp
xor
incb
fildll
loope
fs
add
out
mov
add
jae
mov
hlt
je
jo
sub
add
out
in
dec
inc
pop
sub
aaa
cmpsl
inc
jge
dec
clc
cmp
push
mov
pushf
push
push
out
incb
je
jmp
ja
dec
fld
popf
cwtl
push
out
dec
fwait
jg
cld
xor
inc
popl
add
xor
nop
jne
test
mov
cmp
dec
arpl
jge
xor
pop
or
mov
pop
decb
xchg
outsl
jae
iret
push
or
or
adc
dec
and
lret
mov
outsb
mov
push
sub
xchg
lods
das
imul
adc
aaa
aas
sub
outsb
cmp
mov
xor
rclb
mov
or
pop
cld
sub
cli
jne
sub
cld
xchg
cmpsb
dec
pop
sbb
decb
mov
sar
das
sub
loopne
sar
lock
jns
data16
cltd
xchg
incb
pusha
mov
xor
fcompl
iret
cs
pop
mov
jl
dec
mov
shl
or
xlat
dec
popa
movsl
xchg
xor
mov
inc
iret
sub
insl
loop
mov
incb
xchg
pop
sti
push
sub
cwtl
jnp
push
inc
jp
mov
or
out
xor
or
adc
adc
dec
jecxz
dec
sub
in
and
dec
les
jle
mov
dec
lret
sbb
decb
xchg
push
sti
xchg
pop
leave
stos
mov
mov
push
xchg
pushf
in
into
sbb
dec
in
push
mov
adc
or
push
std
mov
shlb
leave
pop
js
fldenv
std
inc
jb
nop
ror
and
cmp
jge
pop
cld
pop
xlat
mov
inc
and
rclb
popa
push
adc
pop
imul
jecxz
das
mov
pop
jg
and
into
js
xor
adc
jne
dec
push
dec
jbe
cmp
rolb
cmpb
in
dec
ret
xchg
ss
jb
xor
push
cmpsb
mov
movsl
movsb
jecxz
xchg
hlt
jns
or
data16
xchg
sarb
scas
xchg
xchg
xchg
dec
inc
or
je
mov
mov
es
sub
aas
insl
out
or
dec
mov
leave
std
or
and
or
xor
dec
out
mov
pop
adc
jns
pop
pushl
int
fs
dec
test
mov
mov
xchg
pushf
adc
dec
sahf
mov
pop
inc
xchg
fwait
popa
dec
sub
cld
mov
pop
imul
fnstenv
push
or
mov
rcrl
ljmp
or
sbb
test
lret
divl
int3
pop
sub
ret
sub
push
xchg
cmp
push
std
ret
push
dec
cld
sub
imul
inc
test
popa
stos
mov
push
adc
fs
decb
sub
fiadds
aam
in
into
inc
idiv
jge
ror
cmp
mov
xor
out
fildl
hlt
pop
js
inc
jmp
icebp
outsb
jnp
pop
outsb
adc
sub
dec
mov
jnp
aas
rorl
ss
dec
cld
adc
in
pop
outsb
aas
pushf
iret
in
dec
outsb
push
test
push
cmp
pop
test
sahf
hlt
jmp
aam
sahf
push
xchg
jge
xchg
not
jb
imul
enter
shlb
enter
stos
mov
jae
mov
mulb
push
test
in
adc
sub
jnp
std
push
push
mov
jne
xchg
jge
jp
shrb
cmp
sub
mov
cld
mov
call
pop
mov
loop
adc
test
icebp
out
movsb
adc
jae
sbb
or
jb
cwtl
fnstcw
test
shll
pop
pop
push
mov
fwait
adc
arpl
push
xchg
and
pushf
xchg
xchg
scas
sbb
push
lret
push
add
call
jmp
in
xchg
test
pcmpgtb
lea
in
pop
loop
jmp
orb
dec
jle
dec
add
pop
cmpb
xchg
adc
xchg
push
mov
out
pop
data16
fcoml
sarb
add
je
push
push
imul
imul
out
and
in
mov
and
sti
mov
in
out
push
out
movsl
shl
jle
shl
int
dec
push
mov
jl
mov
jg
cld
mov
in
lods
adc
jae
pop
jae
push
jge
ret
sbb
imul
xor
sbb
adc
add
jg
add
lea
bound
or
jne
adc
enter
or
mov
out
roll
loop
mov
sub
ret
sbb
jns
inc
cld
mov
xchg
out
in
xchg
or
xchg
adc
scas
shrl
mov
and
bound
pop
inc
mov
cltd
cmc
add
ret
cld
jno
cmp
fists
leave
jbe
xor
xchg
cli
std
mov
aam
pop
cmpsl
lods
cmpb
fwait
or
daa
outsl
aaa
incb
mov
mov
out
and
js
jns
in
sub
jno
jge
cmc
pushf
fisttps
gs
leave
sbb
or
add
mov
adc
or
daa
adc
pop
dec
out
cmpsb
and
inc
sub
push
mov
jp
sbb
xor
lret
and
std
xchg
rep
xor
mov
jp
test
insb
sbb
jb
cmp
popf
daa
sar
shl
aas
cli
ret
mov
mov
lcall
stos
mov
mov
movsl
rcrb
jl
in
and
int3
in
jnp
xor
pop
xor
mov
and
decb
sbb
cmp
mov
mov
cld
xor
xchg
pop
cmc
test
xchg
jne
rclb
sbb
push
jbe
sbb
push
loop
inc
jno
lea
lahf
xchg
decb
ret
adc
mov
mov
ds
pop
dec
mov
inc
rorl
jge
ja
scas
push
fnsave
shl
mov
jecxz
push
ret
and
sub
cli
jge
mov
mov
adc
test
cmp
sarb
enter
mov
push
int3
cltd
mov
jae
mov
inc
sub
push
leave
mov
cmp
mov
add
sbb
divl
cmc
fadds
xor
xchg
xchg
sbb
sub
adc
xchg
dec
add
xor
push
mov
filds
fstpt
incb
jl
adc
or
pop
xchg
push
xchg
xchg
xchg
xchg
adc
sar
imul
lret
shrb
inc
lods
incb
sub
sub
pop
cmp
adc
inc
add
sub
adc
cwtl
shll
xor
mov
add
inc
lea
pop
arpl
lds
push
add
fsubs
sbb
or
mov
inc
sub
nop
push
fidivs
pop
vmread
popa
into
sbb
fldl
jo
or
sub
jecxz
adc
stos
in
push
js
cltd
popf
adc
cmp
shlb
fdivp
cmpsl
movsl
pop
push
decb
in
fwait
adc
ljmp
stc
mov
mul
xchg
xor
cld
ret
or
inc
pop
shll
sub
pop
cmpsl
jge
ljmp
adc
push
push
or
cmp
cmp
inc
xlat
add
or
push
fidivl
out
in
ss
icebp
rclb
std
andl
inc
jge
mov
dec
push
gs
adc
or
sarb
jno
mov
out
xchg
std
cmpsb
fsts
fisubs
dec
adc
pop
call
arpl
cmp
jge
mov
outsb
arpl
jl
cs
pop
cmp
pop
scas
and
xchg
add
aaa
dec
cld
jnp
sbb
jg
sbb
cld
fwait
jge
call
test
cmp
outsl
inc
mov
pop
cwtl
fwait
xchg
add
nop
pushf
inc
push
lcall
sbb
in
mov
and
out
lret
lods
or
popa
adc
cwtl
shrb
lea
pop
shll
xchg
pop
test
mov
imul
cmpsl
jecxz
push
insl
div
mov
inc
js
jmp
dec
in
xlat
push
test
xchg
pop
cmp
mov
bound
jg
inc
pop
add
xchg
xor
push
imul
cld
cli
mov
std
sbb
jmp
movb
mov
jne
sahf
sub
xor
xchg
lods
gs
cmp
sarl
scas
add
sub
jp
pop
icebp
jg
dec
add
mov
incb
push
xchg
lret
in
bound
sub
sbb
adc
jmp
cld
jbe
data16
cmpsb
adc
in
mov
ret
rcll
sbb
inc
subl
or
int3
rcrl
adc
fisttpl
shrl
in
jle
lods
mov
je
lds
mov
test
and
ret
test
pop
int3
mov
adc
data16
xchg
das
jo
movl
jge
lods
mov
iret
jno
and
adc
test
sbb
fnstcw
push
call
movsl
sub
or
sti
fs
xchg
xchg
inc
jg
dec
sub
out
and
jmp
enter
push
mov
mov
repnz
jnp
mov
add
push
or
aas
jne
pop
mov
mov
pushl
lcall
frstor
cli
jnp
into
inc
mov
adc
es
or
pop
add
jge
out
jl
arpl
or
int
add
jae
ret
mov
rcrl
add
mov
pop
outsl
test
and
out
ret
add
rol
xchg
ljmp
xchg
sahf
ja,pt
lock
jle
add
in
fisubrs
cs
or
ret
add
and
and
mov
scas
and
adc
out
inc
aam
mov
push
testb
ud0
jge
neg
popf
lds
lea
sub
push
sub
or
test
in
dec
pop
cmp
xor
fucom
dec
inc
enter
les
inc
push
push
dec
dec
les
mov
and
sbb
arpl
jg
inc
arpl
push
mov
and
ljmp
xchg
test
xchg
repnz
inc
ret
mov
xor
sbb
adc
call
imul
fadds
addr16
imul
mov
in
or
test
cs
inc
mov
xchg
addr16
into
mov
sti
push
mov
stos
add
stc
lret
lods
lods
xchg
call
incl
je
xor
jl
out
fwait
adc
fcmovnu
xor
cwtl
push
cmp
dec
mov
pop
sbb
cs
outsb
stos
or
xchg
ljmp
inc
jnp
xor
fldcw
mov
ror
push
ret
rcrb
and
std
mov
and
stc
mov
es
int
test
js
shl
sbb
mov
inc
loopne
decb
pop
rcll
out
nop
das
dec
mov
pop
call
sbb
dec
cmp
mov
jnp
push
cmp
jmp
fsubl
mov
cwtl
scas
aaa
movsb
inc
fs
adc
lret
int3
popf
cli
xchg
and
mov
or
jmp
cmp
and
push
jno
or
sbb
cld
and
jge
push
jp
sub
or
inc
out
in
or
lods
stc
jl
cmc
sbb
notb
sub
dec
xchg
dec
dec
sub
cmp
jne
push
dec
jo
dec
dec
int3
popf
stc
lret
subb
shll
outsb
sti
cltd
or
pop
and
in
and
xor
xchg
inc
cmc
sbb
lret
shrb
imul
mov
in
mov
mov
movsb
jmp
inc
icebp
gs
mov
cld
jge
into
pop
in
cwtl
sub
push
out
decb
xor
outsl
cld
outsb
pop
mov
fstpl
imul
xor
xchg
repnz
jbe
mov
cmpsl
and
fdivrs
nop
mov
enter
shlb
in
jno
inc
pop
loop
std
jo
push
mov
jle
push
into
mov
jae
mov
push
fs
loope
mov
ss
sbb
les
jns
pop
les
aas
adc
decl
jl
in
xor
ja
mov
pop
out
movsb
fsubp
ljmp
or
shl
push
out
xchg
mov
je
scas
icebp
rorb
jge
ret
mov
fs
jmp
push
in
sub
adc
lock
push
xor
jecxz
push
hlt
mov
adc
sti
shr
fcom
cld
insb
lea
adc
sbb
addb
movsb
cmp
aam
loop
xchg
push
xlat
repnz
ret
add
cmc
xchg
lret
sub
or
pop
das
mov
xchg
cld
and
std
pop
dec
pusha
mov
sbb
les
cmp
push
or
and
inc
rolb
pop
mov
inc
in
jno
sbb
jg
stos
jmp
pop
pop
or
lock
xchg
adc
and
cmp
pop
decb
inc
popa
cwtl
jnp
cmp
decb
mov
push
les
dec
pop
inc
test
ja
and
pop
shlb
fistps
mov
pushf
and
jle
sbb
mov
std
pusha
xor
or
bound
jle
sub
repz
fbld
push
mov
ret
add
icebp
jge
addr16
lods
cmp
repz
pop
pop
xor
or
adc
das
nop
dec
incb
ret
insl
sub
in
negl
add
int
int3
dec
sar
mov
inc
decb
xchg
sbb
mov
cmp
push
aaa
inc
imul
pop
push
and
cwtl
add
or
aas
insl
push
mov
xchg
iret
hlt
int
enter
imulb
and
pop
cltd
rcr
lcall
mov
xchg
cmpl
adcb
xchg
fstpt
or
sbb
mov
and
mov
or
shlb
jge
inc
mov
inc
sub
popa
xchg
fs
mov
push
adc
in
xor
jns
mov
sbb
push
and
test
jg
mov
adc
xor
pop
cmpsl
pop
jne
xchg
adc
jb
cmpsb
push
int
dec
addr16
out
inc
dec
jnp
loope
jp
test
daa
stos
inc
or
cmp
xlat
or
jns
push
jecxz
inc
inc
xor
cmc
aaa
or
dec
mov
mov
ljmp
sub
das
sbb
push
sti
mov
mov
pop
incb
push
xchg
mov
sub
cmp
and
cli
dec
sub
mov
divb
outsb
daa
sub
std
leave
jae
mov
shl
ljmp
in
loope
mov
lods
rclb
push
sarb
xor
inc
out
outsb
test
out
outsl
sub
incl
aas
dec
mov
test
hlt
xchg
push
and
jnp
jecxz
and
mov
dec
jp
or
mov
ds
adc
mov
mov
loope
sub
lods
adc
mov
std
ret
mov
cmp
pushf
rcrb
sub
pop
and
sub
inc
sbb
and
fadd
or
ret
sti
xorl
mov
iret
std
movsb
and
fstpt
lods
js
inc
lods
adc
jnp
push
cmp
mov
faddl
out
scas
push
rorl
mov
add
xchg
push
cwtl
movsb
mov
je
in
push
ja
test
dec
scas
idivb
out
mov
mov
xlat
repz
adc
push
subl
jnp
pushf
test
das
jg
fldl
into
push
outsl
pushl
push
movsb
jo
test
mov
imul
stos
fwait
loop
out
in
fdivrl
lret
sub
je
daa
adc
xorb
mov
inc
fwait
call
in
sti
imul
xor
aad
xchg
and
and
push
cli
enter
mov
fistl
loopne
add
xchg
scas
add
popa
jle
xchg
loop
jl
adc
push
adc
in
sbb
cmc
loope
or
mov
int3
test
push
or
sub
push
pop
jns
jl
inc
das
mov
pop
rolb
divl
cmc
jl
xor
pop
xchg
fstps
push
mov
sub
lds
mov
mov
outsl
fwait
jl
or
ja,pt
push
pop
loope
and
insb
sub
out
inc
pop
int
jmp
pushl
ja
int3
mov
sbb
sti
lret
addr16
xchg
add
xorb
daa
fprem1
subl
arpl
cltd
sub
in
call
cld
mov
add
mov
cmc
jo
mov
je
lret
adc
loopne
cld
cmc
jmp
pop
and
mov
repz
jl
std
mov
outsb
push
pop
inc
add
pop
add
sti
lret
lahf
xchg
lret
outsw
pop
or
fists
xchg
ja
xchg
je
or
lds
js
inc
mov
shlb
jecxz
mov
and
es
push
mov
jecxz
xlat
fwait
xchg
jae
add
pop
push
js
sub
xchg
lea
push
jmp
mov
sbb
in
insb
or
pop
ljmp
bnd
test
ret
test
fcoml
fistps
int
stos
jge
xchg
jle
mov
ja
add
pop
mov
insl
mov
jae
in
xor
stos
das
jns
test
lahf
pop
sbb
iret
mov
pop
inc
mov
iret
mov
shll
addr16
aaa
iret
loope
cld
or
sbb
sub
sahf
enter
jmp
add
mov
in
xchg
fildll
jno
mov
sub
push
vdivss
mov
xorl
out
or
add
cmp
cmc
scas
sqrtps
sti
jb
push
out
and
jnp
stos
mov
mov
out
add
es
pop
mov
int
or
in
and
jbe
pop
adc
pop
cmc
clc
inc
test
sub
pop
push
lods
fwait
aaa
scas
aas
fisubs
adc
xcrypt-ofb
cmpsl
sub
jge
inc
add
mov
push
xchg
test
iret
dec
ja
push
lahf
add
les
push
jge
ds
inc
xchg
inc
xor
fistpll
sub
in
cmpb
fdivrl
into
pop
mov
jne
cmp
mov
sti
pop
gs
movsb
xor
lods
out
jb
and
aaa
divb
movsb
arpl
movsb
cmpsl
loopne
jl
xlat
sbb
test
mov
jns
jmp
mov
movsb
sub
gs
xlat
ret
xlat
mov
xlat
shlb
sbb
daa
pop
mov
aas
lods
jmp
mov
add
push
adc
push
jmp
jl
push
adc
pushf
mov
jle
subb
sarb
mov
mov
addl
mov
insl
push
inc
ja
inc
dec
mov
mov
adc
sti
sbb
adc
mov
push
jns
cwtl
inc
out
in
mov
mov
pusha
jns
or
push
insb
test
nop
int3
rorb
jp
adc
fimuls
mov
mov
sbb
subb
sti
push
xor
aam
and
lret
jl
out
hlt
lahf
mov
js
out
ret
bound
repnz
jo
bnd
insl
ret
daa
out
shrb
push
cmp
mov
in
adc
movsb
jae
pop
dec
loopne
inc
mov
pop
jbe
mov
dec
rclb
push
rcrl
dec
and
mov
dec
inc
dec
pushf
dec
sti
pop
fiaddl
ret
sti
inc
jmp
andb
ret
test
js
mov
fs
sub
inc
sbb
push
and
sbb
or
clc
out
mov
adc
cmp
cld
pop
fwait
or
ror
mov
push
fsubr
inc
mov
mov
mov
lods
mov
xchg
fcom
add
add
inc
aam
mov
imul
orl
add
cmp
add
push
insl
and
push
add
int3
mov
iret
and
mov
cltd
sub
fnstenv
adc
sti
cmp
je
mov
out
je
dec
rorl
adc
scas
daa
mov
jbe
push
in
xlat
cli
adc
loop
hlt
cmp
push
cmp
loop
rorl
inc
mov
fstps
xchg
xchg
out
pusha
sbb
dec
xchg
adc
outsl
daa
pop
outsl
sbb
xchg
jecxz
jecxz
xor
mov
arpl
or
cmpsb
ljmp
mov
scas
les
cmp
das
jl
int
jns
cmp
pop
or
jmp
sbb
pop
loopne
sub
hlt
in
mov
push
shlb
ret
sub
lock
loope
addb
xchg
scas
ja
fisttpll
and
or
push
dec
sbb
sbb
mov
je
pusha
mov
and
sbb
int3
mov
mov
loop
fdivrl
jecxz
repz
mov
inc
jg
aas
in
xchg
and
ja
aas
loop
loopne
add
dec
mov
in
and
xchg
cmpsb
sahf
add
add
jno
cmpsb
int3
xchg
add
es
add
out
sub
pop
mov
adc
sub
or
rcrl
jle
jae
xchg
shr
hlt
ror
mov
adc
pop
push
xchg
pushf
ds
dec
mov
jno
mov
or
cli
test
cld
mov
nop
les
in
xchg
stos
sub
inc
mov
mov
mov
jmp
mov
jl
test
push
mov
cltd
adc
cmp
out
push
jl
aad
ret
lock
lods
leave
mov
je
mov
jp
ja
testb
add
test
stos
in
test
push
hlt
pop
jge
jmp
pop
fidivrs
jb
out
inc
sub
mov
mov
cmp
stos
inc
aam
cwtl
pop
ljmp
add
and
lret
popl
xchg
inc
testb
dec
in
dec
or
test
sbb
sbb
loopne
add
pop
pop
pop
sub
jle
jmp
cmp
mov
movsb
je
stos
push
adc
jle
insl
mov
test
fcompl
mov
mov
imul
stos
and
addr16
sub
cmpsl
iret
sahf
jo
push
flds
jns
sbb
insb
arpl
dec
cwtl
pop
cli
add
jne
sti
jae
lret
pop
aad
xchg
ficomps
js
inc
mov
stos
inc
jmp
cwtl
pop
repnz
lods
mov
xchg
dec
mov
clc
int3
js
pushf
xchg
mov
cltd
in
stos
and
bound
js
loop
cmp
and
bound
js
dec
dec
lods
cs
clc
inc
dec
hlt
push
mov
mov
add
and
and
hlt
pop
sahf
lahf
idivb
push
pop
arpl
stos
and
test
jnp
mov
adc
xor
imul
push
sub
dec
sti
sarb
or
aas
sub
add
cld
xlat
or
mov
mov
push
ficoms
bound
inc
loopne
cmpl
mov
mov
add
push
sub
mov
insb
movsl
sti
jno
les
lods
loope
inc
mov
pusha
mov
mov
shlb
divl
pop
pop
and
fnop
xchg
push
pavgb
mov
enter
fldt
jae
mov
fwait
mov
popf
jl
int
fwait
mov
or
nop
movsl
je
clc
loopne
pop
jle
bound
repz
mov
sub
loopne
inc
in
lods
stos
inc
jo
cwtl
pop
sub
xchg
sub
jmp
mov
jge
das
repnz
inc
lods
fcmovnb
in
loope
das
jno
sbb
add
mov
shlb
cmpsl
sub
or
hlt
sub
je
or
push
pop
push
cs
pop
or
lret
fcmovnbe
std
aam
stc
cltd
mov
lcall
sbb
ds
loopne
fdivrp
jg
cld
int3
or
in
mov
add
pop
add
insb
sbb
inc
and
cld
sar
sbb
test
add
mov
mov
mov
xchg
inc
orb
adcl
jp
push
scas
or
pop
push
jl
std
inc
mov
adc
xchg
loopne
and
lds
scas
movb
pusha
mov
hlt
or
mov
mov
or
cld
xchg
dec
daa
ret
test
and
jb
dec
mov
repnz
push
in
icebp
int3
pop
in
cmpsl
xchg
lock
test
mov
xor
clc
clc
and
pcmpgtd
aam
jmp
mov
fdivrs
mov
ja
dec
fs
jp
sub
add
addb
fildl
jnp
mov
scas
and
int3
inc
jl
cmp
cmpsl
out
aam
outsb
mov
loopne
ds
in
test
jmp
mov
mov
ffreep
dec
pop
inc
jp
je
pop
and
inc
push
xchg
pop
stc
mov
jno
fsubl
add
push
pop
fcomi
es
out
pop
or
jl
aam
or
divb
inc
in
cmp
fsubrl
dec
jl
adc
lock
jno
sar
outsb
or
repz
adc
jne
mov
fildl
ss
loope
dec
mov
loope
xchg
ljmp
shlb
mov
aas
and
in
mov
mov
test
xchg
test
repnz
shlb
cmpsb
pop
fnsave
mov
xchg
xchg
xchg
inc
es
mov
push
mov
inc
into
inc
sub
and
cli
cs
pop
mov
xchg
push
lea
sbb
lret
and
sbb
neg
mov
jg
and
sub
sbb
push
xchg
mov
movl
sahf
adc
mov
popa
in
jl
mov
aam
aam
push
shlb
fs
add
clc
lret
stos
shll
cmp
sbb
in
ljmp
insb
ja
hlt
or
loopne
ret
shl
sbb
and
inc
jb
lret
and
lea
ret
shl
les
loopne
lods
lret
stos
stc
fstpt
in
ljmp
sbb
jb
jns
int3
xor
mov
or
movsb
pop
in
les
repz
sbb
into
mov
fistps
std
jle
mov
and
pop
pop
cmpsb
jl
sbb
popa
and
adcl
inc
xchg
jmp
cmpsb
or
int3
std
lds
push
out
fisubs
inc
roll
adc
int3
bound
jecxz
mov
iret
scas
xchg
fisubs
jno
out
and
daa
out
mov
pop
scas
repnz
jo
fdivrs
sar
or
addr16
in
and
in
aam
push
jnp
jno
mov
in
scas
jecxz
aam
lods
adc
push
jns
jmp
mov
mov
pcmpeqb
xorl
cmpsl
divb
loopne
and
jp
mov
jp
adc
scas
ja
jg
push
lcall
fstpl
mov
lahf
test
out
ds
ret
sub
loop
sub
shlb
push
int3
mov
loopne
mov
daa
sub
outsl
cmp
testb
loope
les
mov
out
cmp
mov
negb
jge
and
jle
movsb
dec
jbe
adc
mov
or
jbe
rorb
jle
aad
pop
jge
dec
adc
push
mov
sahf
std
fisubl
jecxz
clc
scas
dec
int3
subb
hlt
jp
js
inc
mov
les
adc
add
push
fisttpl
mov
mov
mov
push
sti
stos
sbb
js
lds
imul
xchg
inc
xor
xor
lret
scas
mov
or
jg
sti
aam
mov
mov
sub
clc
leave
xchg
movsb
aam
mov
mov
mov
mov
js
std
jg
aaa
aad
jno
xchg
in
ret
mov
jns
add
mov
movsb
es
cmp
aas
sub
fldl
mov
jl
mov
in
orb
fwait
push
adc
pop
fdivrs
lods
mov
pop
ret
stos
cwtl
pop
repnz
sub
das
ret
mov
std
add
dec
and
push
mov
in
pop
daa
mov
xorb
icebp
test
adc
sbb
popl
aam
and
xor
inc
jmp
inc
xor
nop
ljmp
ror
mov
cld
loope
inc
inc
xchg
dec
pop
aaa
clc
inc
mov
enter
outsb
into
xchg
add
jae
add
cmpb
xchg
mov
test
cltd
js
test
insl
aaa
push
add
and
push
aaa
dec
filds
jns
mov
loop
cltd
sub
xchg
rclb
pushf
inc
mov
hlt
enter
xchg
mov
les
outsb
jae
ret
push
adc
ja
xchg
lret
aad
xor
jg
add
mov
xchg
pop
sub
or
fisttpll
pop
les
test
inc
and
jae
mov
jns
xchg
xchg
xor
xlat
mov
bound
in
mov
aaa
mov
mul
mov
pop
adc
push
sbb
sub
clc
shlb
fwait
mov
data16
push
mov
ja
cmp
xchg
sub
mov
cmp
inc
jl
lds
frstor
popf
lods
enter
inc
sub
or
aam
je
stos
movsl
jno
cmp
les
mov
xchg
roll
or
orl
je
push
fs
sub
mov
cmp
xchg
in
inc
jbe
jmp
mov
add
jmp
mov
mov
mov
adc
xchg
mov
jle
adc
or
scas
mov
jne
sub
or
mov
loopne
mov
es
xchg
gs
inc
mov
test
mov
sbb
out
mov
addr16
aam
pop
mov
sbb
out
fisubrs
data16
xchg
jge
xchg
jns
adc
call
sbb
in
stc
inc
stos
insl
jmp
mov
repnz
lret
mov
pop
dec
xchg
add
pop
gs
cld
sub
notl
adc
adc
sar
test
fisubs
pop
mov
arpl
fwait
ret
adc
stc
add
lahf
sub
mov
sti
pusha
loop
cltd
sub
push
out
inc
xchg
je
push
cld
shrb
dec
movsb
xor
mov
lods
clc
xor
outsb
cld
pop
add
scas
ds
mov
je
push
scas
xor
mov
in
push
lret
or
jae
mov
cli
push
sub
mov
adc
sbb
and
add
adc
mov
lods
inc
jmp
cwtl
pop
repnz
int3
mov
sub
repnz
lret
loope
jae
fs
push
add
dec
mov
push
adc
jae
fs
push
idiv
jmp
repnz
push
in
and
jae
aad
inc
into
push
std
sbb
fsubrl
mov
sub
push
adcl
mov
andl
in
jl
xchg
jmp
mov
iret
xchg
inc
les
add
enter
fisubrs
je
sub
shlb
outsb
in
imul
int3
cltd
insb
adc
ror
push
mov
insb
sbb
xchg
sbb
adc
les
hlt
mov
xchg
je
sarl
jb
sub
sub
xchg
fwait
xor
jl
xchg
std
xor
mov
dec
sub
cmp
cmp
mov
jecxz
fldl
mov
shlb
negl
mov
orb
repz
or
stos
fisubs
lahf
loop
movsb
out
repnz
pusha
popa
fwait
mov
mov
jb
je
or
js
cmpsb
mov
jno
add
lods
xor
sbb
pop
ret
iret
jp
add
clc
jae
xor
in
lods
adc
pop
jbe
and
mov
sub
cmp
sub
sti
mov
hlt
mov
adc
cmp
mov
xchg
jne
hlt
xchg
je
mov
cli
jl
xor
inc
stos
js
mov
mov
push
jb
movsb
ret
out
mov
out
lods
scas
mov
inc
ret
mov
mov
in
add
out
or
dec
xlat
movl
inc
in
js
sti
cmp
sbb
adc
push
ss
jp
sub
sbb
mov
mov
xor
mov
divb
fidivrs
sub
dec
push
bts
dec
outsb
addb
int3
jle
mov
insb
xor
jmp
mov
ja
add
xor
aas
push
pop
mov
and
call
divl
es
xchg
movsb
add
jo
test
mov
jmp
mov
repnz
sub
fisubrs
fdivrp
inc
push
fdivr
push
int
cmp
insl
pop
icebp
push
inc
shlb
les
mov
iret
mov
mov
xor
push
in
pop
pushf
imul
jno
push
adc
sti
sub
and
sub
repnz
sub
pop
sti
add
movsb
cmp
inc
loop
cltd
sub
leave
inc
lods
dec
mov
mov
fistl
sti
dec
fiadds
or
gs
arpl
and
dec
lcall
inc
xorb
adcl
arpl
dec
cmp
add
icebp
hlt
xor
popl
adc
cli
push
dec
ret
pop
jge
in
sbb
loopne
cld
mov
mov
adc
xchg
out
lcall
jb
out
lret
test
and
in
mov
out
mov
loop
pop
mov
jmp
fbstp
fs
and
aaa
ds
add
int3
addb
rorb
test
loopne
mov
out
lret
fs
push
dec
jle
xchg
cmpsb
dec
push
push
in
mov
aaa
into
ret
xchg
addr16
pop
ret
ret
insl
pushf
add
sbb
pop
ljmp
add
pushf
sub
mov
fwait
scas
cmp
out
cmp
call
cwtl
icebp
jmp
push
adc
mov
test
aad
cmpsb
aas
dec
pop
test
outsl
insl
popa
lock
inc
mov
jo
cmp
jae
aaa
aam
outsl
jle
lods
shl
test
js
adc
mov
test
addb
mov
cmpsb
xor
push
in
ja
xchg
outsb
in
cli
repnz
lods
addr16
inc
sahf
jle
or
jecxz
inc
lret
mov
std
cld
int3
loop
cli
mov
icebp
je
push
lret
cltd
sub
orb
dec
push
adc
loopne
jl
inc
mov
call
jle
jg
jae
ja
fs
loopne
jle
repnz
shrb
jge
imul
and
test
mov
mov
add
rolb
lahf
les
out
xchg
add
xor
subb
cmp
push
arpl
pop
lcall
mov
shr
enter
les
pop
xchg
adc
test
sub
mov
inc
mov
pop
adc
lea
popf
jl
mov
dec
sub
push
push
adc
mov
jbe
xchg
mov
jle
pop
cs
insl
aaa
cmpsb
or
sbb
mov
iretw
push
ret
clc
pop
pop
pop
mov
dec
jo
into
call
hlt
outsb
mov
push
cwtl
pop
ljmp
xchg
leave
sub
aam
lea
mov
repz
test
cli
push
mov
pop
dec
xchg
or
mov
xor
aam
fdivrl
nop
fnstsw
sub
jbe
jge
fs
arpl
jmp
test
dec
test
popf
xchg
mov
into
inc
pop
mov
fwait
lret
daa
divl
push
popf
lock
mulb
mov
fcom
xchg
mov
sub
pop
sub
fcomps
mov
addb
and
insl
push
and
rorb
idiv
add
sub
fsubl
decl
sub
movsb
lcall
out
insb
popf
pop
jbe
test
mov
dec
fwait
addr16
je
add
push
add
cmc
push
sbb
inc
setnp
insl
push
adc
fisttpl
dec
mov
cmovbe
test
adc
out
sub
pop
add
out
add
fists
jmp
sub
mov
mov
sub
add
jbe
pop
jne
test
into
shlb
or
adc
fwait
ror
ja
jno
dec
mov
push
clc
jns
jno
inc
arpl
pop
and
mov
cmp
push
fnstsw
shll
into
cmp
push
fldenv
xchg
je
insb
sti
sub
in
ds
lahf
les
js
push
dec
cmp
mov
add
sbbl
mov
mov
mov
mov
inc
arpl
adc
add
in
jmp
adc
fldcw
xlat
mov
in
cmc
fistpl
push
xchg
cs
inc
jne
insl
jo
xor
mov
sbb
inc
in
imulb
outsl
jno
arpl
cld
mull
cmp
shrl
das
loop
inc
je
add
fcoml
out
rcrb
int3
xlat
xor
jl
push
hlt
shll
inc
lds
pop
repnz
push
ljmp
push
add
stos
xor
push
jmp
sahf
mov
cmc
mov
or
lods
mov
jle
ret
lret
jb
inc
jl
lds
loopne
shll
in
mov
mov
lods
mov
sbb
js
std
scas
inc
aas
jp
inc
in
add
pop
mov
les
cmp
and
pop
dec
xor
mov
pop
les
aam
sub
inc
pushf
les
je
js
je
fs
or
inc
aam
xor
adc
pop
adc
ds
ret
sbb
mov
push
inc
mov
repz
pop
inc
mov
shl
xchg
jecxz
adc
fmull
xorb
dec
bound
test
add
mov
bound
js
in
fldt
sub
mov
int3
movsb
shl
mov
jmp
imull
cs
mov
add
es
xchg
ret
loope
mov
sub
stos
sahf
es
and
jne
inc
dec
ljmp
scas
ja
loope
pop
mov
inc
lea
add
shr
arpl
sub
sub
dec
aas
push
lods
inc
jp
ljmp
in
mov
mov
outsl
mov
ret
in
into
cmp
cmpl
mov
mov
data16
jmp
mov
pushl
jae
mov
mov
push
or
clc
incb
inc
pop
adc
jp
adc
pusha
xor
xor
add
lods
out
stos
and
push
add
stos
pusha
in
fwait
pop
xlat
ja
mov
mov
cmp
or
in
dec
test
mov
call
nop
outsb
jae
fwait
lock
in
repnz
and
sbb
jb
mov
cmpsb
mov
fs
lea
jne
xchg
ret
jg
mov
test
jbe
adcl
xchg
cmpb
jp
mov
pop
pop
jno
fildll
ja
push
add
outsl
movsb
cmpl
cltd
sub
out
pop
out
and
orl
mov
xor
xchg
dec
rcrl
stos
ficoml
xorb
movsb
jmp
lods
sub
add
int3
mov
fsub
sahf
shll
fwait
lods
and
leave
add
sbb
push
add
add
rcr
and
nop
pop
cli
push
push
in
sub
pop
insb
add
cld
mov
cli
cmpsl
push
cs
pop
out
xor
dec
in
jg
mov
insl
cs
mov
ja
adc
imul
adc
sub
popf
or
in
andb
mov
push
ret
jae
lret
lcall
cmp
dec
movsb
mov
adc
repnz
out
int3
loop
xor
mov
push
movsl
jb
jle
lcall
mov
lods
addr16
adc
xor
repz
gs
adc
es
sarl
bnd
jge
xchg
incb
in
movsb
cs
mov
aas
mov
cmpsb
sbb
aad
repz
dec
mov
push
lds
stos
out
dec
fadds
loop
in
or
inc
std
inc
repnz
xchg
cmp
fstps
adc
in
call
sahf
icebp
cmp
cld
dec
leave
loopne
or
xor
out
jle
lods
cs
popf
and
xchg
adc
mov
mov
mov
mov
cltd
leave
jecxz
cmp
sub
bound
aad
pop
xchg
cmpsl
and
xor
xchg
int
adc
sbb
enter
ja
or
mov
mov
stos
cld
shl
pop
ss
add
sub
pop
and
xchg
cmp
pop
loopne
loop
push
xor
out
arpl
cmpl
js
mov
mov
xor
push
add
or
or
cmp
out
jno
sbb
pop
cmp
lcall
ffree
push
lock
jnp
mov
pop
js
jb
dec
cmpsb
pop
dec
ret
push
insl
rorl
mov
sub
mov
addr16
ficoms
push
adc
pop
add
sub
mov
fcoml
aaa
mov
push
sahf
jg
mov
dec
decb
loopne
aas
and
lret
mov
push
sarl
movsb
inc
cmpsb
inc
lock
pop
xlat
insl
mov
test
sbb
ficompl
icebp
push
ret
incb
andl
cmpsl
cmc
xchg
lret
xor
cld
or
sbb
pop
xchg
jmp
push
xlat
jle
xchg
movsb
ficompl
push
in
outsb
ds
cmpsl
nop
mov
dec
pop
add
inc
jbe
jle
aas
int3
or
inc
test
call
fs
in
int3
mov
andl
pop
xchg
push
in
in
loope
cmp
mov
push
cwtl
add
aaa
add
int3
sbb
shrb
inc
jbe
push
sbb
ds
jns
adc
out
ret
das
bound
add
sbb
mov
in
or
sbb
cli
mov
push
shrb
push
add
ja
clc
push
loop
psllw
fs
xchg
xlat
test
and
dec
cli
inc
je
and
cmp
sub
adc
pop
push
pop
lret
inc
js
or
jnp
jge
fadd
xchg
pushf
pop
not
out
sbb
lods
cli
ror
shrl
outsb
jno
inc
and
mov
xchg
push
jbe
movsl
and
add
pushf
mov
ret
int
mov
dec
adc
mov
test
jo
sbb
test
dec
lds
xchg
adc
movsb
xchg
xchg
and
cmp
scas
ret
push
mov
out
sub
jmp
fisubrs
cmp
mov
out
rorl
into
xchg
ljmp
jge
mov
mov
or
sti
int3
cld
push
fisubrs
or
adc
sbb
mov
rclb
repnz
ret
mov
and
ffreep
cwtl
test
arpl
jno
sarb
dec
imul
hlt
push
nop
in
sbb
mov
cmp
addr16
aam
or
outsl
in
jl
dec
add
jae
imul
loop
push
mov
movsb
and
jae
imul
in
les
dec
stc
jnp
sti
jl
aas
push
or
add
aam
lds
push
xor
jne
int3
lds
ret
jne
mov
out
sub
sti
xchg
int3
cmp
cmp
jge
loopne
jae
fs
cmc
shr
loope
mov
les
in
insl
cmpsl
adc
mov
in
scas
scas
ja
mov
in
mov
lret
cmc
sbb
sti
lds
test
mov
and
mov
ja
les
sbb
test
dec
repz
scas
ja
hlt
pop
pop
sbb
adcl
cmp
mov
or
stos
outsb
and
dec
lahf
or
pop
insl
pop
jl
push
cmp
inc
jnp
cwtl
fstl
in
movsb
pop
aaa
jmp
inc
inc
xor
lods
je
data16
xchg
inc
lods
jmp
test
sub
mov
les
js
fildl
push
adc
mov
and
inc
mov
das
pop
mov
pop
jmp
fbstp
and
repz
mull
mov
mov
pop
enter
es
sti
in
movsb
rorb
fistpl
ljmp
repnz
les
loopne
pushf
mov
cmp
or
jp
cwtl
pop
cmpb
fdivrp
cltd
sub
mov
hlt
sub
loopne
or
jne
sub
loopne
cli
jbe
sub
roll
loop
push
in
push
cwtl
pop
repnz
icebp
jmp
push
adc
sti
repnz
cltd
sub
mov
jmp
jl
add
push
cltd
out
je
je
fimull
rcll
in
outsl
pop
test
daa
adc
cmc
fildl
aas
push
sbb
add
jo
in
test
xor
loope
movsb
nop
lahf
pop
ljmp
pop
cwtl
fadds
sbb
xchg
repnz
inc
pop
pop
shlb
test
mov
mov
test
les
loope
ret
int3
enter
jl
mov
aam
mov
fcompl
mov
fdivr
scas
je
xchg
fs
pop
in
lock
jecxz
lcall
mov
fsubrl
into
inc
out
ret
adcl
pop
fs
test
fs
xor
or
push
add
cmp
aaa
out
mov
iret
pop
push
dec
insl
mov
adc
fcompl
rclb
jecxz
in
jge
aam
fwait
ja
in
or
std
lea
lret
pop
inc
lret
lea
push
inc
xchg
fimull
and
mov
sub
or
sbb
sti
js
vpcmpgtw
ret
dec
or
inc
in
or
hlt
and
pop
or
hlt
or
pop
js
fisttpl
outsl
cld
and
lahf
or
cld
jo
arpl
cmp
fcompl
lret
pop
push
push
sti
or
add
or
xchg
stos
shll
or
test
cmp
mov
les
cmp
jae
and
insl
mov
pop
aam
sub
out
inc
pop
repnz
stc
cmp
les
mov
cmp
test
xor
pop
inc
fcomps
and
je
pop
push
dec
cmp
mov
jl
jl
out
inc
pop
repnz
shlb
pop
pop
fisubrs
push
arpl
pushf
cmp
fadds
jns
mov
pop
stos
cmp
mov
mov
in
pushf
popa
lods
jns
pop
push
fcompl
cmp
out
cmp
sub
lret
mov
dec
iret
add
sbb
push
and
in
xlat
jp
pop
icebp
and
push
adc
mov
mov
mov
repz
jl
push
cmp
je
insb
adc
add
iret
lret
ret
out
sti
push
fnstcw
mov
sti
sbb
adc
lods
mov
adc
xor
jecxz
repnz
lret
jecxz
lods
cmp
sub
loopne
popf
lods
adc
repz
mov
jg
inc
ljmp
adc
pop
add
mov
fs
rol
push
add
jge
mov
push
mull
ret
jp
sub
add
in
cwtl
or
fwait
repz
mov
sahf
data16
imul
ret
je
js
loop
mov
dec
jl
mov
out
sub
es
add
jge
mov
sub
push
aam
push
pushf
icebp
adc
push
fiadds
ljmp
cmp
data16
ljmp
jecxz
pushf
icebp
inc
or
pop
sub
pusha
orb
and
bswap
call
les
jns
repnz
inc
xchg
push
enter
in
in
and
sti
icebp
dec
and
mull
mov
pop
dec
movsl
cmpsb
cltd
std
mov
dec
repnz
inc
or
sti
pushf
mov
pop
pop
jle
mov
enter
add
adc
jnp
mov
inc
call
insb
mov
adc
jnp
in
repz
add
jnp
mov
negl
outsl
sbb
mov
mull
in
lea
add
fisubrl
mov
mov
out
jecxz
test
and
mov
fcompl
fildl
and
mov
aam
loop
in
add
add
jae
cmp
les
cmp
mov
mov
test
mov
fisttpll
ja
pop
int
sbb
ljmp
ficomps
jno
pop
jle
pop
out
mov
cmpb
mov
mov
insl
insb
sub
outsl
sbb
or
jg
imul
outsb
cmpsl
mov
sbb
xorb
cld
ret
arpl
ficoml
sarb
xor
shrl
stos
fsubs
test
or
imul
xor
cltd
fnstenv
jnp
ret
add
mov
ds
fsubs
sti
jae
psubw
ficompl
cmpb
fnstcw
out
jecxz
inc
rcrl
pop
test
cltd
out
test
add
cmp
movsb
fiaddl
shll
divb
push
pop
je
inc
xor
pop
cmp
icebp
push
sub
movsb
mov
ret
cmp
hlt
push
push
push
pushf
cmp
mov
movsb
fs
cwtl
enter
mov
jle
add
mov
flds
push
roll
imul
mov
push
int3
jae
jnp
xor
push
movsb
pop
aam
js
fsubr
add
jecxz
xchg
mov
or
adc
mov
aam
in
dec
fildll
and
rcrl
or
cmp
les
es
je
add
out
ljmp
xchg
xchg
out
add
jae
fsub
dec
in
popa
mov
jl
sbb
mov
cmp
inc
insb
xor
cmpsl
cld
pop
inc
push
fwait
cld
pushf
jb
lods
test
data16
mov
fsubl
fldl
and
and
bound
movsl
mov
fidivrs
push
xor
xchg
test
test
dec
test
inc
aaa
inc
faddl
imul
je
add
jp
insb
repz
insb
jae
fs
jecxz
jb
icebp
imul
jbe
int3
jo
jge
jne
imul
shl
push
out
out
push
dec
outsb
pop
in
fldcw
loopne
data16
pop
in
ror
pusha
filds
pop
fstpl
push
push
aad
push
rcll
push
iret
decb
dec
int
dec
lret
leave
dec
enter
movb
inc
jl
or
ret
pusha
shlb
mov
call
in
lock
insb
fsubl
lock
idivb
icebp
cmc
mov
pop
sbb
aam
add
rcrl
bound
out
dec
enter
popa
fldln2
call
lret
call
xchg
popa
xchg
xor
add
hlt
lcall
jg
inc
mov
out
rolb
cltd
ja
inc
popa
and
or
orb
push
rolb
or
out
add
mov
push
cli
fildl
push
mov
push
xchg
inc
popl
sbbl
mov
inc
cmp
inc
mov
out
pop
or
in
push
imul
xor
xor
lret
mov
aaa
imul
pop
jecxz
inc
aas
mov
iret
pop
jo
inc
inc
sbb
std
mov
push
shll
dec
sbb
testl
dec
ror
push
mov
decb
cmp
inc
sbb
ja
push
test
xchg
sbb
out
gs
adc
jns
imul
sub
adc
push
mov
stos
test
and
imul
cmpsb
dec
test
dec
xor
mov
push
lcall
cmp
pop
lahf
jns
lret
mov
int
sbb
cld
iret
pop
inc
popa
popf
jmp
mov
mov
push
or
out
or
jno
cmp
jne
into
mov
roll
mov
loop
dec
inc
in
testb
inc
sub
add
shl
jb
pop
dec
das
xchg
push
cmpsb
leave
iret
sbb
pushl
test
push
and
and
sub
aas
arpl
pop
jnp
nop
xchg
xchg
loopne
mov
xchg
and
mov
mov
int
adc
xor
inc
dec
lea
les
mov
sub
push
push
call
mov
rolb
insl
mov
inc
inc
repnz
mov
xchg
adc
cmpsl
outsl
call
imul
fadd
out
das
mov
push
xor
cmpsl
inc
outsb
jns
in
or
mov
or
adc
leave
jnp
mov
int3
test
or
lods
or
sub
inc
sub
add
movb
xchg
sub
cs
int3
popf
pop
sub
inc
sub
ss
cmp
fidivrl
in
jmp
in
cld
dec
pop
push
daa
mov
sub
jp
ja
jne
jge
rorb
pop
sub
int3
pop
push
xor
fisttps
iret
daa
subb
sbb
and
ffreep
sub
xchg
jno
into
pushf
jl
ret
jge
cmpsb
mov
outsl
and
add
lret
sar
push
sbb
add
test
xchg
clc
push
push
ja
fmul
mov
xchg
movsb
push
lahf
addr16
adc
aam
xchg
aaa
daa
sbb
pop
cmp
shrb
mov
inc
xchg
imul
pop
xchg
int3
in
push
add
es
aaa
in
fistps
jnp
movsl
stc
xchg
sahf
cmpsl
pop
pop
and
xchg
decb
xchg
mov
dec
push
fldcw
or
add
jo
xchg
lahf
push
xchg
or
inc
data16
adc
lret
das
push
ds
or
loope
incb
fsts
pop
push
inc
sbb
mov
in
push
and
xchg
aas
add
adc
test
in
cmp
jnp
push
lahf
jmp
std
jge
sub
push
or
daa
mov
or
xchg
sbb
push
mov
mov
aas
add
xcrypt-cfb
cmpsl
and
or
lods
mov
xor
pop
mov
push
jo
std
pop
into
dec
jge
mov
xchg
pop
mov
push
roll
pop
push
mov
pop
lods
outsl
roll
stos
xchg
pop
ja
jmp
imul
scas
popf
test
xchg
sub
sarl
andb
cmpb
xor
or
daa
imul
out
jge
or
mov
pop
mov
sub
jnp
popf
incb
in
xor
pop
jne
lahf
add
or
cmpsl
test
xor
push
cwtl
or
mov
fcoms
popf
push
aaa
outsb
out
jbe
popf
pop
adc
xchg
cmp
sub
mov
add
fs
mov
push
dec
push
outsl
xchg
inc
jns
and
lds
sbb
ds
and
xchg
out
sbb
xchg
mov
jne
sbb
mov
push
xchg
pusha
inc
test
cld
mov
add
movsl
mov
decb
leave
lcall
cmp
inc
in
mov
outsb
xor
mov
xor
jecxz
dec
mov
shll
adc
bnd
mov
or
push
inc
and
dec
and
dec
aas
call
aas
pop
jae
cmp
cmp
icebp
ret
xchg
or
push
repz
in
sub
adc
in
pop
cmp
and
fists
or
sahf
add
into
mov
fsubl
pop
xchg
aas
addr16
xor
push
daa
mov
das
and
mov
pusha
popa
push
push
mov
jbe
sub
decb
push
pop
cmp
out
xchg
fwait
sub
jle
push
test
dec
scas
inc
stos
cs
outsb
movsb
pop
or
addl
and
jmp
in
lret
incb
cmpsb
sahf
lahf
cmpl
in
xor
mov
test
sub
xor
lods
lcall
les
push
aam
mov
or
and
adc
add
out
lock
mov
repnz
insb
mov
push
stos
in
push
decb
stc
push
adc
xchg
jo
or
dec
jbe
out
and
int3
adc
and
pop
push
add
mov
lods
add
and
and
xor
imul
adc
lahf
or
pop
cmp
pop
stc
loopne
xor
popa
xor
jns
or
adc
test
divl
push
pop
test
test
inc
incb
mov
sahf
mov
lcall
cmp
movsb
mov
xchg
or
aad
inc
fsubrs
add
mov
rcrl
pusha
lea
sahf
cld
jno
mov
cs
jle
xchg
repz
das
or
sub
adcb
sbb
repz
movsl
pop
or
aad
mov
cld
rcrl
mov
inc
call
aas
cli
pop
inc
lea
outsl
mov
fcmove
mov
pop
or
pop
fldt
pop
stos
xor
mov
cld
testb
out
mov
dec
lcall
push
add
mov
in
pop
sbb
lcall
adc
xor
pop
data16
jnp
xor
daa
jae
into
xchg
test
out
or
jmp
int3
xchg
jo
sbbl
roll
cmp
adc
out
data16
jmp
outsb
inc
int3
dec
jge
push
mov
movsb
adc
popf
scas
inc
push
fs
xchg
xlat
outsb
xor
incb
sbb
or
jno
roll
into
xor
pop
mov
and
jg
addl
mov
outsl
gs
jae
daa
pop
add
adc
xchg
sub
ds
mov
push
js
in
mov
pop
cltd
add
rclb
out
and
flds
lret
pop
popf
or
int3
sub
sbb
adc
inc
int3
call
cmc
int3
outsb
jle
cmp
or
cld
int
push
fstpl
dec
stc
xor
fstps
ljmp
sub
lcall
or
int3
sub
mov
shrb
inc
push
fldl
ja
stc
mulb
loopne
push
or
cmp
adc
push
and
jge
mov
or
pop
pop
adc
inc
mov
int
int
mov
jne
push
or
out
or
and
and
push
jle
ret
lods
lods
pop
sub
add
pop
int
xchg
cmp
push
popa
jmp
popf
incb
stos
je
imul
cld
cs
xlat
inc
add
push
mov
movsb
dec
mov
incb
std
sub
push
mov
pop
outsl
inc
jae
mov
xchg
lahf
push
pop
popf
stos
and
add
push
into
inc
or
scas
xchg
mov
mov
dec
jge
push
addr16
add
lret
faddl
cs
sub
lahf
icebp
cmc
rcr
sub
inc
xor
ss
je
outsb
decl
lds
or
adc
and
or
sub
mov
adc
shll
push
jmp
xchg
add
mov
cmp
in
or
mov
loope
sub
push
sbb
sub
pop
push
fcoms
movsb
or
shl
push
push
int
cs
iret
inc
decl
xchg
addr16
imul
mov
cs
decl
cmp
test
das
dec
mov
shll
lahf
sub
incb
sbb
and
mov
mov
incl
push
imul
mov
insl
mov
xchg
out
incb
sub
movsb
mov
adc
pop
lret
idivb
lods
xor
imul
cmpsl
es
dec
cmp
sub
decl
in
testl
xchg
lret
xchg
in
push
test
jecxz
hlt
inc
sub
out
pop
scas
cmp
sbb
push
rcll
and
dec
arpl
xor
pop
sub
dec
lea
lcall
jp
es
mov
mov
push
xchg
addr16
dec
dec
mov
and
ja
jne
mov
sub
popf
mov
adc
jp
push
and
sbb
sidtl
stc
pushf
lret
mov
jb
pusha
or
call
xchg
cs
jo
push
lds
loopne
add
mov
enter
mov
inc
aad
fnstenv
adc
cltd
cmpsb
adc
stc
ljmp
push
dec
sbb
dec
aaa
and
idiv
or
mov
push
xor
dec
aad
adc
cwtl
push
xor
inc
inc
cmp
sbb
std
cmpsb
cmp
adc
neg
mov
popa
iret
loope
in
sbb
inc
outsb
xchg
xor
dec
lods
fcmovne
lahf
push
inc
push
or
jmp
pop
xchg
out
mov
sub
mov
fst
sbb
out
pop
je
lods
push
or
cwtd
xchg
sub
push
ja
and
out
pop
insb
add
int3
lods
xchg
sbb
push
jae
dec
ja
mov
je
push
xchg
xchg
imul
gs
sbb
add
cli
jg
dec
cmp
push
std
and
lods
sbb
pop
xchg
adc
cmp
mov
iret
lods
out
mov
in
les
sub
fisttpll
add
sub
inc
push
adc
lahf
lret
mov
cmp
out
and
add
or
incb
out
mov
cld
and
sbb
inc
xlat
es
out
adc
xchg
outsb
xchg
xchg
cwtl
or
mov
andl
aas
push
lock
and
insl
sbb
sbb
mov
pop
cmpl
push
loopne
mov
mov
xchg
fwait
cmp
add
in
xchg
imul
mov
pop
jp
addr16
test
sti
pop
push
lods
out
and
stc
dec
and
scas
sarb
jns
lea
mov
nop
xchg
cmp
mov
xor
repnz
sub
lods
ret
push
test
sbb
test
xchg
dec
mov
push
pop
rcll
cmp
cmp
or
out
andl
movsb
stc
in
sub
push
adc
imul
jle
jne
lcall
pop
movsb
inc
jmp
and
andb
dec
mov
decb
or
or
icebp
aam
lods
lcall
fstp
or
nop
jae
scas
flds
add
aaa
aas
cmc
xchg
lcall
lea
or
xchg
or
push
add
inc
lds
lods
stos
jae
jle
cmp
inc
pop
adc
pop
lahf
inc
rcrl
xchg
inc
outsl
adc
or
cmp
cld
sbb
fmuls
out
arpl
jmp
dec
mov
add
sbb
scas
sbb
cwtl
push
int3
dec
adcl
jg
add
inc
or
mov
inc
xchg
cs
pop
adc
cmp
in
ret
leave
mov
insl
jge
adc
rolb
add
mov
test
mov
movsl
push
mov
xor
push
dec
stos
daa
dec
dec
hlt
iret
rclb
xchg
loop
aaa
push
ss
imul
xchg
mov
movsl
jle
lahf
push
and
dec
cmp
adc
xchg
nop
pop
das
iret
add
movsl
adc
push
lods
out
cmpsb
or
decb
sub
or
mov
test
sub
jnp
imul
sub
popa
popf
lods
dec
daa
mov
sbb
lret
sbb
lcall
mov
pop
outsl
test
in
movsl
ss
ljmp
jecxz
scas
sbb
cld
gs
jnp
xor
or
int3
mov
add
or
insl
xchg
pop
mov
pop
sub
mov
ljmp
dec
cld
scas
nop
mov
subl
aas
push
out
inc
mov
adc
loopne
in
add
dec
imul
sbb
insl
add
loope
test
sub
jne
or
gs
mov
mov
and
pusha
mov
decl
xlat
pop
cmp
orb
xchg
fldcw
sti
sahf
add
dec
jnp
cmc
movsl
jno
decb
rcrl
push
repnz
stos
adc
pushf
pop
push
in
xchg
sbb
xchg
std
nop
leave
iret
into
mov
inc
pop
sub
pop
push
pop
sbb
pop
insl
lds
xchg
push
jmp
setg
sahf
lret
dec
es
outsl
imul
jmp
test
into
add
test
nop
test
push
sub
aad
in
adc
jns
aam
cmp
ja
insl
enter
and
or
ljmp
mov
sbb
stc
sbb
fnstenv
pop
incb
iret
dec
into
leavew
cs
les
or
mov
adc
or
outsb
mov
adc
sahf
mov
pop
xchg
dec
lcall
mov
in
sar
das
push
sub
movsl
adc
or
pop
sub
adc
pusha
sub
mov
pop
dec
adc
dec
sbb
iret
mov
fwait
cmp
cmp
jnp
and
or
dec
pop
xlat
pushf
pop
mov
mov
incb
iret
sti
cld
mov
out
inc
inc
lahf
xchg
into
cmp
notb
mov
mov
push
xchg
adc
mov
addr16
scas
call
cltd
jg
sbb
jg
sbb
mov
or
lret
sbb
mov
rolb
test
popf
push
out
stos
inc
addr16
gs
pop
incb
lcall
mov
shufps
bound
outsl
sub
xchg
scas
test
xor
out
add
testl
cmp
je
mov
in
sbbb
adc
pop
adc
mov
cmp
imul
xor
push
in
push
outsl
sbb
mov
mov
or
outsb
sub
cs
adc
clc
inc
push
call
jge
hlt
icebp
lds
aam
insl
xchg
xor
jae
in
jne
cld
cmpsl
xor
out
sbb
xchg
andl
fistpll
decb
ror
cmp
cmpsl
int3
push
jmp
push
lods
xchg
add
inc
pusha
dec
bound
adc
and
or
dec
leave
aaa
xchg
sbb
ljmp
dec
aam
inc
sub
add
xchg
enter
mov
es
add
lahf
or
mov
sbb
incb
push
hlt
dec
dec
sbb
sub
pop
lods
add
sbb
xchg
xchg
int3
pop
pusha
lret
sarb
cmpsb
xchg
mov
mov
cmp
cmp
int3
neg
loope
adc
aaa
push
adc
pop
jnp
aas
push
push
lods
mov
pop
mov
out
jmp
insb
cmpsl
pop
mov
add
test
cld
xchg
push
jbe
push
cmp
or
jne
adc
jge
mov
ljmp
push
imul
ljmp
xor
in
xchg
pop
mov
jg
adc
sub
mov
cld
add
orb
shlb
push
sub
or
adc
xor
and
into
and
xor
cmp
jp
decl
xchg
or
popf
jnp
nop
push
jmp
dec
inc
outsb
lds
cld
pop
daa
pop
jns
fcoms
cs
scas
push
pop
movsl
test
int3
nop
fs
sub
cmpsl
rcrl
incb
ds
insb
xor
or
std
lret
popw
or
adc
sahf
out
sbb
dec
push
cmp
push
roll
leave
sbb
lcall
loope
imul
sub
jae
inc
movsl
adc
rcrl
cmp
lret
mov
xchg
pop
sub
or
push
adc
pusha
cmc
or
adc
dec
rclb
cmp
sub
aad
test
pop
sbb
shrb
leave
xlat
sti
sbb
jno
lahf
int3
lds
lea
mov
popf
ss
das
cmp
sub
cmp
outsl
push
mov
or
push
mov
mov
rorl
mov
pop
jno
sub
xchg
aam
adc
sbb
lret
lahf
bound
leave
repnz
mov
pusha
add
sbb
xor
fidivs
or
lods
inc
stos
mov
sub
sbb
and
pop
inc
sbb
jmp
stc
ss
dec
jcxz
push
lret
pop
push
xor
xchg
lods
inc
pop
jmp
sbb
enter
xor
incb
dec
adc
sub
daa
push
inc
imul
mov
lret
mov
adc
push
push
push
or
adc
push
out
push
in
sub
mov
add
mov
jae
aas
inc
mov
lahf
js
aam
xchg
add
add
setb
mov
sbb
xor
lea
test
cmp
jae
mov
stos
dec
imul
adc
ficoml
sbb
pushf
or
int3
and
xchg
fbstp
add
jge
mov
sbb
sub
inc
sub
dec
cltd
jg
popf
push
push
aaa
ds
mov
cmpsb
or
or
out
cld
sub
dec
mov
push
sbb
cmpsb
test
and
sbb
add
in
sbb
sahf
mov
enter
and
mov
sbb
out
dec
mov
inc
xchg
daa
mov
int3
in
xor
in
outsl
aas
jmp
push
add
inc
pop
push
push
xor
lods
rol
sbb
pop
jecxz
and
scas
scas
xchg
add
scas
cmc
dec
cwtl
fbstp
enter
rorl
int3
or
and
inc
push
int3
inc
cmpsl
mov
sbb
fiadds
and
sub
stc
inc
push
mov
push
call
in
inc
mov
push
or
leave
out
xor
and
adc
xor
cmpsl
mov
movsl
or
mov
addr16
test
sub
out
sub
xchg
adc
or
or
or
mov
xchg
pop
or
adc
jae
rolb
ljmp
aas
xchg
push
xchg
loope
cwtl
push
cmpsb
dec
int3
pop
or
js
cmp
mov
enter
xor
lea
adc
and
and
imul
sub
push
cmpsb
sbb
and
adc
jmp
daa
adc
movsl
and
outsb
gs
cli
jg
pop
jge
ds
sbb
push
movl
insb
mov
cmpsb
adc
test
cmp
sub
mov
mov
inc
pop
ljmp
push
cmp
adc
xchg
cmpb
dec
adc
test
push
dec
mov
cli
sub
in
adc
xchg
add
test
mov
std
dec
cmpsl
inc
icebp
lds
push
int3
pop
adc
dec
cld
mov
xchg
sub
sbb
daa
mov
pop
or
add
mov
jmp
push
hlt
out
int3
lret
push
and
pop
mov
movsl
sbb
test
pop
mov
pushf
mov
mull
xor
popa
inc
xchg
aad
popf
pop
adc
cs
int3
xor
jo
inc
std
rcrl
dec
incb
mov
pop
pop
jecxz
mov
pop
or
loop
loope
popa
dec
aas
pop
pop
push
popf
mov
inc
ljmp
adc
icebp
incl
leave
jle
addr16
mov
mov
adc
mull
xchg
dec
gs
lret
push
cld
add
adc
xchg
mov
std
dec
xor
jo
mov
std
adc
sbb
inc
addps
dec
cmp
adc
insb
xchg
imul
lcall
out
adc
and
xchg
nop
sub
ss
les
cmp
xchg
or
push
loopne
pushf
test
fsts
test
test
gs
mov
push
mov
pushf
fistl
xor
in
push
cmp
decl
mov
les
cmp
fnstenv
aam
out
test
fwait
jno
bound
sti
cld
inc
in
mov
sbbb
push
and
mov
shlb
adc
pop
repz
in
ljmp
dec
adc
jl
inc
jp
icebp
mov
push
or
jb
lock
test
jle
dec
mov
sti
mov
inc
xchg
inc
pop
mov
icebp
sbb
fsubs
cmp
mov
repnz
leave
jg
mov
test
repnz
jb
shll
sub
imul
push
cmp
mov
and
insb
je
ret
mov
aad
repnz
aas
xor
out
cltd
sbb
movsb
fisubrl
mov
fs
sti
pushf
stc
pop
rclb
gs
loope
addl
mov
decb
in
pop
jno
fiaddl
mov
jmp
add
call
inc
fcmove
and
daa
popa
jns
inc
popa
mov
mov
cmp
les
cmpsb
mov
cli
repnz
fidivl
dec
sahf
lret
int3
jp
scas
loop
sub
sti
jae
pop
mov
push
mov
lods
icebp
leave
ljmp
inc
repnz
lret
enter
xchg
je
mov
mov
fstpt
ds
jecxz
in
rorl
inc
loopne
inc
or
inc
sarb
push
fs
loope
jae
test
jnp
add
clc
add
xchg
xchg
testb
jns
cmp
push
cmp
testb
add
xor
cmp
mov
sbb
xchg
ret
ljmp
or
add
popa
rolb
imul
inc
xchg
xorl
and
or
jmp
xchg
xchg
sbb
sbb
daa
pop
adc
add
je
pop
lcall
ror
xor
push
xchg
jmp
loope
lret
or
mov
inc
xor
mov
es
and
add
lds
cmp
mov
jmp
stc
test
inc
popf
aas
sub
mov
fwait
jae
mov
inc
dec
mov
push
aam
push
lret
out
loope
shll
jb
rclb
sbb
cmpl
mov
addl
lods
addl
xchg
fwait
das
fisubl
inc
mov
jmp
inc
fnstcw
popa
jle
lea
data16
imull
sub
sub
test
test
inc
movsl
lret
dec
inc
mov
arpl
fwait
sbb
scas
pop
mov
jmp
inc
xchg
dec
push
mov
sbb
shrb
fincstp
fistl
add
clc
mov
adc
ret
push
jno
adc
sarl
mov
stos
and
adcb
sub
lahf
adc
cmpl
pop
xor
sti
cmp
jnp
jae
jmp
lcall
je
loope
add
imul
jbe
outsb
pop
adc
adc
lret
xor
mov
jp
mov
fs
xchg
rcrb
mov
add
jae
mov
mov
fs
inc
jp
out
add
pop
scas
pop
ljmp
cmp
popa
fsubs
das
inc
lcall
sub
push
lea
cmp
mov
cmpsb
mov
fwait
imul
add
inc
int
add
shlb
mov
fcomp
cmp
sbb
sbb
jbe
inc
pushf
dec
loope
lods
pop
or
pop
icebp
shl
test
dec
lock
lcall
mov
mov
pop
lret
mov
shll
clc
push
xor
test
sarb
fs
xchg
inc
mov
lcall
ret
xor
aad
enter
pop
push
lea
cltd
ljmp
out
sti
push
ret
loopne
push
imul
dec
pop
or
xchg
int
inc
fmul
dec
aas
xchg
in
rolb
push
xor
shl
in
lods
ljmp
aad
xorl
adc
faddp
mov
aam
inc
jle
int3
aam
in
dec
in
mov
aam
mov
inc
stc
dec
in
int3
hlt
mov
push
mov
pop
inc
aam
jo
jmp
je
cs
pop
sti
mov
pop
pop
inc
jnp
cli
jae
pop
mov
jecxz
dec
jb
clc
inc
icebp
js
ljmp
jno
cmp
divb
lret
cmc
push
lock
jne
out
loop
imul
jmp
xor
out
outsb
in
insl
loope
popa
push
addr16
in
inc
rcr
gs
mov
xor
xor
mov
or
movsl
or
lds
mov
dec
sub
cmc
jl
addr16
scas
cmc
movsb
hlt
aam
xchg
cltd
or
push
jnp
dec
rep
or
fs
repnz
jmp
pop
jb
icebp
fcoml
ja
mov
jno
dec
cmc
fwait
lock
incb
jne
outsl
rcrl
cmp
push
lret
mov
mov
push
pop
fstps
fs
loopne
ja
gs
pop
pop
lods
pop
push
int
fadd
lret
inc
xchg
inc
inc
roll
mov
mov
mov
aaa
mov
mov
mov
mov
mov
cld
mov
scas
das
scas
lods
or
pusha
add
incb
inc
test
das
push
cmp
mov
test
pop
adc
call
jge
mov
sub
sub
dec
pusha
test
jne
xchg
nop
sub
add
rcl
lahf
mov
mov
sbb
in
aad
mov
xchg
cmp
xor
vpaddd
in
sub
xchg
xchg
aaa
stos
addr16
lcall
lods
cmp
dec
jnp
test
dec
jo
pop
cmp
xchg
inc
mov
jecxz
mov
subl
dec
pop
cmpsb
and
sbb
bound
sub
decb
add
insl
fsts
and
cltd
push
mov
cld
xchg
xchg
dec
push
pop
cwtl
sar
sbb
cmpsb
jb
jle
enter
dec
cmpl
mov
movsl
mov
mov
dec
and
decb
sub
insb
repz
dec
lret
ja
push
sub
fwait
xchg
mov
add
mov
mov
mov
push
decb
sub
in
add
mov
adc
mov
dec
rolb
push
dec
xchg
push
or
push
sub
mov
jle
leave
jne
fs
and
mov
push
dec
sti
mov
jbe
ljmp
stos
test
sbb
addl
divb
jo
push
iret
mov
in
adc
add
insl
stc
aad
data16
push
fsubs
cmp
hlt
lahf
pop
js
pushf
mov
mov
aas
inc
jecxz
das
cltd
jo
repz
xor
inc
insb
mov
or
out
sub
pop
dec
mov
pushf
mov
call
lods
into
subl
pop
pop
inc
xchg
cmc
mov
sub
and
sub
fwait
push
mov
push
pop
in
jg
and
test
sub
out
addr16
iret
and
repz
pop
sub
mov
pop
adc
pop
inc
mov
subb
and
daa
sub
or
idivb
mov
sarl
lds
into
aad
cmp
stos
cmp
addr16
jmp
int3
sbb
and
cmpsl
subb
loop
jo
stos
int3
icebp
nop
pop
std
xchg
lahf
outsl
es
in
push
aad
xchg
scas
add
loop
xchg
jne
stos
je
out
sub
daa
cld
int
sbb
iret
test
movsl
mov
rolb
pop
aas
or
xchg
fmul
cltd
out
incb
rol
sti
pop
add
pop
cmc
gs
jmp
push
pop
jbe
out
mov
neg
or
repz
pushf
imul
mov
ja
push
sahf
movsl
pop
test
mov
inc
mov
clc
repnz
xchg
sub
cmp
adc
push
jmp
hlt
cmp
push
cli
imul
mov
jae
data16
cmp
repz
xlat
clc
and
and
leave
pushw
std
stos
lods
aad
rorb
mov
fsubs
das
pop
mov
pop
sub
adcl
inc
div
or
sbb
mov
cld
push
pop
fldt
inc
cmpl
pop
ja
jbe
in
sbb
adc
jg
je
int
js
sahf
jno
pop
mov
cli
add
incb
inc
lea
test
xchg
hlt
mov
or
mov
aaa
decb
push
push
aam
xchg
fsubr
mov
xchg
loope
enter
mov
jo
stos
ret
repnz
mov
adc
int
push
jl
mov
xor
lret
sub
cmpsb
mov
ljmp
mov
xchg
cmpsl
dec
sbb
addr16
shrb
icebp
repnz
aaa
and
addr16
daa
dec
out
jecxz
lcall
push
add
add
sbb
icebp
es
xchg
push
stc
and
inc
hlt
wbinvd
inc
mov
pop
lret
sub
daa
aaa
mov
mov
test
sbb
cmp
or
push
sbbl
mov
outsb
lds
and
cltd
mov
fadds
cli
addb
and
sti
xchg
frstor
xchg
pop
push
push
xor
in
cmp
inc
lahf
out
lcall
divb
pop
in
popf
sbb
or
in
daa
sub
mov
xorl
incb
outsl
sub
decb
bound
jae
and
push
cmp
add
pusha
pushf
or
rcll
popf
xchg
mov
dec
sbb
xor
dec
mov
mov
mov
decb
subb
xchg
fldcw
int3
int
add
ror
es
cltd
xchg
dec
adc
fcoml
ljmp
push
and
add
cmp
bound
cmc
ficoms
or
mov
rclb
in
push
sub
push
sti
or
mov
sbb
vmovq
push
mov
jmp
mov
mov
mov
aas
or
dec
enter
jno
mov
scas
mov
cmpsl
nop
xchg
and
ljmp
mov
add
and
aaa
mov
dec
and
fcomps
in
incb
cmpsb
sbb
sub
decb
std
data16
dec
or
or
sbb
mov
pop
sbb
clc
mov
outsl
push
mov
and
jb
loopne
fstp
incb
dec
rclb
in
pop
decb
pop
lahf
dec
in
cwtl
int3
dec
fwait
outsb
jp
std
sub
dec
int3
dec
push
loopne
sbb
mov
in
and
leave
in
sub
mov
pop
mov
sbb
fidivrs
add
in
arpl
dec
rorl
mov
cmp
incb
jge
call
int
pop
mov
scas
fisubrs
ret
cwtl
and
call
cs
test
rorl
lods
xchg
cmpsl
cmpsl
or
and
clc
xor
aad
sbb
das
xchg
es
int
roll
mov
inc
add
push
decb
sbb
negb
arpl
jae
ja
jno
cld
mov
push
push
jge
mov
xor
ja
inc
sub
pop
pop
push
es
adc
push
pop
and
pop
sub
sbb
popa
and
xor
pop
xchg
push
ds
popf
fdivrp
inc
sarl
sar
dec
xlat
mov
mov
or
hlt
or
dec
movsl
push
in
xchg
add
add
data16
inc
xchg
je
sahf
fwait
sti
jp
push
orb
mov
jmp
fxch
sahf
push
mov
xor
sbbb
jo
dec
ljmp
adc
sbb
ret
xor
inc
fnsave
sub
dec
out
sub
das
scas
decb
cmp
dec
pop
adc
or
mov
push
jne
ja
lcall
sub
xorl
push
in
cltd
push
inc
mov
sub
sbb
gs
scas
pop
cmp
dec
sub
sbb
jl
into
enter
ja
lahf
lods
pop
pusha
xchg
loope
sbb
jne
outsl
inc
dec
cmp
mov
cmp
and
mov
add
push
fwait
mov
stos
dec
stc
xchg
mov
loope
cltd
mov
inc
mov
sub
pop
jns
jg
jo
xchg
mov
inc
cmp
mov
shll
jmp
mov
inc
push
test
xor
popf
sub
in
pop
jp
repnz
sbb
lret
push
push
loope
sarb
pusha
mov
cld
jmp
mov
xorl
adc
xchg
out
lea
pop
pop
int
xchg
cs
push
jb
rorb
repnz
inc
mov
xor
push
xlat
pop
in
cmp
xchg
jl
jnp
pop
hlt
aaa
xchg
scas
adc
cltd
dec
push
addr16
mov
lea
pusha
mov
mov
dec
jl
movsb
xchg
xor
mov
int3
xor
inc
sbb
sahf
dec
jmp
fisttpll
lcall
mov
sti
jl
int
ss
leave
jnp
nop
inc
inc
call
sahf
cmpsb
push
sbb
shrb
and
push
movb
dec
ja
int3
push
xor
das
add
push
and
or
fcmovnbe
in
cs
cmp
xlat
scas
shll
scas
cmpsb
movsb
js
mov
sahf
cmpsl
mov
sub
xchg
das
fistpl
add
push
jne
pusha
mov
jns
ret
and
and
nop
jbe
addr16
pop
loope
add
jne
add
fsubrl
inc
inc
jg
mov
insb
adc
dec
sbb
je
mov
pop
push
and
mov
cmpsb
add
mov
decb
sbb
jp
idivl
jne
pop
jge
pop
clc
rol
jmp
pop
mov
mov
push
outsb
jno
popf
push
dec
sub
jne
in
fsubs
mov
movsb
push
nop
push
movsl
insb
adc
lea
decb
fwait
imul
loopne
cmp
loop
sti
cli
jp
stos
ret
push
jmp
das
jmp
or
pushf
insl
stos
sti
in
pop
sub
cmp
ds
mov
mov
sbb
pop
test
out
inc
jmp
insl
and
lahf
xchg
add
cmpsl
push
sub
and
rcl
fistl
das
std
mov
movsb
ret
imul
or
ret
inc
push
jle
mov
daa
dec
aas
je
xor
sar
cmp
rcll
mov
dec
pop
or
hlt
jo
cli
sbb
lret
or
clc
test
mov
sub
decb
jno
xchg
and
scas
ret
sbb
mov
jb
int
or
sahf
jo
mov
cwtl
lods
std
lds
mov
pop
insl
sub
mov
add
fisubs
idiv
lods
and
test
inc
jg
aam
xor
arpl
xchg
int
popa
scas
test
enter
jno
jle
jbe
sbb
mov
imul
lcall
mov
dec
aad
in
out
mov
ret
or
jecxz
pop
sbb
int3
in
mov
orb
or
xchg
outsl
sub
cmc
daa
mov
movsb
decl
stos
cmp
lret
sbb
sbbl
ss
inc
andb
or
inc
lea
loope
sub
jp
stos
mov
ljmp
shl
xor
pop
rclb
scas
mov
xchg
cli
sbb
add
ret
incb
xor
pop
sti
call
aas
inc
xchg
loope
mov
push
push
in
pop
push
adc
pop
lret
xor
dec
or
cmpsb
enter
sbb
fstpl
jb
dec
cmpsl
sbb
push
push
pop
xlat
into
loope
je
xchg
mov
add
out
gs
cmp
ss
es
aaa
mov
sbb
nop
andl
cmp
dec
popa
add
adcb
bound
cmp
pop
inc
adc
sub
js
int
addr16
adc
mov
cltd
mov
incb
ret
test
sub
xor
and
stos
fcompl
adc
lods
nop
push
or
dec
xor
pop
inc
push
jle
ljmp
push
sbb
ds
mov
xor
mov
lea
js
add
adc
xor
sbb
test
lods
mov
or
pushf
pop
daa
icebp
enter
and
xchg
stos
mov
fiaddl
cmpsb
push
mov
cmpb
mov
std
push
and
sub
xor
js
mov
sbb
shrb
cmp
sar
sbb
movsl
mov
in
rcr
jmp
mov
scas
push
mov
enter
out
mov
insl
sub
jno
in
fwait
pusha
ja
mov
nop
dec
aaa
ds
mov
lret
cmc
lods
or
sbb
inc
mov
js
fiadds
rclb
jbe
mov
cmpsl
std
cmp
js
inc
adc
mov
dec
sarl
mov
cmp
fcoms
fstl
mov
pop
sti
add
jne
pop
cmpsl
and
sub
ret
and
adc
jl
data16
jp
mov
push
lods
stos
adc
in
adc
add
aam
jbe
sbb
icebp
leave
pop
and
pop
arpl
xchg
mov
mov
inc
loop
jmp
in
stos
lods
out
xchg
adc
ret
gs
scas
dec
insl
std
mov
cld
and
push
fisubs
mov
sahf
sub
bound
xor
mull
pop
xor
in
nop
lcall
push
das
imul
insl
add
incb
adc
adc
cwtl
push
push
inc
and
cmp
cli
mov
pop
mov
rcl
loopne
int
adc
icebp
pop
dec
inc
mov
fisubl
adc
bound
mov
add
cmp
or
fs
jbe
jl
cmpsb
out
cmpb
lcall
pop
insl
js
jb
jl
push
add
pop
daa
outsl
imul
insb
lea
movsb
push
btc
mov
lock
add
sar
adc
faddl
dec
or
jg
sbb
aaa
xor
pop
divl
inc
adc
adc
add
pop
jno
push
xchg
xchg
movsl
rep
xchg
roll
mov
decb
mov
xchg
sub
push
imul
mov
gs
sub
pop
inc
mov
in
rorb
sub
insb
push
inc
sahf
jecxz
stc
mov
mov
popf
pop
movsb
bound
sbb
jle
arpl
mov
jecxz
push
sub
jns
push
data16
mov
in
lret
orb
aad
cmp
push
xchg
iret
jne
xchg
sarb
arpl
cs
ret
in
mov
xlat
xor
int3
lret
mov
icebp
pop
jmp
fdivrs
pusha
fsubrs
xorb
aas
mov
push
push
xchg
push
stos
std
pop
popa
sbb
cltd
push
mov
decb
xor
xchg
inc
outsl
xorb
movsb
push
xchg
fwait
mov
mov
repnz
fbld
pop
dec
das
fistpl
mov
xchg
fbld
xchg
jae
sbb
into
xor
sbb
les
cmpsb
jmp
xchg
jns
jl
in
or
jae
inc
add
or
jp
in
mov
jne
leave
xor
add
icebp
and
jg
out
xor
sbb
and
sub
aam
mov
jo
sti
push
sbb
xchg
mov
mov
in
xchg
jmp
mov
adc
sahf
push
mov
cld
jg
push
adc
or
int3
pop
push
mov
fisttpl
or
mov
add
ss
cltd
loope
pop
aam
pusha
dec
fucomp
and
adcb
cmpsl
xor
stc
lea
pop
xor
mov
push
test
mov
mov
inc
or
shrl
jo
adc
je
jae
lret
mov
aad
dec
movsb
pop
int3
mov
std
insl
xor
cmp
popa
pop
inc
mov
ret
or
data16
insl
add
ret
or
sar
adc
ret
fildl
push
call
xchg
shlb
cwtl
sbb
in
or
movb
int
int3
sub
mov
movsl
cli
inc
sub
mov
mov
loopne
iret
pop
movsb
and
ja
pop
flds
and
sahf
mov
shll
int3
pop
mov
test
sbb
or
push
xchg
and
cltd
add
outsl
ret
stc
lret
into
data16
push
push
scas
pop
test
pop
pop
mov
dec
push
aaa
xor
loope
adc
jmp
loopne
jo
and
in
sub
push
mov
cmp
mov
sub
addl
xchg
jmp
in
pop
int3
out
imul
ja
jmp
cmp
add
ret
or
in
lret
test
cmpl
xlat
cmp
or
out
lret
mov
adc
loopne
in
insl
fs
lods
or
lods
sti
mov
and
or
je
stos
enter
jecxz
xor
insb
jp
mov
js
and
hlt
dec
xchg
fs
sbb
xor
or
xchg
scas
dec
inc
lods
inc
xor
mov
out
mov
jns
push
inc
sahf
jno
and
add
mov
daa
rol
in
lods
incb
das
inc
and
stos
adc
addl
outsl
xchg
shl
iret
je
jb
arpl
mov
dec
xchg
jge
mov
xor
hlt
inc
cli
cwtl
pop
mov
inc
nop
nop
pushf
in
cld
inc
roll
push
je
js
jno
hlt
test
jns
rolb
sar
mov
xchg
xchg
adc
pop
cmp
sahf
mov
mov
in
jo
enter
mov
lret
or
push
push
push
aaa
outsl
jge
mov
inc
mov
mov
mov
adc
xor
pop
dec
dec
push
loope
pop
push
push
mov
mov
cmpsb
pop
mov
lods
dec
nop
cmp
lret
cwtl
and
or
xchg
inc
outsb
adc
add
ds
cmp
pusha
int3
xchg
out
inc
push
lods
into
pop
add
cmp
imul
inc
adc
lea
jmp
and
mov
inc
jno
mov
adc
inc
bound
sbb
int3
fildll
xchg
or
jae
cmp
gs
lds
xchg
out
xchg
mov
lahf
enter
jecxz
fld
or
insb
xor
sahf
adc
incl
cwtl
xor
lret
mov
sub
adc
leave
cmp
es
decb
push
pop
push
jecxz
or
push
xchg
xchg
das
test
daa
and
cs
and
cld
mov
jl
mov
aaa
int3
push
movsb
mov
rorl
pop
sbb
leave
push
cmpsb
jb
push
jns
inc
lea
loope
mov
or
movaps
sbb
dec
or
in
and
js
cmp
mov
jg
enter
pop
mov
lret
inc
pop
cld
xchg
or
fldcw
scas
dec
cmp
pusha
mov
add
jecxz
testl
leave
push
mov
lahf
subb
add
mov
gs
cmp
cmp
mov
dec
pusha
fistpl
cmc
pop
add
push
ja
inc
into
cwtl
idiv
lahf
ss
push
mov
mov
adc
push
sub
mov
lret
lods
push
push
sbb
lahf
jmp
hlt
xchg
mov
lods
and
in
xor
mov
pop
test
add
xlat
test
gs
insl
pop
mov
sub
decb
jmp
test
adc
ja
test
or
ds
pop
xor
into
inc
inc
push
daa
movsb
jmp
cmpsl
adc
inc
ss
add
fldl
mov
add
mov
cmc
push
punpckhdq
hlt
inc
decb
inc
cmpsl
fwait
lahf
ljmp
mov
xchg
cmpsb
ss
cwtl
scas
lods
loopne
add
jle
jns
or
xchg
daa
nop
int3
inc
test
loopne
adc
pushf
mov
rclb
sbb
mov
test
pop
outsb
cs
dec
fwait
out
or
xchg
pusha
fwait
sbb
push
je
popf
cld
cld
dec
or
mov
mov
xchg
and
add
mov
cmp
jno
sub
cli
in
lods
add
adc
movsb
pop
xchg
jb
fiadds
rol
clc
dec
jle
mov
xor
in
or
notb
mov
in
call
inc
addr16
mov
adc
cli
cmpl
divb
movsl
mov
test
cmp
xor
ja
imul
in
push
mov
loopne
add
bound
jns
xchg
inc
notl
roll
jnp
notb
push
jno
dec
in
movsb
pop
mov
sub
in
inc
jge
adc
inc
xchg
or
sub
addr16
mov
ficompl
insl
jbe,pn
std
dec
xlat
sar
push
jge
loope
out
rorl
sbb
mov
loop
popf
mov
cmp
enter
insl
add
adc
sahf
sbb
fisubrl
inc
hlt
add
pushf
or
inc
xchg
adc
pop
int
and
popf
data16
or
mov
sbb
sub
mov
or
jle
addr16
cmp
int
mov
sub
ffree
mov
imul
stos
pop
sbb
inc
std
jo
xchg
ret
jne
inc
add
cld
xchg
ss
jno
mov
xchg
push
lea
pop
aaa
fisubs
dec
jge
mov
jmp
data16
outsb
dec
cmc
xchg
jecxz
addr16
add
inc
adcb
and
leave
in
addl
es
cmp
or
xchg
push
cld
mov
jmp
outsb
push
lea
sbbb
pusha
into
stc
outsl
and
add
push
inc
cltd
push
adc
sti
into
mov
and
sub
and
cmp
orb
mov
decb
mov
push
mov
lea
test
cmp
dec
ret
xchg
and
roll
mov
pop
adc
into
sub
or
and
ja
sub
and
dec
scas
dec
cmp
cld
push
jno
sub
add
ret
sbb
sub
xchg
and
mov
cltd
mov
js
sub
mov
and
testb
pop
adc
addb
jb
adc
popa
jg
or
pop
jae
mov
and
cmp
inc
sub
rclb
arpl
aad
mov
xchg
jg
jo
mov
data16
lock
sub
fbld
sbb
in
xchg
addb
dec
decb
stos
sub
cld
mov
in
sahf
lret
push
sbb
sbbb
aas
inc
and
sub
push
fwait
shll
mov
mov
cltd
mov
hlt
aaa
fstps
cmp
push
and
pop
iret
cmpsb
adc
shl
xor
pop
mov
ret
jb
inc
xor
dec
repz
fsub
cmp
lcall
insb
add
mov
sti
push
inc
in
imul
push
in
xchg
xchg
dec
popl
dec
rol
out
js
push
mov
addl
hlt
scas
dec
jp
outsl
mov
mov
dec
mov
lea
sbb
imul
xchg
mov
adc
ss
fmull
popf
cli
ljmp
xor
pop
arpl
test
aas
add
inc
jge
add
in
sahf
push
dec
cmpsl
imul
mov
mov
mov
shl
jo
pop
aas
int3
daa
aaa
sbb
imul
dec
outsb
push
ret
mov
xchg
inc
scas
fnstenv
pop
xor
xchg
and
sub
movsl
inc
lea
xchg
in
pusha
gs
xor
fidivrs
xorb
mov
mov
xchg
add
or
inc
stos
or
sub
push
push
pop
inc
jecxz
pop
or
mov
rolb
xor
lret
cld
xor
ficompl
mov
push
scas
dec
cld
bound
sub
sub
mov
jecxz
mov
sbb
nop
xlat
loop
jb
bound
and
addb
cld
mov
ljmp
push
sub
lret
sbb
popa
mov
xorl
adc
subb
movsb
dec
xor
inc
mov
data16
fdivr
fmuls
or
cmp
lcall
or
jmp
or
pop
cltd
pop
pop
test
add
scas
or
sbb
popf
movsb
fs
push
shrl
sub
fnstenv
bound
push
repz
mov
lret
push
mov
push
mov
out
pop
aas
jb
cmc
or
mov
lea
sbb
les
push
mov
sbb
pop
or
movsl
popf
adc
lea
pop
pop
and
std
cmpsb
dec
xlat
inc
cwtl
jge
cli
in
xor
pusha
dec
pop
mull
mov
call
xor
lret
outsl
or
jnp
insb
loop
outsb
jbe
mov
lahf
mov
dec
inc
nop
cmp
shll
add
jbe
lea
push
lcall
int3
jno
add
clc
data16
pop
icebp
adc
push
mov
push
cmp
inc
cwtl
adc
cwtl
sbb
fdivrs
mov
jge
inc
in
add
mov
adc
and
repnz
push
clc
out
cli
add
xor
cmpsb
cmpsw
xor
addr16
rorl
sbb
popa
inc
mov
sub
pop
fs
fnstcw
dec
lods
incb
and
decb
lock
adc
int3
pop
dec
mov
jecxz
adc
inc
sbb
movsl
or
cmp
cmc
decb
ja
cld
and
and
xorb
hlt
arpl
and
cwtl
dec
pushf
inc
mov
out
xlat
jg
insl
decb
fdivr
or
pop
in
ja
mov
pop
push
sbb
xorl
and
mov
jl
cmp
fwait
lods
cli
xor
popf
push
imul
mov
sbb
int
mov
or
xchg
out
shlb
push
xchg
inc
lcall
shlb
and
xlat
add
mov
mov
adc
fs
sub
mov
dec
cmp
mov
incb
js
inc
mov
aam
and
jmp
xchg
sbb
dec
sub
mov
lret
or
outsl
cltd
dec
lea
decl
adc
pop
in
call
cmpsb
ss
pusha
inc
and
std
fwait
xchg
mov
out
jge
hlt
inc
jnp
outsb
rcl
std
pop
pop
je
ret
notb
sub
xchg
inc
out
sahf
in
decb
or
xlat
es
xchg
push
inc
mov
ss
mov
cld
ja
sbb
mov
mov
aaa
cwtl
out
imul
mov
daa
dec
sti
mov
iret
or
dec
inc
mov
pop
cld
fs
push
lods
ret
mov
stc
stos
lret
sbb
test
popf
adc
mov
arpl
jl
dec
inc
xor
inc
inc
pop
into
adc
jbe
orl
imul
cld
pop
lods
fiadds
xor
pop
jge
mov
xchg
adc
mov
add
pop
sub
cld
mov
lds
push
push
add
addl
int3
xor
xor
ja
mov
addr16
sbb
xor
mov
inc
cltd
lcall
out
fistps
in
mov
pop
jle
sbb
imul
cs
xchg
lahf
jecxz
push
fwait
pop
mov
mov
xor
xor
dec
or
mov
out
pop
push
aas
xchg
in
pop
push
jle
ret
jmp
dec
shr
xor
lods
pop
cmp
xor
repz
add
cmp
lods
fisttps
cli
gs
xor
pop
jns
mov
mov
ret
incb
sbb
adc
js
sbb
sbb
jbe
add
inc
lcall
mov
loopne
or
push
inc
fwait
icebp
nop
arpl
dec
daa
js
hlt
pop
push
dec
lret
insl
mov
unpcklps
cmp
pop
sbb
pop
pop
sub
fs
sti
jmp
cld
or
es
leave
lea
in
sub
outsl
aas
fisubl
and
mov
pop
jnp
push
push
test
stos
in
notl
rcll
std
decb
adc
sbb
es
sti
cmp
xchg
xchg
push
mov
incb
stos
movsl
outsl
jnp
call
loopne
xor
xlat
out
sbb
dec
ja
decb
cwtl
cmc
rcll
and
xchg
pushf
int3
repnz
sub
test
enter
inc
sar
and
pop
sub
cmp
mov
and
push
iret
decb
lahf
mov
rorb
push
pushf
loope
insb
std
dec
sbb
jl
lock
aam
and
mov
jo
lods
xor
xchg
adc
subl
mov
jmp
jmp
int3
rclb
cmp
xor
lock
enter
scas
mov
lcall
jmp
lods
fidivs
decb
inc
rclb
imul
lcall
lds
incb
jmp
mov
push
in
xchg
jle
stos
in
sbb
push
lock
jmp
dec
int
cs
sarl
add
pop
ds
inc
fwait
xchg
je
lods
mov
and
mov
push
ror
add
std
popa
pushf
mov
lock
testl
aaa
cmpsb
sbb
daa
push
xchg
push
decb
sub
cmp
lret
cli
xor
adc
adc
incb
daa
int3
mov
cltd
xlat
fmuls
pop
ss
pop
pop
fs
nop
fdivrp
inc
jne
cmp
mov
bound
pop
out
or
repnz
sub
lds
dec
jmp
sbb
mov
dec
ss
fdivs
imulb
inc
shr
xchg
leave
jb
pushl
adc
or
aaa
inc
jo
sub
adc
pop
xchg
mov
fwait
mov
fcmovb
std
hlt
lcall
xlat
test
dec
jns
mov
pop
cmp
xor
mov
pop
icebp
mov
push
add
cmp
push
sbb
mov
out
ret
or
and
sbb
xchg
mov
cmp
xchg
xor
xchg
jge
sub
mov
fldcw
xor
xor
add
lret
dec
or
dec
lea
or
in
scas
push
sub
adc
xor
and
mov
or
mov
push
popf
addr16
cwtl
mov
xor
sbb
scas
incb
in
sub
xchg
in
dec
test
push
pop
dec
cld
mov
mov
dec
adc
int3
sar
push
inc
inc
jmp
push
xchg
or
jge
insl
sbb
mov
xchg
cmp
fwait
sar
xchg
scas
mov
pop
out
push
or
inc
enter
mov
mov
insl
push
push
adc
jecxz
pop
and
adc
cmpsb
lahf
std
ds
push
mov
fsubs
jl
adc
mov
jge
xchg
test
in
push
dec
es
imul
jg
arpl
jmp
xchg
sbbl
outsb
lea
into
int3
dec
cmp
jmp
xchg
xchg
or
test
cld
pop
jbe
adc
push
pop
insb
cmpsb
aaa
stos
sarl
cmp
add
mov
movsl
or
sbb
ffree
jp
aas
sahf
fcmovb
call
push
pop
decb
push
jb
fs
lods
or
repnz
sbb
mov
add
int3
subb
and
out
or
fld
xchg
stos
outsb
xchg
mov
xor
sub
ja
mov
les
adc
lods
sub
add
push
sub
sbb
cmc
xor
xchg
push
sar
leave
xchg
mov
test
imul
xchg
pop
inc
cmp
rcrl
ljmp
mov
int3
and
inc
sub
andb
arpl
decb
or
ss
push
data16
fistpl
and
cld
scas
call
lcall
std
stc
pop
fisttps
adc
mov
push
test
sbbl
adc
rorb
push
inc
and
daa
and
mov
fwait
mov
jle
inc
and
mov
push
xlat
test
jne
and
pop
test
fiaddl
popa
or
ret
xchg
dec
lret
sbb
or
mov
dec
push
outsb
insb
ficoms
jnp
pop
inc
gs
in
or
jle
fisubs
xor
aas
xchg
or
or
cwtl
icebp
pop
les
add
mov
mov
mov
inc
outsb
hlt
testl
xchg
mov
in
iret
push
dec
in
lret
addr16
or
outsb
xchg
out
call
add
in
xlat
cld
xor
push
xor
cmp
ret
mov
insl
mov
lahf
sub
pop
push
xor
outsb
cmpsb
xchg
push
insb
popa
data16
xor
sar
sahf
bound
cltd
sub
outsb
xchg
pushf
push
repnz
fsubrs
rorb
lea
mull
lcall
adc
or
stc
sahf
sub
out
cmp
incb
cmpsl
pop
and
jns
clc
inc
pop
jmp
xchg
decb
adc
or
inc
mov
sbb
mov
cltd
lcall
jns
stos
mov
sbb
fisttps
mov
incb
addr16
inc
aaa
mov
frstor
add
arpl
or
enter
std
decb
mov
popa
into
pop
test
sub
sub
xchg
jle
jae
out
xor
push
lds
xchg
and
decb
sub
dec
jne
add
arpl
ret
out
pushf
and
pop
push
dec
loope
mov
enter
test
sbb
fsubs
aas
lcall
mov
push
cmp
inc
in
lods
inc
jo
dec
mov
jmp
pop
mov
push
or
repnz
fistpl
popf
mov
push
jbe
and
sub
ror
add
data16
or
shrl
stos
scas
sub
mov
sub
cmp
repnz
nop
imul
out
mov
cs
mov
scas
sahf
or
sbb
sub
sub
nop
incb
jl
lock
mov
fnstsw
imul
push
je
addr16
dec
int3
jns
lods
xchg
jge
mov
pop
pop
cld
mov
pop
dec
icebp
adc
cltd
jmp
in
cmpsl
movl
cwtl
dec
into
faddl
sar
loopne
bnd
pop
sub
pop
dec
repz
xor
xor
mov
xchg
sbb
das
add
out
cld
and
cs
push
push
mov
and
cmpsl
stos
cltd
and
push
cwtl
pop
dec
incb
cmpsb
jbe
pusha
jg
iret
js
test
mov
enter
incb
pop
adc
test
out
jns
sti
ret
dec
xchg
fbld
xor
out
jp
daa
adc
pop
push
push
rclb
aaa
pushf
loop
push
test
mov
mov
aam
jns
push
xor
mov
adc
setne
cmp
dec
push
int3
lcall
push
adc
ds
iret
push
dec
jmp
and
and
xor
decb
cmp
sbb
ficompl
mov
stc
inc
mov
jmp
sarb
addr16
int
int3
lahf
mov
cmp
cli
sbb
lcall
and
cmp
inc
nop
sub
test
out
sbb
int3
lahf
pop
xor
dec
sti
jle
dec
sub
int3
iret
and
push
xor
add
xchg
mov
stos
fwait
mov
mov
pop
js
hlt
notb
dec
mov
push
addr16
ss
push
daa
fcomps
push
pop
popa
adc
cwtl
sbb
in
pop
adc
dec
xor
push
incb
mov
es
incb
cmp
mov
mov
sahf
lret
decb
push
adc
negl
mov
ja
mov
in
mov
int
lahf
popf
fidivrl
stc
sbb
movsb
test
mov
and
sub
inc
xor
xchg
and
sbb
jl
mov
loopne
dec
insl
and
clc
adc
adc
aas
push
jle,pn
test
sub
test
cltd
in
cmp
ret
inc
pop
lret
cld
inc
mov
ja
fisubrs
mov
les
roll
dec
std
mov
fs
mov
mov
pop
push
dec
pop
or
js
aaa
jno
gs
jbe
daa
scas
pop
arpl
cmp
out
add
pushf
std
cmp
popa
adc
cld
cmp
sub
or
pop
xchg
cmp
pop
sbb
aaa
mov
xchg
jbe
push
mov
cmp
test
inc
sarb
cli
fisubl
icebp
cmp
call
push
mov
xlat
lods
cmc
arpl
insb
jb
incb
adc
pop
jg
push
outsb
out
jno
push
mov
add
je
in
push
sti
fbstp
shr
add
decb
pop
adc
xchg
nop
pop
xor
fisttpl
fwait
dec
push
int3
push
jle
jns
cmp
push
fs
es
or
inc
adc
fwait
xchg
push
repz
push
iret
mov
mov
test
aaa
mov
lcall
inc
fmull
add
adc
jo
cmpsb
xchg
out
add
inc
or
push
movmskps
cmp
mull
shlb
mov
es
pop
jb
mov
push
outsb
push
jle
sub
insb
sbbl
aaa
jl
or
inc
in
stos
dec
adc
aad
clc
fwait
in
mov
movsl
cld
dec
mov
sbbb
lcall
imul
shr
hlt
daa
sub
call
or
mov
setge
or
mov
cld
mov
mov
nop
or
cmpsl
or
add
mov
scas
and
fnsave
into
jmp
adc
inc
jne
inc
cmp
out
dec
cwtl
mov
mov
push
mov
lds
lods
test
inc
jns
dec
int3
out
lret
xchg
out
out
sbb
push
xor
call
pop
sub
int3
push
es
cmp
fnsave
mov
adc
pop
dec
int3
push
nop
imul
jp
gs
lock
lods
stos
push
idiv
in
movsl
pop
cmp
in
cmpsb
sbb
into
add
xor
dec
clc
insl
mov
arpl
xor
sub
pop
imul
outsl
cltd
movsb
dec
sub
sti
mov
dec
shll
inc
movsl
dec
xchg
xor
inc
add
adc
cmp
mov
add
pusha
shll
cli
pop
xchg
popf
dec
and
es
negl
repz
enter
sbb
hlt
push
mov
xor
sub
ss
iret
jns
test
xor
jae
jg
out
sbb
xor
jp
mov
cwtl
imul
mov
bound
add
in
sahf
mov
xor
mov
mov
or
sbb
imull
popf
aam
lret
sbb
int3
rolb
jb
xchg
sbb
test
jp
iret
adc
leave
fistl
xlat
icebp
xor
push
repz
pop
out
fildl
mov
mulps
mov
push
sahf
mov
adc
jne
mov
fwait
or
cmp
cltd
mov
pop
xchg
scas
movsb
or
push
jge
xchg
jae
jmp
push
mov
mov
or
jnp
adc
cmp
and
lahf
fistps
inc
fwait
cmpsl
sbb
idivb
or
loopne
in
scas
push
test
iret
lahf
push
jo
xchg
xor
jb
sub
add
inc
mov
sub
inc
out
inc
insl
rolb
test
popf
sbb
or
push
cld
sub
cltd
pop
jno
push
push
cmp
push
mov
lea
inc
aas
inc
add
and
jle
jnp
ss
mov
pushf
enter
jns
mov
cmp
cmpl
in
mul
repz
std
lahf
stc
mov
cmpsl
int
xchg
mov
fsub
stos
insb
mov
sar
sub
xor
dec
scas
push
cmp
xor
std
dec
xor
inc
or
repnz
push
cmp
popa
push
popf
mov
dec
test
xorl
xchg
add
jno
lods
jne
push
pop
mov
imul
inc
aas
mov
mov
scas
cmp
mov
mov
ret
div
sbb
xor
cmp
mov
out
addr16
fstpt
aad
lods
ds
sub
fcompl
jge
lods
mov
xor
cmpsl
pop
cmp
fidivl
aaa
push
addr16
dec
incb
jmp
sub
fdivr
ret
mov
mov
into
inc
adc
adc
cs
xlat
ficoms
dec
mov
mov
pop
xor
cmpsl
or
inc
pop
push
add
leave
inc
or
mov
stc
mul
fildl
adc
lods
in
jmp
lcall
cli
pop
xchg
or
sub
dec
lds
jae
gs
push
pop
test
aad
adc
lods
popa
pushf
lcall
scas
insl
pop
enter
test
mov
ds
int
xchg
aad
scas
pop
jae
xor
mov
std
and
cmp
into
dec
clc
adc
mov
xor
or
add
xchg
pop
dec
push
pop
bound
popf
adc
mov
loope
fldenv
or
cmc
andb
ret
incb
test
pop
ljmp
in
shll
inc
xor
lds
cmpsb
xchg
xchg
shrb
add
in
jns
or
xchg
clc
sub
xor
push
add
sahf
cld
mov
mov
add
lahf
decb
lret
movsl
popf
insb
aaa
xchg
push
je
inc
push
incb
in
pusha
aam
pop
popa
cli
inc
inc
fistl
adc
stos
push
je
jl
or
and
rclb
and
dec
addr16
loope
inc
sub
mov
data16
xchg
pop
insb
or
xchg
cltd
push
popf
aaa
mov
add
sti
dec
cmp
dec
pop
jecxz
sbb
push
add
ljmp
sbb
popa
xorps
pop
das
int3
add
std
incb
jmp
outsb
adc
mov
pop
sbb
jmp
push
icebp
leave
jo
aaa
mov
stos
sbb
mov
and
or
cmp
sbb
pushf
hlt
and
jbe
xchg
and
scas
cmp
dec
or
fistpll
mov
jo
mov
mov
inc
or
sbb
mov
jns
pop
mov
mov
jae
addr16
repnz
or
xchg
adc
cmp
and
pop
cwtl
sub
mull
push
mov
xchg
push
sbbl
decb
sbb
add
das
sbbb
add
scas
or
dec
cltd
jae
out
xchg
xor
loop
fldl
dec
or
sbb
sbb
leave
int
adc
xlat
adc
inc
lret
cli
adcb
decl
movsb
xor
aam
dec
mov
xchg
fwait
and
push
loope
or
in
jne
adc
mov
into
stos
ficoml
int3
jle
mov
mov
jno
xchg
sub
pusha
mov
jo
icebp
and
loop
fmull
add
lds
jp
ljmp
xchg
adc
add
jo
cli
dec
stc
sbb
dec
test
push
push
and
mov
and
cli
stos
bound
jl
imul
jne
negb
mov
pop
into
xchg
mov
or
jl
and
in
nop
popa
sub
test
decb
or
fidivl
jp
pop
insl
lods
out
int3
add
movsl
and
das
inc
dec
lods
inc
bound
push
pop
or
pop
insl
cmp
mov
mov
int3
dec
xchg
repnz
and
adc
outsl
shr
roll
cltd
movsb
cmp
mov
sti
idiv
or
fdivrl
bound
out
xor
lods
push
sub
dec
enter
or
arpl
roll
pop
in
mulb
xor
ja
imul
and
dec
xchg
or
xchg
add
data16
rcr
in
inc
inc
and
popf
adc
aad
cmpsl
xchg
xor
nop
rolb
mov
dec
push
cld
jnp
mov
addl
and
hlt
sub
add
iret
and
aam
loopne
xchg
lds
inc
push
hlt
sub
cltd
int
jmp
mov
insl
shll
in
jmp
into
ljmp
mov
fdivrp
xor
fimull
movsl
mov
mov
outsb
call
pop
int
loopne
pop
push
xchg
mov
sbb
mov
push
or
in
cld
xor
adc
mov
cmp
sbb
cmpsb
and
ret
mov
fs
sub
fisubrl
dec
popf
cli
es
mov
jmp
mov
sbb
add
adc
int3
push
ffree
mov
add
and
out
and
rorb
adc
pop
sbb
test
push
xchg
in
movd
lock
xchg
mov
mov
clc
inc
push
sbb
sbb
mov
test
pop
and
roll
adc
pop
xor
negw
ffreep
mov
jg
adc
in
dec
lds
popa
jle
scas
ret
xchg
mov
xor
sub
push
aaa
pop
jo
and
cmpsl
lds
incb
cwtl
xor
cmp
rorb
scas
test
inc
xor
pop
xlat
arpl
sub
fistl
jle
cmpsl
or
fs
in
test
decb
test
sbb
aaa
ss
cmpsb
mov
in
cmpsl
mov
gs
mov
mov
shl
push
out
add
dec
mov
dec
mov
add
or
pop
sbb
sub
pop
nop
xchg
or
push
sarb
int3
mov
add
sbbl
das
and
adc
test
lds
dec
dec
jecxz
fld
and
inc
mov
cmpsb
xor
rcll
sbb
inc
mov
cmp
sahf
push
int3
outsl
aaa
int3
ss
ror
es
jecxz
xlat
dec
jno
mov
or
scas
adc
stc
mov
inc
pusha
lea
test
pop
ficoml
pop
icebp
aam
mov
shl
fdivr
cmp
add
arpl
pop
xchg
lcall
in
andl
daa
or
and
fdivrs
or
imul
ss
lcall
inc
add
sar
dec
push
leave
subl
mov
push
adc
cmp
loopne
mov
jp
test
push
mov
hlt
jo
imul
mov
out
aam
push
mov
cld
lods
cmp
cmp
or
cmp
add
fdivr
into
jbe
adc
jne
pop
iret
fsin
rcll
push
xor
je
mov
filds
ss
daa
sti
jno
cmp
adcl
sbb
add
jbe
or
subb
dec
mov
and
lods
gs
pop
push
pop
cmp
mov
jle
lcall
cmpsb
decb
jns
and
sar
and
sub
clc
mov
fucomi
fmull
inc
dec
push
cmpsb
sbb
int3
int3
mov
add
and
mov
and
push
pop
and
incb
aad
insl
sub
jl
subl
mov
iret
lods
mov
insl
pop
adc
jb
fistpl
mov
mov
mov
sar
lret
lret
test
mov
repz
cmpxchg
dec
jl
jle
iret
jg
adc
and
cmp
call
sub
outsl
mov
incl
xor
mov
dec
cmp
std
in
mov
mov
icebp
push
sahf
or
int3
ret
andl
punpcklbw
inc
dec
mov
idivl
daa
mov
cmp
jno
push
cltd
cwtl
movsl
dec
clc
mov
loope
sbb
fwait
mov
cmp
lret
add
jne
hlt
cmp
and
je
jns
sbb
mov
mov
mov
data16
mov
adc
gs
xlat
push
fstpl
sarb
mov
mov
in
mov
xlat
lcall
and
fisttpll
mov
push
mov
jmp
ret
in
mov
push
cmp
mov
adc
mov
push
sbb
cmp
in
sub
sub
and
push
aas
jbe
cmp
arpl
je
jns
shlb
sbb
inc
fisubrs
push
mov
cld
mov
nop
or
and
lea
incb
shrl
hlt
lods
daa
sbb
cmpsb
fisubrs
mov
adc
jg
add
jae
mov
sub
stos
or
das
dec
out
jne
pop
pop
xor
jg
popa
cmp
insb
lret
push
jne
mov
mov
adc
sub
out
lods
mov
jecxz
mov
stos
mov
nop
aaa
adc
insl
mov
push
and
fiadds
sbb
bound
fdiv
imul
cmp
imul
mov
bound
push
mov
data16
and
mov
arpl
ljmp
inc
loop
xlat
add
notb
push
xor
lock
es
ficoms
dec
adc
dec
outsl
aas
dec
cmp
imul
pop
incb
sub
adc
inc
dec
pop
bound
cmpb
nop
cmpsl
in
aad
into
or
ds
push
aas
push
adc
cld
fcompp
inc
mov
leave
adcl
add
jmp
push
cltd
sar
pop
mov
push
dec
sub
inc
fcmovbe
push
and
int3
jns
idivb
mov
add
fdiv
movsb
sbb
in
in
fistpll
repnz
cmpsl
push
pop
jp
loopne
fimull
cmp
in
pop
hlt
jmp
or
cmpsb
adc
sbb
in
stos
lret
xor
lds
imul
xchg
stos
popf
iret
sub
adc
inc
shll
scas
insl
xchg
pop
stos
jmp
xchg
cld
xchg
sbb
jno
sbb
or
cltd
dec
inc
rcll
in
iret
jp
inc
ja
pop
xor
loop
push
mov
push
xor
jle
ret
in
in
add
sub
fs
fildl
adc
add
or
xor
lcall
dec
pop
mov
mov
icebp
mov
cmc
sar
aam
pusha
das
in
jl
in
xor
mov
mov
cltd
stos
adc
xor
adc
or
das
ds
incb
xor
ja
je
sbb
jge
or
cmpsl
lods
sbb
jg
jmp
arpl
cmpb
cld
in
or
lds
testb
or
cli
gs
inc
stc
mov
jp
or
mov
dec
or
sbb
cmp
out
ja
int3
push
hlt
lahf
sbb
gs
add
push
push
std
mov
dec
lret
add
mov
incb
icebp
lds
sbb
pop
xor
out
pop
pop
lods
popf
xorl
icebp
cmp
out
xchg
nop
mov
shrb
incb
sbb
lds
adc
ds
sbb
cld
xorl
pushl
mov
dec
sub
adc
cs
adc
outsb
push
push
add
xor
add
mov
rcl
rclb
lods
popf
aaa
iret
add
addr16
into
xor
mov
push
pop
cmp
ret
in
inc
mov
faddp
cmp
dec
inc
decl
sub
cmc
pop
push
aad
mov
xchg
fistl
mov
mov
adc
clc
jbe
ss
cltd
push
pop
leave
adc
jecxz
jmp
inc
adc
in
jno
cld
sbb
pushf
test
cmp
push
aaa
mov
fistps
stos
inc
jp
seta
or
cmpsb
sbb
lea
push
sub
outsl
jl
or
xor
clc
in
dec
inc
xchg
sahf
sub
push
outsl
mov
or
in
xor
xchg
mov
or
in
pop
xchg
fwait
stc
mov
out
jb
icebp
mov
push
sub
cmpsl
pop
call
sbb
mov
push
sub
cmc
repz
dec
outsb
pop
jno
dec
mov
mov
push
mov
cld
leave
out
sbb
cmp
cmp
js
out
scas
pop
clc
jmp
cld
addb
out
jge
aas
jecxz
and
sub
sar
xchg
mov
mov
decb
mov
sub
shll
push
int
data16
sub
cld
sub
inc
insl
mov
dec
int3
fs
clc
mov
inc
lret
mov
mov
adcb
or
in
mov
push
inc
pop
add
insl
imul
pop
cmp
pop
xchg
or
push
jmp
push
mov
sub
sbb
ljmp
flds
mov
loopne
cli
arpl
inc
xor
adc
xchg
and
or
or
push
mov
lock
bound
add
js
lds
dec
incl
sub
sti
sarb
cmc
sub
testb
adc
push
lcall
stc
sbb
cmpsl
pop
repnz
push
jl
cmpb
outsb
std
push
in
shll
cli
stc
int3
jge
lret
lcall
pop
sub
xchg
ret
incb
inc
jb
pop
insl
decl
dec
fsubl
push
mov
out
rcll
aas
and
push
lea
imul
adc
int3
push
dec
xchg
aaa
lds
and
mov
xor
lods
mov
incb
ficoml
cmp
iret
push
mov
push
jp
movsb
add
push
jno
dec
dec
mov
or
fistl
xor
mov
insl
inc
jg
sub
and
xchg
arpl
sub
std
nop
pop
out
into
adc
sysret
shll
cwtl
xor
pop
mov
mov
scas
jp
dec
cmpsl
mov
in
int3
fstpl
mov
imul
sub
add
pop
pop
insl
lret
mov
push
sahf
jno
decb
aad
call
mov
mov
outsl
mov
repnz
sub
clc
sbb
xchg
sub
adc
mov
cld
mov
dec
addr16
fcmovne
lret
pushf
xchg
test
sub
mov
popa
sbb
mov
add
aad
jle
in
outsl
inc
into
cmc
out
inc
adc
mov
cli
pop
lret
push
retw
shlb
idiv
jmp
dec
sbb
mov
aaa
xor
lcall
scas
and
or
push
mov
sub
xchg
xchg
mul
mov
cmpsb
xlat
iret
ljmp
call
sbb
lahf
js
dec
ret
mov
out
mov
or
roll
dec
dec
jnp
push
pop
fstl
and
push
add
mov
cwtl
mulb
xchg
inc
inc
idiv
dec
iret
imul
jmp
dec
xchg
mov
push
mov
repnz
jecxz
inc
or
xchg
dec
stos
xchg
push
data16
int3
jbe
adc
jecxz
loop
in
test
pop
dec
sahf
sbb
lods
dec
lcall
add
dec
call
mov
pop
adc
jmp
cmp
hlt
pop
xchg
jne
jno
lahf
btc
dec
lea
repz
lods
cmp
ret
fs
test
and
fwait
xchg
fstps
cmp
inc
ficompl
jmp
jp
add
movsl
cmpsl
pop
pop
test
leave
jmp
ficoms
in
xchg
bound
push
push
pop
cmp
adc
xor
stos
or
or
xor
test
addr16
mov
jne
jmp
xchg
mov
clc
xor
lods
inc
in
pop
and
popf
sub
pop
push
lock
sub
cmp
test
or
loop
in
xor
in
xor
add
add
jno
mov
xchg
sahf
clc
cmp
inc
loop
testb
adc
nop
decb
pop
cmp
out
lret
scas
mov
iret
cld
dec
jecxz
push
pop
imul
xor
push
pop
mov
ror
inc
stc
popf
data16
cmp
lahf
incb
mov
fidivs
push
inc
lods
sbb
and
pop
filds
cmp
push
clc
or
dec
lock
bound
push
in
push
out
inc
jne
dec
fldlg2
ret
pop
cs
jge
adc
js
rcr
xor
in
std
pop
lods
loope
cmpsl
neg
decl
lahf
inc
or
mov
mov
add
shlb
push
mov
pushf
cmp
arpl
xchg
pushl
inc
adc
inc
fimuls
stos
call
dec
out
ljmp
shrl
shrb
enter
cs
pop
mov
sub
pop
inc
push
push
popf
movsl
xchg
sub
std
xchg
dec
lret
pushf
aas
sub
cmp
pop
xor
inc
cmp
cs
jns
addl
mov
in
ss
cld
negw
mov
pop
test
or
popf
adc
xchg
pop
push
ror
sub
hlt
cli
in
lret
frstor
and
sbb
sub
movsb
aas
mov
jle
mov
decb
js
add
cmp
pop
lods
arpl
pop
incb
fldenv
jmp
test
jbe
fs
ret
mov
ljmp
das
in
and
rclb
sbb
dec
pop
pop
cld
cmp
movsb
or
daa
mov
mov
ljmp
and
dec
lret
push
ret
ds
scas
inc
add
js
jecxz
mov
mov
adc
push
fidivs
mov
jb
lods
decb
out
jg
mov
rclb
pop
add
aaa
pop
dec
push
mov
or
jo
xor
int
arpl
sub
pusha
and
lahf
xchg
jg
mov
ljmp
incb
nop
sbb
movsl
xor
mov
data16
ret
mov
pop
add
inc
dec
incb
notb
ss
lret
mov
push
and
add
or
fmull
das
incl
cmp
or
outsb
push
outsl
test
sbb
or
rorb
cltd
sbbb
fucomip
sahf
push
jmp
ficoms
xchg
pop
cli
cmp
xchg
into
inc
mov
push
mov
mov
or
mov
mov
cmp
jmp
mov
and
inc
outsb
xor
jnp
clc
mov
fs
faddl
and
out
leave
mov
xchg
jne
dec
adc
push
push
adc
xlat
mov
cmp
xchg
clc
leave
test
jb
mov
pop
xchg
sbb
add
lea
icebp
aad
nop
push
mov
out
pop
push
cmp
mov
mov
adc
dec
cmpsl
mov
push
psraw
mov
rorb
sbb
inc
pop
jge
mov
out
mov
and
jmp
outsb
int3
scas
fsubl
test
jbe
gs
add
push
daa
push
int3
adcb
pusha
fdivl
fisttpl
pop
sub
sbb
push
or
xor
mov
xorb
pop
or
cmp
mov
pop
dec
mov
add
pop
jne
xlat
sub
adc
outsl
push
lds
cltd
adc
xor
sbb
aas
fnstsw
movsb
xchg
push
and
rorl
sub
test
sub
and
push
daa
dec
rclb
in
adc
jl
in
sub
cmp
mov
adc
mov
arpl
pop
or
cmc
and
mov
cmp
stos
subl
rcr
test
lds
sbb
mov
inc
xor
jl
dec
jno
adc
jge
sbb
test
sub
xor
bound
cld
cmpsb
xchg
movsb
xchg
jne
or
jmp
push
pop
jp
jge
mov
in
xor
inc
outsb
ret
cld
dec
dec
sub
jg
cwtl
mov
cmp
dec
xor
fidivl
mov
or
enter
inc
push
inc
and
cmpsb
add
addr16
sub
lods
jnp
cld
test
fsubr
ljmp
xchg
mov
aad
or
fdivr
adc
mov
adc
popf
lcall
pop
aaa
push
push
pusha
sahf
mov
stc
xchg
xor
inc
jp
mov
adc
adc
fldcw
mov
mov
and
add
mov
jmp
es
loop
push
mov
fxch
clc
fstpt
int3
outsb
je
push
decb
ficompl
aaa
scas
and
insb
aas
adc
mov
jno
pop
es
dec
dec
mov
ss
xor
sub
xor
mov
lcall
jo
dec
mov
ds
in
and
enter
cmpsb
out
cmp
aad
mov
mov
jge
sti
cmc
sbb
push
add
dec
jns
adc
and
mov
push
in
popa
sbb
push
add
pop
sbb
nop
push
jle
lret
xchg
cs
cmp
imul
lahf
mov
mov
sahf
or
or
scas
and
cmp
testb
rcrb
imul
adc
mov
mov
sbb
mov
fcomps
pushf
in
and
sub
adc
and
ror
fdivl
fs
push
shrl
out
xor
sbb
and
cld
arpl
pusha
jne
jge
scas
inc
mov
add
imul
xchg
and
and
ja
inc
mov
xchg
in
sub
xor
out
cld
ja
jl
cld
bound
out
adc
stos
dec
mov
inc
incb
ficomps
mov
add
jmp
sbb
popa
inc
shll
jmp
cwtl
mov
jecxz
decb
into
out
mov
fisttps
mov
xor
adc
xchg
loopne
hlt
lret
lods
loop
std
or
sub
push
xor
adc
adc
call
or
ret
push
cwtl
jecxz
sarb
or
jbe
fcompl
dec
dec
push
insb
adc
push
int3
and
imulb
adc
stos
cmp
jnp
cwtl
xlat
cmp
mov
jne
sub
sub
movsl
rcr
in
cmpsl
fwait
ljmp
outsb
sbb
xchg
mov
xorb
cmp
xchg
lods
xchg
cs
mov
cld
adc
mov
cltd
sahf
jmp
and
aas
adc
sub
mov
mov
sub
xor
rcrb
pop
sbb
mov
xchg
icebp
cmpsl
stos
sti
movsb
ja
pop
ljmp
inc
fs
push
mov
and
push
in
push
mov
jbe
sbb
out
nop
add
shll
add
sub
xchg
cmpl
adc
lret
dec
xchg
insl
mov
fs
jl
mov
lret
je
add
fcmovnb
jb
dec
in
xchg
mov
scas
cld
aam
xchg
and
push
push
sar
xchg
cmc
sahf
in
sarl
jecxz
into
ds
pop
adc
xchg
shlb
out
hlt
adc
inc
out
xor
mov
jae
sar
lahf
push
ret
adc
data16
pop
aad
dec
jae
mov
test
pop
lds
in
movsb
jp
shl
mov
in
hlt
out
push
cltd
push
cld
xchg
pop
ficompl
jl
outsb
andl
in
in
add
int3
ja
fidivrs
push
mov
cmp
aad
lds
rorl
aaa
mov
call
cmp
xor
jb
jl
std
jnp
cmp
cld
les
mov
js
in
out
adc
xchg
cmc
loope
mov
incb
in
push
xlat
fiaddl
pop
pop
cmpsb
sbb
cld
mov
rorb
add
cmp
push
mov
aad
push
xchg
insb
xor
gs
sbb
repnz
arpl
add
movsb
pop
jns
pop
js
fistpll
das
inc
repz
mov
dec
inc
sbb
pop
int
mov
push
sbb
das
sbb
addr16
es
ljmp
xchg
mov
inc
pop
mov
push
cmpsb
fcompl
arpl
sarb
and
mov
pop
dec
mov
stos
xchg
mov
lahf
add
leave
hlt
lock
stos
inc
mov
out
xchg
loope
dec
pop
mov
xor
pop
jecxz
mov
xchg
jnp
dec
inc
sbb
push
sbbl
add
pop
je
push
arpl
decb
mov
pushf
ret
mov
lock
popf
push
mov
cmp
test
mov
hlt
fidivs
dec
aad
mov
add
dec
push
fucom
fwait
pop
add
ret
insb
cmpsb
jmp
or
xchg
test
inc
sbb
jnp
adc
or
repnz
cmp
or
pop
lcall
jae
ret
out
jne
lock
aas
push
add
decb
cmc
popf
gs
test
imul
mov
mov
mov
jae
mov
lock
mov
ret
std
pop
insl
add
push
jno
jge
insl
sub
inc
mov
in
lea
jo
in
mov
pop
pop
jg
movsl
and
and
pushf
push
nop
inc
push
push
insb
out
fidivs
pop
jmp
mov
gs
je
stos
sbb
call
inc
jge
inc
out
cmp
lret
scas
add
mov
push
arpl
mov
xor
ja
dec
stos
add
cmc
hlt
in
sub
add
xchg
xchg
cmpb
subb
shll
add
incb
std
or
push
xchg
loop
pop
push
scas
jne
mov
aad
in
push
imul
arpl
mov
incb
cmp
inc
imul
cli
jmp
in
lcall
daa
cltd
mov
and
or
push
adc
jmp
call
js
imul
fmul
push
repz
or
mov
xchg
add
push
xchg
ja
mov
jns
jl
mul
inc
dec
pop
sbb
js
mov
cltd
stos
xchg
in
dec
add
jp
add
lods
lds
daa
lock
in
aad
inc
mov
and
adc
xchg
push
popf
xchg
mov
fsubl
sub
push
adc
frndint
ds
mov
pop
cmc
fstl
out
xor
sar
aaa
and
and
incl
stc
sub
lods
test
in
push
ds
mov
ljmp
leave
and
pop
fsubs
pop
pop
adc
scas
je
mov
in
dec
aaa
sbb
bts
xchg
sbb
jae
sbb
cmp
xchg
aad
adc
ss
loope
sbb
dec
jle
fisubrs
sbb
dec
repz
cld
in
out
add
clc
cli
insl
movl
roll
add
sbb
into
enter
test
jmp
out
xor
movsb
pop
test
add
jnp
sbb
sub
repz
xchg
pop
inc
int3
pop
dec
xor
outsl
add
sbb
or
divl
int
push
cwtl
mov
fwait
or
cmp
arpl
popa
mov
cli
cmp
imul
jmp
mov
push
xchg
repz
in
cmp
jle
jg
jle
aam
loope
cmp
pop
push
int3
or
push
adc
adc
mov
or
in
xchg
or
add
or
push
sbb
mov
lock
mov
hlt
pop
stos
int3
test
or
data16
sarb
call
xor
and
into
adc
dec
dec
add
out
pop
mov
sti
pop
in
push
sub
sbb
mov
in
into
xchg
pop
mov
jns
mov
and
test
jp
insl
int3
data16
es
loope
hlt
sbb
or
and
lret
cld
scas
pop
aam
test
fwait
ss
lcall
sbb
mov
jbe
lods
xlat
sahf
mov
dec
fisubrl
add
push
scas
popf
enter
push
dec
sbbl
push
lahf
sub
jle
cmp
aas
fcmovbe
jns
ja
jo
mov
ftst
push
mov
mov
add
adc
mov
mov
add
lds
jle
and
jns
out
cltd
lcall
cwtl
out
in
in
sahf
std
mov
sar
add
je
mov
xchg
mov
cmp
push
ret
sub
xchg
sbb
jmp
adc
ljmp
sbb
adc
pop
adc
dec
xchg
dec
aad
inc
mov
cwtl
fiaddl
jo
xor
decb
test
sub
cltd
push
std
or
imul
xchg
xchg
incb
mov
mov
mov
pop
movsb
lret
cmpsl
pop
push
icebp
push
mov
out
out
jp
adc
fldt
push
in
sub
inc
mov
gs
lret
enter
clc
int3
dec
das
dec
or
test
daa
test
xor
inc
or
jo
movsl
pop
cld
pop
sbb
in
dec
jl
sahf
in
xchg
outsb
mov
push
and
push
dec
xchg
mov
add
nop
xor
scas
and
sub
jbe
fbstp
xchg
cmpl
mov
and
add
lods
ret
mov
fisubrs
mov
and
adc
add
inc
jle
sub
xchg
jae
mov
jl
pushf
and
das
sti
push
stos
in
insl
or
or
adcb
cmp
xor
mov
dec
xor
pop
mov
cltd
mov
jp
mov
andb
decb
pushf
mov
inc
xchg
jmp
xchg
loopne
int3
jae
sti
jg
insb
das
lods
mov
add
scas
arpl
xchg
xchg
or
cwtl
inc
add
stos
repnz
push
cld
push
adc
addl
out
mov
dec
or
aad
sub
jge
push
popa
push
in
pop
mov
arpl
and
push
sub
cltd
sahf
movsb
pop
jp
mov
frstor
cmp
jo
mov
in
cmp
sub
inc
push
pop
hlt
push
jae
xchg
fucomp
decb
out
xor
decb
sub
divl
add
and
push
mov
push
in
xor
jle
adc
xchg
mov
or
jns
lods
sub
insl
call
loope
mov
cltd
out
xchg
pop
xlat
mov
aas
ret
pop
mov
mov
les
cli
ficoms
xchg
inc
ret
jmp
jo
sbb
xchg
lods
xchg
add
repz
lods
imul
cmpsb
fisttps
sarl
mov
cltd
jp
int3
inc
and
add
sahf
leave
gs
dec
cld
sbb
dec
xchg
mov
and
cmpxchg
outsl
das
push
mov
mov
cmp
xor
cwtl
xchg
sbb
lcall
or
icebp
inc
cld
mov
add
incb
mov
and
cld
ret
add
cmp
mov
sbb
or
add
push
lea
cmc
pop
pop
sbb
lret
sub
inc
xchg
push
in
incb
dec
dec
mov
orl
in
dec
mov
jb
adc
pop
inc
bound
push
ljmp
daa
cmpsb
jge
pusha
cmp
mov
dec
stos
jp
jle
mov
jae
mov
adc
scas
nop
push
jp
push
stos
cmp
pop
sbb
mov
mov
mov
or
fsubl
dec
or
sbb
fcoms
jae
arpl
pop
insl
into
inc
and
aam
repnz
fsubs
sbb
out
cmpsl
cmp
cmpsb
inc
lock
pop
rorb
jns
cmc
ret
jae
xor
mov
lret
out
mov
add
adc
cld
or
cmpsb
xchg
inc
pop
ret
xorl
in
jp
insl
and
pop
jecxz
popf
adc
pop
cmp
stos
push
in
int3
out
and
cmp
movsl
decb
or
or
decb
adc
pop
pop
dec
push
and
xor
nop
xchg
fdivl
push
push
inc
xchg
or
in
shll
adc
addr16
jle
xlat
insl
jae
jmp
shlb
loop
imul
mov
or
sarb
call
test
mov
in
fdivr
pop
insl
mov
and
inc
bound
or
xchg
mov
gs
push
pop
sub
add
sub
fucomp
inc
aaa
ja
mov
movsb
xor
and
data16
popa
stc
jno
call
adc
adc
mov
inc
sti
repz
daa
mov
fisubrs
pop
sub
fsubrs
mov
fucomp
add
mov
lret
jne
adc
repnz
push
mov
sub
mov
mov
pop
lret
inc
mov
mov
mov
sbb
sub
imul
lds
sbb
push
int
sub
mov
cmp
clc
es
jmp
out
lea
fidivrl
mov
clc
movsb
rcrb
fistps
int3
xchg
jg
sbb
out
fs
scas
fmuls
pop
cmp
adc
jns
insb
std
xor
cmp
xchg
mov
mov
or
add
mov
xor
imul
or
sbb
and
sub
push
sbb
nop
aad
lret
or
jne
jnp
icebp
mov
aam
xchg
cmpsb
mov
in
push
in
add
and
sub
push
pop
xchg
mov
inc
daa
mov
mov
inc
stos
repnz
idivb
movsl
or
loop
adc
ljmp
mov
lcall
orb
shlb
cmp
jb
paddusw
rorb
cmp
jno
ret
repz
mov
jecxz
pop
cmc
fwait
inc
cwtl
mov
subl
adc
mov
xor
push
rcrb
decb
dec
cmp
in
test
mov
int
jge
and
fcoml
or
aad
scas
call
sub
rcrb
dec
fs
or
scas
mov
jo
mov
fistpl
in
pop
mov
cltd
icebp
mov
inc
sbb
jmp
test
add
daa
sar
popf
push
divl
bound
jl
dec
cltd
je
cmp
int3
sub
in
or
mov
outsb
mov
in
xor
sub
mov
xchg
xchg
push
aaa
cltd
js
pop
imul
jbe
shlb
aam
xchg
sbb
sbb
sbb
imulb
and
dec
mov
mov
lret
xor
cs
and
pop
xor
fxch
lods
ret
push
jge
mov
repnz
inc
add
pop
decb
mov
push
cmp
mov
nop
shlb
rorl
shl
sti
and
adc
xor
fld
push
push
xor
push
sbb
ret
aaa
inc
roll
push
ds
inc
jns
push
cmp
xchg
sahf
xor
sub
add
ret
push
roll
in
insl
xchg
dec
dec
sub
jle
je
lret
outsb
jo
or
jl
push
sarb
jmp
xchg
fidivrl
sub
cld
repnz
jg
clc
or
adc
ret
roll
vunpckhps
mov
dec
sar
push
pop
adc
leave
mov
jae
dec
jecxz
stos
cld
pop
dec
lret
xor
add
inc
mov
dec
add
lods
push
jecxz
test
inc
adc
es
cmc
cmp
clc
dec
mov
add
jo
pop
push
dec
pushf
test
sub
dec
aaa
xor
int3
cli
sbb
add
dec
mov
sub
enter
sahf
mov
lods
stos
pop
push
outsl
rorb
int3
cmp
hlt
scas
add
enter
es
das
in
add
cltd
hlt
xor
cmp
and
xchg
lahf
or
dec
inc
dec
dec
pushf
imul
in
gs
jg
sub
out
inc
push
xchg
mov
mov
hlt
scas
in
sub
mov
call
mov
mov
lret
cld
sarb
jbe
push
je
test
and
addr16
add
push
xchg
mov
scas
clc
pop
mov
call
movsb
out
dec
jo
cmpb
fcomps
insb
mov
jmp
mov
fs
and
into
in
jl
fsubrp
push
xchg
pop
xchg
ret
add
hlt
popf
sub
out
das
and
sbb
sar
cmc
test
adc
dec
adc
lods
incb
lret
and
insl
decb
push
imul
into
xor
repnz
jl
xchg
xchg
lcall
and
push
xor
std
sub
jge
jns
jo
pop
xchg
or
sub
es
rorl
aas
push
out
mov
dec
inc
jne
mov
loop
jle
das
push
fbld
sub
into
cltd
add
ss
and
out
cmp
in
push
movsl
fistl
mov
data16
sarl
sub
cmpsl
mov
mov
or
mov
repz
lahf
andb
outsb
or
adc
aaa
sub
vpunpckhqdq
mov
and
and
inc
or
inc
dec
rcl
js
sub
inc
es
cs
pop
xchg
dec
lods
cli
insl
push
inc
fisubrl
popa
popf
jo
jno
or
mov
mov
sbb
rcll
lahf
jo
lcall
mov
aad
jae
adc
xchg
jns
test
jg
es
mov
ret
and
xor
gs
imul
inc
repz
inc
mov
js
adc
xchg
xchg
pop
sahf
add
jno
rolb
lods
lock
sbb
clc
les
push
push
fsubs
popa
add
imul
fidivl
cmp
insl
int3
xchg
sahf
das
dec
stos
sbb
sar
movsb
push
jmp
repnz
inc
and
inc
mov
sub
ljmp
or
lahf
js
sbb
inc
mov
hlt
movsb
jb
rcrb
push
in
bound
inc
jns
int3
push
fidivs
and
ret
lret
xchg
das
xlat
dec
negb
inc
cld
push
stc
xor
push
cld
and
insl
lods
dec
dec
add
sbb
incb
or
aas
fdivr
outsb
aam
inc
es
mov
and
mov
adc
cli
andb
or
cmp
decl
sbb
movsl
lcall
jg
dec
pop
decb
jmp
imul
sbb
adc
sarb
mov
sub
jl
mov
and
gs
fcmovnbe
lods
mov
xchg
jno
jl
movl
mov
mov
add
mov
stos
jae
pusha
lahf
xchg
and
sub
in
xchg
sbb
jno
sub
hlt
pop
arpl
scas
sarl
inc
push
fimuls
ja
das
sbb
mov
sbb
mov
jmp
imul
movsb
mov
inc
mov
cmp
cli
jns
mov
cmp
in
dec
pop
int3
push
mov
cmpsl
out
sub
div
cmc
xor
imul
or
fs
cmp
pop
add
sbb
mov
xlat
add
pop
mov
jb
adc
cmc
jbe
mov
sbb
pop
or
and
pop
mov
mov
or
jge
xor
mov
sbb
jb
adc
inc
add
dec
mov
xchg
ja
test
xchg
sbb
insb
int3
mov
pop
insb
and
lds
or
inc
xchg
jne
or
adc
lock
adc
push
stos
cld
out
pop
xor
add
pop
test
lods
in
xchg
or
sbb
es
adc
dec
mov
cld
mov
xchg
cwtl
or
cmc
adcl
and
pusha
pop
mov
or
cmp
sbb
mov
fildll
push
nop
stos
bnd
adc
mov
decb
int3
push
hlt
pushf
jns
add
or
dec
sahf
das
cmp
push
dec
jno
or
xchg
cmpsl
dec
push
es
lea
adc
xlat
sbb
sub
cmpsl
mov
jns
mov
repnz
jae
rcrl
mov
mov
pusha
mov
aaa
dec
jb
inc
lret
adcl
cli
stos
ja
and
mov
xchg
ret
xor
jecxz
ljmp
test
int3
orl
jl
or
pop
xchg
inc
es
arpl
filds
fs
push
pusha
js
ret
xor
movsl
xlat
adc
pop
push
stos
outsl
daa
xchg
dec
mov
sbb
stos
decb
imul
pop
jnp
xchg
and
jbe
rorl
je
xchg
ret
rcrb
sbbb
add
jmp
je
mov
ljmp
xchg
inc
and
cmpsb
and
decb
rclb
fcomip
rcl
jno
nop
aaa
xchg
mov
in
mov
lret
mov
movsb
fcom
push
out
or
lcall
xchg
mov
daa
cld
dec
fisttpll
sti
cmc
xor
sbb
loope
loop
xlat
in
fistpl
fs
mov
test
lods
push
int3
test
and
aad
jg
pusha
fstl
stos
int
xchg
xor
xlat
decb
cmpl
test
int3
mov
gs
lcall
cld
push
lcall
sub
ret
mov
jle
push
pusha
sbb
pop
jae
adc
mov
xchg
sbb
and
jo
int3
lahf
push
inc
lods
test
adc
mov
jo
cmpsl
sub
xchg
out
pop
shl
add
mov
aaa
mov
jo
adc
mov
gs
push
fs
nop
pop
bound
mov
movsb
jne
and
int
es
xchg
pop
in
push
dec
enter
mov
pop
aam
lea
mov
and
pop
in
adc
mov
shl
das
int3
pop
pop
scas
mov
js
enter
jp
dec
push
popa
mov
cmpsl
xor
aaa
adc
es
stc
fldl
or
loope
push
popa
mov
and
push
xchg
add
jns
cmp
in
pop
xchg
add
icebp
out
jp
imul
lods
pop
bswap
sbb
cmp
sub
test
xor
push
jns
iret
lock
fcmovbe
xor
fbstp
sub
std
sbb
out
jns
clc
xor
cmpsb
aas
push
and
mov
aad
insl
push
jno
decb
fisttpll
jmp
sbb
xchg
push
outsl
incb
outsb
ds
cltd
xor
scas
lret
or
jle
rolb
mov
shrl
mov
xchg
mov
stos
int3
jecxz
inc
addb
cs
push
jmp
push
sub
and
cmp
cltd
js
movsb
clc
pop
bound
in
arpl
pop
xor
cwtl
mov
imul
loope
mov
rorl
mov
adc
pop
test
push
jge
mov
pop
fidivrl
stos
insl
cmpsl
xor
lahf
clc
xchg
std
out
cmp
or
jge
inc
mov
xor
rclb
addr16
jns
push
add
insb
fucomi
idiv
faddl
add
in
leave
add
subl
inc
and
add
test
dec
add
jns
lcall
lahf
adc
in
inc
xchg
mov
loope
lods
cmc
cld
imul
cmpl
xor
cmp
adc
pop
loop
push
arpl
pop
jl
mov
aas
shlb
cmpsl
das
ficompl
hlt
push
out
push
mov
cmp
sbb
mov
mov
stos
lods
cs
loopne
xor
jmp
xor
mov
scas
or
jno
in
mov
adc
jb
xchg
imul
nop
pop
sub
add
ds
nop
rcrl
dec
or
mov
vminpd
mov
or
push
lsl
jge
push
mov
sbb
test
inc
add
inc
dec
shrl
int
xor
push
mov
jecxz
jg
sub
stos
dec
test
dec
xchg
lods
xchg
jbe
xor
sbb
add
adc
or
sti
jns
decb
add
sub
lods
leave
jle
in
into
sbb
lahf
lret
and
daa
mov
mov
das
dec
arpl
stos
jns
sbb
ror
sub
cmpsl
fisubs
push
mov
idiv
jo
mov
dec
pop
pop
adc
decb
dec
hlt
xor
call
lea
shrl
inc
nop
add
sahf
popa
xchg
mov
pop
fisubl
cld
pop
push
adc
sub
jg
and
push
sbb
cwtl
lret
lret
std
popa
inc
out
or
sbb
std
lods
jge
orb
push
dec
or
adc
testb
or
mov
or
or
and
incb
push
cmpsb
xchg
dec
or
jp
out
es
mov
cmp
mov
jecxz
setne
test
dec
inc
add
push
decb
or
xor
lahf
out
pusha
mov
bound
pop
or
lea
or
adc
dec
mov
clc
adc
xor
in
sti
sbb
filds
add
faddp
jb
int3
pop
enter
adc
mov
or
sbb
lods
adc
hlt
fistpll
mov
xchg
pop
or
and
dec
sub
cmp
cld
push
push
clc
pop
ret
push
adc
pop
sbb
stc
mov
mov
pop
adc
mov
mov
inc
mov
sbb
push
insb
add
xchg
stos
sar
stos
pop
and
push
cwtl
add
add
xlat
mov
mov
xchg
mov
pop
fidivl
cli
push
push
mov
in
repnz
dec
in
inc
cwtl
jnp
adc
cmp
jbe
jo
mov
pop
jl
add
mov
mov
push
hlt
sti
cmc
push
or
std
push
xchg
das
push
sbb
xor
movaps
decb
sub
ja
addr16
sbb
inc
xor
mov
sub
jmp
aas
pop
jne
out
mov
lcall
jl
mov
mov
fisubrs
sbb
and
decb
mov
push
lods
fstpt
in
scas
outsb
sub
jo
flds
ret
inc
cmp
sub
push
int3
pop
imul
enter
and
leave
fstps
push
jns
cmpsb
lcall
test
dec
add
and
jmp
idivb
or
push
orb
xchg
and
inc
xchg
mov
cwtl
push
add
push
jne
repnz
mov
jns
aas
incb
test
decb
std
clc
in
cld
ret
inc
xor
cmp
mov
jecxz
sbb
fwait
inc
push
mov
in
es
xchg
add
sbb
sub
shrl
inc
sbb
mov
cli
sub
jae
adc
mov
outsl
test
cmp
test
sahf
paddsb
push
dec
dec
ror
xchg
push
popf
jno
mov
int3
test
aam
shl
pop
out
push
pop
mov
sbb
mov
sbb
js
xor
inc
insl
xor
sbb
jns
das
mov
data16
idivl
cld
xor
sahf
adc
xor
sbb
mov
xchg
pop
xchg
aas
lret
or
add
jbe
mov
dec
cmpsl
xor
adc
ret
push
add
rcll
inc
aam
bnd
mov
cld
fstl
stc
cmpsl
lcall
cmpsb
ja
pop
mov
icebp
mov
in
popf
push
in
mov
ret
outsl
imul
push
add
pop
js
mov
jbe
or
sub
cmp
js
shl
int
push
cld
ja
into
inc
or
ret
dec
sti
mov
push
push
push
pop
stc
int
pop
incb
movsl
shll
pop
in
jns
lea
mov
fnstcw
or
inc
cmp
xchg
xor
into
je
mov
inc
lret
mov
push
xor
xor
pop
fnstcw
fdivr
sbb
out
pop
int3
hlt
or
loop
test
gs
cli
in
or
sub
xor
sbb
mov
out
scas
int3
push
in
inc
mov
inc
mov
inc
sbb
lock
add
cmp
cwtl
dec
xchg
adc
add
mov
je
and
mov
decb
inc
or
mov
jno
add
xchg
mov
sarl
sbb
add
cmp
mov
jmp
test
js
das
mov
insb
or
sub
lock
lcall
nop
loop
fistpll
pop
rclb
jmp
out
inc
add
mov
mov
cmpsl
mov
inc
or
in
in
frstor
sti
cmovb
ror
icebp
sub
xlat
pop
jns
stos
imul
rolb
ret
push
sbb
mov
fsubp
in
sbb
and
shll
enter
daa
aad
fsubs
test
adc
ljmp
mov
iret
mov
outsb
push
lock
jmp
sub
imul
ja
std
cmp
sbb
inc
rolb
or
xchg
sub
mov
push
jg
jo
xchg
jb
je
adc
jle
sub
jl
cmc
scas
inc
mov
pop
decb
sub
out
out
add
inc
mov
adc
mov
inc
icebp
push
repnz
std
ret
mov
jns
mov
in
jo
sbb
gs
fwait
jp
mov
mov
sub
out
jnp
pop
mov
mov
cmp
push
push
sahf
addr16
in
or
pusha
xchg
and
add
lea
decb
jno
aas
sub
xchg
mov
cltd
lahf
leave
xchg
decb
mov
lock
outsb
imul
fwait
sbb
lcall
fildl
mov
xchg
imul
fidivl
mov
push
sbb
add
hlt
mov
daa
out
es
mov
jo
xor
outsb
xor
ds
push
nop
lock
lds
adc
outsl
popf
mov
inc
pop
fidivl
cld
dec
push
push
lret
lea
sti
sbb
push
jo
xchg
pop
push
cmpsb
sbb
pop
mov
jle
push
les
repnz
xchg
xchg
movsb
push
sbb
fwait
shlb
push
in
out
mov
mov
mov
sbb
add
inc
pop
fadd
cmp
xor
jge
hlt
daa
pusha
mov
out
mov
and
push
xor
subb
add
mov
pop
sub
ret
xorb
xchg
je
mov
paddd
jmp
lea
daa
lret
test
cmp
dec
cli
shrb
ss
outsb
jbe
jmp
loopne
mov
add
pop
scas
xchg
mov
les
sub
or
mov
lds
popf
hlt
stos
and
test
sub
stc
ss
xor
ja
test
incb
inc
addr16
dec
sbb
ja
pop
arpl
xor
outsl
mov
pusha
and
push
mov
mov
adc
loop
or
cltd
testb
outsb
mov
inc
mov
cli
or
mov
lock
mov
imul
enter
cmp
sbb
aas
mov
sbb
sbb
xchg
imul
aam
adc
cmpsb
cmpsl
lcall
in
addb
lods
or
popw
in
adc
push
int3
jo
out
mov
test
dec
movsb
pop
pop
push
test
jo
mov
push
cmp
push
jmp
mov
faddl
adc
fwait
clc
in
sub
shll
or
jbe
or
iret
push
int3
dec
mov
xchg
mov
test
sub
pop
pop
pop
bound
stos
jno
movsb
sub
andb
xchg
sub
push
fcoml
hlt
cmp
ljmp
mov
std
inc
pop
adc
and
data16
and
pop
xchg
fiadds
call
mov
lahf
cld
insl
addl
push
dec
in
xor
xchg
scas
add
ljmp
outsb
mov
dec
mov
pop
push
sbb
aad
inc
ja
insb
cli
int3
jae
shrl
mov
add
je
dec
adc
fnstsw
mov
popa
push
lock
pop
aad
sar
or
fucomi
arpl
xchg
lret
add
daa
ja
hlt
aad
arpl
int3
adc
pop
imul
xor
adc
push
jp
pop
mov
shl
or
push
or
xorl
adc
cli
dec
int3
sbb
fnstenv
mov
mov
inc
inc
jb
or
inc
mov
aas
loop
mov
mov
xor
idiv
pusha
mov
lret
and
push
adc
sbb
test
xor
repz
mov
call
test
lea
imul
in
outsl
xchg
add
call
sbb
mov
cmp
pop
outsb
jmp
pop
mov
mov
jns
or
mov
add
fadds
into
sub
xchg
dec
je
fnstsw
icebp
mov
push
sbb
ljmp
imul
sti
sbb
jge
mov
and
or
mov
add
or
mov
push
dec
cmpsb
cwtl
lods
int
movsl
adc
incb
jmp
and
pop
or
pop
cmpb
xlat
shr
repz
cmp
mov
or
sub
gs
sahf
incl
lcall
repnz
int3
ret
incb
js
pop
mov
sbb
adc
es
push
mov
fcompl
cmp
inc
add
cwtl
test
cld
cmpsl
adc
jae
sarb
lcall
lret
jo
sbb
cmpb
les
and
incl
mov
aad
dec
cmp
dec
and
lea
popa
pop
jp
lods
xchg
mov
iret
incb
add
hlt
xchg
mov
add
adc
in
inc
ja
rolb
pop
outsb
xchg
iret
stc
ret
pop
mov
imul
mov
push
xor
lcall
xchg
xor
and
push
xor
outsb
cmc
xor
inc
xchg
lds
or
mov
decb
lahf
and
or
jecxz
pop
popa
ds
sbb
lods
stos
lret
shll
cwtl
gs
or
lock
ret
jno
cltd
test
dec
mov
mov
mov
fiadds
jge
add
xchg
jmp
dec
out
xchg
mov
cs
xor
lea
decb
xchg
xor
jns
and
cmpsb
mov
add
lcall
add
fidivl
je
ret
dec
inc
cmp
data16
pop
in
ja
stos
xchg
fadds
pushf
int3
mov
mov
das
push
shll
dec
lea
pop
pop
mov
adc
imul
mov
mov
add
xor
sub
mov
decb
mov
in
xchg
lds
jno
jns
jle
cld
aad
push
insb
ja
jne
xchg
cs
leave
dec
push
rcll
scas
shrl
pushf
loope
imul
inc
lods
push
mov
jnp
push
push
js
mov
jmp
add
xchg
mov
jmp
pop
cli
ds
adc
gs
mov
std
add
xor
push
inc
jecxz
mov
or
aaa
ja
addr16
sub
inc
lahf
sbb
sub
push
mov
cwtl
push
cmpsl
xor
xorl
push
hlt
adc
add
add
std
inc
pop
xchg
mov
jo
decb
aad
mov
popa
sub
in
rcr
in
xchg
lods
sbb
push
gs
and
ret
int
out
imul
in
adc
cltd
mov
int
lahf
and
aas
call
push
mov
jp
adc
repz
incb
ljmp
push
jb
mov
xchg
shll
mov
add
leave
sahf
cld
push
es
and
xchg
cmc
sbb
ljmp
cmp
adc
push
lret
stos
insl
aaa
pop
decl
sub
cli
pop
pop
cmp
jecxz
leave
cmpsb
xchg
dec
insl
xchg
push
xor
cmc
jg
push
adc
cmp
or
xchg
sahf
outsw
stos
lret
cmp
xchg
inc
push
pop
fisubrl
aas
dec
sub
ret
pop
sbb
fucomip
test
cmp
mov
push
cmp
dec
jmp
loop
lods
sbb
mov
insb
les
pop
xchg
neg
popa
ret
pop
iret
incb
fstps
pop
xor
jecxz
aam
add
jns
pop
lods
sbb
hlt
loope
dec
and
jmp
in
add
mov
ret
outsb
inc
out
jnp
pop
imul
push
stos
inc
xor
cmpsl
or
mov
and
mov
xchg
inc
sub
gs
stc
imul
mov
mov
sbbb
lahf
sbb
addr16
stos
test
add
push
mov
aas
sub
pop
sub
jne
adc
jo
pop
mov
fistpl
ficomps
jns
insb
stos
sub
cld
sbbl
cmpsb
or
mov
add
push
out
sti
je
pop
lods
jecxz
push
jae
push
out
inc
stos
pushf
lds
es
cmp
popf
mov
jns
or
inc
adc
or
and
andl
std
hlt
jae
mov
outsl
adc
int3
es
sub
add
decb
push
idivl
insb
int3
or
push
sub
pushf
je
jne
mov
ret
and
inc
mov
popl
pushf
mov
leave
jns
sbb
insl
aaa
jge
in
icebp
rclb
add
outsb
mov
mov
push
inc
mov
lock
mov
cld
push
jo
jnp
outsb
fcos
dec
scas
shl
cmpsb
sbb
xchg
in
ds
aas
and
ss
jg
xor
add
stos
mov
cmp
cmp
out
adc
adc
mov
sub
aam
lret
add
int
mov
xchg
movsl
in
xor
add
mov
push
or
xor
sbb
in
mov
pop
mov
hlt
or
popf
pushf
dec
cmp
and
int
add
test
mov
cmp
fidivrs
clc
popf
mov
add
xor
lahf
add
pop
shlb
dec
popf
decb
pop
fs
sbb
push
xor
incb
dec
cmpsl
sub
inc
in
in
add
mov
mov
mov
shlb
loopne
sar
sub
outsb
in
add
adc
dec
gs
outsl
pop
decb
sub
hlt
movsl
mov
cmpsl
je
cs
adc
inc
leave
mov
fcmovnb
out
jmp
jp
or
sub
add
adc
lods
dec
adc
cld
push
xchg
sbb
in
out
jge
push
sbb
push
and
sbb
in
xchg
shl
pop
inc
std
ds
xor
jg
inc
push
adc
in
adc
or
cmp
out
lahf
mov
pop
inc
dec
adc
mov
icebp
sbb
not
or
adc
incb
insb
or
dec
or
fs
cmp
in
lea
dec
icebp
inc
jge
push
sbb
jo
xchg
das
sub
movsb
pushf
lea
cmp
xorb
add
inc
cltd
mov
add
js
hlt
jbe
jo
aaa
int
jge
sahf
cmp
xor
or
pop
sbb
xchg
mov
in
jle
test
ror
int
and
jp
cld
pop
pop
aam
or
bound
shll
aaa
out
sub
addr16
mov
jl
xor
push
inc
cli
stos
scas
mov
cld
xchg
xor
ret
xchg
in
pop
fistpll
in
add
lcall
stos
ss
lods
aam
or
mov
nop
outsb
fst
xor
sbb
lea
jl
pusha
lret
dec
fisubrl
mov
or
adc
dec
inc
cwtl
push
cmp
fldl
mov
aaa
test
xchg
loopne
or
adc
ret
xor
mov
je
sarl
and
mov
or
loope
pop
and
fmuls
push
cmp
mov
pop
or
ljmp
mov
outsb
and
pop
or
push
inc
pop
dec
sbb
stos
fwait
repz
cli
adc
mov
add
hlt
add
dec
adc
xchg
dec
or
int3
sub
or
clc
enter
jp
add
in
and
or
es
adc
mov
inc
ss
out
out
ret
jns
test
fdivrs
cld
xchg
in
imul
or
pop
mov
pop
xchg
sub
xchg
stc
dec
aad
or
pop
les
push
cmp
test
mov
cmc
outsb
jns
inc
push
pop
xor
fwait
popf
push
rcl
and
mov
cmc
data16
enter
dec
lock
cld
jbe
das
jge
jns
sbb
mov
add
lret
lcall
dec
push
push
sbb
adc
inc
dec
sarb
sbb
jae
fidivs
mov
mov
cs
mov
std
mov
jne
jge
invd
test
je
pop
push
push
das
xor
cld
mov
sbb
jb
lods
xor
jne
dec
jmp
adc
sub
mov
adc
pop
testl
incb
addl
std
or
xchg
sub
outsl
add
mov
dec
aad
cld
insl
lods
scas
xor
or
sub
adc
mov
lods
mov
xchg
iret
and
xchg
mov
xor
in
xor
adc
cmp
scas
jecxz
outsb
fs
push
scas
fbstp
mov
mov
in
sub
dec
leave
mov
or
fsubrl
xchg
dec
fstl
push
les
xchg
sar
mov
push
cmp
mov
mov
push
ss
incb
push
aad
cmp
jnp
outsb
jbe
mov
lock
xor
cmpsl
push
sbb
call
sub
add
jg
fcoml
lea
outsl
repnz
add
aam
aad
jle
fsin
test
in
sahf
dec
adc
jbe
xchg
or
les
movsl
lds
pop
test
scas
and
mov
push
andl
jnp
dec
fcompl
fcmovnbe
sbb
cmpsb
jmp
push
sbb
pop
scas
push
stos
test
cmp
xor
pop
jae
and
testb
scas
jmp
xchg
inc
aas
jb
add
xchg
xchg
inc
test
inc
xchg
pop
or
or
push
ret
bound
fstp
frstor
push
jno
leave
int3
orb
push
xchg
mov
nop
int3
mov
xlat
mov
notb
adc
push
fdivr
xchg
push
popf
in
js
dec
movsb
dec
xchg
jbe
mov
rclb
mov
clc
int
call
stos
sub
int3
addr16
mov
mov
cmpsl
sbbb
and
adc
add
movsl
lahf
add
mov
dec
stos
std
push
insl
cld
mov
cltd
xlat
lcall
xor
mov
add
mov
jnp
mov
fisubl
outsl
lahf
bound
or
test
enter
pop
arpl
insl
sbb
mov
shrl
xorb
xchg
pop
shrl
adc
call
jnp
jg
js
or
inc
xor
sti
aas
adc
cltd
lahf
and
cmpsl
out
sub
xchg
inc
inc
cmp
loopne
mov
mov
addb
and
xchg
filds
out
cmp
cld
imul
inc
mov
outsb
sub
pop
aas
sub
sub
jge
push
xchg
in
sbb
pop
stc
sbb
hlt
lods
fisubrl
dec
xor
jge
dec
mov
cs
add
cld
insb
push
sub
cmp
jle
sub
ljmp
inc
xchg
lcall
mov
pop
jns
jle
daa
add
jnp
cs
in
popf
loop
mov
mov
scas
int3
nop
cmpsb
cmp
adc
jge
adc
ret
sbb
incb
leave
dec
shlb
sbb
or
ljmp
in
mov
sbb
aaa
sub
imul
arpl
movsb
iret
dec
mov
testb
and
jmp
jle
fisttpll
xchg
loope
scas
inc
dec
sbb
in
pop
mov
bound
jg
gs
mov
xor
add
scas
negb
push
adc
sahf
jno
outsb
or
cmp
add
cmp
pop
dec
cmovb
jmp
out
sbbb
out
xor
sbb
outsb
push
dec
xchg
cmpsl
adc
add
aaa
frstor
jmp
mov
jae
comiss
loope
out
xor
lods
lock
add
clc
shlb
dec
fstpt
xor
fisubrs
or
xchg
sbb
sub
fildl
push
imul
mov
cmpsl
scas
dec
fcomps
cmp
iret
lods
xorb
push
push
mov
fstpt
aam
mov
decb
int3
push
mov
test
clc
jo
dec
in
gs
in
jg
push
notl
imul
cmpsb
mov
cmp
mov
dec
xorb
sbb
loope
je
in
adc
xor
jg
filds
mov
insl
aas
out
int3
popf
mov
fisubl
incb
mov
lret
lods
sbb
jns
test
push
out
mov
add
pusha
dec
jnp
int
push
push
in
xor
mov
fisubrl
sti
outsb
decb
dec
aas
rol
push
xchg
mov
aaa
movsb
ret
xor
or
mov
inc
xchg
sbb
jmp
daa
dec
loopne
popf
and
mov
inc
jns
pop
popa
pop
xor
push
divl
pop
dec
popf
je
push
insb
lods
flds
stc
cwtl
fidivrs
loope
enter
mov
push
js
push
sbb
outsb
lret
lock
insl
jnp
push
add
or
in
cmc
dec
call
inc
push
or
push
or
adc
int
mov
fwait
nop
cs
xchg
fildll
adc
push
dec
cwtl
or
ficomps
mov
call
repz
add
gs
hlt
popf
lods
or
stc
mov
pop
push
insl
and
ds
mov
sbb
dec
call
inc
addr16
sub
jg
mov
mov
aas
std
test
xchg
mov
or
xchg
fisubs
jo
sub
or
jg
decb
dec
ret
repz
cwtl
rolb
jne
sahf
xchg
adc
mov
bts
jp
test
clc
mov
or
outsl
dec
xchg
xor
lret
nop
loop
call
and
pop
ret
js
cli
add
mov
adc
decb
iret
scas
or
ret
push
mov
sbb
mov
lret
les
scas
add
adc
xchg
mov
popf
test
leave
sub
ret
add
mov
dec
adc
sub
fucomi
add
loope
adcb
xor
ljmp
mov
sub
data16
repz
lock
orb
cmpsl
and
movsl
movsl
xor
test
pop
imul
xchg
sub
sbb
decb
push
push
std
fsubl
pushl
cli
and
xor
sbb
mov
out
inc
aas
call
mov
fincstp
push
cmp
jno
mov
mov
shr
cmp
gs
and
mov
add
jae
push
sub
hlt
xor
popa
ret
jp
in
std
call
push
xchg
popf
sbb
jmp
cs
xchg
mov
sbb
inc
cltd
inc
sbb
sbb
xchg
inc
dec
sbb
jp
mov
fstl
aad
arpl
lcall
pop
std
in
inc
icebp
loopne
sbb
xor
pop
mov
test
dec
sarb
pushf
inc
mov
mov
mov
sub
inc
cmpsb
cld
pop
pop
popf
stos
dec
into
and
fidivrs
or
mov
mov
or
adc
rcll
into
outsb
jp
jmp
loopne
push
icebp
repz
push
fwait
mov
loopne
in
ljmp
xor
dec
dec
stos
cltd
adc
push
dec
pushf
inc
arpl
mov
pop
pop
mov
in
insb
movb
xchg
add
dec
je
stos
testb
insl
sti
fdivrs
dec
mov
or
xor
scas
mov
decl
sbb
dec
push
jae
aad
sub
test
adc
lea
cmp
push
pop
jp
jecxz
in
mov
xlat
shr
scas
pop
in
cmc
lea
push
decb
ret
pushf
dec
inc
sar
mov
in
xor
push
add
cmpsb
sbb
movsl
push
push
pop
ds
fwait
sub
adc
jle
stos
mov
pop
and
scas
xor
out
decb
sub
iret
in
lahf
jno
jo
addr16
mov
pop
add
cmp
ljmp
pop
ret
stos
push
dec
and
cmp
rcl
loop
lcall
outsb
pop
out
add
push
add
jno
dec
inc
add
pop
pandn
inc
imul
ror
lahf
in
movsl
jmp
sub
iret
jg
into
xor
mov
xchg
std
add
xchg
addl
incb
and
mov
adc
push
std
jns
push
std
jl
movsl
outsb
pop
leave
cmp
jecxz
mov
sbb
scas
push
ss
cmp
or
or
mov
popa
rolb
xchg
pusha
mov
push
pop
movsb
push
jo
sub
inc
scas
sub
lods
add
cli
in
push
adc
ret
cs
in
inc
test
adc
sbb
loopne
pop
xor
ja
push
mov
inc
sub
mov
addr16
ds
jge
mov
stos
inc
outsb
or
or
or
mov
dec
rclb
and
addr16
std
push
lahf
xchg
jge
cwtl
test
lods
in
adcb
xor
inc
es
add
or
and
ja
inc
xlat
loopne
mov
jg
sbb
cmp
mov
cmp
jmp
sar
movsl
push
adc
sub
das
jge
and
decb
pop
jmp
ss
popf
loop
xchg
sbb
mov
cmp
jo
sbb
push
repnz
jge
sub
cmp
shl
jno
mov
fisttpll
or
sbb
lret
movsl
xor
ja
adc
jae
mov
int
in
pop
xchg
or
std
and
cmp
adc
jmp
aam
or
outsb
xchg
push
into
xor
lret
in
aas
sbb
nop
sbb
cmp
lods
loope
int3
push
aaa
sbb
or
jecxz
cmp
inc
add
es
sarb
and
push
push
mov
push
repnz
mov
lods
sub
movhps
je
dec
sar
imul
pop
xchg
or
xchg
movsb
enter
ss
fsubs
shll
call
dec
and
arpl
ficoms
imul
inc
xor
mov
pop
andb
int3
or
adc
scas
repz
push
sbb
push
or
xchg
inc
fwait
push
ljmp
pop
push
rorb
fs
lahf
rcl
xor
and
jb
add
in
and
lret
add
pop
aas
sar
sub
out
add
sahf
lds
push
imul
jb
or
dec
cmp
mov
call
outsb
mov
cmpsl
imul
dec
movsl
push
jle
mov
jae
stc
adc
sbb
sbb
jg
sti
movsl
jbe
adc
inc
pop
jl
xchg
push
lock
ss
lea
out
fmulp
jno
lds
das
out
push
xor
lret
cmpsl
jns
negb
cmp
bound
aad
adc
imul
insb
xor
fs
rcll
cmpsl
fsubl
rcl
xchg
out
push
stos
push
xchg
jg
test
outsl
iret
xor
leave
push
outsb
sub
lods
nop
in
cmp
xchg
test
jp
add
xchg
outsb
xor
adc
xchg
popf
xor
pop
sub
mov
push
dec
cmp
or
int
out
inc
sbb
cmp
jae
push
jl
fdivrs
sti
sbb
fimuls
inc
pushf
adc
sbb
sub
cmpsl
outsl
xor
out
inc
add
incb
dec
clc
mov
out
aad
sub
jne
inc
test
lcall
dec
push
shrl
stc
sbb
inc
adc
jge
jno
mov
stc
pop
inc
test
push
mov
push
cmp
movsl
and
adc
leave
and
or
inc
pop
adc
insl
arpl
sub
icebp
loop
cltd
adc
insb
jle
test
sti
mov
pop
jg
testl
mov
lods
sbb
sahf
mov
pushf
pop
add
in
int
xor
add
sbb
in
adc
lahf
add
or
xchg
push
movsl
adc
addl
adc
iret
mov
shl
push
push
cmp
xchg
mov
aam
test
push
ja
jo
mov
dec
pop
jg
mov
in
ret
data16
call
mov
movsl
pushf
sbb
sbb
sub
fidivrs
jne
pop
adc
inc
xor
sub
cmp
push
cld
es
mov
mov
jo
and
aam
adc
mov
pushl
push
lret
in
rolb
dec
mov
mov
fstl
xor
cli
xlat
bound
push
popf
and
push
cmp
xor
outsb
or
dec
dec
cld
ficompl
stc
lods
aas
and
xchg
test
xchg
cld
fcompl
add
in
push
out
inc
sbb
xchg
inc
sub
decb
inc
mov
mov
push
cmp
stos
cmp
in
fisubl
test
sub
sbb
les
cmp
push
sub
addr16
int3
in
adc
or
jg
int3
mov
dec
xor
outsb
cld
dec
xchg
sub
cmp
dec
out
cmpsb
cltd
mov
pop
lock
lahf
push
dec
pushf
push
std
xchg
mov
jo
sub
loope
mov
push
cmp
mov
mov
mov
fistpl
push
pop
pop
jne
lock
popa
mov
jg
jecxz
push
and
fdivrl
push
int3
jge
hlt
cmp
pop
mov
sbb
xor
lret
mov
outsl
dec
decb
sbb
or
pop
jle
lea
mov
pop
push
rorb
add
ds
pop
cmp
enter
jne
jnp
xor
out
aaa
cmpsl
gs
inc
mov
std
xor
outsl
jno
inc
jmp
mov
dec
sbbb
jo
les
push
jl
inc
pop
mov
jne
sbb
adc
cmp
lret
mulb
dec
shl
mov
imul
cltd
mov
push
cmp
loope
icebp
add
ja
xchg
mov
cltd
shll
xor
fnstenv
push
inc
inc
mov
or
dec
divb
xchg
mov
add
aas
lea
in
adcb
xchg
lcall
add
push
jns
sbb
dec
xchg
ret
in
fmulp
xchg
xchg
es
int
inc
cmc
fisttps
push
dec
xchg
mov
sbbl
mov
mov
sar
push
xchg
jecxz
jmp
sbb
test
sbb
mov
mov
loope
sbb
pop
popa
mov
cmp
add
xchg
push
push
xchg
sub
in
cmpsl
mov
xor
jge
js
aad
insl
pop
movsb
gs
or
arpl
in
into
or
cmp
mov
leave
lahf
jmp
shrb
orl
fs
mov
push
inc
push
mov
jp
and
cmc
test
push
jne
incb
mov
sub
sarl
sbb
mov
mov
inc
push
shll
rolb
leave
add
mov
add
in
or
faddl
adc
add
loope
cmpsb
aad
movsl
fprem1
inc
adc
cmp
xchg
movsl
add
into
push
xchg
dec
mov
sub
fwait
jecxz
inc
icebp
in
daa
rcrb
movsb
movsl
sub
push
ret
test
lea
in
inc
fnstenv
cli
xchg
add
rcll
imul
aaa
int3
mov
repnz
cmp
js
in
jnp
add
push
bound
mov
dec
mov
std
mov
aas
rorl
push
iret
test
ror
add
jo
mov
fdivrl
mov
ds
inc
xchg
and
es
gs
cld
mov
dec
mov
or
mov
pusha
xchg
mov
ret
add
add
incb
cmp
loopne
in
pop
xor
adc
mov
aam
add
imul
xchg
lcall
push
bound
inc
dec
in
and
cmpb
decb
lret
pop
mov
in
mov
pop
cwtl
xchg
pop
dec
flds
outsb
mov
jns
jg
sub
mov
aad
enter
jp
push
lcall
ljmp
insl
pop
imul
rcll
in
les
jbe
jg
lods
popf
xchg
push
pop
cltd
sbb
pop
aaa
fcoms
outsl
add
shll
sbb
in
pushl
cs
mov
mov
or
xor
jns
adc
mov
push
repnz
idivl
xor
test
lret
sbb
or
cmpsb
rorl
arpl
loope
push
xchg
dec
lods
out
and
xor
mov
cmp
add
mov
popf
fs
test
cwtl
pop
je
mov
mov
lds
xchg
sti
mov
test
out
add
int
jo
stos
inc
xchg
lods
lret
adc
mov
adc
scas
decb
xchg
das
lods
mov
cmp
jo
inc
mov
aaa
mov
push
pusha
mov
mov
rcrb
mov
or
pop
dec
sbb
add
adc
xor
jecxz
pushf
mov
sbb
fbld
push
pop
mov
or
xor
or
jne
xchg
or
fdivrl
leave
jp
add
aas
into
outsb
out
pop
cmc
sub
repz
mov
dec
lret
fisubl
fwait
int3
cmpsb
sbb
jge
mov
data16
or
nop
aaa
lds
test
xchg
adc
dec
add
dec
cmp
push
rcrb
or
jb
push
je
insb
in
jbe
and
imul
pop
lret
adcl
adc
aaa
inc
inc
cmp
fmul
and
test
add
bound
jbe
aas
mov
hlt
insb
shlb
jo
lahf
mov
or
lods
in
in
mov
xchg
add
or
lret
mov
mov
stc
sbb
pushf
pop
dec
adc
jmp
or
aaa
dec
pop
pop
mov
int3
aaa
popf
pop
jg
scas
jmp
xor
pusha
pop
push
pop
data16
mov
mov
mov
mov
and
pop
roll
in
inc
bnd
sbb
inc
xor
lods
push
popf
ljmp
and
into
stos
addl
jle
test
sbbb
adc
not
xchg
mov
std
dec
dec
aas
jmp
dec
es
pop
ljmp
push
cld
imul
add
adc
sbb
jg
outsl
inc
out
jge
int3
in
lret
push
pop
int3
adc
dec
dec
fiaddl
int3
or
adc
jge
push
sbb
daa
addr16
call
lea
mov
jmp
mov
in
xchg
leave
sub
lock
lds
sub
sbb
push
lcall
das
hlt
pop
js
jno
in
jb
mov
lahf
jp
aas
cld
pop
sbb
mov
hlt
aaa
jmp
fisttps
imul
xchg
push
jnp
xor
ja
mov
lea
sub
cmc
xchg
sbb
out
sarl
mov
lock
dec
outsl
inc
lds
pop
mov
cmp
stos
cmp
or
decb
sbb
or
sub
lahf
jle
repnz
divl
jmp
push
hlt
add
std
outsb
xchg
pop
mov
out
lret
lods
jbe
out
stc
pop
or
arpl
xchg
cld
jmp
or
lea
adc
xchg
out
adc
enter
push
xchg
data16
iret
imul
mov
dec
xor
xchg
push
push
sub
pop
stos
inc
ja
scas
dec
loopne
pop
aam
jb
dec
jbe
inc
lret
int
data16
sub
inc
dec
gs
xchg
add
and
xchg
sahf
mov
aam
jmp
jge
pop
inc
xor
mov
add
lahf
xchg
iret
aaa
lods
and
add
in
sbb
pusha
add
xor
sbb
adc
sub
mov
ret
xchg
in
out
add
xchg
mov
pop
cld
lcall
sub
fdivrl
mov
aas
decb
inc
pop
xor
mov
out
pop
push
mov
jge
push
stc
imul
lods
cmc
insl
cmp
pop
test
cmp
sub
lahf
mov
rcrb
sti
int
mov
mov
add
aaa
sub
mov
xor
iret
lods
mov
jl
or
imul
stos
jp
es
mov
sub
add
mov
lds
dec
jp
cmp
int3
push
xchg
stos
mov
xor
lcall
fsubrs
xor
jae
hlt
mov
pushf
add
daa
movsl
ds
adc
push
std
jmp
shr
cmp
js
sub
add
mov
xchg
inc
pop
adc
popf
sbb
adc
adc
xchg
lea
aaa
daa
and
or
sbb
sub
mov
sub
popf
xchg
imulb
dec
fimull
dec
cmp
push
test
push
int
sti
movsl
scas
or
push
clc
xor
cmp
pop
mov
aad
lret
decb
or
movd
stos
and
lcall
sti
imul
mov
loope
cmp
xchg
sub
test
dec
and
inc
orb
stc
popa
jg
ja
decb
adc
adc
cmp
icebp
inc
push
lret
jl
inc
imul
jg
mov
out
jecxz,pt
jb
fldcw
test
cli
push
imul
mov
adc
mov
das
aam
pop
test
jne
repnz
bound
je
stos
jle
push
pop
mov
xchg
jmp
bound
movsl
fs
push
fs
or
scas
mov
adc
mov
mov
add
jo
or
in
aaa
sub
cmp
repnz
ret
and
xchg
ds
popf
push
incb
cs
incb
add
inc
pop
jae
pop
les
out
ret
psubsb
adc
jns
fidivrl
add
int3
and
cmp
and
jne
pop
je
dec
negl
and
repnz
int3
sub
add
adc
and
mov
pop
fisubl
hlt
lcall
fs
loope
cmc
add
jmp
in
lock
sahf
sub
mov
or
mov
lods
insl
mov
xchg
jno
int3
pop
sahf
scas
mov
jg
adc
sub
paddq
xchg
add
int3
mov
iret
std
adc
jp
push
cmp
lock
scas
mov
jo
stos
fidivl
cli
push
loop
insb
stc
inc
push
pushf
in
cmc
xor
add
mov
mov
out
xchg
xor
pmaddwd
jnp
xor
sbb
jle
je
testl
inc
daa
ljmp
mov
xlat
ret
cmp
incb
or
cs
mov
and
popa
insb
and
in
adc
xchg
arpl
and
mov
mov
lcall
jle
test
mov
inc
sbb
pop
inc
or
xor
int3
add
cld
adc
test
js
pop
pop
inc
xchg
rcll
or
decb
mov
data16
shlb
xchg
cmp
out
mov
xchg
pop
and
cli
mov
mov
cli
pshufw
es
mov
out
mov
dec
ss
aas
mov
jle
rolb
jns
call
inc
sbb
mov
lods
sbb
or
jns
andb
ljmpw
int3
xchg
arpl
push
cmp
pushf
adc
test
out
jbe
std
inc
mov
fwait
push
mov
jns
popa
js
or
push
push
dec
insb
push
or
addr16
pushl
jg
inc
or
data16
stos
in
inc
aad
in
adc
nop
cmp
cmp
sahf
or
out
push
mov
mov
add
cmp
mov
add
test
shrb
push
and
mov
into
leave
jmp
movsb
push
ret
in
jo
xor
pop
popf
std
lock
int3
push
insb
push
inc
fcmove
mov
in
aad
xchg
scas
daa
lds
mov
pop
pop
push
and
jno
lret
bound
add
or
dec
xchg
jle
cmp
das
out
call
pop
lahf
push
xor
mov
adc
iret
inc
cmp
movsl
leave
fwait
inc
test
cmpsb
lods
inc
jle
pop
popf
inc
roll
add
clc
xchg
mov
testb
ss
pop
add
mov
cltd
cld
xor
sub
notl
nop
cld
pop
push
in
mov
xchg
jne
int3
sbb
mov
mov
sbb
das
scas
cmp
fisttpll
mov
ds
adc
add
jo
popl
pop
cld
mov
pop
mov
cmp
sbb
add
lods
int3
xchg
ja
int
test
dec
decb
jp
inc
mov
xchg
lods
or
fistl
imul
dec
pop
sbb
mov
mov
int
out
in
dec
insb
mov
sub
fldenv
sbb
out
sarb
xor
sbb
or
incb
adc
imul
sti
or
enter
push
hlt
sub
scas
xor
push
cli
inc
std
lods
add
int3
out
shrl
xchg
stc
and
cmp
xor
xorl
roll
pushf
cs
in
idiv
and
es
lds
push
or
add
xchg
sbb
inc
jp
cmpsb
mov
push
cltd
cmp
pop
stc
cmp
scas
sub
mov
fwait
jnp
mov
and
mov
mov
mov
mov
adc
or
test
js
adc
pop
out
sbb
sub
cmc
pusha
mov
mov
push
cld
mov
jae
lret
mov
adcb
inc
mov
sub
dec
in
pop
iret
movsl
in
call
dec
adc
out
jb
rorl
add
jo
push
sbb
nop
inc
adc
or
jecxz
dec
test
mov
jmp
rcrl
mov
hlt
pop
pop
addr16
pop
daa
push
add
pop
shr
movsl
cmpsb
leave
mov
outsl
push
fstpl
push
in
es
jl
cld
out
cltd
sbb
bnd
imul
mov
mov
add
mov
out
add
mov
sub
lock
or
xchg
adc
mov
or
insl
dec
negb
in
mov
mov
lods
and
adc
daa
mov
enter
ret
or
mov
mov
das
xchg
xchg
int
sub
in
outsb
fisubrs
in
test
or
inc
mov
inc
aad
orb
pop
mov
push
aas
and
sbb
dec
std
mov
xchg
jns
jle
loopne
dec
fnsave
popa
les
inc
loope
adc
notl
imul
fcmovnb
mov
jae
cmp
mov
pop
enter
mov
or
mov
jl
cltd
stos
fisttps
lds
leave
jg
inc
fdivrl
pop
shl
add
call
mov
enter
fimull
outsl
inc
ss
jecxz
data16
ljmp
and
mov
sar
sub
sbb
notb
loope
lods
dec
add
ja
push
sbb
cmp
fistps
mov
xchg
adcl
dec
imul
mov
sbb
inc
dec
stos
sub
xchg
scas
int
jge
jl
cmpl
jb
xchg
push
or
and
sub
popf
js
cmp
insb
nop
in
into
ftst
repz
inc
add
jne
dec
sub
rcll
push
and
pop
push
cmp
sub
inc
jmp
aas
andl
sahf
loop
mov
jl
cmp
sub
int3
std
jae
xor
xor
pop
aas
faddl
ljmp
paddw
dec
cs
xor
sub
imul
icebp
mov
mov
pop
jno
or
or
adc
mov
push
xchg
cli
sub
hlt
movsb
cli
ret
addl
jmp
int3
mov
cmpl
sub
into
clc
rclb
cltd
dec
sub
or
nop
jo
adc
push
sub
inc
pop
fidivl
lock
fsubrl
mov
das
or
push
sbb
mov
mov
leave
mov
fdivrp
xor
fistl
mov
mov
sbb
inc
decb
daa
push
mov
mov
push
pop
adc
idiv
arpl
movsl
mov
xor
out
mov
fldenv
shlb
aam
test
aas
test
add
cmpsb
lret
ljmp
and
add
push
xlat
lret
push
imul
push
jmp
and
ds
xchg
mov
aas
adc
inc
inc
mov
insl
hlt
mov
sbb
add
adc
xchg
out
mov
jns
pop
aas
cmp
loope
test
pop
cli
adc
test
aaa
or
push
arpl
pop
incl
fnsave
jecxz
push
dec
dec
decb
sbb
imul
push
decb
lcall
pop
or
and
aam
std
int3
test
bound
add
push
mov
jl
inc
scas
adc
dec
ret
or
stos
into
inc
movsl
push
test
push
lock
call
cmpsl
inc
orb
fs
pop
dec
js
int3
jns
cs
lock
cmpsl
sub
aas
push
iret
in
jbe
jmp
das
adc
loopne
out
jg
mov
add
or
xor
scas
xor
das
or
mov
dec
sub
inc
cs
cltd
and
popf
mov
or
fwait
sbb
imul
jp
push
push
and
sub
xchg
xchg
in
mov
jnp
imul
cwtl
rcl
add
push
and
int3
sbb
xchg
and
cmp
adc
jb
stos
push
mov
fcoml
mov
into
das
es
ret
ja
inc
fs
or
jp
decb
jbe
mov
mov
add
rcrb
lret
movsb
add
push
les
add
icebp
mov
ret
cmc
add
in
subl
cmpsb
mov
add
xor
movsb
data16
jg
in
dec
icebp
mul
mov
lcall
ja
push
daa
mov
pop
push
pop
incb
cmp
jae
lcall
sahf
aam
stos
loope
int
xchg
inc
cmpsl
and
sub
aas
add
or
pop
pusha
pop
inc
sub
pop
sbb
mov
outsl
shrb
xor
jne
xchg
mov
mov
mov
adc
jb
mov
sbb
cld
dec
push
mov
fwait
ret
imul
or
out
popa
lcall
or
jg
dec
pop
fdivp
scas
lret
clc
repz
pop
out
add
pop
mov
aad
cmp
leave
sbb
inc
es
inc
shr
mov
negl
ja
jmp
in
add
or
lahf
jp
outsb
mov
or
push
xchg
xor
scas
cmpsl
xor
fisttpll
jb
dec
ds
sub
daa
in
pop
incb
push
adc
cmpl
jb
mov
mov
mov
out
xor
lds
mov
or
inc
sub
addr16
xchg
popf
test
jge
int3
dec
push
mov
adc
mov
sub
decb
mov
es
mov
push
mov
sti
push
orb
pop
xchg
push
jns
jnp
imul
stc
inc
lcall
sub
add
in
or
lock
cmp
mov
add
or
fisttpll
lret
cltd
leave
dec
dec
jge
popf
lcall
stc
fidivs
popf
jmp
icebp
and
into
jmp
sub
sub
lock
fwait
mov
adc
push
sti
ret
jecxz
incb
cltd
mov
sbb
pop
pop
int3
out
cli
add
or
adc
mov
inc
xchg
sbb
iret
int
andl
ret
mov
add
ret
sub
jmp
xchg
test
push
ret
inc
in
cld
filds
mov
imul
loope
jb
stos
cmpsl
decb
ss
sbb
jmp
lods
xchg
incl
mov
shr
jns
jno
mov
dec
sbb
sub
inc
int3
push
mov
jecxz
jg
or
mov
and
add
and
push
incb
mov
xchg
dec
pushf
enter
nop
outsb
sub
rorl
pop
das
xor
sar
divl
shr
jl
xchg
pop
mov
outsl
insb
scas
fists
cmp
mov
adc
mov
cmpsb
roll
inc
jge
call
daa
pop
jge
out
cmpsl
repz
mov
leave
fisttps
cli
es
sub
inc
xchg
pushf
out
sbb
lret
js
incb
dec
xchg
test
movsl
push
inc
adc
test
popa
pop
sbb
push
test
dec
lret
cmp
lcall
loopne
test
adc
lds
mov
icebp
or
cltd
and
sbb
push
dec
fldenv
inc
in
pop
xor
push
es
jne
fs
fbld
int3
imul
pusha
and
and
test
sbb
sub
lea
es
xchg
mov
push
ret
mov
addr16
sbb
stos
js
jmp
cmpb
xchg
xchg
xchg
sahf
sbb
in
mov
add
mov
vpmacsdqh
stos
mov
push
sbb
jo
xchg
scas
movsl
push
push
sub
aas
repz
push
mov
xchg
jno
and
xchg
imul
jb
push
mov
cmpsb
push
mov
pop
xchg
lods
int
lea
int3
pop
cmpxchg
jecxz
mov
mov
mov
jo
cmp
clc
out
in
rcll
jge
cmp
lcall
addr16
and
out
or
mov
lods
shrl
dec
cmp
test
jge
dec
cwtl
pop
pop
add
sbb
fiaddl
mov
push
dec
dec
jecxz
leave
pushf
mov
rclb
fimull
mov
in
aas
outsl
pop
adc
dec
push
neg
movsl
cwtl
mov
cs
add
popf
cmpsl
push
dec
pop
cmp
out
lock
or
stos
adc
in
ds
inc
inc
jecxz
cld
jno
daa
push
pop
pop
jle,pn
mov
roll
das
ljmp
mov
les
mov
fadds
subl
ss
xchg
imul
sub
sub
pop
pop
mov
loopne
out
jnp
inc
outsb
lods
and
xchg
inc
xor
sbb
daa
and
and
popf
add
adc
adc
xor
fdivrp
enter
adc
fdivr
sarb
roll
outsl
dec
sahf
xorb
cmp
add
mov
sbb
jns
adc
mov
imul
and
fisubs
fcmovnb
jg
mov
shlb
adc
sbb
cwtl
adc
mov
roll
xchg
repnz
jp
mov
outsl
sahf
add
jmp
divl
inc
in
inc
push
sbb
into
scas
sub
jbe
fs
cmpsb
push
pop
mov
in
cld
loope
ss
jnp
cltd
mov
nop
inc
push
add
in
jae
fwait
or
jne
int3
cmp
xorl
scas
cltd
cld
and
mov
cmpsb
jecxz
sarl
aad
mov
or
lods
pop
lret
mov
add
pop
sbb
mov
aam
int3
push
mov
rcrl
push
ljmp
nop
add
dec
inc
orl
imul
dec
ljmp
add
add
shll
cmpsb
ja
imul
inc
xor
push
xchg
out
mov
pusha
mov
pop
jb
push
adc
push
in
outsb
xchg
mulb
mov
pushf
in
sbb
xlat
sahf
jg
incb
adc
xchg
incb
jl
aaa
stos
sub
mov
cmp
mov
mov
js
divb
in
jne
xchg
cltd
lea
dec
sbb
decb
cwtl
mulb
int3
sbb
dec
xchg
sahf
sub
js
mov
xor
and
lret
shrb
xchg
fisubrs
jne
xchg
imul
push
test
and
pop
pop
mov
xchg
test
fldl
repz
sbb
decb
xor
xor
mov
sar
dec
out
ret
bound
inc
int
mov
xor
lock
stos
ja
jmp
out
push
sbb
lods
xchg
into
mov
rcl
inc
jne
dec
xchg
sbb
movsl
cmp
dec
popa
adc
jl
xchg
push
decb
sub
inc
andl
lods
data16
dec
push
dec
fadds
cmp
je
mov
ficoml
push
push
popf
xor
inc
movsl
mov
out
inc
adc
cmp
mov
int
insb
lcall
popf
sub
into
jns
cmp
and
fistps
and
in
and
lea
mov
daa
repz
cmpsb
repnz
push
sti
or
adc
adc
decb
popf
and
pop
sub
decb
cwtl
clc
push
sub
test
in
mov
cwtl
lods
mov
cld
ljmp
in
adc
out
aas
push
add
sarb
sbb
cwtl
cs
loope
inc
mov
inc
lret
ljmp
rclb
call
jl
push
in
sub
fs
aas
jge
inc
imulb
fstps
fimull
mov
cmp
fs
mov
test
int3
cmp
inc
dec
mov
mov
sbb
inc
xor
jmp
sbb
sbb
mov
pop
and
pop
rcr
rclb
out
or
sbb
fidivl
ds
and
adc
cmp
cmp
or
adc
push
sbb
js
push
mulb
jle
inc
shll
insb
insb
or
push
sub
dec
mov
add
outsl
sub
mov
std
push
jo
cmpsl
test
dec
push
jp
adc
xor
mov
cld
pop
jp
sub
or
pop
adc
imul
dec
sahf
int3
rcll
adc
dec
push
mov
mov
jmp
repz
xchg
lahf
mov
xchg
leave
inc
adc
push
lea
inc
insl
scas
idiv
pop
push
push
add
sbb
cld
lods
sahf
into
cmp
loopne
jns,pt
or
push
sbb
sbb
and
xchg
ds
xor
out
mov
mov
enter
je
icebp
andb
sbb
push
mov
test
js
xor
mov
mov
mov
mull
mov
lret
xchg
xor
sub
decl
test
push
ljmp
mov
adc
out
xchg
popf
or
pop
pop
and
pop
pop
loop
enter
cld
sbb
mov
cmp
xchg
sbb
add
sub
fstps
jo
or
cli
push
inc
jmp
sub
add
and
mov
mov
mov
gs
adc
mov
daa
cmp
decb
aas
mov
mov
pop
outsb
int
cmp
xor
fcmovbe
mov
inc
not
lds
dec
xor
mov
fistpl
inc
mov
int
inc
dec
jo
popf
outsb
lret
ret
pop
and
xchg
fmull
les
lods
fnsave
imul
sahf
sbbl
fcomp
ljmp
cltd
out
and
jmp
add
pop
xchg
xchg
pop
push
lcall
inc
jns
dec
mov
push
cmpb
imul
cld
lcall
jp
ret
lret
or
dec
cmp
jge
decb
cmp
sub
pop
lea
aaa
decb
and
sbb
shrb
xchg
sbb
xchg
push
or
imul
sbb
cmc
loope
dec
xchg
sbb
jbe
int
add
jnp
stc
call
sbb
int3
je
lea
add
jae
int
rcr
lods
add
sbb
inc
mov
cmpsl
and
and
add
dec
iret
sub
sub
xor
rolb
cmp
push
mov
out
mov
ss
loope
ds
sbb
inc
xchg
hlt
incb
cltd
in
clc
push
jbe
shlb
in
sub
pop
cli
xor
xchg
or
lds
fnstsw
push
fwait
xchg
mov
push
add
xchg
repnz
and
ficoms
ret
adc
lret
push
jecxz
ljmp
decl
mov
or
adc
inc
movsl
push
xchg
push
xchg
and
gs
jno
jp
push
dec
mov
clc
mov
xchg
push
popa
popf
aaa
and
xor
shll
in
cli
dec
jp
or
out
cmp
sti
push
mov
adc
adc
stos
xchg
sbb
sub
xchg
div
xchg
or
push
sbb
mov
mov
fs
fidivrl
xor
and
dec
inc
add
jl
aaa
or
pop
scas
or
incl
and
fisttpl
adc
cld
dec
xor
popf
outsl
inc
lods
pop
pop
mov
jge
in
stos
lahf
jb
loope
int
jns
and
inc
mov
fmulp
sti
cmpsl
cmp
or
test
das
out
push
lds
insl
scas
or
push
pop
inc
fmull
or
and
pushf
clc
lcall
dec
mov
call
push
loope
dec
cmpsb
inc
shlb
xlat
cmp
nop
mov
mov
sti
int
lahf
addr16
cmp
mov
jne
aam
sub
icebp
add
addl
scas
jno
arpl
call
lcall
push
jnp
int3
push
add
sahf
repz
push
fiadds
mov
push
fwait
dec
pop
ja
das
add
outsb
call
xor
rcl
std
cmpsb
enter
adc
pop
dec
es
je
push
ret
leave
xor
test
incb
xor
scas
mov
mov
insb
dec
push
dec
popf
lcall
mov
add
loopne
dec
jle
nop
jge
push
pop
mov
push
insb
cld
test
sub
inc
and
repz
stos
xor
mov
shl
mov
and
int3
push
xorps
mov
orb
pop
repz
or
add
dec
aad
xchg
fstps
push
dec
or
test
stc
in
repnz
or
sbb
jle
mov
sbb
adc
xchg
gs
push
mov
in
fisttpl
lock
xchg
mov
lret
cltd
mov
inc
loope
lea
mov
and
push
push
lods
bound
inc
int3
push
jp
inc
ret
in
sti
cmp
aas
push
bound
inc
inc
sbbb
jno
ret
aas
push
xor
jp
es
cld
dec
or
mov
pusha
int
lods
insl
xchg
decb
ror
iret
adc
mov
sub
sbb
sub
mov
or
dec
negl
dec
pop
imul
bound
sub
int3
ret
rcll
pop
insl
hlt
mov
sub
insb
jns
jge
pop
iret
cmpb
stos
es
xor
rcr
movsl
cld
fwait
out
in
xchg
dec
pushf
add
sbb
mov
sub
jne
adc
inc
xor
lds
sar
push
or
inc
lods
lods
adc
pop
ja
repz
jp
xlat
xchg
enter
scas
mov
cwtl
arpl
sahf
pop
popa
mov
outsl
std
scas
fisttpl
cmp
inc
repz
ss
frstpm(287
adc
aaa
into
cmpsl
loopne
jae
mov
sbb
aaa
pop
in
mov
es
cmc
add
fsubr
sub
in
mov
mov
push
cmpsb
ss
ret
subl
sub
jmp
int3
push
insl
cmp
lea
pop
jno
jmp
mov
std
je
decb
dec
xchg
cmc
in
ja
jb
inc
and
icebp
push
push
in
adc
mov
push
xor
pop
dec
test
iret
mov
fwait
inc
mov
xor
mov
xchg
inc
es
lret
pushf
bound
mov
int3
fistps
pop
mov
dec
jp
ja
mov
sar
or
add
xlat
cli
jmp
jle
adc
xorl
mov
aaa
add
mov
fnstsw
scas
dec
out
and
cld
xchg
cmp
fstl
xor
fstl
xor
sub
xchg
cmp
and
add
xchg
sub
loope
loopne
jb
cld
sbb
pop
ja
pop
pop
mov
aad
addl
sbb
xchg
dec
cmp
lahf
adc
test
mov
push
mov
adc
ret
fisttpl
xchg
cmp
inc
add
out
xchg
arpl
adc
or
inc
cmp
cmpsb
mov
add
dec
insl
or
push
aad
xor
cmp
icebp
inc
aam
inc
add
jge
in
mov
das
adc
mov
adc
or
xor
dec
bound
test
outsl
fnstenv
inc
or
in
push
push
jo
sbb
idiv
cs
pop
mov
aas
sbb
adc
add
pop
adc
push
or
xchg
outsl
stos
pop
xchg
adc
pushf
clc
jae
imul
add
or
lods
pop
dec
and
xor
test
je
std
push
jno
fisttpl
jl
repz
aam
or
das
inc
int
loope
aas
jecxz
lods
push
cmpsl
jmp
pop
inc
mov
xor
xchg
push
cmpsb
lea
inc
inc
jmp
incb
outsl
jno
dec
cltd
xchg
and
xchg
cmp
icebp
fidivrs
idiv
xlat
loopne
loope
push
das
xor
decb
outsb
ret
jmp
pop
pop
mov
loope
mov
add
push
std
sub
data16
subb
add
add
cmp
lock
ret
stos
adcb
cmpsb
out
xchg
add
pop
cld
push
dec
icebp
push
nop
push
scas
add
xchg
decl
push
inc
pop
jg
push
imul
aaa
inc
jnp
fisubs
mov
cmovns
cmp
ljmp
pop
fadds
mov
xchg
push
pop
test
xchg
aas
out
fdivr
mov
es
mov
pop
in
pop
cmp
cwtl
decl
insl
ljmp
cmc
loope
cs
lds
es
in
push
outsl
sbb
push
dec
outsb
fisttpl
test
cmp
xchg
cwtl
movsl
push
stos
pop
sbbb
and
add
add
inc
out
xchg
xchg
inc
xchg
movsl
xchg
stos
rolb
fsin
test
adc
out
sbb
lods
sbb
fists
adc
aas
dec
xchg
and
fwait
je
push
add
pop
iret
js
add
or
aaa
incb
xchg
cmp
push
mov
dec
int
inc
movsl
xor
mov
inc
out
shll
pop
movsb
push
push
jp
or
sbb
cld
notb
and
jbe
cmp
ret
cmp
dec
adc
xor
js
mov
mov
movhps
int3
push
sub
es
push
jbe
xchg
pop
cmc
inc
rolb
nop
ret
out
jl
push
mov
imul
dec
scas
pop
aad
xor
decb
repz
xchg
orl
cmpsl
js
mov
cmp
push
sub
mov
fwait
adc
lods
gs
stos
push
pop
fcoms
iret
fs
jb
aad
lea
pop
xlat
call
or
pop
int3
sbb
add
sub
add
dec
int3
mov
jge
in
mov
ret
leave
decb
pop
or
loope
es
pop
adc
adc
push
xchg
inc
jnp
push
stos
insb
jg
sbb
lret
cltd
add
out
xchg
push
add
incb
adc
lret
xchg
dec
xchg
pop
lea
mov
scas
jns
sbb
es
mov
xchg
cld
das
les
adcl
mov
lret
xchg
push
in
dec
mov
lods
mov
inc
ror
sbb
dec
dec
push
add
gs
add
inc
stos
int3
out
movsb
pop
ret
std
mov
mov
cmpsb
mov
imul
ljmp
cmpsl
mov
andb
out
shrl
adc
jb
xor
jge
push
fmulp
cmp
cmp
data16
add
ljmp
nop
mov
sbb
shrb
decb
dec
push
aad
out
js,pn
mov
out
cmp
mov
cmp
jno
inc
loopne
and
int3
arpl
jo
xchg
frstor
aam
mov
ss
in
nop
inc
fcmovne
fisttps
stos
incb
sub
paddusb
call
mov
adc
inc
push
insl
stos
and
push
push
push
mov
cmp
sbb
das
mov
inc
out
fisttps
addr16
std
jo
xchg
xor
int
sub
adc
push
stos
in
rorl
movsl
sub
cmp
mov
sub
dec
xchg
outsb
lcall
daa
imul
pop
sub
inc
mov
pop
je
stos
xor
adc
paddsw
adc
xlat
sahf
out
inc
lea
out
aas
insl
adc
lods
pop
int3
mov
es
mov
in
cltd
jecxz
dec
mov
call
xor
divl
insb
inc
add
sbb
pop
inc
jno
call
sub
sahf
jmp
mov
xlat
mov
outsb
pop
rolb
lock
decb
mov
xchg
fcoml
cmp
pop
and
cmpsl
lods
sbb
sbb
dec
adc
push
jae
movsb
mov
outsl
xor
inc
mov
mov
pop
pop
mov
push
sbb
xchg
mov
mov
sub
jp
es
dec
mov
push
in
sub
aas
push
lds
cmpsl
aas
stos
dec
mov
xor
or
add
xor
cmp
xchg
aad
cmp
ja
mov
fwait
mov
rclb
xchg
add
cmp
imull
mov
jne
imul
stos
push
incb
xchg
and
or
popf
outsb
add
ljmp
daa
test
pop
add
iret
in
fisttps
cmpsb
arpl
mov
cld
or
stc
jmp
pushf
mov
and
dec
ja
loopne
jne
mov
loop
push
iret
lock
xor
inc
dec
sub
vmovaps
pop
dec
in
or
int3
in
push
popa
incl
mov
pop
nop
pop
adc
dec
inc
sahf
push
xchg
xor
jg
cwtl
fadds
addl
sub
jae
and
lea
in
dec
jno
push
xor
inc
xchg
push
adc
lock
mov
icebp
sbb
mov
push
data16
cmp
shlb
mov
adc
inc
js
inc
xchg
xlat
je
fwait
or
orb
test
dec
notb
lret
hlt
xor
xchg
mov
bound
dec
or
pop
dec
sub
jns
adc
sub
add
fnstcw
mov
bound
add
mov
jbe
jns
es
xor
xlat
sub
ljmp
push
cmp
sahf
or
and
inc
aas
in
loopne
scas
ss
mov
push
mov
pushf
sti
insl
daa
dec
jnp
add
inc
aas
in
sub
decl
stos
jle
daa
mov
mov
shrb
ds
mov
or
push
dec
add
fxch
jecxz
pop
inc
jnp
in
push
and
cmpsb
inc
mov
lock
pop
push
call
jns
adc
jno
decb
vmovupd
xchg
outsb
push
xor
pop
subl
push
fs
and
adcb
cmp
out
adc
mov
xlat
popa
pop
xchg
and
test
push
xchg
repz
xchg
das
jmp
pop
jecxz
xchg
bound
add
out
cli
int3
cmp
sbb
push
ss
push
mov
or
xor
and
mov
bound
in
xchg
fidivs
or
fld
push
mov
pop
pop
outsl
lret
dec
adc
dec
or
push
cltd
inc
stc
or
jmp
and
inc
hlt
cmp
aam
adc
or
fimull
out
clc
lret
push
sahf
fidivrs
mov
inc
or
push
adc
dec
mov
in
jle
mov
sbb
or
movsl
pop
nop
push
and
add
ret
mov
mov
cli
xlat
jbe
or
xor
jo
adc
pop
adc
jno
dec
je
sub
lock
cmc
mov
in
rclb
dec
lret
scas
arpl
xor
dec
add
pop
xchg
and
xchg
decb
push
mov
cwtl
adc
pusha
or
push
lcall
cmp
pop
daa
add
loope
and
ss
push
nop
lret
outsb
aaa
fsubs
int3
fistl
dec
or
xchg
mov
pop
aaa
sbb
push
test
pushl
in
or
loopne
add
dec
and
repz
push
lret
movhlps
xor
shll
jno
pop
adc
and
js
fnstsw
enter
cmp
bound
or
adc
xor
mov
pop
xchg
and
jmp
mov
pop
cwtl
mov
lock
xchg
nop
dec
shlb
testb
add
sbb
ja
movsl
sbb
sub
orl
js
cmp
cld
mov
adc
mov
mov
fisubl
scas
add
sbb
xchg
dec
fsts
cmp
lea
jae
xor
push
cltd
fwait
test
mov
sub
decb
or
jg
int
xchg
bswap
cwtl
lds
sbb
adc
mov
push
leave
repnz
mov
or
push
jge
dec
outsb
cmp
jo
xor
cmpl
jle
sub
jle
imul
ds
lahf
cmp
sahf
loop
xchg
cmc
jnp
ljmp
cmpl
repnz
mov
mov
dec
stc
scas
out
std
in
inc
in
out
cmp
std
sub
or
inc
pmullw
mov
inc
enter
in
and
mov
decb
inc
insb
inc
and
aad
sar
test
mov
push
mov
sbb
adc
test
in
adc
and
lahf
ret
stos
mov
xchg
mov
or
mov
or
scas
push
movsl
test
mulb
in
ss
mov
sbb
insl
adc
out
icebp
adc
mov
in
insl
popa
sbb
add
outsb
or
or
dec
movsl
sub
sbb
cld
mov
push
int3
pop
fisubrl
int3
xor
imul
pop
cmp
adc
sub
adc
push
and
je
dec
dec
pusha
jae
imul
ljmp
push
out
lahf
mov
sbb
stos
in
and
in
cmp
xchg
in
sbbb
inc
scas
jge
xchg
mov
sbb
push
sub
lahf
in
pop
sub
inc
movl
or
bound
and
pop
sahf
in
icebp
fnstenv
xchg
mov
cltd
fistpl
xchg
dec
outsb
cs
lret
lcall
hlt
inc
inc
xchg
adc
popl
repnz
stos
subb
cld
arpl
dec
pop
cmp
cli
aaa
dec
fcomi
add
dec
xlat
push
inc
mov
movsb
decb
xor
leave
cmp
xor
adc
mov
pushf
cld
daa
das
jnp
xrelease
lahf
cmpsl
out
jbe
xchg
mov
shrl
xor
popf
ror
lret
push
mov
cmp
pop
pop
outsl
and
xchg
mov
hlt
gs
sub
flds
mov
daa
jle
ljmp
xchg
pop
out
xor
sbb
addr16
mov
ffreep
dec
scas
xor
mov
lea
pop
in
xor
push
mov
lcall
sbb
xchg
arpl
or
dec
data16
pop
int3
call
jge
sbbb
decb
dec
lret
and
mov
ja
adc
je
fiadds
in
out
out
jbe
jmp
iret
mov
pop
sahf
incb
add
loope
icebp
test
sub
lret
hlt
loop
add
pusha
lea
adc
cmp
dec
mov
cmp
xchg
in
push
jl
hlt
nop
test
hlt
push
sub
and
sbb
in
inc
xor
dec
xchg
jle
loope
cmp
and
jecxz
jns
lahf
adc
movsl
imul
in
mov
cmpsl
or
push
rclb
xor
mov
dec
fnsave
or
lea
pushf
out
ret
sub
roll
repz
sahf
cmc
iret
scas
jbe
arpl
adc
sysenter
mov
sti
xchg
jmp
fsin
jb
xor
call
out
lods
mov
inc
cmp
pop
test
fimull
jo
out
popa
push
in
imul
mov
add
cmp
xchg
daa
sub
push
int3
jmp
and
lcall
int
loopne
inc
mov
lods
fadd
arpl
in
inc
push
lock
ljmp
and
adc
jae
mov
or
sub
cmpsl
push
push
daa
repz
xchg
sbb
push
in
bswap
loop
fld
xorb
mov
jno
sahf
popa
sub
in
cmpsl
test
mov
mov
int3
fidivrl
ud0
call
fs
aad
sub
dec
in
jecxz
in
out
cmp
add
xor
bound
shr
scas
inc
push
movsl
xchg
lods
cmpsb
popf
push
inc
add
lea
test
and
adc
arpl
add
cmp
pop
out
adc
xor
loopne
sbb
sbb
je
decb
leave
adc
sbb
lea
decb
sbbl
sub
push
cmpsl
pushf
pop
fs
lea
mov
push
fbld
daa
pop
fisubrs
mov
loopne
stos
in
push
pop
inc
add
push
sbb
pop
insb
lods
adc
lods
push
xor
fisubrl
dec
push
jmp
pop
out
cld
xor
xchg
or
sub
add
lcall
clc
sti
lods
mov
mov
daa
mov
je
sub
or
mov
aaa
orb
stos
cmp
xchg
adcl
cld
fisttps
sti
mov
popa
and
sub
lahf
lds
jns
fists
sbb
cltd
xor
movsb
adc
mov
addb
jmp
decb
mov
pop
inc
fwait
es
ja
jne
in
cs
cmpsl
outsl
outsb
fldenv
scas
nop
rep
jb
xchg
sbb
xchg
shl
sub
imul
clc
mov
cmc
ds
mov
int3
hlt
or
cli
mov
mov
gs
decb
dec
sub
je
rcll
inc
push
in
aam
mov
lret
roll
loopne
leave
sub
jp
cltd
xor
cmpsb
fdivrl
mov
inc
in
decb
loopnew
je
imul
adc
lret
mov
stos
adcl
cmp
addb
pop
or
data16
push
mov
cld
shll
mov
mull
pop
pop
sub
add
std
cmpsl
pop
hlt
fcoml
pop
jno
add
shll
addr16
sbb
xchg
xchg
ss
lea
lods
loop
pop
pop
jge
jne
in
in
mov
sub
inc
mov
push
fildll
cmp
push
inc
negb
push
vandps
adc
sahf
in
out
fsubs
stos
push
sub
packuswb
push
jne
mov
pop
mov
sub
clc
dec
fwait
push
push
mull
add
inc
sbb
sahf
movsb
adc
arpl
adc
fnstcw
pop
push
xchg
cs
jmp
ja
cmp
stos
jge
stc
decb
mov
cld
mov
js
sbb
sbb
push
nop
add
sub
push
out
push
mov
cmp
push
outsb
outsl
mov
hlt
int
fwait
subl
sbb
xor
xor
testb
out
mov
add
and
cmp
pop
call
mov
sub
cmp
jle
xchg
lret
cmp
mov
jbe
lock
mov
mov
dec
pop
cmpsb
dec
push
in
or
imul
shrl
cmp
jnp
loopne
in
dec
outsb
push
adc
xchg
and
lods
cmp
add
lods
mov
sbb
or
sub
ds
push
cld
push
jbe
xlat
popa
mov
and
pop
add
cli
in
int
in
xchg
pop
adc
mov
cmp
cld
mov
sbb
popf
sbb
loopne
push
testl
psubsb
adc
mov
and
adc
ja
pop
inc
xor
popa
jo
fstpl
ficoml
jno
in
call
sahf
push
je
fistpl
mov
add
xor
rcll
fildl
push
xlat
sub
xlat
mov
cld
jg
incb
into
pop
xor
decb
sub
push
cmp
mov
add
mov
add
movsl
std
adc
ds
inc
decb
xchg
sbb
movsb
cmp
and
insb
cs
pop
aaa
xor
mov
rclb
jecxz
aad
lods
push
pop
pop
arpl
and
stc
cmp
jno
test
inc
inc
mov
cmp
pop
dec
mov
dec
cmpsb
mov
dec
in
test
jmp
push
jbe
call
mov
pop
rcrb
adc
xor
es
sub
outsb
int
std
mov
dec
mov
and
cmpsb
mov
xchg
je
cmp
test
lods
sbb
push
arpl
iret
fwait
in
nop
incl
mov
push
test
fcomi
mov
cmp
fisttpll
sbb
ds
int3
xor
test
xchg
stos
cltd
or
lret
dec
sbb
in
data16
mov
pop
sti
jl
cmp
daa
mov
inc
es
xor
add
mov
push
add
xchg
fnstsw
jnp
xchg
and
mov
les
inc
scas
call
dec
push
jno
lods
jg
jecxz
ficoms
and
adc
mov
push
in
js
outsl
lahf
push
sarb
je
dec
test
pop
pop
jle
ljmp
push
and
cmp
sub
sub
mov
or
in
aas
movsl
and
xor
and
call
repnz
mov
mov
xor
movsl
in
pop
sub
xchg
rorb
xchg
int3
and
cltd
jmp
sub
pushf
fisubs
push
js
aam
stos
sbb
mov
repnz
mov
push
pop
popf
push
dec
dec
jb
pop
xchg
xchg
jo
mov
mov
cwtl
je
push
or
clc
fucom
pop
xchg
push
andb
adc
xchg
ss
test
imul
lcall
jbe
push
fisttpll
rcll
xor
mov
pop
lahf
and
outsl
pop
mov
adc
cmp
test
dec
push
leave
lea
jae
movsl
pop
mov
icebp
nop
xor
xchg
push
jne
mov
stos
jecxz
pop
cltd
std
shll
push
jle
mov
aad
mov
mov
aas
mov
sub
cmpsl
xor
lret
cwtl
and
adc
inc
shll
jp
jo
inc
iret
mov
lods
pop
pop
enter
mov
filds
xchg
pushf
cwtl
inc
sub
stos
lret
sti
loopne
xchg
fucom
decb
ffree
icebp
rcrl
push
hlt
pop
sub
jns
adc
jae
cmp
fdivr
imul
nop
inc
or
add
sbb
gs
push
xchg
cmp
dec
xor
xor
add
mov
mov
xchg
xor
adc
popf
cmp
out
nop
pop
mov
std
dec
sub
jae
adc
js
pop
adc
sar
iret
push
jmp
cli
dec
add
inc
ret
insl
dec
lods
xchg
aas
es
adc
addr16
push
push
jmp
scas
orl
dec
daa
in
dec
adc
sub
mov
lods
xor
xor
outsl
imul
jno
or
pop
and
out
adc
imul
xchg
sbb
mov
stos
pop
xor
shl
jnp
test
insl
mov
nop
push
fcomps
inc
fdivl
inc
sahf
rorb
push
daa
decb
neg
in
pop
push
fimuls
into
mov
and
lahf
mov
mov
mov
mov
pushf
popa
popf
cltd
inc
push
aas
test
sbb
jne
inc
stos
mov
mov
fs
jmp
incb
cs
incb
adc
pop
js
jg
inc
push
lcall
aas
popf
in
fistpll
js
out
inc
fidivl
dec
faddl
jmp
insl
mov
dec
popf
push
in
decl
lret
jle
and
and
ficoms
lods
inc
xchg
mov
sub
aas
and
fsubs
cmp
test
sbb
sub
imul
xchg
mov
jnp
fsts
mov
lret
incb
iret
es
in
adc
push
aas
lcall
jo
xor
add
add
dec
addb
iret
lret
xchg
dec
sbb
cmp
inc
cltd
dec
xchg
gs
popa
pop
adc
pop
jecxz
cld
idiv
cmp
inc
std
and
xor
pop
sbb
or
or
shrb
out
push
adc
in
ret
mov
pop
shrl
nop
mov
jmp
out
xor
out
or
pop
mov
and
sti
cmp
not
adc
and
mov
dec
fs
fcompp
sbb
jg
je
in
xor
in
lock
jg
jecxz
dec
dec
adc
mov
push
xchg
cs
lahf
sti
aas
mov
pop
xchg
popa
xorb
arpl
sbb
ficoml
adc
in
push
sub
shrl
push
cmp
mov
int3
jge
add
ret
pop
mov
mov
decb
out
xchg
fld
call
int3
and
movl
cli
fs
inc
jns
jns
int3
mov
inc
cmpsb
add
jb
xchg
jnp
inc
das
adc
jno
test
push
gs
cld
adc
xchg
xor
push
jecxz
sbb
fmull
adc
xchg
lcall
es
add
pmaxsw
cltd
mov
aam
ss
outsl
jae
daa
leave
and
mov
test
fidivrl
cmpsb
je
movb
pop
mov
mov
xchg
lods
mov
cmpsl
incb
dec
addr16
aad
test
dec
imul
fnsave
sar
sub
pop
pop
insb
mov
mov
rorb
repz
dec
and
xchg
cmp
cmp
aad
jnp
mov
jo
mov
lods
dec
iret
mov
das
sbb
repnz
stc
sbb
add
or
xchg
and
testl
jl
adc
add
inc
adc
push
lret
outsl
in
mov
jle
mov
adc
mov
dec
inc
xchg
stos
adc
push
push
add
enter
in
push
cltd
xchg
mov
xchg
stos
fidivrl
flds
js
push
loopne
int3
out
push
mov
fldt
xchg
es
test
inc
push
mov
imul
hlt
daa
jecxz
js
movsb
mov
ret
incb
mov
cld
out
and
sub
pusha
movsl
or
sub
in
jae
in
push
cmp
cs
push
mov
fwait
incb
cltd
pcmpeqd
sbb
divl
call
xchg
push
jmp
push
aad
in
jns
in
mov
push
int
nop
notb
inc
hlt
aas
mov
pop
andb
sahf
test
loope
imul
sub
mov
sbb
mov
pop
lock
xchg
movsl
xor
xlat
cmp
mov
rclb
xchg
push
incb
xor
aaa
sub
dec
ja
nop
cmc
push
xchg
andb
stos
cli
mov
or
fcom
ljmp
mov
or
xor
outsb
cmpsl
or
stos
outsl
inc
ret
mov
jg
sub
int3
mov
push
adc
cld
jb
cmp
ds
loopne
mov
outsb
mov
in
xchg
scas
mov
add
repnz
jmp
jb
add
test
cli
decb
xor
and
fcmove
sbb
push
inc
dec
jle
xchg
sbb
dec
aad
lcall
xchg
call
into
add
jmp
imul
sbbl
and
push
iret
jae
into
pop
daa
in
dec
arpl
decb
int3
aad
sbb
add
fwait
xchg
icebp
inc
inc
or
and
adc
or
in
adc
xchg
mov
mov
incb
loopne
and
mov
out
loop
cli
add
imul
test
lods
sub
mov
insb
scas
aam
cld
pop
shr
punpcklwd
sbb
int
decb
and
movsb
in
inc
jmp
incb
pop
push
mov
jnp
nop
int3
movb
fs
cmpsb
sub
in
bnd
xchg
bound
insl
cmp
outsl
mov
push
cmpsb
mov
inc
aad
push
cmp
idiv
outsl
shlb
cld
das
jmp
mov
mov
pop
inc
mov
mov
add
test
cmp
push
cwtl
out
jae
and
cmpsl
adc
test
mov
outsb
rcrb
and
sbb
sub
int
jecxz
hlt
add
jmp
outsb
adc
cmpsb
out
sbb
push
xchg
mov
lea
inc
daa
mov
jno
pop
incl
in
outsb
test
pusha
aam
xor
pop
in
pop
test
cmp
roll
sbb
decb
in
das
sub
jno
cmp
mov
into
fildll
xlat
jne
ljmp
push
into
fs
scas
or
cltd
ss
cmp
mov
fucomip
cmp
sbb
xchg
and
mov
in
jle
or
in
push
adc
imul
or
in
popf
xor
mov
mov
and
lods
in
mov
fiadds
add
inc
push
sub
xor
fcmovne
es
pop
cmp
cs
out
xor
cld
mov
xchg
add
xchg
jg
shrb
decb
les
insl
or
scas
je
lock
decb
inc
in
mov
arpl
mov
adc
dec
cmpsb
dec
stos
and
mov
loope
and
nop
mov
mov
jmp
pop
jns
idiv
scas
int
popa
mov
dec
lahf
and
adc
xchg
rolb
add
and
mov
sub
push
aaa
and
aas
sub
cmp
outsb
mov
cmpsl
jae
sbb
ficoml
jo
scas
ds
movsb
hlt
out
mov
jge
push
stos
jb
ljmp
fcoml
test
sbb
cs
das
test
cltd
inc
into
movsl
lahf
shll
stos
jp
pop
cmp
pop
cmp
lods
cmp
add
lock
xor
cmp
push
repnz
into
incb
pop
adc
inc
or
je
sub
mov
sub
sti
ret
push
in
ds
out
movsb
pop
adc
push
dec
hlt
aad
jmp
pop
add
in
sarb
pop
arpl
aaa
ss
adc
xor
sub
pop
cmpb
dec
mov
or
jp
sub
shrl
imul
xchg
rcll
and
mov
add
mov
fdivl
inc
pop
addl
xor
or
aaa
imul
add
dec
es
cmp
xlat
stos
ficomps
pop
xchg
and
jnp
ds
fnstsw
scas
int3
xchg
out
aas
incl
push
popa
inc
or
inc
adc
jg
mov
pop
xorl
mov
frstor
iret
cmp
mov
int
ss
dec
jb
pop
addr16
adc
in
mov
enter
cmp
sbb
dec
cld
lods
inc
sahf
add
scas
ficomps
mov
lret
and
daa
mov
cmp
aad
push
cmp
clc
sbb
iret
mov
pusha
lock
add
mov
mov
adc
adc
repz
mov
pop
mov
add
imul
adc
pop
popa
arpl
sub
mov
mov
popa
ss
inc
sub
cmp
sub
and
icebp
pop
jecxz
jb
mov
xchg
add
aam
out
dec
dec
test
add
in
xchg
mov
cmp
xchg
mov
stos
cmp
aam
and
stos
orl
outsl
add
mov
mov
mov
test
stos
js
nop
dec
shr
andl
in
sub
sbb
dec
outsl
ljmp
sbb
test
les
incb
nop
pusha
inc
inc
aad
mov
cmp
lods
mov
mov
daa
test
stos
ljmp
loopne
add
xor
sbb
xor
aad
jp
push
inc
mov
pop
in
test
add
icebp
fisubrl
incb
fists
incb
lret
add
and
jl
stos
lods
sub
cmpl
push
cmp
xchg
dec
xchg
repz
dec
bound
les
aaa
cmp
jo
sbb
fisubrl
lret
xor
lahf
adc
popf
movsl
shrl
repz
mov
aas
sti
out
jae
add
and
lcall
push
adc
in
insb
out
popa
jns
scas
jb
fistpll
pop
sbb
sbb
push
and
in
shrl
pushf
clc
and
aas
fnsave
push
movsl
rcr
push
jb
ficompl
jns
out
xor
push
cld
mov
push
stc
test
push
dec
push
std
push
es
je
repnz
sbb
pushw
das
outsl
xor
out
xchg
into
push
icebp
xchg
mov
call
mov
or
pop
nop
push
scas
push
fs
inc
in
adc
push
xlat
loope
add
pop
xchg
jbe
out
mov
div
incb
mov
jns
mov
cmpsl
andl
icebp
std
call
sbb
mov
ret
cmc
adc
fldl
repz
js
pop
cwtl
iret
push
in
xor
ror
jg
xlat
push
mov
add
pop
daa
sahf
sub
cmpsb
ds
int3
jnp
lret
mov
add
inc
mov
mov
jns
sub
add
cmpsl
push
sbb
ss
shl
mov
jp
shll
popf
in
lcall
int3
mov
adc
sbb
in
mov
andb
arpl
pop
jne
mov
mov
jbe
jae
fisubl
sub
rcrb
push
add
std
enter
in
adc
pop
mov
xchg
fsubrl
xor
sarb
js
jmp
push
xchg
fidivrl
cmp
in
fsubrs
sbb
ss
cltd
xor
sbb
adc
pusha
sub
adc
push
daa
lret
in
call
sbb
gs
sti
stos
jp
add
shrb
repz
shll
nopl
mov
add
std
mov
fmul
or
pop
repnz
hlt
loope
xlat
pop
jp
out
push
add
sub
adc
test
in
push
cmp
pop
jno
lret
shl
and
add
in
and
lods
or
and
iret
stos
add
dec
ja
adc
xchg
or
in
xor
sbb
out
pop
out
in
cli
mov
dec
adc
scas
xor
mov
pop
xchg
jg
mov
sub
xchg
xchg
repnz
bound
lock
incb
int
xchg
inc
test
outsl
sub
cmp
aam
iret
das
mov
pop
hlt
cli
leave
in
push
movsb
cmc
xchg
sbb
lea
push
or
dec
insl
std
inc
daa
sbb
imul
sub
cs
lret
clc
arpl
mov
inc
dec
mov
inc
xchg
call
nop
pop
xor
mov
outsb
scas
fisubrs
push
sub
cmp
jge
cmc
jae
xor
mov
push
adc
push
scas
ret
ret
inc
int
orl
cmp
pop
jno
scas
pop
xor
sbb
xchg
mov
insl
push
and
divb
pushf
popa
clc
mov
jle
push
mov
in
jnp
jg
mov
adc
leave
insb
push
or
iret
xor
int3
cld
push
inc
xchg
notb
pop
inc
sub
jmp
inc
movd
and
shlb
add
icebp
scas
fld
adc
mov
test
add
dec
imul
cmp
outsl
push
pop
sbb
adc
sti
mov
push
les
sub
add
sbb
dec
sub
add
ficompl
js
push
jb
pmuludq
insb
xchg
add
mov
push
jns
das
icebp
mov
movsb
jecxz
in
lods
fidivs
adc
pusha
xchg
mov
mov
sbb
xchg
test
jle
push
xor
icebp
dec
add
mov
adc
mov
rolb
iret
jmp
pop
sbb
mov
test
das
pop
and
pop
daa
cli
cmc
lret
mov
repz
test
aad
add
ja
inc
sub
js
adc
add
negl
lcall
lds
cld
daa
and
or
mov
pop
add
push
lcall
inc
and
jno
sub
sbb
jl
imul
std
mov
test
std
mov
and
testb
sbb
pop
loop
xchg
pushf
fsub
addl
dec
dec
jmp
cmp
xor
sbb
xchg
repnz
cmpsb
xchg
mov
mov
rorl
mov
mov
sub
jl
push
jb
stc
inc
icebp
fistps
lahf
cmp
dec
pop
repz
adc
xchg
dec
stc
out
mov
and
sub
ret
push
movsl
sbb
shrb
out
loope
jg
nop
mov
xor
int3
clc
negb
icebp
int
aas
ficoml
cmp
dec
xchg
leave
es
int3
cmc
push
mov
decb
mov
add
stc
jne
jmp
xchg
pop
cmp
rorl
int3
mov
xor
xor
inc
outsb
pop
xlat
cmp
push
sub
loop
xor
jg
xchg
cltd
cs
push
dec
ret
sub
rclb
sbb
clc
aad
mov
push
je
cwtl
in
incb
pop
push
xchg
dec
mov
je
cmp
out
fdivr
xor
les
hlt
mov
xchg
jne
incb
insl
and
mov
jmp
stos
addb
or
push
dec
sbb
dec
cmp
sub
loope
sbb
mov
adc
inc
jns
das
and
addr16
xchg
mov
loope
mov
in
cmc
mov
cmp
sbb
in
cwtl
inc
fs
dec
push
xor
jns
xlat
push
aas
sub
sbb
mov
popf
cld
push
shlb
js
jmp
fisubs
inc
and
or
test
mov
ds
dec
dec
push
mov
fwait
loop
daa
mov
outsb
sarb
ficoml
cmp
jae
fdivr
mov
hlt
nop
scas
mov
lcall
xor
ss
sub
fidivs
cmpsl
cltd
jle
inc
push
inc
inc
jnp
cli
push
bound
sub
add
jo
inc
outsl
mov
jmp
fcom
pop
mov
ljmp
ss
aaa
mov
inc
adc
outsl
inc
cltd
fwait
aad
add
inc
iret
lea
mov
aaa
leave
pop
fs
push
add
int3
and
pop
test
jno
sub
dec
inc
out
mov
xor
fistl
ret
jno
inc
mov
rolb
cli
or
lods
out
push
cmp
mov
in
inc
adc
pop
insb
ds
mov
or
js
cmc
adc
adc
je
pop
inc
jnp
shll
in
pop
mov
test
pop
or
jmp
push
xor
int
leave
push
incb
shl
out
decb
sbb
mov
js
pop
ret
sbb
and
xchg
nop
dec
smsw
xor
ftst
cmp
test
lahf
add
mov
cltd
pushf
dec
jmp
das
and
into
sub
adc
cltd
popf
test
pop
lods
mov
ss
dec
ja
or
or
push
outsb
ffree
insl
push
cmpb
or
cmp
lcall
push
push
adc
cmp
std
sbb
mov
loopne
jg
aas
xchg
push
push
jae
jno
in
fs
push
xchg
sub
insl
leave
imul
frstor
xchg
imul
ss
les
out
add
mov
fldcw
cld
push
roll
ljmp
mov
ja
cmp
push
daa
imul
sbb
lock
adc
xor
jae
jb
jnp
inc
lahf
pop
sub
push
mov
mov
jo
ror
mov
add
lea
jns
imul
push
jae
or
cmp
jp
ficoms
call
out
inc
pop
mov
xchg
mov
push
sub
inc
gs
test
mov
jp
adc
cld
add
out
push
inc
jge
fidivrs
and
adc
cwtl
bound
add
imul
dec
jg
dec
pop
inc
push
cmpsb
push
aad
insb
fwait
loopne
movsl
or
cs
ja
mov
mov
jne
jo
xor
out
ret
pop
pop
mov
add
sbb
mov
jge
and
or
pop
dec
mov
sub
fdivrp
jge
insb
repnz
cmpl
test
imul
ss
lahf
inc
rcll
jo
data16
sarb
inc
jbe
cld
xor
aam
jl
loop
int3
shrb
sbb
pop
push
push
sub
cmpsl
enter
es
sbb
cmpl
inc
fmul
mov
sbb
cmpsl
mov
cmpsb
adc
roll
das
or
dec
cmp
fdivr
xchg
mov
cmp
stos
xlat
int
or
and
popa
adc
adc
sub
out
sbb
sbb
daa
jo
lret
mov
jae
decb
xor
arpl
adc
sbb
decb
jl
incb
out
xchg
or
mov
loope
ds
sbb
xchg
pop
fs
fiaddl
divl
push
pop
add
cld
das
or
aas
xor
add
jns
mov
ss
sub
or
cld
push
pushf
outsl
ret
and
and
add
ja
lret
test
add
jno
in
das
adc
cmp
xor
outsb
or
push
sub
imul
fisubrl
adc
dec
jmp
hlt
jae
repz
jecxz
enter
dec
daa
out
mov
jle
mov
rolb
jo
mov
in
fdivp
fnstsw
cmp
sub
fisubrl
gs
add
xchg
cwtl
cmp
ja
pop
ret
mov
dec
mov
and
clc
shl
inc
add
fimull
daa
inc
and
add
mov
cmpl
leave
add
sub
in
mov
in
sbb
xor
jno
ja
mov
shr
in
incl
xchg
rol
push
icebp
fnstsw
and
nop
loopne
xchg
xchg
sbb
jbe
stos
and
push
dec
jnp
jge
sub
test
sub
pop
pop
sub
addb
push
cmpsb
push
int3
xchg
dec
aam
jge
xor
cmp
ljmp
push
incb
xchg
into
outsb
inc
dec
mov
cmp
imul
adc
add
out
sbb
xchg
sub
insl
shlb
es
leave
dec
rcrb
je
sub
push
add
adcb
dec
incb
pop
jae
or
pop
movsb
aad
cmc
and
or
push
fisubrl
mov
cmp
ss
pop
fnsave
mov
out
ja
outsl
sbb
cltd
bound
aas
imul
pop
sbb
pop
or
xlat
loope
les
push
lock
sub
jg
ds
inc
xor
fxch
xchg
sbb
or
sub
outsb
adc
inc
cld
loope
faddp
ljmp
mov
cwtl
push
test
xchg
scas
push
push
popf
movsb
dec
push
and
dec
push
lahf
jbe
lret
mov
fyl2x
xlat
inc
xor
adc
loopne
add
or
aaa
and
dec
push
ret
daa
popa
push
rcl
push
and
cld
sbb
adc
push
add
inc
and
add
mov
xlat
scas
pop
aad
cmp
lret
mov
pop
adc
lods
mov
push
pop
sarl
incb
push
xchg
movd
adc
shr
fmul
nop
stos
mov
add
pop
xor
hlt
jae
test
jb
dec
sahf
and
pushf
aad
shlb
mov
cmpsb
jg
movsb
jp
jae
lret
sub
cli
jb
sub
fisubrs
hlt
rolb
add
sub
dec
lods
jmp
movsl
jnp
push
dec
and
xchg
lret
fnstsw
in
xorl
and
pop
stc
aaa
and
cmp
dec
inc
repnz
sub
add
movsb
mov
fsubrs
dec
arpl
push
mov
and
or
cwtl
stos
jmp
cmp
cmp
and
and
js
dec
pop
sbb
pop
ds
adc
mov
inc
jge
outsl
or
aas
cmp
mov
xchg
cld
inc
sub
mov
cs
dec
shlb
out
jge
jno
iret
inc
lahf
cld
xchg
popf
jo
loope
cmp
fbstp
in
scas
xor
out
cmp
int3
jns
jg
es
sbb
adc
rcrl
push
dec
aad
jb
loop
jg
ds
xchg
aam
mov
fdivrp
and
out
stos
inc
jb,pn
int
dec
lods
mov
cmc
in
mov
mov
mov
jge
pushf
xchg
stos
in
fcmovnbe
icebp
pop
mov
ds
add
adc
xor
mov
loope
das
fbstp
adc
pop
push
pop
add
adc
movsl
lods
or
ss
xchg
outsl
cmp
pop
decb
pop
push
jb
push
int
pop
cs
lods
ljmp
xor
mov
and
shll
cmp
retw
fsin
std
outsl
or
or
and
pop
xor
xchg
lahf
imul
adc
shr
mov
jmp
cmp
mov
je
mov
movsb
jne
xchg
xor
mov
daa
mov
jno
cld
ss
sbb
aas
jne
test
in
lods
fistl
pushf
mov
sbb
sbb
mov
add
cmp
stc
mov
push
mov
mov
sbb
aaa
cltd
inc
inc
mov
jo
insl
std
mov
inc
pop
lock
test
and
ds
fnstsw
pop
jle
jmp
mov
or
mov
and
nop
pop
insl
pop
add
mov
cli
jp
sarb
stos
push
fwait
jecxz
jne
int
ret
sbb
lea
mov
mov
lahf
xchg
xchg
or
sbb
and
dec
mov
push
xchg
mov
pop
outsl
cmpsl
jp
aaa
aas
jmp
pop
inc
dec
cmc
jae
cwtl
imul
add
mov
pop
or
mov
sub
std
lods
jge
pop
inc
xchg
cmc
dec
xchg
mov
inc
cwtl
add
mov
or
testl
xchg
mov
adc
test
mov
xchg
inc
mov
ud0
int3
cmpsb
jp
lret
ret
jnp
adc
nop
jae
sar
add
and
lods
sub
inc
sub
incb
cmc
leave
add
rorb
add
and
mov
push
pop
pushl
cmp
mov
in
jge
loop
and
sbbb
imul
mov
cmpsb
insb
xor
or
push
scas
arpl
push
mov
sbb
jg
stos
insl
mov
jle
or
ss
jge
xor
jg
add
sub
test
jmp
icebp
pop
decb
sbb
sbb
adc
jae
jo
add
dec
xchg
es
or
mov
cmp
xor
insl
mov
and
xchg
and
mov
push
and
xchg
sahf
fbld
jmp
sar
push
in
xor
push
decb
das
cmp
xchg
insl
repz
push
push
push
sbb
jne
int
inc
fistl
jbe
adc
push
and
jbe
and
and
fwait
push
or
push
sbb
stc
jne
mov
mov
jnp
shlb
xchg
lea
in
push
sbb
sub
decb
push
in
inc
in
push
sarb
roll
mov
pop
sbb
add
jmp
outsb
adc
push
and
fisttpl
popf
lods
sbbl
dec
and
xchg
rorl
gs
sub
pop
imul
pop
add
sbb
jg
mov
es
pop
jae
hlt
xchg
push
cmp
xorb
insl
hlt
outsb
cmp
jo
add
cld
push
lock
dec
pop
jnp
mov
cmp
inc
loope
incb
and
cmp
jge
scas
gs
mov
dec
decb
popf
scas
iret
and
scas
mov
out
pushl
xchg
in
call
mov
xchg
repz
adc
push
and
addr16
outsl
popa
dec
inc
cli
outsb
stos
mov
pusha
arpl
addl
and
pop
dec
mov
jns
mov
inc
jo
pop
shlb
pop
out
in
and
pop
pop
fwait
xchg
mov
ds
or
mov
jo
cmp
adc
fwait
dec
ret
lret
cmp
pop
jmp
fdivr
mov
pop
pop
push
mov
jg,pt
or
imul
xchg
push
sub
adc
adcl
dec
pop
xor
xchg
cs
nop
outsb
outsl
std
jp
imul
and
lcall
xchg
fnstsw
cmpsl
xchg
test
mov
xchg
adc
add
cwtl
movsb
add
sub
sub
fwait
stos
in
lock
mov
xchg
cmpsb
cld
mov
idivl
push
push
sar
cmp
dec
std
adc
into
pop
dec
push
sub
mov
cmp
in
scas
int3
mov
pop
add
test
xchg
sbb
out
dec
sbbb
adc
pop
outsb
jecxz
je
sbb
out
push
sub
xor
inc
push
in
daa
sub
outsb
test
push
add
iret
mov
and
rcr
daa
pop
pop
js
mov
jge
int3
add
aam
fs
jmp
maxps
scas
cmc
inc
dec
mov
lock
adc
test
inc
ret
xchg
and
lds
or
inc
xchg
sbb
insl
xchg
and
push
stos
roll
adc
ds
and
xor
cwtl
jecxz
jnp
std
movb
fdivl
incb
rorl
ficompl
pop
jle
dec
fisttps
xchg
and
lds
insl
or
add
mov
and
lea
xchg
pop
xchg
dec
cmpsb
push
in
sub
xchg
cld
rorb
sub
jle
sub
cld
cmpsl
dec
adc
fstp
inc
in
pop
call
adc
imul
xchg
fisubl
nop
mov
cmp
in
jns
lds
push
repz
lcall
ds
mov
and
or
adc
lock
push
out
decl
pop
sbb
sbb
loopne
adcb
aas
xor
pop
dec
dec
or
sbb
jnp
mov
mov
pop
ror
jle
out
and
ljmp
aam
jo
dec
ss
ret
mov
es
ljmp
out
movsl
xor
jnp
cmc
shll
push
js
mov
jl
sahf
fwait
ljmp
stos
out
or
je
jecxz
in
cmpl
and
orb
mov
push
pop
adc
jo
lods
pop
push
repz
or
pop
ljmp
movsl
cmp
test
or
in
sbb
xor
ds
dec
inc
out
lret
in
lahf
aam
pop
test
xchg
sub
mov
jmp
push
dec
fs
andb
mov
mov
ret
sub
lea
scas
xorb
lahf
fildll
push
adc
nop
repz
add
popf
test
cmpsl
push
pop
cltd
hlt
loopne
or
and
cmpsl
push
add
int3
and
lods
test
ja
sahf
push
xor
cwtl
hlt
mov
arpl
lea
add
ret
sbb
cli
ljmp
jg
adcb
pop
test
lods
pushw
sbb
jb
subl
in
push
cmp
into
sbb
push
inc
jo
inc
sub
cld
aaa
xchg
int
rol
lock
in
decb
push
scas
in
inc
pusha
jecxz
mov
cmpsb
inc
jns
pushf
pop
push
jbe
jle
xor
sbb
pusha
popf
int
cs
test
push
push
lcall
cld
xor
pushl
jmp
mov
sbb
cmpb
cmpsb
jp
dec
gs
movsb
mov
fwait
lret
dec
fiadds
outsb
decb
adc
xor
jb
out
cld
inc
jnp
mov
xor
enter
in
xchg
insb
dec
lret
mov
pop
cld
popf
xor
lret
sbb
adc
std
cmpsb
ljmp
ss
push
jmp
aad
outsb
andb
mov
xchg
int
in
sbb
out
cld
adc
frstor
adc
bound
inc
mov
jge
jns
sahf
cmp
shrb
cld
lods
ret
jecxz
insb
pop
in
insb
adc
outsb
mov
cld
xor
out
mov
scas
xchg
bnd
jno,pt
mov
aam
or
mov
push
lret
gs
mov
in
mulb
inc
test
pop
decb
mov
outsb
ficoml
add
sti
cmpsb
cmc
das
adc
jb
lods
gs
add
xchg
and
mov
cmp
neg
and
cmp
js,pt
xchg
add
sbb
add
int3
into
ja
jb
adc
insl
fdivr
rcrl
jo
dec
sub
movsl
movsb
add
pop
jl
arpl
or
mov
data16
jo
bound
ja
xchg
jne
sub
xchg
sbb
cld
pop
outsb
push
icebp
xor
fdivrl
pop
inc
xor
dec
xchg
lret
lds
rol
xor
add
add
cs
or
push
pop
xorl
mov
shll
mov
jns
push
jo
mov
push
repz
cmpsl
jno
cmpl
cmp
jns
ficoml
or
or
mov
add
adc
mov
jnp
inc
scas
inc
int3
and
sbb
mov
sub
dec
xchg
loopne
js
leave
cmpsb
loope
mov
in
mov
mov
pop
xchg
aam
jge
or
pop
dec
xor
inc
test
int3
shll
mov
sbb
shll
aas
sub
rcl
jnp
es
push
sub
outsb
loope
dec
push
fisubrl
in
adc
addr16
and
jecxz
pop
mov
mov
fldt
leave
xor
cld
pop
add
gs
nop
mov
add
push
movsl
cld
mov
xor
xchg
and
aad
iret
and
mov
adc
adc
or
jb
stc
sub
cmp
mov
and
jae
mov
clc
filds
addr16
in
add
inc
outsl
les
into
mov
mov
call
out
xchg
movsl
cmpsl
fcmove
pusha
inc
sbb
pop
cmc
shrb
mov
nop
and
cltd
das
push
incb
test
mov
sbb
les
cltd
ds
mov
in
sub
pop
fsubrl
push
lret
mov
adc
mov
or
mov
pop
stos
xlat
call
adc
nop
cmp
adc
sbb
inc
insl
add
cmp
int3
sbb
das
jae
orl
push
sub
mov
sahf
xchg
mov
scas
push
add
aas
lahf
push
sbb
sbb
xor
pop
push
pop
bound
cmp
scas
movl
cmp
push
mov
imul
inc
push
add
fldl
mov
clc
xor
mov
lret
or
ljmp
jp
out
jecxz
push
xor
cmp
mov
or
out
cli
ljmp
mov
cmp
jg
xchg
add
pop
cli
repz
mov
cmc
shl
ret
dec
xchg
clc
cmp
in
leave
add
push
or
and
adc
mov
stc
imul
push
mov
daa
push
cmpsl
decl
mov
outsb
fdivrp
push
inc
addb
imul
xchg
lea
int
ljmp
es
dec
sub
addr16
movsl
fnsave
ljmp
jle
pop
cmpsl
push
out
hlt
mov
sub
ljmp
push
int3
test
aaa
jo
pusha
in
cmp
shll
insl
jnp
cwtl
cmp
out
nop
jbe
lret
roll
in
fst
ljmp
lret
scas
ja
and
andl
pop
imul
jbe
fistpl
idiv
loope
aam
mov
push
movsb
mov
into
gs
pop
push
rcr
ret
jp
imul
sbb
cmp
pop
pop
gs
xorps
add
inc
in
jb
out
sahf
cltd
jnp
jo
jle
and
loope
or
dec
out
xor
fstps
mov
push
sbb
stos
jge
push
dec
shrb
cmpsl
jo
lock
ss
cmp
je
pop
mov
movsl
dec
mov
pop
cmp
mov
leave
lea
push
jmp
mov
push
sbb
aad
cmpsl
sbbl
in
push
or
arpl
xchg
lods
scas
mov
hlt
les
lcall
int3
mov
std
xchg
stos
push
test
pop
cld
inc
xchg
jmp
sbb
xchg
pop
incb
pop
jb
jecxz
mov
cmp
cmp
negb
lahf
add
sub
cmpsl
std
jle
scas
xor
mov
and
mov
shrb
lock
push
int
pop
movhps
sub
sti
andb
fdivr
cmpsb
in
xchg
cmc
call
cld
xor
ds
sbb
cmp
pop
icebp
push
paddd
clc
stos
cmpsb
in
rclb
and
std
sbb
mov
lahf
sub
lods
dec
inc
xchg
or
xor
xlat
into
bound
cld
mov
out
pop
inc
mov
pop
lcall
std
push
shlb
lods
out
aas
decb
pop
push
xchg
sub
lods
xlat
bnd
lock
jge
inc
imul
loope
out
mov
js
push
xchg
xlat
pop
xor
dec
sbb
cmp
jecxz
out
dec
or
jecxz
mov
sti
in
les
jle
pop
jp
sub
xor
sub
adc
call
jno
idiv
xlat
movl
push
cmp
xchg
cs
push
dec
test
js
jae
mov
push
clc
repz
cmp
xor
pop
outsl
ss
pop
decb
mov
scas
xchg
xor
leave
inc
mov
jo
jg
and
iret
dec
test
push
push
and
mov
cs
popa
movsl
addr16
bound
add
jge
inc
int3
or
sbb
insl
sub
daa
sub
jge
in
dec
and
push
pop
push
mulb
daa
stos
cmp
push
test
jle
push
pop
cmp
and
xchg
mov
outsl
pop
hlt
xchg
jp
pop
sbb
imul
pop
insl
into
push
das
jno
mov
xor
sub
or
jae
fisubl
int3
test
jo
cmpsl
add
cmp
nop
cmp
sub
push
cmp
aaa
push
subb
and
mov
jp
add
bound
test
mov
inc
das
imul
lret
fisubl
lods
mov
imul
sbb
arpl
fldcw
loopne
adc
repnz
dec
aad
mov
call
ljmp
mov
incb
lods
ss
incb
sti
push
lahf
xor
out
inc
and
lods
xchg
inc
or
cmp
push
lret
sub
push
inc
cwtl
icebp
loop
and
scas
ja
hlt
fidivl
in
incb
mov
bound
test
adc
or
sub
jg
pop
cld
rol
xchg
xchg
adc
and
xchg
push
xor
mov
stos
pushf
sbb
movsl
and
and
push
mov
popf
and
dec
out
push
xchg
daa
jmp
mov
xchg
in
stos
adc
mov
call
mov
sbb
addr16
xchg
fimuls
xor
out
sub
ret
push
lock
sbb
dec
incl
cmc
mov
adc
loope
rorl
je
push
sahf
popf
sub
incb
mov
xor
push
push
lcall
push
lahf
add
pop
adc
lods
cld
pop
mov
add
dec
stc
ds
sub
mov
aaa
loope
data16
rol
jns
add
rolb
jecxz
mov
cld
inc
imul
add
or
and
dec
jae
in
je
stos
insb
push
push
add
arpl
dec
adc
cmp
and
rorl
insl
mov
mov
incb
mov
mov
cltd
movl
pop
add
add
pop
out
int3
push
lret
pop
pushl
sbb
fdiv
or
popf
sbb
xchg
sub
pop
and
push
and
repnz
pop
lcall
jno
xchg
add
xor
mov
repnz
cltd
aaa
es
sub
dec
sbb
ds
inc
decb
into
pop
notl
mov
out
decb
xor
aad
dec
cmp
insl
inc
dec
popa
xlat
cmpsl
and
jb
cs
jg
adc
inc
out
mov
xchg
lcall
xor
test
mov
out
std
pop
adc
int3
or
int
daa
jns
dec
cmp
sub
lcall
pop
push
hlt
in
arpl
ds
pop
jle
jns
in
mov
int
mov
sub
imul
push
fdivs
imul
mov
pop
pop
orb
gs
cld
and
xor
stc
daa
jge
icebp
xlat
outsl
add
nop
int3
and
or
sahf
xor
xchg
xchg
mov
cmc
lret
mov
jno
mov
sub
arpl
aaa
mov
mov
in
xor
cmp
mov
test
inc
inc
int3
cwtl
js
jg
jae
clc
mov
das
sub
fisubl
scas
dec
add
mov
adc
sahf
popa
dec
sub
mov
and
mov
stos
push
cmpsl
out
idivb
in
dec
adc
mov
scas
jbe
mov
jno
add
mull
jnp
sub
mov
pop
sub
cltd
mov
jne
xchg
jle
cmp
scas
sub
xor
and
in
and
leave
call
sbb
push
jns
lock
stos
jb
pop
add
cmp
mov
fldenv
insb
mov
push
ja
pop
sub
push
xchg
into
adc
rcl
xchg
nop
push
inc
lea
cmc
loop
cmp
cmpsb
sti
add
jp
enter
cmc
pop
pop
aaa
call
adc
adc
xor
cltd
lcall
mov
mov
cmc
jg
mov
test
inc
cmp
hlt
mov
shrl
mov
std
shlb
xchg
xchg
aas
push
or
mov
and
push
xor
jb
push
adc
out
lahf
clc
jmp
jecxz
cmp
mov
pushf
xchg
sahf
and
int3
arpl
test
push
ja
lahf
sbbl
call
sbb
mov
xchg
and
pop
sub
inc
lods
out
insl
cltd
test
and
das
dec
int
out
data16
inc
lahf
popf
sub
stos
mov
jmp
jne
mov
cmp
dec
jge
incb
dec
sub
test
mov
aas
jo
sub
add
sarl
or
pop
cmp
clc
in
call
inc
je
jl
and
nop
jae
iret
lahf
fidivrs
jmp
fs
pop
jecxz
cld
or
sub
fcompp
roll
pop
mov
lods
and
out
popa
push
into
jo
sbb
adc
dec
repnz
xor
cmc
out
in
push
arpl
sar
dec
jmp
clc
lea
push
inc
xchg
dec
push
cwtl
sbb
cmp
pushl
rcrl
push
pop
pop
sub
enter
sbb
int3
mov
subl
xchg
insl
push
push
mov
decb
adc
in
stos
jl
xor
movsb
cld
jns
sbb
inc
xorl
rorl
cmp
push
js
or
inc
adc
scas
xor
cmp
bound
daa
pop
mov
in
jg
mov
inc
mov
inc
mov
or
jno
inc
jmp
test
and
and
dec
aas
dec
xor
lods
cmp
in
popf
test
fistl
pushf
xor
lea
dec
mov
jg
bound
jmp
lahf
cltd
pop
jo
cmp
sbb
rcrb
xor
int
dec
ficoms
push
sub
pop
inc
dec
enter
daa
inc
das
dec
inc
cltd
add
mov
mov
pop
pop
dec
rol
in
fwait
dec
jge
pop
fldl
lret
jmp
fwait
mov
pop
int3
cmp
bound
mov
es
jge
sub
imul
fidivl
sbb
jl
stc
xchg
jge
fdivrl
lea
loope
andb
mov
xchg
inc
ficomps
data16
sbb
mov
movsl
adc
pop
ret
mov
cmpsb
popf
pop
repz
decb
shr
xchg
repnz
push
inc
cwtl
fdivs
stos
jne
inc
ffree
out
mov
cmp
lods
cmp
dec
and
jb
lret
dec
jle
jecxz
xchg
cmp
adc
xchg
mov
sbb
ja
arpl
loope
mov
xchg
daa
or
sub
js
cwtl
es
and
sarb
lea
test
adc
xor
stc
gs
inc
sahf
xor
mov
lds
adc
ja
pop
and
push
cmpsb
mov
test
add
icebp
scas
mov
dec
adcl
lea
jmp
iret
shl
outsb
ret
std
out
pusha
jae
pop
frstor
filds
and
jp
cmp
sub
dec
pop
lods
imul
push
sub
pop
stos
push
xchg
or
or
fs
rclb
cmp
lds
jbe
int
push
vmread
jns
push
in
mov
negl
pop
jbe
adc
mov
jecxz
popa
jl
pop
scas
pop
mov
sbb
pop
add
dec
sub
stos
je
xchg
sbb
add
lea
jp
cltd
sbb
insb
and
leave
cmp
outsl
jg
xchg
push
stos
mov
and
iret
xlat
add
push
hlt
push
jo
or
pop
adc
addl
jbe
test
and
dec
cmpsb
inc
lds
popa
push
decb
dec
fisttpll
jo
sub
mov
mov
push
jns
int3
outsb
and
cs
push
shll
js
test
sbb
int3
pop
jne
mov
mov
ljmp
jmp
imul
inc
loopne
cmp
lods
mov
xor
sbb
cmp
jmp
xor
cmpl
test
or
loopne
je
fs
cmp
mov
stos
in
xchg
cli
adc
lahf
mov
cmpl
cltd
test
mov
orb
xchg
pushf
std
jmp
hlt
and
or
mov
adc
gs
mov
insb
inc
aas
cmp
sub
fisttpl
push
and
daa
in
dec
inc
imul
mov
add
nop
decb
xchg
mov
or
out
mov
jae
popa
ds
jmp
imul
adc
inc
adcb
lea
shlb
push
jo
call
out
xor
pop
lods
and
in
imul
mov
mov
pop
in
jp
lds
or
mov
inc
add
jge
jns
pop
push
jbe
dec
cmp
fstpt
loop
or
or
mov
fistpll
jns
cld
std
das
mov
add
sbb
jno
int3
orl
pop
std
in
inc
ds
in
mov
outsb
push
pop
int3
push
iret
ret
pop
stc
lret
cmc
add
dec
aam
dec
dec
pop
xlat
cmp
inc
nop
adc
mov
insl
cmp
push
xor
mov
and
push
das
add
push
lea
data16
cmp
xlat
test
aad
arpl
sti
xchg
add
push
inc
loop
stos
or
jle
push
mov
aas
mov
pushf
inc
in
test
jmp
cli
pop
sub
mov
popf
xor
xor
pop
bound
aam
jb
and
push
lds
push
xor
mov
ror
jp
pop
mov
add
dec
mov
lcall
xchg
jmp
mov
mov
jae
xor
sub
arpl
out
mov
in
pushf
xor
jle
jg
int3
inc
xor
jb
jle
mov
adc
mov
insl
jne
cmp
xor
das
incb
cmp
insl
cmp
mov
push
cmpsl
jbe
xchg
xchg
fisubs
xor
popf
scas
aad
push
xor
inc
inc
nop
xchg
xlat
scas
outsb
mov
push
shlb
test
mov
inc
mov
or
daa
loopne
and
ret
stc
sarl
outsl
cmp
arpl
sbbl
add
push
hlt
ljmp
mov
in
ror
xchg
xchg
xor
xchg
jns
shrl
aaa
mov
jb
cmpl
mov
sbb
xchg
push
divb
cmpsl
leave
xchg
pop
outsl
mov
cmp
pop
call
push
lcall
add
add
test
cmpb
test
inc
push
insb
mov
roll
jns
dec
outsl
repnz
stos
mov
mul
jbe
pushf
loope
jle
lcall
jl
and
dec
xor
das
icebp
mov
mov
cli
int
incb
sub
push
dec
inc
push
arpl
mov
and
xlat
add
inc
sbb
push
push
jno
jno
mov
push
gs
xchg
jmp
mov
ljmp
imul
push
jl
push
mov
add
inc
pop
inc
dec
int3
push
nop
sbb
shr
mov
pop
mov
test
sub
fidivl
adc
cltd
sub
mov
xor
or
push
cs
xchg
adc
fdivl
add
cmp
fisttps
std
orb
shr
movsb
in
int3
lods
and
sahf
sbb
or
dec
jp
jno
or
cmp
mov
mov
or
dec
sbb
hlt
xchg
pop
lcall
mov
or
lret
mov
pop
sbb
mov
jns
xorl
cld
lcall
popf
xchg
in
jecxz
out
es
sbb
dec
out
sarl
cmp
incb
sub
lods
sbb
and
sub
ljmp
fsts
and
fstl
pop
inc
paddd
aaa
push
push
xchg
adc
jne
mov
test
mov
or
in
push
xor
adc
push
leave
jae
push
xchg
adc
aaa
inc
inc
cld
or
push
jnp
cmpsb
sarb
lcall
std
mov
or
adc
outsl
insl
or
test
ret
fcomip
add
repz
les
mov
ljmp
dec
leave
push
jle
dec
sub
in
cmp
sub
adc
pop
scas
stos
mov
popa
mov
repnz
sbb
push
jecxz
dec
arpl
push
loope
xor
ljmp
cmp
call
adc
popf
pop
in
xchg
push
mov
shrb
xchg
out
mov
and
mov
sbb
xchg
mov
test
cmp
mov
fs
mov
add
mov
push
add
stos
cmpsl
sbb
sub
push
sub
pop
pop
cmp
adc
test
sysenter
ficoml
mov
dec
mov
fs
or
mov
fsubs
sbb
idivb
aas
insl
data16
xchg
fdivrl
sub
jnp
stc
push
cmp
or
inc
pop
popa
mov
sar
mov
stos
in
push
jge
cld
jno
ss
xor
test
mov
fnstcw
push
mov
jecxz
push
imul
in
dec
jge
pushf
insb
iret
arpl
pusha
cmp
pop
push
inc
fisubrs
int3
or
lock
adc
sbb
xchg
sbb
add
sub
loop
rorl
dec
popl
xchg
daa
aaa
imul
cltd
push
dec
fldl
and
pop
in
outsl
cmp
push
jmp
xchg
ds
xor
sub
sbb
enter
lcall
add
adc
out
pop
fnsave
xor
mov
xchg
cmp
mov
mov
inc
push
pop
xchg
daa
or
sbb
ficompl
dec
movsl
xlat
mov
jg
in
call
cli
pushf
push
outsb
arpl
xor
dec
or
mov
popa
lcall
outsl
cmpb
pop
sbb
in
mov
push
daa
push
and
mov
sahf
dec
into
cmp
sbb
incb
dec
sbb
push
mov
inc
mov
xlat
dec
fsubl
cmp
xor
xchg
addr16
or
iret
push
ljmp
jmp
push
sub
rcrb
negl
add
cmp
cmp
xchg
xor
fstl
sbb
xor
and
fidivl
sahf
inc
adc
mov
jae
mov
mov
jge
stos
ljmp
and
and
push
aas
lock
mov
sbb
dec
mov
int3
jo
loopne
movsl
push
adc
sub
jne
cmp
lock
push
cld
aas
dec
loopne
clc
jmp
daa
call
and
or
adc
push
gs
repz
in
cmovp
and
dec
sbb
inc
shr
jg
gs
aaa
outsb
cmp
dec
xor
shlb
push
cmp
fistpl
into
mov
std
mov
decb
std
stos
fstl
imul
sbb
pop
xchg
cmp
push
dec
sub
inc
out
xor
jnp
popl
aas
rcll
push
jecxz
test
sub
pop
aad
imul
mov
jge
inc
adc
jle
sbb
fisttps
js
in
insb
repnz
mov
hlt
icebp
test
ljmp
add
fdivl
push
inc
push
vsqrtss
inc
sbb
push
cmp
sbb
push
jne
test
ret
dec
nop
sbb
decb
sub
inc
popf
gs
pop
ds
pop
pop
nop
jns
pop
enter
pop
jne
mov
aaa
or
mov
jg
es
xchg
mov
sar
push
add
jno
and
jmp
jo
into
pusha
add
inc
jecxz
loop
mov
movsl
pop
and
lcall
cs
jnp
dec
xor
pop
mov
push
fs
jns
add
sti
jo
test
jge
js
xchg
push
or
test
lcall
call
xchg
inc
push
dec
inc
ja
popa
sub
sub
stc
push
enter
nop
rcr
lock
std
sbb
adc
cmpsb
xchg
daa
lret
pop
arpl
lods
xchg
add
adc
and
and
shlb
sub
inc
fistpll
mov
add
adc
sub
mov
sub
in
int3
mov
add
push
cmp
mov
mov
or
xor
stc
pop
mov
bound
inc
addr16
decb
sub
jbe
scas
das
mov
lret
jo
xchg
adc
incb
xor
inc
scas
xlat
in
xor
and
les
xorl
fisubs
inc
enter
cwtl
mov
fs
addr16
xchg
add
stos
in
imul
xorl
rcrl
inc
cwtl
dec
aaa
out
add
lds
or
jmp
push
mov
jbe
jmp
cmc
hlt
out
push
lcall
ljmp
nop
push
popf
and
lds
cmp
inc
push
insl
lahf
es
stc
mov
inc
cld
pop
jg
and
mov
incb
loopne
fcmove
lock
ret
xchg
jle
mov
push
xchg
popa
cmp
mov
testb
jp
popf
fnstsw
xchg
mov
xchg
jp
pop
add
out
popa
add
push
dec
inc
sti
pop
jmp
push
sbb
jo
fs
out
leave
outsb
mov
cs
insl
mov
push
mov
imul
mov
lret
gs
or
jbe
cmc
repz
cltd
out
xlat
mov
mov
mov
rcll
mov
rcll
xor
adc
mov
in
and
push
sar
jle
or
arpl
jae
insb
pushl
ret
xchg
xor
cmpsb
push
add
pop
cltd
jg
insl
sbb
cmp
inc
je
int3
data16
fistps
cmp
negb
loopne
pop
ds
test
xor
jge
jg
cmp
sbb
shll
jo
or
or
push
pop
arpl
popf
out
dec
out
mov
incb
notl
xchg
and
mov
sub
inc
sbb
aaa
out
dec
inc
pop
inc
fcomp
popa
dec
fdivrl
pop
xchg
outsb
xor
add
sub
inc
inc
cmpsl
sbb
fwait
popl
jmp
sarl
hlt
sbb
std
bound
lret
pop
fdivrl
sti
sbb
loopne
push
sysenter
dec
push
loope
mov
dec
adcb
or
stos
lock
cmc
dec
xor
lods
hlt
fistpll
xlat
mov
aas
push
dec
ja
fwait
out
out
or
mov
adc
adc
add
lea
mov
sub
out
ficoms
decb
dec
or
mov
jge
adc
inc
cmp
cmc
mov
imul
pushl
addr16
in
into
dec
xlat
push
or
rolb
mov
in
sar
push
dec
cmp
pop
lea
mov
or
add
jge
or
jns
adc
mov
mov
xor
mulb
in
lods
mov
nop
test
lods
xor
sub
mov
push
mov
incb
fimuls
inc
push
aas
mov
in
pop
sub
mov
jge
aad
fildl
mov
adc
dec
pop
shl
addr16
test
xchg
dec
mov
pop
loope
fdivs
pop
hlt
inc
lods
decl
and
psrlq
push
mov
testl
repz
xchg
pop
cld
stos
sbb
mov
jo
jmp
jg
mov
pop
js
pop
jle
bound
int3
mov
add
decb
adc
nop
xchg
add
jle
jns
cld
inc
cld
dec
xchg
test
cmpsl
push
cld
outsl
roll
cli
pop
lods
stos
sbb
xchg
movsl
lods
add
push
jae
and
lret
mov
dec
es
add
rorl
lea
dec
cmp
xor
inc
ret
sti
es
pushf
push
movsl
fndisi(8087
int3
pop
push
outsb
inc
xchg
add
cmp
js
inc
push
cs
pushf
addr16
repnz
xor
fwait
scas
popf
out
pop
pop
int3
popa
jl
cwtl
or
sti
xor
sar
jp
testl
rcll
jno
or
sahf
icebp
jae
pop
data16
shll
jbe
fimull
push
dec
cwtl
inc
cmp
sbb
and
mov
sub
out
orl
jmp
lret
js
xchg
cli
mov
push
hlt
jno
in
add
push
mov
cmc
cld
scas
jb
inc
or
test
ret
mov
sbb
push
cmp
or
outsl
into
xchg
push
sbb
cltd
shrb
scas
lods
pop
mov
jne
cmp
fwait
loop
xor
dec
push
xchg
inc
sbb
jnp
cs
fbstp
ljmp
aaa
and
scas
fs
jno
or
pop
push
lcall
jne
insl
mov
fucompp
mov
xlat
cltd
mov
ficomps
movsb
xchg
and
cmp
insl
out
ja
js
icebp
pop
addb
jle
jg
sti
xor
cld
adc
mov
aad
jle
mov
cmp
lods
xchg
inc
clc
imul
mov
cmp
std
xor
or
lret
je
jbe
call
outsl
push
insb
pop
nop
test
or
add
or
xor
loopne
mov
ret
sbb
in
pop
pop
add
add
mov
cld
adc
adc
pop
xchg
push
enter
cmpsl
aaa
jae
js
xlat
ss
sub
stos
jp
popf
les
ret
xor
nop
cmp
cld
ljmp
pushf
mov
sub
xchg
push
jg
dec
dec
sub
fwait
mov
push
js
imul
or
jge
xor
psrlq
mov
shr
in
push
mov
add
pop
sub
mov
push
decb
ret
repz
in
insl
hlt
lret
jle
dec
mov
inc
iret
dec
push
jnp
decb
sub
push
xchg
iret
push
mov
cld
gs
mov
rorb
push
push
pop
pop
das
mov
inc
or
sbb
enter
pop
pop
mov
lcall
cmpsb
sbb
dec
or
cmp
popa
cmp
addr16
fmull
pop
popf
nop
add
sub
call
movd
clc
jg
rcr
xor
lock
adc
int
xchg
lcall
jp
nop
imul
test
xchg
and
and
jno
jl
stc
dec
pushf
mov
sub
cmp
hlt
rdmsr
cld
or
outsl
std
jb
ficompl
mov
push
jle
and
inc
mov
sbb
mov
aaa
cld
jne
sub
sub
add
jp
push
outsl
sbb
xchg
out
scas
fst
test
adc
sub
xchg
lahf
das
jbe
pop
cli
ficompl
mov
mov
out
sti
mov
sub
pop
imul
adc
or
lock
xlat
fnstsw
lahf
inc
mov
test
mov
xchg
inc
add
xchg
or
inc
mov
or
shr
fcoml
xchg
sub
out
lock
inc
pop
mov
cmp
xchg
push
cmova
sbb
stos
adc
fadds
imul
mov
pop
in
outsb
sub
mov
aad
inc
popf
lea
xchg
and
xchg
xchg
dec
jmp
xchg
dec
stos
fiaddl
cli
xor
cmpsb
scas
pusha
shll
stos
repnz
aam
sub
sbb
fstl
das
pop
sub
jnp
mov
test
sbb
cmp
push
lahf
pop
test
shlb
das
sbb
cld
std
ds
lcall
sub
xchg
imul
aas
mov
ja
add
nop
cld
pop
cmp
mov
mov
sbb
mov
ret
push
les
es
mov
cltd
xlat
fwait
mov
int3
or
pop
add
xor
xor
jns
test
rclb
mov
mov
sub
pop
dec
pop
jp
hlt
pop
xor
add
xchg
test
insl
sub
mov
loopne
outsb
jbe
andl
or
aas
cmpl
xor
push
insl
pop
fmuls
sub
repz
and
insl
in
scas
jge
ja
sub
bound
call
call
lea
mov
inc
mov
jg
jmp
xchg
ja
or
xchg
jne
push
sbb
cmpsl
dec
dec
jg
cmp
ror
into
push
dec
add
sub
stos
adc
mov
fs
push
push
add
in
mov
mov
push
dec
or
aaa
cltd
push
push
daa
push
xchg
int3
sbb
cwtl
fiadds
into
scas
and
sbb
inc
xchg
int3
insb
jbe
imul
push
jb
dec
lods
xor
bound
incb
pop
daa
mov
int3
pop
jno
imul
adc
test
je
mov
mov
sbb
das
xor
inc
adc
jne
es
mov
add
aaa
out
mov
shlb
xor
or
xchg
xchg
iret
hlt
stos
cmp
pop
sub
and
stos
mov
inc
jge
xor
in
mov
jno
add
push
mov
cmpb
and
jp
xchg
xlat
add
cltd
cld
ja
cmpsb
outsl
push
sub
cld
add
mov
cmp
inc
jns
call
jmp
mov
sub
or
dec
xchg
inc
and
xor
dec
mov
nop
cltd
icebp
sub
jne
std
or
dec
xchg
mov
std
xor
pop
or
pop
daa
mov
adc
out
add
cmp
xor
inc
mov
lret
outsb
lods
ds
jnp
jae
dec
add
ljmp
xchg
push
movl
cwtl
add
xchg
rol
filds
es
or
lods
js
xchg
pop
and
push
scas
mov
jle
pop
int3
sbb
fistps
stos
xor
push
inc
push
cld
loop
mov
mov
sub
lret
adc
lods
jmp
mov
jo
mov
dec
sbb
mov
or
lds
imul
adc
cmpsb
mov
scas
dec
fnsave
int
decb
pop
sar
jae
lahf
sub
das
push
aam
ror
lock
insb
jp
push
shlb
inc
in
mov
fdivr
mov
inc
test
loopne
fisttps
test
xor
ss
lea
jecxz
mov
fcmovnb
scas
fsubl
add
sub
inc
mov
incb
out
mov
mov
fwait
pushf
and
adc
cld
inc
xor
clc
ds
insl
decb
mov
xchg
outsl
daa
leave
pop
xchg
mov
aad
scas
jo
and
and
pop
mov
xchg
and
add
dec
xchg
inc
mov
adc
jmp
dec
inc
push
cld
xlat
sahf
push
ds
decl
in
int3
or
adc
inc
scas
jecxz
ja
jle
add
jne
fucom
xchg
cmpsl
gs
jbe
sub
mov
ficoml
mov
xor
imul
dec
push
inc
pop
test
cmc
or
shll
mov
repnz
sbbb
ret
dec
aad
sub
sbb
aaa
pop
lahf
and
rorl
jp
fdivrl
shll
adc
ret
mov
xchg
xor
push
mov
psubsb
std
jae
sbb
cs
fstpt
jns
cmp
xor
mov
sub
sub
aas
aad
test
mov
aad
int
mov
cmc
pusha
ljmp
movsb
mov
cmp
and
add
cmp
xor
gs
jg
cmpsl
scas
sub
pop
mov
sbb
lcall
sub
xchg
int
xchg
lret
sbb
insl
cmc
pop
call
mov
test
es
daa
xchg
pop
aad
and
lcall
data16
outsb
mov
push
pop
aaa
mov
incb
and
xor
int
fldl
roll
dec
adc
aad
andb
cmpsb
decb
shll
popa
dec
push
mov
js
cmpsl
fst
and
jae
stos
ds
sub
dec
scas
push
jge
inc
repz
cmp
adc
push
lock
stos
daa
ret
mov
xor
adc
ss
mov
push
adc
pop
sbb
and
mov
cs
lods
andb
dec
jns
pop
pop
lock
sbb
loop
loope
rcrl
lods
pop
imul
orl
push
outsb
shl
ret
popa
incb
popa
bound
xlat
fbstp
push
call
inc
dec
push
push
leave
adc
dec
or
decb
adc
aas
push
aaa
fcompl
push
fwait
push
mov
out
adc
clc
loope
jle
ja
inc
pushl
pusha
loopne
lds
adc
sti
cmp
xorl
pop
add
pop
push
das
mov
pop
fdivl
test
adc
int3
pop
xlat
pop
insl
inc
gs
and
push
ret
xchg
std
mov
inc
js
sbbl
cld
stos
notb
das
outsl
ret
xor
out
fisttpll
or
and
addr16
mov
mov
mov
aas
js
cmp
sbbl
fcoml
lcall
icebp
inc
or
out
in
mov
lcall
xchg
test
jg
leave
outsl
pop
in
insl
push
lcall
xchg
jo
jnp
jl
fmull
ret
adc
push
adc
cltd
insl
dec
fs
pushf
and
adc
dec
scas
adc
or
lock
jg
sub
dec
stos
test
xor
lea
test
push
std
data16
stos
pop
mov
jg
push
jb
xlat
dec
xchg
mov
pop
pop
fistps
inc
pop
rclb
mov
adc
or
pop
scas
lahf
ret
fs
mov
rclb
faddp
cs
adc
leave
mov
js
decb
subl
outsb
int3
lds
aaa
xor
mov
repz
dec
cwtl
pusha
ret
leave
cmp
bound
inc
add
cld
mov
lret
xchg
out
mov
inc
mov
jle
mov
in
dec
jo
cld
cmc
push
sbb
in
lods
and
dec
lock
xor
std
imul
add
sub
lcall
imul
inc
aaa
mov
mov
iret
add
daa
fsqrt
cwtl
adc
inc
in
xchg
aaa
dec
popa
xor
movl
jo
mov
les
std
adc
mov
cs
es
sub
andl
nop
xor
pop
mov
fdivr
daa
fiaddl
cltd
jbe
ret
adc
add
mov
lods
int3
mov
pop
jbe
inc
popa
push
popf
cwtl
inc
nop
mov
pop
js
mov
int
int3
or
ret
test
cld
push
cltd
and
pop
sbb
add
das
in
xor
mov
push
ret
push
pusha
mov
or
sbb
add
mov
jp
clc
cltd
pop
cmpsb
test
sbb
lahf
dec
je
clc
incb
fsubr
mov
mov
aad
xor
pop
inc
mov
mov
gs
shlb
mov
dec
popf
sahf
adc
cmp
popa
inc
scas
xor
pushf
push
xchg
scas
addr16
movsl
sarb
repz
insb
lods
adc
inc
int3
inc
stos
xchg
sub
pusha
lock
enter
sar
sbb
push
add
mov
test
or
popf
add
shrb
xchg
dec
jecxz
std
inc
leave
mov
lahf
sbb
in
pop
pop
xchg
pop
pushl
push
mov
or
daa
sub
lcall
movsl
ret
sar
xchg
jge
cmp
aam
int3
ret
in
negb
loop
sub
sbb
mov
test
dec
xchg
jno
lea
lds
cmc
jecxz
inc
cs
push
repz
ja
ds
pop
sar
jae
bound
scas
scas
xlat
pop
rolb
mov
cmp
adc
mov
sbb
lcall
mov
jb
pop
ret
push
add
test
out
outsl
pop
mov
ss
sub
or
mov
repz
stos
jne
cwtl
xchg
push
mov
pop
cli
add
pusha
and
mov
add
sub
in
fldcw
lcall
xor
jge
mov
sbb
adc
xchg
mov
xchg
mov
jns
push
int3
xor
add
dec
fdivrp
push
fcomp
mov
ljmp
jp
push
jg
bound
push
fisubrs
mov
inc
push
mov
push
in
xor
xlat
and
cmp
jbe
lock
fbstp
dec
std
sub
es
xchg
or
icebp
test
enter
mov
xor
incb
ss
lods
pushf
inc
push
pop
rcll
lods
cmp
or
inc
xchg
jno
xor
cwtl
mov
aam
xor
int3
pop
sbb
inc
mov
mov
lret
sub
cmp
mov
push
push
outsb
cmpsl
fnstsw
mov
jae
push
inc
sub
mov
aad
aas
and
xor
sahf
push
adc
push
cmp
jmp
or
push
fucomip
bound
shl
jno
add
rcr
pop
jb
daa
aad
xchg
adc
js
cmc
push
xor
jnp
iret
out
cli
arpl
scas
in
sbb
fildl
ret
or
pop
std
je
mov
pushf
xor
incb
adc
cmpsb
sub
xchg
cmp
mov
pop
sub
mov
add
lahf
dec
jno
and
dec
lock
jmp
sbbb
imul
pop
fstl
lcall
xchg
loope
out
ret
mov
push
mov
pop
shrb
mov
mov
les
out
mov
popf
sbb
dec
imul
and
mov
pop
scas
stos
cmc
sahf
into
mov
bound
fstpl
push
push
jnp
sbb
mov
cld
shll
aas
mov
scas
mov
insl
sub
repnz
mov
xchg
inc
inc
cld
xchg
inc
xor
pop
std
js
sub
jge
xlat
pushl
inc
int3
or
sbb
aaa
sti
and
and
jp
mov
jecxz
cmp
push
ja
xor
mov
and
jge
jmp
dec
adc
xor
cli
jle
ret
addr16
loop
jmp
cld
in
push
loop
fistpl
mov
mov
jl
test
lods
cli
mov
imul
and
cmp
test
cmp
std
call
pop
mov
dec
jae
pop
xchg
insb
lea
bound
xchg
jecxz
movsb
int3
sbb
adc
cmp
gs
fstpl
test
or
pop
rcr
sub
xor
dec
cli
sub
lahf
int3
imul
stos
ds
int3
and
or
or
outsl
out
add
and
fsub
xchg
or
imul
push
ljmp
or
daa
cmp
scas
dec
pop
cmpsl
xchg
mov
sub
jns
pop
pop
add
or
mov
jg
jbe
fists
rcll
jg
lcall
add
and
loope
and
and
in
or
xchg
xchg
push
js
mov
in
xor
push
shrl
cmp
pop
movsl
scas
sbb
xchg
and
lret
xchg
and
mov
decb
in
sub
movsb
pop
jmp
pusha
sti
pop
cwtl
cmpsb
andl
dec
addr16
push
loope
repnz
popa
dec
or
mov
cmp
mov
imul
decb
adcb
cs
call
std
clc
mov
stos
sub
cld
addl
mov
shlb
lock
xchg
loopne
pop
pop
popf
xchg
mov
sbb
int3
sub
mov
out
ljmp
or
mov
pop
ljmp
ss
push
inc
add
pushf
and
div
popl
incb
xchg
pop
push
in
xchg
es
pushl
outsl
test
mov
lods
inc
jne
outsb
sbb
push
fs
ret
rcl
idiv
mov
xor
ljmp
sti
cwtl
cli
test
mov
lret
aaa
pushf
mov
push
jle
mov
jo
mov
add
enter
in
adc
inc
jp
insl
rol
mov
mov
mov
push
sub
sub
or
into
jo
enter
xchg
ret
lock
mov
outsl
out
out
sbb
scas
add
orb
jo
sub
jle
out
adc
stos
daa
jae
adc
xchg
mov
jo
in
sti
pop
lahf
iret
shll
pop
scas
mov
dec
cwtl
mov
out
rorb
sub
xor
lea
and
jo
dec
mov
into
stos
mov
jg
clc
std
xchg
cmc
xor
jge
cmp
sti
add
daa
rcr
pop
push
jecxz
xchg
pop
push
xchg
sub
mov
rorl
push
lods
out
popf
adcl
lds
popf
inc
bound
xor
mov
and
jae
rcrb
sahf
repz
mov
lods
mov
in
jo
fisubrl
idiv
sub
or
das
dec
lret
jno
adc
pop
sbb
cmp
out
cmp
xchg
stc
sbb
lret
dec
add
lods
scas
cmpsl
ret
fs
inc
and
cltd
and
push
cmpsb
dec
sub
xchg
dec
inc
adcb
jnp
push
pop
test
jp
mov
mov
pushl
dec
cwtl
stos
daa
stc
shr
inc
test
lcall
bound
cld
xor
in
or
or
sahf
mov
mov
imul
add
mov
add
popa
xlat
xchg
jmp
sub
cmp
pushf
fidivs
add
mov
lcall
int3
movsl
cmp
jl
jl
clc
in
call
fcomps
movsb
leave
xchg
lcall
add
xor
sub
mov
mov
cltd
sub
sbb
imull
or
stos
sbb
out
loope
mov
jb
daa
push
sub
adc
mov
add
jl
call
adc
adc
lcall
outsl
call
pop
sbb
jae
pop
jge
xor
shl
sbb
jmp
pop
sbb
out
dec
xor
pop
int3
jmp
insb
ret
adc
fdivs
incb
mov
xor
mov
lahf
or
out
jns
jne
daa
inc
iret
xchg
loope
push
int3
push
cmp
xchg
addr16
mov
mov
out
jmp
or
inc
fiaddl
enter
stos
lock
push
push
pop
sub
fdivr
and
lcall
fcmovnb
outsb
dec
enter
fldcw
cmp
inc
and
xor
or
shl
xchg
decb
xchg
push
cmp
pop
sub
xlat
adcl
fcompl
inc
aam
push
push
xchg
popf
scas
pop
mov
pop
cmp
mov
pusha
push
outsb
mov
sbb
aas
inc
jmp
nop
mov
sub
fbstp
push
insb
sbb
jno
lcall
cwtl
xor
xchg
xchg
repz
xor
jnp
pop
aaa
mov
adc
push
mov
dec
mov
in
sub
xor
cmp
add
sarb
loopne
pusha
aaa
mov
or
scas
and
sub
pop
mov
cmpsl
sub
lcall
lods
fmuls
mov
mov
push
sbb
cmp
inc
mov
sbb
cmpsl
pusha
out
mov
jno
or
cld
xchg
lret
xchg
pop
insb
or
test
pop
adc
dec
push
frstor
xchg
es
mov
mov
cs
inc
jnp
int
pop
mov
cmpsl
scas
shrl
jmp
dec
shlb
das
iret
xorl
inc
jno
addr16
lea
popf
cmp
or
and
out
mov
out
jae
fidivl
pop
mov
or
ja
sbb
and
mov
cmp
jns
pop
sub
pushl
or
aad
inc
xor
fcoml
sub
mov
inc
mov
nop
jo
in
fistpl
out
stos
fstpl
inc
inc
adc
testb
xchg
mov
int
incl
mov
popa
ljmp
incb
je
addr16
fcoml
xor
sbb
pop
jmp
es
cmpsl
nop
jg
int3
and
sub
insb
push
pushl
inc
mov
sbb
sbb
sbb
xchg
ret
lret
std
ds
sbb
cmc
ss
mov
jmp
add
cmp
clc
das
fucomip
call
sub
mov
loope
mov
out
sub
and
mov
lahf
std
outsb
vmovaps
aas
mov
inc
add
pop
jp
retw
mov
outsl
mov
testb
dec
xor
jmp
lea
mov
aad
incb
cmp
push
aam
and
jne
negb
inc
std
mov
es
test
and
orl
aam
xchg
pop
adc
mov
xorb
sbb
ja
push
inc
push
xchg
out
out
mov
xchg
and
loope
jns
leave
ret
scas
insb
xor
aam
decb
push
je
imul
cmc
fsubl
xchg
daa
xor
add
xlat
imul
adc
mov
xor
sbb
fisttpll
sbb
lock
add
in
shrb
pushf
insl
pop
insl
push
jecxz
push
fisubl
sub
loop
nop
lock
pusha
pop
scas
ja
popf
pop
cli
aam
jo
mov
and
and
test
test
sbb
mov
clc
adcb
outsb
or
jb
mov
inc
decb
gs
ljmp
cmc
lods
bound
xchg
inc
mov
jecxz
shl
sbbl
fsubrs
push
jb
test
movsl
pop
imul
xchg
sbb
in
in
lahf
leave
or
shrb
icebp
ret
jp
insb
jbe
push
in
mov
in
movsl
movsb
sub
dec
decb
test
cs
outsl
dec
int3
iret
jnp
in
adc
pop
fistpl
cmp
idiv
stos
hlt
push
lods
iret
fcmovbe
jp
push
scas
push
jne
out
test
mov
cmp
decb
mov
divl
ret
xlat
jbe
out
inc
dec
or
pop
cmp
pop
in
adc
lcall
sysret
fldl
mov
lcall
sub
das
jo
mov
es
cmpsb
fs
mov
mov
mov
jno
push
fnsave
inc
in
cmp
cmp
push
jno
sub
lcall
add
aam
push
mov
pushf
add
lea
es
mov
pop
sahf
adc
sub
push
test
cs
loopne
and
jb
jo
push
call
sub
add
lock
pop
daa
sbb
cmpsl
xor
or
pusha
ss
imul
sbb
mov
add
scas
aad
lods
outsl
cmp
and
fwait
out
test
jae
ret
dec
testb
or
xchg
sub
xchg
imul
repnz
int3
into
adc
arpl
mov
pop
mov
push
cmpsb
dec
imul
sub
loopne
jno
mov
fidivrl
sbb
enter
lret
nop
aad
add
or
ja
mov
adc
jne
or
cmp
cmc
test
pop
mov
jno
adc
jae
cmp
in
aaa
push
adc
jmp
ljmp
jg
hlt
jbe
lret
leave
std
mov
es
aad
add
push
push
or
cmp
push
adc
xor
jb
cmpsl
add
incb
aaa
aas
xchg
lcall
ror
add
fisttps
or
lock
xor
clc
adc
xor
mov
mov
mov
lods
je
lods
add
outsl
inc
enter
pop
sar
or
sbb
sub
dec
jnp
pop
dec
cmc
and
incb
inc
xor
test
dec
inc
aaa
enter
imul
cmpsb
js
mov
aam
mov
mov
cmp
popa
sub
mov
loope
sub
pop
mov
fdivs
mov
ljmp
lret
and
inc
pmulhw
push
mov
sub
pushf
cld
iret
int3
scas
lock
call
cmp
pop
movsl
enter
test
adc
fstl
jmp
dec
push
es
and
cmpsb
xchg
stc
adcb
mov
xlat
inc
cmc
jp
add
int
jbe
push
mov
cli
es
xchg
push
mov
mov
scas
add
cmp
dec
and
jnp
jb
jns
pop
mov
dec
mov
into
sbb
xor
popf
mov
mov
cltd
inc
push
dec
daa
roll
mov
aas
scas
das
sub
inc
insb
shlb
dec
stos
add
outsb
stos
loope
jle
pop
insl
aad
push
es
dec
sub
mov
mov
jle
fidivrs
and
sub
pop
jnp
ret
jno
int3
scas
out
andl
mov
inc
xchg
mov
fmull
pop
sub
cmpsb
xchg
mov
fisubl
lahf
pop
cmp
sbb
fdivs
sti
aaa
mov
mov
pop
add
push
in
mov
cltd
mov
pop
jle
adc
and
and
mov
xchg
or
add
jb
sbb
lods
mov
clc
xchg
push
stos
pop
jne
add
daa
push
push
sbb
push
mov
sub
push
movsb
xchg
fsubp
fwait
lods
mov
jb
or
fiaddl
into
xlat
aad
cmpsb
mov
lea
sbb
xchg
cmpsl
out
aad
incb
movsb
pop
pop
push
xor
xchg
sahf
subl
cmpsl
scas
or
fstp
rolb
pushf
in
stos
jg
pop
sbb
daa
push
dec
dec
leave
aam
adc
cwtl
mov
add
inc
mov
add
push
hlt
mov
cmc
add
popa
mov
xchg
test
fsubl
aas
pusha
xchg
fidivrs
out
shlb
jg
lods
push
or
clc
cmpb
adc
sub
sub
sub
adc
push
cmp
and
xchg
xchg
push
inc
cltd
in
insl
push
int
popa
cmp
mov
cmc
enter
push
aad
pop
inc
adc
add
mov
mov
nop
and
inc
fnstsw
in
adc
xchg
lcall
and
stc
fmuls
ffree
sahf
xchg
xor
cmp
xchg
xchg
add
xchg
in
lret
mov
inc
shlb
xchg
divb
xchg
repz
sub
dec
sub
loopne
mov
jno
adc
xor
and
cmp
roll
mov
add
push
push
or
nop
addr16
push
aam
stos
inc
repz
lcall
sub
out
ss
push
aas
fdivrp
mov
pop
aaa
fucomi
jno
pop
fcmovb
inc
mov
dec
cltd
movsl
lret
call
xor
and
cld
cmp
incb
mov
sbb
push
cmp
xchg
mov
int3
sub
clc
filds
jo
or
mov
inc
adc
mov
sbb
xchg
ss
push
std
mov
or
or
arpl
mov
jg
addr16
sub
push
pop
inc
dec
incb
out
mov
pusha
jne
and
sbb
fucomi
mov
cmpsl
test
in
xchg
xor
stc
add
mov
pop
and
sub
divl
xor
adc
in
and
dec
inc
addb
xor
or
and
sbb
fisttps
out
jmp
xchg
repnz
inc
push
jg
insl
push
mov
cmpsl
sub
sbbb
jns
adc
xchg
push
aam
mov
push
or
nop
shlb
fwait
xchg
xor
and
stos
ljmp
or
add
mov
daa
int
in
lock
ja
xchg
loop,pt
jmp
xchg
stos
scas
sahf
push
in
cmp
jp
std
lahf
cld
pushf
and
lds
sti
xchg
xor
dec
loopne
jbe
push
scas
popf
loop
pop
lret
xchg
inc
loop
jne
mov
sub
add
enter
jecxz
cmp
mov
push
pop
jo
jp
scas
dec
insl
adc
sub
clc
test
add
popa
ret
in
jp
cmc
jecxz
or
cmp
inc
lea
add
mov
bound
xor
cld
scas
xor
das
cmpsb
push
int
mov
push
cmp
in
sub
int3
pop
das
test
dec
dec
fsin
xchg
lahf
jbe
inc
addl
rol
jge
aad
mov
inc
xchg
adc
sbb
cmpsl
add
ljmp
or
cld
pop
push
sub
cmp
sub
add
mov
stc
pop
sarb
inc
sbb
imul
leave
dec
xchg
push
daa
fimuls
fwait
jmp
pop
xchg
out
cmp
push
mov
clc
mov
jmp
ret
test
data16
push
pop
cmc
dec
repnz
push
cmp
mov
xchg
cld
jnp
imul
push
enter
fcomps
cltd
lahf
insb
jbe
mov
xchg
stc
pop
pop
sbb
cmp
jo
pop
insl
pop
mov
int3
cs
xchg
sbb
dec
decb
or
pop
mov
push
ret
adc
cmpl
mov
in
xor
or
cmp
cmp
pop
xor
add
mov
lods
add
dec
hlt
stos
cwtl
sub
dec
mov
js
xchg
mov
adc
in
xor
daa
jmp
inc
and
mov
ljmp
subb
incb
lahf
pop
cmp
xor
subl
roll
xor
je
mov
cmpsb
sub
arpl
mov
fsub
rcll
jmp
data16
or
pop
xor
adc
cltd
and
xrelease
inc
xchg
mov
add
int3
ja
inc
fldt
ret
dec
ss
inc
adc
jo
pop
jne
mov
test
fisttpll
add
sbbl
mov
sbb
cmp
mov
add
jno
jbe
divb
pop
cmp
movsb
dec
test
pushf
aam
add
jb
sub
cmp
and
xchg
adc
sub
inc
cmp
sub
pushl
lea
mov
push
ficompl
jecxz
add
xchg
ret
jmp
negl
mov
xor
decb
pop
fbld
cld
enter
fsts
pop
push
cmpsl
in
xchg
addb
cmp
dec
xchg
lcall
nop
pop
cmp
das
out
popf
sahf
push
xor
loopne
mov
std
shlb
and
int3
jae
dec
arpl
mov
jle
pop
je
cmp
and
mov
mov
lahf
xchg
fwait
sbb
arpl
daa
mov
rorb
scas
hlt
into
mov
mov
pop
iret
lods
xchg
repnz
inc
xchg
in
sub
js
adc
popf
adc
xor
jbe
popa
fisttpll
jae
test
adc
mov
lods
sbb
cwtl
dec
jb
iret
dec
jmp
inc
jae
pop
push
cmp
xchg
imul
dec
scas
and
in
ret
jl
xor
insb
push
xchg
inc
lcall
roll
sub
pop
cmp
cmp
mov
dec
movsl
xchg
jns
mov
jecxz
mov
js
jno
repnz
pop
sbbb
mov
mov
push
es
xchg
push
cmp
mov
test
enter
stc
lea
je,pn
cmp
lods
in
rclb
mov
data16
shll
call
and
idivb
outsb
jb
std
cmpsl
out
fs
xchg
sub
adc
pop
flds
or
divb
mov
push
shll
imul
js
stos
pop
aaa
inc
xor
jge
xchg
into
stc
mov
cld
enter
test
leave
xor
dec
cld
or
sub
inc
stos
call
outsb
pop
dec
add
loopne
add
inc
push
lods
add
or
loope
jle
fsubrs
jmp
adc
or
sub
jae
lret
mov
sbb
pop
pop
adc
fsubrl
jae
inc
cmpl
sub
divb
ss
cs
fwait
add
sbb
cmp
orb
push
scas
add
iret
add
adc
sub
mov
sub
int
mov
stos
add
subb
lret
in
hlt
dec
scas
sub
test
lods
xchg
lock
es
cmpsl
cmp
xchg
call
jno
adc
jmp
add
stc
lock
nop
dec
jg
test
loopne
mov
push
push
push
loope
push
sub
push
ret
cmp
and
and
insl
mov
inc
adc
add
dec
sbb
xchg
in
pop
jo
and
mov
in
cmpsl
je
gs
or
fnstsw
insl
push
xchg
mov
cld
sub
push
xor
ja
pop
sub
inc
push
lea
jne
mov
pusha
lods
aaa
es
in
or
mov
cli
insl
loop
cmpsl
jl
test
das
push
or
xchg
inc
add
addr16
decb
hlt
push
jmp
into
fdivrp
cmp
pop
andl
inc
movsl
mov
sar
jno
pop
and
xchg
and
mov
lea
mov
in
in
in
test
jmp
pop
rcll
inc
cld
lcall
jbe
aam
fnsave
push
jnp
int3
xchg
xor
push
fistps
cmp
shlb
xchg
xor
aad
incb
in
out
movsl
inc
cld
mov
jne
mov
scas
lcall
js
jo
lods
dec
dec
cmp
jne
aas
aam
pop
rcrl
fsts
fistps
sbb
push
mov
imul
es
push
fidivs
xor
cmp
inc
clc
mov
scas
or
jno
lods
push
dec
inc
notb
xchg
movsb
arpl
cmp
movsl
mov
mov
nop
cs
out
push
dec
pop
mov
pop
mov
dec
xor
addr16
push
mov
mov
and
dec
jecxz
icebp
adc
inc
mov
push
or
lahf
mov
ret
and
in
nopl
sub
decl
adc
gs
imul
popf
lahf
inc
or
inc
cmpsl
xlat
fistps
mov
loope
mov
cltd
push
add
in
jbe
ror
xlat
ret
mov
cmp
cli
ja
js
mov
insl
mov
idivb
leave
inc
push
and
and
nop
fstp
xchg
repz
call
push
jne
and
imul
in
adc
insb
pop
popa
das
js
dec
push
sar
push
fnstenv
loopne
mov
int3
nop
cmc
xchg
fs
scas
cld
and
push
add
imul
mov
gs
adc
aas
mov
hlt
mov
add
pop
out
xchg
movsb
fdivr
fxam
pop
pop
xchg
dec
push
bound
mov
subb
pop
fsubrl
mov
mov
inc
insl
lret
scas
ljmp
repnz
xchg
adc
fwait
xchg
jg
pop
pop
cmp
inc
xlat
incb
mov
xor
mov
xor
and
pop
scas
and
int3
fnstsw
decb
arpl
dec
or
enter
in
fisttpl
jle
es
sbb
pop
lret
jmp
push
sbb
call
mov
and
lds
or
imul
xchg
adc
je
cmp
mov
mov
call
dec
std
sub
mov
jge
into
inc
or
xlat
xor
and
fcomi
andl
sub
nop
mov
inc
push
cmp
sbb
enter
jl
or
movl
int3
mov
ss
sbb
incb
cmp
push
xchg
das
and
mov
aam
in
sub
pop
sub
lock
push
inc
mov
adc
xchg
mov
pop
mov
cmp
inc
and
stos
ffree
mov
cmpsl
int3
sbb
bound
pop
jo
or
pop
jae
imul
pushf
adc
clc
fisttps
cld
aaa
adc
loope
sahf
and
inc
arpl
imul
les
sti
mov
push
sub
daa
xchg
jno
ja
xor
aas
aad
scas
mov
xlat
push
mov
adc
pop
mov
cwtl
test
add
aad
lock
and
xchg
out
add
push
xor
push
dec
push
and
imul
lret
ss
inc
xor
popa
cltd
mov
andb
clc
ljmp
and
xor
jns
shll
sti
lods
test
lods
push
pop
xchg
sbb
lds
xor
fistpl
hlt
mov
xchg
inc
cmpsl
loope
jmp
outsb
cld
pusha
pop
cmpb
test
outsl
es
lea
int3
aad
or
das
mov
rcrl
scas
sub
cld
push
cmp
lret
sub
fistpl
es
dec
pusha
xchg
push
mov
decb
pop
mov
adc
sbb
push
test
insb
cmpsb
aaa
mov
sbb
lcall
and
addb
mov
add
and
sbb
sub
pop
and
scas
notl
cmpsb
mov
xabort
in
int3
imul
inc
dec
inc
adc
push
cmc
mov
icebp
cld
scas
push
and
sbb
mov
sahf
add
outsl
sub
dec
nop
cmovl
rorb
daa
decb
pop
push
dec
mov
repz
fsts
push
mov
pop
push
insb
jnp
in
aas
gs
jns
jge
cmp
mov
lret
movsb
add
shll
stc
aas
rcl
jae
sbb
cmpl
mov
mov
addr16
mov
lss
dec
xchg
xchg
test
mov
popa
xchg
and
push
mov
xor
mov
pop
out
fbld
ror
iret
lods
xchg
leave
xor
mov
jae
mov
xor
xchg
lods
fisttpl
ror
int
dec
jae
orl
movsb
or
push
ret
and
xchg
lahf
leave
cmpsl
decb
orb
decb
daa
push
in
sub
jo
xchg
sbb
fisttpl
push
test
sbb
cmp
gs
cwtl
cmpsl
adc
mov
lret
stos
push
aam
mov
daa
sub
dec
out
mov
aam
in
leave
cltd
lods
inc
jl
ret
pop
mov
outsb
int
cmp
cli
cld
ss
push
sub
xchg
adc
cmp
xor
es
jne
fsts
or
insl
cmpsl
push
jge
mov
clc
cmp
or
out
pop
sub
ds
arpl
paddd
pop
cltd
sti
mov
imul
js
fistl
inc
andl
mov
frstor
rolb
xchg
sub
cmp
icebp
sahf
push
js
scas
xor
dec
gs
dec
inc
cmpsb
xchg
inc
xor
add
sub
mov
jb
lret
pop
cmp
sbb
sub
pop
jnp
mov
in
mov
mov
outsb
pop
xlat
cli
rcll
inc
mov
andps
popa
pusha
sti
aas
cltd
push
in
cld
notb
test
daa
sub
insb
sub
jp
xor
push
add
ja
cld
xchg
scas
push
or
sbb
xor
inc
bound
xorb
int
xchg
and
pusha
lcall
jg
shl
push
mov
into
sbb
lret
in
dec
cmpl
repz
pushf
sbb
add
movsb
addr16
out
jecxz
call
mov
out
dec
mov
push
push
xor
aaa
sbb
add
pop
bound
incb
sbb
cmp
pop
push
push
xchg
dec
mov
mov
xlat
inc
addr16
xchg
jno
push
lock
add
xor
loope
pop
jne
dec
test
and
inc
idivl
sbb
push
jo
cmc
out
int3
imul
lret
fnsave
in
bound
or
lahf
test
fs
xchg
stos
lsl
xchg
and
inc
adc
adc
xchg
bnd
out
dec
sub
mov
mov
lahf
iret
loopne
clc
fadd
pop
dec
cmp
push
inc
push
xchg
decb
jmp
jns
jbe
sbb
inc
imul
xchg
lock
fmull
jmp
lods
jnp
je
xor
div
jmp
and
xchg
mov
jl
cmpsl
jmp
add
test
push
sarl
movsb
addl
xchg
add
ret
out
mov
add
ljmp
in
jo
movsb
hlt
insb
ljmp
hlt
test
les
insb
jle
jp
mov
cmp
jge
orb
test
mov
xlat
jns
jecxz
mov
jle
repnz
add
lock
in
in
jae
cmp
jne
je
cmp
push
ret
mov
or
cld
mov
mov
sbb
in
jge
shl
int3
fdivl
sbb
cmp
test
dec
rolb
cmp
mov
sub
in
cld
mov
jae
pop
fdivrl
lods
fs
push
sbb
hlt
xchg
cwtl
mov
je
inc
inc
add
rclb
pop
sar
cmpsb
mov
loop
fsubr
mov
in
hlt
cmp
dec
leave
leave
jl
fsubs
aam
jnp
cmp
imul
fnstcw
mov
daa
insl
jmp
test
fwait
mov
lcall
ljmp
in
add
js
aad
ret
cmp
movsb
mov
xor
mov
mov
scas
add
insb
mov
cmp
loop
leave
xchg
jl
xchg
mov
hlt
enter
filds
fisubl
in
hlt
and
movsl
inc
mov
mov
les
in
in
js
sbb
jl
cmp
aas
jp
popa
js
hlt
lcall
call
f2xm1
jnp
mov
cld
fdivrs
or
rcr
jne
xchg
dec
loop
mov
adc
xor
dec
adc
push
lahf
fiaddl
jp
rolb
lea
jns
xchg
jne
leave
cld
in
test
in
imul
pushf
stos
in
int3
mov
mov
cld
push
push
out
pop
inc
out
xchg
hlt
xchg
add
cld
pop
insb
xchg
mov
je
mov
ljmp
loope
in
scas
xor
mov
faddl
popf
dec
adc
jl
in
rolb
clc
xchg
cmpsb
addr16
int3
inc
rclb
loopne
ljmp
fdivr
xchg
pop
hlt
inc
mul
push
out
movsl
sub
add
ror
mov
jmp
or
test
jle
rclb
out
sti
mov
mov
and
and
insl
and
lock
enter
insb
mov
lods
in
jnp
std
call
dec
repnz
adc
cmp
repz
neg
ljmp
movsb
in
ljmp
sbb
mov
pop
inc
lea
aaa
sub
aas
int
mov
in
scas
adc
aam
outsb
pop
loopne
jge
ret
pusha
xchg
cli
jmp
in
shrl
fildl
pop
movsb
jl
scas
js
mov
jmp
cs
pop
sar
add
loop
add
mov
out
cmp
in
add
sar
or
icebp
or
orb
div
mov
arpl
popa
mov
pop
test
sub
mov
orl
add
cwtl
js
dec
sub
test
orl
std
in
xlat
in
jge
and
test
sarb
out
sbbb
sub
xchg
cli
jne
inc
mov
or
cmc
mov
push
hlt
orb
in
dec
arpl
movsb
inc
mov
push
scas
not
in
das
mov
xchg
fdivrl
pop
cld
loopne
clc
dec
je
jmp
lods
test
add
repnz
xchg
jmp
push
pushf
inc
mov
lock
or
fs
xchg
pop
fisubs
int3
cld
iret
repz
dec
push
mov
int3
es
pop
mov
je
push
dec
ds
cltd
lods
in
aaa
push
test
mov
movsb
push
jp
sub
xchg
ret
hlt
enter
xchg
je
lods
xchg
adc
mov
inc
shl
stos
ljmp
in
movsb
sarb
daa
incl
outsl
cmc
call
cltd
mov
dec
or
push
sti
in
pop
ret
xor
push
cwtl
nop
mov
fsubrp
mov
cwtl
je
test
fdivr
pusha
xor
cld
cltd
lcall
and
loopne
pushf
mov
jo
inc
mov
sbb
inc
je
mov
mov
stc
mov
xchg
inc
push
cmp
cmp
jecxz
and
out
jl
hlt
xchg
stos
mov
stos
cmp
out
test
xor
push
out
mov
xchg
mov
push
pop
xchg
push
insl
andl
lahf
les
push
jp
xor
int3
icebp
pop
mov
mov
jmp
loop
xor
mov
inc
mov
inc
repz
xchg
loop
cs
sti
xchg
test
add
jno
sbb
sbb
jl
iret
mov
jbe
pop
jne
out
mov
xor
jae
mov
mov
pop
jb
jmp
mov
mov
les
mov
fcompl
sbb
scas
pop
aad
icebp
mov
aam
test
mov
clc
cmpsb
out
jle
repz
ret
test
mov
add
jecxz
sub
mov
out
mov
jle
and
fucomip
xchg
loope
mov
mov
xchg
leave
mov
sti
in
mov
ret
cmp
repz
lods
test
jae
sbb
fmuls
cmp
sar
lcall
add
cmpsb
fmull
xlat
mov
add
aas
cmp
pop
ljmp
xor
enter
out
fcompl
je
and
rcl
or
adc
sti
adcb
aaa
rcr
add
bound
jmp
mov
in
stos
repz
lss
stos
sbbl
dec
mov
lock
xchg
scas
pop
sub
test
fnsave
arpl
aaa
mov
pop
xor
cwtl
fistps
repz
insb
or
insb
outsl
xchg
inc
loop
mov
xchg
xor
hlt
mov
loop
cmp
test
pushl
mov
ret
cmp
ret
push
das
clc
cld
adc
incl
pop
addr16
add
adc
xlat
and
flds
mov
sti
xor
push
mov
jbe
pusha
out
sbb
aam
loope
fadds
push
fisubrl
and
repnz
out
mov
inc
pop
jmp
sbbb
inc
sub
lret
insb
insb
je
loope
mov
andl
iret
xor
insb
push
xlat
out
movsb
in
mov
sub
cltd
movl
cmpl
popf
add
and
movsb
sbb
sti
sbb
clc
cmp
div
add
sbbl
ret
fsubrs
sub
loopne
in
in
cld
inc
pop
add
cmc
inc
pop
jb
add
in
pop
push
andl
jb
add
pop
addr16
mov
pop
test
and
jo
inc
loopne
and
or
ficomps
jmp
test
sbb
dec
jmp
jmp
push
jne
stos
add
pop
or
addl
cld
stos
inc
add
xor
xchg
ss
arpl
add
mov
shlb
pusha
filds
popf
and
iret
fistpll
mov
and
je
xlat
jns
ret
mov
add
sub
adc
inc
add
cs
push
fiadds
push
je
push
mov
mov
loop
jmp
sarb
shlb
add
rcr
insb
pop
and
test
add
push
subb
or
inc
pusha
hlt
rorl
and
loop
pop
sub
sahf
out
flds
loop
push
mov
cld
cmp
pop
pushf
xchg
fsubrs
stos
ds
popa
pop
test
jg
in
push
mov
out
loopne
inc
add
sub
repnz
mov
pop
ret
test
mov
pop
mov
fcmovb
cmp
mov
adc
loope
aam
ds
inc
push
add
sti
cld
dec
mov
into
and
cmp
add
or
pop
hlt
jmp
decl
and
fisubs
mov
popa
cli
imul
adc
jb
std
jno
mov
inc
sub
loop
add
mulb
pop
jnp
mov
arpl
xchg
mov
repz
xchg
cltd
movsb
jle
and
in
dec
mov
imul
push
fsubr
test
add
xchg
mov
add
ffreep
in
adc
mov
add
cli
mov
movsb
jo
add
arpl
je
adc
mov
fsubrl
idivb
mov
add
sub
push
cli
gs
dec
and
repz
mov
das
fdivl
aas
add
add
and
test
pop
sbb
and
jo
fidivrl
push
mov
repnz
fisubl
aam
fcompl
fucom
loope
cmp
pop
xchg
add
fdivrs
pusha
sub
nop
popf
pusha
xor
dec
and
insl
adc
shlb
out
sub
clc
sbb
subl
movsb
dec
inc
aad
jl
xor
adcb
lods
sti
sti
lret
lods
js
cmp
test
cmpl
mov
dec
pop
stc
icebp
adc
idivl
and
jnp
aas
mov
and
and
and
xchg
test
testb
push
xor
dec
in
aam
mov
jg
push
insb
or
sub
outsb
push
cmp
cmp
and
jmp
rolb
jg
shll
das
int
mov
cltd
and
cmp
fs
mov
cld
aad
andl
orl
jl
lods
arpl
jnp
dec
mov
test
lods
push
add
inc
int
pop
leave
in
mov
sub
das
sbb
dec
jo
push
dec
mov
mov
call
lret
mov
es
test
subl
lret
adc
and
dec
and
pop
and
sbb
pop
mov
or
inc
add
inc
xor
iret
push
and
icebp
and
sub
dec
lcall
sub
mov
cmc
push
lods
adc
jl
repnz
xchg
xor
fisttpll
jmp
shll
adc
cmp
fcomps
adc
add
jb
push
xchg
lahf
add
in
fsubl
cmpsb
inc
sbb
jbe
cld
adc
test
lret
rclb
adc
arpl
push
test
insb
mov
arpl
inc
push
push
in
mov
pusha
std
mov
jle
jae
fwait
and
cwtl
movsb
xchg
shr
jne
adc
stc
xchg
das
add
fs
sti
hlt
mov
ret
push
mov
aam
inc
sub
les
jl,pn
pop
pop
loope
ret
test
hlt
inc
clc
rorl
add
repnz
repz
loopne
fadds
sub
jle
bnd
rcrb
sar
lcall
in
add
mov
sar
lret
cwtl
notl
sarb
test
insb
hlt
xor
pop
cld
sub
pop
mov
imul
and
mov
push
mov
fimull
gs
bound
jl
loope
shll
mov
stos
jl,pn
pop
fs
ret
test
push
hlt
jle
mov
pop
dec
out
add
stos
fidivrs
lods
mov
or
in
movsb
mov
jne
jle
clc
sti
repz
notl
and
cmp
test
pop
jp
lods
pop
jg
fmull
sub
pusha
xchg
push
inc
sqrtps
cmp
mov
mov
xor
mov
jl
lods
aam
xorl
sbb
lds
or
rcr
popa
mov
imul
mov
cmp
ljmp
js
pop
jae
mov
mov
sbb
jne
out
aad
sub
psadbw
aam
jb
adc
je
fiaddl
adc
insb
mov
xor
add
and
mov
std
dec
ljmp
jle
xchg
mov
xchg
mov
aam
popf
popa
lods
mov
cmc
pop
cmp
mov
pusha
pop
and
pop
cmpsl
add
xchg
push
and
adc
adc
mov
or
mov
orb
inc
loopne
lret
add
movsb
pop
aam
fiadds
or
aaa
xor
orl
ftst
int
sub
les
popa
test
mov
movsb
popa
pop
cmc
mov
aas
push
repz
repz
dec
cld
pop
mov
inc
sub
aaa
fisubs
mov
ret
movsb
icebp
mov
in
stos
fsts
jg
fdivl
mov
loop
jns
push
std
les
bound
add
mov
mov
jecxz
fstp
adc
loopne
subb
loope
xchg
lret
je
cmpsb
sub
xchg
lods
jo
fidivrs
imul
sub
fldt
mov
ret
mov
call
sub
xor
adc
jecxz
ret
mov
push
addb
sti
cli
xor
push
inc
mov
xchg
mov
mov
fdivrs
ljmp
out
shrl
add
sbb
push
iret
and
sbb
fldt
jae
ret
and
adcl
cmpsl
fcmovnu
mov
cli
ret
adc
out
and
je
ret
and
inc
jl
cmp
jp
je
cmp
sbb
cs
rcr
imul
scas
xchg
fwait
inc
bound
scas
mov
nop
lock
movsl
adc
sub
cmp
cmc
xor
mov
insb
push
fcoms
in
mov
cwtl
jg
cmp
inc
push
sar
mov
cmp
or
push
out
bound
inc
jno
into
mov
jecxz
jecxz
shlb
stos
jno
loope
insb
push
addr16
inc
xor
in
aam
mov
dec
test
std
mov
lods
jnp
xor
and
push
mov
repnz
and
mov
inc
and
lret
rcrb
or
je
fwait
adc
add
lret
loope
add
ss
loop
add
loop
sbb
sbb
mov
push
mov
hlt
loope
fcomi
faddl
fs
xor
push
pop
and
cmpb
repnz
cmpsl
sti
sbbb
shl
pop
mov
out
or
push
fdivl
jmp
xor
add
mov
adcl
sbb
pushf
shrb
adc
and
jl
insb
mov
loope
adc
push
and
xorl
and
pusha
add
mov
lea
aas
jnp
sti
and
and
jae
into
jl
jnp
fwait
push
aam
leave
mov
lods
aas
lcall
cltd
mov
cld
popa
mov
jecxz
and
sub
xor
ja
loope
lds
lahf
sbb
mov
ror
test
iret
add
and
pusha
push
clc
insl
ret
pop
mov
mov
in
push
push
lods
insl
mov
jo
inc
rcll
bound
inc
mov
ret
jnp
inc
in
int3
push
mov
cmp
jp
pushf
insl
fdivl
loopne
adcl
int
lahf
es
arpl
fidivs
icebp
xchg
hlt
mov
cmp
mov
mov
lret
pop
lcall
jp
sub
xlat
push
pop
adcl
hlt
movsl
and
lods
inc
movsb
stc
cmpsl
cmp
lods
or
push
pop
testb
addr16
sub
faddl
pop
aam
pop
xchg
insb
dec
pushf
mov
orl
outsb
jb
scas
ficoms
mov
jno
xor
mov
or
insb
jecxz
test
fnsetpm(287
lds
jle
aam
cs
and
inc
in
stos
cmp
int3
mov
aam
fisubs
dec
ds
fistpl
sbb
into
mov
mov
frstor
gs
sti
mov
std
std
mov
add
mov
jge
cld
mov
add
insb
and
push
mov
shll
lret
es
sbb
loopne
je
or
mov
mov
loopne
in
fst
mov
leave
loope
add
add
fs
sub
jno
sbbb
and
mov
adc
lods
cmp
dec
movsb
insb
pop
or
sbb
in
cmpsl
and
ret
rcrl
xchg
inc
push
test
cltd
shll
mov
ret
mov
and
ret
jl
repz
subl
in
ss
les
int3
jmp
mov
cmp
fldl
mov
lods
fldl
loopne
mov
movsb
cld
mov
push
ja
mov
mulb
movb
adc
popa
iret
lea
in
xchg
lock
shll
xchg
xor
jg
or
cmpsl
cld
sbb
hlt
ja
outsl
mov
in
ja
cli
mov
push
xor
ja
fistpl
jns
ret
pop
fcmovbe
loope
cmp
inc
and
outsl
roll
lcall
loope
add
pop
loope
sub
pop
dec
push
xchg
mov
mov
lods
xchg
test
ljmp
fidivrs
lahf
pop
std
loope
jp
inc
mov
or
mov
xchg
inc
cltd
jae
lret
pop
repz
mov
lret
in
mov
mov
sub
je
and
push
add
add
or
push
sti
mov
shll
mov
mov
movsb
mov
inc
pop
movsb
sbb
push
mov
xchg
nop
imul
push
xchg
add
mov
sub
inc
add
lock
sub
mov
scas
movsl
mov
repz
push
js
adc
ret
pop
ret
fistpl
inc
mov
pusha
addr16
fildll
lods
or
pop
jmp
mov
add
ret
jp
sbb
and
lods
sbb
bsf
pop
je
fcoml
add
push
loopne
mov
add
mov
stos
shll
adc
dec
je
in
cmp
dec
out
jnp
aad
fildl
test
pop
arpl
pop
inc
cld
adc
sbb
push
xorl
push
sbb
jmp
mov
pop
loop
stc
sahf
jb
imul
or
cwtl
movsb
sbb
jo
rcr
xor
inc
pop
and
and
mov
or
fmull
jecxz
je
les
cmp
add
xchg
loope
push
inc
pop
mov
pop
push
sbb
dec
and
arpl
aas
sub
daa
nop
mov
into
mov
dec
fisubl
mov
in
mov
popf
push
and
jnp
sub
mov
ret
je
les
mov
xorb
test
sbb
je
movsb
cmp
adc
fs
and
pop
fcmovne
pop
lods
aaa
mov
jns
adc
repz
cs
pop
jae
fs
ljmp
push
test
adc
xchg
lcall
mov
inc
xor
push
and
jl
mov
sarb
mov
loop,pt
inc
in
shrb
pop
jo
or
sbb
mov
inc
scas
jmp
std
mov
lret
and
mov
xor
cmpb
outsb
in
and
sbb
sbb
les
hlt
sub
inc
jg
cwtl
loopne
xchg
pop
sbb
and
icebp
xor
cmpsl
dec
inc
adc
cmp
rclb
mov
loope
les
xchg
outsl
lods
in
les
jl
jo
lahf
xchg
lahf
imull
imul
outsl
sbb
mov
adc
mov
fisubs
fwait
push
imul
ret
ljmp
out
xor
in
subb
je
call
xor
mov
je
xor
shr
sub
aad
icebp
adc
test
lahf
mov
cmp
into
das
repnz
popa
cmpsb
inc
xchg
cmpsb
push
loope
fildll
out
push
push
les
pop
adc
pop
xchg
pop
imul
ret
cmc
fidivs
ljmp
hlt
push
fcoml
pusha
lret
cmp
xor
inc
aad
mov
jp
push
addb
jp
imul
outsl
dec
adc
cmpsb
mov
in
aas
rcrl
into
inc
mov
lods
loop
mov
outsl
pop
shrl
sbb
cmpl
sub
testl
fisttpl
xchg
sub
out
xchg
test
les
cmp
pop
jecxz
ror
cmp
in
mov
cli
mov
lret
fists
fmull
push
jecxz
mov
ficoms
push
xchg
roll
ja
es
dec
fidivl
lret
les
sub
fsubrl
xor
mov
cmpsb
fnsave
and
mov
mov
movsbl
ret
test
pop
pop
cmp
in
stos
or
sbb
jl
cli
lock
xchg
jp
loop
iret
mov
pop
stos
movsl
push
js
adc
sbb
je
nop
inc
stos
mov
and
je
ret
je
inc
xor
sub
cmpsb
les
xorb
ret
popa
frstor
loope
and
rolb
lahf
pop
ljmp
sbb
mov
adcl
dec
je
xor
sbb
pop
add
pop
mov
dec
sbb
and
sbb
mov
test
mov
mov
dec
sbb
loope
in
fidivl
in
fwait
inc
cld
dec
test
or
mov
push
mov
push
ret
inc
nop
add
jge
sub
jl
cltd
or
and
mov
lods
sbb
or
or
fdivr
or
adc
inc
jmp
out
int3
test
jae
pop
cmp
shll
mov
jmp
out
sahf
inc
popf
mov
mov
aas
jmp
inc
sbb
mov
xor
and
cmp
xchg
jmp
mov
inc
sub
fwait
ljmp
sub
aas
mov
xchg
test
push
fdivs
inc
imul
fidivl
mov
into
mov
mov
loope
fucomi
inc
xchg
imulb
dec
adc
mov
fcoml
scas
shll
repz
fiaddl
jno
inc
dec
fistps
call
add
repnz
rcll
scas
mov
sub
sbb
xor
cmp
mov
loopne
mov
shrb
mov
inc
lret
pop
flds
aad
dec
enter
dec
sbb
sarb
lahf
or
jle
fwait
mov
lock
pop
loope
stc
adc
fiaddl
xor
sbb
xor
adc
jo
imul
xor
add
dec
mov
shrb
pop
leave
repnz
sbb
insl
das
out
adc
xchg
popf
mov
pop
lret
mov
or
jno
add
pop
popf
sarl
fwait
in
add
jns
es
mov
jnp
mov
push
arpl
mov
rol
bound
orb
std
fwait
lcall
mov
or
push
lret
push
lds
fs
mov
sbb
ret
push
sbb
jns
cltd
mov
rcll
fdivl
loope
adc
push
stc
popf
inc
pop
push
adc
arpl
mov
add
insl
pop
shl
ret
cs
mov
gs
fwait
mov
bound
movsl
jmp
cmpsb
jl
movsb
fs
jmp
cmp
lea
scas
inc
mov
movsb
faddl
cmp
pushf
jg
stos
xor
sbb
xchg
into
inc
dec
imul
aam
in
fdiv
movsl
mov
mov
aad
jecxz
popa
cmp
inc
sbb
jle
imul
icebp
cmp
ret
and
or
sub
push
sub
insb
xlat
pop
mov
les
push
pop
dec
loopne
sub
lret
js
faddl
push
or
adc
je
xor
jmp
push
dec
sbb
js
mov
xor
mov
mov
mov
and
push
mov
xchg
mov
inc
ret
lret
popf
mov
mov
fists
and
push
or
xchg
mov
je
xor
sub
adc
addb
mov
and
int
cmpsb
inc
mov
sti
rolb
jmp
sub
jecxz
orb
fildll
loopne
fs
or
arpl
aaa
xchg
xor
xchg
push
pop
and
xor
imul
mov
jecxz
les
cmp
int3
inc
jp
or
loope
or
mov
dec
test
lea
mov
test
inc
outsl
sub
imul
sbb
ret
jnp
add
mov
shlb
add
test
jl
loop
lods
sbb
adcl
and
scas
jae
js
pop
test
jp
das
loopne
mov
inc
xor
cmp
ret
sub
pop
push
fdiv
jo
popa
jmp
and
test
arpl
shl
popa
mov
push
les
sbb
popa
daa
mov
xchg
pop
jae
sub
push
jp
push
xchg
cmp
dec
pop
in
pop
sarb
ja
insl
mov
loope
and
insl
sub
and
inc
sti
cmpl
fstps
sbbb
and
lahf
sti
test
roll
add
clc
and
xor
frstor
and
pop
pop
in
sbb
popf
stos
dec
mov
pusha
imul
adc
out
dec
cmp
and
push
mov
test
popa
ret
into
imul
mov
and
and
sti
adc
out
das
stos
adc
mov
pop
and
je
mov
lret
push
sub
fcompl
je
rcl
xor
sub
test
addr16
jae
dec
loop
outsl
mov
dec
mov
fistpll
lret
shrb
fisubs
arpl
add
je
shl
mov
xchg
mov
xor
jl
pop
lret
sti
fdivs
in
adc
frstor
test
jp
lock
add
mov
mov
push
sarb
inc
mov
mov
mov
in
push
repz
sub
ret
nop
insb
mov
fstps
mov
subb
imul
loop
add
jns
inc
and
pop
jo
jns
into
cld
insb
sbbl
aas
bound
mov
push
cli
dec
loope
mov
adc
xchg
insl
aad
repz
in
xor
mov
push
jp
aaa
mov
or
loop
notl
sahf
sbb
jo
jg
adc
outsb
inc
xor
stc
cli
pop
xchg
jnp
arpl
sub
mov
push
les
lock
les
and
mov
adc
aad
and
nop
adc
cltd
stos
cmp
mov
nop
mov
adc
fdivl
xlat
or
adc
movsb
adc
mov
pusha
adc
pop
ret
leave
and
fdivl
test
in
iret
mov
mov
rcll
jecxz
icebp
mov
std
ljmp
mov
fcmovnb
add
inc
cmp
inc
test
xor
add
lods
paddq
pop
repz
ret
out
pusha
fsubs
mov
or
js
movsb
sahf
or
out
push
mov
and
mov
cmp
loope
aam
mov
fistpll
mov
mov
aam
mov
lds
inc
cmp
pop
push
jle
test
mov
jns
shl
loopne
rcr
sub
cmpsl
test
stos
push
sbb
and
push
mov
jge
lods
test
cs
mov
add
fadds
sub
jnp
xor
and
pop
jo
jecxz
mov
loope
push
sub
xor
lods
push
jo
cli
test
cmc
adc
lcall
pop
lods
mov
sub
in
adc
imul
imul
mov
fdivl
repnz
mov
sbb
jb
mov
jl
push
sti
adc
bound
dec
jns
xor
mov
sarb
xchg
xor
cmpl
ret
mov
popf
pop
pop
dec
adc
lret
rclb
adc
fimull
xlat
adc
add
sbb
ds
and
int
jg
mov
add
push
je
sti
mov
inc
mov
shlb
mov
cmp
sti
rcll
sbb
daa
shl
aaa
sbb
xchg
mov
jecxz
in
sub
dec
cmp
jne
ds
loop
jne
test
sahf
lds
add
movsl
xchg
sbb
cmpsl
aad
ljmp
leave
je
mov
xchg
jecxz
pop
lcall
xor
mov
or
test
sbb
out
mov
in
mov
cmc
loope
iret
sarb
rcrb
std
negl
cld
inc
lret
popa
mov
in
loop
and
adc
and
leave
mov
mov
shll
cmp
pop
or
push
pop
in
mov
adc
test
sub
mov
and
and
mov
fwait
pop
mov
sahf
xor
movsb
stos
and
jl
cmp
xor
and
inc
sub
lea
cli
cmpsb
and
dec
xlat
pop
jo
out
ret
adc
mov
ds
jnp
js
sahf
repz
pop
xchg
mov
insl
sbbb
and
push
sub
add
sbb
push
lock
mov
hlt
je
js
popf
xor
addr16
xor
dec
xor
sti
dec
fdivrl
vpmaxub
mov
push
push
add
loop
fs
es
ret
and
pop
push
jne
je
fldt
lods
and
insb
add
je
or
fcomi
jbe
repnz
arpl
scas
dec
and
mov
add
cmp
fs
lock
cmp
mov
push
cmpsl
pop
mov
jb
mov
lret
pop
or
jp
cli
lds
mov
push
and
insb
gs
inc
rcr
jns
push
clc
in
jmp
xchg
nop
add
pop
mov
or
and
stc
repnz
out
adc
dec
js
and
mov
inc
jno
jge
sahf
rcrl
or
jge
repnz
add
add
pop
jecxz
into
ret
sti
sbb
mov
repnz
arpl
jo
xor
mov
cmp
xor
cwtl
loop
stos
dec
and
sahf
ja
ret
lods
xlat
iret
sub
jge
jmp
mov
and
push
pop
arpl
mov
inc
loope
lret
sub
sub
or
and
mov
push
in
aaa
jo
bound
and
pop
lcall
negb
jbe
lods
cltd
mov
pop
dec
sarl
and
and
push
add
push
btc
pop
and
adc
pop
mov
mov
jo
dec
js
out
dec
push
pop
loope
mov
and
rolb
fidivl
xor
hlt
cmpsl
adc
aam
loopne
lahf
mov
xchg
cmp
movsb
mov
je
cmp
outsl
in
dec
sbb
cmpsb
push
cmpl
cmp
and
imul
push
and
fsub
movsb
scas
out
pop
mov
add
cltd
arpl
jecxz
sbb
cmpsl
faddp
xor
shll
push
mov
jecxz
movsb
aam
lret
jecxz
xorb
push
adc
cs
sti
inc
sbb
sti
cmp
push
inc
lock
idiv
push
pop
pop
frstor
ret
inc
and
pop
jno
insb
cmp
cmc
loop
jmp
mov
sbb
je
shl
insl
push
lret
add
iret
test
shrl
loope
repnz
subl
jmp
pop
roll
cmpsl
aam
das
dec
ret
shrd
mov
lret
loope
shr
insb
loope
aaa
fisubl
fs
loope
mov
cmp
mov
lds
jb
push
and
iret
pop
xor
push
out
dec
insb
mov
mov
xor
loopne
adc
out
lcall
loope
sahf
stc
inc
flds
cmp
hlt
jno
sarb
jnp
ret
insb
pop
popf
mov
inc
mov
repnz
mov
mov
jecxz
fadds
movsl
push
adc
mov
xchg
ja
mov
add
cli
shlb
jmp
adc
test
jl
repz
ljmp
jb
sarl
adc
loop
idivb
sbb
sahf
test
pop
stos
sbb
aas
icebp
rcll
into
add
xor
cmpsl
je
in
std
into
lret
and
ja
fs
loop,pt
les
xchg
adc
shll
push
add
or
or
xor
test
rcrl
lret
and
lret
mov
sub
scas
aaa
int3
je
sti
xchg
lods
outsl
pop
fimuls
sti
dec
and
mov
sahf
cmp
pop
test
adc
lahf
and
in
add
lret
iret
in
insl
and
and
outsb
je
out
incl
ljmp
stos
mov
add
mov
jno
pop
jae
mov
pop
and
and
mov
adc
and
cmpsw
mov
inc
or
sbb
ds
mov
test
jmp
out
dec
call
mov
dec
mov
xchg
add
sub
and
insb
pop
mov
and
movsl
icebp
call
movsb
ffreep
mov
fdiv
mov
je
push
hlt
orb
adc
bound
xor
cld
xchg
popa
out
xor
mov
adc
or
lahf
cmp
and
pop
je
xchg
inc
fbstp
lods
into
inc
inc
jecxz
lds
sahf
aaa
mov
adc
inc
outsl
faddp
add
cli
lock
test
setbe
out
mov
inc
test
rclb
mov
pand
mov
call
clc
shll
jae
mov
cwtl
fnstenv
xchg
or
sti
roll
call
cmp
push
mov
ficompl
cmpps
add
sub
lods
xor
ret
rol
adc
out
jecxz
inc
lds
cmp
rorb
gs
out
aad
out
movb
dec
ficompl
or
movq
in
xlat
push
out
packsswb
push
inc
rorl
orb
stos
iret
fs
mov
fwait
aas
inc
jnp
push
adcl
filds
mov
in
mov
xor
je
stos
out
jecxz
ds
xchg
dec
inc
test
mov
pop
fwait
hlt
aaa
inc
or
inc
add
inc
cli
stos
pop
fdivl
inc
repnz
pop
fwait
aam
inc
ljmp
loop
pop
sti
les
mov
lock
mov
mov
gs
push
xor
jnp
mov
adc
fcompl
jmp
push
sbb
leave
pop
ret
add
lds
mov
dec
jno
lods
add
outsl
pusha
ljmp
xor
pop
sbb
jge
fcoml
xchg
stos
dec
test
mov
mov
add
mov
sbb
and
xor
pop
lock
pop
cld
mov
fucomip
sub
outsl
mov
stos
push
jecxz
lret
mov
pop
inc
add
or
int
arpl
cmpsb
fs
nop
adc
jb
mov
jno
ds
add
mov
ljmp
xchg
popf
jo
inc
pop
test
adc
adc
add
cld
sbbl
and
loopne
insl
out
outsb
and
push
xor
xchg
xchg
mov
repnz
lahf
fsubrs
pop
mov
add
pusha
lods
push
imul
pusha
xchg
xchg
fwait
ret
sarl
jp
jb
cmc
mov
loopne
mov
les
jbe
loope
arpl
inc
and
sbb
cmp
pop
dec
pop
and
pop
das
jle
shrl
cmp
fildl
fnstcw
jmp
shll
sbb
fldenv
in
sub
bound
cld
pop
int
mov
mov
cld
sbb
xor
les
les
repz
pop
inc
rorb
cwtl
sarl
xor
mov
cs
sbb
mov
pop
add
js
adc
and
jnp
inc
hlt
xchg
mov
sahf
rcrb
inc
fidivs
jns
add
xchg
into
mov
mov
mov
cmp
leave
cmp
mov
jecxz
std
ljmp
aaa
test
xchg
mov
les
add
aaa
push
std
xchg
dec
pop
insb
movsl
xor
adc
jecxz
xor
xchg
xchg
fucomi
repnz
icebp
movsl
pop
jo
int3
shl
pop
iret
add
inc
push
pop
cmpsb
dec
mov
xchg
add
push
out
in
hlt
cmp
imul
mov
pop
fistl
fstpt
ficoms
mov
repnz
lds
jb
stos
addb
adc
jae
jo
jecxz
subl
ffreep
shlb
loope
insl
bound
jb
or
push
outsb
or
in
rcr
and
cmp
inc
jle
sub
ljmp
jl
rcrb
call
incl
add
xchg
ljmp
mov
gs
loopne
in
test
xchg
jno
xor
cmp
popf
or
in
insb
add
xchg
sub
and
mov
jle
jae
ror
into
rolb
dec
rcr
mov
push
push
ja
xchg
inc
jl
jns
rcr
fistl
ret
repz
or
loope
repz
jns
and
pop
push
sbbl
jmp
loope
mov
loope
popl
mov
shll
inc
xorl
les
pop
dec
and
in
mov
adc
aaa
rep
jl
lret
les
andl
sahf
movsb
and
fisubs
xor
mov
ficoml
movsb
xchg
les
in
mov
adc
adc
fistl
mov
lods
nop
lock
fidivrl
mov
fdiv
mov
lods
adc
pop
fwait
rcr
test
in
mov
mov
mov
sbb
lret
mov
bound
inc
mov
arpl
xlat
popf
je
mov
loop
and
aad
sbb
and
subb
or
in
and
mov
cmc
adc
jecxz
ja
loope
dec
in
add
outsb
es
test
ss
loopne
push
ret
or
inc
test
scas
ror
sbb
xor
cmp
lds
lahf
pop
push
jno
cmp
ss
rcrl
mov
or
mov
cwtl
jae
fs
insl
push
rcll
add
in
xor
sbb
jns
xchg
fcompl
push
xchg
cmp
fdivrs
sub
nop
das
pop
add
mov
cmp
or
repz
sub
ret
cli
add
inc
in
jns
push
addb
xchg
xor
int3
push
mov
fs
push
repnz
in
fiaddl
fs
int
mov
jae
or
fcomps
fsubrp
mov
in
aad
and
add
aam
adc
test
cmc
insb
call
sub
scas
jns
xor
fcmove
bound
test
or
xor
es
repz
mov
adc
mov
shll
in
add
xchg
cmp
adc
andl
xor
jne
mov
mov
jno
arpl
xor
repz
and
xchg
sub
add
gs
push
mov
adc
and
mov
cmp
shrl
and
popf
jo
mov
test
and
cmp
ja
mov
or
and
ss
movsb
aas
testl
mov
adc
inc
repz
lods
dec
sahf
insl
jmp
xor
repz
xor
hlt
cmpsb
pop
repnz
outsl
int3
dec
icebp
adc
or
xchg
mov
mov
xchg
int3
lock
pushf
test
mov
in
add
mov
rorl
lds
aad
insb
rcrl
bound
mov
mov
cs
or
cmpsb
jecxz
or
repz
movb
sub
fisubl
addb
push
and
cli
jb
dec
cmpl
fld
testl
lahf
cli
jo
andl
jecxz
popf
or
fwait
lods
and
cmp
sub
xlat
adc
cmp
insl
xchg
cmp
inc
cmc
xor
shrb
clc
ret
xchg
jecxz
cmpsb
fstp
mov
mov
loope
dec
xor
and
adc
in
clc
mov
or
rcrb
dec
std
mov
mov
cmp
xchg
cld
or
jp
mov
cmpsl
pop
adc
mov
mov
mov
or
test
dec
fsubl
and
mov
jmp
lea
xlat
xlat
fisttpl
mov
add
fdivl
lock
inc
aam
jae
adcl
jae
into
sbb
add
dec
adc
and
fwait
test
jg
popf
addr16
mov
repnz
mov
aam
inc
jmp
adc
mov
lds
dec
pushf
add
mov
es
loop
arpl
inc
inc
or
cmpsl
jmp
aas
repnz
jmp
imul
sbb
sbb
cmp
cmpsb
push
mov
add
cld
sub
mov
cmp
adc
inc
sub
cli
sub
ss
pop
pusha
add
incl
sbb
flds
cwtl
mov
loop
les
subl
push
dec
lret
lret
cwtl
loop
imul
xchg
cmp
xlat
adc
mov
sbb
dec
inc
sahf
scas
repz
aam
ret
mov
loop
or
mov
add
addr16
scas
push
scas
loope
jecxz
mov
jae
jecxz
imul
call
add
adc
test
mov
pop
mov
loopne
mov
adc
sub
addl
pop
bound
dec
or
fcmovnb
pop
into
ds
arpl
arpl
mov
pop
dec
rolb
fwait
in
mov
cmp
mov
and
xchg
fldl
loope
shll
nop
mov
cld
fsub
push
add
xor
push
gs
sbb
xor
arpl
mov
mov
xor
cmp
stos
cmp
sbb
jge
xor
lods
js
mov
push
cld
daa
push
pop
jnp
les
cmc
mov
mov
mov
pop
push
fmul
inc
out
mov
xor
add
mov
add
shll
aaa
mov
ljmp
inc
repz
dec
bnd
dec
mov
test
sbb
jae
add
andb
push
ljmp
cmp
inc
test
pop
xor
xchg
adc
loopne
bound
sbb
sbb
stc
jb
xchg
cli
js
sub
dec
cmp
mov
outsb
aaa
xchg
pop
and
data16
js
lods
repnz
outsb
mov
push
add
xor
in
sub
mov
pop
push
loope
jl
rolb
clc
pop
les
inc
sahf
cwtl
mov
leave
adc
stos
or
loop
dec
dec
xchg
fs
cmp
or
xor
mov
and
loop
cli
arpl
imul
xchg
adc
shl
lahf
push
out
cmp
pop
stc
jbe
mov
inc
icebp
repz
mov
adc
jle
push
outsl
popa
adc
and
jg
arpl
inc
mov
popa
mov
mov
jnp
and
in
outsl
push
loope
sbb
fwait
test
dec
daa
push
mov
loopne
pop
adc
sub
jno
test
inc
test
jmp
push
and
shlb
loop
xchg
js
lahf
xchg
push
ret
xchg
loop
sub
cmpsl
cmp
or
jmp
addb
add
pop
mov
sti
inc
push
repnz
jae
dec
add
and
mov
scas
mov
ret
lock
cli
mov
addb
and
inc
push
pop
repnz
pop
popf
lret
inc
sub
rcll
lret
jmp
jns
mov
add
mov
aas
and
xor
out
mov
mov
mov
cmp
sub
jns
jo
add
subb
jmp
push
loope
insb
pop
pop
mov
sbb
mov
aam
bound
pop
mov
outsl
int
sti
xchg
xor
out
mov
inc
imul
bound
not
ljmp
repz
pushf
je
dec
loope
and
push
stos
ss
jae
mov
cmp
outsb
por
popf
sahf
pop
xchg
movsb
fimuls
push
mov
add
mov
add
mov
jl
fs
bound
stos
std
andl
push
xchg
das
cld
and
jb
shll
hlt
cli
inc
mov
imul
out
adc
stos
jae
jp
cmp
jl
push
pop
inc
mov
or
orl
inc
in
cwtl
repnz
push
loop
mov
or
mov
sti
int3
push
repz
sbb
cmp
jl
jp
punpcklbw
cmp
sbb
adc
lods
mov
push
sub
cltd
mov
fidivs
insb
daa
sahf
jge
std
cmp
aam
flds
mov
and
ret
arpl
mov
int
fninit
cld
jbe
mov
cmpsl
mov
jae
push
outsl
mov
adc
push
repnz
orb
adc
inc
inc
int
stos
inc
pop
lods
js
and
or
mov
fsts
and
test
push
mov
fcomp
bound
adc
adcb
aad
sbb
lock
mov
addr16
mov
and
ljmp
arpl
jg
sti
mov
xchg
jmp
outsl
stos
roll
sub
out
cmp
sahf
lcall
add
mov
andb
sarl
push
adc
and
mov
loop
imul
cmp
mov
add
mov
inc
out
test
add
sbbb
cmpl
ret
mov
loope
es
mov
data16
fcoml
jge
repz
inc
lds
test
mov
jb
dec
cmp
clc
xchg
xor
lahf
orb
inc
xchg
or
iret
lods
sub
in
sarl
and
rcll
jno
push
inc
jge
sahf
leave
sub
xor
or
loopne
or
lock
arpl
loope
arpl
test
mov
stos
sub
popa
test
lret
shlb
mov
arpl
jle
sarl
test
push
ja
mov
mov
rorb
mov
mov
pop
mov
push
or
lcall
xchg
or
gs
fs
mov
add
roll
push
push
adc
lcall
xchg
shl
out
or
test
bound
jecxz
movsl
fxch
cmp
mov
xorb
cmp
out
adc
sbb
mov
fidivrs
bound
cld
dec
add
push
test
mov
add
add
sti
push
repnz
mov
xchg
int
or
hlt
loope
pop
mov
enter
fs
nop
mov
add
and
mov
mov
repnz
cmpb
popf
jp
cmp
fucom
gs
dec
scas
rorb
aam
adc
xlat
push
inc
repz
subl
fwait
jo
xor
loope
sub
mov
mov
add
jb
je
fstpl
add
and
inc
stos
fs
insl
push
jmp
jns
imul
add
fnstsw
pop
mov
mov
fistpll
jmp
test
fistpll
mov
inc
es
jo
ss
xchg
pop
add
lea
mov
subb
jle
inc
adc
andl
dec
push
test
sbb
xchg
add
gs
xor
mov
std
xchg
cmc
jp
sub
adc
in
xor
dec
test
cs
jl
test
rcrl
fs
popa
repnz
mulb
loop
add
sbb
add
loopne
andl
or
or
call
mov
dec
int
pop
push
movsl
push
add
push
cs
sbb
pusha
daa
or
popf
add
andb
data16
xor
and
jecxz
add
and
popa
frstor
sub
mov
cmpsl
cld
jle
dec
adc
cld
dec
push
add
push
sbb
in
in
les
test
hlt
jp
test
add
ljmp
push
add
std
cmp
hlt
ret
in
adc
gs
dec
adc
test
cld
add
loop
cs
fs
repz
cmpsl
jp
push
fcomps
inc
outsb
jecxz
adc
cld
ret
fcomp
icebp
in
cld
and
fcomp
mov
rclb
insb
je
jb
in
mov
xor
fwait
ja
pop
and
dec
fmul
in
loopne
or
ljmp
hlt
ret
cmp
loop
std
loop
leave
std
insl
add
and
fsubrl
repz
xor
repz
or
rcrl
add
pop
cs
pop
mov
in
aas
nop
nop
or
inc
loop
cmc
je
add
add
stos
bound
test
lret
popf
sbb
jecxz
push
ret
add
cmp
or
loop
arpl
test
dec
jo
sbb
adc
jg
sbb
sbbb
rcrl
fwait
cld
rcll
mov
out
mov
repnz
mov
push
push
and
cld
or
jg
inc
inc
in
and
popf
push
pop
xchg
loopne
andl
fcoml
cld
les
jae
add
add
xor
add
iret
cwtl
xorb
rol
mov
mov
in
mov
push
cwtl
adcb
jl
outsl
dec
jl
hlt
xchg
push
les
cmp
incl
jecxz
daa
sub
sub
lret
aas
jl
lock
sbb
push
lret
push
das
add
mov
rep
sub
pusha
push
clc
hlt
xchg
adc
add
jg
or
loop
jecxz
adc
mov
clc
in
mov
dec
test
clc
nop
mov
lret
cmp
add
ljmp
add
ljmp
push
in
popf
aas
stos
and
and
mov
fistpll
jae
es
mov
ljmp
lcall
cmp
pop
gs
adc
dec
cld
xchg
mov
sbb
mov
and
inc
mov
stos
push
loop
insl
sbb
fiaddl
xor
mov
add
xchg
lcall
jmp
xchg
out
or
mov
int
stos
test
xchg
je
lds
lret
jb
mov
pop
je
fdivrl
je
fcomip
mov
in
fs
loope
mov
aad
enter
inc
aaa
add
mov
rclb
outsb
push
mov
pusha
sti
les
inc
frstor
and
xchg
jnp
rorl
stos
out
mov
pushf
loope
mov
test
repnz
out
je
rcrb
sti
fwait
sbbb
mov
ljmp
ret
cmp
xor
add
add
xor
dec
sub
in
loope
arpl
dec
rep
fimuls
rorl
hlt
aaa
xchg
out
fs
xor
sarb
icebp
jp
movsb
hlt
xchg
jecxz
addr16
lcall
inc
add
testl
inc
outsb
jecxz
mov
or
sbb
mov
cmp
or
inc
lds
push
inc
in
and
fstpl
sub
loope
jae
jl
or
inc
sbb
push
cmp
insl
pop
flds
mov
xor
mov
je
xchg
lahf
loope
je
call
push
jmp
sbb
adc
imul
cmp
cli
mov
xor
rcrl
movsb
movsb
fcoms
push
sbb
rolb
inc
xor
mov
push
mov
push
pop
and
mov
movsb
mov
push
insb
sub
inc
pop
cmpsl
jl,pn
imul
repz
test
mov
loopne
dec
cmp
jmp
mov
loop
add
repnz
jmp
fsubl
mov
pop
push
and
mov
pop
add
adc
xchg
jecxz
es
lods
mov
sbb
popf
movsb
cli
mov
clc
push
and
cld
mov
xor
dec
adc
fdivl
push
sbb
pop
jo
aam
pop
inc
mov
mov
mov
cmp
xchg
sahf
fbld
inc
and
or
pop
and
or
sbb
cmpsl
push
imul
fsubs
insl
cmp
mov
or
push
fbstp
mov
and
sbb
jae
jecxz
jne
out
ret
orb
push
and
mov
imul
imul
inc
add
lret
sti
pushl
test
rcrb
insl
or
jle
stos
pop
ret
mov
jno
ret
mov
push
push
dec
jne
mov
mov
outsl
fsubp
int3
test
xchg
test
jp
neg
out
loope
cmc
mov
jne
cmpsb
jae
inc
and
std
lods
pop
imul
xor
in
mov
push
pop
xor
adc
popf
xor
out
jge
insb
mov
dec
fnstenv
aaa
xchg
ljmp
push
jno
cwtl
cmpsl
jp
dec
loope
movsl
mov
or
nop
loopne
fistl
jno
dec
cld
inc
mov
scas
cmp
cmpsb
in
sarl
or
push
lret
jbe
xchg
arpl
push
inc
xchg
cmpl
mov
ret
sub
xchg
mov
out
jne
outsl
push
test
or
add
adc
and
sub
inc
sub
lcall
dec
fwait
inc
fcomip
push
loope
test
test
insb
lock
mov
adc
pusha
sbb
xchg
dec
inc
les
pusha
loopne
cmp
push
aad
test
xchg
push
jecxz
mov
lahf
fistl
sbbb
and
add
cld
shlb
xor
inc
pop
mov
lods
pop
rcl
lock
adc
das
nop
popa
jp
inc
mov
cmp
jecxz
ljmp
dec
xchg
add
fadds
roll
loope
xchg
xor
addl
lock
add
jmp
icebp
mov
sbb
jnp
cld
xor
mov
and
push
hlt
rcll
mov
sbb
cmp
sbb
ja
and
loop
jns
sbbl
movb
decl
fiadds
pop
cmp
cmp
jecxz
jb
push
insl
add
mov
fiadds
mov
cmpl
lods
sar
pushl
rol
sarl
test
adc
subb
lret
les
cmp
clc
shl
adc
rol
and
sbb
or
sub
aam
mov
pushf
iret
or
inc
sub
sub
orl
aam
pop
xor
fidivs
mov
pop
loope
mov
mov
mov
fcompl
or
gs
lods
push
int
loop
fs
adc
jns
je
mov
fcompl
xchg
jecxz
je
ret
cmp
or
fbld
sbb
jge
sti
jp
push
out
dec
cmp
mov
sub
push
das
fimuls
ret
add
int
out
imul
cmpsb
sub
in
or
adc
mov
pop
lods
add
cmp
inc
cltd
jns
test
pop
ret
xor
cmp
adc
scas
jg
popa
cld
push
mov
lds
mov
jmp
loope
sarb
push
stos
lcall
jl
xor
sub
lea
xchg
mov
mov
rorl
dec
dec
fwait
cli
popw
fisubl
sub
cmp
mov
sub
fcomi
icebp
mov
push
jp
dec
jg
movsb
arpl
rcll
ficomps
pop
movsb
sarl
je
sbb
push
cwtl
sub
xchg
in
and
mov
xor
lock
shlb
movsb
daa
icebp
sti
jbe
adc
popa
stos
jp
aam
or
mov
movsb
jo
insb
add
mov
test
in
popa
xor
xlat
jg
std
pop
sbb
scas
pop
or
xor
and
add
mov
in
arpl
and
in
push
outsl
and
sub
adc
push
mov
test
imul
nop
inc
lods
sti
hlt
adc
mov
xor
adc
fnstsw
dec
repnz
jl
sub
in
or
out
cs
inc
cmp
add
jb
push
mov
and
stos
mov
dec
sbb
xor
dec
popf
cmp
test
mov
mov
cmp
xlat
adc
and
sub
stos
adc
add
iret
loop
mov
fdivs
test
jmp
loop
mov
stc
adcb
and
add
les
mov
cld
aaa
mov
mov
ss
insb
aaa
movsl
mov
insb
movsb
movsw
xor
ret
mov
inc
jecxz
inc
int3
inc
lahf
cmp
mov
mov
mov
mov
in
movsb
mov
mov
mov
jmp
fistpll
mov
jmp
shlb
inc
sahf
mov
ret
imul
pop
jno
push
out
cmpsl
leave
fmuls
xchg
hlt
popf
dec
mov
push
mov
hlt
pop
jmp
cmpsb
jae
loope
cmp
std
push
test
cmp
jno
fstpt
addl
pop
ret
xchg
jl
pop
fs
mov
sahf
ds
icebp
andb
rcrl
mov
cmpl
push
fld
loop
add
std
test
lcall
add
cld
mov
cltd
inc
enter
and
or
mov
jbe
nop
ljmp
stos
insb
pop
adc
mov
stc
inc
int
jo
mov
lock
cmp
bound
sbb
and
in
add
les
nop
add
std
sbb
addl
adc
mov
mov
test
cmp
add
lods
out
cmc
sbb
lcall
cmp
insb
aam
lds
arpl
in
sbb
pop
fucom
mov
xchg
jb
xchg
cwtl
xchg
sti
xchg
xor
repnz
xchg
repz
sbb
adc
insl
loope
push
adc
stos
and
popf
mov
inc
fwait
inc
push
fldt
pop
pop
rclb
mov
xchg
rcrb
popf
and
and
jmp
js
xchg
cmp
mov
pop
adc
cli
pusha
js
movsb
shl
mov
ret
ljmp
repnz
aas
xor
xchg
adc
cld
push
sub
aad
stos
pop
cmpsl
fwait
jnp
inc
xor
fdivp
inc
dec
or
adcl
aas
mov
jp
xor
stc
or
in
es
lods
adc
sub
pop
nop
andb
insb
mov
inc
movsb
mov
and
sbb
je
mov
pop
and
stc
jb
shlb
arpl
mov
frstor
aas
jb
xor
fstpl
adc
jmp
out
test
xor
pop
fiaddl
in
mov
sarb
mov
xchg
fisubs
dec
add
inc
push
dec
fisubs
decl
push
ja
add
dec
push
sbb
orb
xor
add
hlt
sti
inc
ficoms
enter
cs
icebp
mov
mov
jne
xchg
sbb
xchg
icebp
dec
push
lock
jp
dec
fidivrl
movsl
jecxz
dec
mov
call
popa
stos
dec
mov
aad
and
adc
fsts
dec
xor
rcll
xchg
xchg
les
sti
jo
inc
add
and
stos
adc
push
xchg
dec
jecxz
lods
insl
jo
das
test
mov
xor
xchg
pop
mov
cld
sub
rcr
lret
ret
mov
adc
outsb
jnp
xor
pop
or
cmc
ljmp
inc
fildl
popf
mov
xchg
mov
lret
add
rolb
inc
inc
lods
pop
repnz
sub
inc
xchg
lret
adc
rclb
push
sarl
ret
loope
fs
imul
add
cld
sbbb
add
hlt
adc
aaa
lock
sub
dec
pop
jecxz
cli
ja
fists
arpl
ret
pop
mov
ss
fs
pop
jne
add
or
bound
sub
mov
jno
negl
out
out
fists
inc
ja
adc
mov
mov
cmpsb
mov
and
movsl
sub
jb
rcl
mov
dec
ret
adc
jl
mov
push
js
inc
inc
mov
fldenv
pop
subl
or
ret
add
push
add
dec
cmc
ret
jb
inc
mov
cmp
and
rclb
stc
sbb
mov
cmp
sub
or
dec
push
cmp
xor
stos
outsl
test
push
ret
lods
rorl
inc
push
in
xchg
cmpsb
fmuls
mov
adc
sub
div
pusha
lock
sub
and
mov
or
jl
int3
loop
mov
inc
loopne
push
and
mov
inc
and
ret
mov
loope
jno
movsb
add
sbb
cmp
jecxz
jp
mov
jo
push
mov
xchg
aas
mov
sub
out
scas
imul
lret
aam
lret
sbb
bound
cmp
mov
int
stos
and
pop
bound
mov
push
sub
cld
cmpb
jo
ret
add
mov
gs
loop
jno
xor
test
inc
and
ret
and
out
cmp
adc
pop
xlat
jne
mov
xor
ds
mov
adcb
and
in
loope
fwait
jl
andb
or
jae
mov
push
ret
fisttpl
arpl
insl
adc
stos
je
mov
rolb
fcmovnb
inc
or
adcb
aas
or
fildll
or
insl
and
and
outsb
addl
inc
popf
push
inc
xor
aaa
ss
push
dec
test
cmp
les
rcrb
pop
xor
aad
lods
repz
sbb
shll
jecxz
add
call
pusha
fs
lcall
in
mov
mov
xor
lods
aas
int
int
mov
outsb
push
sti
sbb
inc
xor
inc
mov
inc
mov
add
mov
les
cmp
arpl
cmp
add
push
xchg
sbb
bound
xor
and
pop
pop
in
clc
mov
push
sbb
jg
insl
sub
dec
sti
mov
fdivl
inc
xchg
insl
aam
loope
cmp
int3
add
ljmp
sub
in
hlt
pop
push
mov
frstor
stos
in
loop
mov
fiaddl
mov
subb
mov
loope
jb
test
out
dec
adc
inc
push
cmp
dec
inc
stos
adc
add
sbb
lahf
test
mov
cmp
xor
fidivrl
and
aad
sub
xchg
dec
rorb
and
cld
outsb
lcall
loopne
daa
mov
dec
fistl
ja
stos
mov
mov
lock
test
or
mov
outsl
push
test
bound
stc
sbb
adcb
fnclex
aas
inc
lahf
add
pop
pop
rcrb
push
addl
hlt
add
pop
mov
loopne
adc
repz
fisubl
mov
sti
dec
iret
cmp
and
xchg
inc
or
mov
and
outsl
bound
stos
fwait
adc
loope
push
inc
xor
pop
sar
in
mov
sub
mov
bound
test
xchg
shrb
mov
sub
push
xor
loop
pusha
lds
fcomps
mov
and
je
loop
push
js
mov
fisubl
jb
lea
jae
adcl
jmp
cltd
push
mov
push
mov
mov
pop
cmc
jp
xchg
stos
inc
imul
sar
outsl
jge
test
add
and
mov
in
or
pop
repz
bound
mov
loopne
hlt
jle
jb
mov
cmpsl
xchg
add
jp
push
push
ljmp
inc
aaa
and
inc
pop
roll
inc
or
adc
loope
cmpsl
inc
pop
cli
xlat
jae
add
ds
inc
clc
xorl
aad
aad
mov
push
jmp
push
repnz
fs
movsb
sti
inc
and
or
mov
cmc
int
xorl
insb
adc
jb
sti
mov
sbb
jecxz
xchg
test
or
jp
xor
ja
scas
pop
fiaddl
dec
dec
sahf
mov
mov
mov
jp
out
mov
dec
cmp
inc
neg
or
loopne
and
adcl
inc
mov
fcmovu
cmp
test
xor
iret
fbld
mov
push
sbb
mov
mov
inc
dec
mov
pop
in
int3
adc
or
mov
inc
rol
insb
pextrw
pop
sti
jecxz
hlt
ljmp
out
add
add
sbb
into
nop
pop
pop
lods
mov
insb
push
jne
mov
fcoms
mov
repz
push
cmp
jp
push
stc
out
jg
fidivrs
ja
jl
xor
mov
stos
repz
inc
cmp
fisttpl
jecxz
jmp
bound
rcrl
loope
fnstsw
jmp
dec
dec
inc
mov
adc
stos
inc
test
jns
loop
pop
fistpl
inc
inc
pop
daa
cmpsb
cmp
fcomps
fcmovbe
and
cmp
sub
sbb
in
test
mov
fwait
repnz
adc
jecxz
add
ja
mov
and
and
mov
scas
push
push
cmp
test
sti
outsl
cmp
fcmovb
shl
mov
loopne
inc
lock
push
sbbb
bound
dec
loopne
lods
in
or
add
rorb
pop
fildll
mov
mov
fimuls
mov
mov
push
mov
mov
rolb
rorb
push
or
jecxz
xchg
xchg
xor
xchg
adc
xchg
dec
test
fstpt
push
out
outsb
jecxz
mov
popf
je
pop
popa
insl
repz
fwait
xchg
xor
movsb
mov
fs
mov
les
fs
hlt
loop
rorl
pop
in
rcrb
cld
rolb
pop
lods
out
adc
ds
popf
andl
fs
hlt
ss
fists
lods
popf
cld
push
dec
inc
mov
xor
pop
and
adc
sbb
insl
dec
xchg
outsl
or
and
or
push
mov
mov
addl
repnz
or
adc
cmovge
test
xchg
adc
sahf
jb
ret
test
mov
push
sti
sbb
stos
loop
in
adc
insb
pop
faddp
icebp
stos
inc
dec
jl
hlt
mov
loope
add
in
jae
adc
xlat
das
test
xor
bound
cld
out
loope
inc
adc
mov
push
dec
xlat
push
cmpsl
push
fwait
imull
fldl
loop
popa
sbb
popf
add
sbbb
icebp
filds
loope
sbb
inc
sahf
ja
dec
push
jb
lods
rcll
in
loop
inc
push
pop
fisubs
sbb
xchg
cmp
mov
sbb
mov
fsubl
and
cli
ret
xor
xor
push
add
mov
adc
cld
fstpt
int3
mov
inc
dec
mov
and
cwtl
push
mov
mov
jo
popf
nop
pop
movsl
jno
xor
les
ret
mov
sti
mov
hlt
leave
and
add
les
inc
and
add
sbb
lods
loopne
and
mov
and
mov
out
mov
lods
xchg
fimull
jno
push
cmp
push
loop
cs
stc
xchg
dec
lahf
push
jl
jb
mov
ds
cmpsb
add
jmp
jno
fistps
test
dec
roll
icebp
sub
aas
and
and
mov
mov
and
mov
in
sar
scas
dec
lcall
add
jecxz
out
loop
push
mov
mov
outsl
fidivs
out
fdivr
jnp
cmp
lea
jno
sbb
add
mov
popa
or
xlat
lret
insb
mov
or
int3
mov
notl
mov
mov
ss
cmc
xchg
mov
rcr
xchg
cmp
mov
hlt
xor
pop
pop
adc
shlb
mov
xchg
mov
add
xor
jno
cmp
fbld
lock
xor
mov
sbb
mov
cmp
and
inc
aaa
push
xlat
fs
xchg
push
sub
ja
xor
xor
lds
adc
subl
sti
adc
movsb
mov
push
and
scas
mov
push
clc
aad
lock
xchg
cmc
ret
mov
dec
inc
test
and
dec
pop
test
lret
xorps
jl
out
in
dec
shrb
and
fisttpll
sub
mov
int
jle
dec
add
dec
int
lret
add
arpl
add
sub
lods
arpl
adc
fldenv
sbb
mov
push
inc
out
nop
dec
daa
sbb
rorl
in
push
pop
xchg
push
lock
loop
es
mov
inc
pop
addb
repz
cld
mov
adc
arpl
aad
fisttps
les
or
scas
arpl
lret
cmp
lds
and
xor
lcall
movl
jp
ret
adc
dec
lock
or
sbb
pop
or
iret
rcrb
lods
dec
lds
repnz
and
cs
cmp
and
dec
xor
outsb
mov
jecxz
push
nop
sbb
movsb
mov
cmp
fdecstp
mov
out
xchg
dec
psubusb
aaa
roll
lcall
adc
xor
add
and
jb
lahf
repz
popa
int3
mov
xor
shll
js
loop
inc
loop
leave
or
out
add
negb
adc
push
push
adc
mov
or
test
adc
or
fidivs
push
jp
mov
fsubp
mov
shrl
stc
lahf
inc
mov
adc
rcrl
push
hlt
pusha
cmp
push
dec
dec
cmovo
dec
popf
out
jl
imul
xchg
ret
test
js
fdivp
push
les
movsl
push
ja
mov
ss
pushf
jmp
inc
push
cmp
stos
fs
loopne
lcall
cmp
fistpll
incl
pop
pop
mov
arpl
mov
add
scas
or
cmpsb
push
mov
cmp
ljmp
xor
or
ss
movsb
and
cmpb
dec
rorl
cld
enter
mov
add
ljmp
and
mov
cmp
loopne
pushf
sti
adc
hlt
insb
xchg
enter
mov
or
push
out
xchg
inc
imul
pusha
ret
std
adc
out
push
push
mov
or
je
scas
xor
icebp
or
mov
lcall
stos
cs
inc
xchg
ljmp
imul
lds
adc
mov
repnz
and
lret
jecxz
insl
and
add
jbe
mov
dec
lcall
pop
fwait
repz
in
imul
bound
mov
jmp
mov
xor
loopne
mov
mov
addb
ss
lods
lret
test
mov
int
test
adc
into
lds
jecxz
xchg
int3
mov
outsb
subb
aad
pop
xor
movsb
mov
loope
mov
pop
adc
jns
or
flds
in
lock
test
mov
in
sub
loopne
xchg
iret
jae
add
adc
sbb
cmp
dec
push
mov
inc
or
out
inc
movb
addl
add
xlat
movl
or
and
jg
loopne
aam
mov
stos
adc
mov
xor
repz
xor
hlt
or
pushf
notb
jae
sub
mov
and
mov
lret
dec
int
in
stos
in
loope
inc
add
sarl
push
lock
push
flds
pop
popf
stc
pop
les
sub
orl
mov
or
inc
ss
adc
loop
jg
inc
in
xchg
mov
loop
fsubs
cld
loop
add
js
test
and
or
mov
push
fstps
add
mov
mov
fdivrp
sbb
mov
sub
add
inc
cmc
ss
into
adc
repz
sbb
repnz
mov
mov
pop
jae
stos
mov
pop
fsts
sbb
cmpsl
roll
mov
stc
out
pop
mov
push
es
xchg
in
aam
jae
inc
jb
ret
fsub
pop
xor
pop
push
add
adc
daa
addr16
fwait
sbbl
lret
push
push
ret
mov
mov
mov
xchg
test
ja
aam
mov
jnp
dec
xor
sub
dec
fcomi
push
mov
add
lods
enter
jns
les
rclb
mov
cmp
aam
sti
addl
out
enter
add
sub
test
and
push
ror
push
lcall
pop
jge
js
fcoml
hlt
repz
lret
push
jecxz
sub
lds
ffreep
mov
dec
or
inc
pop
mov
sarb
cmp
inc
pop
push
mov
and
fidivs
dec
neg
loope
jae
or
test
fidivs
movsb
pusha
mov
add
loop
adc
arpl
fnstsw
sbb
mov
add
lret
jecxz
rorb
xorb
add
xor
xchg
sub
cmp
mov
dec
mov
out
shrb
add
mov
mov
fsts
scas
xlat
fdivr
xor
fs
je
add
xchg
iret
mov
add
sbb
nop
mov
mov
cmp
std
hlt
test
test
add
sti
jb
pop
mov
stos
mov
mov
fadds
jnp
dec
jp
mov
mov
sub
arpl
pushf
cld
stos
addr16
mov
rclb
lret
mov
inc
fmuls
loop
std
or
in
sub
imul
fwait
xchg
sub
push
scas
js
cli
lea
jno
lds
clc
mov
mov
push
jbe
data16
icebp
imul
fwait
or
dec
popf
mov
jbe
dec
add
jns
cmp
mov
pop
les
and
push
stc
inc
dec
sub
cmpb
mov
jb
test
js
fisubrs
lock
fidivs
pop
lret
mov
add
sub
push
and
ret
scas
test
add
ja
adc
in
xor
mov
cld
cmp
rol
ret
ret
pop
and
aam
jge
das
sbb
test
add
xchg
aam
mov
subb
repz
pushf
sbb
mov
mov
mov
std
push
fadds
mov
fwait
aaa
push
mov
cmp
add
xchg
lock
xchg
mov
ja
xor
jnp
in
fsubrs
cli
stc
cmp
cmp
mov
inc
sti
imul
movsl
call
sti
lock
cld
lret
xchg
kandw
xchg
cmp
pop
subb
xlat
push
enter
out
je
lret
adc
adc
push
rorl
cmc
push
adc
dec
mov
stos
test
cmp
lcall
ds
sbb
cld
lods
cmpsb
fsubl
push
inc
jl
push
xor
jl
dec
in
add
fcoml
gs
add
test
pop
cmp
test
dec
jp
mov
repz
sbbb
mov
sub
addb
stos
jbe
lods
insl
daa
cmp
xor
fistl
ljmp
xchg
rclb
loope
shll
movsb
sbbb
js
out
cmp
hlt
jl
xor
sub
ljmp
pop
mov
cmc
stos
out
and
mov
mov
or
cmp
mov
mov
push
xchg
and
xchg
pop
mov
mov
mov
pop
xchg
scas
fdivrl
movsb
cmp
and
sub
or
ljmp
andl
aam
and
mov
jle
push
ljmp
adc
mov
mov
fsts
mov
cmp
iret
sub
jae
in
nop
mov
je
and
mov
jecxz
jge
repnz
stos
cmp
stos
insl
mov
sti
movsb
cld
jbe
movsb
cli
clc
pop
out
sbb
xor
add
das
fwait
in
xchg
rolb
push
or
dec
inc
in
add
dec
lea
in
jge
mov
mov
cs
push
stos
sub
inc
sub
jo
cld
and
inc
shlb
inc
mov
ss
pop
jno
shrl
dec
dec
mov
push
in
fcomi
sahf
fimuls
fistpl
cmp
push
and
adc
jle
cltd
das
leave
out
roll
dec
and
lahf
inc
outsb
rolb
or
lahf
lods
cli
sub
aas
mov
aam
mov
arpl
mov
or
mov
cmp
mov
jnp
push
adc
ret
push
les
int
mov
div
mov
xchg
pop
js
orb
and
cmp
lods
repz
mov
adc
jl
mov
mov
mov
cmp
jmp
add
sub
sbb
sub
xchg
add
mov
mov
les
hlt
sbbb
xor
std
inc
jnp
bound
outsl
insl
fs
fbld
in
jge
cmp
andl
repnz
jp
mov
dec
mov
push
xchg
outsl
cmc
hlt
mov
fwait
mov
jge
or
sub
andb
fiadds
andb
dec
fsubrl
fnstenv
add
and
push
sarb
arpl
and
aam
mov
insl
lock
dec
hlt
xor
pop
in
mov
call
int3
pop
sahf
pop
stos
xor
das
addb
sub
mov
mov
pop
popf
ret
mov
inc
mov
adc
cmp
mov
dec
mov
movsl
pop
lret
xchg
in
test
rcrl
sub
adc
test
mov
loop
and
cmpb
sbb
je
sbb
push
cmp
cmp
or
pand
sub
cwtl
push
daa
iret
mov
ret
inc
fsubr
mov
test
ret
hlt
pop
rcr
andl
push
cmp
movb
push
mov
and
movsb
movsb
fsub
push
pushf
push
shrb
mov
daa
repz
test
mov
xor
cmp
inc
sub
flds
jns
xor
sbb
sbb
test
mov
inc
in
insb
mov
mov
loope
arpl
lods
lea
clc
adc
cmpb
popa
xchg
lahf
clc
aaa
out
loope
andb
push
or
mov
push
shrl
icebp
lahf
mov
lods
cmp
stos
out
add
fildll
mov
jb
or
das
rcrl
sub
cmp
cltd
jb
cmpsl
rcrl
xchg
pop
sti
mov
mov
movsl
push
push
ret
hlt
sahf
sub
test
stc
and
hlt
stos
add
data16
jae
push
pop
fsts
and
hlt
mov
mov
xchg
loopne
ret
in
hlt
lea
pusha
ja
sar
push
lret
or
addb
les
icebp
testl
mov
mov
pop
incl
cli
cli
jecxz
inc
inc
test
mov
outsb
mov
xor
jp
bound
loopne
or
mov
js
adc
repz
fnstcw
cmp
out
xchg
and
ret
dec
jl
or
xor
adc
or
arpl
clc
fisubs
ror
bound
mov
pop
arpl
into
das
xchg
xor
in
frstor
mov
pop
arpl
xlat
cmpsl
xor
add
pop
add
repz
mov
repz
mov
push
jp
ret
lock
pop
mov
cmc
fcoml
dec
nop
lret
mov
mov
arpl
cmpsl
mov
daa
repz
push
push
add
xchg
mov
pop
xlat
loope
fwait
lret
out
stos
add
imul
aaa
test
sub
push
lods
push
ja
cmp
hlt
pop
imul
mov
xchg
cmp
sbb
imul
hlt
jnp
mov
inc
sub
sti
jecxz
push
popf
imul
or
outsb
push
das
mov
xor
xchg
jb
scas
pop
sub
les
jbe
aam
push
cltd
xlat
out
loope
loop
and
add
sub
test
in
and
pusha
mov
xchg
cld
xchg
jmp
sbb
adc
addb
aam
or
cld
hlt
jne
mov
mov
cwtl
xor
cld
clc
sete
hlt
test
xchg
jg
icebp
mov
pop
jle
aaa
loop
daa
jo
fisttps
inc
jecxz,pn
leave
iret
pop
inc
jecxz
test
mov
aam
sub
xor
inc
les
mov
dec
arpl
pusha
push
cli
dec
repz
movb
xchg
and
fucomip
call
and
pop
cmp
dec
icebp
or
mov
or
std
add
xchg
xorl
jge
push
repz
jmp
shll
mov
sbb
loope
mov
daa
or
subb
out
mov
mov
xorb
pushf
shl
pxor
loope
mov
test
in
cld
xor
loop
jae
pop
test
ljmp
push
fsub
push
jae
pop
test
ljmp
outsb
fsub
fwait
jae
pop
test
adc
mov
sti
dec
adcb
out
cmp
mov
lret
mov
mov
shl
imul
xchg
cmp
mov
mov
xchg
outsb
daa
sahf
inc
cmp
mov
ficomps
xor
push
xor
jne
xor
enter
insl
pop
icebp
loope
xchg
mov
cli
aas
ljmp
sbb
dec
das
and
cmp
fcompl
adc
cmc
test
fmul
imul
sti
arpl
les
enter
shr
out
or
push
sti
xchg
hlt
test
outsb
jl
mov
fisttps
ljmp
or
push
repz
cmp
cld
sub
shl
xor
sub
lods
insl
sbb
in
adc
dec
loopne
sbb
lods
or
and
xor
sub
sbb
rol
shr
loop
rcl
xor
test
pop
sti
cmp
out
mov
fisttps
out
push
in
mov
lea
jae
and
sahf
jno
push
cltd
insb
ret
push
ficoms
roll
adc
test
int3
test
sti
sbb
mov
cmp
ret
xchg
test
adc
xor
push
fiaddl
mov
test
hlt
les
jno
mov
ds
loopne
sbb
jmp
pop
sbb
inc
and
test
and
fsubr
loop
dec
aad
xchg
insl
sti
add
mov
pop
add
lahf
loope
shl
insl
popa
inc
inc
hlt
cwtl
sbb
lret
loope
push
fdiv
xchg
movsl
outsb
dec
dec
inc
mov
cmpsl
mov
loope
mov
hlt
test
xchg
push
fcomi
mov
inc
adc
jo
sbb
out
xor
orb
sarb
hlt
popa
mov
xor
sbb
mov
add
jl
push
ret
sub
add
js
mov
or
and
cli
shl
jp
adc
jne
jnp
stc
adcb
xchg
jle
push
xchg
das
sahf
jp
loop
fistl
cld
add
loope
ret
loopne
xor
dec
shlb
ret
hlt
popf
popa
enter
or
xor
cli
rorb
ret
insb
aam
cmp
jg
aas
filds
popa
ret
or
and
sub
mov
jl
out
add
stos
frstor
or
lea
cmp
out
nop
movsl
bnd
test
mov
sub
stos
lcall
mov
add
fidivs
sbb
or
leave
mov
lret
inc
xor
les
and
rolb
cwtl
jbe
mov
fdiv
movsb
sub
push
stos
jnp
pop
cld
ret
loopne
ret
pop
jmp
arpl
mov
jno
bound
jl
lds
insb
adc
and
fldenv
pop
pop
pop
mov
dec
ljmp
ljmp
cld
daa
and
scas
sti
sub
repnz
outsl
mov
jecxz
rcrl
mov
jmp
addb
je
xor
mov
mov
xchg
push
and
sbbb
in
repnz
stos
out
dec
in
or
movsl
push
ret
test
and
sti
lods
jns
lods
lods
repz
inc
mov
cmp
std
mov
repnz
loope
fdivs
jecxz
sbb
and
repnz
sub
arpl
lods
pop
movsl
sbb
mov
xlat
inc
shll
dec
inc
aam
adc
in
arpl
sbb
fs
cli
fcmovnb
push
inc
xchg
adc
xor
out
arpl
and
cwtl
and
mov
xor
ss
and
mov
lahf
ret
mov
mov
xor
and
leave
sbb
fisubl
adc
mov
lods
imul
mov
les
cmc
pusha
dec
inc
xchg
mov
rol
jno
lret
sti
mov
mov
jb
pop
push
hlt
jbe
mov
ljmp
mov
repnz
cmp
inc
insl
clc
imul
in
dec
mov
adc
stc
repnz
inc
mov
repnz
lock
sub
mov
arpl
lret
dec
inc
adc
lret
inc
push
adc
jbe
repz
inc
lahf
repnz
pop
hlt
lea
test
subl
arpl
cmp
lahf
sbb
jp
lds
xchg
orl
in
outsl
sti
addr16
ljmp
xchg
outsl
movsb
sub
xor
cmc
add
sti
fs
repnz
or
pushf
xchg
inc
sub
pop
scas
push
dec
xor
in
cmp
xor
stos
out
and
xor
mov
inc
icebp
fs
aaa
sub
jae
insb
xchg
mov
pop
notb
shll
aas
repnz
mov
and
pop
mov
arpl
fistps
cld
iret
sub
out
and
pop
cmp
das
icebp
add
add
imul
mov
mov
in
sbbl
xor
sub
lret
push
mov
sub
ret
movl
and
adc
adc
fs
data16
push
mov
cmp
aad
repz
jb
les
in
call
les
and
xor
inc
out
je
outsb
xor
pop
in
xchg
xor
jl
aam
pop
mov
add
test
roll
cmp
xor
inc
cmp
cs
mov
out
test
pop
or
jp
push
popf
mov
sbb
mov
rorl
es
mov
cmp
inc
lret
fucom
fcompl
add
in
pusha
jl
push
cmp
pop
les
mov
hlt
ret
xchg
out
in
push
mov
cld
addr16
xchg
cwtl
shrl
shrb
popa
mov
std
xor
xchg
inc
push
shl
clc
fwait
in
lods
xor
into
push
fwait
repnz
fsubl
mov
fsts
push
fisubs
push
jge
popf
or
sub
je
test
dec
outsl
aam
or
into
pop
int3
loope
mov
sti
les
mov
inc
pop
pop
pop
and
sub
mov
xor
aam
push
and
xchg
dec
addr16
test
cld
popf
hlt
sub
and
int
subl
and
mov
shl
mov
ret
repz
sbb
sbb
in
mov
hlt
fistpl
out
loope
popa
add
shl
jmp
repnz
test
mov
xchg
pusha
inc
cmp
sbbl
xorl
inc
leave
stos
mov
mov
ret
outsl
mov
adc
dec
add
mov
sbb
daa
ret
push
andl
test
pushf
inc
xor
pop
or
and
ret
push
arpl
pusha
xchg
adc
pop
fsubp
test
into
je
rcrb
fisttps
shll
and
or
sub
or
mov
add
adcb
xor
fxch
cmpl
adc
nop
add
or
add
jmp
mov
ljmp
mov
arpl
dec
mov
jo
sbb
pop
lahf
mov
lret
and
push
jnp
fstl
mov
pusha
push
jae
jbe
jns
sub
mov
arpl
in
xor
and
xor
adc
loope
mov
xorl
dec
add
push
pusha
jae
mov
sahf
xchg
ret
leave
or
ret
popa
mov
xor
adc
mov
out
fbstp
rorb
jae
xchg
or
add
xor
arpl
rclb
mov
inc
dec
subl
ffree
cmp
lret
mov
xchg
rcl
loop
ja
jns
mov
fdivr
les
in
es
adc
add
adc
ret
mov
inc
xchg
insl
jle
cld
or
addb
push
xor
dec
lret
xor
pop
loop
sub
and
xor
pop
cmp
outsl
je
mov
lods
fwait
jmp
cmp
mov
mov
outsl
adc
or
popa
cmp
mov
test
in
cwtl
test
jl
inc
or
or
ljmp
out
popf
sbb
xchg
leave
push
or
mov
mov
xchg
or
inc
ret
mov
and
js
test
push
xor
fucom
aad
cmp
mov
fs
mov
hlt
fcoml
iret
jl
or
les
and
outsb
mov
repnz
mov
mov
mov
mov
mov
fdivrl
das
ficompl
imul
ficomps
repz
add
mov
inc
ficomps
sahf
cmp
test
mov
les
repz
xor
int3
sbb
lret
inc
cmp
mov
mov
add
hlt
mov
mov
xchg
ret
and
cmp
adc
xor
lcall
notl
test
adc
loopne
adc
fs
testb
divb
fldenv
data16
test
les
out
inc
mov
mov
sbbb
adcb
fnsave
mov
mov
in
push
push
add
adc
jmp
or
and
jecxz
loope
into
and
insl
xor
popf
cmp
and
inc
cmp
add
popf
fsubp
ret
or
lahf
mov
movq
addb
add
or
in
and
sub
mov
pushf
pusha
add
inc
in
call
inc
stos
xchg
adc
in
mov
xor
mov
adc
les
popl
jns
pop
cmp
and
inc
sub
addl
ret
and
xchg
sahf
in
cs
cmpl
add
xor
pop
stc
jae
push
sub
add
icebp
nop
add
jmp
fbstp
mov
add
add
insb
push
test
sti
mov
sub
sar
fs
push
jle
sti
cltd
sbbb
flds
aas
adc
movsl
jp
mov
pusha
fwait
loope
jae
in
inc
sbb
movsb
inc
clc
leave
pushf
je
fdivs
cmp
insl
xchg
xor
orl
rorl
cs
lret
sub
bound
xorb
pop
sbb
ficoms
adc
mov
ficoml
in
lret
push
fwait
ljmp
hlt
stos
mov
fs
cli
fisubrs
jae
mov
gs
sti
cmp
fstpl
inc
shrl
or
or
shl
fwait
lock
loop
cmpsl
outsl
dec
pop
mov
jp
mov
movsl
or
sub
add
movsl
mov
imul
sbbl
pop
ficoml
xor
pop
mov
pop
mov
add
in
pop
loop
push
lret
adc
or
lret
shr
mov
testl
cmp
dec
jne
loope
daa
dec
add
mov
fwait
gs
stos
movsl
push
or
dec
inc
repz
loope
push
ljmp
adc
repnz
ret
loope
repz
push
fcmovb
lea
sbb
add
repnz
add
cli
jecxz
cmp
dec
dec
mov
cmp
icebp
mov
mov
add
loopne
bound
xor
ja
loope
dec
jmp
cli
loop
cmp
and
mov
xor
rolb
and
xchg
jle
fistpll
mov
adc
fldenv
ficomps
mov
fs
loopne
in
jno
pop
xchg
negb
ret
jecxz
or
mov
jp
pusha
jb
and
inc
pop
pop
iret
pop
decl
hlt
mov
dec
pop
jbe
ffree
lods
lds
pop
mov
stos
mov
fidivrs
mov
pop
mov
ret
je
insl
ret
sub
mov
repz
push
insl
fs
mov
pop
add
and
fadds
fs
jbe
inc
xchg
out
outsb
jecxz
lds
pop
data16
fcompl
cmp
test
lret
push
mov
adc
shlb
push
lret
dec
stc
js
mov
push
inc
pop
jl,pn
ficomps
dec
test
mov
stos
scas
enter
insb
in
aaa
mov
sbb
dec
inc
addb
xor
in
add
test
xchg
xchg
subl
sbb
sbb
fists
or
sti
push
stos
pop
loop
and
shll
mov
or
sbb
ljmp
xor
lahf
xor
or
mov
mov
mov
loopne
and
mov
dec
push
outsb
xor
nop
xchg
xor
jnp
in
dec
xorl
gs
adc
repz
mov
repnz
jne
arpl
movswl
xchg
adc
pop
out
inc
scas
add
popf
loopne
les
iret
fstps
xchg
rolb
ret
rcl
clc
xchg
inc
mov
dec
xor
inc
movsl
loope
cmp
lahf
jge
pop
repnz
ret
hlt
dec
sub
fs
repz
fs
jle
dec
sub
mov
xchg
mov
fucom
in
hlt
repz
cmp
fbstp
fs
lcall
jnp
jmp
mov
sbb
gs
inc
mov
push
add
jge
mov
ja
mov
mov
jg
and
mov
mov
push
in
fiadds
addl
pop
shll
and
cmc
aas
inc
pop
dec
das
sbb
adc
mov
mov
jne
movsb
cltd
faddl
mov
adc
bound
jb
sbb
xchg
mov
jl
mov
pushf
push
cwtl
jecxz
inc
sub
mov
inc
lock
cld
cmp
int3
lods
addr16
push
pop
aaa
add
xchg
pop
mov
sbb
xor
dec
fcomp
mov
sub
push
inc
sbb
sbb
sub
lods
stos
lahf
sub
leave
aas
repnz
jecxz
hlt
lods
mov
ljmp
mov
insb
jne
xchg
mov
push
mov
sbb
ds
hlt
adc
in
sbb
add
imul
pushl
push
rcr
iret
sub
or
insb
shrb
and
out
adc
ror
pop
and
xchg
in
popf
pusha
movsl
mov
adc
xlat
stc
xchg
mov
es
je
add
push
outsl
sub
es
cmp
pop
adc
inc
and
fcmove
dec
enter
mov
mov
and
in
dec
push
pop
int
rclb
push
cld
nop
rorb
lods
clc
fs
in
mov
push
hlt
jno
or
mov
mov
clc
sbbb
loopne
ljmp
ljmp
mov
mov
cmp
leave
leave
sti
mov
clc
xchg
int
cmp
push
cmp
xchg
in
mov
and
adc
lret
sbbl
inc
add
fmull
mov
sarl
mov
popf
mov
add
adc
and
and
inc
aad
shrb
movsb
dec
rolb
movsl
mov
or
mov
hlt
in
jecxz
fstpt
pop
and
cmp
shl
sbb
push
lahf
test
inc
addb
adc
mov
lods
jge
in
bsr
pusha
imul
repnz
mov
pop
pusha
jmp
mov
xchg
and
mov
cltd
mov
aam
rorb
out
int3
inc
jmp
mov
xlat
adc
mov
sub
jecxz
aas
pop
movsw
mov
mov
xor
loopne
pop
jp
add
fwait
lods
repnz
cli
push
sahf
fbstp
cmp
movsb
enter
loopne
aaa
fwait
and
sti
jno
loopne
mov
aaa
shl
cmp
loop
xor
daa
jno
je
das
push
mov
addr16
shll
or
loop
cltd
cltd
cltd
mov
jae
push
mov
inc
fdivp
and
push
test
inc
xchg
dec
pop
or
insl
test
shlb
pop
adc
loope
pop
ds
mov
or
mov
repnz
inc
sub
push
xchg
mov
push
inc
lods
mov
movsl
pop
xor
mov
mov
push
adc
repnz
sub
jp
loop
pop
push
gs
add
cld
lods
icebp
clc
shl
xchg
or
mov
cmpsb
lahf
xor
andb
cmp
icebp
push
pusha
inc
les
or
jo
add
jp
xor
mov
inc
xchg
fidivs
imul
dec
bound
call
ret
push
cld
loopne
in
fcmovne
push
jo
stos
dec
push
jecxz
es
and
or
cli
data16
mov
cli
andb
pop
mov
push
and
loopne
jno
int3
in
arpl
scas
add
sub
inc
and
fs
push
fwait
movzwl
ret
shufps
and
loope
out
jmp
sti
adc
imul
icebp
push
repnz
das
out
sbbb
cmp
push
insl
jecxz
xlat
xor
aad
xchg
jg
pushf
in
xlat
inc
fcoml
pusha
inc
cli
mov
je
imul
push
push
pop
nop
sbb
pop
pop
lahf
ljmp
outsl
roll
add
test
rcll
pop
dec
inc
cmpsb
jmp
push
and
lahf
or
sbb
mov
cs
mov
cs
sbb
repnz
sbb
xor
mov
cmp
lods
out
push
icebp
stos
sbb
jg
pop
mov
sti
mov
lret
mov
cmc
in
imul
hlt
ficomps
mov
and
repnz
xor
sbb
xor
and
divb
in
and
xlat
fldcw
and
xor
rdmsr
aas
mov
pusha
push
mov
sub
popa
xor
cmp
dec
fbstp
or
jge
inc
popa
clc
xor
push
jns
sub
cmpsl
mov
jmp
and
push
lcall
test
mull
les
xchg
sti
sbb
add
or
mov
arpl
or
jmp
ret
xchg
repz
jae
dec
push
mov
mov
test
repz
push
or
push
sub
pop
xor
rcrb
or
mov
xchg
lahf
mov
rorl
movsb
jae
mov
jne
push
sub
jae
lret
pop
in
ret
ret
cmpb
add
fbstp
xchg
nop
jb
loopne
lods
stos
aas
out
jmp
ret
mov
xor
pusha
es
xor
mov
and
lock
jmp
lahf
jae
push
out
out
fcoml
fdivrl
and
pop
xlat
pop
pusha
mov
or
inc
mov
mov
rorb
pop
cmp
shrl
mov
shl
inc
mov
or
xor
loope
adc
pop
xchg
insb
sub
mov
insl
lock
clc
ds
aas
stc
cli
inc
pop
aam
add
pop
xor
fldt
std
in
std
sub
mov
pusha
mov
inc
aas
xchg
fldt
and
mov
mov
pop
xchg
aam
dec
movsb
mov
mov
aas
loop
jg
lahf
je
jecxz
ret
fsubrp
mov
pop
ljmp
gs
jle
inc
movsl
and
adc
pop
cmp
adc
push
clc
pop
cmp
add
adc
and
mov
mov
cmp
stos
out
repnz
inc
mov
and
pop
les
jecxz,pn
loop
outsl
sub
mov
jno
xor
pop
int
cltd
mov
hlt
pop
and
mov
add
cli
adc
mov
rcrl
adcb
fcomp
mov
mov
in
inc
cmpsl
lret
addl
loopne
add
xor
je
mov
or
mov
test
in
xchg
lret
mov
mov
jecxz
ret
sbb
lods
inc
or
mov
imul
xchg
inc
jecxz
arpl
pslld
in
pop
in
sbb
jne
lcall
jno
rol
mov
in
mov
xchg
dec
push
movsb
jle
fnsave
sbb
inc
jae
out
gs
mov
and
mov
fcmovu
pop
je
leave
xchg
jne
add
test
fs
xchg
pop
jb
lods
push
das
aam
out
cli
jle
or
xchg
aad
sbb
or
test
and
mov
mov
mov
mov
ret
add
push
loopne
ficomps
mov
call
les
out
or
sub
sub
scas
pop
adc
pop
fstps
lods
out
shll
fcoml
aas
inc
lahf
xlat
and
rcll
enter
stos
ret
aam
inc
mov
clc
fisubl
sub
adc
outsb
ficoml
xlat
movsl
cld
xor
mov
loopne
hlt
in
jecxz
fisubs
dec
sar
ror
scas
cld
sub
pop
lods
add
add
rcrl
xchg
jbe
adcl
mov
sub
inc
sti
inc
add
xchg
push
jl
scas
mov
mov
sub
dec
push
cmp
fs
push
aaa
xchg
nop
shrb
dec
sub
popf
sub
nop
inc
push
shl
clc
jle
jno
push
cli
lods
push
shrl
out
jo
jns
aaa
add
push
dec
cmp
cmp
pushf
mov
or
les
mov
adc
out
ja
xchg
sub
pushf
cmp
daa
repnz
sti
in
jne
sbb
adc
js
fmull
inc
mov
insb
add
cmc
adc
out
jl
hlt
loope
jl
cmc
cs
inc
inc
loope
xchg
and
mov
int
ljmp
and
in
xchg
push
aad
xchg
jl
in
fists
popf
jle
orb
jne
mov
inc
cwtl
arpl
sbb
addb
stc
std
or
popa
pop
in
ret
insl
popa
test
loope
mov
ja
mov
pop
lods
cmp
pop
ret
inc
mov
push
testb
lods
mov
into
xor
pop
dec
daa
ds
dec
fldl
jle
insb
push
mov
push
ljmp
mov
in
inc
xor
jb
movsb
loopne
push
loop
jp
mov
push
fstps
mov
mov
mov
clc
mov
je
in
repz
sub
ret
xchg
shlb
add
mov
shl
les
add
mov
adc
arpl
repz
or
fisubrl
dec
xorb
fcomp
jno
loop
fsubs
loop
mov
mov
sub
pop
das
jle
into
cs
push
cmc
sti
mov
or
test
insl
sub
adc
rolb
mov
jp
call
push
bnd
push
loop
or
outsl
ja
push
jno
cmp
ret
movsb
lea
das
xrelease
shll
xor
push
sarb
data16
or
leave
mov
repz
cmp
aas
lods
lods
imul
out
orl
mov
push
jae
lahf
rcrb
lock
loop
test
mov
subb
out
outsl
popa
cwtl
aam
mov
dec
hlt
dec
push
and
in
mov
out
jb
push
sti
sub
or
sti
lcall
cmpsl
add
cmp
adc
test
ds
sbbb
cld
or
insl
popa
push
ja
bound
loop
arpl
addr16
mov
iret
or
in
add
aad
or
arpl
daa
addl
mov
push
mov
ret
pop
cmp
mov
mov
shl
mov
ret
cmova
xchg
and
xchg
fistpl
roll
sub
xor
repnz
adc
pop
jecxz
mov
rcll
fnsave
cmp
and
sub
ficomps
lret
mov
pushf
popa
aad
push
pop
add
inc
in
mov
xchg
add
mov
push
frstor
scas
cmp
xchg
xchg
mov
mov
bound
fists
push
xlat
mov
xor
and
jp
shll
sbb
push
arpl
cmpsl
popf
in
add
addr16
jnp
mov
cmpsb
inc
cmp
pop
adc
push
loopne
leave
hlt
adc
rorb
cmp
inc
push
in
enter
and
mov
cmp
jmp
in
ss
pop
cmpsb
dec
sahf
mov
mov
lds
je
cli
inc
mov
xor
subb
xchg
mov
ret
and
les
ja
mov
sahf
ljmp
jbe
xor
fs
mov
inc
in
out
shrl
dec
push
out
hlt
flds
pop
jecxz
cld
les
cs
out
add
ficoml
mov
jp
cmp
adc
dec
and
sub
mov
adc
and
and
sbb
jmp
loop
pop
repnz
mov
test
bound
jecxz
inc
test
xchg
sub
jb
cli
fbld
mov
mov
mov
push
popf
fstl
sbb
push
jne
or
imul
fs
mov
aaa
mov
je
hlt
data16
xor
cmp
in
dec
sti
hlt
test
loope
clc
add
lods
mov
sub
es
push
cli
dec
imul
leave
insb
xchg
add
cmp
imul
sahf
mov
rcll
push
push
addb
test
and
adc
out
xlat
pop
and
xlat
shlb
cmp
xor
pop
push
push
insb
sbb
movsl
jae
add
std
xchg
pop
xor
jb
insl
add
pop
aas
mov
xchg
vpsrlw
shrl
jmp
sub
adc
addl
popa
lock
rcrl
ljmp
lods
fcomps
mov
aad
lahf
fadds
mov
cli
and
jae
push
arpl
sub
push
scas
jl
cmpsb
cmpsl
push
fadd
addl
iret
cmp
adc
outsb
add
repz
ja
jecxz
ret
xor
add
inc
dec
mov
jmp
test
sbb
iret
ret
mov
das
inc
fisubs
xchg
cmc
sbb
stc
in
fsub
mov
mov
mov
pop
test
and
insl
inc
push
and
mov
xor
sbb
sbbb
inc
popa
sbb
repz
cmp
fimull
push
testl
adc
in
hlt
mov
inc
in
adc
rcll
fsubr
cmpb
dec
aam
sti
or
jle
lahf
repnz
je
sbb
adc
rol
lcall
inc
pusha
jge
or
mov
leave
shll
inc
and
mov
add
aam
outsb
add
ja
test
lods
mov
loopne
aas
in
mov
push
cltd
loop
lret
inc
fwait
push
int
cmp
enter
adc
jo
dec
push
bnd
in
cmp
mov
and
xorl
fistpll
xor
add
mov
inc
xchg
cmc
mov
sub
jo
push
ret
test
sahf
mov
adc
cmp
lods
mov
stos
sbb
pop
in
cmpsl
in
xchg
jae
inc
nop
clc
dec
wrmsr
add
bound
mov
xorl
adc
xor
shll
fimuls
rolb
stos
mov
icebp
aam
inc
push
insl
inc
addr16
mov
nop
mov
test
adc
in
adc
jmp
clc
push
cld
and
cwtl
xorb
add
push
hlt
jno
push
repnz
jl
in
mov
and
push
and
sbb
jno
push
repnz
jl
aam
xlat
ss
dec
clc
int3
and
cwtl
addb
fs
push
les
cwtl
cmp
jae
mov
les
mov
xchg
clc
lods
and
cwtl
and
mov
ss
scas
clc
pushf
and
cwtl
adc
mov
ss
int
mov
cwtl
aaa
out
xor
fidivs
cld
sarl
shrb
mov
out
jp
xor
test
rolb
fcomip
and
fidivrs
jb
sti
cltd
dec
xor
in
rclb
mov
scas
nop
push
inc
push
push
stc
test
cmpsb
js
inc
mov
sahf
nop
jmp
push
jno
sti
in
push
jle
jl
subb
and
shlb
mov
push
outsl
pop
jl
js
data16
and
push
les
cwtl
orb
jl
ficomps
add
mov
mov
push
mov
imulb
xor
outsl
sub
mov
or
xor
test
jecxz
jl
fnsave
fmul
push
sub
sbb
push
sbb
fs
mov
xor
pop
std
les
or
pop
and
fs
sbb
xchg
idivl
gs
adc
shrb
je
lea
in
rcll
jne
cld
stos
cmp
and
dec
dec
or
jbe
arpl
aam
test
and
push
jae
test
shlb
test
loope
aad
xchg
push
sbb
stos
push
sti
dec
repnz
stos
stos
mov
xchg
in
dec
cmc
sbb
dec
adc
sti
cld
adc
fcompl
xor
mov
arpl
lgs
inc
mov
lahf
dec
push
mov
loopne
dec
data16
and
addr16
test
mov
ss
jo
pop
icebp
cmpsb
dec
dec
mov
push
adc
sti
mov
push
nop
xorl
vpshad
sub
push
dec
mov
loopne
pop
dec
dec
cltd
movsl
idivl
lret
fucomp
mov
or
sub
jecxz
cmp
mov
stos
loop
pop
adc
subl
repz
push
add
adc
xchg
adcl
addl
sarl
cld
inc
stos
lock
je
out
fs
mov
mov
pop
sti
xor
mov
xor
adc
in
loop
std
adc
pop
mov
xchg
or
push
scas
shr
loope
pop
push
push
mull
out
out
mov
jp
xchg
mul
enter
loop
add
push
or
fs
out
popf
cwtl
jmp
xchg
sub
sbb
mov
sarb
mov
fs
or
or
fstpt
aaa
fs
ret
mov
mov
arpl
mov
push
jecxz
scas
pop
popa
rorl
cmp
push
adc
rorb
mov
mov
mov
test
in
or
adc
cltd
mov
cmp
stos
and
in
mov
repz
mov
jns
mov
xchg
pushf
loop
lret
adc
in
loope
mov
add
pop
sti
arpl
enter
or
movsb
add
add
mov
xor
add
lcall
push
jg
or
popa
popa
jecxz
xor
mov
sahf
or
xor
add
jo
jg
ja
andl
sahf
fmull
mov
mov
aad
add
int
lret
jecxz
imul
or
jno
mov
mov
push
and
int3
xchg
jae
loop
adc
fs
ficoml
les
cld
pop
lds
adc
mov
adc
mov
fldt
movsb
pop
bound
xor
test
push
loop
fwait
sub
stos
es
je
xorl
insb
sti
push
test
lret
aas
test
jo
adc
mov
bound
jns
xorb
pop
mov
test
rol
lods
in
sub
aam
repnz
clc
sbb
jns
hlt
rclb
loope
aad
sub
sbb
xlat
push
mov
iret
cmc
ljmp
or
and
repz
sbb
stc
loopne
xor
enter
xchg
test
insl
jmp
adc
mov
dec
mov
mov
inc
and
cld
ret
pop
in
loope
jae
mov
inc
push
pop
jp
inc
xor
test
dec
and
aad
jle
data16
adc
and
into
int
ljmp
ljmp
ljmp
ret
jns
fdivl
cmp
int3
cmp
hlt
gs
cmp
iret
divl
ret
inc
adc
xchg
add
ljmp
sub
pop
repz
in
and
add
adc
xchg
lret
faddp
in
jmp
add
xor
sbb
neg
fdivl
iret
mov
push
rcl
and
popa
icebp
push
pop
fisubl
ljmp
pop
jnp
fwait
xorb
repz
mov
ljmp
and
inc
inc
loopne
stc
sti
cmp
rorb
sub
enter
and
ljmp
xor
faddp
imul
repz
hlt
cmpsb
in
gs
rclb
rolb
cmpsl
insl
add
lahf
adc
clc
icebp
push
gs
push
mov
cli
ret
lock
sti
mov
loopne
cli
addr16
pop
test
insl
fsubrs
pop
loop
lea
in
scas
movsb
and
lods
adc
jp
xor
sub
adc
mov
pop
pop
and
cmpsb
into
mov
pusha
mov
imul
adc
stos
jae
push
pop
sahf
dec
or
mov
mov
xchg
shl
lea
xor
loope
xchg
fwait
or
push
data16
pop
lea
in
jle
les
jp
xchg
cmp
outsb
jnp
sbb
lock
ds
mov
push
adc
movsl
les
jl
andb
jl
fcomps
cwtl
xchg
je
insb
mov
jge
add
push
xor
jae
dec
xchg
loop
pop
xor
idivb
nop
shlb
and
adc
out
xor
pop
dec
push
xchg
sub
aas
dec
enter
fsub
cmc
aad
jb
add
xor
jl
xor
pop
or
jg
addl
cld
loope
mov
das
cmp
fstl
lods
lret
ljmp
ret
lret
lret
stc
in
mov
ret
std
call
jge
jae
aam
mov
es
inc
dec
mov
or
or
jecxz
cmpsl
loope
push
mov
push
or
fnstenv
jnp
mov
adc
sti
sbb
aad
or
out
sub
push
int3
cmp
repz
ret
hlt
mov
push
push
iret
xchg
shlb
mov
rcr
test
adc
jle
cmp
jmp
xchg
dec
mov
pusha
cmp
in
mov
push
mov
and
ret
inc
sub
ret
pop
icebp
ror
or
mov
arpl
popa
jmp
cmpb
dec
mov
and
bound
mov
shrb
mov
mov
lea
dec
ret
fdivr
loope
mov
insb
inc
into
loopne
jg
pop
cwtl
fisubs
pop
xchg
push
popf
mov
inc
mov
std
jecxz
ret
sahf
fwait
loope
popf
loop
mov
sbb
jo
popf
lahf
outsl
arpl
and
test
adc
sti
loopne
sahf
sub
mov
fs
or
outsl
fbstp
xlat
sti
or
sahf
lods
add
lds
pop
lods
xchg
std
fcomp
idivb
mov
jl
outsl
and
cld
loop
cmc
mov
icebp
cltd
je
xor
lea
mov
add
lds
les
or
and
mov
pop
out
pop
sahf
mov
lret
and
sbb
xchg
in
add
mov
xchg
lret
pop
push
in
repz
jae
repz
and
jbe
mov
dec
pusha
fdivrs
mov
push
or
sub
arpl
lret
shrl
ficoms
mov
ret
repnz
sbbb
lret
fnstsw
aam
movsb
inc
lret
jno
xchg
jns
movsb
test
dec
and
jecxz
mov
mov
or
movsb
and
dec
mov
adc
roll
fadds
test
movsl
inc
cmpsl
push
or
out
sub
in
mov
or
iret
cwtl
mov
ret
and
jg
pop
sub
pop
imul
push
repnz
fsub
repnz
xchg
hlt
cs
shl
push
lret
dec
idivb
sti
add
mull
xor
mov
ret
push
xchg
jmp
loope
push
ljmp
lahf
je
aam
sbb
adcl
xor
xchg
sub
rorb
movsb
mov
leave
mov
inc
pop
adc
sbb
subl
xor
lcall
incl
mov
test
ja
les
or
bnd
flds
js
jb
inc
mov
jbe
dec
or
push
outsl
pop
mov
adc
repnz
sbbl
sub
lock
dec
add
loopne
cmpl
add
andl
mov
adc
lret
jl
mov
stos
push
in
cmpsb
jb
cld
pop
or
push
out
bound
sub
xchg
lods
mov
outsl
lds
push
inc
out
lretw
cld
inc
testl
out
loop
cli
aam
aam
clc
in
or
cmpl
test
xor
push
jbe
rolb
xchg
sarb
dec
xor
dec
pusha
repz
dec
dec
xor
push
cli
mov
mov
add
push
aas
sbb
xor
cltd
rcll
mov
adc
jecxz
std
or
dec
scas
ds
ret
movsl
mov
les
and
pop
adc
fidivl
sub
mov
fstpt
jnp
mov
cwtl
mov
sbb
cmc
loop
int3
les
in
fildl
movsb
je
aas
lcall
stos
fdivl
in
mov
xor
imull
rol
mov
xor
mov
xor
inc
test
add
jae
add
push
or
xlat
cwtl
inc
movsl
mov
repnz
les
mov
lea
fwait
test
cld
mov
pop
bound
ds
in
inc
xor
mov
ret
in
in
jno
inc
lea
fstpt
sbb
stc
shl
and
ljmp
jl
xchg
push
mov
push
jp
dec
sbbb
add
inc
fwait
shll
push
xor
repz
repnz
pop
and
dec
ljmp
das
mov
xchg
loopne
repz
and
mov
les
adc
inc
pop
mov
push
ja
test
test
and
out
jb
add
adc
cmc
bnd
mov
and
and
loop
aam
mov
xor
lods
aad
xchg
xor
hlt
lods
in
push
sbb
sbb
pop
arpl
and
fdivl
data16
adc
scas
inc
xor
xchg
or
dec
jp
filds
push
stos
popa
sub
lods
xchg
mov
sbb
in
cmp
insb
ljmp
out
inc
cmp
jae
subl
insb
and
pop
outsb
jnp
adc
icebp
lret
sbb
or
sub
hlt
push
mov
pushf
in
inc
and
arpl
das
mov
xchg
sub
pop
xor
sbb
out
mov
movb
pop
or
test
faddl
jmp
dec
je
xchg
out
jl
fs
jbe
fwait
aam
loope
fs
jae
push
jp
inc
push
loope
jg
in
or
lret
pusha
or
mov
cs
sbb
js
jnp
add
je
mov
pop
movsb
dec
or
fwait
pusha
popf
jbe
mov
rcr
pop
xchg
icebp
insb
hlt
push
push
mov
in
mov
sti
push
stc
jnp
adc
mov
mov
test
pop
jae
sbb
in
ret
sbb
leave
xchg
mov
jae
jbe
or
lret
add
cmp
lret
mov
inc
mov
lret
pop
in
inc
inc
popa
filds
fsubrs
pop
xchg
mov
push
dec
dec
push
xlat
xchg
xchg
jecxz
mov
mov
sub
mov
jle
jns
fdivrp
xor
adc
mov
ss
cli
xchg
or
lods
or
push
sub
nop
or
ret
ret
mov
enter
in
jl
xlat
rcr
sbb
mov
call
dec
pop
out
xadd
dec
jg
lods
jae
add
int
lret
jle
adc
mov
andl
popa
mov
addb
cmp
cmpl
pop
sbb
push
mov
add
shll
sub
ljmp
mov
jecxz
sti
push
jno
aam
add
xor
and
loopne
jl,pt
std
lret
cmpsb
stc
movsb
push
int
pop
in
int3
aam
mov
mov
jns
add
or
mov
inc
cld
out
std
jb
inc
fs
out
adc
fnstsw
add
sbb
add
cmc
movsl
repnz
jp
fwait
in
iret
andl
loopne
mov
or
cwtl
mov
fisttps
ss
leave
jge
xorb
shl
std
or
fs
sarl
mov
ja
push
call
insl
jge
sahf
mov
test
ret
notl
decl
or
pusha
xchg
xchg
cmpsb
and
dec
jecxz
push
sbb
mov
add
adc
jmp
adc
xchg
or
xchg
lea
mov
xchg
cwtl
negl
andl
popa
cmp
mov
test
xchg
pop
lcall
mov
sahf
xchg
hlt
mov
xchg
pop
fcmovnb
or
or
mov
jge
adc
jle
clc
mov
arpl
mov
push
mov
cltd
xchg
pop
sub
repnz
sub
mov
and
insb
ret
xchg
mov
jg
push
adc
mov
into
cld
sbb
pop
int
addl
jle
sarb
flds
adc
outsb
sbb
cmpsl
out
shll
push
jo
addb
and
clc
and
add
jl
and
mov
inc
add
mov
popa
js
mov
icebp
out
and
jbe
fs
mov
inc
das
in
lahf
in
mov
fsubrl
mov
call
aaa
les
loop
add
inc
in
inc
push
mov
push
xor
inc
sar
jle
mov
mov
pop
and
lcall
push
cltd
popf
cmpb
sbb
clc
lods
mov
xor
jl
push
jp
out
jne
gs
adc
repz
and
cmp
push
adc
jge
inc
mov
cmp
pop
adc
in
xor
sti
ret
stos
mov
pop
dec
xchg
mov
jno
out
xchg
cwtl
pop
testl
pop
dec
pop
sub
incl
inc
ficompl
sbb
repnz
mov
lods
xchg
out
mov
sbb
mov
loope
xor
mov
loope
push
frstor
xchg
sub
testl
roll
lods
xchg
js
cmp
mov
imul
mov
mov
sbb
sahf
lahf
addb
cli
or
cltd
add
and
ljmp
push
fdivl
imul
sbb
mov
insl
rorb
loop
shrl
test
cs
inc
xchg
xchg
movsl
cmp
dec
mov
mov
adc
add
cmpl
pop
and
mov
ret
inc
mov
hlt
inc
in
les
mov
adc
pusha
inc
inc
sub
inc
repz
cmpsb
enter
adc
push
mov
repnz
outsb
stos
and
stc
fs
or
cmpsb
fcoml
dec
xchg
adcb
ret
sub
inc
pop
xchg
arpl
add
pop
pop
xor
fs
clc
hlt
adc
test
cmp
hlt
mov
xchg
orl
xor
or
sti
cli
add
insl
mov
into
ret
mov
or
sub
fs
add
stc
mov
and
dec
fs
jecxz
xchg
ret
jno
faddl
add
and
hlt
xchg
xchg
into
in
outsb
jmp
mov
or
out
add
mov
popa
sbb
jns
xchg
pop
jb
stos
adc
xorl
adc
pop
xor
and
repz
into
sbb
leave
xlat
mov
xchg
sbb
lea
push
jmp
sbb
dec
daa
mov
or
adc
sbb
pop
aam
or
loopne
ss
cmpl
add
js
mov
inc
fldl
jno
mov
out
ficoml
xchg
mov
mov
mov
push
lods
push
test
xor
scas
adc
leave
cli
and
adc
lret
je
inc
jnp
pusha
add
push
stos
or
pushf
test
popa
in
fs
dec
jbe
fidivrl
xor
mov
xchg
xor
stos
push
cs
xor
jmp
mov
in
jno
das
push
insb
addb
add
ret
cmp
repnz
hlt
in
sti
in
inc
lods
cmpl
jcxz
inc
and
hlt
inc
push
sub
cli
cmp
jns
aad
dec
lret
ss
jne
loop
enter
repnz
mov
fs
fbld
nop
dec
push
int
cmp
lret
jmp
pop
jne
sbb
jmp
push
mov
aas
lock
cmp
mov
in
in
push
pop
mov
addr16
pop
popf
ret
in
out
mov
mov
and
inc
jo
inc
inc
movsb
mov
mov
mov
jae
sbb
pop
subl
aam
pop
xorl
cmpsb
mov
cld
sub
push
adc
rep
push
rcrb
cmp
arpl
mov
fnstsw
loopne
sahf
lcall
subl
andb
cli
fs
loope
pop
inc
popa
sbb
jne
jl
add
lret
mov
and
jecxz
out
pop
adc
mov
add
ret
xor
bound
mov
xor
testl
clc
ljmp
sbb
add
and
xor
hlt
sbb
fdivp
shrb
in
scas
inc
addr16
or
mov
gs
mov
inc
les
jl
subl
xor
push
je
sub
and
shll
inc
fnsave
and
jecxz
into
or
in
lahf
mov
icebp
icebp
scas
sbb
loop
dec
rcrl
mov
pusha
loop
dec
fs
adc
test
xchg
mov
push
sarb
ficomps
jnp
pusha
hlt
loopne
mov
push
sarb
repz
je
push
cld
jno
sub
bound
arpl
cs
adc
mov
sbb
jbe
push
jbe
push
aas
fnstcw
add
in
insb
enter
movsl
jns
fs
imul
mov
lock
jbe
pop
jle
aas
and
repz
sti
cmp
nop
sbb
ret
adc
fcomp
rcrl
ja
xchg
hlt
sahf
and
pop
ljmp
xor
xchg
or
push
mov
xchg
cmp
mov
fs
xchg
mov
adcl
cmpb
jl
roll
cmp
lock
in
or
cltd
sarb
add
push
fistps
pop
fwait
xchg
fs
outsb
xchg
in
push
and
stc
mov
xchg
std
insb
adc
adc
addb
repz
xchg
pusha
and
dec
inc
mov
cs
sbb
xor
pop
jbe
jne
mov
aad
orl
inc
je
cmc
mov
jecxz
movsl
xchg
sbb
mov
xchg
sahf
subb
pop
testb
in
stos
clc
mov
inc
shrl
imul
test
cmp
andb
ss
out
push
push
lcall
fwait
lret
and
ja
mov
xor
fs
call
js
test
stos
push
xchg
je
push
ss
test
push
mov
or
test
xchg
mov
faddl
popf
adc
fstps
pop
ljmp
inc
xor
sbb
jl
adc
outsl
jecxz
loopne
mov
pop
adc
mov
inc
iret
dec
ret
xor
jl
pop
sub
inc
pop
xchg
xor
cmc
add
cli
adc
das
mov
sub
mov
mov
inc
loop
push
adc
and
sub
pop
mov
push
adc
mov
sti
in
fisubs
adc
les
jno
bound
cwtl
sub
loopne
add
pop
in
mov
ljmp
inc
js
add
daa
mov
jb
jle
ret
enter
and
and
inc
out
mov
push
pop
xor
adc
pop
push
sbb
pop
jp
cmp
je
sbb
out
out
push
jg
xorl
jo
xor
sahf
adc
and
and
ret
fmull
arpl
inc
aam
mov
movsb
jo
inc
pusha
test
inc
outsl
pop
sbb
inc
jp
or
adcl
or
xchg
mov
adcb
bound
jl
xchg
pop
je
mov
or
pop
aas
mov
insb
adc
dec
movsl
ss
mov
inc
pop
and
dec
cld
lret
fs
push
pop
flds
adcb
mov
arpl
lea
sti
addl
xor
push
cwtl
add
adc
mov
push
lods
ljmp
pop
mov
int
loope
xor
add
cld
sbb
fdivrs
pop
push
fcmovb
ds
cwtl
sbb
cmp
hlt
adc
dec
sti
or
or
aas
loope
add
in
cld
adc
hlt
mov
fcompl
fmull
and
mov
or
leave
in
mov
sbbl
jecxz
in
ret
loop
ret
aam
ss
arpl
aam
std
int
inc
xchg
jmp
dec
sti
mov
or
into
in
mov
in
sbb
ret
mov
mov
fimull
js
push
or
testb
inc
sub
mov
xor
xchg
test
call
mov
cmpsl
rcr
std
dec
dec
mov
insb
loope
cmp
inc
fsubrl
inc
add
mov
dec
test
loop
push
or
jle
scas
sbb
mov
push
mul
cmp
pusha
xor
mov
mov
hlt
mov
lcall
mov
ja
pop
push
enter
repz
push
push
push
cmp
dec
fcmovnbe
fs
lock
inc
arpl
adc
and
push
cmp
jle
push
mov
std
and
in
pop
int3
mov
push
mov
outsl
int3
fs
add
add
cmpsl
in
push
int
jnp
mov
and
xor
dec
aaa
and
xchg
lret
push
repz
xor
xchg
movsl
outsb
jne
clc
cwtl
dec
mov
and
and
and
mov
and
cmp
and
movsl
jmp
movsl
je
sti
and
in
adc
loope
aas
pushw
icebp
push
ret
mov
inc
movsb
pop
rol
push
mov
les
pusha
int3
or
lcall
inc
lods
mov
or
lcall
hlt
gs
mov
mov
or
jmp
cltd
ret
dec
es
repnz
or
rcl
xchg
mov
inc
and
rol
or
inc
jmp
ret
inc
xor
fcmovb
jmp
js
push
repz
mov
mov
test
mov
js
push
repz
clc
mov
sbb
jecxz
les
jl
jmp
js
push
repz
pop
inc
imul
inc
sbb
xor
rorb
fiadds
dec
push
roll
jo
sbbb
es
jg
pusha
adc
lock
in
push
jmp
ret
ror
pop
mov
mov
test
test
jecxz
test
mov
push
pop
ret
fistps
xchg
das
lods
xchg
mov
jnp
test
sti
cltd
add
add
xchg
mov
or
out
jns
sub
and
fistl
nop
dec
leave
dec
sbb
arpl
je
mov
mov
add
jl
fbstp
push
pop
hlt
hlt
push
sbbb
or
aas
jp
test
or
mov
mov
icebp
ret
add
fstpl
fnstsw
and
mov
jo
pop
std
iret
mov
inc
fildl
add
sahf
add
mov
in
lods
ret
push
ds
push
inc
cmovge
inc
sbb
and
inc
or
loope
ds
mov
ret
shl
loop
inc
mov
pop
ret
pop
das
das
sti
hlt
or
or
fwait
cld
push
pop
vmulps
fcmovb
push
shr
sbb
call
fcoml
idivb
mov
mov
outsb
push
ret
aas
fwait
or
jo
push
lret
fdivs
pop
in
imul
cld
dec
test
popa
fcoms
repnz
nop
repnz
mov
aas
int3
call
fdivrs
cmp
mov
in
mov
loopne
fdivrl
push
lahf
insb
test
divb
inc
rclb
and
int
pop
jp
loope
lea
fistpll
mov
xor
dec
mov
mov
shr
pop
sbb
shrb
hlt
roll
pop
imul
movsl
mov
cmc
dec
inc
gs
mov
xor
sbb
or
je
bound
dec
bound
addr16
adc
into
sbb
push
mov
adc
lcall
and
mov
lret
sub
pusha
mov
push
stos
xchg
movsl
and
mov
cld
imul
and
sub
xchg
rclb
loop
out
lods
adc
gs
or
fistpll
and
sub
fwait
push
jnp
add
test
loop
arpl
mov
out
fs
xchg
ficomps
mov
fnstenv
adc
fsubl
imull
sbb
les
ret
rolb
push
jnp
dec
hlt
sub
fmulp
hlt
jno
test
mov
repnz
pop
xor
xchg
xlat
inc
pop
leave
loopne
stos
in
mov
add
mov
jl
xor
shlb
adc
jo
push
ss
xor
gs
adc
aad
int
mov
jecxz
push
jge
stc
ret
or
addl
jl
pop
cmp
orb
ror
sub
adc
les
cmp
sbb
cmpl
xchg
inc
adc
sub
jmp
cmpsb
push
mov
pop
scas
mov
jp
mov
mov
lds
lods
add
or
in
icebp
pop
jne
lods
test
xor
dec
mov
iret
mov
mov
roll
rcll
repnz
lahf
ret
inc
mov
xlat
out
sbb
loop
mov
aaa
sub
jle
inc
inc
sbb
dec
test
or
sbb
ficoml
fisttpl
cmp
rcr
pushf
stos
js
stc
add
ds
clc
and
inc
push
into
push
stc
mov
sub
and
add
cld
popf
loopne
je
lcall
jecxz
cwtl
ret
aam
loopne
icebp
lahf
adc
ds
xor
test
repnz
in
in
pop
fdivrp
inc
or
pusha
mov
jns
adc
adc
cld
push
arpl
sbb
scas
push
xchg
leave
inc
cmp
popf
and
xor
fistl
sub
mov
xchg
adc
push
imul
subl
aas
pop
repz
cld
xchg
data16
mov
repz
cmc
mov
ss
les
add
mov
ljmp
add
jge
add
rorb
xor
iret
sub
out
pop
sub
pop
jb
dec
or
mov
inc
gs
add
andl
fmull
jecxz
cmpsl
jne
sbb
repz
jge
mov
pop
sbbb
testl
bt
sbb
sub
hlt
add
aaa
loope
test
test
movsl
aaa
fldl
inc
repz
rcl
loop
xchg
subb
bound
cmp
stos
cwtl
inc
jns
push
es
jg
dec
xor
fcom
outsb
stos
add
and
cld
jbe
aaa
mov
pop
mov
cmc
sub
inc
sub
ja
sub
sbb
daa
daa
inc
leave
aaa
test
bound
repz
sub
in
inc
clc
and
test
cmc
adc
in
adc
add
add
cld
out
subb
sbb
sub
fcoml
shll
inc
hlt
lods
test
or
xor
sbb
int
cmpsl
fsubrs
push
mov
mov
clc
push
and
or
mov
fsubr
movsb
adc
mov
loope
jae
push
mov
push
and
pop
mov
arpl
int3
push
movsb
into
in
sbb
lods
xchg
cmpsl
cmp
sbb
fimull
into
fisubrs
stos
sbb
ja
aam
je
xor
or
mov
fwait
mov
and
mov
lods
push
push
mov
hlt
js
arpl
sub
fildl
mov
and
shll
stos
push
in
mov
push
mov
push
or
adc
push
lods
dec
add
cmp
int
or
shrl
inc
jns
adc
mov
ljmp
in
push
mov
scas
pop
mov
test
imul
xor
int3
in
adc
test
loope
xor
xchg
int
jo
adc
mov
fisttpl
icebp
cmp
ja
scas
cs
sbb
adc
add
icebp
mov
jmp
in
fisubl
or
sub
ret
hlt
xorb
mov
jmp
js
faddp
in
push
mov
dec
data16
arpl
scas
push
cmp
aad
je
fcompl
mov
ficompl
je
jle
inc
test
mov
shrb
push
sbb
xchg
dec
nop
ja
pop
pop
les
push
jecxz
sbb
addr16
mov
and
mov
and
add
push
inc
lods
or
or
push
bound
mov
push
xor
xor
arpl
push
andl
movsl
dec
stc
xor
nop
jo
insl
scas
mov
repnz
pop
mov
into
loop
and
sub
and
push
jecxz
cmp
pop
xor
mov
ret
mov
pop
dec
and
pop
fwait
mov
xor
pop
leave
xchg
orl
js
cmp
insb
jb
mov
repnz
inc
sbb
sbb
rcrb
jbe
mov
shl
mov
jge
repnz
add
inc
pop
loop
loopne
cmpsb
es
popa
roll
sarb
add
mov
jecxz
push
xchg
data16
es
sbb
repz
mov
fistl
fistl
push
sti
sub
mov
mov
fstl
push
xchg
mov
mov
in
nop
lock
dec
out
rol
add
loopne
test
or
mov
repz
test
mov
fs
jbe
fcom
add
xchg
ds
je
scas
dec
xchg
sub
dec
mov
rorl
adc
fcompl
mov
inc
decl
in
jne
push
and
fs
xor
lds
bound
aaa
fbstp
mov
mov
loopne
inc
push
mov
add
rclb
mov
leave
insb
jge
mov
push
and
imul
loop
mov
sub
rolb
out
cld
push
aaa
push
mov
or
inc
cltd
add
dec
dec
ljmp
push
insb
add
sarl
mov
je
lods
dec
jae
fs
imul
loope
mov
fmul
xor
mov
scas
jmp
lret
repz
movsb
adc
ds
addr16
mov
aam
pop
mov
cmp
fsts
fsubl
out
pop
mov
add
insl
jl
sbb
loop
inc
test
es
sub
inc
push
push
inc
call
jp
mov
push
and
arpl
fs
rorl
ror
les
inc
inc
aad
lods
ret
ret
dec
jg
rcr
outsb
push
adc
jecxz
mov
shrb
dec
lahf
xchg
cmp
mov
inc
pop
push
pop
rorb
fisubs
cmovge
xor
add
sahf
js
nop
popf
out
and
jns
fisttpll
dec
jge
loope
stos
cli
mov
pop
sahf
stc
push
inc
mov
fwait
xorb
out
jl
mov
in
sbb
repz
je
orb
push
in
faddl
repz
or
hlt
cmpsl
ljmp
xlat
pop
xor
add
int3
push
in
test
aam
mov
push
cwtl
jecxz
mov
dec
add
adc
pusha
aam
and
loop
aam
arpl
jnp
pushf
ret
cmpb
xor
mov
mov
jmp
out
xor
rcll
stos
jns
add
pop
test
add
cmpsb
loope
sub
movsl
sbb
shll
hlt
movsb
lods
fdivs
sub
ret
pop
adc
inc
inc
shl
mov
in
loope
bound
cmpsl
push
lret
arpl
push
inc
out
adc
repz
mov
xlat
imul
pusha
inc
lret
ret
test
ds
mov
pop
cmp
adc
popf
fdivrl
loop
lods
mov
xchg
int
dec
dec
jno
pop
popf
pop
inc
ljmp
fbstp
add
xchg
add
rorl
sbb
or
pop
iret
jp
xor
je
aam
mov
xchg
mov
mov
fs
mov
and
mov
les
inc
scas
mov
in
and
in
mov
and
mov
outsb
fwait
sub
and
jle
fdivrs
je
sbb
xor
testb
inc
mov
and
cmpsl
jl
aas
lahf
bound
jne
out
mov
loop
mov
or
popf
movsl
mov
jge
push
inc
les
loopne
stos
jno
dec
push
push
out
jno
in
mov
pop
mov
fdivr
jmp
repz
cmp
iret
or
in
xchg
outsl
cmp
cld
or
mov
add
cmp
pop
jo
dec
add
mov
mov
sub
les
sub
pop
xchg
jle
stos
mov
and
xchg
mov
mov
and
test
cmc
sbb
xor
pop
clc
and
rcll
fs
nop
push
dec
mov
sub
loop
xchg
pop
push
addl
mov
test
dec
ds
push
cmp
loope
cmp
push
test
enter
push
in
xor
faddp
mov
fsubrs
mov
fcmovb
sti
sbb
stos
add
ret
add
fadds
mov
arpl
bound
and
pop
pop
loopne
cmp
xlat
lods
inc
iret
add
pushf
inc
mov
out
add
xor
cmp
jnp
addb
aaa
push
scas
lcall
push
fistps
fdivp
lcall
sub
jo
jecxz
sub
loop
cld
int3
push
jl
xor
jbe
mov
inc
jl
std
sahf
and
mov
ret
jmp
idivl
xor
jecxz
cmp
dec
xorb
mov
add
adc
insl
imul
mov
jmp
add
add
repz
daa
mov
lret
mov
sub
xchg
jl
repz
adc
jle
mov
sbb
dec
popf
jle
sahf
aas
cltd
pop
inc
pusha
dec
loopne
loope
xor
stos
cmp
movsb
jb
popf
and
jecxz
aam
and
xchg
xor
lea
push
dec
fidivrl
lret
es
and
adc
jne
scas
pop
loop
insb
cvtps2pd
loop
sahf
adc
sbb
dec
and
mov
cmp
cwtl
mov
test
inc
or
cmpsl
adc
ljmp
push
cltd
jbe
loope
or
push
jmp
fcoml
sbb
adc
xor
in
jmp
and
jle
loope
jecxz
jbe
lods
adcl
sub
add
ds
push
mov
scas
mov
or
jmp
stos
jnp
fcmovnb
dec
pop
sub
push
adc
mov
or
cmpl
xchg
test
cld
test
mov
loop
pop
imul
in
and
sbb
int
stos
inc
xchg
jg
cmp
add
xchg
shrb
add
pop
sahf
add
jecxz
and
inc
xchg
mov
xor
loope
shll
mov
cwtl
jb
outsb
dec
shl
jp
lcall
mov
les
lods
test
pushf
mov
mov
in
loopne
cmp
xchg
rcll
stc
xor
dec
push
in
xchg
lods
sub
loopne
jne
fwait
mov
and
addl
pop
sbb
and
and
jnp
mov
sbb
and
cltd
add
and
in
xor
pop
and
dec
add
lret
add
xchg
lods
inc
ljmp
pusha
fcompl
dec
orb
pop
les
sub
jo,pt
mov
lret
adc
xor
ja
ret
std
fcomps
and
fs
lret
enter
jp
fwait
cmp
test
leave
or
fs
inc
das
fs
mov
js
mov
js
jmp
js
push
repz
sbbl
jg
nop
lret
mov
cmp
cmp
sub
xchg
sbb
mov
loop
in
xorb
dec
cmp
ficomps
shl
fdivl
insl
aas
test
mov
mov
dec
fisubrs
jmp
adc
fwait
shll
aad
mov
cmpsl
sub
mov
or
fldenv
lock
jp
stos
pop
jae
movsb
inc
pop
push
out
icebp
add
push
test
hlt
test
mov
push
stos
add
repnz
pop
aam
outsb
add
movsb
fdivrs
pop
jp
xor
inc
push
in
std
hlt
xlat
hlt
test
adc
adc
fwait
mov
shlb
push
sbbb
lahf
and
sbb
jecxz
mov
sbb
fldl
inc
in
repz
mov
add
cmpb
and
test
test
repz
cli
in
adc
aas
cmpsb
jo
out
adc
inc
sub
adc
daa
mov
aam
mov
push
push
jle
and
mov
pop
jecxz
and
sbb
fiadds
mov
pop
popa
fwait
inc
and
int3
push
cs
adc
and
mov
lods
pop
rclb
test
lods
je
cwtl
lcall
cmp
mov
jecxz
xchg
outsl
push
sbb
sub
insb
mov
and
out
insl
xor
adc
fs
cwtl
in
jge
pop
add
inc
adc
insb
add
adc
in
scas
push
mov
push
in
loope
les
jmp
cmp
add
sub
in
inc
sahf
xlat
dec
cmc
dec
je
nop
icebp
sub
xor
call
add
cld
cmp
loope
popf
fsubp
inc
dec
in
sti
repnz
sti
lods
sbb
inc
fdivrs
sub
jge
pop
loopne
inc
cwtl
jle
lret
and
mov
arpl
mov
into
sahf
push
mov
sti
add
std
lods
push
and
imul
in
jecxz
and
loop
add
add
pop
add
adc
sbb
xchg
sbb
paddusw
jecxz
call
int
in
into
out
es
pop
cltd
inc
pusha
loopne
shl
inc
push
jb
push
add
xchg
popf
mov
adc
sub
xor
mull
in
hlt
mov
outsl
std
fxch
xorb
and
inc
mov
xchg
mov
mov
inc
or
loopne
mov
lret
neg
sub
push
lret
pop
sub
loopne
aad
push
jae
sub
jb
push
add
fimull
push
hlt
loop
jb
push
imul
in
imul
or
xchg
jno
sub
mov
nop
pushf
insb
lcall
mov
push
jmp
sub
xor
push
insl
mov
rcrl
repnz
adc
xorl
mov
jmp
mov
mov
scas
sahf
clc
shl
or
in
icebp
mov
jnp
fstpt
aad
arpl
xlat
xchg
xchg
xor
or
insb
popa
sub
aas
mov
mov
roll
in
test
add
push
push
movsb
mov
inc
inc
ret
arpl
sbb
roll
and
add
loop
mov
and
in
roll
inc
sti
and
test
add
movq
add
push
je
xor
mov
jg
add
repz
addl
jecxz
ret
fidivrl
outsl
cmp
cmp
cmp
rolb
dec
or
movsb
lods
mov
and
and
insb
mov
repz
xor
pop
aad
cld
fcompl
cmp
pop
in
jmp
jge
sbb
stos
scas
sar
mov
mov
ds
fisubl
xor
and
adc
pop
jmp
jno
fwait
sbb
and
stos
pusha
jns
movsb
or
in
mov
push
lods
lock
into
lock
test
aad
sbb
movsb
inc
mov
or
xor
rep
cmpb
mov
sti
inc
js
pop
and
rol
insl
inc
cmp
sub
arpl
sbbb
out
jns
and
insl
ret
shlb
pushf
int3
sub
and
jecxz
and
lea
cs
adc
mov
xor
adc
xlat
or
push
mov
fbstp
xor
or
add
arpl
jle
out
dec
push
hlt
out
stos
or
sbb
subb
jmp
in
and
xchg
fldt
add
jmp
mov
push
mov
repz
mul
loope
xchg
adc
or
sahf
jno
fsub
push
mov
and
movsb
pop
inc
scas
aam
xor
lcall
and
dec
sub
mov
sbb
nop
mov
mov
aas
inc
sbb
testl
icebp
xor
dec
insl
xchg
mov
mov
jae
sub
icebp
xchg
mov
inc
pop
sub
mov
mov
sbb
aam
test
loope
movsl
insb
cld
insb
adc
fsubrl
or
adc
daa
mov
loop
dec
and
sbb
xchg
imul
jp
cmp
lret
test
fsubs
pop
hlt
and
cmpsb
ret
mov
out
cs
xchg
jge
dec
loopne
jmp
lahf
dec
cld
xchg
mov
out
enter
jb
in
add
mov
adc
cmp
sbb
add
sub
addl
loop
arpl
fildl
mov
cmp
adc
ret
or
ret
xchg
pop
ret
mov
lret
jmp
inc
test
scas
fidivrs
aam
jns
or
jae
hlt
hlt
sbb
cmp
sub
hlt
clc
lahf
mov
hlt
cmp
mov
dec
push
and
shr
mov
in
sub
stos
in
fmul
cmpb
jbe
push
xchg
sti
inc
js
cmc
ret
aam
and
xchg
test
fstl
xor
lret
sub
sub
sub
repnz
sub
stos
mov
bound
das
icebp
sub
fcmovnbe
popf
pop
out
or
repnz
sti
cmp
dec
mov
pop
jae
jmp
mov
push
pop
movsl
aam
inc
fdiv
je
jmp
cmpsl
push
cmc
stos
and
dec
stos
filds
mov
inc
or
repz
shr
addl
roll
test
mov
push
and
insb
dec
adc
cld
xchg
push
je
outsl
sti
stos
shlb
imul
mov
ret
mov
shll
lcall
jnp
lods
xlat
jne
mov
push
iret
mov
loopne
popf
bnd
pop
push
scas
cwtl
inc
and
dec
insl
fsub
das
int
out
jae
mov
js
push
imul
add
cmpsl
mov
xchg
and
aam
pop
adc
mov
rcll
pop
mov
orb
dec
pop
fldpi
repz
pop
js
roll
mov
repz
orl
cld
cltd
in
movsb
outsl
je
mov
sahf
mov
xchg
add
mov
test
loope
push
jecxz
push
movsb
pop
iret
insl
test
jecxz
inc
xlat
jmp
test
add
ljmp
outsb
lock
cwtl
mov
jp
sub
fldenv
clc
das
shlb
jnp
xor
cmc
cli
jae
dec
and
fists
repnz
jne
aas
push
js
sti
bound
loop
arpl
jecxz
enter
test
loopne
es
loop
add
jae
xchg
push
seto
dec
mov
stos
push
add
repz
adc
aam
add
add
fldcw
adc
sysenter
lock
push
jno
cmp
mov
sbb
fldcw
ret
pop
adc
repz
js
adc
fs
ret
inc
cs
fs
push
in
and
aam
sub
lock
xor
arpl
xor
dec
fbld
cmc
jl
jmp
jl
sti
push
inc
ficoml
add
cmp
ficoms
nop
mov
dec
jno
loope
push
jb
ret
mov
idiv
scas
sub
add
js
ret
push
or
scas
mov
daa
fnstcw
adcb
test
mul
lahf
loopne
js
xchg
decl
shlb
bswap
fs
movsb
or
cmpsb
sbb
push
xadd
imul
mov
inc
fwait
inc
stos
mov
mov
jecxz
ret
fcmovbe
stos
mov
xchg
adc
lret
popf
xchg
push
icebp
in
in
mov
xor
je
adc
cmp
fdivrp
and
fcmovbe
fwait
pop
jl
pop
aas
adc
xchg
push
in
icebp
stc
mov
sbb
pop
scas
dec
push
pop
cmp
mov
inc
aaa
fsubrl
aas
mov
arpl
push
lret
cmp
shrl
lahf
jno
jae
inc
outsl
sbbl
pop
xchg
adc
test
fiadds
int3
xor
inc
add
jg
jecxz
cmpsl
test
outsl
mov
pusha
add
fcomps
mov
pop
cltd
add
fs
inc
repnz
imul
repz
lods
jnp
test
repz
and
dec
loope
mov
and
inc
or
xor
frstor
mov
mov
leave
jmp
movsl
cmpsl
inc
je
sbb
loope
adc
loope
call
or
imul
roll
add
or
stc
sub
fmull
iret
cs
adc
xchg
negl
ret
push
movsb
pop
dec
test
jp
pushf
iret
dec
mov
cmp
pop
shlb
loopne
dec
hlt
or
stc
push
xchg
jecxz
mov
xor
mov
mov
lret
arpl
inc
jae
arpl
jae
fst
sub
pop
jecxz
loopne
mov
lds
cmp
loopne
orb
mov
jno
cmp
shll
lret
ret
jl
inc
xchg
repz
fstpl
cltd
inc
pusha
adc
out
inc
js
insb
push
add
fnstsw
and
and
out
xor
xchg
lods
arpl
fdivs
and
cwtl
je
jb
jl
je
lcall
mov
or
mov
add
pop
in
loope
or
ret
inc
fldenv
aam
sub
hlt
repz
popa
popf
call
xchg
test
jae
aaa
orl
fs
arpl
push
pop
out
xchg
cmp
cmc
xchg
dec
ficoms
ss
xor
repz
inc
ficoms
add
and
out
mov
loope
imul
adc
aad
adc
faddl
xchg
lock
les
cmp
mov
aad
mov
mov
inc
icebp
mov
adc
push
ret
clc
cld
xor
cmp
pop
add
sub
or
jl
inc
xchg
adcl
je
mov
or
push
add
and
pop
cmp
add
lds
sub
jle
mov
ljmp
dec
cs
add
ffree
and
bnd
mov
xchg
inc
inc
sbb
mov
adc
fmull
or
loopne
in
lahf
push
mov
cld
xchg
inc
inc
push
ret
cs
jb
pop
push
repnz
mov
rcll
mov
jb
sarl
mov
jmp
jl
mov
push
sbb
repz
push
pop
mov
int3
mov
imul
stos
inc
scas
mov
fcmovnu
subb
sti
mov
std
in
and
shll
jbe
test
out
popa
scas
mov
add
jp
in
cmp
mov
or
sub
mov
aam
mov
adc
xchg
and
aam
cli
scas
dec
jns
shlb
imul
dec
sbb
aam
repnz
test
fcomps
push
ret
push
push
sti
sbb
sti
mov
jo
adc
icebp
sbb
dec
je
jae
repz
test
sub
xchg
jae
icebp
sub
cmpl
fsubl
mov
mov
add
aam
push
pop
cmp
add
pop
shlb
push
add
dec
fidivrl
mov
mov
ret
in
js
movsl
mov
jnp
push
mov
hlt
mov
and
jge
clc
xchg
out
pop
das
je
inc
icebp
popa
stos
push
adc
push
repnz
xor
jmp
pop
dec
mov
int3
clc
loop
in
cld
mov
insl
fldl
lahf
sbb
xorb
fsubrl
inc
repnz
rcr
cli
inc
mov
enter
test
test
cld
sbb
fst
fwait
xchg
mov
test
enter
loopne
ror
mov
shl
mov
enter
les
jmp
add
push
add
and
mov
subb
movsl
shl
lahf
movsl
sarb
ljmp
xchg
inc
iret
jae
lcall
in
out
shll
jae
nop
pop
jne
pop
loope
in
adc
push
in
fmul
jnp
jp
mov
cmp
mov
push
les
pop
xchg
and
adc
pop
and
icebp
in
xchg
hlt
lods
fcompl
fnstsw
push
xorl
xchg
lret
inc
ljmp
mov
mov
lcall
add
mov
lret
addl
aam
jp
xor
insb
gs
jnp
in
xchg
or
jecxz
testb
jnp
lock
rcl
aam
cmp
mov
aam
ret
mov
dec
adc
jmp
sub
popf
fisttpl
mov
mov
sbb
inc
push
sbb
pmaxub
cmp
fwait
adc
int3
sub
and
les
insl
xor
and
int
icebp
lock
mov
fcomp
in
test
xor
sti
loopne
pop
or
je
cmpsl
inc
xorl
fstp
and
dec
add
lods
pop
inc
frstor
add
pop
enter
or
mov
pop
out
or
mov
les
mov
cmpsb
lea
inc
xchg
inc
cmpsl
jae
push
sbb
inc
jns
bound
or
lds
dec
ss
sub
fsubr
and
adc
add
jns
loope
ret
scas
push
inc
test
loopne
dec
and
je
mov
sub
or
aas
inc
cmp
andb
xorb
inc
mov
arpl
movsb
push
fnclex
pop
shll
and
sbb
xlat
inc
mov
cltd
inc
ret
xchg
pop
cmpsb
add
clc
sbb
ljmp
insb
mov
out
notl
ret
je
push
outsb
mov
arpl
push
stos
mov
mov
je
js
movsl
jl
in
mov
mov
js
mov
dec
rcr
cmp
shrb
movsl
fs
aam
jbe
test
or
cmp
fcoml
insb
stc
jecxz
out
mov
outsb
cmp
pop
cmp
ret
pop
jecxz
and
daa
mov
sub
outsl
frstor
and
cmp
iret
mov
mov
test
fistpll
loopne
jb
xor
sbb
mov
outsl
aam
push
popl
pop
arpl
hlt
sbb
inc
sbb
and
sbb
and
sbb
jne
mulb
mov
inc
movsl
aaa
out
xor
push
push
out
adcl
jle
subl
pop
loop
outsb
xchg
jno
insb
xchg
inc
fldenv
adc
daa
popf
add
mov
mov
and
jl
aam
lods
or
sbb
push
adc
int3
jno
xor
movsb
arpl
and
lock
pop
out
pusha
jmp
int3
andb
xchg
fldl
jmp
pusha
clc
or
aaa
mov
inc
adc
pop
fldl
loope,pt
test
mov
inc
jge
daa
out
div
cmp
ret
mov
add
out
inc
push
idivb
hlt
les
lret
jp
pushf
loop
les
cmpsb
jp
pop
adc
ficoml
fiadds
mov
or
cmpsl
test
test
push
cmp
aas
lcall
inc
sub
mov
push
leave
stos
inc
inc
outsb
ret
and
pop
sbb
sbb
xchg
test
push
push
movsb
js
lods
xchg
pop
jmp
mov
jl
lea
dec
mov
mulb
flds
jae
mov
push
jmp
fs
aas
push
jne
pusha
mov
inc
dec
shrb
fisubrs
push
fs
mov
nop
jne
inc
push
jne
sti
in
jno
int
clc
movl
fisubrs
adc
jno
jno
orb
mov
pop
and
mov
lret
into
sarb
mov
insb
int3
stos
xor
cmp
rolb
loopne
and
ret
jl
ljmp
dec
insb
pushl
adc
lock
pop
call
mov
mov
ret
adc
enter
addb
rcll
and
xchg
push
push
test
scas
mov
sbbl
cmp
lods
sub
fsubs
ljmp
xchg
es
xor
sub
dec
sub
mov
mov
xor
gs
inc
roll
push
mov
ret
mov
in
aam
and
js
aas
mov
xor
push
xor
xchg
repnz
sub
pop
aam
js
mov
jnp
xchg
and
cmp
lret
or
mov
shll
call
mov
jecxz
loope
repz
scas
xchg
or
xchg
test
lods
push
dec
adcl
fisubs
mov
iret
add
daa
loope
outsl
cmpsb
movsl
jge
jmp
fmul
add
in
jno
loop
test
mov
test
fs
add
jge
aam
xorb
sbb
fs
call
pop
fistps
fs
enter
jecxz
call
std
stos
std
xor
mov
sub
lret
sbb
or
aas
clc
pop
and
sub
mov
dec
adc
rcl
mov
push
pop
in
xchg
scas
sub
push
stos
hlt
addb
dec
fs
sbb
idiv
and
fdivl
insb
mov
js
fwait
test
jbe
pop
mov
mov
cld
jecxz
movsl
iret
adc
iret
loope
scas
nop
inc
lret
popa
sbb
and
inc
cli
or
popa
or
outsb
inc
test
std
lods
in
adc
std
rolb
sbb
xor
inc
push
aad
movsl
sbb
flds
loope
mov
loope
inc
leave
es
popf
cmpb
mov
push
test
mov
mov
outsl
mov
sub
inc
adc
shlb
les
pop
and
dec
call
mov
lods
and
mov
shrl
xor
ret
add
sub
jno
lods
lret
push
sub
jle
sub
dec
popa
xchg
mov
in
adc
xor
dec
xor
sub
div
stos
adc
arpl
cmp
test
sbb
lahf
pop
xlat
xorb
fwait
xor
std
xchg
pusha
testl
push
sbb
enter
and
pop
lock
bound
loope
arpl
loop
dec
shlb
and
xchg
xchg
test
mov
roll
aam
push
mov
push
jl
hlt
mov
in
ficomps
xor
mull
push
jbe
ja
mov
popa
fiaddl
inc
mov
inc
and
add
push
jo
lods
sub
jp
imul
adc
mov
lods
fcmovbe
mov
dec
enter
push
ss
loopne
adc
cmp
fisubrl
mov
pop
adc
fsubr
dec
loopne
divl
mov
mov
xor
imul
add
mov
ret
xchg
sub
mov
pop
out
scas
int3
cltd
jecxz
scas
int3
enter
pop
sti
cld
inc
mov
inc
mov
cmpl
push
adc
cltd
sbb
fwait
test
push
test
mov
loope
insl
xchg
pushf
jmp
ret
int3
sub
loope
sarb
jecxz
add
and
sahf
mov
add
int3
pop
jg
addb
out
jb
push
dec
add
icebp
stos
adc
add
sub
hlt
mov
or
or
mov
mov
in
cld
push
ffreep
in
dec
jne
push
jno
hlt
adc
popa
pop
xor
dec
mov
ffree
es
ret
loopne
mov
jg
add
insb
mov
inc
pop
mov
test
pop
fldenv
bound
mov
add
jnp
xchg
xchg
mov
pop
in
fs
push
xor
adcl
lret
adcl
sbb
outsb
cld
imull
adc
rol
orb
mov
filds
push
xchg
push
lahf
cld
mov
stos
movsl
xchg
and
mov
hlt
cmp
jo
pop
xor
shlb
or
in
push
dec
fcmovu
mov
dec
jecxz
ja
stc
movsb
mov
or
and
das
cmp
inc
mov
sbb
push
les
divb
in
imul
jnp
mov
or
mov
js
xchg
mov
or
js
inc
fs
jo
inc
ret
fcoml
scas
fnsave
dec
faddl
leave
or
mov
popf
repnz
bnd
and
cmp
stc
mov
mov
popa
shll
adc
mov
xchg
cs
jne
mov
sub
lret
sbb
xorb
mov
lret
movsb
dec
push
fldenv
adc
insl
mov
loope
sbb
ss
popf
es
loopne
out
in
or
push
jae
int3
pop
cmp
or
in
push
pusha
or
push
cmpsl
scas
decb
xchg
jb
aas
cmpsb
addb
mov
cmpsb
pop
fnsave
pop
fstpl
fs
loope
lret
add
adc
mov
sbb
mov
arpl
adc
mov
or
test
push
in
or
mov
fwait
sbb
fcompl
mov
popa
dec
test
and
fwait
jns
in
ret
add
inc
push
cmovge
les
mov
pop
sbb
mov
push
stc
jge
mov
xchg
dec
aas
daa
sahf
xor
pop
or
in
movsl
int3
icebp
mov
repz
cmp
in
shlb
cli
test
jb
addl
ja
mov
mov
subl
push
mov
cli
movsl
cld
rep
cld
sub
ret
mov
popa
js
pop
adc
mov
out
dec
test
sub
loope
cld
push
pop
mov
movsb
pop
insw
test
mov
add
fs
es
sbb
frstor
xadd
cmpsb
dec
and
fdiv
popf
sub
adc
mov
jnp
hlt
mov
loopne
loopne
bound
shl
jmp
jmp
stos
sub
push
jae
adc
xchg
cli
clc
lock
out
mov
adc
arpl
mov
repnz
xchg
jg
jecxz
jae
sbb
sub
sbb
pop
pop
add
pop
cmpsb
popf
cmpb
popf
sub
or
clc
fcompl
insl
sub
or
mov
loope,pn
and
cmp
ret
dec
jg
outsb
jp
adc
mov
mov
lods
push
test
push
dec
lcall
mov
into
mov
jecxz
and
ret
loopne
fs
add
push
and
inc
lret
xchg
jno
in
lea
xor
sbb
arpl
adc
roll
xchg
sub
or
js
adc
pop
test
sub
adc
sbb
jle
and
adc
bound
bound
or
popf
in
lds
or
xor
jecxz
loop
lods
push
jmp
push
loop
mov
insb
in
pop
and
mov
mov
jne
jle
rcrb
cltd
xor
jo
pop
hlt
arpl
mov
jno
adc
jp
outsl
stos
fsubl
mov
iret
mov
pop
fisttpll
test
shlb
cmc
or
mov
cld
mov
xchg
pop
xor
cmp
lret
dec
xor
xor
nop
arpl
out
aam
pop
loopne
cmpl
adc
loope
sub
aaa
mov
int
lcall
adc
dec
enter
leave
mov
out
int
fbld
ror
sbb
in
pop
mov
lods
pushw
outsl
call
xchg
ret
pop
int3
pop
fiaddl
fsubp
or
fisubrs
add
lods
test
dec
scas
aam
cmp
pop
lods
mov
xchg
pop
xchg
inc
fnsetpm(287
push
cmpps
xlat
cmp
push
mov
loop
fidivrs
arpl
js
push
ret
lods
add
xor
repnz
pushf
loope
jecxz
out
push
jne
cld
mov
jnp
sub
xor
xor
ss
xchg
adc
add
leave
hlt
rclb
xor
sbb
pop
adc
cmp
lret
subl
inc
mov
xor
inc
jle
pop
divl
sbb
inc
mov
cmp
ret
adc
fsub
sub
cmc
cmpsb
jp
jns
and
sbb
pop
lods
outsb
cmp
mov
movsb
xchg
xor
adc
roll
add
sbb
fbstp
pop
mov
repnz
sbb
cmp
add
shl
stos
or
xchg
loop
mov
ret
xchg
iret
xor
mov
mov
subl
add
jecxz
repz
das
dec
push
jo
aad
jo
mov
cli
xchg
or
shrl
out
push
dec
push
repnz
mov
outsb
sar
shll
lds
scas
leave
dec
jecxz
jb
add
sbb
leave
aas
pop
mov
mov
enter
add
sub
add
pop
dec
lret
pop
mov
dec
in
cmp
push
and
mov
cmp
mov
lcall
cmp
lret
movsb
cltd
xchg
inc
jecxz
add
fwait
mov
ljmp
subb
pop
pushf
mov
adc
xlat
xorl
add
je
cmp
jp
out
pop
insb
filds
xchg
inc
cs
or
leave
fadds
inc
push
int3
pusha
inc
rcll
and
sub
adc
pop
in
fcmovnb
repnz
cmp
xlat
fs
fwait
loope
test
sbb
mov
dec
rcl
fs
je
pop
ret
sarl
enter
push
adc
dec
mov
mov
sarl
test
push
les
or
jmp
stos
rorl
loop
add
fistl
int3
dec
xchg
hlt
adc
and
mov
dec
and
adc
sbb
jl
insl
ret
inc
adc
push
mov
dec
mov
test
fimuls
repz
dec
pop
add
sbb
dec
int3
xchg
jnp
push
outsb
lahf
in
aas
push
lahf
rcrl
pushf
aas
bound
mov
int
dec
lcall
inc
sub
imul
cld
inc
test
into
add
les
pop
jmp
fwait
pop
fldt
pop
stc
push
pop
arpl
mov
sbb
jl
cmp
pop
push
in
mov
dec
sub
mov
js
fs
pop
out
test
rorl
cmp
test
or
sbb
xchg
loop
fwait
pusha
mov
mov
xor
jae
xchg
jle
add
subb
enter
or
js
or
ret
or
jle
mov
ja
push
mov
or
test
cmpsl
cs
fidivs
sbb
test
in
jl
movsb
jae
rclb
aaa
lret
data16
cmp
dec
jp
inc
insl
pop
fidivrl
jmp
jno
nop
jcxz
push
lods
and
inc
in
loop
push
mov
push
jno
pushf
push
inc
popa
pop
mov
adc
mov
nop
push
fldl
cmp
cmp
subl
mov
fisubrl
ficomps
negb
jne
aam
xchg
sbbl
pop
xchg
sbb
sub
jecxz
negb
mov
and
cwtl
and
pop
fmull
div
les
mov
jle
test
test
das
rcr
push
shl
clc
addr16
dec
pop
inc
lcall
push
push
cld
pop
fisubs
repz
dec
and
jle
mov
mov
scas
adc
adc
int
les
movl
fiadds
mov
sub
inc
xlat
jbe
sub
sbb
in
pushl
and
mov
icebp
mov
jle
iret
fistl
pop
lea
out
aas
push
cs
push
jle
mov
xrelease
sbb
sub
in
push
sbb
pusha
lods
sarb
jl
loope
add
xor
dec
pop
mov
mov
jle
not
push
fdivrl
cld
jns
or
push
dec
ds
in
adc
cld
or
mov
aam
stc
cld
fs
add
push
sub
lret
add
or
and
outsb
nop
scas
icebp
nop
xchg
cld
fcomps
in
int
jb
mov
mov
dec
pop
cmpsb
sbb
adc
dec
xchg
and
mov
pop
dec
sub
mov
cld
rorb
inc
adc
hlt
jno
mov
sub
inc
hlt
jns
push
push
and
shrb
hlt
or
je
in
movsb
in
repz
hlt
xchg
in
jmp
into
jno
push
repz
sbb
jb
fcmovnb
add
stos
in
sbb
in
jb
xor
gs
popf
addl
mov
lods
in
shrl
jb
fstl
add
lret
popa
fcmovnu
xchg
inc
or
test
andl
fsubrp
rclb
adc
lods
push
jae
repz
loope
mov
fstpt
mov
pop
or
cwtl
mov
imul
stc
sahf
sub
jae
add
mov
loope
pusha
rclb
add
mov
nop
xchg
mov
mov
mov
mov
mov
mov
stos
cli
scas
aam
dec
or
mov
and
push
in
jno
mov
add
ret
mov
sbb
ljmp
add
fsubrl
dec
lret
loopne
mov
icebp
test
dec
test
bound
cld
lret
and
scas
jae
adc
fidivrl
test
imul
sub
test
lods
jnp
lret
lods
adc
sub
shll
cmp
pop
xor
test
sbb
mov
adc
dec
or
fsubrl
cmp
lret
inc
lcall
mov
ds
orl
mov
lods
fmuls
fld
scas
in
push
cmpsb
sahf
inc
and
jbe
jns
inc
repz
sbb
outsb
andl
xor
jne
test
mov
fcoml
mov
mov
dec
push
addl
stos
shrl
jae
arpl
inc
adc
lahf
hlt
jnp
cld
in
hlt
out
cmp
outsl
jge
movsb
scas
dec
inc
sarl
xor
and
fcomi
data16
outsl
movsb
pop
pop
aas
stos
insb
xchg
mov
xor
mov
repz
cli
inc
pop
stos
pop
test
push
mov
jb
mov
sub
push
sti
shlb
mov
subl
sub
jecxz
and
in
ret
cmp
sub
adc
in
xor
mov
pop
jno
mov
repnz
adc
or
fucom
dec
pop
fstpt
in
test
or
add
add
mov
iret
sbb
push
nop
shll
movsl
test
js
jnp
mov
jmp
arpl
fisubrs
mov
mov
dec
jp
jmp
adc
in
or
mov
in
mov
push
outsl
xor
pop
mov
fdivl
in
xor
vmovntpd
bound
add
les
daa
popf
ljmp
ljmp
add
repz
les
mov
test
jecxz
cwtl
pop
stos
pop
icebp
hlt
insb
je
fistps
fistl
pop
push
adc
imul
and
sub
add
xchg
pop
and
not
test
repz
ds
xorb
addr16
and
int3
sub
sahf
and
aam
dec
push
mov
movsb
mov
mov
ljmp
stc
or
sbb
addr16
cmc
sbb
pop
push
repnz
pop
addr16
pop
ret
popf
inc
cld
sbb
or
mov
mov
and
add
push
and
int3
sbb
mov
push
mov
fs
cmpsb
int3
jge,pn
movl
cmp
mov
scas
jmp
je
lods
in
push
out
fwait
test
xlat
test
fcmovu
jae
ret
jle
cwtl
iret
icebp
pop
jecxz
les
push
inc
inc
mov
push
hlt
mov
and
hlt
add
adc
cmp
adc
and
je
xor
loope
mov
ds
xlat
pop
mov
fs
hlt
movsl
mov
push
mov
in
mov
cltd
inc
xor
loopne
sbb
movsb
mov
add
or
jmp
and
mov
push
fcompl
xor
jl
and
pop
loop
push
jns
inc
lret
fildl
mov
data16
cld
arpl
mov
orb
pop
ret
shl
or
sti
mov
imul
sub
rolb
loopne
pop
jo
bound
fwait
push
mov
test
push
mov
jne
jns
movsb
shr
lods
out
adc
and
inc
mov
pop
push
mov
sbb
loope
add
sar
jmp
or
lods
dec
adc
aaa
ret
rcll
hlt
jmp
pop
bnd
out
into
pop
and
jbe
or
in
xorb
sbb
inc
mov
shrl
in
pop
into
sti
aam
cmpsb
out
in
lds
cmp
inc
repz
inc
push
repz
mov
dec
or
mov
or
clc
xor
dec
cmp
jp
adc
icebp
mov
add
mov
je
gs
pop
nop
jo
mov
sbb
lcall
idivl
xor
repnz
les
lret
jecxz
inc
int3
lcall
enter
or
mov
jns
je
pop
jl
mov
pop
and
addr16
mov
xlat
and
sti
les
jae
jle
sbb
imul
arpl
mov
dec
xchg
out
icebp
test
int3
mov
mov
repz
sub
movsl
cmp
xor
cmp
pop
test
out
hlt
push
fstps
ja
lds
add
lret
jnp
or
adc
arpl
adc
and
add
fsub
loope
adc
loope
icebp
xchg
loope
jecxz
pop
fnstsw
jge
arpl
loopne
or
sbb
inc
je
hlt
or
add
loopne
lods
shlb
cmp
out
push
rcr
sbbl
cs
repz
sub
push
stos
ret
psubw
stos
adc
neg
sti
adc
xchg
inc
inc
filds
out
mov
shlb
dec
lock
fidivs
inc
sub
adc
fistpl
fldenv
adc
loopne
jmp
rolb
rclb
arpl
leave
sbb
mov
push
adc
xadd
dec
fs
cld
arpl
sti
imul
sbb
add
in
dec
adc
push
mov
cmp
cli
xor
xor
imul
repnz
cmp
fcmovu
and
xchg
shrl
mov
mov
sti
fs
xchg
and
pusha
fs
shll
hlt
sbb
mov
hlt
and
jae
dec
xor
notb
mov
jae
scas
ret
ret
pop
fstpt
dec
insb
hlt
daa
inc
cli
subb
jns
sbb
jnp
inc
outsb
sub
inc
sbb
je
jmp
sbb
cld
cld
fwait
in
dec
andb
jb
sub
mov
test
in
lea
inc
add
lret
outsl
mov
push
adc
sub
insb
jo
dec
lret
sbb
or
call
ljmp
push
inc
sarl
inc
ret
xchg
lret
arpl
xor
mov
and
mov
push
mov
shlb
adc
cmpsb
in
sbbb
sub
inc
fst
or
stos
repz
in
or
mov
stos
mov
push
dec
fmull
scas
scas
jnp
pop
fsubrl
scas
add
test
fs
mov
in
dec
jne
pop
add
rol
fdivp
aam
neg
fcoml
and
inc
es
andb
pop
and
mov
outsb
pop
dec
cmpb
bound
nop
sti
rcl
lcall
call
sbb
add
and
cmp
fnstsw
lods
xor
push
jns
mov
cmp
sub
mul
and
or
cltd
ja
fs
adc
call
or
cmpsl
sbb
fwait
stos
adc
push
out
cmp
movsb
mov
fisttpll
stc
sub
or
loop
scas
fcmovnu
dec
cmp
mov
inc
pop
sarb
adc
fnsave
in
or
je
mov
jns
test
fisttpll
or
les
jp
and
adc
xchg
mov
inc
fiadds
add
mov
stos
xorb
or
jne
sbb
shlb
leave
inc
fnstsw
mov
jge
repnz
add
cmp
add
dec
mov
and
add
lahf
fucomp
and
les
pushf
and
inc
addb
mov
sbbb
push
xchg
inc
notl
dec
mov
add
mov
pop
or
jmp
nop
mull
inc
repnz
xchg
adc
hlt
or
jns
lods
xlat
adc
out
pushf
cld
pop
adc
jb
aad
jne
xchg
shlb
sbb
cmp
hlt
mov
mov
sub
das
jb
xchg
jge
xor
add
dec
sub
inc
lea
adc
xorb
pop
and
inc
fstps
jecxz
daa
mov
jb
push
fsubp
cmp
xchg
lret
push
xor
sub
mov
lahf
arpl
hlt
inc
adc
shl
insb
mov
xor
jae
movsb
fucomip
pop
clc
fucomi
fcompl
push
push
fcomp
jmp
fstpl
push
popf
adc
push
loop
test
movsb
out
fcomps
pop
sti
scas
jno
push
je
add
add
scas
xlat
sbb
faddl
and
mov
or
imull
or
pop
mov
fstpt
mov
mov
repnz
ret
fs
cmpsb
repnz
out
stos
push
into
pop
andl
shll
cmp
or
lock
jnp
lods
sarl
mov
mov
pop
shll
jecxz
cmp
dec
cmp
inc
sahf
add
push
fdivr
xor
mov
fidivl
loope
test
outsl
movsb
or
loop
scas
mov
xor
mov
lret
cmp
push
xor
jno
and
stc
sbb
mov
inc
daa
aas
adc
adc
mov
cmp
sub
iret
jnp
les
push
or
adc
loopne
xchg
orl
xor
mov
gs
popa
sti
std
mov
lods
add
or
lods
sbb
push
xorl
adc
data16
fnsave
push
sti
cld
ja
sub
lcall
out
subb
mov
aam
fwait
sub
dec
test
fisubrl
xor
loope
cmpsb
mov
jo
dec
stos
dec
leave
or
dec
and
add
shrl
or
in
daa
sahf
cmp
or
and
pop
pop
aas
loope
push
inc
arpl
pop
mov
dec
fistps
int3
pusha
les
test
push
add
mov
cld
jl
mov
dec
sub
les
mov
jns
push
sahf
push
push
xor
fwait
sub
mov
arpl
push
sbb
lods
or
push
jecxz
movsb
inc
push
add
pop
out
popf
mov
push
pop
shll
cld
dec
push
xor
arpl
pop
add
ret
inc
das
inc
frstor
std
sar
xor
test
sub
into
lret
int
push
cmp
insb
inc
mov
sbb
jne
lret
push
inc
mov
movsl
pusha
cmp
xor
jbe
lods
add
xorl
inc
sub
rcll
xchg
repz
stos
push
testl
adc
inc
push
lds
cmp
jno
jge
adc
fabs
dec
xchg
int3
in
pop
cld
mov
cmp
jb
pushf
or
rolb
mov
lds
pop
insb
cmpsb
and
xchg
add
add
mov
pushf
mov
cltd
cmp
push
xchg
push
pop
test
push
scas
int3
mov
jnp
es
repnz
jle,pn
adc
or
lock
out
mov
test
ficompl
loope
jl
js
ljmp
outsl
inc
dec
and
adc
mov
pop
sub
inc
arpl
gs
and
mov
pop
push
ja
loopne
jae
scas
sbb
inc
push
cltd
stos
and
pop
push
dec
insl
mov
cld
adc
pushf
jle
aas
inc
mov
test
js
mov
jb
idiv
cs
fsub
scas
push
insb
aam
jecxz
push
cmp
mov
std
das
inc
inc
cmc
xor
in
loope
push
dec
xor
aam
das
sbb
mov
stc
fnstenv
adc
xchg
or
aam
jg
mov
testl
xchg
mov
pop
mov
icebp
xor
lret
cmpl
sbb
lret
hlt
jp
lcall
stos
out
push
fmull
mov
xchg
jmp
in
or
mov
fsubs
lret
mov
adc
js
lahf
adc
in
xchg
iret
or
push
jo
xchg
sub
xchg
cli
cmp
adc
repnz
inc
dec
fsts
imul
xor
test
fsubp
ljmp
nop
rorb
sarl
repz
inc
lods
loop
jnp
add
roll
mov
stos
push
in
mov
adc
fcoml
xorb
jne
lret
jp
add
xchg
mov
adc
lret
cmp
xor
out
rolb
pushf
aam
xor
and
adc
ret
repz
les
loope
xchg
cli
and
mov
mov
mov
nop
daa
mov
jge
leave
lock
in
lods
stos
push
jns
mov
pop
rorb
push
push
cmpsl
popf
jno
adc
mov
bound
cmp
les
fmul
out
add
sub
in
jmp
js
mov
inc
lret
in
bsf
xor
push
shll
mov
add
outsl
mov
repz
mov
push
push
add
dec
or
aas
adc
ljmp
movsl
xchg
in
push
and
fcoml
mov
xor
scas
mov
shlb
icebp
clc
mov
add
pop
test
cmp
fs
or
cld
mov
out
sbb
mov
adc
call
arpl
ret
arpl
add
mov
ror
ret
cld
loopne
imul
lds
lea
push
repnz
sbb
mov
hlt
jbe
and
shl
mov
ljmp
test
fcmove
jno
jmp
inc
loop
mov
pop
shl
xchg
fwait
outsl
sbb
xor
test
cltd
fsubrs
push
repnz
lcall
faddp
call
shrb
push
repnz
jae
popa
push
cmp
sti
xchg
cli
push
loopne
xor
mov
mov
loopne
std
jle
xor
and
iret
sub
js
punpcklwd
fdiv
mov
lea
inc
ja
in
pop
jae
enter
xorb
test
bound
dec
rclb
add
jno
mov
js
outsl
pusha
test
jge
sarb
aam
push
popa
pop
push
xor
mov
sti
push
and
sar
or
aas
lea
imul
popa
lock
cmp
sub
inc
cmp
popa
mov
lret
pop
and
mov
test
std
mov
icebp
out
out
xchg
sahf
fs
dec
clc
xor
push
repnz
in
lds
repz
mov
xchg
cwtl
andb
outsl
popa
mov
jle
movsb
sbb
addb
js
outsl
adc
or
jbe
imul
addb
mov
fs
scas
icebp
xor
sub
testl
mov
in
rolb
jb
ja
sub
and
and
fbstp
lcall
shrb
les
xchg
movsb
addr16
lods
imul
pop
pop
cmp
xor
outsl
or
jg
jge
push
icebp
sbb
pop
sbb
pop
sub
fistpll
idiv
in
shl
loop
daa
xchg
loop
mov
aam
dec
pusha
sar
mov
fisubl
dec
cwtl
or
adc
push
mov
pop
mov
mov
pop
rcl
push
xchg
dec
loopne
jns
xchg
xor
aas
loope
rep
hlt
hlt
cld
add
sti
dec
test
aaa
mov
or
jg
test
outsl
and
sarb
test
mov
pusha
cwtl
fdivs
xchg
and
push
ljmp
push
xchg
enter
add
jbe
test
dec
loop
sarb
jae
clc
andb
popf
pop
cs
shlb
mov
loop
les
outsl
out
cvttps2pi
test
rcl
push
push
push
das
push
mov
std
fisubs
les
rolb
in
les
imul
cs
lcall
jmp
add
cmp
ds
push
inc
add
mov
arpl
daa
and
mov
mov
inc
fs
pop
jae
xchg
fsubrl
in
dec
push
push
push
jle
ds
push
into
sub
loope
lcall
ja
add
mov
mov
in
loop
add
push
sbb
test
rcrb
mov
xlat
loope
push
ret
mov
ret
aam
jmp
and
in
mov
in
add
test
jne
nop
cld
add
mov
inc
and
and
repz
arpl
js
loop
inc
andl
iret
les
test
lahf
push
out
into
pop
sbb
or
and
fcoml
lods
insb
dec
xchg
mov
jns
push
out
hlt
or
mov
cmp
out
adc
lock
xor
dec
fiadds
mov
cmp
or
xchg
lods
test
and
and
out
xor
mov
push
pushf
jp
sbb
fdivr
in
outsb
mov
aam
lea
lods
adc
push
fsubl
cld
lods
inc
imul
cs
and
cmc
xlat
popf
test
or
faddl
xor
fadds
adc
cld
xchg
sbb
sbb
ret
loop
lret
inc
fst
dec
shl
repz
pop
shrl
aaa
sub
and
das
jo
hlt
repz
fdiv
push
cld
or
addr16
ret
call
clc
mov
pop
adcl
add
pop
lcall
or
sub
adc
test
sub
clc
dec
pop
push
jecxz
jmp
loop
mov
outsl
lods
loopne
in
xchg
repz
mov
or
leave
sub
dec
fwait
lcall
lods
inc
xchg
mov
sub
insb
xchg
arpl
sahf
ret
andl
dec
sbb
dec
sbb
icebp
imul
dec
lods
pop
sbb
imul
mov
pushf
subl
idivl
aam
mov
adc
mov
jecxz
loope
aam
das
mov
out
nop
int
mov
inc
ljmp
pop
ret
fcmovnb
pop
lods
xor
adc
cli
pusha
push
rorl
cmpsb
fldenv
loope
and
lret
pop
dec
add
sbb
jo
outsb
je
fldenv
inc
mov
or
imul
cmp
loopne
or
pop
adc
and
subl
push
sub
mov
mov
jbe
xchg
push
push
aam
mov
roll
loope
pop
add
and
jl
jmp
outsl
rcrl
pop
push
or
mov
je
repz
add
push
in
sub
mov
in
aam
dec
fcoml
popa
pop
and
and
add
mov
add
lret
mov
sbb
in
shll
push
ret
aas
les
stos
test
test
push
jmp
jle
jl
inc
mov
out
lods
fs
je
les
xchg
sti
jnp
add
mov
push
add
or
jg
jnp
int3
roll
push
test
mov
int3
push
sbb
ret
xor
adc
xlat
jbe
lods
jle
aad
and
shlb
mov
fisubrl
loop,pn
icebp
ja
mov
jmp
mov
jns
adc
and
imul
dec
movl
mov
inc
mov
mov
jbe
iret
movsb
clc
and
fcompl
add
push
arpl
je
int3
popa
jne
into
cmp
xchg
mov
mov
imul
lock
ret
imul
mov
shlb
sti
in
mov
cmp
and
les
pusha
sarb
int
leave
negb
repnz
enter
int
les
mov
xchg
mov
xchg
add
dec
jo
arpl
popf
mov
xchg
mov
ja
mov
pusha
xchg
inc
inc
je
sub
ljmp
push
push
cmc
mov
adc
cs
iret
pop
out
and
mov
add
cwtl
bound
and
mov
stos
and
inc
and
mov
shll
ljmp
sbb
aas
xchg
mov
lods
in
add
push
hlt
push
bound
xor
and
je
in
xor
jae
andl
in
loope
add
lods
xchg
mov
outsb
mov
fisttps
lcall
dec
mov
stc
jecxz
fs
add
sub
arpl
nop
movsl
cwtl
xchg
xor
in
frstor
mov
xor
xor
adc
testl
pop
lods
add
js
sbb
nop
dec
cmpsb
mov
xchg
mov
fnstcw
ret
repz
sbb
insl
dec
mov
fdivrl
cltd
rcrl
mov
scas
call
xlat
pop
ss
fadd
in
and
add
mov
dec
into
call
in
or
xchg
xchg
mov
test
fisttpl
mov
xor
jbe
inc
cld
or
jl
repnz
sti
fmull
jl
pop
cmpps
pop
and
sti
outsb
popa
in
mov
or
jl,pt
cld
lods
cmp
cld
dec
jl
mov
dec
pop
je,pt
in
sbb
out
sub
mov
in
lea
or
test
or
adc
loopne
or
xor
add
push
or
enter
pop
push
pop
add
cs
flds
ds
or
cmp
push
adc
cmc
xor
divl
mov
sub
sarl
push
insb
movb
jmp
fcompl
mov
jae
pop
in
repz
and
mov
pop
testb
sub
push
test
fwait
rolb
fsubrp
rol
mov
jg
lods
outsl
je
and
inc
cmp
jnp
fistpll
sarb
dec
aas
je
fwait
adc
jns
rorl
fisubl
push
repnz
push
add
bound
rcrb
add
das
stc
mov
rdpmc
stos
or
jmp
dec
ret
mov
push
pop
fs
cmp
dec
lods
subl
jle
enter
xchg
jnp
inc
sub
stos
mov
lock
mov
lret
mov
movsb
cld
lods
mov
mov
imul
cmp
dec
test
scas
mov
push
dec
fwait
and
mov
inc
ss
les
mov
cli
xchg
lret
std
cmp
xchg
loop
sbb
fs
nop
mov
dec
mov
push
and
lods
pop
test
mov
mov
mov
dec
jns
mov
call
das
nop
icebp
jecxz
cli
mov
pop
xor
adc
pop
adc
repz
int3
pop
push
jo
pop
add
movl
pop
imul
pusha
adc
das
movsb
sbb
lret
inc
or
jge
sbb
dec
imul
or
mov
jae
cltd
jb
sti
mov
arpl
add
pop
rclb
lcall
sti
mov
and
dec
add
in
rorl
xor
pop
push
movsl
loopnew
mov
xor
xchg
imul
or
push
add
jmp
pop
and
jns
stos
sub
jne
sbb
mov
adc
shll
or
jno
mov
mov
fisttpl
add
pushf
shll
fdivl
mov
push
dec
inc
in
pop
subl
xlat
mov
cld
jl
mov
pop
insl
pop
push
lret
or
imul
ret
cmp
adc
mov
adc
pop
and
jno
cmp
xor
ret
xor
sbb
ret
sti
je
mov
fxch
fwait
jp
and
inc
in
loope
lret
shlb
enter
xchg
out
cmp
loop
stos
add
pop
cmp
xor
mov
xorl
and
mov
dec
inc
mov
addr16
inc
add
xor
lods
pop
or
push
jl
negl
je
filds
mov
adc
lea
les
sbb
xorb
fiaddl
icebp
push
shll
rcll
or
cmpl
lea
xor
in
test
and
sub
aas
ffree
mov
mov
ffreep
inc
or
lods
repz
ret
inc
popf
test
shll
jg
mov
fdivs
test
cmpsl
and
stos
jnp
mov
mov
pop
imul
mov
test
cmp
hlt
mov
popa
fsub
inc
sub
cli
fldl
shrb
andb
dec
push
mov
int3
mov
dec
mov
jb
push
lret
mov
jae
and
sahf
daa
dec
mov
mov
mov
imul
pop
adc
push
mov
fsubs
inc
dec
out
sarl
popl
sarl
push
sti
aam
test
imul
push
or
divl
idivb
inc
rolb
cmp
repz
mov
std
lods
bnd
sarl
rcll
mov
mov
addr16
mov
rcr
data16
and
add
cmp
or
outsl
leave
sbb
loope
iret
leave
inc
cmp
clc
adc
or
shlb
cs
insb
adc
repnz
adc
mov
xor
movsb
cs
and
stc
fistl
outsl
popa
mov
or
fsubp
pusha
and
les
icebp
push
int3
sbb
xor
fs
cwtl
inc
sti
pop
jecxz
mov
pop
fwait
jbe
pop
test
clc
jb
fbstp
jmp
in
outsb
aas
ljmp
sub
adc
mov
sub
jmp
mov
xchg
mov
pop
xchg
test
andl
bound
fcoml
por
outsb
mov
sahf
aas
jb
das
mov
sti
int
mov
pop
xchg
mov
cli
jmp
jb
or
xor
jmp
and
lock
loope
mov
aad
cmpsb
pop
push
mov
xor
sbb
dec
dec
ljmp
inc
mov
jecxz
les
lods
or
cmpl
out
mov
dec
push
sbb
out
stos
xchg
loopne
loopne
sahf
or
pop
or
push
outsb
cli
mov
outsb
pop
arpl
ljmp
mov
pop
adc
addb
sub
jnp
dec
jge
dec
popf
imul
or
xor
popf
aaa
gs
enter
mov
out
xorb
mov
sar
pop
mov
adc
fiadds
lods
cmp
mov
mov
ss
jnp,pn
andl
in
cli
xor
adc
push
and
pop
cs
popa
js
mov
jp
movsb
bound
loopne
pop
test
repz
out
and
icebp
lahf
cmp
rorl
fs
aam
pop
dec
push
out
adc
enter
arpl
jbe
mov
les
loope
nop
mov
cmp
dec
cmp
scas
sub
inc
mov
into
das
dec
inc
es
arpl
orb
jmp
dec
in
xor
jecxz
mov
add
adc
insl
push
push
stos
dec
push
cwtl
arpl
mov
insl
xor
repz
push
add
xlat
xchg
in
cmpsl
jbe
loope
cld
push
jno
pop
or
lret
in
mov
adc
sti
lret
adc
mov
insb
shrb
insb
or
jmp
pop
icebp
insb
imulb
in
mov
popf
mov
cmp
jecxz
mov
rorl
xchg
enter
pop
lret
sti
adcl
gs
ret
mov
cmp
loopne
sbb
mov
repnz
pop
shl
jb
dec
loope
inc
pop
jno
xchg
jns
mov
mov
das
and
aas
push
xchg
jg
shlb
icebp
push
les
cmp
lods
jne
aam
jnp
loopne
mov
jnp
out
in
pop
scas
clc
repnz
jo
add
cwtl
pop
jnp
shll
rorb
out
mov
dec
jecxz
add
add
fcoml
inc
shll
sub
shl
mov
movsb
add
test
jae
mov
sarb
adc
xor
test
mov
mov
ret
adc
xchg
jl
hlt
xlat
loope
not
xor
int
sub
out
imul
dec
in
mov
inc
xor
sti
arpl
es
mov
pop
and
movsb
mov
cmc
adc
lahf
ret
add
sbb
xor
mov
in
out
test
sub
xchg
mov
ljmp
xchg
daa
roll
push
jnp
in
push
xor
jl
sti
imul
arpl
adc
sbb
mov
ds
fisubl
jge
std
les
sbb
pop
adc
inc
fdivr
adc
mov
repnz
fs
add
cwtl
cmp
mov
or
push
and
mov
jae
mov
cmp
sti
add
sbb
push
repnz
adc
xchg
jge
cmp
cmp
je
cmp
xchg
xlat
xor
jg
mov
ja
test
cmp
and
int
pop
mov
mov
pushf
pusha
inc
jmp
lret
mov
std
push
add
popa
in
mov
jbe
roll
loopne
and
mov
mov
ret
and
pop
cltd
loopne
sub
mov
or
or
fmuls
inc
jecxz
lret
mov
pop
test
popa
cld
je
mov
mov
dec
les
ja
test
mov
aas
pop
mov
mov
stc
xchg
faddl
in
dec
lahf
push
inc
jecxz
sti
das
test
cld
add
dec
cmp
jl
stc
mov
and
mov
cmp
ficomps
mov
rol
js
repz
inc
xor
mov
jae
ret
dec
and
test
push
mov
arpl
lods
lret
clc
shrb
or
and
and
fs
mov
pop
sbb
jecxz
les
loop
dec
rolb
push
repz
inc
mov
and
loop
dec
rolb
adc
out
push
subl
jl
sbb
jecxz
les
andb
repz
inc
mov
and
loop
dec
rolb
jmp
ret
mov
repz
dec
rolb
push
repz
inc
mov
and
loop
dec
rolb
push
repz
push
repz
nop
jne
ret
repnz
lahf
clc
cltd
les
nop
jne
mov
sub
ret
leave
shlb
jl
mov
pop
loop
clc
les
jne
movsb
in
sti
sbb
add
nop
jne
out
push
jmp
outsl
ret
imul
cmp
and
andb
repz
inc
mov
and
in
jecxz
les
sbb
add
dec
shlb
push
loopne
pop
inc
mov
and
loop
dec
rolb
push
repz
inc
mov
and
in
jecxz
les
sbb
add
loop
xor
repnz
pop
inc
mov
and
loop
dec
rolb
push
repz
inc
mov
and
in
jecxz
shl
sbb
add
stc
shlb
shl
pop
inc
mov
and
loop
dec
rolb
push
repz
inc
mov
jl
or
mov
mov
xchg
mov
or
xor
fs
jp
fimull
fs
jp
fimull
jl
jp
in
test
cli
cmc
in
test
cli
mul
pop
test
cli
mul
or
lds
inc
je
je
je
je
je
je
je
je
je
je
je
je
je
je
je
je
je
je
je
je
je
je
je
je
je
movsb
int3
and
adc
jg
jg
jg
jg
jg
jg
jg
inc
add
inc
cmc
inc
push
inc
jbe
xchg
sbb
mov
mov
jns
mov
or
mov
mov
inc
stos
mov
sbb
sbb
push
sub
and
inc
lds
inc
inc
inc
mov
or
hlt
dec
lcall
add
inc
inc
xor
add
add
push
sbb
mov
lret
sbb
in
pushl
sbb
ja
xor
out
psubq
add
je
inc
out
mov
add
testb
rolb
xchg
jg
push
sbb
sub
dec
daa
dec
xchg
arpl
and
scas
je
push
mov
je
lcall
movsb
adc
push
outsl
cld
pop
loop
test
in
xchg
in
jp
repz
addb
ds
jle
fs
movsb
jl
loop
and
repnz
push
mov
test
mov
adc
pushf
or
ret
xchg
gs
or
loop
std
push
lahf
lret
jbe
or
xchg
ja
icebp
add
pop
adc
mov
ret
cltd
mov
shll
mov
mulb
rcl
not
mov
aas
sarb
bound
mov
jns
and
push
popf
cltd
adc
enter
in
sub
in
clc
les
add
sub
add
subl
mov
and
inc
mul
sbb
lret
sbb
adc
aam
je
andl
inc
loope
stos
push
inc
jnp
pop
je
jecxz
lods
aaa
and
js
mov
inc
test
or
xor
insl
mov
test
or
xor
into
xchg
ja
test
or
xor
insl
mov
test
or
xor
and
xor
insl
mov
test
or
xor
insl
mov
sub
fisubrl
js
test
or
xor
insl
mov
test
ret
mov
test
or
xor
insl
mov
test
or
xor
inc
test
or
xor
insl
mov
test
or
xor
inc
test
adc
xor
insl
mov
test
or
xor
inc
fstl
xor
loopne
out
jl
add
pop
data16
sub
pop
js
push
repz
loopne
filds
pusha
jge
jmp
mov
loopne
lcall
jmp
pop
loop
clc
mov
insb
fs
push
mov
pop
sahf
dec
lret
mov
fiadds
lret
fs
loop
clc
cmp
loopne
jne
popa
in
repz
faddp
bound
mov
data16
in
jecxz
les
les
push
lret
xchg
test
bnd
ficomps
loop
clc
fld
fists
cmp
loopne
faddp
popa
test
shl
jl
shr
loop
loop
clc
mov
je
in
lret
test
pop
jnp
fstpl
mov
pop
clc
icebp
fists
xor
loopne
faddp
popa
test
loope
jl
shr
pop
loop
clc
mov
jecxz
jne
fs
lret
test
pop
sub
cmp
test
mov
dec
rolb
push
repz
loopne
loopne
mov
loope
in
jecxz
push
icebp
add
loopne
jecxz
mov
popf
dec
inc
mov
adc
jmp
test
add
xchg
ficoms
dec
jl
push
repz
data16
faddp
popa
test
loope
jl
cli
jmp
pop
loop
clc
imul
fs
lret
test
pop
cmp
rol
test
outsl
ret
test
jecxz
les
fisttps
andb
jl
push
repz
loopne
loope
mov
loop
in
dec
jmp
pop
loop
clc
push
mov
ficompl
gs
test
outsl
ret
cmp
in
jecxz
les
fisttps
andb
jl
push
repz
mov
xor
adc
mov
cli
ret
or
jnp
mov
ret
or
jl
mov
add
lock
test
add
lock
xchg
add
lock
xchg
add
lock
mov
push
or
repnz
repnz
repnz
dec
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
inc
ret
mov
lds
std
adc
stc
cld
jnp
jnp
jnp
jnp
jnp
jnp
jnp
jnp
jnp
jnp
jnp
jnp
jnp
jnp
jnp
jnp
jnp
jnp
jnp
jnp
jnp
jnp
jnp
jnp
orl
adc
fiadds
imul
in
or
loop
lret
cmp
xor
lods
lds
lods
lods
aaa
lods
inc
lods
mov
loop
shlb
or
mov
movsb
jnp
xchg
lods
in
cmp
fucom
jb
jns
test
imul
ret
mov
jne
lahf
rorl
lahf
mov
in
lcall
stos
add
ret
sbb
mov
loopne
dec
into
xchg
mov
cmpsl
loopne
mov
les
push
sarl
xchg
push
pop
push
js
out
jns
sbb
arpl
inc
jecxz
mov
fs
aad
add
clc
das
or
les
flds
dec
addl
jbe
scas
jle
cs
cwtl
cwtl
call
cmp
inc
fs
mov
fadd
jns
xchg
add
mov
ret
lock
sub
cmpb
pop
fwait
mov
xor
jecxz
sub
dec
xor
xchg
adc
and
add
mov
jo
xchg
mov
roll
sub
fldt
ret
cmc
push
dec
cmpsl
xchg
fs
lret
rcrl
add
ret
add
lock
addr16
test
lods
mov
jo
add
lds
or
cmp
inc
jb
leave
add
sbb
scas
test
pop
push
fildl
jge
mov
dec
mov
xchg
jecxz
jecxz
loopne
jno
mov
cwtl
movsb
cltd
fldl
jg
adc
mov
cmp
xor
cmp
sbb
hlt
int3
aas
or
pop
cmp
mov
push
in
bound
sub
shll
in
push
clc
mov
test
or
xor
insl
mov
test
or
xor
inc
test
or
xor
insl
mov
test
or
xor
and
xor
insl
mov
test
or
xor
insl
mov
sub
fisubrl
js
test
or
xor
insl
mov
test
ret
mov
test
or
xor
insl
mov
test
or
xor
inc
test
or
xor
insl
mov
test
or
xor
inc
test
adc
xor
insl
mov
dec
push
and
add
dec
cmp
adc
mov
adc
fs
repz
push
idivb
lods
pop
jge
mov
mov
mov
xchg
or
lock
mov
fisubs
insb
push
out
fimuls
movsl
pop
add
add
sbb
adc
and
pop
dec
sub
test
sub
push
je
or
pop
xchg
add
repnz
xchg
jl
xor
mov
scas
fwait
inc
xchg
out
icebp
pop
or
scas
jae
loope
mov
bound
lds
pop
clc
cmpsl
inc
mov
in
rclb
push
clc
dec
push
or
mov
sub
adc
scas
mov
push
in
mov
add
cmc
jp
aas
out
push
jae
pop
outsb
in
pusha
test
repz
cmp
xor
inc
jns
sbb
and
jl
fs
jae
ret
loop
xor
addb
inc
call
hlt
orb
rclb
jg
addl
sbb
xchg
sti
sbb
nop
mov
std
data16
sub
jle
repz
gs
test
std
add
repz
inc
repnz
subb
inc
pop
ds
aam
fists
xor
jmp
addb
in
push
in
test
loopne
aam
fsubs
inc
or
dec
popa
inc
or
in
push
sbb
pop
pop
and
mov
and
or
push
jmp
xchg
mov
inc
je
inc
mov
push
jge
pop
adc
sahf
push
sub
mov
and
push
fsubrl
fs
mov
xchg
out
jbe
adc
mov
mov
cli
movsl
xchg
scas
fwait
lods
pop
loope
aaa
fwait
sub
pop
dec
test
push
mov
adc
lods
pop
fbld
dec
sub
pop
mov
fidivrs
push
push
or
fs
enter
fucom
leave
cltd
mov
in
mov
sarb
ret
jg
mov
jle
xchg
xorl
sti
icebp
mov
pop
jecxz
int3
cmp
push
mov
movsb
push
mov
in
and
pop
mov
or
das
lods
lods
ret
push
cmp
ffree
pusha
movsl
mov
xchg
fs
sbb
adc
mov
inc
push
sub
xor
aaa
sbb
and
mov
lret
int3
jae
push
mov
jb
cmpsl
and
stos
mov
mov
fwait
and
xchg
dec
dec
xor
std
cs
repnz
roll
adc
adc
test
xchg
sbb
push
scas
push
cmp
mov
sub
sub
pop
pop
pushf
ret
mov
mov
add
in
push
cmp
pop
in
add
repnz
aas
and
js
jo
sub
push
popa
or
jecxz
xchg
jmp
pusha
jp
adc
xor
aam
addl
fs
pop
jp
mov
popf
cmp
jnp
test
or
dec
and
pop
mov
mov
sbb
mov
pop
mov
sub
push
lods
pop
stos
sbb
pop
xor
int
jecxz
xor
lods
xorl
adc
movsb
mov
sub
sti
movsb
je
pop
lods
movaps
mov
pop
dec
aam
bound
push
inc
pop
sahf
mov
imul
dec
les
mov
jae
mov
inc
stos
mov
cmp
js
stos
lahf
sbbl
ds
rorb
mov
lods
mov
adc
sbbb
lcall
sarb
xchg
xchg
and
or
fsubl
sbb
loopne
jge
pop
call
loopne
lret
xorb
mov
pop
xchg
jmp
cld
fdivr
dec
cld
push
hlt
mov
mov
push
les
cld
push
in
loopne
orb
jmp
loopne
push
cld
fst
sti
pop
hlt
and
int3
xor
test
in
enter
lcall
and
insl
sarb
push
imul
test
hlt
lahf
cmp
hlt
outsl
mov
mov
dec
xor
mov
ss
cld
dec
in
jmp
lods
shr
repnz
pushf
insb
sbb
inc
jmp
in
addb
mov
sbb
shlb
shl
andb
adc
cmpb
sti
repnz
pop
and
addr16
fs
insb
insl
mov
cmp
lods
in
mov
adc
sets
orb
or
cmp
mov
sarl
add
jb
iret
outsl
test
cltd
bnd
dec
fmul
mov
pop
in
dec
hlt
add
repz
sub
mov
push
hlt
fcoml
push
bnd
cwtl
fcoml
pop
sbbl
cwtl
test
xchg
lret
mov
mov
and
aam
andb
xchg
jmp
loope
fisubl
aam
push
jl
pushf
insb
andb
in
xor
aam
and
dec
test
aam
shrb
aam
mov
sbb
lahf
or
ss
mov
in
dec
push
rclb
cwtl
out
fcmovne
adc
cmp
inc
sarb
push
sti
cmp
inc
mov
or
arpl
xor
stos
je
xlat
int3
push
faddl
loopne
int3
pushl
sub
jmp
movl
xchg
les
in
fildl
and
fstps
shl
mov
mov
js
mov
js
fs
add
push
fadds
insb
repnz
mov
les
mov
lahf
add
scas
rol
and
in
cmp
or
lcall
xchg
out
arpl
loopne
arpl
repnz
pop
mov
nop
jnp
insl
idivl
je
jb
repnz
jmp
cmp
mov
out
loop
arpl
sbb
push
repnz
fstpt
sbb
mov
test
stc
lods
test
and
out
out
mov
les
xor
cld
fnstsw
jb
jmp
jo
adc
lods
shr
in
negb
test
xlat
loopne
loop
jmp
repnz
xlat
sar
shll
push
cmc
xchg
movsb
or
iret
jl
pushf
je
icebp
push
repnz
je
movsb
push
icebp
sti
mov
fstl
sti
mov
sbb
insb
or
jns
les
scas
and
xor
or
bnd
out
sti
xchg
adc
movsl
sti
cmp
push
movsb
sbb
sub
mov
es
add
int
mov
movsb
inc
pushf
lcall
inc
inc
stos
dec
stos
xchg
aaa
rcr
bound
into
scas
mov
add
and
mov
sbb
xchg
in
in
inc
inc
adc
out
sbb
mov
mov
stos
andb
inc
xor
mov
mov
push
stc
mov
popf
mov
adc
or
es
mov
and
pushf
mov
fistps
adc
cs
jmp
push
test
jno
mov
sub
cld
xchg
inc
ret
lea
or
mov
popa
xor
mov
inc
fisubs
add
lock
test
cmp
lret
lea
mov
ja
daa
cld
xlat
sub
cld
mov
bound
jle
fildl
scas
mov
bound
pushf
ret
out
push
js
jge
movsb
push
mov
test
popa
pop
jbe
pop
mov
loopne
fucomi
in
sbb
and
mov
cld
mov
loopne
adc
imul
popf
outsb
mov
repnz
test
stos
shll
fidivs
mov
mov
xor
pop
in
repz
dec
jns
cmp
rcll
popf
mov
and
mov
in
adc
pusha
xchg
loope
sbb
repnz
mov
mov
cwtl
xor
xlat
mov
add
jns
mov
jo
dec
loop
push
inc
push
jae
sub
xlat
repz
test
test
mov
test
push
pop
int
ss
loope
adc
lods
mov
lods
mov
mov
test
dec
insl
insb
jns
mov
cmpb
aaa
dec
sbb
jle
inc
sub
mov
outsb
popf
push
outsb
mov
mov
push
add
pop
pushf
or
mov
sub
ds
sbb
push
mov
cmp
jp
test
lods
lret
xor
in
cmp
xor
jno
xchg
or
std
mov
adc
push
js
lods
mov
lods
dec
sti
mov
sbb
iret
fmull
mov
lods
fbstp
das
out
adcl
les
aam
daa
jle
scas
out
sub
and
mov
or
adc
mov
dec
clc
jns
addb
lods
imul
test
lods
sub
cmp
push
leave
or
xchg
push
sbb
push
test
dec
dec
stos
pop
test
stos
iret
push
lods
mov
jnp
mov
jmp
pushf
or
xor
dec
int
test
int3
adc
push
pushf
mov
adc
outsb
jle
test
inc
loop
xchg
xchg
fwait
xor
stos
mov
ljmp
or
arpl
arpl
adc
bound
xor
repz
pop
sub
dec
sbb
inc
or
xlat
adc
jne
push
daa
cmpsb
roll
jg
std
adc
fisubl
cmp
sahf
loop
push
in
and
mov
dec
xor
loope
popf
pop
pop
out
pop
xchg
mov
aam
sub
cmpl
addr16
in
ljmp
sti
mov
lods
jecxz
add
sbb
test
imul
mov
mov
cmp
dec
xchg
stos
lret
xlat
mov
adc
add
cmp
xchg
cmc
je
cmp
sub
and
mov
add
rorb
test
imul
hlt
int3
test
sbb
dec
popf
cmp
in
lds
shll
je
loop
and
sub
mov
movsb
mov
xchg
pop
xchg
add
mov
jecxz
in
inc
mov
out
aas
in
lcall
rcl
lds
jecxz
sub
cmp
xchg
in
cmc
adc
xor
mov
inc
and
push
shll
popf
and
mov
in
mov
test
xchg
xchg
add
xor
ret
movsl
imul
enter
aam
dec
mov
inc
arpl
cli
xchg
xor
mov
push
mov
pushf
mov
fsub
stc
adc
aam
out
aas
sub
lcall
push
xrelease
add
xchg
out
arpl
mov
loope
sub
push
lock
sub
or
in
lret
je
inc
fcomps
aam
sub
xchg
jge
xchg
negl
jmp
aam
test
and
push
adc
mov
fistl
test
jmp
push
mov
clc
adc
int3
sub
cli
inc
mov
xchg
cli
pop
movq
hlt
ss
xor
test
push
ljmp
in
inc
sub
mov
and
or
mov
mov
sub
jbe
sbb
adc
add
adc
pop
jb
jo
push
bound
sti
in
dec
cmc
pop
in
loope
xor
notl
dec
mov
les
mov
rcrb
ss
and
mov
ficoml
xchg
mov
fidivrs
fs
or
sti
push
movsb
test
fsubl
ja
mov
shl
xchg
scas
xorl
sbb
jle
fnstsw
movsb
movsb
dec
fneni(8087
inc
push
insb
mov
xchg
out
outsl
add
aas
lods
mov
mov
xchg
ja
mov
cwtl
icebp
dec
insb
lahf
pcmpgtw
push
lods
popa
push
cmc
and
sub
jne
mov
dec
repnz
lods
aaa
movsl
stos
sbb
adc
aas
add
lods
mov
loopne
lods
cmovge
mov
movsb
xor
ficoml
xor
pop
dec
push
lret
dec
lds
mov
mov
jbe
or
mov
pop
xorb
cmp
mov
mov
test
ss
pop
push
ja
dec
push
cmpb
adc
and
movsb
cmp
repz
adc
mov
push
subl
inc
test
inc
cld
mov
shll
xchg
xchg
repz
mov
cld
into
lods
iret
aas
cmpsb
hlt
and
xor
and
lds
test
aam
and
jae
cltd
ret
push
xchg
jmp
loope
and
js
mov
adc
mov
das
stc
mov
sar
outsl
out
ret
push
jl
jb
cmp
sti
mov
mov
xlat
inc
jne
lock
push
loope
or
in
jae
xor
rclb
mov
leave
pop
inc
sub
or
loope
cmp
mov
stc
push
inc
inc
fiadds
add
cltd
mov
cmp
sbb
das
mov
adc
or
and
loope
and
bound
movsl
cwtl
adcl
mov
and
fdivrl
or
lods
mov
mov
xor
adc
out
fildl
jno
bound
mov
xor
add
std
mov
test
fwait
in
inc
in
adc
pop
and
fsts
clc
mov
repnz
test
adc
add
stc
xchg
xchg
popf
repz
push
mov
mov
push
add
and
mov
adc
xor
sub
lea
mov
mov
cmp
jecxz
or
sarb
xchg
outsb
push
fs
jae
dec
xchg
cmp
lret
dec
push
pop
push
fiaddl
xor
test
or
jmp
mov
sarl
lods
test
and
arpl
js
jl
mov
pop
sub
xchg
aad
sub
adc
and
mov
rcrl
out
mov
sub
xchg
pop
mov
adc
jbe
inc
add
loope
lret
or
pop
xchg
xor
and
jl
orb
push
cli
in
lea
sti
xchg
js
mov
or
xor
sub
jle
mov
sbb
test
fbstp
cmp
xor
adc
xor
popf
mov
shrl
nop
push
jmpw
or
and
cmp
jo
and
jo
jmp
xor
fs
fisubrs
addb
int3
jecxz
push
lret
test
cmpsb
xchg
dec
in
in
les
test
mov
int3
fdivl
inc
aas
add
popa
insl
lods
jl
pop
scas
mov
loope
mov
scas
pop
out
dec
fucomp
lahf
add
add
or
mov
sar
adcb
pop
sbb
aam
lock
test
not
aam
jno
in
or
in
cmp
repz
out
int3
int3
idivl
int3
xchg
shlb
cmp
mov
push
push
test
push
xlat
dec
dec
mov
repnz
out
add
or
pushf
imul
adcl
les
inc
mov
mov
test
lods
mov
cwtl
mov
ret
enter
aam
mov
bound
mov
mov
xor
mov
mov
out
xor
jo
mov
fcmovu
xchg
xchg
and
enter
ret
mov
movsb
or
cli
or
fs
sti
cmc
test
adc
out
adc
test
push
sub
inc
push
repnz
cmpsl
sub
mov
add
pop
int3
gs
or
mov
xchg
xchg
cmp
mov
sbb
fdivp
iret
cmp
ret
jg
mov
mov
mov
jo
repnz
je
adc
loop
mov
adc
and
mov
adc
pop
dec
out
inc
iret
filds
movl
test
pop
repz
fs
imul
idivl
xchg
mov
popa
lcall
popa
xchg
movsl
stos
and
xor
jne
jmp
pop
pop
mov
xchg
jmp
test
test
aas
mov
pusha
loop
in
orl
jb
inc
mov
cmpsl
mov
cwtl
jnp
mov
into
clc
cmp
mov
sarl
cld
inc
mov
jecxz
mov
sahf
mov
stos
push
stc
mov
cmpl
daa
push
fstl
out
inc
fdiv
mov
orl
xchg
jmp
cwtl
and
sar
sub
jae
add
lds
xor
ja
jecxz
aaa
hlt
mov
mov
push
inc
sub
inc
stos
xchg
mov
lret
mov
popf
cld
test
outsb
sarl
adc
addl
push
lret
pop
adc
cs
push
addl
cmp
xor
jne
into
loop
jb
adc
stos
xchg
loop
sbb
ret
push
mov
fwait
divl
jne
dec
clc
add
enter
pop
mul
shll
xchg
xor
or
outsl
add
shl
sub
add
cmpb
mov
sahf
push
mov
mov
mov
sub
xor
xor
push
stos
pusha
push
leave
call
test
inc
fdivs
xorb
idivl
out
psubq
pop
testl
add
pusha
mov
icebp
aaa
stos
or
sbb
jo
sbb
lahf
movsb
inc
adc
sub
adc
xchg
jl
push
mov
inc
std
mov
inc
lods
loopne
mov
inc
and
insl
movups
adc
sahf
xchg
pop
andb
lcall
outsl
frstor
mov
dec
scas
subl
lret
sbb
js
jnp
lcall
xor
adc
test
jg
cmp
je
adc
loopne
shl
shlb
out
mov
and
fiaddl
mov
loope
mov
arpl
push
xchg
out
pop
repz
adc
adc
into
lret
ds
mov
test
adc
inc
test
mov
sbbb
jl
fucom
cwtl
and
mov
fldt
sti
aam
xor
add
jmp
mov
fmulp
mov
sub
sbb
pop
dec
cmp
add
add
mov
mov
mov
loop
ret
dec
cmpb
ret
sub
nop
fnsave
add
sub
ss
in
out
add
mov
lock
and
mov
pushf
xor
por
dec
sti
fs
in
sub
and
shll
movl
loope
mov
inc
lods
and
mov
xchg
je
cmp
mov
scas
in
push
cmc
ret
movsb
xor
js,pt
movsb
fisubs
jmp
push
ljmp
imul
xor
movsb
mov
mov
pop
sub
mov
sbb
dec
pop
fcoml
loopne
out
ja
lcall
and
mov
cmc
cld
xchg
sbb
sbb
nop
out
sbb
cmp
add
push
sub
js
jle
cmpsb
jge
fisttpll
mov
icebp
and
lock
fcoml
push
inc
out
fs
test
xchg
sti
mov
fdivrs
faddl
mov
outsl
adcb
insb
aam
and
sub
out
in
ja
sbb
mov
js
icebp
sub
pop
es
or
push
test
inc
je
dec
mov
or
arpl
mov
in
inc
repz
mov
pop
mov
lret
and
test
shlb
sbb
hlt
enter
hlt
subl
and
test
adc
and
pop
adc
lea
pusha
loop
aam
mov
xchg
das
xor
and
stos
subl
add
xlat
les
sbb
dec
jl
arpl
inc
xchg
subl
stc
loope
aad
pop
out
sub
std
and
test
inc
mov
and
test
pop
cmp
fildll
rorl
jmp
aas
repnz
pop
and
push
fildll
adc
orl
add
aam
lcall
push
jbe
adc
add
xor
jge
out
je
mov
bound
and
xor
enter
test
outsb
xchg
popa
je
out
outsb
movsl
in
outsb
movsl
gs
mov
fdiv
mov
insb
or
push
xor
sbb
test
mov
mov
adc
cmp
sbb
pop
ret
xchg
add
fsts
pop
cmp
jae
ljmp
cld
sbb
mov
xchg
test
xor
mov
pop
loopne
adcb
inc
in
daa
push
frstor
sub
jl
lea
xlat
xor
loope
add
fmul
mov
cmc
aas
repnz
stc
fildl
or
fwait
add
xchg
mov
mov
in
mov
xchg
fbstp
aam
jl
xchg
movsb
test
add
inc
fisubs
and
addb
repnz
add
out
adc
mov
inc
int
stc
dec
leave
xchg
je
iret
sbb
addl
mov
mov
push
add
jecxz
push
xchg
mov
adc
sahf
test
inc
add
mov
ds
add
and
fdivrl
dec
and
scas
popa
fs
or
das
jmp
mov
andb
fiadds
js
out
adc
push
mov
or
in
test
adc
aam
pusha
and
pusha
dec
dec
test
and
outsl
test
imul
fidivs
mov
mov
sub
dec
scas
sbb
jae
les
sub
pop
jno
rcll
adc
sti
lods
jecxz
movsl
pop
mov
add
sbb
lret
adc
leave
cwtl
aam
mov
mov
lret
adc
lock
lods
ljmp
rolb
pop
inc
mov
xlat
mov
sar
sub
mov
movsl
inc
cli
add
int3
repnz
mov
or
jnp
ds
adc
stos
out
js
notb
sbb
bound
push
mov
mov
out
inc
adc
stc
mov
data16
sbb
add
in
xchg
test
test
mov
xchg
ljmp
adc
jmp
push
ret
mov
xor
ja
int3
repz
push
and
xchg
xor
dec
jp
mov
js
inc
mov
mov
push
idivl
rol
outsb
fsubp
xor
mov
sbb
sub
mov
inc
mov
jp
mov
jne
les
push
jl
inc
cmpsl
jp
xchg
adc
sti
cld
ret
sbb
cmpsb
push
sar
add
bound
sbb
sti
sub
loopne
xor
and
lods
in
jp
or
push
in
rorl
mov
loop
cmpl
ret
andl
rcl
sti
loope
pop
pusha
mov
pop
fmuls
and
sbb
outsb
jmp
test
mov
mov
cmp
stos
add
sbb
push
lret
pop
icebp
pop
mov
insb
mov
or
jbe
xor
push
test
xor
imul
xchg
shll
or
xor
out
and
pusha
je
mov
in
cld
ret
xor
mov
lret
mov
and
or
outsl
fildl
mov
pop
aad
or
mov
jno
mov
mov
add
sub
mov
test
jp
pop
mov
or
aas
ds
and
icebp
and
adc
aaa
add
andl
add
test
aas
fldenv
push
test
lret
mov
and
in
jecxz
les
repnz
inc
js
push
sti
fisttpll
sbb
adc
dec
or
fstl
sbb
adc
flds
sti
fst
dec
les
icebp
sbb
adc
mov
sti
les
xchg
sbb
adc
jmp
push
sti
fstpl
sbb
adc
mov
push
sti
dec
les
mov
xchg
or
fisttpll
sbb
adc
mov
sti
frstor
les
stc
sbb
adc
xchg
or
fisttpll
les
fstps
adc
jno
enter
sti
dec
les
imul
enter
lds
inc
push
outsl
mov
cmp
mov
cmp
mov
aaa
add
stos
and
mov
test
test
mov
insl
pop
popa
fcomp
fwait
mov
bound
cmp
insl
xor
pop
stc
fcomp
orl
jmp
repnz
insl
mov
xchg
fcomp
mov
lods
mov
insl
dec
dec
sbbb
mov
jno
cltd
lods
mov
insl
jno
andb
mov
jmp
loope
loopne
and
mov
ret
js
push
repz
das
fisttpl
ret
xchg
sti
adcl
fcomp
popa
mov
jno
jnp
mov
insl
jnp
sub
rcr
fldl
imul
jno
jae
fstpl
mov
jmp
jae
mov
addb
mov
and
aas
and
xchg
dec
jo
fs
shrl
mov
adc
add
loopne
sbb
loopne
aam
mov
mov
addr16
pmullw
roll
add
repnz
arpl
in
push
js
mov
movsb
mov
add
jl
imul
push
clc
bound
adc
push
popa
pop
xlat
nopl
iret
inc
lret
sub
sbb
mov
jmp
adc
lea
jae
mov
roll
or
pop
jnp
mov
adc
mov
std
les
adc
cmpsb
and
stos
stos
add
mov
jge
xor
add
add
push
scas
andl
mov
addl
sbb
mov
hlt
ret
sbb
sahf
inc
xor
mov
incl
lods
addl
dec
andl
and
mov
in
call
or
les
ret
and
dec
push
lret
jnp
and
adc
jb
adc
or
test
jae
inc
and
subl
fsubs
mov
fldcw
shrb
mov
adc
and
fcompl
clc
fldenv
sub
cmp
mov
arpl
adc
shr
mov
sub
sti
in
and
add
dec
fisttpl
inc
jecxz
popa
add
xchg
pop
shll
lods
xchg
jbe
out
pop
jl
pop
add
jb
imul
lods
add
mov
shrl
push
repnz
pop
add
fadds
std
fdivrs
icebp
fisttpl
movsb
add
inc
pop
outsb
dec
jp
cld
dec
aam
dec
cmp
xchg
jne
outsb
or
xchg
in
int3
sub
mov
xchg
aad
outsb
cli
push
or
outsb
scas
fisubl
pushf
mov
adc
lods
mov
loop
in
int3
test
shrl
fisubrs
mov
push
fnstsw
inc
or
addr16
pushf
ret
fnsave
cmp
fmull
dec
fidivl
jno
mov
icebp
ljmp
pop
rolb
pusha
stos
xchg
mov
outsl
mov
inc
and
inc
fcoml
cmpsb
popf
mov
push
lea
pop
jb
iret
sbb
jb
inc
mov
out
mov
popf
pop
xchg
mov
xor
subl
fidivrs
add
fmulp
loope
pop
fs
repnz
sbb
leave
loop
adc
mov
pop
call
mov
dec
mov
inc
in
repnz
test
xchg
aam
sbb
sbb
sbb
xlat
outsl
je
lods
jns
mov
dec
push
xorb
repnz
sti
mov
xchg
push
jae
int3
mov
sbb
cmp
js
mov
int3
mov
lret
lds
sub
ret
je
movnti
aas
loopne
clc
add
inc
loop
les
jg
fstpt
repz
jmp
mov
fildll
test
ret
lods
pop
sti
mov
mov
sbbl
loope
fsub
test
mov
aas
dec
shl
rclb
inc
fld1
xchg
rcr
pop
inc
daa
sarb
cmp
popa
jb
sbb
andb
add
test
pop
popf
into
lret
pop
out
mov
addb
dec
adc
sar
adc
sbb
hlt
daa
push
stc
push
pop
pop
dec
add
cmpb
cld
pop
sbb
push
mov
lcall
and
fldt
shlb
sbb
xor
test
jb
jl
or
cltd
dec
ret
mov
mov
xchg
cld
int
insb
jae
inc
cmp
hlt
cmp
fdivrs
jp,pt
add
addr16
sbb
sbb
idiv
js
ret
cltd
mov
cmp
pop
nop
fidivs
xchg
push
subb
mov
hlt
adc
je
jno
loopne
lret
test
cs
or
pop
push
lret
and
in
or
adc
fldenv
in
int3
pop
test
or
fs
inc
jl
shlb
mov
addb
loopne
in
outsb
xchg
ret
mov
jmp
sbb
roll
aas
ret
lret
mov
sbb
les
in
xchg
dec
dec
xor
jl
out
sub
ds
inc
lds
fisubs
hlt
or
sub
add
jl
lods
pop
loope
add
xchg
in
pop
sbb
push
ret
mov
pop
mov
push
push
or
mov
pop
ss
push
pop
roll
test
cld
dec
sub
jno
add
mov
pop
lret
jne
jbe
lods
pop
int
sbb
outsl
pop
add
in
pop
sbb
pop
push
orb
pop
fstpt
sarl
inc
fsubrl
mov
int
pop
mov
mov
test
xchg
pop
push
movsl
mov
xorb
xchg
or
lahf
inc
or
jb
or
lret
sub
adc
push
pop
aad
jle
movsb
fsubr
test
or
mov
loope
sti
cli
pushf
or
lds
out
aaa
pushf
or
pushf
push
sub
fcoms
jno
xchg
lea
sub
test
sbb
daa
push
scas
lret
inc
cld
popf
test
test
jo
movsb
mov
mov
add
inc
lods
ror
and
and
repz
mov
in
mov
add
lods
mov
mov
test
add
jno
loop
test
aam
and
jl
clc
fdiv
test
daa
add
out
jo
mov
and
lcall
in
inc
jl
and
pop
push
cmpsb
or
dec
push
or
ret
push
adc
stc
or
inc
or
cli
add
sub
jns
in
mov
mov
and
test
xor
rol
lcall
mov
mov
mov
push
mov
fists
shrb
fs
mov
popa
lcall
mov
bound
fsubrs
xor
fwait
movsb
pop
sub
pop
in
lcall
xor
fstl
dec
lods
mov
pop
icebp
popaw
fs
int
jo
ret
mov
dec
in
arpl
sti
test
out
fs
pop
loop
push
mov
or
xor
movsb
mov
or
mov
out
fs
mov
loopne
mov
in
adc
rclb
jae
fucom
test
out
insl
daa
adc
insb
mov
pop
cmpsb
out
out
lds
cmp
mov
cmp
mov
sbb
cmp
cmp
mov
loopne
mov
imul
fucom
test
out
insl
jmp
loope
mov
pop
cmpsb
out
insl
dec
adc
insb
mov
pop
cmpsb
out
jge
jecxz
xchg
or
test
ret
inc
jmp
fstl
mov
test
xchg
test
lock
test
inc
adc
inc
outsb
sub
sarb
add
insb
pop
ret
xor
outsb
loope
pop
cmc
push
xchg
vmread
fisubs
sahf
lcall
rolb
loopne
loop
cmp
loop
les
sbbl
mov
inc
in
sub
fs
inc
je
pop
cmc
jmp
push
out
adc
iret
test
out
jns
fdivr
lods
xchg
add
je
fwait
sbb
push
in
insl
lcall
mov
jmp
int3
sbb
stos
adc
jle
repz
cmp
nop
xor
mov
test
cmp
xor
mov
hlt
nop
cmpsb
pop
mov
xor
sub
repz
lret
sbb
in
ret
loop
fimuls
push
pop
add
mov
and
adc
mov
jp
jne
pop
in
lcall
hlt
sbb
push
loope
test
sti
outsb
je
rcrl
or
lods
mov
insl
jno
cmpsl
pop
cmc
popa
push
fs
jg
mov
js
rcr
hlt
cld
jbe
mov
cmp
mov
insl
mov
mov
loop
add
jecxz
and
fs
test
dec
sub
stos
mov
and
insl
xchg
and
mov
xchg
add
cltd
rcrl
bound
pusha
jl
adc
out
movsb
sti
out
xchg
mov
pop
lds
mov
popf
cmp
repnz
cmpsb
clc
repz
repnz
test
cmp
outsl
jo
push
adc
pushl
or
lods
mov
cmp
xchg
push
rcrb
je
mov
ret
bound
xchg
lods
sub
sub
mov
jb
int3
lahf
and
hlt
lahf
mov
in
test
mov
in
push
and
add
cmp
push
int
push
xor
ret
inc
pop
popa
mov
xor
sub
fbstp
xor
mov
arpl
pop
lock
sarl
pushf
jle
mov
sub
test
shrb
fldcw
dec
sbb
imul
pop
xor
or
mov
loopne
mov
mov
mov
add
add
sarb
mov
add
les
loop
dec
rorb
in
add
add
xchg
dec
cli
lcall
dec
pushf
lcall
lret
ss
cs
jns
sub
pop
or
adc
in
les
add
std
test
mov
data16
out
das
and
lock
mov
xor
addl
adc
adc
test
test
mov
xor
and
popw
adc
loopne
inc
test
outsl
dec
dec
sahf
call
mov
popa
and
xlat
dec
xchg
fadds
lret
outsl
cld
pushf
add
enter
xlat
adc
inc
enter
pop
ret
jnp
cld
sub
popa
lods
mov
test
mov
arpl
lea
ret
or
cmpb
ret
add
and
test
xor
cld
in
in
js
cld
andl
icebp
pop
les
adc
mov
jne
sub
into
adc
out
test
xorl
shlb
xchg
repz
dec
and
hlt
or
ss
out
push
add
add
fs
imul
fdivr
push
daa
nop
sub
pop
mov
pop
cwtl
subb
jl
outsl
addr16
hlt
pop
push
rcl
push
push
das
mov
or
std
fisubs
hlt
or
mov
xlat
jmp
imulb
mov
daa
mov
jbe
out
push
ljmp
jle
mov
pop
push
add
incl
mov
nop
loope
inc
fwait
out
mov
fisubl
jae
mov
add
imul
mov
adc
jl
inc
lea
xor
pop
sub
pusha
mov
rcl
or
adc
mov
fcomps
in
les
das
fisubs
lret
aaa
js
mov
adc
pop
push
xor
iret
test
jmp
mov
mov
xor
sub
sbb
inc
push
mov
cwtl
dec
lea
fsubp
jecxz
mov
adc
in
mov
inc
movsb
lods
shlb
in
sti
test
jnp
dec
mov
mov
mov
adc
xor
cwtl
test
fcomi
pop
jl
pusha
mov
scas
mov
sub
mov
push
pop
xchg
sbb
test
mov
jno
or
and
fdiv
out
jae
outsb
lcall
idivb
jmp
xor
rcrb
insb
out
out
cmp
inc
fnsave
xchg
sbb
fsubrl
loop
and
in
repnz
sbb
scas
adc
xor
std
push
fadd
pop
add
repnz
add
pop
dec
pop
xlat
jl
dec
popa
mov
mov
orb
mov
adc
nop
push
loop
and
xor
mov
scas
das
adc
pop
nop
sbb
push
fistpl
lret
dec
mov
imul
mov
add
mov
add
jbe
sti
cmp
rorb
jo
xchg
inc
loope
mov
cmpsl
mov
mov
stos
cmp
test
xchg
xrelease
fs
pop
jle
in
mov
jnp
mov
pop
test
ret
mov
mov
lods
jl
xor
sbb
js
loopne
cli
jecxz
xchg
mov
shl
dec
cltd
arpl
jnp,pt
jecxz
jmp
pop
mov
test
int3
pop
adc
aam
sub
bound
xor
cmc
pushf
enter
jno
pop
jl
movsb
jo
sub
js
addr16
xchg
adc
adcl
outsb
enter
jno
test
pusha
loop
pop
and
repnz
fnstcw
sbb
icebp
cmpsb
adc
fidivrl
or
push
adc
enter
bnd
sbb
mov
mov
mov
clc
pop
lods
ljmp
fmuls
fimull
ror
shll
repnz
je
mov
mov
insl
push
push
fistl
mov
push
divl
add
shl
cwtl
add
pop
dec
dec
movsb
imul
orb
lret
jae
mov
inc
jp
mov
dec
and
je
not
xchg
inc
xor
jns
xrelease
out
std
inc
scas
lock
sbb
nop
push
inc
sub
xchg
mov
cmc
xchg
repz
aaa
pop
dec
sub
out
nop
cmp
repnz
mov
inc
test
in
int
and
movsb
ret
loopne
or
jmp
mov
and
lods
mov
or
xchg
sub
fidivrl
mov
and
cmp
mov
mov
jl
mov
enter
out
sbb
ja
adc
mov
popa
mov
int
jno
jmp
xor
pushf
sti
testl
jb
out
jl
lea
enter
jle
rcr
cltd
je
inc
enter
popa
sub
add
push
xchg
insb
clc
loope
add
mov
pop
movsb
xchg
jno
push
pop
jl
jg
xchg
sub
test
rcr
popw
push
add
sub
dec
cmp
bound
pop
loopne
sti
or
dec
aad
test
dec
test
pop
jae
mov
pop
push
mov
push
je
sbb
jle
lods
repz
fs
xchg
lods
sti
insl
fisubs
and
mov
mov
aad
pop
imul
lock
dec
mov
jl
loop
das
push
out
mov
ffreep
or
mov
sub
jmp
shll
xlat
repz
sub
popa
sub
add
jmp
fwait
cmpsb
test
das
aas
nop
rorb
mov
lods
repz
sbb
rolb
push
fsubrs
inc
aam
jecxz
sub
ja
out
pop
clc
jp
jne
test
test
lods
sahf
fisubl
jae
sarb
push
enter
scas
out
xorb
enter
ljmp
sub
loopne
sti
les
loop
jmp
push
cmpsl
adc
pop
mov
sti
add
rorb
sub
cld
mov
inc
lods
jecxz
or
ja
dec
imul
and
sub
dec
fwait
sti
or
rcr
in
dec
xchg
ss
test
lret
push
test
push
jl
mov
test
or
sub
mov
mov
or
mov
or
inc
sti
xchg
sbb
sti
ret
shl
movsb
pop
fcoml
sbb
pop
les
das
jbe
add
in
repnz
js
push
jp
pop
add
pop
cld
lods
in
jl
push
inc
mull
dec
les
lods
movsb
cmp
sti
lods
cmc
mov
nop
mov
je
cmpsl
aas
lds
mov
das
cs
aam
int3
je
add
ss
and
and
mov
cmpl
xor
scas
movsb
movsb
inc
stos
cmp
call
mov
or
push
mov
sbb
test
sbb
insb
fiadds
cmp
fldl
mov
mov
test
cmp
and
enter
test
mov
sbb
test
imul
addb
cltd
addb
in
and
xchg
mov
rorb
ljmp
xchg
nop
ljmp
mov
aas
test
js
mov
test
js
mov
test
js
mov
test
js
mov
test
fldl
lods
mov
sbb
inc
test
sarb
add
and
add
and
mov
and
addb
and
out
cmp
mov
ret
push
xor
mov
and
addb
pop
dec
aam
test
cmp
jae
xor
js
repz
add
sbb
aam
rorb
mov
test
pop
xor
jle
xchg
js
add
out
cmp
mov
ret
and
add
jge
hlt
sub
add
sub
mov
pusha
pop
xchg
xor
pop
xchg
adc
pop
xchg
mov
mov
cmp
icebp
fcomp
stc
mov
test
cmpsl
cmc
mov
dec
int
shlb
push
lret
dec
pop
mov
and
adc
push
inc
mov
jmp
movsb
mov
mov
mov
xchg
mov
mov
push
ljmp
mov
adc
cmpl
rclb
ss
lods
cmp
mov
ds
push
mov
xchg
add
pop
lock
arpl
ss
add
enter
and
aam
out
sahf
xor
inc
into
push
jle
and
mov
shrl
fisubs
leave
lods
push
repz
jecxz
ret
fildl
mov
xor
mov
push
mov
cli
aam
sti
inc
ljmp
xchg
pop
int
andl
cmp
mov
fisubrs
fimuls
pushf
mov
sar
aaa
lea
fdivl
pushf
fs
mov
add
faddp
jae
inc
mov
movb
xchg
push
aam
xor
aam
lods
dec
enter
inc
cmpsl
adc
jae
nop
cltd
repnz
inc
ret
test
dec
push
mov
out
or
sbb
je
xchg
and
loop
mov
cmp
push
xor
cmp
add
adc
xchg
fisttps
lret
push
inc
xchg
add
cmp
adc
ret
mov
mov
sub
pop
or
in
popf
das
sub
out
lahf
dec
or
inc
nop
loope
xchg
jl
jl
loop
movsl
push
loope
js
pushf
lret
adc
pusha
sar
movsb
loop
mov
jecxz
xor
arpl
test
outsl
shl
ficoms
sti
xchg
rclb
jl
aas
lock
in
shll
or
inc
mov
mov
frndint
cmp
xor
dec
loope
jne
and
sub
cmp
int3
movsl
xchg
negb
jae
mov
fidivrl
rclb
xchg
jle
jb
test
or
and
fistpl
add
mov
xor
mov
aam
lods
cmp
mov
dec
fcompl
push
hlt
rcrl
mov
mov
movsb
jle
cmpsb
cli
into
outsb
push
leave
inc
push
stos
push
fiaddl
fsubrl
push
in
loopne
int3
mov
std
nop
insb
pop
in
add
icebp
pop
faddl
loope
pop
roll
test
negl
adc
lods
sbb
lock
mov
mov
fldl
int3
inc
mov
int3
roll
repz
loop
and
pushf
sub
pop
inc
int3
repz
add
sti
jp
and
mov
sbb
aam
and
inc
xchg
xor
or
insb
cmp
hlt
xchg
in
and
dec
cmp
mov
mov
hlt
mov
fdivrs
loop
xor
push
dec
inc
aad
lock
sub
std
mov
nop
jecxz
push
into
add
cmpsb
xor
popf
push
jne
sbbb
shlb
js
cmpsb
dec
loop
push
xor
push
adc
mov
push
jg
xor
add
mov
ds
inc
dec
lea
roll
loopne
cli
add
loopne
mov
mov
stc
and
add
lds
nop
add
inc
dec
pop
cmc
bnd
in
xor
addr16
inc
mov
push
popa
mov
mov
add
scas
adc
mov
dec
loopne
pushl
inc
mov
and
inc
lods
fs
popf
je
jg
aaa
add
sahf
push
mov
xchg
outsl
xor
lods
mov
push
xor
and
insl
cmp
add
add
cli
inc
mov
and
inc
ljmp
enter
nop
rolb
icebp
mov
pop
xchg
add
iret
push
cmp
adc
jecxz
xchg
aam
push
movq
push
mov
loopne
pop
xchg
fsts
lock
mov
jae
je
fs
std
mov
adc
dec
test
insl
pushf
sub
xlat
or
sbb
fsubp
das
mov
and
fadd
ficoms
sbb
out
sbb
xor
add
ja
in
in
mov
and
push
adc
std
mov
shlb
cld
aam
sbb
xor
ret
arpl
in
jecxz
loopne
es
jno
movsl
imul
fwait
jecxz
pusha
cmp
xchg
and
sti
fs
adc
add
cmpb
mov
push
adc
push
inc
inc
dec
jp
jo
cli
in
cmp
cltd
loopne
aam
in
xchg
or
fnsave
pusha
je
cld
ret
jp
jo
add
mov
repz
les
scas
bound
xchg
in
jg
mov
jne
jge
mov
jge
mov
lods
out
ret
pushf
dec
or
out
mov
pop
adc
mov
inc
cmc
or
repz
sub
mov
sahf
jmp
push
cmp
sti
stos
mov
cs
stc
stos
sarl
pop
fld
jne
mov
jl
test
bound
aam
add
out
push
pop
sbb
mov
cmp
rcrb
je
dec
out
and
stc
pusha
cmpb
insl
xchg
scas
xchg
ljmp
jae
arpl
xor
fimuls
sbb
add
mov
pushf
xchg
addl
mov
rcl
inc
popa
sub
xorl
push
mov
jle
outsl
xorl
imul
xor
mov
test
loopne
mov
push
and
lods
nop
loop
repz
fidivl
inc
pop
fcmovne
mov
xchg
imul
test
addr16
fiaddl
sbbb
fsub
inc
test
mov
fldenv
inc
inc
mov
or
xchg
cmc
gs
jmp
or
xchg
mov
adc
jmp
push
popf
outsb
jmp
adc
ret
jecxz
into
sbb
ja
popf
cld
adc
inc
je
sbb
jnp
mov
fs
add
mov
sbb
inc
or
or
lods
fdivs
pushf
pop
inc
cmc
loop
adc
test
mov
sahf
dec
out
or
roll
or
into
xor
or
and
cld
cmc
or
inc
leave
outsb
cli
mov
sub
push
sbb
rcr
jp
adc
mov
movsb
sub
push
les
inc
adcl
lret
dec
xchg
faddp
mov
lods
jns
sub
pusha
push
adc
test
int
fsubs
mov
xchg
lea
ficoml
jb
add
jo
insb
ffreep
mov
or
add
jb
mov
push
push
mov
lods
lods
push
mov
pop
shll
sbb
push
int
fistpll
cltd
cmp
sub
insb
pop
pop
jo
adc
xchg
and
dec
leave
aas
mov
mov
dec
pop
out
cli
sub
jae
sub
mov
leave
xorb
xor
inc
pop
stos
xor
xor
hlt
shr
insb
ret
mov
test
fdivrl
rclb
fwait
pop
imul
hlt
jp
mov
lret
jg
sbb
xor
mov
adc
add
jnp
mov
idivl
mov
lcall
cmp
hlt
and
or
imul
cmpsb
xor
andb
mov
pop
inc
xchg
push
jecxz
mov
loop
in
add
movsb
mov
xor
and
pop
js
repz
adc
test
roll
loop
inc
sbb
movsb
adcb
loop
add
mov
popa
repnz
adcl
push
jmp
pop
fimull
inc
fs
ret
mov
ds
loop
dec
sahf
jge
aas
inc
mov
jne
sarb
sbb
jecxz
sub
fidivs
dec
sarb
inc
test
sahf
jge
cmp
add
push
mov
dec
mov
mov
jne
sarb
sbb
jecxz
jno
sub
ret
inc
dec
sarb
inc
test
jmp
sbb
stos
pop
fs
rep
mov
pop
loop
nop
lret
mov
jne
sarl
sbb
jecxz
jno
sub
ret
inc
dec
shlb
sbb
je
pop
ficoml
jne
mov
sbb
jecxz
jno
sub
mov
jo
roll
fidivs
dec
rorb
jecxz
inc
dec
shlb
push
xchg
test
jnp
ds
sahf
aas
iret
fs
mov
sub
or
push
jmp
shlb
inc
mov
nop
jne
ret
aad
add
jl
xor
loopne
orl
jl
push
push
repz
in
mov
push
imul
andl
dec
add
inc
pop
loop
nop
lret
test
imul
pushf
dec
sub
or
aas
dec
rolb
push
rep
rorb
inc
pop
loop
clc
jnp
inc
nop
jne
ret
inc
sbb
jecxz
pop
icebp
add
sbb
pop
out
arpl
ds
rolb
push
repz
inc
mov
nop
jne
sarl
sbb
jecxz
pop
icebp
add
faddp
ret
fldl
daa
jl
dec
xor
dec
mov
ret
js
push
repz
add
mov
sub
cli
test
mov
cltd
outsb
dec
outsl
dec
push
jo
es
jp
inc
fidivl
inc
fidivl
inc
fidivl
dec
fidivrl
dec
fidivrl
dec
fidivrl
les
inc
repnz
mov
dec
cmp
lahf
and
jnp
jnp
jnp
jnp
jnp
jnp
jnp
jnp
jnp
sti
add
sti
cmc
sti
push
sti
jbe
xchg
idiv
pop
sti
ja
xchg
idiv
or
js
mov
clc
add
inc
cmpsb
std
adc
lods
mov
lods
cmp
lods
cmp
lods
cmp
lods
cmp
lahf
mov
int3
shll
rol
xor
std
inc
insl
loope
cmp
mov
mov
inc
cmpsb
ret
adc
adc
and
adc
mov
or
rorb
or
or
pop
cmp
icebp
insl
stc
dec
subb
and
jle
aam
pop
hlt
loop
je
pop
leave
not
inc
dec
xchg
xor
or
mov
adc
jp
jnp
aam
cli
or
ret
bound
bound
rol
push
and
rolb
mov
xchg
mull
test
gs
in
lods
sbb
xchg
das
jl
mov
adc
int
loopne
jle
stos
pop
lods
fwait
cmp
jecxz
lock
pop
imul
and
xor
popf
repz
pushf
iret
mov
adc
adc
insb
push
inc
lret
stos
ljmp
bound
jmp
ljmp
jecxz
and
pop
adc
popf
stos
jecxz
popl
and
cmp
inc
inc
jp
mov
les
jno
leave
repnz
stc
xor
adc
cmpsl
sti
dec
dec
fisubs
mov
pop
and
pop
jo
sbb
arpl
and
mov
mov
xor
shll
mov
mov
js
jp
mov
inc
cmp
negl
ficomps
and
jb
xor
loopne
fdivs
ret
fldl
andb
dec
sahf
test
or
pop
or
ret
mov
lds
mov
fildll
test
stc
xor
icebp
pop
bound
dec
mov
lahf
jecxz
movsb
mov
xor
loopne
repnz
cmp
mov
data16
scas
mov
mov
or
jmp
outsl
sahf
sub
jnp
loop
popa
push
aas
xchg
mov
imul
ds
arpl
fld
hlt
fimuls
push
clc
add
add
lods
inc
dec
cwtl
jl
inc
popf
and
gs
hlt
push
fiaddl
mov
pop
mov
dec
xchg
stc
pop
pop
jl
lds
mov
inc
ret
pop
je
cmp
jne
sahf
jo
nop
outsl
push
push
adcl
outsl
jl
sub
adc
gs
mov
push
lock
das
sahf
or
lock
pushf
test
fs
cmp
pop
xlat
bound
xor
fsubr
mov
loope
mov
jecxz
and
popa
xchg
fsubrl
outsl
pop
push
push
xor
push
mov
ds
insb
inc
jecxz
fcoml
sbb
add
or
mov
jb
jo
lods
push
push
cmpsl
add
and
je
insb
test
repz
shll
push
ss
daa
and
fnsave
sbb
add
mov
xchg
add
sub
mov
inc
in
and
dec
incb
cmp
fcoms
andb
xchg
jns
in
lods
ret
adc
repz
push
daa
jno
inc
inc
sahf
xorb
xor
ss
inc
int
fildl
mov
ret
insl
mov
test
or
xor
insl
mov
test
or
ficompl
test
or
xor
insl
mov
test
or
xor
popa
test
or
xor
insl
mov
test
or
xor
insl
jecxz
sbb
jne
mov
js
test
or
xor
insl
mov
mov
fisubrl
js
test
or
xor
insl
mov
test
or
in
inc
pop
dec
mov
test
or
xor
insl
mov
test
or
fiaddl
mov
fisttpll
repz
insl
mov
test
or
xor
popa
test
or
xor
cmp
jle
add
mov
sbbb
xor
jmp
stc
add
repz
push
mov
pop
add
hlt
jae
and
and
or
orb
xorl
int
int
push
std
mov
faddl
aas
pushf
sub
mov
fmul
xorl
sub
add
xchg
xchg
xor
subb
fbld
repz
hlt
ljmp
inc
mov
pop
ljmp
inc
xchg
fcoms
iret
aas
ljmp
jl
je
ffree
divl
rcll
test
inc
repnz
jecxz
mov
dec
iret
push
mov
in
mov
and
icebp
and
mov
and
or
sbb
push
faddl
sub
mov
inc
in
cmp
and
inc
sub
pop
ljmp
lcall
inc
imul
inc
aas
adc
push
pop
xchg
jl
inc
cli
adc
shll
pusha
sub
adc
pusha
adc
pusha
aas
or
jo
xchg
lret
insl
add
inc
jns
xchg
sti
repz
fistl
ror
lret
stos
jg
in
and
mov
pusha
js
mov
rolb
outsl
sbb
bound
das
and
xchg
js
add
inc
adc
jg
icebp
adcb
xchg
sarb
mov
jns
mov
adc
mov
frstor
fwait
inc
xchg
xlat
inc
push
ljmp
lds
or
pushf
cmp
jmp
push
js
test
mov
sbb
enter
sbb
rolb
rolb
rolb
pop
jmp
imul
insb
stos
movsb
push
jmp
loopne
mov
pop
and
cmp
mov
add
sbb
cld
cwtl
loop
dec
rcrl
jne
xchg
sbb
add
lret
inc
enter
ret
shll
pop
add
ret
out
cmpl
or
mov
sbb
and
lahf
pusha
pop
cmp
lea
cmp
xor
dec
test
adc
fdivs
sub
in
out
xchg
cmp
mov
icebp
xchg
cmp
arpl
nop
adc
das
cltd
aad
mov
fucomip
jae
and
aam
mov
inc
push
js
mov
les
and
or
shlb
fbstp
mov
mov
test
inc
lods
sub
mov
sbb
mov
mov
bound
jl
inc
enter
ret
push
pop
call
push
jns
fdivl
push
add
mull
cld
sub
or
out
sbb
cmp
xchg
rcrb
aam
mov
stos
jb
loopne
sub
and
aam
mov
cmp
push
in
lret
aam
stc
dec
fsubp
jecxz
mov
bound
and
ss
jecxz
jae
and
sbb
arpl
hlt
cs
pusha
sbb
enter
dec
xchg
add
daa
repnz
fs
ss
pop
lods
roll
jecxz
hlt
xchg
jp
jae
sbb
mov
loop
repnz
sti
loope
mov
into
jecxz
push
inc
and
mov
js
iret
dec
sbb
shlb
subb
add
cltd
adc
push
jns
jae
jmp
jecxz
jnp
pop
leave
rcll
bnd
cwtl
mov
adc
mov
aas
test
jne
mov
js
adc
pushl
push
imul
cld
jmp
mov
fsubl
fcomps
stos
leave
fdivs
movsl
xchg
mov
test
push
dec
adc
mov
icebp
into
mov
inc
jne
dec
les
cmpsb
xchg
xchg
loope
ret
cltd
jb
decl
fs
scas
rorl
rcr
roll
cld
repz
push
push
ffree
push
mov
fucomp
adc
mov
push
adc
int3
clc
lods
xchg
fsubl
pusha
and
out
fdivrl
test
sbb
mov
fidivrs
sahf
jge
aam
fiaddl
sti
ret
sbb
mov
mov
rcll
xor
loop
adc
xchg
xchg
mov
sub
mov
xchg
popa
or
sahf
push
and
fcoml
les
movsb
dec
cmp
clc
mov
inc
lods
bnd
sti
inc
andb
xor
stc
je
int3
sahf
aad
iret
notl
addr16
lods
pop
adc
xchg
adc
push
dec
sahf
jns
xor
je
cmp
loop
inc
shlb
notb
loop
cmp
dec
loopne
adc
lods
mov
subl
jg
inc
jbe
xor
int3
or
fsubr
jbe
sbb
rclb
add
repz
cmp
cltd
fadds
mov
shl
add
mov
xor
push
aas
sbb
divb
xchg
arpl
mov
loope
jno
dec
fnstcw
leave
mov
lock
xor
jl
out
sti
sbbl
pop
mov
inc
cmp
push
mov
pop
outsb
or
mov
pop
fs
pop
mov
pushf
popa
stos
movsb
mov
scas
lods
aaa
add
in
rcr
adc
cmp
fmulp
scas
mov
fdivrs
insl
push
cmp
fbstp
mov
inc
popf
pop
xchg
cmc
push
pop
jno
xorb
xchg
pop
mov
fdivrl
cltd
pop
sbb
fiaddl
mov
xchg
xor
cli
dec
inc
ljmp
push
add
fwait
cld
xchg
pop
jbe
pop
notb
jo
movsb
jo
adc
pop
lock
stos
std
notb
xchg
lods
adc
nop
mov
mov
pushf
and
adc
xchg
jno
add
inc
data16
mov
mov
mov
or
cmc
in
pushf
xchg
lcall
jmp
mov
dec
push
dec
ret
xchg
sbb
bound
pop
lods
leave
mov
or
add
fisttps
xor
mov
ljmp
fldl
jmp
xor
subb
xor
adc
ss
in
mov
mov
dec
scas
jecxz
repnz
push
mov
mov
mov
or
push
inc
fs
xchg
jo
mov
sbb
pusha
data16
adc
hlt
je
stos
cld
popf
mov
dec
jle
add
xor
iret
mov
popl
clc
sar
mov
xor
pop
shl
jne
jl
lock
and
clc
pop
sbb
sbb
mov
cmpsl
cwtl
xchg
cmp
or
add
loopne
dec
fsub
inc
mov
add
adc
outsl
shlb
and
test
pop
cmc
xchg
mov
es
cld
xor
lea
lahf
aad
ljmp
pusha
mov
mov
rclb
insb
jmp
mov
lret
pop
sbbb
xor
popf
cld
push
fcoms
push
loope
push
sbb
aas
jns
push
xor
jge
insb
nop
mov
stos
mov
lret
movsl
jecxz
push
sbb
adc
movsb
scas
sbb
ljmp
insb
inc
mov
stos
aaa
jmp
xchg
or
jecxz
nop
jle
sarl
mov
mov
bound
mov
push
mov
mov
adc
popa
nop
xchg
adc
lods
xor
popf
push
loopne
mov
push
icebp
push
and
pop
push
xor
push
loop
mov
pop
xor
loop
xor
in
cmpsb
fs
fistpll
push
xor
outsl
cmp
or
push
out
daa
inc
sbb
xchg
enter
sbb
adc
mov
out
xchg
cmpsb
cmp
cmp
cmp
push
test
jge
pop
lods
mov
inc
pop
add
sub
fsubrl
dec
ret
mov
mov
mov
popa
push
adc
jecxz
repnz
pop
and
add
loop
adcb
push
faddp
mov
movsl
pop
je
in
jle
xchg
sub
xor
push
shlb
lret
rorl
bound
xchg
pushf
mov
inc
mov
imul
push
and
mov
loopne
repz
sbb
iret
push
inc
scas
jns
sub
sub
jecxz
dec
sbb
out
mov
fs
xchg
mov
jnp
aaa
outsb
leave
xor
xor
or
sub
lret
fwait
mov
inc
je
cmp
inc
in
sbb
mov
in
mov
jno
sbb
ret
and
out
mov
cmpsl
xchg
fwait
hlt
test
int
mov
adcl
loope
push
xor
out
repz
and
cmpsb
aam
fisubl
int3
jmp
test
cmp
adc
jp
sub
out
cltd
lret
inc
pop
jecxz
and
aam
sarl
sbb
shlb
and
add
xchg
xchg
fwait
adc
or
shrl
mov
push
mov
jg
cmp
mov
into
aam
lret
pusha
int3
add
imul
pushf
adcl
mov
xor
je
cli
sahf
movsb
xchg
push
mov
mov
imulb
aam
out
push
xor
bound
ret
or
xchg
dec
jg
sbb
and
cmp
push
xor
out
fcmovbe
movsb
xor
jge,pt
lods
cmp
pop
pop
cmp
pop
and
and
les
mov
mov
ss
adc
hlt
lret
or
pusha
ror
mov
sub
arpl
add
bound
jae
lret
and
and
imul
lcall
ficomps
cmp
sbb
sbbl
dec
jmp
cmp
es
mov
sti
loope
mov
ret
pop
rep
fcompl
jle
lcall
ljmp
repnz
push
rclb
jb
xchg
mov
mov
or
lret
andb
aam
xchg
mov
cs
shlb
mov
add
fiaddl
or
data16
iret
insl
rcrl
push
outsl
rcrb
insb
rcll
rcrb
add
mov
add
ret
xchg
loopne
int3
mov
mov
test
cmp
jmp
in
mov
jmp
mov
loop
nop
hlt
jle
sbb
mov
add
jecxz
mov
fistps
repz
inc
sbb
test
sti
xor
jmp
fstpl
test
mov
cmp
hlt
loop
ficompl
call
or
sti
push
pop
hlt
cmp
fdivrl
jb
mov
xchg
or
sbb
test
pop
repnz
or
fsubr
and
and
dec
xchg
mov
movsl
lods
ret
and
cld
push
adc
jp
xchg
aas
mov
ds
inc
aas
mov
fcomps
popa
pop
push
outsb
mov
scas
xchg
inc
mov
jl
hlt
inc
pop
cmp
jb
stos
adc
pop
sbb
popa
adc
inc
xor
mov
lods
leave
cmc
or
fimuls
pushf
lret
cli
sarl
ret
jbe
dec
pop
popf
enter
ret
loope
cli
jmp
or
ret
fldt
push
mov
mov
adc
in
xor
cmp
aaa
mov
ffree
or
popf
add
vphsubbw
int
and
xchg
push
sbb
and
push
frstor
std
loope
xchg
xor
mov
mov
int
clc
hlt
dec
movsl
mov
int3
cmp
outsl
add
je
adc
gs
cmp
adc
adc
enter
sbb
fdiv
scas
cmp
xor
lods
ror
cmp
je
rcrl
dec
cmp
mov
dec
test
test
ret
add
test
stos
adc
mov
xchg
outsb
sbb
sub
sbb
jl
fsubr
or
jl
fwait
xorb
dec
or
pop
and
or
xor
aas
repnz
jae
lret
bound
adc
arpl
lret
out
cmpsb
lods
or
mov
test
cld
push
mov
mov
movsb
jne
xor
sbb
mov
push
ljmp
fcmovb
stos
mov
or
xchg
jg
jecxz
arpl
pop
jle
mov
cmp
and
insb
rorl
lahf
inc
xchg
adc
test
lcall
loop
out
rcrl
sbb
ret
orl
adc
mov
add
add
pop
cwtl
mov
pop
stos
jnp
pushf
shl
and
lods
jecxz
andb
rcrb
cmp
pop
mov
loope
shlb
push
cmpb
sbb
es
mov
mov
mov
in
subl
gs
xlat
in
sti
add
add
push
or
flds
dec
icebp
mov
icebp
fildl
repnz
sbb
filds
cltd
mov
and
mov
xor
leave
fdivl
and
movsl
jae
ficoms
scas
aam
cmp
mov
cmpsl
out
xor
loopne
dec
sbb
incl
ljmp
mov
mov
inc
cmp
mov
cmp
mov
inc
daa
ret
addr16
mov
jae
imul
sarb
hlt
sbb
xor
lock
jl
jb
mov
dec
push
scas
aas
adc
mov
arpl
xorb
and
xchg
in
es
mov
adc
and
mov
fisubs
mov
ret
stc
ret
sbb
and
push
sbb
sub
inc
andb
push
idivl
push
xchg
jl
mov
mov
jb
daa
ffree
jae
add
pop
xchg
fwait
add
bound
cli
and
mov
test
repnz
inc
mov
mov
mov
insb
inc
frstor
pushf
stos
mov
pushf
loopne
add
mov
in
push
lcall
dec
xchg
jbe
adc
repnz
popa
faddl
mov
jb
dec
in
xor
push
inc
out
hlt
stc
adc
dec
jno
add
cli
pop
jae
push
jno
arpl
push
add
fs
insl
add
clc
cmp
dec
icebp
add
lods
cmp
lods
xlat
pop
lcall
je
xor
sti
cmp
inc
js
lahf
in
add
sub
cli
out
pop
and
test
dec
and
xor
push
sti
jb
lret
and
test
icebp
loope
xor
lds
aam
rcr
mov
xchg
pop
addl
inc
cmp
pop
test
nop
and
jmp
add
aam
lea
repz
insb
adc
aam
mov
xor
sti
jno
inc
in
aad
scas
mov
in
insl
xchg
mov
dec
aad
arpl
ja
jle
adc
jmp
mov
rcll
adc
push
push
aam
lret
inc
sbb
ds
mov
aam
lcall
imul
pop
inc
mov
fldl
push
ljmp
mov
aad
push
shrl
fmul
sbb
inc
mov
fwait
ss
dec
mov
addr16
orl
and
loope
push
adc
mov
aaa
or
dec
cmpb
sbb
ret
mov
xchg
dec
dec
cli
adc
lods
mov
insl
jl
xor
fsubrs
ja
aam
out
push
movsb
mov
lret
cld
lods
insb
sbb
fneni(8087
sub
cmovl
cmpsl
je
mov
aam
mov
and
jl
and
out
out
fisubrs
or
inc
mov
inc
les
mov
nop
jno
rorb
test
jp
lods
sbb
cmp
xorb
pop
in
stc
test
inc
xor
adc
ljmp
stos
jle
test
sbb
jne
mov
add
fs
test
mov
fistpl
jl
cmp
inc
fs
sbb
out
push
sbb
cld
adc
jl
adc
or
mov
jo
ljmp
mov
pop
fs
in
lods
cld
jp
jmp
pop
aaa
inc
fucomi
aad
adc
movsb
cmpsb
xor
shlb
pushf
int3
in
cmp
mov
in
pop
into
repnz
cmc
js
and
fdivrs
xor
out
test
pushf
dec
test
stos
adc
imul
xchg
dec
stos
fdivrl
in
inc
dec
lea
and
outsl
rcrl
out
inc
or
daa
popf
in
fimuls
and
inc
ret
popa
mov
push
fs
jbe
stos
push
int3
fsubp
je
in
add
sbb
leave
push
adc
pop
push
rolb
mov
mov
aad
dec
and
inc
psllw
push
je
jp
pop
pop
stos
push
sub
mov
nop
pop
adc
cmp
and
mov
cmp
mov
xchg
das
icebp
or
add
xchg
aas
stos
sbb
dec
and
ret
in
dec
jns
dec
xor
dec
mov
fs
mov
and
movb
mov
ret
imul
xchg
movsl
fwait
andl
outsb
jl
adc
adc
mov
das
aad
jae
inc
push
xor
bnd
cld
in
mov
hlt
inc
add
cmp
repz
and
cwtl
aas
psubd
pop
mov
sub
loop
icebp
test
aam
fiadds
in
in
xor
in
xor
imul
ret
in
fdivr
mov
lods
push
adc
push
outsb
jp
adc
cmp
enter
mov
rorl
leave
fdivs
pop
add
mov
repz
rorl
inc
mov
cli
mov
sahf
in
push
aaa
dec
es
adc
mov
adc
outsb
add
lret
fld
xor
mov
adc
fadd
pop
fistpll
push
stos
int3
pop
and
add
sub
push
gs
fildl
pop
add
mov
jl
mov
lret
mov
stos
mov
cwtl
adc
inc
dec
push
divb
int3
pop
out
xor
mov
ror
mov
aad
je
cmp
mov
and
mov
dec
dec
ret
push
cltd
adc
daa
lahf
push
cmpl
add
repz
data16
mov
test
cmp
inc
mov
adc
mov
fnstcw
mov
insb
mov
hlt
xor
inc
mov
ficompl
jnp
lods
or
push
xorb
rorl
ja
insb
lahf
mov
pop
fldcw
sbb
fs
int
nop
adc
mov
clc
jl
test
sbb
ss
xor
insb
andl
cmp
sbb
sbb
mov
xchg
jo
jno
or
lock
lahf
clc
pop
stc
pop
in
mov
hlt
mov
cli
add
mov
cmpb
les
fstpt
jle
lods
xlat
test
push
cld
movsl
mov
or
mov
out
rcrb
pop
mov
mov
out
test
popa
jp
repz
dec
rclb
and
sub
xor
mov
int3
add
popf
adc
cmp
lods
jne
movsb
testb
movsb
mov
jp
cld
adc
jl
mov
enter
xchg
test
push
fwait
les
xlat
xchg
push
adc
adc
test
mov
mov
data16
fistpl
mov
xchg
xchg
xchg
aam
imull
pushf
sarl
mov
out
pop
dec
mov
cwtl
mov
mov
popa
push
adc
mov
jmp
in
enter
mov
enter
aaa
pop
mov
enter
inc
jecxz
repz
and
repnz
ficoml
dec
int3
cs
int
dec
mov
outsb
test
int3
lahf
push
imul
mov
insb
xchg
pop
cli
mov
dec
and
outsb
mov
js
jbe
insb
pusha
cmp
adcb
mov
inc
mov
rcr
sbb
fnstsw
aas
mov
cmp
cmpsl
xchg
inc
adc
mov
or
adc
xor
lods
in
int3
pop
mov
arpl
sbb
test
pusha
insb
mov
ret
mov
sub
and
jae
sub
ljmp
or
sbb
push
addl
sub
or
push
xchg
jle
popf
mov
and
es
pusha
push
adc
or
loope
das
js,pt
movsb
movsl
outsb
and
xchg
adc
jo
loop
lods
sti
lea
dec
xlat
pop
mov
mov
mov
jle
xor
mov
mov
pop
mov
mov
mov
fildll
mov
pop
shrb
clc
sbb
jge
lret
sub
subl
andl
aaa
mov
lods
repz
stos
leave
xorb
leave
cld
sti
jb
stos
and
pushf
pop
or
cli
xchg
inc
ds
mov
adc
mov
lret
mov
icebp
adc
jmp
fs
loope
dec
insl
cmp
out
jge
dec
inc
dec
pop
cwtl
jle
pop
fsubs
mov
fcomi
lea
mov
push
ficomps
mov
push
das
or
fwait
xchg
out
les
icebp
push
pop
push
mov
xchg
addl
popa
sti
add
dec
inc
pop
cli
push
xor
lret
inc
das
xlat
cltd
test
mov
es
stos
lea
and
test
inc
xor
adc
cwtl
and
cld
sub
cmp
fsubp
stos
mov
mov
cmpsl
addr16
test
inc
jae
inc
jne
into
mov
mov
sub
push
popf
dec
add
and
addr16
pop
int3
out
addl
mov
in
cwtl
orb
loope
repz
or
aam
orl
fdivrp
or
fsubrp
ret
push
ret
mov
loop
movsb
mov
pushf
fimuls
ret
pusha
ret
cld
hlt
test
add
jl
lsl
mov
insb
fisttpll
fs
add
push
mov
decl
cld
push
inc
mov
in
push
cmp
adc
sti
push
sub
or
repnz
or
fdivr
or
sub
lcall
insb
shl
lcall
ljmp
insb
pop
xchg
lcall
jle
push
rcrl
imul
lcall
insb
mov
insb
jne
lcall
mov
insb
mov
lock
lcall
push
insb
outsb
push
jl
insb
dec
jo
lcall
cltd
insb
xor
cmp
lcall
insb
jge
push
repnz
in
xor
mov
push
sub
les
repnz
add
fsubs
sahf
je
lahf
add
les
or
fcmove
inc
out
out
movsb
mov
push
pushf
inc
aaa
das
inc
hlt
sahf
inc
push
bound
test
pop
or
mov
mov
pop
mov
mov
popf
cmpl
in
adc
push
mov
sahf
jecxz
les
adc
add
mov
pop
in
push
jns
or
mov
leave
ret
loope
add
fnstcw
rcrl
mov
xlat
jb
sbb
and
js
mov
mov
arpl
mov
jmp
andb
cmp
jl
cmp
out
mov
in
xor
lea
fstps
push
out
xchg
js
mov
lret
aam
insb
sar
cmpl
pop
rclb
hlt
ds
add
in
inc
loop
adc
sub
testl
outsl
movsb
pop
hlt
repz
test
and
inc
adc
nop
ljmp
add
les
mov
icebp
fistl
jl
xchg
ljmp
mov
mov
push
aam
jp
adc
mov
adc
dec
mov
fs
outsl
jl
push
sbbb
jecxz
dec
ret
sbb
mov
hlt
and
int
idivl
dec
xchg
xor
mov
outsl
mov
cmc
sti
or
xchg
mov
dec
int3
dec
out
mov
pushf
push
pop
sbb
mov
fisubl
mov
in
dec
shl
add
popf
int3
cwtl
add
hlt
mov
enter
clc
mov
mov
icebp
inc
pmulhuw
cmp
mov
clc
dec
jp
jecxz
ret
push
sbb
in
stc
sbb
je
scas
in
inc
aad
mov
je
mov
ret
and
xchg
stos
enter
clc
add
mov
hlt
sbbl
pushf
mov
into
adc
jg
sbbl
xor
fadds
aam
hlt
fcompl
in
loope
mov
cmp
adc
cmp
int
js
mov
or
jmp
sbb
sti
lahf
fimuls
xor
loop
mov
push
insb
mov
clc
dec
add
fcmovb
fldcw
add
jmp
loop
mov
cmp
add
sbb
push
out
sub
jmp
popf
in
cwtl
add
movsb
mov
ss
clc
sbb
add
hlt
jbe
loopne
or
les
mov
mov
int
cmc
dec
rcl
mull
out
outsl
pushf
pop
hlt
idivl
or
jbe
lock
push
and
sbb
hlt
xor
daa
outsb
inc
mov
outsl
mov
shlb
mov
fmull
or
iret
push
xor
jle
push
sahf
pop
xor
out
pop
pop
pop
iret
or
adc
shlb
fisubl
and
and
add
jp
mov
mov
pop
push
stos
aam
fcoms
shlb
add
inc
push
mov
xlat
cmpsl
nop
pusha
arpl
mov
insl
fnstsw
lock
mov
scas
jl
add
sarb
in
popa
hlt
lock
jns
push
ret
mov
decl
push
mov
sti
add
leave
mov
into
shll
loop
mov
repnz
mov
mov
jae
jno
cli
popa
hlt
mov
inc
fsubp
jae
sbb
add
dec
adc
into
mov
pop
loopne
std
push
xchg
adc
dec
mov
push
mov
in
dec
dec
xor
les
jne
test
imul
xor
sub
or
add
add
jp
aam
outsl
fsubp
int3
dec
icebp
lret
orb
fmuls
adc
popf
fldenv
cltd
mov
mov
xor
loopne
sbbb
push
lock
aam
je,pn
mov
fsubl
fwait
sub
and
test
ffreep
xlat
cmp
out
out
lock
sbb
fnstsw
popl
add
ret
add
in
insl
pop
sub
sub
cmp
mov
xchg
pop
cmp
aas
rcll
add
mov
xor
sub
sub
bound
jp
ljmp
subl
add
ret
dec
adc
loop
mov
jle
xchg
orl
inc
cmp
jo
xor
pop
fsubp
xor
nop
stc
in
or
lods
mov
and
mov
add
add
xlat
pop
xchg
push
xor
loop
or
shll
pop
push
dec
out
sti
fcompl
je
sub
addb
sti
mov
repz
insb
jmp
cmp
inc
xor
ficompl
jl
out
rcrl
aam
sbb
shrl
rcl
push
cmp
pop
mov
pop
sti
mov
test
dec
int3
xor
push
mov
xor
ja
xor
or
lahf
add
mov
je
les
imul
loop
jl
rorb
mov
xor
sti
test
mov
dec
jo
sub
mov
les
xor
xor
gs
lods
and
enter
push
leave
push
pop
pop
ljmp
in
fmul
jo
mov
aad
pop
xor
mov
dec
out
dec
or
mov
mov
or
jg,pn
mov
and
xchg
lods
mul
and
inc
xor
mov
cmp
jl
add
push
or
imull
and
add
adc
xchg
or
hlt
ss
adc
jp
mov
dec
xchg
bound
or
aaa
or
and
movsb
jl
fists
sbb
pop
bound
je
xor
int3
xchg
add
and
xor
fs
xor
fs
pushf
pop
sub
jb
mov
mov
insl
add
insb
inc
dec
jp
jne
js
and
adc
xor
push
dec
test
xchg
or
sbb
dec
rclb
mov
jp
pop
iret
or
add
or
fwait
mov
pop
jmp
shlb
mov
sub
fucomi
and
adc
mov
xor
pop
push
lret
out
ret
imul
mov
rolb
sub
dec
pushf
fiaddl
popa
loopne
test
and
xor
mov
les
mov
ss
inc
and
cmp
andb
jecxz
jp
sub
inc
lcall
lcall
ret
addb
sbb
frstor
xor
xor
je
add
adc
fstpl
popf
pop
xor
adcl
xchg
jbe
cmc
ljmp
ret
pop
or
adc
popf
push
imul
pushf
jecxz
xor
cmc
loopne
popa
cmp
icebp
out
ficoms
jle
es
add
lret
movsb
into
xchg
mov
adc
into
mov
mov
mov
outsb
test
lret
sbb
mov
jb
fisubrl
cli
shl
adc
mov
sbb
das
jp
xor
mov
sub
mov
enter
addr16
pushf
je
ror
bound
pusha
mov
loopne
sub
or
mov
and
and
mov
frstor
cmp
pop
sbb
call
loopne
jmp
add
ljmp
dec
inc
mov
loope
shl
icebp
mov
out
adc
popf
push
cltd
fdivrs
jge
loope
fdivr
jecxz
dec
lahf
mov
cltd
nop
mov
xor
and
lea
push
xor
pop
pop
add
mov
jp
in
fs
pop
addb
insb
pop
jb
dec
outsb
lret
ret
inc
adc
fisubrl
lcall
lcall
pop
xchg
sbb
rcll
mov
sbb
pop
mov
sbb
pop
mov
sbb
pop
mov
sbb
pop
add
mov
test
js
xor
popf
ret
pusha
cld
inc
popa
inc
fidivrs
movsb
add
inc
push
addl
cmp
loop
mov
and
cmp
les
je
jecxz
ret
add
and
ret
mov
mov
pop
mov
and
es
ds
or
inc
fisubs
cmpl
loopne
je
xchg
xor
lods
inc
adc
popf
ret
and
ss
addr16
popf
and
fcmovb
fistl
fwait
add
cmpsb
and
mov
xchg
sbb
or
inc
lods
and
in
dec
fstl
ss
sub
call
xor
jae
pusha
add
push
and
cmc
imul
and
loop
jae
ret
addr16
sub
fisubs
adcb
fstp
test
pop
loop
xorl
cmp
nop
add
fidivrs
test
jmp
out
loopne
add
and
ret
and
mov
cmpsb
adc
xor
sub
aad
in
mov
pushf
stos
and
fwait
cmp
mov
and
xor
xchg
adc
mov
mov
add
sub
mov
sbb
pushf
pushf
mov
inc
or
or
std
push
lods
jns
adc
push
mov
push
pushf
or
sarb
mov
jne
pop
cmp
jg
add
or
sbb
mov
add
test
lret
jbe
rolb
mov
mov
adcl
out
dec
pop
xchg
mov
jg
out
and
jno
adc
loop
pusha
mov
test
not
fnstcw
add
subl
mov
sahf
inc
test
add
fldl
mov
xchg
shlb
or
mov
ds
lcall
mov
pop
pushl
nop
inc
decb
leave
inc
sub
stos
or
btc
push
mov
push
mov
incb
pop
cmp
push
push
je
pop
add
imul
scas
sbb
and
imul
test
aas
rorl
push
aam
inc
pushf
bound
shlb
adc
loop
fld
ret
pop
daa
mov
mov
loopne
xchg
mov
aad
sbb
cmc
inc
fs
ret
inc
and
mov
scas
sbb
dec
loope
add
aad
inc
xor
ror
fs
push
inc
std
and
lret
or
push
mov
push
push
xor
lods
bound
xor
pushf
loop
add
repz
and
xchg
fnsave
test
push
es
out
loop
rorb
sahf
push
adc
lcall
jg
pop
stc
inc
dec
xor
jmp
sbb
aam
loopne
ljmp
and
cwtl
js
pop
pushf
mov
or
mov
addb
neg
push
push
pushl
pop
jecxz
fdiv
lods
out
lcall
scas
mov
dec
cmp
mov
ret
rcll
and
icebp
mov
orb
hlt
or
inc
shl
mov
ja
jl
cld
outsl
xchg
mov
mov
xor
or
mov
sarb
xor
sub
das
adc
add
push
shr
sbb
shr
mov
nop
jmp
pusha
cmp
xchg
rorb
push
pop
jbe
loop
int3
inc
adc
add
cmp
adc
movsl
ret
cs
rolb
xor
stos
leave
mov
int3
inc
cmp
jo
stc
jp
adc
mov
sbb
sahf
push
xor
push
les
xorb
sub
fbstp
mov
popa
sbb
mov
test
jb
jmp
mov
adc
hlt
push
js
testl
cltd
adc
lods
pop
lret
in
inc
mov
adc
fsubs
inc
push
outsb
mov
inc
outsb
jbe
inc
clc
add
xorl
aam
dec
mov
stos
and
out
fdivl
lods
mov
adcb
cli
jnp
fdivl
lods
imul
and
addb
jle
daa
cmp
add
push
dec
in
cmp
andl
testb
and
movsbl
sub
test
lret
lock
pop
xor
add
sbbb
xor
addb
pop
in
leave
mov
adc
adc
test
nop
jne
and
push
int3
mov
test
sub
ret
push
mov
add
and
sbb
sti
xlat
stos
dec
dec
mov
loopne
test
jl
pushf
insl
sbbl
enter
movsl
test
lahf
loop
adc
loopne
push
ror
ljmp
subl
mov
pusha
sub
jmp
dec
repz
fidivrs
repz
clc
xchg
mov
ficoml
je
lcall
ficomps
stos
in
adc
loopne
in
sbb
jne
sub
sarb
adc
rolb
mov
adcl
cltd
clc
fisubl
mov
pop
pop
cltd
fs
xchg
cwtl
outsl
add
mov
adc
or
add
sub
ss
sub
mov
fistpll
int
mov
shll
jecxz
jmp
fcmovnu
lret
mov
jmp
enter
add
inc
fadd
cmp
mov
dec
cmp
fs
arpl
test
out
rcl
popl
adcb
shll
iret
cli
jmp
mov
icebp
jmp
sahf
pop
aas
rcll
inc
xchg
test
inc
cmpsl
fcom
inc
mov
sti
jnp
and
inc
addl
cmp
dec
inc
insb
and
adcl
lcall
fidivs
mov
imul
insb
mov
scas
jl
insb
or
add
sub
pop
fs
mov
mov
jmp
sahf
lock
fs
push
stos
cs
ret
and
ss
imul
dec
rolb
dec
push
or
add
fiaddl
add
mov
xchg
out
sbb
mov
fcoms
xchg
shl
inc
xchg
aas
cmp
inc
cmc
dec
inc
mov
arpl
loopne
pusha
imul
shll
adcl
and
test
jo
mov
in
cmp
xorl
movsb
xor
jmp
jl
adc
pusha
push
cmp
stos
hlt
dec
ret
inc
int3
add
xor
imul
arpl
mov
mov
cli
sarl
jb
and
push
jae
adc
jg
and
data16
cmpsl
xchg
mov
xchg
mov
inc
cli
add
lret
in
dec
in
ret
mov
xor
cmp
jl
xchg
outsb
in
shll
mov
adc
rcrb
push
pop
shrb
bound
cmp
adc
or
ret
adcb
and
icebp
arpl
mov
xor
popa
stos
adcb
int3
jb
mov
mov
or
int3
and
sarl
add
enter
pusha
mov
and
mov
or
mov
aam
sbb
mov
xor
and
add
loope
adc
mov
mov
add
bound
cwtl
daa
lret
fsubrl
enter
dec
dec
lret
adc
cmpsb
cli
shrb
push
dec
pop
fsubr
loop
mov
out
mov
popa
mov
loop
jnp
incl
inc
leave
inc
fs
cltd
mov
ret
shll
popa
dec
imul
dec
mov
sbb
out
pop
sub
scas
addr16
add
add
enter
icebp
in
add
call
test
sbb
mov
ret
push
adc
rolb
icebp
popf
sbb
clc
sub
adc
and
or
sti
adcl
aam
sbbl
insb
aam
icebp
cmp
in
repz
dec
ljmp
in
pop
lret
mov
or
mov
adc
loop
mov
cmp
addb
adc
jecxz
popf
push
mov
ds
cmp
ja
repz
add
xchg
sti
or
loopne
sahf
dec
inc
jle
repz
rorb
dec
cmpsl
sbb
adc
push
repz
ret
cmpsl
icebp
pop
fsubl
int3
or
fistpl
adc
jmp
xchg
adc
xchg
fdiv
insb
xchg
mov
add
jmp
cld
cld
bound
js
push
add
mov
inc
movsl
jecxz
hlt
movsl
mov
mov
mov
lods
popf
sbb
lahf
mov
aam
add
es
fcmovnb
and
pop
stos
and
xchg
cmp
ret
add
or
roll
pop
adc
subb
add
xchg
bound
xchg
sar
sti
xchg
shl
jne
mov
cld
cmp
test
mov
loop
xorl
mov
in
mov
and
dec
das
out
xchg
mov
loop
push
mov
push
push
js
repz
mov
jns
loop
jnp
bound
adc
jl
jecxz
mov
cmp
mov
add
insb
ret
cli
dec
je
jecxz
ret
xchg
inc
loope
mov
repz
mov
mov
bound
mov
adc
add
cmp
mov
jb
into
orl
jecxz
in
shlb
testb
push
dec
adc
add
and
in
lret
add
mov
mov
rorl
mov
pushf
test
xchg
push
popa
lret
roll
je
rolb
out
imul
testl
push
pop
add
fs
mov
in
out
sbb
out
fmuls
cld
inc
decb
leave
pusha
pushf
pushf
lea
je
push
pop
push
not
lea
mov
lea
movsbl
movzwl
pusha
not
lea
lea
not
mov
mov
lea
jl
call
pushf
lea
jne
movsbw
jmp
movb
inc
stos
loope
pop
jge
jae
popf
inc
add
popf
xchg
aas
inc
pop
nop
push
pop
adcb
stos
dec
shlb
mov
pop
pop
sub
lcall
sbb
int3
fwait
cmp
es
or
dec
insl
jae
and
imul
inc
sub
shlb
inc
enter
and
mov
scas
pushf
pusha
lea
jmp
xchg
loop
and
and
lods
xor
pop
movsl
adc
push
inc
cmp
sub
or
cmpsl
jae
lret
and
test
jb
xorb
lock
mov
movb
cmp
ss
lock
push
addr16
add
ficompl
jge
pop
mov
adc
cmovb
aas
or
aas
mov
aaa
outsl
icebp
lret
push
mov
int
dec
stc
push
cmpl
movsl
loop
gs
loop
rolb
jo
push
hlt
mov
add
out
add
xor
sub
rclb
mov
es
pop
aas
or
addr16
jmp
popf
shlb
mov
adc
rclb
xchg
and
or
es
fcmovnbe
imul
stc
pop
cmp
push
es
fprem1
scas
mov
add
shlb
in
fstpl
popl
mov
mov
sub
push
xchg
fdivl
sub
rclb
mov
xor
es
push
jns
pop
cmpsb
ja
lcall
es
mov
clc
mov
push
cmp
test
jmp
adc
cmpsl
mov
sbb
sub
outsl
inc
aad
sbb
xlat
push
adc
fidivrs
dec
pop
jnp
inc
fcoms
push
pop
jnp
enter
and
stos
cli
aam
push
adc
aad
pop
dec
or
out
dec
mov
shlb
pusha
lea
jne
pushf
mov
pusha
inc
pusha
call
not
mov
movzbw
mov
pusha
pusha
mov
cmp
and
bt
add
mov
pushf
pushf
pushf
lea
jmp
xor
neg
btc
mov
bt
clc
jmp
test
bt
cmp
push
jmp
pushf
mov
pusha
pushl
pushf
lea
jmp
call
mov
test
mov
cmp
jmp
bswap
movsbw
pushf
mov
lea
bswap
movzbw
not
push
mov
pushf
movsbl
call
pop
mov
movb
call
clc
or
mov
pusha
lea
je
movsbw
lea
movzbl
pushf
mov
setb
lea
lea
lea
jmp
inc
sahf
cmp
and
jmp
mov
movsb
inc
sahf
jns
pop
fcmovu
and
in
popa
loope
sub
cli
mov
sub
addr16
dec
and
rorb
xor
into
add
jmp
nop
mov
pop
test
iret
jmp
dec
outsl
arpl
inc
insb
insb
outsl
arpl
jmp
movb
movl
pushf
call
jmp
loope
add
aaa
cmp
stos
inc
leave
jle
fdivl
pop
or
test
lcall
dec
test
adc
mov
gs
out
or
jg
jb
call
inc
lcall
pop
fwait
pop
push
fdiv
and
or
dec
xor
jmp
mov
add
add
mov
into
stos
inc
testb
mov
mov
loop
cltd
repnz
dec
xchg
enter
shl
in
and
movsb
add
loope,pn
std
mov
mov
test
repnz
or
push
xchg
xor
test
call
cmp
mov
rcll
pop
mov
shlb
xor
es
decl
push
inc
push
dec
xor
inc
dec
dec
add
dec
roll
jmp
push
lea
lea
pushf
mov
mov
call
call
inc
sub
outsl
rolb
or
test
test
adc
sbb
jb
inc
out
jle
mov
xchg
dec
les
mov
xchg
lods
repnz
adc
mov
cmp
sbb
mov
rcrl
sbb
mov
xor
test
cmp
in
shlb
cmp
inc
stc
add
mov
mov
bswap
pusha
mov
jmp
call
push
lea
movzbw
mov
mov
lea
jmp
push
and
mov
and
xor
shlb
mov
jle
rclb
fimuls
jge
andb
xchg
popa
cmp
lds
fimuls
pop
fwait
int3
push
iret
cmpsl
gs
insb
xorb
lret
hlt
subl
xchg
sbb
insl
aaa
test
fadd
sub
loope
insb
push
pop
pop
inc
ret
aas
mov
stos
rcrb
inc
push
mov
vmread
es
mov
add
add
neg
aaa
push
jmp
lea
jne
inc
mov
cmc
cmc
add
push
push
movzwl
test
mov
call
sub
pushf
lea
jmp
mov
test
call
call
mov
pushl
pushl
lea
jmp
call
bswap
not
mov
pushf
pusha
push
lea
jmp
pushf
pushf
lea
jne
call
push
pushf
rep
jmp
push
pushf
lea
jne
rcr
mov
pushf
cmp
push
cmp
pushf
pusha
push
lea
ja
setns
pop
mov
pusha
lea
pusha
mov
movsbw
seto
bswap
mov
pop
mov
jmp
cmc
cmp
pushf
lea
jmp
pushf
call
jmp
pushf
pushf
lea
jne
call
movzwl
pop
mov
call
lea
je
push
clc
jmp
sub
test
ja
push
pushl
pushf
pusha
lea
jb
push
jmp
stc
popfw
call
add
dec
outsl
popa
fs
imul
add
daa
ret
xor
push
or
inc
iret
cwtl
xor
add
mov
mov
leave
sub
jno
sub
nop
test
cmpsb
bound
and
mov
push
and
pop
leave
xorb
test
mov
test
fldenv
mov
je,pt
or
ljmp
push
xor
adc
aad
jo
mov
add
es
xor
xlat
xor
in
outsb
push
imull
push
adcb
lret
mov
inc
cld
jmp
pop
pushf
pusha
pusha
pushl
ret
push
call
rol
add
add
mov
cmp
test
mov
pushf
pushf
pushf
lea
je
bt
sub
test
call
dec
jne
fidivl
xchg
out
icebp
or
js
loop
add
call
mov
adc
mov
inc
mov
push
and
mov
insb
inc
bound
push
sbb
push
insb
das
xchg
mov
cs
pop
sarb
bound
mov
adc
pop
mov
movsl
pop
adcl
std
aas
adc
insl
aam
push
fnsave
xor
cmp
arpl
add
inc
outsl
bound
fildll
movsb
ds
addps
pop
lret
es
aaa
cmp
sbb
daa
pop
in
loop
jl
cmpsb
scas
mov
es
xchg
aad
call
ja
repz
push
pop
xchg
inc
loop
push
leave
cmp
jo
jne
ss
add
mov
xchg
add
pushaw
cmc
in
jno
imul
cli
fstl
inc
lds
sub
push
or
in
pop
jb
dec
jecxz
xchg
inc
lret
dec
lcall
shlb
mov
jne
xchg
push
ja
mulb
cmp
mov
sub
scas
scas
sbb
insb
arpl
fucom
mov
jns
mov
dec
jae
jecxz
and
out
int3
and
cltd
xchg
shll
pusha
and
into
dec
pop
push
fwait
dec
inc
ljmp
or
shll
jne
push
sub
cmp
repz
xor
jp
jecxz
es
loop
cld
fadd
movsl
cmp
aas
adc
mov
sbb
es
push
pop
pop
cmpsl
push
cmpsl
mov
mov
negl
add
mov
leave
jae
push
mov
popf
inc
dec
sub
addl
mov
shlb
movsb
imul
stos
sub
pop
push
jecxz
adc
push
test
loop
jl
xchg
scas
shrb
adc
push
test
xor
nop
cmp
pop
or
cmp
xor
jno
and
clc
popa
call
es
xchg
xor
and
hlt
pusha
sahf
inc
jp
mov
fmulp
cmp
shlb
or
int
cs
lahf
jg
push
or
imul
adc
es
jmp
int3
popf
pushf
movl
pusha
call
test
jmp
lea
je
cmp
jae
shl
mov
stc
test
shld
add
or
mov
push
stc
pushl
clc
test
jmp
push
add
stc
clc
ror
pushf
mov
mov
dec
sub
jb
cmp
cwtl
cwtl
not
lea
call
lea
jne
btr
movzbw
mov
jmp
jmp
add
enter
addr16
std
lcall
outsl
pop
add
and
incb
inc
incl
inc
jmp
pop
aam
inc
adc
data16
idivb
and
cmpsb
jge
push
outsb
push
inc
lcall
adc
ja
popf
mov
add
stos
jo
roll
je
push
aad
push
andl
ds
push
packsswb
fsub
pop
dec
cmpsl
or
jl
and
mov
lods
sarl
mov
fstpt
pusha
pop
test
and
in
push
xchg
xchg
sub
mov
xchg
mov
sub
and
aad
dec
fldenv
push
or
pop
adc
iret
enter
or
pop
aad
mov
in
adc
add
arpl
mov
mov
out
aad
dec
add
adc
inc
sub
pop
fildll
xchg
push
outsb
in
dec
fimull
loope
mov
cwtl
fcoml
add
and
mov
sahf
aas
out
adc
jns
ljmp
test
jl
punpckhbw
mov
and
mov
pushf
sub
dec
or
cld
pop
dec
out
cltd
and
test
inc
mov
dec
mov
push
or
dec
fsubs
fistl
jne
lock
out
sub
mov
cmp
dec
mov
out
jno
or
and
call
pusha
shlb
fdivrp
mov
cmc
loop
lcall
push
sahf
xlat
mov
xlat
sbb
push
mov
push
pop
add
push
les
xor
sub
fs
faddl
xchg
mov
pop
in
xchg
pop
pop
inc
lahf
sbb
sbb
xor
mov
stos
add
lea
scas
xor
add
add
shl
andb
fisttpl
insl
or
sbb
jno
leave
into
lret
fwait
pop
inc
iret
mov
in
bnd
jmp
int3
cmc
repnz
sub
outsl
mov
aas
cmp
lea
jbe
push
pushf
pushf
lea
jne
push
call
or
pushf
pusha
pusha
lea
je
clc
dec
btc
add
inc
sub
shr
add
shr
bt
adc
pushf
sub
mov
mov
clc
bsf
sbb
add
xor
shl
xor
add
add
bts
or
rcr
btr
mov
bt
shr
call
movsbw
mov
pusha
call
call
mov
mov
sbb
pop
inc
je
jg
or
jl
or
pop
sub
mov
dec
pusha
xchg
pop
out
jle
sbb
sub
xorb
mov
lret
fstl
test
xor
mov
inc
cmp
xchg
lds
fidivs
sbb
jp
loopne
push
imul
les
mov
pushf
call
movl
call
pushf
lea
ja
bt
imul
stc
test
pusha
add
pushf
lea
jmp
mov
lea
pusha
mov
jmp
call
lea
jmp
shlb
xchg
lods
xchg
adc
enter
and
sub
xor
ss
sahf
mov
or
repnz
xor
jbe
mov
lock
xchg
int
jmp
loop
cmp
and
and
add
push
pop
cmc
negl
mov
push
mov
shlb
xor
sbb
sarb
es
in
jge
xor
pop
out
mov
xor
xchg
xlat
mov
sub
aad
es
push
pushf
dec
lea
call
pushf
movw
cmp
mov
pusha
lea
jae
stc
test
push
cmp
cmp
jmp
enter
leave
mov
es
xor
and
xor
sub
xchg
jl
jo
rorb
lock
sbb
lahf
jecxz
mov
outsl
call
scas
aam
jmp
dec
xchg
jl
test
test
jle
int3
fucomi
pop
push
cmp
inc
add
push
daa
mov
fistpl
or
iret
movsb
sti
jns
popa
jns
cmp
in
pusha
add
mov
xor
or
push
daa
inc
xchg
xchg
sbb
sub
jp
jmp
pushf
pushl
popl
pusha
pushf
movb
pushl
ret
push
cmc
or
pushf
pushf
mov
call
pusha
repnz
pusha
lea
jne
pushf
movb
bswap
setb
bswap
mov
lea
call
setge
mov
pop
movzbw
not
jmp
icebp
fadds
mov
sub
jp
call
adc
jo
push
cmpxchg
cwtl
adc
mov
jae
push
out
xor
xor
enter
aaa
inc
mov
mov
out
push
add
test
lret
sbb
movsb
fnstenv
shrl
mov
push
pushf
mov
pushf
bswap
lea
mov
pusha
pushl
ret
clc
cmp
jmp
pop
out
push
shl
mov
sbb
add
jne
inc
push
btr
jecxz
inc
mov
xchg
mov
lock
ret
enter
xor
pushf
fcomip
pusha
data16
dec
sbb
xor
andb
int3
sbb
shlb
daa
enter
and
je
add
xor
and
das
mov
test
dec
mov
call
sbb
adc
sbb
movsb
mov
pop
loopne
es
push
mov
pop
imul
cmc
push
or
insb
xor
jnp
xor
cmc
jno
mov
sub
sub
push
in
ds
or
push
jne
sarl
orb
dec
xchg
add
pop
sub
loope
test
rcrb
bound
int
das
cmp
pop
shlb
add
xlat
xor
push
out
jae
push
push
push
cmp
jbe
shlb
inc
and
fstps
test
mov
cmp
icebp
push
xor
arpl
lock
cmp
aad
sbb
lods
or
es
stos
mov
add
jl
xchg
inc
hlt
pop
push
ret
sbb
mov
stos
and
punpckhbw
push
pop
lds
cmpl
orb
dec
xlat
ficoml
dec
bound
push
movsb
aas
dec
es
inc
add
pop
jg
in
xchg
sbb
push
enter
scas
mov
into
push
sbb
add
movsl
add
mov
dec
shll
pop
cmp
call
cmp
dec
sti
sub
xchg
lret
sub
outsb
inc
cmc
sbb
mov
hlt
sub
fwait
dec
sbb
xor
adc
xchg
addb
mov
or
stos
jno
jnp
fcomps
mov
test
pusha
ficoml
xchg
fs
push
jg
cmpsl
inc
ds
and
test
jl
daa
mov
pop
orl
orb
xor
inc
icebp
shll
fidivrl
gs
out
mov
loope
imul
and
dec
scas
daa
pop
xchg
sbb
lahf
mov
and
shlb
stos
ficoms
sbb
inc
mov
sbb
pushf
or
in
fs
out
push
add
pop
sub
adc
mov
and
movsl
mov
enter
and
mov
popa
shlb
dec
xchg
or
adcb
lahf
mov
mov
shlb
push
sarl
test
sbb
es
xlat
xor
nop
pushf
sub
stc
out
adc
addr16
shlb
lods
inc
or
push
call
pushl
mov
push
xchg
movzbl
movl
lea
jnp
lahf
mov
lea
jbe
pusha
movl
pusha
pushl
popl
push
pushl
ret
push
pushf
lea
je
call
in
stos
xchg
pop
mov
xor
pop
addr16
in
and
lock
out
add
push
lahf
mov
mov
and
xor
mov
sahf
mov
js
mov
jae
gs
roll
es
mov
pushf
lea
jmp
cmc
or
call
lea
je
pusha
bt
bt
add
clc
call
mov
bsf
add
rcr
mov
movw
jmp
jmp
pushf
stc
pushl
popl
pusha
stc
pushf
call
arpl
addr16
xor
leave
push
das
aam
add
mov
sbb
cmp
fbld
scas
repnz
add
test
mov
mov
ds
fistps
jo
loope
lods
jnp
dec
fistpll
lods
cs
push
loopne
loop
jno
aad
adc
pop
pusha
sub
in
lret
jecxz
ljmp
pop
popf
mov
or
xor
outsb
popl
or
shll
mov
mov
pusha
jmp
inc
dec
out
in
pop
cmp
inc
mov
movsl
jb
int3
jge
cmpsl
inc
sub
pop
insb
mov
jg
xchg
out
sbb
out
fisubl
mov
adc
clc
sti
xor
sub
pop
ljmp
mov
or
mov
jno
mov
in
inc
dec
ja
fimull
out
sarl
movsl
pop
hlt
or
mov
cmc
xchg
xchg
mov
mov
push
daa
mov
or
pop
jg
sub
jp
sbb
pop
daa
mov
jmp
cltd
mov
push
and
cmp
decl
stc
cs
add
mov
jns
xchg
add
ss
loopne
mov
jne
les
pop
test
dec
mov
lret
cmp
adc
fldl
add
es
loop
xchg
mov
add
pop
test
rcll
mov
jb
inc
cld
xchg
jbe
ja
leave
jp
arpl
sbbb
mov
ljmp
scas
and
xchg
add
insb
adcb
cmp
fstpt
orl
mov
and
clc
cmp
jl
sub
ja
cmpsl
push
sbb
out
adc
mov
sbb
outsb
cmp
xchg
sub
ja
imul
push
in
outsl
push
fcoml
dec
inc
mov
pop
inc
mov
xchg
shrl
jae
jnp
xchg
or
fucomi
dec
lock
cltd
pop
mov
dec
loopne
dec
popa
or
icebp
push
das
jl
loopne
shlb
mov
movsb
pop
pop
test
cltd
dec
icebp
xchg
xor
and
dec
pop
test
es
cmp
call
fiadds
rclb
pop
sbb
into
outsl
cmp
mov
sbb
call
add
fildll
adc
add
adc
out
sbb
cmp
or
insl
cmp
addl
int3
ss
push
push
jl
fists
pop
sub
inc
dec
lret
je
frstor
jae
jle
cmp
and
and
xchg
enter
out
sahf
cmp
mov
push
pop
or
cltd
mov
xchg
pop
movsb
push
mov
fndisi(8087
ds
add
enter
sbb
mov
cmp
add
add
pushf
cmc
lret
loope
sbb
lahf
les
add
dec
mov
dec
scas
adc
mov
pop
add
insl
jg
mov
bound
scas
daa
cld
fstl
xchg
repnz
xlat
push
mov
dec
int3
sub
idivb
and
mov
scas
fisubs
push
add
mov
xchg
popa
bound
sub
mov
fwait
outsl
rorl
add
jb
negb
add
loopne
jne
mov
xchg
fmuls
stos
sahf
sbb
sahf
push
push
dec
mov
aaa
ret
mov
ss
icebp
imul
sbb
push
jno
push
dec
mov
ja
fimuls
js
out
sbb
mov
rcl
pop
shlb
fnsave
fwait
push
pusha
repnz
xchg
lret
test
arpl
xlat
sbb
cs
shlb
push
fs
call
call
cmp
call
not
jmp
push
lea
jb
bt
clc
pusha
cmp
jmp
push
push
adc
stos
pusha
push
and
mov
mov
fwait
xor
mov
mov
sbbb
jnp
add
loope
leave
into
pop
xor
inc
outsb
xchg
imul
mov
inc
loope
mov
mov
dec
hlt
jns
pop
jno
or
lcall
clc
push
bound
dec
push
jmp
adc
sbb
fidivl
je
shl
adc
es
fs
jae
stc
clc
pushf
call
fxch
push
fldenv
xor
jae
jl
into
pop
sbb
inc
mov
xchg
push
pop
loope
jne
mov
js
lock
out
mov
insb
add
xchg
mov
dec
jne
leave
xchg
inc
pushf
ret
fnstcw
adc
test
adc
cld
add
push
sub
mov
leave
fldenv
sbb
pusha
and
lods
dec
mov
in
icebp
les
cmp
sbb
xlat
les
loopne
dec
subl
xor
int3
inc
jg
inc
sbb
xchg
lret
xchg
ds
push
call
jge,pt
popa
aaa
mov
in
or
xchg
daa
popf
mov
mov
imulb
rcl
iret
xor
mov
pop
dec
pop
adc
cs
lret
mov
or
add
xlat
jg
dec
clc
or
das
aas
sti
pop
in
negl
push
sbb
jge
ds
jle
sub
test
scas
fs
or
pop
adc
adc
enter
fists
mov
dec
out
add
rorl
pop
scas
push
movsl
hlt
insl
inc
cmp
lods
sub
iret
jg
adc
push
mov
mov
stc
ret
sub
mov
mov
push
shll
in
fisttpll
fsubs
xor
adc
dec
std
popf
fiadds
inc
and
cmc
push
or
and
pushf
or
and
loope
dec
cmp
clc
xor
ret
call
jae
aaa
or
sub
enter
pop
xchg
lret
adc
lods
bt
xchg
pop
mov
cmp
jne
inc
cld
gs
imul
inc
ss
mov
adc
inc
mov
ret
test
in
add
int3
xor
xor
cmpsb
fildl
aas
cld
daa
es
cmp
mov
dec
and
xor
or
cmpsl
int3
mov
jl
pop
mov
inc
lods
sub
jnp
int
push
aas
mov
mov
int
mov
add
jnp
pushl
movsb
aas
jmp
ret
or
popa
mov
pop
xor
jnp
pop
push
xchg
cmp
push
mov
scas
adc
mov
pusha
sbb
stos
mov
add
dec
mov
mov
push
sbbl
out
jb
stc
out
outsl
inc
inc
and
fisubrs
pop
popa
push
jno
dec
pop
sub
xor
adc
or
mov
and
ret
shlb
jp
int
aam
mov
test
ret
movsb
pop
enter
sbb
negb
cmp
subl
mov
and
jp
ljmp
sbb
in
push
sbb
adc
icebp
pop
popa
sbb
mov
pop
popf
dec
mov
xchg
cs
cmp
ret
das
and
fldt
mov
cld
cmp
xor
mov
cs
or
dec
jno
sub
jle
pop
fistpll
adc
mov
dec
insb
jl
int
xchg
es
gs
or
mov
rorb
stos
rcrl
cltd
shl
negb
pop
cmpl
out
aam
scas
shlb
stos
sbb
bound
add
loopne
bound
xor
pop
je
or
mov
in
sti
and
loopne
cs
dec
iret
sarl
add
lods
and
mov
push
xchg
movsb
out
sbb
outsl
push
pop
adc
cmp
jl
pop
inc
in
mov
jecxz
dec
jg
popl
idivl
fnstcw
jle
and
cli
addr16
int
adc
add
xor
daa
stc
jmp
in
fidivrs
sub
dec
push
push
fcoms
and
int
into
shll
and
iret
es
mov
clc
and
cs
dec
jb
push
push
fstl
mov
cli
sub
int
ja
fwait
xor
insl
faddl
or
push
fbld
sbb
cmpsb
rorb
imul
lea
inc
xstore-rng
inc
outsl
fsub
lcall
mov
pushf
or
fstl
push
and
xor
or
sbb
push
push
arpl
ds
fdivl
inc
lcall
add
jae
xchg
push
sahf
shlb
mov
mov
jbe
aaa
mov
mov
jecxz
fdivrl
loopne
adc
and
in
fwait
pusha
mov
cs
fwait
mov
lea
jbe
dec
les
lcall
out
call
pop
pop
sar
popa
jl
inc
pushf
je
mov
mov
mov
loop
lds
adc
and
cmpb
xor
xchg
cmpsb
test
les
sahf
xlat
outsb
inc
fisubrl
mov
cmc
dec
sbb
inc
iret
pop
out
test
ljmp
cmp
jmp
xchg
add
outsl
fsubs
jnp
push
mov
mov
outsb
jmp
into
cmpsb
cmp
insl
out
in
and
movsb
jl
outsb
push
adc
mov
out
jmp
xacquire
std
aas
enter
adc
stos
sbb
movsb
mov
andb
sahf
jecxz
popa
shlb
dec
stos
lea
ja
cmc
mov
add
rcr
stc
or
rcl
mov
clc
push
cmp
call
push
pusha
lea
jne
bsr
clc
xor
mov
pushf
call
lea
ja
pusha
imul
push
mov
test
add
pushf
lea
jmp
pushf
pusha
call
pushf
sub
bt
pushf
bt
cmp
pushf
push
jmp
push
push
xchg
lea
mov
movl
bswap
movl
lea
lea
movb
jmp
test
pushf
add
clc
stc
call
pushf
call
decb
add
mov
aam
in
mov
lods
incb
lods
fadds
leave
jecxz
push
fwait
out
insl
mov
incl
pop
jecxz
shll
andl
mov
push
scas
sbb
call
in
mov
add
and
and
in
mov
bound
rcll
loop
mov
shr
gs
xor
jae
test
movsb
mov
addr16
out
mov
insb
shlb
jnp
mov
mov
mov
fs
mov
add
popf
inc
out
inc
dec
inc
mov
xchg
jle
xor
mov
call
mov
not
leave
ds
add
pop
mov
mov
push
jmp
mov
movsl
call
mov
shrl
mov
lcall
into
fdivrs
adc
sbb
imull
movsb
ss
cmp
shlb
jns
aad
sbb
mov
pop
popa
inc
sar
shlb
fldl
and
inc
mov
into
movsb
cwtl
loope
mov
pop
test
data16
out
fcmovnbe
mov
dec
into
aas
aas
pusha
cmc
mov
mov
xchg
les
mov
cli
mov
cltd
mov
sbb
xor
es
outsb
mov
fisubs
mov
add
and
clc
and
in
rcll
adcl
mov
add
cmp
pop
hlt
movsb
add
and
shll
test
out
test
in
cmc
add
add
data16
imul
mov
xchg
push
dec
inc
pop
xlat
cmc
jecxz
testb
xor
negl
out
add
movsl
dec
cmp
test
mov
cmp
mov
cld
les
mov
jns
push
lock
mov
xor
rorl
add
repz
repz
push
push
mov
les
cmpl
ret
cwtl
sbbl
in
jne
and
cli
or
mov
xchg
call
fdivr
inc
add
add
adc
das
xorb
mov
cld
cld
mov
jge
les
adc
xor
test
jmp
add
mov
ret
jb
pop
cmp
ret
sub
mov
mov
mov
and
mov
add
shr
enter
xor
movsb
testb
mov
xchg
mov
sbb
cmp
mov
pop
loopne
or
lahf
xchg
pop
push
mov
icebp
inc
repz
pop
call
test
mov
xchg
cmp
dec
test
scas
test
fdivs
popa
inc
sbb
xchg
std
sub
xor
add
jne
repnz
je
add
popa
add
add
jb
icebp
xchg
bound
mov
add
xchg
mov
cmp
jmp
test
jae
inc
mov
push
or
pand
lcall
out
arpl
sahf
or
loop
aaa
jle
loop
arpl
sarl
and
xchg
xchg
in
insb
mov
cli
or
enter
mov
pushf
cmp
push
fwait
or
mov
out
mov
or
cmp
mov
mov
mov
mov
adc
inc
mov
hlt
fsubs
mov
cmp
rol
jle
jg
repz
inc
test
sub
add
loopne
mov
mov
iret
loope
xor
shll
testl
cmp
rol
mov
ret
dec
push
cld
dec
push
sbb
fisttps
lret
mov
pushf
dec
jmp
lds
loope
lcall
leave
pop
pop
je
in
mov
int
mov
les
in
mov
out
cmp
add
shrl
mov
loopne
sbb
jle
mov
ss
popf
jle
sarl
cmpl
cmpsb
xor
sbb
sbb
mov
push
dec
lds
arpl
cwtl
mov
mov
in
ret
sbb
and
mov
dec
out
jne
subl
subb
jmp
lcall
and
cmc
and
cmp
pop
pop
push
jnp
mulb
mov
aam
cmpw
test
cmc
jmp
inc
ret
les
test
out
clc
int
push
js
loopne
addl
arpl
clc
fsub
or
mov
cmp
pusha
out
dec
add
cs
jbe
jae
mov
shlb
xor
mov
xor
pop
aam
daa
lea
add
cmpb
lods
add
cmpsl
nop
mov
and
xchg
mov
jle
outsb
xor
xor
fmul
outsb
in
mov
mov
arpl
jg
add
rolb
mov
ficompl
and
call
mov
out
loop
add
xchg
cmpsl
mov
cmp
inc
pop
je
mov
inc
mov
jae
jmp
xchg
fiadds
les
pusha
in
into
cwtl
add
mov
in
jmp
les
shll
xor
cld
jmp
movsb
mov
dec
jae
xor
sbb
repz
lcall
or
push
mov
add
movsb
faddp
cmpb
sbbl
inc
stc
cmp
cwtl
das
cmpsb
jns
loopne
pop
push
add
jbe
jb
xchg
xorb
ja
test
lahf
sbb
fstpt
xchg
test
outsl
push
dec
add
mov
pop
mov
mov
sbb
add
sub
rcll
fsts
push
inc
sbb
xor
stos
cmp
push
push
ljmp
nop
add
and
sbb
into
or
xor
scas
out
out
bound
shlb
mov
movsl
pop
imul
shlb
imul
lret
mov
mov
mov
pusha
insb
fucomp
and
add
and
stc
mov
push
in
push
adc
or
ret
into
inc
add
outsb
mov
inc
jo
mov
mov
pop
enter
dec
inc
insl
shlb
jecxz
xor
arpl
mov
stc
add
cmp
cmpb
scas
pushf
add
cwtl
stc
cmp
jae
inc
inc
jo
mov
fcoms
mov
pop
outsl
adc
sahf
outsb
std
out
shl
fcmovnu
dec
shr
pop
xor
cwtl
add
sbb
fucomp
aam
pusha
xor
lods
leave
mov
mov
or
pushf
test
push
pushf
jns
cmp
movsl
add
aad
push
dec
lcall
adc
jle,pn
rcrl
cmpsb
xor
pop
lea
sar
push
adc
push
mov
mov
mov
mov
je
stc
arpl
mov
xor
mov
jae
js
sub
outsb
push
sbb
mov
jmp
mov
imul
mov
shl
ret
xchg
out
fs
push
mov
int3
clc
xor
out
mov
test
or
lret
push
enter
sahf
mov
sti
fnsave
dec
push
or
mov
mov
aam
sti
shr
scas
incl
shlb
jge
jmp
jne
lods
add
inc
ds
fidivs
pusha
pop
xchg
mov
ret
pop
dec
dec
inc
sar
inc
mov
fucomip
pop
cli
xchg
adc
stos
mov
je
mov
into
xor
cmp
jp
push
mov
dec
jecxz
sbb
fwait
mov
and
cmp
mov
mov
mov
adc
xchg
mov
jge
jg
jmp
adc
add
jb
jle
mov
mov
xorb
hlt
mov
push
enter
outsb
sti
movsb
add
lcall
shl
mov
mov
rcrl
add
mov
rcrl
imul
outsb
fbstp
push
lock
lds
jne
dec
js
out
pop
ljmp
dec
loopne
cli
rcr
rol
cmpb
in
loope
jp
mov
iret
fldcw
rol
mov
pop
xchg
and
and
dec
popf
add
push
push
cmpb
inc
fsubrl
lea
std
cli
add
lods
xchg
add
inc
notb
cmp
mov
stos
dec
adcl
scas
shlb
ret
popf
ja
mov
enter
in
jnp
push
mov
cmp
add
pop
mov
pop
pop
jle
push
add
add
ds
cmp
push
mov
sbb
mov
mov
pop
or
std
sar
add
js
add
mov
rolb
dec
imul
sti
and
adc
sbb
pop
outsb
pop
or
mov
push
and
scas
push
mov
outsb
pop
adc
add
mov
mov
sub
mov
repz
cmp
out
test
movsb
les
fs
cmpsb
xor
xor
iret
es
ret
out
xor
cmp
iret
lahf
fidivl
in
add
jge
scas
imul
cmp
jecxz
ret
or
cmc
aaa
jmp
add
outsb
and
mov
cmp
mov
fidivs
inc
mov
mov
inc
push
icebp
push
lret
dec
cs
add
mov
rol
jae
pop
lcall
je
add
inc
aaa
and
mov
mov
adc
lods
push
mov
clc
dec
rolb
push
or
aam
mov
fisttpl
jge
lds
mov
mov
aam
daa
inc
dec
ja
movsb
imulb
cld
adc
in
add
and
in
pop
hlt
jecxz
in
inc
inc
adcb
xor
add
cmp
mov
push
mov
repnz
orl
mov
and
and
add
xchg
xchg
xchg
js
mov
lods
jo
in
mov
cmpsl
stos
jne
cltd
in
clc
add
std
ret
test
iret
and
cmpsb
lods
xchg
pushf
in
jg
mov
inc
dec
insb
pop
mov
fdivs
fcompl
xchg
mov
mov
rorb
imull
mov
rcll
or
jb
std
push
lock
push
rcll
mov
mov
pop
mov
cmp
in
fstps
cmp
fcmovnb
incl
decb
lcall
test
je
mov
jg
dec
or
mov
add
lods
into
decl
pushl
in
divb
jl
ss
ret
cmpsb
in
mov
push
pop
ret
mov
iret
andb
adc
mov
in
insl
and
xor
mov
std
mov
xchg
add
mulb
xchg
fadd
inc
aam
imul
mov
mov
add
les
mov
add
cmpb
nop
stos
ret
pusha
mov
mov
sbb
sahf
sbb
pop
mov
inc
adc
mov
mov
jg
jb
xchg
push
pop
cmpsb
lods
mov
mov
cs
mov
adc
cmp
fwait
push
pop
push
rcr
rcrb
stos
ss
popa
clc
mov
and
mov
repz
stos
push
pop
insb
enter
cld
test
jbe
dec
sub
lahf
jns
scas
dec
mov
push
rcr
add
mov
js
push
outsl
push
aas
sar
rorl
push
adc
ret
hlt
in
add
sbb
and
andl
inc
sar
dec
cmp
in
inc
mov
add
push
aas
cmc
fs
lds
test
mov
dec
mov
and
dec
data16
jbe
mov
mov
pop
cmp
test
and
push
add
fiadds
mov
sbb
mov
fcmovnb
sbb
fwait
and
jne
sbb
fisubl
mov
test
jle,pt
mov
pop
add
in
test
pop
andl
test
add
fiadds
int3
add
jno
ds
addb
cmp
sub
aas
pop
mov
fmul
inc
sub
jecxz
loop
cmp
add
cmpl
mov
sbb
cmp
pop
mov
cmc
mov
loop
and
jb
mov
test
inc
popf
mov
lret
add
in
pop
aas
rcr
cmp
mov
add
cmp
scas
cmp
jnp
add
lret
inc
pop
jecxz
add
subb
dec
mov
jne
add
mov
pop
pop
and
ljmp
sti
inc
loope
mov
jecxz
mov
xchg
aas
pushf
rcr
shl
jle
add
sarb
sbbb
bound
les
pop
fisubl
fildll
add
pushf
cmpb
and
rcl
shl
scas
inc
xor
in
ret
mov
mov
xchg
add
mov
outsl
add
jge
mov
and
add
mov
outsb
pop
loop
jge
jle
xor
add
jp
idivl
arpl
arpl
cmp
and
out
add
pushf
inc
mov
jecxz
sbb
roll
lahf
inc
jo
iret
inc
mov
xor
mov
out
outsb
add
orb
les
js
pop
sub
add
fs
movsb
fadds
idivl
pop
out
and
mov
add
add
mov
je
mov
pop
mov
inc
jae
rolb
cli
popf
cmp
addb
lret
add
fsub
pop
xor
fwait
loop
cmp
in
jmp
adc
pop
fs
std
mov
and
icebp
mov
dec
add
mov
out
js
xor
jmp
fdiv
sarl
jbe
mov
or
insb
mov
xor
stos
dec
hlt
outsb
movsb
mov
jo
test
mov
pop
jl
test
cwtl
lods
popf
test
rorl
movsb
mov
jl
roll
mov
cmpsl
out
inc
sbb
push
mov
les
sbb
ret
pop
ja
xchg
movsb
inc
mov
test
and
out
mov
rol
scas
loop
test
jne
push
cmpsb
orl
jmp
inc
ret
aas
insb
les
aam
dec
test
cs
pop
not
and
out
andl
mov
jmp
iret
movsb
inc
bnd
mov
xchg
les
xlat
xor
mov
sub
dec
mov
jnp
lahf
add
mov
out
lahf
sarb
arpl
dec
ret
push
add
xor
fdivrl
inc
push
loop
andb
rolb
shll
arpl
test
add
loopne
sahf
and
jbe
les
cmp
fdivs
mov
mov
push
sbbl
inc
sti
je
add
les
rorb
ja
xchg
mov
fiaddl
pop
les
fcmovu
jl
rol
push
rclb
and
out
shlb
or
loope
pop
add
pusha
jecxz
loop
rolb
mov
jge
fs
mov
inc
in
je
shll
stc
inc
xchg
out
jge
aas
std
scas
inc
jmp
add
lahf
and
bound
jb
jecxz
cmp
pusha
mov
filds
push
inc
loope
les
rolb
ret
add
out
cmp
mov
add
fidivs
xorb
fs
in
jmp
shll
ret
add
cmp
test
loop
frstor
and
mov
popa
rolb
mov
rolb
push
imulb
jns
pop
jl
and
out
mov
xor
loopne
scas
inc
repz
loop
push
clc
lret
movsb
pop
mov
mov
pop
out
leave
int3
cmp
mov
push
pmaxsw
dec
xchg
test
xlat
cmp
pop
jl
pop
popa
ficomps
cmp
fs
mov
gs
mov
outsb
out
add
cmp
pop
sbb
sub
in
lods
mov
aad
mov
pop
xor
movl
push
sti
pop
movsl
push
xchg
xchg
mov
cmc
lock
out
push
sub
xor
mov
clc
mov
add
mov
push
andl
or
sub
mov
enter
mov
push
inc
jp
scas
aaa
icebp
cmp
loope
pop
loope
mov
enter
cmc
sub
mov
add
clc
test
sbbb
outsb
push
mov
dec
pop
jp
mov
sbb
nop
ret
lcall
test
hlt
ret
shrl
arpl
lods
push
mov
push
xlat
mov
cli
aas
inc
scas
ret
in
add
sbb
sub
std
cmp
ss
adc
fs
mov
lret
add
clc
lea
subb
shll
shll
xor
cmc
inc
and
neg
dec
sub
or
fistpl
sti
cmp
loopne
add
lcall
fcoml
inc
mov
inc
inc
fisubs
in
jo
sub
hlt
xor
and
jae
mov
add
adc
mov
outsb
shlb
push
xchg
push
jo
movsb
pop
push
insb
xor
xor
aaa
mov
movsb
pop
cli
ret
mov
xorb
mov
sbb
or
shr
shlb
mov
pop
pop
faddp
daa
sub
xor
mov
lret
pop
cmp
ret
addb
out
cmpsb
push
arpl
cmpsb
ss
jmp
stos
dec
dec
mov
adc
jb
aam
jp
inc
ret
call
sbb
cmpsl
mov
les
xchg
fmull
and
dec
inc
mov
add
cmp
lea
cmc
int3
mov
repz
pushl
int
arpl
popf
inc
push
pop
xchg
bswap
insb
add
jb
adc
xor
shlb
js
cmpsl
mov
dec
dec
sbb
out
xor
mov
add
repnz
inc
es
mov
aas
ja
les
push
jo
push
mov
lock
pop
add
fdivp
loop
ret
insb
mov
dec
xor
in
cmp
mov
lods
mov
into
mov
pop
mov
mov
pop
in
testb
cmp
jecxz
push
in
outsb
sub
inc
ret
ds
jecxz
rcrb
dec
jne
pop
outsb
fucomp
lds
arpl
ss
call
test
ds
ret
pop
lahf
inc
xrelease
push
mulb
sub
loopne
movsl
ja
lret
fnsave
enter
and
inc
and
add
cli
rcrl
fidivl
sbb
xor
mov
shll
jge
test
bound
push
fsubl
mov
mov
pop
inc
dec
divl
data16
adc
xor
cld
lds
add
rcrl
xor
fmulp
jae
dec
mov
cli
int3
mov
out
dec
sbb
je
shl
fldt
test
jo
push
lea
inc
cmp
cli
mov
mov
push
pop
mov
cmp
test
shl
push
mov
cmc
lret
or
loop
dec
inc
mull
pop
jecxz
add
inc
lds
lods
add
and
fnstenv
sti
lret
fsts
lret
lret
push
std
xchg
mov
fistpl
and
lcall
aaa
stc
mov
fdivl
pop
sti
mov
lret
cmp
rcrl
sub
sbb
push
push
add
out
jns
xchg
fbld
lods
xchg
jl
or
pop
aaa
dec
in
sub
mov
lods
rcrb
bound
pop
inc
sub
push
fdivrs
push
outsb
fmul
and
sti
sbb
int3
sahf
sbb
or
push
add
dec
dec
sahf
push
jl
jae
add
nop
mov
stc
rcrb
cs
subb
fs
cmp
jae
cmp
aaa
cmpsl
xchg
mov
adc
lods
mov
cmp
lock
sbb
add
lcall
daa
sti
xor
mov
fs
or
imul
cmc
and
lcall
jecxz
and
add
test
addb
idivb
xchg
outsb
sarl
lret
xchg
sbb
mov
mov
xor
or
rcl
sahf
jo
hlt
push
jns
mov
inc
mov
jle
inc
pop
sbb
jb
enter
mov
into
xlat
cwtl
lods
enter
pop
sar
xor
mov
test
stos
and
cmp
pop
mov
pop
cmpsb
jge
lock
cmp
push
pushf
cmpsb
ljmp
int3
cld
mov
mov
mov
ret
inc
imul
add
push
scas
push
and
dec
add
push
and
mov
repnz
call
lret
cmp
pushf
add
push
mov
pop
xor
inc
ret
imul
mov
cmp
pop
inc
stos
mov
mov
mov
jmp
push
shrl
fstpt
mov
or
aaa
cld
pop
ret
rcr
rcl
mov
adc
push
cmp
shl
cld
roll
je
mov
lods
movsb
mov
test
shlb
add
cmp
inc
adcl
jno
cwtl
and
mov
data16
adc
hlt
sti
lds
enter
inc
push
mov
int3
mov
mov
test
enter
dec
into
fwait
or
fbstp
sub
push
test
lods
pop
int
mov
dec
lods
cltd
cmpsl
int3
aam
jl
pop
xlat
sub
dec
movsb
ds
inc
aad
push
incb
sarl
insb
xchg
imul
shl
loope
popf
pop
mov
xchg
dec
mov
in
mov
jle
inc
mov
xchg
aam
movsb
pop
pop
cmpl
mov
ror
shl
pushf
jns
and
dec
dec
dec
adc
aam
push
test
and
loop
cmpsl
bound
xchg
jmp
push
jp
imul
aad
push
push
in
inc
hlt
out
add
inc
pop
sub
mov
and
pop
mov
push
cmpsl
pop
les
mov
mov
repz
jg
icebp
add
lea
mov
dec
pop
mov
mov
fcmovne
push
aad
cmp
fs
fnstsw
ret
ret
scas
stos
mov
dec
add
test
jmp
mov
inc
inc
mov
cmp
cmp
pop
jnp
pop
outsb
rclb
jecxz
mov
lahf
cmp
roll
push
jg
mov
inc
mov
mov
test
mov
cli
int
sahf
pop
push
add
inc
arpl
stos
xchg
hlt
jg
icebp
test
pushf
clc
sbb
ja
in
mov
or
cld
sarb
dec
xor
push
addl
call
loopne
es
xor
sub
jnp
gs
push
inc
dec
ds
ret
fmuls
mov
push
hlt
xchg
inc
mov
scas
fdivrl
mov
mov
xlat
enter
mov
add
pop
out
fldt
jne
sarl
shll
add
mov
enter
push
mov
mov
jmp
xchg
dec
cmpsb
aas
cli
ret
arpl
dec
push
xchg
or
xchg
xorl
clc
or
testb
or
sarl
mov
addb
aam
cmc
xchg
ret
jnp
mov
lds
mov
outsb
cmp
lahf
add
outsl
ds
shrl
mov
scas
test
sub
dec
mov
dec
addr16
push
jb
jae
inc
aam
dec
std
add
inc
stc
fmul
mov
mov
xchg
shrb
xor
and
mov
jg
cwtl
lock
jnp
out
dec
pop
push
push
repz
fcompl
mov
dec
add
sarl
cmp
iret
lock
xor
pop
loope
pop
push
and
mov
pop
pop
lock
mov
leave
rcl
mov
and
dec
in
addb
cmp
cmpsl
sahf
stos
adc
and
jns
add
arpl
pop
add
loopne
push
stos
inc
rcrl
loop
iret
xchg
cmpsb
or
cs
bound
xor
repz
lret
xor
outsb
add
xchg
enter
mov
je
fdivs
jmp
mov
pop
xor
sahf
and
push
xor
inc
add
xor
dec
jb
test
xchg
rcl
dec
sub
inc
sub
dec
mov
imul
lret
sub
jo
add
mov
jns
fdiv
lods
pop
loope
xchg
lret
inc
les
fwait
int
ja
xor
test
push
mov
jae
int3
jb
cmc
jecxz
cli
inc
addr16
subl
dec
into
and
xchg
out
pop
jo
in
lahf
add
cmc
cmp
popa
jnp
pop
idivl
pop
jb
fsub
and
lds
dec
fnstenv
adc
mov
add
mov
sahf
int
xchg
ja
int
scas
xchg
je
jg
loop
sbb
xchg
sbb
mov
add
dec
in
add
push
rol
ss
mov
inc
pop
cli
outsl
popl
mov
pop
pop
sbb
rclb
sbb
fsubrl
fcmovb
cmpsb
sub
std
ret
lret
mov
das
push
mov
inc
or
push
pop
sbbb
movsb
mov
push
js
clc
ret
inc
xor
orb
pcmpgtw
leave
mov
jne
xchg
gs
jl
insl
shll
sbb
pushf
adc
sub
mov
in
les
out
shl
cmp
and
out
dec
add
mov
jne
out
cmp
negb
shrb
mov
out
xorb
pop
push
repnz
cmp
inc
jecxz
inc
test
add
pop
shr
leave
outsl
lcall
add
test
push
outsb
out
jecxz
lret
sti
xchg
mov
arpl
pop
xorl
mov
mov
mov
push
addr16
jecxz
loope
cmp
insl
add
push
mov
stc
mov
xchg
push
or
ds
push
hlt
jmp
mov
ss
mov
add
shlb
rclb
cmp
movl
outsb
push
loop
cmp
jne
sub
iret
fildl
sub
inc
js
les
mov
sbb
push
into
fldt
mov
pop
xorl
pop
aas
ficompl
and
lahf
and
leave
push
jo
pop
shl
cmp
ret
xlat
test
fnstenv
sbb
int3
mov
add
mov
lds
sbb
mov
in
mov
inc
add
mov
dec
xchg
cmp
ficomps
aaa
and
stc
dec
cmpsl
mov
or
int
pop
pop
or
movsb
mov
push
icebp
test
popf
lahf
ljmp
fildll
das
push
addr16
mov
push
aam
lahf
adcl
add
popl
inc
out
pop
push
ret
cmp
cwtl
in
xor
je
pop
or
add
aam
cmp
loope
cmp
fwait
xchg
jnp
fstpt
mov
sbb
mov
or
lods
icebp
sub
fimuls
ja
inc
jne
and
lock
imul
aas
test
sbb
xor
aad
imul
test
and
cmp
aam
loop
mov
lods
adc
fcmovnu
xchg
shr
mov
xor
fists
and
lret
idivl
repz
adc
jg
jmp
popf
mov
sbb
inc
cld
jnp
cmp
test
xchg
shrb
xchg
jl
cmp
cli
ficoms
dec
stos
xchg
call
xor
add
shl
push
enter
lcallw
inc
call
enter
daa
test
popf
test
mov
mov
sub
jo
mov
loop
mov
inc
lret
inc
out
push
ficoml
sahf
dec
mov
subl
cmp
dec
jne
jne
mov
push
lock
aaa
sbb
mov
mov
and
lahf
mov
add
bound
adcl
xchg
mov
inc
mov
inc
jecxz
inc
fmul
cmp
insb
sbb
jns
mov
cmpsb
ret
sub
jl
leave
pop
push
fnstsw
jmp
stc
jmp
mov
sbb
aad
ret
cmp
mov
sahf
pop
jo
mov
or
int3
jg
jnp
rorl
mov
pop
mov
in
loopne
lahf
out
cmc
xchg
add
sbb
popf
cs
hlt
jb
std
pushf
add
mov
into
or
fwait
clc
jmp
adc
jge
das
mov
fstpl
test
aad
stos
push
filds
cmp
fs
rcrb
loopne
lods
jno
out
sub
scas
loop
add
mov
gs
sti
mov
add
push
mov
leave
insl
sbbl
popf
mov
push
scas
or
dec
mov
xor
rep
in
mov
mov
js
push
int
fcmovnu
inc
les
shrb
add
loope
flds
inc
push
mov
mov
jns
std
xchg
inc
mov
and
ret
sub
xchg
sub
jnp
inc
inc
add
movsl
in
sbb
push
mov
out
cld
sub
dec
xchg
bound
cmpsl
mov
test
ficomps
repz
add
cmpsb
xor
or
pop
fisubrs
std
arpl
add
mov
stos
loop
cmp
stc
mov
repz
jp
mov
jnp
test
call
lcall
mov
cli
jl
ja
test
mov
xlat
faddl
out
xchg
in
xorl
add
data16
notb
aad
cmc
adc
mov
xchg
add
mov
pop
mov
insl
repnz
rcrl
adc
mov
scas
repnz
mov
sarl
mov
lds
sti
dec
out
pop
mov
or
popa
clc
dec
orb
hlt
mov
cmp
movsb
test
insb
cmpsb
sbb
jecxz
int
add
and
xchg
cmp
ja
and
test
scas
fsubrs
pop
int
out
xorb
faddp
pop
push
jb
sub
jbe
and
jg
js
mov
or
cmp
or
ret
inc
aas
mov
jae
add
lahf
fcomps
in
lock
mov
js
lret
jge
stos
fs
in
mov
pop
or
call
fidivs
arpl
ja
jb
pop
adc
mov
iret
jcxz
lcall
mov
insl
test
xchg
test
cli
fs
stos
outsl
cmpsb
ret
mov
pop
scas
xchg
sarl
aaa
test
cmp
addb
push
xor
and
mov
mov
jle
and
cmpl
sbb
js
movsb
mov
xor
mov
in
mov
mov
xor
cmp
ffreep
cmc
mov
fildl
mov
add
movsb
cmpb
shlb
stos
or
sbb
and
cmpsb
add
inc
test
nop
dec
cwtl
in
and
jmp
xor
inc
sbb
mov
mov
xchg
mov
imull
dec
lahf
sbb
inc
xor
shr
fiadds
enter
imul
mov
fidivl
movb
dec
push
pop
insb
xorb
mov
int
mov
adcl
sbbl
jb
pusha
ret
dec
nop
adc
cmp
cld
sbb
fsub
je
stc
add
mov
outsb
ret
out
sub
insl
xor
jl
mov
cmp
push
test
push
lods
std
aad
and
iret
adc
push
and
xor
lock
jecxz
jae
sub
xor
out
inc
add
xchg
insb
push
xchg
imul
cmp
pop
cwtl
mov
cld
test
pop
and
cmp
test
add
dec
outsb
pop
mov
sbb
sahf
fs
jge
rcrl
fwait
pusha
or
xchg
jo
jle
xor
jb
popa
pop
and
les
shll
adc
jmp
cmp
loope
dec
pushf
ljmp
adc
xor
repnz
add
jecxz
rorb
out
insb
shl
cmp
stc
mov
xchg
lds
xor
adc
mov
lret
cmp
jle
ret
cmp
dec
jl
push
minps
sbb
sti
jmp
in
adc
adc
xlat
sbb
mov
mov
or
ret
xor
ss
ret
in
pop
mov
mov
loope
adc
push
in
repnz
loop
and
mov
lahf
repnz
dec
adc
subb
pusha
dec
ljmp
mov
xchg
stos
adc
add
xchg
mov
or
mov
mov
cmp
dec
pop
out
clc
jo
cmpsl
fwait
shrb
push
push
add
cmpsb
mov
xchg
cmp
mov
mov
adc
add
dec
mov
xor
inc
gs
or
loope
mov
and
outsl
fimull
push
sbb
mov
or
lock
adc
insl
icebp
or
jo
or
dec
xchg
mov
jns
ljmp
jle
jo
push
hlt
pop
fcoms
sub
loop
lret
fcoms
adc
imul
fisubs
loop
aad
mov
dec
lods
adc
test
decl
add
movsl
stos
xchg
fdivrl
cmc
adc
in
clc
out
cwtl
cmpsb
stc
shll
mov
icebp
mov
fimull
cmp
test
dec
arpl
dec
les
xor
jecxz
dec
pusha
fnstenv
imul
jmp
push
dec
clc
popf
mov
cmc
mov
xchg
jge
mov
or
sub
inc
insb
mov
mov
aas
sub
stos
lds
cmp
xchg
addl
mov
dec
inc
call
sti
cmpsb
shlb
dec
in
clc
sub
mov
arpl
outsl
outsb
movsl
stos
sbb
mov
jno
jmp
mov
mov
je
outsb
jnp
inc
sub
adc
pop
movsb
test
xor
rorl
out
outsb
std
out
mov
sbb
sbb
push
push
sarl
jns
rcll
nop
dec
xor
push
sarl
cmp
stos
js
fdivs
mov
and
cmp
xor
cmp
xchg
xchg
cmpsl
push
call
jbe
das
or
shl
xchg
in
adc
inc
loope
sub
lods
xor
cmp
test
cmpsb
nop
adc
xchg
and
roll
fwait
jge
ss
mov
jno
or
fsubs
int3
fmull
rclb
and
cmp
cli
xor
scas
or
jp
lret
lret
lahf
jl,pt
into
adc
mov
fdivl
push
cmp
mov
jl
add
inc
sub
xchg
mov
pushl
int
mov
lods
pmaxsw
inc
add
fwait
mov
mov
enter
sahf
data16
pusha
out
js
ret
stc
lret
jbe
negl
gs
into
addb
cwtl
dec
mov
or
jg
mov
fstpt
sub
mov
clc
loop
in
push
push
xchg
ret
dec
insl
mov
out
js
shll
jmp
int
andl
adc
pop
loop
add
push
fwait
mov
pushf
mov
int
adc
mov
push
mov
fucomp
and
imul
adc
hlt
roll
ret
cmp
in
ds
out
push
inc
ljmp
mov
aas
out
jge
out
ficoms
and
out
outsb
xor
push
ja
and
and
call
sub
fsubl
mov
mov
and
mov
push
dec
add
fidivrs
in
mov
stos
jp
adc
sbb
jo
jns
sbb
mov
loop
pop
test
pushf
outsl
loop
loop
hlt
xchg
push
jns
fwait
daa
mov
jae
fidivl
sbb
stos
xchg
shlb
mov
cld
adc
push
pop
ss
clc
aad
cmp
xchg
pop
sub
push
add
shl
sti
aad
daa
add
cmc
loope
adc
cld
cmc
dec
push
sbbb
xlat
aaa
repnz
fists
sub
mov
mov
sub
xchg
mov
in
in
cmp
in
add
lods
mov
inc
adc
clc
sub
mov
into
jbe
xor
jbe
popa
clc
and
mov
jb
fucom
fsubrl
cld
push
clc
into
xor
pop
rcr
jl
sub
call
popf
pop
sarl
pop
push
add
sti
pop
je
add
test
mov
andb
sub
neg
mov
mov
dec
imul
and
mov
sbb
mov
mov
mov
ss
mov
insb
push
addl
lock
bound
dec
mov
xchg
cmp
ret
dec
mov
repnz
notl
mov
dec
in
mov
jg
out
and
cmp
xchg
fsubrl
lahf
mov
pop
push
es
mov
jo
mov
push
mov
outsl
test
aad
dec
icebp
aas
inc
push
je
mov
or
push
fdiv
and
sti
pushf
or
mov
gs
aam
stos
jnp
xchg
mov
adc
xchg
xor
repnz
or
inc
repnz
pop
push
test
fnstsw
ret
repnz
xor
inc
inc
xor
cmp
adc
cmpsb
imul
and
push
out
mov
inc
mov
mov
jecxz
pop
sar
adc
mov
lret
xor
mov
xchg
xlat
add
jne
mov
mov
loope
sub
cmp
shll
xchg
jb
dec
imul
in
incb
test
mov
inc
mov
arpl
push
inc
push
shlb
and
and
sub
push
cmpsb
add
mov
mov
iret
fmull
and
movsw
mov
pop
loop
dec
cmp
into
loop
mov
test
sbb
push
aam
xchg
cltd
jnp
stos
mov
add
hlt
idivb
add
xor
dec
pop
xchg
or
lret
lods
pop
or
and
jmp
pop
loope
cld
je
shll
mov
popf
and
add
or
inc
pusha
cmpsb
dec
fnstcw
jge
push
cmp
mov
xchg
adc
ret
cmp
gs
bound
je
and
outsl
and
mov
pop
mov
inc
pop
mov
mov
add
fsts
mov
ret
add
xchg
icebp
mov
gs
jle
pushl
mov
daa
inc
pop
mov
inc
movb
cwtl
jg
sarl
inc
mov
out
pop
outsb
cli
in
xor
ljmp
adc
nop
insb
test
adc
dec
add
fcoml
sti
dec
pop
push
and
add
mov
push
idiv
cmp
push
fucom
fcoml
push
test
psadbw
adc
in
jg
pop
cmp
and
sti
mov
dec
adc
mov
push
test
mov
cs
out
xor
lcall
jp
lret
adc
pusha
es
pushf
pcmpeqd
mov
or
jne
adc
inc
ljmp
add
sub
icebp
mov
pop
push
adc
lea
push
xchg
movsb
push
and
cmp
daa
fisttpl
sar
incb
xor
cmp
dec
fildl
movsb
fs
outsb
cmc
inc
hlt
into
scas
pop
jp
bound
fwait
sub
movsb
dec
ret
bound
mov
mov
popf
test
scas
sahf
dec
adc
sub
jno
hlt
adc
xchg
lcall
push
loope
mov
dec
je
js
mov
add
push
push
das
mov
int3
inc
pop
cmp
fimull
mov
mov
aas
out
mov
lods
mov
add
leave
enter
push
mov
or
cmc
mov
int3
jb
cltd
sbb
cmpsb
in
cmp
cmpb
addr16
add
pusha
hlt
cmp
lret
mov
aad
adc
jne
clc
push
mov
push
call
cmp
cmpsl
fisttpl
inc
or
add
mov
out
outsl
cmp
pop
cwtl
lcall
jo
fisubs
sbb
hlt
add
icebp
pop
pop
mov
mov
hlt
sahf
rcrl
or
clc
jnp
xchg
jns
fistps
test
repz
dec
mov
mov
mov
jne
fucomi
sahf
das
cmpsl
or
aam
dec
jbe
notb
inc
lods
les
stc
test
dec
movsl
dec
rorl
mov
test
pop
mov
mov
insb
mov
xchg
into
mov
pop
pushl
in
jae
push
lods
shlb
les
or
das
ror
mov
mov
inc
xchg
push
pop
imull
addl
push
mov
ja
fisubrs
xor
xchg
xchg
in
mov
adc
jmp
jnp
into
pop
dec
pop
dec
icebp
test
bound
jb
aam
fcoms
mov
add
stos
popa
jbe
add
rorl
or
movsl
mov
pop
movsb
sbb
inc
in
or
sub
enter
mov
loopne
jne
ret
les
push
in
pop
xchg
test
bound
test
les
push
filds
movsl
add
lds
loop
push
arpl
mov
lahf
inc
add
and
sbb
and
xchg
fs
jae
mov
lcall
icebp
loopne
mov
aam
test
add
cld
add
fs
rolb
loopne
jae
and
add
add
sti
inc
test
test
sarl
in
xchg
cmp
cld
add
popf
mov
arpl
std
in
cmpsl
push
test
mov
add
jne
sarl
jae
in
popa
int
jl
cmp
enter
mov
inc
add
mov
loop
add
jo
add
xor
or
insb
adcl
dec
xor
mov
bound
mov
push
jl
in
ret
pop
andb
movsb
cli
add
inc
ret
sbb
adc
fistpll
std
flds
add
aaa
xor
mov
test
test
inc
call
cmpsl
push
mov
in
add
ret
jl
aam
pop
repnz
loopne
and
sti
push
arpl
lds
mov
dec
xchg
mull
bound
cmc
repz
call
mov
icebp
and
loopne
inc
jl
jmp
aam
lret
and
cli
jge
pop
fcmovu
loope
fadds
and
push
sarl
push
les
mov
aas
ret
dec
inc
loopne
outsb
rcr
jl
jle
inc
roll
inc
add
lahf
and
pusha
mov
sbbb
mov
loopne
mov
push
lds
mov
leave
loopne
andb
and
repnz
ret
cmp
mov
inc
mov
adc
das
cmc
int3
clc
xor
out
in
sbb
and
lret
mov
jle
push
mov
and
mov
dec
cmp
aad
arpl
mov
jp
in
mov
xchg
push
clc
fwait
sub
sar
dec
icebp
push
mov
mov
inc
sbb
lods
xor
jo
dec
rol
pusha
jo
lods
push
jbe
fisubl
mov
add
rcr
int
xchg
sarb
jb
movsb
cmpb
jmp
test
add
mov
ret
dec
repz
inc
or
dec
fstpt
sbb
push
fmuls
push
add
lea
add
mov
inc
in
lock
dec
stc
data16
test
mov
cmpsl
les
mov
xorb
fstpt
xor
cmp
inc
jge
or
and
and
daa
add
mov
pushf
add
jp
lds
mov
sub
sub
fsubrs
mov
mov
stos
loop
pop
cs
push
adc
and
in
shrl
mov
lret
fcom
pop
ljmp
or
bswap
je
jmp
sbb
and
jb
xchg
and
movsb
dec
rcr
popf
sahf
mov
mov
scas
rolb
insl
fmuls
sub
ror
in
mov
mov
sarl
loop
inc
push
mov
fstpt
mov
orb
push
push
call
cwtl
mov
int3
outsb
cmp
push
sub
cmp
push
xchg
jo
outsb
dec
mov
lahf
movsb
jb
cmp
das
out
loop
stos
out
mov
add
inc
and
fnstsw
fists
mov
xchg
sti
mov
lea
arpl
mov
inc
outsb
jle
js
lret
lods
adc
add
add
mov
icebp
pop
rcl
push
dec
scas
adc
and
out
pop
adc
loop
bound
adc
inc
pop
adc
xor
mov
and
jge
mov
out
mov
inc
cmp
add
insl
ljmp
mov
inc
and
sbb
jge
fadd
and
jecxz
rcrl
jns
call
ljmp
loop
mov
inc
xor
dec
int
add
add
cmpsb
cli
cld
je
mov
test
shll
je
testl
int
jmp
lret
into
mov
scas
push
add
mov
loope
gs
mov
jne
inc
pusha
push
clc
sub
imul
std
sub
pusha
lds
std
cmp
shrb
lret
mov
stc
aad
and
ss
shrb
xchg
fmul
stos
popf
xor
push
jle
or
ret
hlt
xchg
xchg
in
addr16
insl
pushl
cmp
cs
in
cwtl
outsb
dec
ret
out
and
pop
clc
stos
and
andl
jl
mov
jg
jl
push
add
jmp
dec
xchg
or
pop
jmp
jle
mov
lds
jle
pop
sub
mov
divb
cmc
add
out
push
gs
mov
cmc
test
xchg
sahf
pop
rclb
pop
stos
mov
es
in
imulb
int3
and
mov
sbb
mov
test
ds
or
jle
xlat
stos
lcall
aad
shlb
cmp
sbb
sbb
push
mov
insb
xor
cmp
in
icebp
mov
popf
pop
lods
loopne
fsts
fld
hlt
test
lock
jle
xor
mov
das
inc
arpl
lods
mov
mov
fldt
dec
imull
loope
loop
inc
fdivs
ds
jecxz
ja
int
xchg
jb
fs
xchg
lcall
xor
mov
pusha
jecxz
aad
lret
xchg
add
out
or
xor
pop
pop
ja
lods
movsb
xor
in
xor
mov
movsl
adc
aaa
test
pop
jmp
mov
repz
out
stos
jge
das
inc
lock
or
dec
cmp
adc
mov
clc
pop
inc
fistps
in
inc
aam
pop
mov
inc
rorb
notb
and
stos
gs
mov
and
int3
xor
mov
fnstenv
pop
push
lret
add
jnp
xchg
sarl
xor
xchg
stos
jbe
mov
push
mov
fdivrl
xor
data16
mov
shll
xchg
mov
or
in
sbb
dec
dec
in
inc
jge
mov
jg
cmp
je
dec
cmpsb
pop
je
setae
stos
ds
ds
sbb
test
mov
fnsave
jge
push
mov
add
xchg
insb
rcrb
andl
adc
xchg
faddp
pop
lods
mov
andb
aaa
or
stos
and
add
movsb
mov
jmp
pop
lock
dec
das
andb
sub
outsl
arpl
lahf
mov
scas
aam
outsb
dec
in
pop
mov
mov
test
leave
icebp
rcrl
into
adc
repz
stos
push
popa
in
mov
imul
pushf
out
jge
into
ret
lods
mov
add
cwtl
nop
dec
movsl
clc
clc
push
std
rclb
mov
push
sbb
jo
push
test
and
and
lret
push
rorb
or
cmpsl
mov
dec
pushf
je
pop
outsl
xchg
inc
xor
icebp
into
repnz
decl
pop
mov
sub
out
sub
loopne
stos
andb
mov
add
scas
test
jns
xchg
bound
mov
je
outsl
shr
jge
mov
sbb
pop
mov
mov
inc
fdivl
push
mov
mov
popa
bound
insl
inc
orl
jle
aad
mov
push
cmpb
cmp
mov
xor
fstp
bound
mov
fwait
insb
mov
leave
xchg
cmc
mov
pop
pop
cli
push
push
mov
add
in
ret
fs
divb
hlt
cmpsl
lods
mov
lods
call
enter
push
outsb
sub
addl
lcall
lock
ret
inc
dec
aam
push
lahf
adc
and
jg
push
adc
stos
stc
mov
into
aad
mov
sbb
aaa
je
jb
add
and
les
mov
not
lods
pop
jl
scas
bound
or
push
push
mov
insl
loopne
push
jmp
push
inc
push
jo
int
movl
jge
push
fcoms
js
ret
fcoms
lock
cmpsb
mov
stc
imul
mov
repnz
gs
jg
sti
cli
dec
shl
inc
push
lret
mov
bound
pop
pop
dec
in
jo
jecxz
and
pop
fldt
add
aas
hlt
fwait
mov
rcrb
add
lods
dec
jno
mov
aas
js
mov
ret
fistps
push
fidivrs
jne
cli
and
jnp
lret
inc
sub
mov
aas
mov
bound
iret
mov
test
test
sarl
movsl
bound
add
sar
stos
addb
es
sub
jmp
scas
push
mov
push
out
and
fsubl
jns
mov
inc
sti
out
cmp
adc
cmp
je
push
call
rcr
std
xchg
push
outsb
mov
xchg
sbb
sub
into
clc
mov
inc
repnz
mov
scas
mov
rcll
loop
lods
xchg
je
jo
ret
and
inc
pop
cmp
mov
mov
sbb
lea
mov
add
and
sti
push
xchg
lods
fnstenv
cmp
pop
mov
cld
xchg
dec
pop
popa
inc
outsb
xchg
jecxz
add
jbe
add
push
data16
ljmp
mov
jbe
pop
hlt
repnz
xchg
scas
sbb
inc
movsb
fcmovu
mov
cmp
mov
fadds
fldt
cmp
test
cmpsb
sbb
hlt
mov
xchg
add
push
xchg
push
inc
cmpsl
stos
mov
scas
fsubl
cmp
fwait
inc
mov
dec
mov
mov
sti
cmp
pop
mov
out
sahf
xchg
mov
out
test
push
jno
insl
cmp
mov
je
mov
arpl
mov
dec
psllw
stos
mov
push
add
scas
inc
out
cmp
mov
sbb
cmp
clc
add
lock
and
or
into
add
xor
fwait
out
sbb
add
std
gs
lea
jl
jb
aas
jg
aad
mov
fsubrs
mov
sub
insl
test
xchg
push
or
fnstcw
int
xor
sub
mov
sub
pop
sbb
sub
and
dec
insb
and
std
add
jg
cmp
loopne
mov
aad
xchg
add
dec
mov
sahf
xor
cmp
ret
mov
test
inc
push
sbb
sbb
iret
test
aad
ss
jbe
inc
lods
shlb
xor
outsb
or
mov
roll
inc
mov
xor
stos
add
mov
mov
int
mov
adc
lds
xor
mov
test
mov
mov
gs
xlat
loopne
daa
inc
sub
mov
rorl
or
mov
movsb
push
cld
add
mov
sbb
fs
sub
cli
lret
orl
pushf
inc
xchg
je
daa
loope
sbb
stos
sbb
jb
outsb
xchg
aaa
jle
jl
mov
sub
pop
out
cmp
inc
dec
push
mov
cli
or
jno
xchg
int
mov
jae
add
adc
xor
mov
push
and
jne
xor
enter
adc
in
dec
test
inc
mov
mov
movsl
mov
sti
or
dec
mov
jle
inc
or
push
iret
dec
movsb
outsl
push
fisttpl
pushl
sub
scas
add
sub
jae
mov
cmp
or
mov
incl
add
sbb
dec
jecxz
loop
fwait
add
jo
mov
int3
mov
mov
jo
sub
push
xor
mov
or
test
jo
es
dec
mov
mov
jmp
or
in
dec
jnp
std
sbb
insb
mov
dec
push
jle
lods
sub
mov
test
mov
sbb
xlat
jo
mov
mov
inc
fisubrs
scas
pop
push
xor
jle
mov
cmp
mov
xchg
hlt
pushf
fcomi
jecxz
clc
add
sbb
mov
dec
call
cmpsl
add
into
fisubrs
mov
insb
sub
lds
pushf
xchg
mov
aam
mov
in
and
in
mov
test
rcl
fs
sahf
jb
push
jo
insl
or
or
cli
lock
insl
xor
lods
mov
adc
aad
lahf
or
out
cltd
stos
mov
add
dec
aaa
cli
mov
push
cld
jecxz
cmpsl
mov
mov
imul
or
mov
or
std
add
lret
notl
std
and
mov
in
push
fcomp
sub
xor
mov
jge
test
test
jge
mov
dec
jns
popa
sbb
push
lods
sub
mov
adc
xor
cmp
push
pop
lea
fisttpl
adc
cmp
and
xchg
bound
loope
jnp
mov
jns
into
outsl
outsb
push
add
popa
mov
jnp
imul
add
cmp
popf
int3
and
or
outsl
lods
hlt
shrl
cmp
push
popf
mov
mov
lods
cmp
outsl
mov
mov
das
jecxz
add
scas
sub
mov
mov
es
pop
xchg
mov
or
outsl
lcall
clc
and
shrl
rorl
pop
jo
loopne
test
pop
gs
inc
test
push
movsb
lods
lret
leave
xor
add
adc
and
sahf
fwait
insb
cmp
cmp
mov
cli
jb
jg
xchg
jo
jg
je
jg
decl
and
cmp
dec
aam
jl
xor
je
stos
lcall
jge
xor
jnp
mov
push
fidivl
in
inc
and
out
gs
mov
mov
ret
imul
fs
movsb
adc
xorl
sarl
xchg
cmp
add
cwtl
and
rorb
add
fs
jle
testl
clc
out
mov
fildll
add
pop
insl
jp
inc
add
inc
out
insb
aad
adc
stos
sub
out
push
inc
cmp
fdivs
mov
pop
add
jo
lahf
outsb
xor
sbb
xchg
scas
mov
arpl
lods
push
frstor
mov
test
cwtl
lock
imul
mov
mov
push
xchg
sub
mov
mov
pop
lods
or
in
mov
fistl
idivb
pop
lea
imul
mov
fcomi
shlb
bound
sub
mov
inc
or
dec
jle
cli
clc
jp
aad
push
addr16
and
mov
xchg
dec
or
insl
xchg
mov
adc
jecxz
adc
pushl
dec
arpl
add
mov
lods
cmpsl
sbb
dec
enter
cmpl
andb
add
adc
scas
xor
and
clc
nop
call
add
ficomps
sub
popf
cwtl
dec
jb
stos
inc
jne
test
mov
jg
jmp
out
xacquire
pop
mov
ja
sbb
xchg
cmp
call
stos
outsb
pusha
loop
cmp
inc
fldt
add
ror
fs
add
sarb
jnp
stos
fwait
jmp
sub
movsb
les
ret
and
xor
mov
sbb
popf
frstor
push
pop
sahf
rol
cmc
aam
jecxz
pop
testb
test
fildll
hlt
add
mov
in
std
aam
es
popl
ret
ret
loopne
divl
mov
dec
fidivrs
or
or
insb
jecxz
jle
andl
cmc
xchg
pop
repz
lahf
orb
in
pusha
rcrl
jmp
mov
mov
subl
push
and
push
xchg
add
adc
pop
cld
jge
outsl
jae,pt
lret
repnz
cltd
and
movsb
dec
rcr
pushf
pop
gs
mov
xor
mov
fwait
cld
pop
incb
rorl
and
jmp
mov
xor
cwtl
rcll
loope
add
mov
out
cld
out
or
aaa
jne
cwtl
xchg
add
fadds
push
and
cs
out
xchg
sbb
jp
jne
add
and
lret
xor
pushf
stos
inc
jb
xlat
test
mov
sub
shr
cmp
xchg
lds
lea
adc
or
popa
mov
insl
mov
push
adc
or
add
jge
les
inc
xor
xor
imulb
int3
inc
mov
out
add
xlat
mov
scas
movsl
push
pop
in
loop,pn
lret
inc
incb
das
test
or
mov
loope
cltd
mov
cs
mov
xor
push
mov
sahf
arpl
mov
dec
mov
repz
and
add
push
mov
movsl
push
js
jp
cli
mov
sti
push
icebp
add
adcb
loopne
pop
xor
jnp
test
dec
gs
test
sub
dec
jo
repnz
adc
shll
jp
mov
scas
inc
stos
or
jb
add
jae
dec
incl
ret
fimuls
add
out
xchg
fbstp
or
adc
faddp
das
cmpsb
push
out
mov
mov
push
xor
push
out
test
mov
fistl
sub
cmp
dec
aam
dec
outsl
or
jnp
add
xor
jle
lcall
test
jbe
mov
mov
enter
clc
sbb
bound
lahf
fisttps
inc
add
js
mov
jbe
mov
mov
loop
ss
je
sti
mov
orl
add
mov
jno
xor
mov
ja
roll
jg
scas
repnz
cmpl
cmp
mov
mov
fists
cmp
xchg
add
push
xchg
insb
lods
cmp
into
inc
in
add
mov
pop
mov
lods
xlat
out
stos
movsl
inc
dec
mov
orb
push
push
in
or
xor
add
loop
in
and
je
inc
cmp
test
ret
pushf
pop
mov
cmp
ljmp
cmp
mov
push
add
jb
repnz
adc
cmp
enter
add
add
push
mov
insb
and
mov
push
pop
mov
or
mov
ret
xchg
pmaddwd
or
imul
jnp
jo
mov
ret
mov
loop
mov
inc
mov
insl
jne
jae
jp
inc
mov
and
lods
jnp
fcmovnb
pop
popf
cmp
xchg
xchg
add
inc
inc
mov
sbb
add
ljmp
xor
pop
sarb
sbb
mov
inc
xor
inc
or
or
mov
addl
arpl
fs
loop
adc
clc
sub
pop
inc
or
cli
leave
jecxz
ror
lock
pushf
arpl
and
pop
fstpt
inc
ficompl
ss
test
imul
add
lcall
into
mov
ret
push
sbb
movsl
imul
add
mov
push
lock
dec
out
mov
pop
out
lock
cmpl
popf
scas
adc
pop
fistps
mov
shlb
xor
cli
mov
out
inc
cld
xor
or
hlt
cmp
sbb
dec
in
call
test
mov
mov
aas
mov
orb
sub
inc
sahf
mov
sub
scas
inc
pop
dec
mov
fcmovnbe
out
loope
enter
xlat
hlt
jle
cli
inc
pop
xor
and
xchg
mov
xchg
sub
lea
mov
cmp
push
call
pop
leave
fcomps
mov
inc
call
jnp
test
fistpl
jle
sar
lods
leave
js
mov
es
add
xorl
mov
out
mov
lcall
xchg
mov
outsb
std
xchg
sti
icebp
mov
sbbb
xor
adc
jp
or
fidivs
in
jle
xlat
jbe
pop
stos
repnz
js
or
pop
mov
add
pop
fdivrs
cmc
sbb
cmpb
xchg
repz
jb
adc
mov
nop
and
movsb
incl
push
andb
mov
push
or
push
jnp
ret
into
mov
mov
add
popf
fwait
push
stos
inc
mov
icebp
insb
xchg
sub
mov
fmul
xchg
and
mov
xlat
in
mov
jnp
pop
pusha
push
xchg
and
arpl
or
mov
mov
inc
arpl
cli
fnsave
scas
test
xchg
xor
fs
out
addr16
xor
idivb
jmp
scas
inc
pop
int3
and
xor
mov
adc
cmp
imul
movsb
push
es
inc
es
cmp
mov
rcll
cmovs
hlt
mov
fimuls
jmp
and
jbe
pop
inc
iret
sbb
mov
or
sbb
notb
rcrl
lods
inc
ret
lds
push
sti
add
rcrl
fcoms
mov
idiv
out
loope
lahf
loopne
ret
jo
xchg
adc
mov
rcll
jl
loope
imul
pop
test
adc
mov
cmpsb
jg
in
aam
subl
mov
stc
clc
fcmovnb
and
mov
add
sub
stos
aas
es
xor
out
bound
fisttpl
mov
rolb
dec
aad
ffreep
je
lcall
mov
dec
imul
imull
inc
jge
addr16
cmp
movsb
call
mov
pop
in
mov
sbb
daa
movsb
mov
cmp
ljmp
add
sub
ss
clc
les
mov
mov
jp
stos
in
hlt
fsubrl
out
inc
in
pop
and
push
mov
mov
dec
mov
push
cld
test
sahf
or
xchg
pop
adc
pop
jl
xchg
testb
and
adc
mov
loopne
jb
sub
sub
je
mov
jb
test
adc
mov
sbb
inc
push
pop
push
cmp
and
in
pop
outsl
mov
popf
loopne
insl
xor
mov
jne
adc
dec
mov
jp
adc
add
pop
inc
hlt
pop
loope
int3
or
stos
ficoms
popa
xchg
jo
andb
subl
cmp
fmull
pop
addr16
xor
adc
mov
push
movsb
xor
data16
and
jg
or
dec
mov
leave
mov
cmp
mov
ss
sbb
out
arpl
xchg
mov
pushf
jb
add
test
inc
lock
jp
xor
add
jo
add
insl
lock
addl
pop
xor
rcrl
into
cmp
push
mov
adcb
mov
push
pop
xor
sbb
arpl
aas
sbb
pcmpgtw
sub
popf
lods
inc
dec
das
add
movsb
push
inc
xor
and
cmc
fwait
xlat
cmpsl
cmp
rclb
cmc
in
mov
or
pop
pusha
xor
fstpt
arpl
out
rcr
sar
add
fisttpll
mov
jle
mov
push
stc
sub
xor
xor
divb
add
out
or
push
pop
pop
call
cmp
dec
sub
fs
inc
test
orb
jg
hlt
jl
stc
fsubp
adc
or
idivb
xor
repnz
ffreep
cltd
add
inc
dec
cmp
stc
in
and
push
lret
pop
in
sub
or
adc
addl
cltd
push
jbe
rorl
test
inc
popf
cli
mov
or
pop
mov
xor
cmp
mov
cli
inc
and
add
rorl
jbe
mov
insl
shll
xor
xchg
and
adc
add
pop
es
jmp
subl
ret
cs
daa
dec
mov
and
add
rcrl
jp
jb
outsl
insl
je
pop
mov
mov
mov
dec
ss
jp
cltd
and
std
in
int
mov
and
cmpsl
cs
mov
add
mov
and
mov
fimull
pusha
mov
mov
out
aam
lods
arpl
cmp
push
and
mov
push
pushl
hlt
mov
mov
gs
adcl
dec
in
pop
sahf
pop
push
cmp
repz
movl
or
pop
jl
jl
mov
pusha
inc
sti
jp
cmp
and
xchg
pop
imul
cs
vorps
add
lcall
fmuls
out
jmp
jb
in
dec
and
mov
and
xor
les
test
in
into
xor
xchg
movl
jae
test
into
ja
movsl
pop
cmp
jnp
les
xchg
sub
xor
and
jae
movsl
das
cmc
ret
mov
mov
dec
pop
mov
or
mov
sbbl
mov
xor
jge
insl
cmpsb
inc
sarl
les
sbb
jbe,pn
negl
mov
ret
mov
adc
dec
mov
cld
pushf
lea
lret
pop
or
dec
negl
add
xor
jns
data16
and
test
add
pop
mov
sbb
fucomp
inc
push
add
test
les
mov
iret
push
xchg
jecxz
test
mov
mov
leave
dec
pop
xlat
je
popa
clc
int3
mov
insb
cmp
jle
add
push
nop
and
push
mov
fs
pop
and
int3
mov
jnp
jecxz
xchg
add
cmp
adc
test
cmp
add
mov
mov
push
mov
fcoml
fistpl
push
sarb
lcall
repnz
push
aas
jp
out
adc
mov
fdivl
sbb
iret
fidivrl
fistps
orl
out
pop
cmp
or
sub
lds
pop
dec
arpl
cmp
xchg
mov
lock
outsl
mov
fcmovb
loop
and
js
arpl
in
mov
out
sahf
cmp
negl
push
xchg
lcall
add
inc
test
icebp
and
mov
test
es
mov
add
and
icebp
lret
add
hlt
and
sbb
mov
or
inc
je
mov
add
mov
push
jle
mov
lcall
cmp
mov
outsb
mov
test
push
dec
mov
cltd
mov
xor
ja
jge
daa
sbb
aam
icebp
nop
push
or
imul
hlt
mov
repz
push
mov
mov
inc
mov
mov
mov
fbld
add
test
lret
pop
push
mov
pop
test
adc
in
inc
xor
in
out
mov
mov
and
mov
xlat
add
cltd
jg
mov
cmc
xor
retw
mul
fs
push
xor
iret
stc
loopne
rolb
jne
jnp
fimull
and
or
mov
pop
mov
mov
popf
dec
push
icebp
jo
pop
pop
inc
std
add
jecxz
mov
repnz
pop
sti
popa
clc
jl
cld
add
xchg
pop
cmp
dec
stos
sub
rclb
pop
adc
mov
es
xlat
cli
outsb
fstps
xchg
imul
sahf
cs
roll
sbb
xor
lahf
or
lahf
push
in
xor
insb
je
jne
jmp
in
sti
pop
loopne
outsl
js
repz
mov
dec
int3
cmpb
idivb
pop
or
inc
aam
sarl
mov
adc
add
cld
inc
lds
or
or
inc
ficompl
lods
mov
sub
pop
mov
dec
cwtl
inc
mov
addr16
rol
ficompl
je
add
mov
fiadds
shrl
cmp
cmpsb
push
shlb
addb
dec
stos
sub
lahf
test
adc
xchg
gs
jg
mov
cmp
into
lock
cmp
in
sahf
pop
pop
add
ss
mov
jl
pop
rol
roll
daa
mov
hlt
shr
imull
mov
mov
cld
orl
insl
cmc
jg
add
rcll
shl
lea
xchg
clc
jp
push
sub
int3
test
push
cmp
push
loop
loop
or
aam
mov
rcr
sbb
test
mov
cmc
sbb
lret
fs
in
js
xchg
mov
ds
push
mov
mov
fsubl
inc
repnz
ljmp
loop
pop
jecxz
inc
out
add
adc
xchg
push
xchg
loope
jnp
inc
add
ss
mov
hlt
lods
shll
mov
dec
sub
cmc
testl
push
in
pop
in
push
pop
mov
shlb
mov
negl
push
sub
sbb
clc
and
cwtl
fsubl
xchg
lcall
xchg
mov
cmpsb
push
push
xchg
or
aad
iret
mov
test
lods
and
cmp
repz
pop
repz
pop
cmp
dec
add
cmp
std
inc
push
fcmovne
andb
addr16
stc
hlt
sarl
mov
fstpl
js
ret
aad
repnz
out
fisubrl
addb
push
mov
push
mov
jmp
sahf
nop
mov
ret
jne
dec
scas
test
data16
add
movsl
mov
cmp
cmp
mov
ret
pop
mov
test
mov
call
test
mov
pop
enter
fmull
mov
push
out
fimuls
adc
test
push
lret
rolb
mov
inc
fstl
and
dec
cmovge
push
pop
xor
mov
add
mov
stc
movsb
sbb
dec
movsb
test
sbb
sarl
arpl
aam
mov
in
nop
mov
mulb
loop
jge
rolb
aad
or
int3
push
mov
std
add
dec
mov
popf
push
mov
pop
fidivrs
negb
mov
pop
mov
mov
scas
in
repnz
mov
or
xchg
aad
jbe
add
sbb
push
stos
push
inc
and
setp
xor
lock
es
lods
mov
push
and
mov
lret
lahf
and
scas
shll
push
xchg
insb
ret
clc
dec
pop
jp
fwait
adc
add
mov
hlt
mov
rcrb
idivb
jne
and
xchg
xchg
add
popa
fcmovbe
xchg
fldl
sub
cmpb
cld
ja
add
and
pusha
lret
mov
test
es
lret
and
adc
negl
cmp
adc
mov
push
in
testb
stos
mov
mov
xchg
xor
xor
clc
inc
test
fisubrl
fidivrs
inc
or
or
jmp
mov
mov
dec
out
iret
inc
loopne
mov
lea
jns
push
ds
cmp
fsub
push
dec
mov
jb
movsb
pop
mov
and
xor
xchg
mov
hlt
dec
mov
out
mov
fmuls
mov
test
mov
ret
shl
into
out
pop
sbb
out
pushl
int3
xchg
ds
jbe
mov
scas
scas
add
movsl
add
rcrb
mov
xchg
in
mov
hlt
popf
sahf
cmp
movsl
and
ds
push
stos
in
sbb
aam
pop
or
lret
inc
adc
add
xchg
xchg
mov
ror
ret
sbb
add
pop
mov
aad
inc
call
jle
pop
dec
fs
popf
jmp
lods
xor
hlt
xchg
gs
aam
xchg
cmp
aad
mov
push
das
push
into
lock
dec
sub
mov
or
pusha
and
lea
ss
arpl
ss
pop
clc
xchg
dec
cmp
mov
rcll
pop
fs
mov
dec
jecxz
js
xchg
insb
mov
ret
inc
xor
push
loope
add
arpl
lods
adc
fbld
inc
pop
adc
push
je
dec
dec
cld
fwait
xlat
je
ret
jo
inc
movsb
add
and
bound
shll
xchg
jnp
mov
cld
roll
je
testb
out
push
cmp
dec
ja
rcr
cld
bound
mov
add
adc
mov
aam
jne
leave
jnp
xor
xlat
pushf
add
sbb
mov
inc
lods
and
call
xor
out
inc
fildl
sub
aad
mov
sub
test
xchg
cmp
mov
dec
rclb
lret
int3
cld
in
scas
rcl
mov
out
int3
lret
ds
ss
out
mov
pop
daa
add
jo
mov
mov
in
jg
dec
aaa
or
ss
leave
sub
mov
xor
and
add
xor
arpl
scas
mov
outsl
or
arpl
mov
xchg
add
mov
pop
int3
movsl
add
popl
popa
mov
mov
xchg
sbb
mov
add
in
xchg
scas
stos
aam
insb
and
cmpsl
dec
mov
xchg
push
xchg
jo
lods
cld
lahf
cmpl
add
nop
xor
decl
mov
xchg
and
push
roll
mov
pop
cli
mov
ret
pop
lret
mov
cld
lods
xchg
fdivl
sbb
pop
fldenv
xchg
push
into
int3
adc
inc
jecxz
sub
fneni(8087
push
push
push
fcompl
fldt
push
cli
test
nop
jecxz
cmp
mov
dec
mov
scas
and
shll
push
in
xchg
xor
popf
and
push
or
add
push
je
and
xchg
add
push
xor
xchg
loope
in
jb
and
lock
sub
nop
add
fistl
sahf
push
bound
jge
in
add
sar
push
sbb
in
jne
insl
inc
mov
and
dec
jno
add
std
int3
dec
xorl
flds
jle
lods
inc
movsl
out
repnz
mov
es
ret
mov
insl
xchg
jo
ja
cltd
inc
repnz
xchg
cli
out
push
je
pop
jmp
mov
mov
lahf
jg
jo
jp
jne
and
incb
sar
adc
icebp
aad
pop
clc
dec
and
mov
outsb
std
mov
lock
mov
out
pusha
addb
shl
pop
test
inc
popa
insb
sub
mov
mov
cmp
cld
lds
cmp
enter
xor
nop
stc
mov
aaa
dec
jg
les
idivb
dec
push
ficomps
xor
arpl
stc
adc
aad
insb
ret
and
jecxz
jmp
ss
inc
mov
xchg
pop
mov
mov
test
mov
xchg
adc
frstor
xor
dec
rorl
or
cli
outsl
mov
les
in
sub
popf
insb
ljmp
xor
mov
pop
xchg
mov
sahf
aam
loop
loopne
sbb
pop
dec
mov
lods
push
adc
mov
ja
or
cmp
add
lds
lods
pop
cli
test
xchg
add
mov
aaa
adc
mov
pop
lods
movsl
mov
int
jbe
sbb
incb
fucom
sbb
cld
data16
inc
inc
mov
sub
fdivp
sub
outsl
lea
stc
adc
push
das
pop
scas
adc
push
shll
leave
xor
std
clc
inc
xchg
test
pop
rcl
insl
pop
adc
or
sub
imul
out
into
cmp
xor
inc
popw
stos
push
mov
add
jno
into
cmc
scas
in
or
iret
and
out
hlt
sub
inc
in
cmp
and
cmp
jle
adc
in
aam
cli
add
imulb
add
or
fmull
xlat
pop
mov
stc
inc
mov
fistl
lds
test
scas
inc
data16
ret
mov
cmp
cmp
std
and
sbb
jle
or
cmpsb
jecxz
bound
orb
adc
mov
sbb
mov
push
frstor
out
adc
add
xor
int
cmpsb
jecxz
decb
in
sub
inc
mov
push
addr16
mov
js
fsts
mov
arpl
and
loope
ret
subb
add
arpl
xor
call
mov
enter
pop
mov
outsl
jecxz
add
cmp
icebp
pop
outsb
add
orb
push
mul
lods
sub
aaa
add
leave
lret
push
inc
and
out
xchg
arpl
pusha
fs
push
lds
mov
lea
sarl
push
ret
std
jle
mov
js,pt
aad
jb
and
fisubrs
adc
lods
sub
jp
add
imulb
mov
rcrb
jbe
ret
xchg
imul
mov
sar
jb
cwtl
outsl
lods
ja
pop
push
test
push
pop
pop
sub
sti
pop
and
aam
sub
inc
mov
jle
sbb
bound
cltd
mov
jle
dec
dec
pop
icebp
out
test
popa
lods
insl
jo
add
xor
outsb
xchg
sub
ret
pop
push
mov
jb
fisubrl
icebp
mov
aam
mov
push
iret
push
fcoms
shll
pop
adc
test
xchg
mov
mov
or
inc
xchg
xorb
je
mov
insb
jg
outsb
out
roll
cmp
test
ss
sahf
scas
xor
xor
mov
lea
loopne
int
inc
mov
lret
sub
dec
jnp
jo
out
xchg
lods
out
and
js
and
inc
xchg
xor
mov
xor
mov
mov
cld
xor
mov
js
lea
bound
pop
add
inc
jns
movb
stos
lcall
adc
mov
or
jne
lds
mov
mov
inc
and
push
je
test
test
pop
imul
nop
jmp
push
and
psllq
movsl
mov
mov
and
mov
push
cmpsl
pop
mov
aaa
push
lds
mov
in
ret
fistpl
jg
inc
ficomps
mov
sub
mov
iret
in
mov
cld
or
cmc
or
jnp
loopne
shlb
in
dec
je
insl
jge
jle
xor
mov
les
scas
rcr
jnp
sahf
adc
stos
mov
daa
dec
add
out
dec
int3
jno,pn
fisubrs
adc
fcomi
inc
movsl
pop
shr
xchg
and
jbe
add
push
lods
cmp
sbb
mov
fidivrl
cs
sbb
sbb
enter
add
and
xor
jns
mov
mov
test
mov
add
lcall
into
xor
insl
mov
cld
jae
fwait
mov
mov
cld
out
mov
sbb
inc
mov
mov
dec
mov
xchg
cmp
lea
test
push
cmp
int3
jmp
pop
hlt
fidivrs
mov
pop
rorb
add
pop
mov
sarl
cmp
enter
sub
aam
idivb
sti
xchg
mov
add
cs
outsb
dec
xor
arpl
cmp
repz
jbe
fwait
add
mov
lods
es
add
notb
fcoml
push
fidivl
mov
mov
fdivrp
jge
push
dec
out
and
jnp
sarl
pusha
xor
sub
sub
jo
dec
out
jno
leave
popa
dec
xchg
loope
and
out
bound
je
dec
gs
ljmp
insl
jnp
or
mov
insl
xchg
inc
and
add
adc
js,pt
cmc
xchg
jl
add
sbb
jle
mov
outsl
lock
mov
and
xor
cmp
inc
jl
shrl
rcll
cmpsl
hlt
ret
jge
sahf
insb
mov
out
jg
and
mov
lods
int3
lahf
jne
inc
jne
mov
dec
sbb
ljmp
push
mov
repz
sub
lret
loop
cmp
test
adc
inc
in
ret
add
sub
xchg
or
push
das
pop
lock
shlb
loope
jg
pop
sbb
jl
mov
jbe
xchg
cld
das
arpl
add
pusha
icebp
cmpsl
pop
lret
insb
aad
cmp
test
and
dec
add
inc
sub
sbb
fistpl
pop
ds
jge
xchg
adc
iret
adc
jg
push
fwait
ret
fidivrs
cmp
das
movsl
push
pushf
pushf
fwait
mov
out
mov
fdivl
insb
leave
daa
jb
push
xchg
outsl
and
inc
lods
pop
xchg
sbb
dec
cmp
lret
mov
out
outsb
xorb
ficoms
cmp
mov
faddp
bound
jae
insb
mov
dec
xor
dec
cmc
xorb
mov
incl
dec
insb
mov
ds
mov
fdivrl
xchg
outsb
mov
loop
in
movsb
dec
ss
scas
sarb
xor
fadd
and
out
pop
fs
rclw
jp
popf
xchg
and
mov
iret
mov
fsubrl
and
push
push
xorps
sarl
fsubrp
aad
fdivrs
xor
cmpsb
aam
mov
out
sbb
stc
sbb
cmc
in
adc
jmp
pop
pop
rolb
add
and
fcmovnbe
test
cli
lds
divb
sbb
je
add
stc
jle
ret
arpl
insb
mov
das
or
xchg
mov
and
popa
xchg
aad
and
aaa
stos
movsb
mov
les
mov
lea
in
sti
or
sub
push
ret
loop
loop
mov
fmull
pop
mov
mov
insb
lods
adc
jecxz
popf
les
in
sbb
xchg
mov
dec
enter
cli
sti
mov
jnp
add
iret
pop
jecxz
das
fisttps
lock
adc
push
aaa
call
sbb
incl
loopne
pop
test
mov
je
dec
sbb
fisttpll
cmp
pop
cmpsb
loop
mov
mov
lods
pop
outsb
cmpsb
xor
jo
movb
sub
or
push
clc
dec
and
ljmp
insl
ljmp
pop
je
pop
xlat
pusha
adc
ret
pop
pop
add
jp
bound
xchg
jno
add
sbb
imul
fsubrs
cmp
shll
pushf
hlt
mov
mov
push
push
cmp
add
std
mov
jle
outsl
mov
cmpsl
sub
test
jns
lret
push
adc
test
fwait
rcl
shrb
repnz
lea
divps
hlt
xchg
inc
cmp
inc
mov
jo
xorb
jge
mov
outsl
fdivrs
inc
and
enter
add
push
mov
push
pop
mov
test
std
scas
dec
into
or
dec
adc
push
adc
xor
pop
jnp
or
cmpsb
stc
ja
mov
add
int
stc
sub
dec
jecxz
insl
add
jle
jbe
test
pushf
sbb
mov
mov
sbb
dec
in
in
cmpsl
cmp
test
xchg
mov
imul
jb
mov
mov
test
sub
fldl
adc
popl
inc
or
clc
push
out
int
je
dec
dec
rorb
clc
stc
movsb
in
xchg
add
mov
inc
jle
rolb
dec
push
pop
push
sti
cli
mov
push
adc
push
out
arpl
sbb
rcll
fs
sub
mov
sub
add
add
insb
add
sbb
mov
loop
mov
sti
lret
dec
cmp
and
in
cmp
pushf
push
mov
into
mov
fwait
popf
jle
or
push
daa
loope
mov
mov
insl
inc
ja
loop
out
mov
and
cld
cmp
outsb
push
adc
xor
jecxz
stos
int
sbb
adc
inc
ficoms
pop
pop
leave
push
sbb
pop
pop
push
sbb
sti
mov
and
test
std
lods
pop
push
notb
sub
testb
adc
mov
inc
das
mov
inc
and
inc
cld
lds
jns
in
xchg
inc
xor
mov
enter
mov
out
push
jp
sarb
push
mov
fmull
aam
fcompl
jle
ror
xor
mov
sub
lods
mov
mov
loopne
ficoms
scas
out
adc
adc
sub
and
push
or
lcall
push
sbb
stc
sub
fsubs
sbb
mov
cmpsb
jbe
xor
jmp
rcrb
push
mov
repz
lock
sbb
stos
lock
inc
jns,pn
dec
mov
pop
inc
push
mov
fstl
dec
inc
out
popf
in
fistl
mov
push
ss
sahf
and
and
cmp
in
add
cmp
inc
mov
lahf
mov
inc
xchg
mov
stos
cmp
in
xchg
xchg
jne
popa
pop
push
pop
enter
out
mov
mov
add
add
push
mov
sahf
stos
sub
push
imul
ljmp
sbb
xlat
lds
jb
push
ds
lret
lea
fmulp
loopne
mov
rolb
test
fsubr
data16
int3
cmpsb
dec
sar
mov
cli
roll
aad
adc
cld
andl
jle
jecxz
andb
rcll
mov
nop
dec
std
scas
mov
add
test
jp
movsl
or
jae
inc
xor
fs
and
call
test
mov
je
jae
movsb
je
test
fistps
das
clc
push
aad
mov
stos
inc
jb
outsl
dec
dec
add
add
pop
cmp
bound
int3
addb
dec
jle
arpl
adc
loop
mov
mov
xchg
std
hlt
sbb
pop
cmp
cld
rcrl
outsl
jno
add
in
mov
jne
fwait
lods
cmp
repz
add
mov
add
arpl
inc
aaa
push
mov
mov
jne
mov
leave
mov
aas
jmp
roll
je
jo
repz
pop
pop
int3
jle
sar
fidivl
mov
and
add
jns,pt
mov
cmp
pop
outsb
in
mov
push
xlat
popf
cli
mov
add
lods
scas
bound
jmp
pop
lret
add
sub
add
ja
pop
iret
dec
add
and
sti
cmp
mov
add
sbb
jle
roll
xchg
mov
test
inc
dec
imul
xorb
jnp
mov
add
lret
in
xchg
out
mulb
mov
push
mov
sar
inc
inc
mov
cld
andb
sti
sbb
mov
mov
pop
lret
ret
mov
cmp
jbe
mov
in
xor
lahf
pop
or
das
add
addr16
repnz
dec
mov
jns
add
mov
jg
mov
aam
fs
and
add
clc
add
jp
mov
jb
dec
sti
addr16
sbb
mov
dec
cmpsl
jge
shll
adc
lock
inc
cs
mov
mov
mov
loop
sbbb
into
mov
xchg
mov
mov
int
fwait
mov
out
bound
test
stc
push
sub
mov
repnz
popf
jecxz
movsl
mov
das
or
xor
out
mov
pop
neg
mov
insb
add
push
and
fucomp
ja
sub
out
sahf
add
dec
add
ja
mov
xchg
xor
lcall
sbb
loope
movsl
sbb
adc
imul
mov
loopne
jl
mov
imul
cli
sub
lcall
mov
out
inc
cmp
jmp
fnstenv
push
mov
loope
int3
das
sub
aam
data16
inc
aad
mov
mov
mov
mov
cmpsb
mov
out
enter
scas
stc
jbe
shl
out
dec
int3
cmpsl
jo
jle
jecxz
loop
repnz
mov
data16
je
scas
push
lods
cld
and
lret
mov
or
stc
incb
mov
cmp
test
inc
movsl
mov
mov
xchg
xchg
pop
mov
jbe
in
push
xchg
mov
mov
pushf
bnd
pop
cli
mov
dec
or
pop
loop
or
rcr
jecxz
les
inc
cmp
cmc
int
push
cwtl
addb
fwait
jle
lock
jbe
shrl
xchg
mov
push
pushl
insb
add
fcmovb
idiv
out
negl
leave
cmp
fdivrs
adc
das
dec
xchg
outsb
jge
xor
sbb
inc
lea
cmp
jne
sub
jno
jb
jae
ret
adc
cmc
dec
xchg
lahf
sahf
popa
dec
test
pop
pop
mov
push
or
rcrl
outsl
pushl
pop
rcl
xor
mov
cwtl
repnz
sbb
les
aam
and
cwtl
sbb
adcb
inc
mov
sarb
push
orl
jp
mov
rcrb
xchg
stos
lods
mov
lret
add
nop
mov
mov
and
gs
pop
fcomps
add
cmpl
std
jp
add
dec
sbb
jle
or
pop
es
leave
fsubp
insl
mulb
fadd
add
sub
insb
and
sbb
lahf
jns
add
jp
fsubs
stos
dec
movsb
or
pop
lret
pop
cmp
shl
sub
mov
aad
popf
cmp
fnstenv
cltd
cmpl
xchg
add
push
js
pop
dec
cld
insl
leave
push
cli
pop
mov
adc
add
or
arpl
shrl
int
push
adc
xor
add
push
xchg
into
mov
insb
dec
in
mov
push
pop
mov
and
aam
inc
push
push
or
loop
stos
iret
add
jno
int
bound
xchg
xor
jne
cmp
incb
fistps
fistpl
pop
subl
mov
test
add
pop
sbb
out
mov
add
stos
in
out
mov
xchg
jecxz
decl
test
cmpsl
fistl
push
frstor
push
push
andl
gs
cmp
sbb
cmpl
clc
inc
mov
pop
cld
gs
push
cmp
add
repnz
mov
lcall
ljmp
dec
sbb
xchg
imul
inc
adc
lea
lods
sbb
adc
jb
or
mov
and
sub
cmp
adc
test
dec
pop
je
mov
mov
push
cwtl
lea
test
outsb
loop
xor
add
rol
add
inc
mov
int3
inc
sub
cwtl
aas
adc
or
and
lock
outsb
dec
repz
mov
dec
add
nop
mov
mov
inc
movsb
xlat
test
in
mov
xchg
cli
and
push
aad
shll
xchg
cmp
out
pop
xchg
inc
xorl
out
rcrb
push
dec
dec
fidivrs
stos
ja
dec
sbb
push
and
mov
push
stos
insl
mov
stc
mov
cltd
inc
fs
mov
xchg
dec
outsb
lods
fs
push
add
scas
adc
push
dec
mov
popf
mov
in
nop
test
lahf
repz
fisttpll
add
out
jb
shl
std
push
dec
cmpsl
dec
add
and
or
loope
hlt
dec
sarl
xor
and
loop
pusha
adc
outsl
das
cmp
xchg
popf
jae
je
add
jbe
push
xorb
imul
push
fnsetpm(287
shrl
xor
push
add
icebp
mov
pusha
push
and
pop
popf
loop
xchg
add
dec
and
mov
loop
dec
mov
loope
push
bound
in
or
outsl
mov
cmpsb
pop
mov
lret
dec
jp
push
jns
dec
mov
jbe
movsl
xchg
sub
ljmp
sbbb
fisttpll
sub
mov
and
ror
add
insl
dec
idivb
fmuls
iret
push
pusha
xchg
mov
mov
rcrb
iret
out
es
mov
ret
aaa
sbb
loopne
xor
mov
xchg
xchg
outsl
aas
je
dec
xlat
in
faddl
dec
pop
cld
fistpl
jecxz
xchg
xor
adc
pop
fistpl
or
xchg
fdivr
pop
ss
lahf
lods
mov
addr16
xchg
stc
movsb
cmp
push
test
sti
sarb
push
fs
imul
push
sbb
mov
and
and
lds
inc
push
push
mov
push
mov
mov
sbb
pop
jg
lcall
lock
dec
mov
adc
jo
movsb
mov
mov
bound
push
dec
popa
sub
inc
mov
dec
jp
lods
mov
lods
js
or
lret
bound
in
push
ficomps
lret
add
mov
sarb
dec
ss
inc
loope
xor
mov
fidivs
scas
movsb
xchg
mov
mov
stos
in
bound
xchg
push
loop
insl
adc
insb
mov
out
fldl
cmp
outsb
sbb
inc
ds
outsl
sub
imul
aam
jp
pop
pop
or
rorl
mov
call
push
ds
scas
push
xor
push
push
push
into
sub
addr16
int3
les
out
mov
lcall
das
test
sbb
stc
mov
dec
ja
sub
mov
test
pslld
mov
das
loope
daa
inc
inc
int3
mov
popf
and
cmp
mov
push
jo
add
mov
aaa
lock
dec
sbb
aas
mov
insl
lea
aas
sbb
mov
or
jo
mov
mov
push
and
sbb
mov
or
or
mov
mov
jl
inc
hlt
test
push
inc
psrlw
xchg
call
mov
ret
cmp
call
mov
pop
push
lods
jle
in
int3
pop
inc
sarb
fwait
jle
mov
mov
mov
cmp
xorl
lods
fisttpl
outsl
jg
aad
stc
mov
hlt
test
mov
shr
or
mov
pop
dec
popf
mov
jle
ret
mov
loop
lcall
mov
test
mov
pop
mov
dec
in
inc
sub
movsl
mov
push
repnz
cmpsb
loopne
mov
in
clc
inc
sbb
cmp
jo
fsubs
imul
mov
stos
int
repnz
adc
mov
pop
inc
jbe
jo
mov
or
add
mov
cmpb
js
mov
mov
jne
mov
movsb
mov
xor
or
jp
cmpsb
push
out
mov
pop
shl
sarb
inc
jmp
pop
jge
add
push
in
roll
sub
js,pt
mov
mov
cmc
shll
popa
fwait
int
lret
pop
inc
ret
xor
inc
pop
pop
mov
inc
add
jp
sbb
xchg
mov
popa
push
idivb
pop
cwtl
xor
xchg
cli
push
stos
sbb
into
push
add
mov
mov
add
aam
push
push
adc
xor
cwtl
hlt
mov
out
mov
sbb
or
mov
sti
sbb
ljmp
js
push
mov
mov
aaa
xlat
sbb
ret
movsl
inc
cld
je
in
lods
ss
inc
mov
xor
lcall
ss
scas
mulps
les
les
or
movsl
sub
aad
aad
xor
adc
out
mov
lods
jle
mov
or
dec
in
xlat
arpl
and
mov
mov
in
repnz
int
subl
xchg
gs
inc
popf
mov
jmp
and
arpl
fsubr
sbb
rcr
sbb
xor
cmp
pop
leave
test
push
cmp
call
outsl
andb
mov
sbb
leave
cld
mov
mov
and
or
push
jae
fistpl
mov
mov
mov
sbb
cmpsb
rorl
loope
lods
mov
dec
add
shlb
push
rcll
jo
push
ljmp
rcll
xor
rcrl
cld
sub
imul
les
aam
add
popf
fildl
push
dec
repnz
fcoms
rclb
scas
call
aaa
push
sti
mov
fisubs
add
cld
nop
rcrl
cli
pop
add
jg
sbb
add
sub
adc
arpl
cli
push
jle
or
mov
pop
rcll
xor
popf
jp
fsubl
mov
xor
movsl
xor
out
je
lahf
mov
and
fildl
cli
jg
pop
pop
out
mov
mov
push
and
and
inc
inc
xor
loopne
lcall
and
jno
add
xchg
mov
test
roll
enter
inc
mov
sbb
xor
mov
scas
xchg
movb
fcomi
mov
jp
pop
dec
or
xor
pop
mov
scas
push
les
mov
inc
mov
or
movsb
shlb
add
bound
inc
cmpsb
adc
jnp
lds
out
and
pop
sub
jge
sbb
push
mov
cld
xor
xchg
rcrb
xlat
loop
pusha
pop
mov
mov
fcoml
sbb
stc
add
data16
leave
aaa
out
mov
dec
outsb
test
inc
xor
pop
clc
repz
cmp
arpl
je
fsub
lods
mov
mov
adcb
add
in
lods
push
aam
dec
mov
mov
movsb
dec
fs
push
sbb
mov
lcall
mov
andb
das
fcmovnb
out
lret
pop
scas
mov
daa
out
and
inc
test
in
cmpl
mov
ror
adcl
rol
add
push
mov
sub
or
xor
enter
clc
dec
out
mov
in
or
xchg
fs
push
mov
fwait
enter
roll
rolb
push
aad
jp
hlt
arpl
sbb
inc
inc
push
push
into
pop
movsb
jl
push
in
cmpsl
sbbl
inc
xor
push
ret
repnz
jle
mov
jb
mov
test
andl
stos
jl
sti
cmp
lock
rorl
dec
pop
testl
repz
push
dec
inc
int
cmp
mov
push
pop
repnz
testb
mov
cmp
adc
loopne
daa
shlb
mov
mov
fmuls
mov
aam
dec
xor
int
adc
aaa
dec
stos
xchg
add
xlat
arpl
adcl
jns
push
mov
xlat
ret
incl
fs
mov
push
xchg
cmp
in
cmp
addr16
popf
sub
inc
mov
jnp
in
sub
cwtl
bswap
or
mov
loop
mov
pop
cmpsl
sar
rolb
into
fidivs
je
adc
xlat
lret
out
popa
fidivrl
mov
dec
mov
cmpl
ret
subl
aaa
xchg
sbb
cmpl
pop
push
arpl
and
xor
mov
mov
movsb
in
arpl
pop
push
or
stos
repnz
aas
ja
adc
adc
jns
inc
insl
pop
adc
int
inc
pop
jge
and
stos
xchg
fwait
dec
ror
ret
xchg
inc
outsb
and
jl
pushf
mov
adc
mov
push
push
mov
xorb
mov
cmp
xchg
fidivrs
inc
bound
fwait
push
fmull
lret
test
mov
iret
loop
loopne
dec
addr16
dec
or
xchg
lock
test
in
fmul
xor
cmp
inc
nop
and
mov
inc
dec
mov
fidivrl
fucom
ret
rorl
lods
bound
insb
inc
cmp
push
mov
cmc
jp
push
mov
fistl
jae
inc
push
mov
rolb
add
xor
xchg
loop
cmp
push
mov
adc
cmc
out
inc
push
mov
out
fdivs
dec
push
sbb
add
and
add
mov
pop
inc
and
int3
mov
ret
cld
sar
xchg
leave
ret
jo
mov
add
mov
xlat
in
jmp
xor
enter
jle
mov
lea
loope
lods
das
xchg
in
and
or
sub
repz
cmp
or
cmp
popa
popl
adc
repz
fisttpll
es
arpl
mov
cmp
dec
pusha
mov
mov
outsb
sub
pop
jle
repz
in
push
imulb
call
mov
subb
pop
int3
jb
mov
ss
lods
adc
xor
mov
lea
pop
in
mov
push
cmp
idivl
fisubrs
dec
rcl
mov
mov
mov
xor
enter
enter
decb
aad
in
cli
jg
out
cmpsl
int
mov
das
mov
in
pop
add
xor
in
add
mov
jbe
push
loop
mov
inc
cltd
lret
imul
jmp
mov
ljmp
dec
fisubrs
test
out
jns
decb
out
push
int
pop
jo
mov
sbb
pop
jg
test
lock
push
mov
push
mov
pop
xor
or
fsubl
insb
inc
ds
sbb
jnp
mov
mov
je
popf
inc
addl
mov
push
aaa
inc
xlat
mov
outsl
cmp
fstps
mov
inc
sub
mov
xor
sbb
mov
jle
int
fwait
adc
xor
and
push
cmpsl
sbb
movsb
xor
mov
inc
fcomi
mov
push
jl
fs
inc
or
daa
pop
subb
rorl
stc
scas
scas
ljmp
xchg
in
outsl
in
mov
jmp
lods
mov
movsl
push
jecxz
mov
mov
add
dec
test
push
int
and
data16
add
loope
rorl
int
mov
and
add
inc
jmp
adc
inc
push
mov
ret
addr16
adc
cmpsl
and
popf
aam
xor
inc
shlb
or
xchg
inc
jnp
mov
add
fs
or
push
pusha
in
das
pop
add
aaa
mov
arpl
lret
aaa
imul
mov
arpl
or
rcrb
or
out
add
xchg
movsb
sbb
negl
out
or
add
or
lods
jmp
jp
mov
rol
cmpsb
div
push
inc
xchg
xor
dec
xor
push
xor
ljmp
mov
stc
daa
pop
outsl
sub
call
ljmp
enter
and
mov
mov
and
insb
pop
lcall
push
and
mov
mov
rclb
or
jno
insb
into
sub
jno
cmp
mov
or
addb
lea
rcll
ret
imul
mov
stos
lret
cmpb
or
enter
ror
popl
pop
scas
pop
jge,pt
cs
les
sbb
and
xchg
out
pop
test
push
stos
jo
push
mov
stos
pop
and
mov
mov
inc
shrb
jo
adc
push
push
fstpl
js
xchg
adc
cwtl
and
mov
push
inc
dec
leave
shll
or
and
dec
xlat
add
cwtl
cmp
mov
lods
fdivp
ds
outsb
mov
aaa
jbe
inc
loop
xor
mov
or
or
fdivs
mov
xor
std
es
xor
pop
lahf
mov
mov
adc
dec
dec
dec
arpl
into
rcll
clc
add
movsl
out
stc
xchg
inc
sbbl
dec
jp
les
cmp
loop
jecxz
psraw
les
scas
rolb
jae
jl
ret
stos
lcall
loopne
push
xor
xor
loop
pusha
mov
test
push
outsl
out
jbe
pushf
out
and
mov
gs
es
in
sub
fstpt
mov
sub
xchg
sub
lcall
xchg
mov
ljmp
inc
jmp
pop
movb
shrl
jnp
mov
cmc
mov
sbb
popa
int
push
jle
int
ror
push
jnp
loopne
ret
cli
dec
mov
pop
and
mov
cmp
add
jp
dec
xchg
lods
cmp
mov
ljmp
imul
cmpsb
and
jp
fs
and
jecxz
out
cmp
arpl
jbe
mov
adc
xlat
je
loop
aaa
push
adc
jge
lret
insl
mov
cmp
jnp
pop
ds
orl
cmp
mov
pop
shrl
mov
loop
cmp
jo
mov
mov
imul
sub
inc
clc
dec
mov
mov
dec
and
in
leave
movsb
jo
add
pushl
jg,pt
pusha
jge
movsb
mov
and
cli
pop
sahf
mov
test
out
sub
jb
and
idivb
loopne
add
push
rcll
fists
xor
in
cmp
mov
div
sbb
fdivrp
mov
scas
cmp
add
mov
jle
push
in
test
in
and
pop
dec
mov
push
push
idivl
pop
jmp
sti
xor
pusha
sub
inc
mov
repnz
push
rorb
dec
sti
xchg
push
ss
imul
sar
and
insl
mov
cwtl
mov
push
xchg
inc
in
ss
mov
push
arpl
jns
add
jne
mov
inc
pop
arpl
loopne
pushl
lods
xchg
in
fcmovnb
cmp
ds
xor
insb
push
inc
add
pop
icebp
mov
push
insb
mov
es
bound
mov
in
adc
lock
adc
sbb
bound
xchg
test
xor
push
popl
mov
int
push
sbb
xchg
and
lea
pop
push
sbb
mov
mov
jnp
add
jbe
int
push
mov
pop
int
cld
jle
arpl
adc
lcall
imulb
xorb
jno
jae
add
sbb
sbb
into
mov
sub
xlat
les
dec
movsl
push
jbe
pop
fnstcw
xchg
jne
imul
jb
mov
jp
sub
out
dec
xchg
or
les
mov
testb
movsb
repnz
fldenv
or
cmpsl
sbb
movsl
add
test
pop
xchg
movl
jg,pn
dec
fldt
loope
and
pop
cmc
ja
jno
dec
jae
aaa
fbstp
mov
in
inc
repnz
pop
jge
mov
mov
mov
cmp
sub
cmp
notb
dec
mov
mov
jb
xchg
das
outsb
loope
ret
sub
aam
imul
fistpll
pop
jle
xor
scas
outsb
dec
xor
std
ds
dec
mov
jle
mov
or
ret
enter
inc
in
mov
je
pop
in
mov
into
jmp
int3
xchg
je
or
rcll
aaa
mov
lock
jmp
or
stos
cmp
push
jbe
pop
pop
insb
pop
mov
and
je
outsb
hlt
add
lret
adc
push
jno
xchg
stos
sahf
rolb
push
shl
lods
movsl
ljmp
loopne
clc
push
and
add
add
push
cmp
sub
dec
cmc
cld
outsb
test
or
or
sbb
cld
shll
cli
lret
and
jg
jns
call
push
repz
je
call
inc
clc
ret
mov
movsb
repnz
stos
mov
dec
mov
pusha
push
jle
cmp
jecxz
push
je
jge
sarb
jg
bound
jnp
arpl
daa
clc
int3
int
push
dec
fisubs
ja
mov
dec
push
cmc
push
push
fimuls
mov
mov
and
and
cmpsl
insb
jp
xor
in
jg
or
mov
sub
fwait
scas
test
push
movsb
gs
test
inc
ret
mov
jae
sbb
fildll
adc
rcll
out
ss
mov
or
xchg
jnp
mov
aad
mov
adc
xor
negb
notb
mov
sarb
xorb
sub
mov
and
add
pop
loop
push
push
jmp
mov
xchg
add
push
into
in
movsb
mov
fdivs
sub
outsl
outsb
mov
mov
mov
decb
aad
in
dec
mov
cmp
jne
mov
movsb
sbb
push
sub
or
jnp
enter
push
js
adc
lods
das
daa
dec
in
add
pop
ja
pop
js
lcall
xor
cmp
and
mov
xor
jge
out
lods
imul
out
sbb
inc
gs
mov
xorb
aaa
lock
sub
insl
das
xchg
gs
adc
cmc
or
jo
mov
add
xlat
mov
or
lock
cli
cmp
pusha
aaa
inc
pop
dec
pop
mov
vpmulhuw
lahf
ss
stos
int3
xor
inc
mov
addr16
out
jo
test
push
cmpsl
idiv
push
decl
push
pop
push
and
mov
mov
dec
bound
mov
test
mov
push
shrb
inc
push
and
push
lock
adc
xor
rcrl
out
xchg
ss
test
insb
inc
xchg
fsubrs
repz
jl
jp
add
loopne
xchg
lahf
dec
aam
imul
test
les
dec
or
arpl
stos
jns
loope
jbe
imul
inc
jb
sub
inc
pop
mov
add
push
aam
cmpsl
addr16
push
in
in
cltd
inc
lret
or
movsb
pop
sbb
sahf
and
repnz
cmp
cmp
pop
call
shr
adc
push
sub
jge
add
je
sarl
add
pop
mov
pop
aam
add
pop
test
pop
cmpsb
mov
jo
or
fcmovnbe
repnz
sbb
lods
xor
iret
imul
inc
push
popf
adc
dec
adc
xchg
fdiv
pop
rorl
not
sbb
dec
fcmovnu
test
jp
dec
xchg
fsts
arpl
and
mov
mov
jae
lods
out
in
lea
xchg
jne
mov
jmp
ja
sahf
clc
jno
icebp
lods
dec
jne
call
and
orl
cmp
aam
cwtl
sbb
mov
and
push
sti
push
rorb
mov
push
dec
or
arpl
loop
rcrl
mov
push
stos
jne
pusha
cmp
sub
stos
jbe
push
dec
jb
mov
add
push
inc
sub
test
cld
cli
sub
pop
and
push
xor
imul
pop
push
insb
dec
rcl
cmpl
pop
xor
add
or
add
lock
roll
cmp
sar
adc
jmp
pop
into
push
add
push
jo
xor
outsb
xchg
add
adc
push
repnz
cmpsb
mov
in
jmp
inc
iret
call
mov
faddl
call
and
push
xor
mov
add
mov
push
daa
hlt
xlat
add
cmp
addb
cli
push
xor
or
inc
dec
fisubrs
and
mov
jge
push
mov
outsb
mov
pop
mov
clc
insl
lods
je
ret
outsb
sbb
pop
mov
mov
pop
rcl
add
and
cmp
xchg
dec
imul
push
sub
cmp
test
test
outsl
ret
lods
stos
sti
mov
iret
cmp
icebp
adc
push
or
fcompl
pop
iret
fs
enter
ja
outsb
mov
clc
insl
lret
scas
inc
mov
xor
push
ja
xor
fs
jecxz
in
clc
shll
sub
jp
int
inc
repz
mov
mov
fisttps
les
adc
sbb
lcall
sub
mov
push
scas
in
js
sahf
or
loop
mov
push
mov
inc
pop
ljmp
xor
insb
loop
test
pop
je
cmc
in
lret
xor
dec
xchg
pop
dec
jae
rcll
jnp
shl
mov
mov
and
mov
mov
or
cmovle
mov
fdivl
push
das
add
dec
mov
outsl
int3
pop
mov
jle
repnz
push
or
mov
mov
xor
push
adc
push
dec
add
add
rorl
jp
and
mov
jle
data16
dec
add
shrl
mov
xor
jno
fsubr
sbb
sahf
je
cwtl
sbb
cmpsb
xorb
cwtl
push
push
sub
aaa
cmp
ret
je
cmp
add
dec
fsubrl
inc
insb
mov
push
xchg
or
lds
sarb
or
sub
and
push
jle
push
mov
add
pop
ffree
out
xor
mov
ja
nop
popf
aaa
fucomip
sbb
or
fcomps
test
adc
xchg
xlat
pop
cmp
and
mov
shr
adc
cmpb
add
in
sub
mov
cmp
xor
inc
shrl
mov
jb
and
cmpsl
fwait
inc
push
and
fnstcw
idivl
into
jo
mov
or
loopne
dec
mov
xchg
mov
cltd
cmp
inc
scas
jo
out
lods
out
inc
jo
adcb
outsl
lcall
mov
lret
icebp
movsb
out
jl
push
mov
lahf
mov
pop
xor
and
movsb
mov
xchg
mov
add
shrl
adc
lock
cmp
call
mov
mov
int3
inc
push
loopne
out
jle
inc
mov
sub
mov
js
fistpll
shll
inc
and
push
sub
test
les
clc
add
xor
sub
xchg
xchg
out
outsb
inc
out
repz
call
and
and
pop
jg
add
movsb
cld
jne
mov
pop
fisubs
mov
mov
mov
xor
fisubrs
cwtl
or
dec
push
in
es
cmp
sbb
pop
xchg
lret
push
aas
jmp
addr16
data16
dec
faddl
xchg
cmpl
push
jp
mov
rcrb
sbb
inc
lcall
mov
xchg
fcompl
roll
dec
loopne
bound
test
jns
add
cmpsl
int
fwait
jle
sub
jno
icebp
xlat
mov
test
push
jecxz
cmp
fs
push
and
dec
inc
aad
sub
lock
or
popf
mov
mov
jbe
outsb
ret
shll
xchg
dec
pop
lds
pop
xchg
adc
push
inc
mov
xor
fstps
fistpl
ret
jno
outsl
jb
insb
mov
adc
pop
lods
mov
std
out
mov
inc
xor
dec
xor
or
add
mov
jle
outsl
xor
mov
mov
lea
shlb
jnp
rcrl
dec
dec
or
push
cld
ret
jge
dec
mov
fnstcw
stos
xor
loopne
adc
xchg
faddl
inc
xchg
or
jle
inc
jae
mov
orl
pop
cmpsb
in
mov
or
fucomi
stc
add
push
loopne
cmp
leave
cs
mov
fisubrl
and
dec
in
les
lahf
jmp
mov
cmp
jo
sub
call
icebp
cld
insb
loope
pop
mov
out
shr
subb
sub
shl
insl
lods
sub
jg
push
sub
in
mov
rcrl
sbb
push
mov
gs
jns
les
jae
shll
int
mulb
cmpsl
aaa
fdivrl
stos
out
mov
push
xchg
sub
test
sbb
mov
dec
adc
lcall
xor
and
clc
lds
pop
jecxz
mov
out
mov
lods
cli
shl
mov
dec
push
push
daa
outsl
or
jmp
dec
push
rclb
mov
mov
mov
aam
mov
je
pop
outsb
mov
adc
mov
inc
mov
gs
test
decl
mov
dec
jge
aam
mov
push
jo
pop
xchg
and
mov
testb
fisubs
inc
cli
jns
jge
mov
sar
movsb
pop
jecxz
lret
jle
cli
fwait
pop
jge
dec
jg
je
cmpsl
lret
fldt
fcmovb
fstl
push
imul
fs
je
lcall
in
xchg
stos
aaa
or
mov
hlt
inc
add
mov
mov
pop
aas
mov
andl
dec
notl
sbbb
lods
test
pop
sbb
les
out
loop
dec
popa
nop
clc
ror
xchg
lret
sub
out
je
jbe
sbb
fcmovnb
cmpsl
inc
imul
mov
loopne
mov
adc
xor
lret
inc
cmp
mov
xchg
pop
insb
push
and
adc
inc
inc
push
sbbb
pop
fadd
mov
sbb
or
fnstenv
pop
adc
ja
xlat
jge
xchg
pop
dec
repnz
addr16
xchg
ret
mov
rclb
loope
pop
daa
int
ret
out
and
add
push
popf
outsb
lods
adc
xor
add
xor
ret
and
sbb
adc
out
xorl
lret
push
cld
add
add
mov
mov
sub
pushf
sbb
pop
hlt
xlat
jle
imul
cmpsb
push
pop
movsl
sbb
lcall
cs
icebp
xlat
out
rcrl
sahf
dec
shrl
shlb
ret
inc
adcl
inc
mov
dec
dec
lret
or
roll
mov
lcall
outsb
pop
adc
jp
mov
insl
dec
adc
push
popf
xor
arpl
mov
jb
jecxz
push
add
push
xor
xchg
inc
or
je
out
mov
shlb
jne
adc
inc
add
pop
test
popa
sbb
sbb
sbb
outsb
daa
ret
jb
add
xchg
pop
sub
cld
inc
push
mov
movsb
jp
movsl
clc
push
sahf
ja
imul
dec
xor
xchg
ret
fiaddl
adc
pop
cwtl
xor
cmp
inc
arpl
push
cmp
mov
pop
mov
data16
mov
fiadds
hlt
fbstp
dec
jb
je
sahf
cmp
mov
dec
out
mov
dec
add
popa
jg
ret
mov
ljmp
push
test
loop
loop
arpl
les
mov
pop
xchg
pop
in
test
xchg
cmp
adc
push
push
subb
dec
and
fiaddl
add
fsubrl
pop
pop
mov
cmp
repz
mov
pop
repnz
mov
mov
xchg
xchg
add
jae
popf
lret
addr16
stos
lret
insl
sbb
movsb
movsl
je
pop
iret
pop
or
adc
les
fs
jne
mov
mov
mov
push
jne
xor
dec
ss
ds
sub
fsubrs
mov
mov
xor
out
add
sub
sub
adc
icebp
mov
adc
mov
add
in
add
sbb
jle
fldt
lods
push
shl
pop
movsb
dec
mov
sarl
or
pop
xchg
movsb
adc
dec
in
xor
insb
cmp
repnz
cltd
push
bound
mov
mov
aaa
jbe
cmpb
fsubrl
pop
sti
jmp
push
les
stos
xor
sarl
add
fcompl
mov
push
mov
out
mov
incb
cli
cmovb
call
imull
xchg
mov
inc
call
aad
out
popa
inc
sbb
daa
stc
cmc
inc
pop
clc
jecxz
inc
ljmp
sub
daa
fs
sahf
test
aas
iret
insb
jg
cmp
fdivl
xchg
daa
addl
shll
jo
ret
mov
pop
ljmp
loop
mov
js
enter
movsl
jno
add
jecxz
sub
out
pushf
fwait
jp
or
mov
mulb
sarl
ds
xchg
xchg
subb
enter
xacquire
repnz
pop
das
jnp
ss
push
in
out
cmpb
xor
pusha
xchg
std
bound
cmp
and
push
xchg
mov
shll
in
push
fcmovnb
mov
test
mov
loop
mov
jg
imul
jb
sub
jg
adc
sbb
in
lretw
inc
sub
or
movsb
adc
jl
sarl
push
cld
rcr
enter
mov
adc
dec
cmp
pop
add
mov
add
roll
movsl
cmp
and
inc
adc
push
cmp
mov
ret
mov
inc
xor
popa
dec
loop
xchg
loopne
mov
in
mov
sbb
cli
mov
inc
aad
mov
shl
sub
mulb
jbe
rcll
rcrl
push
stc
dec
mov
jns
xchg
push
cltd
sub
lods
xor
aas
xor
sbb
mov
in
loopne
movsb
lahf
in
enter
cmp
lods
mov
adcb
and
mov
add
bound
out
sub
mov
inc
mov
jb
push
pop
mov
sbb
mov
add
dec
mov
bound
iret
push
les
inc
sbb
repnz
xchg
rorl
js
push
and
jmp
mov
ficoml
lds
popf
outsl
div
lret
cmpl
sub
push
pop
cmc
rclb
jl
inc
cli
int
adc
ds
pop
outsb
jnp
loope
mov
sbbl
cwtl
sbb
mov
cmp
les
jbe
insb
cli
add
pop
mov
ljmp
rorl
data16
dec
xlat
adc
loop
pop
sti
mov
daa
sub
ret
jle
push
mov
movsl
gs
or
mov
popa
fbld
adcb
and
les
pop
shlb
cli
lock
push
cmp
popf
jbe
xchg
or
rolb
les
rcl
mov
mov
dec
and
cmpsl
aam
jo
jecxz
jge
pushf
mov
and
or
loop
adc
fdiv
pop
pop
mov
mov
les
leave
dec
leave
mov
cmp
pop
cmpsl
rorb
jecxz
ret
arpl
in
jno
xor
pop
leave
inc
mov
fcoml
lahf
ds
cmp
push
stos
and
adc
icebp
cmp
jp
loopne
mov
add
xor
dec
negb
pop
sub
sub
ljmp
loope,pt
rcrb
mov
in
das
out
jle
les
loopne
add
sbbl
out
push
sub
pop
sarb
mov
loopne
lock
and
aaa
cmovp
mov
lahf
xor
pop
sbb
or
mov
jnp
and
xor
or
lods
and
ja
mov
enter
ret
lock
decl
pcmpeqd
in
dec
jle
out
mov
outsb
sub
mov
add
mov
sti
sbb
mov
fsub
push
aas
push
cmp
mov
adc
pop
into
dec
dec
xor
sub
rorb
dec
jmp
adc
leave
jmp
jmp
cmp
roll
add
sbb
add
test
cmp
sbb
sub
cmpsb
dec
sub
xor
fsub
adc
pop
add
loopne
cmp
aam
adcb
mov
pop
fcomi
bound
mov
repz
jnp
shll
push
add
in
fwait
mov
call
shll
inc
pop
iret
mov
jmp
cmp
jp
jb
int3
mov
addr16
mov
pop
addr16
adc
fiaddl
jb
cmp
pop
bswap
lret
cld
fisttpll
stos
mov
pop
jbe
into
fnstcw
mov
lret
idivl
pop
inc
or
stos
push
push
pushf
mov
aaa
rep
lods
ret
mov
aas
dec
and
shlb
sbb
test
arpl
insl
lcall
andb
test
jle
add
or
insb
insb
mov
inc
in
jnp
lods
mov
mov
xchg
mov
lret
jo
mov
out
lahf
pusha
adc
mov
rcl
pop
es
mov
push
ror
mov
add
loop
ja
sahf
dec
push
sub
test
add
lods
pop
test
push
jne
mov
ljmp
xor
insl
aam
insb
add
push
inc
ret
leave
lret
outsl
clc
shll
pop
js
dec
orb
into
and
push
aas
jb
popa
movaps
jp
or
lds
loopne
mov
shlb
sub
insl
xor
fldl
or
popf
mov
test
inc
fdivrl
jo
lea
dec
push
mov
out
lret
push
mov
imul
jne
scas
xor
hlt
mov
cmc
pusha
test
pop
inc
insb
inc
xchg
inc
adc
std
cld
popf
jb
pop
shlb
adcb
out
out
lret
inc
jnp
push
pop
mov
out
scas
push
cmc
out
sbb
out
push
fiadds
pop
lret
clc
mull
mov
je
loopne
out
icebp
mov
jge
xchg
mull
test
sub
add
lret
mov
sbb
mov
rsm
add
cmp
mov
dec
popa
adc
in
mov
and
dec
sbb
mov
sub
ret
inc
out
andb
lods
fcomp
ja
test
aas
nop
imul
mov
mov
fstpl
xor
fwait
inc
sub
push
adc
mov
iret
xchg
rol
mov
jl
je
pop
xchg
push
push
lahf
test
xor
ret
cmp
lods
lret
add
addr16
loop
mov
mov
lds
out
hlt
push
je
inc
push
inc
adc
lods
popf
xchg
sbb
xor
lret
pushf
xchg
std
aam
lret
mov
mov
mov
arpl
loop
add
sbb
sbbl
or
mov
or
mov
sub
out
scas
ficompl
inc
inc
pop
pusha
add
jb
enter
out
xlat
scas
outsl
call
pcmpgtw
adc
ret
shl
ljmp
je
enter
pusha
roll
jnp
mov
push
jg
ret
shr
pop
mov
nop
fnstcw
mov
lea
bound
inc
rorl
dec
jne
ljmp
or
xor
shll
dec
add
icebp
push
pushaw
loop
stos
orl
add
pcmpeqd
dec
add
in
popa
je
jg
inc
inc
add
mov
sub
push
sbb
test
mov
mov
jecxz
add
adc
clc
mov
lret
dec
and
js
pmuludq
xor
pusha
adc
or
xchg
push
sub
mov
dec
out
insb
fcoml
fmuls
clc
fs
jp
fstps
jg
lcall
pop
push
call
rcrb
in
int
lock
stos
mov
add
mov
and
rol
leave
pop
jp
ret
std
dec
jle
fistl
ss
clc
lahf
mov
int
inc
xlat
mov
lret
mov
cmp
mov
push
xchg
pop
jge
jl
rol
ret
repnz
mov
stc
xchg
fwait
lea
dec
repz
lea
cld
shrl
shlb
sub
xchg
mov
xor
sarb
mov
testl
push
cmp
mov
mov
in
sub
pusha
adc
and
insl
ret
jno
mov
push
cmp
mov
sar
mov
pop
sahf
mov
shl
jbe
in
shll
sub
mov
and
mov
add
inc
mov
xchg
mov
lret
rcrl
sbb
mov
mov
ror
and
movsl
stos
push
out
cld
out
cs
jno
fs
adc
popa
mov
or
stc
mov
stos
adc
and
cmp
push
xor
loope
jb
test
imul
lret
testb
rol
ret
bound
rcl
aam
test
loopne
aaa
push
es
inc
add
lods
inc
dec
in
cmpsb
inc
pop
jl
pop
inc
out
test
cmp
outsb
aaa
bound
add
hlt
lret
cmp
mov
inc
sahf
movsb
cs
push
je
gs
fcomps
call
sub
je
ret
dec
int3
ret
test
dec
lea
sub
mov
or
mov
mov
andb
popa
daa
or
jg
inc
push
jno
mov
in
js,pt
add
into
inc
adc
mulb
xor
decb
loopne
push
sbb
pop
pop
and
or
scas
icebp
clc
ljmp
outsb
or
jle
push
je
xchg
movsl
mov
push
lds
jb
into
mov
sti
inc
dec
inc
pushf
mov
arpl
shl
in
add
das
fisttpl
arpl
clc
push
cmpb
jb
aaa
rcr
loop
push
jge
mov
mov
pop
loopne
hlt
mov
add
inc
sbb
dec
jne
xlat
pop
adc
or
xor
cmp
js
das
push
cmp
dec
mov
push
push
mov
andl
xchg
sti
or
cmp
cld
repz
mov
dec
in
pop
rcrl
mov
lahf
cmp
jge
mov
rcrl
pop
jne
loopne
or
jg
rcll
cltd
leave
idivl
shlb
cli
bound
aas
mov
pop
mov
mov
or
fdivrl
adc
cld
ds
push
xor
jno
sub
or
sti
je
inc
shll
push
push
fldl
orl
mov
outsb
lods
pusha
jle
dec
push
jae
pop
xadd
fisubrl
movsb
xchg
mov
icebp
je
enter
test
pop
das
cli
and
stos
pop
test
mov
sbb
and
cmp
call
add
sub
ss
in
lods
add
cmp
aam
mov
out
jecxz
mov
decb
xlat
cmpsb
pop
loopne
fwait
mov
popa
pop
bound
orb
test
jnp
daa
sbb
push
mov
push
cmp
mov
xor
cmp
mov
xor
scas
dec
pop
aaa
add
dec
mov
setbe
push
lret
aad
jne
pusha
loop
pop
jb
jg
popa
lock
xor
and
push
clc
and
xchg
stos
pop
jp
or
and
xchg
bound
pop
pop
in
mov
lea
clc
lea
fists
fs
xchg
in
out
lret
push
xchg
inc
hlt
xor
mov
and
aam
test
xchg
hlt
inc
dec
add
in
push
arpl
icebp
sbb
fistl
pusha
clc
aas
cltd
inc
into
pop
call
insl
mov
jecxz
stos
rol
cmp
aad
xor
xor
lret
mov
push
or
or
fsubs
out
rcrl
outsb
mov
jbe
sub
clc
mov
sub
push
sbb
hlt
icebp
outsb
loop
pop
sahf
jb
sbb
inc
fldt
and
mov
int
inc
stos
adc
jp
mov
aas
cmp
mov
mov
popf
ds
push
add
mov
push
adc
add
fstl
daa
cs
sub
push
mov
fcoms
out
cmpsb
fildl
fists
or
lods
repz
mov
sbbb
dec
fidivs
fldpi
popl
testb
jp
push
inc
fisubrl
jnp
jnp
mov
jmp
fiaddl
dec
test
cmc
add
and
repz
outsb
into
xchg
mov
insl
jecxz
aaa
pop
ret
jecxz
dec
mov
and
popf
testl
cld
mov
fsubrl
dec
rol
cld
cmp
insb
mov
out
lods
mov
pop
mov
inc
outsb
hlt
add
scas
dec
adc
bound
dec
cmp
loopne
jle
pop
and
jmp
pop
aam
pushf
pusha
lret
fiaddl
push
cmp
and
inc
in
out
lret
dec
gs
mov
fmuls
divb
pop
scas
cltd
jmp
pop
mov
dec
roll
add
mov
stos
mov
lods
mov
jno
mov
leave
mov
mov
in
leave
mov
mov
ret
jge
add
or
or
and
xor
aas
xchg
std
adc
adc
inc
cmpsl
scas
pop
popa
in
ret
push
insl
cmp
inc
mov
mov
cmc
adc
shll
out
push
cmp
cwtl
shlb
scas
pusha
data16
mov
in
leave
arpl
je
jnp
jecxz
and
cs
xchg
pop
cmp
pop
nop
xor
lods
std
fdiv
ficompl
addr16
ss
xchg
out
xor
icebp
add
lds
adc
repnz
adcb
add
flds
mov
dec
enter
test
push
mov
test
inc
push
sahf
mov
jg
jns
imul
or
lods
hlt
mov
mov
adc
or
add
xchg
insl
jo
je
push
fisubl
out
cli
jo
xchg
scas
mov
scas
cmp
test
shlb
bound
add
outsl
pop
cmp
popa
loope
incl
into
mov
popf
clc
sarl
xchg
xchg
aaa
out
in
mov
pop
mov
mov
scas
repz
aas
dec
add
fsts
jb
repz
faddp
push
pusha
jns
jae
mov
adcb
loopne
in
sbb
enter
lods
xchg
pop
loope
mov
push
popa
push
jb
mov
sbb
mov
das
sub
ljmp
call
insb
xchg
xorb
sbb
pop
data16
jns
or
into
shlb
mov
add
mov
testb
mov
mov
jmp
xor
add
inc
xor
mov
je
mov
push
iret
inc
cs
aad
je
mov
pop
sarb
in
mov
dec
lahf
lahf
adc
popa
cmpsl
and
xor
jecxz
sti
ret
call
pusha
jnp
imul
sahf
cmpsl
ret
cmp
int3
adc
xorl
int3
pop
xchg
mov
test
xor
adc
jp
mov
dec
mov
mov
pop
jae
hlt
xchg
popf
and
dec
mov
mov
mov
mov
xchg
inc
pop
aas
mov
imul
dec
cmc
sbb
mov
cmp
mov
mov
aam
adc
jbe
mov
adc
push
insb
mov
or
mov
add
test
fldenv
cmpsl
daa
lcall
jne
out
push
mov
push
out
cmpsb
and
cltd
fbstp
jmp
leave
nop
inc
dec
cld
ss
repnz
adc
inc
mov
aaa
imul
sbb
xchg
push
fadd
adcl
fyl2x
idiv
sti
daa
pop
and
mov
call
icebp
lds
call
sub
mov
arpl
adc
inc
push
mov
je
pop
mov
aam
fdivrs
movsb
aas
ret
sub
cmp
lock
jge
push
stos
sbb
addr16
push
aaa
aas
out
gs
xchg
cmp
dec
arpl
mov
jmp
push
arpl
add
adc
gs
iret
es
jmp
arpl
andb
mov
nop
loop
shrl
push
div
cmc
and
xor
dec
sbb
sbb
mov
pop
loop
je
jb
out
add
lods
cmp
and
loope
punpckhbw
rcrb
cmp
mov
popf
cltd
or
sbb
pop
lock
xchg
stos
js
dec
pop
insl
sbb
cmp
scas
scas
dec
decb
ret
js
mov
outsl
add
dec
inc
mov
pop
adc
mov
jo
cli
pop
pop
scas
and
jp
dec
sub
ja
push
loope
fsubrs
mov
in
mov
cmpsl
adc
scas
mov
cs
mov
mov
lock
shrl
xlat
hlt
pop
sbb
xor
sahf
faddl
mov
xor
and
mov
clc
lret
out
mov
in
mov
pop
xor
pushw
imul
inc
ror
mov
cmpsl
xor
les
inc
xchg
gs
adc
xor
das
mov
bound
add
or
or
ret
lea
inc
inc
das
mov
mov
stos
into
push
jo
mov
cmp
in
fbld
cmp
rcll
xchg
sub
outsb
shrl
test
add
stc
jne
stos
arpl
push
cli
fnsave
shr
cmp
and
sub
ljmp
ljmp
cmpl
loop
pop
in
loop
push
or
fdivs
sarl
xchg
bound
push
mov
inc
jle
test
out
rep
mov
xor
call
enter
shrb
push
sbb
adc
mov
int3
add
add
or
mov
test
sub
je
test
ret
arpl
mov
insb
mov
hlt
inc
xor
sarl
push
or
rclb
jecxz
dec
fcmovnb
ds
lods
xchg
cmp
or
movsb
cmp
pop
loope
add
scas
lods
sahf
mov
pop
mov
dec
out
xchg
rcll
test
loope
jge
sub
shll
lcall
fs
or
loopne
sti
out
jo
add
adc
out
cld
test
pushf
and
sahf
mov
sbbl
mov
xor
cmp
jne
arpl
shrl
loop
mov
leave
sub
mov
inc
rorb
or
mov
jb
pop
jno
pop
jne
mov
cmp
and
js
mov
call
mov
mov
test
out
sti
pop
lret
mov
and
xor
add
test
roll
mov
mov
jmp
mov
add
mov
push
pushf
fbstp
rep
mov
cmp
sar
add
and
mov
lret
repz
fcomi
shlb
aad
jb
cmp
add
ja
lea
push
push
movsb
jecxz
das
gs
ret
addl
fistps
pushl
in
fisubl
int
push
jne
outsl
xchg
je
push
adc
and
mov
dec
imul
fdivl
inc
jbe
xlat
test
cli
addr16
xchg
push
fdivrl
call
xchg
inc
jle
pop
mov
fisubl
pop
lds
movl
xor
push
out
xchg
jmp
push
enter
iret
add
lock
adc
mov
arpl
and
ret
shrl
out
adc
mov
sub
mov
in
mov
lret
in
jne
pop
add
ret
xchg
lock
scas
mov
fiaddl
je
dec
sbb
outsl
pop
inc
mov
lods
insb
fdivrl
movsb
sub
adc
and
push
or
js
xor
sbb
out
mov
enter
jmp
or
adc
mov
mov
push
xchg
fisubl
mov
mov
idivl
xchg
push
cmp
mov
inc
sub
imul
cwtl
mov
push
xchg
mov
fildl
jg
mov
fcomps
pushf
sbb
mov
mov
pop
xor
mov
scas
outsb
push
jne
jo
jnp
outsl
xchg
xchg
jle
aaa
sbb
sbb
dec
add
fbstp
jb
add
sbb
lret
imul
mov
call
pop
rcll
fstp
mov
mov
repnz
pop
sub
fisttpl
lea
bnd
xlat
outsb
std
jnp
pop
push
movsb
xchg
jnp
xchg
jecxz
loop
test
test
or
cli
flds
aas
dec
push
lods
mov
cmp
out
popa
adc
sbb
data16
in
sahf
and
outsb
add
and
and
cmp
int3
iret
xor
out
insb
jle
mov
cmp
pop
add
cmpsl
insl
arpl
pop
mov
cmp
xor
loopne
xchg
fadds
pop
sub
mov
mov
fmul
and
in
push
mov
lret
sub
pop
inc
xlat
adc
mov
jmp
xor
or
or
or
out
inc
test
std
inc
out
loope
cmc
jo
dec
sarl
out
mov
rcrb
les
idivb
aas
pop
push
inc
mov
pop
sbb
add
inc
imul
mov
mov
lds
adc
add
sbb
pop
andb
sub
pop
pop
inc
inc
movsl
lret
jae
cmp
mov
std
and
rorl
inc
test
mov
pop
mov
jp
cltd
test
mov
mov
jne
mov
sbb
mov
sbb
sbb
sbb
jno
lods
inc
sbb
mov
negb
and
cli
movsl
push
cmpb
into
push
ficoms
add
jp
sbb
outsb
pushf
mov
lret
cld
and
push
mov
fimuls
sarb
in
pop
mov
loopne
xchg
add
push
mov
mov
lods
and
lret
mov
lea
push
add
je
ficomps
mov
cmp
jnp
push
add
mov
orb
mov
xor
ret
hlt
sbb
mov
ret
imul
into
imul
push
add
adc
jb
fcmovnb
je
mov
mull
stos
push
and
xchg
loope
xchg
ss
push
cld
shll
ljmp
jno
rcrb
hlt
lods
jnp
pop
notb
imul
aam
dec
pop
or
in
dec
and
clc
sbb
xor
test
mov
jae
fs
das
repnz
in
out
insl
sub
cs
xchg
sti
insb
insb
push
shl
les
mulb
dec
or
stos
mov
push
mov
arpl
adc
jecxz
es
testb
add
scas
andb
mov
add
lret
es
rcrl
or
mov
call
repnz
or
sbb
in
lock
pop
jg
aas
data16
ficomps
rcl
jae
pop
push
and
bound
push
mov
sbbl
push
out
ja
jnp
jle
test
test
iret
jbe
dec
inc
mov
std
mov
mov
add
fsts
or
mov
xor
std
stc
cmpsb
mov
pop
push
xor
cmp
add
sub
ss
cwtl
dec
xchg
push
ret
jecxz
sbb
hlt
icebp
ljmp
push
mov
mov
inc
lock
mov
fwait
dec
nop
push
repz
mov
cmp
data16
add
out
or
fisttpll
jo
into
test
rcll
repz
xor
in
loop
add
jb
lock
jo
push
sahf
lods
idivb
sub
jp
pop
mov
addr16
lock
cld
les
mov
and
loopne
std
inc
cmp
pop
pop
mov
mov
mov
test
add
out
outsb
stos
mov
divb
fcoml
push
mov
mov
pushf
cltd
adc
fsubs
out
addb
enter
imul
fistps
sub
push
pop
sbb
jle
jnp
mov
leave
pop
jle
mov
rolb
out
cmc
push
out
or
lds
outsb
push
inc
std
sbb
add
add
pusha
int
cmp
mov
mov
adc
add
test
cli
jne
cld
testb
sub
loopne
sarl
loop
idivb
sbbl
clc
rep
push
stc
pop
or
fstps
push
cwtl
icebp
in
jne
out
mov
push
ret
and
addr16
xchg
shll
jg
arpl
lock
mov
mov
shl
mov
sbb
and
icebp
scas
fildl
sbb
xor
cmp
sub
xlat
sbb
lock
pop
jp
jl
jecxz
rcrl
std
inc
std
std
jg
or
jecxz
and
repnz
cmp
movsb
sbb
orl
repz
mov
xor
sti
jge
ss
fcmovb
xchg
out
jno
in
scas
pop
loope
and
out
mov
mov
and
inc
cli
lret
addl
mov
sbb
jmp
and
outsb
xchg
jp
into
and
push
sub
inc
mov
test
pop
jmp
mov
dec
scas
lods
out
jbe
in
sub
enter
test
mov
in
cs
push
fs
lods
mov
inc
sub
xor
mov
outsb
jmp
cmp
add
mov
adc
out
out
aas
cltd
loope
xor
pop
mov
mov
es
sub
mov
lock
sub
mov
ret
xchg
js
sub
outsb
jle
jge
mov
fisubrs
cld
and
mov
inc
mov
mov
popa
sbb
setle
rcrb
push
lods
mov
into
leave
add
mov
lock
out
daa
xor
rol
outsl
pop
cld
fcomip
fs
addl
outsb
lret
add
adc
repz
icebp
mov
cmc
or
je
xchg
sbb
ja
pop
loopne
cmc
jmp
pop
fnstcw
aaa
cld
push
dec
jne
xor
test
out
stc
stos
insl
lahf
xchg
into
loopne
pop
pop
movsb
dec
lods
xchg
aam
bound
lret
dec
incl
pop
fistps
loope
xor
push
add
data16
push
pop
xor
shll
ret
cld
lock
mov
ds
cmp
enter
daa
jbe
out
clc
lods
mov
add
xorb
add
fidivs
lock
push
mov
jecxz
push
call
cmp
mov
jno
andb
in
aaa
hlt
dec
stos
mov
mov
mov
sub
insb
sbbb
cwtl
and
push
mov
dec
out
inc
sbbb
inc
adc
sbb
add
sbb
fs
rcll
in
insb
std
mov
pop
movsb
pop
mov
mov
push
add
bound
pop
subb
es
jne
ret
rorl
sbb
xor
cmp
decl
or
xchg
cs
out
push
sbb
xchg
fdivl
xchg
mov
add
dec
pop
jns
insb
mov
cwtl
jnp
xlat
mov
mov
pop
stos
popw
rolb
pop
mov
cmp
daa
cli
stc
enter
mov
iret
fs
push
push
mov
punpcklwd
inc
xchg
xor
aaa
stos
fsubr
gs
xor
pop
sub
cmpsb
mov
pop
mov
xlat
fisubl
xchg
dec
fisubrs
test
and
cld
xlat
mov
repz
or
test
adc
fs
mov
clc
mov
mov
out
fsubs
jne
mov
cmp
push
inc
fisttpl
popa
fcompl
mov
stc
hlt
push
cmp
pop
je
pop
test
popf
das
jp
loop
cmpsl
into
sbb
cmpl
andl
dec
sbb
lret
push
das
cmp
fwait
mov
lcall
cwtl
testb
popf
mov
mov
or
push
or
jg
stos
pop
fsubrs
jb
mov
pop
mov
aam
icebp
pop
outsb
stos
mov
push
dec
cli
pop
dec
mov
stc
movsb
mov
inc
addr16
sub
push
inc
push
cmp
mov
and
pusha
push
mov
rcrb
mov
mov
mov
cmp
ds
mov
imulb
jecxz
pop
hlt
sarl
mov
daa
pusha
xchg
out
xchg
push
mov
ja
sar
adc
mov
or
call
push
iret
int3
fsubl
mov
data16
fwait
mov
pop
add
ret
lret
mov
mov
dec
popa
enter
clc
sub
stc
pop
scas
test
jne
cmpsb
adc
dec
outsb
fdivrp
push
fdiv
shlb
or
sub
push
inc
add
sub
stos
or
mov
add
jecxz
pop
mov
jo
dec
xorb
icebp
xchg
popf
in
sub
pusha
pop
mov
xor
or
dec
mov
into
adc
int3
dec
and
or
lea
or
add
popf
clc
inc
xorb
adc
inc
sub
ljmp
rorl
mov
std
loopne
adc
mov
ret
rcl
out
dec
or
mov
lahf
lods
je
out
sbb
je
mov
lret
ret
lock
push
negl
pop
cmp
lret
dec
xor
and
lock
and
xor
mov
roll
insl
push
repnz
dec
xchg
arpl
jbe
ret
cmp
jge
dec
je
dec
imul
lea
sbb
jmp
mov
jmp
cmpsl
add
das
cmc
mov
cmp
shl
or
push
push
or
sbb
jae
movsl
int
repz
imul
lods
sub
jge
mov
add
imul
int
ret
pop
inc
jae
or
mov
jae
sbb
push
adc
lods
inc
test
pushf
insb
stos
push
cli
jnp
mov
pop
outsb
mov
pop
mov
in
mov
sbb
loope
add
fisttps
lock
fstp
cmp
int
test
lahf
xchg
mov
mov
fdivs
outsb
loopne
sbb
adc
push
outsl
xchg
lret
jecxz
adc
jg
mov
xchg
mov
or
inc
push
sahf
add
mov
fadds
stos
mov
push
test
or
or
jns
jo
scas
sarb
clc
cli
into
out
mov
nop
mov
pop
xchg
cmp
xchg
popa
push
aad
les
inc
cmp
movsb
mov
dec
mov
mov
jecxz
push
cmp
jge
into
out
jnp
dec
clc
daa
leave
jmp
icebp
jno
mull
out
jb
jmp
ficomps
scas
in
scas
adc
lea
ja
xor
mov
pop
add
std
lods
test
adc
mov
out
fisttpll
orb
test
aad
cmpb
cs
insl
jo
lods
xchg
fs
ror
int3
lock
fxch
pop
cmp
xchg
cltd
insb
pop
push
xlat
scas
sti
pop
movsb
pop
inc
test
jmp
rcll
ja
push
out
push
sahf
mov
pop
mov
cwtl
push
xlat
dec
mov
std
or
sarl
xchg
imul
imul
test
add
cmpsb
imul
xchg
das
out
data16
jle
xchg
jbe
inc
jbe
add
mov
jp
fdivrl
pusha
sbb
call
ret
dec
jne
sub
sti
jle
xchg
jb
push
ljmp
rcl
out
lahf
xor
fildll
dec
jno
inc
outsb
popa
jg
pop
add
aaa
adc
mov
les
insl
cmp
mov
int3
sarl
jl
les
and
add
incl
pop
loop
fucom
inc
xchg
inc
add
cmc
rorl
pop
sub
ficomps
pop
pop
out
movb
mov
aaa
ret
data16
sbbb
mov
fucomip
hlt
mov
addr16
adc
and
pop
jnp
jle
mov
inc
fsubrs
mov
enter
lods
test
stc
sbb
shlb
das
mov
jmp
jle
fs
lret
js
push
mov
rclb
pop
cli
bound
mov
mov
out
into
dec
xor
add
add
hlt
leave
movsb
pop
xor
sahf
mov
adc
pop
mov
jmp
ret
dec
mov
cmpsl
cli
cs
sub
aaa
inc
mov
int3
add
pop
outsb
pop
mov
add
and
sti
and
repnz
push
push
cmp
test
mov
out
cmp
and
jge
cld
dec
xchg
rcrl
pop
stc
sub
push
mov
ja
aam
pop
int3
mov
std
jp
inc
mov
shlb
or
jne
fisubs
std
hlt
mov
sbb
or
addl
andb
xor
sbb
adc
sbb
dec
rcrl
sub
xorl
lahf
mov
pop
mov
cmpb
and
sbb
test
jbe
in
shr
xchg
push
sbb
rclb
andl
pop
xor
inc
add
and
popf
repnz
loope
pop
cmp
je
push
scas
ds
out
or
or
dec
pop
inc
xchg
hlt
leave
mov
js
jecxz
adc
mov
mov
jae
decb
pop
add
jae
inc
loopne
inc
das
push
dec
cs
shrl
cmpsl
xorl
gs
mov
int
jecxz
and
icebp
lods
pop
popf
dec
adc
xchg
js
jb
mov
dec
cmpsl
aam
mov
xor
jecxz
jbe
cs
outsb
lock
mov
xor
inc
lock
in
out
or
lods
add
lock
aaa
jns
jge
and
or
sbb
ds
mov
xchg
and
pop
mov
push
jno
mov
mov
jecxz
mov
and
add
or
daa
sub
ret
adc
insb
dec
inc
mov
jmp
adc
xor
mov
and
mov
fucomp
movb
inc
fnstcw
mov
dec
adc
leave
or
notl
pop
jb
xchg
xor
fcomp
movsl
decb
pushf
sahf
inc
xor
push
mov
push
xor
pop
sbb
sbb
sub
dec
jbe
and
je
add
push
adcb
fimuls
push
daa
clc
test
fmull
mov
xchg
mov
lods
fsubrl
xchg
push
into
scas
pop
scas
popa
adc
mov
fcmovnb
pop
movsb
lock
sar
push
roll
sub
push
in
cmp
jl
mov
pop
sbb
mov
js
mov
test
jge
dec
into
jne
aam
jle
fsub
mov
das
jae
imul
ret
dec
rolb
fwait
cs
pop
mov
sub
icebp
jnp
test
mov
add
stos
mov
es
and
orl
dec
rcrl
jge
int
int3
cwtl
movsb
push
and
ljmp
push
dec
in
aas
jl
cmp
mov
aad
je
enter
cmp
pop
arpl
dec
mov
or
mov
ja
jno
sub
je
mov
xor
mov
fisubrs
pop
cmp
lret
xor
mov
jge
mov
adc
mov
fdivrl
add
xchg
add
ljmp
mov
loop
lret
in
es
mov
sbb
xchg
loope
std
ret
outsb
cvtps2pi
loop
inc
imul
xor
cmpsl
inc
std
sub
add
lods
data16
mov
out
fisubrl
or
shrb
daa
jo
loope
mov
pop
je
cmp
push
pop
popf
mov
dec
int3
sub
icebp
out
in
push
inc
jecxz
and
fxch
test
out
les
dec
and
sub
mov
and
fnstenv
or
iret
push
aad
stc
dec
add
push
movsb
mov
xor
mov
lods
dec
cld
push
xchg
mov
mov
into
es
movl
push
pop
jecxz
mov
ja
lret
push
hlt
lock
pushl
not
xor
jne
ds
mov
dec
lret
xchg
and
lock
cmp
add
shrl
dec
mov
dec
dec
cmp
popl
call
inc
mov
int3
adc
mov
fdivrl
sbb
xor
mov
out
rorl
xchg
cmp
inc
into
xchg
mov
inc
and
mov
hlt
cmc
jb
xlat
inc
jp
repnz
sub
sbb
mov
adc
push
in
sbb
mov
lret
or
icebp
rol
loopne
stos
scas
scas
int3
or
mov
dec
dec
mov
mov
shr
mov
sbb
loopne
fwait
mov
sbb
xor
sub
in
cmp
and
loop
inc
mov
or
inc
xor
notl
mov
cmp
scas
cmp
clc
cli
inc
mov
dec
std
vpmadcsswd
xchg
arpl
sahf
cwtl
arpl
mov
xchg
call
stos
xchg
jmp
insb
test
iret
aas
outsl
jmp
mov
adc
call
out
inc
lock
pop
repnz
into
pop
pop
mov
cmp
dec
les
mov
lods
cmpsl
inc
scas
inc
addr16
or
mov
out
loopne
pop
out
in
into
movsl
adc
sti
ljmp
mov
mov
mov
jge
shrb
jnp
mov
outsb
xor
jne
fildl
mov
imul
mov
mov
push
sbb
jne
imul
mov
cmp
push
adc
inc
rorl
movsb
out
adc
mov
and
je
mov
in
mov
lret
arpl
sub
xor
ret
in
add
ficomps
shll
in
scas
mov
insb
xor
cmp
out
rcrl
jge
add
push
xor
mov
inc
cmp
insl
adc
js
jo
lahf
loope
cmovo
test
dec
insb
into
mov
jne
subb
jp
xchg
sub
ss
lret
cmp
call
pusha
cmp
in
mov
call
sub
insl
inc
ficompl
add
rcll
and
mov
cli
bound
aad
push
adc
xor
push
fistl
outsb
dec
jne
mov
jns
je
lock
inc
shlb
inc
outsl
roll
and
and
dec
inc
sahf
ret
xchg
sub
xor
cwtl
pop
adc
shr
push
push
cltd
ljmp
cmc
icebp
in
inc
in
dec
cs
ret
out
mov
mov
pop
add
negb
xchg
fistps
push
and
arpl
sub
cmpsb
addr16
pop
inc
pop
sub
int3
xlat
or
xchg
and
fcmovnb
dec
hlt
add
lcall
add
int
lahf
ror
mov
mov
icebp
into
mov
aaa
iret
movsb
xchg
mov
loopne
js
scas
lods
push
inc
lret
cld
xor
add
push
mov
je
adc
sbb
add
push
inc
and
inc
addr16
shrb
push
and
js
cld
cmpsl
adc
aad
add
add
hlt
idivl
sub
push
lea
mov
ja
or
arpl
adc
ja
ds
outsb
stos
or
push
pusha
jo
pop
cmp
pop
inc
lret
ljmp
dec
enter
test
add
loope
in
mov
addb
inc
clc
test
test
loopne
das
aam
out
jmp
jge
or
inc
test
fstpt
add
jecxz
in
push
push
mov
in
test
in
jp
and
stc
inc
jns
and
xlat
jg
clc
popa
and
add
in
mov
loopne
rol
add
inc
add
xchg
mov
push
std
jbe
arpl
adc
jge
mov
mov
testl
les
out
mov
inc
rclb
add
xorb
js
loop
xor
sbb
icebp
hlt
and
cld
jns
dec
jmp
mov
loope
add
test
dec
jo
in
add
sti
fs
inc
add
pop
repnz
and
and
add
add
inc
les
mov
inc
loop
add
jecxz
in
cmp
aas
je
xchg
fldenv
xchg
add
pop
push
test
add
jmp
add
loopne
lock
fsubl
add
add
je
loope
test
frstor
jns
sbb
mov
mov
inc
pop
add
lcall
xor
and
jae,pt
les
lahf
stos
arpl
rolb
pop
fbld
bnd
jle
jb
dec
iret
inc
out
mov
loopne
loope
shl
les
and
jecxz
mov
add
ret
jge
mov
jp
add
push
and
mov
inc
loopne
lock
mov
jecxz
and
jecxz
faddp
sti
arpl
shl
je
xchg
fstps
ficomps
pop
repnz
rcrl
xor
frstor
loop
mov
rolb
pop
jns
mov
loop
inc
movsl
imul
outsb
jg
and
sub
ficomps
in
pop
adc
roll
mov
adcl
aaa
xchg
andb
dec
lea
cmp
dec
mov
inc
std
adcb
adcb
fldenv
gs
test
mov
lcall
lods
xor
sbb
ffreep
movsl
ss
jge
test
jb
insb
add
push
adc
testl
or
dec
sub
mov
push
fwait
push
test
daa
rorb
scas
mov
hlt
aaa
ror
cmp
push
mov
test
lret
mov
mov
inc
mov
mov
filds
outsb
cmp
push
test
in
test
xor
into
hlt
cmpsl
push
inc
fdivs
icebp
xchg
or
stc
mov
pop
xor
mov
xor
sub
mov
cmpl
adc
mov
dec
dec
fwait
aam
xorb
cmp
dec
arpl
loop
push
add
mov
jno
pop
add
or
fcoml
pop
jno
rorb
xchg
and
mov
ja
stos
add
xchg
inc
xor
addr16
shrl
inc
xor
jno
mov
adc
and
cmpsl
jns
sbb
int3
jb
inc
sbb
lret
mov
cmp
std
loop
pop
or
nop
push
push
pop
pop
flds
adc
hlt
shll
lcall
dec
shrl
or
xlat
push
jle
jb
ret
xor
fadd
rclb
lret
dec
inc
mov
xchg
pop
lahf
js
jbe
xor
adc
jmp
sub
mov
test
ljmp
inc
fs
mov
hlt
jg
ljmp
sub
mov
dec
jecxz
or
xor
insl
sbb
or
and
add
cs
or
adc
mov
push
mov
dec
out
adc
push
cld
in
mov
cli
popa
stos
fstps
and
sbbb
inc
pop
mov
pop
ljmp
dec
mov
and
lahf
filds
add
mov
pop
lods
jae
push
or
add
idivb
push
and
pushf
outsb
jno
xor
pop
icebp
mov
push
sub
cmp
fcmovne
mov
int3
mov
lea
scas
sub
sbb
in
out
mov
lret
push
outsb
inc
out
dec
cmp
fwait
pop
loopne
jbe
push
xchg
add
js
push
es
mov
scas
pop
ds
xor
sbb
xchg
sbb
or
notl
or
cmp
mov
mov
mov
lods
imul
mov
and
adc
or
insl
into
push
xchg
mov
push
mov
cmpsl
jnp
sbbl
out
pop
sub
mov
dec
nop
xor
and
mov
inc
sub
xchg
notb
mov
and
rcrl
rolb
adc
rorl
xor
mov
loop
jecxz
popa
xchg
lea
sahf
fistpll
jb
adcb
mov
clc
xor
testb
sub
dec
jle
inc
xchg
fdiv
ds
outsl
xor
fsubp
push
sar
fdivrs
inc
inc
adcl
mov
xchg
fnsave
fwait
adc
popf
jnp
inc
bound
add
and
cmp
cltd
lods
push
pop
pop
sti
inc
push
rcrl
test
add
ficomps
and
repnz
fadds
repz
or
clc
hlt
test
and
adcl
incb
je
pop
add
inc
mov
add
mov
cmp
mov
mov
nop
fistps
inc
or
pop
bound
ret
add
cmp
rorb
or
ds
ffree
lods
sbb
mov
xor
sbb
les
jle
aad
aaa
mov
adc
adc
dec
cmc
stos
xchg
ret
in
pushf
divl
cld
mov
fildl
popf
sbb
cli
adc
loopne
jge
je
gs
pop
hlt
mov
mov
insl
dec
fdivr
mov
xchg
xchg
jb
shlb
push
addl
repnz
and
adc
pop
test
add
es
mov
dec
xlat
lods
pop
hlt
mov
push
je
and
add
mul
test
add
cmc
add
push
mov
mov
sbb
hlt
add
scas
inc
push
cmp
push
inc
add
pop
jp
in
inc
or
push
rolb
dec
xor
in
jb
arpl
shr
dec
aas
out
adc
aas
or
sub
xor
and
sbb
add
mov
mov
mov
mov
inc
or
jae
xlat
or
mov
sbb
data16
aas
adc
cmp
sbb
adc
cmpsb
push
or
cmp
mov
inc
ds
aam
add
or
mov
mov
and
mov
jecxz
sbb
mov
jg
inc
insl
inc
ret
xor
adc
in
pop
jb
adc
repnz
mov
repnz
xchg
bound
pop
inc
jmp
xchg
dec
or
lret
dec
mov
xor
cmpl
xchg
or
mov
insb
push
rcl
cltd
pop
hlt
add
push
rorb
jp
dec
loope
je
pop
stos
sbb
testb
divb
ret
mov
bound
cmpsl
add
ret
add
adc
ljmp
insl
int3
sti
subb
arpl
imul
mov
jecxz
xchg
add
shl
mov
pop
dec
fisubrs
jo
jb
cmp
insb
and
out
add
andl
adc
mov
aaa
or
arpl
iret
mov
aam
adc
and
aad
jns
fcoml
sbb
cmp
les
subl
cmp
std
add
xchg
mov
xchg
inc
dec
cmp
testb
xor
cmc
test
jae
aam
jle
add
xor
cwtl
in
hlt
push
leave
inc
mov
push
mov
and
stos
push
adc
enter
int
mov
xchg
dec
jg
add
test
idivb
dec
dec
xor
pop
dec
shl
data16
outsb
cmp
jle
loopne
ret
mov
add
mov
and
mov
in
bound
std
add
jmp
cwtl
push
inc
jle
mov
pop
mov
fdivrl
dec
out
mov
cld
lret
aad
aam
inc
ret
lcall
aad
jne
pop
dec
cmpsb
ljmp
jle
mov
mov
lar
jbe,pt
hlt
pusha
push
mov
push
fmulp
popf
add
pop
sub
in
push
mov
fcmovnbe
jle
lea
in
pop
push
add
sahf
jge
and
jecxz
add
push
enter
lods
mov
inc
push
aam
sub
pushf
dec
push
mov
nop
or
jmp
je
dec
mov
sub
sahf
sub
inc
fcom
xchg
dec
out
xlat
cli
and
mov
cs
test
jge
clc
pop
add
push
loopne
or
and
jle
dec
pop
outsb
adc
ret
aaa
pop
fisttpl
sbb
iret
leave
push
les
outsl
movsb
loopne
ret
mov
cmp
faddl
into
fwait
inc
adcb
scas
fidivrs
das
sahf
mov
lret
jnp
clc
loopne
rcrb
and
outsl
sbb
out
inc
fwait
mov
adc
mov
pop
add
mov
push
data16
dec
mov
mov
mov
mov
popf
dec
cld
push
mov
test
dec
or
call
adcb
popa
and
daa
xchg
sti
dec
mov
outsb
lcall
xor
pop
notb
fstl
sbb
add
xchg
mov
data16
cmpb
inc
loopne
sub
outsl
push
or
jl
es
je
aad
push
jnp
xchg
daa
insl
test
push
mov
mov
xchg
cmpsb
mov
push
and
sarb
adc
hlt
and
pop
jns
push
add
scas
mov
enter
ret
pop
movsl
adcb
stos
pop
and
clc
mov
shll
cmc
orb
add
outsl
xchg
in
shll
adc
bound
xor
adc
push
daa
arpl
sub
sub
xor
clc
cwtl
inc
loopne
dec
mov
mov
mov
jnp
subb
or
adc
mov
jmp
gs
adcb
mov
mul
mov
sbb
nop
add
ficompl
adc
ret
xorl
jbe
mov
movsb
pop
add
cli
jo
shrl
jne
fs
jbe
fldt
inc
xor
add
je
ss
clc
xchg
and
xor
test
outsb
ds
cmp
loope
jl
jbe
cmp
cmpl
cmp
dec
mov
mov
jl
sbb
bound
mov
mov
std
fidivrs
dec
ret
inc
out
arpl
clc
mov
shll
cmp
in
test
jl
or
add
xor
mov
sub
in
jae
mov
loope
das
xlat
or
jnp
xor
sbb
cmp
inc
jne
cld
cwtl
and
sub
repnz
pop
jo
shlb
cmc
push
out
sbb
insw
cmpsl
push
add
adc
pop
jle
and
add
jo
movsb
dec
pop
test
and
out
je
sbb
inc
mov
dec
nop
mov
mov
loopne
addr16
rol
shlb
cwtl
cld
jg
ficomps
notb
mov
in
sub
xchg
add
enter
out
inc
push
push
mov
lahf
clc
int
jmp
stos
lcall
push
or
xchg
sub
adc
mov
pop
out
mov
inc
out
clc
cwtl
and
or
jecxz
jne
cmpsl
cmpsl
jecxz
push
pop
pop
out
aad
ds
movsb
xchg
and
es
inc
xlat
adc
dec
inc
inc
add
in
adc
mov
jle
pop
inc
push
stos
lock
pop
sub
addb
or
cmp
or
or
jae
sbb
push
out
fiaddl
pop
movsl
mov
das
add
push
sbb
mov
push
in
or
or
lret
add
loopne
mov
cmc
push
cli
imul
cmp
adc
jno
loope
push
cmpsl
push
stc
mov
popf
mov
push
cmpsl
sub
aam
into
sbb
adc
mov
mov
jne
out
arpl
cmpsl
dec
fcmovnbe
pop
jnp
jge
cli
xor
adc
xlat
imul
add
cmp
push
cmc
or
xchg
jo
add
jb
cmp
sti
clc
or
mov
mov
aam
jge
sbb
out
push
iret
mov
push
jge
jg
mov
loop
push
cli
ljmp
icebp
xchg
lock
rcll
mov
adc
fcoml
shrb
jo
scas
pop
iret
imul
cli
cmp
test
push
jle
xchg
lahf
xchg
adc
insl
jle
in
mov
add
push
dec
hlt
shlb
and
icebp
bound
in
in
and
bswap
jnp
cs
pop
xlat
icebp
mov
icebp
aam
xor
or
mov
fs
pop
inc
inc
push
adcl
call
cmc
sbb
stc
xor
movsl
add
xchg
in
es
xchg
mov
mov
in
or
xor
test
test
mov
pop
add
cmp
sbbl
clc
hlt
cmp
bsf
add
or
jl
jp
push
sub
cli
repz
roll
cmp
sbb
cltd
aam
roll
fsts
fcoms
shlb
add
pop
in
mov
add
jnp
xchg
mov
jnp
fwait
movsl
push
out
jbe
test
cmp
inc
push
or
push
cmp
or
jl
mov
jne
mov
jno
xor
sbbl
jbe
gs
cmpsb
in
xchg
cwtl
push
xor
xchg
cmp
std
jp
mov
mov
xchg
adc
inc
add
mov
xchg
sbb
mov
inc
popa
call
pop
shll
inc
in
rorb
cmpsb
mov
js
jl
rcrb
ret
pop
mov
mov
jp
insl
jnp
mov
mov
mov
scas
pmuludq
sbb
je
adc
hlt
popf
pop
xor
or
das
xor
mov
ljmp
repz
in
or
repz
loopne
mov
mov
ret
push
ja
sbb
rsqrtps
dec
enter
mov
test
cmc
test
cmp
aam
xor
mov
mov
and
mov
pop
into
fwait
pop
adc
les
addb
pop
std
icebp
repnz
add
cmp
rolb
add
fbld
or
cmpsb
jno
iret
pop
sub
rcr
mov
push
pop
mov
fcoml
jecxz
frstor
dec
loope
mov
pop
mov
mov
imul
std
jnp
sub
jecxz
scas
testb
loop
mov
mov
inc
in
dec
push
push
xchg
icebp
xor
cmp
xchg
mov
adc
lea
push
mov
data16
nop
outsb
inc
daa
pop
test
sbb
ss
push
loope
ret
xor
arpl
pop
mov
out
test
rol
outsl
test
in
rorl
xor
imul
lret
cli
cmp
lret
gs
ror
mov
mov
sub
shlb
push
jbe
dec
loop
mov
and
inc
out
pop
push
dec
not
adcl
mov
lock
arpl
lods
lods
inc
add
push
or
mov
xchg
sbb
sub
sbb
mov
jl
aam
mov
inc
aad
fdivrs
aam
movb
stos
pop
xchg
clc
insb
sbb
dec
shr
sub
adc
inc
clc
bound
and
int3
outsl
ficoms
les
test
adc
subb
jns
jmp
hlt
adc
out
mov
dec
pop
add
pop
filds
pop
cs
in
fisubs
and
stos
push
out
repnz
mov
mov
test
aas
sarb
mull
les
add
sub
inc
les
mov
push
call
push
add
inc
icebp
stc
test
push
pusha
hlt
sbbb
pop
jo
test
testb
lcall
ret
xor
stc
mov
pop
pop
cmpsb
cli
fisubs
ret
mov
loopne
out
insb
shl
addr16
hlt
and
jo
fistps
fs
test
add
and
test
adc
loop
jge
test
cli
loope
sti
movsl
enter
mov
popl
pop
pop
inc
ljmp
xorb
inc
cmp
fcom
jns
and
cmpb
pop
mov
fildl
rcrb
fldl
loope
inc
insl
xchg
insb
andb
ds
push
jmp
call
sbb
push
mov
and
cmp
add
inc
test
add
call
mov
repnz
xor
jb
mov
mov
mov
mov
jae
hlt
mov
jle
in
inc
insl
loope
arpl
xor
cmp
fcompp
fnsave
add
mov
inc
mov
pusha
popa
mov
sbb
add
add
sbbb
je
les
xorl
mov
test
pop
shll
sti
addl
cmp
loopne
or
mov
push
pop
jne
pop
les
sarl
inc
mov
ds
stos
outsb
scas
int3
movb
sub
pop
pop
mov
dec
adc
mov
lret
mov
and
jns
or
mov
sbb
sub
inc
inc
test
jnp
clc
gs
ret
iret
hlt
cmp
fisubl
ret
test
in
lret
xchg
sub
push
sub
sbb
and
mov
out
call
cwtl
bound
decl
inc
cmp
cmp
adcb
sub
inc
inc
add
in
or
and
inc
dec
notb
inc
inc
add
sub
mov
fisttpl
mov
and
adc
sbb
aam
ret
mov
int
jbe
shrl
mov
inc
jp
pop
mov
stc
add
iret
ret
fstpl
push
add
add
push
in
xor
test
push
xchg
pop
xor
clc
and
leave
pusha
jle
cmp
inc
push
dec
int3
scas
mov
cmp
mov
mov
pop
out
sti
sub
xlat
lods
adc
mov
fsts
fwait
repz
cmpb
adcb
loope
jge
jp
shll
jecxz
xlat
jbe
lea
sbb
jnp
push
adc
push
dec
outsb
sub
xor
adc
loopne
jle
dec
int3
jle
xor
jnp
jl
jle
divb
insl
xor
cmp
xor
lods
cmp
loop
sbb
stos
and
icebp
mov
push
shll
subb
shll
lock
inc
lods
test
mov
mov
insb
mov
test
lret
xchg
cli
add
dec
ja
pop
loop
ret
mov
lods
ds
outsb
add
or
fimuls
or
mov
push
xchg
je
lods
mov
ficoms
out
mov
lahf
es
loop
xchg
jnp
pop
std
adc
sub
rcll
pushf
lods
dec
je
push
mov
cmc
je
push
jge
test
imul
jbe
scas
sub
mov
and
jge
int3
addl
mov
cmp
xchg
arpl
pop
xchg
fnstcw
lahf
icebp
subb
sarl
or
adc
idivb
pop
js
sarl
dec
xchg
fcoml
mov
or
lods
movsb
ja
arpl
push
dec
cs
lods
or
fistpl
mov
pop
mov
or
test
in
shll
push
dec
mov
shll
or
dec
out
inc
add
jnp
testb
js
fildll
arpl
mov
sub
sub
popf
xor
push
jp
cmp
jnp
pop
test
cmc
cld
push
jbe
les
push
icebp
test
test
les
inc
popf
clc
mov
test
add
fucomp
lock
sbb
adc
into
inc
outsl
les
mov
stos
out
adc
mov
add
mov
bound
daa
mov
and
in
ret
loopne
mov
cmpsl
cmp
cmpsb
les
push
push
out
int
jnp
fisubrl
mov
jo
call
ret
nop
jmp
inc
inc
ss
xor
cld
jns
inc
mov
add
iret
fbld
lock
jp
pop
les
enter
cli
fs
fstps
test
jecxz
xor
inc
jecxz
jp
add
add
fwait
rcl
and
mov
jp
pop
cltd
mov
ret
addb
mov
xchg
ret
and
add
ret
inc
in
jecxz
jp
cltd
mov
fdivr
roll
push
adc
pop
ret
cmpsb
pusha
fdivrs
lahf
std
lock
inc
loopne
popa
jl
outsb
adc
cmp
andb
les
sti
les
loope
loopne
nop
and
test
inc
aaa
popa
mov
jecxz
jecxz
xchg
add
cmp
mov
sti
pop
xor
mov
bound
push
bound
pop
xchg
gs
cmp
scas
ret
filds
cltd
aas
rcrl
roll
add
sarb
mov
loop
rep
test
jae
mov
sbb
imul
mov
mov
scas
andb
loopne
pop
je
shll
inc
mov
add
test
hlt
shll
adcb
out
adc
mul
pop
loope
loopne
dec
inc
daa
inc
insb
inc
loop
and
cmp
loopne
xchg
mov
aam
mov
aad
mov
sarl
test
dec
pop
push
sbb
aad
in
notl
dec
push
mov
adc
aam
cld
and
xor
push
mov
out
mov
mov
pop
pop
jno
je
aam
mov
in
cmp
and
cmpsl
sbb
lahf
rorb
push
push
cmpb
aaa
cmp
push
add
and
push
or
dec
push
incl
push
inc
jmp
mov
add
and
add
popf
or
sub
inc
or
loope
into
shlb
inc
in
mov
out
lea
sub
int3
sbb
les
into
fcoms
cmp
ret
lea
add
les
sub
xlat
mov
jo
sar
add
pop
and
dec
mov
ljmp
movsl
jle
jmp
ret
dec
into
lahf
mov
add
add
mov
or
decl
iret
int
mov
xchg
inc
xlat
les
aam
loopne
or
add
add
aad
mov
jae
popf
lods
fildl
mov
lock
adc
xor
mov
cwtl
add
mov
inc
clc
dec
cltd
cld
pop
cwtl
dec
fstpt
jecxz
cmp
in
outsl
stos
jmp
xor
fs
out
jbe
jae
mov
push
xor
and
jp
aas
shlb
stos
xor
nop
std
jmp
mov
pop
decb
add
xor
cmp
mov
jns
xlat
loope
mov
mov
pop
mov
test
jl
jmp
test
pop
in
lods
lods
pop
loope
push
jmp
push
cmp
sub
and
push
in
clc
sub
shll
add
shl
lods
ret
xor
cmp
or
int
inc
stos
mov
sub
cld
fistpll
leave
sarl
out
cltd
sbb
ffreep
inc
dec
or
or
call
pop
adc
mov
lock
nop
lock
lret
push
ret
cmp
out
lea
sbb
push
inc
mov
fimull
adc
mov
pushf
jp
sub
std
cmp
mov
jle
into
ret
out
inc
push
push
nop
outsb
xor
test
hlt
jg
mov
insl
mov
push
xchg
les
aad
stos
and
xchg
idivb
daa
sahf
jg
or
shr
lods
stos
jne
mov
sub
add
mov
shr
pushf
enter
push
inc
adc
jbe
icebp
ljmp
in
xor
push
mov
lahf
lods
stos
xchg
lods
ljmp
sub
cld
mov
aas
pop
mov
sti
js
push
das
call
mov
add
aaa
push
shlb
add
mov
cmpsl
shrb
and
pop
mov
out
push
jo
adc
or
jb
dec
outsb
mov
enter
rorb
sbbb
xor
insb
imul
out
cwtl
pop
mov
aaa
stos
scas
test
push
pop
dec
dec
cmp
mov
ret
cmc
fsubl
mov
inc
fsub
addr16
dec
jp
faddl
xor
dec
daa
jnp
push
lock
lods
jo
jo
pop
lock
pop
repnz
jb
or
inc
adc
adc
add
lock
lods
add
imul
push
dec
sbb
xor
repnz
add
js
mov
outsl
sub
inc
inc
jnp
lret
aaa
sbb
mov
mov
inc
or
pop
or
and
mov
cli
out
mov
cmp
in
psubusb
add
shll
test
inc
or
or
ret
add
stos
pop
insb
fs
outsl
mov
xor
pop
or
outsl
daa
and
sub
je
dec
ror
daa
jae
jb
ss
add
add
cmc
loope
fwait
outsb
dec
sbb
pop
mov
jge
add
mov
xor
adc
adc
loopne
cs
sbb
ds
sub
insl
je
xchg
and
dec
mov
add
add
adc
push
daa
jb
test
cltd
push
cli
mov
adc
or
sbb
push
stos
mov
lock
mov
test
and
cli
movsl
mov
bound
out
add
pop
push
mov
outsb
pop
adc
push
daa
std
dec
dec
or
sub
jb
scas
movsb
test
fwait
and
std
push
aam
add
sbb
scas
mov
imul
inc
mov
pop
pop
inc
inc
cmp
mov
inc
sbbb
inc
cmp
lahf
lods
lahf
cmp
mov
bound
push
lcall
cmpsl
push
aad
test
fcomp
mov
fdivl
test
dec
mov
jb
je
xchg
mov
shlb
mov
add
xor
scas
in
loop
das
addr16
mov
xchg
jle
dec
gs
in
xor
pop
and
shr
xor
push
add
ja
cmc
arpl
dec
lods
movl
add
mov
insl
mov
dec
rcll
add
or
test
lret
pop
inc
into
shrb
or
xchg
dec
add
mov
std
mov
or
cmpsb
jb
fdivrs
lods
cmp
pop
adc
cmp
lods
inc
dec
addl
xor
ret
shlb
cmp
out
dec
shrb
outsl
or
mov
adc
push
mov
jmp
repnz
cmp
mov
mov
or
or
push
icebp
xchg
xor
int
xor
xchg
push
daa
pop
pop
in
icebp
call
push
cmp
lcall
lods
cmp
mov
icebp
pop
pop
in
les
mov
scas
ret
ds
mov
hlt
das
jmp
sub
push
xor
push
in
out
dec
mov
shlb
or
sub
pop
outsb
push
ficoml
pcmpgtd
or
repnz
inc
mov
mov
cmpsb
out
out
mov
inc
sarb
pop
aam
icebp
std
fimuls
inc
cmpb
cmpl
adc
xor
xorb
jge
inc
push
jb
mov
push
ret
sbb
inc
xchg
insl
inc
sub
inc
xor
xor
mov
sub
sub
test
jl
sahf
movsb
sbb
and
jle
cli
or
aam
int
push
sub
mov
inc
je
mov
push
pop
mov
mov
dec
loope
fdivl
pop
js
mov
dec
pop
rcrb
leave
cwtl
xchg
or
or
or
mov
inc
mov
push
pop
mov
mov
sbb
or
jae
sar
outsl
cmp
lods
adc
cmp
sbb
mov
mov
lods
jle
jl
pushf
pushl
xchg
mov
sti
mov
sbb
cmpsb
in
push
inc
movsl
test
lea
or
sbb
lret
inc
cmp
sti
push
pavgw
pushf
xorb
fwait
bnd
push
out
leave
xor
movsb
testb
je
fwait
mov
std
add
sar
outsb
and
lock
cmp
inc
fldl
cwtl
add
cmp
and
cmp
ret
xchg
or
or
cmp
loopne
lods
iret
pop
push
testb
loop
rcll
sub
push
dec
or
mov
daa
stos
testb
cmpb
rorb
faddl
ljmp
inc
adc
les
sarb
pop
out
cmp
cmp
roll
fdivl
xchg
je
scas
or
insb
adc
arpl
xlat
incb
and
pop
mov
clc
jp
cmp
xchg
jp
cmp
clc
rol
sbb
mov
sub
imul
lods
bound
popa
hlt
rorl
sub
fsubl
imulb
fldt
out
jno
pop
fidivl
je
shrb
lcall
sub
jge
push
sbb
fidivs
ficompl
push
adc
add
leave
lods
test
loope
push
sbb
sbb
jecxz
je
mov
cmpsb
dec
fcmovne
and
aas
or
out
popf
aas
push
or
dec
mov
and
scas
or
in
xorb
mov
out
jae
stos
or
fidivs
push
mov
inc
xchg
dec
jmp
ret
push
je
sub
icebp
lret
or
push
lahf
add
pop
scas
cmp
sti
mov
cltd
xchg
dec
pop
fidivrs
add
add
push
fstpt
cmp
ror
jg
test
es
inc
push
push
or
pop
adc
pushf
int3
dec
add
mov
dec
repnz
outsl
out
idivb
pop
fs
mov
jne
jo
paddb
psubw
cld
cmp
dec
pop
add
pop
hlt
lds
cltd
test
hlt
adc
inc
and
inc
sbb
dec
mov
stos
ret
mov
nop
orb
push
or
rorb
out
adc
xchg
in
movsb
aad
fsubs
stos
ss
ret
adc
sbb
push
das
mov
add
movsb
dec
mov
insb
sub
jnp
mov
test
jno
imul
add
sbb
and
xor
dec
add
pop
mov
xor
add
add
les
mov
rcll
or
je
fdivr
push
hlt
aaa
add
outsl
mov
dec
xchg
ret
into
adc
iret
adc
ja
in
or
push
sub
hlt
sub
in
push
mov
pop
fwait
xorl
mov
sub
xlat
rcl
pop
sahf
jbe
outsl
in
scas
adc
and
jmp
jne
in
xor
or
push
sahf
imul
out
mov
repz
dec
add
mov
sub
out
in
ss
lods
subb
xor
aas
dec
rorl
xchg
outsb
hlt
sub
lock
clc
dec
add
movb
hlt
xchg
andl
mov
jno
loopne
ftst
ret
sub
in
fdivl
push
rol
rcr
sbb
in
les
inc
inc
jge
cmp
arpl
cld
jg
pop
mov
call
inc
xchg
jno
ret
add
ret
or
add
js
clc
jecxz
leave
ret
mov
mov
jmp
xlat
shlb
test
bound
cltd
mov
ret
in
loope
cmpb
ja
and
sbbl
aad
bnd
outsl
pusha
mov
movsb
cltd
add
fs
test
mov
mov
fs
sti
add
cmp
ret
mov
test
add
out
bound
push
cmp
mov
loopne
jecxz
aam
scas
mov
out
ss
push
sub
sti
rol
loopne
fcomps
add
add
push
lcall
mov
pop
into
cmp
mov
sarb
mov
pop
rcrb
dec
outsl
jg
bound
xchg
pop
fidivrl
repnz
test
add
add
ret
mov
jg
push
outsl
push
mov
add
jge
filds
les
insb
xchg
push
fistpll
mov
and
add
loope
xor
jp
cmp
in
sti
mov
out
sti
and
shrb
jecxz
lret
mov
pusha
add
fstp
pop
jl
incl
and
imul
xorl
imul
stc
and
mov
xor
jae
shlb
lahf
jmp
insb
cli
pop
jecxz
les
push
sarb
jb
stos
adcl
int
int3
pop
arpl
ret
jns
insb
mov
into
push
mov
jecxz
mov
jl
mov
mov
sub
in
jp
lahf
adc
sbb
and
dec
loop
outsl
std
xchg
jle
dec
int
pop
aaa
in
jno
or
sub
out
fdivs
dec
mov
mov
out
test
fldl
in
lret
jb
aas
sbb
mov
in
lret
adc
insl
outsb
jl
or
xchg
stc
hlt
test
push
inc
sbb
sti
lea
mov
sbb
repnz
pop
stos
inc
lock
cmp
roll
hlt
enter
dec
xor
lret
push
fcomi
push
fistpll
shl
mov
xorb
and
mov
jmp
dec
fdivrs
rorl
incb
sub
ret
xor
into
xchg
dec
lret
add
sbb
cmp
std
add
mov
loope
add
inc
inc
enter
mov
mov
fistl
hlt
sbb
pop
rcr
cld
rcl
cld
add
outsl
push
daa
xor
and
cmp
mov
lods
popf
dec
mov
mov
mov
or
or
cmpsb
mov
outsl
xchg
insl
or
mov
xchg
aad
fsts
and
mov
mov
dec
out
dec
je
inc
push
cmp
or
cmp
cmpsb
pop
add
loopne
or
push
and
loopne
sub
loopne
cmp
movsl
mov
loopne
test
jne
ljmp
fs
mov
shll
xor
push
mov
int
jle
push
mov
lods
mov
jge
and
mov
or
xchg
std
or
or
add
push
fldenv
in
call
ret
je
test
js
mov
into
sbb
fildl
pop
lcall
les
and
mov
xchg
or
cmc
mov
push
mov
ret
xchg
mov
scas
ds
sub
shrb
pop
mov
loopne
dec
out
and
push
or
sbb
pop
push
add
mov
fwait
add
adc
xchg
jmp
out
add
data16
dec
sbb
jo
xor
scas
enter
and
mov
stc
adc
add
push
add
sub
test
lcall
cmpsl
fstl
and
aam
and
inc
fstpt
lods
adc
mov
or
sub
jo
and
jle
push
mov
mov
out
cwtl
push
sub
sbb
bound
or
in
inc
sbb
xchg
push
pop
int
dec
mov
pop
enter
add
mov
add
adc
shl
mov
xor
ret
xlat
mov
ret
mov
push
and
and
sub
shlb
inc
jg
cli
pop
cld
in
lcall
push
insb
mov
pop
cmp
mov
stos
pop
imul
xchg
in
aas
stos
inc
xlat
and
pop
mov
dec
push
mov
mov
fldcw
cld
inc
sbb
icebp
int3
mov
loope
orl
push
sub
mov
pop
dec
fidivl
xchg
jb
icebp
cli
lods
movsb
mov
test
testb
lret
je
and
out
mov
add
mov
xor
sti
scas
or
in
mov
jnp
in
mov
mov
jp
jns
adc
pushf
lods
mov
movsl
clc
aam
enter
imul
cmp
int
repz
cmp
in
icebp
push
popf
cld
cmp
mov
dec
out
push
in
lahf
dec
shrl
push
jns
movsl
sub
jb
lock
xchg
std
push
shrl
push
lock
outsl
andl
cmpb
rorl
inc
sbb
mov
and
lret
rolb
and
xor
dec
repz
mov
pop
into
or
xor
add
inc
inc
mov
aas
daa
jnp
xlat
xchg
jp
lods
jg,pt
xchg
clc
jbe
add
inc
sub
sub
mov
nop
add
ds
pop
in
mov
add
sub
fildl
dec
cmpb
icebp
pop
xor
rcrl
rorb
add
test
dec
inc
shlb
movsl
jne
rcrb
hlt
shl
mov
mov
xchg
mov
test
pop
jbe
cmc
mov
in
xchg
clc
lods
fmuls
sbb
fmuls
shll
xchg
movsl
sti
cwtl
dec
outsb
sbb
sbb
stos
push
dec
fs
and
mov
cltd
adc
fwait
mov
pop
inc
mov
imul
mov
jp
inc
xchg
ret
into
lcall
pop
push
les
mov
and
pop
mov
cld
xorl
pop
cltd
dec
insl
sahf
fimuls
loope
cmp
popf
xchg
cmpl
cmp
sbb
mov
or
fucomp
or
xor
daa
sub
pop
sbb
cmp
xchg
aam
subl
into
out
in
pusha
mov
jge
mov
loop
jecxz
ret
xchg
lock
adc
push
lret
and
in
add
mov
cltd
dec
mov
push
sub
or
xchg
cmp
and
mov
out
xchg
sti
push
sbb
cld
pop
pushf
loop
scas
mov
movsb
in
push
popf
inc
cmc
dec
jmp
sbb
add
inc
mov
xchg
fdivp
fnstsw
ret
sub
je
or
je
sbb
cmpsl
in
and
push
pusha
jbe
daa
lret
lcall
fimuls
pop
dec
add
sbb
fcompl
dec
push
scas
push
fdivrl
bound
dec
ds
popf
decl
inc
negl
sbb
lcall
mov
cmpsl
aaa
dec
adc
add
push
cmp
adc
ret
je
add
xlat
hlt
mov
cmp
mov
lods
les
xchg
push
rcrb
inc
test
loopne
lock
dec
hlt
ror
ljmp
cmp
cmpb
mov
loop
or
cmc
cld
or
call
lods
xor
les
adc
mov
pop
add
jno
mov
mov
lods
mov
push
fcomi
mov
sub
jmp
loop
cmp
mov
lcall
or
rcrl
mov
orb
mov
cmp
into
shrb
dec
lcall
sbb
loopne
fstpl
sarb
gs
mov
mov
jns
pop
mov
mov
test
xor
mov
sarl
inc
test
and
fisttpl
or
mov
aas
test
lahf
sub
imul
scas
fsubl
mov
mov
rcl
add
flds
ja
idivb
addr16
xchg
fcom
push
push
cmp
in
lret
or
pop
push
lret
mov
xor
fidivl
fidivs
jbe
je
pop
cmc
add
stos
aaa
xor
addb
inc
mov
lcall
insl
pushf
cmc
jnp
jnp
push
mov
or
fmuls
jle
or
loop
rcll
mov
repnz
sub
or
negb
sbb
decl
aas
mov
lods
fcomps
cld
fnsave
or
sbb
loopne
divb
shll
xchg
dec
in
or
lret
mov
bound
pushf
andb
mov
inc
add
aaa
mov
clc
add
fdivs
call
dec
jo
or
fstpt
mov
or
js
xor
repz
jbe
incl
xchg
xchg
xchg
push
ret
cmpsb
mov
sub
shl
mov
xchg
xor
in
push
fimuls
pop
loop
je
sub
stos
test
jg
fildl
test
mov
fnstsw
inc
xchg
jb
xchg
or
lock
mov
add
xchg
jne
out
movb
lret
mov
ret
data16
add
idiv
sarl
sub
sti
enter
xchg
sub
arpl
lods
xchg
add
int
dec
push
adc
fwait
push
mov
movsl
aam
push
test
scas
stc
push
aam
mov
aad
inc
jge
in
mov
cwtl
and
stc
lret
jmp
and
pop
pop
or
clc
fsub
insb
in
orl
loopne
adc
sahf
push
lret
ret
ds
sub
jge
repz
je
popf
add
xor
insb
xchg
mov
and
or
adc
push
xchg
lods
push
push
ss
cmc
stos
inc
cmp
inc
mov
mov
stos
outsb
xor
shlb
je
mov
in
fimuls
shlb
ret
add
aaa
icebp
xchg
and
hlt
inc
cmp
fisubl
mov
pop
sbb
lcall
inc
lods
andl
daa
lods
and
aaa
js
les
add
cld
sarl
mov
mov
mov
xchg
jno
sar
mov
mov
movsb
cld
mov
sub
ds
add
popf
push
imul
xchg
fisttps
std
out
fnstenv
pop
mov
inc
rcll
frstor
add
xchg
push
loope
sub
fistl
cmp
scas
shrb
xchg
gs
movsb
pop
in
cs
dec
push
mov
in
lret
les
inc
lds
pop
mov
sbb
push
stc
ljmp
pop
add
mov
inc
orl
fmuls
jae
sbb
dec
int3
fwait
push
lock
mov
pop
dec
add
jbe
test
in
in
fwait
push
add
cmc
cmpsl
lahf
stc
mull
cmp
pop
sub
lahf
dec
dec
inc
movsl
test
into
xchg
fs
cmpsb
inc
inc
xchg
outsb
jge
cwtl
and
cltd
lret
xor
jecxz
mov
pop
xchg
das
repz
pop
int
inc
sbb
push
stos
push
xor
lods
pusha
sbb
fisttps
fdivr
cmp
outsb
dec
int
cmp
dec
push
and
rolb
scas
inc
divb
pushl
push
fdivs
in
inc
adc
scas
mov
push
jecxz
lods
pop
lods
mov
adc
ret
dec
sub
dec
ds
dec
pop
ror
fstl
clc
jae
andb
adcb
mov
icebp
adc
pop
lea
sbb
into
pusha
fdivl
jle
push
dec
int
jecxz
in
call
mov
jl
outsb
out
add
and
mov
sahf
cld
js
and
xor
xlat
xorb
std
mov
xchg
push
and
jmp
dec
or
adc
push
sub
fildl
mov
mov
rolb
mov
mov
dec
cmp
sbb
mov
daa
call
lret
xchg
leave
push
or
addr16
jb
mov
jne
mov
jl
icebp
adc
dec
xor
fisttpll
mov
jbe
mov
or
test
fs
add
out
outsl
push
lds
adc
cli
and
lahf
push
xchg
out
and
in
roll
imull
sub
mov
imul
out
dec
in
mov
inc
jb
dec
lock
fildll
mov
fistl
pop
pop
movsb
das
arpl
aas
jecxz
rorl
je
lret
aas
mov
lret
jns
jns
test
lods
jecxz
mov
out
or
fldl
dec
jbe
push
mov
aam
test
jecxz
mov
add
dec
jne
add
mov
and
xchg
pop
or
fisubs
mov
lock
mov
sbb
mov
stos
pop
out
and
jb
cmp
mov
repz
fwait
inc
push
jnp
push
int
adc
imul
push
push
sub
mov
mov
or
scas
je
sbbb
clc
fcoml
btcl
mov
test
out
je
xlat
cmpsb
scas
or
mov
sbb
js
sub
ljmp
mov
out
jb
testb
aad
sbb
sub
dec
sbb
fnstsw
mov
sbb
aaa
pop
cmpsb
add
or
cmp
in
fwait
mov
das
pop
or
roll
jae
dec
insl
std
inc
aaa
or
mov
mov
or
popa
pop
ja
mov
adc
mulb
dec
jmp
into
inc
pop
aad
xor
push
mov
lods
adc
popf
lcall
sbb
add
aam
pop
jl
fstpt
mov
dec
mov
ret
mov
popa
cld
inc
es
ja
pop
mov
mov
ficoml
bound
adc
outsb
mov
jecxz
scas
cld
adc
div
jbe
rcrl
fisttpll
or
stos
popf
and
lea
popa
and
mov
nop
clc
xchg
stos
xchg
test
mov
pop
adc
out
stos
jge
add
loopne
lcall
or
add
inc
ret
push
das
imul
dec
fadd
sbb
jns
dec
hlt
cwtl
push
jnp
cmp
int3
nop
sti
inc
test
mov
mov
data16
cmp
and
imul
enter
sbbl
roll
shlb
les
mov
mov
inc
pop
std
lahf
cmc
dec
mov
mov
insl
in
inc
int
pushf
fidivs
aam
jae
jnp
push
inc
loope
mov
add
and
and
hlt
orb
fs
add
mov
jo
in
mov
fmull
xchg
jnp
xor
test
ljmp
add
mov
cmp
not
lock
loope
push
pusha
and
inc
shlb
sahf
jle
aas
jle
test
mov
jnp
ds
lcall
les
out
push
test
out
test
jg
xor
pushf
inc
add
add
addl
outsl
mov
cmp
pop
cli
sahf
cmp
and
mov
cli
jnp
mov
and
mov
loope
test
shlb
cmp
mov
leave
in
dec
faddl
mov
add
and
jmp
mov
test
bnd
stos
popf
pusha
jmp
add
popa
arpl
add
popf
add
ret
lcall
and
and
add
sti
add
inc
mov
stos
sbbb
jp
add
mov
lahf
fsubp
cmpsb
mov
popf
bnd
sarb
fadds
cmp
outsl
les
fistpll
andb
sub
mov
loop
pop
add
cmp
popf
mov
jmp
ret
jecxz
mov
roll
repz
imul
outsl
mov
jae
les
jecxz
fdivrp
add
sarb
mov
xor
icebp
movsl
pusha
hlt
test
or
into
inc
adc
push
mov
out
sub
mov
insl
fmuls
out
mov
stc
push
or
subl
out
sub
stos
add
and
and
xchg
inc
push
pop
push
rcrl
push
or
jle
mov
jecxz
jle
in
pop
mov
lods
xchg
mov
outsl
mov
sbb
mov
and
scas
mov
mov
adc
pop
shlb
sub
cmp
jl
or
in
in
push
sub
add
mov
mov
sar
loopne
push
in
scas
pop
mov
pop
jle
mov
add
rcl
lock
icebp
cmp
add
sub
out
adc
push
clc
pop
and
adcb
mov
inc
mov
add
jne
xchg
mov
cwtl
clc
mov
sarl
leave
stos
ror
dec
inc
xlat
aad
cmovnp
rcr
shll
sbb
faddl
and
inc
mov
dec
or
pop
xor
ljmp
or
scas
mov
mov
lock
rcrl
das
stc
bound
dec
mov
cld
push
mov
inc
or
mov
les
lods
mov
xchg
or
sti
mov
leave
loope
movsl
icebp
push
fnstsw
push
dec
hlt
xorb
ds
test
loope,pt
dec
mov
dec
cmp
addr16
and
jnp
adc
mov
lock
or
mov
add
or
inc
fsub
movsl
dec
fdivp
jge
shll
inc
daa
movsl
adc
jnp
push
or
mov
es
movsb
sbb
lea
pusha
pop
jnp
jnp
cmpl
repnz
and
repz
adc
loopne
scas
mov
mov
mov
hlt
in
pop
xor
cli
pop
or
xor
scas
fwait
je
fcompl
mov
in
adc
xchg
pop
inc
test
stos
std
or
and
jle
mov
mov
sti
mov
mov
fwait
mov
xor
mov
out
add
xor
jbe
hlt
insb
xlat
jge
push
popa
push
mov
sahf
aad
jns
dec
lods
push
clc
mov
loopne
lods
in
mov
lcall
fsubrp
mov
out
push
sbb
roll
repnz
inc
hlt
jle
pop
mov
push
rcl
sbb
mov
fsub
into
fisubrs
xchg
adc
pop
inc
pop
xchg
or
push
outsl
mov
pop
imul
jnp
dec
adc
test
ds
arpl
mov
mov
test
loop
aad
mov
dec
mov
mov
jnp
in
fistpl
mov
iret
cwtl
sub
outsb
std
add
loop
pop
cmpsl
lret
sbb
mov
in
lea
add
sub
aas
and
aas
inc
push
test
mov
fsts
ror
roll
les
dec
jl
push
mov
pop
daa
push
mov
stos
ja
mov
or
mov
idivl
in
icebp
hlt
and
mov
fldenv
cld
add
mov
jmp
fimuls
xchg
lret
loope
shrl
mov
sbb
dec
push
dec
sub
stos
sbb
imul
xchg
and
rolb
pop
adc
stos
jae
mov
mov
cli
add
in
fidivs
ja
lahf
dec
dec
outsb
xchg
jge
mov
test
imul
mov
pop
or
outsl
lahf
roll
maxss
in
leave
lcall
cmpsl
gs
hlt
ret
jmp
cld
xor
push
daa
pop
cs
mov
in
decl
cmpsl
scas
call
jbe
add
adc
sahf
push
mov
pop
inc
xlat
movsb
ret
bound
cmpl
das
arpl
lret
cld
mov
fucomp
mov
insb
stos
cmp
fcomps
add
arpl
loop
fidivl
cli
add
popa
stos
outsl
xor
xchg
sarl
xor
gs
addr16
dec
fadd
sub
sbb
adcb
fists
cs
je
dec
cmp
add
sbb
sub
popa
dec
mov
mov
scas
out
rolb
lods
mov
adc
mov
and
pop
imul
xchg
dec
cwtl
dec
jb
popa
call
mov
mov
shrl
push
je
div
outsb
and
adc
inc
adc
mov
mov
jbe
dec
cld
sahf
mov
or
dec
test
fcompl
mov
je
cmp
movsl
pop
icebp
je
jg
sbb
imul
and
movsb
mov
push
xchg
xor
fnstsw
pop
cmpsb
push
in
std
out
xchg
pop
sub
lods
addr16
inc
inc
sbb
rolb
adc
jp
cmp
push
and
sub
dec
rolb
push
mov
imul
in
mov
ja
add
xor
sbb
mov
cli
cltd
test
lret
gs
in
or
dec
data16
sub
jo
push
cmp
push
popa
sbb
test
outsb
cmp
aaa
lods
insl
pop
dec
ret
jbe
outsb
sbb
gs
push
fnstsw
cmp
and
adc
leave
inc
cli
subb
shl
cmp
leave
sbbb
xlat
fiadds
insl
push
or
leave
fs
jno
push
pcmpeqd
mov
mov
ljmp
and
mov
andl
out
mov
ret
or
std
push
fldcw
jae
cmp
gs
pusha
jge
jle
js
out
xor
mov
adc
push
pusha
or
shll
push
stos
bound
out
dec
out
loopne
mov
inc
stos
sarl
xchg
aad
cmpsl
sbb
xchg
aaa
in
cmpsl
lea
pop
aam
mov
jbe
mov
adc
fs
jne
out
cmpsb
mov
jne
adc
inc
test
jb
push
push
dec
mov
cld
lret
mov
mov
and
lret
or
rolb
icebp
cmp
dec
and
mov
rcrl
dec
dec
imul
in
inc
sahf
pop
jnp
mov
cmpb
ss
and
jbe
ret
cmp
xchg
std
lods
add
jbe
xor
mov
int3
or
icebp
je
jbe
insl
loopne
ret
out
mov
inc
mov
dec
cli
push
cmp
mov
pop
lods
test
loope
call
pop
jmp
roll
movsl
das
idivb
or
pop
xor
jne
pusha
lret
push
es
push
add
stc
lods
pusha
jmp
xor
fs
mov
mov
sarb
add
mov
inc
loopne
aas
rclb
mov
fucomip
mov
and
rcr
aad
add
pop
adc
adc
xor
xchg
test
dec
imul
sahf
arpl
cmp
cld
sbb
insb
filds
push
roll
xchg
int3
rolb
rclb
sarb
clc
or
add
lock
adc
dec
shl
stos
dec
jb
repz
push
in
or
inc
xor
jg
lock
xorl
sti
fs
nop
push
add
cli
cmp
jne
jbe
jmp
lret
lock
inc
pop
stos
jge
sub
sar
push
fnsave
mov
repnz
and
xchg
jl
rcrb
jnp,pn
mov
fnstcw
sar
mov
sbbl
popf
dec
call
rclb
sub
lods
add
sbb
jae
pop
insl
jno
mov
or
jb
mov
test
inc
cmpsb
sbb
push
xlat
fwait
pop
mov
inc
push
sub
fistl
js
mov
cwtl
and
sbb
xor
lcall
or
cmp
mov
loop
mov
in
mov
jmp
jb
scas
dec
rorb
mov
mov
mov
push
dec
loopne
out
rcll
test
or
sbb
mov
mov
mov
sarl
pop
sahf
mov
lock
push
subl
jb
and
add
mov
xchg
or
mov
insb
mov
fbstp
std
inc
jne
inc
cs
jno
cs
dec
dec
or
mov
dec
add
les
mov
addr16
movb
cmp
and
adc
mov
inc
jmp
xor
xor
dec
sbb
mov
mov
inc
push
jbe
jo
imul
aad
out
loopne
mov
xor
icebp
pop
ret
push
lret
jbe
mov
addl
push
mov
inc
jecxz
insl
daa
icebp
lahf
stc
add
push
and
add
push
mov
fiadds
sahf
dec
sub
inc
inc
mov
pop
and
shrd
ret
in
mov
stc
xor
test
jo
fstp
fmull
dec
cmp
daa
lods
stc
shl
aad
jae
push
data16
test
adcb
shr
scas
lock
lds
js
sbb
icebp
inc
addr16
inc
bound
test
nop
dec
fnstsw
incl
add
mov
mov
inc
add
test
in
cmc
fs
stc
cmp
mov
mov
sub
adc
sub
or
add
inc
or
push
mov
push
mov
insl
mov
andb
shrl
shrb
fdiv
xchg
incl
mov
pop
enter
in
lea
test
jno
xchg
fistpll
push
inc
outsl
shl
sub
mov
ds
add
cmp
inc
movb
add
outsl
mov
fucomp
ss
add
lds
mov
push
les
xor
or
push
enter
jecxz
push
push
inc
and
and
loopne
fnsave
sbb
adc
bound
bound
xorl
scas
test
push
mov
mov
das
shll
add
or
sub
push
jno
and
dec
loopne
fbld
adc
jle
cmpsb
lea
int
dec
cmp
nop
pop
and
subb
jl
xchg
mov
dec
shlb
imul
inc
repnz
mov
lahf
ret
hlt
sub
mov
aam
mov
or
cmp
push
jae,pt
cmp
adc
das
jne
sbb
push
ljmp
je
push
movsb
mulb
loopne
mov
push
test
sub
int
adc
cpuid
call
mov
or
mov
or
fwait
dec
lret
or
jge
hlt
add
dec
push
mov
mov
lret
packsswb
lods
xor
shll
and
ret
mov
jge
cmpsl
decl
xor
movsl
mov
test
hlt
jns
into
pop
clc
scas
test
dec
lcall
les
sbb
mov
ret
push
and
sub
inc
mov
push
je
shlb
sbb
subl
mov
dec
outsb
dec
icebp
stc
pop
addl
stos
sub
push
scas
jp
loope
test
sub
adcl
outsl
mov
pop
cwtl
push
jne
faddl
push
out
inc
stos
imul
mov
jle
sbb
lods
nop
ret
mov
add
out
stos
or
cs
sbb
and
mov
in
roll
pop
cwtl
scas
jbe
sbb
leave
or
inc
adc
in
xor
mov
stos
aam
mov
mov
cmp
call
rolb
rcr
dec
sub
pushf
mov
incb
mov
insl
cmp
fmuls
jbe
ljmp
bound
lahf
lock
inc
inc
stos
and
mov
int
xor
mov
decl
jo
decl
shll
decl
das
fs
sbbl
lods
add
add
scas
xchg
subl
fstl
arpl
cmp
sbb
and
sub
xchg
gs
sub
daa
decb
dec
jp
adc
mov
mov
adc
outsl
jne
xchg
jp
js
mov
loop
rol
out
and
mov
add
shlb
repz
ret
mov
mov
xor
in
add
add
bound
add
test
xchg
and
mov
jg
xchg
pop
dec
arpl
es
shll
cwtl
ja
je
iret
add
pop
sbb
in
movsl
shlb
int
je
outsb
sbb
cmp
aam
mov
push
fdecstp
add
lock
jge
jp
dec
ret
cmp
mov
mov
and
mov
sar
xor
int3
pop
bound
mov
or
fbstp
xchg
or
xchg
mov
mov
cld
or
fwait
push
pop
jae
sbb
test
mov
test
fimuls
adc
add
fisttpll
arpl
xchg
and
add
insl
popa
lret
mov
sbb
lods
or
add
int3
sub
mulb
jl
sbb
in
xchg
fxch
mov
ja
rclb
push
push
negb
lods
mov
adc
neg
js
and
mov
sbb
test
push
mov
rcll
and
pop
in
les
loopne
jge
pop
adcb
xor
ret
repnz
sbb
pushf
mov
inc
mov
add
adc
insb
das
sub
incl
mov
negb
and
hlt
arpl
loopne
and
notb
sbb
mov
ret
jne
cmp
jae
mov
je
mov
ja
or
loop
stc
cld
lahf
fstl
dec
in
popf
sub
sahf
push
nop
or
mov
aaa
cmp
inc
shll
add
add
outsb
clc
rcr
ljmp
mov
or
add
dec
or
jp
jle
inc
sahf
cmpsb
adc
pop
sahf
dec
mov
pop
mov
push
pop
iret
lret
cmpsb
adc
mov
mov
push
cmc
inc
dec
cwtl
rorb
cmpsl
mov
cmpsl
js
int
sub
cmp
or
sub
mov
jo
mov
jb
popa
inc
daa
mov
mov
mov
inc
cwtl
xor
mov
xchg
mov
ret
pop
mov
xchg
mov
add
pop
rcl
rcll
push
in
roll
je
movsl
inc
test
scas
stc
cli
xor
jle
dec
call
in
push
repz
arpl
dec
push
push
hlt
cwtl
aaa
test
ss
add
xchg
mov
dec
jb
push
jmp
cmp
fidivrs
add
mov
scas
add
jge
sbb
sub
daa
inc
nop
push
hlt
push
mov
push
adc
loop
stos
xchg
jge
mov
insb
add
pop
das
popa
in
loope
or
flds
sbb
push
xchg
in
xor
and
pop
pop
jb
pop
in
hlt
cmp
subb
push
hlt
shrb
pop
test
add
into
stos
xchg
mov
sbb
into
xor
fistpll
cmp
cmp
lcall
jo
pop
dec
mov
xchg
push
mov
cmp
mov
in
lret
and
mov
insb
add
xor
jo
cmpsl
out
pop
les
xchg
add
add
mov
dec
into
pop
sub
lods
xor
mov
fstl
or
insb
jmp
insb
aaa
ret
aad
fwait
jb
xchg
xor
xchg
clc
icebp
push
sbb
iret
push
lods
sub
cmp
and
outsb
sbb
cwtl
mov
xor
shl
mov
dec
fcmovb
outsb
cmp
add
out
dec
xor
mov
jae
pop
repnz
adc
sbbb
lahf
insl
loopne
jg
fldt
push
lcall
loopne
sbb
inc
dec
mov
mov
mov
push
iret
pop
sbb
in
cmp
fisubl
push
or
and
es
push
and
and
ja
sub
or
sbb
and
add
aad
pushf
cwtl
cmpsl
out
pop
push
loope
or
test
fcoml
hlt
sbb
adc
add
push
add
and
cli
repnz
cmpsb
test
adc
inc
mov
loop
ret
mov
dec
sbb
daa
ret
in
cld
push
xor
sbb
cmp
pop
loopne
out
sub
movsb
mov
daa
in
roll
mov
mov
jle
inc
xchg
std
push
add
in
cmc
mov
jbe
movsb
jecxz
add
sub
sbb
divb
test
and
ret
mov
sarl
in
rclb
loop
pop
jno
push
dec
into
in
mov
xchg
aas
add
fstpt
mov
or
in
or
xchg
or
dec
inc
sti
adc
fsubrl
rol
shlb
xchg
pop
jo
mov
or
outsl
insb
sub
jne
subb
push
xchg
pop
push
mov
fs
jnp
inc
mov
jmp
cmpl
in
add
mov
dec
mov
dec
mov
mov
mov
rcrb
dec
jmp
xchg
add
sbb
divb
jno
jne
mov
das
and
pop
push
imull
push
bound
add
into
aam
je
int3
mov
jne
mov
mov
repz
xchg
test
sbb
push
pop
or
dec
xchg
inc
jb
filds
shll
shl
cmp
cmpsb
add
jle
mov
dec
bound
addb
xlat
jl
les
aad
mov
or
add
lods
iret
icebp
aaa
pop
push
xorl
data16
ds
mov
xchg
or
or
daa
cmp
pop
lock
icebp
loop
clc
loop
aaa
push
in
mov
ja
xor
mov
push
sub
adc
add
mov
shll
cwtl
and
lahf
and
xchg
mov
mov
icebp
jnp
mov
dec
out
sub
inc
out
out
outsb
and
lods
out
cld
lgs
xchg
pop
insl
mov
fildl
sarb
pop
mov
xor
mov
js
outsl
out
adc
cmp
jbe
mov
cmp
xor
push
lea
movsb
out
sbb
in
scas
or
je
push
in
xchg
stos
lahf
sbb
daa
sub
jle
ds
lcall
out
adc
mov
aad
fsubrp
int3
and
loop
cmp
jge
fcmovnb
std
xchg
movsl
push
jno
inc
repnz
add
mov
push
mov
cmp
les
add
sub
test
les
mov
pop
stos
push
outsb
and
sarb
hlt
inc
adc
mov
dec
pop
test
cmp
in
and
inc
mul
add
adc
les
rolb
in
mov
les
jae
mov
gs
icebp
xchg
add
xchg
sbb
adcl
dec
scas
add
and
sub
or
inc
sahf
inc
std
cmp
loop
inc
pop
push
add
and
add
sbb
cmp
or
test
or
out
jo
stos
movsw
pop
mov
rcrb
add
stos
sub
std
repz
mov
shl
ret
inc
inc
jmp
add
shll
test
jle
jl
bound
cmpb
movsb
sarl
test
fsubrs
ficoms
sbb
lods
shll
pop
out
fidivs
aas
lret
inc
add
out
ret
insb
loop
jmp
mov
sti
fdiv
or
pop
pop
jl
pushl
addl
sarb
test
bound
mov
mov
sub
mov
jp,pt
adc
insl
roll
mov
test
andl
pop
rolb
jo
mov
test
jecxz
xchg
les
jle
scas
std
add
mov
sarl
loop
inc
inc
cmp
and
pop
mov
inc
loop
adc
mov
jg
ret
mov
and
pop
nop
jg
pop
popa
iret
outsb
add
movsb
jl
add
dec
pop
loope
mov
aas
xor
ret
mov
jge
cmpb
insb
jecxz
jg
fcomps
lahf
inc
push
rcr
incl
and
mov
inc
ficompl
mov
hlt
inc
scas
add
xchg
loopne
gs
lock
loop
inc
out
mov
shlb
sahf
mov
sbb
and
insb
popf
mov
push
cld
sbb
sub
ljmp
dec
push
cwtl
fs
sti
mov
or
test
imul
movsl
addb
xchg
add
movsb
out
outsb
push
mov
mov
repnz
cmp
dec
or
lret
ret
sub
test
clc
dec
out
dec
and
mov
rorb
and
ret
or
cmpsl
insl
mov
test
fwait
stos
les
mov
icebp
daa
mov
decl
js
and
jge
inc
mov
fistps
mov
stc
pop
cltd
mov
push
pop
ds
inc
adc
jno
cld
rcl
fcom
or
sub
divb
jg
fistl
lret
mov
outsb
dec
lahf
mov
fwait
in
and
cltd
in
pusha
in
int3
push
cmp
shrb
into
jp
daa
arpl
je
ds
sbb
test
subl
mov
sbb
adc
inc
fimuls
push
xchg
push
scas
and
test
mov
cmp
sub
insl
or
ds
loope
add
in
mov
mov
and
das
sbb
lret
andb
fcmovnb
ret
ljmp
adc
bound
jp
or
cmp
fcomi
pop
push
bound
lods
stos
and
out
enter
mov
int
fmull
jge
or
mov
bound
ret
insb
clc
cwtl
xchg
mov
inc
mul
mov
sbb
mov
jbe
jle
sub
sar
js
stos
xor
inc
push
push
popa
testb
ljmp
pop
mov
cmp
cmp
fwait
xchg
adc
pop
lea
sahf
dec
hlt
shll
dec
dec
subb
fldenv
push
cmp
addb
sti
pop
and
stos
subb
mov
dec
jp
push
bound
cs
leave
or
push
out
dec
mov
outsb
ret
mov
ret
and
lret
bound
fwait
push
fdivl
or
fstpt
punpckldq
mov
pop
jns
movsb
sub
out
rolb
sbb
stos
add
in
insl
fildl
mov
jno
sbb
shlb
sbb
dec
dec
pop
jns
mov
dec
popa
add
pop
shlb
aam
pushl
in
mov
out
cmp
sbb
pop
xchg
data16
jb
add
sub
test
mov
repnz
daa
and
test
adc
sbb
adc
rcl
dec
dec
sub
inc
mov
or
xor
sbb
clc
add
pop
inc
jl
dec
mov
jno
into
xchg
xor
fstl
fisttpl
push
jecxz
out
push
jo
add
fisttps
fildl
cli
mov
xchg
popa
xor
sarl
pop
dec
inc
xchg
cmpl
push
add
mov
fadds
ficoml
jle
and
repnz
outsb
cs
mov
fnstsw
and
mov
cmpsl
int
lcall
xadd
xchg
mov
mov
je
push
pop
mov
sub
gs
mov
loop
movsb
gs
dec
mov
add
inc
add
sar
xor
leave
aaa
int3
sub
push
js
xor
xchg
imul
loopne
cmpl
enter
xchg
std
cli
call
mov
mov
fisubs
jo
jge
rorl
xor
mov
mov
mov
and
mov
mov
gs
nop
lods
pop
sub
inc
push
fadd
enter
in
adc
dec
ror
mov
sbb
xchg
adc
sub
add
lret
insl
sbb
hlt
add
xor
repnz
lods
sbb
outsb
mov
lea
movsl
enter
xchg
mov
cmp
in
es
xchg
mov
dec
ret
mov
xor
inc
mov
lahf
cs
add
pusha
call
andb
dec
fs
sbb
push
add
or
je
mov
mov
xor
incw
ret
lods
pushl
add
out
mov
mov
or
dec
scas
bound
aaa
les
mov
xchg
mov
aad
out
sub
mov
insb
jp
xchg
lods
cmpsl
lret
push
shrl
adc
lods
adc
out
lret
or
xchg
testl
or
mov
push
and
sarb
ljmp
fisubrl
and
cmp
dec
pushf
fdivl
mov
dec
cwtl
xchg
mov
shlb
mov
mov
push
cld
jecxz
sbb
mov
inc
lods
inc
cmpsb
inc
dec
andl
dec
cmp
mov
push
inc
cmp
jmp
mov
mov
adc
sti
adc
in
xchg
in
in
push
inc
out
dec
and
or
lds
iret
mov
sub
or
mov
shlb
sarb
mov
mov
popf
daa
lret
jge
out
push
sub
xor
fwait
mov
xor
mov
scas
add
inc
movsb
test
xchg
lods
outsb
lea
ret
dec
pop
fldl
testl
push
lea
outsb
mov
cmpsl
or
inc
jnp
sti
out
hlt
ret
int
sub
outsb
mov
dec
mov
in
jle
lods
hlt
mov
dec
jbe
lock
jno
nop
fisubrs
add
ljmp
mov
inc
aas
mov
mov
dec
ljmp
xchg
outsb
loop
sbb
popf
stc
sbb
mov
fbstp
mov
add
movsb
xor
fnsave
in
lods
push
mov
xorb
inc
xor
fs
data16
gs
xor
inc
fisttpl
adc
mov
test
pop
jne
pop
push
je
hlt
cmp
test
inc
jp
mov
xchg
outsb
jmp
cwtl
mov
jo
outsl
fnsave
lcall
outsl
inc
mov
jle
and
call
lock
mov
mov
jp
mov
repnz
test
ds
push
jns
mov
jae
mov
pop
repz
or
jecxz
mov
scas
loopne
pcmpeqd
imul
add
shll
into
mov
push
ljmp
fiaddl
mov
subb
dec
jecxz
xor
sbb
pop
loope
and
int3
movsl
mov
mov
adc
stos
loop
das
out
out
mov
mov
cmc
xchg
mov
outsl
aaa
rcrl
dec
je
mov
in
shll
fisttpll
int
repz
cmpl
fs
jo
arpl
xor
insl
jmp
rclb
pop
mov
les
mov
rcl
bnd
xor
dec
push
mov
cwtl
arpl
aad
mov
mov
dec
cmc
addl
or
cmp
jnp
fimuls
jo
adc
fcoms
mov
popa
pop
jg
adc
out
sbb
or
mul
add
out
js
lock
mov
sbbb
push
jle
ret
mov
flds
inc
push
jbe
inc
lret
pop
jecxz
popa
hlt
mov
cmp
dec
inc
in
lea
call
and
push
or
das
loopne
xchg
pop
or
dec
add
rorl
dec
mov
fs
or
or
int3
rol
sub
adc
fnsave
pop
push
xor
outsb
xor
sbb
fsubr
in
adc
and
in
add
dec
inc
or
test
cmp
xor
stos
inc
push
int
jg
cmp
inc
test
fisttpl
shr
aam
enter
lcall
mov
lcall
mov
jl
inc
and
sbb
jno
jmp
cmp
repnz
mov
inc
push
mov
popf
mov
mov
sbb
xchg
out
aam
push
cmp
cli
pop
mov
pop
mov
add
lods
add
add
jecxz
insb
fucom
shr
inc
fmul
mov
aam
adc
popa
jle
rclb
sub
xchg
xor
test
in
cwtl
and
std
outsl
incl
aaa
inc
mov
lcall
int3
push
cmp
inc
dec
sbbb
cmpsb
inc
mov
addl
insl
dec
pushf
push
lods
xchg
xor
push
aam
mov
hlt
clc
lea
add
pushf
lcall
scas
push
pop
popa
test
outsb
data16
lods
push
or
add
inc
sbb
dec
fsub
hlt
pushl
mov
hlt
sub
outsb
into
arpl
sbb
cmp
xor
fs
pcmpeqb
sub
cmpsl
xor
push
dec
mov
adc
test
loopne
outsl
xor
mov
sahf
mov
aad
inc
punpcklwd
addb
aam
pop
inc
lret
or
mov
cs
and
jnp
sbb
add
inc
test
jmp
addr16
jbe
add
xor
push
fsubl
push
mov
cld
ret
ja
sub
push
pop
cs
dec
add
ljmp
mov
test
add
rorb
or
xchg
mov
jb
aaa
xor
push
iret
dec
je
dec
aaa
lret
sahf
xor
sahf
notl
push
sti
add
ljmp
test
ljmp
add
outsb
and
mov
lret
inc
pop
push
dec
movsb
daa
jmp
mov
xor
fsubl
jecxz
outsl
fs
xchg
push
pop
inc
mov
fmull
jnp
xchg
ret
shlb
pusha
adc
mov
cmpsl
in
xor
dec
repnz
cmpsb
add
loopne
lods
lods
or
cmpsb
and
dec
jne
xor
mov
insl
ret
add
inc
leave
push
add
inc
pop
xchg
les
mov
popa
push
mov
test
jl
pop
popa
mov
test
addb
fstpt
or
pop
mov
scas
pop
xor
pop
lock
push
hlt
mov
xchg
stos
dec
aas
jae
stos
rcrb
loope
adc
adc
dec
rorb
mov
sbb
sbb
roll
iret
subb
sbb
dec
arpl
xorl
mov
fldlg2
shll
cli
lds
xchg
iret
xchg
inc
push
aaa
dec
cmp
cmpb
popa
dec
dec
jl
xchg
xor
fld
mov
insb
push
adc
stc
mov
repz
lock
test
movsl
cmp
mov
mov
clc
mov
aam
icebp
gs
or
jecxz
mov
push
jge
test
lret
rol
sub
les
or
ljmp
mov
adc
add
ja
outsb
ds
adc
jl
xchg
pop
jo
jb
lods
jle
mov
mov
xor
add
lock
movsl
pop
call
movaps
mov
in
incb
dec
adc
scas
lahf
dec
into
inc
sbb
add
mov
rolb
fsubr
ds
xchg
mov
add
loope
or
cwtl
mov
dec
add
cmpb
iret
adc
cmp
mov
ret
xchg
mov
adc
xchg
fistps
and
test
cmpl
out
mov
push
in
jnp
negb
xor
nop
rclb
repz
dec
adc
push
cli
int
pop
faddl
and
aad
faddl
pop
adc
test
notl
sub
out
xchg
jp
xchg
mov
loope
addr16
jge
jns
inc
and
dec
testb
testl
cmp
adc
mov
out
rorl
mov
add
dec
mov
push
mov
movsb
addb
sub
xchg
jmp
pop
add
lds
imul
pusha
xchg
jl
aas
inc
mov
mov
les
xchg
add
cld
ds
scas
lods
mov
and
cmp
mov
and
fisttps
add
adcb
mov
sbb
mov
mov
mov
xor
dec
test
xchg
out
icebp
test
les
sbb
lcall
flds
mov
adc
insl
jmp
pop
lock
or
mov
shlb
pop
ret
push
test
pusha
mov
das
adc
je
ret
adc
fadds
lods
pusha
jle
or
xchg
add
mov
or
jae
aam
or
int3
data16
jno
addr16
hlt
pop
lds
test
addr16
ret
mov
adc
cs
mov
add
sbb
in
add
shlb
leave
inc
mov
lods
leave
jle
xor
jb
push
push
ss
testl
cld
pusha
movsb
mov
movups
jo
test
in
dec
negl
cmp
mov
mov
scas
bound
sti
add
xor
push
push
push
jmp
xor
mov
and
pop
sub
dec
mov
xchg
mov
add
and
das
sarb
shrl
fcmovnu
fs
int3
push
jecxz
std
mov
ljmp
xor
inc
mov
jmp
and
adcl
pusha
cmc
mov
xor
insb
pop
cmp
js
in
mov
jge
xorl
stc
sbb
addb
es
add
mov
push
dec
ret
hlt
and
push
addr16
push
push
fdivl
push
ret
jg
lds
dec
popa
or
pop
lods
xchg
hlt
cmp
mov
dec
push
fsub
ficompl
push
addb
cmp
xor
mov
push
mov
pop
imul
cwtl
mov
inc
mov
insb
sti
adc
jae
cmp
lea
je
sbbb
jp
sahf
sbb
mov
mov
insl
xor
outsb
add
inc
push
popf
jp
add
fstpl
push
nop
mov
testb
pop
faddl
xlat
test
cld
fdivrs
fs
fwait
loopne
add
xchg
lods
mov
pop
js
out
cmp
cld
cmp
daa
pop
adcl
jo
rorl
dec
cmp
std
in
bound
inc
mov
and
mov
js
push
mov
add
insl
or
aaa
jbe
shrb
lds
in
faddl
jp
les
sub
add
cmp
jbe
mov
add
dec
xchg
in
sub
add
fdivs
and
ret
stos
out
rcr
fwait
jns
pop
adc
cmp
lea
daa
in
rcrl
cmc
cmc
mov
hlt
ror
mov
push
inc
cmpb
hlt
inc
dec
push
outsb
scas
pop
push
sbb
hlt
mov
loop
fstpt
sbb
les
movsb
popf
push
lock
jl
into
in
js
fisubrs
int
mov
popf
pop
add
push
cmpsl
in
and
sbbb
xor
push
jle
pop
inc
cld
inc
divb
xor
mov
push
in
inc
sahf
clc
cmp
leave
pop
call
push
cmp
push
dec
mov
push
aas
out
mov
pop
add
sbb
cmp
xor
sub
jae
push
loope,pt
and
mov
mov
add
mov
ret
jns
ret
dec
and
loopne
fisttpll
mov
je
jge
xchg
enter
inc
aas
andb
cs
loopne
in
ja
inc
xchg
je
fbld
adc
outsb
xor
pop
aad
lret
and
sub
test
sti
or
repnz
jb
sub
ja
inc
xor
xor
sub
cmp
lret
push
fiadds
inc
or
cmp
insl
sbb
repz
addr16
mov
xlat
mov
ret
divl
ds
sbb
leave
sbb
xchg
daa
fisubrs
jmp
stos
mov
stos
inc
mulb
or
xchg
clc
dec
ja
es
int3
outsb
ret
aam
pop
mov
add
faddp
mov
mov
fisttpl
js
and
or
fisttps
push
dec
jno
and
mov
les
rol
dec
cmp
enter
push
mov
push
dec
sub
pushf
xor
test
add
arpl
popf
lods
lea
dec
int3
push
add
notb
fsubp
adc
aaa
enter
insl
je
mov
xlat
je
cmpb
sahf
je
xor
adc
add
out
fistpll
imull
sub
cmc
xchg
cmp
aam
fldl
sbb
push
clc
rcrl
dec
fidivs
mov
push
inc
or
sbb
xchg
call
mov
shll
dec
inc
xchg
les
gs
in
mov
push
pop
das
lahf
pop
int3
dec
jle
loop
data16
jp
sbb
les
aad
sarb
sbb
add
roll
movsb
push
mov
aas
jmp
test
inc
xor
in
addl
jae
ret
jp
jo
hlt
add
js
iret
sarb
les
jmp
test
mov
loope
fdivrs
inc
sti
popa
inc
push
cld
push
or
adc
mov
les
in
or
add
subl
ret
push
lcall
fcmovnu
add
popl
mov
mov
mov
mov
pop
jbe
out
lahf
loopne
mov
jmp
in
mov
add
mov
clc
push
pop
dec
popa
in
leave
loopne
push
jle
loope
mov
test
inc
andl
push
pop
mov
lahf
loop
icebp
cmp
push
sbbb
jne
jge
jecxz
ljmp
test
leave
fs
scas
andl
jbe
inc
add
jbe
cmp
popf
jl
loop
pusha
repnz
pop
push
dec
test
mov
loopne
jmp
scas
add
lahf
shr
xor
ret
aas
sarb
jbe
jge
aas
ljmp
mov
inc
jp
rol
ret
cmpb
jl
cmp
push
add
mov
mov
les
loopne
outsb
add
mov
jp
add
scas
flds
mov
add
iret
repz
jo
jo
out
dec
cmp
or
ret
cmp
pop
jecxz
mov
inc
pop
mov
ds
scas
shll
mov
sarl
push
imul
add
roll
scas
inc
sti
arpl
iret
pop
data16
loope
insb
jle
xorb
movsb
lock
repz
inc
leave
and
xor
cli
je
shlb
cmp
fists
out
mov
pop
inc
loopne
mov
dec
jbe
loope
fmull
dec
and
ret
jne
and
std
push
mov
fisubrs
and
out
mov
dec
inc
sbb
icebp
sbb
shl
pop
push
in
in
iret
pop
incb
std
mov
cmpsl
pop
rcr
aam
mov
int3
rcr
cmp
mov
xor
decl
jb
imul
push
std
cmp
push
test
jnp
jp
jmp
fmul
lds
jp
movsb
push
mov
aad
inc
pop
push
fldcw
xlat
pop
mov
aas
pop
ret
adc
arpl
lahf
cld
xchg
mov
jbe
mov
push
inc
push
orb
push
andb
das
insb
mov
push
mov
in
in
push
leave
fisubs
jl
test
xor
mov
sar
cmpsl
cli
pop
bound
mov
push
sti
outsb
into
and
mov
xchg
shlb
loope
push
and
call
and
push
test
movsb
sub
adc
lock
mov
sbbb
loop
ret
and
daa
xchg
mov
pop
adc
jl
mov
sub
movl
and
xchg
pop
lret
ss
adc
aad
mov
sub
dec
je
fs
mov
mov
inc
in
lods
movsb
and
or
sahf
xor
add
sub
add
pop
aas
int
xor
fldl
sbb
faddl
lahf
jle
mov
pop
mov
jge
enter
xchg
fs
mov
outsb
sbb
push
sbb
push
sahf
add
icebp
mov
cmc
cmp
jle
lock
addl
xchg
push
mov
sbb
xchg
daa
mov
cmpsl
jecxz
lods
mov
insl
mov
inc
push
inc
ret
sbb
or
jp
add
int3
mov
sub
cwtl
xchg
in
ret
nop
push
or
mov
dec
gs
mov
inc
mov
sbb
movl
in
cmp
test
jmp
dec
inc
rorb
ljmp
push
lea
xor
add
hlt
clc
lock
push
int
repnz
sbb
dec
out
mov
pop
movsb
aad
in
pushf
mov
mov
out
aas
jle
je
ljmp
lods
xchg
push
sbb
repnz
fdivl
in
xor
or
outsl
fdivs
fsubl
xchg
jle
aas
aam
push
in
mov
popf
ficoml
jb
mov
mov
pop
sbb
mov
sub
mov
lea
jne
mov
les
aas
add
mov
xor
daa
xchg
fisttps
mov
mov
shll
mov
fnstsw
inc
mov
popa
pushf
pusha
jae
fs
cmc
mov
data16
hlt
insl
shr
int
push
jmp
mov
sbb
sub
das
in
mov
cmp
aad
iret
stc
lock
sub
ffree
inc
push
mov
scas
outsl
adc
push
shrl
lods
ljmp
adc
lock
dec
or
mov
test
and
add
mov
xchg
orl
shrb
push
in
cld
fs
pop
fiaddl
ret
sub
push
and
mov
add
cld
push
clc
jle
mov
iret
addb
mov
sub
inc
outsb
fidivrs
insl
sbb
ds
fdivrs
sbb
test
jle
scas
fldl
fisttps
or
out
cmp
pop
xchg
ds
cmpsl
inc
movsb
cmpsb
adc
mov
xorb
enter
pop
xor
decl
jo
imul
xchg
pop
mov
mov
push
or
adcl
cld
addl
cmp
pop
xchg
je
fistpll
sbb
mov
add
pop
dec
ret
add
lcall
mov
movsb
add
in
je
shrb
enter
out
ret
out
sbb
jmp
inc
dec
mov
imul
or
test
mov
jmp
xchg
frstor
rolb
out
xchg
shlb
addr16
mov
enter
xor
pop
movsb
insb
sbb
mov
rcrb
rcrb
arpl
lods
pop
inc
int3
pop
fwait
aas
shlb
jp
pop
sbbl
aam
cmpl
xor
movsb
into
adc
testl
push
cmp
pushf
enter
pop
out
subl
int3
mov
jbe
xor
jbe
mov
or
lods
cld
sub
icebp
mov
mov
call
push
ret
sub
cmp
mov
inc
lods
in
in
xorb
push
dec
add
cs
lods
dec
cmpsb
push
pop
in
jecxz
repnz
lret
xchg
sub
in
lret
cmp
lea
jecxz
and
push
aam
xacquire
xor
ds
incb
call
aas
ret
scas
lea
loop
pop
test
jecxz
or
or
mov
pop
movsl
inc
imul
andb
fstpt
je
and
shr
mov
inc
add
daa
insb
mov
sub
lret
sar
inc
add
and
mov
in
shll
pop
add
fstps
movsl
or
hlt
cmpsl
mov
mov
cmpsb
add
das
stc
mov
ret
jno
bound
popf
aaa
xchg
insb
js
sbb
test
repz
add
loop
sub
out
in
shll
test
jge
popf
loop
imul
test
in
ljmp
decb
adc
adc
aam
insb
imulb
loope
push
out
mov
push
sub
iret
mov
fwait
pop
mov
jbe
push
and
test
scas
xchg
ret
mov
cmp
dec
shll
cli
sbb
mov
xchg
push
mov
dec
nop
fs
push
xor
hlt
fisubs
fdivrl
sbb
mov
aaa
jne
ljmp
add
test
push
scas
add
and
ret
mov
mov
lock
push
inc
adc
mov
xchg
daa
shrb
push
iret
mov
push
sbb
mov
push
dec
repz
push
sbb
mov
mov
inc
push
imul
dec
cmp
dec
test
stos
jns
sti
in
stos
sahf
cwtl
pusha
pop
jecxz
mov
jg
xchg
lods
rorl
adc
push
cmp
shrl
dec
call
fadd
inc
adc
cmp
out
or
subb
lock
sub
test
sti
repz
les
sub
lret
int
push
sbb
inc
mov
inc
lcall
adc
xchg
pushf
cmp
gs
cltd
sub
mov
lret
and
mov
les
ja
addr16
jmp
cli
mov
dec
pop
repz
pop
cli
xor
rcrb
and
add
pusha
test
add
mov
jno
jmp
sti
fiadds
inc
insb
mov
icebp
adc
inc
or
pusha
shlb
lock
es
test
daa
xlat
add
movsb
xchg
push
jo
mov
stc
mov
jl
movsl
sbb
andb
xlat
jnp
js
jnp
or
movb
andl
lea
loopne
pop
and
push
cli
out
out
clc
jb
xchg
rcrb
sti
or
movsb
test
movsb
lock
mov
cli
mov
jnp
adc
push
push
push
test
cmp
or
leave
ss
cmp
cmp
enter
jp
mov
ss
add
cmp
sub
inc
xor
test
xor
add
sarl
jg
inc
inc
xor
cmp
ja
movsb
mov
sub
mul
loop
inc
insb
mov
in
mov
mull
mov
add
cmp
push
shlb
jl
add
jl
mov
pop
icebp
lea
lock
lds
subb
test
repnz
jb
loop
jno
jbe
sbb
sbb
stos
xchg
dec
imulb
push
das
scas
jnp
add
cmc
outsl
repz
std
inc
sti
adc
out
cmp
into
in
data16
cmp
test
shl
adcb
test
lods
and
js
jge
or
loope
adc
push
dec
pop
adc
dec
daa
test
jl
jne
iret
jle
ss
pop
test
cmpsl
rolb
mov
lock
xor
mov
leave
mov
mov
push
das
push
push
in
jae
loop
jns
int3
pop
inc
mov
or
and
inc
ss
pop
aam
mov
cmp
inc
lcall
lock
cwtl
js
xchg
pop
add
mov
cltd
cmp
aad
jp
mov
in
jno
aas
dec
inc
bnd
jno
push
outsl
loop
mov
xchg
cmp
outsl
adc
sbb
cmp
sub
in
add
mov
hlt
sti
mov
and
add
push
cmp
push
lret
subb
xorl
add
mov
jb
pop
movsb
aaa
mov
bound
cwtl
aam
adc
or
in
mov
mov
xor
aaa
jo,pt
int
sti
inc
test
cmp
cltd
mov
jmp
inc
mov
inc
or
fldl2t
outsb
int3
aas
pop
sub
push
push
fcmovu
xor
sub
pop
mov
sbb
mov
std
addb
jae
cli
test
out
and
data16
xlat
xor
out
mov
or
add
inc
push
orb
inc
add
add
mov
insb
or
xchg
pop
sub
out
test
mov
jo
inc
out
ljmp
and
inc
mov
jb
neg
bound
fmuls
dec
push
dec
cwtl
push
xchg
shr
roll
ljmp
inc
jb
je
mov
add
push
mov
rolb
and
jge
imul
add
andb
xchg
mov
pop
push
clc
outsb
mov
add
fdivr
add
jo,pt
xchg
shlb
and
in
jp
movsb
pop
jmp
inc
or
sbb
hlt
jecxz
repz
mov
mov
jo
loop
out
push
jge
jae
push
push
mov
and
in
mov
and
fbld
mov
adcb
pop
ror
push
jecxz
or
pop
mov
roll
popf
adc
sahf
dec
cld
cli
jl
dec
adc
shrb
mov
fucomi
mov
outsl
sarl
xchg
or
ss
int3
cmp
ret
daa
mov
test
ret
rcrl
jns
adc
mov
orb
push
or
ret
xor
aad
in
add
push
lods
sarl
stc
popa
xchg
mov
pop
enter
arpl
jnp
mov
out
loope
push
xchg
xor
mov
sub
mov
sbb
ret
pop
in
popf
ss
cmp
mov
ret
rorl
pop
enter
push
fidivrs
cmp
mov
add
add
imul
mov
movl
mov
aam
lock
mov
mov
repz
add
insl
and
ret
int3
xor
rorb
inc
and
adc
loopne
idivb
test
dec
jbe
mov
xor
cmp
cli
out
pop
cmpsb
and
sbb
mov
jmp
or
pop
mov
add
and
cld
les
pop
mov
shrb
push
pop
jae
xchg
pop
cmp
mov
xor
in
mov
jle
lcall
ss
je
ffree
out
andl
mov
ret
push
jp
jecxz
adc
add
pop
lret
dec
inc
sbb
mov
push
push
pop
test
aam
shll
add
rcl
mov
sti
daa
ss
ret
mov
sbb
imul
bound
sub
mov
mov
dec
stc
lds
pop
pusha
arpl
add
mov
xorb
add
add
andl
stos
push
xor
mov
xchg
ret
cmp
jnp
ffreep
jp
pop
mov
mov
and
mov
cli
fdivrp
mov
gs
insb
add
aad
das
call
sbb
aam
xor
nop
lods
inc
dec
rolb
mov
xor
stc
gs
fisubl
stos
enter
adc
out
out
into
mov
imul
hlt
pop
mov
divl
dec
mov
pop
cmc
lea
es
loopne
add
push
mov
sbb
mov
mov
add
push
dec
add
add
daa
loop
icebp
xor
cli
ret
outsl
push
mov
lret
outsb
push
mov
pop
pop
lock
mov
repz
ds
sbb
cwtl
dec
and
andl
sbb
lods
push
pop
or
lds
add
push
mov
mov
inc
and
lahf
xchg
mov
rclb
out
inc
aam
cmp
sub
cwtl
popf
sub
mov
enter
push
addl
jle
lret
add
cltd
sub
hlt
mov
inc
mov
out
mov
sbb
sbbl
dec
imul
aam
cli
gs
xchg
stos
pop
aam
jp
cmp
faddl
or
std
fcmovnbe
adc
inc
jle
fcompl
mov
push
sub
imulb
fildl
sar
insb
mov
insb
dec
pop
push
aas
dec
insb
test
xchg
mov
jnp
add
daa
add
in
mov
inc
in
lea
and
add
fs
jne
shll
pop
push
popa
jns
mov
inc
inc
mul
fs
pushl
enter
std
pop
les
mov
hlt
lods
enter
push
scas
aaa
stos
mov
inc
faddl
insb
inc
out
add
sbb
xchg
cmovo
inc
sub
aam
mov
or
out
add
push
sbb
push
mov
mov
in
or
xor
fldl
ret
mov
and
jb
dec
adc
ret
and
sahf
lock
xchg
sub
jns
daa
pop
imull
mov
loopne
mov
enter
adc
das
and
push
test
jo
mov
mov
inc
inc
mov
jnp
div
and
jae
mov
and
inc
xor
jae
or
pop
cmc
rorb
leave
hlt
fidivs
js
push
movsb
dec
jnp
inc
jb
xor
insl
pop
mov
jge
xchg
or
rcrb
mov
enter
movl
out
ret
mov
mov
test
aad
push
add
outsb
ret
out
daa
dec
mov
scas
fsubl
inc
jecxz
inc
cmpb
int3
xchg
ret
mov
pop
in
mov
and
adc
subb
fcomps
into
orb
lock
sti
pop
pop
add
jbe
test
push
outsb
data16
insb
jge
bound
mov
mov
stos
and
rcr
int
ret
ds
sbbl
hlt
das
inc
fcmovb
pop
int
mov
mov
roll
dec
jns
mov
mov
pushl
mov
or
mov
or
xor
add
sbbb
push
mov
mov
lods
ret
ds
jns
mov
mov
jne
mov
rclb
pop
push
insl
insb
adc
jecxz
mov
lea
lods
in
sub
push
jb
jo
add
test
jle
dec
adc
and
add
scas
mov
repz
addr16
test
xor
cs
inc
out
add
fstl
jg
add
andb
pop
mov
lods
mov
iret
xchg
das
push
dec
xchg
and
mov
ret
mov
loope
ljmp
rorl
fs
icebp
lret
filds
xchg
xor
inc
dec
adc
adc
jp
and
jb
ljmp
pushl
iret
lods
lcall
test
and
inc
lea
xor
ljmp
mov
pop
xor
fsubrl
jecxz
aas
fisttpl
fstps
js
out
inc
mov
cmp
lock
and
sub
mov
mov
sbb
std
cmpsl
or
sbb
iret
push
in
pop
inc
push
cld
mov
xchg
inc
push
ret
loopne
jle
dec
ds
adc
lcall
rcll
popf
test
mov
adc
aas
fsubp
dec
cli
sbb
xchg
cltd
scas
repnz
push
arpl
lods
add
pop
or
xchg
test
dec
pop
xorb
lds
mov
faddl
rorb
scas
jecxz
sub
dec
int3
xchg
orb
fildl
push
mov
daa
adc
fists
test
hlt
mov
fimuls
mov
ret
shrl
aad
xchg
xor
pop
sbb
xor
outsb
js
mov
es
orl
rolb
sub
sbb
cmp
aas
mov
rol
mov
mov
ljmp
and
pop
cmpsb
mov
aas
pop
fmuls
movsb
sub
push
xchg
push
mov
stos
hlt
mov
aam
aas
inc
fs
jmp
push
sbb
mov
mov
movsl
daa
dec
sbb
mov
push
jp
sub
add
jg
inc
aad
mov
push
dec
xor
mov
sub
or
insl
test
dec
out
xor
sti
sbb
popf
fwait
hlt
roll
enter
mov
fucomi
lcall
xchg
ja
les
xchg
je
sbbb
mov
pop
adc
das
cwtl
add
ret
push
jno
jmp
cli
test
cld
sbb
loopne
sbb
pushl
cmp
not
sub
mov
int
pop
push
outsl
xchg
lret
jo
js
mov
cmp
ja
insb
es
popa
andb
mov
dec
inc
add
push
xor
mov
mov
pop
je
add
or
loop
xchg
je
adc
test
dec
mov
ret
add
mov
mov
movsl
aaa
scas
in
and
and
cmp
inc
xor
stos
icebp
test
inc
dec
mov
movsb
les
or
repnz
pop
jecxz
push
mov
push
pmaddubsw
ror
add
shrl
shll
mov
add
in
xor
fmull
pop
xchg
lods
jmp
jp
ficompl
lret
hlt
push
sarb
mov
arpl
mov
movsl
cwtl
sti
pop
sub
pop
push
stc
insl
pop
mov
xor
and
xchg
jbe
mov
arpl
sbb
pop
fucomi
mov
jmp
icebp
insl
sub
sub
js
mov
mov
enter
mov
shll
pop
rcrl
js
mov
fcomi
rcrl
insb
icebp
aad
jnp
mov
jp
dec
data16
push
sub
mov
cmp
cmp
jno
adc
push
mov
xchg
push
cmp
pop
pop
lret
roll
data16
andl
repnz
shlb
out
rolb
clc
add
pop
sub
fisubrs
je
sub
subl
pushl
cmp
add
xchg
hlt
adc
lea
out
cld
cwtl
clc
daa
jmp
sub
mov
dec
call
xor
in
sub
adc
out
push
push
pop
add
pop
mov
adc
inc
push
fidivrs
and
ljmp
out
inc
test
sub
or
aas
lahf
push
cmp
mov
stc
pop
cmp
addb
fs
mov
push
hlt
shll
lret
rcrl
add
pop
sub
inc
mov
imul
pop
fsubrs
xchg
add
and
jne
and
arpl
js
push
test
rorl
jo
mov
daa
inc
add
inc
lahf
mov
inc
mov
stos
xchg
cld
pushl
push
test
mov
xor
push
mov
rcll
and
push
sahf
loope
ret
mov
xor
inc
hlt
mov
jb
bound
cmpsl
rcr
or
mov
or
xlat
jo
pop
sarl
ja
mov
nop
bound
arpl
les
xchg
jb
faddl
loopne
mov
scas
and
mov
or
les
inc
outsb
jae
or
mov
mov
fistpl
popa
mov
mov
mov
adcb
mov
xor
mov
hlt
aaa
push
fs
in
loopne
cwtl
add
pop
cmc
repnz
ja
pop
loop
cmp
hlt
jo
sub
mov
repnz
push
push
aaa
xchg
inc
imul
mov
push
sbb
cmpb
scas
push
and
pop
push
pop
das
xlat
sbb
fwait
pop
add
or
cwtl
icebp
leave
cli
jno
ret
in
jl
mov
or
repnz
hlt
imul
out
fisubs
jle
andl
lds
push
dec
xor
mov
sub
xchg
adc
test
out
xor
nop
xchg
testb
pop
inc
cmp
int3
push
pop
scas
mov
jg
mov
cmp
jnp
xchg
cli
gs
pop
pop
jp
mov
ret
pop
xchg
add
or
stc
in
and
loop
sarl
jmp
pusha
adc
fst
sbb
outsl
out
sahf
inc
test
adc
mov
cli
ret
mov
push
cs
mov
jl
push
pushf
test
dec
fwait
jge
mov
xchg
sbb
xor
mov
pop
xor
push
mov
fwait
pop
shll
loopne
mov
movaps
cld
dec
out
rclb
data16
mov
ds
rcr
les
popf
dec
push
mov
jo
repz
mov
or
inc
mov
aaa
or
sbb
scas
xchg
test
imul
and
cltd
sbb
aad
push
xchg
rclb
std
jmp
mov
in
in
lret
pop
ds
aam
xor
fs
xor
rorb
add
push
iret
pop
inc
push
outsb
push
cld
fsubs
subb
inc
mov
xchg
jo
test
sbbl
adc
mov
push
cwtl
ret
roll
in
push
bnd
or
aad
ret
push
jecxz
inc
pop
andb
popf
push
mov
inc
pusha
dec
leave
loopne
dec
sbb
clc
jns
cmp
or
insb
add
in
push
inc
div
rolb
add
in
add
cmp
nop
xchg
or
lret
add
in
hlt
dec
dec
jne
cmp
mov
push
inc
xchg
ret
in
pop
and
in
add
dec
loopne
popa
adc
adc
clc
js
push
push
mov
nop
push
call
stc
fmuls
addb
call
xor
out
stos
ss
jns
in
lcall
dec
js
lds
mov
pop
mov
call
out
int
repnz
shll
stos
aam
adc
jle
sbb
jbe
lea
push
push
jmp
fstpl
mov
fadd
rcll
outsl
movl
repnz
pop
pop
out
stc
add
add
lcall
jl
add
dec
adc
test
fwait
ret
sbb
fdivr
les
pop
inc
sahf
arpl
mov
inc
loopne
pop
xchg
js
cmc
xchg
jle
dec
mov
imul
incl
mov
in
rolb
and
inc
clc
inc
add
scas
pop
dec
out
mov
sbb
push
push
cld
cmpsb
xchg
mov
hlt
cld
dec
dec
pop
les
add
mov
mov
lret
jmp
jb
push
mov
test
add
inc
or
loopne
lds
cmp
in
aam
push
push
ds
push
aad
pop
mov
aad
das
add
push
add
lahf
jge
sub
cld
adc
pop
std
jecxz
fdiv
je
rol
ljmp
cli
cmpsb
pop
rcll
mov
cmp
mov
out
in
mov
in
sbb
mov
adc
lret
or
incb
push
in
int3
inc
pop
jns
dec
jecxz
jae
pop
imul
sahf
mov
ss
adc
shll
cmc
push
fidivl
std
sahf
pop
sbb
mov
lret
pop
jb
insl
shrb
imul
push
mov
ficoml
cmp
jmp
push
mov
cwtl
clc
and
xor
call
ljmp
inc
divb
gs
je
mov
cmp
pusha
dec
fimull
imul
subl
dec
ds
testl
pusha
repz
pop
or
int3
gs
call
stos
int3
jge
pop
insb
mov
das
and
jo
sub
shlb
xchg
lods
pop
fwait
mov
jmp
dec
xor
cmc
repz
inc
ficoml
cli
jecxz
fisubrs
incb
push
movsl
in
hlt
in
je
dec
sar
imul
addr16
mov
je
shr
test
cmp
decb
std
out
cld
sbb
cld
inc
cmp
push
push
imul
mov
add
ljmp
jmp
add
sbb
movsb
insb
push
mov
mov
xchg
inc
dec
cld
es
les
add
int3
add
inc
test
mov
ss
test
push
or
jae
loope
jg
scas
xor
dec
xor
mov
inc
ljmp
dec
jns
je
push
add
icebp
lods
dec
push
nop
push
mov
lcall
int3
mov
pop
repz
or
add
dec
incb
mov
orb
call
hlt
cld
cmp
and
add
fwait
adc
mov
leave
stos
add
mov
lret
mov
jmp
rcr
test
fwait
adc
mov
add
rol
mov
mov
jbe
out
jle
mov
mov
je
mov
test
jp
iret
adc
mov
add
stos
mov
jg
aas
scas
pop
cmc
hlt
sbb
int3
sarb
mov
dec
or
xchg
mov
pop
inc
add
jmp
outsb
pop
mov
mov
test
enter
or
inc
jecxz
sbb
jo
ljmp
je
les
sar
enter
xor
add
in
mov
mov
je
or
test
jge
lcall
push
aas
adc
sub
in
dec
and
lea
outsb
or
push
ret
loopne
repnz
je
aas
and
jp
sbb
add
outsl
jbe
ret
in
rol
inc
jecxz
aas
sub
pop
add
add
int3
jl
mov
dec
jg
sbb
jmp
inc
popf
test
adc
ljmp
jae
decb
jmp
push
fsin
add
cmp
xorb
in
mov
in
sub
test
adc
xchg
sub
scas
xchg
mov
in
aas
ds
aam
cli
hlt
jb
add
outsl
pushl
sbb
xchg
addb
xchg
dec
ja
les
sub
inc
pop
dec
adc
iret
cmpsl
lods
popf
mov
cli
mov
pop
leave
push
mov
cwtl
add
xor
insl
xor
jge
sub
insb
mov
push
lahf
cltd
fisttpll
xorb
add
sar
push
outsb
lds
sub
cmp
add
mov
nop
stos
outsb
xchg
push
jecxz
mov
movl
add
or
cld
adc
dec
jmp
je
test
sbb
orb
fs
mov
dec
lret
xchg
sub
cmp
fidivrl
push
xor
loope
ficomps
bnd
mov
addr16
mov
push
shll
mov
cmpl
test
cmp
fwait
sar
fs
rolb
mov
test
data16
and
daa
inc
xchg
sahf
test
adc
and
test
push
inc
jle
insl
je
cmpsb
pop
or
dec
dec
subl
push
jmp
push
sub
pop
icebp
cli
pushl
fdivrs
push
lock
jns
ss
int
sbb
and
push
lods
xchg
int3
cld
fldt
ret
add
jle
add
ret
pop
push
xorb
fdivrp
push
cmp
xchg
outsl
or
add
imul
ret
test
ror
xchg
add
jp
incl
dec
out
pop
xlat
lea
and
gs
add
dec
int3
jnp
xorl
mov
jmp
mov
or
jnp
xchg
aad
xor
leave
push
fdivs
ds
fildl
call
pop
pop
jecxz
sar
push
sti
add
sbb
mov
leave
jnp
sbb
lcall
cmpsl
jecxz
push
je
outsl
add
test
hlt
test
sbb
mov
sbb
mov
dec
and
and
mov
add
lods
or
fstpl
sub
popf
cmp
add
lcall
jg
mov
dec
jnp
jbe
ret
add
mov
imul
loop
loop
pop
add
in
mov
push
outsl
lds
dec
aam
es
mov
jmp
xchg
add
loop
in
adc
add
leave
lods
lret
xchg
push
sbb
outsl
adc
call
lcall
js
jmp
sub
filds
xchg
add
je
mov
inc
add
lds
jmp
ds
fidivl
jp
or
lock
sub
shrl
loop
fnstcw
mov
push
mov
cmp
std
mov
scas
xor
cwtl
xchg
addr16
xchg
shll
xlat
adc
cmp
call
mov
rol
incb
jl
gs
adc
push
lds
jmp
xor
shll
in
inc
jbe
out
inc
mov
lods
les
pop
pop
xchg
scas
mov
add
jmp
ret
pop
pop
inc
cli
jle
test
nop
cmc
inc
add
test
mov
inc
imul
test
enter
mov
add
icebp
lock
inc
push
sub
ret
sar
aad
sbb
add
lock
sub
cli
hlt
inc
mov
stos
add
jmp
aas
ret
imul
jb
scas
push
in
gs
sub
clc
adc
mov
dec
mov
rcr
clc
andl
fs
in
xor
push
std
loop
hlt
repz
shl
gs
mov
pop
adc
push
jne
cmp
cld
jo
mov
xor
jnp
mov
mov
adc
pop
jno
jb
les
sti
incb
xchg
hlt
or
inc
xor
mov
mov
add
nop
xchg
xchg
add
ret
stos
ss
addr16
into
pop
xor
add
rcr
sub
xchg
mov
cld
je
and
cld
add
mov
out
jne
mov
clc
les
insb
popf
pop
mov
div
ret
push
add
lock
sbb
mov
js
lcall
sbb
pop
int3
or
mov
stos
imul
add
xor
lret
sbb
adcl
call
xchg
mov
xchg
hlt
and
mov
jne
xorl
xchg
push
xchg
jl
pop
int
or
pop
daa
and
jl
test
xchg
sub
mov
test
mov
adc
std
clc
jecxz
sbb
xor
mov
inc
push
lret
dec
and
fidivrs
adc
repz
in
sti
arpl
rcrl
dec
aad
jl
inc
popf
pop
cmp
leave
loope
hlt
in
add
outsl
cmp
xchg
sub
add
xchg
and
aam
jge
add
bnd
jae
mov
movsb
sub
mov
inc
cld
mov
cmp
pop
jae
dec
imul
fs
fldl
je
pop
xlat
ret
jmp
fisttpll
inc
xchg
daa
call
pop
fmuls
mov
je
add
inc
arpl
int
lahf
int3
roll
sub
ja
sbb
iret
addb
fs
imul
sub
in
scas
js
inc
cmp
jnp
arpl
xor
or
mov
imul
jno
std
andb
dec
sti
or
sbb
sub
add
sub
sub
mov
fidivl
dec
or
popa
pop
scas
jbe
addb
jnp
arpl
and
or
inc
dec
mov
add
jae
arpl
int3
jecxz
iret
cmp
add
xor
adc
in
addb
jae
fnstsw
lock
sub
add
adc
pop
sbb
gs
inc
dec
loope
ds
sub
add
sub
mov
addl
jnp
loop
lret
clc
lahf
pop
lods
inc
roll
stos
inc
int3
jae
rolb
ja
xlat
add
das
jnp
je
fsubrs
xor
and
fst
jns
test
dec
or
cld
repz
mov
and
and
mov
filds
cmp
xchg
inc
fwait
insb
add
in
jnp
xchg
imul
inc
ljmp
mov
cmp
sbb
xchg
std
mov
insb
mov
stos
mov
or
inc
popf
cld
sti
dec
sub
adc
jae
add
mov
jnp
lea
and
jae
enter
sti
push
dec
and
imul
mov
stc
and
andb
shll
out
jo
and
enter
sti
je
pop
mov
outsb
cli
mov
ljmp
pusha
cmpl
int3
inc
jnp
lret
cmpsl
cli
in
jae
mov
jbe
ds
xchg
imul
inc
aam
cmp
leave
mov
scas
fldl
sub
cmp
outsb
mov
xor
mov
mov
xlat
pop
fiaddl
jmp
jnp
xor
inc
jae
xchg
mov
in
scas
imul
arpl
daa
scas
incb
mov
lret
adc
push
rol
mov
btc
clc
shr
rcl
mov
stc
mov
pusha
cmc
sub
lea
push
lods
seto
pushf
jmp
inc
pop
push
ja
mov
mulb
sub
mov
cmpl
ret
lcall
cmp
js
pop
pushf
dec
cmp
jecxz
xor
dec
cld
mov
addr16
sahf
jecxz
subl
gs
jge
jns,pt
fnstenv
mov
shlb
dec
mov
pop
pushl
popl
call
shl
pusha
lea
je
call
add
jmp
movw
pushl
lea
jae
call
jmp
in
into
jp
adc
bound
out
mov
out
ja
movsl
push
jmp
rcrl
mov
daa
push
dec
pop
jnp
scas
shlb
push
popa
loopne
push
and
and
shlb
arpl
js
pop
push
arpl
xchg
mov
shrb
rcll
inc
pop
arpl
add
test
mov
ja
add
insl
add
orl
jmp
cmpsl
mov
incb
sub
jb
mov
gs
or
bt
call
cld
jmp
pushf
lea
call
jmp
pop
jp
roll
scas
in
call
adc
lahf
test
add
mov
cmp
jg
fsts
jp
dec
fxch
pop
push
fstpt
out
push
sbb
lods
cmp
lds
pushl
add
mov
js
adc
and
push
dec
mov
mov
lret
mov
jecxz
sub
push
dec
pop
faddl
int
mov
cmpsb
subl
xor
cmp
mov
xlat
pusha
sub
cli
sti
test
xor
pop
xor
shlb
in
adc
popa
xor
test
js
ret
and
xchg
test
sub
jnp
mov
and
cli
xlat
and
xlat
popa
jb
aas
movsl
jno
dec
mov
and
bt
pusha
add
call
test
mov
push
pusha
lea
je
call
arpl
dec
push
or
push
mov
cmp
aam
add
and
cmpl
outsl
pushl
inc
push
inc
push
fdiv
lcall
mov
mov
sub
stos
shlb
fs
jne
setge
movb
setle
push
bswap
lea
pushf
pushf
push
pushf
movl
push
push
mov
pusha
pushf
push
movw
pushl
ret
cmc
cmp
movb
movw
push
pushf
lea
jae
push
add
pushf
jmp
sar
neg
rcl
mov
pusha
and
movb
add
pusha
push
lea
jmp
call
and
enter
mov
outsb
aas
xchg
insl
fidivrs
xchg
sub
push
in
lret
pop
pop
mov
test
lea
lret
mov
add
js
pop
es
adc
cmc
inc
mov
jecxz
sbb
or
enter
jne
jbe
jmp
mov
cmpsb
out
and
test
fldenv
or
outsb
pop
aaa
xchg
adc
into
pop
sub
cli
shlb
adc
or
lods
fnstcw
ret
mov
out
hlt
pushf
pusha
loopne
jae
pop
test
or
rolb
dec
pop
je
hlt
incb
pop
rorb
fcoml
imul
xor
sbb
jne
shll
mov
ret
sbb
pop
lock
mov
sub
inc
movsb
jb
dec
aaa
push
dec
hlt
scas
lret
sub
pop
dec
xchg
ss
jmp
push
dec
dec
pop
jecxz
add
ja
gs
sub
jge
mov
popf
repnz
and
adc
lcall
inc
cmpb
cmp
dec
loop
xor
sarl
pushf
jno
jne
jno
outsl
jae
mov
jle
insb
cmp
mov
das
or
mov
out
dec
cmc
hlt
movsb
push
idivw
mov
jl
or
adc
in
mov
ret
dec
cli
clc
jge
mov
jmp
out
inc
mov
dec
cmpsl
inc
xchg
cmp
mov
ss
sbb
xor
add
adc
lds
inc
mov
xchg
mov
and
push
cmp
shlb
test
aad
mov
mov
cmc
mov
addr16
out
adc
cmp
shlb
cmp
dec
in
and
xchg
repnz
fisubrs
cld
jge
rcll
or
jmp
dec
and
shlb
pop
lret
add
rcrb
pop
lods
push
jae
mov
and
ret
jl
aas
mov
inc
jb
dec
aad
adc
outsl
mov
shlb
bt
call
pushl
bswap
movl
pushl
lea
jmp
cmp
push
cmp
test
pushf
pushl
jmp
repz
pusha
pushf
movl
jmp
jmp
push
push
push
pushf
mov
pushf
mov
mov
jmp
jmp
not
pop
pushf
call
call
movl
not
pushf
mov
stc
rol
jmp
push
pushl
movw
movl
lea
jge
push
pusha
lea
jmp
or
or
stc
pop
jecxz
xchg
inc
scas
dec
sbb
xor
jo
dec
push
shrl
jnp
fistps
mov
add
adc
cmp
mov
xor
fdiv
push
sub
fsubp
dec
insb
sbb
cmc
jp
adc
test
sbb
jp
mov
mov
das
js
push
mov
mov
jae
add
mov
addr16
jns
xor
sub
xor
jp
sbb
and
lea
je
cmc
cmc
pusha
jmp
pushf
mov
pushf
call
sti
or
pop
ret
inc
jmp
push
scas
test
sbb
iret
xor
xlat
in
mov
pop
mov
inc
adc
add
pusha
and
adc
loope
xor
lods
adc
mov
outsb
cltd
sub
push
jecxz
push
push
or
jnp
mov
mov
repnz
inc
xchg
fcoms
jb
and
pushf
lea
jne
bswap
rcr
mov
pusha
add
bt
movzwl
not
bts
mov
mov
cmc
pusha
add
pushf
mov
clc
test
jmp
lea
jbe
btr
shl
test
mov
movzbw
sbb
add
push
mov
add
movsbl
shl
clc
add
sbb
shr
shr
stc
movl
sar
movb
dec
mov
pusha
cmp
movw
push
call
mov
call
call
lea
jae
dec
neg
btr
mov
sar
rol
bswap
mov
ror
not
rcr
mov
test
pushf
pusha
test
sub
test
stc
pushf
test
repnz
pushf
call
mov
lea
not
jmp
lea
jne
add
sub
call
leave
test
icebp
jb
adc
mov
xor
addr16
movsl
jb
movsb
stc
xchg
into
outsl
cs
les
lahf
cmpsl
add
imul
add
jg
adc
ja
mov
stc
push
imul
jg
xlat
dec
push
iret
cmp
mov
lahf
test
ret
push
movsl
ret
cmp
ds
loopne
cltd
and
push
jae
inc
shl
test
mov
push
fs
pop
push
and
and
push
jb
inc
aaa
addb
add
sbb
cltd
pop
shlb
xor
rcl
sbb
es
jmp
and
imul
xor
push
mov
cmpsl
dec
shlb
mov
scas
cmp
and
or
add
xor
test
or
aad
in
add
cwtl
lods
or
add
and
add
inc
gs
outsl
fs
gs
imul
add
sbb
outsb
pop
mov
lock
jo
int
mov
jb
sbb
imul
and
and
notl
lea
mov
fiaddl
sbb
cltd
jl
cltd
inc
jne
aad
sbb
cli
pop
push
push
push
inc
ret
xor
or
aad
mov
xor
jecxz
mov
int3
sub
dec
shlb
arpl
ret
push
jae
adc
mov
shlb
iret
adc
add
aaa
imul
cmp
scas
add
push
clc
lods
push
jmp
cmp
ja
in
divl
ret
jge
mov
xor
aad
out
shl
push
mov
in
jnp
xchg
mov
push
stos
mov
xor
insl
adc
popf
imul
lods
cli
cmp
sbb
es
mov
iret
incb
lcall
outsl
pop
mov
icebp
data16
test
out
push
mov
jg
pusha
stc
bt
ror
pushl
inc
movb
pushf
movb
not
call
mov
pushf
jmp
push
mov
push
push
lea
jmp
push
jmp
pusha
movl
pushf
movl
movb
lea
jmp
movzbw
lahf
cwtl
mov
lea
call
ret
sub
add
hlt
insl
ds
adc
inc
mov
aad
inc
scas
lods
jecxz
push
xchg
lcall
movq
xchg
or
push
jp
pop
mov
mov
scas
lock
enter
inc
rcll
jg
aam
add
mov
xor
popf
push
testb
cmp
inc
lods
xchg
and
push
aas
imull
or
mov
mov
bound
shlb
mov
pop
fwait
aas
pop
sbb
aam
mov
shlb
inc
mov
inc
decb
push
fcmovbe
cltd
popa
dec
add
push
aam
faddl
stos
pop
in
fs
int3
loope
popa
rorl
out
clc
mov
or
sub
lret
adc
mov
cld
jl
adc
push
test
repnz
sub
hlt
lock
orb
adc
popa
andl
mov
push
xor
xor
or
mov
xchg
leave
stc
cmp
sub
rcrl
decb
mov
and
mov
add
mov
inc
jb
add
sarl
enter
mov
outsl
addr16
xor
in
dec
add
outsl
push
aas
aad
iret
mov
xchg
stc
inc
inc
push
push
or
andb
xchg
aaa
subb
xor
add
sti
inc
xor
imul
outsl
pop
movb
jo
lock
leave
jo
xchg
aad
stc
adc
xlat
or
jo
or
jae
dec
mov
cld
lock
pop
xor
mul
mov
enter
test
adc
andl
jo
push
hlt
ret
push
adc
lock
aam
cmp
or
in
rcrb
fwait
arpl
sbb
cmp
hlt
sub
loop
call
adcb
imul
or
push
add
add
sar
sti
cmpl
ljmp
ficompl
or
xor
inc
stc
mov
jnp
aaa
cld
push
xlat
cmp
jecxz
push
push
in
inc
call
sub
pop
lock
xchg
loop
popf
sub
mov
leave
sub
jb
shlb
xlat
and
jmp
xor
inc
fidivs
sbb
loope
scas
jge
sub
imul
or
imul
cmp
cmp
push
xchg
dec
scas
push
out
pop
daa
push
pop
rolb
add
mov
sub
cmp
push
sbb
xor
jecxz
sub
xor
int
cmpsl
cld
sbb
or
jb
or
push
jl
add
in
iret
xchg
loopne
in
xor
adcl
or
cmp
inc
xorl
lcall
shlb
sub
cmpb
jo
test
adc
jecxz
push
dec
inc
or
xchg
jecxz
notl
xor
dec
test
or
idivl
call
hlt
mov
push
out
ds
push
clc
enter
adc
inc
enter
lock
push
mov
jns
push
leave
inc
sar
cwtl
jnp
or
lock
xor
loope
fnsave
sarl
push
repz
mov
cmc
fists
xor
cwtl
xor
xchg
xchg
mov
hlt
mov
fld
xchg
xor
and
pop
aas
loop
cmpsl
test
push
outsb
shl
notl
or
jg
and
sti
xchg
and
mov
push
cmpsl
mov
daa
loope
push
les
fldenv
push
lahf
fists
loope
sarb
push
cmpsl
jne
test
cli
pop
stc
push
call
mov
cwtl
mov
dec
repz
test
mov
push
rclb
dec
or
shl
push
idivl
outsl
stos
fs
pop
fisubrs
and
cmpsl
xchg
idivb
mov
andb
xor
loop
jns
fwait
jnp
loop
pusha
lock
and
push
pop
xchg
xor
push
sahf
out
mov
call
inc
daa
inc
sub
imul
call
cmp
xchg
dec
stc
mov
push
icebp
dec
rolb
adc
and
jns
push
jecxz
mov
jecxz
sar
lcall
test
or
mov
das
out
cltd
mov
mov
cltd
add
cmp
inc
mov
cltd
fadds
outsl
xchg
mov
dec
jp
xor
or
push
je
icebp
mov
xchg
clc
stc
loop
mov
mov
outsl
icebp
jnp
inc
jp
jecxz
mov
test
inc
cltd
and
je
in
adc
xor
xorb
imul
pop
push
lock
pop
push
and
fnstenv
cltd
pusha
push
aas
cltd
add
outsb
cmp
out
cltd
sbb
call
loop
pusha
cltd
subb
lcall
push
aas
pop
xlat
cltd
or
loop
or
je
mov
xor
fists
outsb
out
call
cmpl
sub
xchg
cltd
inc
popa
xor
xor
mov
mov
dec
xlat
xor
aad
mov
andb
jg
mov
jg
cmp
jnp
popa
mov
fs
push
sbb
xor
mov
shr
xor
jno
shl
or
lcall
mov
ret
pop
pusha
mov
icebp
mov
cltd
call
or
mov
push
mov
push
xor
js
add
inc
or
int
rcll
cltd
push
push
jo
lock
dec
sub
cltd
pusha
call
out
push
fstpt
call
add
mov
js
test
jae
jp
fstpl
jp
add
xchg
lock
call
mov
test
shlb
adc
mov
fs
in
or
call
ror
cmpl
mov
call
fisubs
outsl
call
cli
xchg
ret
call
jp
pusha
mov
repnz
lock
fbld
mov
call
loop
jp
xchg
mov
loop
mov
or
push
xchg
call
fstpl
sbb
mov
enter
add
daa
out
call
clc
adc
mov
call
call
je
repz
data16
ret
call
mov
loope
xorl
add
repnz
ret
call
dec
inc
loop
jae
in
dec
jp
pop
mov
rorb
cmp
in
push
je
call
aad
call
xchg
call
cmp
call
push
jg
cmp
insb
mov
adc
jb
in
in
jge
sbb
pusha
call
push
push
ja
div
mov
int
pop
cmp
call
test
jmp
loopne
lock
mov
fwait
jo
push
and
lock
mov
push
lcall
pop
shll
repz
leave
push
push
call
popf
mov
rorb
mov
dec
push
es
mov
mov
adc
pusha
call
call
repz
push
xor
mov
and
dec
loopne
movsb
sub
fwait
cmp
mov
jo
ss
call
pop
mov
insb
push
mov
pop
pop
xchg
push
push
je
mov
mov
rclb
cli
cmp
mov
call
call
jge
inc
loope
call
lods
rcr
mov
jl
cltd
xor
jge
mov
call
adc
and
or
stos
ss
add
cltd
mov
call
ficomps
dec
call
aam
pusha
fld1
mov
aam
inc
in
out
adc
call
inc
xor
jmp
sbb
arpl
add
pop
cmpsl
mov
add
frstor
mov
test
in
cwtl
int
mov
jmp
push
xor
loop
mov
pop
push
cli
jns
popa
sbbl
cli
call
jns
cltd
icebp
or
in
das
xor
ss
ret
aas
cwtl
das
adc
jb
mov
arpl
jmp
scas
ret
cltd
mov
xor
shll
jo
sub
stos
xchg
jge
mov
out
pop
bound
repnz
jge
push
in
fldenv
or
out
cmp
add
xor
push
adc
into
xor
pop
out
aam
shlb
or
jp
xlat
fstp
mov
mov
xchg
mov
repz
xchg
shlb
pop
out
into
cltd
out
mov
lcall
push
call
or
call
enter
lahf
nop
cli
ret
sub
in
xchg
cmp
jb
mov
mov
and
cld
sti
call
hlt
inc
fdivrs
xor
and
in
popa
inc
push
in
pop
call
sub
sarb
adc
and
gs
jnp
imul
xor
pusha
pushf
addl
jae
shlb
loopne
mov
xor
push
icebp
cmp
adcl
jae
xchg
and
arpl
in
popa
jnp
push
and
std
sub
out
hlt
mov
pop
inc
sbb
rcrb
mov
lcall
in
clc
in
mov
addl
mov
pop
mov
cld
mov
in
imul
stc
cltd
cmc
jmp
popa
xor
pop
inc
int
aam
loop
push
cltd
mov
fsts
jecxz
in
iret
daa
in
mov
pop
inc
in
adc
mov
les
add
jne
push
repz
add
pop
mov
inc
and
std
lret
shr
loop
jb
jmp
testl
mov
hlt
sti
lods
cld
mov
sub
pop
cmp
ret
mov
movsb
hlt
scas
aam
arpl
les
fwait
mov
add
test
sub
jl
xor
and
add
sub
fidivrl
add
sti
mov
and
mov
adc
mov
clc
xchg
popa
flds
repz
ljmp
jno
xor
repz
cmp
jne
xchg
std
ret
rorl
cmp
stos
inc
ret
int
add
sub
mov
hlt
pusha
mov
out
icebp
mov
jl
in
je
jl
ret
xor
adc
jo
test
fidivrs
pop
push
test
aad
call
imul
jecxz
xchg
sbb
test
les
inc
stos
into
jbe
add
fimuls
aam
adc
in
lret
rcrl
shll
and
mov
shlb
fsubr
mov
add
push
shll
mov
mov
adc
popa
sub
stc
xor
mov
fs
shrb
bound
roll
cld
cmp
lret
mov
pushl
mov
mov
jbe
add
push
jbe
mov
loopne
cli
mov
xchg
mov
dec
sub
and
mov
out
pusha
fnsave
ror
jle
mov
jbe
mov
mov
pusha
add
push
shrl
insb
dec
bound
popf
inc
pusha
xlat
or
hlt
sbb
mov
faddp
out
jg
add
incb
arpl
or
mov
jo
push
sahf
cld
call
imul
dec
pop
arpl
in
pop
outsl
mov
mov
fsubrl
sub
mov
fmul
mov
addl
adc
scas
push
popa
in
xchg
and
jns
adc
pop
and
sti
sti
sbbl
xchg
and
movsl
movsb
pop
xor
faddl
xchg
sbb
fcom
sbb
mov
out
sbb
xchg
sbb
mov
pop
lods
insb
add
out
jecxz
adc
pop
cmp
mov
int3
fiaddl
add
sar
orl
mov
repnz
test
sbb
mov
clc
mov
mov
pushf
repz
dec
ljmp
adc
out
cld
pusha
testl
or
mov
movhps
xchg
pushf
jbe
dec
rcll
mov
add
pop
test
add
lods
add
mov
sbb
sbb
pop
lcall
mov
mov
inc
int3
repnz
rcl
and
repnz
push
shll
out
dec
mov
fsubrs
adcb
mov
pop
outsb
pop
sti
mov
jb
jle
sbb
je
dec
aaa
jp
jecxz
inc
in
repnz
test
push
push
push
inc
sti
ror
mov
dec
imul
lret
and
sub
push
sahf
cmpsb
rep
mov
mov
mov
pusha
sar
and
loope
inc
lret
dec
mov
mov
movsb
leave
xchg
mov
push
cmc
je
sub
ja
hlt
jae
mov
and
pop
push
stos
out
out
cmpb
pop
ja
push
cwtl
pop
mov
loopne
jb
and
lods
dec
mov
lods
data16
cld
dec
gs
in
cwtl
lcall
add
loop
push
push
xor
movsb
mov
add
add
fstps
jle
stc
js
mov
mov
ret
fs
imul
and
arpl
add
jle
jb
push
mov
ret
mov
fnclex
fdivrs
lock
repz
fdiv
xchg
mov
repz
dec
popa
ficompl
jb
stc
jge
cmp
loopne
jp
aas
shl
adc
mov
fidivrs
mov
sti
push
fcomps
push
bound
addl
popa
les
repnz
and
ret
je
in
xor
mov
cli
cmp
lcall
mov
pop
bnd
in
dec
loopne
lret
scas
jecxz
sahf
add
adc
or
rolb
jns
test
add
pop
clc
jo
inc
test
or
in
dec
lods
scas
push
cmpb
icebp
sbb
int
insb
rcll
push
fbstp
sti
adc
push
mov
mov
in
jle
ret
jecxz
cwtl
loop
ds
mov
sti
pop
pusha
pushf
repz
pusha
or
ret
jg
sbb
rcr
cmpsb
shlb
testb
lahf
es
cmpl
add
call
mov
cmp
lret
in
or
int
xchg
std
in
ds
dec
retw
fdivs
andb
ja
cmc
add
jl
movsb
mov
and
sahf
repnz
iret
add
cmc
sbbb
cwtl
icebp
std
cmp
jecxz
stos
mov
cltd
push
subb
repnz
mov
cmpsl
mov
push
inc
jle
jp
mov
and
aaa
add
pusha
mov
das
in
inc
sbbl
sbb
cwtl
fucomi
cmpb
repnz
repnz
fistl
xor
loop
mov
mov
mov
les
fnstenv
cmp
sahf
jle
mov
jo
xorb
inc
push
adc
lcall
mov
fcoms
sahf
xchg
sti
ffreep
and
decl
push
add
movsl
mov
mov
in
orl
pop
mov
clc
ret
negb
inc
inc
loope
cmc
movsl
mov
dec
jno
in
loope
sbb
or
push
mov
mov
sub
xchg
mov
aad
out
movsb
xor
je
mov
sti
lods
ret
lcall
mov
mov
call
es
pop
loop
xchg
mov
cld
mov
cmp
mov
and
hlt
enter
jecxz
mov
sub
push
imul
les
pop
inc
mov
xchg
pop
lods
js
add
in
out
sbb
andl
repz
inc
jb
inc
icebp
mov
js
adc
mov
xor
cmp
lds
xor
push
mov
repnz
mov
sbb
pushf
loop
dec
jg
jp
pop
xchg
repz
adc
jg
mov
cmc
cmpsb
xor
mov
fwait
repz
push
dec
cmp
cld
jnp
cmp
jge,pt
and
mov
xor
dec
cli
jle
add
cld
dec
imul
out
repnz
jecxz
ficompl
ret
icebp
push
mov
je
fsubrs
out
jge
add
enter
jno
ret
sbb
call
add
ss
fwait
shrl
rol
lds
pop
fstl
sbb
sti
add
fs
mov
inc
ret
rcl
ja
data16
jns
pop
cmc
cmp
push
fsubs
sahf
sbb
xlat
addr16
xor
and
andl
insl
cld
das
add
and
outsb
mov
jl
cmp
adc
arpl
mov
test
jecxz
movsb
dec
ret
or
ss
fs
xchg
cmp
dec
lret
pop
dec
dec
loop
add
repz
and
inc
mov
jg
fucomp
dec
sbb
mov
cmp
lcall
cmpsb
pop
jge
leave
clc
sub
std
sahf
mov
sarl
shl
dec
iret
roll
xor
xor
lahf
neg
stc
jmp
cmpb
inc
add
in
push
xchg
or
adc
lcall
cmp
pop
xor
loope
repnz
icebp
hlt
std
in
cli
sbb
cmp
fildll
ret
adc
out
stos
mov
adc
mov
add
push
xchg
nop
loope
mov
shr
std
sahf
sbb
ret
mov
aam
jne
dec
fisubl
shll
aam
shlb
or
jno
cmp
cwtl
cmp
aam
dec
rcrb
inc
mov
lret
leave
loopne
push
subb
and
roll
fistpll
pop
sbb
mov
push
jge
clc
loopne
stos
sahf
add
movsb
mov
push
rep
add
fsubrs
add
call
cmc
mov
jo
lcall
add
scas
mov
sub
adc
xchg
rolb
inc
inc
inc
push
add
fs
mov
push
jg
ljmp
pop
xchg
lock
js
jmp
mov
push
mov
jecxz
lahf
outsl
mov
xchg
fsubl
negl
fs
pushf
jae
cld
pop
hlt
gs
xor
dec
or
pusha
dec
sub
cmp
fs
sub
xchg
je
push
test
popa
int3
test
movsb
addl
xchg
mov
mov
dec
push
or
xor
sub
loope
hlt
aam
jnp
pop
mov
xchg
mov
mov
or
mov
les
jns
test
pop
lea
and
cmpb
mov
popf
mov
mov
fmul
pop
loop
movsb
mov
mov
inc
mov
ja
mov
test
mov
and
push
hlt
inc
in
cld
imul
jnp
mov
and
out
cmp
inc
movb
mov
into
mov
clc
and
gs
popa
dec
mov
inc
adc
cli
cmpsb
mov
fadd
push
call
inc
inc
movsl
scas
nopl
or
add
push
ret
xor
push
jb
and
cltd
xchg
test
out
pop
pop
hlt
sbb
test
jo
popf
pop
mov
jge
seto
jle
push
fstpt
lods
rorb
hlt
sub
inc
repnz
cld
mov
shll
hlt
movsl
jecxz
add
arpl
cld
cld
cmc
mov
in
jbe
mov
lods
xchg
insb
push
dec
les
xchg
shr
sub
das
je
popa
loop
clc
jmp
test
loop
movd
xor
loopne
stos
aam
les
cs
xor
aad
cmp
dec
je
nop
xchg
ret
icebp
stos
pop
cmpsb
mov
mov
add
mov
pop
repz
push
repz
ret
int3
fdivr
into
fdivrs
cmpl
mov
mov
addl
sbb
ss
rolb
fsubr
cmp
or
jle
sub
cmc
or
stc
aam
movsb
pop
notb
enter
aaa
aam
xchg
hlt
dec
cli
jecxz
pop
mov
mov
std
jb
hlt
in
jnp
movsb
add
popa
fdivl
inc
xor
nop
fistpl
shr
cmp
cmp
test
add
jl
mov
hlt
cmp
sahf
movsb
and
lds
das
pop
dec
mov
leave
sbb
sbb
lock
lods
movsl
xor
loopne
push
xor
popf
mov
aam
std
sbb
or
sahf
ret
out
mov
dec
insb
std
jmp
les
mov
mov
jl
mov
cmp
shll
add
popa
cmp
pop
lcall
sub
xchg
faddl
in
out
repnz
shlb
push
jp,pt
les
jg
imul
push
movsb
sbb
pop
movsl
jl
shlb
popa
mov
jae
jae
out
adc
out
xchg
jecxz
add
or
pop
cwtl
add
adc
insb
mov
fsubl
ret
outsl
movsb
out
add
pop
lcall
xor
jmp
mov
xor
fstp
push
sub
pop
je
rcl
fcoms
movsb
je
hlt
push
cld
pop
and
or
loop
dec
mov
cld
jp
mov
inc
push
pop
movsl
mov
gs
sub
fstp
jecxz
mov
out
jmp
mov
sbb
mov
pop
xchg
cli
test
and
mov
or
jb
or
test
mov
jae
sbb
mov
insl
xchg
fdivrl
sbb
inc
adc
push
pushf
inc
les
shl
pushl
rorb
mov
pop
lods
aad
mov
mov
aas
hlt
pop
cmp
mov
shll
xchg
cmp
mov
or
add
xchg
movsb
aas
cmp
cmp
jle
sbb
outsb
jns
bound
ret
adc
xchg
in
aam
inc
mov
mov
or
and
sub
add
pop
push
sbb
dec
mov
fldenv
cmp
rcr
dec
pop
mov
pop
aaa
mov
call
sub
mov
or
lahf
in
lods
adc
les
call
test
fstpt
xorb
pop
cs
xor
pusha
arpl
mov
repz
jae
mov
stc
push
aam
mov
mov
rcrl
sub
cli
adc
popa
jl
xchg
cltd
and
movsl
sbb
mov
aam
mov
jmp
xor
mov
das
jg
lock
jecxz
adc
repnz
test
test
or
mov
mov
cmp
or
retw
add
push
mov
pop
inc
test
loopne
pop
loopne
sbb
int3
rcrb
in
sbb
jmp
sbbl
mov
jecxz
inc
in
ret
xorl
fdivr
pop
clc
and
faddl
jp
sbb
bound
loop
mov
fs
adc
push
rorb
dec
in
lods
push
fs
and
out
mov
fsubrl
stos
sarl
repz
arpl
call
sub
add
inc
out
sbb
mov
push
shl
and
xor
icebp
call
push
mov
cwtl
push
or
inc
sub
jle
test
adc
rcrl
or
std
mov
cwtl
push
or
pop
repnz
jle
pop
sahf
mov
sbbl
int3
cwtl
popf
inc
sbb
rcl
icebp
xchg
pop
mov
pushf
fdivrs
jp
cwtl
lcall
scas
ljmp
sbb
cmp
repz
xchg
jb
loope
jnp,pt
cwtl
mov
jecxz
xlat
in
sbb
mov
loopne
dec
fistps
and
stos
dec
iret
xlat
test
fmuls
pushf
in
sbb
ss
pop
shll
in
pop
orb
xor
ret
test
mov
mov
movsb
inc
je
loop
or
mov
popa
call
jae
outsb
aam
aas
cmpl
outsl
shlb
movsb
jg
mov
push
jp
xchg
lock
dec
cmp
dec
pop
jl
cmpl
addb
lret
add
ret
adc
clc
int3
aas
pop
xor
sbb
insb
mov
jmp
push
mov
jmp
jae
rcll
int3
hlt
and
adc
cmp
fdivl
imul
inc
movsl
sbb
movsb
xchg
hlt
call
clc
clc
xor
and
fcmovb
cld
dec
test
idivb
jno
cmp
or
outsl
aam
int3
jno
mov
inc
xchg
hlt
mov
xor
mov
in
push
xchg
xchg
mov
add
rcr
stc
push
andl
mov
rcrl
pushf
std
add
jno
repz
or
xor
mov
in
mov
in
clc
xchg
movsb
add
movsl
mov
into
stos
add
lret
lds
add
sbb
sbb
clc
icebp
ljmp
andl
xor
jae
subb
fistpll
sub
xor
cld
inc
clc
add
mulb
fidivrl
and
loop
lcall
push
arpl
xlat
imul
ljmp
imul
push
movsb
and
cmp
cld
rolb
adc
sub
stc
sbb
adc
adc
mov
sub
stc
aam
adc
fildl
insl
cld
fildl
movsl
fiadds
jbe
mov
cmpsb
lods
sbb
mov
hlt
imulb
dec
xor
mov
push
test
jp
pop
mov
bound
cmpsb
js
xchg
push
jecxz
mov
out
xchg
jecxz
pushf
xor
cld
add
xchg
sub
jae
testl
add
inc
mov
lods
mov
sahf
jl
sar
add
rolb
push
mov
insb
xchg
ljmp
repz
fildll
mov
cli
sbb
jl
mov
pop
add
icebp
movsl
push
in
clc
bound
xor
jnp
imul
jo
mov
add
lock
pop
sarb
push
pop
fsubs
clc
fldz
jecxz
mov
fisubrl
adc
pop
lret
adc
arpl
movsl
divl
jg
mov
fisubl
adc
scas
push
add
pop
dec
cmp
mov
sarl
add
inc
add
add
jmp
mov
pop
addl
cmp
bound
shl
push
fidivs
les
int3
sarl
mov
test
pusha
cld
pusha
ja
adc
xor
rcrl
jae
sbb
sarb
outsl
fcmovnbe
movsb
fldenv
pop
jbe
and
jo
inc
popf
add
rol
inc
arpl
in
inc
mov
aam
repz
mov
rcrl
mov
inc
mov
xchg
scas
cmp
push
je
inc
push
or
cmp
mov
lahf
hlt
jp
sbb
sub
pop
cld
movsb
mov
repz
dec
mov
mov
test
shl
jge
and
add
jecxz
jne
insb
test
call
xchg
sub
shlb
clc
aas
shl
in
mov
mov
and
inc
in
into
push
mov
inc
mov
stos
stos
loop
or
stc
insb
sahf
aam
or
loopne
sti
loope
and
movsl
sub
outsb
xchg
mov
aam
xchg
or
clc
leave
dec
mov
sbb
or
and
mov
xchg
lea
adc
mov
and
ficompl
bound
cmp
or
loope,pt
les
jnp
sbb
idivl
jnp
dec
adc
jp
or
mov
jl
cmp
inc
stos
push
cmp
icebp
imul
dec
insl
aam
roll
out
cwtl
sub
xchg
in
xchg
imul
xor
mov
in
out
push
ror
xlat
cld
pop
mov
sub
pop
je
into
and
jle
dec
or
popa
loop
int3
mov
mov
out
mov
mov
inc
add
add
lret
xchg
cmpl
pop
mov
sbbb
popa
jp
js
call
push
add
mov
pop
cmp
dec
aaa
les
clc
cmp
jb
jb
fwait
mov
or
hlt
popa
mov
les
pop
roll
mov
and
popa
je
shll
mov
mov
add
ret
push
pushf
cld
ffree
les
mov
cmp
push
xchg
insb
inc
dec
cmpsb
mov
and
push
cmp
mov
pop
dec
pop
or
jae
xlat
push
outsl
add
cli
xchg
dec
je
orl
stc
sbb
cmpl
mov
in
insl
push
sbb
fldenv
lods
fidivl
sub
xor
jb
ret
insb
les
inc
les
loope
fmull
xchg
mov
cmp
push
aam
mov
cmc
pop
les
add
sbb
inc
dec
lods
aam
test
adc
pop
pop
sbb
test
mov
test
jmp
add
adc
ret
mov
lock
mov
mov
outsb
in
into
sbb
sub
lea
popa
jne
not
test
loop
mov
cli
and
mov
xchg
das
sti
cmp
out
addl
loope
xchg
mov
test
jl
or
jmp
out
or
addb
and
int
mov
dec
sub
add
mov
je
xchg
inc
add
inc
shlb
push
dec
cwtl
and
loop
and
push
add
pop
add
mov
mov
mov
hlt
daa
mov
inc
movsb
icebp
inc
aam
movsl
stc
cmp
push
adc
add
adc
xor
fists
movsl
xor
xlat
mov
mov
jae
cmp
cmpsl
popf
jecxz
clc
shl
cmp
out
rcll
aam
xchg
cmp
outsl
jnp
jne
jg
push
jmp
cmc
pop
xchg
inc
mov
inc
jnp
test
sub
je
add
fcomp
ret
dec
adc
jp
mov
aas
cmp
push
cmp
fcomip
in
insl
ret
aaa
pop
fwait
pushl
fs
pushf
movsl
mov
les
push
cld
sbb
adc
aas
je
cli
cmc
sahf
add
cmp
mov
jl
hlt
jg
jecxz
dec
ret
fmulp
shld
jne
in
mov
mov
insb
mov
mov
out
and
mov
inc
pusha
pop
sbb
testl
mov
call
subb
movsl
xor
mov
mov
sbb
jns
imul
jnp
xchg
jg
xor
jb
push
fs
jle
inc
hlt
mov
sbb
dec
mov
mov
pop
jae
mov
fdivrs
ret
loope
jae
cmp
movsb
call
loop
mov
dec
pop
pop
insl
subb
scas
cld
jecxz
jl
in
fisubs
jg
push
cli
fcmovu
lahf
enter
xorl
pop
adc
test
push
data16
leave
sti
lret
mov
enter
fdivrl
hlt
test
adc
adc
arpl
out
sub
fsubl
adc
lret
mov
fsubrs
sub
aas
and
mov
repnz
and
pop
shl
test
outsb
loop
scas
subb
sti
ret
sbb
rorb
out
mov
dec
jl
dec
cmp
add
push
std
push
fsubl
jmp
mov
int3
mov
fsubs
sub
xor
pop
mov
and
cmp
call
or
mov
mov
aam
mov
xor
push
popa
mov
pop
in
add
pop
fstpt
sbb
push
dec
or
add
movsb
adc
sti
or
cld
fisubrs
clc
mov
aaa
sub
jne
jl
sub
out
sub
test
je
sub
cwtl
xor
sbb
insb
mov
jo
test
add
inc
scas
cwtl
insb
loop
jle
mov
mov
dec
rcr
loop
jae
sub
cmp
dec
jp
sub
mov
sarl
ret
dec
pop
mov
adc
andb
mov
pop
push
ljmp
mov
mov
movsb
and
sti
addl
push
pop
sbb
sub
arpl
dec
ljmp
int3
pop
and
sti
jae
xlat
dec
pusha
and
push
jl
sbb
test
mov
jl
hlt
pop
jl
hlt
push
jl
hlt
xchg
mov
jl
push
cwtl
fdiv
sbb
mov
push
addr16
jae
cmp
popa
repz
pop
in
push
fidivrl
xchg
ljmp
ffreep
addr16
test
fs
jbe
loopne
inc
sbb
insl
loope
cmp
test
sbb
inc
mov
jo
int3
add
add
cmp
or
cmp
xchg
cmp
fadds
mov
loope
fcmovnb
cwtl
lahf
fwait
mov
sti
jecxz
add
cmpl
imul
aaa
mov
mov
pop
je
and
clc
repnz
idivl
mov
aam
test
and
mov
or
cs
test
inc
lret
aaa
les
jle
jmp
jge
sbb
ret
out
pop
dec
sbb
hlt
push
jp
mov
or
lahf
andl
std
xor
push
mov
data16
test
mov
dec
or
arpl
pop
xchg
cwtl
movl
pushf
adc
mov
stos
imul
cmp
ss
in
cmp
addl
in
sub
push
leave
mov
arpl
jns
mov
mov
daa
scas
cmp
pop
add
les
hlt
movsl
pop
test
dec
pop
pop
loop
mov
sub
in
movsb
shl
jns
stos
cs
jb
lods
mov
cmp
mov
inc
in
out
add
mov
test
jl
neg
loope
adc
dec
in
pop
aaa
jnp
sub
jl
push
leave
lods
fnstenv
mov
or
aam
mov
imul
or
sbb
push
data16
xor
roll
mov
pop
pop
mov
add
outsl
or
js
shrb
out
je
and
gs
pusha
push
mov
lret
jae
insb
and
inc
mov
test
pop
fistpll
inc
lock
mov
pop
inc
cmp
adcb
shlb
sbb
insb
and
fucomi
mov
sub
aad
ljmp
lock
inc
mov
xor
loop
jecxz
movsl
imul
jge
outsb
lret
dec
mov
fiadds
lret
push
je
scas
pop
mov
push
pop
jl
stc
jle
movsb
jle
hlt
test
js
fsubrs
dec
sahf
in
jecxz
xor
push
inc
gs
fisubl
cmp
mov
movsb
pop
in
out
push
hlt
imul
hlt
sub
dec
or
sbb
inc
ds
push
jno
pushf
add
cmp
jmp
adc
xor
pusha
lock
ror
add
cmp
cwtl
stos
gs
mov
xor
lods
or
add
fwait
xchg
mov
addb
and
aas
jno
cmp
add
popf
pop
jecxz
in
xchg
add
xchg
xchg
movsl
xor
gs
into
rclb
cmc
or
push
jmp
fbld
in
mov
cmp
pop
dec
add
into
cld
addl
movsl
adc
lods
dec
lock
pop
stos
rcr
inc
push
xchg
movsl
ret
ja
jl
movsl
int3
mov
into
in
push
loope
mov
jno
and
lret
jae
mov
js
sub
mov
inc
mov
sub
jl
aas
mov
jle
test
dec
stos
ss
jb
jle
or
pop
xchg
dec
mull
pop
sti
ds
mov
xchg
push
psubq
push
mov
push
test
pop
mov
jecxz
cmp
pop
je
mov
mov
test
rorl
push
leave
dec
pushf
inc
aam
cld
mov
leave
pop
ret
loope
inc
adc
fnstsw
rcrl
pop
cmp
int3
nop
mov
sbbl
adc
lret
pop
push
movsl
and
jbe
or
mov
mov
scas
mov
cmp
aaa
and
repnz
jmp
shl
fstpl
sti
popa
insb
add
pop
mov
xlat
fs
cmp
xchg
shl
loopne
pop
jecxz
pusha
and
push
cli
mov
mov
pop
jge
scas
aad
jl
scas
dec
push
sbb
fisttpll
mov
orl
mov
hlt
pop
jecxz
mov
add
add
mov
sbb
cmp
aaa
psubusb
cmp
or
je
out
pop
dec
jnp
out
push
mov
movsb
cwtl
shlb
fsubl
adc
inc
add
mov
adc
loope
or
movsb
arpl
cmp
clc
jp
jae
mov
sbb
mov
fidivrl
insb
add
inc
imul
pop
btc
or
nop
push
std
jae
sub
testb
icebp
sub
jne
cwtl
movsb
scas
sub
js
mov
mov
sbb
add
mov
mov
pusha
jl
dec
sub
jno
icebp
add
add
sbb
call
jg
adc
sub
or
hlt
sbb
aas
cld
fwait
fstpl
and
push
out
int
inc
sub
pop
arpl
stc
imul
cwtl
std
movsb
sbbb
pop
addb
les
call
and
fmul
test
mov
pop
cli
pop
or
or
inc
movsl
jno
cmpsb
pusha
clc
jle
mov
inc
pushf
xchg
out
inc
mov
dec
je
and
jg
xor
push
testl
arpl
adc
mov
les
mov
jo
inc
aam
pop
test
and
leave
pop
popf
cwtl
jne
jg
mov
jl
les
mov
test
rcr
push
dec
idivl
mov
xor
or
ja
cmpsl
repz
and
push
jo
fs
cmp
fwait
mov
rcr
jbe
repnz
push
cld
mov
cmp
mov
lahf
ds
int
aad
cld
dec
jmp
sub
in
fwait
test
lds
mov
dec
stos
xor
cmp
aam
adc
mov
shrl
lcall
stc
arpl
aas
or
mov
adc
enter
cmpl
lods
imul
movsb
popa
outsb
shll
aam
xor
jg
sti
mov
xchg
adc
xor
mov
outsl
out
stc
arpl
mov
aas
jns
shrl
mov
mov
fidivrs
insl
xor
aam
jle
pop
mov
rorl
xchg
andb
les
pop
cs
or
add
ret
loopne
fs
fnstcw
sbb
sti
fsub
dec
icebp
sbb
mov
sarb
shll
std
loope
jnp
adc
sub
daa
in
test
adc
test
add
je
popa
push
in
xchg
cmpl
mov
lock
into
fdiv
mov
jge
lods
xchg
into
aam
sbb
jp
outsb
cli
roll
dec
add
lcall
mov
movsb
notl
aad
cli
stos
cmp
out
test
filds
mov
sarb
ret
aam
repnz
inc
pop
xchg
bound
push
repnz
repz
cmp
jbe
jle
fsub
jmp
pop
sub
pop
cmp
jp
inc
adc
mov
test
mov
jl
shlb
mov
in
inc
out
push
pop
sub
lcall
pop
adc
loop
mov
inc
jle
insb
mov
test
mov
mov
and
insl
test
mov
cltd
mov
add
roll
fcoml
or
xchg
adc
inc
arpl
push
das
test
test
mull
into
pushf
movsl
pop
stos
pop
imul
or
into
adc
popa
and
mov
inc
repz
inc
pop
cmp
repnz
movsb
mov
mov
mov
mov
test
mov
mov
cwtl
sbb
stos
hlt
ljmp
movsb
in
test
mov
ret
inc
add
adc
push
jl
scas
jae
bound
sbb
mov
movsl
mov
mov
cmp
imul
int3
scas
movsl
or
cmpsb
xchg
in
mov
xor
lcall
jl
mov
fnstcw
aaa
icebp
xchg
mov
ret
mov
in
out
call
sbb
ret
push
ja
loop
loopne
jmp
nop
push
ret
pop
cli
inc
add
scas
jae
push
ror
std
mov
cmc
loope
pop
adcb
pop
mov
mov
in
aam
enter
add
jl
in
pop
or
fs
add
mov
daa
sti
mov
hlt
push
fwait
aam
loopne
test
icebp
inc
jnp
in
mov
stos
lods
mov
test
fwait
adc
or
cld
mov
cmp
jnp
shll
faddl
xchg
sub
mov
mov
stos
inc
inc
fdivrp
loopne
fstpt
sub
mov
adc
mov
mov
jae
mov
jl
fsubrs
lret
xor
mov
mov
jp
call
mov
popf
push
out
jns
xchg
jo
and
repz
sbb
fwait
popf
mov
loopne
jp
divl
lret
mov
mov
popa
imul
pushf
xchg
cmp
jg
pushf
test
ficompl
jge
cwtl
scas
inc
hlt
jg
xchg
rcl
add
repnz
mov
dec
adc
jl
fmulp
pop
subl
jbe
mov
add
jne
xor
lods
push
mov
jmp
fidivrl
mov
lock
adc
xchg
cmp
cmp
pop
bound
pop
sbb
mov
pusha
push
jg
cmp
pop
inc
repz
cld
repz
cltd
pop
jl
jnp
and
or
test
fidivl
xchg
icebp
into
out
pop
xchg
jp
sbb
mov
fstpt
scas
lock
sti
out
test
ret
xchg
jl
divl
loop
pop
mov
mov
loop
adc
cs
sbb
popa
inc
repz
mov
inc
mov
rorl
add
mov
push
mov
add
popa
push
jecxz
push
mov
pusha
fidivrl
mov
cwtl
rorb
push
dec
popf
je
sub
push
dec
out
es
adcb
add
and
add
fstpt
aas
xor
ret
pop
ficoms
sbb
imul
ret
xchg
mov
mov
cmp
cld
stos
mov
test
out
les
arpl
and
test
aad
pop
iret
andb
in
jb
shr
loopne
jle
mov
pop
push
cmp
jb
ret
jp
pop
mov
pop
sbb
sub
or
mov
push
pop
pop
cmp
pop
xor
xchg
or
mov
mov
int3
lret
mov
xor
push
pmulhuw
mov
lods
insb
imul
mov
leave
mov
jns
mov
or
sub
mov
lret
jmp
loopne
call
lret
imulb
or
jl
gs
mov
aam
push
fucomip
or
push
sti
outsb
lret
cwtl
daa
ret
xchg
out
mov
aam
mov
shlb
aam
dec
negb
shrl
mov
cmpsl
fcmovnb
dec
mov
imul
jl
push
mov
pop
mov
pop
mov
pop
pop
stc
test
fisttpl
scas
sahf
outsl
sbb
test
aam
cli
push
sarb
into
ljmp
cs
add
jns
pop
out
sbb
xchg
or
mov
mov
sar
jbe
fsubl
fsubs
subb
stos
fsubrs
add
jl
xchg
and
adc
outsb
mov
out
test
shlb
aad
xlat
test
aam
and
push
mov
push
stc
and
cmp
les
out
inc
sarb
inc
jecxz
adc
mov
mov
xor
pop
adcl
xor
mov
sbb
icebp
jne
add
ds
sbb
mov
inc
out
daa
cld
push
dec
or
orl
mov
xchg
inc
mov
jecxz
popa
les
int3
push
or
aam
pop
mov
mov
dec
jp
icebp
inc
stc
lods
sub
xchg
rol
enter
push
adcb
cld
sbb
inc
or
fistpl
mov
outsb
pusha
rep
cwtl
shrb
in
cmpb
push
cmc
ret
mov
mov
nop
bound
jecxz
and
dec
dec
xor
push
pushl
fildll
xchg
jae
rolb
sahf
add
in
addr16
je
arpl
jge
repnz
in
ret
test
mov
dec
xchg
mov
mov
in
lret
sub
je
sub
and
ss
pop
mov
les
or
flds
loope
lods
mov
jnp
icebp
fistpl
fsub
imul
mov
orl
stos
sub
ljmp
mov
shll
inc
add
inc
test
mov
imul
mov
xchg
mov
movsl
mov
or
sti
sub
test
cmp
pop
cmp
inc
imul
popa
cmp
push
or
fldt
xchg
add
mov
ret
test
ret
xor
mov
icebp
sbb
or
test
jge
jnp
sti
shl
out
mov
ss
cmp
cs
inc
mov
repnz
jg
iret
and
loop
arpl
jb
lods
or
outsb
imul
sti
mov
mov
idiv
not
hlt
jecxz
ss
inc
loopne
xchg
adc
sbb
cmpsb
or
fs
inc
sbb
xor
mulb
inc
sbb
lcall
inc
test
out
add
sbb
dec
cmp
jbe
ret
popa
insb
rorl
mov
ljmp
dec
or
mov
cmp
jo
in
in
js
push
loopne
add
mov
pop
mov
adc
inc
les
icebp
push
push
scas
add
sub
scas
mov
and
pusha
shll
cmp
jae
cmp
mov
cwtl
adc
xchg
pop
sub
notb
je
test
js
xor
xorl
movsb
stos
movsl
stos
loopne
inc
test
sahf
sub
in
movsl
jnp
xor
stos
mov
mov
out
into
iret
add
and
xorl
sub
pop
or
fcmovnu
xchg
or
popf
mov
mov
mov
inc
jecxz
inc
cwtl
imul
call
sbb
idiv
add
adcl
sub
test
cld
data16
rcrb
stos
subb
mov
les
ljmp
aas
dec
pop
insb
call
in
sub
mov
fstps
ljmp
adc
jns
adc
jno
or
jmp
pop
cmc
push
adc
push
aas
in
pop
adc
into
call
jae
jge
add
xchg
and
xor
test
push
mov
dec
std
fists
testl
call
fldenv
lods
das
mov
and
add
outsl
popa
push
push
aam
cmp
cli
mov
aad
int
nop
jmp
loope
mulb
ret
fistpll
mov
add
and
gs
cmp
loop
in
push
cld
popa
movsb
dec
mov
adc
outsl
add
or
std
mov
mov
jne
mov
mov
pop
jbe
enter
pop
mov
jl
lret
cli
fcompl
mov
inc
pop
sahf
ret
dec
popf
adc
adc
cwtl
xor
outsl
loop
leave
nop
add
in
cmc
int
pop
mov
mov
xlat
outsl
rcll
push
xor
or
and
cmp
xchg
cmp
inc
or
out
dec
or
insl
rorb
add
popa
adc
lds
xor
push
cmpsb
and
movsb
inc
and
aam
mov
in
xchg
xchg
hlt
xchg
add
in
popa
shlb
fadds
mov
dec
popa
mov
mov
stos
cmp
or
mov
lods
mov
push
push
xchg
je
push
rcrb
cmp
outsb
movsl
cmc
dec
xchg
adc
or
imul
mul
sub
xchg
cmp
mov
test
pop
sti
shll
xchg
sbb
fdivl
or
ret
andb
sti
inc
adc
jp
loope,pt
ljmp
sar
jo
fwait
or
mul
fst
push
movsl
in
fistpl
adc
jle
call
hlt
dec
mov
pop
push
jl
jbe
hlt
imul
pop
sbb
ret
stc
notb
mov
pop
orl
xor
mov
sarb
cmp
mov
mov
stc
inc
ficompl
xchg
mov
movsl
loopne
loope
std
or
movsb
pop
rcr
jecxz
addr16
jmp
inc
popa
in
lock
mov
repz
nop
insb
ret
mov
fiadds
add
bound
rol
fcomi
add
sbb
xchg
mov
push
add
movsl
lret
mov
repz
pop
cmp
mov
cmp
shll
xor
pop
mov
jb
pop
ret
enter
sbb
inc
iret
sbb
mov
out
sub
jecxz
jnp
jecxz
sub
jecxz
rcr
mov
jno
and
mov
sti
sub
call
mul
cmp
cld
pop
add
sbb
mov
jne
xor
cli
pop
or
add
fistpl
xor
ret
rcrb
std
or
push
lret
push
jecxz
jecxz
lcall
mov
int
es
test
or
ljmp
roll
dec
je
and
or
test
xor
adc
xchg
dec
aad
je
je
xor
fcomip
testl
out
popa
aad
jl
pop
stos
inc
mov
out
out
lahf
fiadds
add
adc
push
dec
jp
xchg
xchg
fs
jecxz
icebp
fsts
in
cmp
ret
popa
xor
movsb
cs
stos
std
dec
movsb
icebp
inc
mov
mov
jne
cld
cwtl
xor
push
sarb
arpl
cmp
jo
in
xorb
cli
ret
loopne
outsb
dec
and
shl
cmpsb
cmpsb
int3
fmull
add
and
inc
jae
shlb
jecxz
and
push
fiadds
icebp
les
inc
sub
jl
loopne
sbb
je
mov
adc
out
mov
or
dec
mov
add
test
sarb
jmp
insb
stos
sub
popf
hlt
mov
xor
imul
scas
rorl
add
fs
and
ret
lcall
andb
loope
mov
pop
inc
lret
fistpll
insb
js
mov
inc
adc
sbb
inc
sarb
or
mov
push
xchg
test
fcomip
andb
cmpsl
push
outsb
push
mov
mov
fs
mov
mov
repz
rolb
jle
cli
repz
mov
out
jo
push
sbb
mov
bound
in
cmc
jecxz
jecxz
adc
lahf
inc
repnz
fdiv
cmp
pop
rcr
mull
lahf
xor
sub
jbe
andl
mov
ja
in
in
push
out
mov
pusha
test
repnz
addb
loop
fmulp
cltd
outsb
ret
add
popa
fld
mov
sbb
xlat
mov
scas
shlb
out
push
lret
sub
inc
and
bound
insb
jmp
mov
inc
jb
insb
clc
jp
cmp
movsb
cmp
and
push
mov
fistpl
sub
adc
jge
adc
fidivl
int
inc
lcall
imul
mov
mov
push
scas
cmp
mov
stos
xchg
outsl
negb
jp
or
sub
pop
in
dec
pop
nop
jmp
xorl
mov
push
xchg
pop
add
adc
mov
out
mov
cmpsl
out
andb
cmp
bound
cwtl
cmp
shrl
popa
or
pop
pop
es
push
nop
ret
adc
mov
fistpl
movsb
insb
sbb
lods
nop
xchg
call
in
icebp
jno
jge
and
push
mov
mov
stc
lea
out
movsb
jno
fs
sub
std
arpl
jecxz
mov
lods
insb
fsubr
inc
jle
shll
lods
lods
idivl
mov
sarl
aas
add
idiv
jmp
sbb
enter
mov
sbb
or
push
cmp
add
lods
fucomp
jle
sahf
les
cmpb
add
es
mov
mov
add
out
test
add
sbb
jge
mov
push
in
add
loop
cmpl
xor
sbb
in
cmp
inc
jno
mov
popa
xchg
sub
mov
xchg
cli
es
daa
jnp
mov
sub
pop
mov
push
rcrb
cmp
pusha
pop
fdivr
xor
popa
xchg
dec
or
ds
push
dec
icebp
and
or
and
mov
shl
test
rorb
dec
out
int
ret
mov
mov
adc
popa
dec
imul
shl
jb
cmpsb
mov
cli
cld
out
push
das
leave
xchg
mov
filds
repnz
test
dec
jbe
mov
out
scas
pop
fdivs
aam
inc
pop
loopne
shr
mov
xrelease
push
lock
loope
jg
idivl
mov
test
cmpsl
pusha
mov
sbb
add
lret
jecxz
cmp
arpl
lcall
mov
dec
lock
scas
mov
call
icebp
aas
or
adc
jnp
into
push
and
mov
cmc
fistl
sbb
inc
mov
test
data16
in
in
gs
inc
aaa
sub
jne
jp
lods
and
lret
movb
cmpl
mov
cmpsl
roll
aas
stos
imulb
jmp
sub
lcall
insl
cmp
cld
inc
pop
std
inc
popa
mov
outsb
test
cs
pop
ja
andl
adc
and
iret
add
hlt
shld
adc
mov
insb
mov
insb
ret
jo
xchg
lcall
sar
add
push
loopne
popa
jae
cmp
hlt
mov
and
mov
orl
in
repnz
addr16
and
add
mov
cld
shlb
jb
jle
movsb
aas
neg
mov
arpl
std
jbe
adc
shlb
popa
xor
dec
idiv
scas
or
rcll
cwtl
shl
add
dec
jl
pushf
mov
jp
loop
jbe
mov
pop
je
sbb
pusha
pop
jne
pop
fisubrs
popa
data16
cmp
sbb
jmp
outsb
push
ja
pushf
out
bound
mov
int
mov
in
imul
mov
mov
and
jnp
mov
dec
stos
outsb
jbe
mov
xchg
mov
and
movsb
pop
mov
dec
cmpl
mov
faddp
jmp
rcrb
lret
fcomi
push
fwait
sarb
fcompl
int3
cli
push
inc
inc
pop
in
mov
pop
pop
sbb
mov
cmpb
sbb
fcmovnbe
jmp
xchg
or
clc
lret
pop
orb
test
cwtl
in
pop
loopne
push
leave
xchg
mov
fcoml
orl
or
mov
adc
shl
jno
stos
mov
rolb
testl
out
imul
je
mov
xchg
mov
mov
out
leave
andl
cmp
mov
inc
out
cmp
fsubr
repnz
mov
sub
lret
jle
sarl
or
sarb
xchg
mov
xor
les
nop
stos
addr16
aam
orb
mov
dec
popa
mov
notl
lds
jmp
sbb
pop
cmp
les
lcall
ret
or
inc
mov
dec
mul
movsl
and
mov
icebp
jmp
div
shl
and
jecxz
inc
mov
test
dec
stos
into
mov
mov
lock
mov
mov
cmc
xchg
mov
pushf
cmp
mov
jge
pop
adc
mov
dec
lods
enter
loope
dec
ss
xor
jno
and
cmp
call
xor
mov
out
leave
mov
out
add
dec
mov
dec
jb
les
push
and
sahf
sti
adc
into
loope
add
push
loope
pusha
jg
push
outsl
mov
mov
sub
or
adc
or
test
inc
add
xor
rclb
or
mov
sbb
and
jb
clc
mov
push
loope
sbb
ds
sahf
in
mov
cmpsb
jno
mov
mov
outsb
jle
adc
xlat
cmpsl
jg
mov
or
and
mov
lds
cld
into
push
clc
xchg
add
xor
sti
add
add
jle
xor
in
cld
xor
test
adcb
mov
mov
push
js
sub
in
roll
adc
xchg
sbb
std
in
push
mov
xor
movsl
adc
xor
clc
test
loopne
adc
push
xchg
sbb
adc
mov
rolb
int3
fidivl
les
insl
movsl
int3
aad
jp
pop
push
or
mov
enter
push
xchg
out
pushf
push
scas
mov
mov
imul
cmp
dec
pop
xchg
int
daa
in
icebp
cmpsl
notb
fadds
sarl
lret
add
mov
jl
mov
or
leave
cmc
inc
ret
mov
sub
pop
mov
jecxz
inc
add
jp
fsubs
push
fscale
test
aas
and
and
jle
stc
push
adc
jb
in
std
sbb
mov
cmc
fwait
mov
mov
clc
xchg
sub
xchg
jg
fimuls
std
dec
mov
pop
inc
jecxz
xor
jnp
inc
ss
cmc
in
hlt
xor
sbb
mov
mov
std
in
ret
int3
loop
scas
jae
in
movsb
mov
mov
fldenv
lods
insb
cmp
or
pushf
in
loop
inc
dec
mov
jge
popf
scas
dec
clc
pusha
in
hlt
mov
insl
sub
popf
sbb
sbb
jmp
fisttpl
xor
jmp
neg
mov
cmp
in
sub
ret
gs
mov
add
xchg
pop
aad
in
movsl
adc
sub
fnstsw
pop
push
mov
push
loope
mov
in
add
inc
ss
add
mov
jecxz
rorb
outsb
fistpl
adc
scas
mov
pop
jae
jne
push
mov
jno
mov
lods
insb
call
pushf
pop
data16
mov
mov
add
push
mov
or
add
fs
int
mov
push
push
ret
fwait
pop
inc
cli
imul
in
cli
divb
fimull
mov
pop
cli
xchg
movsb
mov
mov
push
xor
inc
xchg
mov
mov
arpl
ja
cmp
insb
movsb
movsl
xchg
mov
fldt
insl
jecxz
xlat
je
js
inc
das
popl
jp
mov
cmpl
pop
mov
and
dec
inc
xrelease
pop
sub
push
ret
popa
adc
and
pop
cmp
jl
es
add
insb
cmpb
mov
cmp
push
pop
cmpsl
mov
cmp
fiaddl
sbb
ror
scas
pop
jle
ficomps
mov
repnz
pusha
cld
sub
xchg
call
xor
loope
out
xor
push
test
fdivrs
xchg
add
dec
mov
lcall
inc
stos
out
cwtl
incl
imulb
xchg
call
das
fsubl
mov
push
and
jp
pop
mov
dec
mov
cs
movsl
cmp
test
cmpsb
adcl
or
arpl
cmp
mov
aam
add
idivl
and
jp
jge
das
loope
in
cmp
loope
insb
hlt
rep
dec
sahf
inc
xchg
das
addr16
out
aaa
std
in
sub
inc
pop
data16
in
cmp
mov
sbb
fsts
fdivrs
popf
mov
loopne
sarl
sbb
xchg
aam
add
out
icebp
insl
jnp
jmp
mov
repz
add
pop
fdivrs
push
cmp
adc
jbe
lcall
sub
ds
xor
mov
jge
mov
fldl
in
mov
jg
les
adc
loopne
adcb
push
sub
xor
mov
fs
mov
mov
test
push
or
pop
mov
add
jle
call
sub
lret
int
shll
stos
mov
and
mov
clc
fnstcw
cltd
cltd
cmp
pop
out
adc
or
bound
aam
inc
pushf
shll
enter
hlt
data16
loop
cli
xchg
xor
jl
dec
sti
rcll
lea
or
adcb
scas
push
les
jae
stos
stos
jle
add
pop
loopne
cmp
jbe
arpl
mov
rcrb
add
or
lock
jecxz
add
adc
mov
add
lahf
adc
insb
lret
popa
jns
mov
dec
xchg
sbb
call
cmpb
inc
jmp
popa
lcall
insl
adc
and
jno
ret
adc
sbb
xor
xchg
jb
lahf
lcall
nop
sti
sti
jl
shlb
bound
icebp
mov
aaa
mov
lret
xor
jmp
mov
movsl
jne
mov
hlt
xchg
popa
loop
mov
sub
xchg
add
repz
hlt
dec
mov
dec
xchg
pop
sbb
insb
or
lea
in
jmp
imul
inc
add
cld
sbb
je
pushf
je
sub
pop
cmp
dec
or
inc
inc
mov
sbb
adc
jecxz
fisubs
jp
push
xchg
sbb
and
xchg
sahf
setle
add
sub
fdivs
cld
dec
mov
shl
mov
jp
mov
mov
test
jl
iret
push
arpl
cmp
shr
hlt
mov
cwtl
cmp
mov
in
sahf
mov
sbb
pop
cmp
stos
mov
je
add
enter
add
jns
iret
ljmp
ret
test
dec
fdivrl
pop
adc
xor
push
in
icebp
lods
je
push
shlb
sub
cli
les
into
lret
bound
adc
loopne
cli
leave
mov
cmp
daa
lahf
push
data16
and
add
in
cmpb
popf
or
push
push
movsb
pushf
sub
mov
mov
jae
int3
or
mov
and
or
cmc
int3
add
or
sbb
push
xchg
sub
jns
and
ds
add
sbb
push
xchg
xchg
and
push
test
cmp
xchg
inc
push
fdivr
lds
dec
pop
sub
add
cli
pop
test
adc
push
mov
cmp
pop
pusha
mov
push
cwtl
xchg
xchg
add
or
fistl
jo
les
lcall
inc
sub
ja
test
or
or
out
xchg
mov
sub
les
sub
popa
fisttpl
adc
daa
mov
sbb
mov
sbb
mov
divl
xor
les
sub
xlat
mov
stc
scas
frstor
jo
std
mov
xchg
dec
mov
mov
inc
das
cmp
pop
push
mov
sbb
mov
stc
cmp
aas
fwait
ret
inc
pop
popa
jge
lods
js
pop
cmp
out
cmp
pop
rcll
push
roll
ret
sti
ret
repz
cmp
mov
mov
je
lods
outsl
notl
fidivrs
rolb
fmul
in
stc
imul
and
push
ja
mov
rorl
dec
mov
fidivrl
addl
jbe
loop
hlt
sbb
add
jb
xchg
dec
and
ret
jl
stos
xchg
repnz
lods
mov
gs
add
je
pop
sub
mov
shll
sub
pushf
je
aam
in
std
movsl
push
out
push
jno
movsb
pushf
inc
dec
mov
xor
movsl
jecxz
pop
cmp
dec
cli
sbb
popa
pushf
xchg
movsl
in
mov
scas
loop
popa
pop
push
mov
out
sbb
and
dec
fiadds
test
popa
insl
rcrb
outsb
ret
cs
dec
mov
jl
pop
sbb
rclb
xor
popa
mov
push
cltd
cmp
fcoml
ret
jge
outsb
movsl
lds
outsl
mov
sbb
or
fstpt
shll
jge
pusha
das
ret
ds
pop
cmp
mov
add
xorl
mov
lret
sbb
cltd
push
or
xchg
jae
push
adc
adc
cmp
or
inc
mov
test
mov
cli
out
or
fs
mov
mov
adc
add
sbb
in
movsl
test
test
sarl
xchg
jmp
pusha
add
add
movsl
dec
mov
push
std
mov
mov
rorb
adc
inc
stc
mov
popa
pusha
jmp
mov
out
movsl
mov
mov
pop
loopne
clc
or
sbb
sub
cmp
fsts
sbb
fisubs
fldt
cmp
lods
mov
dec
add
mov
not
sub
clc
sbb
out
cmp
mov
out
leave
add
mov
mov
jge
and
aas
push
cld
sarl
cld
popa
sub
in
idiv
inc
lods
jbe
pop
test
jne
jae
mov
out
jno
push
imul
ret
clc
inc
movsb
cli
fs
movsb
jns
aam
dec
dec
inc
fmuls
sub
mov
es
stos
xchg
in
ss
call
ret
out
out
mov
sahf
adcb
je
inc
mov
les
sahf
or
shl
mov
inc
mov
fsubs
xor
loope
add
test
jecxz
push
mov
cld
fimull
jmp
sbb
mov
faddl
arpl
aas
pop
mov
gs
dec
jbe
cmc
movsb
push
adc
loop
jae
fs
loop
out
test
ret
jb
fs
pop
lret
jo
and
sbbl
or
and
lcall
add
adc
sub
cld
mov
movsb
addr16
lret
lods
and
in
adc
sbbb
mov
inc
filds
xchg
or
pushf
ret
mov
test
fs
cmp
loopne
jg
jp
mov
jb
cmp
push
es
xchg
daa
xchg
ficoml
movsl
lods
jae
test
mov
jbe
addb
sbb
out
jge
jle
xor
adc
insb
lahf
push
fistps
adc
andb
loop
sti
sbb
adc
push
lret
mov
movsb
xchg
mov
dec
hlt
imul
mov
jno
xor
mov
aas
add
je
and
les
jl
mov
jl
jge
je
ds
shlb
xchg
fstpt
adc
push
aam
movsb
xor
lods
or
aaa
dec
cmpsl
xor
mov
cmp
mov
inc
test
mov
cwtl
mov
xchg
mov
cli
xchg
or
clc
js
fmull
sbb
cmp
add
mov
push
adc
add
sarb
call
jno
mov
fmuls
jl
inc
sub
stc
sub
in
push
stos
testb
jl
pushf
cli
add
add
push
popf
sub
mov
sbb
push
push
and
xlat
dec
aam
and
leave
push
sub
mov
mov
es
add
adc
out
push
out
fidivrs
in
mov
mov
jo
sti
push
mov
sbb
popa
xchg
add
mov
fmull
movsl
jl
test
insb
repnz
push
mov
mov
adc
jae
fnstsw
fsubp
mov
mov
aam
cwtl
loopne
or
in
jle
xor
and
iret
xchg
xchg
dec
jbe
out
pushf
movsl
mov
sub
xchg
lods
mov
adcb
into
inc
cli
sub
xchg
or
fisubrs
int3
push
push
je
cmp
lret
xchg
sbb
or
dec
rorl
adc
icebp
jge
sub
xorl
xor
jle
fldt
pop
or
mov
out
or
push
mov
lret
test
jo
push
adc
movsl
nop
test
and
mov
inc
cmp
mov
mov
add
adc
jp
lods
xchg
sti
int3
pop
jle
push
and
rol
pop
je
sahf
jl
adcb
add
sbb
movsl
fiadds
pop
fdivl
add
aad
loope
pop
mov
fimull
out
fadd
jg
mov
xor
sbb
fmuls
mov
js
mov
out
sbb
dec
jno
clc
mov
sbbl
jb
dec
cmp
mov
jae
mov
insb
loope
push
xlat
cwtl
ljmp
je
outsb
repnz
sub
and
in
mov
movsb
add
movl
mov
xor
iret
rcll
fwait
xchg
mov
fs
mov
je
fisttpll
das
std
cwtl
jecxz
jle
jmp
loope
ret
xchg
mov
aam
sbb
add
pop
sub
loop
sbb
sbb
lret
push
lods
pop
fnstenv
inc
mov
ret
aas
in
std
sbb
add
call
cmpsl
sub
ljmp
jmp
movsb
mov
sbb
fidivrs
rcrl
jnp
sbb
addl
mov
jbe
inc
mov
pop
mov
sbb
lods
aam
push
dec
aaa
xor
arpl
popa
ljmp
cli
add
in
cltd
je
sahf
push
or
sub
sub
addr16
scas
repnz
movsl
mov
inc
loopne
ja
mov
scas
and
repz
inc
jnp
lahf
sbb
ss
jne
lods
add
jo
inc
xchg
adc
pop
fucom
mov
add
dec
mov
fdivrl
fsubs
mov
xchg
rorb
int3
and
in
fnstsw
imul
outsb
imul
push
shl
push
jmp
jecxz
test
outsb
out
sub
sbb
push
sbb
hlt
xchg
lods
adc
lret
xor
adc
lods
or
mov
test
xchg
loopne
bound
sbb
mov
movsb
dec
in
pop
add
cld
add
pushf
mov
and
and
mov
dec
cmp
mov
sti
mov
icebp
inc
sti
aas
inc
lods
int
xor
push
inc
inc
insb
scas
jle
outsl
xchg
cmp
loop
lods
dec
inc
fs
hlt
mov
xchg
repz
mov
out
fildl
fists
push
jbe,pt
push
jl
xchg
mov
movsl
in
pusha
hlt
js
mov
in
inc
add
mov
hlt
xchg
pop
sbb
scas
sbb
add
or
or
sahf
daa
rol
test
jmp
shrb
and
aas
repz
push
aam
or
dec
out
cs
insb
cs
pop
loope
inc
sbb
mov
ret
inc
sub
pop
mov
mov
fwait
jae
icebp
shrb
pop
add
lds
xchg
repz
dec
dec
inc
aam
divps
test
inc
jl
add
pop
clc
pushf
jmp
movl
les
imul
pop
jl
shr
lods
mov
mov
or
jg
in
dec
test
out
lcall
mov
insb
push
icebp
imul
mov
cwtl
jl
mov
dec
js
lock
call
fdivrp
cmpsl
inc
test
iret
sarb
rcrl
int
int
loopne
repnz
je
das
push
gs
dec
inc
jp
mov
ret
dec
adcl
insl
sub
sbb
lods
sbbl
adc
mov
frstor
mov
jge
sarb
adc
and
xorl
loopne
movsb
jmp
int
cwtl
shlb
mov
addr16
fimuls
aad
je
mov
jo
cmp
fwait
or
lock
dec
push
mov
xlat
cmpsl
jb
popf
mov
mov
sub
rep
xchg
in
cmp
push
in
stc
xchg
enter
stos
jge
or
rcrb
hlt
cs
and
subl
negl
popa
mov
adc
pop
rcrb
sbb
inc
dec
sbb
inc
iret
push
stc
adc
jle
stos
cmp
pop
hlt
in
sbb
xor
rorl
negb
add
aas
popf
cmp
bndldx
stc
fwait
cmc
pop
or
jbe
sub
pop
dec
dec
cmp
fs
push
jp
fwait
push
pop
jmp
xchg
mov
sub
sbb
jl
mov
loopne
cmp
cmp
lret
ret
fwait
movsl
xor
pop
xor
adc
cwtl
inc
mov
push
psllq
aam
jne
jno
ds
mov
faddl
mov
sahf
in
lret
add
in
js
popa
adc
cld
call
sti
jl
test
int3
jg
cld
das
inc
add
jle
jge
imul
idivb
clc
popa
mov
pop
jae
fstl
ljmp
xchg
cwtl
cli
add
push
fs
sbb
stos
dec
insb
mov
or
andb
push
scas
popf
scas
cmc
inc
jne
jae
repnz
in
dec
cmp
push
sub
mov
adc
lock
inc
outsb
push
add
mov
cmp
fsubs
xchg
mov
mov
push
pop
popa
loop
lods
stc
dec
sbb
pop
adc
dec
dec
jne
subl
add
jae
dec
mov
jbe
mov
and
xor
testl
rcl
jne
jecxz
cmp
jg
jp
dec
push
inc
sub
mov
imulb
les
cmp
out
sbb
adc
cld
pop
mov
and
xor
push
fcmove
int3
sbb
rorb
bnd
test
into
mov
pop
dec
pusha
pop
or
fs
out
and
jnp
cmp
mov
imul
rcr
cli
fistl
mov
sub
inc
subb
jo
lods
test
jecxz
test
mov
jne
ds
les
jl
out
loope
jnp
test
movsl
lret
and
bound
jecxz
mov
es
lods
mov
pop
inc
roll
lcall
shlb
jno
sub
dec
cmp
xchg
stos
sahf
imul
inc
adc
inc
cs
and
sbb
rorl
jg
dec
jae
dec
add
test
in
pop
jbe
mov
sub
mov
fildll
xorl
sub
or
mov
or
mov
les
mov
ds
mov
pop
xchg
pop
call
push
add
nop
hlt
test
adc
mov
jno
scas
inc
jne
loopne
fdivrs
cwtl
sub
scas
pop
mov
sarl
inc
mov
nop
int3
ja
push
lret
movsb
hlt
ja
mov
adc
sahf
mov
mov
mov
mov
popf
call
cmp
mov
inc
loop
sarb
adc
fnstsw
mov
mov
jge
js
pop
mov
cmp
mov
dec
xchg
in
jge
cmp
push
rcrb
mov
pop
cmpsl
arpl
fmull
jecxz
cmp
fistps
mov
jle
cmp
fs
adc
add
mov
inc
lcall
stos
loopne
mov
subb
inc
mov
orb
std
fisttps
pusha
outsl
sub
mov
lea
lret
sub
fwait
ret
mov
pop
into
lea
jb
addr16
aad
xor
imul
mov
mov
dec
pop
mov
jl
popa
mov
test
movsb
dec
ret
popa
mov
and
inc
mov
push
xor
mov
mov
insl
and
xchg
pop
lahf
jp
inc
out
mov
call
cld
adc
leave
mov
mov
cwtl
shrb
dec
les
dec
xor
mov
pushfw
shlb
sub
inc
dec
cmp
rcr
or
inc
adc
push
mov
sahf
shl
lock
or
loopne
fs
mov
insl
fwait
mov
jle
mov
jno
jp
mov
into
xchg
inc
pop
ja
and
pop
mov
jecxz
and
sti
in
cmp
int3
xchg
or
test
hlt
mov
add
cli
mov
lods
mov
mov
test
mov
xchg
ret
iret
nop
jnp
ds
mov
sub
clc
sub
test
insl
inc
adc
ret
aas
in
xchg
test
lahf
mov
mov
push
incl
shrb
stos
add
mov
mov
stos
and
mov
mov
adc
testl
lahf
inc
fcom
pop
mov
sahf
mov
fwait
mov
inc
movsb
pop
inc
adc
hlt
stc
mov
jecxz
mov
cltd
push
jno
sti
movsb
dec
pop
loop
sub
sbb
xor
dec
adc
test
lcall
aaa
push
mov
adc
fwait
out
and
ljmp
repz
daa
mov
mov
je
push
in
inc
push
ljmp
and
aas
adc
outsb
xchg
and
enter
fisubrs
jl
clc
prefetchnta
and
pop
push
and
or
add
sarb
lcall
in
mov
pushf
lds
hlt
icebp
sub
inc
or
add
cwtl
ret
cmp
and
cmp
mov
test
sarb
gs
cld
sti
test
and
out
movsl
jae
xchg
xchg
sub
push
cmp
imul
ja
or
popa
sub
mov
mov
jns
jnp
cmp
sarl
dec
hlt
cmp
movsl
sbb
sbb
dec
fdivrs
pop
movsl
mov
push
xchg
imul
mov
lahf
out
movsb
mov
jmp
mov
movsl
xor
popf
mov
mov
pop
aam
jae
stos
fists
les
mov
je
dec
or
and
shll
sbb
fwait
adc
addr16
sbb
jmp
push
loop
scas
test
dec
pop
sahf
pop
mov
rclb
jae
push
cmpsb
cmpb
ss
call
mov
mov
mov
ljmp
xchg
movsb
inc
dec
adc
movsb
or
aam
dec
das
dec
movsb
inc
cmp
and
pusha
dec
lods
mov
into
mov
ljmp
and
jg
outsl
std
cmp
pop
fs
xor
mov
out
mov
in
insb
mov
lret
mov
jge
je
movsb
hlt
or
and
mov
ret
rcrb
mov
test
inc
sbb
icebp
stos
mov
jne
insb
popf
repz
dec
pusha
pxor
inc
pop
bound
push
sbb
stos
ret
faddl
std
cmp
add
pushf
sbb
push
stos
jbe
mov
test
push
xchg
lods
ret
fldenv
jb
jge
lcall
xor
sbb
testb
push
loop
sbbb
mov
aam
pushf
mov
pop
aas
insb
push
push
jle
leave
push
aaa
test
scas
push
in
pop
mov
add
xchg
mov
fmul
dec
fistps
and
and
mov
ds
pop
shrb
repnz
push
in
and
scas
sbb
lcall
push
std
paddusw
cmpsl
repnz
cli
jge
hlt
lds
inc
cmp
add
mov
insb
ret
jb
test
or
loopne
cmpb
iret
jl
hlt
rclb
sub
push
mov
dec
ret
cli
ds
pop
lret
add
push
pop
ror
das
xchg
jb
arpl
rclb
sbb
sbb
pop
arpl
dec
add
shl
cmpsl
adc
sbb
mov
jno
cmp
add
pop
mov
mov
xorl
in
enter
and
or
stos
dec
mov
fistl
das
pop
mov
lods
je
cmpsb
inc
sub
scas
mov
lods
sub
in
pop
or
fcmovne
mov
rclb
movsl
scas
loop
cmpsb
push
aam
repz
insl
push
inc
cmp
push
pop
cmpsb
rcrb
fstpt
hlt
and
lods
xchg
clc
xchg
out
jb
and
mov
mov
add
lock
loop
shrb
je
adc
popf
outsl
adc
scas
push
rcr
loopne
mov
mov
sbbb
jecxz
pop
sbb
les
outsb
rclb
movsl
das
and
repnz
jo
test
daa
inc
lods
mov
mov
mov
loop
movsb
sbb
dec
out
push
std
data16
jb
push
xor
shl
jmp
sbb
stos
movsl
cli
shrl
add
shlb
call
out
push
leave
out
scas
outsb
dec
cli
xchg
inc
leave
adc
or
sbbb
xchg
ret
mov
inc
add
xchg
fnstcw
add
ljmpw
cwtl
and
test
insb
mov
sbb
jae
jnp
and
push
cld
popa
imulb
or
in
mov
xor
les
daa
mov
imul
cwtl
mov
sti
and
loop
pop
mov
mov
mov
xor
and
pop
xchg
outsl
sub
test
in
pop
dec
mov
je
and
gs
xor
pop
jecxz
adc
roll
fstpl
clc
push
pop
shlb
pop
cmc
fcomi
and
int
stos
adc
push
dec
or
into
or
dec
adc
jg
out
and
movsbl
lea
dec
sti
popa
jg
mov
pop
add
xor
mov
std
inc
push
pop
pop
dec
jg
jns
rolb
jg
insl
mov
call
or
and
pop
sbb
jp
add
jbe
cmp
sbb
sbb
pop
add
mov
fcmove
fildl
sbb
iret
dec
out
pop
movsl
mov
ret
loop
or
fildl
mov
lods
push
aas
mov
nop
loop
data16
jg
popa
mov
testl
push
sbb
pop
xchg
aas
lret
shrl
div
mov
ret
jg
push
jp
dec
add
imul
mov
add
push
lret
sti
sbb
call
inc
out
fwait
or
in
cmp
je
hlt
xor
in
xchg
dec
hlt
lods
fldcw
and
movsb
fimull
aaa
cmpsb
mov
pop
pusha
dec
vsubpd
sbb
fs
lock
daa
repnz
xchg
mov
fsubl
cltd
les
mov
loop
inc
mov
sbb
stos
adc
pop
call
imul
arpl
cmp
dec
mov
repz
sub
jne
faddl
fmull
in
out
sbb
sbb
fdivrp
mov
jl
cmp
shrb
mov
mov
lahf
pop
std
mov
movsb
or
je
push
mov
pushf
movsl
sub
xchg
loopne
add
aas
lret
jmp
fdivs
into
stos
and
jp
jmp
pop
jns
shll
loope
jo
ljmp
mov
repnz
xor
aam
mov
stc
mov
pop
cli
fsubrs
test
outsb
mov
lret
push
push
lret
repnz
faddl
mov
loope
xchg
divb
cli
call
lods
rcrb
sbb
jl
cli
add
xor
in
add
fadd
pushf
mov
jns
and
dec
repnz
repnz
mov
les
loope
loop
aaa
xor
and
shr
mov
loopne
iret
shlb
pop
cmp
jmp
inc
outsb
sti
inc
leave
lock
sbb
movsb
mov
adc
inc
stos
jp
outsb
dec
imulb
das
mov
sbb
sub
or
xor
xor
mov
das
vpminub
jle
popa
mov
jg
je
xor
and
loopne
aam
cmp
or
imul
xor
cmp
cmc
and
rol
or
div
sbb
and
outsl
sbb
xor
js
stos
mov
lea
ret
xlat
sbb
add
jnp
sahf
test
clc
pop
sbb
aad
push
add
add
lds
sub
dec
adc
int
add
jmp
stos
les
pop
dec
jecxz
add
and
xchg
mov
xor
xchg
loop
scas
sbb
and
sarl
jecxz
jnp
push
repnz
cmp
sub
ja
mov
sahf
mov
stos
xchg
and
jo
or
or
jmp
push
mov
push
inc
adc
and
aad
jp
or
aam
jp
mov
aam
cltd
dec
push
filds
mov
xchg
lods
adc
mull
movsb
jne
cmp
stos
imul
fidivrl
aam
sbb
sbbl
pop
shl
test
cmp
mov
mov
sbb
cmp
dec
mov
in
cmp
inc
sbb
jg
ja
push
xchg
subb
sahf
outsb
cmp
dec
dec
loope
jge
mul
adc
mov
sbb
xor
pushf
xor
scas
or
or
lahf
or
lea
push
mov
jmp
jecxz
or
lcall
sub
jno
les
cmp
mov
sub
xor
mov
loope
pop
mov
fisttpl
lret
xor
test
mov
mov
xlat
cltd
and
inc
mov
arpl
mov
shl
lea
or
jmp
and
pop
mov
cmp
cli
sbb
mov
insb
xchg
add
loopne
mov
pushf
mov
mov
mov
cmpsl
mov
or
int3
mov
fadds
lret
mov
mov
and
filds
jge
cld
fidivrs
mov
hlt
inc
push
and
jae
sbb
mov
icebp
mov
mov
mov
dec
loop
mov
pop
orl
mov
mov
xchg
sti
ja
mov
pop
lods
inc
stos
dec
xor
mov
inc
imul
sbbl
shll
xor
fcomps
jmp
out
mov
push
test
insl
and
mov
mov
not
mov
pop
cmp
mov
adc
jl
adc
or
jbe
cmpsb
lret
jae
inc
ljmp
pop
xchg
mov
rcll
jecxz
mov
fldt
lahf
cmp
cwtl
repnz
aad
fucomip
dec
pop
cmp
movsb
push
imul
out
cwtl
and
sahf
mov
in
lods
pop
pop
sbb
jno
dec
cmpsb
adc
popa
adc
insb
push
pop
inc
movsl
scas
mov
xor
dec
add
mov
inc
repz
adc
loopne
cld
fistps
dec
scas
fcoms
fisttpl
and
and
and
loop
push
loopne
pop
xor
subb
sbb
popa
mov
test
pop
sbb
stos
mov
mov
call
cmp
and
xchg
shl
xor
out
dec
test
sub
sbb
sbb
mov
jnp
jnp
sub
sbb
pop
jecxz
pop
xchg
jne
cmp
jb
stos
call
hlt
test
jb
mov
adc
ret
push
and
popa
cmp
icebp
push
in
lret
mov
test
push
in
rcrl
cmp
in
inc
mov
jecxz
sbb
xchg
cwtl
loop
movsb
adc
pop
adc
test
cli
xor
sub
test
stos
inc
clc
inc
jl
shl
xlat
jg
adc
mov
dec
shl
jnp
rol
adc
sbb
add
arpl
dec
dec
adc
mov
inc
jl
je
cmp
call
mov
pop
cmp
ret
or
clc
xchg
fldt
les
fstp
mov
lahf
das
ljmp
push
push
dec
cwtl
adc
pop
adc
dec
scas
mov
inc
lock
jne
out
je
out
int
adc
mov
or
fsubr
jge
cmpsl
int3
jne
cmp
mov
inc
imul
and
sbbl
jl
clc
out
push
daa
push
imul
test
add
outsb
mov
jp
stos
ja
into
loop
int3
enter
adc
aad
in
inc
enter
rcl
push
imulb
xor
sbb
imul
aad
daa
jl
aam
or
pop
into
mov
pop
lret
mov
leave
sub
dec
dec
sti
add
rorl
dec
shrl
pop
jp
push
inc
or
mov
jecxz
hlt
es
rol
leave
lret
pushf
add
hlt
xchg
lods
mov
pop
cs
xlat
mov
rclb
mov
mov
in
pop
add
aad
push
pop
icebp
jecxz
push
je
hlt
lods
jl
rclb
add
hlt
out
or
adc
sub
adc
or
mov
or
mov
dec
orb
dec
arpl
negl
pop
sub
add
stc
jp
push
mov
es
test
add
test
xchg
sar
jmp
test
xlat
push
push
fmull
ss
mov
jo
dec
rorl
repz
sbb
stc
xor
xor
xor
jge
pop
call
pop
mov
andb
lcall
push
push
lock
stos
mov
clc
sub
or
test
out
popa
idiv
in
sti
mov
mov
xchg
fdivs
jnp
dec
fcmovnu
sbb
data16
ljmp
div
mov
mov
mov
add
mov
mov
dec
mov
loope
cmpsl
rcl
pop
jmp
mov
push
test
push
xchg
push
jecxz
outsl
jb
xchg
cmp
mov
addr16
idivb
push
and
mov
pop
add
movsb
xor
loopne
pop
jae
inc
pushf
adc
ret
jle
cmp
mov
xor
and
inc
pop
rcll
ljmp
mov
imul
call
jns
jne
cwtl
hlt
inc
inc
fiaddl
cmp
movsb
mov
lock
iret
fcomi
ja
loop
mov
hlt
mov
pushf
pop
inc
cmpb
push
mov
nop
pop
sbb
lods
mov
xor
fdivr
test
mov
add
shlb
arpl
loop
inc
mov
imul
mov
pop
loope
sub
fs
sub
lock
adc
lcall
mov
and
dec
call
stos
pop
and
rol
std
lret
fs
and
aam
mov
cli
add
add
std
pushf
mov
test
clc
pop
jmp
arpl
mov
ds
stos
mov
push
je
rcll
jle
mov
adc
pop
stos
jae
sub
aaa
mov
hlt
cmp
add
fidivl
data16
shl
ljmp
sahf
ret
cmc
call
xchg
inc
push
jg
fadd
pushf
sub
cmpsl
or
test
std
mov
or
nop
icebp
jge
xor
es
or
and
mov
cmp
adc
mov
push
mov
fsts
fisubl
mov
mov
xor
mov
pop
pushf
or
xchg
cld
inc
stos
imulb
in
cmc
cli
in
and
scas
push
xchg
aaa
je
sub
mov
test
stos
into
or
loopne
insb
sbb
neg
popa
movsb
in
push
inc
mov
movsl
inc
xor
mov
or
in
mov
xchg
or
sub
jmp
sbbl
in
mov
mov
mov
pop
mov
fwait
subl
lcall
mov
jp
roll
mov
dec
fisubl
jge
add
sahf
mov
outsl
ret
mov
mov
rol
xor
fdivr
test
mov
or
aam
subl
inc
sti
lods
or
popf
cmp
in
arpl
sbb
out
movsb
mov
adc
jnp
movsl
jns
jge
or
aad
lahf
outsl
ja
cmp
xlat
push
push
rorb
push
xchg
push
test
fidivs
jae
dec
xchg
push
mov
xchg
in
mov
inc
xor
scas
in
sub
mov
sti
pusha
push
mov
loope
xchg
fidivrs
and
loop
xchg
rolb
into
sub
add
int3
clc
aam
jnp
mov
sbb
popa
xchg
push
dec
pop
pop
fists
mov
movsb
mov
or
insb
jne
adc
push
cmc
les
pop
mov
sbb
jle
dec
repz
add
pop
or
or
jmp
ret
cmp
test
icebp
sub
enter
mov
sbb
fstl
adc
add
in
lods
xchg
idivl
mov
std
fmuls
loope
xchg
in
xchg
incl
sbb
push
and
into
mov
sarl
mov
mov
mov
repz
in
dec
mov
mov
dec
fwait
repnz
jl
sub
or
movsl
pop
fcoms
sbb
mov
mov
mov
add
repz
lcall
std
inc
movsl
push
lods
sahf
movsb
or
mov
rorl
sub
lock
mov
je
mov
xchg
je
shlb
dec
mov
lahf
mov
pop
or
daa
sub
mov
repnz
subb
popa
jl
or
adc
jl
pop
repz
stc
push
iret
dec
inc
inc
mov
cmp
sbb
les
arpl
fldl
out
sbb
add
das
mov
ret
fs
aam
push
mov
mov
dec
sub
xchg
push
mov
cld
push
push
sbb
out
insb
fiaddl
push
xor
add
sbb
repnz
fisubl
loope
aad
fscale
jmp
adc
inc
fstpt
xchg
pop
jnp
scas
add
pop
mov
xchg
rorl
mov
into
jno
mov
les
jae
rcrb
mull
andb
scas
sub
fwait
push
dec
xchg
in
bound
and
loope
std
loopne
mov
ficoml
cmc
jnp
testl
cmp
add
bound
cli
push
lcall
jle
dec
mov
lahf
frstor
outsb
adc
arpl
std
pop
mov
pop
lret
cld
xor
and
repz
shll
idiv
imul
jmp
jno
fisttps
mov
loopne
cmp
popa
xchg
lds
ja
ljmp
push
mov
adc
imul
pop
in
outsb
pop
add
movsb
icebp
push
ret
out
imul
inc
icebp
imul
imul
stos
imul
fwait
test
mov
popa
mov
fwait
jb
mov
push
movsb
mov
sar
pop
popa
sub
imul
dec
push
xchg
test
jge
pop
and
jne
fisttpl
loop
loope
sbb
jle
lods
cmpl
jno
lods
mov
in
mov
pusha
pop
lock
js
mov
sbb
repz
push
clc
and
cli
cmp
sarl
andl
dec
loope
push
ret
jno
ljmp
test
mov
mov
je
xorl
push
js
and
fsubrl
outsl
out
les
cmp
imul
push
inc
mov
lea
in
into
in
cmpsl
aaa
and
stos
mov
adc
iret
cld
ret
jl
mov
mov
fnstcw
jp
in
add
and
pop
mov
pop
sub
roll
mov
mov
adc
in
popa
jecxz
and
std
mov
ret
adc
pop
ja
cmp
and
push
aad
rolb
sti
xchg
push
sub
loopne
dec
or
jns
push
shl
mov
addr16
cmp
push
jg
leave
out
lock
into
out
inc
mov
dec
out
dec
popa
daa
ljmp
stos
push
cwtl
ljmp
inc
sbb
push
fisttpl
add
pop
orl
mov
xlat
pop
mov
pushf
dec
push
ja
sbbb
jnp
sti
pop
je
inc
idivb
mull
out
jo
out
mov
fwait
in
xor
les
aas
data16
cmc
test
sub
insb
jae
arpl
jp
xchg
lcall
pop
lock
xor
pusha
call
push
sbb
push
mov
ds
xchg
push
or
pop
pop
sbb
sarl
mov
mov
les
ret
pop
sbb
push
les
out
push
add
jle
int3
pop
sub
mov
push
and
shrl
jnp
or
mov
lahf
jecxz
add
and
shl
fs
movsl
pop
movsl
clc
xchg
and
fdiv
jne
dec
movsb
in
inc
sub
jmp
or
cmp
popf
imulb
fmull
rcll
mov
push
add
jmp
fdivs
cmpsl
scas
xchg
fwait
roll
movsb
lret
add
dec
cs
loop
les
mov
xchg
rorl
loop
inc
stc
call
fcoml
test
mov
jge
xchg
add
aam
xor
mov
mov
jb
ret
mov
mov
sbb
fists
ret
out
in
aad
pop
scas
fcoml
adc
in
adc
xchg
push
push
sarb
shlb
cld
lahf
xlat
sahf
cmp
lcall
fstl
shll
addr16
stos
fsubl
and
push
lahf
fdivl
mov
ficomps
lret
xor
or
daa
arpl
inc
sub
rolb
pop
mov
cmp
sbb
dec
lods
and
sbb
ficoms
mov
sbb
jl
rol
or
mov
iret
pop
movsl
rcrl
mov
mov
jp
cmp
jl
dec
fs
loope
push
jle
loope
sti
arpl
ss
in
or
loopne
or
stc
mov
push
mov
inc
and
push
xor
icebp
gs
inc
int3
xchg
pop
fistpl
jmp
stos
popa
subl
pop
or
sbb
cmp
cs
jbe
daa
repnz
push
clc
mov
dec
jno
xchg
ret
mov
repnz
test
or
lods
add
fwait
dec
xchg
movsb
pop
mov
fs
mov
js
je
cs
mov
outsl
or
push
dec
loop
cmp
xor
in
ja
xlat
les
stos
mov
cmp
int
imul
and
faddl
and
add
addb
aaa
mov
pop
aad
dec
test
cmp
stos
adc
int3
xor
je
in
or
into
xor
jo
stc
adc
or
out
mov
mov
cmp
rol
addr16
shrb
lret
adc
add
stos
jle
jb
jp
mov
rorb
lods
pop
jns
aas
hlt
pop
ret
testb
jnp
dec
jo
ljmp
dec
out
or
jns
adc
cmc
inc
mov
aam
int3
cmp
mov
call
stos
jbe
popa
or
add
mov
adc
sbb
imul
xchg
mov
push
push
add
daa
jns
movsl
hlt
fdiv
add
mov
mov
repnz
insl
mov
dec
test
fcoms
hlt
lds
sub
out
mov
mov
popa
mov
movsl
mov
sbbb
fsts
rcrb
mov
mov
xchg
test
lock
repnz
adc
repz
enter
xchg
enter
outsb
mov
jmp
into
sti
dec
mov
xchg
stos
loope
or
xchg
mov
subb
js
and
hlt
out
movsl
sub
cs
and
addl
movsl
xor
dec
mov
aaa
jns
dec
push
sbb
movsb
mov
lea
pop
jg
sub
pop
jns
fiadds
stc
inc
or
arpl
inc
pop
aam
mov
push
inc
je
mov
or
hlt
cmp
lret
add
popf
pop
jmp
dec
movsl
stos
jo
scas
rolb
stos
jge
sub
mov
into
es
sbb
in
jg
add
xchg
push
sar
sbbb
sbb
mov
sti
and
je
sbb
inc
fwait
scas
xchg
shll
mov
lock
xchg
subb
push
aas
adc
cmpb
inc
hlt
aam
data16
icebp
insb
pop
mov
loop
stc
mov
mov
lea
add
inc
fcompl
pop
adcl
out
pop
movsl
pop
std
int
jns
and
sbb
mov
pop
xor
in
push
fstpl
cmp
ret
aaa
jge
fxch
lock
mov
es
in
insl
mov
push
call
cmp
lret
fmull
sbb
sub
push
sbb
repnz
pop
inc
mov
inc
ds
pop
sub
jnp
leave
mov
rcr
jecxz
outsb
mov
lret
mov
inc
dec
dec
cpuid
jp
mov
stc
jp
fcoml
pushf
bound
in
adc
stos
rcrb
mulb
mov
aam
ljmp
shl
add
popa
dec
mov
jecxz
jle
cmp
and
ret
cmp
ds
xchg
inc
sbb
fdivs
arpl
std
fistps
mov
xlat
repz
incl
push
shll
sbb
push
lcall
stc
mov
in
inc
outsl
pop
adc
pop
sub
xchg
xchg
mov
fildll
in
or
test
lods
mov
popa
fistps
add
mov
dec
cli
in
popa
jl
mov
insb
mov
rol
add
dec
into
add
fdivl
xchg
xchg
mov
in
fneni(8087
mov
mov
push
imul
jecxz
mov
loop
repz
push
in
je
mov
mov
ret
mov
movsb
sti
addr16
sub
jmp
mov
mov
xchg
cld
sub
sarl
add
hlt
xor
or
add
cmp
cmp
je
and
push
out
test
xor
lods
mov
push
mov
and
push
sub
dec
sbb
shr
cli
ret
xorb
mov
xor
mov
xchg
aaa
push
dec
add
in
pop
movsl
inc
fildl
cltd
add
mov
aas
int
daa
ficoms
mov
into
insb
or
out
sbb
add
nop
out
lret
int3
push
in
cmpl
mov
mov
cmpsl
mov
dec
cmp
stc
ljmp
lret
pop
jbe
or
hlt
movsl
xchg
jl
pop
xor
shlb
ffree
test
in
jb
xchg
ljmp
cmc
sub
imul
movsl
dec
idivb
jno
stos
add
lods
add
aaa
shlb
notl
mov
scas
mov
mov
mov
or
cli
add
pop
adc
in
ds
mov
jo
sar
and
mov
pop
xchg
mov
sahf
stos
and
jp
push
sub
fsubrl
or
push
stos
ret
loope
movsb
inc
push
mov
xchg
sub
jl
in
movsl
test
test
jmp
popf
mov
dec
pushf
rcr
push
adc
push
out
fsubr
cld
sarb
mov
les
std
and
dec
in
ljmp
mov
into
push
repz
rcl
call
leave
inc
loope
bound
pop
sti
and
jg
lods
ljmp
pop
or
int
call
adc
ret
push
pushf
lods
dec
in
mov
push
je
loop
loop
call
mov
ljmp
jecxz
cmp
fldt
in
lret
fwait
mov
add
mov
movsl
mov
sbb
adc
arpl
inc
sub
ljmp
cwtl
insb
jecxz
test
adc
jne
out
scas
rcll
dec
push
mov
jecxz
pop
adc
imul
sahf
jnp
inc
fsub
cmp
ljmp
cltd
clc
cmp
mov
mov
mov
rcrl
repz
sti
add
or
cwtl
test
lock
sub
adc
ds
dec
orl
stos
mov
test
mov
popa
xor
popa
stos
pop
cmpsl
push
inc
repnz
cli
xor
mov
sti
cmpl
repnz
push
loop
pop
insl
lock
inc
xchg
movsb
rclb
inc
xor
fcomps
ret
stos
ficoms
leave
jns
push
test
or
subb
lcall
loope
xlat
loopne
rcrl
imul
popa
leave
sub
int3
push
das
cmpsb
outsl
stos
xchg
ss
test
xchg
mulb
mov
in
dec
dec
xor
lods
and
js
add
repnz
cld
clc
rol
hlt
clc
adc
mov
or
add
sub
jl
in
clc
adc
movsl
lret
xchg
push
test
ret
mov
mov
sti
mov
pop
int3
aas
test
lahf
xchg
mov
cwtl
fdiv
sub
dec
sub
sti
lcall
pop
pushf
lahf
mov
loope
cs
push
dec
push
lods
adc
mov
int
mov
cwtl
mov
sbb
pxor
pop
push
ret
mov
getsec
mov
mov
adc
insb
adc
and
sahf
scas
sub
mov
jge
cmpsl
pop
and
or
jae
int3
jnp
outsb
das
lret
sub
jmp
xchg
xchg
stos
cmp
aaa
loop
lods
fwait
push
jp
cmp
push
outsb
xchg
in
pusha
adc
jnp
and
sti
push
mov
popa
push
clc
sbb
add
cmp
sbb
ret
dec
or
jp
fiadds
jnp
xor
dec
std
outsb
jno
cwtl
jecxz
sbb
adc
add
mov
movl
sbb
adcb
dec
les
sti
clc
add
lods
inc
call
fdiv
jno
movsl
or
push
add
xor
mov
or
ficoml
sbb
xchg
and
ds
cwtl
xor
cli
add
popf
jno
jp
push
jp
in
stos
mulb
and
inc
push
cwtl
je
lods
loop
arpl
pop
leave
push
xchg
insl
fistpll
push
pop
inc
add
rcrl
xchg
mov
in
fs
out
fs
pop
pop
inc
out
jp
insb
cmp
adc
dec
xchg
in
inc
inc
xor
sub
das
sbb
and
pushf
sbb
adcl
adc
repz
jl
es
sahf
insb
sub
push
jo
push
pop
mov
inc
loopne
aad
xchg
outsb
shl
outsb
pop
sub
sub
in
sub
xor
mov
jl
ljmp
and
lods
or
sbb
mov
icebp
ficomps
popa
and
or
into
fsubl
fstl
mov
repnz
or
roll
loope
adc
inc
adc
fmull
test
jo
ljmp
push
pop
sar
fs
fisubl
and
jg
fldt
lcall
aad
inc
cmp
and
inc
outsl
cld
jl
cmp
mov
stos
mov
aam
pop
popf
nop
movsl
xor
test
in
jnp
mov
out
push
xchg
out
sbb
loope
fsubrp
repz
pop
in
movsl
push
aam
cli
mov
sub
cmp
cmp
stos
push
inc
pop
mov
shlb
dec
xchg
xor
jecxz
mov
mov
sub
hlt
repz
cwtl
test
loop
into
push
mov
stc
loope
jecxz
pop
jp
test
jecxz
dec
jb
loop
out
dec
mov
inc
sbb
sbb
aad
push
jl
and
sbb
int3
cwtl
push
push
inc
fucomip
fsub
cmp
scas
xchg
dec
push
mov
sub
bound
pop
xchg
jno
in
movsl
fldt
fadds
test
popf
mov
jle
jne
dec
inc
push
sub
dec
jmp
mov
popf
adc
inc
imul
jbe
add
mov
pop
rcrb
fidivrl
xor
idivl
fscale
push
aaa
imul
jge
mov
adc
add
jmp
movsb
jecxz
nop
xchg
ds
lret
add
lds
and
pop
mov
pop
xor
mov
inc
inc
push
popf
push
mov
negl
les
sub
pop
mov
inc
xchg
inc
lret
lret
ljmp
shr
movsb
rolb
jmp
clc
sub
arpl
notl
std
mov
xlat
push
adc
orb
scas
or
aaa
dec
push
pop
jne
stc
pop
fwait
les
shll
pop
inc
pop
inc
sbb
pop
cli
lods
dec
scas
scas
pop
cli
sub
or
sub
rcll
loop
ret
cmp
sti
lcall
je
dec
lret
pop
inc
push
je,pt
loopne
add
std
xchg
lods
ficomps
pop
sbb
and
mov
insb
out
clc
cld
lods
dec
stos
pushf
mov
xlat
pop
mov
fsts
mov
test
xor
fs
arpl
push
in
mov
les
jecxz
gs
test
leave
and
imul
xor
out
and
daa
sub
add
jg
adc
pop
mov
add
mov
mov
les
ljmp
and
leave
loope
rorl
add
mov
out
cmpb
ret
jge
rolb
dec
inc
call
incb
dec
loopne
lods
or
shl
fs
mov
repnz
gs
inc
and
repnz
push
addb
outsb
loope
repz
cmp
les
test
cmp
pop
adc
lock
faddl
repz
sbb
pusha
bound
loope
mov
sbbb
cmp
shll
xor
cli
fisubs
fisttpll
jno
jnp
hlt
mov
clc
andl
das
xchg
ficompl
fcompl
nop
bound
jle
xor
mov
hlt
std
lea
jge
cmpsb
enter
punpckldq
or
push
imul
xor
push
hlt
mov
stos
shr
add
cmpsl
in
movsl
stos
jne
dec
mov
add
mov
fildll
out
imul
inc
jno
je
inc
mov
je
push
cmp
jbe
arpl
pop
test
adc
scas
sarb
jbe
pop
imul
les
movsl
cmp
mov
lea
ret
hlt
mov
test
add
shlb
aam
inc
mov
inc
loop
mov
cmc
lock
loop
daa
out
in
mov
ficomps
push
cld
bound
xchg
aas
js
idivb
into
cmp
add
jle,pt
out
adc
stos
pop
lahf
pop
sbb
sub
jbe
call
outsb
repz
inc
repnz
jnp
test
sub
shrl
fwait
into
testl
mov
and
xlat
subb
jge
sti
movsb
add
rolb
loope
pop
fimuls
insb
mov
lcall
call
mov
jl
in
push
add
loopne
test
in
mov
hlt
lods
ret
mov
push
fisubs
mov
cmc
jb
mov
mov
hlt
cmpb
adc
sbb
mov
int
add
outsb
push
mov
repnz
and
mov
dec
dec
sub
aaa
sbb
les
dec
popf
pop
inc
push
mov
adc
pop
xor
mov
bnd
fdivl
add
and
lcall
dec
in
stos
sahf
lea
mov
repnz
jecxz
mov
test
arpl
jb
mov
hlt
movsl
arpl
jmp
inc
fildll
sti
sti
insb
test
xchg
push
in
pop
or
shl
call
jmp
and
movsb
outsb
inc
pop
push
mov
cmpsb
cmp
movsb
xchg
dec
fsubp
enter
call
sub
stc
cmc
popa
jnp
adc
xor
in
arpl
add
insb
mov
fsubrl
imul
xor
aam
sub
sub
adc
ja
mov
xchg
ficomps
sbb
insl
sbb
pushf
in
ss
pop
js
mov
cmp
hlt
testb
jno
cmp
int
cmp
pop
push
sarl
add
inc
cmp
popa
jecxz
sbb
insb
inc
negb
cmpl
out
pop
int
out
cltd
neg
xchg
sbb
orl
mov
cmp
and
int3
xchg
mov
rolb
les
stc
dec
mov
test
std
inc
movsl
and
cwtl
sub
push
mov
push
loop
adc
cmpl
mov
repnz
repz
mov
push
pop
cmp
subl
outsb
dec
mov
outsl
pop
cmp
out
in
cmp
pop
pop
enter
xorb
add
call
pop
push
es
mov
rcrb
mov
popa
insb
stos
mov
outsb
stos
lret
or
add
dec
inc
add
stos
jbe
inc
dec
dec
jo,pt
mov
sub
fildll
push
in
pop
pop
inc
ss
test
push
fnsave
in
add
adc
xchg
jb
mov
movsl
xor
dec
fdivl
cmp
xlat
xchg
mov
in
pop
mul
sbbb
inc
jmp
loopne
inc
data16
ljmp
stos
and
outsb
add
dec
xchg
inc
testb
xchg
inc
add
pop
jg
mov
ret
daa
push
xor
cmp
dec
imul
cli
pop
mov
sbb
cmpsl
jo
cmp
lock
test
popl
lea
jp
pop
fwait
popa
xchg
sub
and
jmp
xor
clc
lcall
adc
dec
fdivr
jge
les
mov
or
dec
push
nop
add
lcall
pop
xchg
dec
aam
ret
je
leave
cld
cmpsl
mov
les
and
add
mov
loopne
movsb
push
lock
mov
push
stos
rcrl
inc
xor
pop
lea
lock
or
xchg
movsb
pop
xor
adc
inc
mov
fs
pop
mov
les
mov
das
leave
and
mov
fldt
mov
pop
mov
sub
mov
stos
lahf
push
mov
inc
lret
rorl
cmp
nop
cmp
pop
sbb
js
add
lods
add
mov
imul
stos
pop
or
jo
dec
cmp
add
ret
inc
jmp
popf
movd
pop
xor
aam
shlb
sarl
jecxz
add
imul
inc
rolb
cmp
mov
movsl
cmc
or
jp
enter
add
push
or
or
stos
fldl
xor
push
mov
lds
into
fidivrl
jnp
mov
cmc
sbb
nop
inc
test
cmp
adc
push
andl
leave
lea
pop
scas
push
loope
and
enter
out
jecxz
pop
xor
in
xor
popf
push
mov
mov
or
nop
out
jno
and
pop
je
and
push
dec
add
movsb
flds
addr16
mov
cmc
icebp
inc
rol
les
daa
xchg
add
xchg
loopne
cmc
xor
loop
mov
aas
jg
mov
push
stos
add
mov
mov
push
add
icebp
add
push
sub
inc
add
mov
mov
add
add
xor
add
mov
and
mov
and
mov
add
inc
jecxz
sahf
pushf
inc
mov
lea
jge
sti
jecxz
adc
popa
mov
xor
add
or
repz
pushf
adc
out
mov
pop
and
lock
pop
mov
mov
sbb
aad
adc
jp
in
in
ficompl
test
sub
popf
dec
push
repz
pushf
adc
arpl
lock
pop
jge
adc
jp
push
popa
adc
inc
fs
repnz
push
insl
xchg
xchg
in
out
jp
or
loope
jmp
test
sbb
insl
jno
std
xor
pusha
add
out
fwait
into
mov
mov
xor
fsubrl
push
push
and
iret
scas
mov
scas
fwait
push
dec
push
inc
aas
sub
pop
sbb
push
ret
popa
mov
fdivs
push
or
fldenv
fcmovu
mov
adc
jecxz
pop
xor
mov
imul
sarb
and
in
push
pop
movsl
push
in
sbb
sti
movsb
ds
nop
out
ret
subb
sbb
loopne
sbb
xor
sti
imul
bound
in
repnz
out
lret
mov
rolb
and
popa
movsb
loop
lret
lds
cmp
mov
shll
repz
fcoml
sbb
lret
movsb
lret
jle
test
xchg
int3
mov
add
jns
mov
mov
repz
sbb
popf
pop
mov
lret
aam
enter
mov
add
mov
addl
rcrb
inc
cmp
jb
sbb
insb
adc
sbb
repz
sbb
movsl
hlt
cmp
xchg
and
call
mov
fs
div
jmp
int3
mov
mov
movsl
repnz
adc
faddl
cmp
mov
push
lret
dec
cmp
repz
cmp
sub
add
mov
jp
push
test
fimull
mov
mov
mov
push
fnsave
cwtl
xor
cmpsl
jnp
pop
loopne
xchg
inc
add
scas
cmp
mov
add
pop
lret
mov
cmp
cwtl
and
sahf
jns
mov
add
mov
jo
inc
enter
ret
xchg
jno
or
stc
bound
testl
movsl
pushf
mov
das
jg
icebp
push
adcb
in
inc
mov
insb
mov
out
and
loop
and
frstor
js
fstpl
in
mov
pop
fldl
cmpb
mov
ror
jbe
ja
mov
jecxz
mov
enter
popa
mov
cmpsl
xchg
cmp
mov
cwtl
ret
dec
cmp
jl
inc
push
or
jmp
out
lret
and
mov
movsl
sub
xor
movsb
inc
cli
addr16
dec
add
pop
shll
lret
stc
mov
fs
lret
lds
int3
in
hlt
dec
int
aaa
pop
out
into
push
out
clc
lods
add
push
push
add
aaa
add
inc
ss
imulb
and
pop
rcll
cmc
mov
fildl
mov
mov
mov
cmp
mov
dec
adc
clc
in
sub
or
push
cmpsl
dec
jmp
jge
std
mov
pop
and
ret
or
or
mov
push
outsb
mov
popa
adc
test
mov
stos
jb
fiaddl
pushf
push
lods
pop
push
imul
loop
add
adc
or
lret
mov
popa
inc
nop
inc
fwait
dec
int
push
dec
pop
or
xor
push
or
mov
fadd
push
adc
sbb
aam
popa
ds
in
xchg
insl
sbb
clc
imul
cmp
jbe
rorl
gs
sahf
aas
and
repz
xor
mov
mov
cmpsb
mov
sbb
roll
and
push
adc
mov
stos
lret
jecxz
add
std
mov
pop
movsl
enter
mov
jle
cld
sti
or
add
std
cwtl
fsts
pushl
jo
add
lock
hlt
in
imulb
add
mov
scas
jl
push
mov
scas
jae
mov
mov
arpl
cmpsl
rcl
inc
int3
cmpsl
xchg
fadds
mov
loope
loop
out
push
push
add
mov
sahf
xor
loopne
adc
je
adc
cwtl
repnz
sub
inc
xchg
in
cli
loope
lahf
fisubrs
cld
ds
jp
bound
xlat
adc
mov
loopne
insl
xchg
inc
fwait
jp
push
add
push
mul
push
je
mov
pop
xchg
inc
adc
cli
inc
imul
jne
dec
lds
xor
clc
cmc
push
shlb
mov
pop
int
cwtl
add
fisubl
std
push
loopne
test
mov
lods
jne
xor
push
repz
pop
movsl
push
and
xchg
jne
hlt
int3
adc
mov
ret
aas
inc
add
sub
addl
bound
sub
shl
cmp
sti
lea
sub
sub
inc
lods
outsl
fstl
insb
mov
mov
test
and
shlb
mov
test
add
and
movsl
movsb
shrb
insl
mov
out
sub
mov
jne
fidivrl
hlt
shrb
insl
xlat
repz
insl
mov
push
rclb
add
enter
adc
popf
punpckhwd
subl
jo
and
stos
je
xorb
scas
xchg
add
push
cmpsb
int3
add
push
fidivl
test
andl
push
cld
inc
xor
pop
cld
ret
add
repnz
dec
outsb
cmp
pop
lock
push
jmp
dec
push
fdivrp
xor
pop
mov
xchg
cmp
cmpsb
mov
lcall
cmpsl
movsl
jl
das
mov
sub
int
or
lret
and
outsb
arpl
mov
add
jnp
inc
push
sti
jne
or
inc
leave
aas
test
or
insb
rcl
push
sub
jmp
mov
lock
push
adc
lock
xor
imul
sti
insb
inc
scas
push
jle
movsb
adc
pop
sbb
inc
mov
adc
mov
das
mov
pop
fs
xor
fdivl
andb
cmpsb
mov
mov
sbb
or
into
in
aas
cwtl
imul
adc
jae
adc
data16
out
mov
jnp
shlb
fiaddl
in
data16
cli
out
test
stos
push
bndldx
sbb
mov
imul
ljmp
incb
in
into
aam
test
inc
dec
fistpll
ret
jnp
ds
fwait
rolb
mov
mov
sub
out
sti
sub
push
push
dec
les
sbb
xchg
sarb
dec
sbbl
sbb
mov
shrl
jbe
mov
arpl
cli
dec
movsb
sub
dec
fldl
xor
cmpl
mov
mov
lahf
or
sarb
mov
jle
out
cmc
inc
lea
sub
pop
shlb
aad
push
sub
test
jne
mov
mov
sbb
data16
in
pusha
mov
mov
in
or
cmp
sti
cltd
pop
push
pop
ljmp
in
adcl
xchg
mov
adc
popa
adc
and
test
test
sub
mov
in
mov
cmp
pop
les
inc
loop
mov
in
dec
pop
mov
mov
loop
sbb
ljmp
lcall
test
outsb
sbb
and
stc
icebp
push
scas
test
fadds
or
and
in
jmp
xchg
sbb
sub
and
loopne
data16
or
mov
xchg
mov
arpl
fwait
inc
mov
insb
call
adcb
mov
inc
lods
pop
fisubs
or
rcl
mov
sub
std
lea
add
pop
scas
add
popa
mov
iret
fcoms
rolb
sub
pop
in
inc
adc
jge
or
outsb
lods
negb
pop
sub
xor
jae
pop
mov
sbb
sub
mulb
or
jnp
and
movsl
fdivrs
repz
movsl
mov
jno
test
add
sub
and
out
sub
push
sbb
sbbb
mov
bt
lcall
adc
mov
xchg
jns
clc
sub
mov
sar
dec
addl
push
hlt
in
out
or
cltd
sbb
mov
lock
and
mov
cmpsb
mov
pushf
mov
jp
popa
ljmp
jne
add
add
xor
daa
popl
add
lea
dec
int3
jb
jb
xor
fidivrs
mov
mov
xor
mov
into
pusha
mov
or
lods
inc
xchg
cmpsl
fs
mov
ja
mov
repz
adc
lock
loope
je
stos
adc
sub
inc
sub
cli
stos
shlb
jecxz
insb
xchg
cs
test
cmpb
jecxz
mov
divb
push
jp
and
and
jge
add
jle
lods
fsubrs
and
fsubr
dec
jno
jmp
xchg
scas
stos
rcl
cmp
mov
jno
xchg
je
push
inc
shrb
addr16
outsb
int3
lea
pop
imul
inc
xchg
push
add
ret
fwait
mov
cmpsb
pop
jecxz
add
jno,pt
jmp
mov
add
neg
insb
xor
jno
dec
in
into
pop
xor
ret
enter
inc
lret
push
inc
out
ljmp
or
inc
repz
shll
sahf
loop
stos
ljmp
ret
roll
lock
aaa
pop
fcoms
into
insb
mov
test
jmp
into
je
push
mov
popf
rcr
mov
ret
xor
nop
push
and
ds
mov
jno
jl
inc
movsl
ret
mov
fstpt
test
mov
and
div
mov
fisubrs
outsb
ja
jle
mov
push
gs
pop
mov
out
daa
jae
mov
push
stos
mov
out
jnp
pusha
pop
ret
std
out
jle
cwtl
and
mov
push
test
fs
mov
dec
inc
out
adc
inc
loopne
cmp
mov
idiv
add
outsb
fwait
ret
jge
lods
mov
int3
lret
jne
rorb
push
repz
call
sti
loopne
mulb
cmp
sbb
mov
test
ret
push
jle
cmp
mov
xorb
rcrl
adc
mov
pop
sub
popa
leave
adc
cli
bound
push
shlb
xor
xchg
cmp
xchg
insl
pop
ja
xor
xchg
pop
sub
arpl
mov
in
insb
cmpl
mov
jae
loop
ljmp
cmp
jns
sub
gs
mov
test
add
adc
and
mov
out
pop
lea
jge
lock
insl
sbb
jnp
ss
ja
mov
lods
adc
xor
and
outsb
sbb
or
xchg
mov
jmp
push
mov
out
out
ss
ds
mov
imul
shlb
fistpl
dec
and
mov
cmp
movsl
mov
push
or
movsl
push
jmp
inc
mov
fldcw
mov
adcl
ret
fs
aad
lods
cmp
mov
testl
bound
cli
movsb
push
push
mov
cmp
adc
stos
jae
jno
dec
xchg
mov
or
fiadds
aas
or
hlt
adc
mov
mov
movsl
mov
adc
inc
mov
or
and
pushf
push
fwait
inc
sub
inc
cmp
or
pop
faddl
dec
out
jl
in
nop
pand
sub
fnsave
xlat
bound
xor
cmpsb
xchg
das
incl
mov
xlat
push
js
pop
inc
hlt
test
push
xlat
repnz
out
add
or
adc
or
mov
clc
pop
clc
div
and
or
mov
nop
pusha
mov
lcall
mov
mov
test
mov
mov
adc
in
or
mov
lcall
ss
outsb
mulb
insb
mov
movb
fmuls
popa
cmc
out
xchg
aaa
rorl
add
fs
sbb
in
lea
sbb
mov
xor
add
rcl
int3
test
xlat
dec
sarl
and
or
jg
fimull
push
in
mov
cmp
lret
inc
lcall
icebp
mov
xor
int3
pop
jle
inc
adc
jmp
push
cmp
pop
imul
mov
pop
incl
popa
call
push
dec
js
and
cmp
jns
dec
and
ret
test
ds
aam
repz
pop
cmp
jl
sti
jne
and
inc
cmp
mov
loop
fs
lcall
mov
lock
or
mov
xor
mov
dec
add
lods
enter
or
cmc
or
mov
inc
ret
mov
inc
push
lea
pop
int
xor
add
mov
cs
test
dec
cmp
push
push
pusha
test
in
sub
mov
pop
ss
xchg
xchg
je
ret
sbb
pop
ret
mov
mov
jae
clc
in
adc
movsl
rorl
test
test
fldl
mov
repz
pop
lret
mov
and
std
test
add
mov
and
mov
xlat
cmp
std
cmpsl
fidivs
mov
sti
call
inc
sub
std
mov
test
mov
enter
cmp
in
fwait
or
push
jmp
jbe
lcall
pop
cmp
mov
scas
std
bnd
and
or
and
stos
movl
or
push
rolb
cld
add
fsubs
shlb
and
movsb
fsubs
xchg
xorb
cmp
xor
int
inc
xchg
call
and
jnp
inc
cwtl
mov
in
insl
mov
rcrb
repz
movsl
sub
pop
fs
shl
or
popf
jno
cld
cli
sub
into
xor
inc
push
ret
bound
jbe
pop
cmpsl
mov
mov
xor
add
sbb
add
mov
mov
cld
ljmp
stos
jb
or
daa
shrl
push
and
mov
inc
stos
dec
cmpb
rcrl
sub
adc
sbb
negl
pop
pop
subl
dec
loop
mov
inc
sub
daa
cmp
mov
cmp
jge
lea
lods
jmp
add
iret
jo
in
inc
insb
pop
and
cli
fcomip
int
pop
inc
je
hlt
push
sub
ret
popa
ret
nop
loope
test
outsb
sbb
push
scas
imul
cli
lock
mov
std
and
dec
fwait
cmpsl
and
xor
jecxz
shl
sti
mov
pop
lea
adc
xor
add
add
push
lret
test
xchg
cmp
adc
in
sub
mov
jns
mov
xor
cld
cld
sub
mov
push
nop
clc
lcall
stos
idivl
and
in
pusha
mov
ret
push
testl
lahf
xchg
mov
cmp
cwtl
add
scas
loope
fldt
pop
into
sbb
add
mov
inc
in
mov
inc
ss
adc
push
jge
add
std
call
adc
pop
pop
aas
push
mov
movsl
mov
add
pop
fmull
test
pop
std
add
test
sub
mov
mov
sbb
mov
loop
movsb
add
faddp
add
mov
stos
es
mov
rolb
jae
dec
xorb
xchg
inc
sahf
movsb
pop
aam
clc
fcomip
add
and
jg
pusha
cmp
cmp
cmc
add
xor
mov
xchg
and
movsb
nop
mov
or
cld
pushf
pop
in
repnz
fisubs
pop
xchg
cli
hlt
xor
lods
add
dec
test
cwtl
cld
mov
add
rorl
mov
xchg
jcxz
mov
cld
fisubs
fdivrs
movsl
movb
sarb
push
mov
xchg
out
mov
add
mov
out
inc
push
je
insl
cmp
xchg
in
or
and
jbe
jbe
or
nop
int
jge
adc
test
inc
cmpl
ret
jl
aam
clc
mov
lods
shll
cli
mov
jb
sbb
test
adc
mov
loop
loopne
xchg
xor
cmp
jo
push
pop
cmp
mov
or
ror
jmp
fs
ja
sbb
or
repz
mov
cs
movsb
mov
pop
not
lcall
inc
push
push
jae
mov
movsl
daa
repz
xchg
add
or
andl
js
stc
int3
mov
aad
cmpsl
mov
js
sti
test
imul
mov
shr
lcall
add
lea
loop
add
xor
aas
aaa
pop
ret
pop
or
cmpsl
xchg
insl
pop
mov
lret
rep
add
outsl
movsb
jb
mov
mov
in
in
out
push
cmp
pop
push
or
and
or
and
jle
dec
pusha
mov
push
fisubl
xor
inc
pop
add
mov
lods
cmp
mov
inc
mov
imul
clc
xor
or
aaa
jp
xchg
lcall
jbe
loop
scas
aad
ljmp
or
and
xlat
fdivrp
pop
mov
add
and
imul
inc
inc
sbb
push
test
int3
stos
lock
mov
adc
jg
jecxz
mov
test
hlt
setg
out
mov
ret
hlt
movsb
sbb
xchg
mov
adc
push
lahf
ror
mov
stc
std
lods
lahf
negb
sahf
in
call
or
loopne
repnz
addr16
test
push
ljmp
gs
xlat
sub
das
aad
fisttpll
mov
aam
daa
jmp
mov
jne
mov
xchg
cmp
ja
cwtl
fs
jnp
shrl
mov
push
call
xchg
inc
lret
mov
insb
inc
movsb
xchg
mov
prefetchw
loopne
dec
dec
pushf
and
xor
mov
mov
fwait
xchg
ret
into
hlt
hlt
repnz
ficompl
sbb
or
xlat
lods
adcl
movsl
jp
inc
std
pop
sti
faddp
ljmp
in
je
imul
dec
sahf
aam
mov
sub
fdivrs
fadd
rorl
loope
sbb
incb
cwtl
cmp
and
push
jmp
adc
lcall
xor
mov
sub
jmp
imul
dec
sbb
int3
int
popa
hlt
xor
xchg
and
push
daa
lret
into
adc
js
pop
out
hlt
mov
dec
test
push
lea
pop
jle,pt
jbe
or
dec
in
dec
lods
jge
mov
add
inc
pop
cmc
mov
mov
mov
sbb
test
sti
in
sub
dec
icebp
dec
lock
popa
fisubrs
xchg
pusha
push
and
lcall
or
test
fs
dec
xor
dec
jg
jg
pop
mov
fisubrs
xor
lahf
mov
int
movsb
pop
arpl
dec
dec
pop
mov
in
cs
pop
aaa
adc
add
outsb
int3
sbb
repnz
xchg
sub
xchg
les
and
dec
aas
loop
add
jle
stos
jmp
insl
mov
jb
jp
xchg
pop
and
fstpt
xor
movsl
sub
test
icebp
lods
pop
subb
jae
add
rcrl
movsb
scas
add
pop
mov
dec
push
popa
mov
in
fdivrl
leave
adc
movsb
ret
jo
add
fdivs
loope
cmp
lock
mov
jecxz
movsl
mov
dec
pusha
in
enter
or
xchg
add
insb
cld
test
jecxz
pop
ret
shrb
aam
mov
pusha
add
hlt
cmp
xchg
test
lock
imulb
mov
xor
or
inc
cmpsb
rcl
clc
jl
and
ret
jnp
popa
or
add
dec
cwtl
pop
mov
scas
jmp
scas
xor
mov
mov
insl
into
fidivrl
js
jbe
outsb
loop
pop
mov
inc
ret
test
and
call
subb
hlt
fwait
jae
in
add
cmpsb
les
mov
jp
in
sub
mov
pushf
in
call
adcb
adc
out
inc
push
mov
mov
or
or
push
loopne
jae
aas
pop
add
cmp
mov
dec
sbb
lahf
popa
jl
pop
ret
jp
xor
clc
or
mov
sub
add
or
inc
jnp
mov
hlt
mov
gs
fwait
dec
aad
rcrb
mov
roll
lahf
mov
mov
int3
test
out
scas
test
mov
push
mulb
inc
inc
sbb
or
add
mov
xlat
pop
ds
lcall
shrb
or
fisttpl
psubusb
mov
popf
push
lret
test
subb
and
leave
push
repz
and
aaa
mov
shl
jge
test
and
and
imul
pop
mov
ret
jge
pop
fmull
imul
add
aas
ret
enter
dec
out
mov
and
loope
lahf
out
ret
add
loop
push
add
dec
test
ret
adc
in
mov
cld
out
add
add
mov
std
cmc
lods
mov
movsb
dec
jnp
insb
ret
movsb
mov
xor
pop
sti
mov
push
je
mov
xlat
mov
lret
jg
outsl
add
mov
mov
adc
push
sub
xor
mov
out
ret
sbb
testb
dec
clc
shlb
jecxz
and
adc
rorb
cmp
in
clc
out
in
adc
inc
movsl
pop
out
jae
fwait
mov
cmp
xor
call
mov
and
out
push
les
scas
fsubl
xor
push
jecxz
fidivrs
jecxz
lahf
push
push
adc
fsincos
xor
lods
jne
pop
imul
mov
scas
ret
pop
mov
jecxz
addl
rclb
mov
shlb
insl
sub
cmpsl
cmc
fdivrl
ret
aas
clc
frstor
imul
test
aad
icebp
xlat
xchg
scas
shl
fldcw
iret
aam
hlt
pop
in
adc
cs
push
mov
imul
and
jle
in
mov
cmpsl
add
inc
lret
jae
jl
mov
ljmp
in
or
add
xchg
stos
ret
jecxz
cmp
lods
sbb
push
jecxz
pop
outsl
movsb
in
in
movsb
int
sbb
mov
cmp
cmpsb
xorb
aaa
outsl
sahf
loop
fs
adc
pop
sbb
pusha
cmp
push
add
xchg
outsb
mov
cmp
sbb
mov
mov
loopne
push
jmp
add
sbb
ud0
lahf
mov
cwtl
loope
fs
cmc
pop
aam
xchg
lock
mov
pop
and
or
dec
sbb
je,pn
jl
cmp
in
int
int3
cltd
aas
hlt
add
xorb
or
lret
inc
cmp
ror
lret
dec
jecxz
cmp
insb
lods
rcrb
adc
das
fmulp
mov
cwtl
jge
sti
jg
sbb
lods
xor
jg
jp
mov
fildll
clc
cld
pop
fildll
sti
es
in
std
jecxz
scas
pusha
and
mov
jne
icebp
in
popa
jae
in
js
or
frndint
fiaddl
mov
hlt
dec
add
add
mov
adc
cmp
jmp
clc
mov
pop
filds
xchg
pop
cld
inc
sbb
mov
fdivs
lods
hlt
sub
lods
jle
xor
mov
pop
mov
ds
inc
movsb
push
clc
int
mov
push
leave
cltd
sub
test
push
add
adc
cwtl
lret
xor
add
clc
pop
test
jno
pop
loop
popf
aas
rcr
jne
push
ret
adc
andl
clc
outsb
mov
mov
shll
xchg
sbb
mov
jbe
inc
cwtl
and
aas
pushf
dec
jo
pop
mov
mov
repnz
inc
mov
mov
cwtl
fs
pop
sub
push
imul
mov
mov
push
repnz
inc
in
dec
add
in
xchg
jbe
jge
test
lock
fisubl
mov
fsubs
pop
sbb
inc
sub
mov
aam
imul
mov
or
scas
testb
jecxz
in
push
mov
int3
inc
and
fdivs
dec
cmp
xchg
xchg
and
xchg
mov
pop
sti
add
out
or
lds
cli
jbe
cld
cld
subl
je
dec
out
lret
movsb
les
sub
mov
ds
rolb
and
cmc
add
add
jmp
push
minps
popa
mov
push
mov
pop
pushf
sub
sbb
adcb
mov
push
popa
movsb
sub
hlt
pop
aam
into
movsl
hlt
notb
movsb
lcall
adc
daa
rolb
jecxz
xor
out
test
mov
les
xor
fcomip
or
fcomip
xor
test
setp
js
sub
mov
jnp
in
aaa
push
in
or
jbe
sub
mov
cmpsl
les
xchg
jbe
mov
add
sbb
or
je
and
frstor
test
inc
xor
mov
test
hlt
add
out
cld
loop
and
clc
jb
inc
clc
mov
pop
vmread
fsubr
into
pop
sti
mov
jecxz
mov
push
mov
cmp
or
bound
jmp
xor
xor
cld
imul
mov
jmp
add
jg
xchg
mov
and
out
sbb
into
std
push
adc
or
push
ret
pop
shrb
lcall
adc
popf
repnz
out
inc
stos
pusha
pop
int
icebp
xchg
fmull
xchg
adc
popf
push
or
jl
adc
mov
cmc
aas
mov
mov
and
cld
and
push
or
mov
fdivrs
mov
scas
jl
jmp
cmpsb
ret
jl
sti
insb
pop
add
jmp
call
fwait
decl
arpl
pushf
cmp
xchg
mov
xchg
fistpl
add
sbb
inc
outsb
mov
push
lock
int3
sbb
add
mov
enter
daa
pop
cmp
call
fdivl
inc
negb
xor
push
sub
sbb
shrb
nop
push
test
mov
or
test
jmp
jmp
fildl
mov
sti
rorl
mov
mov
xchg
sbb
push
movb
jl
push
jmp
ljmp
ret
jge
iret
cmpsl
mov
ss
mov
movb
add
ftst
aam
scas
mov
xlat
test
aaa
mulb
mov
je
fs
jbe
ret
gs
iret
or
lods
xchg
sbb
aas
adc
imulb
mov
push
sbb
dec
aam
inc
loope
adc
xorb
mov
je
add
popa
xor
stc
dec
or
ljmp
cli
fnstcw
or
and
aam
sub
pop
sbb
lock
add
sar
mov
sbb
stos
inc
mov
and
adc
js
xor
inc
dec
lods
or
mov
inc
dec
repnz
packsswb
dec
jl
insl
stos
mov
call
lret
cwtl
mov
js
jmp
add
push
pop
mov
add
sbb
lods
mov
ffree
pop
shlb
dec
test
mov
bound
mov
repz
dec
mov
popa
mov
das
lcall
add
cwtl
mov
call
sub
fildl
fildll
rcll
insl
lods
jle
jmp
mov
ret
cld
xor
test
jl
out
sbb
xor
dec
out
mov
icebp
dec
mov
in
jg
add
xchg
pop
mov
fucomi
orl
pop
stc
adc
lahf
jl
mov
xor
lahf
rcll
and
je
jecxz
ret
in
mov
pop
repz
adc
je
jecxz
ret
popa
repz
lahf
mov
dec
ret
sbb
repz
mov
and
jo
lahf
repz
push
cmp
fs
jecxz
ret
mov
mov
dec
ret
cmp
repz
mov
inc
ret
xor
lahf
loop
mov
jecxz
loop
repnz
arpl
cmp
xor
inc
loope
push
ret
xchg
lret
daa
mov
scas
sbb
repnz
jmp
cli
popf
pushf
mov
jo
int
xchg
push
inc
pop
cld
fs
push
orl
pushf
fwait
inc
ret
test
jnp
mov
xchg
mov
push
ret
lret
pop
rclb
bound
test
rorl
in
test
fdivr
pop
and
lret
inc
clc
inc
int3
decl
in
dec
gs
mov
add
aad
in
je
andl
mov
fsubr
mov
ficoml
flds
sahf
jno
stos
pop
jecxz
sbb
pop
xor
push
xor
mov
or
push
dec
or
bound
lret
cli
mulb
and
ljmp
andb
adc
imul
jae
mov
loope
idiv
shl
fisubrl
jno
adc
cwtl
les
cmp
jo
push
in
in
aam
dec
mov
xchg
mov
pop
push
dec
inc
cmp
sub
sbb
or
sti
repz
fcmovnbe
lret
ret
mov
xchg
mov
arpl
dec
inc
cmp
sub
sbb
or
je
repnz
mov
stos
mov
jp
push
pop
push
dec
inc
cmp
lret
sub
inc
lods
mov
decb
ror
sarl
xchg
mov
popa
pop
or
sub
in
fmul
add
clc
add
test
mov
mov
lods
xor
hlt
scas
jl
or
and
dec
mov
dec
ret
xchg
adc
add
testl
push
hlt
mov
fwait
dec
aam
mov
push
mov
sahf
enter
cwtl
pushf
mov
les
mov
jo
xchg
mov
mov
jge
lcall
push
and
aam
cli
xchg
add
pop
sbb
mov
adc
imul
mov
popa
mov
pop
mov
cmp
xchg
shl
xchg
stc
push
cmp
fisttpll
mov
mov
sqrtps
inc
es
into
jecxz
jae
adc
adc
adc
sbb
sub
es
xchg
mov
fwait
add
enter
aaa
lcall
shrl
dec
lahf
mov
clc
jge
pop
jno
inc
leave
sbb
mov
xor
out
lods
xor
mov
bound
push
icebp
pop
leave
sti
fnstsw
mov
lahf
out
movsl
mov
xor
mov
pop
xchg
cli
out
sub
mov
pop
cmp
pusha
loope
test
jecxz
inc
ret
sbb
mov
jno
or
mov
mov
lods
arpl
adc
mov
xchg
js
fidivl
cmp
fnstenv
orl
cmpsl
and
sbb
jb
mov
mov
test
fsubs
cmp
rcrl
stc
jp
mov
cli
and
sbb
aam
add
lahf
jae
mov
pop
dec
in
sbb
mov
imul
mov
pop
or
and
scas
ljmp
or
push
push
dec
arpl
repnz
add
cmp
iret
popf
inc
enter
mov
nop
mov
lock
arpl
lahf
add
dec
mov
cmp
shr
stc
fnstsw
stos
inc
jno
pop
pop
sbb
inc
or
jae
fsts
sarb
pop
test
outsb
sbb
push
mov
cmpb
mov
xor
inc
gs
jbe
jns
cmp
cmpsl
dec
cli
push
push
mov
sub
jno
jae
shll
popa
ja
je
pop
pop
fwait
dec
aam
pop
lcall
das
outsb
testl
int
ljmp
push
add
shll
dec
pop
jnp
xchg
shr
subb
jge
rol
scas
and
fdivs
hlt
ffree
fwait
sub
test
sti
loopne
arpl
jb
hlt
mov
lock
jnp
add
hlt
daa
outsl
rcrl
cld
mov
repnz
xor
hlt
loop
mov
hlt
or
aad
hlt
sbb
xor
push
mov
roll
gs
outsl
into
ror
sarb
nop
mov
pop
push
dec
inc
cmp
sub
sbb
or
imul
out
xlat
iret
mov
xchg
popl
pop
push
dec
inc
aas
aaa
das
daa
pop
pop
sysret
push
out
out
into
mov
xchg
mov
pop
push
dec
inc
ds
push
push
push
std
cmc
in
in
aad
lds
xchg
lea
pop
push
dec
inc
cmp
dec
adc
mov
mov
jb
scas
pop
add
mov
jb
mov
lret
xor
js
loope
mov
mov
inc
mov
dec
aam
mov
jge
inc
xchg
hlt
xchg
mov
movsb
mov
push
add
pop
cli
cmp
mov
fsubs
fchs
in
xorl
lock
icebp
aad
sbb
mov
jbe
add
in
test
loop
jns
test
add
and
arpl
xor
int
loop
xadd
fs
rcrb
lcall
push
shl
les
add
lock
add
lret
popa
mov
addr16
dec
push
loope
add
add
lods
mov
cli
jle
and
ss
xor
adc
or
pop
pop
fs
call
stc
leave
xor
loope
push
jb
jae
xchg
loop
mov
lock
pop
adc
fisubrl
mov
pop
sbb
jecxz
bound
xor
test
enter
int3
aas
aam
in
test
popf
sbb
call
test
cli
ret
xor
sbb
je
and
push
xchg
out
xchg
es
inc
sahf
shll
mov
jecxz
lret
cli
mov
inc
fcmovne
cmp
inc
push
add
subl
movsb
rol
aam
loope
jecxz
aam
ret
xor
imul
xchg
mov
push
test
leave
adc
xorl
in
add
ljmp
mov
xlat
dec
addl
fldcw
mov
test
add
mov
mov
dec
add
pop
xchg
neg
stos
add
xchg
int
adcb
jnp
and
cli
test
jnp
movsb
push
inc
ret
test
clc
leave
std
pop
xor
in
dec
not
loop
pusha
adc
nop
addb
ret
adc
lcall
out
adc
dec
dec
or
imul
aad
outsb
bound
xchg
subl
jne
das
daa
mov
imul
pop
jl
test
rep
test
lods
jmp
out
xchg
fisttpl
clc
lret
inc
jo
xor
jle
mov
jmp
loop
and
leave
ljmp
call
cmp
dec
xor
cmp
cmp
mov
movsb
cmp
sub
test
adc
popf
push
movsb
push
mov
adc
pop
lcall
mov
cmc
orl
shlb
sub
push
ljmp
add
mov
fdivs
add
add
inc
lret
mov
aas
out
xor
mov
fwait
outsl
adc
pop
xchg
repnz
push
or
sarb
mov
add
incl
icebp
add
push
add
lret
mov
jmp
inc
mov
pop
jge
add
push
stos
add
lods
je
adc
fimuls
inc
xchg
adc
andb
out
add
inc
sti
xlat
cmp
in
hlt
lret
icebp
stc
out
loop
xlat
popa
popa
imul
mov
add
xchg
pop
xchg
xorb
adc
mov
stc
jno
mov
cmp
adc
insb
sub
dec
push
ss
out
cltd
sub
push
and
lcall
shl
jns
mov
pop
xorb
mov
loope
sbb
hlt
xlat
sti
in
mov
adc
dec
out
sub
push
push
lret
mov
jbe
sarl
rol
test
dec
fiaddl
jg
jle
enter
sub
ljmp
popa
fstpt
xchg
jmp
jle
andb
mov
and
push
in
push
adc
loopne
mov
pop
add
mov
sbb
mov
jbe
jp
test
adc
ss
pusha
lcall
scas
inc
pusha
test
andb
mov
jb
fimuls
and
mov
mov
add
loope
pop
fiadds
cld
sub
scas
adc
adc
stc
dec
scas
movsl
scas
sbb
std
bsf
and
mov
cld
jae
and
xor
hlt
ret
sbb
xor
sub
mov
mov
pop
aad
je
xchg
add
cmp
enter
outsb
jae
arpl
ret
jns
xchg
loope
pop
inc
sbb
and
adc
jmp
test
push
ret
cltd
mov
push
xor
ret
mov
xorl
or
aaa
pop
iret
mov
cli
fdivl
cmp
and
mov
xchg
sub
repnz
sbb
add
divb
mov
ljmp
cli
mov
lods
sub
fdivrl
mov
ljmp
popf
lret
les
add
lahf
inc
jo
inc
scas
pushl
jecxz
mov
xor
push
mov
pop
mov
fsub
addl
lods
enter
je
icebp
or
xorb
cli
add
insb
add
mov
sbbb
push
js
icebp
pop
repnz
push
divb
in
jno
dec
push
lret
negb
lcall
stos
insl
pop
fbld
insb
repnz
sbb
cwtl
push
inc
repnz
cmpl
sub
adc
test
mov
rcll
mov
mov
ja
test
push
fisubrs
in
cmp
ficoml
mov
leave
jmp
pop
push
and
in
mov
les
mov
jbe
mul
test
in
sbb
test
xor
mov
pushw
fdiv
loope
push
mov
push
push
mov
adc
shll
jo
jmp
jecxz
mov
xor
cli
in
and
dec
ja
lahf
mov
mov
add
add
sub
aaa
scas
cmp
ret
test
scas
mov
loop
imul
movsl
dec
sub
pop
ret
mov
in
repz
inc
out
and
js
int3
rep
push
jmp
pusha
mov
mov
and
les
jl
je
in
inc
sti
cmp
test
nop
lret
andb
inc
scas
push
add
cmp
mov
add
and
aad
jae
add
pop
clc
mov
lret
loopne
js
repz
testl
add
inc
jo
ret
insl
add
and
sti
les
sub
call
ret
fimuls
xlat
pop
sti
cld
sbb
xchg
mov
mov
mov
dec
lret
daa
and
xchg
inc
push
enter
cld
cltd
out
or
and
subl
jmp
inc
in
add
push
test
nop
idiv
and
test
cs
test
repz
fbstp
lods
sbbb
hlt
in
add
in
and
lock
inc
iret
push
sti
not
inc
clc
test
std
sbb
cmp
enter
cs
or
push
dec
and
jno
sti
xchg
fnsave
mov
xorb
mov
decl
and
test
std
xor
lock
loop
out
or
test
or
xlat
jecxz
cmp
mov
jnp
add
sbb
clc
addl
popf
inc
ss
jb
pop
mov
add
loope
jl
or
loop
cmp
ret
fs
jge
loop
fidivrs
cmp
loope
xor
mov
shll
sahf
je
jecxz
ret
ret
and
fnsetpm(287
repz
jecxz
repz
cmp
ret
js
repz
scas
jo
lcall
in
outsb
sar
add
mov
repz
fisubl
les
repz
jae
popf
std
mov
mov
repz
loop
pop
mov
mov
repz
pusha
sarb
xorl
mov
cmpl
and
sarl
icebp
xchg
jl
adc
or
data16
sarl
enter
jmp
add
inc
inc
jge
push
bound
and
sub
or
fs
rorb
arpl
cmpsb
mov
dec
push
mov
jl
cmpl
xor
cmp
dec
js
repz
loop
insl
mov
lcall
imul
rep
fiaddl
xor
clc
mul
inc
les
ss
add
add
repnz
ret
inc
and
mov
jecxz
je
les
push
inc
push
addb
in
mov
nop
arpl
mov
xchg
sahf
mov
out
xchg
std
add
adc
push
subl
sbb
mov
movsl
call
pop
ljmp
adc
xor
and
je
xchg
aaa
adc
and
xchg
xor
mov
std
mov
lret
mov
test
inc
mov
push
nop
push
xor
adc
push
in
insl
mov
roll
cmp
fisubs
sub
gs
xor
xor
xchg
fstps
cld
popl
cmp
out
pushf
pop
dec
movsb
and
clc
sar
push
mov
lcall
cmp
pop
aas
outsl
adc
sbb
or
test
jo
add
testl
stc
xchg
jbe
test
add
fistpl
mov
scas
pop
cmp
out
mov
mov
add
hlt
jb
pop
fbld
add
and
mov
out
mov
cmp
push
mov
cwtl
dec
xchg
je
push
std
out
mov
inc
dec
inc
jbe
cmp
loopne
sub
lahf
lea
mov
dec
adc
movsl
imul
repnz
push
mov
dec
adc
jl
dec
sahf
cmpsl
fldl
mov
fimuls
pusha
pop
int
in
ljmp
pop
or
xchg
mov
xchg
push
leave
das
pusha
cmp
ficoml
add
jmp
in
pop
or
test
sbb
pop
cmp
adc
mov
je
or
inc
lea
jo
pop
and
xlat
mov
test
or
neg
pop
loope
sarb
pop
adc
sub
sahf
jmp
in
dec
call
inc
sub
jmp
lahf
and
sti
mov
dec
aas
std
adc
rolb
ja
mov
dec
loopne
repnz
dec
cmp
es
xor
imul
jmp
jae
mov
iret
enter
cs
lock
out
push
jae
shrl
jb
loop
inc
std
jmp
fwait
push
arpl
test
push
out
sbb
and
decb
and
sub
inc
int3
xchg
stos
fyl2x
adc
pusha
sbbl
and
or
push
iret
ds
mov
add
stos
idiv
testl
push
roll
hlt
addb
imul
xor
lods
and
pop
jp
cmpsl
xchg
std
sbb
pop
push
jno
xor
rol
popa
fwait
push
xchg
aad
mov
in
xchg
push
jnp
add
arpl
sub
jnp
fdivr
sarl
cmpl
inc
mov
xchg
and
outsl
xchg
imul
imul
jle
fadds
cmp
test
aas
test
push
mulb
testl
push
jne
add
cwtl
aam
add
enter
test
mov
sti
nop
sar
mov
mov
mov
arpl
lahf
notl
orb
loop
cli
or
xor
mov
orl
nop
pop
xchg
mov
jnp
push
test
adc
mov
pop
jns
inc
sbb
ds
cmp
adc
xchg
xor
dec
pop
mov
nop
clc
cld
push
xchg
xchg
add
and
push
jo
and
inc
stos
mov
mov
adc
jl
fwait
or
fnstcw
or
loopne
and
add
fistps
mov
or
aas
or
or
or
or
or
or
or
or
or
xchg
fsubrl
mov
jl
sbb
jecxz
mov
xchg
clc
xchg
xchg
or
cmpsb
xchg
xchg
push
xor
dec
xchg
adc
or
xchg
iret
nop
xchg
xchg
push
loopne
hlt
cmpl
add
jnp
aad
dec
dec
cmp
and
arpl
pop
ja
dec
sub
and
movsb
push
fs
xor
add
ja
xchg
xchg
out
dec
fldcw
out
addr16
movb
cmp
inc
pushf
push
repz
data16
xor
mov
xor
gs
gs
gs
mov
fbld
jmp
gs
gs
fnsave
popf
mov
dec
popa
push
push
inc
mov
sbb
or
pop
ds
addl
stc
or
add
xor
sbb
loope
dec
and
and
insb
or
lret
sub
ror
and
lahf
ss
cmc
lea
push
test
or
adc
nop
or
int3
pop
jnp
lret
push
lret
stos
push
imul
ja
into
sbb
jo
int3
das
push
inc
lret
adc
or
mov
sub
add
fidivrl
inc
loop
jecxz
xor
ss
inc
mov
jne
xor
and
lods
jae
insb
popa
push
sbb
xor
and
and
imul
imul
or
in
inc
pop
in
sbb
sub
ja
orb
dec
popf
mov
pop
inc
cmp
mov
mov
ljmp
cmp
jge
sub
popa
repz
cmp
outsb
adc
adc
adc
adc
adc
in
mov
push
mov
insb
sbb
adc
or
or
and
jmp
or
adc
testb
or
lahf
xchg
sbb
adc
int3
rclb
mov
addr16
jle
or
mov
sbb
cmp
imul
mov
sbb
scas
sbb
std
sbb
adcl
call
cld
js
aam
lods
arpl
jge
orb
ret
sbb
sub
inc
sbb
cmp
es
xor
sub
mov
mov
or
xor
and
mov
or
xor
pop
xchg
sub
jmp
push
nop
cli
xchg
mov
add
sub
dec
xchg
xchg
out
arpl
push
push
out
data16
fistpl
fnsave
mov
test
es
cmp
ret
pop
dec
jle
ds
push
xchg
mov
push
push
in
insl
lods
out
test
sub
cmpsl
dec
daa
iret
cmpsb
cmpsl
cs
roll
jno
popa
inc
push
add
mov
mov
rcll
rorb
mov
xchg
jb
nop
stos
mov
mov
leave
or
leave
data16
or
insl
jle
inc
sbb
jo
xor
notl
jle
inc
adc
and
adc
or
repnz
or
or
or
pop
enter
stos
outsb
cmp
jnp
testl
pop
lret
xor
mov
xchg
or
and
out
addr16
enter
insl
out
inc
push
addr16
data16
push
mov
nop
mov
or
push
ret
pop
adc
bts
jbe
ss
xor
out
dec
fistl
jae
fnstsw
mov
imul
push
addr16
out
scas
in
gs
gs
jo
xor
call
push
pop
sbb
mov
out
mov
lret
inc
jbe
or
inc
push
xor
xor
sbb
adc
or
or
fcomps
inc
adc
adc
or
pop
shrl
ud2
fimuls
mov
xchg
push
or
dec
xchg
loopne
mov
popa
sbb
gs
insl
cmp
insb
mov
in
out
movsb
mov
xor
shll
cmp
xor
sbb
jae
imul
mov
and
sbb
sbb
jo
xchg
or
or
faddl
cmp
and
sbb
sbb
sbb
adc
adc
stos
or
or
or
or
or
or
or
or
or
mov
movsl
xchg
aam
bound
fwait
or
je
mov
jmp
icebp
jge
mov
mov
cmpsb
push
jne
stos
imul
push
loop
push
rorb
mov
jecxz
sbb
dec
add
sub
jg
jge
loope
adcb
cmpsb
adc
enter
lret
pop
cli
xorl
jno
and
and
sbb
mov
popa
cmp
xchg
adc
and
xorl
and
jnp
sbb
in
jae
mov
enter
imul
jbe
mulb
mov
jbe
ss
push
mov
popa
adc
mov
fildl
outsl
jle
sub
jb
mov
pop
rcrb
out
adc
clc
loopne
inc
loop
mov
iret
pop
scas
cmp
inc
cmp
js
das
sub
ret
mov
nop
cmp
rorb
out
sub
jo
mov
jno
dec
mov
jne
xor
cld
and
popa
xor
inc
dec
dec
push
add
mov
pop
and
inc
jnp
push
sbb
fucom
mov
xchg
xor
mov
loop
idivb
inc
jno
mov
cmp
mov
xor
mov
lret
jecxz
orl
sbb
pop
orb
pop
jle
pop
jg
jno
mov
xor
sarl
cltd
int3
aam
sub
shlb
out
addr16
out
jle
pop
push
ffree
das
repz
dec
jecxz
xor
and
in
repnz
in
xchg
std
hlt
cld
cld
addb
ss
inc
mov
gs
jnp
mov
jbe
ss
inc
ret
or
or
or
or
jecxz
lock
enter
lret
and
call
cmpb
cmp
xor
and
jecxz
ret
or
int3
repnz
rol
lds
lds
jge
mov
jge
pop
cmp
xorb
mov
inc
pop
mov
sbb
std
sbb
in
das
mov
push
add
mov
inc
into
mov
jne
cmp
cmp
jno
cmp
lods
sbb
das
jecxz
leave
sti
jnp
dec
cmpsb
sub
repnz
sbb
lea
pop
mov
or
or
or
or
adc
lock
insl
and
jge
ds
insb
pop
subl
jge
push
int3
xchg
dec
ds
cmc
ljmp
jmp
push
notb
loopne
inc
adc
outsb
aad
addl
mov
xchg
jae
xchg
imul
cli
imul
out
jne
or
int3
push
dec
fwait
lret
xchg
push
jge
fdivs
popa
sahf
mov
add
or
enter
out
mov
lds
ficomps
popa
or
xorl
lock
jnp
inc
sub
sbb
jae
inc
add
add
loope
shl
jo
jg
jno
mov
popf
jno
popa
mov
bound
xor
popa
xchg
adc
pop
or
jo
mov
xchg
add
popa
stos
sbb
jle
shlb
popf
cmpb
cmpb
sbb
sarb
pop
aas
lds
cmp
sti
xor
ss
cmc
inc
rcl
inc
xor
cmpb
inc
xor
cmp
arpl
add
inc
cmp
ret
xor
popf
inc
and
lds
inc
jge
fistps
or
or
pop
call
ficomps
std
sahf
gs
gs
frstor
insl
pop
jle
and
and
jecxz
mov
loop
mov
loope
mov
xor
jg
push
pusha
ret
xchg
xchg
xchg
aas
xchg
xchg
mov
cli
and
fstpt
jnp
mov
xor
sbb
sti
shlb
ss
fs
jne
xor
push
mov
sbb
sbbb
add
or
aas
push
cld
or
mov
les
add
pushf
mov
fs
fwait
sbb
shll
xchg
loope
daa
push
push
hlt
jae
sub
mov
sbb
fwait
daa
in
fwait
or
jle
sbb
cmpl
loop
jae
xchg
sub
pop
adc
rcr
xor
jmp
pop
cmpsb
mov
push
in
scas
notl
inc
xlat
aas
dec
inc
pop
or
addr16
out
outsl
das
into
add
icebp
add
loop
aas
ret
xchg
adc
out
lds
and
pop
push
pop
inc
xchg
out
pop
bound
inc
fldl
inc
daa
insl
ja
pop
xchg
adc
xor
hlt
movsl
xchg
pop
ds
and
adc
and
add
in
shll
sbb
std
je
inc
andl
es
pop
mov
or
mov
xchg
sarl
hlt
ljmp
rclb
jnp
push
imul
jno
push
dec
jne
lret
ds
xor
cmp
add
adc
scas
test
push
mov
sub
jmp
pop
sbb
clc
mov
and
sub
push
sbb
into
push
mov
leave
stos
or
gs
test
cmc
fstps
fdivs
dec
add
loope
imul
xchg
idivl
hlt
popa
xchg
add
or
jb
mov
ljmp
rol
mov
lds
pop
ret
cltd
in
insl
add
imul
mov
outsb
rcr
ret
sub
jb
and
mov
imul
mov
dec
sub
aaa
js
in
jp
xor
mov
add
and
cmp
jno
xor
adc
cmp
mov
fwait
xchg
psubd
repz
in
imul
insb
ficompl
popa
mov
adc
and
lcall
repnz
mov
sub
repnz
das
cmp
xor
mov
and
lea
sub
lcall
mov
imul
and
sub
push
mov
sbb
pop
xchg
rorl
cmp
mov
jmp
arpl
jnp
sub
mov
xchg
jnp
jp
jns
repnz
loope
imul
mov
fs
inc
pusha
in
les
and
pop
push
or
leave
add
ret
adc
inc
cltd
ficoms
xor
andb
dec
rorl
pop
cli
pop
insl
rol
pusha
xchg
xchg
cmp
jbe
int3
mov
nop
shll
cmp
sbb
mov
cmp
jb
divl
jbe
shll
xor
bound
fstpt
adc
add
shl
adc
in
fwait
mov
or
sub
xor
fs
xchg
push
push
jnp
mov
ljmp
jnp
inc
lods
ljmp
scas
jae
movsb
mov
lcall
jecxz
mov
jae
decl
stc
jecxz
cmp
call
imul
roll
jb
out
mov
arpl
aam
rcrl
mov
mov
inc
sbb
cmp
and
arpl
imul
iret
fisubrl
or
mov
sbb
dec
fimull
ds
orb
sub
outsl
fnstsw
mov
inc
sub
lret
loope
popa
inc
icebp
push
adc
inc
add
mov
sbbb
stos
jbe
jo
push
andl
dec
loope
imul
push
shl
and
lret
sub
push
jns
jp
jae
enter
test
mov
jo
pusha
mov
xor
jg
mov
ja
hlt
mov
sbb
xor
jae
mov
xchg
std
or
mov
mov
push
cli
mov
push
jns
test
pop
jno
cmc
inc
stos
sbb
jmp
arpl
cwtl
mov
xchg
icebp
jo
or
jns
rorb
fs
mov
dec
jl
inc
mov
ret
pop
icebp
mov
sbb
mov
jae
jns
xor
test
out
rorb
fisubs
jp
inc
pop
jne
pusha
mov
outsl
ret
aas
adc
lock
loope
or
ret
leave
rcrl
cli
cmp
popa
adc
jge
mov
imul
cmpsb
xchg
xchg
ljmp
jnp
push
mov
cmp
xor
jb
adc
loop
xchg
adc
pop
shlb
fidivrl
xchg
aas
shr
sub
mov
inc
adc
cmp
mov
push
pop
lahf
and
stos
mov
mov
jecxz
loop
fstpl
add
dec
shll
stos
mov
xor
mov
jl
jb
adc
sub
xchg
cmp
nop
mov
sbb
and
inc
cld
add
rorl
fidivl
sub
cltd
cli
imul
cmovbe
and
adc
xchg
fwait
fwait
imulb
add
push
imul
hlt
cli
add
mov
xor
jbe
fnsaves
pop
jnp
arpl
mov
mov
fs
mov
adc
push
xor
xor
leave
pop
jne
pop
xor
jae
adc
sbb
push
inc
adc
cmp
pcmpeqd
and
pop
aas
xorl
jmp
mov
cmp
jae
sub
push
xor
xor
cltd
xor
and
outsb
xchg
fcomps
std
cmp
add
jnp
das
cmp
scas
push
in
out
outsl
and
fs
mov
push
mov
lret
and
pop
imulb
dec
mov
cltd
push
xlat
and
add
or
jnp
xchg
pop
out
mov
sbb
clc
xor
jnp
icebp
repz
push
jb
fistpll
inc
adcl
mov
cltd
pop
pop
sbb
cmc
cs
or
mov
cmp
hlt
aad
pop
out
mov
xor
xor
jge
popa
rcl
push
mov
adc
adc
cmp
xchg
subb
lret
inc
arpl
jecxz
int3
test
ljmp
mov
andb
push
xor
sbb
xchg
jb
and
mov
jp
jecxz
add
mov
jecxz
fcomps
aas
mov
pop
mov
jmp
ret
xor
mov
pop
mov
fcmovb
add
movsl
fbld
push
aam
inc
jae
jle
mov
mov
rcll
add
mov
pushw
pop
mov
mov
add
das
subl
inc
jg
dec
lea
popa
inc
jbe
mov
insb
je
and
mov
adc
in
insb
mov
lcall
sbb
xchg
pop
pop
pop
jp
and
ss
fwait
mov
inc
mov
loope
mov
add
sbbb
js
pop
aaa
jns
sbb
pop
iret
sbbb
xor
xor
xchg
fistl
cli
stos
fistl
adc
mov
sub
and
hlt
fisubl
cwtl
jnp
movl
imul
pushf
fs
ret
jo
ret
stc
sub
sbbl
rol
push
sar
lea
sub
push
or
mov
loope
jb
mov
stc
dec
arpl
mov
mov
xchg
push
test
dec
push
mov
icebp
or
push
push
push
dec
stos
scas
inc
xchg
sub
jle
mov
jmp
pop
fnsave
jb
adc
jecxz
cmp
xor
testl
sub
push
mov
fwait
ljmp
mov
jno
sub
shll
jae
sub
push
inc
mov
js
mov
lret
fistl
sub
jmp
ja
ret
mov
outsb
mov
push
mov
and
jno
aad
insb
cwtl
xchg
cwtl
and
xor
mov
mov
dec
stos
lret
scas
and
and
inc
xlat
into
and
push
mov
ficoml
mov
clc
fucomi
push
lfs
aam
cli
sbb
cmp
xchg
fs
mov
pop
ret
movsl
repnz
cmp
inc
outsb
dec
subl
adc
movsl
jno
inc
addr16
cmp
push
and
xor
fbld
push
add
repz
push
in
enter
daa
cmpsl
in
and
out
push
ss
pop
cmp
arpl
mov
cli
jb
insl
and
cmp
je
repnz
mov
add
cltd
cmp
arpl
pop
pop
mov
jb
fmull
ret
inc
fldl2t
sbb
mov
ja
test
in
lret
fbstp
pandn
rclb
repz
inc
mov
dec
sti
stc
fnstcw
loop
push
cmc
xchg
dec
and
xor
addl
bound
pushf
sbb
imul
jnp
sbb
sbb
nopl
arpl
das
push
inc
or
and
mov
jo
cmp
xchg
in
jo
push
sub
dec
popa
mov
mov
ret
stos
jnp
xchg
mov
ret
jo
dec
in
jno
xchg
rol
hlt
mov
loope
fnstcw
js
pop
mov
ljmp
jmp
adc
iret
or
or
cli
sub
sub
lret
loopnew
lock
mov
sti
mov
and
gs
jmp
jnp
inc
adc
add
lods
stos
imul
push
cwtl
je
pop
dec
aas
psllq
mov
out
fwait
stos
pop
push
push
jno
outsl
fnstsw
add
jnp
cmp
insb
fsubp
cld
cmp
jecxz
pop
int
sub
and
shrb
sub
xor
pop
pop
jae
mov
sbbl
stos
jge
call
push
pop
pop
les
and
imul
push
and
jo
mov
fisttpl
rcll
mov
dec
nop
cmp
sti
arpl
add
jne
dec
fwait
loop
pop
sub
push
mov
xchg
je
popa
xchg
iret
icebp
push
xchg
dec
xacquire
repz
ljmp
cs
je
pop
sbb
push
lret
sbb
test
ret
aam
xchg
push
mov
jne
pop
mov
inc
pop
pop
push
jo
mov
xor
jecxz
insb
arpl
push
pop
xchg
pop
mov
jno
push
jg
mov
scas
pop
enter
arpl
mov
jno
fisubrs
and
mov
clc
in
enter
mov
sbb
rol
cmp
push
mov
jns
and
arpl
mov
mulb
cmp
or
ss
lea
test
into
dec
jo
testb
sub
pop
cwtl
push
pop
jno
test
popa
push
mov
pop
adc
fnstsw
jae
sbb
arpl
rorb
mov
sub
shrl
dec
inc
pop
fwait
test
clc
cltd
cli
sbb
aam
and
xchg
aad
out
out
pop
das
push
faddl
xchg
or
mov
or
pop
mov
and
push
sbb
and
inc
or
ud1
dec
icebp
iret
push
xor
fs
pop
sub
les
sub
mov
int3
mov
mov
sbb
cmpsb
push
in
lods
jbe
bound
fstps
lea
mov
lods
jne
cltd
mov
sbb
test
and
jae
xor
push
jb
in
dec
mov
aad
dec
push
cmp
icebp
mov
push
push
push
sub
sbb
movsl
pop
addb
push
or
jb
inc
cmp
sub
imul
outsb
popa
ret
jno
popa
push
pusha
arpl
push
xchg
and
call
adc
popf
cmp
jmp
loope
subl
sub
pop
rorb
jns
and
mov
daa
xor
or
or
pushf
push
mov
or
pop
bound
loope
xchg
mov
dec
cmp
push
push
bound
inc
sub
shlb
cmp
fstl
sub
xchg
dec
in
sub
in
sub
and
ljmp
js
pop
movsb
xor
and
mov
mov
push
xchg
mov
pop
inc
mov
add
cbtw
aas
movl
hlt
mov
push
fisubs
out
push
adc
jo
rorb
cmp
jle
test
imul
test
add
sub
sbbb
sbb
adc
jp,pn
inc
ljmp
sub
mov
inc
addr16
das
ret
and
pop
stos
push
rcrb
imul
movsl
dec
push
outsl
add
mov
jbe
xchg
xlat
add
or
mov
mov
xchg
sbb
lea
sbb
jne
dec
arpl
dec
loopne
aas
negl
or
cmp
jbe
mull
mov
sbb
mov
arpl
insl
in
mov
push
lcall
xlat
fldt
pushf
pop
enter
sarl
mov
dec
push
pop
lret
aas
push
lods
or
nop
pop
xor
lcall
jmp
jns
loope
mov
mov
lods
popf
push
jo
mov
mov
cmpl
sub
sub
jne
cmp
dec
movsl
mov
je
mov
rclb
and
xchg
jmp
jp
xor
repz
jge
ljmp
jb
inc
lret
dec
adc
add
pop
lods
cli
or
cmp
mov
test
jae
inc
add
jle
data16
mov
nop
sti
dec
adc
sbb
gs
pop
vpmadcsswd
imul
mov
dec
fistpl
ficoms
mov
sbb
movsl
jne
mov
pusha
mov
mov
sub
sbb
subl
xor
mov
movsb
test
sub
xor
stos
sbb
pop
push
pop
xchg
cs
pop
jl
and
xchg
das
adc
cmp
popa
sub
jae
push
inc
or
cmp
cmp
cmp
dec
lret
xchg
sbbb
mov
out
jbe
mov
les
xor
nop
and
sbb
push
lret
jo
data16
mov
jnp
lcall
xchg
lret
std
sbb
jae
adc
inc
dec
lcall
push
addr16
mov
stos
iret
jne
out
movsl
stos
outsl
add
ret
lea
outsb
fwait
add
inc
xor
and
inc
push
pop
ret
jmp
aas
outsl
filds
rorl
gs
mov
mov
gs
or
sbb
and
add
test
mov
ret
mov
jo
cmc
int
testl
arpl
and
pop
out
mov
push
or
xchg
push
dec
andb
arpl
pop
sbb
push
sahf
shll
push
cmp
cs
rorb
sub
push
movsl
je
or
int3
lock
out
mov
fwait
cmp
and
push
mov
xorb
adc
je
pop
push
lahf
mov
cld
cli
push
xchg
insl
xor
popa
stos
out
stc
sub
icebp
nop
inc
lea
insb
pop
lds
jmp
push
sbb
lcall
daa
sbb
mov
push
inc
shrb
xor
inc
out
push
sbb
sbb
mov
pop
fwait
lods
sbb
jno
dec
pop
xor
mov
popf
outsb
xchg
adc
cmp
pop
enter
cli
cmc
inc
mov
lret
xchg
mov
outsb
mov
popf
data16
outsl
jno
fucomip
outsl
push
repnz
mov
push
test
cmp
mov
add
xchg
push
loope
sub
in
jmp
xor
ret
outsl
loop
sbb
pop
mov
xor
sbb
sub
test
mov
icebp
adcl
je
mov
repnz
mov
subl
in
xchg
push
rcr
int
adc
lods
loop
ljmp
dec
push
out
jnp
inc
shlb
add
jno
arpl
push
jp
adc
std
loope
jb
sarb
pop
flds
popa
and
jp
cli
inc
lcall
inc
sahf
mov
pop
xchg
iret
stc
mov
imul
cmp
frstor
mov
pusha
dec
enter
inc
ljmp
xor
loop
and
hlt
or
lods
pop
mov
enter
and
mov
stos
push
iret
xchg
lret
icebp
jb
ret
and
pop
add
jns
lcall
gs
jnp
shll
pop
jns
jno
push
lret
mov
inc
lcall
jo
add
mov
mov
jmp
dec
dec
mov
lret
repnz
cld
mov
pop
aam
cmp
test
shrl
inc
pushl
sbb
pop
pop
inc
dec
xorb
leave
clc
inc
jmp
add
jp
ret
imul
repnz
cmp
mov
int
fisubl
shll
mov
incb
fiaddl
push
push
test
shrl
stos
add
pop
cmp
jns
mov
mull
jl
popa
lret
leave
jnp
mov
mov
cmp
stos
imul
cmp
mov
shll
adcl
movsb
pop
stos
mov
int
sbb
jae
mov
add
loope
inc
xor
push
imul
fistpll
pop
ljmp
stos
xorb
andl
popa
mov
mov
pop
popf
mov
push
inc
cld
rcrl
xor
fcmovnbe
int3
cmpl
push
roll
fnstenv
ljmp
or
pop
adc
mov
jnp
push
and
mov
mov
or
mov
add
imul
lret
inc
pop
inc
mov
addr16
mov
mov
adc
int3
jnp
inc
push
sarl
loop
mov
icebp
jp
fcmovb
pop
ret
jecxz
xorl
add
push
rorl
icebp
popf
rorl
xchg
popa
push
push
add
shl
dec
movsl
sbbl
jb
xor
mov
int3
inc
stc
bound
inc
pop
mov
mov
hlt
jno
jae
dec
and
ret
cld
mov
jmp
and
dec
orl
cmp
inc
adc
roll
jmp
mov
test
jae
add
xor
xor
test
cli
cmp
jecxz
cli
mov
mov
aam
dec
das
adc
xor
test
pop
mov
lcall
test
loop
inc
gs
pop
mov
mov
xchg
rcrb
pop
cmp
cmp
mov
loopne
or
outsl
and
xchg
cli
into
cmp
mov
cmp
lcall
cmpsl
jp
mov
cltd
dec
adc
addb
stc
negl
push
shl
and
mov
in
jb
push
xor
mov
add
mov
fmuls
push
and
clc
stos
jb
pop
inc
jnp
or
roll
jnp
cltd
mov
push
incb
loope
mov
ss
add
adcb
push
mov
pop
sarl
adc
or
loop
push
xchg
or
sarb
pop
loop
xchg
fsqrt
incl
cmp
sbb
mov
xor
iret
mov
jb
stc
notb
jg
clc
inc
cmp
add
xchg
call
repnz
ljmp
inc
and
arpl
inc
dec
frstor
push
lcall
das
bound
jno
inc
or
icebp
xchg
ljmp
cmp
stc
ret
repnz
xchg
jge
int
jns
inc
inc
add
stos
dec
dec
movsl
push
fnstenv
icebp
movsb
adcl
popa
jb
xor
push
push
sbbl
inc
test
call
push
mov
dec
push
test
fnstenv
psubusb
pop
mov
mov
pop
mov
push
sub
loope
pop
aas
aaa
mov
pop
cmp
fucomi
inc
inc
mov
push
sbbb
adc
sub
lcall
addl
xor
jg
xchg
jp
jno
mov
dec
mov
clc
test
and
shll
xchg
cltd
mov
rcll
push
pop
stos
ret
repnz
push
std
ljmp
popf
cmp
jge
xor
ret
int3
stos
imul
jno
cmp
push
loop
jmp
and
lea
loope
pusha
adc
push
inc
sub
jp
or
cwtl
lret
orl
sbb
push
loope
stc
pop
cmp
int3
inc
jp
dec
dec
pop
imul
xor
inc
jnp
and
call
jae
icebp
stc
dec
and
psrlq
aam
pop
cli
adc
stos
pop
test
inc
mov
lods
add
mov
stc
in
ljmp
xchg
jmp
rcll
jmp
mov
pop
out
lods
and
mov
jp
in
push
cli
outsb
xchg
fdivrl
jb
out
jns
popa
shl
push
sti
and
mov
cmp
add
pop
inc
jnp
cmp
in
mov
inc
mov
jne
stos
jp
sti
shrb
imul
ljmp
fstps
adc
imul
bound
inc
aaa
xchg
outsl
insb
in
xor
inc
jp
lret
inc
xor
dec
gs
mov
pop
jmp
imul
stc
jae
push
dec
je
cmp
repz
aam
jns
xor
add
pop
mov
jno
lea
int3
pushf
ljmp
aam
pop
ret
stos
lret
or
imul
jns
sbb
pop
pop
cltd
push
icebp
and
popa
adc
lcall
fptan
jecxz
inc
stos
jg
add
imul
jnp
xchg
cmp
fdivl
repz
jb
ljmp
xchg
add
mov
mov
arpl
dec
mov
xor
icebp
mov
or
mov
mov
cmp
iret
and
jae
cmp
call
loope
jnp
sbb
push
inc
int
aas
push
jnp
icebp
adc
movl
stc
and
xorb
xchg
sub
push
xor
inc
bound
cltd
cli
push
je
cld
mov
cmp
mov
mov
mov
lea
lahf
ret
dec
inc
mov
stos
cmp
jno
int3
add
mov
inc
cmp
inc
stos
or
cmp
push
rorl
cli
add
shl
subl
decl
cld
add
cltd
loop
push
test
dec
bound
clc
push
stos
into
icebp
mov
jp
mov
and
daa
cmp
xor
fidivl
nop
mov
ds
xchg
leave
dec
imul
je
faddl
mov
or
sub
cmp
bound
out
mov
mov
xor
test
std
xlat
sbb
mov
fstpt
add
jae
cmp
leave
push
xchg
decb
bound
inc
pop
jp
mov
pop
inc
je
mov
andl
xlat
out
outsb
out
cmpsl
cltd
inc
ss
ror
adc
fndisi(8087
xchg
mov
andl
out
xchg
fdivrs
jmp
push
stos
cmp
jecxz
es
inc
arpl
lcall
repnz
add
pop
inc
dec
aam
data16
mov
mov
jae
and
ret
pop
mov
aaa
rcrb
mov
shll
mov
mov
stos
jns
jnp
pop
test
sbbb
add
rorl
arpl
je
movsb
out
sub
aas
push
fs
stos
loope
mov
hlt
out
icebp
out
pop
icebp
pop
ljmp
dec
stc
xchg
mov
sbb
into
dec
ds
mov
rorl
fsubl
cmp
jbe
hlt
fwait
test
repnz
cs
loope
in
push
sub
pop
mov
adcl
ss
das
cli
inc
pop
insb
test
xchg
clc
jnp
popa
jae
subl
push
push
out
xchg
cmp
xlat
dec
mov
mov
test
stos
pop
das
jns
inc
and
mov
xchg
sub
mov
mov
les
ret
or
in
push
mov
jns
call
addl
xchg
add
stos
inc
movsl
add
dec
xor
push
das
out
imul
push
cmp
jbe
mov
add
xor
mov
arpl
mov
or
cli
adcl
adc
pop
int
jp
mov
xchg
clc
push
adcl
push
lret
jae
dec
inc
imul
stos
jg
jbe
xchg
mov
add
jg
xchg
mov
sti
fldl
std
shlb
popa
mov
or
loop
popa
mov
dec
or
rol
mov
repnz
jnp
mull
inc
and
mov
shrb
push
dec
jae
xchg
mov
mov
rorl
stc
in
cld
jb
ljmp
xor
mov
mov
out
fdivl
cld
hlt
jno
jp
lods
icebp
jne
loopne
fnstsw
pop
cli
pop
push
and
lret
mov
aaa
and
mov
lret
stc
push
cli
mov
je
insb
jb
adc
repnz
nop
mov
or
push
sbb
sarl
outsl
cltd
add
xchg
aas
test
push
inc
pop
add
jo
mov
cmp
jecxz
popa
gs
stos
inc
mov
mov
arpl
xchg
addb
sbb
inc
ret
pop
jb
cmp
ret
fdivs
adc
mov
dec
jmp
imul
stos
out
rdtsc
stc
fadds
movsl
mov
icebp
push
and
subb
mov
jb
jmp
stc
arpl
lret
sbbl
cmp
std
mov
insb
lret
fs
or
or
inc
fbstp
sbb
jno,pn
dec
cmp
fidivl
jnp
sub
and
stos
cmp
imul
int3
adc
loop
jnp
mov
pop
bound
in
frstor
inc
jnp
inc
cmp
push
imul
xor
fnstcw
leave
cmp
andl
dec
rorb
je
mov
xor
cmp
mov
jno
mov
or
pop
movsb
add
cmpsb
mov
sbb
ljmp
and
loope
mov
xor
stos
sarl
cmp
incl
fsts
fstp
cmp
ljmp
fnsave
xchg
stc
test
adc
fisubrl
cmpb
inc
xchg
shl
add
jae
jmp
cli
jg
movsb
dec
pop
stos
xchg
in
inc
push
jno
jnp
js
mov
pop
cltd
enter
shrl
icebp
adcb
outsb
and
ss
icebp
mov
mov
mov
xor
roll
inc
dec
bound
adc
cli
mov
test
andl
mov
loopne
pop
push
ja
js
mov
hlt
popa
xchg
ljmp
loop
dec
mov
in
popa
ljmp
mov
sbb
dec
arpl
ficoml
ds
jp
mov
dec
stos
repnz
mov
push
roll
subl
and
stos
jb
hlt
enter
ret
pop
sub
mov
clc
cli
cltd
repnz
add
out
scas
jp
icebp
xor
dec
mov
lods
jae
imul
jns
lods
mov
mov
int3
push
dec
imul
lods
xor
mov
mov
jnp
adc
lret
inc
mov
stos
and
dec
xchg
mov
inc
lods
mov
int3
pop
and
shlb
ret
fyl2x
xchg
mov
popa
or
stos
push
push
mov
stos
ror
pop
mov
mov
int
push
jmp
popf
lods
pop
mov
outsb
stos
dec
inc
mov
imul
xchg
dec
lcall
mov
loop
fdivrs
ret
leave
dec
mov
jb
dec
loop
subl
mov
clc
sub
dec
and
popa
cli
cmp
inc
andl
mov
push
cli
mov
pop
fucomp
in
shl
out
add
push
jno
in
mov
fists
pop
push
imul
addl
inc
loope
cld
shrl
repz
mov
stos
cltd
sub
mov
mov
mov
dec
and
mov
fisubrl
icebp
jb
and
bound
arpl
popa
push
pop
adc
stos
lret
loopne
stos
add
xor
cmp
fucomp
stc
in
mov
arpl
push
cmp
fisubrl
pop
cmp
ret
dec
arpl
or
mov
enter
loope
rcrl
rol
jo
jp
adc
lret
popa
dec
jno
stos
repnz
jns
mov
jmp
ret
aam
xchg
inc
stc
cmp
mov
dec
inc
ret
xor
mov
loope
adc
cmp
add
and
icebp
sarl
push
mov
lcall
into
push
add
jmp
cltd
or
xchg
xchg
ret
cmpsl
lret
mov
out
cmp
lds
jo
jg
inc
sbb
jns
dec
mov
out
cmpsl
cmp
mov
jnp
push
ret
inc
adc
fisttpll
and
push
mov
dec
pop
mov
int3
mov
std
div
flds
push
pop
mov
xchg
jge
pop
scas
jno
lods
call
jae
insb
stc
icebp
mov
imul
push
loope
mov
cmpsb
cld
ret
jns
cli
xor
dec
loope
outsl
stos
fnstenv
pop
cmp
out
xor
add
orl
inc
dec
aas
mov
xor
pop
mov
test
ljmp
loop
jae
adc
push
mov
iret
mov
mov
xorb
out
push
fdivs
ljmp
repnz
loop
popa
mov
jb
bound
mov
xor
roll
cltd
jae
push
push
jle
loope
ret
ror
lret
mov
sub
iret
dec
repz
pop
hlt
xchg
jp
xor
adc
cmpb
mov
sar
popl
adc
push
mov
mov
xchg
mov
pop
mov
mov
dec
cld
jecxz
fisubl
pop
add
cmp
test
inc
xchg
dec
sarb
arpl
scas
xchg
pop
mov
gs
mov
cmp
add
and
subl
add
dec
cmp
imul
icebp
cmp
icebp
dec
jnp
fwait
cld
mov
cli
sbbl
mov
push
push
and
mov
pop
cmp
mov
stos
enter
mov
dec
cld
dec
sarl
mov
jb
lods
jnp
movsb
stos
mov
cmp
xor
iret
or
xchg
imul
stc
sbbl
imul
cld
mov
mov
sahf
push
mulb
je
fsubrl
icebp
fisubs
dec
imul
aas
or
jmp
xchg
push
fimull
dec
jns
int
jmp
dec
xor
pusha
mull
int3
cmpsl
icebp
xchg
cmp
scas
dec
bound
hlt
mov
jb
or
mov
add
out
or
jb
enter
hlt
test
mov
xchg
jb
jmp
movsl
dec
mov
jae
dec
test
fidivrl
orb
fwait
mov
cmp
jns
lods
pop
leave
pop
push
sbb
jo
sbb
aas
pop
jg
mov
jle
addb
lods
jnp
leave
xchg
mov
mov
dec
fdivs
lock
jle
cld
mov
ljmp
inc
add
mov
aaa
ret
stc
mov
int
fiadds
inc
sti
jnp
mov
int
aam
mov
xchg
aas
jg
inc
ror
popa
xchg
inc
sbbl
inc
mov
in
push
add
pop
lcall
pop
jb
jnp
loope
rcll
mov
mov
popa
popa
nop
fldcw
nop
ret
mov
bound
mov
inc
push
lods
mov
mov
mov
call
lret
adc
mov
xchg
out
lock
push
ret
addl
inc
fisubl
test
jno
roll
mov
push
xor
add
flds
mov
loop
clc
js
imul
mov
in
add
mov
dec
xor
dec
je
mov
mov
jle
mov
push
jb
push
repnz
stc
das
cmp
pop
add
andb
jb
and
shll
xchg
jp
ss
aad
repnz
subb
xchg
ret
leave
nop
push
loope
fidivrs
test
out
cli
shll
rcrb
ds
dec
dec
test
out
icebp
mov
sahf
cld
insl
jns
add
pop
arpl
add
jnp
sub
mov
test
aad
gs
call
xchg
stos
mov
jo
inc
push
sub
inc
int
lahf
jl
push
add
shlb
outsb
out
enter
lods
rcll
call
jle
hlt
mov
or
out
cltd
popa
lcall
je
xor
sbb
xchg
or
push
jb
mov
movsb
dec
and
lret
cli
popf
jns
outsb
xor
inc
loop
stc
xchg
pop
sti
jno
movb
rorb
ret
pop
dec
arpl
fsubrs
jg
leave
aas
icebp
popa
out
push
inc
repnz
repnz
mov
repnz
push
in
mov
call
divb
mov
scas
jle
dec
inc
jno
mov
ljmp
push
js
push
pop
jns
lret
pop
ss
stos
and
ret
cmp
inc
subl
imul
jno
fidivrs
std
xor
inc
add
cmp
mov
aam
loope
out
and
ret
test
je
movsb
stos
inc
test
jmp
mov
les
pusha
sbb
mov
lock
mov
inc
adc
nop
imul
cmp
mov
dec
cli
ljmp
cltd
shrl
xchg
clc
imul
data16
rcr
cmpsb
stc
sarl
sbb
adc
xchg
mov
rorl
mov
push
cmpl
mov
arpl
lock
out
mov
mov
ret
rcrw
rcl
ret
stos
ret
lods
imul
sbb
sbb
inc
repnz
adc
adcl
jg
mov
add
roll
hlt
jns
xchg
sbb
cli
test
lds
mov
in
dec
rolb
movsl
ret
cmp
pop
push
fsubl
xor
pop
dec
popf
shrl
imul
push
pop
aam
dec
cmpb
sub
loopne
ds
jg
xchg
jno
sbb
cli
cmp
jae
sbb
jg
mov
mov
jno
push
push
icebp
loope
or
out
mov
stos
mov
fnstsw
xor
push
popa
inc
jmp
xchg
mov
xchg
ljmp
test
add
inc
and
iret
or
xchg
mov
arpl
sbb
jge
stos
jb
lea
push
clc
pop
push
cmpsb
std
pop
ret
pop
and
mov
andl
je
mov
loop
andl
push
mov
test
in
jp
fidivl
stos
add
repz
repnz
mov
lods
push
pop
mov
out
iret
stos
xchg
ret
orl
in
mov
jmp
xor
dec
fnstcw
pop
or
dec
test
pop
xchg
rorb
imul
add
imul
in
fldcw
inc
pop
arpl
cltd
insl
arpl
stos
jae
repz
dec
lcall
push
jae
and
mov
loop
push
or
mov
imul
jno
mov
out
call
faddl
lods
rorl
add
shrb
pop
mov
leave
mov
outsb
inc
dec
leave
loope
mov
shll
in
dec
stc
out
pop
in
mov
mov
cmp
cmp
mov
les
cld
dec
inc
adcl
sub
lods
cmp
and
push
cltd
loopne
stc
dec
enter
movsb
lods
push
push
push
mov
out
xorl
sarl
jge
cmp
shlb
jno
jo
inc
mov
andb
pop
rcrl
or
int
lret
add
inc
ljmp
in
movsl
push
cmp
pop
fmuls
out
rcll
aas
faddl
idiv
pop
rol
fabs
mov
mov
stc
pop
add
push
cli
aam
push
pop
fwait
jecxz
pop
mov
leave
lcall
jnp
sub
jo
shrb
mov
ljmp
imul
xchg
hlt
mov
xchg
shrl
push
adc
fmulp
fimuls
add
imull
push
xchg
fcomps
shl
jmp
push
cmp
hlt
mov
push
jnp
mov
mov
mov
mov
push
jp
xor
pop
mov
scas
xchg
pop
inc
xor
mov
mov
pusha
inc
lock
cmp
jp
pop
add
xchg
dec
stos
and
lcall
stos
test
mov
movsl
scas
push
stc
flds
mov
mov
jns
jnp
lods
add
jg
adc
and
ljmp
dec
mov
mov
jb
push
dec
cmp
pop
cmp
imul
inc
xchg
and
mov
imul
insl
repnz
adc
adc
cmp
test
dec
bnd
ljmp
loope
ljmp
nop
fildl
and
dec
push
fnstenv
dec
pop
jecxz
test
add
sbb
lret
lock
jb
dec
ret
xor
leave
mov
cmp
ss
js
adc
inc
pusha
inc
dec
inc
stc
jg
push
mov
arpl
roll
push
and
js
jb
je
jg
bound
mov
arpl
push
test
xor
out
jno
sub
jbe
inc
jns
outsl
pusha
xchg
cmp
stc
mov
dec
mov
mov
jp
mov
lods
mov
popa
clc
faddl
pop
repnz
int3
xchg
xchg
cmp
add
jae
pop
icebp
leave
mov
xchg
bnd
push
xchg
dec
imul
xchg
dec
mov
jb
sarl
push
icebp
popa
mov
shll
mov
sub
push
fstps
out
mov
xor
arpl
mov
jb
ret
lahf
mov
push
inc
arpl
out
push
icebp
add
inc
imul
into
sarl
xor
bound
out
sbb
cmp
xchg
xchg
add
shl
mov
add
popf
inc
inc
mov
push
mov
lcall
dec
ja
in
out
jmp
push
lret
push
mov
call
pop
jae
mov
loopne
imul
xor
xchg
test
stc
fldcw
fistpl
inc
jp
and
mov
stc
push
xchg
add
mov
inc
xchg
jns
ret
inc
xor
mov
dec
daa
and
sahf
js
cmpl
leave
cli
or
fidivrl
adc
andb
lret
jmp
sub
stos
sbb
jle
cltd
cltd
stos
mov
jo
jb
sub
aad
ljmp
xchg
pop
adc
jb
arpl
aam
jno
push
adc
jp
stc
mov
xchg
lret
pop
popa
push
movsl
push
fdivs
jns
and
ret
shll
testb
sub
mov
fnstcw
lods
lahf
push
mov
call
mov
xchg
out
sarl
mov
addl
or
stos
xchg
std
xor
test
lock
sub
stc
jnp
fstpt
stc
addb
jb
push
add
ljmp
mov
cli
movsl
lcall
in
dec
out
pop
mov
add
inc
stos
jns
test
cmp
jnp
flds
inc
xchg
xchg
repnz
sbb
jmp
outsl
cmp
sub
add
mov
add
hlt
sbb
jno
and
mov
push
jnp
fidivl
jp
dec
xor
xchg
decb
cli
cmp
cmp
push
xchg
lock
and
les
jnp
mov
cmp
jge
loope
sbb
insb
or
stos
jno
jge
dec
imul
out
icebp
xchg
push
stos
lods
xor
jp
jmp
fsts
xlat
cmpsb
dec
in
lret
and
cli
rclb
push
loop
into
icebp
int
iret
leave
popa
jb
jnp
in
mov
lahf
cs
cmp
xchg
test
cli
mov
inc
jns
push
ret
repnz
popa
jp
loop
sub
cmp
sub
loope
lahf
and
stos
mov
lret
test
into
dec
mov
cltd
pop
lods
imul
xorl
mov
inc
ljmp
inc
lcall
or
xchg
push
inc
stos
ja
sahf
mov
pop
dec
stc
inc
push
fidivs
shl
insl
dec
and
jmp
inc
fmull
add
mov
aam
mov
aaa
call
push
jge
addb
cmp
cmp
add
dec
jg
aam
arpl
loop
orl
repnz
test
mov
ret
incb
pop
rcr
mov
dec
mov
or
rcll
jg
xor
mov
xor
test
rcrb
dec
xor
cmp
fs
jo
loop
leave
pop
shlb
ret
popa
dec
push
gs
mov
mov
sub
leave
inc
dec
out
mov
loope
jbe
mov
cltd
sti
test
in
sbb
push
cmp
adcb
andb
inc
lock
sarb
stos
fdivr
jp
lcall
loop
and
mov
cld
movsl
mov
outsb
andl
jno
pushl
stc
inc
mov
sbb
jmp
mov
or
stos
cmpl
mov
flds
out
jno
mov
in
xchg
xor
iret
inc
ds
inc
pop
ror
add
jae
jg
jg
xchg
imul
cmp
inc
mov
mov
inc
inc
adc
xor
xor
aam
cli
test
xor
dec
andl
pop
sbbl
mov
pop
inc
pop
loope
popa
inc
test
flds
cmpl
icebp
mov
or
dec
jns
sti
sub
mov
inc
and
mov
mov
inc
je
jge
xchg
lret
and
bnd
jg
inc
movsl
mov
dec
bound
jg
mov
subl
fnstcw
out
cmp
add
cmp
stc
mov
push
jns
or
imul
movb
dec
stos
mov
testb
push
imul
mov
xchg
dec
mov
ret
push
cmp
xchg
cmp
jns
sarb
and
jp
and
pusha
icebp
inc
faddp
insl
jp
add
pop
push
pop
fstl
stos
push
stc
fsubp
out
jnp
ljmp
mov
popa
inc
cmp
andb
inc
mov
popa
xor
mov
lahf
mov
jbe
jge
mov
jecxz
or
roll
mov
add
sbb
popa
dec
ret
imul
push
xchg
test
lods
repnz
stc
loop
add
test
jns
push
pop
rolb
cld
jae
bound
sbbl
and
es
mov
je
and
ja
mov
lods
stos
cmp
pusha
dec
lcall
data16
repnz
clc
jae
dec
jmp
testl
aam
pop
pop
mov
xchg
repnz
ret
inc
inc
hlt
fmull
call
dec
jnp
lds
in
ret
fcoml
imul
test
fs
push
and
inc
out
push
loope
adc
adc
cmpsb
adc
and
sbbl
pop
sbb
ret
enter
dec
xor
xchg
push
sbb
push
icebp
movups
mov
lods
xor
fisubrl
mov
jns
mov
enter
mov
push
stos
xchg
push
out
cmp
bnd
mov
popa
jae
jecxz
stos
pop
mov
sbbl
leave
jp
cmp
pop
hlt
xchg
loop
mov
je
stc
cli
adcl
mov
jnp
test
cli
adc
dec
sbb
dec
je
pop
insb
xorl
lock
dec
cli
loopne
mov
adc
pop
jnp
imul
jp
sarb
sarl
lods
and
push
mov
arpl
xchg
pop
or
bound
and
test
and
icebp
pop
adc
push
fidivl
sub
in
imul
mov
ficomps
repz
stos
cs
andb
rolb
cmp
or
mov
xchg
inc
mov
jbe
or
sub
push
xchg
imul
loopne
loopne
test
bound
push
jp
mov
lods
xor
add
mov
xor
push
ljmp
inc
and
imul
icebp
mov
bound
and
xchg
addr16
subl
jbe
int3
fdivrs
xchg
jb
adc
cmpl
jbe
andl
mov
sti
and
ret
shll
ret
xchg
jp
mov
stc
icebp
sbb
ljmp
lds
dec
jno
inc
lcall
imul
sub
pop
mov
and
fcmovu
enter
shll
rcrl
jb
or
cmp
cmp
inc
push
hlt
subl
addl
add
mov
shll
xor
dec
mov
lds
adc
jecxz
pop
sbb
in
pop
inc
jnp
adc
pop
xor
iret
adc
cltd
loope
adcl
mov
stc
lret
aas
movl
sbb
arpl
jp
cmp
adc
jns
out
popa
arpl
fs
stc
dec
jmp
int3
in
pop
or
jns
and
sarl
lret
jecxz
xor
es
or
jp
pop
nop
pop
gs
pop
sbb
jae
ret
inc
and
and
fsubl
xor
mov
cmp
pop
dec
icebp
imul
mov
subb
jg
orb
bound
push
adc
and
lret
dec
popa
je
jbe
ret
pop
inc
pop
sarl
repnz
fcom
mov
mov
jno
pop
mov
clc
mov
pop
jb
adc
xor
sbb
cmp
cmp
in
ljmp
adcl
call
xchg
arpl
mov
xchg
cli
mov
or
push
pop
leave
loopne
ljmp
xchg
icebp
jno
aad
fstps
add
cmpl
dec
mov
stos
arpl
and
aam
sarb
fs
cmp
subb
andb
rorl
push
jp
cmpsb
loop
jne
and
addb
jae
inc
and
fimull
xchg
lods
ror
dec
lcall
cmp
dec
clc
mov
andb
pop
and
leave
jmp
inc
xor
jecxz
icebp
or
mov
xchg
push
test
mov
sbb
rclb
or
and
cli
pop
cmp
fiaddl
xchg
jp
xor
jb
je
cmp
jno
xor
and
inc
cmpsb
popa
bnd
mov
mov
test
mov
fs
jnp
arpl
mov
inc
push
int3
rol
and
mov
dec
push
icebp
shll
xor
add
cli
push
inc
imul
cmp
roll
pop
insl
lret
inc
jl
loop
adc
cld
jae
pop
stos
jp
dec
add
lret
fidivl
add
leave
inc
pop
ret
loop
jnp
xchg
lock
mov
ljmp
mov
mov
sbb
inc
and
dec
xchg
rcl
or
mov
fxch
icebp
loop
jae
jae
mov
les
int3
mov
inc
mov
sti
mov
xchg
mov
imul
jae
push
mov
cli
jb
mov
nop
inc
adc
and
or
sbb
jnp
and
sti
pusha
lret
xchg
sbb
lcall
dec
push
jns
subb
jecxz
mov
inc
in
jp
pop
lcall
xchg
shrl
insl
mov
flds
loop
pop
decl
lods
pop
mov
hlt
xchg
mov
orb
push
pop
xchg
mov
push
jecxz
lcall
shll
xor
dec
stos
test
cwtl
and
clc
sub
fldenv
enter
xor
ljmp
lret
add
jne
and
stc
jmp
in
loop
mov
nop
jo
jns
cmp
jb
lcall
mov
fiadds
out
xchg
jg
ljmp
xorb
stos
push
mov
mov
out
mov
and
iret
inc
add
leave
jno
mov
subl
mov
decb
lods
jp
pop
test
adc
repnz
sbb
cmp
addb
loope
fildl
cmpsb
push
rcll
bound
jp
lods
repnz
aam
stc
inc
mov
xchg
popl
cmp
jnp
jae
mov
add
movsb
dec
dec
cli
mov
imul
fst
imul
lods
cmp
pop
mov
inc
nop
inc
out
or
cltd
fldcw
add
scas
outsb
jp
adc
daa
push
sti
mov
bndstx
ret
jb
adcl
add
test
test
dec
mov
and
loop
repnz
pushl
das
and
xchg
inc
cltd
popa
sahf
xchg
cmp
rorb
nop
cmp
stos
sbbl
push
enter
popa
pop
cli
icebp
and
gs
jae
pop
add
pop
loope
mov
or
pop
pop
cmp
sub
and
adc
subl
nop
ret
xor
sbb
sbbb
xor
rcll
or
sub
loope
fdivrl
mov
imul
jge
push
mov
mov
jmp
lds
les
cmpsb
jnp
adc
push
cli
rcrl
sbbl
aas
es
loopne
mov
loop
pop
dec
and
add
ficompl
cld
mov
fbld
call
jbe
sbb
xchg
ljmp
mov
pop
pop
jae
ljmp
repnz
ds
mov
cld
pop
cmp
push
lds
loope
icebp
pop
xor
or
les
sub
mov
add
sbb
xchg
ljmp
int
mov
mov
lahf
jmp
in
jne
mov
jp
hlt
and
ljmp
ret
lcall
roll
mov
loope
addl
cmp
test
testl
jnp
jmp
pop
jb
xchg
mov
mov
dec
push
stc
add
test
pop
mov
mov
scas
insl
inc
out
inc
repnz
sub
lock
decb
xchg
jnp
lock
cmp
sub
adc
lods
stc
sbb
andl
pusha
push
ret
dec
xchg
rcl
cmp
loop
stc
push
insb
lcall
arpl
xchg
cmp
stos
mov
imul
jnp
inc
pop
call
pop
lcall
fnstcw
push
push
push
dec
dec
pop
sub
mov
and
in
test
mov
lods
dec
add
pusha
ja
cltd
add
mov
test
xchg
cltd
stc
scas
mov
add
clc
hlt
loope
mov
int
add
and
cltd
je
roll
lcall
adc
sar
imul
cltd
clc
mov
dec
cmp
push
sub
xchg
and
stos
inc
addb
sub
pop
jnp
stos
jg
popa
stc
push
push
inc
adc
addl
ljmp
in
out
ret
inc
pop
push
inc
loop
into
imul
xchg
inc
push
jecxz
fnstcw
stos
jecxz
stos
pop
mov
add
arpl
movsb
ret
dec
or
xchg
mov
sbb
stos
mov
mov
aad
mov
fists
xchg
cmp
push
pop
sar
outsb
ret
mov
xchg
imul
adcb
xor
je
mov
pushfw
cld
xchg
cmp
mov
imul
loope
adc
ljmp
repnz
add
leave
push
ljmp
xor
hlt
int3
icebp
push
xor
dec
or
and
dec
push
int3
sbb
and
jo
xchg
lods
sbb
cli
mov
rcrl
mov
adc
cmp
jnp
ret
dec
jle
scas
in
cli
jmp
adc
pop
ret
jb
mov
jnp
mov
jge
xorl
test
int3
pop
mov
pop
enter
mov
mov
fwait
sbb
fwait
jp
mov
dec
sbb
and
mov
push
imulb
dec
in
rcrb
sbb
fucomip
sub
mov
adc
xchg
jns
mov
and
insb
pop
je
mov
mov
fisubl
mov
pop
cmp
icebp
in
add
mov
adc
push
jno
rolb
inc
push
ja
sbb
mov
push
loopne
loop
aad
push
jmp
roll
mov
lock
pop
in
ss
stc
insl
and
test
pushl
fiaddl
inc
in
movsbl
rol
loop
repnz
test
out
in
mov
cwtl
sub
jge
imul
andl
stos
js
imul
leave
cmc
int3
mov
loope
hlt
in
popa
mulb
push
adc
sub
mov
popa
lret
mov
and
out
imul
popa
mov
mov
stos
xchg
lock
icebp
dec
or
rorb
adcb
out
jae
mov
inc
mov
mov
and
jnp
xor
inc
xchg
cmp
cmp
mov
push
pushf
mov
stc
sub
mov
rorl
cmpl
cmp
loope
jns
sti
and
inc
adc
mov
mov
xchg
enter
xor
psrld
xor
dec
jnp
dec
push
ret
lods
or
add
inc
sbb
and
subb
mov
jno
shl
fwait
mov
mov
push
imul
jmp
sbb
mov
idivl
add
push
arpl
and
dec
jp
lret
cmp
cltd
bound
inc
mov
pop
stc
add
outsb
pop
imul
lods
fisubrl
pop
xchg
imul
cmp
loop
and
jp
xchg
inc
or
sbb
stos
mov
xor
pusha
xchg
cld
mov
inc
mov
stos
lods
leave
jns
stc
mov
in
xor
mov
scas
stos
and
dec
xor
fbld
pop
inc
jnp
sti
hlt
jnp
std
mov
popa
dec
mov
mov
xor
stos
xor
fst
ficoml
mov
loope
adc
fdivrl
jb
test
xchg
xchg
aas
mov
imul
xchg
sbb
test
jmp
rolb
dec
mov
leave
cli
pop
out
jns
xor
mov
arpl
mov
cmpsb
cmp
leave
cmpl
adc
pop
xchg
xchg
xor
das
std
mov
mov
or
mov
leave
sbb
jne
in
fimull
adc
lods
fnstcw
ror
icebp
cmp
adc
push
leave
je
xchg
and
pop
stc
ret
inc
cmp
push
cli
inc
lods
pop
mov
cmp
shlb
mov
je
jmp
mov
stc
ljmp
or
mov
sahf
jno
pop
inc
in
gs
xchg
xorb
cmp
leave
ljmp
std
jmp
arpl
pop
jae
push
loop
jmp
inc
adc
hlt
sbb
push
add
lcall
cmp
lret
jns
leave
xchg
jae
adc
mov
cld
cld
inc
mov
mov
iret
rolb
jecxz
mov
in
jp
loopne
out
jb
xor
mov
jmp
pop
je
add
fdivrs
shl
push
add
pop
jnp
cld
aas
addb
cmp
jae
dec
imul
mov
push
xor
ljmp
mov
jmp
imul
pop
add
push
hlt
xor
dec
inc
mov
mov
pop
xor
shr
xor
push
mov
push
mov
xchg
and
jno
cmp
shlb
pop
cli
popa
imul
insl
adc
lock
loop
mov
and
jmp
jbe
lret
fs
ror
je
incb
adcl
mov
pop
jmp
jnp
int3
repnz
inc
adc
in
cmp
leave
push
test
cmp
mov
xorb
adc
stos
fnstenv
icebp
cmp
loope
pop
orb
mov
and
adc
and
cmp
dec
shl
mov
lods
cli
mov
ret
jae
sub
leave
mov
cmp
outsl
arpl
je
and
adc
xchg
pop
push
push
lock
add
outsb
pop
sbb
daa
push
pop
mov
mov
mov
loop
add
xchg
stos
imul
cmp
jg
sub
mov
mov
shl
jae
shrl
push
rorb
mov
push
dec
xchg
inc
add
roll
cld
push
mov
mov
arpl
pop
mov
or
cli
push
jecxz
mov
jno
movsl
add
repnz
pop
in
pop
shl
shlw
mov
jp
cli
ds
lcall
dec
jnp
dec
cmp
imul
fcmovbe
lret
push
cmp
xchg
loop
sbbl
push
aad
mov
dec
push
cmc
mov
hlt
inc
inc
dec
cmp
dec
ljmp
adc
inc
mov
subb
inc
jae
cli
imul
jge
or
adc
mov
dec
rorb
rcrl
push
jno
mov
pop
jns
dec
mov
or
lahf
iret
mov
and
outsb
fimull
push
dec
cmp
hlt
mov
les
inc
loope
pop
cli
mov
xchg
clc
pushl
mov
in
stc
inc
mov
xor
dec
inc
adc
cli
data16
inc
aas
inc
push
loope
mov
push
mov
xchg
jmp
jp
lcall
imul
or
pop
push
inc
jnp
mov
dec
cli
mov
stos
cmp
imul
popa
hlt
xor
stc
sti
hlt
enter
or
pop
rcrb
ljmp
push
cld
loope
arpl
dec
xchg
mov
rcr
mov
stos
sbbl
imul
ja
lods
mov
xchg
stos
jmp
sbbb
dec
mov
push
mov
movsl
jge
cmpl
push
bound
arpl
outsl
shr
xchg
shrl
mov
inc
mov
add
stc
imul
int
orb
popa
mov
addl
jne
dec
xchg
inc
xor
testb
negb
cmp
inc
repz
dec
ret
hlt
jmp
ljmp
scas
push
stos
mov
sbb
dec
rcrl
xchg
aas
pop
lds
sub
mov
adc
ja
add
sbbb
icebp
inc
fnsave
imulb
sti
mov
xchg
mov
cli
dec
out
mov
ret
xor
jns
shll
lock
jb
adc
jnp
add
jl
ljmp
ss
inc
adc
out
mov
fwait
pop
push
adc
dec
popa
sbb
rcrb
jno
xchg
adc
test
mov
pop
inc
push
mov
jle
pop
mov
enter
jno
pop
loopne
loope
xchg
mov
aaa
xchg
scas
lds
idivb
xchg
jb
cmp
xorl
mov
mov
sbb
cmp
pop
shlb
pop
pop
rcll
insb
test
cltd
int3
stos
stos
jg
imul
mov
pop
imul
int
jno
jne
lcall
xor
lds
stos
push
paddd
shlb
xorb
cmp
in
xchg
repnz
cmp
mov
imul
das
mov
mov
sub
mov
push
shl
push
inc
cmp
pop
mov
add
mov
inc
jp
sbb
bound
adc
sub
pop
mov
mov
add
in
dec
jp
mov
xchg
sbb
aad
and
pop
lcall
push
popa
push
mov
cltd
cli
ljmp
jnp
jnp
repnz
add
pop
ljmp
mov
push
loopne
mov
popa
push
cli
pop
dec
fstps
and
inc
pop
jns
fsts
or
orb
ds
push
into
dec
clc
pushf
mov
fsubl
sub
add
outsb
jnp
cli
add
mov
orl
movsb
push
out
jne
mov
jae
out
jnp
mov
clc
rorl
pushf
push
xor
or
dec
mov
xchg
arpl
loop
mov
les
inc
xor
mov
gs
pop
or
fildll
icebp
enter
push
popa
add
leave
jmp
mov
fld
jle
pop
pushl
sbbl
mov
popa
lahf
popf
sub
lret
test
sbb
aad
outsl
decl
xor
dec
imul
sub
pop
mov
jnp
pop
rcr
add
mov
dec
pop
lods
inc
hlt
jne
xchg
mul
pop
add
jnp
mov
jae
push
mov
push
xchg
add
cmp
jmp
aas
push
jns
pop
ret
mov
mov
lret
xor
lret
rorl
repz
arpl
mov
in
mov
sub
or
pop
rcl
add
cmp
int3
jns
mov
mov
ret
enter
mov
mov
mov
ret
loopne
inc
cltd
dec
sub
inc
in
imul
pop
stos
stos
and
push
shlb
xchg
imul
jnp
test
mov
inc
xchg
repnz
dec
arpl
arpl
sub
mov
lcall
xchg
xor
xor
ret
adc
sub
mov
push
add
xchg
imul
lret
sub
loopne
in
jno
cmp
imul
xchg
or
aad
or
fucomi
aaa
cld
jo
ljmp
hlt
bnd
mov
add
xorb
inc
jg
sub
fdivr
aaa
jnp
aas
fbstp
nop
push
add
in
cli
popf
add
jnp
dec
add
mov
xor
sub
inc
andb
lret
jnp
add
pop
stc
dec
test
inc
ror
arpl
fimuls
sar
cli
cmp
push
bnd
pop
andb
arpl
mov
mov
mov
jb
sarb
stos
cmp
dec
sarb
icebp
adc
insl
lods
xor
leave
push
dec
rcr
enter
jge
xorl
lods
add
jno
out
cmc
jns
sar
add
cmp
stos
mov
sarb
sbb
jae
push
inc
lock
bound
test
in
loop
test
cli
insl
fimull
mov
sarl
lahf
jge
je
cli
loop
adc
rcrl
cmp
inc
add
jnp
xor
sbb
inc
mov
inc
inc
arpl
fimull
push
xor
das
mov
cmp
sti
loopne
inc
pop
push
lock
cli
clc
and
dec
insl
sbb
sub
lock
pop
icebp
das
decb
push
stc
popa
movsl
xor
cmpb
pop
loopne
cmp
push
mov
mov
push
fidivl
loopne
cld
cmp
stos
ljmp
sbb
mov
sbbl
fnstcw
add
lods
bound
pop
cmc
aad
cmpsb
mov
ret
push
roll
fstps
cmp
test
repnz
enter
xor
repnz
adc
bound
inc
mov
dec
std
in
pop
jns
ficomps
xor
cli
xor
mov
inc
scas
lds
sub
rolb
mov
subl
ja
imul
and
and
bound
shll
ljmp
aam
adcl
adc
cli
shlb
push
xor
fidivs
jae
icebp
push
and
jno
jnp
rorb
enter
pop
imul
hlt
jno
mov
pop
shl
mov
outsl
imul
imul
and
shl
cli
push
stos
inc
cmp
pop
jnp
mov
fdivl
mov
je
cld
rorl
or
stc
lahf
pop
sub
aas
and
or
pop
and
adcl
popa
inc
stc
pop
clc
mov
ret
xchg
push
and
lcall
daa
cltd
push
ret
sbb
test
xor
fsubrs
call
mov
into
push
xchg
push
dec
pop
pop
cmp
inc
mov
jae
lcall
and
mov
test
mov
in
jge
jb
stc
mov
xor
inc
xorb
aas
shl
repnz
xchg
mov
jle
sbb
rorl
cmp
dec
jns
mov
imul
ljmp
push
add
jp
xor
lds
dec
adc
arpl
loopne
xor
pop
stos
dec
repnz
mov
rclb
dec
mov
test
std
jp
subl
stos
sub
std
lcall
cmp
push
cmc
ljmp
arpl
rol
jae
adc
out
cltd
jno
mov
jge
lods
pop
popa
jle
jae
loop
loope
inc
dec
mov
icebp
fldl
jnp
fscale
sbbl
mov
js
jb
and
jns
inc
std
pop
xor
repnz
jns
pop
ficoms
gs
inc
mov
xchg
shrl
aam
push
jae
leave
imul
subl
xlat
dec
divb
jmp
cmpl
sbbb
imul
mov
fs
in
popa
in
or
sarl
mov
or
xchg
pushl
sarb
stos
xchg
push
cmp
dec
std
mov
adcb
repz
xchg
fimuls
push
sti
pop
movsl
mov
jb
pop
inc
loope
ret
lods
inc
stos
ljmp
or
call
clc
cmp
jnp
mov
dec
ret
dec
jns
jg
jg
sbb
fs
enter
cmp
lret
ret
push
mov
add
imul
ljmp
pop
loop
jmp
popa
cmp
mov
icebp
xchg
jnp
lods
loope
stc
ret
imul
shl
or
mov
pop
lock
shl
mov
lock
jno
cmp
ds
cmp
sub
xchg
ret
in
cltd
mov
inc
shll
adc
ret
insb
jnp
dec
sbb
arpl
outsb
test
cmc
enter
sbb
stos
cmp
lahf
sbbb
jmp
sub
enter
adc
mov
es
testb
cmp
fsubl
shlb
scas
stc
push
xorb
and
or
pop
lcall
out
and
and
ret
mov
cmp
pop
rol
jmp
imul
mov
scas
push
add
adc
sbb
cmp
mov
in
jg
push
inc
push
adc
stc
push
fmuls
jmp
mov
mov
jns
jb
cmp
imul
mov
cmpb
icebp
inc
xchg
xchg
jns
gs
shl
pop
push
enter
cld
lods
xor
rorb
add
cmp
push
fwait
ret
imul
shlb
out
sti
fyl2x
adc
mov
jno
loop
in
mov
addb
lret
stos
lds
add
cmp
jle
dec
push
loope
mov
mov
dec
test
xchg
nop
stos
fiaddl
lahf
push
mov
push
cmp
cmp
bound
mov
mov
adc
dec
nop
xchg
mov
pop
and
dec
rol
jae
cmp
jb
sbb
ljmp
popa
lock
inc
dec
faddl
add
cmp
jg
fwait
cli
mov
inc
add
jg
hlt
ljmp
xchg
push
pusha
in
push
dec
mov
test
adc
and
mov
mov
and
cmp
cmpl
sub
popf
fisubl
mov
lods
in
mov
sarb
jns
clc
cld
gs
inc
adcl
pop
loope
stos
cmp
add
and
fldl2e
push
in
mov
xor
adcb
add
jp
mov
rorl
cmp
imul
stos
ret
push
and
hlt
mov
sbbb
push
lock
push
in
inc
repnz
mov
out
xchg
add
jg
out
mov
ret
push
jb
mov
or
bound
jmp
add
rcr
repnz
shl
push
jp
cmp
test
lret
in
imul
test
pop
adc
add
fwait
lret
jno
pop
pop
mov
mov
arpl
loop
test
add
imul
jecxz
or
repnz
xchg
aaa
or
loop
jle
stos
xor
pop
insl
shrl
mov
repz
add
imul
rclb
mov
fsubs
mov
jge
mov
push
sub
push
fldcw
mov
sub
push
and
cmp
and
adc
sahf
loope
call
mov
dec
ds
repnz
dec
add
inc
cltd
sub
ret
or
push
sarb
ja
mov
popa
stos
adc
aas
inc
sbb
push
stos
addb
pop
pop
incl
cli
ret
jns
inc
pop
test
aas
add
dec
mov
dec
push
into
outsb
arpl
loope
mov
stc
hlt
cmp
dec
xor
mov
ret
mov
or
shlb
push
sub
adc
or
and
jb
or
stos
jmp
stc
popa
cld
jbe
fimull
mov
lcall
rcrb
jmp
add
insb
mov
inc
orl
jecxz
sarl
popa
cmp
mov
jp
out
in
inc
icebp
mov
mov
xor
cmpsb
mov
xchg
and
push
jmp
dec
mov
mov
addl
mov
out
jg
adc
jns
ret
cmc
push
stc
stos
mov
mov
push
repnz
cli
inc
daa
add
lret
xchg
imul
jecxz
mov
jb
pop
jmp
rorl
sbb
mov
call
idivb
test
out
stos
ret
loope
jne
lahf
adc
sarl
push
jp
std
pop
test
stos
push
xchg
fcmove
out
bound
sbb
cmp
in
cmp
shll
add
loop
stos
cltd
repnz
or
or
in
jae
adc
nop
or
add
mov
jl
rclb
sbb
dec
pop
mov
jecxz
fs
push
xchg
pop
jnp
cmc
in
stc
inc
add
fisttpl
cmp
stos
pop
aas
out
jnp
icebp
addl
fnstsw
stc
cmp
leave
das
cltd
test
mov
add
jne
inc
mov
or
jmp
add
xchg
cmp
addr16
jae
fstps
stos
clc
iret
mov
inc
loope
mov
mov
jp
stos
test
cmp
add
in
repnz
jae
xchg
lret
and
xchg
jle
cli
lcall
imul
loopne
aas
push
roll
cmp
fld
mov
andb
stos
ret
cld
stc
loop
mov
pop
cli
fimull
jns
adc
mov
inc
ret
jp
xor
xchg
clc
lret
inc
arpl
bnd
popf
cli
mov
shrb
in
imul
fs
ret
mov
mov
loop
dec
inc
pushl
addl
xor
inc
mov
outsl
xchg
dec
mov
jp
lcall
dec
jnp
add
jnp
imul
in
pop
lcall
int3
cli
pop
shll
mov
jp
cmp
stos
icebp
stc
jnp
movsl
dec
pop
cltd
or
nop
push
adc
leave
push
imul
jp
push
sbb
mov
inc
add
pop
lret
pop
cli
jmp
andl
dec
stc
lret
jp
mov
in
jae
mov
ljmp
mov
repnz
std
enter
andb
or
mov
mov
repnz
and
fildl
rcl
xor
push
push
arpl
loop
orl
xchg
sub
jno
nop
mov
sbb
cmpb
hlt
rcll
xchg
icebp
aam
shll
clc
inc
or
pop
jns
dec
int3
xchg
mov
lock
daa
inc
mov
inc
mov
cltd
and
jbe
cli
inc
pop
addl
cmpl
mov
stos
sbb
rclb
cmp
add
arpl
cli
xor
lret
dec
xchg
mov
dec
stos
mov
adc
aas
mov
push
jge
pusha
push
mov
repnz
push
push
cltd
ret
mov
enter
subb
into
xchg
mov
jp
clc
cmp
leave
mov
or
inc
and
testl
xor
xchg
inc
sub
sbb
imul
inc
push
aas
pop
cmp
mov
push
inc
or
push
out
pop
fidivs
in
imul
loopne
fs
push
add
push
pop
push
mov
and
sbbb
popa
dec
cmp
shll
imul
pop
lods
pop
test
push
lret
inc
cmp
test
leave
mov
arpl
mulb
pop
jae
xor
jno
insl
enter
movsb
roll
xchg
adcb
mov
loop
mov
jns
lods
or
jge
repnz
sbb
jns
cli
mov
dec
inc
dec
push
inc
jnp
push
jp
pop
add
cmp
sbb
xchg
inc
lret
rorb
fldcw
xchg
push
pop
mov
cmc
ret
cld
xor
out
hlt
xchg
add
jno
dec
jnp
jge
mov
imul
mov
sarb
popa
cmp
cmpsl
imul
mov
xchg
repz
jb
xchg
jmp
stos
inc
dec
fldcw
incb
jae
xchg
lcall
out
out
mov
mov
xor
test
pop
push
aas
or
ljmp
loopne
popa
pop
leave
loop
xor
ljmp
jp
cmp
mov
jns
sti
aam
stos
fildll
mov
pop
popa
popf
cli
lret
cmp
out
adc
ret
sbb
dec
iret
mov
push
jge
leave
adcb
xor
inc
jnp
repnz
add
mov
mov
cmp
mov
mov
enter
insb
inc
sbb
xchg
repnz
mov
loopne
sbbb
mov
cmpsb
or
subl
pushf
repz
mov
fidivrs
loopne
clc
cmpsl
shll
cmp
and
sbb
xor
roll
fwait
std
nop
cltd
jnp
loop
inc
imul
xlat
or
jnp
jmp
lock
fisubrl
in
jo
and
leave
lret
pop
inc
aas
inc
and
loop
ljmp
rolb
lods
inc
test
jecxz
rcrl
stc
add
icebp
lret
rcrl
inc
test
shl
dec
leave
stc
mov
lahf
mov
loope
inc
bound
cwtl
dec
mov
jno
inc
push
pushl
icebp
outsl
dec
je
lcall
rolb
outsl
cltd
dec
jp
cmp
push
movsb
mov
cmp
pop
xlat
jno
repnz
jp
push
jecxz
lods
mov
hlt
pop
mov
in
pop
mov
push
mov
int3
sbb
and
mov
cmp
lret
popa
add
xchg
mov
jl
mov
hlt
mov
push
dec
ljmp
pop
hlt
stos
jmp
lds
xchg
jns
repnz
mov
xchg
orl
test
mov
test
inc
in
aam
dec
pop
lock
dec
shrl
xchg
dec
popa
jnp
inc
xchg
mov
add
push
jb
cmpsl
popf
mulb
pop
inc
jns
xchg
fcomps
sub
ljmp
shrl
inc
ret
dec
add
xor
push
mov
stos
xchg
addl
push
jne
sbb
aas
lds
stos
cmpsb
inc
dec
xor
mov
loope
into
mov
test
popf
dec
jns
adc
test
jb
or
cmc
adc
inc
pop
jp
xchg
jns
push
jnp
cmp
add
loope
dec
dec
mov
in
stos
lock
test
movsb
sub
jo
pop
lret
and
mov
xlat
mov
add
hlt
rorl
and
fcmovbe
adcb
push
sub
dec
mov
imul
inc
test
test
inc
xchg
xor
fiadds
sbb
jecxz
stos
arpl
mov
push
mov
jb
stc
jne
push
testl
mov
arpl
and
or
jmp
jecxz
shlb
cli
cltd
das
jle
pop
mov
pop
ljmp
mov
out
imul
xor
mov
jns
loop
aad
je
or
cli
xor
stc
push
andl
and
je
decb
icebp
mov
push
cwtl
xchg
jb
and
jnp
inc
adcb
cmpl
mull
cltd
addl
pop
xor
iret
dec
fnstcw
fldl
jmp
lahf
and
inc
clc
xchg
cmp
inc
pop
pop
and
in
popf
jmp
hlt
mov
ljmp
ret
shl
mov
inc
addr16
leave
hlt
divl
xchg
std
jge
mov
sbb
imul
mov
popf
dec
dec
pop
int
mov
hlt
mov
jle
jp
insl
mov
pop
cmp
jns
pop
in
fs
mov
je
push
imul
fisttpl
mov
add
pop
fldenv
cmpb
mov
cld
dec
mov
pop
negb
sub
arpl
dec
loope
inc
jg
mov
jl
push
cmp
jecxz
popa
mov
hlt
imul
icebp
shr
out
out
inc
add
dec
ret
dec
loop
push
ds
mov
mov
pop
push
std
repz
mov
mov
mov
inc
add
dec
test
jp
jno
lods
out
mov
subb
pop
stc
scas
movsb
push
inc
stos
mov
ret
mov
inc
lods
test
sbbb
mov
jno
pop
push
pop
inc
out
mov
stos
push
cli
and
stos
xor
jno
loope
cmp
fstl
xlat
mov
std
lcall
cmp
dec
idivl
aaa
inc
adc
stc
lahf
mov
add
roll
mov
sbb
icebp
jp
jns
imul
pop
push
xor
shll
or
pop
cmp
dec
push
cli
add
fisttps
fistl
mov
fs
push
cli
push
sbb
in
cmpl
fidivl
pop
mov
mov
orl
pop
mov
test
jge
pop
in
adc
repnz
cli
cli
xor
adc
push
stos
cmpb
jae
mov
shll
popa
cld
in
inc
push
stc
into
in
push
mov
xor
mov
xchg
push
push
pop
imul
and
and
push
mov
xchg
je
popa
dec
sbb
mov
mov
dec
pop
sub
loope
negl
push
ffreep
imul
cmpl
jecxz
xor
loop
jge
jmp
popf
sar
ds
add
stos
pop
pushf
sub
loopne
inc
cmp
loop
orb
xorl
fidivrl
pop
sbb
hlt
out
stc
stos
repnz
jge
xchg
ljmp
mov
jl
pop
repz
ret
mov
les
test
xor
jns
sbb
push
mov
out
lea
inc
cmpl
cmpl
fiaddl
xor
cld
sbb
dec
rclb
inc
jnp
pop
in
mov
lcall
stos
imul
mov
lock
jg
jecxz
shl
fldcw
push
mov
mov
mov
rolb
mov
xchg
pop
and
movsl
fdivs
xor
cmc
fiaddl
bound
mov
popa
jge
jb
loop
sahf
jns
adcl
xchg
dec
insb
sbb
in
and
shlw
adc
jae
les
xchg
dec
jns
jecxz
loope
push
test
xchg
sub
xchg
and
dec
push
jb
jns
ljmp
or
loope
mov
outsl
aam
xchg
pop
nop
cmp
adc
push
cltd
and
pop
add
dec
push
add
fyl2xp1
mov
mov
dec
jno
xchg
xor
and
pop
arpl
jg
inc
xor
dec
mov
aam
push
xchg
adc
jmp
sub
movsl
push
push
xchg
cmp
push
stos
sub
xchg
test
mov
mov
fs
xchg
cltd
cmpsl
fmull
push
push
aas
aam
and
mov
cli
jns
sub
xor
dec
xchg
fsubs
int
lods
nop
mov
adc
mov
ret
mov
imul
push
icebp
pop
push
mov
sti
inc
mov
sbb
jae
pop
xor
arpl
mov
arpl
lret
out
push
ljmp
mov
push
bound
popa
arpl
imul
in
pop
mov
sub
lods
sub
test
iret
int
inc
or
and
dec
and
jns
stos
stos
orl
mov
jmp
enter
mov
arpl
jle
fstps
stos
clc
cmp
pop
cli
mov
xor
lea
dec
jnp
mov
rorl
movsb
inc
ljmp
stos
andb
and
dec
out
pop
mov
cs
sahf
mov
mov
or
fidivl
in
cmp
out
out
fstl
mov
sbbb
or
lret
hlt
gs
out
jge
xchg
cld
mov
jge
icebp
jge
ret
jns
sahf
stos
cli
sbb
xor
test
lret
dec
xorl
test
aas
dec
lock
decl
jns
push
cld
add
push
mov
testl
xorb
sub
fcoml
imul
mov
data16
lock
mov
cmp
mov
dec
leave
loope
add
mov
sbbl
xchg
push
jno
xchg
inc
jae
gs
nop
icebp
popa
xor
dec
lret
pop
loope
jb
and
push
fwait
cmp
test
sarl
fdivrl
pop
cltd
rorl
lret
imul
popa
inc
stos
shl
jo
mov
mov
lods
test
hlt
pop
ljmp
add
inc
arpl
cmp
bound
aas
and
jp
out
ljmp
or
pop
cmpb
mov
push
and
fstpt
dec
mov
mov
xchg
cmp
pop
out
pop
pop
dec
stos
fmull
outsb
ficoml
add
pop
or
in
xchg
dec
cmp
icebp
add
inc
or
ljmp
sbb
cmp
adc
sub
shlb
roll
xchg
mov
cmpsl
jb
jae
mov
xchg
out
dec
add
sbbb
lods
adc
cltd
cli
jno
pop
xor
inc
mov
mov
xor
imul
in
scas
mov
adc
mov
scas
xchg
mov
mov
dec
loop
push
and
inc
decl
jb
pop
sarl
jmp
xchg
fisubl
cld
repnz
lcall
mov
adc
fstps
cli
ret
and
pop
or
dec
mov
and
bound
mov
cld
cli
mov
fdiv
jno
not
push
jnp
xchg
lock
nop
lock
std
xchg
mov
jns
dec
shl
add
mov
ljmp
xchg
stos
jns
push
bound
in
xchg
fiadds
pop
loop
xor
jmp
aas
icebp
adc
stos
leave
out
lock
jno
stos
jmp
orb
and
mov
jns
mov
mov
ljmp
jmp
in
orb
jno
mov
xchg
xor
cmpl
push
out
pop
shlb
icebp
pop
negb
sti
loope
pop
xor
mov
mov
fisubrl
divb
subb
lods
push
xor
xor
lcall
mov
lret
mov
add
pop
aas
pop
sub
mov
add
mov
xlat
cltd
pop
sbb
push
int3
sbb
add
mul
cltd
rolb
inc
dec
inc
sub
movsl
add
push
sbbb
xchg
in
loop
mov
ss
cmpb
lods
mov
bound
movsb
sbb
mov
lds
mov
jnp
insb
shll
fidivl
je
repnz
dec
mov
loop
cmpsl
push
mov
cmp
mov
rcll
jb
lahf
stc
adc
cmp
cmc
test
arpl
sbb
fildll
cmpb
sub
pop
dec
mov
and
add
mov
lret
inc
jns
repnz
test
cmpb
test
mov
and
inc
cmpl
lcall
andb
bound
stc
and
inc
loopne
jecxz
and
movb
cmp
jb
rorb
add
xchg
pop
jp
or
ljmp
inc
rorb
dec
mov
pop
mov
mov
in
leave
enter
or
dec
mov
repnz
fwait
ds
jno
fwait
cmp
cmp
mov
in
mov
mov
jns
xchg
inc
lret
enter
in
mov
imul
ljmp
loop
je
adc
adc
jno
push
arpl
mov
cmpb
call
cmc
mov
xorl
gs
inc
xchg
or
mov
jae
mov
add
pop
aas
sbb
lret
pop
push
insb
add
jo
inc
movsb
testb
out
cmp
aas
inc
ffree
add
fcmovb
inc
push
inc
addr16
add
lea
andl
in
stc
lock
bnd
mov
imul
cli
icebp
dec
add
or
stos
ret
popa
leave
insb
rorl
fisubrl
adc
jnp
pop
adc
push
mov
xor
adc
add
adc
shrb
test
arpl
or
mov
add
std
jo
jae
mov
cltd
loope
shlb
xchg
add
leave
test
stos
clc
aam
push
gs
inc
jnp
sbb
shll
pop
repz
jnp
imul
shll
imul
aas
dec
or
jb
jnp
mov
dec
pop
dec
push
and
bound
into
adc
jns
mov
imul
imul
mov
or
pusha
imul
inc
mov
mov
out
and
movsl
clc
icebp
fnstcw
andl
stos
dec
sbb
xchg
and
mov
pusha
iret
repnz
hlt
mov
jb
shl
loopne
enter
xchg
jae
jg
xchg
ljmp
test
mov
mov
mov
push
cld
stos
xor
ftst
jno
jns
imul
fstl
and
push
stc
pop
inc
push
jb
jg
or
sbb
mov
xor
jp
std
in
adc
dec
mov
xorl
daa
sbb
lea
mov
inc
jmp
and
sbb
dec
xchg
or
xchg
leave
pop
pop
mov
icebp
rorl
sub
dec
jge
xorl
in
jns
add
add
pop
std
int3
subl
and
and
leave
or
inc
dec
jnp
icebp
aam
jae
push
pop
and
sub
stc
inc
stc
ljmp
ljmp
imul
push
xlat
push
push
rcll
mov
pop
xor
jns
andb
aam
pop
jb
inc
lcall
adc
add
or
jns
sbb
jecxz
ret
ja
mov
mov
mov
test
shl
ss
add
inc
mov
mov
pop
cltd
cli
pusha
dec
mov
inc
cmc
jne
outsb
out
scas
mov
call
fildll
loope
repnz
insb
rorl
lahf
fwait
out
pop
sti
cmp
xchg
arpl
cmp
jne
and
test
push
mov
push
mov
xor
fsubl
cltd
aad
adc
cmp
fistps
insb
mov
or
fmull
or
cld
push
mov
xor
cmp
loope
mov
orl
mov
mov
adc
ljmp
test
push
stos
mov
lcall
mov
stc
cmp
lret
pop
out
out
and
fbld
ret
jge
ret
leave
cmp
ds
mov
clc
xor
jns
adc
fadd
jno
dec
add
loop
ret
jecxz
repz
loope
aas
negb
push
jns
or
lret
repz
jg
popa
jno
sub
in
mov
inc
fists
out
xor
hlt
xor
int3
into
mov
adc
dec
popa
add
imul
loope
outsl
mov
test
out
enter
dec
aas
jl
jns
call
dec
jle
int
mov
cmp
repz
lcall
adcl
or
mov
decb
daa
mov
fdivrp
movsl
out
stos
fsubl
daa
mov
cmp
cli
loopne
jp
mov
adcb
or
mov
in
popa
je
push
adc
loope
jns
and
xchg
push
lcall
movsl
jae
out
fldcw
icebp
fidivrl
mov
out
enter
mov
repnz
and
stos
ljmp
and
add
ret
ret
jno
lea
dec
fcoms
je
cld
xchg
inc
mov
pop
std
push
and
dec
inc
ja
hlt
push
fldcw
popa
xor
andl
pop
stos
jg
inc
out
push
shll
ret
repnz
xchg
outsb
cltd
cmp
shlb
inc
repnz
push
add
dec
repnz
dec
repnz
out
xchg
push
cmpsl
out
pop
inc
xchg
cmp
pop
fcoms
pop
add
pushf
mov
push
jb
clc
or
sub
insl
rolb
dec
fwait
stc
inc
lret
test
mov
pop
mov
lock
dec
test
mov
jb
mov
nop
push
iret
push
in
insb
ret
push
adc
inc
and
popa
loop
imul
outsl
int3
pop
aad
fs
mov
inc
mov
pop
int
lods
xor
mov
dec
mov
aam
inc
cli
sub
stos
push
roll
cmc
cmp
bound
push
shr
popf
pop
add
loop
enter
adc
mov
inc
mov
imul
xchg
mov
insl
dec
mov
pop
mov
icebp
inc
mov
mov
nop
mov
mull
ror
inc
push
dec
rcll
add
xchg
cmp
xchg
cli
stos
cmp
stos
orl
mov
popf
lods
fs
inc
shll
adc
mov
mov
add
leave
inc
outsl
adc
icebp
cld
jno
jb
lcall
mov
aaa
fisubl
mov
push
lcall
or
pop
xor
call
sbb
sbb
pop
mov
das
and
adc
ret
loopne
pop
add
subb
fnstcw
dec
repnz
cmp
dec
cmc
ds
lods
jmp
jb
lods
dec
jecxz
xor
inc
vphaddudq
test
lret
stc
cmp
push
cltd
stos
xchg
mov
cmpsl
xor
test
xor
adc
imul
adc
mov
inc
stc
mov
scas
cld
inc
rcr
mov
pop
mov
xchg
sarb
xor
jae
adc
mov
jns
dec
mov
pop
fs
xor
nop
pop
sbb
rcrl
out
push
imul
adc
xor
add
xchg
stos
leave
rorb
dec
cmp
pop
sbb
mov
outsl
xchg
js
cld
or
jns
incb
mov
mov
cmp
mov
arpl
mov
push
and
and
repnz
stos
mov
and
fdivl
das
cmp
arpl
pop
sbb
loope
adc
xor
sub
lcall
dec
jg
mov
lods
stos
mov
lahf
inc
fadd
fxch
push
repz
pop
xchg
mov
cmp
push
cmpl
inc
psubusw
xorl
xchg
mov
push
lret
xor
cmp
std
mov
leave
dec
jno
push
cmp
loop
lods
rol
mov
loopne
jae
sarl
ret
dec
push
cltd
stc
mov
into
stos
cld
cmp
push
das
mov
lret
push
mov
add
popa
cmp
push
incb
pop
push
bound
dec
inc
lret
int3
rcl
jp
pop
or
bound
dec
jae
inc
dec
dec
test
stc
addl
sub
fnstenv
sub
jne
rcrl
add
shrb
push
xchg
xor
fidivrl
or
fsubrs
jge
arpl
insl
add
xchg
xorl
mov
dec
push
inc
cmpb
out
popa
add
stc
stos
dec
imul
int3
dec
loop
fisttps
pop
test
mov
xor
ljmp
sbbl
negb
inc
sti
subl
sub
adc
pop
push
jae
jns
adc
sti
adc
jmp
addb
mov
push
cli
mov
jnp
add
arpl
jae
mov
lock
add
xchg
inc
push
rorl
xchg
sbb
je
popf
adc
loop
mov
dec
bound
mov
dec
cld
lcall
mov
mov
cld
mov
shll
add
push
aam
pop
shlb
popa
addb
pop
mov
mov
test
pop
imul
stos
xorl
cli
mov
lcall
push
mov
mov
cmp
stc
mov
xor
add
insb
jnp
inc
loope
lock
mov
mov
call
cmp
inc
push
or
inc
xchg
rorl
xor
jmp
ja
inc
stc
add
sub
inc
dec
push
aam
adc
mov
lcall
mov
inc
repz
push
add
inc
jno
or
ret
icebp
and
lock
jmp
test
ljmp
xchg
je
inc
enter
mov
cmp
mov
and
stc
dec
aas
out
inc
inc
aas
sbb
jle
pop
dec
inc
cmp
adc
stos
cmpsl
xchg
mov
enter
sbb
fiaddl
pop
mov
add
cmp
test
fadd
xor
mov
mov
mov
fsts
test
pop
dec
imul
aas
dec
leave
jno
inc
aaa
enter
std
in
push
arpl
pop
lods
xchg
add
xor
stos
dec
in
dec
pop
inc
jns
jp
pop
cmpb
leave
jns
aas
sbb
out
and
roll
inc
or
add
cmp
adcb
inc
mov
xlat
mov
aaa
fisttps
xor
jnp
mov
in
xor
xor
mov
and
int3
mov
out
adc
and
cmp
adc
ret
xchg
popa
outsb
lods
loop
test
pushf
mov
inc
inc
pop
push
cld
inc
pop
jle
lret
or
jecxz
dec
adc
adc
mov
imul
push
xchg
xor
repnz
pop
loope
in
jns
xchg
jbe
lcall
fldcw
dec
inc
dec
int3
cmpb
jmp
shrb
pop
aas
in
inc
cmp
clc
xor
cmp
or
push
mulb
pop
jo
icebp
shrd
xchg
sbb
das
loope
xlat
lcall
ss
stos
pop
das
push
pop
jnp
dec
roll
adc
ret
xor
jb
test
sahf
mov
leave
mov
test
adc
or
ljmp
cld
ret
clc
or
mov
loopne
stos
pop
jo
stc
lret
and
mov
ficompl
mov
jge
push
rcrl
fdivr
stos
cmpsl
pushl
jns
ljmp
rorl
jge
adc
push
pop
xchg
cmpsb
inc
mov
mov
in
xchg
inc
and
lcall
add
mov
mov
roll
imul
loope
inc
movsl
mov
imul
add
mov
adc
mov
lret
mov
dec
in
icebp
stos
inc
fsubl
fiaddl
sub
and
inc
inc
repnz
jno
lcall
loopne
bound
int
inc
xchg
add
mov
mov
sub
add
xchg
inc
jg
or
fsts
and
lock
leave
stc
cli
mov
add
daa
push
icebp
mov
push
cmp
jb
or
inc
sbbl
imul
jecxz
jae
adc
jno
lock
sti
mov
jae
xchg
jne
add
cli
lods
popa
mov
cli
pop
fsts
jno
ret
imul
dec
js
inc
mov
inc
dec
dec
imul
or
xor
stos
jg
xor
jge
dec
bound
cmp
stc
hlt
inc
fisubs
add
mov
mov
pop
jns
out
seto
scas
hlt
call
xor
in
jp
mov
inc
add
test
loopne
jmp
sbbl
out
jge
mov
test
fiaddl
inc
stc
push
jnp
push
cmp
mov
stos
xchg
ljmp
and
popa
inc
fs
stc
lock
insb
stos
dec
cli
mov
in
subl
mov
jns
loope
lcall
pop
jbe
subl
jp
or
cmp
ret
int3
je
and
pop
repnz
ret
jge
testl
jmp
lcall
mov
ret
pop
andl
mov
mov
ljmp
icebp
push
fsubrs
jnp
cli
in
jae
stc
imul
fimull
sbb
inc
mov
incb
mov
dec
xchg
lods
cmp
icebp
loop
mov
lock
sub
xor
push
mov
div
mov
lods
dec
loope
scas
in
push
mov
in
or
inc
rol
sub
mov
shrl
stc
pop
lcall
jl
push
or
mov
cltd
jno
push
pop
fists
pop
insb
dec
mov
sub
out
mov
rclb
cmp
adc
test
xor
xorb
ret
mov
mov
mov
pop
jle
in
in
push
and
hlt
lods
andl
enter
insl
insb
mov
pop
out
sub
lods
roll
scas
leave
subb
aas
fwait
je
pop
fcmovnbe
into
and
cmp
sub
cld
mov
add
ret
dec
lds
and
enter
push
call
hlt
dec
jp
fisubrl
loopne
bound
inc
rcrb
cmp
push
and
and
cmp
dec
cld
xor
mov
mov
add
stc
pop
add
in
ljmp
push
mov
add
mov
push
je
pop
arpl
repnz
aam
std
movsb
bound
or
lcall
out
dec
leave
sub
jo
es
xchg
mov
scas
mov
rcrl
adc
shr
cli
push
mov
loop
rorl
push
repz
imul
fidivrl
add
jp
xor
mov
jnp
fmuls
cmp
int3
adc
xor
jg
jge
mov
test
push
jmp
lods
repnz
add
xor
jp
bound
inc
mov
xorb
mov
and
leave
jb
fcmovbe
imul
mov
or
dec
stos
je
lods
pop
jno
push
cmp
mov
mov
add
push
stos
test
sarl
xchg
cmp
neg
addl
fidivrl
imul
add
dec
fldcw
or
out
in
dec
ret
rcr
bswap
push
dec
ljmp
xor
add
lcall
and
aaa
lahf
mov
pop
pop
lcall
ds
sbb
sbb
loopne
insl
add
imul
outsl
mov
pop
imul
repnz
repnz
outsb
loop
repnz
pushf
jns
push
add
arpl
mov
popf
mov
mov
inc
cmpb
pop
add
sar
push
test
in
xor
and
inc
xor
add
sbb
lcall
arpl
and
dec
cli
mov
mov
fadds
leave
pop
icebp
push
jmp
hlt
mov
jo
addl
lret
mov
inc
bound
add
xor
jo
ret
cli
jbe
fdivl
shl
jp
repnz
push
push
int3
mov
in
bound
pop
push
push
xchg
fnstsw
jmp
rol
rclb
leave
mov
aad
push
xchg
inc
stc
cs
loopne
fcmove
sarl
mov
dec
addl
nop
sub
rcl
mov
lret
fsubrl
repnz
sbb
cltd
test
mov
or
mov
stos
jecxz
mov
inc
pop
sarb
jb
xor
cmpl
in
leave
cmc
jns
add
shr
loope
inc
mov
lcall
sub
or
stc
mov
imul
ret
daa
int3
call
mov
xor
push
jp
jb
out
jae
mov
cs
cmc
in
imul
or
xor
pop
inc
xchg
and
push
mov
mov
stos
cmp
stos
xor
jp
sbb
inc
lret
xchg
int3
shrl
push
rclb
mov
and
sbb
stc
addb
cmpb
ja
mov
dec
xor
inc
mov
je
push
jp
ljmp
mov
mov
inc
mov
or
arpl
lret
test
and
outsb
inc
cmpsb
loop
fisttpll
fdivrs
in
cmp
xor
mov
aas
enter
jge
inc
fcompl
jb
sub
dec
pop
mov
cmp
jnp
jns
fiaddl
dec
or
loopne
arpl
inc
adc
inc
movsb
sbb
shll
push
insb
cmp
enter
cmp
mov
mov
icebp
cmp
mov
jnp
sbb
jae
int3
jns
adcl
mov
cli
sar
push
mov
xchg
pop
repnz
out
and
pop
xchg
rcrl
ret
dec
stc
mov
push
cmp
dec
sbbb
mov
dec
push
fisubrl
das
mov
pop
in
push
lock
not
cli
sub
loop
push
leave
cli
mov
mov
lret
jge
inc
inc
cltd
adc
push
dec
and
mov
icebp
clc
xor
jmp
ret
jecxz
shrl
popa
mov
adcb
fisubrl
or
scas
daa
dec
bnd
mov
mov
mov
mov
add
shll
adc
fidivrs
dec
jns
sub
inc
add
inc
xor
sahf
cmp
jp
mov
sbb
and
cmp
sub
out
lret
arpl
inc
nop
nop
xchg
ss
popa
fnstenv
sub
scas
xchg
push
addl
and
cli
mov
leave
jae
cmp
mov
mov
mov
ljmp
mov
stc
out
shl
push
inc
jp
dec
or
into
xorl
push
xor
ljmp
nop
mov
scas
leave
or
mov
push
or
xorl
inc
lock
sarl
push
mov
fdivr
mov
stc
popa
ss
clc
icebp
ss
mov
adc
lods
pop
dec
repz
jle
popa
cmp
ljmp
insl
dec
mov
xor
les
xor
dec
stos
lods
mov
in
imul
cmp
inc
jecxz
icebp
mov
or
lret
aas
shrl
rorb
push
ljmp
adc
inc
xchg
loope
arpl
cmc
loopne
push
movsl
aad
and
bnd
mov
stc
jmp
fadds
mov
jmp
stos
mov
cmp
mov
push
pop
and
fwait
xor
je
in
lret
mov
add
rorl
jecxz
adc
jb
xor
repnz
stos
test
jb
cmc
inc
cmp
jno
jmp
fcoml
rcr
sub
jp
adcb
mov
repnz
pop
in
xor
lea
mov
leave
inc
add
testb
cmp
lods
shr
jnp
mov
cmp
ret
jae
pause
scas
int
aas
sbb
and
push
fs
inc
xor
loop
jmp
in
cmp
fistpl
outsl
push
icebp
mov
arpl
mov
loop
sbb
mov
stos
jnp
jmp
movsb
xor
jae
and
jo
cmc
or
insl
push
or
jb
inc
add
sub
lcall
lret
add
mov
sbb
or
shrl
rcll
jp
pop
in
inc
mov
lret
stc
ljmp
cmp
or
rep
loop
jb
or
addl
pusha
cmp
adc
roll
arpl
imul
cmpl
hlt
xor
mov
push
imul
decb
xor
sti
cmp
mov
std
mov
pop
inc
insb
xchg
stos
arpl
mov
dec
mov
shlb
mov
mov
repnz
push
test
or
cmc
pop
pop
repnz
inc
cmc
and
lahf
jecxz
cmp
xor
movsl
and
mov
std
punpckhdq
and
cmp
sahf
int3
cltd
dec
lcall
mov
jo
dec
ds
shr
xchg
push
arpl
xchg
stos
push
out
dec
ret
int3
addl
dec
sbb
out
loope
jnp
dec
icebp
pop
mov
jns
lret
pop
stc
cltd
and
jae
subl
rcrl
cmp
mov
xchg
pop
int
pop
std
adc
jae
adcl
mov
sbb
arpl
add
jno
adc
push
popa
inc
mov
add
lea
or
movsl
mov
push
ret
stos
fcompl
clc
jmp
jb
push
mov
mov
imul
pop
dec
daa
xchg
or
hlt
dec
icebp
mov
xchg
subb
aas
sarl
sbb
jbe
loop
lods
fs
mov
bound
or
mov
adc
cltd
inc
aas
add
jb
ljmp
sarb
cmp
icebp
mov
jns
pop
ror
int3
mov
loope
xchg
int
mul
jl
in
mov
add
leave
je
pop
test
inc
and
jp
ror
popa
jmp
and
ficoml
fidivl
lods
imul
loop
insl
mov
cmp
rorl
lods
arpl
jno
mov
mov
idivb
xchg
loop
enter
push
jnp
mov
pop
shlb
arpl
dec
enter
ficoml
mov
cld
xor
push
fdivl
loope
enter
stos
sbb
incl
xor
inc
pop
or
daa
in
mov
pop
push
lock
dec
lods
mov
xor
leave
pop
jmp
inc
stc
inc
dec
loop
lret
ljmp
mov
and
mov
inc
cmp
and
idivl
aaa
hlt
aas
inc
fscale
add
jnp
stos
xchg
inc
js
bound
out
loope
mov
cmp
or
lock
inc
out
mov
lods
xor
hlt
inc
xchg
stos
sarb
xchg
jns
inc
imul
push
imul
cmp
dec
xor
insb
mov
addl
adc
cmc
and
xchg
fisubs
loope
test
shll
pop
ficoms
icebp
ret
pop
cmp
loopne
and
shr
lods
jae
or
sub
add
shlb
fdivrl
or
pop
cltd
sbb
cmpsb
test
mov
jge
fidivrl
or
arpl
sub
cmp
jo
jb
mov
pop
mov
leave
push
or
ret
mov
xor
lock
repnz
loopne
ljmp
add
sub
fmull
and
loop
mov
bound
jmp
imul
icebp
loope
jae
inc
rcrb
or
mov
enter
mov
dec
je
in
cmpl
popf
insl
jp
lret
call
adc
stc
cmp
mov
and
arpl
lods
icebp
bound
test
dec
jle
xor
xchg
lret
popa
movsl
icebp
add
xor
jb
mov
orl
cli
pop
daa
out
movsl
mov
inc
cmp
dec
mov
lcall
sbb
jno
fldt
xlat
lahf
push
cltd
ret
aas
xchg
jnp
fnsave
mov
ljmp
sti
mov
pop
add
or
dec
pop
rcrl
mov
mov
push
push
arpl
loop
cmp
jg
in
push
roll
icebp
test
xor
cltd
cmpsb
and
cmp
cmp
cmpb
fimull
inc
xchg
inc
push
ljmp
or
add
jae
inc
jne
push
scas
inc
shl
inc
pop
fldcw
jg
mov
inc
clc
mov
cld
rorl
xor
sbb
xchg
xchg
and
adc
sbb
leave
arpl
or
jecxz
int3
cltd
mov
push
shl
pusha
sahf
add
ficoml
or
pop
inc
push
stos
cmpl
shll
and
xchg
mov
repnz
mov
ror
xor
clc
xor
or
inc
mov
push
ret
out
sahf
add
mov
rorl
jnp
add
push
jp
adc
aam
sbb
aas
inc
mov
sub
pop
shrl
sahf
adc
adc
xor
and
mov
pop
lods
mov
dec
adc
test
mov
fs
je
cmpps
xor
pop
icebp
jns
popa
rcl
mov
xchg
sub
sbb
js
arpl
icebp
adc
cmc
jbe
ss
leave
fcmovu
imul
aam
xor
and
jae
adc
jp
inc
mov
xchg
jmp
push
mov
jno
mov
mov
in
imul
test
int3
out
adc
push
fimull
dec
aas
pop
mov
mov
sbb
enter
inc
xchg
mov
ret
ljmp
add
loop
pop
add
sub
sbb
mov
shlb
imulb
cltd
xchg
ror
les
roll
xor
cwtd
ja
push
lock
rcrl
or
leave
rcr
jno
mov
int3
jbe
ret
pop
mov
out
cli
add
jns
loope
mov
push
imul
sbb
mov
popa
test
sbb
xchg
arpl
add
adcb
jle
out
insb
mov
mov
push
or
mov
push
jns
pop
popf
jnp
sbb
popf
ret
mov
cltd
mov
je
loope
jae
jae
jmp
cmp
fbstp
xchg
pop
in
in
jno
dec
jecxz
jb
sahf
mov
stos
out
sahf
lods
out
adc
mov
loopne
bound
xor
dec
and
adc
or
rorl
jno
inc
push
loopne
inc
int3
cli
imul
stos
cmpsb
fmull
lcall
jnp
sbb
mov
push
ljmp
jae
or
inc
cli
inc
stc
push
add
popa
shrl
pop
jecxz
xchg
cmp
cmp
mov
cmpb
stc
out
call
fnsave
fsubr
enter
orb
mov
int
inc
mov
shr
pop
imul
mov
ss
stos
addl
in
jg
xchg
std
jb
jmp
fisubrs
fdivrs
bswap
into
mov
scas
inc
xor
jecxz
push
ljmp
mov
mov
cltd
subb
cli
add
popa
stos
fidivl
xchg
loope
mov
dec
enter
clc
fnstenv
jnp
daa
inc
imul
test
loopne
cmp
jbe
repnz
jmp
sbbl
punpckldq
inc
add
push
gs
cltd
jb
lds
ret
arpl
mov
rorl
cmp
js
stos
pop
mov
pop
cmp
push
mov
sar
iret
in
jg
push
jg
aad
jbe
lret
xchg
inc
call
mov
jns
add
sbb
inc
inc
fldt
mov
xorl
add
bound
imul
sbb
es
jb
fisubrl
in
inc
int3
into
push
mov
shll
and
daa
icebp
sbb
adc
adc
push
fnstcw
aad
jge
orl
xchg
mov
mov
shl
cmp
or
and
mov
mov
clc
cltd
ljmp
testl
popa
and
sub
cmp
jae
adc
inc
cli
jle
xchg
lea
dec
arpl
cmp
or
out
ficompl
lret
orb
add
mov
mov
cli
push
add
pop
and
test
push
jns
insb
dec
lcall
lret
into
cmp
ljmp
and
xchg
bound
arpl
loop
mov
or
dec
repnz
inc
mov
adc
xchg
and
loop
ljmp
stos
enter
mov
lret
inc
ret
mov
ljmp
arpl
mov
cmc
dec
jnp
jge
imul
cmp
into
ljmp
xor
inc
mov
leave
icebp
xor
rcll
ret
adc
and
adcl
pop
into
inc
xchg
enter
push
dec
in
shl
scas
jge
jno
movsl
jnp
cmpl
mov
pop
jecxz
sbb
and
bound
repnz
incl
jnp
sub
lea
stc
into
popf
test
inc
and
cltd
aas
imul
inc
cli
dec
out
insb
mov
out
subl
pop
out
adc
sub
mov
pop
jb
mov
cmp
stc
cmpl
mov
aad
das
or
mov
roll
xchg
push
adc
xlat
and
add
cltd
jns
mov
mov
add
mov
add
mov
jns
fcmovu
add
mov
bound
or
mov
xchg
fnstenv
push
push
cmp
into
mov
inc
jle
jnp
mov
pop
dec
popf
stos
jp
fstpt
insb
and
push
popa
fstpl
stos
jae
inc
mov
pushf
sbb
je
mov
out
add
dec
and
jnp
xchg
jnp
mov
pop
dec
movsb
jecxz
add
lret
icebp
mov
leave
iret
ds
ljmp
loope
repnz
xchg
imul
inc
stos
jb
arpl
ret
dec
stc
rcll
mov
mov
xor
aam
andl
push
and
pop
stc
xchg
out
repnz
ret
push
add
mov
push
sarl
jns
cmp
cli
pop
mov
in
stos
push
cld
sub
in
push
cmp
enter
push
inc
pop
push
shrb
adc
arpl
loope
cmp
das
icebp
cltd
or
inc
mov
pop
and
test
loope
xchg
stos
mov
mov
pop
andl
xchg
mov
jne
inc
adc
or
je
mov
xchg
arpl
ret
inc
ret
jp
push
mov
andl
fcoml
movsb
mov
xchg
pop
cmpb
pop
or
cs
fcmovnu
repnz
inc
in
insb
xor
subl
rcrb
and
fcmovbe
cmp
inc
push
fs
lcall
mov
mov
loop
cmpsb
mov
xor
jle
out
xlat
lcall
imul
push
sbbb
lock
mov
and
push
mov
mov
je
add
pop
cli
loopne
pop
lock
dec
enter
mov
aad
insb
adc
cmp
mov
scas
jo
push
in
xor
and
icebp
outsb
cli
movsb
push
and
lcall
xchg
add
xchg
je
ret
or
dec
inc
or
aad
cmp
inc
not
ss
push
mov
cmp
lret
int
inc
dec
mov
in
inc
jns
nop
arpl
xchg
lock
push
popf
je
mov
loop
adcb
fistpl
in
inc
jg
stos
mov
into
mov
test
jno
cmpsl
roll
adc
mov
loop
xchg
ret
pop
xchg
sahf
mov
sarl
icebp
cmp
lret
fwait
outsl
and
xorl
mov
mov
loopne
mov
pop
ljmp
aas
mov
mov
mov
lea
pusha
push
insb
jmp
lcall
or
ret
imul
loopne
lds
loope
dec
jg
mov
mov
sbbl
add
pop
in
inc
pop
fiaddl
pop
clc
movsl
loop
jnp
lods
jnp
mov
jns
add
mov
pop
sarl
xor
insl
icebp
test
cltd
xor
dec
mov
pop
dec
popa
cmp
xchg
xor
std
mov
repnz
add
int3
cmp
push
inc
cmp
nop
int3
fwait
mov
mov
leave
and
inc
cmovp
hlt
inc
imul
mov
inc
push
inc
pop
jge
adc
inc
dec
imul
orl
loop
xchg
rorb
push
loope
insb
popa
imul
xchg
sarl
lock
in
sarb
or
fcmovb
xor
xchg
dec
fisubrl
imul
mov
rcrb
sub
add
or
fmulp
cli
inc
pop
pop
or
shrl
push
clc
push
jnp
cs
push
imul
std
push
mov
shlb
inc
mov
mov
lods
dec
xor
mov
insl
dec
add
ljmp
sub
mov
sub
sub
orl
inc
lds
addl
ljmp
jae
dec
jp
xlat
mov
bound
mov
aas
dec
cld
jns
mov
loope
adcb
fldcw
pop
dec
pop
mov
cmp
or
in
dec
add
sbb
lret
jp
mov
dec
ret
rcll
insb
lret
lods
hlt
pop
mov
jmp
stos
add
cmc
aas
pop
std
shll
cld
stos
xchg
pop
arpl
push
popa
shlb
xchg
mov
adc
mov
loope
sarl
sbb
enter
xor
fdivrs
in
mov
mov
cmp
pop
insl
cli
cmp
insb
lcall
fldenv
jns
stos
inc
xchg
xor
sub
mov
orb
ljmp
popf
loop
add
jp
xor
lret
cwtl
mov
imul
jg
cld
dec
inc
pop
jns
fimull
pop
into
leave
icebp
je
push
add
inc
xor
cmpl
mov
out
sbb
pop
popf
ljmp
push
jno
mov
pop
cmpb
ret
adcb
lcall
jae
notl
arpl
dec
ljmp
icebp
orl
mov
decb
loopne
sbb
ljmp
push
popa
push
jnp
mov
ret
dec
shlb
mov
sbb
roll
jb
aad
fiaddl
pop
adc
mov
push
repnz
cmp
push
shr
into
sub
inc
mov
cli
gs
add
lret
orb
loopne
into
xchg
outsl
pop
and
icebp
pop
push
mov
dec
jb
dec
addl
lret
pop
sbbb
mov
push
jnp
pop
add
orb
std
sbb
stc
test
in
bound
lret
sbb
popa
or
cmp
in
imul
lods
mov
dec
shlb
ds
je
adc
loopne
repnz
fildl
sub
sar
xchg
xor
dec
mov
fmull
ret
xor
add
cmp
lcall
sbb
jp
mov
dec
add
stc
mov
stos
lods
popa
sti
je
in
loope
enter
mov
pop
imul
pop
xlat
cmp
sbb
dec
cmp
popa
sti
or
sub
aam
jno
cmpsb
and
leave
pushf
call
mov
ret
das
push
sbb
lods
arpl
adc
xchg
fidivl
stc
jno
repnz
in
shl
test
push
cmc
arpl
push
xchg
fisubl
test
pop
xchg
in
jmp
stc
add
test
ljmp
loope
leave
cmp
mov
mov
pushf
inc
repnz
jne
test
xchg
mov
inc
jne
sahf
leave
jp
popa
std
bound
inc
push
cmp
loope
dec
shll
lds
inc
lods
andb
fnstenv
pop
dec
sarl
fdivrs
mov
xor
inc
imul
stc
or
in
shll
xchg
loopne
cmp
pop
mov
sbb
inc
hlt
leave
or
jmp
fisttpll
es
jae
jne
popa
adc
sbbl
or
jmp
rorl
jno
xor
test
addb
xor
and
or
lcall
jno
xor
sub
mov
cmp
fsubrp
push
imull
in
push
test
fsubrp
ror
sti
fldl
bound
or
daa
adc
test
mov
hlt
adc
lret
push
aas
sub
push
negl
push
shr
pop
cmp
bound
pop
jecxz
sub
mov
xchg
fmulp
or
and
jnp
add
adc
mov
xor
push
insb
dec
adc
mov
inc
fisubrs
clc
fnstenv
pop
stos
outsb
cmp
jge
jle
mov
repnz
int
mov
cld
fcomip
dec
stos
dec
repnz
je
mov
pop
loopne
fptan
push
loopne
xchg
add
nop
fwait
stc
sub
jbe
sarl
pop
bound
cmpsl
fdivrl
cmp
scas
stos
push
sbb
push
push
mov
negb
sbbb
pop
jge
xor
jmp
xor
sbb
sbb
cmpsb
cmp
mov
xor
pusha
lds
dec
dec
fiaddl
or
mov
andb
jae
imul
adc
int3
jns
jmp
fmuls
mov
shll
mov
xchg
dec
and
outsb
cmp
or
icebp
pop
xor
arpl
and
stc
ja
repnz
not
orb
icebp
jno
aad
andl
xchg
jg
jno
fwait
push
push
and
cmpsl
in
jno
sbb
subb
xor
inc
test
orl
xchg
loope
mov
push
adc
int3
enter
fxch
and
orl
cmpsb
loopne
push
clc
data16
add
adc
jmp
cli
jp,pt
popf
or
mov
xor
lcall
adc
ror
pop
pushf
fwait
sahf
rcrb
jno
cmp
jae
adc
dec
int
push
push
adcl
icebp
jo
movsl
mov
cmp
jae
cmp
jb
push
mov
cmp
and
mov
mov
stos
mov
cmp
pop
mov
cmp
mov
sahf
ljmp
dec
xor
add
lods
test
nop
inc
mov
adc
xchg
rclb
push
out
cmpsb
movsb
push
loopne
pop
inc
sub
sbb
aam
ljmp
je
inc
lods
inc
cli
test
sbb
bound
shlb
fcomi
ds
push
loopne
call
shl
sub
jp
orb
add
jb
add
jo
push
inc
jae
ret
arpl
mov
pop
repnz
icebp
addr16
pop
lcall
mov
fsubrs
mov
ljmp
jae
popa
jecxz
outsl
ror
mov
lret
xchg
ret
inc
add
mov
inc
sbb
cmpsb
dec
inc
cmp
and
cmp
popa
pop
cmp
int
adc
insl
sbbb
lock
jnp
lock
jae
xor
mov
ret
insb
mov
mov
add
call
addb
jns
mov
ret
ret
jb
andb
mov
mov
push
mov
cmp
pop
popf
dec
push
test
icebp
add
rcll
jle
andb
stc
inc
loop
cmp
mov
sahf
int
inc
fstps
jmp
idivb
pop
pop
loop
mov
jnp
and
enter
xor
roll
cmc
gs
lret
add
ret
test
in
xor
jp
pop
push
xchg
in
fsubl
inc
ljmp
dec
or
mov
nop
fistl
mov
cmc
dec
xchg
push
dec
stc
out
add
mov
jmp
sahf
loope
jae
clc
dec
mov
sbbl
addl
jmp
and
loop
lahf
sub
push
imul
mov
mov
lock
ljmp
popa
pop
cld
xor
cld
jp
mov
mov
push
add
icebp
lods
rcrl
jp
xor
lock
lret
mov
jno
out
inc
repnz
int3
out
std
inc
fidivrl
in
pshufw
push
sub
or
aam
imul
test
dec
mov
jns
pop
push
imul
mov
sar
arpl
rcrb
dec
sbb
add
repnz
xor
or
aaa
scas
ficomps
sbbl
andb
mov
imul
ret
xor
cmc
mov
imul
js
stos
cmp
and
pop
xchg
mov
xor
xorb
inc
shl
inc
xor
fptan
aam
xchg
cmp
sbb
sbb
orl
jno
xchg
loope
mov
add
push
ret
mov
hlt
mov
mov
insb
pop
sbb
jno
jg
loopne
jle
cli
insl
ljmp
sub
mov
ljmp
mov
cltd
nop
addb
mulb
add
jb
push
dec
fistpll
dec
cmp
push
jmp
add
and
sub
pop
ljmp
inc
push
lea
cld
shl
orb
test
push
cmp
jno
adcb
mov
push
jecxz
in
ficompl
test
mov
lret
push
cmp
sbb
xorb
lret
stos
mov
add
push
mov
rclb
xorl
cli
mov
sbbl
dec
ljmp
jnp
sbb
mov
sbb
xchg
dec
lcall
cmp
dec
mov
and
xor
dec
or
mov
imul
mov
cmp
jg
jp
mov
jecxz
cmp
clc
outsb
leave
xor
jns
pushl
ficoml
push
mov
jno
loop
jp
ret
jp
ljmp
push
xor
ljmp
sbbl
test
cmp
imul
mov
jns
ja
cltd
jns
roll
jg
mov
aad
mov
std
scas
pop
jnp
push
adc
jg
inc
adc
add
push
orl
dec
inc
lods
movsb
push
test
pop
outsb
cmp
sbb
xor
loopne
cmpl
sti
mov
mov
inc
ret
inc
std
or
jp
mov
xor
and
scas
add
lods
mov
in
dec
mull
repnz
adc
xor
orb
shlb
pop
sbb
dec
dec
adcl
mov
inc
mov
ret
ror
mov
jno
xchg
add
xor
jp
and
and
dec
lds
cmpsl
xchg
push
add
pop
dec
aas
jnp
jae
push
cmp
and
sub
pop
stos
mov
push
jae
cmp
neg
xchg
cmp
nop
mov
push
rcr
insl
orb
mov
and
sarl
cld
inc
cltd
flds
test
push
jge
mov
stos
dec
inc
cmp
icebp
orl
and
dec
ret
jnp
cmp
jno
jno
stc
popa
dec
out
push
fdivs
out
fiaddl
pop
subl
mov
loop
bound
cmpl
xorb
stos
jecxz
loope
dec
dec
hlt
iret
dec
xor
out
push
shll
sub
mov
std
inc
push
cltd
inc
mov
mov
in
push
pop
cli
push
push
sub
test
jmp
popf
mov
fsubr
xchg
out
andl
mov
out
cld
jne
mov
dec
movsl
xlat
test
sti
xorl
xor
cmp
xchg
dec
in
inc
mov
ljmp
mov
add
insb
stc
imul
mov
mov
mov
pop
dec
icebp
inc
popa
xor
scas
in
repnz
fimull
int3
inc
cmp
inc
nop
push
imul
inc
push
mov
fcomip
imul
call
lret
xor
nop
adc
cli
mov
xor
mov
push
sti
fnstcw
shll
add
and
in
push
aas
lods
push
mov
clc
mov
icebp
jp
inc
mov
enter
mov
pop
lea
jle
adc
pop
fdivr
das
fcompl
push
sbb
push
mov
dec
iret
in
ljmp
inc
fcompl
fisubs
pop
ljmp
mov
cmp
enter
and
mov
cmpsl
pushf
jp
icebp
cmp
pop
dec
test
pop
inc
jb
ret
stos
lock
in
inc
fcomps
jo
dec
jge
in
mov
push
pop
arpl
ds
ljmp
or
mov
roll
cmp
int3
scas
mov
pop
lcall
jnp
ret
ja
scas
in
stos
mov
pop
std
add
jmp
mov
stos
int
jp
pop
lcall
push
mov
mov
mov
xor
push
inc
cltd
dec
fadd
cmp
cmp
data16
test
ja
fimull
clc
sub
loope
popa
sti
dec
fsubr
adc
mov
jbe
cs
and
out
mov
inc
or
push
mov
mov
and
loopne
mov
rorb
insb
ret
andb
out
mov
cmp
pop
mov
sub
and
repnz
push
inc
push
add
mov
fsqrt
sbb
xchg
pop
movsb
mov
sbbl
pop
fidivl
add
inc
sbbl
jbe
or
push
add
rcrb
mov
pop
repnz
and
es
mov
mov
push
or
imul
addr16
sub
mov
outsl
push
pop
add
xchg
lcall
sbb
xchg
dec
lods
dec
xchg
decb
add
cmp
add
stos
dec
jne
dec
cli
add
pop
mov
mov
sti
inc
cmpl
mov
stc
cs
jns
adc
bound
xor
dec
imul
imul
pop
cmp
jne
idivl
icebp
xor
push
popa
insl
pushf
loope
pop
lret
stos
mov
adc
mov
or
or
mov
rcr
xchg
loopne
lock
push
int
ret
or
jp
stc
popf
adc
inc
mov
pushf
lcall
jle
push
push
popa
bound
cltd
add
sarb
dec
movsl
sub
fisubl
hlt
fsubrl
clc
std
push
add
inc
hlt
dec
jno
ljmp
and
xor
idivl
fs
popa
aaa
mov
test
mov
lds
xchg
sbb
inc
dec
rorb
mov
mov
lcall
dec
jmp
xor
xchg
popf
subl
aas
xor
mov
pop
adc
loop
push
repnz
push
cmpsl
stc
int3
ljmp
addr16
data16
fldl
mulb
jae
jp
orb
cmp
mov
imul
jnp
in
stos
sbb
movsl
fmull
jno
cld
fldt
xchg
jp
inc
add
leave
notl
inc
je
xor
xor
mov
jecxz
lods
fisttpl
lret
xor
dec
mov
call
loope
cmpb
sub
outsb
cmp
xchg
shrl
push
inc
sub
int3
jl
push
fxch
adc
loope
in
push
ret
xor
in
lret
mov
adc
and
push
daa
cmpsl
xchg
mov
dec
jecxz
cmpl
enter
mov
sti
jae
out
stos
in
mov
imul
or
jb
movsl
sub
dec
dec
cmp
jg
pusha
push
in
ret
movsb
shll
lods
mov
cltd
push
xlat
add
stc
aas
xchg
imul
jg
add
stc
fmul
sub
mov
inc
out
dec
aad
lea
popa
insb
push
jb
ljmp
and
lcall
jge
inc
in
inc
insb
fldcw
pop
push
ret
mov
jno
stc
jns
mov
ret
pop
jecxz
mov
mov
mov
and
mov
lcall
push
mov
shr
into
push
decb
ret
xchg
sti
or
jno
lcall
mov
subl
mov
mov
bsf
dec
jle
mov
and
push
jne
flds
push
jbe
ficoml
std
leave
lcall
inc
push
in
aad
push
jno
outsb
jae
ficoml
rcll
test
jmp
inc
xchg
lret
pop
leave
mov
lods
icebp
pop
mov
pop
pop
inc
ret
mov
in
popa
arpl
pusha
push
cli
out
push
xchg
mov
shll
imul
jecxz
mov
adc
xchg
jmp
scas
orl
rcl
and
arpl
mov
orb
push
cltd
add
jnp
mov
pop
push
shll
jg
ljmp
aas
mov
pop
jae
mov
cmp
pop
adcb
test
dec
add
push
inc
pop
cltd
xchg
jg
xchg
test
jb
mov
and
cmp
pop
mov
cmp
mov
mov
icebp
cltd
jno
inc
jns
shrl
loopne
mov
xchg
add
imul
shlb
shlb
cmpsb
pop
cmp
test
push
adc
xchg
orb
enter
push
jae
cmp
push
jle
mov
int3
imul
dec
cmpsl
enter
icebp
mov
mov
and
push
mov
push
pop
stos
ljmp
in
rolb
ds
orl
sbb
fisttpl
scas
loop
enter
lods
loope
dec
add
xor
push
dec
mov
xor
pop
aad
arpl
jns
stc
ret
leave
icebp
test
xor
fsubr
popa
mov
arpl
xor
addb
sub
sub
ret
insl
jg
pop
bnd
andb
stos
jns
dec
mov
jp
test
xor
out
arpl
mov
mov
loop
jb
arpl
jno
push
orb
mov
and
test
adc
cmp
loop
sbbl
mov
ja
stos
fnstenv
jbe
xchg
adc
jae
push
lods
mov
lods
fisubl
pop
jne
into
sbb
mov
dec
xchg
fwait
and
dec
bound
insb
push
xor
fidivl
push
sub
shl
jae
mov
mov
adc
insl
push
xchg
mov
xchg
inc
jp
roll
mov
je
push
sub
dec
shll
cmpsl
loopne
cltd
clc
sub
push
sub
push
sub
xchg
decb
mov
stos
mov
push
imul
jmp
adc
and
addps
stos
mov
jne
in
mov
ret
ret
jg
dec
pop
xor
ficomps
in
movsb
push
inc
les
push
or
insl
repnz
or
mov
rorb
cld
mov
fidivl
dec
enter
sar
jmp
mov
jb
xchg
cmp
jnp
rcll
push
loope
loop
insl
mov
in
mov
or
cli
negb
into
bound
lret
out
movb
fimull
bound
push
jp
aad
dec
jecxz
mov
and
lahf
jle
jnp
xor
aam
test
dec
lret
insb
jnp
dec
loope
iret
jge
inc
fisttpll
xchg
lahf
arpl
inc
mov
add
cltd
jns
adc
xchg
loope
ss
jae
dec
sbb
dec
dec
das
mov
imul
mov
fdivs
popa
dec
cmpb
out
f2xm1
repnz
shlb
adc
sbbl
sbb
stos
push
xchg
fst
fcmovbe
lods
movsb
xlat
ret
and
jne
rcr
xor
jmp
mov
mov
test
xchg
and
shll
dec
jb
rolb
pop
out
jge
inc
ljmp
add
cmpb
rcll
enter
mov
ss
stos
notl
pop
mov
arpl
jb
loopne
sub
mov
ljmp
fwait
sub
enter
hlt
int3
xchg
sbbl
leave
imul
repnz
ljmp
lds
aad
out
inc
adc
xorb
imul
popa
stc
stos
jp
pop
mov
xor
jmp
xchg
stos
setae
out
loope
inc
insl
out
clc
dec
lock
test
cmp
mov
ret
pop
iret
mov
cmp
je
int
fidivl
cmpb
scas
testl
jae
hlt
push
jno
lret
sbb
push
aas
and
imul
addb
add
andl
movsb
push
pop
dec
mov
sbb
mov
loope
pop
icebp
pop
adc
mov
xor
inc
dec
or
stos
shlb
ret
inc
mov
bound
je
xor
aad
lock
cmp
dec
inc
cli
jmp
inc
ds
repz
dec
or
jmp
inc
testb
push
enter
mov
dec
sarb
add
inc
loope
ja
int3
daa
fdivs
xor
xor
lahf
mov
add
push
inc
mov
in
push
mov
lret
cltd
mov
cli
mov
movsl
sbbl
push
sbb
mov
xor
jnp
and
xor
popf
decb
std
fistpl
or
mov
push
fnstcw
sub
movsl
aas
push
cmp
sbb
imul
push
and
cmp
lcall
inc
subb
out
inc
push
sbb
inc
addr16
flds
cmp
dec
cmc
mov
lock
push
ja
mov
push
jns
inc
jecxz
lods
mov
loopne
inc
mov
jnp
ss
enter
mov
xchg
fadds
mov
iret
rorl
pop
mov
je
xchg
mov
mov
jp
add
ficomps
mov
jmp
mov
and
xor
es
inc
mov
or
jns
xchg
jo
or
sbb
pop
inc
in
add
fisttpll
rcrl
inc
push
mov
xor
shll
push
and
xor
imul
sub
mov
sbb
stos
rol
shld
mov
and
jno
aam
lret
xchg
add
test
jmp
mov
sti
loopne
jecxz
mov
popf
cs
or
and
add
xor
repz
jecxz
cltd
mov
flds
shrb
dec
cmp
and
jge
and
mov
jno
jo
icebp
shlb
bound
lods
loop
scas
jmp
stc
mov
add
pop
mov
fs
push
bound
fsts
out
fidivs
out
cmpl
or
pop
inc
mov
lret
test
and
je
loope
ffreep
aaa
push
mov
ss
js
ret
inc
inc
mov
orl
sbbl
dec
divb
mov
lcall
js
cmp
inc
sbb
sub
mov
fisubs
xchg
or
ret
and
fmuls
mov
lds
scas
jp
mov
mov
and
dec
dec
inc
jl
xorb
jnp
fbstp
subb
mov
jno
icebp
adc
fistl
mov
movsb
jp
dec
shrl
fnsetpm(287
mov
sub
es
pop
iret
and
sub
cli
adc
mov
and
mov
int
pop
fstpl
fstpl
mov
sbb
pop
out
arpl
add
ret
cmp
imul
stos
inc
push
push
pushf
loop
mov
sbb
imul
cmp
lcall
mov
movsb
imul
loope,pt
pop
stc
xorl
lods
xchg
mov
fidivl
cmp
leave
inc
dec
or
push
add
jp
jmp
jb
imul
test
clc
sarb
jmp
cmp
mov
lret
ret
jp
xchg
cltd
jg
xchg
dec
ret
test
repnz
das
dec
mov
xor
adc
fistpll
mov
cmp
shll
das
test
flds
jae
jge
push
nop
mov
mov
dec
imul
stc
loop
or
in
cmpsb
inc
and
and
mov
flds
adc
xchg
dec
cmp
mov
mov
mov
subl
test
jnp
hlt
mov
mov
mov
je
loope
pop
jne
jecxz
ljmp
stos
fdivl
jns
mov
out
filds
xlat
push
cli
sub
shrl
jns
icebp
xchg
cmp
inc
jno
icebp
pop
lea
repnz
or
cmpsb
dec
adc
mov
jle
pop
jns
rcll
sbb
xchg
adcb
push
gs
cld
and
stc
mov
cld
lcall
jb
insl
stos
ret
push
mov
push
test
sbb
pop
push
xchg
cmp
roll
dec
pop
je
mov
mov
mov
xlat
jae
cmp
xor
pop
push
pop
loop
dec
roll
iret
int3
cmp
shll
cmp
pop
arpl
leave
and
repz
mov
decb
push
mov
ss
xor
or
mov
imul
inc
jge
push
rorl
mov
sbbl
popa
push
pop
inc
mov
ret
sub
mov
push
or
mov
push
and
and
popa
mov
mov
mov
in
jmp
add
mov
cmp
stc
popa
jp
adc
cmp
inc
cmp
mov
loopne
mov
fisubrl
mov
cmp
xor
test
iret
popa
icebp
stc
pop
mov
std
push
cmp
rcr
cli
xor
lods
imul
imul
ds
ret
sbbb
bound
arpl
xchg
cmp
and
jae
mov
dec
adc
dec
sub
mov
call
ret
ret
mov
loope
repnz
pop
sarb
std
fwait
pop
cmpb
xchg
pop
rcll
inc
pop
mov
inc
scas
shl
lods
cmp
rorl
sbb
xchg
mov
jle
adc
adc
push
ret
fsts
jnp
leave
cmpl
nop
mov
pop
lock
jnp
push
test
push
int3
or
jp
xor
dec
sbb
xchg
rcll
xchg
popa
stc
cmpsb
jnp
shll
fcmovnbe
adc
inc
enter
out
popa
push
pushf
inc
f2xm1
or
adc
push
mov
int3
pop
stos
popa
add
cmp
mov
xor
xor
fldt
addr16
or
inc
mov
xchg
xchg
clc
nop
cltd
subl
stos
int
jecxz
xchg
int3
shrl
xor
enter
shll
and
adc
ljmp
fs
inc
mov
sbb
stc
push
aad
lahf
mov
gs
imul
icebp
shll
push
cld
jno
cmp
push
jno
xchg
inc
cmp
shll
mov
lahf
xor
push
ja
test
ljmp
cmp
jnp
repnz
mov
mov
or
add
push
inc
fidivrl
mov
cmp
add
lret
cmp
jecxz
sub
jo
fldenv
in
loopne
stos
dec
xor
out
shl
mov
push
lods
jp
cmp
cltd
pop
push
shlb
xor
or
dec
dec
xorb
mov
lods
and
push
enter
push
ljmp
testb
pop
jns
cli
stos
push
imul
push
ljmp
pop
pushf
inc
shlb
jl
lcall
int
dec
sti
cltd
mov
mov
cmp
ss
bound
ficompl
test
pop
repnz
out
movsb
cmc
scas
pop
bnd
lods
mov
xor
fs
shr
ret
xor
adc
ds
stos
adc
mov
pop
xchg
cmp
mov
movsl
pop
mov
xor
xchg
clc
pop
loope
mov
aad
and
dec
inc
cmp
loop
pop
dec
lret
jp
rclb
arpl
cmpl
bound
leave
ret
jg
hlt
lret
mov
stc
jmp
push
xor
inc
in
repnz
aaa
sbb
inc
jns
loop
ljmp
pop
xchg
pop
js
std
push
xor
dec
inc
loop
jne
ficoml
xchg
xlat
repnz
imul
pop
popa
cmp
push
jno
mov
cmpsl
lret
lahf
mov
mov
push
test
mov
pop
shl
out
xchg
mov
xor
mov
xorb
mov
icebp
push
xchg
je
insb
nop
mov
pop
jns
fcomip
mov
inc
out
xchg
dec
enter
fcoml
icebp
movb
mov
pop
mov
mov
xor
out
stc
mov
mov
add
cli
push
jnp
leave
mov
push
in
push
loopne
pop
enter
ret
xchg
push
loop
mov
mov
cmp
push
imul
inc
test
jg
mul
icebp
jno
pop
cmp
inc
insl
mov
ret
ror
fildl
movsl
cmp
cwtl
popa
dec
ljmp
add
imul
inc
sub
ds
sbbl
addr16
pop
std
flds
jmp
leave
test
inc
sub
add
pop
xor
adc
in
pop
mov
aas
dec
add
xor
mov
and
and
lahf
push
stc
or
xchg
test
xchg
data16
lock
dec
out
in
lret
clc
lret
arpl
mov
dec
jg
insb
mov
dec
mov
test
stos
out
shll
jns
xor
sub
add
roll
out
adc
cmp
int
dec
fcomps
mov
orl
fwait
mov
orb
fimull
mov
push
inc
add
in
jb
jmp
sbbb
jns
xchg
jno
push
out
roll
lcall
lods
xor
in
dec
push
icebp
dec
mov
repnz
insl
imul
imul
or
xor
jae
movsb
iret
add
cmp
mov
jmp
mov
cmp
stos
das
push
iret
out
loope
mov
pop
mov
cmp
sarb
in
add
lea
fadds
xchg
mov
cltd
jnp
subb
push
bnd
xor
dec
aas
jl
mov
inc
xor
or
dec
shlb
inc
sub
dec
popa
xchg
insb
jno
jb
ficoml
mov
repz
sub
into
pop
sbb
test
in
stos
mov
mov
adc
faddl
je
int3
dec
repnz
test
lret
mov
cmp
cwtl
rcll
jmp
cmp
shll
into
cmpl
inc
and
test
stc
dec
dec
imul
jbe
adcl
sarb
add
test
cmp
jecxz
sub
stos
test
mov
push
mov
cmp
pop
ljmp
mov
mov
out
out
cli
mov
add
inc
jle
inc
jg
cmpb
lods
lcall
test
jmp
hlt
ret
cli
jg
jnp
pop
cmp
cmp
cmp
sti
push
ljmp
dec
inc
hlt
mov
arpl
jmp
dec
lret
orl
inc
pop
push
cmp
cmpsl
adc
adc
xor
sbb
push
xchg
push
ds
mov
arpl
cli
popa
orb
imul
stc
sahf
jecxz
stos
adc
jmp
jns
adc
cmpl
loope
push
dec
or
lds
fdivrl
sbb
xchg
stc
xor
pop
dec
mov
int
aas
pop
inc
imul
icebp
aaa
and
repnz
add
mov
daa
mov
or
out
addl
std
fidivrl
adc
mov
push
in
cmp
dec
jb
pop
jnp
idivl
stos
adc
jae
lret
cli
sub
repnz
mov
ss
fistpll
repnz
in
xchg
loop
pop
cmp
aas
arpl
dec
icebp
xchg
arpl
pop
out
cwtl
clc
test
cmp
adc
lret
fdivrs
stc
mov
cmpsb
int3
push
mov
lcall
into
popf
pop
ret
int
testl
mov
mov
cmpsl
adc
mov
mov
test
shrl
xchg
movsl
dec
fdivrl
push
xchg
mov
stc
xor
out
mov
mov
imul
mov
cmp
hlt
nop
cmp
arpl
jno
cltd
ret
test
lret
popa
mov
clc
jmp
je
fs
stc
mov
jb
pop
aam
test
pop
lret
stc
hlt
bound
jae
xor
mov
pop
push
mov
test
pop
popa
or
mov
fsubrl
rcr
ficoml
jmp
xor
ret
cltd
cmp
inc
out
add
es
popa
xchg
out
add
test
bound
cli
xor
xor
bnd
pop
adc
push
mov
stos
inc
imul
lods
mov
adc
shll
loopne
daa
mov
xor
jp
push
pusha
push
lds
add
jge
push
jp
dec
cmp
movups
xchg
jns
cmpsb
in
andb
cmpb
ret
loope
je
movsb
inc
sar
popa
push
aaa
and
mov
in
lcall
mov
mov
mov
jae
hlt
pushf
loop
out
pusha
enter
addr16
leave
jg
jp
rolb
insb
rolb
loope
bound
jo
mov
loop
jp
inc
inc
push
ja
push
out
cmp
xchg
into
push
push
xadd
je
dec
push
das
push
ljmp
dec
pop
int
mov
push
aad
in
cli
and
mov
pusha
add
mov
jecxz
dec
je
dec
add
push
mov
sbb
lcall
mov
add
xlat
hlt
jno
inc
lock
pop
xchg
add
fstps
and
inc
inc
push
or
imul
clc
imul
adc
mov
or
mov
mov
push
mov
cmp
stos
mov
xor
lcall
or
icebp
loopne
mov
cmp
dec
inc
arpl
in
mov
ss
xchg
cmp
and
lock
mov
push
out
xchg
cli
out
arpl
jmp
das
add
push
fnstenv
and
and
stc
outsb
xchg
jge
rcrb
or
ret
sbb
std
xor
push
push
ret
pop
xor
lcall
pop
lret
arpl
mov
pop
xor
inc
jae
arpl
sbb
mov
xor
or
adc
test
xor
insb
inc
dec
aad
hlt
test
cld
shrl
nop
jno
jnp
je
movsb
stos
ret
insl
cltd
push
xchg
pop
imul
andl
cmp
mov
pop
fisubrs
sub
roll
ds
and
xchg
das
fidivrs
stos
jno
push
dec
cmpb
push
fs
jnp
inc
lods
daa
bound
xor
jg
arpl
ret
push
xchg
dec
mov
decl
ret
xchg
cmp
xor
repnz
push
xorl
addl
test
out
mov
jmp
adc
fiaddl
mov
ret
in
mov
ret
imul
rol
test
pushl
ret
or
stc
daa
sub
ror
dec
pop
out
rclb
dec
leave
mov
dec
jp
popa
jne
or
xchg
iret
nop
insb
insb
xor
mov
jns
pop
fstl
jne
mov
popa
pop
arpl
add
sbb
cltd
push
mov
cmp
fildll
repnz
test
cld
jne
jae
jge
push
hlt
xchg
stc
pop
push
lcall
adcl
pushw
pop
insb
mov
fnstsw
test
in
mov
arpl
cmp
add
jle
inc
xor
shlb
xor
jns
inc
popa
loop
addb
stc
mov
fsub
push
lret
lret
popa
adc
dec
or
push
mov
xor
fdiv
and
inc
addb
push
xchg
xor
ret
or
xchg
sahf
ret
lret
adc
xchg
cltd
push
jnp
xchg
dec
stc
pop
push
and
fcomps
leave
aad
jg
test
addl
stos
mov
je
fldl
imul
loopne
ret
enter
mov
popa
bound
xchg
jne
stc
shl
loope
cmp
je
jno
in
rcrl
cmp
adc
pop
xor
mov
stos
shll
andb
pop
lea
mov
bound
lret
aas
fs
and
ret
adc
std
add
xchg
cmp
les
ja
jns
xlat
xor
jecxz
inc
repnz
stos
push
cmp
rclb
scas
data16
cmp
jbe
imul
pop
mov
ret
aam
push
rcrb
test
stos
icebp
inc
daa
and
pop
pusha
pop
loop
fdivl
out
push
dec
xchg
sbb
push
inc
or
sbb
mov
mov
jno
add
ljmp
xor
sahf
out
bound
push
xchg
stos
mov
cwtl
rolb
add
push
leave
rorl
shll
loop
notl
shrb
repz
sti
inc
inc
mov
mov
push
pop
mov
push
aas
xchg
sub
fistl
and
push
popa
mov
jnp
leave
loope
arpl
add
pop
cmp
cltd
insb
lret
sbb
add
dec
mov
dec
scas
lret
adc
inc
ljmp
jp
pop
rcr
lcall
arpl
jle
inc
hlt
push
fnstcw
jno
lock
imul
xor
loope
dec
and
mov
in
icebp
sahf
add
cli
dec
cmp
jne
xor
cli
adc
inc
ds
jp
inc
dec
ljmp
popa
cmpsb
outsb
inc
dec
add
push
lret
push
sbb
dec
fs
and
lret
cmp
add
jmp
mov
sbb
pop
add
div
stc
xor
test
or
iret
dec
cmp
stc
dec
jno
jo
inc
mov
xchg
lret
jae
adc
jmp
xchg
fbld
andl
inc
push
dec
icebp
push
imul
xchg
xor
jnp
lock
stos
push
add
mov
lods
jb
add
push
add
imul
inc
daa
jns
stc
cld
jae
push
inc
mov
cmp
and
mov
push
xor
cmp
push
and
mov
in
jo
mov
add
adcb
cmc
imul
pop
stos
sti
xchg
adcl
and
jae
xor
inc
add
mov
jg
dec
imul
mov
mov
das
mov
arpl
jae
fcomps
call
subl
xor
subb
arpl
aam
inc
mov
popa
icebp
bound
mov
mov
add
stos
pop
add
pop
add
mov
and
movsb
cmp
movsb
mov
sbb
cmp
adc
in
mov
fiaddl
jg
add
push
mov
push
dec
rcll
ret
xor
mov
adc
fildll
sub
push
pop
mov
pop
and
lcall
or
or
pop
add
push
rol
add
jb
mov
jns
mov
sub
jmp
jbe
inc
cli
cwtl
dec
or
mov
adc
test
mov
push
fistpl
fisubrl
aad
pop
inc
xchg
sti
push
in
push
or
stc
insb
std
loop
and
icebp
hlt
jb
out
cmp
dec
dec
xor
and
pop
pop
out
mov
shlb
rcl
adc
orl
xchg
push
insl
hlt
xor
stc
push
push
mov
icebp
pop
stc
sbb
mov
cmp
mov
cli
loop
stos
jbe
sbb
fsubrs
cld
cli
out
cmp
lahf
pop
push
pop
cmpl
clc
stc
push
jae
jne
fbld
jmp
insb
fidivrl
mov
and
push
aas
cmpl
mov
lcall
mov
dec
sbb
shlb
aad
mov
mov
ljmp
imul
dec
je
mov
stos
mov
pop
faddl
cmp
jno
xorb
xor
sarl
jns
and
loopne
and
jb
mov
and
icebp
jb
cmp
ja
scas
push
xchg
test
je
and
test
loope
jb
stos
lret
jp
fisubs
dec
nop
xchg
shrb
mov
shl
pop
and
push
fisttps
bound
ss
pop
and
insl
xor
pusha
xor
lods
jle
mov
nop
jnp
pop
jae
sbb
push
je
ss
sub
in
dec
push
mov
sarl
sarl
cli
or
mov
jb
jg
sarl
inc
mov
movsl
repnz
dec
dec
dec
mov
imul
leave
rcrl
sahf
mov
dec
ljmp
adc
mov
pop
mov
mov
xlat
add
test
lret
jge
cli
mov
repz
imul
xchg
sbb
sarl
push
dec
mov
aas
push
int3
mov
mov
or
popf
pop
jae
ret
lahf
push
mov
jmp
andl
loope
mov
cmp
aas
jae
adc
xchg
and
lods
xor
add
lds
loope
adc
cmp
sub
mov
addl
inc
icebp
inc
or
mov
pop
pop
sub
aaa
jmp
push
fmull
fiaddl
pushf
aaa
jp
ss
cmc
xor
mov
inc
mov
sub
jb
or
fldcw
xchg
dec
mov
pop
push
mov
loope
popa
mov
xor
jp
shll
repnz
aas
xchg
cltd
imul
xor
stc
sbb
pop
lcall
in
lret
inc
adc
cltd
jno
ret
int3
inc
leave
mov
ss
hlt
adc
cmp
xor
xchg
mov
jb
jns
mov
bound
xor
xchg
stc
stos
cli
ret
mov
bound
mov
arpl
mov
jae
pop
ljmp
mov
mov
clc
enter
jae
shrl
dec
cli
repnz
lret
cli
subb
pusha
stos
loope
xor
ror
popa
ret
stos
clc
lock
jns
loop
je
fs
ret
jp
push
ds
cltd
cmp
jnp
lcall
jb
mov
push
popa
inc
bound
mov
dec
enter
loope
filds
and
test
aam
pop
push
dec
inc
inc
xchg
adc
pop
sbb
jns
pop
popf
push
adc
xchg
imul
mov
insl
stc
push
push
arpl
or
test
push
or
into
xor
bound
add
subb
cmp
test
cltd
or
shlb
sarl
inc
mov
jp
std
mov
clc
inc
jle
insb
subl
orl
pop
rcr
pop
push
dec
xor
push
pop
inc
dec
in
imul
mov
jae
icebp
stc
cli
mov
xor
xor
shll
jne
fiaddl
push
outsb
add
repnz
mov
sbb
inc
xchg
xchg
dec
es
sbbb
adcl
jnp
int3
add
mov
clc
std
cmp
xor
pusha
xchg
cmp
loope
xor
cli
push
scas
fsincos
or
lock
mov
sub
mov
stc
jae
lahf
in
mov
not
inc
repnz
jmp
rol
fidivrs
andb
mov
mov
xchg
mov
jb
add
jae
cltd
out
lahf
clc
push
push
dec
cwtl
and
mov
icebp
mov
imul
add
repnz
jecxz
jno
lret
and
roll
and
mov
mov
stc
jnp
enter
cmp
dec
pop
daa
hlt
ret
inc
lcall
pop
mov
leave
jmp
out
js
jnp
jns
not
dec
mov
es
mov
addb
inc
cmp
mov
mov
arpl
mov
jb
loope
mov
push
and
lret
test
push
xchg
lret
cmc
cmp
dec
mov
pop
stos
inc
rol
dec
loope
adc
andb
sbb
push
lahf
sti
xchg
jae
cmc
mov
push
fiaddl
mov
and
mov
mov
cltd
push
adc
int3
ret
and
arpl
out
outsl
dec
or
sub
jno
pusha
testb
cltd
mov
shrl
pop
sub
test
pop
lret
push
add
jae
pop
dec
hlt
cltd
subl
adc
test
cmp
roll
repnz
mov
inc
lret
cltd
inc
mov
jns
lcall
filds
jnp
xchg
jecxz
inc
pop
in
imul
pushl
dec
popa
lcall
scas
pop
sub
or
icebp
bound
sahf
loop
clc
incl
add
stc
ret
or
mov
or
push
fs
sbb
mov
dec
dec
cmp
adc
push
xor
pop
daa
or
sarl
jb
push
jp
out
sub
fwait
mov
in
xchg
cmp
fs
adc
mov
mov
push
mov
or
xchg
and
cs
stos
jg
hlt
loop
lcall
sbb
inc
push
mov
mov
mov
lods
std
mov
icebp
cmp
and
in
mov
pop
jns
aaa
pop
xorl
dec
loopne
popf
test
mov
sub
push
push
das
add
sarl
or
and
jns
decb
cmp
les
popa
test
mov
outsb
rorb
xor
repnz
stc
adcl
cltd
adc
outsb
xor
cmp
sti
cmp
cmp
sub
add
sbb
and
negb
test
movsb
enter
lcall
pop
adc
jo
jmp
push
push
dec
inc
roll
adcl
fmul
mov
call
ljmp
or
andl
ret
mov
in
cli
fisubrs
ljmp
or
cmpsb
adc
sub
pop
je
stos
cmpsl
push
shl
or
jno
imul
ret
xchg
jno
sbb
cmp
adcl
inc
arpl
loopne
icebp
lock
imul
je
in
lret
daa
dec
add
xor
ret
dec
xchg
add
push
roll
inc
mov
cmc
hlt
adc
mov
jg
call
pop
popa
xor
add
loope
aam
dec
bnd
adc
popa
test
inc
addl
jno
pop
jae
jmp
out
push
in
imul
push
leave
ret
jle
mov
fcmovne
inc
sbb
jecxz
fstps
sti
adc
stc
js
enter
idivl
inc
fidivl
mov
add
repnz
pop
stc
leave
imul
cmp
scas
pop
hlt
dec
shll
lock
movsl
sbb
add
dec
test
in
dec
mov
std
mov
shrb
std
test
jp
in
hlt
add
jmp
mov
cmp
dec
roll
imul
pop
push
pusha
call
in
sub
shrb
movsb
inc
test
sbbl
loopne
enter
jns
loop
enter
add
add
mov
cmp
loope
push
lods
mov
pop
lods
xchg
jp
cmp
jno
mov
mulb
mov
xchg
fcoms
mov
test
enter
ljmp
sbb
leave
jb
mov
ret
inc
lods
popa
loope
shll
mov
mov
xchg
xor
nop
lds
dec
shl
lods
icebp
jno
ret
mov
mov
repnz
pushl
jns
fsts
cmp
push
sbb
mov
pop
stc
icebp
xchg
mov
pop
loop
bnd
notl
aam
dec
sarl
sub
push
dec
cld
adc
inc
xor
imull
arpl
inc
outsb
sbb
stos
inc
push
pop
stc
xchg
dec
xchg
mov
insb
fwait
mov
adc
aad
jmp
xor
jnp
inc
stc
stos
fidivs
sbb
mov
icebp
jecxz
arpl
jb
add
test
cmp
xchg
stos
bound
imul
jecxz
push
jae
push
in
or
pop
cltd
mov
sub
add
xor
cld
push
dec
inc
pop
mov
out
imul
mov
cld
psubd
ret
xchg
lods
mov
inc
faddl
jle
jb
jns
and
repnz
inc
jb
inc
pop
in
cli
jmp
bnd
fiadds
xchg
loope
inc
add
ret
jecxz
ds
test
out
pop
ljmp
repnz
inc
stos
outsl
ds
xor
mov
mov
jl
cmp
and
cltd
push
icebp
negb
mov
test
and
lahf
loop
in
jo
adc
cli
mov
inc
cmp
dec
test
or
push
rcr
xchg
mull
jnp
inc
test
cmp
stc
test
and
enter
mov
popa
inc
push
sbb
dec
xchg
push
mov
sbb
sub
loope
mov
mov
mov
mov
xchg
pop
cmp
movsl
lods
xor
xchg
add
adc
jae
lea
push
mov
mov
testl
lcall
cld
pop
pop
leave
jno
jns
cmc
mov
sti
mov
jb
push
adc
dec
dec
sarl
and
rorb
shlb
stos
dec
xchg
push
ret
pop
xchg
popa
in
shrb
cmp
subb
shll
je
repnz
int3
dec
ljmp
sbb
imul
mov
mov
push
loopne
rcr
scas
and
push
rcl
and
pusha
repnz
cld
divl
mov
cmc
in
stc
enter
and
sbb
inc
sbb
insl
fisubrl
mov
push
cmp
je
xor
jae
add
inc
loope
inc
sbb
sbb
inc
inc
push
imul
mov
test
bound
pushf
mov
stc
jl
and
push
xchg
jns
dec
inc
aas
jmp
adc
ljmp
adc
xor
cli
mov
sbbl
bnd
aas
xor
shll
cltd
mov
pusha
arpl
pop
loopne
cmpsl
notb
insb
jne
fiadds
mov
ljmp
jmp
ret
andl
or
stos
mov
scas
add
mov
adcl
loop
sub
xchg
lret
cmp
jecxz
jae
pop
loop
sbb
inc
cmp
jno
cmp
xchg
rcrb
cmp
cmpb
cmp
lret
mov
fs
rol
shll
mov
cmp
pop
jb
mov
loope
cmp
clc
loopne
jns
int
xchg
dec
add
inc
fiaddl
cmp
mov
adc
nop
adcb
and
stc
add
mov
icebp
xchg
sub
in
bound
add
push
shr
shll
push
mov
incb
xchg
cmp
fnstcw
dec
add
jp
stos
popa
mov
push
inc
das
adc
jnp
pop
lcall
xor
data16
inc
icebp
mov
pop
mov
psubb
stos
add
out
pusha
negl
cli
stc
jp
cli
inc
repnz
int3
ljmp
adc
and
ret
inc
xor
dec
xchg
loop
xor
scas
jbe
lods
or
and
arpl
rcll
cmpsl
mov
imul
push
lds
lcall
xor
int3
loope
sub
jae
add
cmp
sbb
mov
repz
jp
push
cli
arpl
inc
addr16
and
inc
fsubrp
and
mov
dec
add
pop
mov
hlt
loope
sarl
rcll
xor
mov
addr16
cli
mov
jp
ljmp
aam
imul
out
mov
sbb
and
std
repnz
jno
add
cli
loope
mov
jno
mov
and
cmp
gs
lmsw
adc
jae
inc
iret
mov
mov
sub
mov
flds
loop
cmp
shll
movsb
fadds
inc
out
mov
loopne,pt
cmp
xchg
enter
lahf
xchg
leave
movsl
mov
ret
rorl
jecxz
sbb
lahf
or
or
xchg
xchg
jmp
jae
daa
push
add
mov
xchg
mov
ret
mov
stos
hlt
call
sub
lds
jae
ljmp
add
cmp
lret
mov
push
lcall
lret
xor
mov
jp
mov
das
dec
mov
lock
pop
lock
rol
aaa
iret
shl
stos
ror
xchg
inc
add
imul
jnp
xorl
push
push
mov
pop
lods
xor
jno
out
aad
mov
int3
aas
inc
xor
and
push
rorl
into
push
mov
test
xchg
out
pop
icebp
mov
mov
test
sub
dec
mov
hlt
add
xchg
dec
aaa
mov
xchg
pop
test
adc
subb
mov
mov
inc
icebp
inc
push
in
xchg
pop
js
stc
sub
mov
hlt
bound
cmp
mov
test
and
lea
lcall
in
frstor
filds
dec
popa
dec
xchg
in
shlb
out
cmpsl
cmp
outsl
movsl
add
imul
pop
mov
sti
loope
push
xor
imul
inc
inc
xchg
pop
imul
ds
shll
pop
cltd
in
sbb
sub
add
fsubrl
rclb
sbb
lods
stos
mov
inc
bnd
jne
sbb
mov
lcall
pop
jb
jecxz
xchg
cld
int3
xchg
dec
push
icebp
imul
orb
jecxz
mov
push
lds
repnz
mov
mov
jbe
js
daa
loop
push
lock
push
ljmp
mov
mov
mov
dec
mov
cwtl
repnz
sub
jecxz
mov
repz
adc
cmp
cmp
mov
enter
xchg
mov
arpl
shlb
push
adc
cmpl
jnp
stc
outsb
and
orb
push
orb
stos
stos
sbb
ljmp
and
dec
pop
fsubr
jno
ss
nop
pop
pusha
mov
cmp
pop
add
pop
out
inc
xor
sub
rcll
jp
pop
in
scas
rol
cmpsb
sti
test
test
jg
xchg
inc
jnp
push
push
jae
cmpb
les
xchg
jno
mov
cmp
mov
imul
fisubrl
ja
cmp
xor
int3
jp
dec
stos
mov
push
cmp
inc
inc
gs
fistpll
popa
inc
sub
lret
pop
jae
cltd
bound
and
pop
stos
int
dec
cli
adc
mov
sub
xor
and
and
out
jae
jno
mov
cmp
mov
stc
pop
xchg
adc
jns
dec
rcrl
cli
xlat
lret
push
xchg
jle
sub
jae
je
sbb
ret
fdivrl
lret
imul
and
mov
push
jnp
mul
fcmove
xchg
test
and
andb
push
nop
dec
arpl
enter
mov
in
pop
add
add
jl
rcr
jl
lods
jnp
mov
rorb
test
pop
lea
lock
popa
testl
test
lods
dec
inc
leave
sbbl
inc
pusha
mov
sarb
sub
imulb
cltd
jecxz
jne
jge
mov
jnp
add
push
dec
jne
mov
ljmp
mov
pop
jns
mov
push
xchg
mov
xor
adc
stos
js
stos
addr16
sub
adc
aas
js
push
mov
imul
jmp
bound
sbb
jp
dec
jae
mov
hlt
cltd
andb
out
jg
stos
mov
andl
dec
xor
and
xchg
and
add
pushf
mov
into
ljmp
dec
xchg
ljmp
adc
mov
mov
je
rorl
sub
jae
jno
stc
out
jne
flds
mov
testb
cmpsb
inc
inc
into
lock
sub
out
das
mov
xlat
ror
inc
pop
xchg
dec
add
icebp
inc
mov
jnp
fwait
and
mov
inc
pop
fistl
fwait
push
repz
xor
cli
push
cmp
and
jae
sti
in
stos
jno
mov
pop
and
push
pop
mov
stc
fsts
inc
sti
popa
test
imul
fsubrp
ror
decb
stos
loope
mov
insb
dec
lock
mov
iret
inc
scas
mov
xorl
cmp
push
lcall
xchg
call
mov
inc
loopne
push
aas
mov
loop
enter
in
dec
xchg
pop
mov
mov
ret
cltd
sub
cli
out
mov
cli
pop
loop
add
mov
mov
bound
lods
cmp
loop
xor
pop
das
test
jp
mov
pop
xor
mov
or
test
stos
pusha
jp
dec
xor
scas
clc
movsb
loope
std
cmp
negb
dec
outsb
jl
test
jecxz
pop
ficomps
jae,pt
mov
mov
shlb
or
ret
dec
jmp
and
sbb
xor
sbbl
and
in
orb
lret
jmp
call
lcall
dec
inc
lds
icebp
rolb
jae
pop
fisubrs
ret
leave
daa
cmp
rclb
aaa
mov
add
pop
rorb
sbb
cld
xchg
mov
into
mov
cmp
mov
bound
cli
mov
sub
repnz
mov
adcb
loope
jno
cmp
in
fs
jae
ret
add
insb
mov
sar
and
test
pushf
inc
es
leave
jns
mov
test
nop
inc
push
pop
cmc
pop
out
jno
xchg
ljmp
scas
ljmp
xchg
and
bound
stos
jae
clc
sarl
fidivl
xchg
roll
inc
xor
xor
clc
push
xorl
icebp
shrl
sbb
xor
adcb
xchg
mov
dec
pop
xchg
imul
iret
pop
pusha
clc
leave
stos
mov
clc
jno
cmp
lock
icebp
jae
popa
repnz
inc
jp
clc
adc
imul
jecxz,pn
fdivrl
shll
loope
scas
dec
mov
adc
push
jne
fbld
lock
loope
loopne
cmp
jl
out
sbbl
mov
fcomps
clc
sub
push
jecxz
pop
and
andl
inc
lds
inc
inc
mov
leave
dec
or
in
cmp
xor
mov
iret
push
mov
mov
mov
jnp
dec
in
xor
push
push
int3
ljmp
mov
std
std
mov
jge
and
mov
cmpl
loope
dec
leave
dec
mov
push
sarb
xor
lcall
std
mov
ret
xchg
sti
stc
jnp
clc
mov
jnp
arpl
cmp
outsl
jl
jp
mov
mov
adc
lea
test
cs
and
imul
in
sarb
push
repnz
cmpb
ret
and
fisttps
test
mov
repnz
dec
and
jg
or
inc
hlt
pop
jno
cmc
xchg
pop
inc
mull
repnz
cmp
andl
arpl
shll
lds
test
pop
jge
mov
jb
testl
cmpsb
push
lea
cltd
loope
dec
jmp
stos
mov
add
loop
mov
jno
cmp
enter
repnz
pop
xor
ret
sbbb
ja
push
sbbb
inc
clc
or
mov
in
dec
lret
mov
mov
xchg
push
cmc
cmp
bound
popa
jae
xchg
inc
fdivrl
lcall
or
pop
clc
dec
push
mov
addb
push
insl
fs
test
leave
ret
jmp
dec
lret
lret
fisttpl
ret
stos
cmp
jl
cli
and
and
lret
pop
push
jmp
ret
and
pop
mov
scas
outsl
dec
and
add
or
fistps
and
inc
lahf
cmp
icebp
scas
pop
push
das
mov
dec
add
lahf
fcmovnbe
je
shll
in
ja
push
fstpt
das
ret
or
scas
test
rorb
push
bound
cli
mov
jnp
mov
jmp
lcall
inc
rcrl
testl
or
out
mov
dec
loop
cli
cmp
mov
and
loope
and
jmp
and
inc
or
mov
jg
mov
rclb
jno
loop
jg
shll
andb
xor
ds
inc
pop
jnp
movb
pop
or
lcall
mov
in
cmp
outsl
popf
jno
jae
cld
bound
icebp
inc
dec
into
nop
mov
arpl
hlt
push
sarl
neg
mov
movsb
adc
dec
ljmp
pop
cltd
jno
and
push
mov
mov
jnp
lods
notb
or
icebp
xchg
inc
pop
lds
lahf
in
inc
pop
ret
mov
mov
xor
addl
clc
xchg
flds
aad
stc
dec
add
into
xor
inc
into
call
mov
inc
jg
lcall
test
mov
push
sbb
dec
icebp
shll
xchg
mov
push
clc
mov
pop
push
push
add
das
pop
mov
pop
inc
or
clc
loope
rolb
lret
stos
test
call
dec
ljmp
fsubrl
mov
inc
push
xchg
xor
cltd
cmp
jno
sbb
add
push
xor
add
xor
arpl
push
push
pop
mov
cmp
shll
vpminud
cmp
xor
sbb
pop
call
pop
xchg
aas
adc
mov
jns
clc
pop
mov
loope
mov
jb
dec
and
test
mov
push
mov
rcl
lret
dec
fwait
and
cli
dec
stc
arpl
push
cmp
inc
mov
ror
xchg
push
dec
pop
add
outsb
push
xchg
test
lea
lret
mov
imul
xchg
add
orb
mov
movsb
cmp
fidivrs
int3
jae
pop
xor
addl
mov
jne
push
lds
inc
jg
in
xchg
push
inc
mov
adc
jno
aaa
pop
cltd
fisubrl
mov
daa
adc
iret
clc
push
xor
mov
mov
mov
jb
sbb
jmp
adc
pop
inc
jmp
mov
and
popa
loop
sbbl
les
fs
test
out
mov
add
add
inc
out
lock
sbb
int
and
imul
pop
dec
stos
mov
pop
xor
xchg
scas
in
nop
and
popf
cltd
jns
pop
fdivrl
xor
mov
cmp
jnp
mov
ds
sarl
cwtl
add
popa
stc
push
inc
fisubrl
or
aas
repnz
popf
dec
insb
xchg
test
popf
dec
mov
jne
xchg
jge
cltd
adc
loope
jmp
mov
push
lret
inc
mov
xor
lret
dec
bound
dec
pop
inc
fwait
mov
imul
mov
sbb
jns
jae
inc
enter
mov
cmp
push
mov
cmp
xor
add
leave
inc
loope
inc
pop
andb
popf
inc
mov
lods
jg
adc
xchg
sarl
test
sub
fldenv
incb
push
pop
dec
lods
cmp
sti
mov
ror
pop
incb
jns
xorl
add
cmp
jp
in
dec
pop
xchg
mov
mov
cli
xor
mov
in
lock
fimull
loope
bound
sub
in
lret
jnp
mov
je
aam
stos
stc
inc
lods
pop
fcmovne
push
adc
mov
arpl
xchg
and
mov
xor
imul
in
mov
mov
sbb
jg
add
inc
imul
xor
std
jmp
mov
fimull
lods
jle
incl
imul
mov
fst
shll
xorb
leave
adc
push
mov
aam
mov
inc
inc
rcrb
push
mov
in
lock
in
xchg
dec
adc
xchg
jns
subl
mov
stos
fdivp
jb
mov
iret
push
jp
and
fldcw
pop
inc
lret
add
stos
ljmp
mov
adc
mov
stc
ljmp
sub
xchg
push
mov
test
pop
insl
add
loope
dec
jmp
dec
mov
dec
push
fldenv
stc
mov
ret
sub
and
loope
out
and
push
or
stc
mov
cli
cmpb
ficomps
movsb
loop
xchg
into
xchg
inc
stc
jo
push
mov
jns
out
dec
mov
idivb
adc
xchg
cs
fnsave
push
pusha
iret
fwait
jle
adc
lret
push
adcl
xchg
adc
cltd
fwait
mov
addb
les
xorl
test
inc
sbb
adc
dec
inc
pop
ret
subl
mov
jno
jp
popa
repnz
jge
xorb
cmp
cmp
jns
call
xchg
ret
mov
pop
jno
and
inc
in
push
fisubs
fs
or
pop
loope
jns
roll
lcall
and
jmp
loopne
jmp
mov
out
icebp
cmp
push
rcrb
and
stc
xor
stos
popa
adc
jne
lahf
hlt
lret
mov
mov
imul
jb
imul
lods
leave
mov
jns
test
lcall
xor
mov
pop
popa
loopne
pop
loopne
incl
fnstcw
jo
fcmovbe
leave
aad
inc
subl
ret
outsb
fwait
test
stc
scas
and
pop
mov
jp
sarl
xor
loope
dec
bound
outsb
aam
stos
pop
dec
in
mov
pop
test
bound
dec
jge
cs
push
xchg
or
jge
jmp
jno
stos
sar
arpl
xchg
dec
push
mov
rcll
pop
out
mov
fwait
mov
inc
sub
inc
movsb
cli
jae
jmp
sub
popa
insl
ljmp
hlt
fildll
imul
mov
lock
faddl
mov
std
fidivl
movsl
sti
xchg
sub
mov
xchg
push
mov
movsb
xor
pop
jg
popa
popa
ftst
stos
push
push
inc
xor
roll
pop
adc
jle
scas
cmp
stc
idivl
xchg
orl
adc
daa
mov
pop
push
push
scas
rolb
dec
popa
ficoml
and
adc
fstps
jae
scas
jmp
adcl
int
je
shr
out
loop
pslld
jns
sbb
xor
fs
jae
mov
ret
and
out
mov
ret
xor
add
imul
xchg
dec
sbb
jge
out
jnp
push
push
cmp
imul
test
sub
loop
cmp
mov
or
mov
ret
xchg
sar
stos
stc
xchg
bound
lcall
xor
cmp
sarb
and
mov
out
xor
pop
inc
jbe
lret
fidivrl
mov
rclb
pop
bound
xor
adc
lcall
mov
iret
jp
inc
test
lcall
inc
xchg
push
pusha
arpl
sub
data16
outsb
bound
ret
xchg
push
add
xor
mov
xor
mov
mov
loope
xchg
icebp
jb
push
pop
and
bound
mov
jne
pop
cltd
cmp
mov
xor
idivl
mov
and
aam
xorl
scas
fnstenv
sarl
mov
mov
popa
fistl
pop
mov
sbb
pop
mov
loop
inc
ficompl
sbb
out
xchg
repnz
jnp
xchg
push
sub
and
push
dec
ljmp
loop
add
pop
outsl
dec
and
xchg
push
push
jno
popf
sub
repnz
test
mov
mov
xchg
cmp
imul
mov
adc
inc
mov
sbb
jp
test
jecxz
sarl
jecxz
bound
lds
pop
mov
in
cmp
out
pop
fisubl
adc
cmp
push
popa
pop
ret
rcll
arpl
and
outsl
jg
out
xor
aad
addl
orl
test
xor
daa
lock
les
mov
popa
out
les
lea
int
push
jno
xor
sbb
sarl
mov
subb
loope
xor
dec
push
push
mov
push
pop
inc
sbb
dec
mull
mov
and
lret
lret
imul
mov
arpl
xchg
push
lret
xchg
dec
loope
in
jmp
inc
mov
inc
pop
cmp
andb
xchg
sarb
fs
push
pop
jge
outsb
and
stc
xchg
cmpl
test
pushl
mov
inc
inc
cmp
lods
subl
rolb
jmp
into
and
inc
adc
cmpl
movsb
popf
jae
mov
jne
mov
insb
sub
dec
shlb
jnp
ss
add
aas
aas
je
xor
jmp
scas
in
ret
cmp
mov
adc
mov
sbb
mov
imul
and
enter
mov
adc
stc
inc
insl
push
sub
push
add
push
sbb
lcall
cmc
loopne
xchg
pop
out
lret
daa
clc
aam
inc
repnz
fldenv
cmp
or
mov
dec
sbb
sbbl
jnp
movsl
mull
xchg
lahf
push
mov
mov
cmp
mov
add
test
push
leave
jnp
out
pop
ljmp
loope
dec
jle
jp
jge
leave
or
cmp
stos
mov
shll
loope
xor
xchg
movsb
aas
aam
push
pop
xchg
xchg
dec
dec
pop
inc
scas
lock
pop
push
adc
cmp
fidivl
xchg
loopne
lods
lock
dec
inc
adc
push
loope
and
ljmp
test
sub
push
lret
rorl
dec
das
dec
rcr
jae
xor
insb
loop
mov
jno
jns
xchg
stos
mov
fstpt
cmpsb
xchg
test
leave
stc
fiaddl
mov
mov
dec
pop
jle
jmp
adc
pop
and
pop
push
lcall
push
mov
inc
ret
mov
mov
lret
loope
dec
in
jae
push
inc
repnz
jnp
fimull
jmp
mov
cli
inc
jnp
mov
shlb
sub
arpl
jns
fwait
jb
call
push
bound
cmp
shlb
cmp
pop
jbe,pt
jno
jnp
sbb
xchg
pop
mov
jp
cld
mov
repnz
stos
add
adcl
mov
mov
push
adc
mov
mov
xor
arpl
ljmp
loope
push
cld
cmp
popa
mov
mov
jp
inc
inc
cmp
xor
or
cmp
push
push
lahf
cmpl
fimull
scas
out
in
pop
cmc
xor
lcall
enter
repnz
lcall
push
shll
xor
jg
sub
repnz
fcoml
fdiv
or
dec
add
arpl
mov
stc
pop
jmp
jae
in
xor
jp
ret
inc
mov
mov
jg
jg
mov
xor
jle
jnp
mov
push
jno
lret
sar
out
push
fidivs
daa
jno
repz
mov
orb
pop
mov
adc
arpl
sbbb
pop
sarb
cmpsb
mov
xlat
test
xor
mov
cmp
sbb
int
jge
dec
sbb
mov
and
test
arpl
cmp
ret
loope
jecxz
or
mov
mov
push
ljmp
mov
test
adc
jns
addl
and
dec
clc
cli
insl
outsb
lcall
cli
inc
pop
add
inc
xor
pop
das
lahf
xchg
adc
mov
sub
sbb
loop
cltd
enter
xchg
sub
fidivrl
mov
repnz
mov
leave
xor
stos
sti
stc
iret
mov
cld
pushl
jno
mov
add
add
popa
pop
gs
leave
test
fwait
adc
cmovb
fadd
sbb
ja
inc
outsb
mov
movsl
lods
in
pop
enter
fidivl
or
icebp
stos
push
mov
jecxz
stc
jne
lea
stos
sbbl
mov
lods
lock
rorl
enter
arpl
sarb
stos
or
inc
mov
jp
jge
adc
shrb
das
pop
cmp
andl
in
jmp
pop
jecxz
mov
shrl
push
leave
fcoml
mov
out
inc
adc
sub
dec
mov
adc
movsb
loop
lret
aas
stc
adc
test
icebp
test
sbb
lods
incl
inc
ret
hlt
and
sbb
fndisi(8087
test
push
imul
add
repz
cmp
loopne
mov
mov
or
inc
test
mov
shrl
rcrl
pop
lods
loopne
cmc
xchg
stos
push
push
mov
rcr
repnz
jns
stc
fldl2t
xchg
fcos
gs
cmp
push
add
adc
xchg
loop
test
cli
daa
mov
mov
push
fldcw
mov
inc
inc
cmp
cltd
insl
imul
jmp
out
or
mov
xor
jno
in
xchg
out
push
cld
std
xor
mov
inc
jne
pop
fnstenv
imul
data16
xchg
inc
mov
jecxz
ret
pop
popa
mov
je
cmpl
dec
cltd
pop
sub
clc
je
loope
mov
and
inc
ret
inc
xor
mov
divb
add
mov
xchg
out
cmp
test
inc
cmp
inc
rolb
mov
rcll
push
push
ljmp
adc
mov
ror
loope
inc
mov
mov
addb
pop
inc
ret
cmp
inc
xorb
pop
fdivr
bound
dec
inc
icebp
dec
stos
ljmp
fsubrp
lock
xor
out
jo
push
jmp
mov
leave
add
dec
stos
call
mov
jno
xor
push
rcll
sbb
or
inc
popa
jno
push
flds
mov
pusha
not
inc
cmp
sbb
xchg
dec
repnz
pop
xorb
cmp
mov
push
cmpsl
insb
pop
mov
addb
int3
fnstcw
dec
jp
and
mov
lods
test
shll
pop
mov
fldcw
mov
in
imul
lock
stc
fsubr
jns
xor
test
lret
mov
jnp
cmp
mov
mov
xchg
push
fxam
cmp
mov
test
mov
mov
imul
int3
stc
rcll
ret
test
orb
dec
sarl
add
hlt
jno
imul
addl
ss
insb
xor
xchg
cltd
adcb
divl
imul
pop
andb
cmpsb
stos
out
lock
dec
ljmp
xchg
rcrl
cmp
fucompp
xor
xchg
popa
and
ret
push
enter
pop
pop
lds
cmp
in
or
sarb
dec
xor
xchg
jae
loop
cmp
jne
daa
xchg
sbb
imul
push
lods
push
loop
fistpll
popa
and
xor
pusha
jmp
idivl
push
int
sbb
dec
sarl
pop
xchg
xchg
icebp
sub
jae
repnz
je
test
inc
pop
rolb
or
sub
sarb
inc
hlt
stc
jg
out
xchg
dec
add
lret
cmp
cld
popa
ljmp
enter
mov
mov
or
ficoml
loopne
jae
cmp
jns
lahf
add
jmp
ret
sub
push
psrad
js
fisttpl
popa
in
mov
mov
and
pop
sub
cld
lods
addb
pop
rolb
mov
mov
inc
je
cltd
stos
lock
in
push
mov
dec
mov
cmp
fcmovb
andl
jns
pop
pop
jle
incb
stc
leave
jae
test
push
mov
pop
pushf
stos
jle
sub
inc
or
push
aas
sbb
or
loop
push
mov
dec
jle
imul
icebp
lods
mov
xorl
sub
mov
mov
nop
adc
repnz
and
xor
sbb
add
jmp
xchg
inc
xor
mov
fcom
jle
add
cmp
imul
jno
lret
loop
lods
jmp
mov
sarb
ret
mov
push
hlt
dec
int3
stos
pop
leave
push
stos
icebp
dec
push
mov
fimull
gs
jg
shrl
push
add
push
fisubrl
xchg
xchg
mov
and
dec
mov
mov
or
pop
sbb
or
inc
cltd
adc
xchg
mov
cmpl
cmpsb
xchg
cmp
das
lcall
mov
lods
add
lods
lds
and
dec
pop
jb
inc
imul
and
or
imul
mov
jo
xor
imul
push
xor
popa
mov
imul
notb
pop
int3
fldl
jo
test
lcall
xor
xor
stos
push
xorl
das
in
cmp
sub
jmp
mov
or
xor
std
mov
int3
mov
inc
test
lock
xchg
icebp
dec
jle
or
ret
dec
addb
loop
lcall
xchg
outsb
add
stc
sbb
jnp
xorl
xor
push
mov
loop
dec
imul
mov
fldl
mov
cmp
push
lret
dec
mov
or
mov
jecxz
ljmp
cltd
cli
or
adc
adc
dec
xchg
aas
adc
bound
je
imulb
cs
test
inc
enter
lock
pop
jb
cld
stos
mov
fldcw
push
cmp
add
mov
mov
stos
cmp
subb
lret
mov
lods
fisubl
call
push
xchg
or
mov
rorl
les
out
cli
lock
out
and
xchg
pushf
or
stos
pushf
stos
push
adc
xor
and
mov
gs
in
add
rcl
dec
das
ret
shl
fxch
adc
ljmp
or
ds
xor
mov
mov
enter
xor
test
sbbl
jns
ret
mov
sbb
jno
cli
popa
jnp
stc
aam
mov
movsb
ret
lret
loop
in
xchg
xchg
icebp
imul
popa
in
push
rolb
fincstp
jae
int
cmc
add
pop
jnp
es
push
repnz
dec
subb
lcall
out
cmp
mov
and
and
shl
xor
stc
add
repz
cmp
xlat
add
stos
negl
or
stc
lea
popa
push
mov
jle
adc
ljmp
ljmp
loop
xchg
cli
lahf
enter
cltd
jnp
stos
leave
push
xchg
cmp
inc
imul
loop
std
test
orl
jns
add
dec
jno
ljmp
add
sbb
jb
or
stc
lret
ret
pop
imul
hlt
rorb
mov
or
xor
jg
mov
stos
push
inc
jp
rolb
fdivl
xorl
dec
mov
inc
lock
stc
add
xor
out
or
mov
xorb
sub
sahf
int
mov
enter
dec
movsb
mov
mov
push
rcll
iret
lcall
and
loope
xor
cltd
cmp
mov
xor
mov
aas
cmpsb
xchg
add
dec
xchg
in
popa
loope
negb
jb
dec
cli
out
cmp
adc
rorl
int3
cmpsl
mov
test
pop
cmp
sub
xor
shrl
or
push
leave
and
dec
or
popa
jns
push
shl
daa
fmull
iret
cltd
inc
js
ret
stc
int3
xchg
jno
jae
test
imul
add
inc
pop
bound
mov
dec
outsb
dec
inc
test
mov
cmp
pushf
fsts
and
jg
xchg
ficoml
mov
mov
fadds
aam
repnz
lock
inc
adc
xor
dec
cli
hlt
pop
ljmp
jge
push
dec
cltd
cmp
loop
imul
das
jp
movsl
or
add
cmp
cmp
pop
out
fs
fwait
ljmp
leave
dec
cmc
xor
mov
icebp
jmp
lret
jnp
xor
mov
ret
imul
mov
stc
cmp
loop
andb
ljmp
shll
test
sub
add
dec
std
dec
stc
adc
out
mov
out
hlt
subl
roll
jmp
divb
into
out
or
pop
push
lock
mov
xchg
add
imul
and
xor
cli
xchg
pop
mov
mov
mov
xorb
add
ljmp
ficompl
scas
jmp
jmp
pusha
loop
mov
popf
push
lods
int3
add
mov
leave
pop
jg
inc
push
sbb
sub
stc
and
and
out
dec
icebp
pop
test
fmull
pop
mov
loope
lret
inc
imul
jae
incb
mov
icebp
dec
sub
fbld
jns
add
repnz
fstpt
call
mov
mov
repnz
mov
sub
and
je
ljmp
and
mov
xor
dec
cltd
xor
jge
jle
pusha
cmpsb
dec
loop
push
mov
imul
roll
xor
xchg
cmp
inc
inc
loopne
rorl
adc
mov
push
call
fnstsw
in
aas
mov
aad
cmp
popa
aaa
sbb
outsl
imul
repnz
jae
shll
clc
lods
pop
mov
rolb
mov
push
xor
cwtl
bound
lcall
faddl
cmp
add
and
dec
andl
jns
push
fdivs
sub
mov
xor
imul
xchg
jnp
inc
push
leave
lods
pop
push
mov
fldl
jg
mov
scas
je
jle
inc
sub
lods
shll
mov
inc
pop
icebp
adc
sbb
dec
aaa
mov
cmp
xchg
sti
push
sbbl
test
andl
mov
xor
xchg
jns
jae
enter
adc
cmp
in
test
cli
cmp
shl
testl
mov
and
rol
xor
addr16
insb
in
int3
jmp
stos
mov
and
mov
ret
les
push
cmp
loope
xorl
hlt
mov
aam
pop
in
dec
mov
testl
xor
xorl
mov
dec
pop
jb
je
mov
in
push
mov
mov
xor
popa
cmp
push
mov
shll
fadd
lcall
loop
outsl
xor
jmp
imul
fs
rol
inc
xchg
andl
mov
jbe
mov
mov
rcrb
inc
mov
clc
jno
shl
loop
sbb
jg
insl
jp
push
mov
dec
lods
out
aad
xchg
test
lahf
out
cmp
add
stos
adcb
mov
mov
aad
add
in
cltd
imul
bound
sbb
push
insl
push
jge
aas
stos
lret
jns
cli
shlb
ja
xor
inc
jns
xchg
add
sarb
cmp
inc
inc
out
sbb
jno
cmp
pop
dec
aas
es
pop
mov
in
mov
dec
lret
ljmp
push
pop
cld
outsb
xor
xor
mov
bound
stc
jns
out
and
int3
push
fidivl
cmpl
jge
adc
inc
push
stos
fidivl
mov
push
jb
pop
dec
or
add
inc
mov
mov
xchg
leave
cmp
pop
adc
add
cmp
or
ljmp
inc
addb
pop
imul
sarl
sub
sub
pop
fidivrl
adc
in
repnz
pop
sub
or
cmp
inc
cmp
ret
cmpl
inc
or
orb
cmp
pop
lds
lret
mov
xlat
add
and
int
iret
push
xor
jmp
adc
fldcw
jae
xchg
popf
rcrl
xor
repnz
push
cltd
mov
imul
stos
stc
lods
sti
mov
mov
ljmp
jle
or
jge
mov
sbb
xchg
mov
push
hlt
mov
test
sbb
cli
scas
bound
fnsave
jg
adc
mov
push
out
mov
lods
mov
sbbl
dec
mov
sbb
stos
xor
mov
xor
adc
icebp
sub
arpl
xor
push
xchg
lret
in
movsb
int3
int
sub
popl
jge
or
inc
cmp
sbb
push
loope
add
addr16
iret
and
inc
stos
lret
pop
mov
fstl
lock
stc
rcll
mov
cmp
dec
xor
jp
mov
setb
adc
lret
icebp
inc
xor
bound
mov
push
dec
push
shll
icebp
cmp
xorb
fwait
repnz
in
loop
xchg
movsb
icebp
pop
jns
add
lret
cmp
stos
fadd
or
outsl
push
pop
stc
test
es
mov
and
aad
inc
gs
jno
bound
xchg
push
dec
sbb
jp
mov
xor
rcl
lcall
prefetch
hlt
cmp
jb
mov
adc
lahf
inc
dec
test
mov
jg
jg
jg
pop
shll
sub
stos
xchg
inc
jp
jnp
adc
push
mov
or
xchg
int3
mov
adcb
jg
push
xorb
jg
add
loope
hlt
ljmp
lcall
push
mov
mov
lods
clc
jle
insb
imul
in
dec
movsb
jae
loopne
sub
mov
and
mov
pop
and
or
sub
xchg
push
mov
cli
dec
xor
jnp
ret
cmp
cmp
adc
test
scas
arpl
loopne
dec
fiaddl
cmp
sti
lock
mov
dec
mov
push
shll
adc
mov
push
cmp
imul
mov
jno
repnz
leave
jns
mov
lcall
sbb
shrl
repnz
bound
mov
inc
aad
mov
rcl
mov
cmpsb
pop
out
outsl
dec
roll
mov
dec
inc
sti
inc
sti
loope
or
lock
shll
cmpsl
out
imul
shl
xor
lahf
sub
sbbb
xchg
mov
push
xchg
inc
xorl
jp
fistl
jae
jmp
push
mov
dec
inc
mov
repz
ficompl
jg
cmp
ret
mov
push
fld
popa
jp
addb
lcall
cmpsb
sub
xchg
ljmp
dec
rcrb
shrl
sub
cmp
out
add
xorl
aad
faddl
push
cltd
lock
mov
dec
outsb
out
in
push
fisubs
faddl
ret
jns
push
mov
sbb
bound
orl
fs
xor
jg
fucomi
repnz
fstpl
jge
jae
mov
pop
or
loope
xchg
mov
xchg
jae
or
out
jno
lock
outsb
add
and
mov
mov
jp
jge
sub
cmp
jns
loop
mov
inc
movsl
cli
cmp
or
xchg
pop
inc
add
cltd
mov
mov
push
mov
bound
outsl
xchg
cmpsl
xchg
adc
shrl
stos
pop
mov
mov
stc
stos
repnz
inc
das
xchg
cli
enter
rclb
xor
xchg
loope
mov
jmp
sub
lret
popa
loope
adc
adc
insb
ljmp
nop
test
clc
cwtl
lret
push
jmp
jp
lahf
scas
cmp
xchg
mov
out
push
rcll
add
stc
repnz
pop
or
push
pop
popf
out
lret
jns
jne
stos
inc
add
adcb
push
xchg
and
ror
mov
lods
andb
dec
ljmp
bound
push
lods
or
ret
lcall
insl
jmp
xchg
mov
adc
loop
dec
pop
dec
cld
mov
lret
mov
stc
jo
pop
add
mov
jns
inc
js
fstps
inc
jecxz
rcrl
fwait
call
mov
xchg
dec
cmpl
cmp
scas
xor
pop
std
push
inc
jg
jno
imul
call
xchg
scas
inc
out
and
pop
dec
xchg
inc
inc
and
cmp
xor
jmp
mov
aam
repnz
stos
jnp
mov
mov
inc
jb
or
push
test
cmc
or
aad
inc
mov
mov
sbbl
cmp
and
dec
xorl
stos
dec
dec
push
ret
jecxz
das
hlt
mov
jp
jmp
lret
leave
pop
and
in
mov
xchg
xchg
xchg
push
push
stc
inc
into
push
enter
dec
fidivrl
loop
rcrl
xchg
stos
jno
and
ret
sbbb
cmp
mov
and
jle
inc
cmpps
mov
and
inc
mov
movsl
icebp
inc
push
adc
mov
cmp
jae
gs
sub
mov
jae
imul
lahf
adcl
adc
loopne
das
jo
cmp
outsb
and
cmp
mov
jns
add
xor
in
pop
push
orl
je
lret
and
xor
jno
out
cmc
addl
sbb
jae
pop
aaa
mov
fdivr
push
add
aas
jno
mov
mov
out
inc
push
addb
aas
push
mov
loopne
js
fldcw
inc
out
mov
jmp
cmc
mov
adc
mov
inc
sub
ljmp
push
jno
idivb
adc
inc
fwait
jp
push
xor
add
push
cmp
jp
and
lcall
or
add
jnp
pop
stc
pop
mov
add
ficomps
stc
pushf
das
jno
int
push
jns
dec
xchg
clc
imul
insb
mulb
test
cmp
insb
cmp
lahf
sub
dec
stos
mov
push
cmp
cmpl
push
insb
inc
mov
sbbl
sti
cwtl
dec
enter
inc
lock
mov
imul
repnz
add
xchg
push
insb
mov
mov
sub
mov
sbb
bound
std
sub
clc
push
mov
xor
mov
xor
andb
add
test
mov
loop
jno
mov
xor
jns
lock
testb
sti
cmp
andl
sbb
push
xor
jge
mov
pop
iret
orl
lcall
lea
ret
shlb
xchg
mov
cmc
push
adc
rcr
xor
js
ja
stc
sbb
jecxz
xor
mov
std
scas
dec
and
in
icebp
dec
or
dec
add
xor
lods
jle
in
imull
adc
ljmp
inc
loope
mov
jp
lea
stos
jmp
cmp
mov
inc
inc
loop
mov
jnp
in
inc
mov
fdivl
orl
mov
clc
loope
adcb
cmp
imul
imul
loopne
in
sbb
call
mov
test
lods
or
imulb
addl
jge
xor
leave
arpl
push
pop
sbbl
cmp
orb
mov
dec
jne
outsb
fmuls
dec
pop
mov
lea
and
jne
outsb
mov
jno
inc
jge
lcall
shll
jbe
xor
icebp
add
xorb
stc
orb
cmp
rcrb
lcall
xchg
mov
pop
adcb
jge
push
lods
ljmp
and
mov
shrl
icebp
imul
fwait
jb
push
mov
incb
cmp
subl
and
sbbb
mov
addr16
cmpb
push
push
lret
loop
cld
out
jae
inc
push
dec
dec
stc
negb
pop
dec
fisubrl
testl
add
stos
dec
cltd
dec
mov
in
pushf
mov
or
cmpsb
arpl
arpl
mov
xchg
sub
repz
cltd
or
pop
fsubs
ror
ficoms
jno
test
sub
pop
es
nop
mov
inc
sbb
cli
stc
loope
test
negl
add
jp
mov
stos
mov
pop
adc
inc
popa
sahf
fadds
aas
inc
test
jns
mov
stc
cmp
fidivrl
or
ja
cmp
jbe,pn
mov
fidivl
jno
push
jp
std
lds
out
xchg
test
inc
mov
scas
pushl
push
add
cmp
push
aas
icebp
test
and
ret
or
ffree
or
push
ficoml
jbe
xor
mov
xchg
jmp
sub
push
ret
pushl
adc
adc
loop
and
pop
cli
mov
andl
jae
out
into
ljmp
adc
pop
jmp
xor
jno
cmp
es
mov
add
jmp
aaa
in
loope
enter
push
lcall
call
cmp
stos
hlt
push
inc
sarl
jge
sub
dec
mov
in
dec
sti
in
std
fstps
test
mov
sub
and
push
mov
sti
stos
repnz
or
push
insl
orb
popf
orb
xchg
xchg
bound
dec
xchg
rol
pop
mov
fwait
inc
fstl
in
mov
fldt
rcr
stos
ret
mov
xchg
scas
test
lret
adc
shlb
orl
add
lods
out
orb
es
jnp
xor
lods
mov
cmp
jg
in
test
jg
xchg
stos
stos
fwait
lret
insl
aad
loope
sti
aaa
xchg
jb
dec
xchg
addl
loop
push
fidivrs
inc
jae
cmp
adc
xor
ret
ret
lret
jmp
bound
aas
bound
aas
mov
jle
mov
repz
lret
dec
adc
loopne
fmulp
pushf
out
sar
frstor
cmpsl
sti
repz
dec
mov
popa
pop
cmpb
stos
repz
out
popf
push
leave
outsb
jle
jne,pn
sahf
jmp
mov
les
sub
mov
push
inc
cmpsl
test
dec
sub
mov
ret
loop
jbe
and
jae
pop
lahf
jmp
test
in
sbb
ja
xchg
cwtl
outsb
pop
and
sbb
dec
dec
fldt
ret
xor
xor
and
arpl
out
daa
cmpw
and
mov
sbb
mov
pusha
iret
sub
mov
mov
mov
mov
jb
mov
and
xchg
push
xchg
ret
pop
fdivl
lcall
inc
bound
ljmp
in
inc
sbb
xor
xchg
xor
xor
cmp
ja
or
nop
pop
sbb
stos
push
lock
icebp
inc
mov
daa
cmp
imul
cli
outsl
cmp
sub
mov
call
pop
mov
cmpsb
push
stos
bound
jl
sti
pop
mov
aad
repnz
dec
push
rcl
imul
lret
leave
test
push
repz
jae
lods
mov
dec
cmp
push
ror
mov
and
jb
sbb
cmp
pop
jp
hlt
ficompl
cli
xor
inc
jge
int3
popa
icebp
dec
xchg
xchg
insl
push
sbb
inc
jp
stos
inc
sbb
cld
pop
pop
cmp
mov
adc
adc
xor
dec
stos
mov
stos
addl
jnp
cli
test
leave
arpl
imul
mov
xchg
ret
dec
loope
jp
jno
cmp
pop
push
inc
mov
movsb
cmp
jnp
or
jae
arpl
jge
dec
orl
dec
mov
fidivl
xor
push
mov
leave
mov
adc
xor
shrl
imul
xor
ljmp
mov
and
add
rolb
jns
cli
in
scas
lock
icebp
dec
xchg
mov
cltd
cld
jns
inc
imul
stc
jecxz
mov
aam
dec
pop
cli
ljmp
sub
push
dec
lret
jle
sbb
mov
or
loop
cmp
mov
popa
jno
bound
mov
mov
popa
xor
repnz
push
ret
inc
mov
shll
sbb
xor
mov
pop
xchg
arpl
loope
out
loop
cmp
dec
xor
movsb
jl
cmpl
orb
ret
jns
xor
pop
bnd
mov
test
out
int3
mov
pop
xor
jp
xor
fsin
shr
dec
ror
push
pop
dec
sbbb
test
mov
stos
jno
adc
fnstcw
subb
fwait
jae
inc
add
lcall
lret
sahf
xor
inc
add
shll
bound
sbb
jae
mov
loop
cld
xor
cltd
xchg
cmp
les
repnz
inc
in
cli
pop
daa
mov
cld
dec
inc
cmp
sbb
stos
flds
out
repnz
jle
ret
jnp
sbb
inc
push
outsb
out
pushl
stos
sbb
add
push
jb
xchg
mov
sub
mov
jge
adc
mov
sbb
out
xchg
dec
add
inc
push
cltd
arpl
mov
jb
subl
into
rcll
xor
mov
inc
dec
out
outsl
dec
push
sti
cmp
bnd
cld
clc
popa
adc
popa
in
cmpsb
jb
imul
pop
jae
test
out
fbstp
roll
jecxz,pt
fs
imul
lcall
lds
jecxz
adcl
jno
mov
movsb
xchg
test
ja
mov
test
ds
out
imulb
jnp
std
inc
ljmp
cmp
adc
mov
mov
jnp
pop
adc
outsb
mov
jbe
bound
lods
cmp
in
repnz
stos
shll
adcl
pop
mov
movups
push
imul
ss
ja
insl
mov
adc
cld
cltd
jmp
xor
jno
fstl
dec
mov
mov
testb
jns
jns
push
pop
rol
imul
pop
push
and
stos
jg
push
mov
cmc
pop
sti
addl
jmp
lret
dec
mov
cmp
inc
cmp
rorb
jle
stc
xor
lds
jae
jmp
lock
sbbl
inc
jecxz
imul
test
pop
or
icebp
in
les
imul
stc
test
xorl
xor
pushf
jp
stos
inc
stc
in
lcall
lahf
out
sub
push
mov
adcb
sbb
stos
imul
icebp
mov
ret
sub
push
imul
jno
jnp
add
stc
jno
push
fcompl
mov
dec
mov
dec
inc
jmp
and
aaa
jp
xchg
mov
fld
rclb
xorl
fwait
std
jp
push
fimuls
mov
dec
es
fidivs
jae
rcl
xor
rcr
test
or
daa
inc
add
mov
imul
repnz
fdivs
xor
jecxz
in
mov
add
stos
fnstcw
mov
mov
sub
cld
sub
cltd
jmp
pop
imul
sti
fmulp
and
fimull
mov
stc
imul
push
push
je
and
daa
push
ja
inc
insl
add
cmp
inc
adc
jb
rcll
aad
push
cmp
movsl
and
xor
mov
stos
add
test
adc
ja
dec
push
inc
jno
or
imul
pop
dec
xor
add
lods
shl
bound
ret
loopne
rorb
jge
inc
jb
mov
test
cmp
arpl
inc
add
rol
jle
cmp
fcoml
leave
ficoms
call
orb
mov
popf
pop
stos
push
jno
dec
lret
fisubrl
mov
xchg
mov
xor
mov
and
mov
ret
mov
push
and
andl
ja
jnp
andl
pop
rclb
loope
mov
cmp
cmp
dec
rorl
jp
pop
mov
sub
test
nop
mov
fiadds
lock
inc
jp
xor
cltd
inc
stc
pusha
inc
mov
dec
jb
mov
arpl
mov
lds
pop
xor
and
lret
xchg
mov
cld
cmp
pop
flds
mov
inc
sarl
or
sarb
and
fcmovb
in
adc
loope,pn
dec
xchg
mov
inc
bound
subl
popa
mov
push
ljmp
stos
icebp
shlb
dec
cmpsb
mov
mov
lods
gs
stos
fidivrl
sub
pop
mov
and
std
xchg
jb
mov
fsubr
xchg
aas
inc
insb
pop
lret
dec
xchg
ret
imul
xchg
loopne
call
test
out
xchg
ja
fldcw
or
or
xchg
cmpl
mov
out
push
dec
fistps
or
ret
mov
imul
movsb
jno
jae
cmp
sbb
jecxz
pop
or
mov
leave
mov
popa
inc
jge
mov
dec
ret
std
mov
ficompl
inc
dec
lcall
mov
cmp
stc
cmp
in
outsl
jno
pop
cli
push
aam
xor
lods
inc
mov
test
xchg
inc
xor
cmp
cmp
jb
add
or
dec
cmp
in
mov
and
add
mov
outsb
mov
mov
dec
xor
pop
mov
fwait
pop
bndstx
orl
cltd
xor
and
and
insb
and
loope
cli
test
adc
stos
push
jb
xor
hlt
cmp
cli
aaa
mov
stc
lea
cli
mov
push
mov
hlt
inc
cmp
pop
shrl
pop
add
dec
cli
ret
aad
cmp
into
lcall
ret
jns
lea
push
loope
dec
outsw
jne
sti
push
test
mov
xchg
inc
inc
push
lcall
mov
mov
push
mov
inc
xchg
in
popa
mov
arpl
dec
mov
mov
xchg
dec
into
lock
push
mov
hlt
ret
stc
and
rol
dec
xor
mov
fiaddl
mov
xchg
mov
jo
inc
adc
cmp
push
xor
jae
mov
xorl
inc
pmulhuw
mov
cmp
rolb
frndint
stos
mov
push
cli
into
push
loop
push
add
inc
cmpb
orl
cwtl
cmp
mov
out
cmp
enter
into
xorl
inc
jae
mov
xorl
repnz
xor
jnp
mov
jle
lds
xor
fsqrt
decl
ljmp
stos
mov
ret
cmp
imul
mov
jp
stc
jns
jno
negb
jae
jno
and
push
imul
jns
dec
xchg
mov
jne
bnd
or
add
fidivl
mov
add
cmp
std
jnp
mov
ret
cmp
jl
ret
scas
dec
cmpl
fs
je
lods
jp
in
jmp
mov
adcl
shl
adc
jnp
mov
jns
dec
xchg
or
sbb
mov
xor
popa
leave
mov
mov
loopne
lcall
mov
cld
mov
loope
add
lock
adc
subb
push
cmp
imul
pop
ljmp
into
sbb
jno
mov
std
shr
push
repnz
or
and
setb
adc
je
pop
in
inc
add
jns
adcl
push
aam
inc
add
xchg
ljmp
out
std
pop
test
cli
popa
mov
andb
cwtl
stos
xor
mov
inc
das
mov
xor
subb
and
inc
cli
push
lock
inc
loope
xor
inc
push
ret
or
cli
mov
bound
pop
stc
lahf
mov
xchg
fwait
jp
test
subb
mov
cltd
stos
mov
cltd
mov
cmp
in
jns
xchg
out
xchg
and
inc
loopne
dec
and
es
imul
js
mov
jge
pop
xchg
clc
pop
push
mov
mov
lahf
repnz
xchg
mov
cwtl
sti
push
add
cli
mov
call
test
insb
imul
mov
or
mov
dec
mov
shl
sub
or
loop
int3
push
push
in
adc
jno
in
decb
cmp
sbb
mov
lret
ljmp
mov
cmp
mov
mov
pop
loop
ror
cwtl
or
fcomps
loop
ret
sub
jecxz
pop
xchg
cmp
jnp
mov
int3
scas
dec
lahf
fisubrs
leave
cltd
inc
xor
pop
dec
stc
in
inc
shrl
call
mov
fcmove
jns
hlt
hlt
xchg
mov
mov
movsl
in
mov
pop
flds
mov
mov
dec
jo
sub
ficomps
stc
jo
inc
lock
inc
add
shll
inc
dec
sbbb
imul
repz
add
imul
sbb
jg
add
leave
mov
pop
popa
pop
dec
cli
lret
mov
arpl
jns
mov
enter
sub
adc
add
mov
fbstp
repnz
pop
lods
lock
xchg
std
gs
cmp
cmpsb
popa
pop
dec
inc
jmp
lret
mov
int3
sbbl
test
pop
push
enter
add
mov
popa
pop
aam
pop
and
cmp
mov
imul
shrb
sub
movsb
sub
fs
stos
rcr
inc
faddp
enter
xorb
pop
ret
push
jg
xor
add
ret
fstps
xorb
mov
adc
mov
in
push
adc
aas
jnp
mov
xchg
push
div
lods
dec
popa
cmp
inc
cltd
xchg
and
je
stos
adc
pop
dec
leave
mov
cmp
ret
cmp
imul
lcall
hlt
mov
loopne
ljmp
pop
js
repnz
ljmp
cmp
mov
pop
push
inc
pushf
aad
add
and
arpl
cmp
add
popa
addl
sarl
lcall
cld
jae
popa
mov
rolb
mov
sbbl
loopne
repnz
push
jne
stc
pop
stos
pushf
cmp
mov
mov
lahf
sahf
jns
mov
popf
inc
call
inc
pop
cli
icebp
stos
xchg
sti
sbb
cmp
cmpsb
mov
and
jl
xchg
push
daa
sub
sbbb
fdiv
mov
xor
rorl
and
xor
loop
popa
inc
stc
in
stc
nop
lahf
rclb
xor
leave
inc
mov
cli
mov
sbb
lods
out
cltd
stos
icebp
mov
add
jae
test
shll
dec
add
call
test
adc
push
std
loopne
adc
jge
fwait
inc
ljmp
sti
stos
pop
loope
jne
mov
mov
add
daa
jmp
icebp
stc
dec
jnp
and
imul
bound
and
xchg
outsl
sbb
add
xor
imul
xchg
mov
int3
ljmp
ljmp
mov
dec
xchg
or
arpl
inc
sbbb
int3
shrl
mov
subl
mov
cli
inc
into
out
test
in
popa
test
cmpb
cld
leave
pop
inc
imul
and
in
lret
mov
mov
insl
lock
push
lret
je
dec
add
mov
ret
cmp
popa
xchg
fwait
jp
xor
jno
mov
mov
stos
mov
lods
test
push
rol
dec
mov
xchg
dec
test
mov
dec
orl
push
mov
jmp
rol
fadd
cltd
fnstenv
aad
xor
into
icebp
add
dec
shr
xor
push
stos
dec
fdivl
jae
xor
in
fidivl
sub
xchg
push
jno
stos
cmp
cltd
sub
adc
imul
cmp
popf
neg
flds
mov
addl
ret
jb
ljmp
mov
leave
and
stc
push
jns
xor
sub
jb
add
mov
mov
inc
push
test
aas
and
inc
inc
dec
xchg
mov
pop
mov
xor
mov
jns
sbb
cmp
arpl
insl
fmuls
loope
das
jnp
loopne
dec
imul
fbstp
cmp
push
jecxz
outsl
not
loope
jecxz
cmp
dec
bound
loope
mov
icebp
push
leave
pop
stc
scas
mov
xorl
lret
mov
lahf
shlb
sbb
xchg
fcmovnb
daa
pop
mov
and
mov
outsb
xchg
mov
jo
insb
das
cmp
aas
imul
mov
subl
push
dec
std
jnp
cmp
loope
inc
test
add
cmp
inc
arpl
adc
pushf
hlt
dec
dec
jmp
imul
shll
jns
mov
sub
mov
sbb
out
sbb
inc
shr
pop
adc
or
test
loope
jbe
and
xchg
or
repnz
int
xor
out
je
loop
jg
ret
pop
xchg
lods
adc
hlt
lods
repnz
clc
arpl
push
dec
cmp
fists
ljmp
jno
xor
add
lcall
aad
fs
push
shl
lcall
dec
andl
jnp
loop
xchg
aam
fnstenv
ret
cmp
push
inc
lods
fisubrs
arpl
jmp
pop
cltd
cli
mov
insl
xor
jns
xor
in
cmp
bound
jns
sbbb
xchg
inc
mov
push
mov
push
mov
inc
adc
mov
fnstsw
xchg
jle
aaa
add
rorl
mov
sbb
jp
jb
xor
xor
sbb
test
xor
push
cmp
lahf
mov
mov
sahf
ret
dec
or
pop
sub
pushf
repnz
push
bnd
push
adc
jge
mov
cmp
insb
mov
movsb
stos
rcll
popf
add
mov
add
stc
subb
shlb
adcb
inc
mov
test
xchg
mov
push
mov
xchg
jae
pop
lahf
out
mov
adc
mov
aas
and
adc
mov
mov
shlb
imul
mov
adc
arpl
cmp
adc
int
fmuls
jb
adc
xchg
adc
adc
and
scas
ljmp
and
pop
and
scas
adcb
and
xor
adc
mov
fistpll
adc
adc
rclb
mov
imul
and
js
xor
fnstenv
mov
jb
rcll
and
jb
jmp
pop
and
and
mov
add
inc
and
and
mov
call
xchg
test
cmp
pop
dec
sub
popa
out
adc
enter
xchg
lods
dec
jnp
pushf
lods
jp
add
fimull
repnz
pop
jae
cli
jb
mov
stos
stc
inc
stos
mov
pop
and
push
jo
mov
mov
cli
das
icebp
fsubrl
and
sarb
cmp
imul
popa
pop
mov
push
jmp
addr16
add
mov
dec
or
jbe
push
dec
dec
or
push
aaa
popa
das
sbb
rcrb
mov
mov
jge
adc
mov
cli
sub
fwait
repnz
dec
or
pop
jno
cmp
and
ds
stos
rcll
notl
adc
xor
cmp
inc
push
jae
int3
cmp
roll
and
enter
inc
mov
test
imul
fidivrl
loop
inc
aaa
jae
push
jp
lds
ret
popa
jno
addb
dec
movsb
xchg
inc
push
mov
mov
jmp
push
xor
subb
pop
icebp
mov
cmp
fisubrl
mov
jno
jg
jno
icebp
ret
push
sbb
hlt
stos
loope
xor
mov
sarl
shrl
mov
cmpl
lds
scas
pop
inc
add
ret
popa
xor
insl
xlat
pop
mov
mov
insl
fs
cmp
ret
test
sbb
sub
cmpsl
add
cmpb
inc
dec
call
repnz
shrb
incb
cltd
cli
pop
cmp
jnp
push
cmpb
mov
mov
outsb
xchg
mov
cld
xor
ss
and
inc
int3
lds
mov
loop,pt
push
jnp
jmp
add
sub
bound
enter
lds
cmp
dec
lret
test
fs
mov
jne
lcall
popa
in
jns
dec
rol
leave
pop
pop
fstps
pop
fisubrl
imul
mov
subb
xor
jae
mov
loope
add
sub
out
xlat
outsb
inc
test
mov
dec
int
sub
push
andl
sbb
lret
mov
cld
and
bound
push
mov
movsl
xlat
mov
dec
repnz
xchg
mov
inc
icebp
pop
inc
stc
decb
bound
jge
xchg
jbe
clc
and
push
push
cli
popf
arpl
ret
adc
inc
lcall
shll
sub
dec
adcb
xchg
mov
dec
mov
popf
test
stos
mov
dec
pop
add
jne
or
mov
test
cli
fnsave
mov
dec
push
xor
cmp
xor
or
imul
jmp
stc
jae
mov
addl
mov
jns
cmp
imul
loope
jae
xchg
dec
imul
push
lods
lods
cmp
pushf
stos
mov
add
inc
jns
mov
call
repz
in
xor
sbbb
sub
pop
mov
lahf
andb
fists
imul
lcall
jecxz
imul
jmp
pusha
je
adc
mov
mov
dec
test
dec
repnz
leave
jmp
dec
cltd
mov
lret
lcall
mov
ret
dec
mov
roll
rorl
pop
dec
inc
adc
jo
fs
dec
imul
lods
xor
jne
loopne
aaa
stos
popa
fldl
repnz
pop
loope
cld
mov
rorl
mov
shl
dec
mov
jecxz
xchg
loope
add
inc
imul
xor
jge
cltd
cmpb
mov
mov
add
roll
mov
int3
lods
ljmp
imul
icebp
push
arpl
jecxz
pushf
loop
push
cli
mov
dec
stc
dec
lret
in
leave
jg
jecxz
jp
mov
jnp
pop
ret
out
cmp
pop
inc
loopne
orl
lods
ljmp
roll
pop
iret
jb
and
lcall
xor
leave
loope
jne
and
clc
adcb
bound
int3
imul
stos
inc
fs
mov
cmp
popf
push
push
pop
stos
dec
sbb
repnz
pop
testb
ret
xor
sti
idivb
pop
ljmp
lods
je
in
cmc
loope
icebp
mov
sbb
xor
int3
decb
stos
lock
cmp
dec
loope
ficompl
addb
subb
std
test
inc
mov
jae
dec
mov
lret
jg
jns
mov
orl
add
dec
inc
cltd
inc
add
ret
lods
or
in
jmp
fidivs
jae
push
popf
mov
push
enter
jnp
test
push
jno
xchg
push
dec
inc
cltd
add
xchg
ljmp
fldcw
inc
inc
mov
mov
dec
pop
inc
jle
and
shl
fld1
mov
jnp
stos
dec
dec
stc
and
jns
sbbl
leave
mov
imul
mov
dec
arpl
adc
mov
sub
push
mov
cmp
dec
jae
cmp
xor
in
xchg
enter
pop
loopne
jmp
inc
out
push
inc
int3
test
pop
loopne
dec
and
stos
mov
xor
and
test
repnz
cmp
movsl
inc
aaa
hlt
jl
jae
les
repnz
popcnt
xchg
enter
jb
cmp
mov
addb
xchg
inc
shll
inc
jge
inc
repnz
mov
lret
mov
stos
xorb
push
jns
pop
pop
test
ret
jp
pusha
xor
jno
pop
call
adc
mov
push
push
push
cli
imul
cmp
xchg
xor
inc
mov
mov
dec
adc
bswap
stos
sbb
ficoml
and
cmpl
xchg
mov
cmp
push
mov
ret
mov
shlw
dec
inc
mov
dec
mov
ljmp
imul
mov
in
mov
data16
xchg
mov
and
popf
scas
jecxz
mov
mov
loop
mov
mov
jns
aam
ljmp
add
dec
cmp
pop
mov
in
pop
lods
stos
fisttpl
adc
fs
movsl
fs
idivl
push
dec
mov
mov
push
subb
bound
leave
imul
inc
add
cli
pushf
shrl
outsl
xchg
inc
xor
jae
in
in
imul
jmp
cmp
popf
andl
mov
or
pop
xor
ljmp
dec
pop
pop
and
push
fs
popa
pop
ret
or
loopne
sub
int
arpl
mov
in
jnp
cmp
or
jmp
pop
mov
insl
dec
stc
ret
xchg
outsb
add
mov
lcall
imul
sbb
cmp
outsl
cmp
dec
andb
inc
jmp
jmp
push
rcl
jno
cltd
mov
jmp
mov
dec
gs
xor
jns
stc
arpl
dec
pop
popa
loope
pop
and
xor
cmp
push
fimuls
enter
push
shll
xchg
cltd
repnz
and
sar
arpl
pop
xor
inc
mov
or
cmp
xor
xor
cli
es
dec
leave
cmpl
dec
stos
jg
jb
mov
test
inc
hlt
inc
cltd
pop
out
cmp
push
cmc
dec
mov
add
icebp
inc
sub
jge
jae
mov
fldcw
cltd
jno
icebp
adc
mov
test
jae
mulb
xor
inc
jle
fcmovb
xchg
pop
hlt
jb
ret
add
jge
adcb
dec
imul
sub
jno
mov
rorl
xor
out
ljmp
inc
jnp
loop
movsl
jle
bound
push
lock
cltd
dec
mov
loope
loope
add
mov
int
sar
push
call
or
test
pop
lods
dec
mov
out
cmpsl
insb
std
push
pop
pop
mov
xchg
icebp
push
push
pop
rcll
jae
outsl
xor
stos
and
rcrb
xchg
jo
and
sarl
incb
jp
jns
rcrl
push
dec
dec
jmp
test
adc
xor
test
mov
mov
dec
add
ret
adcl
mov
ret
loop
leave
aas
out
inc
mov
jmp
dec
push
jge
mov
shl
cmp
xchg
stc
push
out
ja
icebp
sarb
lret
adcb
push
repnz
enter
movsl
pop
clc
xchg
cmp
lea
fcoml
jge
jg
xor
and
fcmove
push
mov
dec
jg
adc
out
test
ficomps
loope
shlb
mov
fdivrl
imul
push
add
mov
or
inc
subl
mov
push
jb
lret
and
lods
sbb
mov
shrl
incb
inc
xor
push
aas
pop
sbb
cmp
and
dec
ret
push
outsl
pop
inc
int3
aam
push
jp
stos
rolb
xorb
divl
dec
test
fwait
mov
loope
mov
jmp
add
icebp
adc
dec
sbb
jle
dec
inc
imul
popa
loop
sbb
rcr
test
jb
stc
imul
fidivl
arpl
clc
cmp
rorb
sti
jbe
int
dec
repnz
sbb
mov
push
xchg
or
mov
orl
sbb
jnp
bound
je
loope
cld
dec
dec
inc
repnz
add
pop
jg
inc
out
ret
add
dec
pushf
rolb
mov
in
xor
cmpl
popf
sar
push
cmpsb
mov
orb
lret
pop
mov
mov
pop
inc
xchg
arpl
jnp
decl
jno
mov
inc
lret
subl
xchg
pop
call
out
iret
adc
imul
sbb
faddl
rol
sub
and
add
cltd
cmpl
testb
dec
mov
clc
mov
mov
cli
lahf
jp
out
popf
adc
mov
movsb
stos
jp
repnz
push
outsl
cltd
lock
nop
xor
fdivrs
push
sub
cltd
pop
ss
mov
and
jg
out
xchg
mov
out
std
mov
push
mov
cltd
jb
imul
imul
push
mov
repz
or
stos
mov
inc
push
add
hlt
sbb
jp
popf
ret
jns
and
mov
gs
jnp
xor
inc
pop
add
test
popa
imul
cmp
adcl
cmp
sbb
repnz
adc
adc
cld
add
mov
dec
push
mov
xchg
add
sub
mov
call
xchg
mov
out
imul
jns
sbb
jno
lahf
sbb
sub
adcl
jae
ljmp
addb
insl
arpl
xchg
loop
in
fisubrs
clc
daa
push
push
adc
adc
outsl
mov
push
dec
pop
adc
loop
cli
jns
cmp
xor
sub
mov
jo
aas
dec
fistl
std
testb
jb
jmp
and
sarl
jg
mov
xor
dec
insb
add
sarb
in
xchg
inc
xorl
mov
notb
jns
and
mov
pop
pop
sub
jb
fldcw
inc
sarb
mov
imul
andl
lea
leave
xor
cmp
fcompl
add
mov
pop
inc
outsb
and
cmpsl
sbb
inc
or
mov
enter
flds
fwait
jge
and
push
rorb
push
icebp
cmp
int3
xor
jnp
stc
mov
cld
jp
mov
lret
jns
stc
repnz
mulb
add
arpl
jno
push
pop
jae,pt
pop
fisubs
pop
dec
loopne
fcomps
pop
mov
pop
jae
mov
cmp
clc
outsb
push
jno
cwtl
cli
in
jb
in
xorb
fiaddl
mov
inc
jge
and
test
pop
mov
neg
sbb
fmulp
loopne
fdiv
pop
icebp
imulb
xor
jno
adcl
add
loop
pop
repnz
dec
mov
mov
jecxz
in
mov
jb
decb
jp
arpl
xor
mov
negl
inc
sti
andb
sub
hlt
lret
cmp
lret
scas
dec
or
mov
lock
push
out
pop
pop
cli
enter
mov
jnp
bnd
sti
sub
shll
or
scas
mov
mov
fists
loop
leave
and
cmp
dec
imul
daa
xchg
add
pop
insl
sbb
int
sbb
add
cmp
mov
insb
stos
sahf
push
fisubs
mov
popf
pop
mov
popa
add
jno
inc
sbb
mov
cmp
mov
inc
mov
loope
fs
pop
adc
icebp
imul
cmp
mov
jb
ret
stos
insb
dec
lcall
pop
adc
and
push
mov
xchg
mov
mov
pop
cmp
or
mov
push
pusha
xor
sub
leave
cltd
cmp
adc
lret
fcmovnbe
jae
inc
ja
orl
jnp
aas
loopne
fldenv
ficompl
xorl
xchg
sbb
icebp
sar
loop
add
mov
adc
xchg
push
push
pop
aaa
push
bound
jnp
mov
add
dec
shr
jp
ds
jg
leave
cmp
mov
dec
jne
lret
andb
cwtl
inc
insb
imul
push
push
in
inc
cltd
add
lahf
lret
push
add
out
fucompp
xchg
mov
arpl
subb
lock
mov
out
leave
fldl2t
out
adc
xchg
dec
test
pop
jns
push
incb
ljmp
sbbb
mov
insb
imul
fisubs
sub
lret
ljmp
in
leave
negb
stos
jnp
add
pop
test
mov
push
imul
mov
out
jmp
or
sbb
fwait
jmp
leave
push
inc
lock
cmp
jmp
loop
mov
bnd
adc
mov
sbb
add
dec
inc
in
jnp
pop
in
pop
loope
stos
mov
mov
sbbl
pop
outsl
std
ret
ret
or
lods
push
dec
mov
inc
pop
fdivrs
loope
cmpb
insb
cwtl
adc
ja
fstps
mov
jp
orl
jno
push
icebp
push
xchg
movsb
pop
or
mov
cltd
test
dec
cmp
xchg
inc
icebp
push
fwait
inc
jo
ret
xor
mov
adcl
mov
and
outsb
aam
cltd
pop
push
or
adc
lahf
imul
jno
imul
mov
xor
jns
insl
adcb
outsb
call
andb
in
notb
sub
inc
sbb
cwtl
or
mov
insb
fdiv
push
popa
icebp
rcrl
add
repnz
pop
dec
sub
in
test
jg
dec
hlt
in
mov
rcrb
sbb
bnd
bnd
cmp
inc
inc
inc
pop
pop
in
cmp
jg
sbb
xor
mov
jae
je
rolb
lock
imul
ja
cmpsb
pop
enter
inc
fdivl
and
and
xchg
xorb
mov
enter
loop
jno
mov
loop
shrb
cmpl
adc
inc
jns
jno
inc
in
out
push
stos
mov
jp
mov
aam
push
stos
and
je
mov
popa
lret
arpl
jno,pn
outsb
xchg
jg
ljmp
mov
rorl
cmp
push
stc
cmp
jg
stos
rol
mov
mov
aad
mov
and
mov
jge
ret
mov
xchg
xchg
inc
leave
mov
imul
stc
stos
leave
mov
je
lahf
push
jnp
sti
mov
repnz
mov
mov
mov
cmpsb
push
add
cmp
mov
out
push
and
iret
rcr
and
mov
stos
into
xchg
inc
xor
mov
mov
or
insl
adc
pop
test
into
popa
and
xor
sub
icebp
addb
inc
xor
cmp
xor
or
jne
out
xchg
leave
xchg
adc
jg
sbb
mov
idivb
jecxz
ret
inc
jno
push
flds
sub
loope
adc
xchg
iret
dec
pop
and
push
push
xor
bound
imul
inc
shlb
jae
xchg
imul
in
stc
testb
jle
mov
sub
xor
cmp
jb
imul
loope
enter
popa
pop
stos
add
rclb
fcmove
cltd
dec
or
aad
mov
dec
cmpsl
or
lock
repnz
or
fsubr
xchg
mov
mov
jae
dec
jb
cmp
andb
lcall
mov
inc
sub
inc
xchg
mov
fimuls
fnstcw
inc
clc
cmp
into
out
sub
adc
cmp
cli
or
mov
or
leave
xor
mov
xchg
add
xchg
mov
dec
sub
xchg
cwtl
arpl
push
bnd
enter
pop
dec
xchg
lock
leave
in
add
add
cmpsb
ret
jecxz
jb
adc
stc
cli
jge
cmp
mov
mull
inc
cmp
insb
jp
add
xor
movsb
dec
mov
inc
lods
pushl
pop
arpl
fisubs
push
inc
ljmp
test
push
loop
mov
jae
jge
shrb
enter
jp
incl
call
mov
loopne
lock
addb
jb
xorb
mov
jno
and
push
leave
cmp
std
xchg
xor
mov
enter
inc
scas
dec
repnz
jge
inc
dec
xor
ds
cmp
sub
jp
xorl
adc
xchg
jmp
arpl
jb
fldcw
int
icebp
sub
vshufps
mov
push
jns
mov
lcall
mov
mov
sarl
cmp
lahf
mov
cmpb
bound
xchg
cltd
fidivl
lret
pop
mov
inc
jns
cltd
subb
test
hlt
lret
cmpb
pop
add
push
inc
push
or
xchg
pop
repnz
or
mov
jnp
add
fiaddl
or
imul
sub
sbb
rorl
inc
jnp
adc
xorb
sarl
addl
sub
mov
enter
fcomps
adc
xor
sbb
rcll
push
ret
jae
clc
in
push
bound
test
imul
pop
fwait
popa
mov
inc
mov
dec
lods
inc
repnz
fsts
mov
mov
icebp
mov
pop
jb
dec
repnz
fdivl
arpl
xadd
shlb
cli
lods
cltd
stc
mov
roll
bound
leave
mov
fstpt
leave
insb
fidivl
lahf
cmp
sub
sbb
sub
jmp
ljmp
fidivrl
in
repnz
pop
stos
cld
das
leave
pop
inc
sbb
arpl
xor
cmp
jmp
mov
bound
xlat
sbb
das
jns
idiv
sarl
cli
jge
and
lret
push
fs
inc
mov
jmp
fcoml
push
nop
adc
in
mov
jmp
mov
aas
jmp
icebp
mov
repnz
bound
jp
pop
nop
arpl
ljmp
xchg
or
insb
loop
mov
dec
cli
orb
inc
icebp
mov
jnp
jecxz
mov
and
sbb
xchg
fmull
stc
add
imul
and
xor
jnp
pop
inc
decl
jns
pop
ljmp
jb
mov
rcll
adc
cmp
jp
cvtps2pi
pop
lea
xchg
mov
cmpsl
xchg
add
imul
jns
jp
cli
push
stos
add
jo
jne
xchg
sti
insl
subl
and
jno
pop
push
addl
lcall
inc
lods
scas
jno
lcall
push
mov
loopne
pop
lock
shl
and
cmp
in
shr
cli
add
jns
jl
pop
xchg
or
dec
mov
and
arpl
push
shl
pop
imul
mov
insb
int3
jnp
imul
std
mov
dec
xchg
jge
in
jge
ret
jae
or
adc
mov
jnp
dec
adc
push
jne
sbb
mov
ljmp
pop
inc
cli
mov
jp
xchg
sbb
jno
dec
sbb
popf
loope
jnp
inc
inc
push
push
cwtl
int3
sub
mov
xchg
inc
arpl
inc
imul
enter
stos
dec
mov
push
cmp
or
mov
add
arpl
cmp
pop
push
mov
pop
test
bound
loop
jp
stc
ret
jnp
xor
in
jae
loope
push
fidivs
shrb
outsl
aaa
or
ljmp
jno
cmp
pop
mov
fcmovu
mov
xor
mov
ret
das
jp
jmp
movsb
loop
sahf
pop
add
xor
jo
push
nop
shrb
rorl
fidivl
lret
xchg
mov
addb
pushl
loop
push
decl
cli
jmp
aas
ss
pusha
jp
pop
push
shll
icebp
or
push
jg
cld
mov
leave
push
mov
add
jp
cmp
fsubrs
test
fmuls
mov
inc
adcl
rcll
into
add
mov
cmp
dec
aad
cmp
enter
mov
fmul
or
popa
pop
ret
mov
mov
inc
mov
imul
dec
mov
xchg
daa
lret
icebp
mov
je
fs
push
ret
pop
pop
pop
pop
xchg
xchg
ret
imul
pop
enter
xchg
mov
shll
adc
add
pusha
dec
roll
sbb
cmp
loope
jns
pop
jp
adcl
mov
ljmp
xor
mov
jp
lret
jnp
ljmp
loope
pop
dec
sub
inc
ljmp
adcb
fnstenv
inc
ret
push
xor
arpl
dec
ret
ret
loope
add
push
lret
push
pop
mov
cmp
lods
repnz
lods
lcall
mov
ret
hlt
fnstenv
jmp
popa
sub
bnd
push
sar
sbb
popf
movsb
lahf
add
jg
jecxz
lcall
subl
jle
movsb
mov
mov
add
xchg
sarb
and
loope
dec
mov
push
sub
imul
push
stos
pop
test
fistl
sub
lods
nop
or
mov
cld
dec
push
lods
mov
or
loop
call
repnz
test
js
enter
shl
xor
insb
push
pop
cld
mov
adc
add
loop
add
dec
push
and
mov
lahf
lods
add
popa
xor
and
adc
jle
aad
lahf
sub
mov
ja
mov
lret
loopne
mov
fisubs
jns
mov
jg
sbb
xchg
xchg
pop
pop
fisubrl
bnd
and
push
cltd
cmp
hlt
jg
addl
cmp
and
or
inc
inc
out
inc
mov
jg
dec
cltd
jecxz
repnz
hlt
sub
mov
addr16
add
mov
repnz
aas
inc
or
jle
inc
stos
icebp
mov
fisttpll
loop
stos
mov
mov
push
fs
js
cmpl
xchg
mov
cmp
fisttpl
shrl
or
adc
and
sub
clc
scas
mov
dec
mov
mov
push
leave
xchg
repnz
xchg
out
adc
jecxz
pop
outsl
push
out
xor
sbb
test
jno
ds
mov
dec
fdivp
inc
stos
lock
out
cmpb
out
xchg
jb
xchg
loopne
sarb
or
shlb
loope
in
aas
mov
popa
mov
jb
repnz
mov
inc
sbb
cltd
jecxz
shrb
call
mov
add
test
push
lret
push
mov
pop
imul
outsb
arpl
xorl
cli
push
jns
andl
popa
mov
test
imul
jle
add
inc
xorb
and
lods
xchg
sarl
cli
shlb
add
jne
sti
dec
mov
sti
fwait
jne
lea
adc
sub
repnz
outsl
mov
outsl
mov
sbb
jge
sub
jb
and
sub
repz
mov
mov
fsub
imul
jp
push
leave
xor
popf
adc
popa
sbb
daa
cmc
fildl
leave
xorb
push
imul
mov
mov
sub
or
push
jb
in
cmp
jg
or
out
stc
and
shll
jecxz
mov
loope
xchg
pop
lret
pop
lock
cmp
jle
cs
js
or
data16
mov
jg
inc
enter
lods
cltd
xor
jno
mov
enter
stc
arpl
jae
jg
clc
outsb
imul
mov
add
mov
fdivr
enter
daa
xorl
adcl
mov
jmp
hlt
dec
dec
ret
out
lret
xorb
push
jg
push
dec
sbb
enter
mov
loope
push
cmp
mov
dec
xor
push
jp
mov
jne
ret
rorl
mov
inc
adc
xor
push
push
inc
or
push
stos
sbb
enter
orb
fs
push
addl
lret
shll
fidivrl
je
je
pushf
cltd
outsl
mov
test
or
sahf
repz
mov
shl
xchg
lret
adcl
cli
std
mov
inc
lods
xchg
icebp
rcrl
pop
mov
loop
cltd
test
xchg
add
dec
inc
xor
imul
mov
cmp
stos
cltd
jo
push
shll
pop
and
adc
imulb
test
fnstcw
xchg
test
xor
testb
sahf
mov
imul
leave
xor
mov
fisubl
lahf
repz
jecxz
fs
popa
ret
adc
mov
in
imul
sub
fdivs
lods
xchg
xchg
hlt
xor
xchg
in
icebp
imul
xchg
push
push
push
add
push
in
mov
mov
xor
repnz
dec
arpl
stos
arpl
lcall
push
pushl
cmp
imul
mov
pop
inc
xor
aas
dec
dec
push
pop
insl
push
jge
jg
lods
inc
adc
loop
dec
mov
xor
mov
cmp
push
fsts
lock
jecxz
mov
mov
sbbl
loopne
and
in
lcall
popa
mov
ds
stos
stc
xchg
sahf
cmp
lret
and
call
inc
fsts
cltd
jne
sbb
out
lock
sarl
pusha
lcall
cmp
mov
mov
jge
std
push
ret
mov
out
ret
fdivl
jb
das
adcl
test
cli
cmp
inc
jns
movsl
idivl
push
aaa
push
sub
inc
adc
dec
cmp
pop
mov
jnp
sub
popa
imul
rolb
jge
push
mov
jmp
mov
in
leave
das
nop
jmp
jno
push
lret
shll
cltd
lret
inc
dec
pop
test
xchg
or
fmuls
inc
movb
mov
rcll
adc
fstpl
xchg
jmp
cmp
sub
jnp
repnz
iret
jmp
mov
pushf
mov
insb
into
jns
inc
lcall
cltd
jmp
mov
xor
icebp
cld
push
cmpl
imul
je
subl
pop
pop
rclb
add
cmp
in
rolb
sar
das
jo
mov
mov
lret
lock
fsubs
mov
ljmp
push
shufps
jae
jne
cmp
lcall
repnz
and
pop
cs
addb
push
fisubrl
loop
jecxz
lret
add
mov
ljmp
shrl
ss
lcall
ret
pop
push
rcrb
jno
xchg
jae
inc
outsb
std
mov
fidivrl
mov
sarl
mov
push
jnp
jecxz
dec
mov
imul
mov
xchg
mov
test
xor
jbe
hlt
fnstenv
aas
mov
rol
sub
bound
imul
push
adc
je
add
mov
lea
out
dec
icebp
push
adc
cs
inc
xchg
or
cs
adc
shrl
pop
adc
push
imul
mov
gs
jno
jecxz
mov
ror
mov
push
std
lock
imul
pop
dec
add
cmp
xchg
adc
fistpl
mov
xor
jae
test
arpl
sbb
icebp
lcall
inc
testb
out
in
repnz
jle
adc
fcmove
test
mov
pop
ss
popa
mov
push
dec
outsb
and
jnp
fscale
stc
cmp
jne
xchg
lock
add
inc
enter
xor
iret
test
push
stos
mov
mov
pop
pushf
xchg
test
stos
fldenv
cmpl
popa
movsl
ljmp
xchg
ret
addb
jae
dec
popa
pop
mov
fcmovu
mov
cmp
subb
adc
xor
movsb
call
push
xchg
out
je
mov
hlt
out
lock
dec
andb
xor
mov
out
mov
push
mov
and
sbb
mov
insb
je
cmpsl
fs
popa
mov
aam
mov
fs
out
and
mov
mov
arpl
or
stos
cltd
and
jno
lcall
leave
daa
loop
cmp
bound
in
pop
dec
xor
fsts
jno
mov
cltd
loop
xchg
roll
stos
push
pop
inc
and
mov
mov
mov
or
icebp
xor
mov
not
jns
mov
popa
std
bnd
jp
fildll
xchg
stos
mov
xor
ss
addl
pop
sbb
add
inc
or
jb
sbb
clc
mov
dec
push
stc
jle
jns
jnp
daa
jecxz
int3
push
lret
roll
ljmp
icebp
fldcw
pop
mov
jb
loopne
jno
or
push
js
or
xchg
mul
rorl
cmpsb
imul
icebp
jno
std
push
mov
mov
dec
add
inc
or
cmpsl
movb
jae
push
arpl
mov
cmpsb
bound
js
xor
lahf
stos
ds
pop
mov
xorl
mov
imul
scas
cmp
addr16
inc
dec
stc
push
cmp
cmp
dec
jmp
cld
xor
lret
fs
clc
or
scas
push
adc
fadd
stos
push
add
jnp
imul
xchg
jp
mov
mov
add
mov
xor
pop
inc
xchg
test
sbb
sbb
sar
popa
sahf
pop
xchg
subb
jae
stos
add
mov
cs
ljmp
cli
mov
and
dec
xchg
mov
stc
mov
jle
ficomps
cmp
add
addl
mov
jo
and
in
std
clc
loope
inc
sub
push
lods
or
loop
mov
movsl
pop
repnz
pop
or
shrb
enter
popa
fsubr
adc
mov
inc
push
xchg
icebp
ljmp
mov
jmp
addl
cmp
mov
cld
mov
fptan
add
pop
inc
mov
fxch
jno
pop
xchg
add
popa
push
xor
lock
test
enter
scas
pop
add
jns
cmp
int3
call
dec
adc
ds
add
jp
ds
sti
mov
and
jne
sti
jns
daa
inc
mov
rcrb
sub
xchg
and
or
roll
dec
sbbl
dec
roll
ja
adc
and
push
shll
or
icebp
loopne
lret
inc
mov
ret
subb
or
inc
lret
imul
lods
iret
inc
inc
inc
xchg
icebp
pop
ljmp
jno
jns
ret
hlt
pop
imul
cmp
inc
stc
stc
jg
sub
leave
fwait
popa
bound
shrl
stos
dec
lret
imul
dec
icebp
mov
mov
loope
cmp
pop
popa
jnp
sti
xorb
out
mov
in
fimull
or
mov
cs
hlt
dec
cltd
aas
leave
mov
bound
loop
incb
xorl
and
inc
xlat
clc
adc
loop
mov
jae
ret
xor
loopne
leave
sbb
jnp
mov
push
clc
scas
push
mov
negb
stc
pop
imul
and
cmpsb
mov
pop
scas
mov
imulb
sub
add
popa
stc
lret
stos
repnz
enter
mov
arpl
out
xchg
push
xchg
add
test
push
jle
in
push
jb
ljmp
test
mov
lcall
inc
jnp
test
cld
jne
dec
shlb
cmp
mov
sti
sar
mov
fcompl
test
aam
loope
pop
lods
stos
jns
jmp
push
mov
jp
stc
ljmp
inc
ret
cmpb
jecxz
test
jmp
push
cmp
ret
cmp
lret
ljmp
jecxz
les
je
divl
fidivs
test
pop
mov
mov
je
ja
jp
mov
jmp
add
and
rorb
pop
xorb
adcb
imul
in
scas
icebp
jb
pop
shl
in
xor
shll
stos
lret
add
movsl
jns
add
fucomp
ret
pusha
lods
hlt
pop
stos
jb
fmull
loop
addb
loope
adcl
in
arpl
subl
mov
pop
test
scas
stos
mov
inc
mov
push
loope
mov
lea
cmp
stos
xor
push
push
loopne
mov
stos
jp
mov
mov
test
add
cmp
stos
push
negl
sti
das
into
mov
sahf
fsub
leave
stos
loopne
mov
mov
fdivrl
mov
dec
jp
aam
imul
mov
inc
stos
mov
stos
sar
mov
add
mov
bound
loope
pop
mov
add
inc
dec
out
in
add
ret
lods
mov
insb
orb
daa
inc
rorb
ljmp
mov
hlt
arpl
jno
jp
out
or
mov
mov
inc
mov
adc
cmp
xor
cmc
sbb
xor
lcall
leave
cmp
inc
inc
adc
lcall
mov
stos
mov
jp
push
mov
lret
mov
inc
lret
pop
cli
nop
jae
mov
mov
repnz
movsb
mov
inc
fsubrl
fisubrs
enter
addl
xchg
mov
add
rcll
repz
in
call
inc
cmp
sbb
ja
push
jnp
ret
lods
jae
ror
out
lock
lods
cli
or
insl
inc
cmpsl
out
fsts
in
mov
add
jle
push
jecxz
xor
and
fmul
xchg
jmp
mov
fst
jno
dec
cmp
cmp
jns
mov
int3
dec
stos
mov
stos
in
mov
mov
sub
jnp
cmp
fidivl
clc
arpl
jmp
and
mov
decb
jp
push
sbb
cmp
pop
loop
loopne
call
outsl
ljmp
push
lock
push
jmp
mov
mov
insl
and
out
jno
push
lea
xchg
mov
xor
dec
mov
inc
addl
mov
mov
xor
in
push
loopne
or
and
sub
rol
shl
jo
push
jo
inc
sbb
mov
jnp
out
and
dec
mov
stos
xor
push
loope
js
mov
out
je
jns
hlt
xlat
push
xor
jb
add
ret
andb
test
dec
ss
jae
fnstcw
leave
mov
test
imul
dec
gs
push
fsubrl
orl
xchg
mov
add
loope
jle
imul
xchg
jae
cltd
push
and
xchg
aas
cltd
mov
je
das
je
sbb
jg
outsb
mov
dec
loop
stos
xchg
cmc
push
jnp
das
inc
xlat
cld
dec
cmp
push
movsl
xchg
loope
mov
xchg
or
mov
or
adc
inc
lcall
divb
movsb
mov
cltd
inc
push
xor
inc
lods
lds
cmp
mov
push
out
loope
xor
xchg
arpl
push
shrl
mov
jns
adc
call
pop
sarb
movsl
popa
sub
mov
jp
bound
je
lods
cmp
add
mov
jae
mov
adc
loope
xor
stos
cld
orl
adc
mov
xor
inc
pop
sbb
cmp
cmp
xor
lea
inc
dec
xchg
push
ljmp
mov
xor
mov
insb
lret
jae
mov
xchg
in
rcll
repz
xor
or
push
arpl
pop
cmp
lcall
cmc
outsl
fcmovb
cmp
or
testb
dec
movb
inc
lods
loop
pop
xor
xchg
jmp
or
shrl
dec
sbbb
pushf
cmp
mov
rclb
stc
mov
cmp
lcall
in
or
ret
push
inc
iret
jg
xchg
cltd
cmp
sub
xchg
testl
cs
stc
adc
sbbl
mov
andl
mov
xor
push
push
sub
mov
movsl
mov
inc
xchg
pop
mov
sub
fwait
pop
push
hlt
cli
xorl
push
mov
sarl
ret
enter
dec
das
and
and
clc
xor
imul
sarl
shrb
stos
add
popa
mov
cmp
lcall
shl
hlt
dec
lret
loope
pop
pop
cmp
xchg
loope
pop
imul
add
ret
mov
adc
mov
jbe
inc
neg
jne
jo
stos
fcompl
lret
xor
mov
sbb
icebp
push
mov
inc
cmc
pop
mov
inc
push
pop
stc
lods
cld
repnz
push
imul
jns
inc
mov
jno
xchg
or
clc
test
inc
cli
and
leave
mov
fisttpl
out
xor
test
lcall
stos
fdivrl
pop
ret
jg
pop
xor
and
fnsave
xor
movsb
aam
enter
fisubl
mov
ret
or
idiv
jno
pop
stos
jae
mov
pop
xchg
nop
dec
stos
inc
inc
decl
mov
inc
xor
repnz
cmp
and
ror
xor
into
jns
mov
vpunpckldq
mov
notb
jnp
push
cli
hlt
leave
ljmp
dec
pop
xchg
pop
and
push
mov
cmc
cmc
popf
pop
inc
in
lods
leave
aas
pusha
fisubl
sarl
mov
hlt
inc
rolb
inc
std
call
insl
out
inc
out
dec
icebp
addl
ret
mov
test
loope
and
pop
cld
je
stc
fsts
ja
test
inc
mov
fsin
test
ret
dec
jg
xchg
xor
push
in
mov
and
fwait
stos
cmp
mov
mov
and
rol
cltd
arpl
and
stos
fs
dec
cmp
jle
cmpb
andb
repz
scas
sbb
pop
rcl
test
inc
shlb
icebp
inc
xor
push
jmp
push
jecxz
in
jno
dec
sbb
add
adcb
xor
loop
and
pop
xor
inc
cli
xorb
lret
lock
in
cmp
sbb
hlt
mov
sbbl
push
push
and
lahf
jle
pop
dec
push
push
stos
pusha
add
xor
sbb
jp
sarl
ret
sub
loope
mov
je
push
loopne
cmp
dec
bound
nop
sbb
jb
rcl
daa
sbb
xchg
mov
push
or
lcall
in
push
inc
sbb
sar
add
push
xor
out
cmp
rorl
pop
mov
and
roll
jp
fimull
neg
jno
jns
adc
xor
inc
sbb
jle
jne
dec
aas
or
fwait
jmp
repnz
cmpl
jg
jp
pop
cli
cmpsb
jnp
mov
stc
xor
dec
dec
pop
mov
stc
sbb
xor
movsb
mov
stos
inc
lods
icebp
dec
jmp
xchg
push
inc
movsb
push
leave
mov
stos
pop
imul
push
xor
xor
jns
add
stos
stos
mov
adc
test
test
xchg
sarb
add
and
xchg
push
mov
pop
bnd
icebp
pop
sar
mov
xchg
cmpb
mov
mov
ds
push
bound
orl
test
jae
repnz
enter
lods
adc
adc
xchg
shll
lret
jp
xchg
cli
cmp
ret
xchg
lea
mov
xchg
jo
mov
dec
lret
sbb
inc
dec
arpl
pop
lods
jp
mov
int3
leave
xor
ja
mov
in
std
icebp
shll
adc
xor
jb
mov
out
leave
mov
sbb
push
push
lcall
sti
lret
cld
ljmp
jnp
fcoml
mov
lret
push
mov
adc
push
lock
outsl
ss
lahf
pop
sbb
ret
or
adc
in
arpl
or
rolb
jns
xchg
cmc
arpl
jg
cltd
push
repnz
rcr
mov
lret
jge
pop
xchg
add
or
cmp
orb
xchg
inc
push
movsl
fs
loopne
add
xchg
stc
inc
fdivrs
clc
add
cmp
lret
pop
icebp
inc
jns
popf
push
arpl
cmpb
ljmp
jae
orl
xor
jg
xor
notb
add
cmp
sahf
jne
xchg
sbb
cld
inc
or
jb
pop
pop
mov
cmp
inc
mov
es
lcall
fsubl
inc
enter
cmp
shll
imul
xor
jmp
mov
popa
inc
jno
cmp
cmp
adc
pop
imul
pop
push
andl
pushf
dec
lcall
xchg
popa
pop
jae
xor
loop
jne
xchg
mov
mov
mov
je
icebp
fisttpll
mov
pop
mov
popa
leave
cltd
out
les
imul
notl
sbb
adc
shlb
dec
mov
clc
mov
mov
aas
das
fidivrl
cmc
xorb
jns
xorl
mov
pop
inc
jb
lahf
jecxz
cli
jo
lcall
lret
mov
adcl
adc
imul
fcmovne
pop
mov
icebp
mov
fnstenv
cmp
or
or
inc
test
inc
and
and
sbb
arpl
hlt
adc
xor
sub
leave
loope
dec
pop
insl
fldcw
sbb
inc
mov
inc
xchg
push
ret
pop
sub
cmp
push
push
rorl
xchg
jmp
enter
push
adc
dec
subl
jne
dec
je
mov
stos
stc
icebp
mov
inc
popf
add
jae
or
push
add
pop
jnp
hlt
add
lcall
lahf
clc
push
stos
and
mov
lret
mov
arpl
ret
out
imul
cltd
add
xchg
xor
jbe
mov
inc
ret
popa
mov
push
cli
sbbb
repnz
fs
fnsave
xor
mov
xor
lret
std
inc
jp
pop
mov
pushf
inc
push
pushl
mov
ret
add
je
int3
inc
mov
in
inc
jno
mov
push
jnp
dec
sbb
jne
xor
in
ljmp
shrb
dec
mov
push
jne
cmp
stc
inc
in
cmp
and
mov
add
leave
cmp
lret
leave
jb
cmp
mov
stos
inc
mov
fdivrl
cmpl
ret
adc
loop
sbb
jnp
mov
pop
dec
mov
popa
stos
repnz
mov
push
mov
pop
popf
andl
shll
sahf
das
inc
int3
mov
mov
add
movsl
inc
pop
ljmp
lret
ret
repnz
popa
lret
xchg
pop
mov
pop
push
mov
rolb
repnz
xchg
and
and
in
leave
mov
jp
lods
mov
les
fbld
xchg
mov
xchg
push
shll
repz
jns
cmp
mov
add
mov
cmp
aas
test
jno
dec
jne
mov
repnz
rorb
sbb
jns
stc
jnp
sbb
ret
ret
jno
add
mov
dec
mov
decl
xorl
cmp
andl
insb
mov
add
orb
loope
jns
lcall
sarl
imul
push
aas
jns
cmp
imul
push
inc
xchg
mov
fmuls
loope
adc
lahf
icebp
push
xchg
subl
arpl
movsb
sar
push
jb
stos
fidivs
sbb
jecxz
sbb
leave
push
iret
cli
loop
dec
push
test
mov
cmp
shll
shl
jo
adc
inc
ljmp
icebp
mov
int3
xor
pop
cmpl
ja
jb
test
ja
pop
fadds
js
inc
push
xor
cld
imulb
mov
faddp
call
push
mov
jo
pop
data16
iret
inc
sarl
jnp
andl
xor
adcl
movsl
xor
push
adc
cmp
mov
stos
mov
xor
mov
xor
inc
cmp
or
adcb
loop
pop
push
cmp
add
dec
inc
push
stc
mov
ret
flds
arpl
mov
cmp
shll
or
or
jns
ret
fiadds
xchg
ljmp
or
cmpl
in
inc
popa
icebp
pop
mov
shll
xor
fs
out
pop
push
xchg
jle
repnz
xor
addb
inc
adc
xor
rcpps
or
cmp
jae
stos
mov
cld
jo
icebp
jns
into
dec
adc
push
xchg
xor
jmp
test
and
cmp
fmul
imul
jbe
out
insl
subb
jns
sub
rcl
scas
incb
mov
jnp
add
insb
pop
loop
push
push
sub
lods
jl
shlb
push
pusha
and
and
jb
lret
bound
add
fucom
mov
mulb
ret
sarl
mov
pop
mov
adc
inc
pop
loopne
cltd
jmp
mov
xchg
adcb
lea
fwait
jno
dec
jle
mov
in
in
xor
cwtl
pop
lcall
add
test
xor
push
fsubl
rcll
add
mov
popa
push
addb
fsubs
pop
or
mov
xorl
xor
movsl
inc
sub
inc
test
mov
outsb
icebp
and
loop
jae
jbe
test
lods
xchg
pop
xor
adc
mov
cmpb
sahf
inc
xchg
jnp
dec
xchg
and
dec
hlt
ret
into
xor
cmp
aad
cmp
stos
cld
test
ret
add
loop
inc
lods
stos
mov
xchg
push
jns
in
pop
mov
mov
jnp
cmp
mov
sbb
push
lret
scas
push
clc
inc
fisubl
addl
test
fisubl
arpl
cs
push
popa
jp
std
add
push
arpl
aas
xchg
addb
pop
rcll
pop
pushf
hlt
ds
lods
pop
xchg
stc
adc
mov
iret
out
loope
add
push
leave
xchg
lods
dec
mov
mov
aad
mov
popa
inc
cmp
jae
mov
icebp
std
push
loop
je
pop
jnp
call
sub
jmp
pop
mov
sub
fnstsw
lret
mov
ds
pusha
pop
and
ss
mul
and
das
xchg
xchg
mov
shl
mov
lret
sti
xchg
add
cli
cld
push
push
in
stos
jbe
mov
mov
sbb
and
addr16
cmp
add
sub
insb
mov
push
orl
ret
inc
sarl
ds
mov
inc
push
push
ret
sbb
dec
jae
xor
test
cmp
cmp
lods
stos
mov
stc
xchg
sbbl
stos
cmp
jnp
mov
jg
jmp
cmp
inc
cmp
clc
jns
mov
xor
jno
and
aaa
icebp
enter
ljmp
inc
sub
cmpsb
ja
mov
pop
pop
mov
fmull
push
or
and
dec
ret
or
repnz
jne
xor
push
add
sarl
mov
loope
stc
mov
bound
addl
imul
jecxz
aad
and
mov
pop
cmp
jno
dec
push
test
dec
inc
repnz
mov
pushf
jecxz
std
rcrl
mov
pop
or
ret
ret
push
xor
xchg
sub
inc
out
jno
push
push
lcall
adc
and
mov
mov
das
fldenv
ljmp
lret
xchg
clc
mov
pop
cmpl
and
inc
lcall
add
inc
fwait
popa
roll
pop
pop
test
rol
dec
xorb
jecxz
jns
in
ljmp
xorl
pop
rorl
ret
dec
jno
jecxz
dec
sub
ret
repnz
and
andb
inc
in
push
icebp
mov
nop
jmp
inc
cmc
push
jmp
xchg
xor
outsb
lods
je
lahf
rep
icebp
loope
cmp
cmpb
and
loopne
adc
push
subl
jnp
stc
add
cmp
jmp
faddp
mov
mov
or
orb
out
int
cmp
mov
repnz
ret
mov
xchg
insl
leave
inc
cmp
sbb
xchg
jecxz
xchg
ret
out
jg
stos
push
adc
loop
andb
jp
cltd
push
inc
mov
or
imul
repnz
out
xor
dec
imul
fstps
shl
adc
push
sbb
mov
cmp
cltd
pop
adc
dec
mov
rcrl
xor
pop
xor
frstor
jne
adc
outsl
out
fwait
je
popa
out
sarl
mov
mov
les
out
outsl
inc
cmp
aam
idivb
mov
jae
ret
idivl
mov
stc
in
frstor
sbb
add
pop
cli
incb
mov
cmp
jg
bound
cmpsb
add
lret
inc
cmp
inc
ret
cmp
ret
cmp
rorb
sbb
pop
loopne
icebp
or
leave
pop
iret
fldt
ds
jge
popa
in
add
cmpb
and
ret
push
jle
fisubs
push
loop
pop
jae
xor
call
popa
mov
adcb
int3
inc
xor
push
push
or
mov
movsl
jns
add
fimull
das
mov
subl
stc
mov
mov
push
cli
adc
adc
inc
or
cli
int3
jg
sbb
fstpl
frstor
inc
xchg
test
push
pop
sub
fldl
and
lret
pop
jge
lock
insl
je
xor
jo
cmovbe
cltd
push
aas
sbb
xchg
mov
lret
mov
bound
cltd
cmp
outsl
shrb
mulb
leave
cmp
jne
sub
aad
inc
mov
aad
imul
popa
imul
jae
sbb
inc
pop
ret
pop
pop
test
adc
iret
inc
call
ret
sbb
pop
and
xchg
iret
and
cmp
arpl
pop
ljmp
lds
imul
fmul
push
into
add
leave
addb
pop
dec
push
ror
lods
cmp
push
cmp
pop
xor
lods
sti
mov
cmp
insl
adc
push
rorl
cli
or
stc
and
sub
fld
fiaddl
shrl
adc
stos
jo
sub
and
stos
mov
mov
add
ficompl
mov
xor
mull
pop
jmp
jg
jg
adc
inc
jns
jg
jecxz
inc
or
cltd
xor
ret
xor
cmc
pop
mov
add
pop
xor
fwait
loop
in
loope,pn
js
add
jb
popa
mov
test
sub
iret
jge
mulb
loop
ljmp
sbbl
arpl
ds
imul
sbbl
test
push
add
xchg
fwait
cli
imul
roll
popa
xchg
repnz
mov
cmpl
inc
xchg
mov
fdivl
pop
xor
or
cmp
or
ret
inc
xchg
or
imul
jmp
dec
jge
mov
loope
lahf
inc
inc
insl
sub
lods
jns
push
stc
pop
inc
jae
jecxz
outsb
mov
mov
popf
gs
shll
je
inc
dec
aam
jns
mov
clc
ja
fidivl
enter
imul
add
popa
leave
cmp
aaa
test
int3
cmp
dec
push
jb
daa
xchg
stc
inc
mov
lret
adcl
dec
cltd
fisubl
xor
das
leave
bound
or
sbb
adc
push
mov
es
data16
rcrb
imul
push
scas
jnp
xor
adc
push
loopne
and
insl
add
das
ret
aas
or
dec
cli
mov
sbb
jb
popa
aas
xchg
imul
and
push
add
dec
daa
in
dec
popa
rolb
icebp
inc
icebp
cld
loop
xor
stc
mov
push
add
push
mov
mov
mov
insb
loope
lret
out
fwait
jmp
dec
movsb
icebp
mov
mov
mov
fsub
pusha
mov
mov
xchg
mov
push
mov
or
mov
jp
fcmove
inc
push
arpl
aad
mov
pop
pop
jae
xor
inc
pop
add
sbbl
pop
inc
je
cmpsl
dec
cli
lock
mov
xor
dec
ret
mov
jno
jno
jns
inc
ret
stc
pushf
xchg
das
adc
lods
cmp
rorl
xchg
mov
fwait
dec
and
mov
dec
ds
sbb
jg
pop
ds
xchg
mov
repnz
test
mov
notb
hlt
mov
inc
xchg
jp
repnz
xchg
sti
push
cmp
lcall
inc
mov
lock
mov
dec
mov
imul
stos
cli
ljmp
dec
push
jnp
push
cld
jnp
jmp
xchg
stos
aaa
pop
jae
hlt
adc
xor
ljmp
jp
add
sti
dec
fisttpl
mov
pop
imul
mov
popa
stc
ret
dec
fisubrl
push
insl
cmp
jno
adc
imul
jae
and
shl
leave
inc
sbb
lret
xchg
dec
repnz
mov
adcl
and
xor
push
mov
hlt
stos
rcl
pop
xor
pop
mov
insb
ret
fldcw
jns
mov
jne
xor
push
jns
je
loope
movsl
jb
mov
mov
cs
insb
arpl
mov
and
les
jecxz
lcall
lret
dec
je
int3
mov
imul
jb
cmp
pop
lds
mov
loope
mov
dec
icebp
pop
fisubrl
lods
pusha
jno
fsubrs
mov
push
stc
jo
dec
mov
inc
add
dec
iret
fsubl
cmp
mov
push
xchg
ret
push
mov
jecxz
mov
fisubrs
add
sbb
or
sub
push
fstpt
inc
inc
fcompl
cltd
inc
dec
jecxz
mov
xor
sub
or
mov
stos
or
fistpl
int3
cmp
stc
icebp
cmp
call
jb
mov
pop
push
mov
jmp
out
bnd
inc
sti
ljmp
jl
dec
mov
subl
rorl
xor
push
push
mov
popf
pop
dec
in
lea
xchg
mov
xor
cmp
das
xor
fisttpll
lret
stc
xchg
cmp
jp
loope
cmpb
leave
push
xor
mov
out
sbb
push
dec
fsts
icebp
lods
cmp
decl
stos
mov
lcall
pop
loope
mov
jnp
popf
push
aas
jmp
jns
add
mov
and
mov
cmp
jmp
je
les
lcall
mov
jno
xor
and
jnp
aad
subl
leave
pop
lods
fdivrs
ret
roll
push
out
jb
loope
loop
dec
sbb
dec
adc
mov
inc
ret
jns
add
pusha
mov
icebp
leave
mov
test
xchg
push
jp
jp
bnd
xor
push
xor
sti
lds
bound
jb
add
jb
icebp
cmp
mov
lods
jmp
stos
inc
sahf
jg
popa
cmp
shr
push
sbb
mov
popa
jne
adc
lods
mov
out
test
cltd
das
jb
psrad
add
popa
xor
inc
xor
bound
ljmp
pop
jg
sbb
mov
icebp
mov
add
jno
lods
imul
rcll
pop
sub
cmpl
ret
test
push
popa
das
mov
andb
ret
les
outsl
add
jnp
xchg
ret
stc
aam
fsts
loop
dec
cmp
and
in
and
ficoms
fwait
xor
push
inc
sarl
mov
fnstenv
sub
and
inc
ss
mov
imul
arpl
push
jb
rcll
adc
push
imul
inc
out
dec
sarb
sub
xor
mov
add
loop
fimuls
mov
dec
stc
popa
push
subl
xor
mov
and
iret
insl
imul
mov
mov
jno
jg
xor
out
dec
test
aad
les
pop
mov
and
or
fstps
fwait
cmp
adc
jmp
mov
repnz
stos
lods
cmpsb
xchg
jle
pop
cmpsl
mov
repnz
jo
arpl
mov
loopne
mov
jp
pop
outsl
and
adc
lcall
addl
push
fnstenv
push
xchg
pop
std
mov
add
cli
sarl
out
jnp
repz
nop
outsb
push
xchg
push
rclb
xor
mov
or
push
sbbl
mov
div
cltd
cmp
push
xor
adc
lods
rorl
movsl
dec
mov
repnz
cmp
xchg
dec
add
push
push
inc
adc
sbb
mov
add
fldenv
fidivrl
subl
jno
je
jmp
ret
pop
inc
cmp
popa
pop
inc
xorl
push
and
mov
repnz
add
stos
jnp
rcl
in
mov
mov
push
jb
xor
inc
ret
or
inc
xchg
inc
dec
jg
xor
jp
and
and
push
pop
mov
adc
mov
out
lds
push
push
adc
ret
inc
rolb
xor
jns
sub
stos
jnp
sbb
and
dec
pop
sub
lods
scas
lock
ret
test
jae
mov
lret
scas
dec
pop
stc
mov
imul
imull
loope
mov
dec
lods
pop
imul
add
push
flds
xor
rol
ret
sahf
test
and
push
mov
hlt
dec
ret
inc
nop
jg
in
mov
mov
ljmp
push
stos
les
lods
mov
movsl
cmpb
jns
int3
icebp
popa
out
mov
out
jno
pop
shr
ficoms
std
inc
cmp
pop
out
mov
stos
add
imul
out
cltd
or
insb
imul
pop
add
stos
mov
fimuls
mov
std
xlat
jns
or
mov
call
pop
inc
push
inc
sbb
loop
sub
and
cmp
leave
mov
pop
ljmp
cmp
fists
xor
lods
sub
jmp
stos
mov
loopne
stos
popa
imul
pop
push
bound
jecxz
repnz
in
dec
lret
xchg
sbb
mov
adcb
jb
mov
push
insb
cmp
cli
mov
icebp
dec
mov
loop
xchg
adc
insl
icebp
and
mov
popa
cli
sbb
aaa
xor
call
cmpb
xchg
cmpsb
and
push
mov
mov
xor
cmc
lods
jae
jl
rolb
mov
enter
push
stos
jns
faddp
cmp
imul
or
ror
jmp
les
in
mov
inc
push
js
leave
adc
je
icebp
sbb
testl
inc
add
fwait
inc
push
or
cltd
mov
xor
adc
xchg
push
insb
mov
dec
rclb
add
xor
mov
insb
xor
add
insb
pop
add
mov
stos
push
add
jns
inc
pop
dec
mov
cmp
clc
mov
xorl
pop
sub
lahf
mov
sarb
movsb
mov
scas
cmp
adc
les
xor
stc
repz
dec
out
inc
dec
jno
sarl
call
and
push
mov
and
ds
cmpl
inc
dec
stos
pusha
movsb
loopne
or
inc
stos
cmp
add
jns
push
jno
adc
scas
repnz
jp
fcmovnb
aam
xchg
inc
leave
inc
mov
imul
int3
out
arpl
jmp
mov
xor
push
loop
shrl
jge
xchg
xchg
imul
in
arpl
sbb
lcall
mov
test
push
idivl
ljmp
mov
push
mov
cmpsl
dec
jne
mov
jo
lods
and
jecxz
mov
or
aam
shrb
mov
leave
mov
shl
mov
outsl
iret
mov
fs
and
sbb
xchg
sub
mov
mov
inc
xchg
jb
mov
mov
mov
stc
fisubl
inc
jns
mov
xor
jno
mov
pop
jecxz
sub
xor
sbb
mov
mov
lcall
testl
xor
bound
mov
icebp
and
arpl
fidivrs
js
out
mov
or
stos
dec
mov
lahf
lods
in
mov
stos
stos
cmpl
mov
or
cmpb
push
jle
xchg
lods
mulb
sti
inc
adc
call
dec
inc
sub
xchg
popa
jno
sarl
xchg
adc
cld
dec
arpl
add
fidivrl
aad
cli
jnp
repz
adcb
dec
test
insl
repz
mov
cmp
pushf
loope
mov
mov
in
pop
add
lret
ljmp
jg
xchg
xchg
add
mov
sar
cmp
in
mov
pop
jge
inc
outsl
or
pop
imul
cli
jne
mov
mov
inc
int3
jno
jb
lret
cmp
shll
dec
imul
gs
ljmp
aas
je
das
aam
jno
sarb
shl
lock
dec
add
mov
mov
pop
sub
aaa
jnp
pop
in
lret
fmul
mov
fbld
ret
hlt
dec
fnstcw
push
repnz
add
lret
mov
repnz
and
push
ds
ret
xchg
mov
fisubrs
pop
mov
das
jno
cmp
mov
mov
outsl
mov
clc
jl
mov
xchg
push
push
mov
ljmp
stc
mov
jno
lock
stos
dec
icebp
fs
lea
leave
lcall
mov
adc
mov
push
rcrl
cmp
xor
xchg
dec
pop
jecxz
and
or
bnd
aas
in
pop
shl
bound
mov
mov
xchg
jg
imull
mov
in
sub
cmp
cmpsb
cmp
xchg
decl
mov
negb
inc
and
arpl
pop
loope
lock
push
out
cwtl
aam
sub
imul
mov
and
sub
adc
mov
outsb
and
pop
inc
pop
je
mov
adc
push
pop
add
jno
or
ret
jns
push
stos
jnp
push
fiadds
loopne
ljmp
fdivr
xchg
cli
jnp
cmpl
mov
inc
inc
pop
adc
pop
xchg
push
lock
pop
imul
in
sbb
jno
jp
das
pushf
mov
mov
mov
and
xor
dec
xor
cmp
icebp
into
and
inc
js
xor
icebp
clc
adc
dec
lods
call
jo
out
xlat
bnd
repnz
cltd
repnz
clc
insl
cmpb
shlb
mov
mov
adcl
xchg
test
lods
push
dec
addb
jae
jne
lock
cmp
mov
inc
push
bound
push
sub
fnstcw
lahf
movsb
xchg
test
cmp
icebp
jae
lea
cmp
push
push
adc
lcall
cmp
outsl
leave
add
cmp
mov
cmp
push
pop
loopne
sub
cmp
mov
jae
push
jns
adc
xor
mov
stc
adc
mov
frstor
push
scas
mov
fwait
mov
xchg
pushf
negb
icebp
cli
inc
out
filds
lret
stc
inc
lahf
cld
jb
mov
cli
popa
arpl
or
mov
xor
cmp
pop
lds
cmp
and
mov
mov
or
xor
sbb
bound
in
stc
mov
push
mov
inc
loop
xorb
pop
mov
fisubs
out
loope
add
icebp
pop
pusha
mov
push
fists
sahf
push
jmp
call
fnstsw
mov
rcr
dec
subl
lahf
and
shlb
xor
mov
test
and
jb
flds
mov
push
cmp
push
mov
pop
inc
mov
jns
jg
push
adc
leave
adc
lret
sub
inc
clc
push
imul
subl
mov
fcmovne
mulb
xor
ret
xchg
shll
push
lret
inc
daa
stos
lahf
hlt
inc
inc
xchg
stos
mov
dec
pop
popf
int
fiadds
call
inc
xor
mov
roll
jns
test
pusha
pop
lcall
pop
sbbb
mov
or
shlb
sub
flds
imul
pop
adc
mov
mov
cmc
dec
stos
je
pop
dec
fistl
push
fs
mov
dec
dec
push
outsb
sbb
orb
or
popf
leave
inc
dec
mov
fistpll
adc
cli
orl
std
in
jns
sbb
imul
in
pop
inc
enter
jb
mov
in
inc
add
cltd
lcall
push
in
je
bound
arpl
xorb
divb
loopne
add
mov
test
xlat
addl
xchg
aas
mov
dec
test
ret
dec
je
std
push
popa
or
pop
xchg
aaa
outsl
mov
push
jge
mov
aaa
mov
lods
jne
fadds
cmp
call
cltd
inc
into
xchg
push
nop
sbb
ror
lret
and
imul
cld
cmpb
jg
imul
stos
cmp
mov
call
ret
aam
rclb
sbb
rcll
xchg
into
jle
pop
pop
inc
inc
jo
mov
out
lods
xchg
sbbl
xchg
imul
movsl
mov
cmc
xchg
xor
mov
jne
pop
mov
add
xor
xor
nop
jnp
push
mov
xor
stos
sub
scas
mov
pop
cltd
add
push
sbb
adc
loope
hlt
add
arpl
std
int3
xor
push
jg
dec
and
xchg
imul
mov
adc
dec
and
jns
stos
xor
hlt
aas
stc
cmp
test
mov
ret
ret
imul
cltd
sub
arpl
data16
lret
inc
fnstcw
push
popa
and
icebp
imul
enter
stos
ljmp
push
and
and
mov
add
lcall
push
jge
sbb
inc
mov
shll
pop
hlt
push
dec
popa
lret
in
push
popf
outsl
shl
push
adc
dec
xchg
cld
jbe
inc
popa
jnp
add
stos
dec
fisubrl
add
sub
pusha
xor
pop
cli
sti
cmp
cmp
inc
push
xor
mov
hlt
push
mov
mov
test
addr16
call
cmp
sbb
inc
mov
lds
xlat
sub
dec
mov
push
icebp
xlat
add
je
inc
roll
push
mov
scas
add
addb
jns
mov
hlt
jno
mov
mov
xchg
leave
push
jae
cmpl
and
ret
icebp
out
xchg
subl
mov
xor
jae
lcall
mov
leave
mov
dec
mov
scas
test
rolb
dec
mov
cmp
mov
pusha
fs
insl
fidivrl
cld
cli
jb
jbe
jo
in
lret
mov
push
rol
xor
decl
daa
das
xchg
ss
cld
jb
xor
mov
jne
jnp
divps
fadd
cmp
mov
call
jp
inc
nop
sahf
movsl
fstps
mov
jno
pusha
push
movsl
movsl
scas
stos
sub
pop
xlat
xor
mov
pop
pop
or
adc
add
cmp
mul
out
and
ret
adc
pop
in
imul
push
mov
dec
sub
mov
mov
shl
mov
inc
sub
mov
sbb
xor
xor
enter
xor
sub
js
xor
mov
xchg
in
hlt
testl
ds
ljmp
aad
cmp
jns
mov
adc
stos
ret
cmp
sahf
mov
xchg
call
mov
shrl
lock
stc
aas
dec
adc
or
lcall
daa
pushl
dec
inc
cmp
sarb
icebp
sbb
dec
jns
adcl
mov
jnp
movsl
idivb
xor
jbe
iret
mov
in
pop
popa
bound
jns
clc
pop
imul
and
dec
lret
jg
sbb
ja
ss
lcall
cli
cmp
ljmp
sbb
jge
xchg
bound
out
stos
lret
imul
cld
and
loope
inc
in
nop
popf
out
loop
sar
jmp
jge
xchg
scas
push
adc
and
adcl
lea
jnp
dec
jb
mov
adc
test
stc
js
ja
cmp
cmp
lea
push
add
push
cmp
add
imul
scas
addl
sub
jns
cmp
arpl
mov
xchg
mov
sbb
lods
loopne
lcall
fildll
push
stc
xor
xchg
in
pushf
push
outsb
dec
or
inc
stos
jae
dec
sarb
loopne
push
mov
repnz
iret
arpl
mov
xchg
mov
test
shl
std
inc
mov
push
cmp
stos
sub
ret
mov
daa
mov
sbb
jp
repnz
stc
dec
mov
imul
stos
test
push
mov
lret
jle
cld
push
xchg
jmp
sti
mov
jne
add
lcall
mov
lods
and
jb
fsubl
xor
and
rclb
imul
roll
sub
inc
jnp
rcrb
pop
push
lret
sbb
jno
mov
mov
repnz
imul
pop
sbb
jnp
xor
aas
test
lods
test
out
repnz
shll
mov
cmp
jb
cmp
add
mov
jmp
fnstenv
inc
xchg
mov
mov
cld
lods
andb
mov
xor
push
testl
sbb
int
jns
dec
icebp
out
cmp
lock
jp
dec
out
cmp
imul
mov
mov
fs
shrb
jae
add
adc
sarb
dec
loop,pt
xor
and
ficoml
imul
and
adc
or
stos
mov
loopne
lcall
jb
cmp
cmpsl
mov
pop
adc
xchg
add
hlt
sbb
lock
jb
inc
roll
jmp
mov
sar
jl
ja
mov
cmp
inc
mov
add
imul
shl
add
clc
daa
and
std
stc
stos
and
lcall
lret
xor
mov
stos
cltd
and
ljmp
cmp
jno
mov
enter
popf
cmp
pusha
xchg
push
adc
inc
jne
stos
push
jp
repnz
loop
mov
adc
cltd
mov
popa
mov
inc
shll
imul
inc
in
pop
xchg
lcall
std
sub
dec
andl
cmpl
mov
lahf
or
push
mov
mov
clc
out
dec
cmp
push
sbb
shll
test
pusha
adc
fldcw
pop
push
and
stos
and
pop
and
jns
lret
in
inc
dec
ret
loope
and
inc
aas
cltd
stc
lcall
jb
push
jno
pop
mov
push
jmp
fcoml
lcall
sbb
dec
and
ficoml
cmp
push
xchg
je
add
movsl
loopne
in
or
jp
fmull
jno
popf
inc
rorl
dec
mov
cmp
les
mov
add
leave
mov
mov
push
arpl
cli
imul
jns
lock
ret
jg
add
ljmp
jg
jg
add
mov
mov
mov
cltd
pop
dec
sahf
mov
and
mov
xor
ds
jge
and
sbbb
lret
lods
ficoms
xchg
sbb
stos
leave
or
arpl
adc
xor
icebp
mov
or
arpl
icebp
loopne
inc
xor
fistl
inc
or
inc
jle
cli
and
mov
or
and
mov
lret
mov
pop
mov
pusha
icebp
andl
fcoml
in
or
popa
loope
scas
lds
jp
add
icebp
dec
lret
test
sbb
push
mov
push
dec
je
cmp
lods
xor
sahf
mov
xchg
test
jg
cs
mov
leave
push
lods
fsubr
pop
arpl
mov
ds
hlt
push
cltd
mov
lahf
xor
mov
inc
mov
scas
pop
xor
inc
jno
lods
xchg
stos
stos
or
sbb
subb
movsb
dec
and
mov
jmp
fnstenv
jecxz
rcl
inc
pop
in
out
jmp
add
imul
mov
in
dec
jmp
add
pop
sarl
imul
pop
out
push
popa
icebp
sub
add
addl
push
mov
jnp
xor
jnp
fcompl
and
jno
mov
mov
outsb
rcrb
repz
arpl
add
bnd
int3
mov
bound
push
popa
jg
loope
ds
rol
aam
sbb
sarb
stos
dec
adc
lcall
lock
push
lds
ja
adc
mov
mov
imull
push
test
imul
jno
lahf
cltd
mov
inc
loope
orl
xor
adc
mov
xchg
lcall
das
and
cmp
int
dec
leave
dec
fidivrl
or
mov
sbb
push
pop
xor
hlt
xlat
dec
cltd
test
shrb
insl
xorb
andl
adc
dec
adc
jmp
shll
fmul
inc
iretw
jae
movb
roll
add
inc
movb
enter
mov
test
ret
aaa
andb
sar
cmp
fmuls
clc
push
bound
adc
or
push
mov
dec
repnz
add
sub
mov
rorl
jg
ror
jnp
adcb
stos
insb
sub
xchg
mov
sbb
jecxz
jae
sbb
inc
push
pop
out
jmp
ljmp
inc
mov
push
dec
xor
inc
cmp
mov
push
stos
pushf
lretw
dec
mov
jp
cld
xor
xchg
pop
loopne
mov
or
xchg
push
cld
add
mov
cmp
jg
in
std
out
dec
jg
addb
je
inc
push
xchg
inc
cmp
cmpl
divb
icebp
cmp
mov
icebp
jne
iret
lods
shlb
arpl
push
mov
pusha
std
mov
popa
lcall
add
lds
and
adc
mov
mov
stos
cld
inc
bound
fsincos
adc
dec
dec
call
pop
add
xorl
shlb
loopne
cli
test
test
mov
shrl
inc
cltd
pop
push
orb
lret
or
hlt
push
leave
pop
jno
popf
bnd
xor
test
cli
test
cmp
inc
rolb
icebp
inc
popa
mov
aas
aaa
cmp
int
ret
dec
xor
loop
dec
lock
scas
cmp
out
stos
fs
push
mov
mov
adc
sub
inc
ret
roll
mov
or
jl
test
mov
das
pop
push
inc
mov
adc
loop
cmp
mov
adc
je
mov
mov
mov
jg
jae
iret
mov
push
loope
ljmp
mov
leave
fcoms
dec
test
sahf
and
xchg
cmp
cltd
dec
jnp
cmp
lock
imul
dec
clc
dec
ljmp
jae
das
ds
sarl
cli
mov
loope
stos
test
outsb
dec
mov
inc
fadd
pop
movsb
jne
inc
jae
int
sub
cmp
pop
mov
mov
cmp
aas
imul
arpl
stc
idivl
adc
pop
inc
fucompp
push
mov
xor
fidivrl
fucompp
subb
imul
cwtl
lret
and
dec
call
mov
sub
ljmp
mov
sub
or
mov
ret
push
jnp
sub
imul
xchg
sub
in
cmp
in
xorl
loope
rcrl
je
insb
loop
cld
or
jno
loope
push
loopne
xchg
test
out
lret
and
add
cmpb
stos
dec
or
addl
mov
call
and
imul
xchg
fimull
mov
add
pop
rol
adc
xor
cli
cltd
push
repnz
cwtl
aaa
mov
outsb
stos
std
mov
mov
shrl
cmp
inc
jo
mov
jns
outsl
pop
hlt
jne
xchg
dec
in
inc
clc
xchg
mov
jne
fdivp
fidivrl
and
lcall
jle
test
xor
ret
cli
push
jns
add
dec
lret
repnz
subl
push
ficomps
xchg
mov
jmp
mov
push
popa
push
add
adc
and
or
adc
mov
mov
cs
sub
pop
lret
cli
pop
jmp
test
jle
popf
push
xorb
arpl
cmc
imul
inc
nop
addr16
or
dec
dec
jmp
and
pop
jo
pop
mov
push
rcll
pop
mov
mov
test
gs
add
nop
add
jb
fidivs
jecxz
pop
cmp
jge
mov
adc
andl
negb
xchg
xorl
dec
jge
aad
lret
aam
cli
xchg
and
dec
inc
jae
mov
test
mov
cmc
xor
out
stos
mov
adc
mov
mov
and
dec
and
and
xchg
ret
xor
int
add
push
inc
pop
xor
xchg
cli
fisubs
mov
jae
inc
push
inc
addl
cmpsl
mov
repnz
mov
stc
subb
cmp
ret
aad
sbb
dec
mov
mov
addl
mov
or
mov
out
push
jns
imul
mov
hlt
sahf
out
imulb
mov
bound
push
jb
or
and
fiaddl
push
dec
cmp
icebp
cli
dec
push
mov
sub
and
push
xor
clc
dec
pop
push
ret
sub
push
mov
daa
mov
inc
leave
in
data16
jo
fs
dec
fxch
stc
cli
inc
bound
fmuls
nop
adc
repnz
push
int
and
push
add
cmp
dec
ret
inc
dec
jecxz
in
inc
stos
pop
shll
mov
xchg
test
mov
repnz
je
fs
stos
push
bound
movsl
mov
jg
fldt
adc
jne
jae
jecxz
xchg
arpl
loope
jno
loopne
call
repnz
xchg
mov
leave
push
fiaddl
add
dec
xchg
fstpt
mov
push
cld
push
pop
xor
mov
inc
jg
adc
shl
shrb
inc
jnp
jb
mov
jnp
add
jb
ljmp
mov
divb
ret
lahf
call
rolb
sub
test
loope
push
mov
hlt
cmp
ss
mov
xchg
cmp
sub
insb
stc
stos
push
fidivrl
pop
test
leave
loope
pop
jecxz,pt
sbb
call
xchg
dec
je
faddl
mov
xor
xchg
xchg
ret
jns
fildl
push
pop
dec
inc
jns
inc
bound
shll
fmull
mov
cmp
jmp
add
cmc
push
cmpl
out
fldl2t
add
imul
cli
jnp
jns
mov
add
and
and
stos
cltd
sbb
jnp
mov
cld
mov
lcall
loope
add
cmp
dec
sbb
jae
arpl
pop
sbb
push
flds
out
pop
arpl
dec
or
jo
jae
adcb
stos
inc
push
add
sbb
mov
inc
xchg
bound
leave
xchg
mov
popa
loop
xor
cmp
pop
leave
pop
dec
mov
fisttpll
jbe
adcl
out
xor
into
jnp
inc
sarb
ret
out
mov
daa
aaa
icebp
xor
out
insl
mov
aad
mov
icebp
or
test
mov
out
int3
dec
dec
mov
fstps
sub
xor
lods
mov
fstps
adc
stos
mov
mov
push
push
mov
icebp
mov
dec
lods
mov
pop
and
dec
lret
rorb
lret
mov
hlt
dec
cmp
lds
test
push
mov
cmp
push
test
in
or
jnp
ret
cmpsb
test
ret
xchg
into
adc
inc
shl
jno
sti
je
test
sub
insb
xor
xor
stc
push
mov
mov
push
cmp
mov
pop
icebp
jae
inc
jg
pop
xchg
test
mov
mov
or
mov
mov
cmp
stos
js
jecxz
push
mov
and
push
sbb
mov
shrl
dec
scas
mov
shll
dec
jg
loope
loopne
enter
daa
fidivrl
mov
cmp
jnp
fisubl
pop
jge
loop
mov
mov
incb
dec
or
sub
add
ret
sbb
sub
lcall
mov
sbb
jns
and
inc
in
lret
lods
and
inc
ret
fistps
aad
and
cmp
xlat
enter
ret
mov
xor
or
xchg
std
popa
xchg
cmpsb
jle
test
inc
movb
fcomip
mov
inc
in
out
test
cltd
cli
or
fstps
sub
ret
lea
xor
stos
test
aas
ret
xor
xchg
xor
out
imul
in
or
cmp
pop
je
addb
psubq
add
cmp
pop
push
jb
sbbb
fnstcw
pop
mov
cltd
lods
jp
addl
mov
bndstx
lret
jge
xor
popa
mov
dec
lcall
mov
cmp
bnd
dec
sbb
sbb
cltd
mov
and
imul
jge
mov
mov
lret
stos
mov
ss
adc
mov
bound
and
fcmove
mov
lods
push
sar
shl
dec
mov
mov
stos
imul
mov
jg
sarb
mov
fiaddl
dec
push
icebp
dec
or
and
stc
mov
push
ljmp
mov
data16
fadds
jo
jb
lea
sub
adc
xor
push
inc
mov
xchg
jb
and
sub
test
cli
loope
mov
push
add
pop
cmp
inc
loop
mov
cmp
jg
rorl
lret
pushf
and
cld
inc
jnp
mov
adc
mov
jecxz
lret
adc
xor
imul
add
cmp
ja
mov
add
pop
les
sbb
test
test
inc
xor
push
popf
push
pop
mov
mov
andb
dec
mov
pop
xor
lods
cmp
fisubl
fiadds
mov
cmp
push
xor
jno
loopne
pop
enter
hlt
inc
lcall
imull
bound
clc
dec
dec
xchg
mov
mov
rcr
push
movsl
loopne
fcmovb
ret
and
dec
clc
push
jae
pop
xor
iret
rcrl
fldl2t
cmp
loop
mov
dec
cmp
fbstp
mov
pop
in
dec
push
in
and
xor
inc
and
ljmp
fisttpll
add
cmp
jo
hlt
pop
andb
pop
jle
mov
lods
jle
fwait
adc
adc
shlw
mov
dec
mov
imul
push
jae
icebp
orb
test
sbb
stos
loop
enter
adc
mov
add
or
lcall
aas
mov
xor
int3
mov
cmp
lret
lret
add
stos
cld
push
fxch
shlb
push
xorb
pop
in
jo
outsb
inc
repnz
mov
and
push
jae
fisubrl
mov
arpl
cli
in
std
inc
ret
cmp
or
fcomp
lock
add
test
or
in
fisttps
aaa
add
xchg
xor
in
rcll
rorl
sbb
mov
mov
imul
jg
xorb
loope
push
jne
push
sar
cli
inc
fidivl
ljmp
push
sbb
cmp
or
jb
sbb
xor
push
inc
ret
cld
push
mov
ficompl
xchg
push
xor
mov
inc
add
push
sub
faddl
ret
lods
jae
push
scas
ret
dec
ret
faddl
nop
mov
bound
shll
je
add
stc
jg
adc
arpl
mov
inc
imul
xchg
push
push
loope
orb
xchg
dec
xor
fcoms
fiadds
je
sbb
stc
lea
adc
dec
sarb
jns
xchg
dec
xchg
push
push
inc
sub
stos
sbbb
and
push
orb
mov
sbb
out
pushf
inc
fsubs
fidivrs
pop
inc
stos
cmp
shl
xor
idiv
jnp
sbb
inc
ret
sub
jb
enter
sti
mov
jle
mov
ljmp
xor
out
rorl
add
pop
mov
inc
jnp
sahf
call
xchg
cmp
test
imul
xchg
cmp
xor
jg
pop
andb
push
int3
mov
push
or
xor
andl
out
inc
and
inc
shlb
flds
mov
iret
inc
shl
sub
in
dec
cli
enter
or
push
inc
mov
push
stc
loope
inc
roll
jno
cmp
nop
cmp
ret
mov
mov
pop
xor
cmp
lods
mov
mov
mov
imul
in
mov
cmp
xlat
jmp
xchg
push
lret
push
imul
pop
add
inc
and
out
inc
aam
test
or
adc
jg
loope
sar
cmp
xor
pushf
inc
ficomps
mov
sub
leave
or
ror
or
add
fnstenv
stos
xchg
jp
mov
mov
mov
or
icebp
jle
xor
push
inc
jg
loop
mov
stc
jae
xchg
push
push
xor
mov
push
lods
jecxz
push
xchg
xchg
aaa
mov
rcrb
out
lods
incl
cli
dec
fwait
mov
add
add
mov
je
cmp
and
std
add
pop
notb
mov
push
push
or
sbb
xor
scas
ljmp
icebp
cmp
and
add
mov
or
xchg
sbb
in
pop
loopne
out
clc
xchg
mov
jnp
inc
ret
lret
or
mov
fsubl
xorl
push
mov
dec
mov
fimull
dec
rcll
ret
addr16
stos
add
stos
lret
pop
jmp
pop
jae
arpl
or
rcl
pop
inc
mov
movsl
push
pop
add
pop
cmp
stos
mov
jns
mov
enter
lcall
sbb
pushf
loope
add
sti
lret
es
push
or
lock
jl
popa
sbbl
leave
sbb
cmp
rcr
test
dec
fsubrs
xchg
sbb
xorl
pop
loope
xor
aam
xchg
mov
mov
popf
js
imul
mov
sbb
mov
loope
repnz
stos
ret
arpl
mov
add
lcall
clc
jnp
xor
rcr
xor
int3
and
test
aas
xchg
dec
arpl
adc
push
imul
cmp
mov
test
addb
cld
xchg
mov
inc
sbb
repnz
pop
lcall
pushl
or
ret
sahf
popa
dec
mov
jmp
push
in
pusha
lock
mov
or
movsl
mov
dec
and
arpl
dec
add
jno
sbb
les
mov
mov
xchg
and
test
fdivs
fnstenv
je
pop
pop
outsl
fs
mov
add
sub
fstl
inc
mov
push
addb
sub
pop
sub
cli
xor
jb
dec
dec
sub
xchg
cmp
imul
xlat
or
inc
iret
push
inc
and
popa
and
add
xchg
cmp
pop
scas
lret
dec
jmp
leave
xchg
pop
lea
xor
testl
aas
push
in
mov
into
push
push
inc
lret
test
or
mov
xor
push
xor
fnstcw
inc
jo
jle
test
dec
jno
xor
ljmp
cld
pop
push
mov
xchg
dec
stos
stc
enter
inc
mov
jne
cmc
push
out
outsb
xchg
in
cmp
sbbl
mov
sti
cli
mov
xchg
push
inc
lret
dec
inc
orl
lahf
das
ja
or
lret
xor
stos
das
mov
cld
mov
popa
imul
leave
jns
adc
or
xor
pop
lahf
ror
mov
pop
push
jno
ret
jecxz
and
mov
fisubrs
and
add
fmull
cmp
or
test
movsl
sbb
arpl
aas
test
test
adc
pop
popa
data16
ficompl
inc
mov
pop
jnp
mov
ret
movsl
hlt
lcall
test
mov
jns
pushf
lcall
jp
wrmsr
aam
inc
push
test
sub
shll
or
jae
fiaddl
icebp
in
xor
lea
inc
adc
jb
mov
jnp
aaa
adc
mov
popa
xchg
roll
push
add
loope
leave
xor
mov
jecxz
adc
push
fnstenv
and
loope
cmp
lahf
subl
fmull
mov
decb
mov
roll
xchg
add
test
ret
mov
cmp
bound
sti
pop
sbb
and
mov
in
dec
xor
pusha
das
mov
adcl
pop
fdivrs
inc
enter
cmp
lock
mov
fs
jno
lea
loopne
addl
ret
popa
inc
mov
cmp
ret
adc
mov
pop
and
cmc
xchg
dec
sub
push
movsb
sbb
push
lods
lock
mov
dec
dec
lret
sbbl
mov
not
lock
push
cmp
sbb
push
xchg
lcall
ljmp
mov
aas
aaa
inc
addl
jns
stos
cmp
pop
push
cltd
cmp
movsl
sbbl
push
jae
ret
mov
and
jns
mov
lahf
pop
gs
subl
dec
ds
adc
dec
les
jae
push
lret
aam
inc
push
cmp
add
xchg
fsts
jae
dec
loope
aad
call
xor
adc
xchg
shl
adc
or
or
ret
or
imul
in
outsl
cltd
mov
xchg
mov
rorl
test
ret
push
jns
loop
dec
leave
push
jno
mov
div
mov
ljmp
out
imul
inc
not
fsqrt
push
inc
xor
rcrl
and
lret
lret
hlt
push
arpl
stc
xlat
cmp
test
and
dec
imul
les
int3
mov
cmp
lea
daa
loope
or
jp
in
lock
mov
in
inc
fwait
pop
cmp
les
cld
dec
ljmp
or
push
jno
mov
add
mov
arpl
addl
and
xor
ficoml
mov
push
or
into
mov
stos
stos
cld
in
mov
neg
ljmp
adc
iret
clc
add
in
cli
xor
jae
mov
push
xor
xor
or
mov
mov
sti
dec
dec
lret
and
das
aad
xlat
mov
mov
add
arpl
xchg
mov
sbb
rcr
and
push
xor
ror
and
jno
fwait
dec
pop
add
cmp
inc
inc
lret
inc
in
pop
mov
mov
imul
sbb
stos
fstps
aam
jno
push
jnp
loop
push
stos
jp
sbb
push
insb
out
xor
loope
outsb
and
dec
aaa
mov
js
aam
cltd
cmp
xchg
mov
push
popf
es
push
mov
and
adc
xchg
rol
out
loop
dec
push
pop
dec
jp
stc
push
stos
jle
cmp
repnz
push
scas
sub
jg
adc
sub
repnz
iret
jg
xchg
ret
jmp
imul
inc
mov
fsts
loope
hlt
repz
imul
outsl
mov
push
cmp
insl
fildl
push
aas
ret
ljmp
xor
xchg
shr
subb
int3
ljmp
mov
popa
andb
leave
jp
leave
shll
outsl
push
test
fcom
mov
movsl
addb
and
fisubs
gs
dec
ljmp
repnz
xor
push
or
pop
mov
rcl
roll
arpl
mov
and
cmp
mov
or
mov
push
mov
js
jl
stos
cmc
andl
jp
in
lods
adc
mov
dec
sbb
or
popa
ret
iret
mov
nop
xchg
cmp
sahf
push
enter
loop
mov
leave
rcrl
arpl
ficomps
pop
imul
inc
addl
loop
out
mov
ret
test
push
jae
stc
push
jae
fidivrl
dec
fs
xchg
mov
mov
mov
mov
icebp
jb
insl
testl
push
dec
cs
xor
and
adc
mov
popf
loope
sbb
mov
push
push
cmpb
arpl
dec
add
xlat
pop
mov
cwtl
jle
mov
mov
mov
jns
xchg
jmp
inc
and
iret
sbb
jbe
push
ret
ret
adc
add
pop
pushf
shlb
out
fsts
icebp
and
cli
fdivrs
push
xchg
jne
cmpsl
leave
test
test
cltd
and
loop
mov
sub
xchg
and
mov
fimuls
lea
push
adc
cmp
pop
loope
adc
popa
sbb
pushl
fbld
adc
and
xor
insb
shlb
jp
dec
pop
adc
pop
push
and
ret
popa
mov
push
push
repz
dec
sub
mov
fmuls
test
pusha
ljmp
mov
pop
roll
dec
jo
pop
mov
inc
jmp
mov
lret
leave
lods
adc
sub
cmp
mov
dec
and
cmp
and
outsb
rcrl
jnp
sbb
mov
jecxz
and
xor
dec
push
mov
lcall
xchg
insl
inc
popa
mov
fwait
daa
negl
dec
adc
mov
sahf
dec
and
add
mov
dec
and
jns
add
inc
mov
loope
rcll
arpl
xor
mov
cmp
fnstcw
into
sub
mov
xchg
or
shlb
fistpll
mov
jecxz
movsb
loop
dec
add
jns
push
movsb
and
or
push
ljmp
xchg
sbb
push
xchg
loopne
popf
stc
mov
sti
push
lcall
lcall
loopne
shll
addr16
jb
ret
push
sub
mov
mov
cltd
pop
jmp
bound
and
ret
cmp
cld
mov
push
dec
ds
xchg
pop
rclb
clc
test
push
data16
jnp
shrl
xchg
test
pop
or
aaa
push
or
dec
ss
clc
xchg
push
inc
jno
xchg
lock
rcll
inc
lods
loope
jb
push
jl
gs
and
stos
test
xchg
cmp
mov
dec
dec
imul
pcmpgtw
adc
dec
mov
or
repz
shrl
movsl
xchg
stos
jnp
cli
ret
cmp
leave
xor
dec
xor
mov
xchg
andl
cltd
imul
ret
adc
xchg
inc
unpcklps
cltd
dec
sub
push
jmp
fcoml
xor
repnz
xchg
mov
cmp
cmp
sbb
jmp
stos
mov
jmp
mov
inc
mov
inc
jb
out
imul
pop
add
sarb
bound
or
fidivs
mov
sbb
xchg
cmp
test
jns
loope
std
jae
jmp
dec
les
rorl
pop
inc
jb
xor
ret
lret
sbb
cmp
and
push
repnz
out
jecxz
sti
sbb
jns
dec
cmp
aad
lret
stos
negb
jp
test
popa
pop
lock
inc
push
jmp
leave
jmp
ror
mov
rol
sbb
pop
call
inc
adc
stc
dec
in
andl
mov
stos
subb
push
repnz
dec
ret
arpl
mov
je
movsb
icebp
inc
fld
mov
inc
jmp
or
lock
fcoms
add
jp
mov
cwtl
mov
push
sarb
push
push
xchg
jno
or
fildll
stos
insb
lcall
arpl
inc
mov
push
loope
pushf
fptan
inc
jg
sbb
icebp
rol
xor
jp
dec
xchg
pusha
push
mov
mov
stc
inc
jle
imul
clc
repnz
push
bound
subl
jo
sbb
popf
mov
mov
shl
ftst
pop
dec
imul
idivb
dec
aam
stos
xchg
push
dec
inc
sbb
jns
mov
loope
add
lcall
xor
adc
cmpsl
and
push
and
pop
pop
mov
jecxz
mov
stos
popa
dec
shl
cmpl
inc
or
scas
movsb
push
imul
movsl
jns
cmp
aad
xchg
dec
test
adc
cmovns
mov
mov
adc
inc
je
loope
inc
sub
cmp
filds
pop
jae
pop
dec
repnz
or
js
imul
dec
dec
repnz
sub
push
nop
fcmovu
icebp
loop
xchg
fimull
xor
jns
je
imulb
fidivrl
mov
or
subl
popa
jb
pop
xorb
jle
push
ret
push
jae
or
jecxz
aam
xchg
mov
dec
dec
sub
aad
repnz
imul
push
out
mov
fwait
or
push
shl
jae
jno
add
ret
shlb
int3
roll
xchg
mov
movsl
cmpsb
inc
mov
jp
jo
lea
jne
imul
testl
inc
pushf
jecxz
jno
or
loop
cmp
mov
in
pop
dec
into
mov
cmp
lret
stos
mov
xchg
mov
push
orb
jp
push
cmp
rclb
cmp
cmpsb
xor
inc
repnz
mov
ffreep
popa
inc
fdivrl
sub
stos
js
lret
idivb
xor
or
pop
push
dec
ljmp
jp
cmp
cmc
pop
jp
mov
add
pop
adc
stos
loop
xchg
jno
sbb
insb
jnp
insl
jecxz
retw
mov
mov
pop
xor
xorl
add
mov
int3
xorb
sti
ret
adc
xor
add
fs
cmp
ret
cmp
or
mov
push
jnp
stc
lea
dec
cli
test
and
je
push
mov
add
bound
lret
stc
mov
pop
lods
jno
push
mov
stos
mov
push
mov
fnstsw
dec
stos
stos
push
pop
dec
push
ljmp
loop
jb
das
sub
push
cmp
mov
and
push
je
arpl
dec
xorl
jnp
cmp
add
and
xor
mov
push
imul
and
adc
pop
loop
dec
cmp
xor
shl
push
mov
imul
roll
mov
imul
xlat
ds
call
cmpl
add
cltd
cmp
addb
pop
pop
dec
imul
cmp
xchg
negb
jb
ja
add
cmp
aas
mov
decb
dec
stos
shr
icebp
push
scas
je
mov
cli
mov
mov
dec
pop
sbb
mov
add
lret
jg
in
ret
popa
lret
mov
fs
cmp
dec
stc
lods
cmp
ljmp
add
pop
andb
jb
fstps
sbb
dec
and
mov
and
cmp
inc
lds
xor
sti
adc
mov
add
or
jmp
rclb
fisubl
in
jp
clc
lods
mov
fnsave
add
cmp
ret
stos
mov
addl
jp
jmp
loopne
loope
mov
ret
hlt
ret
mov
in
lds
in
cltd
add
cltd
mov
mov
adc
subl
bound
imul
pop
sbb
cmp
loope
shll
lahf
lock
dec
movsb
push
cli
jecxz
ret
dec
hlt
push
jb
arpl
cmp
dec
or
hlt
dec
mov
stos
add
cli
jno
or
in
loopne
idivb
flds
mov
imul
out
arpl
ljmp
xchg
mov
mov
sub
notl
or
rorl
imul
mov
xchg
insb
ds
adc
jge
vpsllw
insb
loop
sub
add
sub
dec
adc
lcall
cmp
jae
add
cmp
shlb
cmp
test
nop
adc
mov
cltd
insb
mov
cmpsb
loope
ljmp
jno
jo
imul
fwait
lcall
mov
mov
or
cmpl
std
je
xchg
push
imull
mov
adc
enter
enter
sar
loope
dec
xor
mov
leave
test
push
lock
xor
xchg
stos
fisubrs
sbb
imul
inc
das
pop
jp
mov
nop
repnz
cmc
lcall
xchg
xor
movsb
mov
cltd
mov
inc
lea
flds
call
xchg
dec
sbb
loope
jno
stc
or
dec
mulb
push
mov
lods
mov
lock
fidivl
mov
lods
pop
leave
inc
mov
adc
push
fistpl
lock
jb
pop
mov
mov
xchg
mov
mov
cmp
adc
test
inc
mov
ss
push
std
dec
repnz
or
fldt
movsb
add
gs
cmp
jne
repnz
out
mov
es
cmpb
cmp
cli
xchg
mov
pop
inc
cmp
leave
jns
mov
jae
add
xor
cmp
imul
mov
hlt
mov
ljmp
cmpb
cmc
es
cmp
imul
adc
enter
mov
in
cmp
cli
test
push
push
jo
xor
push
inc
cli
xor
cmp
ret
dec
xchg
or
leave
jne
stos
pop
fsqrt
aas
ljmp
pop
mull
push
xor
adc
cli
mov
popa
addb
cmp
or
lret
or
dec
imul
mov
mov
pop
clc
add
fsubrl
arpl
into
sbb
push
add
test
repnz
jp
sbb
sub
mov
leave
mov
pop
cld
pop
jae
shl
sub
insb
imul
push
cmpsb
cld
fnstsw
xor
ror
std
lret
jmp
movsb
xchg
loope
imul
lcall
sarb
ret
ret
inc
test
ljmp
mov
ret
mov
rcl
inc
sub
sbb
add
inc
fistpll
pop
xchg
xor
push
cld
jns
sbb
inc
daa
rol
jp
adc
sub
loop
insb
pop
inc
xor
mov
stc
push
dec
mov
mull
sub
cmp
ljmp
fcomps
fisubs
push
lea
das
std
lods
xchg
or
hlt
fldcw
pop
aas
xchg
cmp
xchg
clc
adc
mov
jns
cmp
repnz
xor
loope
icebp
out
mov
jns
in
sbb
mov
lock
lea
inc
repnz
repnz
mov
cmpl
inc
cltd
sub
sbbl
sbb
pushf
inc
shll
jns
pop
mov
test
push
push
inc
bound
ret
add
inc
xor
mov
and
or
push
mov
ret
xor
jle
push
cmpsb
and
pusha
inc
inc
orb
dec
dec
mov
subb
fyl2x
imul
movb
mov
arpl
mov
inc
push
stos
enter
push
inc
jae
icebp
shll
cltd
ljmp
repnz
mov
fsubrl
mov
or
mov
leave
xor
stos
sbbb
fwait
cmp
cmpb
jnp
or
mov
jae
jb
dec
pop
jns
cmp
xchg
orl
jno
jge
out
inc
stc
bound
ret
xor
sbb
mov
stc
push
xchg
lret
popa
xorl
mov
add
cmpsl
test
mov
and
or
in
in
dec
or
ret
jns
push
icebp
cmp
jnp
lods
sbb
rol
enter
push
mov
mov
call
test
inc
mov
and
xchg
aad
stos
clc
insb
jnp
push
jb
sbb
dec
je
shll
popa
hlt
rol
mov
dec
pop
pop
cs
stos
jnp
cmp
mov
dec
ret
jecxz
xchg
pop
adcl
dec
arpl
xlat
rol
stos
cmp
mov
push
pop
out
add
enter
and
icebp
repnz
cmc
cltd
mov
mov
xchg
ljmp
and
mov
dec
push
mov
ret
movsl
test
jecxz
popf
ret
mov
ljmp
loop
imul
cmp
fisttpl
and
repnz
imul
sti
movzbl
repnz
pop
or
in
push
inc
jb
dec
mov
jns
shl
icebp
cmp
dec
xor
add
shrb
hlt
fdiv
sub
and
xchg
pop
lods
std
mov
fcompl
ljmp
clc
mov
in
and
loopne
xor
push
push
arpl
cltd
and
mov
fidivrl
inc
push
mov
bound
imul
push
stos
pop
lock
rcrl
xorl
inc
lret
jae
jp
mov
icebp
inc
roll
pop
inc
mov
mov
jae
in
ret
addl
sbb
mov
jle
leave
adc
roll
stos
dec
jae
ljmp
out
xchg
push
fiaddl
inc
test
je
hlt
or
ret
cmpsb
cmp
clc
sub
jnp
cmp
sbb
les
dec
pushf
dec
icebp
incl
ret
dec
popa
stos
adcb
ss
leave
mov
subb
lds
ss
mov
push
jmp
sbb
push
jae
mov
or
repz
imul
jns
add
or
cmp
adc
inc
sarl
dec
loope
inc
imul
outsl
cmp
mov
fdivr
cmp
lret
dec
cltd
sarl
mov
pop
mov
scas
sub
push
jo
mov
fistpll
jae
dec
mov
lcall
test
pop
cmp
push
std
sbb
fstpl
into
xor
mov
cs
gs
jge
dec
in
push
movb
jg
mov
jns
dec
cmp
or
iret
mov
jg
push
rcl
jmp
push
ljmp
cmp
inc
inc
ret
or
jmp
cli
jg
dec
ljmp
xchg
xorb
loope
ret
ret
repnz
mov
je
inc
push
mov
test
je
popa
test
jo
sbb
stos
stc
jge
cmp
sahf
movsb
dec
mov
aas
pop
adc
adc
dec
out
cmpsl
je
das
aam
bound
mov
mov
jle
mov
or
iret
ror
cmp
mov
addl
addl
sbb
out
mov
cmp
mov
mov
mov
loope
sub
int
push
add
xchg
add
addl
mov
sbb
mov
xor
cmpsb
inc
testb
lock
cmpl
jp
sbb
dec
inc
or
je
sbb
xchg
pop
into
xor
sbb
xchg
faddl
adc
loop
std
je
repnz
xchg
jecxz
inc
jno
mov
cltd
xorl
lcall
push
pop
stos
or
jp
inc
and
xor
jb
js
inc
dec
cld
push
cmp
add
loop
cli
jno
or
dec
enter
repnz
stc
fcoml
push
mov
xorl
sbb
jo
mov
xchg
outsl
out
mov
fisubrl
andb
leave
push
testb
add
sbb
push
xor
jp
cmpsb
std
push
imul
or
mov
xor
stc
insb
push
xchg
xchg
or
imul
test
mov
and
bound
pop
sub
adc
stos
cmp
fadds
jmp
jecxz
in
and
cli
mov
rolb
fnstcw
push
jle
bound
push
insb
mov
icebp
pop
adc
cwtl
sar
shrb
loope
jp
repnz
mov
popa
jno
inc
shl
lcall
mov
ret
hlt
sarl
popa
out
sub
mov
mov
sbb
jmp
xchg
sbb
cli
lds
mov
inc
loope
repnz
jns
int3
stos
dec
mov
faddl
leave
arpl
dec
repnz
aas
mov
sbb
mov
sbb
pop
test
jbe
icebp
addl
add
push
or
cmp
xchg
lea
je
xchg
or
loopne
pop
enter
subl
inc
dec
out
dec
cld
mov
lcall
or
cmp
mov
fcomp
mov
repz
imul
mov
in
mov
mov
fiadds
sub
cltd
sbb
out
push
shll
repnz
stc
out
rolb
aam
loope
xorl
mov
stc
das
test
pop
inc
repnz
or
mov
jnp
hlt
xchg
ret
je
ljmp
rorl
movsb
stc
stos
cmp
loope
jae
out
and
fists
jmp
pop
push
cmp
mov
jle
arpl
pop
inc
loop
gs
mov
jb
inc
out
dec
pop
mov
push
test
test
inc
mov
lods
push
fiaddl
mov
jb
lahf
test
jmp
fsts
or
mov
call
sbb
mov
insl
jmp
rcr
addl
inc
shl
mov
rolb
jg
int3
popa
mov
mov
repz
hlt
mov
jmp
gs
jnp
jns
jns
ret
mov
gs
daa
pusha
pop
or
loope
jae
jb
cmc
imul
loopne
loope
lret
add
push
lods
xorb
enter
jno
and
mov
mov
int3
aad
pop
mov
jmp
lock
mov
in
mov
cmp
popa
jns
icebp
fsts
inc
fbstp
mov
loopne
shl
ret
jb
lret
jbe
in
adc
mov
imul
cli
xchg
jns
pop
cltd
mov
push
mov
mov
pop
test
adc
lods
add
pop
push
andl
mov
push
mov
jl
cmp
add
jae
aas
popf
sbb
inc
dec
and
ljmp
and
ret
xor
mov
mov
lret
loope
jle
jmp
test
imul
int3
lea
notb
leave
add
mov
xchg
imul
fnstcw
fiadds
insb
leave
dec
adc
movsb
iret
jns
test
imul
daa
push
pop
insb
jl
mov
jae
nop
and
or
aad
xchg
imul
jp
insb
or
dec
push
ds
mov
rorl
mov
mov
jb
adcb
jo
dec
mov
jae
pop
add
mov
push
mov
xor
jmp
pop
inc
icebp
subb
or
loopne
xchg
fstps
enter
lods
mov
mov
pop
lods
xor
fdivl
pushl
jns
test
stos
rcrl
leave
lret
fidivrl
std
mov
dec
pop
aaa
and
xor
mov
mov
mov
dec
rcrl
imul
ss
mov
cmp
ds
dec
mov
cmp
sub
lret
stc
hlt
push
cmp
leave
dec
pop
ljmp
imul
int3
jecxz
jle
mov
dec
mov
inc
inc
in
ret
stc
fucomp
inc
mov
ret
sar
push
repnz
jmp
mov
xor
stc
mov
add
lret
bound
sub
arpl
icebp
xchg
ss
mov
mov
imulb
loope
jge
push
push
mov
xor
xor
popf
mov
xor
mov
lret
mov
inc
mov
xorb
ljmp
mov
lods
mov
fs
sbb
leave
stos
push
loop
pop
fadd
pop
orb
testb
loope
jmp
jecxz
pop
or
in
lock
andl
data16
decl
incl
daa
pop
ret
cmp
in
test
xorb
push
icebp
xchg
jns
sub
xor
sub
push
sub
pop
stc
ljmp
push
int
xor
add
mov
orl
and
cli
cmp
inc
bound
jnp
loope
jno
mov
add
loopne
sarl
push
repz
jns
jecxz
js
dec
in
bound
push
mov
xchg
fsts
dec
mov
mov
push
ret
mov
testl
adc
loope
push
and
jmp
mov
add
jno
cmp
add
arpl
push
test
lock
dec
bnd
mov
clc
les
lcall
cmp
mov
popa
jp
dec
jmp
adcl
loop
sbb
leave
dec
xchg
or
movb
loop
jp
sub
subl
adc
xor
adc
pop
or
testb
sub
jb
and
and
in
sub
cmc
andb
adc
mov
mov
dec
lock
jp
negb
ljmp
mov
xchg
cmp
clc
addr16
addb
push
clc
lret
repnz
push
xchg
neg
jns
fisubl
xchg
ljmp
xchg
rolb
sahf
dec
inc
or
imul
ljmp
shlb
stos
popa
inc
imul
jge
loop
xchg
lds
dec
movsb
adc
les
nop
test
enter
jns
cmp
mov
in
xchg
or
loopne
mov
mov
stc
mov
stos
mov
mov
add
xchg
pop
mov
repnz
add
cmp
test
cmpsb
push
and
sbb
mov
leave
decb
fiaddl
mov
int3
xor
stos
mov
mov
push
push
pop
lds
ret
dec
pop
cld
sarl
inc
push
push
cmp
xchg
inc
ljmp
clc
test
xlat
testb
orl
xchg
push
mov
test
push
mov
aad
data16
ljmp
imul
push
rol
cmp
push
ret
mov
jb
mov
dec
dec
sbb
cmp
inc
sub
andl
cmp
cmp
cmpsl
or
fbld
mov
int3
jb
mov
pop
dec
push
fidivrl
popf
ljmp
sbb
out
jae
ret
jno
lods
xchg
mov
test
das
mov
pusha
lea
inc
cmp
sar
xchg
jb
ret
fdivr
loope
mov
dec
mov
movsb
cltd
ret
lcall
pushf
mov
jmp
in
fmull
aam
arpl
xchg
roll
loopne
fldenv
jb
dec
xchg
aad
loop
or
fucomi
adc
pop
pusha
jns
add
mov
rcl
push
ret
cmp
hlt
rorb
cli
bound
in
jmp
cmp
xchg
mov
cmp
shrl
mov
and
fidivrs
movsb
mov
jecxz
inc
bound
dec
lret
xor
jnp
rclb
add
bound
pop
mov
sarl
lahf
jp
sbb
test
and
add
pop
sbb
xor
insb
arpl
bnd
repnz
insl
cli
jg
out
push
repnz
ret
cmp
rorb
jno
stos
mov
jnp
sub
ret
loop
pop
dec
jmp
cmp
mov
mov
jno
in
mov
jns
idivl
insb
fucom
dec
jno
std
scas
cltd
sbb
sarl
mov
or
rol
or
cmp
xorl
cmp
cltd
or
fstp
add
mov
cmp
adc
addl
push
and
popf
mov
add
cltd
stc
bound
mov
std
jnp
push
imul
xor
cmp
cmpl
add
pop
jp
ds
dec
sbbl
and
shrl
cld
inc
repnz
xchg
cmp
std
xor
xor
imul
stos
add
sbbl
xor
mov
rcr
mov
xchg
test
cmp
repnz
cmp
jae
cld
xor
stos
jno
fsubl
mov
rcr
inc
mov
dec
loop
inc
mov
loopne
cmp
rcrl
dec
inc
jmp
add
ds
call
add
leave
push
repnz
rclb
addb
jp
into
lea
push
inc
loopne
cmpsl
cmp
aam
repnz
push
std
jmp
cmp
jnp
inc
and
movsb
mov
mov
leave
inc
scas
rcll
mov
add
jno
mov
dec
inc
icebp
mov
repnz
in
pop
enter
mov
out
cmp
jnp
rcrb
imul
xchg
fmull
imul
jge
mov
shl
xor
nop
lret
xor
clc
push
shrb
imul
insb
jp
sarb
clc
mov
jg
lea
jp
lahf
call
ljmp
jle
jge
sbb
sub
jp
jno
sti
popa
ret
ja
jbe
jne
dec
std
dec
arpl
lret
fidivrl
jns
jg
int
xchg
xchg
icebp
jb
mov
push
xchg
xchg
xor
adc
sub
xor
jae
cli
mov
fsts
dec
lock
jp
nop
mov
add
mov
xorl
inc
jl
xchg
mov
in
imul
pop
dec
inc
je
insl
push
mov
cmp
mov
cli
and
cmpl
rcll
lret
daa
sbb
movsl
adc
pop
inc
ljmp
mov
add
testl
test
mov
cld
lods
icebp
push
stc
outsb
out
aaa
mov
mov
mov
imul
mov
lcall
mov
imul
xchg
push
mov
xchg
pop
in
jno
aas
clc
ljmp
loop
jp
mov
bound
arpl
enter
pop
leave
xor
sbb
fwait
inc
push
int
mov
fisttps
imul
push
ja
cli
add
rcr
mov
push
jb
ret
andl
sub
outsb
nop
pop
insl
psubb
mov
fptan
jne
sbb
sub
inc
cltd
mov
repnz
xchg
cmp
ror
out
cli
jno
arpl
stc
out
mov
pop
incb
sarl
movsl
mov
imul
adc
push
mov
adc
imul
sub
cli
mov
mov
push
test
out
xlat
call
jnp
cmp
and
sbb
lret
fdivrs
pushf
jno
andl
ret
repnz
addb
or
std
mov
jg
inc
cmpsb
lea
pop
out
out
repnz
ljmp
lcall
push
jae
xor
inc
shrl
push
sbb
cmp
fisubl
inc
mov
inc
arpl
dec
icebp
aaa
mov
jb
jg
xchg
sub
mov
pop
clc
stc
sub
push
ret
inc
out
addr16
push
fs
or
add
ret
loop
jno
cmp
xchg
rcll
stos
pop
ljmp
dec
cmp
lods
test
sbb
out
arpl
stc
fs
sub
mov
loope
cmp
inc
jb
mov
aaa
mov
outsb
jb
add
push
mov
leave
bound
inc
ret
imul
jo
xor
add
loope
mov
cltd
mov
repnz
mov
movsb
jle
bound
ret
stos
pop
loopne
xchg
push
inc
lahf
jmp
cmp
cli
out
ljmp
test
jp
mov
mov
imul
nop
mov
shrl
push
loope
jnp
andl
mov
xor
cmc
sbb
test
mov
fistpll
mov
fstpl
adc
add
insl
repnz
mov
fstpt
jno
pop
push
ror
imul
jns
and
push
andb
nop
mov
sub
stos
out
rcr
add
std
arpl
dec
pop
inc
xchg
leave
push
stc
xor
ss
pop
dec
stos
jno
imul
push
xchg
icebp
jmp
dec
mov
xchg
movsl
mov
pop
iret
pop
push
frstor
mov
shl
xchg
add
rorl
in
or
pop
cli
fisubl
xchg
jae
icebp
lea
call
stos
addb
xor
out
add
mov
mov
sti
int3
imul
ret
fiadds
stc
scas
loope
inc
lods
dec
jb
cmp
leave
jnp
or
icebp
xchg
mov
xlat
push
pop
roll
push
pop
addl
lret
mov
out
dec
pop
push
test
lcall
mov
addl
ljmp
jno
push
aas
sbb
push
mov
aas
mov
stc
sub
push
xor
mov
rorl
mov
inc
jge
xor
add
roll
mov
js
stos
leave
and
push
cmp
adcl
insb
inc
enter
sti
mov
test
inc
lea
and
dec
in
mov
std
notl
sahf
shrl
jp
jae
imul
cld
fidivrl
mov
es
les
mov
sbb
jp,pn
in
lahf
cmp
push
xor
loop
addb
cmpb
and
inc
insl
sub
arpl
sbbb
xchg
inc
cmp
push
xchg
xor
rorl
aad
je,pn
sbb
test
jmp
loope
orl
in
addr16
or
dec
push
stos
ret
repnz
xor
mov
xchg
imul
or
jno
out
std
cmp
cmpb
sub
mov
pop
sub
xor
xor
mov
andl
sbb
lods
jecxz
fdivrl
lods
inc
hlt
imul
cmc
jnp
popf
push
xchg
jg
mov
cld
xchg
mov
repnz
pop
jns
mov
sbb
fdivrl
jmp
nop
js
jb
cmp
fwait
imul
leave
mov
jae
ret
and
jmp
ljmp
inc
xchg
imul
xchg
call
sbb
jmp
xchg
mov
cmp
dec
inc
fwait
or
lods
ret
mov
ljmp
jb
out
mov
enter
std
bound
mov
cmpsb
adcb
stc
jne
mov
insl
push
cli
pop
cmp
idivb
cmc
mov
sahf
stc
subb
imul
inc
lret
mov
in
xor
inc
cmp
inc
lds
xchg
ficoms
xor
pop
addb
orl
jno
jmp
lret
ret
loope
incl
inc
xorl
push
mov
dec
fimull
loopne
adc
push
jp
or
stos
pop
cmpb
lret
sbb
jnp
dec
stc
shlb
cmp
enter
add
leave
pop
test
mov
inc
sub
loop
addb
int3
push
jns
push
loop
jb
xor
xchg
jp
pop
add
fnstcw
in
push
imul
inc
or
adc
xor
movb
hlt
enter
ds
inc
insl
inc
jno
ja
adc
mov
xor
dec
shrb
popa
aas
jecxz
push
and
loopne
loope
add
push
icebp
aas
and
sub
cld
cmpl
lods
dec
mov
dec
cmpl
xchg
movsb
and
sbb
lret
insb
push
cvtps2pd
cli
loop
inc
jmp
push
push
push
aam
bound
pushf
jp
dec
mov
cmp
imul
jb
je
cli
pop
fsubl
cmpb
xor
jnp
inc
jb
dec
jg
adc
insb
pop
sbb
jnp
mov
stos
stos
rcrl
xchg
push
sbb
mov
jae
mov
ljmp
ret
stos
cltd
fcmovb
jnp
pop
lods
imul
hlt
mov
movsl
popa
insb
stos
rcl
sub
aam
shrb
insl
inc
testl
jg
ret
sbbb
shrl
loop
in
lcall
mov
add
mov
sub
pop
into
xchg
mov
mov
mov
bound
fsubrp
fdivp
pushf
dec
push
adc
mov
repnz
xchg
jmp
sbb
stos
stc
gs
in
cmpl
add
ja
jns
imul
xorl
in
and
int3
push
test
loope
jecxz
ret
addl
bound
inc
mov
xor
mov
jp
je
mov
add
mov
out
repnz
push
in
mov
inc
fisubl
test
je
or
mov
cmp
mov
loop
fimull
mov
adc
popa
dec
lret
aas
jle
pop
mov
out
inc
mov
dec
mov
or
adc
and
imul
or
loope
mov
icebp
nop
push
and
xor
mov
aad
and
das
mov
insb
xchg
push
pop
popa
jae
psubw
inc
mov
add
mov
mov
and
negb
into
jnp
sub
jnp
add
jnp
dec
rcrl
loop
jae
xor
iret
ret
jb
mov
mov
lret
pop
mov
jg
nop
jne
orl
loope
jmp
pop
push
cmp
fs
mov
dec
rorb
sbb
pop
jae
adcl
mov
dec
in
mov
shlb
cmp
jp
test
cmp
jo
xchg
imul
fistpl
mov
outsl
fwait
add
add
jnp
push
pop
cmp
enter
mov
add
ret
test
sarl
in
imul
shl
fdivr
dec
call
pop
inc
stc
mov
lods
jmp
and
loop
imul
mov
movsb
xor
jg
push
push
inc
stos
inc
add
xchg
mov
mov
insb
push
jge
adcl
enter
push
arpl
dec
dec
ret
int
inc
lcall
inc
fldcw
dec
mov
cmp
roll
jnp
repnz
icebp
out
in
sar
or
orb
stos
jnp
cld
lods
inc
fisubl
jge
push
xor
stos
sbb
pop
fxch
cmp
or
jb
orl
rolb
cltd
xchg
pusha
repz
cmp
clc
pop
jb
repnz
popf
pusha
sbb
bound
cmpsw
stos
sbb
sub
roll
fisubs
mov
repz
andb
mov
push
loop
mov
jp
jmp
mov
call
daa
jo
xchg
lods
or
cmp
mov
out
jnp
cmpsb
push
jo
clc
test
mov
sub
jno
roll
pop
incl
mov
imul
and
stos
popa
mov
in
repnz
addr16
aas
push
loope
mov
push
frstor
pop
stos
cmpb
xchg
scas
lret
pop
ret
sub
andb
leave
push
push
jae
in
scas
jmp
add
mov
jnp
or
mov
clc
into
stos
pop
pop
pop
cli
jnp
mov
add
jae
fstpt
mov
pop
clc
dec
loope
mov
daa
into
cmp
xor
and
mov
and
test
cmp
jb
insl
lods
pop
bound
dec
add
repnz
cmp
jmp
mov
loop
cltd
dec
shl
mov
jno
and
adc
inc
jns
mov
adc
dec
lret
pop
sub
push
iret
mov
xorl
mov
jmp
inc
jecxz
decb
arpl
mov
jg
dec
sarl
rol
jnp
daa
or
fidivrl
repnz
pop
mov
jns
lret
arpl
xlat
adcl
je
popf
ret
mov
loopne
das
lock
mov
jns
mov
imul
shll
div
push
lcall
imul
jnp
fbld
jecxz
insb
pop
sbb
filds
push
arpl
sbb
mov
jns
inc
sub
inc
clc
xorl
popa
push
lock
pop
add
fisttpll
mov
roll
dec
std
sbbb
nop
movsl
xchg
mov
lret
popa
jg
add
lea
inc
jae
sar
mov
jmp
jnp
test
aad
fmuls
xor
pop
or
xor
push
adcl
cmc
loop
jle
mov
sarl
mov
repz
sar
jb
mov
push
insl
sbb
imul
mov
and
sub
sub
push
push
pop
add
ljmp
ret
cmp
dec
inc
or
xchg
xor
mov
xchg
int3
icebp
xor
push
imul
sub
jnp
rorb
xor
bound
adc
xchg
imul
lock
std
dec
stos
add
add
mov
imul
inc
cmp
bound
jp
mov
loopne
cmp
cmp
jae,pt
stos
jno
movb
addr16
arpl
and
add
cmp
jnp
rcr
andl
movsl
stc
cmp
mull
ret
in
mov
jecxz
testb
sbb
sbb
sbb
insb
mov
out
fsubp
ficomps
addb
leave
pop
add
cmpsb
enter
loope
outsb
jg
std
int
sbb
and
sub
sbb
dec
mov
xor
sub
lahf
mov
inc
mov
sub
dec
shlb
and
jmp
icebp
rcl
xor
push
pop
cmpsl
hlt
std
push
stc
push
cmc
shlb
mov
jg
add
inc
and
outsl
and
in
jns
jnp
popa
fadds
cmpsb
mov
mov
bound
pusha
test
xchg
lods
test
lcall
jb
xor
imul
clc
sbb
or
aaa
int3
jmp
shr
adc
cltd
in
f2xm1
adc
test
cmp
shlb
xor
jecxz
jns
insl
in
ret
adc
adcl
fwait
test
dec
or
pop
mov
sub
stos
jmp
push
icebp
push
and
lret
pop
and
addl
bound
pop
ret
mov
js
hlt
dec
inc
flds
or
imul
xchg
je
jp
std
mov
icebp
cmp
nop
push
lds
push
stos
int3
pushf
dec
into
cmp
jo
add
dec
jg
dec
shl
cltd
sbb
inc
jmp
std
ret
or
fnstcw
rol
push
arpl
xor
cmp
xorl
fdivs
fistpl
sub
mov
cmp
enter
inc
cmp
lods
imull
lret
xchg
repnz
and
push
lea
push
orl
xchg
inc
dec
dec
xchg
pop
loop
mov
lret
pop
pop
and
movsb
sbb
xchg
stos
inc
mov
push
mov
cli
push
nop
cmp
movsb
pop
adc
mov
xchg
movsl
out
cmpsl
flds
es
jmp
jne
xor
shlb
mov
jb
aas
jmp
pop
out
pop
lods
inc
cmp
sar
and
mov
cmp
sarl
jecxz
dec
push
insb
clc
adc
jne
test
xor
mov
int3
dec
dec
xchg
cmc
ret
addl
inc
inc
xchg
mov
mov
lods
jmp
jns
pop
mov
pop
bnd
in
inc
mov
add
jmp
sbb
shl
das
insl
and
inc
std
pop
pop
cmp
mov
pushf
push
lret
lahf
cvttps2pi
out
xchg
or
rorl
push
repnz
sbb
jp
sub
stc
cmp
arpl
dec
jg
ret
jne
loop
mov
xchg
mov
jg
or
movsl
mov
je
loope
in
lret
shlb
cli
push
sub
push
test
stc
in
cmp
sti
lock
adc
imul
rolb
cmpsl
or
repnz
sahf
adc
mov
sub
push
jb
mov
dec
inc
imul
push
outsb
cli
and
or
dec
add
mov
dec
adc
lea
and
mov
jae
xor
jo
mov
pop
jg
xor
popf
loope
imul
in
stc
in
or
cmp
jno
cli
push
stos
mov
test
imul
or
pop
xor
int
cli
dec
flds
addb
add
sbb
test
inc
movb
jb
loopne
into
cmp
mov
mov
stos
inc
rorl
mov
popa
push
adc
jno
cli
jmp
mov
cs
loopne
pop
lods
cltd
hlt
pop
arpl
cli
scas
adcb
mov
pop
inc
dec
in
inc
push
repnz
loope
into
icebp
stos
into
jno
leave
add
jp
stos
hlt
xchg
inc
mov
push
out
stc
cli
jno
jge
jae
pop
pop
mov
loop
arpl
mov
hlt
inc
leave
cmp
std
adc
cmp
bound
or
data16
cmp
jns
sub
pop
stc
add
arpl
pop
fstl
icebp
repnz
fcoml
xchg
jnp
in
push
pusha
and
add
ljmp
leave
pop
int
xor
and
test
dec
push
jmp
je
mov
xchg
push
mov
sub
pushf
bound
inc
mov
inc
pop
push
fnstenv
std
loope
xor
call
adc
cli
xlat
jnp
add
sbb
imul
shlb
mov
and
or
stos
stc
pop
and
lods
push
bound
stos
mov
jb
and
inc
in
mov
mov
jecxz
les
rorl
rcrl
jb
insb
or
inc
mov
mulb
insl
sarl
cmp
ret
je
mov
xor
lock
icebp
ret
mov
pop
movsb
jb
xor
dec
and
mov
xor
dec
cmp
test
leave
mov
cmp
jnp
repnz
mov
dec
inc
jae
push
test
mov
popf
push
dec
xchg
add
mov
push
and
ljmp
mov
lret
xor
popa
pop
lods
add
arpl
xor
jns
sbb
mov
data16
sub
pop
sub
lock
out
das
cltd
div
inc
add
cmp
mov
sub
ret
mov
mov
leave
aas
cmp
dec
cmp
adc
cwtl
jns
imul
inc
inc
sbb
jb
pushl
push
popa
jns
fidivl
loop
xorl
loopne
push
fdivrs
loopne
or
test
mov
dec
stc
xorb
jecxz
mov
out
dec
push
je
push
mov
loopne
cli
cltd
push
jb
int
scas
test
in
mov
dec
in
xchg
add
pop
mov
inc
inc
subl
call
lret
xchg
xchg
lods
gs
sarb
popa
push
arpl
popa
jae
fs
mov
repnz
ret
test
popa
jecxz
cltd
aam
mov
pop
in
bound
jmp
dec
jns
ret
cwtl
and
push
cmpb
outsl
rcrl
push
test
pushf
cltd
jno
cmp
xorl
sbb
jnp
xchg
lret
jns
inc
xor
push
in
lds
mov
pop
and
lret
mov
inc
lcall
push
dec
pop
mov
and
insl
jno
lods
jnp
pop
mov
or
push
ljmp
jns
out
add
xor
loope
lock
sub
inc
jne
fnstenv
cmpl
dec
inc
jno
mov
sbb
leave
fsub
loopne
movsl
push
lods
inc
ret
shll
dec
lcall
es
bound
mov
mov
hlt
hlt
inc
xor
mov
ret
leave
cltd
clc
fstps
lret
cli
push
lcall
pop
fcmovnbe
adc
jns
int3
push
pop
xor
mov
je
lcall
loop
jmp
sbb
dec
ds
arpl
cmpsl
add
cltd
fcmovnb
mov
push
in
jno
loop
jp
mov
mov
loope
cld
add
dec
jne
inc
fldenv
shlb
pop
cld
sbb
inc
flds
stos
or
int3
shrl
pop
mov
mov
movb
sbb
mov
icebp
push
mov
mov
adc
jp
push
pushf
mov
sbb
inc
aas
xor
mov
dec
mov
jle
jae
xchg
shl
bound
call
and
shlb
pop
jb
lea
inc
hlt
addr16
and
sahf
enter
jle
mov
arpl
lret
lahf
std
dec
jb
inc
pop
adc
mov
push
mov
cmp
sbb
inc
inc
mov
cmp
imul
mov
dec
je
mov
sbb
shrl
std
adc
mov
mov
mov
mov
imul
rclb
xor
mov
push
inc
jmp
mov
push
push
fstps
sarl
inc
in
mov
jecxz
mov
imul
pop
jae
pop
dec
ret
jg
jnp
push
scas
lret
xor
into
and
cmp
inc
test
mov
pushl
dec
dec
inc
out
arpl
xor
inc
dec
cmpb
mov
fsubr
push
xchg
xchg
or
cmpsl
aam
mov
pop
and
clc
ret
test
adc
jle
popa
inc
cmp
mov
sbb
cmp
outsb
or
dec
lret
mov
xor
test
js
mov
cmp
jnp
sbb
cmpsb
xchg
loop
pushf
inc
mov
mov
lea
icebp
stos
dec
xchg
and
stc
inc
pop
jp
cli
and
inc
jnp
test
mov
mov
mov
jmp
xchg
fdivs
ljmp
sub
or
push
inc
mov
push
sub
add
mov
stc
jns
movsb
rclb
orl
cmp
cltd
push
leave
xchg
in
xchg
mov
bnd
cmp
fdiv
call
stos
jp
cli
lret
xchg
addl
loopne
jb
push
push
push
mov
ljmp
stc
jb
jge
inc
incb
push
mov
aas
js
mov
out
cmp
pop
sbb
movsl
mov
dec
je,pt
rcll
out
sub
xor
adc
sub
or
test
sub
out
xor
sub
mov
cltd
jp
cld
stos
cmp
mov
arpl
lock
lret
test
stc
dec
mov
adc
flds
pop
cmp
lret
xor
pop
icebp
sar
mov
insl
pop
push
ljmp
ret
mov
in
xor
sbb
mov
fiaddl
clc
mov
lds
ret
stos
push
sbb
ret
and
imul
test
test
icebp
jns
xor
ret
and
mov
stos
insb
imul
stc
cmp
lds
mov
push
lods
int3
push
andl
add
es
shl
pop
mov
cli
aas
add
mov
cmp
push
hlt
test
mov
clc
or
dec
popf
mov
xchg
fildl
add
pop
or
insb
adc
fmull
dec
add
mov
jns
xor
mov
add
pop
cli
out
les
mov
xlat
stos
cmp
add
lret
inc
sti
sub
push
cmp
aas
mov
pop
jmp
ljmp
add
arpl
clc
sbb
pusha
popa
mov
add
push
dec
pop
and
sub
adc
fnstcw
cmp
xorb
adc
fdivrs
pop
hlt
dec
inc
push
push
mov
fisttpll
xchg
stc
dec
jmp
jnp
xchg
xchg
jae
add
push
jl
dec
cmp
dec
repnz
arpl
loope
jg
push
lret
ret
sub
xchg
ljmp
jns
xor
push
adc
repnz
adc
lcall
cli
lahf
loop
leave
add
shr
mov
popf
cmp
push
push
push
hlt
push
pop
jnp
cmp
jp
mov
jns
clc
and
bound
dec
clc
mov
mov
add
lcall
lea
out
inc
mov
sahf
enter
clc
je
inc
jns
add
popa
bound
cli
imul
jns
fldl
mov
jmp
and
dec
sbb
inc
fldl
inc
inc
xor
lods
mov
cli
imul
imul
cld
jge
jp
testl
cli
int3
mov
pop
andb
incl
dec
stos
addb
call
inc
fistpl
jle
decl
and
xchg
int3
stc
mov
dec
dec
pushf
popa
mov
ja
mov
push
lcall
ljmp
popf
mov
popa
lahf
mov
subb
push
or
inc
add
popa
lahf
mov
add
push
mov
pop
pop
inc
dec
push
push
das
enter
mov
cmp
or
pop
jo
cmp
cli
repnz
icebp
in
int3
jle
cmp
xchg
inc
jb
xchg
lret
mov
js
adcb
push
repnz
and
stc
ja
sti
xor
add
test
das
mov
ljmp
mov
jmp
inc
jge
aam
leave
dec
insb
imul
ljmp
movsl
mov
loop
xchg
fisubrs
inc
dec
in
inc
sarl
addl
jae
dec
push
jmp
jecxz
mov
popf
leave
imul
ret
sbb
popa
lret
jp
dec
push
aam
pop
sbb
push
rclb
xor
dec
std
push
cmpb
and
pop
and
jns
jae
jle
cmpsb
add
lock
pop
xor
mov
test
js
pusha
mov
out
jno
loope
inc
jnp
stos
loopne
pop
loopne
std
jmp
cmpsb
leave
mov
push
ljmp
jno
jns
push
adc
stos
enter
leave
push
cmpb
lcall
insb
fistps
inc
mov
mov
cmpb
inc
mov
pop
pop
xchg
dec
push
nop
adc
jp
add
xor
or
gs
mov
bnd
fbstp
lret
push
push
ret
mov
cld
inc
ljmp
mov
into
loope
rcrb
sub
mov
arpl
out
in
jge
fildl
cwtl
loop
dec
mov
iret
insb
ljmp
mov
mov
mov
cli
movsl
rclb
mov
jle
mov
lcall
aad
add
jp
iret
add
xorl
xchg
mov
aad
insl
ljmp
dec
inc
aas
and
fdivl
mov
inc
pop
clc
insb
xor
cli
out
xchg
mov
jns
test
mov
inc
dec
loop
mov
inc
cmp
bound
push
in
bnd
icebp
sahf
pop
xchg
adc
dec
and
or
subl
mov
pop
hlt
js
popa
pop
add
int
mov
stc
mov
iret
push
imul
dec
dec
movsb
mov
dec
xor
jns
dec
jnp
mov
into
fsubl
dec
push
jb
aas
sub
jg
stos
inc
loopne
cmpsl
and
scas
pop
cmp
in
jmp
push
or
mov
loop
pop
mov
mov
ret
aaa
xor
xorb
mov
flds
call
cmp
xor
jp
repz
or
pop
cmp
mov
push
push
push
bound
lods
pop
stos
jnp
popa
xchg
ja
jno
xorl
push
int3
pop
mov
push
mov
scas
enter
daa
push
fimull
add
push
mov
test
mov
ljmp
xor
mov
outsb
add
lcall
test
out
xchg
int3
xor
testb
push
xor
scas
ja
add
arpl
mov
js
jmp
mov
ljmp
bound
stos
repnz
push
sbb
pop
sbb
jae
mov
jns
in
imul
xchg
sbbl
mov
pop
add
mov
jnp
scas
mov
sub
dec
inc
adc
aas
pop
and
sub
jbe
pop
mov
sbb
push
clc
mov
cltd
fdivrs
imulb
jnp
in
repnz
stos
or
aas
dec
dec
pop
popa
xor
add
push
cmpl
mov
dec
adc
aas
mov
pop
mov
mov
mov
das
pop
mov
xchg
dec
jle
orb
or
push
imul
push
push
je
mov
dec
push
popa
or
xchg
mov
inc
imul
inc
outsb
mov
cli
push
cmp
rclb
adc
lds
leave
ror
cltd
dec
xor
add
jnp
xchg
arpl
cmpb
lods
mov
push
mov
fsqrt
push
stc
cmp
popa
stc
mov
enter
sbb
arpl
jnp
pop
add
cmp
dec
bound
cli
mov
xchg
popa
xchg
leave
inc
mov
cs
xchg
rcrl
push
inc
repnz
loop
push
mov
mov
mov
xor
cli
xor
cli
push
fiaddl
ljmp
in
mov
lds
xlat
lret
push
icebp
cmp
mov
mov
imul
and
adc
lret
jno
mov
ret
sbb
lcall
call
cmpsb
rcl
push
cwtl
into
and
sti
push
ret
xchg
xchg
mov
cmp
adc
pop
adcl
popf
jno
jno
test
cmp
sbb
ljmp
dec
inc
cmp
jmp
xor
push
hlt
mov
inc
push
lret
stc
lcall
test
inc
dec
xchg
loopne
in
mov
lock
inc
xor
xorl
jnp
sbb
sbb
cli
icebp
incl
xor
xor
dec
cmpb
popa
aas
push
or
mov
roll
call
stos
lcall
jb
xor
dec
stc
xchg
mov
in
pop
cmp
dec
mov
jge
sbb
mov
inc
cli
mov
xchg
adc
pop
mov
jb
mov
aas
popa
push
notb
inc
rcrl
icebp
shlb
and
inc
insb
jns
stc
mov
inc
stos
or
add
subb
push
mov
push
arpl
cmp
gs
sbb
mov
sar
lret
test
inc
mov
cmp
sbb
inc
xchg
fisubl
mov
stos
pusha
dec
pop
xorl
notl
sti
popf
in
and
ficomps
sbb
outsb
loop
push
adc
out
bound
mov
inc
adc
inc
inc
pop
inc
xor
pop
and
outsb
ret
pop
out
xor
stos
loop
adc
nop
jp
push
adc
mov
lcall
bound
push
test
ret
jae
js
repnz
mov
ss
mov
pop
sub
mov
adc
mov
cmp
lock
jg
loope
mov
adc
stc
dec
add
repnz
push
mov
push
mov
lahf
mov
popf
push
movsl
sub
stc
adc
push
mov
and
cmp
das
call
cmp
mov
rclb
sub
rolb
mov
shll
dec
fcompl
out
mov
ds
and
imul
jl
ds
inc
mov
hlt
insl
push
inc
test
dec
cmc
mov
xchg
sbbl
aas
movsl
or
mov
xchg
movsl
lds
pop
inc
lret
and
pop
subl
mov
rol
lods
stc
jnp
xor
pop
fstpt
sar
shll
repnz
icebp
mov
pmulhw
cmpsl
dec
jg
repz
repnz
mov
mov
mov
mov
int3
mov
insb
mov
call
ret
dec
xor
rorl
mov
mov
lcall
mov
cmp
sbb
imul
jno
cmp
lods
shll
push
pop
jb
push
xchg
jg
sub
xchg
in
inc
dec
xchg
subl
jmp
insl
cli
xchg
cltd
fimull
inc
insb
ret
add
xor
add
stos
push
mov
popa
xorb
rcll
nop
loopne
loope
arpl
test
andb
mov
stos
and
jae
mov
aad
xchg
cmp
jmp
leave
stos
lcall
pop
inc
arpl
out
cmp
test
fyl2xp1
leave
jnp
jg
adc
stos
mov
jb
fisubl
addb
mov
shll
lods
fstps
xchg
fcomps
das
mov
clc
cwtl
mov
hlt
add
stos
std
orl
dec
mov
outsl
jbe
xor
out
repnz
xor
icebp
jnp
insb
repnz
mov
and
lret
xor
push
insb
push
push
out
test
mov
popa
lret
ret
and
repnz
loop
cmp
notb
sub
or
mov
enter
xchg
or
xchg
stos
dec
loopne
movq
jae
pop
lods
addl
dec
push
adc
pop
arpl
stc
imul
ja
stos
jp
jbe
in
cwtl
pop
add
add
ljmp
repnz
push
inc
arpl
mov
or
addb
jmp
mov
test
and
cmpsl
lods
dec
arpl
sbb
push
ret
imul
mov
push
imul
adcl
jge
push
mov
bound
and
push
inc
xchg
popa
push
cmc
push
fsubl
jo
xchg
cmp
mov
inc
dec
jecxz
enter
lock
test
cli
jns
lods
loopne
adcb
jae
xchg
cli
adc
sbbb
jecxz
in
ret
adc
test
inc
cli
xor
andb
adc
mov
int3
cmp
inc
loope
ss
mov
inc
inc
mov
mov
imul
xorl
imul
xchg
cmpl
adc
andb
ljmp
rclb
iret
xchg
arpl
gs
retw
cmp
fldcw
mov
xor
pusha
xchg
in
imul
jmp
pop
gs
lret
xor
push
loope
xor
mov
mov
cs
adcl
inc
pop
cmp
push
cli
jnp
jg
mov
cltd
lahf
insl
je
imul
je
jp
fdivs
adc
mov
jns
mov
jns
adc
pop
inc
flds
stc
imul
jae
mov
popa
jnp
clc
mov
mov
mov
xor
stos
jp
cwtl
negb
stos
add
cli
xor
xchg
add
loop
mov
dec
pop
imul
ret
pop
mov
imul
jmp
dec
mov
mov
daa
and
pop
pop
fwait
push
sub
mov
jns
popa
adcb
loope
jmp
mov
andb
test
icebp
jge
mov
mov
inc
popa
stc
and
xor
jmp
push
and
mov
cli
dec
stos
inc
imul
push
daa
add
mov
inc
ret
stc
stos
push
cmp
dec
mov
inc
cmp
lahf
arpl
mov
xorb
mov
test
mov
jns
jno
jle
lcall
cmp
jp
loope
jno
push
imull
cmp
jp
pop
jnp
sbb
std
add
jg
push
test
lods
sub
je
aas
add
rorb
jmp
add
inc
movsl
or
xchg
xor
cmp
pop
inc
lock
dec
stos
shll
shl
mov
adcb
add
cli
pop
jbe
xchg
mov
mov
add
jb
inc
and
rol
inc
lea
shl
xchg
jp
dec
ret
sub
pop
loope
ret
orb
xor
loop
stos
stc
inc
add
fiaddl
xchg
cmp
daa
ficomps
adc
or
daa
lahf
leave
cmp
sbb
push
mov
pop
xor
pushl
jno
mov
fidivs
aas
jg
shll
push
push
and
mov
adc
outsl
push
cs
push
or
arpl
mov
out
cmpb
jp
in
adc
hlt
xor
ljmp
or
mov
andl
mov
mov
adc
ljmp
lcall
popa
shrb
clc
push
inc
loope
inc
sbbb
rcll
or
xchg
lahf
fidivrl
xor
loop
xchg
jo
cli
dec
jae
jno
jns
movsl
dec
push
mov
mov
mov
loop
mulb
add
inc
or
rcrl
dec
jnp
jno
xchg
call
aam
dec
lret
out
fmull
or
and
push
in
fcmovnbe
xlat
push
mov
jae
leave
icebp
notb
xor
jle
jl
pop
push
xchg
xor
js
xor
adc
loope
shlb
mov
inc
mov
popa
fcoml
and
add
ret
add
jne
xor
mov
inc
jns
int3
cmp
add
cli
cmp
fldenv
je
aas
xor
cmp
lcall
lahf
pop
mov
arpl
xorl
add
nop
dec
imul
shll
cs
inc
mov
xchg
add
test
jp
mov
notb
imul
add
pop
inc
jp
bound
xchg
push
cmp
pmuludq
xchg
mov
lcall
jmp
sub
and
xor
add
pop
lock
arpl
inc
int3
insl
xchg
mov
jge
inc
jae
test
inc
leave
lret
loope
icebp
lods
dec
mov
mov
mov
clc
add
dec
addl
sub
pop
mov
cmc
in
iret
jns
inc
lcall
mov
shrl
icebp
cmp
sub
xchg
and
cli
fmuls
lret
loope
fidivs
call
fstl
rorl
ret
ret
inc
adc
loop
dec
dec
mov
or
mov
or
pminub
cmp
sbbl
int
orb
pushl
subl
inc
cli
aas
dec
xor
addr16
jecxz
shlb
inc
in
dec
mov
loop
inc
fstps
xchg
mov
cmp
and
rcll
xchg
mov
sub
pop
repnz
sar
dec
ljmp
jnp
lcall
orb
stc
xor
insl
or
inc
pop
jno
mov
xor
cmpl
adc
mov
cld
cmpl
lcall
push
out
jae
pusha
pop
bnd
xor
bound
aaa
ss
inc
lret
inc
fldenv
jno
adc
inc
cmp
push
mov
jns
sbb
cld
imul
stc
add
leave
in
loope
icebp
subb
inc
incl
cmp
xor
test
ss
enter
dec
and
pop
and
mov
fisttpl
fidivrl
fcmovbe
and
bound
pand
ret
jne
jb
or
cmpsb
fidivl
cli
dec
stos
loop
jmp
pop
mov
sbb
shl
mov
stos
fiaddl
aas
ljmp
lret
xchg
icebp
xorl
add
daa
stos
mov
sbb
mov
or
mov
pop
mov
fiaddl
lock
mul
shlb
or
call
stc
sbb
imul
enter
xor
arpl
outsl
repnz
stos
push
pushl
dec
subb
insl
mov
aas
and
mov
jb
icebp
jae
xchg
imul
sar
pop
jnp
mov
loop
cmp
xor
mov
in
ret
mov
cli
movsb
jmp
mov
add
pop
mov
leave
mov
ficoml
mov
rol
stc
mov
leave
jae
jnp
sub
sub
fisubrs
inc
lahf
mov
inc
or
xchg
nop
cmp
inc
mov
stos
ret
inc
loope
insb
push
xor
push
leave
cmp
in
ret
jp
mov
jb
test
push
in
mov
std
push
jae
mov
and
lret
mov
dec
push
dec
add
ds
pop
jg
xorb
mov
mov
daa
loopne
lock
sti
mov
xchg
shll
and
xchg
pop
mov
sar
pop
mov
jmp
mov
and
inc
cmp
sub
sbb
notb
jge
out
dec
test
cmp
dec
ret
dec
push
jo
leave
in
test
popf
adc
jmp
push
stc
icebp
mov
je
insb
pop
adc
push
mov
leave
ret
jecxz
cli
loope
mov
xor
mov
ret
mov
in
xor
arpl
popa
mov
xchg
mov
cmc
lcall
std
cmp
repnz
push
inc
pop
dec
jns
cmp
add
jo
mov
aad
add
shll
jo
cmp
and
ret
mov
fwait
imul
sub
sub
or
mov
cmp
mov
mov
repnz
mov
jne
cmp
jae
test
mov
push
mov
mov
ss
dec
cs
je
cmp
jb
and
ror
push
xor
rorl
icebp
sarl
cmp
iret
push
and
inc
jno
dec
stc
sub
cltd
enter
nop
sub
adcl
xchg
bnd
mov
push
cli
mov
cmp
or
xchg
int3
addb
add
ror
inc
push
dec
out
jle
imul
fsubp
fisubs
stos
lds
in
push
out
insb
adc
out
testl
pop
or
icebp
mov
push
inc
outsb
int
sub
cmp
xor
xchg
loope
insb
jb
mov
loopne
cmpb
xor
push
mov
jle
xchg
and
mov
stos
push
je
int3
cmp
imul
sub
lods
stc
sbb
add
push
movhps
stc
negb
inc
icebp
lcall
das
mov
xchg
jge
cltd
mov
jmp
lcall
arpl
aas
and
icebp
jno
fwait
inc
and
cli
int3
push
dec
mov
fimull
ljmp
jb
add
pop
adc
lret
leave
and
mov
jnp
pop
lahf
lret
jp
out
fsubrp
mov
push
mov
loope
push
shll
and
js
xor
pop
mov
jno
inc
xchg
adc
pop
push
inc
je
xchg
add
cmp
test
je
int3
mov
sub
test
ret
adcb
mov
jp
hlt
mov
out
cmovae
jmp
fisubl
jb
dec
jle
xchg
sti
das
call
cmp
in
sahf
pop
lock
jmp
loop
jno
pop
add
mov
push
mov
push
popa
ljmp
std
add
or
mov
loop
aad
ss
sarl
lret
jno
cmp
in
cmp
push
inc
cltd
addb
out
imul
inc
push
imul
mov
sub
rolb
cmpb
cmpsl
stos
call
pop
xchg
fcmovne
lret
cmp
imul
jno
stc
adc
add
jp
out
nop
add
inc
dec
gs
and
ds
loop
stos
mov
xchg
xchg
mov
mov
pop
mov
clc
daa
arpl
subl
add
ds
mov
inc
dec
sbb
pop
cld
mov
dec
add
subb
flds
xchg
mov
cmp
repnz
negb
stos
std
repnz
lods
icebp
roll
out
dec
aam
ss
ret
lret
inc
mov
mov
pop
ficompl
enter
mov
int3
adc
dec
mov
subl
and
mov
pop
fldl2e
mov
cmp
out
mov
push
in
scas
mov
xlat
push
cmpl
add
adc
mov
cmpsl
leave
xor
add
stc
loop
inc
push
mov
repnz
mov
in
in
jnp
enter
jmp
cmc
jb
xor
imul
mov
mov
mov
xadd
iret
out
cld
mov
jae
cmp
jnp
pop
inc
sub
jge
insb
ljmp
shlb
rcrl
add
rcrl
xchg
test
jae
sbb
cmpsl
lods
xchg
lock
icebp
iret
push
imul
pop
sub
cmpsl
in
stos
mov
inc
mov
fmuls
sbb
pusha
mov
pop
fwait
icebp
inc
bound
sbb
and
xchg
arpl
stc
pop
imul
icebp
adc
mov
ret
lcall
and
mov
xchg
xor
ret
inc
add
xchg
ret
xchg
mov
and
cmpb
fiadds
mov
js
xor
push
mov
pop
arpl
jae
outsb
cmp
mov
inc
orl
xor
cltd
lret
imul
jge
mov
jmp
imul
jle
popa
aas
sahf
mov
mov
xor
in
rcl
cmp
push
inc
in
js
jb
cmp
ret
mov
jno
aam
cmp
adcl
xchg
mov
pop
jmp
pop
decb
lcall
fiaddl
jp
in
mov
lahf
shr
aas
in
jo
xor
bound
ror
adc
inc
or
xor
sbb
sub
dec
jb
mov
es
ret
outsb
mov
adcl
push
push
iret
mov
cld
inc
imul
xor
fdiv
adc
ss
loop
push
push
mov
add
cmp
fadd
loope
cmc
out
pop
xor
daa
lret
dec
jle
sbb
sbb
ret
add
scas
mul
fcmovu
fdiv
stos
shrb
fiaddl
mov
xor
jae
jno
std
xchg
ret
jne
movsl
stc
std
add
stos
and
testl
xor
xor
aad
ljmp
loopne
stos
loopne
loopne
out
subl
add
ret
xor
addb
repnz
je
imull
push
mov
popa
data16
and
dec
xor
cmp
cmpb
jmp
inc
subl
jg
scas
loopne
lea
mov
lret
aam
lcall
mov
or
lret
inc
idivb
pop
and
or
mov
stos
popa
pop
push
icebp
mov
jmp
int
push
cmp
sti
int
dec
cli
mov
rolb
int3
flds
roll
lods
fidivrl
xor
pop
cli
dec
fwait
in
out
mov
enter
cli
movl
jmp
xor
jmp
stos
xor
aad
lret
cli
imul
inc
je
dec
test
lea
imul
and
jns
lret
xchg
mov
adc
xchg
jp
in
insl
sbb
lods
xor
mov
mov
bound
jo
sub
int3
jb
ret
testl
cli
lods
mov
enter
ror
xchg
insl
cltd
arpl
push
ficoml
inc
xor
mov
call
repnz
cmp
cmp
inc
in
pop
xor
scas
cmc
lahf
sti
mov
fsubr
fcmovu
hlt
decl
cmp
repz
xor
jno
leave
mov
mov
lcall
jnp
ljmp
ret
xor
jp
dec
xor
pop
and
add
xchg
jnp
insl
icebp
inc
add
repnz
fidivrl
cmp
in
ror
xchg
mov
push
xchg
jb
ljmp
insb
inc
mov
fadd
stos
enter
aam
dec
dec
mov
push
dec
cli
jae
mov
jnp
iret
cs
mov
sub
jns
loope
push
add
shr
jns
testl
ret
ror
mov
xor
shr
inc
pop
andl
jb
pop
negb
mov
xchg
testb
jg
jg
jg
push
mov
cmp
in
push
mov
std
push
mov
jb
scas
in
stos
push
bound
fmull
adc
xchg
xchg
mov
push
lods
mov
int3
test
sub
mov
sbb
xchg
imul
out
and
pop
or
cmp
mov
dec
call
pop
ret
arpl
loope
xchg
add
roll
test
cmp
lcall
mov
sub
push
xchg
imul
jmp
stos
sti
leave
stc
xchg
add
xor
scas
ljmp
fisubs
roll
cli
mov
stc
jmp
mov
sbb
jns
push
mov
xorb
arpl
sub
push
popf
test
mov
lret
adc
cmp
pop
daa
pushf
stc
dec
cli
pop
cmp
mov
icebp
imul
jge
pop
lcall
xchg
and
jae
sub
dec
inc
cmp
mov
sbb
fs
fistl
pop
mov
ds
and
mov
cli
iret
add
pop
dec
inc
push
popf
mov
mov
cltd
jae
shl
pop
sbb
in
ret
subl
out
pop
mov
or
mov
xchg
fcomi
loope
sarb
aas
inc
out
leave
icebp
mov
repnz
stc
icebp
xor
leave
cltd
rorb
cld
fldl
cli
ret
or
ror
mov
imul
fsubrp
sbb
daa
in
les
jbe
jp
pusha
cld
and
bnd
mov
inc
cltd
mov
aad
cmp
cs
cli
mov
xor
mov
lahf
mov
ljmp
je
cltd
sbbl
mov
loopne
bound
jle
jb
sub
add
dec
jo
shlb
pop
or
xchg
xchg
push
xchg
je
mov
shr
mov
int3
aad
jg
mov
inc
xor
mov
dec
loop
or
jg
mov
cli
cmp
cmp
popa
icebp
stos
loopne
hlt
rolb
popa
sub
mov
lods
dec
pop
sarb
add
mov
mov
imul
hlt
inc
mov
cmp
mov
xor
ret
mov
stos
imul
or
icebp
jns
loopne
leave
out
and
fcmove
in
loope
xchg
stc
pop
dec
jnp
stc
es
rcl
stc
jns
add
mov
mov
loope
xchg
pop
aam
bound
fwait
sub
stos
mov
inc
stc
loop
mov
fcompl
xorb
jns
pop
inc
push
jno
popa
mov
pushf
imul
push
lock
jae
loop
sbb
dec
stc
xchg
sbb
or
xor
jecxz
ret
cld
mov
lods
or
jmp
jno
imul
pop
fwait
mov
inc
lods
mov
jne
adc
and
or
js
lock
xchg
inc
xchg
rorb
xor
scas
arpl
lods
je
mov
fmull
pop
dec
int3
in
bnd
cli
sbb
sbb
cmp
mov
xor
inc
out
lahf
enter
jnp
es
cmp
movsb
xchg
dec
roll
jb
xchg
push
and
test
rcr
imul
mulb
inc
jns
pop
jb
adc
dec
or
stos
inc
dec
jnp
jbe
add
imul
push
cmpsl
sbb
loop
inc
xchg
shl
mov
cmp
in
add
cld
icebp
loop
inc
push
xor
push
jg
lcall
cltd
dec
adc
sub
cmc
jo
stc
in
mov
mov
jno
mov
add
mov
xchg
lret
dec
and
mov
mov
popa
jecxz
lret
mov
fnstcw
and
mov
neg
pop
inc
mov
inc
mov
push
popa
sub
leave
dec
and
jne
dec
pop
push
lahf
jecxz
pop
arpl
arpl
xorl
imul
ret
push
mov
lcall
imul
pop
pop
add
leave
cli
mov
lds
popa
xchg
std
fcom
mov
pop
mov
jns
dec
dec
test
jns
and
sub
mov
pop
aas
std
push
jle
sarl
leave
shl
jnp
fcmovu
jnp
dec
ljmp
mov
mov
adc
mov
icebp
and
sub
push
in
test
clc
mov
jno
test
push
ret
and
mov
mov
in
sbb
int3
cmp
or
fdiv
rcr
jae
enter
cmpsl
inc
or
push
xchg
jnp
cmp
dec
orl
je
add
lret
hlt
cmp
icebp
push
in
inc
jp
mov
int
fildl
lahf
jno
sbb
mov
jmp
popa
loope
dec
ljmp
xchg
add
ljmp
jnp
xchg
jns
push
or
adc
orb
add
subl
shll
xchg
adc
pop
inc
cmpsl
clc
xchg
jp
aam
loope
out
fidivl
hlt
popa
loop
inc
out
mov
aad
sahf
mov
dec
dec
jae
movsb
out
sbb
aam
in
or
add
jno
xchg
stos
xor
aad
jae
imul
arpl
inc
mov
bound
xor
sub
test
in
dec
test
daa
lret
inc
cmpb
cmp
pop
popa
cli
cmp
inc
mov
jmp
in
add
dec
push
mov
ret
jg
orb
jns
push
sbb
loop
pop
xchg
push
ret
addb
fcmovb
inc
std
movsb
jp
xchg
aad
add
mov
inc
inc
mov
push
cmc
sbbl
ret
sbb
jecxz
dec
aas
int3
mov
xchg
test
out
pop
xor
arpl
jae
mov
dec
xchg
cli
mov
inc
add
sti
add
mov
cmc
es
push
sbb
lahf
cs
arpl
popa
xor
cltd
movsl
fcompl
pop
arpl
iret
bound
push
jb
inc
add
cmp
xor
push
mov
add
inc
pop
repnz
pop
xchg
adcl
push
sub
repnz
cwtl
repz
movsl
add
pop
push
stc
rolb
lret
mov
rolb
push
pop
bound
mov
cmp
fcmovnb
stc
add
jg
test
daa
in
xor
mov
ficompl
aad
xchg
add
mov
int
adc
cltd
inc
movsb
mov
es
movsb
pop
jae
inc
adc
jne
jnp
sub
push
mov
xchg
push
inc
cmc
dec
leave
mov
popa
aas
cli
cltd
jae
push
jb
sysexit
punpckldq
pop
mov
std
xchg
cmp
jns
mov
test
and
mov
inc
decb
stos
stc
mov
sbbl
shll
pop
jnp
jge
xor
ret
rcrl
lret
add
arpl
ds
jns
in
xor
mov
adc
shl
push
cmp
jns
mov
jecxz
mov
hlt
scas
shlb
out
dec
dec
ss
fcoml
lcall
cld
mov
imul
addl
push
add
imul
mov
dec
xchg
les
pop
insb
hlt
je
lods
rclb
jno
mov
inc
shrl
arpl
cltd
xchg
clc
inc
in
or
lock
inc
add
mov
rcll
imul
push
lock
mov
mov
mov
int3
jge
pop
out
mov
ljmp
out
xchg
mov
pop
stos
add
jle
mov
lods
imul
out
sbb
sbb
bound
shlb
inc
push
mov
mov
or
inc
rcrl
icebp
and
shl
iret
pop
pushl
stc
popa
cmp
push
hlt
mov
ret
lret
dec
ljmp
and
adc
cltd
jp
jae
loop
xchg
and
ret
dec
imul
add
xor
inc
mov
adc
ljmp
cltd
pop
notb
xchg
adcb
mov
bound
push
test
loope
les
inc
mov
push
and
jecxz
pop
cli
inc
pop
jnp
lahf
std
mov
or
sbbb
insl
bound
push
test
and
and
inc
mov
in
pop
mov
pop
jp
leave
ret
add
push
inc
test
loope
cmp
enter
inc
jno
fidivl
lret
xchg
cli
nop
mov
out
adc
jbe
ljmp
stos
cltd
inc
imul
jno
pop
lods
sub
orl
icebp
jmp
aaa
in
mov
mov
dec
jb
pop
pop
in
adc
clc
insb
push
pop
jg
out
iret
decl
lret
jecxz
fadds
cltd
loopne
je
pushf
pop
mov
inc
mov
fidivl
in
xor
and
mov
clc
out
fiaddl
sbb
imul
sub
in
stc
std
inc
push
inc
mov
pop
xchg
loope
rorl
imul
std
xchg
stos
mov
lret
cmc
dec
push
inc
sub
popa
arpl
sbb
cmp
adc
inc
pop
hlt
gs
in
mov
push
inc
push
add
jnp
in
add
es
in
jp
call
stos
jge
mov
inc
test
xorl
in
cmp
leave
mov
xor
inc
mov
mov
ljmp
dec
xchg
fdivr
icebp
stos
lahf
mov
add
xor
mov
mov
mov
sarl
loop
mov
jb
lret
test
inc
arpl
pop
mov
add
int3
jl
cmp
or
ret
lock
lret
inc
int
int3
mov
jno
dec
adc
push
mov
pop
and
push
mov
add
xchg
jecxz
cmp
jecxz
xchg
stos
jae
jp
mov
mov
fnstcw
hlt
cmp
sub
fimull
mov
stos
sbb
push
push
inc
adcb
jmp
and
test
mov
lock
loop
push
stos
mov
subl
cli
pop
stc
pop
mov
pop
push
inc
sub
mov
push
mov
push
ds
lahf
jmp
or
jle
xorl
mov
bound
jne
mov
sub
xor
stc
fs
adc
mov
push
fadd
jns
in
xorl
stos
push
test
xchg
pop
xor
fsubr
scas
out
mov
in
pop
cmp
or
xrelease
sub
xchg
stos
adc
xor
stos
pop
je
cld
jmp
xor
xchg
fimull
add
movsb
shrl
ja
stc
test
jb
nop
dec
inc
cld
cmp
cmp
ja
inc
ljmp
and
cmpsl
lock
xor
iret
mov
sbb
dec
flds
mov
jae
in
outsb
mov
test
orl
add
rol
mov
repz
pop
cs
mov
mov
out
dec
xchg
jb
aaa
jbe
add
push
xor
xchg
roll
xor
and
stos
mov
xchg
cli
xchg
subl
mov
cmp
ret
jae
inc
cltd
inc
mov
pop
mov
imul
xor
lock
outsb
and
add
fiaddl
mov
not
sti
movsl
sti
cmp
dec
jp
mov
inc
jecxz
lods
popa
jmp
push
cltd
lcall
stos
lods
enter
outsl
xor
lcall
bound
add
push
cmp
imul
pusha
dec
jne
cmp
sub
mov
jo
pop
pop
push
lcall
pop
in
popa
mov
test
rcll
sbb
add
jae
repnz
ja
push
int
add
ret
hlt
leave
loop
dec
cmp
insl
mov
imul
cmp
iret
add
hlt
lret
mov
add
jnp
xor
pop
popa
imul
push
hlt
shrl
xchg
stos
or
mov
or
dec
fsqrt
je
inc
inc
lods
fs
pusha
adc
mov
inc
idivb
push
jnp
sub
mov
mov
xchg
cmp
mov
jae
xorl
sbb
inc
cmp
adcb
call
push
and
fsub
jge
fldcw
lock
adc
mov
add
imul
stos
sahf
inc
cmp
leave
add
mov
dec
xchg
call
cmp
fs
loope
ja
mov
xchg
xor
test
mov
fsubs
inc
xchg
cli
fidivrl
inc
dec
jl
cs
test
in
inc
push
jne
std
ficompl
dec
cli
dec
lret
call
shll
test
inc
ljmp
mov
loop
pusha
sub
jg
ret
and
es
jae
pop
movl
pop
xorb
call
cmp
mov
ficoml
pop
pusha
mov
pop
sarb
ret
mov
xchg
test
sub
leave
dec
mov
jno
in
icebp
mov
data16
and
sbb
and
mov
mov
mov
cmp
push
mov
mov
mov
mov
subb
int3
out
dec
es
push
jmp
push
xchg
jno
push
cmp
loop
fcoms
jmp
xchg
insl
mov
jg
sbbb
push
loopne
imulb
mov
jp
imul
mov
and
popa
stc
xchg
fucomp
mov
cmp
jecxz
xor
arpl
jmp
stos
in
jmp
repz
insb
cltd
dec
cmp
ljmp
dec
add
dec
mov
lret
cltd
rolb
in
loop
jp
clc
mov
subl
fnsave
ret
cmp
subl
icebp
mov
push
xor
fdivrl
dec
imul
xchg
jge
in
leave
gs
es
shl
bnd
inc
arpl
je
insb
mul
xchg
mov
push
mov
bound
iret
int3
ljmp
icebp
stos
mov
dec
loope
pop
stc
ljmp
mov
jno
mov
inc
imul
push
das
lods
stos
imul
cmp
mov
pop
cltd
lret
mov
sbb
stc
stc
jnp
xchg
orl
sti
sub
shrl
lods
mov
add
mov
jmp
repnz
cmpsl
cmp
enter
push
mov
insb
ficompl
fsubrl
leave
imul
cmp
and
or
sbb
leave
fmuls
stos
ljmp
hlt
sbb
mov
leave
arpl
daa
je
imul
mov
cmp
jo
aaa
out
xchg
das
clc
mov
sti
inc
sbb
mov
jae
sar
jecxz
in
pop
jmp
aas
in
mov
push
stc
andl
popa
xorl
pop
mov
inc
test
rorb
mov
inc
dec
stos
sub
addl
inc
pop
out
mov
push
push
test
lret
jecxz
push
icebp
and
adc
test
or
mov
in
cmp
add
mov
cmp
lods
shll
jecxz
or
jmp
mov
sbb
push
adc
mov
mov
jmp
sub
dec
loope
lds
aam
dec
divb
jge
xor
das
sub
mov
test
xchg
sbb
add
pop
push
popa
jns
outsb
inc
mov
rcrl
fcmove
mov
in
cmpl
cmc
jecxz
fwait
push
cltd
push
lret
stos
arpl
stc
jb
bound
fistl
imul
ljmp
cli
arpl
loope
inc
mov
mov
lcall
inc
cmp
shll
jp
out
adc
sar
filds
rcr
push
sbb
lahf
mov
or
insb
shrl
pushf
push
imul
dec
mov
mov
cmp
dec
jmp
xor
mov
stc
arpl
xor
stos
cmp
aas
jge
pop
fs
dec
leave
fisubrl
imul
aas
add
in
dec
cmp
push
jns
mov
xor
sbb
xchg
cli
ret
jb
lcall
and
shrb
xorl
fs
inc
fwait
mov
popf
mov
sbb
dec
adc
xchg
jmp
mov
pop
stc
imul
jns
scas
push
icebp
mov
mov
push
jnp
cmp
ret
orb
lods
popa
cmpl
mov
xor
xor
push
leave
cli
pop
or
ficompl
push
lret
imul
jns
scas
ror
dec
bound
mov
mov
rorl
push
loop
cli
cpuid
cmp
arpl
fistpl
arpl
sbb
pop
jno
roll
jp
mov
cmp
andb
jge
jae
push
pop
imul
inc
ret
and
pop
mov
and
shlb
icebp
mov
jle
cmc
dec
test
sbbb
pop
in
pop
jmp
icebp
dec
jnp
loop
mov
in
out
cltd
jb
fsub
inc
cmp
arpl
ss
subl
xor
movsl
popa
pop
mov
mov
lods
add
add
fcompl
in
fsub
push
out
div
imul
inc
in
dec
jnp
sbb
ja
int
out
fcompl
cltd
push
inc
stc
mov
leave
dec
push
test
xchg
xorb
bound
fs
add
cli
negb
jb
fisubrl
xchg
popa
mov
pop
icebp
push
mov
enter
mov
clc
rol
icebp
flds
xor
popa
jecxz
pop
mov
adc
xor
cmp
mov
and
or
add
ror
cmp
jnp
pop
mov
and
mov
adcb
cltd
add
loope
arpl
cli
sbbb
fbstp
cltd
cmp
pop
stc
pop
jge
dec
mov
mov
mov
lahf
sbb
cmp
wrmsr
ljmp
jmp
add
repnz
inc
in
inc
xchg
xchg
fstps
mov
xchg
mov
add
push
iret
jb
lret
popa
or
ret
push
imull
fs
out
mov
and
stos
test
cli
fdivs
xor
pop
cltd
jp
pop
aas
or
loopne
mov
xor
dec
lret
jp
push
fisubrs
faddl
int
mov
lods
cmc
pop
pop
lods
inc
mov
fs
aas
mov
jnp
cmova
jmp
in
lcall
dec
stc
pushf
bound
shl
sahf
lcall
push
testb
pop
sub
xchg
xor
xchg
scas
mov
fs
cmp
out
insl
out
push
xchg
or
jb
mov
mov
adc
repnz
addl
inc
lret
sbb
aad
cmp
xchg
sub
inc
daa
pop
mov
fcmovu
ss
xchg
mov
lcall
jb
scas
mov
mov
xchg
je
add
lcall
fistpl
pushf
stos
xor
mov
mov
pop
or
mov
add
movsl
add
adc
loop
mov
xor
shll
cltd
inc
and
cmp
mov
push
pop
cltd
jmp
shl
vpminsw
cmp
inc
dec
sbb
lcall
outsl
push
jbe
and
fldl2e
xchg
pushf
cmp
shrb
dec
xor
and
cltd
inc
loope
pop
xor
lret
out
jp
jg
stc
ret
rcrl
dec
mov
mov
iret
xchg
xchg
lock
imul
pop
dec
cld
xor
popa
sub
cmpsb
fimull
imul
leave
xchg
out
jae
cmpsl
loopne
loop
cmp
inc
fs
jo
inc
push
aas
sbb
xlat
stos
jge
inc
out
out
and
jmp
cli
lock
cmp
push
mov
stos
lods
cmp
mov
push
inc
es
sahf
into
add
push
repz
nop
loopne
cmp
popa
mov
das
mov
sub
lock
add
or
hlt
jns
in
jae
not
xlat
sbb
push
stos
cmp
or
add
mov
rolb
imul
fwait
les
jne
jns
fcmove
ljmp
or
icebp
imul
adc
into
mov
imul
stos
xchg
stos
iret
lea
call
mov
jecxz
and
cli
mov
in
aas
mov
repz
arpl
loop
cld
fs
pop
fnstenv
jae
scas
lret
test
stos
icebp
andl
or
je
mov
pop
add
adcb
aad
jnp
jne
add
mov
xor
or
jnp
sub
notl
xor
test
mov
add
hlt
mov
inc
xor
jp
sub
cmpsb
rcrb
lret
xor
sbbl
cs
xchg
cmp
imul
cli
data16
std
nop
jb
jne
pop
xchg
mov
sub
and
stc
repnz
dec
dec
cli
pop
cmpb
scas
jne
dec
cli
and
push
leave
xchg
lcall
xor
std
jno
inc
sarb
subl
sbbl
leave
mov
mov
sbb
mov
in
ret
mov
fidivrs
mov
mov
stos
jns
cmp
addl
ret
popa
ret
icebp
andl
test
roll
mov
jg
sbb
xchg
dec
inc
popa
pusha
jb
lea
cltd
xlat
ret
dec
cmp
xor
and
loop
push
mov
cmp
int
jg
idivl
pop
mov
mov
cmp
xor
or
push
push
in
ljmp
xor
icebp
push
push
xchg
mov
pop
jb
popa
mov
mov
pop
dec
pop
sub
jae
mov
fistpll
ret
mov
and
orl
lahf
ljmp
fldln2
jno
pop
inc
mov
and
daa
icebp
mov
movsl
mov
rcll
jp
in
adc
or
mov
ret
inc
cli
jecxz
fs
add
adc
jb
mov
cltd
inc
stos
fmull
cmpsl
push
pushf
mov
fwait
push
insl
add
shl
rorl
ret
pop
dec
and
rolb
aas
leave
cmp
test
bound
fnstcw
cmc
ret
imul
jg
inc
dec
mov
lods
adcl
repnz
addb
ficomps
jmp
rclb
movsb
lret
adc
jo
incb
mov
xor
int3
ret
loopne
call
add
mov
pop
jge
push
pop
xor
leave
fs
andb
sarl
jmp
popa
test
and
insb
cli
mov
fstpt
test
gs
insb
dec
in
inc
jmp
dec
mov
aas
pop
mov
lret
cmp
loop
je
in
xlat
mov
mulb
mov
cmp
jnp
cmc
jnp
adc
jno
jno
sub
mov
jg
or
pop
sbb
fxch
add
cmp
mov
sub
test
inc
movsb
fwait
subl
cli
dec
xor
cmp
mov
std
cmp
jns
and
shll
sbb
dec
adc
lcall
mov
mov
popa
rorb
jmp
push
push
mov
popf
arpl
in
push
dec
jnp
lock
stc
out
fisubs
mov
es
pop
jp
jnp
dec
out
mov
in
and
push
inc
pop
or
mov
lret
jae,pt
add
fisubrl
xchg
sbb
cltd
push
out
and
out
in
mov
sarl
jp
ljmp
xchg
jae
pop
in
xor
add
cmp
aas
push
push
fiaddl
call
ret
movsl
test
mov
outsl
daa
mov
pusha
adc
lcall
mov
inc
enter
call
jns
sub
add
mov
stc
movsl
icebp
bound
ret
jge
into
sub
add
push
mov
ljmp
ret
negb
arpl
aad
jbe
popa
and
or
jno
jp
lods
lret
mov
pop
and
cmp
and
and
mov
andl
stos
add
mov
push
shrl
lret
dec
shll
jg
dec
inc
add
pusha
sahf
shlb
mov
enter
dec
lods
jo
fs
stos
ret
loope
and
xor
mov
pop
mov
mov
fsubs
rcr
sbb
pop
inc
call
rol
ret
cmp
inc
adc
sbb
rcr
loop
jmp
cmp
inc
lahf
mov
jge
bound
in
shr
jp
ljmp
ret
adc
mov
cmp
mov
icebp
jns
inc
push
sbbl
inc
leave
int
lods
xor
lret
xor
or
sti
shlb
andb
stc
jp
pop
xor
lock
cli
jnp
jp
sysenter
bound
dec
adc
jns
mov
push
lock
repnz
jle
add
mov
adc
cmc
xor
sub
daa
dec
xor
aaa
rcll
pushf
arpl
cmpl
aas
or
imul
cltd
xchg
push
mov
mov
fptan
mov
dec
out
add
sub
jnp
loop
call
mulb
mov
leave
add
fnstenv
sbb
push
jnp
cmp
mov
push
repnz
insb
inc
dec
xor
adc
and
dec
arpl
or
mov
jns
cmp
push
scas
xor
xchg
movsb
or
or
rol
inc
stos
mov
jecxz
jae
mov
sbb
add
out
xor
and
cmp
icebp
aaa
scas
mov
mov
fidivrl
arpl
mov
ror
cltd
loop
dec
loope
sub
out
icebp
outsb
stc
cld
and
xlat
mov
stos
loopne
pop
mov
rorl
jo
jnp
popa
fwait
out
push
stc
movsb
sar
pop
pop
push
popa
loope
fnstcw
or
nop
xor
loop
push
cli
jnp
jge
fimull
jnp
mov
das
mov
mov
xchg
pop
jnp
mov
cli
imul
push
sbb
test
rolb
imul
cli
push
mov
shrb
mov
aas
push
loop
mov
or
aas
adc
ret
scas
stos
cmc
aam
jb
jae
dec
test
dec
cli
pop
loop
jp
sub
xchg
inc
sbb
stos
loope
popa
mov
pop
popa
cmp
jns
cmc
add
bound
fs
xchg
inc
inc
inc
sbb
mov
pop
jns
jno
mov
dec
pop
cltd
dec
mov
mov
repnz
push
loope
mov
xor
ficompl
fsubl
xchg
sub
mov
mov
or
push
xor
xlat
repnz
jle
jae
mov
cld
out
imul
repnz
or
repz
loope
mov
push
shll
inc
ljmp
popa
mov
xchg
lahf
mov
loope
or
xchg
or
orl
ja
push
jp
ror
stos
loop
xchg
xchg
push
imul
mov
pop
or
and
push
xchg
add
jnp
push
mov
popa
leave
mov
fiaddl
dec
mov
lcall
xchg
push
test
in
fdecstp
inc
dec
icebp
mov
dec
cld
lret
ljmp
jmp
fisubrl
arpl
pop
or
mov
jne
or
mov
sub
xchg
push
pusha
dec
xchg
push
shll
dec
mov
mul
arpl
notl
jne
xchg
pop
xchg
inc
xorl
mov
lahf
cmc
ljmp
dec
adc
xchg
push
pop
mov
mov
sarl
fwait
or
popf
mov
xorb
fcmovbe
inc
mov
aam
mov
mov
inc
fdivl
mov
shll
lret
adc
ljmp
orl
mov
cli
push
aam
adc
cmpsb
pop
mov
fcoml
arpl
subb
in
stc
mov
inc
rol
or
jnp
pop
push
lea
fnstcw
cli
dec
sub
mov
mov
and
adc
mov
out
or
sub
push
adc
pop
inc
cmp
test
dec
add
or
bnd
xchg
icebp
imul
and
loope
adc
arpl
mov
divl
or
jecxz
mov
fcomps
mov
jae
jb
outsb
je
lods
mov
int
xor
xchg
icebp
jae
add
jb
decl
jns
loop
mov
icebp
loop
lcall
add
sbbl
jns
pop
repnz
ljmp
stos
stos
test
shll
int3
incb
and
xchg
mov
fldcw
stc
fimull
jmp
rorb
xor
lret
adc
and
push
arpl
mull
inc
lods
lcall
mov
dec
mov
or
cwtl
mov
pop
cmp
dec
jno
test
jne
orl
inc
xor
xor
jne
leave
icebp
sub
notl
shll
dec
pop
jno
mov
and
repnz
inc
mov
mov
arpl
in
iret
and
pop
jae
xorl
rorb
jmp
jmp
jnp
lods
dec
mov
cmp
fmul
arpl
add
jp
and
sbb
push
inc
mov
addl
arpl
adc
push
inc
insb
cltd
lods
scas
cmp
rcrl
dec
xchg
fstp
imul
pop
jge
or
mov
fdivrs
arpl
lret
daa
xchg
push
push
jp
sahf
jae
in
sbb
pop
out
cs
cltd
dec
cmc
jns
stc
xchg
xor
pop
cmp
jp
pop
icebp
mov
xlat
testb
inc
enter
push
jb
mov
add
mov
mov
cltd
adcl
xlat
and
push
movsl
mov
int
adc
andb
mov
arpl
gs
jp
test
sbb
adcl
mov
int3
xchg
xor
stc
test
sbb
dec
lcall
jl
xchg
jge
insl
in
sbb
pmaddwd
scas
fnstcw
mov
nop
outsb
sbb
roll
ret
pop
xor
mov
je
je
hlt
dec
cltd
mov
loope
fstl
dec
in
inc
inc
jns
inc
jnp
xchg
fdivp
lock
shll
mov
jae
mov
out
inc
xchg
add
imul
addr16
faddl
mov
mov
stc
data16
ret
jno
cmp
shll
loope
dec
and
mov
loop
push
mov
arpl
jne
stc
loop,pt
fidivrs
enter
cmp
jp
icebp
push
cmp
lods
mov
in
fstpt
lcall
jno
out
ret
pop
and
enter
sbb
std
push
push
xchg
push
loope
jp
lret
pop
xchg
add
jns
ret
jns
jb
dec
pusha
xorb
addr16
mov
popf
xchg
ja
add
inc
shlb
push
imul
cmp
inc
push
stc
xlat
or
jno
stos
fdivrs
sahf
fmuls
lcall
test
call
lock
jmp
sbbb
imul
sahf
cmp
loope
cmpsb
push
mov
push
scas
test
adc
lods
repnz
pop
xchg
push
std
xchg
dec
pop
mov
inc
push
jmp
das
dec
in
scas
xchg
arpl
out
aas
adc
repnz
test
mov
push
xlat
add
lcall
pop
mov
leave
add
icebp
push
mov
test
lea
dec
popa
shlb
clc
inc
adcb
jg
push
push
fldenv
loop
ljmp
pop
lret
iret
sub
add
mov
dec
lahf
add
fwait
clc
pop
jnp
jae
in
inc
or
fcmovnb
leave
xchg
pop
test
mov
cmp
pop
shll
pop
mov
sbb
cmovp
or
cmp
movsl
sub
test
jns
and
mov
stc
js
mov
mov
fisubl
and
mov
jns
mov
ret
aam
subl
xchg
cmp
std
adc
inc
cmp
pop
icebp
pop
gs
inc
pop
jp
nop
xor
adc
mov
fidivl
inc
push
stc
cltd
test
mov
xchg
lea
jns
test
cmpsl
out
mov
cmp
add
stos
dec
loopne
test
loopne
out
mov
outsl
inc
sbb
or
jae
jmp
imul
or
push
je
mov
test
jno
inc
lods
stos
xchg
rcl
orl
vpsrlw
icebp
pop
in
xor
jg
dec
adcl
leave
mov
cmpl
arpl
cmp
out
rorl
cld
xchg
push
mov
adc
inc
mov
imul
cltd
jnp
cmp
incl
xchg
mov
imul
pusha
mov
loopne
lock
cmp
lcall
loop
stc
or
lret
xchg
cmp
add
shlb
leave
mov
pop
xor
xchg
cs
popa
add
icebp
adc
fsubs
ljmp
andl
ret
je
push
lods
push
pop
fcmovbe
rcrl
xor
stos
cmp
jge
mov
push
cmpsl
int3
inc
mov
in
mov
dec
adc
cmp
mov
imul
andl
sbbb
ljmp
stos
cmp
test
mov
add
jae
lcall
loope
aaa
in
loop
inc
ret
xchg
push
jmp
pop
mov
ret
inc
hlt
mov
shl
and
bound
mov
xorb
sar
fisubl
jle
mov
stos
xor
hlt
test
nop
and
mov
cmp
push
loopne
loope
ret
popa
bound
mov
mov
mov
sub
stos
jnp
and
dec
lret
shlb
cmc
into
popa
add
test
xchg
test
cmp
mov
fmuls
cmp
mov
pop
jnp
jmp
mov
loope
mov
sbb
sti
mov
div
add
mov
inc
mov
ljmp
aad
sbb
mov
xchg
or
push
pop
test
add
sub
stos
loop
jg
rcl
test
dec
icebp
push
cmp
ret
cwtl
xchg
lcall
and
insb
sbbl
or
icebp
jno
lods
jp
pop
sbb
push
mov
adc
std
sbb
cmp
xor
or
adc
mov
mov
scas
fdecstp
push
fisubrl
dec
cmc
ret
enter
clc
add
rcl
sahf
or
adc
bound
mov
fdivrs
inc
mov
imul
xor
jae
mov
mov
popa
inc
jae
loopne
out
sbb
jnp,pn
mov
jns
out
mov
outsl
xlat
xchg
jb
es
xchg
jmp
cltd
adc
pop
cmp
adc
push
loope
in
mov
jae
fbstp
mov
add
roll
repnz
fwait
subb
int3
in
stos
mov
mov
jb
or
ret
or
jmp
xor
shll
cmp
sbb
arpl
add
shll
mov
sub
push
int3
lcall
sub
mov
adc
xchg
cmp
sbb
xchg
pop
xor
mov
xor
jmp
scas
clc
dec
mov
dec
adcl
insb
cmp
ret
shr
loop
stc
mov
call
push
bound
adc
in
mov
mov
jnp
inc
mov
ljmp
stos
cli
xor
or
push
out
lret
loopne
out
xchg
call
dec
mov
insb
xchg
jge
mov
popa
mov
sbb
inc
orl
push
cld
cli
repnz
mov
fiaddl
cli
jne
adc
inc
or
push
test
mov
ret
xchg
jmp
pop
jbe
repnz
and
pop
inc
mov
test
jmp
jmp
mov
orl
mov
push
inc
pop
xchg
push
pop
test
bswap
pop
cltd
push
push
out
add
jp
jns
mov
mov
dec
xchg
mov
inc
xchg
in
mov
clc
mov
jb
mov
sarb
pop
int3
cltd
mov
popa
or
addb
dec
pop
ss
jp
rorb
push
dec
push
pop
shll
xchg
jno
mov
sbb
in
fcmovu
add
gs
dec
mov
xchg
mov
jmp
push
inc
lcall
xor
adc
ljmp
imul
cli
rclb
xor
or
inc
cltd
mov
stos
and
add
call
cmp
inc
dec
add
mov
scas
push
add
inc
imul
pop
add
stc
aas
dec
stos
mov
xor
incb
popa
mov
xor
or
dec
dec
or
sahf
add
mov
addr16
mov
aas
push
jge
mov
ficoml
icebp
pop
imul
and
cmp
push
inc
push
mov
test
add
add
mov
adc
dec
cmp
mov
cli
jnp
lods
push
stc
arpl
sub
cmp
mov
mov
pushl
lcall
rclb
je
lods
aam
in
stos
cs
cli
cmp
stos
flds
push
imul
xchg
dec
addl
cli
or
bound
sbb
sbb
pop
cmp
sbbl
cmp
leave
fbstp
aad
loop
cmp
ret
push
arpl
mov
cmp
mov
lea
subb
cltd
sbb
popa
mov
push
cmp
mov
pop
cmp
jecxz
push
mov
leave
bound
fbstp
bound
lret
fsts
inc
in
dec
jge
mov
xor
or
jnp
hlt
mov
cli
sar
shl
inc
xchg
inc
push
sarl
bound
adc
fisubl
icebp
mov
int3
mov
pop
adcb
jo
imul
cmp
and
aas
sub
lods
pop
cli
mov
movsb
sub
inc
xchg
jg
pop
neg
rol
sar
les
pop
cmp
inc
aam
jnp
insl
jecxz
xor
jns
fistl
mov
mov
lods
cmp
xorl
shrb
fisubrl
jp
in
imul
jnp
push
add
cli
mov
ljmp
dec
out
jae
ja
filds
pop
cltd
jns
push
cmp
loope
in
shrb
pop
clc
cli
stos
mov
aad
imul
lock
adc
or
sub
or
cmp
std
ret
lcall
mov
fidivl
mov
stos
loope
jnp
stc
push
repnz
daa
ret
xor
cmp
or
roll
lret
ljmp
insl
pop
ljmp
subl
loopne
jmp
and
subl
push
daa
lods
popa
push
pushf
and
lahf
jo
jno
loop
movsl
adcb
pop
sbbb
ret
jecxz
jge
arpl
fdivrs
imul
addb
adc
ja
fisubl
outsl
movsl
xchg
xchg
enter
adcb
sbb
push
repnz
stos
jb
cmc
and
roll
jnp
stc
inc
adc
shlb
pop
mov
fcomi
mov
add
imul
inc
rcll
rorb
fadds
enter
lock
jle
je
push
and
or
jae
jb
fwait
lret
cli
jle
ja
rcll
bound
repnz
jg
jno
jg
inc
enter
xor
add
fs
inc
xor
lcall
push
stos
mov
stos
cmc
cmp
shrb
add
loope
inc
xor
cmp
xchg
mov
push
or
xchg
jge
adc
jmp
ret
mov
insl
mov
fwait
icebp
test
sbb
pop
fprem1
inc
repnz
xor
jl
js
stc
mov
rcll
cmp
inc
je
adcl
jmp
push
mov
xor
in
jne
dec
xor
out
insl
push
inc
mov
lret
test
cmp
fildl
mov
xchg
mov
xor
jno
lret
mov
push
std
cltd
inc
ret
lds
arpl
cmc
out
mov
sbb
icebp
ret
mov
call
push
stc
insl
cmpl
cmp
inc
xchg
leave
cli
sub
xchg
jb
jg
adc
cmp
push
bound
insl
loop
push
divl
mov
lcall
dec
andb
mov
pop
xorl
jmp
cmpsb
pop
mov
icebp
mov
sbb
pop
loopne
pop
lock
jmp
and
mov
xchg
jg
jp
jmp
mov
les
cmp
or
test
sbb
mov
mov
and
mov
mov
out
push
cli
in
int
pop
out
std
mov
add
or
xchg
add
inc
stos
insb
imul
imul
inc
sbb
inc
cs
repnz
push
subb
mov
loope
stos
sahf
mov
stos
mov
mov
push
ss
adcl
aam
mov
in
cmp
icebp
repnz
pop
add
leave
push
jns
fldcw
xchg
sahf
push
jae
dec
inc
rcrb
add
xchg
bound
pushf
xchg
jno
add
or
mov
call
sub
mov
adc
push
cltd
add
push
inc
mov
inc
xchg
repnz
in
ret
cli
loope
ret
mov
pop
stc
or
data16
enter
mov
jno
gs
cmpl
jno
mov
outsb
mov
xor
adc
cli
insb
and
lods
fldenv
cmp
in
dec
add
inc
mov
and
adc
ss
scas
cmp
sbb
andb
notl
push
pop
xchg
iret
jge
or
mov
jge
mov
dec
dec
mov
enter
pop
lods
mov
dec
fcmovnu
xchg
jmp
jb
insl
orl
sub
mov
loopne
add
pop
inc
push
outsb
fnsave
xchg
in
mov
cli
or
sub
mov
sbb
mov
loop
sbb
decl
popf
push
dec
inc
or
mov
jne
add
fiaddl
orb
cmp
icebp
addl
inc
pop
inc
repnz
inc
dec
insb
popa
cltd
fdivl
inc
fsubs
xorb
addb
mov
stos
dec
mov
stc
xor
cli
stc
ret
cmp
xchg
dec
lahf
divb
lret
andb
push
test
lret
cltd
scas
dec
add
jb
mov
leave
cmpb
insb
dec
fs
or
rorl
loop
sbb
and
lock
push
sub
fmul
xor
arpl
in
rcll
jnp
mov
jmp
xchg
jecxz
stc
mov
sub
in
dec
stos
lods
lods
mov
push
lds
and
stos
ja
aad
insl
shll
add
repnz
test
xchg
mov
and
cwtl
inc
dec
jp
add
cmp
mov
mov
stos
dec
loop
add
dec
xchg
ret
pop
inc
subb
push
cltd
in
jnp
ljmp
mov
dec
ret
hlt
enter
bound
inc
ftst
mov
lods
xchg
push
mov
mov
lcall
notl
std
push
subl
adc
sbb
icebp
ljmp
mov
mov
dec
xor
pop
xchg
dec
push
xor
mov
arpl
sti
fldl
rolb
insb
mov
ret
inc
mov
cs
push
and
push
in
push
mov
xchg
jnp
stc
jmp
decl
icebp
mov
hlt
adcb
popa
or
mov
and
inc
test
rorb
cmovs
fmuls
inc
pop
jecxz
mov
popa
test
pop
sbb
lcall
jle
stos
mov
xor
pop
mov
cwtl
xor
pop
push
lock
cli
shl
imulb
push
arpl
les
mov
lods
jnp
xor
pop
clc
inc
inc
je
mov
lods
push
shrl
jle
push
imul
out
dec
cltd
arpl
ficoml
xchg
pop
push
or
lret
shll
shld
hlt
stos
pop
mov
push
hlt
mov
jmp
aas
aas
popa
sub
xchg
pop
mov
jbe
sub
enter
jb
imul
dec
in
arpl
inc
dec
lcall
push
leave
cmp
aas
ljmp
xchg
popa
jnp
lret
add
bound
and
xor
sahf
ret
xorl
loopne
insb
popf
fs
push
cmp
je
or
cmp
cmp
lret
or
aad
push
popa
loope
or
mov
push
jp
push
sarb
push
leave
inc
jg
inc
repz
das
fs
ljmp
inc
fsubrl
push
mov
and
fsubrl
fdivl
cmp
xor
dec
not
popa
jge
stc
add
xchg
rolb
jl
enter
std
ljmp
mov
je
mov
mov
xchg
aaa
lret
imul
push
jo
jnp
insl
dec
sbb
fisubl
mov
dec
stos
shlb
fldcw
repnz
or
xchg
push
ret
ret
and
adc
push
fisubrl
int3
ljmp
xchg
cwtl
std
scas
loope
mov
mov
xor
push
mov
js
arpl
stos
jns
sbb
adc
and
jp
mov
lret
add
subb
sbb
lret
repnz
into
in
cli
fldcw
xor
rcrl
xchg
in
xchg
push
cmp
cmove
loop
sahf
jecxz
fdiv
leave
stos
nop
pop
cmp
cmp
pop
xchg
ret
push
stos
xor
adc
sub
cld
mov
fdivrl
pop
mov
popa
das
sub
ljmp
outsb
ljmp
and
test
add
rcr
cld
stos
push
jnp
cmp
add
insb
leave
imul
jb
test
lds
cmovae
mov
xor
insl
mov
jne
mov
jns
ficompl
leave
fs
jmp
and
mov
dec
int3
sub
es
or
mov
push
movsb
arpl
add
xor
xchg
mov
ss
jecxz
sbb
pop
xorb
in
ljmp
imulb
mov
push
arpl
jns
jecxz
std
lret
shlb
and
inc
xor
and
or
push
xor
mov
mov
xchg
stos
dec
jnp
push
push
out
cmp
popa
jmp
or
bound
mov
mov
cmc
in
fs
xchg
mov
arpl
mov
out
inc
stos
clc
push
ljmp
push
imul
pop
test
xor
mov
xchg
inc
push
mov
test
and
sbb
sarl
add
aas
je
inc
cltd
sbb
jp
cmp
lock
cmpsb
je
idivb
mov
inc
loop
jg
push
das
pop
adc
or
stos
add
dec
ljmp
xor
lods
push
test
pop
icebp
daa
rorl
aas
std
jne
popf
fldenv
lods
stc
push
cmp
sbb
pop
call
jle
ret
jg
mov
push
mov
jnp
push
rcll
test
pop
int3
icebp
test
push
fadds
cmp
or
cli
or
sub
cmp
shlb
fidivrs
dec
icebp
jns
adc
pop
adc
pop
push
jl
not
inc
arpl
ss
sbb
lcall
jo
sub
ret
pop
sbb
stos
cli
mov
jg
cmp
popa
cwtl
enter
mov
mov
and
pop
mov
imul
sahf
mov
bound
inc
outsb
jmp
or
sub
xchg
stc
in
add
in
cmp
adc
in
push
push
and
das
push
outsl
inc
lds
lcall
ljmp
nop
jecxz
jmp
mov
xor
xor
fisubrs
mov
jno
jg
jp
cmp
inc
cmpsb
sbb
and
inc
je
lahf
or
fs
ret
mov
stos
sbb
jmp
mov
repnz
icebp
mov
push
imul
xor
in
ljmp
clc
pop
mov
insl
out
xchg
ret
pop
jg
sbb
jnp
inc
sub
adc
pop
call
enter
jae
and
and
shll
pop
lahf
out
xor
out
aas
out
pop
adc
mov
cli
sbb
fldl
ficoml
jp
insb
pop
testl
cmp
add
mov
pop
jle
enter
mov
lret
stos
jae
shll
aad
push
lods
negb
pop
mov
scas
insb
lds
pextrw
popa
bound
cmp
dec
dec
inc
stos
stc
ds
mov
jp
cltd
inc
je
lret
loope
mov
imul
adc
lods
dec
jp
jl
xor
add
jae
xor
fnstenv
repz
pop
rcrb
bound
movb
jp
pop
stc
je
or
clc
into
cltd
loop
cli
dec
out
jbe
sub
mov
and
mov
stos
or
push
xchg
mov
xchg
sbb
rcll
add
mov
add
fs
inc
push
mov
je
cmp
xchg
mov
xchg
inc
dec
mov
mov
mov
cmpsl
lods
xchg
pop
fsubr
cmp
push
sarl
sbb
mov
xor
aam
orl
mov
push
and
push
lock
rcrb
and
pop
int3
push
inc
stc
loop
mov
pop
clc
inc
sbbl
add
cmp
jge
dec
mov
push
aas
cmp
in
jb
xor
xorb
cmp
mov
or
clc
mov
stc
icebp
add
cmp
push
pop
fmuls
or
repnz
clc
jecxz
adc
push
adc
jno
inc
push
divb
ror
imul
mov
arpl
in
imulb
lahf
sbbb
push
jb
mov
inc
fidivrl
andl
inc
mov
inc
notl
sbb
xchg
popa
stos
in
jmp
push
sbb
clc
cmp
icebp
je
cltd
addl
fcmovb
popa
mov
arpl
jnp
cmp
enter
bound
cmp
mov
xor
pop
clc
daa
dec
fyl2x
jns
push
ret
add
mov
push
inc
adc
popa
in
jp
scas
ret
neg
mov
cli
sbb
xchg
sbb
in
ret
add
negb
dec
jb
stos
add
bnd
xor
pop
inc
xchg
jg
ret
inc
repz
xchg
mov
pop
leave
push
lods
mov
dec
repnz
jo
imul
out
sub
out
cmp
xchg
add
ret
sub
in
pop
mov
sbb
mov
pop
inc
stos
jo
stc
xchg
push
cmp
cmp
mov
or
or
xchg
inc
int
xchg
std
loop
addl
cmpb
outsb
testb
stos
jnp
cltd
in
push
lret
mov
push
stc
int3
test
xchg
jge
aam
mov
lods
jae
mov
or
test
testb
fisttpl
gs
and
and
xorb
sbb
js
jge
imul
popa
aas
pushf
cmp
and
lret
icebp
cmp
or
int
add
xorb
fnstsw
imul
repz
js
pop
loope
or
lcall
ljmp
mov
outsb
inc
and
roll
and
stos
or
mov
pop
imul
jnp
xchg
cmp
cmp
hlt
mov
test
lods
and
insb
mov
addl
mov
push
push
loopne
fmuls
out
push
mov
fisubrs
mov
sub
jb
push
and
inc
cld
inc
icebp
mov
ljmp
mov
mov
or
push
dec
in
adc
stos
pop
lock
xchg
add
dec
icebp
jge
sub
subb
nop
roll
adc
adcl
loopne
pop
push
xor
push
cli
jmp
popa
inc
cld
mov
or
dec
addb
pop
inc
cmp
sub
clc
pop
stc
and
ret
stos
fcmovnu
pop
xchg
ja
adcl
mov
movsb
mov
lret
adc
dec
xorb
xor
xchg
or
stc
sub
outsb
pop
push
mov
or
loop
inc
jno
lcall
adc
xor
sahf
and
adc
loop
jo
jb
sbb
cmp
loopne
shl
xchg
jle
pop
mov
jns
pop
cld
xor
icebp
push
repnz
xor
enter
mov
xor
mov
push
mov
ror
out
push
out
stos
cmc
push
add
imul
sbb
mov
xchg
mov
fwait
xchg
loop
xlat
dec
pop
mov
inc
dec
cmp
fldenv
negb
mov
or
cld
pop
cmp
fsubrp
leave
or
dec
xor
repz
push
mov
jnp
out
imul
repnz
add
out
test
xchg
adc
push
lods
iret
imul
aad
mov
imul
addr16
clc
cmp
mov
mov
scas
out
dec
aad
lret
and
lods
rcrb
je
lods
aas
jno
xor
ja
leave
pop
rorb
andl
test
arpl
dec
fdivr
loop
push
loope
scas
negb
insl
stc
push
push
ja
ret
inc
andb
dec
jne
sti
mov
int3
test
jns
and
dec
xorb
jp
inc
or
mov
je
icebp
not
mov
mov
pop
lcall
inc
int3
jp
mov
jnp
xchg
test
imul
xchg
adc
dec
mov
decl
scas
and
ret
rcl
push
hlt
pop
push
inc
pop
icebp
stos
in
mov
and
mov
and
gs
mov
sbbl
sbb
xor
gs
scas
cld
mov
xor
mov
xor
ficompl
adc
adc
mov
sub
rol
jb
and
dec
mov
ljmp
cmp
arpl
xchg
cmpsl
rcrl
lcall
bound
shll
leave
mov
cli
outsb
mov
xchg
cltd
rcll
xor
sbb
arpl
ficoms
pop
jno
add
inc
outsl
ret
sbb
lret
std
or
adc
push
mov
out
mov
and
andl
jmp
inc
jge
inc
mov
sarl
stos
cmp
push
push
sti
sbb
cmp
out
push
or
mov
dec
popa
xor
push
mov
ret
mov
xchg
mov
insb
mov
fcmovu
andl
pop
popa
pop
push
jg
pop
inc
iret
lock
ds
faddp
out
icebp
mov
cmp
cltd
inc
jg
rcr
arpl
mov
mov
xchg
shlb
jae
xchg
lcall
popa
pop
icebp
mov
in
pop
hlt
out
pop
mov
cli
cmpsl
mov
enter
cmp
inc
lahf
cltd
lret
mov
xor
dec
ffree
idiv
stos
inc
loop
cmpb
jnp
add
push
fidivl
scas
shr
cmp
xor
mov
lahf
in
stos
sub
insb
mov
xchg
jne
add
xadd
aas
cmp
push
add
lds
mov
xor
lock
jg
mov
jb
dec
in
mov
scas
sbbl
mov
leave
lea
mov
sbb
leave
adc
mov
push
aam
out
fwait
xorb
mov
inc
ljmp
ja
push
push
outsb
stos
xchg
mov
mov
dec
rcr
push
mov
jp
pop
xor
mov
test
push
jg
jecxz
push
insb
bound
push
jg
insb
cmp
inc
sbb
jo
int3
push
jb
andl
fs
ret
lret
stos
das
test
add
push
insb
dec
pop
sub
ret
sbb
jne
mov
ret
cmp
imul
inc
mov
mov
sahf
shlb
orl
ja
jnp
sti
and
push
or
mov
mov
mov
jno
jns
mov
lods
dec
bnd
hlt
aas
rol
in
jbe
lcall
fnstcw
fidivrl
push
cltd
cmpb
mov
repz
jns
lock
cmp
bnd
arpl
jno
inc
mov
jg
mov
pop
or
sti
cli
jmp
aas
enter
mov
push
mov
adc
lea
fmuls
mov
pop
xor
jns
or
mov
adc
out
arpl
popa
inc
outsb
loop
rcrl
jo
pop
cmpb
jae
lret
xchg
push
adc
cmp
inc
loopne
fldcw
insb
imul
loop
lcall
cwtl
insb
xor
dec
outsl
lret
inc
pop
add
mov
xchg
jae
and
aad
pop
jg
movsl
imul
cmp
push
hlt
xchg
push
push
xlat
lock
mov
dec
or
jle
pop
xor
arpl
push
das
ja
sbb
lret
les
jg
jecxz
in
int3
imul
jns
stos
lea
decl
xor
xchg
mov
mov
mov
ret
inc
sbb
push
xchg
lods
xor
mov
mov
mov
mov
mov
dec
mov
push
cmp
push
jno
mov
push
loope
push
outsb
ficompl
xor
dec
nop
je
imul
arpl
push
dec
inc
or
std
push
ljmp
xchg
cmpsl
sub
fnstenv
in
push
add
dec
inc
movsb
psrlw
dec
adc
pusha
loope
pop
mov
jge
jnp
and
imul
pop
dec
fsubrl
bound
sub
test
lea
pop
imul
not
push
lcall
imul
lahf
leave
xchg
or
mov
push
pop
in
shrl
mov
loope
popa
ret
adc
ret
jmp
mov
push
cmp
aas
aam
sar
pop
add
xchg
bound
jmp
push
mov
jnp
daa
adc
imul
mov
jnp
stc
mov
mov
jmp
ret
adc
add
lock
dec
dec
add
push
xor
mov
insl
pop
inc
imul
dec
les
mov
mov
xchg
pop
mulb
loope
nop
pop
xchg
lods
ja
and
pop
jnp
scas
sbb
xor
mov
mov
jb
xchg
sbb
imul
xor
aas
aad
add
stos
jae
cmp
jns
mov
inc
popa
rcll
xlat
cmp
lret
ret
mov
dec
or
xchg
sahf
sbb
jno
loope
sarb
in
mov
popa
lds
inc
mov
shl
sbb
loope
popf
ret
hlt
pop
mov
jg
jae
lcall
mov
ss
leave
dec
mov
xchg
aam
inc
xchg
sub
in
sbb
pop
loopne
add
pop
inc
aas
ret
mov
mov
je
add
fptan
xor
arpl
xchg
push
sbb
rolb
repz
xor
mov
enter
loopne
lcall
jb
xlat
xchg
xor
fcoms
add
xchg
bound
testb
orl
mov
shr
adc
pop
inc
push
dec
lcall
jns
inc
pop
jecxz
mov
loope
les
fs
fwait
mov
ja
rcll
sarl
mov
cld
test
mov
mov
out
lea
add
dec
adcl
xchg
mov
imul
clc
mov
mov
sub
lock
xor
pop
notb
mov
sub
jnp
inc
mov
mov
cmpsl
mov
jns
faddl
sub
jmp
pop
call
add
stc
mov
insb
ror
insb
jle
xor
repnz
adcl
ret
insb
loop
xchg
jo
push
cld
ret
jnp
dec
mov
dec
flds
cmp
sbb
mov
mov
inc
pop
push
ljmp
lret
call
xchg
cmc
and
rcr
pop
mov
xor
cld
scas
xchg
cli
inc
cmpsb
sbb
lret
loop
dec
dec
cmpl
push
fdiv
ljmp
push
stc
shrb
dec
xchg
cmp
cmp
lock
int3
mov
mov
jae
lods
ljmp
mov
mov
clc
inc
xchg
inc
xor
sti
out
jge
mov
sar
ljmp
mov
push
test
mov
pop
sbb
movsb
cmp
outsb
push
mov
lret
loope
add
arpl
jmp
mov
mov
repnz
addl
addb
push
jg
push
and
lods
popa
pop
stos
fistpl
mov
push
mov
push
aas
push
insb
dec
imul
fnstcw
push
push
jb
jne
mov
out
clc
mov
pop
ret
loop
icebp
mov
loope
sar
and
pop
cld
ljmp
xor
icebp
sbbb
mov
jno
scas
outsb
icebp
mov
or
dec
sarl
test
dec
push
ljmp
mov
xchg
lods
inc
rcl
add
jae
cltd
xorb
clc
mov
out
popf
dec
les
jp
mov
ficoms
add
lret
jns
fisubrl
dec
icebp
loop
sbb
leave
push
jno
loopne
clc
and
loop
pop
xor
mov
rorl
lock
imul
xchg
shrb
mov
jnp
push
xchg
pop
jecxz
cmp
dec
repnz
negb
mov
jnp
and
cmp
ret
insb
rorb
ret
fwait
imul
push
dec
xor
out
push
cmp
loop
imul
xor
pop
dec
jns
ret
ret
sbbb
cmpb
and
rorl
push
je
popa
or
push
mov
dec
jne
icebp
jl
outsb
cmpl
inc
ljmp
jge
inc
cmpsl
and
xchg
mov
jb
aam
stos
dec
neg
xor
fldcw
lret
repnz
push
push
xor
sbb
add
mov
andl
dec
mov
lods
idivb
mov
mov
jnp
mov
and
sub
roll
and
inc
lock
push
insb
nop
arpl
xor
add
push
dec
mov
cmp
jno
add
insl
popa
pop
add
dec
pop
rorl
stos
stos
popa
mov
fsin
leave
pop
out
mov
nop
hlt
dec
cli
fistpl
mov
jp
sub
inc
mov
shrb
ret
hlt
jae
cmp
xchg
mov
ljmp
lcall
mov
adc
xchg
inc
out
or
push
mov
mov
out
out
xchg
test
pop
in
inc
loopne
mov
and
jl
dec
sbbl
sub
sarl
mov
loop
push
and
xor
mov
push
mov
sbb
enter
mov
cmpl
dec
fidivrl
or
mov
imul
mov
repnz
mov
and
pop
dec
cli
xlat
adc
jg
int
jg
fldcw
jae
sti
lcall
lods
ret
and
fdivs
in
add
aas
andb
xchg
adc
lret
xlat
cmp
xchg
call
add
xor
or
ds
dec
mov
sub
jae
mov
popf
push
pop
dec
in
mov
mov
push
and
lods
sub
sti
dec
es
xchg
lods
cmp
dec
popa
loopne
mov
loop
jmp
pop
repz
inc
in
das
pop
sub
insl
xchg
jno
dec
ret
fiadds
sub
mov
sub
push
lods
dec
mov
arpl
and
cmpsb
cmp
or
sahf
fs
add
loope
mov
leave
addl
push
cmp
lcall
mov
hlt
xorb
adcl
dec
xchg
ljmp
push
push
cmp
sahf
inc
ret
icebp
lock
cmp
xor
pusha
add
inc
fabs
dec
cli
lock
imul
mov
repnz
mov
dec
mov
jp
xor
aaa
subl
jno
add
xor
pop
in
pusha
out
or
mov
mov
xchg
dec
out
popa
dec
adc
jg
and
jae
mov
arpl
lret
mov
mov
push
icebp
insb
insb
sub
loop
lock
in
daa
roll
push
jns
cltd
push
xchg
push
lods
mov
outsl
cmp
and
cmp
movsb
cmpb
or
push
movsl
sub
lret
mov
sub
cltd
fidivrl
sbb
adc
lods
shrl
inc
and
sbb
ret
decl
dec
xchg
xor
loope
in
subl
jno
jns
test
cs
add
mov
cmpl
out
loopne
cli
icebp
mov
fdivrs
ret
mov
outsl
shr
mov
lret
and
mov
pop
popa
xor
ror
repnz
lret
cmpsb
sub
and
xchg
mov
shlb
sbb
inc
test
ret
push
mov
stos
fxtract
lods
mov
add
ds
fs
daa
pushl
dec
inc
cmp
jecxz
bound
adc
test
jb
push
sbb
and
insb
xchg
loop
fmul
icebp
fld
nop
fsubr
cmpsl
test
inc
popf
and
ss
stos
sar
or
icebp
ljmp
inc
and
jae
dec
jae
mov
stc
leave
add
andl
lcall
pusha
rcrl
ret
push
and
inc
mov
push
push
lret
and
pop
sarb
insl
stc
shrb
and
popa
sarb
fdivs
jp
sub
inc
ljmp
mov
mov
subl
mov
idivb
add
mov
fldl
dec
or
push
mov
sub
sbb
and
imul
cmp
jle
jns
cmp
mov
sar
and
ljmp
das
je
stos
sbbl
stos
xor
push
ja
jnp
xchg
or
and
cltd
ljmp
movsl
std
push
loopne
scas
fs
ret
fldcw
cmp
sarl
jno
dec
leave
jmp
push
mov
enter
test
push
push
xchg
loop
into
push
rorl
dec
jecxz
ljmp
imul
cli
push
xchg
xor
mov
aas
mov
inc
jp
mov
push
cmp
out
jns
add
loope
adc
popf
push
sbb
mov
and
in
jae
or
ret
fsub
repnz
jb
jle
stc
fcmovu
pop
roll
sub
cli
stos
xor
in
jmp
icebp
inc
stos
cmp
loope,pt
cmp
cmp
push
icebp
ret
imul
lcall
xlat
fstps
mov
ret
mov
inc
icebp
jmp
test
mov
arpl
jne
incb
frstor
cmp
or
cli
push
mov
add
bound
fldcw
sbb
inc
sub
mov
test
stc
div
push
stos
jnp
add
push
mov
enter
inc
bound
adc
cmp
mov
out
dec
adc
repz
push
loop
inc
bound
xchg
mov
adc
jmp
enter
jl
imul
inc
xchg
jno
cltd
in
pop
jecxz
jns
jecxz
fimull
dec
cmp
mov
jne
stos
out
xchg
out
jnp
test
and
bnd
ret
stos
idivb
imul
xorb
aam
cli
inc
jns
mull
mov
daa
adc
inc
pop
jg
adc
cmp
repnz
dec
das
mov
and
and
and
push
pop
lods
jnp
int3
shll
xor
jge
je
repnz
inc
imul
lret
fldcw
loop
jnp
and
add
mov
jmp
mov
in
aaa
out
test
fstpt
repz
jecxz
xor
imull
inc
xchg
pop
arpl
cmp
imul
sti
dec
xor
ret
dec
orl
push
or
lret
rcl
cmpb
sarb
bnd
xchg
pusha
dec
in
mov
aas
insb
fucompp
rcr
push
mov
push
int
push
mov
pop
popf
jbe
dec
xor
icebp
out
or
out
push
fs
mov
arpl
fcmovne
lock
loope
orb
loop
repz
stos
inc
mov
xor
out
rcr
add
jg
and
xor
mov
inc
inc
daa
cmp
popa
gs
mov
cmp
arpl
std
stc
stos
ret
aas
jmp
mov
add
mov
cmpsb
xor
mov
loopne
ljmp
cld
jae
lret
cmp
pop
out
into
push
inc
pop
in
mov
adc
push
jns
mov
aas
pop
mov
aas
rorl
or
mov
jecxz
data16
push
lahf
mov
mov
add
int3
mov
mov
add
shll
loop
sbbb
popa
mov
inc
mov
or
outsb
jmp
fimull
call
call
scas
popf
in
jmp
sbb
movsl
lahf
push
pop
in
lcall
xor
cmpsb
orl
in
loope
mov
xor
sub
cli
ljmp
push
cld
cmp
pop
aaa
dec
test
ret
jno
sbbb
popa
push
cli
fs
adc
nop
xor
cmpl
xor
mov
cmp
or
jns
jb
fstps
cmp
test
mov
scas
stos
mov
jnp
sti
dec
push
cmp
popa
mov
xchg
jae
mov
outsl
jp
js
pop
stos
jge
cmp
mov
mov
xchg
dec
mov
data16
int3
pop
push
sti
mov
lods
mov
cmp
add
stos
xchg
loop
mov
mov
dec
stos
sar
jns
popa
shlb
mov
shll
fdivrs
add
lret
loope
xchg
imul
pop
aas
loopne
inc
or
cli
loope
fs
lret
xchg
sbb
fdivs
stc
push
stc
hlt
xchg
icebp
repnz
adc
das
jg
dec
xor
and
pop
ja
stc
or
cmc
push
stos
adc
dec
lahf
and
dec
fcoml
out
xchg
bound
inc
jp
xchg
test
ljmp
lock
mov
adc
rol
xchg
pop
mov
lods
jae
leave
lods
push
in
les
inc
jnp
addl
mov
xor
pop
out
je
loopne
add
fidivrl
in
mov
stc
add
je
test
xor
loope
movsb
leave
stos
and
inc
push
mull
in
popa
lcall
xchg
inc
insl
or
imul
or
mov
xchg
cmpsb
push
loopne
lcall
mov
push
jns
push
dec
hlt
or
scas
dec
sub
imul
fnstenv
out
ret
pop
push
mov
lds
leave
sti
dec
cmpsb
fdivr
imul
push
lret
int3
adc
stc
or
pop
push
shlb
pop
jp
andl
or
dec
mov
dec
repnz
int3
xlat
xorl
testb
ret
add
push
repnz
loop
and
or
and
bound
dec
ret
pop
inc
sub
inc
mov
dec
jp
dec
in
bound
jno
lock
jno
in
popa
push
stos
adc
mov
shll
mov
pop
cmp
stc
lea
lods
repnz
gs
mov
roll
push
test
lret
fcompl
push
lods
lods
mov
inc
test
sbb
cmp
fistl
adc
inc
sbb
insl
mov
ljmp
pop
outsb
jp
rcrl
fs
and
mov
inc
jo
inc
jp
mov
andb
out
je
lcall
leave
cld
insb
xor
fcmovbe
mov
popa
bound
inc
subl
mov
sbb
mov
lret
push
sub
mov
lret
outsb
dec
aam
test
stos
imul
addl
into
push
inc
jns
xchg
out
cmp
mov
addb
push
insb
adc
mov
xchg
push
jo
std
fs
repz
imul
cmpsl
hlt
dec
mov
inc
in
dec
mov
cmp
jecxz
cmp
mov
jp
xchg
daa
mov
inc
push
sbbl
push
imul
push
or
jecxz
push
aam
ret
arpl
arpl
sarb
dec
jmp
int3
push
jb
jg
orl
push
arpl
cli
mov
fs
mov
je
sbb
repnz
divb
ficomps
push
lcall
test
jg
lods
imul
cld
push
ljmp
mov
stos
push
in
fmuls
outsb
ret
inc
push
divl
aad
inc
cmc
fcmovu
xor
xlat
xchg
dec
inc
and
jnp
mov
xor
add
repnz
and
add
push
mov
and
arpl
push
shl
mov
sub
arpl
inc
mov
pusha
in
cmpsl
icebp
jb
mov
inc
cltd
pop
cmpsb
lods
imul
add
xor
sub
xchg
lock
stc
insb
mov
subb
test
cld
rcrl
cmp
pop
mov
pop
psadbw
loop
jg
push
jmp
test
inc
arpl
test
pop
orb
imul
xchg
jb
out
mov
test
aas
jle
loope
cltd
repnz
adc
mov
pop
popa
popf
lock
push
jns
cmp
sbb
cmp
mov
pop
jp
repnz
enter
pop
inc
fcmovu
dec
xchg
lcall
jp
pop
leave
add
imulb
jae
fstpl
and
stos
cli
popf
and
inc
mov
lods
loopne
dec
mov
pop
stc
xor
or
in
sbbl
mov
ret
mov
repnz
shl
xor
cmp
sbb
bound
xor
mov
rorl
fstpl
mov
pop
in
jnp
jno
cmp
sbb
cmp
ljmp
push
mov
cli
aas
or
cltd
pop
clc
xor
rolb
lret
dec
ret
mov
lods
lret
arpl
dec
orb
loopne
inc
sahf
repnz
add
sbb
or
xor
imul
mov
arpl
loop
push
out
pop
and
nop
jp
or
insb
into
sub
sarl
cli
and
ja
cmp
je
inc
subb
clc
cmpsl
popa
sar
push
ret
pop
jno
pop
hlt
push
imul
and
rcll
push
cld
int3
dec
xor
loop
fidivrs
cltd
xchg
pop
inc
pushf
divl
outsl
fstpl
and
enter
lock
xor
push
mov
mov
mov
dec
pop
lret
shr
ret
pop
push
xchg
mov
pop
shll
sbb
mov
loopne
out
jmp
add
fnstenv
or
int3
lret
loopne
test
fcomps
fistps
lock
add
xor
sbbb
cmpsl
rolb
out
clc
push
jp
mov
mov
ret
or
clc
cltd
jb
push
cmpl
or
mov
sahf
mov
je
pop
mov
shlb
push
mov
jns
sub
or
inc
inc
aad
jo
fistpl
inc
int3
addb
mov
aas
and
push
dec
inc
jae
fildll
loope
xor
and
mov
mov
paddsb
cmp
imul
cmp
mov
pop
test
aam
add
fisttpl
push
mov
mov
mov
pushf
or
sbb
xchg
in
or
dec
lods
sub
mov
mov
xchg
lcall
adc
push
add
xchg
stos
cltd
cli
push
lret
stos
or
and
dec
add
cmp
jb
je
mov
mov
mov
mov
mov
mov
inc
cmp
jno
sarl
cmp
add
or
fcoml
mov
std
in
mov
ret
sbb
ds
leave
andb
clc
mov
dec
mov
daa
ret
mov
paddsb
mov
mov
inc
repnz
scas
cltd
stc
aas
icebp
jnp
stc
jmp
shrb
or
mov
nop
fwait
imul
push
jno
cmp
imul
mov
test
inc
mov
mov
and
lods
icebp
leave
cmp
leave
stos
push
out
bound
sbbb
fisubrs
pop
shrb
mov
jns
dec
stos
xor
dec
stc
jb
jbe
fidivl
fdivp
sbb
mov
dec
jns
mov
arpl
and
mov
mov
pop
hlt
popf
xchg
xor
dec
cld
es
push
jnp
in
std
and
arpl
sahf
jns
sub
call
cmp
stos
pop
ljmp
cmp
cmp
mov
test
faddl
push
mov
mov
out
les
jo,pt
imull
lret
mov
xor
pop
jmp
inc
aaa
xor
loope
pop
mov
fwait
cmc
adc
addl
inc
outsb
add
mov
xor
jb
jns
ret
sbb
mov
mov
and
stos
les
test
push
mov
bound
icebp
stos
dec
cld
jae
test
orl
xchg
mov
pop
jb
pop
jo
mov
sbb
mov
fldenv
dec
loope
dec
inc
data16
stos
rorb
jae
pop
add
addr16
adc
sarl
sbbb
fidivl
xor
cmp
loopne
aas
mov
cmp
filds
fnstcw
arpl
adc
mov
jae
inc
xor
popa
jb
jo
imul
stc
pop
push
sbbl
daa
int3
ds
sub
xor
push
test
mov
mov
jge
xorl
mov
lock
push
cli
and
aam
ds
lret
fs
push
stc
sub
adc
mov
pop
mov
mov
sub
out
or
cli
xorb
push
ja
dec
dec
cmp
jecxz
mov
jo
pop
insb
les
jbe
lahf
aas
bswap
popa
mov
ret
mov
mov
cmpsb
dec
inc
icebp
push
repnz
sbb
or
mov
dec
lods
dec
jns
mov
ljmp
mov
mov
push
cld
jae
mov
sti
xor
lcall
loopne
add
mov
and
lahf
xor
stos
sbb
mov
stos
add
in
arpl
loopne
je
mov
sarb
mov
ficompl
lahf
and
mov
scas
jg
mov
rorb
fs
xchg
push
jp
mov
int
jg
inc
adc
test
jmp
cmpl
cmp
aad
fcoml
addl
imul
cmp
mov
jge
call
and
stc
arpl
loope
jecxz
in
mov
test
test
pop
repnz
int3
mov
pop
mov
stc
enter
cmp
shr
add
jnp
and
mov
inc
sahf
inc
adc
popf
adc
enter
mov
pop
add
stos
cmp
xchg
lods
sbb
mov
mov
mov
shll
out
pushf
push
mov
inc
nop
lods
push
cli
arpl
ds
std
sub
lret
aam
mov
jb
stc
stos
jae
inc
leave
xchg
rcll
adc
sbb
jb
popf
loopne
sub
jmp
push
fdivrl
add
push
inc
mov
aas
add
pop
cmp
sub
add
repz
cmp
pop
out
mov
mov
daa
scas
mov
cmc
shll
mov
push
push
inc
fistps
pop
icebp
data16
daa
mov
decl
stos
inc
subb
xor
or
inc
test
dec
cmp
cmp
inc
movsb
or
out
xchg
pop
add
addl
mov
lods
rorl
cltd
sbb
pop
sar
cs
cmp
jns
xor
or
imul
ret
testl
mov
pop
mov
les
jae
aam
outsl
cmp
push
inc
jmp
sub
repnz
cmp
mov
imul
shll
cmp
mov
or
jmp
jno
cmp
pop
mov
sub
dec
and
xchg
dec
icebp
mov
leave
xorl
jge
xchg
jmp
jae
lret
mov
stos
imul
mov
inc
pusha
divl
add
stos
incl
ficoml
inc
lods
xor
mov
popa
shll
stos
fsubrs
out
outsl
pop
imul
xchg
inc
mov
sarb
fstpt
or
movl
icebp
inc
mov
and
js,pn
les
jmp
out
lds
jno
dec
stos
repnz
cs
dec
leave
mov
jle
rcll
sub
mov
lcall
jns
dec
repnz
jg
inc
mov
adc
xor
mov
jp
pop
popa
hlt
cli
jno
mov
ljmp
jg
pop
nop
push
orb
mov
xchg
cmp
jb
fldenv
push
orb
push
cmp
bound
test
mov
push
push
mov
and
mov
jnp
subb
shlb
int3
dec
lcall
into
mov
jb
sbb
icebp
loope
fdivl
lock
push
in
mov
outsb
dec
mov
ljmp
cli
test
jne
call
loope
andl
xorl
pop
jo
sbb
jns
fcoml
push
push
mov
push
mov
lods
mov
adc
adc
mov
pop
add
enter
cmp
adcb
dec
jnp
jo
enter
push
repnz
xor
fldl2e
cli
or
rorb
pusha
pop
jge
fwait
repnz
jmp
mov
stos
in
dec
add
mov
lods
mov
cmpb
pop
stos
inc
push
test
or
bound
mov
int3
xor
ret
int
lods
shll
loopne
sbb
loopne
add
jmp
rorl
mov
cmpl
stc
mov
loope
inc
mov
es
faddl
xchg
divb
push
orl
setle
aam
ret
sbb
leave
loope
mov
fstps
jecxz
mov
dec
in
push
jno
stos
inc
sahf
jp
in
inc
jecxz
cmp
fldcw
jae
xor
pop
jmp
xor
cmpsb
mov
ljmp
jno
andl
xchg
jae
stos
push
sti
test
out
clc
xor
stc
xchg
pop
dec
loope
xchg
fldenv
loop
mov
imul
in
outsb
xor
popa
mov
push
arpl
fpatan
outsb
xor
and
cmpsb
jecxz
jnp
push
fcmovu
scas
ja
add
push
mov
cmp
iret
cltd
push
fwait
cmpsl
xchg
add
add
mov
imul
aas
mov
mov
jmp
xor
add
mov
add
aas
or
cltd
adc
push
cmp
mov
mov
inc
call
repnz
stc
sbb
sahf
pop
cmp
mov
jno
jae
aas
aam
repnz
test
ficompl
hlt
loop
mov
enter
push
test
ret
cltd
shll
jb
call
fld
mov
call
push
mov
add
or
andl
daa
xchg
call
icebp
das
ljmp
xchg
jecxz
jns
mov
xchg
push
pop
stc
popf
mov
cmp
add
rcr
andb
icebp
cs
fcomps
cmp
out
loop
mov
hlt
notl
or
push
ret
jno
shrl
or
mov
add
mov
leave
out
mov
cltd
jns
dec
mov
push
inc
mov
dec
push
icebp
jb
fwait
push
push
mov
bound
shlb
jnp
out
inc
imul
flds
loopne
arpl
jb
or
push
or
mov
out
add
arpl
xchg
mov
daa
loope
inc
adc
jl
dec
aad
jo
popf
stos
aam
lret
cmc
cli
xchg
in
dec
mov
scas
loopne
push
icebp
mov
popa
mov
adc
xor
sbbl
mov
xchg
in
add
inc
jmp
cmp
arpl
mov
lahf
jp
int
xchg
mov
data16
popl
fistps
adc
or
pop
xor
mov
jnp
bound
push
xchg
mov
mov
loopne
pop
lcall
mov
in
dec
xor
fptan
sbb
leave
test
hlt
jp
add
dec
and
push
jo
dec
xor
and
clc
lcall
and
xchg
insb
mov
push
ficoms
sub
cmpsl
mov
and
int3
mov
jb
ds
inc
loope
orb
push
sub
xor
sub
in
mov
jno
mov
andl
insb
cld
test
lret
stos
shll
mov
sbb
push
pop
aad
push
xchg
push
loope
mov
test
test
jnp
push
dec
mov
lcall
push
cld
js
jp
inc
mov
xchg
subl
sub
je
lods
stos
mov
call
jb
sub
jno
dec
xchg
loope
or
stc
mov
jne
sti
mov
push
push
pop
xchg
or
movsb
mov
and
mov
sbbl
popa
mov
push
cmp
lods
cwtl
xchg
pop
push
cmp
icebp
sub
dec
out
ljmp
stc
cmp
push
or
loop
lcall
pushf
fstpl
ret
push
popa
sarl
adc
and
idiv
sbb
test
popf
rol
lret
stc
cltd
nop
pop
addb
jno
push
push
add
inc
lods
pop
jb
stos
das
addr16
ljmp
push
stc
sbb
inc
stos
mov
nop
mov
popf
cmpsl
mov
jns
dec
jno
xor
sbb
sarl
push
jp
and
iret
int3
xchg
jae
xor
dec
out
leave
jno
outsl
mov
jns
pop
fwait
iret
mov
adcb
xor
ljmp
iret
mov
rcl
iret
xor
sub
jns
into
add
stos
mov
cmp
rolb
loop
stos
adc
fisttps
jb
pop
mov
ret
pop
pop
cli
mov
inc
call
in
adcb
push
jecxz
add
loopne
imul
popa
and
pop
pop
movsl
mov
dec
sub
cmp
lods
shll
sbbb
push
notl
mov
lods
jecxz
push
inc
push
and
cmpsl
and
repnz
push
jo
inc
loop
xor
pop
cli
rcrb
dec
and
and
xor
jge
mov
sbb
xor
inc
arpl
js
pop
cs
mov
jb
lcall
pusha
xchg
scas
xchg
iret
adc
out
and
lahf
loopne
mov
pop
add
cmpl
test
and
cwtl
xchg
push
jp
adc
fildll
cltd
add
cmp
sbb
mov
cmp
push
jb
roll
xchg
and
sbb
cli
mov
cmp
cs
imul
iret
xchg
mov
dec
or
lock
cli
mov
push
pop
and
mov
gs
and
ret
xor
pop
iret
and
insl
test
scas
xchg
pop
pop
and
dec
in
es
inc
pop
stos
enter
dec
andb
jp
popa
aad
lods
iret
and
cmp
loop
mov
lds
xchg
xor
jp
out
jg
mov
adc
xor
sub
iret
and
outsb
push
xlat
loop
mov
adc
push
xchg
xlat
and
adc
jp
loop
ret
popf
pop
mov
dec
pop
push
stos
ror
xor
ds
inc
subl
jmp
xchg
jb
ds
pop
bound
cmp
xchg
popf
xchg
and
lods
mov
mov
jb
xchg
push
push
cmp
mov
lcall
jnp
jge
sub
sbb
imul
cld
pop
mov
mov
cld
mov
ljmp
pop
pop
mov
jae
jnp
mov
pop
stos
popf
push
lret
jb
push
mov
xor
test
sbb
adc
mov
repnz
fidivs
imul
xor
cmp
loop
stc
mov
mov
jae
rolb
cmp
rcll
cltd
addl
imul
jmp
rcll
loope
lds
pushl
lret
sbb
ret
add
inc
jl
add
loope
popa
push
add
cmp
fistpll
pop
imul
push
mov
mov
sub
xor
loop
fwait
rcll
imul
popa
mov
mov
mov
mov
xchg
sbb
lods
xor
stc
cmp
mov
dec
jb
jecxz
dec
movsl
pushf
mov
faddp
xor
jb
push
lret
and
adc
cmp
and
push
xchg
or
jae
mov
hlt
arpl
das
jecxz
adc
scas
sub
insb
sbbl
sub
fldenv
ficoml
jmp
push
inc
pop
sbb
cmc
repnz
scas
jb
jno
sar
pop
mov
cmpsl
movsl
xor
jno
arpl
lcall
loope
and
ret
sbb
shrb
mov
enter
cmp
xor
stos
in
rcll
pop
iret
lods
rcrl
xor
ret
inc
hlt
push
dec
push
xchg
sahf
cmp
jg
inc
stc
cmp
in
stos
scas
sub
and
loop
dec
inc
jo
lret
pushf
sub
or
sti
adc
sbb
sti
add
jns
adc
loope
cld
cltd
addb
divb
xchg
fst
icebp
test
inc
lea
sbb
js
cmpsb
pushf
hlt
dec
sub
bound
and
fsubs
xchg
aas
sub
xor
add
out
cli
stos
push
fstps
stos
xor
sub
and
jo
out
cmp
mov
dec
jecxz
inc
sub
ret
in
push
fimuls
stos
ret
push
mov
jns
mov
and
mov
xchg
in
roll
xchg
and
cmp
rorl
lret
cmp
cmpsl
mov
pushw
sahf
and
jae
in
mov
jno
les
dec
and
mov
mov
adc
and
stos
popa
test
cld
mov
loop
test
mov
mov
stc
ja
in
ret
mov
jns
dec
cmp
xchg
std
xor
stos
inc
ficoml
pop
aas
jecxz
repnz
or
jnp
pop
icebp
xchg
adc
arpl
imul
loope
jp
jle
inc
adc
jno
adc
fisubl
daa
loopne
push
pop
shrb
icebp
dec
jns
xchg
bound
ficoml
andl
push
outsb
repnz
in
mov
mov
xchg
cltd
scas
rcr
mov
aad
lcall
jnp
push
sbb
inc
sbb
push
pop
call
icebp
addb
and
jno
and
add
lcall
push
sub
popa
fbld
dec
mov
cmp
jne
ret
mov
repnz
pop
push
int3
mov
loope
dec
ret
mov
cmp
mov
inc
stc
out
inc
add
pop
xor
jb
fcmovu
inc
lret
enter
xchg
xchg
lcall
xorb
cmpb
cmp
test
or
push
aaa
mov
mov
out
leave
test
in
flds
or
jle
mov
bound
jmp
sub
pop
mov
xchg
test
pop
repnz
fdivrl
jae
sarl
push
jo
add
mov
rclb
scas
xor
jnp
rcrl
add
inc
ret
and
icebp
xor
ror
clc
mov
inc
out
ret
xchg
push
frstor
or
lods
mov
stc
pop
jne
add
jp
xor
jae
xor
mov
xchg
repnz
ret
stos
icebp
and
aam
leave
jb
nop
cltd
ret
or
loope
lret
jle
inc
inc
cmpl
xor
fcoml
frstor
inc
sbb
jno
inc
call
jp
mov
jecxz
cmp
inc
jo
add
icebp
jmp
in
mov
sar
mov
dec
sarb
mov
push
stc
jns
push
icebp
mov
mov
subb
leave
pop
mov
dec
and
popa
incb
mov
mov
cltd
pushf
fs
stc
das
xchg
and
lret
in
lahf
add
inc
ljmp
ret
pop
push
push
imul
jno
cmp
leave
inc
and
stc
mov
jnp
add
loope
mov
shl
rclb
inc
push
cmp
test
add
psraw
push
inc
dec
subb
mov
mov
jecxz
jns
imul
jb
push
and
subl
out
cltd
push
call
dec
and
loop
iret
sub
cli
arpl
cltd
leave
add
repnz
jp
lods
cld
dec
bound
cmp
push
sub
sarl
jg
pop
ljmp
pop
pop
inc
push
or
inc
pop
add
xor
xchg
mov
mov
decb
sub
in
ja
arpl
sub
inc
mov
mov
mov
enter
xor
dec
jns
push
push
cmpsl
out
scas
repnz
xchg
dec
mov
mov
jl
cltd
addl
ljmp
inc
jae
jmp
and
xor
outsl
sarb
xchg
jle
mov
lret
pop
repz
shll
or
and
adc
mov
rcr
ljmp
mov
and
int
mov
es
pop
ret
dec
imul
jae
pop
add
pop
jnp
or
xor
dec
mov
aam
add
cmp
or
or
orl
xchg
subb
fildl
or
lret
pop
test
ret
mov
sbbl
jno
or
shr
stos
jge
mov
aam
push
cmc
les
imul
add
xchg
mov
in
dec
pop
stos
mov
inc
lret
inc
cmp
or
ficompl
xchg
xchg
push
and
jne
jmp
jne
shll
imul
cltd
add
sub
inc
jg
ret
icebp
mov
inc
jle
xchg
insb
mov
adc
sbb
push
dec
bound
and
mov
and
xchg
addl
dec
in
jns
lods
inc
jb
arpl
push
clc
mov
sub
push
or
pop
dec
push
ret
sar
or
sbb
inc
sarl
jb
xchg
jnp
in
fldl2e
xchg
out
enter
stc
jno
pop
in
lock
xchg
mov
lcall
jnp
addb
shll
enter
push
xor
in
or
ljmp
push
cld
xor
jae
call
push
mov
das
and
test
or
mov
jmp
inc
and
jnp
jnp
sbb
cli
leave
fsincos
adc
call
jg
and
lret
xchg
jl
xor
dec
mov
cli
and
lea
imul
stc
addr16
ljmp
loopne
gs
cld
inc
mov
mov
push
push
push
push
ret
xchg
lret
andb
repnz
subl
cli
nop
sub
mov
push
lret
jns
sbb
stc
nop
fadds
mov
xorl
daa
insl
inc
lods
lret
stos
mov
jns
mov
std
ret
arpl
push
data16
ret
std
in
lret
add
mov
fsubrl
cltd
inc
add
lcall
mov
mov
inc
jnp
push
fiaddl
inc
insl
arpl
repnz
mov
inc
lret
xchg
lcall
test
cmp
inc
out
mov
jno
ljmp
jp
test
cmp
shll
stos
add
xchg
imul
icebp
xor
leave
push
loop
cli
pop
push
aas
test
jp
adc
xor
adcl
jnp
mov
sub
pop
insb
lret
add
loopne
xor
push
clc
ret
adc
out
test
sub
rorl
xchg
popa
dec
xchg
jp
and
lcall
cmp
loop
sarb
push
stos
mov
xor
loope
pop
lock
enter
pop
arpl
xor
repnz
sahf
pop
adcl
pusha
mov
jecxz
icebp
add
cmp
ret
jnp
add
mov
inc
popa
mov
das
pushf
add
dec
cli
adc
std
pop
mov
je
jno
fiadds
sbb
mov
mov
mov
jecxz
jb
cli
sahf
fiaddl
mov
jae
mov
pop
inc
lret
gs
sti
enter
pop
cmp
roll
adc
popa
pop
and
pop
jno
mov
cmp
flds
outsb
shlb
orb
inc
in
mov
mov
jmp
push
outsb
movsb
add
inc
pop
ss
mov
loop
jp
push
lret
imul
repnz
addb
insl
jno
lcall
ljmp
rcll
pop
stos
lret
into
add
arpl
pop
jge
inc
xor
mov
stos
pop
xacquire
out
jecxz
sbb
add
enter
pushw
or
mov
shll
pop
add
cmp
xchg
movsb
mov
jmp
outsb
ljmp
cltd
pop
sub
adcb
cmpl
push
pop
push
lods
ficoml
or
mov
xor
xor
je
fdivrs
push
mov
outsb
and
xor
sbb
mov
stos
ror
mov
mov
jnp
ljmp
mov
inc
mov
loope
inc
jge
lods
lahf
rcr
arpl
addb
mov
icebp
mov
push
mov
mov
test
cmp
mov
repnz
scas
mov
or
mov
aaa
ret
jne
stc
imul
pop
jmp
cmp
ljmp
xor
mov
xor
imul
and
mov
lcall
stos
add
jns
xchg
mov
imul
adc
or
outsb
imul
jnp
andl
ret
cmp
xchg
loop
andl
cmp
mov
xchg
jns
cs
jecxz
cmp
sahf
dec
jp
add
imul
mov
ret
mov
push
jns
les
flds
xlat
leave
pop
jp
std
mov
xchg
jno
jns
xchg
mov
or
jbe
mov
out
cmpsl
xor
cmp
or
test
inc
cwtl
cli
xchg
loop
out
inc
jnp
shlb
cmpsl
jge
inc
push
jmp
ret
repnz
orl
dec
imul
divl
ret
lods
mov
hlt
push
mov
cmc
jmp
gs
les
or
testl
cmpsl
push
in
mov
leave
adc
mov
loopne
stos
fiadds
decb
int3
out
rorl
inc
jns
mov
mov
rol
mov
or
mov
loope
add
jno
lcall
lock
stos
push
push
jnp
ds
pop
dec
inc
stos
ss
cltd
xorl
mov
mov
inc
jp
popa
cmp
xor
insl
mov
pop
popf
push
sbb
fcomps
leave
jnp
fs
add
scas
ss
loope
mov
imul
and
mov
jg
pop
jne
ja
cmp
fs
loopne
xchg
mov
jnp
incl
jnp
not
sbb
into
jb
lret
sbbl
push
mov
fcoms
mov
aaa
xlat
bound
adc
ret
jnp
int3
mov
jmp
das
fists
int3
lret
sbbl
sahf
adc
pop
in
jbe
xchg
addl
loope
adc
pop
pop
xchg
sub
dec
and
pop
ret
inc
lcall
jno
insb
xchg
adc
dec
jae
ljmp
inc
lock
fdivs
sarl
mov
mov
aad
mov
xchg
inc
sbbl
fnstenv
cmpb
imul
sbb
push
pop
dec
repnz
xor
dec
aas
stos
jg
adcb
push
ds
lret
stc
rcl
push
xor
push
and
dec
ficoml
push
sbb
insb
arpl
lcall
std
jle
icebp
and
pushf
fimull
xchg
xor
stos
add
jmp
sub
fnstcw
loope
xor
hlt
pop
inc
mov
mov
push
lret
mov
test
gs
incl
dec
jecxz
loope
je
in
fwait
icebp
pop
dec
ret
mov
and
sub
jnp
jmp
jo
cmc
testb
cltd
int
cmc
popa
xchg
loopne
lret
loopne
out
mov
jnp
popf
rclb
pop
loope
adcl
inc
insb
mov
fwait
push
add
jns
xchg
in
bound
push
lret
inc
shl
mov
ret
idivb
cmp
out
sahf
sbb
ja
repnz
pop
sahf
and
hlt
mov
xchg
push
cmp
cmpsb
out
mov
pop
ljmp
imul
jo
inc
push
les
inc
add
js
imul
sbb
mov
ret
roll
shl
mov
sub
test
dec
pop
push
dec
and
push
popa
inc
inc
mov
push
mov
jns
in
xor
mov
xor
sbb
pop
sub
push
cmpps
cli
hlt
mov
icebp
dec
cmpsb
cwtl
rcl
arpl
fcmovbe
mov
out
movsl
cltd
push
or
adc
lcall
mov
inc
mov
das
dec
std
inc
xor
mov
mov
xchg
add
stos
xchg
fs
xchg
inc
inc
adc
push
lea
pop
add
xchg
mov
mov
sarb
jns
data16
imul
jp
lret
jo
mov
jge
or
adc
out
xor
ds
mov
mov
xchg
pop
cmp
shrb
lods
loopne
dec
loopne
test
test
test
fnsave
fsubrl
popa
mov
pop
lock
shrb
ret
and
mov
cld
lret
insb
mov
mov
mov
repnz
jae
xchg
or
or
sub
adc
pusha
cltd
sbb
cmp
cmpsl
xor
jecxz
and
rcll
repnz
in
shrl
in
icebp
shll
ror
or
sbbl
jno
mov
arpl
enter
lret
dec
addb
insl
lcall
je
mov
ljmp
in
push
sahf
adc
dec
es
push
cmp
and
insb
xor
inc
inc
inc
xchg
fiadds
nop
arpl
jnp
stc
xor
add
divb
sbb
lock
and
dec
jmp
rcr
icebp
arpl
mov
inc
add
ret
and
inc
xor
fldenv
and
addr16
cmp
cmp
imul
popf
push
cli
lahf
popa
arpl
pop
out
inc
stc
jnp
mov
cmpl
mov
dec
add
rolb
fwait
mov
outsb
or
mov
les
add
lret
push
aam
push
sbbb
pop
add
lcall
and
fs
xlat
jnp
push
test
jb
push
cli
push
xchg
add
xor
sarl
out
lods
mov
jns
jns
cmp
jp
inc
adc
dec
xchg
jb
pop
repnz
cs
push
push
xchg
je
cmpsl
fcompl
sti
inc
xor
pop
mov
mov
inc
cli
popa
lahf
mov
mov
stos
icebp
add
mov
stos
nop
out
or
pop
jb
incb
adcb
and
addb
cmp
inc
mov
loope
inc
out
mov
mov
inc
ja
lahf
pop
andl
roll
inc
inc
bound
add
cmp
test
lds
enter
dec
pop
pop
mov
ret
mov
mov
cmp
add
adc
lea
add
cmpb
mov
popf
imul
cmp
in
loop
popa
pop
arpl
and
pushf
shl
ret
lcall
inc
in
cmp
push
mov
or
loop
mov
inc
repnz
subl
sub
insb
fdivl
shlb
lods
int3
xor
mov
in
cmc
jae
add
pop
lret
pop
ret
jmp
mov
dec
cltd
inc
test
push
ljmp
int3
push
xchg
xchg
es
in
repnz
add
mov
scas
and
je
mov
fld
adc
xchg
pop
jns
std
and
lcall
loop
inc
jae
push
jecxz
sub
cmp
inc
pop
lret
mov
leave
fidivl
stos
and
repnz
ret
mov
xchg
loope
mov
cltd
push
dec
mov
mov
incl
sbb
daa
xchg
hlt
mov
inc
arpl
sub
loop
stos
imul
pop
fs
inc
fisubrl
xchg
cmp
jns
loope
leave
add
loope
jnp
inc
cmp
dec
loopne
or
movsb
mov
in
jno
mov
adcl
dec
in
cmp
sbb
lret
in
xchg
jae
pop
push
xchg
mov
dec
ljmp
in
xor
bound
mov
mov
xor
push
data16
or
fiaddl
testl
adc
jns
arpl
mov
cltd
gs
lret
pushf
pop
cmp
cli
pop
cmp
xor
inc
sti
jns
xchg
jnp
push
shl
out
mov
imul
popa
push
mov
xchg
push
xchg
push
or
push
scas
mov
loope
loope
pop
daa
enter
sub
fdivl
out
loope
leave
ds
pop
add
cli
lret
add
jmp
je
fdivr
popa
test
fldenv
xor
aam
stc
sub
jnp
inc
push
xchg
mov
xchg
push
push
lcall
mov
mov
adc
stc
sti
imul
jb
mov
pop
fcom
loop
lea
cmp
mov
fisubrl
mov
int3
mov
std
sbb
or
pop
xchg
stos
add
jne
pop
ljmp
inc
push
clc
cld
mov
test
in
std
test
popf
pop
jecxz
mov
jnp
xchg
imul
cmp
arpl
mov
mov
cmp
push
or
inc
mov
fadds
jmp
add
inc
rcll
stc
push
faddl
pop
imul
std
jns
mov
fwait
xor
xchg
cmp
push
mov
or
aas
fnstcw
jnp
divb
add
mov
xchg
cltd
push
clc
mov
mov
sbb
fcompl
fcomp
adc
sarl
mov
push
cmp
iret
andb
push
pop
mov
inc
lock
jb
adcb
popa
mov
pop
loopne
jmp
mov
pop
sbb
loopne
imul
stos
ret
add
repz
stc
pop
pop
push
je
inc
push
mov
or
cmp
and
cmp
push
add
dec
leave
add
dec
push
cltd
mov
imul
inc
inc
loope
pop
mov
fiadds
loop
mov
addb
mov
cltd
fsubs
out
jb
xor
scas
mov
sti
cld
ret
pop
or
ret
ds
cmp
lcall
inc
clc
sarb
mov
in
test
rclb
popl
inc
das
xor
jb
mov
stc
outsb
and
pop
mov
fcoms
sbb
jge
push
cmp
mov
mov
icebp
bound
leave
fnstcw
sub
jnp
aad
lret
mov
dec
inc
add
iret
cs
lahf
stos
andl
lcall
stos
adc
and
icebp
das
std
inc
xchg
clc
xor
es
ret
xchg
leave
aas
xor
push
jae
xchg
dec
mov
sbb
outsb
fsubr
inc
mov
jno
clc
dec
imul
lods
xlat
jle
lcall
adc
sub
jecxz
dec
push
mov
jnp
imul
arpl
rcll
int3
scas
shrl
add
mov
pop
arpl
add
xor
mov
int3
jb
inc
jmp
out
lcall
mov
loope
mov
outsl
imul
sub
mov
dec
lea
loop,pt
arpl
pop
pop
lock
inc
cli
push
adcb
dec
xchg
push
bound
xor
dec
vpsrlw
iret
sar
bnd
xor
cmp
lds
cmp
sahf
les
dec
or
mov
ja
cs
flds
push
ficompl
dec
mov
mov
add
push
jb
mov
xchg
mov
shlb
je
scas
mov
fcomi
pop
xchg
inc
sub
push
mov
cmp
jp
push
jnp
cmp
and
cltd
outsl
lea
arpl
or
mov
mov
lds
ud0
mov
or
push
inc
xchg
or
inc
cmp
cmp
je
icebp
movsb
add
cmpsl
add
rcrb
cmp
inc
pop
movsb
mov
daa
inc
lods
scas
hlt
outsb
jmp
rcl
cli
fld
inc
je
loop
sub
shll
inc
mov
and
cmp
add
jmp
stos
std
inc
inc
dec
xchg
cmp
lods
insb
mov
inc
loope
sarl
mov
jb
inc
movsb
jg
imul
push
sub
jo
stc
jmp
cmp
and
add
stos
cmp
ficomps
ds
sub
push
aas
fisttps
push
lahf
mov
mov
loop
mov
test
mov
rcrl
cwtl
out
lret
popa
mov
mov
jg
cmp
addl
fbld
jecxz
and
stos
imul
jns
cmp
icebp
in
jno
pusha
mov
aas
jns
jne
dec
repnz
mov
out
leave
or
xchg
arpl
jle
out
jbe
jnp
mov
rorb
push
lock
stc
imul
jb
jns
cmp
mov
lcall
mov
pusha
mov
jg
sub
jnp
mov
jb
fsts
mov
imul
leave
jmp
shll
and
mov
jnp
cmpl
ret
aas
fmuls
faddl
lock
hlt
push
sbb
pop
ret
dec
and
in
je
mov
ret
push
add
push
push
sbb
mov
push
push
push
ficompl
lods
dec
push
sbb
mov
ret
test
mov
movsl
mov
mov
icebp
pop
sub
and
or
jmp
push
movsb
ljmp
or
push
mov
pop
je
rcll
mov
and
jle
jae
imul
jbe
pop
or
mov
cltd
sarb
popl
add
jle
mov
and
pop
stos
xor
cltd
push
daa
mov
mov
fdivrl
jo
rol
jmp
mov
movb
sbb
fnstenv
shll
sbb
cmp
rcrl
push
jb
or
bound
lcall
add
jecxz
xor
pop
and
mov
mov
push
lahf
mov
jge
lahf
out
mov
mov
jge
and
pusha
mov
jne
add
int3
inc
jnp
jmp
xchg
and
int3
mov
mov
cli
lods
pusha
fmull
pop
dec
insb
ljmp
fidivrs
subl
lock
or
pop
stos
mov
mov
and
test
test
cmp
inc
inc
sahf
xchg
xor
push
sub
stos
jp
sahf
cwtl
cs
repnz
and
inc
mov
xor
push
stos
mov
imul
ss
fidivrl
and
stos
addr16
jg
jmp
pop
inc
mov
xchg
add
or
push
dec
jecxz
hlt
jno
dec
push
push
pop
or
bound
bnd
xor
std
imul
pop
test
mov
push
cmp
mov
sub
leave
lret
and
subl
mov
subb
pop
imul
repz
pusha
lcall
iret
mov
testb
mov
sub
sub
pop
mov
jns
dec
or
je
filds
lcall
dec
lahf
and
jb
jl
fnstcw
xchg
jae
jmp
loope
fstpl
dec
pushf
add
xchg
ret
mov
cmp
lods
or
cli
cmp
lcall
dec
loopne
mov
inc
dec
or
ljmp
fmul
bound
push
push
nop
dec
mov
mov
jge
rorb
ds
sub
mov
and
icebp
call
mov
xor
and
cmp
imul
adc
sbb
enter
aam
push
mov
lcall
leave
stos
xor
rolb
pusha
and
sahf
sub
ja
imul
repz
pop
arpl
dec
push
sbb
int3
stos
push
mov
nop
mov
xor
pop
fisubrl
jnp
in
xor
push
enter
add
dec
into
dec
lea
stc
lea
xor
mov
rcr
ss
pop
cmp
sub
ret
ret
xor
inc
jne
and
sarl
shlb
addb
xor
adcb
xor
and
pop
or
enter
mov
jle
inc
push
add
lods
mov
mov
push
fsubs
push
dec
and
push
outsb
dec
mov
and
fnsave
pop
sti
mov
cltd
mov
and
sti
add
and
inc
cltd
xor
push
mov
and
xchg
imul
jp
jno
dec
xor
and
rcrl
fisubrs
jae
mov
and
aas
xor
lds
xorb
mov
inc
inc
push
mov
xchg
mov
rolb
and
into
shlb
mov
sahf
arpl
or
mov
xor
pop
xchg
mov
or
and
and
das
shlb
and
sti
arpl
and
arpl
push
xchg
xlat
cmpsb
aas
dec
xchg
xchg
push
mov
stos
jmp
loope
imulb
ret
mov
leave
mov
and
xor
inc
in
ljmp
in
in
jp
rclb
cmp
imul
inc
jecxz
or
rorb
pop
rolb
push
loop
inc
inc
lret
fnstcw
jp
sbb
sbb
in
and
mov
in
bound
out
loop
jmp
jae
cmpsl
popa
mov
ds
add
imul
jl
roll
loope
push
hlt
jp
inc
repnz
xor
leave
dec
cmp
mov
inc
add
cwtl
cmc
jae
jle
mov
pop
mov
icebp
dec
icebp
repnz
dec
ss
push
inc
pushf
and
push
pop
pop
or
subb
sbb
stos
xchg
inc
xchg
rcl
loopne
stc
fcmovnu
inc
mov
push
or
imul
or
ret
popa
xchg
stos
sub
adcl
cmp
loopne
jno
and
imul
stc
dec
cmp
mov
shrl
jg
and
in
dec
xorl
daa
loopne
out
adc
negb
push
movsl
in
ds
cmp
shr
pop
addb
rsm
or
mov
insb
push
hlt
cltd
xor
shr
sbb
mov
fldcw
push
stc
adc
jb
add
mov
dec
bound
mov
in
cmp
mov
ret
sbbl
aam
inc
cmp
xorl
sub
inc
jle
xor
stos
ret
inc
xor
inc
ror
pop
add
pop
enter
push
dec
lret
lret
std
jnp
arpl
inc
mov
mov
loope
idivb
mov
out
adc
fnstcw
mov
scas
xchg
and
imul
test
movsl
fsubrs
jp
popf
push
xor
adc
xchg
mov
xchg
rclb
shll
pop
test
adc
popa
loope
ljmp
lock
test
jno
add
or
jns
add
cmp
push
push
inc
xchg
cmp
icebp
jb
std
pop
movsl
jnp
add
cmp
sti
pushf
mov
sarl
ds
mov
rol
ljmp
adc
cmp
pop
ficomps
xlat
adc
pop
int3
aad
xchg
jbe
push
dec
dec
pop
add
and
pushl
mov
inc
jnp
mov
jge
repnz
mov
inc
mov
xor
mov
fcmove
pusha
dec
push
or
jns
fldcw
xorl
mov
cmpsw
je
sub
hlt
fsubrl
int3
popa
ljmp
mov
jae
addl
or
sub
inc
cmp
stos
mov
stc
xchg
xchg
in
mov
cmp
pop
fs
pop
or
inc
inc
jmp
xor
jns
mov
cmpl
popa
mov
imul
icebp
pop
inc
mov
lock
add
jno
mov
test
cmp
imul
sbb
add
cmp
enter
pop
dec
xor
icebp
lods
cld
lds
fidivrl
dec
aas
cmc
mov
loop
stc
loop
xor
movsl
addr16
xor
aas
adc
push
gs
gs
rcl
mov
pop
jnp
pop
cltd
daa
pop
push
jns
cmp
push
inc
and
jmp
in
mov
jge
clc
enter
sarb
xorl
xor
repnz
fisubl
ret
xor
inc
inc
mov
add
mov
insb
jp
push
movsl
push
repnz
push
inc
insb
pop
or
shlb
and
mov
lods
or
scas
jnp
mov
inc
rcl
push
loop
and
inc
aaa
popa
dec
imull
jp
clc
sub
jge
mov
stos
mov
adc
rclb
mov
mov
addl
div
xchg
jnp
add
ret
leave
int3
push
jnp
xchg
fimull
jns
bound
dec
mov
bound
mov
mov
arpl
pusha
popf
mov
and
stos
mov
inc
mov
int3
insb
mov
stos
popa
jp
pop
cmp
push
jb
jno
lret
pop
add
loopne
push
addl
inc
dec
call
orl
fisttpl
cmp
ret
lret
cltd
pop
mov
hlt
fidivs
out
cmp
push
mov
xchg
and
orl
cmp
add
pop
jp
je
push
sbb
sbb
decl
jns
fnstenv
lret
xor
lahf
dec
mov
imul
fsubrs
loop
clc
aas
loop
xchg
pop
mov
jns
mov
stc
xchg
xor
lret
sbb
clc
mov
push
inc
lahf
cmpb
insl
lcall
arpl
cmpl
jbe
jge
enter
cmp
dec
push
lods
add
lock
ljmp
mov
cli
mov
leave
push
aaa
fs
das
jae
lods
stos
dec
push
push
xchg
mov
mov
jns
inc
hlt
jb
sbbl
ret
in
imul
mov
lret
cmp
insb
stos
je
push
cmp
loope
loopne
fsubs
or
adc
ret
hlt
pop
icebp
cmp
push
xor
mov
lods
adc
mov
shr
ret
mov
jno
mov
repnz
mov
push
call
arpl
inc
ret
sbb
xchg
shld
jnp
ficompl
inc
mov
pop
loop
push
adc
dec
sbb
icebp
jp
sub
or
jbe
jnp
aam
ret
push
mov
sar
push
stos
imul
add
mov
lcall
xchg
in
jno
cmc
andb
stc
add
adc
mov
nop
xchg
cmp
in
ret
jecxz
stos
adc
push
orb
cmp
mov
stos
and
cmp
inc
mov
cli
loope
add
imul
cmp
mov
ss
fs
push
mov
xor
add
leave
push
jl
cwtl
imul
add
push
inc
mov
loope
jns
cmp
sbb
lret
adc
int
cmp
jp
out
das
repnz
in
mov
cmpsb
and
cmp
mov
das
imul
add
inc
xor
mov
push
adc
stos
loope
aam
jmp
mov
pop
mov
xor
mov
sarl
jnp
mov
mov
icebp
and
jno
daa
mov
insl
or
shll
inc
aas
pusha
sub
lret
cmp
sbb
sbb
push
aam
inc
mov
imul
movsl
push
inc
lods
push
rcr
push
sub
jno
push
jne
jge
jge
adc
jb
clc
cmp
pop
rcrl
add
dec
mov
loope
and
bnd
push
xor
cmpsl
mov
jg
fwait
mov
aam
xor
jg
mov
stos
xorl
sub
push
loop
jge
loopne
shl
jns
pop
jecxz
fcmovbe
lret
dec
imul
insb
jle
aad
jns
ret
lret
sbb
in
pop
fcmove
loopne
je
idiv
aaa
mov
and
add
bound
lahf
int3
fiaddl
hlt
pusha
ljmp
mov
arpl
test
sub
popf
fadds
aam
out
test
iret
popf
lods
ret
dec
popa
add
inc
inc
xor
cmp
sahf
inc
mov
adc
dec
mov
andb
stos
loope
xchg
ret
jns
inc
jg
xor
mov
enter
mov
jno
andl
sub
mov
push
push
icebp
jb
jecxz
insb
cmpl
stc
add
xor
inc
or
cmp
ficompl
mov
xchg
arpl
inc
add
push
xor
pop
ret
mov
imul
test
sbb
mov
bound
adc
sub
lahf
ljmp
or
pop
pop
xchg
lea
inc
addl
xor
inc
je
shl
push
popa
lcall
aam
cli
lret
stos
push
cltd
enter
fninit
shr
fmuls
lahf
dec
rcl
xchg
xor
cmp
cmp
imul
mov
stos
loope
call
pop
mov
xchg
mov
outsl
push
jb
add
inc
stc
xchg
adc
mov
inc
lock
mov
shll
rorb
stos
xlat
dec
lock
jae
dec
pop
jnp
push
lcall
fdivs
jae
repnz
mov
imul
sub
fs
pop
jle
adc
dec
adc
mov
xchg
dec
fimull
sbb
pop
and
push
lods
push
orb
jnp
in
dec
shll
mov
lods
ljmp
mov
dec
add
xchg
imul
movsb
dec
or
mov
pop
ror
jecxz
sub
xor
dec
xor
mov
js
int
inc
call
ret
cltd
xor
jmp
mov
jecxz
push
jecxz
int3
mov
mov
xor
stos
mov
imul
cmp
cli
aas
scas
pop
subb
jae
xor
icebp
push
imul
lahf
adc
jp
mov
clc
mov
stos
pop
stc
jbe
clc
das
jnp
add
cmp
xchg
dec
cmp
pop
mov
mov
mov
ret
leave
mov
pop
jnp
sahf
imul
jae
dec
add
cld
loope
popa
mov
sbbl
aas
cmp
test
add
dec
lcall
leave
xchg
jl
ljmp
mov
les
mov
pop
cli
push
jns
jnp
mov
ret
xchg
sub
xchg
dec
stc
sub
mov
inc
inc
xchg
mov
and
jp
xor
loop
mov
imul
stos
repnz
or
pop
cmp
jmp
jg
out
cmpsl
stc
jge
stos
pop
jb
jae
and
jno
dec
xor
push
loope
cmp
xchg
fnstenv
icebp
lods
mov
xchg
mov
dec
fisttpl
sti
inc
add
leave
cmp
icebp
mov
jno
jnp
push
les
test
shll
push
adc
pop
dec
lahf
pop
xchg
lret
dec
mov
out
jae
inc
dec
add
cmp
sub
dec
ds
sarb
fnstenv
inc
dec
imul
mov
jae
loop
xchg
psllw
xor
scas
ret
jg
pop
mov
shll
incl
ret
xor
cmp
dec
dec
out
jmp
addl
push
mov
mov
loop
imul
cmp
add
rorl
je
je
mov
mov
shrl
call
xor
movsl
out
cmp
dec
mov
fisubs
mov
neg
push
add
xchg
out
idiv
subl
and
mov
popa
xchg
iret
cwtl
xlat
lods
add
jecxz
cmpb
inc
dec
popf
pop
aas
cmpb
mov
idiv
mov
jnp
repnz
lock
or
and
xchg
stc
push
mov
loop
push
inc
xor
and
adc
dec
pop
sti
inc
stc
mov
test
shll
adc
out
in
mov
or
test
pop
mov
push
mov
lock
mov
mov
pop
xlat
xor
ret
mov
xor
lcall
inc
jns
popa
xlat
mov
mov
fs
xchg
sarb
adc
push
bnd
jb
insb
adc
push
push
pop
lahf
or
fstpt
fldcw
inc
inc
jno
pop
add
jmp
and
mov
loopne
out
cmc
shl
repnz
stc
cmp
pop
mov
pusha
jnp
negb
xchg
sub
pop
lea
or
ret
xchg
jmp
mov
in
mov
cmp
push
rcrl
dec
push
mov
mov
imul
rcl
push
jb
sarb
and
inc
xchg
icebp
imul
xor
bound
fidivrs
dec
dec
fiaddl
jg
xchg
mov
lret
or
lret
ret
pop
mov
int
dec
movsb
daa
mov
sarb
sarl
mov
mov
mov
mov
mov
jp
insb
or
subb
xor
dec
orl
adc
cmp
shl
sarl
sbb
xor
mov
test
mov
popf
adc
lret
cmp
adcl
jb
lock
pop
lods
stc
pop
push
loop
xchg
adcb
inc
pop
mov
inc
jle
fldt
and
lock
subb
fwait
jmp
mov
aas
into
push
inc
dec
test
mov
xor
ret
ret
jb
and
push
mov
stc
fs
subl
mov
incb
stc
cmpsb
cli
mov
sbb
popa
fiaddl
into
add
pop
lret
loop
rorl
clc
sbbl
in
movsl
mov
cmp
push
dec
scas
pusha
lock
stos
sbb
inc
or
cld
pop
jb
inc
mov
and
jle
mov
jp
sbb
adc
fisubs
jnp
aad
cmp
push
sub
fisubrs
mov
bound
lret
fwait
jp
xlat
mov
rcll
adc
push
stos
cs
call
or
imul
out
stos
testb
mov
pop
inc
push
int3
dec
dec
mov
ljmp
xor
adc
stos
js
jb
push
popa
call
lahf
lahf
pop
fxam
orl
lcall
loop
lock
xchg
cmp
out
cltd
and
push
or
loope
xlat
inc
jb
stc
sarl
mov
inc
cmp
out
sbb
adc
mov
jb
mov
jmp
cwtl
icebp
dec
sub
cmp
inc
push
addl
lcall
ljmp
enter
leave
mov
ljmp
out
sub
jne
stos
subl
and
jne
mov
out
fldenv
loop
sbb
aas
sbb
jb
push
lret
gs
xchg
or
and
icebp
std
mov
mov
std
jno
mov
pop
in
cmp
stos
push
hlt
fstpt
inc
leave
ds
and
sbb
iret
and
xor
addl
popf
inc
xor
pop
jno
ja
stc
jp
in
pop
dec
lcall
ret
dec
loope
xor
lock
test
inc
fdivs
inc
jno
mov
xor
imul
dec
pop
xchg
pop
and
xchg
dec
mov
lret
icebp
fldenv
cli
daa
icebp
data16
inc
loop
lods
imul
lds
add
arpl
dec
inc
push
adcb
xor
jecxz
clc
adc
pop
ljmp
loopne
cmp
pop
sub
xor
mov
fld1
xchg
lret
inc
inc
icebp
fcmovb
jmp
shrb
cmp
cmpl
inc
mov
and
dec
out
dec
negb
orl
pop
stos
lcall
jp
mov
jnp
mov
jb
sahf
iret
push
jb
icebp
dec
sbb
cltd
xor
jecxz
insl
pop
push
add
xor
mov
mov
mov
jp
out
scas
icebp
cmp
pop
mov
inc
cwtl
sub
add
mov
bound
mov
cld
pop
imul
imul
push
xor
jecxz
inc
or
sahf
fcmovne
xor
jmp
leave
pop
cmp
jae
mov
mov
imul
cmp
xchg
rol
mov
mov
jno
add
or
xchg
cld
imul
sti
xchg
in
mov
or
cli
cmpb
mov
ret
ret
jno
mov
loop
sub
dec
fisubs
cli
jno
lret
xchg
popa
aas
sbb
push
inc
jp
push
jb
jg
ret
rcll
int
xchg
xor
negb
or
push
bound
clc
mov
push
orl
mov
xor
mov
mov
pushf
xchg
mov
or
stc
xor
xor
mov
dec
fiaddl
and
mov
mov
imul
and
jno
out
lret
andl
jecxz,pn
cltd
sbb
xchg
out
xchg
stc
add
jge
subl
popa
cld
aas
stc
subb
jp
loop
push
fmull
xor
jg
or
jb
cld
leave
imul
rcrb
jnp
jmp
dec
lds
fistpl
and
cmp
jne
lret
loopne
jns
stos
lock
pop
and
and
lret
jae
jns
push
inc
in
ret
inc
push
test
pop
mov
bnd
aad
cmp
divb
pop
cmpsl
pusha
xchg
outsl
mov
leave
lahf
pop
lcall
push
jae
cli
xchg
mov
xchg
cli
sub
les
shl
adc
push
fidivrs
or
adc
pop
and
cli
shl
repnz
add
rol
jmp
or
sub
mov
sahf
jp
push
adc
fwait
inc
jae
push
lock
loope
add
push
add
push
stc
mov
bound
ret
imul
pop
xor
rorl
xor
je
stc
pop
insb
outsl
ja
dec
icebp
dec
ljmp
movsl
clc
jl
cltd
pop
stc
mov
xor
daa
repnz
push
mov
lea
popa
sbb
stos
stc
and
jmp
and
in
flds
cltd
inc
adc
std
stc
stc
out
scas
icebp
out
int3
sub
sub
hlt
test
inc
imul
jno
loop
adc
shlb
stos
ficompl
or
ljmp
mov
xor
scas
adc
int
fstpt
movsl
xchg
push
sub
bound
xchg
subb
pop
int3
dec
imul
test
xor
jmp
sub
or
push
mov
repnz
outsb
jnp
xchg
arpl
fnstcw
push
cmpl
popa
arpl
ljmp
mov
pushf
cmp
shl
aam
inc
lcall
mov
sub
rorl
inc
mov
fildl
mov
jb
icebp
sbb
inc
xlat
lock
push
fcmovb
jns
vaddsubps
cld
mov
push
cmc
enter
add
cmp
inc
pop
jle
imul
lods
stos
mov
push
lods
cmp
gs
dec
push
mov
icebp
pop
fildl
scas
popf
leave
inc
xchg
xchg
push
addb
or
cmp
mov
arpl
and
mov
imul
mov
jns
imul
jecxz
sub
mov
lcall
mov
pop
arpl
and
push
lret
pushf
add
jae
push
ret
mul
add
stos
imul
icebp
hlt
mov
stc
push
test
and
mov
xchg
clc
sub
mov
jns
hlt
mov
orb
xor
test
mov
xor
sbbb
push
rcll
mov
decb
dec
out
push
lcall
jp
pop
inc
lea
xchg
arpl
nop
xor
cs
stos
jno
mov
std
xor
sub
cld
arpl
xchg
and
addl
lock
dec
mov
mov
imull
adc
imul
leave
jg
xor
jecxz
jno
mov
cmovno
xor
stos
bound
negb
mov
and
xchg
cli
lahf
sti
jmp
mov
data16
lret
sahf
mov
pop
gs
adc
movsl
mov
ljmp
cmp
mov
stc
mov
sbb
addb
mov
mov
inc
jnp
jns
push
cli
test
fcmovnbe
ss
jmp
in
xor
out
dec
xchg
pushf
push
inc
aam
imul
mov
xor
scas
je
stc
push
lea
fistl
push
jp
test
out
leave
stc
popa
adc
push
push
arpl
je
or
ror
dec
stos
sbb
jo
sbb
roll
mov
jne
scas
add
mov
rorl
jns
test
jne
xor
push
int3
adc
bound
aas
rol
jo
je
push
mov
lds
or
test
cli
lods
mov
jno
push
xor
fs
jmp
cmp
fstps
dec
pop
pop
jle
mov
scas
and
inc
cmp
adc
sbb
push
or
std
rorl
lods
jecxz
test
cmp
ret
inc
pop
ljmp
push
inc
jno
fs
xchg
mov
fldl
es
std
lcall
insb
mov
cmc
inc
jnp
mov
inc
xchg
mov
rcrl
push
jnp
jae
and
ficoms
jns
inc
jecxz
add
roll
cli
sbb
mov
mov
add
dec
rcrl
jmp
xor
xchg
xor
sarb
pop
out
imul
icebp
mov
mov
bound
lods
incl
loopne
cmp
xchg
idivb
inc
xchg
arpl
cmp
or
jne
loope
mov
jns
sahf
dec
rol
mov
mov
test
pop
inc
stc
lcall
lret
xchg
enter
cli
arpl
and
jg
xor
arpl
push
stc
sub
sub
iret
call
mov
push
fistps
push
cmp
sbb
xchg
sbb
jge
jno
xchg
jb
xchg
inc
inc
sub
ret
or
loope
mov
push
inc
pop
adc
push
lea
imul
mov
in
cmp
cwtl
stos
jnp
in
pop
insb
ja
jecxz
pop
push
sub
mov
push
rcl
mov
jmp
push
mov
test
jmp
dec
icebp
addb
rorl
stos
cmp
inc
jge
outsb
out
mov
pop
jo
add
jp
add
jne
mov
insl
repnz
jae
cmc
mov
xor
fstpl
bound
lods
je
lods
imul
loope
jecxz
imul
dec
in
fimuls
mov
subl
das
mov
leave
push
or
jp
and
inc
sbb
pop
inc
inc
jg
bound
sbb
hlt
cli
mov
adcl
push
cmp
inc
adc
mov
push
adcb
stc
icebp
inc
mov
mov
repz
andb
lods
pop
mov
test
pushf
sbb
movsl
jo
jo
mov
adc
xor
test
dec
xchg
cmp
mov
stos
stc
add
jns
shl
mov
inc
pop
je
test
aas
cwtl
cmpb
adcl
popa
cmp
or
mov
push
cmp
loop
pop
fidivl
popa
mov
dec
subb
loop
jns
cld
mov
stos
into
ljmp
lcall
mov
inc
jmp
xor
enter
out
dec
jne
mov
sbb
cmp
mov
add
imul
stos
push
mov
in
xchg
xchg
and
or
cmp
aas
or
stc
xor
pop
add
dec
stos
mov
leave
imul
fidivrl
jns
arpl
je
mov
adc
xor
push
xor
aam
stc
andb
cs
arpl
push
inc
adcl
add
lcall
inc
sbb
loope
xchg
lock
jmp
pop
jnp
cltd
rcll
sub
shr
lock
dec
adcb
inc
ret
loope
adc
loop
mov
push
icebp
inc
pop
xchg
add
mov
ret
push
loopne
xor
enter
xchg
dec
stos
cltd
arpl
out
js
imul
xchg
and
loop
rcr
jo
lret
jmp
add
ror
fldl
push
loope
jnp
xchg
imul
mov
lock
xchg
mov
cli
rorb
cltd
dec
inc
add
pop
in
push
stos
repnz
and
push
cmp
pop
out
sub
xchg
fsubrl
dec
mov
int3
mov
push
pop
cmp
mov
pop
stos
jns
add
mov
imul
cli
dec
subl
lcall
leave
cltd
fisttpll
arpl
je
and
mov
stos
lret
leave
push
dec
shrl
cmp
inc
jp
cld
adc
and
jb
test
pop
int3
inc
imul
nop
add
mov
frstor
testb
push
cmp
aas
xor
mov
jns
jno
xchg
leave
lret
imul
hlt
arpl
stc
std
adc
jp
jae
lcall
push
jns
faddl
imul
in
push
lret
sbbb
jnp
add
jae
fsubl
in
ljmp
int3
jno
cmp
mov
in
xor
add
fmuls
xchg
mov
rol
sub
rorb
imul
pop
inc
mov
cld
imulb
mov
add
ljmp
int3
stos
push
fsts
cli
inc
mov
jae
push
clc
xchg
push
orb
inc
dec
in
pop
aaa
ret
inc
aad
clc
lock
and
shrl
inc
push
cmp
cmp
ja
inc
xor
ljmp
loop
push
lock
xchg
bound
movsl
fsubrs
mov
jns
enter
mov
and
sti
mov
pop
sti
mov
jae
jp
dec
mov
repnz
test
dec
mov
arpl
xchg
lods
push
sub
imul
shlb
shl
xchg
les
mov
fmuls
test
fisubrl
dec
dec
popa
push
add
pusha
cli
lock
mov
push
test
leave
jno
sbb
mov
xchg
lea
leave
bound
jns
or
and
jns,pt
adcl
repnz
dec
ljmp
leave
stos
aas
int
psubd
int3
sarb
pop
lods
out
cmpsl
jnp
inc
or
cmp
leave
dec
stc
stos
fs
popa
cld
push
mov
add
jnp
ljmp
imul
imul
cmp
repnz
and
push
sbb
shl
iret
dec
pop
arpl
mov
mov
push
sarl
xor
insl
stos
addl
shll
sbbb
mov
mov
lahf
repnz
out
aad
xchg
aas
out
pop
jge
ret
mov
inc
mov
popf
cmp
mov
push
lds
lock
inc
icebp
push
rcll
je
hlt
jns
jae
ret
inc
inc
xchg
fisubs
jb
lock
push
add
adc
jb
inc
mulb
lret
mov
push
pop
stos
push
testl
jmp
std
repnz
cltd
pop
in
loope
inc
sbb
iret
mov
jb
sti
mov
ret
int3
rorb
fld
xchg
or
push
push
fadds
das
imulb
mov
fcoms
jp
and
orl
mov
pop
xor
cli
jae
jns
pop
pop
mov
jg
inc
mov
int3
sub
stos
rorb
outsl
ljmp
pop
sub
jl
bound
enter
sub
int3
mov
mov
shll
adc
mov
test
mov
or
iret
loop
shll
jno
stos
lret
mov
cmp
xorl
jne
adc
add
push
and
hlt
ret
fwait
pop
xor
pop
inc
inc
out
fiaddl
mov
aam
push
push
jo
mov
adcl
cltd
cli
orl
jb
cmp
cli
jbe
imul
mov
pop
pop
jg
xor
push
push
dec
lret
cmp
pop
mov
pop
bound
inc
mov
jae
mov
cli
mov
inc
push
sbb
jg
jnp
out
pop
or
imul
ficompl
mov
push
jb
jno
dec
cmp
jg
popf
inc
pop
add
flds
adc
mov
icebp
test
test
lcall
jp
mov
jo
mov
fmuls
inc
adc
xchg
jbe
mov
pop
imul
sbb
insb
lds
flds
outsl
adc
and
sub
add
add
jle
pop
je
push
jle
jnp
inc
xor
imul
sbb
adcb
xor
rcll
fldln2
inc
out
jge
mov
xchg
mov
pop
and
call
stc
sub
push
imul
pop
dec
stc
das
movsl
dec
data16
arpl
repnz
push
jns
xorb
cs
cmp
mov
fcmovb
stos
pop
inc
in
xchg
cli
ret
movb
aad
rorl
stc
loop
repnz
add
xor
pushl
inc
imul
jp
or
push
insb
popf
pushf
add
iret
adc
mov
xlat
ret
adc
popa
pop
lcall
test
add
out
mov
mov
dec
xchg
adc
and
mov
popa
outsb
xchg
fnstenv
clc
adc
ljmp
jae
inc
adc
sti
sbb
cmc
mov
sbb
shrb
push
push
mov
mov
mov
xor
icebp
mov
xchg
imul
int
jne
mov
or
lret
addl
shlb
dec
das
addb
out
stos
ret
mov
pop
cmp
fisubrl
inc
adc
dec
sbbb
fisubrl
push
int3
andb
push
ret
jno
inc
scas
and
jae
rcrl
sbb
jle
mov
mov
aad
push
fnstcw
cmp
lcall
shl
push
decb
xor
loop
fistpl
cli
sti
jecxz
sbb
stc
outsl
push
and
xchg
push
fisubrl
jb
jecxz
imul
mov
inc
ljmp
call
inc
into
fsts
add
stc
xor
roll
xchg
rcrl
cltd
ret
sub
loope
jg
and
pop
mov
bound
call
push
mov
cmc
add
inc
loope
insl
imul
cmpsb
mov
in
jp
pop
bound
dec
hlt
sub
sbb
andl
dec
and
flds
mov
mov
mov
ret
imul
push
xchg
rolb
int3
stos
jno
arpl
lock
add
lcall
loopne
mov
inc
mov
pop
add
xor
mov
and
sbb
add
add
loop
mov
int
add
pop
inc
jge
rcr
dec
xchg
xchg
mov
in
adc
insl
pop
aas
add
jns
inc
mov
stc
sarb
or
icebp
dec
cmp
stc
push
bound
sbbl
cmp
jecxz
pop
inc
push
mov
inc
jmp
cmp
mov
jg
hlt
loope
xchg
cmpl
xor
fisttpll
mov
in
ficompl
and
stos
inc
pop
jg
jae
ljmp
sti
jb
fsubrl
sbb
inc
movsl
dec
xor
mov
sub
int3
mov
adc
add
loopne
insl
mov
sarl
mov
mov
dec
repnz
repnz
mov
or
and
add
mov
jmp
sub
sbb
xchg
xchg
rcll
mov
je
js
mov
adc
insb
xor
shlb
ret
add
ret
pop
fdivs
loop
lret
jae
imul
jno
inc
inc
xlat
sbb
or
mov
test
jle
scas
xchg
lret
lret
stos
jp
mov
mov
sti
dec
jae
dec
xor
adc
loope
xor
pop
jge
xchg
jns
hlt
sbb
decb
dec
stos
cli
test
popa
xchg
movsb
inc
mov
xchg
push
lods
push
lock
jns
add
mov
imul
dec
shl
push
arpl
lock
out
and
lret
lcall
lahf
inc
ljmp
shl
push
int
je
loop
mov
dec
addb
mov
inc
ret
jno
cmp
jg
test
lret
je
cmp
sarl
sbb
inc
outsl
ss
mov
in
pop
jnp
pop
call
or
push
idivl
or
cmpsb
imul
add
roll
ljmp
and
jg
push
mov
push
bound
cmp
jp
into
std
popa
inc
jno
mov
mov
sbb
je
stos
sub
add
add
inc
arpl
ljmp
enter
sti
jb
xor
mov
jmp
out
add
ror
mov
dec
jno
pop
xor
adc
push
mov
test
lret
imul
mov
pop
mov
mov
dec
pushl
ljmp
shl
cltd
xchg
dec
jb
fcompl
imul
leave
fwait
stc
push
jge
dec
jno
cltd
je
popf
rorl
jne
sti
fcmove
loopne
mov
arpl
stos
mov
jecxz
adc
stos
xor
add
cmp
push
movl
jmp
repnz
pop
xchg
je
adc
and
hlt
repz
shl
cmp
push
push
fcompl
jb
nop
jns
leave
hlt
test
stos
inc
lcall
ror
jmp
xchg
shll
ljmp
jmp
sbb
jno
mov
es
lret
push
imul
stos
mov
cmp
jle
call
or
shrl
jae
fnstcw
arpl
popa
dec
ja
in
ljmp
fdivrs
orl
sti
jl
and
cmp
pop
mov
mov
mov
lcall
arpl
cmp
jmp
mov
xor
loope
fcmovb
mov
and
pop
popa
loopne
rclb
or
bswap
dec
xchg
insb
les
mov
sub
sahf
jmp
leave
inc
and
pop
xor
pop
jmp
lods
popf
das
jp
or
dec
push
je
cmc
aam
hlt
insl
cmp
repnz
mov
xchg
sbb
repnz
jmp
andl
push
stc
fnstcw
mov
pop
sub
dec
cmp
jo
lock
inc
mov
out
pop
jmp
bndldx
mov
ficomps
jne
add
cmpl
je
ljmp
pop
dec
add
and
leave
inc
lds
mov
bound
lahf
mov
jne
ffree
mov
lods
mov
xchg
arpl
fldenv
mov
lods
loope
lock
mov
aas
jb
jp
xorl
arpl
lods
jnp
xchg
push
cmp
dec
pop
lcall
push
neg
shll
cmp
sbbl
pop
or
xor
mov
fnstenv
into
pop
std
mov
xor
mov
enter
insl
add
mov
mov
mov
add
lcall
sarl
icebp
push
loope
ljmp
pop
ret
fwait
mov
aas
mov
cmp
inc
cltd
stos
dec
icebp
pop
rdtsc
loopne
adc
lret
imul
inc
cltd
in
cmp
fcoms
cmp
xor
xor
testb
dec
mov
dec
adc
adc
clc
add
lret
test
mov
or
int3
push
adcb
and
push
or
hlt
xor
stos
popa
andb
sbb
lret
inc
lahf
mov
inc
hlt
shll
cmc
scas
cmp
adc
loope
fisubl
pop
mov
scas
jns
outsl
stc
pop
xor
ret
rcrl
sbb
arpl
std
jb
imul
mov
in
icebp
ret
mov
cmp
aaa
sbb
push
xchg
dec
mov
repnz
in
cmp
mov
mov
mov
mov
mov
bound
movsl
pusha
add
xchg
loop
ret
or
push
dec
mov
pop
cmp
inc
push
jb
fidivrl
mov
add
popf
rcll
xchg
inc
cmp
stos
cmc
and
stc
jno
add
pushf
testb
jne
test
xor
sub
aaa
popa
inc
in
in
mov
test
inc
loope
dec
mov
stos
mov
add
cmpb
jle
pop
push
jb
jne
sbb
cmpsl
add
xor
ret
xor
push
leave
in
out
inc
sbb
in
imul
mov
dec
or
jp
add
mov
cltd
xor
adc
popa
add
stos
andb
hlt
mov
in
popf
fsqrt
adcb
jns
xchg
lcall
inc
adc
stc
imul
dec
inc
pushf
sbb
roll
pushf
ret
mov
cmp
xor
push
dec
leave
mov
and
xchg
push
or
mov
jp
cli
pop
pop
push
jno
pop
mov
movsl
and
rorb
xchg
fistps
xchg
or
shl
push
ljmp
mov
xchg
leave
or
or
mov
mov
hlt
fiaddl
stos
ljmp
loop
mov
cmp
push
int
out
ljmp
jg
stc
imul
ljmp
shll
sub
push
inc
mov
sub
cmc
mov
inc
ret
out
mov
dec
aas
mov
push
int3
in
stos
dec
stos
sub
inc
movb
jae
cmp
sub
xorl
out
in
stc
lret
xchg
push
mov
xor
mov
stos
in
dec
repnz
scas
lcall
adc
pop
shrl
mov
fs
adc
fcmovne
push
inc
addb
dec
loop
mov
movups
cmc
jecxz
pusha
dec
hlt
push
mov
jnp
in
xchg
out
ret
inc
mov
jecxz
mov
xchg
sub
mov
outsl
std
ret
jmp
add
cmpb
lret
leave
jns
cmp
adc
lret
pop
andb
mov
cli
sbbl
adc
prefetch
mov
dec
aas
adc
mov
andl
dec
dec
lods
aam
scas
repnz
xchg
call
mov
jb
das
jns
loope
inc
inc
mov
xchg
loop
rcll
dec
shl
adc
mov
mov
push
mov
icebp
push
jmp
push
outsb
jle
jno
aam
jge
inc
ret
popa
insl
leave
inc
and
arpl
fbld
push
in
mov
ret
loope
out
cmp
xor
adcl
cmp
cli
daa
loop
roll
mov
int
jg
cld
inc
cli
jb
loop
mov
fidivrl
pop
push
push
out
js
mov
adc
ficompl
jmp
adc
dec
stos
mov
xchg
mov
inc
scas
mov
out
jle
call
lret
adc
dec
rorb
mov
jmp
pop
loope
into
inc
xor
and
mov
inc
push
pop
arpl
ja
data16
dec
add
cmp
and
lcall
loopne
ret
inc
pop
sbb
arpl
cmp
push
xchg
push
andl
xchg
sub
pop
jns
loop
mov
mov
jge
inc
ret
shll
jo
stos
lcall
jmp
mov
mov
imul
icebp
mov
mov
addl
cmp
fcoml
mov
stc
pop
inc
xchg
cli
mov
imul
ljmp
cwtl
pop
and
lock
mov
mov
loope
insb
ror
xchg
mov
adc
ret
scas
xchg
mov
pop
mov
jmp
aaa
mov
jnp
mov
or
pop
sbb
push
imul
loop
out
mov
call
mov
pop
pop
in
mov
xlat
insb
loopne
sarb
mov
xchg
inc
in
stos
loope
xor
inc
jl
add
jno
jns
xor
daa
or
or
ljmp
cmp
jno
fisttpl
subl
xor
or
cmp
imul
cmp
or
bound
jle
pop
subl
sarb
nop
out
stos
ret
icebp
mov
mov
jnp
insb
cmp
fmuls
and
jp
cltd
out
add
lock
ret
mov
mov
dec
hlt
imul
loop
and
loope
loope
ljmp
lock
jp
inc
ljmp
inc
push
jp
int
in
add
mov
cmc
ljmp
addr16
mov
dec
pop
sub
in
xchg
cli
out
daa
cmp
xchg
inc
movsl
sbb
loopne
mov
push
in
mov
stc
xor
and
insb
inc
fsubs
push
loop
lock
and
enter
mov
jno
lods
dec
adc
dec
push
je
xchg
push
ret
pop
cmp
not
xor
push
andl
add
pop
pop
jp
orl
jp
cmp
jae
leave
sbb
cmp
or
ljmp
mov
xchg
ret
pop
ror
mov
sbbl
sbb
sub
out
movsb
mov
inc
mov
bound
lds
lcall
rorl
loop
mov
push
sbb
or
pop
xchg
cltd
adc
lds
push
pop
mov
enter
xchg
out
add
stos
mov
xchg
jns
xchg
shl
fmull
push
push
adc
loopne
lahf
ds
enter
sub
test
cmp
xor
cmp
xchg
int
je
insb
push
jne
add
inc
sbb
enter
xchg
leave
cmp
fisubs
cmp
mov
jnp
mov
inc
sub
pop
stc
mov
push
mov
dec
mov
cmp
sub
lock
xor
pop
repnz
pop
rcll
add
mov
jecxz
sbb
bound
jmp
mov
popf
insb
dec
dec
and
adc
cltd
lahf
subl
bound
cmp
stos
push
push
fildl
mov
push
xchg
dec
je
xchg
je
cmpsb
inc
rcrb
test
rorl
or
mov
dec
enter
mov
pop
mov
mov
adc
push
fwait
push
adc
icebp
in
stc
dec
push
inc
add
push
jg
jmp
inc
int3
xchg
ret
cmp
int3
ficoml
jno
mov
add
imul
imul
aas
hlt
mov
lcall
sbb
into
pop
adc
push
lret
jno
cmp
jnp
sti
mov
stos
sbb
loop
jg
or
or
retw
and
stos
and
cmp
jne
mov
bound
andl
cmp
push
arpl
inc
das
xor
push
cwtl
fwait
divb
dec
out
xchg
cmc
fldcw
orb
dec
aas
xor
cmp
bound
cmpl
mov
dec
xor
es
dec
pop
jge
sbb
ret
addb
mov
and
adc
xchg
inc
imul
repnz
xor
push
call
or
in
jnp
jae
leave
imul
sub
hlt
adc
fldz
pop
in
sahf
cmp
lods
icebp
ljmp
pop
sbb
mov
scas
leave
mov
or
in
pop
mov
xorl
loope
dec
cmp
lods
adc
mov
leave
imul
enter
cmp
xchg
pop
fisubrl
dec
jmp
jbe
xchg
stc
fsubs
adc
pop
mov
xchg
arpl
sahf
mov
xchg
jnp
in
mov
mov
lcall
adc
xchg
mov
cwtl
jp
pop
dec
dec
ljmp
mov
dec
arpl
cmpl
sub
loopne
lcall
sub
bound
push
cmp
xlat
cmp
xor
sti
mov
leave
and
jae
cltd
xorl
rcrl
in
lahf
test
xchg
push
test
andb
call
xor
sbb
sub
fisubl
lods
xor
mov
mov
popa
jnp
cltd
repnz
push
jle
insb
dec
mov
mov
mov
rorl
cltd
mov
mov
rclb
inc
stos
ret
inc
cmpsb
rcrl
adc
popa
xor
sbb
test
pop
mov
push
adc
mov
fldt
leave
roll
fistpll
jp
fwait
mov
sbb
jae
push
xor
add
les
loop
mov
aas
and
and
and
hlt
dec
inc
xor
cli
out
sub
push
imul
in
jmp
loope
pop
jnp
andl
stos
int3
dec
xchg
lea
imul
push
mov
rol
dec
xchg
icebp
jno
mov
pop
loope
mov
push
test
cmp
lock
adc
adc
inc
jae
std
scas
mov
adc
loopne
mov
push
jecxz
cltd
push
xchg
scas
stos
mov
jno
inc
jne
or
mov
mov
mov
mov
inc
dec
lcall
jg
repnz
jb
mov
mov
ror
fisttps
fucomi
xor
rcl
sbb
mov
mov
mov
roll
in
adc
dec
loopne
lock
jae
nop
test
xchg
push
sbb
jb
add
dec
push
and
mov
pop
fdivs
ret
jp
nop
xchg
sbb
stos
imull
arpl
cmpb
and
pop
and
push
cmp
fs
and
lret
sbb
push
push
fmuls
push
outsb
sbb
cmp
inc
inc
jae
mov
jle
imul
loopne
jae
aad
xchg
jge
aas
jo
jb
xchg
dec
inc
or
or
stos
add
orl
call
icebp
fstps
mov
push
stos
mov
nop
mov
push
pop
cmp
push
xor
hlt
ret
ret
testb
mov
push
inc
sbb
loop
in
add
loop
fsubrs
add
pop
inc
ss
mov
call
mov
push
xchg
insb
lea
flds
stos
orl
adc
or
andb
mov
pop
loopne
or
fisubrl
aam
insl
cld
push
inc
stos
dec
jmp
jp
popa
jae
mov
xchg
test
mov
push
and
jno
loope
xchg
addb
daa
out
adc
enter
movsl
loope
in
ret
hlt
inc
or
sti
xchg
in
jns
pop
xchg
icebp
aam
stos
jnp
imul
mov
out
mov
dec
sub
aam
jno
ljmp
stc
xor
inc
gs
ljmp
xchg
mov
arpl
inc
lcall
orb
icebp
roll
mov
lahf
repnz
rcrb
and
adc
dec
rorl
je
stos
icebp
in
pop
arpl
xchg
rorl
add
data16
jo
jmp
arpl
dec
mov
cmpl
fnstenv
mov
mov
in
loopne
dec
inc
cmc
xor
jg
xorb
mov
loopne
repnz
mov
adc
leave
lods
jno
aam
lret
popa
loop
inc
or
fisubl
mov
pop
bound
stos
dec
cmp
push
push
cmc
dec
mov
mov
mov
pop
jb
cltd
fdiv
lods
lock
stc
in
ret
mov
addr16
mov
dec
jnp
inc
dec
stc
mov
test
jge
mov
inc
mov
ret
dec
cwtl
xor
mov
cmp
mov
dec
pop
insb
aad
out
fsubrs
repnz
bound
jbe
mov
leave
test
mov
insb
rclb
add
push
jne
pop
mov
hlt
inc
mov
cltd
mov
imul
mov
movsl
lret
push
sub
xor
pop
jae
cmpsb
repnz
fs
jno
aad
cli
jns
bound
divb
stc
mov
gs
cmp
add
dec
mov
ljmp
dec
leave
mov
push
aas
out
mov
cmp
jns
sub
aam
jnp
cld
pop
dec
stos
fldcw
cmp
gs
incl
test
in
jecxz
lcall
dec
inc
inc
jns
std
push
xlat
cmp
fsubrs
fs
cli
sbbb
test
sbb
stos
jb
orl
pop
mov
push
fwait
repnz
cli
arpl
sahf
adc
testl
scas
dec
test
in
loope
inc
div
stc
dec
add
mov
inc
popa
pop
or
sub
jmp
jnp
lahf
xchg
in
hlt
mov
adc
dec
and
cs
pop
jmp
movsl
lahf
cmp
insb
icebp
imul
xchg
lock
andb
and
ljmp
push
fs
insb
mov
add
imul
fmuls
pop
sub
sbb
mov
xchg
ret
jp
mov
push
sbb
mov
xchg
pop
inc
push
add
mov
stos
jg
jo
sbb
cmp
cmp
adc
decl
jnp
cmp
sahf
xchg
addb
dec
lock
std
dec
imul
mov
loop
loope
enter
add
jp
shlb
jno
push
in
inc
popa
jnp
mov
jns
mov
icebp
add
out
test
loopne
sbb
loope
or
cmc
jmp
in
and
loope
arpl
pop
pop
xorb
movsl
cld
push
push
sbbl
ljmp
mov
stc
arpl
mov
inc
stos
xor
push
cmp
fidivl
arpl
push
xchg
mov
mov
and
mov
xor
jns
mov
lods
fbstp
pop
jnp
jne
imul
push
rcll
arpl
shlb
mov
jecxz
dec
push
xchg
in
insl
jns
fnstenv
imul
pop
call
jne
add
xchg
ret
shl
movsl
lock
fistpll
mov
int3
fsubrs
fwait
lock
mov
adc
or
arpl
fisubrs
stos
es
or
stc
and
xchg
dec
add
push
push
dec
je
icebp
pop
jns
stc
jp
orl
xchg
xlat
repnz
mov
cmp
sbb
push
mov
mov
sub
adc
sub
jns
xor
cmp
shl
xor
pop
sbb
pop
lret
ret
mov
les
mov
jae
cltd
imul
std
push
jmp
icebp
arpl
out
mov
lock
out
inc
loope
mov
mov
mov
cmp
xchg
xchg
stos
push
push
push
adcb
xor
mov
jmp
pop
test
push
or
sub
andl
mov
lock
stc
sub
mov
jnp
sbb
stos
mov
fcoms
lret
jp
mov
and
dec
inc
fidivl
loope
aad
adc
movsl
mov
push
pop
inc
dec
aam
xor
pop
and
adc
test
inc
xor
jns
arpl
orl
shll
iret
lcall
pop
push
push
inc
repz
js
mov
movsb
cmpb
xor
stos
mov
in
xchg
cltd
sti
push
dec
divb
push
lret
fcmovne
mov
mov
dec
enter
jmp
lcall
sub
xchg
xchg
sbb
jns
xchg
jge
xchg
or
push
adc
adc
mov
loope
in
mov
xchg
mov
mov
movsb
adc
push
jecxz
icebp
out
and
push
jp
mov
sbb
in
xchg
mov
mov
orb
mov
add
push
shll
mov
cli
mov
mov
sbb
test
inc
xchg
xor
lock
pop
push
icebp
jge
inc
test
push
sbbl
cs
mov
and
repz
mov
push
xor
push
stc
sub
and
cmpb
subl
pop
jecxz
test
or
outsl
dec
das
fbld
mov
out
fildll
push
sbb
imul
aad
scas
ljmp
aad
xor
jp
in
stos
stos
ret
push
loopne
imul
sarb
xlat
jns
insb
jp
repnz
cmp
int
out
xor
push
movsb
mov
ljmp
lret
andb
cmp
ds
mov
subb
add
data16
loope
fwait
aad
fistpl
daa
icebp
bound
cmp
loope
dec
add
leave
cmp
test
loope
mov
aam
inc
jno
das
sbb
addb
int3
jno
jns
push
xchg
movsl
inc
jle
sub
mov
iret
fcomps
mov
inc
inc
out
sbb
leave
sbb
fadd
mov
sub
add
dec
stos
fiaddl
popa
xor
hlt
jb
xor
ljmp
inc
fstl
jle
mov
dec
ret
xchg
std
dec
popa
adc
imul
out
xor
push
push
push
jge
stos
ret
fcomi
push
push
jnp
mov
xchg
mov
jno
xor
sbb
lcall
flds
inc
roll
jmp
popa
xor
orl
pop
push
das
lods
adcb
dec
stos
push
test
mov
xchg
jb
repz
adc
mov
mov
jg
and
stos
loopne
jmp
repnz
push
std
adc
imul
ja
mov
nop
sub
xor
jae
push
and
lods
ret
and
or
outsb
cmp
popa
in
pop
mov
jnp
cli
subl
data16
sub
pop
dec
jae
pusha
lret
imul
roll
dec
rcll
rcrl
cltd
orb
sahf
xchg
jg
test
inc
adc
shlb
hlt
jns
mov
dec
jno
loope
negb
xor
add
mov
stc
jns
sti
fimull
fs
ret
aad
lds
adc
jnp
push
bound
popa
mov
loopne
call
jno
jo
insb
and
xor
pop
mov
repz
xor
cmp
inc
out
shrl
mov
jb
mov
adc
mov
lahf
fnsave
ret
xchg
cmp
pop
mov
ret
test
ljmp
and
cli
lret
das
arpl
inc
dec
in
faddl
mov
xchg
lret
push
mov
xor
sahf
mov
jecxz
mov
xor
fldl2t
jns
sbb
mov
stc
push
sub
dec
in
neg
xor
in
cmp
push
add
mov
fsubr
mov
mov
imul
or
imul
mov
add
fdivrs
loopne
fisubs
or
shl
mov
rcrb
and
mov
stos
jns
repnz
sbb
mov
or
insb
rcr
clc
pop
xchg
cli
les
add
test
mov
sbb
icebp
adc
jnp
stc
es
adc
jns
mov
testl
cltd
testb
addl
mov
lret
jb
xor
repnz
shl
cltd
stos
push
lret
inc
mov
push
and
pop
dec
mov
dec
out
mov
push
test
jg
and
xchg
xchg
loopne
ds
and
jae
bound
ja
dec
mov
test
jmp
xor
or
mov
or
imul
fsubrs
cmp
mov
test
dec
fwait
push
cmc
push
cli
aad
fiaddl
xchg
enter
dec
adcl
jmp
fiaddl
fnstenv
mov
mov
push
bound
add
jmp
or
jb
push
xchg
pop
sbb
jno
test
in
and
cmp
bound
cs
repnz
dec
cmpb
fiaddl
cmpsb
popf
rcrl
ret
xor
imul
mov
xlat
lea
loope
xor
int3
mov
cmp
pop
fs
or
sbb
jb
jbe
ret
or
ljmp
leave
dec
orl
mov
stos
sysenter
leave
lods
jmp
pop
call
dec
sbb
pop
mov
jge
stos
push
movsl
je
in
aas
repnz
fnstsw
stos
adc
xor
push
inc
lahf
ja
add
xchg
mov
imul
flds
pop
movsl
ficompl
lock
test
xchg
shll
fs
dec
mov
sbb
out
orl
stos
stc
push
ljmp
lea
lret
lret
xor
icebp
xor
cmp
jno
xor
out
out
icebp
mov
mov
icebp
mov
rorb
iret
or
jno
xor
xor
fwait
repnz
into
mov
jns
in
push
pop
shlb
sahf
stos
cmp
aaa
push
in
jmp
popa
stos
lods
push
repnz
repnz
ljmp
jp
iret
sbb
sub
inc
mov
sub
push
gs
jae
leave
fimuls
xor
loope
jmp
stos
mov
or
fildll
or
jb
lods
jb
call
loope
imul
mov
pop
lods
inc
loopne
jnp
mov
cmp
rcr
fmull
sub
inc
dec
mov
adc
jmp
stc
adc
test
dec
stos
cli
shlb
sti
xor
inc
lods
sbb
ret
sub
in
fldcw
stos
add
icebp
mov
jnp
in
sub
push
inc
cmpl
push
jle
leave
in
ret
xor
adc
frstor
dec
add
lds
mov
dec
movsb
lock
loop
cli
adc
mov
stc
icebp
mov
repz
jnp
pop
xor
addr16
faddl
stc
xor
add
jno
repz
pop
or
ret
fistpl
add
mov
leave
xchg
mov
cmp
lret
stc
popa
inc
std
imul
cmp
sbb
bound
cltd
aad
jge
pop
test
rorl
std
fcmovnb
jp
jg
push
mov
xor
jo
mov
shrb
repz
jge
or
jp
popa
mov
jns
inc
jle
lret
push
stc
negb
inc
test
push
call
inc
jo
rorl
jb
adc
push
jmp
push
xchg
clc
dec
ret
xchg
sbb
dec
sbb
jns
add
jno
push
push
std
stos
shll
push
data16
sub
jno
addb
jae
push
roll
or
jmp
fdivrs
loopne
lahf
or
or
mov
mov
mov
and
cmp
aas
dec
inc
mov
and
roll
lock
mov
sti
test
adc
mov
shl
and
and
jl
mov
out
int
xchg
cmp
imul
mov
sarb
mov
adcl
xor
ljmp
pusha
data16
je
lods
popa
jb
fldcw
pop
int
push
cmp
jae
fdivs
insb
ror
jno
inc
xor
jo
shrl
cmp
xor
addr16
pusha
xor
jl
xchg
mov
mov
mov
mov
xlat
jae
or
lock
fabs
mov
xorb
pop
lret
repnz
das
and
pop
inc
mov
add
push
jae
jp
and
adc
lods
xor
inc
cmpl
js
inc
leave
pop
mov
mov
xchg
outsl
jge
push
fwait
jmp
sahf
scas
pop
loopne
loope
stos
and
or
lcall
jnp
scas
add
xor
ljmp
loop
pop
movsl
push
cltd
mov
rorl
cmp
jae
loope
popa
push
rcrl
xor
outsl
pop
lods
shll
add
and
dec
xchg
daa
inc
sbb
and
out
cmp
mov
fcompl
repz
sub
dec
shrb
orl
das
icebp
mulb
jne
jge
cmp
bound
mov
enter
jb
nop
xchg
dec
idivl
cld
inc
mov
outsb
mov
ljmp
fsubrs
cld
lret
int
push
stc
aam
add
jno
ljmp
push
jmp
jp
mov
incl
jnp
aad
aam
outsb
xchg
in
jno
into
aas
and
imul
lret
dec
fsubrs
shll
int3
pop
pop
leave
jno
cmc
cs
or
push
dec
icebp
in
movsb
pop
push
test
outsl
cmp
aad
push
ret
cli
cmpsb
stc
test
xor
out
xchg
test
icebp
add
adc
movsl
call
push
movsb
sbb
lret
dec
pop
ret
icebp
jo
popf
out
jno
adc
repnz
and
mov
gs
and
cwtl
xor
and
xchg
mov
dec
xor
adc
js
int
js
pop
sti
xchg
cltd
sbb
inc
das
mov
nop
dec
push
or
icebp
mov
and
dec
mov
xchg
xor
stos
aaa
scas
and
xor
inc
jmp
inc
dec
loopne
stos
pop
or
sub
pop
push
enter
xor
inc
xchg
subl
jg
leave
shlb
aaa
fldl
aad
cmp
push
and
xlat
inc
adc
dec
leave
mov
cmp
mov
fisubrl
adc
xchg
adc
movsb
jno
nop
cmp
shl
aas
mov
mov
cltd
icebp
adc
mov
xor
in
xor
pop
aas
inc
inc
mov
and
stos
loope
jp
xadd
icebp
jg
andl
fmull
xor
repz
xchg
hlt
inc
stos
jp
std
push
jae
das
push
push
jno
inc
setae
mov
sti
test
aaa
jne
push
loop
andl
jmp
imul
pop
xorl
add
lcall
rcrb
dec
cmp
cld
dec
dec
icebp
sub
jnp
sbb
inc
cli
xor
mov
mov
leave
mov
inc
dec
jge
bound
ret
mov
pop
push
add
push
cmp
dec
inc
mov
test
add
loopne
and
hlt
mov
addl
cmp
test
jmp
imul
or
mov
jge
xchg
adcl
add
leave
inc
shrl
mov
jmp
shll
pop
lcall
fbld
test
and
jp
leave
cmc
jmp
testl
xor
iret
pop
pop
stos
jne
bound
or
imul
push
mov
bound
or
clc
mov
loope
jb
push
push
add
jp
stos
push
call
mov
outsl
jbe
pop
ret
pop
cmp
leave
shrl
push
jnp
or
add
jns
arpl
pop
sarl
push
mov
push
cli
fists
push
adc
into
xor
jns
divl
testl
sbb
mov
push
dec
in
and
pop
and
icebp
arpl
jnp
pop
imul
and
jle
mov
test
fidivrl
mov
mov
stos
inc
js
icebp
jns
push
jne
sti
loop
andl
pop
loopne
shlb
call
dec
inc
sti
bnd
pop
stos
jnp
rcl
dec
std
xor
jns
test
ret
or
bt
lret
sbb
cmp
mov
xchg
lret
lock
adc
test
enter
popa
mov
out
and
dec
push
stos
jns
fsts
dec
shld
push
and
cmp
daa
insb
push
loop
and
pop
std
mov
sbb
push
mov
xchg
imul
decb
xchg
movsb
stos
mov
hlt
xor
jmp
lret
lcall
mov
jmp
mov
inc
popa
aas
fwait
mov
and
outsl
inc
sbb
rcrl
dec
jae
aaa
movsl
or
mov
cmpsl
pop
lods
aam
repz
cmc
fldcw
jmp
cwtl
xchg
pop
popa
jp
ljmp
sbb
popa
push
out
mov
loop
lcall
ret
jae
dec
test
js
jp
mov
fdivl
inc
mov
and
jg
mov
fs
dec
rol
sub
xchg
pop
std
or
sub
ret
pop
add
fnstsw
mov
jp
pop
ret
jecxz
movsb
mov
loopne
bound
jns
push
mov
push
icebp
ljmp
mov
in
mov
das
fwait
inc
out
inc
push
xchg
ljmp
stc
shl
dec
orl
mov
jp
cmp
add
xor
inc
std
or
xchg
pop
push
xor
cmpsb
lret
push
insb
outsl
jge
dec
mov
movsl
orb
daa
je
cld
addr16
mov
mov
push
fldt
leave
or
inc
jae
jb
cmp
rorl
icebp
sub
lcall
cmp
mov
pop
mov
inc
jmp
test
mov
xchg
fnstenv
pop
push
push
stc
lea
mov
add
dec
sub
rcrb
rol
push
cmp
xor
out
jmp
cli
ret
mov
xchg
jno
pop
push
jle
call
icebp
and
inc
imul
add
push
test
jnp
insb
jb
mov
xchg
mov
add
lods
fimull
pop
es
push
hlt
jmp
adc
arpl
dec
and
lock
mov
shrl
js
mov
jge
jno
push
in
outsb
mov
popa
mov
ret
cli
lahf
xor
add
popa
jg
fnsave
cmp
mov
xor
je
repnz
push
addl
cmp
ret
mov
rolb
mov
cmp
mov
xchg
popf
nop
xchg
cmp
mov
loope
fdivl
inc
out
pop
sbb
hlt
jns
ret
rcrl
stos
imul
filds
mov
xor
stos
std
inc
mov
jns
mov
ds
xor
cmp
mov
stos
imul
jmp
push
sub
inc
jno
iret
jg
fbstp
mov
jle
cli
fimull
xor
test
iret
cmp
shrl
mov
inc
ja,pt
test
cmp
jae
ficoml
stc
inc
not
fnsave
dec
jle
mov
mov
jecxz
inc
je
pop
lahf
or
test
inc
jle
dec
ret
dec
ja
repnz
lcall
addl
ret
push
mov
or
roll
leave
mov
mov
in
jmp
xchg
mov
xor
and
and
test
xchg
dec
mov
pop
fisubl
mov
ljmp
sub
inc
popa
test
adc
push
sub
loop
lock
mov
pop
nop
lock
xor
cmp
mov
mov
fmull
xchg
call
cli
adc
dec
mov
jbe
mov
mov
fadds
shll
lret
mov
in
lret
mov
and
aad
sti
test
sti
je
xor
out
popa
lret
lds
jae
bound
test
push
inc
jns
jp
pop
stc
inc
adc
fwait
mov
mov
xchg
jmp
inc
fcoml
mov
sbb
cmpsb
arpl
lret
jp
fndisi(8087
pop
inc
sbb
inc
cltd
mov
push
filds
ret
cmpb
cmp
pop
mov
add
outsl
repz
mov
test
inc
mov
jb
and
pop
shr
aad
xchg
pushf
pop
pop
push
jp
loop
jecxz
lcall
sbb
insb
jp
dec
lock
stos
mov
sarl
jns
jecxz
xor
insb
xchg
adcl
lods
cmp
jns
into
mov
pusha
mov
sub
pop
lret
je
fwait
out
sub
out
lahf
mov
outsl
ljmp
mov
mov
or
mov
inc
pop
mov
jns
je
into
aam
mov
cld
loopne
jnp
bound
xlat
stos
push
stos
inc
and
jge
add
ret
dec
mov
pushf
jno
dec
stc
sbb
or
and
ljmp
xor
pop
popa
clc
shlb
mov
fidivrl
sahf
mov
add
pop
dec
mov
jnp
subl
xchg
xor
es
stc
ljmp
loop
push
or
jg
dec
jno
adc
stos
mov
fsubrs
shll
loopne
scas
mov
loop
fchs
add
sbbb
stos
sbb
sbb
or
add
lcall
jg
sbb
loop
adc
push
mov
insb
xor
push
jmp
imul
mov
inc
popa
stos
call
xor
and
push
rcrl
call
dec
fmull
dec
insl
cmpsb
flds
mov
call
inc
push
call
xchg
push
pop
hlt
mov
inc
push
test
xorl
sbb
shl
lds
jno
movsl
stc
sbb
mov
add
jns
inc
pop
mov
push
fs
xor
pop
cld
loope
xor
pop
jle
stos
insl
jno
lret
xor
iret
jmp
data16
pop
repnz
mov
push
mov
imul
push
shrb
add
xchg
mov
mov
push
inc
inc
mov
dec
scas
and
dec
rorl
jns
or
hlt
jae
cmp
sbb
cltd
xchg
imul
repnz
bound
ret
push
adc
mov
and
dec
inc
push
lcall
pop
test
xchg
dec
fwait
stos
rorb
inc
lods
push
mov
outsl
jmp
xor
loope
mov
and
lret
fnsave
xchg
pop
jno
lods
cmpsl
vcvttss2si
pop
outsb
ret
idiv
or
icebp
jl
leave
mov
jb
jbe
add
and
ret
push
add
cmp
ret
jecxz
sbb
imulb
imul
sbb
jg
and
test
sahf
lcall
fildll
fidivs
jae
jbe
leave
loope
or
iret
or
inc
popa
mov
je
mov
mov
fstps
lcall
push
xchg
jp
dec
jecxz
addl
and
adc
add
imul
shll
fisttps
out
xor
xor
push
adc
or
addb
adc
xchg
jno
cmpsb
inc
imul
arpl
mov
ljmp
outsl
mov
lret
xor
sbb
arpl
orl
imul
testl
ljmp
mov
shll
jecxz
lods
ret
icebp
push
jno
mov
mov
jmp
mov
lock
fsts
push
xor
enter
xchg
call
rol
cs
cwtl
cmc
daa
cmp
push
push
imul
cld
stos
xor
inc
sahf
stc
cmpsl
inc
mov
pushf
xor
mov
and
call
mov
lds
jge
jmp
je
pop
pop
pop
fsubrp
jb
dec
mov
into
cmp
cmpb
dec
stc
aas
mov
adc
jno
pusha
and
fildll
adc
repnz
ror
scas
and
xlat
nop
pop
push
mov
stos
imul
das
mov
cltd
or
jne
leave
dec
lret
stos
cmp
roll
pop
mov
xor
cmp
adc
fimuls
or
mov
mov
push
xchg
divb
cltd
flds
cmp
fistpl
cmp
jg
testb
ret
test
leave
cltd
inc
fisubrs
and
and
or
mov
sbb
fildl
xchg
jp
cmpb
jle
icebp
in
pop
dec
dec
inc
gs
dec
and
popa
inc
pop
adc
lret
mov
dec
push
in
add
leave
sbbb
xor
cmp
imul
jbe
arpl
test
pop
or
adc
sbb
cmp
mov
icebp
xorl
mov
dec
lret
or
jmp
ret
iret
and
sbb
cmpsb
in
ljmp
add
jno
xor
pop
push
je
lods
stc
sub
divb
or
xchg
lahf
jge
pop
ja
cmp
mov
push
mov
mov
adc
icebp
jae
cmp
mov
test
sahf
and
jno
jg
dec
mov
jp
aas
cld
icebp
shll
cmpsb
sub
dec
mov
mov
mov
jne
rorb
or
pusha
out
jne
push
mov
and
cmp
ficomps
jae
xchg
pop
push
dec
rcll
cmp
shrl
ds
mov
movsb
push
push
xchg
jge
pop
leave
add
mov
aam
add
aam
jae
push
xchg
pop
lcall
mov
push
lahf
jo
pop
jno
sub
mov
in
inc
out
jns
push
jmp
xchg
pop
stos
jg
loop
jae
div
popa
push
add
mov
and
jae
xor
xchg
daa
push
je
das
jb
xor
idivb
cmp
iret
enter
stos
rcrl
imul
cld
bound
cmp
xlat
mov
cmc
adcl
out
fildll
shll
ret
dec
push
dec
and
xor
xor
and
xchg
sar
push
loope
xor
push
push
pop
sub
add
ficoml
std
or
popa
test
dec
push
xor
sub
xchg
xor
sahf
cmp
cmp
pop
mov
push
js
cltd
jae
lods
faddl
lcall
jge
fwait
bound
mov
pop
mov
sbb
cmp
bound
loop
inc
adc
fwait
cmp
ret
test
pop
push
adc
sub
add
ret
lock
dec
stc
dec
jb
loop
out
inc
dec
pop
mov
pop
stos
inc
aam
pop
lods
and
jns
cmp
pop
add
inc
insl
adcl
mov
dec
subl
int3
xchg
push
rcr
inc
pop
roll
ljmp
fs
roll
shlb
ret
add
arpl
push
jp
sarl
pop
fnstenv
dec
xor
sarl
cli
adc
test
push
add
mov
in
aam
rcr
rorl
push
sbb
push
jg
xchg
jns
cmpsb
ret
cmp
mov
movsl
or
mov
leave
push
shl
pop
inc
dec
mov
lret
mov
addl
cmp
adc
dec
es
cltd
sbb
dec
or
shll
ret
push
loop
push
push
xchg
mov
pop
lcall
popa
loopne
adc
jmp
jno
pop
sbbl
leave
push
mov
ljmp
adc
fildl
dec
pop
push
sub
xchg
sbb
dec
xor
enter
stos
cmpl
fidivl
or
mov
sbb
xor
add
jo
jmp
addb
jg
dec
std
fwait
mov
push
mov
aam
mov
mov
push
shlb
stos
idivb
cmp
ljmp
xchg
dec
in
fsubrl
in
xor
enter
imul
push
push
push
inc
dec
int
mov
int3
ror
or
push
test
or
hlt
in
mov
clc
xor
cmp
cli
sub
lock
roll
cmpl
adc
and
push
sbb
fxch
dec
ficompl
and
mov
push
dec
inc
jl
mov
icebp
xor
mov
cmp
lock
sbb
ja
push
mov
xor
cmp
jno
pop
push
push
ret
ret
imul
cmp
and
cmp
aad
stc
dec
fwait
bound
inc
je
insb
pmuludq
jno
mov
dec
mov
aaa
imul
jae
inc
cmp
stos
mov
push
and
mov
sar
roll
cmp
add
mov
jg
sbbb
jns
jp
mov
sub
push
std
ror
mov
cmp
lret
jnp
add
mov
inc
pop
in
lock
dec
adcb
xchg
add
push
outsb
add
push
xchg
fcomps
clc
mov
jge
and
or
xchg
enter
cmp
cli
or
nop
dec
inc
dec
push
xor
push
add
rolb
cmp
push
in
ret
mov
repnz
ljmp
jle
loope
xor
insb
inc
jae
sbb
pop
push
mov
dec
mov
mov
xor
sbb
fbld
sub
leave
mov
cli
gs
adcl
push
push
ljmp
shr
cwtl
jecxz
or
addb
std
sarb
arpl
add
mov
hlt
lock
inc
in
rolb
cmpb
test
pop
inc
xorb
inc
dec
outsl
fcoml
jge
xchg
pop
mov
inc
leave
ss
mov
test
stos
ljmp
cli
sbb
call
addr16
jb
lods
ficompl
inc
jnp
push
inc
sti
out
and
inc
mov
ret
xor
sbb
sub
xchg
test
add
lret
popa
lahf
jp
xchg
stos
dec
xchg
loop
repnz
mov
cwtl
or
xchg
xorl
inc
jb
ret
ds
int
dec
lcall
jno
lret
adc
adc
lea
push
ret
jne
imul
xchg
dec
xchg
insl
mov
ljmp
cltd
outsb
loop
popa
jns
cmp
out
pop
add
bound
jp
fadds
cmpsl
shll
insb
outsb
sbb
cmp
jo
orl
movsb
lret
cmp
xorb
push
sbb
ljmp
ficoms
aad
arpl
cmp
aaa
int3
loope
mov
lods
push
mov
out
jns
cltd
inc
ret
xchg
sub
or
lret
in
xchg
mov
bnd
mov
dec
repz
rcll
xor
jns
inc
mov
hlt
pushf
jae
jmp
ret
out
jg
xchg
mov
test
in
adc
cmpsb
je
aas
add
dec
mov
popa
push
cli
mov
cmp
cmpsb
popf
ret
imul
xchg
bound
jne
hlt
mov
cmp
leave
out
stc
ret
out
lret
mov
pusha
call
xchg
cs
lock
mov
ljmp
shll
or
and
xchg
out
mov
mov
test
cli
mov
sbb
inc
inc
ret
dec
mov
fidivrs
mov
xor
rcll
add
inc
add
cltd
push
cs
mov
dec
stos
sbb
jmp
orl
pop
mov
je
push
fsubl
jg
xor
enter
lods
cmpl
jecxz
hlt
dec
push
ret
mov
push
mov
mov
imull
das
fdiv
add
lret
leave
sbb
inc
pop
jecxz
mov
mov
cmp
popa
cs
imulb
cs
leave
cmp
jno
or
insb
pop
stos
adc
push
xchg
and
xchg
sbb
ret
cmpb
push
popa
inc
jmp
xchg
adc
jge
inc
loopne
stos
push
xlat
add
xchg
xor
gs
push
fsubrs
popa
inc
fwait
icebp
stc
fimull
lock
cli
enter
icebp
rcll
out
sbb
loope
xor
xchg
push
push
pop
lods
inc
loop
ss
in
push
loopne
cltd
enter
stos
addl
xor
loope
xchg
dec
decb
push
fidivrl
andb
pop
mov
imul
divb
ret
addl
mov
sbb
bnd
mov
popa
test
loop
arpl
add
mov
cmp
cmp
mov
insb
stc
and
mov
dec
xor
repnz
sub
cmp
dec
xor
ret
fldl2e
dec
cmp
sar
movsl
push
add
loope
fdivs
lret
cmp
movsb
cltd
imul
cmp
call
xor
popa
adc
repnz
das
call
push
lock
out
ds
je
cmpl
lock
cmp
lods
div
loope
jns
repnz
push
in
leave
add
mov
jno
leave
dec
out
ljmp
jmp
mov
loop
int3
jnp
arpl
test
cmc
or
jnp
cld
xor
mov
mov
jae
push
or
add
loope
repnz
pop
add
popa
mov
in
stos
roll
icebp
std
stc
mov
fldt
jg
ljmp
ljmp
rclb
xchg
lahf
mov
fs
out
ljmp
push
in
je
push
shrb
cmp
sub
and
cli
cmp
hlt
mov
or
loope
jg
mov
mov
jae
mov
push
inc
data16
sub
movsl
mov
cmpsb
or
cltd
ds
dec
stos
and
jg
add
mov
and
mov
inc
mov
in
dec
fcomp
aam
imul
mov
mov
aaa
fldl
arpl
jb
enter
jp
out
pop
lock
mov
pop
in
stos
bound
cmpsl
lahf
ljmp
jge
jecxz
cmp
rorb
loopne
stos
das
movb
inc
push
sbb
push
xor
shlb
pop
jecxz
inc
andb
stos
push
mov
xor
loopne
lock
stc
pminub
ljmp
lret
incb
stos
arpl
push
dec
cmp
xor
mov
outsb
das
cli
sarb
data16
xchg
bound
lahf
arpl
mov
xor
cmp
fs
inc
and
repnz
nop
int
test
fcomps
imul
push
push
and
aad
jg
lds
xor
mov
mov
dec
ret
xchg
mov
lods
push
mov
xchg
scas
enter
pop
sub
and
out
mov
mov
cmc
jmp
push
hlt
in
adc
jno
jns
es
mov
cmp
rcll
mov
loope
jp
dec
add
sub
jae
fsubrp
add
loop
stc
xchg
leave
insb
pop
mov
ret
leave
mov
mov
mov
mov
mov
cmp
jg
or
cld
popa
lcall
stos
xchg
dec
mov
fcom
ljmp
sti
dec
jge
jmp
and
sub
jae
rorw
xor
jmp
pop
sbb
push
jb
or
jp
mov
outsl
mov
sub
jns
mov
inc
pop
sub
inc
hlt
pop
mov
push
cltd
lock
fildll
mov
xchg
jg
rol
dec
inc
into
sub
lock
xor
sarb
popa
loop
jmp
imul
jns
dec
adc
out
mov
into
and
push
popf
mov
jo
clc
push
mov
pop
repnz
xor
or
stos
add
cmp
and
das
jnp
scas
icebp
sub
or
lock
stc
out
jmp
pop
idivb
mov
leave
test
xchg
dec
push
arpl
shll
add
pop
inc
mov
jno
xchg
std
stc
mov
std
mov
ret
xor
mov
lcall
dec
clc
jnp
jp
adc
pop
xchg
div
jno
mov
cmp
sbb
mov
mov
fadds
sub
jno
lcall
aad
cmp
das
add
mov
sbb
inc
and
cmp
arpl
xor
sbb
inc
rorl
leave
push
push
pop
pop
aas
mov
mov
and
add
jae
or
les
stos
adcl
ja
jae
cmp
push
icebp
das
shlb
mov
or
inc
ficoms
add
mov
ret
mov
push
cmp
cmc
pop
dec
inc
mov
mov
pop
imulb
xchg
loope
jp
add
xorb
mov
cli
xor
jne
push
mov
cli
push
jmp
mov
xchg
pop
test
mov
mov
scas
dec
test
andl
lods
mov
int
jg
dec
mov
push
xchg
dec
xchg
or
fdivl
cmpsb
insb
jg
mov
jb
shll
or
dec
leave
test
and
dec
xchg
ret
dec
dec
jge
addb
sub
ret
mov
dec
rcl
inc
mov
out
mov
pop
aas
mov
in
test
rorl
cli
rcl
lret
adc
pop
push
test
test
into
aas
xchg
inc
jb
es
call
add
aad
stc
sub
jnp
mov
xor
pop
out
dec
imul
lods
pop
jb
push
inc
mov
xchg
mov
jecxz
xchg
push
stc
xchg
mov
or
fdivl
ljmp
mov
roll
jecxz
jnp
fsub
push
mov
or
xor
call
stos
cmp
je
and
push
je
cld
adc
push
adcl
jns
imul
in
jnp
cmp
jno
arpl
leave
jecxz
push
sub
adc
outsb
mov
inc
leave
test
arpl
popa
cmp
dec
rcrb
rcll
mov
je
push
adc
jns
and
add
fidivl
adcl
stc
push
stos
fnstcw
ret
lods
xlat
mov
clc
push
orb
xchg
cli
icebp
jns
dec
lcall
stc
lret
int3
xchg
push
mov
aam
icebp
adc
fidivl
mov
xor
sbb
push
cmp
mov
int3
loope
outsl
xchg
xor
xchg
arpl
add
in
mov
mov
out
xor
mov
sbb
ret
lea
mov
cmp
xor
sbb
repnz
rcrl
imul
inc
outsb
cmp
aaa
mov
sbb
icebp
sub
ror
or
or
dec
lods
fwait
inc
inc
xchg
incl
inc
jg
fs
test
rcll
lods
lret
fcoms
mov
jae
xchg
ljmp
dec
push
aas
xchg
inc
in
shl
add
jp
mov
movb
and
sub
dec
pushf
mov
cli
sub
scas
add
mov
xor
inc
mov
cmpb
cli
lea
pop
push
je
das
cmp
imul
mov
push
jae
mov
mov
sbb
sub
sbb
test
push
xor
loop
xor
loope
dec
cmp
pop
pushl
bound
sub
xchg
mov
xor
jp,pt
loope
fsubrl
popf
cmp
ljmp
aaa
dec
xchg
add
push
xorb
leave
mov
loope
cmp
mov
jb
imul
push
cmpsl
lods
sub
lock
loope
jle
dec
inc
test
push
movsl
int
push
pop
outsl
mov
pop
rcrb
flds
and
xorl
ret
xchg
adc
mov
stc
mov
lret
jg
test
ljmp
stc
or
je
test
inc
mov
mov
je
dec
cmp
mov
mov
xchg
jp
push
add
jnp
popa
jns
int3
mov
test
fsts
xchg
pop
mov
out
es
and
and
adc
call
dec
iret
arpl
jg
popa
inc
ret
lahf
jp
test
sbb
cmp
jae
lcall
pop
subb
cltd
loop
jb
mov
dec
int3
mov
cmpsl
int3
add
outsl
xor
ljmp
xor
inc
adc
and
sub
jns
xor
movsb
jbe
mov
mov
popf
loop
mov
ret
test
test
cwtl
lods
adcb
ja
jnp
xchg
cmpl
cmpsl
out
cmp
rorl
inc
pushf
jae
lock
or
mov
fsubrs
xchg
xor
or
cli
arpl
mov
jns
stos
mov
test
mov
scas
cmp
mov
repnz
dec
mov
lret
jmp
cli
cltd
ljmp
mov
mov
add
in
ror
jbe
inc
push
xchg
ljmp
xorb
inc
das
mov
loope
cmp
cmc
scas
add
loop
imul
sbb
punpckldq
adc
xchg
aas
cmp
addl
stos
xorb
je
daa
std
adc
aas
mov
std
aam
jp
inc
incl
mov
inc
orl
sbbl
out
push
push
repnz
fisttpl
popf
mov
fcoml
lret
ds
lods
leave
mov
mov
arpl
aas
stos
or
imul
std
test
and
jmp
mov
stos
mov
ror
out
mov
adc
cli
inc
sar
inc
unpcklps
dec
cmp
cli
ret
hlt
push
mov
pop
cmp
addr16
fldenv
stos
pop
pop
adc
push
fidivrl
out
cmp
add
jno
fxch
jmp
and
jnp
loope
roll
mov
cmpsb
inc
pop
sub
stos
xor
scas
push
add
repnz
or
push
icebp
int3
adc
lret
xor
loop
movsb
add
jmp
imul
sub
and
movsl
hlt
add
mov
ds
push
in
mov
jne
rolb
dec
jp
xor
xor
and
orb
popa
mov
in
stc
stos
decl
push
inc
lea
testb
je
testb
sti
jmp
ss
jnp
and
mull
fs
cmc
cmp
dec
stc
fidivl
rol
jno
mov
jo
clc
pop
mov
iret
inc
cmp
ret
stc
mov
sbb
int3
arpl
pop
mov
in
mov
inc
mov
push
inc
and
pop
loopne
push
clc
in
mov
cltd
jecxz
insb
cmp
and
sarl
std
fstpl
sbb
jmp
daa
jge
dec
sub
cwtl
adc
jecxz
insb
ret
jecxz
push
push
jg
popa
mov
testl
out
jmp
rcl
push
dec
xchg
add
fldcw
enter
add
push
mov
repnz
push
mul
lods
push
fmull
sub
repnz
lret
pop
loop
lret
mov
jo
mov
dec
in
lock
fdivs
daa
out
fstpt
icebp
push
jmp
mov
add
popa
cmp
xor
add
add
shr
sbb
decb
decl
jns
xchg
adc
shrl
mov
mov
dec
insb
test
mov
arpl
pushf
test
rcll
mov
out
jge
sbb
pop
push
fistpll
xchg
lret
mov
dec
jb
out
sti
clc
aam
push
rolb
pop
and
push
add
andb
icebp
mov
scas
jno
cltd
dec
cli
inc
gs
mov
mov
test
repnz
mov
mov
and
jns
out
mov
pusha
push
inc
cltd
dec
xchg
pop
ret
repnz
out
adc
fisttpll
sbb
lods
pop
xor
imul
cmpb
jmp
mov
jno
cli
iret
jnp
loope
mov
cmp
xor
push
jp
pop
xlat
xchg
jle
leave
popa
insl
stos
lds
cmp
add
stos
mov
jecxz
jnp
in
push
popa
sarl
inc
jp
push
pop
add
fisubrl
test
mov
stos
popf
xchg
shrl
inc
jae,pt
insb
push
mov
dec
icebp
mov
adc
sub
mov
enter
jb
cli
dec
lret
dec
inc
sub
ret
ja
arpl
lret
mov
mov
jb
mov
imul
mov
into
mov
lods
dec
cmp
mov
cmc
fmull
cmp
popa
xchg
mov
loop
mov
mov
mov
adc
icebp
xor
pop
pop
jns
pop
jnp
ret
jecxz
xchg
sbb
shl
xchg
mov
xchg
loope
popf
insb
pop
cld
clc
ret
leave
insl
add
loop
aas
pop
pop
xor
arpl
jns
decb
repnz
mov
add
outsl
lods
and
mov
mov
mov
cmpb
jp
bound
loope
ret
sbb
cmp
aas
xchg
cltd
mov
std
hlt
mov
bound
xchg
sbb
push
inc
inc
mov
xchg
and
repnz
test
pop
pop
mov
lcall
push
jecxz
and
and
mov
push
jb
insb
ljmp
mov
std
mov
dec
mov
jns
ljmp
loope
pop
xchg
dec
add
hlt
xor
xor
jg
subb
sub
mov
enter
push
testb
sti
pop
lods
add
sub
and
or
es
cmpl
sbb
or
ret
sub
pop
xor
mov
stos
ljmp
dec
out
xchg
loopne
aas
sbb
push
cmpb
stos
mov
jns
push
push
lods
mov
jecxz
stc
xor
leave
jae
cltd
mov
pop
fisubs
and
cmpsb
inc
mov
mov
loope
jns
cmp
mov
stc
push
push
and
lea
shrl
sub
ja
sbbl
adcl
pop
xchg
popa
jge
ret
dec
fldl2t
faddl
cmp
lock
test
insb
pop
test
mov
mov
orb
inc
mov
rolb
loopne
mov
repnz
cmp
pop
shrb
dec
adcb
fstpt
icebp
cmpsb
jmp
adcb
in
clc
dec
pop
mov
add
mov
mov
push
xchg
ljmp
pop
xor
lods
xchg
push
mov
push
add
xor
popa
outsl
test
xor
mov
jp
dec
loope
cs
pop
adcl
dec
lods
imul
scas
ret
mov
cld
jmp
dec
fidivrl
xor
ljmp
std
push
add
leave
inc
mov
and
in
test
shll
or
test
mov
cmpsl
lcall
inc
mov
jl
and
sahf
pop
push
jns
das
cmp
inc
add
jecxz
jb
xor
and
fxch
add
enter
orb
xor
test
mov
jno
or
jle
inc
ljmp
lods
mov
lret
push
mov
mov
and
dec
cltd
mov
imul
imul
lret
loopne
leave
rcrl
and
mov
filds
pop
jae
bound
mov
popa
fisubs
lods
mov
adc
mov
leave
clc
sti
pop
xor
je
jle
ror
test
push
js
stos
mov
dec
pop
stos
in
into
jb
push
enter
and
mov
push
leave
pop
and
lret
ret
loop
rorb
out
stc
shlb
add
icebp
xor
leave
pop
sbb
ljmp
and
cmpb
out
mov
mov
fsts
xor
adc
ja
shr
push
push
mov
push
push
mov
imul
cltd
js
push
xchg
sti
mov
sti
jge
into
mov
and
inc
mov
sar
push
pop
jb
jle
push
bound
lcall
stos
jns
test
dec
jnp
pop
bnd
xchg
leave
add
fisubrl
and
addl
adc
in
dec
mov
outsl
add
imul
mov
ret
add
adc
mov
jns
jmp
jnp
cltd
or
push
lock
xchg
popa
mov
mov
inc
xor
mov
loop
adc
jns
mov
test
js
hlt
stc
popf
cmpsl
call
xchg
mov
adc
mov
sbb
invd
bnd
fsubrl
enter
xchg
cmc
arpl
sti
xor
icebp
jle
pop
mov
mov
mov
idivl
cli
mov
stos
pop
out
hlt
lock
cmp
fsub
cmp
das
cltd
dec
cmp
scas
lea
pop
loop
mov
adc
jno
mov
in
leave
aas
fwait
inc
jno
or
add
mov
cltd
inc
cltd
xor
pop
jns
pop
loopne
xor
ret
inc
or
test
ficoml
push
sub
ret
cmp
push
stos
xchg
pushf
popa
stc
ret
fadds
imul
loope
scas
jp
adc
xchg
psllw
adc
mov
xchg
ljmp
test
fildl
fisttps
outsl
loope
mov
inc
mov
inc
inc
dec
lcall
movsb
sbb
in
push
sarl
setl
cli
aas
popf
pop
arpl
mov
push
jns
ret
push
jp
push
inc
subl
repnz
mov
bound
repnz
mov
inc
mov
popa
dec
xchg
das
jecxz
adc
je
insb
fcoms
and
negl
pop
mov
loope
mov
xchg
inc
loopne
xor
popa
lods
xchg
mov
cmp
jns
xor
hlt
xchg
fsts
jno
pop
inc
xorb
sbb
mov
and
and
xor
and
repz
xchg
lret
imul
call
jb
stos
mov
inc
pusha
xchg
imul
popa
add
repnz
adc
inc
dec
jns
bound
jns
sbb
pop
sbb
imul
arpl
iret
pop
stos
mov
jecxz
mov
mov
mov
push
jno
mov
pop
xorl
out
fldenv
fxch
cmp
cmp
mov
jnp
ret
xor
in
pop
fsubl
int3
insl
inc
pop
and
lock
add
mov
pop
push
mov
lods
jnp
add
loope
stos
jns
cli
mov
mov
ljmp
dec
testb
add
bound
stos
ja
xor
stos
imul
stc
jnp
mov
repnz
jg
sub
cltd
jp
mov
jp
add
dec
aas
jmp
arpl
jno
and
inc
dec
cli
inc
jnp
popf
adc
push
fists
xor
pop
shlb
jge
mov
sub
cmp
stos
insb
pop
mov
lock
mov
mov
jmp
jns
rcl
and
mov
xchg
dec
call
add
pop
test
mov
enter
jae
cmp
in
push
stos
dec
push
imul
sbb
loop
insl
push
ret
mov
shrl
push
dec
pop
pop
adc
cmovns
mov
mov
lods
mov
orl
popa
movb
es
inc
mov
stc
arpl
loop
enter
mov
lret
inc
add
icebp
dec
push
dec
inc
or
xchg
roll
rorb
sbbl
push
fs
jecxz
or
jmp
in
aam
js
ror
and
loope
movsl
xor
jns
ret
cmp
pop
aas
fsts
jge
cmp
leave
mov
mov
or
stos
pop
and
cmp
add
add
sub
lahf
lret
mov
or
shrl
jp
leave
ret
mov
lcall
mov
sbb
jne
ret
cmp
test
xchg
jmp
jno
insl
fwait
xor
jns
orb
pop
cmp
loop
lcall
and
rcrl
bound
dec
push
rcrl
xchg
imul
rcrb
cltd
mov
loop
inc
lret
xchg
cli
iret
je
adc
mov
xchg
push
cmp
jp
mov
add
popa
and
out
subb
jmp
jns
push
and
jmp
loope
std
mov
hlt
mov
cmp
inc
nop
jecxz
shlb
hlt
loope
jp
push
xor
roll
dec
test
mov
mov
and
clc
imul
imul
ret
sbb
sbb
mov
jecxz
lret
inc
pop
inc
xor
adc
std
imul
xor
xor
xchg
loopne
adc
jg
fldcw
jp
hlt
pop
dec
enter
mov
cmp
ljmp
xor
cli
cmp
stc
popa
arpl
fwait
cmp
in
enter
cmp
test
mov
jp
push
mov
jae
dec
cmp
repnz
imul
jae
add
arpl
test
outsl
fcoml
dec
jnp
sbbb
mov
xor
arpl
lods
xchg
leave
icebp
std
cli
jns
inc
xchg
mov
repz
push
arpl
rcl
mov
gs
stc
xchg
lods
icebp
arpl
push
mov
and
movsb
mov
sub
test
faddp
inc
stos
cltd
mov
xor
in
rcll
arpl
push
jp
pop
dec
sbb
adc
pop
out
repnz
out
and
push
mov
mov
mov
cli
sbb
rorl
mov
push
in
cmp
in
mov
jmp
push
aaa
add
jno
cltd
xor
add
loope
cli
mov
in
mov
rcll
enter
stc
clc
dec
stos
mov
xor
popf
xchg
popa
mov
fdivr
lcall
icebp
shrb
pop
mov
dec
cmp
jg
int
cmpsl
adc
jnp
jno
sbb
xor
cli
shlb
mov
scas
add
inc
mov
testb
jg
add
cmp
pop
mov
lcall
adcb
stos
fcompl
pop
lea
lods
push
mov
call
pavgb
push
outsb
or
fnstcw
mov
stos
xor
inc
mov
pop
jo
dec
xchg
insb
int3
gs
mov
rcrb
push
push
stos
sar
mov
dec
dec
xchg
xchg
ss
icebp
mov
mov
xchg
repnz
push
sub
idivb
sbb
or
xor
ret
pushf
jnp
add
cli
and
orl
jne
inc
insb
add
test
xorl
shrb
mov
push
dec
mov
or
sbb
rcl
subl
xor
ret
nop
or
push
test
push
in
pop
fsubrs
add
xorb
filds
add
cli
xor
lret
xchg
ret
jae
sub
popl
call
outsl
jne
adc
outsb
loopne
jp
push
cmpsl
fcoms
mov
push
add
jp
repnz
inc
xor
pop
fmuls
loopne
out
mov
mov
cmp
cmp
jne
xor
in
push
jnp
leave
mov
xchg
loope
sbb
mov
mov
imul
rorb
loope
dec
lcall
inc
xchg
add
pop
leave
rcr
mov
cmpl
add
cmp
inc
stos
dec
xorb
xor
aas
dec
sub
xchg
bound
jge
pop
xchg
imul
mov
mov
ficomps
test
stc
jge
arpl
mov
dec
cld
pop
stos
push
leave
sti
add
xor
rorb
pop
mov
jno
imul
fsts
xchg
jns
ret
loope
inc
in
mov
cmpsb
roll
lods
loope
jno
popf
shll
ljmp
stc
icebp
imul
jg
jle
int
repnz
jmp
pop
shl
setb
cmp
stos
loopne
test
push
test
xor
mov
mov
shrw
mov
fcmovnbe
pusha
arpl
add
leave
adc
shr
cmp
lret
movsl
std
xchg
pop
stos
lcall
dec
mov
add
cmpl
out
insl
push
cli
popa
inc
jns
hlt
btsl
lods
rcr
roll
sbb
jae
stos
andl
xor
ret
sub
sub
sbb
je
jae
pop
rorl
add
mov
jne
pop
add
fcoml
enter
movsb
decb
pop
hlt
cmp
mov
sub
mov
pusha
fsubr
adc
fmulp
repnz
xchg
xchg
sbb
dec
and
pop
roll
stos
enter
ret
aas
testb
icebp
and
shrl
cmc
and
and
addl
mov
pop
decl
in
insb
popa
stc
ljmp
leave
stos
ljmp
test
mov
ficoms
inc
mov
or
jns
jb
je
jge
mov
inc
ret
mov
xchg
std
cwtl
pop
jno
xor
hlt
mov
cmc
or
out
jnp
mov
or
hlt
mov
repnz
pop
out
and
cmp
xchg
mov
xchg
shlb
lret
jmp
dec
leave
icebp
jne
dec
lods
push
int3
mov
loopne
lods
push
or
inc
mov
cmp
cltd
imul
fcoml
adc
mov
mov
push
in
addb
insl
sbbl
rcr
sub
xor
nop
cmp
inc
xchg
push
mov
inc
mov
popa
lods
aam
div
out
cltd
loopne
mov
pop
fsubl
adc
mov
mov
loope
push
jge
pop
cltd
icebp
and
clc
repnz
sbbl
imul
xor
inc
push
xchg
xchg
addl
or
xchg
cmp
adc
nop
in
mov
mov
cmp
int3
sub
adc
imul
shlb
xchg
jg
sub
dec
icebp
add
sbb
pop
mov
pop
inc
in
jg
cs
shl
outsl
inc
pop
mov
hlt
mov
mov
dec
cld
push
imul
fnstcw
outsl
outsb
push
inc
sub
add
mov
stos
or
and
loop
pop
popfw
std
mov
cmpb
jg
roll
xor
inc
mov
mov
cmpl
push
stos
dec
jnp
arpl
jp
cmp
gs
shr
xor
mov
jle
jae
dec
xchg
shll
adc
pop
xchg
incl
mov
lods
xchg
mov
ret
cmp
lcall
push
mov
shrl
fsts
lret
mov
mov
sahf
lods
push
stos
xchg
jmp
mov
mov
loop
and
cld
jb
stos
add
xor
insl
and
add
xchg
jb
jns
lea
repnz
data16
shrl
arpl
bound
fisttpll
and
and
icebp
dec
inc
pop
cmpl
inc
stc
lcall
loope
stos
aas
aaa
sbbb
fiaddl
ret
jae
jne
jmp
xor
or
jno
stos
cmp
fbstp
out
xorl
stos
jnp
cmp
and
mov
push
jmp
mov
xchg
clc
mov
pushf
xchg
loop
loop
pop
out
cli
mov
ret
subl
orl
mov
mov
xor
ljmp
lea
push
mov
inc
xor
inc
test
mov
arpl
fidivl
and
jne
push
mov
cmp
and
add
push
mov
jecxz
lcall
sbb
adc
repnz
push
sarb
inc
lcall
nop
jb
xchg
icebp
clc
mov
cmp
inc
daa
loope
mov
clc
dec
inc
push
das
hlt
jg
lahf
mov
pop
in
mov
lods
lret
xor
pop
jbe
stos
push
lods
in
nop
repz
xor
in
jno
lret
lahf
aas
mov
wrmsr
push
adc
inc
mov
mov
aaa
jecxz
mov
jp
cmpb
mov
dec
arpl
cltd
inc
addb
pop
push
test
icebp
and
push
lcall
add
inc
stos
mov
xchg
push
xorl
pop
jns
sbb
mov
ds
sbb
daa
in
icebp
mov
imul
imul
sbb
fsubrs
rcrb
push
push
lock
add
popa
jno
mov
scas
popa
ret
jg
mov
add
out
inc
repnz
pop
ss
or
mov
and
dec
pop
imul
mov
mov
jmp
mov
loope
imul
xor
jg
and
repnz
sbbb
cmpl
loop
imul
nop
lds
xchg
stos
cmpl
inc
or
fs
push
rorl
in
popa
fld
add
jge
pop
in
andl
popa
sbb
and
data16
mov
shrb
mov
jle
xor
movsl
jns
mov
ljmp
in
fildl
mov
loope
mov
imul
nop
iret
cmp
jns
fs
repnz
pop
std
sahf
arpl
pop
aad
xchg
cli
imul
fisubrl
cltd
or
stc
jnp
scas
pop
mov
push
pop
add
inc
aas
or
in
mov
ljmp
jae
cmp
xchg
jb
dec
lods
mov
mov
cmp
mov
stos
inc
lods
push
adc
pop
adc
test
xor
not
dec
idivb
jns
fiadds
andb
mov
inc
push
popf
push
jnp
stos
dec
pop
mov
jnp
adc
jbe
test
pop
cli
in
add
xchg
mov
decb
imul
push
sahf
hlt
lret
imul
loopne
inc
notb
cmp
out
icebp
inc
mov
xor
xor
mov
xor
mov
outsb
pop
inc
xchg
push
mov
stos
mov
and
push
cltd
or
popa
sbb
xchg
test
lret
xchg
rcrl
scas
enter
mov
leave
sbb
imul
scas
xor
jp
push
ret
mov
and
jns
mov
dec
push
sarl
jnp
or
mov
in
inc
push
xchg
fisubs
add
jae
loop
in
mov
orb
rclb
adc
inc
xchg
xchg
jp
dec
loopne
cmp
sbb
ds
ljmp
dec
cmp
mov
pop
mov
test
ret
repnz
dec
dec
jb
decl
inc
outsl
cmp
adc
arpl
lock
icebp
sub
mov
jno
jb
imul
nop
cli
xor
hlt
xchg
stos
mov
mov
push
mov
pop
fsqrt
lods
cmp
enter
mov
test
xchg
inc
push
ret
jb
insb
pop
andl
jge
icebp
dec
xchg
sbb
adc
pop
enter
mov
outsl
sbb
xchg
or
stos
test
pusha
inc
inc
out
lods
stc
mov
mov
iret
icebp
cld
mov
mov
rcll
ljmp
adcb
out
mov
out
mov
sub
mov
xor
ja
mov
test
add
aas
inc
loope
and
mov
fdivs
mov
pop
xchg
mov
xchg
in
lret
stos
push
xchg
cmp
cltd
mov
cld
loope
cmp
inc
rorl
pop
jo
ficoml
mov
shll
mov
stos
je
enter
lods
cli
pop
inc
jnp
dec
cmc
mov
das
pop
sbb
push
loop
jbe
push
xor
cmpb
stos
jns
sti
jnp
cmp
mov
mov
push
adc
mov
rcrb
lahf
and
cmp
dec
stc
jmp
jb
mov
roll
add
mov
mov
lret
fidivs
jnp
sti
xchg
add
pop
pusha
dec
cmp
imul
xor
dec
jle
roll
shl
js
xlat
xchg
sbb
cmp
loope
jno
arpl
jns
movsl
lds
jmp
insl
pop
in
add
out
int
adc
fstpt
imul
pop
out
jecxz
ret
mov
and
xchg
lock
cmp
dec
mov
push
fidivrl
cmp
jns
rcl
ljmp
repnz
cli
arpl
push
pop
in
test
dec
hlt
rcrl
notb
fxch
jecxz
jp
popa
sub
shll
fs
cli
mov
inc
cmp
popa
lods
lcall
adc
push
cmp
pop
ret
leave
jle
mov
rcr
arpl
push
jecxz
mov
and
push
fists
stos
pmuludq
jae
dec
cmc
cltd
loop
negb
jbe
in
jp
mov
movsb
add
dec
js
cmp
dec
fnstsw
lods
fnstcw
loope
pop
inc
fcomps
fsubrs
popa
xor
andl
sti
add
inc
xchg
xchg
add
jae
xor
xchg
sarb
test
xchg
stc
mov
fsubrl
jns
arpl
negb
cli
test
cmp
rorl
fwait
pop
fdivs
inc
or
jnp
sbbl
jb
stos
lret
stc
cmp
mov
dec
fucomp
addb
mov
pop
popa
inc
shrl
rcl
cli
push
ret
lret
push
pop
mov
dec
cmp
in
inc
jno
mov
stos
hlt
push
jb
pop
mov
stc
jp
aaa
jno
sti
pushf
inc
sahf
popa
inc
popa
sub
jb
rcl
nop
lret
adc
or
in
fisttps
arpl
cltd
xor
lcall
push
fdivrl
mov
cld
sbb
add
ret
jg
dec
jle
jne
lods
jno
fbld
lcall
xor
xchg
ljmp
xlat
cmovge
mov
cmp
lcall
sub
ret
imul
hlt
mov
incb
stos
cmp
push
mov
jmp
cli
aas
aam
mov
loopne
into
rcr
dec
in
fcompl
repnz
icebp
nop
cmp
fs
movsb
leave
stos
mov
mov
imulb
fidivl
jb
xor
mov
pop
jo
push
mov
mov
ljmp
lea
mov
sub
adcl
shl
es
enter
shl
fisttps
add
mov
les
mov
pushf
mov
add
rclb
jmp
and
cmp
dec
adcl
xor
jb
hlt
insl
fidivrl
jnp
adc
inc
aaa
or
out
xor
out
imul
repnz
and
fsubrp
xchg
pop
push
xchg
jmp
rolb
fiadds
dec
mov
stos
jp
repnz
sti
mov
sub
cmp
shr
aas
push
lret
xchg
in
mov
xor
push
push
jo
add
xor
pop
jg
or
je
cltd
add
mov
pop
fisttpll
mov
cmp
jb
lock
mov
inc
xchg
insb
push
fiaddl
add
and
dec
fstps
jecxz
in
pop
xor
mov
and
mov
call
cltd
xchg
add
ret
jg
andl
bound
int3
push
or
scas
sbb
mov
arpl
mov
cli
insl
jnp
clc
in
xchg
xchg
or
addr16
shrl
xor
and
xor
mov
dec
jge
dec
cmp
test
lahf
imul
data16
mov
fsubl
imul
or
jns
ljmp
les
mov
lret
cmp
ret
adc
flds
dec
jns
ret
inc
mov
pop
insb
pop
lret
daa
xchg
ds
push
push
rclb
mov
arpl
bound
aas
inc
sbb
adc
add
dec
fsubrs
cmpsl
mov
jo
repnz
sti
and
mov
arpl
mov
sbb
lret
jae
mov
popa
orl
aas
and
pop
icebp
andl
and
gs
popf
xor
and
mov
clc
dec
add
stos
ret
imul
outsb
ds
es
popf
add
imul
popa
pop
push
outsb
jecxz
or
test
cli
mov
cmp
ljmp
imul
aad
sub
mov
ret
imul
pop
push
mov
mov
ret
adc
jns
data16
lods
push
arpl
in
cmp
shll
jne
push
inc
mov
push
mov
jle
sbb
pop
pop
stos
in
nop
inc
lcall
mov
mov
jmp
lcall
mov
shl
jno,pt
jb
and
test
add
dec
and
cmp
ret
nop
cmpsb
repnz
testl
roll
stc
mov
test
jnp
cmp
mov
lods
xchg
sarl
imul
mov
mov
stc
dec
in
mov
flds
sbb
or
jo
or
or
pop
mov
jns
push
adc
mov
arpl
inc
mov
fsubrl
push
in
lock
sbb
movsb
loopne
daa
lods
xchg
push
mov
cli
inc
inc
mov
pop
xor
mov
loopne
lods
shrb
test
aas
cmpb
pop
negb
xchg
imul
jnp
loop
imul
insb
call
imul
rorb
fs
pop
cmp
hlt
mov
mov
incl
xor
shl
jae
rolb
inc
mov
stc
fs
int
sarb
inc
dec
push
inc
xor
gs
popa
jbe
mov
in
sbb
fiaddl
scas
mov
mov
push
sbb
jae
lret
ljmp
mov
add
add
loop
push
iret
paddd
mov
stos
pop
or
jnp
jbe
adc
dec
popf
mov
jae
pop
mov
cmp
lahf
push
ret
cli
sub
sub
cmp
pop
jae
outsl
ret
cli
repnz
fdiv
test
and
hlt
pop
lret
sti
loopne
stos
fsubp
faddp
fmuls
xor
ja
inc
ljmp
iret
cmpsl
cmp
inc
mov
imul
mov
lcall
sub
mov
xor
pop
lret
jae
ret
in
push
xchg
out
sub
rcrl
sbb
int
ret
pop
dec
xchg
jp
hlt
add
jnp
add
pop
pushf
ljmp
inc
mov
nop
mov
and
lea
xor
sbb
inc
push
setle
je
repnz
push
inc
loop
dec
lcall
mov
sbb
arpl
sub
jecxz
sbb
xchg
mov
or
and
push
fsubl
stos
jp
clc
imul
jg
outsb
lcall
scas
cmp
xchg
jmp
xor
ja
lret
jge
pop
addb
jp
inc
dec
lods
subl
arpl
mov
mov
lcall
popf
dec
cmp
imul
sti
fwait
lahf
and
je
imull
outsl
mov
mov
outsl
dec
repnz
xor
cmp
jne
jnp
lods
out
cltd
add
jnp
sub
popf
push
popf
jp
out
scas
movsb
lds
jb
mov
shll
mov
cli
push
jle
mov
adc
stos
jmp
push
fmull
imul
mov
xchg
inc
adc
xor
subb
lds
ljmp
push
fsubrl
cli
dec
xchg
stos
sarb
repz
shl
test
pop
and
lods
shll
mov
leave
xchg
push
pop
adc
xor
cltd
or
fnsave
mov
mov
imul
dec
imul
mov
cltd
out
add
outsl
cli
mov
in
stc
pop
loope
inc
and
add
and
arpl
push
mov
push
stos
imul
stc
lret
cmp
enter
std
sub
inc
jp
leave
jg
add
mull
mov
je
fimull
lret
push
push
outsb
leave
pop
cld
cld
mov
loop
ljmp
imul
dec
bound
pop
fisubl
sbb
jecxz
add
xorb
test
cmpsb
insb
outsl
pop
mov
test
jb
mov
jmp
push
dec
ljmp
fdivrs
out
push
mov
insl
imul
mov
sbb
ja
add
stos
leave
jg
jno
push
ret
add
xor
add
stos
jg
add
jno
cmpsb
and
fcmovbe
icebp
xor
xor
cmp
dec
jmp
jbe
mov
fnstsw
int
imul
bound
imul
xchg
cmp
imul
leave
je
in
rcll
lock
imul
jnp
push
ret
test
jae
cmp
imul
fcomi
push
pop
sbbl
loope
shrl
std
sbb
and
cli
cmp
loope
scas
lock
jmp
fadds
out
jg
cmc
cmp
fsubrl
leave
inc
adc
xor
push
stos
into
pop
mov
das
fidivrs
lock
pop
add
bound
inc
fidivrl
jo
loop
inc
insb
jp
orl
xor
into
loope
popa
shl
ljmp
mov
ficoml
decb
mov
ljmp
dec
xor
cmpl
adc
mov
push
js
imul
adc
mov
cmp
fists
shll
shll
loopne
ljmp
std
movsb
mov
inc
lods
mov
sub
inc
in
push
insb
lea
dec
push
fisubl
inc
aad
xchg
inc
in
push
popa
lods
jecxz
xor
aam
inc
repz
jmp
dec
inc
xor
adc
rcrb
ljmp
pop
dec
mov
jne
arpl
mov
test
fstps
fs
sbb
fcmovb
fidivrs
sti
mov
xor
and
int3
xchg
xor
sar
dec
subb
jg
inc
dec
movsb
ret
inc
inc
jp
push
stc
enter
test
cli
add
jp
sbb
outsl
fcmovnu
mov
ret
pop
xchg
stc
push
flds
sbb
mov
fistps
rcrl
movsb
jae
leave
inc
inc
jmp
cmpb
repnz
dec
jge
decl
jns
pop
mov
cmp
xchg
loop
or
dec
std
mov
mov
jno
xchg
add
icebp
mov
insl
inc
rcrl
roll
mov
pop
stc
enter
sbb
sub
stos
adc
shrl
jnp
loop
lods
pop
jb
loop
mov
incl
pop
inc
jns
jg
mov
hlt
or
jp
jnp
inc
pop
mov
add
mov
loope
cli
cli
js
cmp
imul
mov
in
push
daa
jae
xor
and
loop
in
mov
xor
lret
fnstcw
test
mov
jp
pop
ja
push
mov
stc
std
pop
lret
mov
xlat
enter
mov
and
adc
mov
stc
mov
in
into
ret
adc
and
jb
mov
jae
in
mov
jp
xchg
jg
inc
or
call
fcmove
sbb
xor
or
mov
decl
lcall
xchg
stos
add
mov
mov
notl
dec
daa
out
gs
scas
jnp
imul
dec
pop
aas
cmpb
mov
cmp
mov
cmp
clc
inc
loop
imul
inc
popa
and
add
push
mov
cmp
mov
xchg
mov
add
lcall
loope
not
arpl
sbb
push
jb
jae
enter
xorl
cli
popa
xchg
out
mov
cmpl
mov
insb
jle
pop
xorb
push
push
inc
ljmp
adc
jnp
test
fld
or
test
imul
xchg
cld
loope
stos
mov
incb
lcall
jmp
in
leave
mov
popa
xchg
adc
stos
mov
jns
xor
xor
mov
pop
mov
lcall
add
imul
mov
inc
xor
lock
xchg
ficomps
rcrl
mov
inc
cld
xor
gs
pop
popa
test
pop
ljmp
jno
addl
xor
out
mov
pop
aad
pop
int3
mov
fildl
xchg
xchg
arpl
popa
stc
jp
push
dec
lret
or
js
mov
jno
icebp
inc
ret
sub
ret
shrl
sbb
shr
out
dec
add
fcmovnu
in
mov
rclb
mov
fstps
ret
lcall
sbb
cmp
dec
xor
lods
xor
je
adc
fadd
icebp
imul
mov
or
add
pop
mov
cmp
stos
jmp
movb
bound
shr
mov
movsb
push
pop
inc
push
inc
mov
mov
lcall
imul
jp
jno
jnp
fiaddl
test
cmpsl
test
cmp
mov
add
lret
test
pop
push
or
mov
fwait
imul
add
testb
cmp
and
and
cmp
push
cli
fadd
ds
push
inc
and
hlt
arpl
shll
in
push
pop
ret
cltd
inc
inc
data16
cmp
aas
sbb
jp
mov
cmpb
and
push
xchg
jae
mov
stc
inc
dec
bnd
xchg
adc
iret
stos
dec
mov
mov
lods
sbbb
arpl
push
ss
adc
or
mov
jp
cmp
pop
ds
xorb
cli
test
adc
stos
mov
hlt
mov
ret
cmp
jl
push
jnp
lock
adc
cmp
ds
xlat
sahf
and
dec
mov
xchg
or
mov
fsubp
xchg
test
jb
dec
pop
and
mov
mov
add
jns
mov
out
push
inc
xchg
xor
and
mov
pop
sub
ret
repnz
arpl
xchg
lret
sub
outsb
std
cmp
sbb
int3
repnz
leave
cmp
add
pushf
aaa
jno
mov
mov
cld
lret
lcall
xchg
mov
add
dec
inc
rcl
push
mov
xor
lods
mov
fisubrs
fmuls
outsb
add
push
int3
sub
adc
and
inc
xor
std
mov
lds
aas
pop
loop
pop
loopne
fsub
xchg
test
outsb
jge
in
xor
call
pop
nop
cmp
dec
cmp
xchg
loope
dec
mov
icebp
lock
cli
loop
punpckhdq
mov
mov
rorb
mov
lods
stos
mov
leave
mov
shll
jnp
fldenv
popa
daa
enter
xchg
pop
sbb
imul
sbb
mov
cli
icebp
adc
push
push
sub
pop
xor
scas
cmpb
jg
insb
arpl
leave
lods
and
hlt
dec
stos
jno
xchg
cli
push
loope
repz
lock
jg
jns
rcr
repnz
inc
fadd
xchg
xor
hlt
imul
push
cmp
mov
mov
mov
pop
orl
sbb
pop
jb
test
mov
imul
cmp
cmp
insb
jo
and
jbe
stos
xchg
jle
mov
ljmp
aam
popf
orl
pop
insl
inc
pop
add
inc
xor
inc
leave
jge
xor
and
shlb
ja
mov
jae
clc
data16
std
jmp
xor
std
cltd
mov
sti
jns
xchg
add
ret
and
mov
das
mov
lret
popa
push
lret
mov
std
mov
jnp
pop
xchg
sbbl
add
xor
dec
mov
test
repnz
fwait
mov
lret
icebp
jmp
and
les
inc
dec
test
pop
je
test
mov
lcall
shll
xor
test
or
jecxz
ss
cmp
ror
pop
inc
or
xor
sti
cmp
ljmp
pop
xchg
mov
scas
stc
add
push
ret
jb
jp
jecxz
and
and
and
lock
loope
cli
sub
shlb
push
push
push
dec
iret
mull
jmpw
inc
sar
sub
pop
movsl
jbe
outsb
sbb
mov
std
xchg
mov
movsl
sti
iret
andl
mov
imul
out
cmp
movsb
mov
cmp
jg
jecxz
inc
sti
xchg
stc
jb
bound
pop
mov
or
loopne
xchg
data16
fsubrp
outsb
mov
shl
stos
mov
sti
push
loope
stc
lret
cmp
and
cltd
jb
xor
push
cmp
std
jns
add
inc
cmp
and
fmul
mov
push
dec
repnz
loopne
stos
call
mov
sub
mov
ret
and
lret
pop
sub
ljmp
xchg
mov
mov
jne
imulb
std
mov
cmp
popf
pushf
shll
jns
ds
lret
lods
loop
jge
out
mov
les
iret
mov
fdiv
xor
push
mov
cs
loope
and
dec
pop
out
xor
lods
icebp
jo
push
stos
dec
lret
cmp
dec
popa
dec
ljmp
pop
jns
imulb
mov
fldenv
dec
mov
mov
rcll
rcll
out
add
inc
sub
lcall
loop
and
ret
lock
loop
pop
inc
roll
shlb
fdivl
push
dec
clc
add
repnz
pop
or
fcompl
jecxz
fcompp
mov
push
test
enter
out
sti
jae
ret
add
xlat
stc
and
popa
mov
pop
push
dec
mov
stos
imul
addl
pop
in
rolb
arpl
movb
sbb
push
mov
daa
mov
ret
in
in
fisttps
std
mov
xchg
xor
hlt
mov
mov
popa
mov
test
jb
leave
rcll
xchg
stos
divl
push
shll
arpl
mov
inc
pop
nop
aas
mov
loope
fdivrl
cli
ljmp
cmc
ret
lds
jnp
stc
sub
jnp
ljmp
loope
inc
loop
sarb
inc
mov
pop
mov
cmpl
push
mov
mov
in
add
cmpl
bound
jns
cmp
cltd
push
in
sbb
jge
inc
push
test
lock
repnz
test
mov
insl
xor
dec
xchg
or
pop
nop
fnstcw
sub
leave
pop
sahf
or
sti
inc
movb
icebp
cmp
clc
cmp
mov
mov
ret
fsubrl
jnp
mov
adc
push
fimull
fsub
push
sbb
jbe
fldz
insl
stos
sbb
adc
mov
jge
dec
jae
cltd
mov
rol
das
jp
arpl
cli
inc
sub
popa
inc
sub
inc
fdivrs
popa
ficoms
cld
dec
dec
inc
jae
loop
test
mov
rolb
push
jb
inc
adc
jecxz
mov
mov
or
jmp
or
cmp
cltd
rclb
iret
mov
fstps
aas
xchg
dec
bound
and
test
adc
xchg
mov
movsb
int3
ret
loop
fcoms
aam
imul
jnp
bound
lahf
mov
ja
inc
stos
xchg
scas
loop
leave
jmp
jecxz
loope
and
arpl
mov
repnz
fcmovnb
inc
outsb
jp
mov
push
stc
push
adcl
ljmp
outsb
inc
cmp
xchg
loope
push
out
dec
cli
jo
add
push
pop
idiv
adcl
xlat
int
or
fcmovb
mov
cltd
imul
outsb
jge
aas
in
inc
jb
shll
dec
cltd
mov
mov
sub
mov
cmpsb
push
mov
jmp
add
xor
and
add
jns
jp
or
jne
mov
test
stos
inc
loope
mov
orb
sub
andl
lcall
mov
inc
inc
pop
lea
sarl
jnp
push
push
loope
push
das
push
adc
xchg
mov
aad
inc
mov
daa
jno
mov
lods
xor
adcb
cli
xor
mov
xor
cld
pop
sub
adc
mov
std
pop
cli
xor
shlb
cmp
mov
lret
mov
insb
cmc
hlt
test
pop
not
icebp
adc
stos
dec
std
add
mov
test
shll
mov
jnp
jae
pushf
mull
stc
xchg
xchg
andl
lcall
ret
mov
test
pop
add
dec
xchg
ljmp
pop
mov
mov
pop
inc
stc
mov
adc
mov
adc
xchg
fdivl
mov
jg
jmp
test
dec
mov
add
cli
inc
mov
shrb
jp
fcoms
dec
or
dec
lcall
lods
inc
inc
aas
loopne
xchg
int3
cli
pop
dec
mov
repnz
stc
cmpsl
hlt
fdivr
xor
sbb
gs
popl
push
mov
mov
and
insl
jae
stos
lcall
insb
jns
push
cmp
jp
rclb
js
mov
je
rcrl
in
jmp
daa
sbb
orl
xor
xchg
pop
cmp
iret
or
inc
inc
mov
jno
push
adc
pop
mov
xchg
jmp
mul
ljmp
pop
xchg
mov
dec
mov
loop
pop
mov
inc
std
arpl
popa
pop
xchg
lods
orl
push
icebp
pop
idivb
scas
mov
roll
mov
mov
xchg
sbb
repnz
dec
popa
out
jae
dec
fsubs
roll
xchg
mov
or
mov
jae
ficompl
and
dec
repnz
or
into
mov
lods
fildll
mov
imul
mov
sub
push
stos
mov
enter
clc
mov
stos
jno
imul
fldcw
repz
jnp
scas
push
fsubl
mov
jmp
ret
cmp
add
shl
je
jae
or
dec
popa
test
cmpsl
mov
pop
jecxz
push
int
adc
call
mov
jge
jns
cmp
xchg
pop
xchg
jmp
xor
icebp
bound
repnz
lods
xchg
hlt
addr16
xor
icebp
aas
sbb
andl
stc
out
pop
lcall
shrb
adcb
adc
and
pop
sbb
mov
add
js
pop
push
inc
mov
mov
jp
ljmp
or
in
cmp
pop
movb
and
inc
mov
repnz
loopne
pop
cld
sub
test
repnz
add
int3
in
pop
imul
roll
test
cmc
enter
mov
jnp
int3
mov
and
arpl
mov
rorl
cmpsl
stos
mov
lcall
int3
fldl
mov
ljmp
icebp
lret
dec
jge
xchg
aas
fcompl
sub
cmp
paddusw
cmpsb
jecxz
pushf
adc
xchg
xor
xlat
cmp
push
sub
or
imul
pop
mov
mov
out
cwtl
imul
shll
lret
jb
mov
inc
test
mov
push
sbb
mov
pusha
adcl
arpl
push
loop
cmp
and
mov
dec
push
leave
stc
cld
sarb
dec
or
cmc
fld
std
stos
subl
lret
push
pop
popa
jns
push
mov
jp
push
push
mov
loop
repnz
or
jae
cmp
push
dec
rol
std
adc
sti
cmpl
mov
jnp
sbb
cmp
or
test
hlt
push
jae
shr
out
test
stc
xchg
jnp
repnz
pop
repnz
push
fsubl
mov
dec
call
je
sarl
add
jae
in
mov
jp
pop
xchg
icebp
add
cli
inc
jmp
enter
mov
jge
cs
mov
lcall
mov
lret
fcos
jns
repnz
pop
cmp
stc
jle
stc
mov
xor
repnz
orb
adc
ljmp
mov
shrl
imul
and
push
ds
xchg
bnd
mov
pop
icebp
jg
insb
test
xchg
jne
mov
stc
jb
ja
cld
into
ljmp
adc
imul
scas
ret
lret
xor
stos
loop
cmpb
movsl
outsb
xchg
hlt
xchg
dec
mov
fbstp
jmp
insb
cmp
lods
test
mov
xchg
subl
jge
mov
jns
dec
inc
loope
loope
mov
ljmp
dec
jns
dec
xchg
sahf
xor
add
roll
lods
stos
xchg
sbbb
cmc
icebp
repnz
push
cmp
jae
stc
lret
lret
mov
rolb
jae
mov
cmp
lds
stc
loop,pn
and
or
jb
add
cmp
push
inc
lcall
xchg
inc
ss
jmp
pop
rolb
pop
loop
pop
mov
inc
lds
jo
dec
imul
xor
sbb
shrl
pop
mov
imul
xchg
push
xlat
add
inc
cmp
in
stos
push
pop
stc
test
mov
pop
jne
xorl
test
fs
loop
out
sbb
aad
adc
add
xor
push
xor
xor
cmp
mov
sbb
dec
jns
aaa
mov
add
xor
cmp
cld
xchg
mov
mov
mov
sti
sbb
adcl
pop
jg
sbb
add
adc
inc
jno
xor
das
add
xchg
jecxz
dec
xor
jmp
inc
pop
loope
out
inc
imulb
loop
xor
out
mov
mov
out
outsb
loopne
ljmp
mov
inc
fcmove
je
in
jno
ret
addb
inc
addl
mov
push
pop
std
sahf
mov
pop
push
addb
sbb
stc
cmp
push
int3
cmpsl
jae
test
loop
mov
jp
jnp
pop
jnp
icebp
and
push
dec
es
sub
outsb
dec
ret
ljmp
mov
in
movl
adc
lahf
cmp
sub
insb
ja
je
mov
lret
jmp
gs
imul
lret
jge
lods
xor
aam
ljmp
rcr
mov
push
jp
jbe
mov
lods
adc
inc
jmp
aad
leave
pop
pushf
mov
mov
pop
jp
dec
mov
mov
bound
mov
jbe
cmp
or
or
mov
inc
lock
pop
sub
add
mov
stc
and
push
sarb
mov
dec
cmc
mov
cmp
lock
shr
out
xorb
add
leave
mov
mov
xor
push
sbb
jnp
imulb
dec
jge
xor
mov
cmp
dec
and
arpl
cmp
mov
aad
cmp
sub
mov
pop
jp
jnp
xchg
stc
inc
sbbb
push
dec
pop
pop
inc
cmpsl
in
mov
pop
pop
mov
jae
sbb
lock
push
cmpl
cli
dec
cmp
hlt
or
std
orl
cmp
in
imul
lahf
mov
and
mov
fcmovu
bound
orb
push
hlt
jns
pop
popa
clc
xchg
inc
xor
sub
movsb
push
mov
scas
idiv
addl
jg
xor
imul
fildll
mov
xchg
cmc
jl
nop
mov
mov
sub
mull
repnz
imul
loope
in
jmp
push
mov
lock
pushl
cmp
xorl
jg
mov
loop
sbb
scas
cli
pop
ret
or
add
dec
pop
xor
roll
stos
stc
pop
add
ret
arpl
stc
jmp
divl
nop
and
jnp
cmpl
push
sbbl
xchg
jae
cld
jbe
xor
jns
xor
in
popa
jb
roll
out
fprem1
cmpsb
mov
mov
lret
sahf
test
mov
addr16
stc
sar
xchg
fldenv
sbb
cmp
and
inc
call
arpl
clc
mov
popa
ss
dec
mov
push
sarl
rcrb
imul
stc
mov
test
and
pop
jnp
and
adc
mov
inc
push
sbb
pop
cld
or
ja
in
mov
jno
mov
loop
xor
bound
icebp
mov
aas
repnz
in
cli
lock
add
dec
imul
jb
adc
xor
rcrb
lcall
mov
jb
sti
mov
stc
cmp
imul
cmp
std
mov
or
jmp
sbb
push
rcrl
inc
mov
cmp
mov
xor
jne
pop
ret
int
loop
stos
cltd
das
or
lods
inc
mov
mov
add
inc
pop
out
dec
ds
push
test
push
add
cmp
push
lods
outsb
stc
enter
in
xchg
bound
or
rorl
xchg
test
mov
movsl
loope
in
in
xchg
inc
cmpsl
out
stos
iret
mov
enter
in
pop
imul
call
add
stos
andb
insb
shl
addl
add
inc
mov
rcll
pop
movsb
add
mov
cli
fimull
xlat
jae
inc
add
pop
mov
adc
mov
xchg
cmpsb
nop
in
pop
inc
pop
clc
cmp
inc
cmp
xor
icebp
rcrl
mov
std
rorl
and
loope
sub
stos
inc
mov
rcrl
insl
test
jno
inc
pop
lock
inc
add
xchg
xor
xchg
ljmp
cli
push
nop
jl
xor
jno
add
stos
repnz
mov
bound
movsl
adc
jmp
rcrl
xorl
add
lcall
and
out
xor
pop
cmp
cmp
xchg
cli
push
icebp
dec
enter
sahf
jns
xor
inc
cmp
jl
lcall
xchg
mov
loope
subl
cli
adc
xchg
test
mov
aam
dec
mov
into
repz
or
adc
xor
xchg
and
movsb
lods
loope
call
xchg
ret
arpl
mov
mov
test
lods
stos
cmp
fdivr
loope
shlb
enter
stos
mov
dec
or
cmc
leave
sbb
push
mov
mov
cs
cltd
xor
mov
mov
push
dec
cld
ret
mov
mov
jne
lock
loope
dec
repnz
lods
nop
cld
popa
xchg
mov
sbb
and
out
mov
out
jecxz
je
popf
popa
jns
jnp
inc
mulb
mov
addl
test
mov
lret
ret
mov
pop
repnz
jp
subl
dec
cmp
and
repnz
insb
pop
mov
jnp
jnp
ret
pop
mov
adc
dec
fcmove
stc
mov
scas
jge
or
into
push
andb
pop
repnz
loop
and
icebp
mov
add
sbb
inc
push
mov
in
arpl
repnz
fiaddl
dec
and
imul
push
ret
sbb
or
mov
fnstcw
daa
inc
inc
push
loope
dec
lock
mov
int
cmp
jl
mov
jns
push
adc
or
xchg
jae
mov
xor
jb,pt
adc
inc
push
fisubl
je
xchg
jns
cmp
inc
adc
bound
fdivp
dec
js
repnz
jg
jg
jecxz
mov
inc
leave
aam
lcall
popf
repnz
push
mov
pop
out
out
and
dec
xchg
mov
inc
call
or
test
lahf
xor
jno
insl
mov
xchg
outsb
pop
std
or
negl
stos
idivl
stgi
orb
push
dec
leave
ljmp
fisubl
stos
jecxz
sub
mov
lea
inc
ljmp
add
jnp
mov
xchg
mov
adc
arpl
inc
popa
dec
dec
jmp
mov
addb
test
stos
cmp
mov
stos
dec
inc
aaa
or
xchg
jle
jp
add
pop
popf
cmp
pop
mov
dec
inc
inc
xor
pop
xchg
lods
inc
fucom
push
cmp
addl
ret
icebp
pop
nop
hlt
inc
cltd
push
xor
out
jne
cmp
stc
dec
mov
icebp
jp
repnz
ja
in
xchg
clc
inc
leave
dec
mov
adc
test
cmp
xchg
or
dec
ficompl
aaa
dec
cltd
loope
pop
mov
mov
mov
clc
xchg
sub
add
jp
notb
std
xor
enter
xor
jle
cmp
push
mov
leave
loop
lret
mov
ds
inc
inc
adc
push
shr
pop
fiaddl
in
jns
fcomps
lret
sbb
popf
loopne
out
sub
sti
cld
fists
xchg
adc
mov
push
add
push
jb
stos
or
jb
in
loope
imul
imul
bound
xchg
pop
mov
sbbb
pop
lods
loope
dec
inc
enter
test
mov
stos
mov
clc
fiaddl
mov
fs
stos
jae
inc
cmp
xchg
adc
int
push
jmp
push
popa
imul
cmp
mov
or
xchg
adcb
stos
lahf
mov
lcall
loope
xchg
test
xor
bound
pop
int3
mov
lock
flds
mov
sub
cli
inc
xchg
add
xchg
mov
dec
dec
xor
jmp
mov
or
hlt
mov
ljmp
dec
mov
rorl
cmpsl
stos
rol
cltd
frstor
jnp
lcall
inc
dec
mov
jle
jmp
mov
loop
inc
lret
mov
jmp
push
ret
mov
mov
dec
dec
rol
loope
inc
inc
add
jg
mov
jns
jno
stos
dec
lods
jle
enter
ret
adc
jb
ljmp
rolb
sub
and
js
dec
mov
and
mov
cmpsl
mov
cmp
int
out
std
pop
push
add
stos
lcall
cmp
sub
hlt
test
pop
in
push
jge
adcl
fstpt
sti
fldcw
incl
ret
bound
iret
psubw
or
jmp
cmp
adc
dec
push
imul
incb
pop
ljmp
dec
or
xlat
inc
icebp
inc
dec
inc
and
push
lods
push
pop
mov
push
stos
dec
push
mov
mov
call
jae
or
nop
cmp
mov
bnd
movsb
in
into
push
sub
sbb
cmp
xchg
ror
cmp
imul
xchg
rolb
and
je
pop
mov
out
mov
push
cltd
ret
inc
and
inc
and
push
rorb
dec
xchg
jns
sub
fsts
dec
and
imul
push
or
aas
xchg
addl
jno
push
cmp
or
outsb
imul
sti
push
pop
cmp
add
cmp
stos
mov
repnz
in
ljmp
pop
imul
xorb
jge
mov
imul
sbb
shrl
mov
xchg
inc
stos
xor
imul
arpl
push
jae
xorl
pop
mov
int3
add
jo
test
lods
lds
call
test
cli
pop
enter
mov
jns
and
loope
xchg
je
cmpsl
fdivr
enter
inc
add
ret
ret
and
jns
int
in
jnp
dec
cmp
mov
cltd
mov
pop
cmp
push
mov
ret
test
aad
popa
icebp
mov
sub
sbb
mov
enter
add
push
inc
insb
push
das
or
mov
inc
stos
fidivl
repnz
in
aaa
ljmp
int
in
cmp
stos
jp
push
inc
cmp
mov
pop
inc
cli
push
mov
mov
push
mov
out
jnp
xor
arpl
cltd
push
mov
shll
jp
icebp
add
pop
ds
mov
loope
or
mov
mov
ror
sbb
push
call
leave
dec
jp
jnp
popf
loope
imul
imul
addb
aas
fisubl
rol
sarl
mov
outsl
inc
icebp
cmpsb
notb
mov
arpl
stos
daa
jle
jg
jne
out
jno
inc
adcb
loope
lds
lds
flds
sbb
ljmp
je
dec
sbb
adc
in
shll
bound
pop
sub
cmpl
sarl
lret
test
or
sbb
aas
push
cld
jle
lcall
pop
cmc
fucom
repnz
stc
inc
enter
push
lods
or
mov
xchg
enter
inc
stc
cli
inc
mov
jecxz
add
jp
loope
mov
jl
inc
arpl
mov
ljmp
lock
dec
testb
mov
in
jae
xor
mov
jnp
ss
ljmp
icebp
mov
stc
lock
stos
repnz
jmp
add
repnz
jb
fxch
scas
jo
adc
push
movl
push
test
in
popf
incl
jb
nop
lods
icebp
fidivl
es
loopne
sub
or
stc
sub
dec
push
mov
divb
repnz
mov
add
xchg
inc
mov
pop
mov
enter
notb
stos
jno
fidivl
hlt
push
imul
xchg
insl
repnz
add
jg
popf
jp
popa
stos
pop
sbb
mov
icebp
jmp
orl
jns
leave
lret
cmp
pop
cli
pop
lock
or
xchg
lret
aas
push
out
cmp
fidivrl
enter
mov
push
outsl
push
fsubrl
xchg
mov
mov
popa
inc
mov
aad
push
push
cmp
ljmp
jg
and
mov
add
xor
ret
mov
ret
jae
loope
mov
popa
jnp
in
testb
mov
mov
cmc
loop
mov
movsl
push
ds
aas
pushf
popa
pop
pop
cld
sub
jnp
mov
out
xchg
jns
fdivrs
fcoms
mov
andb
in
adc
pop
sub
loope
sarl
icebp
fisttpll
dec
test
xlat
mov
imul
lea
scas
imul
addb
adc
sbb
adc
sbb
std
mov
sarl
int
lret
jno
shlb
pop
dec
inc
xchg
int3
sbb
inc
addb
stos
jmp
std
add
inc
cwtl
test
testb
xor
cltd
and
sbb
insb
repnz
cmpsb
and
stos
in
jns
pavgb
in
dec
mov
push
cs
sti
mov
inc
sbb
ret
leave
sub
orb
ret
mov
pop
fucomi
mov
sar
xchg
or
lahf
je
hlt
insb
bound
inc
out
xchg
ret
inc
mov
repz
xchg
addl
jo
pop
addb
mov
mov
pop
and
cmp
jge
cmp
ljmp
xor
add
xor
mov
cmp
xor
jns
repnz
cli
enter
pushl
xchg
out
xchg
pop
call
ficoms
dec
jg
xor
pop
bound
hlt
jl
dec
stc
inc
mov
pusha
scas
or
int
lods
shll
movsb
loope
loop
jae
sti
mov
mov
mov
mov
int3
mov
push
push
cmp
lds
in
pop
mov
repnz
or
mov
or
icebp
popa
xchg
xchg
dec
mov
repnz
loopne
test
cmp
push
stc
outsl
pop
dec
pop
lods
adcl
sub
mov
mov
jns
push
ret
std
and
pop
jecxz
enter
int3
popf
inc
daa
pop
fsubs
movsb
add
cmp
xchg
sbb
jp
stc
pop
lock
shlb
mov
xchg
add
ret
repnz
xorl
repnz
dec
stc
inc
stos
lea
jns
imul
shl
mov
mov
fidivl
leave
jp
jbe
sti
xchg
psubd
js
lret
imul
imul
jnp
hlt
popa
roll
push
jp
xchg
je
mov
mov
pop
ret
xchg
mov
rcrl
enter
mov
je
mull
add
aaa
pop
jle
jecxz
mov
cld
cmp
dec
xlat
popa
jge
or
lret
inc
mov
sub
repnz
loop
and
mov
daa
rcrl
sti
mov
jge
mov
stos
add
icebp
dec
imul
xchg
out
xor
mov
test
scas
cmp
add
leave
fstpl
and
arpl
jmp
mov
jnp
jns
bound
gs
call
bnd
loope
add
popa
and
and
and
in
ljmp
pop
rclb
dec
mov
lock
pop
inc
scas
inc
les
mov
or
cmpb
cmp
push
pop
fimull
stos
loopne
mov
fstpt
pop
loope
stos
and
jg
mov
lcall
call
mov
dec
stos
data16
addr16
cmp
push
repnz
sbb
push
imul
cs
aam
lret
jp
xor
mov
cld
mov
fidivl
sarl
test
aam
pop
jle
out
xchg
loopne
loopne
call
ljmp
andl
lret
loope
adcb
call
cltd
leave
rcrl
imul
gs
inc
jecxz
cmp
je
xchg
aam
mov
int3
or
ret
mov
bound
inc
push
push
leave
icebp
add
push
repnz
and
stc
pop
lods
negb
cltd
orl
xor
test
inc
xor
test
stos
add
imul
adcb
push
stc
mov
stc
jmp
fidivrl
aam
push
loopne
subl
jne
add
inc
aas
lea
mov
mov
dec
cmp
pop
xchg
lods
xchg
pop
int3
fndisi(8087
cmpl
sub
mov
leave
ret
addb
ret
fnstenv
jg
arpl
push
cmp
testb
bound
popf
mul
inc
cltd
jns
or
jl
mov
jl
dec
mov
push
mov
push
loopne
mov
jge
jmp
jb
in
addr16
cli
mov
mov
xor
inc
stos
mov
adc
mov
pop
andl
stos
jg
xor
insb
jecxz
jae
lcall
xor
insb
arpl
push
stos
jbe
test
ljmp
test
mov
out
inc
sub
scas
stos
jmp
inc
stc
outsb
ds
ljmp
push
lcall
arpl
pop
push
clc
les
or
and
push
dec
inc
test
popa
icebp
loope
sarb
add
into
sbb
jns
and
cmpl
cwtl
arpl
dec
loop,pt
fcomps
arpl
mov
ret
loope
push
mov
lcall
fcomp
in
int3
scas
loop
and
aas
test
sub
jb
cmp
stos
dec
outsl
xor
repnz
mov
push
ret
ljmp
inc
fwait
push
sub
cmp
mov
ret
imul
jno
inc
inc
call
sete
add
stos
pop
mov
insl
fsubr
loop
fwait
enter
call
mov
bound
das
jae
dec
repnz
aam
loope
mov
mov
inc
cmp
mov
incb
push
cmp
jmp
test
mov
sub
lock
push
rol
and
jge
or
jp
in
lcall
imul
jae
testb
jge
jmp
mov
popa
xor
pop
inc
ret
imul
mov
push
mov
dec
push
fsubs
jb
gs
fadds
push
test
jmp
jb
adc
clc
fwait
mov
inc
imul
inc
lea
pop
cli
inc
hlt
outsb
sarl
mov
repz
xchg
cltd
out
push
ret
mov
mov
repnz
stc
jo
sti
push
or
out
shll
mov
mov
arpl
mov
int3
mov
test
mov
leave
cmp
out
jp
setle
adc
cmp
imul
clc
xor
and
mov
xor
sbbb
stos
push
xchg
jo
icebp
mov
jmp
fld
xor
popf
insb
adc
jle
cwtl
xorb
jnp
rcrl
inc
faddl
jae
jl
fcomps
cltd
out
pop
cs
lds
mov
push
lods
sbb
push
nop
outsl
push
cmp
xlat
popa
pusha
ljmp
loop
cmp
add
cmp
dec
insl
loope
xchg
lcall
inc
repnz
hlt
mov
imul
mov
sbb
cs
push
sub
or
fidivs
loopne
jmp
ljmp
mov
push
or
insb
inc
inc
lahf
jns
fildll
call
outsl
xchg
add
outsl
out
jp
jecxz
addr16
dec
xchg
mov
repnz
xacquire
and
xor
jbe
cltd
repnz
dec
int3
push
or
loope
leave
mov
insl
inc
mov
sbbb
mov
shl
lods
dec
icebp
inc
mov
cmp
jg
mov
cmp
adc
inc
inc
lea
dec
shrl
dec
sbbb
push
jno
lods
push
nop
shll
adc
mov
xchg
jae
inc
or
loop
test
les
mov
bound
ret
in
jbe
pop
testb
arpl
jno
mov
push
in
push
pop
xor
add
cmp
cmp
leave
push
push
xlat
rorl
icebp
int3
cmp
stos
pop
and
fnstcw
or
jp
xchg
xchg
mov
cmpsl
mov
inc
and
loop
stos
jg
and
rcll
cmp
and
lret
cmp
loop
js
dec
stc
insl
mov
rcll
dec
adc
push
mov
xor
out
jb
int3
inc
or
pop
loope
adc
icebp
ret
jg
inc
jp
mov
scas
mov
in
scas
inc
xor
popa
pop
stc
mulb
jnp
add
mov
shl
leave
pop
jmp
fnstenv
push
lods
icebp
popa
mov
dec
mov
xor
sub
xchg
jbe
xor
jo
shlb
pop
cmpsl
and
xchg
pop
sbb
scas
sub
jae
jp
add
fiaddl
sbb
je
mov
in
dec
arpl
mov
mov
jnp
push
dec
cmp
sahf
push
inc
xorl
fdiv
jmp
mulb
cli
out
jno
subb
insb
fcmovnbe
push
loopne
push
aaa
in
imul
pop
sub
jae
in
out
add
test
lret
scas
shrl
cmc
cmp
lcall
adc
loope
pop
imul
idiv
sbb
jp
call
dec
in
stos
and
cmpsl
test
push
sbb
inc
ret
cmp
xchg
jp
or
stc
in
jns
rolb
lock
push
mov
sub
jg
stc
dec
or
popa
mov
imul
subl
pop
mov
lods
cmpb
inc
mov
loope
push
ret
mov
inc
subl
ja
shrb
fmull
inc
cmp
ret
stc
insb
mov
mov
jg
out
imul
mov
shl
cld
test
inc
pusha
vfrczss
mov
mov
test
dec
xor
dec
ljmp
cmp
jno
stos
pop
mov
push
cmp
shlb
mov
xchg
out
lods
pop
cltd
mov
clc
icebp
dec
stc
mov
inc
mov
std
loope
jae
xorl
ljmp
cld
cwtl
loope
or
imul
jno
jne
insl
cli
cwtl
loop
mov
test
cmp
inc
cmpl
sub
stc
xor
ret
mov
push
fiadds
inc
inc
dec
loope
cltd
mov
add
cmp
repz
or
gs
cmp
stc
rorl
bound
mov
lcall
lea
jno
cmp
nop
aaa
outsl
xchg
daa
mov
sub
jle
popf
dec
lods
pop
fldenv
ljmp
sarl
mov
cmp
loope
in
fisubrl
out
mov
cmp
and
mov
jne
add
sarb
pop
loop
arpl
add
rolb
rorl
icebp
ds
imul
orl
xchg
ljmp
cld
sbb
stc
inc
jo
mov
cltd
jp
or
sbb
stc
and
mov
adc
push
imul
loopne
mov
pop
out
enter
pop
repnz
dec
xor
dec
dec
mov
pop
clc
ret
add
orl
xor
stc
test
push
insb
pop
stos
leave
mov
jecxz
jns
sti
dec
fldenv
cmpsl
imul
leave
dec
mov
sbb
popf
ljmp
mov
popl
out
jo
test
adc
mov
out
push
mov
rorl
stc
pop
xchg
jno
insb
test
xchg
xor
clc
dec
cltd
popa
sti
sub
inc
rolb
lods
xchg
jns
insb
jecxz
adc
xchg
cmc
or
repnz
out
stos
cwtl
add
cltd
stc
jb
ds
test
pop
decl
mov
mov
icebp
sub
rorb
imul
popa
unpcklps
sbb
insl
ja
xor
sbb
ret
sbb
mov
pop
sbbb
and
inc
inc
or
in
mov
fidivrl
xor
fsubrs
test
aas
sub
repnz
out
inc
xor
adc
ja
sbbb
loop
xchg
stc
inc
in
clc
cmp
cli
push
inc
mov
push
sub
imul
andl
mov
fsubrs
pop
lea
call
or
test
push
xchg
pushf
aam
scas
rcll
stos
ljmp
lds
inc
mov
sarb
cmpsb
movsl
sbb
lcall
cmp
fsts
adc
imul
and
out
sbb
icebp
dec
test
push
das
dec
rcr
pop
mov
pop
lret
cmp
repnz
repnz
out
lcallw
sbb
xchg
jnp
jnp
mov
add
pop
sub
pop
jp
xchg
add
subb
test
inc
shll
dec
xchg
push
jno
into
arpl
stos
and
lret
adc
inc
jnp
mov
cli
lods
subl
sbbl
xchg
jb
hlt
push
dec
andl
loop
out
insb
mov
imul
shl
push
scas
xchg
lods
ret
imul
cmpl
and
test
push
jmp
push
sbb
roll
cmp
ret
cltd
lret
push
push
adc
dec
lods
jp
mov
inc
sbb
lods
stos
orl
add
jae
mov
ret
pcmpgtw
stc
jns
bound
insb
dec
mov
loope
mov
popf
mov
dec
xorb
xchg
mov
dec
pop
insb
jns
inc
stos
sahf
jb
push
and
adc
push
xchg
mov
cltd
fdivr
lret
xor
sub
jno
mov
mov
cmp
mov
xchg
ficompl
and
xor
mov
xor
hlt
stos
jne
mov
int3
lret
imul
xchg
jns
dec
push
in
dec
imul
fcoml
loope
pop
mov
mov
into
mov
ljmp
cmp
xchg
cmp
jns
inc
stos
mov
xchg
pop
mov
jmp
dec
mov
mov
xchg
ljmp
cltd
mov
outsl
ret
and
popf
mul
shll
mov
cmc
mov
jne
lret
jae
fistl
push
xchg
xlat
pusha
daa
je
icebp
push
xchg
mov
mov
mov
loope
dec
in
popf
lcall
mov
cmp
push
mov
jae
mov
mov
jne
ljmp
pop
inc
stos
xor
sti
xor
and
lds
jg
jno
sarb
aam
arpl
ret
inc
push
push
mov
xchg
or
push
subb
idivb
out
mov
std
arpl
inc
lret
sbb
mov
jnp
arpl
cwtl
xor
adc
inc
out
mov
lods
stc
pop
xchg
mov
mov
mov
lods
lret
cmp
xchg
push
leave
mov
mov
pop
push
mov
cmp
xor
mov
jnp
loop
lock
add
cmp
push
and
mov
cli
dec
mov
cmp
inc
mov
jb
cmc
subl
xchg
dec
mov
stos
test
cmp
add
jns
mov
inc
pop
ret
sub
insl
test
sar
out
repnz
mov
sbb
xor
mov
pop
orl
cmp
pop
stc
bound
mov
imul
lds
stos
shl
sub
clc
xchg
ljmp
hlt
jmp
dec
mov
push
jno
cli
and
jg
pop
ds
jg
ret
imul
adc
and
inc
lcall
jmp
bound
lahf
push
pop
push
inc
xor
ficoml
push
and
rcll
xchg
loop
pop
and
mov
shrb
xchg
rcll
stos
jno
popa
jnp
inc
jno
pushl
imul
pop
cmp
dec
xorb
pop
loope
push
jmp
sub
and
jp
xchg
dec
xchg
pushf
xlat
cmp
mov
mov
cwtl
jp
in
andb
push
add
sbb
jmp
cmp
mov
lcall
xchg
jg
add
shlb
cmp
lret
cli
into
add
pop
jg
ret
cmp
cmp
loope
pop
pusha
outsl
clc
lcall
bnd
xor
inc
xchg
jmp
outsl
aam
mov
xchg
push
mov
std
push
xorl
sbbb
insb
pop
stc
cmp
xchg
xorl
mov
sbb
mov
int3
orl
out
add
pop
jns
inc
jbe
icebp
sub
jp
in
and
popa
jg
jmp
or
rclb
mov
rol
pop
push
mov
inc
aaa
mov
popa
sti
mov
orl
cli
andl
adc
dec
jae
adc
mov
xchg
mov
outsl
xchg
sarb
and
adc
mov
lcall
icebp
add
aas
rcll
and
cmp
push
dec
decl
mov
cltd
mov
jnp
sbb
stc
mov
sub
cli
jne
jp
xorl
xor
push
shrl
int3
sbb
cld
cwtl
loop
flds
xchg
push
jecxz
jno
pop
mov
adc
lret
pop
add
repnz
mov
push
int3
jno
into
popa
enter
leave
outsb
je
in
mov
mov
and
inc
icebp
lods
xchg
repnz
sbb
sbb
inc
mov
test
mov
mov
aam
loop
shrl
bnd
xchg
push
push
in
test
adc
lret
cmp
stc
sbb
jge
lret
inc
adcl
jecxz
mov
cmp
fwait
stos
dec
shlb
xor
cli
xchg
rorl
mov
jmp
pop
popa
mov
inc
pop
adc
out
cmc
fnstcw
stc
dec
test
mov
xchg
bound
lret
pusha
push
dec
xchg
popa
cltd
cmpsb
mov
dec
stos
inc
jae
jge
inc
stc
out
inc
hlt
fistpl
push
cmpl
rorl
mov
mov
into
push
imul
inc
std
mov
popf
xor
inc
cmpb
stc
lds
jae
jnp
fiaddl
xor
jns
shlb
imul
popf
ret
inc
popa
addr16
push
in
ljmp
int3
imul
dec
mov
jno
jae
jne
ret
mov
stos
stos
mov
cmp
and
push
sbb
popa
adc
loop
xchg
or
in
fidivrl
jecxz
mov
insb
repnz
pop
je
lods
andb
xor
inc
fsts
or
jg
mov
leave
dec
inc
fnsave
add
ficoml
arpl
enter
rcll
fadds
mov
in
jnp
pop
cltd
pushf
lcall
inc
in
cs
addl
ljmp
ret
ljmp
or
out
jge
jo
in
dec
stc
scas
mov
mov
lret
add
mov
pop
sbb
imul
mov
out
adc
popa
loope
dec
or
fnsave
sbb
test
mov
cmpsl
lock
mov
shrl
push
jae
jecxz
jecxz
rcrl
inc
jo
call
jp
mov
cmpb
jmp
xor
jmp
cwtl
mov
pop
jecxz
mov
nop
mov
lock
cmp
icebp
sar
add
stos
test
loope
pop
hlt
jp
mov
xchg
sub
cmp
inc
and
xchg
xchg
xchg
and
mov
mov
leave
jmp
shrb
mov
pop
mov
xchg
jb
inc
inc
mov
add
lds
jmp
jmp
int
aas
inc
or
pusha
sbbl
addl
sbb
mov
stc
icebp
icebp
or
adc
arpl
mov
mov
inc
mov
stos
push
push
notb
stc
and
flds
pop
mov
dec
or
cmp
pop
ret
aam
xor
scas
or
and
sarl
cmpsl
ja
ljmp
jb
xor
mov
fldcw
xchg
addl
jge
cmpb
sarl
shll
pop
jp
lea
enter
loope
mov
call
loopne
ljmp
inc
inc
sub
jp
stc
pop
add
rcrb
jo
imul
xchg
in
adc
push
push
jns
repnz
cwtl
xor
imul
push
jmp
cmp
into
jmp
mov
mov
cmp
shrl
cmp
xchg
xor
lcall
mov
ret
mov
repz
lcall
dec
push
cld
xchg
rorb
xchg
fcomip
xchg
pop
jnp
push
lock
pop
and
hlt
push
shrb
lods
outsl
subb
mov
jnp
push
xor
dec
mov
xchg
stc
pusha
hlt
mov
mov
roll
iret
push
inc
sbb
loope
lret
out
and
adc
loope
or
mov
popa
push
rclb
mov
ds
in
aad
repnz
mov
jb
int3
jnp
xchg
nop
pusha
clc
cmpb
inc
test
adc
loop
repz
loope
out
stc
cltd
testb
addl
xor
out
popf
cli
jne
cmpsb
vcvtps2dq
jge
sarb
mov
cmp
mov
call
dec
add
imul
insl
imul
add
lcall
sbb
cmp
insb
push
mov
arpl
mov
jg
mov
mov
lahf
mov
pop
pop
in
cli
in
jae
insb
mov
pop
lods
jb
push
pop
xchg
je
popf
les
in
cli
mov
xchg
xor
fdivp
test
movsb
shll
loope
pop
jmp
je
icebp
decb
pop
bound
cltd
sbb
inc
xorl
jb
sbb
repnz
popa
out
aaa
shl
pusha
dec
clc
stos
pop
xorl
mov
imul
mov
lock
icebp
xor
lea
push
dec
mov
cmpsl
call
fs
sub
mov
sar
pop
jnp
gs
mov
or
xor
ljmp
xchg
test
roll
testb
mov
xorb
stos
jge
sub
fstpl
pop
mov
push
bound
cli
jno
shrl
shr
inc
jne
pop
xor
inc
int3
push
pop
inc
arpl
fsubs
xor
cmp
fmul
cmp
out
pusha
popa
ja
in
xchg
inc
mov
jb
push
leave
stc
in
stos
not
in
imul
addb
cli
popa
adcl
adcl
inc
imul
jmp
dec
inc
shl
push
fs
loop
jnp
inc
stos
sbb
in
xchg
fldcw
mov
fstpt
mov
arpl
loope
fidivl
mov
cli
lret
add
into
push
mov
sahf
add
addb
pop
push
jecxz
fcomi
cmp
jno
sbb
pop
or
decb
ret
adc
jg
inc
nop
inc
test
loope
or
adc
pop
pop
stos
out
dec
cmp
stc
es
mov
pop
fwait
jns
cwtl
repnz
jmp
push
inc
in
mov
add
cltd
adc
lods
ljmp
xor
jmp
shl
mov
inc
dec
stos
xor
lahf
jp
jg
or
inc
sub
jbe
xchg
jp
aas
ret
dec
bswap
dec
leave
mov
cltd
inc
sbb
andb
xor
mov
push
xor
imul
icebp
pop
aas
clc
ret
mov
add
stos
stos
xor
dec
ret
lcall
pop
mov
dec
cmp
fcoml
jb
clc
xchg
test
popa
loop
jns
cmpb
xlat
inc
cmp
iret
cmp
fidivrl
xor
sbb
jns
test
mov
cmp
xor
inc
arpl
jae
fsts
inc
sti
xorl
jnp
xorl
add
or
ja
ljmp
cli
stc
in
mov
movsb
arpl
shrb
fidivl
sub
into
inc
loop
or
out
test
jg
lock
inc
add
mov
xchg
loope
fwait
rcrl
cmp
dec
cmp
mov
call
xchg
xor
test
xchg
lods
subl
cli
jae
add
inc
orb
mov
jp
mov
mov
mov
mov
mov
mov
ja
cltd
outsb
or
ror
sbbl
movsb
incl
mov
ret
jecxz
inc
dec
cmp
push
jmp
movsb
add
stos
add
jno
cli
fmulp
or
inc
loopne
cmpsl
fdivs
sbb
or
lods
popa
jb
add
popa
xchg
out
iret
add
loope
push
ljmp
out
fdivp
push
xchg
pop
mov
mov
test
sahf
pop
mov
push
jb
mov
shl
xor
into
insl
into
arpl
push
and
add
subl
popa
push
jmp
jb
dec
inc
adc
int3
mov
cli
cmp
cli
jb
sti
daa
add
stos
add
lret
inc
pop
loopne
fidivs
inc
aas
cs
cmp
or
inc
push
popa
pop
in
jno
jns
icebp
cmp
mov
xor
adc
sbb
cld
daa
push
cmpl
leave
cmp
mov
adc
cmc
mov
adc
sbbb
ficompl
mov
outsb
jecxz
adc
in
insl
jno
push
cld
mov
cmp
inc
into
xchg
in
add
loope
jns
mulb
sbb
inc
cmpsl
sub
inc
pusha
push
bound
add
add
test
cwtl
mov
fsubrp
out
imul
inc
xchg
mov
add
out
xchg
in
movsl
inc
add
repnz
mov
subb
mov
add
mov
and
leave
leave
pop
ret
sub
popa
mov
sbb
shlb
icebp
loope
jge
call
push
push
pop
jns
push
push
ror
hlt
icebp
imul
mov
insl
imul
sarl
jnp
cmp
pop
fiaddl
mov
mov
mov
decl
adcl
ret
mov
imul
mov
in
push
dec
lods
fcoms
fadd
cli
test
and
daa
inc
ljmp
ljmp
mov
sbb
add
mov
enter
loope
repnz
xor
repnz
cmpsl
and
push
xor
inc
push
icebp
pop
out
data16
dec
mov
xchg
cli
repnz
mov
xor
es
pop
sub
lret
incb
xor
mov
test
and
mov
lea
mov
push
hlt
and
addl
add
mov
xorb
ljmp
xchg
imul
movsb
dec
jp
push
push
push
sub
cmp
lret
dec
push
xchg
mov
cld
popa
loope
and
notl
add
mov
dec
cld
aas
push
bound
jge
data16
mov
iret
and
sbb
push
xchg
add
push
bound
in
lcall
pop
and
cmp
sub
or
loope
pop
mov
icebp
shll
subl
stc
cmp
fsubrl
mov
sarl
jmp
adc
test
loopne
sar
lods
aad
jmp
cmp
sarl
xchg
dec
add
and
cmpb
icebp
jne
adc
mov
movsl
xor
push
sbb
inc
popf
jp
dec
cmp
push
icebp
leave
cmp
cli
jg
inc
adc
sar
xchg
sbb
outsb
imul
bound
stos
add
pop
add
aas
push
leave
mov
rep
cli
add
stos
cmp
mov
shl
fcmovb
push
lock
mov
mov
mov
popa
push
xor
das
jo
in
mov
cld
xchg
dec
sbb
pop
pop
jnp
ficomps
int3
push
mov
pop
jno
cld
daa
stos
rcl
arpl
xor
jae
pusha
ss
jp
mov
adc
test
xchg
cmpb
popa
fadd
jnp
ficompl
shl
add
add
outsl
mov
or
int3
mov
imul
push
ror
mov
stos
test
bound
mov
hlt
int3
arpl
fisubrl
sbb
push
sbb
sub
stos
dec
mov
orb
sbb
bound
jmp
fld
inc
sbb
mov
pushf
push
mov
cmp
inc
xor
pop
mov
fwait
jle
ret
add
add
repnz
xor
std
push
sbb
adc
sbb
inc
jno
fnstenv
test
cli
out
sarb
mov
data16
cmpsb
jg
push
clc
mov
cmp
inc
int3
cmp
dec
popa
push
fs
pop
xchg
hlt
jb
jns
inc
std
out
fnstcw
stc
dec
xchg
loop
pop
add
pop
adcl
imull
add
mov
ret
mov
pop
xor
push
roll
ret
add
roll
cwtl
mov
mov
not
in
xchg
ljmp
pop
imul
out
ret
test
mov
int
out
out
ljmp
cltd
cmpb
stc
sbb
jno
divl
push
adc
mov
push
shrb
or
push
push
pop
pop
mov
lods
insb
jno
je
movsb
test
imul
pop
xchg
and
jb
stos
rolb
jecxz
je
or
adc
and
fisttpl
xor
shll
lods
add
mov
fldenv
ret
mov
fisubrl
jns
sub
stos
mov
lret
sbb
loope
push
xor
orl
movsl
test
repnz
shl
insb
jns
sub
cmp
stc
add
dec
adc
lret
aaa
pushf
shl
and
inc
ret
cli
xchg
add
push
mov
jae
add
jb
stc
stos
cli
int
jns
insl
sarb
ljmp
mov
aas
pop
lret
mov
pop
add
pop
jmp
mov
sbb
cmp
mov
loope
imul
in
push
pop
inc
add
xchg
xor
add
jg
xchg
xchg
fisubl
and
into
lret
stc
dec
mov
dec
cltd
leave
xchg
dec
mov
pop
cmp
lret
andb
or
imul
sbb
add
incl
push
bnd
test
xchg
mov
pop
adc
aad
jecxz
adcl
add
aaa
das
mov
mov
add
cmp
stos
pop
imul
insl
icebp
mov
adc
mov
inc
pop
pop
pop
add
mov
pop
ret
sbb
stos
aaa
mov
push
add
cmp
inc
subl
stos
loopne
fdivrs
fidivs
cmp
fcmovu
int
popa
bound
hlt
scas
xor
pop
stos
push
jnp
push
jg
sbbb
in
add
loopne
inc
enter
jnp
xchg
sbb
pop
outsb
int
mov
jae
orb
stos
jecxz
cmp
jns
jmp
xchg
imul
sbb
mov
cmc
cmp
orl
movsl
loopne
pop
scas
jnp
pop
addb
mov
jp
lret
loope
mov
pop
das
sbb
outsb
ret
push
fldt
sarl
dec
imul
cli
loop
jg
and
mov
xchg
rolb
inc
mov
push
xchg
aam
cmp
jmp
mov
xchg
xchg
popa
int
sti
or
push
sub
push
xchg
movsl
jl
mov
cltd
scas
test
jle
into
cs
cs
or
or
rcl
cli
lret
inc
pop
aas
cwtl
push
sbb
iret
pop
bound
mov
imul
loop
and
nop
mov
jecxz
arpl
jmp
adc
mov
pop
stc
add
inc
repnz
xorl
lcall
pop
push
push
xchg
test
mov
out
loop
pop
call
push
jns
pop
xchg
or
out
add
rcrl
mov
push
mov
jno
loop
push
cmp
test
stc
test
adc
popa
mov
mov
or
sub
push
xchg
mov
add
dec
inc
pop
or
lea
add
inc
subb
adc
aad
jnp
or
repnz
and
add
mov
cmp
repnz
fsub
xchg
stc
jmp
les
icebp
fdivrp
fdivr
cmpsl
mov
xchg
adc
insb
push
sahf
loop
fimull
jmp
sbb
sbb
andb
xchg
mov
fucomip
add
and
xor
and
arpl
mov
mov
cmc
jae
fsubrs
mov
inc
gs
mov
loope
jle
je
aas
and
lcall
jae
out
push
mov
add
bound
ljmp
push
dec
dec
add
and
repnz
dec
adc
call
add
xchg
mov
mov
jp
ret
xchg
mov
adc
jg
mov
push
orl
push
xor
out
mov
cmp
dec
sbbb
push
add
and
test
imul
imul
and
jecxz
loope
fadd
xchg
dec
sahf
sbb
ljmp
out
pop
inc
push
lods
loop
xor
inc
mov
mov
xorl
in
cli
pop
or
mov
movsl
in
arpl
repz
xchg
adcb
cmp
stc
add
mov
bnd
cmp
gs
pop
jecxz
lods
inc
cmp
xchg
fistl
add
rcrb
jae
es
adc
sarl
ret
mov
subb
dec
hlt
mov
loope
add
xor
inc
or
mov
cmp
orl
inc
rclb
fs
add
mov
push
push
popa
fiadds
inc
xor
loop
lcall
add
lret
in
orl
xchg
scas
notb
xchg
mov
jno
pop
in
jns
ja
test
pushl
cmpl
cmp
adc
inc
add
stc
push
icebp
xchg
jno
cmpsl
sub
jae
loopne
mov
pop
mov
cmp
and
popa
subb
xchg
jp
or
pop
gs
sbb
insl
adc
sarl
lcall
bound
pop
xor
jae
mov
xchg
ret
insb
xchg
jb
mov
mov
push
and
sub
dec
mov
sbb
cmp
psubd
sti
and
stos
cmpsb
xchg
mov
push
aas
mov
add
xor
stos
shlb
or
pop
push
outsl
and
xchg
cmc
and
popf
add
mov
and
popa
fnstenv
popf
jl
cli
jae
test
roll
bswap
inc
xor
fwait
add
shlb
jno
daa
or
sti
dec
xchg
jmp
mov
subl
pop
cmp
cmp
popf
mov
push
cltd
stc
hlt
inc
arpl
pop
mov
mov
mov
outsb
jno
test
je
xchg
pop
sbbl
dec
fs
cmp
sarl
sub
inc
mov
mov
es
mov
inc
jb
stc
jno
jnp
mov
push
rcrl
xchg
call
nop
int
push
fsubs
lods
sub
lock
orl
mov
pop
popa
loope
insb
jnp
mov
cltd
mov
stos
bound
xor
in
xlat
dec
enter
ljmp
mov
mov
ja
lret
add
imul
cmp
ja
int3
push
stc
xor
popa
jnp
sbbl
fsubs
push
jnp
rcrb
rcl
sub
jae
ret
dec
mov
ret
cs
push
sub
ja
and
push
in
xchg
mov
push
leave
loope
pop
cli
push
stc
dec
adc
mov
inc
or
xchg
jae
scas
je
stos
jne
cmp
stos
lock
aaa
mov
xor
push
push
stc
dec
arpl
icebp
stos
cltd
dec
movsb
mov
push
xor
fldcw
jp
mov
jg
ret
jg
lds
icebp
jp
cld
mov
sub
bnd
or
and
mov
nop
shll
jecxz
in
stos
xchg
jns
fdivrl
call
inc
pop
dec
adc
arpl
pop
xor
gs
ljmp
inc
mov
add
lret
icebp
das
jo
jge
sub
into
pop
sbbb
clc
cmp
push
push
faddl
lcall
inc
push
adc
jae
lock
jns
and
lods
jb
mov
rcrb
mov
mov
push
push
push
and
xchg
sbb
testl
fisubs
repnz
xor
lock
xchg
and
lods
cmp
sbbb
or
inc
mov
aas
jnp
leave
imul
or
fsubrs
dec
mov
leave
inc
popa
mov
mov
mov
pop
mov
jne
int3
inc
add
pop
push
mov
cli
add
jmp
int
sbbb
clc
push
pop
jnp
add
inc
mov
xchg
xor
scas
push
lcall
xchg
dec
aas
clc
mov
inc
mov
mov
dec
fs
xor
mov
jne
sti
pusha
push
cmpsb
add
cmp
jecxz
ret
lea
mov
inc
rclb
xor
jmp
jns
adc
ljmp
cmp
xor
cmp
mov
fidivrl
ds
dec
inc
shll
fstl
mov
jle
inc
sbb
add
push
mov
xchg
pop
jae
in
cli
divl
mov
xchg
fnsave
push
hlt
ficompl
or
xchg
in
mov
jnp
hlt
xchg
lcall
fnstcw
mov
mov
and
stos
dec
jp
jns
lea
mov
jg
dec
and
arpl
repnz
in
sub
imul
mov
or
mov
mov
add
int3
xchg
fcomp
lods
lock
jp
in
outsl
in
stos
fisubs
insb
pop
clc
ret
nop
jno
push
int
inc
test
int3
mov
push
sbbb
ljmp
mov
loop
pop
decb
imul
jb
dec
rolb
mov
lcall
adc
xor
mov
outsb
mov
bound
jecxz
stos
dec
pop
jo
int3
pop
mov
pop
mov
xor
andb
jle
ret
ret
leave
xchg
adcl
mov
fisttps
pop
popa
mov
hlt
xchg
inc
ljmp
jle
mov
cmp
out
add
rcl
pusha
add
jp
aaa
xor
lods
mov
rolb
loopne
loopne
sbb
and
fimull
leave
in
inc
mov
je
ret
push
adc
mov
pop
lahf
aaa
push
loop
leave
push
loop
or
shlb
pop
pushl
xor
fimuls
ljmp
shufps
pop
stos
mov
test
jp
jle
xchg
insl
fnstenv
outsl
outsl
xchg
test
arpl
out
hlt
inc
mov
lods
adc
push
mov
jno
jp
popa
enter
incb
jno
aaa
push
and
loop
stc
shl
les
inc
xor
mov
ds
jecxz
subb
jmp
mov
xor
xchg
push
fs
or
mov
in
stos
sarl
sbbl
or
movsb
popa
push
outsl
addl
loop
mov
cmpb
hlt
jnp
pop
push
out
in
sbb
daa
icebp
mov
imul
or
shlb
sbb
mov
xchg
addb
xchg
push
jb
ret
ljmp
sti
xchg
jae
stos
adc
sub
decl
sbb
dec
sar
xor
or
and
imul
lods
cmpb
or
jae
pop
pop
fildl
bound
call
jnp
cmp
mov
in
jne
cli
lahf
adc
rcrl
dec
insb
adcl
xor
mov
pop
ret
inc
movb
ja
imul
xor
and
jae
je
lods
jge
dec
adc
subb
scas
cld
add
cmpl
xchg
mov
pop
arpl
push
data16
cmp
mov
xchg
fnstcw
pop
add
shll
std
add
ljmp
inc
xchg
xchg
addl
stc
outsb
test
lods
icebp
cmp
shlb
mov
arpl
jns
loope
loop
shlb
pop
mov
mov
loop
clc
aas
test
mov
inc
loop
push
mov
scas
mov
inc
imul
fildl
testl
dec
xor
mov
xor
imull
push
cmp
sti
pop
sahf
mov
rcll
andb
stos
add
popa
jmp
push
pop
cmpb
clc
int
andb
fstps
or
and
dec
jb
enter
mov
mov
mov
aam
bound
imul
xorl
push
scas
dec
push
ljmp
jmp
push
out
inc
lods
js
in
shll
std
mov
inc
out
pop
jg
jb
loope
pop
and
testl
sbb
dec
mov
roll
ss
cmp
aad
pop
cmp
repnz
arpl
sbb
jmp
pop
stos
lret
mov
dec
mov
add
xor
xchg
cmpl
out
test
mov
jo
inc
cmc
cmpsl
push
xor
mov
jno
in
pop
shrl
or
or
mov
dec
mov
inc
rcr
xchg
xchg
stc
iret
xor
mov
ljmp
loopne
test
mov
xchg
xchg
fwait
andl
cmp
testb
ljmp
pop
mov
inc
mov
push
cmp
cmp
push
pop
addw
lods
stc
sbbb
mov
imul
xor
xor
xor
mov
sahf
sbb
mov
fdivrl
dec
enter
fsubrl
pop
cltd
pop
rorl
mov
and
neg
mov
xchg
pop
cmp
lods
clc
mov
popa
int3
stc
loop
pop
jnp
adc
push
or
jns
jo
out
dec
jno
dec
jp
push
lods
test
adc
jne
cmpl
mov
jg
sub
jp
pop
jl
push
pop
fisttps
cmpsl
cmp
push
in
jnp
mov
loope
je
xchg
push
and
ljmp
cltd
mov
fcomps
je
pushf
cli
mov
sahf
or
mov
icebp
popa
add
ljmp
popf
xchg
cltd
cmp
mov
inc
push
inc
pop
fcmovbe
cli
cmp
add
or
push
mov
jnp
xor
and
mov
jp
test
mov
ret
xor
mov
add
pop
mov
pusha
xor
push
push
hlt
mov
cwtl
push
popa
mov
mov
sbb
jae
xor
popa
pop
fcoml
mov
popf
hlt
shrb
sub
mov
inc
sbbb
jmp
lock
ljmp
shll
es
loopne
xchg
fs
scas
cmp
mov
dec
mov
mov
mov
mov
add
ret
xchg
mov
lods
jnp
inc
push
or
cli
pop
xchg
jb
mov
shll
arpl
cmpb
lret
popf
mov
inc
or
cmp
pop
jg
enter
cld
dec
dec
stc
sti
push
loopne
cmp
mov
xchg
ret
addl
jns
xor
add
mov
mov
xchg
popa
lcall
arpl
and
mov
push
test
xchg
or
dec
imul
icebp
dec
mov
push
mov
icebp
popa
rorb
out
mov
nop
cltd
xor
pusha
aad
popf
arpl
out
mov
dec
mov
add
jmp
mov
push
jp
dec
or
mov
lods
pop
jmp
test
icebp
xor
add
int
shll
push
in
stos
push
cmp
lcall
mov
cmpb
dec
out
xchg
mov
out
mov
fxch
in
mov
clc
xor
add
fidivrl
or
sbb
push
sbb
push
dec
adc
imul
ret
addl
outsl
mov
mov
or
insb
leave
into
dec
les
jb
push
jno
pushf
ret
andl
inc
cmp
popl
sbbl
daa
mov
out
dec
fnstcw
leave
in
xor
stos
mov
mov
mov
fwait
andl
cmp
xor
aad
lret
stos
mov
xchg
cmp
loop
mov
mov
ficompl
jb
push
jg
jg
xchg
repnz
lcall
pop
icebp
or
inc
rcrl
jp
or
adc
xchg
pop
push
int
lret
push
call
xchg
dec
pop
fisubs
cmp
xor
xchg
loopne
outsl
inc
mov
movsb
mov
insl
lea
xor
mov
add
xor
or
dec
jnp
dec
sub
mov
mov
jle
inc
jb
neg
jno
stc
add
xor
js
stos
cli
in
inc
lods
dec
pushf
pop
push
mov
cli
dec
jnp
and
sbbb
sbb
cmp
out
jae
jb
or
mov
jnp
push
lcall
arpl
cmp
jae
ret
stos
inc
lods
out
push
inc
add
pop
fwait
mov
jp
arpl
dec
ret
push
lea
shr
jno
mov
adc
sbb
pop
insb
mull
das
frstor
enter
jle
loopne
jge
and
sbb
dec
inc
pop
rcll
mov
pop
mov
dec
outsl
adc
sti
cld
gs
sbb
sub
push
jp
adcl
stc
mov
push
shll
mov
pop
roll
fwait
loope
xor
sub
and
adc
lret
xor
mov
pop
stos
push
xor
rcl
mov
xchg
and
je
sbb
pop
pop
ret
or
cmp
mov
loop
sti
loope
mov
loope
lret
inc
push
sub
movsl
push
push
insb
js
cmpsb
outsl
sbb
add
aaa
mov
jno
or
ret
mov
adc
mov
stos
xchg
cmc
pop
fucompp
jae
rol
xchg
or
loope
ret
rcll
xchg
into
shll
pop
cmp
cmp
push
adc
bound
jge
jnp
movsl
jns
and
push
aas
add
mov
push
mov
push
cltd
inc
mov
mov
cmp
pop
testb
outsl
mov
sarb
fdivrl
ljmp
add
jmp
addl
ljmp
cmpsl
outsb
in
push
testb
lds
ljmp
popf
stos
jnp
shrb
shll
pop
mov
sub
xchg
jnp
fs
dec
xor
nop
mov
jmp
cltd
adcl
mov
popf
arpl
insb
popf
inc
mov
mov
xchg
push
fnstenv
rep
mov
sbbb
divl
mov
hlt
decb
out
out
add
mov
push
sbb
xchg
mov
push
xchg
enter
paddd
jns
pop
lcall
imul
leave
sbb
ret
jns
add
dec
bound
cmp
loop
jmp
mov
sbb
mov
add
mov
mov
in
jb
mov
enter
data16
gs
std
pop
jno
add
pop
arpl
lcall
gs
mov
cs
or
imul
mov
push
stc
inc
mov
jae
clc
ret
mov
xchg
fs
xchg
cmp
mov
dec
push
dec
mov
xor
inc
xchg
pusha
stc
jp
and
roll
fdivl
dec
das
mov
repnz
inc
push
inc
idivl
rcr
jno
jp
out
xor
in
xchg
cmpl
sahf
ret
jns
fs
inc
add
rorl
jae
cmp
adc
out
stos
jg
xchg
xchg
fsubp
arpl
or
pop
push
insl
jnp
out
xor
call
arpl
mov
ret
xchg
and
stos
xor
or
popf
imul
jmp
pop
int
ja
cli
lds
add
mov
sub
imul
jmp
hlt
test
inc
loopne
jns
out
push
mov
and
mov
mov
fld
in
dec
stc
imul
dec
enter
and
adc
mov
mov
jno
insl
sar
test
mov
adc
je
cmp
mov
jb
je
push
nop
xchg
add
inc
fcmovu
adc
jb
divb
xchg
cmp
pop
mov
subl
stos
jmp
stos
std
xor
icebp
pop
xchg
inc
dec
pusha
adc
mov
pop
inc
push
cmp
jmp
dec
xchg
push
pop
jle
mov
jno
pop
in
stc
xor
cmp
imul
fcompl
ljmp
fwait
adcb
sbb
mov
dec
mov
pop
insb
repnz
xor
mov
and
out
inc
mov
ljmp
mov
sbb
ret
mov
arpl
mov
push
lods
pop
cltd
rcr
loop
xchg
xor
popa
or
maxps
xlat
sbb
jae
mov
imul
hlt
jl
jb
repnz
test
xor
loopne
fidivrs
cli
sbbb
dec
imul
cmpb
pop
inc
xchg
and
jg
jnp
jnp
sub
xor
push
sub
incb
pop
xor
stc
mov
enter
inc
stc
xchg
jb
xchg
inc
loopne
push
add
inc
cwtl
inc
aas
mov
sarl
hlt
adc
lods
stos
cmpl
push
jae
sub
std
leave
inc
rclb
hlt
inc
loope
mov
mov
jnp
pop
add
pop
dec
aas
sbb
pop
shl
mov
mov
xor
std
inc
test
mov
cli
mov
inc
sahf
sub
and
rol
sub
push
adc
push
out
dec
jb
imul
in
sahf
inc
pop
cmp
push
jae
jnp
xchg
jg
xchg
mov
cltd
jae
cmp
popa
fdivrs
mov
xor
add
cmp
shll
into
sbb
cmp
mov
outsb
dec
arpl
and
push
pop
stos
aam
push
shll
popf
sarl
arpl
dec
xchg
icebp
ret
push
mov
push
add
mov
sbb
adc
xchg
inc
jl
lcall
xor
cmpl
push
adc
dec
add
push
inc
loop
sbb
inc
dec
mov
pop
jge
addb
vphsubbw
cmp
adc
aad
fs
jns
je
mov
je
push
push
jne
jns
mov
sbb
test
stos
loop
loopne
out
xchg
jp
cmp
dec
imul
push
loope
xchg
cmp
in
jno
push
mov
and
stos
mov
cld
mov
xchg
push
jns
add
popa
cmp
jns
xchg
out
lock
ret
ret
hlt
mov
mov
ds
data16
lds
dec
shll
dec
push
daa
lret
pushl
mov
xchg
bound
inc
stos
mov
jno
ljmp
and
mov
adc
imul
addl
sbb
mov
add
pop
loope
cli
xchg
xchg
or
lret
popf
pop
shll
cmp
cmp
movsl
sub
aam
cmp
inc
lahf
add
and
xchg
jbe
lahf
push
inc
cmpsl
je
jg
jno
and
subl
pop
cwtl
xchg
shl
add
ret
inc
adc
fnstcw
jb
push
push
jg
ret
mov
sub
fcmovu
inc
adc
push
inc
add
outsl
outsl
loop
mov
mov
inc
loope
loopne
daa
ja
jmp
ljmp
mov
mov
fs
jg
ret
stos
pop
inc
shr
xchg
mov
lret
jp
int3
idivl
enter
jns
and
cli
out
stc
pop
xor
push
lods
jno
hlt
inc
xchg
push
push
mov
mov
dec
xchg
xor
decb
sar
lcall
pop
mulb
lea
pop
lcall
movsl
and
in
nop
mov
cmp
rcr
mov
aad
shl
fucomip
ss
inc
inc
imul
dec
add
leave
ret
adc
test
lret
add
stos
mov
inc
addl
mov
mov
imul
add
dec
jns
fnstcw
and
leave
rorb
out
mov
push
pop
mov
cltd
mov
call
lret
into
cli
sub
outsb
push
ret
in
jb
mov
cmp
inc
insb
xor
jno
xor
call
loope
inc
inc
arpl
jg
adc
sbb
inc
scas
sar
xor
pop
scas
out
jno
push
mov
sbb
xchg
ret
repnz
or
lea
ror
or
jnp
pop
lahf
loope
adc
push
cli
repz
inc
inc
popa
icebp
cmp
cmp
dec
adc
lret
push
subb
push
ret
jb
push
shll
mov
and
shl
xchg
mov
xor
iret
loop
push
ljmp
mov
dec
lods
dec
mov
in
jecxz
push
fcomp
add
mov
popa
xor
rcll
jno
xchg
movsl
jnp
sbb
fcomp
pop
push
cmc
xor
mov
lcall
jae
pop
test
std
add
inc
mov
leave
loop
aam
mov
fstps
mov
push
sub
ss
shll
push
xorb
mov
icebp
jb
xor
push
imul
mov
cmp
arpl
fisubs
repz
cmp
mov
xor
outsb
stc
stos
jbe
push
popf
add
xor
fnstsw
push
xor
fmull
cli
pop
clc
push
inc
imul
dec
lods
push
fsubr
repnz
fdivl
or
xor
scas
loop
inc
push
loope
add
xor
xchg
xchg
imul
pop
cltd
pop
lds
pop
inc
mov
jnp
jae
jmp
bound
rcl
shll
sar
pop
xchg
jae
loop
lret
mov
cmp
mov
loope
imul
jge
mov
popa
inc
sarl
aam
sbb
or
add
lret
mov
pop
cld
jmp
out
mov
stc
int3
jae
iret
mov
dec
dec
mov
pop
sbb
xchg
cmp
movsb
stos
cmp
leave
push
ret
sti
addr16
dec
xor
pop
shl
xor
out
insb
and
push
pop
daa
lods
inc
ret
xor
push
cmp
add
jp
jge
stos
cmp
lcall
xor
int
stc
and
cmp
and
cmpl
dec
gs
cmp
xchg
push
xor
jb
sbb
stc
sub
fxch
arpl
and
jmp
add
pop
mov
jge
pop
loop
rolb
aam
test
subb
push
mov
loop
imul
or
sahf
mov
iret
stos
je
mov
and
dec
mov
fnstcw
enter
push
push
and
mov
int
fadds
pop
push
xchg
and
std
mov
and
mov
out
jnp
icebp
mov
testl
and
ja
jg
mov
sbb
mov
dec
push
cmpsb
fadd
push
jb
cld
sub
push
int3
les
inc
add
mov
cmp
push
bound
adc
mov
ljmp
lahf
add
jb
fistpl
cmp
mov
jp
stc
mov
rolb
pop
out
dec
cmp
mov
xchg
jmp
push
xorl
adc
mov
mov
or
stos
fcmovu
andl
ljmp
inc
jno
push
in
push
dec
loop
loopne
std
enter
jae
fistpl
mov
adcb
arpl
mov
dec
cmp
repnz
push
stos
cmp
leave
sub
inc
mov
add
fdivr
fcoms
cmp
xchg
fs
lcall
mov
out
push
ljmp
inc
add
xchg
imul
test
fnstenv
xchg
mov
and
imul
xor
lcall
leave
aas
insl
ret
ljmp
repnz
imul
mov
insl
mov
enter
cmpsl
int3
insl
jnp
pop
mov
ljmp
stos
lods
mov
arpl
jae
icebp
stc
adc
sarl
xrelease
aad
hlt
push
mov
repnz
mov
imul
mov
ja
ljmp
inc
xchg
mov
fisttpl
add
cmp
mov
adc
push
rcrl
mov
je
jmp
fscale
ret
sbb
jno
mov
jae
push
xchg
dec
movsb
jmp
push
jne
int3
or
xchg
popa
std
mov
xchg
and
mov
jp
inc
mov
fwait
inc
mov
xor
in
loop
pop
shrb
cmpb
lods
or
out
ret
hlt
es
jmp
and
cltd
push
lahf
and
add
mov
mov
or
pop
iret
andl
add
jns
or
lock
cmp
rorl
pop
ret
add
or
mov
jp
and
sarb
pop
pop
in
add
push
test
xchg
mov
stc
mov
fs
lret
sub
ljmp
test
shlb
xor
scas
jns
dec
push
or
pop
pop
popa
loop
jmp
xchg
push
cli
fisttpll
cmpsl
or
fstps
cmpsb
adc
mov
addb
shl
pop
jnp
fdivrl
loop
clc
push
stos
push
inc
faddl
in
stc
xchg
ret
popa
mov
dec
push
dec
add
rcrl
jb
ficompl
arpl
and
sbb
jp
inc
mov
arpl
roll
push
inc
inc
pop
mov
stos
push
leave
lods
mov
test
in
imul
cmp
or
xor
sub
addr16
imul
ljmp
imul
pop
adc
xor
insl
shl
loop
sub
mov
sarb
or
jae
jns
hlt
fcmovbe
lahf
fstpl
lods
inc
sub
cmp
imul
xor
fabs
rcrl
dec
lcall
rorb
addb
fidivrs
clc
fs
cltd
addb
std
mov
fwait
mov
mov
popa
adcl
cmp
pop
xchg
xor
mov
push
jo
arpl
dec
out
cmp
mov
pusha
fmuls
jmp
mov
jb
ljmp
mov
je
fisubl
xchg
mov
lret
sbbb
push
pop
fmul
fnstcw
inc
inc
adc
stos
iret
add
dec
imul
mov
nop
loop
push
push
popa
and
jp
pusha
imul
xchg
lret
jle
xor
xorl
jb
dec
dec
cmp
add
or
inc
cld
popa
ret
dec
dec
xlat
mov
mov
bound
fsts
and
arpl
orb
repnz
mov
mov
popa
cmpsb
push
mov
iret
sbb
mov
inc
inc
jae
mov
arpl
jmp
aas
lds
sbbl
jp
push
jecxz
mov
popa
repnz
lret
jnp
call
mov
xor
insl
pop
cmp
bound
sbb
rcll
pop
jecxz
ret
lods
orb
test
lods
jb
jbe
or
sub
fadd
clc
dec
push
fnstenv
mov
bound
ret
or
mov
stc
cmp
mov
roll
xor
push
xor
mov
xor
mulb
sarl
mov
addb
inc
aas
and
mov
shl
xchg
idivb
stc
mov
cltd
hlt
push
jmp
add
addb
mov
push
sbb
mull
push
fs
int
dec
pop
push
inc
lea
mov
xor
jns
inc
loopne
xor
fwait
mov
ret
mov
mov
mov
sub
out
jns
and
outsb
stos
mov
ffree
mov
dec
ret
lods
fldcw
adc
jae
xchg
insl
notb
jg
jecxz
jnp
dec
xor
inc
rcrl
jnp
fldcw
int3
jae
xor
add
push
test
push
jb
clc
mov
pop
popa
jnp
cli
or
mov
jl
out
mov
sbb
movsl
out
jge
in
iret
add
mov
pop
inc
in
jae
mov
std
cmp
fidivl
jecxz
push
hlt
mov
push
scas
xor
fbld
gs
pop
sbb
ljmp
push
lods
mov
inc
insb
jns
lods
loop
add
loope
shlb
adcb
mov
xchg
test
mov
push
lahf
adc
jnp
xor
push
cltd
cmp
arpl
cmp
xchg
imul
sbb
rcll
leave
pop
loopne
push
xchg
stos
cltd
sti
xchg
xchg
clc
cmp
cmp
pusha
jmp
xchg
mov
lods
jmp
repnz
icebp
and
jcxz
int3
jecxz
ret
clc
andb
jnp
loopne
fmuls
xchg
mov
and
xor
pop
nop
loop
mov
mov
mov
ret
dec
rorl
adc
andb
stos
dec
cltd
orb
insb
int3
dec
cmp
nop
add
xchg
sbbb
push
jno
and
fidivrs
or
std
cmp
jno
jne
out
fsubrs
hlt
insl
imul
xchg
mov
push
setae
imul
flds
lock
jno
in
adc
jl
loop
shl
leave
push
jp
mov
xchg
lods
inc
pop
shll
xor
pop
repnz
xchg
stos
inc
pop
idivl
lea
test
adc
test
in
stos
clc
aaa
shrl
jge
pop
negl
xchg
icebp
jecxz
dec
jecxz
repnz
int3
lcall
jno
fnstenv
enter
lret
fdivr
loop
loopne
ficomps
int3
cltd
arpl
in
inc
faddl
mov
xor
or
add
popa
mov
stos
jecxz
imul
std
sub
inc
popf
fcomps
push
inc
jns
xchg
jmp
ficoml
and
subb
cli
push
add
mov
pop
jg
mov
test
cli
dec
xchg
inc
jo
dec
pushl
bound
push
inc
jle
imul
inc
xor
addb
scas
cmpsb
cmp
shrb
loop
insb
mov
cli
xchg
out
pop
in
rcll
loopne
and
lods
jp
xchg
add
stos
repnz
out
ret
and
stos
pushl
jb
cltd
subl
lods
lods
jmp
mov
lods
pop
add
hlt
cltd
inc
imul
out
scas
mov
les
popa
icebp
jg
inc
test
inc
lock
andl
imul
ljmp
cs
shlb
cltd
pop
addr16
fwait
jge
aad
ja
adc
dec
push
pop
dec
ljmp
popf
cmp
xor
cmpl
loope
push
addb
dec
in
fnstenv
xor
ljmp
inc
dec
pop
out
push
inc
sub
lock
imul
adc
orb
imul
inc
jg
xchg
jnp
mov
mov
leave
mov
pop
stc
popa
test
pop
mov
popa
roll
loop
sahf
in
bound
leave
stos
mov
jmp
inc
jae
push
lock
mov
imul
icebp
cmpsb
dec
arpl
cli
pop
popa
fdivs
cmp
sub
or
lahf
xor
inc
int3
arpl
cmp
adc
inc
ds
repnz
ljmp
rclb
out
push
bound
mov
adc
push
or
push
aaa
dec
xor
cmp
daa
paddsb
test
pop
sub
mov
inc
mov
icebp
cli
push
adc
inc
mov
ljmp
lock
mov
std
repnz
sbb
or
repnz
mov
pop
jb
mov
mov
int
push
jecxz
xorl
jecxz
jecxz
dec
mov
mov
cmc
and
popf
repnz
cmp
adc
fcoml
pop
xor
stos
popa
xor
jnp
jecxz
inc
jae
xchg
loope
fidivrl
imul
in
inc
mov
xor
bound
pop
push
mov
loopne
add
jnp
outsb
jge
std
dec
mov
stos
sbb
icebp
mov
pop
std
dec
rcrl
subl
jmp
popa
pop
pop
add
jno
cmp
repnz
mov
and
xchg
dec
mov
cmp
adcb
inc
dec
icebp
adc
dec
cmp
sub
je
cmp
fs
jb
push
out
push
inc
lret
imul
leave
flds
xlat
insl
shl
cmpsl
jmp
jecxz
inc
pop
dec
mov
add
add
add
imul
outsb
mov
call
jnp
bound
inc
mov
jecxz
add
lds
shrl
mov
xchg
in
lret
loop
push
addl
stc
ret
int3
shl
jb
lcall
popa
mov
lods
loope
sub
xchg
test
nop
jmp
mov
repnz
mov
adc
dec
sbb
mov
adc
je
jo
fnstsw
or
mov
movsb
imul
xchg
mov
add
decl
inc
push
jp
stos
das
cli
call
outsb
mov
rol
mov
or
call
xchg
int
inc
mov
inc
jecxz
stos
push
insb
push
xchg
adc
dec
mov
inc
rcrl
lcall
dec
fs
cmp
jnp
adc
fldl
xorl
lods
stos
add
jecxz
mov
loop
test
insb
dec
rcll
je
ljmp
push
dec
repnz
fisttpl
add
or
call
loope
xchg
inc
xchg
mov
mov
bound
jge
mov
fmuls
enter
loope
xor
fistpll
mov
push
mov
loop
mov
mov
lret
bound
sbb
xchg
arpl
adcb
into
jne
jnp
dec
repnz
jg
xchg
push
lcall
shrd
stos
or
ljmp
loop
pop
test
cmc
fwait
popf
imul
cli
in
dec
mov
mov
lds
push
mov
aas
dec
or
fisubs
test
and
lea
xchg
testl
dec
notl
int3
dec
mov
xor
stos
rcrb
jnp
lret
fs
pusha
lret
pop
ds
andb
out
xlat
clc
fnstenv
lea
cmp
cmp
mov
xchg
clc
xor
cmp
push
repnz
data16
in
lcall
cmp
fs
xor
idiv
loop
lods
dec
or
ds
dec
dec
cmp
movsb
push
sbb
arpl
and
icebp
dec
icebp
popa
icebp
xor
lea
add
lock
inc
rcll
xchg
rclb
andl
jns
xor
leave
dec
sbb
cmp
gs
ficoms
add
cmp
add
insb
xchg
cmp
ljmp
stos
pop
lods
add
roll
xor
hlt
ljmp
jno
or
in
add
lahf
xor
insl
ljmp
pop
addr16
mov
sub
repnz
lcall
cld
mov
jmp
adcl
push
cli
incl
jb
in
dec
xorl
je
jnp
mov
aam
jae
mov
cmp
mov
sarb
cmc
mov
ret
fdivl
stc
xor
ja
sbb
jnp
ss
cwtl
test
jg
xchg
arpl
mov
sub
mov
js
shll
repnz
jno
pop
test
nop
or
iret
ret
les
aam
imul
jp
roll
lods
dec
imul
add
xor
out
mov
dec
xchg
dec
push
add
pusha
out
in
jp
fdivp
lods
imul
mov
pop
mov
loopne
shll
mov
xchg
jae
imul
repz
addl
pop
inc
subl
fisubl
mov
pop
xchg
dec
xor
inc
subb
jae
cmp
xchg
ret
cmp
rorl
leave
adc
fiaddl
push
lret
cmp
stos
popa
mov
scas
stc
fmull
push
fst
pop
mov
cmp
cmp
insl
popa
fwait
arpl
sti
insb
pop
or
sub
loopne
cltd
xchg
lret
add
popa
dec
lcall
pop
xchg
test
cltd
inc
int3
jmp
iret
popa
mov
add
pop
loop
push
sub
out
jp
push
loope
add
xchg
dec
xchg
xor
dec
loope
sti
mov
int3
int
pop
pop
push
fisubs
mov
jle
sbb
mov
movsb
inc
stos
jno
mov
push
mov
fmull
inc
enter
add
pop
or
aad
adcl
mov
hlt
stos
inc
xor
dec
cmp
incl
icebp
xchg
mov
xchg
out
jp
push
in
dec
incb
fsqrt
icebp
lds
jecxz
xor
ds
popa
popf
jae
out
push
sbb
loope
inc
jno
push
pop
mov
and
adc
hlt
mov
pop
jmp
inc
add
mov
xor
dec
arpl
inc
xchg
jb
mov
in
ret
arpl
push
xchg
jp
add
xor
jp
lods
adc
lcall
cmp
mov
loop
stc
or
inc
cltd
in
test
das
in
pop
inc
mov
shrb
mov
test
inc
hlt
hlt
push
mov
push
jnp
dec
push
movb
cmpsb
stc
lock
pop
or
cmpsl
dec
popa
in
lahf
ficomps
push
imul
inc
stc
xchg
jo
mov
jmp
push
repnz
call
loopne
adc
les
pop
inc
rorb
clc
xlat
orl
mov
adc
lds
cmp
push
loope
add
stc
inc
stos
push
sbb
scas
shl
lods
jecxz
cmp
cltd
xchg
ret
dec
sub
lods
es
jle
adc
jmp
leave
icebp
add
cld
arpl
sahf
mov
bnd
movsb
fs
lahf
addb
inc
push
xchg
int3
cmpsb
dec
stc
inc
andl
int
mov
push
mov
cmp
rorl
lock
rorl
adc
mov
popf
mov
push
dec
adc
daa
adc
lea
sbb
int3
rcr
jp
je
popa
std
inc
mov
jge
inc
lret
fyl2xp1
xor
push
xchg
cld
gs
fs
dec
loop
in
push
out
jb,pn
repnz
mov
xchg
jmp
pop
mov
bound
mov
mov
push
js
mov
xchg
je
scas
mov
add
sbb
sarl
in
and
lock
stc
fnstcw
xor
sub
arpl
lret
pop
cltd
fs
pop
xchg
mov
xor
mov
pop
jns
add
mov
mov
je
mov
fldcw
je
add
bound
insb
orb
insb
xchg
in
jp
clc
loope
mov
sub
enter
xchg
lock
fst
in
add
dec
popa
mov
loop
inc
adc
mov
adcb
jnp
mov
push
aam
jb
cltd
sahf
adc
lret
shlb
imul
flds
push
out
cmpsl
pop
in
inc
xchg
mov
shlb
mov
or
mov
ss
cltd
test
ja
jnp
lret
clc
fsub
jns
into
enter
in
iret
sbbl
dec
jne
fwait
int3
inc
mov
and
xor
jb
jno
xchg
or
in
lret
fisubl
ljmp
dec
dec
shrl
int3
loope
inc
or
repz
pop
push
adc
ror
out
fwait
jb
in
movsl
xchg
scas
sbb
inc
in
roll
jae
push
mov
dec
sbb
clc
addl
test
xchg
xchg
leave
sarl
inc
and
mov
pop
icebp
fldcw
std
fmull
sub
arpl
mov
mov
jecxz
sub
mov
cli
imul
push
mov
mov
mov
mov
stc
dec
lret
movsb
jnp
and
dec
cmp
ret
cs
fildll
adc
outsl
mov
push
stc
xchg
sahf
inc
mov
or
bound
mov
lret
push
push
inc
jge
fmuls
jnp
sbb
repnz
mov
mov
mov
clc
ss
inc
jb
and
or
ljmp
ficoms
stos
loope
push
mov
mov
bound
loope
clc
jecxz
mov
insb
cmp
mov
cltd
in
xchg
andb
mov
insb
mov
rolb
ret
sbb
cmp
mov
sahf
push
mov
popa
jno
jg
imul
in
mov
leave
stc
push
pop
ror
cld
cmpsl
xor
jb
dec
mov
mov
mov
fwait
in
jae
add
xor
cmp
jmp
jno
jl
out
cmp
test
mov
lods
dec
arpl
fs
dec
call
outsb
sbb
lahf
rcrl
in
jmp
shll
push
shr
mov
lods
loop
pushf
sarb
fimull
stos
inc
ljmp
cmp
fsubrs
mov
loopne
xchg
lock
jns
in
or
xchg
pop
inc
enter
jmp
rclb
add
push
jecxz
jb
cmp
and
stc
adc
repnz
rcrl
outsb
in
mov
push
lock
add
lcall
subb
inc
scas
je
cmpl
push
push
xor
std
icebp
test
jae
mov
jno
inc
icebp
into
and
sarl
test
lret
or
adc
jmp
mov
cli
xor
stc
es
sub
jno
ljmp
imul
xor
mov
jne
cli
mov
push
orb
imul
inc
xchg
and
adc
pushf
jns
cmpl
cmp
or
dec
repnz
loope
call
stos
dec
xchg
push
adc
dec
dec
or
pop
jp
dec
sbb
xor
mov
inc
pusha
in
stos
stos
jns
cmp
add
cli
push
inc
xchg
mov
cmc
cli
mov
stc
mov
cmp
cmp
stc
adc
ret
ret
bound
shlb
push
cvtdq2ps
repnz
jmp
flds
inc
xchg
inc
inc
sbb
jle
test
nop
jp
mov
ret
jno
push
aad
lock
mov
imul
test
arpl
push
jle
in
lock
xchg
fs
rol
aas
jnp
movb
jno
div
mov
add
mov
or
cmp
pop
dec
mov
pop
imul
sbbl
inc
sub
aad
mov
jp
sub
dec
and
sub
cmp
pop
and
lcall
sub
out
mov
lea
adcb
stos
jnp
loope
pop
cmp
sub
dec
imul
inc
stos
jg
mov
movsl
orl
cli
adc
jb
jns
popa
icebp
ljmp
adc
addb
outsl
add
jg
xor
push
and
je
adc
lahf
sbb
stos
lods
push
in
inc
fldenv
pop
lcall
add
subb
repnz
bnd
jns
xchg
mov
xor
icebp
jp
and
stc
pop
push
shrl
into
jno
ljmp
dec
loope,pn
shrl
jecxz
mov
pop
cmp
sahf
bound
jp
add
push
dec
mov
mov
imul
jp
mov
mov
sub
pop
stos
insb
cmp
fldcw
jno
stc
jp
loopne
clc
int
jb
testl
jnp
adcb
mov
scas
push
jb
dec
ljmp
sbbl
into
icebp
jb
cltd
stos
lcall
insb
idiv
clc
cli
stc
pop
mov
cmp
sbb
xchg
xor
sbb
jnp
push
push
loope
xchg
cmp
test
rcll
std
add
dec
pop
jns
addb
xchg
cmp
rorb
jae
mov
pop
mov
jnp
in
mov
add
cltd
pop
dec
inc
or
push
orb
push
bound
jnp
out
stc
dec
jp
into
jb
xchg
push
inc
fs
adc
jle
imul
in
je
ret
imul
jns
rclb
mov
push
cltd
nop
shll
mov
data16
or
popa
dec
add
icebp
shll
mov
enter
dec
and
mov
cmp
xchg
jb
ljmp
fsts
inc
pushl
push
lret
mov
stc
lock
adc
jb
fwait
lcall
lret
mov
mov
inc
stc
jo,pt
jp
fcomi
jns
popa
and
insb
dec
lods
fcoml
push
mov
rorb
jae
data16
sbb
cli
loop
mov
orl
addl
add
or
cwtl
xchg
test
jmp
mov
test
xor
roll
cmpsl
adc
dec
ficoms
pop
testb
cli
push
jmp
stos
shr
shll
and
lcall
dec
jmp
sti
xchg
add
stc
imul
and
xchg
jae
pushf
cltd
pop
jb
mov
jge
imul
pop
mov
inc
or
xchg
test
clc
pop
arpl
jge
loope
ret
stos
pop
nop
sbb
inc
fidivrl
dec
mov
insl
mov
call
jns
mov
mov
mov
dec
fcoml
and
mov
shr
add
lods
stos
mov
mov
and
mov
inc
xor
aam
xchg
and
test
push
imul
xchg
jnp
icebp
inc
movsl
sub
leave
or
fdivl
push
decl
cmp
mov
add
stos
and
stc
or
pop
mov
flds
push
sarl
mov
addl
push
dec
inc
push
fwait
dec
push
fs
sub
jp
jge
jae
cmpb
rcr
repnz
pop
or
sahf
inc
inc
dec
dec
xor
push
popf
adcl
hlt
jae
cltd
mov
subb
inc
cmp
loop
mov
sbb
cltd
sti
ljmp
pop
daa
ljmp
mov
imul
in
cltd
out
lahf
std
mov
pop
ret
and
mov
stos
xor
out
popa
mov
dec
pop
mov
pop
clc
mov
sarb
stos
xor
mov
call
inc
or
xor
and
imul
mov
pop
mov
jno
rcll
push
xchg
aas
adc
push
xor
dec
xor
add
roll
imul
dec
lss
loop
pusha
test
push
dec
movl
test
sahf
jg
aas
fdivrl
stos
popa
inc
dec
out
mov
imul
push
jge
ret
outsb
or
mov
mov
cmp
cltd
hlt
loope
sub
add
mov
adc
test
cmp
inc
fisubl
pop
pop
ret
xchg
cmp
mov
inc
ret
mov
in
popa
cmp
lret
scas
stc
jns
cmpl
pop
and
icebp
stc
data16
fprem
inc
mov
pop
jmp
dec
fcomi
cmp
clc
pop
popa
inc
fyl2xp1
pop
cmp
mov
dec
pop
addb
fcoms
enter
aam
xor
push
add
loope
and
sti
inc
push
stc
pop
mov
adc
pop
xchg
jge
inc
jnp
fwait
addb
xchg
dec
mov
mov
add
aam
mov
shlb
hlt
jmp
imul
add
leave
mull
add
cltd
and
data16
rcll
push
shll
mov
or
cmp
sahf
imul
icebp
lock
cld
loopne
mov
fsts
shrl
cltd
push
adc
push
sbb
cmp
pop
loop
add
leave
pushf
sbb
dec
ret
lods
cmp
arpl
sbb
jle
xchg
mov
cmp
jmp
mov
and
icebp
sbb
sbb
sbb
or
and
pop
xorb
push
jmp
lahf
imul
add
and
ret
pop
in
icebp
cmp
mov
leave
cli
imul
mov
lea
mov
fadd
popl
sbb
jns
jae
pop
testb
stos
subl
gs
rcll
cmp
cmpl
dec
mov
cld
adc
mov
push
mov
sbb
mov
repnz
enter
xor
pop
subl
dec
lock
sbb
jns
push
jg
lcall
int3
popf
mov
push
fidivs
sbb
inc
push
dec
mov
mov
cmp
fcmovb
mov
out
lret
mov
pop
call
and
pop
jno
mov
cli
daa
pop
ja
jg
cmpsl
roll
inc
jae
in
inc
ja
adc
add
cmp
ror
in
push
jae
ljmp
leave
je
test
jle
arpl
dec
inc
inc
sbb
xchg
jnp
pop
fidivs
and
jp
sbbl
out
imul
bound
pop
repnz
jmp
shrl
rorl
adc
pop
inc
lods
jecxz
mov
lret
test
sahf
adc
mov
pop
test
aas
leave
popa
fwait
push
ret
jp
inc
jnp
scas
add
xorl
sbb
hlt
add
mov
loope
rcrl
lahf
cmp
lcall
xor
push
lods
pop
arpl
dec
repnz
adc
dec
int3
lock
je
inc
pop
loopne
pop
fmulp
jge
andl
aas
dec
ret
mov
cmp
movsl
shll
jns
inc
adc
cmpsb
or
movsb
outsl
jae
or
mov
add
stos
xchg
sbb
mov
or
mov
inc
push
pop
sti
inc
fiaddl
xchg
mov
jno
push
icebp
movsb
add
mov
scas
daa
xor
inc
std
inc
stos
addb
stos
enter
loop
rcrl
jecxz
shr
jecxz
hlt
xchg
jae
mov
xor
mov
test
xor
inc
dec
dec
push
xchg
sbb
jle
je
dec
inc
je
lods
xor
loope
fstpt
inc
adc
mov
leave
adcb
jle
mov
test
in
loope
mov
repnz
lahf
mov
shll
arpl
shll
ljmp
icebp
je
push
lcall
push
out
pop
out
icebp
int
inc
arpl
punpckhdq
rol
icebp
and
mov
sbb
lock
cltd
xchg
icebp
pop
push
bnd
popf
ljmp
cltd
mov
adc
orl
repnz
jae
imul
mov
test
hlt
sbb
jno
aad
jp
mov
pop
int3
bound
jb
fdivs
lret
jp
add
mov
ret
loop
lock
xchg
shrb
addl
lret
jge
and
push
loop
ds
inc
push
xchg
sahf
mov
imul
xchg
sbb
sarl
jg
dec
mov
out
add
negb
cmp
fistl
mov
push
mov
in
imul
imul
cmc
roll
jbe
cmp
int3
jge
outsl
dec
push
fdivrs
imul
lock
mov
dec
mov
adc
rorl
pushf
mov
sub
inc
aas
aas
jg
popa
mov
orb
inc
jb
jge
insb
imul
test
xor
push
bound
adc
jb
add
cmp
mov
shr
out
dec
mov
mov
xchg
cli
inc
dec
test
mov
incb
arpl
pop
movsb
cmp
mov
addl
cli
cmp
leave
mov
jmp
outsl
inc
add
inc
lcall
lahf
jnp
add
cltd
xor
dec
push
mov
testl
enter
push
mov
je
jno
cs
adc
xor
mov
movsb
jmp
ret
in
mov
jno
sbb
sub
and
xor
mov
xchg
imul
push
popa
pop
inc
add
and
dec
pop
aas
dec
jg
jg
add
xchg
stos
in
push
jecxz
push
out
in
cmp
jb
inc
inc
pop
cmc
leave
adc
idivb
pop
shl
pop
xchg
ja
mov
stos
adc
pop
xchg
cmpb
fs
pop
cmovae
adc
loop
imull
inc
test
xor
xor
dec
xchg
push
jnp
and
sbb
lret
addb
in
push
fisubrl
or
pusha
sbbb
xor
movsb
dec
mov
sub
xchg
adc
fidivrl
and
loope
shl
je
lock
inc
mov
mov
mov
sbb
xchg
cli
das
xchg
stc
ret
inc
dec
leave
es
popf
xor
add
pop
nop
or
jns
std
push
leave
jnp
mov
jmp
mov
dec
xor
icebp
add
stos
dec
inc
outsb
mov
inc
lcall
or
cmp
ret
int3
inc
pop
inc
or
jns
cltd
pop
stos
cmp
lods
xorb
sarb
pop
cmp
mov
adc
repnz
push
jmp
and
adc
popa
ljmp
add
jns
push
adc
into
xor
mov
inc
push
push
shrl
fwait
dec
out
cwtl
bnd
out
and
shl
imul
mov
push
dec
jg
imul
dec
dec
sbb
jns
add
pop
sbb
cli
rolb
or
std
iret
inc
inc
cmp
inc
fcompl
mov
dec
stos
adc
je
je
sub
iret
stos
nop
mov
fsubrl
lock
and
ret
test
push
cmp
loopne
xor
inc
call
cmp
pop
mov
rolb
sub
test
inc
sbb
arpl
cli
xchg
loopne
lock
out
pop
and
inc
je
push
hlt
jmp
xchg
cltd
ljmp
jne
flds
stos
pop
mov
rcll
stos
push
xchg
cmp
rorl
andb
pushf
push
fsqrt
mov
pop
mov
jecxz
mov
push
jb
mov
leave
add
dec
dec
icebp
dec
jmp
or
mov
mov
adc
push
dec
out
aad
mov
inc
test
xor
popf
xorl
push
jg
jnp
orl
subb
rorl
fs
fcmovb
xchg
das
adc
andl
mov
insl
inc
repnz
rolb
xorl
in
imul
mov
ljmp
jnp
stc
test
addr16
lock
dec
std
cmpsb
xor
dec
dec
cltd
mov
pop
cmp
ret
pushf
sarb
in
ss
adc
pop
shl
inc
pop
ljmp
push
push
bound
mov
pop
and
inc
dec
repnz
icebp
jns
fimull
inc
popf
adc
adcb
dec
call
int3
jge
loope
push
and
xor
cmp
sti
or
cli
dec
out
test
jno
push
mov
popa
ja
mov
int3
xchg
jp
loop
push
add
popa
jno
jle
push
lods
icebp
push
in
clc
dec
push
jle
leave
stos
xorb
and
cli
mov
xor
add
std
add
mov
stos
or
popa
insb
dec
aas
jae
xchg
push
mov
inc
stos
jno
int3
pop
mov
cltd
jge
xchg
dec
dec
add
repnz
les
jns
and
test
je
jg
imul
sar
xor
ljmp
or
cltd
or
movsb
imul
xchg
mov
orb
outsl
test
mov
xor
rcl
bound
fimuls
loope
rcl
pop
push
add
xlat
stos
dec
fildll
cwtl
pop
imul
orb
jg
mov
shll
dec
bnd
cmc
push
xor
loopne
dec
push
jge
test
rorb
inc
imul
arpl
xchg
stos
in
inc
jge
xchg
xlat
lret
jae
mov
and
cli
repnz
out
sbb
arpl
imull
cmp
mov
jne
aas
inc
repnz
jae
cli
ljmp
adc
mov
xchg
arpl
mov
cs
xor
fmulp
push
ret
mov
lods
mov
jp
lret
inc
fimuls
ficoms
push
cmc
and
mov
cmc
inc
cmp
mov
ret
pop
inc
cmpsl
out
mov
rcll
inc
pop
out
popf
mov
mov
mov
mov
xor
inc
test
mov
jmp
imul
in
xor
xor
aam
inc
bound
add
adcb
jg
xor
inc
jb
aas
xor
push
cltd
and
pop
inc
shlb
sbb
xor
dec
mov
jno
cmp
pop
je
inc
fstps
arpl
mov
je
push
jg
xchg
pushf
subl
leave
fsts
and
mov
jecxz
and
jp
ficompl
dec
pop
or
insl
ret
cmpl
jns
cmp
repnz
sarl
test
inc
nop
pop
aad
bound
fcmovnbe
jns
fcos
jno
rcll
ud0
dec
mov
push
push
push
imul
xor
cltd
test
dec
adc
pusha
push
add
insl
loope
mov
ficoml
lcall
rolb
pop
imul
push
push
jns
dec
stc
repnz
push
insl
imul
or
mov
adc
and
dec
icebp
xchg
fs
and
xor
push
cld
xchg
push
loope
arpl
fcomip
xorb
mov
and
popf
cltd
pop
push
add
negb
mov
iret
stos
ror
fisubs
mov
stc
mov
imulb
loope
xchg
shlb
fldenv
pop
jp
popa
push
loop
dec
mov
subl
xchg
cli
inc
dec
test
jb
ror
rcrb
int3
adc
cmp
mov
scas
cld
fcmovnb
pop
cmp
add
icebp
xlat
ficoml
jg
imul
add
push
add
pop
dec
jb
push
add
fcmovb
icebp
inc
jno
jns
stos
xorl
lock
mov
jle
inc
dec
bound
mov
mov
mov
sbb
mov
outsb
pop
orb
mov
imul
pop
andl
mov
stos
jp
pop
das
pop
loopne
stos
orl
fyl2xp1
inc
shrb
mov
adc
pop
mov
stc
cmp
popa
imul
xorl
xor
loope
jnp
dec
push
dec
xchg
push
ret
pop
mov
mov
dec
inc
add
ret
call
lcall
call
push
popa
jb
dec
mov
clc
inc
mov
xchg
push
fstps
cmp
adc
sbb
mov
inc
xchg
int3
sbb
pop
sbb
int3
push
loop
enter
jge
ret
mov
dec
in
loope
xor
mov
jae,pt
xchg
loope
mov
cli
cltd
mov
imul
nop
dec
decb
stc
adc
imul
in
test
push
shll
shlb
adc
ljmp
pushf
push
pop
fiaddl
pop
scas
fs
mov
add
mov
pop
out
pop
lret
add
cltd
fcoms
mov
push
xchg
repnz
icebp
icebp
sbb
stos
test
int3
pop
inc
ret
xchg
xchg
repz
stc
rorl
xchg
inc
andl
lock
call
mov
loope
or
xor
jae
push
imul
imul
inc
push
mov
fsubrl
popf
test
adc
push
cld
and
stos
jnp
xor
inc
in
mov
mov
je
in
in
mov
push
push
test
repnz
mov
jp
jo
add
cmp
shlb
push
add
jb
dec
xor
aad
and
jae
int3
cmp
cli
add
sbb
stos
icebp
mov
inc
xor
dec
dec
lock
push
inc
mov
lret
ljmp
inc
outsl
rorl
jg
xchg
xor
push
stos
mov
mov
lods
mov
repnz
push
ljmp
subb
ficoms
jbe
add
ljmp
mov
mov
int3
ret
cld
jns
pop
jno
mov
leave
mov
jo
je
imul
orl
mov
xor
call
ljmp
xchg
arpl
push
jmp
xchg
pop
xchg
jne
push
stc
dec
cld
mov
dec
mov
mov
popf
or
fmull
pop
inc
add
fistpl
popa
test
fsubrl
out
test
test
push
mov
je
int3
push
stos
jp
call
pop
imul
mov
in
xchg
fildl
stos
adc
out
in
loop
loope
jno
or
pop
cmp
and
int
xchg
mov
sub
dec
andl
xor
hlt
inc
pop
mov
loop
cli
mov
push
jecxz
fsubrl
mov
enter
pop
enter
adc
mov
fs
push
sahf
mov
inc
lea
mov
jb
lods
sar
ljmp
loope
mov
ret
mov
mov
mov
mov
sbb
inc
repnz
xor
cmp
cmp
xor
pop
cmp
sub
mov
fiadds
pop
sbb
fdivrs
cmp
or
imul
hlt
mov
xchg
push
jae
cmp
repnz
stos
les
adc
mov
jp
andl
lret
stos
mov
into
and
mov
insb
mov
push
cmp
push
std
pusha
pop
sahf
and
dec
mov
jp
lret
dec
movsl
test
hlt
jns
popa
jp
fcom
imul
clc
shrl
mov
stc
push
in
cmp
jns
repnz
jp
inc
push
push
lods
mov
repnz
popf
cli
xchg
push
mov
int3
sbbl
push
fsubr
dec
lock
stc
cmpl
shl
stos
add
and
stc
jns
mov
cmp
jae
popa
insb
mov
mov
inc
and
xchg
int3
mov
flds
inc
sbb
fcoml
ret
cmp
mov
sub
addb
addb
aas
data16
arpl
fldcw
dec
xor
sahf
mov
daa
shrl
arpl
pop
std
pop
mov
cmp
mov
mov
je
into
and
jo
loop
mov
shl
and
xchg
loop
jno
mov
adc
test
mov
sbb
jno,pt
cmp
push
mov
ficoml
mov
mov
sub
pop
neg
inc
out
adc
jecxz
jmp
jae
repnz
xchg
mov
fimuls
clc
js
lcall
lea
cmp
push
jecxz
mov
movsb
xchg
jmp
jl
inc
hlt
inc
cli
jnp
imul
inc
jns
loopne
push
mov
push
and
test
jb
xor
loope
pop
mov
push
mov
pop
inc
loope
leave
stc
inc
addb
add
and
dec
lret
xchg
cli
cmp
cltd
test
add
icebp
pop
mov
push
and
dec
cmp
leave
add
jno
dec
cmp
add
add
imul
add
and
xor
bound
std
push
push
lcall
pop
mov
or
mov
mov
inc
sub
bound
mov
jecxz
stos
sti
and
jae
imul
hlt
xor
sbbl
adc
push
inc
sub
inc
sahf
rcrl
xchg
jnp
mov
jmp
sbbl
lcall
and
arpl
or
mov
icebp
inc
ret
fnstenv
shlb
inc
push
out
push
dec
jp
lret
push
sub
sbb
jg
inc
mov
and
shlb
cmp
cmp
out
mov
loope
call
push
out
mov
jg
xchg
leave
jge
hlt
jno
jmp
rcll
push
add
cmpb
dec
add
adc
push
add
dec
hlt
adc
cltd
mov
push
ret
std
inc
inc
or
push
mov
std
sbb
jo
lea
ljmp
lock
sbb
pop
lea
aad
loop
or
imul
mov
lods
insl
stos
sbb
outsb
and
cmc
flds
call
xor
sub
jb
mov
repnz
sbb
stos
xor
mov
outsl
bound
and
popf
sub
sbb
icebp
xor
aam
inc
xchg
ret
mov
popa
stos
push
cli
int3
push
loop
mov
mov
cmp
cmc
sti
push
stc
sub
sahf
mov
mov
aas
lret
mov
add
xchg
jb
addb
sahf
test
jns
pop
stos
arpl
ret
fnstsw
sbb
cmpl
inc
fs
jnp
insb
stos
icebp
out
lcall
jb
pop
add
bound
push
test
hlt
inc
jae
add
mov
cli
pop
mov
add
jg
cmp
mov
call
fwait
push
sub
mov
imul
in
mov
cmc
aam
pop
sarb
jnp
fyl2xp1
notl
loopne
rolb
mov
push
cmpb
mov
or
andb
jb
fidivrl
dec
jo
cmp
cli
cmp
in
mov
out
loopne
scas
pop
or
idivl
push
leave
fnsave
mov
popa
inc
and
or
repnz
jle
mov
push
shrb
xor
push
mov
push
pop
sub
and
jo
jbe
push
sbb
jle
int
mov
and
push
xor
sarb
mov
cli
sub
mov
insl
push
and
and
stc
bound
in
fcoms
cmp
dec
sbb
cmp
lret
stc
out
jno
aaa
xor
imul
xor
or
jmp
push
lahf
pop
cmp
pop
mov
jnp
scas
aas
les
rcrb
and
adcl
in
cmp
pop
xorl
sbb
out
bound
jp
mov
das
fsubl
dec
pop
cli
sarl
fidivrs
push
out
arpl
adc
dec
mov
sbb
pop
cmpsl
shl
imul
bound
stc
sub
out
jae
jp
inc
std
loop
add
dec
add
int3
imul
mov
rolb
sub
loop
mov
stos
mov
jo
pop
cld
pop
repnz
sub
cmp
push
jo
fwait
jle
lcall
jecxz
adc
pop
cltd
adc
mov
orl
popa
in
mov
out
xchg
mov
lahf
pop
cwtl
lret
arpl
sub
jno
inc
stc
loop
push
dec
icebp
inc
out
orb
mov
mov
shr
loop
cmp
inc
imulb
aam
inc
pop
pop
xchg
cli
loope
pop
outsb
aas
mov
sarl
popf
push
adc
fisttpl
mov
pop
xorl
int
imul
arpl
int3
popa
mov
adc
bound
cmp
jne
jecxz
test
ret
jno
mov
ds
jecxz
cltd
mov
aas
jp
mov
ret
shr
sbb
hlt
inc
mov
or
pop
ds
not
jmp
ljmp
mov
ljmp
lahf
adc
push
cmp
mov
addb
mov
test
or
imul
xchg
loopne
in
and
pop
xchg
lret
push
mov
xor
push
mov
loope
mov
mov
je
mov
das
xlat
pop
ds
clc
sbb
add
lret
mov
lcall
adc
or
inc
lret
loope
shrb
pop
cmp
mov
repnz
movsb
jecxz
or
data16
shlb
jp
jge
mov
pop
push
notb
push
cmpb
push
add
stos
leave
push
ficoml
lcall
lods
pop
shll
icebp
dec
arpl
arpl
mov
cmpsb
dec
and
mov
lds
mulb
mov
inc
cmpsl
pop
inc
xor
test
dec
pop
add
jmp
imul
cmpb
mov
out
rorl
je
je
in
sbb
dec
jmp
and
fdivrs
testb
pop
pop
mov
dec
test
push
nop
and
imul
subb
cld
jp
jae
xor
into
mov
xchg
mov
ss
inc
nop
inc
cmp
into
push
and
test
xor
jnp
xchg
fnclex
icebp
push
inc
push
jns
sbb
stos
dec
rcll
enter
or
test
add
cmp
insb
cmp
mov
dec
xor
repnz
jmp
add
add
and
lods
stc
stos
imul
mov
arpl
icebp
stc
shll
inc
loop
ss
xorb
jo
in
out
sub
ljmp
cli
fldt
mov
mov
jae
push
cwtl
movsb
subl
aas
mov
xchg
inc
lret
out
add
add
jmp
ret
dec
scas
lods
ljmp
xlat
pop
push
dec
cld
mov
jle
xor
adc
je
and
mov
lret
add
jno
stos
adc
pop
dec
jnp
and
or
pusha
cmp
jmp
lcall
or
arpl
mov
loop
fisubrl
ljmp
xor
xchg
cmp
and
xor
inc
jmp
xlat
cmp
pop
stc
in
inc
mov
nop
andl
lcall
cmc
loop
xor
arpl
dec
jno
maskmovq
negl
cmp
jecxz
xchg
mov
mov
pop
mov
lcall
jno
stos
xorb
popa
push
repnz
stos
xchg
call
jno
add
inc
adc
loope
mov
sbb
loopne
enter
xchg
addl
mov
lea
pop
inc
xor
mov
and
cltd
jp
jle
cmp
dec
nop
xor
fsubrs
or
loope
add
and
fldcw
jno
ja
test
lock
cmp
mov
sti
test
adc
push
insb
stos
dec
test
mov
mov
pop
inc
cmp
inc
test
loope
push
fs
pop
and
int3
shlb
roll
scas
and
cmp
sbb
pop
mov
mov
icebp
push
push
jo
daa
popf
and
lret
jle
adc
loopne
mov
lcall
jmp
faddl
xchg
out
pop
xor
or
stc
mov
jno
inc
hlt
or
in
mov
fcmove
test
jb
outsl
mov
pop
inc
pop
mov
or
xor
add
mov
cmp
shrl
js
cmpl
loopne
rorb
testl
mov
cmp
je
xor
xchg
mov
addl
shll
cmp
lret
or
test
daa
arpl
push
mov
push
fidivrl
cmp
insl
cwtl
adc
pop
jnp
add
pop
sub
cmp
ljmp
data16
inc
fdivrl
in
push
mov
mov
roll
popa
fs
mov
fdivrl
jnp
mov
mov
and
cmp
and
jnp
lcall
repnz
add
jae
add
jnp
andb
pop
leave
ret
out
aam
int
idivl
stos
push
push
stos
xchg
loop
jge
mov
mov
std
popa
cmp
imul
xchg
test
cmp
pop
cmp
xor
mov
loopne
aas
std
dec
xchg
mov
push
lods
inc
adc
test
lcall
hlt
jmp
add
enter
mov
aam
jno
ret
fs
xchg
mov
pop
inc
jge
mov
push
pop
jnp
dec
stc
dec
rorl
push
inc
iret
xlat
lret
ds
ret
shlb
xor
outsl
add
xchg
fldl2e
jo
push
scas
mov
jnp
arpl
xor
bound
imul
popa
ret
cmp
leave
jno
sub
jecxz
imul
mov
mov
lcall
xchg
test
pop
enter
cmpl
dec
imul
mov
adc
pop
xchg
leave
data16
aad
test
les
xchg
sub
mov
icebp
sar
aad
leave
dec
add
jb
repnz
mov
push
lods
lcall
bound
mov
dec
xchg
pop
add
test
cmp
push
or
pop
jp
stos
push
dec
inc
mov
add
push
xchg
add
loop
enter
mulb
shll
addl
jo
imul
clc
arpl
enter
push
xchg
clc
mov
addb
and
mov
inc
or
cmc
add
imul
sbb
ret
cmp
sbb
adc
sbb
mov
inc
mov
sub
mov
leave
stos
sahf
cmp
inc
dec
and
out
mov
mov
rorb
inc
iret
jg
mov
jno
inc
imul
negl
add
mov
pop
adc
sbbb
mov
in
popa
mov
jb
mov
cmp
int
jns
push
push
repnz
fs
stc
imul
push
fidivs
mulb
addl
push
inc
aas
add
shlb
xor
jo
sbb
xchg
inc
cmovl
inc
je
xchg
inc
mov
ljmp
imul
inc
jnp
inc
dec
pop
in
pop
xchg
inc
jae
popa
mov
imul
add
mov
cmp
stos
inc
in
xor
inc
orl
popf
inc
andb
lcall
addr16
out
mov
cmp
movsb
inc
imul
add
icebp
push
mov
leave
dec
sub
bound
movsl
mov
jge
mov
mov
jns
je
mov
enter
and
repnz
inc
dec
sarb
jns
hlt
mov
imul
test
add
stc
mov
mov
stos
jge
jp
insl
or
jb
test
fistl
jns
sbb
icebp
icebp
fstl
inc
mov
dec
dec
cmp
sub
jns
inc
cmp
leave
hlt
out
sbbl
stc
adc
add
cmp
leave
lret
xchg
cld
jp
lcall
and
cmc
cmp
cltd
sbb
xor
push
cmpl
cmp
ljmp
mov
push
pop
test
out
dec
and
jge
vandps
fimuls
jns
push
scas
dec
rcrl
jb
dec
stos
lcall
jns
out
sahf
incl
bt
xchg
jae
pop
mov
inc
dec
lea
sub
push
loopne
jns
push
out
xor
xor
pop
xchg
mov
je
xlat
xorl
jp
push
xor
lea
jb
mov
add
out
decl
loope
mov
xor
adc
in
leave
popa
jnp
mov
out
or
loope
cmp
in
psubusw
mov
adc
xchg
roll
out
cltd
jno
into
popa
or
mov
push
jae
dec
insl
repnz
ret
dec
fisubrl
push
lods
arpl
hlt
leave
stos
jp
sbb
jmp
pop
add
and
or
lcall
or
mov
lods
cmp
fsin
push
xchg
cmp
rcrl
mov
mov
imul
push
mov
adc
cmp
xorb
sbb
xor
loope
push
pavgb
int3
js
loop
cmpl
loopne
add
cmp
mov
cmpb
enter
out
shl
pop
pop
lcall
subl
add
sbb
stos
xchg
dec
mov
cli
popa
mov
inc
cltd
dec
test
mov
push
dec
jns
dec
lret
icebp
mov
mov
mov
sub
dec
lods
push
mov
test
push
ljmp
xchg
mov
jae
jb
mov
add
xor
and
cli
xor
cmp
dec
inc
std
cmpb
cli
daa
out
mov
cmc
and
sbbb
cmp
pop
mov
sub
inc
in
mov
imul
inc
pop
in
add
rclb
stos
lods
add
in
mov
pop
add
imul
in
stc
push
mov
ds
in
jecxz
mov
jmp
mov
shrb
adc
mov
inc
in
push
adc
push
dec
aas
mov
xchg
jg
lods
xchg
push
cmp
cmp
in
fs
xor
imul
das
mov
cmp
jno
lahf
negb
lcall
lret
pop
pop
dec
and
mov
lock
loop
sbb
or
inc
cmpsb
push
jno
out
icebp
mov
cli
jne
xorl
lret
ljmp
jnp
pop
sarl
pop
arpl
fsubrs
inc
sbb
and
inc
push
aad
pop
pop
imul
sbb
cltd
push
scas
addr16
jecxz
je
mov
fimull
loope
xchg
je
in
xor
adcl
hlt
bound
bnd
lcall
dec
xchg
jno
inc
push
xchg
lods
stos
push
pop
dec
and
push
sarb
pop
push
mov
lcall
cmp
ljmp
mov
orl
int3
inc
imul
fcompp
out
pop
dec
and
push
sub
sarl
leave
sbb
and
dec
push
cmp
or
add
mov
loope
orb
lret
shl
ljmp
sarl
jo
insb
jmp
pop
jp
fiaddl
aas
push
shl
jecxz
in
sub
mov
rcr
jg
adc
sbbl
cmp
add
sub
xor
cmp
cmp
cs
mov
insl
cltd
jp
push
push
ret
lcall
ror
arpl
sbb
mov
fldenv
test
jmp
imul
bound
andl
inc
jnp
je
mov
mov
push
mov
fdivs
fimull
or
jecxz
jno
int3
mov
movsl
int3
inc
test
stc
repnz
gs
pop
mov
bnd
mov
add
pop
xor
adc
adc
mov
rcll
adcl
jg
push
cmc
jmp
push
pop
movsl
adc
not
mov
fstpt
dec
popa
pop
mov
lcall
add
lcall
je
leave
test
sub
repnz
fsubrl
xor
sti
lret
in
mov
sar
sbb
mov
add
cli
mov
inc
xlat
arpl
testb
mov
out
inc
loope
xor
imul
jmp
mov
push
out
ret
xchg
cmp
xor
enter
mov
xor
xor
loope
iret
xor
pushf
mov
and
mov
jb
jl
xor
nop
jle
movsb
mov
arpl
add
imul
inc
cli
ret
adc
call
xor
push
mov
bound
dec
repnz
inc
inc
lret
mov
cmpsl
jno
dec
mov
ljmp
arpl
xor
or
inc
inc
push
jp
ljmp
loop
dec
mov
inc
shl
or
xchg
sub
jae
pop
pop
cmpl
jne
imul
and
xor
lret
xchg
push
jns
dec
loop
xor
std
pushf
fldenv
ljmp
loop
aas
cmp
lret
lea
fidivrl
pushf
cmp
adc
frstor
sarl
lret
jb
or
xor
rolb
mov
inc
mov
cmp
iret
inc
lret
mov
les
lret
cmp
shll
jns
adc
push
inc
and
lods
sbb
xor
cmpb
fwait
inc
stos
sarl
loop
popa
mov
or
stc
adc
sbbl
fisttpl
ljmp
jmp
push
insb
xchg
inc
cmp
aad
xchg
mov
adc
inc
lahf
movsb
je
pop
mov
jnp
testb
stos
stos
incl
jns
loope
jge
int
mov
or
lea
and
mov
mov
mov
mov
nop
push
mov
int3
movsl
cltd
cmpsb
mov
test
adc
add
cmp
adc
adc
ror
add
xchg
xchg
jmp
mov
clc
jno
mov
add
pop
jg
mov
fstps
push
pop
mov
pop
mov
icebp
call
test
xor
gs
lcall
mov
ret
stos
lock
stos
jle
subl
mov
loope
imul
sbb
mov
cmc
loop
mov
push
dec
mov
cmp
jns
push
adcl
push
mov
jge
inc
sub
dec
loope
fiaddl
cmp
addl
or
add
dec
add
push
ljmp
pop
mov
ret
jb
jecxz
stc
cltd
xor
cli
mov
shll
test
icebp
jb
je
mov
testl
inc
test
clc
imul
dec
fistl
mov
mov
rol
and
leave
jno
popa
push
mov
int3
cs
clc
and
fldenv
test
je
fldcw
icebp
jne
add
cmp
cmp
pop
sarl
add
mov
push
inc
inc
adc
mov
icebp
add
xchg
pop
inc
sub
dec
jne
addb
inc
dec
lods
mov
cmp
dec
rorl
lahf
movsl
inc
cltd
rcll
adc
sbb
sbbl
jns
mov
mov
or
outsl
ret
cmp
int3
push
jmp
dec
pop
add
xchg
sbb
cmp
push
inc
lahf
sbb
mov
mov
loop
jmp
sar
xor
dec
mov
ret
cwtl
add
stos
mov
cmp
je
mov
aam
rcr
dec
xchg
pop
cmpb
lret
out
aas
or
jo
scas
bound
pop
jge
popa
xor
dec
inc
push
cmp
mov
or
loope
or
ret
cs
mov
into
mov
out
sar
pop
stos
push
mov
out
push
repnz
cmpb
jg
dec
mov
inc
cltd
ljmp
sbb
imul
pop
rolb
test
mov
dec
lret
xor
cmpsb
ret
loopne
cltd
test
jg
xchg
lcall
cli
loope
loop
cwtl
repz
ficompl
pop
icebp
jns
xchg
repnz
loop
enter
mov
stos
push
test
ds
nop
rcll
lods
loopne
std
sub
rcll
inc
leave
pop
cmp
jns
stc
mov
fnstenv
insl
jnp
cmp
jmp
ljmp
xor
imul
inc
cwtl
aas
or
lret
add
stc
icebp
jp
sbb
cli
push
cmp
add
andl
pop
lcall
pop
xor
roll
int3
fsubrs
maxps
std
rol
pop
fs
inc
fiadds
mov
inc
push
outsb
push
je
rclb
hlt
dec
inc
inc
mov
or
inc
fisubrl
mov
dec
leave
jg
jnp
stc
lcall
ja
add
mov
pop
loope
sbb
lret
cmp
popa
fmull
decl
adcl
mov
stc
cltd
xor
jnp
push
popa
xor
cmp
stc
xchg
push
pop
add
xor
xor
popf
dec
leave
dec
jmp
dec
or
push
dec
or
pushl
jae
pop
cmp
adc
adc
mov
lods
mov
test
lods
ror
inc
dec
jns
mov
ficompl
mov
cmp
cwtl
out
popf
add
mov
fs
cld
jecxz
pop
jnp
jns
jne
or
sub
ja
sub
push
divl
push
cli
test
loop
jecxz
cltd
fmul
xchg
push
lods
mov
icebp
push
inc
mov
lret
or
stos
xchg
clc
ljmp
add
mov
arpl
inc
lcall
cmp
mov
stc
cmp
cld
sub
stos
jbe
jmp
repnz
popa
mov
lock
mov
test
xchg
imul
addb
dec
orl
xor
enter
inc
orl
shl
mov
mov
out
aas
out
sbb
mov
jno
in
leave
das
adcb
push
add
stos
stc
jg
rcll
popa
cmp
mov
test
push
stc
jp
mov
cli
aas
mov
jae
inc
loop
popa
mov
test
jns
pop
fidivrl
push
fists
hlt
and
jnp
mov
xor
jbe
in
lock
movl
pop
lret
movsb
test
dec
xor
jo
lds
popa
repnz
je
mov
stos
xchg
cmc
test
cmpb
das
dec
cmp
mov
xchg
pop
out
insb
in
and
imul
into
sbb
imul
push
out
pop
lahf
imul
imul
jno
mov
popa
data16
mov
mov
add
into
adc
cmpsl
test
push
fwait
sahf
mov
gs
mov
or
cltd
lahf
imulb
mov
cmpsb
ja
xchg
clc
push
or
lock
fildll
add
ljmp
xchg
leave
mov
adc
ret
pop
inc
vcvttps2dq
cmp
push
out
mov
icebp
inc
add
ret
ljmp
aas
mov
add
mov
imul
pop
icebp
mov
jns
fcmovb
shrl
jmp
out
hlt
push
in
mov
push
mov
mov
xchg
push
add
mov
stc
and
inc
mov
xchg
rcll
pop
das
mov
mov
mov
and
lock
cli
dec
ljmp
push
jnp
xchg
mov
test
push
and
dec
insb
xchg
jns
pushf
jae
mov
imul
ficoml
popa
idivb
mov
addl
xor
shrl
shlb
mov
mov
xchg
rcll
xchg
add
arpl
jnp
push
dec
sub
push
mov
xor
sbb
stc
std
adc
andb
jno
dec
ljmp
imul
aaa
test
xchg
mov
aad
or
popa
pop
cli
and
add
mov
cmpb
push
dec
or
inc
jnp
bound
int3
mov
dec
stos
or
jp
das
sahf
xchg
push
out
push
add
xchg
jne
push
rcrl
adc
adc
repnz
push
mov
sub
cs
mov
cli
mov
jnp
loop
enter
mov
imul
lods
cmc
loopne
push
insl
lret
mov
cmp
pop
lods
adc
cmp
add
addl
xor
stc
adc
jb
sub
shrb
jo
ret
mov
dec
sbb
inc
enter
gs
jg
xchg
test
stos
mov
sbb
cmp
push
cmp
out
repnz
add
insb
mov
adc
mov
fsubrp
fcomps
push
jecxz
inc
mov
add
inc
or
dec
rorb
mov
mov
push
in
dec
dec
or
mov
mov
jns
pushf
ret
xchg
cli
imul
mov
ret
mov
xlat
cmp
push
mov
cld
fsts
mov
int3
mov
test
inc
pop
sub
adc
cmp
ficoml
orl
stos
popf
dec
ret
xchg
push
leave
dec
mov
subl
cmp
ret
fstps
stos
jae
mov
repnz
out
jmp
int
or
leave
adc
insl
ret
inc
jmp
int3
ss
mov
mov
xor
push
xchg
mov
jp
push
and
pop
inc
stos
jmp
cli
dec
xchg
xchg
pop
imull
push
adc
ja
or
test
jb
fs
and
popf
movnti
bound
fidivl
add
ljmp
test
mov
in
test
jno
fisttps
insb
aam
xchg
pusha
jb
ret
add
pop
add
add
stc
repnz
cmp
sbb
dec
lcall
push
pop
xchg
mov
jle
in
cmp
xor
jmp
pop
ljmp
stos
jne
dec
mov
icebp
mov
or
pop
rorl
out
push
inc
mov
pop
ds
xchg
repnz
pop
mov
bnd
mov
sub
ljmp
imul
ljmp
pop
lcall
or
mov
repnz
lret
mov
aas
xor
hlt
push
xchg
adcl
out
inc
data16
loope
clc
push
test
ss
inc
stos
dec
scas
pop
out
jge
xchg
shll
ret
cli
xchg
test
jae
cmp
fsubr
arpl
xchg
fcoms
mov
popa
jnp
stos
xor
xchg
in
push
arpl
mov
test
cld
dec
shlb
jmp
jb
out
inc
xchg
jl
arpl
inc
push
push
mov
mov
and
aaa
ds
dec
inc
mov
jmp
jp
lahf
inc
push
insl
add
arpl
cmpsl
loope
pop
je
mov
dec
adc
cmpb
cmp
pop
jecxz
test
adc
pop
into
mov
inc
outsl
fbld
cmp
mov
mov
scas
iret
mov
push
jne
xor
push
cmp
cmp
mov
mov
pop
dec
mov
xchg
jg
and
subb
es
xor
push
outsb
popa
popf
xor
inc
cmpl
lahf
jae
outsb
xor
pop
push
stos
jge
ret
test
mov
insb
movsb
bnd
cmp
xor
leave
sbb
xor
sarb
dec
addl
nop
mov
bound
mov
xor
sahf
push
pop
mov
loopne
das
ficoms
addr16
call
pop
cmp
out
pushf
dec
stc
xchg
stc
pop
data16
loop
cmpsb
je
mov
icebp
inc
dec
jp
inc
cmp
xor
scas
jno
icebp
cmp
jo
bound
cli
adc
cmp
leave
stc
idiv
or
call
sbb
xor
leave
enter
inc
dec
inc
sub
xorl
adc
xchg
jno
mov
in
fldcw
shr
mov
push
out
jnp
jo
pop
jecxz
in
mov
cmpsb
push
stos
clc
test
mov
addr16
jnp
inc
dec
fmulp
call
aaa
push
mov
dec
pop
bound
loopne
lock
mov
sbb
popa
xor
jbe
fs
xor
rcr
andb
ret
jg
shrb
arpl
jmp
mov
lret
mov
xchg
out
and
adc
hlt
xlat
test
imul
out
les
cmpsl
jg
xor
pop
out
or
jmp
mov
lcall
mov
enter
clc
loopne
stc
and
lahf
xchg
hlt
cli
cltd
bound
push
fmull
xchg
inc
int3
pop
arpl
fsts
shlb
subl
pop
lea
stc
inc
add
ficoml
mov
pop
mov
sub
stos
mov
cmp
inc
mov
stc
fdivs
decl
push
lret
push
test
push
or
cmp
push
mov
lret
fdiv
lods
movsl
mov
out
cltd
imul
je
je
push
shl
js
jns
fsqrt
idivl
je
mov
xchg
and
mov
mulb
loope
ds
mov
mov
int3
repz
es
xor
je
cmc
popa
mov
inc
jae
inc
inc
inc
jge
cmpsb
jnp
inc
sub
inc
mov
in
mov
popa
pop
cmpsb
lods
xchg
cmp
loop
cmp
js
imul
out
stos
sub
mov
subl
add
xor
adc
in
fimull
lret
addb
inc
adc
cmp
push
cli
icebp
jp
ret
fsts
ret
imul
or
push
test
clc
je
mov
jb
call
mov
pop
or
adc
jp
and
xor
repz
loop
repnz
mov
mov
pop
gs
out
ja
lock
fbstp
repnz
ret
repnz
mov
mov
add
cmp
sbb
mov
sub
mov
xchg
push
repnz
test
pop
push
and
pushf
push
fldln2
aad
xorl
jb
add
lds
cmc
jge
or
add
popa
roll
fdivl
dec
xchg
loop
bound
sub
sarl
mov
mov
dec
dec
adc
in
jns
mul
add
jmp
mov
mov
add
sbb
imul
scas
or
sub
push
mov
mov
movsl
stos
lock
dec
push
cli
xchg
mov
mov
mov
loopne
pop
test
div
push
cmc
stos
add
loope
loop
enter
stos
lret
mov
call
mov
ret
cmp
dec
ljmp
dec
shlb
int
bound
xchg
subl
inc
xorl
arpl
jnp
jbe
stos
adc
clc
xchg
mov
lea
fs
insb
sub
pop
imul
and
loope
int3
mov
rcrl
pop
mov
pop
push
inc
lcall
clc
mov
mov
mov
dec
fnstenv
mov
push
pop
lods
cmp
test
inc
popf
inc
stos
mov
fildl
hlt
sbb
mov
add
xchg
mov
fnstenv
xor
mov
inc
ds
rcll
mov
mov
pop
jae
mov
rclb
arpl
lcall
ljmp
and
loope
cmpsb
shl
mov
dec
mov
dec
cmp
mov
bound
cmp
cmp
int3
pop
subl
push
jae
jns
cld
lds
cmp
and
rorl
pop
mov
inc
jbe
push
jns
repz
xchg
mov
jns
fnstcw
insb
in
dec
cmp
addb
loop
cmp
stos
mov
hlt
lcall
popa
cmp
mov
dec
and
cld
vpacksswb
movsl
sub
popa
or
lret
outsb
mov
cmp
ja
adc
repnz
lods
jb
test
orl
int3
inc
jp
imul
jb
ficompl
push
leave
lock
add
lahf
mov
lcall
ret
mov
out
xor
push
jge
jg
ret
mov
or
dec
mulb
adc
pushf
bound
iret
and
sub
fbstp
push
mov
loop
xor
jne
ret
lods
repnz
out
icebp
dec
jnp
jno
ffreep
cmpl
lret
repnz
xor
cmp
inc
xorl
cli
push
imul
jnp
or
insl
mov
out
jae
addl
stc
icebp
jns
ja
outsb
cli
shll
and
test
jb
mov
and
push
mov
loopne
cmp
dec
mov
ds
jg
cmp
scas
sbb
push
inc
ljmp
jg
sub
leave
mov
adc
lret
fwait
repnz
cwtl
push
rcrb
jl
pop
xchg
adc
inc
mov
mov
add
in
ret
jp
adc
xor
sbbb
ret
cmp
sbb
xchg
sahf
and
cltd
xor
xchg
out
insb
push
test
cmp
push
popa
arpl
sub
xchg
jb
orl
loope
jnp
push
adc
int3
dec
cmp
xchg
ret
rorb
hlt
mov
jnp
jecxz
test
lods
xor
add
mov
dec
call
inc
orb
adc
and
shll
and
orl
adc
push
je
or
lret
test
cmp
inc
push
lcall
inc
xchg
mov
dec
iret
insb
stc
aam
xchg
stos
ret
xor
shr
bnd
jp
push
ret
adc
xor
add
pop
adc
dec
lret
movsl
push
stos
add
jb
lock
add
inc
xchg
pushf
push
mov
inc
lcall
inc
xchg
mov
mov
std
das
loop
cmp
sbb
adc
dec
xor
dec
add
int
dec
dec
lods
popf
jae
jg
jp
loope
xchg
jne
push
jb
imul
jbe
fiadds
mov
pop
cli
fidivs
divb
mov
xchg
and
nop
dec
test
dec
dec
mov
xchg
mov
and
loop
enter
mov
sbb
int3
cli
cmp
mov
scas
cmc
jp
popa
mov
negb
stc
jle
mov
inc
fnsave
stos
jmp
jb
push
scas
in
pop
aam
stos
and
mov
je
int3
lret
arpl
cld
imul
or
mov
xor
cmp
stos
mov
or
or
xchg
insb
stos
cld
mov
lret
fldenv
ror
jae
insb
mov
arpl
shrl
fcoml
dec
mov
mov
rorb
push
mov
imul
push
mov
stc
and
imul
sbb
cmp
mov
and
mov
inc
or
push
mov
addl
mov
xchg
cmp
sbb
mov
shrl
rcl
adc
xor
ret
jns
mov
fucomip
cmpl
vmovq
inc
dec
insb
mov
adcl
out
sub
cmp
push
test
fisttpll
arpl
jnp
jnp
push
in
or
xchg
subl
scas
push
mov
daa
add
fildl
adc
cmp
es
cmp
xor
adc
inc
adc
mov
icebp
push
jb
dec
pop
jp
jnp,pn
lret
psrad
fcos
or
repnz
push
pop
xor
addb
test
fcompl
arpl
lret
pop
leave
mov
lahf
jecxz
adc
roll
jge
xchg
pmuludq
leave
push
mov
jg
inc
mov
fcmovb
add
repnz
addl
cld
lods
shlb
stc
inc
xchg
stc
ljmp
ljmp
rcll
hlt
inc
arpl
filds
cli
mov
fisubrl
mov
or
enter
mov
sub
dec
xchg
adc
dec
or
push
fldl
je
pop
jb
popf
subb
sbbl
loope
or
push
inc
cmpsl
dec
ss
aam
push
inc
ds
jnp
sub
sub
pop
mov
aas
int
imul
stc
jno
xor
mov
xor
cmp
fdivrs
std
mov
imul
subb
inc
pop
adc
push
add
cli
imul
lcall
xor
ret
rcrl
fsubrl
bound
outsl
cmpb
std
outsl
jns
xchg
ret
xor
test
lcall
pop
push
jbe
mov
mov
lods
cltd
mov
jmp
jae
mov
imul
jbe
jnp
add
movsb
mov
inc
popa
test
jg
out
test
lcall
xor
push
stos
pop
lcall
repnz
mov
xchg
sarl
in
dec
jae
inc
jns
pop
push
mov
sbbl
and
scas
fists
jb
jmp
imul
dec
movsb
pop
sbb
cmp
iret
or
mov
add
adcb
not
test
iret
xor
ret
adc
mov
repnz
in
in
pop
shll
dec
push
lock
fsubs
jns
lea
sbb
ret
jg
out
mov
inc
adcl
dec
xchg
in
popa
pop
std
loop
subl
test
lahf
dec
ljmp
mov
cltd
orl
cltd
mov
enter
shlb
je
cmpb
inc
loope
inc
je
test
fcompl
cmp
pop
sub
add
xor
flds
call
mov
aas
pop
loopne
stos
dec
push
and
iret
and
dec
movsb
inc
aas
push
hlt
cmp
jnp
xor
mov
pop
lock
xchg
shll
mov
aas
jmp
mov
inc
and
push
mov
cltd
popa
jae
or
push
icebp
mov
jnp
inc
push
sarb
icebp
push
clc
scas
jmp
xchg
xlat
addl
out
xchg
push
stc
push
mov
push
lret
aas
icebp
or
ljmp
fiaddl
mov
stos
leave
cmp
lcall
pop
loop
popf
cmp
push
sbbl
xchg
inc
jno
mov
inc
roll
or
loope
inc
xor
mov
mov
mov
pop
in
push
pop
mov
repnz
dec
sarb
ret
xchg
push
bound
jb
xor
mov
sub
lock
inc
jb
xchg
sub
aaa
mov
or
sub
jg
add
pop
bound
jp
push
jae
jae
ljmp
ret
mov
loope
jae
cld
inc
test
loope
icebp
and
shl
xor
xchg
and
pop
out
push
sub
xor
jecxz
imul
movsb
jnp
mov
cmp
int3
mov
arpl
pop
clc
or
jnp
movsl
ja
mov
or
mov
subb
leave
test
mov
pop
ljmp
mov
jns
inc
jg
dec
lods
inc
andb
inc
test
pop
jge
out
sti
pop
mov
out
insb
cltd
sub
push
inc
inc
call
cmp
hlt
xchg
dec
xor
fwait
jmp
ror
test
sbb
ret
xorl
pop
daa
sbb
insb
xor
jp
repnz
jg
or
nop
stos
add
ret
in
mov
loope
popa
lcall
dec
mov
setl
arpl
in
sbb
rcll
insb
lcall
int3
xchg
bnd
bound
js
pop
sar
mov
test
cmp
shrl
or
xchg
jnp
fdivrp
cltd
imul
icebp
leave
mov
cli
mov
or
jb
cli
fnstsw
adc
lret
adc
mov
xorb
jae
xor
test
jmp
clc
pop
inc
mov
jae
leave
in
inc
stos
inc
divb
cmp
xchg
imul
mov
stos
mov
xchg
add
shl
andl
xor
mov
jne
imul
dec
dec
loope
inc
orl
push
pop
fnstenv
test
leave
push
add
inc
mov
movsl
and
pop
mov
data16
push
addb
pop
mov
mov
std
cmc
pop
jns
sub
outsb
or
push
test
nop
jp
xchg
mov
repnz
jns
cmp
je
lcall
and
fdivl
xchg
insb
pop
cld
jge
leave
ret
clc
mov
fdivl
pushf
sarl
out
aam
xor
loope
mov
out
cmpb
dec
lret
imulb
adc
jmp
mov
pop
mov
sbb
rol
call
jmp
dec
pop
and
jae
andb
movsl
mov
mov
les
push
out
jae
stc
push
fnstcw
add
ret
scas
lods
loop
jb
mov
jnp
cmp
cs
test
int3
fnstcw
push
push
dec
mov
sbb
sub
popf
imul
movsl
aaa
and
mov
dec
inc
fdivs
mov
mov
jns
out
mov
pop
mov
mov
fdivrl
dec
and
jp
and
rcrb
fidivrl
subl
out
pop
mov
ljmp
loopne
ja
xor
push
pushl
imul
cwtl
xor
stc
pop
xor
jae
dec
shlb
icebp
fistpl
test
jnp
or
nop
xchg
fisubrl
loopne
movsb
sub
cmp
and
jecxz
cmp
stos
shlb
jnp
arpl
mov
pushf
imul
rclb
clc
sbb
xor
dec
inc
adc
mov
mov
dec
addb
hlt
lret
jae
mov
sub
add
jns
mov
int3
arpl
add
leave
popa
xor
orl
xor
mov
ljmp
sbb
fcmovnb
pop
or
mov
inc
push
add
add
jp
ret
loop
push
repnz
addl
push
loope
shl
xchg
cltd
out
inc
ss
ret
inc
jp
xor
fmuls
fiaddl
push
jo
mov
push
jno
shl
cmp
inc
inc
in
push
arpl
insb
pop
push
pop
je
in
inc
lret
cmp
popa
pop
leave
popf
jg
inc
lcall
stos
cmp
js
push
xchg
jns
ret
mov
sbb
addl
ficompl
call
lock
cltd
repnz
out
sbb
dec
cmp
mov
aaa
addb
arpl
cmpb
mov
icebp
out
stos
dec
ja
fiadds
mov
mov
rorl
push
fidivrs
addr16
fiaddl
add
pop
mov
bound
lret
arpl
adcl
mov
dec
test
mov
idivb
cli
sub
push
dec
call
shlb
rol
ret
xor
inc
jmp
inc
icebp
pop
push
mov
or
mov
lcall
pop
fsqrt
inc
ret
rolb
out
je
popa
and
fiaddl
or
out
xchg
int3
sub
mov
fisubrl
xorl
pop
out
stc
jg
idivb
cmp
mov
mov
bound
fcmovbe
enter
fidivrs
lahf
shl
test
add
popa
ljmp
ret
adc
sub
pop
or
mov
inc
bound
cli
andb
repnz
stc
jns
pop
test
cmp
stos
insl
adc
mov
mov
mov
cltd
loopne
sbbl
jmp
inc
dec
add
ficompl
push
mov
arpl
xchg
push
out
mov
xor
add
jb
mov
testl
sarl
or
push
dec
jecxz
fs
and
xchg
cmp
push
in
xor
pop
or
je
mov
xchg
repnz
enter
stos
xor
add
inc
out
pop
fcoms
andb
xchg
out
pop
clc
push
test
insb
shrl
jne
add
push
icebp
ja
hlt
out
lret
jno
outsb
das
decb
jp
test
mov
jb
enter
mov
xor
fstpt
pop
pop
inc
xor
add
dec
lds
pop
add
lods
daa
dec
jno
fisubrl
lods
aad
nop
in
flds
mov
cli
sbb
imul
dec
cld
mov
jae
add
stc
je
stos
push
jge
mov
dec
or
leave
lea
ret
inc
dec
xor
inc
lret
mov
mov
jmp
clc
call
mov
dec
xchg
stc
rorb
lcall
shll
ret
rcll
addl
dec
icebp
inc
dec
cli
loop
shrb
inc
fdivl
fsubrs
or
mov
roll
adc
stc
popa
outsb
scas
cmp
mov
push
push
loopne
fdivrs
ror
mov
push
repnz
or
mov
pushf
and
dec
enter
lock
pop
dec
int3
inc
mov
xor
mov
jb
mov
fistpll
loopne
jg
push
xor
cmp
pop
dec
sub
jge
icebp
ret
mov
inc
jle
inc
sbb
add
rorl
mov
popf
jmp
loop
dec
mov
jg
pop
cltd
cld
jne
lret
adcl
mov
adc
lcall
ficoml
and
mov
aam
ret
jnp
sbb
push
addb
icebp
cmp
inc
mov
ret
pop
cmp
mov
outsb
pop
xchg
jg
stos
push
cmp
add
mov
imul
add
mov
mov
mov
test
push
mov
jns
aas
jns
pop
mov
je
filds
lcall
add
ds
fwait
xchg
inc
push
pop
xor
mov
push
mov
sub
pop
jae
fdivrs
xor
repz
fsubl
in
jge
ret
popa
icebp
xchg
repnz
insl
imul
mov
mov
enter
xchg
sbb
popa
leave
fwait
adc
and
hlt
xchg
imul
arpl
sarl
cmp
insl
stos
dec
add
jns
ljmp
out
lret
mov
pop
jmp
jno
sub
sahf
lock
sbb
call
imul
iret
push
and
cmp
test
cmp
into
movsl
fwait
and
fimull
sub
and
and
iret
xor
fists
pop
pop
cs
mov
adc
movsb
jnp
pop
mov
jno
dec
push
lods
dec
imul
and
inc
cmc
sbb
stos
dec
cmp
ficompl
orl
int3
inc
jp
sub
jmp
pop
jecxz
out
dec
shll
push
rcrl
jbe
stc
cmc
adc
cmc
aas
sbb
dec
dec
push
pop
pop
mov
lods
hlt
dec
pop
inc
mov
ficoml
into
push
dec
xor
pop
call
loope
bound
sarl
cltd
dec
orb
inc
or
cmpsb
jae
aam
mov
adc
inc
dec
icebp
inc
fnstsw
ljmp
loope
push
jmp
jecxz
cltd
add
fs
push
xchg
adc
loopne
stc
inc
jnp
and
std
or
ljmp
xor
mov
loop
adc
insb
dec
lcall
hlt
jbe
xor
mov
dec
push
loope
jnp
or
xchg
xorl
adc
xlat
inc
aad
leave
cmp
mov
cltd
inc
cmp
gs
push
in
xor
iret
ljmp
push
add
aam
lcall
xchg
mov
adc
cmp
push
or
mov
mov
inc
inc
cmp
stos
mov
jg
inc
stos
test
adc
in
inc
ror
adc
mov
jg
mov
loope
mov
adc
dec
sbb
add
sbb
ficompl
cmp
fdivrs
pop
mov
daa
inc
rcrb
dec
bound
insb
cmp
and
cmpl
ror
mov
inc
cmp
xor
dec
popa
imul
cmpsb
rcrl
fistl
in
rolb
leave
xchg
push
andl
push
mov
aas
sub
cmpb
mov
imul
std
mov
add
jno
inc
call
cmpsl
sbb
leave
adc
insb
inc
jg
jb
push
and
mov
pop
adcb
repnz
xchg
fwait
addl
movsl
add
jp
pop
cmp
aaa
adc
or
movsl
or
xor
jae
lahf
cmpsb
and
jp
inc
jb
mov
add
mov
push
aas
xchg
add
mov
dec
imul
scas
roll
std
dec
jns
stc
mov
loope
test
mov
mov
pop
cmp
ds
jg
stos
test
pop
loop
jmp
arpl
jecxz
dec
pop
sbb
fnstenv
push
add
pop
das
fldenv
mov
in
push
mov
mov
cmp
sbb
loopne
push
fcom
pop
jo
mov
xchg
popa
fiadds
push
or
mov
mov
cmp
ljmp
dec
loope
jmp
cli
xor
daa
add
imul
and
push
inc
mov
lock
stos
push
pop
int3
or
pushf
pop
repnz
cltd
xor
nop
stc
adc
add
stc
cmc
fidivrl
add
push
pop
hlt
push
mov
rorl
popf
mov
jb
inc
jo
cmp
xchg
or
adc
xorl
insb
shll
add
hlt
test
cltd
loope
pop
and
push
jnp
lcall
pop
jp
outsl
push
mov
rcl
stc
inc
lods
pop
push
push
ret
std
dec
xor
pop
in
nop
in
add
dec
cmp
lcall
mov
popf
loopne
fs
sub
test
mov
mov
cmp
sahf
inc
mov
fdivr
pusha
mov
rorl
xchg
dec
lods
adcb
mov
jmp
mov
push
repnz
shrb
jp
adc
ret
inc
mov
sahf
dec
ficoml
call
test
add
pop
dec
xchg
pop
jnp
stos
mov
sti
fdivrp
scas
xor
inc
cmp
insb
push
pop
hlt
and
jb
out
pop
add
popf
jns
mov
push
test
sbbl
mov
and
mov
mov
and
popa
inc
sarl
xor
gs
ljmp
aam
fcoms
pop
sbbb
mov
decb
jae
xor
jns
adcb
mov
mov
mov
push
jb
push
pop
dec
mov
lock
dec
cmpb
pop
sbbb
push
xorb
andl
aam
subb
orl
andb
sub
inc
arpl
loopne
mov
cmp
rcrl
xchg
xor
dec
stc
pop
or
ljmp
dec
arpl
stc
push
sbbl
add
repnz
cmp
icebp
and
int3
dec
shll
xor
mov
repnz
xor
and
lret
jp
xchg
jp
out
and
pop
andl
cmc
add
push
aam
jns
mov
and
dec
popa
repnz
cmc
sarb
stc
mov
mov
ja
jbe
cli
mov
mov
inc
test
insl
imul
cmp
adcb
out
sbb
nop
fdivrs
mov
ss
xchg
dec
mov
push
lahf
pop
js
or
mov
int
loop
repnz
pop
and
loop
repnz
push
inc
mov
cmp
rcll
dec
push
or
or
fucomp
pop
mov
mov
cmp
das
pusha
pop
jle
xchg
jmp
mov
call
adc
xchg
fsts
out
inc
ljmp
jmp
scas
push
mulb
jp
push
stos
jg
inc
jb
shll
fmull
sub
imul
repnz
ret
mov
sbb
mov
mov
std
push
stc
pop
popa
movsb
sbb
mov
mov
stos
adc
ds
in
ljmp
sub
jno
call
cli
mov
xor
add
jae
sub
add
pop
je
cmpb
andb
lret
adc
and
sub
jmp
jae
lock
mov
dec
in
dec
and
jmp
in
shll
pop
imul
jnp
aas
stos
dec
add
aas
add
loope
mov
stos
sbb
sbb
jae
mov
mov
lret
mov
lahf
hlt
sbb
fldt
adc
fldenv
jnp
cltd
dec
xchg
sbb
aad
nop
push
dec
insb
cmp
sub
dec
stos
jnp
push
pop
lahf
inc
fistpl
jno
mov
inc
cmpsb
in
shll
xchg
repnz
ja
cmp
bound
push
int3
arpl
cltd
jl
xor
add
or
mov
jecxz
push
inc
insl
add
inc
lods
loop
cmp
and
mov
sahf
add
adc
sahf
popa
push
lret
cmp
in
ljmp
call
leave
out
or
mov
rcl
xchg
cmp
fwait
jnp
mov
mov
repnz
add
jp
subl
ds
nop
jecxz
and
test
cltd
fwait
out
test
push
pop
ret
lea
adc
inc
repz
scas
adc
cmp
mov
and
jno
lea
adc
and
sbb
adc
push
in
ljmp
insl
fs
jno
pop
out
scas
mov
cwtl
psraw
jno
jns
mov
imul
dec
lea
lret
jb
pop
jmp
mov
mov
das
fdivs
movsl
loopne
das
sbb
mov
sbb
sarl
sbbl
jb
mov
sbb
rolb
jle
outsl
frstor
xchg
xor
xor
shll
and
adc
sub
jmp
pop
jle
adc
and
enter
and
mov
jb
sub
mov
sub
inc
add
and
or
orl
mov
ljmp
jnp
push
pop
pop
shll
adc
mull
push
adc
pop
mov
sub
inc
loop
jecxz,pn
cltd
ss
add
dec
loope
inc
xor
hlt
bound
xchg
mov
jns
dec
repnz
insl
dec
push
and
lea
jmp
fldenv
test
xchg
inc
test
push
lahf
das
in
stc
ljmp
or
jns
push
out
jg
stos
push
cli
test
mov
add
or
lret
jae
adc
subl
ret
sbb
cmp
jp
stos
xchg
or
cmp
rorb
mov
mov
dec
inc
mov
stc
adc
orl
adc
popa
std
jae
xorb
xchg
sbb
mov
and
dec
mov
rclb
inc
adc
imul
adcl
xchg
fisttpll
xchg
jmp
xchg
sbb
push
cmp
inc
jb
mov
movsl
sbb
adc
cltd
cmovb
icebp
fcomi
mov
ret
push
inc
test
mov
hlt
subb
lock
mov
out
sbb
lcall
in
mov
mov
ljmp
mov
cmp
cmp
je
and
cli
adc
inc
bound
stos
lcall
mov
mov
or
mov
jno
mov
loop
dec
popa
xchg
movsl
sbb
pop
adc
add
jp
mov
jne
pop
icebp
pop
clc
dec
jmp
sbb
dec
aam
lret
lret
icebp
mov
aaa
dec
dec
and
dec
pop
xchg
xor
test
and
cmp
stos
or
mov
push
adc
in
inc
cli
mov
rolb
addl
fidivrl
cltd
lcall
jo
pop
push
fcmovb
lret
loop
test
mov
add
jae
or
jb
iret
and
mov
fidivl
int3
sbb
sbb
xor
stc
or
dec
cli
fnstcw
int3
pop
nop
decl
ret
add
stc
fstpt
and
xor
inc
adc
xchg
xor
sbb
mov
cmp
mov
movsb
xchg
cmp
mov
pop
inc
cmpsl
sbb
lret
mov
jns
mov
jne
shl
mov
stc
mov
loopne
jge
jmp
xchg
xorl
mov
jno
rcl
je
pop
fneni(8087
push
repnz
sbb
mov
mov
shlb
in
xor
xchg
scas
clc
mov
bound
clc
shlb
movsl
lods
cmc
jecxz
insb
inc
je
je
adc
cmp
rorl
in
xchg
pop
enter
es
jle
or
mov
xor
mov
stc
dec
aam
cmp
pop
out
sbb
cmp
cmp
pusha
ljmp
test
xor
cwtl
popa
push
pop
lods
sbb
push
fcmove
pushl
movsl
add
imul
pusha
sar
cmp
lcall
lahf
mov
xchg
jae
leave
inc
ss
imulb
mov
mov
inc
adc
insl
in
xlat
add
dec
jecxz,pt
lods
push
lcall
iret
mov
nop
push
lock
bound
stos
cmp
lods
jnp
roll
xor
cmp
or
or
push
sahf
jecxz
fistl
mov
jnp
loope
push
mov
jae
pop
dec
int3
cwtl
mov
lahf
mov
popa
lods
fwait
xorl
mov
icebp
fists
add
mov
dec
jmp
dec
sarb
jecxz
mov
enter
andb
jg
ret
dec
dec
lcall
mov
aas
imul
and
fsubrl
dec
icebp
movsb
jle
lea
arpl
add
lods
mov
stos
loop
shl
icebp
jae
mov
fcomps
fiaddl
add
jp
push
pop
ret
cmp
pusha
xchg
pop
xor
push
ljmp
or
xchg
jge
pop
mov
fwait
dec
test
sarb
mov
mov
loopne
stc
mov
sub
mov
cli
dec
test
stc
pop
jns
dec
popa
lea
xor
in
fisubrl
bnd
mov
mov
fisubrs
in
aas
fldcw
testl
dec
shr
icebp
aas
push
dec
pop
cli
mov
dec
and
push
stc
jno
out
in
fldz
int3
push
repnz
les
add
insb
inc
cmp
in
push
cli
ficoms
fstl
xchg
insb
cmp
popf
inc
push
mov
in
icebp
imul
fldenv
rorb
loop
in
inc
insl
ljmp
lret
imul
xor
je
je
mov
roll
mov
jp
dec
push
jb
test
xor
in
std
dec
shll
dec
cld
sub
adcb
dec
jnp
arpl
fcmove
pop
inc
movsl
cmc
ljmp
ja
aad
gs
bound
inc
fsubl
daa
je
call
jno
jnp
in
dec
fcompl
jmp
cmpl
pusha
add
xor
push
push
cltd
insl
imul
loope
xchg
xchg
xor
cltd
xchg
jns
inc
push
ret
jbe
add
push
icebp
pop
fwait
mov
lcall
sub
stos
mov
hlt
inc
mov
mov
ja
dec
imul
loopne
call
fistps
mov
out
in
lods
dec
add
adc
jnp
rcrl
or
mov
jge
and
cli
sub
jb
pop
xor
mov
repz
and
bound
xchg
mov
fdivrs
mov
cmc
rcll
std
dec
ret
jmp
fildll
andl
shll
xor
ret
mov
pop
les
jno
popa
and
mov
mov
xor
decl
mov
ret
add
mov
mov
jb
adc
dec
sub
enter
stc
arpl
mov
insl
jg
or
sahf
jnp
inc
jmp
mov
mov
mov
out
aas
xchg
add
lcall
xchg
leave
fldt
imul
dec
test
adc
iret
jmp
jg
push
pop
cmp
mov
adcl
inc
sbbl
sub
xor
push
stc
mov
mov
mulb
adcl
stc
std
mov
mov
push
push
cltd
out
and
cmpsb
adc
jle
out
scas
pop
out
dec
and
pop
and
and
stos
call
es
lock
repnz
movsb
dec
jns
adcl
fstpt
sbbl
xor
lret
jns
xchg
mov
lds
xor
inc
stc
lcall
jae
outsl
test
push
mov
inc
cmc
xor
fcoml
mov
imulb
stc
in
dec
divb
mov
dec
xor
sbb
xchg
imul
jecxz
xchg
push
sub
cli
adc
fucomi
adc
mov
dec
imul
inc
jg,pt
insb
cmp
inc
in
repnz
jbe
ret
push
jge
je
stc
int3
mov
icebp
daa
mov
xor
jp
xchg
arpl
enter
mov
lcall
imul
jb
cmp
xorl
mov
cli
shrl
cmp
scas
jb
pop
subl
adcl
rclb
pop
jge
lcall
lret
push
sbb
addr16
sahf
call
add
orb
mov
xor
add
mov
test
mov
mov
adc
adc
rcrb
dec
pop
ljmp
mov
or
and
mov
sbb
iret
mov
xchg
jnp
test
sbb
cmp
mov
inc
adc
mov
adc
mov
jecxz
xchg
in
shlb
lcall
pop
adc
cmp
in
mov
in
pop
jp
cmp
xchg
and
mov
dec
jb
mov
lea
push
push
bound
movl
push
xorl
testl
push
dec
out
loope
add
xor
out
jns
hlt
mov
rcr
imul
loop
jns
rolb
jno
sbbb
push
lret
jge
jnp
sub
rcrl
fwait
xor
xchg
rcpps
inc
cmp
pop
mov
orb
mov
fwait
lcall
sbb
inc
mov
xor
imul
mov
lea
fcomp
hlt
cmpb
mov
cmp
sarb
jbe
or
stos
xor
xchg
cmc
test
cmp
loope
repnz
mov
repz
lods
js
popf
cmp
stc
mov
cmp
stc
fnstsw
xor
xchg
fsts
xor
sbb
or
leave
xor
xchg
cli
mov
and
xchg
pop
data16
out
jmp
jmp
dec
lcall
pop
add
addb
jns
arpl
and
jge
cmpb
pop
push
clc
mov
out
cmpb
mov
mov
mov
arpl
mov
adc
or
out
sbb
roll
mov
stos
cmp
xchg
xchg
repnz
xor
insl
out
popf
enter
cltd
icebp
loop
lahf
mov
or
push
icebp
jb
lcall
loopne
and
shrl
stc
pop
cmp
pop
enter
imul
ljmp
xchg
inc
arpl
cmpsb
mov
sarl
mov
xchg
cmp
xor
addr16
push
sbb
and
les
faddl
dec
loopne
pop
clc
inc
jae
ljmp
mov
stc
loope
lds
jecxz
je
or
imul
push
inc
in
fidivrl
orl
inc
aam
stos
mov
cmp
and
dec
pop
addb
inc
xor
mov
mov
orb
xchg
stc
repnz
sub
lock
orl
inc
subl
hlt
mov
imul
mov
push
leave
inc
or
mov
rcr
movsb
jns
popa
andl
inc
in
dec
pop
mov
jge
jae
inc
add
cmp
stos
cmc
test
lcall
sarl
cli
int3
jb
cli
repz
inc
jmp
lret
fs
ljmp
ret
lahf
cmp
out
add
into
jb
add
inc
jno
push
mov
xchg
push
push
pop
int3
xor
xchg
pusha
stos
lea
mov
cmp
loope
add
adcb
movsl
jbe
jns
loop
mov
adc
mov
add
jnp
test
jae
shll
aas
daa
lds
inc
mov
cmp
scas
or
or
or
add
xor
xchg
mov
repnz
add
hlt
stos
out
push
inc
addb
hlt
jnp
xor
lods
fldcw
dec
mov
subl
insb
stos
mov
inc
cmp
sbb
mov
cmpsl
or
pop
mov
movsb
adc
mov
bound
mov
mov
xor
lcall
xchg
gs
xor
stos
cmp
dec
cmp
jne
push
mov
lcall
inc
mov
jnp
jge
jg
cmp
sbbb
push
pop
insb
cmp
and
ret
sbb
lret
inc
inc
inc
cmp
push
cli
add
dec
add
mov
cltd
lods
jb
xchg
jmp
pop
arpl
and
ljmp
push
movsl
mov
repnz
push
stc
push
jo
mov
dec
subl
mov
mov
fdivp
mov
subb
mov
cmp
rcll
pop
jns
jle
stc
jmp
jae
dec
scas
pushf
mov
push
loop
lods
jmp
inc
mov
push
imul
jns
pop
out
hlt
mov
popf
popa
push
mov
icebp
fcoms
mov
sbb
jl
mov
fs
jno
push
jge
arpl
jmp
into
test
jae
sbb
cmp
mov
push
inc
mov
push
mov
hlt
bnd
push
adc
sbb
mov
and
xor
inc
stos
cmp
jns
popa
cli
fs
int3
mov
pop
idivl
mov
shrb
push
scas
out
insl
inc
add
cs
jmp
shlb
popa
test
stos
addl
inc
inc
xlat
icebp
outsb
jb
std
fcoms
dec
mov
cmp
rcl
inc
insb
dec
fs
mov
xor
fmul
push
cmp
ficompl
imul
sub
or
mov
inc
adc
jp
xor
jns
std
fndisi(8087
jnp
pop
rorb
dec
mov
cltd
mov
bnd
push
mov
fdiv
loop
test
xchg
arpl
icebp
xchg
and
and
cmp
and
aas
pop
inc
sbb
in
fbstp
sbb
lcall
ret
cmc
jns
jnp
or
pop
jno
push
mov
enter
mov
movaps
addb
push
icebp
mov
jno
cltd
bound
mov
inc
cwtl
mov
mov
dec
fsubrs
or
hlt
mov
push
xchg
add
out
out
sub
adc
ret
mov
fstps
pop
jmp
xchg
pop
ljmp
inc
inc
aas
mov
push
xor
push
inc
inc
pop
dec
push
jnp
fcmovu
stos
jnp
mov
repnz
lcall
push
fsubp
and
add
xor
aaa
push
sub
xchg
flds
inc
lods
in
hlt
push
arpl
cmp
cltd
xchg
dec
mov
rol
test
in
sub
arpl
add
xlat
xorl
aaa
mov
in
test
ljmp
cmpsb
std
jns
inc
pop
sbbl
mov
fisubrl
shl
add
lods
mov
stos
cli
jb
push
inc
adc
adc
jmp
push
inc
mov
adc
fistpl
stos
scas
clc
test
push
cmpl
repz
jns
movsl
and
jo
pop
call
mov
cld
sarl
js
xor
loopne
or
ja
mov
int3
lcall
mov
inc
arpl
sbbl
sub
imul
mov
lods
fimull
sbbb
xor
cmp
daa
cmp
inc
or
push
adc
jb
daa
xchg
adc
popa
sub
dec
shll
cld
ret
xor
imul
ret
cmp
push
jno
ret
nop
xchg
sub
push
pop
stc
in
loopne
cmp
mov
mov
inc
add
inc
in
pop
xor
sti
jae
repnz
mov
push
dec
inc
push
sub
ret
dec
mov
roll
dec
stc
out
ljmp
mov
pop
mov
jmp
rclb
add
dec
sti
pop
bound
xor
add
repnz
mov
sbb
lods
dec
inc
fsubrl
loopne
adc
das
mov
lret
aad
sub
fidivrl
pop
sbbl
mov
rorb
dec
shll
dec
jnp
loop
sub
subl
cmp
stos
loopne
shlb
sub
add
fildl
xchg
cmp
sub
rdmsr
shll
jecxz
jp
push
mov
dec
push
clc
cmp
movsb
jp
hlt
fidivl
jb
mov
mov
add
sbb
loope
sbb
movsl
inc
es
popa
cld
cmp
loop
cli
inc
sarl
lea
add
jge
popa
icebp
jae
push
test
cmpsl
lea
scas
push
mov
cmp
outsl
cltd
imul
jmp
ror
into
shrl
sbb
fcmovb
int3
push
imul
lods
adc
sar
loope
jecxz
stos
and
imul
mov
lcall
sub
leave
push
add
repnz
jg
jno
mov
sbb
add
push
jmp
imul
mov
in
cmp
loope
lock
sbb
fcomip
jno
pop
jp
cld
shll
bound
pop
in
out
pushf
out
inc
pop
add
stos
shll
inc
xor
ja
repnz
in
lret
aas
ret
fildl
scas
inc
stos
push
ljmp
mov
popa
xorl
nop
add
inc
adc
xchg
dec
dec
push
jo
aas
popa
or
subl
ret
pop
ficompl
push
mov
and
subl
aam
jns
inc
popa
cli
scas
int3
int
pop
lock
sbbl
int
or
stos
stos
hlt
pop
xor
cmc
fcomp
xchg
jg
imul
out
dec
jb
test
adcl
jno
push
andl
fdivr
call
lcall
imul
inc
mov
loopne
enter
cmp
nop
push
ret
enter
ror
pop
test
mov
or
leave
clc
pop
jno
ljmp
fimuls
mov
daa
into
loop
andb
loop
jns
xchg
add
mov
loope
mov
dec
jb
lcall
jno
stc
cmp
not
jnp
add
fxch
aas
insb
jno
inc
dec
xchg
push
into
jmp
cltd
cmp
inc
sub
and
fs
lcall
add
stc
push
ret
pop
push
sahf
adc
arpl
mov
jo
loopne
adcb
out
mov
mov
mov
mov
mov
es
orb
fcmovbe
insb
cmp
fs
or
push
hlt
mov
pop
cmp
test
fdivr
cld
icebp
pop
out
jae
push
xchg
jp
test
inc
stos
imul
cmp
add
mov
subl
out
dec
mov
sub
fistpll
mov
icebp
data16
jg
or
rcrb
lahf
xchg
hlt
inc
cmp
mov
imul
mov
stos
jno
inc
xchg
mov
cmp
shr
shll
lds
shrl
and
dec
jb
push
push
addb
sbb
fidivs
test
and
adc
lock
push
push
test
orl
arpl
or
leave
sarb
pop
mov
inc
mov
icebp
fst
push
mov
clc
cmp
pop
and
fsubrl
movb
stos
add
xchg
cmp
clc
sub
push
pusha
pop
mov
jb
stc
mov
bound
lret
push
shrl
cmp
jae
cltd
mov
add
stos
inc
adc
sarb
sbb
and
jns
xchg
imul
cmp
sti
rolb
mov
mov
inc
mov
rcll
cltd
ds
inc
or
sub
test
imul
loope
inc
xchg
jno
push
add
xchg
sarl
pushf
mov
imul
mov
push
mov
daa
xchg
dec
fsts
stc
inc
out
sbb
inc
les
aad
inc
cmp
xor
shrb
ret
icebp
stc
pop
cmp
jnp
add
bound
rcrl
test
mov
push
outsl
adc
rcrl
shrb
sbb
ljmp
fcom
subb
pop
popa
cmp
xchg
push
out
sbb
add
ljmp
push
sbb
jns
mov
stc
lds
out
xchg
add
roll
dec
sub
cmp
jp
imul
stos
leave
inc
add
jmp
mov
inc
mov
scas
jb
imulb
mov
cs
call
or
mull
cmc
mov
push
cmp
dec
jnp
popa
imul
pop
inc
pop
lods
arpl
inc
and
enter
xlat
incl
sbbl
cmpsl
out
push
jmp
xor
or
test
pop
jle
mov
mov
mov
out
cmpl
jo
fs
fstps
mov
dec
cmpsb
ss
lcall
imul
mov
mov
cmp
xchg
push
jecxz
add
mov
push
push
insb
fwait
ret
mov
mov
lcall
pop
jns
sbb
ret
jecxz
pop
pop
sub
inc
cli
pop
cmp
lcall
push
scas
lret
xor
adcb
fldenv
xchg
sarb
pop
mov
shll
mov
sbb
cmpb
aaa
loope
mov
inc
mov
sar
lret
stc
jg
jg
jg
insb
test
cmp
pop
jnp
clc
sti
imul
jge
jmp
jno
arpl
mov
dec
jecxz
inc
popa
mov
imul
mov
sbbb
iret
imul
popa
loop
pop
mov
insb
mov
adc
push
leave
xorb
xchg
ds
mov
repnz
bound
mov
loope
xchg
sarl
rclb
jno
mov
xchg
xchg
lahf
mov
cltd
sub
cmpb
pop
mov
icebp
push
mov
dec
cmp
outsb
or
cli
imul
adc
cli
les
sbb
icebp
push
or
pusha
add
jb
pusha
add
add
jns
mov
dec
mov
jecxz
shll
stc
mov
xorb
inc
mov
xchg
dec
xchg
mov
mov
fcmovbe
stc
stos
shlb
arpl
xchg
inc
xor
mov
add
xchg
sbb
and
inc
adcb
arpl
clc
inc
inc
test
xor
dec
and
mov
loop
ret
mov
push
test
insb
jp
shlb
rsm
mov
je
sub
rorl
push
addb
pop
subb
dec
inc
or
daa
cs
mov
mov
push
pop
jle
movsl
sbbl
xorb
cmpl
push
jmp
push
or
fcompl
xchg
les
int
jb
imul
test
rclb
lret
jle
sub
cmp
rcr
adc
fstps
sbb
ret
pop
jae
cld
stos
in
loop
loopne
dec
cld
inc
push
xchg
cli
arpl
rcr
int
lret
sub
rcrl
sub
loope
fbstp
add
subb
test
inc
xor
in
mov
sbbb
popf
push
mov
cld
mov
shlb
inc
cmp
lcall
outsb
sub
push
in
popl
cli
adc
dec
movsb
jae
adc
test
jg
roll
add
jns
cmp
jb
pop
addr16
and
xlat
icebp
mov
loope
sbb
outsl
addl
shrb
and
inc
cmp
repnz
xchg
jnp
loop
adc
add
cmc
sbb
mov
aaa
mov
fadd
jle
push
mov
jecxz
mov
adc
push
or
jns
sbb
mov
mov
xchg
js
pop
or
mov
jge
jns
imul
jo
pop
jmp
repnz
popf
ret
loop
push
pop
imul
divb
test
subb
fsubl
imul
cmpl
dec
lea
jbe
ljmp
cmp
xchg
cmpb
popf
fcomps
int3
or
adc
jae
jno
mov
cmp
sbb
mov
inc
stos
dec
inc
xchg
push
inc
inc
lea
popf
aas
mov
rcr
xchg
push
mov
fsubs
mov
jge
inc
jae
jo
add
test
std
ds
xchg
push
dec
sbb
push
roll
jle
push
mov
outsl
add
xchg
mull
imul
fsts
in
stc
mov
jnp
fidivrl
aaa
ret
stos
enter
and
in
mov
leave
push
cmp
bound
aam
cli
popa
inc
jno
sub
xor
mov
orb
adc
cmp
pop
imul
pop
je
mov
mov
loop
push
mov
rcll
lahf
mov
popa
cmp
into
scas
in
mov
ds
mov
fwait
dec
bnd
jecxz
jns
push
mov
push
cmpb
mov
xchg
pop
movsb
fmul
mov
fs
adc
push
test
lcall
jge
fldenv
jb
mov
shll
icebp
push
jg
rcr
jae
mov
cmp
push
push
mov
lcall
or
lret
mov
mov
cmpl
dec
fdivl
and
test
adc
ret
pop
sbb
mov
inc
or
and
inc
mov
inc
loop
lcall
pop
dec
or
not
mov
dec
and
lcall
sbb
mov
jg
out
dec
push
jmp
jae
ret
adc
mov
sbb
mov
mov
pop
sbb
stos
leave
cwtl
mov
jae
clc
aas
mov
jnp
dec
out
and
popa
mov
stc
jecxz
pop
adc
dec
mov
out
cli
xor
arpl
mov
mov
jb
or
pop
aaa
sub
push
das
mov
xchg
loop
imul
dec
repnz
loope
xor
add
stos
ror
cmp
jo
ljmp
sbb
jne
and
jb
scas
xchg
dec
push
and
sub
rcll
mov
cmp
mov
repnz
jnp
in
aaa
adc
std
icebp
cld
add
jno
adc
jo
shlb
repnz
loope
adcb
arpl
cwtl
ljmp
pop
cltd
mov
addl
and
cmp
ljmp
je
mov
inc
ret
jp
pop
add
push
data16
xor
ret
icebp
and
xchg
out
out
icebp
push
mov
inc
scas
lods
mov
cwtl
jecxz
lret
inc
mov
add
mov
int3
cltd
imul
rcrb
dec
repnz
jnp
inc
xor
lret
adc
imul
cmpl
mov
dec
sbbl
out
add
mov
sub
push
adc
jb
outsl
cli
inc
scas
insb
icebp
imul
adcl
das
insb
bound
stos
or
div
push
sarl
insl
mov
inc
lods
ret
leave
xchg
lcall
jp
pop
movsb
dec
cmp
jmp
or
lahf
fstpl
mov
popa
ds
xchg
push
movsb
add
jns
roll
sahf
orb
je
sbb
cltd
rol
inc
and
inc
loop
push
add
jns
popa
ljmp
roll
xor
jp
imul
push
stos
and
xchg
mov
ljmp
hlt
cli
mov
lcall
lea
mov
jecxz
xlat
adc
pop
femms
cmc
xchg
jg
aas
arpl
inc
jg
ret
lods
and
fdivrs
push
fwait
pop
xor
dec
mov
mov
icebp
fdivrl
lret
and
push
dec
adc
pop
pop
rcr
sbb
fsubrl
enter
fimull
repz
lea
mov
xchg
cwtl
add
cmp
pop
inc
sbb
fldcw
fmul
loop
js
icebp
mov
dec
mov
xor
stos
insb
push
hlt
cmp
stos
jnp
in
pop
push
xor
or
loop
dec
inc
cmp
xor
icebp
fidivrs
subl
addl
cli
pusha
xor
repz
jg
shll
inc
push
pop
mov
inc
jg
addb
sub
adc
mov
call
in
xchg
mov
adc
fldl
add
dec
stos
lods
xor
lahf
sub
pop
mov
cltd
lret
ret
or
sti
jge
jge
push
push
jbe
adcl
rolb
push
shll
mov
dec
cmp
mov
bound
imul
imul
jae
scas
mov
jb
sbb
sbb
mov
cmp
mov
xchg
cltd
in
stos
clc
sbb
mov
out
cmp
je
and
int3
outsl
mov
fimull
mov
stc
cli
and
lret
push
xor
lods
imul
mov
inc
jbe
add
rorb
push
rcrl
sbbl
xor
icebp
jns
fnstenv
jp
adc
push
sbb
loopne
jns
dec
std
or
imul
loope
rcrb
add
cmp
push
arpl
jnp
mov
push
mov
or
ljmp
xchg
mov
inc
pop
jle
loope
add
mov
cmp
test
lcall
pop
adc
or
jns
jle
pop
pop
out
push
test
ret
pop
aaa
aam
mov
dec
xchg
sbbb
imul
js
pop
ljmp
mov
scas
jecxz
fnstsw
mov
or
or
bnd
xlat
cmpb
imul
mov
dec
add
ret
push
pop
mov
cli
jecxz
stc
pop
pop
jo
pop
je
add
pop
xor
jge
icebp
je
cmp
cmp
push
mov
mov
call
mov
mov
scas
stc
repnz
mov
push
div
jae
mov
xlat
and
push
sbb
into
jmp
jb
cmp
insl
adc
into
and
mov
fildll
sub
repnz
mov
push
dec
inc
mov
stc
mov
sahf
jmp
sub
pop
scas
xchg
add
mov
repnz
jnp
shlb
mov
or
fldcw
sahf
jp
xor
jnp
inc
push
sbbb
mov
fimuls
and
mov
xchg
mov
stc
imul
push
popf
jno
jg
aad
pop
and
push
mov
rcrb
hlt
enter
add
push
cmp
stos
mov
out
jecxz
fwait
dec
jae
popa
imul
push
testb
ljmp
inc
inc
or
ret
mov
add
mov
and
inc
aaa
sbb
stos
sbb
or
cltd
push
rcr
inc
cmp
add
inc
inc
cwtl
sub
xor
xorl
jno
jnp
jmp
out
mov
ds
jmp
mov
sarl
mov
sti
mov
pop
jae
andb
filds
addl
and
aam
leave
loope
enter
fmuls
ret
push
inc
jae
je
pop
mov
and
insb
cmp
cmp
shlb
push
xchg
int3
ret
mov
icebp
out
scas
bound
mov
cmp
repnz
adc
cmp
jge
inc
xchg
pop
inc
xor
sub
dec
add
cltd
xchg
popf
cmp
dec
sbb
mov
ljmp
jbe
movsl
inc
xchg
cmp
mov
sahf
fmul
clc
pop
orl
or
add
mov
xchg
arpl
sub
xchg
repnz
fwait
test
jb
mov
mov
mov
mov
ss
mov
arpl
ret
das
adc
repnz
mov
daa
pop
sub
lods
cmp
mov
push
lock
aam
hlt
mov
mov
iret
jns
imul
xchg
mov
mov
pop
xor
push
stc
inc
push
inc
push
inc
jb
push
add
mov
aas
mov
outsb
les
bound
jmp
mov
cmp
mov
push
sbb
mov
xor
ljmp
cld
push
cli
cmp
cmp
sti
sbb
aad
daa
ret
test
rolb
addb
jns
in
sbbl
pop
add
add
push
push
cmp
setb
xchg
jne
jno
adc
pop
mov
jb
add
jmp
dec
or
stos
cmp
fldcw
jno
pop
mov
loop
mov
add
adc
mov
mov
jbe
sbb
cmp
mov
lods
nop
inc
pop
jg
xchg
jns
cmp
lret
fdiv
jns
lock
dec
testb
pop
cltd
ljmp
cli
mov
mov
dec
mov
push
hlt
flds
popa
pop
in
shlb
cmp
ret
cmp
test
scas
mov
ljmp
push
aaa
call
cmp
push
mov
inc
fmulp
jno
lcall
pop
popf
fld
test
popf
cltd
jnp
ljmp
mov
xchg
fmuls
pop
insb
lea
inc
bound
popa
mov
clc
sub
lret
cmp
add
jae
stos
push
call
cmp
bound
std
nop
jae
mov
jb
mov
jae
push
mov
out
lahf
ficoms
cmc
cmp
adcl
or
repnz
push
mov
cmp
and
xchg
xchg
dec
loop
sti
xchg
xchg
repnz
fdivl
inc
fxch
cmp
or
rorl
aad
inc
in
sub
push
gs
out
inc
push
sbb
shl
adc
inc
subl
insb
cmp
jb
xor
adc
mov
dec
in
enter
addb
sub
loop
data16
mov
cmp
mov
mov
push
clc
xchg
cmp
pusha
ret
pop
mov
out
xorb
out
mov
mov
sti
pop
and
mov
inc
dec
out
ljmp
leave
fsubr
mov
push
jb
cmp
test
adcb
pop
pusha
call
fisubs
lcall
sbb
leave
xchg
pop
out
mov
test
shr
sbb
push
daa
das
jno
dec
push
mov
dec
scas
add
icebp
adc
aas
iret
adc
pop
bound
lcall
mov
xchg
jo
jb
in
mov
ficoml
mov
dec
cmp
xlat
mov
jb
pop
jns
cltd
mov
mov
or
leave
roll
stc
jp
push
dec
ficoml
add
inc
test
ja
xchg
ret
dec
pop
arpl
fcomp
mov
psadbw
mov
push
div
stc
dec
xchg
aad
jnp
hlt
icebp
in
ja
jp
daa
mov
ffree
ret
jb
fcmove
push
lret
out
arpl
adc
mov
dec
cmpl
jne
mov
mov
jg
aas
aad
shl
dec
cld
adc
icebp
sbb
imul
xorl
ds
lock
icebp
and
imul
mov
imul
sub
push
cmp
pop
inc
mov
mov
jmp
fucomi
sarl
fidivl
ljmp
dec
push
jg
ret
fisttpl
jb
jp
arpl
push
ret
mov
mov
jae
shlb
jg
jecxz
dec
jg
push
in
inc
shl
subl
jp
sbb
stc
cli
cld
cli
jmp
mov
fistl
popa
enter
cmc
and
sub
cmpsl
mov
out
mov
out
sub
pop
mov
sub
mov
lret
adc
stc
jecxz
mov
hlt
loop
andl
dec
bound
fadds
ret
rcrl
xchg
ljmp
icebp
ret
mov
mov
popa
daa
or
aam
cltd
scas
add
jp
push
imul
add
ret
xchg
fisubrs
faddp
ljmp
dec
arpl
int3
adcl
icebp
std
popa
inc
cmp
ljmp
aas
cmp
daa
inc
movsb
inc
push
cmp
push
jecxz
ret
or
adc
and
mov
add
lahf
adcb
cmp
loop
xchg
inc
sbb
int
fwait
push
adc
cmp
and
jns
mov
loope
sbb
inc
roll
aaa
sbb
popa
cmp
pusha
or
ljmp
mov
cmp
xor
inc
dec
jg
mov
in
xchg
inc
xor
lret
jge
roll
out
ljmp
dec
mov
cmp
mov
push
icebp
and
xchg
sti
rcr
or
jno
lock
pop
or
jmp
cltd
mov
mov
lods
icebp
lret
mov
mov
jle
mov
inc
or
ret
stc
shr
add
xchg
mov
jle
inc
sub
or
xlat
jno
sub
lea
cmp
dec
jmp
out
scas
popa
bnd
adc
jecxz
lret
mov
dec
cmp
dec
jns
jbe
push
shll
and
ret
pop
xor
pop
and
push
sbb
inc
ret
ljmp
fistpll
fiaddl
pop
mov
int
aas
jmp
xor
idivl
repnz
and
stos
lcall
xchg
imul
mov
jecxz
mov
and
mov
hlt
icebp
xorl
pop
jno
loope
orl
or
jp
lods
inc
or
jo
sub
sub
or
inc
inc
arpl
xor
mov
dec
fistl
out
sarl
stos
jnp
mov
dec
mov
fsubr
rorb
fwait
cmp
int3
inc
lret
push
jb
insl
xchg
repnz
stc
xchg
pop
inc
stos
jns
mov
push
adcl
aam
mov
adc
mov
mov
sbb
jp
xor
in
xor
dec
inc
xchg
out
test
imul
pop
dec
movsb
popa
mov
jno
jns
loope
in
inc
sbb
mov
and
dec
inc
test
mov
jno
std
mov
mov
dec
adc
aaa
push
daa
sbb
sbb
wbinvd
lea
fisubl
leave
fdivrs
add
mov
adc
jmp
inc
fisubl
in
add
dec
stos
inc
fwait
xchg
mov
rol
xchg
jecxz
dec
arpl
lods
out
stc
inc
xor
inc
fwait
jp
das
ret
mov
xor
movl
int
add
loope
mov
rorl
movsl
dec
out
pusha
xacquire
mov
cmp
andb
lret
inc
add
add
inc
add
mov
pop
jno
movsl
call
push
rorb
stos
or
cmp
dec
out
addl
sbb
jp
pop
orb
push
test
imul
mov
inc
pop
cltd
roll
xor
jb
lcall
data16
mov
adc
outsb
dec
cmc
ror
adc
cs
ret
ljmp
cmp
xor
mov
lcall
jp
ret
mov
jno
stos
mov
inc
arpl
inc
mov
pop
mov
mov
imull
cmpsl
stos
cmp
lret
lods
enter
or
push
enter
stos
mul
cmp
or
lret
or
inc
push
cmpsb
sub
dec
mov
inc
in
sar
inc
imul
lcall
stos
imul
imul
sbb
jmp
push
xchg
jnp
xor
push
jg
stos
fdivl
sbbb
out
push
sbb
jmp
dec
lret
push
jle
adc
sub
imul
cli
outsl
arpl
mov
orb
push
push
mov
jle
lcall
lret
jns
adc
push
jg
xorb
and
mov
sub
dec
jp
shrb
lods
push
loop
dec
ljmp
ret
pop
dec
and
aad
pop
lret
push
lcall
cli
int3
popa
stos
mov
movsl
icebp
lods
loop
add
stos
sbb
repnz
je
arpl
popa
jns
mov
jno
into
out
cmpsb
or
xchg
negb
loope
iret
enter
dec
cld
dec
ror
push
jb
jns
xor
jle
mov
aaa
insb
inc
push
lock
mov
bound
andb
popa
or
andl
jne
mov
xchg
mov
or
sbbl
stos
mov
dec
mov
mov
enter
leave
lea
mov
add
push
bound
loop
lock
fwait
lcall
loop
ljmp
jns
sbbl
popa
iret
je
fdivrl
test
outsl
dec
lret
arpl
int3
push
fiaddl
cmp
fnsave
lcall
sarb
icebp
cmp
mov
fisubl
jmp
repnz
loop
stc
jns
lods
divb
sti
and
loope
jnp
fimull
jb
sbb
test
xlat
in
and
lret
xlat
mov
mov
mov
and
sub
ljmp
stc
xlat
mov
stos
test
mov
stc
pop
inc
imul
mov
lods
cli
stos
rcrb
jne
push
xorb
mov
cmp
dec
pop
adc
cmp
dec
mov
mov
jnp
cmc
add
xchg
test
in
ljmp
into
sbb
mov
cld
sti
cmp
bound
xorl
cli
pop
sbb
pop
dec
subb
xor
cmpl
jo
je
insb
cmp
ret
inc
lret
addl
mov
call
jmp
dec
enter
pop
dec
movsb
loop
pop
cltd
stc
push
outsb
arpl
dec
sti
pop
stc
pop
iret
and
je
mov
imul
outsl
orb
cmp
subb
jl
mov
aas
jge
mov
inc
add
test
insb
pop
clc
push
imul
popf
sti
mov
cmp
dec
push
mov
icebp
dec
fcmovbe
lods
add
mov
add
lret
and
lcall
mov
jae,pt
dec
inc
push
push
nop
inc
dec
fs
sbbb
mov
and
stc
cltd
add
mov
xchg
cmp
jno
ljmp
fxtract
inc
pop
cmp
jge
fidivrs
jnp
lods
cmp
dec
fcmovbe
imul
shlb
pop
xor
cltd
jp
or
gs
icebp
mov
bnd
scas
rcrl
cld
mov
cmp
test
arpl
sub
aas
push
mov
or
fnclex
xor
push
jnp
xchg
xchg
mov
jmp
push
pop
das
pop
pop
and
movsl
inc
push
pop
rorb
dec
fwait
cmpsb
je
cltd
fs
ss
test
stc
sbb
stos
push
xchg
repnz
lret
jecxz
jbe
rorl
pop
popa
fists
lret
jmp
popa
stc
cmp
sub
sbb
cli
or
push
icebp
daa
test
xlat
in
andb
jle
sbbl
cmp
adc
mov
fstl
cli
xchg
stos
loope
xorl
xor
push
push
icebp
cmp
xor
in
add
xchg
shl
lods
jg
mov
cmp
push
dec
or
loope
mov
leave
popa
outsb
pop
icebp
je
repnz
dec
stc
lret
sbb
nop
loop
cli
cmp
leave
mov
inc
adc
arpl
in
jp
xchg
mov
mov
into
pop
xor
fmul
jp
icebp
cmpsl
lock
loope
fnstcw
test
ficoml
test
addr16
repz
rclb
and
push
mov
cmp
mov
or
hlt
push
mov
dec
jnp
and
stos
fcompl
mov
pop
rorl
inc
pavgw
mov
leave
xchg
pushf
stos
or
xchg
add
adcb
cmpl
push
in
push
inc
mov
xrelease
jnp
loop
fsubrs
mov
mov
loope
mov
fwait
hlt
pop
inc
mov
test
sarl
sarl
hlt
jae
mov
pop
std
imul
cmp
sub
inc
xor
adc
and
inc
imul
lds
fldt
pop
lods
wbinvd
mov
and
add
stc
and
or
and
es
mov
insl
cltd
in
mov
in
mov
rcll
shr
pop
cmpb
enter
dec
mov
push
stc
arpl
test
sbb
sub
and
enter
push
roll
fdivrl
dec
dec
in
push
mov
inc
jmp
aam
jno
xorb
push
and
fildll
cmp
fcomip
int3
cmp
push
dec
test
sbb
jp
add
imul
fs
inc
sbb
jnp
loope
stc
push
cmpl
dec
cmp
push
jno
roll
in
dec
cmpb
lret
mov
mov
ljmp
std
ret
mov
push
leave
mov
enter
or
mov
or
mov
adc
or
rcrl
and
sub
icebp
rorb
xchg
mov
movsl
mov
mov
ss
add
xorl
xchg
adc
push
lock
loope
imul
dec
ret
in
xchg
ret
xor
mov
dec
mov
jle
popf
imul
loope
insb
push
jne
stc
sbb
movsb
loope
mov
mov
mov
mov
jmp
jg
arpl
outsb
add
cmp
push
dec
icebp
xchg
add
cltd
popa
adcb
pop
xor
outsb
dec
stc
inc
repnz
int3
xor
or
cwtl
bound
sbb
push
push
je
mov
push
idivl
sbbl
jnp
lea
fmuls
sbb
outsb
loop
jnp
iret
xorb
dec
test
loope
enter
mov
fcomp
inc
push
xchg
xchg
lret
jnp
push
sarb
xchg
mov
add
push
cmp
mov
sub
push
sbb
pop
rcrl
xchg
mov
jno
ljmp
dec
mov
jae
or
xor
cmpl
xchg
stos
lcall
adcl
inc
fninit
mov
test
cmp
fcomps
arpl
inc
and
fidivrs
xor
ja
xchg
fldcw
scas
push
fstp
xchg
inc
ljmp
shll
xchg
test
inc
mov
pushf
adc
push
mulb
and
sbb
mov
jo
dec
andl
daa
mov
xchg
loop
cmp
dec
cmp
dec
adc
fldl2e
sub
push
inc
dec
add
cmp
test
lea
dec
mov
pusha
mov
push
imul
dec
push
scas
cli
xorl
shl
push
or
bound
mov
push
xchg
lea
ljmp
mov
mov
cli
cld
arpl
xor
pop
mov
mov
jecxz
fwait
or
ret
or
ja
fsubs
pop
pop
loope
call
shl
push
rolb
and
jge
jne
xchg
ret
dec
mov
fnstenv
inc
outsl
pop
mov
repnz
mov
add
lcall
imul
popa
inc
or
pop
xchg
fwait
cmp
jecxz
je
aaa
mov
in
fstpt
pop
jae
repnz
stos
stos
mov
sub
js
loope
add
mov
xor
add
or
push
imul
pop
loopne
test
ds
shl
cmp
add
push
mov
arpl
ljmp
mov
loop
repz
mov
pop
dec
roll
das
pop
subb
loop
jecxz
mov
mov
push
pop
roll
lret
scas
rol
test
jns
rcrb
cltd
push
loop
inc
cmp
sub
imul
rcll
stc
mov
jge
cmpb
loopne
stos
das
cmp
xor
mov
adc
xchg
rclb
in
in
pop
test
andb
mov
add
mov
push
and
push
call
adc
inc
add
adc
push
lret
lods
add
jno
roll
xchg
sub
test
mov
ret
hlt
and
xor
push
cmpl
test
lea
jp
adcl
sbb
imul
inc
leave
inc
mull
jno
divb
xor
jg
push
sbb
repnz
xchg
ret
inc
je
aam
pop
jb
fwait
pop
icebp
in
orl
cmp
jg
jno
clc
jmp
leave
sub
fabs
ljmp
ret
lret
outsb
jmp
scas
xchg
pop
jge
and
lret
in
stc
test
cld
enter
enter
mov
je
cmp
inc
mov
inc
frndint
repnz
popa
cmp
ljmp
sbb
cmp
push
or
sbb
xchg
cmp
in
cmp
push
jns
cmp
pop
xor
xchg
or
push
sarb
sub
push
imul
sub
pop
pop
dec
push
jo
xor
jb
fcmovnb
sarl
in
clc
or
out
dec
rorb
jg
rcll
popf
mov
orb
fcomp
inc
fmuls
rorb
pop
cmp
pop
xor
inc
out
aad
inc
xor
loope
pop
jb
int3
jecxz
cmp
pop
test
nop
jae
pop
out
xor
mov
stos
jnp
xchg
call
jno
imul
xor
aad
xchg
pop
arpl
and
pop
imul
test
arpl
loopne
and
push
pop
aas
xchg
jnp
jp
xor
push
cli
push
std
jno,pn
ret
adc
mov
rcrl
in
pop
ds
mov
mov
aas
mov
cmp
in
stos
imul
outsb
xchg
stc
je
ljmp
enter
cltd
in
mov
push
stos
xor
arpl
cltd
push
cmpb
lods
mov
xchg
push
clc
repz
rcll
push
xchg
enter
es
add
repnz
dec
mov
mov
push
loop
dec
aam
and
adc
aam
outsb
and
in
outsb
xchg
dec
and
arpl
xchg
popa
flds
pushf
xorb
mov
lock
cmp
xchg
je
pop
cli
cmp
movsb
jmp
mov
fxch
cs
dec
inc
fisubs
dec
inc
sbb
mov
insb
cmp
jb
add
jnp
insb
xchg
jns
mov
loop
cmc
inc
dec
xorl
pop
mov
ret
ljmp
dec
ficoml
dec
cld
cltd
jb
cmp
push
mov
lds
fprem1
fidivrl
sub
push
inc
pop
push
add
pop
icebp
inc
pop
ljmp
lock
loope
mov
out
imul
insl
inc
mov
test
stos
inc
mov
into
roll
fwait
pop
imul
mov
add
jmp
cmp
shll
mov
mov
mov
xchg
jne
sti
addl
push
xor
cmp
xor
test
repz
imul
mov
pop
lret
cmp
scas
add
xchg
sub
fs
mov
pop
fsubl
inc
jle
lcall
cli
or
loop
scas
icebp
insb
out
insb
inc
je
insb
test
test
mov
pop
pop
loope
xor
fmuls
imul
imull
mov
mov
aaa
lahf
pop
int3
bound
cmpsb
mov
cwtl
pop
icebp
mov
fmulp
outsb
or
lods
test
stos
imul
and
or
pop
push
sub
cltd
lods
jo
adc
loope
mov
insl
xor
nop
adc
leave
add
ljmp
sbb
jno
cmp
aam
rcll
cld
lahf
icebp
push
loope
xor
sbb
and
jae
mov
sarb
push
dec
fwait
ljmp
dec
sar
mov
xchg
mov
mov
loop
stc
jno
cmp
fsts
jns
xorl
push
leave
shl
fsubrl
jno
push
ret
jg
cld
push
popa
push
stc
push
inc
loop
cmp
jns
jae
in
adc
dec
testl
mov
cltd
repnz
mov
call
inc
cmp
lret
push
pop
clc
sbb
or
lods
jb
xorb
loopne
push
call
jns
inc
jp
mov
loop
bound
mov
inc
and
inc
adc
jnp
test
inc
jmp
push
jle
xor
movsb
mov
pop
mov
test
ficompl
adc
and
mov
mov
or
out
jnp
pop
push
fdivrl
rorb
test
imul
frstor
jb
add
mov
lret
and
cmp
add
jno
and
push
lret
and
fstpl
lret
ds
fldt
testb
sub
xor
inc
fbstp
ljmp
neg
jns
subl
shll
cmp
cmp
fisubs
push
push
mov
aaa
xor
dec
test
cmp
imul
icebp
imul
loope
pusha
popa
dec
adc
xorl
in
mov
test
das
leave
pop
sub
jae
mov
add
sub
dec
fnstenv
and
pop
lea
push
push
jg
in
imul
sub
scas
dec
xchg
inc
adc
push
or
in
ret
push
int3
dec
stc
arpl
pop
addb
pop
adc
test
dec
jno
cmp
or
or
push
push
inc
jmp
lcall
mov
enter
loop
cmp
mov
icebp
cltd
mov
dec
pop
in
test
stos
push
inc
xor
cmp
imul
hlt
inc
arpl
subl
out
lcall
push
movsl
decl
xchg
inc
je
pop
loop
lods
scas
std
xchg
inc
jecxz
imul
jns
lods
shlb
sbb
mov
jno
addr16
mov
addr16
and
xor
popa
popf
cs
dec
xchg
push
insb
dec
xchg
bound
in
or
mov
cmp
pop
imul
xchg
sub
dec
jns
out
cmp
fwait
rolb
ljmp
andl
pop
stos
inc
xor
cli
dec
cmp
inc
push
jp
inc
pop
call
push
add
mov
cli
prefetch
or
icebp
and
addb
adcb
jl
repz
pop
icebp
stc
stos
sarb
les
jecxz
rol
mov
lock
jno
inc
repnz
leave
jnp
fdivs
loop
mov
incl
clc
popa
adc
stc
mov
lods
cmpl
jo
inc
lods
mov
or
and
pop
jnp
stc
fstpt
inc
loop
ret
je
or
ret
adc
adc
add
inc
shlb
mov
fldl
enter
icebp
pop
mov
imul
aaa
fildll
xchg
xor
xchg
cli
jle
cmp
cmp
cmp
je
arpl
cmpsb
sub
ljmp
rorl
push
leave
jmp
dec
pop
fnstcw
ja
rcll
std
call
xor
add
mov
jp
fdivs
arpl
cmp
pop
cmp
push
xor
xchg
push
repnz
ja
addr16
sbb
jmp
pop
in
add
jge
add
mov
sub
pop
cmp
mov
jmp
inc
fldl
cs
push
mov
test
int3
push
mov
icebp
fnstsw
and
push
aas
movl
mov
inc
xor
incb
loop
dec
inc
dec
dec
insb
loop
mov
cltd
and
inc
and
dec
insb
mov
leave
fprem1
rcll
into
mulb
out
sub
push
movsl
hlt
insb
cmp
cmp
xor
shll
jp
mov
pop
cltd
fadds
lock
cmpb
sbb
jno
pop
jg
inc
push
pop
cmp
mov
jmp
push
or
xchg
popa
mov
leave
mov
and
gs
dec
mov
imul
cltd
adc
stos
fstps
inc
or
test
jnp
jns
fidivl
loopne
ficomps
into
xchg
icebp
inc
dec
das
sub
pop
cltd
adc
pop
mov
mov
xchg
mov
cmp
fadd
rcrl
push
int3
or
mov
cmp
stos
mov
cld
fisubl
loop
and
mov
sbb
jnp
dec
subl
mov
mov
inc
and
int
mov
mov
cld
xor
mov
ljmp
bound
adcb
and
lret
imul
cmp
inc
sarl
push
cltd
or
scas
inc
cli
int
scas
mov
jbe
add
mov
jns
pop
mov
push
popa
cmc
xor
jns
mov
cmp
sbb
push
mov
int3
add
outsb
lret
push
xchg
nop
add
mov
mov
rcll
mov
mov
enter
mov
pop
ljmp
jge
out
xor
mov
cmp
pop
cmp
test
inc
lods
bound
fdivrl
lcall
and
out
mov
hlt
loopne
pop
in
pop
das
out
repnz
outsb
inc
pop
out
pop
add
inc
imul
shll
aaa
inc
cmp
jae
sub
mov
pop
test
mov
lcall
clc
inc
push
subb
jg
inc
je
push
shll
lods
xchg
mov
push
sbb
ret
dec
shrl
mov
negb
fsubl
mov
call
subb
imul
stos
mov
mov
push
mov
int3
out
cmp
inc
and
imul
pop
lcall
mov
out
outsb
cli
in
sarb
mov
push
cmp
fcoms
mulb
xchg
jle
push
xorb
and
push
icebp
sub
xor
mov
xor
stos
xor
xchg
dec
scas
je
loop
jnp
ficomps
sbb
mov
out
dec
int
jge
sub
fistps
adc
insl
ret
ret
imul
mov
stc
call
sarb
push
ds
subb
pop
lret
fisubrl
xchg
shll
popf
imul
rclb
sub
lcall
mov
pushf
cld
xchg
xorl
add
daa
pop
imul
fmulp
mov
jl
jp
mov
loop
pusha
inc
mov
xchg
mov
notb
loope
xor
stc
sbb
adc
mov
xchg
push
lock
loop
jmp
sub
mov
loop
jnp
inc
mov
push
push
out
jbe
adcl
xchg
icebp
add
stos
xor
adc
cmp
mov
push
add
inc
mov
mov
insb
je
adc
xchg
stos
hlt
cli
jae
shl
xchg
out
cwtl
out
and
loopne
jle
stos
mov
push
xchg
orb
iret
mov
sbb
sahf
push
sub
push
jge
xchg
ds
out
test
loop
je
in
les
jmp
popf
inc
mov
xchg
inc
jno
push
jb
sub
adc
faddl
lods
cmpsl
inc
push
mov
cmpb
jae
cmp
lods
cmpsl
jnp
sub
loopne
stos
bound
jecxz
fsubrs
xor
pop
fs
xchg
popa
inc
jnp
lret
jge
adc
or
andnps
inc
addr16
sub
aam
mov
sub
fistpll
lret
idivb
fsub
mov
jp
or
jp
mov
add
xchg
ret
stc
clc
xor
sbb
cmpb
mov
adc
sbb
sub
jmp
jb
dec
sarl
lret
mov
pop
and
xlat
mov
rclb
stc
xor
bound
pop
hlt
sbbl
leave
mov
repnz
imul
inc
add
jg
sub
jo
roll
lods
ret
sarl
mov
cmp
jae
mov
leave
fst
pop
idiv
bound
fidivrl
rorl
jg
jecxz
pop
sarb
inc
or
mov
mov
movsl
ds
inc
push
push
sub
adc
icebp
les
leave
pop
icebp
or
imul
mov
jns
pop
add
dec
push
cmpl
test
add
xor
popf
shl
push
lock
mov
shlb
mov
mov
mov
clc
ret
or
jns
out
cmp
jl
mov
inc
mov
imul
aas
pop
popf
jae
lret
adc
lcall
mov
mov
iret
stos
in
inc
imul
cmpb
and
xor
and
lret
and
adc
aas
or
xchg
xchg
xchg
xchg
out
pop
sbb
pop
dec
dec
push
mov
dec
xor
shrb
scas
mov
ljmp
movsb
adc
rcrb
shl
iret
movsb
cli
ljmp
bsr
loop
imul
lret
insb
cltd
bnd
fnstcw
fs
stc
jo
icebp
push
insb
mov
xor
cltd
cmp
fadds
adc
ljmp
fstpl
andl
sahf
lock
lock
pushf
aam
and
push
sub
insb
inc
jb
xchg
mov
popa
jo
adc
push
movsb
cli
mov
adcl
mov
fwait
mov
pop
and
xor
mov
xchg
and
and
dec
jmp
gs
and
lods
xor
and
jno
xor
push
and
repnz
and
sbb
xor
mov
mov
xor
and
dec
ret
and
stos
dec
inc
mov
push
xlat
dec
sub
sub
js
xor
mov
xchg
and
and
sti
xor
and
lods
xor
and
jno
xor
outsb
and
and
sbb
xor
mov
mov
xor
and
xor
push
or
in
stos
andl
cmp
push
and
cltd
dec
popa
jecxz
scas
out
mov
xor
push
aaa
and
inc
jae
test
inc
ret
or
lret
repnz
cmp
add
loope
cld
xchg
shrl
out
mov
or
xor
lods
dec
bound
pop
popf
jbe
dec
imul
addl
subb
mov
pop
das
sub
icebp
xchg
cmp
inc
adc
shll
jb
call
popa
push
mov
out
test
sarb
push
stos
subl
shll
std
dec
mov
xor
je
popa
jns
push
stos
xchg
xchg
roll
fnstcw
ljmp
cmp
imul
sarl
jge
dec
dec
fildll
stos
mov
sub
jae
fwait
mov
clc
hlt
ret
loope
dec
sarb
inc
pop
mov
es
cltd
add
and
stos
out
push
and
into
pop
cmp
pop
xchg
cmp
jo
pushf
pushl
in
repnz
stc
or
mov
lret
xor
loop
iret
repnz
jecxz
mov
and
cli
repnz
or
outsl
mov
aam
dec
call
jae
mov
insb
stos
xor
push
jb
aam
add
pop
inc
es
push
pusha
das
xor
les
ljmp
jo
insb
stos
ret
jle
ret
hlt
xorb
sub
jae
pop
add
ffree
mov
xchg
pop
push
and
jns
fnstsw
jle
cli
mov
fmuls
js
ret
add
mov
popf
and
jp
pop
jns
addb
pop
mov
pop
repnz
outsl
cli
pop
jecxz
lock
pushf
testl
loop
fs
mov
fstpl
pop
jmp
push
push
imul
std
imul
cmp
fbld
jnp
mov
fst
adc
mov
mov
mov
mov
pop
fnsave
and
mov
dec
stos
mov
push
rol
bound
adc
ret
mov
frstor
mov
sarl
mov
adc
sbb
fmull
shll
repz
insb
pop
fbld
pusha
arpl
std
and
or
cmpsb
loop
sub
jmp
sub
and
pop
mov
repnz
fnstcw
loop
rcrl
fxtract
stos
popa
mov
orl
arpl
jp
pop
mov
add
sbb
jge
sub
mov
sbb
dec
imul
xor
repnz
addl
inc
fdiv
test
jle
pop
leave
out
xor
nop
leave
popf
popa
inc
inc
int3
push
xchg
cmp
loope
cmp
inc
pop
sub
pop
cmp
loope
mov
lods
add
pop
dec
or
aam
xor
add
mov
pop
jns
pop
push
push
into
fwait
xorl
mov
and
inc
push
mov
test
fs
sbb
repz
int3
rcrl
and
add
scas
xor
jno
adc
subb
mov
mov
shll
jo
int
jne
jo
fnstcw
repz
fistpll
rolb
fcmovbe
xchg
add
popa
cltd
adc
iret
mov
inc
ja
xchg
jp
ljmp
divb
mov
or
cmpsl
loop
arpl
mov
dec
repz
cmp
pushf
outsb
jecxz
and
xchg
and
fs
mov
xchg
std
ret
mov
test
xchg
fldenv
cmc
and
loop
stc
cmp
mov
inc
je
fsub
jae
sti
imul
mov
pop
push
repnz
outsl
dec
pop
addb
xlat
out
mov
fs
imul
arpl
pop
andb
lahf
dec
fcomp
inc
mov
cmp
jb
outsl
jnp
aaa
repnz
imul
jae
adc
sti
push
cmp
subb
xchg
pop
adc
loope
mov
jae
pusha
mov
arpl
pop
lods
mov
insl
inc
dec
push
andl
mov
inc
ret
adc
pop
insl
push
dec
orb
fcom
cmp
push
bnd
jae
subb
fmuls
fldl
xchg
cmp
jb
outsl
jae
subb
fcomp
pop
mov
fisttpll
xchg
inc
scas
adc
outsl
jnp
xorb
fcomp
arpl
lods
push
divl
sbb
je
test
mov
fs
enter
push
stos
bound
stos
push
xchg
push
fisttpl
inc
je
cmpsb
xor
jo
adc
jae
repnz
arpl
cmpsb
loop
jnp
sarb
repnz
scas
cmp
jno
hlt
fcmovbe
cmp
mov
outsb
jo
cmpl
outsb
sbb
jl
lahf
cmp
mov
icebp
shll
sbb
je
mov
sbb
or
repnz
rcll
lods
mov
leave
mov
jo
mov
mov
mov
fcmovb
mov
loope
mov
mov
iret
div
mov
or
pop
ret
mov
jnp
mov
out
mov
out
ret
aad
int
pushf
sbbl
mov
inc
xchg
mov
mov
mov
push
mov
mov
fildll
fbld
mov
frstor
mov
frstor
mov
frstor
mov
leave
std
mov
add
adcl
andl
mov
pop
jnp
xor
dec
iret
push
fwait
sub
push
push
adc
das
shrl
cmp
fs
fisubrl
push
rorl
js
jno
sbbb
jnp
andb
pop
ds
stos
inc
cmpsb
push
adc
inc
pop
inc
fcomp
inc
mov
inc
cs
mov
bound
cmp
inc
rcll
inc
arpl
stos
inc
xor
fwait
mov
jnp
outsb
xor
insb
and
in
mov
movsl
mov
fldl
fnstsw
sti
jnp
jnp
mov
insl
jnp
push
bnd
ret
and
and
jbe
sbb
enter
mov
loopne
stos
push
inc
xchg
loopne
jnp
loopne
lock
xor
outsl
aaa
sbb
lahf
pop
push
dec
jge
push
mov
pop
cmp
push
sti
cmp
mov
loop
jae
out
mov
sub
push
nop
scas
dec
cmc
arpl
pop
nop
push
push
scas
loope
mov
loop
inc
test
and
xor
lods
pop
push
or
jo
popf
pop
jae
add
jae
icebp
insl
dec
aad
lea
pop
xchg
mov
sbb
cmp
sub
nop
push
dec
pop
and
jp
sub
or
xor
push
jl
arpl
jae
pop
pop
arpl
mov
lock
xorl
daa
or
adc
jae
fidivs
jae
jo
cmp
arpl
test
xchg
xchg
adc
stos
jnp
mov
mov
mov
push
fs
xchg
enter
jb
fs
iret
push
xor
xchg
cmp
push
xchg
sbb
jnp
push
push
push
lret
jns,pn
and
sbb
mov
jp
mov
sbb
pop
je
mov
cmp
push
fmull
push
imull
xor
mov
je
jae
cmp
cmp
dec
dec
pop
ret
add
stos
cmp
xor
and
stos
mov
arpl
jae
and
fdivs
enter
jmp
push
mov
or
loopne
dec
mov
sub
cmp
clc
xchg
mov
xlat
add
mull
leave
mov
pop
aam
push
fcoml
cmp
xchg
cmp
jg
arpl
cmp
lret
loopne
jns
dec
push
inc
fcmovnbe
xor
mov
mov
mov
fnsave
arpl
ljmp
mov
push
inc
add
sub
push
pop
mov
les
jb
ret
imul
stos
xor
mov
mov
inc
jg
inc
loop
fwait
bound
adc
and
fistl
test
aad
in
inc
jecxz
fidivrs
cmp
testb
test
jne
sbb
ret
in
sub
and
add
xlat
icebp
xchg
pop
adc
mov
scas
ret
int3
mov
mov
jb
andl
push
and
sub
pop
rcl
add
ss
sbbl
adc
shll
push
ds
push
fcomi
flds
and
dec
push
loope
imul
add
mov
mov
pop
mov
mov
jb
xor
push
aaa
fnstcw
ret
mov
fildll
inc
ja
test
add
mov
adc
xor
push
mov
bound
jb
sub
sti
inc
sbb
xor
lahf
xchg
pmuludq
loopne
jg
popf
fbstp
js
daa
dec
inc
testb
xchg
jnp
push
add
hlt
ret
fcmovnu
xor
or
loope
mov
adc
arpl
jae
xor
rol
jnp
push
fbstp
dec
leave
pop
add
jo
sub
inc
outsb
loopne
sbb
mov
pop
jg
and
sub
jp
shlb
jl
push
lret
inc
inc
push
flds
and
imul
mov
add
xor
rcrl
mov
push
pop
ret
arpl
xchg
jecxz
or
clc
and
xchg
fiaddl
rcr
pop
aam
jno
jg
push
insb
orb
dec
sbb
or
loopne
orl
hlt
enter
pusha
inc
aaa
loop
adc
outsl
addl
jae
ret
pop
arpl
push
jns
ret
add
mov
mov
mov
and
mov
xchg
sahf
arpl
dec
jge
leave
inc
roll
inc
in
aaa
mov
rcrl
mov
iret
fstl
push
cld
add
add
icebp
mov
lret
repnz
enter
jne
sbb
aad
xor
test
nop
inc
xchg
inc
fcoms
movl
leave
mov
add
js
loope
iret
jno
mov
adc
pop
mov
bound
pusha
jle
inc
sbbb
xchg
int3
test
pop
mov
adc
inc
mov
aas
sbb
xchg
jno
cmp
js
xchg
js
mov
mov
das
push
imul
les
cmp
js
dec
push
in
adcb
push
cmpsl
std
mov
je
pushf
xor
xor
mov
xor
arpl
add
decb
and
adc
das
xchg
add
inc
repz
cmp
xchg
mov
cli
add
jno
jo
nop
shll
mov
ss
in
inc
test
cmp
add
imul
cmp
jo
inc
mov
add
fildl
dec
pusha
into
fldcw
ret
jae
mov
pop
dec
cwtl
inc
jp
std
inc
hlt
mov
push
je
jno
inc
and
xor
sbb
mov
loop
icebp
imul
pusha
dec
pop
jle
std
aas
test
mov
fstpl
xor
iret
adc
ror
arpl
aaa
sub
mov
in
xchg
and
int
orl
xor
scas
outsb
xor
fs
mov
scas
add
stos
cltd
push
sbbl
and
notb
mov
mov
xor
mov
das
cmp
dec
rolb
insb
addl
loop
jno
push
cmp
pop
adc
mov
sub
or
push
shll
jno
cmp
cmpsb
cmp
hlt
sub
popa
int
dec
loopne
loop
mov
sahf
and
pusha
inc
loopne
outsl
lea
push
sub
inc
imul
jno
mov
pop
cmpsb
xorl
in
cmp
repz
insb
and
hlt
jnp
das
fisubl
inc
mov
mov
jb
push
cmp
and
fnop
fs
push
lock
jecxz
pop
cmp
pusha
addl
ret
adc
cltd
popf
scas
jp
arpl
push
sbb
pop
cwtl
test
scas
cmp
mov
je
jno
push
je
fstpl
and
cli
int
icebp
inc
frstor
fdivl
outsl
jb
int
les
insb
and
push
popa
push
int
fbstp
push
lock
loope
jae
es
xchg
js
mov
pop
fwait
popf
rcll
cs
sub
adc
jp
mov
push
mov
testl
inc
cmp
cwtl
stos
xchg
jne
in
xchg
les
fsubl
dec
cltd
fs
in
xchg
les
pop
sub
cmpsb
mov
scas
adc
cmp
sbb
jle
add
sbbl
cltd
pop
jns
lea
adc
add
push
test
sub
adc
inc
out
jle
inc
outsb
xor
loope
loop
lea
test
push
inc
lea
popf
dec
notl
cmpsl
call
pop
lea
testl
dec
clc
and
imul
mov
test
xor
adc
push
mov
jns
cltd
bound
fwait
jns
adc
add
mov
fidivs
adc
fwait
outsl
pop
xorb
rclb
mov
and
inc
push
cmp
push
or
lods
jne
aad
test
cmpsl
arpl
xchg
iret
pushl
xchg
mov
adc
sub
and
mov
shrb
lahf
scas
or
pop
inc
jb
lgs
xor
xchg
lods
or
je,pn
add
pop
sbb
mov
outsb
or
leave
push
in
jno
stos
mov
push
movsb
ror
out
or
movd
or
setg
aam
in
in
outsl
jb
xchg
lods
pop
or
test
push
sbb
mov
inc
loope
vcvtsd2ss
jecxz
jg
pop
cwtl
inc
mov
das
push
shrb
fwait
add
loope
loopne
cmp
mov
fwait
mov
das
pop
notl
jge
das
fstpt
push
inc
inc
pop
xor
cltd
das
flds
and
dec
leave
sti
push
subb
jecxz
nop
das
pop
scas
in
out
xor
aad
in
aas
pop
nop
mov
scas
dec
mov
pop
cs
iret
inc
xlat
pop
das
int3
or
shl
icebp
jne
dec
loopne
adc
cwtl
std
mov
aas
jnp
jp
mov
mov
dec
pop
std
out
mov
pusha
fcomps
aad
roll
fbld
out
xchg
outsl
loope
addr16
pop
push
scas
inc
pop
jg
lahf
popf
cmc
adc
inc
pop
jb
scas
movsb
sub
movsb
jecxz
xchg
outsl
popf
fs
xor
push
cltd
mov
mov
shrb
lahf
pusha
dec
add
lahf
dec
push
jno
xor
imul
push
mov
arpl
in
adc
mov
movsb
xchg
pop
in
dec
arpl
flds
dec
adc
mov
cli
sub
test
push
adc
popa
scas
ss
les
inc
test
rclb
push
iret
push
out
out
lods
stos
cwtl
xchg
push
push
push
insb
jnp
and
mov
ja
add
mov
push
adc
jo
stos
xor
xor
adc
adc
push
and
pop
mov
andl
inc
pop
and
xchg
jle
add
adc
js
push
jge
ret
add
push
push
mov
rol
pop
outsb
push
hlt
mov
mov
pop
and
push
or
cmp
pop
sbb
pop
popa
ret
adc
dec
cwtl
or
mov
test
sbb
out
rcrb
xchg
lret
sub
fdivrp
cltd
leave
jo
mov
push
aad
sti
and
mov
cmp
movlps
push
shll
inc
mov
psrad
notl
lret
xor
fstl
xor
push
mov
mov
adc
pop
mov
fistl
pop
push
and
lea
enter
lahf
xchg
ffree
push
jbe
addb
fldcw
adc
or
add
repz
out
testb
adc
mov
mov
sbb
mov
lds
iret
insl
xchg
add
adc
decl
inc
sub
jle
out
xor
loope
jmp
and
bound
xor
test
and
sub
rcrl
addr16
nop
adc
orb
adc
xor
xlat
mov
bound
dec
xor
xlat
mov
and
push
adc
shll
push
icebp
andl
mov
ret
adc
mov
pop
movzbl
inc
test
movq
arpl
scas
dec
scas
aad
pop
adc
aam
mov
xchg
dec
nop
fstl
and
addr16
frstor
lahf
dec
dec
in
and
sub
pop
xchg
inc
cmpsb
dec
popf
ljmp
and
mov
push
into
sbb
cmpsb
jae
adc
inc
xor
rcrb
mov
and
test
stos
jle
fs
out
sbbb
aaa
mov
popa
jp
push
ucomiss
fidivrl
sbb
or
push
mov
push
push
stos
mov
ljmp
fld
or
xchg
inc
mov
lret
arpl
int3
or
xchg
and
sahf
out
imul
push
repz
addr16
push
fcomps
ret
sbb
inc
rcrb
cmpsl
add
pop
cmp
jae
add
mov
inc
pop
cwtl
lods
mov
mov
jae
xor
ret
pop
imul
dec
iret
ret
xor
dec
sar
mov
stos
sbb
pop
aas
mov
fistpl
sub
xchg
lods
test
xor
or
testl
test
cwtl
mov
les
push
cmp
mov
adc
lock
dec
sarl
pop
stc
dec
mov
push
lret
fimuls
pop
xchg
icebp
sub
mov
inc
nop
repnz
push
repz
imul
fs
shrl
ds
adc
into
mov
dec
scas
aad
iret
mov
out
mov
cmp
test
dec
or
dec
inc
mov
mov
je
dec
in
fdivr
jns
mov
test
sub
test
xchg
sbb
sub
int
scas
sub
fsubrl
xchg
sub
call
mov
sub
test
popf
adc
jns
leave
ds
pop
fs
xchg
dec
scas
in
clc
push
jp
dec
stos
rol
adc
mov
push
sbb
mov
xor
arpl
pusha
pop
and
add
jno
push
adc
push
test
insl
push
xchg
arpl
pop
andl
mov
sbb
lret
mov
adc
sub
shll
flds
arpl
and
loop
dec
xor
inc
rorb
std
fcmovne
mov
sub
push
mov
jns
jb
mov
outsl
push
mov
andb
in
xor
sub
inc
adcl
movsb
lret
jae
les
push
cmp
mov
and
lret
inc
int3
and
dec
or
mov
mov
inc
xchg
inc
fbld
in
ret
xor
and
inc
pop
mul
hlt
inc
xchg
rcrb
rcl
adc
jb
add
je
mov
sahf
ss
mov
jae
push
jno
inc
fnsave
std
test
jbe
fwait
ret
and
xchg
dec
les
jno
sub
jo
leave
mov
sbb
sbb
push
add
adc
in
sub
mov
lcall
mov
imul
pop
jns
pop
cmpb
add
fadds
stos
adc
adc
jnp
push
aam
pop
rcr
test
cmp
xchg
jmp
sbb
sub
and
inc
rcrl
out
or
inc
mov
popf
pop
pop
cli
in
mov
movsb
cmp
std
ljmp
and
cmpsl
shlb
orl
dec
fisubrs
sbb
pop
cmpl
pop
cmp
movsl
bound
call
cs
mov
mov
pop
pusha
ss
nop
in
roll
push
mov
mov
jge
jno
lret
mov
push
cmp
add
inc
xchg
lods
in
fcmovnu
cmp
and
push
movl
movb
pusha
pusha
movw
lea
jmp
push
movl
pushf
pushf
jmp
push
pushf
mov
push
pusha
lea
jmp
pusha
movb
movl
pusha
call
lea
bswap
jmp
movl
push
mov
lea
jmp
rol
add
xor
movzbw
not
pusha
mov
seto
mov
lea
pushl
mov
pop
jmp
mov
cmpsl
mov
bound
scas
inc
add
out
jg
fisttpll
and
xchg
mov
or
mov
ljmp
or
scas
inc
lds
dec
aas
mov
mov
adc
adc
pusha
cmp
pop
jl
shlb
dec
shlb
in
out
pop
mov
add
je
adc
shll
mov
movzbw
push
mov
pushl
mov
mov
pushf
mov
pusha
pushf
pushf
pushf
pushl
ret
sub
pushf
cmc
stc
cmp
call
bt
cmp
movw
call
str
pushf
pushf
movb
jmp
lea
je
call
jmp
lea
jmp
inc
xor
icebp
mov
mov
shlb
pop
and
sbb
add
jae
cmp
int
sub
lcall
out
jp
sub
xchg
and
andl
sub
cmp
pop
jae
pop
and
adc
sub
and
adc
jb
jle
xchg
jg
dec
ljmp
pop
out
sbb
push
pop
std
mov
cwtl
push
in
ret
add
negb
push
into
scas
les
fimull
sub
scas
arpl
mov
mov
xlat
cwtl
dec
jb
mov
call
jge
stos
xorl
mov
cwtl
or
dec
push
pop
pusha
mov
daa
imul
mov
sub
in
pusha
or
push
je
adc
mov
fcmove
aad
das
enter
lds
jg
icebp
daa
sbb
shll
lea
imul
sarl
add
out
pop
cmp
movsl
inc
jp
js
add
xchg
ret
sbbb
aaa
sub
add
loopne
mov
fs
pop
addr16
sbb
mov
adcl
and
ss
fsubl
test
xor
lret
push
push
int3
adcl
mov
lods
je
sti
mov
cmp
add
movl
lods
sarb
mov
or
outsl
je
pop
scas
aad
mov
addr16
jae
push
xchg
lds
loope
adc
push
das
xor
add
cltd
les
xchg
cltd
rorl
xlat
pushf
pop
adc
cmpsl
mov
arpl
aam
pusha
clc
cmp
int
outsb
fldt
arpl
clc
int
mov
adc
jmp
mov
lea
stc
push
shlb
sub
mov
pop
cmp
or
xchg
shlb
sub
sbb
add
cmpsl
mov
in
rclb
out
std
into
xchg
xchg
sub
jg
sub
or
jne
add
pusha
jno
pusha
lcall
cli
mov
jb
shl
xchg
jns
outsb
inc
jo
push
mov
sbb
les
outsb
shlb
mov
push
add
mov
push
jmp
sub
clc
movb
test
neg
push
rol
jmp
jmp
jmp
bswap
not
lea
mov
pushl
lea
ja
push
lea
jb
bt
jmp
out
rcll
sub
aam
add
jo
jp
les
addr16
js
les
stos
arpl
mov
and
and
cmpsl
push
adc
inc
push
mov
or
mov
fs
and
push
int
and
ret
addr16
xchg
add
cmp
jle
mov
jle
cmp
cld
cmp
outsl
jnp
mov
lea
jne
bswap
movb
movzbw
jmp
call
pushf
test
pushf
mov
call
lea
jb
push
cmp
jmp
rol
lea
js
pusha
pushf
mov
inc
call
pushl
lea
ja
pushf
movl
jmp
neg
not
mov
stc
cmp
stc
stc
cmpb
push
lea
jno
pusha
pusha
lea
jne
pushf
cmc
neg
cmp
sub
and
shl
movsbl
cmp
mov
sub
test
sub
mov
neg
add
rcr
jmp
add
or
cmp
lods
dec
lret
addb
loopne
std
dec
out
mov
into
xchg
mov
inc
mov
adc
call
mov
dec
mov
and
aad
aas
dec
pop
sbb
xchg
mov
and
les
scas
jne
and
sub
mov
cmp
dec
fcomp
inc
decb
cmc
mov
add
inc
mov
gs
loopne
out
rol
dec
test
sub
lods
mov
xchg
mov
cs
shlb
xchg
ror
pusha
pushf
mov
pushf
pushf
mov
inc
call
mov
xchg
not
bswap
not
movsbw
mov
bswap
pop
pusha
jmp
jae
out
ja
adc
arpl
jge
lds
lret
push
jne
mull
mov
jmp
test
rcrb
push
cmp
sub
clc
add
push
pop
shlb
or
adc
bsr
sar
btr
mov
cmc
jmp
pushf
pushf
lea
call
pushf
pushf
call
push
lea
jne
call
lea
jne
push
lea
jmp
jmp
call
push
lea
call
jmp
jmp
movl
call
lea
ja
shr
xor
sub
shl
shld
bt
add
clc
cmp
cmc
mov
push
cmc
pusha
pushf
mov
cmp
push
clc
repnz
mov
movb
lea
jne
lahf
movb
bswap
movzbw
push
mov
jmp
lea
je
pusha
call
pushf
jmp
lea
jne
adc
cmp
bt
mov
pusha
pusha
or
call
lea
je
jmp
lea
push
push
pushf
movl
pushl
pushl
pushf
pushl
popl
push
pushf
movb
mov
pushl
ret
cld
aas
mov
jmp
mov
inc
xchg
xor
jle
add
dec
sub
sar
sub
mov
test
mov
mov
mov
adc
ss
into
and
cmp
pushf
leave
fldcw
mov
sub
orb
push
and
add
sub
shlb
lods
push
jecxz
movsb
xlat
das
orb
mov
mov
add
shlb
jg
ljmp
pushl
pushf
pushf
pushl
popl
pushl
pushf
pushl
ret
jmp
into
sbb
shlb
xor
arpl
gs
lods
popa
ljmp
adcb
mov
sbbb
popf
sahf
loopne
adcl
cmpl
xchg
enter
ja
push
inc
jae,pt
icebp
add
push
fisubrl
or
jne
mov
add
shl
neg
clc
movzbl
mov
cmp
cmc
jmp
pusha
mov
movl
pushf
lea
jmp
pusha
lea
jne
pushf
mov
mov
pushf
lea
jmp
lea
ja
inc
setl
dec
mov
inc
inc
inc
inc
dec
inc
call
jmp
inc
neg
mov
and
ror
ror
add
inc
shl
shrd
mov
test
jmp
call
ror
stc
pushf
neg
pushl
pushl
clc
cmc
add
push
pushf
ror
push
dec
stc
pushl
cmp
bswap
setne
lea
cwtl
lea
movzbw
movsbw
mov
push
call
pushf
mov
movb
lods
call
bt
test
pusha
test
sub
lea
pushf
inc
lea
pusha
lea
call
pushf
adc
jmp
mov
mov
jmp
push
sbb
test
cmp
dec
int3
cmp
imul
cmpsb
ss
jg
mov
mov
and
and
repz
mov
sub
or
nop
dec
adc
jb
cmc
in
add
jg
mov
push
pmuludq
add
lods
fiadds
adc
in
not
push
aad
add
dec
mov
pop
adc
inc
pop
shlb
cltd
js
jmp
pusha
outsb
scas
sahf
cmp
cmp
mov
lahf
dec
shl
arpl
test
bnd
lock
pusha
push
jae
jno
sbb
jae
xchg
cmp
mov
mov
ss
pop
popa
mov
adc
sub
mov
mov
shlb
cmp
ja
aas
jo
aam
mov
xlat
bound
jno
and
scas
mov
adc
pop
jae
cltd
push
stos
sub
xchg
inc
icebp
shlb
inc
outsl
pop
mov
push
sub
mov
mov
cwtl
shlb
aad
aaa
in
orl
loopne
adc
mov
xor
shlb
or
ja
pop
sbb
sub
lea
mov
and
jp
pushf
add
jmp
movsb
imul
sub
stos
push
bnd
dec
fstps
les
stos
pusha
mov
loop
sahf
xchg
or
int
es
imul
inc
int
nop
iret
sub
lods
pop
pop
pop
mov
je
lods
mov
fnstcw
push
mov
pop
bound
int
hlt
jge
int3
inc
pop
repnz
xor
out
test
inc
aas
xchg
inc
xchg
mov
jbe
or
pusha
ds
cmp
add
xor
push
nop
xchg
ljmp
scas
jge
mov
pushf
inc
pushl
lea
jmp
mov
pusha
pusha
movl
movb
lea
jmp
movzbl
mov
test
stc
test
pusha
add
bt
pusha
mov
pushf
test
clc
call
inc
call
movl
movb
pushl
lea
jmp
cmp
or
pusha
push
call
in
sbb
sbb
add
mov
sti
pushf
dec
adc
mov
rclb
mov
push
pop
mov
inc
lea
dec
repnz
cmc
jb
mov
mov
xchg
sbb
sahf
sub
mov
test
adc
and
les
stos
out
push
lahf
insl
out
lea
xor
mov
test
xor
xchg
and
xchg
stos
sub
inc
mov
and
add
das
std
scas
ljmp
into
lea
loope
mov
roll
jmp
mov
cmpsb
sbb
push
adc
jbe
lds
xor
mov
push
push
adc
sub
xchg
mov
or
addr16
pop
in
sub
mov
mov
adc
mov
test
icebp
loope
push
jle
int
nop
ret
bnd
lret
gs
jmp
daa
in
cmp
push
pminsw
push
sbb
and
out
mov
fs
lock
or
gs
arpl
jmp
mov
dec
jg
mov
je
mov
and
scas
aaa
add
out
test
inc
sar
pop
or
inc
daa
xor
mov
and
fs
sub
cmpsb
mov
mov
mov
shlb
icebp
push
mov
std
jno
add
repz
mov
movb
jle
mov
scas
fs
xor
jbe
or
mov
lods
inc
cmp
shlb
or
pusha
cmp
jo
cmpsl
ret
in
xchg
fiaddl
add
push
imul
jbe
and
cmp
dec
mov
lea
dec
pop
je
into
dec
lock
mov
cmp
or
mov
out
iret
add
and
push
or
pop
mov
inc
movsb
adc
fdivrl
add
sbb
das
add
shlb
pop
mov
repz
sbb
add
add
add
add
add
jmp
sbb
add
add
add
add
jmp
mov
ret
add
pusha
orb
mov
add
jmp
lds
xor
mov
loope
pushf
push
push
pop
test
cmpsb
sub
insl
lret
call
sub
fsubrs
out
stos
stos
inc
insl
mov
repnz
jae
repz
js
mov
stc
sti
out
cmp
push
and
and
insl
or
sbbb
pop
or
xchg
int3
mov
mov
jns
sbb
lret
add
inc
decb
mov
xlat
dec
pop
or
into
mov
clc
xchg
popl
cmpsl
push
push
and
sub
aam
sbb
bnd
jns
cmp
adc
mov
cltd
into
or
bound
test
push
sub
pushf
repz
insb
cmp
dec
mov
fbld
lock
dec
cmp
rcll
jo
orl
rclb
das
es
push
sbb
jle
xchg
mov
hlt
pop
inc
mov
mov
cmpsl
sbb
repz
movsl
mov
jo
xchg
xchg
test
jnp
inc
sub
dec
sbb
jns
outsl
outsb
and
in
stos
dec
pushf
mov
mov
les
ffreep
jg
mov
lods
aas
add
iret
dec
negl
inc
xchg
mul
cs
xchg
scas
pusha
inc
js
dec
lcall
rol
xor
fsts
test
push
daa
movsl
mov
rclb
adc
xor
xchg
out
addb
xor
add
mov
sbb
rclb
dec
jp
fwait
sbbl
jge
ljmp
and
std
test
mov
mov
stos
dec
push
rclb
aas
dec
xor
inc
shll
repz
mov
xchg
movsl
mov
push
mov
mov
jnp
dec
jns
pop
pushf
mov
ds
xchg
hlt
and
hlt
lods
adc
inc
and
mov
leave
in
sub
fwait
fs
mov
mov
pop
push
inc
clc
or
ret
mov
lcall
ja
jae
pushf
mov
inc
jbe
das
mov
dec
xchg
pop
stos
das
js
sbb
sbb
ja
fs
mov
push
daa
dec
in
loop
or
pop
inc
push
pop
shr
pop
fsubrs
aad
out
bound
pop
clc
mov
fwait
and
inc
adc
mov
xchg
xchg
popa
fsubs
mov
and
scas
mov
ss
in
je
mov
fdivr
inc
mov
mov
in
mov
and
mov
dec
pop
xor
jge
sbb
adc
cmp
pop
jmp
lea
mov
xchg
and
inc
pop
dec
push
ds
push
mov
gs
pop
lret
in
xchg
test
addr16
insl
dec
inc
cmp
rcll
xchg
sub
adc
cmpb
stc
mov
clc
cmpsl
jge
cli
rcl
mov
adc
pop
sub
mov
adc
jmp
loopne
cld
pop
fistps
fucomp
cld
sub
xchg
mov
icebp
xchg
adc
adc
das
cltd
hlt
mov
and
icebp
cmc
push
jl
sti
fdiv
xor
fisttpll
mov
xlat
mov
sub
jl
gs
leave
adc
jns
lcall
push
ftst
or
jecxz
jo
cltd
and
cmp
loopne
or
stos
inc
sbb
scas
push
adc
push
int
mov
mov
cmc
mov
add
outsb
push
inc
insb
push
add
dec
je
adc
inc
dec
insl
jmp
jmp
adc
mov
jnp
xlat
xlat
dec
scas
jno
add
lcall
add
pop
jl
mov
pop
adc
dec
repz
pop
rorl
xchg
in
mul
xor
aad
pop
pop
fsts
dec
nop
mov
add
sahf
not
dec
xchg
std
sbbl
sbb
mov
push
clc
jns
mov
push
popf
das
movsl
shl
adc
pop
cmp
lea
dec
push
nop
loopne
push
xor
fldenv
and
in
dec
xchg
outsb
pop
mov
sbb
out
in
mov
scas
mov
js
add
xor
xchg
or
xchg
movsb
cmc
std
push
jp
inc
push
data16
mov
adc
lcall
or
mov
or
test
scas
rorl
dec
xor
adc
sub
cmp
push
arpl
inc
insl
pop
sub
add
fcmovbe
aaa
mov
or
lret
rorl
add
adc
push
aad
adc
and
andl
outsb
repz
add
or
inc
cltd
ja
roll
xor
sti
mov
xor
movsl
cltd
mov
xchg
insb
cld
mov
stc
pop
pop
out
jg,pn
aaa
movsb
sbb
mov
shrb
add
adc
adcl
and
test
divb
repz
xchg
pushf
ficoml
inc
cli
sub
xchg
les
rcrb
lcall
xchg
loopne
inc
pop
repz
pop
stc
pop
add
cmp
jmp
mov
pop
test
lds
jp
stos
jmp
ljmp
pop
or
ret
mov
inc
fcoms
sbb
cmp
mov
pusha
add
inc
xchg
cs
jmp
jl
ds
fs
mov
jo
pop
cld
rcrl
addb
cmp
mov
cmp
dec
xor
mov
fcomip
or
cmc
dec
pop
or
dec
and
std
push
fcomps
mov
lcall
leave
xchg
lcall
insb
stos
or
stos
pop
inc
mov
or
sbb
aad
pushf
cmp
pop
jns
xor
and
fldl
inc
add
pop
ret
in
sub
fldenv
xor
mov
popf
fcmovbe
add
ljmp
pop
mov
mov
repz
jl
adc
div
dec
cmp
negl
jns
rolb
cmp
xchg
dec
or
sti
sbb
push
dec
fmulp
in
call
das
ja
mov
out
sub
les
cli
fldln2
arpl
loop
mov
ja
xchg
or
sub
mov
inc
sti
sbb
push
stos
adc
enter
fnsave
popl
xor
addr16
mov
mov
sbb
pmaddwd
sbbb
bound
pop
test
icebp
xorb
mov
leave
loop
jecxz
cmp
mov
test
imul
stos
xchg
sti
daa
test
or
iret
das
fs
jo
aad
and
cwtl
mov
jne
jne
cmp
fs
loope
fwait
pop
je
mov
xorl
es
sbb
cltd
es
pop
clc
lock
ret
and
scas
push
cmp
cmpsl
sahf
int
jg
lahf
mov
stos
dec
pop
xor
pop
dec
xorb
gs
push
je
adc
cmp
jae
adc
and
in
faddp
call
jnp
pushw
lret
jns
and
aaa
mov
adc
stc
push
dec
cmpb
nop
rcrb
mov
xor
ret
and
inc
adc
mov
push
ja
xor
push
push
cmc
into
dec
sbb
rol
call
inc
scas
pop
mov
popf
out
pop
or
in
fidivl
mov
jg
inc
sub
or
jnp
int3
mov
jo
jle
jmp
lds
jmp
add
and
and
pop
sub
mov
fcoms
xchg
outsb
xor
adc
sti
sbb
test
pop
test
test
das
xorb
adc
inc
xor
iret
repz
pushf
daa
test
push
xchg
push
xchg
stos
push
loop
ret
repz
test
and
cmp
mov
push
xchg
mov
jle
stos
ljmp
rclb
xor
lcall
out
or
jo
mov
or
push
stos
loopne
dec
das
sbb
arpl
pop
mov
sbb
out
add
mov
scas
jmp
mov
add
and
pop
sahf
xchg
or
xor
imul
test
jo
data16
movb
pop
push
into
jg
cmp
out
fucom
ret
arpl
das
fcmovbe
test
pop
aas
mov
js
or
xchg
fwait
cli
sbb
les
repz
mov
aam
inc
sbb
mov
lcall
int
lret
or
lods
mov
jns
testb
dec
inc
pushf
sbbb
shrb
cmc
jmp
mov
scas
aad
and
clc
inc
ja
xor
or
call
mov
sbb
arpl
mov
and
and
push
adc
cmp
es
inc
insb
int3
pusha
addr16
out
ds
xor
bound
filds
jae
jnp
ljmp
out
into
push
sub
aad
push
loope
mov
cmpsl
pop
outsl
call
xchg
mov
mov
out
mov
aam
popf
out
sub
out
sub
stc
adc
lods
mov
pop
or
loopne
lds
ror
out
sub
incl
pushl
rcl
xchg
mov
lds
clc
adc
adc
mov
fs
stos
test
lea
sub
lret
cmp
pop
push
and
push
add
add
adc
push
push
ret
push
pop
ret
fwait
insl
sub
inc
roll
xlat
jb
cmc
cmp
push
cmp
fsubrs
pop
rorb
dec
sub
fcoms
and
into
pop
xor
out
aad
and
sbb
xchg
cmp
mov
imul
pushf
imul
daa
jl
inc
call
sub
loope
in
test
push
std
jae
mov
mov
stos
popa
jns
pop
pop
pop
mov
inc
mov
mov
pop
cmc
jle
insl
mov
cmp
hlt
outsb
inc
mov
idivb
cmp
aaa
fsubs
insb
aam
pop
insl
leave
xchg
loopne
movsb
sti
cmp
add
inc
loopne
int3
pusha
dec
sub
sub
push
cmc
and
orl
into
lods
mov
jg
sbb
insl
mov
push
shr
outsb
mov
in
adc
lcall
lahf
mov
fnstcw
fsubrp
fmul
jns
inc
xor
into
stos
scas
lods
es
push
jne
gs
inc
sahf
inc
mov
arpl
jno
out
and
pop
mov
mov
xchg
xor
decl
xor
inc
test
ja
jbe
cs
ret
cwtl
or
sub
in
push
mov
add
add
add
sub
leave
jmp
jmp
cmpsb
adc
lahf
jge
jl
hlt
mov
or
jae
int
inc
jnp
pop
or
rorb
jg
test
adc
enter
jecxz
call
ljmp
sbb
mov
rorb
pop
bsf
std
sbb
or
les
adcb
fucomip
jno
sbb
fldcw
cmpsb
insl
ret
push
mov
test
and
adc
in
rclb
and
out
cmp
ljmp
fisubl
imul
mov
fmull
dec
adc
dec
xor
mov
jnp
call
shlb
cpuid
pop
push
push
and
and
mov
push
cwtl
cmpsl
test
mov
sbb
add
shl
or
push
push
mov
pop
aas
fsubl
and
adc
rolb
fcomip
cmc
mov
push
shlb
sub
repnz
test
pop
add
adc
shlb
arpl
ret
adc
jmp
in
mov
dec
call
mov
repnz
mov
mov
fbstp
shlb
dec
mov
adc
push
add
push
outsl
mov
ljmp
xor
xchg
gs
loop
cmpl
or
pop
pusha
or
sbb
pop
xor
popa
into
mov
dec
arpl
loopne
test
mov
sub
pop
test
shlb
sub
data16
mov
lret
push
test
fidivl
sub
adc
loope
mov
icebp
xchg
and
in
lea
dec
rolb
cwtl
xchg
insl
in
mov
jp
scas
mov
test
jg
stos
outsl
pop
insb
push
je
loope
lahf
sub
lret
fsubp
je
lahf
insb
out
mov
cld
lret
popl
sub
sahf
mov
shl
fdiv
dec
aaa
push
mov
or
and
xor
out
push
jo
roll
xchg
daa
ss
cmp
dec
sbb
pop
iret
pushf
pushf
xchg
pushf
cwtl
lahf
pushl
popl
pushf
mov
not
lea
not
pop
movl
cwtl
push
lahf
lea
pushl
movl
pushf
pusha
call
pushf
jmp
pushl
push
lea
jno
push
push
pusha
pushf
movw
lea
jmp
movl
push
pushf
mov
lea
jmp
movb
mov
bswap
jmp
push
cmp
mov
inc
mov
dec
jmp
push
xchg
cmp
mov
push
or
mov
fcmovnbe
leave
xchg
or
adcb
add
pop
popa
imul
jmp
mov
out
movl
scas
pusha
fucompp
rcrb
cmc
pushl
cmp
push
mov
add
test
or
mov
lds
xchg
bound
cli
xchg
jg
xchg
test
xchg
loop
lds
lcall
pop
mov
xor
sub
pop
lahf
sbb
xchg
dec
and
in
in
jno
jo
sbb
add
out
cmc
and
fsubrs
sarb
insl
dec
out
loop
dec
pop
mov
xchg
cli
and
mov
mov
dec
shlb
fimuls
xchg
fnsave
add
jbe
fdivrl
mov
in
dec
dec
insb
outsl
nop
gs
bound
mov
popa
cmp
dec
gs
scas
out
or
sbb
lods
ret
or
in
inc
into
pushf
push
push
inc
mov
insl
mov
sub
orl
mov
test
into
add
inc
std
push
jg
jge
test
rcll
pop
jns
scas
mov
cli
dec
mov
and
fldenv
mov
xchg
and
jb
add
or
lahf
push
jmp
out
push
cmp
test
fcmovne
or
cmc
push
jbe
insl
jge
fimuls
test
enter
mov
arpl
sti
xchg
shl
dec
pop
pusha
dec
inc
outsl
mov
stos
or
jns
addr16
scas
push
pushf
lea
jae
bt
jmp
pusha
lea
jne
call
mov
lea
je
mov
mov
lahf
push
movzbl
movzbw
bswap
mov
lea
jmp
movl
pusha
movl
pushf
pushl
popl
pushf
pushf
pushl
pushl
ret
mov
movzbw
cwtl
jmp
jmp
repnz
movw
call
pop
mov
fistl
lret
mov
adc
lahf
and
outsb
pop
xlat
sub
and
lea
push
shlb
and
nop
jecxz
leave
in
pop
jae
cmp
lea
shlb
adc
repz
mov
test
call
clc
or
pushf
jmp
push
or
rcrb
nop
icebp
pop
sbb
cmpsb
daa
ds
jp
and
imul
jge
sahf
mov
pushf
xchg
mov
jnp
mov
shlb
rcll
and
ja
test
add
pushf
or
pushl
call
lea
jne
movsbl
bsr
xor
rcl
adc
inc
cmp
mov
test
and
and
add
seto
mov
jmp
pushf
rol
bt
push
sub
cmc
jmp
cmp
push
jmp
pushl
popl
pusha
clc
cmp
jmp
pushl
mov
pushf
pushl
popl
pusha
push
pushl
ret
bswap
cwtl
not
mov
setbe
pusha
setp
movl
lea
push
call
mov
movsbw
lea
movsbw
push
ja
lahf
lea
call
cltd
pusha
cmc
mov
cld
and
jno
jae
fsts
filds
dec
into
test
leave
stos
mov
pop
popa
jne
sahf
into
test
push
scas
mov
xor
xchg
in
push
jle
nop
jmp
jl
xchg
shlb
loopne
mov
out
push
inc
in
add
in
out
shlb
mov
lahf
cmc
call
inc
test
mov
in
shlb
mov
ret
fs
push
fwait
xchg
pusha
movsl
push
xor
mov
repnz
fdivrs
xor
outsb
fisubs
cmpb
andb
cmpl
push
jae
std
and
enter
and
sub
xchg
fldt
jne
adc
andl
in
shlb
out
es
or
add
inc
fistl
ja
loope
and
inc
arpl
stc
push
ffree
xchg
sub
sti
cld
sub
imul
jmp
loopne
sti
mov
jge
stc
push
jp
test
adc
and
mov
aad
adc
addr16
xchg
idivb
sub
rcl
shlb
mov
icebp
inc
push
ss
inc
popa
push
cmp
lock
and
mov
stc
incl
insb
jns
call
fs
jne
pushf
pushf
lea
jne
pusha
inc
pushf
lea
js
pusha
pushf
inc
pusha
movb
movb
lea
jmp
test
add
jmp
fsubl
call
mov
adc
test
mov
test
icebp
lea
and
mov
enter
adc
repnz
adc
insb
ret
jo
cltd
mov
rcll
insb
or
cwtl
scas
add
xor
and
xchg
sub
inc
in
fbstp
add
xor
jae
xchg
sub
mov
lret
insl
push
jns
xchg
cmpb
jmp
adc
jle
cltd
test
addr16
gs
in
test
push
mov
push
lock
in
add
sub
imul
push
mov
insb
sub
jne
hlt
mov
cmp
and
inc
imul
and
pop
push
lret
sub
in
daa
push
adc
cmc
sti
sub
mov
and
jge
add
lret
xor
mov
and
jmp
fsubrp
pop
in
ret
rorb
add
fsubrs
and
rcrl
repnz
push
xadd
inc
outsb
push
in
out
out
jecxz
add
push
mov
ss
pop
mov
aaa
shlb
icebp
push
loopne
inc
and
adc
movl
pop
xchg
pop
movw
lea
jmp
call
lea
call
jmp
add
clc
add
jg
movzwl
jmp
and
jae
mul
sbb
xchg
imul
out
pusha
xor
pop
inc
cmp
mov
in
xchg
outsl
adc
cs
pop
pushfw
push
pop
xchg
jmp
push
imul
jbe
mov
xchg
outsl
adc
adc
movsl
mov
sbb
int3
in
repz
push
dec
fidivl
rcrb
addr16
xchg
fdivr
inc
jae
jne
shlb
push
sarl
call
pop
shlb
pshufw
mov
and
cmp
lret
jl
rcrb
ljmp
out
jl
aam
sub
daa
mov
mov
pop
fs
test
js
sub
out
nop
ljmp
lret
cmp
lahf
sub
leave
jno
repnz
int3
add
cwtl
inc
hlt
adc
inc
lea
push
push
leave
xchg
pop
mov
sub
inc
push
repz
cmpsl
ljmp
jae
jp
das
pusha
mov
xchg
mov
mov
xchg
test
fdivrl
adc
adc
xchg
in
pop
or
push
shll
js
lcall
imul
dec
mov
stos
push
jbe
jb
sbb
mov
jno
hlt
push
sub
daa
in
cmp
and
add
ja
inc
pop
fstps
adcl
iret
aad
stc
cltd
pusha
pop
mov
addl
mov
movsbl
ss
pop
pushf
cmpb
ljmp
in
xchg
in
dec
xor
mov
cs
jg
je
mov
cmp
mov
push
mov
cs
loop
and
inc
ljmp
cli
lcall
pop
push
gs
ffreep
mov
ljmp
pop
lds
xchg
push
div
sbb
fld
and
sub
pusha
inc
push
adc
pop
fs
sub
nop
cmc
shlb
xor
cli
mov
and
xor
sbb
das
aam
push
imul
pop
insl
sti
repz
pop
inc
mov
add
repnz
cld
inc
int
jbe
and
lcall
imul
lods
out
jns
fs
xchg
push
shlb
aam
pop
mov
daa
cmpsl
mov
push
dec
loop
dec
rcrl
mov
mov
gs
push
or
out
adc
cwtl
mov
push
or
push
stos
pop
and
sti
and
cmc
addr16
xchg
fisubs
push
cltd
data16
test
pop
js
and
aas
mov
push
add
aad
jmp
inc
and
aam
pop
add
pushf
pushl
popl
pushf
pushf
pushl
ret
mov
lea
jae
sub
bsf
mov
or
shrd
btc
shld
mov
sbb
mov
stc
bt
sub
cmp
test
call
pushl
popl
pusha
pusha
pushf
movb
pushl
ret
push
pusha
movl
pushf
pusha
push
lea
jmp
jmp
pusha
movl
pushf
pushf
pusha
lea
jmp
pushf
jmp
movb
inc
push
movl
pushf
ror
push
pusha
inc
movw
not
cmc
stc
stc
mov
rol
jmp
call
mov
stc
pushf
jmp
mov
bt
cmpb
call
jne
in
mov
add
bound
or
xchg
into
push
inc
out
ficoms
push
sbb
in
lods
pop
repnz
pop
mov
mov
jno
and
ljmp
imul
insl
mov
or
add
call
movsl
icebp
bsf
mov
mov
lea
shld
adc
mov
pop
mov
push
sub
cmp
test
call
pop
pop
ret
std
and
xchg
push
aam
ljmp
js
mov
into
jp
mov
push
dec
inc
jae
mov
adc
out
mov
xor
shlb
mov
jp
jge
inc
and
push
sbb
insl
sbb
fidivl
or
pushf
mov
or
mov
mov
imul
push
mov
or
sbb
shlb
mov
cmp
mov
lds
outsb
pop
jge
lret
add
and
sub
call
push
pop
mov
mov
in
pop
adc
inc
lret
pusha
push
sub
mov
dec
mov
dec
js
aas
inc
add
fwait
and
add
mov
xchg
scas
scas
lods
cmp
and
ja
pusha
inc
mov
pushf
pushf
inc
pushf
pushl
push
pushf
lea
jmp
out
lret
cmc
cmpsl
mov
or
ds
pusha
in
push
mov
cmc
mov
testb
or
adc
ds
add
rolb
mov
loop
push
cmp
jns
mov
xor
shlb
repnz
jne
gs
xor
fs
insb
add
scas
call
pusha
push
cmp
call
jnp
outsl
and
in
mov
jge
ljmp
fisubs
add
frstor
or
adc
testl
or
mov
add
repnz
shl
push
push
xchg
push
scas
cwtl
or
push
lock
cmpsb
out
std
push
lock
and
inc
es
movl
pushf
movw
pushf
lea
jmp
mov
pushl
lea
je
call
jge
rcll
push
sarb
outsb
aaa
sarb
imul
jge
mov
mov
pop
jle
mov
jb
xor
clc
jns
lret
add
sub
test
push
test
pop
xchg
mov
pop
cmp
decb
inc
icebp
out
lds
pop
xchg
es
rcr
jo
movsl
arpl
mov
pop
int3
mov
mov
push
test
nop
adc
out
popa
lock
sbb
fldt
ret
add
xchg
gs
inc
and
repz
std
xchg
add
ljmp
aas
inc
out
inc
out
push
cmova
xchg
mov
ret
lods
in
sub
jne
mov
aas
out
ja
movw
cmc
rol
movw
inc
pushf
pushf
lea
call
clc
pusha
test
stc
cmp
push
pusha
call
cmc
test
stc
mov
cmp
pushf
pushf
xchg
shl
pushf
mov
pushf
clc
jmp
lods
bt
mov
clc
push
ror
pusha
stc
cmc
neg
pushl
test
call
jmp
test
ret
pusha
mov
clc
rcrb
aaa
fcmovnu
cli
xor
out
add
cltd
addr16
mov
les
into
sahf
pmaddwd
xorl
jecxz
inc
jnp,pn
mov
or
xor
and
loope
cmp
push
scas
out
dec
cmpsb
shlb
orb
xor
xchg
sar
jmp
out
jmp
push
call
xchg
pushf
pop
push
pushl
popl
setne
jmp
pushf
movl
call
je
push
pushl
pushf
lea
jmp
shlb
mov
scas
dec
dec
adc
rorl
and
int
stc
stos
push
push
or
pop
aam
mov
fldenv
inc
add
inc
mov
lret
push
cmp
daa
adc
test
jnp
in
fisttpl
cli
pop
mov
and
out
mov
mov
jne
adcl
pop
fs
out
enter
and
dec
filds
test
sub
mov
sti
xchg
mov
pop
sub
jo
aaa
outsb
fbstp
movb
out
lds
sub
jecxz
mov
add
push
icebp
mov
mov
fwait
mov
cmc
dec
das
test
bound
aas
xadd
cmp
inc
mov
lahf
cmp
sarl
inc
fs
and
cmp
adcl
cmp
out
aaa
out
pop
mov
and
mov
cmpb
cwtl
and
addr16
mov
and
rol
enter
dec
jns
mov
aad
out
shlb
pop
sbb
cld
fcmove
arpl
repz
push
shlb
aad
xchg
add
add
push
pusha
call
push
lock
std
std
xor
imul
ret
shlb
ror
lods
es
cltd
adc
pop
mov
xor
movsl
outsl
cld
lea
sbb
sarl
aam
pop
leave
add
jecxz
sub
test
fidivs
inc
cmpsb
loop
in
xchg
push
out
les
test
pop
jae
loop
enter
inc
movl
pushl
inc
clc
call
or
pushf
movb
lea
jne
lea
mov
test
push
pusha
clc
or
push
call
sbb
xorb
imul
enter
je
fisubrl
mov
pushf
call
add
push
popf
aaa
cmp
dec
cld
ss
cmp
jae
sub
sub
ljmp
shll
icebp
mov
data16
or
in
adc
pop
out
ja
or
out
cmp
add
inc
cmp
bound
mov
or
rorl
dec
xor
adc
and
push
lahf
mov
imul
jae
sti
xor
cmp
cmpsb
xchg
rorl
arpl
and
outsl
mov
gs
outsl
fs
gs
popa
outsb
fs
gs
add
ret
pop
pusha
push
pushf
lea
jmp
pusha
movl
call
sub
fsub
sbb
popf
pop
outsl
les
fwait
jo
repnz
or
jns
iret
out
fwait
xchg
outsl
or
xchg
popf
xchg
aam
and
out
jg
pop
arpl
fs
jecxz
and
or
cmpsb
out
cmp
in
das
loop
rcll
add
into
pop
push
jno
add
add
and
out
sbb
cwtl
jae
mov
push
ret
stc
sarb
arpl
and
lds
mov
push
das
jbe
movb
push
mov
dec
sahf
cli
orl
jmp
add
jp
add
push
inc
add
mulps
dec
mov
sub
jns
test
dec
add
cltd
cmp
or
fimull
jo
incb
daa
mov
iret
lock
xchg
xor
iret
leave
fs
fcmovne
dec
adc
sub
and
xchg
rep
in
ret
lea
sbb
pop
mov
dec
xorl
dec
xlat
jo
inc
mov
mov
int
jo
sub
xor
sbb
and
sbb
negb
mov
fldenv
repz
xchg
sbb
pop
enter
jae
or
and
push
mull
sub
push
out
cmp
push
mov
push
pop
and
cltd
int
push
jns
sub
stos
cmp
mov
loope
or
inc
adc
adc
out
adc
push
ss
int3
leave
ret
imul
outsl
add
pusha
outsb
xchg
icebp
loopne
pop
in
dec
pop
in
stos
shlb
jle
repz
xchg
jno
jb
mov
mov
mov
hlt
inc
scas
pop
leave
inc
jb
ja
push
or
sbb
xchg
ds
dec
mul
lcall
arpl
mov
aaa
jno
sbb
dec
into
xchg
mov
out
push
cmp
push
adc
gs
shlb
xor
pusha
mov
lea
call
pusha
lea
jae
push
mov
mov
not
inc
mov
mov
pushf
push
mov
lea
call
lea
je
jmp
jmp
pushf
lea
jne
rol
lea
mov
mov
push
or
push
lea
je
setb
pusha
xchg
setbe
lea
lea
push
lea
movzwl
jmp
seta
mov
cwtl
lea
lea
je
pushf
pushf
push
mov
pushf
mov
pushf
pushl
popl
pushf
jmp
pushl
popl
not
mov
cwtl
movl
jmp
pushl
pusha
movl
pushf
pushf
movl
mov
pushf
pushf
pushl
movw
pushl
ret
movb
pushl
ret
cmp
lea
jmp
cmp
mov
xor
xor
pop
adc
loop
nop
push
or
and
mov
insl
stc
push
or
push
mov
jne
add
sbb
inc
push
inc
push
xchg
mov
and
lds
hlt
sahf
scas
inc
sbb
add
enter
inc
fistpl
repz
mov
scas
shlb
mov
cmpsb
int
test
rolb
push
idivl
shlb
ja
sub
mov
inc
inc
and
loope
push
cs
mov
pushf
movl
pushl
movb
lea
jmp
insb
dec
mov
sub
outsb
icebp
push
fsubrl
mov
test
jge
movsl
mov
adc
mov
dec
dec
lea
mov
cmpsl
lds
mov
sbb
in
and
mov
xchg
sbb
repz
test
or
push
xor
paddusw
lock
sub
jnp
scas
leave
movsb
push
cmpsb
stos
and
mov
es
mov
stos
cmp
mov
fs
inc
sti
mov
shlb
pop
ljmp
orl
mov
sti
orb
push
repz
sub
ja
or
ss
xchg
cwtl
push
sarb
or
sbb
into
shlb
pop
mov
pushf
lea
jb
test
pushf
cmp
call
cmc
bt
cmpb
call
push
cmp
aas
inc
mov
and
push
fcoml
stc
add
fildl
xor
mov
sub
test
arpl
cld
mov
pusha
gs
arpl
xor
fcomip
cmp
inc
push
add
mov
mov
pop
sub
cmp
outsl
xor
xor
in
mov
outsl
jge
out
jge
adc
cwtl
lahf
mov
jns
xlat
cld
fstpl
daa
sbb
shlb
sbb
cli
sbb
lahf
aad
cwtl
sub
dec
jecxz
and
outsb
out
sub
stos
add
test
addr16
and
lahf
rclb
pop
add
mov
pop
icebp
mov
lods
adc
mov
in
ljmp
icebp
cmp
sub
fcmovnb
and
movl
aaa
add
call
movl
jmp
pop
sub
push
cmpsl
mov
sbb
stos
sbb
ds
inc
xor
jns
das
inc
cmp
or
mov
cmp
arpl
lods
push
or
pop
add
lahf
shll
shll
ljmp
in
push
shlb
aad
mov
or
lea
cld
mov
cmpsl
pusha
shll
cmp
mov
popl
loop
mov
ficoms
mov
mov
fstl
mov
or
sub
cmpsb
adc
mov
adc
xor
mov
popf
fcmovu
lds
shlb
int3
xor
cmp
xlat
das
push
push
inc
add
mov
dec
pushf
mov
inc
adc
sbb
shr
jg
add
sub
clc
rcrb
add
lahf
add
cltd
sub
shlb
jp
ret
push
adc
iret
mov
outsb
xor
mov
mov
pmullw
pop
je
add
arpl
mov
cld
xchg
iret
jl
and
push
mov
pop
fcoml
push
les
into
hlt
push
pop
dec
shll
out
xor
aad
ud0
lcall
das
and
cli
sbb
mov
cli
out
inc
xchg
jae
cltd
lret
and
loope
rclb
pushl
loopne
lret
xlat
mov
xchg
fcompl
outsl
cmp
ss
sar
enter
gs
sub
lret
adc
xor
clc
cmp
int3
fwait
dec
dec
mov
in
push
shll
dec
mov
enter
mov
sub
fiaddl
xsha256
cmpsb
adc
xchg
test
and
outsl
cmc
cmp
push
and
adc
and
scas
aam
mulb
jb
and
add
pop
scas
jp
push
test
adc
cmp
or
add
ss
roll
xor
test
stos
jnp
jl
lods
cmp
or
mov
int3
test
cmpsb
and
adc
push
scas
pop
mov
xchg
and
dec
add
sub
stos
lds
lahf
and
cmp
push
adc
pop
mov
lahf
test
push
inc
in
pcmpeqw
jno
imulb
inc
dec
nop
sbb
mov
add
jb
sbb
mov
lcall
call
jp
push
sub
dec
xor
pop
loop
sub
aam
dec
xor
imul
shlb
push
push
cli
ljmp
pusha
pop
xlat
inc
cmp
mov
fcmovb
hlt
sbb
xor
and
test
in
push
xor
je
andb
gs
call
out
jle
cltd
sub
sub
adc
push
sub
incb
pop
mov
movsb
sub
add
or
aad
push
push
lcall
jns
out
sub
mov
pop
xor
push
jbe
cmp
and
mov
aam
stc
mov
pop
das
jbe
stos
imul
mov
xchg
lea
sbb
js
rolb
jnp
cmpsb
sahf
inc
sub
sbb
dec
mov
lahf
call
xchg
ds
shlb
gs
or
cmpsl
mov
mov
sub
mov
test
cmp
xchg
and
mov
push
or
das
shlb
mov
pushf
sub
push
or
and
jle
pop
sbb
cli
sub
lds
out
das
or
xchg
fneni(8087
loope
xor
shlb
dec
mov
add
movzwl
shl
mov
cmp
cmc
add
test
cmp
cmc
call
pushl
not
mov
pushf
pushl
pushf
movb
lea
jmp
test
mov
mov
sub
insb
cmp
cmp
push
jb
push
or
fidivl
cs
repnz
or
addr16
movsb
mov
movsl
mov
pop
mov
inc
sbb
mov
shlb
into
inc
ret
mov
jmp
jecxz
cmp
xchg
out
pusha
pushf
pop
jmp
xor
mov
adc
sub
inc
cmp
pop
mov
insb
and
test
xor
scas
and
adc
aaa
sub
fstps
pop
inc
cmp
mov
jne
pop
push
pop
insl
es
push
loopne
test
xor
push
dec
test
clc
mov
cmp
ret
iret
inc
out
pop
test
int3
test
cmpsb
out
jl
subb
gs
or
sbb
push
push
jne
and
jge
cltd
insl
ljmp
mov
jne
mov
and
mov
shlb
or
les
adc
arpl
sarl
sti
aam
stc
adc
shlb
test
jb
add
ja
gs
outsl
pop
shl
pushf
shlb
jmp
call
jge
mov
jl
stc
scas
shlb
nop
inc
fcmovbe
sahf
scas
stc
xchg
ret
push
dec
fcmovb
shll
and
mov
notb
lret
jae
mov
push
or
shlb
xchg
ds
cmp
loopne
movsl
enter
dec
adc
shlb
dec
mov
add
adc
and
cmpsl
push
fwait
mov
push
fwait
test
stos
pop
mov
lods
shrl
and
xadd
das
sbb
test
add
addb
add
aad
adc
add
add
or
jnp
add
fwait
adc
aaa
jmp
add
adc
add
add
jne
jl
call
push
pushf
pusha
lea
jmp
lods
push
call
push
imul
mov
jo
push
test
and
cmp
inc
test
mov
lock
push
testl
mov
mov
jle
aad
jg
jle
arpl
out
dec
cmp
jb
shlb
xor
call
jmp
mov
dec
pop
add
and
xor
inc
lret
nop
pop
or
xchg
imul
lcall
arpl
jl
inc
pop
jmp
pop
aad
and
and
xchg
mov
jnp
xchg
imul
push
test
lcall
cmp
lret
inc
das
icebp
push
insb
pop
gs
out
xchg
sahf
mov
jno
xchg
mov
mov
into
mov
xor
shlb
pop
jl
ret
pusha
data16
icebp
xchg
mov
repz
mov
and
lcall
pushl
call
lea
call
push
call
push
mov
bswap
push
lea
pusha
movl
push
pushl
popl
pushf
movw
pushl
pushl
ret
stc
test
cmp
sub
push
call
lea
jno
pusha
lea
call
jmp
ror
setp
xchg
btr
bswap
cmc
bt
mov
jmp
push
gs
push
movsl
out
shl
cmp
sti
test
adc
mov
mov
mov
inc
int3
mov
pop
jno
xchg
insb
or
inc
inc
sbb
and
or
testl
mov
shr
js
or
xchg
mov
mov
and
bt
cmc
cmc
xor
clc
or
call
or
cmpsl
mov
push
fcoms
adc
aad
push
dec
negl
push
adc
pop
cmpb
mov
ljmp
push
adc
inc
add
push
rol
icebp
addr16
or
push
inc
cltd
cmpsb
pop
sbb
jbe
pushf
pop
jno
shlb
inc
and
call
cmpl
xlat
insb
xor
xor
jmp
lock
bound
dec
push
pop
fisubs
fs
jle
inc
sub
ljmp
pop
shlb
lret
fwait
mov
movsl
push
out
sub
popa
hlt
jge
stos
dec
mov
aaa
movsb
gs
cmp
cmp
stos
fstpt
mov
sti
mov
shrl
dec
sbb
mov
mov
fldz
div
pop
and
and
jmp
cmpsb
mov
adc
dec
sbb
jno
and
mov
sbb
adcl
jmp
mov
adc
mov
rol
mov
btc
stc
test
mov
stc
pushf
pushl
sub
call
jge
lds
mov
xor
xor
outsb
sbb
ds
jmp
jp
xchg
js
xchg
aas
mov
lahf
or
icebp
cmp
sub
mov
outsb
out
daa
loope
scas
or
hlt
test
out
jae
mov
jle
adc
inc
rorb
cmp
mov
test
cmpsl
lods
push
fnclex
xchg
jnp
add
and
jae
in
ret
push
push
xchg
cwtl
fsin
testl
pop
stc
inc
inc
and
jg
int3
sbb
push
or
jmp
pushf
pushl
popl
movb
movb
pushl
ret
xor
jmp
stos
push
jg
jp
in
dec
dec
mov
pushf
push
movsb
in
dec
dec
sarl
or
scas
dec
inc
int3
mov
sub
ljmp
jae
mov
xchg
in
dec
dec
rcrb
push
jmp
dec
dec
sarl
sbb
scas
dec
dec
mov
mov
sahf
in
dec
dec
mov
or
add
scas
dec
dec
sarl
movsb
in
dec
dec
sar
mov
cltd
addr16
mov
in
mov
scas
dec
dec
jb
adc
mov
xor
out
dec
dec
mov
fld
stos
loopne
dec
dec
mov
jnp
in
xor
xor
scas
dec
dec
sarl
sbb
scas
dec
dec
rorl
sbb
scas
dec
dec
rcr
mov
loopne
dec
dec
mov
adc
std
ljmp
lea
scas
dec
dec
sarb
ljmp
sub
int
dec
dec
shll
jmp
dec
dec
rcrb
in
jp
jmp
dec
dec
mov
sub
dec
dec
sarl
xor
mov
push
push
sbb
sarb
repz
push
jmp
dec
dec
mov
out
pop
adc
scas
dec
dec
mov
out
adc
scas
dec
dec
mov
mov
in
dec
dec
rcr
inc
les
std
xchg
in
dec
dec
mov
mov
dec
dec
ror
out
pop
mov
add
scas
dec
dec
mov
int3
rcll
jmp
dec
dec
rcrb
aaa
cmp
popa
mov
scas
dec
dec
shll
sub
scas
dec
dec
mov
xchg
pop
daa
jmp
dec
dec
mov
push
inc
and
scas
dec
dec
shll
push
jmp
dec
dec
shll
movsl
in
dec
dec
mov
popa
xchg
push
jg
ljmp
mov
lret
cmp
and
mov
sbb
int3
imul
or
rcll
and
mov
out
jecxz
push
push
push
xor
sti
mov
int3
in
mov
outsl
repz
push
lret
pop
lret
mov
sub
cmpsl
fadd
pop
shlb
fimuls
push
cmpsl
xor
int
call
test
nop
cmp
or
xor
push
mov
pop
jo
ret
shrb
mov
fdivrl
xor
iret
popf
dec
leave
inc
inc
out
cli
addr16
outsl
insb
mov
mov
sub
jbe
mov
iret
ljmp
mov
pop
pop
mov
cs
repnz
lret
into
test
mov
popl
out
dec
mov
mov
lods
xchg
test
and
imul
sub
das
inc
imul
popf
je
nop
lea
mov
insb
cli
rcl
shrd
jno
stc
mov
pusha
stc
cmc
cmp
shl
push
push
push
pushf
lea
je
call
test
mov
cmp
mov
jmp
adc
pusha
push
movb
movb
lea
jmp
call
jmp
push
pushf
test
cmp
pusha
lea
ja
cmc
clc
stc
imul
pusha
call
inc
stc
bt
ror
call
movl
pushf
movb
push
pushf
lea
jmp
push
pusha
mov
push
lea
jmp
jmp
push
pushf
call
add
test
add
add
add
add
dec
push
add
add
add
add
add
push
add
push
add
add
add
add
add
dec
push
add
push
add
sbb
loop
lock
out
clc
and
push
push
cmp
sbbb
mov
decl
push
repz
xchg
inc
cmp
add
push
inc
aas
test
mov
shlb
in
cwtl
cmpb
call
adc
mov
jno
loopne
nop
roll
repz
mov
adc
sbbb
loope
arpl
outsb
outsb
ret
popa
mov
dec
add
loop
int
cltd
sbb
andl
lock
lock
gs
test
push
jg
loop
inc
cmpsl
dec
jge
incl
lods
jb
in
ljmp
mov
or
jecxz
std
pop
arpl
sahf
shlb
mov
shrl
or
lds
seta
pop
ja
test
dec
inc
sbb
jnp
mov
and
inc
clc
rcll
cltd
insl
unpcklps
and
inc
rol
and
pushf
sub
lret
std
in
xchg
add
ds
and
clc
rorl
jns
lret
loopne
cmpsl
out
sahf
loopne
push
mov
pushf
shlb
shrl
rol
mov
leave
add
add
push
xchg
mov
daa
pusha
mov
dec
shlb
bound
pusha
outsb
jb
aaa
ss
dec
jecxz
test
and
or
jmp
mov
pop
and
repz
sub
retw
push
or
addr16
xor
jp
popa
pop
or
in
das
or
loopne
movsb
out
loop
rorl
in
jle
mov
lock
fidivrs
lods
leave
lds
inc
leave
in
fstpt
data16
pop
mov
insb
out
pop
cmp
sbb
pusha
dec
fldt
mov
sbbb
add
imul
or
inc
push
pop
add
xchg
daa
cmc
mov
sahf
out
cmp
fstp
clc
rclb
lds
cmp
icebp
scas
inc
fwait
dec
xor
inc
pushf
and
sub
and
mov
or
subl
pushf
std
ljmp
mov
mov
push
fwait
lahf
pop
js
jmp
mov
in
popf
push
fiadds
imul
mov
cli
imul
mov
popa
cli
loope
shlb
shrb
icebp
push
ret
and
aam
decb
push
xchg
and
fidivl
pushl
ret
push
mov
mov
bound
jmp
outsb
adc
nop
lds
mov
cli
pop
cmpsb
data16
int
mov
ljmp
push
and
lods
or
test
mov
xchg
or
and
and
mov
push
incb
mov
xor
dec
pop
out
mov
lods
xchg
and
mov
imull
out
mov
out
lahf
insl
cli
adc
inc
rolb
inc
enter
testl
adc
dec
dec
jmp
inc
cmpsb
ja
sub
pop
xor
jb
in
dec
shlb
fisttpl
and
add
add
add
jmp
pushf
pushw
popfw
jmp
pusha
movl
jmp
push
dec
rorl
jns
jae
test
lods
jne
jae
jge
inc
push
bound
shrb
pop
fisttpll
pusha
fildll
fldl
adcb
sub
in
sub
shrb
aaa
cld
jge
push
xchg
pop
inc
lret
shlb
rcll
jecxz
cwtl
out
inc
cvttps2pi
push
das
sbb
jbe
adc
dec
daa
les
xchg
ljmp
shlb
xchg
mov
test
repnz
sub
push
je
mov
jmp
adcl
and
repnz
jo
popf
ds
and
loopne
cwtl
xor
cmp
andl
aad
cmpsb
aad
and
aam
call
jge
add
and
cmpb
clc
mov
adc
subl
and
pushl
adc
mov
sbb
sub
js
xchg
cmp
stos
or
xchg
dec
push
inc
add
lret
stc
lods
pop
xor
iret
xor
xchg
mov
sbb
stc
cmc
jle
inc
jle
dec
push
lea
mov
dec
pop
mov
mov
sub
popa
push
out
inc
push
imul
cmp
push
and
and
dec
in
dec
in
push
incb
je
scas
pop
in
add
and
xor
jg
adc
pop
cld
add
mov
and
ffree
and
mov
dec
in
xchg
mov
sub
shlb
pop
add
rolb
push
testl
jb
shlb
stos
push
push
decl
mov
xchg
mov
shrl
and
sar
call
pop
std
std
mov
xchg
data16
mov
ret
jno
xchg
or
int3
jg
cs
cltd
adc
push
ss
push
sub
jge
sbb
popa
call
imul
pop
int3
add
jmp
cltd
push
pop
test
scas
dec
add
test
jp
in
xchg
push
mov
inc
aad
adc
add
enter
add
jmp
sbb
dec
add
ja
mov
mov
ljmp
cmp
lods
lea
pusha
shlb
add
mov
arpl
cmp
pushf
sub
and
fs
jb
clc
push
pusha
cmp
call
lea
je
cmp
clc
clc
pushf
add
bt
stc
pushf
bt
cmp
pushf
pusha
push
mov
lea
jmp
jae
xor
insb
mov
out
test
jae
cltd
lretw
insb
adc
xor
xchg
xadd
cmp
pop
subl
pop
xchg
mov
test
std
test
cmp
in
movsb
negl
enter
sbb
dec
jecxz
je
xlat
inc
lret
mov
jns
jnp
adc
mov
inc
or
xchg
scas
loope
xchg
loop
mov
dec
cltd
fidivrl
shlb
mov
jb
bt
pusha
cmp
movb
call
inc
push
shr
push
lea
je
pushf
pusha
adc
pusha
lea
jmp
xchg
lcall
in
cltd
inc
mov
fistps
popf
cs
pop
test
test
rcrb
pop
push
xchg
stos
fs
push
clc
push
jno
jnp
cmc
xchg
addl
or
add
stc
sub
int
or
cmpsb
lahf
enter
push
out
ret
inc
and
lcall
int3
std
lcall
clc
push
stc
mov
fstpt
imul
popf
inc
flds
subl
push
adc
out
insl
mov
push
movsb
cmp
fstpl
push
sbb
mov
pop
ljmp
inc
test
adc
movsb
mov
arpl
hlt
fimull
shlb
insl
jnp
sbb
mov
pop
icebp
enter
js
out
testl
add
adc
shlb
jne
dec
jle
rolb
fists
fists
push
loop
jae
adc
test
jge
push
out
jl
sahf
and
inc
out
mov
add
imul
jecxz
test
jo
xor
inc
rcrb
int
insb
mov
inc
pop
mov
sub
mov
sahf
loop
cmpl
icebp
xchg
pushf
xor
sti
xorl
push
sbb
add
lods
xor
jo
into
cmp
icebp
jge
pop
cmp
daa
xchg
and
icebp
add
gs
movsb
sub
aas
fadd
push
fcomi
pop
adc
repnz
cmpsl
loope
push
add
cwtl
dec
cltd
mov
mov
repz
in
inc
shlb
push
andb
shlb
clc
shlb
xor
mov
adc
sbb
add
shlb
mov
rclb
cmp
fildll
stos
sarl
xor
jle
and
lea
jno
cmpsb
call
mov
mov
lea
rorl
icebp
push
mov
mov
shll
test
or
or
jae
daa
lods
sarb
xchg
ret
imulb
mov
xchg
pop
sahf
cmpsb
inc
inc
in
insl
stos
sbb
inc
xor
imul
orl
ficompl
pop
gs
in
shlb
sbb
mov
aaa
aaa
mov
xor
mov
leave
ret
cltd
shlb
pusha
and
xchg
mov
aam
cmc
cmp
push
lea
ja
bt
imul
push
jmp
dec
push
xlat
inc
aam
jecxz
daa
xchg
push
imul
aam
es
add
jae
push
stos
hlt
mov
lcall
add
in
pop
adc
xchg
jbe
mov
mov
mov
hlt
push
gs
push
int3
jge
lret
aam
cld
lods
shlb
xchg
jns
int
jae
jo
pop
clc
mov
aaa
pop
jbe
cld
inc
push
mov
loope
call
stc
cmp
pusha
lea
ja
pusha
pushf
lea
ja
dec
inc
inc
setne
dec
not
inc
sbb
xchg
test
mov
jmp
inc
jmp
pushf
jmp
jo
push
adc
mov
scas
dec
adc
repz
mov
ljmp
in
fs
mov
mov
sbbl
add
mov
sbb
jmp
and
cmp
push
mov
mov
xchg
fadds
and
jecxz
bound
pushl
lea
not
movzwl
pop
pushf
mov
not
lea
not
push
mov
mov
pushf
mov
lea
call
push
jmp
clc
ror
call
test
mov
inc
hlt
or
negb
mov
aad
add
push
lcall
mov
adc
test
mov
clc
pop
repz
jns
adc
fisubl
jmp
testb
stos
insb
cmp
mov
jmp
in
and
mov
dec
cmp
inc
mov
sbb
das
sub
hlt
inc
sub
cmp
mov
sbb
xchg
inc
xlat
das
xor
push
dec
mov
bound
dec
popf
jp
shlb
and
mov
lcall
cmpsl
mov
call
rcrl
xchg
mov
cmp
sbb
jp
mov
push
in
sbb
sbb
out
insl
pop
fwait
adc
das
add
xchg
js
rcr
inc
jno
cmpsl
or
and
loopne
cltd
mov
pushf
pushl
ret
mov
setnp
or
bsf
call
mov
cmpsl
mov
push
dec
mov
pop
test
and
clc
cltd
mov
ljmp
mov
cmc
mov
mov
leave
push
or
pop
and
rcl
fucomi
add
xchg
add
shl
fcoml
lds
and
jae
icebp
or
and
push
dec
pop
lods
lock
shrb
cli
jl
gs
adc
add
xchg
push
ds
pop
sahf
leave
mov
push
add
jb
add
and
inc
jmp
es
push
shlb
dec
insb
ud2
movsl
jbe
xchg
mov
jecxz
add
insb
iret
roll
cltd
inc
mov
fucomip
lods
xchg
cli
shrl
leave
pop
pop
std
stos
xchg
sahf
clc
pop
fldt
stos
mov
jnp
adc
repnz
stos
dec
outsb
in
jns
fs
lret
inc
dec
aad
inc
outsb
inc
inc
out
push
das
fimuls
call
enter
adc
adc
shll
pusha
mov
scas
addb
pop
daa
push
fisubl
out
push
test
mov
jmp
pop
xor
pop
mov
jnp
dec
and
cmc
js
xchg
nop
daa
inc
mov
mov
mov
lret
out
sub
pop
lret
into
xchg
rcrb
jno
push
cwtl
sbb
addr16
arpl
sbb
call
pusha
mov
dec
cmp
pushf
jmp
mov
cmc
pusha
pushf
sar
mov
push
test
call
icebp
mov
lds
jecxz
and
scas
and
mov
stc
repnz
in
popf
pop
cmp
in
lret
scas
inc
rcrb
js
dec
mov
xchg
lret
xchg
outsl
and
test
mov
cmp
aad
push
pusha
shrb
lea
pop
sbb
cmp
mov
aam
aam
das
mov
hlt
or
je
xor
mov
dec
jb
mov
dec
jbe
shlb
inc
and
jmp
jl
sub
popa
pop
cltd
insl
ficomps
into
dec
les
mov
mov
and
outsl
out
mov
mov
sbb
cmpsl
dec
imul
sbbl
jne
mov
mov
jo
jle
inc
lret
enter
and
icebp
aaa
xor
push
fs
push
lcall
scas
in
sbb
xchg
call
sbb
sbb
test
insl
or
sbb
das
xor
repnz
push
cmp
adc
dec
push
pop
ret
shlb
add
imul
bt
call
shl
push
xor
movzbw
mov
add
push
not
pusha
xchg
push
or
mov
or
mov
movzbw
mov
rcl
mov
movsbw
dec
mov
bswap
add
mov
clc
xor
push
lea
mov
xor
stc
movzbw
mov
pushf
cmc
clc
mov
or
mov
pusha
jmp
pushf
movl
mov
movl
push
mov
pushf
lea
jmp
cmpb
pusha
call
pop
bswap
jmp
push
jns
pusha
mov
movl
mov
pushf
mov
pushf
lea
jmp
movzbl
movsbw
lea
jmp
movl
call
jmp
jmp
movl
movb
movl
push
push
lea
jmp
pushf
pushf
push
movl
jmp
call
enter
jno
or
mov
arpl
imul
dec
das
mov
in
add
stos
mov
sub
adcl
out
sub
add
inc
and
cld
shlb
sub
or
pop
cmpsb
movsl
lea
jne
cwtl
lahf
mov
pusha
push
pushf
lea
jmp
sub
pop
mov
inc
adc
outsb
sti
test
outsl
or
gs
ja
scas
fwait
add
mov
inc
pop
dec
int3
int3
add
mov
jge
cmp
dec
sub
jnp
loope
out
insl
mov
cmp
and
rorb
jmp
ljmp
inc
scas
mov
cltd
cmp
mov
in
iret
mov
fwait
sub
sub
mov
cmp
outsb
mov
cmp
and
jge
push
subb
adc
shlb
jle
out
leave
cmp
addl
int
shlb
shl
fs
fmulp
sbbl
sub
lods
sbb
ds
push
sub
insl
jbe
repnz
in
push
dec
adc
push
xor
ret
jnp
adc
xchg
dec
or
repz
push
movsb
in
loop
xor
and
shlb
test
ljmp
leave
ret
gs
cmp
push
lea
jbe
shr
mov
movzbl
setno
add
xadd
cmc
shl
mov
call
call
movb
jmp
pusha
movl
jmp
stc
call
add
clc
clc
bt
clc
cmp
push
mov
jmp
jmp
lock
mov
stos
and
fidivs
lods
lea
and
lcall
mov
call
sub
push
fldt
rcl
fildl
jno
ljmp
and
clc
lcall
mov
pop
int3
cli
xchg
nop
jo
leave
rclb
mov
add
in
mov
dec
mov
and
testb
aas
shlb
testl
lret
push
cmp
add
pop
popf
cli
shlb
loope,pn
jo
fmul
sub
int3
push
jmp
imul
push
in
rol
sahf
outsb
mov
nop
sbbl
inc
cmp
add
std
lcall
push
pop
sbb
inc
jnp
mov
pop
xor
rorl
dec
xchg
sbb
enter
add
inc
rclb
clc
inc
push
jno
ret
notb
test
add
cs
in
adc
push
sbb
clc
mov
lods
adc
or
push
add
adc
jl
pop
clc
sar
cltd
in
insb
and
xor
shlb
xorps
call
dec
xchg
enter
movsb
jmp
rcll
adc
stos
inc
adc
test
add
cmpsl
pop
jp
add
dec
sbb
sbb
out
add
cmpsl
outsb
or
add
xlat
int3
loope
dec
adc
and
sbb
out
out
xchg
adc
dec
negl
mov
and
mov
jbe
xor
push
pushf
pushl
ret
rcr
pop
stc
jp
jmp
dec
pop
mov
lock
idivb
inc
sub
cld
js
in
cltd
and
imul
mov
jo
inc
mov
adc
incl
outsl
sbb
sbb
arpl
lea
add
lahf
lahf
addr16
daa
lret
shl
jns
mov
sahf
sbb
mov
inc
aaa
mov
jg
push
pusha
lea
je
bt
test
cmp
pushf
movb
pusha
pusha
pushl
ret
loope
jge
sahf
loop
pop
mov
cmpsl
xor
mov
sbb
bound
mov
pop
pop
inc
xchg
sub
add
pusha
sbb
push
inc
cli
dec
je
xchg
sub
pop
xor
xchg
das
pop
push
insb
cmp
out
xor
push
pop
in
push
mov
push
rolb
push
jno
jle
cmpsb
paddusw
mov
and
stc
or
fbstp
dec
dec
adc
add
jnp
rcrl
or
popf
shlb
mov
mov
pushl
cmp
mov
push
out
mov
inc
fadds
or
fwait
push
in
into
cmp
add
mov
imul
mov
popf
mov
jae
dec
sbb
jns
lcall
inc
scas
int3
push
in
aas
pop
or
push
jmp
cmp
test
inc
cmpsl
jae
adc
outsl
bound
cmp
pop
mov
test
inc
jnp
out
cld
fwait
or
lret
repz
shlb
dec
nop
pop
dec
xlat
das
sub
call
scas
mov
sub
mov
inc
shlb
out
aas
pop
nop
in
push
and
fcmove
les
xchg
jbe
cwtl
cmp
inc
inc
dec
imul
inc
bound
pop
lods
nop
xor
out
sub
add
pop
fidivl
sub
aaa
sub
sbb
mov
mov
jns
xor
xchg
lahf
add
jl
aaa
movsb
mov
insb
aad
cmpsb
ficoms
scas
sahf
sti
jg
sub
push
cmp
cmp
ret
xor
sbb
lcall
add
jb
adc
fbstp
sbb
mov
jg
es
nop
das
adc
imul
or
fcmovu
inc
cmp
and
arpl
xor
lds
enter
add
pop
xchg
sub
jg
sbb
and
xorps
push
or
ss
dec
shlb
out
repz
nop
lds
bound
outsb
inc
adc
cmc
add
jle
mov
mov
push
gs
imul
sbb
lods
imul
xchg
add
test
jbe
call
dec
hlt
shlb
inc
inc
in
movsb
dec
lds
cmc
call
xchg
in
jb
rclb
and
xlat
xchg
pushf
call
jmp
test
xor
imul
stc
cmpsb
pop
in
jne
cmpl
ss
push
push
adc
mov
dec
aaa
xchg
leave
xor
scas
les
int3
jns
mov
lods
aad
push
imul
shll
inc
insb
insl
xchg
out
xor
shlb
inc
and
inc
jnp
xchg
or
mov
dec
or
and
lods
pop
dec
push
or
push
jae
sahf
dec
mov
cmpsl
push
mov
and
xor
lcall
scas
daa
insb
mov
sti
push
in
imul
pop
in
shlb
cmp
sub
sub
rcr
inc
bt
add
inc
not
ror
jmp
movl
movl
lea
jmp
push
movl
call
mov
xchg
adc
mov
leave
jp
rclb
outsl
or
jmp
int
ret
inc
pop
xlat
and
lock
enter
cmp
lcall
imul
lret
inc
jbe
jnp
out
or
sahf
and
das
pop
mov
dec
loope
ja
test
pop
or
fs
outsl
lret
or
sub
fiaddl
xchg
ret
out
aad
js
sbb
mov
out
sbb
mov
or
addb
ljmp
add
cltd
push
lahf
js
out
sbb
xchg
cmpsb
daa
pop
shlb
push
imul
xchg
in
lahf
sarl
pop
dec
arpl
xchg
movb
or
leave
pusha
lea
call
jmp
xchg
push
pushf
pushf
movl
pushf
pushf
mov
pusha
movl
pushf
push
lea
jmp
call
sub
jmp
inc
movzbl
push
pusha
shl
bt
mov
lea
setp
cmc
clc
sub
aas
rcl
lahf
push
push
mov
bts
pusha
dec
btc
mov
add
cmc
btr
mov
btr
aad
shld
mov
test
cmp
clc
movl
test
jmp
call
call
jecxz
pop
jnp
lret
mov
fists
cmp
scas
mov
xadd
mov
adc
mov
xadd
pop
inc
xchg
push
mov
adc
xchg
mov
in
enter
adcb
inc
nop
jno
and
and
lock
dec
fidivrs
stos
je
jne
adc
add
imulb
fidivs
repnz
test
dec
xchg
jmp
or
into
scas
sbb
popf
shlw
push
sub
js
xchg
insb
add
jb
xchg
mov
or
incl
mov
mov
push
xor
lcall
or
mov
scas
sbb
adc
cli
inc
lods
jns
in
imul
inc
aad
lds
inc
subb
pop
fiadds
stc
in
lock
outsb
xorl
aad
push
push
xchg
shll
pusha
mov
call
cmp
and
inc
push
insl
cmc
cmpsb
push
ficompl
leave
cmp
add
cmp
mov
mov
mov
nop
pop
inc
sub
das
mov
xor
out
and
adc
shrl
sbb
jnp
xor
xchg
mov
imul
jmp
ficoms
call
bnd
push
lcall
in
or
data16
shrb
repnz
pop
aad
movzwl
or
sub
test
ds
lea
or
not
addr16
dec
sub
dec
fcmovb
xor
xor
jmp
mov
adcb
pop
sbb
loop
jne
mov
ret
repnz
ret
jo
jmp
jne
push
mov
mov
pop
outsl
push
add
iret
rclb
lds
repz
aad
mov
jb
les
or
lea
ljmp
xor
outsb
xchg
mov
imul
inc
xor
push
outsb
pushf
jmp
mov
cltd
dec
scas
ds
jp
andb
sbb
lahf
insb
stc
mov
pop
in
mov
jp
loope
fnstsw
arpl
pop
int3
adc
dec
jo
mov
cli
data16
imul
test
or
mov
jmp
fiadds
cs
rcrl
out
lock
dec
ds
bound
pushf
mov
arpl
mov
mov
repnz
out
je
jge
in
jmp
in
jmp
mov
pop
fcoms
inc
test
daa
xor
ss
cmp
dec
test
sti
xorl
mov
jb
push
mov
mov
std
or
bt
jmp
call
jmp
out
in
inc
lret
jl
jbe
test
add
popf
lahf
fsub
push
mov
ds
mov
in
outsb
into
inc
cmc
cltd
mov
addr16
add
rorb
test
dec
xlat
jo
jnp
inc
xchg
mov
pop
icebp
jp
inc
cmp
or
test
sub
fldl
adc
mov
lods
and
and
push
jmp
inc
je
mov
pushf
lea
bswap
lea
movzwl
not
lea
call
jbe
insb
add
adc
mov
mov
sbb
lods
pushf
popf
xchg
shlb
push
mov
ror
xlat
das
and
in
mov
xchg
stos
fistps
shlb
sub
loop
mov
mov
mov
jnp
cld
jnp
mov
mov
jg
mov
jg
mov
cmp
mov
jp
pusha
jge
pushl
mov
jle
cmp
cmp
mov
sti
mov
mov
rcl
data16
pop
or
dec
or
xor
cmp
repnz
inc
xchg
mov
mov
xor
dec
aad
notb
or
mov
icebp
mov
pop
xchg
into
out
mov
adc
call
lds
jecxz
shlb
mov
mov
cs
and
gs
cmpsl
hlt
rcrl
fsubs
mov
sti
mov
or
pop
mov
movsl
push
mov
test
ss
fs
lcall
mov
test
jb
add
icebp
jb
add
dec
inc
cmp
xorl
in
push
lahf
mov
fsubl
and
xchg
fstpl
push
shl
cmc
or
mov
mov
xchg
leave
ror
shlb
xchg
data16
xlat
das
and
mov
cmp
rcrl
icebp
push
push
loope
and
inc
enter
add
add
pop
jne
pusha
pusha
jmp
pushf
jmp
movl
lea
ja
pusha
lea
jb
clc
cmp
call
cs
sub
insb
icebp
xchg
or
sbb
dec
nop
addr16
fcmovne
cmp
jae
cltd
shll
jle
adc
fcmovne
cmp
enter
js
bound
outsl
cmp
les
fs
mov
push
shlb
shlb
mov
push
bt
rol
movb
call
sbb
movsl
and
daa
xchg
outsl
rclb
ret
loope
mov
or
mov
int
mov
ja
out
and
adc
mov
inc
cli
in
ljmp
push
cmc
stos
push
xorb
scas
mov
and
add
push
movl
pushf
movl
pushf
lea
jmp
xchg
int
out
push
cmp
sbb
in
push
stos
jo
jle
test
es
pop
andb
xor
loope
nop
cmpl
push
lahf
xor
pop
sarb
adc
fsubs
enter
add
pop
mov
daa
mov
es
insl
imull
out
insb
dec
iret
lds
mov
inc
xchg
and
arpl
mov
push
pushf
jge
sti
hlt
loope
ja
and
cmpsl
cld
lods
sub
add
outsb
test
test
sub
jno
cmp
sbb
ds
call
call
push
adc
or
les
test
jno
cmp
mov
cmovne
stos
stos
pop
add
cmc
xor
inc
fiaddl
aas
inc
mov
and
mov
push
xchg
test
push
lahf
xchg
aas
outsl
and
out
repz
and
inc
or
mov
add
jecxz
lea
jmp
insl
loopne
or
mov
or
mov
xor
cmp
push
jbe
stc
call
loope
mov
insl
mov
push
inc
push
pop
lds
pop
xor
cmpsb
dec
mov
push
mov
inc
icebp
lds
adc
fdivrl
lds
pop
std
ret
pop
or
test
mov
lcall
andb
jno
mov
hlt
ficoms
jmp
dec
xor
mov
xchg
and
xchg
xchg
test
inc
inc
jnp
ficomps
fnsave
mov
add
sub
mov
pop
pop
out
pop
add
lret
shl
clc
shlb
jno
cmpsb
scas
int3
shlb
aad
add
cmpl
add
dec
inc
xchg
loop
add
and
out
fwait
jae
adc
add
cld
popf
sbb
mov
shlb
pop
and
pusha
stos
dec
loopne
addr16
out
hlt
fld
and
rcr
testb
xor
cltd
add
pop
xchg
mov
xchg
jg
or
and
out
xchg
inc
dec
mov
mov
hlt
std
push
dec
add
mov
add
es
mov
jp
imul
jl
xchg
sahf
xor
mov
xlat
inc
fwait
jle
or
mov
push
fldcw
sub
mov
inc
iret
outsl
test
repnz
or
shlb
lods
cmpsl
sahf
fwait
xlat
das
pop
push
inc
add
in
jo
sarl
add
push
fcmovnb
and
dec
mov
add
inc
and
insl
mov
lea
jmp
jmp
popf
rdtsc
nop
call
cwtd
dec
out
arpl
lock
xchg
dec
cwtl
xor
cmpb
and
adc
lret
test
fistpll
mov
cmp
icebp
push
inc
loope
dec
mov
xchg
icebp
cmp
ljmp
or
jecxz
adc
movsb
xor
sbb
mov
inc
leave
xchg
dec
sti
mov
pop
jecxz
push
xchg
dec
jecxz
pop
notl
out
pop
mov
jbe
je
adc
xchg
out
test
cli
ret
sbb
and
pusha
hlt
shrl
fistpll
into
pop
imul
fdivs
outsb
addr16
es
movsbl
lahf
lea
jmp
pusha
pushf
lea
jne
mov
mov
stc
bt
cmp
jge
or
pushf
call
int3
idivl
jecxz
pop
fwait
popa
stc
lcall
in
mov
stos
or
pop
ljmp
sbb
rcr
pop
leave
call
fdivrs
adc
push
clc
lea
repz
jbe
mov
pop
lock
jg
mov
cmp
sarl
jbe
add
popa
dec
pop
mov
test
out
je
push
adcb
imul
and
inc
iret
lcall
and
cli
pop
sbb
add
sbb
push
shl
push
pushf
push
pushf
lea
jne
cmc
and
and
dec
mov
or
add
sub
pushf
shl
lea
lea
call
sbb
in
or
out
sbb
ja
jno
iret
adc
dec
mov
xor
jl
sbb
fs
mov
stc
jl
push
jns
sub
push
pop
push
shll
mov
inc
xchg
lods
push
pop
les
hlt
or
xchg
dec
xchg
fucom
dec
stc
xchg
cmp
rorb
xchg
gs
mov
fidivrs
push
inc
cmp
push
push
sub
nop
in
mov
xchg
dec
js
push
mov
shlb
xlat
mov
js
repz
xchg
adc
and
mov
in
mov
mov
jg
in
xchg
test
daa
pusha
rcl
out
or
out
and
mov
or
mov
mov
xor
test
sub
lods
shlb
jl
or
pop
pop
add
xor
push
pushl
ret
pushl
popl
pushl
mov
pushl
ret
mov
scas
xor
lcall
cmp
jge
subl
fs
inc
loope
mov
xchg
mov
jno
sub
mov
mov
xor
cmpsl
push
mov
test
pop
push
sub
xchg
mov
xor
and
mov
mov
sarb
sbb
mov
and
mov
popa
jl
mov
pop
push
fwait
inc
ds
push
sarb
inc
sbb
dec
testl
addr16
jns
stc
or
arpl
lahf
xor
repz
pushf
mov
add
jbe
xlat
das
sbb
or
xor
mov
xchg
scas
and
and
add
jmp
in
call
add
cmp
movb
call
cli
jmp
mov
gs
inc
adc
imul
push
mov
lret
cwtl
popf
gs
push
ljmp
test
push
mov
push
insl
test
adc
out
gs
cmp
jl
sti
mov
pop
sub
adc
mov
and
jl
sub
pop
mov
cmpsb
adc
sarb
mov
icebp
xchg
and
adc
push
or
subl
mov
push
jne
inc
dec
shl
sub
mov
stos
mov
mov
cmp
mov
gs
sub
cli
ret
enter
rcrb
cltd
jbe
imul
lret
mov
rcll
popa
int
int3
inc
xor
and
xchg
fsub
frstor
pop
enter
xor
add
xchg
je
outsl
fsubrl
pushf
sub
mov
mov
dec
std
es
lds
insb
dec
or
mov
sbb
jno
rcrb
gs
mov
or
das
sbb
mov
or
fdiv
push
daa
insb
push
xchg
mov
clc
test
mov
mov
movl
movb
call
jmp
dec
bt
cmp
jmp
cmc
test
xchg
adc
mov
clc
test
bt
stc
sub
call
pushf
lea
jne
pushf
mov
movb
pusha
lea
jmp
pusha
lea
je
test
sub
jmp
pushf
lea
call
call
push
lea
jne
call
lea
jbe
push
mov
jmp
pushfw
popw
dec
not
mov
mov
inc
jmp
jmp
lea
jne
bts
add
bts
neg
mov
rcl
sub
movzbw
shl
rol
shrd
mov
push
clc
mov
sub
stc
pushl
popl
call
cmp
lea
jno
popfw
jmp
test
add
jmp
add
add
add
add
xchg
adc
add
add
or
jnp
add
fwait
adc
aaa
jmp
add
adc
add
add
pushf
lea
jb
pusha
movl
pushl
ret
lea
jne
bsf
stc
mov
mov
pusha
pushf
add
pusha
pushf
push
test
movzwl
lea
sub
lea
mov
bt
add
pushl
stc
mov
clc
movl
test
mov
call
pusha
lea
jae
pushf
lea
jmp
imul
gs
xor
cs
insb
add
rolb
add
mov
jle
dec
aad
stos
sub
dec
idivl
rcrb
and
fs
leave
mov
lret
js
mov
jp
lods
pop
lea
mov
orl
push
hlt
imul
rorw
sbb
mov
cmc
sub
lods
push
movsl
andl
inc
das
repz
inc
pusha
push
dec
rcll
scas
or
xchg
xchg
lahf
movsb
push
inc
dec
pop
rcrb
adc
mov
inc
inc
shl
jns
mov
cmp
ret
sti
test
movb
adc
movb
push
lea
jae
jmp
pushf
pusha
mov
pushf
lea
jmp
mov
btr
cmc
movzbw
bsf
add
and
btr
shr
btc
movsbw
xadd
or
mov
add
bts
call
dec
push
jecxz
sbb
mov
or
push
mov
fisubs
mov
loope
or
nop
push
negl
out
xchg
lods
movsb
mov
push
or
fistpll
sub
jecxz
mov
and
and
pushf
aad
jmp
jne
jg
icebp
rcrb
aaa
das
imul
mov
stc
jmp
add
ret
mov
pushl
pushf
jmp
call
lahf
jmp
stos
rolb
je
push
data16
xor
dec
paddusb
mov
inc
int
int
xchg
je
mov
ret
lea
out
sti
cmp
idivb
inc
jno
pop
rcll
test
test
std
pop
jae
into
pop
push
popa
mov
sbb
out
jno
lods
sub
xor
jne
imulb
ror
iret
mov
rol
in
arpl
xchg
rcrb
pop
pop
sub
mov
xchg
mov
adc
out
rcrb
enter
shrb
cmc
cmp
jmp
cmp
mov
jmp
lea
je
pusha
call
sub
xchg
and
cmpsl
mov
dec
mov
cmp
inc
roll
and
dec
fdivrs
movsb
test
push
adc
addr16
aad
inc
add
enter
mov
or
xchg
movsb
leave
push
pop
dec
dec
rol
pop
stc
push
cltd
push
movb
call
mov
pusha
movl
call
pushf
lods
jmp
jle
push
pusha
lods
pushf
call
test
pushf
or
pushf
lea
je
setp
pusha
movsbw
mov
pop
pushf
pop
lea
pushf
push
push
mov
xchg
lea
jmp
push
call
mov
jecxz
cmp
daa
out
imul
jl
mov
xor
sub
test
push
xchg
js
rol
push
xchg
mov
sti
lahf
mov
add
fildll
cli
decl
gs
test
int
and
imul
add
cmp
jne
mov
pop
clc
pop
mov
imul
mov
ret
mov
mov
ljmp
jmp
lea
je
rcl
bsr
bswap
add
push
bswap
mov
cmp
jmp
movl
pusha
pushf
push
movb
lea
jmp
mov
cmpsb
pop
jno
mov
cmp
xchg
xor
xorl
and
out
adc
jmp
test
bound
xor
xlat
lock
into
rcrb
pop
or
call
stc
cmp
pusha
call
pushf
pushl
mov
lea
pushf
call
pushf
jmp
inc
sbb
and
fiadds
out
sbb
lock
in
fwait
pop
jnp
push
daa
and
xchg
fcompl
out
push
daa
and
mov
mov
fists
mov
fcomps
cmpsl
test
cmp
out
fsubrs
push
clc
loopne
insl
mov
outsb
xor
pop
loope
sub
test
stc
insl
jl
pusha
pushf
push
movl
mov
pushf
push
push
movl
pushf
pushl
lea
jmp
jmp
add
adcb
adcb
adcb
push
pop
add
dec
pop
add
add
add
add
shrl
jge
mov
cld
add
xor
jbe
dec
dec
dec
cmp
popa
movsb
cmp
iret
lock
jge
fsubl
dec
xor
cltd
out
push
stos
and
cmp
ss
and
loope
ret
jne
xor
push
xor
cld
out
mov
sti
pop
cltd
sbb
insl
and
icebp
andb
mov
xchg
das
fs
mov
pop
movsb
jb
ret
mov
dec
rcrb
cmpsl
ss
adc
xchg
sbb
ja
xorl
mov
call
test
test
push
cli
fidivrl
cld
lea
insb
or
and
dec
inc
imul
imul
in
mov
mov
stos
xor
push
es
sub
arpl
mov
dec
fldt
sbb
push
fisttpl
je
jbe
ljmp
cmp
data16
lahf
scas
daa
out
mov
mov
or
cmc
lods
arpl
pusha
mov
call
out
aad
cmp
int3
xor
jns
xchg
inc
shrl
mov
out
imul
movaps
daa
and
adc
xchg
out
sub
rcl
lahf
inc
push
mov
hlt
test
out
imul
adcb
icebp
mov
movsl
add
xlat
jge
sub
pop
iret
push
fs
mov
out
in
cmp
rcrl
mulb
test
lret
fbstp
cmp
cmpsl
test
cli
fildll
cmc
mov
lds
pushf
inc
adc
popa
fisubs
in
mov
mov
imul
dec
cmpsb
iret
lret
push
ret
adc
cmp
out
and
int3
sbb
stos
adc
mov
fsubr
imul
adc
jecxz
cmp
rcrb
lahf
pop
push
mov
test
jp
cmpsb
cli
test
and
rcrb
mov
adc
bnd
sbbb
dec
stc
push
inc
loop
rcrb
cmpsl
push
inc
inc
sub
mov
xchg
popa
cmp
rcrb
mov
aad
adc
xor
mov
xlat
and
inc
push
rcrb
mov
or
fdivs
cs
or
in
arpl
daa
and
push
imul
hlt
mov
and
cld
cmc
add
test
movw
mov
cmc
test
jmp
test
call
cmc
pusha
loope
out
int3
jecxz
cmp
dec
or
scas
psubsb
rcll
jno
sub
jp
mov
rcll
inc
jo
dec
loopne
push
fisttps
xchg
jbe
inc
sub
int
xchg
or
pop
lods
notl
shlb
inc
cltd
dec
mov
movsl
xchg
push
sbb
div
inc
sub
xchg
cmc
rcrb
movsb
pop
sbb
xlat
das
cvtpi2ps
in
inc
std
push
ljmp
jle
jl
rcrb
pop
dec
push
lea
ja
not
inc
push
inc
clc
xchg
rcr
stc
mov
cmc
jmp
bt
cmp
jmp
jmp
lea
ja
cmc
mov
pushf
sub
shrd
lea
add
sbb
shld
btr
mov
shr
mov
cmc
bt
repnz
jmp
add
and
movl
bswap
stc
sub
mov
add
test
call
into
stc
mov
cmpsl
mov
sub
mov
mov
loop
cld
daa
xor
cmpsl
mov
daa
dec
cmp
jbe
push
jae
cmpsl
mov
jo
imul
jle
loope
pop
dec
into
lcall
and
dec
iret
push
mov
and
or
pop
aam
orb
xor
cmc
scas
pop
lcall
xchg
mov
pop
push
out
add
jl
in
dec
jl
push
mov
int
pop
dec
aad
pop
repnz
pushf
ds
cmp
and
jmp
shrd
shr
mov
add
sbb
lahf
shl
sub
neg
push
pushf
add
pusha
mov
rcl
shl
bswap
mov
sbb
lahf
xor
pop
lea
pushf
pushf
mov
call
lea
call
jmp
shr
call
je
cmc
add
pushf
pusha
lea
jmp
pusha
pushf
movl
pushf
movl
push
pusha
pushl
movb
lea
jmp
xchg
rclb
pop
cmpsl
mov
adc
jmp
sub
cs
xor
sbb
jb
push
or
cli
push
inc
mov
pop
push
pop
cmp
push
or
add
mov
jns
add
mov
push
mov
mov
and
push
sub
pop
icebp
cld
push
pushf
pusha
push
movl
jmp
pop
pushf
push
pusha
mov
call
into
lds
and
add
je
mov
adc
outsl
inc
mov
test
leave
sahf
mov
adc
shrl
cmc
cli
popa
xchg
push
outsb
ficompl
popl
mov
add
lock
xchg
mov
aam
nop
pop
jmp
mov
cmpl
cmp
push
ja
xor
mov
loop
pop
add
icebp
add
in
das
or
lods
aaa
lea
add
movb
lods
rcrb
jnp
out
lds
and
lcall
mov
pop
push
or
xchg
repnz
loope
mov
push
pop
push
out
mov
in
mov
loopne
jmp
mov
neg
jo
xor
sarb
push
mov
rcrb
pavgb
lret
pop
ret
mov
roll
fidivrl
aaa
sub
add
cmpl
je
test
lods
cmp
mov
bound
mov
loope
adc
in
mov
sbb
pop
sub
jmp
adcl
lret
ret
outsb
xchg
add
out
mov
jecxz
ja
scas
mov
sbb
or
inc
or
mov
fs
repz
loope
push
sub
dec
addb
push
inc
inc
xchg
dec
stos
add
xchg
and
ja
jo
lahf
sub
pop
pop
cmp
popf
aam
daa
inc
lret
mov
outsb
cmp
loope
xchg
cmp
cld
mov
sub
add
cltd
cs
lods
rorl
dec
or
aam
stc
push
fwait
mov
lock
clc
popa
das
dec
mov
cmp
adc
cmp
cmpsb
repz
xchg
adc
cld
jae
ret
mov
inc
scas
jl
cmp
ret
mov
or
test
fcoml
seto
pause
out
jl
cmpsl
out
mov
cmp
cmp
push
lret
sbb
mov
or
mov
dec
jne
mov
js
ret
rcrb
sarb
sarl
ds
xor
and
loop
call
pop
cli
xchg
fwait
cmp
rorb
ja
jecxz
test
inc
mov
adc
cs
jb
jl
mov
mov
push
adc
rcrb
jbe
adc
test
pop
push
fwait
loopne
or
sbb
dec
popf
stos
popa
sub
xchg
inc
cld
bound
nop
scas
hlt
rcrb
dec
xchg
es
xlat
das
or
aad
int3
mov
addb
rorb
sbb
rcrb
push
mov
and
call
jmp
loopne
mov
xchg
test
push
filds
cmp
imul
scas
mov
mov
push
es
or
jle
jl
add
push
mov
rclb
insb
xchg
or
cmpsl
mov
pop
or
push
out
xchg
inc
mov
sahf
hlt
add
lods
mov
imul
int3
jp
add
push
sbb
repnz
leave
jb
dec
rcrb
movsb
mov
adc
xlat
das
or
jge
sbb
sbbl
sub
in
pop
pop
push
insb
inc
adc
cmp
or
out
pop
or
loopne
test
inc
adc
enter
out
int3
mov
loop
push
or
mov
repz
sub
fwait
adc
in
mov
cld
add
dec
jo
xchg
in
imull
sub
pusha
rep
pushf
pop
not
mov
push
push
lea
jmp
data16
dec
sbb
insb
int
adc
dec
inc
pop
ret
rcrl
popl
dec
orb
pop
or
or
jns
mov
and
mov
enter
stos
addr16
insl
xorl
adc
scas
repz
in
lods
popa
sbb
inc
repnz
std
loop
xchg
add
insl
lcall
leave
rcrb
pop
pop
call
push
or
pushf
lea
jne
and
mov
bt
pushf
test
or
jmp
push
call
call
push
inc
pushf
lea
je
pushf
adc
pusha
pusha
mov
pushl
ret
stc
clc
clc
or
pushf
call
jmp
bsf
sub
sar
mov
sub
inc
and
mov
mov
bts
sub
xchg
add
or
bts
shr
movzbw
dec
ror
mov
inc
rcr
xor
sub
add
call
movw
lea
ja
not
jno
sub
sar
add
shl
mov
inc
or
rcr
mov
call
call
add
add
jmp
push
std
xchg
mov
movsbl
xchg
mov
jmp
sub
pushl
pushf
jmp
push
stc
mov
pusha
pusha
test
movb
add
call
pusha
pusha
mov
mov
movb
pushf
jmp
add
lea
jo
pushf
mov
movb
lea
jmp
jmp
mov
inc
call
movl
rcr
mov
cmc
pop
ror
bt
cmc
adc
sub
btc
btc
jmp
pushf
mov
pusha
pusha
mov
jmp
pushf
popl
call
pusha
jmp
push
push
push
mov
movb
pusha
call
lea
jo
push
pushl
popl
pushf
pushf
pushl
lea
jmp
mov
mov
pushf
lea
jmp
pushf
dec
lea
jp
mov
cmc
add
pushf
movl
pushf
lea
jmp
mov
movl
mov
movb
lea
jmp
stc
xor
stc
push
clc
test
add
pushf
push
call
mov
bts
add
add
sub
bts
stc
shld
rcr
mov
push
pusha
jmp
call
call
call
pushf
pushf
push
pushl
popl
push
mov
lea
jmp
movzbw
ror
jmp
clc
neg
mov
pushf
mov
stc
bt
cmc
not
pushf
not
pushl
cmp
cmc
sub
jmp
add
pushf
call
pushf
push
dec
bt
stc
ror
jmp
pushf
adc
btr
mov
bt
call
cbtw
xor
aaa
sub
mov
cmp
pushf
mov
cmp
sub
pushf
pushf
pusha
jmp
movsbw
bt
jmp
movb
pusha
mov
push
jmp
mov
pusha
push
pushf
call
pushf
mov
jmp
add
mov
pushl
pusha
jmp
movsbw
movsbw
mov
push
pushf
pusha
movb
lea
jmp
mov
pusha
call
movb
mov
mov
mov
movb
lea
jmp
pushf
mov
pushf
push
lea
jmp
pushf
add
movb
call
mov
movsbw
bts
mov
bswap
xchg
clc
bswap
movl
pushl
popl
not
rol
lea
pushf
movl
cmc
btc
mov
bts
mov
bt
ror
movsbw
movsbw
btr
rcl
sub
cmc
call
push
pushf
mov
pushf
lea
jmp
mov
movl
bt
cmp
cmc
sub
pusha
pushf
shl
mov
call
inc
stc
test
not
bt
cmp
bt
add
clc
test
bt
cmp
mov
test
test
sub
jmp
xchg
movsbw
pushl
not
jmp
cmp
mov
not
pusha
mov
bt
pusha
clc
clc
add
call
lea
jp
push
jmp
movl
lea
jge
decl
jmp
and
cmc
mov
cmc
rcl
rcr
mov
pusha
jmp
call
pusha
pusha
mov
push
mov
call
push
jmp
repz
popl
pushf
mov
cmc
pop
pushl
mov
cmc
bts
pusha
btr
mov
movzbw
push
rcr
btc
mov
pop
lea
mov
rcr
lea
xchg
jmp
sub
call
xchg
pusha
bt
movw
pushl
add
bt
stc
xor
movl
bt
neg
pushl
xchg
movb
mov
add
jmp
and
pusha
call
mov
add
shld
or
sub
bsr
jmp
cmc
rcr
xor
cmp
mov
cmc
bt
pusha
pusha
sub
stc
bt
test
jmp
pusha
mov
bswap
movsbl
movsbw
std
mov
std
cld
call
xor
test
pusha
mov
cmc
add
push
mov
lea
jmp
add
pushf
dec
cmc
mov
bt
sub
lea
jae
pushf
mov
movb
mov
lea
jmp
push
push
jmp
pushf
mov
dec
bt
clc
clc
add
pusha
push
push
pushf
mov
movb
mov
pushf
pushf
lea
jmp
test
stc
add
mov
lea
jo
pushf
push
call
mov
pushf
and
clc
movb
call
mov
movb
pushf
pushf
mov
lea
jmp
add
pushf
mov
push
mov
movb
lea
jmp
ror
bswap
movzbl
test
call
ror
pushl
movzbw
mov
not
lea
push
mov
push
lea
jmp
push
pusha
pushf
mov
movl
lea
jmp
cmp
sbb
mov
push
add
pushl
movw
lea
jmp
pusha
pusha
pushl
pushl
popl
pushf
movl
movw
lea
jmp
jmp
jmp
pushf
popl
jmp
mov
jmp
pushf
jmp
jmp
pushl
jmp
movw
mov
movw
mov
pushf
xchg
movzbw
repz
popl
pushf
mov
ror
ror
rcl
stc
mov
movw
movsbw
pushl
mov
bts
mov
ror
btr
mov
clc
btc
pushf
mov
btr
bswap
pusha
rcr
pushl
popl
stc
pushl
movl
xchg
pushf
movsbl
mov
bts
ror
sub
call
pushf
mov
mov
mov
pushf
lea
jmp
mov
pop
pop
ror
adc
sub
clc
pushf
rcl
call
lea
push
pusha
bts
bswap
mov
btr
pushl
popl
rcr
bts
call
pushl
popl
pushl
mov
lea
jmp
test
pushl
bt
pushf
bt
stc
add
cld
pushl
popf
push
lea
jmp
pushl
popl
mov
bt
bt
stc
movl
pop
mov
rol
call
call
movsbw
adc
movzbw
shld
mov
push
pusha
add
call
jmp
call
stc
movsbw
bswap
shl
movzbl
stc
sub
add
not
bt
ror
not
movsbw
setg
inc
bsf
sar
jmp
mov
pushf
pushf
popl
pushf
pushl
popl
mov
push
mov
lea
jmp
movzbw
lahf
mov
jmp
jmp
pushf
push
jmp
pusha
dec
cmc
push
call
mov
pushf
mov
push
call
pushf
xor
test
add
mov
push
mov
pushf
pushf
mov
pushl
pushl
ret
shrd
aam
mov
sub
shl
mov
call
cmc
shr
mov
stc
rcr
stc
mov
shr
mov
bt
clc
test
add
clc
stc
test
shld
jnp
pusha
mov
pushl
pushf
popl
pusha
push
call
shr
mov
call
btc
mov
rol
rcr
ror
push
bswap
ror
movzbl
push
bswap
bt
push
bts
jmp
lea
je
pushf
lea
pusha
push
pushf
pushf
lea
jmp
mov
jmp
mov
pushf
pushl
ror
shl
add
sbb
sub
pusha
ror
not
call
mov
push
pushf
jmp
pushf
sbb
shr
mov
jmp
pushl
popl
movb
lea
jmp
pusha
pusha
pushf
dec
call
add
call
cmc
pusha
mov
pusha
jmp
mov
pushf
lea
jmp
xor
jmp
bsf
mov
clc
clc
add
pusha
lea
jmp
add
shr
stc
mov
jmp
mov
jmp
mov
rcr
xchg
pop
pushl
popl
not
rcr
stc
bt
movl
pusha
call
push
pusha
pusha
mov
jmp
xor
shl
mov
shl
jmp
call
or
sbb
mov
clc
stc
stc
cmc
add
push
movw
lea
jmp
jmp
inc
sub
rcr
pusha
pusha
ror
bswap
movzbw
jmp
and
not
mov
pushf
add
pushf
pusha
lea
jmp
mov
pushf
pushf
pushf
push
lea
jmp
call
push
mov
xchg
call
not
jmp
call
mov
movw
movb
movb
lea
jmp
pusha
shl
shr
pushf
mov
shld
bts
mov
stc
cmc
add
jmp
btr
mov
xchg
bts
pushf
pushl
popl
xchg
call
pushf
pushl
popl
pushl
mov
mov
lea
jmp
xchg
setge
bt
mov
sbb
cmp
mov
jmp
jmp
sub
movsbw
ror
jmp
bswap
mov
jmp
pushl
popl
pushf
push
mov
lea
jmp
pusha
mov
bt
pop
push
mov
pushf
mov
movzbw
bswap
btc
pushl
popl
stc
push
ror
pushf
movl
rcr
not
not
mov
rcr
ror
sbb
lea
sub
ror
clc
bts
ror
ror
movsbw
lea
lea
push
lea
jmp
mov
pushf
pushf
pushf
jmp
push
pushf
and
jmp
pushf
pushf
mov
pusha
pushf
pushf
mov
mov
jmp
inc
pop
not
pusha
dec
sar
shr
test
ror
xor
bts
lea
and
lea
setg
and
mov
stc
call
setnp
mov
pusha
cmp
bt
call
pushf
mov
movb
pushf
pushl
pushf
pushf
popl
pushf
pushf
call
clc
ror
jmp
bt
bts
ror
movzbl
pop
lea
pushf
movb
movb
lea
jmp
pushf
rep
add
clc
rcl
bsf
mov
cld
push
bt
mov
pushf
pushl
pushl
std
pushl
popf
mov
pushf
push
lea
jmp
stc
pushf
movl
bt
mov
btr
cmc
pushf
ror
neg
sub
movsbl
call
not
bsf
or
push
clc
add
jmp
jmp
cwtl
shld
setae
mov
shl
cmp
shl
shl
mov
cmc
call
mov
pusha
lea
jmp
btc
rcr
notl
add
mov
pusha
stc
cmp
push
sub
pusha
test
call
pushf
movw
pushf
popl
jmp
cmp
pusha
call
cwtl
not
mov
push
lahf
call
pusha
pushf
jmp
pushf
pushl
popl
pushf
pushf
push
lea
jmp
pushl
popl
pushf
pushf
mov
lea
jmp
lea
mov
std
std
std
lea
pushf
jmp
sub
call
mov
call
lea
pushf
lea
jmp
pushf
mov
mov
mov
mov
movb
pushl
ret
mov
std
std
jmp
pusha
mov
pushf
pusha
movl
lea
jmp
divl
push
call
pusha
mov
mov
pushl
pushf
lea
jmp
pop
movzbl
jmp
push
cmc
ror
pushl
rcl
push
xchg
rol
mov
bt
ror
sub
call
mov
lea
xchg
bswap
lea
xchg
movzbw
pushf
cmc
pushl
popl
rcr
movl
rcl
rcr
bts
cmc
mov
btc
not
pushf
ror
xchg
neg
or
sub
lea
jae
ror
ror
bsf
sub
mov
sbb
shr
rcl
mov
sub
shld
sub
mov
rcr
shl
shl
neg
mov
bswap
shl
call
mov
pushl
rcr
cmc
mov
btc
call
btr
pushl
popl
not
bts
movl
pop
jmp
mov
pusha
pusha
pushf
mov
pushf
repz
popl
mov
not
mov
ror
not
mov
movsbw
push
mov
btc
stc
mov
movsbw
bswap
mov
stc
bswap
pushl
popl
not
bt
movl
ror
pushf
bts
push
mov
bts
call
pop
pop
lea
pushf
mov
pushl
pushf
lea
jmp
mov
call
push
push
call
movsbw
dec
pushf
dec
lea
bt
cmc
call
shld
mov
jnp
cmp
push
cmc
add
push
movl
lea
jmp
mov
stc
pushf
ror
ror
neg
pop
rcl
sub
btc
pop
rol
not
ror
pushl
lea
pushf
mov
push
pushf
lea
jmp
jmp
push
call
mov
pusha
jmp
push
movsbw
repz
bt
lea
cmc
push
movzbw
pushf
mov
cmc
movzbl
lea
push
xchg
rol
clc
push
push
cmc
pusha
movzbw
mov
mov
xchg
pushl
popl
bt
movl
bswap
pop
push
mov
rcr
bts
movzbw
ror
movzbw
sar
add
stc
sub
mov
not
ror
shr
lea
test
xchg
sub
movsbw
mov
sbb
btc
push
cmp
mov
rol
add
movzbw
rcr
cmp
mov
add
sub
bt
mov
mov
rol
cmp
sub
add
bt
rol
pushf
stc
pushf
shl
sub
not
movzbl
mov
movsbw
movsbw
mov
mov
pushl
lea
ja
dec
test
test
pushf
xor
pusha
test
clc
add
movb
mov
pusha
push
pushl
ret
call
movsbl
repz
popl
ror
bt
mov
jmp
movb
pushf
popl
push
pushl
jmp
shrd
pusha
mov
movb
pushl
pushf
movb
pushf
popl
push
jmp
mov
pushf
movw
mov
movw
repz
popl
pop
bts
not
jmp
call
lea
jne
cmc
call
lea
movzbw
lea
movl
lea
jmp
lea
movzbl
movsbw
mov
lea
clc
mov
pop
mov
pushf
rcr
not
call
mov
pusha
add
pushf
mov
lea
jmp
jmp
stc
jmp
test
call
pushf
mov
pushl
lea
jmp
pushl
popl
push
movb
lea
jmp
lea
jp
mov
pusha
pusha
pushl
mov
lea
jmp
jmp
pusha
mov
movw
jmp
movb
lea
jne
jmp
mov
lea
jb
popl
pushf
pushf
lea
jmp
pushl
popl
pushl
lea
jmp
rol
jmp
pusha
pusha
movb
mov
call
pushf
mov
pushf
lea
jge
push
pushf
xchg
pusha
call
sar
cmp
cmc
movzbl
test
sub
pusha
add
cmc
pushf
not
cmc
add
bt
sub
clc
call
ror
shr
pushf
sub
jmp
call
pushf
xchg
push
pop
pushf
repz
popl
call
bts
mov
push
bt
test
lea
jp
add
pushf
lea
jmp
pushf
popl
jmp
xchg
movw
movl
jmp
xadd
bts
mov
neg
shr
rol
sub
rcl
pusha
cmc
pushf
rol
stc
inc
not
neg
add
bts
movsbl
movzbw
rol
mov
sub
jmp
call
repz
popl
movzbw
rcl
mov
rcr
mov
stc
cmc
pushl
mov
push
mov
rcl
clc
pusha
movzbl
xchg
lea
pushl
popl
not
push
xchg
jmp
push
pushf
popl
call
pushf
pusha
cmp
sub
call
pushf
push
mov
movb
mov
jmp
lea
pushf
mov
movb
lea
jmp
setp
not
not
mov
mov
lahf
cwtl
mov
jmp
dec
call
pushl
popl
movb
movb
movb
lea
jmp
pushl
mov
pushf
lea
jmp
inc
pushf
stc
clc
neg
call
jmp
lea
je
pusha
sub
cmp
call
mov
call
pushf
bswap
repz
popl
call
mov
push
jmp
add
call
push
pushf
mov
pushf
mov
pushl
jmp
not
clc
push
stc
add
pushl
cmc
cmc
sub
test
jmp
xchg
pop
bswap
movzbw
movsbw
repz
popl
bts
rol
rol
mov
mov
ror
btc
mov
not
movzbw
mov
movsbw
mov
clc
jmp
test
cmp
pushl
cwtl
pushl
stc
stc
sub
mov
bt
push
sub
pushf
mov
mov
movb
pushf
lea
jmp
not
cwtl
mov
movw
push
push
pushl
ret
dec
clc
bt
cmp
xor
jmp
lahf
or
mov
inc
pusha
neg
mov
movb
movw
add
pushf
jmp
pushl
call
mov
pushf
pushf
pushl
pushl
ret
and
push
pushf
popl
call
mov
pusha
mov
not
jmp
push
push
mov
push
mov
jmp
jmp
movb
xchg
push
jmp
repz
popl
jmp
pusha
mov
call
mov
jmp
cmc
or
mov
stc
push
bswap
pusha
test
mov
add
jmp
not
push
repz
popl
stc
not
push
bts
mov
not
movsbw
push
bts
push
pushf
mov
mov
mov
rcr
push
rol
movzbw
pushl
stc
movzbl
stc
push
pusha
push
lea
movsbl
mov
movsbw
push
ror
shl
bsr
rcr
sub
clc
bts
ror
bswap
movl
mov
lea
movw
lea
jmp
pushf
lea
movsbw
inc
mov
stc
pushf
shld
bts
add
cmc
mov
bt
sub
lea
setbe
ror
bswap
rol
sub
add
add
lea
ror
call
movzbw
call
pushf
popl
pusha
pushl
popl
pushl
lea
jmp
xchg
call
pushl
mov
movw
jmp
rol
call
jmp
call
ror
pushl
add
call
pushf
jmp
neg
aam
call
pushf
pushf
popl
call
xchg
bt
mov
cmp
sub
call
pushf
lea
jne
call
pushl
popl
movw
mov
lea
jmp
bts
ror
not
pushl
not
not
lea
movw
push
lea
jmp
mov
pushf
movb
lea
jmp
jmp
movb
call
pushf
pushf
sets
pusha
mov
jmp
pushf
pusha
not
pusha
cmc
add
cmp
sub
clc
push
movb
sub
push
pushl
lea
jnp
pushf
mov
movw
pusha
pushf
lea
jmp
repz
popl
clc
mov
stc
clc
jmp
rol
btr
stc
sub
movzbw
inc
not
push
movzbl
jmp
mov
pushf
pushl
ret
jmp
mov
pusha
movb
add
push
push
mov
mov
jmp
mov
lea
movsbw
btr
mov
pushf
mov
stc
ror
movzbw
pushl
popl
lea
not
bswap
movl
pusha
btr
call
jmp
mov
jmp
push
pushl
pusha
mov
pushf
mov
pushf
lea
jmp
pushl
sub
pushf
cmp
shr
pusha
jmp
pushf
pushf
xchg
movsbl
not
repz
popl
push
pushl
mov
btc
pushf
mov
mov
cmc
jmp
clc
cmpl
pushf
mov
mov
pusha
mov
movb
mov
mov
call
pusha
call
jmp
pushf
call
call
bswap
push
bswap
repz
popl
rcl
mov
bt
rcr
pop
mov
rcl
mov
push
rcr
bt
cmc
mov
rcr
push
xchg
ror
clc
btr
pushl
popl
movzbw
rcr
rcr
movl
bswap
mov
rcl
lea
ror
shrd
sub
bt
ror
not
not
lea
pushf
lea
pushf
push
lea
jmp
pusha
decl
push
pushl
lea
jne
jmp
push
jmp
shrd
xor
mov
cmp
btr
xor
inc
mov
pushf
pusha
stc
test
not
pusha
test
push
not
cmp
jmp
movw
mov
jmp
pusha
pushf
push
mov
call
dec
call
jmp
add
mov
pushf
pushf
xor
mov
add
mov
lea
shl
xor
mov
rdtsc
bsf
mov
aaa
pop
mov
dec
lea
shr
xor
mov
daa
rol
aam
mov
stc
ror
movsbw
inc
pushl
popf
cltd
cwtl
mov
movzbw
xchg
movsbw
mov
call
mov
push
mov
jmp
ror
and
sub
call
call
lea
jmp
mov
rcr
mov
rcr
stc
bswap
not
mov
clc
mov
pushf
not
stc
pushl
popl
ror
movl
rcl
xchg
push
jmp
jmp
jmp
mov
pusha
call
mov
cmc
pop
clc
mov
push
btr
mov
rol
movsbl
btr
movsbw
mov
clc
lea
ror
btr
pushl
popl
ror
rcl
movl
bswap
xchg
mov
not
ror
movzbw
rcl
jmp
call
cld
cld
lea
std
mov
call
mov
pushl
lea
jmp
jmp
call
lea
lea
mov
pusha
jmp
mov
pop
bswap
repz
popl
rcl
pushl
mov
cmc
mov
rol
call
mov
mov
pushf
push
push
push
lea
jmp
add
inc
dec
rcr
rcl
stc
movzbw
ror
pusha
setns
bswap
inc
bts
add
movzbw
mov
pusha
lea
pushl
jmp
and
jmp
pushl
pushf
pushl
popl
push
pushf
push
lea
jmp
pushl
lea
mov
lea
jmp
cmp
cmc
sub
test
cmp
shr
call
ror
not
call
cmp
cmp
pushf
pushf
pusha
pushf
lea
jne
or
xorb
lea
bswap
bswap
mov
pop
push
lea
jmp
pushf
call
jmp
jmp
jmp
btr
ror
pushf
push
not
lea
pusha
push
pushf
lea
jmp
call
cmc
cmc
add
push
mov
pushl
push
lea
jmp
btr
btc
test
bt
movzbl
shrd
rcl
neg
sub
jmp
mov
pushl
pushf
pushf
pusha
pushf
popl
pushf
pushl
jmp
jmp
pushf
call
cmc
add
push
pushf
call
call
push
pushl
popl
movb
lea
jmp
sub
pushf
shl
mov
pusha
mov
push
jmp
call
adc
mov
push
add
shr
add
pusha
pushf
mov
movw
mov
mov
pushf
pushf
lea
jmp
pusha
shl
stc
shr
bt
stc
movb
cmp
or
clc
pushf
stc
xor
pushf
inc
jmp
inc
mov
test
sub
push
mov
pushf
lea
jmp
movb
movb
mov
jmp
daa
sbb
test
mov
ror
call
mov
repz
btc
movsbw
push
cmc
movzbl
push
pushf
btr
clc
mov
pushf
movl
stc
mov
movzbw
push
xchg
stc
pushl
bts
movzbw
push
lea
mov
rcl
cmc
mov
rcr
bts
ror
xor
sub
movzbw
rcl
ror
pushf
call
call
add
sbb
pushf
not
not
shrd
sbb
add
clc
sar
cmc
add
bts
movsbw
rcr
bt
sub
or
movzbl
test
mov
pusha
cmc
or
call
push
pushf
mov
pushf
mov
lea
jmp
btr
cmc
ror
or
sub
test
jmp
jmp
test
stc
add
pusha
bt
clc
pusha
sub
movb
mov
push
movl
mov
lea
jmp
sub
rcl
btr
stc
ror
push
not
lea
movb
pushf
push
lea
jmp
pushl
lea
ja
lahf
shl
aam
mov
add
lea
daa
daa
bswap
sub
bt
rol
lea
bt
and
btc
adc
sub
pusha
movsbw
movsbw
mov
movsbw
jl
push
pushf
popl
jmp
push
pushf
pushl
pushf
call
lea
cpuid
bt
sub
cmc
call
bt
mov
movw
ror
ror
add
pusha
sub
bts
ror
movzbl
call
das
mov
lea
movsbw
shl
mov
xor
mov
bt
add
jge
stc
stc
shrd
call
pusha
not
pusha
mov
lea
jg
push
pusha
repz
popl
btc
btr
movzbw
xchg
not
cmc
mov
stc
pop
movzbw
not
mov
sets
call
xchg
pusha
mov
not
sar
mov
push
stc
call
pusha
bswap
not
mov
dec
sub
not
sar
xor
test
shr
and
setb
mov
mov
movb
sub
pushf
movl
movw
call
jmp
pushf
pushf
pusha
mov
pushl
push
pushf
lea
jmp
pushf
pusha
mov
push
mov
pusha
not
xchg
movsbw
pop
repz
popl
btr
bt
ror
xchg
rcr
mov
rcl
cmc
btr
btc
mov
btc
mov
setnp
xchg
call
stc
xchg
pushf
pushl
popl
movsbl
movl
stc
not
mov
movsbw
rol
pop
ror
and
sub
bswap
bt
ror
pop
ror
cmp
shr
shrd
lea
shl
not
xadd
sub
clc
sbb
mov
jmp
not
cmc
rcr
mov
btc
btc
mov
pushf
bts
mov
rcl
movsbw
jmp
jmp
bswap
repz
popl
ror
mov
btr
mov
btr
bt
mov
pushf
not
bt
mov
mov
rol
jmp
aad
or
mov
cmc
sub
call
push
inc
pushf
jmp
adc
btr
jmp
call
ror
mov
pusha
clc
clc
add
jmp
jmp
shl
jmp
clc
cmc
sub
call
ror
pushf
movsbw
call
dec
stc
cmc
movb
cmp
xor
movb
add
call
call
jmp
mov
jmp
call
call
not
movzbl
repz
popl
rcl
clc
pushf
mov
push
rcr
mov
push
bt
mov
bt
mov
rol
stc
lea
mov
stc
jmp
pop
add
pop
lret
pop
dec
negb
adc
pop
pop
mov
pop
pop
lret
pop
pop
pop
pop
pop
das
out
pop
pop
jl
pop
pop
lret
pop
ljmp
pop
mov
pop
pop
lret
pop
sub
pop
pop
and
pop
pop
ljmp
pop
mov
lock
pop
xor
aad
pop
dec
ljmp
ja
pop
pop
lret
pop
sub
pop
in
rcrl
stc
pop
pop
lret
pop
sub
pop
pop
add
and
pop
pop
lret
pop
stc
cvtps2pd
cmc
pop
pop
xchg
cmc
pop
pop
lret
pop
insb
jmp
pop
ret
pop
dec
repnz
pop
lret
pop
mov
pop
pop
dec
negb
mov
pop
pop
lret
pop
dec
negb
add
stc
pop
pop
lret
pop
stc
cvtps2pd
out
pop
shr
pop
pop
lret
pop
mov
jmp
pop
pop
lret
pop
xor
call
pop
pop
lret
pop
pop
pop
pop
pop
stc
pop
pop
pop
out
pop
push
pop
pop
dec
loop
pop
insb
jmp
pop
jl
pop
pop
pop
out
pop
dec
loop
pop
imul
pop
pop
add
cmp
pop
pop
in
rcrl
cmp
pop
pop
int
pop
pop
stc
pop
pop
insb
jmp
pop
cmp
pop
pop
clc
or
adc
pop
pop
mov
rcrl
ja
pop
pop
clc
or
dec
out
pop
jg
pop
pop
mov
rcrl
movsl
negb
sahf
out
pop
pop
mov
pop
pop
push
or
mov
cmc
pop
pop
push
in
pop
pop
mov
negb
scas
pop
pop
jg
pop
pop
push
or
mov
pop
pop
cmp
pop
pop
adc
pop
pop
add
pop
pop
or
pop
pop
push
pop
pop
mov
pop
pop
push
or
xchg
cmc
pop
pop
dec
negb
mov
pop
pop
mov
add
shr
pop
pop
ljmp
pop
insb
jmp
pop
dec
repnz
pop
mov
pop
pop
clc
or
imul
pop
pop
mov
pop
pop
cmp
add
pop
mov
icebp
pop
pop
add
mov
pop
pop
movsl
negb
xchg
icebp
pop
pop
mov
pop
pop
xor
or
xchg
icebp
pop
pop
mov
pop
pop
imul
pop
pop
xchg
icebp
pop
pop
mov
aad
pop
dec
out
pop
xchg
icebp
pop
pop
cmp
pop
pop
sub
pop
xchg
icebp
pop
pop
ret
pop
cmp
hlt
pop
pop
xchg
icebp
pop
pop
push
pop
pop
dec
ljmp
xchg
icebp
pop
pop
jg
pop
pop
add
pop
pop
clc
or
xchg
icebp
pop
pop
add
adc
pop
pop
or
pop
pop
xchg
icebp
pop
pop
stos
hlt
pop
pop
jg
pop
pop
cmp
pop
pop
xchg
icebp
pop
pop
imul
pop
pop
stos
hlt
pop
pop
xchg
icebp
pop
pop
pop
pop
pop
pop
or
pop
pop
ljmp
pop
imul
pop
pop
ret
pop
xchg
icebp
pop
pop
dec
ljmp
mov
pop
pop
xchg
icebp
pop
pop
adc
pop
pop
dec
out
pop
dec
loop
pop
xchg
icebp
pop
pop
sub
pop
or
pop
pop
scas
pop
pop
push
or
add
pop
pop
cmp
pop
pop
pop
pop
pop
pop
xor
or
cmp
pop
pop
dec
repnz
pop
dec
repnz
pop
stos
hlt
pop
pop
dec
negb
pop
out
pop
stos
hlt
pop
pop
mov
pop
pop
mov
jmp
pop
insb
jmp
pop
mov
pop
pop
push
pop
pop
stos
hlt
pop
pop
ljmp
pop
das
out
pop
pop
scas
pop
pop
pop
pop
pop
pop
jg
pop
pop
dec
out
pop
dec
out
pop
stc
cvtps2pd
add
mov
repnz
pop
mov
out
pop
pop
sahf
out
pop
pop
mov
pop
pop
add
stc
cvtps2pd
jmp
pop
pop
ja
pop
pop
push
in
pop
pop
pop
pop
pop
pop
add
pop
pop
sub
pop
mov
pop
pop
das
out
pop
pop
or
pop
pop
clc
or
test
pop
pop
cmp
rcrl
mov
pop
pop
dec
repnz
pop
sahf
out
pop
pop
dec
negb
in
rcrl
sub
pop
pop
mov
out
pop
movsl
negb
adc
pop
pop
test
pop
pop
pusha
pusha
mov
mov
push
pushf
call
movw
mov
movsbw
lea
mov
pusha
cld
mov
rep
test
movzbw
not
inc
mov
shrd
lea
neg
mov
test
clc
push
stc
pushl
popf
mov
lea
jmp
push
pushl
lea
cmc
clc
cmp
add
movl
clc
add
jg
bt
add
call
mov
push
lea
jmp
dec
mov
call
cbtw
pushf
pushl
mov
cwtl
movw
call
pushf
cwtl
rol
clc
rdtsc
jmp
jmp
call
pushl
popl
pushf
lea
jmp
test
add
call
stc
bts
mov
stc
test
add
push
pusha
mov
lea
jmp
call
push
call
bsf
btr
aad
cmp
movzww
pushf
call
pushl
pushf
mov
push
movb
pusha
pushf
popl
mov
call
pusha
pusha
movw
mov
mov
pushf
pushf
popl
pushf
jmp
xchg
test
clc
add
clc
mov
xor
cmc
pusha
movb
neg
push
test
clc
xchg
stc
test
cmp
add
cmp
pushf
jmp
movzbw
lea
movw
pushf
mov
lea
jmp
pusha
pushl
popl
pushf
pushf
movb
pushf
lea
jmp
jmp
mov
pushf
lea
jmp
mov
ror
call
mov
pushf
movsbw
movzbw
repz
popl
lea
mov
bswap
call
jmp
push
mov
jmp
pushf
mov
pushf
mov
pushf
pushf
lea
jmp
mov
push
movw
pushf
mov
pushf
popl
pushf
call
cmc
sub
mov
push
pushl
sub
pushl
jmp
add
add
dec
neg
rol
mov
adc
sub
movsbw
btc
btc
bswap
rol
bsf
setge
mov
rcl
add
movzbw
movzbw
rol
movsbw
dec
bt
rcr
sub
pusha
movzbl
push
pushf
push
mov
push
jmp
push
pushf
pushl
ret
call
call
mov
call
cmp
sub
pushf
call
mov
pushf
pushf
movb
push
mov
jmp
cmp
test
jmp
mov
pushl
lea
jmp
movl
pusha
mov
pushf
push
push
movb
lea
jmp
pushf
call
mov
movsbl
not
ror
lea
clc
btr
lea
sub
rcl
pushf
rcr
ror
pop
mov
lea
pushl
pushf
push
movb
lea
jmp
pushl
lea
jmp
push
jmp
call
xchg
call
mov
call
jmp
lea
jp
lea
pusha
repz
popl
ror
btr
mov
movw
movl
bts
mov
pushf
rcr
mov
mov
bt
pushf
mov
movzbw
not
pushl
btc
mov
stc
bt
pushl
popl
bswap
clc
xchg
bswap
movl
call
bt
test
clc
add
push
push
push
lea
jmp
mov
shr
dec
stc
sub
mov
bt
pusha
pushl
call
mov
mov
lea
jmp
bsf
rcr
clc
mov
jmp
movw
pushf
lea
jp
mov
call
mov
mov
mov
mov
push
call
cmc
sub
cmp
add
pushf
lea
jbe
dec
jmp
mov
pushf
mov
bt
btc
pop
pop
pushl
popl
pushf
movsbl
movzbw
movl
btr
mov
rol
pusha
pop
pop
ror
not
pop
lea
sub
call
pushl
popl
pushf
lea
jmp
pushf
popl
mov
pushl
popl
mov
push
mov
lea
jmp
pushl
movsbw
lea
movl
push
lea
jmp
pushf
pushl
pushl
mov
mov
call
push
sbb
movzbl
mov
bt
add
movl
pusha
dec
cmc
mov
ror
pushf
jmp
pushf
pushf
movw
push
call
jmp
pushf
movl
rcl
bswap
rol
pop
mov
pusha
ror
push
movzbw
sbb
sub
movsbl
rcl
ror
mov
movzbw
not
lea
mov
lea
jmp
mov
jmp
pushl
mov
mov
pushl
call
lea
pusha
pushf
popl
pushl
cld
mov
call
test
pushf
cmc
add
pusha
movw
lea
jmp
mov
push
movw
mov
movb
lea
jmp
btr
or
aam
shr
mov
bt
rcr
rcr
pushf
mov
movb
clc
movw
push
sub
bt
clc
shr
lea
jge
mov
jmp
jmp
movw
jmp
movzbw
mov
cmc
mov
movzbw
mov
clc
pushf
bt
mov
btr
bt
pushl
popl
xchg
mov
rcl
bt
movl
pop
bt
movsbw
btr
mov
bswap
btc
bswap
ror
bswap
sub
bt
jmp
jmp
clc
cmp
pusha
add
pushl
lea
jmp
add
call
not
movzbl
pushf
pop
seta
movzbl
mov
call
jmp
test
btc
daa
mov
inc
rcr
neg
sar
mov
call
mov
pushf
push
pushf
lea
jmp
mov
movw
mov
movb
mov
lea
jmp
mov
test
sub
call
lea
pushf
lea
jmp
