pusha
add
jmp
mov
inc
incb
hlt
movw
or
and
decl
xor
or
jmp
dec
or
jmp
add
or
xchg
movb
sbb
or
sub
xor
por
cmc
movl
adc
jbe
or
jg
xor
sbb
xor
rol
push
inc
pop
or
pxor
and
sub
movb
jno
add
or
jg
adc
push
cltd
pop
jae
or
sub
sbb
movq
rcl
push
dec
pop
movw
adc
push
inc
pop
jle
jmp
out
push
in
dec
nop
sbb
sub
push
inc
pop
jmp
push
aam
jno
ror
adc
rol
adc
lahf
movb
sub
pandn
adc
sub
jne
sbb
jno
add
adc
jl
push
cld
pop
clc
movb
jb
xor
push
cltd
pop
pmaxub
or
xor
sbb
sub
xchg
movb
jb
jmp
mov
repz
jns
pmaddwd
jge
sbb
pcmpeqb
xor
push
inc
pop
xor
jmp
dec
mov
movw
punpckldq
rcl
movw
and
sub
jno
jmp
xchg
dec
je
cmc
out
add
jmp
mov
fstps
adc
push
and
add
jo
and
shr
or
movw
or
paddb
shr
xor
push
lahf
pop
jge
sbb
jge
push
aaa
pop
cwtl
movl
sbb
jns
jmp
cmp
inc
rcrb
sbb
add
and
add
sbb
cmpl
jne
xor
mov
jmp
add
add
lahf
out
fcomp
xchg
adc
imul
repnz
adc
dec
cmp
adc
adc
push
jae
push
mov
jle
insb
and
xor
sbb
adc
in
test
xchg
inc
xchg
out
pop
add
add
sbb
addl
pop
mov
lea
add
dec
add
out
jae
std
jecxz
inc
xchg
stc
insb
pop
xchg
adc
and
fimuls
sbb
adc
lea
push
push
int
add
adc
mov
inc
xchg
dec
or
lcall
add
push
mov
das
adc
xchg
mov
loope
or
add
pop
or
add
or
xlat
push
mov
loopne
in
adcb
jecxz
mov
inc
fs
xchg
adc
xchg
adc
add
adc
push
pop
cld
adc
lods
adc
adc
mov
sub
xchg
inc
xchg
loop
mov
xchg
adc
cmp
push
mov
push
insl
test
push
lods
popl
mov
xchg
adc
xor
pop
js
sbb
push
sub
out
jae
push
jae
test
fs
adc
push
xchg
dec
adc
adc
add
push
mov
out
pop
push
xchg
dec
cmp
sbb
xchg
or
lds
dec
add
adc
inc
std
adc
inc
lcall
xchg
lcall
xor
mov
push
addb
pop
xchg
pop
xchg
dec
sub
add
add
adc
inc
cltd
lcall
xchg
dec
push
push
add
movsl
movsl
adc
aad
add
xchg
add
sbbl
add
lcall
push
sbb
repz
jmp
mov
jmp
ja
dec
xchg
nop
dec
cld
xchg
adc
push
jmp
pop
dec
test
adc
sub
push
test
stos
xchg
lock
shll
push
gs
jle
mov
jmp
gs
push
stc
pinsrw
or
xchg
adc
or
call
mov
sbb
clc
jge
dec
addb
inc
inc
dec
or
loope
pop
fcoml
push
pop
push
test
pop
push
push
sub
jo
inc
fiadds
push
adc
jo
xor
sti
xchg
adc
out
mov
dec
xchg
fsubr
lcall
xchg
adc
popf
xor
sti
xchg
adc
out
xchg
adc
push
adc
push
push
pop
adc
clc
adc
xchg
cli
cmp
xchg
sbb
pop
int3
push
shll
xchg
pop
add
rorb
rorb
dec
xchg
pop
add
rolb
aam
rorl
outsb
adc
and
enter
bound
movsl
lea
mov
shll
and
cmp
or
das
jae
mov
dec
pop
stos
lcall
xchg
stc
test
std
lods
fwait
inc
xchg
inc
fs
xchg
adc
std
fcomps
loope
adc
std
fwait
inc
xchg
inc
rcll
xchg
dec
add
jns
adc
adc
in
push
adc
xchg
inc
in
adcb
das
adc
adcb
jge
mov
adc
push
jge
ss
inc
in
loope
in
push
xchg
inc
in
loope
in
push
notb
shrb
shrb
in
jbe
push
mov
fdivl
jb
pusha
icebp
arpl
ja
adc
jo
jge
sub
jge
add
fldcw
jo
push
cld
je
dec
repz
jmp
push
pop
stc
jo
fs
inc
lock
arpl
gs
insl
sti
jbe
add
fnsave
arpl
dec
sti
ja
jbe
jo
insl
cli
jg
jbe
jb
ja
adc
xchg
adc
xchg
adc
aam
jae
cltd
icebp
int
xchg
adc
push
testb
add
add
add
add
imul
pop
add
add
add
add
add
add
add
adc
repz
pushf
lret
out
pushf
jmp
mov
jmp
dec
es
out
outsb
adc
adc
mov
mov
adc
xchg
lds
add
add
add
or
inc
imul
jb
ss
jo
pop
scas
sbb
lret
out
jg
jmp
out
popf
or
pop
data16
xor
adc
adc
cmp
sbb
movsb
js
or
mov
into
jmp
loopne
cmc
push
add
add
icebp
push
add
int3
sbb
cmp
push
pop
dec
movl
add
add
add
add
and
sub
add
add
add
xchg
add
add
add
stos
add
stos
add
add
add
add
add
add
jo
add
adc
add
add
add
add
add
add
add
call
add
add
add
add
sbb
add
sub
add
cmp
push
add
add
cmpsl
fcomps
pop
lods
jecxz
add
add
scas
ret
test
add
add
add
and
add
pop
mov
add
cmp
aam
add
mov
das
addr16
add
add
add
add
sub
add
add
mov
add
add
imul
add
add
or
icebp
mov
push
mov
or
test
add
add
jb
loope
filds
add
mov
xor
mov
dec
aaa
inc
mov
sub
add
lcall
cmpsl
jno
pop
gs
andb
cli
dec
xchg
scas
out
pop
filds
mov
lret
add
lock
popf
aas
pop
inc
jp
mov
sub
cs
sbb
xor
mov
rcrb
fadds
push
mov
pop
sarl
ds
hlt
sbb
mov
rcr
inc
cwtl
or
shlb
or
push
or
dec
dec
std
or
fst
js
mov
imul
mov
shll
lock
lcall
sub
xor
inc
or
adc
add
jae
or
out
mov
test
mov
mov
or
push
cltd
and
jb
movsl
iret
shrl
xchg
xor
sbb
dec
xor
mov
lahf
adc
mov
mov
lret
std
mov
fadds
aad
call
inc
sar
out
cld
das
fucomp
mov
jmp
sbb
mov
adc
test
jmp
pop
pop
mov
test
cmpsl
xchg
push
push
sbb
filds
inc
clc
sbb
sub
shlb
mov
mov
push
imul
or
in
insb
xchg
jp
movsl
add
popf
ljmp
pop
mov
popf
inc
mov
mov
sbb
pop
aam
xorl
lcall
mov
out
fisttps
xchg
cmp
fcomip
jb
bound
mov
xlat
cmp
mov
adc
sti
cmc
loope
pop
mov
push
stc
jae
mov
loopne
add
insl
jnp
in
sbb
add
es
push
dec
dec
cwtl
pop
fcoml
dec
xchg
mov
mov
adc
fiaddl
std
out
in
out
push
pop
ss
xor
push
xchg
jmp
push
xchg
jecxz
jo
pop
and
outsb
adc
sub
lea
jae
sbb
xrstors
shl
adc
pop
xchg
pop
dec
push
xor
repnz
hlt
jno
mov
faddl
popl
push
in
inc
mov
adc
mov
add
inc
add
psrad
sarl
fcoml
cmpb
aad
sbb
pop
fistpl
jle
push
dec
mov
pop
adc
pop
out
add
jmp
pop
push
mov
fnsave
and
pop
inc
or
mov
inc
jbe
xchg
push
scas
pop
push
sarl
fwait
jnp
cld
aad
fcomps
dec
inc
mov
test
and
sbb
add
decb
lahf
xchg
pushf
arpl
imul
push
outsb
sti
call
mov
fcmovb
mov
xchg
repz
out
pop
push
dec
jmp
push
mov
fistps
sub
test
enter
lods
movsl
and
and
jns
lret
mov
and
adc
into
data16
jmp
dec
adc
in
inc
stc
xchg
test
clc
orb
xlat
jne
add
mov
mov
inc
sti
jnp
jg
fcoml
add
mov
cwtl
mov
mov
jno
mov
das
xor
add
dec
iret
cmc
sbb
pop
dec
jl
pop
bswap
ds
adc
call
ret
mov
adc
and
pop
lret
stos
sbbb
jne
cli
jb
jno
mov
lds
daa
cmc
mov
in
lds
movsb
jns
aam
pusha
loope
imul
lret
ret
and
push
inc
push
inc
inc
push
inc
adc
addl
push
enter
dec
clc
sbb
cs
mov
dec
fmul
gs
js
pop
std
jecxz
pusha
adc
insl
sarb
repnz
xor
jno
lods
in
je
inc
mov
xlat
data16
loopne
lea
xor
mov
aam
in
and
sub
cld
cmp
and
mov
pop
xor
mov
vrsqrtps
sbb
scas
sub
pushw
aam
fcoms
sbb
inc
mov
aas
stos
xchg
lcall
mov
out
andb
aad
jmp
pop
jno
daa
pop
test
js
mov
enter
sbb
inc
jl
and
adc
pop
test
cmp
jg
clc
rcrl
xor
jb
jecxz
sti
push
xchg
loope
cmp
sub
xchg
fwait
pop
ljmp
lahf
pop
pushf
rol
cli
jge
and
dec
iret
out
outsl
clc
adc
pop
repz
test
rcrl
cld
sti
push
mov
push
add
sahf
inc
add
movsb
repz
xor
movsb
shl
icebp
fsubr
fwait
das
mov
xchg
cltd
insl
popa
lret
clc
stos
and
push
loopne
out
in
pop
es
pop
xchg
jns
lahf
mov
sub
jb
test
dec
mov
lret
out
scas
or
out
ljmp
dec
mov
fildll
dec
js
lahf
iret
dec
dec
movb
shll
inc
pop
jecxz
mov
test
ret
mov
adc
xor
cmp
jo
jo
insl
adc
xor
pusha
mov
sbb
add
xchg
and
jle
cmpb
mov
arpl
or
and
test
sbb
pushf
push
out
and
loop
enter
pop
push
leave
mov
daa
adc
fisubl
into
aad
outsb
or
and
out
into
mov
xchg
sbb
xorb
cmpsb
and
cmp
xlat
lock
ror
sub
pusha
enter
fnstsw
pushl
xchg
add
hlt
pop
ret
and
in
stc
xor
fnstenv
int
sbb
adcl
out
add
es
jle
lods
xor
jg
fmull
enter
ljmp
movsl
mov
data16
stos
jnp
and
bound
mov
mov
push
adc
ror
xchg
or
xor
mov
mov
popw
je
fisttpl
test
into
jnp
cmpsb
fwait
int
in
daa
hlt
push
dec
sti
push
sar
call
lret
mov
or
sbb
jp
in
adc
std
add
inc
adc
inc
add
cmp
sbb
cmp
jb
and
subb
div
mov
adc
push
jnp
jge
pushf
idivb
push
pop
adc
fldenv
mov
push
mov
push
leave
or
inc
cmp
push
push
test
push
and
cli
sub
bound
lods
fmuls
mov
addb
mov
lcall
cmp
push
subb
cwtl
xchg
lcall
pop
push
jge
orl
dec
ss
xchg
xchg
pushf
xchg
sbb
enter
jb
outsl
sbb
sti
push
sbb
pop
les
in
add
sub
dec
int
shrl
outsl
mov
arpl
popf
andl
push
xchg
pop
bound
sub
add
shrl
rolb
pop
daa
mov
xor
xchg
lcall
jbe
xor
pop
mov
pop
or
push
cmpb
fildll
cld
jle
orb
jne
mov
and
sub
push
insb
jge
stos
imul
fmul
ret
adc
push
inc
pop
xchg
rep
adc
pop
sub
mov
xchg
jae
out
mov
mov
jne
pop
stos
or
cwtl
arpl
dec
das
push
ficoms
pop
ficompl
sbb
mov
cmpsl
xchg
lcall
mov
repnz
insb
mov
push
pop
mov
xchg
dec
inc
xchg
mov
stc
int3
stos
mov
movsl
cwtl
int3
test
in
and
push
dec
cli
push
sar
out
mov
sahf
shlb
inc
add
pusha
mov
xchg
sub
out
push
jecxz
fwait
cmp
dec
jns
aam
inc
pop
or
pop
pop
adc
mov
mov
sub
ret
shrb
ss
adc
xor
into
outsl
xor
lret
jle
or
xor
cmpsl
push
shlb
lea
xchg
xor
xor
aam
imul
and
mov
adc
addr16
fyl2x
cmpsb
mov
aas
add
inc
push
cmp
xchg
lahf
lods
xchg
cwtl
lds
cltd
inc
aad
daa
loopne
aaa
mov
int3
or
fistps
mov
daa
inc
stos
pop
mov
mov
and
mov
cmc
mov
cmp
xlat
inc
and
stos
cmp
call
ja
pop
xchg
imul
inc
cwtl
jns
movsb
fwait
add
mov
pop
daa
and
scas
lret
mov
mov
in
in
jns
pop
sbb
mov
adc
mov
fcompl
inc
enter
add
out
aaa
ror
sbb
daa
xorl
dec
in
out
adc
popf
stos
mov
inc
push
mov
mov
mov
jecxz
movsb
es
push
jl
addl
inc
xor
xchg
sbb
pop
push
fcmove
les
das
dec
pop
mov
mov
pop
bound
mov
fsts
xchg
dec
popa
les
adc
test
xor
ret
mov
cwtl
arpl
sbb
sahf
pop
mov
fidivs
subl
pop
loop
mov
cli
les
sbb
cmp
xchg
popf
stos
int
xchg
mov
or
in
fcomps
adc
movsl
dec
loopne
les
dec
jns
push
mov
data16
cmp
roll
js
adc
xchg
fsubl
inc
xchg
arpl
mov
leave
movsb
inc
ret
adc
fwait
sbb
sub
push
into
mov
mov
icebp
popf
xchg
mov
sbb
push
add
jo
add
dec
ljmp
adcb
xor
xor
out
mov
addr16
aam
jne
xor
xlat
or
cmp
pop
mov
xchg
lahf
dec
shll
sub
jae
test
dec
xchg
mov
sub
push
addl
pusha
fs
mov
fwait
mov
lahf
jbe
mov
movsb
or
sub
out
xchg
leave
sahf
mov
std
fwait
dec
mov
lcall
mov
mov
mov
imul
loope
jns
das
and
xchg
fidivs
pop
adc
sbb
inc
cmpsl
sub
mov
dec
mov
sub
out
xor
bound
mov
shl
cmpsl
adc
adc
jl
loop
pop
xchg
xor
imull
popf
sub
inc
xchg
mov
jl
jne
adc
jecxz
fisttps
cltd
int
push
adc
outsb
pop
inc
repnz
aad
pop
fimull
mov
sub
jne
jg
push
andb
sbbb
adc
mov
bound
lods
xchg
mov
mov
xor
mov
mov
jle
out
psrad
adc
cmp
pop
test
shlb
aaa
or
adc
outsb
push
mov
pop
inc
xlat
arpl
jns
xor
nop
orl
insb
jmp
sbb
jo
das
fimuls
jecxz
dec
mov
xchg
push
out
xchg
push
nop
sub
vcvtss2si
movsl
cmovb
hlt
pushf
inc
xchg
les
mov
push
fld
pop
imul
sbb
test
xchg
xor
in
aas
jae
popf
mov
push
or
xchg
les
das
gs
mov
xor
fnstcw
in
push
nop
ds
xchg
rol
testb
cli
psrad
fldenv
sahf
es
push
mov
outsl
pop
cld
push
insl
pop
mov
adc
aad
stc
mov
mov
loop
in
rclb
dec
das
aam
and
es
jle
push
mov
mov
les
push
test
fsubrs
jbe
adc
and
sub
push
aaa
adc
jmp
popl
fisubrs
sbb
jmp
pop
aam
cwtl
lods
mov
mov
or
fmull
movsl
in
and
xchg
pop
iret
mov
push
pop
jno
xchg
or
iret
xor
bound
xor
mov
fcomps
fiadds
fists
sbb
popl
or
shrb
sbb
test
jae
mov
in
adc
idivb
push
jne
aam
stc
dec
rcrl
cld
mov
xor
pop
divb
outsl
cmp
adc
jae
sub
int3
mov
insb
sub
subl
mov
mov
sub
push
aad
int3
aaa
movsb
loop
mov
lds
out
dec
adc
fsubl
mov
jmp
icebp
pushf
ja
data16
sbbl
setl
mov
test
pop
inc
out
mov
or
mov
icebp
sub
ja
adc
cwtl
in
insl
mov
push
loop
mov
adc
sub
js
rorl
push
pop
pusha
hlt
inc
ds
lcall
dec
cmp
inc
xor
addr16
jb
mov
mov
xor
adc
ficoml
movsb
xchg
adc
jp
lock
push
sub
fs
xchg
push
xchg
test
xchg
xchg
cld
inc
dec
je
out
mov
mov
or
jno
das
int
or
daa
dec
ja
mov
movsb
add
jbe
ss
bound
jbe
aam
ja
mov
xorb
push
add
daa
orl
inc
or
lret
in
mov
dec
cmp
xor
jae
inc
and
insb
xor
mov
fidivrl
ds
decl
mov
lods
mov
cmpsl
and
addr16
shl
mov
mov
lahf
pop
xchg
data16
cmp
in
lods
daa
add
je
sti
inc
ret
dec
pop
stos
pusha
dec
sbb
and
mov
imul
in
cli
mov
loopne,pn
sbb
and
or
stos
stos
adc
adc
sbb
xchg
mov
dec
ljmp
add
ffree
push
fwait
fs
sub
dec
je
dec
js
stos
ret
out
iret
inc
lods
roll
aad
push
adc
adc
shll
xor
xor
mov
jp
pop
jle
add
lret
mov
loop
mov
lods
mov
xor
cmc
hlt
and
jecxz
mov
sbb
bound
scas
xchg
fwait
cmp
out
sub
mov
lods
pop
aas
mov
ret
lcall
cmp
sbb
xor
in
sbb
cmpsb
add
mov
xorl
push
nop
inc
or
xchg
jl
cmp
aad
andb
xlat
iret
sbb
and
or
push
add
loop
in
xor
cmp
cmp
es
lds
bound
push
sbb
pop
push
pushf
mov
mov
xor
cmp
pop
mov
mov
insl
daa
mov
pop
lock
cmp
into
sub
leave
test
dec
pop
xor
and
repnz
std
addr16
roll
push
jl
xor
jae
xchg
sti
mov
lock
sub
dec
pop
test
int3
ss
dec
mov
lods
loop
out
jb
lret
xlat
mov
lahf
cmp
sti
and
lods
xchg
push
jae
jae
jle
scas
dec
sub
aad
lods
outsb
aas
sti
stc
sub
and
sarb
xor
xor
xchg
jp
bound
dec
aaa
fld
push
mov
loope
mov
mov
out
test
jmp
cmp
jmp
xlat
mov
push
out
fwait
push
push
mov
pop
test
xchg
pop
les
jecxz
push
iret
stc
xchg
dec
out
imul
dec
and
cmp
mov
push
arpl
inc
aaa
cmpl
sub
sub
pop
xor
mov
jmp
lret
mov
cltd
xchg
dec
cmpsb
and
rcll
into
test
and
inc
sti
xchg
test
iret
in
roll
mov
or
sub
cmp
fisubl
stos
push
adc
inc
sbb
mov
into
jo
lock
or
xchg
jp
stos
icebp
xor
cs
xor
mov
mov
pop
xor
js
sarl
cli
test
outsb
fbstp
mov
cmpsb
mov
push
mov
mov
sarb
sub
xlat
cmpb
dec
mov
pushf
sub
dec
rcrl
add
scas
jmp
cmp
push
cli
jbe
and
repz
pushf
aas
fistpll
ljmp
push
mov
and
loop
shll
mov
fdivs
aaa
add
push
mov
sbb
or
jno
inc
xchg
mov
push
mov
add
cltd
fbstp
mov
jns
stos
xor
dec
sbb
imul
xchg
dec
imull
xchg
sbb
movsb
xchg
ds
jmp
out
inc
cmc
iret
fisttpl
fldcw
aaa
mov
and
pusha
and
push
fs
pop
and
stos
into
xchg
xchg
mov
push
enter
ja
add
mov
imul
sahf
repnz
rorl
pusha
and
xlat
cmp
push
adc
std
cmpb
shrb
push
aas
imul
mov
clc
dec
pop
imul
packuswb
mov
jp
or
xchg
jg
xchg
ds
ja
xor
sub
add
xor
dec
cmp
out
dec
push
repz
xchg
mov
leave
add
dec
icebp
fldenv
xchg
add
cltd
lret
insl
push
scas
insb
xchg
cmp
lret
lea
sub
dec
out
test
out
adc
mov
sub
and
clc
push
jo
pop
dec
inc
pusha
cmp
pop
push
xlat
loop
pop
lcall
or
jmp
ret
adc
mov
cmc
and
pop
and
out
pop
scas
adc
xor
call
lret
scas
aad
js
jbe
iret
addr16
and
xor
pushf
int3
sbb
sub
scas
sbb
mov
mov
data16
insb
pop
inc
mov
add
repnz
push
mov
xorb
lods
int3
mov
pop
xchg
add
or
and
sti
les
jnp
rcrl
fs
lcall
inc
ja
inc
add
iret
push
imul
lds
mov
insl
mov
mov
xchg
add
orl
mov
xchg
cmp
in
cwtl
aas
sbb
cld
add
cld
ret
lea
push
push
xchg
fdivrs
mov
and
sub
imul
xlat
fstpl
imul
mov
xchg
xorb
sahf
inc
idivl
sub
imul
mov
lahf
lds
mov
fcmove
mov
nop
lods
adc
and
mov
cmp
das
jb
sub
sarl
lret
in
push
add
push
and
sub
out
jb
add
incl
repnz
lods
pop
inc
pop
ss
dec
and
addl
add
pop
mov
cld
popa
mov
and
aad
or
fimull
or
jp
arpl
mov
mov
cmpb
xor
jns
inc
mov
sahf
adc
pusha
adc
or
popa
dec
pop
dec
rorl
in
aaa
into
mov
mov
inc
sbb
sbb
iret
cmp
fbstp
cmp
enter
mov
scas
into
iret
mov
into
or
xor
mov
inc
insb
sub
sbb
push
jns
jge
rcrl
pop
push
cmp
clc
stc
xor
lods
mov
jmp
sub
stc
add
xchg
inc
mov
clc
bound
jnp
adc
js
and
outsl
mov
xchg
or
mov
adc
mov
mov
lret
xchg
es
jmp
dec
xchg
and
sbb
movsl
xchg
inc
dec
and
or
adc
int3
jp
decb
je
fistps
js
aad
aam
popa
cmp
xor
cmpsb
or
sahf
cmc
jae
testb
mov
mov
repnz
in
sbb
or
aas
divb
lods
xor
cmp
into
lock
xchg
add
cmp
inc
add
testb
idivl
mov
out
mov
or
xor
insb
fldcw
sbb
callw
outsl
sub
mov
jl
cli
jae
stc
mov
xor
or
mov
scas
push
rcl
xchg
nop
jo
push
dec
add
mov
sbb
and
test
mov
jecxz
outsl
insb
aaa
xor
lcall
je
loop
adc
lock
test
add
fwait
and
es
or
or
xchg
push
out
imul
inc
sahf
or
icebp
mov
andb
and
xor
push
sub
popa
mov
repz
idiv
pop
mov
test
mov
das
mov
jnp
dec
sbb
gs
nop
xchg
push
dec
push
mov
mov
imul
sbbb
xchg
and
inc
ret
mov
mov
rcl
cltd
push
jns
add
pop
inc
fdivrl
rcll
cvttps2pi
dec
popa
fs
xor
testb
add
jge
jmp
inc
adc
ret
imul
jmp
pop
lret
or
jnp
out
out
lret
sub
test
adcl
jbe,pn
hlt
div
popf
push
imul
pop
aam
mov
push
cld
pop
cmp
pop
and
out
add
and
push
dec
andb
das
fsubr
es
sbb
insl
ja
cmpb
mov
dec
movsb
lret
and
mov
jmp
push
mov
mov
mov
mov
je
sub
fidivl
add
jl
xor
jmp
dec
cmpsb
ljmp
sbb
add
mov
cmp
dec
inc
pop
mov
sbb
movsl
jp
sbb
xchg
adcb
ss
and
jg
bound
mov
gs
cwtl
cmc
sub
cmpsl
inc
xor
mov
push
adc
call
inc
cmp
push
stos
je
mov
adcl
jnp
out
inc
addr16
xchg
js
ret
inc
mov
mov
jmp
sub
ds
in
or
in
adc
add
dec
adc
or
sbb
dec
leave
or
inc
inc
ds
sbb
outsl
xchg
in
sub
clc
inc
ja
lea
movsb
add
xor
xchg
push
dec
popf
add
xchg
daa
std
mov
ret
mov
adc
outsb
inc
ret
push
repnz
pop
xchg
push
push
cmpb
insb
movsl
lret
sbb
adc
lret
adc
inc
stos
mov
push
scas
push
cmp
ja
pand
cmpsb
mov
jp
int
fiadds
jae
jp
mov
xchg
les
fimull
repz
int3
gs
pop
or
repz
out
cmp
jo
in
aad
xchg
hlt
iret
sub
test
loope
rcl
adc
icebp
cmp
jns
inc
in
mov
dec
sub
push
adc
mov
lods
test
js
test
inc
xchg
jecxz
adc
jmp
cmpsb
jg
pop
sub
fidivl
mov
mov
mov
sarl
push
repnz
pop
mov
cmpsb
jle
push
inc
jnp
ja
jge
push
push
std
xor
push
mov
xchg
jp
cmpb
adc
jecxz
sahf
cmp
pop
out
leave
mov
mov
pop
mov
int3
aam
adc
inc
cmp
pop
scas
pop
push
insb
popf
insb
add
or
inc
shll
int3
sub
pop
inc
mov
push
iret
sarl
fsubl
cmp
or
lret
xchg
mov
shll
dec
pusha
dec
rcrl
cmp
rcrb
inc
add
ja
int3
je
or
test
inc
xlat
popa
sbb
xor
push
push
jge
dec
les
adc
jp
out
xor
pop
push
pop
insb
data16
xor
gs
add
dec
leave
fwait
and
aaa
inc
test
and
dec
mov
imul
sbbl
xor
cmp
jo
clc
inc
pop
into
dec
or
out
ret
jae
sub
mov
push
ljmp
sub
mov
mov
lods
mov
and
sub
lea
pop
dec
xor
idivl
sub
mov
cmp
cld
scas
push
pop
push
test
or
mov
pop
adc
xor
into
jnp
inc
sar
test
test
sarl
pop
loop
jecxz
mov
push
and
jb
lret
xchg
pop
js
std
cltd
sbb
outsl
scas
out
orl
fmuls
aam
ret
adc
sub
jl
daa
mov
inc
stc
das
movzwl
pop
pop
ss
movsb
mov
or
mov
jno,pt
mov
sub
lret
fs
lcall
lahf
mov
addl
and
imul
sahf
loopne
xor
mov
lock
pop
iret
rcr
scas
xchg
loope,pn
xorl
dec
test
xlat
add
orl
push
sub
lods
mov
lods
mov
push
mov
cmp
and
fistps
orb
out
push
jl
mov
sbbl
or
sub
rolb
icebp
insb
mov
mov
lret
ja
aas
jl
rcll
inc
dec
pusha
dec
push
mov
dec
out
fiaddl
inc
add
ja
adc
fiaddl
mov
stc
cs
outsl
popa
adc
shrl
call
mov
adc
pop
mov
fisttps
movsl
push
dec
cmp
mov
leave
lcall
andb
sbb
pop
test
insl
pushf
xchg
pusha
lea
repnz
test
fcoml
pop
pop
fimull
jo
jmp
cmc
dec
mov
dec
jg
cmp
push
pop
push
mov
sub
sub
xor
jo
sub
push
sub
aaa
fldenv
ss
test
lds
cmp
repz
push
push
xorl
enter
in
adc
into
sub
push
daa
test
fwait
pop
pop
jbe
aam
mov
dec
pusha
shlb
sbb
mov
xchg
in
mov
push
inc
incb
jbe
mov
jns,pn
dec
fcmovnu
cmp
fmull
adc
jl
popa
ja
pushf
jl
divb
or
mov
cmp
cmp
cmp
lret
adc
cmp
fwait
and
add
mov
sahf
add
test
dec
and
inc
mov
mov
bound
into
inc
shlb
cmp
add
pop
pop
enter
xchg
jae
lock
lret
divb
sti
cmpsl
jne
std
sub
mov
xchg
mov
fwait
cmpsb
stos
add
in
pop
sub
push
sbb
push
mov
push
sub
ss
ret
adc
imul
adc
fucomip
xchg
aad
daa
sbb
push
pop
push
mov
das
mov
mov
hlt
mov
jle
rcll
lret
mov
or
add
sarb
push
inc
add
jo
stc
sub
dec
fld
cmp
pop
ficoml
sbb
addr16
lcall
xchg
pop
movsl
xchg
xchg
cmp
fisttpl
leave
les
sbb
cmp
ror
sahf
cmpl
lret
push
fimull
mov
inc
and
scas
or
mov
mov
hlt
mov
mov
pop
pop
leave
sbb
lods
stos
ja
push
mov
outsl
dec
sbb
shlb
jns
pushf
mov
mov
mov
cmp
popf
mov
inc
bound
std
and
lahf
fdivl
enter
adc
jle
cli
xchg
jl
outsl
xor
mov
pop
inc
in
mov
rep
es
jae
push
int
test
xor
popa
cmp
shlb
sbb
mov
in
clc
sub
mov
dec
fld
add
pop
xchg
dec
loop
pop
movsl
jle
insl
mov
xchg
inc
xchg
push
movsl
xchg
xchg
cmp
fisttpl
leave
pop
push
incl
cmp
shll
cwtl
adc
xchg
aam
stos
mov
add
daa
jno
pop
xchg
jbe
bound
into
inc
je
mov
push
es
adc
repz
jb
mov
dec
cs
mov
dec
orb
mov
pop
cmp
aas
jg
sub
xchg
ja
jge
push
mov
and
cmc
clc
std
inc
jo
mov
mov
sbb
cs
in
shlb
stos
mov
xlat
xor
mov
sbb
sbb
cli
scas
sarb
js
sub
cmc
dec
outsl
xor
dec
mov
xchg
and
pop
mov
test
fldenv
orb
insb
aam
add
xchg
popa
and
lds
cld
jne
pop
mov
insb
push
pop
pmaddwd
push
lea
or
repz
rclb
repz
xchg
aas
mov
and
add
ror
adc
scas
pop
push
aam
test
sarl
aaa
icebp
jnp
dec
push
inc
fsts
loope
inc
jae
mov
or
ror
jno
cltd
jae
mov
inc
fsubl
das
jecxz
movsb
repnz
sub
aas
insb
add
jl
sub
ret
adc
cmp
sbb
push
jl
mov
jnp
and
xor
adc
jecxz
mov
rcrl
int
call
pop
ja
mov
dec
cmpb
int
ret
adc
aad
jg
imul
mov
into
adc
push
lds
cmp
popa
inc
cli
adc
cli
add
insb
in
inc
mov
inc
stos
xchg
push
mov
fmuls
dec
ficoml
inc
outsb
xor
cwtl
jns
icebp
or
dec
sbbl
mov
add
fnstcw
mov
mov
mov
bnd
sahf
lods
lods
xlat
mov
outsb
push
sbb
into
cwtl
sub
das
int3
lret
mov
dec
lret
inc
jo
data16
push
and
stos
push
gs
jbe
test
push
push
mov
leave
mov
xchg
shl
mov
pop
bound
lods
jle
int
cmp
nop
pop
out
xchg
and
jb
stos
sar
test
push
mov
and
test
xchg
adc
push
mov
xchg
test
add
push
push
enter
out
ficoms
sbb
dec
push
sbb
inc
xabort
cwtl
xchg
mov
inc
std
xchg
das
stc
pop
in
sbb
xchg
add
into
ret
pushf
in
enter
dec
aas
jae
dec
fildll
sbb
fsub
xchg
je
repnz
push
lahf
in
xor
or
xchg
push
xchg
or
push
leave
mov
jo
hlt
testb
scas
xchg
ret
xlat
cmpb
push
push
aam
mov
insb
add
out
xchg
enter
pop
insl
sub
dec
aad
fiadds
push
push
push
enter
repnz
or
ret
mov
jnp
or
add
inc
xchg
pop
mov
cmc
dec
and
add
add
add
xor
sbb
dec
inc
add
test
stc
add
fstps
ffreep
cltd
adc
mov
aad
fistl
mov
adc
outsl
outsb
out
aas
adc
dec
test
sti
pop
mov
adcl
xor
inc
cld
cltd
mov
test
xchg
loop
cwtl
jge
xchg
les
xor
loop
pushf
adc
in
xchg
jo
sub
movsl
lret
pop
cmpsl
adc
xor
clc
cmpb
adcl
movsl
and
xchg
pusha
orb
dec
sbb
adc
inc
je
mov
lods
insl
jno
mov
mov
pop
push
mov
ret
xchg
mov
or
pop
add
or
fisubs
adc
xchg
in
mov
cwtl
inc
xchg
stos
or
mov
fcomps
and
shl
mov
jbe
or
into
in
ss
mov
mov
push
out
outsb
aaa
ds
mov
arpl
mov
adc
xchg
dec
add
inc
adc
loop
rolb
xlat
fcompl
rol
loop
test
test
sbb
outsb
and
sahf
aad
les
addl
sbb
and
fdivl
je
loope
fwait
xchg
dec
push
stos
pusha
pusha
arpl
pop
testb
sbb
jle
dec
add
and
push
ret
int
inc
xor
inc
or
cmp
dec
push
lock
stos
inc
lret
push
loopne
mov
pop
inc
mov
or
mov
or
lods
mov
inc
cmp
xchg
or
push
xchg
push
scas
dec
push
int3
in
adc
push
das
and
mov
xchg
aam
movsl
test
and
dec
in
enter
push
mov
inc
add
and
arpl
add
sub
sbb
out
fists
pushf
pop
push
cmpsb
xchg
cmc
inc
cmpsb
fwait
mov
rcr
leave
sub
cltd
aam
cmp
cli
jge
loopne
repnz
push
stc
xchg
sub
daa
jne
ljmp
and
je
pop
imul
fldenv
push
pop
inc
outsb
sbb
test
adc
push
rcrb
xor
mov
movsb
or
jae
mov
arpl
lret
mov
cmp
sbb
inc
jae
or
cli
push
mov
dec
arpl
add
sbb
inc
and
sbb
dec
mov
pushf
dec
lret
dec
int3
shlb
call
cmp
test
dec
and
dec
dec
inc
enter
adc
repnz
cli
xchg
nopl
pop
adc
clc
dec
test
mov
sub
inc
push
sub
mov
loopne
shl
je
loopne
fs
or
sbb
lcall
adc
outsl
push
notl
inc
mov
xchg
adc
repnz
mov
xchg
and
subl
mov
xchg
sub
lods
ljmp
mov
push
out
xchg
sbb
xor
jmp
xchg
test
lock
lds
add
dec
int
mov
push
inc
lea
xor
inc
es
xor
inc
or
test
loopne
push
push
loope
mov
in
inc
push
test
mov
stos
pushf
popf
pop
or
pop
imul
dec
ret
or
mov
into
xchg
cmp
mov
sbb
inc
xchg
scas
mov
pop
adc
mov
push
and
cltd
xchg
push
jmp
cmp
mov
dec
mov
mov
or
pop
lret
mov
clc
pop
popf
in
out
adc
mov
jnp
adc
push
xor
outsl
jne
aam
add
inc
sbb
push
repnz
adc
sub
rcr
mov
in
lcall
cmp
stc
push
xor
js
xchg
xor
mov
push
pusha
xchg
jno
xor
aam
negl
out
lahf
fsts
jl
outsb
xchg
rcl
push
cltd
sbb
nop
in
add
or
xchg
inc
sti
xchg
fstpt
cmp
push
sbb
ret
fcmovbe
mov
addl
fisttpl
and
inc
rcrb
and
push
daa
in
fsts
mov
je
repz
loope
hlt
push
add
ret
pop
aam
push
test
cmp
leave
xchg
sub
pushf
inc
sbb
lea
ja
dec
std
xchg
lahf
adcb
push
jg
jbe
push
mov
fnstcw
test
xor
popf
jb
popa
sub
fstpt
les
and
push
nop
incl
cmp
loope
std
fadd
imul
jecxz
xorl
outsl
arpl
push
es
push
xchg
lcall
cmpsb
mov
jl
ljmp
xchg
dec
test
lods
fstl
adc
ret
mov
xchg
push
outsl
cmp
sub
cmpb
movl
outsb
mov
hlt
test
enter
fwait
jno
adc
in
sub
aaa
in
or
popa
mov
fnstsw
jns
inc
sbb
mov
popf
out
mov
adc
pop
push
mov
xchg
adc
js
sbb
pushf
aad
cmp
mov
mov
add
addr16
decl
jb
add
arpl
lcall
and
xor
cwtl
mov
pop
fs
mov
mov
jno
stos
jge
jne
outsb
dec
dec
sub
out
out
test
sub
xor
xchg
mov
push
xchg
mov
mov
pop
xchg
sbb
cmpsb
adc
ror
pop
mov
pop
das
mov
in
pop
pop
sti
fs
cmp
nop
mov
stos
mov
ret
dec
sub
dec
sub
add
pop
xchg
xor
or
xor
adc
lds
rol
pop
pop
out
cmp
ret
outsb
sub
aaa
and
hlt
imul
add
icebp
fs
add
xor
jmp
mov
pmaddwd
nop
ror
arpl
pop
lods
sbb
sbb
cmp
popa
jp
sbb
out
call
mov
jns
cwtl
xchg
jecxz
adc
out
mov
fidivs
xchg
push
sbb
push
stos
jmp
ds
dec
add
imul
pop
lahf
and
test
adc
dec
cmp
sti
ds
enter
xlat
imul
data16
and
jne
xchg
cmp
cltd
das
jbe
dec
aaa
imul
xchg
xor
and
idiv
push
inc
push
jns
cmpsb
ret
mov
loop
adc
lahf
into
rcr
cltd
mov
dec
sub
sbb
rdpmc
popf
jo
pop
sbb
sub
and
lahf
mov
sub
iret
stos
lahf
jge
fisubs
imulb
mov
pushf
ficoml
mov
jnp
rclb
mov
nop
or
mov
orl
push
movsl
into
rol
xor
enter
dec
lods
sbb
das
jo
and
mov
cmp
and
std
cmp
push
lds
insb
aas
out
data16
imul
add
imul
push
rcll
fisubrl
test
divl
push
ficomps
xchg
push
idivl
cmc
icebp
hlt
movsb
cltd
jle
dec
out
mov
mov
hlt
adc
and
shl
mov
call
pop
popa
imulb
add
inc
sti
or
setno
rorb
ss
push
adc
and
adcb
bound
jae
daa
jle
stc
sbb
inc
jl
fwait
ret
fsts
or
mov
mov
sbb
push
fcmovnbe
sbb
lahf
jecxz,pt
push
fdivl
cmp
push
sbb
sub
push
loop
jp
lret
add
mov
leave
cwtl
push
and
jp
sub
fisttpll
inc
jle
jp
scas
sub
cmc
es
loopne
enter
xchg
jl
dec
sub
jb
mov
mov
xchg
or
mov
lock
pop
sbb
repz
dec
or
sbb
pop
out
or
jne
jbe
sub
rol
out
jnp
sub
mov
dec
flds
mov
mov
xchg
aas
cmp
sti
add
shlb
idivb
das
or
inc
cwtl
and
push
arpl
or
pmaxub
pop
xlat
mov
sbb
sti
mov
nop
jle
shrb
fucomi
fiadds
jb
pop
not
or
pop
jecxz
add
adc
cmp
out
jno
movsl
jl
adc
imul
mov
jp
movsl
pop
inc
jmp
lret
dec
ficompl
sbb
negl
mov
mov
repz
addr16
xor
cmpsl
cmpsb
inc
pop
mov
push
rcrb
loope
push
push
mov
imul
xchg
inc
cmp
mov
repnz
adc
sbb
orl
xchg
push
xchg
scas
sub
mov
iret
jb,pn
enter
std
test
movsb
insb
ret
sub
aad
lock
and
mov
test
rorb
aad
imul
push
jbe
out
mov
ret
mov
xor
add
cmpsb
out
arpl
lret
cltd
idiv
fdivrl
cwtl
push
or
jecxz
pop
and
loope
jbe
and
sbb
mov
fcompl
add
pop
test
cmp
xor
inc
clc
mov
test
xor
test
lds
sahf
inc
fmull
aad
lods
sub
icebp
fldt
xchg
jecxz
out
dec
or
shll
jp
aaa
pusha
or
jb
push
jl,pn
sbb
stos
movsb
repz
jns
pminsw
or
xor
data16
fistpl
ret
cmpsb
pop
out
sbb
inc
add
dec
push
lret
ret
andl
loop
fmul
incl
fisttpll
push
ret
aam
int3
dec
inc
fwait
mov
pop
push
inc
xor
iret
xchg
cs
hlt
fcmove
scas
fnstenv
xchg
push
mov
adc
fbld
add
sbbb
pushf
daa
xor
nop
insb
xchg
fucomip
mov
sbb
stos
bound
loop
mov
cmp
push
pop
js
jle
and
cmp
bound
adc
icebp
faddl
sbb
dec
pushf
push
js
jl
cmp
push
ljmp
pop
outsb
out
movsb
inc
out
mov
push
xchg
arpl
push
push
inc
lds
and
decb
push
in
arpl
push
repz
cmp
jmp
jne
test
inc
cmp
xchg
pop
shll
jg
xor
shlb
add
xchg
fcompl
jmp
mov
add
rep
mov
add
push
mov
xchg
push
push
adc
cmp
push
jge
aam
or
push
mov
pop
aad
scas
xchg
mov
aad
xchg
add
push
inc
pop
mov
mov
cmpsl
scas
outsl
xchg
cmp
not
lock
lahf
fstps
xor
jne
xchg
fsub
ffreep
test
adc
sbb
and
xchg
jecxz
adc
dec
stos
mov
adc
add
es
and
ja
cwtl
test
push
out
sti
movb
js
mov
call
xor
mov
in
mov
clc
mov
test
in
dec
cmp
jbe
sbb
mov
push
sub
jae
out
add
jo
lods
and
push
adc
stos
or
mov
add
pop
cmpsl
cwtl
out
insb
in
cmp
xchg
loop
sahf
in
xchg
mov
repnz
sub
rol
cmc
cmc
inc
scas
out
jnp
or
jae
lods
push
sub
sbb
mov
cld
pop
loop
and
inc
fwait
xchg
inc
ficoml
xor
mov
inc
lods
xchg
sub
and
jmp
mov
insl
insb
das
mov
rclb
sub
sbb
adc
sub
sbb
sbb
test
sub
xchg
dec
lret
mov
pop
pop
mov
pushf
pop
xor
push
add
bnd
or
fmuls
push
jne
xchg
xchg
inc
jmp
jmp
mov
int
daa
test
rolb
mov
ljmp
inc
pop
add
cmpsl
jno
subl
in
push
mov
sub
sub
push
in
stc
ljmp
sbb
dec
sbb
insl
cld
sub
lret
gs
std
mov
mov
scas
push
sub
fnsave
dec
int
repnz
cmc
or
and
ficoml
mov
mov
and
xchg
xor
imul
or
mov
cwtl
push
movsl
rcrl
in
jg
mov
sbb
test
nop
pop
cmp
outsl
and
lret
inc
sub
sahf
add
pushf
pop
sub
xor
lcall
mov
jmp
xor
test
mov
dec
js
xor
cmp
mov
jns
add
sub
inc
jmp
sub
pusha
js
popa
lea
cmp
call
mov
pop
jns
and
add
shl
ljmp
push
ja
xchg
in
jmp
stos
sub
and
fbld
pop
inc
jns
lret
cvtdq2ps
outsb
call
shll
sbb
xchg
das
fsubs
sbb
inc
or
push
sbb
out
xchg
scas
push
push
and
cs
stc
add
addr16
cmpsl
fwait
dec
sti
sub
les
jb
aam
aaa
insl
or
lea
pop
int3
cmp
inc
fimull
fwait
pop
mov
in
loop
pushf
shlb
mov
xor
adcl
xchg
lock
or
addr16
dec
push
mov
add
cmp
mov
insl
imul
divl
lret
jg
mov
mov
cmp
out
pop
aad
mov
xchg
call
add
push
mov
push
lods
in
xchg
pop
dec
dec
dec
outsl
pop
cmpsl
add
hlt
inc
xor
xchg
or
sbb
dec
pop
xor
insb
cld
pop
cmpsl
movsb
and
fsts
rcrb
stos
cmp
inc
mov
lcall
jbe
xor
jl
xchg
ficomps
cmc
mov
mov
cmp
lds
or
push
dec
roll
data16
mov
cwtl
and
mov
lcall
adc
cwtl
mov
cmpsb
mov
add
lret
jnp
pop
adc
xchg
enter
stc
bound
inc
out
mov
popf
jle
inc
neg
imul
fcom
adc
push
test
stc
inc
movsb
sub
jge
mov
push
mov
mov
mov
push
push
pop
movsb
fiadds
loopne,pn
mov
mov
cmpsb
jne
stos
in
std
jns
xor
mov
pop
movsl
stos
jmp
inc
add
dec
test
cmc
hlt
std
mov
push
or
dec
mov
mov
pop
js
mov
faddl
or
push
push
fcomps
std
jae
or
and
adc
cmp
push
lock
sbb
cmp
out
xchg
mov
jb
in
lods
ljmp
xchg
cmpsb
popa
jge
cmp
mov
hlt
sub
inc
cmp
dec
adc
mov
push
shll
mov
call
xchg
pop
aaa
repnz
push
mov
jmp
insl
dec
add
xor
pusha
jecxz
idivl
xlat
mov
mov
call
lret
addr16
mov
popa
jmp
cmpb
pop
add
add
aas
cmpsl
cwtl
pop
push
push
mov
fwait
jl
ficompl
popf
das
xchg
stc
jne
inc
inc
push
jp
ss
jmp
test
sahf
push
stc
in
cmpsb
test
lods
bound
jo
add
mov
mov
inc
stos
pop
and
inc
mov
fcoml
rolb
cltd
lods
adc
out
xor
xor
jmp
sbb
and
or
xchg
pop
pop
lock
mov
stos
sbb
stos
jl
jbe
aad
arpl
xlat
cwtl
or
xor
pop
cmp
push
jnp
pop
push
and
rcr
outsb
push
xchg
subb
rolb
jne
or
adcb
or
mov
xchg
sahf
enter
dec
sbb
jns
imul
lahf
mov
ss
lods
add
adc
pushf
mov
jns
jnp
push
out
outsb
aaa
mov
pop
sub
cmpb
sub
adc
test
inc
aad
out
les
mov
jecxz
jbe
jecxz
dec
jne
fdivrs
jle
in
jmp
shrl
lahf
add
cmpb
and
xor
leave
orl
pop
xchg
sub
jecxz
xor
into
inc
mov
xchg
in
sbb
out
inc
mov
sub
mov
or
repz
cwtl
enter
cld
arpl
popf
sbb
lods
call
stc
scas
push
and
lods
sbb
popf
cmpb
jnp
scas
cmp
ficomps
pop
jno
cltd
pop
loope
cld
pop
fs
jo
test
dec
repnz
sbb
popa
jnp
and
sbbb
mov
xor
test
xor
xor
arpl
insl
cmp
sti
outsb
mov
mov
or
cmp
cs
add
jmp
rolb
test
aad
in
mov
push
mov
jno
fld
das
or
adc
mov
stc
jge
imull
xor
es
xor
ss
fldenv
les
sti
xchg
add
dec
shrl
scas
scas
bound
div
aaa
cmp
jmp
cmp
cmp
fiaddl
adc
mov
mov
pop
loop
dec
adc
test
lock
cmp
adc
cmpsl
dec
xchg
pusha
push
lds
shll
and
int3
fadds
sub
cwtl
pop
mov
pop
jl
xor
popf
add
push
adc
mov
jle
xchg
ret
ja
mov
adcl
iret
ja
popf
mov
lret
lds
adc
pop
std
sti
outsb
jnp
xor
into
mov
inc
dec
into
mov
fs
push
xor
and
jnp
andl
pop
into
negb
sbbl
stos
gs
addr16
sahf
cltd
call
push
and
ror
js
sysret
xor
loope
outsl
adc
daa
int
xor
mov
jle
sbb
dec
mov
add
and
and
pop
ja
xchg
into
loopne
mov
lret
push
loopne
add
pop
xor
mov
mov
icebp
jo
jns
pop
sbb
aad
in
or
cmp
rorl
in
lds
xor
aas
movsb
adc
mov
nop
sbb
loop
jmp
mov
shlb
cmp
xchg
daa
fsqrt
lret
jmp
mov
xchg
cld
sbb
ja
or
les
sbb
pop
jl
test
push
repz
test
pop
xchg
pop
cmpsb
ja
mov
pop
das
mov
inc
mov
sbb
icebp
jg
pushl
xorb
jecxz
lods
mov
cwtl
push
push
les
clc
mov
cltd
shr
je
adc
mov
shlb
cmp
mov
decl
vmwrite
adc
mov
mov
cmp
inc
add
adc
and
ljmp
jae
lds
sub
jp
pop
out
jo
int3
sbb
cld
gs
out
addb
rorl
cmpsb
cmc
jnp
stos
add
adc
ljmp
add
jbe
dec
icebp
insb
adc
sub
int
pop
paddusw
ljmp
iret
cwtl
mov
movsw
inc
shlb
push
or
mov
mov
mov
loopne
or
mov
imulb
pop
rolb
mov
popf
sbb
mov
scas
adc
or
xor
repnz
inc
jno
test
add
and
test
aaa
xor
loopne
ja
cld
or
lahf
shlb
xor
sub
loope
les
pop
jl
std
cs
and
stc
pop
xchg
cld
cmp
jnp
push
gs
cmpsb
outsl
add
out
pop
loopne
mov
pusha
ficoms
pusha
adc
gs
inc
sbb
push
repnz
mov
sub
leave
fcmovne
mov
pop
lret
mov
inc
mov
mov
inc
xor
dec
push
icebp
movsb
push
mov
sahf
adc
sub
jmp
inc
cltd
cwtl
iret
loop
and
mov
rclb
jnp
fnstsw
mov
jne
jle
mov
pop
inc
fxch
lods
or
cmp
into
imul
clc
in
mov
shrb
or
xor
sbb
mov
cli
cwtl
aad
lret
pop
cmp
mov
pop
cmp
jnp
and
push
aas
ja
pop
leave
and
in
aam
js
xor
jle
sub
out
or
movsb
adc
pop
call
jecxz
aam
test
shll
mov
popa
aam
mov
bound
repnz
das
loope
pop
outsb
or
cmpsb
dec
xchg
out
sbb
insb
mov
test
popf
dec
push
inc
or
sub
subl
aam
mov
xchg
sbbl
dec
xor
mov
loopne
mov
mov
mov
push
xor
mov
jb
pushf
aam
out
and
mov
js
sar
jecxz
stc
rcrl
xlat
xchg
xchg
rclb
dec
push
std
add
addb
sahf
jo
jne
leave
mov
cmp
movsl
mov
decl
cmp
cli
xchg
lret
push
xchg
mov
jo
adc
repz
mov
xchg
mov
add
push
adc
push
loope
jne
push
sbb
sbb
dec
or
ret
jns
xor
xor
mov
sub
rcrb
movsb
std
and
roll
jb
loop
aad
cld
jns
inc
stc
outsb
xor
dec
jns
fsubrs
adc
jne
sbb
in
orl
mov
adc
or
sub
cmp
pop
adc
loop
inc
inc
add
mov
pushl
lea
cmpsl
cmpsb
imul
sub
daa
imul
aaa
dec
jbe
add
js
sahf
mov
push
mov
jns
test
jb
sub
je
push
ret
dec
addb
add
pop
pop
hlt
imul
mov
leave
lret
addr16
popf
adc
call
lea
sbb
je
stos
cs
clc
lcall
icebp
adc
popf
push
test
test
in
in
mov
sbb
ds
aaa
imul
mov
push
pop
or
sub
xchg
ja
int3
xor
shll
sbb
mov
std
test
pop
scas
fcoml
ficoml
jp
stos
mov
cmpsb
stos
jmp
bnd
lret
lea
mov
and
push
fcomps
jl
lret
pop
int3
adcb
cmp
inc
mov
xchg
push
outsl
cmp
jecxz
xor
cs
mov
lret
push
insb
lods
subb
xor
mov
pop
mov
outsl
lods
inc
mov
jno
cmp
add
sbb
out
outsb
lret
icebp
mov
mov
scas
mov
shll
clc
dec
stc
jle
push
test
jecxz
nop
mov
sbb
jne
loope
insl
inc
sahf
sbb
add
lret
subl
jnp
in
movl
insb
lret
scas
movsb
les
roll
xor
sti
jg
jmp
pop
int
nop
push
add
jbe
jmp
sbb
mov
aas
sbb
push
cmpsl
add
sub
jmp
xchg
mov
mov
ficoml
sbb
fsub
jo
push
jge
imul
sarl
fs
into
push
jg
or
sub
mov
xchg
push
mov
push
lods
test
sub
cmp
gs
lret
es
int3
xlat
push
popa
mov
dec
lds
mul
pop
int3
out
es
movsb
add
aaa
xchg
lods
out
bound
jmp
in
jmp
aas
frstor
mov
insb
jge
mov
adc
jecxz
and
add
xor
repnz
imul
pop
repnz
or
cmp
mov
aam
dec
cld
cmp
dec
pop
push
xchg
enter
mov
and
push
jnp
jmp
inc
add
pop
or
shlb
pop
outsl
sbb
mov
jmp
scas
xor
scas
pusha
or
test
jae
sub
aas
xchg
popa
mov
sbbl
jbe
imul
xlat
nop
mov
mov
pop
rcll
daa
mov
xor
sbb
jnp
insl
push
test
loopne
stos
sub
outsl
jmp
inc
or
pop
lods
insb
xchg
fnstenv
imul
inc
jmp
and
jl
jle
add
imul
xchg
xor
xchg
push
or
or
sub
lods
xchg
shll
xchg
mov
xchg
rcrl
inc
mov
xchg
sub
mov
push
dec
add
roll
sbb
push
mov
shlb
sti
out
mov
ds
mov
jns
lods
mov
outsb
ficompl
clc
imul
pop
cmpsb
sub
insl
dec
and
jo
inc
xlat
iret
shlb
pushf
imul
loope
popa
cmpsb
dec
and
jg
xchg
mov
out
xchg
adc
push
dec
test
mov
rcl
cli
addr16
mov
scas
in
jb
pop
jnp
sbb
stos
stos
jmp
daa
addr16
push
popa
jp
dec
je
sbb
add
dec
ja
pop
icebp
rorl
mov
xchg
fucomp
aas
pop
inc
pop
int3
and
cmp
rorb
popf
jp
or
lahf
mov
xor
out
daa
pop
test
xlat
inc
or
lahf
fsubl
dec
aas
ljmp
mov
popa
int
insb
add
or
es
ret
jge
lods
ret
sar
popa
mov
scas
clc
dec
shlb
test
das
test
mov
fcmovb
mov
add
fcompl
insl
mov
lock
out
pop
mov
std
jg
cmp
fbstp
cltd
lock
lods
add
mov
idivb
xchg
sbb
push
and
dec
sub
jo
jp
pop
ret
test
or
imul
sbb
xchg
mov
cmp
or
aam
mov
cmpsl
scas
out
jnp
test
jb
mov
movsl
cmp
leave
iret
xchg
inc
jp
push
push
mov
ljmp
imul
mov
adc
in
cmpb
iret
sub
lods
xchg
popa
adc
xchg
jb
daa
fsts
push
inc
push
popf
test
sbb
pop
outsb
xorl
out
pusha
rclb
popf
mov
sar
cltd
xor
roll
or
insl
xlat
push
stos
shll
jp
call
pop
dec
sbb
xchg
popf
dec
lret
and
and
movsl
xchg
call
nop
and
gs
or
jge
int3
nop
enter
dec
fnstcw
xchg
add
hlt
mov
aas
or
bound
push
imul
push
pushaw
dec
jp
add
jmp
dec
sub
jmp
add
mov
push
push
icebp
repnz
cmp
push
push
jle
push
mov
mov
aaa
aas
outsl
daa
mov
cmp
add
or
push
aaa
jp
int3
stos
loop
repnz
push
loopne
pop
jbe
push
pop
jmp
test
icebp
movsl
pop
inc
nop
cmp
add
dec
popf
arpl
fcmovnbe
jge
xchg
sahf
std
es
lcall
add
sub
adc
nop
dec
add
inc
add
decl
es
fisubrl
roll
push
mov
repnz
imul
push
test
mov
or
scas
adcl
and
xor
xchg
outsb
mov
mov
pop
aas
lret
dec
push
jbe
jle
fs
int3
sarb
pop
stos
sbb
aas
icebp
cmc
ja
or
add
test
dec
shrb
loope
push
or
jmp
aad
mov
cmp
ficoml
jae
stc
mov
or
popl
dec
cmpl
negl
ja
lret
iret
mov
sbb
outsb
mov
cmp
xor
xlat
xchg
or
fsubr
imulb
rclb
push
ljmp
ret
push
popf
arpl
pop
mov
out
lods
fstps
jmp
and
inc
xor
push
push
pop
xorb
push
cmpsl
js
outsb
sarb
sbb
cld
inc
mov
add
push
pop
mov
fsubl
pop
adc
xor
jp
mov
cmpl
int3
and
scas
maskmovq
notl
movsl
rorl
jmp
int3
icebp
push
pop
lea
je
std
xchg
adc
cwtl
cs
dec
xor
xchg
or
or
shl
imul
pop
std
sbb
dec
dec
xchg
fsubr
jg
aas
movb
mov
sbb
jb
or
sbb
arpl
jl
push
add
cs
cmp
xor
inc
outsb
sbb
add
cmp
jle
xlat
enter
dec
xor
out
lods
and
leave
sti
imul
in
aad
mov
mov
out
inc
mov
add
mov
icebp
pop
call
add
inc
or
adcb
cmp
mov
fwait
mov
fidivrl
cltd
sbb
xor
jp
jno
and
outsb
mov
loop
and
mov
fcoml
cmpsb
jnp
xor
inc
test
cmp
and
ficompl
mov
test
pop
andl
inc
push
jnp
xchg
sbb
dec
fsubr
addr16
push
loop
cmp
addr16
mov
push
imul
fldenv
ss
imul
fs
cmc
dec
push
sbb
test
dec
fstpl
repz
mov
adc
add
push
mov
mov
leave
jb
js
mov
adc
jae
jl
loopne
cmp
es
dec
shrb
pop
stc
ljmp
mov
xchg
xor
lcall
pusha
cli
xchg
sbb
fistps
jg
icebp
jno
shrl
call
and
pop
add
int
jne
cmp
fildl
les
cmp
je
inc
lret
xchg
and
loop
mov
and
pop
and
inc
cld
js
outsl
sbb
add
test
pop
scas
adcb
jmp
and
jb
adc
adc
out
xlat
pushf
xlat
jnp
ret
inc
lret
gs
push
pushl
test
mov
fwait
mov
bound
jmp
sub
iret
or
and
aaa
call
ja
push
sbb
lds
mov
xor
xor
shrb
push
lea
xchg
lret
push
dec
stos
inc
popf
data16
aas
outsb
jmp
jmp
call
outsl
stc
adc
enter
pop
jecxz
inc
mov
fbld
mov
jmp
cmp
fimuls
jne
out
mov
je
ss
inc
xchg
insb
lds
add
cmp
jl
adc
loop
and
gs
fcompl
int
pushf
mov
lret
hlt
mov
inc
cmpsl
mov
sbb
test
cmp
mov
push
lods
ficoms
loop
out
sub
sbb
mov
lcall
adc
adc
pop
shll
mov
xchg
lock
or
inc
inc
pop
insb
push
cmp
test
loope
xchg
std
xchg
shl
jge
mov
jp
lahf
hlt
insb
adc
dec
int3
enter
mov
xor
push
test
dec
adc
xor
xor
mov
push
gs
inc
dec
add
ja
inc
test
mov
dec
std
insl
pusha
pop
pop
or
xchg
mov
loop
adc
mov
jne
subl
add
pop
sub
xchg
pop
divl
push
lea
xlat
lahf
sbb
dec
and
adc
mov
mov
inc
cmpsb
stos
pop
push
into
lock
adc
or
fwait
int3
ss
movsl
into
mov
ds
fcompl
inc
enter
or
imulb
or
in
movsl
sub
dec
in
gs
loope
push
push
pop
jl
dec
insb
push
inc
and
rorl
js
sbb
lock
sbbb
call
jno
pusha
dec
icebp
gs
sub
addr16
js
ret
sbb
lret
je
into
sub
xor
or
dec
sbbb
mov
lret
stos
test
mov
xor
mov
ror
out
or
cmp
xor
push
pop
push
pop
mov
sbb
xchg
in
mov
dec
out
xor
cwtl
jbe
mov
jmp
scas
outsb
mov
sbb
popf
push
clc
jg
pop
pop
xchg
int3
mov
lret
ret
test
out
mov
ljmp
mov
dec
int3
repnz
mov
unpcklps
cmpsb
in
add
jns
mov
xchg
and
mov
cmp
pop
mov
fnstenv
ss
movl
pop
mov
xor
dec
dec
and
negb
leave
push
mov
push
ret
mov
scas
cmp
lret
sub
imul
jae
jge
pop
nop
das
or
fld
adc
lahf
jecxz
adc
enter
bound
and
popw
adc
repz
or
inc
stos
xchg
shlb
inc
xor
xchg
sbb
add
popa
adc
or
out
loop
gs
jmp
ficoms
insb
cmp
clc
dec
cmp
fists
outsl
lock
je
pop
or
push
loope
and
push
int
lahf
fildl
xchg
sub
jb
addr16
mov
pop
shr
negb
movsb
adc
nop
ret
cmp
fcomi
cmp
out
mov
mov
pop
out
sub
mov
xor
sbb
pushw
loopne
fistpl
adc
fimuls
mov
sahf
popf
pop
dec
add
adc
lods
push
jae
pop
xor
lcall
mov
leave
enter
ret
lods
sahf
sbb
jb
cs
stc
inc
push
or
mov
mov
sbb
xor
mov
arpl
std
leave
add
mov
pushf
mov
and
cmp
jge
mov
addb
bound
in
fiadds
cmpsb
in
popf
stos
out
int3
imul
xorb
push
mov
adc
push
adc
mov
xchg
push
xchg
nop
jb
sub
test
arpl
jnp
mov
nop
mov
adc
inc
inc
sub
in
mov
pop
cltd
insb
xchg
sbb
sub
shrl
xor
pop
into
dec
xor
sub
jb
mov
das
push
sbb
stos
adc
rcrb
je
add
mov
jp
add
sbb
lcall
sbb
jnp
ret
cwtl
into
ror
dec
jbe
xchg
in
outsb
and
shlb
xlat
fstpl
aad
push
das
sub
loopne
mov
and
or
lds
mov
fs
imul
or
pop
sub
dec
andb
enter
in
pusha
sbb
or
nop
loop
fldenv
xor
outsl
jp
movsb
jmp
sub
xchg
mov
test
repnz
int
fcmovbe
mov
pop
push
out
mov
movsb
popf
or
push
fidivl
les
dec
mov
insl
lods
dec
cmp
and
xchg
aad
add
mov
or
jno
xchg
in
cwtl
adc
xlat
sbb
sub
stc
std
mov
dec
push
dec
pop
adc
pop
mov
jp
mov
cmp
mov
cmc
hlt
sti
lcall
lcall
fwait
iret
jnp
jo
pusha
sub
add
mov
mov
pusha
xchg
push
sub
insb
inc
out
jle
dec
cltd
cmpsl
xor
xchg
dec
fdivl
or
or
int
or
ja
and
mov
dec
mov
or
sub
les
mov
inc
lea
fucomi
sti
push
cwtl
lock
in
inc
iret
movsb
pop
sub
and
xchg
std
jno
hlt
pop
adc
cltd
sub
out
cmp
inc
xorb
sub
and
add
push
push
sub
xor
jp
xlat
std
repnz
cs
and
sub
and
out
test
push
cmpb
fisttps
sbb
sahf
in
test
dec
or
lods
jb
jb
push
pop
dec
push
push
mov
push
mov
out
ret
mov
in
or
dec
and
psrld
inc
and
pop
in
push
cwtl
lock
sub
mov
sbb
data16
ficomps
add
pop
outsl
sbb
jmp
mov
and
mov
xchg
daa
adc
mov
and
lods
ficomps
mov
inc
and
lret
rcr
daa
mov
adc
add
call
or
out
lock
hlt
in
cmp
ret
call
iret
xor
pop
xchg
inc
insb
jb
jge
fwait
mov
mov
fstp
inc
scas
shll
mov
aam
xchg
mov
adc
test
pop
loop
mov
push
dec
xchg
push
sbb
cwtl
xchg
mov
mov
mov
shl
and
dec
rcrl
cwtl
bound
pop
push
sbb
pop
mov
dec
cld
dec
outsl
test
and
enter
lock
push
dec
aaa
cmp
mov
movsl
jo
push
shlb
popf
ds
outsb
pop
sbb
call
sub
and
daa
test
jle
insb
push
imul
outsl
fidivrl
xchg
pop
cmc
xor
push
cs
subl
cmpsb
cmpsl
je
sbb
sbb
call
je
add
jl
dec
repz
out
cwtl
mov
jb
cmp
mov
or
pop
jno
scas
mov
dec
jmp
shrl
inc
mov
fnstenv
cmp
xchg
mov
xchg
enter
stos
int
push
pop
outsl
leave
pushf
lret
and
pop
or
movsb
fimull
push
mov
mov
lcall
mov
adc
out
jb
out
inc
mov
insb
adcl
std
mov
xor
adc
cmpsl
insl
mov
bound
mov
push
xchg
xchg
das
shrb
mov
dec
in
flds
or
cmpsl
xchg
dec
jno
ja
push
clts
sub
fdivrl
cltd
inc
add
fmul
lods
ficoml
cld
roll
loop
mov
jmp
cmp
ljmp
sbb
mov
sbb
xor
mov
pop
ret
jle
dec
es
std
stos
mov
aas
ljmp
fldl
stos
sahf
adc
repnz
scas
inc
test
sar
shlb
and
add
int3
jg
sbbl
adc
mov
in
addr16
daa
adc
mov
pusha
add
sbbl
data16
mov
mov
sarb
mov
sbb
jl
mov
sub
inc
repz
mov
in
repnz
pushl
sti
mov
fadds
jmp
subb
sbb
sbb
dec
dec
addr16
xchg
push
icebp
and
aaa
cmp
out
push
xor
push
aad
push
cltd
fidivrl
mov
jmp
inc
sbb
out
aas
pop
fsubrs
dec
mov
sbb
push
mov
push
in
nop
nop
xchg
outsl
int3
jg
ss
clc
lret
sbb
rorb
dec
ds
jno
pop
je
mov
ret
mov
mov
loop,pn
or
fistl
xchg
jmp
data16
insl
cmpsb
enter
and
int
push
mov
mov
adcl
pop
call
sbb
cmc
call
lahf
pop
pop
push
scas
xchg
xlat
in
or
lahf
push
ret
mov
push
adc
sbb
inc
push
cmpsb
mov
adcl
sbb
cmp
aas
and
outsl
out
js
ja
mov
sub
cmc
scas
adc
or
test
imul
inc
push
sbb
das
mov
test
imul
dec
out
xchg
dec
jbe
push
dec
lea
pusha
adc
jmp
add
cld
lods
adc
cmp
in
scas
shll
fdivrp
jecxz
fadd
xor
enter
and
jo
mov
xchg
loopne
cmp
out
repnz
jne
mov
cmpsb
sub
rcl
fwait
adc
ret
add
sub
and
mov
sub
push
inc
out
push
add
sbb
fnstenv
jg
gs
sarl
es
push
pop
adc
repz
imul
jmp
push
sbb
mov
push
fwait
leave
enter
xor
dec
jo
jnp
inc
stc
jno
cmpsb
leave
mov
add
cmp
mov
lahf
sub
push
and
loop
sbb
sub
mull
sub
rcrl
ficomps
pop
xchg
aad
xchg
lds
and
fists
js
xchg
push
rorl
or
inc
dec
sti
jp
pop
pop
fstps
lahf
push
mulb
or
lods
cli
loope
lods
repnz
outsl
ljmp
dec
inc
xor
mov
mov
and
dec
out
cmp
cmp
jo
std
sbb
mov
and
sub
test
push
mov
mov
ficomps
bound
xor
cmpsb
repnz
push
incb
add
or
and
xchg
inc
cwtl
add
cmp
pop
aas
add
mov
fbstp
jno
popf
xchg
ret
cmc
je
addl
ffree
jns
push
jnp
and
add
or
adc
fnstenv
push
das
and
jbe
add
push
and
aad
inc
adc
xchg
sbb
mov
scas
mov
inc
test
cmp
stos
mov
inc
dec
cld
shl
push
shll
in
mov
js
mov
or
mov
aad
sub
addb
or
fcomps
inc
out
mov
xor
lcall
push
jle
loop
shlb
outsl
dec
sub
inc
mov
inc
lea
scas
and
fdivrs
lods
dec
push
in
pop
ds
aaa
test
ds
dec
xchg
pop
aam
scas
popf
scas
jns
stc
lahf
call
push
inc
mov
xchg
mov
std
sub
mov
lret
jg
popf
xchg
fstpt
add
mov
inc
sbb
inc
adc
repz
inc
mov
mov
fsubrp
stos
mov
ds
lods
sbb
mov
xchg
sub
icebp
dec
fsts
dec
xchg
mov
mov
sahf
adc
leave
ret
sub
sbb
nop
and
outsl
push
push
out
shrb
adc
cmc
nop
lret
jns
jecxz
inc
xor
outsl
xchg
xor
stos
inc
mov
inc
xor
das
mov
xchg
push
icebp
loope
pop
push
out
cmp
popa
sub
jp
add
call
outsb
inc
loop
imul
outsl
dec
cmc
mov
test
sub
xchg
ljmp
hlt
imul
xor
dec
pop
rolb
mov
repz
jg
hlt
inc
scas
cs
jecxz
cmp
xchg
int3
rcr
fbstp
lahf
xchg
lds
jle
ret
cld
add
in
seto
insl
test
outsb
lods
out
outsl
cmp
xlat
imul
fdiv
in
outsl
push
cli
imul
add
out
out
fisttps
pmuludq
pop
sbbb
in
fs
pop
sbb
pop
gs
ret
inc
lret
jge
lcall
outsl
jne
shl
in
adc
pop
lods
cs
cmp
xor
sbb
leave
bound
add
inc
inc
cmp
and
sti
pop
push
pop
xor
inc
push
sub
sub
mov
push
popf
mov
add
xchg
mov
ja
loope
idivb
lahf
rclb
rolb
sbb
fistpl
cmc
add
fimuls
pop
shll
dec
ljmp
push
jns
adc
or
mov
sbb
dec
push
sahf
fisubl
pusha
mov
shr
dec
and
sub
rorb
popa
push
jecxz
das
and
pop
mov
ss
push
in
mov
scas
outsb
jae
leave
sub
pop
outsb
add
push
pop
call
pop
mov
daa
xor
dec
cmp
faddl
shlb
mov
push
pusha
and
aam
inc
addr16
orl
jle
fwait
std
pop
pop
bound
add
cmc
xchg
xor
and
int
test
jo
dec
int
aam
ror
in
jg
xchg
das
cmp
inc
cmp
xor
fiaddl
cmpsl
inc
hlt
scas
out
pop
insl
dec
insl
sub
mov
jp
loop
imul
test
pushf
pop
movsb
imul
mov
cmp
mulb
mov
mov
sub
ljmp
mov
fs
lcall
add
cltd
sbb
mov
shrb
out
outsl
sub
rorl
mov
pop
push
and
adc
adc
xchg
loop
adc
movsb
stc
in
hlt
adc
mov
jecxz
inc
inc
sbb
inc
test
push
dec
add
xor
push
in
jge
dec
inc
mov
cmp
dec
nop
jg
popf
mov
mov
dec
add
add
std
pusha
fidivl
jp
jmp
fs
or
fsts
loop
icebp
adc
and
push
ss
popa
xor
leave
sub
mov
dec
testb
sbb
call
call
mov
gs
mov
cwtl
mov
push
mov
jne
int
nop
pop
jbe
jge,pt
cmpsl
dec
cwtl
int
enter
outsb
movsb
pop
push
sub
adc
scas
mov
hlt
jae
dec
roll
fidivrs
rclb
mov
dec
nop
pop
or
mov
fcmovne
loope
cmp
pop
pop
and
popf
dec
add
inc
mov
hlt
fcmovnu
flds
sahf
addl
cmp
shl
jp
cmpsb
scas
lea
test
inc
testb
jae
rorb
and
cmp
clc
scas
cwtl
icebp
push
test
mov
mov
mov
xlat
mov
mov
rcll
pmaddwd
fsts
cmc
dec
ret
push
repnz
cld
pop
cmpsb
mov
and
and
insb
shll
add
je
int3
repnz
push
leave
or
sti
in
daa
pop
sarl
inc
mov
mov
inc
stos
xor
inc
sahf
mov
jmp
out
mov
and
pop
jo
mov
pushf
inc
jbe
daa
mov
mov
mov
adc
cld
int3
add
xor
rol
xchg
push
jae
pop
and
pop
sahf
dec
dec
out
jmp
cmp
sub
and
pop
lcall
cs
sub
rcl
sbbl
sbb
out
inc
insl
adc
pcmpgtd
rcrb
adc
mov
lret
push
mov
jbe
dec
dec
shl
enter
xchg
cmc
rcrb
dec
sbb
dec
sti
pop
fnstenv
mov
mov
movsl
mov
inc
jmp
das
mov
sub
mov
push
leave
daa
push
xchg
dec
lock
sahf
mov
mov
into
xor
out
mov
mov
cmp
je
pop
movsb
nop
and
sub
test
inc
out
stos
cmp
adc
or
push
call
fs
jecxz
rorl
cmc
outsb
jp
in
rcrl
push
mov
arpl
int3
movb
jl
sub
dec
jnp
jg
shll
std
loopne
cmp
es
push
cmpsb
sub
lahf
xchg
mov
clts
pop
inc
push
shr
mov
out
and
push
sub
shl
mov
addr16
jge
push
fwait
cld
xor
aaa
cmp
mov
mov
imul
pop
mov
jge
stos
int3
fsubs
dec
lret
cmc
xchg
in
ret
mov
in
jecxz
mov
imul
test
pop
aam
push
arpl
xchg
sbb
lock
push
pop
ds
adc
jae
scas
jb
mov
mov
mov
popf
das
in
jno
xchg
aad
jo
push
jmp
sar
gs
fs
and
cli
and
mov
sbb
xchg
imul
push
sub
in
pusha
mov
vsubss
sbb
call
xorl
or
mov
push
or
orb
imull
dec
mov
test
lea
pop
push
push
loope
call
insb
xchg
mov
int
pushl
in
mov
addl
fstl
cmp
pop
mov
and
insb
cltd
push
test
mov
mov
push
aas
lret
fs
dec
cmc
mov
sub
pop
int
jb
out
dec
pop
push
mov
mov
cmpsb
xchg
sbb
mov
mov
jp
mov
xchg
mov
cs
xor
mov
adc
or
mov
out
aas
jl
mov
pop
insb
repz
xrstor
dec
dec
jecxz
repz
xlat
sbb
jnp
ds
jae
jle
or
stos
fwait
mov
add
xchg
aad
out
jg
pop
pop
sub
push
popl
push
imul
mov
lcall
shll
dec
xchg
push
inc
mov
popf
dec
repz
inc
xor
pop
movsb
scas
push
sub
lret
pop
mov
lds
or
inc
stc
pextrw
inc
lds
adcl
shr
roll
sub
lods
jno
cwtl
in
lds
lret
mov
pop
mov
xor
addr16
adc
pop
loop
daa
into
mov
sub
pop
and
xorl
insl
mov
and
jecxz
sub
and
sbb
xor
in
imul
fdivrl
add
daa
xor
ret
int
mov
pop
push
imul
ljmp
jmp
push
lret
test
in
and
push
xchg
loop
mov
jns
xor
dec
fwait
pop
jnp
inc
lock
mov
repz
sbb
lret
es
sbb
out
xchg
testb
lcall
outsl
lods
mov
sbb
mov
scas
sbb
pop
adc
loopne
jae
shlb
sub
idivb
xor
adcl
loop
mov
cmpb
mov
imul
jnp
dec
dec
std
or
sbb
ljmp
mov
stos
mov
sti
jbe
int
pop
ret
sub
hlt
div
cmpsb
movsl
fwait
shll
lods
xor
xorb
pusha
mov
mov
insb
mov
arpl
daa
in
lods
mov
adc
mov
rolb
inc
loop
sbb
jg
sarl
pop
loop
out
imul
test
cs
mov
pop
pop
and
mov
xchg
dec
mov
pop
iret
in
sub
mov
xchg
or
mov
mov
nop
mov
push
mov
mov
adc
mov
js
jae
das
mov
cmpsl
push
mov
mov
mov
icebp
pop
sub
pop
adc
movd
in
in
mov
cmp
push
jge
pop
rol
movl
sahf
mov
xor
xchg
lods
ror
pop
or
mov
les
sbb
in
iret
push
jecxz
mov
mov
shll
push
in
hlt
xchg
jb
jg
fdivrs
or
dec
es
add
idivb
dec
jl
mov
cmp
lods
push
js
mov
loope
push
sbb
add
shlb
dec
mov
jl
test
sub
cmp
pop
xchg
clc
ss
into
scas
push
sbb
ffree
push
mov
scas
push
aas
jp
pop
ja
pop
adc
fadds
movsl
loope
mov
movsb
jg
shll
mov
sbb
hlt
sbb
jb
push
leave
enter
ret
mov
in
dec
outsl
sbb
and
push
lret
out
pusha
sbb
mov
mov
and
sub
jecxz
cmpsl
pop
cmp
or
jnp
les
negl
test
sahf
int3
stc
repz
mov
sbb
jnp
imul
ss
iret
dec
ret
hlt
sbb
cmp
pop
ret
adc
xor
aad
dec
sbb
data16
push
mov
xchg
mov
movsl
in
sub
cmpsb
jae
je
sub
and
cmp
jecxz
or
into
xor
psllw
lods
sahf
cmp
mov
data16
and
xor
inc
stos
push
std
mov
cld
movsb
add
mov
je
ja
adc
fld
push
cmpsl
out
jno
lahf
pop
lret
fsubrs
jecxz
iret
sbb
push
mov
enter
mov
jecxz
insb
pop
aaa
xchg
out
pusha
call
mov
movsl
push
je
ja
mov
arpl
lcall
xchg
pop
xlat
jp
xchg
mov
enter
enter
out
cltd
or
sub
adc
inc
dec
in
adc
mov
push
xor
xchg
repnz
popf
lret
or
out
pushf
jmp
pushf
mov
cmp
inc
mov
xchg
insl
nop
js
add
jo
imulb
mov
push
mov
lahf
shr
jg
sarl
xor
push
adc
pop
pop
stc
and
lods
je
push
mull
cmp
dec
dec
mov
and
cmpsb
imul
and
or
lods
aad
push
test
jbe
adc
je
lret
xchg
sahf
jmp
rcrb
sub
fstpl
icebp
lret
outsb
and
lods
call
insl
enter
jle
sti
shrb
dec
in
push
ds
fs
popf
push
cmp
rorb
cmp
leave
cld
into
xchg
inc
into
xchg
cmc
sub
xchg
inc
add
gs
ret
jl
mov
pop
jmp
aaa
cmpsb
inc
mov
xlat
sbb
jmp
xchg
lds
lahf
loopne
add
jmp
pushf
mov
cmp
inc
mov
xchg
push
nop
js
add
jo
loop
imul
mov
shl
outsb
sbb
cmp
jp
sub
sti
or
push
dec
icebp
pushf
and
and
sbb
outsb
pop
enter
add
jno
scas
pop
mov
shlb
popf
cmp
lods
sbb
pusha
test
scas
hlt
jp
xor
fwait
test
push
shll
mov
out
or
jle
jae
push
shll
dec
push
mov
out
mov
loop
sbb
jae
add
addr16
fisttpl
es
adc
pop
mov
mov
mov
and
mov
xchg
sub
or
mov
lret
dec
es
or
sbb
xchg
fdivr
pop
fisubrs
sbb
mov
pop
fisubrs
dec
xor
fadd
lret
cltd
lods
pop
testb
not
sbb
les
dec
push
daa
data16
in
bound
fsubrs
mov
mov
xor
popf
xor
pop
xchg
xchg
push
push
push
pop
push
mov
test
stos
ucomiss
xchg
and
or
cltd
addr16
mov
cmpsl
out
mov
and
mov
cmpsl
popa
pop
mov
mov
ficomps
xor
jecxz
fidivl
lahf
xchg
clc
scas
mov
dec
rorb
mov
rcrb
mov
inc
jg
out
shl
loope
lods
xor
es
pusha
loopne
cld
neg
out
jg
leave
jno
push
or
add
dec
mov
test
test
in
lcall
fldenv
add
inc
in
jb
pop
aas
aam
into
adc
xor
call
dec
xor
sbb
xor
cmpsb
rcrb
sti
jo
in
neg
mov
or
int
mov
add
fnstcw
lret
lds
mov
push
lods
or
fidivs
mov
clc
aas
aas
sub
ljmp
cmp
popa
jle
dec
clc
add
hlt
push
xor
cld
adc
mov
xor
mov
pop
push
fisubs
out
js
and
in
cwtl
cmp
mov
insl
mov
jae
aam
dec
push
push
adc
jge
mov
add
iret
inc
and
push
mov
fidivrs
ja
xchg
dec
arpl
jle
movsl
adc
add
cld
jp
inc
cmpsb
sub
push
mov
outsl
scas
inc
shll
pop
sbb
les
add
fimuls
lds
dec
or
inc
add
out
lods
sbb
in
inc
mov
in
xor
dec
movsb
rorl
int3
pusha
inc
sub
cmp
adc
or
pop
mov
fsubl
idivl
lock
or
adc
pop
add
int3
nop
cmpsb
cmp
lahf
push
cmp
shll
or
or
scas
sti
scas
ds
push
jnp
fwait
xor
xchg
xchg
or
clc
imul
and
dec
dec
test
mov
inc
adc
mov
fldt
and
ret
adc
sbb
xor
jp
mov
shll
call
vmovd
mov
gs
frstor
push
out
mov
das
sbb
nop
pop
mov
push
loopne
sahf
pop
inc
jp
or
inc
test
dec
das
xor
xor
sarb
sbb
mov
int3
inc
jmp
cwtl
jecxz
popa
lret
stos
popa
iret
dec
mov
push
adc
ret
popa
nop
dec
ret
and
pop
fisubrs
mov
dec
sbb
mov
test
out
cmp
ds
jge
jb
pushf
lods
cltd
aaa
dec
popf
in
mov
and
add
or
inc
xchg
sub
arpl
in
lret
add
push
push
repnz
cli
pop
and
pop
mov
push
ss
bound
stos
addb
dec
adc
mov
mov
cmp
sub
mov
fimuls
test
xor
and
xchg
mov
inc
negb
ljmp
and
sti
daa
mov
lds
loope
ja
push
aad
fistps
push
lret
jno
lods
clc
xor
and
shll
xchg
xor
arpl
ds
mov
pop
xchg
sar
rclb
mov
daa
jg
loopne
popf
mov
mov
xchg
lcall
adc
cmp
scas
dec
dec
fcomps
dec
adc
dec
divb
dec
subb
push
pop
cli
xchg
addb
cmp
mov
inc
pop
jo
mov
es
scas
fwait
aam
jmp
xor
adc
in
iret
pop
pop
ret
popa
out
push
sbbl
mov
xor
adc
and
pushf
dec
rcl
lahf
cmp
sbb
fistpll
dec
pop
lret
add
xchg
loop
dec
adc
out
int
decl
sub
jecxz
pop
fdivs
das
push
xchg
into
add
inc
mov
call
js
sbb
dec
enter
cmp
in
iret
sbb
dec
cmp
aad
sbb
mov
lcall
shl
xorl
insl
test
push
fistpll
ja
cmp
mov
roll
test
dec
mov
pusha
pop
lock
add
lock
xchg
or
push
sub
rorb
imul
push
shll
aaa
icebp
addl
adc
jb
mov
rcll
cmp
jnp
dec
dec
shrl
jecxz
test
cmp
jg
nop
imul
jecxz
push
and
ja
or
push
outsb
mov
test
sub
cld
divb
and
in
push
xor
mov
pop
mov
mov
xchg
les
ljmp
sbb
or
cmc
or
xor
dec
sbb
mov
inc
popa
das
shll
mov
je
mov
xor
cmpsl
push
push
mov
push
adc
outsl
out
mov
fildl
fidivs
repnz
lret
and
dec
mov
out
fstpt
gs
xor
or
and
jae
mov
imul
testb
xchg
bound
addl
ss
or
or
gs
xor
idiv
dec
cmc
scas
dec
cmp
mov
mov
add
mov
xchg
push
jo
cmp
push
jle
fisttps
inc
inc
add
rol
movsb
into
cmp
fnstsw
sbb
jne
and
outsb
in
sub
lods
add
add
jo
pop
sub
dec
push
loope
ja
xchg
cli
or
mov
push
into
mov
mov
xorl
push
mov
dec
repz
adcl
mov
movsb
inc
sub
sbb
pop
fldt
or
jb
aam
mov
scas
clc
sub
dec
pop
and
xchg
fisubrs
ret
cltd
xchg
cld
cmc
push
imul
rorb
es
and
cli
std
mov
mov
mov
sarl
fnstcw
test
je
mov
loop
xchg
jge
adc
xchg
pop
inc
adc
mov
imul
sbb
insb
popa
and
and
jno
jb
lret
jnp
or
add
mov
stos
dec
scas
test
repz
cmp
cmp
mov
adc
inc
test
addr16
xor
stos
pop
push
loopne
jge
cmpsb
inc
in
dec
cmpsl
sahf
push
or
lods
stc
int3
cmc
cs
cmpsl
dec
out
xchg
sub
jmp
jns
cmc
lret
mov
fcmovnbe
pop
and
inc
or
sbb
jbe
imul
jmp
xor
cs
leave
mov
cmp
scas
stc
dec
insb
ljmp
xchg
scas
jge
stos
cmpsb
push
lahf
sahf
xor
inc
jg
or
jo
ret
and
hlt
inc
into
fistl
or
std
outsl
clc
push
push
imulb
pop
fisttpll
or
xlat
or
jbe
es
mov
jbe
sbb
pushf
out
mov
adc
add
adc
jl
mov
sbb
push
jno
cli
out
je
gs
aas
hlt
js
pop
cmp
rorl
pop
add
and
push
cmp
clc
hlt
xchg
adc
iret
cwtl
sub
insb
outsl
lcall
bound
add
fisttps
or
xchg
dec
repz
mov
and
pop
rcrb
div
jno
jb
mov
jae
mov
inc
mov
adc
cmp
or
call
negl
and
sbb
out
adc
repz
sub
loop
mov
imul
cmp
cmp
push
dec
addl
and
sbb
push
lcall
cmp
lds
mov
in
pop
into
pop
dec
sbb
sub
mov
test
mov
decl
jle
push
and
sbb
popa
fisubs
adc
roll
push
add
inc
std
adc
out
mov
movsb
ficomps
scas
and
dec
ficomps
sub
adcb
xor
pop
push
sbb
cmp
push
stos
std
jmp
jae
popf
mov
mov
push
cltd
cmpsl
clc
mov
cltd
add
or
sub
add
sbb
pop
bound
lds
xor
mov
cltd
iret
out
and
div
movsl
jle
in
lret
jno
mov
icebp
xor
dec
jb
out
adc
inc
mov
icebp
xor
adc
div
movsb
cs
cmpsb
int3
mov
ljmp
insl
test
xchg
mov
pop
fists
pop
sbb
pop
sub
iret
and
xchg
mov
in
lods
mov
push
leave
pop
xor
inc
cld
mov
popf
adcb
mov
and
rclb
sub
lahf
pop
aam
fcomps
ret
icebp
sar
sti
filds
insb
push
xchg
syscall
mov
aad
fcmovb
lcall
sarl
xchg
ljmp
mov
and
insb
adc
sbb
sub
push
orl
aas
mov
mov
call
int3
into
movsb
xchg
std
lds
mov
push
add
int3
pushf
aas
stos
mov
or
cmp
sub
mov
pusha
mov
jns
jne
mov
adc
test
mov
rclb
insb
cmp
addb
mov
push
pop
in
int
xor
sub
scas
pushf
adc
mov
mov
pop
pop
ljmp
mov
lret
mov
sub
pusha
movsb
sahf
rcrb
mov
in
sarl
dec
sbb
dec
and
mov
push
in
jecxz
scas
imul
mov
es
dec
dec
adc
stos
popf
fs
jb
mov
shr
repz
jb
loop
insb
xlat
adc
jle
subb
push
adc
pop
mov
jo
std
leave
mov
roll
imul
pop
repnz
mov
adc
rcrb
add
dec
mov
mov
inc
mov
adc
pop
push
mov
shl
cmp
xchg
cmp
call
in
lea
or
fstp
lods
fs
pop
mov
cmp
or
jnp
les
jne
mov
sub
pop
push
stos
fisubs
or
jl
daa
sub
addr16
jge
lds
or
enter
xchg
pop
mov
rorl
sub
gs
repnz
mov
jns
lds
ret
mov
sub
push
jl
add
xchg
ss
cmpb
add
and
into
xor
mov
jmp
sbb
mov
mov
sbb
into
ss
fdivl
ficoms
out
jle
sbb
adc
and
pop
rolb
or
mov
sub
or
dec
add
dec
scas
inc
push
pop
jl
mov
push
or
call
push
nop
cmp
mov
test
push
add
mov
fcoms
jbe
fbstp
into
test
or
mov
push
or
or
faddl
in
ret
inc
movsl
cli
dec
sbb
adc
sub
aas
fsub
into
mov
sti
xchg
addr16
outsl
in
sarl
repz
addr16
mov
into
or
xlat
inc
sbb
test
push
pusha
das
nop
jmp
hlt
inc
mov
cmp
repz
push
js
mov
adcl
mov
mov
mov
lcallw
fs
sahf
push
stos
idivl
icebp
cmpsb
lds
jp
mov
loop
jl
lods
call
rclb
pop
dec
insl
insb
ljmp
jg
mov
push
or
fwait
push
test
xor
idivl
mov
jbe
cs
int
dec
rorb
pop
dec
cmp
mov
mov
push
push
or
xor
push
out
hlt
sti
xchg
inc
popf
fs
push
hlt
sbb
cmpsb
cmpb
mov
ds
add
add
xor
push
je
xchg
data16
test
inc
data16
fwait
mov
sub
sahf
jns
pop
addr16
fistl
pop
push
mov
add
jb
inc
bound
gs
add
dec
or
test
ret
add
pop
idivl
pop
xchg
sub
xorb
add
shr
insl
shl
xchg
adc
push
or
int3
and
jnp
clc
aad
xchg
sub
stos
sub
pop
and
sbb
jno
rclb
xchg
cmp
push
mov
jno
dec
mov
pop
ljmp
and
push
cs
fwait
into
add
aad
rol
stos
jo
and
hlt
jne
push
sbb
push
pop
add
push
jecxz
pcmpgtd
popa
mov
pop
add
xchg
inc
adcb
cmpsb
xor
out
es
or
aad
mov
or
aam
addb
mov
push
jae
pusha
push
fstl
data16
xor
in
xchg
sub
imulb
aam
jge
sahf
ret
mov
or
mov
inc
mov
xchg
lcall
call
lods
jge
adc
xor
negl
sub
enter
jmp
or
xchg
mov
jle
clc
inc
test
hlt
xchg
fwait
mov
fildll
fs
lahf
out
lcall
jl
icebp
push
cmpsl
imul
into
and
addl
and
dec
cmc
inc
mov
cli
insb
stos
shr
inc
xor
jno
jb
popa
sub
push
cmpsl
add
cmpsl
test
stos
jb
push
xor
sbb
push
mov
aas
lcall
icebp
cmpb
dec
fstl
bound
adc
pop
addr16
xlat
cmpsb
mov
mov
in
mov
dec
add
mov
fldl
bound
sub
aaa
dec
arpl
mov
lock
xchg
cltd
pop
repz
aad
inc
mov
in
fbstp
adc
xchg
and
call
cmc
nop
adc
adc
into
pusha
mov
int3
cmp
adc
sbb
mov
out
adc
lds
fmulp
push
or
jle
and
mov
scas
lret
fbld
fwait
out
fcompl
pop
popf
xchg
aaa
rorb
inc
enter
movsb
pop
arpl
or
xchg
jb
insb
jmp
adc
sub
loope
jne
je
or
stc
pop
iret
mov
ret
mov
andb
test
or
mov
jae
mov
stos
popa
jg
sbb
pop
pop
sub
aad
pop
sub
scas
mov
imul
pusha
pop
rolb
int3
not
inc
sub
in
adc
sahf
jnp
andb
xchg
dec
nop
pop
repnz
mov
aas
lods
fs
cmp
int
xlat
pushf
xchg
jae
inc
mov
cmpsl
cmpsb
adc
pop
stc
add
dec
xchg
dec
jg
test
xchg
jg
mov
cmp
in
mov
ret
push
imul
lahf
cmpsb
daa
cmc
sbb
jns
out
fwait
sahf
ffreep
js
jno
jo
dec
imul
loopne
mov
mov
daa
adc
xrstors
pushf
adc
mov
ljmp
les
xlat
sub
push
pop
dec
in
sub
in
jnp
add
test
orb
mov
out
rorl
mov
addr16
fldl
pop
insl
or
loop
cmpsb
aaa
notl
fidivrs
dec
push
clc
mov
xchg
imul
pop
roll
jle
or
test
clc
sub
xchg
mov
sbb
mov
data16
mov
aas
scas
test
adc
arpl
faddl
test
add
xchg
test
test
out
jns
jp
xor
cld
sahf
je
fwait
stos
test
sahf
xor
push
dec
pop
xchg
fcompl
mov
imul
cmpsb
loope
cmc
fwait
ja
dec
mov
inc
adc
into
pop
mov
lcall
std
insb
push
pop
stc
or
adcb
divb
fsts
lock
in
fdiv
sar
aad
inc
fwait
test
test
icebp
mov
xor
out
push
fidivrs
cmp
bound
arpl
test
lcall
stos
ss
arpl
inc
dec
inc
cmpsl
adc
mov
das
push
inc
push
dec
popf
ret
fwait
xlat
popa
push
rclb
jne
cltd
aaa
inc
xor
sub
cltd
jnp
mov
adcb
or
pusha
repnz
mov
or
pop
xor
ja
xor
inc
cmpsl
out
mov
outsb
rolb
dec
popf
pop
xchg
out
cld
add
rcrl
lea
jmp
jge
out
rorl
pop
mov
jl
jg
inc
shll
pusha
into
lock
inc
adc
lods
or
lret
dec
jo
xlat
cmc
xor
loopne
shrl
and
dec
outsl
mov
cmp
sub
pushf
std
inc
movsl
or
add
adc
push
push
or
mov
adc
dec
push
push
popl
test
xor
fwait
sbb
lods
prefetch
pop
std
add
mov
ret
aas
xrelease
fcoml
inc
pop
pop
ret
call
inc
adcb
dec
lds
sub
lret
mov
iret
and
sub
insb
mov
lea
or
insl
arpl
scas
mov
adc
das
shrb
add
jmp
push
hlt
xor
add
ja
xor
adc
lahf
xchg
xor
sub
or
inc
sahf
test
repz
fsubrl
push
add
das
xlat
mov
stos
popf
lahf
cwtl
xchg
loope
ds
add
push
adc
sub
pop
fbstp
jle
stos
div
and
outsl
mov
xor
xlat
mov
lret
jecxz
push
rclb
int
mov
in
jle
inc
push
decb
and
or
dec
sbb
mov
aaa
aaa
inc
xchg
addr16
cmp
push
inc
pop
and
call
ret
add
jno
outsb
pop
fistps
inc
pop
pop
bound
or
mov
int3
cwtl
nop
into
pop
xchg
test
lds
in
adc
mov
cmpsl
fcoms
xor
in
repnz
mov
sahf
xchg
daa
lock
int
fld
and
push
ljmp
aas
dec
out
sub
pop
xor
movsb
push
fsub
aam
lds
cltd
scas
outsl
lret
lds
adc
jg
mov
imul
icebp
or
jo
or
jmp
lods
or
push
jge
cmpsl
sub
xor
mov
mov
fldenv
pop
leave
insl
dec
lret
arpl
repz
xchg
sub
adc
iret
xor
sub
add
stos
testl
xor
popa
mov
inc
pop
insl
xchg
push
adc
fldt
popf
addr16
divb
ss
cwtl
add
ds
pop
cli
ds
in
in
fstpt
lahf
jbe
pop
test
iret
and
push
ret
cmp
sub
lret
push
add
cld
pushf
adc
sub
push
adc
sub
inc
orl
add
ret
addr16
aad
xchg
sahf
lahf
mov
shr
cmp
xchg
sub
pop
jns
psubw
lock
push
das
cmpsb
sub
mov
push
inc
sbb
xor
imul
xchg
xchg
lods
outsl
sbb
iret
imul
cs
outsl
pop
fdivs
fwait
stos
adc
cmpsl
add
inc
mov
pushf
in
pop
sbb
popa
push
pushf
cmc
push
mov
xor
loop
shlb
mov
cs
popf
in
xchg
mov
popa
aam
mov
test
adc
jnp
sub
imul
push
popf
dec
xchg
loop
outsb
or
sbb
je
out
jmp
cmpsb
scas
mov
push
xchg
mov
mov
sub
mov
ret
lret
xchg
loop
sbb
xor
push
fchs
bound
dec
and
push
lods
push
mov
testl
rcll
mov
rcrl
dec
lods
or
movsl
clc
movsb
ffree
cmc
push
test
pop
push
jbe
movsb
lods
xlat
insl
jne
mov
iret
out
adc
sub
sbb
imul
pushf
pop
mov
out
mov
push
add
cmpsl
es
inc
jnp
sbbb
inc
sahf
lods
and
cmp
inc
loop
loop
shrl
rcrb
sahf
inc
or
push
add
pushf
fnstenv
mov
cmp
int3
inc
cmp
xchg
or
sti
sbb
xchg
sbb
popf
imul
dec
call
cmpsl
mov
xchg
xchg
lock
popf
scas
ds
push
fcomp
fstl
dec
fisubrs
imul
jp
push
fists
or
jmp
push
movsl
mov
pop
sub
and
in
mov
test
cli
cmp
je
sbb
sub
and
push
fucomip
dec
jle
sahf
sbb
or
shlb
iret
xor
jl
nop
mov
push
jp
mov
test
cmp
push
aad
xor
stos
xchg
mov
lock
jnp
xorb
push
data16
mov
enter
pop
inc
es
in
mov
add
sahf
int
ljmp
xchg
dec
movb
xchg
inc
daa
jl
cmp
pop
sahf
mov
fisttps
push
insl
mov
pop
pushf
dec
sbbb
xor
jb
lods
mov
pop
xchg
sub
arpl
out
and
iret
fstpt
mov
dec
jno
rclb
adc
mov
fcoms
or
addr16
nop
scas
sbb
ret
rol
test
hlt
dec
add
mov
loop
imul
scas
icebp
aas
xchg
bound
roll
sub
mov
les
push
rcrl
jecxz
jb
nop
test
add
lock
hlt
dec
cltd
xchg
movsb
int3
adc
mov
push
or
inc
mov
in
jle
daa
les
ja
inc
mov
push
imul
scas
dec
lret
cmp
pushf
dec
jno
aas
add
xor
in
push
dec
outsl
cmp
pop
push
jecxz
adc
ret
dec
jns
rcr
in
shll
xor
test
push
push
mov
mov
pop
shlb
lods
push
jns
outsb
scas
sahf
arpl
push
sbb
mov
sub
mov
xchg
inc
xchg
mov
popa
jmp
xchg
push
fiadds
ret
ljmp
xchg
shl
mov
push
inc
test
fwait
lar
xchg
je
sbb
add
repz
imul
jne
mov
fmull
jl
mov
mov
les
mov
test
or
sub
or
sub
inc
adc
gs
aad
adc
nop
outsl
add
repnz
jp
das
incl
xchg
loopne
imul
jge
sub
dec
ret
mov
in
leave
loopne
out
dec
inc
repz
jmp
outsb
add
sub
outsl
div
sbb
test
push
loop
rol
lcall
xor
mov
out
pop
iret
subl
aaa
jle
fistps
sti
jae
mov
push
outsb
test
aam
mov
inc
fildll
mov
adc
adcb
dec
push
fucom
sbb
fistps
cli
xchg
add
push
cmp
inc
cli
push
ret
rcr
mov
mov
pop
or
xor
mov
xchg
mov
jecxz
loop
pop
inc
sbb
mov
cmp
fldcw
divb
or
pushf
ljmp
adc
inc
rcr
xor
loopne
xchg
movsl
aad
dec
lret
imul
repz
mov
in
in
movsb
jmp
mov
inc
mov
jp
xor
in
movsl
in
or
mov
mov
or
sub
mov
add
fdivrl
sbb
clc
inc
ds
rcl
push
mov
fwait
and
xchg
mov
cmp
lods
fs
insb
mov
mov
fwait
in
pop
fstp
enter
mov
sbb
push
std
aad
jno
push
jo
in
sub
mov
push
lea
push
adc
ljmp
pop
and
adc
cmp
popa
add
pop
outsl
jae
popf
adc
dec
jb
mov
mov
push
and
sub
sbb
xor
scas
push
xlat
pop
sub
mov
and
xchg
icebp
stc
mov
lods
xor
sub
mov
cltd
pop
xchg
inc
lods
iret
sub
jns
adc
dec
and
mov
and
imul
cmpsb
js
aaa
daa
ss
orl
xor
fisttpll
inc
or
sub
dec
push
jg
icebp
imul
inc
and
sbb
push
outsb
jl
push
or
pop
or
or
shlb
pushf
sbb
outsb
cmp
call
pop
xorl
and
pop
data16
leave
ret
pop
sub
mov
mov
sbb
je
call
xchg
fidivs
push
cmpsl
mov
fwait
adc
sub
mov
sub
mov
dec
push
iret
push
adc
pop
fcoms
xrelease
fbstp
lret
out
sbb
adc
clc
std
xor
ja
leave
jle
sub
call
jne
xchg
cmp
imul
and
cmpsl
sbb
pop
mov
call
xor
mov
mov
outsl
dec
cmp
or
and
sbb
lock
xor
or
push
data16
fstpt
ret
repnz
enter
cmpsl
daa
or
cmp
push
adc
imul
lods
rorl
cs
in
sahf
push
lret
xor
mov
add
sbb
push
aad
sub
addr16
and
cwtl
sub
pop
push
es
dec
call
inc
inc
push
pop
mulps
ficomps
out
cs
stos
mov
test
sbb
pop
jl
sbb
cld
adc
sarb
and
cmpsb
xchg
dec
pop
xor
jno
mov
movsb
push
into
inc
addl
jmp
ljmp
arpl
icebp
push
cmc
jo
test
pop
test
sbb
lahf
mov
and
pop
aam
mov
outsl
cmc
inc
mov
std
inc
rorl
jmp
bound
outsb
xchg
das
dec
popa
sahf
insl
xor
aas
pop
addb
xor
jb
inc
aad
jmp
cmp
cmpsl
scas
mov
sbb
sti
js
inc
mov
adc
das
push
js
fs
mov
jle
or
call
test
clc
stc
test
push
aam
xchg
in
jmp
jbe
aaa
and
cmp
sbb
divl
stos
fmull
pop
push
xor
repz
push
ds
je
or
dec
call
orb
out
inc
fcmovbe
pop
dec
sub
jns
sar
jp
into
outsl
add
stos
aas
inc
cmp
pop
push
fwait
popa
inc
pop
scas
popa
cld
push
xchg
and
repz
out
cmc
or
pop
rcrl
jno
mov
addr16
sub
and
sbb
addl
ss
into
data16
jl
jne
insl
inc
mov
aam
jge
std
mov
mov
and
sub
push
std
shrb
mov
xchg
or
sub
mov
mov
xchg
mov
lea
loop
fidivrl
enter
mov
cmp
push
shlb
dec
out
loopne
cmpsb
outsl
lds
sbb
rclb
mov
loop
mov
fistps
ds
cmp
dec
add
jmp
mov
inc
addl
ss
inc
jg
xor
dec
sub
sbb
shlb
mov
outsl
add
sbbl
fnstcw
lahf
mov
jns,pt
jmp
in
repnz
xchg
and
mov
subl
sub
xlat
addr16
cmpsb
pop
out
dec
stc
jp
push
stc
inc
js
es
pop
call
cmp
scas
add
clc
pop
add
ljmp
or
rorb
push
mov
out
jg
arpl
cs
fmull
and
imul
addr16
mov
loopne
xchg
xchg
mov
sbb
adc
loopne
xchg
mov
je
rcr
shll
mov
nop
push
ret
pop
mov
xor
mov
xor
insb
in
push
mov
ret
xchg
cmp
xor
and
jo
arpl
mov
jmp
insb
cmc
call
or
dec
and
in
js
push
aaa
cmpsb
and
insb
divb
aas
enter
ret
xchg
pop
je
mov
clc
popa
fwait
jnp
push
call
out
push
cmp
orb
add
clc
xor
cli
daa
rorb
xchg
mov
cltd
mov
and
push
dec
enter
push
divb
mov
cmp
imul
adcl
dec
or
mov
repz
shrb
ljmp
das
out
push
mov
insl
pop
flds
and
frstor
adc
cltd
cld
ja
lock
push
inc
mov
lods
jl
mov
sbbb
mov
int
sub
add
icebp
das
sub
mov
ss
sbb
pop
xor
push
flds
mov
loope
jp
or
out
pop
lea
mov
cmpsb
or
sbb
ljmp
stc
sbb
rcrl
cmp
sub
jnp
adc
pop
loop
stc
and
adc
jmp
int3
subl
lcall
and
daa
pop
repz
dec
push
lahf
sub
outsb
sub
js
imull
xchg
movl
push
cld
mov
push
cmc
cs
mov
aam
pop
cs
call
out
pop
lahf
push
icebp
out
fnstenv
pop
arpl
test
adc
jl
popf
stos
pop
ljmp
push
das
gs
pop
cmp
xchg
fwait
jp
or
js
es
sub
mov
rcrb
mov
xor
pop
xor
dec
xchg
sti
mov
test
data16
bound
sarl
lret
cmpsl
mov
js
repz
and
add
loopne
pop
lret
dec
add
fbld
inc
and
stc
mov
mov
sub
or
and
arpl
sub
nop
lods
psubsw
stc
loopne
clc
xlat
or
jbe
enter
mov
jns
adc
pop
jbe
or
and
pushf
pop
mov
xchg
mov
imul
jmp
xor
je
cmp
xchg
test
dec
or
mov
cmp
into
mov
push
pop
negb
dec
xacquire
mov
sbb
jae
pop
mov
mov
xchg
sub
add
xchg
cltd
pop
add
jle
nop
out
fmul
xor
imul
pop
ret
jnp
ja
test
test
mov
insl
pop
jbe
lods
dec
lds
loopne
cld
stos
pop
outsb
sub
arpl
iret
mov
adc
or
dec
das
add
jb
in
mov
push
or
cmp
jge
mov
mov
inc
fists
dec
aad
add
sbb
rcrb
out
or
sti
ljmp
jns
jno
sbb
jbe
ljmp
cmpsl
mov
rcrb
test
sbb
sub
dec
push
jnp
dec
stos
lahf
cs
and
lock
xchg
ret
fiaddl
mov
lea
or
popf
nop
call
cmp
in
inc
sub
push
int
test
mov
mov
out
jb
adc
insb
jb
cmp
xor
jb
xchg
enter
add
inc
adc
sub
inc
sbb
enter
mov
enter
insb
testb
lock
jmp
mov
mov
xor
mov
mov
clc
adc
stos
xchg
mov
cld
cmp
sub
rorl
mov
inc
mov
std
iret
loopne
imul
fadds
inc
insl
movsl
or
mov
hlt
sbb
pop
out
jb
xor
dec
roll
xorb
mov
into
inc
mov
in
popf
mov
loop
adc
repz
dec
mov
push
xchg
mov
loopne
fld
in
and
popa
lods
divb
gs
mov
int
shl
leave
mov
xchg
jmp
push
lcall
jge
arpl
icebp
repz
cli
out
fdivl
dec
js
stos
flds
lret
in
adc
movsb
lds
das
cltd
call
pop
dec
popf
mov
repz
and
fbstp
and
repnz
lret
sbb
mov
pusha
push
sti
push
shlb
cld
sbb
cmp
xchg
movsb
enter
adc
mov
addb
cmp
inc
notl
mov
dec
add
sbb
popa
stos
sti
sub
dec
push
sbb
sbb
mov
sar
or
in
mov
stc
test
or
mov
in
xor
int
xor
lds
stos
pushf
mov
scas
aaa
xlat
cld
mov
mov
movsb
pop
aas
jne
and
ret
mov
scas
lahf
out
adc
sbb
out
shlb
mov
pop
push
or
mov
pop
fwait
adc
repz
xchg
mov
push
xor
mov
mov
outsb
cmp
cmp
loopne
ja
loope
sbbl
ja
mov
sbb
shlb
inc
shlb
mov
insb
add
jne
stos
mov
lcall
add
adc
mov
faddp
push
mov
out
add
lock
leave
push
test
ficompl
cld
cmpsb
in
cmc
bts
cmpsb
popa
xchg
mov
mov
setne
inc
xchg
lock
clc
push
or
movsb
mov
mov
mov
sbb
jns
xor
jae
pushf
jo
jmp
test
int3
cmp
daa
mov
push
rol
je,pn
xchg
inc
add
mov
cmpsb
mov
cwtl
mov
lret
aam
xchg
stc
aam
or
loop
or
sbbl
jno
and
lods
add
cli
or
push
xchg
jge
mov
sbbb
cld
stos
rorl
adc
les
test
addl
or
push
and
ds
jle
sub
in
stos
mov
adc
cld
je
testb
jmp
dec
stc
outsl
sahf
push
fildll
jno
outsb
js
jg
xor
dec
add
fstpt
add
sub
inc
lret
pop
push
stc
lea
or
cli
mov
faddp
int3
xchg
cmp
out
cwtl
mov
aam
pop
dec
rcrb
dec
cmpsl
lea
cmpsb
clc
dec
sub
fdivrl
jmp
inc
hlt
test
fdivrl
lcall
mov
inc
sbb
fdiv
add
ds
xor
xlat
aas
inc
xchg
xchg
jl
jae
jp
sbb
jno
mov
aad
pop
mov
in
mov
in
movsl
movb
lods
addb
mov
mov
fimull
add
lea
or
clc
adc
pop
push
leave
test
in
mov
mov
xor
xchg
lods
test
xchg
sbb
inc
push
lds
adc
insb
push
sub
stc
mov
dec
push
fwait
fwait
push
std
lea
push
adc
div
iret
sbb
in
mov
mov
fldl2t
adc
in
mov
lods
mov
mov
push
or
outsl
lahf
xlat
sbb
mov
push
fisubrl
ja
or
outsl
dec
mov
data16
xchg
push
push
or
cmp
insl
inc
out
pop
fs
jmp
jmp
sti
sub
push
jg
sahf
lret
xchg
movsl
dec
push
aad
addr16
jne
push
and
loop
loope
test
cli
push
jns
dec
test
aaa
push
repz
dec
sbb
or
loop
jne
jae
pop
ja
aad
and
pop
in
pop
xchg
sub
jmp
ret
or
mov
add
pusha
into
clc
aas
xor
ss
push
jbe
ret
sbb
xchg
pop
int
dec
je
dec
sbb
xor
in
in
fwait
ret
icebp
loopne
pop
subl
int3
mov
in
push
fldcw
popa
es
xchg
adc
xchg
jb
cwtl
insb
lods
iret
sbb
push
mov
push
nop
sti
and
ret
mov
cmc
jecxz
filds
pop
xchg
in
dec
ret
inc
fs
inc
xchg
cmc
sub
jg
cli
loop
movsb
mov
jp
cmp
push
fadds
out
fbstp
sbb
adc
inc
je
loopne
mov
pushf
lret
dec
mov
rorb
mov
in
out
cltd
loope
jecxz
dec
aaa
sbb
and
out
clc
int3
fdivrl
iret
loopne
or
js
pop
jp
ljmp
mov
pop
out
xor
jo
inc
jbe
outsb
pop
jmp
cmc
xchg
int
adc
jno
inc
cmc
add
int
dec
add
jno
or
testl
mov
daa
or
orl
dec
add
dec
loopne
ret
scas
iret
or
xchg
addr16
pop
xor
in
pop
fldl
lcall
cmp
and
adcb
sub
mov
fisttpl
cmp
dec
pop
addb
int3
lcall
xchg
cltd
mov
xor
sub
cli
loop
mov
jp
aas
sbb
pop
aam
shll
pop
push
ret
pop
fisttps
mov
pushf
aam
loopne
stos
stos
xchg
cwtl
push
and
cmpsl
cmpsb
outsl
pop
xor
pop
mov
mov
vcvttpd2dqy
add
jg
dec
dec
mov
repz
jge
jl
pop
adc
adc
hlt
xchg
out
xor
or
inc
movsb
jns
outsl
adc
stc
dec
inc
sub
fmull
sti
stc
mov
or
jo
movl
movsl
pop
mov
cmpsb
cmp
xor
push
jmp
fsub
outsl
dec
push
in
outsl
pop
push
or
shr
sbb
jo
sub
jp
sub
jle
test
cld
fsubrl
cmc
pop
shrl
je
add
or
or
loopne
out
test
test
loopne
iret
aad
ret
lahf
adc
jecxz
mov
xchg
push
std
subl
adc
imul
mov
orl
pop
and
in
dec
or
fdiv
jecxz
xchg
sbb
std
add
sar
lea
les
xchg
xchg
add
or
ljmp
out
daa
mov
iret
xchg
and
ret
add
dec
gs
fsts
xor
ds
hlt
data16
push
orb
or
out
xchg
jg
popf
popf
xchg
add
mov
outsl
cmp
dec
add
cmp
int
adc
imul
out
push
dec
adc
in
mov
fcmovbe
sahf
std
push
sbb
arpl
jmp
sbb
mov
lcall
mov
or
mov
rcrl
hlt
adc
data16
cmp
mov
fdivrl
mov
mov
rcrb
imul
scas
push
mov
sub
stos
mov
dec
iret
lds
jle
sbb
sbbb
js
pop
or
in
sub
scas
aaa
pop
mov
mov
aad
scas
xchg
nop
inc
mov
andb
or
sbb
add
test
mov
rcll
adc
in
repnz
fistps
lea
icebp
lock
dec
decb
or
ss
xchg
xchg
xor
pop
xchg
mov
dec
sbb
or
mov
push
les
mov
mov
inc
xor
andl
fstl
dec
or
and
fwait
sub
jg
cld
inc
lahf
inc
pop
cli
pusha
arpl
push
lret
lods
fs
mov
mov
test
inc
aaa
add
inc
outsb
xchg
mov
je
xor
stc
stos
mov
cli
shl
mov
push
outsl
in
sbb
lret
pop
lods
and
aad
add
lods
es
arpl
fwait
inc
jge
xor
mov
adc
inc
jl
mov
loop
enter
push
rcrb
add
or
xlat
adc
dec
aam
jbe
dec
jmp
imul
inc
xor
inc
inc
jbe
or
push
fldt
push
sbb
adc
fldcw
cld
lret
aaa
dec
inc
and
sub
jge
pop
stos
inc
inc
prefetch
or
je
xchg
or
ret
xchg
xchg
push
or
cmpsl
dec
dec
arpl
cli
adc
mov
or
mov
insl
subl
inc
xchg
mov
cmp
in
cmp
jmp
insb
mov
mov
movsb
rorb
jne
mov
scas
mov
sarl
mov
sahf
or
sbb
cmp
cmp
jnp
mov
pop
jne
test
mov
inc
outsb
test
ret
cmp
push
fdivs
jb
sbb
sti
inc
mov
in
xchg
orb
sahf
lahf
adcl
mov
xchg
xchg
lods
push
jne
movntq
mov
pushf
int
fisttps
sub
or
dec
std
xor
dec
out
popa
es
ja
sbb
fcomi
loop
jne
or
mov
cmpsl
push
pop
pushf
push
jnp
lahf
aaa
sub
push
xlat
in
fs
into
cwtl
push
or
mov
xor
inc
or
pop
push
cli
pop
das
jbe
add
push
ret
lods
mov
push
ret
pop
xchg
icebp
addr16
idivl
andps
icebp
pop
cmpb
jnp
mov
imul
mov
shl
inc
clc
xchg
add
xchg
xor
out
scas
pop
addr16
fisttpl
lock
mov
push
cmp
inc
popf
inc
adc
jnp
mov
cmpsb
sub
push
movsl
bound
push
aad
xor
mov
sbb
mov
aas
adc
mov
lods
mov
into
xor
sub
insb
mov
out
leave
subb
fimuls
jne
inc
lock
add
iret
mov
fcomps
push
lcall
jge
push
fisttpll
loope
pop
xor
int3
sbb
pushf
stos
call
pop
add
adc
test
leave
push
dec
sbb
xor
sti
add
lea
in
xor
mov
bound
ret
pop
cmp
addr16
or
push
call
gs
addr16
fwait
push
jge
bound
cmpsl
bound
enter
push
repnz
addr16
add
jo
mov
jb
push
es
leave
sub
mov
or
es
push
mov
cmp
in
mov
jo
nop
sbb
rclb
loop
mov
loopne
push
xlat
mov
xor
mov
fucom
lock
loope
dec
fcmovnu
sahf
in
loop
ljmp
xchg
and
add
int
cmpsl
adc
loope
jmp
mov
sbb
push
insl
fld
jmp
sarl
fcompl
std
adc
test
cmc
int
xchg
std
mov
xchg
sbb
stc
dec
cmpsb
lcall
add
shll
mov
and
pop
pop
sahf
iret
dec
out
nop
cmpsb
jnp
pop
cltd
outsl
fwait
popf
jecxz
mov
sub
dec
mov
testl
rclb
sbb
inc
das
fistpll
bound
mov
into
mov
pop
mov
jp
pushf
imul
or
frstor
mov
xchg
cmc
xchg
dec
rorl
outsb
or
mov
iret
fsub
sbb
jecxz,pn
inc
scas
xchg
fiaddl
ds
inc
cs
aad
mov
fcoms
xor
pop
fs
test
jns
jp
addl
cwtl
push
inc
add
add
stc
adc
aaa
std
cmpsl
leave
into
stos
stos
xchg
hlt
pop
testb
mov
mov
ljmp
xor
out
rol
fldenv
gs
pop
addb
jle
mov
lock
lret
cmp
cmp
aam
pushf
and
js
mov
pop
enter
iret
xor
sbb
pop
jmp
jle
pop
xchg
enter
imul
cmc
in
xchg
adc
mov
fs
inc
lahf
sub
roll
push
dec
jmp
adc
cs
imul
pop
outsb
mov
xchg
pushf
int3
dec
and
lods
sbb
pop
mov
nop
pop
loop
stc
enter
xor
ja
mov
mov
mov
dec
addr16
outsl
cmp
dec
inc
into
aas
jae
cli
mov
and
lods
addr16
pop
addl
rolb
ret
xor
jb
sub
or
jmp
daa
add
cltd
imul
jmp
imul
rclb
adc
xchg
loop
xor
dec
idiv
xlat
dec
inc
arpl
jb
imul
adc
xchg
popf
and
std
test
and
insb
sbb
outsb
dec
and
jle
out
ss
or
sbb
cmpsl
nop
sbb
and
jge
dec
nop
fs
in
push
xchg
nop
push
gs
in
call
bound
pop
lods
cmpsb
dec
lcall
lock
pop
daa
hlt
and
adc
bound
rorb
and
dec
in
sbb
outsb
mov
xor
test
and
pop
lcall
mov
repnz
in
mov
push
dec
push
or
jg
push
mov
or
add
add
movsl
in
cmpsb
ja
sbb
pop
fisubl
and
push
adc
xlat
enter
mov
add
notb
or
push
adc
outsb
adc
je
daa
cli
cltd
mov
popa
push
sbbl
push
jmp
cli
movsl
jns
lcall
dec
add
stos
inc
inc
mov
jns
xchg
pop
dec
jbe
pop
pop
test
arpl
in
loope
push
imul
add
ret
pop
xchg
xor
mov
xlat
lcall
repz
lds
iret
sbb
adc
pop
ret
xor
dec
mov
pop
mov
xor
mov
dec
mov
mull
rcr
mov
addl
mov
cs
icebp
scas
and
or
js
mov
lcall
cld
lea
push
sbb
sbb
cwtl
lods
sbb
iret
movsl
inc
ss
xchg
mov
and
mov
subl
nop
xchg
xchg
mov
inc
shll
daa
lcall
push
sarb
xor
push
pushf
cmp
mov
fists
fnstcw
jmp
addr16
push
push
jge
push
scas
inc
outsl
dec
sbb
pop
adc
scas
mov
cmp
mov
cwtl
cmpsb
and
inc
add
mov
sbb
push
lods
push
adc
cld
mov
cs
sub
dec
shr
inc
inc
pop
cmp
mov
dec
mov
pop
stos
add
pop
cwtl
push
adcb
repnz
aad
jo
push
sub
xchg
inc
std
iret
shll
dec
lods
mov
shll
lahf
pop
stc
mov
mov
mov
xchg
and
pop
lock
mov
pop
aaa
cmpsb
xchg
aas
out
xor
adc
dec
cmpsl
test
push
inc
jbe
add
mov
inc
jae
loope
sub
pop
scas
ret
jb
inc
test
std
stos
div
lahf
mov
jae
gs
mov
mov
call
cmp
cmp
pop
lret
fcoml
or
pop
sbb
out
mov
test
dec
push
pop
push
ret
inc
jg
add
xorb
inc
movsb
pop
mov
xchg
iret
push
dec
sti
lahf
push
push
imul
xlat
push
adc
mov
xchg
cmp
mov
xor
cmpsl
ds
aaa
jle
andl
cmpsb
or
fdiv
aaa
add
mov
aaa
in
in
mov
ret
lds
xlat
mov
stos
aam
sar
flds
in
adc
mov
std
adcb
inc
jp
scas
repz
adc
adc
adc
xchg
sbb
inc
das
xchg
int
xchg
xchg
int
popf
fs
fs
shrb
pop
loope
out
mov
roll
jmp
in
mov
adc
mov
ficompl
aaa
out
repz
outsl
xchg
dec
inc
ljmp
dec
inc
add
pop
pop
lds
inc
mov
jge
adc
lock
and
imul
mov
fstps
addr16
adc
in
lea
and
stos
lock
shll
pop
mov
rcll
js
inc
xchg
jmp
sbb
mov
push
mov
and
push
fsts
popa
mov
into
idiv
mov
rcrb
sbb
repz
iret
inc
cli
or
push
mov
shll
fcom
nop
popa
push
mov
inc
ljmp
cmp
pop
inc
test
sbb
sub
shlb
push
insl
pop
mov
and
test
sbb
in
dec
fmull
mov
inc
icebp
push
ja
and
iret
xor
mov
shrb
in
lcall
fcom
movsb
push
iret
pop
call
imul
arpl
cltd
mov
stos
pop
pop
xchg
xchg
cltd
push
cmp
inc
in
push
sarl
jmp
xor
pop
jle
sbb
xor
fcomps
hlt
jl
fmul
jo
cli
xchg
jae
mov
push
lds
out
xchg
mov
in
dec
movsl
out
ds
mov
cs
popf
mov
mov
jg,pn
mov
out
jmp
mov
xchg
imul
and
sub
test
jp
out
dec
outsb
push
mov
mov
std
jnp
and
add
scas
stos
lds
sbb
mov
or
and
daa
es
inc
mov
cmp
xchg
das
out
sti
and
ljmp
mov
fs
inc
adc
pop
jp
fimull
push
enter
xor
cltd
or
lock
mov
sti
repz
push
mov
movsb
imul
mov
mov
adc
mov
add
repnz
and
or
nop
pop
fwait
adc
and
cmp
pop
cmc
ds
cmpsl
ret
loope
jnp
inc
xchg
inc
pop
lret
in
jg
enter
jp
or
push
xchg
in
iret
sub
jo
shll
xor
mov
movsb
leave
jns
mov
pop
xor
pushf
in
ss
into
popa
mov
mov
js
sub
dec
insb
mov
notl
movsl
fisubl
sti
inc
xor
pop
in
sbb
popf
or
das
mov
dec
pop
lods
loopne
mov
jo
or
push
fnsave
je
xlat
mov
sahf
push
mov
and
mov
jp
fisubs
insb
mov
loop
inc
cld
ret
lock
outsb
push
mov
addb
sbb
mov
sarb
pop
dec
pop
ret
dec
xchg
es
daa
in
lock
push
push
test
mov
cli
mov
pop
mov
dec
out
rorl
mov
pop
pop
iret
ret
std
push
lods
mov
sbb
pushf
jge
in
jg
inc
movsl
imul
ss
dec
add
lahf
stos
lret
xor
shll
test
jo
jae
pop
mov
data16
lret
jns
jge
test
add
movsb
mov
aas
sub
fsubrp
sbb
xor
mov
out
test
shlb
push
sub
mov
push
lock
ja
inc
std
dec
mov
jbe
call
pusha
push
fcompl
sub
imul
mov
fnstenv
popf
inc
adc
or
adc
bound
stc
push
rcrl
inc
scas
aad
pop
outsl
pusha
insl
pop
mov
out
add
sbbl
outsb
sub
ja
rorl
jnp
xchg
xorl
mov
xchg
lds
inc
je,pt
dec
jno
add
lds
fimull
pop
repz
test
cmpsb
jecxz
mov
jmp
leave
xlat
jle
sbb
xor
std
mov
daa
addr16
lret
popa
sub
dec
repz
pop
adc
dec
xchg
out
in
arpl
cmp
xchg
adc
int
inc
popa
xor
nop
jb
inc
cmp
shll
daa
shrb
mov
add
mov
and
cmp
cmpb
out
cwtl
sbb
adc
mov
dec
mov
xchg
in
pop
filds
sti
push
sbb
daa
int3
mov
insb
pop
dec
mov
loop
ds
stos
xchg
mov
in
std
fisubrs
mov
je
add
sbb
enter
push
pop
fcmovnu
test
and
outsl
ret
mov
idivb
movsb
push
in
pop
sub
call
sbb
jno
mov
mov
or
xor
cli
xchg
cli
faddl
fidivrs
mov
incl
mov
mov
clc
push
sarb
mov
test
mov
cmpsb
mov
mov
add
loop
out
ficoml
push
xchg
sub
push
adc
lret
mov
imul
stc
inc
shrb
or
fsubrl
jge
cmc
je
cltd
dec
jb
das
mov
xchg
add
fs
cmp
sub
loope
aad
xchg
hlt
mov
je
pop
dec
jo
rcrl
stos
fnsave
and
dec
mov
jmp
pusha
icebp
pop
ss
adc
in
mov
stc
jno
sbb
test
insb
push
xor
dec
fbstp
lahf
push
push
ret
mov
shrb
cmp
push
imul
je
sub
push
xchg
les
fs
les
xchg
sahf
sbb
inc
dec
std
dec
and
xor
push
mov
lock
xchg
out
lret
xchg
jp
cmpsb
in
push
xchg
xlat
jae
aad
inc
jo
push
cmp
and
movsl
mov
imul
xlat
and
mov
cwtl
dec
cmp
mov
push
mov
scas
mov
sarb
push
cmp
outsb
pop
sbb
fisubl
sub
or
out
rclb
push
mov
imul
mov
sub
pusha
lods
mov
or
insb
sbb
and
xor
outsl
arpl
xlat
scas
mov
pop
shr
stc
mov
das
sub
fdivs
push
imul
adc
mov
add
call
jo
and
int3
sub
outsb
cmp
mov
jne
lods
cltd
xchg
cmp
mov
cli
repz
inc
xchg
in
add
daa
or
outsl
ret
and
cmp
fidivs
lcall
js
xor
test
or
subb
and
lret
fsubrl
lods
loop
jne
cmpsb
inc
and
add
bound
and
adc
repnz
sub
jo
and
sbb
xchg
pusha
fnstsw
andb
leave
pop
ds
mov
imul
mov
jg
push
imul
loopne
fstpt
inc
add
popa
sub
dec
xor
mov
mov
pop
add
jle
dec
sub
stos
hlt
mov
sub
push
inc
inc
scas
aaa
pop
cmp
jmp
cli
imul
push
adc
fwait
xchg
insl
rorl
add
mov
lds
ds
ss
sub
jae
jbe
xchg
fcoms
lret
xor
pushf
xorl
mov
xchg
inc
divl
ret
jmp
cld
loope
inc
xchg
insb
fld
and
dec
jecxz
js
pop
ror
or
cli
pop
fisubrl
xor
mov
outsl
cmc
xchg
popa
mov
mov
cli
xor
nop
ficoms
inc
imul
sbb
jl
jnp
push
addr16
pop
in
xchg
cmp
shrl
cmc
adc
sub
cmp
lds
out
mov
xchg
pop
mov
fidivrl
dec
repnz
mov
add
ja
loop
push
sbb
data16
mov
rorl
out
and
aad
sub
outsl
sbb
dec
mov
push
iret
xlat
mov
rcl
push
mov
sbb
fidivrl
lcall
je
pop
and
push
imul
stos
sbb
fs
leave
mov
xchg
jle
xor
dec
inc
loop
test
xlat
mov
sub
xor
out
sbbl
jb
sbb
sub
cli
jg
push
dec
repnz
cmp
pop
aam
xor
mov
fdivrs
cmp
inc
cmp
jl
xchg
mov
xor
sarb
mov
mov
arpl
sub
aaa
stc
mov
lods
outsb
cmc
js
dec
movsl
cli
adc
cmp
xchg
nop
pusha
aaa
in
int3
lds
mov
popa
lret
add
ds
mov
adc
mov
xchg
mov
rclb
aam
sub
pop
sbb
fiaddl
add
ret
outsb
pop
xor
ss
push
xor
pushw
pop
fwait
jecxz
fwait
sub
test
inc
cltd
mov
fisttpll
out
jnp
imul
cmp
mov
add
cmpl
stos
cmp
iret
and
into
sub
lret
xchg
int
or
inc
aaa
fcomp
dec
cmc
mov
inc
daa
lcall
daa
mov
jnp
incl
cmp
sti
and
iret
mov
aaa
dec
push
out
cmp
add
pop
mov
dec
dec
mov
push
movsl
test
xor
or
shrl
lret
cmp
test
call
xor
divb
and
cmp
cli
jge
push
sbb
lods
push
pop
sti
add
mov
mov
jle
test
lods
inc
mov
mov
mov
sub
cmpsl
add
cmpsb
pop
mov
aas
out
jo
inc
outsb
aam
popa
bound
in
and
sub
jns
mov
or
or
das
or
jmp
repz
cmp
dec
dec
out
push
mov
sub
ljmp
clc
mov
fbstp
pop
push
popf
repz
ss
scas
cltd
lahf
jl
adc
daa
mov
jbe
cmp
pop
fiaddl
jb
mov
jecxz
sub
cmp
inc
daa
loop
push
jns
jl
daa
in
cltd
pop
dec
xchg
popa
sti
mov
int
xor
sbb
sarl
pushf
dec
cltd
les
xor
int
or
mov
test
int
mov
xor
iret
or
out
cmpl
movsl
repnz
cli
mov
inc
test
pop
test
xchg
pushf
inc
sbb
mov
je
and
pop
dec
loope
bnd
movsl
mov
aas
inc
sub
cltd
mov
iret
sbb
dec
das
notl
test
out
mov
lret
popa
mov
pop
inc
pop
xchg
or
jmp
mov
push
sub
sub
cwtl
or
repnz
pop
popa
jo
stos
and
les
scas
xor
jmp
adc
jo
xor
sbb
in
push
int
pop
test
lret
pop
xchg
lds
ds
pop
dec
pushf
popa
notl
push
ja
mov
test
xor
xor
pop
out
jp
jp
arpl
mov
gs
mov
cwtl
inc
mov
sbb
add
jge
cmp
jns
pop
fnsave
fimuls
inc
icebp
dec
jmp
mov
dec
scas
sbb
in
mov
loop
jbe
sub
mov
mov
jg
cmp
cmp
scas
nop
gs
xchg
nop
leave
mov
cmp
iret
clc
out
aad
sbb
out
fdivl
sub
daa
cmc
int3
test
mov
pop
repnz
push
and
lcall
pop
ss
les
sahf
push
add
jecxz
mov
mov
dec
ds
ret
cmp
cltd
sub
aaa
popa
repz
scas
movb
jg
jns
mov
jns
arpl
xor
mov
imul
sub
pop
inc
stc
adc
or
jecxz
lea
lahf
shrl
jo
or
and
orb
jo
stc
mov
jbe
push
mov
xor
mov
sub
imul
push
imull
imul
pop
jae
pop
je
mov
mov
out
and
xchg
adc
sub
inc
pop
stos
repnz
adc
jo
mov
incb
or
mov
and
fadd
cmpsl
stos
adc
jle
insb
push
cmp
mov
mov
xchg
jne
mov
inc
das
fcompl
mov
sti
cmp
sti
roll
inc
xor
inc
int3
dec
movsb
pop
call
jle
mov
stc
popa
lahf
decb
xor
stos
jecxz
test
lock
inc
mov
push
nop
daa
xor
lock
xchg
adc
ds
dec
jnp
adc
adc
dec
mov
mov
jp
cmp
into
xor
xchg
mov
pop
adc
hlt
push
jne
or
sti
jge
fnstsw
mov
mov
mov
setl
scas
inc
xor
sbb
xor
jo
sub
rorl
or
aam
nop
sbb
cmc
xorb
or
jle
jbe
hlt
push
mov
nop
sbb
repz
pop
pusha
stos
mov
pop
call
push
fsubp
mov
add
int3
jmp
ljmp
orl
mov
imul
pop
or
inc
jp
inc
mov
mov
fs
aas
lds
sub
es
lret
mov
jp
sub
rcrl
xor
inc
push
in
and
push
push
iret
stos
sbb
jo
imul
rcrl
sbb
mov
add
ljmp
inc
fnsave
lret
jnp
das
gs
and
sar
dec
fadds
bound
inc
aad
imul
sbb
mov
clc
mov
push
jb
cmpb
sbb
push
out
pop
adcl
pop
jecxz
stos
jmp
outsb
and
xchg
int3
push
imul
push
lods
jne
out
dec
sub
popf
jno
jae
mov
push
inc
add
push
out
mov
out
mov
int3
mov
aas
push
fs
divl
nop
lahf
pop
mov
fdivs
xor
fbld
jns
pop
jb
cwtl
pop
and
gs
pop
cmp
mov
inc
rclb
add
out
das
jp
movsb
xor
mov
test
mov
loopne
add
fistpll
pop
adc
cmpsl
ret
add
pop
push
inc
push
xorb
cwtl
sarl
int3
shl
sbb
andl
loopne
cwtl
cmp
fidivrs
stos
push
movsl
into
ficomps
enter
inc
int3
and
adcl
push
iret
jmp
xchg
dec
sti
sbb
dec
or
movd
mov
imul
jbe
ret
jo
lret
ds
xchg
shr
inc
shll
leave
push
js
jmp
adc
sti
jle
popa
xchg
mov
or
pop
mov
decl
mov
or
iret
leave
adc
sbb
das
adc
push
int
int3
push
movsb
jne
or
pop
xor
aas
ljmp
popa
lcall
testl
test
adc
inc
push
push
repnz
js
jl
mov
cmp
add
jge
call
mov
and
mov
cmp
sub
in
mov
cmp
sub
mov
push
test
cmp
lcall
mov
mov
insl
xchg
jg
shlb
add
lret
pop
test
ret
push
and
jne
imul
sar
xchg
xchg
mov
cwtl
sub
mov
imul
js
test
mov
jl
dec
cli
into
jecxz
inc
mov
adc
jbe
sbb
sbb
dec
mov
mov
popf
in
in
mov
ret
dec
jnp
movsl
cmp
dec
ret
add
mov
adc
lock
inc
and
into
cmpsl
leave
popf
test
pop
aaa
dec
pop
fimuls
cld
cli
cmp
cli
mov
dec
mov
ljmp
pop
mov
dec
insl
mov
test
jbe
cld
cmpl
shll
or
pushf
movsl
movsb
adc
jns
cmpsb
mov
sub
jne
xchg
lds
test
push
pop
mov
sahf
pop
in
or
lret
xor
inc
rcrl
pop
inc
or
cmp
push
leave
sbb
lcall
jne
negl
dec
adc
dec
notb
popf
sbb
push
in
ljmp
push
test
dec
ficompl
fwait
xchg
imul
sti
sub
loopne
sub
jne
xor
mov
gs
xchg
sbb
leave
aas
jno
cmpsl
js
mov
rol
lcall
xorb
mov
and
popa
mov
inc
jg
test
outsl
dec
cmp
dec
or
je
cld
cld
ljmp
push
lods
fdiv
mov
out
shll
imul
cmp
xor
push
imul
out
dec
sub
testl
mov
cmpsb
dec
push
cld
jge
fwait
push
push
mov
int
xchg
or
pop
dec
xor
or
in
or
and
icebp
aaa
in
adc
bound
or
cmc
or
iret
mov
mov
jl
sbb
sub
push
sub
clc
jae
lahf
andl
aad
jge
in
sbb
into
inc
xchg
mov
pusha
bound
cld
xchg
leave
mov
dec
lock
sbb
push
and
lret
adc
enter
add
mov
cmp
dec
and
movsl
xchg
cmp
cmp
mov
inc
inc
pop
iret
dec
jo
xorl
jo
inc
mov
flds
iret
or
cmpsb
jns
cwtl
test
dec
hlt
fdivl
loop
pop
add
daa
cs
insl
sub
ljmp
xor
insb
cmp
push
test
cmp
shr
fwait
xchg
pusha
aam
int
popa
lahf
inc
into
cld
xor
xchg
sub
pop
inc
xchg
lret
sarl
fisubl
or
call
fstps
js
dec
std
enter
outsb
dec
notl
adc
sub
mov
orb
fbld
add
cld
je
push
push
push
lods
popa
pushf
andb
cwtl
mov
pcmpeqd
cmpsb
mov
xchg
push
mov
mov
xor
lret
add
jp
adc
push
push
lret
mov
sub
dec
outsb
hlt
loope
cmp
mov
pushf
lea
adc
cmp
addr16
push
aam
mov
es
adc
lock
dec
mov
mov
imull
into
push
sub
fisubl
pop
stc
mov
fstps
and
adc
and
push
testb
jb
pop
mov
aaa
lret
notl
loopne
aas
popf
aam
ss
push
inc
push
mov
aad
push
pop
jne
in
mov
sbb
rol
jle
or
fstpt
mov
mov
mov
lcall
push
fs
rcll
int3
filds
or
mov
push
lret
insl
sbb
mov
cs
cmc
sti
int3
lds
popa
push
pop
or
xchg
subl
jae
ja
cs
mov
or
iret
xlat
sub
xchg
add
push
push
push
call
nop
mov
cmp
rol
stos
or
pop
mov
addr16
ret
jae
push
lock
dec
sbb
sbbb
icebp
cmpsb
popa
add
dec
shrl
not
movsl
std
std
sub
xchg
sub
push
mov
stos
cmpsb
cmpsb
cmp
and
pop
push
dec
push
and
lret
aaa
scas
cmpsl
push
add
mov
mov
xor
rcrl
stos
push
into
cmpsb
inc
aad
cmp
or
aaa
lret
in
arpl
xchg
cmp
pop
int
push
outsb
inc
sub
xchg
push
negb
pushf
loope
cwtl
push
dec
dec
addr16
iret
insl
sub
sub
popf
pop
lock
lret
push
out
addr16
sub
leave
adc
dec
adcl
jmp
xorb
hlt
les
push
dec
mov
test
movsb
jns
pushf
mov
rclb
cmpsl
rcrl
mov
mov
movsl
test
adc
hlt
lcall
enter
cltd
movsl
fwait
and
mov
es
repnz
add
and
lret
inc
repz
mov
sub
pop
mov
pop
mov
pop
bound
fidivs
pop
mov
lea
add
int
xchg
out
push
push
adc
adc
sub
pop
cmp
mov
fistpl
movb
fldt
pop
pop
xor
loopne
adc
dec
fiadds
imul
push
sbb
sub
add
mov
push
adc
cmc
jnp
mov
fldcw
xlat
loop
imul
std
stc
dec
jno
aaa
arpl
add
cmpsb
mov
int3
or
sub
test
dec
adc
adc
mov
cmp
push
xor
mov
jbe
dec
mov
imul
daa
push
leave
mov
dec
clc
subb
push
xlat
push
lock
mov
sti
dec
or
xchg
xchg
dec
add
out
movsl
pop
sahf
mov
xchg
subb
pop
sti
push
mov
mov
adc
mov
lea
ret
push
add
xchg
setge
inc
aas
ret
xchg
add
xor
add
stos
jl
sbbl
cli
xor
adc
mov
jp
pop
ret
and
push
inc
icebp
pop
loop
in
xchg
pop
dec
jl
xor
adc
pop
loopne
sbb
in
xchg
or
in
scas
sub
cs
lcall
lds
or
cmpsb
pop
push
jno
ds
jmp
dec
mov
lds
mov
bound
mov
cmpl
in
push
xor
push
adc
inc
int
ret
addb
leave
clc
lret
subl
mov
pushf
push
mov
inc
cmp
adc
or
and
movsb
lock
xchg
cwtl
add
sbb
dec
cmp
xchg
lcall
and
in
call
push
mov
adc
out
sub
adc
scas
add
int
and
jmp
shlb
in
das
add
frstor
mov
data16
mov
fiaddl
inc
loop
mov
push
adc
out
sbb
xchg
pop
gs
sbb
jle
push
in
lcall
jle
gs
aad
inc
adc
gs
jae
inc
mov
lret
lahf
andl
out
roll
lahf
leave
lock
popf
addb
aam
fincstp
lcall
cmpl
aaa
push
mov
int3
int3
jmp
push
loope
jnp
addl
xchg
pop
mov
fiaddl
push
out
pop
add
dec
pop
lock
pop
pop
cmp
mov
hlt
lahf
hlt
xchg
and
shr
popa
repz
cs
xchg
and
lock
je
mov
pop
fsubl
dec
jecxz
mov
and
das
daa
jb
aam
push
pop
frstor
out
test
sahf
xor
push
cmovp
push
cmpsb
inc
and
inc
adc
in
and
mov
jp
xor
mov
movsb
mov
dec
enter
scas
inc
adc
xchg
mov
pop
xor
shrb
dec
or
inc
cmpl
sbbl
xlat
or
inc
sbb
decb
cmpsb
fiaddl
shll
les
inc
push
xor
add
inc
xor
enter
dec
in
and
in
cmp
adc
add
aaa
or
mov
scas
lcall
sar
and
sub
outsl
jl
add
repz
jmp
maxps
adc
jmp
cs
in
imul
stos
add
bound
negl
or
xchg
and
sbb
mov
in
mov
push
sbb
add
xor
test
xchg
adc
adc
xchg
push
js
mov
xchg
jb
cwtl
cli
ja
stc
insl
loop
shrb
mov
xchg
lock
loopne
mov
test
xor
mov
sbb
dec
stos
pusha
in
dec
or
fwait
cs
movsl
jl
in
pop
scas
out
cmpsb
dec
popf
dec
sbb
std
jecxz
xor
leave
sbb
bts
mov
mov
cld
lahf
mov
cmp
xor
fidivs
add
outsb
sbb
sbb
in
pop
push
cmp
outsb
mov
inc
or
ss
out
or
pop
pop
mov
mov
mov
add
sti
inc
ret
xor
adc
jbe
jmp
addl
adc
mov
cmp
and
or
mov
mov
ja
pusha
mov
cmpsl
jp
cmp
out
push
cwtl
insb
fcoms
add
int3
mov
xchg
push
cltd
ja
popf
cmp
jnp
adc
pushf
out
inc
jecxz
mov
shl
lds
push
test
push
inc
inc
loop
xchg
ds
mov
out
pop
dec
pop
xchg
dec
add
push
iret
xchg
jb
int3
into
lcall
or
push
and
sub
dec
jae
push
fmul
lret
movsb
lds
or
xor
iret
xchg
mov
push
sub
inc
ss
fbld
addr16
pop
test
jge
sbb
dec
mov
pushf
add
stc
and
sbb
test
das
les
inc
xchg
add
lret
adc
add
loope
inc
lock
lret
push
mov
outsl
dec
mov
stos
out
insb
and
sbb
and
out
pop
imul
inc
mov
ss
xchg
add
lret
ds
jl
jmp
xorl
out
mov
call
mov
mov
and
xchg
test
nop
popa
fwait
adc
mov
push
cltd
mov
test
in
jnp
cmp
out
fstpl
add
movsl
xlat
les
and
push
addb
push
and
pop
add
sti
jno
add
ds
and
xorl
les
lds
int
leave
xchg
insb
int3
rcl
fnstcw
pop
jbe
adc
mov
cmp
add
ja
inc
xor
aas
aas
scas
push
xchg
xchg
mov
adc
fsin
movsb
add
pop
inc
jg
push
lock
jb
add
rorl
push
lds
clc
inc
push
xchg
fildll
cmpsb
and
cmp
subb
cld
xchg
push
sub
xor
scas
sbb
fwait
je
push
leave
nop
das
dec
jl
xchg
cwtl
in
out
or
push
push
shll
add
xor
outsb
icebp
out
xor
fwait
adc
sub
dec
adc
xchg
mov
push
jle
push
cmp
and
in
push
mov
inc
add
xlat
cmp
mov
sbb
pop
lret
iret
jae
int
int
sbb
xchg
dec
sbb
cmp
pop
mov
stos
scas
push
dec
add
push
orl
mov
ss
sub
push
pushf
test
push
fildl
cmp
wrmsr
es
mov
xchg
sbb
jo
dec
movsl
xchg
fcom
les
movsb
and
test
mov
lock
mov
adc
pop
push
fs
cmp
stc
xchg
pushf
inc
nop
xchg
test
mov
stos
ljmp
frstor
movsb
mov
imul
or
cmp
sub
loop
pop
xchg
mov
bound
jl
and
cmp
faddp
and
repz
and
imul
cmp
aaa
cltd
shl
jo
cmpsb
and
cld
xchg
cli
pop
dec
pushf
mov
add
jl
mov
jne
push
out
imul
xchg
imul
sarl
xchg
mov
out
lret
mov
aaa
push
jmp
out
push
pop
movsl
mov
rcrl
pop
inc
in
add
and
and
lahf
std
cmp
int3
dec
xchg
pop
mov
fmull
pop
jnp
mov
fimull
mov
or
pop
inc
aaa
lock
lahf
mov
sub
and
cmp
mov
ja
sbb
xchg
mov
fcomp
mov
dec
mov
jecxz
mov
cltd
arpl
lods
adc
fldl
xchg
dec
ret
jae
adc
cwtl
roll
mov
gs
or
push
xor
or
cmp
mov
sbb
cmp
popa
jae
sbb
decl
loope
push
testb
cmp
pusha
shrb
or
icebp
dec
mov
dec
push
inc
fld
lods
outsl
rorb
arpl
xchg
repnz
das
in
lods
je
cmc
icebp
mov
addr16
cmpsb
lock
xor
xchg
insb
fcomps
aam
rcrl
mov
into
addr16
dec
xchg
add
sub
inc
aad
sahf
and
xchg
jmp
test
cmp
mov
ss
aas
das
nop
out
cmc
out
nop
pusha
ljmp
subl
push
pop
in
outsl
fisubl
and
add
jb
pop
inc
sbb
gs
push
pop
insb
inc
fnstcw
push
and
xchg
cmpsl
or
pop
clc
movsl
pop
add
cltd
sbb
or
xor
cmp
sbb
xlat
jecxz
lret
mov
jno
outsb
adc
pop
lea
xchg
push
das
shll
dec
fstl
sbb
in
data16
clc
faddp
out
das
out
mov
sbb
movsb
das
outsb
dec
outsl
fs
inc
pop
inc
mov
fdivrl
pop
and
hlt
cmpsl
sarb
lahf
xchg
shrl
arpl
mov
sub
jo
or
jns
push
imulb
pop
jbe
add
push
imul
scas
mov
sub
ds
push
push
xchg
push
imul
adc
push
in
xchg
sub
cmp
mov
js
insb
clc
in
add
xor
mov
clc
push
movsb
sub
jmp
ljmp
negb
xchg
and
adc
daa
mov
fimuls
cmpsl
jo
mov
push
xchg
jne
pushf
pop
mov
fsts
andl
pop
iret
fnstcw
insb
mov
sub
xorl
cmpsb
repz
mov
mov
js
mov
addr16
das
jge
mov
sbb
jo
dec
xchg
lods
mov
pushf
fcomps
repz
jb
data16
jp
sub
xor
sbb
dec
pusha
jmp
mov
and
repz
ja
push
popa
bound
outsl
repz
call
inc
std
pop
dec
enter
mov
fstl
push
push
sub
aas
push
sbb
hlt
or
cmp
sbb
and
jmp
addr16
fildll
addr16
sub
ret
push
movsl
sub
imulb
daa
lods
movsl
dec
xor
sub
adc
jmp
lahf
add
aas
jbe
fmuls
mov
rorb
xchg
add
shlb
sbb
or
xchg
pop
iret
push
adc
inc
xor
repz
fcmovnbe
mov
in
shrb
add
lea
daa
loope
icebp
inc
repnz
or
sub
xor
and
mov
xchg
xor
out
and
sbb
inc
mov
cld
movsl
cmc
adc
cmc
jge
out
into
das
add
sbb
sti
stos
inc
pop
cmp
lock
repnz
fadds
mov
movsl
push
repnz
push
inc
sahf
cwtl
hlt
pop
outsl
or
std
and
dec
int3
fwait
push
dec
fistl
loope
pop
push
jmp
mov
scas
jmp
jmp
dec
jns
push
xchg
sahf
dec
addr16
out
fstps
pop
aam
rcll
outsl
pop
mov
dec
cmp
test
dec
sbb
sahf
pop
add
mov
mov
in
cs
cmp
addr16
dec
es
cmpl
mov
in
and
out
sub
xchg
fsubrs
mov
cltd
inc
sub
insl
cld
pop
push
adc
popa
and
lcall
out
lahf
cmp
pusha
sbb
add
test
fbstp
pop
push
inc
clc
jle
xor
add
andb
jb
inc
push
int
imul
pop
cli
fmuls
jo
lcall
outsb
mov
in
mov
call
mov
sbb
das
push
stos
dec
mov
xor
mov
fucomi
mov
xor
fwait
out
dec
repz
es
out
xlat
iret
enter
lcall
aad
negb
sbb
in
dec
adc
push
jecxz
lock
lods
aam
cwtl
xor
dec
add
mov
sub
jo
out
out
mov
pop
std
sbb
in
sbb
mov
inc
fnsave
mov
inc
outsb
xchg
pop
in
mov
pop
adcb
xor
mov
ljmp
add
loope
jbe
xchg
ficomps
mov
push
jb
xchg
jae
push
clc
jg
cltd
and
sbb
adc
mov
inc
outsb
std
or
push
mov
mov
xchg
dec
rol
rorb
mov
adc
pop
inc
pop
add
outsb
std
inc
push
outsb
mov
cmp
adc
dec
fsts
rcll
jmp
or
add
dec
mov
pop
pop
jno
cmp
sbb
addr16
mov
cltd
pop
sub
add
xchg
mov
fiadds
adc
aam
dec
push
xchg
gs
fiaddl
mov
push
leave
in
lahf
pop
sub
xor
stc
rolb
rcrl
aad
pop
dec
popa
gs
insb
mov
fmuls
mov
mov
jl
and
xchg
in
call
push
fstps
dec
dec
sub
jl
push
ja
nop
test
dec
mov
push
mov
test
hlt
jns
mov
mov
in
mov
scas
jle
lods
mov
and
push
xor
iret
inc
ret
dec
jno
gs
scas
add
fmull
call
icebp
aad
push
mov
fwait
add
jmp
fdivrs
mov
pop
imul
or
cmpsb
paddsw
lret
and
into
cmp
dec
shlb
iret
pop
add
pop
int3
insb
mov
add
push
into
push
ja
pop
push
dec
pop
push
cmp
rclb
jg
mov
jns
jmp
add
stos
stos
push
xchg
adcb
rclb
jne
xor
xlat
dec
sub
pusha
pop
imul
mov
das
mov
inc
xacquire
push
mov
mov
fsts
jns
push
fyl2xp1
outsb
mul
movsb
enter
out
mov
fiaddl
jno
adc
mov
mov
jmp
jb
test
mov
fists
mov
jl
dec
loope
dec
mov
in
push
and
lea
push
cmp
mov
jno
sbb
outsb
mov
out
sub
popa
add
mov
dec
sbb
arpl
ljmp
call
bound
dec
cld
mov
xchg
add
cli
xchg
rorb
mov
xchg
ja
in
push
sub
mov
testb
std
out
into
xchg
sub
dec
or
addl
cmpsb
mov
jbe
xchg
xlat
aaa
mov
sub
outsl
xor
sbb
mov
adc
aaa
xor
aad
enter
sbbl
clc
ljmp
ljmp
dec
xchg
push
pop
loop
mov
cs
scas
mov
dec
mov
hlt
jmp
mov
sbb
ss
jno
dec
enter
adc
je
push
sbbl
sbb
roll
jnp
jne
xor
ficompl
xchg
push
sbb
out
or
pop
in
imul
cltd
and
or
mov
mov
xchg
rclb
ret
adc
jecxz
sbb
out
std
cmp
push
lcall
fistl
xlat
dec
mov
lcall
inc
gs
cltd
xorb
adc
lret
in
testb
aaa
shlb
idivl
xchg
lea
sbb
and
add
sbb
push
mov
push
and
sbb
jns
inc
gs
mov
adc
push
and
sbb
scas
cmp
and
rclb
push
sub
cmp
scas
ds
xlat
loop
jns
pop
sgdtl
pop
test
sti
out
fs
lea
outsb
stos
les
inc
xor
mov
loop
push
pop
and
push
loope
inc
mov
push
mov
ja
pop
pop
shrl
mov
inc
insb
jp
test
xchg
insb
xor
pop
adc
push
xchg
mov
pop
push
les
pop
add
mov
adc
aas
aaa
movsl
ljmp
dec
pushf
pop
xchg
pop
fisubl
data16
mov
lods
push
xor
lock
sbb
mov
cld
test
lret
cld
mov
lods
cmp
add
fwait
cli
and
iret
outsl
mov
int
mov
or
mov
pushl
push
outsl
andl
stos
adc
loop
imul
and
add
dec
and
aas
xor
out
std
sub
mov
jg
jne
jo
jle
cld
inc
push
cmp
xchg
mov
je
test
mov
cmp
ret
mov
aaa
cmp
fcompl
popa
aad
cld
push
jae
dec
pop
aaa
in
cmp
and
mov
popa
fists
pop
rcl
stos
mov
test
pushf
les
dec
sbb
test
lea
idiv
push
xchg
data16
lods
nop
pop
aaa
xor
sbb
bound
cmc
stos
cmp
ja
pop
inc
sub
ljmp
xchg
int
add
out
and
movsl
je
push
adc
sbb
mov
and
jmp
add
pop
lods
pop
ror
arpl
dec
pop
jle
sahf
pop
imul
std
aaa
cltd
sbb
push
jl
jnp
or
xor
pop
jecxz
mov
jle
loope
je
mov
hlt
jl
or
mov
mov
pop
test
xor
sub
pop
jmp
add
les
mov
jns
sub
xchg
test
loope
inc
or
aam
pop
stos
mov
cmp
mov
xor
or
inc
cmp
xor
dec
js
vpcmpeqw
mov
pop
js
stos
test
in
clc
jmp
pop
jmp
lcall
cmp
cltd
mov
jle
test
out
or
insl
nop
in
cwtl
scas
push
xor
int3
xor
scas
mov
es
fiadds
sub
out
iret
cwtl
push
lds
movsb
mov
jnp
sub
repz
aaa
and
push
shrb
pop
lds
push
hlt
imul
and
dec
mov
std
pop
movsl
stos
test
or
xchg
sub
das
push
outsl
pop
sidtl
stc
push
or
pushf
sti
ljmp
add
bound
sbb
fdivrs
mov
aaa
repz
shl
stos
mov
stos
fstps
dec
fildl
insl
add
inc
pop
inc
mov
cltd
dec
mov
shlw
or
pop
ret
loopne
in
arpl
lret
mov
in
xor
cld
xchg
lods
and
icebp
mov
adc
rorl
psrad
and
xchg
loop
inc
xchg
xor
out
jle
imul
push
mov
rclb
popaw
inc
mov
lahf
inc
scas
aad
mov
lret
adc
loop
and
sbb
fistps
lds
sbb
push
ret
lret
xor
clc
pushf
fxtract
imul
jae
je
mov
jg
jae
ds
mov
sbb
jmp
cwtl
out
ljmp
xchg
cli
mov
sbb
psubq
das
mov
stos
aas
inc
cmp
sbb
push
add
pusha
aaa
adc
hlt
cs
insl
mov
jns
hlt
mov
jecxz
pop
mov
lods
rorb
mov
inc
mov
out
decl
jmp
pop
dec
std
jle
int3
rorb
ficoml
mov
loop,pn
adc
sub
mov
dec
pop
and
sbb
ss
loop
and
xchg
imul
jmp
repz
and
jbe
push
push
xor
aam
cmp
and
mov
das
jle
outsl
sub
repz
hlt
popf
pusha
int
cmpsb
mov
pusha
ficomps
adc
insl
cmp
inc
js
sahf
rdpmc
pop
out
fisubrs
imul
lock
push
fwait
jb
add
loopne
lds
popf
arpl
xchg
shll
icebp
jmp
jno
add
jo
cltd
add
lahf
rol
jae
add
hlt
jl
xor
lahf
lods
pop
mov
test
mov
stos
jno
stc
xor
iret
inc
mov
stos
mov
add
mov
lods
ss
add
aas
xor
shlb
cs
dec
and
jg,pt
inc
in
jne
mov
nop
data16
cmpsl
sbb
shrl
das
mov
mov
and
and
pushf
lods
cmc
push
data16
dec
mov
repnz
sub
nop
test
mov
lds
or
sahf
cmp
push
cli
add
sbb
lods
leave
in
lret
pushf
push
jo
outsl
mov
push
lret
pop
adc
adc
dec
lahf
into
adc
stc
mov
cmp
rcl
push
imul
icebp
push
cwtl
adcl
lcall
cmp
incb
out
sub
jbe
pop
cmp
xor
dec
xor
push
pop
sbb
mov
in
aaa
mov
movsl
adc
dec
test
push
movsb
test
mov
jecxz
scas
mov
cmp
jno
pop
sarb
xchg
add
ja
in
pop
add
and
pop
notb
dec
mov
adc
insl
inc
push
imul
aam
xor
fbld
lods
and
bound
into
mov
push
xchg
sahf
cmpsb
xor
sbb
dec
stos
and
cmp
and
fldt
les
or
adcb
sub
sbb
inc
js
adc
pop
into
lcall
mov
rorl
in
jle
add
mov
mov
imul
and
cltd
pop
jle
loope
mov
adc
or
cmpsb
xchg
cmp
or
gs
dec
fcomi
push
loopne
lret
lret
sub
sbb
aad
inc
mov
mov
inc
cmpsb
lahf
cmp
jp
fsubrl
imul
out
mov
push
roll
sub
into
mov
stc
cmp
push
cmp
push
jo
inc
shlb
mov
mov
add
jecxz
sbbl
imull
xchg
test
dec
inc
jno
pop
pop
sahf
pushf
dec
ja
cmp
sbb
xchg
test
cmpsl
movsl
lcall
pop
or
add
das
gs
leave
dec
lods
fincstp
cmc
jns
fnstcw
sub
insb
hlt
xchg
fidivs
xor
mov
ficomps
inc
push
fsubp
cmpsb
pop
inc
mov
mov
jbe
repnz
mov
jne
xchg
jns
lcall
fnstenv
cld
mov
lret
hlt
push
lods
push
popa
out
pop
sub
mov
ljmp
and
jns
test
orl
pop
or
inc
mov
mov
mov
inc
xlat
outsb
cmp
dec
dec
repnz
mov
clc
es
fcoml
inc
ret
aam
push
xlat
adc
lds
mov
mov
xor
push
cmc
inc
and
movsb
pop
pop
cmc
insb
movsl
imul
jmp
std
sbb
xchg
out
in
std
and
mov
test
test
in
or
adc
sti
rol
orl
decb
xor
filds
pop
or
cltd
and
mov
leave
add
bnd
jg
nop
jo
add
push
cli
and
aas
push
stc
pop
pop
mov
push
aaa
xchg
stc
je
inc
addr16
ja
adcb
jo
insl
cmp
inc
add
pop
stos
rcll
scas
or
push
out
jg
movsl
jns
dec
nopl
out
push
sbb
mov
sbb
jle
ret
push
test
pop
andl
sbb
aas
mov
jns
mov
cltd
inc
pop
push
pop
test
mov
cld
mov
rcr
dec
xor
test
in
inc
daa
leave
nop
popa
addr16
repz
jmp
mov
incb
push
and
xchg
cmp
push
xchg
pop
dec
add
js
mov
inc
inc
fsts
xchg
aas
pop
mov
pop
jo
pop
andb
insb
lods
mov
cmp
mov
movsl
mov
dec
js
mov
inc
push
aaa
mov
dec
imul
scas
repz
cmpsb
adc
iret
and
jmp
xchg
xchg
js
shlb
xor
wbinvd
fs
jne
cmp
sahf
daa
push
test
xlat
sub
dec
add
sbb
sub
sbb
lods
push
mov
jbe
ficompl
pushf
pop
cwtl
mov
test
pop
out
push
add
imul
mov
into
xchg
loopne
sbb
lds
and
push
cmpsb
jp
mulb
and
iret
lock
ds
push
jo
jl
jg
fldcw
pop
or
icebp
imul
clc
jge
xor
movsl
sarl
gs
sbb
cmp
jns
pop
out
loope
loop
xchg
mov
mov
je
lret
add
nop
adc
mov
lcall
sub
sbb
dec
jae
sbb
insl
daa
dec
hlt
out
sbb
fadd
mov
pop
aaa
jg
mov
push
pop
add
icebp
xchg
cmp
cmp
andb
sbb
push
nop
sahf
xor
in
pop
cmp
and
shrb
test
xor
dec
add
rcrl
jl
sti
adc
or
ss
movb
sub
mov
sub
aas
add
out
scas
dec
dec
or
lods
mov
and
cli
dec
test
in
es
bound
je
std
inc
adc
cwtl
cs
mul
arpl
mov
lahf
stos
mov
pop
xchg
sub
jp
jge
imul
jecxz
pop
pop
jbe
enter
xchg
inc
cmc
mov
jge
add
sub
or
pop
push
sbb
dec
mov
sti
mov
test
test
test
cmp
jne
es
jp
inc
scas
loopne
sub
mov
out
stc
xchg
pop
or
rcll
adc
clc
and
inc
stos
addr16
or
arpl
sbb
mov
xlat
pop
call
shrl
or
bound
test
cltd
shl
bound
inc
or
mov
lods
insl
xchg
aaa
js
aam
test
std
out
pop
push
dec
int3
push
shrb
mov
cmp
cmc
jne
cmp
add
dec
mov
inc
lods
lods
test
or
and
mov
mov
int3
call
hlt
lock
mov
addr16
cmp
cmpl
cli
add
pushf
mov
fwait
iret
add
mov
fs
ror
fwait
jg
pop
idivb
nop
ret
dec
mov
repnz
aaa
cmp
leave
inc
push
or
out
adc
cmp
xchg
xor
insb
icebp
es
mov
sub
lds
jg
fcmovnbe
xor
add
xlat
sti
push
imul
movsb
outsb
out
xchg
xor
fcoml
jle
rorb
cli
shl
mov
push
and
or
nopl
add
addb
lea
xor
sbbb
fwait
jg
lods
cmpsb
mov
push
movsb
add
test
std
or
adc
es
daa
test
mov
imul
js
mov
adc
je
clc
scas
xlat
cld
or
mov
or
push
push
lret
mov
stos
mov
mov
notl
pop
add
fwait
bnd
add
jge
sar
mull
xchg
inc
andl
adc
sbb
sahf
lret
lret
lcall
lds
xor
je
aam
xor
insl
sbb
insb
mov
mov
sub
xchg
rorb
out
push
scas
pop
cmp
sahf
scas
cld
pusha
test
stos
ljmp
cli
roll
ret
xlat
pop
test
jg
mov
sbb
stos
std
pop
adc
inc
jmp
dec
pop
lret
push
add
lods
jbe
incb
adc
popf
js
sub
and
and
mov
inc
dec
cmp
push
inc
in
fsubs
mov
jne
loopne
and
sarb
aam
jge
xchg
in
xchg
sbb
fwait
aad
mov
and
sti
repnz
es
imul
fwait
dec
jnp
insl
fucomp
jge
imul
pop
lea
dec
adc
aas
cmp
xor
sbb
inc
xchg
xchg
adc
test
and
callw
adc
add
lock
scas
loope
xor
mov
out
sti
push
shrb
in
fnstenv
push
insb
je
fisttpll
jmp
insb
adc
xchg
xlat
and
pushf
jl
ja
xor
sbb
loope
or
out
cmpsb
iret
dec
adc
mov
shll
dec
pop
xlat
fs
cmp
sti
ret
and
aam
push
add
or
or
inc
cmp
pop
and
imul
idivb
ja
or
inc
adc
xor
xchg
lret
inc
cmp
lret
xchg
dec
or
pop
cmp
bound
pop
js
cmp
sbb
push
repz
int
into
fs
ljmp
pushf
jb
adc
pop
xor
ljmp
shll
jmp
std
sbb
std
loopne
iret
mov
mov
mov
imul
mov
or
mov
cmc
lahf
mov
pop
jle
adcl
aad
aaa
add
mov
cli
test
mov
push
sti
sub
inc
add
cmc
xchg
ss
in
inc
addr16
xchg
sub
inc
and
sub
cmc
nop
jae
xlat
pop
add
adc
mov
xor
xor
push
cmp
or
negb
add
mov
mov
aam
jmp
xchg
aaa
pop
mov
xchg
ret
scas
mov
stos
ret
test
cld
ret
adcb
subb
outsl
roll
mov
scas
dec
popf
jle
fdivrl
sub
fbstp
arpl
xchg
mov
adc
xor
dec
push
jnp
in
pusha
jp
leave
pop
jge
cmpl
push
dec
cli
mov
dec
push
jmp
sarl
shll
mov
xor
mov
adc
test
rol
stos
in
out
repnz
pop
push
testb
stos
jmp
adcl
ljmp
out
dec
jp
flds
xor
pop
insb
cmp
inc
pop
and
fimuls
pop
aas
jb
loopnew
xchg
push
add
sbb
cmp
fwait
lcall
les
inc
inc
push
xchg
and
dec
pop
sub
or
sub
shrb
mov
or
ja
dec
adc
cmpsb
add
sbb
mov
mov
jmp
lock
lret
aad
push
repz
pusha
je
push
popf
imul
daa
stc
or
jg
stos
arpl
sub
in
sbb
xchg
les
fadds
andb
lods
push
ja
xor
mov
cwtl
adc
test
add
push
mov
dec
jns
aam
xchg
sub
shr
dec
inc
xor
bound
pop
push
gs
popf
pusha
mov
xlat
loopne,pt
lcall
xchg
pop
cli
mov
adc
and
and
jmp
sbbl
push
idivl
jo
int
rcrb
xor
test
cmp
subl
cmpsb
js
adc
lret
sti
inc
imul
inc
mov
push
jae
sub
into
enter
stos
popf
lret
xchg
or
or
ficoml
test
lea
jbe
int
cmp
sbb
and
ret
add
scas
mov
adc
or
ss
sti
xor
sub
pop
bound
add
arpl
inc
fidivrl
scas
fs
pop
jns,pn
or
vmwrite
leave
jb
hlt
or
loope
fs
dec
add
dec
push
mov
cmp
cmp
mov
and
cmp
cmpsb
mov
into
iret
aam
xchg
or
je
stos
test
scas
push
sub
jno
jmp
xchg
in
mov
or
imul
mov
mov
xchg
xlat
mov
push
stos
xchg
dec
xchg
hlt
mov
add
pop
subl
rcr
jge
mov
adc
sub
push
adc
cmpsb
adcb
inc
xchg
sti
fnstcw
cmp
out
test
mov
add
sbb
add
test
inc
dec
loope
or
cmpsl
push
pop
insb
ss
test
lcall
jo
or
and
xchg
hlt
mov
mov
jg
bound
sub
and
pop
cmpsb
mov
jp
andl
cmpsl
rorl
pop
push
sub
lods
jns
add
xchg
xor
orb
add
mov
sbb
xchg
push
mov
and
into
test
cmpsl
jge
push
fs
arpl
push
es
clc
sub
adc
pushf
cmp
pop
popf
subl
inc
xor
pop
neg
popa
sar
jg
and
movb
and
add
sub
push
sub
mov
cwtl
ja
inc
jp
cmp
int3
dec
jmp
jnp
xchg
pop
mov
popf
and
sub
xor
hlt
enter
dec
sbb
pushw
sbb
mov
cmp
sub
add
mov
mov
ror
arpl
cmp
adc
or
rdmsr
cmp
adc
outsb
mov
call
xor
shll
repnz
xchg
sub
jg
pop
push
and
mov
das
and
adc
push
add
call
lea
xchg
inc
xor
xchg
inc
repz
stos
dec
fcmovb
mov
imul
popa
or
mov
test
movsb
push
inc
shl
fcoml
sub
push
arpl
cs
cmp
loop
adc
push
js
or
jp
popf
jb
pop
or
sbb
and
mov
xchg
xor
das
sbb
and
int
or
gs
mov
hlt
iret
les
sbb
xor
dec
xor
add
inc
int3
dec
inc
mov
pop
sbbl
inc
dec
xor
add
test
cs
xchg
add
mov
insb
pop
leave
and
push
mov
sbbb
mov
mov
movsb
push
mov
jno
sysenter
cltd
int3
cli
adc
popa
cs
scas
sbb
mov
popa
cmpsl
sbb
sbb
cmc
data16
sub
insb
pop
push
jl
inc
sti
adc
addr16
popf
add
cltd
push
jecxz
sarb
call
rcll
int3
iret
xlat
shll
push
cmpsb
in
sbb
cld
jno
lea
movsl
ja
movsl
cmp
int
adc
movsb
ljmp
jecxz
int3
add
sbb
pop
push
test
dec
sbbb
sbb
sbb
and
mov
and
insb
lods
test
shrb
ss
sub
test
std
xchg
dec
push
mov
cltd
fbstp
cmovne
mov
xor
push
adc
fnsave
lahf
fs
sarl
fisttps
push
adc
lea
mov
xchg
adc
in
jecxz
les
call
push
dec
ret
inc
cmp
out
sub
int
and
mov
nop
push
sub
sbb
loopne
inc
push
add
or
push
and
out
sahf
lcall
cmp
cli
lds
clc
pop
or
sahf
shll
pop
cmp
push
sbb
aad
les
int
out
and
and
das
adc
mov
imul
sub
js
in
incl
pop
adc
push
add
mov
mov
push
rcr
jbe
mov
mov
pushf
mov
in
scas
inc
push
pop
adc
and
add
lret
pop
fcmovne
sub
or
test
lcall
push
adc
and
pop
add
adc
enter
xlat
dec
lea
xchg
cmp
in
addl
lods
mov
movsb
push
ds
lret
outsl
lcall
adc
movsb
repz
mov
in
or
xchg
insl
lahf
shll
sbb
xchg
out
mov
popf
jno
adc
adc
lret
out
mov
test
out
aaa
inc
jle
shl
arpl
lcall
clc
sbb
jbe
out
das
jo
xlat
stos
xor
push
mov
mov
fisubl
out
fsubs
cli
test
mov
and
mov
add
insb
push
lret
xchg
lcall
inc
test
add
xlat
in
mov
dec
mov
popa
sbb
sbb
out
subb
stos
push
lea
jns
dec
lods
jmp
xchg
add
outsl
sbb
push
push
arpl
sub
jne
xor
inc
push
xchg
divl
inc
jle
and
xchg
xchg
cwtl
js
rcl
icebp
add
test
mov
aaa
nop
roll
xor
gs
test
js
adc
pop
add
inc
lahf
loope
mov
pop
cld
add
and
lods
xor
pushf
subl
movl
in
loopne
flds
adc
mov
mov
mov
push
movb
cmp
ret
int3
and
dec
or
cmp
mov
or
movsb
pop
jmp
sarb
repnz
movaps
rorb
enter
push
pop
inc
popf
push
add
lods
nop
xor
xchg
ror
pop
aas
mov
push
push
mov
loop
divl
pusha
cmc
ret
pop
add
push
xchg
je
xor
inc
or
xchg
or
cmc
sub
xor
cmpsb
nop
cltd
mov
inc
inc
das
and
iret
pop
test
pop
repz
call
mull
lahf
arpl
xor
or
in
adc
cld
out
push
add
push
pop
pop
out
ret
dec
and
leave
int
mov
mov
mov
loopne
pusha
mov
xchg
aas
fdivrs
fistl
pop
cmpsl
jns
jmp
cmp
into
cmpsb
insl
dec
imul
lcall
and
outsb
xchg
xor
pop
aas
push
jmp
mov
adc
pop
ds
pop
push
mov
xlat
test
mov
push
cmpsl
imul
in
imul
add
pop
in
push
sub
add
fadd
xchg
push
movsb
xor
mov
sub
and
imul
xchg
lcall
insb
adc
mov
cmc
mov
or
ljmp
std
dec
jae
adc
inc
jo
jle
orl
je
insl
inc
jle
lods
ret
dec
push
xchg
sub
or
imul
sahf
xchg
out
loope
test
inc
sub
ficoms
xchg
repz
jne
xchg
mov
add
enter
shl
in
fwait
push
ss
pop
fwait
jb
dec
fdivl
push
mov
cli
add
add
movsb
and
xor
cmpl
mov
mov
dec
loop
aaa
leave
arpl
inc
and
push
jg
mov
inc
imul
add
das
add
cmpsb
push
mov
notb
adc
adc
dec
lahf
push
xchg
pop
pop
sbb
paddsw
fs
add
xchg
or
or
cmp
imul
jns
ja
adc
iret
push
push
bound
nop
or
sbb
imul
inc
lcall
test
cmp
leave
cwtl
sbb
cmp
pop
pushf
test
lods
outsb
imul
xchg
push
shlb
push
xor
push
dec
pop
cwtl
xlat
cltd
cmpsl
into
fwait
dec
mov
sbb
ljmp
hlt
mov
lds
rcr
push
shll
arpl
add
cmp
pop
test
jmp
fwait
daa
addr16
gs
iret
loope
mov
sbb
push
mov
std
adc
pop
aaa
addr16
insl
xor
fsubrl
aam
and
jecxz
push
in
xor
call
mov
cmpl
push
push
jmp
xchg
andb
cmp
pop
sbb
xchg
sub
push
shlb
in
push
imul
cld
aad
pop
dec
mov
mov
stos
idivb
pop
xchg
or
mov
stos
add
dec
sbb
test
ss
out
push
sub
rorl
cld
jmp
xchg
sbb
push
push
xchg
dec
add
test
mov
aad
fisttps
fldl
fs
sub
sbb
xchg
in
lret
cmpsl
repnz
popa
push
out
ljmp
rolb
mov
sbb
mov
ss
fs
imul
add
push
and
inc
mov
jne
and
rorb
jg
push
daa
sahf
and
subb
leave
mov
into
adc
repnz
pop
fists
outsl
jecxz
fisttps
call
mov
test
xchg
and
pushf
int
subl
adcl
jecxz
add
push
add
mov
mov
push
outsb
sub
adc
sti
xor
jge
mov
xchg
loop
push
push
repnz
adc
pop
stc
sub
inc
sub
mov
push
scas
adc
fwait
xchg
fwait
in
fdivrs
push
pusha
and
cmp
pop
repz
cmp
sbb
adc
int3
das
movsb
ret
mov
mov
adc
and
in
sbb
push
inc
hlt
cmp
les
xor
imul
loop
daa
push
push
sub
mov
mov
out
bound
cmp
adc
popa
arpl
loope
das
pop
adc
shrb
xor
sub
push
sbb
xlat
and
cld
lods
data16
jo
test
sub
cmp
or
js
mov
or
sub
dec
mov
in
or
pop
fsubrp
cmp
std
repnz
iret
xor
sahf
jnp
adc
jecxz
iret
aaa
shrb
xlat
loope
rol
stos
jo
pusha
mov
shrb
and
jp
sub
dec
clc
xchg
test
not
inc
and
ljmp
pop
in
fs
daa
pop
adc
loopne
or
addr16
pushf
adc
test
loope
fstl
arpl
das
rclb
inc
or
pop
pop
lret
ficomps
push
daa
cmp
fcmovb
xchg
fs
movb
mov
js
cmp
sbb
in
push
xchg
imul
gs
ret
cmp
imul
push
inc
ja
ljmp
aaa
xchg
addr16
cmp
xor
push
sub
cs
jecxz
ret
imulb
jp
fwait
sub
ds
add
push
leave
or
sti
test
cmc
insl
or
frstor
repz
loope
inc
scas
add
mov
sarl
imul
ds
shll
sbb
mov
push
cwtl
lea
arpl
pop
or
je
data16
dec
pusha
push
inc
pop
xor
cmpsl
sub
inc
sahf
pushf
cmp
fwait
nop
add
cs
insl
push
lock
dec
sub
push
aaa
pop
xchg
roll
adc
inc
sub
leave
sti
imul
out
cmp
xchg
mov
push
fsubrs
jbe
mov
fwait
jo
and
cmp
test
xchg
jecxz
xchg
je
xlat
fdivs
mov
jp
pop
mov
jmp
leave
mov
and
push
lods
pusha
dec
fs
mov
lcall
adc
mov
pusha
cld
outsb
cmp
into
mov
push
xorb
mov
scas
mov
mov
jne
sbb
scas
cmp
mov
jge
movsb
fdivrp
push
out
and
test
stos
cmp
jns
push
cltd
add
or
int3
insl
dec
inc
sub
xor
bound
xchg
mov
and
out
add
sub
adc
xor
adc
cmp
push
mov
and
push
sub
daa
lods
inc
adc
inc
xor
test
jnp
sub
iret
mov
sbb
loop
test
or
out
sbb
test
pop
leave
loope
cltd
mov
fistpl
jb
jecxz
stos
dec
pop
jg
push
cmp
insb
xor
dec
bound
mov
xor
lcall
adc
push
cltd
add
mov
mov
jae
jle
sbb
pop
sub
out
inc
mov
negb
pop
or
mov
mov
xchg
inc
pop
xchg
in
sbb
adc
in
sub
cmp
cld
repnz
pop
adc
push
xchg
sbb
hlt
or
leave
jo
inc
sub
in
dec
push
sti
and
dec
jnp
push
inc
mov
loopne
rcll
xchg
mov
xchg
into
mov
adc
jl
push
sub
inc
mov
xchg
jl
jg
inc
push
ljmp
outsl
jl
movsl
xchg
jnp
cmpb
insb
cltd
mov
shr
rorl
imul
mov
fdiv
mov
or
inc
pop
mov
and
pop
out
iret
and
pusha
xor
push
insb
adc
mov
add
pop
fucomi
jmp
mov
mov
out
insl
fsubr
mov
adc
inc
test
pop
repz
inc
loope
loop
mov
sub
jb
adc
pop
repnz
add
movq
and
cmp
push
mov
cmp
stos
outsl
sbb
and
sbb
loop
insl
add
jnp
daa
jns
aam
jns
dec
push
push
lods
mov
jmp
ss
pushf
cmpl
dec
push
subl
out
sub
jle
call
sbb
lods
mov
sbb
popa
out
or
xor
push
mov
pop
sti
pop
add
subb
jbe
mov
adc
jle
ljmp
into
pusha
loope
cmp
repnz
push
mov
push
enter
mov
sub
popf
dec
dec
int
mov
sti
push
mov
sub
sahf
lea
pop
adcl
dec
movsb
imul
cmp
subb
insl
adcb
dec
mov
movsb
inc
repz
int3
mov
jne
add
idivb
cld
cmpb
mov
aaa
jge
in
mov
in
xchg
popa
movsb
stos
mov
mov
mov
pop
stos
xchg
orl
inc
aaa
pop
imul
sbb
data16
stc
mov
ficompl
pop
mov
loop
insl
sub
pop
mov
mov
cmp
add
test
mov
lret
sbbb
xchg
jecxz
pop
mov
fnstcw
pop
iret
jl
incb
test
dec
and
out
clc
arpl
dec
add
dec
jmp
sbb
in
jno
push
and
ret
pop
xor
popa
lahf
or
nop
adc
cld
mov
and
jg
cmp
sbb
push
cmpsl
pop
and
loop
test
mov
mov
pop
mov
dec
jno
pop
or
mov
addr16
xchg
aaa
and
call
fidivrs
sub
mov
inc
dec
gs
jge
int
xor
xor
inc
cld
jne
sub
inc
mov
ljmp
inc
xor
es
jmp
lcall
sbb
dec
pop
daa
add
adc
cmc
test
mov
shl
sub
or
and
add
in
rorb
or
lahf
cmp
sbb
adc
movsb
jns
push
xchg
outsb
add
stos
xchg
adc
xlat
hlt
lds
fwait
out
lret
jns
cmp
enter
mov
pop
aaa
and
scas
mov
fistpl
or
aas
movb
lock
xor
insl
mov
sahf
ret
adc
inc
decb
insl
ret
adc
add
mov
add
or
and
ret
pop
dec
sahf
out
mov
jbe
lods
sbb
push
cmp
ja
rolb
inc
and
movsb
cmpsb
mov
rcll
mov
inc
mov
push
xor
sub
ret
mov
popf
lret
clc
or
sbb
loop
push
data16
sbb
jae
xor
mov
sbb
stc
mov
jle
loope
mov
fisubl
cmpsb
js
test
sbb
xchg
and
push
test
stc
push
das
loopne
or
call
inc
xchg
cmpsl
insl
fsub
lret
lret
dec
call
sub
pushf
jno
mov
pop
push
and
out
cmp
fcompl
test
aaa
gs
aaa
add
mov
xchg
ljmp
jge
out
dec
push
mov
xor
add
xchg
clc
std
xor
push
mov
sub
xor
mov
out
in
mov
scas
jecxz
cmp
mov
popf
xchg
mov
adc
mov
jb
xchg
sbb
sbb
ret
imul
out
cmpb
out
das
cltd
xor
mov
inc
pop
jbe
in
mov
test
test
test
std
adc
mov
push
arpl
mov
and
pusha
icebp
mov
out
push
or
add
in
jg
test
int3
lods
sbb
push
xor
sbb
shlb
roll
divb
dec
add
sbb
int
mov
cmp
mov
mov
std
or
add
sbb
xchg
fimuls
add
aaa
out
movsb
arpl
sub
jno
xor
punpcklbw
xchg
xor
sbb
stos
xor
mov
in
or
pop
das
inc
adc
movsb
out
cmp
scas
rcr
push
subb
cmpsb
movsl
fstpt
das
mov
sarl
pop
mov
push
rclb
add
fnstcw
bound
and
add
or
stos
pop
ss
into
sub
mov
xchg
pop
pop
lret
xchg
dec
and
push
xlat
jns
cli
pop
push
lret
stos
pop
das
mov
push
shl
fwait
out
and
lds
lods
cltd
mov
cld
arpl
mov
popf
pop
xor
nop
aaa
lret
repnz
call
jecxz
lret
icebp
mov
les
dec
sbb
push
or
popa
fwait
lock
or
mov
out
adc
dec
cmp
cld
in
push
push
xchg
in
xchg
sahf
lret
dec
lcall
sbb
shlb
jmp
lcall
or
inc
data16
das
mov
lret
sbb
and
repz
dec
popa
inc
shl
cmp
inc
adc
mov
scas
push
popf
mov
jp
mov
jns
push
inc
jae
add
and
rcll
wbinvd
jecxz
loopne
xor
jp
mov
push
and
gs
mov
mov
mov
xor
xchg
lcall
rorl
add
and
dec
lret
sub
enter
push
shl
fwait
out
sub
dec
and
lret
pop
inc
int
in
lods
xor
add
mov
aam
out
jp
ss
xchg
insb
iret
enter
adc
ljmp
std
shl
xchg
jg
add
test
jmp
insb
and
fidivrl
mov
cmp
adcl
ljmp
shrb
repz
sub
or
cmp
movsl
lahf
addl
cmp
inc
leave
fldcw
jp
mov
inc
lods
mov
or
cmp
cmc
mov
mov
daa
mov
pop
push
aam
in
inc
sbb
aaa
xor
or
cli
and
lea
lds
adc
xor
aad
and
and
sub
stos
mov
cmp
int
mov
sub
es
rcll
outsb
not
xchg
sbb
ja
mov
and
add
dec
xchg
imul
in
xchg
jmp
aas
lahf
jnp
int
mov
ret
fcoms
lock
sbb
push
mov
lock
adc
mov
fisubl
in
sarl
test
hlt
cmp
clc
jp
mov
out
shlb
push
gs
out
ret
xlat
cmpsb
add
jmp
sub
and
xchg
jge
dec
or
xchg
cmp
adc
xor
pop
fidivrl
sti
dec
cli
int3
sbb
popf
icebp
jb
enter
and
sbb
nop
push
adc
mov
mov
pop
fnsave
mov
int3
aaa
mov
test
enter
push
dec
lods
clc
lock
mov
jae
movsb
pop
sub
std
daa
in
mov
dec
jge
inc
sub
fbld
xchg
xlat
push
mov
xorl
repz
sbb
xchg
popa
nop
mov
and
fsubrs
ljmp
adc
mov
inc
stos
or
mov
fiadds
mov
dec
push
fildl
push
pop
xchg
enter
in
jae
push
jb
pop
push
push
clc
add
push
or
fisubrl
xorb
dec
add
das
clc
test
mov
xor
lock
stc
cmp
push
sub
mov
mov
inc
ss
dec
xchg
test
testb
fdiv
sub
dec
pop
stos
std
mov
enter
push
xchg
add
outsl
jae
mov
dec
pop
and
repnz
mov
pop
xor
pop
jne
out
push
dec
xchg
push
aaa
lret
sti
jmp
cltd
mov
pop
sub
xchg
pop
add
ljmp
cmp
mov
and
pop
push
sahf
add
mov
xchg
inc
jecxz
fcompl
dec
mov
push
mov
or
inc
mov
or
adc
mov
orl
mov
rclb
dec
xchg
sahf
lret
loopne
mov
jg
sbb
xlat
lds
pop
cli
lret
add
lret
jno
out
ljmp
adc
and
stos
mov
and
pop
sub
push
add
inc
and
xorb
faddp
push
fdivl
cmp
scas
mov
scas
lcall
les
add
fstpt
sub
or
fnsave
mov
mov
fnsave
repnz
dec
jl
xchg
mov
add
jns
ja
jmp
pop
pop
in
scas
or
push
aas
rcrb
sbb
jl
sub
sub
mov
imulb
dec
icebp
pushf
jbe
dec
out
lea
dec
outsb
and
in
mov
imul
or
dec
scas
add
fcoms
jbe
repz
jno
cmp
mov
insb
outsb
or
push
sarb
std
sbbb
sbb
addl
sub
out
shrb
push
jae
pop
in
or
repnz
repnz
cmp
xchg
push
adc
adc
lds
jbe
and
pop
inc
inc
pushf
aas
cmp
dec
mov
dec
fwait
mov
mov
cltd
cwtl
xor
iret
movsl
int3
out
mov
inc
or
inc
movsl
aad
xor
push
lea
xchg
insb
lahf
fimull
je
int3
xchg
enter
push
jae
fmull
lods
pop
xchg
insb
lahf
dec
es
xchg
lods
mov
push
adc
push
jbe
mov
cmp
ds
fldenv
mov
rcll
push
insl
negl
cmp
insb
lods
mov
ret
push
cltd
adc
mov
outsb
stos
std
mov
add
test
mov
sbb
lea
xchg
scas
push
rorl
aas
pusha
xchg
mov
inc
inc
adc
clc
dec
stc
pop
mov
outsl
gs
sbb
xchg
adc
inc
movsb
inc
into
cmp
mov
add
adc
and
mov
jns
xor
cmpsb
int
push
xchg
jge
sub
pop
pop
sahf
push
out
in
add
movsb
and
stos
sarb
lds
pop
ud1
subl
mov
adc
data16
jecxz
movsb
lock
cmpsb
mov
add
pop
fwait
clc
les
and
lds
sbb
out
sbb
iretw
xchg
cmp
ljmp
fst
test
lods
insb
fdivrs
xchg
fwait
push
cmpsl
mov
sarb
sbb
pop
in
xlat
push
mov
jns
xor
or
push
inc
pop
hlt
fisttps
push
test
xchg
jmp
ja
mov
xcrypt-cbc
cmpsl
xchg
fisubl
subps
hlt
push
jg
jl
xchg
mov
sahf
scas
loop
les
ret
stc
inc
jb
ja
lcall
or
shll
cmp
mov
and
pusha
sub
push
pop
pop
das
cmp
push
int3
addr16
or
xchg
cltd
stos
lahf
push
movsl
mov
dec
sarl
jg
movsl
inc
pop
ficoms
test
or
adc
sub
and
pop
pushf
xchg
lock
jl
rorl
fwait
stc
mov
fnsave
out
jle
sbb
xor
mov
adc
mov
push
clc
aaa
outsb
adc
cs
outsl
inc
mov
mov
imul
push
dec
mov
xchg
push
mov
cmp
fstpt
or
imul
xchg
cmp
or
jg
mov
dec
std
rclb
in
ret
movsb
jne
fistpll
loop
push
je,pn
jg
push
xor
inc
int
addr16
inc
inc
adc
and
iret
repnz
cmc
sbb
nop
ljmp
int
dec
call
outsl
jne
adc
ja
aad
and
stos
push
or
dec
sahf
mov
mov
add
sub
mov
mov
inc
lea
xor
hlt
mov
sbb
vpsrlq
cmp
cmc
icebp
daa
xchg
cmc
das
and
mov
repnz
insl
cmp
adc
sbb
mov
daa
aaa
call
and
push
rolb
dec
cmpsb
mov
ds
add
enter
sub
add
mov
imull
lods
ds
or
sbb
or
lret
adc
mov
and
ss
or
jbe
xlat
movsl
jne
subb
dec
mov
sub
out
lds
sub
loopne
stos
add
iret
enter
insb
jns
flds
insw
inc
leave
pop
aad
lods
jae
push
pop
jecxz
lcall
subb
jbe
mov
sbb
aaa
cmp
clc
push
fildl
into
mov
cwtl
xchg
push
jb
adc
mov
cwtl
cmp
xorb
jb
popa
mov
jmp
dec
ljmp
adc
inc
movl
or
sbb
xor
in
and
int3
push
mov
sub
cmp
xchg
in
push
jl
xor
cmp
js
sahf
aad
sbb
mov
sbb
pusha
sbb
inc
out
in
dec
stos
mov
into
sbbb
ret
pop
ret
cmp
xchg
aad
loopne
mov
fwait
roll
addr16
pop
push
out
push
xchg
push
arpl
arpl
int3
or
mov
dec
cmpb
adc
mov
or
inc
jb
cmpsl
loop
jae
push
pop
outsl
adc
mov
xor
and
cmp
movsb
mov
xchg
dec
aam
mov
inc
adc
mov
pop
add
pop
or
add
push
xor
sub
in
xlat
scas
mov
xlat
jmp
push
popf
mov
mov
test
dec
cmpsl
jne
scas
cmp
mov
sub
jbe
ret
xchg
xchg
mov
jmp
mov
out
jl
loopne
sahf
aam
adc
cmp
dec
pop
cmpsb
outsb
add
stc
mov
mov
aam
movsl
pop
sub
movsb
fisubrs
rol
loop
xor
test
mov
lret
lret
adc
stos
pop
add
add
cmpl
push
lods
arpl
add
enter
mulb
fimuls
or
pusha
mov
test
arpl
cld
in
in
jecxz
adc
cs
mov
sbb
mov
cmp
js
mov
dec
lea
xor
shll
sarl
mov
out
cmp
and
mov
adc
push
inc
insl
push
mov
push
pop
mov
out
cmp
test
testb
iret
iret
pop
xlat
test
push
andl
bswap
daa
sub
mov
ret
lock
dec
mov
ljmp
stos
cmpsb
stc
sub
cmc
xchg
sub
loopne
in
lds
imul
test
adc
inc
movsl
mov
out
jmp
pusha
scas
in
and
mov
pusha
or
inc
sub
popa
push
push
fs
mov
adc
push
cmp
inc
hlt
push
mov
or
push
push
fwait
push
shrl
enter
imul
das
fsubl
pop
dec
loope
out
popf
sbb
cli
rolb
lock
dec
xchg
cmp
adc
jle
rolb
xchg
ret
mov
pop
mov
xchg
xor
cmp
fabs
sub
ljmp
cmpl
enter
fbld
mov
jno
or
dec
push
xchg
lods
sbb
pop
dec
push
dec
dec
adc
leave
jbe
popf
cmp
adc
lret
xor
pop
mov
out
ret
test
fisubs
pop
das
cmpsb
into
cwtl
sub
push
data16
movsb
pop
popa
test
sti
cwtl
add
lahf
ljmp
jns
mov
pop
in
mov
in
fwait
xor
lret
push
xor
and
add
and
pop
xlat
push
fildl
sbb
lds
dec
sbb
fs
pusha
shlb
dec
insb
aam
popf
bswap
push
and
push
rcl
sbb
lret
push
shll
mov
xlat
dec
mov
sets
rorl
pop
add
loope
mov
rorl
push
adc
in
dec
jb
jp
aas
or
sbb
fstl
push
inc
xor
cmp
mov
xor
jne
mov
loop
or
adc
mov
mov
ljmp
cld
outsb
mov
ds
ljmp
or
movsb
dec
mov
mov
and
lcall
lcall
add
xor
sbb
sub
mov
rcrl
lahf
mov
mov
push
xor
jg
xchg
mov
in
push
push
push
call
popa
cltd
xlat
repz
js
jno
movsl
inc
jl
insb
sub
subb
addr16
inc
cltd
mov
sti
pop
pop
and
dec
dec
dec
adc
jecxz
arpl
adc
lahf
pop
mov
fbld
pop
movsl
cmp
and
lahf
mov
rol
scas
lret
aad
cmp
cmp
sub
mov
mov
aad
in
xchg
mov
sti
xchg
outsb
loopne
mov
xchg
lods
cmp
inc
or
outsl
mov
or
dec
fimull
dec
movsb
out
and
adc
and
pop
bswap
fwait
adc
adc
call
mov
ret
in
adc
ds
aaa
mov
or
cmpsb
mov
repnz
mov
cmpsb
leave
add
or
mov
insb
in
idivb
enter
pop
xchg
xchg
xor
adc
jl
push
mov
xor
andb
xchg
mov
mov
cmpsb
adc
inc
or
push
pop
and
mov
fmull
scas
lcall
addr16
lods
jle
inc
sub
dec
ja
mov
rclb
push
cmp
adc
add
pop
cmpsb
jle
popf
xor
pop
rorb
aaa
inc
cmp
and
ss
add
loopne
divb
jg
addr16
mov
adc
lods
fcomp
daa
movsb
out
stos
cmp
add
ja
test
xor
out
int3
cld
or
dec
dec
pushf
add
mov
add
sub
fwait
int
cli
mov
xor
sub
cwtl
out
repnz
imul
pop
arpl
stos
in
xchg
ret
inc
mov
aas
lret
mov
cmc
inc
andb
mov
iret
adc
jecxz
fmuls
sub
push
push
ja
sbb
jne
repnz
xchg
and
mov
loope
jnp
loopne
cmpl
sbb
pop
xchg
lcall
les
sbb
pop
sahf
faddl
pop
xor
and
jecxz
mov
add
jo
test
orb
out
stos
inc
xchg
adc
xchg
push
pushf
xor
xchg
pop
xor
rcrl
mov
cmpsb
cmp
sti
xchg
rorb
cmc
scas
mov
push
ficoml
movsb
mov
cmpsl
icebp
or
mov
xchg
addl
fimuls
shll
dec
test
sahf
cmp
add
fdiv
xchg
pushf
dec
std
mov
mov
stos
inc
bound
leave
push
pop
jle
in
mov
sub
int3
jb
dec
jp
idiv
dec
mov
inc
aam
sub
cwtl
in
inc
stc
lret
mov
outsl
out
push
and
jecxz
aam
sbb
sub
xchg
iret
imul
xlat
mov
inc
das
fisubs
rcll
jnp
adc
mov
in
repz
rolb
scas
cmp
push
push
pop
repz
popa
enter
lret
sbb
push
ror
jnp
xchg
pop
les
or
mov
iret
or
jmp
in
mov
sub
cmc
imul
xchg
enter
outsb
mov
arpl
add
mov
mov
out
sbbb
cmpl
out
jl
dec
cmc
xchg
outsb
mov
in
fistps
lahf
push
add
adc
pop
test
mov
int
push
inc
movsb
gs
jge
push
jg
punpckhwd
test
and
push
loopne
pop
mov
adc
jo
leave
cmp
cwtl
stc
dec
inc
stc
dec
dec
inc
dec
pushl
hlt
mov
jbe
aas
mov
cli
adc
mov
cmp
push
jecxz
adc
popf
jge
inc
test
sbb
rcll
ret
lret
loopne
mov
mov
sub
les
mov
add
icebp
xchg
les
add
add
sbb
pop
add
mov
inc
xchg
adc
mov
and
cmc
add
cli
into
movsl
ss
adc
push
pop
and
outsb
and
fdivrl
pushf
or
enter
int3
clc
or
adc
mov
push
lahf
push
sbb
enter
loop
jmp
mov
and
pop
push
push
sbb
jmp
add
ja
dec
cli
call
or
or
movsl
mov
mov
cli
out
or
and
adc
jge
pop
and
hlt
fstpl
inc
es
movsb
repnz
in
push
lock
push
imul
pop
xor
and
repnz
into
loop
jb
fsubrl
mov
nop
test
pop
outsb
mov
pop
shl
sahf
pop
sbbb
cltd
pop
jmp
lea
lock
and
inc
iret
fadd
ljmp
mov
xchg
test
int
in
sahf
push
jg
pushf
int
ficomps
imul
mov
fbld
xchg
mov
xchg
pusha
mov
jne
in
rclb
xchg
mov
jmp
int
push
test
cmp
jge
or
js
test
cmpsl
je
lret
xchg
adc
pop
out
andb
or
adc
nopl
fisttps
mov
neg
sbb
jp,pn
stc
cltd
pop
add
pop
sbb
jno
cmp
xchg
lret
out
mov
loop
and
sarb
xchg
insb
dec
adc
leave
cmp
inc
sub
and
mov
sbb
jge
push
push
in
push
cwtl
mov
or
out
outsl
orl
cwtl
inc
jl
push
jnp
aaa
mov
cmp
cmp
insb
cmp
push
or
xchg
adc
aas
aad
mov
rcrl
dec
pushf
inc
rcrl
lret
sub
test
movsl
cmpsb
sbb
roll
in
shlb
jnp
sahf
xorb
in
iret
cmpsb
jno
incw
outsl
push
in
daa
cmpsb
push
dec
es
std
sub
push
mov
es
mov
stos
jg
mov
jp
inc
mov
hlt
call
cmp
push
xchg
cmp
push
adc
add
aas
insl
fimull
mov
xchg
adc
pop
int
mov
lds
xchg
push
out
add
push
fwait
repnz
pop
sbb
ja
pop
sub
push
into
mov
mov
xchg
cmpl
rcrb
test
aad
inc
sbb
pop
mov
inc
je
jne
cmp
mov
mov
icebp
cli
popa
in
sub
push
rcrl
stos
cmp
popf
aam
adc
cs
and
loop
jge
lcall
pop
or
lahf
pop
outsl
stos
mov
insb
cltd
mov
or
xchg
das
shl
sub
imul
adc
sbb
push
jecxz
sub
xlat
fnstsw
sahf
outsb
cli
mov
outsb
jmp
inc
or
xor
push
out
and
xor
mov
dec
sub
push
inc
movsl
or
push
bound
pop
and
ja
test
push
loop
iret
cmp
or
sbb
mov
mov
cli
add
xchg
push
xor
aam
sbb
out
fists
mov
pop
push
push
pop
push
or
inc
jl
xchg
aaa
cmp
pcmpeqd
jns
push
getsec
mov
fcmovb
ja
jo
and
hlt
ja
jmp
cmpsb
popa
pushf
addr16
jae
jb
aam
out
sahf
adc
daa
and
clc
rcrb
fnstcw
ljmp
popf
xchg
inc
mov
lcall
lods
sub
inc
jns
pop
xor
fldl
pop
imul
icebp
cli
sub
add
and
imul
pop
xor
xchg
test
pop
jb
fistl
aad
add
test
dec
lcall
jp
and
in
jl
push
push
subl
pop
mov
test
rep
dec
cmp
push
cmpsl
jnp
push
data16
push
xor
arpl
adc
iret
aas
ljmp
or
ficoms
mov
cmp
aam
push
and
add
xchg
ror
stc
pop
movsb
or
mov
clc
sub
mov
cwtl
ds
movsl
or
sbb
outsb
scas
sahf
arpl
loopne
xchg
fwait
sub
push
jns
insb
mov
sbb
lret
sbb
movsb
or
mov
js
idivb
pop
cli
sti
sbb
xchg
loop
int
fwait
lar
mov
or
fs
rcrb
inc
push
xor
stos
sarb
sub
sbb
mov
or
jno
jae
pop
pop
out
mov
sti
xchg
or
mov
inc
mov
cli
pop
mov
cli
ljmp
pop
mov
test
or
sbb
xor
in
inc
push
stos
and
addr16
mov
insb
loop
popa
adcb
push
mov
call
aaa
mov
adc
test
ficoml
cmp
outsb
imul
dec
test
xchg
pop
rcrb
je
pop
clc
mov
jae
rorb
mov
sub
xchg
mov
fcmovnbe
inc
ja
pusha
stos
pusha
and
daa
das
sub
rcrl
scas
imulb
mov
add
lret
xor
jmp
sub
fwait
clc
out
aam
mov
pop
jae
adc
mov
inc
push
lret
lahf
push
jmp
or
jmp
popf
sbb
ss
mov
pushf
fs
js
in
mov
xchg
mov
fmull
test
fldenv
mov
inc
gs
push
sarb
insl
fptan
xchg
das
jmp
jg
aas
lock
mov
loope
xor
mull
divb
test
incb
add
lock
cmp
jle
test
flds
mov
pop
push
mov
stos
aaa
shr
data16
bound
pop
outsb
mov
fdivrl
xorl
pop
jl
inc
cmpl
lods
mov
aaa
aad
xchg
call
sahf
mov
inc
jmp
in
push
xchg
movsb
stos
cmc
lods
arpl
lods
add
cmp
shrl
or
sub
sbb
lea
sti
dec
push
mov
xchg
xchg
dec
xor
sahf
or
jnp
repz
cmp
adc
dec
mov
mov
and
xchg
jge
hlt
outsl
add
add
sub
xchg
inc
bt
mov
movsl
mov
repnz
sbb
or
mov
mov
mov
imul
sti
mov
lret
push
idiv
and
rolb
mov
push
aaa
lds
push
imul
loop
gs
pop
jmp
xchg
jmp
push
lods
xorb
add
mov
mov
adc
or
push
mov
scas
fxch
xchg
dec
les
sub
daa
scas
pop
loopne
jns
pop
popf
lods
stos
hlt
and
push
int3
stos
mov
aas
sbb
cmpsl
ljmp
push
shll
std
xor
jge
adc
lret
mov
mov
sub
push
adc
adc
fisubrs
xor
mov
sub
pop
lods
in
mov
push
mov
imul
imul
mov
mov
jmp
dec
xchg
fisubrs
pushf
je
repz
mov
loop
inc
mov
cs
stos
jo
bound
sub
and
jp
data16
pop
call
jle
insb
popa
daa
fsubl
jbe
insl
pop
out
loope
sbb
inc
mov
popa
sbb
popa
mov
lds
inc
adc
pushf
lods
cli
popf
lcall
mov
data16
insb
push
pop
sub
mov
pop
dec
insl
lahf
icebp
mov
dec
cmpb
les
add
stos
out
fsubr
add
add
les
lods
nop
cmp
rcll
cltd
movsb
shll
mov
or
jl
scas
leave
dec
sbb
and
inc
mov
fsubr
out
and
fdivrl
subb
jg
les
cmp
and
xchg
jno
inc
imulb
call
push
cld
pop
mov
aad
adc
pop
sahf
ljmp
insb
mov
sub
jecxz
add
sbb
shrl
push
and
fisubrl
inc
incl
mov
fcmovu
es
dec
std
push
jns
repz
fs
xchg
cli
aam
adc
lahf
jb
pop
xor
sub
add
in
scas
out
shr
adc
sti
scas
adc
cmp
jo
add
mov
lds
adc
mov
pop
mulps
ficomps
in
adcb
mov
xor
cmp
bt
cmc
outsl
xor
aas
ja
xlat
sti
xor
xchg
adc
jp
pop
repz
clc
adc
pop
in
sub
cmpsb
flds
xor
mov
shll
aas
loopne
or
sub
aam
in
sbb
inc
xlat
jo
js
xchg
inc
sbb
lahf
cmp
sbb
inc
out
add
jg
mov
call
mov
and
sub
enter
arpl
mov
push
push
fcomi
movsb
fs
popa
add
dec
and
fwait
mov
fldenv
xor
sti
in
les
stos
sbbw
loopne
mov
jmp
mov
push
jge
imul
jns
fwait
dec
stos
into
scas
push
ja
sbb
jmp
lods
mull
lods
pop
sbb
aas
jno
sub
mov
leave
sub
cmp
test
push
ljmp
lods
dec
aaa
xchg
cli
call
dec
cmc
or
pop
jle
pop
inc
loope
cmp
inc
test
jno
or
dec
pop
loop
in
clc
mov
cs
cmp
enter
fs
push
stos
insb
mov
call
adc
fcomp
or
push
loopne
inc
push
cmc
stos
imul
cs
adc
fwait
sub
mov
icebp
cmp
dec
js
in
lods
sub
test
movsl
pusha
ds
pusha
bound
sub
scas
aad
cmp
mov
int3
ret
adc
and
cmp
daa
repnz
sub
push
sti
mov
xchg
mov
sub
or
dec
outsb
fs
sarl
pop
jb
jge
dec
arpl
imul
push
or
push
fnsave
push
shrl
test
fsubs
nop
mov
adc
cmpsl
ljmp
sub
insb
dec
pop
lret
movsl
inc
in
or
sbb
icebp
cmpsb
cmp
outsl
add
jg
jns
adc
pop
dec
sub
ljmp
fidivrl
mov
jl
outsb
sbb
push
cmp
and
adc
call
add
ja
fwait
or
test
mul
mov
imulb
bound
push
cs
cmp
and
adc
stc
jo
ds
mov
jge
mov
lods
cld
outsb
sub
xorb
ds
lahf
or
push
and
xchg
bound
enter
es
fcomps
pop
daa
mov
cltd
xchg
mov
sbb
in
in
sub
mov
ret
aaa
das
fcomps
das
and
inc
in
cmp
test
inc
das
mov
cmpsl
jmp
sub
outsb
xlat
mov
xchg
push
and
rolb
imul
mov
add
jmp
shrl
jp
mov
scas
pop
dec
pop
mov
dec
iret
jp
in
adc
movsb
and
das
lcall
js
mov
insb
cli
jp
insl
sbb
cltd
divl
dec
out
mov
lods
cvtdq2ps
inc
int3
sub
inc
fiaddl
ja
aas
jle
outsb
in
sub
movsl
outsl
cmp
push
rcr
xchg
push
in
xorb
mov
data16
mov
das
cmp
arpl
stc
outsb
jb
sbb
xor
fs
imul
sub
push
das
add
jg
into
add
into
ret
push
lea
stos
pop
xor
mov
cmpsl
ficoms
int3
inc
in
add
cmpsl
pop
sub
push
insb
out
sub
mov
loope
arpl
mov
in
sub
repz
cmc
inc
or
je
or
dec
and
cld
jp
sar
sub
repnz
dec
nop
mov
cmp
js
xchg
sub
and
mov
pop
imul
jecxz
push
movsl
repnz
fbstp
push
sbbb
or
dec
dec
jecxz
mov
and
cwtl
and
sub
inc
or
xchg
pop
jg
cmp
push
imul
dec
popf
push
adc
jle
orb
test
add
cmpsl
xor
mov
gs
push
outsl
inc
push
popf
pop
xchg
push
popf
adc
scas
push
inc
lcall
testb
fstpt
js
fwait
mov
pop
push
push
fimuls
out
sub
into
push
inc
mov
scas
insb
sub
mov
adc
mov
cwtl
fdivrp
mov
mov
shll
or
das
xchg
dec
inc
xchg
out
stos
decb
push
leave
push
push
or
das
mov
xorb
jns
add
bound
push
cmp
rorl
mov
pop
shlb
xchg
pop
lods
fisubl
mov
cmp
sub
cmc
jno
inc
es
jl
push
push
in
pop
roll
into
dec
push
mov
mov
hlt
mov
imul
es
mov
test
xor
in
cmp
push
inc
pop
or
inc
push
stc
mov
sub
scas
mov
xchg
push
popf
adc
fwait
push
out
insb
js
dec
xor
pop
sub
js
jb
xchg
aad
xchg
aaa
popf
xchg
std
xor
jl
ljmp
add
fisttps
sub
cmpsb
inc
pop
idiv
mov
insl
dec
jecxz
fwait
insb
dec
adc
mov
xor
jp
aam
xchg
mov
sub
icebp
inc
add
or
call
lods
mov
push
out
dec
in
or
inc
inc
or
lret
js
mov
shrl
jns
gs
cmp
es
repz
imul
and
sarl
pushf
pop
push
jbe
xor
mov
lods
mov
out
sbbl
or
cmpsl
and
jns
mov
mov
call
outsb
adcl
xchg
in
cltd
inc
mov
mov
xor
sbb
cmc
ret
mov
xchg
add
adc
cli
outsl
and
adc
jno
mov
jnp
fdivs
lock
icebp
and
add
jg
bound
insb
test
call
mov
clc
sub
mov
mov
imul
out
cmp
pop
shl
lret
add
inc
jecxz
pop
lea
fisttpl
fidivs
daa
test
ljmp
test
imul
jmp
dec
xor
mov
test
sbb
jl
jo
test
push
or
jg
dec
dec
cmp
ss
repnz
pop
scas
xchg
mov
and
pop
jl
inc
xor
into
daa
loop
lret
outsb
xor
aas
in
data16
inc
lods
stos
and
dec
xor
das
fs
xlat
cmp
js
jmp
inc
test
dec
pusha
stos
pop
cltd
add
and
cmp
jno
filds
nop
cwtl
xor
mov
out
roll
cmp
pop
pop
mov
hlt
shl
mov
pop
cltd
aaa
xor
jge
lea
lods
mov
xlat
jnp
inc
out
icebp
shr
xor
cli
stos
adc
sub
jns
fisttpl
outsb
iret
adc
jno
out
mov
dec
xchg
inc
cmp
mov
inc
sub
adc
rorl
je
pusha
pop
js
movb
jmp
jmp
jnp
test
or
pop
jmp
lahf
and
mov
sub
test
fwait
std
cwtl
test
adc
cltd
mov
jecxz
loope
ja
out
cmc
std
aam
add
jmp
pop
jnp
scas
incb
push
divl
jne
outsb
mov
xchg
dec
pop
int
jle,pt
push
mov
negb
mov
xor
rolb
cmpsb
out
rclb
mulb
jg
sbb
jne
xchg
lret
popa
xchg
pop
repnz
or
mull
add
in
mov
leave
outsl
cmp
jnp
test
jl
pop
in
and
adc
mov
jmp
stos
sub
mov
fld1
mov
loop
in
into
lret
rcrb
pop
mov
jbe
xlat
add
call
arpl
lods
xchg
xor
pop
rol
cld
aas
jle
jne
cld
xor
sbb
jmp
pop
scas
mov
cwtl
pop
ss
cwtl
xchg
ljmp
dec
dec
or
mov
std
sbb
inc
pop
mov
mov
xchg
sbb
pop
scas
popa
sub
cli
inc
ds
xchg
xchg
int3
sub
jns
cmp
mov
mov
test
jmp
lods
out
fnsetpm(287
inc
aas
sbb
shl
sub
loopne
call
push
push
loope
cmp
cmp
dec
xchg
lock
call
cmc
sahf
outsb
sti
jecxz
lret
sub
sbb
jne
cltd
aas
mov
std
shrl
and
aas
test
jge
mov
add
out
and
enter
jmp
jmp
gs
ljmp
add
test
aas
icebp
cli
mov
add
addr16
mov
add
fiaddl
add
add
cmp
movsb
add
testb
stos
add
incl
add
sbb
loopne
sub
push
movsl
movb
add
pop
xchg
and
rolb
add
mov
push
test
shrb
xchg
add
add
clc
push
fisubs
jb
dec
int3
cli
loopne
cmpsb
cmpsb
das
stos
add
insb
js
jo
imul
inc
dec
clc
push
add
loop
jmp
add
mov
xchg
add
int3
cmp
cmp
add
imul
mov
lea
add
mov
xlat
repz
mov
add
cld
adc
inc
push
mov
add
arpl
jb
mov
add
bnd
dec
add
xchg
lock
cli
inc
and
pop
out
pop
stos
decb
rolb
add
decb
int3
aad
ja
out
mov
ret
out
add
call
xchg
adc
enter
movb
shll
xor
add
jmp
aad
addr16
leave
fisubrs
sub
add
inc
sbb
add
es
xor
test
jnp
xorb
push
mov
mov
xor
add
dec
clc
adc
add
push
addl
sub
cmp
fwait
loop
mov
shll
and
ret
inc
ds
add
dec
xor
push
inc
pop
push
mov
jmp
sub
int3
xchg
inc
add
rcl
daa
sti
or
add
add
cmp
xchg
add
rorb
adc
addl
pop
jmp
add
push
jl
stos
mov
add
aas
stos
add
movsb
adc
popa
mov
mov
dec
push
sub
inc
add
and
add
ds
dec
and
add
add
jnp
add
add
jmp
push
rorl
lret
sti
add
in
or
add
mov
add
pop
lret
push
add
add
push
push
pushf
je
insb
and
xor
inc
and
mov
and
cmp
ret
fadds
add
jns
add
xor
fstl
add
mov
jg
jo
leave
xlat
mov
xor
cmp
add
setb
stc
shll
ret
push
fstpl
dec
test
mov
cltd
xlat
fisttpll
iret
aad
fadds
cmp
iret
dec
push
and
cmp
add
mov
push
or
xchg
loopne
jge
outsb
roll
jge
test
cmpsb
jg
rolb
insb
aam
imul
call
fimuls
enter
jns
push
insl
add
lret
ficoml
or
cmp
add
cmp
pop
pop
push
add
rol
pop
aaa
or
add
lret
stos
push
pushf
jne
add
mov
add
adc
imul
fists
add
xchg
fldcw
add
mov
out
cmc
cmpsb
aam
add
xchg
xchg
add
add
scas
pop
sub
add
and
add
pop
add
lock
in
loopne
adc
jge
jp
add
add
add
adc
lahf
dec
gs
jge
inc
hlt
mov
imul
mov
add
jecxz
cmpsb
fistps
mov
test
add
outsb
mov
out
insl
mov
sub
popl
sbb
and
sbb
mov
into
adc
dec
jg
fldz
inc
sub
fldenv
push
out
jbe
mov
out
jne
loopne
xchg
and
dec
jnp
xchg
and
outsb
push
push
popl
aaa
out
rolb
and
lahf
xchg
push
fidivrs
jmp
add
jl
add
cmp
stos
and
or
add
mov
cmpsb
mov
int
sub
add
loope
aaa
enter
in
or
push
add
mov
push
leave
js
jns
movl
xchg
fmuls
push
xchg
popa
push
das
out
addr16
mov
les
insb
cltd
imul
leave
daa
mov
add
inc
pop
loopne
or
movsb
add
pushl
xor
stos
xchg
ret
cs
add
adc
add
jmp
add
inc
push
add
mov
fcom
add
frstor
test
int
cmp
add
push
and
aad
add
mov
stos
add
dec
pusha
mov
lret
popf
adcb
pop
inc
lea
outsb
adc
shrl
jbe
inc
rcl
jne
outsb
inc
add
inc
iretw
pop
insb
mov
and
push
add
xchg
dec
mov
testb
loope
adcb
xchg
add
movsl
mov
fdivrs
add
add
sbb
clc
add
add
mov
sub
add
add
jmp
push
and
add
mov
outsl
and
add
popf
add
jecxz
test
xor
scas
testb
icebp
adc
les
add
mov
add
mov
outsb
adc
add
add
mov
pop
shrb
jmp
add
in
setge
add
rcll
cwtl
jp
ret
jl
add
xchg
add
sub
push
jl
std
add
inc
cmp
aad
ret
ret
add
dec
je
lret
push
movsb
orb
inc
push
sub
xor
cmp
dec
xchg
add
mov
ficompl
aas
cld
push
mov
add
or
loopne
cltd
cld
mov
hlt
pop
sahf
add
dec
or
imul
into
pop
cltd
repnz
push
rolb
jo
add
imul
pop
dec
lret
lcall
aas
add
inc
mov
lea
dec
pop
scas
sbb
add
sbb
jnp
adc
mov
add
idivl
push
add
in
in
mov
cmpl
pop
out
stc
xor
movsb
add
mov
ret
inc
pop
cli
lcall
adc
jle
gs
add
loopne
aaa
add
mov
sub
jae
add
lcall
add
sahf
add
mov
add
hlt
or
add
cmpsb
or
pop
jno
je
shrl
xrelease
mov
add
jp
pop
fs
inc
push
add
addr16
and
inc
add
outsl
popf
sahf
xchg
jne
rolb
mov
cld
mov
fwait
int
or
clc
xor
dec
lret
push
mov
cmp
sahf
mov
rcl
test
jnp
xchg
ja
das
pushf
cld
cmpb
add
add
mov
in
add
add
shlb
add
gs
hlt
popa
fistps
orb
dec
dec
pop
and
add
pop
xchg
add
in
test
ret
shlb
jbe
js,pn
stc
testl
stc
add
gs
leave
addl
fisubrs
sahf
pop
mov
xchg
mov
pop
push
push
shll
inc
icebp
sbb
arpl
add
add
cmp
mov
push
push
sub
add
into
ror
inc
add
jge
cmp
add
ds
xchg
cmc
add
jno
inc
dec
add
out
cmc
add
xchg
xor
in
clc
jne
add
movsl
sbb
dec
xor
adcb
add
add
out
stos
and
jecxz
sub
and
jge
hlt
sbb
adc
pop
loope
mov
mov
aaa
and
std
gs
pop
das
ret
add
mov
add
push
repz
jl
out
aam
inc
and
aad
adc
jb
push
fsubs
in
mov
cmpl
loop
das
mov
das
aas
xchg
mov
cmp
and
sbb
cmc
mov
test
stos
movsl
out
or
add
push
movsl
lds
add
pop
add
or
push
movsl
push
xlat
mov
mov
sahf
mov
push
adc
and
sub
dec
jo
dec
dec
pop
sub
std
lret
add
scas
or
adc
mov
lcall
je
jmp
ljmp
pop
shlb
pop
out
and
sbb
add
cmp
lock
mov
ret
jp
add
sbb
je
mov
test
sti
int3
mov
add
adc
inc
sub
ljmp
mov
cmp
add
outsl
daa
add
xchg
cmpsb
or
add
loope
push
dec
cmpsb
push
add
mov
ljmp
dec
enter
dec
fmuls
dec
mov
xor
jae
sbb
std
aam
xor
sbb
add
jmp
ret
xchg
lret
lret
ret
and
and
outsl
ja
mov
jae
xor
bts
insl
gs
iret
cmp
or
and
cmp
or
cmp
sbb
lods
add
and
adc
and
mov
std
sbb
sbb
aam
fstl
ds
cli
imul
push
inc
and
add
add
xor
mov
mov
xor
dec
movsl
rolb
std
push
insl
add
add
dec
jno
mov
das
cmp
mov
sti
jo
inc
push
aad
mov
cwtl
lods
xor
mov
es
mov
xor
rcrl
in
jno
mov
loope
push
push
xor
inc
push
cli
adc
stos
orb
int3
push
int3
fbstp
lea
clc
aaa
loopne
xor
and
sub
xacquire
ss
and
movsb
mov
lret
dec
nop
movsl
pop
and
mov
pop
aas
jmp
mov
mov
cmpsl
pop
movsl
sahf
call
inc
push
and
add
jecxz
dec
adc
dec
sub
mov
leave
jae
sbb
jno
bound
je
jbe
out
insl
xchg
cmp
pushl
imul
fadd
int3
cmp
sarl
ret
xchg
jns
arpl
roll
adc
add
imul
sub
add
jb
add
out
sub
xor
add
loopne
jp
add
lcall
xor
jmp
cmc
push
mov
sub
mov
adc
rorl
mov
lods
jb
cmpsl
popa
sbb
insb
and
out
mov
add
add
adc
xchg
lods
cmp
and
ret
cmp
lds
mov
stc
lods
cmpsb
or
movsl
add
sahf
and
add
enter
inc
sub
rcrb
lds
xlat
sbb
or
mov
and
subb
push
xor
jbe
and
mov
pop
fmull
pusha
cwtl
add
add
fistpll
mov
mov
test
pop
adc
xchg
inc
pop
add
sbb
stc
add
adcb
and
add
adc
lds
pop
repnz
xchg
loopne
jae
testb
cmp
add
or
sbb
fwait
xchg
xchg
mov
jns
push
out
pop
je
stos
inc
xchg
movb
dec
xchg
pop
adc
hlt
push
mov
ljmp
add
orb
mov
add
in
inc
cld
test
iret
mov
jno
fsts
inc
je
jg
inc
mov
add
imul
cmp
jno
jo
jae
dec
inc
add
daa
or
popf
inc
jmp
js
jg
cmpsb
xor
mov
mov
sbb
mov
dec
jb
push
add
bound
out
mov
ret
dec
fnop
cmp
and
add
inc
jae
iret
dec
out
ret
adc
sub
dec
stc
add
mov
cmp
and
mov
cs
pop
add
imul
daa
mov
add
movsb
inc
add
addr16
test
push
es
mov
mov
fildl
mov
sub
stos
test
inc
test
add
std
aam
add
mov
push
pop
add
adc
mov
dec
add
decb
test
adc
aam
nop
int3
leave
shlb
rol
adc
mov
mov
scas
pop
call
cld
add
lock
add
and
mov
shll
add
iret
lcall
add
add
jo
repz
jle
sub
push
add
pop
mov
push
mov
add
add
loope
mov
mov
add
imul
loop
call
add
decl
gs
inc
or
movl
ret
xor
addb
pushf
pop
arpl
mov
xor
push
fwait
call
sbb
or
add
mov
and
jns
out
stos
add
inc
dec
popa
dec
or
out
add
fdivrp
arpl
xchg
int3
xor
dec
jns
and
and
shlb
lret
prefetchwt1
or
pop
cmp
mov
stc
loopne
cmpb
cmp
dec
in
inc
add
sbb
daa
aad
fistpll
dec
add
dec
mov
add
jb
adc
les
add
push
data16
inc
sbb
dec
into
pop
sti
insl
sub
ret
call
jo
repnz
sub
cmp
mov
jg
inc
leave
adc
mulb
out
or
pop
inc
cmp
and
lcall
aas
pop
outsl
imul
pop
shlb
adc
lret
frstor
filds
add
pop
fmul
mov
mov
xorb
mov
sbb
add
fldl
adc
dec
add
out
xchg
mov
jmp
into
mov
popf
xor
inc
sbb
adc
adc
add
inc
push
scas
add
pop
pop
jno
stos
adcl
addr16
mov
push
xor
xor
add
stc
cmp
outsl
mov
sbb
mov
push
xchg
inc
stos
or
jno
cmp
negl
into
in
add
mov
push
xor
push
lock
lock
jle
cmp
jne
xchg
shl
mov
out
cmc
jo
xchg
addr16
loop
push
mov
xor
adc
sbb
sahf
imul
cmp
es
add
bound
ret
scas
dec
xchg
add
sub
inc
int3
jp
xor
shll
mov
add
stos
jns
add
cmp
xlat
fstpt
rol
or
aam
jae
add
out
loopne
xchg
jnp
lret
fs
push
or
add
lahf
or
mov
dec
mov
add
push
les
stos
scas
dec
sbb
cmp
push
movsl
lea
adc
sub
inc
pop
add
lret
push
inc
add
sbb
into
lret
xchg
mov
jp
jnp
stos
fiadds
add
pop
xor
jo
push
stos
iret
jbe
outsb
xor
aad
mov
add
fisttpl
xchg
out
add
ret
data16
cmp
cmp
jb
add
in
jmp
scas
filds
shufps
or
jecxz
xor
aam
add
sub
push
dec
add
or
arpl
mov
dec
pop
and
pop
mov
mov
cmpsl
icebp
add
add
lret
popa
sti
add
sbb
popf
add
clc
or
add
iret
bound
add
xchg
aad
mov
adcl
test
insb
mov
pop
ds
je
sbb
ror
pop
add
xchg
sarl
lret
mov
jnp
cmp
add
loop
push
data16
or
fisubrl
pop
add
cs
sub
imul
insl
sarl
sub
jb
add
adc
and
pop
add
lds
out
or
and
mov
add
xor
dec
inc
fcoms
add
or
inc
es
lret
bnd
add
sub
rorl
pop
arpl
in
lcall
roll
icebp
adc
lcall
xchg
and
fildl
add
sub
push
aam
sbb
inc
fiaddl
jmp
lods
lock
add
cmp
test
jmp
cld
add
leave
xchg
inc
sbb
sub
repz
scas
mov
push
add
fmulp
push
fstps
add
repnz
addr16
lock
cmp
xchg
dec
and
inc
mov
cltd
pop
push
jne
inc
add
loop
cltd
pop
xchg
icebp
test
pop
add
in
xorl
sub
add
xchg
movsb
cmp
enter
icebp
add
dec
scas
inc
loopne
push
test
mov
add
arpl
mov
adcb
xchg
cmpsl
and
add
cmp
nop
xchg
into
adc
add
cld
jne
flds
push
lea
and
cwtl
jb
leave
cmp
push
add
xorb
dec
movsl
les
jb
int3
xchg
ds
lret
inc
fistpll
aad
lcall
loopne
std
xchg
or
test
bound
pop
sub
scas
or
xchg
push
vmfunc
add
cltd
add
or
loopne
add
mov
xor
pop
int
lcall
fisubl
xor
mov
mov
xchg
mov
add
nop
sbb
adc
lret
mov
into
outsb
dec
aaa
push
loopne
fwait
dec
ret
lock
jecxz
int3
mov
aam
sar
sahf
rolb
adc
pop
cmp
jle
mov
cmp
inc
and
xor
test
add
cltd
and
xlat
add
fcmovu
push
mov
add
mov
push
mov
jne
sbbl
add
sbb
add
xor
add
and
int
pop
lret
or
push
cld
mov
je
sbb
lds
repz
pop
dec
cli
lods
add
lea
xorb
add
jecxz
mov
js
repnz
fcoml
and
jno
jne
in
jo,pn
fildl
sbb
jl
adc
sbb
inc
pop
add
je
xor
test
sbb
mov
and
addr16
add
aad
ficoms
iret
inc
add
xor
dec
dec
andl
xor
or
mov
add
add
into
popa
add
xchg
pop
mov
xchg
add
mov
jno
cmp
push
sbb
add
xchg
and
out
add
add
or
mov
out
push
mov
dec
ret
push
add
or
imulb
dec
call
sbb
es
incb
dec
inc
cmpsb
mov
xor
sbb
fdivs
pop
jbe
jmp
xor
out
push
arpl
mov
aas
xchg
xor
adc
inc
or
push
inc
mov
incl
add
add
push
dec
inc
mov
sbb
add
stos
pop
scas
add
adc
mov
bound
add
fcompl
inc
sti
add
xor
rolb
fisubl
test
fdivl
xor
jno
add
sldt
icebp
fisttpl
dec
push
add
or
hlt
xchg
nop
call
in
dec
out
add
pushf
fucompp
push
jns
add
add
cli
mov
and
pop
ss
lret
xchg
add
jmp
add
aaa
mov
test
arpl
lcall
mov
add
add
cmp
fs
scas
add
add
xchg
jg
push
add
loopne
jmp
stos
and
std
shrl
repnz
mov
push
push
ret
std
scas
aaa
jno
add
and
ja
xor
add
xchg
inc
jnp
mov
out
inc
cli
mov
pop
jo
sbb
das
imul
hlt
popl
imull
inc
lcall
sub
add
std
testl
adc
iret
in
daa
aas
xchg
push
add
rorb
rclb
ret
cmc
rcrl
aad
xchg
adcl
out
push
jp
sbb
xchg
lcall
cmp
xlat
xor
shll
pop
mov
push
test
iret
xchg
into
in
lcall
and
mov
inc
mov
pushf
inc
xchg
add
or
ljmp
xor
xchg
add
add
fidivl
cli
iret
or
lret
cmp
loop
in
cmc
add
mov
aad
inc
pop
cmc
add
int
test
into
inc
das
fsubrs
aas
xchg
add
sub
ret
jmp
cmpsl
test
stos
adc
sbb
xlat
add
cmp
adc
add
scas
mov
adc
mov
stc
lret
loop
cmp
jnp
mov
add
adc
gs
fistpl
mov
cmp
xchg
inc
xchg
cmp
add
gs
in
data16
mov
scas
xor
push
mov
pop
call
mov
loop
lret
ret
mov
fstpt
add
jle
add
and
pop
mov
add
ja
xchg
push
stos
push
pop
mov
clc
add
fadd
cmc
adc
and
sub
pop
scas
in
stc
push
inc
pop
into
add
jno
fmuls
xlat
add
mov
add
or
mov
pop
xor
or
ljmp
add
lahf
xchg
pop
cltd
fiadds
or
movsb
iret
dec
cld
cmp
add
notl
repz
aad
out
das
sbb
or
add
pop
and
push
mov
mov
sbb
test
add
and
jg
rcll
jl
mov
xor
push
mov
lret
pop
fmul
clc
sub
notl
fnsave
mov
movsb
inc
dec
lahf
adc
lock
cmp
jnp
add
leave
call
jmp
add
push
jle
mov
mov
hlt
pop
add
aam
scas
adc
sub
pop
mov
fnstsw
jnp
lock
sub
pop
add
xchg
xchg
push
xchg
and
sbb
cmp
push
imul
jae
add
inc
xchg
jbe
jbe
and
sbb
in
into
add
jae
push
mov
shrb
addb
repnz
popa
mov
std
scas
add
mov
add
add
and
lock
loope
mov
scas
cmc
add
test
fstpt
negl
lahf
push
add
inc
sbb
xor
into
push
cmp
mov
cli
incb
add
sub
arpl
mov
incb
shl
or
aaa
sbb
movsl
movsb
andb
addl
xchg
or
cmp
mov
add
add
add
add
mov
mov
aam
push
das
fs
sub
add
and
rorl
pop
mov
int3
add
loope
jecxz
add
mov
call
adc
popf
mov
icebp
dec
stos
push
outsb
aam
add
int
xlat
sahf
sub
dec
lret
add
add
aam
faddl
pop
repz
cmp
xchg
mov
cmp
adc
test
pop
loope
add
mov
mov
sarl
pop
adc
mov
push
dec
pop
into
add
push
sbb
or
pop
adc
dec
inc
mov
cmc
pop
xchg
test
add
js
add
insl
lods
stos
push
push
sbb
mov
cltd
dec
sub
adc
mov
dec
popa
test
mov
mov
and
mov
jecxz
and
scas
xor
pop
aas
or
mov
sbb
push
mov
jns
imul
pusha
pop
lods
pop
inc
and
aaa
icebp
inc
push
iret
cld
jne
add
loop
xchg
inc
fstl
mov
jmp
xchg
int3
int3
push
and
pop
push
data16
inc
in
adc
loopne
add
mov
popa
xor
pop
add
adc
inc
enter
dec
mov
mov
fdivrl
rol
mov
inc
into
addr16
lcall
add
push
cli
test
xchg
add
cld
mov
cmp
frndint
call
loopne
mov
aad
dec
inc
adc
and
iret
std
roll
push
xor
ror
push
xchg
push
inc
mov
inc
sub
add
popa
out
or
dec
lds
xor
cmp
jb
dec
xor
push
repz
mov
add
int
jne
mov
push
sub
fwait
bound
outsl
lahf
sti
add
sub
frstor
stc
test
lret
fnsave
add
xor
std
rcr
leave
xchg
sbb
dec
inc
test
sub
sub
pop
movsl
cmp
stos
sub
pushf
mov
cmpsl
in
xor
fisttpll
sbb
shrl
stos
add
inc
fdivs
adc
sbb
cmp
ljmp
loop
sub
ret
cmp
dec
movsl
outsb
pushf
add
push
fwait
mov
shr
sbb
fadds
add
jecxz
pop
and
cmp
jmp
mov
clc
stos
pextrw
or
dec
push
sbb
inc
pop
cmp
add
xchg
jb
push
loope
adcl
imul
jnp
movb
imul
mov
aad
mov
subl
lret
mov
dec
xchg
or
adcl
movl
pop
lahf
addr16
and
fcompl
and
or
cmp
addl
stc
jle
add
ret
push
inc
jl
in
xor
sahf
add
pop
ss
sub
jl
sub
add
into
and
leave
fisubrs
inc
or
add
and
ss
sbb
jle
mov
xor
sbb
inc
or
mov
mov
aam
pop
cmpsb
std
push
arpl
subb
mov
add
cmp
xchg
pop
adc
mov
mov
subb
stos
das
repz
mov
add
pop
mov
or
jno
cltd
je
add
push
xor
aam
into
iret
add
jmp
mov
andl
pushf
fimull
mov
xor
mov
xor
cmpsl
lahf
xchg
es
fs
jno
das
ficoml
shl
jle
cmp
inc
xchg
shrl
pop
aas
mov
fimuls
cli
lds
movsl
push
jg
aaa
sbb
imul
push
int
loopne
and
pop
stos
and
into
pop
outsl
pop
ret
xchg
push
adcl
adc
sahf
add
fildl
stos
imul
dec
outsl
aas
push
fmull
add
js
adc
sahf
cld
add
add
aam
sbb
aas
xchg
add
add
ret
inc
add
dec
dec
into
jno
out
lcall
lahf
add
jae
add
push
mov
mov
aam
rclb
jl
gs
std
mov
mov
mov
push
add
add
cmp
notl
adc
add
push
add
mov
pop
fdivl
jle
inc
insb
xchg
addb
sub
add
add
test
mov
aam
and
pushf
jmp
adc
mov
ljmp
add
jge
add
rcrb
lcall
or
test
push
fimull
adc
dec
decb
or
jb
push
mov
xchg
lods
jne
fisubs
adc
hlt
push
jl
mov
xor
mov
push
imul
and
data16
push
and
cmpsl
sbb
cli
ss
xor
cmpsl
mov
ffreep
mov
mov
xor
scas
in
test
xor
mov
add
mov
dec
or
cmp
fisttpll
add
pop
cli
into
add
cld
add
movsb
add
sbb
adc
push
or
pop
push
lea
pushfw
arpl
es
enter
mov
mov
mov
push
add
add
pop
ficompl
push
loopne
lret
sub
stos
stc
mov
add
sldt
movsl
xor
ljmp
insb
pop
add
jecxz
pop
push
add
dec
mov
xchg
add
add
cmp
in
dec
jns
nop
xchg
cld
inc
push
jl
add
add
pop
repnz
je
les
dec
ficoml
lret
xchg
pop
adc
sub
cmc
dec
jno
or
and
js
dec
inc
pop
xor
push
cwtl
xchg
loop
pop
or
int3
push
inc
xor
testb
mov
testb
and
or
imul
inc
add
jnp
test
imul
jl
gs
add
adcb
or
loope
mov
jns
sub
adc
or
mov
and
bts
mov
in
sti
mov
inc
popa
or
mov
add
push
in
add
push
insb
pop
insl
cmp
dec
pusha
xor
stos
arpl
mov
xlat
loopne
mov
xchg
push
es
xchg
cmp
aas
xor
bound
or
repz
out
pop
add
out
xchg
mov
sub
pop
rolb
nop
call
lods
and
sub
push
xchg
dec
pop
pop
incl
outsl
es
adc
xchg
inc
loop
add
pushf
pop
add
into
test
add
add
js
add
push
movsb
or
sub
lock
add
pushf
jmp
sub
add
cmp
rcll
fcomps
and
enter
push
xchg
inc
mov
xlat
xchg
adc
add
mov
push
xchg
orl
lds
jle
sub
and
test
xor
or
xor
pop
rorb
lods
dec
mov
mov
cmc
fildll
fcmovb
add
gs
insl
sbb
add
or
fcmovne
push
inc
add
and
dec
add
fildll
pop
inc
sti
add
push
mov
and
add
push
mov
fstpt
clc
add
add
pop
loopne
jecxz
dec
sti
lea
adc
push
mov
jle
popf
ret
add
imul
roll
mov
ljmp
pop
push
js
inc
bound
add
mov
movsb
test
jg
dec
aam
sub
add
add
outsb
xchg
xchg
andl
stos
out
fmuls
les
add
das
cmp
lret
mov
test
cltd
pushf
idiv
inc
popa
and
pop
xor
imul
push
mov
cmc
jns
sbb
mov
push
xor
jl
sub
sub
or
out
or
mov
sbb
fadds
jo
fistpl
sahf
jle
xor
addl
imul
leave
xor
or
xor
int
outsl
pop
sub
leave
pushf
inc
push
mov
mov
sarb
sbb
mov
pop
xchg
ljmp
mov
dec
das
xchg
lcall
xchg
lods
push
out
cmpsb
cmp
int
sbb
xchg
adc
fdivrs
xchg
inc
and
adc
scas
mov
iret
inc
jmp
jmp
adc
out
cmp
xchg
cmp
jns
ror
and
jnp
sti
aaa
pop
jno
inc
addr16
scas
mov
xchg
pop
in
lods
mov
insl
push
dec
sarb
out
fildl
jecxz
test
pushf
insb
ret
loope
push
fscale
pop
nop
xchg
int3
xchg
inc
or
fstpt
lock
dec
jo
adc
add
mov
test
push
mov
je
sbb
sub
push
shlb
dec
jl
sti
cli
pop
pop
cs
pop
pop
cmp
aas
lds
imul
ret
inc
xchg
clc
jecxz
inc
adc
xor
ds
or
push
lods
mov
in
std
inc
out
fistpll
lret
jg
in
sbb
mov
and
stc
iret
push
add
cmpsl
or
popf
dec
mov
sub
dec
cli
mov
xor
mov
jmp
add
and
inc
aaa
and
jno
add
mov
add
cmc
adc
add
das
pusha
add
add
push
inc
mov
ss
sub
pop
pop
arpl
mov
inc
sub
fs
cmp
push
push
pop
cwtl
aad
add
gs
adc
add
rcrl
int3
pop
jmp
and
fistpll
xorb
and
mulps
push
iret
adc
int3
cmp
push
sbb
mov
mov
repnz
inc
dec
mov
pop
int
pop
js
test
dec
in
aam
repz
aaa
and
or
cld
sbb
cmp
test
sub
mov
mov
add
push
pop
ja
into
fisubrl
jmp
adc
aaa
call
jge
xchg
xchg
push
movsl
cmpsl
mov
out
and
mov
pop
xchg
in
sub
pop
sub
dec
jbe
lcall
andl
test
pop
push
ja
int3
or
divb
pop
call
jae
movsb
adc
stos
add
add
icebp
adc
das
mov
jne
dec
iret
and
xchg
cld
pop
adc
gs
add
rcr
lds
sarb
lret
mov
test
sahf
sbb
sti
and
push
data16
je
rcll
movsl
add
outsb
lret
push
add
xor
mov
add
and
rcrl
mov
jae
jae
add
pop
xor
push
mov
fiaddl
cmc
lock
mov
lcall
xor
adc
sub
add
lea
dec
test
out
pop
push
inc
insl
jp
adc
ret
leave
cmpl
sub
add
xchg
pushf
add
add
push
gs
jns
js
jnp
mov
add
sbb
imul
mov
insl
add
into
sub
inc
xor
inc
es
aad
ja
add
pushf
add
sbb
lcall
push
pop
jbe
add
ret
jnp
jl
add
dec
addl
xchg
or
add
inc
add
ret
fs
popf
repnz
jge
and
xchg
adc
cli
cmp
add
sub
pop
call
jg
in
int
sub
jmp
into
test
lods
incb
push
jo
cli
ret
syscall
jno
into
add
inc
or
daa
inc
lds
push
cmp
add
ss
enter
xor
ja
outsl
jp
add
jae
add
outsl
lahf
push
cmp
mov
cmp
mov
adc
pop
add
add
scas
adc
add
add
leave
xor
dec
fcoml
cmpsb
sub
inc
daa
pushf
lret
cmp
xchg
pop
pop
rorl
loope
jne
cwtl
sub
and
cmp
sub
ret
je
pop
shlb
fidivrl
repz
jp
add
pop
rorl
add
int
jb
out
inc
add
loopne
dec
lds
jg
pusha
test
mov
mov
xchg
pop
stos
add
xor
mov
cld
sub
lea
xchg
cld
das
cmp
mov
mov
mov
mov
add
pop
mov
in
out
fsub
stc
ret
push
dec
pop
and
inc
mov
add
or
add
movsb
push
inc
fistpl
or
in
push
pop
mov
xchg
xchg
inc
sbb
jg
jne
mov
sub
outsb
dec
pop
mov
mov
outsl
mov
add
sbb
xchg
lret
add
add
push
pop
movsl
sbb
add
sbb
push
push
mov
mov
cld
insl
test
arpl
xchg
mov
add
dec
or
push
and
int
mov
jae
lret
leave
test
leave
imul
pop
into
jg
inc
xor
push
xchg
mov
psrlq
inc
std
jecxz
pop
nop
xor
outsl
adc
add
leave
aaa
mov
ret
dec
jnp
cmp
fucomi
and
incl
jge
add
mov
mov
pop
fisttps
add
mov
adc
lcall
mov
test
pop
into
pusha
add
jnp
shrl
sbb
data16
lahf
adc
mov
popa
or
pop
push
je
lods
rorb
rolb
adc
mov
fsub
add
mov
add
xchg
aaa
ljmp
sub
xor
sbb
jno
xchg
loopne
andl
add
mov
nop
push
mov
add
test
imul
dec
fisubl
pushf
iret
pushf
int3
and
inc
in
adc
jae
add
inc
and
arpl
mov
std
and
xchg
add
sbb
pop
gs
out
jge
aaa
call
add
mov
add
popf
stos
xchg
xchg
mov
roll
jns
add
mov
mov
fimuls
stos
call
dec
jge
movb
jp
addr16
inc
fsts
gs
pop
hlt
jbe
mov
push
jp
shrl
and
fldl
shrb
mov
sbb
inc
inc
add
test
sub
xchg
jl
test
fldl
cld
lret
add
push
jecxz
in
jne
xlat
add
add
dec
adc
add
push
lret
add
jae
add
push
inc
dec
sub
push
ss
lret
mov
movsl
add
adc
mov
mov
pop
mov
adc
mov
mov
mov
add
add
lret
add
test
xor
push
mov
repz
stc
xor
add
or
iret
add
add
ds
pop
jno
popa
pop
add
add
mov
shlb
add
add
lods
pop
add
or
add
add
mov
gs
lret
dec
enter
lock
push
repz
les
xchg
cli
lahf
fildll
popa
inc
pop
lahf
repz
add
loop
shl
aaa
cmc
sub
sub
xor
sub
mov
fs
or
int3
jp
out
mov
outsl
cltd
in
sarl
pop
jne
lock
movsl
daa
dec
lock
sarb
cmp
cmpsb
lods
lahf
outsl
push
arpl
stc
in
push
pop
push
or
pop
adc
mov
jne
in
scas
inc
add
je
gs
decb
xor
add
add
outsb
loopne
dec
loope
imul
push
sti
adc
inc
popf
xchg
and
push
mov
imul
test
sub
mov
ficoml
cmc
xchg
inc
cmpsb
sub
movsl
lds
inc
xor
sbb
icebp
xchg
aaa
int
add
sub
and
es
aaa
add
and
push
pop
jl
jne
sub
jle
mov
shlb
repz
inc
es
push
sbb
push
add
xchg
jle
add
jge
inc
lcall
add
sbb
add
repz
dec
pop
fsubrl
cmp
repnz
arpl
lods
sti
mov
les
jmp
adc
add
dec
xor
scas
add
cmpsb
add
test
push
gs
out
ret
jb
add
rolb
add
in
outsl
adc
in
add
inc
rol
out
add
inc
int
out
add
dec
fwait
cs
add
add
jno
je
jne
add
ljmp
pop
stc
in
and
add
sti
rolb
push
sub
jo
sbb
xor
mov
adc
add
add
add
bound
loope
push
pop
adc
add
mov
rcl
sub
jge
testl
inc
xchg
xlat
cmc
add
cmp
cmc
nop
add
inc
cs
and
add
mov
aas
xchg
mov
scas
add
push
rorb
pop
add
add
lcall
mov
in
sub
add
add
jmp
gs
adc
jno
subb
std
daa
add
out
jmp
inc
add
add
xor
or
add
dec
and
push
cmp
sahf
inc
cmpsl
sub
push
dec
push
lret
ja
add
mov
ret
scas
jmp
xor
xor
add
inc
pop
or
add
arpl
inc
lcall
mov
inc
sbb
xor
stos
mov
add
add
pop
add
rcl
mov
movsl
add
xchg
gs
sub
add
add
push
pop
stos
or
mov
andl
sti
cs
mull
lds
xchg
test
loope
add
mov
pop
jmp
push
mov
xorb
inc
or
adc
adc
and
adc
outsl
push
pop
outsl
mov
jbe
mov
cwtl
mov
inc
pop
add
mov
push
add
add
mov
into
sub
fstl
sbb
cli
adc
sub
pop
call
mov
cmc
add
xor
nop
jne
pop
pop
call
sbb
sbb
aad
into
add
jnp
add
adc
out
xchg
ss
sub
jg
out
into
mov
in
loopne
cmp
inc
jae
shll
ljmp
sub
int3
je
repz
mov
cmp
add
in
sbb
mov
mov
add
add
fcoml
adc
sbb
mov
cmpsl
sub
cmp
mov
imul
xlat
scas
or
int3
push
lods
xor
aas
cmp
xor
movl
cmp
add
cmp
xor
add
icebp
jne
dec
dec
int
sub
stos
out
jb
pop
add
es
lret
add
add
enter
adc
jnp
add
adc
not
add
movsl
insl
push
add
add
fmul
sbb
loopne
pop
inc
push
add
mov
aaa
int
jne
mov
or
adc
add
add
les
out
xor
jns
shrl
int
mulb
roll
jns
imul
jae
or
int
jb
jne
push
test
shrb
push
inc
insl
inc
fbld
inc
icebp
push
test
lock
lret
or
push
mov
insb
popf
jo
sbb
jge,pn
shlb
and
call
aaa
negl
add
sbb
add
addl
out
daa
add
mov
sub
mov
or
push
pusha
inc
adc
mov
popa
dec
sub
mov
or
push
sbb
push
popf
ds
leave
mov
mov
lea
xor
aad
add
add
lret
das
mov
loopne
verr
scas
pop
mov
mov
mov
roll
jmp
pop
stos
push
mov
cmp
popf
fcomp
pop
mov
dec
into
idivl
adc
test
cmc
sbb
scas
movsb
adc
xor
icebp
xchg
in
sahf
sti
push
popa
aaa
mov
jbe
into
add
add
push
jl
ret
dec
lods
mov
lret
mov
add
push
es
sarb
push
push
add
test
add
js
repnz
add
add
test
mov
pop
mov
adc
mov
mov
fisubs
adc
adc
lods
hlt
stos
mov
inc
in
push
push
in
xor
scas
aad
push
and
shlb
incb
mov
cld
cmc
inc
mov
push
mov
fidivs
arpl
ljmp
adc
fwait
addr16
sub
cmp
mov
push
scas
inc
int3
leave
jle
cltd
inc
add
jns
out
or
sub
jmp
pop
movsl
or
pop
imul
xchg
jb
dec
adc
roll
xchg
add
flds
jg
or
xor
mov
arpl
xor
int
add
xchg
fistpll
testb
add
mov
fistpll
aas
or
pusha
sarl
push
mov
mov
cli
or
inc
daa
mov
sbb
leave
in
and
or
test
jo
add
add
mov
or
jb
add
or
andb
jo
lock
mov
and
call
seta
fsincos
adc
add
scas
cmc
stos
push
vcvtsi2ssl
pop
lds
push
cmpsb
push
scas
aam
bound
push
pop
aaa
scas
call
jnp
or
and
popa
mov
aam
or
add
pop
les
loope
das
cmpsb
scas
lret
mov
je
add
add
ficomps
iret
stc
push
and
add
iret
jno
fdivrs
dec
fisttpl
mov
sbb
add
add
movsl
add
or
add
mov
mov
les
clc
xor
imul
add
arpl
mov
stos
add
add
lret
lods
cmc
add
add
clc
mov
add
push
out
pop
mov
in
aas
sub
insb
add
add
mov
inc
roll
add
push
movsb
add
add
mov
jo
cmp
add
push
add
add
outsl
cmp
add
push
mov
lods
lret
add
xor
insl
add
add
add
enter
inc
cmp
jb
push
cmp
add
add
sub
call
gs
dec
adc
gs
inc
test
pop
xchg
in
test
aad
sti
out
pop
out
mov
out
mov
outsb
sbb
cs
xorl
jno
aaa
push
xlat
pop
cmp
loop
outsb
cmp
verr
jno
push
call
sbb
add
lds
xchg
jo
ss
inc
jae
add
add
shrb
xor
mov
xor
sldt
add
insl
jb
mov
xor
pop
mov
dec
adc
repnz
mov
sbb
enter
int
cmp
dec
stos
lods
sti
xchg
xor
rclb
mov
add
mov
sub
xchg
jae
pop
jno
xchg
xorb
add
rcrb
add
push
jns
pop
loopne
add
xchg
inc
inc
inc
push
pop
idiv
xor
add
add
ds
jl
jle
imul
adc
sub
xor
push
add
add
sub
xchg
push
sbb
jae
mov
add
add
xor
mov
cmp
movsl
or
sub
jg
mov
imul
push
scas
out
cld
fcomp
outsb
popf
or
add
and
add
dec
inc
aas
mov
jno
cmpb
gs
add
add
mov
inc
dec
mov
lret
fs
jg
sub
mov
or
or
or
add
and
mov
jge
mov
pop
cmpsl
or
inc
add
inc
imul
popa
or
dec
mov
or
pop
jns
in
add
add
cmp
xchg
cmp
xor
lock
sub
fsubrl
sahf
nop
dec
pushf
aas
pop
jbe
aad
add
xor
out
mov
jo
jle
mov
rcl
cmp
add
add
sbb
mov
xor
roll
inc
pop
and
nop
in
xor
xlat
scas
mov
cmp
fimuls
or
dec
add
fadds
lret
pop
mov
and
dec
iret
rclb
fwait
lret
xor
or
mov
mov
pop
push
loopne
push
lcall
pop
sbb
jge
mov
cmp
xchg
xor
add
lss
add
dec
jne
mov
stos
sbb
jae
movsl
xor
loop
xor
mov
loopne
or
jno
mov
rclb
test
push
loope
dec
inc
xchg
in
cmc
add
add
inc
jno
mov
sub
add
out
lea
push
jb
mov
push
lods
push
push
push
das
ss
mov
mov
add
pop
fldcw
icebp
xor
xchg
mov
xor
jl
xor
mov
movsl
scas
or
dec
add
xchg
movb
mov
adc
inc
push
cmp
loop
fidivrl
pop
mov
push
mov
add
add
inc
movsb
lret
mov
cmc
aas
mov
add
dec
inc
push
and
pcmpeqw
jns
in
or
cltd
lret
add
sbb
cli
loopne
cmp
inc
mov
or
loopne
movsb
push
pop
jno
xlat
add
xorl
rcl
push
add
and
ret
or
jno
push
xor
push
icebp
and
xor
mov
into
jg
xchg
inc
or
mov
rcll
outsb
les
sarb
mov
and
lret
push
sub
rcll
mov
fbstp
fists
out
hlt
rcll
push
nop
add
inc
pop
adc
fiadds
imul
ret
add
add
stos
sub
mov
add
add
xchg
push
dec
push
or
jecxz
dec
or
add
add
ds
pop
cld
lods
ds
add
add
pop
sub
insb
add
add
jns
inc
in
aaa
lock
rorb
mov
add
in
lahf
dec
add
or
add
cltd
mov
lds
fnsave
iret
add
insl
add
test
sub
dec
add
icebp
mov
insb
addr16
in
jp
add
push
add
add
or
xchg
stc
bound
pop
sahf
add
add
add
dec
popl
or
je
repz
mov
add
fadds
cmp
aas
pop
inc
push
mov
push
push
sbb
mov
loopne
add
enter
data16
jne
add
add
mov
add
roll
or
or
and
xlat
add
adcl
je
dec
dec
pop
add
add
push
es
lea
xor
lods
loopne
jmp
int3
cmpsb
cmp
and
lock
jmp
repnz
test
sbb
cwtl
adc
mov
pop
add
sbb
mov
or
cs
popa
rolb
fwait
mov
add
fwait
push
sbb
and
notb
cmp
dec
mov
push
pop
add
scas
add
add
xchg
jbe
add
sti
mov
test
jbe
push
mov
sbb
movsl
or
lcall
lock
dec
out
out
insb
add
das
sbb
xchg
mov
inc
sti
add
pop
mov
sub
add
jbe
mov
mov
shrb
or
inc
test
jnp
add
xchg
inc
xchg
lret
add
sub
mov
mov
stos
ss
fs
loope
push
add
stc
loop
jb
and
fiadds
jecxz
inc
psubusw
outsb
call
add
xchg
mov
insl
jnp
gs
sub
cltd
xorb
add
test
mov
push
cwtl
lods
xchg
pop
push
ret
add
add
pop
stos
scas
shll
adc
clc
add
pop
lret
cmpsb
int3
loope
pop
xchg
dec
add
add
jecxz
fisubrs
sub
sub
jnp
orl
inc
mov
shr
add
mov
fwait
dec
inc
inc
mov
add
and
jb
mov
add
add
add
stos
pop
push
dec
stc
test
outsb
mov
mov
inc
mov
or
movsl
das
iret
inc
scas
and
rorl
jo
sbb
add
pop
cld
scas
jnp
fs
test
dec
imul
xlat
jp
pop
add
add
aad
add
scas
fucomi
xlat
scas
or
inc
jl
mov
pop
orl
sbb
adc
popa
lods
aam
mov
rcll
ret
xor
mov
mov
cmp
inc
into
sarb
add
push
cmc
out
outsb
mov
dec
mov
mov
push
lea
iret
sahf
fcoms
cmp
add
sub
xor
dec
add
pop
mull
rorb
mov
je
and
sbb
les
outsb
int3
stos
add
add
adc
lods
pop
mov
cld
and
push
pop
test
aad
cltd
pop
lret
or
sahf
mov
stos
mov
loope
cmp
jnp
mov
bound
rcr
frstor
gs
repnz
mov
push
iret
mov
xor
push
arpl
rorl
int
push
add
add
push
mov
imul
outsl
push
jbe
xchg
imul
cmpsl
mov
push
jp
push
pop
test
xchg
xchg
out
bound
ljmp
inc
xchg
xchg
inc
enter
fmuls
mov
and
cmp
adc
fstps
pusha
add
mov
add
je
jo
psubusw
mov
into
xchg
gs
inc
inc
jmp
mov
cmp
imul
add
add
dec
stos
popa
add
add
ret
add
cwtl
inc
push
daa
push
out
dec
cmp
mov
rcll
and
or
aad
add
mov
add
scas
mov
xchg
cld
sub
cwtl
dec
inc
dec
test
frstor
push
cmp
jge
fstps
mov
mov
push
mov
jno
loop
and
add
add
popa
jg
sub
add
test
dec
mov
xlat
ss
sldt
add
stos
cmp
sahf
fldenv
dec
mov
push
lcall
cmc
sbb
fsub
adc
mov
cmp
sahf
add
add
add
lahf
imul
fldt
rcrb
mov
test
sbb
dec
add
sub
sub
not
inc
mov
pop
inc
int3
push
repz
insl
testb
mov
dec
adc
pushf
popf
sbb
ret
cmp
fucom
cmp
xor
add
xlat
call
add
xchg
pop
mov
inc
test
xchg
adc
cmp
ljmp
adc
add
add
stos
das
sub
mov
sti
pop
add
add
add
dec
pop
sbb
addl
pop
xchg
dec
add
push
adc
dec
fildll
ret
and
push
add
or
aaa
jmp
mov
inc
add
add
mov
mov
mov
lods
gs
ret
xchg
jo
in
jle
or
sub
push
xchg
sub
push
movsb
mov
lahf
popf
and
cmpsl
xor
fimull
cmp
lock
sbb
inc
xchg
xchg
hlt
adc
es
lods
sbb
sub
hlt
sub
jno
lret
mov
mov
ljmp
adc
and
imul
test
add
adc
pop
insl
repnz
shrl
fdivs
or
add
push
mov
ljmp
inc
push
aaa
jae
outsb
pop
cmp
xchg
xchg
iret
in
xor
xchg
aam
sub
add
ja
cmpsl
in
jmp
mov
clc
pop
pop
sub
add
cwtl
add
jae
jnp
mov
add
add
lret
aam
mov
dec
into
lea
not
inc
add
fiaddl
add
dec
fs
and
cmp
aas
daa
jmp
test
scas
cmp
pop
dec
inc
jae
mov
add
adc
or
add
and
jp
popa
aad
adc
mov
fisubrs
push
inc
jle
add
iret
mov
sub
das
and
daa
mov
adc
out
push
aad
xor
or
hlt
mov
push
call
add
lret
rorl
mov
sub
jno
pop
rolb
add
sub
and
mov
xchg
xor
mov
iret
bound
sbbl
and
mov
push
sti
add
add
xchg
push
sub
inc
int
xor
add
push
push
xchg
jnp
jns
push
bound
add
sub
jge
jmp
inc
lret
pop
push
fs
cwtl
add
add
pop
or
leave
mov
inc
and
and
sbb
or
mov
repnz
and
or
ds
adc
cltd
in
test
sub
mov
add
add
push
fistps
sbb
testl
jae
add
movsb
fiaddl
inc
scas
add
insl
sub
movsb
sbb
sub
add
add
push
in
dec
adc
std
dec
nop
movsb
sub
add
stos
fldl
pop
sarl
xlat
sbb
or
xor
data16
sbb
jnp
je
fbld
ret
loopne
mov
adc
shlb
jnp
jmp
jmp
mov
fdivrs
addr16
dec
jne
mov
stos
mov
movsl
add
and
push
pushl
pop
frstor
arpl
add
or
add
je
sbb
or
xchg
sahf
int
js
push
adc
imul
adc
add
add
test
pop
add
mov
std
int
div
jno
add
add
test
sub
inc
call
dec
jno
cmc
test
jg
mov
stos
sbb
cmp
xor
push
mov
inc
push
roll
fucomp
xchg
rolb
add
cmp
lret
aam
add
dec
out
jo
sti
push
add
pusha
hlt
mov
add
aaa
or
or
adc
rcl
dec
in
mov
cld
sub
add
xor
lods
testb
sbb
push
mov
mov
insb
push
clc
and
or
imul
cmpsl
aaa
fwait
and
inc
lcall
add
add
push
add
loopne
ja
cmp
aas
pop
adc
inc
or
xor
mov
sub
addl
and
mov
xchg
nop
movsl
movsl
inc
sbb
pusha
cmpsl
xor
lret
ret
mov
add
scas
outsl
xor
sbb
dec
stc
add
cmp
inc
adc
in
imulb
orb
pop
inc
int3
push
arpl
jl
push
sub
repnz
ret
out
add
mov
pop
push
pushf
inc
mov
mov
add
and
jge
adcl
push
rol
sub
movsl
push
add
loope
jne
lods
add
cmp
cld
xor
and
pop
mov
cmpl
das
xor
ds
jle
pop
mov
push
mov
push
pushf
or
rcll
inc
pop
jecxz
and
imul
push
sbb
arpl
xor
push
inc
dec
xor
mov
fdivrs
leave
xchg
fnsave
add
add
xchg
xchg
push
mov
cltd
add
dec
fs
push
in
and
add
add
xchg
push
mov
or
pop
imul
sub
dec
pop
add
in
dec
pushl
adc
les
and
lret
in
dec
and
pop
leave
mov
inc
mov
cld
cmpsb
push
jnp
inc
pop
sti
jno
and
add
in
add
call
lret
add
aad
shll
fadd
adc
push
movsl
ds
ss
dec
add
popf
cld
movsb
aaa
jmp
sbb
mov
cmpsl
repnz
mov
dec
hlt
xchg
test
mov
xchg
dec
scas
lea
mov
and
cmp
pop
out
xchg
in
filds
xchg
sti
int
and
aaa
fwait
and
or
add
dec
in
jne
jo
fwait
popa
sub
push
std
inc
aad
jne
popl
jo
jmp
add
add
mov
fcoml
or
or
hlt
aaa
xor
cwtl
fdivs
cmp
sbb
mov
fbld
push
loop
insb
inc
sub
cmp
inc
cmpsb
pop
xchg
cmp
push
inc
decb
mov
cmp
add
add
cwtl
and
lret
clc
add
lods
pop
call
sub
daa
cmp
pop
fistpl
dec
dec
mov
outsb
clc
imul
xchg
scas
jmp
lods
stos
cwtl
cmp
jnp
mov
push
inc
sub
add
adc
sub
cmc
and
iret
xor
loopne
imul
and
nopl
jge
iret
fdivrl
outsb
call
icebp
in
das
std
mov
add
roll
jg
stc
incl
daa
add
jbe
insl
fisttpll
ret
add
sub
dec
add
loop
ret
pop
jmp
add
in
cltd
mov
test
imul
mov
or
icebp
mov
out
add
fdivrl
movsb
add
mov
mov
add
pop
add
add
pop
arpl
add
dec
or
dec
jecxz
rcr
push
fildll
cltd
inc
sti
add
mov
jecxz
out
pop
scas
inc
fisubrs
addr16
add
add
mov
outsl
bound
sbbl
mov
xchg
testb
mov
add
das
add
jo
jge
push
add
and
inc
and
inc
add
mov
add
jmp
add
faddp
fnsave
clc
add
insl
xor
xor
lds
cli
icebp
mov
add
and
clc
dec
mov
stos
arpl
dec
dec
test
fwait
adc
aad
rcrb
adc
cli
cmpsl
and
ficomps
add
add
rcll
add
inc
cmpsl
mov
add
cmc
xlat
rol
sbb
add
jl
sbb
cmp
ret
mov
xchg
mov
adc
add
add
mov
mov
cld
xor
dec
in
add
add
mov
add
adc
mov
popf
add
add
imul
hlt
lock
xchg
add
cmp
faddp
cmp
add
shll
outsl
call
fwait
bound
xor
inc
pop
movsl
push
stos
outsl
mov
pop
imul
xor
jl
sub
cmpsl
sarb
mov
mov
mov
mov
mov
clc
push
push
scas
arpl
ljmp
ficoms
inc
rolb
movsl
mov
add
loopne
inc
jno
in
xchg
xlat
and
stos
xor
enter
mov
loope
je
pop
add
dec
and
aad
and
add
cltd
lcall
add
leave
pop
dec
aam
rcrl
ljmp
push
lods
sbb
scas
push
or
mulb
push
jne
mov
jmp
addr16
pop
cmp
test
add
into
bound
add
mov
add
leave
sub
fsub
push
xchg
add
inc
add
andb
lcall
add
pop
adc
movsl
cld
jo
dec
pushf
addr16
aas
sbb
repz
inc
es
push
mov
dec
outsb
cmp
or
loopne
and
jnp
jl
sub
fsubl
mov
insl
jnp
aas
add
mov
mov
sub
ja
or
scas
enter
js
cmc
fcmovnbe
mov
sub
jno
or
sbb
jo
ds
sbb
jmp
cmp
mov
hlt
sub
sub
repnz
or
adc
int3
jae
jl
sub
imul
scas
aaa
xor
rcrb
jae
loope
and
mov
xchg
jo
fnstsw
add
push
test
mov
lds
or
dec
xchg
mov
sbb
aam
addr16
ds
mov
es
add
xchg
test
add
lea
iret
test
jae
outsb
ja
jmp
xor
in
movups
flds
or
mov
cmp
aad
xchg
xchg
lret
clc
add
mov
insb
jmp
mov
adc
jnp
inc
add
add
xor
add
add
andl
add
add
add
cmpsb
repnz
lods
stos
ljmp
out
dec
mov
ljmp
dec
pop
pop
test
pop
mov
nop
inc
add
add
imul
or
cwtl
push
popf
jne
test
outsb
sbb
push
fs
inc
cmpsl
add
les
push
pop
sub
sub
add
out
add
xchg
ret
inc
adc
add
or
test
add
repnz
fs
testb
inc
xchg
test
sub
push
push
addr16
dec
xor
mov
aaa
lds
int
sbb
scas
mov
mov
or
out
and
sub
fwait
sub
dec
outsb
inc
pop
mov
or
dec
dec
xchg
xlat
addb
mov
cmpsb
shrl
xor
lock
inc
adcl
inc
or
mov
push
push
fidivl
jg
sbb
dec
decb
pop
mov
and
and
into
and
pushl
mov
stos
mov
inc
pushf
xchg
imul
pop
int
mov
or
iret
push
jb
jl
xlat
sti
pop
negl
cmp
insl
je
rcrl
fsub
jb
stos
adc
in
jle
inc
push
push
mov
mov
dec
loop
cld
inc
pop
fiaddl
add
int
push
add
sub
jmp
aaa
aam
ja
sbbl
jmp
stos
mov
sub
in
adc
in
ljmp
lods
add
add
inc
bound
test
insl
mov
add
sarb
xchg
ret
and
into
sub
in
add
add
int
orl
stos
mov
add
or
loopne
xchg
push
mov
stos
add
add
jmp
sbb
call
inc
cmp
repnz
sub
aad
stos
mov
fadds
push
incb
fildll
fwait
aaa
pop
out
cmpsb
sub
push
pop
xchg
adc
sub
jb
repz
push
xor
sub
int
mov
cmp
push
jmp
pop
jno
test
sub
fcompl
push
cmpsl
and
push
push
mov
ror
hlt
shl
aas
push
andl
pop
add
add
add
push
nop
fdivp
imul
and
or
nop
sub
js
pop
fidivl
jae
dec
mov
cs
lldt
add
add
dec
mov
sbb
sub
fistl
add
loope
ftst
sbb
cmp
repz
lret
stos
sti
cmp
add
sti
mov
out
fisttpll
je
popa
stos
cmpsb
sbb
daa
add
xchg
nop
xchg
int
pop
push
push
subl
pushf
inc
lret
xor
clc
imul
and
les
xor
scas
jae
mov
add
movsb
mov
bt
sarb
add
repz
xor
clc
add
jbe
jl
dec
or
dec
sub
rcrl
fdivrs
in
test
inc
adc
mov
xchg
add
add
aas
rcl
sbb
in
push
jl
sub
shlb
fcomi
pop
mov
add
add
hlt
jmp
add
xchg
add
aam
push
cmp
arpl
dec
push
sbb
xorb
and
mov
add
mov
shr
repz
js
sbb
cmpsl
pop
ja
add
insb
arpl
add
add
fldt
stos
stc
xor
adc
cmp
inc
out
cmp
jmp
mov
cmp
data16
inc
dec
enter
ljmp
push
insl
xchg
mov
mov
cld
shlb
cmp
jg
ja
in
jae
push
test
popf
inc
pushw
decb
js
dec
sub
mov
out
xor
lea
mov
int3
iret
cmp
jg
or
inc
pop
insl
xchg
jo
jecxz
roll
xchg
push
je
sahf
add
or
mov
mov
adc
xlat
loope
arpl
push
sbb
push
push
das
add
es
fiaddl
je
dec
jb
inc
add
add
lds
jo
fcompl
loopne
dec
mov
cld
aas
adc
rclb
stos
nop
nop
xchg
sarb
popf
xor
lds
popf
out
add
add
stc
adc
add
das
sbb
fcompl
pop
inc
es
fmull
inc
jp
int
out
stos
outsl
inc
shlb
jne
xor
jns
roll
add
daa
pop
popa
outsb
addb
add
add
int3
insl
push
cmp
jne
add
adc
into
stc
jge
add
xchg
pop
jecxz
int
and
cmp
mov
and
mov
ret
rcrb
and
in
push
inc
stos
addb
add
add
in
push
gs
jecxz
out
into
into
push
imul
push
in
aas
mov
sbb
aas
cmp
data16
mov
std
imul
xchg
js
cmp
jno
pop
enter
xor
or
add
insb
leave
dec
int
add
add
std
inc
push
cld
cmp
mov
push
xchg
mov
test
mov
sub
adc
or
xor
out
adc
jnp
pop
mov
lock
mov
test
xor
mov
gs
push
mov
repz
add
cltd
imul
or
xchg
sbb
movsl
in
bound
dec
lock
xchg
cld
fcom
xlat
sahf
push
add
mov
ja
cmc
mov
and
pop
das
inc
dec
xchg
jge
iret
lret
loop
fwait
loop
jae
rolb
pop
scas
lcall
pop
fcoms
fs
aaa
cmp
pop
mov
stc
iret
jo
fwait
jb
stos
inc
test
sub
nop
adc
icebp
dec
pop
shlb
in
movsl
ss
xor
sahf
cmc
in
shlb
or
dec
push
cmpsl
or
adc
mov
imul
sbb
or
sub
adc
xor
pop
rclb
outsb
in
outsl
loop
popa
cmpsl
jnp
int
or
sbb
jmp
xor
jecxz
shlb
and
add
aas
repnz
add
inc
mov
fsts
sahf
jns
add
mov
je
lds
pop
mov
cwtl
inc
dec
add
mov
jae
popa
fs
loopne
std
test
and
or
or
xor
mov
jno
push
outsb
push
filds
jmp
adc
inc
jae
push
mov
and
mov
dec
add
cmc
add
test
ja
dec
scas
cmp
mov
add
adc
and
notl
je
pop
add
add
movsb
mov
lods
mov
insl
test
mov
pop
sub
js
fistpl
pop
pop
daa
or
loope
push
dec
hlt
sbb
add
in
inc
gs
cvtpi2ps
add
dec
outsl
lret
fs
mov
push
cs
push
add
in
inc
adc
push
enter
sbb
push
add
fwait
out
inc
xor
pop
in
aas
mov
loopne
mov
fdivl
sub
adc
dec
cmp
xchg
and
jp
mov
pop
fwait
jge
mov
cmp
xor
inc
shll
pop
inc
jle
sbb
mov
decb
js
loope
pusha
aas
icebp
stc
adc
sub
sbb
nop
clc
divl
in
adc
stos
mov
das
mov
push
shr
lods
sbb
out
fmuls
lock
and
inc
lcall
rcrl
iret
mov
xchg
or
or
xor
mov
iret
pop
enter
int3
gs
mov
ret
or
add
or
add
mov
inc
add
add
das
dec
fs
pop
add
add
add
in
das
fildl
add
or
xchg
adc
add
add
jns
pop
and
add
jp
or
dec
lret
add
add
nop
and
xlat
addl
add
fisttpl
jge
add
mov
xor
add
movsb
fmull
loope
stc
mov
xchg
ljmp
int
std
mov
hlt
mov
sbb
sub
pop
pushf
cmp
jge
xchg
imulb
jecxz
aam
mov
clc
inc
push
mov
pushf
or
add
stc
dec
sub
or
fidivl
into
sub
push
and
mov
std
inc
pop
aaa
mov
dec
in
loopne
mov
int
adc
or
cwtl
jmp
mov
push
add
stc
jl
pop
pop
and
lahf
mov
pop
sub
pop
pop
mov
push
test
or
in
aaa
cli
adc
gs
inc
rcl
mov
add
mov
fstl
lret
incl
in
add
cmc
inc
xchg
shll
or
push
or
add
add
push
daa
arpl
popa
lcall
mov
aaa
fistl
arpl
inc
pop
std
sub
ljmp
xchg
dec
add
xchg
movsb
pop
xlat
mov
mov
cmp
mov
insl
jecxz
jl
insl
call
add
mov
xchg
inc
nop
add
add
xor
jbe
loopne
xor
les
push
xchg
les
pop
into
mov
fsubl
imul
jb
pop
fwait
mov
sbbb
xchg
push
add
addr16
mov
out
inc
sub
dec
pop
inc
int
pop
movsb
sbb
dec
add
add
ss
cs
cs
or
lods
jg
pushf
sub
push
enter
int3
jno
add
add
int
adc
push
sub
sub
cmp
adc
push
and
pop
add
imul
enter
xchg
jo
leave
movsb
xor
and
sbb
sub
jmp
sbb
xlat
pop
mov
adc
push
enter
dec
cmp
cltd
aas
sbb
cmp
pop
iret
ret
xchg
nop
pushf
jl
popf
inc
adc
mov
add
sub
pop
add
es
insl
lods
inc
faddl
add
sbb
cmp
mov
sahf
pop
inc
pushl
mov
in
ljmp
add
jecxz
jp
test
xchg
push
aas
dec
fiaddl
adc
ds
add
mov
mov
pop
sbb
in
cmp
loopne
add
xlat
cmp
and
insl
push
in
movsl
add
pushf
mov
or
sbb
fldl
rcrb
into
imul
and
orl
adc
ret
scas
aad
push
pop
xchg
dec
and
add
fwait
xlat
add
idiv
xor
scas
iret
pop
es
xorb
nop
pop
dec
int
in
mov
push
add
pushf
and
loopne
xchg
lret
or
xor
insl
and
imul
add
mov
push
xlat
inc
add
loope
je
roll
mov
dec
popl
mov
lahf
mov
adc
lods
fistps
cmp
xchg
or
ret
dec
pop
pop
fimull
push
pop
jno
out
std
dec
sbb
orl
das
fcom
das
push
jmp
add
add
jg
jns
jmp
add
mov
popa
add
add
dec
andl
divb
mov
jns
mov
outsb
mov
jb
rorl
repnz
ror
push
push
add
xchg
jo
enter
lods
adc
les
cs
inc
cmpsl
add
scas
cmc
stos
pop
mov
sbbb
jl
cmp
adc
add
add
int3
pop
jmp
add
loope
jno
dec
jp
xor
movq
fdivs
cmp
xchg
je
loopne
repnz
add
add
mov
mov
pop
icebp
cmp
inc
lcall
mov
add
or
nop
add
mov
add
or
xor
out
test
xchg
imul
scas
dec
imul
imul
push
push
cmp
sbb
dec
and
sbb
xchg
jp
ret
inc
push
pushf
pop
enter
push
sub
xchg
into
sub
loope
pop
mov
dec
mov
insb
push
adc
lods
mov
pusha
mov
push
inc
js
mov
xchg
add
xchg
add
sbb
or
test
lock
mov
mov
xor
lret
push
sbb
push
and
into
push
test
fsubrs
fwait
pop
stos
gs
mov
inc
dec
and
lods
push
or
sti
addr16
cmc
mov
inc
add
add
cltd
aas
lret
outsl
xor
add
jb
adc
arpl
nop
cmp
add
sbb
cmp
mov
sti
cmp
mov
ret
push
or
cwtl
add
out
or
std
lcall
sti
lds
fs
pusha
aad
pop
pop
mov
mov
inc
dec
push
js
adc
push
or
mov
mov
fcomps
add
pop
adc
cmpsl
cmp
fnstenv
or
add
ret
add
cmpsl
fmuls
mov
icebp
add
xor
mov
adc
add
inc
add
sbb
aam
out
add
jne
pop
ja
and
add
or
ficomps
xchg
xchg
add
and
add
movsb
or
mov
movsb
and
adc
inc
add
xor
in
cmpsl
jno
add
test
add
xchg
sahf
add
add
add
adc
or
adc
fnstcw
rorl
sub
add
fisubrs
pop
imul
filds
pusha
sahf
add
adc
add
adc
dec
icebp
add
fcmove
pop
add
jle
fadds
add
jae
es
add
sub
inc
mov
int
dec
xor
add
sub
stc
add
es
push
outsl
inc
sbb
add
movl
adc
inc
jmp
mov
cmp
fldenv
roll
add
push
add
add
pop
std
ja
push
mov
js
or
adc
je
iret
xchg
scas
push
push
std
add
add
push
jo
repnz
mov
pop
rcr
add
add
push
adc
popf
inc
stc
mov
push
adc
and
adcl
and
add
add
in
pop
lock
fwait
into
or
out
push
or
adc
addl
jp
pop
fidivrl
js
mov
add
shlb
les
add
add
pop
stc
mov
jns
dec
pusha
or
inc
sbb
add
add
sbb
mov
lea
add
add
jnp
fisttpl
mov
add
filds
ret
or
ret
rcrl
add
add
cmp
pusha
and
add
shrb
fs
push
into
jge
xchg
lcall
inc
daa
popf
add
cmp
or
sahf
mov
and
sbb
add
add
xor
xchg
stos
mov
and
fbld
cmp
pop
pop
in
jns
xor
hlt
jg
add
add
pusha
xchg
mov
dec
arpl
or
xor
mov
shl
mov
mov
orb
dec
std
push
dec
pop
cmpsl
daa
xchg
and
aam
dec
dec
push
push
add
popf
dec
rclb
jecxz
shll
jbe
in
into
insl
fistpll
in
jo
sub
xchg
sbb
dec
push
out
sbb
push
dec
fs
dec
sbb
je
jmp
dec
popf
mov
enter
je
dec
sub
mov
faddp
movsl
cli
add
cli
bound
push
xor
and
xchg
dec
pop
jg
loop
mov
adc
or
into
and
add
jns
push
xchg
dec
fmuls
loopne
out
xchg
cmc
loop
mov
cld
add
add
xor
jp
mov
or
nop
mov
popa
mov
rcrb
mov
pop
dec
mov
jns
pop
pop
push
add
in
cld
add
xchg
xchg
cmc
jecxz
jne
and
add
xor
aam
adc
fidivl
mov
into
inc
or
ds
aad
pusha
in
fxch
mov
cmp
shrb
and
jo
dec
mov
pop
js
jne
mov
inc
and
stos
dec
push
lea
cwtl
add
xchg
add
sbb
fisubs
xchg
gs
lret
lahf
and
add
bound
sub
pop
enter
jbe
add
fidivrl
cmp
add
cmp
add
add
ds
cwtl
jne
into
movsb
pop
into
add
sbb
xor
jne
sahf
jge
sbb
popa
mov
fisubl
daa
inc
xor
push
sbb
add
push
jmp
loope
jo
loop
sbb
sahf
out
fnsave
xchg
rcll
movb
xor
add
add
arpl
xchg
adc
add
xor
adc
cmp
fnstenv
lock
xchg
mov
pop
aad
sbb
addr16
lret
inc
outsb
out
push
dec
push
jns
inc
and
add
add
add
ret
add
add
sub
sub
xchg
push
inc
stc
xchg
imul
mov
mov
adc
test
jmp
cmpsb
notl
jno
jmp
outsb
add
add
daa
cltd
sub
rcl
in
inc
in
sbb
cmc
loope
rcll
outsb
add
add
and
or
str
add
addl
iret
cmp
dec
adc
add
cmp
push
dec
inc
stos
or
push
mov
ss
cs
inc
xor
or
and
adc
dec
into
and
xor
jbe
adc
mov
rcll
aad
mov
in
mov
dec
jle
lods
pop
push
cmpsl
rorl
cmpsb
mov
les
pop
add
fs
mov
testb
jae
call
xchg
sbbb
scas
cs
mov
xor
clc
lods
sbb
xchg
cltd
fldenv
push
imul
out
pop
jmp
sub
mov
aaa
cli
push
cmc
lret
je
lcall
sub
xchg
ret
push
es
jmp
loop
or
in
push
outsl
dec
iret
rclb
fwait
lret
xor
jl
scas
push
popf
dec
add
andl
addr16
in
popa
push
add
add
add
adc
xchg
fmull
ljmp
mov
mov
pop
aad
and
add
test
xchg
jae
fidivl
lods
push
jnp
inc
shll
clc
in
add
inc
in
push
cmp
and
mov
xor
fmul
subb
xchg
add
imul
jge
insl
aaa
pop
icebp
xor
fidivrl
sar
shll
stos
in
nop
stos
push
push
cmp
mov
ja
cwtl
lds
nop
inc
lcall
out
add
jecxz
xchg
and
bound
push
pop
loopne
loope
daa
mov
mov
add
adc
loope
ret
aad
and
cltd
xchg
cld
and
cmp
loopne
mov
insl
dec
jg
add
mov
push
and
jne
adc
and
dec
mov
add
add
outsb
test
lock
aaa
imul
cmp
or
orb
popf
ret
stos
add
sti
cmpsl
sbb
jae
neg
add
cmpsl
xor
xchg
dec
mov
adc
add
or
sbb
mov
pop
or
add
add
sbb
jp
mov
pop
xchg
pop
mov
add
add
ret
or
cmp
cld
mov
cmp
fwait
movsb
shll
and
add
lea
xchg
imul
mov
sbbl
fwait
dec
sbb
adc
jnp
jae
dec
lret
jmp
add
das
out
lock
mov
jp
dec
cmovl
lcall
pop
int
lret
mov
das
cmp
jecxz
ret
in
and
sub
into
inc
loopne
fdivrl
roll
pop
aam
pop
loop
mov
add
jge
sahf
mov
ja
rolb
jbe
stos
mov
call
or
cmpsb
iret
push
add
add
lds
pop
movsl
xchg
aad
mov
mov
mov
rcll
rcl
jle
sbb
and
add
loopne
arpl
loop
add
mov
xchg
rorl
lret
push
inc
lret
mov
int3
xor
add
out
dec
xchg
add
loop
mov
addl
pop
stos
adc
fnsave
sub
mov
nop
test
scas
cmpb
mov
mov
pop
sub
popf
adcb
jbe
and
and
push
iret
jno
outsl
xchg
xchg
add
fimuls
les
imul
mov
push
shll
subb
add
sub
jns
cmp
das
xchg
pop
xchg
sahf
jae
dec
mov
inc
shlb
popf
daa
sbb
add
dec
stos
xchg
mov
xor
jnp
jne
jns
stc
mov
in
dec
push
in
lock
out
and
push
pop
inc
or
add
push
arpl
popa
scas
push
push
iret
in
push
dec
js
push
dec
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
lcall
cmp
sbb
cmp
test
lahf
push
cmp
repz
cmp
sarb
mov
sbb
or
sbb
scas
ljmp
out
adc
mov
ret
adc
inc
cli
mov
mov
ljmp
inc
insb
stos
lds
or
jg
xor
sahf
pop
mov
stos
test
xchg
and
js
lock
nop
cmp
and
mov
xchg
cmp
adc
add
xor
pop
pop
repnz
in
and
sub
push
and
das
dec
out
shlb
fistps
lret
add
push
into
or
or
shll
inc
out
add
or
and
pop
jno
std
hlt
xchg
sbb
pop
add
add
cmp
insl
add
mov
test
and
xlat
inc
in
movsl
add
add
push
cmpsl
dec
xchg
in
xchg
pop
testl
sbb
dec
add
add
jns
sbb
das
out
jbe
aad
pop
out
pop
imul
jno
in
out
enter
dec
xor
out
jbe
add
sahf
faddl
push
leave
xor
sti
fisubrs
insb
xlat
add
jnp
fisttps
pop
add
add
or
pop
or
xchg
shl
int3
sub
xchg
lods
sahf
push
ds
inc
insb
out
xchg
aam
loopne
push
mov
mov
paddq
stos
inc
mov
daa
cmp
repnz
les
cli
adc
jg
bound
cmp
daa
add
dec
mov
add
data16
add
pop
and
add
mov
mov
or
xchg
add
mov
add
fxsave
jbe
push
add
aaa
add
cmpsb
stc
add
and
add
sub
add
push
rolb
dec
ret
jnp
jecxz
bound
add
loope
add
ja
add
add
std
inc
add
cmp
add
pop
dec
add
in
sub
xchg
xchg
add
mov
add
pop
dec
add
sub
add
iret
jmp
add
xchg
add
aad
add
and
add
sub
add
and
add
cmp
push
mov
or
dec
add
push
pop
add
shrb
or
and
add
std
mov
or
add
mov
int3
dec
xchg
imulb
sbb
add
add
add
add
add
add
popf
cld
push
mov
sbb
insb
cmp
add
xor
add
int3
outsl
mov
pop
cmp
cmpsl
enter
adc
add
sbb
jle
sub
mov
add
add
adc
out
fcoml
outsb
add
fwait
xlat
loopne
pop
add
add
add
sub
xchg
sbb
mov
or
scas
sti
lahf
out
std
in
inc
in
stos
and
lret
out
jo
cmc
inc
and
push
shll
neg
dec
mov
nop
popf
pop
inc
pop
mov
rclb
pop
sub
cmp
cmpsl
lret
daa
and
loopne
in
inc
inc
rol
aaa
dec
gs
cmc
loopne
subb
ljmp
dec
std
inc
fwait
jno
xchg
nop
stc
insb
lret
leave
popf
sbb
mov
stos
mov
ret
sbb
inc
dec
add
add
add
leave
js
leave
insb
push
mov
cmp
pop
pop
mov
out
jb
je
cld
imul
cmp
popf
sbb
jns
inc
cmpsl
pop
icebp
and
inc
out
cmp
cmc
shll
sub
inc
sti
cmp
mov
cmp
hlt
jno
daa
add
pop
xor
out
fnstenv
pop
xor
test
mov
movsb
inc
imul
jns
inc
gs
xchg
dec
adc
cmpsl
mov
or
int
fwait
sahf
cmpsl
popf
or
mov
push
mov
dec
daa
stos
or
cmp
shll
into
lret
or
in
mov
adc
mov
pop
mov
lock
and
int
xchg
fcmovu
lods
dec
cmpsb
out
fisubs
pop
das
xchg
add
loop
negb
xor
push
lahf
xor
lret
pop
sbb
and
stc
ljmp
sbb
mov
je
hlt
sub
mov
add
add
add
stc
xchg
sahf
aaa
mov
lea
ret
sbb
push
pop
icebp
inc
stos
and
jle
mov
dec
sbb
sub
pop
aas
dec
sar
cmc
sbb
rcrb
adc
aas
rolb
mov
mov
xor
lods
pop
ja
cld
movsl
and
dec
out
jle
mov
add
lret
adc
xchg
cmpsl
mov
push
into
fwait
mov
mov
mov
sbb
dec
and
icebp
mov
pushf
outsb
jp
iret
cli
sub
xlat
mov
out
rcl
fiaddl
add
add
fcmovb
jnp
lahf
or
or
adcl
xchg
in
fimuls
lods
add
mov
cmpsl
in
pop
jne
mov
imul
dec
add
add
leave
js
enter
fbstp
adc
fisubs
sbb
scas
jecxz
xchg
cli
lods
daa
icebp
pop
cmpsl
lods
cwtl
push
daa
test
into
cmp
lcall
add
add
fs
imul
and
outsl
cmp
sub
fsts
insb
ret
cmp
add
add
adc
dec
cltd
xchg
out
xor
scas
aam
cmpsl
nop
insb
roll
push
sti
jae
xor
in
movsb
pop
sub
loope
cmp
push
loope
jp
cmp
add
add
adc
mov
sarl
mov
mov
dec
mov
cmpsl
rolb
or
ret
inc
sub
and
mov
add
add
pop
jle
lcall
loopne
push
xor
lock
lcall
lret
add
jle
fcoml
movsb
imul
and
mov
popf
sbb
mov
stos
loop
and
mov
out
or
dec
add
inc
dec
add
add
leave
js
lret
imul
fisubs
sbb
scas
jecxz
xchg
cli
lods
daa
icebp
pop
cmpsl
lods
cwtl
outsl
jmp
test
outsb
mov
into
xor
scas
add
out
repz
sbb
push
dec
jmp
mov
and
mov
and
mov
aas
add
clc
insl
xchg
daa
or
popf
fnsave
iret
fidivrs
aam
sub
scas
je
addr16
neg
mov
mov
out
mov
mov
inc
add
shr
popf
jg
inc
mov
mov
cmpsl
xchg
push
mov
dec
es
fs
jle
call
out
std
xchg
jl
mov
jg
and
mov
movsb
lcall
loopne
pop
lea
mov
loopne
int
xchg
lahf
shrb
lods
clc
scas
ret
mov
and
mov
lods
mov
dec
push
lahf
jg
rolb
xor
mov
add
fdivl
in
fidivs
clc
aas
shrl
push
aad
mov
sahf
sar
lcall
mov
mov
add
aad
movsb
cmp
push
xor
fcompl
fldenv
lock
and
cmp
mov
fcomps
add
push
out
add
roll
dec
mov
imul
mov
mov
loopne
xor
ret
adc
and
sub
shl
mov
push
testl
add
lods
add
in
add
add
add
add
add
adc
add
add
add
icebp
jge
add
add
add
pop
add
and
add
add
add
pop
add
add
add
testl
add
add
add
flds
add
add
add
add
add
add
add
add
add
or
add
add
add
test
add
rol
lcall
sub
bound
add
insb
add
add
add
add
add
add
add
add
add
add
dec
jl
dec
std
adc
inc
clc
xchg
cmpsb
in
fiaddl
scas
test
test
mov
sti
mov
mov
das
jae
sub
das
clc
add
add
or
comiss
xchg
jae
sbb
sub
ljmp
add
sti
and
fdivrl
mov
or
scas
notl
fwait
jl
inc
cmp
push
mov
add
xor
mov
mov
push
dec
and
aam
in
add
les
adc
faddl
dec
lods
or
fistl
add
add
add
mov
test
sbb
dec
aad
popf
in
xchg
cmp
fstpl
aas
mov
pusha
daa
fisttps
pop
cltd
xchg
stos
shll
out
sbb
lcall
or
fimuls
cld
in
cmp
push
or
xor
or
cli
into
mov
sbb
in
div
loop
sarl
lock
insl
lods
inc
inc
pushf
push
loope
pushf
stos
je
pushf
cltd
in
gs
xchg
xchg
add
fiaddl
pushf
add
add
jmp
out
add
add
add
add
add
add
add
add
add
pusha
add
add
add
jge
testl
push
jns
mov
add
add
outsl
add
add
add
add
add
mov
add
lahf
add
mov
pop
add
add
add
cmp
rolb
dec
add
add
add
add
add
mov
xor
iret
add
xchg
add
add
fiaddl
add
add
add
inc
add
add
push
add
add
loope
mov
cwtl
add
inc
add
add
mov
add
js
jp
push
add
add
add
add
add
add
add
add
add
add
add
add
repz
add
add
add
add
add
add
add
mov
popl
and
push
add
add
add
add
add
add
add
add
add
test
push
add
mov
add
cmp
loope
and
imul
bound
lds
roll
sub
mov
faddp
or
inc
dec
xchg
stos
popf
repnz
adc
adc
mov
xchg
or
mov
xchg
add
add
add
add
adc
rolb
cmp
cmp
cld
add
add
addr16
adcb
call
frstor
lret
xorb
pop
imul
push
dec
inc
lcall
lock
js
mov
add
add
pop
add
add
add
add
icebp
add
call
add
add
add
add
add
lcall
add
add
add
add
add
add
add
xchg
adc
pop
add
add
add
add
add
add
add
lds
stos
add
add
and
or
pop
add
mov
mov
jns
and
dec
addr16
push
js
mov
mov
adc
inc
iret
mov
adcb
xchg
movl
pop
xorb
add
stc
and
mov
cs
stos
and
repz
jae
ret
mov
dec
mov
inc
or
inc
dec
xchg
stos
sahf
repnz
adc
sub
adc
int
mov
add
leave
sbb
addb
scas
sbb
arpl
sbb
pop
mov
inc
mov
push
aaa
outsl
and
outsl
ret
mov
mov
lock
ret
jmp
dec
scas
rcl
std
dec
pop
mov
or
xor
mov
testl
cltd
aaa
jnp
cmp
bound
pop
xor
or
xor
push
frstor
cmpl
xor
xor
mov
and
add
sbb
pop
sub
je
std
lods
test
pusha
fidivrl
aas
addb
dec
xor
outsl
in
in
fisubrl
cmpsb
bnd
cwtl
sbb
jnp
mov
loop
jns
inc
mov
mov
mov
aad
ljmp
outsb
xlat
lods
fdivl
and
std
shl
and
pushl
pop
xor
vpaddsw
mov
mov
lret
sbb
test
movsb
lods
sbb
gs
lea
jg
in
es
mov
imul
insl
lds
repnz
les
push
dec
lods
aam
pushl
and
xor
add
adc
aaa
dec
lahf
xor
xor
jae
cmovb
ja
xor
pop
fbld
sub
fisubrl
xor
inc
and
xor
xchg
repz
fdiv
sub
int
pop
cmp
mov
jge
scas
out
outsl
and
cmp
lcall
pop
cltd
cmp
stos
cmp
cli
sarl
mov
jnp
cmp
or
sbb
call
mov
lods
aad
xor
movsb
insb
cmc
xchg
imul
pop
mov
jno
mov
mov
mov
fisttps
outsl
jg
pop
and
sarl
xchg
or
es
loopne
popf
imul
cmc
orb
lock
sarl
out
mov
movsb
pop
sub
inc
das
or
adc
jns
ret
gs
inc
sub
add
ret
cmpl
insb
cltd
jmp
mov
sbb
notb
sub
seto
in
inc
lds
sub
es
push
sbb
lahf
adc
pusha
xor
cwtl
lret
mov
xchg
fdiv
neg
mov
jl
jno
or
enter
outsb
adc
mov
and
and
mov
and
adc
testb
dec
aaa
aam
loopne
ljmpw
mov
scas
add
stos
nop/reserved
outsl
hlt
test
jmp
scas
mov
mov
mov
mov
fimuls
push
cwtl
addb
add
add
dec
dec
rolb
sub
int3
mov
nop
nop
add
mov
mov
add
add
lahf
test
add
addl
push
out
mov
call
add
jo
push
dec
sub
add
adc
add
sbb
and
add
add
out
add
test
mov
add
add
add
add
add
add
mov
iret
je
shr
add
add
mov
rorb
cmc
add
lods
add
in
add
cmp
adc
iret
mov
sub
add
leave
add
ds
mov
add
pop
sbb
sbb
add
jle
cmp
add
aam
cmp
add
lds
inc
cmp
add
add
mov
sub
add
add
mov
mov
inc
loope
add
inc
hlt
pop
and
add
jae
movl
dec
test
inc
add
or
sub
addb
jno
add
pop
daa
sub
fdivl
adc
loope
out
lcall
in
out
sub
jb
rcr
aad
mov
cltd
lahf
add
incb
dec
jg
push
faddl
mov
add
add
add
push
add
add
test
int3
pop
std
add
add
add
iret
add
test
addb
add
add
jne
add
add
cmp
xchg
add
add
loope
xchg
fst
fiaddl
rclb
add
pop
sub
fsubs
add
mov
add
or
add
add
mov
add
add
add
sbb
add
add
sbb
add
add
adc
inc
scas
inc
xchg
in
add
add
pop
imul
add
add
mov
loop
add
add
lret
xor
add
lcall
add
add
jo
add
mov
inc
add
add
add
add
add
add
loopne
loope,pn
test
add
add
loopne
add
add
daa
mov
inc
add
add
pop
inc
insl
xchg
inc
addl
add
add
dec
loopne
fildl
add
add
add
add
mov
add
jo
rolb
add
add
aam
add
add
inc
push
mov
push
push
fistpll
add
add
rolb
add
add
mov
add
clc
mov
add
add
loope
inc
xchg
jmp
add
add
add
add
add
add
add
cmp
xchg
add
add
insl
or
add
add
jne
and
dec
aaa
inc
add
add
stos
mov
mov
pop
push
in
add
add
add
mov
add
add
add
jl
add
add
pop
xchg
xchg
add
add
add
mov
add
add
aas
add
add
rcl
adc
add
add
pop
xor
add
add
add
std
imul
add
add
loope
add
add
pop
push
addl
mov
add
add
xor
add
add
xor
add
leave
jne
add
add
mov
add
add
add
add
mov
add
add
mov
add
add
mov
add
add
call
add
add
add
xorl
add
push
fstp
add
add
add
mov
add
sbb
inc
in
add
add
data16
add
add
add
stos
add
add
add
add
add
jns
add
add
pop
imul
add
add
add
add
dec
lret
add
add
add
add
mov
add
outsb
or
pop
pop
fadds
negl
inc
add
lahf
fwait
add
pop
roll
xchg
jnp
into
mulb
add
dec
mov
add
push
and
add
inc
add
es
add
push
add
xor
add
daa
push
add
es
add
fdivl
add
sub
add
repz
rcl
add
jns
sub
fiadds
andl
add
mov
inc
add
adc
inc
sbb
add
jbe
add
inc
lock
xor
add
inc
add
jmp
add
dec
xchg
add
adc
sti
add
fwait
add
sub
add
fldl
xor
movl
push
push
jp
push
or
mulb
adc
cmp
push
test
xchg
xchg
and
test
mov
and
jge
fstp
jmp
xchg
int3
and
sbb
xor
negb
or
aaa
push
push
dec
in
dec
mov
and
addr16
and
add
cwtl
or
movsb
dec
es
out
jp
cmp
lods
sar
add
scas
ret
ret
add
scas
jo
cs
idivb
cmpsl
cs
ret
inc
add
je
push
in
or
push
sbb
clc
out
xchg
jnp
dec
mov
movsb
repz
iret
gs
mov
leave
push
lds
stc
sub
add
adc
cmp
cmp
ret
lret
jmp
pop
push
fs
fcmovnb
xrelease
mov
inc
inc
mov
xor
adcl
sbbb
pushl
cmpb
mov
or
jno
push
cmp
jmp
add
aas
pop
fsubrl
test
mov
sub
dec
lahf
add
aaa
mov
test
sub
lret
add
xchg
push
mov
lret
inc
stos
add
add
data16
mov
scas
cmp
js
mov
pop
jne
add
insl
idivb
out
push
sbb
dec
xchg
cmp
icebp
add
dec
push
sub
les
dec
sub
add
adc
mov
std
xchg
in
push
iret
bound
lock
int3
dec
in
pop
out
push
aaa
fs
inc
sbb
add
push
test
fistl
andb
js
xchg
xchg
mov
or
inc
cmp
insl
rolb
inc
add
andl
and
jae
xlat
icebp
in
mov
cwtl
fisttps
pusha
mov
add
jnp
jno
adc
stos
arpl
mov
push
jmp
sbb
stos
add
into
int3
cltd
loop
icebp
dec
push
out
scas
loop
add
push
or
das
out
and
mov
ret
and
incl
add
cmc
mov
mov
and
lret
aas
fiadds
push
int
enter
shl
pushl
mov
das
ljmp
push
inc
std
add
lds
jp
mov
stos
or
sub
fsubrl
das
aad
jno
add
mov
out
pop
lea
adc
mov
sub
sbb
popf
sbb
inc
das
push
mov
xor
cltd
loop
mov
xchg
shlb
repnz
outsb
fwait
inc
pop
rolb
subl
dec
mov
or
lds
pop
inc
xchg
xor
stos
int3
xor
sub
cmp
jg
popa
sub
inc
div
lods
shlb
out
mov
mov
rclb
stos
imul
mov
jnp
popf
adcb
std
mov
cwtl
mov
mov
mov
push
push
or
fsubrl
add
add
add
add
mull
mov
add
out
sub
lret
into
add
mov
add
or
add
add
mov
xchg
je
add
mov
pop
dec
daa
xor
push
incb
ljmp
cmp
add
jne
mov
fcomi
adc
xor
add
in
adc
stos
inc
jb
lods
mov
fwait
nop
sbbb
cld
test
fmul
je
pop
jg
push
push
imul
mov
mov
test
add
mov
cmpsl
stos
ret
push
cmp
add
dec
sarl
int3
enter
cli
add
in
lret
push
arpl
and
into
add
add
xchg
add
or
xchg
add
add
xchg
addl
xor
data16
jge
add
add
add
jno
add
sub
add
jmp
add
or
add
push
pop
mov
mov
add
mov
add
add
add
add
std
pop
add
add
add
add
add
fnsave
add
add
add
into
incb
rolb
add
ss
add
push
add
add
pop
lret
add
add
add
add
inc
jge
mov
add
mov
pop
add
add
add
fisubl
add
jnp
add
add
add
add
add
jns
and
add
pop
insl
popf
sub
dec
lret
add
add
add
add
add
add
add
add
add
fiaddl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
add
add
add
add
add
add
add
add
add
add
add
add
jno
add
pop
add
add
add
add
add
add
add
add
add
add
add
imul
add
add
add
add
add
add
inc
add
add
add
rolb
add
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
mov
add
add
add
push
add
add
add
xchg
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
mov
add
in
add
fiaddl
add
xor
add
mov
add
add
add
add
add
add
add
add
add
add
add
aas
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
movsl
add
add
add
add
add
roll
add
push
add
outsb
add
add
jle
add
add
add
add
add
add
pop
stos
in
add
fsubrs
vpshufb
dec
add
mov
or
sbb
fldl
jle
push
add
iret
iret
add
inc
add
add
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
add
add
add
xor
xchg
mov
lcall
loopne
or
pop
mov
enter
arpl
xchg
push
xchg
shlb
mov
inc
jns
cmpsb
add
add
add
icebp
iret
test
add
rolb
cmp
adc
cmp
pop
scas
mov
add
add
mov
sub
iret
test
cmc
mov
mov
inc
filds
add
add
add
mov
mov
idivl
mov
imul
or
xor
mov
sub
shll
es
add
add
add
mov
aad
sbb
cmp
aas
mov
pop
pushf
xchg
add
rolb
iret
das
rdmsr
xchg
add
cmpsb
ret
add
add
add
add
popl
add
add
add
add
add
add
add
xor
add
add
std
add
fbld
je
add
add
add
mov
add
add
add
or
add
fimull
inc
push
add
add
add
add
add
xchg
add
add
add
sub
add
add
push
and
push
add
mov
add
add
add
aad
or
pop
push
add
cld
jl
sahf
or
push
add
adc
sub
add
add
add
inc
add
add
add
add
add
add
add
add
fildll
add
mov
add
in
pop
xlat
add
push
test
call
add
add
push
sahf
add
push
popl
ljmp
add
mov
int3
add
add
add
jl
mov
push
lret
loop
icebp
add
add
test
add
add
add
cmp
add
jge
add
inc
fadds
dec
inc
out
add
in
stos
add
add
scas
add
add
xchg
add
adc
enter
ljmp
xchg
or
clc
mov
cwtl
add
xchg
pop
add
out
add
jno
add
fstpt
add
test
add
mov
clc
add
cmc
cmp
test
loopne
xchg
add
loopne
jl
sub
mov
add
insb
push
and
aam
out
jmp
add
rolb
in
add
xorb
xchg
add
add
add
fisubs
add
adc
cs
add
mov
mov
add
movsb
lock
add
add
mov
aaa
jmp
jecxz
xor
xor
add
add
imul
add
add
add
mov
lea
add
add
mov
add
das
and
add
add
mov
add
add
inc
xchg
add
add
and
imul
add
add
add
sbb
imul
add
add
inc
push
push
and
add
xchg
add
test
add
pop
add
add
add
add
dec
add
add
add
fsts
add
jns
add
insb
mov
add
dec
jb
ja
add
and
add
add
add
mov
add
cld
add
add
add
add
add
aad
add
adc
add
add
aad
loope
add
pusha
mov
lret
mov
add
add
aaa
push
pop
sahf
cmp
mov
iret
andl
mov
xchg
cltd
xor
test
stc
sbb
je
stos
popf
js
shrl
add
push
add
dec
pop
adc
pusha
rclb
lea
test
cmc
adc
sahf
popa
scas
pop
roll
dec
jnp
int
pop
gs
mov
cmpsb
fmuls
push
in
ljmp
dec
xor
add
xor
add
xchg
shlb
lcall
push
jb
fwait
stos
dec
mov
loop
cld
pop
or
add
icebp
push
psubusb
jecxz
inc
not
push
fucomi
jg
pop
push
sbb
cmp
xchg
inc
dec
ficompl
repnz
jb
or
out
add
jg
push
add
cs
cmp
outsl
cmp
outsl
aaa
jns
std
ja
dec
add
and
jge
push
push
scas
jecxz
imul
rclb
out
pusha
repnz
stc
lahf
xor
mov
enter
inc
mov
nop
cwtl
xor
scas
pop
jmp
sub
inc
or
push
sbb
popa
dec
push
push
jmp
mov
sbb
xor
sti
js
daa
or
test
cld
pop
and
mov
pop
mov
daa
adc
dec
or
lods
pop
pop
dec
int3
and
test
mov
in
sub
mov
xchg
jne
int
sarl
fistpll
sbb
add
sti
mov
jae
call
pop
xor
out
fsubr
jl
inc
push
push
jno
add
inc
dec
fstpl
jno
or
in
or
jl
push
add
xchg
or
xlat
aas
cmp
outsb
xor
lret
cld
je
add
cmp
dec
nop
inc
jl
push
dec
scas
loopne
outsb
jl
push
out
clc
imul
in
popa
cmc
sbb
clc
nop
xor
mov
leave
andl
xchg
fwait
xor
scas
pop
call
sub
jbe
shrl
push
sbb
xchg
lea
bound
pop
ljmp
add
push
cmpsl
das
or
xchg
cmp
mov
lods
inc
in
dec
or
dec
pop
rcll
xchg
or
mov
sub
sbb
out
scas
push
fcomps
adc
push
mov
mov
xchg
or
and
insb
ret
jbe
int
jmp
mov
add
repz
cmp
stc
mov
cltd
cli
mov
cmp
add
cmpsb
outsb
jg
daa
aam
push
pushf
outsl
sbb
and
adcl
loope
jecxz
testb
fcmovnb
mov
faddl
nop
lods
xchg
fdivs
sbb
add
jne
mov
fwait
jb
roll
mov
bnd
jl
popf
mov
lods
out
sarl
negl
mov
cld
push
leave
mov
cmp
ss
mov
scas
and
jl
mov
imul
les
xor
stos
sub
push
das
pop
and
pushf
jg
jecxz
insl
xor
repz
dec
sub
mov
cld
inc
mov
insl
sbb
xor
popa
in
push
mov
cld
mov
dec
xchg
rolb
aas
inc
cmpsl
jbe
push
sahf
xor
add
mov
jg
cltd
pop
xchg
adc
lea
sub
repz
jns
mov
pop
inc
js
and
and
add
cmp
xlat
adc
insl
popf
add
jmp
out
push
mov
in
divl
mov
fiadds
shrb
dec
push
outsb
addr16
pop
fnsave
xchg
fldenv
dec
pop
test
xlat
inc
dec
icebp
mov
int3
mov
mov
add
icebp
add
mov
xor
cmp
mov
lods
add
mov
xor
inc
repz
sub
stos
and
cltd
push
leave
outsb
shl
push
cmc
pop
not
xor
push
outsb
lcall
adc
mov
add
lea
jmp
dec
xchg
jecxz
pop
cmp
dec
push
js
divb
jle
xlat
loope
fwait
pop
adc
adc
out
sbb
lods
ror
jae
add
jp
pop
je
dec
mov
or
cmp
adc
add
jmp
pop
adc
call
adc
adc
fimull
cltd
sub
xchg
inc
dec
sub
jle
outsl
push
jb
mov
aaa
dec
jp
jne
testb
nop
neg
mov
lcall
arpl
movsb
cmp
push
cmp
call
dec
mov
das
mov
push
lods
or
pusha
adc
inc
stos
and
je
movsb
shrb
xor
inc
loope
fsubl
sub
in
xor
dec
sub
mov
clc
inc
mov
insl
and
xor
insl
ljmp
xor
ret
add
xchg
push
adc
sub
adc
push
sub
arpl
fwait
pop
mov
xchg
aad
adc
xchg
xchg
dec
je
adc
mov
pop
inc
fs
ds
sub
mov
imul
es
popf
in
fldl
loop
xchg
adc
ljmp
fcom
mov
nop
sub
pushf
lret
scas
lods
fmull
push
dec
add
pop
sarl
pop
and
pop
cltd
jbe
xlat
inc
inc
cli
mov
ret
lock
jle
loope
pop
lods
rorl
scas
jmp
sbb
mov
cmp
pop
push
push
sub
rep
xchg
push
inc
jae
stos
es
lods
xchg
inc
insb
xor
fildll
xor
and
ja
les
ss
call
mov
mov
cwtl
out
insb
sub
and
push
cs
dec
insl
push
adcb
repz
cltd
into
mov
cmp
add
push
sub
adc
scas
mov
loop
sbb
adc
out
adc
mov
test
dec
jle
sub
dec
outsb
out
inc
mov
fcompl
jno
push
sub
dec
adc
mov
dec
jl
push
int3
in
and
test
out
mov
dec
rcr
fmuls
rorl
adc
jge
das
loop
cmp
inc
or
xchg
arpl
outsl
in
rolb
pop
sbb
inc
je
hlt
aam
xchg
jp
xchg
jno
scas
mov
stos
pusha
push
mov
repnz
fbstp
mov
lods
xor
and
jmp
and
aas
cmpsb
leave
lods
adc
lret
inc
out
xor
scas
addr16
stc
cld
sub
ja
in
cmp
aaa
sbb
sub
pop
daa
mov
mov
cmpsb
out
insl
sub
xor
mov
cmp
pop
scas
push
push
xor
mov
sbbb
cmpsl
inc
out
adc
mov
scas
std
mov
sub
lods
lcall
xlat
popa
push
data16
stos
ja
jns
test
test
test
addr16
push
sub
inc
push
or
sub
push
popa
loopne
lret
in
adc
test
adc
adcb
sub
push
xchg
nop
loopne
aaa
adc
or
ja
inc
shrl
mov
and
fwait
mov
divb
push
xchg
jnp
aad
push
mov
sbb
and
inc
cwtl
repz
pop
fnsave
add
push
mov
add
push
js
mov
inc
xor
lea
or
mov
adc
xlat
lods
jmp
fs
or
jns
xchg
add
xorps
mov
cmp
mov
xchg
jecxz
push
inc
stos
cmp
mov
sbb
xor
ljmp
jle
pop
fldl
cmp
xor
lahf
movb
push
push
cmp
lahf
add
xchg
xchg
lods
jno
dec
sbb
flds
and
inc
pop
and
sbb
sub
or
add
ret
call
outsl
add
xchg
dec
ljmp
rcl
xchg
ss
bound
stos
out
inc
xor
pop
stos
jg
leave
stos
push
jae
mov
mov
or
ja
xchg
notb
jns
sti
sbb
xor
dec
xchg
out
mov
mov
repz
xchg
jg
push
cmpsl
paddw
mov
inc
jmp
imul
inc
inc
xor
enter
and
icebp
fisubrl
fdivp
sub
pop
ljmp
sub
cmc
jp
and
pushw
pop
sub
pusha
subl
loopne
aaa
stc
pushf
inc
lahf
mov
mov
add
push
in
sub
jb
subb
je
addr16
ss
jl
mov
pop
mov
stos
fdivl
dec
jne
pop
and
inc
add
add
add
push
cmc
in
orl
stc
adc
test
ds
mov
mov
fwait
mov
jp
jnp
scas
js
ret
xchg
or
ljmp
int3
sbb
rorb
mov
dec
test
pop
mov
out
xchg
mov
hlt
icebp
mov
or
aaa
stc
jae
mov
lock
mov
mov
lret
lds
in
or
push
filds
icebp
fisubrs
lret
jle
or
pmulhw
mov
sub
std
jl
scas
xor
je
and
aaa
adc
mov
cld
scas
das
dec
cmc
sarb
mov
js
xlat
or
and
jg
cmc
lods
adc
aad
sbb
outsl
mov
push
cmpsb
cmp
in
push
das
popa
mov
mov
mov
mov
mov
fimuls
js
xor
rorl
cmc
dec
pushf
push
or
daa
loopne
insl
test
xor
addl
out
rolb
jns
jmp
sub
popf
xchg
jmp
push
jge
insb
dec
shlb
int3
jmp
ret
cmp
into
cmp
orl
dec
mov
adc
hlt
ds
icebp
stc
push
out
mov
iret
mov
or
push
push
imul
scas
pop
cld
mov
cmp
dec
imul
sub
xchg
aad
call
mov
repnz
xor
into
in
push
sub
adc
adc
mov
out
jg
loopne
and
scas
ds
xor
mov
ljmp
add
push
pop
jp
sti
mov
or
hlt
ficoml
aad
and
mov
dec
stc
dec
push
jp
scas
ljmp
mov
hlt
dec
nop
lahf
cli
sub
cmc
push
xchg
in
sti
addb
imul
ss
out
cmpsb
ljmp
sbb
xor
pop
or
sbb
adc
push
cmp
ja
stos
cmp
cmc
lret
xchg
addr16
mov
xchg
outsl
push
adc
ljmp
imul
adcl
loope
push
loopne
stos
inc
inc
in
mov
mov
sahf
loopne
sbb
ret
mov
bnd
xchg
ja
shll
and
in
lret
pusha
add
or
fwait
ret
scas
loope
mov
xor
sub
add
aam
lea
push
add
jmp
outsb
neg
push
sbb
loope
sbb
test
inc
imulb
shrb
mov
cwtl
inc
jo
je
cmpsl
out
push
arpl
pop
mov
int3
das
inc
jmp
and
call
rorb
shrl
in
outsl
cmc
cmp
xor
jmp
fcom
into
xchg
lret
adc
xchg
ret
in
sub
dec
add
push
decb
mov
and
xchg
push
mov
dec
rclb
leave
xchg
fwait
ja
mov
pop
pop
jecxz
mov
in
cwtl
test
clc
sbbb
inc
rcrl
add
sub
dec
sbb
jne
push
ret
dec
insb
aas
aas
cmp
popa
sub
ljmp
fucomp
add
cmp
shl
mov
mov
sub
jmp
and
rep
sub
gs
cmpsb
aad
rorb
pcmpeqb
sub
in
jns
add
imul
or
jl
gs
ret
fwait
or
movsl
test
mov
mov
dec
test
jb
push
clc
mov
mov
mov
cltd
or
pushf
cld
icebp
lods
or
test
arpl
mov
scas
sbb
stos
loop
test
lock
jns
bound
outsb
push
add
xor
lret
mov
mov
orl
psrad
ljmp
pop
insl
shlb
mov
dec
pop
ret
and
int3
scas
ret
inc
sahf
in
sbb
xor
push
cwtl
call
push
xchg
jne
stc
sub
sub
jmp
mov
mov
pop
cmpsl
mov
pop
xor
shl
test
daa
jp
pop
jns
cmp
aad
into
jae
dec
cs
adc
xlat
sbb
ljmp
mov
xor
push
scas
push
lahf
nop
dec
in
cmp
mov
mov
mov
es
xchg
mov
movsl
sti
add
mov
orb
cmp
stc
xor
stos
hlt
mov
sahf
fdivp
fbstp
lcall
movsl
rcll
sub
aas
es
daa
sbb
fmuls
and
sub
sub
cmp
int
sbb
adcl
mov
jbe
cmpsb
clc
mulb
xchg
int3
negl
mov
sbb
js
mov
mov
scas
into
aaa
testb
cmp
mov
xchg
jmp
adc
jp
mov
popa
add
jno
mov
xchg
fidivrs
enter
sub
sahf
pop
jno
xlat
sub
xchg
in
in
scas
jmp
lret
pop
out
jno
imul
push
cmp
sbb
pop
add
dec
mov
inc
sub
mov
push
jo
inc
add
inc
pop
scas
stos
or
imul
mov
es
pushf
out
int
repnz
movsb
int3
push
in
decl
pop
out
loopne
mov
adc
cltd
mov
inc
pop
jne
cmp
xor
pop
sub
daa
xchg
or
pushf
movb
test
sbb
dec
xchg
pop
mov
mov
loopne
cmpsb
enter
mov
loope
stc
sbb
add
dec
lods
loop
cs
shlb
cmp
push
push
mov
scas
adc
pop
dec
xchg
fucomi
loop
test
out
ret
and
in
fcmovne
or
sub
js
scas
lock
gs
dec
aaa
and
and
and
xchg
fdivrl
in
mov
lret
repnz
stc
cltd
jmp
xor
push
cmpsb
pop
leave
pop
mov
mov
movsb
insb
pop
xchg
sbb
jns
das
mov
and
xchg
jl
test
clc
pop
in
mov
jecxz
cwtl
dec
hlt
lcall
xchg
push
pop
loope
cmc
cmp
jmp
outsl
fdiv
cltd
mov
pop
and
or
jg
inc
xchg
hlt
cmp
out
xchg
mov
cmp
push
out
test
adcl
iret
sbb
aas
xor
xor
cmp
scas
jne
jmp
add
mov
cmp
push
jno
dec
cltd
call
fsubrs
push
mov
lock
fidivrl
fnstsw
repnz
push
pop
lods
mov
jae
mov
add
sub
push
and
subb
cmp
test
sub
orl
cli
or
aas
cmp
or
inc
cmpsb
pop
hlt
test
add
mov
xchg
outsb
out
push
jnp
rorb
or
mov
fstpt
movsl
sub
sbb
push
stos
jmp
mov
xor
ret
lock
add
mov
mov
pop
mov
add
popa
adc
or
xor
adc
jns
cli
sub
sbb
call
aas
adc
mov
pop
push
stos
jno
inc
xor
arpl
stos
les
mov
ror
cmp
xchg
in
icebp
mov
js
pop
sar
jle
das
in
frstor
sbb
cs
jno
mov
sbb
jecxz
push
sub
fimull
and
idiv
ret
mov
mov
cmp
repnz
js
stos
cmp
mov
and
xchg
jecxz
mov
clc
pop
and
push
in
movsl
out
sub
add
dec
push
cwtl
xchg
lods
and
inc
sti
mov
adc
scas
xor
shl
jb
int3
lret
xchg
lods
mov
hlt
repz
in
jbe
jmp
outsb
push
sub
cmp
test
adc
push
xor
jmp
les
rcrl
in
jg
into
mov
push
out
mov
out
nop
das
or
das
lds
movsb
inc
push
sub
sub
enter
cmp
mov
mov
ret
xor
into
js
lds
mov
sbb
cmp
xchg
mov
add
ficoml
push
push
shl
imul
jl
decb
fimuls
mov
ds
jge
dec
sbb
not
and
in
clc
push
scas
jae
jg
cld
imul
punpcklbw
xchg
fists
mov
xchg
mov
xor
movsl
imul
mov
mov
stos
sub
insb
sbb
bts
enter
sub
into
lret
mov
cmpsl
cwtl
out
mov
shl
mov
cmp
inc
jle
push
xor
paddd
daa
movsl
mov
sub
and
xchg
adc
cmpb
adc
repz
push
sahf
push
js
xor
in
jns
push
inc
push
and
pushf
mov
mov
jg
or
mov
stos
mov
ror
and
ss
mov
push
aaa
or
imul
lret
add
inc
jp
mov
adc
rorl
sbb
hlt
mov
or
loope
inc
lock
add
sarl
xor
mov
inc
sbb
pop
jp
sub
xor
orb
ds
aam
sbb
xor
insb
sti
call
mov
mov
mov
pop
mov
xor
flds
dec
dec
cmp
fsubrl
sbb
cld
pop
addr16
lods
push
push
pusha
lahf
mov
int
cmc
iret
adcl
mov
pop
lods
clc
jbe
out
xchg
sbb
mov
jecxz
mov
adc
mov
scas
xchg
rorl
xor
in
leave
mov
xor
es
xor
loopne
jne
adc
aam
xchg
repnz
cmp
outsl
dec
cmp
add
lret
pop
movsb
lret
cld
imul
and
mov
int
cmc
ss
xor
pushf
xor
pushf
xchg
add
sub
dec
stos
inc
mov
mov
xor
inc
cmp
mov
mov
mov
mov
cmp
jbe
push
dec
mov
rorb
mov
push
lret
add
out
lahf
xchg
push
bound
mov
sbb
std
sbb
mov
push
jbe
aad
pop
push
push
xchg
mov
cltd
je
adc
insb
lock
imul
dec
mov
cmpsl
mov
les
pop
lret
rcr
cmp
inc
mov
addb
mov
dec
daa
and
mov
mov
loopne
rcrb
cmpsl
mov
jge
cmp
arpl
pop
js
inc
adc
dec
cltd
rcll
cmc
sub
scas
pushw
sub
sbb
cmp
xor
ds
mov
sub
or
test
jle
je
dec
insl
mov
cmp
inc
outsb
push
fwait
hlt
inc
out
cmpsb
movsl
orl
shlb
std
mov
enter
sub
xor
pop
rol
mov
ljmp
or
xchg
aad
jge
mov
pop
xchg
popa
and
push
lret
fildl
mov
or
mov
adc
lahf
cmp
shrb
int
mov
sub
cmp
aam
push
sahf
adc
cmpsb
xchg
lret
in
aaa
mov
push
test
int
xchg
mov
aaa
dec
jmp
pop
mov
jmp
ror
ljmp
aad
imul
clc
ret
xor
add
sbb
into
icebp
push
loop
dec
dec
das
ja
pop
dec
sub
pop
mov
ljmp
cmc
movsb
push
push
mov
sbb
movd
xor
es
sbb
in
cwtl
xor
push
jl
mov
inc
cmpsb
mov
imul
adc
mov
cmpl
jmp
inc
pop
mov
cmp
push
mov
je
ss
int
push
aad
xchg
sbb
idivb
cmp
ljmp
into
mov
cmp
push
pop
and
mov
daa
notb
adc
popf
aam
test
in
nop
daa
mov
xchg
scas
fbstp
call
push
cli
lret
cmp
or
pushf
out
test
out
mov
pop
lret
test
mov
lds
mov
jno
sub
fcmovbe
call
aaa
loop
or
or
into
mov
popa
xchg
sarb
bswap
fisubs
pusha
inc
adc
hlt
jne
sub
cmpsl
jecxz
int
add
aam
inc
cltd
andb
sub
or
rorl
test
sub
jno
and
pop
add
push
add
cmp
push
pop
mov
lcall
lods
mov
cmc
test
inc
jecxz
sarl
dec
ret
fistpl
cmc
imull
mov
cmp
xchg
cld
cli
push
fidivl
sub
sbb
rorl
aas
mov
or
xor
mov
xchg
scas
sbb
cmpsb
jge
jno
shll
mov
sub
aam
shlb
sbb
xchg
int3
dec
inc
out
mov
clc
dec
rol
fiaddl
fcmovbe
xchg
mov
push
sarb
mov
xchg
xlat
in
loop
imul
pop
insb
cmp
cmp
sbb
or
loopne
adc
jle
pusha
dec
sti
imul
jl
and
inc
xor
les
movsb
pop
cltd
push
add
push
sub
in
.byte
cmpl
