push
call
ret
ret
jmp
sub
in
sbb
pop
mov
bound
fiaddl
out
test
add
pop
test
es
fwait
jmp
sbb
jl
pop
push
lret
inc
gs
arpl
jo
add
mov
inc
das
cmp
cli
xchg
dec
sbb
push
ja
sarb
pop
subb
sbb
hlt
jae
and
add
pcmpeqw
lods
inc
lret
sbb
sarb
sbb
daa
stc
rcll
lea
mov
andb
or
adc
andb
leave
dec
lea
mov
and
push
cmp
mov
jo
push
xchg
mov
fwait
lret
test
dec
push
xchg
xor
stc
cmp
arpl
loop
arpl
sub
repz
cmp
cmp
test
push
xchg
pop
push
pop
cmpsl
inc
hlt
mov
jmp
fcoms
ss
push
dec
xor
mov
shrl
xchg
push
icebp
adc
popf
mov
mov
mov
xchg
dec
push
sbb
ret
adc
dec
scas
mov
test
xor
int
and
movsl
aad
inc
and
insl
out
pop
je
je
in
jno
dec
in
test
mov
jl
repz
xor
lock
add
mov
loop
xor
int3
push
xor
and
sub
repz
cmp
test
popa
into
nop
and
mov
fistpll
and
test
in
lea
pop
sub
adc
ja
je
int
mov
push
clc
dec
in
mov
push
pop
xchg
sbb
in
mov
fdivl
scas
jno
xchg
sub
nop
fidivs
push
push
fildl
loope
in
mov
fildl
rorb
scas
repz
add
lret
lods
popf
inc
in
xchg
ja
mov
pushf
testb
lret
push
testb
loop
sub
mov
out
js
pop
or
ret
inc
inc
mov
sbb
mov
pop
sbb
mov
mov
stos
xchg
std
xchg
xchg
jl
xor
jp
aaa
pop
and
loopne
xlat
repnz
aam
cmpsl
or
cli
push
clc
imul
hlt
xchg
js
int3
mul
xor
enter
push
cld
lods
mov
bound
out
mov
add
xor
nop
ja
add
push
out
pop
daa
shlb
pop
fsubl
push
stos
scas
inc
or
inc
into
ja
inc
pop
mov
mov
mov
and
push
scas
jne
inc
mov
insl
testb
pushf
mov
or
fs
jmp
daa
movsl
movsl
test
push
add
mov
cmp
inc
sarb
cmpsl
inc
push
push
sub
push
dec
dec
jne
or
mov
push
lret
arpl
sub
jle
pop
sbb
and
xchg
dec
and
jae
fucomi
js
aad
mov
adc
aaa
mov
add
shlb
inc
arpl
or
mov
push
cmp
and
test
fisubrs
sbb
bswap
lret
adc
stos
rcrl
mov
adc
arpl
lret
js
mov
sbb
mov
push
lcall
dec
cmp
outsl
xchg
pop
dec
sti
pop
inc
dec
xchg
and
rcll
push
push
sbb
test
xchg
lods
sbb
int
stos
decb
fldt
test
out
scas
dec
push
out
mov
pop
pop
rorl
and
aad
shrl
fnstenv
mov
jmp
mov
addl
into
push
jp
mov
or
ficoms
inc
stos
sbb
inc
mov
fisttpll
stos
sub
out
divl
cwtl
pop
cmp
push
pop
and
fmull
pop
xlat
scas
insl
movsl
and
mov
loopne
push
and
mov
loop
imul
sub
pop
mov
adc
dec
int
mov
mov
pop
out
push
cmp
cmp
mov
test
mov
or
push
insl
mov
xchg
test
pop
push
das
cli
pop
aas
hlt
cmp
cmp
adc
test
andb
sub
mov
and
stos
xor
loope
loopne
and
testb
int
fisubl
push
andb
and
xchg
cmp
mov
roll
popw
fadd
jbe
add
inc
dec
pushf
fsubp
test
adc
repz
jp
jb
cmp
mov
adcl
add
sub
cmc
ja
call
fmul
xchg
xor
xchg
movsl
movsl
movsb
sub
sahf
sbb
out
sbb
add
xlat
adc
testl
repz
inc
xchg
or
jne
add
inc
xor
adc
mov
or
pop
sahf
sub
add
mov
jecxz
push
cmp
adc
insl
aam
jp
pop
inc
adc
inc
add
and
outsl
sbb
mov
cmpsl
iret
icebp
cmp
mov
sub
mov
cli
add
stos
rcll
mov
sub
push
scas
or
adc
out
fistpl
pop
adc
lods
mov
jns
push
div
mov
pop
arpl
sub
clc
aam
add
pop
xor
and
or
jb
jmp
test
call
sti
jbe
es
filds
fidivl
subl
dec
dec
push
mov
scas
sub
out
hlt
cmp
int
xor
xor
sbb
pop
in
arpl
pop
cmp
pop
pushf
mov
pop
mov
xor
and
rclb
stos
sbb
jg
or
shll
shlb
dec
xchg
push
xor
adc
jb
inc
push
lcall
adc
and
mov
sbb
sub
shlb
std
bound
cmp
push
mov
std
pop
xchg
nop
pop
outsl
fdivl
nop
popf
ds
fstpl
cmpsb
bound
mov
push
scas
pop
ja
mov
mov
pop
and
push
sti
das
sub
jp
push
inc
xor
push
sbb
mov
enter
cs
mov
dec
push
jmp
iret
mov
inc
clc
js
ficompl
or
pop
loop
sub
dec
pop
mov
sbb
add
into
addr16
cmp
and
loopne
sbb
cmpsb
repnz
mov
popa
scas
push
sbb
xchg
test
push
cmp
mov
je
jg
push
add
xchg
fstl
dec
xchg
pop
add
out
mov
ljmp
not
mov
fidivrl
jmp
divl
stos
mov
int3
dec
dec
inc
inc
jbe
mov
dec
cmp
mov
bound
ret
repnz
pop
sub
aaa
popf
push
fst
add
sub
sub
push
and
lea
mov
cmp
mov
sbb
push
cmp
cltd
pop
pop
cmpsl
sub
dec
pop
sbb
nop
sub
or
nop
cmp
dec
pop
rol
mov
jae
sbb
and
sub
fsubrp
cwtl
add
inc
rorb
add
sahf
fimull
popfw
dec
sbb
mov
jl
lret
lods
bound
movsb
pop
push
loop
jns
xchg
js
or
das
cmpsb
adc
xor
lcall
sbb
pop
hlt
and
mov
mov
imul
adc
push
arpl
add
mov
clc
mov
lahf
inc
mov
mov
mov
cmp
bound
sub
enter
add
outsl
adc
stos
add
add
cld
sbb
cmp
sbb
ja
jecxz
sbb
sub
rcrb
ret
cmp
push
lret
es
lea
in
lds
mov
ret
into
int3
mov
pop
cmpsb
fldenv
icebp
xor
stc
ret
and
pusha
int3
fdiv
jne
xchg
dec
test
mov
cmp
movsl
mov
adc
jmp
popl
add
jns
or
repz
insb
jecxz
data16
cli
xchg
mov
dec
push
mov
or
idivb
sub
cmp
add
je
pushf
mov
cmp
xor
dec
mov
xlat
jbe
jo
mov
aaa
outsl
jbe
daa
adc
out
ret
lret
ficomps
push
leave
sbb
icebp
mov
jbe
jne
cmp
pop
shll
pop
add
cmp
push
adc
fcoms
sbb
mov
xchg
xchg
push
in
shr
push
pop
in
popa
add
imul
pop
call
dec
mov
pop
out
in
sbb
add
imul
test
mov
sti
cmpsb
mov
mov
jle
jecxz
nop
adc
add
aad
daa
enter
inc
mov
push
stos
cmp
or
loopne
cld
dec
pop
mov
sub
inc
jbe
sti
inc
ss
test
mov
and
outsl
mov
sbb
sti
xchg
mov
mov
daa
ja
xchg
pop
lock
orb
xchg
mov
sub
test
or
mov
insl
es
add
mov
fs
jbe
shrb
adc
in
cli
das
je
push
sub
scas
fs
test
hlt
add
mov
mov
iret
fisttpll
fistpll
nop
in
dec
cmp
sti
cmp
cmp
pop
addr16
mov
and
out
lea
or
inc
pop
adc
cmpb
dec
subb
lahf
test
leave
pop
xor
lret
dec
dec
scas
repz
fwait
mov
xlat
cltd
out
or
out
ret
aas
in
out
push
loopne
mov
mov
push
stos
aaa
mov
mov
cs
inc
push
push
push
stos
dec
mov
cld
cli
push
xor
mov
or
cmp
push
inc
les
add
xchg
sbb
push
and
sbb
inc
iret
pusha
jge
sub
dec
push
outsl
imul
mov
push
lods
xchg
cmpb
inc
fucomp
roll
sbb
adc
xchg
xchg
jae
pusha
fldcw
jbe,pn
push
repnz
fsts
fsubrs
test
cmpsb
cmp
sub
bnd
push
push
sub
popf
std
addr16
fs
push
into
mov
mov
cmp
jne
mov
dec
lods
hlt
mov
test
data16
sbb
dec
addb
push
and
sahf
int
cli
dec
push
rorl
pop
mov
cmp
xchg
mov
dec
xchg
xchg
lods
jo
je
cmp
jns
dec
add
sarb
fldl
rolb
js
and
jp
dec
mov
movntps
movsl
sbb
jae
in
out
xchg
lods
sbb
cmp
dec
popa
jle
jecxz
imul
jb
push
sarb
mov
jle
sub
dec
stos
mov
rorb
loop
jg
and
popa
je
or
movsl
adc
adc
es
aam
inc
je
push
pop
js
aaa
adcb
notb
xorl
mov
xchg
sub
pop
jnp,pn
sar
push
into
fdivrl
sub
mov
mov
mov
mov
mov
rol
loop
push
inc
cmc
xor
cltd
cmp
cmp
ret
xor
pop
in
fmuls
cmp
lock
sub
pop
xchg
add
lret
dec
and
fwait
sub
jae
mov
dec
ja
push
sti
movsb
aas
or
pop
pop
and
jae
daa
test
sbb
loopne
sub
sub
jo
mov
jg
repz
lods
inc
sbb
push
mov
adc
stos
shrb
ljmp
popf
cli
loope
stos
add
test
add
or
gs
push
or
and
in
dec
fs
pop
mov
fidivs
add
insl
mov
scas
and
mov
fisttpll
das
mov
or
cli
mov
inc
addr16
xchg
jbe
popf
mov
xchg
sarb
je
push
xchg
ss
and
pop
mov
cltd
xchg
mov
lds
lcall
add
mov
fnsave
aas
inc
mov
sahf
inc
or
loope
insb
pop
jmp
add
pop
mov
stos
jae
fs
lret
test
xchg
xchg
sub
pop
out
notb
aas
rcll
jge
lcall
subl
xor
lea
shlb
test
add
les
cmp
ret
cmp
dec
mov
cmp
xchg
xchg
inc
das
ja
add
scas
fisttpll
mov
aam
mov
add
xor
dec
fwait
xor
shlb
jmp
rcrl
xor
dec
xchg
insl
or
jne
xor
cmp
mov
out
daa
cmp
sarl
in
mov
xchg
jne
int
xchg
gs
and
call
aam
cmp
pop
insb
xchg
push
and
sahf
sub
xor
ret
test
stc
pusha
in
aam
push
or
adc
jne
js
fidivrs
inc
dec
popf
mov
divl
mov
cmpsl
mov
pcmpgtd
aas
sbb
mov
insb
xor
ss
mov
cmp
sbb
mov
add
stos
fwait
push
ss
outsb
aaa
pop
das
inc
mov
out
repnz
pop
lret
or
lret
mov
ja
int
outsb
jecxz
adc
mov
sbb
in
jp
adc
and
adc
adc
dec
jecxz
repnz
mov
sub
mov
out
xchg
inc
jge
sub
or
andb
outsb
mov
inc
xchg
andl
sub
cmp
pop
xlat
divb
call
pop
jb
push
stos
push
push
fmull
notb
aaa
pop
bound
mov
xchg
pop
psadbw
adc
das
xchg
cs
cwtl
sar
rclb
aaa
jb
push
lock
ljmp
cmpsb
fwait
xchg
or
fwait
or
in
pop
pushl
pop
ja
repnz
mov
dec
imull
mov
jnp
rcl
ret
jge
adcl
mov
xlat
mov
ds
or
push
mov
jnp
mov
xchg
add
xor
js
mov
fildll
shrl
repnz
adc
xchg
mov
dec
push
inc
jmp
cld
clc
ljmp
lea
lcall
jb
xorl
cmpsl
das
inc
or
pop
int
sub
fs
ret
sub
adc
ja
xchg
and
inc
cmp
xor
out
pop
mov
pop
mov
push
adc
shrl
mov
cmpsb
adc
stos
mov
push
add
mov
xor
mov
mov
out
cs
test
sub
jg
dec
insl
mov
imul
aad
scas
mov
dec
dec
sbb
in
add
clc
fadds
jno
dec
addb
jmp
lods
cmp
ja
fbstp
jg
push
nop
pop
fucomp
iret
sub
xor
insb
outsb
fldl2t
out
arpl
dec
ret
jns
mov
mov
jo
cmp
aaa
lahf
mov
filds
pop
fldt
mov
mov
xchg
push
cli
cmpsl
and
aad
js
xchg
xor
mov
add
xchg
mov
sbb
pop
shrb
into
adc
je
xor
dec
lahf
ret
xlat
es
mov
xchg
pop
adc
lods
scas
xchg
xor
adc
jecxz
push
mov
hlt
jecxz
loopne
dec
loop
in
and
movsl
dec
push
in
mov
jg
hlt
pop
fnstcw
test
sbb
adc
dec
adc
xchg
je
stc
enter
jp
jecxz,pn
xor
test
stos
mov
out
mov
movsl
out
dec
push
out
nop
jbe
insb
shlb
push
aam
mov
in
rclb
ljmp
pop
lds
dec
push
bound
mov
into
and
sub
fsubl
mov
rorb
xor
inc
insl
rol
out
and
push
adc
fmull
add
pusha
sbb
shrl
push
cmp
and
xchg
inc
mov
ljmpw
and
swapgs
stos
cmp
lock
dec
iret
jp
push
orl
adc
mov
clc
xor
push
mov
in
sub
clc
mov
pop
pop
rcrl
pop
test
rcl
shr
adc
clc
jg
rorb
int3
add
and
fs
mov
call
dec
pop
dec
imull
lds
fwait
sbb
mov
mov
cmp
dec
pop
xor
in
pop
cmpsl
fisubl
pop
jmp
das
push
mov
ja
mov
aad
into
repz
clc
sub
pop
popa
mov
cmp
notb
jns
add
cmpsb
jg
daa
jo
popf
add
je
mov
subb
or
fildll
test
mov
adc
xchg
cmc
loopne
shlb
ss
hlt
jmp
or
mov
test
lea
or
repnz
repz
rorl
sub
mov
xchg
test
mov
out
fildll
pop
or
mov
push
cmpsb
add
lret
sub
jbe
pop
xchg
shrl
pushf
inc
mov
inc
in
shlb
and
mov
add
std
push
push
lods
hlt
add
int
cmpsb
dec
shl
and
dec
ja
maxps
in
mov
jmp
jbe
stos
cmc
cmpsb
arpl
fs
addr16
dec
adc
jle
xchg
mov
fidivl
sub
loop
push
or
ret
cwtl
dec
aas
ja
inc
pop
dec
mov
lds
out
std
fidivs
loop
xor
cmp
push
in
add
cld
jl
mov
pop
cmpl
imul
mov
clc
xchg
hlt
add
add
push
mov
fists
aaa
add
pop
xor
or
cld
sbb
cmp
aam
popa
in
mov
dec
add
push
arpl
push
mov
pop
xchg
push
es
test
adc
rol
aam
mov
xchg
sbbb
aam
cltd
push
dec
fidivrs
dec
scas
pop
jle
cmp
jle
inc
push
out
mov
and
ss
je
subl
jl
aam
jbe
jge
mov
or
xchg
aam
fildl
dec
fstpt
sub
je
test
push
out
mov
sub
gs
sub
addl
lcall
call
xlat
mov
or
ja
sbb
aam
mov
bound
xchg
and
outsb
lds
scas
lea
outsl
sub
push
hlt
jbe
xor
add
inc
jg
outsb
jl
sub
jp
test
lcall
and
in
jg
call
inc
inc
mov
lds
test
push
sbb
inc
dec
and
jo
xchg
mov
pop
xchg
bound
std
xchg
push
sub
int3
daa
dec
iret
pop
pop
shlb
push
stos
jno
sub
mov
cmp
add
call
jmp
sbb
adc
mov
insb
push
data16
nop
fildl
aaa
out
or
stos
cld
fs
xchg
jge
call
aas
xor
pop
mov
jg
dec
out
out
or
je
pusha
das
xchg
mov
out
repz
xor
sub
outsb
jb
pop
push
xor
mov
mov
mov
shll
mov
xor
popa
mov
mov
add
push
int
bound
std
mov
xlat
inc
inc
test
cmp
scas
sbb
pop
mov
sbb
scas
loope
sub
lock
sbb
scas
dec
pop
pop
and
movsb
insl
imul
jns
add
sbb
pop
in
and
add
push
iret
call
cmpsl
insl
mov
bound
add
xor
xchg
shlb
or
mov
mov
or
in
cld
jecxz
lcall
mov
fsubl
test
and
jl
push
adc
adc
xchg
outsb
das
inc
mov
insb
enter
xchg
rclb
cmpb
sub
inc
mov
lret
outsb
adc
lcall
and
mov
dec
fsubrs
add
jnp
or
nop
and
rcll
jo
prefetch
jo
push
xor
sbb
cmp
out
lock
popf
mov
xchg
lret
pop
clc
shll
lret
mov
das
push
xorl
cmp
shrl
sub
les
imul
xor
in
jb
int3
loop
mov
sahf
jmp
pop
insb
in
mov
testb
adc
pop
cwtl
push
mov
add
mov
sbb
ja
mov
fwait
xor
push
pushl
mov
or
mov
jnp
sahf
movsb
add
push
adc
test
lods
lods
jp
popa
pop
mov
xor
adc
sarl
or
pop
dec
jmp
mov
rcrl
ret
mov
mov
push
test
ss
enter
inc
xchg
inc
movsl
ss
js
pop
test
jecxz
xor
stc
leave
jbe
ljmp
pop
fs
sub
hlt
rorl
or
gs
icebp
shl
xorl
or
sbb
inc
movsb
push
inc
sbb
xor
or
pop
in
jnp
jnp
popf
pop
push
jo
int
push
cmpsb
outsl
cmp
icebp
inc
inc
xchg
mov
stc
movsb
xlat
pushf
cs
and
pop
fistps
sahf
clc
inc
xor
xor
pop
enter
shll
test
ja
movsb
jecxz
add
add
test
das
pop
xor
adc
xchg
jl
sub
lods
rcll
mov
or
mov
or
arpl
or
mov
loope
fdivr
test
push
dec
mov
xchg
daa
leave
popa
push
mov
insb
insl
and
cmc
in
imul
cmpsb
push
mov
inc
loope
lods
pop
mov
pop
mov
or
pop
cmp
mov
nop
sarb
daa
fwait
cmp
pop
enter
lcall
pop
mov
loop
int3
dec
pop
insb
xchg
xchg
cs
pop
adc
pushf
in
hlt
xchg
in
dec
jl
imul
adc
cmpsb
push
xlat
mov
mov
jge
xor
test
inc
in
popa
punpckldq
push
ret
pop
sti
pusha
push
add
mov
outsb
rorb
enter
jnp
push
cltd
outsl
mov
lods
imul
push
sbb
mov
shll
mov
stos
call
and
scas
loop
rorb
js
jge
mov
aaa
ficompl
sub
ret
xchg
jbe
in
pusha
pushf
pop
xor
fwait
cmp
daa
mov
lahf
repnz
sbb
push
cmp
leave
push
inc
cmp
mov
fdiv
xor
test
pop
inc
int3
repnz
divl
js
lea
or
flds
xlat
mov
push
push
adc
pushf
adc
mov
push
lea
lea
in
sbb
xadd
xor
mov
mov
xor
jge
in
mov
inc
popa
inc
into
mov
jns
mov
jbe
data16
mov
add
sbbb
insb
mov
xchg
inc
fnstcw
cmp
lock
scas
scas
sbb
cmpsb
jg
aaa
lea
push
add
pop
leave
or
add
sbb
or
mov
push
enter
mov
mov
mov
sbb
cmp
adcl
pop
inc
push
mov
sbbb
jo
mov
sub
imul
imul
addr16
pusha
negl
dec
aaa
and
movl
gs
add
xchg
jle
sub
adc
xchg
ss
or
pop
jns
inc
and
jl
stc
daa
add
cmc
jae
rep
add
fwait
int
inc
cmpsl
cmpsl
scas
in
ja
imul
xor
cwtl
loope
xchg
ljmp
pop
ljmp
cmp
rcrb
ja
pop
addr16
and
loope
mov
pop
mov
mov
lahf
dec
pop
inc
or
out
jmp
sahf
mov
add
idivl
mov
xor
pop
hlt
notl
clc
add
mov
sbb
loope
pop
lcall
push
loopne
cwtl
xchg
mov
dec
aam
lock
pop
dec
xchg
mov
push
mov
xchg
outsb
sbb
sub
inc
stos
mov
lods
fldt
movl
dec
je
adcl
js
push
out
cmp
sbb
mov
pushf
outsb
add
add
push
mov
sub
int3
pop
in
ret
shl
out
js
inc
imul
idivb
lret
jecxz
clc
add
mov
add
push
fcomip
adc
adc
and
mov
rcl
ficoms
sbb
fnstsw
or
out
mov
pop
cs
lret
adc
pusha
sbb
pop
data16
out
adc
ds
gs
jbe
aas
mov
inc
xchg
sahf
mov
in
call
cld
mov
out
mov
outsb
stc
addr16
dec
addr16
adc
aad
or
or
aam
push
faddl
cltd
mov
inc
mov
ja
imul
sbb
and
not
add
sub
enter
les
add
fimull
out
mov
dec
in
jp
mov
lret
jge
cmpsl
mov
and
ret
shll
inc
sub
xchg
jmp
sbb
add
adc
xor
jl
jnp
ret
mov
les
inc
cwtl
in
sbb
mov
inc
stc
add
arpl
nop
into
sub
iret
dec
out
test
inc
jmp
inc
sarb
ljmp
pop
popa
mov
loop
jmp
loope
add
lods
inc
mov
addr16
cwtl
in
inc
int3
mov
addr16
jle
xorb
imul
aas
xchg
out
fdivrl
xchg
sahf
iret
adc
cli
xor
cmp
lahf
out
fsub
and
xchg
push
sbb
adc
mov
in
pop
mov
xchg
xor
push
jge
mov
sub
and
lret
jge
mov
xchg
adc
cwtl
fisttpl
aas
push
shl
or
rcl
filds
sqrtps
push
fdivr
movsb
push
sbb
cmp
lahf
lcall
std
out
mov
into
xor
xor
es
insb
mov
mov
cli
in
inc
ds
mov
lock
mov
and
enter
sbb
pop
testb
hlt
cmc
lahf
xchg
xor
stos
sarb
pusha
pop
push
sahf
mov
popf
cwtl
test
addl
clc
rcr
fs
mov
gs
xchg
mov
mov
fidivl
out
outsl
mov
lods
movsb
sub
loop
jo
xor
pop
mov
mov
lcall
inc
enter
cmp
or
fdivrp
mov
ds
imul
sbb
lods
xchg
rcrl
jns
and
pusha
es
push
pop
enter
jmp
push
adc
mov
mov
or
cwtl
repnz
push
pop
jbe
es
mov
and
orl
in
fwait
cmp
xchg
lods
fsubr
push
mov
inc
fidivrl
fbld
sub
es
and
out
mov
sub
xchg
aaa
or
pop
sub
pcmpeqw
in
in
into
pop
inc
lock
or
pop
in
mov
stc
sub
out
int
arpl
jae,pt
cmp
and
mov
fisubrl
cs
mov
jns
pop
mov
sub
rcll
addr16
shr
cmp
addb
nop
mov
add
pop
dec
es
mov
push
or
xchg
cmp
sub
pop
mov
add
cld
xor
scas
sti
std
jns
pop
or
pop
mov
movsl
xor
dec
inc
outsb
jmp
mov
add
push
jnp
jne
mov
adc
stos
in
inc
mov
mov
outsb
insl
push
add
add
shll
xchg
add
in
fisttpll
dec
jmp
mov
push
sub
insb
repnz
jb
imul
sahf
sub
push
lds
sub
in
jo
lret
repz
nop
sbb
push
jns
fsubrp
mov
adc
jns
mov
movsl
sbb
cmc
repz
movsb
sahf
stos
mov
ss
loop
mov
jmp
loopne
sbb
inc
jl
add
outsl
popf
lods
push
jl
cmp
pusha
jne
pop
adc
ljmp
divl
popa
jecxz
mov
and
sub
jb
jge
push
js
push
loope
mov
adc
lret
popf
popf
aaa
xchg
int3
ljmp
add
pop
mov
pop
arpl
xchg
cmp
lock
in
inc
rolb
lret
out
cmp
cbtw
xchg
hlt
sub
cmc
scas
outsl
fidivs
cs
push
and
iret
cmp
jecxz
jnp
mov
jg
mov
cwtl
and
inc
jnp
sbbl
jp
cmp
fwait
pusha
sbbb
in
pop
or
ds
jp
push
xchg
xchg
xchg
adc
push
xor
cld
rorb
adcb
mov
arpl
std
jb
dec
ss
scas
add
xor
mov
repnz
fnsaves
mov
cmp
fwait
cli
nop
js
mov
aam
xor
loopne
mov
test
push
inc
orb
loop
jmp
xor
or
andl
and
push
sbb
sbb
inc
insb
inc
jg
stos
jecxz
dec
pop
xchg
out
jp
in
dec
pop
jno
sub
jle
dec
out
and
adc
gs
call
movsl
dec
js
popa
les
bswap
xor
stos
pop
das
mov
push
hlt
hlt
stos
adc
mov
lea
arpl
xchg
adc
in
jle
cli
pop
sti
int
stos
bound
movsl
les
add
les
insb
lret
insl
jo
xor
lea
inc
iret
enter
mov
adc
mov
hlt
push
xchg
add
xchg
and
fdiv
pusha
subl
aas
in
and
aad
movsl
cmp
mov
push
push
arpl
jp
jecxz
inc
push
movsl
sub
gs
lock
inc
xor
fmulp
data16
mov
out
mov
or
mov
push
jge
bound
cwtl
cmp
mov
sub
mov
shl
lahf
push
push
jo
dec
outsl
cmp
xchg
cmc
push
sub
aaa
jle
push
xchg
cld
add
ret
imul
cmp
repnz
add
pop
movsl
dec
or
lret
psubsb
dec
add
mov
jno
jmp
test
lcall
mov
lods
pop
imul
lods
icebp
sbb
mov
dec
xor
shl
test
xchg
dec
out
ljmp
or
out
xchg
inc
iret
int
mov
ljmp
out
inc
jge
fidivrl
jl
inc
cmp
sbb
pop
push
sarb
adc
xchg
test
cmp
bound
dec
push
dec
lcall
loope
call
ret
sub
add
xchg
xorb
mov
jg
push
repz
xchg
mov
adc
push
cmp
loope
mov
icebp
adc
ja
pop
cld
fsubs
jle
push
jae
dec
adc
adc
loop
xlat
pop
inc
dec
test
fsub
fdivs
xchg
arpl
add
xor
iret
sbb
dec
movsb
jmp
test
push
push
xchg
cltd
test
rorl
insb
lods
std
shlb
jge
jmp
aas
jg
adc
pop
scas
fiadds
jb
pop
adc
or
cli
sub
bound
out
loope
sti
dec
loope
jg
ret
leave
jmp
test
adc
xor
or
popa
add
neg
sub
pop
dec
mov
inc
sahf
adc
cmp
call
mov
lock
cmc
cmc
sub
loope
cmpsl
xchg
arpl
mov
inc
repnz
sub
pop
movl
inc
outsl
repnz
cmp
and
sub
jle
clc
xor
xlat
xor
sti
pop
add
call
repz
jecxz
sub
lea
enter
adc
adc
pop
jbe
adc
dec
jnp
std
push
jbe
mov
inc
imul
hlt
cmp
pop
mov
inc
stos
mov
stos
push
and
pop
mov
dec
call
mov
xor
orb
add
sti
test
nop
stc
sahf
xor
fs
loope
scas
fadd
mov
out
icebp
add
or
jb
enter
movsb
aaa
cli
mov
push
dec
cmp
mov
cmp
loopne
cmp
mov
mov
mov
mov
fdivs
xchg
adc
dec
inc
adc
mov
jmp
sbb
int
xchg
mov
mov
and
out
mov
add
in
test
fidivs
imul
or
fs
mov
das
inc
sahf
add
sub
std
jecxz
hlt
call
loopne
testb
add
popf
leave
cmp
pop
ret
jp
stos
xchg
in
adc
mov
pop
repnz
insl
arpl
popf
add
add
dec
stos
cmp
push
mov
ds
rcrb
mov
addr16
sti
bound
adc
dec
mov
aad
stc
fdiv
iret
daa
pop
ret
scas
xchg
mov
xchg
jge
lret
dec
jns
push
stos
lahf
test
pop
fsts
sarl
pop
sbb
cmpsl
rcll
call
les
mov
mov
jp
sti
adc
xor
mov
cmp
les
bound
xor
mov
in
add
jne
mov
jae
mov
insw
sub
xchg
xor
inc
ja
in
mov
insb
dec
ja
inc
pop
jp
push
inc
sbb
fdivrl
inc
mov
xchg
add
cwtl
mov
adc
rcr
bound
popf
pushf
adc
jecxz
and
cli
bound
fldt
dec
sbb
mov
xchg
cltd
in
pop
mov
les
push
jne
jg
mov
in
stos
repz
cld
loopne
sbb
mov
pop
aam
clc
dec
push
jmp
loope
stos
jmp
pop
es
cmp
sub
sarb
push
push
gs
in
scas
lods
movsb
pop
or
ret
jae
dec
pusha
lahf
and
cmpb
mov
mov
enter
in
xor
nop
xchg
inc
iret
cmp
xchg
cmp
inc
lds
in
lahf
mov
sete
mov
ret
xchg
scas
in
and
aam
jg
dec
fsubs
sahf
mov
mulb
xchg
adc
add
sub
or
adc
add
movsl
fucom
push
sti
and
mov
arpl
mov
dec
cltd
push
and
rolb
mov
ret
clc
std
outsl
addr16
loop
pop
fisubrl
shlb
inc
sahf
cmp
insb
lods
xchg
cmovle
fsubs
inc
mov
pop
pop
jo
mov
pop
pop
xor
pop
pushf
arpl
cmc
pop
xor
aas
in
fucomip
cmp
cmpsb
mov
xchg
push
sub
insb
cmp
push
incl
add
inc
outsl
mov
push
lock
cmp
mov
stos
push
mov
sbb
adc
aaa
pop
and
outsl
sub
sarl
nop
sub
sbb
mov
adc
aas
loope
in
fwait
xor
and
ljmp
shlb
push
ljmp
popf
jb
sub
jb
mov
dec
aas
rclb
shll
xchg
je
jnp
int
mov
lcall
mov
jo
ja
lock
jns
sub
lcall
lods
dec
daa
scas
mov
adc
cs
cmp
in
lret
push
jne
shlb
mov
mov
clc
sub
add
adcl
inc
data16
shrl
and
mov
cmp
jnp
lods
dec
mov
dec
fsubrs
stos
dec
mov
jbe
iret
inc
pop
xchg
xchg
je
adc
jg
cmp
xor
das
lret
pop
dec
gs
sbb
call
inc
add
xor
stc
shll
imul
adc
jne
mov
aas
cld
jmp
hlt
enter
in
and
adc
cmpsb
and
sbb
dec
jbe
insl
pushf
daa
sub
data16
xchg
and
arpl
sub
pop
adc
lret
or
test
test
lahf
adc
inc
fiadds
ljmp
insl
adc
rcl
and
mov
aas
aas
jl
sar
mov
fcoms
and
cmp
mov
imul
out
in
and
icebp
scas
sbb
or
dec
fwait
sbb
xor
ss
sub
jmp
lcall
xchg
push
lahf
and
and
ret
fildl
testl
mov
sahf
js
pop
dec
and
mov
lret
pop
iret
xor
out
adc
fstpt
sbb
mov
imul
xor
scas
adc
add
xchg
arpl
roll
sbbl
insb
inc
push
mov
iret
icebp
je
iret
ljmp
test
stos
cmp
lock
int
pop
shrb
push
pop
mov
jmp
sub
xor
mov
mov
mov
push
loope
sub
loop
lcall
in
sbb
xor
mov
and
fsubr
xchg
ja
inc
cs
mov
insl
mov
inc
xchg
mov
ljmp
adc
xchg
nop
ja
int3
insb
or
jns
mov
es
jo
sti
adc
cmp
aam
jns
xchg
mov
shl
in
mov
pop
xchg
mov
sub
mov
adc
push
and
add
mov
or
add
int3
add
stc
add
pop
mov
or
adc
add
xchg
cmc
aaa
mov
dec
push
xchg
xor
leave
cmp
and
data16
aaa
std
dec
es
sbb
imul
inc
in
lods
or
xor
insl
mov
and
bound
shrl
jp
repnz
jb
out
mov
outsl
mov
fistl
ds
lock
jmp
clc
lcall
test
inc
pusha
mov
out
movb
dec
push
cmc
adc
inc
ret
arpl
jne
daa
inc
xor
addr16
and
loop
sub
and
jb
push
es
pop
clc
in
mov
aaa
dec
je
mov
andb
adc
sub
mov
pop
aas
mov
sub
incl
shll
and
insl
ljmp
pop
clc
lret
int
xor
mov
mov
jnp
iret
mov
shlb
push
mov
enter
pushf
dec
testb
add
inc
mov
xchg
xor
pop
push
fadd
dec
sbb
mov
sbb
aaa
je
aam
out
addr16
fdivrl
cmpb
pop
sub
ret
lea
or
pop
in
mov
lods
xor
xchg
mov
rcrb
jmp
jae
and
mov
mov
jecxz
jge
sbb
or
call
mov
dec
stos
xchg
loopne
mov
sub
fcoml
jle
xor
dec
or
ret
sbb
in
inc
nop
int3
pop
cmp
ret
mov
stc
out
and
or
gs
data16
loopne
aas
fcmovnbe
ljmp
push
cmpsl
cmp
mov
push
mov
imul
adc
add
mov
mov
sub
mov
fstp
int3
shlb
roll
divl
sahf
pusha
popa
add
mov
ret
xor
jmp
sbb
decl
popa
pusha
nop
fdivs
inc
fs
movsl
xor
jb
and
mov
dec
outsb
into
int
mov
in
stc
ja
jl,pn
xor
popf
mov
jae
test
sbb
inc
pusha
jg
adc
xor
repz
ret
and
loop
add
xchg
push
mov
sbb
or
mov
seta
adc
js
data16
xor
xor
mov
repz
inc
cmp
test
xchg
pop
addb
add
mov
popa
inc
sub
rcrl
push
mov
cmp
sti
cmp
gs
jecxz
push
xor
imul
cli
xlat
push
shlb
gs
pop
ljmp
pop
std
mov
mov
adc
into
outsl
cmp
push
xchg
add
in
jle
in
jbe
dec
in
scas
jnp
fldenv
push
mov
xor
or
adc
push
inc
aas
cld
lods
push
jl
mov
pop
push
call
or
cs
cmc
mov
imul
lcall
outsb
inc
xor
lret
cmpsl
daa
push
xor
jae
lock
mov
imul
je
lret
dec
push
jo
dec
push
cs
push
cmp
pusha
cwtl
mov
and
mov
jmp
call
cmp
xchg
lcall
sarl
xor
into
mov
shlb
jns
sub
or
dec
iret
pop
repz
sbbb
pop
scas
cmpsb
jns
sub
in
xlat
mov
notb
nop
sbb
xor
nop
and
adc
cmp
and
orb
stc
push
in
xor
fstpt
xchg
xchg
lahf
add
pop
jbe
notl
mov
xlat
scas
jecxz
cmp
sub
or
or
stc
mov
dec
sub
fadd
out
push
dec
loopne
jb
xchg
jnp
in
sahf
cmc
or
jbe
loop
cmp
mov
dec
xor
xor
dec
or
jae
shrl
push
adc
mov
mov
mov
mov
into
jb
mov
and
mov
mov
pop
adc
call
push
out
stos
mov
jge
scas
push
add
push
dec
fmuls
push
jbe
xchg
imul
add
jns
imul
add
mov
push
mov
and
cmp
and
fimull
xchg
inc
cmp
jle
mov
ror
lret
inc
sub
andb
inc
bound
mov
cmp
mov
int
leave
fwait
ja
xchg
cmp
enter
sbb
mov
mov
dec
scas
push
dec
aad
int3
xchg
shll
add
pop
inc
shl
pop
rcll
mov
test
shl
stos
xchg
lods
int3
repz
mov
add
mov
ret
push
jbe
inc
mov
add
je
mov
cmp
test
stos
jle
lret
mov
adc
cmpsl
push
or
or
inc
jne
rcr
mov
imul
mov
xor
sub
xlat
test
xchg
iret
mov
mov
mov
mov
jno
sbb
adc
rcr
rcrl
js
aaa
jns
dec
call
imul
cmp
mov
inc
mov
mov
data16
enter
lea
call
out
pop
movsb
or
clc
scas
push
or
add
lahf
jo
pusha
inc
jge
pop
sti
movsl
xchg
pushf
cmp
stc
add
cltd
xchg
add
pop
sti
push
hlt
sbb
ja
cmp
and
inc
xchg
sub
sbb
out
daa
leave
add
jp
sbb
fwait
in
dec
push
sahf
insb
pop
push
pop
dec
jns
movsl
je
mov
mov
iret
or
mov
pop
int
je
inc
or
sahf
arpl
lds
mov
inc
jbe
aam
into
cld
in
cmp
or
push
or
cltd
jmp
xor
addb
hlt
dec
cmpsb
sub
movb
adc
pushf
add
push
lret
jg
dec
test
aam
mov
jmp
xchg
aaa
push
mov
adc
mov
jne
mov
mov
imul
xchg
and
mov
and
and
stos
jle
or
adc
pop
jno
jb
test
call
xchg
fisubrl
lcall
inc
repz
dec
das
sub
je
cmp
test
arpl
pop
andb
ljmp
test
jns
pop
adc
jg
cmp
test
sti
adc
and
lahf
sub
xchg
fwait
xchg
cld
mov
lods
add
xchg
sti
lahf
or
or
pop
fsubrs
jns
cmc
inc
decb
pop
xchg
aam
mov
lods
cmp
push
shll
in
daa
mov
movsb
daa
scas
and
pop
addr16
sub
xchg
ss
and
push
mov
mov
iret
faddl
add
lret
mov
neg
pop
lods
push
or
jecxz
enter
scas
inc
andl
push
aad
xchg
fcmove
mov
xchg
sbb
testl
pop
push
push
je
scas
cwtl
mov
rorb
aaa
jecxz
outsl
adc
sbb
loop
xchg
icebp
out
xchg
xlat
xchg
testb
or
shl
adc
aad
pusha
mov
dec
push
in
mov
inc
sbb
cmpsl
stos
adc
pop
pop
push
or
enter
fimull
pop
dec
lret
test
aaa
mov
sti
test
add
mov
push
xchg
push
addr16
mov
lods
scas
andb
lahf
inc
sbb
xchg
cld
outsl
loop
in
mov
lds
dec
fsubrl
test
insb
push
xchg
xor
lahf
jne
mov
ds
daa
ret
mov
jbe
movsl
mov
mov
pop
outsl
mov
iret
popf
imul
mov
lret
ja
movsl
jl
loopne
dec
std
mov
jns
pop
add
ds
sbbb
inc
cmpsl
jno
outsb
xor
xor
addr16
sub
test
mov
popa
mov
push
and
or
mov
ret
push
idiv
in
sub
ss
push
in
sbbl
jmp
add
aaa
jmp
mov
inc
cmpsb
cwtl
jnp
push
pushf
push
ja
ficoms
add
push
add
mov
and
mov
shl
or
adc
cmp
pop
push
cwtl
adc
mov
fwait
or
scas
andb
repz
mov
stos
call
outsb
jp
fsubrl
inc
mov
cld
jbe
inc
jg
mov
or
sahf
int3
movsl
fidivl
pop
mov
inc
or
pop
icebp
stc
mov
dec
stc
movsl
sub
call
xchg
xchg
xchg
dec
ds
cmp
gs
scas
iret
push
in
dec
mulb
leave
ret
dec
mov
xchg
fsubs
pop
lods
sbb
jae
add
adc
je
dec
inc
xchg
inc
and
sbb
and
out
aas
cmp
cmp
addr16
cmpsb
dec
mov
cli
gs
movsl
inc
aad
test
arpl
loope,pt
stc
mov
mov
ficompl
add
daa
pop
add
adc
xor
loop
test
fisttpl
adc
sbb
outsl
mov
fs
in
xor
cs
insb
xor
xor
add
lock
test
mov
cld
test
mov
mov
arpl
std
orl
outsl
pop
clc
sbb
inc
jno
sub
adcl
inc
adc
mov
dec
mov
xchg
out
hlt
pop
sbb
jae
push
mov
popf
xorb
push
cmpsl
ret
pop
fisubl
cmp
sbb
aas
inc
into
dec
rol
xor
ja
pop
push
inc
xor
out
dec
or
mov
add
and
idivb
cmpsb
xchg
mov
and
mov
dec
je
mov
add
sub
addr16
mov
push
mov
lahf
or
xchg
sbb
outsb
sbb
punpckhwd
or
les
loopne
sbb
jmp
out
xchg
xchg
sub
pusha
aaa
icebp
sbb
out
jl
mov
cmc
pop
jae
ds
stos
pop
aaa
aas
dec
dec
js
jnp
or
pop
nop
imul
ds
int
jl
daa
in
sbb
stos
inc
imul
xchg
outsl
rorl
adc
fbld
dec
inc
jle
shlb
push
add
adc
dec
roll
sahf
test
sbb
mov
and
inc
push
hlt
fcmovnbe
lock
push
dec
push
sub
scas
pop
push
les
xlat
push
in
scas
dec
mov
sub
pop
insl
or
pushf
inc
mov
rorb
cmp
pop
jge
mov
xchg
push
xor
fstps
fldcw
fnsave
add
sub
jmp
ds
inc
sub
push
arpl
and
pop
clc
lock
test
jae
mov
scas
test
divb
fcomps
outsb
push
xchg
add
add
adc
mov
push
repz
lods
ret
out
mov
inc
jg
leave
jp
loop
insl
lret
pop
push
lods
cli
inc
mov
push
pushf
into
pop
jmp
subl
sub
lods
mov
in
or
add
loopne
jbe
lds
aam
shlb
jge
or
pop
push
adc
or
imul
inc
dec
xor
mov
sub
mov
fwait
clc
add
mov
lahf
xchg
mov
mov
cli
mov
fistpl
orb
iret
shll
cli
add
or
or
push
int
fmull
inc
dec
push
scas
push
inc
sbb
cli
lret
push
cmp
xor
mov
inc
mov
sub
sahf
inc
dec
je
ss
in
xchg
insb
sbbl
sub
jge
and
or
dec
arpl
cwtl
idivb
divl
pop
mov
ftst
inc
movsl
dec
mov
inc
pushf
xchg
xchg
cld
lea
cmp
test
jmp
fmul
adc
sub
jno
sub
jmp
sbb
pop
imull
cmp
cmp
push
lods
push
in
pop
outsb
ja
loopne
push
lahf
shr
int3
mov
testb
ret
pushf
cmc
jl
cmp
and
rclb
nop
sub
xor
inc
push
xchg
leave
ja
daa
arpl
mov
popf
in
fnsave
push
insb
inc
out
jecxz
ss
and
dec
xchg
dec
add
mov
xchg
js
adc
mov
lods
lea
mov
pop
pop
pop
inc
out
mov
enter
jmp
std
push
les
in
and
jo
mov
mov
pop
cmpsl
xorl
loopne
push
sbb
pop
dec
lcall
test
or
xor
loopne
scas
xchg
fs
dec
mov
paddsw
das
fisubrs
stos
push
jl
mov
in
enter
mov
lods
sbbl
das
lcall
stc
add
aad
cmc
pushw
mov
xor
and
jg
out
inc
pop
push
inc
insl
and
insb
mov
faddl
mov
sub
es
jbe
enter
popa
iret
sub
adc
cwtl
and
mov
insl
fiaddl
gs
push
in
mov
xor
andb
cmpsl
and
shll
push
fidivrs
lret
xor
mov
mov
adc
push
aad
ss
mov
ja
rorl
lret
mov
addr16
out
je
dec
stos
sti
mov
jmp
leave
out
fs
xchg
aam
cmp
mov
jne
cwtl
mov
cmp
dec
in
outsl
fnstcw
test
daa
das
clc
leave
mov
in
les
andb
fucomp
or
jp
inc
cmp
and
lret
inc
mov
ss
and
xor
xchg
in
jns,pn
add
lods
aad
inc
daa
arpl
cs
cmpsl
rolb
fs
add
mov
sbb
sbb
mov
inc
push
xchg
insb
loopne
nop
xchg
cmp
imul
lea
movsb
dec
jl
push
test
aad
cmp
stos
sbb
lods
push
push
das
popl
out
mov
mov
out
popf
repz
ja
aaa
xor
shll
test
stos
aad
mov
adc
add
add
mov
sub
and
push
mov
jp
mov
mov
daa
mov
shll
shll
imul
icebp
inc
sub
dec
arpl
mov
std
xchg
jecxz
gs
lds
jp
cmp
fnsave
mov
pop
mov
and
adc
dec
loop
mov
aaa
sub
adc
jl
fisubl
fimull
mov
ret
in
lods
sbb
jne
nop
ljmp
or
cmc
je
or
aad
cmpsb
out
xor
pop
lea
mov
mov
cmpsb
cld
add
roll
aad
clc
and
jne
dec
sub
aad
mov
clc
pop
idivb
push
dec
mov
jp
rcrl
in
add
loopne
inc
shrl
mov
icebp
xchg
push
push
roll
jbe
loopne
jbe
cli
jo
jp
in
mov
jno
push
push
or
pop
jnp
push
addr16
xchg
and
test
lock
pop
inc
mov
inc
xchg
stc
call
stos
add
push
out
stos
fdivs
enter
in
lods
cltd
into
lahf
push
lahf
cwtl
jae
jp
xchg
xchg
sub
movsb
cmp
iret
add
shll
add
inc
loopne
rol
fisubrl
sub
aad
pop
cwtl
mov
cmpsb
xchg
cmp
scas
rcrl
adcl
stos
aas
imul
xchg
jo
jbe
dec
stc
push
or
pop
out
xchg
fnstenv
xor
adc
js
addr16
out
inc
sbb
push
jne
inc
xchg
dec
xor
lea
popf
jl
imul
pop
call
jae
pushf
sti
and
push
ss
dec
adc
jle
jecxz
lret
xchg
test
repz
mov
or
loop
ret
xchg
and
fwait
ror
xchg
ds
aaa
aad
dec
cmp
pop
mov
mov
mov
js
outsb
ds
push
mov
pop
mov
lret
sbb
xchg
bound
jne
jno
adc
pop
jecxz
dec
xor
cli
mov
outsb
mov
and
mov
sub
push
inc
dec
jmp
mov
and
dec
mov
or
addb
loope
lods
jo
adc
in
cmp
push
jne
xchg
out
xor
jb
add
and
cmp
fdivrs
push
stc
outsb
push
jmp
xor
lcall
mov
fs
and
mov
adc
icebp
mov
inc
pop
out
inc
fistl
out
pop
mov
jmp
aam
jp
fldl
daa
adc
out
pop
adc
dec
and
pop
add
jp
mov
and
int3
push
and
sub
adc
xor
js
jmp
jl
sub
dec
sbb
mov
and
adc
enter
subb
dec
cmp
imul
push
dec
addr16
outsb
add
pop
mov
out
lahf
scas
push
adc
popa
cwtl
insb
sbb
cmp
movq
int3
xor
ss
mov
jle
mov
sbb
mov
xor
jl
sbb
and
mov
pop
mov
lcall
loope
loope
mov
xor
aam
push
repz
test
and
mov
sbb
inc
push
cmp
popl
cli
pop
pop
jle
clc
jnp
push
loope
ja
add
aas
mull
les
add
icebp
out
mov
pop
pop
data16
rorl
cmp
stos
sti
fldt
xchg
and
arpl
lahf
lods
dec
movsb
lret
and
mov
mov
sti
pop
xchg
pop
mov
inc
out
xchg
dec
je
cwtl
cmp
push
mov
leave
dec
push
ja
ss
bound
mov
inc
test
inc
lods
pop
les
jns
scas
movsl
jmp
cmp
cltd
loopne
ret
push
cmc
mov
push
mov
mov
mov
mov
xor
outsl
sahf
popa
fwait
xor
and
push
lret
xchg
mov
xor
cmp
in
loopne
inc
jle
es
orb
jg
stc
mov
mov
insl
test
imul
mov
ret
leave
or
xchg
cmp
movsb
push
mov
sub
rcll
and
xor
scas
fs
jl
shrb
out
nop
ret
sbb
data16
mov
and
inc
jg
mov
ror
adc
and
lock
push
daa
or
sbb
dec
add
loope
sub
jle
imul
test
add
and
inc
cld
xor
or
mov
ljmp
dec
mov
xchg
fldcw
mov
stos
dec
sub
fwait
inc
lsl
xchg
jmp
dec
movsl
loop
and
fwait
pop
lahf
mov
or
lret
insl
cmpsb
mov
xor
loope
xorl
lahf
fxch
mov
mov
repz
daa
bound
inc
adcb
lock
mov
test
mov
mov
adc
mov
or
ficoms
repnz
pop
pop
mov
mov
clc
mov
sub
and
and
das
add
cli
lods
stos
mov
jge
dec
sarl
sti
xchg
stos
nop
movsl
loope
in
jns
dec
inc
pop
in
mov
fadds
add
xlat
ds
sbb
fprem1
push
fs
or
pop
jne
daa
pop
push
cmp
sbb
lea
pop
jb
add
dec
jmp
push
out
in
inc
xor
xor
lds
sub
xchg
std
or
xchg
les
dec
fsin
push
xchg
dec
mov
mov
cmc
push
add
test
xchg
loope
push
add
in
test
ja
outsb
dec
bound
out
cmc
dec
aad
inc
fwait
stos
adc
sti
xchg
jge
lods
push
and
int3
daa
lcall
int
lea
sbb
or
cmp
data16
mov
jle
loopne
and
xor
test
add
mov
and
roll
dec
leave
cmpsb
dec
lahf
xchg
aam
fsubrs
leave
subl
inc
adc
push
addr16
test
pop
insb
pop
and
loope
dec
add
lods
cmc
and
data16
imul
mov
repz
fldenv
jge
movsb
mov
push
sub
push
jae
addr16
rol
add
jae
loopne
ja
mov
ret
jmp
dec
sub
or
sub
bound
ss
jb
repnz
pop
add
fxch
xor
push
out
or
push
pop
lcall
rcrb
xor
in
mov
xchg
dec
mov
jae
push
mov
sbb
cmpsl
cmp
adc
push
test
cwtl
dec
sets
sbb
fcompl
and
adc
decl
xchg
inc
dec
add
cli
lret
insl
call
and
inc
sbb
jbe
sahf
imulb
jbe
loop
mov
add
pop
test
mov
sbbb
adc
inc
or
or
roll
je
ds
adc
xchg
lods
jnp
dec
call
sbb
and
stos
sub
rcrb
inc
add
insl
addb
mov
inc
in
and
ss
es
add
push
es
lret
xor
adc
mov
in
movsl
test
je
inc
and
sbb
push
ljmp
sub
nop
mov
pop
lods
jae
pop
xchg
xchg
jmp
and
mov
pop
fists
adc
push
xor
in
sub
fbstp
cvtps2pd
pop
arpl
xchg
adc
jo
popf
sbb
push
mov
loope
adc
jecxz
cmpsb
je
outsl
ret
lret
xor
jnp
jp
orb
sub
jecxz
xchg
cmp
insb
adc
jbe
fistpl
iret
xchg
mov
aaa
scas
ja
inc
das
stc
rolb
push
and
push
push
fsubrs
stos
repz
jecxz
adc
cmpsl
in
adc
sbb
aaa
inc
adc
loopne
ss
pop
out
and
dec
dec
mov
cmp
into
iret
rol
sbbb
in
or
hlt
rcr
cs
shl
push
mov
dec
cs
in
pop
jae
pop
int3
rclb
test
gs
push
sub
sub
xchg
movsl
push
mov
jg
ret
mov
mov
notl
cmp
push
out
test
and
stos
mov
fstpt
in
pushf
int
cmp
into
and
cmpsl
daa
xor
fisubrs
sub
jns
cwtl
or
leave
cltd
add
dec
lret
cmc
mov
int
adc
mov
fildll
jmp
cmc
fildl
nop
out
test
cmp
test
push
fcomip
ja
insb
sub
scas
adc
sub
mov
aas
add
sbb
daa
cmpb
xor
or
pusha
push
dec
ss
dec
out
aas
enter
loope
iret
mov
mov
push
pop
push
insl
in
scas
hlt
and
pushf
pop
loop
fdivs
insb
jae
outsl
popa
iret
inc
imul
arpl
rcrl
fwait
out
out
lret
jecxz
lcall
sarb
mov
mov
mov
push
mov
push
or
test
jno
test
and
test
push
sbb
inc
xchg
jge
sub
imul
sahf
mov
ljmp
das
adc
push
pop
aam
push
lahf
xchg
cs
add
call
lea
lock
pavgw
cs
push
push
js
mov
cmpsl
sarl
ret
jno
push
ss
aaa
in
out
xchg
repnz
gs
test
push
push
jb
das
mov
cli
pushf
push
inc
lcall
mov
rorb
adc
aad
neg
outsl
cmpsl
push
push
jno
sub
lahf
pop
sbb
xchg
xor
cmpsb
push
out
loop
inc
outsl
push
out
fmull
sub
stc
push
mov
imul
xlat
xchg
dec
in
std
mov
popf
sub
popf
test
fstpl
ficoml
mov
xchg
fadds
inc
mov
inc
sub
fbld
xchg
dec
outsb
cmp
mov
add
mov
push
sub
mov
mov
movsl
arpl
mov
or
xlat
call
rorb
mov
loopne
add
frstpm(287
mov
pop
faddl
in
xchg
add
jo
jb
push
ja
mov
cli
fmulp
inc
sti
out
add
int3
push
cld
out
js
aas
das
sbb
and
bound
lds
sbb
lock
out
mul
mov
jnp
or
lret
subb
lds
jno
rclb
sbb
jmp
cmp
loop
mov
into
test
cmpsb
sbb
lods
loop
jmp
pop
mov
ret
outsb
mov
xchg
adc
mov
cmc
dec
xlat
mov
in
iret
xor
pop
push
pop
fnsave
in
mov
jb
out
outsb
stos
xchg
inc
xchg
dec
mov
jo
pusha
mov
sbb
jle
lds
arpl
arpl
push
adc
fsub
or
pop
cmp
nop
aam
inc
popf
xchg
fcmovnu
jmp
push
ficompl
xor
daa
mov
popa
pop
movsb
mov
pusha
or
sub
call
mov
lods
pop
dec
scas
ss
xor
xor
push
arpl
repz
add
cld
lret
mov
aad
repnz
mov
push
mov
repz
pop
pop
andb
dec
jnp
add
ret
ret
jns
xchg
gs
xorb
inc
fwait
and
popa
lea
jecxz
in
push
movsb
lds
out
push
push
les
out
decb
out
outsl
std
mov
fiaddl
lock
in
enter
mov
xchg
popf
rcl
leave
lret
pop
dec
repz
xlat
daa
or
xor
addb
jbe
std
dec
dec
into
fiaddl
mov
vpacksswb
sbb
lds
push
or
mov
mov
rcll
fldl
adc
pop
mov
addb
sub
sbb
add
mov
cmc
add
mov
insl
dec
adc
hlt
jge
dec
cmc
add
outsl
cmp
gs
repz
inc
jbe
cmpl
jae
sti
fdivl
mov
leave
pop
cld
fwait
inc
adc
and
aad
xchg
inc
or
dec
lock
lods
mov
stc
into
leave
aaa
pop
lcall
pushf
js
inc
testb
push
xor
das
mov
mov
rcrl
jae
xor
cld
das
jle
cwtl
adcb
mov
inc
cmc
sub
ss
ficoml
xor
adc
aas
movsl
ret
pop
aas
jno
sub
mov
xlat
and
mov
ljmp
aaa
test
sbb
aam
sbb
out
movsl
lods
jb
call
ja
jp
imulb
mov
cmpsb
daa
pop
data16
fwait
sbb
mov
fmull
push
out
call
dec
cmp
xchg
icebp
sti
stos
adc
movsb
cmp
inc
jb
sub
clc
adc
pop
jo
push
jl
ror
add
ljmp
call
ja
ljmp
in
ss
dec
inc
icebp
ret
ljmp
push
dec
jnp
add
push
mov
adc
cli
into
aad
sarl
push
dec
jle
mov
out
out
lret
mov
movl
pop
in
xor
jae
movsb
out
cmp
jmp
popa
pop
mov
xchg
and
pop
inc
mov
test
xchg
cmpsb
scas
ficoml
mov
ljmp
sbb
or
scas
pop
and
aas
sub
pop
adc
push
call
adc
jle
inc
fidivl
sbb
jmp
xchg
popf
add
movsb
dec
addr16
fdivrs
sub
stos
leave
loop
cwtl
lds
pop
cs
pop
push
push
rcll
dec
clc
lret
pop
lock
and
popf
enter
sarb
dec
je
imul
xchg
sub
mov
pop
lahf
imul
xchg
sbb
std
jo
xchg
cmp
adc
fdiv
je
mov
js
mov
cmp
mov
xor
int3
faddl
xchg
sti
adc
mov
mov
jnp
xchg
jbe
xchg
adc
xor
xchg
hlt
jmp
xchg
movsb
insb
jecxz
and
jne
or
push
jecxz
cmpsb
hlt
insb
pop
gs
rcl
inc
add
push
xchg
fidivs
loop
fidivrl
clc
xchg
lods
jg
xchg
sbb
pop
popa
mov
fcomps
jmp
ja
aam
push
adc
negl
lcall
shlb
fs
xchg
push
inc
jle
xor
mov
xchg
inc
jno
ror
je
repnz
xchg
bswap
add
out
xor
xlat
xor
lea
fistps
sbb
ud0
aas
cmc
mov
xchg
cmp
repnz
pop
sbb
fs
fcmovu
push
xor
jbe
or
jecxz
in
xor
sbb
lods
or
mov
repz
ret
ret
or
xchg
push
xchg
push
cs
das
push
popf
cmp
add
cmp
cld
bound
lock
and
in
xchg
cmp
jmp
mov
out
jle
stos
mov
mov
mov
es
push
inc
ficoml
psraw
push
shr
cli
ja
test
and
mov
fsubs
ja
cmp
out
divl
ljmp
fimull
movsb
add
icebp
cmp
adc
jne
dec
outsl
sub
sbb
or
jle
and
je
lret
fwait
stos
dec
jne
mov
test
out
repz
adc
fwait
popa
mov
inc
dec
xchg
cmp
clc
mov
jo
clc
repz
mov
movsb
add
jmp
or
outsb
xchg
rol
push
std
jmp
xchg
or
test
cmc
dec
shlb
sub
push
xchg
inc
hlt
adc
adc
mov
nop
pop
mov
mov
mov
popa
jns
mov
xchg
or
push
mov
add
lea
fucom
repnz
jb
xor
mov
mov
stc
out
mov
inc
in
enter
mov
xchg
or
js
in
inc
adc
shll
add
jp
call
test
das
in
or
inc
sbb
shlb
adc
pop
jmp
cmpsl
mov
push
inc
push
jbe
ffreep
mov
mov
je
test
mov
fisttps
mov
add
adc
jecxz
jmp
fneni(8087
dec
or
daa
mov
and
pop
sbb
jne
dec
xlat
into
push
jp
pop
test
shlb
jae
dec
jbe
out
jecxz
push
mov
adc
lods
dec
fadds
sbb
cli
mov
push
icebp
sub
jbe
imul
sub
mov
cmp
in
cli
aaa
inc
out
or
nop
fcoms
mov
pop
pop
fpatan
adc
stos
or
aam
adc
push
adc
js
fsubp
sbb
cmpsl
stos
data16
out
ss
inc
xlat
int
mov
dec
ds
pop
push
into
and
mov
jg
mov
mov
or
pop
hlt
shlb
adc
mov
nop
add
add
xchg
mov
hlt
out
aaa
cmp
add
cld
mov
add
cmp
push
lret
rcll
out
and
or
fwait
mov
jno
mov
fsubr
mov
loope
mov
mov
popf
lds
cld
mov
push
ret
hlt
int
add
rolb
push
insb
mov
ret
loopne
mov
jp
hlt
pop
pop
push
sbb
enter
test
xor
or
mov
inc
cmpsl
scas
scas
sub
cmp
roll
dec
mov
add
jno
dec
dec
loope
enter
pop
sbb
movsl
in
jge
or
sub
and
cmpb
pop
inc
cs
dec
int3
out
mov
lret
xor
fisttps
sub
mov
imul
and
sub
add
jno
outsb
lods
lods
imul
sub
inc
sbb
pop
push
add
push
jg
push
xor
test
nop
int
jmp
xchg
andb
and
jae
and
lret
pop
adc
sbb
popa
stos
xchg
add
movsb
jl
imul
out
shl
push
mov
mov
or
popf
xor
xorl
inc
cmp
push
lea
loop
jmp
lret
gs
jb
insl
pop
mov
loop
rcr
les
movzbl
jle
mov
lret
cld
fcomps
popf
ret
push
or
inc
and
mov
out
pop
cmpsl
sub
mov
push
outsl
xor
movsb
mov
dec
jno
std
xor
jno
xchg
xchg
addr16
dec
cmc
arpl
lods
je
sub
sub
xchg
add
mov
rorl
sbb
inc
push
inc
lcall
cmp
push
call
pop
pop
dec
fwait
data16
mov
data16
sbb
out
.byte
xchg
add
add
in
sbb
add
add
add
add
addb
addb
add
pop
add
addb
add
rolb
add
adc
add
nop
add
addb
add
in
sbb
add
add
add
add
mov
add
addb
add
in
sbb
add
add
add
add
add
add
addb
add
fadds
add
lock
addb
add
add
addb
add
in
sbb
add
add
add
push
add
pop
add
cmp
add
push
add
adc
add
push
pop
add
addb
adc
add
cwtl
add
adc
add
mov
add
in
sbb
add
add
add
push
add
add
add
add
orb
loopne
add
clc
add
adcb
add
add
adcb
add
add
adcb
add
add
in
sbb
add
add
push
add
add
push
add
call
add
cmp
add
push
pop
add
and
add
ss
add
inc
pop
add
bound
add
addb
sbbb
add
xor
andb
cmpb
add
js
add
nop
add
addb
add
in
sbb
add
add
add
add
mov
add
addb
add
in
sbb
add
add
add
add
add
add
rolb
add
add
in
sbb
add
add
add
add
add
add
rolb
add
add
add
cli
sbb
add
add
add
add
add
add
loopne
add
add
add
in
sbb
add
add
add
add
add
add
lock
add
add
add
cli
sbb
add
add
add
add
add
add
add
add
in
sbb
add
add
add
add
add
add
adc
add
in
sbb
add
add
add
add
add
add
and
add
in
sbb
add
add
add
add
add
add
xor
add
in
sbb
add
add
add
add
add
add
inc
add
add
in
sbb
add
add
add
add
add
add
push
add
add
in
sbb
add
add
add
add
add
add
pusha
add
add
in
sbb
add
add
add
add
add
add
jo
add
add
add
in
sbb
add
add
add
add
add
add
addb
add
cli
sbb
add
add
add
add
add
add
nop
add
add
in
sbb
add
add
add
add
add
add
mov
add
add
cli
sbb
add
add
add
add
add
add
mov
add
add
add
in
sbb
add
add
add
add
add
add
rolb
add
cli
sbb
add
add
add
add
add
add
rolb
add
in
sbb
add
add
add
add
or
add
add
add
in
sbb
add
add
add
add
or
add
add
add
in
sbb
add
add
add
add
or
add
push
add
add
add
in
sbb
add
add
add
add
or
add
push
add
add
add
in
sbb
add
add
add
add
or
add
push
add
add
add
in
sbb
add
add
add
add
or
add
push
add
add
add
in
sbb
add
add
add
add
or
add
add
add
add
in
sbb
add
add
add
add
or
add
add
add
add
in
sbb
add
add
add
add
or
add
add
add
add
in
sbb
add
add
add
add
or
add
add
add
add
in
sbb
add
add
add
add
or
add
add
add
cli
sbb
add
add
add
add
or
add
add
add
cli
sbb
add
add
add
add
or
add
add
add
cli
sbb
add
add
add
add
or
add
add
add
cli
sbb
add
add
add
add
add
add
rolb
add
movl
add
add
add
add
add
add
add
add
add
add
add
adc
add
add
add
add
add
cwtl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pushf
add
add
add
add
add
add
add
adc
add
in
add
add
add
js
add
or
add
in
add
add
add
addb
insb
add
add
add
add
add
add
inc
add
faddl
add
in
add
add
add
enter
aam
add
in
add
add
add
pushf
inc
add
inc
add
add
add
add
add
add
inc
add
mov
add
add
add
add
add
in
add
add
add
xor
add
sbb
add
in
add
add
add
push
dec
add
mov
add
add
add
add
add
xor
add
in
add
add
add
inc
dec
add
pop
add
add
add
add
add
add
add
frstor
add
add
add
sub
add
add
in
add
add
add
sub
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
in
add
add
add
jo
add
add
add
add
add
add
add
add
add
add
add
add
add
in
add
add
add
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
lea
add
add
add
add
add
add
push
add
pop
add
inc
add
push
add
dec
add
add
inc
add
dec
add
inc
add
add
pop
add
add
inc
add
add
push
add
add
dec
add
add
dec
add
inc
add
or
inc
add
dec
add
push
add
dec
add
inc
add
add
add
inc
add
push
add
or
add
dec
add
dec
add
push
add
push
add
inc
add
push
add
dec
add
push
add
push
add
push
add
dec
add
push
add
dec
add
add
inc
add
dec
add
push
add
add
push
add
push
add
dec
add
push
add
dec
add
add
dec
add
push
add
dec
add
inc
add
push
add
add
add
pop
add
push
add
dec
add
push
add
add
push
add
push
add
dec
add
add
cmp
orb
sti
mov
dec
into
add
fmull
dec
xchg
in
adc
dec
push
mov
stos
data16
insl
test
int
dec
daa
jl
in
outsl
dec
repnz
and
mov
in
cmp
sbb
mov
test
jae,pt
mov
cmp
js
mov
sarb
cmpb
push
ret
jl,pn
mov
or
and
fsts
xchg
sub
cltd
call
popl
pop
mov
pop
std
xchg
or
lret
lods
mov
popa
jle
mov
or
stos
out
jl
adc
ds
gs
push
and
jb
adc
xor
out
mov
aas
or
sarl
mulb
jp
dec
inc
mov
cld
icebp
dec
or
mov
pop
and
dec
xlat
daa
and
jae
push
sbb
dec
dec
jae
testl
mov
or
cmp
in
cmp
and
mov
cli
mov
pushf
hlt
xor
out
inc
fistpll
or
int3
mov
jbe
pop
cmp
lods
cltd
mov
and
ja
in
aaa
xchg
mov
pop
loopne
out
insb
xor
sahf
inc
pop
test
sbb
mov
ljmp
roll
pop
call
mov
insl
mov
cmpsb
sbb
push
fimull
in
jl
ljmp
pop
mov
sbb
push
cmpsb
mov
imul
sub
sbb
aad
or
cmp
sbb
xchg
ret
xchg
mov
push
jbe
sub
mov
and
bound
lea
js
icebp
and
mov
fisubl
outsb
or
cmp
divb
movsb
xchg
andb
xor
loope
push
insl
inc
call
clc
pop
fists
sub
mov
sbb
or
enter
cmp
jb
sbb
xor
cmpsb
xor
les
mov
cmpsl
sub
cs
out
or
fcoms
mov
xchg
js
fiadds
into
or
mov
sub
aas
fs
add
into
lcall
roll
incb
pop
and
jg
hlt
sbb
push
xor
in
outsb
inc
inc
xor
inc
or
jne
dec
jle
lea
and
mov
dec
push
dec
sub
dec
movsb
push
push
ret
loope
push
fsubr
xlat
rcr
leave
mov
repz
cld
sub
push
adc
sub
sbb
add
fdivp
dec
aas
fnsave
in
and
xor
and
add
or
xchg
push
mov
insb
and
sahf
mov
out
mov
enter
rorl
push
push
loope
and
filds
xchg
sbbl
jae
mov
inc
mov
jmp
cld
aad
ret
jecxz
push
jle
bound
mov
fnstcw
insb
jb
sub
and
pop
jmp
mov
rep
mov
shll
icebp
aaa
inc
jae
ss
call
ret
adc
shr
push
xchg
ds
scas
mov
inc
pop
cmpsl
xlat
orl
sti
cmp
ja
stos
push
pop
adc
push
cld
xchg
cmpsl
enter
mov
cltd
and
pop
cwtl
or
xor
jno
sbb
jge
je
push
xchg
imul
lods
setns
xor
lods
inc
imulb
push
insb
orl
std
push
fwait
test
pop
push
fsubl
cmp
or
and
in
rcr
lds
test
arpl
dec
loope,pn
mov
movsl
or
sbb
and
pop
add
mov
movsb
std
push
in
addl
ja
inc
dec
jne
popf
rcrb
lea
sbb
cmp
inc
push
imul
pop
daa
lret
nop
fistps
pusha
test
cmpb
or
leave
cld
aad
pop
cltd
jp
lods
add
out
test
testl
fs
fcoml
repz
ret
popf
cs
pop
arpl
xor
ds
lahf
cs
inc
leave
je
out
jo
ljmp
inc
mov
dec
sub
sti
inc
rol
mov
and
or
inc
mov
sbb
pop
push
out
add
push
jno
pop
arpl
aam
pushf
pushf
loopne
rol
adc
fprem
decb
jle
sbb
lret
and
mov
mov
push
xchg
ret
push
add
jecxz
or
adc
dec
jbe
imul
inc
iret
repz
and
fwait
push
pop
jg
jmp
cmpl
out
pop
push
das
outsb
push
scas
inc
sbb
call
icebp
pop
push
xor
adc
imul
ss
cmp
ljmp
pop
mov
jg
stos
mov
xchg
jbe
cmp
movsb
add
cmpsb
std
jg
push
int3
cltd
add
call
mov
cs
ret
add
leave
mov
pop
fsubrs
and
test
andl
std
jecxz
pop
adc
dec
mov
pop
je
mov
pop
inc
pop
xlat
aas
lods
add
outsb
jno
sub
out
popa
push
add
inc
mov
sbb
push
and
push
and
test
mov
nop
sub
cmp
dec
jecxz
aaa
mov
push
lcall
lahf
lock
jle
or
sbbb
xor
cmpsl
dec
popf
sub
popa
or
std
out
xchg
mov
pop
fsts
dec
push
imul
lods
or
jecxz
xor
inc
mov
dec
clc
sar
aaa
fdivrs
cmp
sbb
mov
insl
mov
adc
pop
rcr
test
call
out
mov
push
add
test
lock
jns,pt
sbb
mov
out
mov
adc
incb
cwtl
jbe
and
sbb
in
stos
mov
inc
popf
mov
sti
lahf
adc
lock
mov
xor
add
scas
mov
aam
outsb
dec
imull
and
cld
dec
ljmp
mov
jne
pop
lret
mov
and
fwait
add
xor
leave
das
je
mov
push
pop
xchg
stc
mov
outsb
push
mov
test
je
pop
mov
out
push
data16
push
push
cmp
inc
adc
loopne
lahf
jmp
mov
testb
test
mov
mov
jecxz
aad
stos
movsl
push
cld
inc
ljmp
gs
adc
repnz
mov
mov
js
sub
mov
es
clc
pop
in
adc
pop
push
orl
ficoml
cmp
aam
inc
mov
sbb
js
mov
mov
imul
ja
jp
cmp
loop
repnz
les
dec
mov
stos
ret
popf
lods
sub
sub
mov
mov
jle
add
gs
scas
fdivs
leave
cmp
outsb
push
aam
xor
jp
inc
add
nop
mov
test
sbb
push
rep
ds
push
stos
inc
test
push
ret
sbb
inc
cld
shlb
out
push
lret
cmpsb
sub
fildl
test
xchg
fs
cmp
adc
mov
jmp
dec
jns
ljmp
and
das
mov
jae
rcll
movsl
xchg
mov
lret
mov
sarl
fs
xor
pusha
xorb
push
imul
sub
cld
mov
xchg
pushf
and
sarl
mov
loop
xor
dec
insb
ja
add
mov
pop
hlt
repz
mov
lock
test
aam
testl
cs
nop
arpl
xchg
push
insb
dec
pop
and
push
test
clc
test
and
jns
outsb
sub
decl
test
bound
jp
inc
jns
inc
imul
mov
int
sbb
cli
jge
dec
out
js
add
xchg
outsb
test
inc
lods
adc
adc
outsb
push
xlat
inc
add
mov
hlt
cs
mov
jb
mov
mov
out
icebp
or
add
xor
and
xor
pop
add
inc
cmp
nop
repnz
or
mov
lds
test
mov
mov
jge
mov
lock
setb
flds
or
in
jp
jg
insl
cmp
pushf
mov
cld
adcb
cmpsl
sbb
pop
inc
aas
arpl
sbb
std
mov
fimuls
sub
jmp
adc
or
pop
pop
jne
inc
cs
hlt
aaa
push
mov
daa
gs
fiaddl
out
icebp
scas
adc
nop
xchg
dec
sub
mov
sub
jecxz
cmp
adc
mov
mul
push
xor
mov
push
ja
mov
jecxz
mov
mov
aam
pop
cltd
insl
scas
cwtl
lods
std
stos
xchg
sbb
sbb
and
or
insl
jno
aad
sarl
sub
adc
and
jmp
sbb
lret
cmp
stos
das
lock
push
push
and
cld
popf
fistpl
inc
mov
xchg
into
mov
push
jae
mov
xchg
les
or
sub
outsb
addr16
mov
inc
push
sub
out
push
jbe
movsb
lods
fisubrs
inc
mov
inc
cs
mov
cmp
inc
jg
aas
stos
push
jbe
fs
ljmp
bound
rclb
adc
cwtl
addr16
stc
push
xor
lahf
jp
insl
jmp
int
cmp
aas
mov
loop
cwtl
lcall
loopne
into
cs
test
jmp
std
nop
leave
jmp
lods
outsl
and
add
out
or
daa
shll
insl
test
cmp
in
xchg
dec
imul
lcall
mov
test
push
aaa
sub
cmp
xor
arpl
xor
adc
jmp
sub
jecxz
gs
jae
int
inc
mov
popa
sub
and
ret
cli
adc
inc
mov
cli
xchg
push
scas
fisubrs
cmp
adc
mov
pop
adc
mov
sub
pop
data16
xchg
lret
and
mov
call
fwait
sbb
out
test
sarb
inc
xchg
shrb
gs
push
clc
movsb
or
pop
sub
dec
imul
mov
cmp
or
xchg
test
scas
adc
sahf
loopne
sbb
xor
icebp
push
mov
pop
xchg
mov
jae
mov
int
fldenv
shrb
or
mov
sbb
jno
mov
inc
sbb
movsb
jnp
bound
and
adcl
flds
push
std
mov
push
xor
jae
xor
cmp
jle
inc
enter
xchg
loope
xor
mov
jmp
cmpsb
jno
xchg
mov
nop
xor
ljmp
lret
cld
push
xor
jl
sbb
lret
xchg
fisubl
dec
mov
sbb
pop
mov
and
cltd
out
nop
inc
dec
imull
jl
add
inc
vunpckhps
adc
arpl
neg
pop
mov
inc
scas
mov
jns,pn
aaa
jo
xchg
sbb
xlat
pop
enter
aaa
mov
pushf
push
out
mov
mov
pop
fs
jnp
rcl
fwait
pop
dec
shrl
xchg
inc
add
dec
and
mov
stos
cmp
test
pop
aad
out
inc
aad
xorl
call
add
sbb
cmpl
xor
and
int
mov
cwtl
cmp
jbe
movsl
ljmp
into
add
lods
shrl
int
jo
mov
add
add
divb
cmp
subb
sahf
repnz
or
lret
pop
fldt
dec
xor
inc
das
or
imul
jp
fwait
xor
hlt
lock
xor
test
mov
mov
nop
and
inc
xchg
jno
sbb
int
adc
mov
mov
push
lods
xor
pop
and
xor
add
sub
pop
mov
xchg
mov
cs
shlb
and
shlb
test
pop
push
mov
lret
cwtl
std
sbb
out
jb
sbb
dec
xor
aad
test
negl
gs
repnz
fs
clc
lds
sub
nop
call
cmpxchg
hlt
cmp
out
inc
xchg
imul
andl
arpl
ss
add
shr
filds
cmpsb
rclb
or
jl,pn
incl
fldcw
shlb
jns
cli
and
mov
xor
inc
mov
gs
mov
call
stos
inc
mov
inc
mov
outsl
ja
inc
push
fs
insl
xchg
pop
cltd
popl
adc
xchg
mov
movsl
or
mov
lret
xlat
ljmp
ljmp
xchg
enter
cld
mov
in
roll
lods
xchg
lods
sbb
icebp
xor
pushf
sub
aad
push
or
pop
loop
jns
and
push
cmpsl
lcall
pop
scas
rclb
sarb
hlt
xchg
lods
mov
addb
pushl
or
sahf
jp
pop
mov
mov
sarb
or
jg
inc
mov
out
iret
cmpsb
enter
cli
mov
test
mov
jle
mov
aas
add
fxch
es
imul
pop
xchg
std
repz
jl
repnz
jno
mov
xchg
ficompl
xor
fwait
xor
sbb
sbbl
xchg
lds
inc
icebp
div
adc
out
pop
les
inc
cmp
push
push
xchg
push
test
ljmp
sub
sub
leave
mov
or
fdivs
jg
jnp
jb
cmc
cmp
sub
push
loopne
rorb
mov
sub
add
clc
gs
push
js
fcoml
idivl
or
sbb
push
stos
sti
rolb
aad
or
push
xchg
sub
jge
dec
cs
rorl
out
pop
add
movsb
inc
dec
cmp
addr16
dec
test
add
ret
jg
mov
push
in
test
lea
jbe
mov
mov
sahf
sub
and
add
cltd
mov
cmp
cli
mov
or
mov
or
bound
jmp
mov
adcb
cmp
rclb
or
dec
add
push
xchg
pop
imul
out
dec
jl
testl
lret
sbb
in
lock
fisubl
ss
mov
ret
andb
std
xchg
out
adc
jmp
pop
sbb
loope
inc
push
jl
ljmp
negl
lea
jns
xor
sub
aam
pusha
push
xlat
outsb
inc
lcall
or
mov
jne
or
and
or
out
ds
rclb
jbe
inc
adc
dec
pop
lods
fsub
inc
inc
and
test
pop
jl
inc
mov
jne
in
mov
xchg
arpl
sbb
lea
out
push
mov
pop
jle
lock
loope
push
xor
std
pop
jo,pt
or
xor
adc
and
loope
lods
sbb
clc
xor
jle
jl
ja
leave
push
or
mov
jg
popa
mov
mov
xchg
les
cmc
pop
lea
pop
xchg
loopne
mov
les
imul
shrb
inc
add
push
xchg
cmp
or
mov
repz
adc
ret
lcall
sbb
push
sarl
or
add
push
or
pop
loop
pop
movsl
add
inc
mov
incb
sahf
xor
ss
jnp
or
stos
dec
lock
in
xor
sub
pushl
pop
cmp
cmpsb
bound
in
pop
gs
les
rcrb
mov
inc
lds
pop
sahf
inc
lods
hlt
sub
pop
and
fsubp
push
adc
data16
clc
cmpsl
mov
hlt
cltd
lea
xchg
stc
xchg
sub
js
cld
adc
cmp
pushf
fs
hlt
or
inc
daa
imul
push
mov
sbb
imul
fs
inc
test
mov
pop
lret
lds
mov
push
jl
jbe
repnz
in
mov
nop
cmp
mov
and
push
mov
sbb
lahf
mov
les
cltd
pop
andl
sbb
cs
xor
jp
mov
sbb
sbb
movsb
xchg
test
jmp
add
dec
push
mov
pop
cmc
jae
sub
or
mov
xlat
xchg
outsl
loopne
lahf
daa
adc
ss
ret
push
dec
sub
test
inc
xchg
jmp
xor
inc
lahf
movsl
or
mov
lods
scas
or
jl
clc
out
icebp
pop
jae
jae
jae
aas
mov
jo
sub
bsf
dec
dec
leave
cmp
jo,pn
pop
xor
adc
rolb
sbb
and
cmpsb
sub
ret
stos
test
cli
in
jbe
cmc
or
dec
insl
lcall
or
in
jl
add
adc
adc
mov
out
lret
test
addb
inc
gs
mov
sbb
sahf
sbb
fcomps
xlat
xor
lock
pushf
xchg
push
int3
std
pop
sub
nop
inc
lcall
pop
loop
leave
pop
adc
aam
mov
gs
scas
shll
jbe
mov
or
mov
or
lods
jg
fmull
flds
movsl
inc
pop
or
movsl
roll
js
or
inc
xor
ficoml
lods
movsl
loop
hlt
inc
sahf
sbbl
jge
dec
cmpb
sti
xchg
mov
xchg
or
mov
inc
add
or
and
fisubl
cmp
ficompl
lret
pop
push
inc
push
dec
or
imul
insl
dec
pop
je
ror
mov
sub
aas
sbb
inc
lret
inc
cmp
sarl
divb
sahf
mov
pop
stos
mov
push
ja
add
aaa
xlat
loope
jg
je
ret
lret
je
dec
es
pop
adc
movsb
test
pop
push
bound
std
sbb
and
andl
adcb
idivb
test
push
pop
popa
xor
push
in
and
mov
cmp
jo
or
adc
jecxz
test
mov
or
cmp
add
xchg
mov
or
push
ja
cli
xor
std
lds
jno
lahf
cmc
imul
mov
adc
loop
xor
arpl
sahf
fbld
xchg
dec
daa
and
add
or
pop
lea
stc
mov
mov
outsb
scas
adc
cli
std
in
mov
jge
or
aad
dec
xchg
stos
aas
shll
mov
jmp
nop
fidivs
jl
inc
push
sub
push
repz
pop
mov
pop
mov
adc
push
in
arpl
sti
cli
stos
out
js
call
into
sti
adc
ss
shlb
dec
lea
push
ror
sub
mov
sti
fistpl
push
sbb
mov
dec
icebp
push
add
xor
popf
bound
addr16
and
pop
fsub
imulb
inc
mov
cli
cltd
popa
in
outsl
mov
dec
mov
repnz
jbe
nop
and
leave
outsb
gs
push
push
call
repz
outsb
cs
xlat
repnz
repnz
lea
adc
test
xchg
mov
and
fimuls
pop
pop
adc
int
pop
sbb
sbb
dec
sbb
mov
cmp
cmp
arpl
push
inc
pop
adc
dec
xchg
neg
jne
add
or
lcall
xor
inc
les
pop
xor
jmp
xor
imul
pop
daa
rcrb
jecxz
ficomps
and
shr
inc
push
sub
out
xor
out
add
and
jg
inc
sbb
pop
fiadds
mov
es
add
sub
push
adc
push
dec
into
mov
stos
outsb
mov
or
ret
adc
pop
test
push
scas
fsubl
push
shl
movsb
jae
pop
jno
rorb
fcomip
mov
jbe
cld
inc
xlat
jb
ss
mov
jno
inc
sbbb
popa
pop
mov
mov
xor
xor
out
enter
adc
and
les
xor
push
in
mov
lock
lods
rclb
mov
xor
cs
add
mov
dec
dec
dec
outsb
push
xor
out
push
repnz
inc
rorb
rorl
adc
int3
push
cltd
add
aad
in
das
jp
mov
push
lea
ja
imul
and
hlt
scas
xchg
and
and
arpl
fstps
addb
dec
and
test
pop
arpl
shrl
cmpsl
cmc
cmpsl
pop
in
sub
test
movsb
lods
test
mov
sub
adc
icebp
loope
mov
adc
inc
in
adc
xchg
mov
and
mov
je
popa
pop
test
or
push
outsl
ljmp
or
sbb
cmp
movsl
ror
dec
jb
aaa
test
cltd
cli
mov
sbbl
dec
ds
jns
mov
pop
addl
mov
ror
dec
push
test
test
mov
push
or
or
adc
mov
adc
mov
testl
mov
or
cwtl
dec
push
imul
movsl
aam
or
fisubrs
and
divl
inc
iret
fcomp
mov
xchg
and
insb
push
pop
push
xor
insb
pop
xorl
adc
inc
xchg
aad
xor
test
adc
sub
cmp
adc
xor
mov
fs
fwait
xor
out
push
movsb
dec
cwtl
cmp
mov
repnz
inc
les
and
add
mov
xor
fcoml
dec
mov
and
call
mov
test
xchg
xor
pop
test
ret
mov
les
mov
lahf
jg
ror
xchg
mov
test
daa
jbe
xchg
sub
mov
pusha
fcmovb
xchg
ds
jns
mov
and
cld
dec
js
cmpsb
adc
mov
loop
mov
fbstp
add
xor
dec
dec
lock
es
and
ret
aam
das
pop
jp
push
pop
fbld
js
inc
cmp
aas
roll
int
mov
or
sahf
sub
lock
lahf
mov
mov
cmp
inc
fs
pushl
mov
movb
mov
andb
enter
insl
and
jbe
xor
dec
stos
cmp
sbb
aas
push
sbb
fiaddl
lahf
inc
add
mov
xchg
sub
aas
fsub
fisttps
lcall
movsl
mov
adc
inc
cmp
mov
mov
push
loope
out
stos
push
repz
mov
adc
fildll
sbb
push
rcrl
and
loope
daa
mov
fcmovnbe
sub
stc
lods
repz
in
fdivrl
mov
dec
xchg
mov
aaa
mov
rolb
std
cmp
out
ss
pop
or
xchg
dec
xchg
and
mov
mov
arpl
cmp
fstl
mov
add
mov
test
push
lea
out
xchg
mov
inc
inc
out
pop
rolb
push
out
roll
dec
mov
out
out
cmp
pusha
mov
mov
jb
fists
dec
jns
sub
inc
lock
mov
push
int3
xorb
ss
push
repnz
pusha
jno
xor
sbb
push
leave
mov
cwtl
imul
dec
mov
fldcw
jnp
jno
lea
cmp
sbb
out
pop
or
sub
sub
inc
inc
lahf
fcomip
mov
call
and
in
adc
push
pop
xchg
aaa
lock
in
jmp
add
xor
or
push
pop
stc
xchg
rclb
imul
sub
sbb
nop
mov
and
mov
leave
gs
jnp
ljmp
aam
rolb
jge
popw
or
xlat
cs
fstp
ljmp
ljmp
sub
jl
stos
adc
scas
or
jecxz
loopne
adc
mov
movsb
mov
xchg
movswl
loop
or
lret
mov
cmpsl
out
fs
std
loope
aas
shld
jmp
repnz
dec
shrb
ljmp
mov
xchg
fs
mov
jmp
fcomps
jle
les
mov
dec
xchg
jne
inc
pop
adcl
mov
mov
push
jg
fmull
dec
mov
das
jnp,pn
inc
xor
push
rolb
div
sub
add
cmp
and
pop
pop
pop
xlat
mov
fs
out
movsb
out
out
movsb
pop
jno
ds
add
lcall
inc
sub
fwait
xlat
and
and
clc
je
es
inc
and
out
addl
pop
dec
out
or
iret
sbb
lahf
test
cmp
jb
jg
popa
pop
fwait
and
pop
jno
cmpsl
xor
mov
aas
mull
in
std
pop
lods
scas
sbb
or
or
leave
das
inc
xlat
jno
add
mov
fisubrl
aad
shll
xor
dec
stos
cli
lret
push
push
loope
data16
stos
lcall
jnp
xchg
pop
dec
sbb
ds
call
ljmp
xor
inc
mov
and
loopne
cs
repnz
xchg
jmp
call
cmp
lahf
push
sbb
xchg
pusha
arpl
arpl
jno
push
jg
xchg
repnz
shlb
out
jmp
mov
in
mov
sbb
inc
mov
mov
je
mov
test
inc
icebp
das
add
adc
icebp
ds
js
int
mov
lret
jle
xor
cmp
leave
fcompl
sbb
sbb
clc
or
cmp
dec
orl
jbe
jno
iret
loop
lret
leave
into
mov
pop
sbbl
sti
repnz
push
dec
dec
jae
and
xchg
mov
adc
iret
rcl
jge
movsl
cld
outsb
sub
js
add
push
mov
incl
pop
add
data16
sbb
and
les
mov
popf
dec
popf
jno
les
cmp
fsubr
sbb
orb
xchg
enter
push
push
jmp
divl
loop
mov
insb
in
repz
mov
sahf
out
ret
xchg
or
fxch
inc
xchg
movsl
pop
sub
push
adc
arpl
rep
inc
lods
stos
pop
pop
pop
pop
shll
push
sti
repnz
fldl
mov
xchg
imul
lret
push
stos
call
orl
mov
sahf
repnz
in
testb
repnz
addr16
popf
xchg
or
fcompl
pop
sbb
xor
xchg
push
pop
ds
stc
mov
push
mov
xchg
lock
xchg
xor
ja
insb
fiadds
jne
lret
cmp
and
inc
and
lds
les
ljmp
inc
dec
add
inc
push
les
shr
sub
and
ss
popa
mov
and
jmp
jecxz
icebp
rcr
sub
aam
and
cld
loopne
xchg
cmp
adcl
sbb
mov
pop
push
xlat
sbb
push
setns
dec
sbb
jo
or
sahf
inc
inc
dec
sbb
das
add
mov
xor
mov
es
test
nop
sub
inc
push
pop
les
adc
cwtl
jae
outsb
daa
imul
inc
or
add
out
jp
mov
push
and
in
or
inc
adc
cmp
leave
or
adc
push
shl
pop
roll
jmp
inc
int
xchg
adc
push
inc
bound
mov
push
xor
sub
lods
mov
and
xor
jle
mov
pop
lret
inc
jl
and
hlt
and
push
dec
sbb
mov
lea
jae
popa
imul
and
add
addr16
inc
inc
pop
pop
pusha
jae
out
shr
mov
call
sub
sbb
inc
lret
xchg
aad
add
fisubs
dec
test
fs
inc
testb
mov
into
pop
test
xchg
sbb
xor
pop
adc
xacquire
xor
rorb
mov
aam
lds
ja
mov
jmp
bound
pushl
inc
nop
pop
outsb
sbb
js
andl
xchg
addr16
outsl
fnstenv
mov
and
sub
enter
cmp
jno
sub
jecxz
fbld
int
mov
std
jecxz
adc
inc
xor
and
push
jns
sbb
es
mov
pop
insl
cwtl
into
out
inc
xlat
push
outsl
sbb
hlt
mov
rclb
ret
andb
lea
push
xchg
mov
xchg
mov
out
and
mov
xchg
mov
jp
scas
in
nop
inc
xchg
loopne
fsub
mov
jg
and
lret
bound
inc
int3
icebp
dec
jp
roll
or
sti
lock
push
in
pop
fwait
or
mov
cmpsl
cmpsl
out
dec
fs
mov
mov
test
test
dec
rorb
cmp
outsb
push
pop
sar
jne
je
insl
and
je
sbb
mov
sub
in
or
fwait
push
ret
xor
mov
lods
inc
fiaddl
fdivrl
jp
pop
push
jnp
inc
pop
das
decb
movsl
hlt
mov
fwait
cmp
xor
push
int3
es
arpl
out
imul
cmpsl
xor
jle
addr16
lods
mov
test
mov
repnz
dec
cmp
sbb
imul
mov
fwait
sarl
cld
dec
nop
xor
data16
inc
add
xchg
bswap
js
xorb
repz
jne
sbb
cmp
je
pop
dec
cmp
dec
repnz
or
fldcw
sbb
jg
dec
push
xchg
xlat
adc
test
movb
es
pop
rorl
repnz
sub
or
xor
pop
ret
cmp
test
mov
fidivrs
scas
mov
rclb
in
xor
jo
ficoml
sbb
push
inc
in
dec
cli
jae
lcall
fs
cmp
xor
lahf
shl
sub
cmp
inc
lods
cmp
add
jge
xor
lods
sahf
movsb
aas
shrl
test
pop
or
mov
push
push
mov
and
cs
xor
mov
rcll
nop
mov
adc
popf
daa
cmp
mov
in
or
pop
pushl
test
sbb
adc
aam
cs
pop
push
add
pop
push
idiv
cs
xlat
add
cld
shl
arpl
adc
cmp
sbb
xor
lcall
cmp
rorb
inc
or
jo
and
jo
lods
call
hlt
xor
inc
fmuls
fistpll
mov
jg
cmp
and
fdivs
das
push
rorl
jne
popa
flds
add
out
xor
pop
sbb
pop
inc
jmp
adc
cs
mov
inc
ret
xchg
fwait
pop
rcrb
sub
push
xor
popl
lret
cmp
adc
je
ds
mov
mov
push
call
cwtl
inc
mov
sub
cmc
mov
inc
shl
jbe
out
enter
cmp
xor
popf
fcomp
popa
dec
clc
jne
cltd
and
fsts
in
xor
test
loopne
sub
sbb
or
add
add
repnz
mov
mov
fwait
rolb
fwait
mov
push
adc
mov
repnz
adc
popa
push
shlb
int
sub
xchg
sub
les
jae
daa
ret
sahf
pop
repz
dec
or
add
and
insb
repnz
xorl
sub
and
nop
push
add
repnz
fldcw
lock
mov
mov
xchg
xchg
cli
xchg
mov
or
ficomps
gs
sub
sahf
lret
ret
and
pop
push
xchg
add
fwait
inc
pop
leave
leave
dec
stc
gs
loope
movsb
lcall
and
jp
insl
push
out
dec
imul
mov
adc
icebp
adc
pop
pushf
push
test
xchg
notl
mov
mov
sarb
fs
mov
and
fsub
or
scas
pop
add
mov
inc
xor
sbb
arpl
sarl
dec
mov
ja
jge
mov
inc
jecxz
mov
aam
mov
cmp
fistl
icebp
icebp
ret
mov
in
dec
sub
out
jne
in
lret
pop
jmp
push
pop
push
mov
jb
push
les
mov
imul
mov
lret
lods
imul
and
mov
lret
pop
mov
lea
jnp
sbb
jb
ds
stos
cmp
sub
nop
mov
stos
cmp
fdivrs
andl
xchg
xchg
movsl
xchg
cmp
sub
sbbb
jae
mov
xor
ret
aaa
push
pop
xchg
inc
jo
lret
adc
inc
notl
mov
xchg
mov
cmp
lea
jae
inc
inc
std
fwait
js
aad
dec
shrb
call
shlb
pop
loopne
out
movsb
push
addb
add
sbb
sbb
inc
mov
popa
inc
call
lret
sub
xchg
in
push
inc
adc
mov
and
hlt
gs
aas
or
jne
xor
dec
nop
dec
aaa
testb
jmp
pop
lret
loopne
dec
clc
lret
mov
aad
jae
cld
xchg
mov
push
jnp
out
aad
jbe
lretw
jge
pop
xchg
loopne
add
and
cmc
and
jg
xor
xchg
into
stc
std
push
jecxz
cld
shll
dec
sub
rcl
loope
iret
stc
or
inc
pop
cmp
popa
inc
adc
int3
cmp
movsb
push
mov
mov
push
mov
enter
in
cmp
in
dec
ss
scas
shlb
into
or
insb
hlt
sub
mov
jne
and
xor
scas
popa
push
ret
lret
mov
es
cmp
pop
cmp
push
mov
imul
movsl
push
pop
adc
jb
add
stos
ja
pop
test
movsl
icebp
xchg
out
loopne
inc
repz
outsl
out
addl
lea
xor
push
arpl
push
ret
vprotw
adcb
sbb
pop
lcall
push
jecxz
inc
or
or
idiv
jae
imul
pop
inc
dec
movsb
cmp
xchg
xchg
lcall
cmp
mov
enter
add
sbb
cs
lea
or
mov
jge,pt
test
test
idivb
cmp
sbb
sub
mov
call
aas
push
push
mov
hlt
mov
mov
mov
inc
jge
enter
loop
mov
movsl
das
hlt
into
test
jle
xor
inc
jecxz
mov
xchg
or
daa
arpl
sub
add
push
rcl
pop
sbb
out
aad
test
pop
clc
pop
mov
dec
mov
cs
out
popa
loopne
sub
sbb
int3
cmp
gs
nop
jl
faddl
or
cli
jecxz
shll
adc
data16
xor
xor
bound
jle
mov
test
mov
call
mov
hlt
negb
sbb
stos
aas
push
pop
test
fildll
cmp
ret
push
mov
mov
inc
repz
in
push
mov
jecxz
mov
ret
movsb
mov
outsl
fmuls
sbb
mov
lcall
fldpi
pop
cmc
xor
cmpsb
std
xlat
push
out
sub
cmp
cmp
icebp
cld
sahf
xchg
inc
in
aam
loope
lock
jmp
pop
insl
pop
repz
push
mov
mov
mov
das
sbb
mov
call
mov
int3
push
pushf
xor
or
inc
mov
cmpsl
mov
aad
aas
push
pop
xchg
cli
mov
sub
or
push
dec
iret
lcall
mov
adc
push
mov
leave
sub
mov
jmp
add
sub
mov
or
sub
test
xor
pop
movsl
movsl
sub
lcall
cltd
mov
pusha
push
jmp
mov
call
shrl
mov
stc
push
popa
or
test
rcl
pop
and
adc
dec
clc
jns
int3
jb
lcall
mov
repz
mov
mov
pop
or
repnz
dec
ja
xor
mov
inc
popa
into
add
ret
popf
jge
pop
mov
lahf
out
and
mov
sbb
cmp
or
insb
sub
in
push
inc
inc
xchg
stos
shrb
mov
shlb
xchg
sub
sbb
jmp
sbb
rclb
and
cmpsl
mov
je
jmp
out
incb
sub
xchg
cmpl
pop
xlat
cmp
stos
call
mov
and
jle
sbb
xor
lods
mov
push
fimuls
cs
lds
mov
inc
add
aad
out
dec
sbb
fisttpll
dec
popa
push
pop
cmpsl
scas
xchg
inc
fstps
jbe
shr
into
jp
cmp
rcrl
xchg
and
add
mov
insb
int3
out
mov
jae
sub
ds
pop
inc
je
std
push
sub
dec
pusha
rcrl
call
adc
js
ret
xor
pop
xchg
lcall
popa
pop
mov
adc
inc
cmpsl
mov
subb
pop
fsubrl
mov
int
mov
add
scas
adc
adc
sbb
and
arpl
push
and
es
jp
lahf
mov
or
xor
not
sbb
and
xchg
mov
push
in
ja
mov
gs
mov
popf
sub
std
fbstp
xchg
or
cltd
dec
mov
aam
xor
push
and
imul
cmp
add
stc
ret
outsl
push
hlt
jle
xchg
jns
push
jo
inc
jnp
jecxz
xchg
push
stos
int3
dec
cmpsl
ficompl
sti
jl
mov
jmp
stos
ret
mov
cmp
mov
int
ss
stos
ret
pop
jmp
sbb
mov
out
shll
xor
mov
scas
fsub
sbb
and
scas
cmc
and
or
aaa
repnz
mov
jmp
loopne
xchg
imul
and
push
aas
lcall
xchg
scas
or
daa
mov
movsl
dec
js
push
cmp
dec
in
mov
test
push
jg
push
sub
int
jmp
jo
stos
scas
dec
push
iret
push
loop
push
and
xchg
xchg
pop
sub
ret
jb
notl
xchg
mov
mov
stos
loope
mov
dec
inc
or
scas
test
clc
add
and
sbb
mov
int3
jnp
xor
jno
push
pop
outsl
and
outsb
call
inc
leave
shlb
push
push
dec
dec
dec
sub
aaa
adc
pop
repz
sbb
inc
pushf
mov
pop
xchg
xchg
add
pusha
int3
insl
sbb
mov
mov
push
jns
add
jns
out
cmc
jecxz
fcompl
call
sub
popf
into
scas
xchg
jno
fxch
jo
ds
mov
imul
sub
clc
stos
xchg
fldcw
mov
xor
fiadds
inc
nop
jo
jbe
pop
mov
jl
add
out
test
jge
dec
into
aam
sbb
push
aaa
sbb
xchg
xor
pusha
loop
pop
or
dec
push
and
mov
mov
push
scas
in
into
push
and
mov
call
jb
adc
push
sahf
stos
clc
repz
prefetch
or
cli
repnz
cmp
int
xchg
aas
or
ja
xchg
dec
or
push
pop
xor
pop
xor
outsl
mov
pusha
jns
xchg
cld
add
mov
push
jb
sti
inc
gs
mov
aad
mov
aas
adc
test
out
and
ret
cli
mov
jp
fisttpl
js
dec
push
sbb
and
std
int3
jo
or
mov
and
adc
lods
pushf
jg
das
mull
add
mov
cli
shr
pop
push
xlat
stos
stc
mov
jle
xchg
xor
inc
mov
add
fwait
xchg
pop
and
push
lods
add
sub
push
stos
sub
xlat
and
and
jecxz
out
adc
out
jmp
xchg
ljmp
les
sti
fwait
into
add
std
adc
stc
test
hlt
cmp
or
push
jecxz
das
mov
dec
enter
fwait
test
andb
cmp
sub
sbb
leave
lret
addr16
and
cmpsl
or
mov
sub
fisttps
and
test
inc
and
xchg
mov
das
xchg
jnp
sbb
cmp
fwait
mov
or
cwtl
lcall
out
cs
cmpsl
aam
aaa
out
jbe
dec
sarl
sub
adc
and
dec
or
mov
xchg
cmp
cmp
cmpb
jo
addr16
jb,pt
pushf
pop
les
addr16
inc
jge
inc
addb
add
and
cltd
sbb
aam
jnp
inc
mov
stos
push
testb
adc
push
mov
mov
insb
sbb
mov
shl
arpl
sub
jo
xchg
push
mov
cmp
xlat
sub
and
jmp
jne
sti
cwtl
std
xchg
fnstsw
std
cmp
xchg
lods
adc
repz
cmp
int3
dec
jmp
aaa
addr16
and
xorb
adc
or
push
jns
sub
mov
ds
ficompl
test
push
call
rcll
call
and
or
int
xchg
fldt
out
nop
inc
lock
inc
jno
xchg
inc
cmp
mov
ljmp
repz
mov
jae
inc
cli
out
fcmovnb
leave
lcall
adc
or
sbb
or
or
bound
les
pop
mov
popf
subl
and
dec
mov
push
and
mov
and
sbb
iret
into
dec
mov
call
add
scas
mull
test
cmc
in
add
leave
neg
mov
xor
pusha
adc
mov
lret
movsb
dec
push
stc
movsl
decb
cmp
jg
cmp
pop
hlt
int
mov
popa
leave
in
dec
aad
in
jle
jle
aad
test
xchg
and
mov
out
adc
fidivs
adc
mov
or
fldenv
ja
gs
cmp
jge
sbb
lret
inc
lock
ret
and
add
lods
mov
dec
xchg
adc
dec
test
ja
arpl
int
dec
fisubrl
loope
cmp
or
jb
and
jmp
mov
push
inc
mov
sub
sbb
fildl
outsb
jmp
push
andl
fs
rorb
insb
das
xor
mov
push
fwait
movsb
lods
loope
shl
aad
aad
xchg
push
push
arpl
mov
push
xchg
cmp
ret
loop
fstpl
adc
std
call
xlat
andl
leave
out
and
mov
sarb
pop
je
mov
test
in
add
test
sub
sub
pop
data16
cltd
popf
outsl
cmp
jmp
push
aad
jo
adc
adcl
jecxz
orb
push
mov
push
cmp
cltd
mov
nop
pop
mov
into
dec
repz
lcall
mov
lahf
stos
push
pop
sbb
jae
or
cmp
mov
xor
shrl
mov
repnz
imul
lea
dec
loopne
test
dec
test
inc
dec
fwait
iret
loop
fwait
inc
mov
clc
add
jb
fiadds
mov
jo
imul
ret
arpl
fildl
and
sti
in
fistps
ja
xor
cmp
ja
mov
mov
in
mov
mov
test
ss
cmp
push
and
adc
add
addb
nop
push
xchg
icebp
mov
and
mov
mov
inc
or
insb
ret
mov
in
inc
mov
cld
mov
jbe
xor
ret
pop
ljmp
clc
mov
inc
cmp
adc
fwait
int
rolb
mov
push
pop
mov
fldl
cmp
addr16
mov
cmp
sbb
es
mov
jp
mov
fnstenv
inc
lods
jmp
rcll
test
mov
and
push
add
stc
xchg
fs
mov
mov
pop
int3
mov
mov
fdivrl
lcall
mov
hlt
mov
mov
fs
jp
sbb
mov
loopne
or
lock
cmp
adc
loopne
test
lea
repnz
enter
pop
pop
jp
imul
xchg
adc
sbb
inc
adc
push
mov
cmp
stos
test
in
jmp
aas
insl
test
flds
rorb
mov
std
xchg
test
gs
ss
fcompl
pop
xchg
sbb
ds
fcmove
lcall
movsl
cmpsl
in
push
notb
icebp
jp
inc
xchg
lahf
loopne
push
sub
jmp
mov
data16
shlb
mov
int3
add
fxch
insl
and
or
clc
dec
ds
stos
adc
hlt
ficoms
push
leave
pop
cmpsl
sub
pop
push
push
sbb
xchg
sbb
ficompl
lcall
cmp
lods
pop
lods
xchg
inc
mov
fs
dec
mov
filds
stos
push
jb
roll
ret
imul
arpl
insb
pop
cld
mov
jbe
lods
adc
rolb
pop
out
ret
inc
iret
shrl
adc
mov
jbe
mov
orb
fwait
sbb
xor
mov
hlt
rorl
andps
xchg
nop
sar
sub
cmp
xor
xchg
xchg
stc
clc
inc
jno
push
mov
scas
pop
and
mov
in
pop
lret
xchg
cmpsb
cli
cwtl
push
mov
adc
popa
xchg
mov
sbb
and
outsb
xchg
roll
push
sbb
cmp
mov
pushf
dec
or
cwtl
push
gs
inc
mov
loope
xchg
add
imul
pop
arpl
xchg
jle
lcall
cmc
sub
or
test
mov
lock
test
xchg
add
arpl
cmpb
popf
dec
add
or
cmc
bound
push
push
rorl
shrl
push
cs
push
sbb
sbb
jb
mov
add
lahf
adc
mov
mov
iret
sub
and
sbb
xor
sub
jns
mov
sarl
cltd
and
sti
stc
cmp
arpl
adc
push
push
inc
add
movsl
and
xchg
add
jg
jnp
mov
movsl
dec
sbb
std
pop
subb
adc
lret
stos
lea
ja
xchg
fwait
inc
xchg
lret
push
bnd
or
shlb
movsl
cmp
inc
nop
nop
js
push
cld
cltd
pop
test
call
push
sarl
ret
outsl
jle
pop
lock
inc
cmp
mov
cs
sub
ja
sub
cmp
outsl
out
stos
cli
sbb
test
xor
cmp
dec
push
aas
cmpsb
mov
xor
jbe
jbe
dec
sub
test
inc
fwait
dec
inc
xor
push
add
arpl
addb
and
stos
mov
jp
cld
pop
repnz
cmpb
cltd
dec
sub
push
or
mov
bound
add
scas
movsb
push
monitor
sub
inc
std
mov
mov
fadd
ljmp
xchg
pushl
data16
adc
or
sbb
popf
data16
test
mov
xchg
add
mov
in
lds
addr16
jmp
aam
arpl
and
inc
imul
bound
push
inc
cmp
cld
xchg
das
mov
cli
ret
dec
and
push
pop
int
fs
call
xor
test
mov
xchg
push
or
gs
mov
inc
dec
xchg
inc
shl
mov
cmp
jo
mov
jno
mov
in
dec
mov
mov
mov
leave
insl
jbe
cmp
out
inc
dec
cmp
mov
push
pop
hlt
jne
xchg
inc
jne
cmp
xor
and
xchg
lods
mov
add
popf
cmp
pop
out
pop
popa
mov
sarb
dec
in
imul
lcall
jl
pop
jns
push
loope
addr16
dec
mov
xor
inc
stos
mov
pusha
jle
aad
call
lret
ret
addr16
icebp
jp
add
sbb
iret
mov
mov
in
add
mov
lahf
hlt
jl
fnstsw
fcomps
nop
push
sbb
scas
jno
mov
add
or
iret
and
push
arpl
test
dec
add
sub
push
adc
xchg
add
insb
jp
sub
pop
push
add
mov
mov
sub
test
je
push
imul
pop
inc
ret
xchg
sub
js
push
pusha
add
test
lahf
add
mov
jmp
ss
dec
fstpt
cmp
das
sbb
lods
jecxz,pt
mov
xchg
sub
xor
xchg
fidivrl
cli
in
inc
aam
cwtl
movsl
fwait
push
enter
pop
test
repnz
popf
gs
out
std
into
xchg
stos
sbb
ss
dec
int3
pop
pop
je
cmp
adc
mov
cmpsb
mov
push
dec
repz
mov
out
mov
out
dec
pop
mov
out
mov
xchg
or
out
aam
xchg
or
mov
cmp
xchg
or
xchg
rcll
lcall
mov
mov
daa
mov
jns
mov
mov
sub
leave
movb
or
sahf
push
sti
and
scas
movnti
imul
je
cmpsl
dec
push
mov
jmp
cmovp
int3
pop
sarl
aam
or
outsb
leave
push
lods
mov
jb
pushf
es
cmp
roll
shlb
mov
push
push
mov
fidivs
dec
push
sbb
pop
rclb
test
inc
sarb
scas
out
ret
push
mov
sub
jp
sar
inc
push
dec
xor
int3
mov
shlb
xor
and
jge
gs
mov
nop
or
xchg
sti
adc
add
sub
pop
inc
bound
repz
pop
and
gs
ljmp
dec
into
mov
or
mov
pop
lahf
int
bound
imul
cli
jnp
xchg
fdiv
dec
sub
jno
out
and
ljmp
btc
mov
xchg
add
xlat
leave
es
pop
jo
or
lea
jns
mov
mov
test
rcr
jmp
inc
insb
clc
pop
test
out
ds
cmc
loope
cli
jns
adc
enter
repz
pop
xlat
and
mov
movsl
lret
inc
push
xchg
repnz
mov
test
in
adc
xchg
lods
mov
sti
out
lret
push
lret
and
xor
cltd
add
addr16
iret
aad
inc
shlb
inc
pop
and
jmp
mov
inc
mov
leave
push
mov
add
adcb
jp
jo
mov
loop
jecxz
push
inc
movsl
xor
ret
inc
clc
mov
pop
repz
adc
adc
out
dec
pusha
std
push
rorb
pop
div
xlat
icebp
repz
sub
lret
pop
xchg
push
ret
and
lock
pextrw
cmp
aam
or
jmp
out
out
sbb
stos
rclb
fidivl
pop
shll
rcrl
mov
cld
add
cs
mov
dec
mov
dec
fstl
push
xchg
mov
or
mov
repnz
test
cltd
dec
jecxz
bound
xchg
js
insl
neg
lahf
rcrb
jbe
jns
mov
pusha
cmp
fbld
xchg
xorb
clc
insl
xor
fldcw
inc
ret
mov
fs
lea
sbb
in
xor
jg,pn
xor
and
mov
out
jb
jae
sbb
inc
test
push
shlb
movsl
std
out
adc
sarb
out
ljmp
loope
push
das
sub
rol
lea
mov
pop
xchg
xchg
cmp
or
jmp
gs
mov
and
xor
mov
or
aaa
jmp
fsubrs
outsl
mov
insb
nop
icebp
cmp
insl
push
scas
lcall
xchg
and
xor
loopne
jns
in
insl
movsb
and
icebp
adc
fidivrl
mov
aad
xchg
sub
mov
mov
fisttps
lods
xchg
xchg
adc
call
je
jae
xor
in
clc
sub
jmp
pop
xor
mov
testl
aam
mov
inc
lcall
inc
cltd
das
cmpsl
adc
je
lods
or
fstpl
aad
and
filds
pop
mov
push
adc
sub
sub
adc
pop
xor
repz
insl
pop
cli
jle
in
xchg
stc
rclb
shlb
scas
aas
ss
sub
pop
subl
es
cli
mov
test
lods
xor
jno
pop
fcompl
loope
push
mov
mov
arpl
cs
push
lahf
jg
lret
test
int3
or
mov
fsub
adc
enter
popf
loop
fstpt
lcall
xor
les
jg
lds
cs
cli
js
push
adc
test
divb
mov
mov
jg
js
test
in
mov
xchg
cmpsb
mov
imul
push
or
or
sub
xor
pop
mov
jle
out
lods
pop
loopne
jle
fcom
pop
ljmp
mov
jb
mov
or
mov
stos
and
push
push
adc
sbb
push
pop
dec
or
ljmp
icebp
sbb
xor
mov
adc
sbb
inc
insl
inc
repnz
ja
leave
pop
rorb
jno
mov
adc
outsb
aas
adc
imul
out
nop
jne
jl
fnstenv
lret
jg
outsb
pop
dec
push
cmpl
lret
das
mov
notl
dec
xor
enter
mov
test
das
inc
mov
push
testl
or
cltd
test
in
insl
cwtl
outsl
mov
jl
enter
sub
jbe
aam
das
subb
xlat
mov
pop
movsb
pusha
sbb
jb
test
and
pop
arpl
hlt
mov
sbb
sbb
stos
or
fadds
stos
pop
add
loop
lcall
jmp
jb
cmp
cmc
in
adc
adc
cld
jge
mov
push
enter
sbb
movl
loope
ds
mov
pop
sbb
icebp
jno
jg
xor
lea
icebp
xlat
fmul
dec
int3
lret
add
pop
push
mov
pop
push
push
mov
inc
ret
or
inc
inc
push
push
arpl
inc
xor
daa
sbb
inc
add
loop
jbe
lock
insb
int
stos
xchg
fwait
mov
sub
push
ror
sub
or
ds
push
xchg
xor
divl
inc
enter
add
mov
shrl
pop
xor
sbb
xor
add
cmp
int3
xor
mov
inc
inc
push
mov
add
xchg
pop
push
add
cli
adc
cmpsl
int3
mov
enter
push
push
ljmp
mov
lock
cli
lods
lock
fstpt
inc
add
jge
fwait
and
xchg
fs
add
jg
lock
sarb
ss
push
push
cmp
jp
push
leave
mov
aas
xchg
mov
pop
lods
stos
add
xchg
clc
cmpsl
shl
add
fldenv
ror
ret
pushf
movsl
popf
pushf
add
shlb
and
pop
jo
fs
inc
loopne
les
or
jmp
cmpsl
daa
not
mov
or
push
fcoml
sti
sbb
dec
sub
or
inc
movsl
sub
jno
lea
daa
imull
xor
cmp
aas
mov
push
sbb
cld
push
mulb
xor
lcall
addr16
popa
xor
mov
leave
fnstsw
aas
gs
idivb
mov
cmp
sbb
adc
int
std
xor
in
arpl
cmpsb
adc
lcall
adc
lea
add
into
push
dec
pop
add
lret
testl
or
mov
pop
jp
push
cmp
mov
sbb
xlat
insb
iret
movsl
dec
xor
xlat
adc
pop
push
ss
cmp
jmp
es
imul
mov
mov
inc
push
adc
fisubs
cld
dec
ds
dec
ss
push
call
cwtl
push
popf
iret
inc
hlt
xor
cmp
xor
aad
mov
bound
xor
test
mov
cmp
mov
pop
in
cmp
xchg
mov
xchg
jno
iret
shrb
mov
xor
pop
or
pop
sbb
aas
iret
call
rcrb
and
fstp
mov
cs
mov
je
sahf
adc
sbb
fucomi
ret
fstl
inc
xor
addr16
xlat
aad
xchg
add
inc
lcall
clc
dec
sub
adc
into
mov
xchg
xor
mov
test
fidivrs
pop
scas
xor
test
into
es
pop
dec
mov
pop
cltd
pusha
or
pop
es
mov
stc
loope
mov
pop
imul
mov
sub
inc
fnstsw
xchg
cmp
push
std
add
xor
cmp
scas
cs
subb
xchg
cmpsl
lret
mov
or
fisttpl
mov
scas
mov
shlb
xor
rclb
test
push
test
jge
fmull
sbb
push
sub
jge
mov
std
push
mov
mov
stos
lods
pop
adc
mov
insb
imul
jecxz
push
fildl
push
sub
push
push
ret
inc
ret
and
xchg
sbb
loope
xchg
mov
pop
pushl
xchg
or
outsl
jp
ret
bound
jae
pop
movb
inc
pop
mov
call
insb
add
xor
out
jp
mov
pushf
je
or
sarl
insb
xlat
outsb
sub
and
bnd
pop
pop
sbb
xchg
mov
sbb
out
dec
in
sbb
pop
inc
test
xor
movsb
inc
xor
cmpsb
xchg
mov
ds
sbbl
rorb
jg
scas
sbb
or
push
cmp
aas
pop
inc
imul
cmc
cmp
xchg
sub
jmp
push
sbb
outsl
mov
push
xlat
in
aam
adc
roll
mov
hlt
addr16
mov
mov
neg
rcl
icebp
jnp
pop
out
push
jbe
in
or
ja
lods
pop
imul
xchg
add
mov
divb
sbb
mov
in
mov
sub
or
adc
call
fdivrs
dec
mov
inc
imul
je
pop
sti
push
jl
or
lahf
outsb
fchs
jp
and
xor
aam
adcb
push
loope
pushf
icebp
and
pop
cli
mov
iret
or
lcall
or
stc
push
xchg
test
jbe
jmp
in
fsts
xor
popa
or
cmp
add
icebp
mov
popf
test
and
imul
adc
jno
lods
jns,pn
gs
stc
xor
inc
pop
jecxz
add
pop
jmp
xor
mov
scas
inc
push
mov
out
sbb
lret
insl
jmp
sbb
rcrl
cmp
shll
and
ss
das
mov
mov
push
sub
dec
xchg
add
aam
mov
cmc
xchg
or
jbe
sbb
inc
pop
mov
leave
ror
jne
ja
sbb
pop
cld
cmp
cmp
sub
lea
filds
and
inc
inc
mov
adc
xor
aam
cmc
stos
or
ljmp
scas
out
repnz
jge
sbb
jg
test
jbe
test
mov
in
call
out
sbb
xchg
jecxz
fbld
insl
movsb
imul
fstl
in
mov
jp
push
roll
and
scas
jno
loop
pop
xchg
loopne
ret
xor
pop
lret
add
sub
aas
mov
push
xor
mov
mov
jne
jmp
xchg
adc
ja
sub
push
cmpsb
xchg
dec
mov
out
stos
loopne
out
xchg
fcoml
mov
fcom
adc
outsl
std
push
mov
arpl
pop
icebp
insb
mov
lret
loopne
adc
fdivl
mov
int3
test
outsb
and
test
pop
lods
xor
outsl
mov
push
sbb
push
add
mov
ss
push
and
out
sbb
push
mov
mulb
fwait
idivl
fwait
stos
sub
imul
decl
hlt
cwtl
mov
dec
nop
leave
lahf
pop
pop
mov
stos
pop
push
push
push
inc
notb
aaa
lods
mov
inc
stos
sbb
dec
mov
lods
xchg
sbb
cmpsb
push
arpl
loope
mov
mov
insb
jl
dec
xchg
call
adcl
dec
std
sub
cmpsl
gs
mov
mov
stos
jmp
imul
shll
xor
dec
mov
aas
cwtl
jmp
adcl
gs
lret
jne
adc
data16
je
xor
les
pusha
pop
iret
enter
js
cmp
insl
mov
mov
or
lds
imul
xor
dec
sub
sub
xorl
push
fwait
or
add
test
pop
jnp
jo
sub
jne
sub
sbb
fisubs
notl
sti
mov
nop
mov
and
shrl
hlt
es
aaa
add
sarb
xlat
dec
sbb
add
inc
mov
sub
jle
push
mov
jne
jle
xchg
adc
xchg
loope
push
lock
rcr
testl
xor
add
inc
adc
pop
and
outsb
xor
cwtl
in
insl
out
repz
out
cwtl
nop
es
cmp
push
stc
dec
dec
mov
fstpt
es
sub
cmp
das
dec
cmpsb
mov
jl,pn
test
mov
adc
jmp
cmp
lods
mov
mov
jae
std
adcb
jno
inc
jbe
mov
push
clc
mov
lock
arpl
inc
mov
add
xchg
lds
lock
notb
aad
inc
sbb
xor
clc
sti
jp
retw
ljmp
mov
call
hlt
pop
in
cltd
inc
jg
rcrl
ret
mov
pop
outsb
jmp
insb
daa
add
jg
inc
movsl
sbb
addr16
xchg
icebp
inc
test
in
or
test
push
xor
sbb
dec
mov
push
std
loopne
inc
adc
pop
jg
dec
jl
ret
std
aam
mov
jle
stos
int3
movsb
cmp
push
pop
dec
in
cmp
xor
push
jmp
lods
gs
int
inc
add
out
insb
sti
fs
or
cli
lds
nop
pop
pop
mov
mov
mov
mov
sub
and
add
inc
repz
ret
push
xor
fdivs
hlt
loopne
or
push
icebp
fistl
or
mov
mov
sub
fs
scas
scas
bound
xor
add
loopne
cmp
outsb
adc
mov
jae
sbb
and
jp
xor
or
push
and
pop
ret
sti
mov
mov
test
xchg
outsl
lcall
sub
sbbl
sbb
mov
dec
xchg
enter
pushf
add
mov
xor
mov
mov
jbe
int
iret
cmp
int
jg
cmc
fstp
lret
mov
mov
push
and
cli
loopne
xchg
mov
leave
lds
sbb
mov
inc
gs
mov
xchg
sub
loope
repz
push
cmpsb
ficomps
dec
pop
ss
sbb
mov
or
out
sbb
cmp
xor
loop
ret
cmp
push
add
sahf
popl
xchg
push
and
loopne
movsb
and
jb
int
jno
js
into
xchg
and
or
cli
cltd
movsb
xchg
xchg
test
jbe
mov
xchg
out
repnz
mov
and
add
push
arpl
in
vandps
idivl
push
jbe
insl
jmp
pop
inc
sub
sub
pop
push
ds
das
add
dec
daa
rol
sbb
scas
push
rolb
cmpsl
mov
mov
xor
or
mov
add
movsl
push
cmp
inc
pushf
dec
nop
lods
inc
insb
push
mov
lock
in
push
xor
jmp
imul
push
jo
xchg
js
hlt
fsubrl
and
mov
lods
pop
adc
jecxz
adc
lods
push
jg
repz
cmpsb
cwtl
stc
add
push
in
fdivs
jno
push
jns
std
ficompl
mov
add
clc
aas
or
fcompl
mov
dec
leave
insb
mov
adc
xchg
orl
or
pop
imulb
xchg
adc
dec
mov
push
push
dec
mov
sub
push
inc
jb
bound
loopne
into
adc
icebp
repnz
and
call
insl
xlat
pop
or
repz
out
xchg
push
lods
sbbb
push
sahf
out
jp
jecxz
xor
mov
jnp
xchg
inc
ret
scas
idivl
das
mov
test
sti
pop
push
imul
stos
lcall
inc
jbe
js
jb
push
pop
int3
jle
adc
jmp
aam
pop
repnz
jo
test
pop
inc
pop
inc
and
rcrb
repnz
jp
mull
inc
pop
pop
stos
enter
in
pop
arpl
nop
and
adc
push
hlt
add
pop
fcmovnb
mov
dec
shl
jge
imul
push
cs
inc
adc
xor
ror
test
insl
neg
cmp
xchg
or
mov
add
aas
repnz
insb
jl
jl
addr16
outsl
and
testb
cmpsl
mov
xchg
iret
in
dec
inc
dec
and
aas
sahf
add
pop
mov
mov
or
adc
mov
fisttps
ja
filds
dec
mov
xchg
testl
fdivrs
pop
cmpsl
pop
ficoml
add
addr16
lds
cmc
imulb
mov
pop
das
cmp
addr16
cld
dec
inc
and
lock
jg
fnstenv
frstor
movsl
aam
push
dec
les
sub
int
cmpsb
or
sub
fisubrl
xchg
or
cltd
incl
pop
jo
jae
mov
mov
leave
iret
adc
inc
sti
testl
fisttps
ljmp
jg
sub
push
ljmp
in
add
push
call
fsubr
adc
xor
insl
lret
pop
aaa
repnz
ret
ja
mov
sub
dec
jmp
pop
movsl
cmp
dec
sarb
fs
test
mov
in
cmp
dec
dec
pop
cltd
mov
cmp
dec
or
pop
pusha
xchg
in
inc
stc
iret
jle
mov
mov
add
xchg
in
mov
fisttpl
inc
jo
arpl
test
inc
cmpsl
jg
cmp
sar
mov
ret
dec
sub
mov
pushl
jmp
in
jecxz
mov
fcmovnb
popa
imul
cmp
hlt
inc
data16
das
sbb
out
aas
sub
xchg
sbb
adc
dec
push
packsswb
jle
ja
cltd
nop
pusha
dec
or
popf
adc
jle
xchg
je
dec
sub
cwtl
leave
dec
add
lods
add
int
call
sarb
sbb
frstor
or
mov
stos
cli
push
pop
test
inc
mov
mov
jmp
dec
lods
lcall
out
rcll
pushf
aas
out
adc
lods
xchg
sub
dec
or
mov
jmp
popa
pop
push
pushf
lret
js
mov
cmp
std
push
enter
sub
xor
mov
cmp
cmp
mov
out
cli
sti
and
or
pushf
aam
movsb
mov
dec
mov
pop
in
mov
lods
and
in
call
xchg
jg
inc
pop
das
dec
mov
push
mov
outsl
pop
call
div
xchg
cs
mov
adc
or
andb
shlb
xchg
adc
inc
cmc
sbb
xlat
aas
mov
pushf
cli
fldlg2
mov
jns
lock
pop
jmp
mov
rcll
cmc
lods
inc
sbb
pop
jno
jo
xchg
out
lea
lock
or
test
in
dec
insl
in
mov
push
jmp
adc
mov
lock
leave
xlat
lret
xor
and
das
mov
sti
stc
push
push
pop
rolb
pushw
gs
pop
pop
pop
jnp
test
dec
jb
mov
adcb
mov
adc
inc
je
ds
data16
cmpsb
stc
sub
lret
xlat
fwait
mov
arpl
push
xor
or
pushf
fsubrs
ret
sbb
inc
and
out
push
clc
and
mov
dec
xchg
or
jge
add
xor
mov
adc
fistl
add
mov
add
add
in
xlat
in
mov
pop
add
cmp
ljmp
popf
rclb
dec
jg
addr16
jae
das
idivb
in
jp
inc
xor
movsb
cmp
and
into
mov
jns
ljmp
into
jg
mov
mov
ret
mov
or
pop
ja
xchg
mov
inc
and
lods
jbe
imul
pusha
das
dec
divb
pop
jg
mov
or
imul
cmpsb
filds
fildll
dec
jb
js
je
sub
shl
fwait
in
or
mov
or
dec
push
in
mov
jne
arpl
lock
mov
mov
push
je
fdiv
fwait
je
cmpsl
push
xchg
mov
inc
cmp
sbbb
sbb
cs
cmpsb
inc
cmp
add
test
sahf
in
test
xchg
flds
mov
hlt
mov
movsl
inc
inc
enter
cmp
adc
sub
dec
mov
pop
and
aam
sbbb
adc
test
shll
jae
mov
repnz
xlat
inc
js
xchg
aad
leave
mov
ljmp
js
test
daa
sub
enter
dec
pop
test
cli
xchg
xlat
gs
iret
movsl
in
js
jbe
xchg
xchg
mov
jle
test
and
std
sbb
pop
dec
inc
clc
pop
shll
push
mov
daa
mov
push
mov
js
mov
push
sarb
cmp
cmpsl
or
or
gs
push
idivb
in
inc
je
arpl
sub
mov
test
adc
cmp
insb
jle
cmc
fisttpll
out
fldl
or
dec
sti
cmp
ja
push
or
idivl
sbb
cmc
add
cmpsb
jge
dec
ret
sti
pushf
and
mov
in
mov
mov
jbe,pn
sub
push
jo
adc
in
cmp
mov
lock
out
adc
mov
push
pop
mov
or
movsl
jge
inc
repnz
stos
rcrb
or
mov
inc
cld
mov
mov
and
jp
lock
popf
push
or
scas
push
outsl
sbb
dec
mov
sti
icebp
js
push
or
dec
jg
pop
in
mov
mov
mov
dec
fdivp
xchg
pop
push
push
clc
xor
cmp
inc
ret
mov
and
imul
fs
adc
enter
stc
cmp
pop
stos
imul
xor
and
insb
es
fprem1
pop
add
imul
popf
jge
sbb
ja
push
inc
adc
sbb
mov
mov
sub
cmpsb
out
push
and
or
add
sbb
push
mov
repnz
jge
sbb
jne
scas
add
or
inc
into
cmc
mov
pop
dec
lret
andb
mov
out
mov
adc
ret
sbb
dec
cmp
mov
add
mov
lea
pop
sub
inc
or
cli
push
pop
add
stos
or
xchg
xor
dec
push
mov
jge
jl
into
pop
push
and
scas
insb
mov
insb
pop
enter
cli
insb
gs
repnz
jle
popa
sarl
rorl
push
test
or
clc
lret
xchg
jb
xrelease
fbld
lcall
jno
rcrb
push
mov
or
shr
pop
repz
aaa
xchg
dec
nop
fidivrs
mov
imul
std
jecxz
add
aas
call
sbb
mov
nop
push
shl
sub
fidivrs
jl
aam
jbe
test
je
pop
mov
insb
ljmp
cmp
mov
cmp
jb
cli
push
jnp
or
lea
sub
sbb
add
xor
mov
jae
sbb
add
cmc
or
add
push
dec
mov
subb
adcb
cmpsl
scas
adc
add
jae
xchg
sbb
add
mov
push
es
xchg
cmp
push
cmpl
inc
pushl
lods
xchg
sahf
lret
mov
mov
push
fisttpll
pushf
inc
inc
xor
rcl
xor
add
xchg
scas
push
clc
pushf
cmp
inc
aad
gs
and
push
jp
aas
iret
cmp
sub
fidivrl
std
sub
mov
dec
movsb
addr16
loope
clc
pop
nop
inc
push
daa
mov
cwtl
loope
and
scas
popl
push
push
mov
int3
inc
inc
push
xchg
push
loope
dec
xlat
xchg
enter
add
and
call
loope
lahf
stc
inc
rolb
jns
iret
jecxz
jae
inc
pop
out
cs
repnz
repz
aad
orl
jno
pop
push
cmp
cmp
xor
adc
cmc
mov
mov
shlb
mov
fistpl
shr
idivl
jl
in
fsubrs
dec
lret
sbb
pop
call
test
imul
jp
push
pop
add
push
pusha
push
cmp
jbe
mov
cwtl
jp
aas
jmp
dec
movsl
rcll
or
inc
or
dec
add
mov
push
sti
jmp
pop
rcr
imul
jg
lea
pop
out
ret
mov
mov
inc
adc
push
mov
mov
outsb
mov
cmpl
cmp
add
sbb
stc
cmc
ljmp
push
jae
sbb
jmp
mov
rcrl
in
cwtl
movsb
pop
shll
mov
or
lea
cmp
dec
cwtl
xchg
mov
test
jge
inc
comiss
jb
cwtl
ds
dec
adc
cld
psllq
adc
add
pop
jns
fwait
in
pop
mov
mov
int
push
loope
cld
add
cmc
sbb
xorl
inc
faddl
jb
sub
jmp
movb
xchg
cld
sub
mov
cmp
add
loopne
xchg
dec
pop
xor
cmp
mov
std
add
das
pop
hlt
jmp
adc
mov
cmp
inc
cmpl
cmp
outsb
cmp
jecxz
cli
or
bnd
in
adc
fsubs
cmp
aaa
or
pop
mov
int3
xchg
and
mov
jnp
stos
stos
fstps
cwtl
jp
out
in
into
iret
sbb
movsb
aad
mov
jg
adc
out
dec
adc
xor
outsb
xor
inc
cmpl
xchg
pop
push
jmp
scas
movsb
sbb
dec
jmp
and
cli
jle
fadds
mov
daa
cwtl
fmuls
sub
mov
push
mov
xchg
xor
add
lahf
adc
rolb
mov
and
aam
pop
dec
mov
lahf
int3
xchg
fmuls
lret
cld
mov
jae
xor
cld
jnp
jnp
sbb
icebp
and
add
dec
xlat
cmpsl
mov
dec
aam
cmp
int
iret
sub
pop
cmp
aad
sbb
and
jl
push
jge
adc
in
repnz
sub
fdivr
iret
stc
add
dec
push
mov
adc
test
imul
pushf
testl
adc
xchg
sub
adc
lods
fisubrs
pop
inc
jbe
cmpsl
orl
scas
pop
outsb
fs
add
pop
xor
dec
clc
push
arpl
cltd
leave
shrl
and
xor
pop
movb
or
insl
push
xchg
mov
stos
mov
test
jae
or
mov
add
rol
frndint
sub
cld
fcompl
sbb
inc
jnp
push
adc
adc
test
sbb
jmp
rorl
mov
sbb
or
not
mov
and
mov
sub
push
nop
sub
sahf
insb
xchg
mov
jmp
dec
pop
xchg
int3
arpl
lahf
inc
mov
loop
call
cmp
push
shl
mov
adc
jecxz
sbb
leave
dec
inc
adc
push
pop
bound
lret
neg
or
imul
pusha
fidivs
hlt
add
and
sbb
cs
sbb
jbe,pt
push
test
out
push
pop
xchg
test
popf
aas
hlt
lock
addr16
ja
jb
sbb
sbb
mov
in
les
jg
sbb
dec
dec
repz
shl
mov
scas
mov
push
cmp
sbb
movsl
movsl
push
inc
fisubrs
pop
jle
sub
pop
out
mov
and
int3
int
lods
in
mov
int
cmp
cli
inc
inc
mov
fildl
out
dec
xchg
sub
aas
sbb
ljmp
ds
les
scas
mov
loopne
out
clc
mov
cmpsl
sbb
imul
pusha
dec
cmp
mov
fcmovnb
or
xchg
dec
jno
xchg
sub
sbb
mov
jle
lret
scas
test
fnsave
mov
in
pop
cmp
or
in
jae
pop
lods
sbb
sub
arpl
jno
push
es
jecxz
repz
jl
xchg
adc
ljmp
fnstenv
jp
out
adc
mov
xor
int3
or
adc
cs
mov
je
lods
jmp
mov
ret
hlt
add
insb
in
cmp
sub
loopne
loop
xlat
mov
or
lret
fnstenv
enter
addr16
and
sbb
jg
pop
fwait
cmpsl
pop
leavew
sbb
outsb
xor
int
xor
sub
in
call
lods
rol
xchg
es
inc
test
xchg
outsl
andl
xchg
rclb
es
inc
push
test
mov
mov
mov
mov
pop
mov
mov
mov
inc
sbb
xchg
pop
iret
add
mov
jmp
gs
ljmp
sub
cmp
adc
push
hlt
lret
shr
fstpt
jl
push
mov
cmp
test
ret
jle
bnd
pop
std
movsb
xor
loop
xlat
jl
in
in
and
xor
cmp
xchg
sbb
in
push
cmpsb
xorl
jb
pop
mov
jmp
xchg
sub
xor
leave
fistps
mov
push
or
jbe
fs
xor
pushf
andl
adc
test
pop
in
loop
jg
out
push
xchg
mov
pop
pop
push
aas
rclb
dec
hlt
sub
ret
daa
cmp
in
out
mov
xor
push
jle
mov
lea
leave
push
outsl
loope
cli
jl
push
sarl
pop
pop
ficoms
mov
bound
or
jbe
cli
mov
push
and
add
daa
call
enter
jae
in
ja
mov
lahf
shlb
inc
out
jae
inc
jge
pop
unpcklps
movsb
adc
notb
and
lahf
jne
jge
aam
push
pop
cmpsl
adc
pop
jmp
dec
add
and
movl
push
shlb
les
into
mov
jo
xchg
cmp
sub
jecxz
fcoml
inc
xchg
push
mov
mov
sbb
jne
rolb
ljmp
cmpsl
sbb
mov
call
hlt
sub
aad
mov
cld
mov
and
pop
fsubrl
push
add
xor
in
inc
aaa
cltd
mov
arpl
ficompl
ficoml
loopne
outsb
xchg
and
mov
je
mov
in
sti
jno
out
or
aas
mov
movsb
rcrl
xchg
fstpl
push
pop
cltd
gs
movsb
sub
xchg
fs
adc
mov
jg
add
leave
adc
pusha
or
sbb
stos
mov
push
mov
push
inc
das
pop
inc
xchg
stos
xor
and
jg
ret
and
scas
push
dec
cmpsl
push
out
fs
cld
mov
mov
xor
sub
ss
dec
xchg
imul
mov
dec
xor
adc
xor
or
or
leave
fldenv
cmpsb
ret
aaa
popl
fldcw
jo
cmp
push
nop
imul
pop
fcoml
cltd
cmpsb
fsubrs
sub
mov
jb
mov
dec
xor
or
outsl
ret
cs
xor
push
inc
sub
inc
lret
enter
sti
mov
stos
push
mov
push
adc
popf
into
jmp
pop
ret
jnp
lcall
push
mov
loopne
pop
push
dec
sub
push
mov
jo
pop
or
popa
cmpsl
and
cld
adc
xchg
sbb
mov
fwait
subl
fisubs
js
pop
movsl
jb
iret
xchg
and
test
pop
jae
outsl
mov
xchg
aaa
addl
int3
push
filds
aaa
stc
cmpsl
sbb
sub
xchg
stc
imul
cmpsl
jl
mov
sbb
imul
addr16
subl
jbe
pop
aas
fadd
mov
push
movsb
not
lea
xchg
data16
push
outsl
pop
test
arpl
or
test
xchg
mov
pop
mov
or
jp
mov
movsl
hlt
aaa
xchg
and
loopne
adc
mov
pop
lret
add
clc
mov
dec
sti
subb
push
add
lret
in
aaa
xchg
xor
xchg
jae
daa
pop
test
or
pop
lods
call
or
mov
and
or
pop
xlat
int3
sbb
pop
mov
xor
das
mov
lock
push
out
loopne
insl
inc
sbb
std
xor
ljmp
sets
sub
call
enter
mov
or
out
fdivrl
cmp
in
stos
jl
mov
bound
or
cli
xchg
xchg
push
ss
daa
xchg
adc
test
test
cli
sbb
adc
mov
scas
mov
les
roll
sub
mov
mov
sbb
imul
pop
inc
push
mov
push
jbe
mov
jle
mov
scas
cmp
jle
pushf
push
sub
data16
inc
stos
pop
jecxz
jge
sarb
test
push
jb
and
iret
sbb
mov
jge
mov
repnz
jecxz
insl
fnsave
out
fadds
shll
dec
or
pop
fdivrs
mov
xchg
clc
fwait
orl
add
out
adc
sub
addr16
cmpsb
ljmp
xor
and
lret
mov
pop
sarl
gs
xor
push
push
xchg
xor
adc
adc
mov
ret
ss
adc
popl
mul
in
xchg
adc
jae
xchg
mov
inc
cmp
xchg
cmp
mov
push
push
test
pop
lds
repz
inc
push
repnz
in
push
mov
jb
jmp
test
pop
adc
lcall
arpl
je
add
push
dec
sbb
mov
sub
xor
aam
inc
jge
sar
je
jbe
add
jbe
and
into
lcall
pop
in
push
mov
jns
or
push
jbe
push
inc
es
pop
and
loopw
xchg
fs
je
mov
pop
imul
leave
fsts
mov
out
push
or
mov
imul
push
in
sti
mov
insb
mov
loop
out
call
dec
fdivrs
sbb
lock
lods
fcompl
inc
jbe
test
lock
loopne
and
mov
roll
nop
dec
in
cwtl
jle
div
sti
rcr
jmp
push
fnsave
dec
adc
xor
out
xor
insb
mov
js
std
push
pop
pop
dec
loope
add
andl
inc
dec
testl
lret
vmptrld
xor
pusha
adcl
stos
push
xchg
lods
aam
mov
arpl
adc
lret
sbb
xchg
adc
test
jmp
loop
jmp
jnp
sbb
mov
jmp
out
inc
xor
mull
lret
sti
dec
xchg
or
imul
insb
or
aam
addr16
shl
test
inc
push
roll
pop
test
xor
insl
pop
push
repz
xor
add
ficomps
jae
imul
xor
lret
jae
xlat
sbb
adc
icebp
arpl
testb
scas
arpl
es
cmp
dec
sahf
mov
aaa
xchg
lods
ss
push
mov
dec
jge
cmp
push
je
insl
inc
int3
mov
bound
cmp
jge
jl
test
pop
cmp
bound
push
mov
fsubl
sub
push
sub
mov
inc
mov
jecxz
out
pop
subb
sti
arpl
mov
adc
mov
lret
sarb
xor
iret
scas
cmpsb
sbb
aaa
inc
mov
lret
mov
cli
push
clc
push
push
xchg
scas
push
jmp
dec
sub
fidivl
jb
cmp
loopne
std
sub
outsb
fiadds
pusha
out
out
dec
mov
adc
out
pushf
iret
lds
cmp
iret
and
mov
gs
sub
subl
jne
adc
add
test
fwait
mov
mov
loop
or
mov
xchg
jecxz
fstpl
dec
fmuls
cwtl
jg
sar
or
pop
jg
test
imul
mov
enter
adc
lret
fdivrl
adc
sahf
stos
insb
jns
aad
pushf
or
cmp
dec
push
pop
xchg
cmp
subl
lahf
imul
mov
jp
mov
xchg
mov
lods
adc
outsl
add
add
and
pushf
xchg
jnp
je
pusha
ja
xchg
sbb
xor
fildl
sub
dec
dec
je
xchg
fdivrl
idiv
mov
out
mov
je
jbe
or
dec
lret
adc
inc
fwait
test
mov
jge
pop
sbb
xorb
gs
in
pop
clc
mov
rorb
subb
cmc
inc
iret
rolb
inc
repnz
cmc
loop
and
jae
push
mov
sbb
mov
lcall
lret
cld
jmp
add
mov
adc
fiaddl
cmc
jbe
jae
lods
mov
sub
data16
push
push
push
scas
mov
fmull
cs
je
decl
cwtl
push
xchg
test
ret
xchg
cwtl
nop
mov
stc
pop
jae
rorl
outsl
hlt
fcomi
xchg
jl
dec
cli
in
mov
std
aas
fldt
stos
mov
mov
lea
lods
inc
sti
dec
jo
and
lea
push
fld1
mov
dec
sbb
mov
lahf
rcll
xchg
xchg
aas
mov
leave
add
jp
inc
scas
addr16
cmpsb
pop
jg
addr16
lret
pop
cmp
fdivp
pop
call
sub
xor
in
lret
mov
push
into
icebp
push
add
cwtl
int
add
out
xchg
push
jg
int
sub
test
sarb
mulb
lahf
xchg
neg
jns
xchg
arpl
sbb
loop
adc
mov
bound
mov
sbb
and
mov
leave
fwait
lret
outsl
jb
xor
movsl
sub
push
mov
lock
or
jg
out
shll
mov
pop
popa
arpl
enter
dec
outsb
or
fs
push
sub
clc
xchg
scas
lods
mov
and
xchg
mov
adc
in
icebp
jg
stos
pop
mov
popf
dec
shll
adc
lcall
mov
out
rclb
icebp
push
mov
loopne
mov
lcall
mov
jo
les
punpcklbw
sbb
ds
fwait
icebp
cwtl
push
pop
inc
loope
or
fimuls
std
dec
dec
mov
enter
gs
stos
in
mov
inc
xlat
sbb
dec
xor
sbb
cmc
mov
into
jbe
mov
push
cmp
cmp
dec
mov
adc
mov
add
divb
adc
mov
pop
lods
lea
pusha
pop
push
jge
mov
fstps
sbb
das
ret
jae
sbb
stos
add
add
mov
dec
scas
dec
xor
jbe
xchg
mov
mov
stc
lret
adc
xchg
add
dec
sar
pop
vpsubsw
push
mov
lods
or
and
lods
mov
sub
mov
in
andl
repnz
pop
mov
xchg
sub
adc
dec
sahf
cwtl
mov
bound
jb
inc
mov
push
jmp
mov
jl
daa
xor
popa
shl
adc
inc
stos
stc
xchg
add
mov
push
jae
pop
test
mov
fbstp
xchg
std
inc
inc
aad
shlb
movsl
sub
jo
and
mov
add
adc
out
shr
enter
lcall
and
mov
push
pusha
mov
jne
inc
fcmovnbe
push
jbe
jae
push
inc
std
repnz
in
pop
push
lods
cmp
cmpsb
imul
push
cltd
stos
adc
and
bound
xor
push
cmpsb
cmpsl
shrl
out
jne
inc
int
in
test
mov
inc
cltd
insb
adc
jg
push
mov
in
xchg
xchg
jno
cmp
rorl
push
jne
dec
ja
sahf
fidivrl
in
adc
push
add
ret
cmc
push
lea
js
pop
add
scas
jle
in
call
movq
push
push
in
mov
jecxz
test
cli
sbb
xchg
lods
aaa
push
xchg
fimuls
sbb
cmp
and
in
lea
jmp
cs
test
jecxz
pop
out
ret
div
sbb
lds
aaa
lods
notl
pop
xchg
lret
dec
push
in
sarb
incl
xchg
rcll
int3
pusha
mov
je
in
cltd
xchg
pop
push
xorb
and
push
dec
add
xchg
shlb
cmpsl
sahf
xor
int3
test
adc
in
pop
daa
popl
push
cmpsl
push
out
rolb
adcb
insl
cmp
or
and
pop
pushf
fildl
sub
enter
mov
pop
in
sub
pusha
jns
xchg
push
ljmp
sahf
jmp
push
inc
lods
inc
sbb
out
xchg
enter
stos
nop
notb
jnp
or
mov
dec
shr
ja
inc
into
inc
cmp
data16
inc
pop
push
dec
dec
ljmp
ret
push
nop
dec
js
sti
xchg
and
or
int
ljmp
jecxz
or
adc
mov
and
test
xor
push
push
imul
test
pop
xchg
mov
loopne
mov
xor
fiaddl
push
xchg
stos
cmpsl
movsb
icebp
cld
inc
pusha
xchg
inc
mov
dec
stos
shlb
push
popf
cmpsb
std
jmp
sahf
aas
mov
lret
xchg
pop
leave
sbb
data16
neg
sbb
pop
in
adc
fmull
sbb
nop
stos
dec
fwait
int3
push
jae
pusha
or
loope
add
xor
gs
jmp
loopne
rorb
xor
lods
mov
mov
sub
push
sarl
pop
roll
dec
fcompl
adc
fbstp
xor
cmpsl
in
cmp
repnz
jbe
lea
popf
fdivp
or
push
movsl
mov
test
pop
enter
or
adc
xchg
pop
into
jecxz
lds
and
mov
imul
cs
pop
and
inc
sbb
movsl
jnp
inc
nop
iret
lret
add
jge
mov
movsb
jg
fstp
ret
jecxz
adcb
mov
push
orl
divl
dec
xchg
mov
xchg
dec
mov
sahf
iret
cli
js
cmp
adc
jge
push
add
pushf
fs
mov
xor
scas
jecxz
xchg
loop
mov
push
divl
xor
jmp
ret
pop
rcr
dec
addl
and
mov
test
mov
xor
adc
cmp
adc
add
adc
std
push
push
popa
push
add
sub
cli
push
inc
outsl
inc
cmp
fsubrp
dec
push
xchg
mov
and
adcb
addr16
je
pop
call
inc
push
push
in
out
ror
arpl
test
fwait
subps
xchg
in
arpl
pusha
testl
pop
push
pmulhuw
out
push
je
pop
inc
lock
aad
inc
xor
sub
sbbl
cltd
in
fsts
pop
std
ljmp
adcl
repnz
out
xchg
add
dec
pop
and
adc
push
fwait
jmp
ror
mov
ficoml
popa
cmp
sarl
xor
pop
push
pop
adc
xorl
rorl
call
into
mov
cmc
mov
and
dec
xor
xchg
outsb
divl
mov
jno
jl
mov
adc
leave
stos
mov
lcall
cmpsb
mov
movsl
mov
add
pop
jno
adc
jne
xor
pop
pop
pushf
adc
xchg
jge
pop
xor
imul
adc
mov
popf
rcrl
shl
lcall
pop
jle
cmp
jno
jmp
mov
fcmovu
pop
xchg
or
mov
sub
jecxz
jmp
and
mov
xor
xchg
xor
push
add
movsl
into
stos
or
mov
push
push
aaa
add
std
xchg
test
inc
pop
fistl
or
jp
adc
flds
stc
xor
add
push
jne
lods
mov
ret
xchg
test
dec
sub
movsl
pop
xlat
insb
mov
sbb
jp
pop
mov
lods
jmp
mov
pushf
rorb
loope
mov
loop
fdivl
rcr
shrl
int
mov
adc
cmp
testb
add
in
dec
jge
push
dec
fmuls
faddl
ja
lods
scas
xor
int3
enter
rorb
mov
dec
cmp
data16
push
test
adc
rorl
enter
dec
xchg
adc
fildll
cmpsb
xor
inc
mov
subl
xlat
rclb
lods
add
inc
dec
adc
test
mov
pop
outsb
jg
mov
dec
clc
shl
cli
mov
and
xor
jbe
add
arpl
bound
dec
adc
mov
fists
rcrl
imul
mov
cltd
xchg
lods
idivb
ficomps
push
sbb
mov
xchg
popf
clc
call
mov
jo
ret
mov
stos
lock
adcb
inc
ret
push
cmp
addr16
push
push
push
rcrl
rcll
dec
andb
mov
arpl
sbb
xchg
sbb
push
push
push
test
out
or
bound
xchg
mov
in
les
push
xchg
out
test
dec
ret
lret
or
popa
ficompl
push
xchg
jg
dec
jnp
fs
adc
in
xchg
iret
sbb
cmp
sti
mov
pop
push
mov
andl
dec
aas
jle
insl
pop
dec
sbb
sbb
xlat
fs
loop
das
sbb
jle
add
cmp
imulb
pop
jecxz
push
jnp
mov
mov
add
xchg
ja
cwtl
xchg
mov
push
popa
mov
push
lods
scas
insb
jne
ss
pushf
lods
nop
js
and
xchg
adc
push
pop
out
data16
push
bound
inc
xchg
sub
out
sahf
push
cltd
je
adc
mov
das
js
es
rcrb
pop
dec
daa
sbb
fbld
pop
jmp
dec
int3
movsb
mov
sbb
push
sbb
icebp
dec
or
insl
add
mov
mov
outsb
pop
inc
dec
mov
adc
rcll
popa
imul
pop
inc
push
adc
or
data16
pop
sub
cld
sbb
cmp
push
mov
rclb
scas
cmpsl
into
lods
negl
adcb
ja
lea
inc
and
ja
imul
sub
subl
cmpsl
jp
cmp
call
add
pop
repnz
jbe
stos
add
fldln2
cmc
push
jne
xor
cltd
fildll
das
lcall
repnz
jno
inc
dec
sbb
dec
popl
add
dec
test
mov
in
pop
sti
pushf
lahf
pop
and
pop
pop
rcrl
sbb
sbb
insl
xchg
add
gs
shufps
cmp
movsl
dec
push
mov
ljmp
and
incb
mov
fsubp
lea
shl
jmp
outsl
stos
cmp
je
repnz
push
jecxz
scas
sub
push
pop
adc
mov
pop
mov
daa
add
pop
data16
xchg
cmpsb
hlt
nop
adc
cmpsb
jmp
sub
mov
jmp
sbb
push
mov
inc
push
hlt
cmpsb
adc
cmp
xor
mov
aas
sbb
mov
mov
xchg
test
mov
xor
cmp
leave
sub
ss
mov
xor
xchg
addr16
sub
into
in
push
sub
and
pop
adc
aam
lcall
aad
call
inc
xchg
sbbl
mov
das
pop
pop
cmp
xchg
xchg
repz
cld
mov
rcrb
mov
pusha
fs
xchg
sub
pop
ja
dec
fld
subb
mov
outsb
out
jo
inc
cli
mov
sbb
push
rcll
cmovge
sub
push
aam
mov
maskmovq
negl
mov
mov
inc
call
rol
sub
aad
mov
in
jge
dec
xor
aam
sbb
stc
xchg
push
cltd
mov
cmpb
fstpt
stos
xor
adc
xchg
insb
dec
out
fmull
mov
or
mov
mov
mov
mov
ljmp
pusha
scas
xor
aad
adc
mov
sbb
xchg
xchg
scas
adc
pop
mov
jmp
pop
sahf
shlb
jge
xchg
scas
into
add
leave
ret
and
nop
loop
cltd
repnz
sti
in
add
jnp
cmc
dec
push
rep
loop
xlat
mov
in
fs
jbe
pop
xor
xchg
in
mov
fildl
mov
jbe
xor
fwait
out
imul
test
mov
xchg
mov
aam
xchg
cmp
dec
dec
mov
or
or
xor
aam
push
jecxz
or
and
or
ret
adc
mov
push
incl
lods
mov
mov
push
lret
cmpsb
jp
push
cmp
xor
movsb
ret
sbb
add
ficompl
mov
inc
js
ss
cmp
cmpb
push
insl
in
lcall
scas
fsubrs
test
lahf
push
int
mov
pop
lahf
cmpl
sbb
sbb
adcl
negl
std
in
stc
das
bnd
xchg
scas
popa
mov
add
inc
cld
mov
mov
mov
mov
fidivl
lock
notl
pop
cmc
xchg
ret
inc
scas
shlb
shrl
add
xchg
test
fldcw
out
jmp
out
sub
inc
mov
xor
and
movsb
or
cli
daa
fsubl
arpl
xor
cmp
push
jo
shr
shlb
add
mov
cltd
and
loopne
dec
or
and
outsl
jle
mov
jne
retw
push
push
fisubrs
dec
hlt
inc
lods
int3
outsl
xchg
xor
pop
outsb
pop
in
or
out
addb
mov
int
mov
cmpsb
mov
fcmovnb
lock
loopne
mov
in
xchg
sbb
mov
hlt
stc
cmpb
xlat
popa
push
push
lcall
cmp
jl
sti
out
sub
xor
pop
loopne
pushf
lods
in
push
jecxz
push
subl
inc
aas
cli
push
lds
shlb
push
dec
sbb
mov
jb
pavgb
inc
cmpsl
cmp
pop
dec
lock
mov
lods
imul
inc
add
inc
mov
cmc
inc
push
push
leave
int
push
les
lock
dec
and
push
cmpl
xchg
bound
jb
and
add
mov
sahf
movsl
test
xchg
in
pop
cmp
test
xor
mov
sub
aad
push
fists
jp
mov
xchg
adc
sbb
test
mov
jle
cmc
repnz
pop
jmp
sbb
gs
jg
daa
xor
loope
loop
rolb
adc
aad
jne
sub
sub
cmp
cmp
sbb
and
inc
lds
or
sbb
push
scas
imul
add
out
aas
pushf
std
cmp
sahf
sbb
fdiv
inc
data16
pop
out
cmp
cli
ret
jl
add
or
scas
jmp
leave
sbb
add
and
int
popf
lcall
lret
mov
cmp
pop
cli
xchg
adc
jne
cmpsb
add
jbe
pop
sbb
mov
push
jb
mov
mov
rclb
inc
mov
ljmp
xchg
lods
notl
jg
mov
int3
fbld
mov
stos
scas
stc
clc
pop
icebp
jp
xor
jmp
pop
out
adc
jns
sbb
mov
fwait
dec
loopne
xchg
mov
pop
sahf
insb
mov
jno
or
inc
jge
mov
mov
lret
clc
lods
lret
mov
arpl
scas
imul
gs
mov
mov
mov
mov
scas
xchg
dec
lahf
sub
aad
lahf
into
dec
loope
in
or
pop
xorl
mov
orl
cmpb
cmp
js
jmp
add
jmp
jg
ret
mov
test
xor
cmpsl
push
rcll
imul
dec
push
out
sub
fsubrl
movl
arpl
jmp
bound
cltd
mov
dec
cmp
leave
loopne
mov
or
cwtl
in
out
shrl
lcall
jo
or
mov
or
insl
or
lods
insb
dec
popa
imul
pop
dec
adc
popf
mov
sbb
std
movsl
in
in
mov
mov
mov
add
mov
stc
adc
data16
ret
or
mov
dec
dec
loopne
pop
test
push
jbe
aaa
jbe
and
fimuls
fcom
add
sbb
jno
xchg
xchg
and
inc
jg
sarb
push
lods
or
aaa
add
test
jle
inc
xor
test
outsl
mov
iret
daa
shll
imulb
pop
daa
jbe
push
pop
jbe
jne
xchg
icebp
mov
pop
xchg
mov
das
sbb
aad
popf
pop
les
aam
rcrb
jle
sahf
cmpsl
pop
push
cs
sbb
mov
inc
cmp
cld
mov
out
loope
rol
jb
add
jb
popf
cli
dec
mov
dec
sbb
mov
sbb
mov
cmp
addl
test
mov
push
inc
bound
wbinvd
pop
inc
leave
jbe
lcall
xchg
xchg
out
out
mov
pop
dec
in
mov
decb
aad
push
cli
sbb
dec
in
cmp
es
pop
xchg
inc
imul
divl
ret
pop
lds
int3
push
arpl
int3
cmp
cmpsb
rcrb
nop
xchg
push
cmp
mov
enter
into
or
out
or
daa
pop
cwtl
pop
lock
mov
xchg
mov
xchg
pop
scas
jmp
repz
scas
stos
mov
in
pusha
pop
mov
lds
push
pop
or
ret
cmc
psrad
jns
mov
mov
scas
add
cli
jnp
aam
and
jecxz
add
dec
mov
mov
pop
jne
mov
xor
into
inc
xchg
shll
cmpb
add
loopne
int3
arpl
xor
xchg
push
decb
rcrl
sarl
iret
jo
je
test
je
leave
dec
das
cwtl
jo
imul
dec
das
lods
aaa
jecxz
mov
popf
ret
ret
pop
lret
scas
mov
sub
popf
ret
lea
aad
mov
loop
mov
sbb
leave
mov
and
push
jp
or
mov
mov
mov
es
data16
mov
cmp
into
or
test
mov
sub
xchg
mov
out
sbb
sbb
mov
xchg
int
jle
sti
fwait
mov
pop
adc
jo
sub
aas
pop
adc
icebp
xor
orl
or
mov
pop
push
sbb
into
xchg
fistps
pop
in
mov
roll
mov
test
jbe
mov
dec
in
push
lret
test
mov
popa
adc
xor
and
mov
mov
push
jns
out
inc
jb
inc
iret
aaa
fs
movsl
pushf
dec
fcoms
fs
jns
mov
or
add
add
mov
sub
xchg
mov
fimull
in
inc
inc
pop
inc
test
sbb
lods
push
pusha
insb
add
rcrb
xchg
ret
jno
push
dec
mov
out
pushf
call
pop
je
lret
mov
inc
mov
mov
shl
adc
and
push
aas
xor
arpl
sti
pop
push
int
test
shll
lret
js
xor
cmp
and
shl
adc
fistpll
sti
ss
xchg
mov
mov
mov
xor
fsubp
sub
inc
lods
pop
movsb
insb
jl
sti
xchg
lods
je
aaa
jns
arpl
test
sbb
repz
loope
lcall
lds
mov
jl
popa
dec
repnz
pop
aam
mov
sub
pop
jmp
fwait
insl
xor
jae
xor
cmp
pushf
adc
mov
push
jmp
imul
int3
iret
clc
push
xchg
pop
ljmp
jp
mov
lcall
fcmovnb
adc
cli
in
xchg
repz
enter
sbb
xor
int
sbb
test
pop
mov
lock
idiv
ficoms
iret
and
jl
js
xlat
sbb
dec
insb
and
add
in
in
jb
cs
adc
sbbl
dec
dec
jae
testb
orl
jne
fwait
loop
or
push
imul
dec
xor
fucomp
sbb
scas
mov
mov
mov
lods
sahf
lock
mov
scas
push
stos
lahf
lods
fwait
aaa
mov
test
mov
insl
fidivs
aam
pop
ljmp
mov
data16
dec
js
jnp
test
mov
mov
daa
gs
mov
fstp
clc
jecxz
pop
scas
cmpb
pop
mov
or
loope
aam
movsb
outsb
add
idiv
push
sarl
neg
fcomi
aas
push
mov
fadd
hlt
adc
dec
lea
call
movsb
hlt
inc
pushf
fbstp
push
push
or
jb
jg
repnz
call
mov
adc
mov
aad
lret
je
pushf
mov
sub
or
lcall
lds
pop
jne
fdivr
ret
cli
arpl
xor
xchg
cli
xchg
daa
mov
sub
mov
cs
je
popa
in
stos
mov
xlat
add
jne
sbb
pop
lret
or
sete
adc
jg
add
rcll
sub
sub
es
dec
cmp
ror
or
dec
lcall
sbb
rcrl
call
inc
jnp
pop
xor
and
scas
or
jnp
rcrb
outsw
adc
pop
aas
in
xor
push
loope
xchg
rcrl
sti
jo
lds
sti
add
test
push
mov
xchg
adc
mov
push
sbb
mov
pushf
stos
xor
xor
jno
sbb
filds
sbb
pop
mov
xor
jmp
mov
rolb
repz
pop
lds
jge
cmc
pop
sti
adc
stos
mov
pop
scas
or
xor
and
pop
fwait
inc
sbb
jne
cs
push
or
pop
dec
dec
pop
adc
cmp
or
mov
dec
adc
mov
mov
sarl
ss
bound
and
ja
pop
fs
lret
push
repz
loope
pop
icebp
ss
mov
xchg
adc
cmp
dec
cwtl
mov
mov
lods
std
jo
fiadds
add
stos
dec
add
out
test
fs
bound
mov
into
xchg
jle
jae
sbb
mov
mov
aaa
divl
mov
aam
sbb
ja
jnp
jp
and
cmp
push
adc
jne
xor
dec
cmp
cmpsl
pusha
mov
data16
hlt
mov
loope
bound
cmp
iret
jecxz
ret
and
inc
mul
lods
andb
dec
and
pop
lds
sahf
fcomps
and
bound
test
lret
cmp
jae
insl
or
es
adc
cmpsb
lock
mov
cmc
repnz
outsb
mov
enter
int3
adc
mov
jecxz
shll
mov
mov
jne
pop
imul
fsubs
mov
pop
idiv
xor
or
mov
frstor
add
ljmp
pop
leave
aam
dec
mov
mov
or
inc
int3
out
sahf
mov
or
jo
clc
daa
in
jg
sbb
mov
and
stos
mov
ffree
repz
dec
push
mov
push
push
mov
mov
xchg
das
fisubl
sbb
sbb
cli
leave
sti
push
xor
pop
in
aam
ds
lock
cmpsb
xor
dec
bound
fdiv
scas
popa
mov
dec
jae
sahf
fcoml
and
pop
stos
cs
pop
filds
in
dec
dec
gs
xchg
pop
sub
fwait
pop
imul
fsubl
sub
call
es
jno
pop
out
es
jne
icebp
repz
jmp
and
sahf
out
pop
push
ss
out
add
insl
xchg
out
divl
adc
js
test
mov
pop
mov
inc
cwtl
mull
lods
pop
hlt
aad
popa
push
xchg
icebp
adc
inc
push
loope
aas
xchg
push
leave
jl
repz
fcmovu
sbb
pop
mov
into
imul
stos
push
mov
into
js
mov
sub
sbb
lock
adc
movsb
fcomps
js
sbbl
std
sbb
jmp
mov
mov
dec
lret
lods
repnz
pop
dec
pop
and
mov
test
sbb
cmp
push
dec
scas
mov
cmp
cmp
pop
cltd
sarl
push
rcrl
test
dec
jp
popa
jle
add
jmp
sub
mov
insb
sub
push
fidivs
orb
xchg
test
rcrl
cmpsb
andl
loopne
fs
mov
movsb
push
call
popa
movsb
ret
pop
cmp
push
fs
xor
cltd
movsb
dec
push
in
mov
cmp
scas
sub
repnz
or
hlt
addb
cmp
mov
mov
outsl
cmp
ficompl
cmp
xchg
push
aaa
movsb
pop
jbe
push
sbb
mov
fidivrs
jae
mov
pop
xor
inc
popf
repnz
add
andl
out
bound
jecxz
into
sbb
adcl
xchg
mov
stc
loope
mov
lods
out
iret
xchg
cli
pop
arpl
or
mov
cld
loope
mov
mov
call
add
jno
faddl
cmpsb
aam
lea
sbb
push
sub
loope
stos
or
pop
pop
jmp
movsl
cmp
aaa
stc
pop
dec
sti
add
repnz
mov
cltd
in
cmp
ret
push
cmc
pop
jne
lea
andl
adc
rcl
adc
fwait
leave
fbld
sub
insb
popf
xor
or
xchg
pop
add
scas
dec
in
xchg
hlt
mov
push
aas
outsl
cltd
fsubrp
out
sub
sbb
std
jns
add
mov
aaa
inc
and
fwait
and
mov
mov
jae
scas
in
dec
mov
into
imul
ud0
inc
xlat
and
cs
in
add
pop
arpl
out
in
jmp
popl
or
xchg
testl
xor
xor
int3
mov
shll
test
push
sbb
xor
pop
add
outsb
in
sub
orb
stos
cmp
xor
out
mov
loop
jl
mov
pop
aas
je
add
sbb
inc
and
popf
inc
pop
adc
jecxz
xor
adc
popa
mov
inc
cli
lret
stos
cld
xlat
mov
mov
jl
jge
xchg
ret
mov
call
inc
in
test
rorl
or
push
scas
inc
mov
add
stos
sub
mov
aam
adc
out
jge
cld
out
cmp
test
stc
sub
aam
popa
cli
dec
add
and
fdivl
inc
pop
xchg
out
add
and
jge
jg
jl
ret
bound
movsl
ds
push
sub
int3
sahf
mov
fisttpl
xchg
dec
insb
popa
and
cmpsl
cmpsb
sub
push
inc
repnz
xorl
add
cmp
es
and
xchg
insb
sub
cli
out
cmc
pop
sub
insb
insl
push
cli
add
xor
add
int3
test
jno
cld
push
xor
xchg
jne
fwait
nop
jno
ljmp
mov
jle
ja
jmp
or
fwait
stos
js
popf
repnz
out
je
mov
shlb
das
stos
loope
daa
out
dec
xchg
in
xor
adc
and
mov
lods
jo
mov
les
cwtl
rolb
cmpsb
xor
jb
mov
pop
loopne
and
push
pop
ror
cmc
adc
add
movsb
std
icebp
pop
hlt
push
or
pushf
jle
push
push
repnz
insb
bswap
mov
cmp
stc
pushf
jge
push
pop
jmp
cmp
cmc
fs
cmp
bnd
lcall
stc
roll
in
cmp
lret
xchg
out
add
mov
std
inc
popa
data16
lea
fistl
jg
sbbl
movl
mov
test
inc
fcmovne
mov
movsl
popf
addr16
jo
rcrb
add
popa
aas
push
cs
movsb
mov
stos
js
ljmp
lods
sub
pop
cli
leave
ss
cmp
testl
hlt
xchg
cmp
cmp
jno
outsb
push
inc
imulb
scas
dec
cmc
sub
xlat
scas
dec
add
add
cld
sbb
iret
into
mov
mov
leave
pop
xor
lret
cmp
stos
enter
repnz
mov
shl
add
fldcw
or
ljmp
xlat
and
mov
cmp
pop
fwait
and
gs
inc
push
mov
rorl
sahf
stos
into
push
in
stc
and
and
aad
jo
cmp
dec
jb
pop
hlt
ret
fs
cld
fstpl
imul
arpl
cltd
ret
push
adc
mov
jmp
push
std
xchg
sbb
jmp
out
stos
mov
xchg
cmpsl
inc
push
gs
ret
sub
mov
daa
and
ficoml
and
gs
pop
push
into
es
sub
push
aam
add
clc
push
stos
or
or
push
imul
fistpl
pop
cmpsl
in
xchg
pop
hlt
xchg
sbb
into
adc
xor
icebp
add
movsb
jp
add
pop
lods
push
int3
lahf
jg
hlt
xor
icebp
stos
lods
cmc
cmp
iret
fs
testb
inc
push
insl
inc
push
inc
mov
pusha
xor
push
and
lea
adc
repz
mov
push
pop
push
jecxz
insl
data16
data16
mov
dec
fdiv
iret
shrl
xchg
sti
mov
mov
test
jae
jmp
dec
jnp
mov
and
dec
mov
and
icebp
ret
fs
dec
into
add
sbb
ret
cmp
movsl
scas
dec
in
fst
out
push
mov
pop
mov
je
inc
sahf
ret
add
push
loope
xchg
sbb
dec
ret
in
sbb
repnz
cmc
jge
mov
aam
ds
mov
cmp
fwait
cmp
sahf
into
pop
repz
jo
adc
es
lcall
ret
pop
shr
push
mov
jno
xchg
jmp
andl
mov
mov
xchg
mov
js
aaa
dec
cmp
adc
ljmp
dec
rcrl
pusha
cmpsl
test
mov
push
push
xchg
rcr
icebp
xchg
mov
clc
jbe
out
adc
dec
movsb
lods
jne
inc
daa
stos
stos
fidivs
push
pop
sar
cmc
test
adc
pop
add
jb
or
mov
je
pop
pop
or
cmp
sarb
lods
push
dec
sbb
xchg
orb
fstl
inc
in
dec
dec
jae
ja
andl
stc
mov
mov
dec
jecxz
jb
ret
pop
mov
es
xchg
add
xchg
jg
pop
dec
into
insl
sbb
mov
mov
xor
cmp
or
movsl
jns
lcall
pop
movsl
hlt
das
dec
test
leave
outsl
xchg
fdivrs
notb
dec
or
dec
mov
xlat
pop
xorl
xor
xor
cmp
inc
push
or
int3
or
imul
sbb
outsl
cs
push
add
mov
enter
lds
shlb
jne
nop
ljmp
cltd
push
and
mov
push
and
xchg
outsb
lds
das
out
out
push
pop
mov
or
rorb
xchg
pop
pop
repnz
divps
pop
push
out
push
ljmp
lcall
movb
mov
add
xchg
jle
imul
jae
outsl
orb
mov
in
xchg
loope
push
bound
ret
test
es
add
push
inc
dec
loopne
jg
xchg
bound
loopne
lods
decb
fstpl
xor
scas
or
xchg
fadds
data16
std
cmpsb
loop
stos
test
out
sub
lods
rorb
push
xchg
fidivrs
inc
and
inc
push
lahf
xor
push
xor
in
fdivl
gs
mov
pop
pop
xchg
mov
mov
mov
xorl
icebp
fistps
inc
test
mov
xor
enter
dec
push
cltd
push
clc
add
adc
xchg
mov
cmp
mov
repz
call
nop
inc
mov
add
mov
aam
add
fldcw
das
sbb
inc
mov
pop
in
jmp
or
cmpsb
aaa
int
mov
add
add
push
data16
mov
hlt
mov
std
test
xchg
xchg
stos
lods
insl
repnz
jnp
mov
movsb
test
dec
les
mov
js
aaa
mov
pop
mov
jle
sbb
out
outsb
sub
pop
in
push
imul
pop
xor
sahf
aam
jp
imul
push
jnp
mov
xchg
stos
jnp
mov
push
aad
dec
jo
je
jae
cmp
fwait
fwait
jmp
cs
jmp
sub
aas
pop
xchg
testb
cmpsb
movsb
mov
iret
mov
sub
inc
stos
cmp
sub
insl
jle
sub
fcompl
push
jae
icebp
test
jl
or
adc
mov
sbb
pop
push
in
pop
ror
aam
jb
mov
push
into
push
xor
stc
lcall
arpl
jecxz
hlt
sbb
pop
add
stc
push
mov
rorl
in
insb
sub
shrl
adc
popa
es
rclb
out
and
adc
in
adc
cmp
and
and
adc
cli
and
lret
test
inc
adc
sub
je
dec
loopne
aaa
sbb
push
xchg
js
xor
lcall
add
cmpsl
lahf
cmp
jp
push
pusha
sbb
lea
or
mov
clc
and
inc
xchg
insl
xorl
and
mov
xchg
addr16
sub
popf
xchg
pop
jae
inc
das
sbb
pop
jecxz
jmp
aas
jbe
insb
ja
es
js
xchg
mov
mov
sbb
adc
fs
pop
into
push
fistps
repnz
pop
adc
adc
stc
xchg
mov
pop
bound
and
sub
pop
test
cmp
mov
lahf
add
movsl
xchg
mov
pop
mov
jns
or
insb
adc
negb
cwtl
pushf
cmp
sbb
rcll
insb
enter
in
test
sbb
pop
sub
lock
mov
iret
roll
jae
push
and
and
ret
je
daa
mov
nop
and
pop
std
jl
aad
and
jg
pop
dec
lods
movsl
xchg
movsb
fsubl
inc
data16
add
jl
jo
push
pop
xchg
pop
stos
fdiv
addsubps
inc
cld
dec
or
add
es
and
popa
lea
inc
lds
movsb
mov
jl
xchg
inc
sahf
mov
xorb
mov
inc
sub
hlt
dec
xorb
pushf
and
shl
pop
ss
dec
push
sub
subb
sbb
or
and
add
in
pop
das
xchg
movhps
xchg
lds
dec
add
lahf
sub
ss
pop
inc
enter
pop
int
jns
sbb
jge
movsb
and
stc
lcall
adc
push
cmp
push
into
dec
and
lret
les
cwtl
mov
mov
inc
inc
sbb
push
mov
je
mov
leave
bound
sbb
mov
rorl
cwtl
fisubl
pusha
shlb
ds
dec
dec
and
icebp
fbld
mov
or
fdivl
push
sbb
cmp
lahf
sbb
lds
cmp
icebp
lret
mov
mov
icebp
xor
pop
cmp
stc
inc
or
push
sbb
and
std
imul
mov
mov
mov
clc
push
insl
mov
lcall
pop
in
outsl
stos
or
cmp
movsl
ret
popl
in
or
dec
call
test
xlat
mov
pop
add
test
mov
jo
shr
mov
fisubrs
inc
push
push
cld
sbb
pop
test
roll
imul
and
inc
shr
cmp
addr16
push
jb
inc
in
xor
lods
cmp
ja
dec
xor
inc
and
bound
mov
mov
cmp
lahf
adc
mov
xor
test
xchg
pop
ds
and
xlat
ret
sbb
sbb
in
aas
jmp
notb
inc
or
outsb
push
aaa
mov
cmp
ret
mov
mov
inc
mov
fst
push
sbb
cld
fnsave
test
pop
sub
in
and
das
inc
das
in
dec
dec
dec
mov
pop
and
iret
mov
fdivs
xor
mov
sub
notb
pop
fwait
cmp
mov
cs
shrl
cmpsl
std
or
add
es
out
cmpsb
in
jo,pn
stos
jns
pop
and
cmpsl
aas
imul
scas
and
arpl
fnsave
dec
js
xor
jmp
pushf
outsl
sub
xchg
fisttps
xor
nop
jne
jmp
rcll
div
inc
subb
mov
arpl
cmpb
mov
inc
lea
pop
xlat
je
mov
add
jnp
or
jae
and
loopne
xchg
or
mov
int
cmp
push
inc
dec
out
fimuls
dec
shll
sbb
mov
adc
data16
add
jle
insb
adc
adc
pop
pop
jno
sbb
jecxz
insb
pop
cmp
xlat
jbe
adc
sahf
in
jl
pop
jl
xchg
adc
aam
jo
inc
dec
xchg
dec
pusha
pop
adc
push
shlb
bnd
out
frndint
dec
fdivrs
hlt
pop
gs
push
out
data16
cld
in
sub
loope
xor
ljmp
lahf
ss
mov
add
push
pusha
lret
in
test
insl
int3
xor
hlt
inc
clc
int
adc
add
inc
addr16
das
imul
sub
mov
xchg
gs
push
push
dec
addr16
test
repz
xchg
bound
xchg
push
cmpb
dec
fs
xchg
mov
or
sbb
loope
sub
mov
xchg
mov
jbe
iret
mov
cmp
ljmp
mov
jns
sahf
popf
dec
ljmp
add
xchg
and
push
cmpl
inc
add
and
int3
inc
or
loope
push
mov
ja
pop
inc
fistl
cs
lret
nop
popf
iret
ret
adc
pop
cmpsl
jno
movsb
mov
hlt
sub
sbb
mov
xor
les
and
std
push
iret
jmp
arpl
xchg
cmp
sub
and
fistpll
outsb
repz
add
inc
test
cmpsb
mov
mov
xchg
adc
mov
xlat
jmp
fisubl
add
rep
cmp
repz
hlt
cld
popa
pop
data16
jb
cmp
xor
add
rcll
push
mov
lods
add
aam
ss
sub
cmp
dec
jno
mov
movsl
lods
adc
into
jmp
ret
cs
jp
ljmp
jmp
sub
out
stos
into
dec
subl
aam
arpl
addr16
ss
dec
int3
mov
xchg
sbb
jmp
jecxz
jb
push
dec
push
loopne
test
sbb
movsl
jl
daa
inc
jo
adc
test
cli
aaa
cli
out
or
cmc
xor
stc
xor
inc
jae
and
ljmp
dec
add
sbb
push
push
lcall
lods
pusha
mov
fnsave
imul
fsub
std
push
add
std
mov
and
fmuls
lcall
and
add
sub
cmpsl
lods
jl
jnp
push
mov
mov
cmpsb
cmpsl
jecxz
sub
lret
scas
cli
push
cmp
mov
ss
out
loope
aad
jno
dec
push
sub
pushf
ja
cmp
addr16
cmpb
mov
push
xchg
test
inc
iret
adc
adc
arpl
popa
add
int3
aam
mov
dec
ret
shlb
jne
lcall
mov
popf
roll
jl
pop
jp
repnz
fmull
dec
loope
push
mov
add
jne
imul
es
dec
jbe
orl
jo
addb
outsl
es
push
call
mov
add
dec
mov
cmpsb
jnp
das
not
xor
shll
and
lret
ret
inc
jmp
xchg
out
inc
inc
lret
cld
push
sbb
loope
adc
jmp
adc
inc
dec
scas
jnp
shlb
clc
fcmovb
push
adc
xchg
xchg
insl
adc
adc
leave
je
ret
sahf
inc
inc
push
test
std
in
jmp
ja
xlat
jo
or
test
dec
rcrl
in
xchg
add
outsb
xchg
test
cld
xor
mov
pop
push
out
mov
loop
add
ficoml
dec
movsb
mov
pop
lahf
push
outsb
jmp
shll
dec
addb
ss
or
bound
jbe
add
cmp
test
inc
repnz
shlb
fidivl
lahf
out
pop
mov
rcrb
jmp
addr16
mov
mov
jns
xchg
enter
xor
xor
pop
jo
jne
loope
mov
xchg
ljmp
clc
mov
repnz
in
fidivrs
in
jge
ret
lahf
fidivrl
cmp
pop
and
popa
inc
loope
push
es
shr
mov
adcb
ret
or
cld
adc
out
outsl
test
xor
cld
xchg
loopne
fcoml
enter
movsb
mov
xor
scas
push
pusha
loopne
add
cmp
mov
outsl
add
adc
popa
lret
into
shrl
in
pop
mov
loope
lods
sbb
movsb
push
jecxz
std
ffreep
insl
fisubs
ljmp
sub
das
shrd
or
inc
leave
loope
cmp
or
and
fmuls
or
cli
and
pushf
imul
cmpsb
and
and
aaa
fs
pop
sub
jge
jbe
push
ljmp
popf
adc
in
dec
cmpxchg
mov
cmp
pop
add
cmpsl
push
icebp
jne
push
xor
mov
xchg
fldl
add
mov
add
mov
cmp
dec
inc
mov
outsb
jp
in
cmpl
cli
push
mov
xor
int3
dec
and
rol
insl
loope
je
add
jl
cltd
sub
mov
pop
jnp
movb
jp
cld
rolb
sarl
stc
inc
andb
mov
mov
je
push
sbb
cmp
ljmp
jg
mov
aaa
mov
hlt
lahf
mov
ja
jno
cs
push
pop
sub
jecxz
dec
jns
cmp
push
loop
dec
cmp
dec
sbb
cmpsl
xchg
lret
xlat
push
sar
and
je
mov
je
sbb
adc
jmp
cltd
xchg
pop
cmc
sub
popa
push
inc
insl
jo
movsb
push
outsb
ljmp
outsl
push
xchg
ret
sti
jge
in
and
cli
mov
cmp
mov
jnp
pop
das
xchg
movsb
cltd
sarb
popfw
in
adc
into
cmp
jecxz
aas
cmp
adc
push
or
data16
popa
jne
push
fwait
adc
lock
int
xor
push
shrl
xlat
stc
xchg
in
pop
or
or
negl
sbb
pop
ds
rorb
mov
adc
dec
fcmovne
lcall
jbe
fstpl
jns
cltd
mov
arpl
and
jbe
stc
sbb
push
push
data16
and
out
inc
addb
clc
sub
adc
or
xchg
pop
je
jb
mov
mov
mov
adc
jmp
jno
mov
inc
add
fnstsw
pop
ja
sbb
dec
cmpsb
movsb
or
movsl
pop
mov
rclb
push
stos
or
in
aas
cld
insb
cld
adc
imul
xchg
fldcw
add
lahf
sub
insb
mov
js
xchg
lds
inc
lret
cwtl
scas
lret
sub
xchg
jp
inc
xchg
sbbl
or
scas
or
mov
repnz
gs
add
jae
inc
sahf
jne
ss
add
pusha
cmp
dec
lock
xor
jge
stos
push
imul
fst
mov
subb
push
mov
sbb
out
stc
xlat
and
mov
sbb
mov
test
sbb
add
in
jno
sub
dec
loop
cmp
mov
stc
sub
pop
out
sbb
push
cmpsb
mov
shll
pop
ja
dec
mov
roll
adc
fadd
lcall
mov
out
cmp
cli
push
mov
sbb
rorl
mov
lcall
outsl
popa
jle
inc
xlat
iret
or
add
adc
fwait
cld
lea
ret
cmc
add
cmc
jg
rcrb
jmp
ret
jl
or
pop
test
dec
in
imul
add
sti
and
mov
inc
xchg
xchg
dec
add
mov
inc
xchg
ret
pop
fnstsw
fldl
insb
notb
xor
les
xlat
je
mov
and
bound
lret
iret
cli
mov
enter
add
loope
ret
push
loope
mov
add
movsb
jg
loope
in
pop
and
jle
inc
das
scas
mov
cld
ficoms
and
fwait
out
clc
cmp
and
sbb
scas
inc
out
mov
aas
pop
xchg
fdivs
mov
icebp
xchg
pop
rorl
cltd
push
pop
jns
std
incl
or
rorb
mov
outsl
mov
mov
push
ret
and
add
ljmp
xchg
jae
mov
cmp
jl
xchg
in
jge
push
sbb
cli
and
into
lods
sub
inc
pop
in
pop
mov
insb
out
js
jl
test
cmp
rol
out
imul
mov
popa
cltd
out
cmp
sub
sbb
fistps
mov
add
cmp
sbb
out
cwtl
cmp
in
lods
out
and
pop
dec
ret
cmp
mov
push
mov
rorb
xchg
pop
adc
jbe
lret
cmpsl
mov
xor
inc
xchg
push
push
movsb
aad
les
xlat
lds
je
sbb
pop
cmp
ss
mov
jns
jbe
scas
js
sti
dec
mov
nop
xor
test
ret
mov
int
jg
test
in
sbb
xchg
push
add
and
xor
sbb
push
cwtl
cmp
mov
push
xlat
andb
or
addl
adc
bswap
sti
sahf
sbb
stos
mov
inc
push
insl
pop
add
cmpsb
jbe
cs
mov
lds
movsb
outsl
mov
mov
jg
mov
mov
fidivl
popf
jne
into
jne
sub
fldenv
fisubrl
inc
cmp
out
orb
jae
iret
or
arpl
cmp
and
add
sbb
addb
xor
cmp
mov
xchg
loope
clc
jne
fwait
dec
out
dec
jne
orb
mov
test
aaa
dec
nop
pop
andl
mov
fcoms
sti
das
pusha
imull
lret
cmp
lcall
movl
out
shl
test
fbstp
mov
out
ss
push
aas
mov
outsb
insb
inc
pushf
lods
int
jg
outsl
mov
pop
pop
nop
xchg
mov
fs
sbb
lcall
loop
push
lret
cmp
jbe
jmp
aam
rolb
pusha
das
pop
inc
repnz
mov
jo
ret
fdivrp
fwait
cmp
in
aad
add
add
push
pushf
in
dec
pop
jns
cmp
cmp
fwait
sbb
stc
leave
dec
add
sbb
fwait
mov
mov
jbe
add
outsb
test
and
lret
mov
adc
mov
imul
cwtl
add
sub
test
adc
and
dec
fildl
adc
addr16
mov
xorb
int
cmp
xchg
cmp
pop
ret
inc
pop
shrl
push
lods
arpl
sbb
sbb
push
loope
mov
pop
adc
stc
rorb
and
loopne
mov
xchg
jbe
stc
int3
push
cmp
mov
into
push
mov
daa
mov
int
and
mov
mov
test
movsb
lea
stc
mov
loop
repz
cmc
pop
push
mov
arpl
sbb
pop
push
dec
outsl
lock
lds
sbb
in
mov
xchg
mov
mov
in
dec
in
in
xor
icebp
jl
scas
dec
xor
test
dec
fcoml
and
test
idivb
out
mov
push
arpl
fcomip
faddl
mov
dec
cmc
and
movl
xor
xchg
xor
out
test
lret
pop
jo
add
aas
in
sub
fcmovnbe
fcmovb
rolb
push
xor
outsb
aaa
fistps
in
and
add
mov
fldl2e
ss
add
rolb
or
mov
std
adc
and
push
aas
jp
push
clc
pop
jge
daa
xchg
fbld
add
test
xor
shlb
ret
fsubrs
pop
pop
push
sbb
mov
insb
adc
cld
xchg
and
loope
jge
adcl
jg
cmpsl
divb
xchg
pop
cli
xchg
inc
dec
mov
cmp
push
and
jmp
std
cwtl
push
nop
cltd
sub
mov
ljmp
dec
icebp
and
xchg
mov
mov
mov
inc
cmp
fnstsw
jl
mov
mov
pop
mov
stos
xchg
sub
xor
add
ljmp
cwtl
sbbb
shrl
add
aam
cli
lar
lret
sbb
inc
cmp
cmp
lds
mov
mov
inc
mov
add
jl,pn
add
ja
and
push
into
and
dec
add
and
aad
mov
cld
aas
les
ss
add
test
or
int
mov
ja
cmp
and
jbe
frstor
fidivrl
xchg
cltd
sti
jge
jmp
into
leave
mov
test
cwtl
ret
aaa
scas
in
ret
out
inc
ja
cmp
inc
mov
pop
lock
call
xchg
lds
std
or
call
inc
movsb
stos
push
iret
jno
inc
cmp
dec
add
lahf
arpl
xchg
lods
add
rcrl
lods
jecxz
fwait
cmp
imul
fdiv
sbb
inc
and
mov
or
jo
aam
xchg
fildl
adc
out
fs
and
jl
test
repnz
cmp
lahf
xlat
pop
lahf
jb
pop
pushf
outsb
xchg
cmc
imul
iret
add
mov
loope
mov
scas
cmpsl
ja
xor
push
xchg
insl
mov
mov
mov
or
mov
xor
imul
lods
and
pop
arpl
sbb
arpl
stos
orb
mov
outsb
push
cld
jle
lea
mov
dec
pop
jge
push
mull
test
adc
pop
jecxz
or
dec
jb
xchg
repz
ja
lahf
stc
in
cmc
sub
out
or
mov
lods
cwtl
push
cmp
cltd
testb
sbb
inc
leave
dec
ds
das
popa
xor
jno
popa
sbb
lret
xchg
push
stos
add
fstl
or
and
push
push
dec
lods
pop
movsb
pop
lahf
adc
shll
push
roll
xlat
popf
cmp
js
inc
nop
rcll
icebp
hlt
pop
loop
out
jae
movsb
mov
incl
mov
mov
mov
loop
enter
cld
icebp
pop
stos
cmc
sub
mov
mov
mov
sbb
add
jecxz
mov
fwait
outsl
lods
aas
mov
dec
mov
push
cld
cmp
sub
sub
mov
insb
jg
fsin
test
insl
clc
repz
add
shrb
and
out
int
out
movsb
aas
and
std
mov
movsb
pop
adc
sub
pop
frstor
es
cmpsb
mov
fsubl
fs
scas
mov
pop
and
into
aam
push
rcrl
or
stc
scas
or
cltd
dec
pop
mov
lcall
ljmp
hlt
dec
inc
out
pop
sub
clc
sub
lahf
pop
xchg
mov
popa
push
cwtl
adc
ror
jno
pop
iret
dec
fdivp
scas
and
and
bound
aam
push
lods
sub
mov
jno
adc
test
jo
subb
out
push
jp
pop
into
add
cmp
cmp
inc
lods
arpl
adc
adc
sub
stc
fisubs
out
inc
cld
insb
mov
mov
imul
mov
adc
clc
add
jecxz
jo
jae
xchg
fs
xorb
adc
dec
sahf
jle
fldenv
jbe
cmpl
fcomp
push
adc
jecxz
jl
cmp
shll
jecxz
pushf
shll
dec
scas
sbb
aam
sbb
ret
leave
das
sub
cmp
pop
adc
mov
nop
pop
filds
ret
mov
addb
push
call
test
pop
insl
js
adc
lds
shrb
in
lret
cmc
lret
inc
test
sub
cmpsb
repnz
jo
inc
lahf
cmp
cltd
mov
cmpsb
mov
add
cmp
fs
mul
sar
out
adc
loopne
fistpll
sbb
sub
push
cli
inc
pop
getsec
mov
rorb
test
pop
lret
pop
jmp
fistl
or
sbb
lcall
jge
add
or
pop
pop
jmp
scas
xchg
ds
lret
jno
das
and
xor
aad
fistpl
mov
adc
inc
mov
clc
mov
dec
imul
repz
cmpb
movl
insb
mov
ljmp
mov
mov
jae
fidivrs
push
mov
movsl
insl
test
mov
jg
mov
inc
addr16
push
gs
and
and
fcmovne
je
add
and
jp
popa
mov
gs
jbe
add
pop
add
mov
jg
mov
jns
scas
push
cmp
test
mov
fildll
and
movsbl
dec
cli
push
jge
and
dec
outsl
mov
jmp
sub
mov
sbb
out
outsb
mov
adc
lds
orl
xchg
xor
jg
push
imul
nop
fs
fldl
imul
pusha
push
push
jmp
jae
xchg
push
mov
fsubr
lret
into
jbe
cli
mov
ds
jle
aaa
mov
ds
mov
xor
stc
xchg
dec
in
aas
adc
jmp
adc
rorb
bound
aad
sbb
movl
call
xchg
mov
lock
cmp
daa
jns
hlt
jle
ret
inc
pushf
jno
mov
xchg
popa
push
sub
xchg
scas
mov
push
fwait
inc
shl
pop
movl
mov
mov
scas
fwait
and
xchg
mov
dec
jmp
cs
mov
jb
inc
movsb
iret
xchg
sbb
ret
push
mov
je
inc
mov
push
test
add
jle
dec
pop
or
in
inc
pusha
mov
sub
and
pop
sti
mov
fwait
test
enter
inc
adc
jno
jns
mov
movsl
int
inc
ljmp
das
sbb
aaa
in
fildl
out
in
fs
imul
frstor
push
pop
jge
cmp
sbb
ja
int3
sbb
gs
xor
and
mov
inc
add
cmp
and
testb
lret
inc
jmp
xchg
fdivrs
dec
ftst
arpl
add
test
sbb
pop
mov
jno
arpl
or
inc
int
add
das
pop
or
es
ficompl
aas
mov
iret
mov
add
push
push
inc
xchg
sbb
mov
loopne
cld
sub
aam
test
jae
mov
out
sub
xchg
mov
adcb
fcoml
in
pushf
loopne
pop
into
sub
mov
xchg
roll
iret
or
mov
es
mov
push
cmc
push
xor
adc
clc
lock
sbb
push
pop
jp
push
xchg
or
loopne
mov
cs
rcrb
dec
insb
pop
data16
ja
outsb
clc
insb
call
xchg
jg
fildll
jmp
call
lret
jmp
cs
iret
fdivl
sub
js
dec
add
pop
pop
scas
pop
dec
add
cwtl
pop
decl
int
subl
pop
mov
ret
mov
sahf
stc
jle
inc
sbb
cmpsb
pusha
mov
sbb
inc
fldl
imul
adc
in
add
mov
pop
in
outsl
dec
or
imul
popa
sub
mov
add
enter
push
mov
lret
add
stos
xchg
into
int3
aad
adc
test
push
lea
fwait
movsb
or
shll
inc
mov
pop
adc
pusha
cli
mov
stos
add
rcrl
ret
push
cmp
xor
inc
ljmp
cmp
les
push
pop
out
xchg
scas
mov
in
rorb
adc
in
scas
loopne
dec
push
sbb
jp
mov
add
xchg
or
movsb
pusha
add
ja
rcll
adc
mov
or
xchg
dec
jl
or
lret
incl
dec
fsubs
mov
jl
sbb
je
leave
scas
add
push
jbe
mov
out
popf
inc
pop
rcll
aam
inc
fistpl
mov
push
sub
cltd
mov
mov
pushl
sub
sahf
fsub
xchg
test
jge
fists
sbb
mov
xor
inc
lcall
fnstsw
imulb
add
adc
xchg
push
cmpsb
pop
jg
pusha
in
adc
jmp
decl
jl
out
cli
dec
or
inc
jmp
jge
add
test
icebp
insb
jno
shlb
cmpsb
loope
insl
ret
mov
dec
lret
cmp
sbb
test
loope
insb
jp
jno
das
nop
inc
or
inc
lahf
aad
pop
je
std
mov
subb
test
cmp
jl
dec
sub
mov
push
out
adc
shlb
test
faddl
push
mov
cld
fcmove
and
in
inc
cmp
ds
dec
xorb
pop
or
push
outsb
into
sub
test
xlat
movsl
push
xchg
dec
in
mov
cmp
and
pop
push
pop
cmp
xchg
xchg
insb
mov
xor
cli
cli
lret
dec
sub
jge
pop
test
pop
sub
jne
cmp
test
lods
adc
sub
out
mov
pop
loopne
mov
loopne
fwait
je
nop
movsb
pop
mov
xchg
lods
ret
test
mov
or
lock
ds
push
loopne
mov
scas
add
pop
in
iret
cwtl
cmp
es
addr16
sub
bound
test
test
mov
xor
movsb
dec
fnstcw
mov
gs
insl
sbb
dec
mulb
push
adc
push
mov
ljmp
inc
cmp
or
scas
or
movsb
mov
push
hlt
loope
inc
jmp
xchg
jno
cld
loope
stc
stos
jecxz
mov
xchg
movb
mov
pop
cmp
jnp
sbb
mov
push
dec
or
jge
popf
pop
ljmp
and
or
jbe
jp
arpl
jl
pop
jge
in
jno
dec
stos
je
idivl
movsb
fwait
cmp
add
cltd
xor
adc
out
ret
loop
mov
push
lea
xor
outsb
in
xchg
pop
ficoml
dec
repz
push
lret
push
dec
and
or
lock
mov
cmp
pop
incl
pop
inc
xchg
mov
aaa
dec
lods
dec
sarb
out
aas
xor
enter
jns
lret
jg
or
push
test
rclb
orps
mov
mov
sti
adc
xchg
out
xor
popa
add
cmp
stc
jo
inc
sbb
jnp
adc
popf
jns
add
dec
xchg
jl
and
leave
int
jns
adc
xlat
test
imul
lcall
imul
push
call
lret
mov
mov
inc
aaa
lret
cmp
pop
jne
mov
jno
sahf
adc
pushf
add
rclb
jp
sub
inc
cmpl
adc
popa
jge
mov
out
insl
jns
outsl
push
jle
mov
sub
mov
inc
mov
xchg
outsl
inc
push
dec
addr16
adc
xor
scas
shll
pop
mov
lods
rcll
fldt
into
jp
jp
push
dec
push
or
lcall
mov
clc
pop
add
in
hlt
loope,pn
xor
cwtl
pop
mov
mov
xchg
add
stos
dec
lea
sbb
or
out
movl
outsl
inc
mov
mov
inc
daa
out
or
movsb
clc
mov
pop
mov
mov
mull
jns
cmp
jl
adc
mov
inc
xor
std
xchg
sbb
cld
sbbl
sub
nop
xor
out
call
in
sbb
xchg
cmpsb
nop
pop
insl
and
icebp
jmp
cmpsb
cmp
push
xor
sbb
shlb
cmp
jp
adc
fimuls
fwait
cmp
xlat
dec
mov
pusha
sbb
add
in
mov
sarb
inc
jp
cwtl
mov
xchg
xlat
lock
lock
push
fdivrl
pop
cmp
cli
sub
push
pop
shlb
pop
cli
loope
mov
dec
sbb
dec
push
jp
stos
jg
push
loop
or
push
mov
pop
es
dec
stos
subl
cli
pop
jne
mov
pop
dec
loop
data16
xchg
rorl
pushf
dec
pop
dec
mov
adcb
sub
cmc
sbb
jnp
pop
mov
cs
jnp
lods
int
xor
cli
xchg
push
sbb
popf
call
or
enter
mov
inc
ljmp
xlat
mov
cmp
das
popf
fsubs
fdivr
push
dec
pusha
xchg
sahf
aaa
jp
lahf
jg
xor
inc
jmp
movsb
xchg
icebp
adc
stc
inc
mov
pop
xchg
inc
add
ja
aaa
pop
rorb
mov
gs
xchg
ss
cmp
cmpsl
mov
xor
xchg
sbb
or
push
lods
mov
mov
rcrl
pop
dec
cmp
inc
aam
insb
sbb
loopne
cmc
ja
pop
cmc
out
dec
ret
rcrb
fstp
out
cld
lock
mov
aas
pop
imul
fstl
pop
inc
iret
aaa
jno
xchg
mov
in
adc
ret
aas
add
mov
cmp
cs
rolb
dec
jns
push
pop
add
test
cmp
mov
imul
pop
insb
fmull
cmp
fucomip
sub
add
sbb
vxorps
call
icebp
popa
popf
jg
mov
sbb
adc
nop
jmp
js
fldt
fistpl
scas
mov
mov
lds
jb
fnsave
or
dec
and
sub
jbe
dec
in
in
outsb
inc
mov
addr16
and
int
xchg
fidivrl
dec
daa
push
clc
pop
mov
sub
push
outsl
mov
movsb
adc
add
cmp
add
in
pop
jecxz
int
pop
aad
or
hlt
sbbb
and
add
lods
xor
inc
push
lahf
cmp
push
cmp
scas
leave
daa
xchg
pop
repz
push
push
stc
or
mov
xchg
pushf
shr
lods
out
and
ret
jge
push
add
sbbl
pop
cmp
xor
add
int
addr16
into
ret
adc
je
or
sub
aad
jb
outsb
aad
repz
cmpsb
push
test
inc
xor
or
cmp
loopne
cmpsb
ja
mov
stos
ljmp
add
or
mov
pop
pop
test
leave
cmp
dec
xor
cmpsb
imull
pop
sub
mov
outsl
lahf
jae
xchg
psubusb
in
cmc
aad
outsl
and
movsb
jmp
es
pop
into
sbb
lahf
mov
inc
fiaddl
incb
test
inc
sbb
stos
sbb
aam
popf
stc
addr16
fldcw
mov
outsb
notl
and
mov
sub
add
jle
ret
fsubs
dec
inc
mov
push
cmpsl
cmp
xchg
dec
imul
insl
jp
pop
add
cli
daa
inc
cltd
mov
pop
or
imul
ljmp
or
pop
cld
push
adc
ret
ret
inc
insl
movsb
scas
popf
dec
or
sti
out
cs
ljmp
jmp
inc
lea
sbb
test
ficomps
adc
inc
insb
mov
mov
mov
call
add
movsb
sti
jae
scas
lock
fs
mov
mov
jno
in
movsb
dec
dec
mov
pushf
xor
iret
les
shl
sub
push
stos
jp
insl
pop
push
ljmp
mov
into
mov
xor
add
fidivs
repnz
lods
xor
mov
cmp
cmp
fdivrs
jae
in
jnp
jne
push
out
inc
lret
imul
daa
xrelease
imul
inc
repz
in
or
dec
out
mov
inc
js
xchg
ss
pop
fsts
xchg
jp
cwtl
inc
sbb
mov
sub
xor
orb
cs
add
xchg
stc
outsb
mov
data16
pop
xorl
inc
push
leave
push
outsl
xor
or
fnstcw
jbe
sbb
imul
inc
rorl
pop
jecxz
mov
loope
inc
shrl
pop
cmpsb
mov
sbb
inc
adc
cwtl
call
cmp
sub
lods
dec
dec
sarl
mov
int3
dec
and
int
in
pop
xchg
mov
mov
rclb
mov
dec
mov
scas
orb
dec
fwait
aas
in
pop
das
mov
movsb
adcl
sbb
lea
fs
push
es
enter
iret
ja
pop
std
mov
imul
mov
push
push
aad
dec
jnp
xchg
rclb
xchg
fidivl
in
mov
push
lock
aas
jecxz
rsm
xchg
xor
outsl
out
jmp
test
jg
outsb
add
xchg
in
xor
jecxz
cs
mov
pop
aam
sbb
inc
mov
sub
cld
push
lcall
xor
mov
jns
mov
clc
sbb
cs
or
or
les
pop
mov
jbe
mov
push
mov
dec
lret
cld
mov
jae
pop
adc
fcmovne
out
cli
aad
adc
xchg
nop
cltd
dec
cmp
movsb
insb
lods
out
mov
fyl2xp1
adc
jno
enter
mov
xor
inc
add
movsb
adc
rorl
mov
es
or
movsb
and
stos
or
outsl
pop
xorb
mov
and
popf
jbe
and
mov
clc
sarb
in
insl
add
add
movsb
je
bnd
test
adc
cmp
std
data16
xchg
pusha
mov
lock
add
cs
aam
rorb
jg
mov
jns
jnp
dec
cltd
imul
push
mov
stos
lret
sub
mov
adc
scas
adc
xor
ret
fld
dec
adc
pop
mov
pop
fnstcw
push
hlt
int3
sarl
js
sbb
adc
fbstp
mov
mov
fidivs
pop
ds
ret
xor
jae
mov
scas
jnp
cmp
pop
xchg
add
cmc
inc
push
roll
mov
push
cmc
cmp
hlt
je
lock
lods
pop
mov
jecxz
and
fdivl
sar
jb
in
nop
scas
or
scas
js
test
xchg
push
fcmovb
lret
dec
xor
mov
ficomps
add
stos
loop
pop
mov
cltd
adc
loope
stc
xchg
push
or
dec
mov
adc
sub
adc
pop
xchg
add
inc
andb
lret
repz
cmp
pop
sbb
lret
repz
aas
cmpsl
lea
and
adc
add
and
enter
jmp
outsb
mov
jle
popf
xor
cs
es
jnp
mov
sbb
mov
push
push
ret
jmp
pop
mov
rorb
cltd
imul
js
loop
popa
or
and
cwtl
fsubr
jmp
xor
and
lahf
mov
gs
cmp
mov
dec
pop
aaa
jo
cmp
sub
xchg
mov
or
lret
inc
aam
inc
lods
inc
or
loop
jecxz
sti
dec
call
mov
pop
cmpsb
cs
js
mov
mov
sahf
or
out
and
movsb
aam
cs
call
adc
add
out
and
call
sbb
incl
test
ljmp
lds
mov
in
loope
rol
aas
imul
mov
xor
adc
flds
pop
xchg
test
lcall
or
xchg
lods
push
xchg
out
sub
push
ja
in
fstpt
mov
fimull
in
clc
hlt
inc
xor
push
je
mov
push
push
and
sti
cmp
jp
add
push
mov
pop
xor
nop
adc
jo
out
mov
cmp
jbe
pop
sbb
je
clc
push
shl
pop
or
shrl
cwtl
enter
orb
dec
add
and
dec
data16
addb
mov
xchg
pop
mov
or
sub
notl
int
xor
cmp
out
and
fs
inc
pop
adc
pop
mov
add
test
add
xchg
pop
cli
popa
nop
daa
lods
fisttps
xorb
movl
std
xorl
mov
nop
xor
test
ljmp
add
jbe
loopne
aas
dec
rclb
sti
inc
adc
push
clc
shr
or
dec
fldl2t
cli
cmpl
test
and
aas
insl
pusha
xor
jne
outsl
inc
dec
inc
das
lcall
jb
jl
pop
fnstcw
adc
xor
and
lea
nop
lcall
xchg
lcall
decl
jo
popf
roll
int
mov
jle
repz
pandn
push
ljmp
rclb
adc
sub
fldt
or
addr16
mov
and
cmpl
xor
or
lcall
push
divb
aaa
jo
aaa
lret
loopne
push
mov
rcll
arpl
xchg
fldt
and
xor
xchg
icebp
mov
xchg
nop
in
dec
push
int
lds
popa
add
jno
inc
xchg
cmpsb
dec
jno
addb
das
dec
jb
or
mov
ljmp
cld
ret
addb
jae
hlt
mov
pushf
mov
pusha
ds
pop
add
incb
dec
push
pop
call
or
mov
mov
push
pop
sar
mov
rcrl
gs
adc
xchg
stc
xorb
adc
jnp
mov
push
pop
or
inc
and
fsubl
dec
push
push
rcr
out
adc
insw
cmp
outsl
mov
rcrb
add
or
jmp
fnstenv
enter
sub
inc
inc
jne
adc
cmp
mov
int3
mov
cltd
int
shrl
jp
inc
push
into
dec
sub
or
sbb
inc
out
dec
mov
jmp
xor
push
psrld
daa
mov
push
add
jmp
mov
std
push
xor
mov
inc
lods
inc
inc
cli
stos
lahf
mov
out
cmp
fbstp
das
mov
repnz
into
pushf
adc
enter
sub
fldenv
xchg
or
pop
out
inc
insb
jo
sti
lods
pop
jnp
pop
cld
mov
lahf
movsb
sbb
jecxz
mov
pop
rdmsr
imul
mov
sub
xor
jl
ret
jmp
addr16
add
and
inc
cwtl
push
dec
lahf
lahf
pop
data16
adc
arpl
cld
jne
sbb
lods
jle
xor
mov
inc
jae
cmp
shl
into
pop
shrb
and
xlat
sbb
jo
mov
lret
pop
dec
stos
pop
rol
adc
test
mov
xor
outsb
test
rcrl
into
hlt
cmp
xchg
cmp
ret
aas
cmc
jno
sar
sbbb
pusha
movsl
add
lods
mov
cmpb
dec
xor
cmp
inc
xor
jp
cmp
insl
jge
cmp
jno
cmpsl
cmc
push
mov
push
ja
jmp
adc
jb
aam
cli
dec
inc
fsts
int
mov
arpl
pop
or
or
idivl
addr16
sbb
scas
mov
mov
push
or
mov
jp
add
mov
jnp
outsl
lds
xchg
cmp
xor
jno
mov
ret
dec
xchg
test
add
push
adc
xlat
lahf
je
mov
lods
fidivrs
pop
lret
test
out
push
and
inc
jns
outsl
mov
sbb
pop
xchg
jne
sub
lea
je
pop
mov
ror
jp
int
mov
in
dec
cmpsb
je
outsb
adc
mov
adc
xchg
call
stos
or
das
mov
sbb
adc
lods
jno
les
xchg
ljmp
ret
aaa
add
aas
repz
ficoms
xchg
jle
setno
xor
andb
sub
xchg
or
push
xor
mov
jno
pop
mov
and
pop
mov
sbbb
ds
inc
jl
jg
ljmp
lret
pop
movsb
cmp
mov
xchg
push
mov
mov
insb
ret
push
mov
dec
add
cmp
xchg
je
xchg
mov
test
inc
scas
and
xor
in
mov
xchg
cli
mov
lods
sbb
arpl
xchg
xchg
sbb
cmp
cmc
xor
cmpsl
jmp
int3
inc
and
mov
ret
std
aad
pop
int3
int
subl
adc
or
jge
xlat
icebp
fiaddl
out
psubq
xor
outsb
pushf
pop
sub
mov
in
jp
lock
add
adc
addr16
iret
pop
lcall
lcall
sbbl
cmc
and
and
or
outsl
fwait
mov
cmp
dec
ds
bound
aas
jns
cld
lret
xchg
push
pop
jno
popl
mov
dec
pop
inc
jl
test
push
test
mov
push
sbb
nop
xchg
mov
pop
lock
jl
mov
push
fs
add
jge
pusha
add
push
push
push
sbb
push
dec
loope
mov
jb
push
adc
jecxz
shr
or
cmc
aaa
in
add
adc
lcall
inc
mov
inc
rorb
data16
inc
pop
rorb
pop
pop
jecxz
mov
hlt
adc
addr16
mov
sbb
lods
mov
push
jge
roll
cltd
nop
cmp
push
and
nop
xor
mov
clc
xchg
ja
mov
cmpsl
add
fmull
ss
int
sub
inc
push
sub
pop
shrb
mulb
mov
aam
in
outsb
in
add
push
jbe
dec
jb
add
cwtl
jno
dec
dec
add
mov
push
rcrl
add
mov
lret
mov
imul
mov
adc
pop
cmp
mov
pop
or
in
xlat
and
jg
hlt
mov
sahf
in
loope
push
sarb
insb
cli
cltd
aam
clc
sub
daa
xchg
sbb
mov
cmp
mov
mov
fwait
or
xchg
testb
mov
lret
xor
add
sahf
and
cmp
jecxz
jno
cmp
fcomi
cmc
outsl
and
int3
pop
mov
adc
wrmsr
fstl
xor
subl
test
imul
aas
push
call
jg
xchg
or
jns
clc
dec
repz
ficompl
push
ds
out
ret
rcrb
mov
int3
dec
cltd
idivb
aam
and
loopne
xchg
sub
arpl
cmp
popa
call
jae
push
andl
mov
inc
andb
and
fs
lds
mov
pop
add
or
dec
ljmp
adc
ret
push
mov
xchg
shrl
aam
pop
pushf
sbb
jge
adc
add
into
call
jg
aad
jp
aad
jne
or
fdivrl
and
mov
repz
mov
test
mov
mov
insl
xlat
jae
pop
push
lods
repnz
roll
ljmp
filds
mov
mov
jmp
mov
sub
sub
xchg
push
lea
add
push
mov
inc
cmpsl
sub
xchg
mov
rorb
mov
push
fisttps
mov
xor
mov
pop
dec
jne
sbb
cs
stos
int
and
xor
xchg
lock
cmc
jl
push
in
add
cmpsb
add
aas
lret
sub
icebp
rcl
out
mov
dec
out
mov
push
jle
add
out
mov
jmp
mov
shrl
clc
cltd
scas
sbbl
cli
or
repz
ljmp
ss
push
lahf
cmpsl
loope
pusha
popa
mov
push
dec
sub
cltd
in
push
pusha
js
test
pop
hlt
jne
mov
pop
jmp
adc
ret
ljmp
fs
or
mov
jo
inc
dec
int
pushf
ffreep
cmpb
mov
bound
frstor
lock
sbb
in
repnz
mov
mov
loop
pop
out
push
stc
icebp
dec
divl
imul
push
fwait
adc
addr16
mov
std
push
jb
mov
xchg
mov
push
sub
addl
dec
decl
ret
mov
outsl
sbb
adc
push
mov
cld
push
sbb
out
cltd
lods
lret
arpl
lds
xor
leave
xchg
stos
out
mul
inc
xor
hlt
or
in
mov
rorl
cli
movsl
imul
mov
jb
push
mov
scas
jbe
mov
call
mov
mov
stc
push
aas
cli
outsl
outsb
mov
out
or
inc
lret
aad
clc
out
sbb
jg
rclb
dec
and
adc
dec
or
mov
or
sub
mov
jnp
jmp
gs
fisubrs
cmp
stos
loope
push
lret
mov
pop
loop
inc
arpl
sbb
sub
das
xor
outsb
sub
dec
adc
sub
cwtl
lret
adc
not
xchg
std
lret
push
jg
andb
gs
dec
add
outsl
bnd
iret
mov
popa
mov
inc
jbe
shll
stc
cmp
subl
in
inc
xorb
lret
insl
push
stc
mov
and
cmp
cmp
pop
loop
shlb
ret
icebp
xor
imul
push
pop
std
cmp
push
or
movsl
mov
sbb
jns
lock
lods
sbb
es
das
mov
mov
call
add
or
xor
mov
addr16
push
adc
ja
call
fnstenv
mov
popf
adc
test
pop
loopne
fldcw
lcall
add
sub
push
fld
add
cmp
xchg
xchg
xchg
cmp
lahf
fnsave
mov
xor
aas
push
adc
je
mov
popa
xor
add
cmc
ret
out
lret
test
popa
mov
data16
pop
cmp
fwait
rorb
add
inc
stc
xchg
cmc
inc
sbb
xchg
mov
out
cmp
mov
nop
xchg
jg
pop
mov
and
test
sbb
daa
out
cmp
hlt
out
test
aas
or
fisubrs
cmp
loop
in
fidivrl
aam
imul
jno
push
cmp
jno
jns
loopne
dec
mov
roll
outsb
imul
imull
mov
jp
aas
xor
cmc
jmp
rol
mov
sub
and
sbb
xor
popa
mov
cltd
dec
lea
test
aam
rcrb
pop
int
push
add
rol
cmp
or
jno
stc
insl
push
xchg
lret
and
dec
and
imull
jmp
sahf
icebp
add
lods
mull
pop
pop
dec
std
adc
lods
js
xchg
adc
loop
lcall
or
mov
or
xor
out
mov
cmpsb
addr16
enter
sub
out
fwait
push
or
xor
jecxz
or
add
mov
stos
hlt
sahf
les
cmp
inc
sub
jbe
mov
mulb
mov
adc
xor
mov
addb
repz
mov
push
jns
repnz
nop
pop
ret
add
push
cmp
sbb
jae
push
adc
mov
pop
jmp
pusha
les
dec
aaa
xchg
jno
mov
scas
jecxz
ja
sahf
ficoml
ret
aam
dec
aas
push
mov
cwtl
xor
mov
stc
sti
mov
cmp
xor
push
mov
inc
int
add
mov
lret
mov
iret
fsubrl
in
xchg
rorl
cmc
jnp,pt
mov
inc
outsb
push
cmpsl
xchg
push
in
outsl
jle
das
scas
jl
push
sahf
jnp
pop
jecxz
lods
mov
push
decl
ret
test
mov
xchg
movsl
push
outsb
fst
push
aaa
std
pop
rolb
or
push
cmp
lret
adc
push
inc
filds
and
sub
adc
std
add
std
mov
sub
jae
mov
adc
push
and
mov
xor
inc
or
jno
mov
add
jns
sub
inc
aaa
push
cli
sti
lock
cmpsl
sbb
xchg
dec
push
xchg
cmpsb
xchg
dec
test
loop
fs
frstor
xchg
xor
jp
mov
mov
mov
add
in
cmp
loope
mov
repz
out
mov
push
sbb
jno
cmp
rol
jp
cld
in
dec
xor
push
jb
les
test
ja
adc
lea
xor
daa
jmp
shrb
cwtl
dec
push
inc
xchg
test
jmp
adc
xchg
fsubr
mov
fsubrs
repz
or
mov
sub
mov
arpl
scas
xchg
mov
shrb
lret
jmp
pop
adc
test
ljmp
xor
fwait
cmpsb
scas
add
jae
das
add
testl
addl
dec
jb
jmp
push
imul
push
rolb
push
loop
cmp
stos
mov
js
xor
and
mov
sbb
dec
mov
dec
push
pop
pop
fs
pop
inc
das
out
dec
mov
xchg
shrl
inc
sub
push
popl
daa
sub
pop
sub
push
inc
or
and
xchg
xlat
repz
cld
push
push
mov
dec
sub
int3
jno
mov
jle
cmpsb
mov
sbb
pop
pop
inc
xchg
sub
insl
mov
jle
sub
nop
xchg
ss
xchg
outsl
jno
push
insb
cmovns
ret
gs
and
add
mov
mov
ss
jae
pop
pop
fdivrs
mov
je
lret
mov
sub
scas
mov
pop
lea
pop
shl
ss
mov
push
mov
pop
add
inc
out
push
and
stc
xchg
mov
lret
fwait
mov
mov
jle
lret
mov
in
push
mov
bswap
sbb
ljmp
sub
iret
jne
xchg
inc
call
jae
inc
lods
jecxz
sub
mov
out
dec
pop
loop
pop
inc
jne
loope
xor
xor
push
insl
cmp
mov
cltd
movsb
loope
insl
in
int3
bound
fcmovnbe
fwait
popa
mov
into
inc
je
es
lods
imul
stos
arpl
dec
or
dec
test
shlb
sbb
loop
call
xchg
sarl
cmp
adc
stos
ret
push
dec
push
int
jl
pop
hlt
add
push
push
xchg
jl
sub
sub
mov
sbb
lods
xor
sbb
pop
mov
bound
inc
xchg
sub
lcall
lds
ja
rclb
sub
xor
inc
rorb
and
push
push
sbb
popa
out
lods
sbb
ret
lea
push
sub
aam
into
sbb
ds
fisttpl
xchg
insl
les
xchg
ja
push
jo
arpl
pop
mov
lret
mov
pop
push
mov
out
lret
push
scas
fld
in
add
xchg
ss
je
dec
adc
sbb
cmp
pop
jge
pop
lcall
pop
push
aad
inc
ss
les
ffree
insb
push
enter
in
push
add
daa
ja
or
dec
adc
xchg
cwtl
les
test
fcompl
xor
mov
mov
scas
jae
mov
aaa
mov
mov
lcall
jge
lds
int3
cmpsb
jge
icebp
push
call
pop
dec
repz
mov
outsl
cmp
aas
pop
lahf
add
pop
dec
push
sbb
push
adc
rorb
jmp
fbstp
jne
out
xor
jge
sub
or
out
cli
roll
inc
movsl
cmp
jecxz
pop
pop
mov
mov
rcll
mov
cmp
movsl
dec
dec
dec
insl
push
pop
in
ret
jle
cmp
lret
xchg
mov
cld
sbb
jae
ja
call
jae
sbb
loope
xchg
jne
js
int3
push
push
cmp
fnstcw
sub
push
jecxz
and
mov
and
imul
out
movsl
nop
rcrb
xchg
ljmp
testb
movsl
aaa
fadds
daa
sbb
cmp
cs
xchg
rcl
mov
inc
movl
aaa
inc
push
data16
cmp
cs
ret
inc
loopne
push
mov
hlt
filds
mov
xchg
inc
sbb
gs
pop
dec
and
dec
xlat
sub
dec
ret
cmp
lds
fcomi
outsb
and
jb
mov
dec
mov
lea
popf
out
cld
xchg
pop
hlt
fmull
call
adc
jns
xchg
dec
scas
xchg
popf
inc
rcll
xorl
push
mov
or
sahf
or
loopne
xor
out
xchg
rcll
ficomps
ror
rcrl
mov
repnz
xor
scas
sub
pop
lods
mov
mov
movsl
cld
pop
push
nop
inc
and
test
push
stc
add
jle
push
cmp
xchg
add
sbb
jle
iret
int3
stos
add
xlat
mov
movsb
jno
repnz
shll
pop
mov
mov
sub
call
mov
sbb
outsl
popf
pop
and
mov
dec
adc
or
xchg
jle
test
shrl
test
sahf
test
push
mov
pop
jb
jb
inc
jne
or
push
xchg
data16
mov
aas
into
push
mov
push
scas
mov
add
jb
adc
icebp
xchg
or
and
clc
inc
ret
iret
js
mov
xchg
xchg
mov
mov
pop
out
mov
lret
pop
enter
push
jbe
les
aas
sub
sub
or
enter
jp
mov
and
push
mov
cmp
mov
arpl
dec
xchg
shl
pop
adc
test
mov
into
inc
mov
push
cmc
testl
or
rcrl
pushf
or
dec
xchg
adc
rol
aad
pop
loop
loop
fcmovnu
inc
rclb
jp
out
and
dec
mov
dec
lods
xor
mov
test
jns
pushf
fnstenv
dec
lods
jp
xchg
movb
out
bound
ficompl
cmp
das
scas
xchg
inc
in
stc
sbb
lods
addr16
xchg
in
and
xor
xchg
rclb
rep
add
sbb
xchg
and
mov
aas
cmc
les
test
data16
shrb
pop
xlat
fucomi
sub
push
test
jecxz
call
test
dec
cwtl
jae
cwtl
jb
daa
clc
in
cmp
les
ret
dec
inc
repnz
repz
pop
and
push
pop
xor
sbb
adc
xlat
stos
fcomps
dec
or
xor
dec
dec
jb
lahf
je
jne
je
add
sub
es
or
mov
cwtl
cmp
dec
xchg
and
xchg
in
mov
mov
add
mov
stc
mov
and
fmul
inc
out
pop
fcmovbe
les
lret
lret
and
inc
mov
stos
orb
bound
stos
mov
xchg
out
adc
negb
adc
lods
and
insb
xchg
push
outsl
add
jl
dec
bound
mov
addb
jns,pn
loop
insb
sub
mov
or
sti
or
stos
mov
es
mov
push
popf
dec
mov
or
jecxz
cwtl
jle
cmp
mov
mov
mov
add
dec
mov
pop
addr16
sbb
clc
adc
andl
xor
push
mov
ficoml
or
cmp
arpl
nop
xor
pop
xchg
push
push
inc
ja
adc
sbb
int
js
mov
mov
add
es
pop
cmp
loopne
fdivs
in
leave
inc
es
xor
pop
js
sbb
or
cmc
popa
pop
mov
sbb
mov
cmp
repnz
mov
mov
xor
jae
xor
dec
test
cmpsl
scas
sbb
jmp
ja
push
dec
shl
pop
inc
push
dec
adc
or
inc
inc
daa
fsubrs
call
mov
xlat
xor
je
jb
icebp
xchg
fdivrp
mov
pop
fnsave
icebp
in
push
mov
inc
mov
xor
xchg
pop
mov
inc
outsl
shr
test
cmp
fwait
xlat
or
sbb
mov
out
sub
xchg
adc
aaa
fsts
inc
shlb
add
xchg
pop
lods
hlt
push
sbb
lret
jmp
lds
xchg
jecxz
pop
mov
jno
int
stos
adc
add
outsl
push
and
cmpsb
mov
pusha
cmp
pop
out
lds
ljmp
pushf
xor
dec
repz
daa
movsl
adc
push
and
jne
xor
pop
rorb
mov
jmp
mov
or
or
mov
mov
fimuls
jp
xchg
sub
xchg
jg
rorl
adc
mov
aad
sti
mov
and
inc
jmp
sbb
stos
sub
pop
fsts
sub
sub
das
mov
inc
jae
add
add
mov
sbbb
or
pop
dec
lods
nop
shl
inc
aas
cmpsb
bound
in
sbb
lret
mov
repz
lea
xchg
sbb
push
test
or
ja
mov
js
test
mov
arpl
xchg
mov
jo
dec
jmp
xor
mov
and
add
lods
cltd
inc
jmp
xorb
insb
enter
cmp
mov
loop
les
mov
nop
or
stc
jb
inc
xchg
or
add
test
test
mov
out
cmp
jnp
push
pop
ljmp
add
movsb
mov
mov
jae
repnz
add
jmp
jb
movsl
aad
fisubrl
sbb
dec
push
ret
jae
iret
mov
rcrl
out
sbbb
adc
cmp
imul
in
mov
sbb
jns
inc
jp
clc
sarl
adc
jecxz
lods
call
lahf
mov
popa
and
cmp
fldenv
add
mov
outsl
or
and
or
dec
test
sbb
xchg
in
lahf
out
mov
sbb
push
sub
out
and
mov
sub
inc
jo
jo
push
jge
dec
adc
mov
data16
movsl
aam
jmp
and
call
test
push
js
pop
testb
cmp
jns
aaa
xchg
shl
mov
andl
cmp
cmp
sbb
xor
and
lcall
adc
xchg
jo
dec
jmp
insl
loope
dec
sbb
imul
ficoml
pop
imul
fldcw
mov
pop
xor
loopne
dec
daa
sbb
jo
push
xor
sub
jl
js
push
mov
fiadds
mov
inc
pop
pusha
push
fsubl
pusha
out
mov
ljmp
adc
mov
stc
movsl
arpl
inc
mov
or
sub
sub
inc
xlat
push
addr16
xor
cmp
add
jl
mov
loopne
imul
fnstsw
push
jne
mov
aad
inc
sbb
roll
sbb
aam
xor
sbb
dec
dec
jmp
in
testb
loopne
call
sarb
and
and
mov
lahf
stos
out
movsl
sbb
push
ds
mov
in
pop
aam
and
sbb
sbb
shll
xor
jo
in
and
pop
shrb
pop
mov
movsb
jno
cvtpi2ps
push
cmp
lahf
xor
push
lods
push
pop
orl
jecxz
adc
jmp
jnp
shll
icebp
and
int
andl
aam
inc
pusha
push
pop
push
mov
ss
mov
or
mov
pop
cltd
insb
mov
repz
cmp
in
out
cli
addb
test
push
out
xchg
mov
idivl
lret
xchg
inc
dec
lods
mov
add
mov
push
inc
pusha
push
mov
jge
and
mov
into
inc
faddl
pop
mov
data16
fisttpl
cmpsb
iret
ljmp
es
pop
popf
mov
cltd
popa
add
jge
pop
sarl
enter
adc
and
es
andb
lret
push
inc
fs
mov
sti
push
and
inc
jl
push
fiaddl
or
lock
jmp
adc
fldt
out
incl
sub
pop
rclb
inc
pop
call
fdiv
dec
sbb
add
mov
in
hlt
mov
lods
adc
in
sahf
pop
sbb
and
fcmovbe
mov
popl
bound
and
out
push
mov
imul
lahf
out
shll
or
sub
jns
sub
mov
iret
scas
pushf
push
mov
jmp
mov
imul
lret
jae
pop
scas
push
mov
cmp
scas
xchg
xchg
push
lds
in
mov
enter
cmp
cmp
mov
fwait
mov
repz
pushf
int3
jno
cs
inc
pop
push
cmp
xchg
into
orl
outsb
roll
les
int
mov
sbb
push
or
xchg
dec
out
lods
and
or
jae
jno
add
sbb
outsw
fwait
jne
aas
stos
repz
mov
fldl
push
hlt
cmp
jge
add
scas
sub
ss
stos
gs
xchg
and
sbb
iret
push
lahf
lock
push
push
in
push
fisttpl
or
add
sub
fidivs
push
movsl
inc
dec
loop
insl
arpl
inc
add
xlat
adc
push
aad
lahf
inc
add
push
les
fwait
stos
xor
movsl
sbb
out
aam
inc
divb
pop
fdivp
push
dec
xor
je
sbb
mov
faddl
jle
in
arpl
lahf
stos
jl
inc
or
or
dec
dec
stc
xchg
cmp
add
xor
mov
test
aaa
jno
lds
jno
sbb
mov
inc
out
dec
out
fimull
pop
out
mov
add
and
push
test
test
rcr
mov
cli
and
push
adc
and
lea
movsl
adc
ja
xorl
jne
xchg
cmp
in
outsl
shlb
cld
jl
insb
mov
jle
jecxz
push
ja
lahf
daa
sbb
adc
inc
stos
sbb
mov
and
fimuls
push
jle
pop
add
jg
add
sahf
mov
psubq
aam
ja
xor
outsl
sub
call
repz
icebp
lods
push
lock
pop
mov
xchg
mov
call
inc
paddsw
add
pop
into
inc
repnz
lods
mov
sti
popa
lea
add
test
movsb
test
mov
loope
popf
cmp
fdivr
clc
lahf
sub
daa
std
ljmp
inc
xorl
pop
iret
orl
sbb
sub
jbe
fisubrl
rclb
inc
ja
push
jno
dec
rorb
ffree
sub
andb
cmp
test
outsl
push
loope
andb
sbb
xchg
adc
das
push
neg
lea
jns
xorl
je
jp
fmuls
aad
xchg
jmp
lcall
xchg
xor
mov
jge
sub
aad
scas
movsb
test
mov
xor
pop
test
iret
pop
mov
movsl
pop
faddp
movsl
cmpsb
mov
adcb
jno
out
rcl
outsl
adc
xor
and
add
pop
xchg
mov
cld
outsl
bound
and
bswap
jmp
push
adc
mov
and
fsubr
or
fdivl
lods
les
push
es
or
jge
test
lods
dec
mov
cli
out
mov
scas
lds
jbe
notb
pop
out
orb
sub
dec
add
lret
inc
fdivr
xchg
dec
add
mov
xchg
cltd
fmull
cld
cs
mov
mov
popf
mov
lea
mov
enter
icebp
mov
adc
mov
mov
add
jns
je
xor
push
cld
stos
sbb
enter
imul
ljmp
xchg
add
cmpsb
into
mov
adc
add
sti
scas
mov
stos
dec
or
adc
loop
ljmp
inc
mov
ljmp
inc
scas
or
pop
fnsetpm(287
add
js
into
popf
sbb
mov
leave
mov
sbb
sbb
aad
hlt
sub
test
js
aas
mov
insb
iret
inc
xchg
mov
sarb
scas
jle
movsl
outsl
ja
jge
fbld
pushf
movsb
jmp
aas
push
cltd
inc
and
or
dec
pushw
mov
inc
push
aam
fisubrs
cmp
push
insb
stos
jge
shl
imul
jne
dec
test
bound
es
push
fs
add
int
int3
or
dec
xor
pop
xor
addr16
ja
and
push
jbe
ret
xor
jecxz
add
or
ficoms
push
or
ficompl
lods
pop
fnstenv
fildll
cltd
sbb
push
add
repz
movsb
sbb
pop
mov
movsb
loopne
xor
fucom
stos
arpl
call
and
sub
xor
lea
cld
push
dec
in
pop
or
inc
daa
xchg
stos
mov
mov
add
adc
rorb
leave
sub
xor
sbb
orps
mov
shrl
outsl
adc
outsb
lcall
mov
push
adc
inc
pop
je
inc
sti
fs
ret
icebp
mov
int3
in
pop
push
and
rolb
imul
inc
cmpsb
les
fmulp
mov
fdivrs
insb
stc
loop
push
mov
insl
gs
xlat
test
mov
mov
and
inc
push
push
pop
xor
or
loop
enter
cmpsl
mov
rol
test
xchg
mov
mov
lea
subb
call
dec
pop
pop
push
pop
loopne
sub
adc
decb
in
fwait
pop
clc
jp
push
sbbl
lods
rcrb
sub
cwtl
xor
jle
iret
adc
cmpsb
add
popf
dec
cmp
dec
push
dec
out
movsb
dec
jnp
filds
hlt
rolb
jbe
scas
ret
jbe
neg
mov
add
pop
adc
dec
push
xchg
jl
test
or
or
xor
loope
data16
and
sbb
sahf
dec
nop
xchg
fwait
mov
push
mov
xor
movsl
cld
pusha
neg
stos
loope
sarb
into
jp
add
cmc
sbb
stos
mov
fidivs
jl
add
push
jmp
inc
push
pop
div
lcall
inc
int
inc
xor
mov
push
push
mov
rclb
sub
sbb
xchg
cmp
add
les
fs
mov
cmp
rcrl
jge
xchg
mov
inc
jmp
inc
jno
jmp
ljmp
in
ffree
pop
adc
cli
jne
pop
push
rorl
jge
fstps
jp
ja
mov
int3
in
rcll
sbb
jle
ss
frstor
sbb
push
arpl
sbb
mov
in
push
dec
in
out
movsl
push
sub
lea
in
cwtl
mov
mov
test
push
and
cmc
jo
and
add
ret
shrb
mov
mov
mov
out
cmp
sub
push
sub
jbe
jp
in
jns
jae
inc
outsb
sub
fstpt
mov
sti
pop
fs
fxtract
bound
pop
movsl
lahf
jp
push
mov
mov
jne
xchg
mov
ja
jmp
mov
xchg
mov
cmpsl
lock
lcall
lds
aam
mov
and
fcoms
dec
repnz
sub
push
ja
clc
xor
sti
pop
cs
cmpsl
stos
pop
sbb
lds
fisttps
stc
test
xor
test
sbb
fsubrl
mov
mov
push
jp
arpl
xchg
jno
dec
lahf
lcall
adc
mov
or
hlt
sti
arpl
add
cmp
lret
push
push
icebp
mov
gs
xor
mov
mov
js
cmp
std
mov
imul
retw
lock
mov
mov
je
ds
jl
mov
push
mov
sbb
stos
jbe
xchg
inc
xchg
in
mov
inc
inc
add
mov
or
xchg
push
out
jl
jo
rcrb
dec
loopne
mov
push
xor
clc
es
sbb
and
nop
imul
xor
fimull
push
outsb
mov
pop
jne
mov
cmp
or
idivl
pop
sbb
fwait
enter
addr16
jnp
pop
shll
and
xchg
cmp
js
push
xor
add
jb
repz
loopne
arpl
stos
or
mov
cmp
mov
mov
and
test
dec
and
pop
mov
cmp
mov
cmpsb
cmp
repnz
cmp
mov
imul
test
pop
sbb
and
dec
pop
or
adc
into
dec
aam
sbb
iret
outsb
test
cld
movsl
js
ljmp
xchg
adc
add
loope
mov
mov
pop
push
mov
add
pop
mov
add
xchg
imul
and
jmp
dec
or
or
sbb
outsl
jbe
mov
sbb
addr16
mov
iret
jnp
dec
fwait
inc
test
in
cltd
cmpb
cmp
test
inc
mov
lret
jo
dec
add
pop
lock
aad
pop
data16
sub
push
daa
xchg
mov
push
or
jmp
fs
lods
sbb
int
and
cltd
mov
push
sbb
sub
adc
in
jb
dec
lea
mov
out
inc
iret
out
xor
gs
mov
pop
jl
andl
loope
test
pop
jecxz
aas
lahf
daa
gs
and
out
or
leave
add
push
mov
mov
sub
push
adc
cmp
xchg
xchg
jl
jp
mov
jmp
nop
scas
mov
jnp
adc
stos
pop
scas
fisubrl
cmovp
mov
mov
in
jnp
jnp
mov
mov
loop
outsb
sub
cmp
aaa
in
fs
rorb
pushf
or
mov
jmp
push
fdivp
js
inc
popf
fistps
pop
sbb
mov
xchg
imul
mov
lea
std
cwtl
lret
mov
lods
mov
imul
jmp
cmp
adc
int
mov
sbb
push
test
jecxz
cld
and
adc
sub
push
push
pop
push
xchg
out
mov
popf
test
outsl
daa
mov
mov
stos
je
push
dec
mov
cld
pop
sbb
mov
into
outsb
leave
xorb
add
mov
sub
sbb
stc
repnz
cmpsb
cli
jp
and
dec
jmp
cwtl
mov
and
ss
dec
dec
fldenv
pop
popa
cmp
cld
inc
filds
maskmovq
and
les
jnp
and
xchg
add
rcrb
push
sarl
adc
and
cmp
aad
iret
pop
push
mov
add
test
push
jl
cmp
adc
xchg
js
jno
mov
shlb
lds
hlt
cmp
add
scas
repnz
aaa
ret
mov
in
mov
int3
mov
cmp
mov
mov
jle
dec
clc
addr16
daa
inc
and
jg
jno
jnp
push
dec
push
jnp
sub
or
mov
rcrb
jno
and
aas
jbe
leave
xchg
mov
xor
sub
cmc
jne
shrb
sbb
gs
pop
jnp
out
aaa
stos
jnp
xchg
fistps
loope
xchg
mov
test
adc
pop
andl
push
js
xchg
adc
fimuls
popf
cmpb
sub
cmp
jecxz
jl
js
pop
add
jp
mov
in
mov
or
cmpl
xor
aad
in
loop
jno
pop
popa
mov
add
lods
lds
pop
dec
loope
adc
pusha
dec
aaa
int3
sub
fimuls
or
xchg
xchg
dec
inc
movsb
jnp
sahf
cltd
sbb
inc
cmpb
shrl
adc
cmp
lds
repnz
push
mov
cmp
andb
and
lret
aaa
adc
pop
leave
int3
scas
push
rdmsr
popf
scas
mov
lret
sub
mov
sahf
daa
cmp
and
int3
std
sub
xchg
mov
mov
pop
push
jns
scas
mov
push
enter
mov
jb
leave
gs
fs
ss
aam
stos
clc
stc
iret
mov
hlt
mov
mov
xor
xor
fstpt
sarb
push
insl
movsb
icebp
insl
outsb
mov
jbe
add
add
push
push
std
sub
mov
inc
dec
divl
dec
sbb
ss
push
xor
daa
decb
enter
cld
fwait
stos
xlat
inc
in
mov
or
inc
adc
xor
pavgw
mov
lock
jo
movb
inc
ljmp
or
movsl
mov
sti
dec
and
es
push
sub
outsl
movl
test
adc
sub
rcrb
xor
inc
out
jnp
jb
stos
lcall
sbb
dec
jb
pop
jl
xor
mov
adc
popf
mov
scas
lea
push
dec
xchg
jo
inc
outsl
jne
out
das
inc
jge
mov
xor
xchg
les
fdiv
fildll
cmp
add
inc
dec
cmpsl
stos
add
scas
cmp
dec
jno
adc
insb
lds
pop
mov
in
rolb
repnz
fwait
adc
movsb
mov
mov
es
leave
xchg
push
xor
mov
loope
imul
add
cmp
mov
pushf
mov
sub
sbbb
test
bound
imul
jo
adc
or
or
push
add
int
mov
loope
mov
lds
xor
iret
sub
pusha
ja
mov
sbb
outsl
mov
pop
jge
cmp
shll
push
cmp
movsl
lods
add
add
lea
push
incb
aas
test
xchg
cltd
push
xor
es
inc
or
ret
lock
js
shlb
mov
and
imul
call
or
xor
ret
push
add
shll
push
ljmp
pop
push
mov
xlat
xor
sbbb
popf
sub
inc
out
popf
inc
adc
push
pop
lcall
cmpsl
pop
idivb
imul
xchg
pop
sbb
movsl
pushf
push
testb
inc
fnstsw
inc
orb
fcmovbe
inc
dec
decl
sub
jle
fcom
sub
es
les
sbb
or
or
clc
adc
or
rcll
mov
scas
ds
sub
das
imul
lods
pop
xchg
inc
pop
mov
push
in
jae
les
mov
add
popf
fisubrl
shr
lcall
rcll
shll
mov
in
in
popa
xchg
mov
mov
imul
adc
test
nop
fisubs
repnz
stc
xchg
cld
ret
mov
xor
adc
xlat
cltd
add
out
arpl
xor
pop
push
mov
dec
sbb
cwtl
push
in
bnd
lahf
cli
and
inc
lds
cmpb
out
mov
inc
sbb
lret
popa
mov
jns
jbe
fwait
xorb
ss
lods
out
movsl
data16
inc
jl,pt
mov
jg
enter
iret
xor
nop
iret
xchg
pusha
sub
dec
ja
lds
add
mov
arpl
and
aam
imul
arpl
das
jbe
aaa
jb
scas
lret
sahf
call
inc
insb
jmp
sub
call
shrb
cmp
dec
dec
pop
xor
repz
sti
aaa
pop
ds
push
pop
add
sahf
mov
imul
adc
xorl
adc
push
in
ret
lahf
sub
inc
int3
je
ret
adc
sbb
xorb
push
sub
out
int3
push
mov
push
inc
pop
test
pop
mov
jbe
mov
xor
sub
mov
push
les
xor
add
or
mov
mov
in
xchg
test
xchg
sub
xchg
scas
push
addb
mov
movsb
jecxz
and
ret
xchg
jl
daa
mov
or
jnp
jae
jecxz
adc
add
mov
out
push
and
sbb
cld
sti
mov
xchg
aam
mov
mov
test
inc
cmp
mov
pop
in
notb
cmpsl
lret
arpl
idivb
scas
push
xor
sub
rcrb
mov
movsb
adc
xor
imul
lcall
push
pop
scas
mov
call
mov
lahf
sbb
popf
ror
imul
push
add
pusha
sbb
fbstp
loope
or
xor
test
dec
sbb
inc
js
adc
xchg
jne
adc
in
clc
push
call
jo
out
sbb
cmp
dec
jae
movsl
mov
nopl
rcll
push
inc
push
pushf
hlt
les
lock
push
jl
xchg
sti
cmc
fimull
cmp
push
add
or
dec
or
jecxz
cwtl
xor
popf
sti
int
jmp
xor
enter
adc
pusha
loopne
xor
adc
popa
mov
inc
push
fwait
push
or
imull
into
mov
inc
cmp
pusha
sahf
into
push
add
xchg
xchg
jecxz
call
iret
push
mov
push
aad
in
jle
xchg
sub
cmp
sub
xchg
in
movsb
aaa
mov
xchg
stos
test
dec
push
push
in
mov
inc
ljmp
push
fldt
loopne
cmpsb
test
push
lds
and
adc
lret
xlat
sti
loopne
xchg
mov
ret
lcall
inc
popf
stc
fdivs
add
divl
push
adc
jae
fisubs
cs
movsl
push
pop
sub
mov
mov
mov
js
push
push
xor
mov
ret
or
gs
jnp
lods
inc
push
test
add
imul
jge
sbb
sub
xor
adc
sbb
push
pusha
rcrb
mov
jns
pop
xor
repz
fists
pushf
cmpsl
aaa
and
mov
xchg
mov
jle
shlb
mov
ficomps
push
das
sub
in
bound
add
das
push
test
xchg
out
test
insl
cs
push
cmp
loop
cmp
or
test
js
repnz
fsubrs
push
insl
testl
add
and
out
hlt
outsb
stos
push
repz
cmp
arpl
subb
mov
lahf
sti
mov
mov
jp
je
cmpsb
repnz
mov
ret
inc
fcoml
es
rorl
adcl
sbb
pop
out
cmp
or
mov
mov
mov
out
cli
jle
inc
mov
stos
jo
ficomps
hlt
dec
jbe
repnz
add
js
pusha
ds
popa
movsl
cmp
dec
ret
and
push
and
or
out
adc
xor
cmp
mov
test
dec
mov
xlat
addl
clc
xor
push
sbb
push
inc
cli
orb
call
pusha
inc
aad
mov
mov
mov
jg
pop
push
cmpsl
dec
xchg
jecxz
sbb
test
sub
sbb
mov
rolb
xchg
or
shlb
push
lea
or
xchg
jp
js
das
push
mov
outsb
mov
jne
and
rcll
or
xchg
push
cwtl
dec
sarb
lret
mov
mov
push
int3
push
add
pop
sahf
mov
js
sbb
into
mov
dec
out
ficoms
sub
cmpsb
sub
mov
cli
repz
mov
xlat
or
in
mov
rol
pop
jmp
scas
adc
and
clc
out
dec
cmpsl
addr16
push
sbb
sub
dec
xchg
popa
out
sahf
mov
xlat
sub
ret
cltd
inc
jnp
adc
lahf
inc
mov
movsl
int3
pop
ret
sub
icebp
cltd
pop
ret
lret
mov
dec
push
jbe
mov
fcomip
sub
adc
push
fistps
test
fildl
jo
int
loope
test
xchg
adc
jne
jg
xchg
sbb
mov
lret
in
inc
jmp
or
xchg
sbb
jl
xor
cld
xchg
inc
call
in
lret
cmp
cmc
popf
data16
mov
push
aaa
aaa
or
jg
jge
aad
xor
jne
adc
lahf
pop
lods
jg
or
mov
add
jb
xchg
pusha
mov
fbstp
xor
mov
or
adc
add
in
cmp
rcll
pop
out
daa
pushf
rorb
loope
xor
jo
shll
cmp
adc
dec
jbe
insl
jg
scas
ss
mov
push
mov
sub
popa
in
add
mov
into
dec
repnz
ret
pushf
es
cmpsl
std
popa
add
pop
std
push
cmc
arpl
inc
sahf
negb
jl
scas
sti
cwtl
mov
ja
aaa
test
decb
or
inc
pop
mov
mov
je
je
aaa
mov
mov
mov
lret
pop
lds
push
jp
ret
rol
popf
dec
cmp
cwtl
xchg
or
ljmp
scas
leave
push
dec
mov
clc
call
testb
jmp
div
and
or
ror
lahf
mov
aad
inc
popf
in
lods
sar
mov
xchg
loopne
sub
mov
push
pop
push
sbb
xchg
repnz
jnp
popf
iret
push
cs
mov
mov
pop
pop
mov
cwtl
jmp
movsl
sbb
push
inc
jne
adc
mov
test
add
in
lods
xchg
sbb
fwait
repz
jp
dec
in
jns
add
fwait
jae
pushl
fsubp
mov
enter
pop
inc
imul
insl
fmull
cmpsl
leave
sbb
mov
xlat
cli
lods
xchg
and
mov
loopne
cmp
mov
ljmp
sbb
fldlg2
loope
dec
jns
jb
mov
inc
xor
cwtl
sub
jbe
test
cmc
movsb
addr16
pop
adc
mov
jnp
nop
pop
stc
lea
ds
mov
sub
hlt
mov
hlt
sbb
cmpsl
fbstp
test
iret
adc
push
xlat
pushf
xor
jb
xchg
mov
call
xchg
sbb
push
fldl2e
in
adcb
jmp
sub
jge
pop
adc
popa
mov
cmp
and
push
push
fs
stos
lods
adc
sar
jle
add
popf
arpl
mov
pop
adc
inc
loope
fwait
mov
lods
jmp
test
sub
shl
and
je
cwtl
outsb
inc
das
xchg
aam
push
repnz
mov
lcall
mov
add
ficomps
lahf
iret
call
inc
dec
xchg
movsl
in
aas
jo
push
pop
outsb
popa
add
ljmp
inc
in
cli
xor
or
or
jle
lea
mov
sub
mov
ljmp
aas
cmpsl
mov
pop
fistpl
ret
or
jmp
decl
pop
out
mov
iret
pop
jo
mov
push
fldcw
push
xor
push
rcr
mov
xchg
int
xchg
xor
scas
push
loopne
sbb
cli
fcom
add
js
in
sub
add
cmp
jle
inc
lahf
and
mov
pop
aam
and
jg
cmp
push
sub
ja
inc
in
sbb
adc
and
jb
jnp
aas
fucomip
push
xchg
xor
gs
xchg
sub
loopne
sbb
es
into
sbb
adc
insl
adc
mov
cld
cmp
inc
xor
jae
lds
shlb
push
or
stc
push
sbb
xchg
mov
and
sub
arpl
pushf
fidivl
sub
lods
pop
pop
pop
pop
notl
xchg
fadds
faddp
mov
sub
aas
loopne
xor
mov
push
push
aad
dec
aad
sub
popa
jne
cld
testb
lret
lock
test
shr
mov
int
and
mov
int3
inc
stos
inc
add
enter
dec
test
call
cmp
adc
xor
jecxz
inc
adcl
sub
mov
sbb
jne
ljmp
loop
jns
addl
mov
mov
cmp
imul
add
jmp
lret
adc
shrl
mov
lret
pop
inc
xchg
in
js
cmp
jne
sbb
icebp
inc
inc
andb
push
xchg
mov
xchg
and
call
dec
cmp
lret
sbb
lods
nop
inc
adc
inc
push
and
dec
in
or
ds
les
jne
out
push
sbb
adc
mov
mov
js
inc
jo
mov
adc
mov
mov
enter
std
cmp
in
and
xor
sahf
in
mov
sub
jle
in
fldenv
movsb
mov
dec
inc
pop
loope
cs
enter
cmp
stos
add
fldl
cwtl
ficompl
cmpsl
in
push
pop
out
jns
push
outsb
bound
stos
int
push
and
dec
lock
insb
out
adc
inc
sbb
int3
and
fsub
stos
cs
and
rclb
cmp
mov
mov
xor
lea
cmp
int3
shrb
lcall
fldl
xor
mov
pop
dec
leave
shrb
imul
sbb
fsubp
leave
aam
lahf
pop
sub
out
arpl
sti
or
cmp
icebp
out
adc
jge
add
and
xlat
fcompl
pop
js
into
mov
and
outsb
lret
push
sbbl
ret
dec
push
jne
pop
aam
into
mov
add
sub
je
les
pop
push
sbb
dec
push
fwait
repnz
ja
push
jmp
les
xchg
lcall
mov
aaa
cmp
arpl
movb
fnsave
mov
bound
xor
in
mov
loope
mov
push
aam
adc
xor
mov
negl
bound
dec
xchg
xchg
dec
or
fwait
pop
test
mov
fsubr
or
add
out
adc
push
sub
fwait
jge
int
nop
into
push
lods
sub
mov
xor
inc
aas
in
fisubl
aam
and
test
fdivrl
iret
mov
pop
jne
push
mov
test
adc
cmc
nop
push
outsl
arpl
leave
cmc
pop
insb
lock
daa
lods
lcall
and
arpl
orb
add
or
jle
and
dec
mov
jns
push
hlt
jecxz
leave
mov
insl
dec
mov
jle
mov
addb
int3
fdivrl
repnz
cmp
and
sub
push
mov
xor
cmp
test
sti
cmpsl
sbb
mov
xchg
rorl
pop
mov
xchg
mov
mov
dec
das
push
and
inc
and
insl
leave
inc
push
inc
data16
aaa
mov
xor
mov
subb
test
push
mov
sub
stos
push
pushf
inc
in
mov
sbb
pushf
adc
arpl
pop
sti
pop
fs
push
sub
pop
stc
cmp
inc
xor
popf
mov
fstl
mov
insl
es
shrb
or
pusha
scas
outsb
jle
mov
or
insl
or
addr16
sub
push
idivb
idiv
in
fwait
and
or
aaa
and
icebp
dec
inc
mov
pushf
test
out
fsubs
iret
test
inc
add
xor
imul
push
mov
dec
mov
in
lods
and
pop
mov
scas
adcb
lds
mov
mov
shld
imul
push
or
xchg
int3
inc
in
rcrb
mov
in
mov
dec
dec
mov
sub
test
out
jecxz
cmp
mov
mov
aas
pop
je
pop
imul
xchg
ljmp
jo
cmpsb
lock
jle
push
mov
dec
lods
sub
and
and
push
sahf
lret
push
mov
add
lock
loop
insl
push
mov
ret
ss
or
mov
mov
stc
adc
inc
cmp
out
xorl
enter
adc
test
test
repz
xchg
and
mov
inc
in
daa
cld
pop
mov
mov
stc
adc
xor
popl
or
sub
out
std
xchg
xchg
aaa
xchg
push
sbb
shrl
fsubp
subb
rcr
rorl
xchg
mov
je
mov
adc
adc
std
pop
sub
clc
cmp
fcmovnbe
mov
cmp
mov
xchg
decb
pop
mov
fucomip
push
stc
inc
dec
pop
nop
pop
pop
sub
scas
inc
push
fcmovbe
pusha
movsb
stc
push
push
std
adc
fcmovnbe
xchg
lret
mov
dec
mov
pop
int
add
pop
stc
add
mov
loopne
sbb
stos
sub
mov
push
push
jo
add
inc
fdivr
jb
mov
aam
xchg
dec
or
in
mov
mov
out
and
mov
cmp
and
mov
xor
cmc
ds
scas
fidivrs
xchg
pop
or
dec
lret
lahf
jo
hlt
shlb
cwtl
in
mov
mov
scas
or
push
rorl
mov
bound
test
add
pusha
xchg
mov
sub
std
js
push
pop
mov
mov
iret
ret
xchg
clc
mov
lods
jnp
jns
daa
push
fsubrs
jne
test
push
and
xor
out
or
aam
or
nop
cltd
and
xacquire
or
out
mov
cmp
aam
mov
out
push
dec
push
mov
ret
mulb
mov
insb
sbb
fimull
sbb
cs
dec
jp
test
push
lods
sbb
insb
gs
cli
call
out
leave
call
out
lds
js
lods
or
mov
bndstx
pop
iret
push
cmp
sar
ljmp
cmp
addr16
fstpt
movsb
bound
add
pop
addr16
inc
js
and
sbb
test
popf
lea
push
lea
arpl
mov
jae
adc
push
negb
inc
adc
shrb
cmp
in
hlt
mov
insb
in
stc
inc
dec
ficoml
in
jbe
inc
inc
jae
adc
rclb
xchg
out
mov
pop
mov
dec
mov
push
inc
test
aas
cmpsl
or
ja
rcr
in
push
divl
dec
jge
pusha
inc
mov
jb
lfs
inc
js
sbb
add
and
cmp
ret
rolb
decb
cmp
int
imul
add
stos
enter
aaa
add
sub
aam
sbb
or
cwtl
popa
daa
jbe
data16
into
fs
pop
aaa
or
inc
jbe
idivb
mov
negl
mov
bound
movsl
add
dec
lret
dec
pop
lret
jl
lea
pop
sbb
insl
inc
mov
sbb
inc
mov
mov
sbb
into
mov
scas
rorb
cmp
mov
xchg
jb
sbb
xchg
out
adc
add
mov
pop
cmpsb
and
mov
ret
out
cmc
pop
mov
leave
dec
cwtl
pop
data16
mov
js
ja
icebp
adc
or
movsl
out
loop
pop
bound
fcomps
push
addb
aam
mov
ss
sti
jae
les
pop
std
in
fisttpll
addb
data16
add
pop
mov
cmp
fldcw
jl
fidivrl
mov
xchg
or
jmp
movsl
jg
mov
sbb
and
repnz
xchg
in
pusha
mov
jo
flds
popa
aad
addr16
jb
sub
xlat
pop
xchg
ror
test
adc
movsl
movsl
mov
pop
dec
or
lods
mov
mov
adc
rep
cmp
xchg
jnp
nopl
out
cli
enter
repnz
sbb
leave
out
mov
xchg
ds
pop
sbb
adc
arpl
adc
in
cltd
pop
jle
adc
pop
sub
fsts
mov
rorb
pop
fimull
movsb
jns
pop
mov
pop
test
mov
stc
cmp
loopne
setb
aaa
mov
ret
loope
fistpll
in
or
pop
clc
xchg
clc
pop
test
fmuls
aas
inc
cmp
loop
sbb
in
subb
sarb
sahf
dec
nop
jno
pop
mov
scas
xor
cmpsl
out
test
cmp
imul
outsb
movsb
and
push
popf
int
or
in
xor
jl
cmpsl
hlt
add
pop
mov
mov
and
loop
cli
xchg
xor
push
xor
mov
ret
cmpsb
push
call
pop
psrlq
add
mov
mov
add
inc
hlt
inc
pop
aam
mov
mov
or
inc
lahf
fdivrs
fwait
insl
imul
mov
bnd
or
addr16
sub
push
stos
pop
push
mov
fcoms
rclb
xor
push
ficompl
sbb
stos
pop
test
jge
pop
adc
push
adc
or
repnz
fcmovb
es
dec
and
fisubl
dec
sbb
inc
dec
ja
dec
sub
lcall
jge
jae
mov
cli
xchg
aas
sahf
aam
mov
dec
jge
fldl
mov
lods
inc
test
dec
in
pop
shl
mov
and
sub
mov
cmovg
adc
lcall
cmp
inc
xor
mov
xchg
sbb
jp
loop
push
js
pop
mov
repz
ja
or
test
fsubr
pop
fistpll
jno
xchg
push
std
xchg
clc
jle
imul
push
xor
pop
test
xchg
call
lcall
roll
sbbl
jae
adc
int
mov
mov
xor
repz
scas
scas
pop
hlt
sub
jb
rolb
push
xor
and
aaa
pop
rclb
bound
cmpsb
lods
pop
loop
mov
rclb
push
sahf
movsb
int
mov
imul
insl
adcl
mov
enter
push
adc
jbe
mov
xor
xor
sbb
sub
add
push
pop
sub
fidivl
or
jb
pop
xor
mov
xchg
dec
cmp
lret
mov
jmp
imul
cltd
pop
push
pop
adc
test
dec
cwtl
int3
xor
xor
insl
loopne
dec
push
lods
sbb
scas
push
add
ret
adc
das
imul
rorb
mov
sbb
xchg
inc
push
dec
aas
loopne
imul
jb
mov
dec
lcall
imul
fildl
cltd
pusha
lret
ss
pushf
js
cld
dec
add
push
mov
test
movb
les
mov
mov
mov
out
adc
lret
pop
popa
pop
jmp
insl
popa
cld
sbb
xchg
pop
aas
xlat
mov
jmp
push
lods
xchg
ja
stc
jl
mov
push
imul
push
fisubl
pop
cltd
out
mov
fwait
xorl
fsubrs
push
aam
rclb
aam
push
into
or
enter
aam
jnp
xchg
mov
jmp
push
pop
int3
cli
hlt
stos
or
pop
std
dec
mov
mov
aaa
mov
aad
mov
push
or
mov
insb
xor
lret
and
inc
pop
jecxz
rcr
sar
test
mov
lret
cmpb
lahf
clc
jb
jp
mov
add
pop
pushf
dec
sbb
test
mov
sbb
jmp
rcrb
sub
mov
cmpsb
mov
fiadds
loop
fistpl
jmp
mov
sbb
and
test
sub
je
inc
clc
sub
bound
jmp
outsb
push
adc
data16
push
mov
testl
aam
jne
sbb
add
push
pop
push
mov
inc
ret
sub
or
xor
jno
and
jg
push
push
hlt
sub
ficomps
inc
cmp
movsl
dec
mov
jge
in
ja
in
jge
cmp
ja
cmpsl
push
push
sub
in
add
dec
ds
inc
fdivrl
out
or
pop
cmp
lds
lods
test
test
lahf
aam
jmp
push
jge
ret
fmuls
mov
xchg
insb
dec
push
add
sbb
addl
sub
mov
movsb
cmp
ret
xchg
in
ds
pop
sbb
aad
popf
mov
mov
test
mov
or
xor
clc
loop
fcompl
lret
ficoms
nop
xor
mov
jmp
cmp
xchg
xor
cmpsb
dec
js
xchg
idiv
addb
mov
fs
dec
es
lret
lcall
jne
mov
icebp
inc
push
loopne
mov
mov
into
push
jns
jle
shll
aam
dec
outsl
in
fiadds
xchg
cmp
dec
ss
jg
inc
clc
jle
pop
call
scas
sub
aas
mov
inc
and
ss
popa
ja
inc
sarl
add
sahf
xchg
xchg
mov
adc
loopne
out
pop
dec
push
sti
and
mov
adc
shlb
pushl
xchg
sbbb
push
loopne
mov
int
sub
shrb
cmp
lds
jecxz
dec
pop
cltd
push
loopne
sbb
mov
push
inc
aaa
push
mov
dec
mov
rcl
inc
fnstcw
jmp
cmpsl
cs
xor
pop
test
std
cs
fstpl
jnp
mov
ss
shrb
mov
push
dec
rclb
sbbb
push
pop
adc
xor
test
sldt
dec
jp
mov
in
jl
adc
int3
mov
adc
je
pop
fcompl
cld
inc
cmp
inc
ja
fwait
idivb
jo
jmp
das
pop
out
jp
data16
xchg
adc
push
and
and
test
sahf
aad
dec
test
fcmovnu
xor
sub
dec
add
pop
cmp
cmpsl
in
push
push
mov
loope
inc
sbb
jmp
lods
dec
sub
jl
rcrb
mov
es
inc
adcl
cli
mov
jno
and
loopne
out
sbb
dec
xchg
mov
jl
arpl
pop
sar
cld
sti
cmp
jo
mov
jno
in
lahf
cmc
pusha
aaa
cld
inc
js
mov
mov
add
fstpl
cmpsl
ljmp
scas
cs
push
xchg
movsl
jno
pop
les
subb
inc
mov
mov
pop
inc
mov
dec
popf
jnp
lcall
sub
movsl
ret
in
cmp
shrb
sub
sub
insl
inc
in
pop
push
arpl
push
mov
jecxz
mov
mov
sarl
ror
pushf
iret
cwtl
popa
pop
xor
xchg
icebp
push
inc
sub
xchg
cmpl
idiv
fcos
pop
xchg
lods
inc
mov
cmp
inc
push
xchg
mov
lcall
lds
outsb
xchg
add
cwtl
dec
lock
hlt
pusha
mov
jge
dec
push
nop
and
sbb
shll
mov
lea
cmp
mov
cmpsl
mov
dec
pop
scas
push
lds
mov
lahf
popa
jmp
bound
push
addb
nop
sub
cltd
test
scas
stos
sbb
std
push
push
jo
cmp
idivl
push
push
pop
xchg
sbb
popa
loopne
push
lock
cltd
and
nop
test
cld
inc
insl
mov
insl
pop
cmpsb
inc
jmp
cltd
scas
mov
push
je
aam
mov
insl
fs
mov
push
movsl
add
jo
xchg
jbe
push
aad
push
imul
mov
scas
sub
imul
and
into
clc
in
dec
xchg
mov
test
iret
sahf
dec
daa
ds
push
outsl
aaa
push
cli
es
movsl
cmp
mov
mov
ret
xor
pop
lods
jno
push
pop
lock
out
xchg
gs
popa
sbb
loope
xor
and
jb
in
rorl
xchg
fstp
push
mov
or
mov
add
fcomp
adc
stc
lret
sbb
rcrl
call
sar
mov
push
add
sti
jecxz
callw
xor
out
enter
imul
adc
popa
loope
jb
gs
jl
pop
or
xchg
rolb
imul
lods
fimuls
inc
and
add
out
push
lods
out
xchg
push
dec
int
pop
push
sti
inc
add
push
sub
in
cmp
addb
movsl
flds
sbb
push
mov
lds
pushf
sti
push
pop
popa
fsub
mov
xorb
jbe
das
sbb
add
and
mov
sub
add
jecxz
lret
into
popf
or
loopne
pop
push
cmpsb
xor
lods
inc
add
xor
mov
mov
cwtl
rol
and
pop
or
adc
int3
pop
or
inc
mov
stos
cmp
cmp
dec
dec
mov
xor
jno
or
nop
je
or
fdiv
scas
loopne
lcall
adc
jne,pt
sti
adcl
stos
sub
ljmp
jle
pop
mov
xor
imul
test
push
add
call
fmuls
repnz
jl
enter
sahf
fisubs
outsb
jne
testl
xlat
add
das
idivb
dec
push
sahf
dec
bound
ret
dec
jmp
jbe
pop
cmpsb
fsub
mov
lea
dec
popa
cs
push
call
ret
xchg
scas
cmp
pop
pop
int
pop
inc
jp
jb
push
clc
push
sahf
xchg
mov
cld
mov
push
dec
xchg
push
jmp
jp
cmp
idivb
nop
sub
jo
call
sub
mov
xor
xchg
push
xor
andl
sarb
sbb
sub
xor
xchg
and
inc
dec
jnp
mov
icebp
roll
inc
mov
inc
push
arpl
pop
sti
in
mov
mov
add
xchg
fcomps
pop
into
xlat
ret
xchg
or
out
add
pushf
and
sub
push
lret
jne
rol
addr16
dec
sbb
pop
bound
int3
adc
add
sbb
icebp
adc
xchg
sub
cmpsb
mov
jge
xor
xor
cmp
out
mov
in
sbb
inc
add
push
in
xchg
sub
mov
sub
xor
sbb
mov
pop
mov
sti
cmp
dec
inc
imul
push
sbb
or
ret
mov
ljmp
addr16
mov
dec
pusha
cld
ja
pop
fstpt
xchg
not
and
cmp
adc
inc
cli
dec
mov
or
out
mov
xchg
out
push
or
push
fwait
leave
jnp
repnz
in
popa
nop
cmpsb
mov
mov
or
loopne
aaa
adc
inc
jae
ret
xchg
out
into
or
dec
cmp
leave
pop
or
lret
fsub
rorb
loop
sub
roll
and
dec
data16
rcll
dec
mov
je
push
decl
lock
mov
adc
adc
notl
sahf
cpuid
pop
push
pop
addl
push
sti
sbb
int
cwtl
jo
pushf
inc
add
inc
pusha
rolb
adc
ljmp
push
dec
xchg
pop
and
lret
inc
es
dec
stc
push
sarb
fcmovnb
arpl
aam
add
mov
or
rol
adc
mov
sbb
add
arpl
xlat
cld
sub
movsb
dec
inc
aaa
stos
cmp
inc
jno
mov
shll
xchg
inc
in
xchg
add
or
call
cli
sub
test
jle
cmp
push
fadds
xchg
or
inc
movsb
scas
or
fsub
pop
shrl
adcb
out
sub
test
test
xchg
or
pop
inc
call
adc
testb
inc
sbb
cmp
xlat
pop
push
fsubr
dec
insl
adc
push
mov
aaa
outsb
popa
and
imul
out
or
xor
sub
pop
cmpsb
sti
cwtl
pop
pop
pop
inc
fnstsw
movsl
cmp
dec
mov
cli
adc
in
xchg
repnz
and
push
aas
mov
mov
xor
fistpll
jno
sub
in
jmp
loope
test
int
jl
jl
dec
xchg
sti
sbb
lds
popf
and
cmpsb
mov
clc
mov
jb
enter
push
lret
insl
addb
or
popa
cltd
lds
popa
fwait
jnp
mov
xchg
xchg
cmp
ds
jl
mov
push
daa
pop
outsb
rcrl
loope
add
bound
pop
into
mov
jae
ret
mov
push
lcall
sbb
sub
iret
imul
dec
std
mov
push
mov
adc
scas
mov
and
or
inc
outsl
sahf
and
call
rcll
cmc
icebp
mov
mov
or
fcompl
stos
test
and
mov
fmulp
cmpsb
dec
shl
inc
and
cmp
and
push
mov
in
pop
sbb
movsb
dec
or
mov
movsb
jmp
cmp
jg
mov
loopne
add
jg
xor
fstl
pop
pop
loopne
xor
aas
fisubs
add
mov
cmp
sbb
sahf
ret
inc
pop
ss
rcll
push
rorl
pop
ljmp
lahf
nop
push
es
dec
test
dec
dec
cs
lahf
mov
ljmp
jg
and
mov
jecxz
cltd
jle
mov
clc
jmp
mov
xor
add
xchg
mov
and
loop
outsl
mov
mov
mov
lods
jbe
cs
scas
push
icebp
lock
xchg
inc
xchg
fdivp
xchg
mov
jecxz
loop
cmp
aas
repnz
aas
enter
enter
das
dec
push
xlat
or
loope
lds
movsl
lret
sub
sbbb
push
ret
pop
adc
test
jae
sub
or
fstp
subb
mov
or
or
pushf
ljmp
movsb
call
mov
out
push
push
add
imul
pop
cld
mov
lret
clc
js
shll
popl
xor
in
cmp
or
mov
xor
insl
setle
mov
push
jp
xchg
adc
adc
xchg
lods
pop
mov
dec
cmpb
pop
mov
sti
rcrl
inc
out
mov
jnp
rcrl
sub
cmp
repz
xlat
repnz
icebp
clc
xchg
adc
lret
in
push
lods
pop
xchg
movsl
pushf
push
movsl
cmp
gs
jl
cmp
test
outsb
fs
popf
push
stc
mov
test
mov
pop
mov
sub
adc
jne
mov
xchg
arpl
in
enter
dec
inc
sub
mov
sub
sub
mov
lods
pop
insb
add
xchg
xchg
aas
outsb
in
in
mov
xchg
out
xor
mov
insb
mov
iret
nop
imul
add
jle
lds
inc
sub
inc
mov
jns
movsb
cmp
adc
jl
push
test
add
fs
out
mov
mov
jg
jne
jl
cmp
out
or
ds
sbb
rcrl
lea
lcall
inc
ficompl
out
outsb
and
cmp
aad
insl
jmp
push
push
nop
pop
sub
insb
insl
les
bound
mov
push
sub
xor
or
xchg
or
fisubrl
sarb
aad
fsubl
sbb
xor
mov
ret
mov
das
test
repnz
adc
and
and
testb
pop
xchg
pop
js
in
into
push
into
mov
in
cmp
out
and
xchg
or
imul
insl
or
or
xchg
cmp
leave
daa
sbb
sbb
xor
enter
cli
cmp
xor
mov
popf
fwait
js
inc
ficoms
sbb
mov
dec
jne
dec
xchg
pop
mov
stos
push
out
je
push
dec
xlat
outsb
push
and
dec
xchg
push
aas
xor
pop
jns
adc
je
mov
cltd
imul
add
mov
cs
mov
inc
filds
shll
cmpsb
test
les
daa
or
push
ss
inc
lock
rcrb
and
popa
mov
xor
sub
mov
stc
pusha
cmpsb
jecxz
sub
outsb
and
push
mov
push
and
cltd
jp
jl
sbb
push
push
stos
aam
add
adc
insb
test
cltd
js
test
movsb
mov
sbb
outsb
iret
jmp
jo
int
out
jae
cmp
sbb
cwtl
lret
cs
add
mov
ja
icebp
in
mov
rcrl
out
xor
imul
xor
dec
stos
stc
xor
fsubrs
mov
push
shll
and
nop
sbb
call
or
orb
cmp
mov
test
cwtl
cmc
loopne
lods
adcl
fsubr
mov
inc
lock
cmpsl
xor
cmp
lock
inc
inc
dec
lret
sub
fsubrs
push
jno
repnz
repnz
mov
or
in
mov
adc
sti
xor
jmp
lds
or
pop
adc
sbb
ds
daa
fwait
xchg
mov
dec
mov
jmp
sbb
clc
or
aam
cmpsb
stos
inc
sbb
and
pop
xchg
cld
inc
adc
dec
add
testb
ret
or
xor
xchg
push
outsl
jl
and
out
pop
xor
inc
or
in
stos
mov
xor
mov
jmp
dec
aad
test
out
cmp
dec
popa
mov
jbe
jge
ljmp
add
jne,pn
jecxz
jg
ret
cmp
push
push
mov
add
aam
out
out
mov
add
loop
lea
sahf
jnp
lretw
stos
inc
loop
or
and
push
xchg
jns
adc
mov
cmp
adc
fnop
xchg
adc
push
cmp
out
fists
inc
aam
cmp
inc
xchg
shll
inc
jo
add
fmuls
mov
movsb
pop
out
data16
ljmp
call
aas
mov
pop
lret
es
les
pusha
insb
lcall
push
jnp
inc
mov
loop
add
add
mov
xchg
in
iret
fisubs
mov
divb
lret
mov
into
jae
subl
sbb
outsl
lcall
nop
outsb
std
ret
sbb
fwait
lcall
mov
fldl
mov
sar
adc
into
pop
cmpsb
scas
in
mov
add
and
cwtl
push
or
daa
xor
dec
sbbb
out
cmp
sarl
js
mov
cli
iret
and
dec
repnz
or
jae
cmp
aam
or
in
jns
lret
sbb
jmp
adc
js
xchg
test
push
testl
jno
or
inc
dec
sbb
aaa
fs
mov
xchg
xchg
flds
lcall
or
les
ja
arpl
cltd
sbb
xor
cld
movsb
jo
pop
aad
add
jae
dec
xchg
mov
and
mov
mov
jae
jne
shlb
fisttps
ljmp
push
mov
int
fwait
pop
sti
xor
lcall
mov
dec
sti
iret
pop
pop
call
sub
ja
sahf
sbb
fists
xor
sbb
bound
rcll
scas
out
sbb
lret
stos
mov
and
jb
popa
xorl
dec
ror
inc
dec
sbb
cmpsl
vmwrite
mov
sbb
insb
in
movsb
add
ret
das
push
lahf
sub
mov
frstor
xchg
push
out
add
repz
in
negb
jecxz
mov
sub
lock
cwtl
xor
jg
jmp
cmp
test
mov
adc
jne
pop
mov
arpl
xchg
loopne
addr16
cmp
add
faddl
lock
popa
dec
das
loop
in
aas
jbe
sbb
inc
lret
add
lret
mov
sub
jp
stos
fwait
outsb
adc
inc
inc
dec
cmpsb
and
arpl
jmp
add
inc
jne
jno
test
scas
addr16
inc
push
mov
ret
or
cmp
jmp
push
je
aaa
shlb
add
mov
shlb
sub
push
xchg
xchg
lahf
fstpl
sub
stc
imulb
mov
and
subb
push
and
mov
lret
xchg
inc
test
xchg
sahf
inc
icebp
shlb
out
xchg
push
cmp
and
popa
adc
adc
das
lods
xlat
popf
daa
out
cltd
call
push
aad
call
xchg
inc
lds
xchg
cmpsl
add
divl
mov
push
and
cmp
lods
and
mov
les
enter
sti
mov
and
fidivl
pop
pop
jp
sarl
das
in
pop
fnstenv
or
lret
jmp
dec
adc
fistps
xchg
aad
pushf
mov
mov
lods
enter
cld
push
cli
pop
cli
sub
mov
xor
lock
fwait
cli
inc
cltd
in
popf
pop
popa
dec
stos
iret
fisubrl
pushf
push
enter
jbe
outsl
aad
mov
loopne
cmp
rclb
lock
xchg
ss
and
pop
mov
iret
test
mov
fwait
repz
mov
pop
test
scas
cltd
xchg
inc
movsb
scas
lcall
clc
push
shlb
fucom
jno
xchg
ror
add
cs
mov
and
pusha
frstor
ds
pop
data16
pushf
insb
lods
dec
sub
cli
es
jae
jecxz
inc
lret
jecxz
pop
push
mov
jecxz
lahf
adcb
cmp
pop
mov
es
push
clc
imul
cwtl
ljmp
mov
insl
push
jne
mov
es
pop
mov
add
es
mov
xor
loop
adc
sub
loope
fidivl
cmpsb
in
jae
mov
or
cmp
xor
insl
addr16
out
mov
mov
pop
dec
inc
push
mov
les
iret
sbbb
push
mov
jp
pop
lods
pop
lret
lock
inc
sub
mov
pop
orl
push
sti
fs
fnstenv
lods
aad
jae
es
sub
mov
test
int
jb
in
xchg
ss
popa
imul
loope
dec
stc
test
push
sahf
and
adc
movsl
inc
jle
lret
ljmp
je
sub
test
adc
sbb
inc
out
or
ffree
out
inc
sbb
mov
adc
jmp
adc
mov
pusha
or
pop
ficomps
das
stos
jns
sub
and
call
ja
cmpsl
push
push
test
push
push
stos
clc
popa
sti
or
icebp
inc
cmp
js
jle
xchg
or
xchg
or
orl
xor
daa
jmp
push
jo
call
aaa
icebp
xchg
imul
push
je
mov
aaa
leave
popa
lods
mov
fcoms
inc
pushf
jae
lret
int
add
push
jb
fldt
mov
xchg
cwtl
jl
and
xchg
add
lods
or
js
test
xor
imul
push
xor
mov
xlat
fistpl
test
sub
stos
xor
ja
sub
xchg
pop
int
push
pop
jge
daa
mov
mov
pop
imul
scas
cld
in
jmp
inc
addr16
outsb
pop
mov
or
mov
jne
lods
lock
adc
add
or
and
add
jb
sub
xor
pop
addr16
mov
aad
adc
xor
adc
aam
movsb
pop
xor
test
dec
xchg
sub
jns
sub
adc
sub
fnstenv
mov
push
jecxz
arpl
imul
enter
push
xor
loop
add
shll
fisttpll
jns
mov
mov
pushf
leave
ja
sbb
mov
mov
mov
jns
cmpsb
pop
fiadds
cmpsb
hlt
and
jmp
pop
xchg
jle
mov
pop
or
test
scas
pop
lods
sbb
int3
mov
ja
out
adc
xor
hlt
push
push
pushf
push
enter
add
in
push
mov
dec
fnstenv
mov
in
jp
fdivrl
jmp
dec
xor
movsl
cltd
testb
sbb
inc
add
mov
cmp
push
xor
fildl
cmpsl
jbe
out
movsb
fmuls
push
mov
test
stc
imul
xlat
push
or
lcall
les
and
outsb
pop
addr16
or
aaa
ljmp
es
mov
push
adcl
movsl
popa
ret
stos
mov
sbb
adc
cli
add
jnp
frstors
pop
nop
sub
push
jo
or
daa
test
inc
js
jle
in
aam
sub
mov
movsl
stos
cli
xchg
mov
test
jg
stos
inc
out
into
movl
inc
cmpsl
dec
mov
mov
xorb
js
cmp
push
mov
pop
lcall
pop
jmp
out
fwait
sub
cmp
push
in
mov
je
mov
aad
enter
js
test
mov
inc
ss
incb
shlb
or
pop
test
add
stos
repnz
popf
cwtl
fdiv
push
cli
outsb
pusha
incl
inc
adc
stc
sbb
pop
fimuls
aam
or
pushf
outsl
aaa
test
and
dec
mov
call
adc
adc
or
sub
mov
sbb
loop
mov
pop
add
ret
add
ret
sarl
stc
sub
xchg
imul
outsb
cltd
jb
dec
xor
loope
jno
mov
mov
jle
lcall
je
aaa
loope
or
cmp
xor
jnp
adc
in
aad
in
inc
ja
or
icebp
insl
in
mov
push
sbb
stos
push
push
enter
cmp
test
cld
loopne
mov
cmpsl
cmp
daa
icebp
in
test
mov
or
stos
cmp
mov
push
or
cld
mov
mov
mov
sub
mov
xor
in
cs
cmp
xchg
insb
dec
mov
push
adc
push
aas
js
loopne
je
sbb
test
es
mov
xor
inc
outsb
adc
push
inc
mov
test
and
loop
mov
cmp
sbb
lcall
push
inc
mov
dec
cld
sahf
ret
jo
push
xor
inc
sub
mov
dec
sub
pop
or
addr16
cld
sub
jmp
bound
lahf
stos
sar
leave
push
add
push
addr16
adc
push
dec
and
xor
aad
sysexit
xor
shl
loope
inc
push
sub
repnz
popf
inc
lahf
enter
xor
dec
mov
cltd
test
push
mov
xchg
xchg
inc
imul
in
call
sub
lret
test
mov
les
push
mov
mov
jle
fldcw
ljmp
les
aaa
mov
divb
jmp
insb
or
or
jo
add
loop
inc
pushf
stos
gs
int
iret
xorb
cmp
or
push
add
add
xchg
inc
ss
mov
cs
mov
push
stos
jae
mov
fldt
out
jg
xchg
jne
std
adc
das
jmp
xchg
mov
hlt
das
int
std
ficompl
pop
scas
push
mov
stos
pop
rorl
xchg
jecxz
add
jnp
mov
sbb
pop
lret
mov
cmpsl
xchg
sub
pop
loop
aam
jmp
pop
cmp
sti
pushf
scas
test
out
cmc
mov
xor
jo
or
jmp
add
sub
std
push
mov
loopne
int
jns
fwait
dec
sti
mov
lret
mov
inc
int3
outsl
pop
inc
push
jg
addr16
mov
jg
loopne
cmpsb
cltd
cli
add
xchg
test
xor
iret
push
sbb
inc
mov
mov
popf
aad
out
sub
popa
repnz
jno
lahf
addl
pmulhw
fnstsw
sbb
jae
push
dec
scas
movntq
imul
lahf
fstpt
ljmp
cwtl
in
or
and
xor
jmp
mov
and
lcall
out
xor
add
movsl
and
loopne
in
enter
jmp
dec
imul
stos
dec
jae
mov
movsl
les
inc
push
outsl
fcomi
cwtl
ret
cli
jge
or
xchg
insl
mov
cmpsl
aam
aas
mov
hlt
pop
repz
cmp
xor
shll
mov
daa
repz
data16
lcall
jge
sbb
mov
mov
pop
sar
insl
push
and
into
pop
loope
jp
push
test
xor
jns
clc
pop
adc
and
std
sbb
dec
push
mov
clc
loopne
dec
sbb
pop
aaa
cmpnleps
mov
cmpsb
mov
cs
mov
dec
into
push
pop
xor
push
insb
mov
ja
shrb
hlt
adc
shrb
bound
push
or
aam
mov
out
jl
mov
xlat
shlb
cs
loopne
mov
sbb
hlt
or
sbb
push
jnp
push
or
mov
aam
or
inc
mov
int
push
js
xor
jo
mov
mov
ds
xor
and
addr16
cmp
push
fidivs
cltd
and
or
push
xchg
dec
sub
sub
rol
pusha
push
fwait
shlb
in
sub
xchg
mov
out
jns
cmp
pushf
int
imul
and
pop
sub
add
mov
cmp
data16
lods
push
dec
cmp
pop
jno
fidivs
add
test
in
push
xor
mov
cmc
push
xchg
popf
adcb
sahf
and
js
jnp
imul
iret
bound
lods
xor
push
je
das
dec
pop
sbb
pop
mov
call
xor
push
sbb
movsb
dec
xchg
lods
and
and
cmp
out
les
dec
xor
jnp
dec
xchg
jl
mov
mov
dec
mov
fwait
rorl
push
iret
fsubrs
shll
xchg
mov
es
sbb
imul
mov
lods
adc
and
sahf
add
imul
jae
repnz
ficoml
popa
cmpsl
fcoml
fsubs
push
dec
jg
mov
notb
mov
iret
in
xchg
adc
repnz
loopne
mov
ret
dec
mov
cli
or
daa
add
xchg
fwait
cmp
pop
jp
jno
mov
xchg
cwtl
pop
aaa
ret
ret
and
aad
xchg
xor
mov
enter
pop
ljmp
sub
hlt
adc
test
mov
mov
jns
popf
jbe
fists
mov
imul
jbe
mov
and
out
test
in
sub
mov
std
or
xchg
adc
fldcw
fidivl
cmovo
cmpl
data16
adc
or
and
inc
mov
out
xchg
xchg
addr16
mov
fcmovb
jo
sub
scas
mov
lret
mov
sbb
or
outsl
das
jno
aaa
test
sti
orl
js
ss
jecxz
mov
push
movsl
insb
sbb
inc
fwait
cli
movsl
jb
mov
or
sub
jge
adc
dec
shll
dec
cs
into
fs
std
call
sbbb
idivb
lods
fwait
mov
and
out
cmpl
sahf
cmp
mov
push
scas
pop
pushl
mov
lret
add
and
fs
rcl
pmaxsw
sbbl
outsb
lods
fmull
out
xchg
pop
jge
xchg
push
dec
cmp
test
inc
jns
stc
jo
xchg
arpl
fs
insb
loopne
frstpm(287
movsl
cmpsb
daa
push
hlt
mov
rol
call
jg
mov
cli
xor
pop
lcall
mov
movsb
dec
into
test
mov
xor
push
rcrb
fstps
aas
mov
mov
arpl
mov
xchg
imul
arpl
xor
fldcw
aas
and
jecxz
inc
repz
mov
xchg
movb
push
push
icebp
outsl
adc
cld
inc
and
dec
mov
test
shll
in
dec
push
aaa
loopne
imul
js
out
std
push
adcb
mov
fidivrs
mov
and
mov
ss
jmp
xchg
jge
sahf
mov
addb
ljmp
std
mov
sub
mov
pop
xchg
xor
icebp
xchg
jnp
pop
bound
scas
xchg
js
sub
aad
rcrl
xor
imul
popf
aam
jae
inc
cmp
push
stos
push
mov
xchg
or
adc
loope
nop
hlt
lret
das
mov
inc
lds
bound
mov
inc
xchg
adc
mov
popf
inc
push
repnz
ja
push
xchg
xchg
pop
jp
pop
xor
je
fcos
dec
xchg
and
xor
loop
shlb
cmc
sbb
jle
dec
inc
push
pop
stc
lds
in
cbtw
or
xor
mov
stos
sbb
inc
push
sub
cmpsb
out
inc
adc
jbe
push
dec
sub
fninit
mov
lods
mov
pand
fs
xchg
push
ja
lret
mov
xor
ficompl
stos
or
test
jp
push
jl
push
scas
fisttpl
js
pop
push
sbb
inc
add
pushf
rolb
fbld
jge
std
add
ficomps
hlt
add
bound
shl
lods
icebp
sbb
loopne
daa
mov
jmp
push
lods
xor
xlat
pop
out
push
rol
pop
insb
loop
adc
lret
ficoms
sbb
jge
mov
leave
ljmp
cld
jns
cmp
push
sub
add
pushf
test
movsl
gs
push
push
loopne
loope
mov
outsw
ficoms
jle
sahf
mov
leave
mov
mov
aaa
mov
mov
outsb
fstl
shrb
and
ficomps
cmpsb
sub
rol
xchg
clc
xchg
ret
dec
pop
sahf
in
xchg
roll
pop
bound
add
ret
xchg
lds
arpl
mov
xlat
inc
arpl
fisubs
inc
int
adc
inc
mov
or
shll
jae
std
repnz
and
jge
pop
outsb
lret
pop
sbb
jns
adc
push
scas
pop
add
jg
adc
in
fidivs
sbb
jb
cmp
inc
cltd
mov
xchg
hlt
pushf
lock
mov
mov
inc
mov
push
fcomps
enter
loopne
sbb
mov
imul
adc
push
mov
sub
js
cmp
or
and
jecxz
and
push
ret
lcall
lods
mov
in
repnz
orb
data16
mov
inc
add
pop
xchg
and
loope
fiaddl
int3
test
inc
mov
bound
xor
dec
lock
push
cli
in
icebp
pop
mov
jecxz
outsb
pop
scas
jae
cmp
mov
cs
dec
and
lret
pusha
xor
xor
sbb
pop
test
mov
or
insb
mov
cmp
mov
mov
leave
fidivs
movsb
movsl
cmp
cmpsl
pop
xchg
mov
mov
fcmovbe
sbb
push
cmp
mov
inc
cmpsl
clc
inc
popa
test
dec
ja
int
dec
dec
jb
pop
leave
loope
inc
stos
aam
filds
aad
mov
rcrb
cmp
daa
out
pop
js
mov
pushf
test
ret
repnz
jle
push
adc
mov
cltd
rorb
jns
fsubrs
sub
xor
xchg
ss
push
xlat
mov
add
mov
inc
cmpl
xchg
ja
call
lret
dec
hlt
insb
testl
inc
fdivl
push
mov
mov
int
mov
or
adcl
testb
insl
xchg
shlb
bound
dec
gs
sub
cmp
in
daa
xchg
xchg
das
gs
je
fisttpl
sarl
jmp
lret
or
add
enter
es
dec
movsb
sub
push
shll
cld
popf
push
jp
mov
xor
and
push
mov
lret
ljmp
mov
add
or
mov
sub
adc
jmp
cmp
mov
sbb
push
mov
inc
dec
dec
loopne
xchg
dec
fs
repnz
es
iret
movsl
xor
xor
stos
mov
rorb
push
dec
jnp
jecxz
add
jecxz
outsl
pushf
es
fs
dec
cld
jg
cld
jb
sub
fisubl
mov
sub
sarb
mov
fsub
lods
push
out
fsubrs
stc
add
pusha
dec
fsts
cmp
lea
mov
cmp
call
ficomps
pushf
inc
out
movsl
std
mov
push
addr16
jae
stos
divb
jmp
push
cld
cli
lock
xor
mov
lods
or
push
neg
sub
movsl
fucomip
jmp
lahf
jns
fisttpl
pop
dec
fwait
dec
gs
sti
int
fdivrs
ffreep
jbe
sahf
push
nop
in
rcrl
mov
add
or
adc
pop
insb
stos
lret
insl
and
cmpb
sahf
pop
dec
aam
sbb
jge
inc
into
lock
test
js
cs
xchg
icebp
sbbl
imul
mov
and
in
inc
das
outsb
xchg
mov
jle
movsl
sub
fwait
adc
push
jae
xor
sbb
cwtl
pop
mov
push
jle
call
in
jb
inc
cmc
je
push
test
outsb
mov
out
orl
mov
aaa
shrd
cmp
xlat
lret
mov
cmp
movsl
lock
fwait
call
jae
xchg
outsl
in
xor
jmp
or
cltd
cmpsl
inc
scas
sbb
add
dec
push
sub
aaa
imul
add
jb
fisttps
in
push
cmpb
aad
and
push
cmc
and
xchg
add
in
leave
sub
js
and
pushf
mov
bnd
fstpl
jo
fs
das
jbe
test
mull
ja
adc
aas
push
mov
lods
iret
sub
int3
sub
cmpl
or
cmpsl
add
push
stc
stos
fdecstp
ret
cmp
adcb
dec
or
jle
incb
icebp
ds
imul
jns
push
mov
pusha
in
add
daa
rcrl
testb
and
pop
scas
or
lahf
lds
ds
clc
or
push
loop
jb
xchg
pop
adc
mov
push
xor
ljmp
out
outsl
stc
dec
fisttps
ds
xchg
and
inc
pop
dec
shlb
or
in
movsl
pop
sbb
data16
pop
arpl
aaa
xlat
cmpsb
and
int
lret
push
mov
repz
push
test
mov
mov
push
cmc
in
in
in
sbb
hlt
test
jmp
js
adc
loop
jl
nop
sbb
xor
iret
jmp
out
xlat
repz
outsl
jl
outsl
inc
pop
shll
stos
xchg
test
fsubrs
ret
xchg
imul
in
adc
jge
bound
or
insl
cltd
mov
loop
sbb
inc
and
pushf
orb
int
ljmp
and
mov
int3
adc
outsl
sbb
mov
in
test
dec
jno
cltd
push
mov
shrl
repnz
or
ljmp
ja
dec
jge
int
dec
xchg
sub
std
mov
outsl
mov
mov
sbb
cli
cmp
pop
cli
or
fs
xchg
adc
xorl
es
mov
jecxz
mov
jns
push
dec
insb
sti
inc
sbb
mov
push
orb
xchg
movsl
in
cmp
xor
rcl
jo
dec
push
stc
movsl
pop
cmpsl
dec
adc
jbe
mov
cmp
mov
adc
movsl
out
push
imul
mov
push
movsb
xchg
pop
and
icebp
mov
and
mov
notl
cli
xchg
fwait
sub
sub
xor
stc
mov
add
sub
test
int3
jb
sahf
mov
mov
xor
fwait
pop
dec
pop
lea
mov
icebp
bound
jns
nop
adc
mov
clc
xchg
add
xlat
jo
out
xchg
and
or
daa
xchg
addr16
jg
push
push
push
sbb
jp
push
fldt
add
add
mov
pop
cmp
sub
xlat
or
mov
lods
or
cmp
insb
inc
in
cmpb
or
or
mov
adc
mov
sbb
mov
rclb
mov
cmp
je
lods
push
in
push
xchg
jmp
add
lock
les
xchg
xchg
sti
add
insl
pop
xchg
pop
ja
add
lahf
inc
inc
dec
repz
gs
lret
jecxz
or
mov
xchg
aad
movsb
inc
cli
stos
inc
jmp
insl
test
int3
or
test
adc
mov
sbb
paddd
and
bnd
or
pop
fcom
mov
pop
jne
test
arpl
aas
jb
adc
addl
xchg
bound
jecxz
jl
add
adc
add
sub
mov
jbe
daa
jb
inc
movsb
and
mov
imul
cmp
cmp
adcb
outsl
leave
scas
fildll
dec
bound
stos
pushf
andl
inc
push
insb
pop
out
jno
fcmovu
and
push
je
pusha
dec
je
pop
in
lahf
aam
cwtl
int
sbb
mov
es
pop
pop
pop
les
jecxz
lea
cmp
adc
and
sbb
jmp
popa
dec
push
ds
cli
shrb
push
lcall
inc
mov
xor
rep
enter
mov
jp
cmp
xchg
frstor
push
div
xlat
test
cli
lahf
sbb
mov
mov
stos
rcrb
add
popf
aad
jae
lret
les
pop
icebp
ljmp
test
pop
pop
jnp
scas
sub
daa
add
and
setge
fs
aaa
dec
or
outsl
jo
mov
xor
movsl
push
jmp
pop
inc
in
jmp
out
dec
fdivl
jl
or
out
insb
adc
and
nop
ret
addl
daa
hlt
hlt
movsb
in
lea
or
lea
jge
hlt
pop
or
lcall
aas
jo
adc
sbb
test
cmpsb
clc
cmp
adc
lods
or
faddl
xchg
adc
mov
das
dec
fldcw
imul
xor
push
pop
das
dec
push
ss
push
call
sbb
inc
loopne
pushf
cmpsb
cmpsb
jmp
stos
mov
lock
in
adc
movlps
cmp
bound
adc
jl
and
mov
int3
cwtl
sub
dec
push
jo
dec
add
dec
scas
into
jmp
ret
jecxz
dec
fs
push
dec
mov
push
mov
jmp
outsb
or
iret
add
and
dec
mov
hlt
test
rorb
xchg
imul
popf
fimuls
je
adc
fucomp
popa
lea
mov
je
cmp
cmp
adc
lahf
adc
sub
ja
enter
dec
lods
cmc
and
cmp
sbb
and
jmp
sub
movsb
scas
in
outsl
jle
push
xor
sti
push
sahf
cmc
jns
shlb
cmc
push
cld
aas
push
add
xor
pop
cmp
jns
dec
cmpsl
jmp
pop
inc
mov
inc
mov
lcall
ret
in
sahf
std
into
pop
pop
push
or
push
dec
mov
idivb
clc
andb
leave
std
sbb
jns
out
testl
pop
outsl
nop
hlt
cltd
xor
xor
into
fildll
mov
mov
ror
xchg
xor
outsl
push
adc
subb
push
push
test
decb
ret
or
adc
inc
and
aaa
and
das
in
stc
and
or
loop
into
dec
and
cmpsb
ror
movsl
leave
cmp
xor
mov
sbb
mov
or
adc
ja
and
push
pushl
mull
imul
xor
adc
cld
xlat
and
scas
loopne
ds
xor
xchg
mov
cmp
sub
out
push
add
mov
sbb
cmc
in
xchg
push
dec
mov
xchg
shl
sub
jno
popa
imul
adc
lcall
jecxz
fcmovnu
adc
xor
test
aad
mov
jmp
xchg
ficomps
and
rclb
clc
sbb
lods
pusha
divl
rorb
add
repz
lahf
xchg
jo
cwtl
adc
les
aas
inc
jno
inc
adc
xchg
ds
lret
xor
xor
dec
pop
pusha
insb
loope
negb
cmp
stos
and
cmpsb
push
pop
jnp
cmp
mov
imulb
shlb
movsb
pop
mov
cmpsl
pop
pusha
sub
idivb
xor
push
mov
add
adc
push
xchg
push
sbb
fildll
xchg
fdivs
fcmovnb
iret
dec
es
cmp
mov
rclb
icebp
addr16
pop
cli
lcall
cld
or
adc
dec
jae
movsb
mov
mov
inc
sbb
pop
push
mov
mov
mov
mov
mov
fdiv
call
fs
jbe
xor
loop
push
mov
bound
mov
sub
inc
out
mov
xchg
mov
pop
inc
mov
stos
movl
int3
or
xchg
mov
stos
mov
add
jbe
xor
icebp
cmp
add
mov
js
cmp
jb
or
popa
gs
sub
in
fdivp
adc
cmpsb
sub
mov
nop
push
clc
mov
push
loope
sub
es
ljmp
ret
clc
dec
or
mov
aas
mov
dec
pop
pushl
xchg
and
ret
leave
push
cmp
jecxz
jo
or
push
adc
sbb
aam
push
loop
pusha
cmc
mov
mov
adc
das
dec
lea
cltd
fiadds
xorb
or
mov
jno
aad
adc
pop
and
aam
sub
ret
icebp
jns
loope
and
jb
adc
fdivrs
outsl
add
inc
in
adcb
sbb
dec
cli
add
mov
cmp
xorl
iret
in
daa
xchg
mov
mov
adc
inc
pop
dec
xor
mov
fildl
add
pop
test
and
mov
sub
rorb
dec
lods
fcmovnbe
adcb
pop
push
fdivl
stos
pop
push
hlt
insl
aad
addr16
add
jl
iret
xchg
pop
adc
jg
jge
add
mov
inc
aad
mov
and
nop
mov
sbb
movsl
xor
sti
add
lds
jg
lods
nop
or
rcll
add
adc
inc
addr16
scas
inc
in
ret
pop
xchg
mov
pop
aaa
bnd
pop
shlb
loop
sbb
jns
mov
jecxz
int3
shrb
jle
adc
lcall
dec
inc
push
xchg
sub
pushf
jno
sub
jns
and
stos
mov
cmp
fcoml
je
bound
cmc
jns
sti
adc
insl
mov
dec
data16
adc
adc
sub
pop
jae
push
addr16
jno
add
xlat
fwait
dec
dec
in
dec
adc
rcr
test
xchg
jle
add
and
out
gs
mulb
fnsave
push
lock
push
loope
inc
dec
pop
xorl
in
aam
sub
ds
dec
mov
out
scas
push
imul
fstpt
mov
sub
out
or
mov
das
add
shr
stos
cmpl
jns
cmp
cmc
and
push
in
shrb
fiaddl
and
call
sub
sbb
in
rcrb
pusha
push
xchg
sub
adc
inc
and
imul
js
insb
out
jae
xchg
outsb
int3
fnstcw
pop
imul
add
xor
shlb
mov
repz
inc
shll
push
js
push
lahf
sti
and
mov
xchg
enter
cwtl
scas
enter
sub
push
ja
std
mov
add
scas
push
fcoms
loop
aas
test
push
mov
out
ret
sbb
mov
mov
mov
fs
xor
inc
movsl
jg
aaa
ljmp
std
fcoml
popa
push
lret
jecxz
mov
or
cli
cmp
shrl
pop
sbb
ds
xor
rcrl
jl
jns
mov
ja
inc
shll
and
mov
adc
adc
mov
lods
loope
call
jb
add
add
xor
movsl
or
arpl
sub
out
mov
xchg
cmpl
lods
pop
cmp
ret
dec
cmp
inc
test
cltd
js
push
pop
cmp
push
xor
sbb
jb
mov
je
dec
jns
jnp
sbb
jle
imul
xchg
inc
loope
and
lods
push
sub
int3
xchg
sub
sti
testl
out
and
data16
pop
push
movsl
cmpsb
out
cmp
or
insl
insl
mov
lods
or
cmpsb
sti
and
mov
fnstsw
add
add
int
push
xor
jge
or
jp
add
jb
repz
or
es
or
add
out
mov
adc
cmp
pop
test
cmp
movsl
ds
xchg
jo
jae
mov
push
aas
adc
pop
and
or
out
scas
sub
pop
or
mov
mov
xchg
and
lret
mov
sbb
or
gs
push
lret
cs
daa
sbb
fstp
cmc
ret
pop
pop
insb
inc
sub
repnz
das
jge
in
xchg
stos
fmull
stos
es
pop
mov
dec
push
sub
sbb
fistps
ret
inc
pop
adc
jg
jmp
push
int
xchg
into
loop
xchg
insl
out
mov
or
adc
cli
popf
sub
pop
es
xchg
inc
clc
adc
jmp
push
int
and
push
cmc
sti
outsl
add
mov
test
and
mov
stos
xchg
add
into
push
push
mov
ljmp
jnp
subb
inc
std
call
xrelease
and
lahf
jl
movsl
out
dec
repnz
mov
jmp
pop
sbb
xchg
mov
cmc
push
xlat
push
cmpsl
sub
mov
push
push
jge
mov
outsb
clc
jbe
cmpsb
push
stc
pop
ret
sti
std
pop
dec
bnd
hlt
cld
and
mov
mov
mov
neg
mov
pusha
test
push
xchg
sbb
in
push
data16
aam
mov
shrl
or
call
test
ret
andl
cmpsb
and
arpl
pusha
and
sbb
pop
cltd
mov
mov
imul
jo
cmp
inc
mov
std
xchg
jp
out
inc
popf
sub
xor
sbb
data16
sub
xchg
out
in
adc
cld
sti
dec
mov
sbb
mov
lods
cmpsl
insl
out
ljmp
out
insl
ret
or
subb
jp
xor
out
jecxz
pusha
add
and
jns
inc
push
dec
popa
and
mov
xchg
fisttpll
inc
shl
stc
mov
xchg
sbb
pop
adc
pop
dec
lcall
pushf
je
in
ss
lods
nop
aaa
and
adc
into
adc
push
jb
xorl
mov
jge
mov
fstl
inc
xchg
pop
push
imul
adc
jae
cmp
jge
rorb
outsl
jmp
shl
push
jl
rorl
pusha
int3
testl
and
push
dec
mov
jno
xchg
int3
std
jne
lcall
and
mov
xchg
sbb
push
jns
in
xor
pop
cli
push
fdivs
cmp
xor
dec
out
adc
adc
or
int
imul
mov
sub
std
jmp
xchg
inc
cltd
xchg
mov
test
mov
sub
sbb
pop
enter
inc
xor
adc
jo
inc
inc
jl
popa
stc
ficomps
out
pop
inc
in
std
sub
mov
pop
fdivrp
sub
pop
mov
shl
fs
push
repnz
rcl
xchg
adcl
sub
insb
popa
test
inc
sahf
mov
in
pop
mov
or
mov
sbb
inc
rol
aam
lret
dec
mov
inc
sarb
lods
inc
jge
sub
adc
int
or
rcll
dec
jl
fwait
mov
sub
lds
jp
pop
mov
cmpsb
jmp
and
decb
cmp
in
imul
fldt
jo
loop
pop
cmp
push
mov
out
enter
into
pushf
sub
rcr
aad
sub
mov
repnz
push
and
outsb
sti
inc
test
fsubrl
mov
cld
pusha
dec
mov
mov
push
mov
es
in
mov
mov
in
lret
inc
jae
loop
fwait
lods
iret
jl
pop
sbb
sub
jl
push
push
in
int3
mov
arpl
je
cwtl
cmp
data16
pushf
or
sub
cmpsl
push
sbb
xor
lock
cmc
and
dec
jne
push
push
adc
add
dec
push
pop
in
jle
sbb
mov
cmpsb
pushf
repnz
scas
jo
adc
pop
mov
sbb
push
cld
add
add
ljmp
lret
cmp
das
arpl
stos
sbb
mov
addr16
mov
int
and
addr16
call
add
jno
and
pshufw
aas
cmpsl
inc
fiadds
movsl
ret
xlat
lret
enter
mov
mov
test
movsb
mov
push
xchg
xor
pop
sbb
bound
dec
jge
decl
and
iret
dec
les
jno
mov
sbb
pusha
xor
cmp
mov
rcrb
push
mov
call
adc
pop
lock
data16
add
sbbl
outsl
bswap
cwtl
xor
mov
pop
pop
shll
daa
mov
sub
or
test
subl
in
xor
adc
sub
mov
popf
dec
add
iret
xchg
mov
in
mov
call
xor
fwait
jns
rcl
call
cmpsl
jnp
fisttps
loope
ja
lds
mov
data16
in
ret
jo
pop
sbb
dec
xchg
xchg
sbb
subl
testl
dec
sub
mov
pushf
dec
test
jmp
dec
js
sbb
lret
xlat
cmp
leave
aas
cmp
jo
add
fdivl
out
aam
pop
dec
lock
xchg
mov
movb
outsl
cmc
clc
bound
inc
pop
mov
adc
mov
ss
rorl
and
out
into
or
jp
jp
mov
addr16
cmpsl
pop
arpl
pusha
inc
sbb
pop
xor
cs
aaa
enter
sbb
jne
lods
dec
inc
dec
and
out
lock
fcmovne
enter
mov
add
adc
mov
push
push
loopne
divb
sbb
mov
imul
call
mov
popf
and
mov
pop
xor
push
mov
sahf
add
test
test
sti
xlat
scas
mov
push
dec
rsqrtps
sbb
add
ret
dec
mov
sbbl
mov
mov
push
sbb
gs
and
pop
push
xor
leave
loop
aas
mov
arpl
in
test
adc
mov
mov
out
pop
push
shl
push
in
cwtl
leave
and
inc
shll
mov
je
sahf
cwtl
mov
aas
and
out
xor
scas
aad
ret
mov
jge
jb
push
cmc
adc
cmp
imul
sbb
pop
pop
xor
jp
adc
test
lds
pop
faddl
push
add
mov
icebp
scas
pop
inc
shll
xchg
lds
loope
nop
mov
pop
add
test
xchg
pop
cmc
sbb
mov
mov
sarl
divb
addr16
fstps
mov
cli
shl
pop
push
gs
rcl
xor
inc
add
mov
inc
js
pop
xor
test
xor
inc
mov
add
xor
add
sub
out
iret
out
jle
inc
inc
dec
test
in
movsl
clc
adc
decl
out
stos
mov
or
ljmp
adc
and
mov
bound
push
mov
inc
mov
jne
popa
outsb
and
jns
jecxz
xchg
out
add
pop
dec
shll
cs
out
cmp
inc
mov
or
rcrb
jae
xorb
addb
sahf
aas
daa
mov
mov
out
repnz
imul
push
pop
daa
lea
rcrb
jne
and
ret
push
push
sub
rorb
mov
mov
les
imul
adc
rcrl
cltd
jmp
dec
cwtl
push
test
aas
cmpsl
aam
pop
in
xor
jns
mov
inc
cld
xchg
push
adc
push
xor
inc
jge
sti
out
fs
outsl
aam
adc
jmp
cs
lcall
sbb
push
dec
in
xchg
mov
aas
adc
cwtl
fcompl
jbe
daa
mov
cltd
jle
mov
imul
and
clc
pop
push
aad
rdpmc
movsl
xchg
inc
add
xorl
cltd
cwtl
test
jae
ret
inc
mov
push
and
xchg
xchg
imul
in
shlb
dec
add
push
push
sbb
mov
daa
sub
add
enter
pop
jl
roll
fildll
aaa
dec
xlat
and
ja,pt
push
xor
clc
insb
add
or
push
shlb
push
call
jl
push
icebp
mov
aaa
test
mov
jmp
and
xchg
test
xchg
pop
cld
mov
fstps
pop
mov
stc
std
aaa
dec
push
sahf
ss
fxch
add
fistpl
imull
mov
pop
pop
mov
adc
or
sub
arpl
sbb
mov
dec
inc
out
xchg
push
addr16
push
test
and
jmp
xchg
xchg
dec
mov
pushf
push
fs
jle
ret
mov
in
fstps
out
and
shlb
and
into
push
mov
or
sub
leave
jbe
loopne
push
ds
incb
scas
inc
dec
add
leave
dec
pop
jne
inc
or
mov
or
push
lret
mov
cmc
inc
in
adc
dec
xlat
les
add
js
test
pop
loop
mov
pop
or
and
dec
cmp
ret
out
mov
cld
or
adc
dec
jp
pop
cmpb
fists
leave
push
stos
arpl
test
mov
adc
arpl
ljmp
inc
mov
inc
jle
push
daa
cld
add
adc
xor
aas
ss
jmp
imul
jmp
mov
mov
or
sbb
ficompl
lfs
inc
mov
das
daa
stos
out
out
fldcw
adc
in
insb
adc
lret
or
sub
lds
cmp
add
jl
iret
or
dec
rcrl
sub
dec
repnz
je
mov
and
and
pop
addr16
or
daa
cmp
dec
xor
les
pop
stos
mov
inc
fimull
inc
aaa
push
jns
xor
orl
decb
mov
dec
sbb
sbb
mov
xor
lods
ja
out
out
sub
mov
dec
pop
nop
movb
pop
or
or
out
push
pop
dec
leave
ds
inc
xlat
lea
cmp
or
test
jns
lcall
mov
jmp
mov
sub
xchg
aam
mov
pop
rclb
jp
fstl
mov
stos
mov
outsl
das
clc
jp
aam
jmp
pusha
test
clc
scas
xchg
pop
adc
in
out
mov
test
jmp
movsb
rcrb
insl
push
push
inc
push
and
sub
sub
push
imul
xchg
addl
mov
or
or
ljmp
mov
xor
cmpsb
gs
stc
mov
lret
push
push
cmpsb
push
mov
ret
gs
sbb
iret
pop
mov
mov
aaa
jnp
shll
mov
icebp
cmpsb
xchg
ljmp
dec
and
fstps
insl
and
add
mov
push
testb
xor
in
add
loop
xor
fcmovu
mov
out
or
adc
xchg
lret
orb
add
mov
xchg
std
mov
imul
mov
add
enter
sbb
jecxz
xor
and
and
cmp
xchg
cmp
inc
faddl
push
adc
fistpl
push
mov
dec
pop
pop
pop
inc
clc
mov
fnstsw
mov
outsb
and
popf
xor
cmpsl
push
lahf
cmpsb
xor
xor
scas
test
inc
cmp
fwait
stc
sub
imul
clc
push
loopne
mov
push
out
or
iret
fstl
pop
pushf
sub
mov
jge
addr16
dec
popf
in
add
repnz
inc
and
pop
xchg
add
dec
adc
sub
cwtl
and
mov
add
pusha
data16
fadd
cmp
inc
or
sub
stc
pop
flds
insb
adcl
pop
adc
mov
jns
add
shll
lea
lret
xor
push
negb
mov
bound
cmp
inc
jge
jo
xchg
sub
sbb
mov
dec
clc
xlat
sbb
scas
fldl2t
and
jge
in
out
add
xchg
pushf
and
push
repnz
mov
jecxz
sarb
pop
lcall
xor
push
cli
xchg
sbb
jmp
loop
push
subl
fistpl
sahf
jge
rcrb
jecxz
adc
xchg
sti
mov
mov
dec
xchg
xchg
insl
jecxz
insb
jo
mov
xchg
xchg
arpl
dec
push
xor
xchg
std
sarl
out
mov
int
cld
jns
out
sbb
mov
inc
and
xchg
pop
lahf
jmp
sahf
mov
iret
sub
rcrl
cld
adc
jno
adc
mov
repnz
and
fisubrs
rcr
pop
lahf
pop
inc
and
aad
fidivrs
mov
jne
lds
test
rcll
andb
or
add
stos
xchg
mov
mov
inc
sbb
insb
sbb
sbb
sub
xchg
sub
sub
add
leave
shlb
test
jb
outsl
xchg
outsl
and
mov
enter
sarb
cs
aad
jle
inc
mov
jb
jns
push
cltd
arpl
dec
inc
cmp
jl
jp
and
icebp
rorl
out
lahf
or
fnstcw
sub
push
aas
into
xchg
dec
add
jle
push
pusha
fisttpll
and
shlb
mov
fs
push
dec
sub
adc
in
mov
jp
lret
in
or
nop
bound
push
subb
sar
xchg
push
test
mov
xchg
push
stos
cmc
fnsave
aam
subl
mov
jle
dec
addr16
mov
lea
les
mov
cmp
xor
clc
push
inc
cwtl
lds
add
xor
mov
mov
pop
xor
sti
int
filds
repz
add
mov
pop
lock
inc
out
inc
jecxz
or
fdivrs
or
scas
sub
jp
sbb
jb
push
or
bound
mov
arpl
inc
mov
xchg
out
jg
gs
dec
sahf
mov
lret
rorb
daa
jmp
mov
fcoms
jne
cmp
fimuls
cmp
inc
aaa
sub
ss
lret
xchg
mov
mov
mov
adc
pop
idivl
fisubrl
aam
push
pop
out
sub
cmpsl
mov
pop
jbe
cld
movsl
lret
or
iret
out
inc
dec
cli
adc
fmuls
mov
dec
adc
mov
mov
xor
adc
movlhps
outsb
testb
dec
push
pop
inc
adc
cmp
xlat
push
dec
lret
pop
scas
cli
pop
call
jmp
in
or
enter
in
inc
sbb
adc
cld
adc
stos
sub
jbe
push
or
aaa
add
dec
pop
or
leave
cli
xchg
xor
int
nop
leave
loope
subl
xchg
xor
sahf
hlt
cmpsl
pop
test
or
pop
icebp
rcll
adc
cmp
js
inc
dec
xchg
push
aad
ret
ret
jmp
and
and
std
cmp
movsl
inc
jno
sub
push
arpl
repz
std
adcl
loope
xchg
int3
jp
testl
push
sub
mov
push
aas
lds
xchg
stos
xchg
sbb
imul
cmp
mov
inc
xor
addr16
sbb
xchg
mov
movsl
add
decb
shll
mov
lods
test
sahf
cmp
fildll
mov
fistpl
inc
out
sbb
test
mov
les
adc
repnz
xchg
mov
aas
in
enter
lcall
ss
out
adc
sub
hlt
into
xchg
inc
sbb
mov
xchg
sub
xchg
cmp
or
insl
into
imul
frstor
ds
sub
gs
in
cmp
mov
bound
cmc
xchg
mov
data16
call
shlb
flds
push
int3
xor
cmp
jmp
mov
jg
lret
dec
call
movsl
cmp
mov
add
popf
and
insb
ss
leave
nop
mov
sahf
and
add
cld
lahf
insb
mov
popf
cmp
je
mov
iret
scas
or
dec
xchg
sbb
jbe
ret
bound
lcall
aaa
dec
out
cs
lods
xchg
sarl
jmp
dec
repz
test
sbb
cltd
popf
and
mov
movsb
sbb
lret
mov
mov
mov
test
aas
aaa
out
cwtl
lcall
or
jbe
in
mov
push
pop
inc
cmp
adc
ds
pop
dec
and
fldln2
xchg
pop
mov
repz
add
mov
into
jle
jg
ret
leave
mov
jae
dec
sub
lods
inc
inc
out
jbe
movsb
insb
iret
push
pusha
mov
insb
cwtl
sahf
mov
mov
addl
faddl
xchg
mov
cli
jns
test
push
adc
popa
in
jo
or
mov
and
xchg
aaa
into
xor
popa
movsl
mov
jecxz
adc
sbb
mov
inc
call
shll
mov
sub
add
stc
ljmp
nop
pushf
mov
insl
pop
dec
dec
sti
xor
loop
cmp
pop
dec
test
mov
mov
and
adc
and
ja
lods
jne
scas
mov
popf
push
push
jg
mov
fstps
sbb
filds
sbb
vpackuswb
xchg
call
mov
fucomp
out
bnd
pop
xchg
jb
adc
sbb
xchg
and
jb
fs
sbb
dec
mov
mov
add
imul
mov
das
lret
repnz
stos
pop
push
sbb
mov
mov
cld
and
cltd
pop
imul
xchg
pop
xor
lret
sbb
sbb
mov
mov
mov
out
insb
outsb
cmpsb
cwtl
push
jg
pop
push
shrb
push
sbb
js
sbb
sbb
cmp
push
push
pop
sbb
imul
sbb
xor
push
xor
pop
and
movsb
lock
adc
cmp
scas
and
fstpl
mov
cwtl
in
xor
push
push
mov
mov
add
push
jno
xor
mov
lds
enter
int3
aaa
xchg
xor
fucomi
lret
jo
divl
lcall
outsb
sub
push
cmc
jp
pusha
daa
dec
inc
mov
pop
xchg
out
inc
dec
and
idiv
xchg
mov
xchg
mov
pop
xorb
idivl
scas
inc
lds
rep
mov
adcb
lods
mov
pop
cmp
sbb
loopne
adc
jne
fdivrl
loopne
add
xchg
sbbl
test
hlt
mov
mov
les
call
stos
fisttpl
jp
push
stos
jecxz
loope
out
pop
out
shrl
sbb
pop
fiadds
stos
je
cwtl
stos
mov
cmp
out
test
test
mov
push
cmpsb
addr16
imul
xchg
dec
xor
stos
out
sbb
adc
outsb
or
sahf
scas
jnp
xchg
mov
stos
mov
ss
mov
shl
push
push
and
sbb
notb
cmp
xchg
lea
arpl
lret
mov
fstp
loope
pushf
xchg
inc
mov
mov
jg
jle
cltd
mov
xchg
pop
mov
jecxz
pop
pop
sbb
roll
test
ljmp
or
pop
xchg
addr16
or
push
out
stos
pop
mov
sbb
pop
loopne
xchg
test
add
mov
lods
or
leave
adc
jg
ja
jle
stc
outsl
push
mov
or
lea
insl
jle
or
testb
mov
pop
cmp
dec
pop
jl
and
mov
mov
dec
xchg
std
jmp
inc
in
pmuludq
mov
fcomi
sbb
jmp
mov
bound
fs
sbb
mov
cmp
pop
and
cs
mov
jno
or
imul
and
pop
push
inc
jp
and
sbb
mov
fsubrl
jmp
or
movsb
push
cmp
ja
adc
add
and
jl
lret
cmpb
scas
fdivrs
add
jge
jge
sbb
pop
sub
xor
push
push
mov
mov
sub
mov
sbb
mov
lcall
std
lea
push
incl
xor
push
adc
dec
mov
arpl
cmp
push
icebp
cld
and
mov
mov
sub
lahf
jo
dec
sbb
dec
mov
gs
add
outsl
mov
int3
ljmp
scas
data16
sar
imul
fidivrl
sbb
shr
test
jo
test
xor
dec
inc
jbe
gs
pop
out
rol
insb
std
lret
icebp
push
pop
testb
mov
sub
ss
test
aam
fwait
arpl
addr16
push
xchg
or
sub
arpl
movsl
cmp
jecxz
rcrb
push
icebp
pop
popa
cmp
in
add
inc
iret
or
xor
lods
movsb
or
repnz
xchg
push
or
dec
dec
cmp
imul
xor
mov
frstor
in
xchg
enter
scas
mov
xchg
jmp
stos
std
stc
mov
movsb
mov
clc
mov
outsb
popf
stos
adc
xchg
jg
pushf
mov
loop
cmovg
mov
add
sbb
and
lcall
xchg
or
icebp
iret
rorb
push
add
xchg
and
xchg
test
lcall
rolb
test
mov
out
xlat
xchg
sbb
pop
in
xor
and
imul
and
clc
adc
cwtl
sub
mov
ficoml
lret
jg
cmp
or
xor
loope
mov
xor
das
pushf
mov
icebp
ret
push
cmp
fcomps
out
out
mov
jns
outsl
fdivrs
push
sbb
ljmp
fsts
push
sbb
daa
and
cld
mov
je
fisttpl
jb
aaa
add
es
in
imul
jg
fldenv
xor
xor
pop
shll
std
daa
add
sahf
in
push
daa
pop
mov
les
sbb
lds
ret
cmp
inc
stc
pop
shll
rorb
pop
call
xchg
call
pop
ljmp
jns
outsl
add
jmp
daa
cmp
movb
cmp
jle
shlb
mov
cmp
loopne
aas
outsb
dec
fidivrl
shlb
jecxz
test
lret
cwtl
cs
scas
xor
cmc
int
orl
or
or
sarb
xchg
movsl
cs
xchg
push
mov
push
repz
test
stos
dec
mov
xor
sbb
adc
roll
in
mov
sbb
jl
js
push
iret
lret
mov
ljmp
jns
or
stc
aad
addr16
jb
mov
dec
filds
mov
push
xor
flds
xchg
mov
lock
out
repz
cmp
stos
xchg
lock
mov
ljmp
fldcw
xor
aas
in
popa
leave
mov
ret
dec
mov
cld
cwtl
xor
cmp
je
xchg
and
popf
lcall
imul
mov
xchg
test
xchg
and
or
jmp
cli
mov
cli
hlt
xor
dec
sahf
mov
and
hlt
and
push
adc
loopne
cmpsb
push
add
popa
dec
test
insl
jmp
jne
test
cmpsl
arpl
loop
jle
aam
jecxz
jns
lcall
sbb
or
fmul
push
cmc
imul
roll
and
in
scas
iret
in
dec
pop
lds
hlt
test
dec
jl
fwait
jnp
mov
shll
pop
mov
adcl
fldt
arpl
push
xlat
jnp
insl
add
es
dec
xor
fwait
and
xchg
call
daa
lcall
mov
std
dec
xchg
adc
xchg
loopne
inc
rorb
cmp
cli
jecxz
fwait
cmpsb
fldcw
test
int
idivl
scas
mov
cwtl
push
or
or
or
push
sub
aam
push
sub
sti
pop
push
xchg
into
test
mov
std
mov
repnz
jge
dec
imull
leave
mov
mov
pop
icebp
mov
fldenv
std
rcrb
test
jnp
out
pusha
push
dec
dec
ficoml
jns
clc
and
sub
mov
sbb
push
add
loop
int3
cwtl
and
pop
repz
xor
jb
cmp
xchg
mov
xor
mov
loope
lods
sbb
test
ja
movsl
mov
mov
cmp
popf
cmp
fs
or
push
nop
fldcw
lock
iret
sub
imul
fwait
je
movsb
lret
or
call
jo
loop
pusha
sbb
mov
or
cmp
das
xor
pavgw
dec
dec
rolb
hlt
mov
jle
aam
fadds
lcall
mov
aam
inc
cld
dec
xchg
mov
add
into
push
lods
test
aad
sbb
iret
and
mov
jl
push
fstpl
imull
adc
dec
push
sub
popf
aad
push
mov
lods
aam
shlb
xor
mov
jge
pop
xchg
pop
lret
les
push
fwait
clc
test
mov
sti
xor
mov
mov
push
jge
arpl
jo
cltd
clc
and
iret
js
inc
push
sub
andb
stc
or
push
cmc
aad
fstl
je
sub
rclb
test
add
lret
sub
gs
fnstcw
movsl
outsl
loop
dec
popf
sbb
and
or
adc
and
in
mov
mov
bsf
pop
divb
adc
and
pop
sub
sbb
push
push
iret
ficoml
and
adc
out
lea
and
xchg
mov
mov
outsb
jns
mov
cli
hlt
sbb
imul
rclb
dec
movsl
push
pushf
and
adc
loopne
xchg
inc
or
or
dec
sub
inc
idiv
out
push
adc
nop
add
popa
mov
divl
jge
out
push
and
movsb
jl
push
scas
mov
mov
jmp
loope
fs
xor
aaa
add
icebp
jecxz
testl
ja
rep
add
rcrb
test
call
pop
adc
fwait
push
and
in
inc
pop
sub
sbb
and
cmp
mov
jl
sahf
int
das
mov
jbe
outsl
pop
lods
adc
repnz
sub
dec
fs
xor
add
push
jecxz
inc
push
cmpsb
scas
mov
maxps
fisttps
push
xchg
addr16
out
repz
out
popf
out
icebp
fisttpll
out
sub
xchg
mov
pop
add
xorb
out
out
fisubrs
sbbb
sub
mov
inc
push
and
lret
sti
mov
pop
cwtl
icebp
movsl
mov
in
sahf
icebp
pop
mov
shlb
std
push
push
push
cmp
insl
mov
jne
xor
icebp
pop
ficompl
or
adcb
fadds
gs
ficompl
cmpsb
pop
mov
or
push
pop
dec
push
adc
mov
pusha
mov
mov
ret
dec
mov
psubusb
outsl
outsb
mov
seto
pextrw
sub
in
into
adc
sbb
mov
out
push
mov
fdivp
adc
rcrl
testb
jp
jmp
push
push
mov
push
mov
xor
jo
lea
enter
mov
mov
std
into
mov
mov
xor
or
push
inc
jns
int
int3
add
into
mov
std
std
xor
dec
push
aas
push
xor
sbb
mov
repnz
popf
mov
into
push
in
ja
fnstcw
mov
push
ret
or
popa
and
in
dec
pop
shl
and
aad
les
inc
cmp
adc
and
pop
add
and
xor
pop
mov
xchg
fsubs
xchg
loop
sbb
test
mov
xchg
sbb
xchg
loopne
adc
leave
add
lret
movsb
roll
pop
sbb
mov
add
imul
fldt
dec
stc
add
dec
shrb
pop
lcall
aad
sti
inc
pop
adc
je
and
and
inc
aas
sbb
arpl
dec
mov
push
arpl
cmp
xchg
enter
lods
lods
jns
rcrl
sbb
jmp
xchg
jl
mov
pop
sub
and
loope
mov
jne
int3
xor
sbb
add
les
mov
sbb
jp
mov
pop
outsl
sub
push
lcall
mov
insb
or
iret
inc
and
mov
aam
inc
cli
xchg
addr16
or
add
add
dec
pop
scas
xlat
mov
cmp
jns
add
xchg
outsb
scas
das
sbb
cmp
jmp
out
xor
pop
enter
insl
pop
mov
insb
arpl
mov
xchg
out
repz
pop
cltd
inc
push
sbb
inc
mov
gs
lods
addr16
adc
outsl
inc
daa
sti
mov
push
repz
jns
jmp
pop
mov
int
push
xchg
cmc
cwtl
jl
mov
inc
cld
pop
cmp
jno
sahf
negl
loop
pop
pop
mov
mov
sbb
push
add
cld
out
jl
cmp
push
loope
es
fwait
cmpsl
test
xorb
dec
fidivs
jmp
sub
imul
syscall
jno
cmp
dec
adc
pop
repz
idivl
jmp
push
sub
scas
orps
ss
lahf
pop
push
dec
lods
mov
mov
pop
int3
pop
shrb
into
out
aam
pop
add
adc
out
ljmp
test
xor
das
pushf
aaa
aas
mulb
stos
les
idivl
addr16
push
loop
pop
xorb
mov
cmp
stc
ret
mov
notb
popa
ficomps
add
xchg
fiadds
andb
sarb
daa
in
scas
jg
cmc
jae
mov
push
mov
rcll
mov
mov
mov
decl
lcall
jnp
iret
push
mov
inc
xor
adc
jmp
jl
stos
into
mov
ss
pusha
and
movl
testl
xor
xchg
jmp
inc
xchg
sti
adc
fisubrs
mov
es
shrl
mov
clc
bound
out
mov
lcall
mov
testl
enter
subb
out
add
add
cli
adc
in
test
xchg
iret
repnz
repnz
push
aad
imul
push
daa
dec
shr
aaa
pop
mov
mov
or
test
cmp
int
jmp
mov
adc
jp
sahf
mov
push
pop
pop
lret
inc
jo
jo
dec
pushf
jo
mov
movsb
arpl
mov
bound
lods
inc
pop
addr16
and
jbe
mov
cmpl
into
xorb
mov
dec
ret
outsb
xor
mov
aaa
push
repnz
cli
or
repz
pop
mov
adc
pop
icebp
mov
call
inc
jno
push
pop
ret
cmp
test
sahf
rcll
ds
xor
leave
xor
ja
add
jmp
xor
stos
sarb
cld
mov
sbb
cmp
sbb
decl
or
andb
fsubrl
and
cmc
roll
xlat
scas
add
cmova
in
mov
test
and
es
and
sub
inc
pop
mov
mov
js
xchg
rcll
jmp
push
mov
fdivrs
mov
mov
adc
in
test
fsubrs
movsl
scas
insb
push
orl
into
cmc
inc
pop
dec
lock
push
dec
adc
pop
inc
xor
and
les
test
lea
mov
cld
mov
mov
xchg
dec
rorl
xlat
movb
out
iret
dec
insb
stc
cmp
cmpsb
scas
mov
sub
popa
cmp
insl
sbb
idiv
xchg
jae
gs
lret
sub
lcall
mov
fwait
in
mov
fbld
fnstsw
pop
pop
outsl
test
insl
imul
add
cmc
rclb
cmc
insb
pop
jp
mov
addb
lods
lret
test
mov
es
inc
mov
cmc
nop
notb
jle
add
daa
jo
lcall
and
jmp
repnz
ret
sub
movsb
and
mov
adc
adc
sbb
sbb
push
sti
mov
into
nop
mov
mov
cmp
popa
jns
in
add
mov
adcl
inc
in
inc
fistpl
mull
cmp
or
add
mov
mov
cmp
andb
addr16
sbb
in
nop
mov
adc
cmp
movsb
xor
or
xorb
mov
ss
stc
clc
add
mov
mov
jmp
or
sbb
les
fidivrs
pop
adc
and
mov
and
mov
imul
les
inc
lret
sbb
mov
cmpb
push
cli
mov
mov
jge
xchg
outsl
jbe
jmp
mov
aad
jge
popf
lds
std
gs
inc
arpl
dec
lods
mov
pop
sbb
gs
jne
jg
sub
and
out
rol
ret
in
add
out
lahf
repnz
mov
in
imul
mov
add
clc
lahf
push
mov
push
jp
in
dec
addb
jno
pop
adc
mov
fs
inc
pop
xor
into
mov
mov
outsb
std
lods
mov
icebp
mov
daa
jo
imul
add
out
sub
testl
pop
adc
add
call
out
lcall
les
mov
cmp
push
cld
lods
dec
mov
push
mov
into
leave
scas
in
push
and
push
out
xchg
or
adc
pop
dec
fisubrl
arpl
pop
pop
fsubr
fistl
roll
dec
sub
mov
push
or
subb
sub
je
pop
imul
mov
xchg
cmc
js
lock
cmp
xchg
div
adc
insb
clc
pop
aas
and
xchg
xor
jne
and
int3
sbb
addr16
add
std
test
lahf
sbb
pop
push
jne
xor
aaa
out
cli
test
mov
push
jecxz
imul
add
add
fsubs
adc
jnp
dec
aad
push
or
cmp
push
push
and
fwait
sbb
pop
insl
aas
push
dec
push
and
rcrl
jnp
mov
scas
xchg
jne
cltd
js
xor
add
fucomi
arpl
mov
xchg
pop
cmp
push
lret
xlat
sbb
cmpsl
add
inc
cmc
inc
and
push
push
push
mov
xchg
ds
cmpb
push
push
lods
mov
pop
jne
repnz
sbb
mov
std
fldcw
aas
inc
cmp
pop
adc
pop
sub
or
mov
jge
inc
xor
addb
jmp
je
push
sti
cwtl
xchg
into
scas
and
out
or
push
mov
inc
pop
pop
movsb
test
add
inc
stos
sub
fisttpll
mov
lret
repz
enter
cmp
mov
inc
sub
into
pop
fwait
jae
test
pop
ljmp
or
stos
fs
in
pop
xchg
test
je
in
shlb
adc
inc
rorb
push
sub
mov
and
mov
xor
mov
pop
cmp
xor
pushf
mov
sub
pushl
adc
cltd
bnd
in
sbb
inc
xor
and
faddl
add
mov
scas
nop
fwait
mov
mov
daa
mov
gs
iret
sub
lods
pop
iret
mov
mov
jmp
ffree
sti
jge
mov
push
lods
gs
pushf
mov
push
pop
rolb
subb
clc
popa
push
jp
fs
xchg
and
xchg
xor
aaa
mov
sub
mov
sarb
cmpsb
add
out
add
out
mov
lret
cwtl
mov
sbb
loop
xchg
pop
cmp
movsb
dec
jb
push
dec
xchg
stos
enter
popa
push
pop
mov
xor
aas
imul
lods
loopne
int
insb
lock
daa
nop
movsl
push
pop
xchg
adc
cltd
shrb
aaa
daa
xor
ljmp
mov
lods
test
inc
je
push
pop
mov
and
cmp
push
inc
xor
mov
lods
xor
mov
enter
cvtps2pi
adc
push
mov
rorl
insb
lea
xchg
push
xorl
je
filds
adc
mov
out
inc
aas
leave
cmp
fdivrl
sub
jae
dec
mov
cmp
xchg
outsb
add
or
arpl
cmp
aas
pusha
push
jnp
pop
and
les
subb
js
or
sti
push
cmp
push
in
push
pop
mov
jnp
jns
xor
das
push
xor
repz
sub
cmp
je
xchg
movsl
sti
dec
imulb
daa
cmpsb
inc
cmp
xchg
sbb
jns
shll
mov
xor
jbe
cmp
lods
mov
les
sbb
xchg
in
jns
xor
imul
push
test
or
loopne
xor
or
mov
fsub
xlat
roll
je
mov
in
sti
out
and
push
push
into
loopne
lock
xchg
sbb
fcompl
cs
out
ds
inc
sub
jge
rcl
jg
icebp
out
and
jno
std
imul
cltd
orl
xchg
mov
arpl
inc
fs
leave
mov
jno
ss
leave
stc
cli
and
mov
sub
ljmp
cmp
scas
icebp
and
xchg
aad
lea
fsubl
popa
mov
push
pop
sub
mov
cmp
push
test
movsl
icebp
jae
cmp
js
arpl
adc
adc
or
in
pop
xchg
xor
lahf
aaa
popf
sbb
jecxz
aam
cmp
stos
xlat
mov
jl
jmp
fcoml
sbb
mov
call
and
mov
shlb
xor
or
mov
mov
dec
or
nop
and
mov
into
movsb
xchg
cs
or
repz
sub
popf
xchg
stos
jne
pusha
out
lret
push
pushf
nop
addl
popa
push
pop
lret
add
scas
sbb
clc
push
sti
jae
sub
dec
cli
lret
xor
sub
scas
jle
and
out
push
movq
fs
loopne
dec
xlat
sbb
out
xchg
inc
dec
or
inc
mov
rol
addr16
mov
xchg
jmp
lcall
fcompl
xor
fnstsw
jne
xchg
push
jp
mov
xorl
push
popf
sbb
fdivrs
test
subl
rorl
xchg
mov
mov
sub
pop
pop
or
pusha
add
cmp
jg
or
push
add
out
shlb
loop
gs
iret
mov
int
test
xchg
adc
lcall
dec
stos
lret
adc
pop
test
aam
pop
inc
rol
mov
push
mov
int3
bound
mov
notl
push
sub
pop
iret
lcall
idivb
add
les
repz
add
cwtl
loope
rol
cmp
imul
add
push
movsb
push
inc
or
mov
cmp
pop
iret
jmp
lahf
outsl
add
jo
mov
xor
push
cs
xor
jg
mov
xchg
sbb
cmp
inc
clc
gs
and
mov
in
jp
mov
inc
pop
jnp
add
ror
std
test
enter
adc
hlt
fmull
int
inc
jmp
mov
int3
lods
in
in
and
scas
je
test
adc
mov
mov
cwtl
fsubl
mov
xor
lds
arpl
ja
sbb
imul
imul
dec
jb
pop
mov
add
lods
jns
insl
adc
mov
push
inc
in
dec
sub
imul
sbb
push
std
sub
mov
push
fisubs
dec
testl
lods
dec
cmp
outsb
jle
repnz
sbb
roll
arpl
xchg
enter
out
xor
in
scas
push
pushf
inc
addr16
push
xchg
inc
pusha
adc
jg
into
int3
jmp
scas
sub
cld
out
imul
dec
push
repz
pop
sub
and
aaa
sbb
insl
loopne
pop
dec
sub
push
or
cltd
iret
cmp
add
bound
xchg
sub
loop
repnz
jbe
cs
xchg
shlb
inc
lret
pmuludq
nop
hlt
aaa
push
mov
push
mov
pop
rcl
data16
int3
sub
push
test
cmp
out
dec
lahf
fiaddl
cmp
xchg
mov
dec
cwtl
sub
je
sub
enter
mov
lcall
xchg
cltd
and
cltd
jmp
or
xor
arpl
add
xchg
jle
push
mov
call
inc
sub
push
push
mov
je
pop
jl
and
dec
ss
test
or
stos
dec
push
mov
add
cli
cmp
xor
cmp
out
adc
xchg
push
dec
and
test
shr
leave
filds
filds
loope
mov
jne
aas
in
into
rclb
popa
add
add
xlat
xor
xchg
in
pop
cmpsb
cmp
cmp
lea
mov
sbb
xor
cmc
push
aaa
mov
leavew
std
stos
xchg
mov
xchg
jbe
inc
mov
adc
sti
xchg
lods
gs
sub
fcoms
popa
add
cmpsl
std
xor
cmpsb
fs
testl
test
jecxz
or
jl
mov
outsl
cmp
xchg
in
xchg
in
push
shll
add
out
xlat
aad
jg
mov
add
mov
cli
testb
push
inc
fbstp
scas
ja
mov
add
add
pop
pusha
mov
cmc
test
xchg
add
mov
cmp
sbb
sbb
lcall
xchg
xchg
iret
cs
scas
shlb
xchg
inc
and
mov
rcr
mov
push
lea
int3
push
ja
pop
popf
inc
sbb
jnp
imul
sbb
movsl
and
or
lret
jno
mov
aad
xchg
sbb
xchg
jno
and
stos
cmc
test
in
jae
aad
fildl
bswap
jae
scas
aas
iret
xchg
lret
stos
adcl
sahf
sbb
es
jp
pop
out
xchg
push
pop
mov
push
mov
mov
sub
rolb
daa
add
stos
mov
jg
and
push
or
pop
cld
adc
gs
push
mov
pop
xor
ror
pop
jl
out
outsb
push
pop
nop
push
sub
push
sahf
sarl
std
mov
int3
jae
cwtl
or
leave
fidivrs
inc
lret
xor
and
adc
pusha
test
sbb
pop
mov
aas
cmpsb
cld
push
cld
pextrw
sub
repnz
mov
loop
jecxz
cmp
inc
out
xchg
inc
mov
fisubrs
xor
sbb
sub
pusha
jl
stos
mov
sti
sahf
and
fidivrl
mov
out
imul
mov
mov
xor
adc
aam
popf
subb
pop
sub
mov
cli
stos
dec
popa
sbb
jg
jae
mov
sbb
push
mov
add
fwait
jae
push
fsubrs
dec
outsb
mov
sub
or
fsubs
inc
addr16
and
dec
mov
mov
and
enter
mov
xchg
mov
sbb
xor
and
arpl
imul
lds
mov
push
cmc
push
inc
sub
push
loope
int
test
rcll
nop
movl
iret
andb
inc
testl
roll
sahf
dec
mov
jmp
loop
testb
subl
and
mov
ret
icebp
cmp
xchg
jbe
fcomps
pushf
mov
adc
xchg
mov
cmp
iret
sahf
pop
inc
ljmp
and
sbb
dec
shl
aad
aaa
addr16
test
or
or
das
iret
mov
rcrb
dec
mov
sub
or
jbe
test
xor
pop
ss
xchg
sub
dec
lcall
mov
jo
ljmp
xchg
jb
mov
pop
push
out
jl
add
roll
aas
mov
mov
mov
mov
idivl
aaa
stc
bnd
sub
lods
enter
loop
mov
cli
and
inc
loope,pt
and
or
pmullw
mov
testb
cs
mov
pop
repz
dec
lret
cs
pushf
shlb
pop
or
or
and
bound
mov
lods
adc
dec
hlt
rorl
loopne
sbb
loope
lret
cmp
cvtps2pd
aam
push
or
out
addr16
mov
dec
test
add
jae
jg
sbb
add
inc
add
jno
fsts
jge
mov
repnz
movsb
cmp
cmp
dec
gs
lret
pop
cmpsb
xchg
add
push
xchg
cmp
sti
shlb
xor
and
popf
iret
xchg
xor
dec
pop
loop
xor
inc
adcl
cmp
mov
pop
cmp
arpl
hlt
mov
movsb
adc
adc
leave
pusha
clc
mov
dec
jae
dec
sbb
and
pushf
outsb
push
orb
or
jae
push
bound
push
addr16
add
jae
mov
fstps
jb
sbb
test
call
scas
cld
lods
std
lahf
sub
sbb
mov
mov
dec
adc
movsb
subl
mov
add
scas
xor
fidivs
mov
inc
cmpsb
pop
jle
add
cmc
data16
repnz
in
mov
push
mov
mov
cs
and
call
mov
idivb
xchg
jnp
add
mov
push
and
xchg
fstl
cmpsl
in
stc
into
sbb
pop
sbb
add
jbe
mov
jge
shrl
imulb
mov
loop
fwait
out
hlt
xchg
ja
hlt
jmp
mov
outsl
test
sarb
push
cs
jno
push
or
scas
movsl
dec
in
daa
xchg
popf
lods
out
das
jg
pusha
lahf
xchg
fmuls
and
mov
adc
or
ret
fmull
add
and
mov
inc
outsl
mov
cmp
sbb
inc
in
fwait
imul
data16
inc
in
aam
psubq
cmp
push
or
xlat
hlt
mov
add
out
bound
and
jb
xchg
hlt
movb
sbb
mov
cmp
in
adc
mov
push
xlat
repnz
mov
shlb
ljmp
adc
bound
dec
lahf
and
addr16
icebp
dec
jo
loopne
roll
inc
fcmovnb
xchg
jl
jge
fucom
push
into
loope
icebp
ds
test
jno
pusha
xor
in
sti
arpl
idiv
mov
lcall
cmp
addb
mov
sub
cmp
add
or
mov
mov
or
out
dec
movsl
mov
test
cmp
cmpsl
pusha
pop
cmp
mulb
cmpsl
cmc
pop
mov
pop
out
dec
test
and
popf
popa
xor
or
pop
adc
push
mov
inc
jle
cmpl
out
ss
and
std
jp
lods
push
dec
repnz
push
and
mov
pop
cmp
mov
adc
sub
scas
adc
aas
repz
mov
jnp
lods
mov
das
int3
jnp
out
mov
stos
outsl
adc
arpl
loop
enter
lods
dec
aad
pop
mov
mov
mov
push
jge
int3
sbb
cmp
adc
inc
clc
mov
js
lods
inc
addr16
mov
jmp
or
push
jb
aam
cld
or
lods
jae
sub
push
les
loop,pt
jecxz
dec
dec
inc
jb
xchg
dec
mov
push
jle
jae
ss
push
adc
jns
and
mov
popf
arpl
insl
sti
cmpsb
adc
lahf
sub
sub
cmp
pop
sub
xor
movsl
mov
mov
push
daa
in
xlat
imulb
jl
sub
jno
lret
jne
mov
adc
bound
aaa
insb
sub
shll
pop
adc
pop
cmp
add
or
sbb
lret
mov
mov
dec
jae
stos
inc
sbb
loope
mov
jno
adc
rorb
int3
mov
pop
cmp
adc
out
add
daa
loope
pop
lcall
cmp
loope
test
pop
lret
adc
adc
lcall
stos
mov
out
das
dec
dec
sub
mov
push
cmp
xchg
pusha
mov
out
bnd
adc
pop
enter
adc
mov
je,pn
add
or
mov
aas
and
ljmp
loop
or
xchg
sbb
and
lcall
add
push
ss
out
shr
in
add
bound
pop
cmp
dec
test
shll
cli
lret
and
cltd
loop
push
xchg
pop
lret
push
lahf
lods
insb
hlt
jb
add
ljmp
sub
pushf
and
add
inc
fimull
mov
subl
jge
pop
and
cli
cmpsb
fildll
arpl
pop
lods
dec
mov
xchg
adc
push
pop
mov
push
dec
ret
mov
outsb
shlb
cltd
dec
stc
adc
cmp
pop
push
int
cmpl
mov
jl
daa
or
fdivrl
int
cs
mov
dec
xor
add
clc
sub
icebp
push
pop
inc
repnz
add
aaa
dec
cli
mov
or
xor
int
jle
xchg
xor
fldenv
pushf
or
push
push
pushf
mov
imul
dec
fwait
sbb
lock
rorl
shr
pop
in
push
xor
into
pop
dec
lea
mov
stc
dec
cld
in
jbe
cwtl
add
andl
hlt
xchg
pop
cltd
gs
popa
jmp
mov
rcll
loope
dec
xchg
pop
flds
mov
or
lret
decl
inc
movsl
imul
lods
scas
pop
mov
sbb
cmp
or
stos
pop
jbe
call
cld
pop
fcmovb
mov
jmp
cmp
sahf
pop
sbb
enter
inc
lcall
in
mov
outsb
mov
lods
inc
and
pushf
outsl
sub
or
dec
test
loop
add
mov
inc
mov
mov
pop
mov
xchg
or
pop
fiadds
push
aaa
std
arpl
sub
sub
xchg
sub
clc
pop
mov
add
lds
aam
inc
cmp
js
xchg
cmpsl
daa
lcall
mul
test
mov
mov
or
inc
sub
pop
sub
repz
adc
xor
decb
jle
daa
dec
outsb
pop
mov
adc
dec
icebp
mov
inc
sub
and
movsb
add
xlat
addr16
lret
sahf
es
fildll
pop
cmp
mov
inc
test
pop
test
jmp
int
or
inc
out
push
out
dec
nop
or
pop
insb
inc
sbb
and
xor
inc
xchg
leave
idivb
aam
adc
lret
aaa
das
or
movsb
dec
ficompl
loopne
int
inc
inc
popf
orb
mov
or
cmp
cwtl
daa
xchg
scas
mov
jnp
push
jnp
sti
mov
pop
in
pop
pusha
cld
xchg
mov
cmpl
sbb
test
lret
mov
mov
mov
std
jg
sti
fldcw
jmp
mov
lahf
sbb
mov
movsb
iret
jl
out
push
pop
jbe
push
loopne
push
sbb
push
adcl
ficompl
and
jno
clc
pushf
int
repnz
ds
pusha
int3
xor
pop
adc
das
cmp
add
decl
push
sub
cmp
or
in
sarb
pop
fbstp
inc
dec
xchg
ds
shr
inc
adc
mov
jb
push
jp
mov
cs
jb
aas
sbb
inc
xor
testb
push
xchg
sub
cmpsb
scas
xor
cwtl
std
loop
jecxz
jb
mov
shll
cwtl
adc
mov
jecxz
loopne
lods
adc
jg
aas
movsl
mov
out
jl
sub
insl
xchg
xor
push
xlat
lock
cmp
mov
dec
jno
lahf
test
jl
sub
iret
pop
jg
cmp
out
sub
mov
sti
fucomi
adc
mov
std
mov
lock
mov
cmp
push
into
shr
repnz
jle
xchg
pop
mov
cmc
xchg
outsl
sub
out
mov
roll
jmp
dec
movl
mov
sarl
dec
cmp
and
int3
in
fdiv
std
flds
fcoms
adc
js
sti
bound
enter
xorl
arpl
mov
in
call
sub
or
mov
jg
fs
mov
nop
adc
jne
sub
cmp
mov
jo
push
leave
in
in
shll
jbe
lock
xor
adc
pop
xchg
ljmp
xlat
sbb
pop
sarl
add
jno
repz
adc
cmpsl
fwait
sbb
jmp
loope
adc
cwtl
in
scas
jbe
sub
xor
jl
cmp
mov
pop
xlat
jecxz
dec
fstpt
cmp
mov
or
movsl
and
or
add
sahf
or
lock
sub
out
mov
adc
negb
sub
xchg
cmpsb
push
loopne
lods
push
mov
xchg
dec
push
xchg
inc
aam
cmpsl
sahf
movsb
pop
enter
xor
repz
stos
loopne
cmpsb
mov
or
mov
pop
bound
xchg
jle
mov
xchg
push
fs
pop
enter
xor
push
loop
shrb
ficoml
add
aad
dec
mov
je
pop
in
outsb
lods
and
sub
repz
enter
pop
fwait
stos
shl
das
lds
xchg
daa
inc
pop
les
cmc
shll
lods
mulb
and
fcom
jg
xlat
and
jno
mov
pop
or
rcrl
push
fisttpl
push
push
cmpsb
test
mov
mov
mov
adc
xor
repnz
dec
xchg
xor
fcmovu
mov
dec
jecxz
sub
add
test
in
out
jbe
sbb
les
shl
lock
aad
or
push
mov
or
out
xor
fs
test
test
idivl
xchg
test
ljmp
aam
lods
cmp
subl
mov
ja
leave
cmp
mov
outsb
mov
psubusw
xchg
mov
adc
and
mov
cwtl
mov
movsl
dec
in
mov
mov
or
and
sbb
loop
and
xchg
enter
cmp
jo
js
sbb
loop
repnz
movsl
pop
mov
insl
fsubp
or
inc
outsl
cmc
jg
rorl
jne
pop
add
sbb
xchg
aaa
mov
add
pop
lahf
rcr
outsl
fisubrl
cmp
xor
or
dec
in
adc
ret
rorl
test
jo
pop
cmp
aam
xchg
sahf
icebp
mov
push
outsb
enter
pusha
movsl
rcrb
sbb
jecxz
mov
out
lahf
sti
jp
cmpsb
adc
cmpl
fld
das
pusha
cs
add
fwait
call
jecxz
int3
ds
push
ret
idivb
sbb
adc
enter
jnp
test
lods
addr16
adc
pop
mov
bound
gs
pop
in
outsl
mov
inc
out
push
insl
lahf
inc
imulb
inc
push
mov
pop
xchg
xchg
pop
dec
cmpsb
sub
pop
jae
sub
dec
movsb
push
jmp
xor
leave
shll
jl
outsl
aaa
adc
fisttpll
ljmp
je
cmp
push
lahf
std
sbb
data16
js
es
push
ret
fs
jbe
add
push
out
mov
xchg
clc
lcall
mov
inc
dec
dec
mov
cli
jo
mov
pop
lcall
push
sub
ret
sbb
xchg
outsl
lcall
xchg
fs
and
add
pop
insl
mov
cwtl
shrl
in
mov
sbb
lods
lret
mov
addr16
rorb
mov
dec
cli
test
outsl
jne
imul
jmp
sub
inc
mov
mov
in
jae
push
fcmovne
lods
mov
mov
jmp
mov
lods
sbb
adc
int
subl
cmpl
mov
and
js
xor
mov
cmp
pusha
mov
fs
jg
imul
dec
scas
call
add
sbb
sbb
inc
inc
jno,pt
jmp
jae
lock
cwtl
add
int
repnz
inc
aaa
cmp
xchg
mov
rcrl
or
dec
cmp
fnstcw
lret
jns
jg
and
inc
test
adc
and
sbb
xor
push
mov
mov
adc
push
dec
popa
cli
popf
sub
pop
push
shrl
mov
out
mov
fcompl
ret
icebp
or
xchg
ja
cmpsb
dec
mov
adc
arpl
pushf
in
shlb
cmp
push
mov
bound
lret
pop
lcall
and
mov
mov
mov
je
popa
push
shl
jmp
add
and
adc
int3
xor
mov
out
mov
scas
shll
stc
xchg
jbe
add
hlt
test
iret
cmpsl
lcall
dec
sub
sbb
dec
cli
es
adc
jb
clc
out
mov
cmpsb
loope
mov
mov
imul
sub
mov
fstpt
or
call
sbb
mov
xchg
divl
out
or
and
popf
pop
and
scas
out
inc
adc
in
leave
add
ss
push
cmp
lods
xchg
lds
insb
mov
mov
jle
jle
js
sbb
std
sub
jbe
enter
lods
or
and
data16
mov
sti
js
mov
jecxz
loope
faddl
lock
repnz
mov
push
adc
pcmpeqd
nop
jl
cmpsl
outsl
leave
cltd
icebp
loop
and
int3
test
adc
ret
pop
adc
xchg
pop
mov
scas
test
rcrb
test
call
adc
ret
dec
dec
or
cmp
ret
xchg
mov
arpl
shrb
and
mov
adc
pop
mov
movsl
push
notl
nop
jle
sbb
adc
addr16
pop
mov
xchg
dec
jae
aas
jmp
getsec
sub
inc
mov
cwtl
mov
rcl
jno
mov
ffree
loop
xor
push
scas
sub
rcll
push
shrb
inc
test
out
push
mov
pop
add
add
mov
and
mov
gs
pop
or
mov
lods
lcall
fs
lret
out
ret
mov
scas
mov
mov
xor
lods
push
mov
clc
lret
cmpsb
adc
or
repnz
call
insl
adc
mov
xchg
addr16
stos
popf
bound
adc
mov
ret
xchg
adc
in
cmp
fwait
add
enter
xchg
cmpb
lahf
cmpsb
inc
add
outsl
jae
sbb
rol
ficoml
or
ret
test
cmpxchg
out
jmp
inc
xchg
cwtl
adc
fisubrl
cmp
pop
push
gs
mov
inc
push
movsl
fcompl
test
xchg
stc
addr16
and
fstp
insb
mov
test
dec
xchg
dec
cmp
arpl
add
cwtl
lods
or
pop
sarl
push
mov
or
cwtl
cmp
ud1
xchg
add
jp
mov
push
cld
aam
xor
inc
loop
sub
mov
insb
pop
xchg
out
add
xor
insb
rcll
sub
jne
dec
xchg
adc
loope
mov
gs
daa
cmpsl
loopne
pop
jae
pushf
mov
xchg
jno
mov
adc
mov
test
xor
xchg
mov
sbb
dec
shrb
push
imul
pop
jo
fisubrl
mov
in
adc
mov
and
xchg
in
dec
in
das
test
add
jo
ljmp
xor
xchg
in
dec
jnp
gs
pop
mov
mov
mov
sbb
jle
sar
add
pop
sub
rcl
mov
into
scas
in
aaa
jo
add
mov
dec
out
mov
or
hlt
pop
in
loop
pop
dec
lock
add
lret
shl
and
adc
mov
ja
push
push
out
rol
movsl
out
adc
sub
jae
add
aaa
xor
mov
cwtl
les
lret
fimull
fsubrl
sbb
mov
adc
jne
push
mov
mov
cmpsl
insl
daa
dec
ret
mov
cmp
daa
mov
sbb
leave
fstpl
mov
xchg
test
scas
aas
mov
jecxz
or
mov
pop
pop
mov
sub
mov
icebp
pop
dec
rclb
or
loope
jle
pop
lea
jo
xor
movsl
jns
mov
sahf
shl
xchg
dec
jnp
or
or
jno
fcompl
in
xchg
dec
add
dec
fbstp
xchg
and
pop
push
push
ret
mov
mov
push
sub
fldt
dec
movsl
clc
or
ret
xchg
or
push
push
xor
ja
rorb
in
xchg
mov
jp
xchg
sub
loop
sbb
ljmp
aad
pop
addr16
push
ret
push
mov
iret
out
out
out
pop
jbe
jl
jne
sbb
add
outsl
sbb
xchg
orl
and
mov
mov
add
fxch
in
les
in
mov
and
fidivs
push
or
xor
inc
push
inc
aad
pop
scas
sbb
hlt
jno
js
aam
mov
stc
dec
lods
sbb
fsubs
jo
mov
push
push
pop
stos
mov
mov
inc
fcoms
stc
inc
int
pop
and
xchg
xchg
arpl
mov
sar
les
dec
and
out
mov
inc
ret
sbb
xor
sbb
daa
or
cmp
ljmp
add
xchg
mov
pop
rol
movsb
dec
or
pop
inc
js
add
or
addb
inc
mov
sbb
mov
rcr
jecxz
cmpsb
mov
jle
inc
xchg
out
jmp
add
div
js
test
pop
mov
mov
cmp
fbld
out
jno
icebp
stc
inc
push
sbb
popa
shll
jmp
pushf
ss
fidivl
push
inc
cmp
push
dec
push
lret
and
sahf
jge
mov
testl
and
sub
mov
les
mov
xchg
push
add
pop
jno
jns
adc
and
inc
divb
sti
dec
pop
bound
jle
ret
es
outsb
sti
into
jb
sub
inc
mov
fmul
mov
cmpsl
outsb
push
mov
lahf
mov
cmc
loop
and
fstps
pop
xchg
add
cmpsl
aaa
jmp
add
push
fldcw
sbbl
fs
mov
jge
add
and
jle
add
shlb
xchg
mov
and
sahf
popa
lcall
sbb
inc
test
aaa
cmpsl
mov
push
dec
cmpsb
dec
fisubl
adc
pop
lods
lea
mov
leave
push
test
js
test
or
sub
rolb
xchg
sub
and
std
cmpsl
loop
aaa
daa
outsl
jno
std
stc
jp
cli
rolb
cmpl
xchg
or
ljmp
jns
jo
call
or
rolb
lret
dec
sahf
mov
mov
mov
mov
js
pusha
push
push
inc
dec
nop
inc
loop
mov
mov
jl
jo
addr16
dec
xchg
mov
xlat
jg
aaa
aam
mov
mov
lahf
xor
dec
xchg
xor
stc
sub
jle
or
pushf
aaa
jbe
jo
pop
xor
scas
adc
arpl
pop
xor
ret
mov
xor
xchg
xor
mov
mov
or
popf
nop
and
adc
xorb
dec
aaa
cmpl
pop
fistl
cmp
rcll
in
lods
out
popa
and
adc
jg
push
mov
jae
fstpl
sub
shll
imul
push
sbb
xlat
lock
cmp
xor
mov
lret
lea
fsubr
pop
adc
das
mov
cld
test
push
mul
ret
ret
test
pusha
jmp
xor
shrb
xlat
or
add
in
dec
shrb
imul
xchg
shlb
mov
adc
xor
jle
les
lea
aas
push
mov
sub
ljmp
subb
dec
push
adc
add
shrl
lea
adc
cwtl
clc
iret
fdivrl
jne
popa
adc
outsb
mov
lods
jmp
xchg
inc
out
subb
or
leave
cmc
mov
test
lahf
std
repnz
mov
adc
push
xrelease
in
and
iret
adc
push
push
sub
add
orb
repz
leave
bound
rcr
lahf
je
cmp
test
or
inc
jbe
mov
push
mov
movsb
lods
jno
jb
in
adc
mov
notb
pop
xchg
dec
xchg
std
push
shr
incb
cli
dec
ror
lock
add
outsl
sete
dec
js
je
stc
divl
lods
rcl
push
add
hlt
push
inc
or
test
cltd
mov
sub
inc
jp
mov
push
out
xchg
xor
add
ret
mov
dec
push
int
sub
mov
xchg
lea
jne
add
int3
push
or
sub
stos
icebp
js
mov
shrb
fwait
mov
fdivrl
int3
es
lahf
inc
inc
cmp
aam
mov
leave
imul
lldt
mov
in
scas
gs
add
cmp
rolb
int
jnp
out
push
add
mov
loopne
mov
test
sub
push
lcall
jo
push
dec
loope
fisttps
xor
or
into
cld
sbb
outsb
mov
xchg
leave
dec
jg
sti
sub
popf
daa
scas
subb
xor
adc
divl
fisubrs
push
cmp
inc
pop
adc
push
jp
dec
in
xchg
dec
xchg
push
pusha
cli
insl
xchg
pushf
and
mov
fwait
jb
lock
mov
push
lock
ret
aad
ret
iret
xchg
xchg
adc
sbb
pop
in
fbld
or
ja
xor
cmp
cs
dec
jge
daa
subl
pop
popf
pop
mov
xorl
aad
loope
xor
jns
fldt
cmp
cmp
and
sbb
jnp
add
pusha
shlb
lds
aad
inc
pop
push
mov
cmpl
or
addl
mov
sub
xor
jae
and
leave
add
mov
inc
int3
cmp
jle
xchg
dec
jns
inc
and
inc
mov
imul
test
jno
notb
dec
repnz
mov
or
imul
outsb
hlt
lds
test
xor
pop
or
mov
push
xchg
enter
xor
pop
ljmp
stos
sub
jecxz
stos
bound
and
out
scas
adc
pusha
inc
je
loop
inc
rorb
cli
add
call
adc
fwait
pusha
cmpsl
push
scas
int
push
int
mov
nop
push
stc
mov
and
jg
popa
pop
jle
ljmp
lcall
and
jle
mov
pop
cmp
xor
iret
lahf
pushf
aam
dec
mov
bound
je
mov
push
lock
sarl
imul
adc
mov
sub
inc
lret
mov
xlat
sbb
sub
cmp
or
push
iret
jns
sub
jp
mov
adc
inc
lret
icebp
xchg
shll
ret
popf
lea
imul
dec
push
xchg
jecxz
mov
jmp
xchg
lret
int
jne
push
xor
adc
push
cmp
repz
jnp
clc
mov
xchg
sub
xor
in
clc
push
jg
pop
shl
or
inc
sbb
nop
popl
cwtl
xchg
sub
mov
fdiv
je
movsl
test
jno
mov
pop
sub
aas
and
outsb
pop
jecxz
js
loop
mov
outsb
mov
repz
pop
xchg
cmp
hlt
inc
push
push
dec
shll
scas
inc
iret
sarl
xchg
jne
aam
dec
sbb
mov
pop
loopne
sub
xchg
pop
push
fs
stc
int
rcll
test
jbe
aaa
mov
ljmp
in
repnz
pushf
cltd
add
mov
and
mov
pop
push
xchg
rcr
lock
pop
cmp
mov
loope
inc
cmp
jmp
xor
rcrb
cwtl
xchg
mov
sub
mov
aam
xchg
out
dec
in
inc
or
scas
hlt
adc
test
jle
xor
mov
mov
add
sub
and
outsl
hlt
or
sbb
pop
scas
lods
stc
inc
imul
clc
lret
out
jl
pop
sbb
cmp
mov
xor
inc
loopne
xchg
stc
imul
jmp
and
or
daa
xchg
and
mov
mov
movups
incb
adc
pop
jecxz
mov
daa
inc
xor
and
xor
shlb
mov
repz
mov
in
ds
mov
daa
or
adc
adc
clc
jmp
push
inc
or
jp
cmp
enter
aaa
sbb
push
cmp
and
mov
inc
test
in
fxch
mov
add
jbe
push
jne
mov
inc
fildl
pop
push
mov
in
adc
in
inc
push
xchg
dec
inc
fldl
das
push
pop
adc
cmp
xor
fwait
cmp
mov
jg
cli
sub
pop
scas
nop
sub
scas
add
std
mov
cmc
jle
xor
add
ds
inc
mov
pop
mov
sbb
inc
add
popf
pop
sarl
pop
mov
xor
pushf
adc
test
jle
xor
pop
std
nop
xor
inc
fdivs
mov
adc
xor
or
jnp
jns
aad
jno
push
xor
and
and
mov
pop
xlat
fwait
lret
xor
out
push
push
jo
nop
rclb
cmp
neg
ret
bound
das
loopne
pusha
pop
add
add
cltd
ljmp
fwait
rclb
popa
fsubrp
test
xchg
int3
cmpsl
mov
lret
mov
movsb
xchg
leave
rolb
out
mov
push
xor
popa
adc
jecxz
das
test
push
push
pop
mov
cmp
div
int3
sbb
add
flds
mov
add
mov
mov
xchg
addl
or
xorb
hlt
pop
ret
jle
jae
pop
jo
jo,pt
pushf
adc
int
pop
scas
mov
jmp
popf
in
jae
lds
daa
inc
mov
dec
loop
xor
int3
adc
aad
addb
fwait
xchg
jne
jg
dec
pop
hlt
je
adcb
cmc
sub
sub
fsubrs
fcmovnu
sbb
fucomp
hlt
dec
xor
rclb
cmp
loope
add
and
add
cmpsb
push
xchg
and
push
movsb
add
push
inc
dec
add
orb
orb
and
mov
out
cld
push
iret
push
jmp
mov
mov
stc
xchg
sbb
sbb
loopne
ja
and
and
dec
cltd
xchg
jnp
in
adc
andb
outsl
cs
rorl
stos
push
lods
cmovae
std
lret
imul
mov
loopne
les
cmc
and
jg
outsb
dec
adc
dec
sbb
test
adc
and
mov
imul
pusha
add
scas
in
mov
push
adc
push
arpl
jbe
xor
or
dec
adc
movsb
sub
sti
loope
mov
int3
fwait
pop
dec
sub
out
pop
loope
add
inc
ret
mov
adc
mov
adc
stc
jmp
in
jne
arpl
popf
int3
out
std
inc
pop
dec
and
lea
mov
fbstp
ret
pop
sbb
push
repz
ss
jle
cltd
push
push
lcall
and
lea
add
jmp
pop
push
xchg
push
in
dec
jge
cmp
scas
aas
outsl
das
xchg
nop
jb
xchg
aas
mov
cmp
and
repnz
int
lret
or
mov
fists
mov
fimull
jno
fsubr
or
cmp
bound
xchg
push
popa
push
xlat
jmp
or
adc
or
xchg
loopne
fs
test
cmp
and
rcrb
lock
out
cltd
push
pop
pop
sbb
mov
jae
shr
iret
push
shl
sub
mov
std
sbb
pop
stos
xchg
mov
out
push
mov
cmpsb
shlb
movhps
jmp
push
sub
push
jg
xchg
add
xor
ds
hlt
pop
stc
pop
out
or
jns
popa
lret
in
sahf
add
fdiv
pop
inc
add
sub
test
arpl
pushf
sub
aas
pop
push
loope
sbb
cmp
xor
and
xchg
mov
je
fdivrp
lea
lahf
repnz
and
int
and
xor
mov
cmp
cmc
xchg
add
stc
sub
sbb
mov
mov
icebp
int3
xchg
aad
dec
addl
dec
jns
stos
xlat
das
mov
aam
sbb
lea
xchg
jge
mov
aam
mov
or
xor
push
sbb
repz
cs
movsb
sub
into
sbb
adc
sub
dec
movups
test
mov
push
sbb
inc
sub
rolb
rclb
mov
leave
rcrb
sub
xchg
adc
cmp
or
aam
popf
sub
jbe
pop
shlb
test
mov
sbb
daa
and
test
stc
pop
filds
pop
fs
pop
out
push
hlt
jo
xor
sub
aam
andb
insl
sub
aad
add
sahf
pop
in
xchg
xor
dec
lea
xchg
mov
mov
mov
shrl
jne
pop
ret
xchg
and
add
cmpsl
pusha
decl
xchg
test
lahf
test
push
push
out
movsb
femms
add
inc
insl
int
or
lods
xor
adc
lret
adc
inc
sarb
sub
jge
mov
mov
add
add
clc
push
xchg
addb
adc
sub
aam
jns
push
shrl
int
and
cmp
fldl
lret
sahf
lea
pop
cld
push
data16
movsl
dec
repz
and
adc
outsl
aam
popf
sti
add
daa
outsb
lret
test
cmp
scas
sub
fdivrl
sbb
pop
out
mov
rdtsc
jp
adc
pusha
push
push
dec
fdivrs
jg
mov
jp
ret
fldcw
xor
pusha
adcb
xchg
iret
outsl
les
outsl
fcomps
cld
dec
mov
cmp
addr16
mov
sub
loopne
loope
mov
sbbl
insb
push
je
fsubrs
outsb
or
push
push
jne
scas
imul
xor
jb
mov
loope
or
mov
pushf
push
push
pushf
into
jbe
jge
or
jno
sub
imul
out
sub
call
hlt
sbb
mov
and
xor
cmpb
mov
int
stos
insl
fcomps
test
push
int
push
aaa
das
test
shlb
cmp
xchg
pop
jbe
push
jne
arpl
in
repz
fisttpll
cmp
es
insb
xchg
jle
jnp
loopne
in
xchg
out
pop
rorl
dec
data16
imul
enter
pop
lcall
xchg
or
movsb
dec
mov
filds
or
adc
add
mov
push
loope
mov
pop
dec
adc
sub
or
adc
iret
mov
clc
jge
cmpsl
or
cmc
loope
mov
cmpsl
aas
call
cmpb
outsb
movsb
dec
imul
sbb
xor
sbb
dec
cld
xchg
mov
xchg
or
fimull
mov
lods
cli
int3
pop
jge
mov
test
mov
jp
mov
sub
push
dec
sub
out
mov
fdivl
pop
jno
jmp
sarl
sub
testl
jns
mov
sub
mov
mov
fwait
pop
sub
adc
mov
xchg
movsl
mov
imul
sub
je
orb
or
ds
das
push
fs
jecxz
es
lods
outsl
and
adc
and
lret
dec
loop
mov
add
pushl
jl
es
cmc
icebp
pop
imul
lock
sub
mov
lods
dec
adc
jp
sbb
inc
shl
clc
jmp
sub
xchg
mov
pop
and
inc
xchg
roll
sahf
sbb
cmp
aaa
xor
mov
decl
push
std
or
mov
push
subl
xchg
fstps
push
sbb
sbb
imul
jl
jecxz
lods
adc
or
loop
outsb
leave
lret
sbb
xlat
sbb
pop
adc
pushf
add
in
sbb
adc
in
nop
sti
daa
pop
pop
fistpll
lds
push
divb
mov
aas
cmp
daa
mov
or
cmp
inc
add
rcll
jns
mov
adc
leave
inc
xchg
jle
scas
addr16
jns
inc
mov
movb
cmp
mov
test
jb
mov
cs
mov
mov
cmpsb
iret
enter
imul
test
int
fdivl
push
iret
mov
in
sub
inc
ss
loop
gs
pop
scas
mov
mov
mov
mov
dec
ficoml
push
int
inc
in
cmpb
lea
into
push
mov
test
testb
lret
cmp
push
push
les
sbb
xchg
dec
and
loope
xlat
cli
push
cmp
movsb
nop
push
test
mov
cwtl
dec
ret
xchg
shrl
repz
push
in
xor
jmp
or
xor
fmulp
fnstcw
int
jnp
outsl
push
mov
roll
fistl
dec
xor
inc
jne
scas
jp
mov
std
enter
sbb
in
jne
lea
dec
add
push
or
sbb
inc
xchg
aaa
or
push
add
mov
lcall
repnz
pop
xchg
shr
mov
ss
jo
mov
sti
fwait
gs
cmp
sbb
push
dec
or
dec
xchg
loope
out
and
inc
adc
sti
jp
adc
sbb
pop
jmp
sub
mov
outsl
pop
aas
sahf
pop
sub
icebp
es
data16
outsl
sarl
repnz
fcompl
pop
mov
jg
nop
jmp
sbb
in
mov
and
les
xchg
pop
loope
fisubrl
dec
addr16
sti
cmc
scas
inc
cmpsb
push
mov
and
or
xchg
push
jo
jmp
pop
mov
jg
fstpt
mov
cmp
push
pusha
sub
aam
popf
jbe
pop
inc
mov
or
jmp
mov
test
mov
cmp
or
mov
loop
jbe
icebp
out
mov
aam
push
cltd
fisubl
add
add
aaa
xchg
cli
dec
in
cmc
xor
dec
sbb
adc
daa
dec
leave
test
sbb
ljmp
pop
mov
pop
test
pop
sub
adc
lods
xchg
mov
pop
adc
rorb
data16
loop
or
movsb
addl
out
ja
cli
xor
sub
inc
jne
cmpl
push
dec
sbb
fwait
push
mov
stc
mov
addl
add
xchg
aam
add
jns
inc
jg
mov
push
xchg
inc
pop
divl
xchg
cmpsl
enter
inc
adc
sbb
xor
and
inc
inc
dec
add
loopne
and
loop
or
add
jg
lcallw
or
sbb
out
lods
inc
call
enter
int3
stc
adc
leave
hlt
ret
push
and
fisubrl
fwait
adc
scas
negl
popa
adc
ss
fisttps
push
clc
fstps
pop
cmp
int3
addr16
sub
pop
or
adc
sub
ret
ret
lods
out
aad
inc
insl
or
repnz
aaa
xor
push
sub
xor
and
cmp
inc
or
test
xchg
sub
pushf
or
adc
clc
adc
jge
data16
inc
ljmp
pushf
mov
mov
std
cmp
xchg
insl
stos
sbb
test
stos
pop
lcall
ficoml
imul
loope
sub
enter
imul
ljmp
push
data16
mov
jns
xlat
inc
xchg
pop
iret
lds
inc
cli
xchg
sbb
sub
jmp
std
sahf
in
fstpt
mov
lock
jno
add
mov
fwait
dec
imul
rorb
sub
xlat
dec
and
testb
int3
pop
das
lcall
je
sbbb
cmp
in
and
jge
push
icebp
sahf
push
sarb
ja
mov
jnp
mov
lahf
and
fisubrl
jns
data16
adc
popa
mov
and
shr
jmp
sbb
xchg
and
push
call
scas
or
or
jns
into
sub
xor
cmp
adc
mov
xchg
sub
mov
dec
jmp
aaa
ss
into
ja
dec
sbb
and
ret
lret
jne
out
js
ja
test
mov
add
mov
push
pop
sbb
in
outsb
jge
fwait
sar
adc
push
mov
xchg
aad
inc
data16
ret
or
xchg
lret
popa
pop
adc
insb
stc
push
stos
icebp
into
mov
mov
ret
add
xchg
shll
iret
jecxz
sbb
pop
jae
push
jnp
push
sub
or
cmp
push
gs
stc
inc
test
mov
fcomps
aam
sub
sbb
pop
add
scas
push
pop
mov
movsb
push
mov
mov
and
insb
mov
or
fwait
test
rol
cmpsb
out
icebp
sub
sbb
pop
mov
int
inc
inc
adc
lea
push
cmp
mov
stc
xchg
dec
movsb
jb
sub
jnp
sarl
inc
jae
push
jmp
mov
and
jns
insb
inc
mov
mov
movsb
adc
xchg
push
mov
sbb
out
lock
ffreep
hlt
sbb
adc
adc
mov
adc
outsl
pop
add
inc
fstl
ret
fwait
xchg
pop
movsl
jmp
mov
int3
sub
mov
fwait
das
fstpl
stos
adc
call
mov
push
into
sbb
xor
out
shll
xor
jp
gs
mov
cltd
adc
rcll
mov
xorb
cmp
jge
and
fmull
test
add
ret
add
pushf
push
shl
cmp
xchg
xchg
push
bsf
ss
mov
enter
sub
in
jbe
adc
test
filds
push
inc
push
push
push
xchg
idivb
fistpl
sub
pop
mov
movsb
js
push
leave
insl
lods
aas
data16
fistpll
aaa
es
jmp
faddp
and
mov
inc
jle
bound
js
jmp
div
inc
mov
in
das
mov
push
and
test
repz
dec
test
stc
xchg
cmp
mov
jbe
ds
lret
xor
inc
pop
in
xor
push
adc
pop
rorl
enter
rcll
pop
andl
push
sbb
pusha
icebp
mov
cmp
jno
loopne
jne
inc
mov
mov
stc
enter
and
pop
xor
lods
mov
mov
pop
jae
dec
popf
sbb
sbb
int
mov
push
enter
mov
inc
inc
mov
cli
lret
mov
add
push
mov
pop
in
pop
push
testl
cs
loopnew
mov
sbb
adc
insb
adcb
or
sbb
stos
fisubrs
push
movsb
xor
pop
out
jae
loope
in
in
inc
jae
jae
stos
add
call
out
lock
or
dec
mov
in
mov
int3
ja
push
and
jae
sub
add
ret
pop
sub
cmp
rorb
jle
pop
add
mov
mov
xchg
push
mov
and
dec
mov
and
ljmp
lods
stos
stc
xor
mov
iret
mov
lahf
lods
ret
je
repnz
loopne
inc
mov
les
sub
and
mov
inc
enter
test
add
call
loopne
loopne
test
inc
comiss
das
jnp
pop
cli
jmp
cld
cs
pop
loop
inc
ljmp
hlt
je
jb
cmp
and
ja
push
pop
fwait
inc
push
stos
mov
dec
je
push
sbb
mov
sub
rol
mov
repnz
pop
cmp
lods
push
sub
xor
fcoml
dec
dec
mov
hlt
cltd
dec
ljmp
jge
ja
hlt
mov
jnp
in
movsl
or
or
lds
mov
push
push
sbb
out
sar
or
jg
mov
cmpsb
outsb
jp
movswl
add
push
pop
repnz
inc
sbb
mov
cmpsb
push
inc
xchg
jge
test
roll
jo
out
out
mov
xor
dec
lcall
add
lods
mulb
jg
push
and
mov
lods
jo
dec
shlb
jne
popf
jmp
add
ret
jae
aad
inc
stos
rorl
mov
xor
mov
inc
mov
cmp
pop
add
push
test
xor
jb
and
jno
push
out
lahf
je
incl
jmp
dec
sar
xor
pop
in
das
in
adc
jle
and
gs
or
dec
hlt
fisubrl
pop
pop
or
pop
xor
sub
xor
insl
sub
popf
inc
test
pushf
mov
inc
xchg
fisubl
inc
or
mov
dec
lahf
sub
movsb
push
sub
aaa
sbb
pop
jp
mov
mov
addb
sbb
mov
es
lret
mov
jae
fnsave
sbb
stc
mov
cmp
outsb
push
lods
jg
movl
fmull
and
and
imul
xchg
js
clc
sub
cmp
imul
pop
lret
sbb
in
repz
movsl
push
aas
mov
push
cld
mov
ljmp
fildl
nop
dec
push
mov
nop
push
mov
push
enter
bound
sbb
jbe
test
push
hlt
outsb
xor
es
out
arpl
xchg
cmc
pushf
mov
mov
sarl
movsb
aas
stc
and
mov
push
dec
adcl
adcl
jo
jl
and
pop
inc
jl
jecxz
pusha
stos
xor
in
xor
fdivs
and
es
and
adc
aas
out
ds
jecxz
fiadds
int
aam
xor
fidivrl
jecxz
inc
repnz
mov
cmp
in
push
outsl
punpckhwd
sub
pop
cmp
sub
into
sub
out
sub
sub
in
mov
mov
fmulp
adc
jbe
mov
shll
lcall
dec
insl
sahf
pop
negb
mov
mov
push
jne
inc
pop
shrb
mov
xchg
test
insl
adc
repz
pop
xchg
lcall
minps
pop
nop
dec
in
push
nop
add
add
jmp
icebp
push
sbb
mov
jae
push
clc
insb
int
xchg
lret
jle
dec
lods
movsl
movsl
pop
xchg
sub
aas
loopne
fwait
inc
lock
mov
mov
inc
sbb
out
jp
popa
adc
mov
mov
cmp
inc
jb
repnz
jmp
or
cs
les
repz
cs
iret
nop
and
cmp
hlt
lret
xchg
xchg
mov
inc
cmpsl
push
and
mov
adc
inc
mov
push
mov
xchg
test
sub
lods
das
inc
cmp
push
xlat
lods
pushl
jne
push
mov
dec
xor
roll
lods
sub
lods
add
lret
adc
pushf
fwait
pop
jno
jne
into
repz
lret
aam
movntq
out
push
inc
push
mov
sti
repnz
not
inc
inc
push
not
jb
jecxz
inc
dec
xor
js
notb
sti
loope
mov
dec
mov
ror
ss
sti
cltd
push
jp
std
cmp
xor
cli
add
cwtl
push
das
loopne
mov
inc
repz
stc
out
fistl
daa
icebp
mov
jno
mov
test
xchg
ss
lcall
inc
test
dec
lcall
dec
cs
or
lds
lret
jmp
aad
fs
xchg
enter
sarb
dec
fmuls
xlat
daa
adc
fildl
add
bound
dec
push
mov
aas
lret
js
popa
test
filds
jo
add
sbb
sbb
dec
pop
aas
xor
adc
xor
jl
mov
adc
jmp
cmpb
subl
and
push
pushf
cmpsl
add
shl
push
loop
shll
mov
test
mov
outsb
lcall
test
das
sti
repnz
addr16
jns
in
fisttpll
mov
dec
sbb
sub
pop
pop
fldenv
xchg
repnz
pop
xchg
push
adc
bound
xor
add
xor
xchg
call
add
jg
dec
cltd
mov
hlt
inc
xorb
or
mov
push
jb
insl
pop
or
fcomip
adc
jnp
xor
add
inc
adc
sbb
cmp
sbb
outsl
adc
bound
data16
insl
lcall
aaa
imul
sub
mov
inc
xor
scas
jmp
scas
mov
dec
jbe
mov
inc
ss
jp
scas
pop
ret
inc
ljmp
mov
fs
flds
inc
inc
inc
mov
fs
xor
xlat
popa
icebp
mov
and
mov
test
jo
sarb
test
aas
sub
inc
cmp
rcll
imul
aaa
push
jne
in
fisubrl
fists
push
push
push
cs
push
cmpl
into
movsl
lock
add
and
push
mov
fdivs
popa
mov
test
popf
rol
lret
jnp
int3
lcall
std
daa
enter
cs
lcall
shrb
jb
movsl
rol
sub
mov
dec
mov
push
sub
mov
cmp
pop
loopne
out
dec
push
adc
mov
lds
loop
sbb
outsl
in
jo
or
or
jecxz
adc
sahf
inc
sbb
dec
adc
sbb
andl
sbb
test
push
fwait
or
repz
rorb
xor
and
mov
jne
test
mov
into
hlt
inc
dec
mov
call
fisttpl
mov
add
paddb
inc
and
cwtl
inc
xor
out
xor
movl
sbb
fcom
aas
jne
mov
lds
fldcw
jbe
pop
jmp
push
addr16
mov
stos
add
mov
or
mov
push
leave
imul
mov
rclb
mov
out
dec
fistps
cli
pop
mov
pop
adc
xchg
and
pop
jg
loop
push
dec
in
mov
aad
imul
pushf
into
les
out
adc
nop
cmp
mov
testl
push
mov
xor
ss
jns
ljmp
sbb
jg
sub
pop
mov
cmp
push
mov
fidivrs
aaa
mov
xor
and
inc
ret
jb
mov
aam
fwait
and
in
xchg
sub
xchg
push
fsts
call
push
or
mov
dec
inc
in
pop
mov
imul
aad
bound
push
sub
fsincos
xchg
mov
mov
shlb
inc
js
sub
and
push
inc
pop
in
xchg
roll
jnp
testl
std
and
fmull
and
cmpsb
ss
and
mov
dec
or
cs
xchg
and
mov
ret
ss
aaa
jbe
pop
cvtdq2ps
adc
stos
dec
mov
out
cmpsl
imul
cmp
pop
xor
loope
cmp
or
sti
push
mull
jns
push
lds
je
push
mov
inc
mov
lods
test
and
push
mov
das
jo
mov
sub
cmp
add
mov
jae
addb
das
ret
or
push
ljmp
mov
xchg
xchg
xchg
fnstcw
xchg
fs
inc
mov
xor
test
gs
push
dec
or
in
lea
push
ret
push
arpl
sarb
mov
or
cltd
lahf
ja
push
pop
pushf
fmuls
push
pop
cmpsb
add
movsb
jl
jb
inc
mov
jns
test
jno
inc
jge
add
xchg
push
pop
pop
enter
loopne
in
cmp
data16
mov
sbb
sub
in
inc
ds
or
push
add
add
fdivs
mov
mov
push
sbb
cmpsb
cmpsl
lods
out
fcmove
xchg
sti
mov
aaa
xchg
popa
xor
outsl
sub
sbb
das
push
int
incl
pushf
sarl
scas
test
pop
les
int3
fldcw
incl
mov
sbb
stos
cltd
push
mov
jbe
add
sbb
add
pop
mov
or
insb
frstor
popf
daa
jae
std
mov
cmpsl
mov
out
push
add
clc
ficoml
pop
xchg
aam
and
popa
clc
imul
push
jb
std
dec
mov
cld
xor
mov
pop
xor
fnstenv
and
push
inc
pop
stos
adc
mov
push
mov
sbbl
push
cs
jne
cltd
repnz
jne
rol
stos
pop
inc
jnp
in
insl
in
and
jmp
pushf
test
xor
shll
popa
jle
mov
dec
lock
inc
fadds
stos
fstps
or
mov
pop
leave
mov
mov
mov
addb
mov
mov
jge
inc
fsubrs
adc
sbb
inc
cmpb
mov
lods
or
stos
loop
inc
leave
lds
int
mov
add
mov
xchg
xchg
inc
movsl
enter
dec
mov
call
rolb
fxch
ja
adc
mov
jns
cmp
pushl
movsl
imull
iret
ds
hlt
jecxz
loop
xor
sub
add
popa
mov
dec
stos
push
nop
dec
xchg
mov
jo
push
add
in
sbb
jae
and
mov
xchg
sub
arpl
lret
js
pushf
bound
push
rcrl
sub
xor
inc
ret
jns
pop
sub
inc
add
add
mov
rcrl
sbb
sbb
lods
int
fisubs
call
mov
rcr
push
pop
jmp
out
xchg
and
add
mov
mov
xchg
mov
add
mov
pop
pop
sub
inc
jecxz
pop
jmp
mov
fdivs
loope
mov
in
cbtw
mov
cld
cmpsl
cld
lock
cmp
or
stc
dec
push
and
pushf
cld
xorl
lock
inc
sub
mov
rolb
push
shll
pop
add
lds
push
sbbl
outsb
aam
insb
or
repnz
negb
aaa
mov
ss
dec
ret
sub
jg
xor
sub
call
nop
in
inc
fdivrp
icebp
movsb
imul
js
xchg
xlat
jno
in
pop
popl
pop
cli
mov
es
dec
out
xchg
adc
rcl
cmc
movsb
pop
sbb
aad
cltd
sbb
and
ss
out
xchg
rorb
and
es
xor
adc
pop
push
enter
xor
ret
mov
call
adc
inc
test
sub
xchg
or
push
push
sub
mov
mov
pop
push
ficoml
in
movsb
inc
outsl
sti
mov
cmpsb
inc
jno
xchg
sub
add
push
pop
or
push
and
hlt
data16
mov
sbb
xor
pop
jnp
dec
enter
sbb
jl
xor
pusha
fidivrl
mov
xor
stos
jge
in
nop
aad
xchg
inc
jecxz
aad
into
mov
dec
mov
cmpsb
test
jp
mov
imul
aas
icebp
or
mov
ss
xchg
out
inc
test
and
add
adcl
cmp
add
jecxz
les
pop
ss
pop
aaa
push
xor
test
jg
adc
push
inc
push
fwait
in
repz
adc
xchg
lods
cmc
mov
pushf
mov
xor
push
lods
inc
pusha
pushf
xchg
lods
or
mov
addr16
xchg
pcmpeqd
dec
lahf
mov
out
and
orb
pushf
lret
pop
adc
push
inc
clc
aad
xchg
pop
and
cmc
push
dec
stc
into
or
sub
xorb
jp
xchg
dec
int
mov
std
nop
cltd
loop
dec
and
jbe
fwait
outsl
dec
cmp
outsb
bnd
aas
stos
mov
sti
mov
mov
xchg
jns
xor
sbb
ljmp
lret
and
arpl
outsb
jmp
cmpsb
sbb
shrb
push
inc
bswap
sub
mov
sub
mov
ret
inc
iret
mov
pushf
inc
push
jb
and
add
sub
push
aaa
sarb
es
sbb
xchg
jns
cltd
push
mov
pop
call
lret
out
pop
sbb
push
mov
pop
les
ss
insl
add
mov
outsl
daa
repz
jle
dec
jle
stos
xor
arpl
dec
jno
cwtl
cs
or
push
je,pn
ror
and
sbb
ret
stos
pop
jmp
icebp
iret
movsb
cmp
das
fwait
call
xchg
sub
divb
rcr
inc
jne
and
stc
sbb
add
lods
cltd
lret
repz
je
push
jne
xchg
test
inc
fcoms
jae
add
or
dec
int
enter
cmp
inc
pusha
jb
into
xor
cmc
scas
movsbl
in
lahf
mov
add
mov
jge
xor
mov
test
daa
mov
aas
fmuls
insl
ss
fisubrs
hlt
mov
out
cltd
subl
shrb
in
in
sub
inc
cld
ror
outsl
stc
ret
cmpsl
inc
aam
mov
mov
xchg
xor
push
add
push
lock
ja
loope
sub
jecxz
inc
and
push
jmp
arpl
bound
call
jae
mov
cmp
in
or
imul
imul
cltd
imull
xchg
pop
inc
aas
imul
dec
cwtl
mov
and
ret
shrb
jnp
lret
stc
dec
adcl
scas
mov
addr16
leave
insb
int
push
and
scas
jae
arpl
fnstcw
out
out
mov
mov
lods
jp
je,pt
xchg
pushf
dec
setbe
js
int
out
or
xchg
push
fnstenv
out
ficompl
add
mov
xchg
sub
pop
out
add
nop
sub
scas
cmc
aaa
cmp
jbe
lods
and
inc
and
int
int3
rol
sbb
pop
sahf
roll
repnz
pop
inc
dec
mov
rcl
pop
mov
xlat
pop
xchg
inc
sbb
mov
sbbb
icebp
mov
es
pushf
xlat
imul
dec
stos
cwtl
imul
out
cmpsl
nop
insb
mulb
imul
mov
jo
fs
call
gs
mov
pop
loopne
clc
int3
cltd
cmp
call
adc
lea
stc
lret
jle
xchg
sub
xor
or
xchg
cltd
es
shl
sbb
add
clc
cmp
sti
ja
mov
sbb
sub
sub
out
int
std
xchg
cli
es
das
sub
push
into
ret
and
push
or
xor
arpl
cmp
call
push
imul
rcll
xorl
inc
push
sbb
jne
xchg
arpl
shlb
ds
add
pop
das
pop
cmpsl
jns
jns
aam
jbe
xchg
divl
test
lods
leave
sub
setbe
loopne
mov
sbb
xor
push
mov
aam
adc
or
push
popf
fistl
out
out
xor
popa
mov
fdivs
loop
loopne
fstl
pop
push
aam
lahf
in
adc
push
mov
lea
pop
and
adc
xor
ret
fwait
push
out
sbb
inc
lahf
dec
clc
mov
mov
sahf
mov
rcrl
cs
imul
repz
imul
popa
cltd
jl
cmpxchg
shr
addr16
mov
dec
dec
mov
mov
jo
std
pop
aam
push
mov
ffree
and
dec
cs
mov
add
sbb
and
out
push
scas
addr16
insl
pop
dec
add
nop
inc
lret
repz
ja
cmp
sarl
andb
cld
ds
lods
inc
cmp
push
xor
add
or
dec
repnz
xchg
stos
popf
lret
mov
je
mov
and
out
je
nop
lret
push
or
cli
hlt
xchg
xor
lret
mov
push
das
imul
callw
jne
loopne
dec
mov
and
ret
loop
shrl
inc
or
out
mov
mov
mov
lcall
sub
mov
inc
fwait
cmpb
jbe
cmp
aas
sub
es
pusha
les
je
nop
add
sbb
mov
mov
sub
ret
xchg
mov
lock
mov
fidivs
adc
hlt
add
mov
out
xchg
movsl
mov
mov
ljmp
adc
mov
mov
movsl
xor
jle
push
jb
lahf
and
leave
xor
add
mov
js
xlat
xor
clc
fcmove
pop
inc
adc
arpl
in
xchg
add
dec
rorl
int3
popa
inc
sbb
fst
cwtl
xchg
nop
mov
dec
adc
mov
mov
cmpsb
cmp
idiv
lea
cs
xor
pusha
cwtl
imul
xchg
fstps
sti
lret
push
mov
mov
test
lret
pushf
and
aad
jo
push
in
inc
inc
enter
ret
popf
jecxz
pop
ss
outsb
push
pop
xchg
pop
stos
stos
inc
cmc
push
push
push
jle
push
popa
mov
cmp
adc
ljmp
xchg
xchg
mov
imul
sub
sub
add
sbb
lret
pop
loop
push
dec
pop
jmp
cmp
cwtl
loope
pop
inc
test
inc
cmpsl
push
rorl
jp
inc
test
jl
fcomip
push
rcll
xor
push
fs
mov
jp
xchg
cmpsb
or
adc
scas
mov
add
jge
aad
lahf
out
mov
sti
push
shr
xchg
xor
sub
jno
aas
and
push
outsl
push
mov
pop
iret
out
bound
outsb
pop
out
notl
add
jb
lock
or
daa
ret
mov
add
jle
nop
and
push
jmp
fdivl
xchg
mov
dec
push
xchg
cmp
adc
add
dec
arpl
gs
call
xchg
hlt
mov
jne
mov
fadds
and
mov
inc
xor
jecxz
in
sahf
cmp
sbb
inc
push
push
push
shrl
inc
cmp
cmc
xor
sbb
sub
push
sub
and
ss
push
mov
fdivrs
jg
cs
lea
stos
outsb
xor
pop
jg
iret
imul
inc
outsl
xchg
or
inc
imul
add
xchg
adc
push
sbb
or
out
sbb
or
sarl
popf
push
rorb
jl
cmpsl
packuswb
mov
sti
lods
mov
sub
test
shll
xchg
cwtl
in
adc
add
lahf
and
rorb
and
outsl
cs
out
sub
mov
cli
int3
push
adc
jmp
pop
sarl
aad
push
movsl
xchg
add
loop
mov
mov
clc
xor
and
cmc
push
push
cld
leave
mov
xor
je
mov
inc
inc
sahf
jne
adc
popf
pusha
std
mov
rorb
jg
mov
cmp
in
cmpsl
stc
mov
fwait
pushl
pop
data16
or
aas
xchg
pop
dec
adc
add
adc
nop
add
add
pop
or
pop
xor
fcoml
sbb
jle
shrl
and
lret
testl
ds
fildll
mov
add
mov
aad
inc
xchg
jns
sbb
mov
mov
xchg
int3
xchg
inc
add
lret
adc
icebp
rcl
push
div
adc
push
outsl
cmp
movsb
out
aas
ds
outsl
inc
xchg
mov
lds
xchg
out
mov
cmpsb
test
mov
dec
sbb
add
jb
les
jmp
xor
dec
adc
add
push
cmp
daa
pop
enter
jno
xchg
loope
mov
xor
pop
repz
sub
std
es
aam
jl
add
add
into
imul
mov
sbb
dec
jg
les
mov
imul
inc
stos
mov
insb
icebp
add
insb
bound
jns
push
clc
subb
and
in
ja
scas
cmp
cli
leave
mov
aaa
popf
xor
push
push
cs
pop
stos
or
jo
mov
sub
sub
jo
les
mov
add
fmull
test
aas
iret
lret
or
and
mov
out
push
pop
aad
xorl
clc
mov
scas
mov
xchg
xor
dec
xchg
cmp
leave
mov
int3
aad
mov
inc
daa
lret
das
push
out
test
fnsave
xchg
dec
stos
ljmp
mov
stos
cmp
addr16
ljmp
pop
lcall
call
mov
xchg
aad
aam
cmpsl
mov
mov
cwtl
inc
movb
jge
xchg
jne
testb
cmp
inc
cmpsl
and
cli
sbb
mov
push
je
or
or
mov
stos
adc
add
sbb
push
cltd
mov
fisubl
sub
or
add
in
dec
xchg
adc
jle
pop
minps
push
icebp
push
mov
inc
sar
in
andps
jns
movaps
pop
or
fsubrs
repz
icebp
inc
jmp
aad
incb
cmp
inc
cmp
dec
adcb
push
scas
add
push
pop
cs
mov
dec
fmull
push
imul
push
roll
lret
push
subl
mov
rorb
xor
dec
rcrl
insl
push
pop
add
sbb
in
ja
je
adc
ret
imul
cmpl
jno
push
lret
loopne
sub
mov
pusha
cmp
fs
cmp
into
xor
orl
sub
push
mov
ja
push
jo
aaa
sub
xor
stos
loope
mov
dec
lcall
sbb
daa
dec
imul
into
nop
int
cmp
cmp
sub
mov
das
flds
jle
dec
xchg
pop
mov
nop
xchg
or
cmp
dec
push
sub
jle
xchg
ficompl
out
add
and
and
mov
inc
jnp
dec
mov
sbb
add
mov
jnp
mov
mov
and
movsl
loope
mov
les
jle
out
cld
inc
cld
les
dec
mov
addr16
sbbb
inc
xor
pop
mov
test
pop
inc
xor
ficoml
sbb
sahf
inc
repz
arpl
repnz
in
daa
push
setge
fstpl
and
cmp
push
test
sbb
push
sbb
cmp
popa
adc
mov
cli
dec
cmp
jmp
add
std
jmp
pop
jno
add
mov
imul
les
jle
jge
add
jo
dec
lea
xor
mov
aam
fisttpl
mov
std
cmp
dec
out
or
sbb
jno
jmp
les
pusha
scas
sub
jbe
xchg
imul
hlt
sbb
mov
or
sub
pushl
push
jge
sbb
test
iret
test
into
xorl
cmc
cs
xchg
push
repz
lods
xor
fdivl
cli
arpl
gs
dec
fnsave
xchg
inc
test
bnd
mov
test
sub
jmp
push
sub
and
pushl
cmp
out
aam
add
sub
adc
inc
mov
fdivl
dec
in
mov
mov
icebp
lret
pop
out
insb
sbb
add
inc
pop
lret
mov
xchg
sahf
dec
jge
repnz
xchg
rcr
and
add
jnp
cmpsb
sub
out
mov
in
xchg
inc
sub
xor
pusha
lret
adc
jnp
stos
in
jmp
movb
les
add
std
test
jmp
fwait
pop
lret
mov
mov
xchg
test
mov
dec
rep
imul
sbb
and
pop
or
repz
pop
mov
sbb
mov
inc
adc
test
sti
push
jmp
xchg
dec
test
iret
lods
xchg
cmc
adc
andl
dec
movsl
aad
xchg
mov
jbe,pt
adc
test
jg
rcl
fistl
mov
outsl
mov
pop
sbbl
data16
push
push
std
mov
das
mov
test
in
out
and
lds
scas
test
int
loope
jg
xchg
mov
and
ret
add
out
mov
xchg
sub
jno
or
mov
xchg
fadds
adc
data16
fimull
and
jle
mov
sbb
subl
mov
jp
aam
sub
loop
jbe
pop
mov
pop
and
sub
push
cltd
les
cwtl
aas
pop
divl
push
outsb
add
sbb
push
jp
test
lret
pop
inc
push
outsl
pop
fs
xor
ds
adc
sbb
call
les
pop
test
cmp
and
jge
js
cmp
lcall
jns
or
sub
int
mov
xrelease
lods
incb
jno
sub
or
sbbl
mov
adc
es
fwait
repz
jne
pop
iret
cmpsl
pop
sbb
pop
push
imul
lahf
outsb
daa
shrb
sub
shll
mov
out
imul
andb
mov
popa
sub
xor
scas
push
ret
dec
pop
fbstp
mov
or
mov
xor
adc
cli
adcb
addl
jnp
mov
push
ds
push
fisttpll
repnz
mov
ret
dec
shll
and
push
dec
daa
jne
adc
fs
inc
pop
jmp
xchg
stos
jg
or
aad
jle
push
insl
xor
jae
shll
aaa
add
cmp
in
cmp
dec
cmp
fistl
pusha
les
mov
pushf
xchg
dec
dec
lods
or
loope
stos
cmp
adcb
cli
aaa
cvttps2pi
pop
xchg
in
loopne
and
push
imul
mov
shll
push
stc
imul
pop
jp
shrb
ja
adc
jns
call
xchg
insl
or
mov
add
lret
jo
iret
lods
repz
push
xchg
shll
popf
je
mov
cmp
and
lea
loope
mov
xor
roll
xor
ds
lea
sarb
loopne
out
push
sbb
pop
cmc
daa
jno
aad
xchg
xor
xor
or
sub
pop
out
aam
and
mov
pop
imul
repnz
aad
xlat
jmp
dec
and
jecxz,pn
jg
pusha
lods
adc
cmp
aam
and
add
aaa
sahf
mov
dec
rorb
jne
in
lods
insl
sub
iret
in
orb
xchg
shrl
lcall
movsb
mov
int3
pop
xor
dec
sahf
in
loopne
insb
lods
cmpsl
lret
lret
pop
push
and
popa
lods
jp
push
sub
insl
ss
dec
lods
nop
shlb
cmpsl
jecxz
add
sub
pop
lcall
xor
sbb
pushf
pop
push
rcrl
mov
mov
and
dec
cmp
pop
lret
jo
sbb
fldl
mov
js
xchg
xchg
sbb
push
sub
jg
js
add
pop
call
mov
mov
scas
and
lds
pop
shlb
pushl
popf
out
cmp
and
pop
pusha
cli
icebp
mov
and
imul
rorl
rol
in
fisttpl
push
shlb
mov
test
add
and
mov
mov
and
sbb
xor
popf
test
leave
cli
hlt
mov
lds
inc
rorb
stos
adc
add
pop
data16
or
jecxz
xchg
test
sbb
inc
int
cld
fprem1
jg
push
cmpsb
pop
mov
inc
into
cmpsl
pop
in
sti
xchg
test
sti
ja
sahf
nop
repnz
roll
fwait
push
scas
and
out
mov
dec
dec
push
dec
scas
sti
push
push
adc
mov
aad
cld
das
jge
add
pop
sahf
push
dec
jecxz
sbb
xchg
jecxz
mov
aas
bound
loopne
add
aam
jne
jo
jae
jo
fadds
fmulp
in
xorb
sbb
add
sti
test
xorl
mov
mov
xchg
in
dec
les
push
cmp
inc
mov
aaa
std
mov
das
loopne
jecxz
jns
test
negb
orb
ss
cmp
pop
xlat
mov
sbb
in
outsb
repnz
dec
fiaddl
movsl
out
or
mov
insb
add
mov
inc
or
lret
jne
adc
xor
hlt
and
arpl
sbb
lahf
mov
movsl
lock
leave
xchg
mov
and
jo
enter
addb
fbstp
mov
or
negl
pop
inc
lret
std
add
leave
dec
jno
jo
dec
xor
ja
pop
mov
jle
mov
dec
and
jecxz
sbb
outsb
ret
sbb
insb
cli
and
shrl
dec
dec
jo
lahf
inc
les
pop
loope
pusha
mov
lods
out
mov
and
sahf
push
push
mov
call
rcr
js
sti
adc
stc
pop
aam
mov
das
loope
in
add
mov
in
xor
mov
cmp
dec
push
mov
jge
scas
fwait
or
lods
out
movsl
in
fdivr
ret
push
inc
push
jns
outsl
pop
xchg
fwait
pop
xchg
xor
mov
and
movsb
into
adc
adc
fldenv
inc
xchg
jbe
push
sub
imul
and
mov
mov
or
popa
dec
cwtl
sub
xchg
xchg
and
dec
inc
push
cmp
inc
sub
jae
jne
aas
cmpsl
out
mov
repnz
ret
stos
test
xor
sahf
jno
lock
bound
fistpll
stos
adc
and
and
stos
fisttps
into
aad
or
push
jp
mov
popf
clc
hlt
das
xlat
shlb
push
mov
lret
adc
cmp
jecxz
jl
or
ljmp
ror
mov
xor
xchg
pop
lods
pop
int
movsl
lock
fs
test
cmp
xor
and
ret
jge
mov
push
push
pop
fs
add
int
icebp
test
fnsave
mov
imul
and
mov
in
loopne
jge
daa
and
push
ljmp
and
or
lods
or
movsb
or
or
pop
xchg
xorl
int3
mov
mov
inc
sti
pusha
loopne
add
and
js
inc
dec
iret
mov
js
loop
in
cmp
movl
js
loop
mov
push
iret
cmpsl
xchg
inc
sahf
imul
aaa
outsb
mov
testb
sub
or
xlat
cwtl
push
call
loopne
cli
jbe
outsl
jo
cmp
fisttps
xor
mov
repnz
frstor
jge
roll
bound
push
pusha
mulb
out
inc
jle
push
jmp
jmp
mov
adc
test
mov
lahf
cmp
xchg
or
mov
je
xchg
in
xchg
pop
cs
add
ret
xchg
aas
icebp
cli
repz
fbld
mov
int
mov
stc
int
cmp
mov
pop
clc
mov
lcall
sub
jge
adc
adc
add
fwait
adc
pop
pop
lret
aad
in
scas
scas
mov
dec
mov
mov
popl
jbe
call
push
loope
push
fmuls
pusha
and
xlat
ljmp
push
mov
sub
xor
mov
pop
sbb
ja
push
fimuls
adc
mov
push
mov
inc
cltd
fldcw
scas
adc
enter
std
push
xor
enter
sub
ret
dec
test
mov
mov
cmpsl
cmpsl
lea
lea
sbb
jne
mov
lock
aam
inc
sub
dec
out
lret
jne
push
sub
push
test
push
loop
mov
sub
jno
pop
jmp
and
movb
stos
xchg
pusha
idivl
add
mov
cmp
or
outsb
inc
outsb
adc
test
xchg
mov
cmpsb
jecxz
mov
adc
idivb
movb
jae
inc
stos
add
or
les
push
jge
cmp
ret
test
imul
rcr
and
mov
dec
flds
in
ret
sub
and
dec
inc
mov
add
xor
adc
inc
subl
cmp
xchg
mov
pop
jle
and
add
sub
jg
jns
or
inc
xlat
push
fbstp
jl
testb
into
sbb
imul
mov
or
les
or
mov
add
sti
fmull
cmp
lock
gs
cltd
inc
lds
stos
cltd
imul
mov
jne
leave
sub
out
inc
adc
cltd
pop
adc
lods
mov
inc
arpl
fnstsw
push
lahf
pushf
push
repz
mov
popa
xor
xchg
popa
mov
inc
js
cmp
and
or
adc
push
test
in
mov
subl
mov
or
in
out
out
pop
mov
adc
out
test
cmp
jnp
jl
dec
pushaw
mov
or
nop
out
nop
pop
inc
jle
std
lret
outsl
push
shr
aad
std
pop
hlt
sub
mov
test
stc
mov
cmp
pop
jecxz
flds
push
out
aam
sub
jp
xlat
aad
iret
cmpl
mov
js
jmp
test
wbinvd
push
xchg
mov
mov
cmc
jle
enter
cld
cmp
insl
jbe
repz
mov
stos
sbb
stos
aas
xchg
xlat
xchg
nop
jmp
out
sahf
adc
cmp
fucomp
outsb
mov
or
xorb
xor
sti
dec
data16
push
pop
aas
mov
mov
xchg
cmpsb
pop
sub
mov
sarl
rcl
jae
mov
outsb
xchg
push
dec
fldenv
mov
js
mov
sub
mov
add
or
bound
stc
je
enter
hlt
inc
pop
pop
push
mov
stos
test
lds
push
pop
imul
in
push
pop
mov
sub
pushf
mov
adc
ret
add
cli
movsl
fs
lds
out
js
shl
hlt
xchg
pushf
clc
adc
mov
sti
or
jo
out
xchg
mov
dec
ret
jne
gs
iret
cmpsl
lock
add
in
pop
jo
add
mov
ljmpw
in
jge
loope
sub
mov
je
push
xor
in
lock
sbb
sbb
jne
xor
outsb
cmp
push
sbb
add
ret
adc
xor
jnp
jb
jae
fldt
push
insl
sub
inc
xchg
mov
fldenv
rclb
jge
popf
lea
stc
data16
hlt
mov
pop
mov
hlt
pop
adc
inc
inc
adc
sub
ds
jbe
divb
dec
push
in
pop
out
xchg
mov
pop
in
dec
rol
cmp
mov
shlb
push
and
push
stos
call
stos
push
dec
dec
adc
dec
mov
or
jno
cwtl
xchg
inc
addb
sti
or
dec
daa
sub
dec
mov
mov
lods
jle
scas
ret
push
add
loope
or
mov
in
pop
dec
jecxz
lock
ficoml
test
sub
scas
or
mov
push
andb
shrl
out
adc
ljmp
jle
fmul
or
sbb
mov
mov
das
mov
ret
sub
pop
fs
lret
push
xchg
mov
mov
cmp
enter
fwait
pop
inc
push
loopne
repnz
popf
push
inc
jmp
add
rorb
mov
sti
sub
negl
mov
xor
jl
leave
mov
enter
jbe
pop
jnp
push
rorb
test
sbb
add
xor
ss
fidivs
xor
sub
out
mov
repz
xchg
sarl
repz
and
or
mov
and
testl
mov
pop
dec
xchg
jp
fadds
dec
fmull
loop
ja
pop
lahf
xchg
and
outsl
push
or
andb
movsl
aas
fwait
and
push
sbb
cmp
push
das
push
mov
cmp
repnz
test
mov
pop
cmp
mov
cld
push
pop
test
pop
fadd
mov
loopne
lock
jecxz
or
sbbb
adc
sarb
fiadds
mov
mov
inc
sbb
sahf
push
push
lret
sahf
mov
ret
std
mov
sti
repz
cli
in
shlb
movsl
out
add
add
add
sub
scas
in
push
xchg
cwtl
jg
xchg
or
mov
xchg
dec
std
jnp
sub
sub
xchg
cld
stc
imul
pushf
xor
insl
stos
fxch
jle
ss
scas
fdivr
dec
shlb
int3
insl
es
sbb
adc
nop
and
and
push
mov
or
into
inc
test
pop
test
cwtl
std
outsl
pushf
jcxz
inc
incb
jmp
push
pop
stos
sbb
bound
movd
popa
and
stos
aam
pop
fsubrl
dec
cltd
add
cwtl
or
lret
loopne
cmc
add
push
test
jecxz
ljmp
jp
cs
push
inc
cmp
jle
add
dec
rclb
les
sub
sbb
cs
inc
push
mov
sub
ud1
out
jno
btc
or
scas
sti
push
testl
push
bound
fsubrl
mov
or
sbb
cmpsb
gs
aad
jae
das
divl
sti
sbb
in
test
testb
into
mov
pop
lcall
lods
mov
push
jnp
data16
stos
xchg
jbe
fstps
xor
add
insb
jmp
push
mov
lods
cwtl
and
sub
insl
sbb
test
jp
lods
pop
cmovbe
testl
xor
adc
dec
xchg
popf
adcb
mov
sub
dec
inc
sahf
iret
shll
hlt
hlt
mov
repz
divl
pop
popa
jnp
push
pop
pop
sahf
push
cmpsl
cmp
xchg
sbb
mov
scas
mov
nop
mov
mov
cli
ret
sub
mov
cmc
push
and
xor
imul
pop
pop
jge
mov
push
push
jmp
and
dec
dec
xlat
inc
out
pop
mov
xchg
test
add
fcompl
ljmp
xorl
cmpsl
shll
pushf
mov
movsb
gs
push
orl
cmp
cli
mov
lret
push
aam
cli
ds
jp
adc
mov
negb
xchg
jl
lret
mov
xchg
lcall
cmp
or
add
mov
rol
jge
adc
xor
mov
mov
fnsave
cli
int3
xchg
or
call
mov
mov
push
pop
jp
cli
shll
cli
aam
out
pop
pop
movsb
in
dec
xchg
and
repnz
or
dec
sahf
jns
leave
jmp
das
stos
movsl
pop
movsb
leave
repz
and
and
pop
mov
xor
loop
imul
repz
popf
loop
add
lock
pop
into
sahf
add
mov
pop
sbb
in
or
adc
and
add
xlat
xchg
push
cmp
or
xchg
inc
lret
jnp
push
sbb
imul
inc
pop
mov
push
adc
cmp
sub
ds
and
out
xor
mov
icebp
jbe
xor
ss
popa
cltd
inc
repz
add
mov
in
call
dec
ret
cli
or
sbb
inc
push
cmp
pop
or
push
sbb
enter
scas
mov
jno
clc
mov
fistl
popa
mov
hlt
mov
mov
arpl
add
rcrb
xchg
outsl
jmp
aaa
or
xchg
inc
aam
sub
xchg
or
adc
enter
cmc
pop
mov
and
pushl
test
outsl
xchg
fistl
icebp
fisubrl
loopne
ja
sub
out
imull
in
scas
cmp
pop
scas
movsl
popf
imul
push
inc
in
lods
in
push
out
dec
jo
inc
int
or
dec
inc
dec
inc
aam
cmp
mov
dec
sub
fs
inc
leave
pop
sub
sub
paddw
ja
outsl
data16
imul
es
jbe
add
mul
and
push
sub
movsl
test
mov
inc
cwtl
and
rorl
pop
scas
dec
lret
addr16
into
and
mov
mov
loopne,pn
jg
std
fidivs
pop
or
xor
mov
xchg
pushf
sarl
jnp
in
pop
push
cld
and
pushf
fisttpll
or
fcoml
addr16
dec
into
mov
loopne
aas
fnstcw
sbbl
outsl
mov
repz
mov
and
push
popf
fsubl
popa
mov
and
std
dec
lods
adc
or
push
pop
dec
dec
inc
dec
lret
and
jne
and
mov
push
test
sbb
dec
push
sbb
daa
lea
push
or
loopne
lods
enter
dec
sbbl
movsl
sbb
mov
cmc
mov
inc
cmp
in
pop
push
shl
mov
xchg
repnz
push
imul
mov
aaa
nop
inc
push
insl
cmp
mov
pushf
jne
movsb
sbb
data16
fsubl
cmp
adc
add
pushf
pop
or
and
test
sbb
outsl
inc
jnp
fisubs
xlat
and
mov
dec
imul
les
push
sbb
int3
pop
dec
jnp
and
jg
sarl
push
pop
insb
push
les
jmp
stc
addr16
mov
mov
subl
mov
or
shrb
push
jno
xchg
call
push
jo
dec
aam
test
xchg
andb
aaa
jmp
icebp
jae
pop
fiaddl
pusha
dec
subb
loope
test
mov
aad
mov
or
out
push
fadds
clc
aas
insl
shll
mov
call
xchg
imul
dec
dec
xlat
stc
mov
int
mov
inc
out
inc
leave
pushf
js
xchg
lods
loop
orl
and
inc
insb
add
imul
or
xchg
xchg
in
stos
adc
inc
test
add
fnstcw
xchg
inc
mov
adc
sub
pop
or
pop
rep
xor
cmpsb
adc
sub
xchg
test
xchg
adc
or
out
adc
pop
xor
stos
fucomip
xchg
mov
jp
loopne
and
push
popf
mov
push
add
loope
sbb
push
adc
popa
pop
jb
pushf
shl
jns
movsl
push
mov
mov
clc
rolb
cmpsl
in
or
sub
es
jmp
sti
inc
sub
in
std
lret
pop
dec
xchg
jbe
daa
add
xorl
rcrb
in
push
cs
push
and
mov
arpl
icebp
sbb
int
lret
push
fadd
dec
mov
jmp
adc
mov
inc
mov
cld
sub
arpl
jg
mov
xchg
call
loop
movsl
mov
cs
cmp
push
sbb
cmp
popf
test
scas
aaa
push
xchg
cmp
cs
fsub
sub
fimull
cwtl
fadd
dec
fiadds
add
rcrb
int3
dec
jp
mov
sbb
adc
add
jno
push
inc
lret
out
imul
mov
mov
leave
sbb
ret
jmp
loope
add
test
sub
iret
push
adc
mov
icebp
pop
inc
push
or
jmp
out
mov
subl
stos
lods
and
mov
jle
mov
out
or
int
mov
jns
sbb
or
or
push
dec
inc
int
inc
adc
loop
mov
or
in
sbb
push
cmp
rclb
inc
lods
sbbl
stos
mov
fxch
clc
test
and
adc
mov
or
andl
or
push
sbb
and
dec
daa
insb
ficompl
inc
sahf
jnp
mov
aam
inc
rcr
imul
hlt
in
bound
or
push
or
jge
and
xchg
pop
scas
and
movsl
add
jae
leave
fs
sbb
push
addr16
cwtl
fcomps
test
dec
aaa
leave
push
outsl
test
inc
daa
dec
pop
xchg
lea
out
stc
xchg
inc
or
jo
or
fdivl
ret
sbb
or
fldl
imul
xchg
pop
push
scas
int3
mov
loop
add
mov
leave
inc
stc
into
out
dec
lods
aam
push
call
jae
cld
bound
repz
inc
xchg
cs
xor
push
inc
and
mov
mov
sub
xor
inc
mov
mov
mov
pop
test
roll
mov
mov
pop
cltd
stos
jno
pop
stc
mov
sub
and
ret
iret
push
into
push
push
clc
pop
rorl
jmp
dec
mov
cmc
idivl
mov
inc
bound
icebp
cmp
movsl
lcall
adc
jnp
and
mov
add
cwtl
fwait
cmp
mov
add
sbb
push
iret
hlt
fistl
aas
jae
or
loopne
mov
in
cs
stos
adc
adc
or
xchg
pop
push
push
jae
das
scas
mov
cmp
loope
aas
and
lahf
and
sub
into
jp
mul
pop
sub
jge
pop
push
pop
pusha
arpl
inc
adc
xchg
mov
pop
popf
int
jp
adcl
mov
add
cwtl
mov
fcomps
enter
icebp
fidivrl
push
mov
pop
fimuls
das
adc
xchg
lods
insl
fisttpll
scas
std
out
call
cmc
insl
pop
js
popa
inc
sahf
dec
sbb
hlt
jae
lret
dec
mov
jecxz
mov
add
jno
cmpl
out
add
rcrb
jmp
jae
xchg
ficoml
push
sub
mov
push
iret
add
fstps
mov
push
xchg
xchg
loopne
sbb
mov
loope
movl
xchg
mov
pop
or
into
fsubrs
mov
add
fs
cmpsl
jns
sbb
add
add
and
and
inc
nop
rorb
xor
imul
adc
test
and
add
push
pop
ss
push
mov
xor
shlb
push
pop
xor
cmp
daa
pushf
arpl
mov
or
daa
nop
dec
fmuls
xchg
jae
or
push
push
add
test
pop
inc
mov
and
std
das
add
gs
clc
aam
cli
in
test
sub
dec
cmc
mov
aad
cli
pusha
test
bound
lret
subl
sub
ret
leave
scas
js
xor
dec
data16
xchg
out
mov
jo
leave
gs
stos
shrl
bound
mov
fnstcw
mov
ret
jle
xor
or
popa
ja
inc
mov
test
jb
mov
ljmp
push
jmp
hlt
and
inc
pop
cld
and
adc
push
mov
sarb
lret
cltd
insb
dec
out
mov
sub
sbb
pop
mov
gs
stc
mov
dec
popa
mov
lock
rolb
dec
xor
inc
int3
xor
fistpl
inc
imul
bnd
and
pop
xor
inc
dec
popf
push
sbb
pop
arpl
jl
push
lods
sbb
subl
idivb
outsb
ds
outsb
sbb
cmp
sbbb
dec
xchg
fsub
xorl
cs
in
pop
sbb
adc
rorb
cmpsb
clc
xor
sbb
leave
fbld
outsl
aas
frndint
jge
push
mov
cmp
addr16
stos
dec
sahf
gs
lea
xchg
sub
arpl
mov
push
push
hlt
cmpsl
dec
and
xchg
rorb
pop
pop
stos
in
sub
push
adc
xchg
cltd
movsb
sti
jg
sarb
pusha
dec
cwtl
pop
mov
dec
aam
in
mov
jmp
in
add
jp
add
xchg
xchg
fcmove
test
sub
ljmp
ret
setl
sub
imul
jge
repz
adc
insl
push
and
lahf
orl
out
stos
inc
dec
movsl
add
push
xlat
ret
mov
adc
pop
dec
cltd
je
arpl
out
ret
test
imul
test
in
or
or
pop
xlat
sbb
shl
lods
mov
xchg
dec
push
insl
ficoml
shl
enter
adc
test
mov
adc
xchg
iret
imul
jne
cli
stos
xchg
dec
add
inc
addb
mov
popf
pop
jp
cmp
cmp
sub
mov
js
sbb
rcrb
inc
and
mov
adc
addb
mov
stos
insb
inc
fildll
lods
fimull
dec
iret
mov
sub
jecxz
andb
loopne
fsubrp
orb
or
mov
stos
xor
hlt
sub
popf
sbb
add
sbb
cli
cmp
pop
sub
mov
fsubrl
insb
or
cwtl
inc
add
add
push
lret
dec
mov
mov
push
sub
push
filds
mov
cltd
mov
inc
pusha
sti
notl
ret
lea
les
pop
push
gs
movsl
mov
lahf
lods
sub
and
sbb
sub
mov
or
pop
jo
insb
mov
push
inc
and
mov
jl
out
das
out
pop
lea
roll
xor
fidivrl
popf
mov
mov
pop
or
ja
sub
shlb
mov
sub
or
jl
sahf
arpl
je
int3
push
cwtl
sti
jnp
mov
in
loope
sub
mov
pop
mov
andl
stc
pop
push
repnz
icebp
sub
jns
arpl
lods
ficomps
mov
addl
mull
dec
nop
xchg
adc
test
jae
aam
movsb
ret
sub
pop
frstor
add
stos
xchg
add
scas
sbb
mov
nop
sahf
dec
push
jae
in
jns
les
cltd
dec
inc
sahf
insb
pop
mov
loop
pop
jne
aas
mov
mov
ss
mov
and
data16
stos
dec
int3
out
insb
iret
xor
out
jae
test
ljmp
js
add
lcall
adc
adc
stos
fcom
subb
pop
pop
cmc
cmpb
inc
lcall
cltd
fcoms
pop
in
inc
xor
das
inc
lahf
inc
sub
sub
imul
add
add
add
lods
sti
fcmovnbe
push
outsl
pop
jge
sub
push
adc
push
xchg
push
into
mov
mov
sbb
jl
fs
mov
sub
out
rolb
xchg
pop
loope
add
mov
and
es
stc
pop
cmp
dec
aaa
sub
test
movsb
dec
mov
push
pop
ds
add
outsb
xor
iret
jp
movsb
fstpl
addr16
scas
push
or
divl
sti
sub
inc
cs
rorb
and
cmpsb
jmp
cld
imul
das
hlt
sar
repz
and
sub
lock
push
jb
push
sahf
xor
or
xchg
hlt
test
dec
lea
pushf
pop
andl
scas
nop
mov
sbb
in
outsb
pop
shll
fsubrp
push
and
out
sub
mov
xorl
xchg
or
les
out
aaa
and
sub
push
std
pop
or
mov
scas
jecxz
loope
adc
loopne
xchg
je
gs
push
mov
out
cmp
jmp
mov
sub
lea
mov
out
in
stos
dec
fsts
xor
xchg
inc
xor
rcll
out
sbb
cmp
add
fwait
xor
jl
mov
dec
mov
icebp
jae
jmp
jae
xlat
test
jns
call
sub
imul
jne
ja
sbb
ret
div
repz
jecxz
inc
aaa
mov
repnz
dec
mov
nop
mov
scas
and
imul
and
mov
pop
call
sbb
lahf
mov
cmp
aam
xor
into
orb
push
sub
testl
cmp
sub
dec
cmpsl
cmp
cmp
or
and
ljmp
outsb
sub
lods
loop
xchg
test
mov
cmp
mov
add
out
popa
filds
xor
imul
rclb
stos
loopne
lock
addr16
jge
pop
test
jecxz
or
cli
mov
rcrl
ret
adcb
lahf
lds
xchg
lret
jmp
je
int3
mov
arpl
or
fisubrs
or
lea
add
aas
sub
imul
or
inc
mov
test
sub
push
cmpb
push
xchg
push
fnsave
call
cltd
push
orl
imul
dec
xor
mov
lcall
pop
xor
test
test
xchg
xor
push
and
in
cs
fnclex
jecxz
jmp
mov
mov
push
pop
dec
xchg
adc
lahf
mov
ficompl
in
aaa
mov
pushl
sbb
mov
inc
xor
mov
rclb
sbb
jle
sbb
sub
pop
cmp
xorps
loopne
sti
add
sub
test
mov
lods
inc
leave
dec
push
mov
pop
lret
daa
mov
stos
sbb
aam
icebp
xor
and
mov
dec
bound
pop
mov
push
sub
or
sub
cmp
sarl
rorl
icebp
pop
mov
test
ret
jg
sbbb
std
outsb
jle
bound
or
cmpsl
push
dec
lds
lds
cli
xor
test
dec
cs
fdivr
jle
and
lret
inc
xchg
xor
jns
ror
dec
cmp
into
and
cmp
jl
pushf
add
test
jp
lret
jle
insl
in
mov
or
adc
mov
adc
add
and
pop
rep
stos
xchg
imul
iret
arpl
mov
in
mov
aam
aaa
movsl
sbb
scas
imul
and
jbe
sub
sbb
lods
arpl
mov
adc
and
add
movsl
mov
ret
jnp
ficompl
adc
cmp
or
xor
lcall
out
jbe
and
dec
and
dec
lods
hlt
add
in
cld
dec
mov
loop
bnd
push
jl
out
sub
jg
cmpsl
sbb
out
stos
dec
cli
aas
cwtl
push
scas
mov
lret
or
xchg
sub
sub
and
in
lock
jo
inc
out
jo
mov
sbb
lock
outsb
push
xchg
mov
mov
push
pop
dec
inc
loope
xor
fisubrs
test
addr16
cwtl
pop
or
dec
or
mov
int
sbbl
hlt
test
test
mov
adc
movsl
jg
out
les
daa
clc
add
xor
xchg
pusha
xor
insl
push
push
mov
das
push
sub
pop
add
lods
jbe
jno
push
or
dec
repnz
outsb
push
mov
lea
xchg
mov
jbe
inc
in
daa
into
stos
cmp
bound
sbb
enter
popf
sbb
xchg
jne
sub
sbb
lret
lret
mov
xchg
dec
mov
mov
imul
mov
add
adcb
icebp
or
stos
add
mov
int
leave
mov
in
xchg
push
or
sbbb
mov
stos
push
and
aam
popf
mov
and
jae
and
int3
shll
insb
cmp
enter
icebp
cmp
mov
sub
and
arpl
mov
sub
pop
add
sbbb
jns
repnz
xlat
and
dec
repz
inc
or
aas
adc
fldl
dec
outsl
adc
push
sub
insl
inc
jge
pop
lcall
lret
in
mov
aas
sub
push
fucomip
sahf
mov
aaa
scas
movsb
mov
sbb
sub
jecxz
mov
adc
sbb
data16
or
shrb
push
je
adc
test
jecxz
xchg
lret
stos
imul
dec
rolb
out
cwtl
das
mov
rorb
fstpt
insb
xchg
xchg
adc
insl
js
jns
fs
fisubrs
sub
mov
dec
test
jb
stos
mov
insl
mov
jecxz
lsl
sub
push
xchg
mov
xor
loope
xchg
fldl
ret
mov
jg
icebp
pop
ljmp
stos
sub
and
cmp
and
push
push
inc
jno
mov
mov
push
cmpsl
sub
lods
sahf
push
sar
push
push
pop
fcmovnbe
pop
lods
out
sbb
inc
ljmp
push
ret
xchg
inc
je
es
pop
push
sub
mov
and
push
cltd
aad
sub
dec
sub
adc
pop
leave
pop
dec
out
add
add
cmp
divl
sub
pop
jl
aad
pop
int
cmp
ss
leave
movsl
cs
dec
fcomi
sub
xchg
jl
mov
fmuls
jmp
mov
push
and
mov
pop
push
jo
sbb
dec
push
xchg
dec
mov
sbb
lret
ret
out
fcmovu
xor
sbb
cmc
add
add
je
lock
movsb
js
lods
push
mov
jb
sub
loopne
fildll
cmp
pop
xchg
std
in
add
jge
push
test
out
aam
or
inc
enter
jecxz
int
test
cmc
push
adc
or
xchg
ljmp
xorb
inc
scas
decl
pusha
jp
ja
pop
mov
int
enter
cltd
stos
xor
push
ljmp
or
popf
pop
push
lahf
jecxz
gs
sub
iret
xchg
mov
enter
sub
std
aas
fidivrs
xchg
sub
jo
add
adc
inc
int3
cwtl
outsb
adc
mov
js
pop
imul
dec
sti
in
rdtsc
mov
data16
mov
and
faddl
sti
adc
dec
mov
mov
jg
test
scas
jbe
push
data16
push
mov
lds
int
xchg
in
ret
inc
bound
stc
adc
clc
sub
outsb
pop
sbb
jmp
lods
mov
push
cmp
inc
in
lret
repz
daa
pop
push
ds
aaa
xor
fsub
adc
mov
mov
loopne
dec
cmp
cmp
fdiv
jne
in
jecxz
sub
xor
int3
popl
push
jns
popa
adc
mov
mov
xlat
add
mov
mov
roll
popa
jmp
rorb
lahf
push
cmp
daa
sub
das
jo
movsl
rcll
xchg
fiadds
call
push
pop
loop
lahf
outsl
mov
mov
jl
jle
adc
xchg
outsl
adc
sbb
js
fwait
fs
popa
xchg
les
clc
xchg
test
mov
aam
mov
stos
pusha
popf
repz
movsl
pop
lret
cmpsl
fdiv
movsl
movsl
jp
pop
xor
mov
in
aaa
push
add
sbb
ds
or
cmp
pop
out
ss
lods
cli
insb
iret
enter
and
stos
xor
dec
pop
ds
mov
lds
or
in
or
cmpsb
inc
into
cwtl
sbb
repz
popf
jb
jb
fnstcw
pop
subl
movsl
aad
testb
jmp
lea
xor
add
negl
ficoml
mov
pop
mov
jge
mov
aam
mov
test
xor
cmp
xchg
add
dec
daa
mov
pushf
mov
add
mov
scas
mov
leave
rcr
jo
lcall
pusha
pop
jg
in
cmp
cli
dec
mov
je
sub
xlat
xchg
cs
adc
ja
jo
mov
cmp
sub
sbb
aaa
int
push
and
dec
pop
cmpsl
lods
rcrb
lods
xor
sbb
mull
ret
sbb
lea
addl
hlt
or
out
xor
mov
jno
icebp
lods
and
mov
sub
jnp
repz
mov
test
and
jo
add
lea
lea
or
mov
mov
inc
or
push
bound
loopne
jmp
or
enter
scas
adc
mov
out
fnstsw
test
push
mov
dec
add
xor
aaa
inc
inc
ret
and
fcomps
jle
stos
add
imul
subl
xor
lods
pushf
addr16
jl
lods
pushl
leave
add
mov
std
mov
inc
in
pop
loop
adc
xchg
jne
pop
push
add
repz
in
aad
addr16
imull
mov
xchg
shlb
jmp
jl
das
in
fnstcw
and
sar
pop
xlat
pop
adc
lcall
jae
out
scas
lock
scas
scas
mov
ret
mov
lret
adc
or
int3
jmp
lret
fdivr
pop
cmp
daa
scas
or
cmp
cld
lcall
int
sub
mov
add
mov
arpl
lcall
push
mov
adc
shlb
gs
in
push
mov
pop
xchg
push
je
xor
mov
stos
into
outsl
pop
push
pop
pop
add
inc
sbb
xor
pop
lds
out
mulb
in
mov
fimuls
and
cmp
jmp
mov
adc
xchg
nop
push
mov
cmp
ja
arpl
loopne
and
pusha
or
fstpl
dec
mov
add
push
inc
dec
and
add
js
test
cli
xchg
pop
or
test
jmp
xchg
lods
xor
jbe
shlb
leave
mov
call
cmp
aas
jl
imul
jg
test
mov
aaa
dec
sbb
xor
iret
stos
adc
mov
pop
pop
pop
addr16
push
sub
pop
popa
pop
mov
or
and
jno
stos
sub
hlt
jmp
sub
cmc
xchg
jg
dec
lods
xchg
jle
push
addr16
inc
inc
les
jnp
mov
add
test
jecxz
fistpll
in
mov
dec
into
pop
dec
test
sbb
mov
outsl
mov
aam
push
mov
out
stos
hlt
add
aaa
jge
xor
jnp
arpl
shll
outsl
mov
mov
jmp
xchg
mov
pop
movsb
nop
pop
cwtl
sub
imul
mov
rclb
cld
pop
jns
xchg
lret
mov
daa
enter
add
push
sbb
mov
xor
movsl
lods
in
aas
mov
mov
ja
cli
or
xchg
in
cmpsb
xor
lods
sbb
popa
lods
pop
clc
xor
cmp
mov
or
xor
jnp
lock
das
dec
shr
je
xor
subl
jge
je
dec
mov
mov
pop
or
xchg
aad
hlt
out
cmp
mov
add
push
hlt
sbb
dec
repz
aaa
mov
adcb
bound
and
lods
xor
push
xchg
insb
sbb
fsts
dec
outsb
jl
adc
sbb
orb
sub
cs
loopne
inc
sbb
iret
jns
in
in
jno
ss
inc
or
mov
pcmpgtw
pop
adc
mov
mov
hlt
mov
or
mov
push
cmp
test
scas
es
push
repnz
jne
seto
xchg
rcr
mov
ss
xchg
loope
imul
mov
push
xchg
imul
test
gs
inc
nop
mov
cmp
and
testl
jg
ja,pn
in
push
lock
test
sub
int3
shrl
xor
jmp
test
push
add
imul
cmc
mov
mov
frstor
lds
movsb
imul
mov
or
cmpsl
jmp
sbb
cmp
aam
pop
test
jecxz
pop
push
xchg
pop
in
out
mov
lock
ss
mull
std
mov
mov
sarb
addr16
inc
nop
xor
pop
or
negb
bound
out
sbb
mov
das
or
cmp
jbe
push
mov
push
add
aam
pop
fiadds
jge
pop
push
sbb
imul
xor
mov
js
cmc
pxor
jns
ret
int
stc
lods
in
das
aaa
cmp
xor
mov
xor
mov
or
jmp
aaa
xchg
sbb
lock
testl
mov
sub
aam
movsl
ds
jb
jg
push
lds
jl
subl
in
cli
cmp
sbb
sbb
mov
rorl
pushf
pop
pop
jo
ds
dec
pop
jno
push
stc
jl
xor
push
inc
addr16
inc
fbstp
call
add
push
ss
jge
dec
ds
pusha
aad
shrb
xchg
push
xchg
hlt
cmp
pop
mov
enter
gs
or
sbb
jbe
arpl
outsb
mov
xchg
lods
sarb
outsl
stos
je
stc
sub
pop
mov
cmp
xor
shlb
cmpsb
inc
push
xor
mov
sub
jecxz
es
mov
call
out
sbbb
test
jl
cli
mov
sub
sbb
ficomps
insl
das
sbb
push
or
push
inc
push
insb
loopne
pop
cs
int3
in
fmulp
xchg
sbb
hlt
jns
add
outsb
mov
movsb
pop
mov
xchg
sub
mov
sbb
stc
dec
or
aad
xor
imul
xchg
cmc
xchg
dec
cltd
and
push
cmc
push
push
les
inc
flds
xchg
jne
pop
test
sbb
sub
xchg
mov
adc
lahf
fldcw
jo
add
bswap
mov
xchg
loopne
cwtl
popf
nopl
dec
shrl
int3
testb
jo
std
pop
cmp
jne
shrl
fisttps
loopne
ljmp
jo
mov
jmp
in
fsubrs
or
add
and
lahf
inc
mov
idivb
jmp
adc
mov
push
lahf
sahf
push
cmc
sbb
into
adcl
xor
inc
out
add
nop
or
jmp
sbb
jnp
mov
ss
cmpsb
push
fmull
test
adc
test
xor
push
pop
xchg
sbbb
jle
jae
das
mov
and
in
pop
sti
fucom
and
negb
cmp
jns
add
pop
inc
mov
incb
ljmp
pop
and
dec
insb
sbb
aaa
cmp
addr16
mov
fimull
scas
mov
add
cs
repnz
sahf
mov
xchg
cli
add
push
add
mov
cmc
fisttps
fs
ret
pop
imul
xor
adc
add
lods
in
mov
in
lock
rclb
hlt
xchg
cmpsl
or
dec
mov
das
daa
stc
pop
ret
push
sbb
lea
aam
mov
cwtl
cmp
int
fisttpll
mov
or
mov
fldl
mov
mov
cltd
stc
ss
xor
mov
imul
dec
inc
xor
mov
mov
in
nop
mov
nop
pop
sbb
pusha
jnp
cmc
xchg
mov
dec
push
lods
fldcw
mov
lds
dec
scas
add
repnz
sub
arpl
pop
sub
and
outsb
shlb
xor
lods
add
sub
xchg
jne
xor
inc
mov
mov
repz
lret
loopne
mov
push
sub
mov
mov
clc
stc
out
cmpsl
inc
ret
daa
and
push
xchg
dec
imul
cmpsb
mov
adc
jge
mov
rcrb
imul
add
fisubrl
and
mov
or
mov
xor
sub
sbbl
movsl
mov
sub
mov
or
stos
xor
aad
mov
xchg
jmp
adc
add
add
ljmp
sarb
cmpsl
cmp
xchg
lcall
mov
fwait
adc
sub
adc
imul
dec
and
pop
inc
add
nop
cli
ret
stc
shrb
mov
jp
sub
int
in
out
les
test
cmp
shll
mov
add
cmp
jge
inc
jle
pop
mov
loopne
stos
dec
mov
movsl
push
push
dec
out
mov
pop
loope
out
pop
cli
xchg
mov
ret
mov
mov
rcr
aas
test
adc
add
mov
mov
jb
pop
pushf
add
dec
fldt
jne
push
fsubrl
movl
xchg
daa
lret
pop
pop
inc
mull
cmp
jecxz
jns
jne
rolb
sbb
cli
lds
mov
ss
ja
jecxz
outsl
and
sub
decl
ficoms
xchg
dec
fists
push
xchg
and
call
mov
and
mov
gs
pop
push
cmp
adc
inc
mov
jnp
mov
call
sti
mov
push
pop
mov
in
fsubl
cmc
mov
jmp
pop
in
mov
sahf
cmp
push
jae
aas
test
xor
add
jo
dec
pop
xor
or
shrl
add
fstps
stos
aas
loope
jl
adc
pop
mov
mov
and
mov
into
addr16
fcmovnu
xchg
lcall
xchg
xchg
cmp
cmpsl
add
pop
std
leave
movl
jae
or
cltd
mov
ret
mov
dec
push
push
add
sbb
push
sahf
gs
or
xchg
movsb
pop
or
and
stos
cmp
jo
outsl
sub
ret
mov
lds
loop,pt
pop
lahf
mov
mov
jno
into
mov
stos
xor
out
cmpl
pop
pop
popa
mov
adc
pop
testl
dec
xchg
cmp
leave
mov
xchg
mov
adc
xor
xchg
adc
pop
adc
insb
fdivrl
pop
mov
adc
sbb
mov
lea
cli
lret
aad
stc
jl
lret
test
jl
cmpsb
in
sbb
call
adc
loope
into
je
dec
mov
push
cld
jl
jno
add
xchg
cmp
cs
in
aas
popa
or
int3
mov
rorb
enter
imul
ja
popf
rolb
mov
sub
push
outsl
ds
jecxz
mov
pop
lods
test
sub
addr16
sub
cmp
int3
inc
cmc
inc
sub
cwtl
ret
loopne
shl
and
jl
adc
add
mov
or
iret
aas
fmull
push
cwtl
and
hlt
sub
or
mov
dec
push
mov
jg
xchg
jb
xchg
ljmp
sbb
jno
sbb
in
lret
cmp
pop
inc
in
cmc
xor
sub
rorl
sub
push
and
mov
sbb
inc
lock
rcrl
or
sarl
or
js
addl
movsl
mov
aad
nop
in
mov
sub
arpl
pushf
cmp
push
in
adc
sbbl
pop
pop
mov
and
or
push
and
cmp
xchg
nop
mov
push
mov
in
ror
pop
xor
sbb
mov
cli
pop
and
nop
lds
inc
xchg
cmp
sub
or
loopne
std
incl
test
imull
mov
xor
mov
jnp
call
jb
add
out
mov
mov
mov
inc
xor
sti
in
aas
sbb
loopne
andl
std
jo
sub
cmp
mov
aam
mov
and
jns
imul
push
jmp
jns
call
sbb
popf
leave
insb
ret
int3
cmpsb
fnstenv
dec
rcll
test
push
cltd
fwait
cmp
and
jae
sub
mov
xchg
mov
roll
push
inc
mov
ret
fs
dec
repnz
jge
je
repnz
and
fbstp
push
cmp
mov
ja
or
push
sub
mov
ljmp
mov
std
fisttps
popa
mov
mov
cwtl
pop
xorl
mov
jl
jne
loope
sub
sti
sbb
xchg
js
dec
dec
jge
inc
adc
enter
mov
inc
ds
push
in
adc
jns
inc
jb
push
cmp
loope
or
push
or
stc
out
fs
call
sti
and
cmc
pop
rorb
int3
cmp
mov
jl
aam
push
or
dec
xchg
inc
jne
ret
aad
clc
mov
call
mov
and
adc
push
sub
test
and
and
pushf
cs
lcall
push
dec
andb
pop
ret
int
cwtl
ret
mov
mov
mov
xchg
cltd
or
aaa
push
ljmp
popa
fstp
inc
movsb
pop
rclb
in
in
and
push
out
aas
push
xor
adc
pop
sbb
or
leave
es
scas
outsb
jae
dec
setne
mov
or
fstl
dec
sbb
popa
pop
xor
cmp
mov
adc
push
pop
fwait
push
icebp
mov
loopne
fwait
lock
mov
aas
sarb
jl
dec
xchg
popa
pop
jo
insl
daa
test
push
ss
imul
mov
jmp
testl
and
add
mov
xor
and
push
dec
enter
jne
aas
mov
jmp
out
xor
std
cmp
fidivrs
cwtl
out
pop
push
sbb
loop
xchg
cmpsb
add
mov
scas
xlat
add
shrb
dec
add
es
insb
pop
jge
jge
push
mov
xchg
repnz
adc
call
vpmacssdd
leave
sbb
lcall
mov
dec
dec
in
push
nop
testl
adc
popf
pop
and
xchg
jae
incl
repnz
fnstcw
cmpl
or
pop
imul
fs
xchg
pop
daa
gs
test
add
cmc
push
xchg
pop
jae
mov
push
xchg
enter
push
mov
mov
and
mov
fcoml
jo
shll
sbb
mov
push
sub
iret
xchg
dec
and
xchg
cmp
jecxz
mov
out
in
cmp
push
and
jno
out
xchg
lcall
es
jle
adc
push
mov
mov
xchg
fidivs
fsubs
imul
adc
mov
pop
js
sub
aas
rcr
mov
fnstsw
dec
mov
push
push
aaa
push
lahf
mov
ret
scas
mov
mov
aas
inc
sti
xor
cltd
xlat
jl
lock
arpl
mov
icebp
call
xchg
test
jecxz
stos
fwait
jns
mov
dec
iret
jge
or
data16
sub
or
fldt
insl
and
repz
adc
pop
inc
cmc
pop
pop
jmp
add
push
lret
das
cli
cmp
fwait
into
aaa
pop
sub
int
mov
fpatan
clc
add
add
out
xchg
mov
sub
cmp
and
test
lahf
xchg
loop,pn
out
icebp
les
or
inc
push
pop
fs
fs
cld
adc
idiv
out
js
iret
push
mov
rorl
pop
sbb
or
sub
inc
dec
push
push
daa
pop
dec
dec
scas
shlb
mov
mov
and
popa
adc
mov
adc
add
popf
mov
pusha
loopne
clc
ret
aad
sti
ret
push
in
sub
mov
and
lcall
addr16
dec
sub
andw
pop
jecxz
and
jno
ret
pop
pop
pop
cld
data16
into
cmp
ljmp
pop
pop
rorl
jbe
insl
fidivrs
push
jmp
push
xor
int3
sub
lcall
add
cwtl
cli
jg
cmc
scas
push
mov
xlat
add
arpl
pushf
cmc
shl
jo
push
repz
xor
and
xchg
ret
fistpl
or
mov
enter
ficomps
xor
ficompl
xorl
pop
clc
addr16
iret
add
addl
iret
jns
pop
cmp
dec
pop
or
in
mov
movsb
xchg
pop
imul
jle
add
dec
std
add
int
xchg
pop
jg
pop
outsl
xlat
stc
adc
fldt
jae
mov
push
jb
repz
mov
movsl
call
or
sub
pushf
lret
ss
mov
daa
inc
lea
lret
clc
and
xlat
scas
inc
ret
outsb
mov
and
adc
pop
dec
mov
fmul
lahf
in
in
pop
lcall
mov
pushf
push
inc
in
pushw
cmp
jnp
mov
dec
ret
out
jb
mov
in
xor
icebp
xchg
mov
xor
jge
mov
sti
movsb
imul
xchg
xchg
cmpsl
dec
mov
xchg
jecxz
lret
mov
imul
in
icebp
mov
inc
ficompl
fidivrl
rcrl
and
aaa
and
pop
xchg
aam
iret
leave
mov
pop
div
pop
js
out
movsb
cltd
jg
jns
cli
jl
notl
push
xorl
push
mov
mov
pushl
shll
and
out
outsb
js
sti
pop
mov
leave
out
lcall
ror
mov
ljmp
or
xor
icebp
gs
pop
dec
and
pop
pop
inc
jne
mov
mov
clc
mov
mov
xor
aad
stc
jne
mov
pop
or
std
xchg
xor
test
push
inc
leave
sbb
test
imul
pop
hlt
leave
mov
sti
push
xor
lret
adc
pop
push
in
in
je
mov
mov
hlt
sub
mov
pop
insl
jge
mov
or
dec
bound
mov
aam
das
test
decb
add
orb
xchg
mov
hlt
cmp
loope
jnp
and
inc
adc
or
sub
add
jp
cmpsb
addb
sbb
jno,pn
mov
mov
cmp
rcll
mov
stos
bound
rolb
test
adc
sub
push
pop
cwtl
pop
ficompl
and
dec
push
lods
xorl
xor
test
mov
jp
xchg
adc
cmp
mov
sti
pushf
pop
pushf
lock
and
test
loopne
add
jge
dec
stos
cmpsb
or
movsl
or
cmp
sbb
hlt
cmp
push
lret
mov
jmp
cmp
ljmp
sub
ljmp
inc
or
scas
aaa
iret
repz
pop
aas
push
mov
call
stc
je
cmpsl
shlb
xor
rorl
mov
xlat
jle
dec
mov
sbb
dec
or
or
repnz
jmp
out
hlt
cmp
or
repz
inc
clc
mov
adc
xchg
dec
mov
repnz
mov
imul
adc
fadds
bound
jne
fincstp
mov
test
mov
cmp
sbb
or
movsl
pusha
mov
pushf
clc
aam
add
repnz
jecxz
push
jno
mov
jo
rcl
add
adc
gs
cmp
int
cld
mov
mov
sbb
lea
jno
push
or
cld
mov
mov
sahf
aaa
mov
adcl
adc
jno
add
icebp
out
fwait
les
push
xchg
aaa
mov
push
cmp
insl
sbb
inc
mov
pop
inc
xor
mov
div
push
cwtl
movsb
cmpsl
aas
ret
into
lcall
fbld
mov
movsb
cmp
mov
movsb
call
jmp
xchg
loopne
mov
inc
adc
push
lea
or
push
pop
cmp
movsl
push
adc
and
loope
adc
fstps
rolb
pushf
cwtl
popa
cwtl
mov
in
mov
int
mov
sti
jns
sub
lds
pop
out
test
add
cld
addl
mov
sub
ja
adc
mov
movsl
jbe
addb
mov
pop
int
adc
mov
jnp
pop
push
pop
dec
in
outsl
sub
adc
jge
xchg
push
aad
sub
loopne
cmpsb
xor
xchg
mov
test
out
cmp
mov
ljmp
or
sbb
stos
push
dec
mov
testb
mov
xchg
pop
fdivp
cmp
cld
sub
or
add
cmpb
insl
icebp
mov
popf
push
dec
adc
push
xchg
jb
cwtl
loope
jge
jmp
fs
sub
jb
mov
or
lods
movsl
xchg
xchg
mov
jg
out
aas
shr
aam
fcompl
pushw
dec
lret
cmp
sahf
repnz
lahf
sbb
xor
sbb
test
loop
mov
sbbl
inc
cmp
push
or
mov
pop
fbstp
xor
xlat
rclb
xchg
mov
aam
xchg
out
pop
xor
sub
fildl
dec
and
jp
loop
inc
xlat
and
cmp
stos
sahf
rcrl
popf
addr16
sahf
mov
mov
outsl
mov
mov
popl
inc
out
mov
or
lea
inc
sbb
xor
ret
in
out
cmp
jns
sub
pushl
pusha
ds
mov
inc
fldcw
mov
jns
mov
pop
pop
in
jle
ja
cmp
in
lret
ds
adc
inc
push
pop
push
cmp
in
push
dec
test
or
mov
cmpsb
inc
fists
pop
insb
mov
lods
das
and
adc
inc
clc
divb
outsb
data16
cwtl
lahf
mov
pop
and
pop
lds
push
in
xor
mov
test
and
dec
aad
inc
mov
cmp
sub
frstor
sbb
testl
ret
ret
mov
sbb
ss
movsb
in
pop
and
jmp
push
lds
in
lock
xorl
rcrb
sub
xorl
add
jmp
xlat
incb
jg
enter
mov
mov
ds
testb
push
push
test
fs
hlt
rolb
stos
pop
out
mov
popa
mov
xor
sbb
adc
mov
xchg
jl
hlt
xor
in
adc
ret
xlat
jnp
mov
imul
cmpsl
add
lcall
xor
sub
data16
cs
xlat
lret
sahf
jne
psadbw
int
push
repnz
rorb
adc
aad
push
arpl
push
bound
fisubs
data16
leave
jle
cmpsb
xchg
push
insb
inc
ret
push
mov
xor
push
add
or
popa
jno
and
xchg
jl
push
out
xchg
jmp
xchg
xchg
notb
mov
cmp
jecxz
lock
inc
add
inc
jp
negl
repnz
cmp
inc
inc
and
xchg
mov
ficompl
jno
andl
mov
adc
and
aad
xchg
pop
stos
pusha
adc
ss
pop
or
jmp
pusha
sub
push
xor
sub
sahf
inc
and
push
pop
inc
inc
daa
popf
enter
cwtl
mov
shrb
jge
ss
cs
mov
or
stc
addl
mov
jb
xchg
fidivs
sub
and
fdivs
mov
cltd
mov
insb
sahf
jl
scas
push
xchg
out
jo
in
jo
pop
sbbl
dec
sahf
ds
rcrl
push
shl
xor
mov
insl
cwtl
std
fadds
stc
dec
jne
insb
out
decb
pop
xlat
out
sub
xor
sbb
dec
fnstcw
notb
je
dec
bound
adc
scas
adc
mov
sbb
outsb
xor
arpl
cmp
push
xchg
scas
mov
pop
imul
push
jmp
xor
es
and
xor
fdivrl
js
jbe
xchg
mov
mov
sbb
in
cli
andb
sub
pusha
sarl
cs
inc
jmp
mov
xor
mov
xchg
popa
sbb
mov
outsl
lds
setge
or
enter
incb
sub
dec
movsl
sbb
inc
repnz
adc
add
inc
ret
es
arpl
iret
cmc
sub
lock
pop
inc
mov
xchg
push
pushf
cli
mov
fcomps
jnp
shrb
movsl
js
aaa
mov
scas
mov
mov
popa
mov
fstpl
enter
push
ret
push
pop
loope
incl
and
fldl
sbb
sub
jo
sbb
push
adc
test
das
out
test
add
inc
cli
test
movb
test
xor
lods
ret
dec
fmuls
inc
adc
jecxz
xchg
mov
mov
jae
add
test
adc
sbb
mov
cmpsl
mov
bswap
jb
test
fwait
int
or
icebp
inc
adc
add
mov
jl
cli
testl
adc
lea
jg
xchg
call
shlb
adc
mov
int3
dec
jns
sbb
adc
lds
div
test
or
test
inc
mov
push
dec
out
lds
pand
dec
mov
imul
xchg
stc
mov
lods
or
mov
pusha
jp
mull
fnstsw
pushf
cmp
jge
mov
xchg
sbb
mov
push
jg
push
shll
cmpsl
adc
pop
pushl
cmp
aaa
push
and
push
lds
loope
gs
xchg
fwait
xchg
dec
stos
les
lds
lret
mov
pop
or
inc
push
add
jbe
fstpl
cmp
in
fisttpl
mov
mov
mov
sbb
addb
mov
xchg
xchg
cltd
addr16
or
cltd
dec
pop
mov
cld
lea
addr16
pop
pop
sub
cmp
add
jp
mov
dec
cmp
repnz
test
jns
jecxz
mov
push
adc
adc
aaa
mov
hlt
je
lcall
ret
pop
mov
std
push
and
sub
jecxz
pop
addr16
fadd
jno
daa
sbb
jnp
inc
mov
jns
jo
in
leave
adc
test
scas
or
jnp
inc
pop
jbe
and
addr16
mov
aaa
cs
les
outsb
iret
and
sub
jo
adc
or
mov
arpl
push
bound
imulb
xchg
je
xorb
in
outsl
xor
sub
imul
mov
dec
cmpsl
ret
inc
fisttps
cmp
mov
mov
mull
lret
push
int
loopne
pop
fildl
cmp
jmp
out
jg
mov
xorb
add
lret
mov
rorl
push
repnz
sub
or
mov
mov
mov
add
mov
insb
fcmovne
int
sbb
add
mov
mov
call
xor
loop
xchg
jmp
cld
js
xchg
sbbb
repz
cltd
sbb
xchg
sub
adc
out
inc
xchg
sbb
pop
bnd
sub
pop
inc
notb
ret
dec
pusha
xchg
in
push
xchg
iret
inc
dec
lcall
ds
popf
outsl
fstpl
xor
and
cmpl
outsl
and
sbb
xchg
cmp
imul
loop
push
pop
dec
aad
clc
jmp
cmp
push
stos
cmp
pusha
movsl
push
pop
aaa
xor
fnstcw
mov
movsl
adc
sbb
repnz
ret
ds
les
add
push
push
loopne
outsl
jp
mov
popf
dec
gs
fs
call
push
push
push
jbe
shrl
pop
push
xchg
adcl
outsl
mov
fmuls
adc
xor
gs
dec
and
push
fwait
das
loop
dec
addr16
mov
xor
fwait
mul
mov
fstpt
dec
das
fldenv
xchg
pop
dec
lods
jp
and
pusha
jg
scas
loop
xchg
mov
test
sahf
cmp
pop
mov
mov
mov
xor
out
jmp
pop
js
sbb
int3
or
inc
lret
out
sti
ret
fiadds
ja
push
fcompl
in
mov
pop
enter
adc
mov
mov
jle
ret
js
mov
sti
cld
test
roll
jns
cmpsb
dec
sub
inc
movsl
mov
in
test
in
add
fcmovnu
mov
push
push
jne
jp
dec
pop
fstpl
lahf
mov
loope
or
rclb
and
lahf
aas
fidivl
push
dec
pop
sub
sarb
xor
cltd
cmp
lods
popa
in
xchg
pop
cwtl
aaa
iret
xor
in
les
mov
stos
pop
icebp
xor
and
sbb
or
and
dec
mov
xlat
int
jmp
sbb
or
push
clc
loop
inc
scas
out
inc
sbbl
xor
sub
xlat
outsl
int
and
push
or
xor
adc
or
ja
push
jmp
mov
sub
mov
jle
inc
stos
xchg
iret
pusha
scas
mov
subb
cmpsl
lret
push
sub
fisubs
pop
lcall
mov
dec
fdivs
jns
jl
and
xor
jle
bound
sub
adc
jns
orl
and
mov
cmp
addr16
int
or
test
punpckhbw
ss
adc
je
mov
inc
push
inc
fisubrs
rcll
imul
cmpb
dec
movsb
cwtl
mov
les
xor
hlt
das
cmpsb
xor
test
mov
xchg
jo
sbb
test
addb
jl
icebp
xchg
fdivrl
pop
bound
cli
fildll
mov
repnz
push
ds
and
enter
adc
mov
xlat
movsl
repnz
adc
int3
in
cmc
mov
scas
sub
jo
into
or
mov
or
push
xchg
test
dec
mov
mov
mov
mov
stc
pop
pushl
pop
inc
cwtl
dec
mov
nop
inc
mov
fstpt
adc
out
push
push
sahf
mov
add
dec
scas
icebp
inc
mov
inc
jmp
add
mov
test
std
aas
loopne
adc
divb
and
xchg
outsb
cmpsb
mov
sub
lea
sarb
xorb
sbb
mov
lret
inc
inc
lret
js
int
jns
lock
jmp
jp
loopne
outsb
subb
fnstenv
inc
pop
dec
adc
and
or
push
out
sti
jg
leave
lods
pop
js
and
shrb
sbb
imul
outsl
sbb
xor
arpl
adc
popa
stos
ljmp
cmp
daa
cld
jmp
iret
pushf
pop
and
in
add
cli
sbbb
xchg
sahf
ss
loopne
insl
inc
mov
outsb
rcll
push
jecxz
xchg
arpl
jge
dec
addr16
sub
pop
or
adc
or
xor
or
adc
lahf
outsl
test
bound
pop
subb
pop
jp
inc
movsl
adc
pop
mov
mov
adc
jge
sbb
rorl
add
test
cmp
inc
or
jmp
jecxz
or
mov
mov
push
pop
sbb
push
ror
lea
pusha
add
lret
jns
call
push
lea
stos
jno
push
daa
push
sub
loopne
adc
pushf
mov
pop
pop
mov
sbb
js
cmp
xlat
sti
lods
pop
and
mov
dec
lds
fstpt
dec
dec
add
cmp
add
sbb
sub
insb
jae
in
cmp
mov
call
fwait
or
daa
rcrb
pop
xchg
cmpb
daa
adc
scas
sub
dec
lods
mov
testb
loop
jnp
bound
test
mov
sbb
or
shll
inc
push
les
popa
repz
cmp
mov
hlt
fwait
adc
movsb
insl
inc
and
cmpsl
cmp
es
je
mov
adc
outsb
jae
xchg
sbb
fwait
je
sarb
add
nop
xchg
add
xor
ss
shl
ja
int3
pop
dec
in
out
pop
jae
out
dec
scas
fimuls
jecxz
andb
inc
dec
and
sbbb
shlb
sbb
sbbb
sbb
mov
dec
cltd
stos
fsts
loop
or
mov
add
pop
cmp
push
xor
sbb
xor
or
push
fistpl
arpl
decb
add
xor
jns
jle
push
mov
pop
outsl
mov
fwait
das
mov
subl
mov
mov
dec
inc
pop
push
and
out
mov
test
cltd
daa
add
adc
movsb
in
test
fisubrs
dec
dec
xchg
in
mov
sub
push
cmp
cli
fwait
jp
scas
psubsw
inc
out
call
push
dec
leave
xorb
cmpsl
sub
test
incb
mov
dec
aam
cli
inc
jl
sbb
ja
xor
sub
imul
nop
inc
stos
scas
mov
push
pusha
push
rsqrtps
std
add
pop
pop
cli
inc
mov
pop
test
nop
test
pop
sub
jmp
push
cmp
cmp
pop
mov
cmp
mov
lret
test
mov
lods
sub
rol
cld
xchg
and
mov
mov
nop
xor
sub
pop
inc
mov
fs
mov
and
insb
adc
popa
push
orl
fcmovnu
mov
mov
jl
mov
sub
cmp
push
daa
insl
jnp
cltd
xchg
pop
fwait
in
sbb
inc
xchg
jo
xor
mov
sbb
push
dec
sub
out
adc
cmp
pop
cld
push
enter
xor
mov
filds
add
ja
test
movsb
mov
aad
add
call
xchg
in
mov
sub
bound
xor
iret
mov
loope
cltd
adc
xchg
push
decl
aad
fdiv
enter
xlat
add
cltd
and
xchg
and
pop
mov
pop
je
xchg
cmp
pop
cmp
or
adc
and
mov
clc
test
push
pop
inc
pop
inc
ss
jae
push
jbe,pt
insb
jecxz
pop
cmc
push
pop
out
iret
rcrl
xchg
aaa
xchg
add
xchg
dec
nop
ja
push
jae
xor
jecxz
scas
flds
sbb
rcll
sbb
push
fsubrs
inc
sahf
stos
push
jnp
adc
pop
mov
mov
mov
or
ret
mov
jb
test
dec
out
adc
mov
cli
xor
push
cmc
mov
sbb
lods
shlb
and
in
loopne
shll
imul
xchg
mov
mov
cmc
xor
mov
std
or
jbe
add
imul
mov
mov
js
fdiv
imul
enter
lds
xchg
insb
jg
mov
fistl
lret
sub
insl
inc
into
es
pop
aad
mov
fwait
cmp
cmp
mov
jae
dec
call
add
add
cmpsb
cmp
call
and
int3
push
dec
sahf
adc
stc
lods
adc
inc
shrl
scas
cmp
push
fmul
and
cld
mov
xchg
dec
jl
popf
mov
jae
and
or
mov
ja
push
inc
inc
sbb
pop
fwait
pop
stos
jge
jecxz
cli
test
mov
fnstsw
or
mov
sub
js
mov
xor
mov
xor
xor
cld
xchg
jbe
cli
mov
cmp
push
inc
test
fcmovbe
rolb
xor
inc
nop
jne
inc
xchg
loop
test
div
test
popa
popl
in
xor
stc
fwait
out
xsaveopt
push
mov
inc
into
sub
add
mov
out
sbb
int
inc
notl
testb
or
mov
sub
inc
jecxz
shl
dec
mov
mov
mov
test
pop
xchg
out
adcl
cmc
or
mov
test
sbb
in
xchg
ret
mov
jae
dec
dec
in
rolb
cmp
and
ja
pop
pop
in
out
mov
arpl
scas
in
in
into
mov
arpl
fsub
bound
lcall
cmp
and
inc
sub
cmp
mov
push
and
imul
mov
add
mov
outsl
daa
dec
test
sti
cld
cmovne
push
pushf
in
in
mov
cmpsl
lods
inc
es
sti
jns
sbb
dec
push
test
or
sbb
sbb
jb
add
std
int
mov
jge
incb
adc
daa
adc
mov
es
jb
sbbb
xor
adc
testl
int
jle
xor
add
cs
frstor
push
loop
mov
push
add
cmpsl
in
mov
adc
js
mov
and
jl
data16
inc
sbb
fcompl
std
and
or
nop
mov
jge
les
sub
hlt
orb
test
lock
fwait
notb
cli
insl
xchg
shrb
shlb
sbb
jb
sarb
dec
test
push
sub
int3
adc
dec
inc
leave
int3
sub
stc
std
dec
popf
dec
cmp
adc
xor
out
or
ja
push
pushf
dec
or
inc
test
mov
flds
lcall
xor
sbb
push
dec
xor
push
in
je
mov
jns
iret
lcall
cwtl
cltd
mov
and
loopne
lcall
scas
hlt
scas
cmp
ficoms
mov
xor
test
mov
pop
xor
out
test
sbb
frstor
push
movl
ja
push
roll
fptan
inc
cmp
ret
and
adc
cmp
movsb
and
sbb
outsb
sbbb
ja
out
mov
pusha
push
lahf
mov
pop
jmp
pusha
mov
outsb
aaa
xor
add
pop
icebp
loop
add
xor
in
dec
lret
and
orl
std
ret
popa
loopne
dec
cmpsl
xchg
lcall
movsb
jp
stos
and
push
mov
aad
aaa
ds
xchg
and
ss
cld
jecxz
jns
push
aad
scas
push
mov
xchg
jp
int3
movsb
jno
outsl
xlat
cmp
pop
lret
fldt
test
cmp
xor
in
sbb
sub
popa
mov
sbb
mov
shll
out
sub
outsb
stos
call
outsl
cmp
pop
inc
outsb
fs
packssdw
rcrl
adc
pusha
clc
stos
addr16
sbb
ds
pop
cli
je
jnp
inc
pusha
xchg
xchg
cmp
ds
icebp
xlat
sub
mov
mov
ret
push
mov
insl
mov
aad
sbb
in
movsb
fdivr
lcall
sahf
rclb
mov
mov
pop
leave
scas
pop
adc
inc
std
xchg
mov
dec
adc
mov
ss
xor
pop
cmp
jecxz
inc
loop
jno
test
cmp
fs
fwait
sti
pusha
fdivs
xor
pop
scas
dec
call
xor
int
pop
add
in
iret
hlt
imul
je
xor
pop
dec
jge
mov
iret
or
into
xor
inc
mov
push
ljmp
jmp
mov
sub
pop
lret
and
inc
mov
xchg
mov
scas
mov
test
sub
testb
insb
movsb
cmp
push
and
das
sahf
inc
jmp
push
ja
stos
rcll
cld
ret
and
dec
fwait
lret
xchg
pop
cli
or
ficoml
jb
cmpsb
xor
cmpsb
add
ret
xor
cmp
mov
mov
mov
mov
loope
cmc
aaa
dec
push
aaa
cmpsl
pop
sub
mov
mov
daa
push
insb
jecxz
push
scas
fsincos
pop
jne
inc
and
jne
loope
push
das
iret
sbb
fsubs
mov
xchg
add
outsb
and
inc
xchg
jno
sbb
aam
test
fwait
push
jge
orl
mov
pop
cli
pusha
pop
pop
loop
sbb
sbb
push
jne
and
fnsave
and
test
lahf
xchg
jmp
pusha
sub
and
ret
mov
pop
iret
stc
icebp
lcall
stc
pop
push
cld
push
test
rcll
inc
hlt
lret
pop
mov
ds
es
inc
pushf
stos
leave
inc
into
pusha
pop
lahf
enter
jo
les
xlat
inc
leave
cli
lret
or
mov
push
mov
das
mov
out
inc
push
mov
clc
les
adcl
lret
push
fistps
sbb
divl
push
inc
mov
jo
inc
dec
jbe
xchg
popa
fsubrl
mov
adc
jl
mov
daa
das
popa
push
outsl
mov
xor
push
scas
mov
shrb
sub
add
ret
cld
xchg
lcall
mov
sub
pop
dec
stos
ds
xor
xchg
sub
stos
addl
mov
lea
adc
push
mov
dec
ja
mov
xor
pop
in
dec
pusha
stc
sub
jno
lret
mov
insl
rorb
cmp
jle
cli
lods
mov
mov
mov
leave
notl
enter
adc
js
xchg
fcompl
jne
and
xor
adc
mov
cmpsb
pop
in
in
push
xor
jo
rol
ljmp
push
mov
imul
mov
pusha
inc
cmp
push
ljmp
mov
daa
pop
push
mov
mov
xor
ret
pop
es
movsl
subl
ss
insl
sub
sub
out
xchg
or
gs
xor
mov
fwait
lcall
test
fmul
icebp
xor
cs
xor
aam
mov
test
loop
cmp
icebp
sbb
enter
ss
cld
jb
and
sbb
ss
aas
xchg
xor
das
cmp
ret
ja
jns
push
push
rclb
sbb
jnp
push
aaa
xchg
xor
cli
pop
jecxz
mov
jle
outsl
aad
sub
push
aaa
pop
and
shlb
push
add
sbb
mov
and
or
jle
and
pop
sub
add
test
sbbl
dec
test
ja
shl
jns
pop
fsubs
cmp
adcb
fsubr
testl
mov
and
and
pop
fildl
pop
xlat
xchg
enter
push
jg
push
cmp
mov
adc
xchg
xor
scas
pop
sbb
hlt
aam
ljmp
out
jne
mov
pushf
add
xor
mov
fimuls
movsb
fstpt
lcall
mov
lods
and
insl
out
jge
and
add
int
mov
jg
sbb
aaa
pop
dec
xor
dec
sub
jl
sbb
nop
push
movsl
das
cmp
decb
add
adc
push
lea
and
xchg
xlat
aas
cmp
fists
add
addl
ss
jnp
dec
test
and
outsb
out
into
scas
xor
mov
stos
push
cltd
in
xor
mov
inc
imul
push
fistps
enter
cli
xchg
out
xchg
xor
jb
pop
or
mov
out
mov
jl
mov
or
push
aad
pop
add
push
jge
fimuls
add
iret
sbb
shrl
pop
fistpl
lds
xor
mov
fwait
dec
mov
inc
jae
sub
shr
lahf
add
mov
dec
negb
jp
mov
sbb
mov
jmp
jle
sbb
mov
and
push
mov
fbstp
mov
mov
retw
add
dec
push
imul
mov
out
sub
cmpsb
mov
and
loope
addr16
jl
jp
stos
je
and
xchg
pop
mov
pop
xor
stc
xchg
nop
sarl
js
cmpsb
dec
call
dec
outsl
xor
sarl
pop
fnsave
pushf
dec
pop
aas
in
call
stos
xchg
seto
mov
fsubrs
jmp
dec
sub
and
xor
cmp
jl
mov
ss
outsb
inc
pop
fs
push
and
clc
and
sub
jecxz
dec
cmp
pusha
or
jl
jl
xor
cmp
xchg
push
into
out
adc
sti
jl
xor
addb
test
aad
push
clc
in
jl
pop
add
mov
mov
fcomps
cmp
cmp
repnz
push
or
sbb
mov
fbstp
dec
or
inc
or
aas
leave
mov
test
pop
aas
xchg
insb
das
out
jo
pusha
add
out
jnp
xchg
call
fimuls
enter
lea
outsl
mov
sub
aam
pop
adc
mov
xorb
adcb
cld
fistpl
sub
jl
cmp
and
mov
pop
ds
aaa
pop
dec
xchg
arpl
lods
lret
and
mov
das
sub
movsl
fcomip
cld
dec
cs
mov
psllw
fbld
sub
aas
test
rorl
dec
push
xlat
mov
mov
mov
das
std
sbb
mov
push
out
cmp
popa
rcll
push
jno
shll
or
fisttps
add
or
sbb
and
dec
stos
in
mov
dec
cmpsl
rcrb
test
mov
mov
psubq
mov
push
or
cwtl
insb
mov
push
pop
mov
out
gs
lret
mov
push
pushf
bnd
and
sbb
cmp
popf
mov
mov
and
int
and
aas
cmp
and
push
int3
aam
out
cs
aad
push
rorl
int
mov
fldt
jg
cmp
mov
out
or
or
sub
pop
mov
and
push
imul
hlt
dec
xor
mov
popf
js
fisttps
js
outsb
sbbb
push
fmul
lret
xchg
mull
in
lret
xor
adc
pop
inc
pop
jp
into
leave
mov
popa
movsl
sub
cmp
xor
xchg
fs
fisubl
sub
mov
stc
in
enter
mov
dec
rclb
aas
mov
or
mov
mov
jnp
xlat
jne
add
jmp
jbe
iret
aam
out
jns
and
cmp
faddp
lret
pop
pop
int3
or
xlat
xor
pop
cs
mov
pop
xor
inc
fisttps
or
xor
aad
lds
cwtl
pop
cmc
mov
in
mov
cs
sarb
inc
aaa
xchg
push
xchg
fdivl
mov
pop
icebp
test
mov
shl
or
fwait
clc
std
rolb
mov
scas
out
pop
push
test
xchg
outsb
lods
les
mov
xor
push
sub
push
inc
shl
test
xor
test
mov
inc
aas
push
aad
cmp
xchg
jno
mov
mov
repz
jmp
in
lret
aam
and
gs
dec
xchg
addl
inc
pushl
sub
xchg
es
push
sub
inc
cwtl
rolb
mov
mov
xchg
push
cmp
or
xchg
or
idiv
push
adc
in
hlt
aas
negb
std
addb
sub
stos
imul
pop
subb
jnp
mov
pop
mov
jmp
adcl
iret
dec
loope
fisttpl
adc
pop
bound
mov
scas
and
jbe
lods
enter
or
cltd
xor
sbb
ret
adc
iret
in
add
call
adc
sahf
cli
hlt
pop
imul
push
std
lds
into
push
out
sub
scas
loopne
mov
mov
mov
imul
idiv
fistpll
xchg
imul
and
pop
jg
lea
sub
jg
stc
xchg
push
out
jbe
sbb
popf
mov
push
mov
jne
adc
cltd
mov
adc
sahf
mov
mov
scas
mov
dec
stc
mov
jns
stos
jno
inc
dec
out
and
xor
das
and
pop
push
movsb
mov
fsubrs
jae
xor
mov
je
sub
pop
js
adc
in
mov
data16
dec
out
test
mov
bound
insb
notl
mov
cmc
inc
lds
cmp
push
aam
iret
sbb
jge
addr16
enter
rorb
aaa
mov
fcomi
mov
sbb
xor
lea
mov
icebp
movsl
jb
cmp
lret
push
ret
aaa
jle
jp
gs
fidivrs
mov
jnp
add
pop
data16
pop
add
mov
jne
jae
movsl
jg
ljmp
dec
ja
cmc
jb
lods
nop
mov
push
rcl
lds
iret
pop
xor
mov
or
xchg
out
cmp
lds
lcall
dec
scas
fwait
dec
das
cmp
or
xchg
jb
lods
sub
xlat
jp
insb
inc
push
enter
xchg
push
push
std
rcl
in
xchg
stos
fiaddl
adc
jecxz
sub
aad
shrb
xchg
mov
bound
subl
clc
imul
subb
out
gs
inc
xor
ret
addr16
mov
mov
mov
sbb
add
jne
push
outsb
movzbl
pop
fucompp
lods
daa
shrb
lret
jb
dec
bnd
push
cmp
fsubp
xchg
and
sub
xor
xlat
mov
mov
cmpsl
jns
and
mov
out
pushf
in
arpl
or
fadds
adc
int
in
dec
adc
scas
push
xchg
movsb
cmp
outsl
gs
stc
lahf
daa
pop
cltd
jne
clc
inc
sbb
jns
dec
or
or
fcom
push
add
hlt
mov
popa
dec
aad
rclb
or
xchg
inc
sbb
pop
xchg
jg
out
addr16
scas
xor
adc
dec
mov
mov
popf
adc
dec
and
fs
jns
leave
push
enter
out
out
sub
repz
btc
or
add
mov
sarl
idiv
mov
pop
push
aad
test
pushf
add
scas
scas
in
jmp
fimuls
fimuls
add
add
inc
or
add
in
inc
xchg
jmp
jnp
jg
fidivs
cmpl
fdivrp
jb
add
into
std
scas
lock
dec
mov
insl
loope
aas
lahf
fnstcw
shrl
mov
fsubp
cmp
pop
jp
xor
out
or
and
scas
cltd
movsl
scas
cli
cmc
mov
ljmp
ss
jecxz
adc
cmp
jo
add
cmp
jge
xchg
filds
jmp
xchg
jg
out
mov
loope,pn
and
aaa
into
dec
push
xor
add
mov
stc
xor
nop
out
fistpl
xchg
insl
mov
lcall
xor
push
xlat
ljmp
xor
and
jmp
out
in
sbb
and
jg
and
mov
and
cs
fimull
rolb
xchg
inc
pop
fsubrl
and
popl
sub
data16
shl
xor
movaps
scas
or
inc
sbbl
mov
fsts
sti
leave
inc
sub
faddp
pop
mov
shr
les
mov
lret
test
mov
cmp
stos
enter
pop
adc
xchg
sub
dec
dec
xchg
testl
fcomps
sbb
push
lods
mov
jbe
ret
int3
loope
push
and
jmp
jbe
xchg
int3
dec
popf
jb
retw
cmc
testl
adc
jp
scas
or
xor
push
pop
pop
frstor
inc
in
sbb
clc
mov
fisttpl
cmp
adc
mov
jg
cmp
xchg
test
subl
jle
sarb
mov
pop
jne
xor
outsb
cmp
dec
mov
movsw
mov
push
add
push
xchg
subb
jo
popf
cli
mov
movsl
sarl
imul
xor
pop
lret
and
in
lds
ljmp
xchg
je
mov
addl
repz
insb
push
sbb
push
push
mov
pop
inc
mov
and
mov
ret
mov
int
lods
sbb
mov
fwait
xchg
das
mov
push
jbe
sti
push
or
jmp
xchg
stos
mov
xchg
and
es
lea
sbb
jge
js
pop
jo
test
in
jbe
mov
daa
test
andl
mov
fnsave
adc
ds
xchg
fiadds
xchg
shl
pushf
pushf
pop
gs
push
sub
mov
push
outsb
inc
dec
enter
stos
mov
push
xchg
es
in
add
adc
call
cmp
ss
cmp
cmp
test
cltd
ja
sbb
sbb
lds
xor
sti
sbb
xor
popf
mov
mov
mov
inc
dec
sub
sbb
push
rorb
test
leave
icebp
mov
sbb
sahf
inc
xor
aas
jnp
call
daa
test
add
int3
inc
fiaddl
lods
mov
mov
pop
add
daa
fsubrl
out
imul
dec
or
adc
xor
int3
push
ret
jmp
lret
mov
xchg
mov
loope
pop
add
lods
adc
xor
imulb
jg,pn
sbbl
mov
pop
sub
sbb
dec
cmpsb
or
jb
shr
mov
mov
and
cld
les
jns
clc
cwtl
cmpsb
push
push
sbb
lcall
adc
scas
push
bound
test
repz
jbe
or
pop
insb
fdiv
pop
pop
or
outsb
inc
mov
flds
cmp
gs
insb
pop
cmp
pop
enter
ret
sahf
push
dec
sbb
and
xchg
outsb
inc
jae
add
and
jecxz
xchg
inc
fmull
adc
pushf
int3
push
sbb
pushf
add
lock
pusha
arpl
mov
ret
ret
scas
push
mov
jmp
scas
dec
push
or
cmp
inc
cmpsl
mov
or
or
mov
icebp
into
xlat
int
sub
add
pop
push
cwtl
aad
xor
xchg
lret
mov
loope
pop
xorl
fidivs
inc
xchg
mov
sti
popf
mov
inc
xlat
data16
jge
mov
aaa
and
imul
mov
aam
js
adc
mov
jo
arpl
mov
or
mov
cmp
and
shrb
dec
cmpl
cli
jle
out
mov
pop
sahf
or
xor
popa
fsts
jmp
aad
pushf
or
xor
xchg
testb
xor
dec
xor
mov
outsl
inc
nop
adc
sbb
ja
mov
xchg
jp
pop
jae
jp
and
mov
or
das
cmp
scas
pop
pop
lret
jmp
daa
icebp
int
and
mov
arpl
cmp
es
inc
cmp
mov
sti
inc
loopne
inc
in
jl
fldl
xlat
test
xor
cmp
fisubs
push
pop
pop
push
jbe
gs
cmpsl
add
cmc
pop
push
jle
fisubs
and
dec
ljmp
or
mov
add
mov
mov
or
mov
lret
mov
roll
adc
mov
pop
lock
and
pop
mov
jne
add
out
dec
or
addb
dec
pop
jo
dec
sbb
push
call
pop
pop
mov
clc
pop
push
mov
neg
xchg
out
adc
add
jo
ret
pop
or
jns
cmpsb
push
aam
pop
orb
pshufw
or
xchg
aam
mov
pop
rclb
sub
mov
scas
pop
test
push
loope
xchg
es
adc
mov
das
xchg
and
and
cltd
mov
mov
cmpb
popf
push
lahf
push
pop
xlat
shll
clc
adc
in
sbb
repnz
jp
out
inc
inc
loop
inc
movsl
xor
andl
mov
add
adcb
inc
pop
or
mov
jb
pop
lea
ret
jp
pop
pusha
mov
imul
or
mov
ds
xor
sub
inc
loop
mov
or
jmp
js
mov
mov
xchg
xor
aam
push
ljmp
or
movsb
leave
les
mov
sub
adc
mov
stos
lcall
mov
mov
insl
mov
adc
mov
js
add
add
inc
inc
mov
shl
aaa
dec
jo
cmp
xchg
stc
jg
lcall
jle
or
pop
or
mov
inc
cmc
push
xchg
mov
and
dec
loope
test
mov
fcmovne
push
mov
sub
mov
sub
fisttps
stc
aaa
adc
and
fiadds
mov
std
sbb
adc
pop
sub
je
mov
push
inc
icebp
push
add
dec
cmpsl
loop
dec
cwtl
add
mov
jae
dec
mov
lods
lret
ljmp
in
xchg
push
xchg
pop
cmpsl
sbb
mov
fnstcw
mov
dec
aam
lods
pop
xchg
mov
hlt
cltd
cmp
shrb
pop
mov
add
inc
xchg
xchg
stc
lret
data16
addr16
insl
sub
sti
push
fcomps
cmp
sti
xor
std
or
in
xor
mov
sbbl
popa
mov
jmp
pop
inc
lods
add
sahf
xchg
push
pop
out
in
mov
ret
cmp
test
mov
xchg
or
arpl
jge
test
lret
cmp
inc
sub
add
test
jle
insl
xor
lds
pop
sub
mov
inc
dec
jle
fnstenv
mov
mov
sahf
sti
and
ret
jb
ret
add
sbb
mov
pop
cmp
and
push
xor
jmp
sub
lret
aas
or
dec
imul
mov
xchg
xlat
xlat
jnp
es
jnp
rclb
loop
loopne
addl
stos
xor
ds
pop
loopne
xchg
mov
and
call
mov
sbb
add
rclb
cmp
jo
cmp
stos
bnd
gs
sbb
mov
pop
sbb
cmc
inc
movsl
movsl
rcll
cmp
inc
ficompl
dec
adc
dec
xchg
aam
adc
fiadds
sub
adcl
adcl
ret
jp
das
mov
cmp
pop
jno
imul
jo
in
xchg
nop
test
or
pop
push
loope
jle
iret
jno
cmc
mov
mov
jge
and
push
jg,pt
repnz
fs
sbb
jp
lods
arpl
push
aam
jno
stos
lods
scas
inc
push
pop
adc
cmp
sbbb
pop
pop
mov
cmc
push
push
cs
mov
inc
in
paddw
sub
jbe
xor
out
fnstsw
andb
and
out
cmc
or
mov
cltd
mov
jp
dec
fsub
stos
and
xlat
pushf
push
sub
mov
cmp
movsl
mov
pop
sahf
pop
mov
cmp
int3
cmp
or
rcll
jmp
push
mov
mov
jp
pop
jb
icebp
cltd
lods
or
push
xor
jo
cld
insb
fs
mov
ret
mov
bound
or
push
ja
mov
popa
adc
jl
cwtl
pop
scas
imul
pop
fmulp
cmpsl
jo
cld
cmp
mov
add
mov
cmp
pop
fs
das
push
test
mov
mov
gs
jb
xor
sbb
stos
mov
sbb
mov
cmp
sub
out
ljmp
mov
pop
cmp
mov
int
call
inc
xor
rol
icebp
mov
es
jp
or
lahf
stc
xor
lcall
cli
mov
rolb
push
inc
fiadds
xor
out
xchg
ffreep
or
push
loopne
test
insb
adc
cltd
cmp
mov
test
add
xchg
sahf
mov
xchg
adc
dec
scas
jmp
decb
sub
rorl
jnp
mov
repz
scas
pop
and
adc
dec
mov
dec
enter
ret
js
mov
push
popa
mov
fdivs
xchg
inc
push
sbb
cmp
fwait
movsl
mov
xchg
dec
xor
jno
cmp
pop
xchg
inc
repnz
jmp
mov
mov
pop
and
dec
mov
jae
dec
or
dec
mov
mov
aas
ljmp
dec
cmp
int
pop
rolb
xchg
mov
and
mov
or
xchg
ds
pop
fdivrl
push
pop
push
pop
jg
pop
sbbl
lahf
jae
mov
xlat
jnp
out
in
cmc
loop
lcall
jnp
dec
or
and
mov
xchg
pusha
mov
add
pusha
shrb
mov
lds
push
aas
mov
and
mov
clc
cwtl
pop
add
pushf
insb
dec
mov
push
xlat
xchg
cmp
pushf
fwait
adc
ljmp
ret
ja
mov
mov
pop
popa
mov
nop
mov
out
push
mov
aaa
das
lea
in
call
pop
pop
cmp
aad
jge
and
pop
nop
in
idivl
push
sbb
push
lods
push
xchg
push
int
sub
pop
nop
ljmp
in
lods
xor
lea
into
mov
das
jne
add
xchg
sbb
pop
jnp
mov
bnd
call
inc
pop
daa
push
sbb
sahf
in
jge
and
push
add
xchg
push
and
mov
stos
jge
lret
dec
sbb
or
mov
and
add
mov
mov
lahf
or
and
xchg
inc
imul
mov
and
cli
enter
cmp
adc
dec
fstpt
iret
inc
xchg
pop
lds
push
loopne
lods
mov
and
into
insl
dec
sarb
aam
and
pop
jge
out
xlat
jle
and
adc
ljmp
add
adc
scas
or
je
jmp
outsl
xchg
std
das
bound
push
dec
lret
sbb
sar
sub
cmp
clc
insl
insl
test
imull
adc
jo
push
push
lods
test
int3
mov
loopne
push
xchg
mov
inc
lret
cmp
jge
and
xchg
sti
mov
jnp
mov
hlt
inc
mov
dec
cmp
scas
xchg
jo
dec
mov
mov
ror
xor
nop
xor
mov
fwait
loop
cmp
push
lret
in
dec
xchg
out
hlt
dec
push
lahf
je
iret
int3
inc
lods
cmpsl
or
mov
and
cli
insb
nop
pop
in
loopne
in
nop
mov
sahf
aaa
movsb
mov
pop
lock
loop
stos
aas
cwtl
shl
bound
sub
push
xchg
jge
cli
inc
lods
decb
invd
insl
ret
dec
cs
loope
fcmovnbe
lds
or
movsb
sub
mov
orb
lods
scas
add
lea
je
or
add
mov
mov
divl
mov
imul
xlat
addb
imull
sarb
adc
mov
jmp
insl
xor
and
fnsave
shrb
xchg
add
pop
or
sub
mov
in
test
xor
fsubs
xlat
imul
xchg
or
lods
loopne
sbb
dec
cwtl
testl
inc
pusha
or
pop
pop
or
imul
aad
inc
loope
jp
ds
inc
xchg
aas
push
mov
subl
dec
sbb
pop
inc
inc
aas
lahf
in
fimull
mov
and
popf
loopne
icebp
int3
sbbb
sub
mov
push
jmp
adc
mov
push
fcmove
mov
mov
or
lea
lea
sub
dec
pop
enter
ret
mov
fistps
sarb
cmc
ficoml
out
and
ja
sahf
pop
adc
dec
repnz
data16
enter
cmpsl
push
sub
insl
jbe
in
mov
fnsave
gs
jnp
mov
pop
call
ss
sti
fnstsw
cwtl
dec
popf
adc
cmp
sahf
negl
cmp
loopne
outsl
call
xchg
arpl
inc
sub
jl
test
cmpsb
add
lods
movsl
add
or
loop
int
aaa
mov
xor
mov
enter
cld
pop
push
mov
cli
subl
xor
mov
shl
test
lret
test
xor
dec
pop
lds
cmc
jb
sbb
popf
sbb
jns
push
mov
loope
fdivrp
mov
movsb
add
push
mov
or
aas
jle
outsl
arpl
in
xchg
xchg
xor
ljmp
repz
dec
mov
insb
mov
mov
adcb
lock
jno
adc
xchg
sub
idivl
insb
cmp
pop
push
inc
decb
xor
jb
xchg
sbb
pusha
dec
push
out
push
arpl
sub
icebp
std
sub
je
jl
cmpl
lods
pop
shl
outsl
or
mov
and
jb
stos
sarb
xor
lea
mov
dec
pop
xor
pop
addb
adc
enter
sbb
outsb
ljmp
mov
mov
xchg
daa
jl
and
cmc
aad
imul
push
or
cmp
sub
in
inc
push
sub
loop
stos
pop
popf
adc
push
rcl
daa
movsb
sbb
not
xchg
push
test
pusha
push
sbb
ss
jle
data16
xchg
cmp
scas
leave
push
xor
in
jbe
jae
cwtl
arpl
rorl
dec
sbb
sbb
mov
cmp
shlb
cmp
or
fmul
hlt
cmp
pop
pop
and
pushf
gs
cmp
inc
fistpl
inc
cmpsl
cmovbe
adc
pop
sub
push
sub
jne
fiaddl
pusha
cmp
mov
insb
fbstp
nop
xchg
gs
push
xchg
fisttpll
cltd
test
push
insb
xlat
fwait
xchg
leave
out
fwait
popf
xor
pop
mov
sub
or
jg
mov
mov
jp
cmp
mov
or
shrb
lods
sbb
cltd
push
data16
jne
xlat
xchg
mov
or
test
mov
push
xchg
xchg
sbb
xor
inc
push
xor
ja
mov
pop
ljmp
pop
and
aaa
jno
jnp
out
mov
or
mov
in
add
push
cmp
cmc
jl
inc
shrl
push
insb
mov
jmp
lods
xor
faddl
pop
pushf
jns
in
xchg
add
and
insb
rolb
jne
xchg
mov
jbe
push
lret
mov
jns
cli
mov
dec
cmovge
clc
add
sub
dec
fadds
push
arpl
cmp
movsl
cltd
mov
add
faddp
jp
ljmp
cld
jecxz
out
xchg
adcb
mov
mov
mov
cmp
xchg
imulb
stos
mov
or
out
or
outsb
add
je
lcall
sbb
mov
pop
jp
fisttpll
mov
mov
mov
fdivrl
push
cmp
aas
jle
mov
inc
shl
mov
movsb
hlt
fcmovne
jno
mov
push
push
pop
sub
adc
inc
ljmp
cmp
cmp
rcrb
dec
xor
dec
mov
sub
mulb
inc
ret
leave
in
aaa
xchg
jmp
shl
notb
icebp
mov
mov
jae
push
in
dec
lret
or
or
and
lret
mov
clc
outsl
xchg
sbb
test
loope
sub
nop
in
imul
loope
test
int
decl
or
pop
xchg
push
aas
mov
aas
adc
dec
mov
pop
in
jae
and
inc
scas
mov
or
and
fwait
nop
daa
inc
ss
sub
mov
repnz
imul
cli
xor
ja
cmp
xchg
imul
lods
cmpsl
cmpsl
xor
sub
and
fisubl
jns
scas
js
sub
call
mov
xor
dec
adc
cmpsb
ret
mov
call
pop
std
shrb
outsl
jae
inc
rol
fsubp
sub
sar
sbb
sub
nop
sbb
jle
mov
cmp
stc
jnp
mov
adc
loop
hlt
test
pusha
movsl
xchg
inc
mov
lret
dec
add
jmp
movsl
fwait
ret
loope
sub
fsts
mov
repnz
adc
add
scas
in
fwait
xor
pop
fisttpll
ret
pop
shl
sbb
xchg
movsb
cltd
out
daa
pop
cmpsl
cmp
andnps
adc
popf
mov
sub
cmp
xchg
mov
mov
fisubs
gs
jp
inc
cmpsb
sbb
dec
push
xor
adc
roll
pop
lds
les
push
testb
and
cltd
notl
jmp
adc
je
and
cmpb
adc
cs
idivb
sahf
lock
icebp
inc
dec
fistps
fmull
int3
data16
out
insl
imul
push
sub
cmp
stos
mov
mov
popa
cwtl
jmp
aas
mov
push
aaa
adc
out
in
pop
cmp
cmp
out
mov
sbb
sub
pop
sbb
dec
cmpb
sbb
int3
jp
xchg
ljmp
jae
mov
pop
ret
sub
adc
incl
mov
or
cld
jo
push
and
ret
outsl
or
lods
stos
cmp
or
imul
xchg
mov
out
arpl
jae
xchg
cltd
cltd
push
loopne
mov
jmp
or
scas
imul
cmp
popa
les
std
push
xchg
cmp
fwait
cmpsl
cmp
add
jnp
pop
mov
push
orl
sbb
int
cmc
jge
clc
mov
stc
mov
jns
lahf
add
mov
fldl
arpl
lahf
pushf
cltd
inc
repz
add
out
dec
cmp
inc
testb
xor
ljmp
xchg
push
rorl
mov
ret
enter
insb
push
pop
push
addr16
pusha
fcmovb
iret
mov
lcall
cmpl
rcr
xor
mov
orb
shrl
push
stos
pop
cmpsl
iret
xchg
xor
std
mov
sbb
jge
bound
mov
mov
mov
mov
in
mov
push
inc
dec
push
out
and
imul
outsb
int
inc
sbb
loop
add
sbb
in
adc
les
mov
out
cmp
loop
mov
mov
in
push
pop
add
dec
ljmp
cmpsl
movsl
call
popf
jbe
inc
dec
xorb
sub
fiaddl
mov
push
xchg
loope
adc
sbb
lea
and
mov
mov
add
shll
sbb
sbb
repz
push
or
sub
mov
andb
jo
jmp
mov
xorb
ret
cmpl
dec
jmp
ror
sub
test
ss
in
cmp
cmpsb
jle,pt
icebp
ds
lret
fidivl
sub
and
test
adc
push
es
fmuls
loope
lds
xchg
cmp
fisubl
jne
mov
cmpsl
rcrl
adc
push
inc
inc
rclb
mov
aas
dec
push
cmp
icebp
push
inc
or
xchg
rorb
mov
inc
ljmp
fcompl
inc
add
or
add
mov
fs
fwait
lret
ja
cltd
xor
push
dec
ja
pop
scas
add
insl
add
xchg
cwtl
sub
popa
test
adc
jns
sbb
jns
adc
mov
aad
and
fmull
xor
out
cmpb
leave
mov
xor
js
push
xchg
aad
fidivl
mov
wrmsr
mov
call
cmpsl
xchg
mov
add
imul
lret
xchg
xor
insl
cwtl
idivb
or
xor
xor
adc
in
jnp
scas
shlb
dec
and
xor
push
dec
ss
mov
pop
fimuls
push
rcl
and
mov
test
pop
out
inc
mov
sub
out
es
enter
pop
inc
test
sbb
movsb
pop
jmp
adc
rorb
add
dec
add
adc
in
das
faddl
mov
test
aaa
andb
imul
fildl
jae
xchg
in
iret
mov
xor
bound
cltd
and
xchg
popf
pop
add
add
sub
inc
push
sub
imul
mov
daa
mov
andl
test
out
iret
lock
out
pop
icebp
cmpsl
inc
mov
lods
jnp
mov
movsb
mov
add
push
ljmp
push
and
cmpsl
or
cltd
repnz
loope
jns
sti
pop
or
pop
lret
dec
adc
jnp
and
js
push
loop
sbb
or
mov
lds
pop
or
aas
call
data16
and
or
jmp
div
aas
sub
inc
push
push
dec
fsts
push
and
xchg
xchg
inc
insl
out
push
jmp
push
das
enter
shll
adc
and
fldt
fwait
test
adc
adc
out
lock
jo
jnp
mov
leave
mov
fisubs
push
std
push
cmc
div
repnz
adc
push
inc
dec
inc
xor
ja
or
mov
xor
adc
lods
mov
xchg
mov
sub
movsb
std
test
xchg
daa
xorb
mov
mov
jae
mov
adc
iret
loopne
repnz
cmp
jns
jl
cmpsb
mov
loope
in
mov
popl
inc
mov
lcall
and
cmp
sti
jl
into
imul
mov
sahf
sarb
sbb
sub
js
xchg
or
cmpsl
inc
mov
push
in
cmp
cmp
out
mov
sti
mov
fwait
adc
add
loope
ja
push
lahf
int
sbb
pop
push
adc
and
fcomip
dec
or
sub
imul
in
add
scas
ss
cmp
orb
cmpsl
add
mov
adc
iret
and
add
adc
push
mov
enter
mov
cmc
clc
subb
xor
mov
add
cmpsl
or
outsb
jle
mov
jo
pop
and
xchg
bound
outsl
fisubrs
gs
sub
push
push
orb
lret
ret
adc
inc
outsl
push
and
mov
fcoms
fnsave
xchg
es
sub
ss
jl
xchg
mov
or
jns
jl
or
cs
shlb
sbb
pop
xlat
aas
lods
loope
mov
out
fdivl
push
outsb
mov
sub
push
jo
aad
adc
loopne
aad
pop
or
rcr
ja
push
fwait
or
js
dec
lcall
adc
aad
push
jae
ljmp
inc
shrl
push
pop
sti
xchg
icebp
rorl
sbb
adc
nop
out
adcl
pop
mov
xor
js
lods
icebp
sbb
faddp
repz
aaa
mov
push
adc
loopne
jecxz
outsl
lds
sahf
pop
test
mov
test
xchg
jae
cli
adc
and
inc
pop
fbstp
cmc
xor
fcoms
pop
cld
repz
pop
push
bound
jle
cmp
outsl
fdivl
arpl
mov
adc
pop
cmpsl
jmp
lret
aad
and
shlb
xor
jno
js
xlat
icebp
std
aaa
xchg
mov
inc
xorb
pop
mov
fisttpl
loop
jle
xchg
fiadds
xchg
jmp
in
xlat
pop
pop
in
xor
aam
adc
add
add
subb
mov
or
test
push
lcall
gs
sub
jge
shll
dec
dec
sbb
or
jmp
insb
jnp
mov
xlat
int3
stos
addr16
outsb
out
and
mov
arpl
dec
mov
xchg
fstl
jno
pushf
adc
js
in
pop
test
or
gs
pop
enter
insl
add
imulb
add
adc
mov
jmp
jne
jmp
scas
icebp
xchg
lcall
inc
movsl
adc
jnp
div
push
fcomip
adc
movsb
lods
cltd
mov
lods
dec
dec
push
shlb
push
ret
sbb
ret
cmpsl
pop
mov
or
loopne
pop
rcll
insl
jo
mov
push
enter
mov
pop
pop
push
lahf
lock
leave
sbb
jle
ficoml
aaa
mov
es
jns
shrl
sbb
mov
popf
pop
push
pushf
push
xchg
xchg
jb
inc
mov
mov
push
imul
cld
rcll
cmpsl
addr16
sbb
dec
mov
adc
mov
pop
pop
inc
stos
in
dec
jp
cwtl
inc
sub
mov
sbbl
mov
scas
call
mov
fisttpl
pop
movsb
adc
push
fsts
ret
sbb
ja
mov
jne
dec
loop
sub
push
adc
add
sbb
xchg
data16
sarb
call
inc
sbb
lds
and
std
enter
test
subb
jmp
mov
and
and
std
clc
fnsave
push
fstpl
mov
pop
ds
das
fdivp
jle
cmp
sub
imul
arpl
fwait
adc
xor
rcrl
dec
push
shr
fwait
push
mov
cmp
jne
loop
jp
shr
add
push
sbb
roll
lds
push
push
add
vpshufhw
cmc
dec
mov
scas
push
test
int3
and
jle
mov
rol
cmp
hlt
imul
ret
fimuls
push
mov
mov
orb
mov
or
dec
sti
movsb
sarl
outsl
xchg
dec
cmp
push
xchg
cmpsb
or
int3
pop
sbb
and
mov
xchg
jp
popa
jle
cltd
movsb
dec
push
jecxz
push
rcll
lcall
sub
lahf
add
xor
shrl
mov
clc
sbb
out
add
daa
dec
xor
movsl
jno
and
mov
xchg
adc
in
pushf
mov
and
mov
repz
dec
lahf
pop
xor
and
arpl
sbb
arpl
sub
cld
ror
scas
push
cmpsl
jbe
sbb
lret
lcall
adc
cmp
and
pop
mov
test
inc
xchg
cwtl
sbb
inc
lret
arpl
orl
inc
push
sarl
jnp
in
cmp
lods
sbb
rcrb
mov
mov
in
movsb
negl
xchg
inc
adc
out
imul
dec
sub
push
lahf
arpl
movsl
cmpsb
into
jp
jb
insb
mov
mov
mov
jnp
or
jge
imul
imull
xchg
das
pusha
or
push
lods
out
add
pusha
or
sahf
mov
pop
inc
add
add
out
jmp
je
int3
out
pop
in
sti
cld
push
call
fistps
test
and
jo
sbb
xchg
imull
push
cmp
or
scas
push
xchg
cmp
stc
adc
lahf
fisttpl
mov
pop
nop
bound
sbb
mov
int
adc
xor
shrb
or
test
rclb
jnp
mov
cmc
xchg
mov
push
fstpt
into
ret
rcrl
cmp
pushf
inc
mov
mov
xorb
push
dec
inc
push
bound
inc
mov
addr16
mov
sbb
fcoms
jno
and
lahf
pop
not
fistl
fstpl
out
in
sahf
xchg
jno
pop
add
data16
pop
xchg
xchg
and
push
mov
lea
add
or
sbb
loopne
orl
jmp
jae
fsubrs
repz
data16
mov
int3
and
js
out
sbb
jle
imul
les
pop
ljmp
and
adc
lcall
cmp
jae
jle
mov
push
popa
jge
add
insl
mov
cmp
cmp
ljmp
inc
inc
jb
mov
xchg
add
xor
lret
and
cltd
leave
int
repnz
rcll
test
xor
xor
mov
pop
xchg
imul
inc
xor
mov
fs
in
fidivrs
icebp
inc
lcall
xchg
xchg
xor
jp
insl
scas
or
mov
xchg
lock
mov
jl
mov
sbb
or
xchg
cmp
cmp
sub
sub
fsub
jmp
scas
sub
add
push
lds
inc
das
inc
lcall
ss
dec
push
fisubl
in
mov
lahf
cmp
push
dec
sarl
je
lret
xchg
or
jg
mov
into
ljmp
scas
aam
mov
ficoms
jle
sbb
adc
push
iret
and
inc
mov
nop
lea
jle
mov
out
mov
movsb
and
mov
inc
xchg
fnstenv
arpl
jge
dec
and
cmp
ja
jge
in
stos
add
and
adc
cltd
cmp
imul
lds
add
lds
jns
xchg
push
cld
and
outsb
dec
push
add
pop
cli
jg
jg
adc
ljmp
adc
arpl
gs
push
loope
mov
dec
loope
iret
lods
and
repnz
or
call
jl
lret
mov
jne
add
adc
dec
and
jl
push
repz
stc
or
pop
pop
sbb
pusha
fs
sbb
outsl
repz
or
mov
sbb
inc
negb
mov
fsub
mull
cmc
inc
aas
push
fnsave
jp
xchg
mov
das
lcall
sbb
dec
and
add
jg
rorl
push
xor
jne
mov
mov
xor
xchg
icebp
mov
leave
test
loop
cmp
repnz
inc
xchg
jnp
lock
ret
loop
outsb
push
pusha
mov
ss
push
out
repz
sub
mov
fimull
inc
push
stos
mov
xchg
xchg
push
lret
les
push
sbb
ss
repz
test
aas
sbb
lock
and
test
aam
or
inc
xor
prefetch
mov
dec
adc
push
aad
mov
je
insb
dec
cmp
mov
lock
and
in
lock
mov
fnsave
test
insb
fs
aad
cmpsb
fwait
push
repnz
and
aaa
cmp
cli
sub
mov
xor
mov
daa
inc
xchg
jnp
xor
popa
fsubs
jb
push
cmp
cmpsl
sub
adc
ficoml
inc
adc
sub
cld
inc
cmp
aaa
dec
adc
and
mov
and
test
js
add
pop
cmp
daa
clc
adc
test
enter
push
mov
pop
sub
inc
les
mov
cmp
cmp
xchg
add
inc
pushf
cmc
lock
dec
testb
faddp
lods
or
jnp
hlt
xor
lods
cmp
leave
cmp
inc
scas
mov
mov
movsb
pop
imul
cmp
scas
ja
lea
test
iret
push
sbb
push
mov
xchg
mov
mov
mov
mov
xchg
inc
inc
mov
pop
imul
popa
mov
jne
insl
imul
mov
push
jl
lods
aam
mov
outsl
leave
push
add
fneni(8087
arpl
mov
data16
jle
push
pushf
pusha
enter
negl
stos
and
and
popf
lea
push
out
xchg
loope
mov
mov
sbb
lods
and
mov
testl
cld
jne
sar
mov
arpl
pop
ss
imul
pushf
mov
xor
add
cmpl
sub
mov
out
sbb
mov
lahf
adc
dec
push
ds
push
lock
repnz
sti
iret
decl
and
incl
jecxz
jg
lea
arpl
lods
js
pop
movl
pop
lcall
je
push
test
mov
cmpsl
lods
inc
call
sbb
xchg
sbb
cmp
das
adc
repnz
cmpsb
std
fadd
out
sti
or
lods
push
into
jae
sbb
insb
and
inc
or
sahf
enter
cmp
cli
je
gs
mov
push
cmpsl
inc
ljmp
shlb
int3
in
gs
fs
ljmp
stc
js
sub
sbb
pop
pusha
push
aaa
sbb
call
out
jg
insb
rolb
sub
insl
add
stc
adc
fldl
jle
int3
sbb
inc
ret
push
push
mov
fxch
pushf
push
lock
sbb
fcmovb
push
mov
ljmp
mov
adc
add
pop
lea
shr
jns
lods
mov
pop
outsl
sbb
fcmovnbe
cmpsl
adc
lods
jo
pop
test
cltd
cld
les
pop
jl
scas
aaa
mov
out
int
test
jle
mov
push
ljmp
adc
sarl
popa
adc
loop
xor
sub
in
jl
inc
sub
repz
out
enter
stos
jae
mov
add
fiaddl
jbe
rclb
jo
in
ficomps
mov
jecxz
sbb
push
das
jmp
repnz
dec
inc
fstp
jmp
cmp
mov
testl
cmp
test
push
enter
add
cmp
push
or
test
sub
cmp
fcomps
fwait
and
nop
jge
imul
gs
cmp
jge
sti
dec
jge
pushl
push
leave
jle
mov
inc
inc
jbe
js
mov
aad
mov
pop
or
fidivl
outsb
mov
dec
adc
add
test
inc
inc
xor
das
add
adc
dec
iret
fdivr
ja
inc
xchg
sbb
jae
out
push
sbb
insl
mov
ss
outsb
gs
fs
cs
cmp
subb
leave
jne
dec
clc
push
out
aas
shl
sahf
rcrl
inc
xchg
add
mov
lock
clc
sub
mov
or
sbb
dec
test
dec
mov
add
push
jo
xor
sub
xchg
sub
and
aas
test
mov
imul
adc
cmp
orb
aaa
ficoms
addl
jl
pinsrw
jge
clc
push
mov
mov
xchg
push
dec
iret
dec
fisttps
mov
pop
sub
cmp
sub
cmc
ret
test
mov
xor
fwait
inc
in
push
fimuls
fcoms
sbb
repz
cmpsb
jns
cmp
jne
jbe
das
testb
icebp
xor
mov
js
sub
rclb
mov
add
jl
xor
xchg
test
les
adc
and
negl
inc
mov
call
xlat
fwait
sub
roll
push
sbb
popf
adc
ds
sub
dec
stc
dec
pop
or
subb
test
insl
int
mov
mov
aad
sti
adc
pop
out
sbb
xchg
sub
shll
pushf
aad
xchg
mov
rcr
cld
out
and
js
jle
xchg
xchg
adc
pop
idivl
test
adc
and
lds
ds
bound
sahf
sbb
add
xchg
sbb
cmp
xor
pop
test
pop
cmp
scas
popa
clc
dec
insl
jo
push
mov
add
add
mov
pop
add
dec
mov
jl
jo
imul
gs
cmp
sbb
inc
cmpl
out
repz
mov
jno
mov
push
fdivl
sbb
cmp
add
add
add
test
push
lret
dec
stos
mov
setle
lea
pop
sbbl
dec
inc
mov
adc
dec
fcmovnbe
shll
and
mul
or
test
mov
ljmp
std
subb
and
xlat
or
sbb
repz
test
fsubrs
inc
adc
call
sub
cli
stos
pop
sti
dec
dec
dec
mov
lods
test
fcompl
es
int
inc
fwait
rorl
push
scas
inc
aam
inc
stos
lahf
jne
jo
shlb
and
pminsw
lea
pop
mov
das
xlat
sub
out
or
les
xchg
add
cmc
dec
sbb
sub
push
mov
aas
ret
or
or
inc
es
add
aaa
in
or
push
sub
pop
lret
test
insb
cmp
mov
scas
cld
lods
lock
jg
cmpsb
mov
retw
push
inc
sbb
enter
aaa
icebp
and
shr
xor
fsubrl
mov
scas
dec
mov
lahf
dec
pop
jbe
cmp
pop
iret
or
xchg
adc
push
push
push
lods
cltd
mov
push
add
push
cmc
mov
cs
loope
stc
xor
push
test
push
cmp
push
push
enter
fiadds
pop
test
popf
jo
xchg
pop
jbe
subb
dec
out
bound
cmp
sarl
xchg
xchg
insl
mov
fildll
lods
or
mov
add
sbb
daa
mov
frstpm(287
sbb
jle,pt
and
jno
decl
inc
cmp
push
xchg
jb
pop
lcall
bound
clc
jecxz
xor
pop
lcall
dec
cmpsl
push
cs
daa
dec
sub
filds
jne
int3
dec
and
mov
dec
mov
fcomip
push
js
js
lods
ret
xchg
jnp
sbb
xor
cmpsl
out
stos
dec
jo
inc
jo
jo
ss
inc
fs
ja
pushf
rcrl
xchg
mov
push
jl
mov
jmp
xor
mov
bound
xchg
xorl
sbbl
adc
mov
pushf
das
roll
inc
lea
fs
int3
in
pop
push
mov
or
mov
arpl
lods
lods
add
popa
add
mov
pop
xlat
add
std
mov
jmp
jnp
addr16
insl
out
outsl
mov
cmp
fsubrs
pushf
pop
div
adc
icebp
push
inc
addr16
int
stc
and
cmpsl
jl
in
in
inc
jnp
mov
add
jmp
int
fs
cmp
aas
mov
jl
adc
aad
jo
fdivrl
mov
xchg
fincstp
mov
js
mov
das
cmp
popa
stc
les
mov
hlt
insb
lret
sub
or
add
cli
stos
jbe
insl
add
sub
iret
subb
inc
icebp
out
jl
dec
flds
fiadds
cmp
bnd
out
repnz
lea
xor
mov
ret
mov
in
stos
pop
inc
popf
adc
mov
jae
pop
fcmove
pushf
loop
ffree
add
inc
pop
jb
mov
jne
ja
add
mov
lahf
clc
cmp
fdivr
xor
mov
int
cmpsl
call
or
cmp
pop
aas
and
mov
dec
into
and
or
inc
in
nop
inc
fildll
xchg
pop
cwtl
push
stos
or
lcall
mov
mov
or
out
and
gs
pop
loopne
add
test
mov
lods
xchg
mov
aaa
les
inc
jo
arpl
into
fwait
lods
scas
push
sub
std
sarl
mov
pop
and
mov
frstor
push
cmpsl
outsl
cs
sbb
in
jmp
and
xchg
jg
pop
xor
out
jns
mov
mov
dec
add
jmp
mov
shlb
aam
inc
lock
or
or
dec
addb
adc
popa
ret
cmp
cmp
dec
or
decl
out
inc
movsl
cmpb
inc
add
leave
push
xor
sbb
pop
inc
cmp
sbb
cmpsb
sub
mov
hlt
jno
addb
inc
xor
jno
xor
xor
scas
std
andb
and
dec
aam
or
test
or
in
dec
dec
cmpsl
pop
pop
rcll
repz
daa
in
das
jg
mov
adc
jb
call
lods
test
es
sub
inc
xchg
loop
fidivrs
jne
adcl
xor
pop
push
adc
cs
jnp
lret
or
push
push
xchg
push
nop
sub
jno
push
cltd
shr
add
lods
fildll
sti
push
push
pop
dec
or
scas
sub
mov
and
adc
push
jmp
in
dec
or
fistpll
aas
cmpsl
push
xchg
mov
inc
sahf
icebp
pop
jne
adcb
call
add
pop
mov
dec
cs
popa
xor
test
and
fisubs
test
int
lods
mov
sub
sub
in
dec
mov
sar
push
into
and
push
or
sub
subb
in
sub
fwait
mov
pop
icebp
xor
popa
adc
cmp
dec
lds
pop
inc
adc
lods
mov
test
mov
xchg
cmpsl
lahf
add
dec
jl
mov
clc
nop
fwait
movsb
xchg
dec
sub
sub
insb
ljmp
fsubs
movsl
adc
outsl
inc
xchg
sbb
lods
lea
cmp
je
adc
inc
adc
push
cmp
dec
in
pop
hlt
push
mov
adc
cmp
xchg
xchg
rcrl
ret
or
ret
mov
icebp
mov
mov
sbbb
sarb
add
push
cmp
pusha
adc
popf
pushf
dec
insb
pop
jae
mov
dec
mov
dec
loop
cmp
or
mov
rorb
cmp
aam
jne
test
push
dec
dec
adc
imul
mov
loope
iret
ret
mov
lea
movsl
sub
push
movsb
lea
icebp
ss
cli
mov
mov
dec
push
decb
mov
loopne
ss
ficoml
inc
dec
mov
mov
sbb
or
lock
cs
xlat
lea
jb
jne
jns
adc
mov
or
inc
stos
je
add
sbb
aaa
dec
outsl
rcl
sbb
xchg
bound
pop
jbe
mov
mull
xor
cwtl
mov
jno
jns
popa
js
adc
std
cs
inc
dec
or
rcrl
push
fstpt
pop
repnz
dec
fisubs
or
dec
jne
push
push
mov
test
push
mov
xor
mov
jae
mov
ret
cwtl
jle
add
lods
insb
pushl
lcall
ds
xchg
cltd
pop
jmp
mov
pop
sahf
add
fsubr
mov
sbb
push
jp
mov
pop
jmp
int3
pslld
xor
inc
lret
fcompl
ljmp
pop
fsubs
mov
xchg
daa
pusha
sbb
jge
dec
rcrl
push
mov
jmp
pop
les
rorl
int3
mov
and
push
pushf
cmpsl
dec
outsb
mov
ss
cmpsl
xchg
data16
add
fisttpll
int3
iret
out
jno
rcrb
fsts
push
lods
insl
xchg
add
mov
popa
push
ljmp
loopne
jno
inc
ret
inc
mov
lea
xchg
cmp
jo
push
repnz
pop
pop
cmp
jae
xchg
fildl
cwtl
cmp
outsb
pop
insl
sahf
pop
jno
add
push
mov
mov
xor
pop
pop
pop
mov
lock
push
pop
xorl
ret
dec
dec
inc
dec
mov
movsl
lds
cli
mov
loop
enter
mov
mov
insl
jecxz
push
outsl
mov
pop
mov
int
lretw
popa
cmpsl
and
bound
jg
hlt
jge
cmp
cltd
pop
adc
popa
cmpsb
add
pop
push
popl
inc
jno
shll
cmp
pop
add
push
outsl
sbb
adcl
leave
or
adc
imul
nop
dec
int3
pop
loope
jnp
and
fcmovb
jg
out
iret
daa
xchg
ficoml
aas
movsb
inc
ds
int
jg
scas
ret
cmpsb
mov
push
jmp
int
inc
jb
pusha
or
js
jne
add
subl
and
xchg
ja
je
out
or
mov
mov
push
in
roll
insl
mov
repz
ss
cwtl
add
jg
je
adc
in
jmp
lret
out
pop
xchg
push
lods
mov
ret
scas
out
jo
subb
in
loopne
push
jge
pusha
sub
cmp
mov
push
ds
xor
xchg
gs
popa
mov
insb
xchg
adc
fldenv
and
idivb
cmpsb
pushf
xor
mov
cmp
cmpsl
and
iret
mov
mull
mull
loopne
jmp
dec
jg
lock
sbb
in
and
test
icebp
xor
dec
and
rclb
loope
mov
imul
movsl
pop
xor
push
fisubrs
jb
cmp
sbb
sub
or
aad
repz
cmp
or
cmpsb
pop
das
test
lock
faddl
lahf
fisttpl
stc
lods
test
pop
mov
pop
jecxz
ljmp
addb
rcrl
mov
xchg
xor
mov
sbb
and
adc
push
add
cmpsb
imul
adc
mov
dec
pop
in
push
jp
mov
xor
sub
or
in
push
inc
jbe
call
lret
inc
es
xchg
lcall
xchg
push
inc
pop
xchg
frstor
daa
movsb
cwtl
in
add
xchg
ret
test
movsl
xor
cmp
shll
loop
dec
ret
push
push
cmc
out
xorb
xchg
idivl
pop
add
mov
sbb
scas
or
mov
xlat
ret
sbb
in
ficoms
sub
jle
iret
mov
incw
enter
shrb
xchg
lds
shl
jecxz
mov
test
adc
dec
xchg
clc
push
hlt
gs
and
nop
jo
stc
stos
ret
dec
adc
inc
fisttps
and
leave
inc
inc
push
fisubrs
bound
sbb
cli
dec
cmpsb
movsb
or
rolb
adc
adc
jo
faddl
xchg
lcall
add
xor
pushl
lcall
out
loope
aas
push
in
out
mov
xchg
rcr
xor
dec
push
insb
adcb
pop
movsb
sahf
loop
imul
out
mov
sub
lods
test
inc
shrb
shrb
insl
adc
pop
or
dec
cmp
loopne
mov
add
sub
jo
mov
divl
adc
push
pop
outsb
xlat
mov
lret
sbb
call
mov
das
lods
lods
and
push
mov
arpl
add
xchg
lcall
jp
mov
adc
dec
fidivs
fnsave
push
push
mov
push
fmull
cmp
inc
pop
add
inc
mov
xor
cmp
loope
test
mov
out
out
or
or
xchg
es
into
mov
push
ss
fwait
clc
gs
iret
inc
push
lcall
adc
imul
mov
mov
dec
rclb
pop
pop
or
mov
inc
sub
push
mov
jmp
sbb
cs
addr16
jo
adc
jne
and
inc
sbb
inc
cld
ret
clc
scas
imul
out
pusha
jp
and
jecxz
xor
popf
cltd
nop
adc
and
loopne
jg
fidivrl
mov
or
push
aad
xchg
scas
push
adc
lock
pop
inc
cmp
push
xchg
and
jle
test
push
xchg
pop
dec
jecxz
mov
aaa
repz
lret
push
adc
jp
pusha
lret
inc
mov
and
lods
mov
mov
adc
lcall
shl
mov
rcll
mov
pop
cmpsl
mov
pop
movsl
idivb
or
movsb
lahf
mov
sbb
movsb
xor
jnp
sbb
inc
push
movsb
shlb
or
fs
dec
xor
into
mov
mov
inc
lret
dec
xchg
add
sbb
push
cmp
or
outsb
push
sbb
repnz
fsubs
push
and
xor
fildll
push
and
aam
mov
jecxz
pop
into
mov
cmp
imul
sar
xor
xchg
pop
bound
add
shlb
jp
cmc
xor
sub
xor
les
lods
adcl
aas
aaa
test
lock
clc
mov
sbb
sbb
mov
arpl
sbb
mov
push
mov
andb
sbbb
add
lret
jae
loopne
aam
inc
dec
std
psadbw
jnp
jp
lcall
dec
jl,pt
rorb
jmp
adc
enter
or
test
aas
and
cmp
ret
xor
lock
fildl
fildl
jle
sub
outsb
adcb
lcall
sub
jp
pop
les
pop
fistps
outsb
sub
adc
add
sahf
and
mov
xchg
mov
hlt
sarb
cwtl
fstp
cmpsb
sub
xlat
mov
cmp
or
jg
jno
mov
cmpsb
inc
test
push
adc
mov
cmc
xor
fcmovbe
fwait
jecxz
dec
jp
sub
mov
xor
xchg
dec
xor
icebp
int
jle
outsl
in
sub
sahf
pop
outsl
dec
fisubrs
in
xlat
lcall
repnz
movsb
cltd
imul
and
sub
enter
out
mov
sbb
inc
mov
fdivr
pushf
push
push
jmp
inc
jne
dec
ret
or
mov
jle
sbb
es
pop
or
sti
xchg
stos
mov
ss
loop
jno
shl
add
sbb
inc
cld
and
movsl
adc
daa
test
fistpll
movq
sbb
pop
inc
pop
pop
int
inc
les
lods
push
daa
pop
dec
lret
sub
inc
xor
mov
sub
pop
cmpl
cmc
mov
mov
jb
aaa
nop
xchg
aad
movsl
std
fcoms
fstp
sarb
jns
clc
pop
in
mov
sub
or
test
movsl
xchg
rorb
loope
repnz
in
xchg
adcb
add
mov
jmp
jle
stos
in
and
loope
and
mov
push
pop
test
xchg
testb
jge
clc
bound
mov
sub
jo
push
inc
pop
sub
jnp
pushf
add
loope
test
mov
outsl
or
aaa
loop
mov
out
dec
add
pushf
popa
add
xchg
fmull
inc
imul
addb
dec
inc
dec
adc
sbb
stos
pop
cwtl
repz
lods
or
push
mov
mov
sub
jo
shr
mov
pop
sub
ret
mov
jnp
enter
sbb
add
pop
stos
lock
cwtl
clc
jge
dec
jbe
jns
rcrl
push
fs
imul
dec
jne
mov
and
out
xchg
lcall
dec
bound
and
jl
jl
std
lock
cmpsb
jae
cmp
shlb
mov
decl
out
je
or
adc
fisttpl
jae
or
push
mov
mov
pop
sahf
adc
aaa
mov
lret
out
cmpsl
lcall
and
sbb
pop
shll
lods
lods
in
ljmp
sub
cmp
cmc
scas
push
das
add
push
cwtl
cmp
mov
int
loopne
mov
repnz
imul
xchg
ja
push
sub
int3
adc
stos
inc
and
insb
sahf
jns
fstps
fadd
movsl
loope
adc
and
cmpsb
test
add
lcall
sbb
xchg
inc
push
push
ds
adc
ss
xlat
xchg
pop
cli
iret
orl
mov
sub
cmc
lret
mov
pop
lret
gs
iret
or
push
cltd
cmp
int
sbb
arpl
jmp
js
inc
and
mov
push
clc
push
or
push
sbb
in
mov
idivl
sbb
hlt
fldenv
add
int3
inc
xor
dec
scas
mov
fiaddl
std
mov
popa
cmp
xchg
sahf
movsl
and
call
pop
sub
bound
sub
cmp
sets
out
xchg
pop
adc
sbb
sbb
test
cmpsb
rep
push
shrb
lods
jl
inc
cmp
faddl
or
jle
inc
fcomps
push
mov
xchg
pop
int3
pop
bound
ljmp
pop
lahf
ss
mov
scas
fstpl
and
out
mov
sub
clc
cmp
dec
mov
stos
mov
cmp
shlb
popa
xor
insl
or
inc
xor
mov
mov
shrl
fbld
mov
movsb
gs
clc
push
insb
in
dec
mov
xchg
cmp
adc
pop
aad
std
ljmp
les
mov
into
adc
cmp
mov
jae
adc
inc
leave
xor
cmpsl
mov
sub
xor
pop
push
push
outsl
or
adc
mov
pop
outsb
clc
or
loop
mov
and
cld
adc
cmc
inc
or
movsb
je
ds
mov
int
out
inc
ds
std
push
xchg
lock
shrl
lret
popf
mov
fwait
test
pop
lret
in
addr16
jne
jg
jle
and
dec
out
inc
dec
or
jp
or
stos
or
pushf
push
test
lret
pop
push
add
cli
pop
popf
nop
ljmp
scas
mov
ss
out
mov
movsb
push
sahf
inc
pop
inc
ljmp
jns
mov
inc
or
das
out
push
and
xchg
js
or
in
sbb
jbe
adc
mov
ljmp
outsl
cmpsl
or
or
lcall
out
mov
leave
mov
or
push
inc
sti
sbb
not
adc
push
adc
add
data16
icebp
popa
adc
and
mov
fsub
pop
ret
and
xlat
adc
ret
pushf
cmc
mov
cmpsb
and
xchg
xchg
mov
mov
push
ret
frstor
test
adc
push
leave
gs
xchg
xor
mov
cmp
add
jbe
mov
xorb
cmp
jle
adc
push
cmp
js
out
js
push
cmp
shrl
push
mov
das
sbb
cld
movsb
inc
mov
inc
push
imul
sti
out
in
mov
dec
in
daa
xchg
xchg
sbb
xorl
cmp
fsubrp
sub
pop
mov
cmc
pop
push
in
mov
daa
outsl
lds
lods
inc
jns
ret
icebp
lock
cwtl
push
inc
loope
jae
js
in
stc
ljmp
pminsw
iret
out
lods
aas
inc
pop
or
dec
push
repnz
and
mov
ja
push
mov
jg
pusha
hlt
int
test
push
or
push
arpl
push
popf
and
cltd
add
xchg
fcoms
mov
adc
arpl
sbb
fcmove
sbb
or
fcoml
mov
xchg
dec
jns
daa
ds
aaa
jnp
push
dec
mov
mov
push
icebp
pop
sar
fdivrs
pusha
aaa
hlt
pushf
sub
jp
add
push
mov
jecxz
lock
mov
adc
ljmp
mov
adc
leave
xor
add
test
aad
sub
repz
enter
pop
repnz
bound
incl
fadds
dec
rolb
add
maxps
fsubl
fldl
dec
jbe
sub
mov
mov
cltd
xchg
xchg
sti
and
rcll
and
fs
imul
lea
icebp
push
gs
mov
pop
sub
mov
pusha
sbb
xchg
or
cmpsb
fs
outsb
lahf
test
popa
or
mov
push
inc
outsl
push
xlat
mov
mov
mov
daa
cwtl
insl
sti
and
mov
xor
lods
sarb
xchg
out
inc
jnp
nop
pop
gs
jb
and
into
sbb
xchg
xchg
in
es
out
dec
addr16
loopne
pop
daa
popf
sub
adc
shll
ret
pop
ljmp
loop
inc
aaa
insl
pop
aam
nop
sbb
xor
nop
loopne
mov
sub
or
push
lret
adc
inc
adc
xchg
in
add
mov
pusha
inc
std
popl
jns
xchg
js
and
aam
pop
les
lds
inc
cld
das
mov
jns
and
es
mov
into
call
jp
ja
and
das
pop
in
loopne
test
fdivr
cmp
mov
dec
sbb
fistpll
jp
or
pop
jl
lahf
xchg
and
push
jb
fisubrl
jns
out
aas
push
out
fwait
repz
inc
cld
outsl
sbb
or
jmp
cmp
sub
mov
jmp
or
inc
push
push
jo
xchg
call
into
sbb
test
push
inc
in
jo
movsl
mov
outsl
call
mov
stos
call
pop
or
jo
js
popf
jp
cltd
mov
mov
dec
js
and
in
dec
inc
mov
mov
inc
add
or
dec
in
pop
jno
mov
cwtl
ds
inc
sarb
pop
aam
jae
cmp
xchg
dec
adc
inc
js
daa
mov
fidivl
mov
jns
or
inc
jmp
pop
mov
les
xor
popf
mov
mov
jge
or
stos
mov
pop
dec
rcrl
sbb
popa
dec
enter
mov
rcl
jbe
loope
or
jo
icebp
int
hlt
ror
mov
add
push
add
mov
pop
je
int3
jmp
mov
mov
dec
mov
inc
xor
pusha
push
sti
das
jne
std
icebp
lret
mov
imul
cmp
mov
mov
pop
dec
dec
jp
mov
mov
cmp
push
ds
int
mov
xchg
repnz
mov
mov
add
idiv
adc
xorb
xor
cmp
mov
into
and
push
pop
push
or
add
xor
and
xchg
stos
dec
dec
mov
push
lahf
out
pop
loop
adc
push
adc
sahf
and
push
mov
mov
aad
and
pop
adc
and
pusha
jo
out
nop
loope
push
les
jecxz
add
sub
insl
scas
cmp
stc
test
fwait
imul
inc
insl
sti
push
fdiv
xor
hlt
lock
lret
xchg
and
inc
mov
cmp
lods
pop
mov
sub
adc
push
enter
imul
sbb
inc
mov
pop
add
movsl
add
add
pusha
mov
scas
cmc
loop
mov
sub
ret
ss
push
pop
dec
jge
dec
fdivrl
insb
sbb
rcrb
insb
pop
jle
lea
cmp
clts
flds
data16
sbb
sub
mov
rorb
cmp
loop
ja
cmp
mov
aam
stc
lret
out
mov
cltd
mov
ss
or
test
xchg
adc
outsl
nop
out
mov
fwait
loop
arpl
xchg
cltd
shll
mov
mov
lret
movsl
scas
call
test
fildl
push
sub
call
pop
or
je
lret
lcall
aad
mov
test
xchg
inc
ja
jne
xchg
popf
decb
push
inc
adc
pop
adc
or
cld
jmp
sub
push
xchg
xor
lds
std
add
adc
jae
rcrl
xchg
fcoml
mov
test
sbb
in
push
stos
inc
cs
or
xor
inc
sbb
fwait
and
pop
mov
xchg
scas
mov
iret
sub
repz
sub
cmpsl
jmp
sbb
movb
nop
mov
ss
loope
loop
repz
inc
enter
sahf
push
imul
jno
test
inc
cmpb
adc
insb
push
iret
movsb
jno
loop
cli
cs
and
sbb
xchg
popf
mov
or
xchg
push
fidivrs
cltd
lahf
ja
xchg
imul
pop
jns
xchg
or
int3
gs
fs
mov
cmovge
pop
outsb
fcom
je
pop
pushf
clc
int
addr16
shl
fwait
cli
out
mov
cmp
or
mov
mull
inc
and
sbb
adc
mov
rcr
or
test
push
in
popf
inc
xchg
or
sub
sbb
push
adc
xchg
add
cmp
test
int
sub
loop
mov
mov
cmp
push
loop
cmpl
pop
add
pop
fwait
xor
add
inc
fbld
enter
jp
and
push
and
sbbl
add
icebp
jb
incb
lods
dec
pop
adc
or
mov
sbb
pushl
addl
sahf
sbb
cmp
cmp
shrw
test
and
jl
bound
push
loopne
sbb
xchg
adc
cmc
icebp
mov
out
or
stos
jl
pop
ja
lock
dec
sub
push
repz
in
dec
xlat
js
add
inc
sbb
dec
adc
lret
push
subb
push
testb
notl
rcrb
in
jp
adcb
xchg
fisubrl
sti
fisubl
cmpsb
fmuls
pop
add
mov
xor
xchg
sub
lea
into
mov
lret
clc
shll
incl
fisubs
and
push
mov
pop
jge
je
repnz
pop
test
pop
jecxz
push
ret
xchg
mov
in
ja
push
inc
aad
push
xor
rorl
and
jge
pop
jmp
jno
cmp
fcompl
add
mov
jmp
in
push
idivl
jo
sbb
cltd
lods
inc
scas
sub
addr16
mov
jle
stos
call
pop
or
push
stos
mov
jp
pop
mov
cmpsl
xchg
push
leave
mov
fcomps
and
xchg
dec
adcl
lods
mov
scas
out
push
lahf
mov
sahf
aad
push
push
dec
and
and
fistps
sub
in
pop
jb
inc
fs
or
cltd
cmc
sub
cwtl
jmp
fsubrs
cmp
rcr
les
orb
xor
insb
aam
lods
lahf
xor
jp
popf
mov
sahf
add
outsl
scas
pop
les
or
std
inc
sbb
ss
fldenv
jb
stos
pop
mov
or
mov
xor
mov
dec
popa
add
repnz
xor
inc
mov
cld
mov
pop
popa
xor
mov
mov
lds
push
scas
jmp
inc
dec
scas
inc
outsb
inc
adc
jp
dec
call
dec
test
ret
scas
pop
inc
xchg
pop
test
int
sbb
enter
popf
icebp
mov
icebp
cwtl
pop
cld
rolb
push
repnz
loope
mov
daa
jecxz
jbe
push
inc
xorb
and
sub
dec
jne
xor
pop
fnstenv
add
mov
sbb
pop
sub
adc
insb
xchg
into
jno
in
sub
fs
aaa
repnz
push
and
js
or
test
data16
mov
mov
push
pop
add
sahf
into
cmpl
test
sahf
xlat
call
cmp
cmc
cmpsb
pop
mov
mov
stc
adc
cld
cmp
repnz
mov
mov
push
add
stos
ret
xor
adc
mov
or
repz
inc
inc
xchg
bound
mov
rcrl
push
pop
shrb
sarl
jmp
rcrb
cld
mov
pop
inc
stos
xchg
ja
ss
mov
ret
dec
movsw
clc
daa
in
lahf
fistl
xor
and
jge
pop
jno
cmpsb
ret
inc
scas
repz
shlb
das
sub
call
or
daa
push
insl
and
fs
mov
in
popf
jne
adc
adc
imul
cmpsl
jae
mov
mov
clc
jno
sbb
and
jmp
shrb
in
mov
pop
outsl
jb
sbb
inc
bound
movsb
xchg
xchg
jne
xlat
dec
inc
dec
ja
call
ljmp
hlt
ret
int3
mov
repz
mov
or
hlt
lods
pop
cltd
shld
xor
mov
rcr
std
bound
cmp
cld
scas
jp
fisubrs
sub
mov
dec
pop
mov
ljmp
adcb
add
jmp
push
sub
add
xor
rcl
xchg
cld
clc
aam
sarl
lds
in
xor
js
and
sub
mov
mov
dec
mov
test
jno
nop
sub
lea
push
add
cmpsb
jns
fcmove
in
add
hlt
ljmp
or
push
or
cmpsb
jge
inc
ss
in
xchg
cmpsl
ja
mov
pop
inc
dec
pop
movsl
inc
xor
out
mov
data16
int
out
pop
pop
in
xor
pusha
das
in
sbb
mov
enter
das
or
pop
and
dec
shlb
aas
ds
xorl
andb
andb
cmp
push
inc
fsubr
js,pn
jmp
lods
mov
jl,pn
stos
imull
sbb
clc
xchg
clc
insb
pop
add
rcl
scas
out
push
lahf
lret
cld
mov
dec
cmp
cltd
mov
ja
inc
pop
jmp
and
jle
arpl
or
push
int3
out
cli
push
add
xchg
arpl
sbb
dec
xor
cmp
dec
lahf
enter
mov
dec
jl
mov
dec
inc
fnstsw
movsb
cmp
inc
dec
xor
jge
decl
push
xchg
shll
fptan
jecxz
xor
jmp
test
add
or
out
xchg
ficompl
lods
push
pop
stos
and
test
pop
mov
fistpl
cmp
imul
or
call
cmp
mov
gs
fidivl
mov
ds
inc
push
sub
jno
fwait
dec
inc
in
aas
mov
bound
inc
jnp
xchg
fnstsw
jecxz
scas
cmp
ret
lahf
in
es
mov
ret
mov
push
cmp
xchg
fidivrl
rcll
mov
dec
jp
lds
xchg
xchg
or
mov
cltd
jmp
sub
dec
mov
imul
pushf
inc
bound
sbb
lret
sahf
mov
imul
in
outsl
pop
out
notl
pushf
sahf
mov
xor
imul
xor
xor
mov
sub
lcall
cmpsb
xchg
pop
pusha
xor
ficoms
pop
les
lock
rcrl
fdivrl
rcr
sub
xor
add
std
sbb
xchg
and
push
and
in
in
mov
dec
xchg
movsb
inc
psraw
idivb
or
mov
lods
std
divl
pop
sub
mov
scas
shrb
push
adc
mov
xchg
pop
push
add
xchg
les
sbb
lods
mov
inc
lock
aas
ret
test
mov
outsl
adc
ret
bound
test
mov
adc
jle
mov
movsb
pop
xchg
out
ret
fdivrs
jno
cmp
dec
jne
lock
push
lret
setg
scas
in
scas
cwtl
cmpsb
test
lock
push
pop
adcb
pop
or
inc
xchg
scas
out
pop
in
es
fmuls
xchg
mov
inc
addr16
sbb
mov
push
imul
sbb
xchg
fidivs
cli
xchg
push
jecxz
cwtl
pusha
mov
repnz
and
test
add
mov
outsl
cli
push
and
mov
cmp
pushf
test
cmp
mov
xor
jns
cmp
xchg
fildll
mov
cmpsb
mov
jecxz
mov
into
xchg
sub
jno
mov
xchg
jmp
fstl
sub
push
or
pop
xchg
popa
mov
jne
sbb
rcrb
daa
pop
inc
in
addl
pop
and
out
or
test
add
lods
inc
mov
adc
clc
aas
sub
lock
fmulp
movsl
inc
popa
xor
mov
out
mov
lcall
mov
lcall
inc
xchg
loope
shlb
mov
mov
call
xor
xchg
and
push
insb
stos
lock
lds
test
and
pop
scas
mov
arpl
fcmovnb
fildll
xchg
push
xor
dec
and
push
ljmp
out
bound
mov
nop
jno
xchg
cltd
mov
pop
dec
out
jmp
inc
dec
in
and
adc
in
ret
lods
fwait
mov
aad
ret
and
call
aas
mov
adc
daa
mov
loop
pop
add
insb
imul
call
das
jp
fs
inc
mov
mov
dec
test
ret
cmpb
sbb
ljmp
movsb
xchg
xor
add
ret
hlt
lock
inc
add
sbb
jns
adc
sbb
je
arpl
in
mov
movsl
pop
cmpsb
imul
dec
sbb
pop
mov
mov
or
sbb
arpl
rcll
jmp
push
pop
leave
out
jle
mov
cmp
dec
rol
jmp
cmpsl
cld
cmp
dec
fimull
jecxz
mov
add
sbb
std
push
pop
or
jmp
xor
xlat
cld
in
mov
dec
mov
push
mov
insb
adc
out
mov
dec
push
sub
insl
fisttps
sub
test
or
rcrb
xorb
sbb
sbb
loopne
gs
pop
fwait
inc
mov
movsb
out
je
je
fcoms
fisttps
inc
add
fs
push
sbb
push
mov
and
fmuls
insl
aaa
inc
cwtl
cli
ds
mov
and
jns
jae
or
xor
mov
movsb
adc
xchg
jecxz
sub
das
aam
sub
movsl
clc
pop
pop
hlt
inc
xchg
stos
hlt
push
fwait
xchg
insb
or
movsb
and
xchg
pop
jno
inc
jle
mov
das
mov
fwait
mov
inc
add
cmp
cmpsb
push
clc
nop
sub
and
xchg
stos
mov
dec
add
jae
jne
outsl
mov
arpl
cmc
dec
and
cli
mov
and
push
jne
and
icebp
hlt
dec
outsb
dec
pop
fmul
jbe
lods
popa
inc
fwait
pop
mov
adc
xor
nop
push
scas
fldenv
dec
and
clc
jbe
lea
call
pushf
cltd
stos
pop
add
out
sti
sbb
lods
cmp
dec
dec
add
xor
inc
mov
sti
fmuls
mov
mov
cmc
adc
loope
div
mov
jl
test
mov
imul
inc
scas
int
addr16
adc
and
sbb
stc
int
mov
pop
xor
pop
leave
mov
dec
adc
rol
push
js
sub
dec
sub
mov
je
aas
mov
aam
in
and
push
pop
fucomp
lock
mov
loope
adc
and
pop
jl
lea
adc
or
iret
mov
inc
loop
hlt
lea
pop
std
jae
inc
add
mov
fsts
fsubrl
add
xor
test
cwtl
addr16
ret
stc
out
sbb
sub
sarb
adc
cmpsl
popa
ficoml
pop
cmp
xchg
fimull
addl
and
push
leave
xchg
inc
push
addl
fcompl
cltd
outsb
scas
test
and
in
pop
sbb
popf
pop
adc
fidivl
jmp
add
xorb
leave
daa
xchg
jle
push
mov
jmp
and
jbe
mov
inc
test
repnz
andb
sarl
dec
dec
xor
nop
std
xchg
dec
or
add
rorb
mov
hlt
push
dec
and
ds
dec
push
loopne
mov
fmull
fimuls
aam
jbe
aad
push
scas
pop
cmpsl
pop
xchg
mov
xchg
in
mov
cld
or
popf
or
push
sbb
pop
inc
pop
out
inc
flds
xchg
lahf
fxch
mov
addr16
cmpsb
push
jno
insl
add
lock
aas
inc
inc
out
sahf
cmp
pop
mov
jle
call
jp
pop
sbb
or
js
sbb
ret
pusha
jnp
imul
int3
push
movsb
fcomps
mov
mov
outsb
aaa
sub
sub
cs
stc
lret
arpl
dec
mov
jno
jge
mov
push
arpl
sbb
mov
subb
outsl
nop
insl
push
shll
pop
int
inc
cmp
push
hlt
scas
cmp
sti
out
loope
es
shll
push
iret
lcall
aas
sbb
out
int3
aas
lret
mov
cmpsb
adc
cli
aas
push
inc
push
mov
imul
mov
xchg
std
dec
pusha
xchg
filds
das
or
sti
les
fstps
test
or
push
roll
aad
xor
pusha
adc
xchg
iret
push
cmp
add
ds
and
scas
outsb
mov
cmp
fidivl
jl
aad
sbb
mov
out
jle
shrl
jmp
or
xchg
lret
dec
idivb
test
data16
cmp
jno
pop
stos
je
xchg
lods
decb
xor
or
mov
or
and
xorl
lods
rorl
dec
inc
mov
inc
sbb
movsl
jnp
mov
add
dec
test
fisubs
addr16
stos
mov
add
sbb
or
ljmp
test
mov
mov
daa
mov
or
jae
movsl
sbb
ds
insb
adc
mov
and
cmp
adc
int3
rcrb
inc
cmp
mov
inc
xchg
movaps
mulb
leave
outsl
imul
jg
in
aas
imul
clc
ljmp
xor
mov
push
inc
and
mov
pop
js
in
repz
clc
push
dec
adc
inc
sub
mov
xchg
push
jb
faddl
scas
cltd
jp
mov
repnz
cmp
sbbl
dec
xor
ds
mov
call
lret
mov
inc
sahf
jo
dec
mov
test
repnz
pushf
mov
adc
bound
ljmp
sarb
fmul
shl
test
test
jg
jge
nop
pop
mov
sub
lods
or
out
in
cwtl
ret
sbb
ss
rolb
popf
mov
pop
sbb
cmp
das
push
dec
test
leave
pop
mov
pushf
xchg
cmp
jbe
daa
dec
outsb
fcmove
sbb
sbb
pop
cmpsl
lds
nop
aaa
and
stos
add
loope
ljmpw
jnp
and
dec
clc
mov
pop
xor
push
loopne
stos
pop
lret
rcll
xchg
lods
pop
xchg
xor
fwait
es
push
jae
lret
stc
clc
mov
push
mov
inc
aaa
daa
js
aam
pop
jp
iret
pop
in
sub
jae
add
mov
jns
cmpsb
stc
jae
cs
call
scas
push
and
adc
and
push
pop
aas
and
pop
lds
orb
xlat
jnp
mov
rcrl
add
jnp
in
cmp
xchg
xor
andl
insb
rorb
int
pop
int
pop
pop
cs
pop
jne
fiadds
mov
fistpl
dec
pop
cmpsl
imul
rol
dec
mov
or
pop
pop
out
push
ror
or
stos
imul
mov
sub
push
xchg
add
cmc
jne
mov
stos
sbb
cs
xchg
cmp
test
jne
adc
xor
lock
inc
dec
mov
mov
pop
jns
std
mov
shrb
stc
cli
dec
or
divb
xchg
dec
js
jmp
iret
mov
adc
cmpsl
pop
cmpsb
adcb
inc
cmc
leave
gs
inc
pop
xchg
in
cmp
mov
in
dec
push
cli
lahf
ljmp
add
jle
add
jo
test
cmp
clc
cmp
pop
adc
push
inc
bound
sbb
cltd
dec
dec
sbb
mov
cmpsl
push
push
ja
cwtl
xchg
daa
out
nop
movsl
fidivs
aad
dec
outsl
rcll
rorb
push
mov
pop
dec
pop
cli
mov
sahf
or
push
es
xchg
fwait
adc
cmpsb
pop
shll
fs
movsb
test
push
sbb
test
test
or
lcall
lods
outsl
hlt
adc
adc
cmpsl
dec
mov
jmp
add
mov
fdivp
shll
rclb
jle
or
add
pushf
in
outsb
pop
mov
jae
xor
movsb
mov
rorb
sbb
xchg
repnz
push
mov
mov
mov
pop
push
movsb
cli
icebp
dec
je
pop
push
adc
jl
pop
sahf
aam
jle
xor
push
dec
nop
mov
mov
fwait
les
and
jnp
sub
inc
push
xor
decl
ret
dec
sub
inc
cli
sub
inc
in
icebp
out
add
cmpsb
pusha
je
dec
pusha
inc
push
stos
inc
inc
sbb
push
push
jl
lods
imul
dec
pop
mov
in
sub
sub
adc
aad
mov
push
fidivrl
xlat
mov
mov
xor
push
andb
shll
or
xchg
dec
shrl
mov
push
ret
mov
repz
xor
std
inc
add
cltd
je
jo
enter
xchg
adc
mov
sti
bound
cmpsb
xchg
cmpsl
or
movsl
inc
pop
cmp
inc
in
push
call
jg
aaa
inc
into
std
push
arpl
push
add
push
dec
jno
xor
sub
push
push
xchg
enter
test
pop
cmp
fdivl
int3
pusha
lcall
jbe
cld
mov
roll
pop
test
aad
jge
and
fiadds
jb
inc
test
mov
sub
jg
enter
fbld
subb
pop
add
je
pop
dec
jecxz
in
test
aas
hlt
pmullw
mov
out
mov
cwtl
jg
jb
sbb
mov
stos
xor
test
jl
test
mov
cmpsl
gs
and
mov
mov
dec
mov
sub
out
repz
and
shll
aaa
xor
test
mov
and
sub
stos
fwait
mov
mov
push
cmp
arpl
lds
add
movsl
adc
cwtl
lods
pop
ret
adcl
mov
xchg
and
xor
cld
cmc
stc
outsl
pop
lcall
xchg
movsl
xchg
jp
jo
rclb
sti
push
into
sti
xor
cmpsb
push
and
test
lock
jle
dec
scas
sbb
cmp
test
fiadds
mov
and
dec
mov
xor
sbb
inc
pop
das
adc
mov
sbb
cmp
js
or
jne
or
or
stos
call
dec
shll
iret
and
pusha
popf
in
push
lcall
insl
out
xchg
aaa
xor
adc
sub
push
popf
inc
mov
shll
inc
cld
jo
cmp
mov
xor
movsb
inc
mov
xchg
mov
pop
and
cs
int3
inc
jg,pn
fimull
mov
xchg
sti
jno
xor
add
mov
out
adc
out
ds
je
mov
mov
lock
loopne
add
or
fwait
add
loopne
xchg
and
push
notb
push
repnz
jns
pop
pop
xor
loope
jnp
or
mov
test
adc
test
xor
cli
mov
xlat
push
cs
les
jl
xchg
jl
iret
mov
jmp
pop
add
lret
and
mov
not
insb
add
outsb
je
andb
fldenv
mov
sub
test
inc
lcall
in
lahf
imul
inc
cs
xchg
popl
bound
jb
cmpsl
add
mov
dec
out
enter
ss
in
repz
pop
pushf
addr16
je
sar
push
jae
out
mov
or
xor
jns
hlt
je
sbb
stc
jno
jne
xchg
push
outsl
rolb
push
push
movsl
jl
pushf
cmp
test
es
lret
push
sbb
mov
ret
jne
jmp
femms
sahf
or
repnz
cld
xchg
xchg
lods
leave
into
adc
fstpl
adc
inc
in
cmp
cmp
lock
test
retw
add
cmpsl
cmp
jecxz
fsub
adc
out
clc
xchg
xlat
sahf
mov
int
shlb
sbb
out
sbb
inc
lcall
adc
icebp
inc
mov
arpl
adc
sbb
xor
xor
ret
repnz
mov
test
xchg
arpl
push
xchg
mov
out
arpl
add
pop
movsl
cwtl
push
ret
dec
insb
scas
lock
mov
lods
mov
add
pop
push
add
ret
fs
ret
add
nop
int3
popl
loope
lods
loope
test
mov
xor
fimull
pop
add
ret
push
cmp
or
pop
lret
xchg
sub
mov
mov
jmp
rolb
dec
hlt
jle
pushf
cmp
movsb
imull
dec
jnp
pop
xor
test
dec
insl
cltd
leave
inc
dec
mov
sub
leave
ss
push
inc
jne
xor
lret
out
or
push
out
pop
fisubs
cmp
ljmp
mov
pop
push
sbb
mov
mov
rolb
popa
or
push
or
pop
jns
clc
and
xor
dec
mov
das
or
lcall
int3
std
mov
je
mov
adc
pop
cmpsb
cmp
sub
movsl
insl
inc
mov
xorl
dec
inc
lret
mov
shrl
xchg
and
xor
nopl
cmp
dec
mov
iret
jecxz
dec
mov
pusha
mov
insl
addl
mov
mov
xor
pop
sub
push
int
mov
clc
pop
aam
push
shll
lahf
in
push
dec
xor
sub
insb
push
mov
jl
cmp
test
mov
inc
xor
mov
out
and
ja
cmp
mov
cmp
sbb
or
pushf
fdivl
sub
out
sub
xchg
xor
mov
loopne
mov
ret
rorl
add
into
push
cmpsb
and
dec
pop
xchg
outsb
std
outsb
dec
stos
mov
mulb
mov
xor
or
bound
daa
mov
cwtl
sub
out
push
dec
and
adc
outsb
inc
jge
xor
and
mov
loope
out
outsl
or
fs
sub
dec
xor
add
inc
ja
sub
sub
push
mov
lahf
sbbl
out
inc
sub
cmp
or
adc
mov
cmp
mov
cmc
call
jecxz
inc
fwait
dec
clc
test
loop
aaa
cmp
xchg
in
jne
arpl
cli
xor
pcmpeqw
push
iret
jg
xchg
and
stc
mov
lods
ljmp
pop
movsb
sub
adc
int3
cmp
inc
inc
dec
shll
or
insl
dec
lds
xchg
dec
cmpsb
mov
xchg
xor
dec
sar
mov
mov
icebp
pop
sbb
mov
mov
je
adc
out
inc
lret
or
mov
add
inc
mov
call
test
dec
sub
inc
adc
xchg
popa
inc
loope
lds
rcll
dec
dec
mov
out
mov
cmc
out
adc
in
sub
mov
pop
shlb
dec
test
mov
arpl
into
aaa
je
dec
xor
aas
sbb
shl
loop
test
jb
mov
pop
lea
xchg
ss
sbb
push
cltd
insb
sub
push
lret
dec
out
pop
out
jno
sub
xor
mov
aam
loop
push
movsb
out
and
pop
xchg
fsubrs
cmp
les
std
jmp
fnstsw
adc
rcrb
adc
enter
mov
dec
xchg
repnz
or
fadds
xor
ds
pusha
and
mov
jno
sub
imul
sbbl
and
or
xchg
call
ljmp
out
aam
inc
xorb
fldenv
in
inc
adc
jge
adc
add
lret
cmc
mov
xchg
mov
shlb
jle
inc
push
iret
pop
push
shll
nop
es
in
sbb
in
cltd
pusha
mov
aas
xchg
mov
loope
aaa
cmp
test
and
frstor
out
push
nop
imul
sub
jp
mov
ror
ficompl
mov
and
pop
dec
fnsave
dec
gs
dec
push
pop
jp
sbb
pusha
add
push
lret
add
cmc
cmp
mov
in
jns
stos
jae
or
scas
aad
js
not
int
or
adc
xchg
dec
mov
pop
out
les
fsts
test
mov
jecxz
cmpsb
jns
sbb
fildl
jnp
jg
jb
xor
shr
mov
push
mov
sub
sub
cltd
mov
dec
loope
xlat
or
fstl
pop
add
push
fstpt
push
in
sahf
xchg
sarb
push
pop
cmpsb
push
mov
fcoms
xor
and
sub
push
in
out
call
adcb
cli
incl
pop
xor
mov
push
add
xchg
test
ficompl
jbe
subb
pop
push
rorl
imul
outsl
sbb
out
arpl
call
adcl
inc
insb
insl
jne
cmp
and
jg
pop
movsb
push
add
jl
in
dec
sub
mov
adc
xchg
ftst
test
jnp
daa
cmp
pop
andb
stc
call
repnz
bound
dec
jmp
cmpsb
xchg
jg
xchg
imul
dec
mov
ret
shlb
pop
pop
mov
pop
jne
sub
fnstcw
xchg
cmpsl
imul
sbb
or
or
iret
push
cmp
xor
rcrl
cmp
insl
jbe
dec
mov
insb
mov
xor
pushl
push
rcrb
xor
cmp
cmc
fdivs
and
ret
sbb
sub
cmp
pop
in
shrb
inc
sbb
xchg
push
and
sbb
out
mull
arpl
insl
lahf
jne
iret
lods
shll
push
cmp
add
loope
push
xchg
nop
sbb
out
inc
rcrb
gs
out
xchg
dec
movsl
mov
push
outsb
push
xchg
mov
inc
sbb
stos
rcr
pop
adc
or
test
es
push
rol
jnp
sti
mov
pop
lods
mov
mov
aaa
fwait
sbb
fwait
push
popa
sub
fcompp
inc
clc
je
sub
cs
pop
pop
test
adc
mov
cmp
lds
and
in
test
in
pop
cmpsl
lods
or
pshufw
out
and
dec
dec
fisttps
push
mov
xor
fwait
dec
xor
push
pop
sbb
xchg
xor
ljmp
mov
sub
movsl
test
insb
movsl
lock
mov
mov
jo
push
in
lea
shr
mov
bound
lret
std
aaa
je
inc
mov
sub
cmpsl
nop
xchg
jge
lods
data16
cmp
fbld
mov
mov
xchg
and
xchg
and
rol
out
adc
pop
xchg
fisubs
out
pop
je
sbb
sub
adc
inc
daa
mov
inc
repnz
xchg
decl
bound
ret
sbbb
jne
es
adc
adc
in
mov
and
mov
lret
les
aaa
lock
sbb
jnp
jb
pusha
xchg
adc
add
movsl
dec
cmp
push
mull
shl
mov
pop
out
outsl
cmc
fldcw
cmpsl
mov
into
fmull
xchg
push
lea
push
pop
jp
pop
notl
ds
cmc
sbb
jp
ds
enter
pop
xchg
cmp
test
jl
sbb
dec
inc
mov
jle
pop
mov
cmp
or
je
mov
cmp
les
dec
out
adc
sub
push
jle
jns
test
fdivrl
mov
sahf
and
je
add
arpl
lahf
daa
cltd
fucomip
test
pushf
inc
xor
insl
les
sub
push
jl
push
pop
dec
jmp
cmpsl
popa
pop
adc
lret
mov
stc
out
lret
inc
loope
pop
pop
xchg
notb
sub
inc
cltd
inc
gs
sbb
fstpl
rcll
jmp
aas
xor
jb
or
add
lods
out
inc
hlt
dec
pop
pop
sahf
xchg
inc
fnsave
push
data16
fcoms
js
in
xor
push
scas
pop
ja
lods
movsb
aam
imul
enter
adc
jns
sbb
js
sbb
xor
out
add
pop
arpl
movsb
xor
ja
lods
add
jecxz
xchg
mov
fmul
sub
call
push
cli
inc
sbb
outsl
repz
xor
dec
movsb
sub
and
xorl
add
into
lret
cmp
call
inc
testb
cltd
cmp
pop
jno
mov
and
and
das
adc
jp
xchg
cmpsb
mov
push
push
sub
out
jg
cs
into
push
pop
scas
out
mov
cld
cmp
pop
jge
hlt
or
lods
fsubrs
xchg
sub
rcrl
dec
pop
xor
xchg
mov
inc
jns
xor
push
sbb
movsl
add
mov
js
xchg
push
mov
xor
dec
loope
sti
stc
xor
adc
gs
fldl
or
jmp
out
lds
push
xor
adc
insl
sbb
sub
clc
inc
sbb
cmp
popf
jecxz
aaa
inc
xchg
mov
stos
pop
clc
nop
loop
outsb
nop
out
lret
pop
inc
movsb
cmp
and
or
nop
scas
xlat
push
and
cmp
inc
sub
cmp
enter
dec
sbb
mov
hlt
icebp
mov
fstl
addr16
xchg
dec
pop
fsubrl
jno
mov
inc
fbld
push
dec
or
lea
into
xchg
mov
popa
jo
mov
cwtl
shl
loopne
adc
mov
testb
int3
inc
out
decl
enter
clc
sahf
in
cmp
cwtl
dec
adc
push
xor
nop
xchg
shr
inc
mov
in
cmc
mov
ljmp
mov
cmp
mov
sti
scas
jmpw
mov
xor
mov
in
xchg
fisubrs
xor
jno
cmp
mov
xor
xchg
stc
jmp
leave
xor
mov
push
movsb
out
xchg
pop
sub
enter
imulb
mov
sub
roll
mov
xchg
in
out
in
fdivrl
mov
or
rcrl
jmp
in
lret
nop
sub
add
mov
fiadds
xor
lret
push
sub
leave
enter
in
cld
adc
mov
popa
xor
stc
addr16
lock
movsb
push
inc
xchg
dec
inc
imul
outsl
inc
cmpsb
push
movsb
jb
fadd
rorl
lods
enter
ror
cmp
stos
jmp
hlt
sub
mov
jne
push
loope
dec
test
dec
ds
shlb
pop
int3
mov
les
cs
aaa
ffree
addl
stos
fildl
imul
xchg
xchg
loop
jnp
jno
push
mov
adc
inc
or
dec
push
push
mov
fisttpl
mov
mov
mov
add
lods
sbb
mul
lods
inc
lods
or
shr
jo
mov
je
iret
or
jp
mov
inc
jns
popf
mov
aam
xor
push
sub
js
gs
filds
out
inc
dec
xchg
xor
xor
cvttps2pi
mov
dec
lds
jl
loope
mov
mov
sahf
and
sbb
loopne
psubusw
movsb
popf
std
bound
push
mov
and
into
sbb
pop
add
xlat
insb
xorb
lods
jb
mov
mov
inc
adc
mov
fstps
inc
and
xor
ljmp
jle
inc
cmp
sbb
insl
mov
fcoms
pop
and
inc
cmp
mov
loop
rcr
lahf
dec
dec
imul
mov
jmp
lea
xchg
jge
sbb
inc
ficoml
pop
aam
and
pop
sbb
imul
fidivrl
xchg
imul
in
stos
fwait
sbb
add
pop
push
mov
mov
dec
mov
das
jb
xchg
pop
jl
insl
and
cmp
shrb
push
dec
fisubl
push
lods
out
flds
sub
push
mov
insl
js
add
stos
les
mov
out
mov
sbb
loop
aam
incb
mov
adc
mov
into
jp
jbe
push
inc
les
xchg
scas
pop
push
lods
sahf
push
clc
adc
lahf
and
add
pop
xor
inc
mov
mov
and
mov
movlps
cmc
sub
inc
add
test
mov
int
or
pop
outsb
pop
lock
shl
or
out
cmp
mov
pop
jge
jno
es
dec
int
or
in
faddp
pop
rcll
xor
lods
ret
int3
in
mov
sbb
lret
das
adc
subb
pop
pop
pop
stos
je
scas
jmp
push
mov
pop
mov
leave
mov
ss
imul
testl
adc
addr16
xorb
not
push
popf
in
push
xlat
sub
movsl
fldl
xchg
add
lahf
pop
and
and
leave
pop
xchg
out
push
mov
nop
push
sbb
xchg
ja
jmp
push
mov
pop
xor
fildll
xor
pop
jo
mov
pop
fbstp
add
mov
or
xor
mov
fwait
pop
clc
xor
mov
jae
pusha
pop
or
addb
mov
leave
mov
iret
mov
push
out
test
jno
and
fwait
aas
fidivl
sub
jbe
jmp
pop
pop
int
push
mov
fcoml
leave
in
fcmovbe
arpl
push
sub
or
push
ret
daa
jp
inc
outsb
icebp
or
lcall
rcr
pop
xchg
es
and
cmp
mov
stc
add
push
or
cmc
icebp
ficomps
mov
cwtl
imul
test
push
inc
loopne
ljmp
xchg
repz
std
repnz
dec
ds
cmp
lea
fildll
mov
inc
icebp
jb
aaa
test
cwtl
pop
scas
pop
mov
aad
jecxz
xchg
inc
iret
lds
mov
ficomps
push
pop
push
in
mov
enter
dec
movl
insb
gs
xchg
sbb
mov
and
shrb
into
sahf
fcoml
cmp
jmp
sahf
fnstcw
adc
xor
and
dec
adc
adc
mov
xor
adc
outsl
lcall
mov
mov
fidivs
dec
jne
mov
shl
gs
mov
sbb
sub
and
push
call
mov
clc
cmp
fsubrs
pop
fisubrl
lock
and
mov
fisttpl
clc
rcl
imul
out
mov
cmp
fidivrs
stos
pop
mov
mov
inc
push
in
sbb
pusha
aam
mov
jno
leave
xor
inc
sub
and
pop
add
scas
push
scas
jg
push
mov
xor
sbb
mov
lds
imul
sub
xor
mov
leave
mov
inc
and
sbb
mov
adc
test
push
jnp
scas
pop
sbb
shlb
or
inc
lret
es
jns
jne
les
or
stc
xchg
inc
mov
push
jl,pn
push
je
xchg
mov
lcall
push
jecxz
imul
pushf
or
mov
js
mov
iret
push
push
in
outsl
repz
xchg
mov
xor
loop
mov
mov
and
outsb
ficoms
cmpsb
scas
mov
jns
test
fs
lea
jecxz
iret
pop
mov
cmpl
xchg
sub
cmc
dec
and
lret
popa
pusha
mov
xchg
jp
aam
repz
in
pop
mov
or
and
movsl
ljmp
inc
dec
adc
test
inc
pushf
insl
sbb
lcall
adc
lds
nop
or
popa
lcall
mov
jae
movsb
cmp
pop
movsb
push
and
pop
bound
cli
cmp
push
push
sbb
mov
test
lods
push
cmpsl
and
mov
negb
sub
sub
hlt
xchg
adc
test
xor
pop
inc
or
dec
sbb
aad
sub
into
xchg
sbb
jb
cld
push
aas
add
jno
dec
jb
push
imul
insl
insl
in
lock
cmp
or
fcompl
mov
xor
int
or
fiadds
ljmp
xchg
cmp
cmc
push
push
push
scas
inc
xchg
mov
shlb
call
fcompl
mov
fldt
in
ds
mov
inc
or
call
mov
lods
imul
shrl
and
jmp
leave
lcall
scas
out
xchg
cli
mov
lret
int
popf
es
adc
lret
scas
inc
out
mov
push
xchg
inc
mov
xchg
push
mov
add
jp
sub
pop
fistl
pop
add
fwait
pop
pop
cmp
repnz
int
inc
xor
lods
je
test
push
xchg
lret
and
jbe
or
stos
or
mov
cmpb
cli
push
std
inc
ja
inc
ss
jp
js
xchg
lods
xchg
out
stc
rclb
adc
cltd
mov
cmp
fsincos
inc
sti
nop
jns
jb
xor
dec
cmc
pop
sub
push
pop
aaa
pop
mov
scas
add
cs
mov
sub
out
sub
mov
rcrl
cmpsb
xchg
push
popf
testb
add
dec
jbe
dec
cmp
in
xchg
and
ja
and
pop
push
push
jg
cwtl
stos
insl
int
dec
inc
and
mov
xor
test
mov
iret
pop
sub
ret
add
sbb
out
inc
xchg
adc
add
fidivrl
xchg
add
adc
sub
xchg
imul
scas
or
cmpsb
adc
into
adc
stc
xchg
loop
jmp
mov
xchg
ja
dec
jo
cmc
ret
imul
scas
mov
or
mov
sbb
and
imull
insl
lret
sub
fsubp
mov
mov
sti
inc
in
int3
pop
pop
inc
jae
ret
jecxz
dec
scas
jl
out
gs
fdivl
cmovae
sbb
repnz
iret
dec
mov
sub
mov
mov
mov
adc
adc
test
push
adcb
dec
mov
lret
jo
pop
in
out
repz
inc
push
dec
jecxz
cmpsb
cmp
mov
scas
inc
or
mov
shlb
loope
ss
rcll
adc
cmp
mov
rorb
push
mov
jno
mov
test
push
pop
movsl
mov
out
arpl
push
push
in
je
orl
idiv
sub
int
fwait
inc
push
mov
enter
int3
out
outsl
jl
mov
sub
fadd
sub
sub
sarl
push
inc
insl
dec
loope
filds
jmp
and
scas
xor
cmp
cmpsb
jae
scas
mov
popf
adc
push
mov
inc
mov
bound
dec
pushf
or
adc
mov
add
loope
lret
std
add
and
dec
aad
pop
cmc
mov
add
iret
mov
lret
push
out
dec
out
jae
jno
inc
loop
mov
imul
test
into
imul
sti
jae
movsb
cmpsb
jno
push
out
popa
add
xchg
dec
inc
loopne
pushf
cmp
pop
jmp
xchg
push
pop
call
test
xor
sbb
mov
leave
in
mov
cmp
test
scas
fchs
or
testl
flds
cmp
xlat
aam
and
enter
pop
and
lret
inc
js
dec
das
push
iret
dec
adc
dec
insb
in
fstps
or
sub
dec
popf
test
outsb
push
cmp
int3
push
add
jns
nop
dec
ret
and
mov
test
inc
jl
cmc
shlb
pop
pushf
mov
rorl
shl
into
or
jae
fdivs
outsb
dec
xor
jns
xchg
pop
test
mov
rorl
lcall
mov
in
rcll
mov
pop
mov
popa
out
pop
daa
shll
cmpsb
and
adc
rorb
push
mov
mov
sub
mov
add
sbb
sub
jmp
test
xchg
cmc
bound
sbb
add
push
mull
mov
test
fwait
pmaddwd
pop
jno
push
dec
rclb
mov
pop
mov
mov
fmull
lods
out
fst
pop
cmpsb
insl
jne
iret
pop
loop
jl
movsb
fstpt
mov
xor
add
mov
rcrl
push
jnp
add
sub
dec
int
adc
or
dec
outsb
add
push
inc
call
xchg
jae
inc
add
mov
xchg
rcll
fisubrl
test
cmp
arpl
mov
or
xchg
jo,pn
mov
repnz
jne
imul
jmp
sbb
ljmp
ret
mov
mov
aam
jo
mov
cmp
cmpsb
xor
addr16
adc
fs
ret
fldenv
mov
notb
jns
movsl
inc
repz
adc
pop
and
xor
pop
icebp
adcl
stc
cmp
arpl
ror
sub
push
pop
cs
inc
or
inc
or
jbe
push
addr16
in
in
adc
movsl
leave
cmp
mov
scas
enter
aas
outsl
fsubs
and
je
and
daa
sahf
adc
lret
dec
mov
or
stc
es
sub
lock
sbb
sbb
push
gs
pop
sub
shrl
mov
aad
mov
nop
cltd
cmp
jge
movsl
scas
aas
movsl
pop
xchg
cmp
adc
scas
out
adc
fs
or
aas
jp
sbb
das
cmpsb
pop
cld
sbb
cmp
push
aam
add
and
pop
push
rorb
push
shll
jb
movsl
lcall
scas
jae
jae
ljmp
jnp
cmp
ret
cmpsl
mov
inc
je
push
push
lock
jle
xchg
js
cli
adc
cmc
int
addr16
testl
stc
xor
mov
fsts
outsl
popf
jbe
fwait
cmp
leave
out
sbb
xor
popf
out
mov
lock
dec
int
nop
jg
fwait
xchg
sbb
cmp
cmpsb
mov
les
rcrb
and
popa
mov
add
or
inc
repz
ret
mov
mov
xchg
popf
mov
adc
pop
cld
sbb
xor
jge
mov
inc
and
or
mov
hlt
cmpsb
mov
xlat
pushf
xor
out
adc
gs
and
and
out
fwait
pusha
jo
aas
jns
xor
and
mov
out
lcall
adc
jmp
stc
or
negb
cltd
or
push
jg
add
loop
mul
test
mov
mulb
outsl
jbe
cltd
push
test
add
pushf
add
pop
adc
sbb
shl
xor
or
fs
stc
shlb
add
inc
fwait
xlat
rorb
loop
outsl
lahf
insb
loope
mov
lods
insb
add
test
push
sbb
dec
and
ret
and
dec
testl
mov
sub
cli
adc
cwtl
dec
cmpl
mov
scas
jecxz
call
jg
dec
pushf
xchg
test
dec
outsb
inc
icebp
fwait
pop
loope
ret
into
aaa
mov
lret
mov
mov
push
std
xchg
sbb
push
xlat
mulb
xor
inc
mov
mov
in
movsl
sub
push
jae
cmp
loop
push
adc
popf
fs
lret
dec
push
test
fists
mov
aad
or
and
loop
sbb
or
hlt
xchg
inc
lea
dec
mov
fimull
inc
ss
pushf
push
sbb
mov
je
int
mov
xor
out
out
sub
jae
or
xchg
adc
push
fs
sbb
lods
mov
lcall
jg
je
hlt
dec
out
insb
xchg
inc
pop
xor
mov
ljmp
movsl
pushf
cltd
inc
adc
xchg
loope,pt
push
push
lods
xchg
sbb
mov
testl
xchg
stos
pushf
adc
and
mov
adc
add
add
mov
push
and
in
push
call
pop
mov
dec
and
xchg
adc
dec
and
push
lret
das
adc
add
mov
sbb
in
pop
stc
fdiv
jg
push
cmp
sub
leave
sbb
xor
das
inc
imull
nop
and
sahf
clc
call
mov
mov
imul
cmp
lret
divb
push
dec
sub
jnp
dec
addr16
jnp
mov
xlat
sbb
sahf
pop
cmc
fstpt
daa
cmc
std
sub
mov
mov
mull
dec
je
jbe
mov
xchg
stos
jmp
negl
xchg
cmp
js
mov
pop
loopne
or
pop
xor
ret
jno
es
push
dec
xchg
add
ds
stos
fldenv
in
in
outsb
xlat
xor
jo
fwait
dec
pop
cwtl
cmp
jns
jp
push
push
push
sbb
hlt
and
cli
jmp
or
push
aas
shl
adc
jns
jno
push
mov
sbbl
sub
rclb
push
or
in
popa
pop
enter
and
leave
dec
adc
sub
xchg
nop
lahf
sbb
jecxz
or
cmp
jno
or
movsl
cmc
js
cmp
rorb
cmp
jb
int3
and
push
adc
pop
fwait
or
push
fcmovb
mov
or
psubsw
jmp
and
arpl
jne
inc
aaa
lods
jns
es
nop
lds
push
movb
orl
lahf
jo
mov
into
outsb
loop
lcall
aam
dec
jl
lea
mov
cld
cmp
jmp
idivl
or
mov
xlat
xlat
push
sbb
pop
out
movsb
nop
xor
ja
arpl
pop
or
movsl
in
push
add
dec
enter
mov
out
fistpll
pop
lahf
ret
insb
push
iret
fiaddl
sub
xchg
jecxz
push
test
adc
iret
xor
lcall
es
ds
mov
iret
es
outsb
ds
mov
faddp
in
push
lahf
stos
sub
repz
pop
add
sbb
sub
sbb
clc
xlat
inc
xchg
fs
mov
xchg
xchg
cld
adc
loop
ret
fbld
cwtl
sub
pusha
pop
lods
sub
xor
mov
sub
jg
and
jl
xor
xchg
daa
cs
loop
push
push
aad
xlat
aas
mov
popf
or
scas
mov
outsl
jns
adc
mov
sbb
repz
cmc
adc
jg
xor
adc
pop
cmp
lock
xchg
dec
dec
mov
xor
mov
fadds
dec
sbb
pop
or
adc
jecxz
xchg
mov
cs
xor
or
sbb
dec
add
pop
xchg
mov
stc
jge
pop
addr16
lahf
mov
test
push
into
and
pop
add
jbe
xchg
mov
ja
mov
xchg
div
loop
int
jp
cmpsl
addb
mov
push
mov
mov
data16
push
and
jne
push
fs
les
xchg
and
addr16
xor
fwait
js
mov
roll
jge
and
jns
xchg
adc
mov
jne
add
negb
xchg
movsl
xor
movsb
adc
cmpsl
dec
not
js
out
sti
mov
sub
and
sub
mov
clc
and
sub
scas
sar
pushf
jmp
sub
sub
leave
pop
mov
imul
movsl
sahf
add
int3
ret
lahf
xchg
lods
push
fdivr
outsb
mov
aaa
add
scas
insb
sbb
mov
loopne
stos
and
inc
pop
test
dec
shl
mov
mov
push
dec
jne
push
dec
mov
or
mov
ficoms
cmp
cld
sub
test
mov
lea
movsb
outsb
out
lock
mov
mov
jmp
cmp
pop
xchg
pop
inc
popf
jg
les
jns
xor
mov
aaa
repnz
push
fidivl
mov
adc
push
push
lods
sti
lea
mov
inc
call
xor
lcall
mov
scas
pop
rorl
in
and
inc
add
ja
data16
push
outsl
dec
insl
xchg
inc
jbe
pop
mov
pop
mov
lods
push
cmc
jb
xor
lods
rep
into
dec
inc
cmp
cmpsb
dec
repz
aaa
push
fs
cmp
jp
jo
xorb
sbb
jg
cmp
mov
sti
and
xchg
pop
fs
je
hlt
xchg
jmp
int3
mov
out
fwait
cld
inc
or
sub
adc
dec
mov
loop
arpl
das
inc
pop
pushf
mov
inc
imul
loopne
cmpsl
dec
mov
xchg
mov
xchg
insb
mov
pusha
sbb
dec
stos
roll
xchg
loope
lea
inc
jnp
std
repz
aad
mov
mov
push
stc
ds
cmp
pop
or
lahf
mov
pop
shrb
or
jp
pop
adc
sahf
xor
jecxz
adc
movsb
push
test
mov
jo
mov
mov
test
push
aad
jg
push
pushf
inc
sub
xchg
mov
or
lret
jb
xlat
clc
inc
inc
mov
mov
pop
outsb
add
sbb
inc
sub
cmp
sbbb
push
lods
mov
negl
lret
into
inc
iret
les
dec
cmp
push
pop
stos
pop
xor
xor
into
nop
sub
mov
lcall
adc
sbb
xchg
gs
push
outsb
add
aas
xor
loope
jne
mov
push
fildl
mov
in
sub
movsb
mov
test
xor
and
xchg
cmp
pop
imul
mov
test
jae
or
inc
shrl
add
inc
out
and
int3
and
fnstenv
pusha
push
mov
mov
pop
subb
xchg
jbe
fwait
push
jp
sbb
xor
dec
imul
stos
xchg
ljmp
mov
pop
pop
add
les
cmp
push
mov
outsl
popa
and
je
dec
pop
outsl
cli
jbe
loope
aaa
repz
mov
call
out
pop
sub
and
nop
adc
push
insb
movsl
movsb
orb
mov
xchg
push
fnsave
pop
and
xchg
inc
decb
xchg
push
push
je
jbe
cltd
iret
inc
mov
enter
loope
cmp
mov
xchg
mul
push
cs
jae
mov
iret
inc
mov
xor
movsb
insl
out
pop
dec
stos
movsb
mov
fstpt
loop
jbe
or
and
xor
jbe
xor
hlt
inc
push
and
xor
lods
pop
out
mov
push
movsb
xchg
les
pushf
test
push
sbb
xlat
jb
mov
sbb
mov
add
adc
add
dec
jb
movsl
push
inc
ds
data16
sbb
fdiv
cli
xor
fnstcw
adc
mov
inc
cltd
and
jns
or
lods
add
jae
ja
cmp
mov
cli
pop
test
outsl
fs
fucomp
jne
mov
adc
arpl
pop
mov
cli
out
jb
ljmp
add
xchg
cmp
pop
and
lcall
das
push
push
pop
sub
aaa
cmp
pop
or
test
jge
bound
mov
adc
pushf
xor
cmp
jp
cltd
jae
repnz
sbb
dec
nop
sub
in
and
mov
push
out
loope
pushf
push
in
sub
loop
loopne
cmpsb
xchg
stc
push
mov
xchg
mov
ret
jecxz
into
pop
inc
jg
lcall
mov
test
hlt
jmp
lcall
rol
movsb
ljmp
sbbl
adc
or
inc
push
shll
pop
popf
imul
pop
xchg
out
roll
jbe
sbb
add
repnz
jge
jmp
jge
and
out
daa
jnp
mov
dec
adc
mov
pop
push
pop
rcll
jmp
mov
jecxz
add
in
scas
dec
dec
xchg
into
int3
xor
mov
inc
lods
push
add
icebp
ficoml
push
jp
sbb
out
mov
lock
scas
ss
repnz
xchg
dec
sbb
dec
imul
rcrb
scas
ds
pop
movsl
nop
jg
divl
mov
fs
cmovno
mov
test
iret
sbb
cmpsl
addr16
pop
int
mov
mov
dec
jbe
sub
sbb
adc
cld
mov
ja
jge
imul
imul
xchg
cwtl
clc
or
or
test
fidivs
sbb
arpl
int3
insb
jl
ja
mov
mov
add
pop
or
pushf
and
cmp
leave
lea
leave
mov
jle
pop
lahf
ss
mov
movsb
jmp
mov
popa
rcrl
and
cmp
fistpl
lcall
mov
sub
and
adc
lock
mov
xchg
fs
inc
rep
ud1
xor
ss
dec
mov
push
sub
sahf
jnp
jae
dec
test
xchg
adc
lahf
jge
mov
jae
rolb
cs
loopne
inc
int
mov
pushf
sti
imul
push
sub
push
mov
cmp
push
insb
out
cmp
lahf
xchg
xor
pop
lods
mov
or
and
push
push
cmpsl
dec
inc
xchg
mov
xchg
outsl
icebp
ret
xchg
dec
and
push
xchg
mov
std
data16
fldcw
sbb
jp
fdivs
pop
aad
sub
pop
shrb
mov
imul
std
jo
xor
icebp
push
into
mov
jge
movsb
cmp
xchg
test
xchg
mov
pop
push
stos
mov
dec
lahf
loopne
sub
jns
aas
pop
stos
mov
adc
incb
cli
popa
jle
repz
jno
testl
lds
test
call
sub
mov
mov
add
cmc
icebp
adc
out
into
dec
je
rcll
fdivl
push
and
inc
leave
pop
popa
dec
mov
xchg
pop
xor
ds
inc
jae
aaa
sahf
lcall
xor
cltd
dec
mov
xor
test
repz
out
xchg
lods
daa
repnz
pop
rorb
inc
outsb
ss
stos
and
pop
sbb
test
cmpsb
add
jnp
cmp
cmpsb
outsl
sti
inc
daa
rcl
xor
mov
das
test
cld
xchg
in
dec
push
imul
push
dec
xchg
fistpl
mov
sti
jg
lret
imul
pushf
addr16
insl
je
pop
mov
push
inc
out
and
inc
pop
push
loopne
aas
adc
lea
in
xchg
fdivp
aaa
xor
or
js
mov
mov
mov
es
sub
push
mov
push
inc
cmc
jg
loope
and
xor
mov
fstps
cwtl
cmp
inc
enter
sub
rclb
cmpxchg
setno
insl
data16
inc
mov
test
ljmp
es
pop
sub
xor
mov
jmp
adc
xor
dec
fisubl
daa
repz
ljmp
sbb
mov
mov
dec
dec
aad
cmp
and
pop
outsl
or
cmp
sub
xchg
idivb
subl
popf
pop
mov
mov
or
adc
imul
movsb
les
or
push
mull
pop
xchg
pop
jns
scas
push
sub
in
xchg
cmp
and
inc
cwtl
push
leave
inc
add
ficoml
mov
or
dec
and
pushf
cli
push
scas
cmp
xor
rcrl
pop
mov
or
je
rcll
pop
dec
ja
stos
xchg
and
daa
mov
out
add
sbb
jne
scas
fisubrs
cmp
scas
pop
push
subb
mov
adc
pop
lret
lock
aad
lahf
cmp
sub
mov
out
adc
mov
xor
cld
xor
data16
and
fisubrs
add
sbb
pop
lret
sub
sub
dec
push
inc
cmp
jno
pop
scas
mov
add
les
test
mov
bound
test
out
pusha
rcl
or
or
sbb
movsl
fmul
pop
leave
push
daa
sti
iret
mulb
jmp
jle
xor
cmp
movsl
cmp
pop
dec
sbb
ljmp
or
jnp
pop
scas
shll
dec
jb
mov
lods
jns
and
stos
and
mov
es
or
pcmpgtb
hlt
mov
adc
in
insb
sub
xchg
imul
jp
cmp
lcall
nop
cmove
arpl
sub
loopne
cmpl
inc
jmp
jns
scas
aad
dec
repz
push
cmp
push
cmp
pop
rol
es
sub
je
les
arpl
or
stc
popf
out
jo
je
cmp
lods
pop
sub
into
mov
data16
das
sub
add
inc
std
call
adc
into
enter
inc
add
sahf
aad
jmp
les
fmuls
add
inc
andps
pushf
stos
jp
pop
push
add
and
cmp
push
xchg
cmpsb
in
icebp
inc
pop
mov
stos
pop
sub
repz
inc
mov
push
fwait
sub
cmp
and
stos
sub
pop
dec
sbb
hlt
jmp
cmp
negb
lret
divl
xchg
loopne
adc
pushf
pop
sub
mov
outsl
mov
data16
and
setp
ss
jbe
outsl
mov
inc
lea
mov
inc
rcrb
pop
movb
test
jae
xchg
pop
icebp
mov
insb
mov
enter
stc
pushf
push
ret
clc
mov
lret
leave
loope
push
pop
icebp
jne
sub
pop
sbb
jb
pop
loop
scas
dec
or
mov
lods
push
shrl
hlt
jne
into
pushf
cmp
jno
repz
pop
out
mov
inc
push
sub
sbb
lret
popf
mov
xchg
aad
test
jae
aam
xchg
mov
les
lcall
hlt
in
pop
jae
je
mov
imul
mov
fwait
adc
adc
dec
jno
es
das
xor
in
cli
loope
mov
add
pusha
lret
into
popf
mov
out
sbb
lods
cmpsb
xchg
dec
insb
aam
mov
jmp
fistl
scas
popf
data16
cmpsl
adc
push
iret
add
ljmp
sahf
ds
outsb
out
pop
mov
test
lahf
xlat
adc
and
sahf
xchg
imul
pop
insb
pop
sbb
mov
pop
inc
fists
lret
push
dec
adc
aad
dec
nopl
jns
pusha
inc
sub
out
into
mov
nop
jne
and
xchg
test
inc
pop
adc
xchg
push
mov
dec
mov
sbb
and
dec
outsb
mov
push
jmp
stos
or
insl
cltd
pop
iret
cmp
scas
inc
lcall
push
jb
add
push
aaa
fsts
dec
enter
pusha
xor
cmpsb
icebp
in
mov
push
ja
add
fistpll
sub
rorl
out
dec
in
loopne
mov
cmp
inc
or
test
xor
pop
jb
or
aaa
or
out
push
test
ljmp
push
ficoms
mov
cmp
lock
jp
leave
cmp
ds
push
pushl
data16
popf
sar
lret
sbb
scas
adc
or
pop
pop
clc
cmp
or
push
pop
dec
imul
push
mov
in
sbb
and
ret
dec
adc
and
dec
and
mov
fidivrs
loop
repnz
adc
dec
push
je
jns
jns
fidivrl
and
pop
incb
fsts
mov
lock
push
jb
pop
sti
outsb
dec
out
lahf
popa
sbb
loopne
faddl
cmpsl
std
ss
pushf
test
xchg
dec
ret
out
inc
aaa
jle
sub
inc
add
ljmp
fcmovu
repnz
je
xchg
xchg
pop
lret
or
shr
rcll
mov
cmc
dec
mov
movsb
pop
leave
mov
out
loope
call
lods
mov
das
jmp
clc
adc
rol
out
aas
movsb
pop
ja
xchg
mov
sub
stos
rolb
inc
fadds
aam
sbb
sub
out
es
fisubs
mov
ja
popl
fsubrs
cltd
sbb
lods
scas
xor
jne
dec
jmp
fstpl
fistpll
lods
aam
and
cli
jp
push
loop
scas
fistpl
rorl
jmp
adc
mov
aam
hlt
dec
jb
js
mov
mov
push
out
mov
xchg
xchg
ljmp
cli
cmp
aad
shll
dec
pop
mov
sbb
ret
pop
dec
dec
mov
push
in
xor
xchg
and
sbb
jo
loopne
adc
xor
popfw
aas
leave
push
lret
sbb
ret
adc
cmc
outsl
scas
sbb
mov
roll
jne
lret
popl
mov
push
js
jmp
pop
mov
ret
bound
inc
or
mov
cmc
or
test
mov
pop
cld
sar
loop
jecxz
adc
bound
popa
jg
push
andl
mov
cli
test
push
adc
lea
popa
jl
fdivrl
cwtl
pop
jno
mov
in
adc
cld
mov
xchg
jb
cltd
fucomi
into
push
dec
xchg
scas
fldl
inc
movsb
push
jne
sub
in
sub
and
cmp
out
adc
pop
xlat
xor
mov
hlt
push
cmp
ffreep
mov
jne
in
ret
lret
pop
and
add
xchg
mov
mov
out
mov
je
popa
fwait
aas
jmp
adc
sarl
imul
mov
mov
push
leave
add
mov
or
leave
pop
dec
pushl
mov
mov
fwait
xor
push
fldenv
add
mov
cs
push
mov
sti
mov
push
pop
leave
nop
add
add
or
jg
mov
movsb
push
cld
mov
push
cltd
and
cmp
pushf
idivl
sbb
jmp
sbb
insb
dec
popl
lds
sub
dec
test
stos
push
ret
jno
std
sti
dec
mov
fistpll
fcmovnbe
test
push
cmp
and
cmpsb
jnp
push
jnp
jl
rcrb
mov
notl
out
andb
movsb
adc
xchg
mov
pop
mov
or
xchg
rorl
ret
sahf
movb
mov
and
mov
sbb
jp
imul
dec
int
pop
ljmp
pop
sarl
dec
cmpsl
out
add
cmpl
push
mov
jle
xchg
movsl
or
jb
or
or
or
inc
xorb
and
xor
pop
hlt
sbb
adc
je
insb
mov
divl
jg
xchg
jmp
insl
faddl
xchg
out
jge
add
jmp
and
fidivrl
jo
inc
imul
push
mov
sarl
push
inc
in
das
push
jge
mov
insl
cwtl
ja
cmc
adc
movsl
push
repz
sub
mov
nop
xorb
or
das
cmp
out
shlb
jmp
clc
mov
std
add
gs
adc
js
shrb
mov
into
mov
scas
in
daa
pop
jnp
cld
loope
out
loopne
sbb
pop
insb
in
pop
enter
pop
int3
in
dec
out
arpl
popa
pop
push
hlt
into
mov
mov
cltd
in
push
in
shrb
aam
sub
mov
adc
mov
jecxz
sbb
adc
cmp
push
mov
xchg
lret
insb
lods
into
lcall
out
cmp
jnp
fsts
mov
sub
jo
ss
xchg
andb
outsl
fmuls
and
loop
ds
sbbl
in
or
mov
lret
cld
jne
and
test
or
addr16
add
lock
imul
hlt
in
pop
addl
mov
dec
pop
test
xchg
xlat
or
pop
add
pop
cmp
rorb
inc
xor
lea
push
fistl
bound
nop
inc
test
mov
mov
and
add
lods
call
adc
outsb
xchg
xchg
shll
sub
dec
jge
jns
or
and
mov
dec
xor
mov
push
fdivr
daa
push
movsl
add
mov
or
cld
shll
push
int3
cmp
cs
push
jp
stc
inc
cli
or
in
sbb
or
movsb
loope
pop
mov
and
in
subl
fwait
adc
xchg
and
scas
insb
in
enter
xor
push
push
xchg
ljmp
subb
xorb
sub
out
jo
inc
aaa
stc
add
mov
pop
popf
push
cwtl
cwtl
jg
pop
mov
inc
mov
push
adc
or
and
cs
mov
and
repz
adc
shr
jnp
pop
add
ds
xor
lret
or
out
lds
outsb
aam
imul
les
out
cli
shr
pusha
pop
movsb
icebp
fdiv
dec
xor
jno
stc
aas
shrb
movb
dec
imul
addb
fcoml
lea
jno
shrb
or
scas
shr
into
lahf
outsb
test
arpl
sub
loop
cmp
adc
stos
xchg
pop
mov
xchg
sub
and
or
fcoms
movsl
fstpt
andl
scas
push
fisttps
xchg
push
mov
sbb
call
out
mov
mov
data16
mov
jl
or
outsl
dec
jo
sbb
mov
rorb
inc
jns
lods
cs
dec
imul
hlt
mov
dec
pop
inc
nop
mov
xchg
lret
push
cmp
mov
jge
jns
xchg
aaa
push
sbb
test
sub
jno
fstpl
cli
inc
xor
das
pop
push
mov
cld
jge
inc
push
out
cld
int3
fwait
shlb
xchg
and
sbb
inc
scas
loope
cmpsb
sbb
xlat
xor
jecxz
subb
and
jns,pt
int3
lods
jns
cmp
sbb
shrl
inc
gs
cmpsl
out
fsts
push
xchg
mov
jmp
xor
lahf
xor
popl
iret
ret
xchg
pusha
pop
outsl
gs
addr16
xor
mov
inc
push
xor
xchg
sbb
orl
inc
loope
add
leave
inc
sub
das
xor
dec
aad
mov
and
and
jecxz
jb
sbb
or
jecxz
aas
xchg
pushf
cmp
arpl
xchg
daa
out
ja
in
push
mov
inc
ficoms
adc
loop
xchg
addr16
loop
test
fcomi
push
xor
adc
mov
adc
mov
cmp
mov
cmp
mov
push
jno
add
mov
stc
mov
push
push
in
int
inc
mov
cmc
sub
inc
push
lods
add
std
cmp
addr16
sarl
push
daa
mov
test
jno
lods
lret
loope
mov
or
inc
sti
cs
pop
into
bound
xchg
pop
inc
sbb
adcb
mov
mov
jae
fs
mov
jbe
xor
mov
pop
mov
inc
mov
lahf
jo
dec
pop
dec
push
nop
jp
inc
mov
divl
rcrb
mov
mov
push
xor
data16
mov
jle
jp
cltd
sub
xchg
or
push
mov
sbb
rcrb
pop
aad
je
ja
fwait
cmpsb
mov
sbb
cmp
stc
lahf
jnp
outsl
ds
mov
mov
sub
mov
cld
dec
xchg
bound
pop
mov
and
mov
das
rcll
andl
adc
pop
and
adc
movl
cwtl
test
imul
and
aad
jnp
mov
push
aad
aas
sbb
mov
out
pop
cmp
hlt
push
pop
mov
add
mov
sub
jl
daa
inc
sbb
les
mov
xor
lret
lret
sub
jp
ja
aas
adc
or
int
pop
xor
and
outsb
repnz
xor
clc
lea
inc
sub
ret
repz
mov
loop
mov
cmpsl
sbb
cmp
rcrl
lods
aas
jo
pop
mov
jns
ds
shr
fldcw
jle
or
inc
mov
mov
clc
out
lret
out
icebp
lock
js
sbb
mov
add
rcrb
inc
xchg
cmp
mov
push
jge
jb
div
data16
mov
mov
jcxz
xchg
adc
sub
test
sahf
pop
inc
cmp
sub
icebp
mov
bound
sti
dec
xchg
loopne,pt
push
mov
push
add
jmp
fst
mov
or
es
pop
push
lret
bound
sbb
imul
pop
sub
inc
lea
cs
mov
sub
popa
mov
cmp
ds
decb
andl
test
mov
inc
outsl
imul
out
inc
mov
cli
inc
mov
stos
xor
jge
jmp
roll
cmp
shll
xlat
mov
out
xor
out
loop
sbb
mov
mov
mov
sbb
jnp
ljmp
aas
js
popa
cmpsl
mov
call
lds
jo
cmc
test
movsl
scas
mov
jg
les
stc
sub
dec
cmp
mov
sub
xlat
repnz
push
xlat
mov
jne
xchg
int3
out
je
ds
pop
pop
push
mov
pop
stos
push
int
jp
dec
nop
repnz
imul
sbb
lods
out
cli
cwtl
jg
imul
mov
cmpsl
mov
add
add
cltd
rorl
pop
mov
jmp
andb
ss
pusha
js
out
subb
imul
mov
xlat
jo
push
adc
pushf
jecxz
inc
nopl
inc
mov
cmp
neg
and
test
fldenv
sub
in
add
mov
mov
pop
fbld
out
leave
dec
mov
addr16
and
lahf
sbb
clc
arpl
mov
pop
not
cmpsl
add
gs
jg
cmp
lret
stc
outsl
add
cmp
test
fwait
clc
out
cmpsb
mov
dec
push
out
movb
loopne
mov
rolb
jl
jge
add
pop
push
ja
mov
sahf
dec
ljmp
cmpsl
xchg
xchg
mov
scas
jnp
sub
xchg
out
rcr
add
xchg
mov
pop
leave
js
mov
mov
lahf
jnp
in
rorb
push
scas
scas
dec
addr16
jge
loope
stos
pop
aad
push
xor
push
mov
sub
or
std
cld
ror
add
cmp
inc
cld
adc
pusha
inc
push
and
fildll
lds
sti
into
mov
int
xchg
repz
cld
jo
notb
add
sbb
cmp
popf
psubd
cmpsl
cmp
stos
jp
adc
pop
rcrl
je
add
xchg
daa
rcrb
add
and
mov
add
and
outsb
cmp
xchg
pushf
pusha
push
sbb
mov
and
mov
mov
inc
mov
icebp
lds
xchg
shll
mov
cmp
lock
gs
push
add
lahf
dec
jnp
add
cmpsl
loope
sbb
cmp
pop
cli
mov
dec
or
fdiv
sbb
fadds
ret
xor
lods
decb
inc
ret
and
push
pop
fnstenv
sti
jno
ret
icebp
je
mov
cltd
lea
sarb
shr
in
or
popa
jg
bound
repz
mov
mov
rcr
bound
xchg
lock
adc
push
loope
ret
test
lea
out
inc
cwtl
loop
jp
loopne
xchg
shlb
es
and
insl
rcrl
push
sbb
mov
ret
sbb
xchg
xchg
adc
mov
jae
sub
add
jge
imul
inc
adc
movq
mov
icebp
test
loopne
test
xchg
xor
mov
mov
mov
jmp
push
add
pop
mov
sbb
sub
jae
dec
popf
outsl
push
add
decl
xchg
test
je
je
incb
in
pop
addr16
insl
push
jnp
push
inc
xchg
or
mov
bound
mov
sub
loopne
aam
mov
jne
mov
xor
outsl
pop
pop
loope
jge
mov
add
mov
mov
addr16
add
xchg
aad
push
and
add
or
jmp
sub
call
jmp
aaa
dec
xor
sbb
sbb
aad
jle
push
push
pusha
adc
push
mov
aam
xchg
scas
stos
orb
cmp
jb
mov
adc
mov
jle
inc
add
mov
xchg
outsb
ret
xchg
insb
xor
outsl
in
dec
xchg
xchg
idivb
xor
cmp
andb
pusha
cltd
imul
adc
loopne
inc
int3
gs
sbb
mov
sub
js
adcl
in
sub
xor
rcl
mov
xlat
jl
movsb
ret
filds
mov
lcall
stos
mov
push
sarl
mov
test
xor
enter
cld
mov
loop
dec
mov
mov
xor
xchg
int
imul
add
and
hlt
pop
and
xchg
addl
pop
pop
pop
mov
mov
mov
arpl
std
xor
xchg
data16
jge
xor
mov
sub
insb
mov
enter
add
mov
in
and
scas
stc
mov
push
call
lea
mov
xchg
loop
mov
cmp
sahf
mov
adc
or
jo
inc
es
test
das
add
pop
push
mov
or
faddp
xchg
outsb
xor
xchg
arpl
ret
popf
test
push
adc
sahf
xchg
push
andb
nop
lahf
sahf
cwtl
sub
fnstsw
shr
outsl
adc
jo
inc
add
xchg
test
push
add
jge
xlat
loope
inc
in
pusha
fcoml
xchg
mov
sub
insb
lret
jle
xor
std
mov
fwait
sbb
dec
stos
out
inc
add
fadd
out
mulb
add
cwtl
cmpsb
inc
adc
mov
mov
dec
inc
call
push
ss
pop
mov
lds
inc
popf
and
add
rclb
cmpsl
test
loopne
pop
mov
or
inc
decb
add
pop
fstps
push
jecxz
push
stc
insl
imul
xor
aaa
maskmovq
cmp
sub
scas
jecxz
adc
inc
dec
movsb
in
arpl
ss
sub
cmp
cmp
pop
jmp
mov
orb
cmp
xchg
addr16
test
ficoms
xchg
fcompl
divb
hlt
cmc
ds
jno
icebp
xchg
jae
sub
jl
fucomp
push
jecxz
ljmp
mov
mov
sub
sbb
mov
roll
cs
mov
xchg
std
pop
xchg
inc
pusha
out
xor
dec
fadds
cli
popl
cmp
enter
xchg
xchg
decl
hlt
add
or
insl
mov
jecxz
scas
cmp
xchg
jp
xchg
cltd
imul
es
popa
fwait
pop
addr16
in
ljmp
and
push
hlt
mov
jb
nop
and
push
lea
enter
popa
lock
js
dec
xor
loopne
and
je
insb
ret
mov
enter
loopne
ud2
push
sbb
pop
sbb
pop
insl
subl
push
inc
in
out
xchg
repz
xlat
cmpb
cmp
repz
lcall
jno
out
fcomi
xchg
pop
dec
dec
add
fwait
xchg
pop
dec
mov
mov
push
gs
les
jge
pop
mov
ds
scas
ds
push
push
push
jno
cmpsl
dec
fs
xchg
sub
xor
das
lahf
or
mov
cmp
subb
mov
inc
ja
mov
inc
adc
andl
and
sbb
iret
jle
sub
iret
jo
pop
push
test
fistpl
jmp
and
rclb
stc
inc
lret
test
jnp
lds
repnz
out
push
rorl
lret
cmpsl
divb
out
data16
sbb
pop
add
sbb
into
gs
mov
xchg
hlt
movsl
enter
jnp
pop
jge
jg
popl
ffreep
push
xchg
push
mov
pop
xor
loop
arpl
and
js
ljmpw
dec
adc
test
add
dec
sub
gs
imul
nop
fwait
or
push
movsl
aam
adc
loop
mov
mov
jg
mov
jl
xorb
add
lds
inc
cmp
jle
out
adc
sahf
push
or
xchg
or
test
jae
pop
into
stc
sub
sbb
sub
mov
scas
icebp
jmp
fsubrp
lcall
inc
cmp
addr16
fsub
clc
jp
pop
cmpsb
imul
cmp
ret
stc
jnp
dec
mov
push
icebp
push
dec
or
jae
sahf
test
pop
movsl
idivl
in
pop
mov
adc
jb
mov
dec
ret
scas
push
clc
in
mov
std
or
sub
lahf
cld
repz
mov
xchg
pop
rcl
negb
push
xchg
cmp
push
and
mov
leave
daa
subb
inc
jle
pushf
stc
xchg
loope
cmpsl
push
push
sbbl
and
jp
fmuls
pop
add
sti
add
lock
in
pusha
dec
push
ljmp
xor
xor
jl
and
loopne
in
dec
pop
mov
sub
sub
mov
iret
cmp
popa
sbb
pop
rcr
pop
lret
xor
test
shll
add
cmc
jbe
data16
jp
and
mov
fs
and
adc
or
sub
or
sahf
ja
pop
inc
int3
push
test
or
mov
mov
jbe
mov
ret
dec
fdivp
xor
lahf
sbbl
sub
dec
xor
xchg
stos
xchg
filds
push
lds
inc
push
into
xlat
aas
mov
sbb
xorl
aaa
lret
hlt
pop
ja
shr
into
dec
cmp
xchg
les
mov
aas
and
push
into
in
mov
pop
sbb
pop
jmp
jnp
aad
imul
cmpsl
lds
rcr
aam
mov
fwait
insb
jns
lahf
stos
add
jmp
xorb
popf
or
mov
fwait
insb
push
and
cld
test
mov
cmp
bound
int3
adc
push
repz
fs
push
xchg
stc
rclb
mov
lock
popf
int
xor
sub
enter
pop
xor
adc
cltd
cmc
jecxz
sub
inc
icebp
and
push
movups
xchg
sub
in
jmp
push
leave
lds
xor
popf
push
adc
inc
faddl
jno
jnp
pop
push
xchg
shlb
pusha
or
pop
and
mov
inc
movsb
xchg
iretw
push
mov
mov
fwait
push
mov
test
jp
pop
pop
nop
dec
add
rcrl
ror
jae
and
in
xchg
sbb
jecxz
int
es
jl
fidivs
dec
popf
lds
pop
cmpsl
push
xchg
shrl
add
movsl
rorb
in
lret
xor
rcr
sbb
push
cmp
in
lock
fldenv
pop
movsl
mov
jns
push
insl
inc
adc
pop
insb
cltd
mov
and
sbb
xchg
js
xor
ret
std
xchg
pop
push
out
rcrl
and
cmpsl
jp
push
imul
cwtl
cmpsb
mov
pop
cmp
mov
je
call
out
jmp
pop
lcall
xchg
jbe
sti
imul
jg
adc
fwait
scas
inc
sbb
pop
idiv
jmp
fcoms
and
stc
xchg
lock
enter
test
mov
cmp
lods
mov
add
xchg
ds
aad
cmp
cwtl
mov
sub
jns
in
negl
lret
or
lahf
outsl
inc
lods
and
jb
jmp
leave
sub
sbb
push
loopne
rorl
inc
bound
pop
push
sub
ljmp
inc
mov
pop
incl
pop
push
aaa
dec
das
nopl
pop
sub
pushf
inc
mov
push
nop
jnp
lret
jmp
mov
and
pop
lcall
lahf
loope
out
loope
inc
push
fildl
dec
jmp
jb
xor
cli
sbb
outsl
pop
inc
test
or
shrb
inc
ljmp
pop
xchg
les
mov
pushf
leave
xchg
test
imul
add
and
lds
insl
frstor
jno
aam
xor
loope
cltd
sbbb
and
mov
ret
dec
push
push
inc
push
daa
movb
sti
or
hlt
jmp
mov
or
adc
jge
adc
shl
call
outsl
sti
mov
xor
out
inc
aad
insb
enter
mov
in
inc
push
sbb
xchg
in
into
incb
pop
add
mov
lods
sbb
rcrb
cmpsb
sahf
mov
shrl
push
outsl
add
movsl
mov
es
dec
pusha
sbb
pop
adc
data16
outsb
xor
jg
popa
daa
mov
xchg
imul
adc
or
xchg
cmp
aas
adc
enter
mov
and
fmull
fld
cld
xor
subb
loope
in
inc
mov
xor
mov
das
mov
ficomps
jle
push
push
mov
adc
sub
push
outsl
fistps
jmp
dec
loopne
or
popl
aam
int3
push
sub
push
insb
and
arpl
dec
jge
add
mov
pop
and
dec
imul
mov
ja
imul
popf
sbb
mov
add
mov
push
jb
lcall
add
sahf
add
shrl
xchg
push
fstl
out
gs
mov
push
je
insl
add
sub
xchg
aam
andb
xor
js
mov
imul
inc
repz
lods
cmp
jns
cmp
jl
mov
sub
cmp
push
pop
sbb
xor
test
popa
aam
sar
push
int3
es
fwait
pop
leave
push
jae
add
fdivl
cmc
inc
xlat
xor
ss
cmpsl
es
xlat
movsl
fwait
sub
push
cmc
and
dec
bound
mov
push
popf
shl
imulb
xlat
cltd
inc
jmp
lods
pushf
pop
xor
rcl
enter
ss
or
clc
lret
repnz
cmp
lret
je
xchg
sbb
iret
mov
shlb
and
lea
cmp
adc
pop
jne
nop
cmc
sub
xchg
adc
or
xchg
cmpsl
in
nop
stos
push
add
mov
ja
fadds
dec
std
dec
sbb
stos
add
pop
cmp
stc
ja
out
data16
mov
mov
lods
dec
sti
outsl
outsb
sub
push
and
pop
loopne
jno
jno
inc
scas
icebp
test
lret
lock
test
mov
pusha
dec
mov
pop
inc
loope
or
iret
lods
lods
fsub
test
cmpsl
sti
xor
xchg
call
add
fldl
addr16
and
ss
jbe
cmp
inc
divb
sub
ja
jge
or
inc
loopne
mov
jne
sbb
sub
cmp
sbb
sbb
mov
stos
aad
insb
pop
int3
or
lahf
lock
pusha
js
nop
out
cmp
les
pop
cmpsb
lods
xchg
out
and
int
psllq
pushf
mov
dec
outsb
push
out
pop
xor
ljmp
lock
mov
or
pop
pop
jae
dec
popa
inc
in
jecxz
pop
xlat
push
sahf
sub
mov
stos
fisubrs
push
pushf
test
adc
dec
sub
daa
sbb
out
outsb
sub
shll
jnp
test
dec
test
sub
imull
sub
iret
lods
xchg
inc
cmpsb
loopne
jp
dec
xor
fcoms
jle
test
flds
sub
call
ds
sbbb
aad
pusha
scas
add
or
jns
or
push
adc
xchg
sbb
clc
jmp
sbb
jmp
mov
jmp
imul
out
sub
sub
dec
aad
hlt
sub
movsl
inc
dec
clc
imul
inc
dec
inc
inc
xchg
in
xchg
pop
push
repz
cmp
gs
jmp
cmp
rcrl
push
inc
jnp
orb
or
push
lods
outsb
ss
mov
loopne
and
call
jmp
xor
jns
mov
fcomi
in
int
pushf
aam
xor
outsb
test
cmc
dec
or
loope
into
cmp
mov
std
inc
sahf
divl
push
inc
jecxz
enter
lahf
dec
jne
shl
cltd
and
in
cmp
bound
pushf
mov
cmp
call
jmp
aam
lds
jnp
out
inc
divl
popa
push
or
mov
shll
jge
in
mov
incl
fcoms
ja
int
mov
pop
outsl
xchg
xchg
jae
movsl
lea
js
in
imul
or
pop
scas
jo
rolb
inc
jle
or
inc
test
int
dec
mov
inc
lret
adc
fwait
call
push
sti
daa
mov
ljmp
roll
or
dec
push
jb
inc
shll
insb
inc
push
pop
push
scas
das
xorl
xchg
add
enter
dec
add
push
fisttps
sahf
fistpl
les
jbe
test
xchg
push
sbb
ljmp
lock
add
xchg
jno
inc
lds
mov
jle
lcall
inc
push
mov
adc
fdivr
out
out
jnp
pop
mov
sbb
or
pop
push
pop
or
mov
mov
fistpll
shrl
imul
into
gs
mov
push
and
das
xor
xchg
pop
notl
mov
push
pop
jecxz
stos
push
fcmove
mov
xchg
or
mov
xlat
rorl
jo
xor
inc
shlb
xchg
in
xchg
or
or
adc
insl
fdivrs
jae
popf
jle
or
adc
ss
or
and
xchg
mov
or
rorb
leave
add
int
stc
cmp
adc
cmp
ficoms
sbb
insl
xchg
pushf
mov
adc
ja
jg
mov
push
xorb
add
push
cs
lea
dec
adc
cmpsl
push
add
dec
in
sete
mov
adc
sbb
mov
ret
cmp
lret
mov
mov
mov
mov
and
repz
xor
jae
jne
push
pop
and
ja
hlt
mov
fstpt
popf
xor
int
push
add
in
xchg
mov
mov
dec
push
sub
in
xchg
cmpsb
sahf
test
cmp
jne
mov
cwtl
cmpsb
imul
in
adc
out
mov
cmp
add
sti
pop
jl
dec
push
inc
lahf
mov
inc
mov
dec
xchg
rorb
pop
ja
dec
insl
scas
loopne
mov
xor
je
sub
pop
repz
pop
mov
int
mov
dec
stc
lods
pushf
into
repz
test
sahf
or
repnz
das
test
movsb
and
sbb
or
ja
mov
sbb
push
aas
push
and
fiaddl
and
pop
lahf
fimuls
fwait
ret
xchg
aas
neg
mov
mov
rorb
pop
movsb
inc
sub
mov
pushf
jnp
and
mov
xchg
js
pop
xchg
cmp
adc
jns
mov
in
arpl
loopne
pop
mov
mov
loopne
pop
or
bound
es
xor
sti
jl
dec
xlat
jns
movsb
data16
iret
mov
mov
xor
out
sub
or
mov
cwtl
sub
pop
cmpsb
ret
in
push
fildll
icebp
scas
pop
dec
sub
iret
lret
jbe
clc
ss
aas
sub
pusha
int
stos
jl
dec
and
cmpb
mov
jl
lret
push
ret
je
mov
mov
cld
iret
mov
xor
mov
push
pop
lcall
push
mov
popf
shl
dec
lcall
sar
lds
aad
and
cltd
ffree
push
mov
xor
or
pop
leave
xor
aam
xor
or
mov
xorb
movd
inc
fwait
adc
add
loope
inc
test
aad
fsubl
mov
js
rcrb
or
addl
insb
rol
movsb
inc
daa
ficomps
test
adc
lds
mov
or
popf
inc
repz
pop
aas
loop
and
inc
adc
sbb
sbb
add
mov
dec
int
iret
into
push
cld
jo
xchg
ficomps
mov
sub
fwait
sub
hlt
ds
divl
xchg
mov
mov
adc
movsl
xor
xchg
dec
rorl
push
imul
in
dec
jmp
sbb
xchg
iret
lret
stc
pushf
bound
shlb
fs
adc
sahf
aaa
push
dec
push
jp
sti
pop
add
mov
lds
cmc
pop
push
pusha
repz
push
cmp
mov
hlt
pop
push
enter
jb
xlat
pop
and
inc
sbb
jns
popa
mov
into
adc
arpl
pop
sub
xlat
and
cmp
push
aam
rclb
cmp
rorl
jmp
aas
xor
or
dec
aad
mov
cld
sbb
xchg
push
or
push
std
lret
inc
clc
sub
fs
insl
arpl
sbbl
in
fadds
inc
stos
pop
cmpsl
ret
mov
xchg
ja
inc
lds
mov
mov
repz
cld
in
sub
dec
inc
sbb
insl
test
and
jns
je
inc
loop
stc
out
orb
cs
lods
and
push
stc
rorl
fisttpll
addr16
jle
dec
inc
gs
cmp
xor
mov
insb
test
dec
mov
xchg
push
sti
test
jecxz
mov
out
pop
add
cmpsb
pushf
add
jg
dec
orb
jmp
sub
in
testl
adc
popl
stc
xor
lcall
push
jns
jnp
and
push
dec
fadds
xor
lds
aas
je
imul
cmp
insb
xchg
xor
mov
inc
aam
leave
iretw
xchg
aaa
lods
clc
and
outsb
xor
adc
push
xor
pop
sahf
daa
lock
jns
aad
jecxz
xchg
sub
int3
icebp
mov
addr16
cmp
test
notl
mov
jo
xor
out
test
cmp
sub
icebp
std
repz
adc
adc
xchg
cwtl
add
jp
mov
dec
fmull
push
or
imul
mov
fwait
test
cmp
test
in
mov
cmp
enter
pop
pop
pop
mov
mov
in
push
ret
loop
and
mov
and
xchg
cld
sub
xor
pop
inc
mov
int3
add
and
or
xchg
jb
or
rorl
xchg
shll
sbbl
or
in
sbb
xor
push
mov
xchg
scas
pop
cmc
mov
je
movsb
test
lods
cmc
push
or
repnz
push
adc
dec
lahf
jae
in
out
popa
cmp
or
and
stos
and
xor
pop
hlt
lea
mov
mov
pop
pop
xor
ss
fdivl
push
mov
or
daa
fsubl
mov
mov
sbb
repnz
mov
add
jle
and
inc
or
shlb
test
std
rclb
loopne
jmp
xor
js
shll
xchg
bound
nop
ret
mov
mov
jno
cmp
dec
cmp
dec
inc
jnp
cld
jmp
mov
cltd
jecxz
pop
inc
popa
arpl
outsl
pop
lock
ss
sbb
ss
adc
pop
scas
jns
ljmp
sub
xchg
pop
shlb
das
inc
mov
das
push
push
faddp
sub
pop
rcll
dec
pop
daa
outsb
mov
xor
sub
push
xor
in
mov
out
pop
insl
mov
aam
and
or
push
xorb
dec
xor
xchg
mov
push
std
clc
jb,pn
push
test
fnstsw
adc
outsb
imul
imul
mov
clc
aas
pop
imull
icebp
enter
add
cmp
clc
push
add
nop
sbb
dec
inc
js
arpl
daa
scas
xorb
fdivs
mov
or
or
mov
xor
adc
adc
add
fistps
add
and
insl
push
adc
pop
and
jg
mov
cmpsl
xchg
adc
jae
dec
jbe
pop
adc
pop
lcall
cmp
mov
mov
push
daa
jbe
test
les
repz
fmull
in
jnp
popa
sbb
jl
inc
ret
jg,pn
out
pop
sub
add
orl
popa
shlb
pop
imul
cmc
mov
lods
incb
ja
shll
out
xchg
rorl
aas
and
sarl
jb
mov
add
push
inc
bound
jne
mov
sub
and
ret
jno
sbb
scas
sbb
mov
jp
test
testl
fisttpll
fwait
xor
mov
jne
and
scas
xchg
jl
inc
mov
sub
add
add
and
push
les
cmp
dec
adc
xorl
cmp
cmp
jg
iret
xchg
outsl
pop
mov
jae
mov
loopne
mov
dec
bnd
popf
add
nop
xchg
and
mov
or
dec
xchg
cmpsb
pop
xor
jmp
or
mov
mov
inc
dec
mov
mov
sub
add
mov
mov
ret
jecxz
fldl
xlat
std
outsb
jp
adc
and
xor
push
pop
jecxz
lods
je
subb
jo
movsb
jbe
ljmp
fsubl
mov
paddsb
popf
cmp
add
int3
addr16
mov
hlt
repnz
push
push
mov
sbb
jl
inc
add
popa
push
or
add
rcr
clc
mov
xor
outsb
sbbl
cmpsl
push
scas
sub
mov
daa
icebp
les
or
fisubs
cmp
pushf
ret
and
mov
test
ja
in
int
out
idiv
test
jl
pop
mov
dec
cltd
rcr
xor
sahf
cmc
lret
loopne
mov
cmc
popf
cmpsb
cmp
arpl
and
not
push
dec
sub
scas
add
int3
cs
in
decl
scas
bound
sbb
rol
cs
popa
orl
adc
sub
xlat
mov
call
test
xchg
adc
inc
push
xchg
andb
add
icebp
mov
jmp
sbb
stos
xor
push
loopne,pt
or
mov
orb
push
mov
nop
xor
mov
or
faddl
or
popf
cmpsl
xlat
testl
mov
arpl
repz
stos
and
lods
xchg
cmp
and
sub
sub
push
pop
aaa
rcrl
sbb
movb
out
stos
pop
nop
outsb
cmpl
in
inc
mov
adc
test
jnp
cmp
adcb
iret
in
mov
insl
es
jns
xor
sti
arpl
lods
push
sti
inc
dec
dec
loopne
inc
mov
out
xchg
xchg
fstpl
push
inc
jecxz
mov
inc
dec
push
dec
mov
xchg
sarb
jnp
mov
aas
add
call
push
mov
or
addr16
ficomps
or
and
and
xor
call
hlt
adc
cltd
test
arpl
lods
aad
pusha
xchg
repz
pop
mov
mov
sahf
out
push
xchg
jno
push
jae
xor
sub
icebp
push
ret
dec
lds
push
sub
pop
pop
shrl
mov
aam
adc
or
shlb
push
xchg
sti
jbe
or
imul
test
clc
dec
scas
mov
sahf
lods
xchg
xor
lods
popa
das
cmova
dec
insb
cmp
add
out
mov
fisttps
sub
pop
jp
mov
dec
leave
xor
sub
outsl
mov
je
test
loop
ljmp
ja
mov
stos
ljmp
or
mov
mov
std
mov
cwtl
hlt
daa
cli
fwait
arpl
and
xor
lcall
cs
mov
push
pop
mov
test
fdivrl
jae
in
es
je
push
push
sbb
xor
pop
je
int
dec
pop
adc
pop
movsb
push
fucomi
cmp
xchg
sub
aas
fstps
ficoml
pop
xchg
dec
stc
sbb
pop
popa
daa
push
ret
dec
jg
notb
lds
jle
cmp
stc
out
push
xor
sbb
out
cmc
int
jcxz
dec
push
push
jae
das
outsl
pop
fldl
jno
and
cwtl
shll
mov
push
int
loopne
dec
mov
orl
repnz
jno
imulb
lahf
mov
jmp
ja
push
jbe
test
addr16
das
adc
or
and
loopne
mov
pop
in
imul
cltd
into
add
and
addr16
inc
cmp
xchg
sbb
lret
fwait
or
jnp
xchg
clc
mov
int
jle
imul
gs
loop
test
xchg
jmp
lcall
js
and
or
push
outsb
pop
inc
rclb
xchg
arpl
fdivrs
int
lret
loopne
adc
dec
out
sti
xor
hlt
adc
sar
ss
mov
jns
mov
icebp
les
ja
mov
jbe
jl
mov
mov
ror
dec
stos
sbb
jl
push
int
pop
sub
das
sbb
push
aam
cmpsl
or
ja
push
aad
inc
das
or
outsb
test
ds
and
imul
dec
adc
idivb
dec
mov
jge
jmp
loopne
scas
pop
pop
inc
stos
repnz
dec
mov
mov
sbb
xchg
xchg
push
out
or
mov
fiaddl
rcll
mov
scas
aad
mov
inc
mov
lods
cltd
fdivp
push
fmull
cltd
sbb
pop
jno
adc
jnp
push
inc
mov
jb
xchg
sbb
out
outsb
shlb
xor
pop
movsb
test
adc
xor
test
xor
movsl
js
movsb
notb
repz
lods
lcall
or
aaa
add
mov
and
insl
inc
in
movsb
xchg
dec
xor
repz
ret
sub
xchg
jg
inc
div
fwait
sub
cmpsb
fbld
sbb
cmp
insb
ret
sub
cmp
inc
mov
sbb
sub
push
push
push
push
cmp
shlb
jecxz
stos
and
sbb
cmpsb
insl
xor
jecxz
dec
mov
imul
rolb
inc
test
xchg
adc
fisttps
pop
cs
push
cmp
arpl
into
dec
mov
adc
aas
fcompl
mov
ret
lcall
and
shrd
popf
pop
pop
inc
gs
loop
adc
lcall
push
sub
push
mov
sub
in
fistpl
pop
insl
subb
in
aam
sbb
sub
lods
xor
push
or
mov
push
mov
addr16
mov
jl
sub
mov
loop
cwtl
mov
pop
test
mov
or
adc
push
hlt
mov
mov
jns
cltd
push
pop
cmpsl
pop
mov
adc
imul
xchg
clc
cwtl
mov
fwait
dec
inc
negl
sub
inc
dec
iret
add
adcb
or
and
jbe
add
pop
cmp
in
push
adc
mov
out
xchg
clc
add
xchg
xlat
and
dec
movsb
sub
mov
mov
jb
adc
and
jmp
add
xchg
je
icebp
stos
negl
fdivl
pop
jae
loopne
jne
add
aam
out
cmpsl
and
arpl
pop
idivl
lods
dec
dec
pop
or
cmp
fnsave
lret
xor
imull
pop
out
mov
ss
daa
dec
pminsw
and
sbb
inc
sbb
add
mov
cli
sbb
divl
adc
xchg
lcall
jg
mov
xchg
es
mov
pop
and
pop
mov
in
aad
mov
cwtl
movsl
stc
and
lods
push
xor
mov
mov
mov
sbb
or
fs
ret
xor
push
cltd
jge
push
xchg
xchg
daa
inc
pop
lret
stos
push
xchg
dec
dec
xor
bound
in
jne
sbb
pop
mov
fisttpl
test
mov
cltd
push
adc
cltd
cmp
lods
outsb
out
iret
add
adc
or
mov
xchg
xchg
pop
add
stos
aam
lods
pusha
daa
repz
adc
arpl
add
adc
mov
xor
inc
xchg
fstpl
push
mov
and
lock
cmp
jmp
pop
lds
ret
xchg
hlt
leave
push
movsl
pop
std
push
lcall
mov
aaa
push
stos
test
mov
push
cmpsl
int3
pusha
jge
pop
push
mov
pusha
test
or
cmp
hlt
jecxz
push
ret
loop
in
cmp
lret
or
fisubs
adc
inc
js
adc
dec
mov
xchg
outsb
ret
inc
jb
test
push
cltd
movsl
ds
popf
inc
scas
add
pop
std
mov
popf
cli
push
add
cwtl
icebp
sub
mov
insl
lods
mov
mov
mov
and
sub
xchg
andb
popa
fistps
pop
jo
cld
mov
pushf
lahf
imul
movsb
cmpsl
or
push
rcll
mov
cld
xchg
jmp
stos
cmp
cmp
lock
das
sbb
sahf
mov
push
mov
mov
dec
movsb
pop
out
insl
jmp
jo
inc
das
fisttpll
test
stos
lret
jg
adc
mov
mov
push
mov
xchg
dec
xchg
and
jo
mov
sbbl
bound
add
cwtl
or
hlt
mov
les
pop
icebp
xor
sbb
sub
mov
pop
push
mov
loope
xchg
lcall
push
pop
xor
es
sbb
movsb
fwait
int3
lret
jg
aam
mov
cmp
movsb
into
sbb
jge
int3
repz
sub
jmp
cmp
nop
add
xchg
dec
nop
sbb
mov
ja
es
adcb
push
adc
or
push
inc
cwtl
out
push
sub
mov
mov
cwtl
shlb
pop
int
ss
popf
fists
xchg
and
ss
int3
imul
outsb
int3
js
dec
mul
ss
aas
xor
stos
call
imul
scas
jp
imul
into
lock
test
mov
addl
mov
cwtl
fbld
adc
mov
jecxz
js
xor
dec
ja
std
iret
je
xlat
rcll
lea
xchg
mov
cld
jno
imul
mov
pop
sub
popf
and
das
or
jae
lret
xchg
je
fwait
sbb
outsb
cmc
jg
enter
and
iret
cld
arpl
mov
addb
push
lret
push
out
xor
cld
jne
pop
pop
jmp
cwtl
xor
mov
and
jecxz
sbb
ds
xlat
pop
mov
xchg
into
sbb
cmc
out
lcall
js
adc
push
jbe
mull
push
mov
add
jno
and
jo
xchg
jo
cmp
inc
jnp
push
fcomip
cmp
mov
add
add
nop
push
pop
and
sub
repnz
fsub
insb
push
stc
add
rolb
push
and
inc
adc
fdivrp
ljmp
or
push
mov
hlt
mov
loop
push
andb
fwait
insl
or
test
pop
xchg
test
jge
sub
mov
xchg
leave
adc
imull
in
inc
loopne
push
cmc
push
sub
inc
das
jae
in
push
inc
fistl
xor
jbe
int3
xchg
int
jge
inc
adc
fdivr
aas
les
out
jb
jle
sbb
or
scas
push
aas
lcall
mov
mov
daa
pop
in
push
push
add
roll
shrb
adc
fdivr
cmp
cmc
std
test
xchg
shll
lret
jae
dec
and
mov
fmulp
inc
cmc
mov
fcmovu
push
into
jl
loope
in
dec
test
clc
jp
rorb
mov
shrb
add
test
pop
dec
mov
test
imul
pop
mov
dec
mov
dec
lock
xchg
fmul
mov
xchg
mov
ret
cmc
mov
rol
jg
dec
sub
insl
add
stc
cltd
pusha
subl
mov
jge
dec
mov
test
pop
jecxz
into
adc
es
ret
pushf
inc
fldl
clc
add
dec
adc
movsb
jno
jnp
mov
aad
sub
cmp
add
adc
test
push
sbb
add
int
lods
aad
xor
mov
or
les
je
mov
roll
dec
adc
add
add
push
add
adc
xchg
xor
mov
fidivl
loope
out
ror
xchg
stos
pop
es
cmp
inc
call
adc
sub
movsl
fsts
sub
push
mov
ret
adc
xor
pop
int3
mov
xchg
pop
dec
adc
data16
mov
into
outsb
push
mov
lahf
leave
xor
movsl
sarb
lahf
out
jge
insb
mov
pop
inc
mov
cld
push
pop
push
adc
mov
movl
fimuls
outsl
lahf
nop
pop
cmc
inc
divb
push
xchg
xchg
xchg
hlt
xchg
mulb
fs
xchg
imul
add
or
sbb
test
cmp
scas
jne
pop
ret
ficoms
decb
shlb
mov
add
stc
divb
test
das
inc
sbb
cltd
cmp
push
xor
subl
repz
push
cmp
mov
xor
repz
popf
pushf
arpl
stos
inc
adc
push
cwtl
cmp
cltd
fdivl
or
movsl
push
cli
dec
xchg
mov
sbb
and
mov
ret
inc
sub
xchg
mov
inc
pop
inc
mov
sbb
imul
pusha
das
mov
not
mov
inc
out
mov
mov
stc
fisttpll
cmpl
repnz
in
push
addr16
fcomps
into
repz
pop
shr
icebp
mov
lock
xchg
aaa
imul
gs
cwtl
imul
repz
jne
or
ljmp
xlat
cmp
push
js
add
add
sub
stos
and
shl
leave
out
dec
xlat
dec
xlat
and
lcall
xor
inc
inc
arpl
stc
cmp
adc
push
jno
lret
xor
lahf
std
mov
scas
add
pop
jp
sub
lret
xchg
jae
mov
inc
jnp
jl
sub
pop
mov
addr16
cs
loope
add
mov
add
pop
insb
repnz
scas
add
insl
adc
jl
fldcw
add
adc
add
add
add
ljmp
jae
ret
cli
lock
sbb
clc
mov
cmpsb
movsl
sub
lea
pushf
add
nop
and
shr
pop
enter
iret
adc
add
xchg
repz
rol
hlt
sbb
stos
push
imul
and
jns
lret
cmp
aad
ljmp
dec
xchg
jae
pop
mov
cld
add
pop
dec
aad
inc
xor
sbb
inc
and
pop
pop
sbb
push
jg
cmp
push
and
loop
push
mov
jg
sub
movsb
inc
and
and
push
and
stc
jge
push
pop
inc
enter
fildl
pop
xor
add
js
into
and
adc
pop
push
es
mov
jbe
xchg
mov
xchg
fmull
or
pop
dec
dec
pop
enter
jo
into
repnz
loope
das
out
stos
ficoml
add
dec
jne
mov
mov
xchg
shll
xorl
pop
dec
adc
xor
aaa
mov
and
cli
mov
adcb
add
jnp
push
sti
mov
dec
rorb
sub
and
jae
pop
and
fwait
jno
lcall
rcll
pop
movsl
out
test
ret
leave
nop
inc
mov
ret
sbb
dec
fsubl
jl
pop
push
push
in
test
inc
iret
mov
fs
xchg
imul
lock
pop
pushf
xchg
in
mov
cmp
push
ret
lea
sub
movsl
mov
xor
mov
jnp
insb
adc
xchg
leave
pop
fsubl
jno
ds
ret
in
sarb
sbb
ret
lods
in
addr16
jmp
mov
jbe
int
mov
shl
es
xchg
adc
and
xchg
xchg
stos
sub
sbb
dec
ret
dec
ds
testl
shrb
int
adc
xor
mov
inc
pop
jl
jecxz
out
push
std
mov
fiadds
into
add
std
pop
and
inc
xchg
hlt
mov
hlt
into
out
cli
aad
gs
xchg
orl
cmpsl
cmp
fnstsw
call
pop
inc
mov
pop
pop
in
pop
outsb
test
lods
sub
push
jbe
outsb
add
pop
cld
dec
loop
scas
pop
xchg
sub
cwtl
rcrl
cmp
in
std
pop
mov
cli
pop
pop
adc
or
out
jmp
push
movsl
repnz
int
xor
sub
movsbl
xor
mov
dec
mov
push
jnp
popa
imul
mov
jge
fists
nop
jmp
xor
jl
push
cld
test
fnsave
adc
loope
fiadds
rorb
push
js
push
les
xchg
xlat
cmp
mov
ds
call
sbb
in
xlat
cltd
hlt
add
ret
out
mov
inc
xchg
sbb
daa
adc
loop
adcb
arpl
movsb
mov
xor
cmp
fdiv
mov
and
and
xor
dec
hlt
or
sbb
inc
and
xlat
inc
lfs
jo
xchg
sbb
xchg
movsb
inc
sbb
jl
and
bound
bsf
dec
stos
mov
sbb
mov
adc
rorl
mov
outsl
adcb
scas
add
add
or
lret
fidivl
faddp
xor
mov
hlt
loop
adc
xchg
xorb
rcrl
je
push
cmpsl
lret
inc
mov
rclb
mov
mov
or
add
xchg
shr
aas
bound
jg
or
ljmp
inc
int3
outsw
in
sti
mov
pushf
daa
or
push
push
push
xlat
cmp
ret
cli
in
adc
pop
mov
pop
adc
add
test
adc
test
in
pop
mov
enter
pop
mov
test
cmp
pop
add
repnz
fcmovnu
in
fcmovnbe
test
xchg
hlt
fsubrp
pusha
mov
push
sub
andb
lret
cmp
sbb
push
mov
sub
out
lret
sbb
clc
ja
aad
lods
lods
test
int3
sub
pop
mov
jne
dec
mov
in
jmp
sub
sub
dec
and
subl
xor
cltd
add
cmp
neg
mov
mov
rclb
test
cmpsb
dec
loopne
leave
xor
push
jle
push
fs
test
push
into
rcrl
mov
sbb
xchg
ret
mov
jo
cmpsl
test
scas
push
xchg
xor
add
dec
push
enter
lcall
jb
sub
mov
jg
jmp
call
popa
cltd
mov
inc
or
nop
jae
stos
mov
pop
mov
mov
inc
lahf
fdivs
aad
mov
movsl
into
jg
mov
test
scas
lock
in
pop
fdivrs
std
mov
sub
mov
lods
xchg
in
sub
jne
mov
loop
mov
loop
or
jo
fs
push
jmp
fprem1
xchg
adc
cmp
or
les
call
xlat
pop
adc
push
test
or
iret
add
nop
test
cmpsb
imul
cli
lret
sub
sub
pop
or
jne
lcall
cmpsb
fwait
pop
sar
nop
dec
mov
or
mov
pop
inc
lea
sti
cmp
shrb
mov
in
mov
inc
and
sub
daa
mov
adc
ret
fistpll
mov
lock
adc
xchg
adc
mov
push
cmpsl
loope
fnsave
iret
notb
inc
inc
pop
mov
push
data16
jmp
inc
or
adc
lahf
fsubr
loop
jl
push
jp
clc
fs
sbb
push
dec
fistl
sub
mov
je
cmp
mov
xchg
fistl
or
rep
inc
sbb
push
mov
inc
mov
mov
notl
out
cld
xchg
scas
loop
icebp
xor
push
iret
mov
dec
decl
add
adc
fidivrs
sbb
adc
ret
arpl
bound
fimuls
fs
pop
ds
aad
pop
mov
leave
pop
into
les
test
shr
push
xor
mov
in
mov
and
pop
mov
push
mov
and
sbb
mov
dec
loopne
jle
lea
sub
adc
jle
out
ret
and
out
mov
fs
subl
sub
sbb
repnz
push
loopne
xchg
xor
xchg
shrb
outsl
mov
mov
repnz
jae
push
pop
mov
repnz
jl
arpl
jmp
in
cmc
lock
cmp
fs
lret
dec
in
lds
popf
mov
ret
adc
fldcw
clc
or
repz
sar
call
xchg
lahf
ret
push
lods
bndldx
mov
iret
lret
cmc
sbb
xor
mov
sbb
lret
fadds
adc
shlb
stc
aaa
and
and
in
ds
incb
pusha
and
or
push
xlat
pop
pop
icebp
mov
repz
jmp
or
and
add
jmp
push
push
dec
lcallw
and
mov
outsb
pslld
add
stos
sbb
fistps
mov
frstor
xor
pop
aad
not
stc
int3
loop
cmpsl
test
stos
sarl
sub
aam
sub
shr
push
repz
pop
adc
mov
jnp
jae
in
test
leave
sbb
sarb
push
sub
outsb
clc
mov
je
sub
mov
negl
push
jne
bound
add
xor
cmp
cwtl
aas
in
mov
ja
adc
push
cld
js
aam
push
mov
mov
call
cmp
mov
aad
call
cmpsl
inc
mov
sub
mov
arpl
xor
les
pop
adc
movsb
shlb
or
outsb
imul
fdivs
sub
mov
rcll
dec
adcl
or
outsb
push
dec
xchg
push
pop
test
sbb
mov
mov
pushf
sbb
or
orb
sbb
es
adc
lret
mov
add
sub
in
pop
push
les
sbb
hlt
loope
mov
sbb
scas
mov
cmp
jae
or
ss
xchg
scas
cmc
sub
and
idivl
repnz
xor
mov
cmc
mov
jp
or
dec
dec
pop
cmp
sub
xchg
sbb
add
jp
cmp
dec
incb
out
dec
jmp
lret
adc
sub
gs
arpl
repnz
dec
jne
sbb
imul
mulb
outsb
sahf
pushf
inc
sub
scas
scas
sub
pushf
out
sub
das
ret
fstpt
movsl
in
cmp
inc
insb
dec
arpl
lahf
insw
aas
in
rcrb
or
pusha
scas
imul
or
out
enter
pop
pop
dec
out
sbb
les
clc
std
and
cld
loope
sub
inc
hlt
lock
mov
mov
dec
lods
xchg
jp
inc
sti
lea
cmp
lods
scas
cmp
cmp
jne
mov
enter
mov
mov
mov
repz
roll
jno
pop
inc
cs
rcr
sub
push
and
sub
inc
fsubr
movb
jae
inc
lahf
pop
sub
xchg
cmpsb
jp
fimuls
jbe
test
push
dec
je
sti
xorb
int
lea
pop
lds
cmpsb
mov
lahf
and
fbld
mov
imul
push
sbb
push
andl
add
pop
xchg
loopne
push
jl
xchg
or
bound
aaa
or
xchg
mov
push
cmp
push
sub
fstl
push
jmp
mov
insb
cmp
adc
fwait
mov
pop
fdivrs
pop
add
outsl
push
mov
shll
pop
fsubrs
movsb
or
push
mov
mov
mov
pop
xor
repz
sbb
or
push
shrb
jl
adc
push
adc
mov
sbb
fmuls
aas
pop
js
push
inc
jmp
rcll
andl
jns
lret
cmp
lods
inc
push
addr16
push
in
mov
inc
mov
in
pop
mov
mov
inc
mov
ret
adc
sarb
jnp
sbb
outsb
and
pop
cwtl
test
imul
and
movsl
adc
std
cmc
dec
adc
insl
call
in
mov
inc
xor
es
inc
pop
pop
inc
cmp
jmp
add
dec
pop
sarb
shll
test
push
mov
hlt
push
mov
ds
add
daa
push
mov
loopne
daa
mov
fisubrs
stos
das
and
cltd
inc
cmp
lahf
jmp
jb
adc
loopne
push
push
inc
xchg
sub
mov
out
mov
test
orl
sub
stos
xchg
jmp
iret
pop
inc
aad
sbb
or
outsl
jecxz
push
fcompl
mov
fcoml
je
inc
lret
jo
cmp
and
xchg
sbbb
add
adc
outsb
roll
in
movsb
adc
cmc
inc
ror
mov
js
mov
ja
enter
mov
add
jno
movsl
pop
aam
adc
xchg
adc
inc
sbb
pop
psubq
push
dec
out
imul
lea
cmp
mov
mov
sbb
cmp
les
cmc
or
sbb
decb
xchg
sub
sbb
lret
xchg
mov
movb
fsubrl
fisttpll
lods
pop
add
and
shrl
lret
inc
inc
jae
in
outsl
rolb
add
sub
jecxz
push
movsl
xor
fistpl
push
gs
test
push
sub
mov
pop
inc
subl
or
adc
pop
xchg
inc
xchg
dec
mov
xchg
shlb
imul
sti
push
lods
xor
addr16
push
ret
mov
pop
mov
pop
jne
outsl
lods
and
cmp
cmpsl
mov
icebp
add
inc
pop
mov
test
movsb
stos
int3
jmp
int3
pop
push
or
and
addb
or
xchg
mov
xchg
movsb
pop
rcrb
fs
jns
mov
adc
imul
sbb
fsubs
orb
pop
pop
pop
or
xor
push
sbb
fdivl
pop
push
je
mov
mov
dec
cltd
call
mov
cmp
std
inc
xchg
inc
pusha
jecxz
push
insb
std
jg
daa
mov
cmp
pop
jl
mov
add
dec
fiadds
sarb
jl
pop
xchg
jecxz
and
out
cmc
pop
mov
fbstp
rolb
cmp
cmp
shrb
mov
cmp
and
cs
push
jne
dec
inc
mov
enter
std
mov
xchg
stos
add
inc
push
mov
cmp
clc
fsubp
sbbl
sbb
sub
pop
mov
inc
pop
mov
sbb
repz
or
in
mov
or
scas
test
lds
outsb
fdivrl
jg
pop
push
inc
sub
popf
sbb
int
xchg
popf
addb
in
sbb
out
add
push
test
hlt
stos
fidivl
mov
bound
lret
lret
call
sub
xor
add
or
fisubl
push
sub
iret
jnp
jmp
jnp
jecxz
ret
sar
aaa
ret
dec
mov
mov
xchg
lcall
in
push
jp
sahf
bswap
or
inc
lcall
cmpsl
cmp
dec
aad
into
mov
add
push
lods
test
dec
inc
xchg
fistpl
sti
mov
out
inc
fwait
xchg
or
pop
loop
sti
rorb
sbb
push
pop
cmp
scas
in
and
ja
jl
bound
fsts
ja
stos
je
sub
js
pop
div
notl
in
stc
and
in
out
ret
sbb
mov
cmp
into
cmp
push
in
shl
pushf
insb
xchg
mov
adc
sbb
std
cmp
subb
mov
mov
repnz
xchg
mov
test
mov
cltd
fidivl
cmp
stos
fisttps
stos
dec
into
orb
insl
mov
cmpsl
out
int3
inc
out
mov
mov
clc
xor
dec
push
add
jmp
xchg
sbb
sub
add
mov
mov
jns,pt
pop
mov
xchg
loope
pop
cmp
pop
xchg
jbe
int
xchg
les
cmpsl
stc
inc
lcall
and
ljmp
rcrl
sbb
lds
daa
mov
jne
scas
dec
out
xchg
adc
pop
lret
arpl
fsubr
mov
outsl
xor
lock
pop
das
jb
test
push
xchg
push
cmp
cmp
cmp
jne
notb
adc
add
int
pop
jbe
and
les
imul
out
loope
add
call
cltd
sbb
mov
subl
push
repz
xchg
sub
or
cmp
mov
xor
lods
sub
push
xchg
filds
pop
je
jnp
inc
imul
adc
loopne
cld
lahf
push
jge
or
push
insb
arpl
add
sbb
add
adc
lock
cmpsl
xor
and
aas
cld
lahf
stc
jl
and
mov
lds
mov
add
lret
lods
iret
test
add
inc
hlt
fnstcw
popa
adc
pop
fldt
ret
xor
and
loope
pop
popa
das
ret
inc
pop
fsubr
insb
push
pop
mov
add
mov
jge
mov
and
jno
out
sbbl
lret
aas
pusha
sbb
push
je
popf
lret
fsubrl
pop
cs
or
scas
jne
adc
nop
and
and
scas
stos
movsb
jns
pop
sub
data16
sarb
or
sbb
popf
in
push
push
into
mov
arpl
xchg
int3
xchg
mov
gs
add
sub
jae
lcall
test
sub
imul
push
lahf
pop
mov
inc
jne
fwait
xchg
out
jle
jmp
jne
call
add
sbb
scas
inc
ret
dec
mov
mov
insl
inc
js
push
jle
out
rclb
dec
scas
push
xor
movsl
pop
addl
push
mov
adc
dec
xchg
cld
icebp
test
mov
add
icebp
xor
sbb
loop
jbe
dec
out
inc
call
dec
mov
mov
neg
loop
and
pop
xor
lret
push
stos
shl
movsb
pushf
lret
sub
xchg
mov
pop
lret
insl
push
mov
or
enter
in
icebp
push
outsl
inc
pushf
fld
sub
mov
jmp
leave
push
mov
movsl
int
lret
and
or
xor
jmp
enter
pushf
add
cmp
adc
std
and
xor
movsb
and
mov
outsl
lcall
add
lock
sub
sbb
mov
mov
outsb
sbb
iret
xor
dec
mov
pop
rolb
dec
aad
xor
jl
pop
cmpsb
mov
and
sbbl
aad
imul
dec
push
pop
jns
loop
jle
pushf
divl
cmpsl
negl
push
sub
and
sub
dec
fldcw
mov
stos
fisubs
inc
mov
negb
mov
ret
divb
sub
into
push
jb
arpl
mov
add
add
dec
in
int
pusha
inc
inc
jb
daa
std
fwait
mov
pop
imul
mov
test
lret
and
shrb
movsb
jg
repz
and
mov
or
and
loopne
mov
shll
lea
inc
sub
mov
repz
enter
cld
mov
xchg
in
sti
jmp
mov
int
popf
popf
cmp
add
je
jns
mov
push
cmp
sub
cmpb
jp
lahf
mov
add
xor
mov
mov
xor
hlt
stos
in
jecxz
jle
sub
xchg
hlt
mov
push
jmp
dec
jp
jl
addr16
xor
icebp
dec
enter
ret
es
add
mov
testb
xlat
jg
test
lods
mov
jle
lds
xchg
mul
fisttpl
push
mov
dec
jns
loop
mov
fnsave
hlt
cmp
pop
sbb
dec
and
shlb
aaa
sbb
sub
out
jecxz
shlb
sahf
inc
xchg
idivl
fsin
jae
paddusw
push
sub
pop
adc
mull
mov
dec
repnz
xor
push
dec
dec
sbb
and
and
adc
cwtl
fildll
lods
add
shrl
and
testl
cs
or
xchg
sbb
inc
fdivrs
mov
loope
cmc
mov
jne
inc
inc
pop
popa
pop
adc
jne
stc
xor
nop
xchg
stos
xchg
loopne
outsb
stos
adc
xor
lret
adc
outsb
inc
fwait
mov
jnp
clc
jae
push
mov
add
mov
inc
and
push
jge
in
ret
push
mov
sub
lock
sbb
or
lcall
mov
ljmp
ret
pop
shll
jp
lds
jge
jae
shll
xlat
jne
jmp
pop
sub
imul
add
nop
and
adc
adc
cmp
xchg
data16
inc
cmpsl
mov
adc
nop
stos
rolb
inc
sbb
loope
scas
das
sti
adc
adc
ljmp
mov
jl
out
jae
lods
ret
shlb
sub
adc
xlat
xor
xchg
outsl
mov
cmp
mov
in
adc
repz
lahf
mov
inc
outsl
mov
mov
pop
mov
pop
stos
sbb
xchg
adc
in
mov
sub
dec
jmp
hlt
push
mov
xor
gs
cmp
sbb
pop
test
and
data16
jmp
push
xor
inc
jg
fimuls
out
xchg
mov
mov
xchg
mov
push
leave
dec
movsl
cltd
insb
add
addr16
ss
and
hlt
imul
scas
pop
pop
add
mov
and
adc
test
pushf
pop
mov
repz
mov
bound
mov
and
test
add
fidivrs
jno
repz
adc
and
gs
xor
sub
cmp
nop
xor
jmp
or
push
cmp
in
pop
mov
bound
sbb
addr16
or
push
xchg
xor
push
cmpsb
fmull
sbb
and
and
inc
addr16
iret
test
mov
inc
mov
sub
add
jo
jo
mov
adc
or
push
int
or
xchg
fs
icebp
mov
sub
test
and
cmp
jecxz
add
fcompl
dec
les
push
std
shlb
push
ret
push
popa
xchg
pop
mov
popf
cmpb
xor
fwait
mov
push
mov
or
or
flds
les
mov
in
std
cmp
inc
addb
or
inc
fwait
xor
jns
les
out
outsb
jo
jecxz
xchg
movsl
out
sbb
sub
mov
bound
cmp
scas
push
sub
cmpsl
cmpsl
inc
cmp
pop
sub
test
aas
loope
pop
imul
add
imul
subl
out
movsl
rcrb
icebp
aaa
push
insl
data16
inc
xchg
loope
mov
or
jecxz
ret
jl
movsb
xchg
adc
shlb
mov
cmp
dec
push
mov
xchg
jp
outsl
push
icebp
ret
add
push
jae
addr16
pop
jo
std
js
sar
mov
mov
dec
cmc
ret
jp
dec
cmpsl
mov
int3
or
pusha
sub
mov
pop
int3
sahf
mov
mov
sub
mov
sbb
mov
stc
mov
dec
scas
data16
popa
push
popa
pop
aad
outsb
mov
movsb
int3
dec
and
mov
lock
fistps
lock
scas
rcr
mov
fcompl
mov
out
popf
in
subb
add
leave
fcomp
add
aas
cmp
mov
sbb
int
imull
and
mov
shll
add
adc
xchg
sbb
pop
stos
jb
aad
mov
inc
mov
cmp
mov
leave
add
mov
inc
pop
adc
mov
rcrl
in
jge
insb
jg
fsts
dec
or
cli
cld
jb
mov
add
ret
idiv
sub
mov
shrb
lahf
add
jmp
pop
insl
in
cmp
sbb
scas
idivb
int
adc
leave
xchg
addr16
adc
movsl
lret
ja
mov
es
xlat
out
jo
add
sub
lahf
push
into
mov
stos
fmull
loopne
inc
fidivrs
andl
jg
cmpl
lods
push
push
cli
xchg
adc
repz
ja
mov
inc
and
mov
jns
jmp
add
lods
xchg
mov
ja
mov
ret
inc
and
clc
push
or
jae
pop
lret
pop
loopne
nop
shr
pop
sbbl
jmp
shll
mov
jg
push
add
sti
rorl
inc
sub
fwait
fwait
pop
rcrb
cmp
jp
mov
dec
add
cwtl
mov
jp
fwait
jecxz
inc
mov
sub
test
cs
outsb
test
push
sahf
push
js
and
lret
lods
push
adc
xchg
mov
sub
pop
hlt
icebp
cmpsb
icebp
outsb
mov
idiv
into
test
push
inc
pop
arpl
loopne
imul
push
out
test
xchg
arpl
cltd
or
mov
push
sti
dec
cmp
jns
aas
cmc
inc
fst
add
js
scas
dec
or
mov
dec
xchg
out
addr16
subb
test
rcrb
fnstcw
ficoms
dec
pop
lahf
roll
shrb
addr16
xor
mov
cs
sarb
mov
pop
sbb
sbb
mov
adc
sub
xchg
inc
pushf
inc
dec
push
dec
ljmp
js
cmp
testl
dec
in
and
or
cmp
xchg
adc
lahf
out
notb
std
or
ret
loope
xchg
jno
adc
lret
dec
dec
xchg
jae
clc
testb
into
mov
mov
imul
xor
sub
mov
cmp
jle
xor
imul
lea
clc
mov
pop
lahf
adc
xor
cmp
cs
push
xchg
xchg
imul
jne
inc
ja
mov
jo
das
test
addl
ljmp
add
jbe
push
test
xlat
jmp
sbb
movsb
mov
xchg
mov
leave
bound
push
outsb
xor
testl
imul
cs
je
cmp
jnp
xchg
push
add
or
mov
pop
roll
xchg
add
in
jne
subb
in
inc
mov
aam
and
add
outsl
lahf
fsubs
nop
sub
int3
out
push
dec
rcrl
sub
aam
mov
out
push
into
jl
icebp
imul
sub
xchg
and
arpl
cmp
scas
xchg
stos
cmp
mov
xor
push
sub
es
inc
pop
in
incb
dec
jnp
jmp
inc
mov
ja
pusha
sub
mov
mov
sbbb
inc
xchg
pop
lahf
hlt
xchg
aaa
data16
out
cltd
sbb
stc
fs
xchg
inc
idiv
dec
lods
nop
iret
push
inc
and
movsl
or
mov
sbb
pop
hlt
fldenv
cmp
or
lea
icebp
xor
lds
add
mov
stos
popa
sti
push
roll
std
ret
inc
fwait
clc
push
insl
jno
push
mov
push
ret
jb
jecxz
xor
fs
push
fstps
sub
js
movsb
dec
clc
sub
dec
enter
pop
push
lods
in
and
sbb
stc
imul
in
jecxz
cmpsb
mov
sub
dec
dec
lds
aad
daa
sbb
adc
push
mov
stc
insb
cmp
xchg
les
fsubr
rorl
mov
add
adc
push
mov
js
scas
xchg
lods
popf
mov
cmc
mov
sbb
push
adc
push
push
loopne
aad
sbb
xchg
inc
in
pop
sbb
inc
xchg
jns
clc
pusha
cmp
call
jns
ss
lea
gs
sbb
adcl
pop
add
mov
mov
outsl
and
fbld
out
mov
dec
adc
adc
mov
outsb
mov
js
inc
xchg
into
popa
inc
mov
add
xchg
mov
jge
mov
push
sti
inc
setl
mov
push
rolb
cltd
call
in
mov
xor
cwtl
or
lea
or
lcall
add
std
int
adc
in
sbb
lods
idivl
jmp
sbb
push
lock
popa
into
jnp
jbe
test
mov
mov
push
xchg
std
and
or
int
popa
gs
push
jnp
mov
mov
mov
xlat
and
and
sbb
mov
jmp
fs
dec
dec
stos
ret
stc
addr16
adcb
or
jnp
mov
lods
andb
in
nop
push
pop
fcmovnb
xchg
jae
fwait
pop
dec
pop
into
xlat
inc
outsb
adc
or
test
add
call
xchg
addb
push
sub
cmp
add
pop
std
repnz
mov
push
in
rcrl
xor
sar
sti
jnp
insb
sarb
lcall
lea
lret
sub
adc
ja
adc
lock
push
out
add
data16
or
sbb
out
stos
and
mov
xor
mov
sub
dec
xchg
mov
sbb
or
popa
ds
lcall
shrb
bound
out
iret
sub
mov
inc
dec
adc
loopne
adc
lods
popf
lahf
add
aad
aaa
movsb
mov
cmpsb
xlat
ficoms
outsb
mov
xor
ds
add
sbb
jnp
xchg
and
xchg
and
mov
mov
xchg
sbb
pop
sarb
xor
fbld
pusha
fmull
out
clc
adcl
repnz
push
inc
jecxz
sbb
dec
les
shll
inc
pushf
jecxz
ja
loopne
mov
scas
clc
cmc
cmpsl
mulb
or
xchg
jb
inc
inc
pushf
outsl
cmp
shll
adc
mov
mov
cmp
icebp
dec
mov
les
lcall
cmp
out
cmp
int3
xchg
pushf
xlat
inc
add
cmp
iret
push
xor
mov
aam
jne
push
movsb
dec
mov
ficompl
push
loop
testl
nop
jp
mov
push
dec
and
lock
xchg
jmp
pop
mov
push
sbb
xchg
sbb
cmpsb
call
scas
stos
xchg
inc
out
lret
xlat
inc
lock
ret
sbbl
lret
jb
fbstp
je
xchg
out
notl
clc
inc
mov
dec
and
pop
lret
jle
mov
scas
into
inc
adc
add
das
iret
mov
subb
rclb
xor
fists
popf
push
xchg
test
push
jae
sbb
xchg
aad
xor
sti
in
aaa
push
scas
sar
leave
mov
aad
push
scas
jmp
js
push
sbb
fstps
stos
dec
fnstenv
push
dec
xor
out
daa
pop
mov
adc
inc
pusha
xchg
je
jle
pop
inc
stos
jge
xchg
lahf
test
sbb
outsb
fsub
ret
testb
rcl
and
push
jle
lods
xor
mov
xchg
aaa
andb
cli
sub
sub
mov
testl
jne
int3
lcall
cld
icebp
mov
dec
mov
xchg
dec
aam
bound
adc
inc
lods
sub
adc
pop
mov
lret
nop
subb
xor
cmp
loope
push
rcll
push
or
jp
push
push
sub
enter
dec
ljmp
aad
xchg
ljmp
mov
bound
fdivr
add
filds
scas
in
mov
out
pop
test
fildl
in
inc
gs
mov
aad
or
shll
sub
sbb
repnz
xor
jnp
lret
fwait
jl
dec
orb
sub
fwait
mov
mov
icebp
jecxz
adc
sbb
call
scas
push
sarl
inc
hlt
jae
dec
adc
mov
mov
cmp
shrb
xchg
subl
and
movsb
loop
inc
fsubrs
xchg
repz
xor
xchg
fdiv
nop
cmp
ror
xchg
std
add
jno
dec
pop
jecxz
nop
sar
loopne
sar
imul
std
popa
xor
ret
ljmp
ret
and
cs
cmpsb
adc
andl
std
aas
cmp
clc
stos
fistpl
mov
scas
out
mov
inc
inc
es
jg
add
add
cli
and
or
jmp
pop
xchg
rolb
xchg
out
jns
leave
or
movl
rcrl
jne
fincstp
aad
std
cmp
test
xchg
xchg
fcoms
xor
mov
loopne
cmp
mov
push
lods
out
adc
movsl
testb
mov
mov
in
fisubl
cmpsl
insb
fisubrs
movsl
stc
negb
xchg
cmp
and
inc
adc
add
xor
shll
sub
push
or
int
cli
insl
repnz
adc
push
adc
out
fmull
push
mov
das
sbbb
inc
jp
enter
jae
mov
push
icebp
in
loope
dec
add
sub
sti
inc
push
daa
push
aaa
jne
adc
dec
into
inc
cmpsb
das
adc
stos
movsb
push
mov
out
mov
mull
add
sbb
cmpl
outsb
and
adc
cmpsl
lods
lods
pusha
out
mov
and
push
out
mov
mov
sub
cli
mov
sub
adc
test
mov
fs
in
adc
bound
int3
stos
es
mov
xchg
cmpsb
leave
mov
push
xchg
pop
inc
cmp
push
nop
mov
inc
mov
push
aas
xor
outsl
fmul
xchg
cmp
sbb
movsl
fdivr
xor
push
pop
add
call
add
iret
add
pop
sbb
adc
mov
xchg
or
sbb
pop
cwtl
repz
mov
or
out
in
or
aad
mov
inc
fistps
xor
xchg
pop
mov
es
out
popl
mov
into
int3
outsb
mulps
mov
push
rcll
mov
rorl
sub
out
cmp
sub
sbb
mov
hlt
hlt
cmc
ficompl
jp
daa
imul
push
xchg
jecxz
xor
xor
cmp
out
cmp
in
gs
mov
and
jl
xchg
jne
ds
call
pop
jp
insl
sarl
clc
jmp
mov
bnd
lds
xor
cmpsl
loop
add
xor
cmp
adcb
add
dec
push
jmp
hlt
repz
int
dec
cmp
aas
push
jg
daa
insb
cld
leave
repz
pop
inc
jno
jge
and
sti
adc
fidivs
pop
or
inc
out
mov
inc
inc
dec
enter
and
cmpsl
and
push
fs
rcl
std
mov
pop
movsb
push
dec
cmp
and
js
scas
xchg
and
and
mov
jg
imul
mov
ds
sbb
jecxz
addr16
lahf
scas
inc
in
pop
nop
xchg
fwait
cli
jbe
inc
loop
test
mov
xcrypt-cbc
cmpsl
aam
xchg
daa
insb
shrb
mov
mov
lahf
rorl
fwait
adc
fwait
push
push
movsl
adc
in
dec
mov
bound
cmpb
div
xchg
fistps
popa
insl
rcrl
jmp
cmp
ljmp
ds
scas
jmp
gs
adc
mov
cmc
lret
rcll
mov
mov
bnd
int
clc
mov
adc
push
addr16
xorps
nop
mov
and
inc
enter
sti
xor
xor
stc
fldenv
fbstp
out
insl
pop
call
cmc
dec
adc
scas
pop
dec
inc
pushl
mov
jmp
int
or
andl
sti
lcall
jmp
jge
shrb
addb
sub
push
sub
sub
loop
jbe
or
dec
popa
jmp
in
mov
sub
loop
fistl
fisttpl
inc
int3
idivb
es
sbb
xlat
aam
jmp
dec
stc
outsl
mov
notl
std
mov
sbb
ret
add
loopne
cmp
cli
pop
fistps
push
and
lods
bound
xchg
mov
jp
pop
xor
aam
push
jge
xor
out
mull
mov
sub
mov
push
push
iret
mov
push
fcoms
push
ret
lods
pop
in
leave
test
pushf
mov
jp
pop
mov
mov
cmp
lods
icebp
mov
xlat
sub
arpl
inc
in
leave
shr
sub
cmc
stos
mov
mov
test
mov
jge
cmpsb
out
ss
out
jecxz
mov
sti
add
pop
xor
add
mov
jg
cmp
xchg
or
aam
cs
stc
push
test
cmp
xor
rcrb
sbb
sub
sbb
and
jae
dec
int
inc
push
mov
mov
mov
loop
repz
outsb
or
xchg
ret
fisubrs
cltd
dec
or
ret
pop
fildll
jp
insb
mov
lods
push
cmp
scas
pusha
push
stc
les
leave
std
les
clc
test
mov
and
mov
push
ja
pop
outsb
add
aas
test
pusha
xor
ret
in
sub
jnp
shrb
push
loope
and
mov
out
gs
ret
add
insl
and
mov
mov
lds
ljmp
insb
mov
push
sub
cmp
lock
dec
sbb
nop
add
shrl
sbb
scas
iret
out
jp
jne
popf
dec
jns
push
scas
lcall
test
adc
add
ret
fs
xchg
mov
mov
mov
inc
xlat
and
out
inc
fld
cmp
dec
add
cs
cmp
sbb
movsb
aam
loopne
sub
pop
iret
gs
sub
sub
lods
mov
into
in
mov
push
daa
in
mov
or
into
das
clc
jno
test
fs
fnstcw
aaa
xor
lret
and
mov
inc
hlt
pusha
and
outsb
stos
cmpsl
shlb
hlt
add
movsl
lea
shrw
xor
push
divb
jg
jne
dec
andl
nop
add
pusha
or
xor
pop
je
pop
arpl
jl
xchg
mov
mov
shlb
mov
xchg
orb
push
mov
out
hlt
fstl
xor
cmp
jae
js
add
jp
jge
and
sbb
push
jmp
cmp
insl
jecxz
cmpsl
mov
sbb
push
cmp
ljmp
pop
loop
pop
push
aas
repnz
adc
andb
lret
clc
sbb
pusha
test
add
js
adc
jns
shrb
movsb
xor
add
int
int3
cmpsb
or
arpl
fcomps
loop
xor
push
inc
jp
loopne
cmp
sbb
mov
enter
mov
cmpsl
in
push
adc
addr16
in
mov
in
lock
mov
xor
sub
sub
test
cmp
jl
mov
sbb
test
sub
gs
out
mov
jno
ljmp
lea
adc
repnz
mov
xchg
arpl
jmp
cltd
pop
arpl
add
jns
mov
jo
outsl
js
and
sbb
mov
xchg
mov
sbb
push
jbe
andl
xor
dec
and
add
popf
sub
test
jg
xor
icebp
add
sub
out
jg
int
pop
sbb
fistpll
sbb
xchg
outsl
mov
das
jbe
dec
cli
bound
imul
cmp
push
mov
idiv
in
sub
cmp
push
aaa
and
rol
xchg
std
lcall
loope
add
jle
cmc
xchg
frstor
adc
mov
mov
mov
fadds
xchg
out
nop
dec
sub
leave
pop
fsts
mov
cwtl
lock
xor
jno
jne
scas
repz
xor
cmp
dec
clc
out
shlb
xor
call
jg
and
mov
insl
daa
loope
inc
inc
dec
xor
adc
imul
jbe
inc
fmuls
or
out
mov
dec
divl
lahf
pop
fisttpll
out
movsb
jge
in
mov
mov
jl
add
in
mov
out
mov
arpl
dec
shr
cmp
cmpsl
es
inc
xchg
adc
pop
and
daa
in
mov
shrb
inc
mov
mov
xchg
cmp
push
cmpsl
cltd
pushf
popf
cmp
pop
cmpsl
aaa
add
jmp
inc
or
adc
sbb
add
pop
mov
inc
jle
imul
movsl
outsb
mov
ret
cld
inc
mov
es
pop
jae
add
dec
dec
or
dec
lea
inc
fwait
aaa
into
lods
xor
enter
adc
push
shl
lock
mov
mov
std
jle
xchg
lahf
pushf
lret
mov
and
mov
andl
pop
inc
mov
cmp
fidivl
mov
push
push
imul
add
cmpsb
aam
orl
cltd
push
xor
or
repnz
in
popf
pop
int3
call
les
dec
sarb
inc
mov
jmp
rorl
movsl
inc
adcl
xchg
and
and
shll
aas
int3
adc
lret
shrb
sbb
ret
jge
out
idivl
mov
addr16
jno
in
out
vmulpd
xor
cmc
ja
insb
jbe
and
loop
push
jno
sbb
pop
out
bound
lret
nop
jge
mov
pop
mov
pop
stc
fisttps
hlt
xchg
outsl
jbe
adc
inc
or
mov
and
inc
lea
mov
inc
test
lea
int
jb
sub
lret
js
mov
inc
and
mov
dec
sub
adc
int
add
cmp
pop
add
outsl
in
sbbl
das
push
lods
rorb
je
cmc
scas
inc
push
jl
out
mov
aad
xchg
arpl
jmp
mov
daa
sbb
cli
xchg
jae
push
or
pop
sbb
in
ret
aas
jae
mov
mov
pop
mov
pop
lds
cli
xor
movsb
sub
xor
jns
in
push
jl
in
mov
addb
aaa
and
mov
push
jnp
scas
inc
xor
lods
cmp
nop
gs
adc
sbb
shrb
lds
enter
and
pop
push
js
or
cmp
mov
pop
jne
xchg
adc
aas
mov
dec
pop
or
cwtl
adc
xchg
icebp
jae
dec
adc
arpl
and
mov
stc
aaa
inc
in
push
sub
test
rcl
scas
jecxz
jle
fcmovnbe
mov
dec
lret
add
sub
sub
mov
in
xchg
xchg
pop
xor
loope
fiaddl
into
sub
cld
les
add
push
mov
sub
jecxz
cli
test
ljmp
jns
mov
dec
pop
pop
mov
cmp
std
out
std
negl
dec
ljmp
popf
dec
xchg
add
sub
and
shr
mov
adc
adc
fstp
pusha
mov
call
xchg
cmp
mov
stos
leave
adc
sbb
mov
sbb
mov
dec
adc
xor
std
in
adc
push
pop
std
jl
lahf
lods
daa
jnp
lcall
fsubl
in
dec
push
fiaddl
jno
xchg
fs
push
inc
aas
repnz
xchg
xchg
je
mov
and
xor
add
icebp
out
xchg
std
lea
sbbl
mov
in
sub
into
pop
pop
add
jge
mov
loope
pop
imul
jl
mov
ret
lret
pop
ja
hlt
jecxz
in
lea
cs
lods
je
pop
cwtl
movsw
icebp
lahf
inc
push
xchg
stos
dec
pop
test
inc
lahf
cmpsb
fldcw
sub
dec
mov
adc
mov
or
jno
lds
adc
or
mov
xchg
dec
js
shrl
or
mov
add
cltd
shrb
sbb
fidivs
mov
imul
call
test
xchg
mov
or
push
jmp
das
push
mov
sub
xchg
cmpsl
push
jp
xchg
adc
imulb
jo
and
xor
mov
inc
pop
ffree
in
pop
je
mov
ret
outsb
and
push
scas
or
cld
and
movsl
scas
pushf
pop
sub
jo
or
aaa
cwtl
arpl
sub
out
jnp
pop
xchg
xchg
shlb
in
lea
sbb
jb
push
inc
jmp
js
jmpw
mov
shl
sti
repz
loope
aam
jle
and
sbb
add
mov
xorb
fistl
aas
push
rclb
data16
hlt
mov
out
rcr
loopne
or
push
jne
mov
xchg
inc
add
push
popl
fsubrl
testb
mov
loopne
sub
or
sti
xchg
icebp
ja
sub
aaa
loope
cwtl
frstor
jmp
lret
push
fnstenv
repnz
pop
outsl
or
call
movaps
fpatan
sub
cltd
ret
push
ficoms
lahf
in
lret
jmp
loopne
loop
mov
decl
sbb
mov
push
mov
mov
dec
push
ljmp
popa
add
in
fst
aam
adc
daa
pop
mov
shl
push
xor
enter
bound
push
stos
pop
es
inc
sbb
insl
adc
scas
mov
xchg
repnz
into
xchg
in
xchg
xor
out
mov
aas
and
or
in
or
inc
or
sbb
pop
push
xchg
push
push
mov
push
lret
leave
ficompl
xorb
or
add
out
pop
test
bound
push
pushf
cli
jns
imull
enter
xchg
movsb
cmp
adc
xchg
push
cmpsb
jbe
adc
vmovups
mov
jbe
out
pushw
sbb
adc
adc
pop
arpl
push
adc
lahf
pop
adc
and
push
push
and
fisttpl
sbb
mov
lret
jns
sarb
fsts
xchg
cmpsb
mov
gs
pop
lea
sahf
iret
inc
lods
jg
xchg
rclb
cmpsl
mov
adc
gs
push
adc
fistl
leave
mov
jecxz
bound
mov
cs
or
sti
cmc
mov
add
xor
add
in
sbb
popa
adc
sub
cmp
or
lea
adc
dec
ljmp
mov
mov
pop
out
ljmp
insb
mov
xchg
jns
mov
rcll
cld
enter
push
popa
mov
cmp
lods
pop
pop
repnz
arpl
push
arpl
sub
pop
mov
add
lds
jge
pushf
mov
out
scas
out
inc
nop
push
or
xchg
in
and
mov
push
xchg
lret
popa
adc
rclb
adc
mov
jbe
int3
outsl
or
repnz
out
cltd
cmp
dec
and
mov
sbb
mov
pop
jmp
adc
add
neg
dec
fnstcw
loopne
push
inc
sbb
or
aad
bound
or
xchg
adcb
xor
lea
subl
jmp
inc
sahf
sub
pop
clc
push
repz
test
clc
ret
push
cltd
pop
add
mov
fcoml
xor
inc
pop
aad
imul
dec
xor
fisttpll
mov
inc
pop
sbb
mov
int
mov
loop
jg
dec
mov
jp
xor
ret
and
or
and
push
xor
pushf
and
xchg
xchg
je
dec
ss
cmpsl
cmp
nop
lret
add
enter
pop
adc
mov
push
mov
adc
test
mov
fbld
xchg
or
addr16
test
and
adc
sahf
gs
imulb
sarb
nop
inc
movsb
or
mov
popa
mov
mov
or
in
popa
cs
inc
and
dec
aaa
adc
lret
mov
adc
xor
xor
clc
stc
or
dec
xor
adc
ss
pop
adc
jo
inc
or
push
dec
mov
pop
push
insb
adc
cmp
sub
jnp
dec
lds
negl
and
ja
cld
mov
or
sbb
les
scas
movsl
add
bound
mov
jo
xlat
cmpsb
outsl
or
lods
pop
aas
out
pusha
sbb
ja
mov
push
testb
xor
or
mov
sbb
lock
aaa
cmp
test
dec
mov
cmp
cmp
and
push
aas
lea
js
ds
sbb
mov
fwait
push
loopne
arpl
mov
sahf
mov
scas
inc
es
cmp
lahf
and
jae
jle
xchg
pop
dec
nop
pop
xor
mov
jnp
jp
dec
adc
scas
nop
pop
loopne
shlb
insb
stc
xlat
mov
fimuls
ds
popf
imul
scas
in
pop
jns
cmp
xchg
pop
sbbl
cmpsl
mov
mov
mov
and
push
faddl
cltd
pop
fidivs
add
loope
mov
or
int
in
std
rorb
lcall
clc
lods
sub
ja
jns
mov
and
aaa
cmp
pop
mov
inc
mov
xchg
mov
shrl
add
out
mov
fdivrl
mov
jne
mov
int3
popa
mov
test
mov
mov
and
xor
jno
xor
js
add
fsubl
push
scas
jl
push
stc
mov
idivl
bound
jge
aaa
xchg
or
xor
push
mov
lret
fisubl
adc
in
jb
repz
fidivs
adc
sbb
mov
fisttpll
loopne
divl
and
push
pop
rcll
mov
int3
sub
aam
add
adcl
bound
fbld
das
mov
shll
stos
movsl
imul
inc
jbe
jecxz
adc
mov
scas
jge
adc
movsl
loop
pop
movsl
pop
cmp
or
outsb
cld
jl
or
add
xchg
mov
mov
int
and
dec
sub
sbb
cmpsb
or
inc
inc
call
stos
shlb
addr16
addb
js
push
or
aaa
inc
mov
js
lods
cltd
adc
sub
add
sbb
bound
mov
jp
pusha
and
sub
mov
or
adc
jmp
add
out
mov
jp
cltd
rol
lds
sbb
or
hlt
sahf
xor
push
lods
jne
test
mov
jmp
pop
scas
test
push
dec
mov
pop
test
mov
lret
mov
insl
fwait
in
cmpsb
testb
pushf
sbb
test
das
arpl
js
mov
sub
ja
sbb
pop
adc
out
test
mov
jge
jle
adc
adc
adc
loop
addr16
cs
mov
pop
pop
cmp
mov
js
pop
adc
leave
mov
mov
mov
mov
inc
xchg
add
data16
lret
cmp
repz
shlb
push
cs
shl
pop
adc
sbb
and
adcb
leave
adc
mov
mov
sahf
jnp
enter
mov
es
sbb
or
add
cmpb
add
mov
in
xlat
jge
outsl
push
cmp
subl
int3
xchg
jno
jge
pusha
add
gs
mov
sahf
test
push
test
jae
lea
rclb
jb
loope
lea
push
mov
sti
cli
push
and
lea
mov
adc
or
or
lods
pop
js
pop
rclb
pop
cmp
or
pop
inc
mov
mov
push
mov
ss
cld
pop
rcr
sbb
pop
xor
jl
mov
mov
fcmovnbe
mov
loopne
pop
jns
shrl
mov
ja
mov
sub
frstpm(287
adc
push
jnp
mov
or
mov
les
dec
dec
ss
push
mulb
jmp
lods
shlb
inc
ret
mov
ljmp
pop
mov
mov
lods
mov
int3
pop
stos
shlb
out
mov
sbb
dec
jb
and
push
sub
cmp
and
shlb
nop
mov
in
jecxz
mov
pop
xorb
into
mov
adcl
xchg
insb
pop
pop
stc
popf
xchg
fdivrs
stc
cwtl
or
jbe
in
ljmp
mov
inc
mov
out
dec
dec
daa
outsl
push
jge
scas
jae
or
cld
jl
cmpsb
xor
lahf
ficomps
lods
mov
mov
jo
je
xlat
push
add
xlat
cmpsb
sahf
pop
inc
addr16
popa
push
mov
adc
push
add
jne
xchg
mov
cmc
pop
cmp
xchg
ret
rcrb
int
cmpb
arpl
and
frstor
adc
or
dec
xchg
pop
je
inc
loope
inc
inc
ffreep
pop
push
orl
test
bound
dec
and
shrb
push
rcr
bound
loop
and
std
sbb
in
jae
test
fidivs
mov
daa
and
jae
inc
cmp
test
or
dec
sbb
repz
push
js
fisttps
mov
push
scas
enter
imul
jecxz
enter
adc
fs
daa
xchg
icebp
mov
incb
lds
jnp
les
jl
dec
test
dec
adc
roll
push
mov
push
imul
addl
insb
xchg
adc
cmp
xor
shll
ljmp
lahf
lods
cmp
dec
repz
loope
and
sbb
dec
fdivrl
or
call
cmpsl
cmp
cmpsb
sbb
lcall
pusha
ds
testl
and
pusha
or
out
movsb
int
xchg
ret
jmp
sbb
outsb
lods
andl
imull
adc
mov
clc
dec
mov
orl
bound
push
add
lds
xchg
out
popf
outsb
shll
pop
and
shll
cli
mov
ljmp
das
dec
shlb
lret
inc
mov
mov
mov
jg
iret
sub
push
adc
xchg
xchg
and
pop
shlb
pop
adc
lahf
aas
ljmp
popf
rcrb
bnd
xor
pop
push
sub
leave
add
fidivrs
outsb
ss
dec
dec
jg
bsf
pop
mov
push
push
loop
or
push
sub
test
es
loop
mov
daa
lods
rorb
xor
ret
adc
jmp
pop
stos
stos
sub
sub
dec
sub
jae
vprotb
imul
dec
pop
cmp
push
scas
mov
adcb
inc
mov
xor
in
mov
sbbl
mov
in
ja
xor
mov
xor
mov
inc
mov
mov
cmc
add
aaa
enter
out
movsl
inc
lods
push
and
in
cli
outsl
lods
and
cmp
inc
dec
imul
or
repnz
sbb
add
push
lds
push
ficoms
and
or
pop
push
cmp
pushf
testb
jle
and
mov
out
or
push
add
inc
sbb
cmp
out
cmp
cs
xchg
imul
popa
ds
and
jmp
add
add
aas
sub
fldcw
add
dec
push
test
push
add
mov
xchg
mov
cmpsb
cmp
jp
or
jecxz
ljmp
subps
adc
or
mov
dec
cmp
pop
xor
fnstcw
in
mov
dec
mov
xor
and
jo
lahf
bound
daa
inc
fstpl
fistpll
xchg
sahf
fcomps
aaa
sub
imul
mov
in
movsl
lea
pop
and
aad
mov
loopne
xor
push
xor
xorb
jne
push
adc
inc
cwtl
sub
sub
dec
loop
or
adc
rolb
in
loope
jo
mov
lahf
mov
and
mov
shrl
xchg
decb
push
and
mov
push
jne,pn
dec
jl
inc
sbb
hlt
fst
cs
jp
push
push
roll
pop
and
cmp
add
les
or
pop
int
cltd
cmp
movsl
je
mov
cmp
sub
jg
mov
or
pop
test
mul
clts
cmp
cmp
stc
and
enter
je
out
pop
sbb
icebp
sub
ffreep
gs
cs
fmul
sbb
pushf
test
or
push
mov
pop
fisubs
push
daa
loopne
stc
push
push
dec
jecxz
repz
push
dec
pusha
or
icebp
pop
or
stc
jle
popf
push
xchg
mov
into
xorb
iret
cmpsb
imul
push
push
mov
vcvtsi2ssl
icebp
pop
insb
jl
dec
pop
cmpsb
fsubr
cmp
ja
xchg
add
sbb
aam
sbb
dec
add
ja
xchg
mov
imul
fs
test
repz
ja
add
push
or
inc
jbe
fbstp
popf
loop
or
inc
cmp
sar
aaa
add
push
or
ja
js
xlat
push
dec
inc
out
xchg
ds
sbb
mov
idiv
outsb
push
inc
je
nop
pop
inc
or
mov
jmp
je
inc
adc
pop
hlt
test
hlt
cmpsb
gs
mov
data16
hlt
mov
mov
xor
daa
repnz
push
pop
sbb
popa
rcr
mov
jb
js
pop
xor
cld
les
in
mov
psrad
inc
mov
cmp
mov
ficomps
cmp
adc
test
lret
mov
jns
in
dec
or
movsl
inc
mov
inc
shlb
xchg
mov
or
cltd
cmp
lods
adcl
out
mov
mov
clc
ja
out
mov
push
test
out
sub
dec
rcr
aas
ret
sarl
xor
clc
loope
inc
cmc
cltd
lret
out
cmc
cmc
sbb
mov
or
daa
xchg
and
inc
imul
movsb
data16
mov
and
lock
fstps
paddw
ljmp
pop
fldcw
outsl
jne
mov
mov
jns
add
adc
mov
jae
push
fdiv
mov
push
mov
pop
inc
scas
xor
add
add
je
fld
iret
jb
sbb
pop
pop
mov
or
pop
mov
push
xchg
out
adc
and
and
notl
xchg
movsb
ss
stos
movsb
sub
jne
aas
cli
lods
cmc
sub
jns
mov
dec
mov
adc
cmp
add
jmp
lods
push
imul
pop
stos
shl
push
out
cli
mov
push
inc
icebp
sbb
mov
sbb
lcall
add
das
dec
push
jl
ret
add
inc
push
cmc
cmp
cmp
ret
sbb
mov
cmp
xchg
pop
pop
mov
icebp
int
add
and
push
cmpl
pop
pop
push
push
xor
sub
data16
std
push
into
call
in
filds
sbb
in
dec
xchg
in
pop
in
cmp
xor
bound
out
push
inc
testb
arpl
test
dec
mov
std
dec
fiaddl
adc
rorb
and
inc
loop
mov
xchg
arpl
sbb
sub
dec
mov
mov
mov
sti
sbb
sarb
mov
les
push
dec
mov
jmp
adc
mov
xor
fisubrl
xor
flds
orb
mov
xchg
mov
test
adc
dec
xor
icebp
and
hlt
dec
adc
xchg
mov
adc
mov
fnstenv
ss
add
loopne
aad
dec
je
jne
notl
lahf
cld
lock
pop
js
dec
mov
jbe
xchg
in
inc
mov
sub
sbbl
mov
loopne
lret
xchg
test
icebp
shr
push
mov
push
mov
rorl
addr16
or
or
insb
std
push
jle
adc
or
sbb
in
jb
xor
xor
push
inc
in
lcall
xchg
loope
sub
stc
into
aas
fdiv
fidivrs
add
and
dec
test
and
fwait
fwait
sbb
pop
or
cmp
aam
out
mov
xor
mov
int3
and
cwtl
push
call
pop
fisttpl
sahf
rcrl
inc
adc
add
and
out
cmp
rcll
rcll
mov
xor
cs
sti
push
es
pop
mov
mov
shlb
rcrb
xchg
rorl
sbb
cmpsb
test
push
cmpsb
mov
adc
ror
pop
test
test
cli
dec
pop
mov
cmp
inc
or
int
jno
das
insb
mov
jle
test
ja
enter
sbb
push
iret
in
loopne
add
es
lret
fcompl
pushf
out
lods
pop
push
adc
pop
aad
jg
mov
roll
push
jle
bound
add
inc
dec
arpl
xchg
outsb
lahf
add
pop
and
ss
pop
push
aad
inc
int3
stc
xchg
aam
sub
cmp
pop
sarl
jbe
jmp
ljmp
cmp
xchg
inc
mov
rcrl
shrb
cmp
inc
pop
notb
push
cmp
xchg
outsl
hlt
out
add
mov
or
cmp
xor
repnz
insb
jle
movsb
in
push
push
insb
test
fsubl
sti
jns
inc
iret
lahf
pop
jb
pusha
fwait
pop
scas
mov
xor
cmpsl
lret
push
mov
test
push
call
orl
test
cmp
cwtl
popf
and
repnz
xchg
test
ja
scas
arpl
call
lea
movsb
mov
aaa
sub
mov
xchg
test
mov
ljmp
clc
or
mov
popa
pop
imul
scas
aaa
fwait
loopne
pop
mov
or
mov
testb
popf
add
jl
sub
jmp
enter
adc
pop
jae
mov
jae
ja
in
push
dec
std
xorb
fidivl
dec
push
imul
cmpsb
mov
stos
pop
pop
sbb
movsb
mov
mov
adc
ljmp
xchg
fsubr
pop
test
stc
or
cli
inc
loopne
push
sahf
mov
push
xchg
jmp
push
xor
sbb
test
nop
mov
movsb
addr16
adc
adc
sub
call
xchg
inc
dec
aad
jle
inc
data16
out
lahf
sarl
in
push
pop
rclb
dec
fsubrs
mov
xchg
int3
aas
dec
add
inc
stc
out
add
push
mov
xchg
pop
and
ret
mov
int
push
dec
sub
int3
hlt
cli
arpl
into
mov
iret
mov
ud1
mov
add
cli
pop
xor
cs
test
mov
mov
inc
dec
jo
frndint
int3
aas
dec
or
xchg
mov
sub
mov
loop
aam
jl
push
adc
and
inc
or
and
adc
aaa
xchg
and
inc
daa
pop
jo
bound
jne
and
push
cmpsl
lahf
dec
std
adc
js
sub
lret
aaa
filds
mov
call
inc
or
cmp
add
jle
and
sarb
in
fsubrs
rcrl
jbe
mov
fildll
add
movsl
xchg
test
sbb
daa
dec
addr16
mov
jb
icebp
sti
fwait
lahf
arpl
xchg
push
and
sarl
inc
imul
popa
cmp
rorb
push
jnp
inc
push
sbb
lahf
lea
icebp
int3
repz
pop
sub
out
or
sbb
cmpsb
aam
shr
sbb
scas
cmc
fistpll
gs
aam
inc
cltd
or
pop
hlt
jb
jg
xchg
pop
push
loop,pt
js
lret
adc
mov
into
sub
jnp
sbb
pop
xchg
push
push
das
xchg
sub
stos
dec
add
cs
lds
sub
sub
cmp
cmp
sbb
clc
sub
xor
incb
cmp
adc
gs
mov
sub
fwait
pop
sbb
xchg
inc
jmp
push
mov
xchg
or
lods
sbb
jnp
orb
pop
int3
mov
cmp
xor
lcall
mov
lds
gs
mov
imul
mov
test
or
add
testb
pop
test
shl
push
add
popf
jg
jae
sub
or
inc
jle
sub
aad
lea
sbb
fnstsw
mov
lret
jnp
pop
test
add
jecxz
and
out
pop
push
mov
scas
push
movsl
inc
xchg
testl
cmp
xchg
notl
loop
int3
dec
xchg
shr
das
int3
ss
push
icebp
scas
test
out
pop
mov
lret
dec
add
neg
fistl
sbb
push
pop
shrb
pop
shlb
add
mov
call
das
jns
xchg
das
in
shrb
xor
mov
push
popa
adc
rclb
jg
mov
xor
fcoms
sbb
cltd
sahf
jae
ja
xlat
rcl
popf
mov
lret
jbe
inc
mov
hlt
pop
shrb
rcrl
and
mov
xor
jns
in
mov
pushf
shl
cs
xchg
lahf
int3
into
icebp
add
jg
xor
mov
pop
cmpb
inc
and
fs
ja
js
or
sbb
mov
adcl
push
scas
and
mov
mov
add
dec
pop
sar
or
push
cmp
push
jp
stc
mov
push
pusha
dec
push
or
dec
jnp
cmp
jno
cmpsb
rcrb
sub
ds
adc
add
out
xor
cld
out
imul
xchg
or
mov
jge
jae
lds
data16
mov
jno
sbb
sub
push
rcl
rep
fnstsw
sbb
lock
in
aas
adc
dec
pop
inc
jg
aas
mov
dec
or
loop
lahf
xchg
mov
mov
lods
das
enter
insb
jae
or
decl
inc
int3
and
icebp
xchg
pop
xchg
insl
add
in
in
pop
sahf
push
movsb
push
pop
pop
gs
adc
jb
push
mov
sahf
ja
mov
divl
push
cmpsb
faddp
pop
je
push
xor
and
add
std
jg
add
mov
mov
dec
xor
aas
mov
push
and
leave
mov
xchg
dec
dec
add
lock
or
pop
outsl
into
sbb
dec
and
pushw
movsb
sarl
dec
push
jb
jecxz
or
in
fbstp
pop
loope
inc
jge
xchg
sub
mov
sbb
mov
out
dec
les
cmp
inc
mov
push
mov
rol
in
inc
dec
movsl
repnz
test
jle
cmp
ljmp
pop
push
or
xor
loop
dec
mov
push
push
lcall
mov
fmull
sbb
push
add
lahf
cmp
xchg
cmpsb
inc
seto
ret
test
jl
xor
pop
mov
adc
xor
jle
dec
stc
sbb
mov
adc
or
data16
les
inc
fsubrs
fidivrl
push
cwtl
sub
xchg
mov
mov
pop
xchg
pop
int
gs
shlb
fldcw
in
dec
pop
lock
enter
or
jne
insb
add
test
test
popf
push
pop
fnstcw
call
push
adc
cmpsl
jnp
xor
aas
or
icebp
out
lret
pop
lods
xor
dec
pop
dec
mov
dec
aaa
and
sub
bound
insl
jno
cmc
inc
rcrb
call
out
cmp
hlt
sbb
in
mov
aas
and
mov
mov
mov
xchg
push
jbe
js
aad
inc
cs
push
push
xchg
jo
icebp
nop
xchg
dec
arpl
hlt
mov
sbb
leave
sub
xorl
fstpt
sub
mov
das
push
sub
xor
pop
sub
lds
and
mov
lahf
mov
fmull
sbb
cld
mov
aad
and
jmp
jns
lahf
aas
in
jecxz
je
mov
js
leave
and
repnz
daa
inc
lods
cmp
into
jns
sub
or
and
mov
in
imul
inc
mov
pop
dec
push
test
out
xchg
idiv
push
xchg
sbb
mov
cmp
cs
movsl
out
dec
or
lahf
and
lea
mov
pop
js
mov
loop
xor
mov
mov
imul
xor
mov
add
mov
nop
mov
arpl
xor
stos
addr16
outsb
rol
push
mov
jo
dec
dec
in
sbb
aaa
cli
and
jl
test
xor
inc
xchg
pop
int3
addr16
mov
ficomps
jge
ja
ds
xchg
mov
jbe
sub
lods
test
sub
and
clc
add
sub
test
cld
adc
cmpb
andl
fiaddl
add
jb
push
stos
ret
out
out
mov
outsl
xchg
lea
mov
frstor
pop
in
inc
test
jle
stos
cmp
lret
lret
pop
mov
test
fs
fcompl
push
cmp
inc
ficompl
inc
testl
outsl
sbb
into
inc
insb
add
lea
jne
jecxz
fidivrs
fidivs
xorl
mov
push
or
adc
aaa
not
call
jle
mulb
jmp
inc
cmp
adc
leave
xchg
jbe
or
out
push
out
stos
sbb
mov
or
lds
dec
push
out
cwtl
int
sub
leave
out
ljmp
push
es
test
and
adc
rcl
bt
xor
sti
pop
mov
push
repz
jp
ret
xor
mov
or
leave
add
lret
mov
jnp
jg
or
shlb
sti
lcall
fisttpll
outsl
call
daa
mov
test
dec
int
lcall
add
and
mov
xchg
cltd
scas
lret
mov
mov
or
test
seta
fwait
jb
dec
cmpsb
fs
pop
xchg
pop
lret
les
mov
xchg
or
xchg
xchg
hlt
dec
ret
insb
push
scas
mov
fstpl
or
push
jae
ret
hlt
popf
sub
push
cld
pop
inc
fadd
mov
mov
repnz
js
in
push
push
leave
pop
fnstenv
rcrl
imul
mov
pop
add
lods
dec
adc
loope
pop
testl
pop
aaa
push
imul
test
lods
push
icebp
jns
jmp
leave
andl
lcall
js
and
adc
sbb
xlat
sub
push
mov
inc
repnz
mov
daa
loope
pop
and
mov
add
andl
jle
xchg
mov
adc
push
push
or
dec
or
aas
lods
cmp
add
arpl
std
test
cltd
add
xchg
fidivl
fmuls
pop
pop
adc
inc
xchg
cmpsl
or
ljmp
movsl
sbb
in
test
pushf
sub
insl
test
jae
pop
sbb
out
mov
imul
pop
jmp
into
ret
in
imul
aas
out
pop
cmpsl
xchg
xor
cmp
mov
push
loop
repnz
xlat
imul
clc
mov
mov
ret
xchg
scas
mov
les
dec
insl
jge
out
pusha
movsl
adc
and
loop
andl
lret
xchg
mov
mov
mov
jle
mov
mov
test
mov
cmp
fld
std
repz
lds
test
stos
nop
hlt
pop
mov
scas
push
daa
sub
outsb
aaa
dec
movsl
pushf
push
cmp
shr
xchg
notl
ljmp
ret
dec
imul
adc
movsb
js
inc
lock
jae
mov
push
orl
sub
dec
xchg
es
call
add
repz
push
lcall
jb
aam
inc
aaa
cmpsl
pop
in
fwait
xlat
imul
mov
xor
sub
inc
jmp
push
lea
loopne
aad
mov
mov
mov
inc
or
adc
xchg
mov
int3
jl
int3
or
push
inc
sub
loopne
test
or
stos
icebp
test
fmulp
dec
iret
outsb
imul
stos
aaa
mov
pop
push
xchg
andb
test
lcall
adc
adc
mov
mov
pop
gs
push
or
mov
jge
adc
lahf
xchg
sbbb
shrb
mov
mov
push
scas
cli
das
clc
push
pop
cmpsb
dec
mov
aas
xor
loope
sub
es
xchg
lret
mov
hlt
in
frstor
adc
xor
gs
cmpsb
ret
sub
add
pushf
add
adc
lds
cmp
notb
call
sbb
scas
gs
test
les
test
jb
mov
xchg
in
fldlg2
xor
mov
sub
outsl
sbb
sbb
jmp
mov
cmp
mov
pusha
xor
stos
jp
jp
and
icebp
dec
dec
in
cmpsl
psadbw
cmp
jl
mov
jecxz
inc
sub
bound
cwtl
inc
sahf
aas
cltd
xchg
pop
mov
mov
test
adc
sarb
and
fucomip
subl
gs
xchg
mov
bound
cmp
cli
push
ja
pop
pop
out
lods
ja
xlat
dec
push
or
push
cmc
scas
loope
subl
ret
lcall
push
aaa
xchg
icebp
lds
les
jnp
or
pop
cmp
lret
pusha
test
and
jae
mov
or
fisubl
movsl
rolb
push
icebp
add
fstps
jecxz
lods
adc
cmp
push
mov
xchg
mov
fcoms
pop
push
leave
xor
iret
and
fnstcw
or
xchg
mov
lock
push
push
jmp
je
mov
sbb
aam
in
outsl
add
jnp
nop
outsl
imul
das
adc
ss
push
push
test
test
fdivrs
popfw
pop
scas
dec
outsb
dec
into
mov
xor
sahf
rcr
cmp
in
sbb
loop
arpl
pop
xor
aaa
xchg
adc
sbb
ret
loopne
pop
jmp
jge
mov
cmp
mov
stos
adc
es
pop
mov
jmp
jnp
jns
insl
ljmp
in
inc
pop
mov
jp
jge
ja
cmp
sbb
xchg
ret
push
sbb
pop
or
cmp
pop
xchg
cmpb
pop
xorl
test
std
mov
mov
jle
pop
sbbl
add
aam
add
js
add
and
dec
imul
lcall
stos
jmp
sbb
mov
insl
in
test
test
dec
inc
sub
adc
ret
add
dec
stc
scas
shrb
cmpsb
fisttps
push
mov
mov
popf
fnstenv
sub
add
push
lods
ss
mov
mov
add
add
mov
jmp
int3
pop
fstpt
mov
sahf
and
cmp
imull
es
xchg
pop
pop
pop
mov
sbb
call
sub
add
jmp
jns
add
lods
ljmp
adc
lret
leave
test
mov
shlb
leave
pop
mov
xchg
test
sub
sbb
loope
xor
cmp
outsl
repnz
mov
sbb
cmovp
test
push
leave
aam
jle
pop
or
leave
xchg
sub
inc
insb
mov
jb
jp
dec
int
inc
dec
fistl
inc
push
dec
inc
stos
dec
aas
push
popa
and
aad
dec
aas
bndstx
adc
push
pop
pop
mov
mov
aam
dec
jnp
test
rorl
push
xchg
xchg
imulb
iret
xchg
in
lods
test
dec
rol
cmp
cmp
shrl
inc
jge
xor
es
cmp
imul
cmp
mov
inc
rcll
push
lret
add
jl
mov
pop
stos
rcrl
aad
sbb
mov
cmp
mov
aas
jbe
sbb
adc
lods
fs
xchg
addr16
xchg
jnp
out
mov
xchg
mov
mov
and
lds
dec
cmpsl
push
dec
jbe
test
cmp
mov
add
mov
jnp
or
lods
and
ja
cmp
daa
jmp
mov
or
mov
loop
cld
test
jp
mov
daa
or
sbbl
cltd
cmc
mov
aad
clc
fsubs
and
ret
dec
fucom
into
sbb
xor
xchg
add
in
ret
mov
add
add
mov
popf
cs
std
test
repz
out
insl
push
adc
push
jmp
xlat
leave
popa
or
lahf
sbb
dec
push
pusha
out
add
lods
pop
inc
icebp
rol
add
jg
iret
imul
mov
pusha
testb
movsb
sbb
xchg
jns
xchg
insl
ret
leave
lds
ja
pop
jg
inc
loope
pop
cmc
sub
icebp
je
lods
in
mov
add
int3
cltd
or
fdivl
mov
inc
mov
add
fdivrp
push
push
incb
aaa
mov
pusha
xor
push
insb
xor
xchg
mov
sahf
xor
xor
stos
and
pop
shrl
scas
dec
pusha
lock
lret
icebp
sbb
jnp
cs
mov
mov
sbb
insb
sahf
dec
cltd
adc
dec
es
jb
int
outsb
call
pushfw
call
mov
push
jl
add
out
outsb
cwtl
clc
mov
or
fs
pop
iret
aam
dec
jle
sarb
xchg
fldl
sbb
lock
pop
cmp
cs
popa
insb
xchg
movaps
mov
fsts
pop
cmp
ror
adc
loopne
dec
dec
xchg
sahf
inc
lea
sub
cmp
mov
das
sbb
roll
outsb
mov
fnstsw
addr16
add
arpl
je
add
dec
rcrl
mov
int3
imulb
sub
lods
xor
mov
mov
mov
les
dec
inc
xchg
xchg
xchg
and
mov
cwtl
jp
scas
fwait
test
jge
aas
mov
cmp
movsb
or
je
fcomi
jg
dec
jb
pop
or
in
rcr
xchg
and
push
outsl
pop
inc
jae
mov
lret
xor
inc
inc
mov
jb
js
mov
ja
pop
mov
dec
pop
aas
sub
xor
les
add
sbb
mov
mov
jns
mov
mulb
pop
sbb
jg
fcomi
jo
sarb
xchg
xchg
jmp
or
pop
test
repz
add
aaa
jle
jbe
pop
stos
jnp
std
adc
pop
daa
std
lcall
pop
scas
cmpb
inc
push
mov
sub
imul
mov
repnz
mov
add
es
mov
out
ficoms
xor
stos
lcall
push
xor
jecxz
inc
push
fnstcw
in
xor
push
xchg
inc
push
and
out
jae
inc
xlat
jl
mov
sti
lret
mov
pusha
lods
movb
pusha
stc
cmpsb
sti
loop
orl
in
aas
rorl
mov
pop
cmp
sbb
cmp
dec
jbe,pt
dec
inc
ja
mov
xchg
pusha
repz
mov
jecxz
aad
int3
dec
out
jle
test
inc
les
movsb
fs
gs
cmp
xor
test
imull
or
jno
sub
mov
xchg
adc
add
stos
push
adc
in
xchg
ficoms
push
xchg
lret
xor
mov
or
fidivl
cltd
negb
fld
jno
cmp
movl
sbb
mov
xor
sbb
mov
xor
lret
adc
inc
movsl
push
pop
cwtl
mov
add
xchg
sub
push
arpl
jmp
stos
cmp
into
jl
add
bound
cmc
inc
dec
rorl
mov
shlb
jb
fs
lods
cltd
mov
pop
ss
mov
scas
fadds
test
aad
test
dec
mov
std
jge
and
sub
and
push
gs
xor
je
jl
jecxz
cmpsl
pop
adc
mov
mov
ds
test
add
addr16
mov
sbb
jge
push
mov
es
mov
jo
adc
and
fstps
push
push
pop
mov
lock
movsb
imull
push
cmpsb
dec
outsb
adc
cmpb
mov
or
adc
or
out
add
aad
lcall
sbb
push
cmp
inc
mov
test
addr16
sbb
mov
sbb
fisttps
jmp
cmpsl
pop
stos
mov
or
lods
mov
jb
js
lcall
push
and
adc
pop
fldt
imul
loopne
dec
push
inc
dec
mov
and
cs
inc
cmc
scas
fnstenv
js
push
cmp
ss
pop
in
pop
xlat
cwtl
in
out
jbe
inc
jecxz
test
push
sbb
pop
or
mov
lcall
add
xchg
pop
lahf
sub
mov
rorl
imul
dec
pop
aad
lret
in
js
push
push
pop
insl
stc
xchg
and
push
out
std
addl
sub
scas
push
dec
jno
imul
pslld
cmp
jnp
pop
je
jle
loopne
bound
out
pushaw
mov
test
stos
lock
loopne
dec
mov
test
bound
dec
mov
ud1
jno
jmp
lea
outsl
std
addr16
fs
sub
in
and
fstps
inc
fs
sub
gs
lock
mov
outsb
push
sbb
popf
imulb
push
pop
cmp
push
or
fwait
xor
xorb
ret
push
imul
xlat
pop
ret
inc
jne
and
cld
push
dec
adc
mov
add
xor
add
mov
mov
mov
cmp
enter
insb
dec
mov
pop
inc
sub
jne
pop
inc
leave
loopne
mov
mov
notl
pop
fs
out
mov
add
add
mov
push
into
divb
xchg
jnp
inc
in
and
imul
into
imul
push
hlt
inc
add
sbb
sub
orb
sbb
and
shll
pop
xor
repnz
sub
lahf
push
cmc
pop
adc
enter
fs
testb
into
cmp
dec
add
shrb
pushf
shl
mov
or
clc
cwtl
push
dec
out
fs
aam
cmp
pop
stos
push
fs
fstpt
outsl
std
and
in
jge
adc
aam
xchg
cmpsl
test
pop
xor
mov
mov
jge
cmp
pop
data16
aas
cmpsl
cmp
mov
xor
fwait
jbe
fiadds
jne
test
xlat
nop
rcll
pop
xchg
mov
sub
xor
flds
popa
pop
xor
subb
mov
xchg
imul
pop
or
push
or
adc
scas
aad
jp
gs
lods
icebp
sbb
shlb
xchg
fbld
lea
sub
cmp
ficomps
xor
sti
sbbb
push
in
test
test
inc
fldl
test
push
sbb
mov
inc
jl
rcl
cmpb
mov
ds
movsb
xor
je
pop
sub
and
jns
cmp
dec
add
jo
ss
scas
insb
clc
dec
or
cmpsb
and
dec
xlat
lcall
mov
jae
pop
dec
sbb
repz
jp
out
mov
jne
push
jnp
xor
fists
pop
fisttpl
xor
cmp
test
loopne
push
int3
lock
cmp
mov
add
rcr
fsub
out
fcomip
xor
mov
cmp
fs
jnp
mov
imul
xor
fidivs
out
xchg
add
int
pop
ja
les
pop
add
outsb
mov
cwtl
ds
popa
rcl
and
fmull
sbb
dec
mov
mov
rorl
cmp
mov
idivb
push
or
mov
cmpsb
or
insl
mov
aas
cmc
adc
inc
fdiv
popf
ljmp
addr16
mov
fldcw
xchg
push
push
xchg
fdivr
loop
or
sub
fdivrl
inc
pushf
fisubl
pop
push
pop
cwtl
jp
xchg
inc
or
das
xchg
dec
outsb
cwtl
out
sbb
and
dec
call
imul
jecxz
push
fisttpll
fsts
xchg
ret
or
jns
les
out
adc
insl
inc
daa
fnsave
adc
gs
addb
dec
cltd
shr
sub
jae
insl
rclb
loop
jp
or
mov
push
and
or
push
ja
mov
mov
push
test
rorb
or
js
outsb
fnstcw
lret
ds
add
add
mov
jo
js
leave
insb
cwtl
cld
mov
or
cmp
pop
jae
sub
clc
dec
xor
cwtl
leave
rolb
inc
int3
jg
push
ret
push
subb
js
adcb
mov
rclb
or
push
roll
std
outsl
loope
arpl
mov
sahf
add
mov
sahf
mov
cmc
dec
cs
xchg
dec
mov
hlt
jno
iret
lret
iret
xor
fmul
fwait
mov
cmp
sbb
inc
or
sub
andb
repnz
je
cmpsb
mov
andl
ss
add
pop
stos
xchg
faddl
stos
add
loope
sub
sub
std
subl
fucomi
push
mov
inc
mov
and
ret
loopne
ffreep
out
sub
stos
in
fnstenv
jne
mov
fstpt
inc
cmp
jno
jge
insl
inc
hlt
pop
mov
mov
cltd
outsb
jl
pop
movsb
pop
imul
cmc
lods
adc
mov
das
fidivrs
push
scas
mov
xorb
adc
mov
cli
je
mov
or
cli
inc
call
jno
xchg
bound
imul
cmp
sbbb
adcb
xor
mov
lret
icebp
pop
inc
arpl
lahf
roll
cltd
sub
jge
sub
sbb
fdivrl
mov
push
xor
clc
push
fs
pop
cltd
imul
test
loop
aas
ds
in
test
mov
or
mulb
sub
es
fldt
fidivrl
xlat
andl
pushl
lret
cmp
pop
ds
jns
sub
rcrb
pop
out
outsb
sub
mov
mov
gs
fsubrs
popf
lahf
dec
add
xor
xor
jnp
dec
xor
inc
int
jmp
ret
push
popa
adc
ret
sub
fs
cmpsb
repnz
rclb
out
outsl
enter
lock
lcall
jno
cwtl
clc
mov
jns
push
arpl
jge
jae
jl
dec
xorb
dec
repnz
mov
ret
mov
adc
cmpsb
or
pop
and
out
or
push
cmp
loop
mov
sub
add
pop
inc
mov
repz
inc
rolb
jno
rcrl
mov
dec
cmp
stc
xlat
lock
insb
imul
icebp
xchg
push
dec
rclb
mov
ja
cmp
jmp
pop
sub
aas
imul
int
mov
xlat
pop
jne
popf
adcb
les
addr16
jo
loopne
rolb
or
in
js
xor
js
jo
aas
mov
lods
push
adc
ficoml
jge
sbb
cld
mov
es
ds
mov
scas
enter
repz
cmc
das
cltd
adc
lret
dec
push
cmpb
cmpl
lahf
xor
cmp
jmp
and
hlt
sti
jle
push
fistl
adc
mov
divl
aam
iret
gs
aad
jle
mov
pop
or
sbb
dec
in
mov
xorl
xor
popl
aaa
xchg
aam
gs
jne,pn
lret
jnp
lds
inc
test
cmp
outsl
jbe
sub
std
adc
mov
daa
sub
ja
sbb
ffreep
fwait
pop
mov
iret
out
inc
xchg
loope
push
movsb
lret
imul
xor
xchg
sarb
out
mov
sbb
das
xorl
xchg
popa
fdivl
incb
mov
push
jne
fs
or
push
push
jge
sub
cmp
sub
cltd
movsb
inc
sbb
push
addr16
ljmp
test
aaa
inc
sbb
sbb
add
xchg
decb
xor
sbb
popf
loop
movsb
mov
fdiv
mov
xchg
fldt
push
jb
xabort
and
add
je
mov
push
jbe
adcl
sbb
inc
outsl
lahf
sbb
and
sbb
mov
fmull
sub
popa
dec
pop
adc
fbld
push
adc
push
and
adc
mov
mov
push
adc
data16
out
xchg
sub
xchg
popf
aaa
fistps
cli
and
js
mov
jb
scas
xorl
fdivrs
inc
inc
cltd
mov
lea
push
cmp
mov
cmp
jnp
rcl
mov
sub
pop
repz
nop
scas
nop
outsb
jbe
stos
sti
inc
push
je
dec
mov
adc
aam
inc
test
stos
mov
jbe
pop
lock
jo
hlt
inc
sarb
inc
test
jbe
jae
shr
fs
push
jl
inc
xor
pop
loope
idiv
mov
fs
sub
mov
or
dec
sub
push
xor
std
ja
test
iret
in
cmp
imul
cs
outsb
push
xchg
add
lock
ljmp
inc
adc
aas
gs
filds
frstor
out
mov
mov
int
push
cmp
sbb
sbb
enter
cmp
addl
xlat
sub
adcl
int3
shrb
cwtl
leave
das
add
push
jg
add
push
ds
sub
loope
sbb
or
xorl
jle
xorl
add
inc
mov
add
stos
subl
mov
or
mov
inc
test
cmp
xor
cmp
clc
nop
lods
hlt
inc
lds
pop
addl
addb
mov
push
faddp
sarb
loop
fisubl
cltd
pop
push
pushf
xchg
fldenv
sti
dec
aad
aam
mov
mov
dec
mov
fcomps
dec
sub
mov
shl
adc
add
cmp
fsts
jns
mov
sbb
jno
cwtl
js
xchg
cmp
inc
push
xor
xchg
lahf
int3
cmpsl
call
aad
mov
or
call
sti
cli
inc
jne
push
mov
xor
xchg
jb
mov
lea
test
inc
scas
cmp
out
bound
mov
mov
ret
dec
sarl
sbb
stos
call
out
mov
mov
jp
add
data16
loope
fwait
adc
pop
xor
mov
mov
sbb
sub
jg
bnd
sub
fmuls
add
popa
or
jne
sbb
dec
icebp
cmpsl
and
and
sbbl
push
insb
in
addr16
out
sbb
mov
jo
push
sbb
inc
adc
ret
cmpsb
subb
sbb
stc
andl
mov
and
gs
cli
in
mov
leave
in
gs
jns
push
scas
jae
data16
push
mov
insl
mov
cmp
out
add
xchg
adc
pop
mov
mov
fs
cmp
movsl
sti
gs
lea
xor
pushf
mov
fwait
push
test
das
int3
in
sbb
int3
pop
xabort
sbb
inc
in
mov
push
mov
aad
ljmp
dec
fmulp
mov
xchg
movsl
pushf
pop
cmp
cvttps2pi
insl
and
or
cmp
shrl
jnp
smsw
outsb
lods
pop
cltd
sub
imul
xchg
sub
mov
mov
or
fisttpl
or
push
sub
sar
aad
cltd
jmp
mov
inc
cmp
pop
std
inc
cmc
aaa
insb
add
cmp
sub
xchg
mov
add
pop
lea
test
andb
mov
mov
cmp
push
and
jmp
xor
sub
cmp
cmp
push
or
sub
inc
inc
push
aas
xchg
cmp
incb
sub
out
mov
roll
fucomi
ljmp
rcll
aad
test
add
shll
int
jg
mov
mov
and
popa
lods
adc
incl
js
mov
cmp
outsl
mov
mov
pop
xchg
mov
sbb
sub
mov
sbb
imul
leave
lds
sub
add
xlat
fs
shlb
jl
loope
sbb
ret
cmpl
push
xor
pop
andb
out
push
decb
lret
imul
sub
mov
and
fcomps
fdivs
ret
je
fidivrl
mov
xchg
lret
das
das
aas
dec
pop
outsb
aaa
mov
clc
popa
dec
push
stos
repz
push
inc
pop
arpl
jmp
pop
mull
add
cmp
lds
imull
adc
ficomps
shrl
ret
test
xchg
inc
movsb
std
adc
xlat
adc
divb
shlb
push
xchg
xchg
jl
leave
popa
mov
sbb
jge
jnp
fidivs
lcall
in
aad
push
data16
mov
lret
ret
jle
xchg
and
pop
dec
test
out
push
xor
pop
inc
inc
push
imul
pop
pop
and
aaa
mov
or
or
adc
or
pusha
cmp
sbb
lods
hlt
in
in
adc
xlat
out
fildl
les
jb
scas
cmp
mov
push
jnp
add
push
pop
fisttpl
add
es
mov
adc
lods
dec
and
idiv
add
push
xorps
xor
stos
fsubs
les
inc
ror
rorb
add
jno
aaa
jg
or
mov
push
sub
mov
mov
inc
dec
cmpl
popa
int3
pushf
add
fdivl
mov
ds
pop
mov
cmpsl
cmp
add
pop
xchg
inc
lods
fsts
sub
jno
inc
movsb
cli
outsb
and
int3
int3
lock
imul
mov
xchg
icebp
cmp
lods
fdivrl
jmp
mov
test
xchg
sbb
jecxz
into
pop
fdivs
sbb
adcl
dec
dec
mov
faddl
negb
sbb
nop
jnp
inc
add
or
mov
test
sbb
mov
and
add
stos
push
pop
dec
push
movsb
out
and
cltd
add
insb
jg
enter
inc
adcl
stos
pop
repz
dec
fdivrl
mov
mov
lods
and
ss
jge
mov
mov
outsb
cwtl
daa
push
not
jbe
push
orl
outsl
lret
scas
pop
flds
data16
out
or
inc
cwtl
jae
sub
outsb
arpl
int
or
lods
fcmovnb
mov
pop
push
rclb
push
cli
push
jne
jo
jecxz
sbb
push
stos
cwtl
pop
mov
scas
aad
sub
pop
lret
xchg
push
xchg
lahf
sub
mov
fistpl
out
std
aad
and
mov
movsb
push
sub
subb
push
ja
hlt
or
pop
jo
xchg
dec
test
lcall
dec
push
aad
pop
sbb
loop
icebp
jg
mov
xchg
fs
out
dec
jp
push
mov
inc
scas
and
test
test
mov
cmpsl
inc
xlat
mov
mov
int
push
pushf
fistpll
mov
inc
mov
mov
jno
testl
pop
fdivrp
fwait
mov
mov
mov
push
cwtl
xchg
mov
test
xchg
stos
int
add
imul
sbb
inc
inc
adc
out
mov
pop
std
pop
xorl
xor
outsb
and
dec
pop
or
add
sub
cmp
sahf
xor
ss
fcomps
aas
mov
push
push
inc
out
inc
fcompl
jecxz
fisubl
mov
mov
mov
mov
push
adc
cli
xor
out
ret
rorb
inc
mov
pop
pushf
inc
out
decl
mov
inc
dec
push
lret
or
lea
adc
cmp
jg
or
and
nop
mov
xor
pop
orl
and
fisttpll
das
repnz
pop
popf
cmp
inc
mov
jns
mov
cmp
lods
pop
sbb
test
test
hlt
mov
pushl
ss
aam
push
xchg
mov
ja
jmp
inc
mov
daa
data16
add
inc
pushf
movsb
inc
jg
gs
and
jno
js
mov
jnp
inc
sar
je
inc
xor
bound
clc
lret
stos
mov
pop
inc
mov
xor
lcall
repz
out
test
xchg
movsb
cmp
je
and
lret
outsb
pop
sub
ljmp
pop
bound
pop
lret
fnstcw
jns
xor
adc
jo
leave
iret
mov
data16
fisubrs
and
pop
das
adcl
hlt
push
gs
in
pop
cmpsb
inc
divb
mull
mov
aad
sti
xor
mov
sub
imul
xchg
cmp
or
mov
scas
mov
inc
jne
xor
mov
dec
repnz
push
out
xlat
andb
test
clc
cwtl
or
sahf
push
push
pushf
lahf
out
sbb
inc
icebp
jl
stos
cpuid
test
decb
xchg
push
jmp
adc
cmp
out
mov
fisttpl
sbb
das
je
test
das
inc
jge
push
xchg
call
xlat
sub
out
in
dec
sub
add
xorb
jecxz
add
iret
test
jae
js
sti
push
not
daa
cltd
mov
pop
sbb
test
and
sbbl
lret
inc
out
shlb
pop
stc
push
cmp
mov
pop
push
mov
and
pop
std
inc
mov
pop
jnp
jl
cmpsl
push
lea
sbb
lea
jne
int3
sub
cli
inc
sbb
xor
and
mov
jle
dec
xor
das
inc
sub
lods
out
negb
cwtl
mov
test
xorl
mov
push
fadds
add
pop
xchg
movsl
aam
test
fsubrl
mov
test
cltd
dec
fldenv
mov
jno
and
xchg
stos
inc
in
inc
lods
dec
test
or
pusha
or
add
imul
dec
call
adc
lret
enter
subl
mov
fnsave
out
xchg
add
add
fdiv
mov
int3
mov
mov
add
add
lock
xchg
push
push
loopne
mov
test
mov
add
mov
jp
jmp
in
sahf
jle
mov
rcrb
jno
ret
mov
push
scas
test
push
ds
pusha
iret
add
stos
push
outsb
rcrl
hlt
xor
fiaddl
fnclex
out
push
or
inc
stos
popl
cwtl
push
sbbb
iret
cmp
repz
push
xor
ds
insb
lds
cmp
jbe
add
adc
jb
cmp
dec
or
cmp
fmuls
pop
lods
mov
das
inc
call
in
bswap
insl
push
dec
scas
lret
or
sbb
push
sub
stos
and
sub
sub
inc
adc
pushf
cli
push
mov
sahf
daa
filds
xor
jno
cmpsb
adc
add
mov
lcall
ss
clc
dec
aas
mov
ret
movb
jecxz
mov
push
dec
test
rorl
loopne
rol
cmp
adc
inc
das
xor
cli
pop
ror
movsb
inc
and
rolb
pop
jecxz
stos
out
inc
cmpsl
je
outsb
add
mov
scas
cmp
repz
cmpsb
mov
scas
int3
fiaddl
movsl
lcall
les
enter
pop
xor
xor
sbb
mov
or
shll
lahf
dec
jecxz
insl
mov
push
aad
inc
mov
xor
pop
clc
dec
xchg
xchg
jne
rorl
call
and
push
lret
pop
pop
push
and
mov
movaps
mov
enter
pop
cmp
fwait
mov
loope
xor
dec
leave
sub
inc
sub
mov
sub
cmp
mov
repnz
add
or
xor
lods
enter
loop
jmp
sbb
sbb
add
in
dec
lahf
cmp
out
pop
jge
test
mov
sub
test
movsl
cmpl
pushf
icebp
mov
sub
clc
inc
dec
dec
adc
jl
mov
jne
mov
xchg
outsl
scas
cli
loopne
daa
cli
mov
add
stos
dec
int3
push
repz
cli
mov
in
pusha
xor
fdiv
incb
jmp
imul
fstl
cmpsb
mov
mov
inc
push
mov
mov
add
lock
loope
push
dec
nop
test
nop
ret
fcoml
mov
movsb
xor
cmp
setb
in
call
adc
and
inc
xchg
subl
enter
adc
lea
loop
mov
mov
aas
xor
adc
dec
push
xchg
clc
xchg
aas
std
ss
out
adc
clc
sbb
pop
dec
add
xor
and
add
movb
test
jae
jo
enter
add
dec
fucomip
adcl
pop
out
adc
lods
enter
jne
aas
mov
mov
sbb
sbbb
add
enter
mov
mov
mov
mov
push
stos
popf
shrl
push
inc
sbb
mov
mov
aad
movb
push
in
push
cmovb
xchg
mov
clc
xchg
stos
out
adc
es
and
mov
jge
sub
test
loop
mov
mov
push
out
int3
in
jae
ret
sbb
out
and
ljmp
lock
popa
dec
jle
push
xor
add
or
rcrb
or
mov
ret
or
ret
test
mov
jnp
arpl
in
mov
int3
lahf
mov
push
inc
add
or
in
cli
rorl
stos
scas
sbb
cmp
movsl
cwtl
dec
rcr
stos
lods
in
mov
mov
push
std
and
movsl
clc
cltd
mov
and
pop
inc
xchg
popa
jo
mov
jecxz
cmp
xor
add
sahf
test
lods
xor
mov
xchg
pop
dec
aam
pop
jmp
stos
cmp
jne
add
fldenv
xchg
mov
ficomps
scas
fsubrs
jne
jb
outsl
inc
jge
repnz
dec
push
lret
xlat
int3
test
shrl
push
inc
and
jmp
and
sub
es
sub
pop
mov
jno
mov
pop
mov
imul
mov
mov
fisttpl
jmp
pop
sub
jno
xor
xlat
and
jmp
sub
mov
xor
movsl
xchg
and
iret
lods
mov
rorb
pop
flds
mov
mov
pop
dec
ficomps
mov
or
cmp
adc
xchg
sub
add
inc
testl
dec
xor
or
fwait
sbb
stos
inc
arpl
jb
cmp
imul
int3
push
mov
mov
inc
jae
mulb
or
sub
adc
std
ss
mov
or
mov
outsl
mov
push
jl
push
cmp
adc
jno
mov
jge
inc
loopne
cmpsl
aaa
push
push
jae
cmp
cmp
push
jbe
mov
cltd
cmp
xchg
xorb
push
jne
mov
jg
lss
mov
stc
adc
fwait
sbb
cmpb
inc
push
leave
xor
cmc
inc
fdivrs
sbb
and
mov
dec
hlt
jecxz
sbb
pop
mov
mov
inc
push
or
lcall
int
movl
test
jbe
xchg
xchg
cmpb
mul
pushf
out
fisttpl
out
aad
add
mov
sbb
and
jne
mov
fstpt
fstl
inc
repz
fcoml
fnstsw
out
bound
inc
lods
stc
pop
and
andl
jae
ret
shlb
push
jae
xor
jg
cwtl
repnz
nop
in
fmul
adc
cld
and
xlat
pop
jb
fwait
push
jg
les
sti
add
subl
lods
ret
int
or
cmp
popa
inc
push
mov
js
sub
sub
mov
enter
mov
ja
fimull
xor
stos
bound
orl
shl
rcl
sub
pop
add
ret
jecxz
inc
cli
je
cmp
adc
push
sub
add
int3
add
mov
jl
das
inc
or
insb
jne
loop
lret
cld
ret
cld
jg
stc
outsb
mov
sbbb
pushf
jno
or
mov
daa
pop
xor
mov
mov
xlat
sahf
in
les
cmp
xor
or
ret
repnz
in
cltd
mov
shrb
or
rcr
fidivl
or
imul
ret
fists
mov
dec
push
sbb
add
pop
inc
lret
jno,pt
jl
mov
dec
jo
or
mov
push
pop
enter
mov
es
pop
shll
fs
cmp
sub
push
inc
cmp
mov
jecxz
cmp
aaa
subb
pop
loopne
mov
cmp
gs
mov
pop
jnp
pop
les
pop
or
repz
imul
or
mov
sti
jb
inc
add
incl
xchg
pop
int3
pushf
adc
and
in
insb
push
sbb
xor
jl
xor
mov
shrw
dec
out
push
fs
cld
xor
dec
jae
pop
pop
shrb
imul
in
mov
addr16
xchg
out
jge
push
jbe,pt
out
push
insb
stos
fists
cs
sub
aam
lock
int
mov
and
push
xor
cmp
nop
cmovl
fcoms
shl
pop
repz
and
pop
out
jp
sub
and
jle
sub
cmc
mov
and
fstpt
jecxz
mov
sbb
in
mov
in
inc
jne
mov
out
jnp
lret
test
addr16
pop
imul
push
loopne
xchg
test
mov
cmpsb
inc
xor
pop
add
mov
jbe
mov
cmp
cmp
mov
add
pusha
test
and
lcall
sbb
push
push
das
mov
inc
movsb
xchg
je
filds
in
mov
bnd
mov
in
mov
lcall
lret
pop
outsl
in
pop
aam
out
cmpsb
in
iret
int3
inc
std
test
mov
cltd
data16
cli
adc
negb
push
or
mov
insb
shl
cmpsb
dec
adc
ds
push
pop
popa
imul
cmc
mov
stos
pop
xchg
movsb
imul
mov
push
outsl
adcl
arpl
sarb
pop
out
hlt
ja
scas
mov
test
rolb
lahf
mov
pop
shl
popf
rcl
push
or
fwait
out
int3
mov
movsl
adc
out
ret
in
pop
mov
mov
aaa
lods
movsb
gs
mov
cmp
inc
cmpsb
dec
pop
ret
arpl
int3
jno
xor
dec
stos
fsubrl
test
mov
jno
aad
adc
push
movsb
pop
dec
and
lods
sbb
lea
push
inc
jge
mov
ret
push
mov
jmp
icebp
es
jmp
fcoms
aam
jmp
mov
shll
pop
push
gs
icebp
mov
lds
leave
inc
scas
enter
push
mov
and
xor
popa
sbb
add
xchg
jnp
ja
test
add
nop
inc
xor
scas
cmp
fistl
cmpsl
push
xchg
jge
pop
mov
xchg
mov
mov
pop
or
pop
ror
cmp
shrb
mov
cwtl
stos
cmp
jmp
fldcw
inc
adc
movsl
or
pop
insl
pop
xor
fimull
sahf
movsb
jnp
imul
lock
and
lods
or
dec
adc
cmpb
add
data16
fwait
movsl
stos
mov
mov
lea
js
mov
fdivl
data16
mov
fwait
dec
mov
jmp
jl
mov
cmp
sbb
xor
sub
int3
jp
push
aas
jbe
ds
fistps
or
dec
ficompl
mov
int
xor
fisttps
dec
jl
mov
or
push
push
add
cmp
or
pop
test
lret
jecxz
in
fsubs
push
hlt
inc
popf
cli
inc
pushf
das
mov
and
call
clc
sbb
xor
jbe
mov
insb
xchg
popa
xor
jmp
pushf
pop
int
sbbb
and
arpl
dec
mov
xlat
lock
fisttpl
xor
bound
fldcw
inc
popf
or
adc
je
and
and
add
in
add
add
mov
setge
xor
cltd
clc
in
xor
mov
into
jecxz
adc
ljmp
imul
cmpsl
scas
jmp
cmc
dec
jo
cmpsl
pop
test
jl
sti
clc
popf
jecxz
inc
xchg
mov
popa
fldcw
hlt
imul
and
xchg
pextrw
mov
std
inc
sub
cmp
cmpsl
ret
inc
in
fistps
dec
mov
inc
jmp
push
dec
std
xchg
mov
or
xor
ss
jle
lods
adc
add
ljmp
sti
sti
xchg
sahf
pop
mov
fldenv
lds
mov
jmp
andl
push
push
mov
or
xchg
outsl
adc
bnd
jae
jmp
inc
mov
mov
inc
or
dec
dec
dec
out
xchg
cmp
popf
mov
std
or
fwait
sti
adc
or
jecxz
pop
ror
push
addb
add
cmp
jl
mov
add
cmpsb
and
in
dec
adc
test
inc
adcl
rorl
pop
cs
lahf
rorb
out
pop
adc
add
imul
xchg
or
arpl
ljmp
mov
mov
mov
ljmp
jbe
stos
mov
xor
mov
add
enter
mov
cli
enter
add
fildl
aad
das
pop
push
xor
dec
lea
test
roll
sub
xor
pop
jmp
ljmp
push
mov
aad
jmp
mov
mov
insl
push
and
cmp
std
sub
jo
xchg
shll
or
stc
pop
arpl
ret
in
add
test
jae
ds
fwait
cmp
pop
or
pop
sahf
push
repnz
in
mov
mov
fsubl
xor
mov
dec
sub
or
data16
dec
jae
test
push
adc
inc
loop
popa
fidivs
test
lret
sbb
pop
add
and
loop
fistl
lds
leave
mov
lcall
and
out
fists
rcrl
xchg
cs
pushf
ficompl
out
mov
mov
pusha
inc
cmpsb
add
dec
loopne
int3
and
pop
mov
lods
bound
jecxz
and
pop
mov
sub
jbe
mov
subl
xlat
push
dec
icebp
pop
mov
aaa
leave
pop
adc
add
jb
adc
stos
xchg
jecxz
push
sub
cmp
jp
xchg
gs
add
lcall
dec
je
and
mov
jbe
dec
jb
jne
cmp
mov
jmp
ljmp
mov
dec
cltd
fwait
sub
imul
ret
jecxz
jns
daa
mov
jmp
enter
jne
cmp
mov
pop
in
inc
movsb
fucomp
in
add
push
jle
mov
lret
stos
mov
push
test
int3
mov
sti
in
mov
out
mov
pop
div
mov
push
xchg
cmp
sbb
lahf
mov
pop
mov
and
stos
or
push
lret
inc
inc
adcb
add
sub
repnz
repz
es
pusha
inc
dec
sub
pop
pop
or
jnp
clc
xchg
stos
inc
push
sub
ret
outsl
fisubrl
jo
jecxz
aaa
rolb
and
outsl
in
cmp
out
xchg
outsl
pop
sub
sbb
les
dec
bound
fstps
dec
sbb
cli
mov
push
push
push
inc
push
push
jg
cltd
call
lock
sub
mov
add
data16
xchg
sub
mov
push
xor
lds
and
inc
sahf
out
xchg
sub
mov
cmp
push
cmp
cwtl
dec
aam
rolb
shll
mov
imul
cmpsl
mov
sub
aam
add
push
pop
jo
in
push
hlt
jp
int
cmpsl
out
inc
and
clc
movsl
mov
and
lock
and
lahf
cmpl
loope
into
sub
loop
lods
cmp
sar
mov
or
inc
scas
xchg
int3
stos
inc
out
or
inc
or
les
fwait
and
stc
dec
cmp
push
leave
pop
add
mov
push
sub
adc
push
sub
inc
sub
loop
testl
jmp
dec
mov
js
movsl
stc
xor
xchg
cwtl
insl
sub
jmp
lret
xlat
sahf
jecxz
and
js
sahf
adc
add
mov
mov
js
dec
pop
fdivrp
lock
pop
jno
cmp
dec
and
aam
pop
adc
ret
insl
jmp
cmpsl
andl
push
or
push
sbb
ficompl
das
cmp
fnstsw
clc
das
jmp
imul
rcr
lds
xor
out
jns
mov
adc
scas
or
int
sbb
fadd
sub
and
stos
inc
xchg
ss
scas
inc
cld
frstor
or
mov
xchg
inc
test
or
sarl
rcrb
rcll
les
mov
cmp
int
mov
xor
and
push
fs
xchg
or
jmp
mov
push
subb
and
sbb
or
fsubr
sbb
jge
or
popl
mov
iret
in
cmp
mov
lods
insb
cmpsl
push
xor
mov
jae
bound
or
push
fcompl
fsubr
push
mov
in
test
int
adc
ret
xor
cli
and
adc
add
jae
xchg
scas
inc
mov
test
mov
aaa
cmpsl
inc
imul
push
fdivrl
adc
or
jg
pop
xlat
adc
dec
sub
inc
shr
lret
or
call
mov
pusha
shll
xor
add
lahf
xor
idivl
aam
notb
mov
adc
push
add
insb
xlat
in
ret
leave
ret
lahf
cmp
cmp
mov
vmovaps
cli
jmp
pop
inc
xor
in
testb
ljmp
arpl
gs
fdiv
or
xchg
xor
inc
mov
mov
and
xor
jnp
jge
and
ss
loope
nop
jle
cmp
stos
je
fistl
movsb
inc
and
push
add
pop
fcomp
xor
xchg
jae
lret
inc
pusha
dec
mov
into
and
xchg
ret
mov
scas
cmp
mov
roll
pop
fistl
push
mov
pop
mov
mov
mov
out
xchg
adc
and
dec
out
int
aam
orb
lock
xchg
aam
fs
cmp
cli
imul
push
mov
mov
out
hlt
rcll
ja
xor
jns
enter
movsb
mov
pop
negl
sti
mov
xchg
in
pusha
dec
in
scas
iret
xchg
sub
ror
jge
imul
das
xchg
cmc
lods
sbb
cmp
cwtl
jp
jb
push
cmp
inc
xlat
pusha
insl
lret
mov
jno
in
lds
cmp
mov
lcall
jns
jmp
aas
test
push
jne
or
stc
lahf
out
mov
xchg
and
dec
mov
imull
xadd
enter
ret
xchg
repz
popl
int3
mov
mov
xor
lahf
xor
mulb
pop
xor
dec
test
rcll
ror
popa
push
jnp
or
pop
ficompl
call
das
stc
icebp
add
inc
jg
pushf
inc
mov
in
push
mov
xor
fnstenv
out
adc
adc
nop
cltd
pop
divl
outsb
lea
xchg
adc
in
push
mov
xchg
xor
mov
push
dec
mov
pusha
mov
push
cld
jle
or
lock
pop
mov
stos
loop
cmp
dec
add
jo
mov
add
mov
or
std
pop
mov
loopne
inc
insb
push
adc
movsl
xchg
sub
stc
mov
fmull
in
adc
fisubrs
and
cmp
sub
jg
push
dec
and
ljmp
xchg
mov
addl
push
mov
enter
xor
seta
push
scas
mov
or
or
in
xchg
outsb
icebp
test
mov
inc
cmp
jb
mov
loop
in
sub
repz
cmp
add
cmpsb
and
aas
ret
rcr
mov
pop
sub
push
insl
cmp
repnz
stc
mov
mov
mov
bnd
cli
cwtl
push
mov
or
jmp
add
mov
jmp
pop
in
lcall
daa
push
xor
movsb
jns
adc
sub
push
dec
gs
adc
add
adc
xchg
pop
xchg
jmp
mov
push
nop
push
movsl
pusha
jp
dec
cli
inc
sbbb
mov
arpl
scas
das
xor
lods
popf
stos
push
int3
and
shrl
shl
pusha
enter
mov
mov
xor
orb
inc
sbb
fisubl
mov
dec
mov
shrb
xor
push
jae
ja
inc
jmp
push
xchg
int
mov
rcll
div
add
lcall
rol
les
sarl
std
cmpsb
fisubrl
jb
cmp
mov
dec
add
xchg
je
jbe
int3
mov
test
inc
stos
ljmp
out
jne
sbb
repnz
notb
sbb
mov
push
push
xchg
cmpsl
adc
adc
inc
mov
mov
push
sbb
pop
in
daa
cmp
xchg
inc
aas
or
out
enter
enter
inc
xrelease
adc
pop
mov
fbstp
into
aam
push
frstor
xchg
shlb
xchg
xor
es
adc
dec
and
push
aad
xor
in
mov
sub
popa
loop
shrl
mov
sbb
scas
popa
push
xchg
inc
dec
pop
out
mov
popf
push
adc
pop
mull
push
mov
inc
pusha
cmp
jno
in
insl
mov
adc
loopne
mov
push
sbb
daa
rorl
addps
or
xlat
mov
dec
js
inc
movl
xor
pop
inc
icebp
test
test
add
mov
jo
scas
sti
mov
mov
mov
jb
loop
mov
stc
jno
je
jne
push
jnp
das
mov
arpl
jmp
test
cwtl
sub
jnp
stos
leave
rorl
iret
cmp
mov
sahf
and
cmpsb
jne
out
or
mulb
scas
ss
std
fnsave
js
mov
pop
out
in
adc
push
and
test
mov
pop
leave
push
mov
repz
dec
push
out
add
and
add
add
mov
pop
fs
arpl
mov
clc
jle
xchg
mov
dec
adc
mov
sbb
or
sbb
movsb
push
pop
jl
repnz
add
jecxz
push
mov
sub
push
xchg
inc
mov
add
shrl
xchg
adc
stc
cmp
dec
or
mov
popl
fnstenv
xor
jp
outsl
lahf
pop
jo
pop
clc
jl
in
clc
push
lock
jnp
inc
sahf
int
sub
sbb
or
xchg
scas
sub
jge
shrb
fbstp
and
xchg
mov
dec
clc
mov
sti
or
arpl
adc
lahf
and
adcb
jbe
inc
cli
js
sub
clc
je
add
or
sbb
xchg
lahf
roll
sahf
pop
pop
arpl
lock
inc
insl
pop
cld
mov
fs
dec
pop
mov
dec
lret
push
nop
push
fmuls
popa
mov
push
je
lods
dec
dec
fs
outsb
xchg
adc
push
or
push
fsubl
dec
mov
loopne
add
movsl
movsl
adc
leave
mov
mov
xor
jnp
popf
in
sub
scas
jno
in
inc
ja
outsl
push
jecxz
sub
pop
xor
push
aam
mov
cmp
addr16
cmp
dec
outsl
xchg
cmc
adc
int
lods
neg
fsub
cli
cmpsl
jnp
cli
cmpsb
aam
pusha
data16
ds
clc
or
fdivs
not
ss
jmp
test
mov
xchg
gs
jns
scas
or
mov
inc
pop
rcr
xchg
jne
addb
add
mov
push
out
movsl
sahf
cmp
pushf
sbb
dec
jge
mov
xchg
pop
and
jle
push
sub
test
fwait
lods
mov
out
mov
push
mov
ret
dec
test
mov
dec
and
push
je
mov
mov
xchg
repz
fldl
jne
cmp
les
xchg
dec
xor
push
dec
mov
pusha
lcall
cmp
xchg
mov
gs
fidivrs
push
test
dec
aaa
imul
mov
xchg
pushf
pop
mov
sbbb
or
cmp
mov
cld
push
cmpsl
js
imul
cs
imul
sbb
xchg
pop
addr16
cmc
cmc
insl
push
sub
cmp
out
inc
aad
sbb
iret
mov
test
push
jmp
cmc
dec
or
daa
movsb
xor
insl
sbb
leave
sbbl
push
sbb
movsb
mov
sub
rorb
pop
dec
push
push
sbb
pop
dec
out
not
sbb
push
leave
sar
push
push
or
int
sti
mov
dec
repz
fistpll
sub
clc
sub
mov
stos
fisubl
jg
push
ficompl
dec
sbb
jbe
mov
aas
push
mov
cmpsl
sbb
xchg
leave
stc
jnp
and
icebp
lea
and
out
popa
pop
dec
push
jns
scas
dec
aam
cs
stos
dec
mov
std
paddb
xchg
dec
sahf
mov
dec
ja
lret
and
pusha
jge
insb
or
mov
dec
ret
mov
push
dec
or
negb
into
mov
pop
popa
dec
mov
adc
cli
xchg
clc
sub
rol
jb
mov
cmp
cmpsb
lods
push
jne
mov
mov
mov
pop
sbb
nop
cltd
mov
jmp
leave
inc
fisttpll
fsubr
jae
jge
fs
lret
xor
iret
push
ffreep
or
sub
adc
or
inc
outsl
out
xor
adc
mov
and
js
jns
jmp
cmpsl
mov
inc
data16
adc
out
jns
mov
rcl
mov
pop
pop
inc
inc
cmp
lods
or
cmp
adc
or
mov
adc
adc
mov
cmp
xchg
shl
mov
shlb
outsl
mov
adc
mov
xchg
xchg
fiaddl
sbb
adc
cmp
mov
insl
cmp
fsubp
push
mov
jns
fucomp
clc
outsb
xchg
cmp
mulb
pop
jbe
test
int
and
js
mov
nop
mull
adc
or
mov
and
insl
fcmovb
adc
stos
or
mov
stos
and
daa
in
pop
add
icebp
scas
stos
cli
dec
adc
mov
lret
lahf
jne
pop
xor
sarl
push
testb
xchg
mov
icebp
lret
xor
mov
daa
gs
push
or
xchg
lds
test
or
add
xor
sti
imul
sahf
test
sub
xchg
mov
out
add
add
xchg
inc
xlat
scas
xor
jbe
aas
push
orl
pop
sbb
ffree
nop
mov
lds
shll
mov
clc
jnp
jbe
xor
cs
scas
mov
xor
push
leave
cmp
mov
xchg
adc
mulb
and
jle
rorb
and
xor
jae
ret
addb
in
adc
sbb
mov
pop
imull
cmp
sbb
sub
aam
inc
lret
out
and
jb
mov
orb
cmp
test
lock
int
sti
xchg
sub
mov
js
and
cli
addl
leave
jb
bnd
lds
sub
subb
mov
push
sub
lods
or
call
sti
je
push
ds
shrl
sub
adcb
cmpsl
shl
xchg
xrelease
mov
xor
inc
inc
loopne
nop
jp
xchg
ss
cmp
jno
xchg
movsb
xchg
dec
push
test
aas
mov
mov
pop
xchg
shl
or
add
xor
pushf
fsubs
xchg
mov
mov
mov
arpl
pop
cmp
xchg
lods
pushf
inc
jae
mov
dec
jno
sbb
mov
test
xchg
fiaddl
enter
push
cwtl
dec
add
dec
pop
mov
lds
pop
scas
push
stos
test
xor
xor
mov
push
das
cltd
lods
shrl
shrl
sbb
js
push
sbb
jo
dec
mov
adc
mov
sbb
or
mov
mov
add
mov
mov
xor
adc
data16
lea
xor
inc
mov
insl
adc
stos
loopne
movsb
adc
pop
pop
push
stos
testb
das
pop
ljmp
fldcw
inc
cmp
mov
and
mov
cmp
fs
pop
ja
cmc
movsl
mov
mov
lock
xor
jl
lret
fisttps
test
stos
cmp
adc
pop
jo
and
dec
leave
std
in
test
jp
pop
sbb
adc
arpl
std
pop
sahf
sub
leave
xlat
das
xor
mov
mov
repz
mov
dec
cmpsb
nop
mov
cmpsl
lock
scas
in
mov
push
fbstp
jmp
rclb
decl
mov
rclb
inc
jmp
add
out
mov
ljmp
inc
jmp
pop
into
inc
cmp
xor
xor
incb
mov
pop
insl
scas
leave
cmp
icebp
loopne
rorl
mov
or
push
dec
test
xchg
mov
and
movd
mov
in
mov
nop
das
xchg
adc
bound
xor
es
shrl
out
push
adc
imul
cli
scas
xchg
fnstcw
xchg
cmpsb
sti
push
lea
sbb
xor
sarl
dec
push
loope
mov
xor
push
inc
mov
dec
int3
xchg
xchg
lock
jb
out
lds
pop
repnz
and
leave
test
repz
insl
push
nop
scas
dec
into
cmpsb
jno
stos
push
ds
mov
sbb
ret
dec
inc
cs
gs
das
cltd
pop
adc
movsl
sti
jp
repz
sahf
dec
pop
aad
test
push
icebp
jns
cmc
sbb
push
cmpsb
pop
jg
call
cwtl
repz
out
mov
jo
dec
add
or
jle
fiadds
cltd
push
mov
mov
out
pusha
pop
xchg
jae
xlat
subl
xorb
mov
dec
mov
pop
jmp
movsb
add
enter
xchg
adc
std
mov
mov
sbb
jno
pop
mov
fistpll
xchg
cmp
mov
cld
xchg
and
inc
mov
xor
sarb
clc
jle
mov
pop
incb
lods
jns,pt
inc
insl
sub
call
push
inc
inc
xchg
jmp
lcall
scas
pop
std
lret
xchg
es
xor
outsb
adc
dec
call
bound
sbb
mov
dec
mov
ret
cmp
popf
xchg
cld
fistpl
push
adc
aad
mov
adc
out
xchg
popa
ret
rol
xchg
cltd
hlt
inc
dec
fwait
stos
xor
lea
dec
fists
stos
hlt
iret
cmp
jns
mov
jno
mov
enter
cmpsb
les
xlat
int3
sarb
int
push
pop
out
out
cwtl
pushf
call
repnz
and
inc
outsl
add
cli
jbe
loopne
jecxz
jg
xchg
cmp
push
loop
fmul
bound
test
cld
jno
jo
pop
xchg
inc
ljmp
sub
xchg
fwait
in
cmp
cmpl
push
jae
lcall
adc
mov
xlat
mov
movsl
cmp
jmp
lds
push
out
lcall
insl
out
pop
xchg
fiadds
repz
mov
lret
mov
add
fldenv
add
fwait
stos
aaa
movsb
ret
scas
mov
aaa
inc
adcb
or
int
cmpsl
inc
into
bound
call
jle
or
jmp
and
mov
cltd
push
in
scas
loop
mov
jno
mov
out
cli
ja
cmp
pusha
mov
mov
xorl
rclb
mov
mov
dec
loopne
in
scas
xor
repz
repnz
inc
popf
jno
push
lods
inc
cld
stos
mov
adc
lea
xchg
cmp
add
mov
jnp
push
lods
and
stos
mov
mov
cltd
sub
xor
subl
cld
pushf
test
add
cmpsb
das
sti
test
sbb
leave
subl
aam
lods
push
jge
loop
es
inc
pop
lahf
jae
xchg
aad
mov
xor
repz
mov
add
inc
sbb
loop
mov
sbb
mov
lods
pop
mov
cmc
ja
or
adc
sti
nop
jo
sub
pop
sub
es
jg
sbb
xchg
inc
cmpsl
dec
leave
call
pop
lcall
insb
pop
xor
fdivl
push
xchg
or
pop
push
shll
jmp
hlt
or
shl
add
mov
mov
fnstcw
pop
scas
pop
cmpsl
sti
push
dec
test
sub
int3
inc
adc
loop
ret
mov
je
loopne
aad
icebp
out
mov
mov
pop
inc
xor
lret
jmp
stos
hlt
movsb
orb
jg
movsl
aas
push
imul
in
mov
loope
iret
xchg
roll
xor
sbb
rcl
out
shrb
sub
aam
sub
sbb
repz
pop
dec
cwtl
pop
fldenv
jmp
mov
push
rcr
cmp
adc
jecxz
imul
lret
addr16
sbb
mov
sbb
jae
shrb
fdivrs
cmp
xchg
ret
lods
movsw
dec
in
lahf
aaa
jbe
arpl
sub
pop
add
mov
push
dec
dec
push
insl
pop
addr16
clc
mov
ret
adc
lods
aad
cmpsb
fcoms
pop
cmp
cmp
inc
rcrb
or
pop
into
inc
xchg
ftst
cltd
push
and
loop
cli
imul
aad
add
out
andl
mov
popa
adc
ffreep
or
inc
push
leave
cwtl
mov
sub
lock
out
into
aam
pop
pop
xor
stos
sbb
xor
cmp
test
mov
js
fisttps
xchg
lcall
cwtl
stos
xlat
or
cmpsb
andl
scas
ljmp
cmpsb
in
cmp
xchg
imul
ljmp
adc
fmull
loope
cwtl
insl
xchg
enter
enter
out
dec
es
mov
neg
popf
jno
lret
ret
cmpsb
push
xor
inc
mull
xor
dec
out
xlat
cli
lea
or
push
divl
rcrb
add
sbb
sahf
and
pop
and
adc
push
sub
inc
pusha
loopne
arpl
fimuls
sub
sbb
dec
insb
xchg
test
in
aas
adc
jmp
in
in
bound
dec
outsl
data16
fs
xchg
pushf
sbb
pop
nop
insl
adc
mov
fcomi
add
insl
outsb
adc
and
push
shlb
xchg
jo
lds
out
aas
mov
icebp
stos
aaa
lret
xchg
or
sbb
mov
xchg
xchg
outsb
incb
push
jo
fnstenv
push
mov
dec
pop
pop
bound
mov
pop
loop
test
fcmovnbe
inc
pop
add
test
cmpsb
inc
dec
xor
pop
cmp
cmpsb
cmp
or
mov
xchg
add
cmc
xorb
lods
sbbl
cltd
xchg
ja
jb
push
lock
in
aaa
imul
dec
push
adc
xchg
fnstcw
cmp
bound
movsb
fcmovnbe
dec
js
or
in
mov
adc
sub
call
inc
scas
lret
pop
inc
add
inc
mov
xchg
mov
jo
sbb
mov
xchg
cld
xor
ss
pop
inc
push
mov
repnz
jl
iret
sti
sbb
movsb
aaa
nop
stos
test
fstpl
fmul
cmp
out
cmpsb
ret
mov
and
stos
mov
scas
imul
in
push
add
lahf
sub
xchg
mov
ja
in
xchg
or
jo
push
inc
call
hlt
lds
iret
or
ds
pop
clc
dec
xor
and
or
js
test
mov
pop
jg
insb
mov
nop
ss
cmpsl
xor
les
jecxz
mov
adc
scas
shll
and
mov
cmp
lods
adc
xor
add
mov
pop
adc
imul
or
lret
xchg
pop
test
inc
in
fnstsw
es
sahf
pop
mov
js
xchg
cld
mov
and
dec
jl
xchg
fldcw
xor
sub
in
pusha
or
dec
mov
xchg
cmpl
int
push
sbb
add
movsb
nop
adc
psubsb
sub
repz
lret
lret
sub
push
mov
push
loope
and
and
rcr
push
sbb
push
adc
and
xor
push
jmp
aas
pop
outsl
shr
pop
lcall
dec
adc
dec
das
mov
packssdw
xor
inc
ljmp
das
inc
jns
icebp
scas
adc
ljmp
mov
lock
call
sub
inc
popf
push
pop
fdivs
fistpll
cwtl
dec
rcrl
loop
pop
mov
movups
sub
jge
sbb
xor
fstpl
ljmp
repz
xor
push
push
imulb
add
popf
stos
lahf
xchg
push
push
or
push
test
jp
int
out
push
jp
pop
push
xlat
push
inc
mov
shrl
mov
jecxz
aam
mov
dec
test
pop
mov
pusha
rcrb
dec
mov
fstpl
fwait
into
lret
cs
mov
iret
adc
insb
loopne
aaa
imul
cmp
mov
gs
sbb
xchg
jb
idivl
icebp
mov
movsl
ret
mov
movsb
insl
push
sarl
cs
jge
push
jl
xchg
int3
sub
xchg
ljmp
inc
xor
fldl
add
sub
xchg
bound
popf
sbb
add
xchg
enter
sbb
pop
push
inc
test
hlt
jl
cli
js
fstpt
rorl
scas
adc
push
dec
and
push
xchg
test
jno
daa
dec
xor
jne
call
xchg
test
dec
and
outsb
sub
imul
mov
rorl
jge
and
jp
rcrb
roll
outsb
jb
shll
mov
push
out
dec
or
out
hlt
in
pop
push
adc
pop
jbe
pushf
les
dec
add
in
mov
mov
jbe
cli
xlat
add
xchg
iret
repnz
sar
xor
ja
inc
ljmp
out
mov
sbb
lods
jnp
xor
inc
stos
sahf
enter
jno
data16
ljmp
dec
or
int3
ja
push
lcall
leave
inc
mov
notl
cmp
or
push
test
imul
ret
push
faddl
or
pusha
adc
test
loope
sbb
je
ds
push
lcall
lret
in
sbb
xchg
mov
and
jg
hlt
dec
and
push
jne
ret
movsb
aas
xchg
ss
loop
and
psubsw
in
pop
inc
rcrb
push
fistpll
push
mov
pusha
shll
mov
pushf
cwtl
shr
sub
inc
repz
mov
xor
popl
ds
loopne
sub
inc
cmp
in
imul
inc
mov
mov
aam
pop
insl
repnz
repz
pop
in
or
push
fdivs
mov
jns
adc
or
push
push
and
shrl
sub
incl
pushf
sbb
dec
popa
push
icebp
ja
sub
cmp
imul
sbb
repz
pop
andl
xorb
lret
ficoml
bound
sbb
bound
jl
xor
mov
popa
or
jge
je
ja
ss
mov
push
xlat
cmp
mov
stc
pusha
movsb
rol
std
adc
inc
dec
mov
cli
jne
int
dec
movsb
xor
out
push
arpl
mov
sbb
loop
add
adc
mov
sbb
lock
inc
cmc
mov
loope
pop
or
xchg
and
and
push
iret
push
push
arpl
mov
in
les
call
mov
loopne
pop
out
mov
out
mov
int
lock
lods
addb
mov
std
push
cmp
xor
sub
shll
pop
xchg
in
lock
loope
sbb
mov
xor
adc
daa
scas
jg
or
inc
push
cmpsl
imul
mov
cmpsb
je
fcmovnu
fisttpl
cmp
aad
mov
xchg
and
sub
push
sti
mov
mov
xchg
adc
cmp
push
cmpsb
sbb
push
jmp
sub
shll
mov
lahf
mov
cmpsb
xchg
into
xor
icebp
sbb
aas
cmpsb
mov
inc
pop
mov
inc
xchg
add
add
cmpsl
cmp
mov
cmpsb
test
repnz
pusha
sub
and
lahf
adc
cmpsb
fists
dec
arpl
arpl
inc
adc
lcall
pop
cmc
ror
rolb
mov
dec
das
and
icebp
fcoml
sub
and
xchg
sbb
push
xor
lcall
adc
push
sbb
add
in
fs
add
les
xor
sbb
inc
push
insl
pop
pop
xchg
icebp
add
stos
hlt
push
popa
pop
jp
sub
dec
outsl
mov
ret
sbb
sub
cmp
shrb
xchg
imul
jno
and
cmp
nop
cmp
mov
jno
push
xor
or
sub
stos
clc
adc
out
dec
xor
xchg
inc
cmpl
cli
jb
cmp
add
mov
rorb
add
scas
shlb
jg
inc
insb
out
adc
fsubr
jg
mov
push
mov
push
dec
or
subl
in
xor
inc
and
int
mov
insl
push
divb
push
movsb
enter
xchg
daa
fsts
jle
mov
das
push
fwait
aaa
inc
inc
jno
std
dec
lea
aas
mov
movsb
xor
bound
call
mov
cmp
push
mov
inc
cmpsl
cmp
xlat
in
cmpsb
pop
inc
or
mov
dec
add
call
test
jecxz
lods
mov
xor
repnz
rcl
movsb
jecxz
movsl
test
or
inc
repz
lock
or
jno
inc
or
add
cld
xor
cld
in
lcall
notb
mov
jns
testb
jge
lock
inc
leave
mov
insb
mov
fs
mov
add
outsl
daa
xor
cmp
inc
inc
popf
data16
mov
sahf
shlb
sub
dec
nop
pop
imul
sub
jg
push
jmp
lds
sbb
and
add
ja
inc
jmp
dec
mov
xor
test
fldl
jno
mov
xor
out
test
mov
cltd
mov
mov
pop
test
ret
scas
bound
ret
adc
dec
jge
xchg
push
mov
outsl
inc
out
es
jge
not
dec
xor
xchg
push
sub
jp
loop
mov
iret
or
jo
out
push
in
setle
jecxz
psubusb
xor
in
ljmp
outsl
rcrl
testl
or
jnp
into
je
cmc
in
iret
enter
aad
loope
dec
imul
leave
inc
popa
pop
imul
add
pop
mov
jmp
test
xor
int
mov
or
fldenv
jo
pop
xchg
xor
pop
cmp
cmp
inc
add
mov
mov
push
data16
js
xchg
mov
sahf
pop
sbbl
add
sbb
inc
and
fwait
test
sbb
and
jg
mov
push
sti
mov
xchg
add
mov
repnz
mov
mov
stc
mov
sbb
jmp
add
sub
mov
shl
fidivrs
mov
sub
hlt
dec
lock
mov
dec
inc
test
daa
mov
dec
ret
call
jno
adc
jg
inc
inc
jmp
and
popa
call
les
pop
lods
push
lret
in
pop
inc
cmovb
imul
cmp
ljmp
decb
addb
mov
dec
out
sub
mov
dec
jo
cltd
xlat
ret
inc
jae
push
push
inc
out
pop
subl
adc
inc
cmp
arpl
mov
cmp
sbb
xchg
xor
sub
in
mov
or
ret
jb
jne
adc
mov
adcb
dec
pop
jle
jg
sub
add
jle
loope
mov
loope
daa
jl
sbb
or
imull
mov
test
jmp
movsb
mov
jecxz
cwtl
in
xrelease
scas
xchg
mov
sub
sti
test
push
dec
leave
add
movsb
mov
mov
fdivl
adc
sub
cmp
dec
sbb
js
dec
mov
adc
test
out
lret
ljmp
jae
aas
jle
xchg
sbb
aam
adc
pop
call
mov
std
mov
add
sbb
jp
scas
and
pop
movsb
cli
nop
mov
mov
lods
pop
pand
inc
sahf
pop
outsb
jbe
adc
bound
cmp
orl
mov
roll
out
filds
int3
daa
inc
loopne
and
pop
subb
call
lret
stos
cmpl
mov
sbb
xchg
sbb
aam
jg
fcmovnb
insb
inc
jb
rcl
das
jl
cmp
es
mov
push
mov
jmp
and
push
ljmp
mov
and
ljmp
pop
add
scas
lret
jmp
jbe
jae
and
xchg
in
sub
jns
pop
stc
mov
cwtl
mov
pushf
cmp
and
int
js
dec
jge
pop
pop
or
mov
jbe
rorb
jnp
hlt
lea
fisubs
xor
lods
push
addr16
pusha
xchg
out
xor
imul
and
stos
push
xchg
sub
jge
mov
out
fisubrs
sarb
or
daa
iret
notb
mov
rclb
xchg
fisubrs
test
mov
and
mov
popf
jnp
scas
inc
sbb
lret
cmpsl
mov
sti
outsl
push
mov
sbb
mov
push
inc
out
jns
sbb
das
ds
cmp
lret
fwait
push
aas
int
sbb
inc
dec
loope
push
push
adc
dec
aam
push
jmp
inc
mov
mov
xor
fcoms
test
cmpsl
push
jb
xchg
lret
rol
or
jnp
mov
loopne
or
addr16
jl
inc
stos
js
inc
sbb
push
dec
lcall
xchg
mov
mov
enter
mov
xchg
imul
jle
dec
lods
xchg
stos
in
dec
xlat
push
adc
daa
shll
dec
add
sub
scas
out
movsl
sub
mov
pop
lea
mov
xchg
jmp
sbb
outsb
xchg
add
test
push
cmp
test
and
cmp
jge
pop
xchg
lods
cltd
xchg
movsb
movsb
sub
stos
xlat
jecxz
mov
out
ljmp
shl
and
scas
xchg
scas
inc
inc
into
movsb
nop
aam
inc
fdivrl
push
add
add
adc
fsts
mov
sbb
xchg
pop
sub
out
cmp
dec
sub
arpl
sbb
sbb
sbb
daa
push
add
scas
out
orb
lcall
idivb
mov
int3
xor
push
nop
fnsave
cmpsl
jg
adc
cwtl
xchg
test
insl
enter
ja
mov
push
lods
push
mov
pop
out
add
stos
mov
test
adc
testl
xchg
xchg
lods
lds
les
sub
hlt
sti
pop
or
lahf
xlat
aad
jb
int3
mov
cld
cmp
and
and
cmp
out
pop
in
sbb
jg
clc
out
dec
in
fistpl
fwait
and
ret
or
fisubrl
mov
mov
daa
mov
adc
fstps
adc
ss
std
test
cmp
mov
das
mov
stos
pop
cs
cwtl
add
call
das
cli
sbb
mov
add
bound
push
fs
mov
dec
fimuls
adc
pop
sarl
ret
mov
pushf
push
outsb
lcall
mov
mov
into
jmp
pushf
add
sub
inc
pop
out
pop
adc
and
add
cmp
mov
inc
icebp
and
or
mov
sbb
sbb
in
cmp
stos
adc
pop
in
or
imul
pop
mov
sub
or
sysenter
inc
or
jge
pop
mov
push
gs
push
or
xchg
iret
and
jg
mov
repz
xchg
mov
icebp
adc
dec
or
out
pushf
push
andl
mov
sbb
jmp
and
xlat
xchg
mov
xchg
and
dec
aad
imull
push
lock
mov
sbb
sahf
dec
cmp
or
dec
in
scas
mov
popf
loop
into
pop
cmp
add
add
sbb
cmpsl
pusha
and
xchg
xchg
test
mov
rorl
out
adc
add
push
inc
ret
in
push
cltd
bound
adc
sbb
addr16
insl
lods
pushl
push
enter
mov
pop
cmp
inc
imul
xor
xor
pop
mov
sbbl
pop
jge
mov
loop
test
je
add
push
imul
or
or
mov
addr16
push
sbb
outsb
movsb
jns
or
in
and
mov
cmp
imul
into
mov
mov
or
mov
ficoml
and
fbstp
mov
das
xchg
inc
in
in
mov
jmp
or
sub
scas
add
jecxz
call
jae
push
mov
mov
sti
insb
sbbb
mov
iret
or
les
ds
add
sub
mov
int3
aaa
cltd
lds
les
stc
cmpsb
and
mov
stc
cmp
loopne
sbb
std
in
cwtl
xchg
adc
sub
sti
pop
enter
cmp
xchg
cmp
sbb
jb
pop
cltd
pop
div
into
sbb
popa
jge,pn
popf
adc
js
outsl
sbb
cmc
jl
nop
arpl
popf
fistpl
or
lret
rorb
push
enter
adc
mov
sti
xor
sti
pop
cmp
mov
xor
add
and
rcr
fisttpl
aad
inc
es
add
loope
out
jne
leave
shrl
dec
dec
push
pop
lahf
call
test
out
fsub
mov
imul
or
mov
mov
outsb
dec
push
xlat
push
stos
sbb
dec
in
sbb
add
jae
lcall
hlt
call
inc
or
lret
dec
xor
mov
push
jg
mov
xor
cmc
sub
pushf
cmp
rcl
ds
nop
jge
into
jno
pop
and
in
add
fimull
insb
lcall
sbb
aam
inc
mov
xchg
fwait
insl
lock
mov
fsubrp
fs
cli
xor
ret
xchg
push
cld
mov
lret
mov
out
jns
mov
push
ror
pop
push
jle
sub
xor
adc
inc
xor
fnsave
ret
pop
inc
lds
dec
add
movsl
pop
aam
sbb
push
lahf
shrb
pop
ret
xor
fmulp
imulb
subb
or
jo
dec
push
pop
outsl
inc
loop
mov
jle
fimuls
push
dec
dec
and
inc
call
mov
mov
leave
mov
xor
enter
jmp
mov
jg
mov
jnp
sub
adc
push
js
xchg
inc
xchg
ds
fdivrp
aam
enterw
imul
cmc
andl
aaa
movsl
pop
add
mov
imul
add
in
add
push
cmp
sub
cmp
mov
jmp
mov
stos
aaa
or
push
xor
mov
xchg
push
test
or
loop
mov
jae
mov
jns
test
fwait
push
mov
repz
xor
cld
xor
arpl
or
jge
xchg
pop
ljmp
mov
mov
or
jge
test
stc
sahf
andb
loop
jns
pop
jnp
pop
add
out
daa
jne
imul
lahf
dec
add
xchg
fidivs
add
xchg
pop
out
lret
stos
test
enter
orl
outsb
sbb
cmp
inc
lea
test
lea
pop
or
fbstp
mov
sub
cld
rcr
jne
pop
js
loope
xor
das
xor
adcl
adc
pop
mov
sbb
sbb
xchg
xor
adc
mov
cld
jmp
xor
jo
lods
shlw
rcll
adc
mov
and
sbb
xchg
or
push
cmp
xlat
call
scas
decb
insl
inc
push
inc
push
iret
xor
sub
jnp
shrl
jnp
ja
ss
pop
add
rcll
mov
cli
pop
aam
lods
out
test
pop
in
push
jbe
mov
movsl
or
pop
sbb
xchg
mov
jge
inc
mov
pusha
aad
iret
xor
push
jmp
add
mov
and
push
pop
push
xchg
xor
inc
sbb
inc
cmp
addl
pop
es
daa
lock
mov
stos
pop
xlat
imul
push
push
xor
test
test
jle
imul
lock
mov
xchg
int
enter
add
xor
mov
sub
addb
je
scas
cwtl
cmp
mov
dec
mov
popf
jle
cli
shr
lods
imul
mov
scas
shrb
push
push
shlb
pop
xchg
xchg
add
cmp
lret
sub
je
inc
fwait
push
or
push
mov
pusha
test
rcrb
dec
out
daa
xor
xor
arpl
xchg
mov
sti
out
cs
push
push
shlb
in
push
sahf
pop
xor
push
adc
enter
adc
and
lods
lock
and
cmp
inc
add
mov
out
jne
out
icebp
cmpsl
inc
subb
or
or
pop
lret
inc
scas
stos
cmpsb
pop
jmp
sbb
fwait
dec
mov
movl
xor
test
out
sbb
ja
add
add
pusha
dec
xor
dec
in
mov
cwtl
cmp
sub
int
pusha
mov
fsubrl
pop
pop
mov
rorb
mov
jb
shr
dec
mov
cs
push
add
xor
mov
shlb
pop
mov
pusha
dec
cmp
dec
insb
rorb
hlt
dec
ds
rorb
mov
xor
lods
mov
push
pushf
lea
or
pop
imul
mov
push
pop
lret
xlat
pop
push
pop
test
enter
rclb
fbld
add
inc
mov
xchg
ret
jae
push
inc
sub
rorb
arpl
mov
mov
xchg
shl
add
push
mov
popa
dec
mov
stos
mov
out
jbe
lods
lds
ss
repz
test
leave
or
test
jmp
mov
enter
mov
fs
cwtl
pop
dec
or
xchg
insl
add
mov
adc
cmp
mov
adc
loopne
inc
and
and
fnstenv
or
lcall
leave
into
insb
sub
jne
pop
imulb
imul
mov
mov
sar
inc
cli
iret
sarb
inc
sti
jl
cmp
sbb
jecxz
test
xor
xchg
fwait
out
push
pop
ss
xchg
sbb
pop
add
insb
int3
pop
jecxz
fisttps
cmp
and
xor
les
sti
dec
outsl
gs
lock
ret
psubsb
sahf
lahf
lods
inc
push
adc
pop
inc
xor
push
sub
dec
insb
mov
push
push
nop
js
cmpsb
or
rclb
inc
lret
jns
out
or
aaa
inc
add
inc
adc
aam
test
lcall
std
ret
xchg
clc
outsb
lcall
aaa
test
popa
dec
fdivrl
loopne
dec
xor
mov
fwait
mov
in
inc
cmp
scas
dec
int
pop
mov
mov
mov
mov
inc
clc
push
arpl
bound
adc
hlt
dec
inc
dec
lds
adc
mov
int
sarl
mov
xor
inc
ror
xor
nop
pop
lock
adc
mov
dec
dec
mov
push
mov
mov
xchg
pop
mov
popa
pop
in
test
fs
xor
add
bound
cld
pop
enter
dec
pop
and
negb
lret
or
and
dec
adc
cvtps2pi
mov
inc
and
repz
add
dec
sub
in
dec
bound
nop
outsl
jno
mov
lahf
imul
add
fdivrp
cmp
xor
popf
lock
testl
mov
fsubs
testb
lock
dec
mov
scas
adc
sub
rolb
push
push
xchg
rorb
jnp
sbb
loopne
xor
fsubrs
stos
shlb
jl
or
fimull
xor
mov
mov
adc
sbbl
and
scas
lods
mov
loopne
inc
mov
xor
dec
pop
pushf
mov
sbb
xor
sbb
and
mov
xchg
mov
pop
sub
popf
lea
cmp
lret
andb
jnp
adcb
notl
fistl
adc
imul
pop
aam
push
pop
dec
mov
xchg
ficompl
or
ljmp
in
xor
movsl
adc
aad
repz
imul
ror
jmp
cmpsb
je
and
push
fisubrl
faddl
or
mov
test
mov
cmp
dec
cmc
mov
cmp
imul
cld
aaa
movsl
adc
mov
add
cmp
fistps
out
jg
lcall
test
insl
test
stos
out
jl
jecxz
std
test
xchg
jne
pop
pop
add
or
idivl
leave
or
fildll
cld
shll
pop
inc
and
xchg
mov
lret
pop
lods
call
adc
data16
jns
mov
mov
dec
jne
adc
cmp
push
jne
jae
cmp
aaa
pop
pusha
out
mov
lea
loopne
sub
fsts
lock
mov
mov
leave
popf
hlt
sbb
andl
stc
sbb
push
jne
iret
ficompl
push
and
adc
xchg
xchg
in
push
add
mov
int
fistl
mov
mov
movsl
or
push
mov
mov
sub
cmp
or
cmp
cli
ljmp
jg
out
mov
mov
jo
pop
cltd
loope
arpl
scas
adc
sbb
test
in
cmp
enter
push
jb
and
sub
jae
or
popf
scas
xor
cmp
add
loop
push
aaa
scas
pop
rcl
imul
sub
xchg
mov
cli
mov
sbb
lea
inc
adc
pop
mov
mov
divb
mov
gs
rcrl
jle
daa
in
adc
and
push
mov
sub
mov
adc
inc
mov
ja
jecxz
mov
add
add
or
adc
movsl
jle
out
cli
xchg
xchg
neg
cmc
mov
dec
fisubrs
xchg
fisubl
jno
testl
std
and
inc
test
or
pop
push
cld
cmc
nop
lcall
bound
ret
loope
push
inc
aam
xchg
mov
es
sbb
sti
int
loope
pop
lcall
decl
shrb
push
gs
mov
mov
mov
push
inc
ret
xchg
push
and
mov
dec
imull
cmc
lods
lahf
xchg
adc
mov
popf
sub
fdivr
sbb
out
fsts
mov
push
adc
mov
inc
std
xchg
xor
adc
mov
inc
cmp
dec
and
jle
sub
jne
in
cs
ret
or
dec
mov
mov
mov
scas
fldt
mov
outsl
in
mov
aas
mov
out
aas
xchg
imull
mov
cs
sub
cmp
push
and
mov
pop
and
fsubs
push
leave
movsb
mov
les
mov
mov
and
jge
leave
jle
roll
inc
mov
xchg
dec
adc
ret
les
cli
cli
ret
dec
setno
dec
and
movsb
cmp
push
lods
lahf
add
std
xchg
jge
jp
inc
lea
sub
je
mov
mov
lods
mov
test
inc
sbbl
shl
xchg
sub
cmc
jp
call
cmp
and
jl
rep
push
push
sbb
xchg
stos
hlt
pop
mov
mov
push
and
push
jecxz
adc
arpl
loop
stos
xchg
in
xchg
cli
push
testl
cmp
fcompl
or
sarl
jno
mov
loopne
sub
mov
adc
ror
clc
mov
xor
mov
push
lcall
fstl
test
mov
jno
rcrb
push
lea
push
push
je
push
xchg
les
loopne
into
test
lcall
inc
mov
cmp
subl
mov
arpl
pushf
fbld
mov
inc
enter
popa
add
jbe
add
push
jl
jo
jp
fistl
mov
fmull
out
mov
repz
cmp
scas
jb
add
pushf
push
and
notb
insb
test
test
das
js
cmp
mov
mov
sbb
adc
iret
fisttpll
mov
pop
xor
movsl
or
jg
inc
inc
or
jnp
data16
xchg
mov
sbb
cmovg
pop
sub
sbbb
mov
push
xchg
test
popa
and
or
ja
lds
aas
daa
mov
add
aaa
enter
cmpsl
sub
ds
out
jb
push
icebp
or
and
js
inc
mov
call
in
lar
mov
cwtl
adc
xor
xor
arpl
adc
gs
adc
lds
jmp
mov
sub
inc
fimull
sub
fwait
xor
xor
pop
dec
adc
sub
shrb
inc
outsb
lds
add
ja
dec
jp
lret
push
inc
cld
mov
movsb
outsl
cmp
sarb
mov
mov
sub
jp
and
fwait
mov
mov
inc
inc
sahf
push
mov
and
mov
inc
xor
mov
mov
orb
lcall
lods
mov
jns
adc
stos
xchg
sbb
stos
fsubrs
loop
push
push
in
lcall
xchg
or
add
xor
jg
scas
repz
cmp
or
push
cmp
dec
push
pop
pop
mov
pop
pop
leave
xor
push
loope
adc
push
sub
and
scas
cmp
sbbl
adc
aas
xchg
jg
lahf
enter
mov
sahf
daa
adc
fistl
add
jb
scas
sbb
add
adc
lea
dec
cs
xor
out
dec
movsl
aad
aaa
pusha
int3
in
movsl
push
add
inc
loope
dec
xchg
rorl
xchg
and
inc
inc
cmp
xor
stos
mov
inc
idiv
mov
xor
sbb
or
test
dec
xor
imul
sarb
push
jg
dec
ret
sbb
sbb
mov
shrl
lret
sub
xlat
push
sbb
les
fdivrp
cmc
sub
les
nop
mov
and
mov
enter
sub
or
shll
pop
pop
lods
lds
sti
add
sbb
sti
sub
rolb
pop
in
std
push
es
aas
push
or
jg
ja
adc
xor
push
sub
stos
shl
pop
ljmp
inc
sub
pop
aam
adc
and
aaa
jg
fdivr
add
mov
clc
popf
aam
mov
cli
sub
addr16
andb
movsb
jns
sbb
push
mov
lret
scas
sbb
mov
xor
dec
ret
lods
sbb
sub
pop
xor
andw
adc
sub
fiaddl
lahf
and
cmp
jo
jge
stos
fsubl
add
fld
cmp
mov
rol
push
mov
jne
fsubrl
mov
repz
dec
push
add
dec
xchg
daa
xchg
push
hlt
sbb
pop
idivl
stos
in
sub
repz
pop
test
cli
push
push
push
jl
das
mov
dec
push
push
mov
inc
mov
push
aaa
sbb
xchg
pop
sbb
mov
pushf
cld
cwtl
mov
sub
add
pusha
movsb
jns
sahf
mov
xchg
pop
jecxz
mov
ret
adcb
dec
or
rorb
push
pop
sub
jmp
add
psrad
and
pop
inc
hlt
jecxz
insb
cmc
cmpsb
sbb
shr
imulb
mov
jns
pop
jbe
mov
lret
mov
stc
dec
sbb
hlt
mov
loop
mov
fcompl
add
rorb
sub
loopne
mov
xor
or
dec
shll
stc
add
push
popw
fidivl
je
inc
mov
mov
sub
cmp
lret
ss
mov
loop
cltd
mul
or
cltd
mov
stos
fildl
insb
nop
lea
incb
sub
sbb
lock
mov
aad
ljmp
cld
pop
leave
and
imul
cs
in
push
test
cmp
sub
pop
nop
pop
mov
in
bound
push
mov
sub
ja
add
enter
add
shl
arpl
xorl
hlt
fidivrs
pop
int3
inc
mov
mov
ds
push
out
mov
sbb
notb
xchg
cmpl
and
icebp
enter
mov
fcmovu
or
sbb
mov
cltd
ret
inc
js
mov
jge
cmpsl
in
jmp
jge
outsb
xor
shr
imul
mov
xor
xor
jl
in
les
hlt
rcll
mov
xchg
iret
lods
lea
stos
cmp
push
leave
add
movaps
mov
sahf
fisttpl
add
push
push
bound
xchg
mov
aas
cmpsb
lds
cs
xor
xchg
sbb
cmp
xchg
std
roll
or
jmp
mov
and
sti
hlt
shl
loopne
cmp
add
loop
jb
mov
adc
fwait
aam
stos
insl
xchg
push
jnp
popf
insb
mov
cmpsl
rcr
cmc
lcall
jmp
scas
dec
mov
mov
or
das
lret
mov
add
cmpsl
cmpsb
sti
cmpsl
push
stos
inc
aam
xchg
pusha
in
adc
xchg
sub
pop
add
test
dec
ljmp
out
pop
loopne
mov
ret
rorb
sub
inc
in
fwait
mov
cmp
pop
push
sub
bound
and
fcmovb
jle
add
cmp
adc
inc
push
and
push
push
pop
add
inc
cmc
iret
rcl
sub
pop
scas
cmp
jmp
mov
enter
pop
and
pop
sbb
and
pop
mov
inc
jbe
jo
fmuls
push
sbb
mov
fistpll
dec
andb
push
in
xchg
jo
ljmp
inc
mov
or
lods
lcall
outsl
cmp
mov
jae
adc
adc
pop
dec
jns
addr16
sbb
jge
push
sub
notl
or
test
aam
jle
pop
daa
sarb
outsl
addl
call
push
mov
pop
adc
es
pop
add
adc
sub
loopne
imul
add
jecxz
jmp
notl
xchg
xor
pop
dec
mov
mov
ja
data16
decb
jns
pushf
or
mov
xchg
stos
push
mov
jge
cmp
inc
jecxz
sbb
call
fidivl
mov
and
scas
cs
out
push
mov
ret
lret
push
jg
ret
mov
divl
cmp
cmp
mov
lcall
mov
jmp
cld
mov
xor
addl
and
enter
test
xchg
shrl
lds
dec
jae
call
xchg
popf
ret
push
aam
mov
icebp
mov
jg
sbb
xchg
leave
sti
inc
or
push
loop
mov
mov
xor
sbb
test
insb
dec
data16
mov
aam
shrb
cli
mov
sti
mov
out
xchg
mov
ret
cmp
leave
push
pop
jl
lea
inc
decl
lock
outsb
mov
inc
mov
mov
and
jmp
push
adc
and
loopne
lret
aas
mov
rcrb
jmp
mov
repz
xchg
fs
idivl
cmpsl
push
scas
pop
jnp
pop
addr16
cmp
sub
jge
inc
pusha
stos
xlat
mov
mov
mov
xchg
add
int3
cmp
lret
and
das
ds
incl
push
sbb
xorl
gs
je
jo
cli
xchg
mov
ljmp
dec
out
mov
pop
fwait
push
xorb
push
lock
cltd
lahf
sub
sbb
mov
jbe
mov
xor
sbb
es
lret
repz
std
inc
pop
dec
pop
ffree
ja
add
call
sub
iret
xchg
mov
mov
ljmp
shr
leave
pop
pop
insl
cmp
jbe
sbb
inc
cmpl
xchg
leave
out
cmp
inc
jp
andl
ffreep
int3
out
inc
xchg
cmpsb
imul
inc
adcb
dec
adc
pop
jmp
ret
les
scas
repnz
mov
xor
jl
test
dec
adc
push
add
into
pop
loope
pusha
adcb
add
ficoms
xor
jecxz
shl
pop
cmc
data16
cld
sub
repz
leave
dec
in
scas
sbb
movsl
add
mov
mov
mov
mov
pop
ret
dec
pop
or
and
pop
cmp
cltd
loopne
mov
or
decb
xor
or
mov
jbe
pop
stos
hlt
adc
xchg
sub
mov
push
les
imul
aam
nop
cmc
mov
jecxz
mov
arpl
icebp
cmp
out
lahf
cltd
add
outsb
dec
aas
or
push
pop
aad
shlb
xchg
daa
jmp
sbb
lret
outsb
xchg
push
sbb
lds
in
add
and
cmp
mov
adc
dec
mov
jbe
xor
pop
sti
sarl
jle
cmp
repz
cmpsb
outsl
jg
push
icebp
xor
enter
outsl
and
push
jnp
sub
std
call
in
xchg
movsl
push
pop
icebp
and
jne
sbb
lods
push
das
adc
mov
daa
scas
pop
push
es
xchg
add
mov
lcall
std
test
mov
xchg
push
scas
enter
xor
in
stos
mov
sbb
out
outsb
sbb
test
cmp
lahf
pop
ss
ret
rcr
es
mov
rcrl
shlb
sbb
and
lcall
js
mov
inc
loopne
inc
push
pusha
test
pop
popf
jg
push
sbb
in
ficompl
into
aas
shll
addb
pop
in
xchg
jmp
jg
jo
movsb
push
push
roll
roll
insl
adc
addr16
mov
sub
xorl
out
and
std
inc
jb
ja
aaa
xor
push
fdivr
adc
xchg
loope
pop
dec
int
imul
adc
mov
mov
setbe
arpl
stc
xchg
pop
adc
lods
enter
add
inc
pop
test
jo
mov
xchg
fistpl
inc
sub
std
lock
sub
xor
adc
jb
adc
sub
jbe
jle
test
cmpsb
pop
jo
dec
data16
xchg
pop
xchg
aad
dec
mov
lret
add
pop
aas
scas
shlb
imul
ja
imul
loopne,pt
insl
pop
cld
aaa
mov
pop
mov
mov
xor
into
arpl
or
out
push
rcll
cmp
xchg
stos
insb
push
loopne
outsl
pop
pop
repnz
jge
sbb
pop
aas
mov
jo
daa
jbe
daa
sbb
mov
sub
and
ja
or
sbb
int
pop
xor
mov
mov
ror
fwait
xchg
dec
aam
dec
adc
icebp
movsl
mov
aad
xor
test
test
fldcw
adc
cmp
jg
test
inc
mov
dec
loope
sub
je
push
loop
push
ja
test
loope
iret
sub
insl
push
or
loopne
dec
lret
xchg
repnz
sub
gs
inc
into
inc
pop
dec
cmpsl
shlb
pop
mov
daa
add
sbb
xchg
xor
leave
ja
push
ret
mov
sarb
sbbl
inc
rolb
inc
fiaddl
cld
jge
dec
cmpsb
cmp
insb
sbb
loopne
out
or
pop
fxch
and
nop
imul
test
adc
cmp
pop
mov
mov
xchg
lds
jecxz
sub
adc
sub
or
cmp
je
pop
imul
jae
shl
lret
jo
dec
adc
push
lcallw
jns
jl
inc
xor
sbb
into
jnp
fnstcw
push
dec
test
mov
ljmp
arpl
lret
nop
cmp
pop
rcr
xor
add
dec
pop
in
pop
test
mov
xor
push
inc
fldcw
gs
repz
push
xor
dec
repz
jbe
dec
push
sub
mov
imul
divl
dec
test
or
in
xchg
hlt
push
and
xchg
cmc
idiv
aam
clc
out
clc
add
add
xchg
call
mov
push
sbb
lret
add
sub
or
and
sarb
test
sbb
dec
mov
mov
divb
pop
js
add
push
mov
cmc
pop
and
sub
flds
xchg
push
pop
add
std
insl
pop
jle
es
jmp
decl
repnz
loop
dec
aam
aad
outsl
push
orb
push
stos
add
pop
ret
push
movsb
dec
mov
lock
cmpsl
fldl
in
xchg
mov
jae
mov
jp
aaa
mov
jbe
nop
mov
popf
mov
and
or
ljmpw
mov
addr16
dec
clc
push
loopne
sub
xchg
call
fiadds
daa
subb
jae
test
sub
ja
jne
adc
adc
aam
xchg
dec
int
test
adc
shll
sub
sbb
dec
and
pushf
hlt
add
adc
cwtl
pusha
mov
jnp
xor
sbb
dec
cmp
sub
in
xchg
int
popf
mov
xchg
add
dec
clc
cmp
mov
cmc
or
inc
aam
mov
push
out
xchg
pop
or
push
in
xchg
and
jne
dec
stos
jecxz
mov
outsl
pop
jae
adc
jg
loope
fldt
adcb
mov
xor
cld
mov
repnz
repnz
aaa
lcall
outsl
push
adc
cmp
sbb
into
mov
mov
mov
pop
mov
sub
lock
pusha
mov
sarb
jge
leave
cmp
gs
pusha
ret
mov
sahf
jecxz
mov
cli
outsl
scas
out
cmpsl
mov
cmp
inc
pop
push
out
add
mov
mov
bound
scas
loope
outsl
mov
dec
cmp
jb
pop
stos
gs
es
push
mov
bound
add
sahf
or
dec
es
push
cmp
or
gs
cmp
inc
jnp
lods
xchg
popa
jle
or
cmpsb
lods
iret
jae
mov
shl
call
hlt
inc
jne
pop
popl
push
lods
inc
stos
jecxz
mov
add
pushf
xor
xor
out
out
adc
stos
push
enter
andb
std
push
xor
xchg
cltd
xchg
lcall
and
inc
jmp
out
push
stc
adc
incl
or
sub
adc
movsl
mov
mov
lahf
movsl
cli
bound
ss
pop
lcall
popf
in
sbbl
pop
lds
push
outsb
lret
into
jae
imulb
cmpsb
aad
sub
out
pop
mov
xor
dec
subl
sub
push
add
sub
aaa
jge
pop
cwtl
loope
jp
mov
inc
repz
faddl
sub
subb
dec
test
mov
sarb
call
in
jg
dec
popf
push
sbb
jbe
orb
pop
lret
add
mov
fadds
shrb
adc
pop
mov
arpl
dec
inc
shll
jecxz
lds
add
inc
lahf
in
mov
cmpsb
das
jle
mull
push
in
fnstenv
ljmp
std
adc
shll
cmp
in
inc
dec
dec
jp
fsubl
sub
fadd
xchg
lret
pop
popf
push
mov
lahf
insl
pop
xchg
repnz
loope
rol
add
sub
xchg
cmp
ds
into
inc
cli
scas
divb
or
call
add
adc
or
ljmp
jne
sti
xchg
pop
or
addl
xchg
in
das
gs
lock
mov
mov
cld
and
mov
leave
and
aam
mov
divl
or
lahf
mov
xchg
xchg
mov
cwtl
mov
sub
aas
mov
in
clc
addl
mov
mov
sbb
jo
jmp
jl
or
jl
int
lcall
lds
mov
idiv
cmpb
je,pt
test
stos
sbb
jne
or
repnz
scas
pop
add
push
adcl
pop
cmp
and
aas
pop
inc
mov
add
pop
data16
cmp
lds
lock
jp
sarl
stc
out
or
mul
andb
cltd
dec
addl
fcomps
pop
push
mov
das
inc
pop
mov
xchg
sub
inc
popa
imul
lret
push
pop
mov
jle
fdivp
xchg
pop
inc
mov
clc
fld
in
jo
xor
jmp
in
lock
mov
push
pop
pop
fwait
clc
add
dec
imul
push
loopne
loopne
ret
in
cli
jns
lods
push
inc
int3
imul
test
cmpsl
in
fcompl
sbb
aam
imul
dec
xor
fsts
sahf
mov
and
mov
pusha
bndldx
fstps
mul
adc
or
jne
pop
add
iret
xchg
icebp
pop
je
lds
mov
mov
or
cmpsb
fcoml
js
pop
aaa
cmp
inc
jp
test
or
or
sti
adc
repnz
xor
into
push
fdivp
xchg
add
add
push
mov
iret
dec
xor
in
jmp
xchg
add
adc
add
out
enter
dec
sub
pop
mov
jecxz
or
lods
mov
stos
or
mov
mov
or
test
adc
adc
es
loope
push
xor
in
and
test
sbb
sub
mov
push
mov
lret
add
dec
pop
addr16
test
inc
or
or
jmp
mov
or
push
cmp
pop
lret
lahf
xchg
mov
fstpl
xchg
lea
dec
pop
xor
mov
pusha
sub
test
test
lds
jecxz
in
jge
sbb
or
bound
clc
lret
jmp
pop
add
lret
sub
idiv
jns
sti
push
inc
dec
dec
pop
and
or
sub
dec
mov
stos
cld
fstp
push
mov
cmp
stos
lret
icebp
addr16
test
inc
lret
test
and
out
inc
push
jnp
xor
or
pushf
and
pop
call
fcmovu
mov
sbb
jno
je
jae
sbb
cld
jmp
and
stc
sbb
mov
aad
and
adc
sub
jno
test
subb
lcall
popf
in
fdiv
fucomi
popf
xchg
ds
sbb
pushf
lds
test
bound
shl
inc
repnz
lret
cltd
adc
fdiv
inc
cmpsl
fidivl
mov
out
test
ja
outsb
push
mov
test
movsb
sub
or
imul
jo
push
mov
mov
and
mov
pop
mov
pusha
add
sub
xchg
sub
repz
mov
jg
scas
addr16
xor
mov
int3
jo
leave
xchg
and
out
imul
push
or
mov
outsl
cmp
push
loop
pop
cmpsl
js
out
iret
dec
pop
sub
add
rcll
mov
fnsave
or
add
dec
aas
mov
ljmp
pop
iret
pop
add
cmp
pop
push
sub
fsubrs
mov
je
jo
fstpl
fsubl
scas
insb
mov
pop
lods
pushf
sahf
rclb
nop
test
fnstcw
sub
pop
jbe
adc
pop
adc
xchg
adc
pmaxsw
jo
mov
arpl
dec
adc
pushf
pop
hlt
mov
xchg
pop
sahf
or
mov
mov
negl
jp
popf
pop
ds
jne
or
cltd
mov
std
lea
orb
push
push
sbbl
xor
jnp
mov
dec
movsl
mov
stos
pop
out
outsb
pusha
imul
xlat
stos
dec
mov
inc
out
ss
jnp
jns
mov
orb
jecxz
inc
es
jl
dec
inc
xor
orb
jge
or
jl
popa
ss
sub
xchg
jo
xor
ja
mov
adc
inc
push
in
stc
ljmp
sub
test
cmpsb
and
push
pop
xlat
mov
test
and
je
in
mov
sbb
ret
iret
outsb
mov
mov
fsub
lea
enter
add
gs
mov
mov
mov
sub
lcall
jb
push
push
and
aad
inc
xchg
addr16
adc
jbe
rolb
add
sbb
cmp
push
jg
ret
mov
loope
cmp
sub
or
into
movb
out
mov
out
pop
sub
xor
dec
inc
dec
or
cmpsb
jne
push
push
xchg
add
std
adc
icebp
fidivl
add
pushf
inc
mov
in
es
orl
sbb
add
std
pop
ret
insl
dec
mov
test
fucomi
rcll
pop
mov
fwait
iret
mov
xchg
dec
lret
pop
fisttps
stos
xchg
jae
in
pop
inc
jecxz
aaa
mov
mov
adc
push
dec
jp
push
adcb
sbb
mov
push
lods
cld
xor
stos
pop
push
add
push
dec
lods
insb
mov
mov
add
sbb
cmc
ret
or
lods
and
push
jg
adc
std
test
mov
stc
imul
jecxz
adc
mov
adc
repnz
push
decb
repz
and
and
pusha
xchg
push
push
loop
and
insl
bound
jno
xchg
fbstp
frstor
lods
pop
out
int
stc
stc
mov
sbb
orb
testl
mov
cmp
push
clc
stos
es
push
sub
out
xchg
bound
std
mov
int3
lods
push
pop
popa
sbb
xor
test
outsl
inc
inc
iret
popa
aad
cwtl
fstpt
pop
cs
mov
cmp
or
inc
adc
fmulp
orb
iret
into
or
xchg
push
nop
push
insb
out
inc
xor
mov
cli
test
jae
cmp
and
add
pop
add
xor
out
fisttpl
and
inc
jb
mov
inc
inc
push
or
mov
or
dec
lahf
sbb
mov
enter
cs
or
scas
int3
adc
jns
stc
or
xchg
fmull
jmp
or
dec
push
add
cmpsl
mov
lahf
enter
les
dec
push
andb
fsincos
lcall
leave
jne
or
js
lret
push
push
lock
sbb
mov
js
clc
add
cli
pusha
ret
sar
ret
xchg
push
in
push
fcom
jnp
lret
je
ret
lcall
rcrb
lahf
lock
mov
clc
insb
and
test
mov
lsl
sub
pop
xchg
jecxz,pn
xchg
inc
cmp
xor
dec
mov
dec
cmc
adc
or
lret
add
mov
mov
loope
push
in
pop
addr16
sbb
jo
jmp
or
and
jl
enter
sub
sub
jns
cs
jle
xchg
mov
clc
xchg
insb
loope
jg
scas
cmp
shlb
cmpsb
mov
sbb
lock
xchg
adc
cmp
cmp
out
xor
mov
seto
mov
xchg
pop
mul
rcl
push
fucomp
adc
mov
pushf
xlat
test
push
stc
lcall
sarl
fdecstp
sti
cmp
jae
jo
push
push
lahf
stos
adc
mov
lock
mov
outsb
cli
leave
mov
mov
in
jmp
mov
or
sbb
xchg
mov
aad
out
lcall
mov
imulb
inc
xchg
fwait
mov
push
pusha
push
push
push
scas
lahf
mov
xor
inc
aad
and
dec
push
rorl
shrb
inc
push
mov
and
lcall
std
orb
inc
lods
push
push
and
pop
mov
mov
push
add
aam
outsb
repz
popf
or
lods
cmpsl
sub
sbb
iret
loope
add
mov
pusha
dec
sbb
push
ja
inc
scas
aaa
pop
pop
loop
lret
cmc
insb
xor
push
nop
outsl
cwtl
notb
loopne
stc
or
mov
icebp
and
in
cmp
pushf
rolb
mov
sub
inc
mov
sub
jae
aaa
and
icebp
adc
addl
pusha
rclb
sub
jns
mov
push
es
idiv
jb
ret
push
mov
arpl
dec
inc
xor
int
sbb
data16
imulb
jno
out
pop
rol
repnz
out
mov
popl
push
add
lods
sub
rclb
xchg
mov
mov
sahf
sbb
xor
adc
inc
and
mov
inc
pop
enter
jns
outsb
mov
mov
xor
test
push
movl
and
and
addl
jns
pop
enter
stos
das
dec
in
add
scas
jbe
push
mov
out
int
add
xor
rcrb
cvtps2pi
xor
or
cmpl
mov
cmp
ja
fptan
clc
das
repnz
inc
sahf
and
in
loopne
lret
ds
and
cmp
push
outsb
cmp
test
popa
lds
ret
pop
rorl
or
lods
dec
cmp
mov
outsl
out
pop
or
test
imul
jne
or
cli
or
test
jge
jge
test
or
mov
inc
les
mov
mov
inc
outsl
sub
pop
mov
mov
push
jae
add
mov
outsl
jle
xor
and
push
sahf
jmp
mov
inc
pop
enter
repz
mov
mov
into
pop
sub
repz
add
jbe
mov
fisttpll
testb
test
and
roll
ds
enter
pop
inc
adc
adc
push
push
mov
sti
xor
roll
clc
or
add
icebp
enter
xchg
xchg
daa
and
cwtl
sub
jo
pop
popf
sbb
pusha
int3
push
dec
sbb
stc
and
push
sbb
hlt
cmpsb
mov
dec
in
xchg
xor
xlat
cmp
fdivp
cwtl
adc
clc
ret
add
xor
cmpsl
add
aad
push
xor
les
scas
stos
js
mov
add
test
adc
sbb
adc
out
sar
add
jnp
sbb
add
mov
pop
dec
into
mov
adc
movsb
cmp
pop
mull
pop
mov
inc
pop
pop
ljmp
lahf
xchg
or
test
push
loop
cmpsl
or
insb
jo
pusha
pusha
adc
scas
cld
repz
lret
in
and
divb
xchg
pop
gs
xchg
sarl
fcoml
cmp
ret
lds
cmp
push
xor
mov
xor
cwtl
push
loopne
mov
jecxz
fcomps
das
loopne
fisubrl
das
rorb
fdivr
add
mov
jne
js
sub
jae
cmp
imul
repnz
fmuls
lret
inc
stos
addr16
and
pusha
mov
mov
push
es
xchg
insb
inc
push
rcrl
arpl
fwait
cli
push
cmp
or
stos
sti
mov
dec
testb
mov
and
inc
jmp
mov
lods
mov
movsb
lcall
lcall
int
jns
or
stos
std
test
xchg
addr16
popl
mov
push
jle
mov
and
insb
sbb
xchg
cwtl
cmpsb
data16
aaa
xor
gs
mov
inc
pop
mov
out
push
pushf
or
aad
dec
shlb
jmp
outsl
mov
adc
data16
stc
in
scas
aas
mov
dec
fmuls
adc
sub
cmp
lahf
and
cmp
pop
pop
push
int
xor
icebp
jb
lds
pushf
orb
jge
pop
fsubrl
cmp
divl
pop
or
icebp
bound
shrb
sub
inc
add
mov
mov
add
or
dec
jnp
dec
and
xor
inc
in
aas
and
dec
sub
inc
inc
mov
dec
fldt
and
mov
loop
xchg
push
inc
push
pop
mov
hlt
jns
sub
xor
outsl
loopne
or
cmp
mov
scas
cmp
sbb
in
lcall
xorb
jne
sub
inc
xchg
xchg
and
movsb
fcmovu
mov
mov
inc
push
cmp
aas
shlb
out
js
xchg
xchg
aaa
in
in
jns
inc
lock
out
xor
fmul
cli
out
ja
pop
push
inc
sbb
das
jl
out
xchg
and
xchg
inc
mov
sub
push
in
pop
scas
arpl
push
pop
mov
sbb
les
lock
sar
pusha
pop
jnp
push
jmp
sub
jbe
xlat
xchg
adc
sbb
sub
push
ss
or
loop
mov
ret
xor
into
lcall
cmpsb
iret
mov
and
and
sub
lock
out
mov
fbld
adc
inc
cmpsl
push
mov
sahf
insb
loop
loope
lods
push
sarl
fldenv
cld
out
shlb
pmaxsw
test
push
nop
pushf
inc
lods
hlt
jl
ret
sub
je
out
add
outsl
push
int3
out
pop
or
rorl
mov
cmp
bound
mov
cmp
mov
add
add
in
cmp
test
stos
mov
lcall
inc
jne
outsb
mov
jl
mov
loopne
mov
test
popa
add
mov
mov
scas
sbb
call
roll
lock
adc
mov
jecxz
dec
rcrl
ret
jne
mov
sbb
adc
loopne
and
pushf
mov
jne
push
call
xchg
scas
fstpt
fdivr
jg
mov
add
and
inc
outsb
push
inc
pop
xor
int
call
shrb
pop
inc
mov
lcall
fneni(8087
mul
movsl
dec
enter
pop
mov
out
fs
sub
xchg
mov
inc
pop
loope
or
fwait
jae
bound
add
mov
das
sbb
cmpsb
repz
movsb
sahf
cli
xorb
xchg
adc
orb
ljmp
mov
xchg
inc
es
insb
jmp
mov
xor
enter
dec
inc
and
sbb
je
xor
int3
mov
into
jg
scas
lcall
xor
pop
cs
lods
jl
jge
mov
mov
xchg
movsl
push
sbbl
scas
div
dec
lret
pop
push
loopne
insl
push
adc
loopne
sub
xchg
fildll
cs
mov
in
inc
movsl
cli
ds
shr
data16
mov
lds
jno
in
mov
mov
outsl
pop
mov
mov
dec
pushf
inc
sub
sub
mov
ds
sti
aad
sub
push
xchg
mov
sbb
or
out
mov
int3
pop
out
inc
stc
xchg
xor
sbb
push
pop
push
jne
jae
gs
shr
sbb
ja
lret
inc
xor
and
mov
mov
push
sarl
and
leave
clc
iret
sbb
test
xchg
cmp
mov
ficoms
fstpt
in
ja
movsb
mov
inc
push
add
mov
xor
mov
les
in
outsb
push
addr16
cli
out
movsl
cmpsb
dec
adc
mov
adc
fstpt
dec
lret
popa
les
pop
mov
push
ret
gs
jl
int3
clc
mov
and
dec
mov
incl
fdivrs
or
rorl
sub
jp
adc
dec
cwtl
sub
js
test
jecxz
jo,pn
and
or
insb
insb
jns
xchg
inc
pop
movsl
push
or
mov
cmc
test
sub
jns
xchg
arpl
jo,pn
pushf
mov
mov
jno
push
sbb
ljmp
inc
and
cld
ja
dec
xlat
dec
ror
mov
mov
inc
push
je
popa
xchg
lahf
xchg
pusha
inc
daa
pop
mov
mov
push
jo
ds
xchg
imul
in
rolb
and
adc
push
sahf
mov
pop
add
dec
lret
mov
je
push
daa
out
in
push
in
cli
cmpsl
sbb
lahf
adc
sarl
mov
mov
in
jge
es
pop
jp
xchg
sarb
jo
inc
xchg
jmp
ret
cmp
xor
ja
sti
push
cmpb
pop
pop
call
insb
or
mov
rorb
mov
lods
pushf
and
cli
rorl
sahf
cmc
add
lcall
inc
ja
not
bound
fcomps
lret
outsl
mov
testl
mov
push
jecxz
adc
xchg
push
cmp
hlt
dec
push
arpl
addr16
push
and
inc
inc
add
iret
adc
ja
in
lret
jle
xchg
stc
cmpsl
lahf
jae
pop
xchg
xor
sahf
in
and
or
dec
out
int
fdivrs
and
jecxz
jns
cwtl
test
mov
jge
push
pop
push
push
adc
dec
cmp
mov
lea
adc
push
sub
dec
rcrl
jne
push
inc
mov
gs
add
adc
cmp
sub
add
out
xchg
sbb
incb
sahf
xchg
mov
inc
and
icebp
imul
cli
subb
fsubrl
sbbb
int
orl
jns
push
jg
sub
lret
push
into
gs
dec
jne
or
xor
lods
push
adc
mov
dec
push
pop
data16
inc
cli
frstor
js
enter
sahf
jmp
into
sub
cvtps2pi
mov
test
xor
mov
gs
aam
cwtl
sbb
sbb
xchg
into
mov
scas
sahf
in
shll
cmp
nop
add
jge
xor
sahf
mov
mov
mov
ljmp
push
push
push
sbb
mov
les
push
pop
int3
arpl
decb
inc
adc
and
out
sbb
mov
sub
cmpsl
rcll
test
mov
jecxz
mov
aad
fmull
je
cmp
xor
pop
out
sub
cmp
cli
and
dec
xor
mov
jne
sub
out
xchg
das
test
mov
lea
imulb
aam
ss
jp
por
xchg
js
fbstp
repz
imul
mov
cmpsl
push
int
nop
ja
sub
and
fwait
and
cwtl
sub
xchg
jp
mov
ds
xchg
add
jnp
push
sub
lods
xchg
push
jl
xor
outsl
adc
jecxz
jmp
js
lods
out
loopne
clc
adc
dec
into
daa
push
aam
leave
xor
sub
or
jg
add
push
loop
pushf
pushf
mov
sub
mov
outsb
lahf
or
cs
loope
push
fimull
mov
mov
sub
mov
addr16
jge
pop
mov
cmp
fwait
or
push
nop
xor
push
imul
sub
shrl
stos
clc
mov
test
adc
mov
and
stos
sti
enter
je
icebp
lods
imul
adc
inc
les
lret
sub
mov
mov
or
and
cmpsb
lahf
movsl
icebp
cmpsl
insb
hlt
mov
adc
frstor
scas
inc
mov
jle
and
jl
sbb
inc
leave
inc
pop
ret
aam
cli
rorl
cmp
add
cmp
and
pop
push
clc
xor
es
mov
fstpt
in
dec
pop
inc
pop
in
cs
mov
cwtl
ret
fcmovnu
test
xorb
mov
push
repz
add
jmp
push
rorb
in
add
adc
sbb
pop
cmp
test
cltd
loop
pop
rcr
cmp
ljmp
ljmp
sti
and
dec
mov
lcall
sahf
test
mov
push
sub
lahf
les
sbb
inc
clc
xchg
lods
out
cmc
mov
adc
jmp
adc
mov
daa
sbb
adc
and
mov
pop
adc
cmp
pop
cmp
adc
fbld
rolb
dec
repnz
clc
pop
add
ljmp
xor
mov
scas
inc
jp
movsl
out
dec
data16
and
or
fisttpll
cmpl
dec
sbb
jge
jo
lahf
push
lods
fcoml
clc
add
pushf
cld
mov
cmp
dec
das
inc
inc
jl
sub
push
in
mov
ja
cld
sub
push
sbb
enter
push
sbb
inc
mov
xchg
adc
mov
les
xchg
mov
sub
adc
addr16
scas
pushf
fwait
add
aad
shrb
test
les
test
movsl
push
out
push
fsubrs
lods
push
lods
inc
fstpl
mov
imul
jno
ret
sbb
xchg
adc
fisubrl
sub
sarb
xorb
sub
and
pop
stos
mov
and
jge
xor
lea
cwtl
xor
lcall
stos
mov
inc
mov
ds
aam
mov
je
aam
subl
out
sbb
out
xor
and
pop
pusha
sub
lds
cmpl
mov
pop
sub
lret
imul
or
adcb
pop
and
das
dec
fldcw
and
pop
mov
test
jg
shll
xchg
lret
shl
es
or
addr16
popa
pop
dec
cmpsb
xor
or
jp
mov
sub
push
lret
imul
repnz
rep
dec
push
cs
pop
xchg
ds
add
iret
add
sbb
pop
mov
cmp
pop
outsb
xchg
insl
xor
lcall
cld
cli
stos
fsubl
call
stos
int
rcll
sbbb
es
mov
bound
in
lret
cs
cwtl
xchg
mov
addl
inc
jecxz
xchg
and
xor
pop
dec
les
es
aad
and
repnz
leave
movsb
out
jae
inc
dec
xchg
dec
push
std
inc
xchg
pop
push
xchg
or
and
into
out
jmp
ja
scas
xchg
incl
int
push
test
iret
cmp
hlt
xlat
add
cli
push
mov
pop
imul
sub
push
enter
xchg
ret
imul
xchg
mov
xchg
add
std
mov
ds
jnp
and
xor
loop
push
mov
adc
push
xorl
bound
outsl
fldt
jnp
enter
je
and
or
faddl
popa
mov
sbb
bound
adc
push
test
push
xchg
xor
jl
xchg
sub
repnz
sub
ss
lock
loopne
das
adc
das
sbb
fwait
adc
jge
inc
fisubs
out
incl
pop
std
add
jno
mov
mov
fiaddl
sub
mov
xchg
addr16
push
outsb
out
lret
jae
outsl
imul
push
sbb
xchg
mov
and
fcom
jo
sub
sbb
xchg
push
sti
or
je
mov
cmp
fcomip
xchg
or
movsb
jmp
arpl
mov
inc
mov
clc
mov
cld
pop
push
xchg
jmp
aaa
repz
push
add
lods
adc
dec
inc
cmp
cmp
jb
addr16
ret
movsl
jno
leavew
push
out
xor
adc
inc
push
mov
aad
imul
mov
ror
push
jno
push
fildl
push
stos
adc
push
pusha
jmp
push
addr16
inc
jp
cmp
adc
jg
ja
adc
add
push
jl
adc
hlt
pop
sbb
jns
sahf
cmp
cmpsb
or
sbb
ret
xchg
es
mov
jb
std
push
nop
js
nop
and
test
xchg
pop
inc
sbb
fldl
sub
push
sub
push
sbb
mov
add
stc
fsts
mov
add
mov
loop
pop
pop
add
filds
cmp
pusha
int
lods
push
lret
rolb
xchg
inc
scas
test
out
mov
pop
cmpsl
insl
mov
fldt
lret
pop
pop
jae
push
lods
cmp
xchg
adc
pushf
mov
xchg
roll
roll
push
inc
or
xor
xchg
add
add
into
pop
gs
int
sub
xchg
or
rorb
pop
nop
mov
xor
dec
movsb
add
stos
popa
adc
inc
aaa
shl
rolb
and
jae
jecxz
out
sti
imul
inc
inc
enter
lods
dec
lgs
lods
scas
mov
sbb
fildll
or
ss
sub
xchg
pop
mov
lahf
push
xchg
nop
or
add
out
ret
test
scas
aas
inc
lcall
repnz
test
push
sarl
xchg
pop
xchg
pop
pop
xchg
outsb
shll
iret
sbb
xchg
aas
or
adc
cmpsb
inc
subl
lods
daa
clc
add
cltd
fstl
pusha
lods
cmpsb
xor
iret
cmpb
fwait
mov
fstps
fwait
jle
fldenv
mov
into
pop
lcall
mov
xlat
pop
aad
enter
cmp
iret
inc
sub
pop
aaa
push
fsubs
addl
sub
pushf
or
pop
and
mov
mov
loop
inc
sbb
or
xchg
pop
adc
cmp
inc
xchg
lods
lea
adc
test
jecxz
test
and
xor
push
test
out
xor
mov
cmp
inc
shll
mov
mov
rcrl
xchg
cmpsb
push
jecxz
sti
or
mov
scas
aas
dec
ffree
dec
imul
fisubl
jecxz
bound
mov
ret
pushl
fcoms
jae
popa
aam
movsl
push
rolb
inc
jge
gs
sub
lahf
mov
cmp
sub
mov
jl
in
lods
jno
dec
loop
sti
mov
sub
mov
push
ljmp
inc
in
int
sbb
rcrl
mov
scas
sarb
cmp
call
xchg
pop
and
inc
pop
and
and
hlt
jle
popf
sbb
mov
mov
jae
mov
andl
jne
js
or
mov
shrl
pop
popf
bound
sbb
jae
cmpsl
dec
fisubs
call
ja
push
ss
add
push
lahf
stc
sub
test
cmpsb
jle
inc
dec
mov
or
aad
push
idivb
jbe
xchg
daa
mov
dec
pop
mov
test
adc
xlat
cmp
mov
sbb
cld
xchg
jae
adc
cmp
fadds
ja
pop
mov
ss
lahf
and
into
shl
mov
ss
dec
mov
sub
and
stc
lret
push
dec
rol
int
lea
fstps
fs
repz
orl
inc
xor
mov
adc
pop
fidivs
push
test
out
mov
movsb
shrl
mov
mov
enter
push
inc
lea
push
leave
inc
jge
pop
mov
cmp
loop
add
inc
hlt
pushf
adc
jae
inc
into
xchg
push
cltd
mov
mov
jg
xor
mov
leave
push
mov
mov
jb
outsl
sbb
call
push
fsubrl
ret
push
xlat
les
push
or
icebp
insl
sub
sub
ret
mov
cmc
ficompl
pop
and
psubw
mov
pop
or
adcl
insl
inc
scas
repnz
out
mov
fidivl
in
jno,pn
hlt
rcl
mov
pop
mov
push
sbb
push
nop
xor
lock
fistpll
push
dec
in
bound
stos
mov
rorl
pop
pop
ja
mov
int
xrelease
cmp
mov
mov
xchg
stc
jb
dec
pop
aad
inc
jle
xorb
cwtl
hlt
mov
jg
pop
popf
pop
jno
test
xchg
sub
inc
in
shrl
adc
fwait
and
testb
fisubl
in
fwait
mov
insb
cmp
and
mov
sub
adc
dec
pop
sbb
cmp
xchg
gs
lret
loopne
xchg
sub
rol
mov
jb
int3
sarl
cwtl
outsb
sub
cmp
popf
xor
jmp
add
add
mov
movb
mov
inc
dec
jg
in
adc
adc
mov
test
push
mov
movsl
mov
and
lret
mov
movsl
xchg
adc
and
and
insb
outsl
hlt
inc
and
adc
pop
dec
sub
rcll
ds
in
xor
sub
dec
or
out
orb
xor
adc
jmp
xor
pop
imul
dec
jge
andl
dec
les
push
xor
ds
mov
push
mov
cmp
cmp
in
xchg
leave
in
out
xor
das
outsb
cmp
pop
push
mov
xchg
pop
dec
arpl
outsb
pop
and
mov
add
lods
or
dec
xlat
pop
push
and
inc
test
jmp
in
mov
lds
dec
arpl
or
push
and
adc
push
push
or
shrl
fistpll
inc
adc
inc
enter
int
xchg
xor
or
out
hlt
cs
xchg
or
popf
rol
mov
inc
and
pushf
in
xor
inc
insb
test
pop
lcall
push
jbe
jae
and
lods
cmp
lock
rcll
in
fbld
fnstenv
add
xorl
cmp
xchg
cmc
and
inc
stos
and
cmp
pop
mov
sub
adc
add
sub
pop
or
and
in
int
fisubrl
lds
pop
cmp
jae
test
ret
sub
sbb
int
inc
mov
ss
enter
ret
fsts
lcall
nop
push
push
inc
loopne
mov
add
orl
inc
adc
mov
mov
repnz
xchg
cmp
mov
pop
dec
movsl
mov
mov
loopne
inc
enter
pop
inc
fninit
insb
pop
dec
into
nop
pop
call
lahf
data16
gs
stos
jle
mov
shlb
xor
das
stc
mov
scas
cltd
mov
pop
xchg
daa
mov
mov
fstpl
leave
jp
or
cltd
enter
mov
xchg
scas
add
data16
inc
pop
in
sahf
inc
cmc
fstps
aas
xchg
in
mov
fildl
gs
mov
dec
jl
fbld
push
sub
cmc
push
pop
adc
insl
jo
icebp
mov
xchg
fistpll
jle
idivl
sbb
and
iret
divb
imul
in
jle
cwtl
mov
sbb
and
ja
scas
fildl
add
pop
mov
jmp
inc
lock
bound
scas
clc
push
outsl
and
cltd
cmp
push
das
mov
jno
jne
les
mov
mov
jae
xchg
xor
mov
scas
ds
or
mov
test
fbstp
mov
pop
jo
out
mov
fdivrl
push
xlat
sbb
xlat
dec
mov
cmc
jno
xor
pop
loop
nop
sbb
stos
sbb
adcb
push
pop
das
xor
push
xor
jbe
mov
stos
int
sub
loopne
jb
xchg
ljmp
lret
push
sti
mov
xlat
push
mov
cmp
gs
add
mov
insl
int
mov
mov
jno
aaa
cmc
test
and
out
cltd
lods
fstps
aad
jns
pusha
push
push
mov
jg
pop
stos
repz
cmp
outsl
imulb
and
and
mov
cmp
stos
out
and
outsl
repz
jnp
xorl
add
dec
mov
mov
jno
mov
xchg
dec
fdivs
les
and
cld
test
imul
mov
cmpsb
push
lahf
mov
add
push
cmpsl
add
xor
cld
scas
push
sub
inc
xchg
out
push
jb
inc
mov
ja
xor
testl
shll
cmp
cld
mov
cmpsb
ficoml
xor
xchg
hlt
leave
cmc
sbb
aaa
push
adc
inc
mov
mov
sub
pop
aam
fldl
test
lret
push
dec
push
pop
xor
adc
adc
out
push
in
dec
or
or
or
out
mov
sub
sbb
ffreep
icebp
dec
mov
imul
cmpsb
dec
inc
and
sbb
incb
out
aad
inc
stos
rcrl
rcrb
bswap
xorb
add
mov
std
in
adc
test
ret
int
dec
test
psubsw
add
data16
mov
xor
jae
adc
mov
pop
mov
dec
jle
push
insl
and
mov
ja
data16
mov
mov
mov
jle
test
xchg
je
pop
mov
cmp
jmp
mov
inc
push
out
or
fisubs
add
enter
repz
adc
das
andl
xchg
fs
xor
cld
ds
pop
mov
pusha
invd
xor
xchg
adc
push
dec
pop
shrl
repz
outsl
xchg
inc
dec
insb
sbb
pusha
mov
pop
xchg
aaa
sbb
pop
mov
sub
mov
les
sub
mov
adc
push
mov
mov
xchg
jno
mov
arpl
mov
fadd
pop
sub
fprem
xor
int3
data16
cmp
cmp
mov
or
ss
push
inc
cmp
clc
and
adc
ficompl
lea
scas
loopne
pop
push
dec
mov
pop
sbb
mov
jg
cltd
pmuludq
mov
icebp
in
jle
movl
jle
xor
sarb
in
push
fwait
jmp
lock
dec
pop
dec
lcall
das
repnz
inc
push
popa
fisubrs
push
xchg
xor
js
push
mov
aas
push
add
or
pop
mov
iret
hlt
and
int3
inc
int3
xchg
jae
int
mov
dec
sub
mov
xchg
je
lahf
sub
ret
mulb
sbb
ljmp
jns
or
pop
adc
add
shlb
push
das
cmp
sub
fnstsw
push
and
stos
bound
xchg
jmp
cmp
mov
addl
mov
leave
out
syscall
add
hlt
lcall
mov
out
dec
fadds
cld
inc
mov
push
adc
fnstsw
je
clc
test
and
inc
mov
shld
loop
fadd
cld
jle
lods
out
xchg
pop
adc
dec
sbbl
mov
test
mov
mov
and
roll
mov
fs
push
dec
adc
jnp
ja
outsb
sbb
inc
pop
imul
outsl
das
mov
lods
lods
xchg
cmp
adc
loop
inc
int
or
pop
dec
and
add
pop
mov
mov
sbb
pop
jecxz
push
enter
lock
fnsave
movsb
mov
gs
dec
inc
jb
cmp
mov
push
stos
adc
sahf
and
mov
xor
xor
or
pop
cmpsl
aad
loop
or
xor
lahf
sub
mov
out
mov
mov
loope
dec
jns
aad
mov
outsl
sahf
push
mov
popa
push
lock
out
jmp
pushf
xlat
cmc
mov
mov
dec
insb
xor
shl
push
stos
mov
xor
std
in
push
inc
call
push
push
test
dec
cmp
pop
fcmovu
dec
out
mov
lret
out
imul
pop
add
mov
out
cli
sbb
jbe
jp
or
sub
mov
mov
sti
loopne
sbb
lods
jp
loop
in
mov
ret
je
dec
out
jle
leave
dec
or
mov
popa
out
push
add
pushf
cmovl
arpl
or
mov
mov
pop
lds
test
iret
cmp
sbb
xor
js
loope
popa
stc
xchg
push
mov
fwait
insl
dec
and
pop
int
inc
inc
jmp
jle
mov
es
and
loop
ficoms
pop
pushf
push
fcmovne
into
pop
mov
cwtl
cli
and
add
outsb
lock
ds
mov
dec
inc
mov
fistpll
adc
sarl
pop
enter
shl
mov
mov
pop
adc
jnp
repz
mov
andb
js
call
test
nop
add
push
add
and
nopl
pop
mov
aam
cld
sti
stc
lds
mov
or
shrl
repz
jno
pushf
jne
cwtl
inc
fisubrs
mov
clc
out
in
int
inc
cmpsl
clc
mov
add
add
mov
icebp
adc
mov
jl
in
add
cmp
pop
mov
push
jle
adc
sub
int
push
xor
and
movl
ret
or
or
xor
inc
mov
es
insl
scas
loopne
sahf
iret
mov
pop
sub
sub
or
mov
cmp
shlb
stos
mov
fisttps
add
dec
sbb
icebp
out
pop
sub
dec
push
push
loope
inc
imul
ret
je
rorl
scas
dec
jecxz
shrl
lea
and
jne
cmp
jmp
dec
adc
cmp
sti
mov
popa
arpl
bsr
cs
xchg
sub
leave
and
bound
and
test
mov
sub
mov
repz
add
daa
fcmovu
lds
add
fbld
jmp
push
xor
mov
icebp
sbb
sbb
jno
jne
outsb
inc
cli
ret
sub
xchg
cmp
mov
out
push
cmp
push
mov
aad
or
xchg
adc
mov
mov
es
scas
out
jmp
fwait
das
mov
push
xchg
push
mov
imul
int
cmp
sbb
std
arpl
mov
mov
subl
cmp
into
iret
xchg
cwtl
dec
sbb
outsl
push
add
mov
subl
push
pop
and
fs
sbb
mov
add
jae,pn
pusha
imul
dec
shll
pop
lcall
icebp
sub
mov
js
movzbl
mov
mov
daa
pop
les
outsl
pop
aas
popf
lods
adc
and
lods
sub
in
pop
insb
adc
cli
pop
xchg
addb
push
cmc
adc
inc
pop
inc
xor
fsubr
cmp
bsf
ljmp
gs
imul
add
addr16
xlat
nop
je
or
push
iret
fwait
int3
hlt
out
xor
and
cli
repz
test
mov
add
pop
sbb
add
stos
push
xchg
inc
test
push
cmp
movsb
mov
mov
imul
inc
cmp
imul
iret
jae
ja
in
adc
js
mov
aaa
mov
fisubl
xchg
mov
lods
sub
mov
sub
pop
jnp
jge
pop
sarl
cmp
push
fisttps
das
stos
inc
scas
mov
jns
icebp
lock
add
jb
aad
dec
iret
daa
dec
sub
or
ret
iret
add
test
pop
mov
aad
fdivl
jp
inc
pop
test
pusha
jmp
addr16
repnz
out
loop
jne
xor
test
stc
pop
or
jp
fs
or
das
mov
fisubs
call
int
cmpsl
inc
mov
xchg
lahf
rcll
mov
push
mov
xchg
adc
enter
xlat
icebp
pop
cmp
fdivs
es
lahf
inc
subl
jg
sar
enter
leave
mov
add
cmp
out
lods
or
lcall
dec
sub
int3
pop
mov
xor
jbe
cmp
jbe
lret
mov
sahf
lret
push
stc
scas
mov
in
mov
mov
lock
pop
xor
inc
imul
icebp
and
data16
cwtl
adc
push
rorl
js
int
mov
pop
arpl
or
inc
imul
mov
inc
jmp
scas
xor
imul
push
popa
xchg
jp
push
hlt
pop
or
shrl
push
sarb
mov
dec
mov
sahf
or
mov
outsb
aaa
lret
andl
add
jl
sbb
rcrb
lds
lret
sub
cmp
hlt
fisubrs
pop
jnp
test
ljmp
lds
inc
cmpsb
test
into
xlat
cmp
or
mov
mov
inc
jns
push
test
cltd
push
mov
arpl
data16
xchg
jecxz
hlt
shrl
sbb
loop
sbb
ret
jns
fdecstp
mov
ret
jae
sbbb
mov
pop
jl
dec
adc
mov
stos
and
mov
add
fisubs
pop
mov
stos
addr16
js
rol
and
or
ja
mov
cltd
dec
mov
into
cltd
mov
xlat
call
sbb
mov
in
dec
loopne
leave
mov
fcomp
test
mov
js
dec
fiaddl
xchg
out
outsl
divl
out
add
aaa
lods
pop
fs
bound
shl
rol
xchg
cmp
inc
lock
stos
adc
mov
scas
xchg
cmpsl
mov
pop
jecxz
bound
cld
data16
int
pop
jl
pop
or
fsubrs
imull
lds
cmp
inc
int3
and
rcr
add
lahf
xor
push
cli
cmpsl
into
lea
shr
jo
imul
in
dec
and
jbe
push
xchg
pop
inc
cmp
loope
add
aas
xor
test
out
mov
inc
jmp
pop
cmp
loope
test
xor
cs
jmp
and
dec
dec
mov
lock
or
or
add
sub
cltd
push
jae
xchg
jb
and
test
jo
sub
lea
lcall
xchg
mov
test
sub
mov
mov
jae
jns
dec
push
xchg
insl
popf
es
xchg
data16
hlt
in
jmp
repz
rolb
ficomps
enter
mov
pushf
test
insl
add
mov
jae
lea
lcall
inc
js
imul
outsb
pop
mov
pop
dec
icebp
and
stc
dec
push
leave
jns
loope
cli
mov
push
cld
sub
in
dec
and
iret
or
xchg
aas
xchg
fdivl
xchg
push
mov
bound
repnz
dec
xlat
mov
lret
bound
sbb
ficoms
inc
je
sub
xor
lret
add
scas
shll
cmpsb
repz
les
imul
mov
std
jb
cwtl
sbb
testb
es
mov
sti
int
imul
inc
jge
in
dec
mov
dec
movsb
dec
mov
arpl
imul
out
into
loopne
stc
fcmovb
jne
push
icebp
dec
les
sub
and
repz
dec
in
adc
xor
fcomps
cmp
adc
mov
jecxz
movsb
adc
lret
adc
pop
fists
cmp
call
xchg
sub
inc
popl
add
idivb
jmp
xor
pop
fnsave
mov
rol
rorl
cmp
xchg
loope
cwtl
xor
sti
pop
dec
dec
push
mov
cwtl
xchg
hlt
es
pop
inc
subb
jge
in
xchg
std
xchg
sbb
insb
mov
xor
mov
or
inc
mov
scas
adc
rol
xchg
inc
cmpsb
in
cmp
mov
inc
data16
or
pop
and
add
xor
ret
jne
adc
jge
lods
andl
lret
mov
shll
sbb
inc
data16
lock
fcoml
and
scas
cmp
xor
test
call
jmp
outsb
js
xchg
out
xor
ss
jo
imul
and
jl
dec
cmpsl
clc
xchg
sub
aas
fstpt
xchg
lret
lods
popf
clc
aad
sub
pop
shl
dec
ljmp
and
push
and
sub
sbb
xchg
pop
fs
imul
sub
cli
mov
movsl
das
cli
mov
f2xm1
push
incb
adc
pop
mov
hlt
insl
cmp
sub
icebp
mov
sar
and
loopne
dec
std
pop
fisttpll
mull
adc
adc
lahf
fildl
add
adc
jecxz
mov
xor
jmp
mov
cmpsl
xor
mov
ret
adc
push
dec
arpl
ret
in
in
les
pop
pop
ds
xchg
mov
pushf
mov
repz
popf
mov
scas
cmp
pop
sbb
enter
mov
sahf
jno
mov
pop
lahf
push
jns
and
subb
adc
cmpsb
gs
lcall
sub
mov
mov
xor
hlt
lods
xorb
push
xor
lret
jno
jmp
js
aad
fsubl
test
or
test
xor
outsl
cli
arpl
or
pop
or
adcl
in
lea
push
xor
xchg
fsubr
pushl
inc
into
inc
pop
idivb
pusha
fstpl
imul
cld
mov
fs
nop
mov
ljmp
mov
or
pop
jle
fdivrs
das
ficoms
xchg
repz
fs
sub
popf
add
jns
cli
mov
aas
push
add
push
mov
mov
aas
push
iret
scas
jle
stos
xchg
xchg
lea
jecxz
xor
inc
mov
jbe
or
rorb
ret
or
insl
pop
loopne
cmp
rcrl
imul
mov
incb
lods
add
iret
and
dec
pop
cmp
popa
stc
test
ror
mov
pop
xchg
xchg
aaa
mov
iret
or
ret
push
leave
out
or
decb
mov
push
bound
gs
test
cmpsl
sahf
sbb
or
icebp
dec
outsb
popf
fdiv
jecxz
daa
push
in
xchg
xchg
adc
ret
xchg
imul
out
dec
xor
in
insl
into
pusha
out
mov
adcb
repz
test
fcomps
fwait
xor
mov
mov
jnp
inc
inc
movsb
pop
cmp
lahf
cmp
negl
sub
loope
leave
lcall
les
cmp
jns
inc
ret
dec
or
ret
clc
and
cmc
mov
call
ja
fs
pushf
xlat
lds
popa
sbbb
xor
mov
fwait
int
sub
pusha
add
dec
pop
and
lret
pop
shr
mov
cli
testl
dec
outsb
xor
adc
xlat
pop
ret
cmp
mov
xorb
inc
lahf
sbb
push
in
inc
pop
mov
xchg
out
fimull
pop
push
ret
lret
sarl
mov
xchg
cmp
mov
pop
jle
ja
pop
dec
mov
movsl
in
push
data16
mov
test
xorl
dec
and
mov
out
jmp
popf
xchg
mov
cmp
mov
sub
jle
ljmp
push
mov
ljmp
mov
fnstsw
xor
push
es
add
or
mov
inc
mov
dec
les
jno
out
lea
call
cltd
je
pop
scas
hlt
and
in
jle
ret
outsb
ljmp
lahf
inc
adc
sbb
jo
fadds
ja
fdivs
mov
lods
mov
or
rolb
mov
fst
in
imul
mov
movsb
cltd
sub
or
faddl
popa
loope
mov
xlat
fsubrl
lcall
and
in
in
pop
iret
ret
inc
in
add
inc
dec
lcall
fldln2
sbb
mov
shl
and
sub
mov
rorl
mov
fcompl
addr16
not
insb
leave
ficomps
sub
loopne
je
dec
ss
clc
imull
idivl
movb
push
bound
cwtl
add
xchg
fldt
and
les
nop
shlb
incl
hlt
test
or
pop
mov
arpl
or
mov
ret
xchg
loope
outsl
test
rorb
das
cmp
jle
sti
jbe
cmp
ds
pop
jl
bound
dec
and
jmp
xor
mov
decl
into
lods
mov
test
cmp
add
orb
jmp
mov
out
sub
nop
shr
shlb
test
mov
scas
pop
cmpsl
push
add
sub
pushf
sbb
sti
and
cmp
add
and
aaa
in
into
or
fsubrl
fstl
out
ret
lds
jle
lods
or
push
adc
sahf
mov
mov
adc
and
pushf
pop
xchg
dec
negb
xor
mov
pop
js
mov
test
mov
ret
pusha
ficoml
mov
mov
mov
mov
out
adc
push
dec
inc
pop
and
or
sahf
lret
and
rcrl
mov
xchg
jp
xchg
sbb
xor
xor
push
xchg
dec
daa
adc
push
xchg
push
in
adc
jo
jnp
ret
fisubl
inc
dec
cs
ja
lahf
mov
jne
xor
pop
jg
add
inc
testb
dec
je
adc
pop
xchg
pop
ss
adc
inc
xchg
aaa
nop
sbb
test
imul
jnp
ret
jbe
xor
out
push
in
fwait
lea
and
out
mov
sub
jbe
repz
dec
pop
add
adc
scas
fistpll
jg
aad
jb
into
inc
mov
xchg
int3
dec
js
mov
pop
inc
lret
ljmp
clc
nop
adc
inc
pop
ret
insl
or
je
mov
aam
fiaddl
shr
into
inc
xchg
xchg
inc
push
nop
mov
in
ja
shll
push
pop
test
js
xlat
fwait
xlat
pop
movsb
leave
or
or
cmpsb
push
cmp
or
push
and
add
push
aam
jo
pop
popa
mov
jns
sub
and
dec
int
jns
push
test
mov
into
sub
adc
add
pop
xor
repz
mov
ss
sub
fs
lahf
aam
leave
fs
push
xor
popf
call
cmp
xchg
and
cmp
push
jmp
outsl
hlt
sub
xchg
lret
inc
or
xchg
add
push
orl
ds
dec
pop
js
jb
in
pop
mov
fsts
nop
dec
and
push
inc
inc
subb
ficomps
mov
mov
cltd
inc
flds
test
mov
nop
cmpsb
scas
mov
jbe
orl
xchg
mov
xor
jmp
punpckldq
mov
add
xor
je
push
inc
cltd
in
or
inc
jbe
mov
push
xchg
push
pop
mov
mov
mov
loop
sar
scas
cmpsb
dec
mov
adc
in
mov
ret
out
std
pop
cmp
out
lahf
sar
scas
testb
push
lcall
adc
jmp
jb
loop
xor
mov
stos
push
xor
xlat
pop
or
aam
or
stc
scas
gs
xorb
in
push
in
jg
outsl
add
out
push
dec
rcr
dec
mov
push
dec
or
xchg
nop
sub
xor
dec
shrl
add
movsb
pop
imul
sbb
xchg
add
andl
ret
dec
jge
scas
scas
cli
adc
sbb
sub
imul
icebp
sub
out
test
fisubrl
in
mov
lods
mov
daa
into
mulb
arpl
jbe
pop
sbb
xor
movsl
daa
outsl
jb
fdivp
push
mov
fistpll
jg
roll
cmp
mov
lcall
mov
stc
ret
lret
xor
mov
fdivl
xlat
ret
mov
mov
push
sub
hlt
pop
dec
adc
into
ja
sub
rorl
inc
push
or
xor
lods
mov
xor
push
cli
cli
and
fs
push
rcr
test
push
pop
fmull
movsb
jb
divl
in
jecxz
in
xchg
sahf
ss
les
adc
or
ffreep
in
sbb
and
xchg
inc
and
insl
adc
mov
int
xchg
pushf
pop
mov
pop
aam
cld
rorl
repz
popf
js
std
je
lods
aam
cwtl
adc
test
mov
xchg
add
sti
dec
cmp
xchg
pop
mov
mov
dec
add
mov
mov
roll
mov
pop
fwait
cmp
iret
xor
sti
ret
mov
pop
cmp
sbb
test
and
adc
add
cmp
test
imul
int3
out
inc
ss
js
cmc
mov
sbb
daa
imul
xchg
pop
hlt
xchg
and
pop
sub
sub
test
aam
arpl
sub
pusha
jo
and
std
insl
cltd
lret
xchg
outsl
mov
or
xor
lret
mov
aas
mov
aad
mov
in
push
cmp
les
or
stc
jns
repnz
add
sub
push
enter
sub
push
loopne
inc
or
and
pop
repnz
mov
ret
lds
pop
fcoms
sbb
xchg
ret
loopne
push
insb
pop
into
lahf
push
xchg
mov
lcall
fwait
in
xchg
sbb
xchg
push
jg
and
mov
add
insl
cmc
jge
loop
addb
mov
mov
inc
popa
int
jge
xor
mov
std
data16
mov
jmp
cmp
lcall
jecxz
test
lds
enter
loop
fnstsw
add
xlat
les
movsl
addb
ss
xchg
fisubrs
jmp
mov
jnp
les
add
inc
mov
dec
imul
jb
push
clc
cltd
dec
icebp
lds
mov
push
add
lcall
adc
xor
into
cmp
ret
and
cmpsb
jle
rcll
lods
cmpsl
adc
mov
pop
xor
pop
stos
sbb
in
sar
movsb
mov
loope
or
mov
inc
sbb
and
jmp
in
jecxz
test
jae
add
in
fisttps
jb
push
lfs
mov
or
shlb
rorb
mov
aas
mov
mov
iret
mov
out
sub
iret
lret
jle
cmp
pop
inc
loope
lock
cmpsl
cltd
xchg
adc
jnp
cmp
shlb
inc
xchg
arpl
push
push
sub
repnz
xchg
push
int3
mov
push
ret
xchg
pop
icebp
cltd
adc
stos
pushf
jo
es
lahf
sbb
fst
dec
sbb
aad
insl
or
push
fs
adc
movsb
jo
mov
sub
shrl
cmp
mov
andl
pop
popa
xchg
jns
fstps
lock
mov
or
loope
fbstp
pop
jbe
icebp
adc
mov
xchg
aaa
pop
mov
inc
push
sub
pop
enter
out
movsl
pop
pop
push
pop
mov
fadds
pop
arpl
inc
cmp
xchg
dec
mov
gs
jmp
mov
mov
xor
mov
mov
mov
add
bound
fsubl
adc
or
fdivrl
fisttps
sub
insb
rorb
popa
xchg
cmpb
mov
or
aad
xor
cmp
shll
fldcw
push
dec
popa
or
sbb
push
scas
cwtl
cs
xor
mov
lds
pop
or
inc
pop
mov
lea
imul
in
and
dec
xor
sub
cmp
les
inc
dec
imul
ret
xor
dec
call
xchg
lock
das
rcr
negl
xchg
mov
push
mov
push
or
pop
dec
adc
push
fidivrl
mov
sahf
add
cmp
or
loopne
shll
jns
inc
cmp
or
imul
cmovbe
nop
ljmp
mov
das
sbb
sub
imul
jns
sbb
pop
pop
jp
jg
sbb
mov
inc
xchg
and
xchg
adc
pop
dec
lods
xchg
lods
mov
add
add
pop
or
inc
scas
mov
push
rorl
add
je
jno
int3
push
xor
jae
nop
es
out
ficoml
pop
and
shl
jge
jae
sub
cmpsb
addb
jge,pt
dec
testl
rorl
xor
sbb
mov
push
cli
call
xor
outsb
or
scas
push
push
mov
out
sbb
sahf
addr16
ud0
push
push
lcall
lcall
icebp
pop
lea
cwtl
ss
mov
lahf
push
push
flds
aas
xor
and
repnz
loopne
add
test
xlat
out
xchg
jmp
inc
sbb
mov
out
xchg
into
and
inc
stos
loope
mov
lret
scas
mov
cmp
out
add
pop
or
insl
sarb
cmp
enter
and
aaa
shll
mov
jge
outsb
fstpt
mov
mov
push
lds
mov
stos
sbbl
ds
xchg
jbe
dec
cld
push
daa
daa
jb
pop
mov
outsb
nop
xchg
dec
xchg
xchg
sub
inc
sbb
gs
sbb
pop
xlat
and
dec
mov
adc
add
lods
sub
repnz
iret
mov
icebp
jp
leave
mov
loop
and
rcrl
sub
sub
inc
in
jle
cmpsb
ljmp
das
std
sub
mov
js
enter
mov
lret
pusha
sub
xor
fs
add
in
push
inc
std
inc
cltd
jnp
xchg
mov
push
icebp
push
mov
add
in
mull
pop
out
xor
push
or
push
push
sbb
or
rcl
sarl
cltd
and
lea
pop
pop
sahf
pushf
sub
stos
outsl
movsb
inc
in
push
xor
bound
cmpb
mov
add
mov
and
popf
pushf
bound
mov
int3
jne
mov
mov
in
movsb
lar
nop
jae
aam
shlb
add
je
inc
inc
pop
and
add
movsl
or
push
fwait
push
call
cmc
pop
test
sub
fwait
lea
cmpsl
mov
pop
cli
insl
xor
js
mov
and
dec
mov
mov
push
add
mov
xor
mov
xor
ja
cmp
adc
inc
xor
add
jne
leave
ja
dec
adc
fcmovb
cld
push
scas
mov
xor
push
dec
cmp
jge
not
sbb
imul
jno
push
mov
push
mov
jle
xchg
lret
gs
test
cmc
out
pop
mov
cmp
mov
dec
push
out
mov
dec
ret
adc
insb
ss
jo
dec
sbb
xchg
out
mov
je
jb
sbb
pop
gs
mov
das
cmp
jle
les
in
fstp
xor
adc
or
or
cmp
cmp
decb
dec
movsl
inc
fnstcw
lcall
jnp
inc
icebp
push
loopne
add
and
lahf
adc
jae
dec
lock
push
cs
rorl
or
testl
and
push
popf
sub
test
jmp
lahf
loopne
call
mov
jns
push
lods
lret
sub
and
and
inc
dec
jg
adc
pop
inc
or
and
lret
movsb
adc
mov
jns
fnsave
je
jo
fisubrl
mov
xor
scas
adc
inc
push
mov
adc
in
iret
push
loopne
lock
and
stos
int
addr16
xchg
mov
cmp
inc
and
sub
in
aaa
in
cmp
aam
jb
add
es
fists
cmpsl
mov
data16
and
repnz
push
lock
lcall
push
pop
nop
mov
mov
dec
in
fists
stos
cmpl
xchg
sti
out
out
jno
mov
pop
fcompl
aas
push
mov
gs
push
in
push
and
rcll
test
mov
mov
jp
jge
shl
outsl
or
mov
sub
lods
aad
clc
push
adc
in
movsl
aaa
shll
orl
stc
xor
mov
push
loope
ds
dec
jg
shlb
xchg
lret
adc
xor
aas
add
pop
and
lahf
and
push
into
jne
ret
push
xor
and
lock
pop
outsb
mov
pop
sub
mov
mov
insb
or
iret
subl
mov
mov
cmpsl
push
push
mov
negb
or
ret
shl
mov
or
cmp
enter
pop
mov
push
lea
scas
pop
aaa
xchg
xor
xchg
sarl
push
and
lahf
add
stos
mov
cmovs
jl
add
negl
and
mov
dec
or
and
mov
mov
cmpsl
and
bound
add
fildll
mov
inc
xchg
jg
test
jecxz
clc
std
and
negl
mov
xor
mov
mov
pop
jge
lcall
lods
jns
gs
dec
xchg
lods
xchg
push
sub
inc
inc
add
out
mov
and
in
and
mov
mov
mov
mov
test
pop
xor
sub
cwtl
cs
adc
lods
jae
loop
xchg
ret
or
dec
inc
loop
rcrb
mov
dec
push
sahf
add
xor
xor
addr16
stos
ss
mov
aam
push
xor
testl
fs
mov
mov
pop
and
stos
mov
or
cltd
leave
mov
inc
dec
testb
add
scas
jmp
es
jne
out
push
jns
and
and
sbb
movsb
sbb
jge
gs
cld
or
add
adc
inc
pop
xchg
fld
add
test
mov
imul
add
leave
and
sbb
mov
fadds
pop
mov
in
sub
je
in
das
and
inc
cmp
in
push
push
jnp
add
lds
out
dec
mov
dec
cwtl
mov
push
cmpb
add
add
push
push
mov
cmp
push
mov
js
imul
fst
lds
push
mov
ja
mov
adc
jo
fsubr
orb
or
scas
enter
in
jno
cmp
lea
gs
in
mov
cmpsb
in
in
push
test
lds
insb
fcomip
int3
xor
cltd
pop
sub
push
shll
cld
sahf
aaa
sbbb
push
pop
sub
cwtl
hlt
movups
inc
je
push
repz
popa
std
repz
fsubs
sbb
adc
jg
fisubrl
cmp
mov
or
push
fidivl
dec
push
cmp
inc
mov
xchg
cmp
pop
stos
fbld
fucom
pop
push
sub
cmp
push
sbb
arpl
rcrl
mov
lock
movsb
das
sub
stc
negb
jg
insl
adc
mov
hlt
push
sbb
xchg
test
push
pusha
jp
popa
arpl
mov
clc
cli
dec
icebp
out
mov
xchg
cmp
sbb
sbb
cs
or
std
push
or
insl
add
jmp
aam
xchg
cmp
es
push
jae
mov
adc
insl
jb
in
pop
inc
js
or
loopne
daa
mov
xchg
jne
mov
in
lds
pop
xor
xor
inc
movb
popa
pusha
gs
dec
out
dec
adc
cli
insl
mov
fiaddl
cmp
lcall
in
sub
aaa
outsl
popa
jo
fnstsw
push
aam
xchg
jo
push
mov
xchg
and
cld
mov
aaa
pop
jge
cmc
mov
xlat
daa
hlt
outsl
jge
and
add
add
add
dec
mov
or
mov
dec
mov
and
add
dec
mov
shrl
jg
and
jne
inc
fsubr
or
ficompl
leave
dec
push
aas
sub
inc
dec
mov
pop
pop
lcall
xor
rolb
and
inc
aad
lock
mov
std
sar
inc
lret
mov
mov
ret
stos
stos
add
fucomp
rcll
outsb
or
sub
int3
xchg
pop
pop
push
ljmp
pushl
jns
lods
pop
cmp
add
pop
mov
std
test
iret
jns
add
in
sahf
dec
mov
aas
pop
and
mov
cmp
mov
lret
push
out
negb
in
mov
cwtl
cwtl
jmp
dec
fstps
hlt
pop
add
dec
in
imul
fs
inc
dec
pop
in
push
mov
test
call
mov
iret
jb
inc
orl
pop
into
push
lock
cmc
movsb
adc
cmpsl
jg
jmp
iret
xor
imull
ljmp
cmp
in
and
cmpsb
and
cmp
jmp
loop
mov
pop
movsb
shl
add
xchg
ret
mov
dec
js
arpl
fistl
inc
sbb
cmc
pusha
lods
pushf
jnp
jne
mov
test
cli
adc
push
mov
add
ja
adc
mov
call
or
fbstp
jl
or
jecxz
inc
dec
dec
and
push
xor
mov
ljmp
mov
sti
inc
inc
jae
jae
push
stos
inc
dec
repnz
ljmp
out
xor
inc
cmp
sub
push
adc
fsubl
jns
daa
sti
adc
mov
insl
adc
cmpsl
stc
out
adc
popa
ret
orl
popf
stc
mov
xlat
xchg
cmpsl
aas
and
xor
push
cli
sub
xchg
mov
aad
mov
pop
mov
adc
and
inc
xchg
inc
cmp
outsl
sbb
pusha
in
push
push
fidivrl
cmp
pop
adc
xorb
jmp
inc
mov
cmp
mov
and
xchg
push
repnz
mov
cmc
imul
cmp
sub
mov
dec
push
lds
scas
push
push
add
icebp
cwtl
inc
mov
sub
test
lods
cmpb
dec
pop
xchg
scas
dec
add
dec
and
ss
lea
lods
mov
in
sub
insl
or
push
xchg
aad
or
lret
sub
mov
jle
push
jmp
xchg
mov
add
sub
xchg
cmp
repnz
inc
adcl
insb
outsb
sbb
jecxz
out
popa
lods
repnz
sub
mov
mov
fisttpl
xchg
sbb
adc
fcomps
mov
inc
pop
fimuls
cmpsb
push
pop
xchg
ret
mov
fwait
cmp
mov
jl
cmp
mov
fwait
push
pop
cmp
sub
repnz
adc
inc
jp
mov
jo
or
cld
xchg
sbb
cli
jl
cmpsl
loop
add
xlat
cwtl
in
popf
xchg
fiadds
sbb
wrmsr
pop
popa
inc
bound
in
push
lret
jns
mov
sahf
or
test
out
sti
xor
dec
xor
or
mov
movsl
cs
xchg
pusha
jmp
imul
out
lret
mov
dec
ret
imul
aaa
insl
imul
call
out
loope
jecxz
mov
lods
mov
xor
fwait
xor
mov
or
imul
xlat
xor
adc
popa
stos
xor
jne
ficoms
out
mov
sub
lock
aam
js
jnp
push
dec
pop
out
push
mov
sub
jle
push
mov
incb
addr16
mov
inc
mov
mov
movsb
dec
xlat
inc
data16
lock
inc
jb
lock
arpl
insl
or
mov
lea
adc
fisttpl
cwtl
dec
inc
mov
pop
cmp
xor
pop
push
or
or
inc
int3
stos
push
mov
cwtl
ss
testl
fwait
and
call
xlat
movups
ja
mov
imul
pop
and
or
push
cmp
or
cli
out
sub
xchg
pop
ficoms
dec
and
mov
adc
mov
outsl
in
pop
push
sahf
out
inc
es
loop
popf
add
out
mov
shll
mov
jmp
adc
pop
lahf
bound
cli
push
and
mov
mov
jbe
xorps
insl
call
pop
sbb
mov
fisubs
cmp
mov
scas
outsb
jnp
fisttps
stos
xchg
dec
sub
dec
adc
mov
lret
sbb
jae
clc
dec
jg
cmp
ds
cmp
ficompl
cs
iret
rclb
pop
inc
xor
and
add
mov
dec
adc
call
insb
outsb
jnp
ljmp
adc
jne
testb
dec
adc
repz
sub
xchg
cmp
xor
int3
inc
rcr
or
dec
in
lds
dec
pop
or
scas
cmp
mov
xchg
out
loopne
sub
mov
xchg
or
call
hlt
subl
push
and
or
leave
nop
fistl
sub
insl
mov
xor
add
sbb
pop
push
popf
jns
ret
mov
into
gs
xor
inc
stos
icebp
or
or
dec
push
ficoms
mov
xor
pushf
insl
sbb
ret
sbb
push
roll
adc
or
xchg
shrl
ljmp
movsl
out
mov
rorb
roll
lock
xchg
ret
data16
daa
lret
out
fidivrl
jecxz
cmovge
dec
inc
xchg
xchg
jae
sub
nop
inc
pop
js
ss
mov
in
mov
cmpsb
jb
pop
push
jl
mov
inc
xchg
cmp
stos
xchg
jecxz
push
ss
mov
and
pop
int
mov
mov
jmp
shlb
cld
es
mov
fisttpll
jp
jmp
jle
push
jb
xchg
add
adc
jecxz
dec
xchg
jb
rcll
sub
mov
in
daa
mov
inc
shrl
pop
pop
pop
push
mov
mov
mov
jg
setns
mov
stc
popf
in
js
lds
lock
mov
es
ljmp
cs
mov
jbe
mov
mov
cmp
xchg
mov
orb
inc
sub
add
inc
or
fs
xor
call
movsb
cmp
mov
mov
sti
inc
xchg
dec
out
popa
cmp
mov
stos
jge
push
pop
test
dec
jge
hlt
cmp
or
ja
mov
lret
xchg
push
dec
mov
sbb
test
hlt
jne
sbb
loopne
cmpsb
ss
ljmp
pop
cli
mov
cmpsb
jl
popl
mov
into
push
adc
ja
xchg
sbb
mov
inc
test
jmp
ja
mov
push
and
aas
nop
cmc
aam
dec
enter
loopne
dec
loope
jmp
and
ficoms
pop
jp
jle
jno
push
imull
cmp
push
test
inc
sbb
outsb
insb
sub
push
add
add
add
aas
mov
or
or
inc
add
sti
leave
fsubr
sub
inc
inc
les
cmpsl
jns
or
dec
sarl
ss
ja
jecxz
pop
cmc
enter
push
jbe
mov
cmp
sarb
pop
lahf
push
or
mov
insl
scas
inc
adc
adc
pop
cmp
lahf
cmp
hlt
xor
sbb
fnsave
fidivrl
jl
dec
inc
clc
bound
aaa
loop
xchg
add
dec
push
lds
dec
pop
jmp
or
fnsave
dec
and
mov
mov
mov
popf
roll
fisttpl
ret
cs
xchg
insb
or
aam
movsl
in
inc
pop
scas
shll
mov
ja
aam
in
sahf
call
and
repz
jno
and
jp
sbb
les
cmp
jno
fs
mov
lret
hlt
pop
mov
jg
dec
inc
sbb
xor
sbb
cwtl
ss
sub
rolb
je
mov
push
push
mov
stos
inc
push
and
fcmovnbe
adc
sub
ss
ds
dec
imul
aad
mov
loop
pop
sahf
int3
pop
inc
fistl
in
mov
jmp
cmp
mov
cwtl
ds
sub
das
jg
outsl
nop
out
rclb
outsb
stos
test
mov
mov
lock
rdtsc
inc
fcmovbe
into
fsubrl
sub
dec
fmull
rcrl
push
rclb
or
xchg
mov
lahf
xchg
jl
outsl
push
dec
in
stos
mov
sbb
sar
mov
cld
dec
mov
mov
movsl
icebp
pushf
or
ja
inc
add
enter
loopne
dec
adc
pop
sub
or
mov
addr16
mov
lock
xor
dec
xchg
aam
push
xchg
mov
fwait
mov
loopne
jmp
out
sub
test
cltd
loope
sbb
push
cmp
jp
pop
dec
push
stos
inc
dec
fwait
adc
loopne
cmc
cwtl
xlat
add
lds
adc
jns
insb
bound
sti
int
movsb
mov
in
addr16
lcall
fstpt
es
push
dec
movsl
push
mov
pop
xor
fmuls
int3
jle
sub
sahf
js
xlat
sbb
jge
out
aad
sbb
pop
lea
mov
mov
clc
outsl
insb
add
shlb
insl
xchg
stos
repnz
js
push
jle
mov
in
imul
pop
dec
hlt
rcr
mov
dec
sub
movsb
cmp
inc
add
push
xor
jno
adc
sbb
stc
jno
push
popf
sbb
fistl
push
lahf
in
or
test
sbb
push
sbb
mov
mov
xchg
ret
jb
add
fs
enter
push
shrl
leave
xchg
testl
jno
test
outsl
les
jp
and
add
dec
push
jmp
dec
ljmp
fsubs
jne
add
push
adc
mov
adc
fldl
add
inc
inc
out
loope
mov
test
fmul
dec
lods
dec
hlt
sub
lcall
pop
je
sub
out
icebp
push
insb
sbb
ret
mov
cmp
adc
dec
xor
mov
or
inc
mov
outsl
xchg
lret
mov
push
adcb
jns
push
imul
inc
push
mov
mov
aaa
mov
lock
jle
xchg
sub
fcomi
dec
jge
cmc
xlat
loope
xor
fildl
pusha
mov
add
xor
test
dec
push
lcall
push
mov
xchg
pop
stos
sub
daa
mov
sub
loope
out
jno
in
rcrb
icebp
lret
mov
shl
xor
pop
mov
das
outsl
stos
pop
add
cmpsl
cwtl
push
cmp
sbb
fdivrs
add
sbb
or
fdivl
sub
lds
mov
fists
clc
insl
aad
jno
fisttpl
in
sub
das
cmp
or
cmp
rorb
sub
inc
adc
jo
cltd
je
push
mov
xor
popa
fiaddl
sbb
fidivs
pop
cmp
cmp
js
pop
outsl
dec
loope
pop
pop
mov
test
imul
out
fdivs
aad
jbe
dec
sbb
mov
sub
sub
ljmp
xchg
push
dec
dec
or
insl
push
push
bound
sub
hlt
push
push
add
mov
cmp
mov
jg
sub
adc
test
jns
jge
shll
test
loope
mov
and
fidivs
js
mov
cs
ss
xchg
ret
push
jl
call
inc
adc
inc
pop
imul
ret
out
clc
insl
push
shrl
negb
adc
stc
mov
movups
hlt
jne
inc
and
es
mov
sbb
pop
jae
push
adc
xor
enter
xor
test
fsubr
inc
pusha
jecxz
vminsd
xor
xor
xchg
or
inc
or
cmp
jp
push
push
testb
imul
and
pop
std
test
jne
adc
mov
inc
push
dec
aad
in
dec
rcr
xchg
fsubl
and
popa
aas
jno
cmp
cmp
lcall
imul
sarb
in
in
sbb
ret
mov
mov
jle
dec
call
int
jmp
js
loope
xchg
jl
jo
cmpsb
fisubs
sahf
movb
adc
repnz
xor
inc
push
sbb
out
rdtsc
fsubr
mov
es
in
add
add
push
in
push
pushf
pop
stos
mov
rorb
push
mov
outsb
sbb
mov
mov
sub
ficoml
shrb
cwtl
pop
inc
sbb
mov
mov
sbb
repnz
or
fildl
stc
loopne
sub
xor
mov
dec
xchg
das
push
ds
arpl
dec
sub
mov
lret
outsl
mov
adc
jmp
xchg
xchg
ljmp
dec
xor
push
cltd
pop
pop
filds
jp
sub
sti
popf
cs
cs
stos
push
inc
mov
imulb
add
or
mov
mov
xchg
mov
rcrb
jne
xchg
push
push
in
inc
fstl
inc
xor
loopne
xor
inc
es
cmp
loope
jg
test
into
movsl
imul
mov
fildl
sbb
insl
sub
sbb
out
fcmovnbe
adc
jp
sbb
mov
and
fildll
xchg
out
aad
cld
stc
insl
mov
mov
aam
pop
pop
lret
in
lretw
and
lcall
add
mov
cmp
mov
lss
test
lret
jns
ljmp
fnstenv
push
into
fs
add
daa
cmp
popf
pusha
and
add
insl
clc
test
sub
int3
jge
outsb
dec
xchg
fdivr
or
inc
mov
aam
or
cmp
dec
mov
xchg
repz
enter
sub
push
pop
sub
rcrb
adc
pop
dec
arpl
pop
flds
das
decb
hlt
fadds
repnz
sub
cmp
imul
cmp
shll
xor
push
imul
lods
inc
sti
js
xor
ret
dec
xchg
push
popa
std
adc
jl
xor
loope
dec
mov
fsubr
xchg
aad
and
fisubrs
cmp
and
test
arpl
pop
push
mov
push
in
test
jns
jp
pop
mov
int
int3
jle
cmpsl
subl
scas
ds
cmp
sub
inc
cmpsl
jl
mov
mov
sbb
mov
push
add
mov
or
lds
mov
or
jmp
push
adc
cmp
jns
ds
call
add
mov
mov
gs
mov
push
ss
jo
insl
pop
sbb
sub
push
decb
imull
adc
mov
lahf
jge
jg
les
pop
shrd
xor
sbb
pop
lret
nop
cmp
cmpl
out
and
sub
add
fsubs
jae
je
fdivr
or
ds
lds
lahf
dec
lea
push
bnd
push
xchg
mov
sub
test
cmp
dec
outsl
mov
pop
mov
sbb
pop
jns
in
xorl
add
jnp
aaa
incb
jge
cmp
in
sbb
xchg
push
fstps
cmc
sub
inc
mov
mov
lock
jmp
inc
insl
test
adc
cltd
add
dec
fnstsw
shrl
pop
xor
xorb
repnz
and
and
inc
mov
jb
pop
mov
xlat
add
xor
pop
movsl
xor
ja
xchg
ljmp
and
pop
sahf
or
mov
int3
push
out
dec
dec
or
arpl
data16
inc
add
cwtl
cltd
cmp
test
mov
nop
adc
out
sbb
jno
adc
sub
mov
out
add
jecxz
mov
sub
cmc
xchg
cwtl
aaa
cmp
sub
jo
sbb
or
xor
adc
xor
shlb
xor
and
mov
xor
inc
push
clc
mov
cld
inc
and
mov
ljmp
movsb
sub
push
xor
sub
dec
push
in
adc
cmpsl
xchg
mov
rol
and
stos
jl
pop
sub
jecxz
and
sbb
xchg
add
fldl
cwtl
pop
push
push
or
xlat
push
or
cli
pop
aas
mov
lahf
push
sarl
xchg
pop
mov
cmpb
es
sbb
sub
je
push
outsb
sarb
ja
and
pop
xor
mov
mov
loope
in
ret
iret
dec
mov
mov
ret
dec
mov
jecxz
jb
ret
pop
hlt
mov
push
out
pusha
mov
sub
inc
and
lds
mov
push
sti
inc
pop
push
xlat
hlt
sbb
cmpl
les
insb
fldcw
mov
add
sub
aas
negl
std
adc
cmpsl
insl
loopne
iret
stos
add
sbb
and
stc
cmp
data16
xchg
rcl
lods
in
fs
push
popf
sub
sub
dec
lret
lret
in
add
push
cmp
lcall
lahf
std
loop
push
adc
shrb
mov
xchg
xchg
shrd
lret
and
or
sti
inc
jp
xchg
and
retw
add
outsb
sbb
cmp
adc
shll
out
add
xorb
push
xlat
jno
jp,pn
ds
iret
cmp
sbb
test
ljmp
jnp
fisubrs
xchg
pop
cmp
push
test
jecxz
and
aam
icebp
mov
int3
xchg
aam
ljmp
aad
dec
mov
jns
inc
inc
mov
push
arpl
jp
or
cmpsb
add
push
lcall
insl
mov
aaa
in
push
je
cwtl
fimuls
xchg
cmp
adc
mov
xor
fs
adc
dec
aas
cli
fnsave
cs
and
arpl
cmp
mov
jnp
xchg
sbb
xchg
int
les
or
loope
mov
xchg
cmp
sub
scas
dec
dec
mov
fwait
pop
inc
out
mov
cs
xchg
jb
adc
int
sbbb
push
je
xchg
inc
xchg
arpl
dec
aam
jmp
mov
repnz
es
scas
sub
sub
loop
inc
nop
int3
nop
jg
jle
call
mov
rcrl
sub
mov
and
xchg
adc
and
xchg
mov
push
js
xor
pop
cli
jnp
push
sbb
inc
jp
push
or
cmp
mov
sub
mov
pop
or
and
rcll
and
dec
cmp
in
test
test
in
adc
pusha
push
scas
cmpsl
aas
inc
fistl
aam
test
jne
cmp
add
std
jo
fs
dec
sub
sahf
push
mov
cmp
cltd
bound
insb
jno
test
mov
dec
adc
out
cmp
lods
jg
sub
lds
les
or
pop
repz
std
cmp
mov
pop
cmp
xor
fstpl
sbb
adc
and
repz
aad
jmp
push
jbe
stc
mov
or
mov
in
pop
test
push
ficompl
call
ret
loope
addb
shr
sbb
out
xor
fdivrl
iret
jmp
and
test
mov
xor
test
push
jle
xor
dec
mov
inc
push
repnz
xchg
ds
xchg
adc
in
mov
lods
inc
mov
sub
addr16
inc
aad
notl
push
ss
clc
ljmp
add
adc
lea
adc
mov
mov
mov
jo
fcomps
cmp
popa
shrb
xchg
orl
jg
shll
adc
lods
push
jp
aas
test
dec
jae
xor
mov
ret
out
imul
push
jnp
dec
imul
test
add
rorl
jns
sub
push
mov
out
jg
rcrl
cmp
jg
add
xchg
and
dec
mov
adc
repnz
addr16
je
inc
hlt
or
stos
xchg
leave
pushf
sub
movb
or
mov
mov
cmp
loopne
add
add
dec
or
jne
in
aam
jb
pop
jnp
cmpsb
mov
inc
mov
movl
fmulp
insb
jb
push
popf
sbb
loope
cmp
mov
das
sahf
or
cmpsb
daa
sub
sbb
jle
insl
mov
addr16
adc
rep
mov
imul
or
sub
sahf
rclb
cmovns
inc
pop
inc
aad
sbb
daa
dec
pop
jecxz
adc
mov
aad
imul
mov
pop
sti
pop
mov
ds
xchg
xor
movsl
mov
lret
ja
aam
scas
mov
jecxz
loope
add
test
shlb
sbb
add
cwtl
outsb
jnp,pn
sub
jne
jecxz
pop
mov
mov
mov
data16
cld
loope
cli
jnp
sbb
outsl
clc
and
daa
jl
jge
jnp
mov
ficomps
pop
stos
xchg
xchg
mov
roll
or
mov
leave
imul
int
shlb
sahf
jbe
bound
hlt
mov
mov
popf
push
push
aad
or
cld
pop
pop
add
xlat
inc
daa
push
in
mov
pop
sub
ja
and
sarb
roll
aam
add
out
sbb
and
pop
lds
popf
adc
cmp
or
adcb
and
test
int
jae
add
decb
and
out
xor
sbb
int3
testl
or
xor
dec
push
iret
or
movsl
xchg
imul
fwait
jmp
xchg
adc
rorl
jp
call
int
mov
popf
int3
and
pop
mov
pushf
cmp
pop
insl
add
fnsave
ret
pavgw
lret
fcomps
add
pushf
test
sub
sti
fcomps
iret
or
js
arpl
sbb
dec
jne
push
enter
sbb
lahf
jb
sub
jns
inc
add
push
dec
filds
cs
cmp
mov
cmp
loop
hlt
jno
pushf
aaa
jns
xchg
mov
dec
ret
nop
add
jl
jl
sbb
lret
pop
stc
mov
cmp
pop
cli
pop
mov
push
xchg
jg
push
pop
or
repz
jmp
sbb
lret
gs
inc
pop
gs
jmp
inc
push
or
dec
pop
addb
mov
push
mov
popa
lds
aam
sub
jle
xor
push
xchg
cmp
mov
lods
sbb
or
dec
repnz
dec
ss
mov
ja
mov
sbb
or
sub
in
or
mov
jp
xchg
hlt
iret
scas
popa
sub
sarb
lret
mov
mov
js
lahf
lahf
ret
cmp
add
iret
imul
adc
jg
jg
cltd
out
push
pop
sahf
int3
mov
cld
es
ss
test
add
xchg
mov
jns
movsb
inc
mov
push
test
adc
mov
ss
pop
test
mov
cmp
mov
push
fs
cmpl
jge
fiaddl
in
jl
pop
js
push
sub
iret
mov
pop
cli
add
lahf
mov
xchg
dec
incb
xchg
je
add
add
adc
push
cs
ret
inc
jle
push
xor
xor
in
pop
xchg
adc
pushf
pop
xor
into
sbb
mov
push
push
sbb
mov
push
xor
mov
xor
push
adc
mov
test
pop
dec
les
push
xchg
jno
inc
mov
jb
js
xchg
cs
and
add
jb
xor
xchg
xchg
mov
gs
xchg
push
push
push
and
or
loope
jae
inc
jno
add
outsb
cmp
repz
jae
sub
mov
adc
out
jb
dec
inc
pop
adc
mov
mov
std
jmp
in
pop
divl
inc
lret
int
xchg
icebp
cmp
pop
aaa
add
jecxz
mov
jbe
mov
and
loope
mov
inc
push
push
jbe
std
les
or
push
shrl
jp
popf
add
js
in
iret
add
daa
adc
mov
add
and
mov
add
pop
cmp
clc
adc
pusha
lock
sub
add
cmp
jg
jmp
lock
push
imul
sub
cmp
pushf
cmc
and
and
adc
mov
test
sbb
sub
xchg
sahf
mov
inc
fistpl
mov
push
fisubl
cmp
ljmp
pop
xchg
mov
test
cmp
push
bound
stc
popf
pop
jne
ficompl
xor
or
dec
mov
hlt
jnp
dec
daa
push
pop
cld
pop
jg
in
mov
div
push
xor
imul
sub
jmp
divl
mov
mov
and
and
xchg
dec
cltd
lods
mov
and
jp
mulb
cli
or
xchg
mov
sbb
fwait
cmp
xchg
out
jle
cvtpi2ps
negb
shr
pop
push
sti
iret
inc
push
mov
push
xor
clc
xlat
inc
shl
imul
addr16
call
scas
mov
inc
lret
rorl
fstp
push
inc
dec
inc
bound
outsl
addr16
lock
xor
daa
xchg
push
movsl
daa
mov
jbe
xchg
lock
test
pop
and
mov
xor
inc
jne
ljmp
sbb
mov
push
mov
icebp
adc
jo
aam
stos
repnz
mov
adc
or
pop
int
cmp
std
mov
cmpsb
sti
xchg
in
pop
mov
dec
mov
mov
adc
inc
shll
mov
mov
dec
insl
dec
insb
jle
cmp
pop
cmp
or
xchg
mov
push
add
das
ret
rol
mov
aam
std
adc
std
xor
in
jmp
pop
scas
or
or
jle
ret
popf
mov
lahf
adc
jno
adc
inc
das
mov
dec
lock
out
cmp
fisttpl
add
fdivrp
adc
xchg
mov
insl
test
and
inc
sbb
mulb
and
das
mov
push
decl
shll
orl
stos
push
repnz
cmp
mov
fcmovbe
and
fisubl
out
add
movsl
fwait
icebp
xchg
xor
sbbb
sbb
jmp
sbb
cmpsb
push
push
cmp
div
dec
sbb
int3
add
xchg
aaa
jmp
pop
adc
cmp
adcl
mov
test
nop
push
loop
inc
cmpl
xchg
or
mov
pop
add
add
sub
push
mov
jae
mov
test
push
pop
sti
das
jnp
imul
aas
push
sbb
xchg
in
test
dec
es
mov
and
jmp
jne
cli
push
and
ljmp
push
sbb
test
repz
lods
cmp
imul
pop
jno
add
aad
fidivs
pop
sub
data16
fcmovnu
xchg
cs
push
sbb
in
inc
mov
std
cmp
jb
incl
iret
jns
fnstenv
adc
push
nop
add
hlt
and
outsb
dec
jns
and
xchg
rorb
pop
push
xor
fisubrs
or
jne
sarl
stos
jmp
pop
push
xchg
mov
pop
pop
sbb
popa
scas
cmp
cmp
or
in
add
push
dec
push
vcvtss2sd
cs
push
aad
sarl
js
or
adc
cmpl
popf
dec
jp
popf
push
xchg
popa
or
iret
sbb
adc
ja
imul
mov
adcb
or
push
cld
js
test
shlb
jns
arpl
mov
mov
test
or
xchg
sub
jecxz
lret
sbb
es
cmp
aas
jbe
dec
xor
lods
mov
aaa
pop
dec
adc
clc
add
es
arpl
cmp
dec
sbb
adc
jae
sahf
rcrl
mov
aas
div
lcall
enter
jecxz
adc
mov
jno
in
fcmovnu
xor
repnz
xor
mov
dec
or
loop
out
div
mov
inc
sbb
rclb
loop
pop
adc
cwtl
test
bound
les
lea
or
xor
rcrl
sbb
mov
idivl
nop
cmp
mov
push
lock
jecxz
pop
decl
fidivrl
sub
adc
dec
cmp
adc
xor
or
inc
cld
xor
mov
cld
adc
pop
xor
xchg
ja
ds
jo
xchg
rclb
es
sbb
loopne
sbb
scas
das
and
icebp
out
popf
push
clc
es
pop
fstpl
cwtl
mov
lods
repnz
inc
jbe
adc
mov
shlb
push
pushf
inc
lret
jg
pop
sub
push
addl
lds
add
ljmp
iret
pop
and
rol
enter
pop
mov
jmp
iret
loope
aam
cld
cmpsb
and
jb
jno
mov
inc
loop
or
popf
adc
add
jp
mov
sarl
jae
lcall
add
pushf
ljmp
mov
in
cs
je
adc
xor
push
enter
xchg
jl
mov
repz
popa
adc
dec
pop
dec
imul
mov
test
adc
popf
add
pxor
js
push
xor
add
dec
aad
mov
push
popa
push
std
cwtl
mov
test
inc
inc
je
mov
jns
dec
sbb
lods
lret
lret
sbb
mov
lret
xchg
jmp
pop
cmp
not
mov
ficomps
cmp
cmp
fldt
or
push
cmp
or
pop
mov
xor
int3
push
xlat
jmp
or
push
scas
mov
movsl
and
xchg
je
rcr
mov
add
inc
call
add
or
gs
call
mov
xchg
cmp
fldt
mov
outsl
xchg
es
in
addr16
jmp
fdiv
icebp
and
test
xchg
xchg
data16
lds
in
mov
in
and
out
int
lahf
aas
xchg
lock
inc
jg
scas
hlt
adc
inc
aad
cmpsl
sub
sub
mov
cwtl
int3
fistps
fmuls
mov
cmpsb
lahf
in
pop
mov
inc
xchg
rcrb
dec
iret
xor
xor
mov
sarb
mov
sahf
aas
clc
mov
in
insb
leave
test
shrb
mov
fsubrl
sarb
fbstp
sbb
pop
mov
xor
jg
or
popf
mov
xchg
lock
scas
pop
adc
inc
xchg
push
shll
pop
inc
pop
or
inc
jge
cmp
movsb
sub
mov
jne
lds
mov
scas
je
aad
pop
inc
push
ja
mov
fdivl
jbe
sub
lret
pop
shlb
push
aaa
mov
mov
xchg
es
mov
mov
lahf
jecxz
push
mov
fcoml
enter
or
mov
ljmp
fsub
stos
inc
loopne
lods
sub
bound
dec
mov
daa
leave
or
lcall
pop
scas
mov
jbe
stc
enter
and
test
adc
or
lret
sti
jmp
lods
adc
aad
gs
sbb
repnz
dec
insl
inc
out
int
mov
jnp
xchg
lea
adc
cltd
scas
mov
scas
adcl
jge
fisubrs
mov
mov
mov
pushf
sarb
push
inc
mov
lock
lds
add
fnstcw
fcmovne
jl
insl
cmp
mov
lret
je
aam
aad
jb
inc
xor
jns
dec
xchg
or
inc
dec
lea
ja
pop
iret
xchg
mov
aam
or
cmpsl
fwait
loop
push
out
imull
lahf
int
inc
mov
mov
es
ljmp
and
in
adc
mov
jne
adc
xchg
jb
inc
jg
jg
dec
aas
sub
inc
add
cmp
iret
dec
dec
pop
repz
jl
enter
out
data16
daa
sbb
jns
adc
stc
or
push
mov
lret
inc
dec
or
or
xlat
call
sub
jmp
push
mov
movsl
fs
sub
outsb
jp
test
xchg
std
inc
add
xor
xor
push
or
mov
movsb
in
add
cmp
or
sar
inc
cmp
mov
jbe
fsubl
pop
nop
xchg
scas
mov
xchg
lods
stc
data16
xor
sub
dec
mov
lock
lds
push
sub
orb
cmpsl
lock
mov
js,pn
sbb
fdiv
mov
test
pop
push
mov
psubq
adc
jo
out
xchg
scas
enter
xchg
imul
sbb
adc
pop
out
je
mov
repnz
movb
into
fstp
sub
lock
dec
sub
jl
and
push
xchg
pop
repnz
xor
sub
xchg
xor
xor
orl
jae
out
in
repz
insl
popf
sub
mov
push
dec
dec
mov
rorb
scas
sbb
mov
cmp
sub
xchg
mov
stc
fimull
out
out
stc
mov
or
jle
adc
lcall
cmc
inc
mov
loop
mov
je
out
lret
inc
jns
aas
loope
xor
daa
out
leave
in
int3
cs
bound
mov
dec
and
jnp
inc
inc
out
xchg
outsl
sub
fisttpl
imul
mov
ret
jmp
xchg
cltd
sbbl
jecxz
bound
repz
cmp
xlat
push
gs
inc
roll
mov
popf
mov
add
push
cmp
hlt
aas
and
scas
xor
push
cmp
jmp
pop
pop
data16
cmpsl
push
repnz
pop
pop
mov
repnz
scas
push
xor
sub
adc
cli
xchg
dec
insb
jo
mov
sbb
loope
xor
pusha
push
icebp
mov
push
jecxz
cwtl
ljmp
jnp
faddl
jecxz
pop
movsb
fldcw
push
xchg
add
mov
dec
jecxz
lea
xchg
mov
mov
pop
mov
out
jne
add
icebp
and
push
jecxz
clc
ljmp
mov
loope,pn
push
mov
aaa
xor
mov
fistl
push
pop
loopne
sub
cmp
cli
scas
repnz
add
inc
sahf
push
out
std
sbb
aas
repz
and
adc
sub
ret
std
movsl
jge
push
popa
fs
cli
mov
mov
imul
inc
insb
mov
adc
nop
and
dec
mov
aas
sub
das
out
cltd
add
jo
sub
aas
test
pop
push
mov
sub
stos
jo
std
jno
popf
dec
pop
loopne
nop
xor
adc
push
add
push
mov
notb
pop
xor
clc
in
lock
xchg
inc
push
cmp
add
sbb
and
sahf
lods
mov
cmp
pop
int
leave
push
fidivs
add
mov
es
cmp
push
mov
sti
arpl
and
jbe
mov
lods
and
nop
lock
or
ja
xchg
sub
insl
std
pop
sbb
jno
xchg
int
pop
jns
in
fwait
cmp
gs
pop
cmp
pop
dec
and
jb
lret
jne
pop
xor
cwtl
and
aad
andl
fsubs
dec
punpckhdq
lea
pop
pop
lods
mov
dec
sbbl
sbb
sbb
fwait
mov
mov
mov
or
sti
or
movsl
push
clc
sub
push
xchg
fildll
cmpsb
sbb
imul
mov
fisubrl
push
add
rcll
sbb
rcll
mov
aam
prefetcht2
mov
sub
jns
inc
rol
or
fwait
sbb
mov
out
insl
ss
pop
or
in
gs
out
xor
mov
add
fucomp
adc
sbb
inc
jnp
xchg
scas
push
adc
push
subb
sbbb
hlt
sahf
mov
shll
imul
jno
mov
xor
inc
cli
fwait
cmpsb
je
xchg
xor
push
int3
push
add
cmp
repnz
je
pop
loopne
or
lods
dec
js,pt
push
pop
inc
sbb
int
xor
add
in
adcl
push
push
jmp
mov
inc
mov
cmp
shll
and
mov
insb
or
popa
jae
cli
aas
fwait
jecxz
ljmp
dec
arpl
repnz
arpl
inc
subl
sub
iret
out
xchg
ret
or
fmul
arpl
lahf
xor
fsubp
mov
repnz
or
adcl
aaa
sub
jno
loopne
sub
cmc
js
mov
jg
dec
push
inc
add
and
orl
pop
stos
out
adc
xchg
fldcw
adc
into
inc
test
ds
mov
lcall
dec
arpl
call
mov
js
mov
movsl
cwtl
out
sbb
shll
push
cli
or
insl
mov
jl
cli
add
test
fists
nop
cmp
mov
out
mov
or
push
movsl
jge
lea
test
testl
loop
add
pop
es
lret
mov
mov
clc
and
lea
lret
sub
nop
dec
cmp
test
xor
rcrl
testb
push
shr
orb
arpl
arpl
mov
test
jle
inc
sbb
data16
clc
mov
fimuls
popa
xchg
call
fwait
push
mov
stc
jo
pop
and
movsb
mov
pop
or
ds
push
test
movsl
add
mov
sahf
push
sbb
xor
sahf
sub
xchg
xchg
lods
fisttpl
jge
clc
mov
pusha
stc
xchg
and
xor
cmp
cmc
aas
cltd
les
js
pop
in
inc
add
inc
inc
and
sbb
in
or
mov
xor
inc
into
adc
mov
in
jns
outsb
sbb
inc
insl
in
mov
jno
negb
dec
sub
cmp
call
mov
nop
fbld
rclb
cmpsl
mov
xchg
cmc
add
adc
cltd
push
cmp
ret
aaa
mov
fisubrl
and
cmp
dec
jg
imul
pushf
outsb
adc
inc
call
xchg
mov
cmp
sub
lods
movsb
dec
scas
fcoml
les
or
mov
stc
imul
daa
and
xor
addr16
aas
jle
shrl
add
xchg
ficoml
xor
jp
mov
mov
test
pop
ror
aad
push
addr16
or
test
movb
add
dec
inc
out
fdivrs
sbb
dec
cld
adc
add
repnz
mov
shr
or
or
xchg
data16
mov
cs
dec
cli
add
jle
ds
cmpsl
lcall
es
push
lret
rorl
lret
push
adc
movsl
mov
cvtps2pi
xchg
push
xchg
fnstcw
jb
loop
sbb
lds
test
add
push
mov
sub
sub
mov
cmc
call
rorb
stc
jle
outsb
mov
mov
pushf
xor
icebp
jmp
movsb
xlat
and
cwtl
ss
push
shl
pop
mov
inc
pop
xor
sub
shll
imul
or
mov
push
mov
inc
pop
rcll
dec
rolb
fcompl
mov
and
pop
lds
xchg
call
jge
pushf
ss
mov
sub
pop
jge
mov
sbb
js
mov
lret
out
xchg
mov
adc
mov
aad
xchg
xor
mov
pop
ficoms
sub
pop
enter
movsl
inc
fwait
push
sub
testl
add
test
pop
call
or
iret
adc
jno
push
sub
ret
out
movsb
cmpsl
stc
cmp
loop
test
push
or
and
ret
push
movsb
rolb
adc
daa
jmp
dec
int3
fdivrs
popf
cmp
sub
loop
or
add
fistl
or
sub
xchg
and
loope
push
std
inc
repnz
add
mov
xchg
inc
mov
jecxz
inc
push
jmp
mov
jno
cwtl
pop
inc
and
sbb
push
out
insb
push
adc
add
aam
or
dec
in
mov
nopl
sbb
sub
out
dec
fidivrl
inc
cmp
xor
dec
pop
pop
testb
arpl
pop
or
rorl
addr16
xor
es
scas
mov
bound
mov
cmpsb
aad
jae
negl
adc
mov
cmp
ljmp
cmp
out
addr16
lods
xchg
push
xchg
pop
ljmp
push
cmpsl
push
jmp
js
dec
pop
jne
add
sub
dec
push
inc
fwait
neg
data16
stos
ss
loope
mov
and
jge
fidivrs
mov
dec
imul
jp
push
data16
shrb
or
divb
push
inc
mov
in
xchg
push
xor
test
jne
push
xchg
mov
mov
push
daa
dec
mov
test
mov
out
xor
out
dec
cwtl
scas
push
adc
loope
cltd
int3
jno
and
scas
ret
addr16
cmp
push
daa
mov
repz
and
jg
dec
ss
popa
gs
fwait
or
cmp
jge
mov
jp
loopne
xchg
xor
and
mov
sbb
les
push
push
inc
negl
mov
push
je
js
sub
movsl
out
ss
mov
mov
mov
cmpsb
mov
mov
aaa
lahf
scas
neg
mov
or
adc
or
insl
in
mov
xlat
xor
mov
aad
or
dec
mov
aam
imul
out
negb
cmp
sahf
sahf
rclb
cmp
dec
stos
mov
gs
pop
in
mov
mov
std
cmp
bnd
fdivr
sti
pop
cmp
xor
xor
add
stos
pop
les
xorl
cmpsb
mov
stc
sti
mov
jns,pt
mov
test
jmp
sbb
sub
and
xor
dec
shrb
ljmp
dec
cmovs
cmp
xor
mov
icebp
lock
es
jl
imul
pusha
jbe
daa
into
sbb
ret
test
scas
mov
sbb
daa
addr16
sahf
lcall
xor
xor
outsl
pop
rep
or
ret
mov
mov
ficompl
cmp
rclb
mov
inc
adc
or
mov
pop
scas
daa
lahf
jns
test
xor
ret
cltd
mov
mov
xlat
jg
insb
dec
mov
mov
mov
jl
ljmp
sub
and
dec
pusha
and
sbb
add
mov
ja
cmc
xchg
mov
jne
adc
out
shll
or
push
lods
flds
jg
inc
mov
jbe
sahf
adc
inc
push
push
jnp
cltd
rcll
jae
xorl
xchg
adc
or
clts
mov
add
aad
stc
or
hlt
test
jbe
js
mov
lods
mov
call
movb
sub
leave
jmp
out
adc
fsubl
pop
fstpl
out
jo
fwait
mov
sbb
fs
pop
dec
scas
in
mov
sbbb
jg
vsqrtpd
inc
mov
rolb
inc
xchg
sbb
gs
subl
mov
dec
pop
xor
adc
or
mov
jle
mov
nop
nop
mov
lahf
cld
addl
add
outsb
aam
in
int
pop
dec
sbb
inc
inc
adc
adc
xor
push
add
cmc
mov
sbb
dec
sbb
pop
out
sti
xchg
push
incb
jb
stos
fsubrl
stc
sbb
push
mov
lret
or
adc
pop
push
jmp
mov
sub
sub
fidivrs
lods
into
es
mov
sarb
mov
inc
jp
enter
imul
cmp
xchg
loop
mov
les
mov
sbb
push
cmpsl
mov
pop
mov
add
fdivr
insb
adc
icebp
mov
sbb
adc
jl
addr16
cmp
xchg
push
sarb
loopne
div
stc
xchg
xor
mov
push
mov
mov
fisubrl
xor
lret
cli
lcall
aas
test
ret
stos
aam
out
lret
mov
jle
sahf
sub
pop
test
dec
pop
jge
gs
in
or
shrb
sbb
rorb
in
or
xlat
or
out
int
shlb
jmp
mov
pop
les
mov
lods
push
in
push
push
out
insl
dec
sub
insb
jnp
push
outsb
mov
pop
push
shrd
adc
mov
in
cli
cmp
mov
test
jns
lods
pop
pop
push
in
mov
inc
loopne
sbb
mov
and
or
imull
cwtl
and
iret
scas
jno
in
add
mov
jp
pop
or
mov
xchg
js
fistpll
es
insl
lods
rorb
mov
add
les
pop
adc
adc
lahf
dec
popf
pusha
or
mul
ss
les
and
jne
inc
fcmovnu
adc
pop
mov
nop
sub
ja
mov
rorl
test
dec
jnp
ficomps
add
popf
inc
scas
sub
xchg
imul
scas
int
outsb
mov
sahf
pop
fnstsw
mov
fstpl
mov
addb
or
lea
cmp
negb
add
pusha
es
hlt
pop
xchg
into
dec
push
sub
mov
cs
ljmp
mov
out
sbb
inc
fmull
jb
imul
xor
dec
mov
fnstsw
push
mov
jnp
jmp
pop
in
js
bound
ss
ss
cmpsl
add
pop
mov
outsl
pushl
xor
xor
rclb
scas
pop
jbe
mov
or
jg
jns
add
push
jmp
adc
lret
stc
jb
mov
push
sbb
gs
mov
or
xchg
imul
clc
xchg
leave
inc
pop
and
xchg
or
filds
pop
incb
loopne
popa
jmp
push
cltd
test
jbe
and
mov
push
lea
rcrb
push
mov
and
scas
inc
jne
lcall
jne
dec
xchg
mov
inc
push
int3
cmp
add
std
mov
hlt
or
mov
push
push
add
or
cmpsb
mov
push
and
push
dec
mov
pop
outsl
pop
cmpsb
or
outsl
cmp
stos
and
push
repz
out
pop
or
mov
mov
scas
enter
stc
in
mov
jnp
add
jecxz
or
mov
popl
jle
push
imul
fbld
sbb
xchg
movsb
jl
in
stos
adc
sbb
sar
cmpsb
jg
jp
jp
mov
adc
xchg
cmc
xor
fwait
mov
out
sub
mov
xor
mov
xor
or
sbb
das
in
int
movsl
push
mov
pop
and
mov
ljmp
sti
dec
or
scas
inc
pop
xchg
aam
and
jno
pop
push
leave
jl
outsl
adc
sti
or
aas
or
orb
das
cmp
loopne
mov
rcl
enter
mov
xorl
iret
sbb
int
or
jp
scas
into
stos
adcb
test
jb
rcrb
xor
push
inc
mov
inc
sub
xchg
lahf
add
xchg
xor
repnz
clc
xor
je
cmp
test
je
js
sub
repz
xor
pop
inc
jle
pop
fs
mov
repnz
mov
sbb
hlt
jmp
mov
ja
xor
and
pop
mov
pushf
push
dec
xchg
cmp
adc
icebp
and
add
push
dec
sub
lret
jnp
daa
dec
inc
sub
nop
jns
mov
les
mov
mov
xchg
or
scas
push
and
sub
pushf
addr16
mov
stos
imul
mov
test
in
and
xchg
jmp
or
lock
push
xor
dec
insl
int
ret
ret
dec
test
jmp
xor
rcl
jmp
xchg
dec
in
push
iret
and
es
sahf
fs
push
popf
pop
inc
sub
xor
cmp
in
or
subb
sub
std
xchg
stos
and
and
std
test
inc
int
inc
and
sbb
and
movsb
pusha
jo
mov
cmp
cmc
sahf
outsb
mov
insb
lret
sbb
inc
jb
cmp
mov
or
das
aad
cmp
mov
leave
mov
pop
stc
push
mov
and
sbb
add
mov
aaa
fcomp
push
jp
or
mov
xchg
push
sbb
dec
movsl
adc
pop
pushf
mov
mov
adc
push
push
add
adc
mov
fs
orb
aam
repnz
and
fs
call
mov
sbb
dec
mov
fwait
jb
mov
ror
push
imul
or
test
psubusb
or
cld
fidivs
imul
out
mov
mov
pop
jo
sar
nop
add
mov
jnp
addl
leave
adc
pop
fstl
pop
sub
pushf
cmp
stc
cmc
stos
loopne
in
loope
cwtl
pop
dec
data16
loope
jno
in
push
xchg
aaa
leave
inc
pop
out
jge
rcrb
repz
pop
clc
icebp
in
insl
push
jmp
pop
test
mov
push
mov
jmp
int3
fstps
inc
mov
pop
mov
test
and
sbb
adc
pop
adc
ja
cwtl
sub
cltd
nop
xor
dec
mov
lahf
out
jle
pand
filds
popa
adc
jl,pt
iret
hlt
adc
push
fs
call
jge
push
push
orl
push
cs
scas
and
in
push
gs
insb
adc
pusha
jl
inc
into
lock
clc
add
jae
and
pop
scas
in
js
jbe
mov
out
stos
lock
es
pop
ret
pop
outsb
jns
push
cmp
and
push
out
mov
out
shlb
sbbl
adc
rcrl
sub
mov
or
pop
sbb
sbb
mov
scas
testb
jle
dec
jb
pop
push
call
mov
dec
xchg
rolb
ja
aas
cmpsl
faddl
sbb
cmpsb
in
cli
mov
jnp
out
xchg
fcos
xor
aam
adc
jecxz
mov
mov
aad
std
adc
cmp
jg
rcr
mov
push
scas
cmp
cmc
test
jp
and
sarb
sbb
sbb
into
testl
fadd
jae
mov
insl
pop
xor
out
mov
es
stos
cmpsl
test
imul
out
pop
or
loopne
jns
cmpb
cmc
xchg
scas
ss
lahf
jmp
ficoml
jno
sub
shll
jnp
mov
push
leave
cmp
scas
mov
xchg
popa
push
push
cs
mov
cmp
and
rorb
out
sbb
adc
cld
inc
sub
cmpl
addr16
and
mov
mov
stos
popl
fsts
inc
nop
and
negb
xor
mov
cs
imul
pop
or
js
cld
rol
add
mov
jbe
in
and
jne
dec
adc
inc
iret
lea
hlt
aaa
in
lret
aas
cmp
adc
add
sub
xlat
aam
or
pop
push
mov
insb
loopne
mov
mov
sti
jbe
pop
xchg
or
in
les
push
clc
leave
lret
aas
xchg
and
jmp
mov
data16
dec
js
insb
inc
cmpsb
iret
cmp
add
les
push
stos
dec
mov
aam
cmp
lds
repz
addb
push
bound
outsb
ret
inc
cld
jb
mov
fists
dec
sbb
sbb
scas
jecxz
sub
ja
shl
sub
xlat
mov
mov
in
and
push
repz
inc
mov
pop
pop
mov
or
or
sbb
loope
repnz
cmp
jmp
push
jmp
fcomi
and
fstl
mov
mov
lods
mov
sub
or
sub
and
cmpsl
pop
add
mov
xchg
xor
daa
pop
std
inc
ret
out
jle
push
fsubl
inc
xlat
mov
xor
cmpl
roll
jnp
imul
push
inc
xor
mov
cmc
sub
data16
test
push
sahf
enter
outsb
mov
daa
xchg
push
enter
in
sahf
notb
popa
or
jbe
jmp
xchg
movsl
rcl
movsl
cmc
sbb
gs
sbb
test
mov
or
mov
jnp
fidivl
dec
and
dec
mov
mov
xor
xchg
xor
pusha
pop
adc
adc
test
or
xor
ret
xor
arpl
mov
les
test
js,pn
subb
bound
jns
inc
fsts
or
mov
mov
pusha
fstps
and
in
inc
cwtl
imul
gs
ja,pn
pop
sbb
test
lock
daa
iret
cmpsb
push
cmp
pop
cmp
popf
sahf
adcb
mov
mov
sbb
xor
add
stos
inc
push
push
loope
repnz
rcrl
mov
sahf
cmpsb
pop
xor
gs
rcl
xchg
lea
cmpsl
insl
sbb
push
push
sbb
out
outsl
loop
dec
insb
xlat
and
mov
loope
and
in
rclb
cmp
cmpsb
dec
movsl
or
jp
popf
add
and
icebp
xor
daa
and
mov
push
jp
subb
lods
push
cmc
mov
pop
push
in
sahf
lret
lds
mull
jo
xorb
mov
sbb
push
into
ja
sbb
sahf
pop
in
xor
lcall
shl
fldcw
int3
mov
insl
decb
ja
dec
cmp
dec
xor
mov
mov
push
arpl
test
push
adc
into
aam
push
insb
das
daa
fcomip
add
stos
subl
gs
sbb
jbe
stc
xchg
jae
xor
shl
and
lods
sbb
cmp
std
pop
lret
int
xchg
lock
dec
dec
xchg
arpl
loop
cld
mov
mov
jnp
jne
test
jp
mov
bound
stos
int
pusha
aad
divb
push
repnz
mov
js
es
and
ret
ljmp
js
mul
xor
sbb
std
or
add
add
push
in
pop
in
lcall
sbb
xor
xchg
adc
pop
dec
fwait
aas
adc
sbb
push
xor
mov
repnz
mov
xchg
adc
sub
cli
xchg
add
ficoms
xor
clc
push
mov
push
loope
cli
mov
or
and
stos
les
sub
add
lret
scas
pop
add
stos
inc
outsb
jne
clc
lret
outsb
ffree
scas
mov
std
sbb
pop
sub
es
xchg
test
push
mov
les
xor
movsl
mov
and
enter
in
mov
pushf
imul
cltd
sub
inc
jp
and
add
inc
cmp
pop
jl
adc
jne
mov
sbb
push
cli
shlb
xor
je
and
mov
pop
dec
mov
leave
scas
push
mov
loop
mov
insb
jns
fdivrl
inc
cmp
sbb
push
sarb
cmpsb
lds
cmp
test
or
lods
xchg
sbb
xlat
cmp
loopnew
call
pop
les
ret
ljmp
xchg
leave
xorb
cmp
jl
je
int
jno
les
popf
fcoml
or
call
mov
mov
es
jo
int
cmp
dec
sahf
movsb
xor
sbb
sarl
aas
mov
xchg
sbb
sbb
push
arpl
sub
rcrl
ret
pop
mov
arpl
clc
xchg
lds
mov
mov
rcll
pop
std
jl
adc
lods
int
xor
mov
pop
in
pushf
sar
cmp
jecxz
pop
shll
push
push
sahf
mov
mov
xchg
stc
adc
push
add
sahf
and
int
incl
sarl
je
ret
add
xchg
or
dec
fisubrl
negl
fimuls
mov
lock
jmp
imul
enter
sahf
jle
out
sarb
dec
add
inc
and
jo
pusha
je
xchg
push
das
adc
imul
movsb
pop
adc
aad
popf
add
stos
fld1
mov
push
mov
add
outsb
xchg
xchg
dec
daa
pusha
int
in
inc
and
insl
ja
js
jo
xchg
aas
in
dec
andb
mov
xchg
imul
or
cli
lret
outsl
inc
mov
add
mov
in
daa
cld
cmp
pusha
lret
cmp
add
addb
pusha
or
push
mov
rcll
dec
and
mov
int
add
sarb
mov
push
mov
lahf
pop
fdivrp
pop
pop
lods
add
mulb
sbb
xchg
push
push
int
sbb
pop
add
sbb
or
push
out
jmp
stc
push
xchg
sbb
fisubl
ret
lock
cmp
cmc
insl
xor
sbb
jmp
mov
sti
cmpsb
xor
das
mov
mov
push
cmp
pop
outsl
inc
dec
add
cli
push
bound
sub
repz
mov
stc
jge
adc
test
loopne
xchg
push
rcrl
sarl
rorl
data16
lahf
rcr
jle
adc
jnp
xchg
pop
test
push
repz
icebp
adc
mov
shll
sub
in
loopne
xor
pop
dec
out
fistpl
enter
inc
or
inc
flds
stc
push
and
cmp
imul
dec
aam
jno
ljmp
ja
loop
dec
pop
inc
adc
lock
insl
shrb
dec
sub
dec
cmp
mov
scas
adc
loopne
les
add
ret
and
in
imul
cmp
pop
testl
add
sbb
inc
inc
push
and
inc
push
into
sti
enter
aam
mov
ljmp
loop
test
mov
or
jp
andb
lods
push
in
push
or
out
scas
adc
cmp
daa
push
xlat
xchg
lahf
rol
out
and
mov
imul
inc
clc
xchg
lahf
pushf
add
cwtl
ret
adc
mov
loope
cmp
mov
or
xchg
add
pop
shll
lret
lahf
jo
int3
inc
push
jp
fdivrl
imul
pop
mov
or
xor
mov
andl
pop
mov
enter
mov
sti
jne
test
pop
lds
adc
and
ds
out
imul
mov
adc
lret
and
sahf
xchg
cmp
orl
and
cli
daa
xor
rorl
push
push
inc
adc
push
mov
and
stos
push
in
movsl
or
hlt
div
ret
sbb
adc
rorb
cmpsb
bound
sub
push
or
ficoml
jle
jl
imul
push
dec
mov
pop
mov
add
sbb
js
ja
sti
call
mov
and
mov
les
push
popa
imul
pushf
xchg
jl
iret
cmp
rcrb
jg
xchg
dec
dec
je
jns
ljmp
push
out
mov
clc
cltd
adc
pop
cmc
or
adc
arpl
adc
pop
in
aaa
push
stos
pop
sub
jg
jle
adc
imul
faddl
cmp
pop
pop
pop
mov
mov
arpl
xor
cli
nop
mov
push
inc
xor
dec
test
push
adc
lret
and
mov
pop
fidivl
aad
sbbl
aad
cmp
jg
testb
and
fistl
mov
push
mov
lea
lcall
cmp
shll
lret
pop
push
xchg
outsb
inc
scas
mov
inc
and
jle
cltd
sub
jge
aaa
push
sub
jb
and
add
lock
jl
mov
shrl
popf
or
test
push
mov
into
hlt
or
or
dec
rcl
sti
daa
pusha
push
jmp
roll
nop
pusha
call
jmp
push
ret
call
jmp
mov
add
sub
cmpb
jne
mov
cmp
mov
jne
lea
push
push
pushl
lea
push
jmp
add
push
push
add
pop
test
je
jmp
call
movsl
and
rclb
add
jne
call
pop
cmp
jne
xor
mov
test
je
push
push
pushl
call
mov
test
je
push
push
pushl
call
pop
or
popa
jne
push
pop
ret
xor
neg
sbb
inc
ret
call
enter
je
adc
loopne
pop
aas
or
push
jmp
aaa
movsb
or
push
das
cmp
pop
movzwl
add
and
sub
pushl
call
in
and
pushf
movsl
mov
pop
pop
mov
add
call
int3
adc
div
fs
xchg
ror
into
out
cld
test
or
or
add
out
cmp
jle
sub
mov
pop
pop
add
push
push
pop
pop
sub
mov
js
sub
mov
sub
mov
cmp
jne
movswl
jb
xchg
jge
xchg
int
push
das
adc
inc
jae
ljmp
adc
addr16
shl
bound
push
dec
fcmovne
xchg
sbb
pop
dec
cmp
les
lea
push
movsl
js
pusha
shll
mov
inc
dec
daa
lods
mov
mov
xor
jg
adc
shll
add
push
xchg
dec
lret
inc
mov
repz
jb
rcl
mov
shl
push
das
sub
repnz
mov
std
test
mov
fidivrs
inc
ficoml
mov
int3
js
iret
fcomps
shl
mov
fdivp
xor
fisubrl
icebp
pop
mov
gs
sbb
push
das
push
ret
clc
iret
sbb
push
cld
aad
jmp
mov
xchg
aaa
jnp
clc
stos
pop
mov
mov
cmp
stc
jnp
pushf
push
lods
pop
mov
cltd
add
push
xor
stc
xchg
fmuls
adc
aad
and
mov
and
dec
cmc
cmpsl
or
hlt
cld
xchg
and
xor
cmp
jno
jge
jg
testl
mov
sub
fbstp
call
mov
lea
mov
jl
rcrl
push
dec
in
adc
std
mov
push
mov
push
mov
or
sahf
out
inc
sub
js
and
loop
adc
fdivrl
test
bound
pop
mov
pop
int3
jmp
jmp
pop
sbb
les
sub
xchg
lcall
jge
xchg
pop
dec
xor
dec
sub
push
test
xchg
aad
loop
dec
pop
xchg
mov
scas
das
push
aaa
sub
lock
adc
les
rcrb
mov
mov
push
adc
imul
jg
lock
inc
lds
or
outsl
shr
add
test
outsl
dec
fidivrl
mov
xchg
adc
push
jg
pop
hlt
mov
inc
add
fsubl
mov
lods
das
jbe
in
shlb
int3
jmp
push
jg
mov
push
mov
xor
push
jg
mov
ss
xor
inc
test
insl
cmp
jg
lock
cwtl
andb
ds
shl
sarb
in
repnz
mov
repnz
xchg
outsb
dec
rcrb
scas
pop
pop
mov
mov
fildll
rcrb
leave
outsl
push
outsb
mov
icebp
loopne
pop
fwait
stos
pop
pop
loopne
movsl
fwait
adc
jmp
jmp
aad
fwait
sbb
hlt
adc
fdivr
adc
pop
fwait
les
push
mov
xchg
xchg
sub
pop
fwait
sbb
call
pop
fwait
les
mov
rcrb
dec
rcrb
dec
rclb
aam
incl
pop
mov
pop
xchg
outsb
aad
fwait
dec
pop
iret
ljmp
adc
call
pop
mov
cmp
pop
jnp
push
into
jne
cmp
push
xlat
fstpt
out
mov
sbb
dec
rcrb
es
dec
rclb
outsl
dec
shl
icebp
jge
pop
fwait
mov
rcrb
aam
fwait
sti
test
or
imul
popa
inc
aam
fwait
popf
rcrb
sbb
pop
fwait
ret
outsl
dec
shl
icebp
jns
pop
fwait
cmpsl
jns
outsb
dec
pop
inc
rcrb
mov
cmc
icebp
jns
pop
fwait
ret
icebp
inc
aam
fwait
ret
ljmp
sbb
mov
cld
pop
fwait
dec
pop
push
imul
mov
pop
out
sub
pop
pop
push
rcrb
mov
rorl
jns
pushf
inc
imul
jle
das
lods
insl
dec
shl
and
les
ljmp
push
or
pop
fwait
sti
pop
out
ds
rcrb
mov
push
subb
repnz
mov
shl
scas
inc
pop
fisttps
push
fprem
mov
sbbb
inc
rcrb
mov
cmc
icebp
adc
fwait
ret
ljmp
push
fwait
popf
rclb
jae
icebp
sub
dec
push
pop
fwait
popf
rolb
pushf
jno
pop
fwait
dec
js
fwait
dec
rcrb
dec
rcrb
mov
addr16
enter
lret
mov
fnstenv
insl
xor
xchg
outsb
cmp
rcl
cmc
test
ret
lods
pop
cld
movsl
fwait
jo
pop
in
xchg
outsb
cmp
dec
rcrb
rcl
cmc
test
ret
lods
jg
aad
and
inc
mov
add
inc
add
jb
xor
les
in
xchg
outsb
cmp
mov
arpl
inc
jno
jae
mov
fwait
inc
add
jb
xor
les
in
xchg
outsb
cmp
inc
addr16
push
inc
rcrb
inc
add
jb
xor
les
in
xchg
outsb
cmp
push
mov
xchg
mov
rcrb
test
jae
aas
xchg
cmc
xchg
shrb
mov
add
inc
add
jb
xor
gs
pop
fwait
aam
es
inc
rcrb
cmp
mov
dec
rcrb
push
push
loope
les
pop
sarl
cli
xchg
pop
fwait
mov
adc
inc
pop
xchg
les
aaa
cli
xchg
rcrl
test
outsl
push
fwait
dec
rcrb
mov
rcrb
dec
pop
fwait
dec
rclb
dec
rcrl
lds
sti
out
call
lods
out
aam
xlat
inc
mov
in
ficomps
pop
sub
pop
ljmp
dec
out
outsl
pop
fwait
dec
clc
je
dec
rcl
out
xchg
dec
addr16
or
cmp
pop
fwait
mov
pop
dec
jo
sti
dec
fwait
dec
rcrb
fadds
xlat
xchg
test
popf
cmp
jnp
xchg
outsl
cld
mov
and
and
aad
out
aad
in
mov
push
xchg
dec
cmp
adc
add
data16
or
lret
lahf
arpl
pop
es
xchg
xchg
je
popf
push
mov
mov
ret
inc
lret
jmp
adc
pop
xor
dec
rcrb
dec
rcrb
dec
rcrb
dec
rcrb
dec
rcrb
dec
rcrb
xlat
pop
jae
pop
enter
fwait
or
pop
fwait
dec
rcrb
dec
rcrb
dec
rcrb
dec
rcrb
dec
rcrb
iret
pop
pop
fwait
dec
rcrb
dec
rcrb
dec
rcrb
dec
rcrb
mov
repnz
nop
push
aas
mov
pusha
iret
adc
push
fdivs
push
decl
jle
rcrb
jnp
jnp
jbe
mov
ljmp
sti
or
out
push
pusha
aas
inc
mov
je
pop
insb
pop
ljmp
jle
cmp
xlat
nop
mov
pop
xchg
sub
rcrl
arpl
mov
or
push
mov
ficoms
xchg
or
in
jmp
push
lods
insl
inc
xchg
scas
nop
xchg
ljmp
mov
push
insb
mov
shll
xor
ljmp
call
jmp
lcall
inc
test
cmpsl
repnz
call
xor
lock
les
ret
jns
sub
out
pop
mov
test
ret
lds
cmpsb
pop
arpl
cmp
call
mov
fistpll
pop
insl
stos
shll
lods
loope
xchg
inc
mov
mov
pop
jge
dec
in
xchg
mov
imul
dec
pop
clc
outsb
testb
outsl
jl
xlat
gs
mov
lock
or
pop
gs
in
jo
inc
pusha
fidivrl
add
sub
or
xchg
adc
js
pusha
loope
jbe
lea
cmpsb
mov
jns
add
shll
lahf
repz
repz
push
imul
pop
and
insb
std
ror
out
aam
jecxz
into
push
adc
adc
sarb
lods
add
imul
test
clc
mov
scas
mov
mov
roll
mov
rcrl
mov
dec
stc
mov
dec
cmp
sbb
dec
enter
add
std
jne
mov
jb
sub
int3
add
pop
fwait
dec
pop
pop
fwait
pop
pop
sub
das
outsb
mov
aam
push
cmp
and
repz
cs
xchg
dec
jb
rcll
jge
inc
fwait
popa
in
mov
cmp
ret
outsb
or
pop
movsb
aas
sub
jne
ljmp
faddp
pop
sbb
push
inc
sub
push
cmp
les
dec
push
bound
lea
xchg
and
sbb
test
inc
popf
jg
add
ja
mov
dec
movsl
pop
sbb
or
pop
jmp
sub
in
cmp
ds
loop
out
imul
sbb
adc
xchg
lods
xor
push
cltd
popa
cs
sub
imul
cltd
daa
popf
lock
sub
call
jle
cwtl
adc
test
add
add
add
or
add
adc
mov
add
jb
gs
xor
cs
insb
add
add
je
jb
arpl
fs
jae
add
add
je
outsl
fs
gs
popa
outsb
fs
gs
add
add
fs
imul
add
mov
add
mov
add
lea
add
lea
add
lea
add
lea
add
lea
add
add
add
add
jbe
jo
xor
cs
insb
add
imul
insb
add
gs
xor
fs
insb
add
insl
arpl
xor
fs
insb
add
jb
imul
add
gs
jne
xor
cs
insb
add
jb
gs
xor
cs
insb
add
add
add
add
add
add
add
add
addb
add
mov
add
add
lea
add
lea
add
add
gs
imul
inc
gs
arpl
popa
jo
add
add
imul
jae
js
add
inc
gs
imul
outsl
outsb
dec
outsb
outsw
inc
add
add
jb
popa
outsb
je
push
push
jns
gs
js
add
push
popa
imul
jo
imul
add
add
add
add
add
add
add
and
add
add
add
add
and
add
add
add
add
adc
add
add
add
add
add
adc
add
add
or
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
incl
movb
lods
xchg
add
call
popf
add
fcmove
add
sahf
push
add
mov
add
std
sti
add
xchg
dec
add
cwtl
push
add
clc
repnz
mov
dec
add
mov
add
test
dec
add
scas
pop
add
ret
test
idiv
std
add
incb
outsb
fnsave
mov
lahf
xchg
pop
xchg
dec
add
mov
jo
pop
aam
add
incl
incl
hlt
cld
cld
add
xchg
dec
add
lods
pop
add
mov
addb
int
add
popl
sub
add
cld
stc
add
cmpl
pushf
xor
add
stc
repz
mov
pop
add
mov
std
add
test
in
mov
xchg
sub
adc
pop
add
cli
cld
add
idiv
add
mov
add
scas
pop
add
xchg
cmp
xchg
mov
add
lock
add
leave
mov
add
stc
hlt
add
xchg
daa
add
lahf
aas
add
stc
cld
add
idiv
add
movsl
dec
add
in
add
fmulp
add
leave
mov
add
out
out
adc
add
lcall
out
hlt
add
cltd
xor
lret
mov
add
jo
add
fsubp
add
fsubp
add
imul
mov
jge
push
addr16
add
fmulp
add
loope
add
lret
mov
add
into
rolb
add
add
addb
addb
add
rol
addb
add
incl
add
incl
incl
add
incl
incl
incl
add
or
add
adc
add
pop
pop
add
sub
cmp
cmp
inc
inc
inc
add
push
add
pop
add
add
js
test
xchg
add
stos
stos
add
rcl
rolb
fiadds
jmp
jmp
clc
clc
clc
add
sti
incl
movsb
mov
rolb
lret
add
add
add
add
jl
add
fwait
add
add
add
add
add
incl
dec
dec
incl
insb
insb
incl
nop
nop
incl
mov
incl
add
add
push
pop
add
sub
xor
add
inc
flds
add
add
incl
insb
popf
incl
nop
mov
add
add
aas
pop
add
push
jl
add
add
jle
add
xchg
flds
add
incl
dec
ret
insb
into
incl
nop
add
add
pop
pop
add
jl
add
fwait
fwait
add
mov
flds
add
lock
incl
dec
incl
insb
incl
nop
incl
mov
incl
add
sub
add
add
jl
add
fwait
imul
add
xchg
add
lock
add
mov
dec
inc
add
add
jmp
add
ds
add
add
jl
add
fwait
xor
add
inc
add
lock
add
insl
add
test
insb
lcall
add
add
add
add
jl
add
fwait
add
add
add
add
add
and
and
dec
decl
insb
ljmp
call
add
add
push
pop
add
sub
xor
add
inc
flds
add
add
insl
jmp
test
dec
add
call
add
add
aas
pop
add
push
jl
add
add
jle
add
xchg
flds
add
jmp
ret
add
ljmp
call
add
add
pop
pop
add
jl
add
fwait
fwait
add
mov
flds
add
lock
jmp
add
add
add
bound
add
add
inc
inc
popa
pop
add
push
pop
pop
push
add
add
add
add
pop
add
pop
pop
pop
pop
push
add
add
add
push
push
push
push
push
push
push
push
push
push
push
push
add
add
inc
inc
inc
dec
dec
dec
dec
cs
dec
dec
dec
add
xor
cmp
cmp
ds
inc
inc
inc
add
sub
xor
xor
xor
add
sbb
and
and
add
sbb
push
add
add
add
and
push
add
add
sbb
sbb
pop
sbb
add
add
adc
adc
push
pop
sbb
adc
sbb
add
or
push
or
or
or
push
add
sldt
add
pop
pop
push
add
add
add
add
add
add
add
add
add
add
add
add
aas
add
clc
pop
add
lock
loopne
add
rolb
add
add
add
add
add
add
add
add
add
add
add
sldt
cld
aas
add
sub
add
adc
add
and
add
add
and
add
add
inc
add
add
sahf
cmp
sahf
cmp
cwtl
jp
mov
fmulp
stc
hlt
stc
hlt
push
icebp
mov
add
add
push
fcmove
decl
addr16
decl
addr16
push
fcmove
pushl
add
add
push
fcmove
call
jo
call
fsubp
call
fsubp
decl
imul
repnz
mov
add
add
mov
out
repnz
call
jne
decl
lcall
out
hlt
decl
cltd
xor
adc
push
fcmove
cli
out
out
shlb
add
movsb
xchg
stc
hlt
call
xchg
daa
call
lahf
aas
push
stc
cld
jmp
sti
lcall
movsl
dec
decl
pushf
xor
call
in
in
fmulp
mov
add
add
add
add
test
in
mov
xchg
sub
adc
pop
push
cli
cld
in
idiv
pushl
mov
ljmp
scas
pop
call
xchg
cmp
xchg
mov
stc
lock
std
mov
cld
stc
lcall
cmpl
pushf
xor
incl
jl
ljmp
incl
jl
aaa
mov
pop
jmp
mov
std
mov
add
add
add
add
lcall
xchg
dec
jmp
lods
pop
pushl
mov
cmp
int
decl
mov
pushl
mov
push
sbb
ds
mov
add
add
add
add
push
fcmove
push
cld
cld
push
fcmove
mov
add
add
add
add
lcall
xchg
dec
call
mov
jo
pop
aam
std
std
ljmp
mov
cmp
dec
mov
add
add
add
add
call
test
dec
jmp
scas
pop
aas
ret
test
idiv
std
cli
ljmp
mov
inc
ret
cmp
pop
test
mov
add
add
add
add
mov
std
sti
push
fcmove
call
xchg
dec
jmp
cwtl
push
jmp
clc
repnz
aas
mov
dec
lcall
xchg
dec
push
fcmove
std
sti
dec
mov
incl
add
add
add
add
mov
inc
mov
push
call
push
fcmove
lcall
sahf
push
lcall
sahf
push
push
fcmove
push
call
popf
inc
mov
mov
jns
les
push
call
push
call
xchg
inc
lods
xchg
mov
add
add
lods
xchg
mov
lods
xchg
inc
lods
xchg
inc
lods
xchg
mov
add
add
aas
add
clc
pop
add
lock
loopne
add
rolb
add
add
add
add
add
add
add
add
add
sldt
cld
aas
add
sub
add
and
add
inc
add
add
add
add
add
add
add
add
test
mov
add
push
add
addb
call
test
aam
les
mov
movsb
pop
add
add
fsubrl
shlb
add
mov
add
call
les
and
lods
add
insb
add
les
nop
mov
dec
add
add
aam
add
enter
in
add
insb
add
pushf
add
adcb
js
pop
movsb
add
add
les
sub
pushf
add
js
mov
lods
xchg
add
aam
add
lods
add
addb
les
and
mov
add
int3
mov
sub
mov
in
add
hlt
hlt
add
je
fdivl
add
shlb
les
add
mov
pusha
add
mov
nop
add
mov
add
test
add
rol
add
push
add
mov
loopne
add
rolb
js
enter
js
and
enter
mov
sub
test
in
loopne
add
fadd
add
shrb
add
call
js
and
mov
add
int3
add
loopne
add
int3
pushf
add
js
int3
mov
fadds
loopne
fadds
adc
mov
add
enter
loopne
add
fdivrs
add
call
rolb
clc
hlt
hlt
add
rclb
cmp
test
clc
loopne
add
lock
cmp
add
incl
add
cmp
cmp
add
add
push
insl
insl
push
cmp
cmp
push
outsb
outsb
outsb
je
cmp
inc
push
push
dec
imul
add
add
xor
adc
insl
sbb
add
fs
cmp
insl
insl
cmp
add
inc
xor
push
dec
dec
dec
dec
pop
push
or
insl
sbb
je
pop
insb
or
pop
pop
pop
pop
push
pop
imul
pop
cmp
push
pop
insl
sub
outsl
inc
outsb
outsb
outsb
outsb
inc
sbb
insl
je
add
add
push
pop
inc
imul
incl
pusha
jb
pop
insl
push
aaa
add
push
insl
insl
push
ss
and
outsl
incl
and
imul
cmp
aaa
push
insl
add
and
pop
aas
incl
pop
pop
or
insl
insl
aaa
inc
insb
inc
push
pusha
xor
aas
aas
and
and
pusha
push
insl
pop
add
add
add
add
add
and
sub
aas
sub
push
sub
je
add
add
add
je
and
push
sub
aas
or
sub
insl
outsb
aaa
add
add
add
inc
outsb
xor
pop
sub
ljmp
or
sub
outsb
inc
add
add
add
outsb
das
pop
push
pop
pop
pop
pop
pop
pop
inc
inc
inc
inc
dec
pop
pop
pop
pop
pop
pop
jne
outsb
sbb
add
add
pop
sbb
pushl
pop
pop
inc
add
add
inc
ljmp
call
das
insb
jmp
add
add
sbb
decl
or
call
add
add
cmp
xor
sbb
syscall
pushl
gs
add
add
adc
cmp
adc
dec
dec
dec
dec
and
cmp
sub
cmp
adc
add
add
push
sbb
xor
dec
es
ljmp
xor
dec
xor
sbb
jmp
add
add
pop
cmp
adc
sub
cmp
pop
pop
dec
jb
or
pop
jmp
add
add
pushl
sbb
sub
push
adc
pop
dec
pusha
dec
sbb
je
incl
add
add
aaa
je
lcall
cmp
ds
jmp
sub
sbb
ljmp
inc
push
push
push
lcall
dec
jne
pop
es
dec
sbb
pushl
aaa
push
add
inc
ljmp
and
ljmp
aaa
add
aaa
inc
cmp
add
incl
add
inc
outsb
call
ljmp
add
outsb
ljmp
add
add
addr16
add
cld
aas
push
ud0
loopne
inc
add
incl
add
incb
add
add
jg
add
aas
clc
add
pop
clc
add
pop
lock
add
pavgb
add
loopne
add
loopne
add
rolb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
clc
add
pop
incl
add
inc
add
push
ud0
clc
pop
cld
aas
ljmp
add
add
add
add
add
add
and
add
add
adcb
add
adcl
ret
out
mov
push
andb
add
mov
dec
push
ret
xchg
push
stc
jecxz
clc
loope
jmp
ret
ret
out
scas
js
push
mov
lods
mov
stc
fcmovnb
cld
bnd
std
div
cld
icebp
out
cli
in
jbe
lods
jbe
adc
mov
mov
cld
loopne
jmp
out
mov
xlat
int
cli
lock
cld
loopne
cld
jmp
lds
mov
scas
jns
adc
xchg
push
out
lret
scas
cld
fadd
sti
out
call
lret
ret
leave
sar
leave
sar
lret
ret
lret
test
rcr
sar
out
ret
nop
push
adc
add
add
xchg
jno
out
int
cld
faddp
jmp
sar
pop
mov
jmp
movsb
push
fcom
xlat
fcom
xlat
fcom
xlat
call
lcall
mov
ja
jmp
sar
std
loop
push
fmul
inc
xchg
outsb
lahf
les
lods
std
call
int
cmp
pushl
cmp
loopne
loopne
loopne
sub
jl
and
pop
call
fld
std
in
in
xlat
inc
xchg
imul
add
add
mov
fdivr
mul
incl
jmp
lods
push
ljmp
mov
call
jmp
out
ljmp
mov
mov
pop
lods
incl
gs
clc
in
jmp
fidivrs
xor
add
add
mov
sti
jmp
stc
jecxz
ljmp
jnp
pop
stos
pushw
lds
jmp
icebp
icebp
push
repnz
repnz
lock
mov
xchg
incl
lcall
mov
stc
jecxz
cld
in
loopne
shrl
add
mov
mov
jmp
movsb
pop
pushl
xchg
jmp
jmp
rolb
sti
sti
sti
sti
sti
stc
stc
stc
jmp
mov
xchg
pushl
int3
cltd
decl
mov
jmp
out
out
fadd
inc
xchg
jb
fidivrs
sar
hlt
ljmp
mov
mov
das
int3
cltd
lcall
lret
and
mov
jmp
mov
xchg
lcall
xchg
call
stos
cmp
xchg
ljmp
mov
int
std
jmp
fidivl
add
int
xchg
fcmovnb
sti
in
decl
scas
insb
incl
cmpsl
lcall
xchg
lcall
int3
xchg
lcall
int
lcall
les
lcall
mov
lcall
int3
cwtl
lcall
mov
sbb
mov
sti
out
push
fmul
dec
popf
jns
fidivrs
xlat
fcmovbe
sar
mov
lcall
into
lcall
rcrb
lcall
mov
push
rcrl
call
rcrb
ss
ljmp
std
jmp
fdivrl
add
shlb
mov
call
scas
push
call
iret
pushf
call
rcrl
call
shll
lcall
ret
call
aad
call
aam
call
mov
cmp
lods
lcall
scas
push
cmpsb
mov
in
sarb
aaa
fnstcw
loopne
mul
into
lcall
ljmp
incl
scas
call
aam
call
aad
call
xlat
cmpsl
lcall
lret
xchg
lcall
les
call
xlat
cmpsl
call
cmpsb
call
aam
jmp
test
jmp
addr16
loope
cld
bnd
jg
add
add
lods
fdivr
cmc
in
call
into
mov
and
lods
lcall
aad
call
aad
call
xlat
cmpsl
decl
fldcw
lcall
int
lcall
xchg
decl
scas
decl
fldcw
call
cmpsl
jmp
shll
in
aam
imul
jmp
enter
add
add
lahf
jl
jmp
imul
jl
xchg
das
scas
je
cmp
cmp
sub
test
sub
test
push
rclb
push
rclb
and
jnp
sub
test
sub
cmp
mov
cmp
scas
ja
popf
mov
lock
in
xlat
ret
dec
lahf
jl
fdivs
fdivr
cld
out
stos
mov
cmc
std
std
std
dec
stos
cld
out
clc
jmp
test
fnstcw
push
in
mov
cmc
cmc
std
std
std
call
in
in
jnp
jnp
cmc
in
call
mov
add
fdivrs
in
aam
fcmovnu
iret
push
hlt
hlt
std
std
std
jge
enter
mov
in
aam
call
mov
out
add
add
mov
call
leave
stos
ljmp
pushl
popf
jmp
xchg
jmp
jmp
xchg
jmp
xchg
jmp
xchg
jmp
xchg
decl
test
ljmp
shll
call
fisubrl
call
call
mov
testb
add
shlb
jmp
mov
push
lcall
stos
decl
loopne
incl
loope
incl
loop
incl
jecxz
call
enter
out
std
sti
ljmp
sar
aad
incl
loop
decl
loope
call
scas
call
test
jmp
mov
call
mov
incl
add
add
mov
jmp
lds
lcall
enter
fbstp
incl
loop
incl
in
incl
in
call
lret
jmp
fidivl
incl
mov
jmp
in
call
lret
xchg
ljmp
lahf
dec
jmp
les
dec
mov
incl
add
add
mov
push
ljmp
inc
mov
jae
pop
lret
xchg
call
fisubrl
incl
in
call
lret
out
std
sti
call
lret
fnstenv
call
jl
sar
dec
aad
jmp
mov
pop
pushl
jmp
dec
mov
incl
add
add
mov
stc
out
in
ljmp
call
test
cmp
fsubrs
adc
popf
decl
aam
incl
out
decl
xlat
pushl
lret
cmp
xchg
call
insb
call
mov
mov
fidivrl
add
mov
mov
in
ret
mov
test
nop
lcall
leave
fwait
push
std
incl
leave
decl
mov
or
lret
pushl
jecxz
lcall
lret
bound
js
in
ret
std
cli
cld
stc
cld
clc
sti
idiv
imul
in
faddp
mov
mov
add
mov
mov
pusha
out
ret
lahf
out
loop
out
jmp
ret
pushl
mov
lcall
int3
mov
incl
out
call
mov
pushl
ret
std
std
cld
cld
cli
clc
ljmp
test
mov
add
add
mov
jo
lret
cld
cli
stc
cld
clc
cmc
dec
mov
cmp
fsubrs
incl
jle
fnstenv
hlt
cld
cli
cmc
jmp
lret
shlb
jno
int3
test
mov
jmp
out
call
mov
pushl
gs
mov
cld
sti
jmp
lret
lret
jae
add
add
movsl
test
in
fld
push
loopne
stc
lock
aam
lahf
lcall
add
aad
mov
stc
icebp
in
call
mov
jo
add
add
shrb
fadd
mov
fidivrl
add
clc
pop
push
ud0
loopne
incl
add
incl
add
incb
add
add
aas
cld
add
aas
clc
add
pop
clc
add
pop
lock
add
pavgb
add
loopne
add
loopne
add
rolb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
paddd
add
rolb
jmp
pop
clc
pop
cld
aas
ljmp
add
add
add
add
add
add
and
add
add
andb
add
jns
xor
mov
mov
ja
sahf
scas
js
sub
add
add
js
mov
addr16
mov
jmp
int
call
stos
mov
mov
je
jp
jb
or
add
add
adcl
mov
lods
cli
loop
call
clc
loopne
jmp
lds
std
mov
push
int
jl
cmp
add
add
xchg
insb
cmc
jecxz
cltd
in
lods
std
fnstcw
cld
fnstcw
cld
fnstcw
push
aad
fidivs
gs
scas
jp
jns
add
add
adcb
movsb
jle
out
leave
stos
sti
fnstcw
cld
fadd
std
in
loopne
cld
cli
sti
stc
std
ljmp
cld
fnstcw
jmp
mov
int3
sahf
js
mov
push
sahf
scas
jns
add
add
add
pop
mov
mov
sti
hlt
shll
cld
fidivrl
sti
cmc
repnz
in
ljmp
fstp
fdivr
out
out
in
std
hlt
lock
jmp
cld
fnstcw
push
xlat
sar
lods
mov
mov
push
popf
mov
push
add
add
add
mov
fistpll
mov
std
ffreep
push
repnz
xlat
fcos
fcmovbe
fcos
aad
call
aad
fcmovnbe
fcos
fcmovnbe
fcos
out
push
out
jecxz
std
jecxz
std
ffreep
push
fmulp
fidivl
pop
sahf
mov
push
pop
mov
mov
mov
in
loopne
sti
repz
pop
cwtl
movsb
pop
jmp
xlat
fdivr
loopne
fdivr
aad
call
aad
jmp
fcomp
jmp
fcomp
cmp
ret
cld
repz
in
std
loop
clc
in
fnstsw
pop
lahf
mov
push
add
add
add
cwtl
sti
stc
fnstcw
in
loop
sar
pusha
mov
lcall
popf
dec
pushl
addr16
fcmovu
jmp
fcmovu
fdivr
fcomp
fdivr
in
loopne
in
loopne
xor
dec
ljmp
call
in
loopne
out
clc
out
fnstsw
pop
mov
add
add
mov
icebp
not
mov
in
loop
fsub
leave
call
call
popf
dec
jmp
mov
incl
cmp
call
fdivrp
ljmp
cmp
lcall
pushf
dec
lcall
jno
jecxz
into
jmp
iret
push
out
call
mov
in
mov
add
add
stos
xchg
hlt
aad
ljmp
push
stos
call
dec
jmp
xchg
call
fwait
cmp
jmp
jmp
in
jmp
in
push
out
push
out
aas
mov
mov
and
dec
jmp
outsb
jmp
loop
jmp
push
dec
mov
pop
cmp
add
add
cltd
je
out
iret
mov
std
jecxz
call
sar
pop
lods
imul
xor
lahf
pushl
nop
pushl
in
out
push
in
out
ljmp
push
jmp
push
jmp
pushl
mov
nop
aas
xchg
jmp
pushf
dec
ljmp
jne
cmc
out
call
fdivr
ljmp
mov
test
rclb
clc
sti
jmp
int
jmp
insb
mov
lcall
mov
pushl
nop
ljmp
mov
xor
repnz
cld
repnz
push
lock
out
lock
repnz
repnz
xor
mov
cmp
cwtl
incl
cltd
lcall
mov
lcall
dec
jge
jg
jmp
jmp
sar
cli
call
cmpsl
repnz
add
add
mov
fadd
in
ljmp
daa
sahf
dec
jmp
mov
pushl
xchg
ljmp
nop
jmp
lds
xor
cli
cld
cli
cld
push
div
push
div
clc
std
clc
std
pushl
mov
mov
and
mov
inc
into
lahf
decl
lahf
lcall
mov
ljmp
push
jmp
jmp
ljmp
iret
movsl
or
mov
fwait
jbe
out
sarb
jmp
aad
int
mov
cmp
lods
pushw
xchg
ljmp
leave
xchg
jmp
lcall
nop
lcall
mov
xor
mov
std
cld
cld
cld
cld
cld
pushl
mov
lcall
nop
jmp
leave
xchg
decl
decl
lahf
call
test
pop
call
aam
jmp
xlat
std
call
mov
xchg
ret
sub
mov
int
jmp
sar
jmp
fcos
bound
push
ljmp
les
jmp
leave
xchg
lcall
leave
xchg
call
enter
ret
pushl
mov
xchg
lcall
enter
into
pushf
call
scas
cmp
nop
call
mov
jae
jmp
jmp
sar
xlat
mov
fld
xchg
insb
and
add
add
sahf
jnp
repnz
cld
std
out
jmp
aad
mov
mov
js
ds
mov
lcall
xchg
lcall
xchg
lcall
lret
xchg
call
xchg
pushl
lds
pushl
mov
xchg
lcall
int3
cwtl
lcall
int3
xchg
lcall
lret
inc
aam
lcall
mov
adc
dec
int3
lods
jmp
xlat
std
jmp
mov
xchg
ret
and
mov
sar
jmp
sar
pop
cmpsl
arpl
sbb
fwait
pushl
shlb
lcall
int3
xchg
lcall
int
lcall
int
call
int
pushl
ret
mov
ljmp
rolb
sbb
lcall
int3
xchg
jmp
into
pushf
decl
scas
incl
sahf
call
test
pushl
outsb
jmp
aad
jmp
clc
in
call
mov
fld
xchg
insl
sbb
add
add
mov
ret
jmp
mov
mov
cmp
aam
jmp
int3
cwtl
lcall
into
lcall
rcrb
pushl
lds
ljmp
mov
adc
pushf
call
rcrl
call
iret
popf
call
cltd
pushl
shll
adc
mov
test
jmp
fcos
ljmp
imul
add
add
xchg
outsb
add
sti
in
in
jmp
sar
cmpsw
lcall
stos
popa
incl
mov
lcall
iret
pushf
call
iret
fwait
call
rcrb
call
rcrl
ljmp
nop
decl
rcrb
call
shlb
lcall
stos
pushl
int
lcall
test
pushl
outsb
jmp
in
mul
iret
std
shrb
add
enter
ljmp
in
fcmove
lods
pushl
dec
lcall
mov
mov
sub
mov
call
rcrl
call
mov
decl
aam
ljmp
xchg
ljmp
enter
aad
call
aam
call
aam
call
aam
call
mov
jmp
cmpsb
cmp
stos
call
mov
incl
push
jmp
iret
mov
out
fdivrp
cld
jmp
test
das
shrb
sar
in
std
jecxz
call
cmpsb
pop
pushl
int3
cltd
incl
mov
pop
shll
call
mov
call
aad
call
cmpsb
decl
movsl
ljmp
xchg
jmp
lret
or
cmpsl
call
xlat
test
adc
cmpsl
call
cmpsb
call
aad
call
aam
lcall
aam
ljmp
stos
lcall
mov
sub
xchg
jmp
xlat
out
repz
test
test
add
add
mov
fcos
push
loope
std
fadd
call
pop
call
mov
decl
mov
sub
test
call
aam
call
aad
call
cmpsb
call
fsubrs
incl
fsubrs
jmp
lret
xchg
incl
fldcw
decl
fldcw
call
xlat
test
adc
cmpsb
call
aam
lcall
test
shlb
jmp
popa
fmul
push
jecxz
stc
out
call
mov
rolb
add
add
mov
mov
push
loope
fcmovnb
cmpsb
jmp
fwait
dec
call
mov
mov
pop
aad
decl
shll
decl
cmpsb
decl
xlat
cmpsl
decl
fisubrl
incl
fisubrl
jmp
lret
xchg
incl
fldt
pop
fldt
or
test
decl
movsl
call
xlat
movsl
lcall
cmpsb
decl
mov
dec
jmp
lret
push
in
cld
jmp
jmp
lods
ljmp
add
shrl
sar
push
loope
cld
out
ljmp
stos
popa
ljmp
into
pushf
incl
mov
fsubrs
lcall
fldcw
lcall
cmpsb
lcall
xlat
cmpsl
lcall
xlat
test
pushl
ret
mov
sbb
jmp
jmp
jecxz
pushl
mov
call
fnsave
lcall
fdivl
lcall
lcall
fldcw
lcall
leave
xchg
cmp
mov
jmp
out
loop
icebp
fcmovne
icebp
shrl
add
fnstsw
cld
push
in
repz
lcall
test
cwtl
jmp
sahf
jmp
lret
cwtl
jmp
lret
daa
lret
daa
lret
daa
lret
daa
lret
daa
lret
sub
mov
sub
xchg
incl
cltd
ljmp
int3
lcall
lret
cwtl
jmp
lret
cwtl
decl
xchg
jmp
lret
cwtl
jmp
shlb
jmp
shlb
jmp
shlb
jmp
shlb
jmp
xchg
jmp
xchg
pushl
test
lcall
repz
mul
xlat
stc
fdivs
add
mov
mov
std
lock
push
out
in
int
mov
std
std
cli
sti
out
repnz
mov
shll
cli
in
fidivrs
jg
shrb
std
icebp
in
push
in
fidivrl
lret
cld
std
idiv
pushl
mov
stos
stc
lock
cld
icebp
jecxz
out
mov
iret
cmpsl
xchg
mov
pop
cmc
out
sti
push
out
std
icebp
in
mov
jge
jecxz
fdivrp
jmp
div
call
lret
daa
popf
dec
fidivrl
ljmp
fcmovne
out
aad
xchg
pop
xlat
mov
mov
out
loopne
push
ljmp
scas
cmp
inc
hlt
call
decl
fldcw
ljmp
cmpsb
pop
pushl
ljmp
mul
hlt
fstpt
add
shrb
out
clc
in
push
fmulp
jmp
in
hlt
call
loopne
incl
fldcw
decl
rcrb
call
in
stc
out
push
in
loopne
aam
movsl
mov
aam
lahf
int
imul
stc
lock
aad
incl
cmp
int
decl
movsl
decl
cmpsb
decl
cmpsl
decl
test
decl
stos
decl
lods
decl
lods
decl
lods
incl
lods
decl
xchg
stc
std
mov
out
incl
fldt
decl
loope
decl
mov
push
aad
jmp
mov
call
fcmove
sti
repnz
out
loopne
aam
mov
add
shrb
sti
icebp
push
aad
incl
lods
decl
iret
cltd
decl
incl
fbstp
incl
loope
incl
loope
incl
loope
incl
loop
incl
loop
incl
loop
lcall
shll
fdivr
repz
mov
incl
mov
incl
loope
decl
rcrl
call
fcmovb
std
cmc
cli
hlt
call
in
out
mov
sti
repnz
fadd
jmp
movsl
push
call
ret
test
sbb
scas
call
loopne
decl
loop
incl
jecxz
incl
mov
incl
mov
incl
in
incl
jecxz
jmp
shrl
out
cld
cli
pushl
in
incl
fnsave
add
mov
decl
in
call
in
lcall
fsubrl
jmp
mov
lret
std
cmc
cli
cmc
jmp
in
mov
jmp
clc
repnz
sti
repz
in
fildll
dec
lcall
popa
call
xchg
adc
mov
decl
mov
or
mov
incl
sar
in
incl
in
incl
in
jmp
shrl
cld
call
stc
repz
fcos
pop
loopne
incl
loopne
incl
in
lcall
call
leave
ljmp
out
ljmp
loop
jmp
stos
lcall
lds
jmp
push
jmp
mov
stc
lock
cld
idiv
sti
div
jmp
aam
incl
add
add
lds
sti
idiv
sti
out
fcmovb
call
scas
xchg
jp
pusha
mov
push
call
leave
nop
call
aad
decl
fidivs
incl
in
incl
in
incl
in
jmp
aam
call
hlt
call
incl
loopne
incl
out
jmp
ljmp
pop
ljmp
pop
aam
incl
test
lods
push
cmp
pop
incl
mov
push
std
sti
idiv
sti
div
scas
hlt
aam
sahf
sahf
clc
repz
cld
idiv
push
out
push
int
fbstp
decl
pusha
ljmp
scas
push
sbb
shll
decl
in
incl
out
jmp
aad
stc
std
dec
clc
repnz
xlat
incl
loop
incl
jecxz
call
call
sar
jno
aad
mov
enter
xchg
ljmp
scas
imul
mov
jmp
mov
push
iret
mov
cld
clc
cld
clc
push
call
mov
add
mov
scas
fdivr
repz
cld
cli
push
jmp
not
push
mov
mov
mov
insb
lcall
rorl
or
lods
jmp
cld
stc
lcall
in
incl
loop
incl
out
call
call
into
call
mov
jmp
mov
jp
idivb
push
out
cld
cli
std
sti
clc
push
icebp
in
fcmovnb
lods
leave
iret
test
add
shll
scas
repnz
fdivr
cmc
lock
clc
std
cli
cld
out
call
dec
movsl
jns
jp
ljmp
mov
call
xchg
ljmp
repz
push
in
fdivr
add
ret
in
incl
out
call
out
ljmp
loope
lcall
int
jmp
mov
incl
movsl
jnp
hlt
les
cld
cli
cld
cli
idiv
sti
div
cmc
clc
repz
mov
xchg
and
add
add
movsb
xchg
push
aam
mov
xchg
in
mov
repz
in
stc
cmc
cmc
std
sti
cli
std
sti
repz
out
mov
mov
stos
outsb
call
roll
add
out
incl
out
decl
pop
test
inc
fwait
imul
mov
repnz
std
std
cli
clc
sti
div
hlt
repnz
jecxz
lds
mov
mov
push
shrl
add
rcrb
in
int3
rcl
repz
push
jecxz
jmp
mov
mov
pmaxub
decl
mov
sbb
mov
mov
jnp
repz
std
cld
cli
stc
push
out
out
ljmp
test
mov
add
les
mov
clc
repnz
std
cld
cld
div
in
mov
jl
push
sbb
shlb
lcall
rorb
out
mov
stc
std
cld
sti
hlt
call
scas
lret
cmpsb
xchg
pop
ret
movsb
lea
leave
mov
cli
div
clc
std
jmp
fwait
popa
decl
outsl
decl
lcall
ret
test
std
std
clc
repz
cmpsb
mov
add
add
popf
xchg
stos
xchg
xchg
repnz
jmp
cld
sti
std
jmp
shlb
rcll
mov
cld
sti
cli
cld
out
into
loopne
stos
xchg
jb
movsl
mov
lret
scas
cltd
cmp
lds
sti
cli
div
stc
in
scas
mov
lds
mov
std
sti
clc
hlt
cld
call
add
add
mov
sbb
int
mov
cld
stc
idiv
jmp
mov
lret
scas
xchg
push
in
mov
cmpsl
repnz
push
iret
call
mov
adc
add
add
push
ud0
add
jmp
pop
incl
add
inc
add
incl
add
incl
add
incb
add
add
cld
add
aas
incl
add
clc
add
aas
incl
add
lock
ud0
add
lock
ud0
add
loopne
add
incl
add
rolb
add
add
incl
add
incl
add
incl
add
add
add
incl
add
add
add
incb
add
add
add
add
add
jg
add
add
add
aas
add
cld
add
add
aas
add
clc
add
add
aas
add
clc
add
add
pop
add
clc
add
add
pop
add
clc
add
add
pop
add
lock
add
sldt
lock
add
sldt
lock
add
sldt
loopne
add
add
add
loopne
add
add
add
loopne
add
add
add
loopne
add
add
add
loopne
add
add
add
loopne
add
add
add
loopne
add
add
add
loopne
add
add
add
loopne
add
add
add
loopne
add
add
add
loopne
add
add
add
loopne
add
add
add
lock
add
sldt
cld
add
add
aas
add
inc
add
add
add
clc
add
pop
incl
add
incb
add
add
incl
add
incl
add
inc
add
incl
add
jmp
ud0
add
push
ud0
add
clc
pop
incl
add
and
fdivr
add
lahf
add
add
push
pop
cmp
inc
stos
mov
sbb
testb
cld
dec
fsubl
and
and
adc
add
mov
out
inc
and
mov
pop
aam
and
xchg
out
mov
es
lock
or
sbb
mov
int3
and
ss
cli
roll
inc
and
add
jb
outsb
xor
and
push
out
mov
shrb
add
or
inc
aam
mov
adc
pop
sbb
push
dec
add
arpl
je
and
orl
lods
jb
cmp
movsb
sbb
mov
and
nop
in
jb
or
and
and
js
mov
cmp
insb
sbb
and
pusha
xchg
pop
enter
jb
les
push
sbb
push
dec
jle
or
and
xchg
int3
inc
add
cmp
cld
cmp
sbb
shlb
and
test
add
xor
mov
les
push
call
or
inc
shrb
je
add
mov
pop
sbb
mov
add
sti
pop
lods
or
cmp
xor
xor
mov
js
and
nop
add
push
push
mov
adc
push
int3
push
call
add
add
lret
add
mov
sub
mov
lsl
lea
mov
sbb
inc
cmp
jne
push
stc
jecxz
adc
cmp
arpl
push
inc
add
sbb
fadds
call
test
dec
add
mov
mov
test
or
ficoms
repz
add
push
add
push
lahf
mov
push
push
adc
add
push
push
clc
aas
mov
icebp
popf
adc
inc
call
xchg
add
push
pop
mov
sti
inc
pop
mov
or
push
jne
and
call
daa
inc
xchg
inc
mov
in
add
jmp
in
rorl
add
pop
sbb
hlt
jmp
jl
jle
sbb
call
add
sub
add
je
loopne
mov
add
pop
mov
insb
ror
add
mov
fcomps
int
pop
and
sbb
into
mov
add
stos
cmp
inc
gs
jmp
xchg
cmp
add
add
dec
xor
iret
inc
incb
sub
jmp
fldcw
test
mov
and
jne
add
iret
xchg
adc
shlb
addb
or
xchg
inc
sbb
pop
xchg
sub
mov
mov
add
cmp
sbb
pop
mov
cmp
adc
out
or
mov
add
cmp
push
push
dec
shl
clc
add
je
mov
mov
lods
fs
adc
mov
mov
or
dec
push
clc
stos
fs
and
mov
popa
sbb
pop
or
push
push
mov
jne
pop
jns
mov
cmp
ja
test
insb
in
hlt
dec
test
adc
or
add
add
pop
push
fs
lock
sub
in
add
jmp
and
push
jae
push
add
ja
dec
movb
fdivrs
in
je
inc
xchg
add
fisubrs
jne
xchg
add
xchg
or
add
sbb
adc
and
jp
int3
pusha
add
cld
xor
or
sbb
cmp
add
fsubs
adc
add
xchg
lods
sub
hlt
mov
sbb
xchg
addl
mov
fldl
and
loope
sub
xchg
dec
hlt
sub
inc
je
add
pop
cwtl
jle
add
dec
sti
nop
pop
jbe
sbb
cli
mov
loopne
add
adc
add
fsts
push
and
rorl
add
adc
bound
cltd
mov
or
xchg
ret
add
mov
repz
out
xor
adc
add
push
aas
adc
or
sub
cmovno
sbb
and
in
push
js
pxor
cmpl
inc
add
sub
dec
inc
je
pop
mov
call
out
loopne
int3
cmc
pop
aam
pop
add
movhps
pop
dec
aam
inc
add
pop
add
push
push
dec
pop
sbb
sub
pop
add
stos
add
and
das
and
int3
mov
add
pop
movsl
pop
and
add
call
fwait
or
push
add
cltd
pop
sub
ds
cli
aas
sub
bound
sbb
scas
add
loopne
lea
lret
pushf
cwtl
push
call
add
xor
leave
test
jne
mov
out
push
mov
insl
rolb
jmp
dec
bound
xor
jne
dec
ret
add
dec
lret
sbb
jne
cmp
dec
xchg
adc
jp
and
add
adc
inc
add
stos
or
adc
mov
push
lds
mov
jl
lea
dec
add
push
add
aam
or
add
fidivs
hlt
iret
xorl
add
and
mov
and
mov
or
mov
dec
add
adc
lock
sbb
notb
repnz
cmp
cmp
add
jmp
jp
push
mov
in
rcrb
dec
pushl
cmp
xor
popa
pop
leave
xor
pop
repz
jle
lock
sub
sahf
scas
roll
push
add
mov
arpl
adc
leave
mov
add
cmp
inc
mov
mov
movb
pop
pop
repnz
xchg
sub
ret
jmp
in
add
les
push
dec
iret
xchg
add
dec
sar
inc
sbb
xchg
enter
shl
xchg
push
add
lcall
je
add
mov
mov
add
aas
add
adc
add
test
jmp
xor
sbb
add
loope
pop
inc
loopne
cmp
pushf
adcl
dec
or
stc
jb
loopne
cmp
subb
leave
push
jns
add
add
imul
jmp
movsl
pop
add
fisubl
lock
mov
sbbb
add
popf
mov
add
jb
or
addr16
push
loope
cmp
call
add
scas
les
clc
xchg
cmp
loopne
add
jl
movl
mov
add
mov
add
inc
or
add
popa
or
incl
rcrb
sub
stos
loop
cld
cwtl
in
jg
add
adc
and
outsb
or
push
add
repnz
and
mov
ret
and
adc
dec
xor
or
inc
inc
push
je
pusha
in
add
jg
or
add
sub
add
ret
loop
into
mov
sbb
add
addl
sub
cmp
add
mov
mov
push
pusha
add
add
mov
xchg
fs
fnstcw
fdivs
mov
or
mov
sti
fadds
and
add
adc
repz
pop
xor
inc
or
push
pop
andl
movsb
mov
mov
clc
dec
inc
mov
dec
xchg
fsub
je
adc
repz
jns
iret
fs
scas
lds
push
xchg
imul
loopne
sbb
push
aaa
jmp
add
out
mov
jg
sub
daa
in
xchg
add
outsl
shll
ja
cmp
mov
lea
shr
aas
imul
xabort
mov
add
into
dec
xchg
xor
jae
cmp
sub
call
or
aaa
mov
shlb
add
nop
hlt
lcall
inc
pop
rcrl
pop
xchg
inc
adc
add
pop
fs
add
jl
mov
pusha
lahf
or
dec
add
mov
mov
cs
mov
sbbb
test
in
andl
adc
jmp
mov
add
adc
add
dec
sbb
loop
pop
es
imul
in
sbb
stc
or
rorl
inc
mov
andb
push
shll
call
mov
inc
add
lock
add
aam
and
aas
dec
movb
sbb
xlat
xor
adc
pop
lea
outsl
pusha
call
aam
adc
pop
add
adc
xchg
int3
leave
hlt
testl
pushf
xor
add
mov
jmp
sbb
add
inc
mov
mov
dec
lea
push
push
stos
adc
dec
pusha
popa
sar
and
clc
add
push
add
nop
stos
call
cwtl
pop
ljmp
push
cmpb
loope
and
add
sub
pop
mov
or
nop
xlat
lret
mov
pop
pop
sti
add
je
fbld
push
es
xchg
fmuls
dec
sbb
mov
jmp
dec
rdtsc
movsb
sub
and
mov
adc
andb
fsts
mov
add
mov
dec
mov
cwtl
mov
lret
cmp
roll
cs
xchg
dec
gs
adcb
orl
pop
lods
mov
dec
cld
pop
xchg
pusha
leave
sub
push
mov
pop
sub
push
add
nop
cltd
cld
add
pop
add
sbb
push
add
and
xor
adc
mov
faddl
aas
push
sti
addb
ljmp
xchg
leave
int
and
jns
or
movb
cmpsl
inc
inc
adcb
jne
add
nop
or
mov
pusha
sahf
and
inc
cmp
in
xor
test
push
add
or
push
push
shr
xchg
add
and
inc
sbb
lds
xor
cmp
and
or
jg
sub
lods
push
push
or
cmp
es
and
sbb
cmc
xor
lcall
xchg
and
add
int3
pop
fs
add
cli
inc
sub
and
data16
jb
mov
adc
cmpsb
and
outsl
pop
adc
jne
sbb
add
or
test
jns
add
mov
or
push
add
pop
je
mov
mov
pushf
push
or
add
dec
push
int3
aas
enter
or
inc
pop
sbb
and
cmpsb
xchg
push
add
loop
clc
cmp
jne
popa
jno
push
xorb
sbb
xchg
or
add
add
mov
testb
add
inc
test
add
add
and
add
orl
add
js
push
cld
rcrl
push
adc
or
icebp
adc
mov
roll
mov
and
cmpsb
fsubrs
add
movsl
xlat
adcb
in
out
decb
inc
jo
push
add
xlat
pop
mov
mov
add
nop
enter
add
mov
add
mov
pop
cmp
add
sub
add
data16
jge
jmp
cmp
mov
bound
or
testb
add
test
aam
cmp
movsb
clc
pop
sbb
pop
pop
decb
cmc
aam
xchg
cmp
rorb
test
test
addr16
lahf
jno
jl
cmp
subb
mull
lret
jb
add
xor
add
xor
sbb
sbb
or
mov
xlat
pop
sbb
add
inc
lret
fisttps
mov
xchg
js
ret
add
in
pop
cmp
jge
push
lods
cmpl
bound
in
sub
sahf
movsb
xchg
pop
and
leave
add
inc
or
sarl
cmp
add
sub
fcoml
mov
nop
or
fdivrs
adc
pop
and
je
ja
jmp
dec
jmp
lods
cmpsl
add
mov
jbe
cld
loope
adc
add
adcl
add
rolb
add
insb
sbb
orl
in
dec
sbb
pop
clc
adc
mov
xchg
call
pop
verr
mov
jo
and
cmp
add
and
xchg
xlat
adc
add
test
fmull
sbb
inc
jne
add
leave
je
push
sbb
mov
inc
and
sbb
cmpsl
popa
stc
call
lods
push
add
sbb
xlat
cltd
xor
out
hlt
cwtl
loopne
lock
scas
add
rorl
adc
add
add
repz
pop
mov
mov
jmp
lret
or
in
into
cmp
fadds
lret
add
cmp
jecxz
in
inc
add
push
push
mov
adc
adc
rcrb
popl
inc
setae
sbb
nop
push
push
enter
lret
jge
pusha
xlat
add
cmp
ja
and
sub
rep
jmp
aas
and
add
xor
les
cld
add
jl
jmp
aas
dec
sbb
mov
cmpsb
inc
or
add
in
add
push
adc
add
mov
add
aas
cmpb
cmc
or
jne
add
or
add
ret
add
jmp
rcrl
sti
cli
add
sbb
inc
add
inc
mov
test
and
sbb
dec
or
push
bound
add
sub
pop
into
xor
test
adc
mov
clc
or
rolb
je
lea
js
add
mov
sub
cmp
add
push
jmp
xor
inc
cmp
or
in
mov
jmp
arpl
loopne
scas
call
enter
add
mov
add
imul
jbe
pop
mov
jns
mov
add
add
call
sbb
testb
add
pop
in
add
sub
filds
mov
fwait
pop
pop
jge
jl
or
outsb
fstps
add
jo
sub
push
sub
pop
sbb
add
push
sbb
or
cwtl
nop
pusha
movl
fisubl
inc
adc
add
sha1nexte
out
roll
mov
add
adc
fiadds
neg
lret
add
mov
add
bound
add
fwait
loopne
inc
cmpsb
stos
daa
and
push
add
in
out
add
je
ret
jae
add
jne
dec
in
adc
std
pop
out
sbb
adc
testl
and
jmp
add
push
add
pop
lahf
add
je
mov
or
or
xor
xchg
dec
add
dec
lahf
mov
pop
push
inc
or
addl
repz
mov
cmp
fs
push
add
loopne
data16
or
dec
xor
or
jbe
add
dec
xchg
add
or
inc
add
mov
xchg
add
adc
xor
iret
orb
in
pushf
pop
add
icebp
xchg
add
xor
pop
out
mov
movb
orb
dec
add
dec
rclb
fnstenv
jp
xor
inc
sbb
and
dec
cwtl
jne
leave
push
adc
xor
jmp
repz
leave
ljmp
mov
push
add
je
mov
cmp
add
loop
add
and
js
popa
pop
pop
hlt
add
mov
sub
dec
test
add
or
add
mov
mov
add
jb
insb
fcoms
jne
push
out
int
add
jl
add
mov
and
js
movd
js
sub
fidivs
push
xchg
add
xor
ret
andb
sub
jbe
adc
addb
ret
or
add
pop
aad
jmp
cli
push
add
hlt
in
je
pop
add
sub
leave
jne
cmp
pop
jns
add
push
cli
add
rolb
push
inc
xor
fsubr
add
test
pop
sbb
push
cld
and
dec
mov
dec
mov
sbb
setg
pop
pop
loope
jo
jl
mov
push
dec
rolb
or
rolb
cmpsb
add
mov
and
xor
mov
and
jne
loop
add
xchg
add
mov
and
roll
mov
popa
mov
hlt
pop
push
push
inc
and
dec
clc
jae
ss
push
push
das
push
je
add
call
dec
sub
xor
xor
add
mov
in
push
or
mov
enter
lcall
sub
inc
adcb
sub
mov
sub
add
loop
ret
add
ret
pop
sub
dec
inc
push
push
inc
add
pop
inc
add
insb
popa
cmp
pusha
cmp
gs
jo
imul
rolb
push
dec
popa
jae
imul
jne
xchg
imul
rcll
pop
lods
add
xor
mov
and
sbb
add
inc
adc
jmp
je
mov
cmp
jbe
xchg
add
adc
mov
cs
rcrb
divb
mov
enter
lea
or
gs
cmp
cwtl
dec
add
add
ds
mov
inc
stc
inc
out
sbb
push
pop
add
mov
call
add
or
add
rolb
jp
inc
xorb
add
lock
rcrl
pop
addr16
sbb
in
cmp
call
rolb
fs
sbb
ret
jecxz
loop
rolb
dec
jne
je
pop
and
add
adc
push
and
movsb
daa
add
ret
mov
les
push
push
xchg
movsl
push
cltd
or
add
repnz
add
jg
shlb
enter
cld
jns
xchg
mov
adc
cmp
add
inc
sbb
add
inc
nop
pop
rolb
xchg
shr
ljmp
fstps
sahf
inc
lahf
add
test
push
push
add
mulb
loope
hlt
add
je
adc
add
in
pop
or
or
mov
mov
pop
add
pop
lock
inc
add
push
sub
or
je
setb
add
xor
pop
and
or
mov
call
cmp
in
jp
lret
aam
cli
add
jne
sbbb
add
add
adc
add
in
push
mov
int3
dec
sbb
fistl
add
bound
nop
cmp
mov
shll
loopne
adc
xorb
stc
jmp
pop
fs
add
daa
movsl
cwtl
leave
mov
addb
jmp
jmp
movsbl
jecxz
push
ret
add
push
add
imul
loope
pop
push
loop
adcb
hlt
mov
jbe
lds
bound
xorb
inc
imul
into
lock
cmp
inc
cmpl
add
cwtl
dec
adc
add
sbbl
push
or
mov
lock
push
dec
call
mov
loope
shlb
out
add
je
pop
stos
movsl
and
jb
add
sub
iret
ja
mov
insl
push
mov
cmp
and
xor
sub
xor
add
or
sti
mov
test
push
cmp
sub
incb
out
pop
cmp
loopne
dec
add
add
fnclex
add
sbb
out
sbb
push
add
aas
das
adc
or
add
mov
inc
and
mov
add
push
or
pop
add
shlb
push
add
stc
or
mov
jecxz
lcall
or
sbb
addl
pusha
lods
insl
movsb
add
inc
outsb
les
add
and
mov
shlb
jmp
sahf
enter
sub
je
dec
clc
addl
pop
add
push
xor
inc
lock
mov
add
je
clc
inc
cwtl
add
fcoms
cmp
add
add
adc
dec
das
or
je
jg
add
imul
movb
dec
xchg
rclb
cltd
adc
mov
adc
jmp
push
pop
xchg
mov
adc
pushf
das
mov
mov
push
adcl
mov
xor
and
mov
repz
call
arpl
ljmp
mov
andb
add
dec
xor
cld
push
push
or
and
mov
add
pop
push
push
push
or
enter
stos
adc
mov
add
mov
adcl
or
mov
pusha
add
std
lock
add
inc
mov
xchg
push
addr16
adc
inc
push
adc
add
sub
cmp
dec
push
cmp
scas
fs
xor
mov
jo
pop
cs
daa
mov
loop
and
add
xor
mov
add
xchg
mov
das
add
pop
xor
cmp
aas
jg
add
mov
push
sub
mov
add
jecxz
dec
rorb
pusha
jle
add
inc
aas
sub
xchg
mov
push
sub
cmp
cs
popa
adc
and
jmp
std
inc
inc
comiss
push
mov
es
sub
enter
leave
push
mov
and
iret
xor
sbb
xlat
xchg
push
mov
fcom
push
jecxz
repz
f2xm1
push
loop
add
or
and
push
or
call
sub
mov
or
xchg
repz
lock
es
add
pop
cmp
push
add
and
std
xor
pop
roll
mov
clc
popl
inc
add
je
out
pop
sti
roll
mov
jbe
ss
sbb
inc
leave
cli
inc
imul
bound
sub
nop
xchg
mov
push
adc
cmp
pusha
add
push
inc
stos
or
and
mov
mov
mov
or
test
enter
or
or
hlt
dec
add
add
and
dec
pop
pushf
xchg
scas
pusha
ds
je
add
push
or
jo
mov
add
out
xchg
xor
test
cmp
cmpb
call
addr16
ds
mov
movsb
sar
add
dec
xchg
xor
loopne
inc
pop
or
sub
orb
sbb
add
filds
daa
bound
shrl
in
xchg
pusha
push
adc
lea
mov
rep
popl
or
test
mov
or
inc
movsb
adc
add
ljmp
add
nop
mov
icebp
cld
call
inc
or
inc
mov
pop
mov
xor
add
add
add
adc
jne
or
add
call
ss
ret
and
testl
aaa
inc
inc
sbb
aas
push
push
push
mov
cmc
dec
out
adc
add
dec
dec
test
enter
add
adc
mov
call
mov
lcall
adc
or
repnz
cmp
push
mov
pop
add
pop
jo
add
fwait
push
pop
add
push
shr
lcall
leave
sbb
mov
add
push
and
add
dec
ds
push
cwtl
pop
push
add
sbb
inc
add
adc
mov
mov
or
cmpb
ljmp
fiaddl
add
lock
add
and
cmp
aaa
and
push
push
add
sub
add
mov
sub
pop
or
daa
jne
test
dec
adc
sbb
call
fsubs
sbb
add
mov
cmp
leave
push
cmpb
sysret
mov
shr
bound
je
sarl
push
cld
xor
push
sub
or
shlb
add
lret
pop
mov
mov
faddp
sub
push
outsl
sbb
add
and
add
out
shll
sti
rorb
add
add
mov
mov
lods
test
fistpl
inc
adc
cs
ret
sub
jl
lock
push
add
pop
push
lea
call
imul
pusha
sbb
mov
adc
movl
or
sub
mov
and
inc
jg
add
mov
add
scas
sbb
lock
pop
testb
xchg
mov
outsb
xchg
lret
and
adc
cmp
jo
sbb
jne
pop
dec
or
add
pop
or
xchg
cld
hlt
outsl
add
push
clc
inc
movsl
mov
subl
incb
mov
jp
add
xchg
pop
in
xor
or
cmp
xchg
icebp
flds
repnz
add
and
push
add
jge
fs
sbb
sub
push
add
jnp
xchg
or
into
cmp
xor
xor
in
mov
cmp
lds
loope
pop
add
xorb
mov
mov
pop
pop
push
and
xchg
or
in
das
adc
inc
sbb
pop
add
or
add
pop
jo
add
call
sbb
add
in
adc
gs
inc
xor
bound
and
xor
or
sub
sbbl
jmp
and
dec
mov
cmp
sti
and
in
nop
aas
cmp
xchg
dec
add
cmp
and
repnz
scas
pusha
add
rcrl
add
lcall
add
in
xor
add
ja
jnp
leave
xor
orb
mov
mov
jle
pusha
adc
push
cmp
add
call
inc
add
dec
lcall
movsb
cmc
stos
pop
testl
scas
je
mov
cmp
icebp
pop
rorl
inc
mov
sar
add
push
sub
push
jp
cmp
into
ja
imul
jne
and
add
mov
iret
lret
arpl
pop
and
push
pop
aas
jae
dec
clc
ljmp
jmp
add
push
push
push
aam
in
add
dec
xchg
adc
dec
jno
pop
inc
cld
dec
adc
xor
mov
adc
add
push
aam
fadds
into
inc
add
jmp
add
lods
dec
adc
pop
lea
and
hlt
loopne
fs
or
lret
cmpsb
jg
xchg
push
scas
jae
push
test
add
push
rorl
dec
push
add
and
or
add
movb
lcall
ret
add
andl
add
pop
fdivs
cmp
jg
add
pushf
mov
push
push
shlb
sub
stos
popa
jecxz
lret
pop
adc
bound
sub
lods
nop
movsl
add
add
inc
les
inc
xchg
adc
fildl
ja
sub
xchg
lldt
idivb
adc
nop
add
push
lds
int3
pop
pop
scas
add
clc
mov
and
sbb
dec
pop
jl
cmp
jge
add
rcll
sahf
add
push
hlt
leave
xchg
arpl
rorb
in
push
push
mov
cltd
pop
aad
mov
mov
push
sub
adc
rolb
addb
jle
sub
jbe
sbb
add
stc
add
lea
sub
jg
add
push
lock
cwtl
add
fildll
xchg
add
pushf
mov
add
mov
inc
pop
xor
jle
adc
or
cmp
repz
lds
or
inc
mov
pop
xchg
push
or
xlat
inc
cmp
jle
jno
add
dec
fwait
dec
cld
xor
mov
pop
add
dec
add
or
loopne
or
cmp
and
cld
scas
adc
fdivl
or
xchg
add
xor
cmp
push
cmp
mov
out
dec
add
xchg
pop
sub
test
push
lret
fildl
dec
enter
repz
jo
add
ficompl
ret
inc
rolb
inc
lea
sub
sub
adc
inc
sbb
sub
cmpb
pushl
lods
loopne
cmp
push
scas
push
pop
xchg
sbb
add
loopne
dec
pop
inc
xor
je
dec
xchg
mov
adc
leave
jmp
sub
lret
push
arpl
add
lock
fsts
int
cmp
add
push
and
mov
xorl
enter
cmpsb
adc
and
jmp
cmp
call
sub
in
and
cs
mov
and
inc
lea
les
push
js
cwtl
popf
ret
out
adc
ljmp
jg
in
sub
enter
sub
xchg
sbb
cmp
je
int3
dec
or
rorb
cmp
adcl
add
xor
jmp
clc
jmp
mov
adc
or
and
sub
aas
xor
adc
push
or
add
pop
in
add
test
shrl
pop
stos
sbb
and
push
lock
adc
sub
adc
add
mov
push
dec
xchg
loop
loope
fwait
mov
inc
bound
jnp
data16
mov
xchg
pop
dec
push
add
mov
or
add
jmp
nop
or
add
push
js
aas
pop
jge
aas
movsb
repz
sub
pop
or
xchg
sti
nop
add
jmp
push
lahf
mov
jae
fidivl
jmp
mov
aas
ljmp
inc
adc
and
add
and
lahf
add
push
and
xor
cld
xchg
cs
subb
inc
jo
and
mov
sub
xchg
cli
subb
sarb
movsl
sbb
mov
movsb
popa
push
pop
dec
cli
sub
aas
or
cmp
xor
and
daa
stos
adcb
rolb
inc
add
sbb
sbb
mov
pop
push
rorl
sub
xor
cs
leave
add
adc
addb
cmp
pop
push
push
cmp
test
inc
gs
enter
add
pop
mov
adc
cli
pop
adc
nop
dec
xchg
fxrstor
in
shr
adc
add
mov
dec
nop
aam
pop
loop
inc
xchg
jne
add
dec
and
in
movsb
call
adc
pusha
mov
movsb
add
cli
xor
adc
mov
add
xor
test
out
pop
test
addb
inc
movsb
lahf
shll
subb
nop
sbb
notl
popa
and
jge
xchg
or
pushf
leave
in
push
add
and
fdivl
add
xchg
xor
inc
sub
add
mov
data16
dec
cltd
add
add
add
ja
xor
add
leave
pop
aaa
xchg
inc
ljmp
loop
add
adc
pop
adc
ret
in
sub
push
adc
movsb
arpl
or
push
inc
in
and
in
add
mov
push
xor
loop
add
loop
xchg
into
mov
fs
add
jne
adc
aam
push
cld
jle
call
sub
call
jno
jl
imul
ljmp
cmp
or
stos
adc
pusha
daa
sar
enter
sub
sub
mov
cwtl
fdivs
dec
mov
inc
add
stos
lock
dec
push
push
xor
inc
fsub
movsb
jno
pop
pop
sbbb
popa
mov
push
js
mov
daa
add
mov
dec
sbb
push
pop
and
aam
adc
mov
lds
clc
jb
out
orl
adc
and
sbb
and
loope
mov
jmp
ret
mov
outsl
dec
add
xchg
add
sbbb
push
push
mov
clc
jg
je
jmp
call
mov
add
pop
aas
pusha
cmp
jae
adc
lods
add
or
fwait
ret
xor
filds
adc
movd
add
push
xchg
in
push
fmuls
and
adc
xor
ret
xchg
nop
add
mov
or
dec
pop
pop
sbb
int3
jnp
and
push
xchg
pop
vrangess
pop
xor
fcoms
lea
add
inc
inc
lcall
push
adc
ror
add
aam
aam
mov
mov
pop
jmp
rolb
mov
mov
dec
stc
and
xchg
push
jno
push
loop
add
dec
dec
cmpsb
dec
jmp
add
iret
movb
xchg
loope
add
lret
adc
push
push
fst
mov
add
in
outsb
add
mov
cmp
pop
clc
cltd
inc
push
or
sbb
jmp
cmpsb
dec
mov
mov
and
push
sub
cli
mov
inc
pushf
and
add
std
sub
sahf
fists
jnp
lock
add
test
outsl
xor
lds
xor
add
push
sbb
out
inc
addb
fldcw
outsl
or
jmp
pop
cmp
add
add
sbb
push
testl
flds
rolb
pop
xchg
pop
lcall
add
add
mov
roll
int3
push
orl
or
push
arpl
and
into
ds
repz
gs
cmp
icebp
shll
movsl
sub
xor
lds
mov
mov
rcll
in
outsl
orl
and
add
pop
mov
addl
pushl
js
addl
mov
ss
lcall
adc
addb
jl
loopne
push
popf
rcrl
pop
push
sbb
add
or
pop
mov
call
sarb
call
push
cld
xchg
lock
add
pop
lea
add
call
add
add
push
jle
push
cmp
lds
xor
rcrb
call
in
fwait
cltd
sar
jbe
or
aas
push
andb
or
orb
mov
loopne
mov
in
xchg
add
sbb
ljmp
scas
dec
push
xlat
cmp
lock
jg
add
in
in
inc
push
add
decl
fdivl
fadds
ficompl
imul
pusha
push
hlt
inc
sbb
dec
cld
popf
xor
lock
push
repnz
in
push
cs
adc
inc
sbb
sbb
or
ret
incb
adc
loope
cmp
xchg
sub
lock
sahf
jle
bound
fiaddl
add
cwtl
push
cmpl
add
cs
adc
pop
xchg
push
and
inc
sub
jle
add
lea
add
push
ret
xlat
incl
and
dec
jne
lret
mov
mov
push
sub
dec
cmp
imul
push
xor
dec
repnz
fisttpll
push
or
cli
add
and
mov
add
andl
mov
dec
rclb
xor
xchg
pop
adc
cwtl
sub
push
imul
inc
enter
pop
sub
add
rorb
movsl
cli
add
or
in
sbb
dec
hlt
pmuludq
rclb
in
icebp
push
jne
or
sbb
pop
sbb
clc
cmp
std
andb
or
inc
or
or
jne
cld
add
ds
xor
loope
pextrw
mov
pop
sbb
jne
pop
out
in
add
lret
sti
popl
add
dec
hlt
adc
xchg
add
jl
je
mov
sbb
cmp
hlt
push
aas
jae
orb
pop
sbb
mov
hlt
mov
call
add
cmp
js
adc
jne
add
add
sub
cmp
add
dec
je
lcall
mov
cld
nop
in
sbbb
repz
lea
pop
loope
push
mov
int3
add
loop
repnz
inc
add
cmp
xchg
add
xor
xor
repz
jge
pop
pop
je
lret
addr16
cli
loop
and
ljmp
dec
add
movb
movsl
inc
xor
aaa
addb
adc
inc
pop
test
decl
sbb
cwtl
mov
outsb
roll
xor
cs
mov
add
inc
cli
je
dec
outsl
outsb
add
popa
mov
add
inc
inc
adc
test
inc
sbb
dec
cmpsl
xchg
jecxz
push
std
fildl
leave
test
loopne
das
add
test
inc
or
cs
adc
je
and
ds
mov
and
call
push
mov
leave
mov
shrb
or
aas
sub
lds
pop
add
and
inc
push
cmp
dec
cmpsb
push
push
xchg
inc
add
inc
mov
push
int3
xchg
repz
nop
fisttpl
sbb
les
mov
add
scas
mov
js
out
jle
add
insl
dec
mov
add
rorb
add
add
adc
pusha
or
insl
inc
mov
dec
scas
pop
push
jne
add
xor
xor
adc
imul
jae
subb
dec
loopne
adcb
je
adc
gs
dec
movsb
sbb
lcall
fdivrs
movsl
add
mov
inc
cli
add
aad
or
mov
dec
test
daa
das
add
or
add
loope
inc
or
and
outsl
jae
lods
cmp
je,pn
add
mov
push
add
in
dec
adc
mov
cmp
push
inc
cld
cmp
sub
add
mov
je
je
add
jne
sub
xchg
mov
cmp
out
sub
ret
fisubl
cld
jae
add
add
add
loop
mov
or
js
pop
fs
in
cmp
pop
shl
lock
sub
decb
fwait
dec
jle
add
mov
cli
push
mov
stos
add
push
cmp
js
jl
aam
das
mov
imul
or
xchg
rcrl
pushf
fadds
xchg
mulps
and
xchg
dec
scas
out
repz
add
jle
sbb
dec
in
scas
add
rclb
add
imul
add
popa
daa
mov
lods
push
and
sbb
pop
xchg
in
mov
inc
or
adc
xor
sub
ud2
dec
fsubs
shrb
pop
cmp
add
mov
jmp
cwtl
add
fs
jmp
sbb
js
inc
add
push
movups
cmpsl
pop
sub
add
and
mov
add
adc
xor
fiaddl
xor
cmp
and
sub
mov
pop
decl
push
ljmp
enter
add
xchg
or
push
cmp
stos
sub
aad
popa
push
lea
add
ss
gs
clc
fsubs
add
add
push
or
lds
add
dec
sbb
adc
or
and
add
mov
pop
push
popa
sbbl
or
je
mov
mov
pop
leave
outsl
imul
jle
test
add
dec
add
xchg
mov
pop
ret
movsb
lock
add
mov
mov
jmp
sti
mov
fisttpl
inc
iret
adc
aam
orb
stos
lret
dec
in
add
sbb
fcomps
and
ljmp
jb
add
loop
orb
decb
int
call
push
and
cmpl
pop
inc
mov
idivl
pop
sub
sbb
test
ljmp
add
sbb
mov
in
push
ds
mov
dec
je
cmp
push
add
aas
imul
rolb
jne
mov
jecxz
sahf
sub
jp
add
adc
inc
xlat
clc
add
rol
xor
push
inc
mov
mov
mov
je
add
ficoms
jbe
pop
movsb
or
mov
push
add
sbb
mov
andl
inc
icebp
lret
add
sarb
add
icebp
inc
add
lds
jo
add
adc
lret
adcb
pop
or
fwait
sbb
stos
add
sbb
dec
or
xor
into
mov
aam
inc
test
pop
pop
ret
or
or
ret
pop
pusha
je
shl
sub
cmp
jne
jns
daa
add
push
xchg
pop
lock
sbb
nop
mov
add
add
call
add
sbb
push
fwait
dec
imul
data16
icebp
mov
mov
mov
mov
and
inc
enterw
cs
ds
push
mov
xchg
inc
or
add
inc
sbb
xor
push
pop
jmp
add
add
and
push
daa
sub
push
mov
pop
sub
pop
dec
mov
mov
ja
mov
mov
cmp
mov
addb
push
mov
xchg
add
or
cmpl
mov
push
sub
sub
jle
mov
adc
pop
and
std
pop
pop
dec
sbb
mov
add
jmp
fistpl
add
or
sbb
add
out
add
pop
add
daa
inc
pop
loop
lret
push
pop
adc
aam
mov
dec
add
cmpsb
pop
ss
push
jp
push
mov
stos
add
subl
scas
not
add
sbb
mov
xchg
add
xlat
inc
aaa
add
jl
je
inc
cmp
lea
jle
popf
loop
add
clc
xchg
fldt
push
in
dec
sbb
fmulp
shr
mov
rdtsc
xorb
jg
jo
and
add
fmuls
jge
add
add
xor
xchg
push
packuswb
sar
sub
fldz
cmc
ret
andb
aas
test
jp
push
adc
or
loopne
or
push
ret
sub
sbb
add
adc
adcb
mov
sub
sbb
stc
out
and
add
and
adc
mov
xchg
rcrb
and
sub
or
test
add
xor
mov
jl
aaa
cli
jbe
cmp
cmp
xchg
add
sub
add
jmp
lods
jo
add
adc
fdivs
add
xchg
add
aas
push
push
add
int3
pop
into
sbb
rorl
mov
add
pop
jp
pop
add
movsl
sbb
loopne
palignr
loopne
lret
into
pop
ret
or
cmp
or
mov
add
sbb
leave
repnz
bound
adcl
outsl
sbb
jp
aas
add
lds
aad
iret
decl
pop
js
mov
mov
cmp
inc
loopne
jmp
dec
mov
or
out
sub
inc
imul
add
cmp
shlb
cmp
call
pop
mov
popf
sti
add
jle
push
add
das
push
pop
sbb
add
sarb
aas
pop
repnz
test
nop
pop
fildl
daa
movsb
lahf
push
rclb
stos
clc
add
scas
adc
in
pop
pushf
push
mov
jmp
fs
aam
repz
xchg
bswap
shll
cmpsl
pop
faddl
fdivrs
mov
xchg
push
add
jecxz
outsb
or
add
addl
xchg
add
xor
in
sbb
cmp
sahf
add
add
rolb
movsl
mov
popa
sti
in
popf
and
stc
repz
mov
add
subb
and
pusha
les
cld
add
adc
add
stos
xchg
mov
lahf
dec
in
adc
adc
add
or
add
ljmp
ret
and
push
add
mov
jge
pop
jo
add
sbb
leave
jne
cmp
xchg
inc
pop
adc
cmp
or
dec
add
add
sub
inc
jecxz
mov
dec
dec
add
not
loopne
xchg
shlb
std
add
jb
ja
into
xrelease
rolb
add
test
add
in
movsb
xor
shr
push
pop
push
mov
xor
or
pushl
add
or
addl
pop
add
ret
pushl
mov
sti
mov
shrb
adc
test
push
jb
cmp
in
add
enter
cmp
loop
add
mov
sub
repnz
clc
dec
add
or
mov
push
and
or
stc
and
jl
icebp
shll
lods
sbb
mov
subl
movsl
cwtl
sub
mov
rolb
sar
mov
cmp
arpl
lods
dec
cmp
xchg
mov
inc
call
ljmp
cli
lock
push
push
add
aaa
repnz
dec
shrb
add
pop
or
inc
xor
pop
xchg
mov
xor
les
in
sub
mov
testb
clc
pop
push
subl
dec
mov
seta
icebp
enter
movb
push
inc
addr16
cli
insb
daa
jmp
int
add
or
xchg
sbb
xor
adc
es
add
pop
and
jl
add
adc
inc
or
sub
add
jp
mov
add
mov
ret
scas
jge
adc
jne
pusha
movq
andl
sub
push
aas
js
pop
sub
les
lret
ret
sbb
xchg
add
push
add
icebp
or
int3
scas
xlat
add
mov
call
sbb
push
inc
adc
dec
stos
bound
jl
add
push
mov
dec
in
jns
mov
lods
pusha
stc
loopne
str
das
mov
push
js
pop
test
inc
ja
adc
mov
dec
pop
push
sub
sub
mov
or
pop
test
mov
mov
ljmp
fs
adc
pushf
ret
addb
xor
add
loopne
cmc
adc
sub
rorb
neg
add
mov
inc
add
mov
add
or
mov
mov
add
call
outsb
or
jnp
add
mov
stc
cmp
cmpb
push
popf
sahf
leave
mov
in
aas
xlat
js
adc
add
dec
hlt
add
inc
dec
push
pop
and
je
enter
pop
xor
loop
sub
dec
pusha
cmp
cmc
and
inc
xchg
in
cmp
or
cmp
rcrb
and
icebp
cmp
sbb
sbb
ret
sbb
shlb
ja
addr16
or
add
test
cld
push
hlt
in
jb
add
call
rclb
xchg
loopne
and
stc
fcomps
rorl
int3
xchg
repz
mov
mov
mov
lods
shrb
and
in
jb
cmp
mov
test
xchg
or
in
jb
or
jo
insb
add
fs
pusha
enter
pop
jb
scas
pusha
arpl
cmp
add
call
or
aam
shrb
int3
add
enter
jecxz
mov
add
cmp
and
mov
cmp
in
mov
inc
dec
sbb
movzwl
rol
xor
adc
ret
pusha
call
loope
les
add
nop
cmpl
xchg
push
in
dec
add
jmp
cli
add
mov
lret
cwtl
adc
inc
pop
or
inc
or
adc
sbb
pop
lahf
push
sbb
push
jle
cmpxchg
ret
cmpsl
adc
pop
and
xor
or
and
push
repnz
and
xchg
cmc
enter
add
cmp
sbb
and
sti
jle
xchg
std
enter
add
jb
cmp
inc
data16
in
out
out
call
jmp
cmp
sbb
in
enter
out
jb
cmp
sbb
mov
jl
aad
and
xchg
xlat
enter
add
cmp
sbb
add
frstor
ficoms
in
jb
cmp
sbb
add
adc
xchg
movl
lret
lret
sbb
and
and
into
xchg
iret
call
mov
mov
mov
mov
adc
mov
and
add
enter
mov
sbb
mov
inc
movsl
aaa
call
ljmp
andps
push
inc
xor
xor
or
push
inc
add
outsl
dec
dec
nop
cmp
cwtl
gs
clc
push
sti
add
jb
push
pop
add
outsl
add
xor
lahf
add
mov
lret
outsb
mov
daa
jge
add
jo
loope
xchg
pop
test
cli
cwtl
jle
add
gs
inc
add
data16
sahf
mov
aam
and
sub
push
push
jo
mov
insb
add
sti
pop
pop
nop
push
fs
int3
cmp
dec
shlb
dec
add
jb
push
popa
pop
add
push
sarb
or
outsb
mov
jecxz
addr16
ja
xchg
or
je
loopne
popa
dec
insb
lock
fstps
mov
movsb
cld
jno
dec
pop
pop
je
ja
or
gs
xor
pusha
loop
adc
test
sub
inc
inc
imul
mov
pop
testb
and
push
or
popa
outsb
addr16
jnp
and
fimuls
or
test
add
xor
enter
out
xchg
fcoml
mov
stos
mov
popf
addb
inc
cltd
jae
add
or
jo
in
testl
hlt
add
mov
cmp
push
call
sbbb
sbb
xchg
mov
dec
xchg
push
add
fs
pop
nop
in
scas
pop
out
shlb
add
push
push
outsl
add
imul
and
xor
mov
es
jae
jo
movsb
xchg
in
xor
xor
mov
fadd
insb
add
lcall
add
inc
arpl
add
mov
cmp
cmp
adc
inc
pop
jns
gs
and
ja
orb
push
je
arpl
add
pop
dec
inc
add
inc
out
dec
jo
je
sbb
insb
in
cmp
cmp
push
popa
inc
or
mov
xchg
pop
push
mov
gs
sbb
inc
popa
outsl
xchg
fs
lock
push
test
push
bound
jae
mov
lcall
pop
cmp
and
stc
nop
push
repnz
pusha
sub
dec
add
add
and
mov
inc
imul
ljmp
inc
cmp
dec
adc
hlt
lret
mov
stc
mov
sbb
and
lods
into
imul
mov
xchg
lcall
ret
std
xchg
add
dec
aad
ds
adc
mov
push
lea
daa
js
lahf
pusha
inc
or
incl
sbb
ja
jl
dec
sub
movl
iret
test
add
outsl
push
sarb
ja
sub
and
add
jne
jmp
and
jbe
push
mov
subl
add
push
out
mov
rol
jbe
fistpll
loopne
add
cmpsb
je
mov
incl
lods
adc
or
adcb
jg
sub
sub
cmp
sti
je
fmuls
mov
push
add
sbb
rcrb
xchg
nop
in
add
adc
inc
push
ret
aaa
adc
ret
pop
fsubrs
pop
add
shll
add
cmc
inc
inc
rolb
mov
call
jl
sbbb
add
push
jge
mov
mov
dec
sub
adc
add
inc
ljmp
push
pop
xchg
popa
shrl
pop
dec
cmp
out
xor
mov
inc
xor
insb
dec
scas
add
adc
adc
and
inc
xchg
add
mov
loope
and
cli
dec
add
mov
cmp
mov
lret
leave
or
mov
fisttpl
adc
and
fistpll
cmp
xchg
addl
sub
add
fs
aas
cmp
fiaddl
hlt
xchg
fsubrp
cmc
sbb
test
jns
in
pop
add
stc
push
and
imul
popf
icebp
inc
cmp
pop
add
les
rorb
lods
bound
mov
js
push
push
jb
aaa
stos
xor
scas
mov
test
push
movsb
xor
xorl
cli
pop
dec
mov
add
xor
pusha
xchg
sub
sbb
xor
jo
ja
mov
test
or
mov
xor
add
mov
negb
adc
jo
stos
enter
stos
add
gs
mov
jnp
add
sub
rcrb
inc
cmp
inc
setne
stos
lods
cmp
andb
sbb
mov
jo
cmp
hlt
arpl
add
sbb
sahf
fdivs
loopne
inc
sub
xchg
push
adcb
xlat
rcl
lock
xchg
push
into
xor
out
aas
inc
mov
and
popa
movsl
cmp
mov
push
mov
fnstcw
loop
add
dec
fcompl
dec
mov
shlb
je
push
fwait
inc
mov
xchg
rcl
add
sbb
arpl
mov
sbb
les
and
adc
or
in
cmp
add
in
popf
inc
out
add
add
mov
add
adc
sub
packuswb
repnz
mov
adc
jne
dec
in
cwtl
jg,pn
add
inc
add
add
mov
andl
lock
es
mov
mov
out
xor
lret
daa
pop
push
sbb
xchg
test
adc
jl
stos
mov
adc
mov
sub
jmp
es
sub
rclb
push
rcrb
inc
xor
add
add
push
xchg
push
ret
and
add
cmp
jge
inc
cmp
add
add
test
enter
jge
sbb
mov
jnp
mov
push
xchg
xor
xchg
push
mov
lret
inc
es
hlt
add
mov
ds
repz
add
aaa
push
shl
lock
xchg
mov
mov
pop
cmp
sbbb
icebp
loop
cmpb
push
add
mov
sbb
sbb
adc
ret
daa
in
fimuls
xorl
ja
data16
and
movzwl
pusha
pop
adc
add
add
fwait
pop
enter
idivb
jo
fstpl
pushf
sbb
xor
cld
and
movsb
add
es
hlt
test
dec
pop
mov
add
add
fstp
imull
xchg
add
push
scas
xor
xchg
pusha
mov
add
push
cli
add
dec
lret
adcb
sub
shr
pop
jg
repz
jbe
decl
cs
and
add
out
jns
out
fadds
cmp
push
pop
xor
test
mov
pop
push
idivl
out
popf
fwait
lret
inc
sub
pop
movsl
push
xchg
add
sti
clc
rclb
enter
sub
pop
push
pop
add
movsl
mulb
push
mov
fiaddl
mov
shlb
add
or
cltd
jo
push
subb
aas
clc
dec
add
add
in
xor
add
and
cmp
in
ljmp
pop
cwtl
test
xor
jl
fcoml
xor
push
xchg
fldenv
in
add
mov
dec
shlb
leave
add
jne
cs
dec
test
inc
cmp
inc
cld
sbb
mov
push
sub
add
mov
xchg
fistpll
xor
push
lea
add
lods
and
adc
enter
push
in
add
jmp
pop
stos
cmp
arpl
dec
add
ljmp
push
xlat
xchg
test
icebp
add
bnd
int3
or
jo
cmp
adc
sbb
xchg
lock
jge
cld
sti
add
pop
jbe
mov
rorl
sbb
test
add
sub
call
ljmp
and
testb
push
cltd
pushf
add
sub
aam
fidivs
outsl
sbb
push
lea
imul
addl
into
add
pop
rolb
cmc
nop
push
add
and
and
or
adc
shlb
sub
or
cwtl
ret
add
add
xchg
push
decb
inc
jmp
sub
fiaddl
lods
call
mov
fnsave
and
add
adc
mov
mov
sub
loopne
jne
push
push
add
pop
sbb
mov
add
jae
push
fildl
lcall
js
loopne
add
push
aam
movsl
or
aaa
add
push
lea
sbbl
add
or
xor
sarb
push
aaa
imul
cwtl
cmp
pop
js
add
add
movsl
addb
xchg
loope
jmp
addb
cmp
ja
call
sbb
fstps
mov
shl
push
add
andb
mov
mov
cmp
iret
and
add
lea
xor
fadds
cmovle
adc
jle
mov
in
mov
or
jns
xor
and
and
lahf
push
hlt
xor
sub
add
call
loopne
lret
ds
movsl
mov
pop
ret
cltd
add
push
test
orb
inc
je
or
sub
pop
add
sarb
maskmovq
testl
adc
dec
std
pop
pop
icebp
call
mov
inc
add
push
dec
ret
cld
fildl
push
mov
add
sub
hlt
dec
adc
xchg
mov
cmp
push
sbb
dec
dec
dec
ret
adc
dec
call
or
jne
rorb
xchg
sub
fiadds
cmp
add
cli
xchg
pop
adc
test
loopne
push
xchg
sub
popa
or
movsl
mov
cltd
gs
jnp
orl
pusha
loopne
add
and
mov
ret
push
mov
filds
xchg
js
or
inc
xor
and
push
or
pop
mov
daa
loopne
cmp
sbb
aad
push
mov
xor
mov
add
jmp
test
add
divb
call
dec
loopne
push
mov
and
pusha
sbb
sub
xor
aaa
dec
stc
inc
inc
mov
and
add
sub
add
add
stos
test
mov
cmp
and
ret
xor
out
inc
je
aas
add
cmp
inc
mov
inc
in
add
dec
std
nop
cmc
dec
and
or
xorb
cmp
ret
and
lret
jbe
adc
lret
jbe
add
sub
addl
xor
add
mov
aas
sub
ret
pop
pop
pop
pushf
iret
iret
jae
add
adc
cmpsl
and
sub
pop
arpl
pop
mov
mov
or
xlat
pop
call
add
mov
and
imul
xchg
xchg
sti
lods
xor
sub
cltd
loope
hlt
imul
incb
mov
cmc
push
push
push
sarb
lret
jge
sbb
int3
jecxz
movsb
jne
dec
outsb
add
out
aad
add
jmp
inc
xlat
shlb
cmp
jl
xorb
fstpt
push
cmpsl
dec
push
dec
movsl
add
sub
adc
push
stc
adc
jne
pop
je
fisubl
cld
mov
das
setb
cmp
xor
leave
and
mov
push
out
push
ret
push
xor
inc
insb
mov
fdivrs
add
mov
add
out
insb
cmp
jo
sub
push
adc
callw
push
fldl
dec
subb
mov
cmp
cld
jmp
push
or
ss
mov
mov
xchg
adc
push
je
das
inc
call
add
dec
or
add
inc
add
pop
inc
rolb
call
enter
enter
ss
scas
sarb
add
push
sbb
ret
roll
lcall
fildl
fdivs
enter
xor
pop
fwait
cmpsl
add
push
add
dec
push
jo
fldl
push
imul
mov
jle
xor
jns
mov
loope
aas
mov
pop
xor
shrb
rcrb
fs
pop
rcrb
adc
pop
jle
hlt
fiaddl
clc
rcll
jge
repnz
xor
push
or
xor
push
xorl
inc
fdiv
sti
pop
dec
push
adc
sub
aad
inc
and
add
or
nop
daa
cld
add
call
divl
pop
cld
jb
test
enter
loopne
add
flds
mov
xor
xchg
testb
mov
add
xorl
mov
mov
enter
cli
inc
fwait
mov
sub
add
inc
adc
sub
add
add
lret
pop
xor
push
push
xor
jge
andb
xchg
call
add
aas
js
cmp
cltd
sbb
in
in
inc
loopne
adc
jle
mov
pop
pop
dec
incb
lock
sub
add
dec
mov
dec
mov
imul
rol
push
add
repnz
inc
dec
mov
lahf
add
mov
addl
mov
and
add
lock
pusha
in
add
cmp
add
mov
inc
cli
pushf
add
pop
or
hlt
inc
sbb
pop
adc
or
lods
push
std
enter
test
mov
aad
or
push
pop
mov
add
ret
dec
jno
and
daa
inc
jmp
add
cmp
jl
test
adc
jno
add
adc
in
and
push
orl
xor
add
or
add
dec
lock
cmp
jmp
fs
je
sub
mov
add
adc
push
in
loopne
dec
insb
sub
add
and
push
rcll
add
mov
icebp
aas
cwtl
je
add
pop
in
testb
adc
jmp
add
sbb
add
add
fldenv
push
hlt
adc
lret
inc
mov
ja
and
mov
or
add
jo
pop
mov
adc
orps
pop
jns
sub
cs
out
jle
fstl
dec
add
dec
bound
dec
xchg
add
dec
in
push
scas
or
sub
bound
orb
push
pop
add
call
fcompl
mov
fldenv
xchg
add
lock
dec
mov
sti
sub
fcoml
xor
mov
add
shrl
jmp
xchg
sbb
add
xchg
subb
mov
push
cwtl
sbb
add
mov
sub
fldt
jb
pop
pop
inc
add
and
push
add
idiv
test
in
dec
push
orl
mov
sub
mov
cld
lock
sbb
test
mov
add
sbbb
dec
add
mov
mov
pcmpeqb
mov
mov
sub
inc
hlt
js
push
andb
sub
iret
inc
incb
call
push
out
push
out
adc
dec
repnz
add
jno
rol
in
add
stos
je
adc
and
dec
in
rcl
aas
out
xchg
call
adc
iret
outsb
add
jecxz
sbb
jo
daa
sub
jp
popa
stc
adc
dec
cld
sbb
testl
cs
in
or
lock
xchg
out
popf
loop
rolb
mov
call
mov
stos
cld
in
mov
xor
ss
inc
jp
add
aaa
pop
dec
sbb
pop
dec
pop
data16
mov
lea
xchg
sub
dec
jne
mov
sbb
sbb
pushf
sub
or
add
add
cltd
jno
lods
push
xchg
fwait
add
popa
add
imul
cs
cmc
or
pop
aas
cld
shlb
add
adc
add
je
mov
xchg
adc
mov
mov
hlt
neg
pop
daa
lahf
adc
inc
test
ret
jmp
xchg
push
xchg
xchg
xorb
nop
enter
jle
cmovs
sbbb
cmp
add
jg
in
dec
loopne
imul
pop
movsb
mov
je
xor
jbe
jne
and
cmpb
xor
inc
enter
addb
push
inc
add
mov
mov
lahf
xchg
aam
sbb
adc
add
and
sarb
out
cld
push
fdivrl
add
addl
addb
sti
push
sbb
call
cltd
add
sub
adc
and
es
sub
or
dec
loop
add
mov
mov
inc
bt
add
stc
and
inc
stos
je
add
dec
add
add
cwtl
ljmp
int3
adc
jne
pop
clc
sti
add
add
add
fidivrs
add
xchg
orl
ud0
test
add
loopne
dec
hlt
push
pop
add
je
add
adcb
or
cmpsb
ljmp
mov
push
add
push
mov
andl
mov
jmp
xor
adc
clc
sti
pusha
adc
add
mov
push
dec
pop
scas
cwtl
rcrb
rorb
dec
mov
mov
cltd
mov
ljmp
sub
add
dec
dec
rorb
or
adc
add
xlat
mov
push
add
enter
dec
mov
add
sbb
push
xor
xchg
mov
test
adc
les
sbb
inc
cmp
aam
pop
mov
je
jae
popa
inc
push
addr16
dec
movsl
add
out
sub
or
ss
dec
add
and
mov
push
mov
and
fs
add
or
cmpsl
dec
xchg
jne
mov
add
shrl
sub
jl
or
dec
jg
add
and
or
or
push
jmp
ret
out
pop
shr
pusha
xor
push
inc
rcrl
xor
mov
shr
pop
adcl
adc
and
mov
sbb
add
xor
in
movsl
add
hlt
test
stos
int
arpl
xor
jo
add
dec
das
jmp
or
push
add
cmp
adcl
push
adcb
cltd
add
mov
popf
adc
dec
sbb
add
xchg
xor
out
bound
push
fstps
adc
rclb
xor
adc
mov
jbe
in
test
mov
add
sarb
pop
mov
adcb
and
sbbl
jbe
jb
inc
xchg
cmc
sub
add
xchg
mov
xor
hlt
jae
add
out
mov
mov
add
and
jno
arpl
xor
outsl
cli
push
dec
mov
jno
ljmp
fwait
pop
cmc
sarb
lret
add
fimull
add
psubsb
scas
icebp
or
and
mov
pushf
mov
fmuls
cld
add
push
sub
xor
pusha
lret
add
mov
xchg
lock
fwait
cmpsb
and
pop
sub
push
mov
mov
or
clc
bound
push
cmc
ljmp
adc
push
adc
cwtl
cmpsb
insb
cmp
stc
sbb
stos
mov
pushf
add
test
test
xor
imul
out
add
das
add
js
fimull
sbb
add
mov
dec
in
add
ja
mov
adc
testl
and
add
or
mov
push
cs
lea
loop
lret
int
add
repz
inc
ds
xchg
add
loope
and
push
sbb
inc
xchg
and
loopne
add
lds
in
lock
xlat
loopne
push
cmpb
mov
add
mov
push
decb
testl
push
xor
jle
add
imul
pop
add
add
enter
push
pop
rcl
xor
cmp
cmpb
inc
add
add
sub
jae
add
test
lock
xorb
ret
add
imul
or
and
mov
sbb
loope
push
cmc
movsb
mov
hlt
lods
clc
add
sahf
into
ret
adc
shll
add
cmp
mov
mov
pop
iret
sub
pop
sub
clc
lds
or
push
mov
or
lods
popl
lock
pop
mov
or
adc
incl
add
push
repz
mov
jne
ds
mov
pop
pop
cld
add
cmpsb
gs
mov
sub
add
cmp
sub
je
sbb
enter
cmc
pop
enter
push
jo
mov
call
push
xor
mov
inc
pop
cmp
int3
add
ffreep
push
nop
jmp
and
add
lahf
add
add
xor
dec
and
xorb
mov
inc
mov
xor
aam
add
adc
loopne
data16
movsl
or
jo
adc
pop
rclb
les
or
aam
out
shlb
sbb
je
test
jo
adc
cmp
sti
arpl
add
in
ja
ret
pop
xor
cltd
xor
add
sarl
add
out
fmuls
cmp
jle
adc
pop
mov
dec
add
xor
add
push
xor
fmul
xchg
cld
mov
or
adc
push
sahf
pushf
and
add
inc
out
add
pusha
dec
call
inc
mov
jg
fiaddl
dec
idiv
pusha
xchg
adc
sbb
adc
mov
adc
dec
mov
inc
add
pusha
xor
add
dec
jns
movsb
xor
out
call
jle
or
add
test
xchg
cmp
addb
adc
mov
mov
les
pop
pop
add
adc
ss
add
into
add
lock
mov
imulb
add
inc
and
sbb
es
add
hlt
pop
adc
adc
in
jmp
cmpsb
sbb
add
hlt
fs
fyl2x
push
inc
inc
adc
sbb
lock
ljmp
adc
or
add
js
jl
jge
vpunpckhdq
mov
out
push
add
dec
add
push
adc
and
add
scas
adc
clc
push
sbb
sbb
stos
add
cmp
jle
adc
das
and
xchg
add
adc
ret
mov
pop
push
jnp
cmpb
cltd
movsb
pushf
les
filds
sub
xchg
xor
mov
cmc
popa
jmp
lea
mov
inc
or
push
xorb
add
jge
xchg
cmp
mov
cli
mov
sub
add
je
push
dec
fcoms
adc
add
mov
faddl
mov
vmptrst
mov
adc
inc
xchg
int3
cltd
add
call
ret
daa
push
pop
xchg
gs
lcall
adc
push
js
sub
pop
test
dec
incl
or
or
daa
add
pop
and
es
xchg
adc
add
loopne
sub
dec
adc
mov
cwtl
or
mov
in
mov
movsl
xchg
inc
pop
xchg
imul
jo
fadds
adc
mov
fsts
sbb
aas
outsb
mov
fldl
xchg
insb
test
push
sbb
data16
rclb
mov
cmpsl
les
fiaddl
aaa
inc
iret
add
stos
or
pop
or
rclb
mov
inc
or
mov
or
js
mov
push
sbb
call
adc
mov
add
inc
in
sub
pop
cwtl
xchg
ja
add
flds
outsl
js
cmp
inc
sub
fldl
lea
dec
push
xchg
adc
inc
sub
repnz
xor
cmp
or
cwtl
xchg
adc
push
inc
cmpl
push
mov
in
shlb
pop
loope
nop
add
sub
cld
sahf
add
push
xcrypt-cfb
cmpsl
and
add
sub
cld
rolb
call
icebp
add
insl
in
or
js
in
pop
xchg
add
mov
rcl
mov
push
lret
loope
inc
mov
xchg
lods
aas
sub
add
and
mov
jnp
test
pop
ret
pop
mov
inc
fwait
clc
in
int
cmpsl
mov
or
mov
add
add
add
mov
faddl
in
dec
outsl
imul
nop
add
push
pop
add
jg
dec
fldcw
fisubs
inc
mov
mov
push
push
cmpsb
pop
and
jo
add
sub
hlt
sbb
mov
and
add
sub
loopne
stos
les
ss
xor
adc
jne
add
nop
sbbl
push
or
adc
shlb
dec
jl
pop
jno
dec
inc
mov
rcrl
test
xchg
add
bound
hlt
popf
and
jae
and
jmp
or
shl
cmpsb
or
push
ret
jle
mov
adc
pop
das
lock
stos
daa
add
or
mov
jp
jl
sub
cwtl
pop
add
lcall
mov
xchg
shll
push
int3
dec
scas
add
lahf
ret
popa
add
add
lcall
mov
push
ja
nop
jnp
or
sub
popw
rcl
add
dec
cmp
cmp
enter
mov
xor
mov
add
mov
mov
dec
jne
adc
mov
push
xchg
stos
inc
loop
cmc
mov
pushf
mov
add
mov
sbb
das
pop
in
repz
loope
in
adc
add
lcall
mov
cwtl
xchg
add
adc
stos
lea
je
xor
mov
sub
roll
sbb
mov
mov
fwait
sub
or
push
adc
shr
sarl
aad
imul
and
jge
mov
dec
xor
hlt
lcall
xchg
insl
mov
ja
add
mov
call
js
jmp
ljmp
and
inc
pop
xor
push
push
clc
pop
dec
in
aas
jb
xor
mov
jne
adc
aaa
adc
shrb
je
add
adc
sbb
mov
or
jno
sahf
andb
mov
jae
add
pop
into
lods
add
add
cmp
xchg
jns
adcb
into
push
add
cmp
add
ficompl
rolb
imul
dec
xorl
out
cmp
mov
aam
and
add
dec
sbb
mov
dec
push
out
or
nop
pop
sti
fstps
adc
inc
popf
xor
pop
and
daa
mov
call
shlb
adc
pop
cld
fnstenv
mov
mov
mov
add
in
call
xchg
jne
cmp
pop
fadd
mov
add
into
mov
and
js
add
add
test
inc
ficomps
cmp
push
subb
add
sub
pop
lahf
addr16
sbb
mov
add
push
out
pop
adcl
jge
sub
les
cli
mov
int3
adc
jno
add
in
fs
pop
dec
insb
mov
mov
add
add
or
test
cmpsl
pop
rcll
pusha
dec
and
xchg
dec
sbb
mov
inc
loope
push
andps
lds
shrb
iret
mov
add
ss
sub
jmp
adc
je
lcall
adc
and
pushl
add
aas
dec
cld
popa
ret
inc
add
xchg
cwtl
mov
jl
push
shrb
mov
add
jb
lahf
add
outsb
dec
or
leave
add
mov
cld
fiaddl
mov
lahf
xchg
add
pop
jmp
push
xor
mov
movsl
paddd
cmp
mov
mov
xchg
cmpsl
stos
xchg
jp
add
add
out
sbb
imul
push
mov
or
imul
add
push
fldenv
fucomi
add
push
sub
lock
push
add
cld
xor
fucomp
clc
add
adc
lock
call
add
cmpsb
sub
mov
add
dec
xlat
push
std
add
xchg
pop
inc
fmuls
pop
pop
sbb
adc
fstpl
jnp
add
rorb
or
sub
jb
jmp
add
mov
and
cld
adc
add
add
or
xor
pop
dec
icebp
iret
push
jge
add
xchg
gs
ja
mov
std
adc
mov
inc
cld
mov
pop
or
add
rcrl
mov
sub
add
ret
pop
inc
add
pop
push
lock
hlt
add
clc
inc
and
mov
loopne
xlat
sub
dec
es
movsb
add
jno
into
push
add
loopne
aad
ss
lahf
xor
mov
int3
pop
loope
insl
ret
xchg
cld
add
call
or
inc
sub
int
insb
and
pusha
fimuls
add
mov
fsubrl
lods
adc
inc
sbb
xchg
xlat
mov
mov
push
and
cmp
jmp
sbb
aas
add
xor
aaa
and
xor
push
jmp
das
and
push
add
add
rolb
or
or
jl
add
or
test
xor
xchg
mov
add
decb
push
push
sbb
fs
xor
xor
mov
lock
rclb
add
andl
adc
loopne
and
movsl
dec
sub
mov
nop
pusha
jae
xchg
sbb
add
int3
inc
or
sub
les
jge
mov
cmovnp
or
cmpsb
add
mov
or
test
xchg
cld
mov
mov
push
xchg
cs
inc
cmp
pushf
jp
cmpsb
push
inc
mov
dec
fwait
ret
clc
mov
les
leave
aam
enter
adc
aam
push
mov
xchg
mov
and
mov
adc
dec
pop
jmp
add
xchg
inc
xchg
and
and
test
jmp
ret
nop
and
sub
or
mov
mov
inc
mov
add
arpl
mov
aad
add
scas
jne
stos
cltd
pop
sub
xlat
arpl
mov
movsl
xchg
cld
cmp
rclb
add
or
lret
or
rcrb
or
jae
and
ret
stos
out
cmp
imul
add
je
pop
or
lock
adc
add
dec
sbbb
pushfw
add
xchg
pop
sub
add
sahf
jo
call
jnp
cmpb
sub
sub
cmpsb
out
insb
mov
add
sbb
push
mov
inc
ret
sub
and
cwtl
mov
or
and
pusha
push
nop
movsl
add
pop
lock
rcrb
add
in
sub
or
les
mov
push
cmp
fnsave
in
mov
movb
add
jg
add
push
mov
mov
mov
xor
xchg
add
fimull
mov
loopne
jl
add
incl
xchg
mov
popa
add
cmp
and
repnz
or
or
cmp
mov
in
push
adc
add
pushf
dec
mov
xor
les
sahf
jp
pusha
out
add
adc
mov
outsb
pop
add
dec
mov
dec
pop
cld
rolb
idivb
or
xor
and
jb
add
data16
es
cmpb
dec
aas
or
inc
test
add
mov
push
push
lret
cmp
jae
insb
xchg
mov
ret
pop
mov
std
addr16
jno
dec
jecxz
add
xor
add
sub
adc
add
cmp
mov
mov
pop
pop
cwtl
repnz
add
cld
sahf
sbb
rcrl
cmp
add
shrd
cmpsl
fildl
sub
sbb
adcl
mov
inc
sub
xor
pop
push
out
mov
dec
pop
daa
mov
shll
in
push
add
inc
mov
jmp
jns
add
imul
sbb
xor
pop
ja
add
ficomps
mov
testb
leave
dec
in
add
jle
xchg
int3
daa
add
push
in
push
shll
push
add
dec
pop
cmp
addr16
push
or
outsl
jp
pop
inc
add
pop
add
add
and
push
or
push
frstor
es
lcall
xchg
mov
cmc
cmp
xor
dec
jle
ja
add
cmp
hlt
adc
pop
pop
test
pop
sti
sub
std
inc
mov
mov
ljmp
and
push
add
bound
in
mov
movsl
lea
data16
mov
sub
addr16
push
cmp
test
pop
mov
sub
and
xchg
xor
add
je
add
hlt
loopne
add
xchg
sub
sbb
lock
inc
jecxz
xchg
add
xchg
dec
ret
sub
xor
rorb
cmp
cli
jbe
fisubrl
xchg
pushf
add
xor
dec
add
lock
sub
jp
movb
inc
dec
adc
mov
int
add
pusha
jne
push
add
loopne
adc
in
inc
jecxz
dec
mov
jne
lods
shl
cltd
add
inc
movsl
mov
inc
push
or
call
icebp
inc
inc
out
or
cs
jmp
push
pavgb
addb
leave
push
add
aad
add
call
pop
push
pop
rcll
popf
cmp
stos
sub
lahf
ret
add
pop
or
xchg
push
xchg
dec
rcl
addb
push
mov
pop
addb
fdivs
push
and
mov
cld
xor
jg
aas
outsb
incb
lret
jne
push
or
add
lods
or
pop
nop
jle
add
stos
das
sbb
xchg
mov
icebp
dec
adc
stc
push
xchg
cmc
push
cmp
or
dec
mov
jns
add
aas
mov
pop
movl
push
add
mov
imul
add
xor
addl
insb
lds
fwait
mov
sub
mov
pop
and
insl
adc
jo
outsb
jmp
call
mov
mov
jmp
pop
adc
fsubrl
add
dec
push
in
and
inc
ljmp
sub
and
faddl
and
xor
out
push
add
lret
rorb
mov
orl
sbb
add
insl
divb
mov
shl
add
scas
jle
xor
lods
sbb
sar
loopne
dec
and
pop
clc
xor
dec
xchg
enter
and
sarb
ds
lret
setnp
fldl
xor
and
cmpsl
mov
rol
adc
sahf
bound
hlt
mov
cli
loopne
push
add
xchg
cld
push
adc
mov
push
jb
pop
sub
rorb
or
js
xor
pop
gs
jae
imul
xor
jb
and
jo
je
ljmp
add
popf
push
mov
add
push
add
jo
dec
adc
and
mov
jp
add
xchg
adc
nop
sbb
into
xchg
test
fistps
fdivl
adc
push
aam
and
sub
sti
fisubrl
lret
jmp
nop
mov
inc
pop
add
dec
jne
or
imul
je
xchg
add
mov
dec
adc
sarb
imul
add
popa
jle
sbb
add
adc
adc
ret
hlt
xchg
getsec
and
shlb
enter
xchg
rcrb
js
movntps
mov
int3
add
xor
sbb
xor
mov
sbbb
clc
fiadds
and
sub
push
adc
and
js
push
mov
add
cmp
inc
es
inc
cmp
pop
in
xchg
push
adc
sub
mov
insb
cmpsl
jbe
repz
adc
add
or
pop
push
mov
add
les
call
or
outsl
add
sub
movsb
or
loopne
cmpsb
sbb
sub
mov
js
sarb
add
ret
enter
or
les
cmp
cmp
repnz
push
mov
call
inc
lods
enter
test
jno
rclb
inc
adc
cwtl
arpl
xchg
insb
sbb
nop
cmp
mov
inc
test
inc
sbbb
and
jl
clc
cmp
sahf
je
movsb
cmp
jo
xor
insb
in
jg
addr16
negb
pusha
outsl
adc
add
adc
push
aam
cmp
aam
adc
loop
scas
lods
cmpsl
or
addr16
or
add
dec
dec
jb
je
mov
es
or
cld
mov
orb
add
add
data16
jle
sub
pop
or
push
add
add
daa
jb
push
pusha
and
and
add
inc
lds
add
jae
enter
mov
dec
daa
jl
pop
mov
jmp
mov
mov
adc
je
add
or
add
jle
pop
add
and
pop
add
ret
mov
cltd
sub
dec
and
mov
les
jne
mov
inc
mov
inc
push
stos
inc
insl
leave
cwtl
dec
arpl
push
xlat
cli
jg
pop
addl
std
jl
or
leave
lret
sbb
dec
stos
and
div
outsl
fldenv
add
stos
inc
inc
add
loop
or
or
stos
push
stc
pop
pusha
int
add
incb
movl
bound
or
mov
dec
fcoms
xchg
or
add
add
pop
add
out
jo
in
dec
stos
or
jne
mov
adc
jge
cmpsl
push
add
fidivrl
mov
add
stos
xchg
add
add
push
add
aad
test
jmp
add
cmp
ret
add
cmp
add
mov
dec
add
mov
fistl
mov
rorl
notb
pushf
faddl
inc
mov
jne
daa
hlt
mov
jmp
ljmp
add
jae
loopne
inc
loopne
movsb
sub
in
test
icebp
cmpl
or
nop
test
in
add
jbe
std
cmp
fwait
out
mov
cwtl
mov
pop
je
push
push
add
sub
mov
call
lock
add
pop
or
loop
jne
add
test
loope
dec
cld
or
add
add
outsl
or
add
sti
lods
dec
sub
sub
add
add
aas
dec
push
jg
test
sahf
std
mov
lea
adc
mov
mov
adc
sub
add
inc
mov
and
adc
imul
cmp
shr
add
or
push
out
pop
add
dec
testl
call
pushf
mov
push
pop
pop
add
lock
add
xchg
pop
mov
cmc
les
add
cmp
or
push
stc
fsts
jle
jne
push
mov
sbb
cmp
icebp
les
add
inc
xchg
jmp
xor
ret
push
push
mov
xlat
je
cmp
div
push
add
push
or
lahf
add
jne
jecxz
dec
pop
fldl
daa
je
inc
and
rcll
out
loop
in
mov
add
and
dec
ret
add
shrd
dec
shlb
add
imul
out
ljmp
xchg
adc
mov
push
add
push
addb
xor
and
cmp
xor
xor
leave
cmp
lea
ss
icebp
inc
orl
lcall
lret
sti
xchg
lods
sbb
mov
push
in
lahf
pusha
arpl
mov
jno
scas
xor
scas
sub
mov
add
rcrl
jmp
xchg
pop
in
test
sbb
add
jle
sub
or
push
aam
xchg
loopne
aad
push
push
in
push
pop
ret
sub
test
aas
pop
jns
in
adc
sarb
sub
push
jmp
in
faddl
lock
pop
ret
or
stc
pop
clc
xchg
add
mov
mov
loopne
and
sbb
xchg
and
add
mov
push
sub
pop
pop
hlt
loopne
cmp
fdivr
or
xor
scas
and
add
mov
movsb
stc
mov
add
add
mov
add
iret
nop
lea
xor
mov
sub
pusha
mov
dec
jl
std
xor
mov
dec
hlt
jne
idivb
jmp
mov
xor
pmulhuw
stos
inc
add
inc
xchg
pop
or
mul
cld
xor
mov
cs
push
sahf
sub
add
and
sub
mov
leave
adc
lea
jne
mov
dec
xor
and
icebp
add
pusha
mov
test
cltd
cs
rorl
and
add
pop
pusha
pop
and
testw
adc
or
add
inc
adc
movb
or
aas
fisttpl
mov
rclb
add
inc
add
loopne
rolb
loope
xor
add
in
fnstsw
cmpl
cmp
inc
pop
je
fidivrl
xor
fbstp
lea
jnp
mov
mov
in
add
fsubrl
mov
jno
mov
add
dec
ror
in
out
or
movsb
lea
or
cmp
cmp
push
adc
fmull
inc
mov
js
adc
add
sub
cmpsb
xor
bound
pop
adc
xchg
xchg
and
and
cmpsl
icebp
adc
push
fnstsw
add
shr
mov
mov
push
add
mov
pop
push
add
test
or
mov
loope
jns
out
pop
repnz
repz
jg
and
pop
mov
add
cmpsl
addl
add
dec
nop
mov
lock
insl
add
sub
nop
add
fidivl
repnz
fwait
scas
add
testl
rcrb
pop
in
add
and
pcmpeqw
dec
bnd
popa
pop
shll
repnz
and
lea
xor
rorb
pusha
push
push
pop
aad
inc
aas
roll
imull
jmp
add
sub
push
mov
pop
xor
push
and
pop
lock
xchg
jge
add
loop
sub
loopne
call
ds
popa
lds
aam
push
add
call
add
add
add
inc
stos
add
inc
pop
cmp
xor
sub
fbld
jo
inc
add
push
call
push
adc
inc
cmp
enter
ret
cwtl
or
push
add
fstps
push
fistpll
jmp
fildl
sbb
test
cs
or
mov
nop
test
ret
add
dec
mov
sub
loopne
jae
pminub
xchg
xchg
push
ljmp
lret
cmp
push
xchg
stc
sub
leave
imul
fiaddl
cmp
sbb
add
add
adc
mov
test
push
rolb
jnp
dec
aas
sahf
mov
addr16
sub
and
and
add
out
mov
add
pop
movsb
cld
jl
add
mov
dec
pop
aad
daa
pop
fdivr
pop
pop
nop
xchg
adc
test
inc
or
adc
xrelease
jae
mov
add
cld
xor
inc
clc
enter
loopne
test
int3
movsb
lods
cli
mov
mov
push
adc
hlt
xor
dec
xchg
pop
sti
add
lea
pop
hlt
and
leave
lret
loope
and
sbb
outsb
cmpsb
add
mov
mov
jb
xlat
mov
and
xor
js
inc
rorb
mov
xchg
pushf
ret
daa
adc
fdivr
pusha
clc
push
inc
inc
dec
cmp
xchg
adc
xchg
dec
icebp
add
gs
je
lea
push
dec
pusha
pop
xchg
jbe
push
xchg
add
pop
add
xchg
sbb
fdivs
loopne
add
add
popf
andl
add
sti
test
add
js
stc
fdivs
jae
add
adc
jl
push
jo
add
mov
rcl
aas
out
dec
pop
mov
lock
repnz
mov
cmp
in
addb
mov
add
cmpsl
sarb
cmp
sub
pop
fsts
push
add
cli
jae
ds
sarb
dec
adc
push
lods
test
xchg
out
add
sbb
mov
cmovg
sbb
sbb
add
jne
mov
jp
data16
adc
mov
in
ret
jne
or
xchg
inc
inc
fsub
adc
add
xor
jge
outsb
add
sbb
in
cmp
jb
adc
call
dec
loope
sub
or
mov
enter
setle
movsb
sarl
jmp
adc
add
lea
add
jg
fisttpll
lret
and
test
jbe
mov
int
or
push
add
add
or
adc
mov
jl
movsb
pop
test
popf
clc
mov
xor
add
int3
add
scas
sub
pop
xchg
jl
sub
add
sub
lock
testl
movsb
scas
popf
adc
dec
in
push
xor
cmp
or
mov
movsl
pop
int3
scas
test
dec
shl
popf
filds
scas
push
cmpsb
adc
addl
mov
push
xchg
mov
cld
jl
ljmp
xor
lea
mov
pop
bnd
xchg
jb
pusha
aad
add
add
inc
inc
inc
decl
lock
add
dec
cmpsb
mov
add
xchg
mov
mov
nop
add
loop
pop
add
jns
xor
adc
inc
inc
push
dec
jne
fldenv
cmp
mov
jle
push
sahf
in
add
cld
add
pop
mov
jo
add
xor
aam
fstpl
cmpsb
xor
jbe
inc
mov
mov
loope
clc
imul
and
dec
loop
add
pop
mul
jl
lea
sub
dec
xor
adc
pop
sbb
and
xor
jne
pusha
ret
sbb
add
sbb
add
aam
dec
in
stc
xchg
jle
jecxz
xchg
jno
cmp
cmp
sbb
clc
inc
fists
inc
subl
fldt
mov
hlt
ret
and
push
adc
xor
ljmp
dec
in
sbb
bound
xor
repz
shlb
test
add
inc
cmp
jge
mov
pop
jmp
mov
pop
sub
add
rcrl
cmova
adc
je
pop
and
sbb
add
push
sub
sbb
test
in
mov
inc
shll
pop
sbb
jecxz
inc
mov
xchg
jno
add
je
clc
out
jl
jno
mov
into
mov
addb
push
inc
inc
inc
inc
add
dec
dec
dec
add
dec
add
push
push
add
mov
pop
pop
popa
loopne
add
gs
push
add
outsl
jo
xorb
pop
jne
ja
jns
jp
xor
push
xor
cmp
das
add
sub
sub
cmp
and
nop
mov
or
clc
dec
xor
inc
pop
mov
xchg
aaa
mov
cmp
jmp
add
test
ret
add
push
test
lahf
xchg
mov
insb
outsl
aam
pop
add
popf
fs
insl
ss
adc
add
add
sub
sbb
push
sarb
mov
add
hlt
sahf
jp
push
cmp
pushf
rorb
add
sub
mov
add
adcb
or
scas
mov
fwait
repnz
sub
lret
add
ret
out
add
sub
lock
ret
imul
pop
dec
shrl
mov
loop
sbb
or
inc
dec
dec
sti
add
aam
mov
aad
add
add
add
dec
mov
shr
dec
subl
lahf
jg
dec
push
jle
bound
jno
add
and
or
f2xm1
add
xchg
mov
stos
add
aam
dec
leave
dec
clc
inc
add
pop
ud2
cmpsl
add
jae
lcall
loopne
add
repz
xor
pop
movb
js
scas
rorl
out
cmp
clc
xor
and
cmp
mov
out
add
clc
addl
xor
xlat
test
adc
ja
cltd
adc
leave
je
inc
jmp
xor
jns
mov
inc
dec
or
js
adc
je
mov
arpl
pusha
or
add
jmp
shlb
jo
add
fisttpl
mov
fldcw
nop
xchg
insb
push
pop
add
aam
jp
inc
sbb
bnd
add
lcall
mov
lds
in
outsb
jp
iret
sub
xchg
add
lods
shll
xchg
out
dec
push
hlt
adc
push
sbb
notl
and
inc
in
and
mov
sbb
sti
cld
mov
add
add
cltd
lods
fbstp
add
add
push
in
je
mov
sbb
or
jbe
dec
xor
mov
stos
pop
sub
in
adc
outsb
dec
fbld
movq
mov
or
call
loopne
push
mov
and
add
xlat
adc
cli
pop
add
sbb
pusha
out
sub
add
push
fdivrl
cmp
add
ss
inc
pop
lcall
lret
test
push
inc
sbb
pop
fs
add
xor
jno
add
cltd
sbb
ret
jge
pop
push
or
lock
loop
and
adc
clc
aas
jb
out
push
rcrb
jp
add
shrd
sub
imul
jae
mov
out
test
dec
sbb
cwtl
xchg
cmp
add
or
out
int
jnp
and
rolb
mov
add
rolb
lods
mov
sub
aad
cmp
xchg
pop
mov
not
jb
add
mov
push
or
data16
dec
add
sub
jle
add
lcall
add
push
movsb
stos
repz
mov
dec
loop
out
icebp
inc
and
add
das
into
sub
cmp
sub
scas
add
or
in
aas
xchg
stos
adcb
imul
or
add
mov
popf
xchg
push
lcall
pop
push
xchg
add
lea
aas
xchg
movups
adc
dec
pushf
or
inc
add
pop
push
lods
add
jle
daa
pop
push
inc
add
adc
sahf
add
scas
jno
xchg
lret
or
dec
sub
leave
add
add
stc
xchg
in
add
mov
arpl
dec
jg
mov
mov
add
cmp
or
inc
jle
pop
mov
jo
hlt
pop
xchg
mov
ds
xchg
aad
adc
enter
flds
scas
das
ficoml
fsubs
push
add
inc
add
js
insb
xlat
fs
pusha
xchg
add
andb
add
cld
jne
xor
out
add
xchg
pop
push
sub
xchg
jl
pop
dec
pop
lock
outsb
add
cmp
mov
push
hlt
les
dec
sub
add
add
fsubl
push
add
inc
fstpl
idivb
pop
xor
mov
add
xor
sub
mov
inc
js
dec
xchg
inc
add
nop
jl
xchg
push
mov
cmp
xor
cmc
adc
in
inc
int
add
ja
mov
lea
cld
push
or
xchg
dec
or
and
add
les
jmp
bound
enter
ljmp
jmp
add
outsl
jl
cmpsb
nop
mov
fstl
pop
clc
fwait
repnz
add
loop
dec
out
ja
and
shll
popf
sub
sbb
jb
xchg
adc
jae
add
jbe
and
inc
out
call
add
cli
dec
add
pop
dec
xor
adc
and
add
push
pop
clc
iret
mov
sub
cwtl
std
jo
pop
add
addr16
xor
jns
xor
or
adc
or
sub
loope
and
add
cld
xor
js
daa
lret
pop
and
xor
mov
jae
jle
add
mov
sbb
por
push
fmul
or
addl
dec
jne
add
ror
dec
out
aad
pop
pop
mov
inc
hlt
ljmp
fwait
pop
popa
lahf
pop
add
pop
sub
add
in
cli
popa
mov
pop
jecxz
ja
cmp
xchg
dec
jno
outsb
sbb
and
andb
push
adc
sbb
push
mov
pop
add
clc
xchg
dec
fsub
xor
jae
jp
in
or
xchg
cli
dec
loop
mov
and
call
in
mov
jecxz
inc
mov
in
xchg
and
pop
lods
fadd
sbb
shrl
cmp
ljmp
lock
xchg
cmpb
add
rcrb
add
inc
cwtl
push
icebp
fld
pop
add
add
cmp
dec
into
in
rol
or
mov
clc
mov
add
jl
das
mov
pop
rorb
xor
mov
dec
adc
add
add
shl
ret
mov
imul
shrl
out
xchg
push
add
stc
lret
je
mov
mov
xor
in
lods
jo
or
mov
shrb
add
push
test
cmp
jns
mov
pop
jle
dec
les
push
lcall
into
jns
add
shlb
cs
nop
cmp
pushf
push
mov
mov
push
mov
xchg
call
imul
xchg
iret
repz
xchg
movsb
adcl
jle
push
pop
sar
add
mov
add
roll
and
push
cmp
push
xor
call
xchg
add
push
stos
adc
shlb
add
or
mov
sub
nop
sub
fadds
cmpsl
loopne
and
test
decb
dec
adc
add
movsl
cmp
add
mov
inc
in
push
and
lock
jle
cld
jge,pt
mov
test
sbb
xor
loope
clc
add
pop
pop
ret
mov
push
lret
addb
shr
shl
or
cmp
xchg
orb
pop
fcomps
lret
add
fldpi
add
out
ljmp
popf
push
dec
repz
or
mov
add
imul
add
xchg
adcb
int3
and
out
add
inc
enter
add
dec
adc
add
xor
sub
rolb
loope
jmp
out
xor
pop
jae
mov
loopne
decl
add
or
movb
push
cmp
andb
addr16
es
fimuls
jl
sbb
cmpsl
jnp
sahf
cld
aas
arpl
jp
jo
or
pusha
xchg
push
mov
sub
fwait
js
sbb
sbb
movsb
andb
pop
mov
cmp
mov
mov
xlat
inc
aam
test
add
and
fimull
test
inc
clc
add
stos
enter
add
ds
sbb
test
add
cwtl
outsl
shll
xor
pop
push
ret
xchg
pop
sub
popa
lock
aam
dec
rclb
fiadds
add
push
loopne
jb
push
sar
popa
sbb
jle
sbb
xchg
mov
mov
push
mov
sahf
clc
sub
add
lock
push
add
or
sbb
out
or
or
jo
data16
and
testb
aad
cmp
stos
cmpsb
loopne
fdivr
push
and
inc
adc
add
and
add
das
shll
repz
sub
jnp
movsl
or
sub
test
enter
and
movsb
add
nop
idiv
into
add
ds
xor
scas
xchg
hlt
out
aam
add
sbb
pop
add
leave
in
pusha
xchg
test
testb
sbb
movsl
add
pushf
and
sbbl
test
js
push
pop
or
loopne
mov
std
add
cli
cmp
push
push
jnp
add
or
into
inc
push
cs
add
jns
or
push
add
jae
pop
in
push
ficoms
daa
in
test
jge
push
add
mov
xchg
sti
add
cltd
pop
loop
push
shll
enter
jmp
repz
out
dec
enter
pusha
cld
mov
daa
jg
add
or
xchg
add
push
test
add
clc
xor
xchg
sub
or
cmpsl
dec
add
lods
jb
push
mov
pop
mov
jne
mov
gs
mov
fwait
hlt
jp
add
pop
xchg
repnz
cmp
and
add
dec
mov
movsb
inc
or
cmp
add
add
jmp
ds
call
js
andl
lahf
jnp
ret
push
mov
das
add
xchg
test
out
mov
lock
pop
mov
fcomps
movb
xor
mov
mov
xchg
add
rolb
dec
call
mov
add
adcb
lcall
add
mulb
hlt
adc
bound
aam
adc
rcll
imul
add
and
ds
in
push
pop
cmpsb
frndint
add
stc
jg
call
test
sub
pop
add
and
or
cmp
hlt
in
mov
xchg
add
lea
add
xorb
mov
cmp
push
loop
mov
and
out
in
inc
adc
fisubrl
push
mov
xorb
lret
add
addr16
pop
sbb
fisubl
dec
sarl
add
sbb
les
cmp
mov
rcr
outsb
shl
jecxz
xchg
add
je
cmp
push
dec
inc
pop
mov
pop
cmp
lcall
adc
pop
add
ret
inc
adc
xor
dec
dec
push
and
repnz
sti
cwtl
out
or
or
xchg
cmpsl
pop
add
fwait
stc
test
aam
push
add
adc
out
xlat
cltd
fistl
mov
and
xchg
ss
pop
in
inc
flds
push
hlt
inc
sub
ljmp
inc
pop
fiaddl
sub
loope
add
lcall
loopne
jnp
andb
cltd
les
sbb
push
in
add
xchg
xor
out
add
fstpl
or
mov
cmp
fwait
pushf
std
shrl
add
mov
movsb
pop
push
sbb
and
pop
pop
data16
shl
lea
push
mov
add
popa
imul
faddp
cmp
test
shrb
or
std
or
adc
mov
adc
aad
rcrl
push
lock
push
shrb
sub
std
add
enter
xor
xor
push
pushf
and
add
fildll
add
add
and
jae
je
push
popf
jl
ret
cmpb
push
push
add
popa
hlt
adc
push
mov
add
xchg
int3
jmp
adc
cmovnp
testl
js
mov
inc
nop
movsl
add
adc
mov
jns
sub
add
fldl
jb
xchg
clc
loop
outsb
pop
add
add
push
add
adc
add
sbb
dec
add
and
sub
cmp
dec
pop
mov
cmp
and
add
add
movsb
scas
jns
arpl
push
gs
lock
and
pop
add
sahf
dec
mov
push
pop
push
xchg
mov
and
in
adc
dec
out
sub
sbb
add
push
into
js
inc
call
push
stc
lock
inc
xchg
sub
sbb
or
or
adc
movsl
sbb
addr16
in
xchg
cmp
sbbb
inc
test
dec
decl
add
lock
cli
jg
pop
cmp
jne
mov
test
and
push
mov
fadds
das
add
xchg
dec
pop
addb
hlt
jne
icebp
add
loopne
jp
dec
xor
fdivl
mov
add
inc
insb
popa
jae
jno
add
sbb
loope
test
lock
add
bound
add
mov
sbb
mov
sbb
loope
data16
in
mov
add
pop
loop
and
lret
movups
jo
mov
mov
or
movsl
cld
lock
adc
inc
xor
hlt
jmp
add
arpl
adc
sbb
lahf
or
dec
ds
addb
iret
movsl
sub
popa
dec
pop
loop
mov
lds
cmp
fsubrl
mov
jle
ljmp
jp
inc
and
data16
xchg
pop
aad
adc
add
int3
or
add
scas
cld
fnstcw
push
mov
lea
mov
push
pop
stos
inc
nop
and
cmpsl
jecxz
xor
add
clc
xchg
cmp
gs
push
into
jnp
jge
scas
cwtl
ljmp
js
xchg
push
insl
and
clc
push
xchg
adc
call
ja
lock
sub
mov
rcrl
out
in
fdivrl
jge
push
pop
add
ret
pop
popfw
and
or
iret
in
xchg
push
cmpsb
test
pop
xlat
or
pop
pop
lcall
clc
es
add
mov
ret
pop
jg
fs
es
mov
dec
xchg
imul
add
inc
push
cmp
jne
ja
add
and
adc
sbb
mov
je
ds
shlb
or
add
sub
add
in
mov
add
mov
clc
pop
dec
inc
jl
mov
add
push
push
mov
push
rorl
mov
fildll
cmp
movsl
sub
adc
adc
pop
addb
test
fstpl
minps
scas
lock
xchg
dec
mov
cmp
test
int
sub
dec
lds
bsf
orl
pop
push
or
movsb
jmp
shll
es
sbb
or
push
xor
inc
add
rcrl
cmp
adc
call
fistpl
cmp
sbb
mov
mov
dec
sbb
lea
mov
mov
cld
mov
es
clc
in
sbb
lcall
dec
mov
cltd
add
imul
mov
jp
mov
mull
xchg
adc
xor
jecxz
pop
cwtl
pop
push
push
or
adc
sbb
nop
ret
mov
or
dec
pop
and
cmp
add
das
or
jge
pusha
cmpsl
pop
xchg
add
push
adc
sbb
add
mov
or
and
popw
adc
pop
or
push
mov
pop
add
add
lods
mov
push
mov
push
mov
out
jno
mov
add
adc
addb
xchg
mov
ja
scas
or
ret
sbb
inc
pop
add
mov
adc
in
int3
add
stos
fdivs
add
xor
or
imul
sub
cmpl
aad
pop
mov
cmp
xchg
mov
inc
adc
push
mov
pop
es
xor
or
mov
push
iret
sub
xchg
or
add
pop
test
test
jbe
shlb
std
add
jg
dec
out
and
aaa
add
pop
rolb
movsb
or
jne
jae
jnp
iret
or
xor
xchg
adc
or
clc
sub
mov
pop
mov
arpl
add
mov
in
jg
mov
add
or
adc
std
loope
inc
cli
orb
cld
push
xchg
add
popa
cmpsl
dec
hlt
popf
sub
add
mov
repnz
rol
notb
jg
in
and
hlt
xor
ljmp
dec
cltd
fsubrs
sub
adc
add
push
leave
jo
adc
ret
mov
clc
rorb
sub
push
and
in
rolb
adc
sub
add
inc
xor
add
data16
into
ret
add
lcall
add
jns
or
push
loop
pop
add
cmp
jb
rolb
cwtl
mov
sub
inc
push
pop
cli
cmp
mov
or
sbb
add
test
pop
popf
clc
push
or
sbb
mov
inc
dec
nop
or
jbe
mov
sub
outsl
inc
addl
mov
push
dec
cmp
fdivrl
jecxz
adc
in
rorl
fwait
mov
lret
and
je
add
dec
ja
or
icebp
jb
or
sbb
andb
inc
jae
adc
dec
xchg
push
mov
aad
mov
sbb
sub
and
or
jp
add
inc
adc
add
imul
addb
jns
daa
lods
sbb
add
adc
and
mov
dec
inc
xor
sub
xchg
add
nop
dec
and
in
push
es
testb
add
mov
adc
inc
ljmp
xlat
movsl
insb
adc
enter
adc
addb
rolb
fidivl
inc
lret
sbb
imul
dec
mov
dec
or
mov
pop
pop
das
pop
pop
mov
add
pop
xchg
cmpsl
aad
sub
call
add
adc
lock
add
xor
dec
inc
scas
xor
push
add
cltd
sub
xchg
in
xchg
adc
das
mov
call
aam
inc
add
add
lcall
loop
in
xor
nop
subl
int
push
pushf
inc
aam
push
subb
mov
dec
scas
sub
pop
push
xchg
mov
and
sub
add
adc
or
nop
inc
jl
add
push
mov
pusha
repnz
cmp
call
cmc
into
add
lods
xchg
cmp
or
xor
xchg
jne
je
outsl
insl
adc
imul
mov
push
out
mov
scas
xchg
cmp
loop
and
faddl
dec
add
push
xor
sub
push
mov
push
mov
out
adc
jb
add
je
mov
add
iret
incl
jmp
out
or
add
sbb
les
shrb
add
dec
mov
fwait
dec
dec
loopne
add
neg
push
roll
out
leave
add
push
pop
jle
test
xor
or
xchg
movsb
add
icebp
push
scas
mov
mov
int
push
fwait
aaa
inc
mov
dec
add
xchg
push
arpl
mov
push
mov
add
es
inc
sarb
cwtl
mov
fwait
enter
add
cmpsb
jo
jp
add
hlt
icebp
xor
mov
rol
imul
add
jmp
mov
bound
scas
add
roll
pop
push
inc
insb
fiaddl
add
adc
pusha
and
push
mov
cmpsb
add
push
mov
es
add
stos
cmc
loop
xor
in
mov
push
lock
inc
cmp
add
xor
push
mov
cld
push
jo
add
pop
lock
sahf
lea
add
and
loopne
mov
xchg
adc
add
dec
pop
push
loopne
adc
test
mov
repz
enter
ljmp
stc
mov
mov
in
mov
inc
repnz
pop
out
enter
xchg
push
loop
mov
lods
insb
add
xlat
dec
sbbb
add
imul
push
pusha
add
pop
icebp
and
fdivr
inc
add
pushf
hlt
fistpl
inc
cmp
and
mov
repnz
aaa
mov
add
hlt
xchg
jae
jmp
mov
int
cmp
in
dec
push
pop
jle
cld
es
add
jmp
inc
test
sbb
adc
shlb
dec
inc
enter
daa
xor
xchg
push
mov
pop
dec
push
dec
das
iret
mov
addb
popf
push
jb
sar
add
xchg
sub
add
ficoml
enter
mov
dec
push
pop
sub
mov
xchg
xor
adc
movsb
cltd
pop
xchg
clc
mov
adc
xchg
adc
add
xchg
lds
cmp
roll
adc
sar
daa
xchg
fists
orl
data16
insl
dec
add
jbe
jge
xchg
lods
mov
ret
fistpll
add
adc
stc
add
ds
push
and
jns
mov
shl
ljmp
or
popa
pop
call
adc
stos
and
mov
add
sub
dec
movsbl
pop
cmp
jae
cs
sub
rcr
or
add
or
pushf
add
sbb
sbb
rcll
adc
shlb
pop
loope
adc
push
push
add
xchg
sub
daa
inc
sbb
cmp
pop
in
sbb
add
sbb
mov
push
ret
nop
mov
aas
dec
out
jbe
inc
std
repz
mov
push
mov
nop
or
sbb
sbb
cmp
and
push
and
sub
sub
xor
int3
fmull
pop
ja
xor
leave
call
xorps
mov
outsb
add
neg
and
adc
sub
add
lea
or
mov
into
adc
and
mov
mov
les
add
sgdtl
out
pop
imul
insb
pop
loop
roll
loopne
lods
gs
filds
sub
inc
sti
out
xor
cld
or
sub
mov
test
imull
popa
and
in
cmp
add
jbe
call
add
movb
cmp
add
push
in
xchg
cld
leave
cmp
xor
pop
or
add
pop
test
mov
aas
fdivrp
xor
fs
sahf
and
rclb
add
mov
add
jecxz
or
mov
or
gs
es
stos
add
cmp
addl
jl
xchg
fs
sub
test
enter
fsubs
mov
mov
js
aas
push
push
std
pop
pop
call
mov
cltd
adc
mov
mov
nop
and
inc
fcomp
mov
add
add
nop
movsb
dec
in
filds
mov
adc
adc
hlt
cs
and
push
ja
add
into
nop
out
add
out
andb
mov
sub
jp
push
xchg
add
insb
les
add
iret
roll
scas
add
jmp
std
mov
and
add
daa
mov
and
js
pop
cmc
add
pop
pusha
mov
insb
iret
jo
je
lahf
sarl
or
mov
inc
add
ror
arpl
xor
mov
add
repnz
into
adc
adc
scas
sbb
push
inc
add
xchg
in
add
push
in
inc
subb
fs
cmp
add
xor
or
push
cmp
inc
je
dec
mov
push
add
and
mov
nop
add
push
push
je
in
xor
and
push
inc
js
xchg
sbb
lock
nop
pop
repz
mov
xchg
inc
pusha
sbbl
pop
dec
xchg
cmp
and
sarl
out
add
xchg
pop
sub
int3
xor
add
or
sbb
add
sbb
lret
jnp
inc
add
adc
push
test
push
int3
inc
test
dec
xor
icebp
and
loope
add
outsb
jo
cmpsb
adc
jge
or
and
adc
add
add
jmp
cmc
inc
in
rolb
jb
lds
or
pop
and
adc
add
inc
add
inc
xlat
add
mov
call
mov
inc
add
divps
in
test
or
jecxz
mov
adc
xchg
test
cmp
mov
mov
pop
cltd
push
mov
add
or
dec
pop
addb
adc
or
adc
pop
inc
sbb
add
pop
xor
xchg
icebp
xchg
add
jl
xor
insb
test
pop
dec
sub
add
pop
pop
sbb
pusha
cmc
adc
mov
inc
rolb
dec
stos
adc
nop
push
lods
fidivrs
aam
cltd
pop
sbb
dec
mov
jecxz
int
addb
or
and
cmp
pop
adc
mov
sbb
mov
ret
out
dec
dec
push
inc
lods
add
nop
or
jns
cmp
add
cmc
std
push
addl
and
dec
or
sub
or
add
xor
xor
sbb
add
sbbb
notl
dec
mov
inc
inc
adc
mov
jae
icebp
jnp
addb
movl
push
push
and
scas
repnz
adc
outsb
cmp
sub
sbb
dec
movsl
add
jg
push
inc
push
add
mov
fwait
add
pop
stos
add
pop
add
int
loopne
pop
pop
push
incb
outsl
push
mov
add
stc
shll
push
sbb
and
sub
nop
shrb
push
ret
add
enter
int
leave
add
outsl
xchg
imul
in
subb
add
incl
addl
rcll
cwtl
hlt
or
cltd
aas
jg
sub
push
xlat
aad
lock
sub
inc
sub
mov
sbb
addr16
add
call
jae
int
or
sub
cmc
push
cmp
jb
test
enter
inc
gs
out
iret
add
jae
lea
orb
call
jg
or
add
enter
xor
sbbb
filds
faddp
aam
dec
add
add
adc
aaa
jbe
outsb
icebp
inc
dec
mov
sub
xor
loope
nop
sarb
add
adc
jo
ss
sub
xor
cli
xchg
cmp
dec
js
ja
add
cmp
sub
mull
bound
mov
jg
mov
and
ss
jg
inc
pusha
ret
jo
mov
mov
add
sub
mov
dec
in
nop
xchg
in
add
jnp
rolb
mov
and
dec
int3
push
and
cmpsb
add
ss
rcll
aas
sub
orb
ret
push
cmp
aas
sbb
outsl
xor
pop
enter
cmp
jecxz
aas
fsubs
add
push
dec
push
pop
cmp
mov
int
dec
add
movsb
fadds
faddl
adc
or
push
add
ss
loopne
insb
fs
jae
les
mov
jno
add
push
lret
ljmp
jb
xor
xchg
mov
scas
jne
add
jecxz
push
add
add
cmp
mov
ret
xor
add
lock
cmp
dec
add
ret
movsb
pop
cmc
mov
push
inc
lods
cmp
fstpt
orb
shlb
leave
pop
stos
loop
lcall
mov
sbb
test
mov
lods
gs
jge
pop
sbb
mov
fiaddl
sbb
jecxz
push
pop
dec
mul
push
pop
aas
inc
push
add
sti
shr
not
add
call
cmp
cmp
shl
out
jmp
cli
pop
add
sti
and
fcmovnu
ror
add
or
jmp
add
cmp
mov
add
mov
in
clc
jmp
adc
insl
push
fadds
out
cltd
out
adc
sbb
outsl
add
js
jmp
add
cmp
cmp
xor
jmp
or
add
cmp
scas
je
pop
test
sahf
inc
push
add
js
mov
iret
adc
sbbb
mov
and
mov
loop
cmp
sbb
or
stos
xor
inc
add
and
pusha
enter
repnz
cmp
shr
scas
in
std
iret
xor
lds
cltd
jns
pop
jp
scas
jg
inc
movb
fisttpl
loope
push
pop
add
sub
ret
insb
ljmp
push
and
push
xchg
call
mov
das
jecxz
or
cmp
mov
push
inc
out
pop
das
cli
push
movsb
in
rolb
xchg
gs
push
adc
xchg
xchg
sarb
in
add
xchg
stc
add
shll
and
nop
pop
cld
mov
push
orb
out
push
xor
or
push
std
add
cmp
ja
mov
lcall
adc
sbb
fnstenv
and
add
mov
inc
add
and
cmp
add
outsb
xor
nop
call
add
test
and
pop
cmp
jae
cld
nop
add
adc
adc
pop
jg
mul
pop
xor
add
mov
jmp
push
clc
imul
add
xor
jl
xchg
mov
jno
add
and
adc
mov
add
push
sub
xchg
add
inc
sti
les
xor
sbb
imul
pop
dec
or
mov
or
lcall
out
insb
fcoms
sbb
add
or
push
add
clc
xor
add
add
xchg
scas
rorl
xchg
adc
and
dec
loopne
adc
dec
test
and
jns
or
ljmp
dec
das
testl
loopne
add
pop
fcomps
mov
inc
orl
add
fsubl
mov
jbe
xor
rol
rol
pop
pop
pop
mov
pusha
cwtl
mov
fs
int
mov
inc
and
add
sub
rolb
pop
lock
pop
loopne
aas
add
inc
cwtl
or
cmp
push
outsl
sub
xor
mov
jnp
jp
mov
and
push
add
shl
jne
sbbb
or
insb
sbbb
mov
mov
push
pushf
add
aad
ja
out
int3
pop
flds
adc
jle
aam
outsb
xchg
pop
in
add
add
mov
filds
jge
mov
and
xchg
push
test
cmc
inc
scas
lcall
sbb
sub
int
sub
inc
ffree
add
call
jl
mov
packssdw
mov
jge
lea
lds
push
jns
cs
xchg
movsl
nop
mov
movsb
push
roll
or
and
inc
fiadds
std
and
inc
decl
cli
push
add
shll
loope
mov
call
mov
add
or
sbb
xor
add
jo
and
imul
mov
clc
lahf
hlt
stos
add
into
mov
ja
add
inc
incb
int3
push
call
push
sahf
mov
jl
test
mov
inc
add
adc
sub
xchg
stos
icebp
pop
mov
inc
sbb
adc
inc
xor
sbb
jmp
xchg
shl
and
fcomps
push
lock
push
pusha
pop
or
scas
testl
xor
push
mov
inc
xor
sub
mov
jnp
lock
js
add
and
adc
mov
and
add
shrl
ror
mov
inc
jns
cmpsb
mov
add
adc
mov
xchg
pop
lock
mov
rolb
adc
imul
add
enter
dec
mov
pusha
es
icebp
imul
stos
cmc
rclb
add
jle
cmp
sub
adc
addl
sub
add
movsb
cs
in
rorl
jbe
add
pop
adc
sbb
xor
inc
mov
adc
adcb
push
and
add
mov
adcb
mov
cs
cwtl
or
add
and
jmp
movsb
pop
cmp
out
cmc
inc
and
push
repnz
dec
nopl
adc
clc
aaa
pop
ret
or
rorb
adc
or
mov
mov
cmpl
nop
mov
xchg
rcl
push
in
or
clc
mov
lock
test
adc
flds
outsl
jne
add
in
and
pop
nop
xor
mov
lea
add
lahf
call
jmp
push
orl
sar
pop
jno
and
mov
or
adc
insl
hlt
test
inc
and
cmp
or
in
sbb
add
repz
nop
pop
es
js
inc
ljmp
add
jecxz
icebp
add
sbb
mov
mov
imulb
jo
cmp
pop
adc
movb
fwait
sub
add
adc
add
pop
out
inc
daa
subb
addb
out
pop
aam
mov
repnz
add
rorl
and
add
cmp
aam
xor
inc
addr16
add
and
sbb
lcall
xor
test
push
lods
les
push
out
and
popa
hlt
inc
sub
fstp
add
out
fdivrl
adc
pop
ljmp
add
testb
pushf
push
repnz
xchg
add
add
or
pop
mov
cmp
sbb
mov
add
dec
or
cmp
adc
sub
lds
xchg
push
int3
ljmp
subb
hlt
out
adc
add
test
pop
ficoms
inc
add
dec
sbb
push
pop
adc
loopne
out
xor
cmp
movsb
inc
sbb
adc
frstor
pop
repz
mov
jns
push
cmpb
rcr
adc
lcall
ret
push
aas
daa
xor
xchg
adc
mov
mov
arpl
pop
xchg
push
pop
nop
adcb
mov
add
pop
xchg
arpl
cli
add
shl
popf
fidivrs
mov
loop
inc
cs
sbb
pop
add
push
pop
std
jl
add
aas
cld
test
lock
add
lret
and
rcrb
sbb
dec
mov
and
imul
or
pusha
aad
lds
adc
mov
js
mov
jae
call
sub
pop
int
adc
repnz
pop
lea
adc
jb
test
ljmp
adc
cs
adc
sti
sub
jmp
loop
jns
add
or
adcl
pop
enter
mov
mov
dec
sbb
leave
mov
push
or
cmp
add
out
cmpsl
xlat
into
xchg
add
or
rcl
sahf
pop
not
push
orb
hlt
adc
jno
xchg
mov
mov
sbb
and
icebp
cmp
add
xor
or
test
jne
scas
adc
mov
xor
adc
insb
and
enter
and
stos
pop
cmp
and
test
adc
jae
push
push
and
subb
mov
aaa
xor
mov
sarl
movsl
popa
mov
in
sahf
cmp
jmp
insl
enter
sbb
pop
adc
mov
mov
add
push
aaa
and
add
aas
shll
add
pop
lea
or
mov
test
mov
cli
sbb
sub
aaa
xchg
or
adc
lret
inc
and
les
add
add
aas
adc
out
icebp
push
or
mov
pinsrw
pop
or
add
xor
lods
pop
dec
sbb
mov
or
or
sub
jle
mov
cmp
les
push
outsb
popa
in
popa
sub
or
cwtl
divl
cld
and
les
adc
jecxz
mov
dec
xchg
inc
in
pop
sti
call
push
or
lds
sbb
and
fnsave
dec
add
cmp
adc
push
xchg
mov
iret
add
push
and
cli
jl
sbb
mov
sti
and
mov
push
adc
jbe
ja
call
jmp
mov
sbb
dec
incl
adc
out
rorl
adc
pushl
cmc
lock
loope
icebp
push
shlb
jo
iret
xchg
shrb
mov
aaa
sbb
sub
incb
lock
mov
imul
add
sbb
sbb
push
or
out
add
sub
lea
scas
std
push
or
ljmp
pop
movsb
mov
mov
mov
xchg
aam
call
popf
mov
pusha
ljmp
call
pop
fdivrl
xchg
pop
loop
jmp
mov
xor
mov
push
mov
lahf
xorb
cltd
jns
ja
add
aaa
shrl
or
ret
out
shr
mov
push
jbe
and
add
inc
in
fucompp
jb
cli
mov
lcall
and
add
xchg
xor
mov
lea
icebp
or
xchg
arpl
or
orb
lcall
add
ljmp
andl
sbb
xchg
rolb
adc
inc
pushf
and
orb
xor
mov
and
sub
sbb
dec
cmpxchg
xchg
adc
mov
push
test
out
cmp
test
mov
pop
aas
cmpsb
xor
outsb
sbb
adc
add
and
cs
cmp
add
sbb
add
sbbl
sub
xor
minps
add
aam
mov
les
sbb
and
inc
mov
dec
add
ficoms
loop
add
cmpsl
and
pop
mov
pop
and
aad
cld
sub
sbb
add
ss
sbb
test
out
sbb
lods
jle
neg
pop
loope
inc
inc
xor
std
rorl
xchg
or
jl
jg
lcall
xchg
pop
xor
add
flds
fsubrs
sbb
pop
test
inc
call
pop
fsubrl
or
lahf
dec
push
or
xor
psubd
add
cmpsl
and
sbb
or
ret
nop
ftst
pop
add
adc
and
xchg
xchg
in
leave
xchg
pop
cld
out
mov
adcb
add
and
mov
out
call
add
and
xor
add
lock
xor
add
and
adc
jmp
loop
lods
ds
xor
das
loope
and
imul
les
mov
das
xchg
popa
loope
add
and
jnp
mov
pop
or
and
gs
xor
xchg
out
repnz
std
es
and
push
std
and
stc
and
rorb
push
adc
mov
call
bnd
unpckhps
jns
out
stos
icebp
or
rcr
cmp
ljmp
daa
xor
ret
dec
sub
jg
inc
sbb
pop
mov
dec
or
pop
xor
sub
xlat
mov
cmp
cli
test
pop
cmp
lds
jp
jecxz
call
sti
add
sub
push
ss
dec
add
xchg
jnp
pop
icebp
push
outsl
mov
adc
jb
loop
xlat
and
dec
jg
les
das
hlt
and
imulb
sub
inc
lret
pop
add
pop
sbb
and
pushf
push
push
and
inc
cs
pop
dec
cmc
lahf
add
in
mov
cmpsb
dec
sbb
xchg
jmp
out
lret
in
dec
jmp
inc
sub
inc
loopne
dec
jbe
pop
sub
xchg
mov
jecxz
add
repz
add
add
mov
icebp
mov
or
sub
movsl
insb
mov
lret
pop
ds
xor
mov
sub
es
push
push
stc
arpl
loopne
aas
dec
call
xor
ss
divl
rolb
jp
pushl
test
mov
and
jg
or
mov
mov
movsl
repnz
push
dec
sub
loope
or
jge
and
cmp
inc
clc
subl
cld
mov
inc
xchg
pop
jo
sub
js
shlb
lret
sub
mov
cs
sbb
ret
adc
mov
and
out
lahf
inc
jle
push
pop
push
xor
test
and
cld
std
push
stos
mov
filds
test
pushl
sbb
add
je
loop
das
jle
add
and
cmp
jmp
pop
add
and
into
in
outsl
inc
add
loope
das
add
mov
cltd
add
or
and
das
pop
aas
add
aaa
fs
aas
imul
push
inc
cmp
inc
xchg
dec
enter
xor
push
mov
add
xor
lods
outsb
subl
add
and
add
mov
xor
out
adc
push
or
dec
adc
inc
insb
adc
iret
subb
icebp
push
add
adc
add
cmp
pop
dec
mov
pop
jae
inc
shl
or
insb
cld
xchg
or
jmp
cltd
pop
icebp
addr16
or
mov
mov
sub
jg
cmpsb
adc
xor
inc
cmp
mov
int3
pop
mov
in
add
mov
gs
cli
inc
xor
pmaxsw
in
cmpsl
lock
adc
in
mov
int
push
loop
int3
stc
sub
adc
or
add
pushf
cmpb
pop
jns
xchg
fsts
jg
lds
call
leave
jno
push
filds
xchg
or
mov
sub
les
inc
cmp
daa
adc
scas
sbb
inc
xor
aas
adc
test
hlt
pop
or
inc
add
push
pop
sub
adc
out
mov
or
push
xchg
pop
add
js
subl
movsb
jg
add
bound
dec
or
push
dec
push
adc
xlat
mov
push
jns
rsqrtps
push
shl
xor
lret
decb
push
dec
adc
or
ret
inc
push
repnz
aas
call
inc
lock
jo
push
aas
jne
add
ret
jg
sbb
push
push
jle
or
cmp
jge
ret
mov
stos
push
mov
inc
aam
sar
in
jne
jp
cs
xchg
add
mov
in
int3
cmp
scas
mov
inc
cmp
inc
dec
loopne
pop
enter
xchg
shlb
ljmp
lret
in
std
add
sub
mov
loop
push
dec
jo
sarb
add
pop
add
or
dec
add
and
xor
jbe
pop
shrb
shl
add
sbbl
rolb
xlat
sub
xor
das
pop
leave
xchg
add
repnz
addb
int3
loop
out
add
stc
test
xor
dec
and
xchg
dec
or
add
lods
test
loopne
in
sub
repz
imul
pusha
inc
adc
into
push
cmp
testl
and
adc
add
push
cmp
mov
jecxz
push
add
cli
cmp
add
pushf
stos
adc
inc
sbb
push
mov
mov
dec
into
add
inc
sbb
and
enter
sub
and
dec
pop
xchg
add
cmp
add
fs
imul
jg
xchg
dec
mov
push
add
pop
or
cmp
enter
add
outsl
clc
push
hlt
push
mov
test
xchg
ret
ss
hlt
psrad
dec
mov
lock
jo
mov
fldl
nop
js
jl
pop
mov
cmp
and
and
pop
pusha
dec
mov
stc
jge
mov
cld
scas
xor
rcll
inc
pushf
jp
jo
adc
movsb
mov
inc
mov
jl
jg
xor
jnp
adc
and
add
sbb
sbb
dec
cmp
xlat
outsl
movb
pop
sbb
add
push
inc
lods
or
or
aad
aas
inc
xchg
outsb
sbb
pop
in
inc
out
enter
and
mov
add
mov
mov
rolb
pop
cmc
mov
fadd
jb
int3
add
inc
shrb
aam
and
adc
add
push
mov
and
jl
mov
add
daa
aas
add
jp
loopne
xor
add
inc
hlt
jmp
clc
sbb
shll
lret
cld
xor
adc
pop
mov
cmp
cmc
jbe
or
xchg
incl
mov
adc
ljmp
and
cmpsl
add
adc
ljmp
xor
sarl
add
mov
push
call
mov
inc
shlb
push
addl
or
push
stc
add
les
ds
xchg
pop
enter
mov
mov
adc
mov
mov
push
or
or
mov
rcrl
and
out
inc
cmp
call
loop
add
adc
push
jmp
repnz
jecxz
jnp
jns
add
add
add
dec
sub
cmp
add
xor
rorb
je
jcxz
icebp
and
fildl
or
sbb
ret
mov
add
xor
pop
push
scas
inc
pop
sub
jmp
xor
xchg
xorb
nop
jle
leave
mov
inc
ret
mov
or
sub
adc
shl
or
xadd
iret
or
cmp
or
leave
shlb
std
fdivr
sbb
sbb
fld
sbb
add
sbbl
add
sbb
add
add
rcrb
faddl
adc
aam
aad
ret
xlat
rolb
adcb
js
xchg
shlb
roll
add
shrb
shlb
popa
xor
shlb
add
xor
ss
call
add
shlb
hlt
cld
sarl
and
add
aas
cmpb
cmp
cli
cmp
cmp
add
loopne
add
stc
addl
sub
inc
sub
jnp
pop
sub
lock
and
out
loopne
inc
int
sub
in
and
into
and
loopne
and
and
and
data16
and
mov
popa
cmp
mov
stos
mov
bound
or
add
andb
sbb
shrl
stc
shrb
sbb
stos
fisubrs
imul
add
test
push
mov
add
nop
push
jg
jg
ja
sbb
cmp
cmpl
shlb
mov
loopne
into
mov
mov
inc
jbe
jb
mov
mov
jae
add
inc
mov
push
rcll
add
inc
xchg
push
xchg
ja
xchg
push
push
xchg
rclb
xchg
adcl
pop
sbb
sbbl
fwait
inc
pop
mov
sbbb
std
mov
dec
std
dec
fmuls
mov
orl
and
lea
orl
jmp
addl
add
inc
mov
pusha
push
out
add
ret
push
push
add
jecxz
in
pushf
loop
pop
repnz
loope
pop
push
bound
popf
push
mov
mov
cmpsb
mov
sbb
push
push
push
fimull
or
add
rcrb
fcompl
dec
pop
mov
dec
and
adc
and
in
and
jae
call
mov
out
add
cmp
sbb
adc
and
push
inc
xor
push
rcll
test
jo
mov
mov
and
fistps
xchg
pop
xchg
inc
arpl
call
add
xadd
fwait
data16
add
scas
fsubrs
cld
mov
add
or
xor
ret
shr
jae
push
mov
cmpsl
sar
jne
cmp
leave
loope
add
call
push
ljmp
ds
sub
lods
pop
repz
movsb
add
inc
shl
scas
daa
add
hlt
aaa
in
sbb
cld
movsb
and
add
out
xor
pushl
pusha
add
verw
stc
inc
inc
je
and
or
mov
loop
push
adc
xchg
sbb
push
rorb
add
hlt
jns
xlat
mov
icebp
pop
add
add
add
push
xchg
push
add
pop
xchg
add
inc
shl
jbe
add
sbb
push
add
sub
mov
sbb
int3
hlt
add
xor
sub
push
cmp
adc
sub
pop
jg
add
sbb
rclb
add
or
dec
dec
adc
cmp
add
inc
mov
adc
repz
add
and
jmp
add
push
jae
test
add
ret
jecxz
add
xor
cmp
push
lods
faddl
cmp
rol
or
and
cs
or
bnd
dec
rep
popf
mov
into
roll
adc
addl
xor
cmp
push
fadd
addr16
fdivp
lock
stos
fsts
out
adc
add
outsl
and
xchg
jno
or
test
cmp
push
je
sbb
push
adc
push
out
mov
adc
dec
aas
test
adcb
movsl
incl
adc
jo
in
xor
adcl
add
pop
daa
dec
repnz
cmpl
dec
add
mov
xor
sbb
hlt
stc
mov
scas
or
pop
push
lods
mov
push
jo
enter
xor
ret
sub
adc
pushf
lods
pop
mov
add
cmp
dec
nop
adc
push
movsl
sbb
cmp
lods
adc
and
das
adc
movsl
sub
or
cmpsl
in
mov
xchg
inc
sbb
fdivl
xor
add
add
repnz
clc
repz
and
add
lock
arpl
dec
mov
pop
pop
in
aaa
add
inc
add
adc
inc
push
rclb
leave
push
xchg
cmp
mov
inc
adc
mov
push
fcoml
sarb
sub
sub
adcb
repz
adc
sub
inc
or
enter
mov
adc
stos
and
and
int3
cmp
dec
addr16
or
pop
xor
lret
pop
cltd
or
inc
nop
push
adc
push
stos
enter
xor
lock
or
arpl
cmp
xlat
shrb
mov
pop
decb
xchg
mov
cld
test
repnz
xor
pushf
and
add
or
sbb
push
mov
out
push
loopne
adc
mov
dec
sbb
inc
loope
andb
dec
and
dec
repz
sub
fmuls
subl
les
adc
push
pop
je
jne
cmp
or
or
cld
mov
cmp
inc
push
je
push
or
and
daa
lock
pop
add
mov
jo
and
add
repnz
cwtl
loopne
lar
daa
shr
insb
pop
pusha
xor
push
sbb
xor
dec
nop
mov
dec
add
aad
sbb
test
sbb
jmp
pop
mov
inc
dec
loope
mov
cmpsb
push
pop
push
pushf
and
in
push
jo
or
mov
enter
jmp
or
jnp
vunpckhps
andb
mov
clc
add
pop
and
scas
xor
push
and
aas
fists
xchg
sbb
js
xor
pop
add
sti
out
cmp
pop
mov
add
loopne
sub
add
mov
sbb
pop
xor
pop
pusha
dec
and
loop
lds
sub
add
cld
into
aad
mov
cmpsl
add
and
movsb
jne
mov
insl
lahf
aas
mov
adc
add
sbb
test
scas
push
adc
or
xchg
bound
insb
add
dec
cmp
sbb
jmp
sub
call
outsl
cli
out
push
or
cmp
imulb
xchg
clc
xchg
dec
inc
lods
inc
jecxz
bsr
mov
adc
dec
add
mov
enter
xchg
push
cs
add
loopne
mov
je
pop
ficomps
mov
pop
xchg
jl
cmc
rolb
adc
sub
lret
xorps
ret
std
pusha
mov
jo
add
jecxz
jb
in
jnp
cmp
daa
pop
jo
adc
cmpl
loope
shlb
jne
add
lea
add
cmc
call
or
jg
sub
push
add
or
nop
js
push
in
dec
adc
sub
adc
add
das
aam
movsb
lods
add
fimuls
add
jns
inc
cwtl
mov
rorb
cmpsb
shll
mov
lcall
adc
ljmp
inc
arpl
fiadds
sbb
jb
es
push
pop
add
and
pop
sub
xchg
jo
add
aam
dec
or
lahf
les
aas
push
mov
push
mov
cmp
add
sub
lock
lret
dec
shrb
jo
add
stos
shl
icebp
cmpb
mov
sarb
in
push
add
push
push
data16
sti
pushl
loopne
ljmp
sub
cld
add
mov
cmp
adc
add
repnz
jne
push
dec
adc
cld
repz
aas
add
mov
scas
add
loope
hlt
sbb
add
pop
sbb
sub
fwait
add
xchg
jl
add
mov
sbb
mov
add
sar
sbb
jl
mov
mov
hlt
inc
cmp
pop
gs
dec
jne
outsl
and
sti
insb
dec
fnstsw
rol
add
imul
cwtl
orb
xor
js
or
mov
and
or
xchg
insb
mov
test
lahf
pop
nop
add
add
fbstp
jnp
jecxz
lret
sub
clc
mov
in
mov
add
les
imul
push
cmp
sub
pop
in
cld
add
mov
je
scas
pop
mov
adc
scas
dec
add
pop
push
into
add
sub
int
mov
movsl
pop
xchg
in
lahf
add
mov
mov
cli
outsb
stc
push
adc
mov
or
add
movsl
or
or
sbb
pop
faddl
push
lret
xchg
or
pop
and
jl
pop
push
inc
jg
call
movl
sbb
out
add
inc
cmpsb
push
mov
and
and
cld
push
push
pop
addb
and
lock
cmp
add
dec
add
jl
add
gs
adc
mov
jmp
cmpsl
jns
or
daa
bound
add
or
mov
adc
hlt
scas
add
addl
add
push
jne
decl
jmp
mov
stos
push
loopne
cmc
xchg
xor
add
pop
rorl
call
lock
add
insl
fdivrs
jecxz
sbbl
dec
push
xchg
and
and
sbb
js
sbb
dec
dec
xlat
rclb
mov
neg
js
call
push
sbb
add
data16
add
es
dec
jne
flds
inc
push
test
add
pop
sub
icebp
push
das
cli
mov
dec
sbb
fstl
fdivrl
inc
sbb
mov
jge
in
adc
adc
loop
lea
js
add
lcall
jbe
cmpxchg
cmc
or
inc
movsl
dec
xor
jl
add
push
and
rcll
xor
sbb
adc
js
add
imul
sub
mov
jl
add
addb
lret
dec
test
lea
add
cmp
jge
repnz
pop
stos
sbb
or
sbb
pop
push
xchg
add
test
or
jnp
push
incl
sub
out
push
xor
cmp
rolb
or
push
sbb
adc
push
mov
dec
or
bound
rol
js
je
jle
es
inc
lahf
fs
sub
dec
insb
lock
mov
or
jecxz
testl
sbb
mov
pop
call
push
and
sbbb
bound
sub
push
es
mov
xchg
add
sbb
jns
jge
xor
sub
add
cmp
pop
or
jo
shlb
and
nop
mov
rolb
cmp
incb
sbb
pop
xchg
inc
jb
out
and
divps
add
aad
mov
and
lret
push
add
dec
sbb
pusha
sub
xchg
jnp
add
mov
mov
xor
shlb
mov
lods
repz
sbb
add
sbbb
cmp
pop
jb
add
movsl
mov
mov
data16
clc
inc
mov
jo
add
incl
jle
adc
cmp
push
ficoml
add
push
inc
mov
fisttps
cmp
mov
call
sub
btc
dec
mov
push
inc
andb
ljmp
inc
mov
add
mov
push
mov
jne
pop
add
adc
cmp
cmc
adcb
push
push
mov
mov
mov
gs
add
mov
cmp
lcall
add
loope
dec
sub
testb
pop
add
xchg
add
sbb
add
es
add
dec
push
add
pop
out
pop
out
enter
xchg
stos
mov
mulb
add
or
test
push
loopne
test
or
and
or
add
sbb
or
cmp
lea
mov
xchg
pusha
rclb
fmull
jo
aam
add
add
cmp
sbb
pop
mov
test
xorb
mov
mov
sbb
add
xor
scas
pop
push
add
jno
divb
lret
inc
add
sbb
ja
push
and
add
insb
mov
test
jmp
lock
or
push
or
and
aas
lods
sbb
push
ret
xor
loopne
adc
and
mov
sbb
push
fidivl
cwtl
loope
push
sub
pop
inc
pop
jl
push
push
icebp
mov
out
rcrl
jmp
xchg
into
ljmp
lock
inc
adc
hlt
pop
test
imul
cld
mov
push
int
mov
mov
adc
xchg
add
sub
xchg
adc
and
test
add
pop
cltd
test
and
lds
int3
push
arpl
pushf
mov
cmp
clc
jb
inc
cmp
jbe
dec
push
pop
sub
push
inc
push
pusha
push
shr
test
add
les
mov
dec
add
push
cmp
je
mov
xor
jno
movsl
add
stos
pop
adc
test
scas
test
jmp
xor
inc
or
rolb
pop
pushf
fisubrl
jbe
push
pop
jmp
aad
mov
or
jne
adc
mov
call
sub
pop
mov
inc
clc
test
in
jmp
repnz
jns
loope
and
pop
leave
cmc
mov
adc
xchg
push
fisubrl
lahf
std
insl
sbbb
inc
push
add
cmp
pushf
jo
xchg
add
jmp
mov
cmp
cli
add
popf
enter
fidivrs
add
add
adc
add
pop
ret
dec
or
incl
inc
jge
lock
fcomps
push
adc
mov
dec
sub
ret
mov
es
xor
adc
sbb
add
rorb
rorl
out
mov
push
add
loopne
sub
push
les
sbbb
cmp
sbb
adc
inc
add
mov
ret
xchg
add
mov
push
add
test
dec
inc
mov
ds
enter
and
inc
test
js
sbb
aad
cmovp
popa
fidivrs
gs
and
add
cli
xor
pusha
scas
mov
rep
mov
sarl
add
inc
jb
cmp
stc
mov
inc
cmp
clc
push
ror
sbb
cld
cmp
out
sub
xor
mov
out
popf
sbb
inc
fisttpl
icebp
add
add
inc
adc
fiaddl
pop
or
cmp
or
add
imul
fnstcw
push
int3
incb
iret
dec
cmpb
jne
add
cmpsb
out
je
pop
cwtl
in
add
push
xor
and
add
inc
in
aas
loopne
fmull
add
sti
dec
sub
add
or
scas
jne
or
mov
fs
in
inc
xlat
repz
add
xchg
js
and
inc
jns
cwtl
fstpt
mov
call
cmp
pop
jne
xchg
aam
inc
or
mov
ret
rclb
add
pop
adc
xchg
push
pop
mov
sub
add
sete
inc
insb
mov
push
push
je
pusha
shll
add
jecxz
jo
loopne
push
pop
les
rclb
inc
pop
pop
fnstsw
or
sbb
test
add
inc
pop
add
adcb
mov
jle
xchg
loopne
mov
mov
gs
push
and
loopne
sbb
xchg
jo
add
cmp
call
push
jae
fbstp
mov
or
mov
out
pusha
add
xchg
xor
xor
sar
add
shr
lock
mov
jnp
test
add
pop
add
pop
aam
clc
xchg
add
fcoml
xor
xor
xorps
add
inc
cmp
addr16
ljmp
mov
adc
dec
jg
cmpsl
inc
pop
sub
loopne
add
sbb
xchg
cmp
aas
add
adc
adc
pop
add
or
loop
add
dec
add
fmul
cltd
inc
imul
or
mov
add
fs
outsb
jbe
and
push
leave
mov
add
dec
into
cltd
cmp
adc
jmp
insb
pusha
and
add
cmp
fmuls
cmpsb
std
or
divb
adc
pop
test
pop
ljmp
enter
add
sbb
daa
pop
add
add
add
mov
lods
rcrb
add
stc
repnz
jns
jge
mov
enter
add
pop
or
insb
mov
dec
das
add
jg
xor
mov
loop
je
aad
cwtl
scas
push
mov
insb
or
add
cmp
ds
xchg
in
inc
add
addr16
jmp
inc
or
call
dec
adc
push
jg
add
pop
ret
int3
xor
cmp
pop
or
sub
cmp
or
add
inc
lcall
out
repnz
push
sbb
jne
add
clc
aad
stos
outsl
xor
cmp
and
dec
mov
mov
add
dec
cmp
or
sub
and
pop
in
enter
add
add
cmp
push
push
aam
pop
loop
adc
addr16
enter
add
add
adc
add
cmpsl
stos
and
pop
cmpsb
shrb
ret
sti
add
add
gs
addr16
sub
mov
add
jae
pop
je
cmpsl
push
addl
add
std
mov
mov
sahf
pop
mov
test
jle
cmpsb
sub
add
push
pop
ret
inc
dec
loope
add
or
xchg
xchg
cmp
pop
xor
hlt
sbb
pop
mov
repz
cltd
dec
sub
pop
out
lods
mov
sub
daa
lret
pop
in
call
test
jne
sub
or
jae
inc
adc
xchg
jge
insb
jg
lahf
push
adcl
push
jl
mov
push
push
lcall
adc
or
xorb
add
push
data16
mulb
or
shlb
pop
jne
dec
inc
out
adc
or
jo
inc
xorb
ret
inc
in
scas
loopne
add
or
and
incb
add
push
imul
sbb
add
fwait
lock
mov
adc
rcrb
addb
loop
add
add
adc
maxps
mov
push
stos
movsb
lret
les
add
fdivrs
add
or
lcall
inc
pop
pop
mov
jb
xchg
xor
mov
adc
add
mov
push
cli
sub
or
subl
bound
or
pop
movsb
shl
mov
push
stos
adc
fsubs
or
lock
jno
je
clc
lds
cld
loopne
xchg
push
nop
mov
inc
push
pop
cwtl
xchg
or
dec
add
adc
fstps
pop
or
add
add
push
lahf
lods
mov
sub
int
sbb
xor
cmpl
push
push
adc
call
jge
stos
fisubl
mov
cmovb
add
xor
jecxz
and
lea
push
clc
out
add
jbe
dec
add
mov
push
xchg
and
push
push
ud1
bound
sbbl
jb
or
int
pop
adc
xor
or
or
ss
sbb
add
xchg
addb
xchg
subb
sbb
popf
lock
add
xchg
popa
movsl
lcall
cltd
jo
mov
and
mov
add
movsb
add
jmp
or
ret
pop
inc
add
mov
repnz
adc
pop
jo
or
cs
and
push
int
out
fimull
test
adc
add
xor
shl
stos
mov
add
int
adc
push
sub
or
mov
cld
test
add
xor
or
inc
arpl
stos
mov
rorb
enter
inc
xor
clc
loope
jae
rcr
adc
call
push
pusha
push
mov
mov
add
jecxz
adcb
add
add
lretw
and
jp
mov
lods
je
bound
fs
enter
loopne
cld
add
imul
es
mov
mov
sub
pop
dec
add
mov
mov
mov
mov
mov
mov
movsl
push
rol
push
add
mov
shrb
add
add
adc
and
add
pop
stos
xchg
mov
add
rolb
push
lds
mov
aad
and
add
xor
mov
add
les
jne
push
jae
add
add
mov
push
pop
test
loope
mov
mov
fimull
add
outsb
push
pop
push
push
push
mov
add
std
adc
xor
test
clc
cmp
pop
inc
insl
push
inc
js
add
sub
jo
sub
jns
or
fadds
aaa
or
and
add
cmpsb
or
push
fsts
std
and
dec
test
xchg
orb
push
mov
lods
dec
dec
pushf
mov
inc
pop
cmpsb
and
mov
mov
sbb
nop
inc
adcl
mov
fwait
xlat
repnz
jl
push
out
push
andb
mov
pop
xchg
clc
ret
add
sub
imul
je
adc
cmpsl
clc
andps
or
outsb
xor
pop
push
hlt
and
mov
add
mov
push
pop
xor
addr16
repz
mov
jo
stos
sub
add
test
inc
add
lods
push
cltd
mov
adc
test
repnz
cltd
cs
orb
add
pop
sete
cmp
pop
mov
add
stos
mov
adc
push
mov
subl
ljmp
jge
sub
ret
add
dec
adc
lahf
mov
fbld
js
pop
adc
add
dec
pop
int3
add
push
ret
mov
add
gs
sub
aad
inc
mov
mov
movsb
add
push
and
aam
imul
push
stos
push
cmp
or
cmp
ds
push
or
mov
mull
mov
add
inc
or
dec
add
lds
jno
jb
call
les
repz
push
inc
addps
and
lahf
jp
stos
add
out
and
push
add
xchg
repz
add
mov
jmp
push
bound
xorb
xor
dec
or
nop
fs
add
pop
xchg
test
and
call
pop
xchg
js
mov
add
inc
mov
fdivr
fisttps
fwait
sub
outsb
add
push
xchg
test
in
add
adc
rclb
testb
add
jl
stos
or
add
call
add
push
sbb
jns
inc
or
push
lds
lea
movl
popa
xor
jp
nop
xlat
pop
inc
inc
push
xor
push
out
mov
sub
cmp
popa
ljmp
pop
ret
jmp
add
loopne
in
dec
cld
insb
dec
cs
out
jbe,pn
sbb
pop
inc
jae
call
movntps
test
les
add
mov
add
inc
jle
mov
inc
sbb
mov
mov
push
stc
jg
add
jnp
sub
ljmp
pop
and
jno
pop
lret
clc
xor
rcrb
add
cmp
cmp
and
and
aas
sub
outsl
jbe
and
xchg
push
fisttpl
add
pop
and
pop
sti
sub
bound
add
hlt
scas
xchg
ja
cli
xchg
les
lock
cld
fidivl
insl
add
leave
xchg
cmpsb
or
bnd
pop
xchg
add
outsl
lods
mov
jg
dec
test
test
add
sbb
in
or
aam
adc
jo
inc
xorb
aaa
addr16
add
in
ss
and
sub
jo
dec
shlb
and
cmp
sbb
push
add
in
movsb
pop
mov
and
xor
pusha
test
push
adc
push
hlt
cmpsb
pop
test
push
mov
and
popf
cltd
pop
pop
add
test
sub
and
pop
mov
cmp
push
add
or
mov
stos
out
ljmp
push
mov
andb
movsb
push
aas
sub
mov
flds
sbb
push
mov
in
or
sub
and
adc
leave
mov
imul
adc
xor
fisubrl
xchg
pop
scas
dec
mov
test
and
imul
lods
lds
xchg
jle
add
push
and
push
add
movsb
mov
inc
call
loope
add
sbb
push
lods
hlt
bound
add
xchg
pop
enter
std
jle
repnz
inc
mov
mov
clc
and
cwtl
faddl
mov
pop
sub
sarb
icebp
xor
jno
rorl
add
inc
or
push
add
leave
adc
jno
add
clc
repz
mov
mov
loop
add
jl
pop
adc
scas
addb
cmpsl
bound
adc
leave
push
int3
loope
js
jnp
or
clc
cli
shlb
int3
add
subl
js
mov
in
add
cmp
lcall
sbb
test
cmp
xchg
sbb
fsubrs
in
mov
pop
fcomip
cmp
xchg
mov
xchg
pusha
sub
hlt
push
push
cmpsb
cmp
jge
adc
add
jns
test
jnp
add
ja
cmp
adc
scas
cmp
add
push
mov
sub
add
jmp
or
and
mov
mov
xchg
mov
mov
pop
sahf
out
test
imul
aad
xor
hlt
lret
mov
add
or
add
mov
leave
xchg
add
int
push
daa
iret
test
aam
xchg
sub
xchg
xor
fcom
and
mov
pop
pop
mov
jb
shr
in
xor
cmp
push
int
add
test
jns
imul
jp
out
inc
pop
mov
add
mov
insl
pop
pop
add
adc
mov
xchg
mov
mov
inc
ja
mov
dec
add
xchg
xchg
js,pt
sbb
add
and
rolb
ficompl
pop
add
adc
jnp
pop
add
js
orl
mov
add
inc
fldln2
mov
push
vmwrite
jae
inc
fstpt
pop
sar
sub
andb
xorl
sbb
test
jp
dec
loopne
add
or
mov
and
cltd
sldt
inc
mov
clc
notl
xchg
or
jle
push
xor
mov
adc
sbb
out
add
mov
rclb
or
mov
jb
aam
inc
push
pop
and
push
std
mov
jo
push
mov
and
bound
popf
adc
enter
popf
sarb
add
cmp
and
test
cmp
cmp
lods
pop
mov
test
ljmp
jns
popf
ror
add
pop
add
test
fs
xor
scas
adc
mov
repz
pop
or
xor
ret
orb
push
sbb
jae
cmc
movsb
loope
add
jns
add
lret
sti
push
out
jbe
add
mov
mov
or
inc
lock
cmp
inc
mov
in
push
add
push
and
or
adc
pusha
mov
inc
add
ja
push
jo
icebp
rcrb
add
push
arpl
popa
inc
cmp
jge
xchg
outsb
imul
inc
dec
push
add
jl
pusha
jbe
add
popf
dec
fdivrl
imul
pop
imul
inc
push
ja
sbb
jns
add
sbb
cld
bound
out
xchg
or
pop
xor
outsl
add
add
pusha
push
mov
hlt
inc
sti
jmp
movsb
and
xor
add
jp
in
ds
movsb
sbb
aaa
daa
arpl
add
popa
jb
dec
pusha
smsw
jl
data16
push
inc
jp
adc
jno
call
arpl
pushf
jl
jg
sbb
dec
push
jbe
ja
inc
dec
js
jb
shrb
add
inc
outsl
out
bound
push
ja
imul
arpl
jo
in
js
aaa
addr16
mov
jns
inc
je
mov
adc
outsl
xor
mov
icebp
push
pusha
iret
inc
jg
and
push
dec
shlb
movsl
rclb
ret
xor
pusha
dec
iret
in
mov
sub
dec
jecxz
pop
into
adc
add
inc
addr16
jbe
pop
les
sbb
shlb
data16
test
lock
jp
add
outsl
imul
push
jecxz
jno
jne
xor
mov
xor
stos
ja
dec
arpl
mov
cmp
popa
imul
add
insl
jnp
inc
ret
sub
add
je
in
or
add
xlat
int
add
das
push
loopne
add
sarl
orl
pop
cmp
mov
jl
adc
lods
push
xchg
cmp
js
xchg
in
or
xchg
cld
add
mov
pusha
mov
dec
popa
sub
adcb
js
lock
dec
or
add
rcll
and
mov
cwtl
sbb
nop
adcb
xor
test
das
jle
clc
xor
std
shrl
jecxz
fs
stos
insb
push
lea
xor
or
imul
push
nop
popf
jl
jnp
mov
push
out
daa
push
sbbb
cli
pop
xchg
add
push
cmpb
mov
ret
pushl
and
repz
in
scas
imul
loope
jle
pop
stc
pop
mov
and
add
push
les
clc
rolb
mov
mov
bswap
fnstcw
cli
and
loop
aas
mov
pop
hlt
xor
loopne
add
shlb
sbb
pop
push
push
mov
psubb
leave
dec
or
adcl
stc
jle
add
mov
mov
add
xor
and
add
fistl
adc
cmp
adc
pop
ljmp
add
mov
xor
fisubs
in
inc
adc
mov
add
loope
push
push
rolb
and
mov
pusha
inc
pop
mov
iret
sub
rcll
repz
and
pop
jg
push
or
xor
and
data16
out
and
call
mov
sti
adc
sbb
and
sub
sub
enter
inc
xor
cmp
inc
xor
add
dec
or
lcall
mov
aam
imul
je
cmp
sbb
pusha
test
pop
adc
loop
in
xchg
xlat
push
out
movsl
mov
pop
pusha
ljmp
and
push
jo
inc
je
add
xchg
jl
mov
mov
jecxz,pt
push
cld
mov
out
lods
xchg
inc
mov
pop
xchg
mov
out
out
clc
add
or
int
fstl
jecxz
xchg
imul
into
cli
inc
call
sub
movsb
mov
or
leave
fsubrp
add
mov
and
adcb
add
xor
jmp
jne
add
pusha
insl
cli
stc
call
enter
stos
mov
mov
jnp
pusha
pop
in
cs
pop
add
les
int3
pop
call
fcoms
loopne
mov
mov
stos
and
rol
jp
nop
lock
call
mov
sar
or
mov
push
lods
call
sub
test
cmp
adc
adc
inc
sbb
add
loop
aas
cmp
aam
cmp
xor
pop
xor
and
icebp
cmp
sbb
lds
add
sbb
and
roll
add
mov
sbb
das
pop
rcrb
test
add
add
daa
xchg
add
jge
add
mov
pop
popa
add
xor
xlat
adc
inc
gs
scas
lret
ljmp
dec
or
aaa
or
adc
inc
mov
popa
sbb
add
xor
lea
sub
xor
lock
lahf
or
add
out
jg
add
lds
scas
cmp
add
ja
sub
sbb
cmpsb
decl
add
ljmp
add
adc
jne
pop
roll
add
push
clc
xchg
cli
aas
stos
stos
add
sbb
add
scas
cmp
mov
sar
sbb
lret
mov
push
nop
and
gs
in
aas
mov
pop
push
adc
in
push
cmp
jne
pop
add
jae
jmp
add
push
pop
iret
cmp
cmpsb
mov
add
adc
test
lcall
int3
add
push
cmp
jle
movsb
cmp
sub
aam
jl
lods
lret
jmp
sub
lea
stos
outsl
addr16
fsubrs
insl
pop
push
or
fcmovnb
and
pop
popf
lret
mov
test
add
jbe
cmpb
aam
jb
xor
push
aaa
add
movl
add
or
or
dec
sbb
or
shlb
std
cmp
ret
andb
lock
pop
roll
xchg
cmpb
pusha
pop
test
mov
cmp
pushf
adc
jbe
add
insl
inc
das
sub
add
cmp
sbb
and
rol
add
or
mov
mov
ret
gs
push
je
push
push
outsb
fs
js
outsl
jne
or
data16
jb
std
or
test
enter
jbe
push
lret
sar
mov
loopne
mov
insl
cwtl
int
jge
add
dec
sti
test
aas
dec
add
or
addb
shl
insb
xor
cmp
call
add
out
je
jg
loope
add
sub
push
mov
ffree
add
xor
es
outsb
inc
dec
loopne
pop
sub
ret
fcoml
enter
inc
add
call
inc
or
les
inc
nop
mov
push
out
jmp
mov
leave
je
movsb
add
icebp
mov
clc
addl
push
lret
mov
testb
add
pusha
bound
jmp
ret
add
subl
popa
in
mov
push
loopne
dec
clc
int3
jno
mov
or
stos
aam
les
rcrb
loop
mov
cmp
push
cmp
lods
pushl
or
pop
xchg
movsl
add
mov
and
scas
jg
movsl
pop
add
dec
push
sbb
push
jo
flds
add
mov
loop
into
pop
cmp
and
jns
push
dec
adc
imul
add
lret
jae
nop
lods
sbb
in
jge
fldl
les
cmpl
mov
shr
cmpb
es
xlat
pop
sbb
add
xor
sub
fdiv
mov
cmp
lea
push
call
xchg
js
add
cmp
in
inc
mov
add
jmp
cmpb
je
inc
mov
shl
mov
xor
and
sahf
xchg
clc
jns
cld
or
pop
cltd
inc
lds
ror
inc
push
pop
pusha
shll
arpl
cmp
das
cli
aaa
sub
pushf
and
rorl
stc
gs
sarb
rcll
add
orl
shr
pushl
dec
push
fs
stc
and
add
pop
pop
call
mov
and
add
mov
rsm
or
adc
xchg
add
shlb
sahf
mov
test
sbb
out
xor
inc
xchg
push
iret
and
add
in
addr16
adc
add
sbb
nop
stos
sbb
mov
popf
cmc
in
or
je
add
ja
fstps
nop
test
mov
movsb
add
or
das
sub
sub
push
sbb
gs
pop
jmp
or
and
dec
sub
add
lds
aaa
outsb
orb
in
inc
inc
jle
adc
test
xlat
or
add
add
inc
jmp
add
pop
cli
std
push
inc
clc
jo
add
cmp
xchg
test
jae,pn
mov
and
in
and
lods
jbe
nop
imull
or
mov
sbb
add
or
dec
add
mov
mov
inc
pushl
pop
divb
inc
mov
std
add
jp
cmp
jnp
xor
cmpb
pop
es
cmpsb
out
jge
pop
jne
xchg
jle
xor
inc
call
mov
or
and
lea
imul
in
cmp
lock
sbb
je
popa
jnp
mov
add
insl
ljmp
int3
adc
mov
add
xchg
shlb
popf
std
xchg
add
rclb
sbb
cmp
rorb
add
lock
rcrb
shll
ljmp
dec
add
call
jne
add
sti
jae
test
sub
daa
loopne
xorb
pop
iret
sub
cld
shlb
pushf
add
or
insb
pop
cmp
mov
icebp
mulb
dec
roll
cmp
xlat
loope
jb
inc
aas
and
orb
lcall
xor
popa
clc
loopne
sahf
pop
aam
sbb
sbb
add
jbe
dec
add
mov
sub
jmp
cmc
and
ds
jo
mov
aad
sub
mov
outsl
andb
adc
mov
pop
adc
daa
push
sub
test
add
add
sbb
or
lock
fs
cmp
cld
mov
mov
dec
xchg
inc
inc
dec
jle
add
jb
jbe
test
xor
mov
dec
mov
ss
pop
aad
sub
mov
lea
add
or
cld
arpl
cmp
dec
pop
sbb
mov
xor
push
loope
lret
jmp
cmp
pop
xchg
pusha
lcall
dec
sbbb
movsl
ret
imul
and
adc
sbb
push
add
fs
and
and
nop
jle
push
jp
inc
shll
loopne
fisubl
inc
cmp
movsb
adc
loope
dec
repz
fcompl
cs
loop
rorb
add
mov
ja
movsl
scas
nop
outsb
xor
repnz
add
je
jle
popa
clc
fs
add
jmp
addb
jge
pop
ret
xchg
out
mov
dec
xor
inc
xchg
adc
pop
cmp
add
cmp
or
jne
lock
xor
add
jle
dec
pop
push
lldt
sub
add
jbe
xor
outsl
mov
inc
and
or
int
mov
cltd
adc
clc
jne
and
mov
test
xchg
sbb
out
and
jg
or
jae
mov
addb
add
add
jle
cwtl
data16
ret
dec
dec
popf
fmul
mov
add
or
fs
cltd
mov
add
mov
add
push
mov
pop
or
pop
jp
loopne
add
pop
dec
movb
add
jl
inc
jne
pop
dec
mov
nop
fs
mov
imul
je
and
mov
cli
cltd
inc
xor
test
mov
andl
add
aas
sbb
push
jmp
adc
ja
jo
dec
sub
daa
call
push
add
mov
dec
lods
add
pop
push
cmp
test
scas
xchg
jg
push
add
incb
filds
lods
mov
jo
adc
mov
cld
mov
shl
add
or
add
add
fstpl
das
sbb
jne
les
adc
pop
pop
pop
gs
dec
pop
add
rcrl
pushf
sarb
mov
adc
push
mov
imul
in
push
sub
jp
std
fcoml
pop
pushf
add
ljmp
dec
and
mov
add
out
pusha
jno
shll
adc
loope
pusha
nop
push
push
shll
add
inc
and
sbb
sub
mov
shlb
lea
nop
push
fadds
sub
add
push
xor
add
movsl
rorb
or
cmp
sub
test
aas
mov
xor
sbb
pop
in
out
pop
loop
add
xchg
lods
push
dec
jl
mov
add
dec
ret
or
add
push
out
dec
cmp
add
imul
cmovb
out
sub
sbb
fistl
imul
add
push
jecxz
add
mov
movlps
jmp
push
repnz
sarb
cmp
shr
loop
pop
sub
or
loopne
pusha
sub
cmp
and
lock
push
or
enter
cmp
cmpsb
test
incl
jmp
sbb
add
popf
enter
mov
add
in
add
cmp
std
jae
mov
fsubr
imul
out
jb
test
sbb
inc
out
sub
mov
ret
ds
add
sub
xlat
jle
pop
jbe
pop
dec
int3
shlb
pop
adc
in
add
repz
je
sbb
mov
icebp
sti
pop
arpl
pop
add
push
mov
or
push
add
push
dec
in
jmp
lock
pop
shl
jle
icebp
jne
sbb
pop
fs
sbbb
mov
shrb
por
add
mov
push
mov
call
cmp
sub
xchg
add
xor
jg
inc
push
addl
add
adc
mov
add
jmp
adc
pop
push
mov
cld
sbb
sti
pop
and
xchg
std
xchg
nop
or
loopne
ret
jae
xchg
arpl
cmp
mov
ret
jno
ret
add
sub
xchg
pop
sub
gs
and
adcl
ret
fadd
shrl
lock
push
pop
inc
add
xor
lahf
adc
inc
fldl
mov
fmuls
imul
mov
cmp
inc
mov
push
xchg
mov
or
push
and
add
mov
scas
inc
mov
test
cltd
int
adc
mov
out
mov
jmp
es
dec
sti
add
movsb
rorb
leave
add
or
xor
testl
out
push
fbstp
divb
sub
sbb
jge
sbb
nop
lods
scas
int
push
add
ljmp
adc
sub
mov
add
sub
pop
stos
sbb
shrb
mov
loopne
fsubs
nop
xchg
dec
xor
add
clc
call
pop
add
cmpb
adc
cmp
jmp
in
xor
and
and
xchg
sub
sahf
lds
out
or
xchg
sbb
and
movsb
lock
add
repz
sarl
add
jl
movsl
xor
sub
hlt
xchg
add
in
pop
jle
hlt
adc
push
pop
pusha
call
add
leave
sub
lds
adc
adc
add
xor
stos
or
inc
jnp
or
push
xchg
negb
cmp
push
jae
mov
push
loopne
daa
test
hlt
movl
and
loop
add
lcall
fsubs
repnz
add
jno
mov
lahf
jle
nop
mov
loop
add
dec
jbe
add
add
mov
push
hlt
xchg
ret
or
xchg
jno
sub
clc
in
add
daa
mov
mov
xor
lods
repnz
sarb
mov
dec
xor
int
and
cmp
xchg
push
cvtpi2ps
andb
add
leave
inc
inc
sub
roll
adc
push
test
popf
mov
out
mov
or
inc
cmp
movsl
push
lahf
add
xor
daa
test
in
rolb
mov
push
xor
inc
add
xchg
inc
outsb
sub
add
movsl
or
sub
mov
mov
or
jge
cmpb
lea
ret
scas
ja
dec
stos
movsb
mov
mov
lock
or
adc
movl
loopne
adc
xchg
movsb
je
xorb
ljmp
add
adc
shlb
add
fldenv
aam
addr16
stos
mov
call
lods
add
dec
mov
inc
pop
pop
sbb
dec
push
in
add
or
xorl
cmpsb
adc
cli
sbb
fsubrl
xchg
ficoms
dec
add
shll
sbb
mov
add
dec
test
add
cmp
hlt
and
xor
jl
and
imul
iret
into
es
in
add
mov
xor
mov
test
dec
addb
in
ror
cmp
mov
ds
jne
popf
popa
and
push
cld
and
mov
mov
mov
adc
push
sbbl
jno
mov
js
push
adc
rcrl
add
bound
sub
ljmp
cmp
aad
out
popf
je,pn
add
cld
mov
jae
iret
push
bound
jp
gs
adc
cmp
popa
cmp
cs
mov
jns
or
pushf
cwtl
hlt
add
and
push
jne
repz
mov
int3
dec
mov
popa
scas
add
aas
mov
lret
call
xor
add
inc
mov
popf
adc
add
adc
xor
push
movsb
add
push
dec
int3
add
icebp
inc
xchg
shr
sahf
pusha
pop
test
mov
bswap
loopne
data16
adc
pop
pop
or
loop
ja
clc
push
cmp
dec
je
rorb
mov
add
cmp
xor
rorb
xchg
pop
daa
out
loopne
mov
add
call
push
or
xor
jmp
add
sub
add
aaa
pusha
add
ffreep
rolb
inc
das
jmp
lret
jb
xor
add
sub
and
jne
add
clc
adc
pop
add
pop
xchg
or
adc
add
in
cmp
shlb
jne
andb
or
jo
test
add
sub
dec
ret
and
shlb
xor
add
cmp
int3
add
hlt
mov
js
sub
or
in
dec
lods
mov
in
hlt
cld
test
inc
incl
bound
int
nop
jge
cmp
leave
add
adc
and
loopne
lcall
mov
cmp
movsb
addl
clc
and
dec
fldl
push
pmulhuw
insl
mov
and
add
inc
adc
mov
in
stos
xchg
loope
jge
jmp
jecxz
add
loopne
mov
add
sbb
out
testl
cmc
lock
pop
and
jge
add
push
mov
jmp
add
or
sbb
inc
jp
adc
xor
enter
pusha
shll
add
cltd
outsl
sub
int
mov
fcom
cwtl
shll
dec
lods
lock
daa
add
jmp
jbe
add
ret
call
add
adc
pop
aam
inc
pop
xchg
subb
pop
add
stos
sub
mov
call
ds
add
push
outsb
outsl
xor
or
jle
fwait
lds
xor
rcrb
in
mov
push
add
xor
loopne
sub
cmp
or
sbb
fistpll
daa
pop
push
xchg
add
push
adc
inc
shrb
fsubrp
dec
ljmp
or
call
add
jecxz
pop
aaa
mov
xchg
enter
dec
stos
leave
add
jnp
lret
pop
xchg
add
out
andb
mov
cs
scas
cmc
or
cmp
add
mov
sub
sbb
sub
psllq
add
hlt
lret
add
rcll
sub
push
xchg
dec
jnp
jl
jmp
xchg
sbb
adc
call
mov
mov
out
jg
add
mov
or
xorb
push
inc
inc
push
push
mov
pusha
and
add
cmp
fstpl
adc
adc
mov
adc
loopne
inc
mov
cwtl
xor
popa
jae
xor
xor
push
dec
add
je
and
add
push
jb
std
hlt
js
out
fs
decb
popa
mov
aaa
jp
push
adcb
mov
add
sbb
jg
in
movsb
adc
push
add
inc
adc
leave
add
xor
movsl
addb
addb
in
adc
insb
dec
push
lret
pop
add
negl
push
cmpsb
xchg
jg
dec
sbb
lahf
mov
fsts
adc
mov
add
bsr
mov
stos
out
add
int
sbb
add
mov
fwait
rolb
sbb
scas
mov
xchg
push
add
outsb
in
cmc
mov
or
xchg
mov
xor
out
lret
fnsave
jnp
add
movsb
dec
and
xor
subb
pushf
dec
xorb
enter
add
jno
push
add
push
lahf
adc
xor
push
cs
out
add
jnp
pop
push
sbb
and
mov
lea
cmp
add
xor
gs
add
ret
push
sub
popa
add
dec
sbbl
movsb
enter
sbb
mov
xor
fwait
xchg
sbb
les
leave
jo
add
adc
mov
inc
js
out
lods
test
pop
dec
cwtl
add
fisubs
addr16
loope
aaa
or
adc
push
lret
sbb
bound
pop
cmp
dec
repz
add
cli
or
mov
jne
out
idivl
popa
add
pop
scas
cld
sub
add
xlat
jbe
push
mov
add
push
mov
test
pop
jbe
add
push
add
pop
daa
cli
les
sbb
fcoml
add
mov
inc
add
fnstcw
dec
add
jge
pop
add
jmp
repnz
rorl
cmpl
je
int3
jmp
fdiv
pop
cmpxchg
inc
mov
leave
rolb
lea
mov
mov
dec
push
pusha
idivb
or
jge
je
jg
and
add
sbb
xor
aad
insb
sub
cli
add
hlt
mov
cmp
inc
push
push
fiadds
xor
mov
jge,pt
mov
mov
inc
xchg
loope
inc
add
mov
push
pop
adc
sub
mov
add
stc
or
add
jbe
movb
sub
mov
pusha
shll
add
cmpl
jbe
mov
sub
sub
enter
add
sarb
repz
mov
repnz
add
ret
push
cwtl
dec
mov
bound
add
cwtl
xor
mov
pop
dec
or
lret
xchg
or
push
and
icebp
outsl
push
push
mov
rcr
mov
cwtl
add
inc
push
jne
into
imul
add
sub
andl
dec
add
push
stc
or
call
cmpsb
sbb
and
xchg
movsl
add
lds
cmpsb
add
jecxz
imul
add
scas
sbb
add
sub
stos
cltd
nop
inc
in
jae
insb
cmp
mov
xchg
push
loope
add
sbb
inc
add
xchg
sub
push
jne
jbe
add
push
bound
aam
cmp
repnz
mov
das
addl
jae
dec
adc
ret
mov
jmp
loop
cmpsl
ud1
xor
pop
or
cmp
adc
pop
aam
push
add
pop
adc
add
shll
and
add
or
jo
inc
nop
incl
shrl
es
dec
fs
add
xchg
cmp
mov
add
add
mov
aam
dec
inc
sub
das
cmp
mov
inc
add
das
and
jb
or
and
xchg
mov
cmpps
adc
adc
in
jb
inc
sbb
cmp
cmc
js
add
inc
fsub
jp
in
mov
xchg
fdivrl
and
add
lret
adc
sub
pop
ret
xchg
cwtl
mov
adc
mov
sti
jne
les
dec
out
lds
mov
jp
fldt
incl
jl
xchg
hlt
rolb
and
fwait
in
aas
push
lea
sub
js
add
cli
cmpsb
mov
jno
clc
pop
jg
mov
into
sbb
shl
iret
or
add
or
std
sub
sub
subb
xchg
loop
inc
push
xor
add
push
add
je
mov
cmp
adc
dec
jne
js
sub
add
jg
push
cmpb
dec
out
pop
mov
adc
dec
in
lahf
aam
and
inc
sub
pop
add
mov
mov
and
test
lds
add
lock
jle
add
xor
pop
inc
insb
or
mov
outsl
jg
ret
mov
xchg
xor
add
lea
cli
cmpl
lock
je
dec
pop
mov
xlat
cs
daa
lds
shrl
rcr
and
pushf
sbb
lods
lds
add
cmp
pusha
or
jmp
out
pop
add
sbb
aad
lahf
loope
or
andb
cld
jb
add
enter
push
call
push
outsb
mov
adc
adc
mov
icebp
add
mov
add
jg
push
or
or
or
or
add
sub
add
xchg
mov
mov
aas
js
or
push
cmpsl
xlat
ljmp
clc
lds
or
and
pop
mov
lock
pavgb
mov
push
jg
add
inc
outsb
pop
call
xchg
mov
mov
lods
nop
adc
jge
sbb
and
mov
cltd
add
push
ds
dec
in
inc
jmp
xor
movsl
jb
add
das
and
aas
sbbb
sbb
jmp
add
fwait
enter
pusha
sbb
and
add
adc
pop
in
add
add
loope
in
add
movsb
or
dec
pop
add
sbb
mov
add
jecxz
leave
mov
dec
in
add
call
hlt
add
out
mov
add
xor
add
out
enter
ss
add
inc
mov
dec
cmp
fsubl
lock
loop
call
mov
inc
add
push
fdivl
and
cmp
mov
addl
popf
jecxz
dec
movsl
mov
mov
in
lds
nop
mov
push
mov
push
xchg
mov
xor
lahf
out
xlat
shlb
js
jnp
cmp
inc
add
push
jg
inc
push
add
push
addb
je
pop
aas
add
adcb
cld
rorb
fdivrl
pushf
xor
cwtl
mov
std
pop
mov
add
add
test
jns
push
xor
or
loop
fldl
and
leave
iret
push
call
mov
jo
add
je
jo
xchg
std
add
inc
dec
outsl
pop
add
sub
or
fmuls
out
dec
add
loope
nop
adc
jae
add
addl
in
add
sbb
inc
add
sbb
mov
cli
xor
sub
jmp
in
lea
das
sub
pop
adc
ror
xchg
lock
movl
push
mov
or
lret
add
sbb
adc
test
in
push
nop
mov
add
add
lock
sub
lret
push
sub
call
and
or
xor
or
adc
roll
jmp
das
mov
insl
imul
or
enter
in
add
add
dec
hlt
adc
and
cmc
inc
lock
lcall
addr16
ljmp
out
mov
mov
jp
add
mov
mov
xchg
mov
sahf
les
jp
fxch
add
cmp
adc
loopne
lods
add
je
cwtl
movb
cmp
imul
popa
add
scas
jno
push
mov
sti
aam
sbb
out
dec
xchg
and
lret
les
movsb
push
ret
adc
in
pushf
cld
push
or
push
in
inc
shl
add
fcmovne
aam
ret
in
cld
lock
add
out
repz
adc
pop
fadds
add
jo
mov
arpl
push
imul
aad
dec
cmpsb
add
adc
not
sub
adc
mov
or
xchg
imul
mov
leave
test
xchg
sub
mov
pop
scas
enter
jo
or
cmp
xchg
ror
inc
jge
rolb
mov
pop
mov
test
out
add
ss
mulb
xor
inc
repz
push
add
jne
mov
andb
incb
sbb
imul
ja
cs
mov
and
je
add
ret
cmp
int3
test
inc
iret
stos
xchg
adc
mov
loopne
adc
pop
dec
add
cmp
shlb
push
nop
addr16
mov
jae
xlat
dec
push
jmp
adc
add
adc
int
lods
jp
ljmp
daa
xor
mov
xor
push
gs
repz
pop
shrb
into
sbb
add
adc
mov
cmp
mov
jno
sti
pop
mov
jge
lahf
dec
test
mov
stos
iret
rclb
std
sbb
fstpt
pusha
scas
pop
insl
iret
mov
pop
xchg
test
loop
push
mov
cmc
pop
pop
clc
add
jnp
jnp
add
jg
ret
pause
mov
dec
add
or
fs
cmpsl
ror
add
fsubrl
add
lods
and
cmpsb
in
sub
push
mov
out
push
pop
jmp
add
into
mov
push
jno
sar
les
mov
adc
mov
mov
aam
mov
mov
mov
fwait
clc
adc
add
ljmp
add
mov
add
push
movzbl
loopne
pop
add
and
int
jb
mov
and
in
int3
fs
dec
ljmp
repz
movsb
push
push
mov
adc
adc
ljmp
dec
sbb
push
je
lock
test
sarb
and
cltd
add
or
icebp
dec
add
adc
mov
mov
push
pop
and
push
xchg
adcb
call
dec
mov
sub
jnp
in
xchg
pop
mov
xchg
pop
cmp
or
call
out
adc
or
add
add
outsb
orl
xor
jne
mov
push
cmp
cmp
sub
inc
jbe
add
je
dec
or
or
and
cmp
shll
jecxz
jno
lea
ss
mov
mov
mov
rcll
pop
sub
jl
add
and
jo
inc
add
inc
pop
push
jae
mov
je
or
sbb
xor
addb
and
add
cmp
sub
test
ret
arpl
jae
hlt
push
push
mov
shll
ja
addl
xchg
je
push
xchg
add
sbb
icebp
or
mov
aaa
jmp
call
pop
push
add
mov
rolb
les
loopne
ds
dec
sub
fsubrs
or
out
push
jl
sbb
ret
xor
add
cmp
aam
add
cmpsb
pop
xchg
stos
mov
add
jecxz
loop
add
xchg
icebp
jg
loopne
xchg
mov
adc
loope
out
and
mov
cld
add
leave
testl
dec
push
inc
mov
pop
add
test
insb
fiaddl
sub
push
rol
inc
mov
xor
add
mov
ret
in
bound
push
ja
pop
add
in
out
add
dec
mov
push
jmp
loope
jle
leave
mov
add
lods
cmc
xor
sarb
cwtl
sbb
pop
dec
add
adc
jno,pn
add
adc
xor
add
stos
clc
loope
push
jns
hlt
insl
xchg
jns
ja
add
arpl
push
mov
cmp
in
inc
push
mov
cltd
push
jo
test
add
mov
mov
scas
jnp
add
dec
popa
insl
icebp
jp
push
pop
or
addr16
cmpsl
inc
pop
movsl
mov
mov
lahf
xlat
xchg
lock
nop
lock
in
sbb
ljmp
push
inc
outsb
inc
loop
jno
inc
mov
push
mov
pusha
lods
sarl
adc
sbb
cmp
sub
add
fcom
inc
sbb
add
cvtpi2ps
sub
cli
xchg
movsl
or
sbb
jno
mov
xchg
mov
or
mov
fisubl
shlb
in
lret
pop
jmp
scas
adc
jle
jg
and
fcom
push
and
daa
mov
fists
jl
jg
add
cmpb
inc
sbb
fs
or
call
fmuls
push
out
dec
inc
dec
dec
mov
cmovb
pop
inc
lds
xor
pop
in
add
push
outsl
add
loopne
sub
dec
cmp
xor
xor
add
hlt
add
fcmovu
push
adc
cmp
xchg
scas
mov
mov
push
test
cld
test
fsubrs
add
in
or
sub
pop
les
incb
or
movsb
and
inc
lock
mov
adc
repnz
in
xor
add
fldcw
mov
add
jmp
lock
iret
xchg
cld
or
add
mul
in
inc
add
add
mov
mov
adc
scas
xor
mov
add
enter
adc
dec
add
push
jne
mov
or
pusha
add
fs
add
movsb
adc
sub
add
sbb
cmp
pop
xchg
jae
add
or
shl
add
push
adc
adc
pop
pop
sbb
sbb
sbb
push
pop
push
and
and
add
sub
sub
sub
cs
add
bound
cmp
dec
pop
clc
dec
inc
icebp
sbb
add
subl
jb
cmp
and
jp
cmp
adc
flds
inc
pop
adc
jo
ret
faddl
lock
addb
js
jge
jns
ljmp
fstl
repz
add
xchg
stc
add
pop
jne
inc
sbb
add
jmp
pop
sbb
enter
mov
cmp
lods
scas
scas
cld
hlt
jo
add
mov
int3
cmp
rol
cmp
enter
int3
cmp
into
add
rcl
rcl
aam
add
push
xlat
fcomp
fiaddl
add
lock
and
in
out
jmp
add
sub
icebp
repnz
cmp
testb
std
add
jo
or
add
or
les
xor
pushf
and
popa
jne
fsubl
andl
dec
add
lcall
or
pop
jae
loope
ja
add
jnp
cmp
xor
test
xchg
iret
add
xchg
cmp
xchg
xchg
lcall
sahf
lahf
add
loop
out
movsl
das
cmpsb
cmpsl
lock
jae
add
adc
jge
add
lds
lret
lcall
rcl
lret
add
in
or
lds
add
std
mov
fsubr
xor
icebp
cmp
outsb
add
stc
incl
cwtl
enter
mov
add
or
or
or
sarb
and
add
inc
xorb
rorb
mov
jge
add
cwtl
and
mov
mov
mov
mov
rol
sbb
dec
adc
fstl
rolb
or
aad
xchg
clc
ds
ret
mov
mov
icebp
mov
hlt
in
mov
jecxz
mov
sbb
inc
shlb
add
and
add
imul
inc
add
mov
push
pop
loopne
loopne
add
dec
outsl
adc
loopne
adc
cmp
jg
cmp
test
mov
lds
push
push
rolb
add
inc
out
mov
add
push
xchg
les
and
loop
loopne
filds
cwtl
fildl
in
xor
cmp
aam
add
faddl
xlat
aad
add
adc
test
add
mov
and
in
scas
pop
mov
lds
adc
loope
inc
xchg
mov
push
rcrb
andl
int3
push
cmpb
loopne
xlat
shl
add
jecxz
out
xor
add
pusha
addr16
mov
das
in
add
je
roll
xchg
aam
push
dec
jmp
sub
mov
adc
mov
adc
push
cmp
ss
xchg
jl
leave
and
add
xlat
cmp
add
divl
test
jp
mov
mov
add
or
adc
or
pop
jmp
insb
jecxz
pop
leave
add
sti
or
cmp
fwait
or
ret
push
pop
andl
jl
xor
cmp
and
sub
sub
ss
adcb
or
jle
or
push
dec
in
orb
gs
ret
ja
add
cmp
jbe
sbb
push
cmc
les
or
adc
addr16
fnstenv
nop
push
pcmpeqb
xor
les
push
out
pop
daa
sbb
scas
mov
and
pop
jno
push
add
push
fstl
lret
add
xor
stos
ret
negb
sub
add
mov
stc
push
repz
cmp
dec
mov
shll
out
inc
out
mov
sbb
push
jp
cli
push
ljmp
pmulhw
sar
mov
rolb
mov
cld
jns
inc
mov
push
push
test
add
xor
mov
cmp
or
imul
dec
popw
mov
add
repz
ret
xlat
in
mov
mov
loop
adcb
pop
cmpsl
pop
shlb
movsb
pop
jl
add
out
and
add
adc
jne
ret
add
push
out
cmpsb
mov
notl
clc
cmp
add
mov
lret
mov
faddl
sbb
je
adc
sahf
pusha
dec
cwtl
add
aaa
push
fdivrp
push
jae
add
cld
mov
push
sub
add
jecxz
lock
inc
or
adc
es
aaa
inc
cmp
out
add
adc
testl
mov
push
ja
add
jg
fwait
sbb
add
in
dec
mov
sti
in
add
xor
jl
mov
movsb
xchg
jecxz
les
int
add
out
xor
dec
jno
jo
add
mov
mov
loopne
add
shlb
add
sbb
jle
andb
inc
pop
adc
das
stos
xchg
add
cmp
lret
add
cmpsb
addl
out
add
and
mov
mov
fildll
add
rorb
imulb
stos
and
addr16
add
std
movsl
mov
incb
cmp
inc
jo
inc
or
out
add
inc
adc
hlt
pop
out
push
je
add
sbb
loop
fwait
inc
ret
lea
sbb
and
xchg
adc
add
stos
mov
mov
in
iret
popf
mov
mov
add
icebp
mov
insl
push
or
loope
add
jle
jg
add
cmp
mov
adc
rolb
ror
jno
cmp
jo
add
insl
mov
dec
push
sbb
cmp
cli
jo
ja
mov
push
loope
cld
add
ret
mov
mov
add
leave
jno
sbb
leave
in
add
cmp
in
sub
mov
pop
out
in
sbb
add
xchg
dec
and
ljmp
xchg
ss
mov
sub
mov
xchg
add
lock
mov
cmc
jno
mov
out
outsb
loopne
scas
aas
jle
cmpb
sub
lods
pop
hlt
loopne
ja
add
xchg
cmp
jb
imul
lods
and
aas
or
mov
xchg
pop
pop
inc
dec
loopne
cmp
sti
subb
roll
insl
pop
pop
lds
test
pop
jnp
pop
lahf
nopl
shr
inc
daa
add
rcl
mov
movsb
lret
add
mov
xor
arpl
ja
jo
and
mov
pop
inc
add
add
fildll
dec
nop
divb
lea
xor
or
add
loop
push
or
lcall
mov
cmp
cmp
fistpl
mov
mov
mov
dec
and
std
in
cmp
add
subb
js
jb
adc
mov
jle
add
dec
and
add
jb
add
sub
push
pop
int3
pop
test
add
mov
jp
push
lock
adc
add
pushf
adc
sbb
in
dec
mov
imul
das
xchg
les
push
rep
and
jb
bound
mov
movsb
cli
cld
sbb
add
xchg
insb
cmp
pop
xchg
mov
cmp
mov
add
sub
jne
ds
lds
or
add
sub
add
jl
jle
imul
add
add
mov
inc
and
aas
and
orb
iret
hlt
rorl
repz
sti
mov
mov
inc
or
repz
lret
jb
add
sub
test
pop
and
sbb
mov
pop
mov
sbbb
mov
xchg
jg
pop
add
or
add
data16
mov
cltd
mov
push
or
adc
cmpb
rcrb
dec
inc
addl
xchg
push
or
add
aad
std
jmp
or
shl
movsl
push
test
xchg
sbb
sub
pop
loopne
jns
repnz
or
and
aam
dec
aas
jecxz
add
xchg
dec
cmpsl
push
add
or
leave
adc
add
inc
lock
adc
add
add
add
loop
das
sub
sbb
push
es
mov
mov
or
xchg
mov
jmp
in
push
inc
add
sbb
pop
lea
add
pop
sbb
and
dec
fsubs
flds
test
sub
sbb
inc
adc
sub
enter
jmp
mov
ja
iret
add
pop
stc
repnz
cmp
and
arpl
jecxz
sub
sti
push
call
cmpb
arpl
test
stos
fs
dec
jecxz
inc
xchg
out
subb
mov
push
adc
iret
cmp
xchg
add
pusha
pop
popa
pop
mov
jno
cmp
shll
push
fmull
dec
add
inc
movsl
jne
in
paddusw
and
test
fsubs
or
add
mov
inc
in
ret
add
and
cmpb
imul
mov
mov
sete
sub
pusha
and
imul
pop
out
cmp
sar
xor
roll
fbstp
mov
and
sar
add
and
je
or
dec
shlb
cmpb
jle
add
add
cld
add
fcomi
cli
pop
je
add
pop
dec
mov
cmp
add
divb
adc
mov
or
fiadds
push
mov
or
xchg
lret
push
mov
xchg
jbe
pusha
test
ficoms
je
into
dec
sahf
inc
pop
add
icebp
fmull
add
and
rorb
lock
jne
addb
inc
pushl
inc
aad
repnz
pop
add
pop
scas
mov
bswap
fcoml
add
pop
fsubrl
in
aaa
lcall
and
pop
ljmp
mov
add
inc
gs
sahf
decb
mov
inc
or
add
cmp
jbe
adc
js
add
push
int
or
mov
mov
adc
fadds
jmp
add
and
addr16
pop
adc
adc
push
cmpsb
add
push
ds
roll
sub
outsl
cld
dec
clc
adcb
pop
cli
inc
add
lahf
or
test
imul
mov
mov
lock
shlb
xor
or
loop
jp
std
cs
shlb
cmp
add
lds
add
int
and
clc
popf
cmp
icebp
jno
shlb
shrb
daa
aad
cmpb
jge
insb
or
test
addb
jle
es
cmp
sbb
loopne
add
lock
notl
cmp
add
add
mov
shlb
add
pop
insb
ret
stos
lds
int
bound
roll
orb
add
xor
repnz
mov
lods
mov
mov
sbb
jno
mov
cmpsl
popf
popa
sbbb
std
pusha
mov
jno
add
mov
mov
inc
add
push
ljmp
fadds
mov
repz
mov
jp
sbb
testb
das
orb
adc
loope
sbb
xchg
pop
rcr
ret
add
add
fidivrs
hlt
loopne
nop
addl
sub
out
aaa
fildl
xchg
cmp
notl
adc
mov
mov
aad
add
inc
ret
add
mov
add
rcl
or
fwait
test
sti
cmp
sbb
dec
mov
jecxz
cmp
orb
add
mov
nop
rcrb
int3
sub
imul
add
pop
icebp
mov
jge
add
sbb
movsl
mov
mov
inc
xlat
ja
xchg
cmpb
rorb
popa
subl
push
add
and
das
mov
stc
xchg
xchg
les
or
add
dec
inc
sbb
mov
repz
imul
clc
mov
jbe
push
lea
add
iret
lock
shl
mov
mov
scas
clc
sub
add
or
pop
arpl
sub
inc
lods
or
arpl
stc
mov
mov
scas
enter
adc
adcb
or
cli
repz
xorb
cmp
out
movsb
adc
rorb
add
add
add
pop
out
jmp
mov
xlat
add
adc
or
lock
in
mov
push
imul
add
sbb
fdivp
pop
and
jne
add
mov
pusha
in
cmp
je
inc
repz
cltd
inc
jnp
adc
mov
pop
inc
or
jae
push
cmpsl
add
data16
push
or
call
jne
add
out
scas
adc
cmp
inc
pop
in
and
lret
pop
les
and
rorb
lock
add
movl
jl
cmp
lods
in
movups
loope
popl
sbb
rclb
add
stos
mov
lock
test
js
push
fildl
loopne
outsl
pop
movsl
push
add
sub
enter
jbe
pop
in
movsl
decl
xlat
inc
jne
sbb
push
inc
cli
mov
cwtl
sub
fwait
push
add
or
lods
xor
adc
stos
test
hlt
push
inc
mov
sub
jo
ret
mov
push
mov
jbe
add
sub
test
pop
sarb
mov
testb
je
and
jae
nop
mov
sub
dec
insb
add
mov
rclb
add
enter
adc
mov
mov
pop
inc
adc
aad
mov
push
xorb
jg
movsb
nop
and
add
add
jo
bound
dec
pop
and
jo
add
loop
jmp
fdivrs
mov
cmp
jge
cmp
loopne
dec
movl
inc
pop
dec
add
inc
fs
in
adc
dec
add
clc
inc
fmul
lcall
mov
add
icebp
add
das
stos
aaa
xor
cmpsb
subb
xchg
inc
or
dec
es
push
jg
dec
rcrl
lock
sbb
movsl
jge
pop
sbb
mov
add
sbb
pop
std
mov
mov
mov
add
das
add
mov
loopne
add
cmp
testl
add
out
add
loop
test
xchg
dec
dec
loope
imul
lret
cmpsl
push
push
cmp
mov
mov
data16
xchg
jg
lahf
lea
sub
mov
js
jns
push
lahf
and
rorl
inc
or
js
outsb
lret
sub
adc
push
sbb
mov
outsb
jns
sub
add
mov
insl
add
jno
scas
stc
mov
lret
dec
ret
je
leave
les
sbb
sbb
sbb
add
sub
jnp
add
incl
pop
mov
aam
and
adc
sub
add
mov
les
add
sbb
adc
mov
fbld
nop
add
nop
sbb
mov
xor
in
stos
loope
testl
cmp
cmpb
addl
cmp
imul
scas
popa
aas
jo
add
nop
int3
jae
stc
pop
fnstsw
ja
sbb
xchg
rclb
popf
call
loope
jb
in
pop
cmpsb
lds
jo
scas
mov
aaa
sarb
testl
xchg
ret
ss
or
xchg
jne
pop
pop
shlb
jo
adc
loopne
shufps
pop
fadds
add
push
jle
add
cli
loop
push
sbbl
loopne
or
sub
adcb
lds
add
push
sub
lock
or
sbb
je
adc
inc
cwtl
add
mov
fldt
mov
pop
repz
inc
add
mov
das
insl
jne
cli
lret
rcrb
lds
add
test
nop
daa
adc
inc
arpl
add
enter
js
lea
addl
push
pop
push
lock
pop
adc
mov
scas
add
pop
es
inc
add
sub
lret
out
add
pop
ss
mov
cmpsl
xchg
cmp
adc
sub
leave
pusha
in
push
negb
ss
imul
xlat
popa
movl
das
adc
fisttps
sbb
scas
jnp
sarb
inc
and
add
rcrl
xchg
jbe
jno
cs
sub
int
rolb
sub
test
loopne
cmp
push
cmp
shlb
inc
movsb
add
ja
pushf
sbb
xor
mov
add
add
repz
das
xchg
ret
inc
jge
cmc
loopne
sub
and
add
test
mov
add
and
sbb
pushf
test
and
aad
les
loop
fisttpl
jmp
jmp
pop
andb
int
rolb
dec
and
in
pop
shll
sahf
push
pop
jg
imul
loopne
xor
popf
sar
bnd
sub
add
jb
push
ffreep
fadds
cli
sub
xchg
sub
xchg
jno
es
add
sarb
or
rorb
out
sti
pusha
jo
add
push
mov
add
fsubr
cmpsl
xor
stc
add
rclb
shrb
iret
add
sub
leave
push
add
or
loop,pt
add
add
fwait
jg
push
xor
cmp
xor
js
mov
pop
push
pop
add
filds
sbb
mov
mov
pop
pushf
add
jmp
and
das
add
cmp
lea
pop
loop
loopne
jnp
icebp
test
xadd
lea
push
call
xor
pushf
in
movb
or
mov
sub
and
pop
sbb
jb
or
mov
test
insb
lods
in
push
pcmpeqw
pop
jp
add
dec
enter
or
subb
cmpsl
mov
mov
mov
add
fistpl
add
inc
scas
and
sbb
xchg
inc
stc
sbbb
sub
pop
inc
add
gs
or
push
je
std
loope
stc
jne
cmp
icebp
mov
sbb
add
add
push
add
addr16
cmp
addb
lods
adc
in
daa
add
jno
adc
cmpsl
mov
sahf
xchg
fisttpll
hlt
out
mov
add
cli
jmp
add
aad
and
stc
paddb
jmp
sbbl
mov
out
movb
mov
loopne
xor
cmp
pop
sub
cmp
xlat
add
push
xor
popa
pop
shl
ret
inc
sbb
sub
nop
pmullw
fsubrl
rcrb
inc
addb
rcrl
ds
aad
jae
add
inc
nop
mov
setg
dec
push
push
icebp
add
or
ficompl
lea
xchg
push
pop
cli
add
lock
test
test
sti
adc
js
cmp
data16
andb
or
pop
xor
xor
xchg
push
push
sahf
sub
daa
mov
sbb
jne
cmpsb
mov
outsl
adc
enter
mov
add
sub
add
jne
mov
jo
lahf
fstps
and
out
rorb
loope
stos
mov
add
dec
pushf
cmp
add
cmp
popf
add
sbb
push
inc
test
mov
in
cs
dec
add
jmp
mov
lods
cmp
mov
add
or
xchg
or
je
push
pop
ljmp
or
add
das
inc
ret
add
cmpb
cmp
push
in
fwait
add
push
iret
in
xor
add
jmp
inc
popf
sub
dec
mov
pop
xor
mov
xor
inc
adc
dec
mov
sar
nop
gs
pop
push
and
sbb
stos
loopne
ror
test
imul
and
push
dec
jns
add
js
xor
and
add
sti
idiv
pop
add
mov
in
xor
cmp
dec
popa
dec
jle
les
sbbb
incl
test
ljmp
out
xchg
mov
push
push
lahf
pusha
mov
iret
or
mov
verr
mov
mov
das
xor
mov
sbb
fldl
repz
mov
out
push
ljmp
jle
dec
add
leave
fmull
jne
adc
ss
jmp
popa
xchg
inc
and
movsb
xchg
add
cmp
jnp
add
mov
mov
sbb
fucomi
movl
dec
lock
mov
test
jo
add
cmpl
jns
loopne
add
aam
sbb
add
daa
ds
add
aas
dec
jnp
add
xlat
push
lret
pusha
call
psrlw
iret
xchg
loopne
hlt
ss
pop
mov
dec
out
add
inc
mov
jnp
loopne
aas
lret
mov
ja
jg
add
xlat
xchg
outsb
push
or
mov
movsb
clc
sbb
adc
mov
or
loop
fldenv
loopne
ljmp
cs
jmp
cmp
shll
fcompl
ja
lea
lods
cwtl
es
mov
loopne
jb
rorb
ficompl
add
add
push
and
jle
add
sbb
add
xor
jo
add
fcmovb
inc
mov
lods
jb
rolb
sub
sub
les
cld
fldenv
jecxz
sub
pop
iret
fs
cmp
test
inc
negl
add
popf
xchg
add
push
jb
pop
inc
sub
push
cmc
sub
add
sarb
sbb
fbstp
xchg
in
jge
pop
mov
push
push
dec
add
shl
add
push
pop
sbb
jmp
and
xor
mov
add
mov
add
push
add
sub
aas
add
sbb
jmp
add
pop
cmp
add
lret
mov
fimuls
mov
cmp
add
sub
push
cmp
scas
add
lret
inc
out
arpl
add
jl
dec
add
loope
orb
sbb
xchg
popl
js
cs
adc
pusha
idivl
push
mov
in
pop
imul
lds
and
out
add
stos
pop
sbb
leave
pushf
sub
shrb
fisubl
sub
dec
jo,pt
addl
les
pop
add
or
clc
nop
add
sbb
loop
sub
ret
jle
ja
jne
cmp
jne
push
push
or
shlb
and
mov
adc
lret
mov
mov
xchg
cmc
xlat
push
and
xchg
and
rorb
push
ds
stos
push
sub
xor
sub
mov
pop
jb
and
sbb
dec
cmpsb
mov
xchg
stos
add
lcall
dec
mov
push
enter
hlt
adc
add
sbb
inc
out
add
sbb
repnz
push
dec
add
in
add
verr
test
jge
mov
push
pop
add
inc
jno
inc
ds
add
and
add
mov
push
mov
pop
add
icebp
movsb
inc
mov
add
loop
pop
pop
pop
rolw
js
mov
daa
mov
leave
add
fcoms
in
dec
add
dec
fimull
int3
mov
ljmp
jo
lock
and
mov
cmp
xchg
lret
popf
add
in
cld
imul
je
pop
call
enter
or
sbb
pop
pop
sarb
fildl
sbb
add
add
jge
sub
jle
mov
jo
dec
add
adc
and
add
push
sub
xor
hlt
cmp
or
xchg
sbb
movsb
outsb
push
add
sub
shrl
mov
jmp
push
push
lret
dec
mov
lea
pop
and
hlt
inc
adc
add
add
jb
and
bound
inc
jno
add
lea
inc
ds
jb
loope
add
mov
lcall
or
stos
add
dec
adc
jle
cltd
sbbl
and
les
call
sub
decb
cmp
add
xchg
push
lock
add
adc
pop
xchg
and
adc
or
inc
lcall
add
sbb
pop
fdivl
add
fstpt
add
and
push
lods
fdivrs
sub
dec
out
jp
add
push
mov
cmp
in
movsl
pop
sub
cmp
jge
sbb
mov
daa
mov
add
sub
std
in
adc
fcoms
jbe
cmp
call
or
dec
lret
adc
xchg
add
cmp
jno
clc
test
add
adc
pop
mov
loopne
fdivs
filds
inc
std
stos
add
js
stc
sub
ljmp
or
pushf
push
adc
movb
pop
pop
mov
and
and
add
mov
dec
das
add
iret
fwait
cmpsl
or
andb
outsl
pop
pusha
or
fiadds
fwait
or
out
jo
mov
and
sbb
pop
jne
or
or
jae
add
or
add
cld
jmp
add
push
fimuls
dec
jmp
add
and
mov
test
push
add
out
sub
cmpsb
prefetch
aas
add
add
jle
dec
xchg
mov
imul
sbb
aas
fwait
lea
lret
mov
xorb
es
push
push
mov
or
inc
call
and
cs
xchg
add
adc
add
or
sahf
ja
sub
pop
mov
mov
add
repz
adc
push
pop
lods
xchg
cmp
inc
arpl
dec
enter
mov
or
mov
or
call
inc
lea
adc
and
pop
test
dec
das
in
or
or
dec
add
jmp
outsl
mov
repz
add
lods
dec
xchg
add
dec
or
sti
and
cli
mov
fnstsw
into
arpl
jmp
ljmp
pop
cmp
cli
add
pusha
add
inc
cmpb
cmp
pop
cmp
mov
out
pop
xchg
jle
cmpsb
and
inc
and
inc
add
jne
mov
dec
and
jge
shrb
cmpb
orb
arpl
shlb
xchg
inc
clc
and
inc
sub
mov
pop
sbb
mov
icebp
je
add
pop
fdivrs
or
lcall
xchg
aam
pop
loope
ds
adc
repnz
loopne
add
bound
push
scas
fisttps
es
mov
hlt
pop
mov
fisttpll
adc
adcb
loope
add
stos
rcr
mov
push
jmp
and
pop
lea
fucom
jno
call
pushl
sub
inc
add
inc
nop
adc
mov
lods
inc
jle
sbb
add
add
incl
mov
cmp
add
xchg
hlt
and
test
pop
push
push
outsb
cltd
mov
cmp
dec
insb
pop
lods
cmp
add
lock
adc
xor
filds
dec
mov
dec
jge
jl
add
and
sbb
adc
pop
pop
jo
pushf
stc
mov
add
pop
test
add
jo
and
nop
lds
xchg
sti
push
loop
inc
add
orb
movsl
imul
addl
mov
cs
sbb
dec
sub
jne
sti
cmc
add
xlat
cmpsl
outsb
loop
ja
dec
add
aad
inc
lret
dec
pop
or
inc
insb
jecxz
or
inc
pusha
xchg
test
shlb
lods
hlt
pop
test
icebp
lock
pop
jbe
add
push
das
int
xchg
aaa
jo
fdivr
in
into
and
sub
pop
add
enter
xchg
dec
test
adc
add
inc
insb
adc
adcl
dec
in
cmp
pop
add
pop
mov
je
add
pusha
scas
lods
dec
fisttpll
add
push
cmc
inc
out
add
pop
xchg
mov
dec
pop
add
or
adc
or
mov
push
stos
fwait
nop
dec
cmp
cld
add
fdiv
push
ret
add
aaa
sub
andb
cs
rcr
repz
neg
inc
mov
add
xor
push
das
adc
nop
dec
xor
mov
add
sbbl
hlt
test
jl
imul
inc
int3
sbb
xorl
sbb
test
pushl
or
and
into
add
inc
cmpsl
jg
xchg
mov
fwait
pop
add
inc
and
dec
add
cmp
jmp
je
push
fistl
movl
mov
test
xor
adc
add
stc
in
add
or
add
push
and
inc
add
jg
sbb
out
aas
or
addb
decl
or
je
add
cmpb
adc
push
fildl
pop
add
inc
inc
fisubs
sti
add
add
loopne
xor
shrb
or
add
adc
xor
or
push
mov
add
rcrb
add
mov
and
push
pop
or
xchg
into
add
inc
sub
cmc
pusha
decb
ds
adc
dec
mov
into
xchg
add
shr
fiaddl
pop
dec
mov
mov
or
sbb
jle
add
gs
sub
xchg
shrb
subb
popf
ret
sbb
sbb
mov
icebp
mov
fmull
sbb
sbb
pop
orb
lea
out
pop
fwait
xchg
add
jne
cmp
lds
mov
lock
stos
xor
mov
push
add
sub
sti
and
lock
fiaddl
sub
adc
add
arpl
pusha
mov
jne
sub
pop
stos
add
sbb
sub
mov
mov
stc
add
dec
mov
daa
ja
add
cmpsb
aam
push
push
add
ljmp
jne
loopne
xchg
add
add
sub
add
push
popf
pop
ret
dec
filds
into
sub
mov
cmp
jmp
jle
add
jge
shll
mov
cld
mov
add
mov
pop
push
xchg
cmp
sub
add
fsubrl
cld
rcrl
or
sbb
or
cwtl
das
pop
ss
and
lock
or
mov
add
mov
or
add
ss
out
or
or
test
sub
out
lea
or
sbb
add
inc
cmc
inc
add
popf
add
std
loop
sbb
sub
add
inc
pop
inc
add
aaa
xor
sub
bound
arpl
jp
jge
add
sarb
sub
clc
pop
add
xchg
push
flds
sub
aaa
sbb
adc
jns
cmp
push
adc
mov
or
add
push
jle
adc
add
inc
je
sarl
xor
fs
or
outsl
cmp
add
mov
pop
lock
pop
xchg
add
xorl
fsubs
and
mov
add
in
mov
add
test
cmpl
incb
adc
sub
pop
push
pop
mov
and
lods
lret
cs
dec
hlt
clc
add
lea
and
and
adc
xchg
add
pop
inc
xchg
adc
daa
dec
add
lret
orb
testl
sbb
iret
jns
lahf
sub
fwait
or
sbb
cmpsl
adcl
cwtl
adc
add
adc
sub
std
mov
mov
sbb
push
movl
fcomp
xchg
cs
cltd
cmp
push
test
add
icebp
shl
adc
inc
mov
or
add
add
bound
fucomi
sub
add
or
mov
push
adc
cltd
lods
bound
or
jno
lods
sub
mov
dec
cmp
jb
or
enter
add
dec
mov
cmpsl
pop
rcrb
sbb
pusha
ds
dec
inc
aas
pop
fsubrs
cmp
xor
sbb
or
and
mov
ljmp
xor
in
dec
or
in
push
add
xchg
movsb
mov
mov
mov
mov
movb
jle
adcl
jmp
pop
add
adc
mulb
lods
push
andl
sbb
push
lcall
push
nop
and
decl
mov
fldl
inc
pop
cli
add
dec
inc
sbb
inc
cli
push
add
adc
push
rolb
scas
stos
sub
sbb
add
mov
shlb
int3
add
jae
jo
decb
xchg
call
in
push
sbb
and
sbb
push
incb
fdivrl
adc
sbb
jp
push
cmp
mov
push
mov
loopne
dec
mov
adc
push
sar
or
pop
inc
nop
add
push
add
dec
fldl
add
and
mov
add
popf
sbb
pushf
test
pop
int
setae
pop
lock
and
inc
add
jne
gs
call
out
jns
dec
js
add
push
cmp
aam
push
pop
xchg
scas
lea
and
sub
sbb
xchg
clc
xchg
aas
add
es
adc
xchg
sub
loopne
and
add
clc
adc
lcall
movl
dec
xlat
sbb
inc
add
leave
and
cmp
es
arpl
add
add
and
lock
das
pop
movsb
or
pop
stc
adcb
mov
out
aad
add
loop
lock
xchg
in
or
dec
pop
adc
sbb
jbe
mov
add
loop
sbbl
aaa
inc
ljmp
in
aam
lock
push
inc
mov
cld
fwait
add
cmp
push
sub
dec
pop
in
add
xor
mov
lret
fildl
shlb
add
mov
add
lea
jno
movsb
aaa
cmp
hlt
movsl
lahf
sub
or
test
and
and
pop
rorl
mov
dec
push
sbb
inc
add
orl
push
inc
clc
jp
push
jmp
aas
sbb
notb
incb
inc
clc
cmp
and
rcrb
lret
jmp
xchg
sbb
inc
sbbb
push
adc
aas
inc
push
repnz
xlat
push
xor
cmp
sbb
add
jae
cltd
clc
mov
add
push
sbb
mov
pop
adcl
jle
aad
cwtl
add
test
jmp
or
cmc
mov
and
sub
adc
add
jp
cltd
out
and
popf
mov
sub
mov
loop
jecxz
smsw
xchg
lds
jnp
add
je
add
push
inc
jle
sub
stos
andl
add
or
add
inc
inc
dec
jne,pn
xchg
pop
xchg
out
pop
cwtl
lods
xorb
daa
insb
aas
pop
sbb
push
add
js
notl
jbe
lods
jb
pusha
push
jmp
jge
cwtl
cmc
or
push
dec
inc
das
pop
xor
mov
add
or
rclb
mov
add
outsl
sbb
or
add
cld
jmp
lcall
cli
test
dec
idiv
cmp
push
cli
test
xchg
and
add
cld
jne
les
pop
stos
cmp
mov
xor
sub
jmp
or
inc
jae
and
ret
scas
push
rcrb
aaa
add
and
add
and
jnp
pop
dec
sub
add
push
push
add
cmc
test
jle
xchg
cmpsb
ficompl
outsb
daa
in
es
inc
pop
dec
verw
loope
adc
inc
add
test
aas
dec
jge
push
or
inc
mov
add
adc
pop
je
add
add
js
inc
popf
std
cmovle
outsl
cltd
test
sbb
call
out
ltr
imul
mov
cmpsb
movsl
bound
adc
pop
xor
xor
adc
daa
jb
ds
pop
loop
jmp
mov
or
pop
mov
inc
push
or
add
and
and
or
or
fiadds
nopl
mov
jl
test
imul
sbb
add
sub
cmp
mov
sbb
clc
inc
out
sbb
icebp
or
adc
add
sbb
add
fs
scas
or
inc
call
dec
add
pop
add
add
rdtsc
je
jbe
add
repz
xor
add
xor
and
add
adc
cltd
adc
dec
xchg
dec
std
cmp
sub
jg
add
mov
sub
mov
mov
test
push
pop
cmp
push
and
ss
outsb
test
add
add
das
adc
sub
or
lock
add
lods
dec
ficomps
add
out
in
cmpb
scas
push
jp
push
cmc
stc
incl
cmp
icebp
add
adc
sub
mov
pop
mov
cmp
loopne
or
sbbb
push
xchg
add
aad
ljmp
pop
add
dec
dec
test
push
sbb
inc
adc
pop
inc
pop
addb
das
dec
pop
loop
stos
ss
sub
jae
mov
pop
inc
adc
mov
or
arpl
inc
out
shr
imul
ret
sub
sbb
add
cmp
push
and
imul
loopne
test
fucom
push
ret
insb
out
js
add
push
sar
call
inc
cli
dec
rep
pop
pop
add
add
push
pop
lock
ficoml
xor
lahf
out
loop
sub
mov
daa
jge
add
cld
pop
add
mov
inc
jp
add
stos
pop
neg
shlb
out
gs
js
pop
scas
mov
mov
sbb
aam
cli
loopne
cmpsl
or
loop
add
push
mov
lods
in
add
inc
sbb
add
shll
testb
adc
xlat
add
in
and
mov
lret
pop
xor
and
dec
push
insb
pop
mov
pop
push
sub
inc
xchg
fsub
mov
mov
lods
add
lea
xchg
lock
outsl
push
jmp
rolb
add
xchg
cmp
adc
cltd
and
mov
nop
dec
or
mov
shlb
jns
add
or
cmp
push
adc
inc
clc
ja
jb
shld
push
mov
sbb
mov
je
xchg
iret
xor
push
pushf
in
movsl
dec
loopne
in
scas
fucomp
ljmp
inc
pop
pop
iret
adc
fisubs
cs
std
loop
add
jne
and
loopne
and
or
pusha
and
mov
shl
cli
and
int3
pop
sbb
mov
nop
dec
dec
add
hlt
test
mov
jae
cld
push
add
popa
aam
jp
add
xor
inc
cmpsb
dec
xchg
add
mov
add
xor
mov
pushf
adc
repnz
adc
repz
jle
popl
mov
sub
and
jl
push
cmp
or
inc
and
cmp
fmulp
mov
dec
xor
enter
test
push
imul
pop
sahf
or
push
push
adc
mov
das
dec
xor
push
mov
inc
pop
push
jge
mov
in
cmp
push
dec
stc
in
lahf
lods
fists
or
shlb
xor
add
dec
pop
cld
add
lahf
shll
dec
jl
pop
dec
push
sub
shlb
sbb
fdivrl
shrb
cmp
dec
xchg
add
test
push
dec
cld
or
and
pop
adc
or
push
push
int3
jmp
hlt
add
jo
push
xchg
in
push
inc
xor
sahf
mov
or
pop
adc
push
lret
pusha
test
filds
aam
movsb
jp
jbe
fcoml
popa
dec
cmc
sar
xchg
add
mov
inc
imul
cmp
lods
pushf
xchg
add
mov
cmp
clc
movsb
mov
test
mov
add
add
ret
and
je
shlb
push
loop
test
fmull
lds
mov
and
je
psubsb
in
hlt
jmp
add
dec
leave
adc
add
aas
movsl
sbb
add
je
mov
xchg
incb
pushf
mov
jg
cmp
dec
cld
in
lock
and
sbb
iret
jecxz
mov
mov
ficoms
dec
pop
push
repz
xor
cmp
and
test
pop
mov
mov
inc
add
or
and
inc
loopne
and
call
push
add
cli
mov
cmp
cld
xor
push
add
jo
sbb
jg
add
aas
inc
mov
ds
jp
stos
or
cmp
or
mov
out
add
cmc
incl
fldl
pop
fiadds
loop
xchg
sbb
add
xorl
iret
pusha
mov
adc
jb
cld
add
add
fwait
add
inc
push
push
imulb
ss
pop
fbstp
lods
inc
sbb
or
inc
aas
push
add
fsubl
std
dec
test
aas
add
call
adc
lahf
xchg
addl
xor
add
adc
loop
testb
pop
pop
add
add
and
add
rcrl
xor
add
inc
add
inc
push
sub
mov
inc
xor
add
data16
add
xchg
pusha
popa
or
fs
addb
adc
bound
mov
cmovno
mov
test
pop
push
cwtl
jns
inc
daa
and
or
das
adc
xor
shlb
mov
add
adc
testb
or
jne
cmp
je
mov
ret
int
mov
xor
roll
lds
pop
into
or
jae
and
push
fdivrs
add
enter
addl
in
lock
leave
sbb
ret
add
into
inc
negb
mov
mov
lock
int3
push
shll
mov
xchg
add
jne
mov
shr
int
and
push
and
mov
mov
add
insb
lahf
and
shufps
add
les
and
lock
jnp
xchg
out
sub
cltd
add
ljmp
xor
inc
aaa
je
or
add
add
pusha
xchg
lret
jmp
adc
fcomps
test
add
in
mov
dec
xor
add
jge
add
inc
lods
aam
adc
rcrl
and
add
add
mov
or
add
hlt
orl
jmp
lret
fldl
sub
lea
push
add
sub
jb
scas
aas
and
mov
xor
add
add
cwtl
stc
push
call
dec
mov
adc
cmc
out
xchg
lock
pop
lea
ljmp
add
jne
cli
or
adc
imull
add
in
add
add
adc
push
sbb
add
add
pop
cmp
jmp
jbe
add
out
add
int
hlt
test
int3
call
dec
dec
loopne
sub
jmp
call
cmp
push
push
xor
sbb
or
les
jb
icebp
cli
test
test
sarb
adc
insb
xchg
adc
in
test
sbb
std
or
lods
add
pop
inc
cmp
push
aad
add
outsb
jne
insb
dec
aam
jae
fisttpll
pop
lods
jo
leave
jg
add
mov
loop
add
jle
jmp
gs
pop
rcll
in
imul
add
xchg
shlb
xor
lods
cltd
dec
fmuls
add
or
test
adc
sbb
inc
mov
loopne
push
add
jl
inc
pop
inc
jbe
xor
fwait
cmp
add
in
jo
add
inc
es
push
and
imul
fs
rol
push
mov
sbb
lret
dec
ret
cwtl
sub
inc
add
out
inc
jno
ret
xlat
add
jecxz
jge
xchg
mov
jo
lock
add
mov
jge
cmp
xchg
add
or
add
cmp
add
sarl
test
rorb
add
push
rolb
cmp
loop,pt
std
adc
scas
push
les
dec
add
popl
iret
jg
shl
adc
mov
test
push
xchg
fsubrl
add
lcall
mov
add
stos
loopne
sbb
add
loop
filds
ljmp
mov
mov
adc
jg
aad
shl
cld
loopne
add
test
xor
mov
clc
pop
add
insb
xor
loopne
add
stc
mov
dec
inc
movsb
jo
pop
pop
out
mov
nop
push
cmpl
je
add
adc
outsl
jmp
bound
sub
or
push
xor
je
add
and
jge
addb
pop
xor
out
push
pop
jmp
popa
jp
lahf
out
loopne
add
cltd
bound
xor
jne
cmp
aam
subb
push
sahf
outsb
setae
sub
loop
add
andb
push
add
rclb
sub
adc
push
sbb
cmc
adc
pushf
mov
stc
mov
sbb
scas
cmp
aam
mov
mov
pop
mov
jo
pop
mov
add
mov
xchg
or
popf
mov
mov
out
add
mov
jg
push
inc
push
stc
sub
jb
scas
sti
cmpsl
pop
mov
cli
inc
xchg
mov
iret
xlat
xor
inc
loopne
add
negb
add
pop
dec
xorb
scas
jb
test
cmp
cmp
lods
add
cwtl
ds
and
loopne
add
mov
jo
stos
mov
les
sbb
ret
mov
faddl
shrl
push
in
sahf
mov
jnp
add
and
push
ret
or
sub
call
and
inc
jo,pt
add
loopne
push
jp
inc
gs
add
or
xor
add
inc
loopne
or
cmp
sub
int3
rcr
mov
jno
add
sub
ljmp
rcll
pop
xchg
sbb
cmpl
mov
movsl
push
test
and
jne
je
add
adcl
loopne
xchg
push
add
int3
nop
fmull
inc
je
mov
xor
xchg
cmpl
lods
xor
mov
pop
rorb
fistpll
mov
xor
push
aas
stos
or
adc
sub
mov
adc
mov
in
in
out
pop
add
testl
xchg
jne
push
push
push
lahf
faddl
jnp
repnz
push
sub
xor
lea
test
push
bound
rcr
sbb
push
jmp
add
cmp
add
or
jae
stos
sbb
inc
add
lret
adc
flds
lods
test
jo
mov
add
out
pop
jae
mov
cs
xchg
jl
push
inc
repz
sbb
je
add
pop
push
ror
and
sub
or
add
xchg
or
hlt
xor
and
aam
push
add
mov
inc
mov
sub
add
jnp
push
in
lds
sahf
adcb
add
jae
call
dec
add
push
andb
or
stos
jp
push
lahf
add
ret
add
aad
call
lods
jbe
test
pop
testl
js
xor
add
inc
dec
mov
add
insl
in
es
inc
aam
mov
xchg
add
cli
movsl
push
in
mov
aaa
cmp
shlb
mov
aas
mov
mov
xchg
imul
mov
add
jne
add
and
aam
inc
fdiv
in
pop
or
inc
mov
jle
fiaddl
loopne
xor
add
sbb
xor
aad
notl
call
mov
push
addl
call
add
inc
jo
sub
inc
push
mov
add
or
xchg
ret
add
jne
popf
je
dec
rcr
add
cmp
push
and
les
or
add
into
add
or
inc
add
xchg
add
or
test
push
loopne
jg
clc
xorl
and
aaa
push
inc
add
popa
enter
dec
and
push
inc
jl
jge
cmp
arpl
test
inc
jmp
mov
insl
ret
stos
push
mov
and
sub
sub
dec
std
or
adc
sbb
xor
add
xchg
scas
movsl
out
shl
adc
xchg
pop
push
add
insb
mov
add
inc
cwtl
and
je
pop
out
add
jb
jle
xchg
sahf
rorb
add
adc
add
outsl
dec
pop
jecxz
mov
push
es
test
mov
sahf
mov
aas
lea
mov
sub
pop
andb
add
adc
add
push
lret
rolb
jns
xor
add
pop
lock
sub
into
mov
je
dec
add
repz
clc
add
xor
add
sahf
pop
ret
cmp
pop
add
dec
adc
in
call
ljmp
sbb
stos
add
inc
push
push
jmp
pusha
hlt
or
pop
add
dec
movsl
pop
jne
cmp
sbb
ret
pop
add
test
push
pop
cmpsb
xor
inc
jmp
push
or
sbb
add
inc
add
adc
nop
lahf
in
add
jg
test
and
adc
xchg
mov
in
and
clc
pop
or
inc
add
jl
xlat
std
inc
adc
mov
add
loopne
or
lcall
pusha
cmp
sub
mov
adc
dec
aas
fstpt
jmp
push
or
add
imul
sbb
roll
adc
inc
xor
xchg
push
and
fcoml
lock
inc
pop
sahf
out
add
add
or
cmpsl
fwait
push
or
sbb
fidivrs
sub
sub
add
cmp
out
mov
mov
pop
cmp
sldt
sub
jl
adc
adc
mov
add
testl
std
push
add
scas
or
mov
cmp
nop
push
int3
xor
adc
fs
inc
or
xchg
loope
imul
xchg
adcb
inc
sbb
xor
popa
ret
pop
pop
mov
or
or
add
fs
jb
ret
nop
add
lcall
add
je
inc
adc
mov
sbb
xor
daa
aad
dec
cmc
inc
dec
jns
cmp
dec
stos
adc
orb
pusha
jno
lret
loop
out
xchg
xchg
pop
mov
mov
cmp
cli
mov
test
sub
inc
add
add
pusha
and
jbe
mov
into
and
rolb
add
inc
inc
jae
mov
adc
add
mov
jge
sub
rolb
add
repz
jge
rcrb
sub
ja
jno
rolb
pop
cmpsb
fcoml
or
xor
pop
das
mov
mov
mov
ja
or
leave
pop
test
shll
pop
pop
sub
push
add
pop
adc
cld
je
lcall
cmp
lsl
xchg
lods
rclb
push
sti
add
stc
and
jne
cmp
push
inc
xchg
inc
dec
cmp
je
push
mov
testb
shr
xchg
mov
fcomps
adc
out
ljmp
sub
mov
add
adc
shlb
flds
ret
cmc
gs
repnz
mov
movl
add
pop
or
adc
add
cmp
hlt
inc
add
hlt
jae
cli
jnp
pop
adc
shr
adc
inc
dec
xor
add
inc
xlat
jg
movb
push
pop
push
add
jbe
out
add
filds
cmp
cmp
js
addb
jo
in
stos
ja
add
iret
dec
adc
cli
pop
int
jp
aaa
cwtl
sbb
mov
and
jecxz
adcb
pop
pop
inc
aaa
orb
add
ja
push
and
xlat
inc
daa
dec
adc
imul
out
pop
or
sub
nop
pop
hlt
pop
jp
cmp
insb
seto
sti
inc
cmp
daa
in
xlat
mov
add
push
loopne
dec
dec
add
hlt
sbb
insb
add
adc
cmpl
or
and
cmp
adc
and
test
jbe
sub
push
and
pop
and
add
lock
fstps
xor
leave
add
inc
mov
mov
dec
add
add
push
call
add
add
jo
xchg
rolb
daa
jnp
cli
add
cwtl
movq
cmp
addb
and
sub
push
jo
enter
xchg
xchg
adc
les
ljmp
lods
add
js
push
orl
lock
inc
rolb
repnz
ja,pn
adc
out
lret
xchg
call
and
fcoms
cmp
mov
sbb
nop
jne
add
incb
nop
xchg
cmp
and
js
push
cmpb
inc
adc
add
rclb
jae
verw
xor
add
scas
push
lret
or
pop
push
cmc
mov
adc
sbb
or
lahf
cmpsb
add
stos
adc
in
lret
shr
xchg
dec
xlat
andl
mov
adc
ret
lock
cli
popl
lahf
jne
ss
mov
xchg
mov
loop
adc
or
cmp
movsb
in
add
std
pop
int3
cmp
or
fnstenv
jmp
dec
xor
xchg
loopne
inc
clc
hlt
out
add
adc
and
nop
in
jp
inc
mov
add
pop
in
add
mov
test
dec
pop
add
scas
lock
lods
pop
jecxz
cld
xchg
cli
les
xor
cmp
inc
ror
and
shlb
lods
mov
mov
and
push
cmpsb
dec
dec
xor
mov
push
or
test
cmp
aam
sub
add
push
add
add
dec
add
sub
outsb
cmp
repnz
cmp
or
sub
aam
xchg
ja
ljmp
jb
push
push
hlt
lcall
jg
pop
sbb
insl
cmp
aad
add
sub
inc
push
jg
jl
add
push
dec
fdivrs
in
adc
insb
pop
add
mov
sub
mov
lsl
je
into
dec
call
mov
rolb
add
cmp
cmp
mov
sub
cmc
xlat
mov
add
gs
int
sbb
mov
pop
lods
jne
add
add
adc
add
inc
add
adc
movsb
and
or
nop
mov
in
xchg
add
inc
push
xchg
ds
insb
adc
out
xchg
push
fwait
cvttps2pi
xchg
inc
mov
add
mov
push
fs
cmp
adc
inc
and
dec
sub
mov
cmp
popa
inc
add
out
in
push
dec
cltd
call
sahf
popa
out
nop
loope
jmp
jle
cmp
hlt
jne
xchg
movsl
scas
mov
add
jl
sub
mov
insb
pop
add
pop
in
and
xor
or
push
add
out
or
add
shl
in
lea
adc
jmp
int3
roll
insl
xor
out
add
pop
movsl
aam
mov
mov
inc
fcomps
jns
xchg
sub
sub
and
add
jl
inc
push
repz
add
enter
cs
add
test
rorb
pusha
aam
sub
add
mov
pushf
adc
sbb
pop
enter
add
jno
pop
xchg
inc
icebp
add
cmpsl
adc
push
les
adc
adc
jo
jle
pusha
mov
mov
add
inc
xor
adc
mov
dec
inc
or
cmp
xchg
sbb
aas
push
aas
push
or
dec
xchg
sub
cmc
jno
xor
or
movb
add
jns
movsb
setne
rolb
sbb
push
add
and
ds
shll
or
mov
adc
adc
xor
dec
sbb
xchg
pop
cmp
and
or
inc
stos
mov
dec
add
mov
int3
pop
dec
add
mov
add
mov
mov
push
lldt
lahf
fidivs
add
inc
sub
dec
add
push
sub
xor
arpl
clc
rcrl
pop
xor
pop
pushw
mov
or
mov
stos
fdivrs
xor
add
sub
push
andl
rolb
push
fsubrp
jb
clc
add
ret
add
daa
mov
adc
cmpsl
cwtl
jmp
jbe
leave
fadd
jmp
and
pop
push
in
daa
mov
mov
pushf
add
cmp
and
in
push
dec
and
fdiv
sbb
push
dec
mov
dec
add
repnz
in
push
ljmp
inc
in
mov
mov
push
add
sub
repz
loope
pusha
xor
in
xor
mov
dec
and
jle
add
int3
pop
push
int
push
add
into
add
test
dec
add
adc
or
sbb
mov
movsb
pop
inc
fwait
hlt
gs
adc
das
gs
cmpsl
mov
adc
add
rcrl
fs
pop
sub
popa
outsb
cmpb
and
sub
stc
pop
add
sub
or
add
ds
add
inc
xor
sti
or
movsl
adc
cs
loopne
or
add
add
jp
adc
push
arpl
sbb
scas
or
jle
sahf
mov
add
lret
push
xor
sub
dec
or
je
add
fmuls
push
add
lds
pop
hlt
cmpb
test
xor
push
add
stos
dec
int
cmpsb
pop
jae
packssdw
cmp
dec
test
scas
push
stos
cmpb
lock
mov
es
and
repz
clc
mov
test
call
lock
or
add
outsb
or
mov
jge
push
pushl
orps
push
inc
adc
or
add
out
and
in
jae
pop
xchg
ror
add
out
sub
push
add
cmpl
jbe
dec
add
int3
push
shll
adc
sbb
aam
shl
xchg
add
pop
jge
movsb
cli
mov
add
mov
and
pop
inc
mov
mov
inc
leave
xlat
jbe
sub
xchg
in
adc
sbb
pop
in
push
repz
or
lret
or
xor
fdivs
push
dec
mov
lahf
rcr
lret
xchg
dec
add
pop
inc
push
fsubs
adc
sbb
jno
sbb
dec
fstps
in
sub
mov
stos
cmovg
ret
dec
movsl
push
mov
jl
push
scas
adc
cmc
lahf
fisttps
jp
loopne
dec
aad
pop
pushf
mov
call
inc
add
test
js
add
lock
in
mov
xchg
fs
adc
cmp
dec
sbb
mov
idivb
aam
push
inc
mov
shlb
or
pop
add
push
mov
add
orl
add
inc
sbb
mov
pop
call
rorl
mov
cmp
push
adc
jbe
xchg
mov
loopne
xor
push
rorb
data16
or
mov
loopne
pushf
js
ja
dec
in
pop
and
xor
add
or
cmpb
add
popf
popa
mov
adc
xor
fs
xor
andl
cltd
xor
aas
gs
add
das
fs
lds
es
cmp
shrl
xlat
and
rcrb
movsb
adc
pop
aad
pop
repz
or
sti
jno
add
xor
mov
xchg
out
add
pop
cmp
aam
mov
dec
sbb
pop
clc
cmp
cmpsb
xorb
inc
and
sbb
jl
js
add
lea
add
jne
mov
pop
cmp
jbe
hlt
sub
add
pop
lock
cmp
dec
cmp
dec
add
pop
lea
jg
xor
adc
inc
push
mov
dec
shl
call
add
test
fiaddl
push
xchg
xor
add
cmpsl
popf
push
lods
jl
leave
add
bound
add
mov
and
or
mov
pop
push
repz
mov
adcb
dec
sub
stc
add
lea
and
pushf
outsl
dec
rorl
inc
fstl
jmp
std
sbb
std
dec
outsl
or
repnz
sbb
push
lea
push
dec
jg
inc
mov
es
mov
push
adc
aas
cltd
in
adc
enter
sbb
das
xor
add
jb
out
sub
cmp
orps
add
loopne
adc
lds
xor
pop
repz
mov
sub
into
xchg
in
mov
inc
pop
adc
rolb
sub
in
test
add
inc
mov
add
pop
or
adc
cmp
add
cltd
adc
push
add
push
mov
inc
test
aaa
lea
push
loopne
mov
test
aam
push
pop
xchg
or
pop
inc
nop
stos
mov
repnz
dec
inc
pop
mov
or
and
inc
inc
jecxz
push
pop
xor
or
push
inc
dec
xor
jle
movsb
sbb
lods
testl
xor
and
pushf
add
jmp
add
xchg
cs
mov
cltd
push
jmp
pop
cld
adc
xor
ja
hlt
xchg
add
sbb
add
or
stos
lock
bound
dec
repnz
or
ss
sbb
pop
add
test
lds
lret
ret
or
add
and
push
add
xor
cld
jno
les
push
xor
add
push
movsb
add
iret
les
xlat
mov
and
test
pop
dec
or
push
jmp
enter
ror
in
adc
jmp
arpl
test
or
and
pusha
jne
lods
and
cmp
add
sub
push
je
call
xor
xor
or
into
push
ja
sub
or
sub
adcb
sbb
out
outsl
add
cmpsb
pop
cmpl
or
push
iret
clc
scas
incb
ret
orb
popf
pop
jno
dec
xor
repnz
ret
pop
mov
test
mov
cmpsl
xorl
mov
add
imul
dec
pop
add
orb
cltd
add
adc
jno
jmp
add
xor
mov
push
hlt
ss
adc
add
mov
push
push
mov
bound
xor
xchg
mov
addr16
in
push
add
pop
adc
push
jno
inc
jp
pop
push
xchg
or
hlt
loope
sbb
xchg
dec
dec
or
pusha
and
or
and
fidivl
cmp
xlat
mov
add
shlb
pop
add
adc
lret
lea
or
cmp
adc
mov
dec
add
cli
mov
dec
lahf
add
xchg
fisttpl
test
fldl2t
je
dec
cli
inc
add
outsb
sub
jg
inc
sahf
dec
lods
cmp
fldcw
sarb
adc
xor
pop
mov
inc
add
out
fadds
xchg
mov
insb
add
sub
add
sub
jb
mov
push
dec
pop
lds
xchg
add
out
mov
and
xor
lods
pop
and
add
push
xchg
in
inc
mov
and
lods
adc
or
push
and
lea
jecxz
add
adc
jp
ds
inc
andb
bnd
dec
mov
outsb
cmp
jl
sar
test
fmuls
dec
xchg
mov
das
lock
and
rolb
cmp
add
xchg
cmp
and
dec
ficoml
and
push
inc
adc
and
dec
insl
xchg
jl
mov
push
daa
ja
xchg
rolb
aad
aaa
push
ret
leave
adc
jmp
jbe
sbb
addr16
pop
repz
adc
mov
ficomps
mov
sbb
push
add
addl
jne
cmp
jnp
pusha
push
xchg
subb
sbb
lds
rol
notb
dec
adc
push
daa
sbb
adc
test
lret
add
fsubs
adc
pushf
ds
sbb
loop
pop
add
inc
test
cmovl
fiadds
jecxz
lods
mov
xlat
testl
shlb
jae
push
xor
gs
push
sub
cmp
les
push
jg
pop
sahf
das
jns
lods
je
in
mov
jb
inc
hlt
inc
add
fs
mov
push
sti
addl
mov
inc
aaa
add
je
inc
movsl
sbb
rcll
xlat
mov
clc
mov
jne
cmova
and
lock
ret
loop
scas
add
pop
ret
cwtl
and
add
inc
push
mov
xchg
hlt
push
add
mov
out
add
mov
in
dec
gs
sub
leave
fs
mov
ljmp
jns
add
fistl
test
aas
fdivs
test
push
imul
or
cmp
bound
mov
loopne
mov
aaa
add
push
pushf
test
inc
xorb
cmp
rclb
add
jmp
test
push
daa
not
mov
rorl
mov
lcall
push
fsts
fcomps
adc
sbb
push
pop
inc
movsb
and
add
into
invd
add
pop
lret
dec
xchg
popa
xchg
push
sub
inc
repnz
mov
jg
xorb
out
daa
pop
push
repnz
test
imul
test
jecxz
lods
fistl
int
call
jnp
inc
xor
outsb
pop
add
inc
or
mulb
cmp
insl
cmpb
jmp
pop
sub
dec
outsl
add
cmp
add
mov
dec
pop
ljmp
test
and
in
adc
adc
repnz
adc
jmp
sbb
lods
sbb
sub
dec
loopne
add
loop
or
sub
xor
inc
shld
aas
add
rcrb
lods
or
cs
push
adc
mov
push
rorl
adc
jg
add
das
sub
pushl
sbb
add
pop
fs
call
subl
jmp
cmp
add
aam
push
lcall
xorb
cmpsl
hlt
ret
popf
stos
mov
int3
mov
je
and
sub
push
add
in
js
movsl
cs
cs
mov
mov
push
jle
add
rorl
mov
pop
push
add
in
push
test
jg
add
pop
pop
in
rolb
jno
add
or
mov
pusha
adc
cltd
sbb
jecxz
movsb
mov
jmp
sub
mov
dec
or
dec
jmp
inc
add
in
mov
fs
cmp
addr16
mov
fimuls
sbb
sbb
aaa
adc
add
add
and
fstpl
lds
les
push
js
mov
and
fdivs
es
cli
jo
sbb
mov
or
mov
jbe
rcrl
call
ficoms
or
ret
sbb
inc
ja
ljmp
aas
in
ret
rolb
sbb
dec
inc
add
sub
aam
popf
or
add
cmp
push
pop
in
pop
je
test
jp
inc
out
and
dec
shlb
xlat
inc
xor
fists
daa
or
add
ror
jg
in
or
mov
les
in
pop
push
cld
push
cwtl
xchg
inc
add
mov
dec
sbb
hlt
and
pop
mov
pop
cmp
loope
movsb
inc
loop
pop
jecxz
jl
push
and
das
xchg
enterw
add
cmp
shrb
jmp
loope
out
adc
push
gs
add
xor
inc
pusha
ss
lret
push
push
outsl
andb
xor
cld
pop
xchg
add
rcrb
add
cmp
mov
addl
push
mov
insl
cmpsb
jo
add
sbb
test
in
daa
push
jno
es
add
dec
add
call
loop
or
test
nop
add
and
adc
xlat
pop
int3
or
rcl
add
jnp
cmp
sub
out
add
xor
push
sub
push
add
mov
pusha
jle
push
xor
popa
or
stos
int3
jne
or
jbe
push
xchg
add
and
shlb
lock
je
push
rorb
hlt
cld
scas
add
imul
cld
frstor
cmp
repnz
xor
mov
repz
push
movsl
xor
test
orb
nop
sbb
mov
sbbl
mov
rolb
dec
rorb
int3
jo
sub
jmp
je
push
xchg
enter
and
loope
jbe
and
cmp
adc
idivl
scas
in
int
jno
dec
and
push
cli
pop
and
frstor
pop
xchg
add
shrb
add
add
push
push
add
pop
cmp
and
sub
xor
faddl
cld
dec
mov
add
rcll
xlat
adc
out
cmc
add
adc
pop
mov
or
jmp
pop
cmp
dec
cmpsl
jmp
lret
add
add
scas
out
leave
insb
sbb
addr16
rcl
test
mov
lock
mov
add
inc
adc
insb
int3
or
and
enter
in
push
mov
aaa
add
add
addr16
add
into
sub
lock
add
mov
pop
hlt
rolb
adc
inc
mov
adc
xchg
xchg
hlt
and
adcl
add
rclb
lcall
lret
push
sti
sub
dec
jns
mov
inc
pushf
les
test
lds
dec
in
pop
das
add
es
inc
mov
xor
push
sbb
xor
int
and
cmpl
and
add
jnp
out
adc
add
sbb
xchg
sbb
mov
loop
inc
and
xor
push
fildl
xchg
cltd
mov
fcom
cmp
mov
xchg
xchg
push
add
mov
add
push
mov
les
sub
pop
mov
test
mov
add
or
cwtl
gs
push
rolb
jmp
sub
pusha
cld
or
sbb
rolb
jecxz
rorb
xchg
mov
cmp
imul
psubsb
push
pop
sub
or
stos
add
nop
push
mov
xor
add
add
add
add
sub
add
adc
sbb
fnsave
dec
shrl
cmp
pushf
pop
lods
mov
push
or
mov
les
add
adc
pop
dec
repz
pop
xor
mov
xchg
or
subl
push
inc
or
test
mov
sub
jbe
add
push
cmp
call
jmp
test
sub
fs
bound
cmpsb
addb
xor
add
sub
add
sbb
mov
repnz
pop
inc
add
adc
xchg
sahf
cmpsl
hlt
call
push
add
insb
and
inc
scas
pop
push
sarb
add
jne
mov
jbe
push
jg
mov
sub
sub
inc
shlb
adc
add
js
mov
popa
hlt
add
inc
add
adc
xlat
pop
add
loope
pop
loopne
cld
add
inc
pop
in
add
leave
and
imul
add
push
pop
sbb
lsl
xor
pusha
mov
inc
adc
push
and
incl
xchg
mov
fwait
stc
lods
mov
cld
lock
add
lret
jecxz
lahf
jnp
rcrb
dec
int3
and
imul
push
push
adc
mov
add
test
ja
mov
ss
jp
add
push
pop
add
mov
jb
adc
les
adc
add
cmc
or
and
movsl
scas
or
jecxz
test
inc
jl
xchg
rcrl
fsubr
jnp
aas
dec
xchg
mov
push
jbe
mov
mov
adc
bound
leave
andb
or
jb
dec
xchg
stc
loop
test
pop
insb
xor
cld
add
dec
lds
jp
add
dec
add
inc
das
mov
xchg
int
xor
hlt
cmp
mov
mov
divl
sub
jmp
inc
gs
enter
xchg
test
add
insb
jmp
mov
mov
daa
inc
addl
add
or
adc
or
adc
or
fisubl
lahf
xchg
roll
into
in
repnz
mov
cmc
lock
ret
test
rcll
dec
out
sti
xchg
scas
lock
les
lahf
pushf
add
push
pop
mov
call
loopne
cmp
stc
mov
inc
loopne
push
je
call
and
lods
fs
adc
add
dec
and
sbb
xlat
add
repz
dec
ljmp
shlb
ficoms
and
and
mull
fsubs
push
or
pop
nop
lret
add
pop
push
xor
add
push
mov
not
and
test
push
pop
push
sub
fiadds
mov
add
dec
inc
insb
jmp
mov
cmpsl
loopne
or
hlt
add
push
jmp
add
and
push
push
mul
add
mov
mov
add
insb
xor
ss
shlb
cmp
outsl
cltd
mov
push
aaa
mov
add
std
push
lret
hlt
xchg
mov
cmp
pop
cli
and
scas
jmp
jnp
inc
push
popl
pop
jmp
mov
xor
jae
add
addl
std
sarb
push
add
dec
push
adc
shrb
cmp
pop
sub
stc
addb
call
add
push
and
adc
xor
arpl
and
daa
paddusw
jmp
popf
add
nop
in
jmp
mov
add
dec
and
jbe
xorb
push
movsl
cmp
popa
jmp
jl
add
lea
loopne
and
arpl
or
fsub
rcll
pop
add
xchg
mov
rol
add
pop
dec
xchg
hlt
enter
pop
jno
testl
icebp
push
sbb
cmp
mov
jmp
cmpsl
add
inc
mov
lret
pop
add
add
or
in
xchg
int
mov
shlb
and
jmp
pop
in
add
cmpsb
and
call
out
xchg
push
inc
dec
adc
outsl
add
push
sbb
add
adc
add
add
adcb
fldenv
sbb
or
mov
adc
add
in
lret
nop
enter
fcomp
insl
lods
and
and
cs
cmp
sbb
enter
push
xchg
andb
sarl
pop
dec
sbb
lret
jecxz
adc
add
sub
sahf
or
fdivrl
rcrb
rolb
push
into
or
lds
cmp
aaa
mov
jle
cmpsl
in
and
mov
repnz
movsb
aaa
push
mov
pop
sbb
sub
js
and
adc
mov
inc
cmp
xor
mov
jmp
adc
pop
jae
pop
scas
shlb
and
out
fldenv
out
xor
fstps
hlt
pop
orb
sti
add
adc
add
pop
and
mov
inc
xchg
push
pop
xchg
push
cmpsl
imul
fldpi
mov
stos
add
pop
cmp
and
inc
push
rorb
ret
ficoml
push
or
shrd
dec
popf
mov
add
outsb
pop
jle
mov
add
mov
test
add
sub
cmp
das
mov
push
arpl
popf
cmp
add
and
or
push
pop
lea
inc
outsb
add
cmpl
jae,pt
imul
add
das
cwtl
fs
dec
add
add
insb
pop
lcall
dec
mov
add
lock
push
hlt
push
inc
add
mov
xor
and
test
loop
divps
rol
pop
sub
das
fdivrs
sbb
xchg
in
add
pop
ljmp
xchg
mov
cmovae
add
daa
jns
adc
push
jp
pop
dec
or
add
lcall
out
aas
and
sets
add
div
and
mov
rorl
addl
sbbl
add
lods
push
es
xchg
add
stos
cmovae
movl
jp
and
add
jmp
jge
nop
and
add
test
inc
leave
adc
ja
or
dec
add
sarl
lcall
pusha
shll
movzwl
stos
add
push
mov
rorb
mov
test
add
jne
jns
inc
movsb
orb
pop
inc
decb
mov
add
xor
pushf
mov
lcall
dec
inc
je
stc
insl
roll
mov
inc
ja
add
dec
jmp
stos
or
add
inc
or
add
mov
leave
pop
nop
mov
pop
jmp
adc
stos
enter
incl
stc
test
add
mov
jle
cmc
jne
ret
cwtl
popf
rorb
mov
push
shll
pop
test
add
sub
and
add
jmp
sahf
sub
movsl
mov
inc
or
inc
cs
jno
jle
add
call
out
nop
add
push
testl
je
mov
pop
test
int3
scas
test
dec
addl
cs
push
add
stos
int3
loop
cmp
orb
pop
xchg
and
fdiv
mov
fwait
dec
in
pop
jl
or
fnstenv
add
add
sbb
pop
clc
cmp
add
jecxz
push
add
pop
loope
xchg
loopne
add
mov
inc
pop
sbb
arpl
jo
mov
mov
loope
pop
repz
out
push
xchg
adc
aad
jbe
and
and
popf
push
push
repnz
in
adc
adc
jp
add
call
das
jg
sbb
cs
inc
adc
push
in
movb
mov
mov
cmpl
stc
pop
add
sub
cld
fdivrs
dec
adc
add
cmp
add
push
jmp
add
loope
sub
sti
popl
jb
mov
push
add
fcoms
xchg
mov
add
leave
pop
icebp
push
mov
push
in
xchg
and
cmc
mov
loopne
add
orl
xchg
jbe
dec
mov
cmpb
add
mov
or
leave
xor
test
push
and
loope
and
nop
or
push
adc
je
cwtl
dec
pusha
aam
mov
loope
mov
les
or
mov
and
adc
rolb
sub
scas
notb
or
incl
pop
shr
or
mov
push
dec
pop
dec
push
jp
ret
xor
cmpsl
pop
add
pop
add
dec
push
push
mov
xor
leave
roll
add
sbb
jns
cmp
add
mov
ljmp
xchg
xchg
sti
pop
mov
out
pusha
sub
jge
adc
adc
adc
add
adc
mov
add
rcrb
add
inc
popa
or
adc
inc
cmp
add
lcall
pop
mov
cmp
add
notb
pop
or
es
sbb
inc
ss
add
enter
sub
testl
out
jl
add
inc
push
mov
fdivrp
or
cmpsl
add
pop
add
lret
add
adc
sbb
loop
cmc
lock
add
sti
push
add
jnp
sbb
iret
add
dec
stc
icebp
aam
or
dec
push
in
scas
jne
jae
pop
scas
out
mov
mov
xchg
dec
inc
idivl
ret
mov
xchg
xchg
xor
clc
adc
and
mov
in
pop
call
mov
adc
adc
xor
or
or
add
loopne
and
icebp
je
add
jp
in
dec
cmpsb
xchg
add
mov
push
adc
cmp
fsubs
xchg
and
pop
mov
inc
push
xchg
add
fstpt
lahf
xor
lds
imul
pop
inc
cmp
shrl
ret
xchg
test
jb
out
mov
lods
dec
mov
add
std
fdivs
and
popa
cli
mov
in
hlt
lods
sbb
call
out
push
dec
or
in
es
xchg
pop
mov
adc
add
test
inc
das
rorw
or
into
push
ffreep
and
incb
push
sub
push
shrl
outsb
subb
add
jmp
push
clc
cltd
repnz
icebp
shll
mov
lret
add
jle
daa
cmp
in
xchg
jno
pop
cmp
sub
loop
add
lea
lods
pop
adc
pushl
popf
call
popa
ret
jle
push
push
idivl
sub
mov
fidivrl
sti
mov
push
das
mov
pop
rol
adcb
and
div
xchg
shll
or
inc
cmpsl
add
add
lods
lds
clc
mov
inc
jmp
scas
sub
and
repz
jl
add
sub
add
shrb
sbb
or
and
movsl
xchg
push
addl
and
adc
leave
jle,pt
fldcw
jo
jae
cmp
iret
dec
clc
jg
dec
jge
pushf
dec
mul
add
enter
sub
mov
add
xor
cmp
mov
jg
mov
mov
popf
pop
ds
sbb
jecxz
cmp
add
push
sarb
xchg
inc
loop
sbb
mov
mov
aas
fs
movb
je
add
movsl
and
pop
sarb
sbbb
sub
dec
add
xchg
das
xchg
mov
inc
hlt
adc
sbb
dec
mov
push
or
ret
int
and
addb
nop
cmp
jnp
inc
sbb
sti
push
daa
or
or
ljmp
inc
out
mov
jns
add
xchg
and
sbb
clc
and
jae
andb
mov
sbb
shlb
test
or
and
cwtl
lods
mulb
add
xchg
fs
call
xchg
xchg
push
jo
cmp
lahf
bnd
sub
mov
adc
dec
xchg
int3
cmp
add
rolb
add
ja
cmp
in
fs
add
xor
add
xchg
imull
adc
lock
dec
orb
lods
in
sub
push
aam
lret
add
into
enter
mov
add
sub
sbb
push
ds
test
push
sub
and
loop
add
inc
insb
sub
pop
dec
lods
and
test
scas
clc
push
pop
movsl
stc
xchg
inc
in
cmp
daa
jne
in
and
add
mov
dec
scas
lret
add
mov
add
add
jmp
fdivs
mov
insl
and
out
in
add
inc
lods
dec
repnz
mov
adc
dec
je
xchg
cmp
and
adc
ds
xchg
add
inc
or
jns
adc
or
test
add
adc
dec
pop
out
mov
cwtl
shll
add
jb
enter
add
icebp
push
jo
in
push
or
adc
mov
call
mov
mov
or
xchg
dec
out
xchg
js
add
xchg
fs
jnp
add
pop
in
mov
and
jmp
cli
and
push
add
pop
jae
mov
xchg
das
and
call
pop
cmp
and
adc
or
sbb
jnp
sbbb
mov
bound
push
xchg
add
sbb
jp
sub
mov
push
pop
shlb
push
loopne
test
sub
add
sub
and
xchg
cmpsb
push
cli
jnp
add
cmp
sbb
incl
loop
stc
ds
adc
push
adc
xchg
mov
lea
dec
push
lahf
xor
add
add
jl
dec
roll
scas
pushf
in
cmpsl
dec
test
add
loopne
hlt
std
popf
xchg
push
or
pop
mov
mov
xor
mov
add
pop
mov
add
and
ja
sbb
pushf
mov
cmpxchg
pop
push
shlb
mov
lds
add
dec
test
add
xor
add
or
sahf
inc
shr
add
cld
adc
sbbb
push
negl
push
lock
mov
daa
or
inc
add
lods
add
and
mov
ljmp
jae
nop
xor
test
add
scas
dec
loop
sub
aad
jbe
xor
xchg
pop
xor
jno
outsb
lahf
lret
loopne
das
cmpsb
imul
cld
pop
adc
push
push
cvtps2pi
jg
sbb
jle
popa
add
jnp
scas
pop
xchg
mov
xchg
les
inc
jle
xchg
clc
jp
roll
stos
mov
andl
mov
adc
xor
gs
pop
jmp
arpl
sbb
lret
jg
mov
int3
inc
repnz
xchg
dec
pop
push
sub
cmp
xchg
call
and
xchg
out
dec
mov
aas
icebp
flds
cmp
add
aam
movl
jb
in
xorb
loop
out
pop
cwtl
or
add
xchg
lds
lret
pop
mov
jp
test
push
jnp
and
test
xchg
xor
sub
and
sbb
add
not
adc
out
adc
and
add
add
add
rol
stos
sub
sub
lock
ss
add
lds
shlb
mov
subl
add
inc
add
je
iret
cmp
enter
add
mov
in
add
es
mov
mov
xchg
pop
sub
mov
repz
push
push
cmp
aas
mov
xchg
add
lods
lea
cltd
dec
add
sbb
nop
mov
jg
sbb
jbe
insl
testb
or
daa
push
popf
jge
mov
stos
jl
adc
enter
clc
lcall
pushf
sub
movsb
or
fcoms
push
and
and
mov
jne
lods
cmp
filds
sbb
inc
add
cmp
inc
mov
pop
rcrl
mov
pop
or
cwtl
add
and
inc
add
add
pushf
out
aas
adc
add
clc
adc
call
add
cmpsl
es
pop
lods
outsb
add
jg
mov
add
jge
jbe
mov
shrb
movsb
add
add
movsl
inc
bound
or
testb
push
int3
xchg
mov
jmp
loopne
lcall
imull
and
sbb
jnp
add
test
aas
adc
jmp
pop
clc
aam
testl
int3
xchg
xchg
push
add
lret
lock
fwait
test
loop
sbb
jmp
and
call
mov
rolb
repnz
add
popf
repz
dec
or
cmp
and
adc
xchg
js
xchg
jg
add
mov
jne
cmp
in
movsb
dec
faddl
mov
cmp
dec
and
aaa
pusha
add
cmp
jmp
add
or
pop
inc
fadds
xor
cwtl
adc
test
clc
call
push
add
or
add
adc
push
sbb
loop
add
je
repnz
mov
pop
daa
call
dec
repz
add
or
xor
jg
add
push
shrb
add
xchg
mov
add
inc
fimull
aam
jp
xchg
cmpb
je
sbb
cltd
mov
sub
xchg
sbb
push
or
dec
pop
dec
clc
add
leave
xchg
flds
add
dec
jl
add
add
test
loope
or
add
movsl
adc
push
scas
xorl
sbb
out
push
cltd
lock
push
es
scas
add
sarb
lods
push
and
nop
push
loop
add
inc
mov
or
daa
and
inc
std
sbb
orb
jl
cmp
addb
iret
push
adc
sbb
add
notl
mov
add
mov
inc
mov
and
adc
jp
add
jno
dec
push
inc
add
outsb
sbb
daa
inc
data16
orb
adc
add
pop
bound
inc
ja
cmpsl
in
add
xchg
das
add
ror
jl
into
mov
rcr
mov
sbbl
repnz
sbb
mov
add
lahf
add
push
std
test
mov
or
push
addr16
xchg
add
or
pushl
out
and
sbb
nop
or
das
and
push
fadds
data16
add
add
clc
xorb
push
outsb
lret
test
cmpsb
and
insl
call
cmc
lods
fildl
jmp
pop
lret
fs
add
test
add
lret
sbb
sub
jl
hlt
jmp
in
add
lret
pop
out
add
jnp
mov
pop
stos
add
inc
clc
shl
add
pop
rorb
inc
pop
not
sub
and
push
movsb
cmc
lahf
sbb
and
or
xchg
aaa
nop
pusha
lods
adc
pop
jl
mov
pop
rcl
or
xor
clc
sbbl
inc
xor
cmp
in
in
lret
add
fs
sti
mov
xchg
push
insb
inc
sbb
mov
mov
mov
mov
push
sbbb
xchg
or
xchg
mov
add
test
push
jmp
sbb
add
and
icebp
mov
ret
add
scas
push
pop
or
out
and
add
push
jmp
int3
pusha
jnp
inc
mov
sub
stc
add
stc
loope
js
outsb
sahf
clc
or
fcomps
sub
repz
mov
inc
inc
add
and
sbb
mov
out
jns
add
adc
and
cvtps2pi
and
verw
les
push
ss
mov
fs
add
aas
and
xor
jle
mov
and
add
mov
dec
push
add
repnz
push
clc
mov
and
cld
mov
cmpsb
adc
mov
shlb
add
push
add
xchg
lods
pop
inc
xor
mov
xchg
pushl
in
add
xor
test
mov
data16
add
sahf
dec
daa
call
dec
dec
mov
je
ret
sahf
adc
push
pop
cmp
add
popf
mov
mov
ja
or
das
dec
in
ficomps
imul
test
push
mov
push
push
push
cmp
adcl
cmpsb
mov
lock
jnp
fiadds
sbb
repz
rcr
push
pop
lds
stc
ror
add
dec
jecxz
in
and
cld
jg
add
or
lahf
jbe
repnz
pop
cmc
scas
cmp
xlat
add
jg
or
lret
or
sub
sub
inc
sub
cmp
add
adc
nop
shr
inc
rol
daa
or
ds
add
sub
jns
std
cmp
shll
ret
mov
xor
sbb
or
rorl
and
add
iret
sar
adc
aaa
mov
cltd
or
test
in
add
sar
cmp
mov
mov
push
loope
loopne
aas
add
jg
add
stc
jecxz
mov
mov
xor
push
push
cmpsb
sbb
or
xchg
mov
fdivrs
in
push
ja
xor
add
or
dec
nop
addb
sub
jbe
add
sbb
cmp
add
loopne
stc
out
pop
mov
inc
mov
push
add
cmpl
jl
add
setg
leave
shl
call
sbb
add
lret
dec
sbb
mov
jmp
jp
add
rcll
clc
push
test
dec
xchg
leave
push
mov
orl
mov
call
pop
add
xor
int3
in
cmpl
icebp
or
mov
aad
add
jmp
incb
sub
or
out
dec
int
add
inc
add
pop
add
sbb
push
inc
xchg
stos
add
mov
cmpb
inc
mov
mov
cmp
inc
or
orl
push
cmp
jp
xchg
jnp
inc
mov
les
add
pop
addl
adc
adc
sbb
and
dec
aaa
pop
inc
lock
sbbl
lret
add
pop
add
pop
mov
orb
je
mov
faddl
and
arpl
add
call
xchg
add
cmp
out
sub
mov
dec
sti
add
fdivl
dec
leave
xor
sti
adcb
test
adc
add
rorb
mov
lock
je
dec
mov
aam
pop
pop
mov
clc
fs
call
sbb
jl
add
ljmp
cli
xchg
jb
add
xchg
ds
and
pop
lock
cmp
xchg
test
call
insb
inc
je
sub
jb
xchg
adc
mov
cwtl
ror
and
sbb
dec
and
cmp
mov
dec
out
jnp
or
push
add
mov
dec
cmp
clc
xchg
jne
enter
add
js
sub
in
aam
roll
stos
xchg
adc
add
in
shlb
xchg
fwait
cld
inc
in
movsb
add
cmp
push
xchg
rcrb
sub
mov
or
maskmovq
idivl
in
sbb
cmp
sti
xor
add
pop
jl
sbb
mov
rorb
ret
add
pop
inc
iret
add
mov
mov
xor
lea
push
movsb
mov
sub
adc
push
pop
add
or
int
pop
adc
adc
push
jg
and
dec
les
cmc
test
sub
or
mov
jle
in
cmp
add
imul
mov
fisttpl
andb
jge
or
add
adc
in
sbb
pop
mov
rorb
bound
mov
leave
and
cmp
add
mov
add
stos
ret
adc
fstp
add
ljmp
add
add
cmp
push
adc
lahf
mov
and
add
cmp
sbb
ss
sbb
loopne
shrb
sbb
jne
xor
jge
jmp
and
or
inc
data16
dec
imul
or
cltd
lret
iret
mov
push
sub
test
push
push
xchg
fs
or
push
xchg
pop
sub
inc
clc
loop
pop
add
push
rorl
fildl
iret
cmp
cs
test
or
cmp
addb
out
mov
add
pusha
cli
jle
arpl
push
add
cld
sbb
adc
lea
notl
push
movswl
or
into
sub
stos
pop
cmc
imul
aam
add
fnstcw
lea
adc
add
test
add
add
mov
out
sbb
add
pop
push
cmp
aaa
mov
scas
push
int3
inc
sbb
addr16
inc
test
pop
aas
jns
push
and
loopne
pusha
rcrl
into
add
sub
mov
add
lcall
push
push
dec
push
sbb
imul
mov
add
add
push
inc
add
shrb
add
sbb
icebp
jg
add
pop
add
ja
pop
sbb
dec
out
cs
test
jo
test
rolb
sti
mov
adc
lock
mov
xchg
and
add
rclb
or
jge
add
pushw
jbe
and
mov
dec
adc
xchg
in
jl
pop
add
mov
sub
fadds
out
pop
dec
cmp
pop
add
add
inc
cmp
roll
ds
out
stos
add
mov
iret
pop
mov
add
mov
mov
adc
subb
push
cltd
shrl
inc
or
add
cmp
jecxz
adc
add
movsl
adc
jno
add
in
imul
mov
enter
sub
addl
mov
stos
add
jne
sbb
xor
sub
push
mov
push
xchg
aam
notb
pop
and
mov
scas
add
fsubrs
add
sub
and
add
jo
gs
jb
xor
sarb
dec
dec
and
add
dec
or
push
push
data16
popa
add
lret
arpl
add
call
arpl
ss
loop
bswap
pop
add
mov
inc
les
hlt
sub
cmp
mov
pop
xchg
dec
sbb
hlt
push
mov
add
mov
push
add
dec
mov
out
mov
leave
mov
inc
xor
sahf
mov
mov
inc
adc
or
das
rcrl
pop
sub
out
jno
dec
sbb
inc
hlt
cs
xor
push
mov
push
sahf
add
nop
add
call
push
cmp
ret
sub
jge
movsb
adc
pop
and
cmp
jl
mov
add
xor
dec
add
mov
or
jns
sahf
sbb
inc
popa
shrb
gs
insb
rcpps
imul
or
push
jb
pop
out
dec
mov
add
mov
cs
jle
out
xor
adc
js
inc
xor
push
icebp
or
push
addb
push
push
andl
push
bound
pop
add
or
jmp
jnp
add
es
adc
mov
push
pop
inc
jmp
adc
xchg
lret
in
push
adc
sbb
cmp
call
data16
jns
mov
mov
scas
mov
pop
in
adc
sub
xor
pop
inc
mov
mov
sub
gs
dec
add
ljmp
int
popf
or
ds
add
fnstsw
add
mov
lock
or
stos
dec
inc
lds
mov
add
push
add
cmpl
fcomps
rclb
addl
shrb
cmp
mov
push
mov
add
gs
dec
add
dec
or
jmp
out
dec
insb
add
or
sbb
adc
orl
es
xchg
jg
test
add
sbb
enter
and
and
mov
shlb
aad
lcall
push
add
ret
or
mov
xor
xlat
mov
adc
add
mov
inc
in
mov
push
jb
arpl
push
dec
dec
adc
test
inc
add
pop
mov
imul
mul
jmp
cmpl
jne
mov
add
insb
or
or
mov
test
out
mov
add
jne
xor
xor
jecxz
cmp
add
inc
xor
push
pop
daa
add
jle
sub
add
push
mov
lds
add
inc
jl
add
or
femms
and
and
add
cwtl
cs
pop
xlat
shl
dec
add
inc
mov
cmp
clc
jae
pop
add
nop
cmp
add
inc
stos
or
sbb
cwtl
xchg
push
test
xor
add
jo
jno
decl
call
sub
sbb
mov
or
add
push
cmp
test
add
push
and
pop
fnstsw
movsl
add
inc
loope
fucom
add
loop
jecxz
mov
push
add
cmc
sti
adc
sbb
and
mov
push
cmp
mov
fwait
mov
pop
ljmp
jge
add
jb
sub
stos
inc
pop
mov
cmp
insl
pop
dec
cmc
add
push
cmp
dec
inc
test
add
aaa
sbb
mov
iret
push
test
dec
inc
jmp
rcr
std
testl
xchg
xchg
dec
add
mov
rolb
xchg
pop
stos
adcl
test
ja
add
out
jnp
ficompl
out
mov
ja
sub
mov
xchg
aas
xchg
addl
repz
fimull
and
out
roll
div
ljmp
subl
js
jge
add
call
mov
mull
pop
in
in
add
dec
cmc
dec
out
movl
pusha
xor
add
jl
mov
cwtl
insl
jo
je
add
dec
imul
cmpsl
dec
add
adc
inc
push
push
insb
imul
mov
ljmp
pop
in
push
push
fsubrl
sbb
js
add
popa
and
mov
fs
add
cmp
movsb
enter
sbb
adc
push
cmp
pop
or
pop
push
jle
outsb
push
push
outsl
or
jae
add
out
and
daa
inc
jo
or
js
sahf
jmp
mov
fimuls
scas
test
repz
out
add
jmp
les
jno
incl
push
add
xchg
lcall
out
ljmp
add
pop
xchg
jle
mov
pop
ds
push
push
cmc
pop
push
icebp
outsl
inc
pusha
testl
add
or
fidivl
test
pop
cli
fldt
fcompl
pop
jb
jl
std
mov
cmpsb
outsb
add
mov
in
mov
loopne
add
loopne
jmp
or
cmp
xchg
or
add
movsl
in
cmp
aaa
sub
add
aam
mov
xor
xchg
jmp
nop
pop
in
sarb
add
ja
jbe
jno
test
pop
pop
mov
mov
cwtl
inc
xchg
pusha
mov
sbb
in
roll
push
xchg
jo
or
mov
mov
in
mov
ja
outsl
jmp
jo
int3
pop
orb
lcall
in
out
movsb
add
xchg
push
inc
mov
fs
sarb
cmp
or
repnz
add
jl
cmp
js
fcompl
pusha
add
ret
jbe
out
pop
imul
add
inc
mov
fcoms
add
mov
pop
mov
jmp
pusha
jmp
movsl
pop
xchg
and
gs
cmp
add
jle
loopne
add
push
dec
jp
dec
leave
push
pop
in
test
out
pop
sub
and
mov
rcrb
jmp
ljmp
mov
xor
xor
jno
push
out
test
lock
pop
add
addr16
adc
clc
gs
call
out
es
add
sbb
outsb
pop
push
add
adc
jmp
cltd
test
dec
inc
in
pop
mov
popa
sbb
nop
sahf
dec
outsl
add
cmp
and
cmp
add
dec
scas
jmp
out
jmp
add
int
push
test
movsb
in
mov
es
pop
ds
cmp
add
jmp
jmp
test
mov
cmp
aaa
cmp
mov
dec
dec
jp
inc
fldenv
xchg
fsubs
cmp
imul
jo
aam
cmp
ror
pop
mov
sbb
mov
in
in
push
iret
f2xm1
pop
add
or
call
js
add
add
mov
push
mov
xor
adc
mov
gs
pop
push
add
dec
mov
xchg
fsubl
ret
roll
clc
xchg
xchg
es
pushf
movlhps
sbb
push
xchg
cmpsb
loop
fildl
lahf
out
icebp
dec
das
mov
mov
xlat
push
shll
rol
add
push
outsl
jae
jl
jle
jb
paddsb
pushf
ljmp
and
iret
aad
lahf
dec
loop,pt
hlt
test
bnd
into
arpl
xor
fwait
push
or
and
jecxz
xchg
popl
cmp
mov
mov
mov
mov
xchg
rolb
rcl
aad
loopne
out
out
jecxz
in
ret
dec
push
cmp
push
xchg
xchg
jne
cs
pusha
jb
add
clc
fs
cld
adc
jmp
inc
xchg
xchg
xor
addl
dec
sysret
and
add
subb
add
jp
daa
movsb
add
jae
push
stos
xorl
mull
xchg
add
movsl
out
leave
lret
mov
mov
sub
lea
enter
cmp
js
or
pop
inc
ret
add
lret
mov
add
lcall
test
dec
out
add
fimull
add
mov
stos
add
add
stos
and
cmp
lds
enter
inc
dec
jo
add
in
stos
mov
add
cmp
pop
dec
jnp
dec
cmp
add
jo
inc
ja
inc
jae
mov
dec
pop
xor
cmp
add
fbld
push
lods
out
jae
mov
test
mov
add
mov
add
jnp
insb
stos
es
add
mov
mov
jno
cmp
push
rcrb
add
jns
xor
jbe
add
sub
lods
sbb
ret
adc
add
sbb
dec
inc
mov
popf
add
lcall
push
lods
rcrb
movsl
int
xor
add
pop
loop
add
mov
push
push
add
sbb
cmp
mov
pop
jp
cmp
and
xor
scas
stos
jo
add
dec
xchg
mov
test
mov
jbe
pop
add
out
xchg
dec
test
sbb
xchg
add
std
xchg
ffreep
pop
cmpsl
sbb
rolb
add
test
mov
loopne
add
scas
cmpsl
test
arpl
sbb
inc
pop
adcl
enter
inc
in
lock
xor
add
mov
movl
push
cltd
jnp
add
test
cmc
jmp
adc
push
sbb
fnstsw
scas
mov
imulb
add
cmp
push
and
add
push
push
push
mov
xchg
push
insb
mov
test
xor
xor
inc
push
mov
push
aaa
lock
call
xor
lcall
ret
xorl
xor
repnz
ljmp
in
cmp
cmp
ja
fs
xchg
add
sar
popf
fcom
cmp
jo
add
mov
cmp
jbe
add
addb
mov
cmp
ljmp
in
les
gs
add
xor
xchg
mov
fwait
dec
jle
mov
sbb
jge
scas
clc
mov
aaa
sub
push
jecxz
or
push
xchg
sbb
pop
ja
fadds
fldt
dec
dec
std
fmuls
mov
or
add
or
test
add
inc
leave
inc
test
mov
cmp
add
out
decl
add
push
mov
int
add
lret
adc
or
cmp
jg
add
sub
or
inc
push
inc
inc
add
clc
out
repnz
fidivrl
jmp
ret
cwtl
push
add
loopne
jo
cmp
daa
out
add
ror
and
push
inc
inc
jne
filds
or
push
subl
dec
push
sbb
loope
ds
lock
pop
xchg
add
add
pop
mov
jmp
scas
lock
insb
loopne
add
in
jl
pop
mov
dec
arpl
insb
ret
stos
stos
add
add
aaa
jno
xchg
mov
subb
or
sbbl
sbbb
ror
int3
mov
or
ss
dec
mov
add
divl
scas
jmp
cmp
shl
stos
enter
mov
add
outsb
call
add
cwtl
mov
add
jne
mov
adc
ljmp
movsb
cwtl
pop
jmp
xadd
lret
and
addr16
pop
mov
jnp
loop
dec
call
jo
data16
or
mov
push
ja
pop
les
cmpsb
aad
cmpsl
aam
push
add
xchg
mov
push
mov
add
xchg
lods
jb
mov
imul
inc
add
jmp
ret
pop
int3
js
add
loope
int
dec
add
fcoms
add
push
out
lahf
imul
sbb
add
gs
jmp
out
ret
test
fstpt
aam
and
xchg
call
test
add
dec
push
jnp
dec
adc
xor
mov
shlb
add
lds
aas
aad
mov
and
jecxz
insb
iret
addl
mov
xchg
jno
repz
stc
jae
addr16
pop
jmp
rolb
movsb
adcb
insb
push
pushf
add
add
scas
rclb
push
add
pop
mov
pop
aas
push
ret
push
and
clc
dec
jle
add
clc
ds
mov
cmp
iret
in
add
test
lods
ljmp
add
push
and
loopne
rolb
push
sub
popf
sahf
add
sub
js
mov
aad
or
lahf
mov
dec
aaa
push
movsl
push
jns
add
lahf
test
adc
out
roll
incl
out
jmp
daa
add
xlat
mov
dec
adc
and
lock
inc
inc
sbb
rclb
xor
rcll
sbb
pop
sub
aas
dec
sub
push
sbb
outsb
add
or
cwtl
jb
imul
push
ss
add
loopne
aad
je
and
sub
push
add
adc
xchg
inc
jae
int3
add
inc
rolb
je
cs
push
adc
roll
dec
sub
add
mov
sbb
xchg
mov
and
loope
dec
fisubs
syscall
xor
cmc
jne
clc
fstps
xchg
loopne
pop
add
add
daa
shrb
xor
hlt
add
call
add
mov
enter
addl
add
xor
push
or
push
jmp
dec
cmp
mov
add
mov
add
lret
add
jmp
push
std
inc
hlt
cmp
pushl
lock
jo
add
mov
inc
fiaddl
int3
mov
push
lahf
add
repz
xor
in
mov
dec
cmp
inc
add
add
call
lods
mov
push
and
push
mov
add
bnd
cmp
or
test
pop
das
fadd
ja
mov
sub
pop
add
cmp
daa
enter
pop
repnz
jmp
add
add
push
aaa
call
push
xor
sub
add
daa
ftst
fsubrl
mov
out
add
test
mov
add
and
adc
dec
verr
pop
mov
arpl
jmp
leave
add
scas
xchg
mov
mov
scas
or
mov
inc
loope
sbb
xchg
lea
stos
int3
pop
lods
pop
pop
sub
sbb
clc
push
jns,pn
pop
push
jno
into
sahf
xchg
pop
mov
and
sub
cmp
adcb
jnp
cmpsb
add
and
jle
xchg
jl
or
icebp
outsb
out
hlt
in
fs
gs
or
fcmovnu
rolb
addl
dec
inc
jle
jne
cmp
jns
pusha
pop
je
dec
movsb
pop
adc
aam
xchg
add
mov
arpl
and
sbb
flds
xchg
cmp
in
pop
push
fistl
mov
xor
ror
cmp
jne
push
adc
or
add
enter
outsb
arpl
jb
add
jge
rclb
and
mov
xor
push
add
ss
add
dec
cld
inc
push
xchg
aad
dec
push
mov
sbb
push
call
je
add
push
pop
mov
outsl
jmp
mov
push
add
pop
mov
aad
rcl
inc
push
pushf
and
inc
mov
add
popf
adc
movl
aam
adc
cli
test
out
fcom
mov
incl
loope
insb
adc
bound
rep
roll
add
imul
mov
jb
jo
out
negb
popa
jne,pt
data16
imul
jle
sbb
popa
rolb
add
pop
call
jne
sbb
int
adc
jae,pt
cwtl
or
sub
sub
sub
arpl
jo
cmp
add
cmpsb
xchg
sub
cwtl
add
or
push
je
inc
call
dec
mov
push
outsl
call
sbb
xorb
notl
mov
add
xor
out
push
sbb
stos
lods
faddl
add
das
push
or
stos
xor
flds
add
lret
xor
or
add
in
jle
jle
add
sbb
push
push
outsl
add
dec
add
sahf
adc
xor
dec
clc
cli
add
lret
dec
dec
scas
jp
mov
stos
mov
and
add
mov
or
jge
mov
push
je
cli
add
sub
sahf
das
and
ja
test
popf
push
adc
pop
mov
mov
add
sub
add
or
in
test
xor
add
mov
adc
add
adc
mov
lods
cmp
sahf
loope
inc
pop
out
mov
lock
cmpsb
sbb
jg
rol
lds
add
dec
ljmp
add
loopne
jne
xor
or
cmp
add
call
or
jne
cmp
gs
adc
in
jl
mov
bound
add
mov
incl
clc
test
mov
inc
std
mov
in
test
adc
xor
sti
add
add
mov
cmp
outsl
or
push
sub
lds
nop
mov
lea
adc
movsl
fwait
and
sub
in
stc
sbb
ja
add
fwait
icebp
jnp
adcl
push
mov
add
movsb
orl
add
and
sub
loope
popf
subl
loope
jo
push
cmp
mov
add
cmp
cli
mov
sub
sbb
loopne
add
mov
push
adc
test
mov
test
cmpb
je
nop
push
psubd
xor
cmp
mov
jg
mov
sti
mov
not
scas
mov
leave
xor
iret
add
adc
sti
add
mov
fsubs
testl
test
daa
movl
lldt
mov
mov
push
popf
add
nop
dec
shlb
pop
aam
push
pop
mov
xor
or
ljmp
jbe
mov
add
cld
loop
jmp
mov
add
outsb
or
testb
mov
call
lds
adc
jecxz
call
mov
andb
mov
cmp
clc
push
pop
or
mov
add
movsl
jg
les
and
xor
outsl
sbb
dec
push
push
xor
cmp
push
sbb
repnz
sbb
add
cmp
dec
push
loope
add
and
and
in
add
xor
jo
add
ja
jae
lahf
sub
decl
add
push
add
xlat
repnz
xchg
pop
in
pop
shlb
add
sub
sti
add
sub
ljmp
push
add
xor
les
scas
shlb
jne
mov
mov
jo
mov
rep
mov
dec
fmuls
pop
rcrb
pop
ss
add
lea
cli
sarl
push
push
jmp
pusha
fdivrs
aaa
daa
mov
xor
pusha
cmp
add
inc
sti
arpl
mov
dec
mov
mov
add
popa
pop
dec
sbb
adc
rcr
sub
dec
shl
inc
cmpsl
add
ret
test
cmp
aad
mov
ljmp
xchg
xor
push
add
lock
add
add
sub
aam
rolb
inc
mov
test
xchg
lea
out
push
fnstenv
add
icebp
and
popf
mov
xchg
in
inc
push
int3
add
int
popf
repz
or
test
mov
add
iret
nop
mov
xor
aad
xor
mov
xor
insl
add
or
test
out
jnp
add
adc
ffree
sbb
jno
test
jmp
push
pop
dec
ja
sbb
mov
test
out
fiaddl
mov
push
mov
aaa
dec
jle
mov
sbb
push
leave
les
adcb
add
sub
mov
add
adc
cmp
pop
push
add
out
sbb
add
push
jg
jge
add
lret
jecxz
mov
add
mov
scas
cmp
or
cltd
daa
mov
enter
xchg
lods
test
xor
das
or
pusha
in
cmp
mov
mov
cmp
inc
push
or
push
pusha
out
loopne
fdivrl
xchg
mov
cli
sbb
and
add
aas
mov
jg
cld
add
cmc
adc
pusha
or
cmpsb
in
xchg
adc
add
aas
cmpb
call
add
dec
das
cmp
ret
cmc
stc
dec
adc
add
or
add
inc
add
cmp
ljmp
pop
add
jb
xor
cmp
shll
sub
lret
ret
add
inc
cli
and
dec
fnstsw
add
rcrb
rolb
cmp
mov
es
xor
mov
sub
add
dec
jge
dec
cmp
and
or
dec
aam
rorl
pop
xor
sar
mov
mov
lods
xor
or
pushl
pusha
adc
pop
clc
jmp
add
sbb
inc
cmp
add
add
repz
lods
in
add
dec
and
jge
lods
cmp
sti
cltd
inc
sub
add
xor
inc
push
loopne
push
std
push
sub
ret
xor
jae
mov
push
dec
dec
add
jo
das
ss
push
cmp
js
inc
mov
mov
pop
sbb
xlat
push
mov
mov
out
push
test
dec
lock
jb
ja
outsl
cmpsb
add
cmpsl
inc
data16
adc
out
incl
jnp
add
mov
loope
shll
jns
cld
icebp
pop
fwait
sub
jmp
sbbb
bswap
or
add
xchg
rcrb
xor
je
add
sub
es
movb
pop
jns
in
mov
push
jmp
fs
lock
rdtsc
jle
sbb
jmp
or
cmc
ret
cmp
imul
add
push
scas
in
add
adc
test
ja
add
out
popf
imul
sbb
xchg
xor
push
enter
add
dec
pop
cltd
sbb
xchg
lods
insb
les
aaa
fwait
cltd
xchg
mov
add
jb
mov
xchg
je
loope
jbe
jmp
out
mov
std
xchg
inc
push
and
dec
stos
pushf
pop
pusha
outsl
jle
add
inc
imul
int3
or
gs
add
adc
mov
xchg
dec
ja
xlat
movsl
sar
scas
lock
mov
and
jne
cmp
sbb
popf
into
int
sub
jbe
addb
mov
clc
mov
mov
fcom
in
adc
mov
cs
imul
add
lods
push
movsb
mov
add
xchg
sbb
mov
mov
sahf
sbbb
inc
out
add
pop
call
push
inc
dec
outsl
or
push
es
fldcw
sbb
lds
mov
les
lahf
sti
ret
add
fdivs
incb
aas
lea
filds
mov
mov
sub
push
push
adc
rorl
mov
add
aad
sti
mov
or
inc
push
orb
jp
mov
or
adc
jne
lea
jle
call
add
sarl
fiadds
add
je
push
push
loopne
mov
or
ret
cmpsl
mov
cmp
jge
mov
ret
movsb
negl
and
test
fisubrs
fcos
fnsave
push
mov
pop
cmp
jge
add
ret
adc
jmp
adc
rcrb
jne
loopne
sub
add
daa
rdtsc
cld
hlt
les
cwtl
adc
jo
enter
mov
push
fxch
inc
faddl
add
xor
loopne
inc
aam
addr16
mov
imul
jecxz
js
add
lret
das
loope
dec
aas
or
jle
dec
add
jmp
add
js
xchg
mov
pop
and
lret
dec
jae
outsl
add
inc
push
sub
rorl
mov
jae
arpl
push
dec
pop
jecxz
in
hlt
repz
xor
rorb
add
movsb
aaa
pop
mov
add
mov
pop
cli
inc
and
sub
js
xor
pop
inc
lods
add
push
sub
xchg
mov
jo
ss
mov
cltd
or
lods
jg
sub
inc
mov
add
and
enter
xchg
mov
call
add
mov
push
loope
inc
sbb
movsb
filds
insl
xor
sub
cwtl
push
cmp
fdivs
fdivrp
pusha
add
add
add
add
stc
mov
add
ja
and
add
repz
rolb
je
xchg
inc
mov
loopne
add
sub
cltd
xor
jmp
lret
xor
xchg
sub
mov
pop
and
dec
fiadds
push
jno
sti
cmp
mov
xchg
pop
mov
repz
in
add
lock
sarb
add
jl
jmp
notl
xor
out
lea
mov
add
orb
add
or
aas
add
nopl
movsl
jno
add
xor
add
push
or
ja
xor
add
popf
jno
sahf
inc
leave
mov
add
dec
ret
sub
cmp
pushf
neg
adcb
mov
inc
sub
adc
sbb
sub
inc
xor
adc
daa
add
mov
testb
add
pop
fcom
push
addb
enter
cmp
rolb
pop
addl
fidivl
lods
or
add
sub
mov
add
sub
jp
jns
faddl
adc
add
sbb
inc
adc
or
inc
dec
add
call
int3
add
clc
sub
add
enter
test
orl
cli
add
add
mov
cmc
fs
mov
fwait
add
aaa
shlb
add
adc
pop
add
mov
xor
lea
jnp
sub
add
arpl
mov
lcall
push
pop
nop
addb
mov
in
das
stc
adc
hlt
mov
push
mov
clc
adc
pop
sub
push
mov
rol
or
adc
or
adc
sub
add
mov
mov
xchg
add
dec
sub
xchg
test
add
rclb
add
movsl
push
jb
or
sbb
adcb
sub
cmpsl
adc
pop
das
push
test
push
fsub
pusha
add
sbb
adc
and
mov
unpcklps
fwait
subb
mov
push
adc
stos
lock
add
mov
or
pop
in
cwtl
scas
add
icebp
mov
test
push
and
repnz
roll
std
test
push
or
and
dec
and
jne
aam
or
andb
cmp
inc
pop
in
add
mov
aam
pop
xor
jmp
scas
push
pusha
mul
out
sub
mov
sbb
jb
bound
fbld
inc
pop
outsb
push
jmp
movsl
pusha
fsts
pop
push
imul
add
push
pop
dec
shl
dec
pop
inc
loopne
lret
add
pop
mov
xor
and
enter
adc
hlt
int
mov
dec
mov
xchg
fsubr
cli
push
add
dec
lods
outsb
push
fiadds
adc
mov
enter
add
adc
inc
inc
cmp
add
test
pop
out
bound
add
lea
mov
mov
cmp
inc
xchg
jmp
add
jo
imul
add
test
push
inc
dec
lret
adc
jl
cmp
ucomiss
add
in
mov
mov
stc
mov
test
xor
lret
add
pop
dec
xor
cmp
subb
xchg
xor
fsubs
or
mov
movsl
add
dec
pop
aam
loop
sub
rcll
add
push
mov
add
dec
mov
pop
mov
add
inc
add
pop
mov
add
pop
sbb
jmp
sbb
adcl
pushf
add
add
mov
xchg
push
and
xchg
mov
shlb
cltd
lds
cmc
cld
out
add
mov
adc
cwtl
andl
adc
xchg
add
enter
xor
adc
add
adc
and
nop
ret
inc
dec
add
pop
mov
insl
mov
push
sub
lods
adc
add
sub
ret
shll
repnz
in
xor
xchg
icebp
xchg
inc
jl
sbb
in
shll
xor
mov
in
jne
imul
inc
insb
cmp
xchg
aas
lods
add
add
test
adc
jp
test
add
les
push
jb
subb
gs
lahf
sbb
add
outsl
in
ja
fs
inc
push
dec
and
addps
inc
sbb
or
sub
adc
mov
je
add
stc
js
mov
add
subl
addb
test
loopne
push
pop
push
push
add
push
push
jbe
jae
push
jle
adc
sahf
xor
add
imul
add
and
sysret
mov
rorl
add
xchg
cmpl
mov
adc
das
das
into
dec
ffree
xchg
sahf
lea
adc
imul
je
xor
mov
and
xchg
cmp
jmp
dec
inc
pop
rorl
fdivs
popa
pop
fs
jmp
and
and
jmp
arpl
sarb
mov
mov
cmp
mov
xchg
js
mov
add
test
roll
hlt
jl
and
mov
aam
adc
push
inc
jae
lock
add
je
cld
cmpl
mov
cmp
jmp
xor
pop
dec
jg
out
adc
addr16
adc
mov
pop
mov
repnz
shll
inc
push
test
inc
push
add
push
add
jne
pop
in
xor
or
loopne
insl
in
scas
mulb
add
cmpb
or
jge
add
shll
push
fnstsw
pop
js
inc
andb
pop
dec
mov
test
inc
add
add
add
sub
mov
add
or
ret
or
repnz
clc
add
sbb
push
cwtl
dec
add
test
jmp
fiadds
ljmp
inc
add
mov
sbb
pusha
sbb
inc
imul
shrb
loop
cld
push
or
test
hlt
in
pop
pop
pop
sbb
pop
int
fcoms
add
sub
mov
mov
std
dec
push
lea
in
add
xchg
cmc
sbb
in
mov
inc
pop
adc
in
enter
cwtl
and
add
jmp
xchg
push
sbb
pusha
test
mov
dec
repnz
pop
dec
push
shll
and
pushf
add
pop
jmp
pop
mov
rorb
push
jl
push
mov
std
and
push
jmp
jb
add
test
pop
mov
add
sbb
mov
aaa
jb
push
and
repnz
rclb
dec
les
icebp
add
out
or
add
jl
add
test
push
mov
pop
lea
shlb
jle
dec
pop
clc
sbb
mov
in
or
add
es
adc
icebp
lret
loope
clc
adc
jmp
add
or
inc
add
xor
pop
shlb
add
sub
add
and
add
mov
mov
in
push
or
enter
xor
cli
cwtl
jnp
add
mov
call
xchg
xchg
cmpsb
and
fcoms
jmp
jbe
add
sub
adc
rolb
pop
enter
add
test
push
fcoms
nop
add
mov
sbb
or
loopne
xor
in
inc
ds
xor
add
pop
pop
sbbb
cmp
push
add
adc
dec
jb
mov
in
repz
add
lahf
add
shlb
jae
ds
mov
jl
adc
sub
test
jle
add
mov
subl
sub
or
or
add
pop
pop
repnz
xchg
pop
xor
lods
nop
lea
clc
sbb
lods
add
rclb
add
push
dec
mov
add
inc
add
lahf
sti
add
adc
pop
add
movsb
stos
or
js
add
stos
sahf
cmc
dec
fldt
push
cmp
roll
movl
push
rclb
mov
dec
mulb
enter
dec
or
xchg
fs
roll
and
mov
or
push
ss
or
cmp
pop
inc
in
and
inc
dec
or
cmp
mov
pop
sub
cmp
dec
clc
cwtl
xlat
scas
flds
pushf
inc
loop
push
out
pop
mov
ja
or
add
fs
mov
jg
out
pop
call
push
popa
add
imul
daa
add
xchg
not
dec
dec
mov
mov
mov
add
add
sahf
adc
jnp
add
into
push
jp
mov
and
mov
outsl
add
lock
push
mov
scas
or
mov
nop
lcall
stos
repnz
lock
add
xor
jge
add
fimull
and
xchg
inc
push
push
push
lods
loopne
add
push
xchg
stos
sub
mov
lret
orl
lea
loop
xchg
sbb
cmp
mov
cld
jmp
add
in
pushl
dec
mov
addr16
pop
sub
mov
movsb
add
inc
adc
movsl
std
in
xchg
stos
outsb
adc
pushf
add
aad
adc
or
add
insl
xor
xor
test
les
bound
or
jns
jmp
mov
inc
pop
cmovns
movsb
popa
decb
aas
aas
or
pop
cmpl
mov
sbb
arpl
adc
add
les
add
sub
aam
xorb
sti
add
jb
insb
dec
mov
xor
add
push
pop
loope
pushf
nop
ds
jmp
add
sbb
cmp
jae
mov
add
dec
mov
nop
test
enter
sbb
adc
push
je
push
cld
pop
add
sbb
movsb
push
lock
xchg
inc
fadd
popf
sub
add
inc
jne
dec
fs
mov
popf
add
xor
fcompl
add
push
xor
out
add
xlat
cltd
sbb
add
or
adc
inc
push
pop
and
adc
sbb
inc
sbb
add
jb
dec
out
inc
jg
cld
adc
inc
ds
add
xchg
loopne
dec
inc
sub
add
cmpsl
xor
nop
call
iret
inc
mov
psubusw
sbb
call
adc
sub
sub
dec
stos
lds
add
imul
add
add
outsl
xchg
sub
mov
mov
adc
fnstenv
fcmovnb
jo
movsl
icebp
add
rcl
sbbb
mov
push
push
add
add
call
xchg
add
cmpsb
cs
xchg
pop
cmp
xchg
dec
cld
scas
aas
or
push
ss
jl
orb
xor
jmp
add
rcrb
mov
fwait
and
xor
xor
add
cwtl
add
dec
cmp
or
add
clc
ja
testl
xchg
imul
cwtl
add
add
mov
cs
inc
or
mov
lock
adc
adc
mov
imull
xchg
sub
movsb
push
insl
in
insb
mov
pop
add
push
lds
jle
adc
repnz
fiadds
stc
fsubrs
cli
add
mov
lods
pushf
cmpb
je
add
sar
xchg
adc
dec
clc
les
ja
repz
mov
add
imul
inc
add
or
cmp
or
jp
and
xchg
add
bound
add
stos
mov
cmp
adc
ja
call
enter
ret
popa
add
fcmovbe
add
pusha
in
test
mov
in
lcall
xorb
add
or
or
mov
cmp
add
mov
jle
sbb
push
cli
add
jmp
cmp
scas
sub
add
push
inc
daa
push
lea
add
stos
mov
mov
add
and
cmp
xor
repnz
jns
mov
cmp
jmp
inc
xchg
xchg
shlb
pop
mov
je
or
xor
pop
mov
add
adc
cmp
jo
xchg
add
mov
xchg
xchg
pop
xlat
add
push
nop
pop
push
mov
push
out
jne
and
je
add
xor
push
add
adc
test
fistpll
jl
add
and
adc
daa
or
clc
popf
or
sahf
shrl
mov
xchg
add
xlat
in
and
mov
arpl
or
cwtl
js
add
je
jle
mov
lods
add
scas
xor
xor
add
unpcklps
loop,pt
pop
xor
sbb
and
add
adc
jmp
js
js
add
movsl
sbb
xchg
pusha
and
adc
add
add
and
testb
mov
sub
dec
repnz
fidivrs
mov
lods
test
and
mov
and
pusha
testl
and
add
loope
sub
xor
mov
xchg
lock
add
das
test
movsb
sub
in
and
xor
push
jnp
pop
stos
cmp
hlt
leave
cmp
add
lret
mov
call
and
ss
add
inc
arpl
mov
xlat
xchg
inc
enter
vfrczpd
add
cmpsb
pop
fisubs
les
fmuls
outsl
push
mov
cli
cmp
rcrb
adc
xlat
fcmovnbe
aam
enter
mov
test
les
mov
nop
add
mov
shl
and
mov
mov
add
or
jmp
call
daa
sbb
pop
push
movsb
sbb
pushf
or
and
mov
add
mov
pop
out
jecxz
xchg
shlb
sub
in
add
and
ja
push
xchg
add
jb
sbbl
cwtl
lods
add
and
in
mov
insb
sbb
push
push
pop
or
in
sub
mov
cmp
hlt
imul
add
sbb
sbb
cmp
ret
rcl
mov
xchg
cli
push
fisubrl
push
xchg
add
jl,pt
daa
testb
js
sbb
dec
or
sbb
jne
filds
mov
out
sar
mov
jbe
dec
push
cmp
syscall
jg
mov
in
adc
add
push
mov
sbb
cmpb
jne
ret
pop
add
mov
lds
mov
jle
xchg
add
xchg
push
add
movl
cmp
or
pop
pop
lret
rcll
mov
add
mov
clc
pop
mov
fidivrl
cmp
add
mov
dec
push
jo
add
mov
xlat
sbb
scas
lahf
sbb
sbb
add
call
add
rcrb
jns
shl
cld
add
xor
sbb
mov
add
into
adc
inc
fmuls
pop
aas
or
lock
add
test
sbb
lods
mov
pop
add
incl
mov
sbb
aas
dec
add
xlat
faddl
add
cwtl
add
stc
jle
cmp
sbb
add
imull
xor
mov
inc
loope
cmp
push
jg
js
dec
jne
add
icebp
movsb
stc
and
sbb
xchg
outsb
jnp
inc
mov
cmpsb
sub
or
mov
sbb
addl
push
or
mov
sub
jb
mov
cmp
xlat
or
mov
add
in
lods
cmpsb
sbb
enter
xchg
mulb
andl
fadd
clc
sub
stos
insl
and
js
lods
repnz
mov
add
push
add
data16
aad
add
fidivl
jge
popa
lfs
jmp
and
push
adc
mov
jo
fnsave
and
inc
sbb
adc
jo
or
or
adcb
add
dec
mov
xor
loope
mov
lahf
add
push
mov
inc
mov
sub
ljmp
add
dec
pop
out
shlb
pop
jnp
packssdw
inc
cmpl
push
jne
mov
movsb
dec
dec
and
hlt
daa
test
sbb
and
jne
add
push
xlat
sarl
and
xchg
sbb
nop
popf
repnz
push
test
inc
adcb
call
add
je
add
xchg
dec
xor
das
data16
xchg
lods
clc
out
add
lock
push
push
imul
dec
mov
test
cmp
dec
cmp
add
das
pushf
hlt
je
add
cmp
xor
mov
dec
adc
push
and
test
jp
fucomip
dec
in
xor
jo
mov
call
test
push
mov
sub
add
imul
dec
in
xor
addr16
imul
nop
sub
fadds
adc
cmp
or
imul
add
adc
dec
adc
mov
rsqrtps
lds
fiaddl
jno
dec
mov
push
rorb
nop
jnp
sbb
mov
addb
sub
pop
inc
dec
push
mov
addl
js
sub
add
adc
sub
daa
mov
and
shlb
dec
mov
add
rorb
add
mov
dec
xor
pop
jb
jmp
add
jmp
out
arpl
push
pop
subb
inc
repnz
cmp
js
stos
cmpsl
push
ljmp
dec
sbb
xlat
dec
pop
and
sub
mov
add
dec
mov
sbb
push
xchg
add
jne
das
cli
ss
sbb
mov
jmp
or
and
or
dec
and
aas
sbb
fs
je
ja
mov
add
inc
dec
dec
and
out
add
push
imul
insb
xchg
mov
repz
cmp
pop
testb
xchg
fcomps
adc
imul
les
add
mov
dec
add
in
xor
movsb
and
xor
pop
rolb
mov
mov
int
push
jg
clc
jle
aas
sub
cmp
pushf
or
jo
mov
jp
stos
inc
cmp
adc
dec
ja
js
andb
inc
movsb
add
loope
and
push
or
add
dec
and
rol
mov
outsb
mov
mov
cmp
and
push
inc
push
push
jb
das
dec
cmp
int3
add
mov
fimuls
out
pop
mov
push
cmp
scas
into
xchg
add
sub
xlat
ds
int3
add
cmc
and
dec
cld
mov
lret
pop
lock
inc
xor
mov
sbb
cmpb
jo
sbb
rorl
rcrl
add
or
add
lods
nopl
add
sbb
lahf
repz
inc
jb
cltd
fsubr
push
add
test
insl
xchg
xchg
and
out
shlb
add
jmp
jge
cltd
adc
sub
mov
sub
xor
add
xchg
insb
scas
andl
rol
clc
cmp
dec
sub
stos
xor
jp
outsl
add
pop
mov
hlt
add
mov
pop
fstpl
push
adc
push
jne
push
push
out
inc
push
add
add
outsb
ret
in
add
and
sbb
int
adc
cmp
mov
iret
add
mov
mov
lds
xchg
mov
and
add
out
fcmovnb
loop
fcoms
jg
sbb
push
aaa
add
adc
rolb
mov
add
pop
movsl
hlt
loopne
addb
mov
add
call
pop
in
in
mov
xchg
jnp
inc
add
imul
and
outsl
pop
jo
jns
in
inc
addb
je
ret
add
and
jne
mov
insl
mov
push
adc
lea
cmp
inc
dec
popa
nop
push
mov
or
js
psadbw
jge
clc
decl
jae,pn
mov
cmp
push
outsl
sub
sub
imul
dec
add
and
push
test
std
cmpl
sub
sarl
add
xchg
sbb
dec
xchg
add
xchg
test
mov
mov
inc
push
sahf
pop
pop
add
movsb
aaa
xchg
notl
inc
add
aam
pop
leave
mov
lea
add
jp
and
add
stc
sub
xchg
sub
mov
jge
xchg
enter
add
jle
dec
add
cmp
in
xchg
xchg
rolb
push
mov
in
and
mov
outsl
ss
nop
cmpsl
add
sub
mov
add
mov
std
add
aas
sub
sbb
addb
sahf
and
jmp
rolb
add
xchg
push
cmpb
or
xchg
jne
mov
add
jmp
ds
mov
sub
roll
pusha
lds
or
and
movsb
xchg
pop
add
ds
incb
or
fidivrl
sub
sbb
minps
leave
mov
lahf
fdivs
inc
movsb
mov
std
out
sub
sbb
dec
push
pop
or
and
cmovne
ds
jle
stc
fdiv
daa
add
dec
aam
push
sub
lds
pusha
xlat
clc
push
add
cmp
or
daa
inc
sub
ds
adc
pusha
hlt
call
scas
idivb
lret
sbb
inc
hlt
jnp
rcr
push
jo
je
movsb
stos
mov
mov
inc
cmp
adc
xchg
imul
and
adc
in
cmpsb
push
adc
sbb
add
cmc
subb
shrb
add
scas
jl
fstpl
loopne
add
push
orb
and
jno
jb
add
pusha
push
fs
pop
clc
bound
cmp
orb
xchg
pop
sahf
jo
inc
mov
jmp
dec
test
imul
loope
mov
test
sub
andb
incl
inc
add
mov
mov
mov
lods
and
inc
enter
mov
or
sbb
faddl
loopne
pushf
xor
cmpsl
xchg
test
lock
insb
pusha
mov
xchg
fld
cmp
pop
mov
fdivs
test
add
push
adc
jne
imul
dec
js
jns
clc
cmpsb
or
arpl
adc
arpl
adc
es
add
imul
into
jne
and
xchg
cmp
sqrtps
add
pop
push
call
lret
or
xor
ja,pn
aas
jle
subb
aad
mov
add
pop
bound
add
int3
mov
aam
jbe
mov
cs
in
addb
xor
mov
in
lret
sbb
mov
addb
insl
add
aaa
jbe
cmp
sbb
xor
or
adc
insl
jno
imul
aas
cltd
mov
push
pop
sbb
mov
aam
pop
in
add
add
jns
test
mov
jmp
xchg
pushf
dec
dec
inc
add
pusha
les
dec
psadbw
dec
mov
xor
push
cwtl
cmp
adc
cmp
dec
and
sub
jne
sbb
mov
shr
movb
push
add
pop
dec
in
and
inc
inc
in
add
jg
add
sub
mov
ds
add
push
dec
add
nop
fs
sub
movsb
push
pop
sub
cmpsl
or
ret
push
fcompl
lea
xchg
mov
aad
jno
addb
push
mov
mov
divl
sub
adc
xchg
aas
ficomps
test
test
out
push
or
daa
xchg
add
inc
test
mov
add
mov
xor
add
and
pop
nop
movsb
inc
shl
pop
xchg
pop
adcb
pusha
dec
ret
shl
mov
fldenv
or
and
mov
or
mov
pushf
mov
mov
xchg
aam
repz
pushl
add
lea
pop
add
sub
xchg
out
and
cmp
leave
xchg
repz
xor
add
mov
icebp
rorb
push
and
pop
fs
push
add
ret
fwait
cld
repz
add
jae
pop
ja
addr16
add
inc
pop
and
pusha
jg
cli
adc
cmpsb
push
add
and
sub
insl
push
dec
xchg
mov
and
lock
adc
xor
mov
enter
adc
dec
ret
lret
push
add
xor
cmp
jb
dec
push
adc
push
mov
lods
inc
test
cmp
pop
sbb
jmp
inc
add
daa
cs
adc
add
cmpsb
sub
or
mov
outsb
pop
stos
adc
imulb
movsb
cmp
test
in
nop
lods
insl
push
xchg
push
pop
jbe
add
mov
ret
ss
pop
add
dec
jo
pop
shl
in
mov
sub
mov
jae
leave
rcll
add
pop
movsb
int3
sub
popa
mov
and
lahf
push
cmp
jo
insb
imul
fimuls
push
cmp
jp
push
shrb
sub
fldt
cld
and
ss
adc
mov
fldl
sub
cmp
jbe
fstpl
aaa
lock
add
xor
cmp
lret
clc
adc
add
jmp
stos
movsb
adcb
in
movsb
add
frstor
rcr
adc
and
cwtl
aaa
add
dec
imul
leave
push
lds
mov
push
pop
push
adc
mov
inc
add
repz
cmp
add
inc
xor
in
pop
adc
std
jle
cwtl
xor
cmpsl
sub
ss
cmp
je
jo
jb
addr16
inc
bound
fs
sub
call
and
mov
add
outsb
add
gs
add
bound
jnp
loop
rclb
cltd
push
mov
mov
and
jo
and
pop
dec
dec
add
sarl
or
push
shrb
jl
push
movsl
out
add
jno
xchg
fisttpl
daa
jb
xchg
or
mov
stc
pop
jno
ja
jae
jbe
jne
add
jo
fwait
nop
in
ljmp
subb
sub
fs
pop
sub
cs
pop
and
jg
stos
and
lods
rclb
push
add
call
jle
les
mov
cltd
sub
addl
cmpb
enter
add
je
dec
into
decb
adc
push
push
add
fwait
jg
sub
das
pop
insl
cmpl
mov
cmp
and
daa
roll
xor
add
cmp
and
or
mov
mov
pop
push
nop
cmpsb
jp
sbb
dec
jne
push
cli
int3
sbb
cmpb
dec
inc
ljmp
mul
ret
add
or
aas
mov
bswap
ja
or
shll
push
add
mov
jl
rcl
jmp
push
adc
dec
push
adc
popa
push
ss
xchg
pop
push
add
leave
mov
add
enter
mov
pop
add
xlat
movsl
cmc
cmp
repz
daa
cmp
imul
call
mov
nop
add
xchg
and
cli
mov
sbb
sub
sub
push
in
inc
push
add
orl
mov
pusha
divl
adc
jo
inc
xor
insb
add
add
mov
inc
push
push
xor
add
orl
inc
sub
gs
mov
test
inc
jecxz
adc
cmp
fsubl
imul
out
sub
cmp
inc
mov
xlat
xor
xor
pop
idivb
jne
sub
push
cmp
inc
add
js
popa
ss
jo
add
repz
fwait
push
les
add
or
push
loopne
jb
ja
adc
xorb
das
pop
sbb
dec
adc
jl
pop
add
xor
hlt
test
aas
cmp
cmp
push
clc
jmp
cmp
and
pusha
cmp
lret
test
inc
xor
mov
jmp
sbb
or
xor
inc
push
add
add
adc
lcall
or
mov
adcb
fisttpll
test
and
inc
pushf
lods
adc
jnp
or
jle
aas
mov
je
daa
sbb
inc
sub
add
enter
and
add
xlat
lock
mov
or
cwtl
dec
scas
add
nop
les
loopne
cmp
bound
arpl
sub
fsubrs
mov
cld
xor
leave
dec
cmp
rorb
pop
pop
aad
jmp
bound
mov
in
add
pop
not
add
shlb
std
movsb
mov
add
out
mov
mov
lret
sti
add
push
add
jecxz
dec
jb
add
push
scas
xor
popf
push
mov
test
mov
loopne
or
add
ljmp
cs
inc
ljmp
sbb
add
push
fs
mov
or
loopne
inc
fsubr
xor
inc
fstl
cltd
add
add
or
pop
sub
test
out
or
std
push
xor
mov
or
add
jge
mov
add
push
add
lret
sub
scas
shlb
test
add
stos
add
cld
int3
call
add
scas
dec
jne
imul
and
cmpsb
adc
add
xor
mov
sbb
lea
imul
mov
sbb
pop
fmull
addb
cli
and
scas
in
cld
movsb
add
push
rorl
fcoms
insb
pop
mov
pop
mov
loopne
movsb
cmp
mov
add
cld
lock
out
daa
clc
jo
add
icebp
xorb
mov
add
or
loop
add
into
loopne
or
call
xchg
pop
ret
nop
out
aaa
sbb
pop
add
add
add
inc
orl
pop
and
or
add
mov
loopne
mov
std
xchg
pushf
mov
out
fmull
add
push
and
add
movb
add
add
or
or
push
ljmp
cld
xchg
repnz
add
xor
inc
call
add
push
dec
add
mov
out
add
sti
pop
cmp
loop
filds
repnz
cmp
je
add
cmp
xor
out
fstpl
add
add
mov
mov
jp
jae
add
rcrb
cwtl
aam
mov
mov
enter
loopne
xchg
lock
adc
das
pop
stos
and
aad
xchg
add
hlt
sub
sub
pop
aam
xor
js
cld
add
les
cs
inc
andb
pop
aas
or
push
mov
mov
add
cmpsb
cmp
ret
add
and
nop
lock
xor
jge
pop
add
jnp
inc
in
xor
js
add
sub
dec
lods
push
jmp
inc
and
ljmp
adc
incl
cmp
xchg
jb
test
enter
mov
jp
cmp
add
sub
scas
nop
loope
mov
push
ja
sbb
jnp
mov
int
xchg
ljmp
fists
inc
iret
push
and
sbb
notb
add
stc
cmp
in
add
test
mov
jne
aaa
sbb
stos
add
adc
xor
or
xchg
mov
movsb
cmp
xchg
or
pop
jnp
mov
dec
test
cmpsl
js
lahf
in
out
add
add
mov
mov
jne
add
cmp
mov
dec
mov
pop
xchg
push
jecxz
xchg
les
rcrb
aad
ret
add
sub
call
movl
pop
fiadds
filds
scas
sahf
popf
or
clc
jae
cmp
mov
cltd
and
lcall
or
lahf
mov
add
xchg
jae
push
xlat
push
or
hlt
mov
adc
mov
add
ljmp
lea
icebp
add
fs
mov
sti
and
and
adc
jne
add
add
jge
cmp
mov
addb
add
lret
and
pop
or
inc
sub
push
jbe
and
xlat
cmpb
int
sbb
adc
sbb
loop
jmp
mov
sti
fwait
add
enter
push
test
sub
sbb
aaa
add
sti
stos
sbb
lea
pop
in
lds
shrl
add
clc
hlt
mov
sbb
jno
xor
scas
imul
push
mov
add
sbb
and
push
fstpt
sbb
xor
add
fidivrl
verw
pop
lcall
xchg
pop
jne
rcrl
add
mov
inc
and
hlt
pop
push
sarb
movb
sub
inc
cld
mov
add
icebp
jae
mov
add
std
shll
pop
cwtl
or
mov
bound
push
sub
and
movl
xor
push
in
add
pop
out
jbe
add
stos
iret
addb
cld
jne
push
incb
inc
and
mov
clc
add
or
stc
cmp
xor
sbbb
ds
stos
add
cmp
sbb
adc
dec
pop
sbb
push
int3
xor
movhps
inc
aas
inc
into
adc
add
dec
mov
cmp
jl
sub
or
sub
in
pusha
out
daa
add
xchg
or
lret
sub
ficoml
xor
sbb
in
stos
das
cmp
test
sub
pusha
fwait
mov
shlb
mov
inc
clc
out
add
xchg
hlt
mov
push
push
shrl
jl
xlat
mov
add
push
adc
pop
push
sub
sbb
inc
gs
aas
movsb
icebp
add
in
jmp
and
imul
arpl
fildll
loopne
loop
pop
rclb
adc
cmp
xchg
mov
rolb
in
ret
mov
les
cwtl
test
lock
pop
jbe
jl
add
fs
jne
enter
inc
adc
out
in
fadds
cld
loope
ss
cmp
add
add
aam
cmp
xchg
mov
fcoml
mov
cmp
mov
lods
mov
or
pop
adc
pop
sub
push
mov
lret
repnz
mov
mov
orb
call
out
repz
pop
xchg
test
lock
push
add
push
push
or
add
mov
sahf
insl
xchg
out
jp
add
mov
push
filds
into
add
je
push
inc
dec
sub
jecxz
and
test
ret
mov
int3
push
fistps
push
mov
inc
add
mov
pop
orl
inc
add
ret
xchg
inc
out
add
cld
dec
ss
push
gs
push
inc
fisubrl
loopne
add
cmp
add
push
cwtl
xchg
pop
shr
leave
rolb
sbb
push
clc
testb
pop
icebp
outsb
inc
cmp
or
lcall
jmp
sbbb
sub
subl
add
shlb
psadbw
iret
call
das
je
lret
or
add
inc
mov
test
lds
push
inc
cmpsb
pop
ret
mov
rcrb
ja
add
or
test
aaa
cs
push
nop
pop
mov
fildl
mov
clc
repz
jne
idivl
shlb
dec
xchg
adc
call
sub
loopne
testb
loop
sbb
jnp
add
jl
cmp
pop
popl
sbb
add
icebp
jae
jo
pop
add
dec
nop
and
imul
clc
sarb
dec
dec
pop
mov
dec
aaa
movsb
mov
out
mov
pusha
shrb
clc
xchg
test
add
loopne
push
add
test
push
je
cld
push
cmpsl
inc
aam
dec
repnz
or
push
lahf
popf
add
xchg
rolb
test
push
push
fs
clc
outsl
aas
adc
mov
jne
cld
mov
in
lods
dec
ja
push
dec
add
jge
in
lahf
pop
insl
ja
add
xor
sub
jge
dec
dec
add
ror
push
lds
sbb
fs
lea
addb
imul
js
shlb
rclb
add
adc
xchg
aaa
mov
sub
into
or
mov
xlat
movsb
adc
rolb
push
add
lock
add
jg
mov
cli
add
loope
mov
jp
xchg
ljmp
iret
or
jae
sbb
enter
adc
xor
push
sbb
add
mov
je
pop
mov
mov
xchg
call
dec
or
adc
dec
jmp
adc
inc
add
or
test
cmp
xor
cli
xor
cmpsb
sbb
jne
cwtl
jno
add
enter
mov
jmp
rolb
bound
stos
and
je
test
cmp
inc
add
imul
dec
cli
and
cmp
fwait
inc
mov
in
add
adc
push
or
mov
dec
add
push
repz
loopne
add
cmpb
orl
lea
shrb
std
lcall
dec
push
add
shr
ljmp
jmp
je
shrb
cmpsl
shlb
dec
test
jl
add
add
pop
jbe
push
aas
loope
cmpb
fisttps
dec
jne
add
cmpsb
das
fcoms
sbb
dec
lret
test
repnz
scas
repz
stos
inc
int
sbb
sbb
mov
inc
push
outsl
clc
xlat
lock
or
ret
add
adc
gs
add
out
sub
add
push
inc
mov
test
xchg
add
mov
pusha
add
xchg
pop
inc
mov
or
rorb
stos
sub
fdivrp
add
mov
pop
inc
xor
inc
adc
add
add
cmp
pop
aaa
jne
int3
stos
add
lods
pop
xchg
push
jp
cmp
cs
aad
popa
cmp
in
push
jl
jb
and
daa
mov
add
xor
sbb
xor
test
push
sbb
movsl
or
movsb
add
nop
xor
enter
push
adc
add
xchg
add
sbb
and
cmp
sbb
jmp
in
or
adc
push
xor
push
or
test
add
and
shrb
cltd
sub
sbb
adc
adc
pushf
xchg
out
loopne
pop
jmp
mov
mov
filds
js
hlt
ljmp
and
stos
mov
lods
sbb
add
les
addb
enter
mov
sub
repz
mov
rcrl
jbe
add
jmp
or
inc
dec
sti
add
xchg
xor
add
pop
and
add
jg
loopne
adc
or
push
add
outsl
leave
fdivrs
pop
or
mov
cmp
mov
push
push
int
addr16
add
jne
sub
cmp
test
or
imul
scas
mov
add
in
mov
cmp
je
inc
jmp
jecxz
add
mov
ret
push
andl
enter
pop
add
loop
lds
shll
shll
fildl
cmp
lock
sbb
js
or
cmpb
out
loopne
pop
inc
popa
add
pop
jnp
pop
sub
lret
push
filds
fnstcw
cmp
add
xchg
enter
push
jno
stos
dec
add
inc
stc
pop
cmp
flds
lea
pop
pop
jmp
add
loopne
cld
pop
cmp
mov
dec
data16
mov
mov
mov
rorb
sbb
inc
xchg
cmp
sbb
in
push
pushf
lock
sbb
mov
call
jle
aas
add
add
out
push
icebp
pop
add
sub
sti
loopne
add
push
push
cmpsl
les
add
and
jbe
aam
fildl
jg
pmaddwd
lods
mov
rorb
gs
push
lock
add
or
loopne
add
loopne
xor
rcrb
add
divw
out
inc
push
jge
mov
or
sub
pusha
mov
data16
xchg
mov
loopne
in
bound
add
add
add
leave
adc
loope
mulb
mov
bound
cmpsb
mov
aam
mov
stos
xchg
into
loopne
adc
or
add
dec
je
xor
shrb
adc
pop
and
cmpb
add
aaa
je
jne
sbbb
add
dec
shr
add
adc
pop
mov
aad
sub
call
push
add
xor
add
ljmp
call
jp
mov
pop
clc
mov
popa
inc
mov
test
rcrb
cmp
inc
add
aam
mov
scas
hlt
repnz
mov
ja
test
add
fiadds
decl
xchg
nop
inc
mov
push
add
push
aas
movsb
push
or
push
add
or
bnd
fcomps
popf
jno
push
mov
lret
sub
pop
lahf
std
fmull
add
inc
add
test
add
push
add
mov
ljmp
mov
dec
or
mov
fistl
xchg
add
add
inc
mov
or
add
popf
sub
add
pop
mov
das
testl
jb
adc
add
cmp
rolb
push
mov
add
cmpsb
stc
jle
add
mov
adc
dec
or
clc
ja
xor
addb
inc
pop
pop
cli
loopne
add
jb
cmp
cmp
ds
out
pop
testl
test
mov
sbb
int
clc
lcall
lret
add
loope
push
add
arpl
cwtl
jo
add
mulb
test
xchg
iret
xor
out
out
shrb
setae
mov
popa
mov
test
add
xlat
mov
pop
loopne
or
add
pop
faddl
jle
pop
mov
add
xlat
imul
push
cmp
roll
cli
xchg
jo
sub
nop
lret
lods
pop
mov
jmp
and
inc
aam
iret
adc
les
push
inc
sbb
xchg
add
cmp
pop
sub
out
and
je
jo
push
jmp
cmpl
das
push
hlt
xor
add
inc
push
dec
into
inc
and
add
rcrb
sbb
push
ret
sbb
popf
testl
push
mov
cmp
ror
sarb
paddusw
pop
lock
sbb
cld
nop
sahf
outsb
rorl
sbb
insb
cmc
jle
pop
or
add
mov
or
clc
and
push
enter
dec
jo
add
adc
inc
cmp
xor
inc
cmp
jo
add
sub
rep
dec
add
xchg
scas
and
add
arpl
adc
pop
add
jb
ret
push
mov
imul
sbb
aas
cld
pop
cmp
inc
mov
mov
push
push
sub
rorb
xor
inc
add
orl
je
ljmp
pop
test
mov
add
push
mov
enter
pop
xlat
push
or
adc
lds
shl
mov
add
sub
pop
and
add
push
inc
add
inc
call
loope
add
cmp
sub
movsb
dec
out
xor
pusha
leave
notb
sar
mov
add
pop
push
sub
push
jmp
sbb
cmpsb
cld
sbb
movsl
and
adc
add
repnz
lea
add
mov
aaa
rol
sahf
pop
pop
ds
inc
add
mull
mov
inc
pop
add
ja
daa
mov
insb
psrlq
mov
sarl
mov
sub
or
jl
or
mov
mov
shll
xor
add
or
add
add
adc
jne
sbb
mov
loopne
and
adc
add
pop
movsl
jge
in
pop
add
insb
je
rcrl
ret
pop
or
rcr
add
aad
roll
test
dec
mov
add
cs
and
add
sub
mov
repnz
and
pop
call
inc
roll
jle
inc
add
adc
lock
jge
rolb
sar
add
out
or
popa
push
fsubr
add
test
xorb
and
pop
aam
add
sbb
push
xchg
dec
ret
popl
or
leave
mov
add
xchg
ds
push
scas
adc
dec
xchg
insb
push
add
or
cmp
mov
jnp
adc
add
and
add
mov
inc
mov
repnz
push
imul
dec
sub
push
es
sti
add
inc
mov
js
sbb
xchg
mov
int3
mov
push
add
leave
and
dec
jbe
and
jnp
rcrb
pop
cld
inc
add
lods
jp
imul
add
push
sub
ret
mov
cld
pop
aam
xor
jnp
cmp
xchg
sub
call
repz
mov
add
push
add
or
das
test
movsb
call
adcl
cld
std
and
sbb
cmp
xor
or
fdiv
xor
cmp
and
loopne
ja
sub
inc
fs
mov
dec
push
inc
push
insb
sbb
pushf
pop
ljmp
stc
movsl
inc
push
mov
int3
pop
push
sbb
faddl
add
mov
test
cli
nop
notb
xchg
icebp
test
adc
jmp
bound
stc
lret
inc
add
cmpl
inc
test
clc
or
stos
test
cwtl
add
out
xchg
insb
pop
and
out
jg
rorl
iret
add
and
loopne
jl
add
jp
out
push
sbb
cmpsb
pop
xchg
fsubl
add
aaa
lods
pop
pop
dec
add
iret
inc
pop
mov
mov
loopne
cmc
mov
roll
mov
ds
add
mov
cmp
add
andb
clc
repnz
das
xchg
mov
bound
sbb
das
sbb
sbbb
pop
mov
sub
sub
push
fisubrl
out
pop
repnz
call
sbb
pop
mov
push
int
sub
cwtl
roll
inc
dec
jae
adc
jb
sub
dec
daa
sahf
sub
jmp
xor
mov
pop
mov
mov
push
mov
aaa
xchg
sbb
push
dec
push
push
aas
mov
lret
mov
fnstcw
movsb
dec
repz
nop
xchg
or
stc
je
out
xor
adc
jnp
pop
inc
sub
fwait
pop
add
xorb
cli
dec
add
jl
lods
aad
cld
sub
add
call
inc
cld
jae
and
jg
xor
dec
add
rorl
jecxz
jl
clc
outsl
push
add
and
enter
testl
add
rolb
ds
add
jmp
push
sbb
test
cmp
dec
popa
sub
add
fnsave
inc
je
mov
push
cmp
andb
mov
subb
mov
jmp
mov
inc
pop
mov
pop
and
pusha
xor
xor
add
int3
arpl
cwtl
dec
jnp
push
push
rcrb
jl
aad
pop
pop
cli
imul
pusha
adc
lods
ds
loopne
test
and
js
jmp
lock
jecxz
mov
xor
sub
xchg
mov
ret
add
dec
add
mov
inc
mov
push
jl
and
push
push
jns
repz
nop
cli
loop
test
fs
roll
jbe
les
jnp
and
cli
jecxz
stos
mov
add
ret
das
jle
inc
aaa
mov
fistpll
insl
inc
add
dec
rolb
pop
xor
adc
lahf
xchg
andb
negl
fldenv
xchg
lcall
pop
inc
in
inc
sbb
pop
cmpl
ret
test
dec
stos
add
imul
sub
in
repnz
mov
sar
add
mov
scas
fldenv
loopne
push
add
inc
add
inc
and
sub
ja
or
in
cs
pusha
stos
cwtl
jb
add
push
jge
movsb
dec
add
adc
sbb
pop
repnz
add
lock
dec
movsl
aam
mov
bound
ror
or
inc
arpl
mov
adc
cs
add
adc
push
sub
jbe
push
add
push
pop
adc
inc
inc
and
cmp
nop
ss
or
sbb
adc
and
xchg
fdivrs
nop
sub
movsb
push
js
push
mov
popf
pusha
xchg
adc
adc
aas
je
cmp
sub
add
add
cmp
jne
jnp
jmp
pop
add
or
sbb
hlt
sbb
adc
rclb
lods
push
xchg
jbe
add
cmpl
add
inc
iret
push
test
mov
and
stos
pop
popa
add
and
aam
mov
stos
scas
insb
cmpsl
dec
and
add
jmp
dec
popf
nop
xchg
aad
add
xlat
pop
loopne
dec
fmul
xor
aam
clc
push
pop
xor
cmp
test
cmp
add
ljmp
test
or
cmp
xor
outsb
pop
scas
sub
idivb
adc
enter
jmp
inc
das
xlat
or
push
add
cmpsl
testl
add
lods
sub
in
push
pop
cmp
in
negl
not
add
imul
test
sti
sahf
mov
loop
cmp
test
cli
pop
mov
xlat
push
fnstcw
add
movsl
addl
cltd
mov
pop
mov
add
add
movl
jecxz,pn
push
add
sbb
push
lea
inc
add
lock
or
inc
and
and
push
pop
mov
neg
sbb
clc
je
mov
fadd
xchg
pop
es
mov
andl
jmp
sbb
fnstenv
sahf
in
syscall
lret
scas
xchg
test
pop
xchg
add
adc
inc
fsubrl
sub
mov
add
and
ss
xor
adc
sub
mov
cwtl
pop
push
lret
pop
or
lods
xchg
jne
mov
addl
test
mov
movsb
adc
push
cmp
mov
mov
adc
inc
add
xlat
cmp
in
icebp
rol
rcll
dec
add
stc
aad
pop
dec
movsl
ds
cmpsb
inc
ret
pusha
mov
push
add
jp
mov
pop
sub
add
or
dec
aaa
sbb
add
addl
test
and
cmp
add
bound
add
sti
bnd
cwtl
mov
cmp
mov
inc
daa
xor
add
add
add
test
adc
cmpsl
filds
xchg
outsb
add
pop
add
sub
push
push
sub
mov
sbb
bound
dec
dec
or
mull
cli
nop
inc
adc
add
cmp
hlt
fnstsw
and
mov
xchg
xchg
add
jbe
clc
je
imul
idivl
addr16
pop
and
add
pop
mov
ds
rolb
bnd
fdivrs
idivb
sbb
mov
jbe
in
flds
inc
add
sar
fsub
add
leave
jg
add
push
jne
or
scas
pop
xor
xchg
mov
jmp
inc
loopne
in
add
dec
iret
call
dec
inc
lret
cmp
jg
dec
xor
mov
cmp
sti
inc
lods
sbb
and
lods
pop
movsb
js
cld
or
out
rolb
ss
pop
stos
jb
add
outsl
mov
add
movsl
addr16
arpl
and
adc
pop
aas
sub
jns
mov
nop
push
mov
add
je
ds
xchg
add
insl
ret
clc
movb
sbb
dec
fdivrp
add
xchg
adc
cwtl
nop
add
adc
add
lahf
add
jmp
ljmp
xchg
xchg
push
mov
loopne
scas
mov
mov
sub
mov
dec
and
or
movsb
pop
leave
fidivrl
addl
jg
xor
jmp
cld
dec
stc
enter
xchg
add
loop
add
mov
add
cmp
shrl
cmp
incl
mov
shrb
sub
adc
mov
movsb
add
es
pop
and
clc
mov
jno
mov
xor
adc
xchg
pop
xor
pop
arpl
xchg
mov
jmp
xchg
lds
add
xchg
xor
je
fisttps
jmp
fucomp
cli
dec
in
roll
fimuls
insl
inc
in
jmp
loop
out
les
dec
popf
sahf
and
aam
movsl
aas
xor
ja
dec
mov
add
or
xor
pop
sti
ds
or
aas
jo
add
add
stc
test
or
sbb
push
xchg
hlt
divb
dec
jg
dec
stos
mov
test
xlat
sbb
les
test
xor
cmp
insb
movsl
cs
sbb
fsubl
shlb
push
cmpl
xchg
cmc
adc
add
add
lea
add
jmp
mov
inc
push
cmc
out
test
mov
fs
sub
jnp
sbb
nop
pop
scas
dec
cwtl
les
mov
adc
add
and
lret
arpl
pop
add
jp
pusha
cmp
adc
lods
or
push
ret
or
and
inc
inc
adc
hlt
mov
add
out
in
rorl
pop
xchg
jl
jb
add
test
lea
or
jne
adc
mov
faddl
rolb
jmp
xchg
daa
pop
adc
mov
notl
dec
nop
jb
add
cmp
add
inc
test
xchg
add
sbb
cli
xor
adc
fldenv
ljmp
ds
add
add
cmp
ljmp
pop
lsl
sti
jo
inc
lcall
jge
lock
or
ret
ds
imul
testl
stc
sbb
add
sbb
add
or
clc
lea
or
leave
and
push
xchg
das
add
fists
sti
test
cmp
add
sub
fdiv
xorb
add
dec
addl
sarl
push
sub
out
add
mov
imul
mov
mov
std
mov
sbb
jae
roll
push
orb
into
sub
jp
add
sbb
lea
jg
sti
insl
shll
cmp
add
pop
jmp
push
std
cs
add
dec
mov
xchg
pop
add
add
add
sbb
sbb
addr16
add
xor
push
jle
add
inc
lds
add
push
adc
add
and
or
lods
stos
imul
push
fidivrs
push
dec
add
mov
aam
clc
in
adc
add
pop
xchg
adc
mov
jecxz
push
pop
inc
inc
and
jp
xor
xchg
jmp
jl
out
jmp
test
scas
insl
jg
add
pushf
rcrb
lret
push
icebp
xchg
xchg
ja
clc
fdiv
pusha
fdiv
mov
repnz
push
jg
out
icebp
and
in
in
push
sub
movsl
add
dec
enter
jmp
cmp
sbb
sub
xchg
add
mov
push
scas
jp
add
mov
subl
pop
ret
stos
xor
add
testb
adc
pop
loopne
lea
mov
mov
ret
pusha
xor
sbb
push
into
xchg
mov
arpl
subb
push
pushf
inc
xor
scas
pusha
xchg
aas
xor
sti
cmc
add
jecxz
lret
mov
repnz
stos
lods
loope
xlat
loope
jmp
rclb
ds
xchg
cmp
xchg
dec
js
jno
in
add
xchg
daa
or
dec
adc
pop
pop
add
repz
enter
add
mov
sbbl
jne
pinsrw
adc
xchg
adc
inc
add
xor
nop
shl
add
and
lods
fstps
and
out
adc
loope
lock
dec
sbb
maxps
sbb
mov
inc
jne
je
or
jno
and
test
repnz
add
sub
or
push
add
addb
and
mov
jecxz
call
cmpsb
add
mov
cld
mov
lock
xchg
orl
out
add
pop
mov
jg
rorb
cmpsl
push
adc
sbb
inc
cmp
jle
cmp
add
mov
inc
sbb
push
lahf
movl
std
mov
iret
out
loopne
mov
xchg
mov
sub
dec
test
dec
cmp
xchg
inc
add
stc
cld
pop
adc
mov
mov
nop
pop
sub
xchg
lcall
add
and
sub
aam
and
roll
mov
pop
shll
add
jmp
scas
add
push
cmc
xor
add
xor
loopne
adc
cmp
mov
into
cmpsb
sbb
mov
mov
inc
dec
cmp
mov
sub
add
inc
push
sub
popa
sub
loope
jmp
sbb
in
lods
shrb
decl
test
idivb
iret
dec
pop
ret
leave
rcr
cmpsb
adc
add
add
sbb
xor
stos
cmp
jo
push
add
pop
or
pop
xchg
mov
test
sbb
das
dec
add
cli
dec
and
inc
test
or
xchg
add
add
incl
adc
out
dec
mov
ja
cmp
xchg
adc
push
adcb
rorl
jmp
pop
cltd
icebp
movsl
add
movsb
dec
das
jne
loopne
xchg
add
cmpsl
pusha
inc
and
or
and
shll
scas
adc
mov
push
dec
in
add
aad
adc
xchg
sub
add
pop
jb
gs
lods
and
sub
lret
pop
fstp
dec
inc
jb
not
xchg
adc
lea
xchg
dec
cmp
movl
adc
scas
mov
jmp
and
dec
xlat
pop
sbb
mov
add
mov
fisubrs
mov
flds
ss
clc
push
mov
dec
lahf
loop
pop
clc
and
add
sbb
sbb
inc
jae
mov
pop
add
jne
cwtl
hlt
cli
and
or
mov
pop
add
fdivr
mov
and
mov
loope
popa
mov
xchg
or
dec
and
insl
jl
mov
adc
xchg
mov
jmp
mul
add
daa
adc
or
dec
adc
xor
cmp
jae
mov
inc
lock
cmpsl
add
pop
mov
and
add
and
xor
rorl
cs
and
fcompl
dec
push
xchg
push
mov
inc
or
sub
cmpsb
cmp
pop
daa
add
fs
xchg
push
shl
cs
pop
bound
fadd
sbb
jecxz
pusha
adc
or
pop
add
or
scas
sbb
push
mov
add
hlt
mov
mov
cwtl
xchg
add
dec
out
dec
push
xchg
pop
jns
mov
movb
subb
add
mov
pop
or
sub
es
test
adc
dec
faddl
jne
xchg
imulb
mov
jg
pop
orl
fs
xchg
orb
mov
movb
daa
in
jae
or
insb
les
mov
fists
add
add
or
push
jns
loop
lret
pop
roll
mov
adc
jl
add
dec
mov
or
sub
jnp
sti
repnz
mov
add
xchg
or
add
inc
jnp
decb
cli
add
adcb
jae
push
dec
xchg
xchg
shlb
mov
sub
add
lret
stc
test
adc
xchg
lret
ja
pop
add
push
xchg
or
jae
mov
jmp
sahf
sub
nop
cmp
add
push
pop
push
or
pusha
add
jne
movl
or
xchg
clc
dec
or
dec
adc
and
mov
inc
add
dec
dec
xchg
push
jg
sbb
pop
mov
movsb
negb
or
sub
nop
mov
js
push
insb
out
and
lods
arpl
dec
aad
add
jne
bound
int
add
daa
addr16
test
xor
pop
xor
inc
imul
pusha
fmull
adc
xchg
cmp
and
push
popf
inc
fists
add
jne
sti
int3
jle
jb
dec
mov
pop
mov
repnz
pushf
clc
add
out
stos
jno
lret
sbb
shll
lods
out
add
es
add
sub
jg
stos
loope
add
or
cmp
add
negl
rcrb
shll
mov
adc
insb
and
ljmp
je
scas
test
mov
jo
lahf
add
pop
popf
arpl
pop
sub
add
push
call
add
ret
jmp
mov
push
cmc
aas
imul
mov
pop
int3
sbb
push
pop
push
std
rcrb
xor
mov
adc
push
mov
push
repz
jne
add
adc
add
mov
xchg
int
xor
mov
dec
popf
out
pop
jne
xor
mov
sbbl
xchg
hlt
movsb
ds
cmp
xchg
dec
mov
ret
push
xchg
pop
repnz
add
xchg
pusha
jmp
inc
lret
and
jno
push
shlb
push
fwait
insl
cmp
daa
popa
xchg
add
pop
add
xor
dec
mov
add
push
gs
jbe
jo
add
xchg
sarb
notb
xchg
cld
xchg
in
xor
push
sbb
lret
cmpl
xchg
and
inc
sbbb
pop
jno
xchg
add
xchg
add
push
mov
jbe
out
add
add
inc
xlat
lret
pop
hlt
and
into
add
aad
xchg
lods
and
mov
flds
sub
sub
hlt
loop
mov
stos
push
cmpsl
pusha
dec
and
adc
jle
adcl
mov
push
lods
mov
sub
sarb
add
fwait
jg
sarb
or
push
mov
pop
iret
cwtl
push
and
jb
adc
shlb
std
mov
mov
pop
dec
xchg
hlt
aad
mov
add
add
adc
pop
lds
jmp
out
test
into
andl
add
leave
daa
pop
sbb
inc
cmp
jmp
pop
push
insb
adc
pop
lcall
cmp
mov
sub
scas
clc
pop
jl
push
fidivs
push
adc
or
call
das
jne
mov
mov
sbb
adc
push
xchg
orb
and
or
add
pop
sub
pop
loopne
add
xchg
dec
add
das
pusha
pop
loope
popa
les
bound
scas
arpl
xlat
mov
out
fs
cmp
or
jbe
in
add
int
int
jo
push
add
inc
add
rclb
cwtl
add
and
inc
add
sbb
test
xchg
sbb
add
push
add
cmp
add
pop
xchg
scas
add
pop
xor
inc
negl
aas
test
cmpsl
sbb
cld
add
mov
bound
mov
out
lret
xchg
gs
inc
stos
cwtl
shlb
sub
outsl
jl
dec
lret
adc
ret
push
in
mov
lock
popf
pop
push
rolb
add
xor
sbb
inc
cmp
scas
addb
add
cld
aas
dec
mulb
test
or
or
xor
add
add
out
xchg
jle
cmpsl
push
sub
cmp
mov
imul
ds
in
popf
ja
cwtl
scas
sbb
sub
mov
mul
mov
add
or
xchg
cmpsb
or
fs
push
jl
push
nop
lret
imul
andb
mov
shlb
divb
jne
push
in
ds
add
call
cmp
dec
test
sub
or
add
mov
jmp
mov
and
push
add
aam
dec
je
add
jns
in
test
sahf
cltd
ret
mov
add
add
movb
and
pop
push
rorl
push
test
mov
adc
pop
cmpsl
add
mov
sub
lahf
shlb
cmpsb
scas
jl
loope
aas
sub
add
pop
cmp
mov
and
and
or
cld
or
pop
pusha
mov
insl
aad
mov
add
sub
je
add
dec
pop
mov
hlt
sbb
or
or
cmpsl
cmp
push
lcall
push
jbe
jp
add
movsb
or
and
and
add
push
add
xchg
mov
popl
test
xchg
mov
sub
add
jbe
icebp
push
adc
fwait
push
pop
sub
pop
or
add
sub
rolb
push
adc
inc
out
ljmp
and
lods
push
js
repnz
call
rcr
int
add
shlb
push
pop
jl
pop
lock
xchg
dec
add
out
iret
mov
dec
pop
mov
xchg
dec
shrl
mov
hlt
repnz
jne
mov
adc
loop
inc
push
mov
jae
shl
dec
add
cmc
sub
aaa
add
sbb
xorl
sub
add
cltd
dec
jge
jl
movsl
dec
leave
pop
inc
mov
add
xor
adc
dec
adc
push
mov
fstpt
add
fs
lcall
pop
leave
pop
jno
cmp
shl
rcll
or
cmp
daa
jae
dec
jge
pop
cmp
and
adc
add
push
adc
sbb
sub
cmp
in
add
mov
xchg
rclb
call
and
lods
dec
mov
fistl
les
xchg
arpl
add
lcall
sbb
shl
add
mov
adc
dec
pop
adc
mov
sub
js
dec
push
ja
add
pop
jmp
ds
push
and
shlb
add
adc
mov
sub
inc
sbb
xorb
cmp
sbb
mov
push
cmp
ja
mov
xlat
inc
call
stc
push
adc
movsl
add
and
and
dec
pop
xchg
imul
push
nop
mov
je
push
mov
xor
add
test
xchg
iret
lret
xor
push
lods
add
pop
or
js
adc
sub
arpl
scas
ret
testb
sbb
add
roll
hlt
inc
mov
dec
or
cld
and
aas
pop
mov
pop
cmpl
jnp
cmpb
xor
xor
leave
das
cmp
mov
mov
test
cmpsl
xchg
fmuls
cli
ret
hlt
loope
cmovns
lock
adcb
xor
mov
and
adcl
lock
insb
and
mov
outsl
and
ret
ss
push
cmpsl
add
sub
or
lret
cmp
xor
test
call
or
inc
sub
add
and
inc
xor
push
adc
repnz
xor
or
xchg
loopne
and
leave
inc
bound
push
imul
xor
out
lret
add
sti
adc
imul
jg
cmpsb
out
mov
mov
mov
clc
cmp
addl
or
or
push
lcall
scas
repnz
mov
sbb
inc
add
and
and
add
sub
pop
test
imul
or
in
ds
or
lcall
je
cmpl
test
sbb
and
fcompl
push
ljmp
sar
movb
inc
dec
stos
cmpsb
ret
jg
add
mov
push
add
push
mov
jbe
mov
or
std
pop
jp
daa
add
out
cltd
add
push
xor
jg
mov
daa
cmp
in
add
sub
pop
and
sbb
in
xor
xor
test
adc
push
adc
inc
and
xor
popa
dec
pop
outsb
xchg
jnp
mov
xchg
mov
sti
leave
clc
test
imul
jmp
adc
and
jl
add
test
jno
mov
pop
inc
jae
mov
adc
data16
xchg
pop
ja
jnp
dec
mov
sbbl
xchg
mov
sbb
bound
lea
mov
sti
add
movl
push
add
adc
xchg
cmc
nop
pop
sbb
inc
ret
addb
andl
add
pop
enter
add
sbb
pusha
test
inc
mov
lock
dec
push
add
push
aam
lcall
jne
sbb
imul
adc
mov
add
aas
or
lock
fiadds
pop
inc
dec
movl
adc
test
jno
insb
sub
add
mov
add
shrb
add
lds
mov
add
call
mov
popf
jecxz
dec
pop
ret
movsb
push
std
inc
mov
jae
cmpsl
bound
mov
scas
call
imulb
jnp
addb
push
adc
or
add
and
cmp
sub
imul
or
add
aas
push
test
add
cmpsb
loopne
add
xchg
add
add
test
arpl
mov
or
mov
rolb
outsb
adc
mov
ret
add
inc
jae
add
inc
fwait
add
mov
and
add
jl
pop
ret
sahf
jl
add
dec
ljmp
xchg
orb
push
cwtl
cmp
push
sbb
aad
mov
add
mov
xchg
mov
cmp
adc
lea
jnp
es
add
cld
dec
jae
or
ja
push
mov
jo
test
xor
fmull
ret
scas
inc
pop
fs
pop
add
decl
jae
xor
out
loop
push
es
or
dec
jb
andb
lock
jbe
push
lods
out
add
pop
cs
dec
or
inc
pusha
adc
add
xor
mov
aas
imul
test
add
icebp
and
repz
aam
inc
hlt
testb
daa
mov
mov
or
push
loop
pusha
popa
mov
add
cmp
or
addr16
and
cmp
inc
inc
lahf
xchg
in
push
repnz
sub
and
add
ds
adc
xor
xor
add
xor
add
cmp
mov
in
add
xor
jnp
cs
add
aad
inc
popa
pusha
je
push
arpl
mov
jle
loopne
dec
add
stos
add
push
or
add
mov
lcall
loop,pt
add
push
cli
or
add
lds
xchg
mov
add
add
idivb
in
jle
add
das
mov
jnp
test
inc
fsubs
cwtl
imul
dec
and
jae
bound
inc
or
dec
sbb
adc
ret
fcoml
pop
in
shlb
push
inc
and
and
and
cmp
mov
sub
add
sub
cmp
add
test
mov
add
xor
push
out
int3
sub
aam
cli
imul
push
pop
arpl
sbb
and
add
xor
notl
enter
add
fstps
or
or
add
inc
mov
out
cmp
in
add
test
push
bound
inc
and
scas
leave
xor
sub
xor
add
cmp
xor
shl
adc
fcoml
pop
in
ret
aas
mov
push
inc
movsl
xor
add
fldt
fidivrs
add
call
testl
sti
mov
jle
call
repz
cmpl
insl
roll
jnp
and
add
adc
sub
xchg
test
inc
aam
mov
push
mov
sbb
clc
push
clc
ret
push
iret
rcrl
loopne
arpl
fdivrs
sub
pop
call
add
je
lea
insb
adc
aam
add
push
and
int
aad
xor
aas
or
add
add
mov
or
ja
adcb
inc
lods
xor
js
mov
rorb
rep
pop
push
xlat
or
ljmp
mov
sub
es
ret
out
add
iret
push
push
test
pop
jno
add
pop
mov
shlb
add
ds
enter
mov
int
mov
movb
pop
and
adc
add
fisttpll
lea
xchg
and
jne
insb
sti
push
ss
data16
pop
add
adc
jae
sbb
push
lock
orb
add
push
sub
in
and
jmp
pop
cli
xchg
nop
inc
in
test
sbb
mov
aad
enter
add
stos
cmp
mov
add
mov
clc
sub
add
cs
add
fisubs
mov
cwtl
sbb
mov
inc
lret
push
add
lock
jge
lock
push
cli
int3
add
lret
pop
in
cmp
inc
lret
xor
pop
add
or
or
push
gs
add
xchg
push
sub
xor
add
jnp
ror
es
clc
addb
out
mov
jno
add
jl
popf
adc
leave
cltd
mov
add
jg
ss
stos
add
sbb
pop
pop
add
aas
or
jne
sbb
cmp
daa
add
mov
xor
and
iret
adc
xlat
adc
aas
push
pop
enter
mov
adcb
add
dec
pushf
sahf
mov
insb
clc
and
push
jae
dec
sbb
inc
je
push
add
add
sub
fildl
sbb
andl
mov
add
sub
dec
mov
mov
jns
movsb
fwait
std
rolb
add
mov
sub
sub
add
out
xor
mov
pop
inc
cltd
dec
sbb
push
adc
dec
pop
xchg
or
jo
cmp
out
pop
mulb
xchg
loopne
mov
inc
dec
push
lret
push
add
xchg
fstpt
mov
clc
out
add
mov
sbb
lods
xor
cmp
fimuls
call
mov
xchg
gs
in
push
call
pop
xchg
cmpb
mov
pop
mov
in
fsubrl
mov
sbb
pop
in
sbb
add
push
loopne
xchg
popf
in
lods
add
fimull
out
cmpsb
add
fistpll
in
test
mov
sub
add
xor
dec
xchg
cmc
fildl
and
inc
add
mov
nop
pop
add
push
or
add
scas
adc
movsb
mov
mov
imul
ret
call
sub
andb
std
pop
mov
inc
cld
add
clc
cmc
inc
loopne
fistps
pop
scas
into
pop
jge
pop
mov
pop
das
incl
push
inc
add
add
std
test
adc
mov
add
imul
sahf
roll
pop
scas
add
incb
add
push
shrl
cmc
cltd
add
hlt
rorb
add
test
and
push
imul
movsl
pop
add
or
je
push
jbe
mov
lret
pop
add
mov
mov
add
mov
xchg
test
sbb
add
fucom
sarb
add
mov
and
or
stos
and
jle
jle
pusha
adc
sbb
inc
stos
jp
mov
jmp
add
out
cmp
cli
mov
inc
lods
jp
ja
jge
cmc
add
scas
and
mov
add
fnsave
movsl
push
push
and
mov
push
mov
sbb
pop
mov
push
push
stos
push
out
nop
clc
repnz
inc
cmp
bound
jg
or
adc
add
xlat
xor
popa
lret
jne
ds
push
shr
pop
cmp
ljmp
lods
nop
sbb
pushf
add
inc
adc
ror
jl
xor
jp
lods
aam
js
incl
in
push
mov
dec
ret
mov
andb
es
jl
add
jge
jmp
pusha
mov
add
adc
jmp
jno
add
mov
nop
inc
ret
cmp
cmp
adc
hlt
jo
push
add
mov
dec
add
xchg
pop
and
lock
xor
bnd
xor
jne
jb
add
sbb
jae
jns
repnz
fwait
int3
push
add
inc
sub
adc
int
add
xchg
or
roll
jns
or
mov
icebp
loop
sbb
adcb
lcall
loopne
xchg
xor
daa
adc
addr16
push
and
cmp
mov
out
and
add
lods
hlt
shr
movl
pop
lock
push
cs
mov
xchg
pop
lds
test
push
adc
sub
out
leave
stc
mov
mov
shrb
mov
jge
add
xchg
jne
add
add
outsb
ds
ret
add
dec
aas
lret
iret
mov
not
sub
xor
adc
lcall
push
add
and
push
sarb
push
clc
cs
cmp
add
test
leave
jne
xchg
push
movsb
repz
add
call
jle
add
rcr
je
mov
add
dec
and
mov
sbb
or
jle
xchg
jmp
cwtl
mov
in
add
xor
adc
add
xchg
fmulp
pop
mov
or
cmpsb
je
sub
add
jmp
inc
add
xor
lcall
sub
ret
sub
mov
pop
xor
push
popf
aad
fsubs
movsl
add
iret
mov
inc
mov
pop
mov
xchg
mov
incl
daa
xchg
mov
cmp
cs
adc
je
inc
lcall
cld
movaps
jbe
dec
popf
jae
mov
das
shlb
push
inc
add
and
roll
je
sbb
sbb
jo
or
movsl
daa
jg
add
push
jns
je
add
adc
outsl
add
fdivl
pop
jge
stc
incl
jno
and
or
lea
inc
aad
jns
call
adc
push
loop
add
ds
clc
mov
dec
add
ljmp
cli
fldl
fwait
cmc
push
add
push
inc
pop
inc
or
add
call
inc
or
push
bswap
adc
mov
pop
cmpl
add
imul
add
adc
push
shll
adc
mov
out
incl
cmp
subb
add
inc
inc
stos
push
icebp
push
ljmp
xlat
pusha
adc
sbb
mov
aam
and
add
sub
jge
pop
unpcklps
and
cltd
lock
jno
in
fs
mov
mov
add
and
lea
dec
jle
aam
add
xlat
jmp
add
inc
inc
mov
mov
leave
add
cli
fsub
repz
in
add
leave
pusha
cmp
mov
mov
mov
mov
add
add
iret
mov
mull
ja
incl
xor
push
adc
lds
add
add
mov
dec
jns
in
push
cmpsb
imul
sbb
je
add
lock
lret
sbb
cli
into
xchg
fmuls
sets
leave
add
dec
cld
dec
hlt
dec
es
add
jl
cmp
pop
rorl
leave
or
imull
inc
pop
cld
fcom
cld
xor
pushl
lock
jecxz
jne
add
lret
pop
testb
cs
dec
pop
add
jl
add
bound
add
pusha
cmpsl
adc
cmpsb
add
inc
add
add
jle
out
jmp
sbb
out
add
xor
mov
test
pop
imul
push
cmp
mov
xchg
addl
mov
mov
and
push
add
adc
sub
xchg
pop
mov
inc
dec
or
lahf
xor
cli
int3
dec
lock
sub
jb
jl
adc
clc
cmp
sbb
pop
call
add
mov
aas
rorb
loop
dec
pusha
push
sub
pop
xchg
push
in
and
aam
jne
in
add
mov
cmpsb
iret
mov
add
fcoml
push
lds
and
ror
mov
sbb
jbe
pop
in
ret
push
leave
add
fsts
xadd
fsubrl
imul
rcll
mov
sbb
xor
mov
add
iret
bound
adc
add
dec
jmp
cwtl
and
daa
movsl
roll
cmpsl
fnstenv
add
xchg
insl
idivb
int
push
push
ja
bts
loopne
loopne
mov
testb
jmp
or
cmp
cmpsb
or
call
incl
je
jbe
test
mov
es
fsubrs
push
std
adc
xchg
nop
or
pop
pop
dec
mov
push
mov
add
xchg
mov
sbb
push
xor
mov
fwait
les
pop
iret
dec
mov
lock
fdivs
mov
pop
pop
call
cld
and
add
add
pop
xchg
push
jne
mov
xchg
push
out
subb
push
add
and
add
fildll
rcll
dec
xor
and
nop
hlt
jne
lsl
and
adc
stos
sbb
or
add
test
ds
add
cmp
in
jb
add
adc
dec
xchg
adc
insl
cld
jl
lods
add
lock
push
hlt
out
and
iret
jmp
mov
outsl
sub
movsl
mov
pop
aad
dec
addb
fadds
cmpb
add
dec
mull
fldenv
xchg
ret
push
dec
adc
and
stc
int3
add
cld
add
cwtl
movsb
addb
ja
push
jne
push
add
or
push
sbb
ljmp
xchg
clc
push
jne
pop
stos
add
in
jns
jle
call
daa
pop
ljmp
add
push
out
cmp
sti
add
stc
pop
push
lock
pushf
test
xrelease
jp
or
addr16
adc
xor
xchg
mov
mov
xchg
imul
mov
jge
push
shrl
xlat
dec
mov
loop
cs
insb
inc
cwtl
add
leave
jl
add
xchg
pop
mov
test
dec
jne
daa
jmp
movsl
mov
cld
cmp
lcall
xchg
jle
dec
insl
xor
addb
in
pop
cmp
jne
add
adc
mov
test
fadds
mov
cmp
jge
js
xchg
aad
adc
dec
roll
test
add
sahf
loope
xchg
aam
and
nop
fmul
add
fs
loopne
xlat
add
cltd
cli
adc
int3
pop
add
aad
stc
les
jp
mov
sub
adc
inc
cmp
sbb
xorb
incl
int3
or
loopne
loop
pop
add
pcmpgtb
insl
mov
adc
outsw
cltd
add
fdivrs
inc
pop
cli
je
or
add
fisubrl
ret
inc
lods
cltd
dec
jecxz
inc
repnz
cmp
cmp
xor
ss
add
fisubs
dec
add
or
xor
jns
sub
mov
xchg
add
xorb
lret
or
add
in
inc
iret
sbb
add
cmpl
add
xchg
popf
ja
xchg
add
cs
dec
repnz
dec
inc
pop
call
pop
mov
xlat
or
add
std
call
jge
push
pop
es
js
add
mull
cmp
rolb
mov
or
push
push
xlat
testb
push
pop
ja
flds
and
loopne
and
iret
pop
bound
jo
push
add
add
ret
add
dec
inc
test
add
lcall
xor
add
jmp
add
inc
inc
mov
cmc
dec
insb
ret
ds
add
inc
xor
fidivs
adc
push
mov
jo
jbe
add
mov
fdivrl
out
xor
fmuls
popf
jl
pop
xchg
aas
loopne
pop
iret
in
sub
orb
rorb
xorl
add
int
pop
ja
add
add
jne
arpl
mov
out
cwtl
add
dec
cs
fcmovnb
jb
pop
jne
clc
sbb
and
out
push
inc
add
sub
or
add
jo
pop
clc
in
test
ds
add
or
addb
bound
out
mov
push
inc
in
xor
pop
mov
xor
mov
orl
fwait
pop
call
loopne
or
cmpl
add
int3
inc
mov
xchg
scas
aam
lods
add
push
sbb
adc
pushf
and
or
mov
es
jb
fsub
icebp
testb
mov
loopne
add
aas
jl
mov
shll
jns
adc
adcb
mov
test
sub
and
sbb
andl
pop
add
int3
push
std
cmp
sbb
ret
pushf
xchg
insl
xor
add
adc
mov
add
dec
inc
sbb
bnd
push
pop
clc
daa
add
lock
xorl
push
call
hlt
sub
sbb
hlt
rorb
add
xor
stc
cli
mov
adc
push
arpl
sbb
pop
out
imul
xor
cmp
pop
and
je
icebp
mov
daa
cmp
add
das
cmpb
sbb
cmp
push
jl
inc
mov
push
pusha
inc
rol
add
shlb
insb
add
sbb
lock
sbb
pop
lret
leave
push
aaa
enter
jo
mov
icebp
add
mov
sahf
dec
cmp
sub
lret
cmpsl
jl
inc
inc
sbb
arpl
stos
jbe
push
je
xor
add
dec
hlt
mov
add
dec
in
push
and
or
inc
lret
add
sbb
jp
inc
fwait
data16
cmp
cmp
inc
lcall
or
push
lcall
add
dec
in
lret
cmpb
test
push
jmp
add
shrb
fadds
fdivrl
stc
cmc
fildll
aas
adc
out
sbbb
insl
add
mov
xlat
orb
xor
ficomps
push
push
or
adc
shl
cwtl
repnz
cwtl
dec
mov
and
lret
mov
les
jnp
dec
clc
iret
cmp
mov
cld
ja
add
cltd
sub
jle
dec
addr16
xchg
in
mov
mov
call
and
pop
bswap
mov
push
out
dec
add
in
or
aam
xchg
cli
repnz
mulb
rclb
add
mov
pop
push
or
test
rorb
ficompl
psubq
mov
or
add
jne
and
add
pop
mov
leave
add
add
cld
sub
inc
mov
pop
add
jg
das
stc
inc
pop
cmp
ret
js
xchg
xor
push
push
ljmp
je
and
enter
mov
sub
sbb
test
testl
aaa
fildl
cmp
pop
pop
dec
fs
push
je
clc
push
add
in
ja
sbb
loope
adc
cwtl
add
add
and
adcl
add
das
cmpsl
pop
sti
scas
add
adc
cmp
dec
rolb
cmp
call
stos
mov
addb
insb
cmp
ljmp
outsl
ret
mov
lahf
sbb
inc
pop
movsl
and
fsubrs
orl
popa
jp
bound
push
sbb
push
xchg
lods
sbb
cmp
movaps
push
dec
mov
leave
ret
xchg
mov
dec
pushf
xlat
and
pusha
iret
data16
mov
add
je
cmc
inc
add
mov
push
adc
jp
push
lds
sbb
icebp
add
sub
lahf
dec
jne
jle
popf
hlt
aad
xchg
pop
jle
pop
flds
mov
adc
xor
add
cmp
dec
cwtl
popf
aam
pop
sbb
mov
sub
cmp
adc
sub
mov
add
xchg
inc
sub
sbb
add
cmpsb
mov
fldl
lahf
cwtl
push
pushl
and
int
and
add
repnz
add
rcrb
mov
les
or
jbe
cmpb
pop
mov
lock
mov
pop
pop
cmp
cld
push
lahf
mov
and
push
das
mov
jmp
cmp
ljmp
out
cmp
inc
movsl
in
add
add
or
pop
push
leave
pop
xor
ja
cmp
push
push
cmpsb
or
sbb
sub
sbb
mov
rorl
pop
lods
pop
cli
movsb
add
add
sub
sub
pop
xchg
rcll
or
mov
out
mov
mov
ret
pop
in
pop
pop
sub
jmp
test
jno
enter
fwait
xor
std
and
mov
div
mov
cli
call
adc
dec
clc
mov
add
pop
mov
add
add
std
mov
idivl
cmovae
add
push
mov
push
and
out
adc
test
cmp
movsb
add
dec
sub
mov
mov
jb
loopne
rcr
mov
int
push
jno
pop
xor
xchg
pop
pop
cwtl
adc
cmp
xor
add
cmp
adc
jecxz
dec
pop
push
jae
ror
in
jmp
or
test
iret
jecxz
icebp
mov
sarb
and
faddl
nop
xor
cwtl
pop
iret
into
sub
jne
xchg
pop
fbstp
sbb
pusha
in
test
xchg
cmp
dec
stos
lock
mov
push
sub
sub
inc
adc
add
jl
cmp
call
inc
mov
add
adc
mov
jne
gs
add
pop
jge
push
leave
aad
bound
xor
mov
xchg
in
mov
dec
std
add
xchg
verr
jae
pop
dec
fdivrp
and
inc
mov
adc
adc
add
push
sti
pop
jecxz
int
add
jecxz
pop
sub
push
add
lods
aaa
pop
add
lock
mov
shlb
leave
or
mov
mov
inc
pop
mov
push
push
and
test
daa
mov
add
test
dec
xchg
jle
sub
jl
add
fsubrl
inc
push
add
dec
je
nop
push
sbb
add
jmp
loope
mov
jae
xchg
push
test
sub
rcrb
and
add
rcrb
movb
enter
shll
and
dec
add
outsl
addl
mov
pusha
imul
and
adc
call
push
mov
cmp
cmp
popf
test
inc
shlb
js
push
movsb
xchg
or
inc
incl
adc
leave
insb
and
mov
pop
or
pop
pop
loop
adc
cs
sub
pusha
mov
mov
push
inc
int
outsl
sub
sub
nop
std
inc
incb
es
call
cmp
mov
aad
cmp
rolb
loopne
pop
xor
lcall
jmp
add
insb
pop
mov
push
push
lret
push
add
dec
dec
lcall
inc
call
sbb
out
jl
addl
mov
ja
adc
fs
or
shr
ss
push
shl
add
jmp
xor
mov
and
jecxz
inc
imul
dec
and
shlb
inc
orb
mov
pop
pop
inc
jne
or
mov
mov
or
insb
push
xor
flds
adc
jne
lcall
jecxz
inc
sub
cwtl
dec
push
or
add
pushf
lret
fcomps
jl
inc
add
or
cmp
add
mov
push
mov
jbe
jp
scas
outsb
mov
xchg
add
and
cltd
ror
mov
and
adc
in
add
sarb
loopne
xchg
pop
add
and
dec
sbb
daa
sbbl
or
rcrb
in
xor
mov
movsl
push
sub
adc
xlat
decl
mov
int3
pop
lds
add
insl
cmp
push
lcall
hlt
rcl
add
in
addb
sti
lcall
test
add
add
xchg
inc
sbb
call
cld
lcall
sbb
or
stos
pop
and
add
jb
cmpsl
sub
lock
fadds
ljmp
cmpsb
add
inc
jge
add
mov
ret
add
in
dec
in
out
add
dec
sub
cmp
in
movsb
cmp
pop
inc
jmp
add
mov
out
lock
lods
lahf
push
out
fwait
stos
push
push
fmul
xchg
dec
int3
out
or
enter
push
ret
add
sbb
dec
leave
add
and
adc
or
mov
sbb
mov
pop
xor
mov
add
jecxz
out
into
dec
mov
out
add
jne
fldl
clc
in
add
xor
std
or
add
xchg
pop
enter
stc
fnstcw
jg
pop
cmp
fidivrs
sti
inc
sub
pop
shrl
mov
add
scas
loop
mov
fimuls
mov
pop
shlb
fdivl
mov
dec
pop
mov
rorb
shrb
mov
pop
test
lods
in
loopne
add
fcoml
rclb
jbe
pop
sti
or
and
inc
stos
pop
call
xor
scas
jb
pop
xchg
mov
arpl
mov
add
hlt
addr16
add
dec
scas
nop
xchg
push
cmp
sbb
adc
add
test
ljmp
sub
mov
or
cmpsl
push
fistpl
dec
add
mov
mov
nop
cmpsb
pop
push
nop
fiaddl
adc
inc
jbe
push
orb
pushf
call
xchg
mov
and
cli
ret
add
cmc
sub
cmp
daa
mov
xlat
push
test
lret
cmc
ljmp
lock
cmp
dec
or
int
xchg
repz
xor
pop
lret
les
adc
mov
jno
ja
jae
add
aam
push
ss
xor
lock
push
ljmp
xor
js
add
ds
fadds
je
pop
pushl
push
dec
fsubl
add
pushf
lea
add
push
mov
add
inc
inc
jge
inc
jg
add
inc
add
push
push
add
mov
add
mov
sub
push
flds
das
push
insb
sbb
mov
es
push
addb
rep
jmp
test
mov
and
jg
dec
xchg
lock
jns
pop
pop
loope
adc
push
pop
out
es
jo
add
sbb
add
mov
or
sbb
cmp
arpl
add
js
dec
add
push
and
insl
subl
push
sub
add
leave
mov
add
xorb
add
call
xchg
adc
mov
inc
xchg
cld
sbb
movsb
aas
jo
add
xor
orb
pop
add
and
les
xor
in
add
pop
mov
push
clc
add
xor
dec
jmp
mov
jnp
rep
push
stos
xchg
jp
add
sbb
mov
rorb
adc
fwait
addr16
inc
clc
jne
ja
jno
mov
xor
add
add
push
lock
add
and
adc
loopne
add
and
fisttpll
int3
sub
pop
cltd
add
ss
sub
jecxz
lock
je
add
xchg
cli
push
fcoml
rolb
jb
add
jns
push
daa
inc
fidivs
add
inc
push
add
add
lock
fbstp
aas
fisttpl
add
mov
sub
loopne
pusha
in
push
add
push
mov
rcl
cmp
je
sub
pop
or
ds
push
rcr
sub
sub
add
adcb
mov
add
cwtl
nop
or
xchg
add
adc
movsb
scas
int
aas
sbb
pop
data16
mov
sub
insl
xchg
add
sub
mov
add
inc
add
add
adc
xor
pop
lea
fcomp
push
add
mov
into
jmp
lock
lods
push
pusha
or
psrlq
jg
mov
adc
xchg
pop
mov
sub
call
cmp
test
xchg
push
lahf
sbb
adc
add
cmp
jb
or
add
ljmp
das
sbb
or
cmpsb
ja
add
cmp
push
shl
push
dec
add
cmp
dec
xchg
call
in
adc
pop
pop
mov
add
jl
loopne
pop
mov
adc
dec
bound
xlat
pop
aas
adc
stos
add
movsb
add
pop
xor
jo
sbbb
inc
daa
push
cmp
add
bound
xchg
sbbb
test
add
cli
mov
jo
add
mov
ljmp
xchg
ficoml
cmp
loopne
add
hlt
jge
or
adc
cmp
shlb
dec
sub
add
out
pop
rclb
sbb
andb
pop
lds
jl
dec
lret
add
xchg
mov
adc
movb
mov
inc
cmp
adc
push
add
cmc
sub
xchg
ret
push
push
add
andl
jns
xor
or
jmp
mov
add
xor
pop
mov
rcrl
and
add
push
push
clc
push
addb
cmp
add
or
je
js
dec
lods
aaa
add
sbb
inc
add
sub
or
out
sbb
jbe
pop
je
xor
cmp
cmc
jne
add
rol
sub
fsubrs
mov
inc
test
fwait
xchg
add
adc
pop
cmp
add
add
xor
mov
pop
iret
xchg
push
add
xor
lahf
cmpsl
add
cmp
xorb
mov
push
xchg
ret
out
xor
mov
add
inc
aaa
lods
addb
cmp
das
xor
add
pop
and
inc
in
fst
test
add
mov
add
test
imul
add
add
push
or
jns
push
les
mov
lgs
in
add
pop
mov
cs
pop
pop
adc
sub
jne
and
cld
add
pop
xor
add
jne
fincstp
adc
popf
or
add
or
shll
add
dec
jo
add
lahf
sbb
sbb
mov
add
shl
movsl
mov
in
cltd
xor
pop
loop
push
daa
or
pushf
sub
push
mul
sbb
bswap
pop
push
ja
in
or
mov
cltd
mov
imul
sbb
adc
test
cmpsl
in
mov
clc
ljmp
sbb
mov
sbb
dec
pop
ds
mov
arpl
sbb
push
mov
cmpsb
nop
add
add
loopne
add
mov
mov
or
cwtl
in
adcb
mov
test
cltd
pop
inc
inc
xchg
and
push
adc
jl
rorb
xchg
fistps
test
xchg
jb
in
fwait
jmp
sahf
out
cmp
sbb
inc
adc
jb
add
movsb
iret
lea
push
or
and
call
adc
mov
xchg
jecxz
pushf
mov
adc
test
mov
mov
jge
cmp
lret
add
in
jo
add
push
jo
mov
test
jg
xor
cmp
mov
add
test
stos
push
rorl
mov
ljmp
cmpsl
cmp
add
and
adc
pop
ss
add
pusha
clc
dec
pop
or
add
aas
push
lret
stc
pop
cli
ret
xor
jno
pusha
cmp
jo
movl
cmp
and
and
and
inc
cs
adc
mull
icebp
or
cmp
cmp
nop
pop
mov
js
loop
sahf
add
cmpsb
sub
mov
dec
add
es
pop
aam
imul
andb
or
dec
or
ss
jo
lds
cmp
js
in
int
add
xchg
scas
mov
pop
out
push
lods
scas
push
add
jo
push
shll
mov
push
mov
call
pop
addr16
lret
or
mov
jecxz
xchg
add
in
out
sbb
das
call
arpl
add
orl
add
jae
pswapd
ficoms
js
inc
iret
jmp
jle
cwtl
dec
mov
sahf
roll
mov
das
dec
add
mov
addr16
and
mov
jns
and
movb
dec
xlat
xchg
hlt
jne
sub
mov
push
cmp
jge
cmp
ret
popf
add
pop
sbb
add
mov
adc
push
add
arpl
sub
or
adc
je
lcall
xchg
add
in
mov
adc
add
test
ret
out
add
hlt
in
xor
mov
mov
insb
scas
popf
or
mov
sbb
dec
addb
repnz
adc
rolw
lock
xchg
movsb
pop
jo
add
test
and
loopne
add
xchg
sub
mov
add
push
hlt
lods
loopne
sub
add
int3
out
jo
jl
rolb
jmp
imul
nop
das
ret
ds
add
sti
pop
sub
jmp
jnp
or
fs
das
xchg
mov
xor
push
pushf
add
and
enter
lods
adcb
andb
arpl
push
inc
andb
mov
repnz
push
not
push
insl
add
std
add
subl
lcall
pusha
jb
jo
add
inc
lods
dec
mov
xchg
into
pop
ret
cmp
add
mov
push
add
inc
mov
and
xchg
cmp
fiadds
fs
int
sbbl
stos
add
rcl
mov
add
cs
divl
arpl
movsb
mov
xchg
and
add
cmp
sbbb
pop
xchg
or
aas
and
xchg
add
mov
pop
cmp
jg
pop
adc
faddl
sbb
mov
mov
daa
pop
push
adc
push
shl
add
testb
sti
out
filds
jo
iret
pop
sbb
rclb
add
test
outsl
ja
aas
add
sub
inc
neg
lret
sbb
scas
mov
dec
aad
loopne
jae
in
dec
test
mov
hlt
scas
rcrb
lock
decb
jb,pt
mov
add
xor
mov
fisttps
add
int3
sbb
sub
mov
add
push
lahf
lcall
repnz
fwait
pop
mov
adc
ds
add
mov
lds
fcmovnb
andb
add
gs
inc
es
cmp
das
push
sbb
adc
mulb
add
lock
lsl
xchg
pop
lret
insl
push
add
or
in
xchg
jae
aad
jns
jne
add
hlt
xlat
nop
les
dec
add
jo
mov
js
pop
stos
push
das
mov
inc
and
push
cmpsb
and
arpl
add
push
cld
filds
nop
jbe
push
aam
mov
cmpsl
clc
jge
xchg
repnz
pop
and
ret
jnp
inc
pop
push
fdivl
dec
xor
into
add
pop
pop
das
dec
or
hlt
adc
fsts
add
xchg
dec
roll
mov
mov
inc
push
adc
mov
jle
repz
das
or
cld
jmp
cmp
arpl
sbb
sahf
aad
enter
test
outsb
cmpsb
xor
mov
jne
cmp
xlat
add
repnz
ljmp
mov
dec
out
add
stos
flds
pop
clc
mov
add
jb
add
adc
cli
cmp
push
ds
popa
jne
mov
rep
sub
or
inc
loopne
push
jmp
sbb
cmpsl
fstl
push
je
and
cs
test
add
add
out
sbb
lea
rolb
push
aam
jmp
aas
lret
add
jnp
or
repz
mov
cli
mov
dec
sbb
test
mov
push
or
and
adc
shll
add
or
addb
add
ds
add
sbb
es
add
mov
dec
add
cmp
sti
add
pusha
push
jbe
clc
adc
sbb
dec
ret
rcl
adc
xchg
jnp
jae
jne
add
fwait
adc
jb
mov
adc
cmp
pop
and
xchg
add
dec
dec
mov
test
lods
push
dec
pop
repnz
and
inc
adc
adc
aad
xchg
adc
or
push
jne
adc
jb
adc
lahf
add
shlb
xor
lcall
and
ret
xor
mov
mov
and
in
jp
sbb
pop
pop
add
daa
xor
in
add
lock
dec
call
add
push
add
adc
shll
ror
pop
bound
cli
xchg
jo
sbb
les
int3
and
insl
inc
or
add
add
adc
sub
add
inc
xor
sub
lock
aam
add
cmp
int3
gs
and
jb
add
mov
jbe
popa
rorl
movb
or
pop
add
sbb
out
jmp
loop
ret
dec
adc
insb
and
add
xchg
inc
mov
jmp
loopne
sub
or
cmp
mov
outsl
push
dec
add
cltd
add
add
add
faddl
mov
dec
add
add
dec
cmp
rolb
dec
sbbl
adc
out
or
test
lahf
pop
add
insw
jbe
add
jne
outsb
test
rorb
cmp
add
jno
inc
add
xor
adc
in
xchg
in
lock
mov
dec
idivb
adc
jmp
int
push
jns
leave
loope
mov
cmp
sub
xchg
cmp
test
std
ja
dec
add
add
call
pop
enter
push
add
lea
in
add
dec
inc
out
mov
add
adc
or
outsl
hlt
push
fsubr
flds
sbb
push
aad
add
daa
mov
js
mov
adc
mov
cmp
lods
test
adc
clc
cmp
das
sub
add
or
push
sub
mov
flds
sub
lock
cld
dec
mov
push
in
mov
push
pop
call
nop
in
pop
cld
pop
repz
mov
rolb
filds
dec
inc
xchg
inc
stos
shlb
mov
sbb
push
nop
dec
sbb
cmp
mov
and
hlt
jmp
add
inc
add
cli
or
push
jmp
add
ficoms
mov
int
xchg
cmp
sbb
cmpl
sbb
in
add
sahf
movhps
jb
adc
and
or
clc
pop
push
je
inc
mov
fldl
mov
or
mov
loope
mov
jnp
aam
add
mov
or
xor
aam
xor
out
add
or
fdivrs
aad
and
jo
incl
fmuls
lahf
cmp
sti
into
daa
outsl
insl
add
scas
inc
or
ret
add
mov
sub
filds
add
cmp
xchg
mov
test
add
xchg
stc
loopne
xor
add
inc
push
ja
js
loopne
add
pop
aad
inc
adc
loopne
pusha
adcl
mov
or
mov
lock
loop
add
pop
add
repz
sbb
out
mov
ja
and
sub
xchg
ljmp
sti
lret
pusha
pop
sub
or
addb
mov
mov
test
popl
add
lret
cmp
into
add
lods
push
add
push
ss
sti
xorl
fldl
cmc
pop
mov
jnp
clc
mulb
add
stos
andb
sbb
cmc
add
icebp
sub
in
cmp
xchg
inc
jp
pop
adc
loopne
pop
les
pop
mov
in
shrb
add
pop
in
iret
daa
xorl
leave
inc
add
or
add
lds
loopne
pop
sar
add
push
pop
dec
add
aam
pusha
popa
in
inc
jo
add
loope
shlb
adc
nop
imul
inc
adc
popf
bnd
add
movsl
push
cmp
add
add
loop
mov
jmp
add
push
add
adc
repz
popf
cmpsl
inc
clc
add
adc
push
xor
mov
sbb
and
andb
dec
mov
add
negl
pop
add
lret
jo
add
xchg
push
sbb
bound
out
pop
ss
arpl
adc
fsub
push
outsb
cmp
ret
es
rolb
addb
cmpsl
push
jecxz
js
push
pop
push
and
rep
test
shlb
aam
sti
xchg
lret
mov
lods
sub
fstpt
sub
mul
xchg
add
push
sub
dec
cmp
pop
fsubp
sahf
mov
and
jg
addb
add
fsubrs
dec
add
sub
xor
mov
call
fwait
push
sahf
leave
sbb
lahf
xchg
dec
jbe
fcompl
ffreep
push
dec
les
jmp
xor
mov
sub
or
dec
add
cmc
enter
dec
scas
mov
mov
cmpsl
add
dec
mov
js
xor
or
dec
add
ds
add
popf
jecxz
push
push
cmc
aas
or
add
loop
jne
popf
int3
jl
add
fcoms
push
and
lock
je
scas
xor
sbb
cmp
dec
cld
sub
jnp
add
xchg
decb
and
lock
incl
mov
jge
jno
cld
xchg
add
scas
cld
loopne
add
les
cmp
sbb
adc
add
and
ret
hlt
sub
and
test
leave
lret
add
push
lea
scas
addb
pop
mov
dec
out
bound
mov
xchg
dec
jno
cmp
and
sub
dec
jnp
cli
pop
add
scas
loop
test
js
cmovnp
mov
fucomip
ja
xchg
fcom
jno
bound
fldl
rol
ret
jnp
leave
add
or
dec
add
icebp
insb
dec
lahf
ret
fld
out
enter
call
lods
ds
cld
fdivl
xor
loopne
inc
stc
sbb
mov
movsb
je
add
add
add
and
pop
sbb
ja
aaa
mov
add
jle
cltd
clc
loope
sub
jae
adc
mov
add
test
xchg
add
addr16
dec
adc
mov
loopne
or
popa
cmp
and
mov
cmc
push
repnz
push
add
test
add
icebp
mov
add
mov
int
adc
les
popf
loope
call
add
push
fsubrs
adc
mov
add
add
jne
out
xor
rolb
dec
sub
pop
add
subb
or
aas
add
popf
mov
jg
xor
pop
cld
push
or
pop
ficomps
mov
test
add
ss
adc
add
lock
adc
fldt
sbb
add
subl
add
or
push
adc
pop
sbb
adc
daa
fstpl
inc
xchg
jne
push
add
sbb
sub
mov
push
adc
jmp
mov
and
xchg
leave
pop
loopne
push
add
or
int3
divb
sbb
rorb
pusha
add
push
and
aam
or
das
add
call
or
or
adc
sbb
and
xor
inc
push
aas
pusha
jo
andb
nop
xchg
add
dec
add
pop
add
loopne
sbb
xorb
je
jbe
js
jp
jl
jle
jle
sbb
push
adc
loopne
push
mov
push
mov
cmp
jb
pop
push
mov
add
inc
mov
inc
inc
add
in
jp
pop
sub
incb
mov
jmp
jge
add
shll
stos
jb
add
inc
adc
into
xor
adc
std
add
iret
and
lock
xchg
leave
pop
inc
push
cmp
xchg
arpl
ds
add
mov
lods
into
andl
sbb
mov
mov
stos
add
addl
add
rep
mov
inc
out
sbb
jbe
mov
or
mov
je
add
inc
inc
cmp
add
mov
add
fincstp
push
inc
xchg
or
xchg
jne
add
decb
sbb
sub
shl
add
andl
and
sub
xor
orb
pop
pop
ret
cmp
out
rolb
and
add
jne
out
outsl
push
pop
pushf
push
and
out
adc
add
and
add
add
aam
pop
add
aaa
adc
adc
jmp
lret
sub
xorl
iret
leave
inc
sbb
inc
dec
mov
pop
or
jno
or
cwtl
add
jge
aas
push
std
popf
inc
add
rorb
add
xchg
adc
xorb
mov
adc
add
xchg
sarb
mov
fidivs
and
add
int3
loopne
and
sub
cmp
inc
out
jb
mov
jo
add
pop
js
jge
add
mov
mov
adc
icebp
aaa
popl
adc
loope
jmp
pusha
xchg
test
cs
add
xor
sahf
pop
stc
add
adc
lret
icebp
sbb
sub
push
inc
fs
mov
enter
add
roll
jmp
les
xor
addb
rcr
xchg
cld
iret
adc
jmp
add
and
sbb
or
clc
inc
cmp
cmp
cs
fstpt
jns
add
cli
mov
mov
sbb
pop
call
lcall
mov
sbbl
rcrb
loop
decb
pop
mov
ret
shl
add
jb
xchg
mov
push
lea
push
push
add
pusha
push
ljmp
xorb
test
nop
adc
rolb
pusha
add
cvtdq2ps
fwait
jmp
sbb
rcll
pop
in
outsb
mov
ds
andb
xchg
lds
push
cwtl
push
inc
inc
add
outsb
out
and
pop
push
or
add
xchg
pop
dec
cli
add
rcl
pop
daa
jns
add
xor
add
int
sub
sbb
inc
ss
push
push
pusha
cwtl
sub
add
sbb
adc
in
add
push
repz
push
xchg
or
cltd
fcompl
inc
or
insb
xor
sbb
pop
cmpsb
push
push
lods
pop
into
scas
faddl
xor
inc
jmp
jne
aas
sub
pop
sbb
bnd
subl
cmpb
add
dec
mov
mov
mov
mov
gs
add
add
sub
push
pop
push
xor
ja
cmp
pop
mov
dec
pop
lret
inc
inc
jl
jb
hlt
adc
adc
push
stos
call
sub
out
mov
mov
loop
cmovs
aam
lods
pop
andl
data16
or
pop
sub
pop
sbb
aas
test
gs
rolb
loop
mov
adc
jne
mov
inc
add
dec
pop
pop
fcoml
cmp
inc
lds
in
aad
test
ror
add
push
mov
in
mov
add
jmp
push
add
xchg
push
jae
xor
add
push
cmpsl
sub
and
jmp
xchg
dec
jae
lods
stc
mov
inc
or
shr
add
jmp
inc
cld
jne
mov
dec
or
add
enter
xor
and
int3
jecxz
addr16
push
or
cmp
push
jo
nop
roll
pop
std
ret
pop
xor
jp
add
int
jo
rcr
ljmp
shld
fisubl
jp
push
add
xlat
test
lret
add
and
inc
push
nop
addl
lock
cli
add
incl
add
out
pusha
push
outsl
std
add
add
lds
or
inc
das
cmp
xchg
xor
clc
add
jecxz
scas
push
mov
cmp
iret
jns
xchg
inc
loopne
add
rcrl
out
and
adc
and
pusha
jo
xchg
add
sub
or
movsl
insb
inc
fsubrp
add
mov
pop
in
xor
add
push
sbb
outsb
fadds
dec
rolb
sbb
dec
inc
add
mov
aas
jmp
lods
xchg
dec
add
mov
pop
add
mov
cmp
xchg
pop
pop
adc
sarb
ret
xchg
jae
add
add
mov
loop
dec
and
jnp
xchg
test
mov
add
loopne
into
cld
imul
outsb
sub
addb
std
lcall
insb
dec
and
les
sbb
sub
or
lret
add
pop
sbb
arpl
loopne
jae
call
sub
add
sbb
dec
into
movsb
add
dec
enter
sub
cmp
addr16
sub
fs
xchg
notb
push
push
inc
mov
ljmp
pop
mov
adc
fldl
adc
sar
push
mov
add
pusha
pushf
pop
or
pop
or
push
leave
sbb
cmp
push
cwtl
adc
or
mov
dec
rorl
movl
mov
add
inc
test
insb
testl
adc
pop
or
add
mov
sbbl
add
sbb
push
mov
jp
call
pushf
adc
xor
test
inc
push
clc
xchg
xor
inc
sbb
rcl
fcomps
in
or
sbb
inc
pop
cwtl
arpl
or
cmp
mov
loope
sbb
sbb
sbb
push
inc
popa
and
and
jo
aas
call
dec
push
sbb
jl
mov
movsb
add
je
jecxz
bound
cld
test
cmp
jmp
nop
xchg
arpl
and
push
sbbl
loop
jg
inc
ss
mov
add
mov
mov
and
mov
mov
mov
or
pop
stc
ret
lds
leave
jl
call
and
cmove
arpl
push
int
jns
sbb
jmp
repnz
idivl
loopne
enter
test
or
sbb
std
sub
fcomps
add
out
sub
rorb
mov
mov
inc
mov
fs
or
xor
out
mov
dec
mov
mov
shlb
jo
dec
adc
and
pop
add
mov
loope
test
adcb
or
pop
pop
or
scas
and
pop
inc
mov
sub
or
inc
add
fists
xor
or
pushf
xchg
insb
add
and
in
ss
in
or
sbb
adc
or
fistps
adc
and
dec
test
add
lock
les
sahf
call
and
and
push
add
xor
add
mov
push
lea
add
mov
cmp
adc
add
mov
xor
dec
rclb
outsb
je
insl
rcrb
loop
pop
out
addl
loopne
xor
xchg
inc
push
inc
sbb
xor
xor
ss
cmpb
inc
add
inc
inc
inc
push
and
add
or
mov
or
test
xor
stos
adc
sbb
jo
sbbb
push
ljmp
aad
clc
cld
add
jo
xor
adc
subl
movsb
dec
sbbb
and
mov
int3
dec
add
xchg
fsubl
in
in
hlt
adc
add
adc
sbb
ljmp
mov
dec
sti
push
clc
pop
mov
je
cmp
xchg
and
jle
or
sti
int3
sti
aam
fdivr
in
scas
cli
push
dec
add
enter
jb
cmp
push
push
and
fmuls
jno
punpckhdq
xchg
mov
movsb
add
inc
pusha
adc
outsb
icebp
aam
mov
pop
addr16
xor
sbb
mov
inc
dec
dec
dec
push
dec
dec
dec
push
add
push
push
push
add
push
lcall
dec
je
add
arpl
push
rcl
add
add
ja
js
jbe
and
imul
jmp
and
push
divb
inc
pop
cwtl
das
mov
add
iret
add
shlb
add
push
cmp
adc
pop
jo
add
sbb
cwtl
loopne
add
fadds
pop
adcl
rolb
or
je
pop
loopne
add
mov
andb
jae
jno
ja
add
in
inc
mov
cmp
int3
dec
mov
jmp
je
fsubrl
add
cmp
test
daa
add
pop
mov
inc
add
arpl
push
pop
addr16
adc
add
mov
cmp
and
cs
pop
insl
sub
add
or
or
mov
add
ret
push
sub
xchg
mov
dec
popw
sbb
ret
insb
push
sbb
xchg
add
and
cltd
sbb
xor
mov
sarl
dec
ja
sub
mov
mov
sbb
cmp
pop
fmuls
sbb
add
outsl
cs
ja
push
arpl
enter
mov
mov
shld
mov
jno
jge
mov
inc
sbb
adc
pop
sbb
call
xor
pause
sbb
int3
and
or
add
xchg
and
dec
rclb
nop
and
or
lcall
das
icebp
fisubrs
adc
add
and
add
cwtl
test
or
pop
lahf
fmull
test
fadd
cmp
inc
movsl
enter
jne
pop
or
dec
roll
loopne
or
add
rorl
inc
mov
mov
mov
jp
or
add
lods
sbb
sbb
xor
cmp
jo
loopne
pop
popf
add
js
or
inc
add
sbbb
add
js
add
inc
xor
add
loop
in
add
repnz
push
inc
data16
in
jl
repnz
adc
rorb
add
and
xor
cmp
push
stos
push
rcrb
cmp
movl
sbb
cmp
pusha
dec
int3
push
or
movsb
sbb
cmp
add
and
add
clc
or
push
mov
mov
cli
pushf
jbe
add
dec
sbb
and
std
movsb
jl
sbb
push
fadds
mov
sarb
jo
add
pop
or
or
or
testb
movups
test
push
add
roll
or
mov
ret
ret
sbbl
mov
sarb
cmp
enter
add
ss
sbb
add
loope
nop
cmp
xor
sub
xor
cmpsl
clc
flds
fidivrl
and
fiadds
inc
fmuls
loope
rcl
nop
ucomiss
test
js
inc
rolb
mov
and
inc
jl
mov
mov
call
aaa
push
pop
shlb
cmp
mov
sub
xorb
xchg
xor
lcall
loopne
pop
out
sub
add
bnd
or
daa
add
and
sbb
or
lods
cmp
movsb
xchg
popa
mov
mov
cltd
inc
pusha
push
adc
sbbl
leave
jl
sub
mov
mov
add
xor
lods
pushf
ds
xor
sbb
jl
adc
stc
and
or
sub
xor
or
add
cmp
lea
xacquire
and
leave
adc
imul
jmp
add
or
insb
dec
inc
push
xchg
fs
orb
or
bound
test
add
xchg
push
cwtl
add
add
xchg
pop
sub
inc
mov
pusha
mov
hlt
stc
cmp
loopne
mov
add
imul
nop
adc
add
inc
xchg
les
xorl
mov
dec
popl
fsubs
add
or
imul
jl
inc
js
call
ds
push
mov
mov
fidivl
int3
dec
mov
mov
cltd
aam
fsubl
aaa
xor
out
popa
subl
and
mov
call
add
cmp
add
add
rcll
xchg
lock
and
adc
ss
icebp
aam
dec
adc
in
sbb
adc
add
add
jl
inc
int
pop
inc
ret
mov
xor
and
decb
sarb
loopne
jns
and
in
dec
lock
mov
add
cmp
add
or
js
nop
add
mov
adc
cmp
add
mov
mov
add
adc
jp
mov
mov
enter
ljmp
push
ja
dec
andb
inc
pop
outsb
jns
cwtl
out
test
mov
mov
mov
sub
sbb
cld
adc
and
sbb
stos
jl
ds
cmp
add
adc
test
lcall
int3
aas
fsubl
enter
xor
dec
inc
cmp
push
pusha
stos
inc
adc
test
loopne
movsb
mulb
sbb
cmp
xchg
inc
push
mov
adc
orb
xchg
lcall
lock
jbe
gs
sub
cltd
push
adc
add
xchg
mov
cmpsb
stc
mov
hlt
das
bswap
lret
adc
es
inc
outsb
insb
mov
pop
sahf
xchg
lods
fistpll
jb
int3
add
jno
add
xchg
inc
and
insb
or
mov
mov
aaa
add
loope
rol
adc
adc
mov
or
lea
fiaddl
mulb
or
add
sbb
sub
push
cmpsl
add
data16
test
pop
xchg
pop
jg
lods
push
lret
or
ror
in
sbb
cmp
loopne,pn
push
dec
push
xchg
out
stos
out
out
aam
out
mov
pop
push
rorb
and
testl
std
xchg
hlt
pushf
dec
and
scas
mov
xor
xor
gs
outsb
pop
insb
add
xor
fs
aam
add
je
jne
push
into
add
push
push
add
jbe
inc
mov
jb
mov
push
push
fnsave
mov
ja
dec
add
fcompl
inc
jle
mov
add
and
jp
xor
hlt
jne
mov
in
mov
push
inc
xchg
outsl
call
aad
sbb
sbb
add
in
adc
push
imul
popa
adcl
insb
sbb
sub
or
cs
and
je
fisubrl
inc
loope
or
jo,pt
or
xchg
je
imul
inc
and
inc
pusha
jmp
add
and
push
xchg
mov
loop
outsw
inc
loopne
push
jb
jnp
jno
into
push
jae
cwtl
addl
stc
add
dec
adc
inc
imul
insl
push
push
pop
push
dec
and
jb
cmpsb
in
push
shrl
add
xor
add
push
sub
mov
dec
xor
pushf
inc
xor
cli
sub
rcrl
push
mov
pop
outsb
push
inc
cmp
inc
sbb
movsb
je
adc
sbb
outsl
xchg
inc
adc
rclb
jo
mov
or
pop
push
sbb
stos
add
push
mov
dec
cwtl
dec
add
mov
inc
cwtl
mov
mov
imul
jo
add
jp
cmp
xchg
aam
dec
add
jne
jb
lret
pop
xor
inc
mov
and
xor
outsb
addr16
dec
lcall
inc
outsl
js
cmpsb
add
lahf
dec
jge
xchg
nop
jnp
sub
imul
add
push
inc
xchg
dec
add
add
sub
cmpsb
outsb
jb
pop
adc
add
mov
sub
jo
cmp
mov
les
jne
add
push
sub
nop
add
dec
adc
in
adc
subb
push
pushf
daa
cmp
mov
push
lcall
sbb
ficoml
rorb
mov
sub
addl
inc
fisubrs
xchg
add
jne
dec
push
xchg
movsb
or
clc
lcall
outsl
popaw
ret
int
in
jmp
xchg
imul
push
adc
cs
andb
add
andb
jns
xor
push
pop
push
aam
ja
movntq
orb
lods
add
inc
jne
xchg
scas
lods
jp
mov
dec
mov
add
repnz
mov
cwtl
pop
mov
push
jp
stos
sbb
lcall
ja
jae
int
cmpsb
add
pop
push
ss
leave
pop
lock
aad
push
jns
loopne
mov
sbb
xchg
xor
jmp
sarl
add
mov
in
dec
sub
xchg
cmpb
pop
push
mov
pop
mov
jl
test
push
add
andl
hlt
or
test
jmp
add
inc
es
inc
das
mov
imul
mov
jne
jl
pop
add
subb
pop
cmp
push
mov
sub
jmp
movhps
stos
loop
outsb
lods
mov
inc
xchg
and
sub
divb
and
dec
pop
inc
push
add
insb
fisttpl
dec
add
movsb
or
xchg
and
dec
les
add
fstl
xor
mov
mov
mov
lods
inc
loopne
sbb
addr16
sub
xchg
stos
mov
inc
dec
inc
cmp
and
add
inc
mov
add
push
cli
push
sub
mov
inc
into
out
push
sub
add
push
mov
push
and
jo
or
add
dec
jno
lods
adc
addb
imul
mov
dec
je
push
add
dec
lods
dec
push
xchg
pop
roll
mov
fwait
jbe
push
dec
add
sti
pop
or
test
cmc
int
pop
inc
aaa
add
pop
xchg
xor
bound
cmpsl
in
cmp
add
adc
call
and
aas
dec
and
enter
adc
and
loopne
loope
jo
and
or
add
jp
cmp
pop
inc
push
inc
clc
stos
or
mov
push
cmovl
sbbl
xlat
mov
push
clc
xor
add
mov
cld
inc
lcall
jns
mov
and
cli
mov
mov
and
push
xchg
je
mov
add
lcall
or
and
cmp
je
ja
imul
out
adc
mov
add
inc
inc
sarl
add
sbb
pop
xlat
jl
movsb
sbb
sbb
adc
je
inc
xor
adc
out
lods
repz
nop
jbe
or
or
xchg
ret
stos
sbb
dec
outsb
add
addr16
in
push
add
xor
xor
sub
cmp
mov
dec
outsb
add
add
xor
sub
cmp
cmp
inc
cmpsl
inc
dec
out
dec
je
jbe
js
jp
jl
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
add
loope
xor
leave
adc
push
sbb
and
cmp
jb
je
jbe
js
jp
jl
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
add
clc
push
xor
je
add
js
jp
jl
cmp
cmp
add
sbb
xor
popf
aad
pop
sbb
call
pop
leave
imul
aaa
sbb
cmp
lret
push
fstpl
add
xchg
cmp
daa
add
push
dec
clc
push
pop
je
jbe
js
jp
jl
jle
jl
jle
jle
jle
jle
jle
jle
jle
add
xchg
cmp
pop
inc
push
xor
cmpl
push
fimull
movb
cmp
add
xchg
cmpsl
fld
loopne
add
in
pop
cmp
add
sahf
dec
push
push
lahf
pop
pop
je
jbe
js
pusha
fwait
mov
xchg
stos
popa
push
add
sbb
sub
xor
sub
icebp
mov
ret
in
mov
inc
and
xor
jb
je
jbe
js
add
jl
jle
xchg
mov
dec
rcrl
and
out
add
push
and
es
cmp
mov
pop
pcmpgtb
add
lcall
sbb
xor
popf
cmp
pusha
add
xchg
pop
pushf
call
xor
daa
adc
cmp
cmpsl
add
mov
lock
mov
insl
xor
leave
mov
mov
and
das
jbe
js
dec
mov
cmp
mov
push
fwait
aaa
mov
xlat
mov
jns
add
repz
cmp
in
call
icebp
inc
ljmp
mov
rolb
cs
add
in
mov
nop
lcall
or
xor
int3
adc
or
add
add
bsr
xor
lret
xor
in
out
pop
add
js
jp
jl
add
xor
popf
sub
jp
pop
inc
jl
fiaddl
xchg
mov
cmp
xlat
cmp
add
stos
inc
daa
pop
inc
ja
add
jnp
xchg
out
cltd
inc
lds
sahf
iret
lahf
icebp
add
loope
ss
pop
push
shrl
fldcw
icebp
cwtl
adc
pop
fildll
repz
add
sub
cmp
cmp
push
dec
aaa
subl
xor
loopne
pop
xchg
les
sbb
push
xchg
sahf
stos
adc
inc
cmp
pop
cmp
cmp
aas
cltd
sub
inc
cmp
addb
mov
add
or
cmp
outsb
xor
adc
xor
ss
xchg
sbb
add
inc
mov
cmpsl
jae
adc
scas
jle
jle
iret
xor
shl
cmc
in
lock
push
cmova
xor
cmp
dec
in
call
jae
ja
jge
in
sarl
mov
mov
fnstenv
icebp
out
lock
cmp
in
call
add
hlt
inc
clc
jno
jge
xchg
shll
pop
jle
cmp
cmp
sub
pop
add
aas
jbe
mov
xchg
in
mov
xchg
pop
jle
add
push
add
or
mov
sbb
and
sub
js
jp
jl
jle
js
jp
jl
jle
jle
add
lcall
lahf
mov
js
jp
jl
jle
jle
add
ret
add
or
mov
subb
xor
cmp
jb
je
jbe
js
jp
add
mov
ja
lret
iret
fcmove
loop
ljmp
pusha
xchg
add
xor
add
dec
out
in
pop
lret
push
lods
or
lock
cmp
add
repnz
inc
lahf
dec
pop
push
jmp
and
ljmp
add
mov
jmp
sbb
in
stc
hlt
clc
cld
lock
add
or
adc
sbb
and
sub
xor
cmp
jb
je
jbe
pop
pop
lcall
jl
test
sbb
sub
int3
cmp
cmp
cmp
hlt
and
and
sbb
lock
xor
sbb
repz
orl
fsubrs
popa
add
test
mov
pushf
cld
jb
je
jbe
js
jp
jl
jle
jle
jle
cmp
or
mov
pop
cmp
cmp
cmpsb
sub
mov
push
jle
cwtl
mov
jle
jle
add
xchg
in
shr
lock
call
push
ss
sbb
cmove
dec
loop
xchg
push
icebp
pop
popa
fwait
loope
jmp
pushf
stc
mov
rcrl
pavgb
leave
mov
out
cmp
add
out
pop
aaa
add
or
inc
or
adc
inc
xchg
xor
xchg
pop
cmpsl
pusha
fs
out
out
out
out
out
out
in
xchg
mov
repz
repz
fsub
cld
pop
je
cmp
mov
adc
add
and
push
ret
pop
shll
fs
repz
js
jl
mov
lods
repz
mov
dec
es
nop
sub
xor
jl
adc
adc
add
fstps
and
and
sbb
stc
sub
xor
push
lahf
je
js
jl
andb
mov
jle
jle
jle
jle
jle
jle
jle
add
mov
fsubs
iret
pop
and
add
inc
xorb
push
adc
jo
je
js
jl
orb
mov
mov
nop
repnz
pop
in
call
cmp
push
sub
test
inc
xor
stos
cmp
or
popf
cmpb
notl
nop
jecxz
repz
repz
repnz
loopne
fsubr
xchg
fimull
fdivrl
clc
add
and
loope
imul
add
dec
and
and
add
sarl
cwtl
repz
in
call
push
dec
mov
aas
enter
lock
cmp
cld
leave
test
out
or
or
adc
mov
aas
dec
and
xorb
pop
xchg
insb
mov
xchg
test
outsb
in
shrb
pop
sub
idivl
or
sahf
adc
sbb
xor
cmp
pop
hlt
pusha
lcall
lret
xchg
js
daa
xchg
xchg
mov
orl
gs
int
popa
iret
push
and
jns
sbb
cmp
push
push
pop
add
xor
cmp
loop
aas
stos
xor
cmp
cmp
xchg
sahf
xchg
push
lcall
lcall
repnz
call
daa
cmp
inc
mov
cmp
sbb
lcall
rcll
xor
xchg
mov
or
inc
je
jbe
add
push
lcall
add
enter
push
call
lock
hlt
jno
pop
jne
jns
push
or
lea
cltd
iret
popf
rolb
pop
add
xor
inc
xor
nop
add
dec
add
cmp
add
call
sub
ret
and
add
push
xchg
dec
mov
inc
nop
popf
add
minps
dec
cmp
call
mov
jl
add
and
rcrb
dec
add
pop
inc
pop
outsl
xchg
les
jnp
lea
pushl
add
jbe
lock
xchg
add
aaa
mov
in
call
push
negl
cmp
daa
insl
dec
mov
xlat
ret
adc
xchg
xchg
mov
into
xchg
ret
adc
pop
push
inc
mov
push
mov
daa
jbe
ss
dec
push
or
cmp
shr
test
inc
push
ds
call
aas
jb
pop
push
cld
mov
add
ss
jl
in
sbbb
loope
clc
jmp
xor
leave
aaa
roll
cmp
cmp
shrl
out
testb
push
dec
icebp
sub
xor
xchg
dec
mov
gs
ja
mov
cmp
inc
and
jb
js
mov
pop
fidivl
jmp
aas
decb
add
or
mov
iret
sbb
and
sub
xor
aaa
movsb
cmp
xchg
test
cs
xor
mov
mov
sub
enter
test
push
aaa
psrlq
clc
outsb
ret
cwtl
out
mov
jecxz
lock
inc
in
add
mov
hlt
mov
nop
mov
pop
in
pop
cmp
filds
push
or
adc
mov
iret
push
cvtdq2ps
jbe
mov
xchg
leave
mov
sahf
ficomps
adc
paddb
test
popa
xchg
out
or
add
dec
sbb
cmp
push
add
es
mov
inc
cmp
dec
adcb
popa
fsubs
dec
sar
aam
fdivrs
in
call
mov
cwtl
inc
mov
jl
add
xchg
or
add
cmp
sbb
sbb
and
and
sub
mov
xor
pop
mov
pusha
inc
fs
push
add
xchg
cwtl
or
int
lds
xorl
and
je
pusha
push
xor
test
cmpsb
pop
inc
xchg
dec
orb
push
inc
mov
jo
mov
add
bswap
sbb
iret
rcrb
loopne
call
mov
or
jle
push
sbb
sbb
lret
ret
add
into
aas
inc
and
pop
mov
push
addb
das
add
cs
lds
cmp
cmp
lcall
aaa
add
test
cmp
je
popa
add
sbb
cmp
inc
roll
pop
fldenv
outsl
jmp
mov
cltd
sahf
pusha
pop
scas
sub
int
fcoms
mull
inc
pop
pop
cmovg
imul
and
aad
ret
into
movsl
repz
in
call
js
sbbb
push
sahf
add
outsl
aas
jnp
add
inc
rcrb
nopl
sub
pusha
mov
xor
sbb
xor
add
pop
icebp
or
xor
sarl
leave
xor
dec
cmp
pop
cmp
add
mov
adc
ds
mov
dec
add
mov
iret
xchg
jmp
cmp
cwtl
jl
inc
add
movsb
xchg
mov
ret
sbb
shll
mov
add
inc
xor
or
in
cmp
dec
test
add
mov
movsb
mov
jge
loope
clc
aaa
and
add
push
in
mov
xchg
hlt
add
clc
idiv
cmp
outsl
out
mov
xchg
sbbb
cli
pop
call
adc
add
jae
lea
aas
add
push
das
cmp
mov
or
sbb
add
xchg
lock
sbb
es
sahf
pop
mov
inc
stc
xchg
jno
in
mov
cwtl
stos
jb
dec
add
inc
loopne
pop
mov
sbb
daa
lock
out
cmc
leave
push
pop
mov
xchg
pop
repz
addr16
addl
adc
aam
push
cmp
arpl
add
or
and
jno
jl
sub
popa
pop
pop
fsubs
pop
outsl
push
push
jg
xchg
dec
mov
or
push
stc
pop
in
sti
test
sub
xor
push
xor
inc
inc
cmp
stc
inc
inc
dec
js
aas
push
add
mov
popl
jle
cwtl
leave
mov
loopne
in
jp
push
stc
mov
je
jbe
add
jp
pop
sbb
mov
add
fcoml
lock
or
xor
dec
rcr
add
loopne
xor
push
int3
bnd
add
xor
xchg
daa
imul
stc
clc
loop
add
jb
dec
mov
mov
jmp
add
mov
push
cli
loope
xor
push
cmp
out
xor
arpl
js
jp
jl
dec
add
stos
jb
into
add
shr
repz
mov
ret
enter
arpl
xchg
pop
or
pop
rcrl
jecxz
pop
repz
das
add
hlt
adc
clc
aas
repnz
mov
dec
xchg
push
mov
sahf
sub
stos
enter
add
repnz
in
enter
jbe
add
dec
dec
push
shl
add
pusha
jmp
pusha
call
mov
inc
or
adc
adc
dec
sbb
in
sub
xchg
xor
dec
cmp
pavgb
iret
into
leave
call
stc
xorb
jo
or
clc
or
sub
pop
rolb
push
repnz
mov
insl
mov
mov
push
pslld
int3
sub
add
sub
mov
inc
adc
rcrb
gs
test
sub
lods
sbb
add
push
cmp
sarb
jb
add
andb
stc
mov
sub
adc
lahf
loopne
call
sbb
jno
mov
fs
sub
push
jle
push
ret
jl
orb
add
rcrb
subl
add
add
add
lea
cmp
sub
dec
ret
cmp
fldt
pop
jcxz
jmp
cltd
dec
cmpsb
inc
inc
adc
push
test
mov
push
subb
nop
lods
call
sti
fdivrs
out
out
clc
push
cmp
cmpb
sub
cmpsb
shll
inc
rorl
out
mov
sbb
add
leave
outsb
or
dec
add
mov
xacquire
imul
hlt
add
cld
pop
sub
adc
popf
add
xchg
cmp
xor
aas
pop
repz
cmp
sbb
xor
mov
xchg
xor
cmp
mov
push
cmp
and
in
fadds
pop
xchg
jle
pop
xor
sbb
popf
adcl
dec
cmp
mov
adc
sub
add
mov
push
pop
int3
add
inc
and
into
icebp
pop
loopne
in
jnp
xchg
pop
cmpsb
xchg
add
cmpsl
lods
add
loope
cmp
push
and
add
ss
pop
mov
sbb
push
mov
add
test
mov
dec
je
jbe
sbb
xor
cs
setge
pusha
mov
xor
fstl
push
sarl
in
jp
add
lcall
pushf
mov
mov
sub
add
add
loop
pop
cmp
push
cmp
cmp
fstpt
pop
mov
pop
ja
js
data16
jl
dec
sbb
cmp
punpcklbw
roll
aas
imul
loope
mov
in
shl
sub
test
scas
add
js
clc
cmp
sub
es
sub
ret
adcl
or
nop
mov
cmp
push
pop
add
inc
jmp
jae
or
and
inc
inc
xchg
and
dec
push
ficompl
push
test
pop
push
push
add
add
fiadds
mov
shlb
in
psubsb
out
movsl
cmp
add
mov
xor
jb
je
jbe
shll
outsb
pshufb
shrl
pop
stc
xchg
add
push
mov
outsl
les
inc
adc
call
add
pop
js
dec
add
push
hlt
pop
pop
sbbb
mov
add
lock
inc
hlt
enter
not
push
clc
dec
fadds
cld
adc
mov
inc
add
ljmp
cmpsl
hlt
roll
xor
rorb
dec
dec
and
push
repnz
jp
add
ret
xor
sub
pop
sub
xor
mov
movlps
sub
xor
test
fadds
cmp
xchg
pushf
mov
mov
add
shlb
add
xchg
nop
mov
mov
pop
xor
lea
dec
daa
cld
inc
jnp
inc
add
sub
scas
ds
loope
jmp
add
adc
lock
hlt
add
pushf
je
cmpb
ja
mov
and
add
push
sbb
xor
xchg
adcl
mul
add
out
pop
loopne
push
xor
gs
addl
sahf
mov
add
or
jnp
or
add
outsl
shll
add
ret
push
sbbb
cmp
test
test
cmp
push
cmp
xchg
sbb
push
outsl
add
jle
dec
test
add
pop
push
fstpl
sub
push
lock
shlb
outsb
dec
movsb
loopne
or
lret
mov
adcb
gs
and
cmp
cltd
adcb
inc
xchg
movsl
add
enter
roll
mov
jle
and
add
int
rolb
dec
xor
push
adc
mov
mov
adc
mov
aas
addl
roll
mov
mov
les
sub
mov
push
jns
sbb
in
lock
pop
cmp
or
xchg
dec
sbb
xor
push
add
pop
dec
outsb
cmpsl
xor
stos
aad
ret
and
popa
xchg
add
sti
nop
or
sbb
add
mov
jb
out
cmp
xchg
add
test
cmp
or
dec
cmp
jbe
add
lcall
sub
in
loope
loopne,pt
and
or
pop
pop
mov
out
cmp
loopne
cli
mov
sbb
rcrl
out
add
push
mov
sub
test
sub
pop
push
sub
add
int3
jl
pop
cld
data16
add
fdivl
rcr
add
mov
sbb
inc
popf
movsl
sbb
or
nop
aaa
movsb
add
jmp
cs
or
stos
je
pmuludq
ret
pusha
pop
mov
dec
cwtl
test
add
jbe
xchg
mov
dec
add
cmp
sahf
jno
data16
xchg
jp
push
pop
test
mov
mov
cmp
rclb
push
adc
inc
push
loopne
push
lods
mov
pop
sahf
push
clc
xlat
inc
add
outsl
movsl
fiaddl
cwtl
add
sub
movl
xor
roll
mov
outsl
in
add
sbb
xchg
sbb
push
push
inc
or
adc
cmp
xchg
and
mov
lahf
pop
xchg
cmp
imul
subb
lock
cmp
rorb
test
fdivs
aas
jb
cmpsl
nop
mov
stos
lret
xchg
mov
pop
add
in
pop
inc
shlb
xor
add
pop
push
cmp
mov
xor
and
mov
sar
loop
daa
leave
mov
push
xor
or
mov
in
jle
loope
orb
adc
pavgw
push
adc
repz
jl
je
xchg
movl
data16
adc
xchg
cs
add
jo
divl
test
push
sahf
push
lahf
pop
clc
lods
add
fs
push
insb
enter
xchg
shlb
cmp
fsubp
add
jb,pt
fwait
or
and
dec
hlt
mov
xor
aaa
inc
mov
pop
add
push
xor
pop
popa
cmp
and
imul
mov
add
sub
ret
sub
repz
cmp
jg
movsb
dec
aas
push
add
pop
orb
call
in
aas
add
sahf
imul
ja
test
pushf
jmp
jb
mov
mov
sbbb
das
ret
pop
xchg
ljmp
sub
cmc
jb
imulb
add
lock
push
mov
ds
xchg
fsub
add
pop
inc
push
cmp
and
push
popf
pop
sbb
fs
push
adc
js
lahf
pop
imul
cli
xchg
lret
cltd
cmp
test
add
addr16
dec
pop
out
pusha
add
inc
sbb
das
push
lret
push
pop
add
repnz
and
nop
shufps
fadds
jae
mov
xchg
sbb
es
sub
jle
add
jo
test
mov
add
dec
mull
or
push
push
cmp
dec
jnp
sbb
pop
icebp
and
daa
add
sub
jb
je
jbe
popf
js
add
leave
mov
mov
mov
lock
leave
cmpsl
push
shl
aad
pop
cmp
call
sbb
in
and
xchg
popa
pop
data16
add
mov
and
and
cltd
xor
xor
sbb
fwait
aas
add
inc
xor
in
push
aaa
sbb
push
push
sub
mov
cmc
xchg
mov
add
push
rclb
adc
push
cmp
bnd
test
inc
xchg
outsl
lock
pop
cmpsb
mov
push
xor
lock
cmp
mov
push
and
shlb
aam
in
and
nop
loope
js
lods
add
lods
pop
icebp
hlt
or
dec
xor
xor
mov
hlt
add
js
sub
add
lods
sub
aas
les
nop
popl
cmovno
insb
jo
mov
flds
xchg
insl
dec
add
clc
mov
popa
loop
enter
inc
cmp
ret
mov
filds
and
andb
or
sarb
push
jl
jle
dec
imul
add
inc
pusha
xrelease
xor
pop
mov
and
push
out
nop
xchg
rcrb
ret
add
stos
sub
xchg
add
mov
add
push
aas
sbb
inc
xchg
push
shll
fdivrl
sti
mov
xchg
dec
inc
push
rcrb
add
pop
into
ret
dec
push
pop
je
vmread
addr16
add
or
and
in
push
loopne
push
cld
jle
add
mov
push
cmpsl
and
test
sub
pop
leave
and
xor
enter
push
popa
ljmp
das
mov
dec
fdivr
loope
push
xchg
ds
mov
xchg
inc
jns
mov
mov
loope
xor
leave
push
xor
cmp
loop
inc
push
cmp
or
js
pop
stc
fsubr
xchg
push
scas
pop
mov
fimuls
sub
xor
mov
icebp
insl
cmp
xchg
jge
rolb
roll
add
popf
add
cmovne
pop
shlb
clc
mov
cld
ret
add
popf
mov
push
inc
hlt
dec
pop
cmp
mov
loopne
jmp
repz
xor
mov
loopne
rolb
aas
fwait
xor
dec
shrb
jmp
hlt
xorb
popa
out
add
stc
loop
addps
ret
xor
add
sbb
xor
xchg
mov
push
push
sbbb
add
cmp
cld
daa
cs
add
scas
mov
push
loopne
add
std
ret
dec
cmp
xchg
mov
sub
add
sbb
push
cmpb
pop
dec
subl
outsl
iret
add
pop
jnp
mov
inc
and
mov
add
fwait
in
add
femms
ror
enter
jmp
cs
or
xor
adc
orl
xor
test
into
out
test
dec
aas
lahf
cmp
sbb
jl
sub
and
inc
mov
or
hlt
add
fsubrs
js
pop
jp
sbb
xor
imul
jmp
fxch
pop
cmp
xor
push
addb
bound
insb
add
leave
sub
sbb
pop
cld
xchg
nop
cmp
add
bound
mov
adc
les
adc
in
mov
dec
sub
sahf
xor
jle
cmp
inc
add
xchg
lcall
cmp
or
dec
test
cltd
hlt
lods
clc
roll
test
jmp
add
pop
mov
mov
mov
sub
cmp
add
adc
mov
jle
jg
adc
xchg
cs
fadds
push
fsts
push
pop
mov
in
or
jae
mov
xchg
add
cmpsl
clc
push
jle
nop
fimull
push
int
roll
enter
xor
in
xor
push
leave
pop
shrl
movsb
pop
or
or
mov
add
stc
fwait
push
sbb
leave
cld
into
push
inc
loopne
in
clc
add
rcrb
mov
xor
test
push
cmp
cmp
mov
jl
mov
xchg
arpl
mov
je
jge
nop
mov
dec
movsb
add
or
shll
cmp
popa
nop
hlt
xor
jg
push
pop
ret
pop
or
orl
int3
fdivrl
shr
stc
lock
add
mov
add
xchg
pushf
and
inc
jno,pt
cmp
and
in
aas
dec
add
mov
add
loopne
xor
add
shlb
push
js
add
push
mov
incl
xor
test
add
loopne
jmp
add
lock
test
jp
jnp
std
pusha
mov
and
loope
jl
fcompl
sub
jno
dec
mov
sub
adc
repz
testl
sbb
adcb
incb
inc
loop
jns
adc
mov
jle
dec
testl
add
xchg
dec
add
push
clc
or
bound
mov
mov
sahf
add
sbb
vpshufd
sub
add
les
mov
mov
inc
fldl
jl
and
loopne
xchg
add
ret
outsb
je
xchg
lock
iret
mov
sarb
mov
int
in
inc
pop
xor
xchg
jge
je
jmp
push
mov
enter
mov
xor
xor
sub
imul
add
repnz
pop
fmull
in
das
aam
jle
cmp
or
in
mov
test
rcrl
and
fisubl
rorl
popf
dec
mov
test
repnz
jae
xorb
neg
xor
and
std
add
lcall
repz
repnz
fcoml
add
mov
add
idiv
push
rorb
mov
je
xor
cmp
dec
push
loop
pop
repnz
jns
ficoms
in
movb
mov
jne
add
rcll
xchg
add
nop
in
mov
cli
push
popa
loopne
xchg
mov
pop
mov
lock
sbb
pop
xchg
add
add
in
add
aam
sbbb
sti
sbb
stos
sbb
lock
pushf
sbb
xchg
popl
adc
dec
aam
leave
mov
mov
pop
popf
or
cmp
dec
addb
addb
adc
mov
mov
or
mov
lock
cmp
mov
sub
and
inc
mov
add
in
lods
cmpb
add
faddl
jo
lahf
add
loopne
das
xchg
rorb
push
or
add
jecxz
inc
in
and
sbb
add
jg
jmp
mov
add
pop
mov
enter
pop
loope
lock
insb
add
stc
and
pop
mov
negb
paddq
push
jne
jp
dec
mov
addb
mov
rcll
repz
jno
in
adc
push
les
add
das
clc
xor
dec
in
mov
addr16
xchg
subb
mov
xor
add
rolb
je
stc
dec
sbb
push
clc
add
cwtl
test
mov
pop
hlt
add
in
mov
dec
cs
pop
roll
ds
sbbb
add
mulb
pop
add
cwtl
in
ja,pt
xor
adc
xchg
push
add
fs
or
scas
xchg
and
divl
xor
add
js
dec
dec
rol
leave
jo
mov
fwait
or
mov
loopne
pop
invd
mov
das
mov
aaa
pop
jg
add
enter
mov
jle
or
pop
pop
or
push
xchg
add
pop
in
push
in
lock
or
dec
cmp
sti
pusha
mov
mov
add
sub
add
push
push
mov
aas
sub
push
out
pop
cmp
push
and
js
dec
addb
mov
pop
add
frstor
mov
push
pop
add
mov
je
inc
dec
repz
and
arpl
xor
in
call
lahf
idivb
xor
pop
adc
je
add
lea
fadds
xor
mov
mov
addb
jnp
pop
add
xchg
test
ret
mov
popf
sub
mov
call
lahf
inc
cmpsl
lds
clc
push
dec
add
aas
xor
xor
fidivrl
cli
dec
pop
ds
das
repnz
into
addr16
outsb
cmovo
ja
jo
pop
jg
inc
xchg
pop
dec
cmp
lock
push
mov
add
inc
pop
js
pop
dec
push
adcb
popa
jp
add
bound
or
push
mov
jb
jbe
add
scas
xor
or
cmpsb
ret
loope
lret
sub
fcoms
stc
test
push
lcall
add
mov
data16
pop
outsb
sub
jl
add
nop
dec
pop
cmp
or
add
xor
add
inc
movsl
dec
in
pop
aas
jb
add
pop
ret
out
add
imul
je
push
add
inc
arpl
jae
js
jnp
jg
addl
xchg
xchg
add
dec
roll
shll
sbbb
mov
and
je
nop
cmp
jbe
in
out
and
dec
inc
out
gs
adc
push
loopne
daa
js
sbb
shll
jmp
or
push
xchg
inc
add
fs
sub
in
mov
aam
add
xchg
dec
and
xor
xchg
inc
adc
add
sarb
arpl
mov
in
mov
loopne
inc
jo
add
or
or
adc
mov
ljmp
cld
xor
xchg
add
clc
shl
pop
mov
dec
xchg
insb
push
in
mov
cmpsb
add
aaa
stos
mov
clc
incb
daa
mov
outsb
das
add
cmp
jo
pop
pushw
add
rorb
rolb
xchg
nop
pusha
js
push
pop
add
and
inc
add
daa
xor
insb
push
mov
pop
mov
aas
jbe
sub
aas
xor
fiaddl
imul
in
mov
loopne
aad
pop
cli
pop
pop
cmp
lock
add
in
mov
in
call
or
adc
add
xchg
dec
jg
pop
dec
cmpl
stc
roll
push
dec
add
cmp
scas
add
push
leave
sub
jbe
sub
adc
popa
mov
jb
je
jbe
add
and
leave
in
les
jmp
mov
sub
sub
xchg
popl
and
in
test
sub
mov
faddp
lret
push
add
mov
std
add
hlt
cmp
sub
rolb
pop
in
mov
cld
add
mov
int3
es
push
loopw
add
fisubrs
add
aas
int
xlat
add
sahf
das
incl
adc
es
jp
pop
inc
ret
mov
lahf
jae
jg
or
out
in
mov
mov
add
out
or
add
fisubrs
jp
loopne
cmp
out
pop
mov
add
xchg
lock
adc
add
mov
xchg
pop
add
add
lcall
add
xchg
add
loopne
mov
cld
add
cmp
adc
popf
push
mov
pop
mov
scas
repz
dec
pop
sub
cmp
add
xorb
push
add
cs
lret
aad
cli
fadds
mov
inc
loopne
pop
hlt
data16
xor
mov
cwtl
add
mov
in
add
cwtl
popa
mov
mov
xchg
adc
jl
pop
aam
mov
neg
mov
or
and
push
inc
add
call
jmp
and
sub
insb
les
add
pop
add
pop
cmp
xchg
xchg
cwtl
call
rolb
or
jbe
fcomps
add
mov
sarb
xor
or
inc
lods
mov
jp
mov
mov
xchg
into
loopne
psrld
data16
add
dec
movsb
andb
and
add
xor
cmp
inc
xchg
add
pop
pop
lahf
lock
xor
pop
inc
clc
das
aas
lods
mov
jecxz
mov
mov
cmp
sbb
push
sbb
sub
js
pop
add
mov
cmp
and
stos
xchg
cs
push
and
add
loop
mov
add
push
mov
mov
sub
add
sub
jp
hlt
pop
clc
push
mov
pop
lcall
or
cmp
push
popa
subb
outsl
or
add
sahf
lods
jne
sbb
clc
pop
add
dec
pop
ret
repnz
pop
pop
andb
loopne
pushf
lahf
test
roll
push
aas
cli
or
cmp
shlb
xor
cmp
add
xchg
loope
add
pop
or
xchg
je
dec
and
pop
cmpsb
pop
mov
xchg
dec
add
jb
sub
add
lcall
fadd
leave
ljmp
inc
mov
pop
pop
mov
loopne
sub
cmp
add
lahf
jecxz
in
les
add
rolb
jb
je
dec
sbb
xchg
mov
jge
ds
iret
stc
add
jecxz
in
cld
push
and
ficoms
add
stos
pop
jo
dec
sub
outsb
add
xor
add
ljmp
add
push
pushw
in
fldl
loop
dec
out
daa
push
clc
add
dec
nop
mov
cld
pop
enter
mov
xchg
bound
jns
jb
pop
pop
inc
sbb
add
jbe
pop
jle
dec
and
cwtl
add
lock
mov
adc
add
fldenv
icebp
sbb
and
and
sub
mov
cmp
ret
pusha
inc
repnz
fdivl
js
in
pop
dec
dec
nop
aas
mov
pop
jo
pop
xchg
hlt
add
pop
call
dec
lcall
add
mov
leave
jl
out
in
mov
jp
in
jle
dec
movsb
ret
xor
and
mov
add
push
push
and
das
clc
aam
cmp
pusha
rclb
les
add
pop
out
fs
scas
and
jnp
pop
adc
mov
js
les
test
jno
adc
pop
cli
inc
mov
cld
inc
sar
int3
sub
add
xchg
in
dec
int3
subb
mov
xor
popf
cmp
push
in
cmp
jne
sarb
es
mov
mov
nop
pop
xchg
adc
pushf
add
mov
aad
and
sahf
or
xor
mov
and
jb
add
mov
push
add
push
sub
scas
pop
cld
add
pusha
xchg
fs
mov
adc
mov
in
decb
add
shl
insb
dec
sub
adc
mov
and
inc
inc
decb
jo
aam
stc
xchg
leave
cwtl
aas
add
movsb
xchg
or
sbb
push
cld
mov
les
leave
clc
sbb
sbb
add
xchg
or
adc
lahf
sbb
adcb
xchg
inc
cmp
aas
gs
lret
sub
mov
jl
gs
inc
lcall
mov
lahf
mov
leave
add
int3
ds
push
add
cli
int
add
fsubrl
add
nop
pusha
sbb
inc
push
push
jmp
lods
adc
test
push
add
sub
nop
add
sub
mov
mov
push
rdpmc
test
ja
mov
add
push
call
fcompl
push
mov
lea
sub
jns
cli
and
inc
jge
in
inc
dec
sbb
push
inc
stos
xrelease
sub
xor
push
call
enter
unpcklps
sub
lret
ss
push
test
out
pop
cld
ret
add
add
add
or
cmp
rsqrtps
mov
xor
and
mov
notl
xor
add
mov
or
in
add
xchg
lea
add
rorb
sbb
inc
mov
shl
cltd
cld
push
adc
cmp
lcall
push
mov
jbe
sub
sbb
add
sub
incb
add
dec
push
orb
ret
pop
cmpsl
xlat
ds
cld
ljmp
push
push
mov
aas
xor
or
je
add
sbb
mov
dec
and
in
add
push
add
int
repz
dec
cli
loopne
out
ror
int
les
roll
stc
add
movsl
loope
add
cmp
pop
push
mov
push
addb
jge
jp
nop
shr
decl
test
sub
xchg
push
dec
ja
add
shlb
das
lock
add
mov
insl
add
dec
pushl
push
dec
add
jge
lods
add
pop
shr
xchg
sti
add
je
or
push
push
cmp
add
adcl
pop
cmp
add
aam
pop
mov
mov
sub
add
mov
popa
dec
mov
add
shlb
push
add
jno
and
or
es
pop
push
push
lock
add
dec
dec
mov
inc
add
inc
data16
add
push
sbb
sbb
mov
or
movsb
mov
add
add
push
push
mov
add
lods
mov
push
mov
pop
jne
cmpsb
and
sarb
cwtl
gs
xor
inc
fsubr
cltd
sub
cmp
fdivl
push
fmull
pop
rorl
rolb
jl
jnp
adc
js
adc
mov
pop
push
push
and
orl
aaa
jmp
sbb
adc
sbb
fld
jmp
and
test
movsb
push
cmp
add
adc
add
popa
jne
mov
dec
cmc
sub
add
xchg
sbb
pop
adc
lods
rcr
push
jbe
push
fiadds
dec
pusha
mov
add
fistl
push
cmp
les
pop
push
cwtl
mov
dec
sbb
inc
sub
xchg
cmp
push
pop
je
sub
mov
dec
add
data16
cs
paddb
mov
or
sbb
ret
pop
std
out
jo
add
dec
mov
dec
pop
mov
xchg
fiaddl
ds
jns
xor
inc
aam
verr
mov
cmp
mov
mov
inc
xchg
add
in
mov
add
out
sahf
xor
and
jnp
add
xchg
push
add
xor
fnsave
add
cmpsb
int
fxch
dec
add
sbb
push
sub
pushf
jne
cmc
mov
mov
sahf
xor
repnz
out
xchg
push
hlt
test
xchg
mov
repz
rorl
mov
jmp
andb
jns
add
testb
sub
push
ljmp
test
pop
mov
or
dec
add
mov
add
pop
aam
pop
push
sbb
cmp
std
popa
addr16
mov
fiadds
cwtl
daa
fs
add
movsl
das
pop
add
sub
add
lods
xchg
les
int
push
into
sarl
mov
not
push
sbb
pop
or
and
fwait
inc
test
mov
fdivrl
push
imul
out
mov
jp
lcall
das
shl
sarb
push
xor
add
jo
sbb
xor
pop
add
cmp
in
jmp
sti
or
xlat
pop
mov
fcomps
call
notl
loopne
cmp
add
or
mov
push
adc
jle
mov
adc
aad
pop
enter
rolb
sub
add
cmp
push
loopne
add
aad
push
and
iret
adc
dec
rcrb
mov
pop
popa
or
mov
add
and
mov
add
pop
ret
mov
jb
mov
and
pop
ds
mov
negb
ret
or
cmpsb
add
push
add
and
xor
add
jmp
cmpsb
cld
roll
push
lea
bound
mov
es
add
int3
ja
scas
cmp
cmp
ret
add
adc
pop
sbb
rcrb
mov
insl
mov
push
jg
stos
pop
push
data16
add
stos
std
call
ret
xor
ss
add
popa
mov
add
out
nop
or
cmp
int
xor
and
add
adc
pop
mov
xchg
iret
add
faddp
sbb
cs
pop
frstor
gs
or
aas
sbb
into
adc
fcoml
sbb
cltd
clc
mov
add
and
in
dec
mov
xor
xor
jge
pop
stc
mov
jne
hlt
push
hlt
adc
jae
out
or
or
adc
sarb
je
push
sub
loope
pop
mov
jbe,pt
jb
sub
or
mov
sub
dec
add
cmc
rep
pop
jmp
mov
mov
pop
xor
cmp
sbb
add
inc
adc
mov
addl
adc
xor
shr
je
xorl
out
add
andl
cltd
cld
popa
loopne
or
mov
std
adc
scas
outsb
pop
push
imul
inc
mov
outsl
arpl
sbb
push
outsl
jg
arpl
js
clc
mov
inc
jne
push
mov
dec
sub
sbb
push
ja
jo
imul
dec
loop
inc
arpl
je
repz
jo
ds
mov
jns
jl
aas
and
jne
pushl
rcl
bound
test
push
cmp
fistpll
js
insl
clc
arpl
and
or
push
aam
mov
inc
ret
sub
rclb
lods
lahf
add
icebp
lahf
inc
mov
and
xadd
aas
outsl
inc
lods
inc
daa
dec
jnp
cmc
rclb
mov
sti
out
cmp
pop
mov
aas
bound
add
add
add
dec
xchg
dec
cltd
les
shlb
loopne
aad
push
mov
bound
mov
xchg
in
sbb
pushf
mov
sti
dec
es
jne
push
cmp
cmp
add
pop
sbb
ror
pop
aas
or
test
clc
add
out
adc
and
mov
test
jmp
cmp
and
fsubrp
stos
inc
jp
sub
xor
mov
push
sahf
inc
scas
mov
xchg
inc
sbb
mov
xchg
inc
mov
jg
adc
sbb
ljmp
dec
outsl
ljmp
cmp
push
adc
jnp
jg
ret
das
sub
xor
fwait
lcall
out
mov
inc
pop
inc
push
fcoms
sbbl
out
orl
dec
into
sar
sub
add
divl
pop
add
dec
dec
mov
adc
cs
loop
clc
jmp
pop
lods
push
xchg
arpl
push
ret
dec
gs
fsubr
test
xor
enter
je
xchg
insl
pop
lods
xor
push
and
dec
fsubs
fs
jae
daa
cmp
push
xor
es
pop
leave
lcall
dec
push
data16
fldt
dec
dec
push
mov
lock
cmc
shrl
xchg
xor
and
aam
xchg
adc
lock
add
outsl
pusha
or
clc
inc
xchg
push
dec
stos
dec
pop
sbbb
mov
stos
fcmovne
jno
sub
lds
xchg
scas
mov
xchg
add
pop
sub
mov
jbe
pop
sbb
sbb
stos
pop
xchg
pusha
div
aad
out
push
daa
cmp
cli
pusha
addl
and
push
mov
pop
movsl
mov
lea
or
call
add
or
cltd
je
rorl
or
sub
loopne
lods
aaa
push
es
pushf
fucom
mov
and
mov
pop
xor
cwtl
push
mov
inc
mov
testl
loop
push
inc
fs
or
dec
lahf
sbb
sub
dec
cmc
jmp
fiaddl
add
mov
xchg
inc
getsec
jno
fs
and
andl
daa
sub
add
jg
adc
pop
dec
nop
jp
lret
push
out
icebp
mov
pop
push
into
push
gs
mov
xor
xchg
mov
mov
addl
xchg
sbb
adc
sub
push
pop
popf
sbbl
xor
rep
stc
mov
nop
ja
in
movsl
sbb
stos
test
mov
out
jp
cwtl
test
cmc
stc
inc
and
or
xor
outsl
cmpsl
jns
movsl
inc
sbb
mov
push
scas
fdivr
xchg
mov
sti
shl
inc
mov
mov
je
inc
popf
pop
call
or
ficomps
movsb
lret
dec
hlt
ss
inc
lods
lret
dec
rolb
int
inc
jmp
push
pop
int3
cmp
mov
ja
pop
icebp
and
sbb
int3
fwait
test
and
sbb
pop
int3
jbe
loope
in
call
ljmp
movsb
int
dec
cmp
cmpl
ficoml
xchg
or
loopne
lret
and
fwait
sub
and
cli
insb
shl
xchg
shlb
sbb
push
jp
inc
lahf
lock
popf
pushf
into
cmpsl
ret
sahf
aad
daa
gs
fstp
xchg
sbb
stos
add
inc
xchg
sbb
or
mov
icebp
sbb
xchg
pop
fsubs
icebp
call
das
in
pusha
jb
int
loopne
adc
and
bswap
or
arpl
and
xchg
jg
and
inc
hlt
cmpsb
clc
or
mov
lcall
into
push
clc
jo
sbb
adc
icebp
popa
xchg
xchg
push
lds
xorl
inc
push
lods
ljmp
mov
mov
push
add
lcall
in
xor
jnp
jne
test
out
cmc
scas
cmp
iret
push
adc
cmp
sbb
mov
cmp
sbb
sti
xchg
mov
adc
andb
push
dec
or
cld
das
xchg
and
cli
xchg
push
addr16
adc
mov
scas
dec
loope
and
leave
std
mov
cs
and
out
inc
add
std
fsubrs
es
pop
imul
dec
jl
out
mov
adc
out
rcrb
fnstcw
pop
sub
jmp
data16
out
dec
push
sbb
cld
je
fadd
sbb
push
lahf
dec
push
bound
add
add
into
ja
rcll
lock
fsubrl
mov
movsb
mov
xorb
or
cld
pop
das
add
jg
sub
mov
imul
add
inc
out
sbb
inc
xor
imul
push
mov
sub
dec
xor
movsb
cltd
mov
fs
sub
xchg
inc
sar
push
add
test
fldt
in
orl
push
leave
test
mov
pop
out
jle
sub
ss
xchg
cmp
push
mov
into
mov
icebp
bnd
mov
outsb
adc
test
xchg
jmp
pop
jmp
sub
dec
aas
mov
xchg
insb
aas
jp
xchg
std
mov
addl
out
lahf
cmp
xor
cmpl
jno
ss
shlb
jo
sahf
inc
in
inc
mov
xor
int3
das
cwtl
sarb
inc
inc
push
imulb
push
inc
shll
ret
imul
push
movsb
xchg
cs
cmp
call
mov
sahf
std
jp
loop
stc
data16
shr
mov
cltd
sub
cmpsb
mov
addr16
xchg
int3
push
shrb
cmp
ficomps
xor
repz
jo
jo
rcr
or
push
into
pminsw
fildl
jo
rol
ljmp
stos
int3
je
jb
pop
decb
and
les
imul
add
or
mov
inc
arpl
lock
orl
cmp
shll
into
andl
das
mul
adc
push
clc
repnz
ja
mov
xchg
or
jnp
push
and
xor
inc
scas
sbb
les
mov
xchg
mov
cmp
dec
movsl
rcll
pop
cmp
test
les
push
pop
mov
neg
xor
jae
pop
inc
rcrb
daa
dec
jae
in
sbb
xchg
cmpsl
dec
mov
pop
jns
push
out
mov
lcall
cs
jle
adc
xor
clc
fcom
cmp
pop
mov
lahf
movsb
ss
outsl
push
jne
mov
dec
inc
imul
add
or
and
sbb
mov
es
mov
call
xchg
daa
cmp
jmp
mov
pop
or
pop
pop
test
cmp
or
dec
stc
add
adc
mov
out
xchg
sub
fiadds
das
push
test
cmpl
cmp
lret
xchg
xchg
insb
movb
mov
mov
push
mov
fdivrs
add
mov
mov
cltd
aaa
push
ret
adc
sbbl
add
loopne
data16
sub
stos
xor
pop
mov
addb
push
stos
test
inc
stc
mov
in
dec
scas
adc
cmc
or
ror
adc
stc
cwtl
push
mov
mov
mov
adc
pusha
pop
mov
push
test
and
jne
cmp
mov
andl
dec
mov
ja
loop
and
testl
mov
fnstsw
mov
rclb
inc
or
in
mov
sub
jle
ja
mov
nop
mov
xor
mov
fbstp
adc
jle
cltd
lds
fimuls
icebp
inc
add
incl
xchg
dec
pop
stos
pop
je
dec
arpl
sbb
scas
pop
inc
dec
in
aam
wrmsr
aad
fdivs
test
movsb
bnd
shll
dec
fstl
xchg
jns
cmp
mov
mov
test
push
icebp
xchg
es
sub
dec
xor
ljmp
xchg
and
push
sarb
pusha
cmpsl
fdivl
cmp
push
repz
out
loope
add
ja
inc
cld
stc
rolb
sbb
imul
stos
or
cwtl
out
xor
fwait
jae
push
add
and
and
adc
lcall
jge,pt
sub
sub
and
lret
jnp
cli
mov
jbe
mov
xchg
sti
jmp
lock
cmp
push
stc
xor
pop
fwait
xchg
or
add
int3
add
mov
loope
aam
mov
sbb
pop
inc
add
aad
fcmove
mov
adc
lea
cmp
mov
sub
nop
sbb
jecxz
repnz
out
pop
clc
and
mov
mov
add
add
aaa
lock
inc
popa
xor
cld
push
push
arpl
xor
jbe
pushf
or
sbb
fstl
or
sysenter
loopne
sahf
sahf
xchg
lcall
push
jmp
clc
test
pop
inc
out
lock
ret
cmp
into
mov
xchg
push
jecxz
les
adc
add
outsb
sbb
arpl
jmp
repnz
cmp
fadds
xchg
movsl
addr16
cld
inc
pop
or
into
fildl
add
xor
dec
rclb
testl
imul
dec
push
and
xchg
int
in
movsl
js
mov
ror
mov
aaa
addr16
pop
cs
pop
fwait
xlat
or
push
add
aaa
push
cmp
lock
mov
mov
nop
mov
jo
and
lods
xchg
in
cmp
pop
xlat
dec
xor
hlt
push
sbb
mov
adc
push
dec
push
clc
inc
sti
imul
stos
and
cmp
sub
scas
xchg
in
das
insb
in
stos
push
out
inc
ja
push
dec
leave
pop
xor
mov
imul
mul
and
cmp
mov
lods
mov
stos
jbe
adc
inc
cmp
mov
cltd
stos
fmulp
xchg
jl
das
test
stos
fistpl
pop
sbb
inc
lds
mov
test
xchg
or
pop
out
add
loope
stc
sbb
push
test
inc
pop
pop
lret
dec
jne
xchg
divb
fidivl
rclb
rcll
ret
push
lret
arpl
and
adc
mov
arpl
or
dec
les
and
inc
gs
mov
adc
mov
pushf
cmp
bnd
iret
js
lcall
ret
xor
xlat
pop
dec
add
xor
add
sub
scas
sbb
lcall
mov
js
fcomi
mov
das
or
shrl
bound
jb
iret
xor
movsl
test
jae
and
xchg
gs
xor
arpl
jns
fmul
imul
mov
std
clc
lcall
clc
cmp
idivl
cmpsb
push
daa
jecxz
mov
xchg
leave
into
xchg
in
cmc
insl
and
cmp
mov
outsb
dec
mov
sbb
adc
push
push
lea
pop
sub
call
push
push
in
mov
and
cli
xchg
aad
push
test
pusha
les
lods
outsb
dec
inc
xchg
je
test
stos
and
mov
mov
push
arpl
inc
pop
sub
sbb
fcmovnbe
inc
xchg
stc
push
rorl
ds
arpl
flds
and
sbb
add
fs
lock
lds
stos
scas
lds
iret
push
loopne
push
les
into
stos
inc
sbbl
sbb
es
dec
mov
loope
adc
ljmp
hlt
push
ret
stos
int3
xchg
mov
in
imul
daa
out
jle
pusha
sub
stc
stos
ja
push
cld
jno
fldl
cmp
mov
lret
lahf
inc
dec
pop
adcl
mov
mov
push
xor
cwtl
ja
xlat
dec
cmp
or
mov
and
cmc
cld
pushf
xchg
ret
xchg
repnz
xchg
or
add
lods
call
cwtl
ljmp
ljmp
xor
cs
xor
ret
jg
test
mov
pop
out
inc
xchg
shlb
mov
scas
sbb
mov
push
jnp
pop
shlb
push
sub
in
stc
int
mov
inc
and
cmp
adcb
xchg
test
cmp
sbb
mov
xchg
movl
das
xor
pop
aaa
enter
inc
jnp
icebp
insl
mov
aaa
loop
int3
out
data16
movsl
cltd
mov
xchg
mov
int
cmc
add
xor
inc
jbe
pop
xorl
mov
xor
push
mov
inc
push
je
mov
mov
jle
or
push
xchg
add
pop
mov
jno
inc
mov
adc
cmp
std
adc
jnp
add
pop
and
out
pusha
mov
in
mov
clc
inc
cmp
arpl
adc
inc
jns
jp
jns
out
mov
movsb
sub
fwait
inc
pop
mov
sahf
or
jmp
push
mov
mov
stos
mov
sub
rorl
dec
repz
cmp
inc
sub
add
je
shll
popa
mov
popa
fdivp
mov
push
mov
pop
dec
imul
pushf
inc
push
fmul
sbb
out
in
mov
inc
pop
sti
in
enter
je
mov
jge
ss
stos
pop
fcomip
cmp
lock
or
adc
or
das
call
inc
inc
rcrl
jb
cmp
push
mov
pushf
xchg
fistpl
sub
cmp
or
cmp
pop
andl
mov
adc
jne
mov
popa
pop
fwait
movsb
cmpsl
xor
xor
cld
cli
push
inc
sub
xor
mov
iret
push
sbb
test
movsb
adc
imul
add
adc
out
fucomi
roll
adc
cs
sbb
clc
cmp
push
stc
mov
cmp
dec
dec
dec
insb
adc
out
scas
loopne
pop
inc
idiv
and
lahf
notl
in
int3
xlat
fiaddl
mov
xchg
fistpll
mov
shrd
xchg
repnz
dec
mov
inc
or
mov
cmp
clc
cltd
hlt
mov
pop
or
fbld
dec
leave
jb
and
std
scas
daa
adc
mov
rclb
push
insb
mov
sub
cmp
cwtl
aad
adc
xor
sbb
lock
cwtl
mov
outsb
mov
pop
add
lods
mov
push
mov
sbb
aaa
pop
stc
xorb
pop
and
cmpsb
jl
movsb
push
das
add
repz
mov
dec
cmp
mov
xor
inc
sbb
xchg
dec
sbb
pusha
out
jno
add
in
test
shrl
pop
pop
or
xchg
or
jne
lock
xchg
out
lret
add
push
aas
dec
cli
sbb
addb
lret
add
sbb
add
xor
inc
xchg
push
dec
scas
adc
adcb
xchg
and
mov
dec
fsub
je
cmpsb
push
push
lds
adc
popf
mov
xlat
mov
lahf
dec
jae
sub
add
icebp
aad
inc
xlat
xchg
sahf
aas
xor
cwtl
fistl
cmp
pop
out
and
xor
adc
lods
inc
jecxz
adc
out
into
mov
dec
fstcw
jge
loope
mov
icebp
xor
lods
pusha
push
cwtl
leave
xor
push
mov
dec
add
sub
fisttps
ljmp
in
mov
sbb
mov
lock
aam
mov
push
adc
push
add
inc
lods
jno
jg
mov
pop
lea
and
inc
mov
add
jg
imul
dec
pusha
add
xor
mov
mov
or
jp
mov
or
xchg
inc
xchg
jo
ja
cmp
ret
xchg
inc
aad
lret
xchg
jmp
sub
xchg
mov
add
mov
daa
mov
inc
mov
pop
push
or
xor
sub
cmp
fiadds
int
es
loop
inc
loop
or
mov
aas
push
int
pop
in
fmul
mov
xor
movsb
lea
sub
loop
imul
inc
dec
inc
repnz
ja
mov
inc
mov
test
fstpl
jno
and
and
mov
es
cmpsb
xorb
stc
ljmp
out
xchg
imul
mov
dec
push
nop
hlt
mov
sub
xchg
leave
jp
push
test
fldt
pop
shlb
enter
pop
ds
pop
aad
jmp
add
in
jo
dec
addl
shlb
in
stc
arpl
cmp
icebp
mov
cmpb
sbb
lds
cli
xchg
mov
psrlw
jns
cmp
cmp
push
stos
pop
inc
daa
inc
mov
int
iret
pop
push
add
rolb
pop
mov
sub
pop
push
lret
int
loop
cmp
daa
fidivs
outsb
pop
jmp
push
loopne
imul
pop
inc
mov
data16
mov
into
add
sti
adc
dec
xchg
jmp
cmp
mov
sbb
das
daa
stos
ljmp
jne
push
and
jmp
int3
lret
jne
mov
jne
sub
test
mov
popa
sarb
icebp
gs
movsl
xchg
and
testb
mov
cmpsb
in
int3
pushf
in
fidivl
flds
push
mov
sti
daa
inc
int3
aaa
ss
add
roll
lret
fnstcw
ficomps
insb
repnz
data16
gs
or
xor
mov
hlt
js
cltd
pushl
imul
dec
je
adc
imul
and
cmp
ds
lea
lcall
scas
adc
mov
insb
jno
test
adc
dec
sbb
xchg
push
lahf
jne
mov
pop
and
pushf
add
xor
loopne
fcoms
es
stos
dec
incl
inc
lock
push
out
mov
xorl
jecxz
pop
add
inc
mov
in
cmp
subl
aad
rcrl
and
mov
inc
sub
dec
lcall
gs
cmpsb
inc
pusha
pushf
sahf
xor
out
add
pop
sub
dec
mov
das
push
and
into
fsubr
cwtl
cmpsl
push
cmc
out
repnz
adc
jmp
mov
pop
pop
sub
or
and
xorb
mov
insl
dec
adc
cmp
in
repz
sbb
xchg
add
in
sub
lret
and
outsl
adc
mov
xchg
sarl
iret
push
inc
xchg
sbb
mov
popf
in
xchg
loope
fdivrl
lds
fsubl
fbld
ret
mov
add
push
push
cmc
jecxz,pn
ljmp
or
insl
mov
or
orb
sbb
mov
mov
int
jp
push
mov
insl
fbstp
stos
or
push
fldl
mov
jns
insl
fisttpl
pusha
or
les
xor
add
loop
adc
cmp
or
lret
xchg
inc
lods
dec
rcl
xchg
rcr
push
push
aaa
shlb
cmc
push
ja
roll
imul
popf
pop
adc
orl
jbe
xlat
movsb
cmp
in
aaa
sub
cltd
inc
stos
mov
cmp
test
and
and
daa
xor
shll
test
and
cmp
add
jnp
imul
stos
mov
mov
push
aas
clc
lcall
gs
iret
stos
pop
ret
add
insl
addl
jl
xor
ret
pop
outsl
mov
mov
pop
scas
or
mov
dec
dec
sbb
sbb
mov
movb
lea
inc
sub
dec
es
cld
repz
pushf
sbb
pop
je
ja
rol
and
and
inc
aam
out
imul
inc
mov
add
gs
cs
pop
sub
pop
dec
and
pop
loopne
inc
cmp
dec
pop
aaa
mov
ljmp
hlt
outsb
xor
int3
mov
rolb
sbb
ret
ret
popf
out
mov
sahf
fisubs
adc
pop
cmp
mov
pop
lods
mov
mov
jae
sbb
mov
mov
mov
pop
xor
fldl
xor
cmp
xor
push
sub
fists
dec
dec
in
inc
cltd
sub
mov
xchg
jecxz
or
cmp
dec
mov
stos
sarb
cmp
pop
fists
sub
stc
sub
fs
addr16
imulb
lods
mov
fistps
cs
mull
in
insl
insl
xchg
adc
aad
xor
lods
rcrb
lahf
cli
stos
add
adc
stc
sub
repz
jns
cld
add
jmp
testl
pop
dec
adc
pop
inc
stos
push
pop
stc
xchg
out
adcb
jno
in
fwait
in
insb
pusha
mov
in
ret
cmp
sub
std
ja
mov
dec
shrl
lea
and
out
repz
push
pop
sbb
add
pop
and
or
push
xchg
cmp
ja
cmc
stos
xchg
ljmp
push
inc
mov
fmull
mov
mov
mov
popf
xor
cmp
xchg
push
jg
lods
lahf
cmpsb
shl
cmp
push
push
inc
scas
in
xor
xchg
jae
mov
and
and
ret
mov
test
cwtl
push
inc
mov
sbb
jmp
lret
push
hlt
scas
adc
dec
sub
and
jl
popa
dec
mov
push
sbb
push
xlat
imulb
mov
push
fsubs
mov
call
mov
insl
xchg
cwtl
push
pop
leave
jbe
push
decl
cmp
push
je
test
pop
into
jmp
mov
inc
aam
js
data16
lea
rorb
pop
iret
ss
push
cmc
addr16
lcall
mov
arpl
repnz
enter
or
and
lret
in
pusha
push
inc
out
ljmp
test
cld
cli
inc
or
pop
pop
out
pop
sbb
out
sub
orb
jge
add
negl
lcall
arpl
push
maxps
stos
addl
lods
pop
popf
mov
aad
mov
lcall
or
test
xchg
fiaddl
mov
sbb
mov
jl
mov
or
sti
dec
outsl
push
je
add
in
jg
pusha
testl
mov
cs
xchg
std
in
xchg
test
cld
int3
jg
dec
out
mov
fildl
and
arpl
call
inc
inc
addb
dec
mov
les
jns
add
pop
les
xlat
inc
sub
pop
or
jae
sub
sahf
jnp
xor
xchg
xchg
jle
leave
nop
xchg
lock
mov
add
mov
aaa
leave
inc
mov
stc
rcrl
add
sahf
push
aaa
mov
inc
sub
lods
dec
ja
int
xchg
dec
lret
add
cmpsl
aam
mov
add
lea
ret
rclb
mov
std
loope
mov
pop
jge
xor
fstpl
stos
cmp
rorl
mov
jmp
in
ret
out
movsl
decl
xor
inc
sbb
stos
fdivr
scas
adc
mov
mov
pop
ret
ret
dec
pop
roll
add
outsb
dec
mov
mov
jns
push
mov
mov
sbb
pop
fs
lret
ljmp
xor
mov
dec
jecxz
sbb
cmp
aas
pop
and
popf
cmp
ret
xchg
pop
jmp
cmp
add
mov
sbb
cmc
test
adc
daa
xchg
inc
shr
inc
imul
fsubp
loop
movsb
mov
dec
popf
in
and
popf
push
mov
adcb
repnz
cs
xchg
in
lahf
test
push
fsubs
int
frstor
sub
mov
fnsave
adc
pop
rclb
jae
xchg
jmp
ds
dec
es
into
xchg
cmp
mov
cmp
jl
jl
adc
inc
fnsave
push
divb
inc
mov
adc
int3
movsl
lock
gs
ja
fsts
fwait
mov
jnp
test
outsl
shll
les
outsb
jae
and
jb
sub
inc
and
insb
fldcw
push
dec
inc
shlb
push
xchg
push
pop
movsl
test
mov
repz
dec
cltd
mov
fisubs
hlt
push
push
lods
mov
mov
pop
adc
mov
jno
pop
mov
jbe
or
divb
and
dec
sbb
pop
bound
ss
xchg
and
icebp
inc
dec
daa
ljmp
aaa
enter
loopne
inc
push
pushf
adc
pop
xor
insb
sbb
dec
or
adc
jp
mov
xor
clc
add
daa
iret
xchg
fwait
rorl
inc
out
xchg
push
inc
push
cmp
mov
mov
push
cli
push
dec
push
sbb
out
mov
push
cmp
movsb
icebp
mov
push
test
sti
ljmp
clc
rorb
mov
int
mov
cmp
dec
jle
movsb
lret
xor
pusha
int
bound
cld
enter
sbb
imul
or
movsb
decb
rolb
out
dec
lods
mov
add
sub
push
push
imul
cmp
test
outsb
nop
cmpsb
or
xor
repz
aas
out
sub
js
pop
mul
ss
mov
in
pop
jne
inc
xchg
aaa
mov
mov
cmc
or
and
pop
dec
ss
xor
add
xor
and
push
loopne
or
bound
fld
xchg
lahf
packuswb
bnd
lahf
mov
sub
ljmp
test
outsl
mov
xchg
sbb
loop
sub
push
ds
mov
leave
cmp
movsb
mov
in
or
fidivl
outsb
ja
adc
sbb
cltd
jb
into
xor
push
mov
rcll
mov
subb
mov
push
call
and
jno
leave
push
popa
pop
adc
ret
xchg
jns
fisttps
push
xlat
xchg
and
xor
movsl
jle
lods
cli
or
dec
or
sub
cmp
xchg
jge
mov
sti
fs
adc
jg
cmpsl
xchg
pop
test
in
sbb
sbb
dec
push
frstor
cmp
inc
xor
mov
push
fcomps
fdivs
push
daa
cmpsb
sub
xchg
push
and
jl
jge
and
ret
mov
xchg
dec
test
add
cli
mov
aas
mov
mov
lock
cmp
out
lods
jns
loop
push
adc
ja
sub
mov
pop
push
imul
jp
dec
scas
js
cmpl
das
test
pop
lcall
nop
fcom
adc
inc
and
cwtl
fsubrl
fwait
cmp
jb
pop
push
mov
sbb
mov
add
xchg
hlt
test
and
dec
cs
xchg
insl
inc
or
sbb
jl
mov
sahf
jl
lea
fs
shlb
lret
dec
xchg
cmc
testl
outsb
mov
daa
mov
mov
xchg
popf
idivl
out
scas
pop
outsl
test
adcb
and
lods
xchg
lea
xor
movsb
mov
aam
lcall
inc
sub
push
movsl
xor
pop
or
push
xor
mov
mov
jl
fwait
mov
movsb
mov
pop
dec
cwtl
mov
xor
test
mov
in
mov
or
jbe
aaa
repz
sbb
xchg
ret
fwait
pop
and
push
push
fwait
sbb
jno
xchg
jo
loope
sbb
je
aam
xchg
sub
mov
add
sub
xchg
insb
mov
fs
push
adc
adc
out
fwait
andl
dec
cmp
mov
outsb
xor
dec
inc
jp
aad
inc
jp
mov
jmp
mov
and
pop
fs
sbb
popf
mov
in
inc
mov
test
mov
mov
inc
addr16
push
push
in
insb
imul
or
inc
pop
mov
stc
push
mov
mov
arpl
fbld
fdivs
int
mov
mov
adcl
addr16
mov
pop
pusha
push
jne
movsb
loope
leave
push
pop
xchg
jge
jl
sbb
jg,pt
lock
jae
adc
jae
xor
enter
sbb
xchg
and
pop
xor
leave
mulb
inc
lods
stos
mov
cld
movsb
mov
xchg
int
hlt
cmp
xchg
xor
pop
cmp
mov
push
icebp
gs
xchg
mov
negl
rorb
mov
out
notb
xor
push
inc
or
xchg
jno
jecxz
sbb
dec
pop
fcoms
push
adc
test
cltd
fbld
push
sbb
push
dec
push
repz
add
cmp
lret
add
xadd
xchg
add
xlat
adc
add
aad
pop
test
and
js
mov
dec
push
and
lret
test
dec
iret
decl
fmull
in
in
jb
mov
dec
inc
out
inc
jne
sbb
stc
bnd
add
out
pusha
cmc
inc
dec
rcrl
sub
aas
in
jg
or
pusha
mov
das
add
dec
and
xchg
fdivs
insb
or
imul
xchg
dec
jmp
fiadds
iret
jns
mov
sahf
push
and
mov
lret
mov
adc
out
fidivs
mov
sbbb
in
push
mov
pop
jge
sbb
leave
mov
lods
in
scas
cli
mov
sbb
xchg
inc
xchg
sbb
fldcw
sbb
sbb
aam
mov
dec
mov
xor
mov
subl
pop
test
mov
or
inc
jb
jbe
fisubrl
in
push
xchg
mov
call
xor
mov
and
outsl
fsts
pusha
adc
push
mov
add
jg
pop
mov
lret
ds
xor
pop
test
mov
stc
rorl
push
dec
cmp
lret
push
sbb
mov
jns
ja
std
mov
push
insb
dec
xor
pop
mov
insl
rcl
bound
mov
fdivl
ja
dec
addb
enter
in
ds
rcll
jecxz
push
inc
pusha
das
mov
jnp
or
mov
inc
stos
inc
roll
inc
ja
inc
mov
stos
mov
push
jb
shlb
jb
sahf
inc
mov
mov
mov
push
mov
movsb
lods
cltd
dec
or
test
push
sub
mov
aas
and
push
inc
xor
ret
cli
es
das
dec
enter
shl
lea
insb
mov
add
inc
pop
mov
fcmovb
aam
push
pop
mov
test
push
test
jg
sub
hlt
mov
jmp
inc
fst
sarb
adc
push
adc
dec
jb
jecxz
mov
test
std
mov
cmp
hlt
xor
stos
dec
pop
jecxz
daa
sub
popf
popf
in
mov
mov
adc
shr
shll
inc
and
insb
xor
fdivr
pop
orb
lret
pop
insl
sub
xchg
cld
add
test
imul
je
leave
xor
lock
sbb
mov
pusha
or
lret
sbb
jecxz
fnstenv
adc
jmp
mov
mov
iret
inc
sbb
outsl
fidivs
add
ds
inc
cltd
inc
sti
in
mov
mov
cmp
inc
jecxz
out
out
xchg
scas
aam
inc
repz
outsb
insb
inc
or
cmc
int3
jne
mov
inc
repz
mulps
dec
shlb
rorl
dec
scas
jmp
cld
repnz
loop
jp
mov
bound
and
sub
scas
pop
das
mov
scas
outsl
fists
sub
aaa
mov
dec
sub
push
call
sbbl
repz
mov
push
mov
push
xchg
int3
or
xchg
mov
and
mov
lods
repnz
js
cmp
xchg
pop
sbb
cmp
ljmp
aad
jbe
mov
pop
xchg
jno
repz
les
movsb
ret
mov
test
loop
sbb
lock
push
jle
sub
mov
sub
mov
test
adc
inc
mov
addr16
push
push
rcll
xchg
je
lods
jle
test
aas
pop
insl
push
nop
js
jle
outsb
jmp
dec
push
and
fdivrp
imulb
popf
push
pop
fcomps
xchg
lahf
adc
in
aad
cmc
shrl
cmpsl
xchg
nop
xor
mov
xor
xor
scas
adc
mov
dec
mov
pop
dec
jl
cmp
inc
sahf
int
hlt
test
cld
pop
or
xor
inc
xchg
int
and
and
mov
push
mov
push
jle
lcallw
push
cmp
adc
push
xchg
add
adc
outsb
sbb
rcrb
fistl
subl
pusha
sahf
gs
mov
mov
jecxz
pop
mov
popf
jbe
pop
and
scas
cwtl
pop
or
pcmpeqb
faddp
and
push
cmp
and
fsubrl
add
mov
lret
imul
mov
pushf
dec
fisttps
movsb
mov
enter
mov
scas
js
rclb
test
scas
and
loope
outsl
fidivs
jb
sub
cltd
aam
push
fldcw
pop
or
mov
and
pop
push
mov
add
jl
scas
js
jnp
adc
cmp
mov
pop
cmpb
dec
sub
or
add
out
arpl
and
jnp
out
mov
dec
push
pop
andb
adc
dec
into
mov
int3
addl
mov
addr16
sub
adc
or
xchg
inc
jb
xchg
fcompl
sbb
in
pop
jg
test
idivl
test
repz
jmp
popa
xchg
sbb
pop
std
iret
rclb
push
pop
sti
push
mov
xor
pop
push
dec
cli
xor
push
test
pop
aaa
sahf
cli
js
inc
inc
sbb
out
cmc
out
in
or
lret
xchg
std
icebp
mov
xchg
loope
ret
out
loopne
lea
idivl
pop
push
xor
push
mov
test
out
imul
clc
lahf
push
ss
daa
mov
push
fsubl
dec
add
push
xor
pop
and
pusha
pushf
xchg
loope
sbb
mov
fwait
ret
js
push
cmp
mov
rclb
icebp
lcall
testb
ljmp
sbb
cs
outsb
addb
xlat
pop
or
pop
pop
das
js
lahf
inc
fbstp
rolb
xor
cmp
cmp
rorb
dec
test
les
mov
shlb
inc
inc
adc
xor
lods
push
xchg
iret
pop
mov
cmpsl
inc
ret
dec
ljmp
jnp
pop
sbb
add
in
test
ljmp
mov
and
pop
add
clc
popf
push
ja
cvtdq2ps
movsl
jge
jbe
shlb
jle
pop
sbb
dec
jno
jmp
cmp
adc
fdivrs
mov
rcrl
adc
sub
push
push
aas
sub
stc
inc
imul
adc
push
and
dec
push
and
push
add
je
std
adc
mov
pop
popa
mov
adc
stos
mov
cltd
lahf
cmp
jns
mov
jle
push
cmp
push
mov
test
flds
jns
mov
andb
mov
fisttpll
shlb
jne
mov
arpl
pusha
sbb
idivb
hlt
test
dec
inc
push
cmpsb
rclb
insl
loope
pop
jge
pusha
pop
pop
and
and
dec
rcrl
das
fxch
iret
and
pop
rcr
push
xor
rolb
test
test
adcl
icebp
push
xchg
push
inc
mov
mov
and
outsb
sub
data16
jecxz
jp
test
mov
pop
cmp
insb
frstor
daa
cmc
aad
pop
mov
popf
push
adc
mov
shlb
lret
arpl
or
cwtl
push
mov
inc
add
filds
cli
adc
movsl
dec
inc
mov
inc
mov
and
je
insl
aam
stc
mov
dec
dec
ss
cwtl
dec
cltd
pusha
sbb
mov
sbb
test
gs
push
pop
jb
test
xor
pop
add
xchg
push
and
dec
ret
and
nop
movsl
loopne
popa
push
push
int3
jl
shl
pop
push
push
push
loope
mov
test
subl
mov
mov
inc
mov
xchg
jmp
sub
adc
sub
or
not
pusha
adc
xorb
rcrl
bound
popf
cltd
or
dec
shlb
lcall
lea
test
mov
stos
lea
add
inc
jp
hlt
pop
xor
stc
pushf
mov
adc
pushf
add
cmp
push
enter
cld
inc
or
pushf
mov
mov
sub
dec
pop
sbb
xchg
mov
out
clc
sbbw
rorb
xor
scas
pop
sahf
stos
dec
and
les
add
ret
int3
test
addr16
aam
dec
sbb
cwtl
test
mov
clc
xchg
push
jnp
lock
jg
pop
sbb
xchg
ficoml
ret
mull
adc
movsb
ret
stos
jo
add
jno
mov
arpl
out
je
dec
insw
sub
pop
cmp
dec
xchg
pop
adc
add
sbbl
push
in
in
dec
adc
push
or
call
mov
mov
ljmp
nop
pop
insb
lea
cli
pop
repz
adc
movsb
mov
imul
mov
inc
in
pop
xor
shl
mov
and
mov
push
sahf
dec
popf
push
mov
addl
xchg
mov
pop
pop
stos
xchg
sbb
sub
dec
push
leave
and
je
pop
int3
jl
dec
mov
jge
test
xchg
cli
not
in
push
and
icebp
clc
ds
cmpsl
shr
ljmpw
mov
dec
dec
xchg
jle
xchg
cwtl
iret
lea
adc
and
jne
mov
cmp
ret
pop
sbb
loope
xor
arpl
cmp
mov
xor
mov
and
and
adc
mov
fsubl
aaa
dec
mov
aad
push
lods
popf
out
shlb
or
adc
ss
loopne
push
mov
xchg
cmpsb
out
push
roll
add
push
push
cs
mov
sbb
ljmp
ljmp
stos
das
negb
mov
fiaddl
push
dec
cmp
push
sub
push
test
pop
setl
xchg
inc
outsb
sbb
hlt
mov
and
push
mov
push
cli
xor
mov
jns
out
loopne
jbe
or
lcall
ljmp
setnp
loop
add
adc
add
adc
lods
and
mov
mov
xor
mov
stos
in
rolb
xchg
ret
add
dec
popf
lods
ret
inc
enter
pushw
cmp
idivl
and
jmp
scas
sti
mov
in
ret
test
or
or
les
je
push
xchg
adc
or
cmp
sub
frstor
mov
push
sar
rcll
inc
ljmp
push
adc
in
es
jno,pn
ds
ror
pop
pop
and
sub
hlt
enter
lret
jbe
xor
or
outsb
rol
call
xor
lea
mov
mov
ret
add
icebp
fisubs
pushf
mov
push
scas
cmp
vmaxsd
dec
push
sub
add
dec
mov
subb
ds
fwait
mov
mov
pop
push
dec
ljmp
hlt
cmp
out
cltd
mov
mov
fists
xor
xlat
cld
scas
fcmovbe
xchg
cltd
cwtl
pop
adc
add
cmc
aam
mov
pop
add
inc
fmuls
xchg
test
push
gs
das
inc
shr
es
sti
cmp
fimuls
aaa
loop
or
xchg
jmp
call
cli
cmpb
scas
out
dec
push
loopne
inc
aam
into
outsl
cltd
inc
or
xchg
xchg
push
das
gs
out
insb
ja
sub
icebp
mov
pop
aaa
jl
in
mov
mov
popa
adc
dec
pop
xchg
pop
andl
push
mov
sahf
loope
push
add
xchg
inc
imul
xor
sub
inc
pushf
sbb
xor
lds
dec
mov
dec
xor
loopne
add
bound
mov
xor
js
mov
aam
mov
hlt
adc
dec
aad
pop
in
inc
jns
cmp
mov
cmp
lea
push
xor
sub
daa
pushf
cmc
dec
lock
mov
cmp
in
faddl
and
mov
fnstsw
test
int
inc
inc
dec
mov
mov
jge
outsl
mov
aad
fsubl
push
inc
or
scas
sbb
dec
pop
lds
lret
xchg
out
xchg
or
mov
mov
xchg
jnp
inc
imul
push
sub
inc
aas
mov
hlt
incb
push
mov
scas
mov
rorb
pop
std
mov
ret
iret
loop
inc
sbb
inc
push
out
mov
jno
jno
movsb
vcomisd
test
cwtl
mov
daa
cmp
insl
sub
jp
sub
mov
ret
jne
insb
sbb
dec
or
mov
adc
icebp
test
lret
mov
rcr
lds
dec
cmp
negb
cmp
cltd
inc
scas
adc
xchg
outsb
stc
leave
push
fisubrs
and
xchg
andl
popa
xchg
cwtl
xor
test
data16
loopne
sbb
pop
and
pop
xor
fs
fdivrs
outsb
mov
mov
lret
jb
popa
cmpsl
je
into
int
out
jp
cmc
test
mov
scas
hlt
imul
sahf
dec
arpl
or
out
cltd
jnp
push
mov
enter
scas
imul
shlb
sarl
push
daa
pop
fs
rcll
imull
xor
lds
cld
out
fcmovbe
imul
les
insb
inc
aad
lahf
or
sahf
xchg
sub
test
jne
popf
aad
xor
lret
xchg
stos
cmc
int
enter
negb
test
xchg
pop
aad
jb
pop
push
mov
xor
leave
mov
aam
pop
leave
push
mov
std
pop
or
mov
jmp
pop
sarb
adc
sub
cmp
xchg
mov
loop
fwait
out
inc
sub
add
mov
sub
dec
jle
dec
fsub
imul
jle
fcoml
popf
fnstenv
out
dec
xorl
les
jg
lahf
pop
dec
mov
fdivs
repnz
sbb
cwtl
aam
jne
pushf
in
sub
push
into
push
cmp
sub
adc
push
push
dec
sahf
test
sbbb
ret
sub
jno
xlat
cmpsb
test
mov
roll
adc
xor
pop
icebp
fldcw
loopne
outsb
lret
sbb
aaa
cmp
xor
cld
fstpl
xor
idivl
mov
add
aam
cmp
shrb
jl
lods
jb
add
sbb
lods
and
mov
scas
pop
xor
push
sarl
lea
mov
outsb
mov
aad
xor
dec
xor
dec
rcl
insb
js
fs
push
arpl
hlt
xchg
and
mov
or
fdivl
inc
movsb
int3
jns
push
in
dec
lea
dec
lea
push
pop
iret
pop
xchg
dec
test
mov
shlb
mov
dec
mov
jnp
sti
mov
call
inc
sub
push
sbbl
fsts
hlt
mov
inc
out
pop
ja
cltd
and
movsl
cwtl
loop
mov
push
jo
loop
clc
jmp
push
ljmp
scas
push
xor
ljmp
add
pop
push
int3
stos
xor
cmp
cmp
test
nop
lret
loopne
fiaddl
test
movsl
test
icebp
lret
push
lahf
mov
dec
xor
ss
pop
sbb
test
xchg
testl
iret
sbb
out
sti
ja
jo
std
lahf
inc
pop
pop
jns
adc
jl
push
push
xor
movb
ficoml
cltd
cld
aas
test
outsl
push
rorb
sub
hlt
mov
dec
xchg
lcall
imul
arpl
aas
push
cmp
xor
pop
rcrb
jecxz
mov
into
mov
lret
xor
push
loopne
js
dec
das
push
bound
call
mov
xchg
imul
sub
fwait
dec
mov
pop
lods
pushf
adc
xor
arpl
mov
jmp
outsl
dec
fwait
dec
cltd
mov
popf
adc
mov
pop
add
ja
fbld
movsb
cmpsl
xchg
cmc
cltd
sub
jns
dec
iret
stos
sti
mov
xchg
and
jb
mov
push
test
imul
popf
inc
dec
jle
cld
xor
mov
fsubl
pop
dec
packssdw
push
test
inc
cli
sti
cs
mov
mov
mov
mov
sub
xchg
imul
add
cs
mov
mov
arpl
or
out
sub
outsl
mov
mov
xchg
pushf
inc
popf
jge
xchg
mov
mov
sti
stc
or
jle
out
lds
stos
outsb
xlat
dec
in
mov
jns
mov
sti
outsb
lret
cmc
bound
dec
mov
push
popa
push
shl
push
xor
dec
jl
dec
pop
fsubs
data16
divl
jecxz
movsb
leave
inc
cmpsl
shrl
push
push
or
mov
test
lahf
inc
mov
xor
test
cmp
out
leave
fildl
sbb
fidivrl
in
sti
sbb
cltd
adc
aaa
shrl
stc
lahf
xor
cmp
dec
mov
adc
jmp
pop
cmp
ja,pn
mov
pop
xchg
jae
jae
mov
inc
aam
aam
cli
dec
and
imul
push
mov
cmp
pop
popf
gs
xchg
xchg
xchg
sbb
and
pop
dec
out
int3
lea
push
in
sub
pop
insl
push
sbb
mov
arpl
enter
jl
jmp
in
outsl
nop
fildl
or
mov
adc
shrb
mov
mov
dec
cmp
jl
movsl
pusha
bound
in
adc
iret
mov
shl
iret
aam
lahf
insb
mov
push
jae
dec
std
add
mov
mov
inc
cmpsb
mov
adc
jle
sbb
loopne
mov
xor
xchg
dec
sarl
fnsave
xchg
mov
mov
mov
add
and
lock
shrl
inc
adc
daa
adcb
cltd
xor
adc
mov
test
add
test
gs
in
in
inc
adc
add
mov
sahf
sub
xor
mov
mov
jb
mov
insl
gs
pop
push
fs
subl
mov
jl
xchg
mov
lea
lahf
es
add
jp
out
xor
nop
subl
push
dec
jno
loop
lret
add
jne
jmp
aaa
sub
insb
and
fsubl
imulb
xchg
push
xchg
mov
xchg
and
cli
or
fcoml
mov
cmp
je
mov
sbb
push
out
fs
jno
and
ds
xchg
loopne
jmp
cmpsl
sbb
test
scas
les
mov
in
mov
and
add
movsl
xor
push
mov
jo
movsl
pop
les
cmc
shll
xor
sbb
sbb
sub
mov
faddp
and
jg
push
inc
mov
in
xchg
bswap
inc
xchg
inc
dec
in
loope
stc
sbb
shll
aad
jecxz
mov
cs
hlt
aas
or
adc
cmp
mov
movl
aad
inc
lods
and
out
pop
das
scas
pop
das
jb
lret
cmp
mov
xchg
jecxz
jo
out
inc
dec
xor
lret
push
ret
rcl
cmc
test
outsl
mov
cltd
add
sub
cmp
jae
dec
out
xchg
xchg
ror
pusha
dec
sbb
jae
or
mov
je
cmp
or
cld
bound
push
pusha
inc
popf
push
pop
inc
cmpsl
aam
sahf
mov
pop
cmp
push
and
ss
or
stc
out
mov
sub
rcll
std
or
mov
pop
inc
leave
mov
mov
lods
mov
and
nop
pop
sub
xlat
jo
aaa
mov
jg
fisubrl
cmc
test
daa
push
or
mov
inc
cld
inc
mov
mov
jno
xor
out
push
and
push
mov
sbb
imul
daa
mov
mov
sub
addr16
mulb
aaa
sahf
pop
lods
adc
push
ja
test
jmp
test
dec
pop
faddp
ljmp
daa
push
fstps
inc
xchg
and
or
stos
lock
and
sti
cmpsl
fiadds
xor
cli
push
jmp
mov
repz
cmp
js
ret
and
enter
inc
inc
push
clc
push
movsl
push
scas
int
add
or
addr16
or
addr16
cmp
loope
xor
movsb
mov
cmc
pop
mov
push
gs
jb
cld
jbe
out
icebp
dec
ret
adc
xchg
dec
enter
jl
inc
lock
and
mov
sbb
sbb
adc
add
add
dec
pop
dec
adc
inc
inc
push
ret
fsub
insb
jg
jecxz
push
sbb
jle
je
aaa
push
or
jno
movsl
fwait
mov
xchg
or
loope
sahf
mov
dec
mov
xor
push
test
xchg
ljmp
andb
in
sbb
jo
fldcw
push
scas
inc
shr
loopne
arpl
andb
mov
cltd
in
mov
outsb
loope
leave
add
sub
push
xchg
jle
mov
inc
xchg
mov
adc
pop
jp
int3
sub
cmp
aad
mov
cmpsl
cmp
xor
inc
cltd
xchg
das
jo
push
xchg
and
push
lret
inc
mov
fldenv
sar
sub
shlb
popa
xor
fdivl
gs
xlat
cmp
imul
or
cmp
adc
cltd
call
cmp
int
pop
lret
daa
rorb
nop
call
mov
andl
push
mov
loopne
sub
fmuls
add
psubusw
push
loopne
repnz
les
xorl
popf
sahf
mov
inc
and
rcll
mov
cmc
inc
arpl
or
jmp
movsl
inc
mov
das
das
jo
ret
stc
and
stos
sub
push
xor
mov
jge
cmp
mov
push
xor
das
pop
sub
sti
jnp
add
andl
xor
test
inc
test
adc
xchg
insl
mov
and
mov
icebp
adc
int3
sbb
stos
fsts
je
dec
lret
push
mov
pop
pop
mov
nop
insl
cltd
cmpsl
and
call
xchg
xor
fadd
aaa
and
int
pop
rcrl
jns
cmp
cmpsb
mov
push
or
imul
add
stos
ljmp
xchg
xchg
loope
xor
and
mov
clc
icebp
pop
xor
mov
arpl
loope
mov
cmp
lods
loope
int
lret
js
dec
cmpsb
mov
mov
pop
nop
jge
cmp
pusha
push
dec
loop
rcrl
outsb
pop
out
aam
cwtl
cld
lahf
pop
inc
test
jnp
aam
dec
int3
add
shr
int3
sub
sub
cmc
sub
in
sahf
lock
xor
sub
push
stos
push
inc
push
dec
sub
ret
fcompl
xor
andl
push
fisttpll
popa
inc
fistl
cmc
hlt
sbb
cmp
pop
jle
jl
sbb
add
jne
pusha
pop
mov
cmp
repnz
lret
repnz
fistl
enter
add
sbb
adc
mov
neg
fiadds
or
push
xchg
cmp
repnz
cvtpi2ps
jp
stos
push
mov
inc
or
insl
push
lods
sub
daa
loop
das
clc
sub
adc
pop
ds
push
mov
or
sbb
out
mov
xor
pop
jae
pusha
jno
test
jg
hlt
mov
int3
mov
insl
lahf
push
popf
push
push
test
daa
pop
iret
or
loop
fwait
rcrb
jnp
jnp
and
in
lds
or
lock
inc
imul
push
jg
adc
jns
hlt
aam
push
sbb
cmp
xchg
push
jae
out
pop
push
mov
mov
cmp
in
pop
jle
adc
or
push
and
xchg
mov
sub
inc
aad
mov
mov
adc
les
adc
iret
lds
mov
mov
mov
add
ja
or
inc
cmp
or
jae
pop
and
sub
ja
pop
enter
subb
cmp
lret
cmp
sub
sub
or
jmp
repnz
jnp
pop
clc
pop
inc
adc
ss
sub
leave
ljmp
movsl
cmp
hlt
and
nop
sbb
push
push
mov
mov
sub
popa
xchg
hlt
in
test
pop
cli
push
cmp
out
ret
mov
iret
inc
std
aam
adc
sbb
test
ret
stc
adc
jno
xchg
ljmp
mov
adc
jbe
pop
stos
mov
xchg
sub
mov
jbe
adc
pop
and
mov
leave
movsb
movsl
sub
mov
loope
test
vpshaw
outsl
outsl
sbb
pop
and
sbb
sbb
sbb
clc
std
cmp
mov
lods
inc
mov
cmp
pushf
into
add
pop
arpl
or
aad
sbbl
inc
mov
sahf
mulb
adc
imul
out
addr16
inc
insb
inc
fistpl
sub
pop
mov
test
fimuls
iret
inc
xchg
dec
popf
notb
test
and
push
cltd
mov
push
out
test
xchg
mov
les
dec
testl
mov
lret
mov
ret
cmp
xor
fisttps
shll
fbstp
push
adc
sub
mov
adc
sarl
sub
or
jne
mov
movsl
inc
xchg
fistpll
test
pop
aaa
cld
mov
out
int3
sub
arpl
in
xchg
push
pop
xchg
sahf
faddl
jns
pop
jl
lret
sbb
adc
push
xchg
push
les
xor
rcrb
cltd
jno
push
scas
xchg
xchg
xor
mov
arpl
jbe
push
and
add
pop
ja
inc
mov
and
or
jae
shr
ss
push
out
nop
inc
pop
push
addl
add
xor
mov
testb
loopne
popa
mov
lcall
fwait
add
xchg
fcomp
jnp
xchg
jno
xchg
das
insl
daa
out
out
or
jmp
mov
xor
ficoml
repnz
xchg
cmp
dec
jno
or
cmp
mov
lcall
cmp
sub
adc
int
out
repnz
push
push
adcb
mov
scas
mov
xor
sbb
fadds
cs
jl
jns
pop
enter
lock
push
cmp
and
dec
fldenv
scas
je
cmpsl
pop
pop
shlb
and
aas
dec
nop
fs
mov
hlt
fwait
mov
dec
jne
xchg
mov
inc
and
push
mov
jle
stos
xor
fwait
sub
dec
or
ret
int3
loope
adc
cmc
xchg
jne
jne
add
pop
into
jecxz
pushf
jmp
movsb
cmp
cmp
add
jmp
and
stc
and
adc
cmpsb
sti
testl
orl
lds
sbb
ret
shrl
cmp
gs
pop
addr16
lods
stos
sub
or
fndisi(8087
mov
stc
call
mov
insb
push
and
test
xor
xchg
add
xor
xchg
pop
test
cmp
dec
xchg
shll
add
into
jns
mov
pushf
add
shrl
dec
lds
lcall
push
cmp
pandn
mov
sub
push
inc
jns
lock
sbb
push
or
inc
cmp
mov
imul
sub
jbe
lock
aad
push
jb
mov
sahf
stc
pop
dec
mov
mov
pop
out
or
addr16
adc
jbe
jl
lret
inc
sub
xchg
cli
add
push
mov
and
inc
shr
fldcw
aaa
mov
out
add
fildll
pop
mov
clc
and
xchg
xchg
push
int3
xchg
cwtl
mov
in
adc
ret
push
dec
mov
mov
std
lcall
sub
sbb
sbbl
push
sbb
cltd
xchg
pop
sbb
cmp
inc
lods
cmpsb
cltd
mov
mov
pop
push
sbb
nop
push
sbb
xchg
dec
call
loope
in
xchg
jne
push
sbb
cld
inc
add
mov
stos
push
lea
fbld
cltd
mov
push
pop
mov
pop
cmpsl
adc
repnz
out
fwait
loopne
cmp
jmpw
adc
mov
mov
mov
cwtl
out
mov
pop
stos
sub
leave
lcall
jb
pop
stc
or
std
xor
push
cmp
movsl
add
or
xlat
mov
enter
popf
js
xor
hlt
out
or
cwtl
and
gs
test
push
out
bound
mov
fucomip
test
xchg
mov
or
jg
push
mov
pop
mov
ret
mov
push
aas
aad
roll
sbb
imul
scas
imul
xor
jbe
sub
mov
mov
pop
pop
into
xchg
xchg
sbb
lds
adc
mov
rol
cmpsl
and
mov
sub
lods
and
shll
adc
cmc
dec
push
dec
loop
dec
popa
dec
movsl
push
daa
mov
mulb
pop
xchg
xchg
push
pusha
fiaddl
jmp
mov
cmpsb
sbb
je
push
in
dec
mov
xchg
mov
out
rol
mov
mov
xlat
mov
jp
lods
add
inc
cmp
pop
xor
xor
cmc
sbb
xchg
mov
dec
stc
fimuls
inc
sub
adc
cwtl
rolb
shrl
ss
mov
fimull
std
stos
cs
js
and
mov
fs
jno
dec
xor
scas
inc
jle
sub
lock
or
dec
xor
shlb
inc
push
nop
mov
or
outsb
push
mov
add
decl
mov
mov
dec
xor
add
sarl
xor
xchg
loopne
insl
mov
dec
mov
cwtl
ja
mov
andl
xchg
cmpsl
test
scas
xchg
jno
fnstenv
dec
xchg
mov
xchg
inc
dec
mov
cmp
mov
das
push
mov
cmp
imul
iret
int3
pop
lds
mov
xor
jo
ret
jb
in
push
je,pn
jp
mov
cmp
push
adc
mov
test
cld
add
loop
lods
js
inc
add
push
pop
test
out
insb
inc
test
nop
adc
mov
addl
jns
std
push
call
adc
xorl
pop
repnz
js
jbe
lock
or
mov
ds
dec
ja
jg
loope
out
out
jecxz
sbb
xchg
flds
aam
out
jnp
add
inc
cltd
cmpb
pop
inc
jg
rcl
mov
fwait
scas
das
int3
xchg
out
jo
ret
loope
pop
fbstp
mov
mov
lea
jnp
in
lahf
sbb
data16
push
shl
pop
insb
pop
roll
mov
arpl
hlt
jno
imul
stos
mov
aas
push
mov
int3
stos
pop
jmp
adc
les
scas
mov
leave
test
inc
push
mov
adc
add
dec
aaa
lods
test
pop
divb
sub
mov
faddp
ja
js
sub
test
out
jl
es
mov
mov
out
xor
fs
cmp
scas
mov
mov
data16
incb
cmp
and
mov
mov
lret
cmp
mov
les
out
fcoms
cmpsl
mov
add
lahf
dec
out
push
lcall
insb
movsb
pushf
cmp
shlb
lds
sub
int3
cld
add
sbb
neg
cltd
sbb
jg
inc
mov
es
nop
jnp
lods
push
jmp
into
inc
insb
lret
popa
lea
fnstenv
lock
inc
jnp
xor
add
xorb
sbb
aaa
sub
mov
or
add
fcmovne
nop
cmp
ds
dec
pusha
cli
fdivl
ss
test
daa
pop
sub
cmp
sub
insl
lcall
dec
mov
inc
push
sub
xor
mov
sbb
adc
dec
add
pop
out
mov
sub
cmp
and
mov
pushf
inc
xor
mov
aam
jl
iret
add
sbb
or
inc
test
mov
mov
and
dec
sbb
stc
mov
push
xor
adc
mov
test
stc
lods
pop
sub
mov
jecxz
fadd
fs
mov
pop
cmpsl
sub
lea
repz
inc
aam
push
jmp
xlat
pushf
stos
and
jge
cmp
mov
mov
add
pop
sub
sbb
pop
aaa
ds
mov
cld
movsl
sub
rorl
insl
push
adc
bnd
fs
push
stc
pusha
sub
xchg
out
scas
ret
popf
cmp
lret
push
pusha
fidivs
scas
inc
aad
push
dec
xlat
pop
xchg
in
popa
aas
push
sbb
push
stos
xchg
mov
mov
fisubs
cld
inc
call
mov
pusha
insb
push
lret
xchg
mov
jle
sub
adc
lods
pop
push
mov
std
rcl
fwait
or
es
inc
pop
mov
rcl
repnz
cmpb
jae
fimull
test
xchg
enter
imul
iret
sarl
adc
xchg
fwait
hlt
lods
loop
or
xlat
out
or
cmp
cld
lret
jl
shlb
jnp
inc
sub
popf
divl
xchg
movsl
aaa
int3
sub
mov
push
adc
loopne
and
adc
icebp
outsl
addb
jno
and
and
repz
ret
xchg
fxch
xchg
push
gs
lods
stos
mov
pop
cmc
xchg
push
jg
pop
scas
movsl
sbb
adc
or
pop
inc
shl
movsl
hlt
mov
inc
popf
sti
loope
and
shl
xchg
inc
push
sub
dec
adc
lret
shlb
cmpl
inc
dec
imul
xchg
pop
fdivl
js
scas
mov
or
cmpsb
sarb
movsl
loopne
cmp
inc
pushf
ror
mov
and
into
iret
lahf
lods
aaa
sub
push
mov
xchg
cld
das
daa
imul
call
mov
int3
xor
sub
or
add
imul
cmp
testl
fldcw
push
jns
push
or
loopew
lock
das
push
jnp
or
mov
mov
jecxz
push
js
pop
mov
jmp
xchg
jo
test
cmp
sbb
jnp
fcoms
lock
lock
dec
or
xchg
test
aam
aas
sub
in
loopne
sub
sub
leave
or
clc
adc
lds
adc
pop
ffreep
inc
nop
outsb
xchg
mov
pop
sub
pop
jge
adc
adc
sbb
sub
pop
and
fcmovu
cli
xor
jb
stos
mov
popf
mov
aaa
loope
imul
stc
mov
mov
dec
mov
out
mov
fstl
enter
jbe
test
aad
and
sub
or
mov
es
mov
jge
cli
pop
jb
cld
hlt
adc
inc
jmp
pop
mov
rcrl
sarb
shll
pop
into
ja
ljmp
sub
aas
jno
jnp
or
push
lahf
lea
mov
lret
int
mov
xlat
shld
dec
ficompl
mov
mov
sbb
daa
lea
das
das
or
cmc
test
inc
lcall
lods
arpl
add
sbb
ffree
fsubrs
xchg
fldl
in
pop
stos
inc
ds
dec
into
and
cs
fildll
pusha
mov
jns
and
test
fwait
dec
pop
add
rclb
xchg
icebp
fistps
cmp
xchg
stc
xor
mov
aas
mov
std
pop
fidivrs
pop
cmp
mov
ret
and
int3
std
aam
xchg
pop
mov
cmc
je
push
add
add
outsl
out
aam
xor
sahf
mov
aaa
outsb
out
shlb
pop
fstl
xor
fwait
iret
adc
xor
xchg
ja
test
sub
aam
xchg
xchg
or
mov
insl
mulb
push
sbb
shr
test
andb
movsl
or
xchg
std
sub
add
mov
inc
stos
cmp
or
dec
adc
jno
mov
push
or
xchg
int
sahf
lds
and
movsl
pop
sbb
das
pop
out
test
test
bound
pop
cmpsb
mov
and
jno
icebp
inc
push
mov
lret
je
jo
sub
jbe
adc
hlt
pop
mov
loopne
mov
aad
insl
loopne
fbstp
repnz
call
out
push
jecxz
cwtl
push
or
or
inc
mov
or
ljmp
bound
int
cmp
div
push
mov
aam
sti
fwait
les
jo
out
sub
rorb
icebp
shlb
cmpsl
insb
xor
inc
pop
hlt
inc
outsl
test
popl
cwtl
test
xchg
or
push
jne
or
mov
popf
sbb
sub
in
mov
insl
fisubrs
dec
xor
pushf
int
movsb
and
xor
fisttpl
cltd
adc
cmpsl
pop
xlat
pop
inc
pop
sti
cmc
jge
and
loope
fs
out
or
inc
mov
add
adc
or
orl
shl
decl
aam
imul
sub
xor
jne
movsl
testl
arpl
cmpsb
lea
fcmove
mov
sub
mov
daa
icebp
pop
pop
sbb
mov
js
sbb
mov
push
lret
cmpsl
in
xchg
in
mov
ja
sbb
fdivs
pushf
xchg
enter
popa
cmp
add
nop
fwait
xchg
or
xchg
or
out
lods
xor
push
sub
rclb
sti
imul
cmp
push
push
cmpsb
jbe
movsl
xor
psrld
dec
addr16
sub
dec
xchg
xchg
aam
mov
fwait
shlb
fcoml
mov
or
sub
sbb
lret
imul
pop
sahf
hlt
lds
xchg
fidivl
inc
dec
sti
push
sub
fsts
or
inc
ret
cli
jmp
mov
push
inc
mov
ss
mov
outsb
in
sub
popf
addr16
scas
loop
pop
repnz
cmp
cltd
aas
js
sub
mov
clc
enter
mov
test
cmpsb
enter
pop
pop
mov
cmp
adc
ljmp
mov
adc
popf
add
ds
popa
xor
out
in
cltd
mov
jge
cld
adc
adc
mov
mov
inc
ds
test
push
pop
add
cmp
stc
pushf
sub
xchg
xor
dec
loopne
hlt
lahf
insl
fs
mov
sti
fdivrp
mov
sbbb
nop
xor
aam
mov
mov
or
js
dec
movsl
cmpsb
xchg
xchg
nop
sub
xchg
subb
cltd
cmp
mov
js
fists
cli
call
cld
fnstcw
dec
sbb
and
insl
mov
cmpl
jo
les
fnsave
je
scas
sbb
mov
push
repz
cmc
out
mov
or
es
add
sbb
jl
repz
popa
mov
mov
push
jle
or
or
lods
sub
es
xchg
cmp
xor
jne
or
xchg
repz
aaa
sbb
cmc
in
jl
test
sahf
fwait
sbb
fsubr
jp
mov
mov
shl
jecxz
mov
adc
movsb
jo
mov
lahf
jnp
pop
add
arpl
cmpsl
and
shrb
mov
or
xor
es
fidivrl
mov
je
jnp
arpl
pop
loop
cmp
cltd
lds
ss
mov
add
xor
repz
stos
sbb
mov
jne
hlt
aad
stos
popa
sarb
push
lcall
add
out
mov
dec
call
mov
sahf
imul
pop
mov
pop
mov
outsl
sub
jl
jno
xlat
jnp
lret
or
out
adc
ljmp
mov
push
mov
push
and
jb
jmp
lea
xor
mov
pop
out
and
addb
adc
push
jl
xlat
mov
jmp
packuswb
add
pushf
cld
fst
outsl
addr16
dec
mov
jecxz
dec
insl
pop
outsb
subb
cmp
jg
adc
dec
pusha
xchg
xor
icebp
pop
inc
out
xchg
or
inc
xlat
push
iret
ljmp
sahf
sahf
fnstenv
fcoml
jecxz
mov
mov
mov
push
mov
or
stos
push
push
xchg
sbb
push
stos
or
push
add
popa
mov
imul
pop
sbb
lahf
mov
cmp
push
push
ss
lret
pop
xchg
and
dec
fs
push
stos
mov
push
sarb
addr16
mov
lret
dec
repz
push
loope
repz
call
pop
mov
mov
jae
outsb
dec
xchg
jecxz
and
push
fs
sub
dec
lock
ror
fs
roll
pop
cld
fdivp
or
enter
sbb
jle
in
or
pop
mov
pop
sbb
mov
and
add
push
test
inc
or
mov
or
outsb
cmp
dec
jb
cld
fldl
das
pop
test
in
pop
ljmp
movsl
and
bound
pop
addb
mov
pop
mov
scas
pop
arpl
xchg
cmp
dec
popf
lock
iret
aas
pop
das
jne
push
nop
xor
push
sbb
fsubs
fdivr
adc
push
or
cwtl
loope
repz
cmp
sbb
sub
cs
popf
adc
mov
push
push
out
in
repnz
fimull
cmp
inc
rorb
inc
aad
push
ret
out
test
fstpl
dec
icebp
pop
std
cmp
js
xchg
ret
and
pop
cmp
int
filds
mov
pop
ss
bound
mov
das
lods
cld
out
lea
gs
stos
jle
dec
jae
test
inc
bound
mov
xor
out
adc
into
imul
mov
fcomip
mov
fldl
cmc
addr16
push
mov
xchg
jno
inc
stos
dec
aam
xchg
xor
les
sub
addr16
push
jle
jl
fsts
dec
adc
or
xor
fadd
cmp
pop
cli
push
jmp
xchg
mov
lock
xor
xor
mov
or
xor
sbb
mov
das
push
std
gs
cltd
jb
pop
jae
push
pop
ficoml
pushf
ds
adc
stos
or
xchg
mov
mov
out
xchg
clc
mov
sbb
jmp
mul
les
fistpl
mov
test
sbb
dec
rcrl
dec
das
xchg
sub
mov
out
es
inc
out
xchg
adc
insl
jno
sar
push
mov
add
cmpb
inc
dec
pop
ja
aaa
sub
bound
add
dec
test
popf
arpl
popf
jmp
xor
out
punpcklbw
js
xor
push
cltd
stos
mov
out
mov
iret
push
lods
insb
push
push
sbb
scas
or
insl
mov
or
jne
fsubrp
shlb
pop
cmp
jb
inc
mov
and
test
and
xchg
imul
xor
test
lea
in
push
xor
cmp
jo
insl
pop
mov
ja
lret
ret
ret
gs
dec
and
repz
cmp
into
xchg
cmp
and
cmp
pop
sub
movsb
adc
fildl
pop
inc
sti
aaa
adc
les
in
add
addr16
inc
cmc
jmp
movsl
imul
mov
fcoms
cmpsl
jg
shrb
subl
xchg
in
cmp
in
jns
repz
icebp
push
xchg
pop
adc
stc
cmp
mov
adc
aas
mov
call
inc
fdivs
adc
mov
inc
in
jmp
call
dec
lret
imul
imul
dec
mov
mov
push
popf
pop
jb
rcrb
and
pop
sahf
add
test
lret
mov
xchg
mov
fistpl
jg
into
stc
in
push
xor
sub
cmpsl
out
ret
pop
push
xor
js
sub
repz
pushf
xchg
xchg
dec
mov
add
aaa
movl
fstps
inc
or
mov
cmp
dec
hlt
cmp
push
imul
fidivl
jl
mov
and
lret
xor
push
mov
sti
push
das
inc
adc
ret
mov
push
inc
cmp
mov
das
mov
ret
cmp
mov
into
icebp
test
pop
inc
sub
cmp
ret
mov
movsl
aas
cltd
mov
das
cltd
sub
or
cmpsl
fdivrl
jne
ret
jo
sarb
insb
fistpl
xlat
pop
push
rclb
loope
repnz
cs
out
pop
js
sub
insl
std
jno
cmp
orl
mov
cltd
rclb
cmp
mov
mov
js
popf
and
movsl
icebp
cmc
out
jns
aas
fcomi
and
mov
jne
xchg
roll
xor
in
rcrl
xchg
and
stos
hlt
adc
mov
mov
jnp
mov
ja
dec
dec
xor
lock
mov
mov
js
ss
or
fld
inc
xor
loopne
inc
and
xchg
xlat
add
notb
jae
and
push
inc
out
test
mov
out
cltd
pop
push
hlt
inc
loop
push
cmp
mov
fiadds
xchg
jo
jle
pcmpgtw
cwtl
test
lods
xchg
and
and
loope
test
in
or
sub
fistpll
sbb
in
out
insl
rolb
iret
jbe
shlb
or
sub
xchg
jbe
clc
mov
std
and
add
test
mov
and
xlat
sbb
cmp
icebp
xchg
cmpsb
push
add
push
inc
pop
sbb
insb
imul
push
bound
add
ret
lret
ljmp
nop
enter
negl
out
test
fldpi
jg
inc
sub
scas
fstps
dec
mov
dec
jl
jb
rclb
test
xchg
dec
mov
insl
cltd
mov
hlt
push
out
imul
mov
cmpsb
sahf
mov
or
cld
sub
imul
loope
popa
lahf
sub
dec
mov
inc
movsb
mov
stos
push
inc
jge
mov
jne
sbb
mov
fninit
jl
push
and
jbe
idivl
add
sti
cwtl
push
mov
sbb
popf
xchg
xchg
rcrb
dec
pusha
lds
push
and
jle
fdivl
enter
xchg
mov
and
iret
xchg
out
and
cmp
dec
xor
popf
js
dec
lret
xor
sbb
ljmp
jle
std
ja
popa
dec
in
mov
push
daa
mov
jns
out
pop
push
stos
vpsadbw
data16
scas
out
xor
or
jne
mov
test
loopne
sub
aad
pop
pop
jo
mov
mov
dec
push
ret
in
jo
and
mov
stos
outsb
pusha
enter
sbb
mov
mov
jecxz
mov
adc
jae
jae
jecxz
inc
mov
pop
inc
fsubrl
xchg
loope
sbb
mov
and
mov
loop
ja
aad
inc
lret
sbb
daa
or
scas
jecxz
xchg
dec
add
loope
xchg
push
scas
inc
sbb
repz
out
fs
andl
mov
arpl
in
in
xchg
loop
adc
sti
outsb
dec
mov
pop
cmp
sub
mov
popf
xlat
inc
movsb
pushf
outsb
or
sbb
andb
push
adc
sbb
and
les
jl
mov
stos
mov
pop
sub
sbb
mov
cmp
mov
xor
jge
fdivs
popl
in
loopne
jno
jo
mov
das
adc
sbb
and
inc
cli
pushf
pop
or
xor
cmp
mov
cmp
aam
cmp
lret
pop
fistl
test
push
sbb
and
mov
rcrb
inc
cmp
in
cli
pop
push
scas
pop
ficompl
es
outsb
xchg
das
pop
inc
add
jge
std
in
cmp
or
add
int
lahf
sbb
cmp
mov
dec
sar
mov
fisubrl
ficoms
dec
jmp
int3
je
fidivl
jns
imul
xchg
shll
xchg
push
xor
pop
dec
sub
push
mov
ret
cltd
push
dec
outsb
sbb
lods
repz
iret
cli
daa
mov
aad
js
pushf
hlt
inc
pusha
mov
call
jl
sub
test
shlb
scas
dec
xchg
aam
fbstp
int3
pop
jg
testb
or
push
clc
inc
shll
ss
jns
fisubrs
inc
xor
cmp
popa
fistpl
sbb
scas
sbb
dec
bound
mov
xor
daa
loopne
ss
jge
movsl
pusha
or
jl
mov
jl
pop
jge
dec
xchg
dec
mov
add
cmp
mov
int
pop
lahf
push
push
add
mov
jle
xchg
int3
incl
mov
push
fwait
pop
mov
ljmp
ja
and
dec
test
imul
lret
stc
jnp
dec
lods
lods
test
aam
sahf
shll
xor
dec
jns
jl
pop
bound
jle,pt
sub
je
imul
pop
call
das
loope
and
faddl
xor
jmp
dec
iret
stc
and
pop
xchg
aas
testb
test
sub
popa
cmp
mov
cmp
mov
dec
aam
bound
xchg
xchg
iret
and
jg
and
inc
lock
popa
fcmovnu
push
cmc
mov
lods
mov
out
sub
mov
adc
fcmovnbe
mov
shl
test
js
mov
repnz
imul
js
adc
and
fildll
pop
pop
jne
fisttpll
push
addl
jno
jo
sbb
push
jp
mov
ljmp
or
aas
loopne
in
int
movb
in
aas
loope
jle
push
imul
js
adc
mov
add
inc
dec
aad
xchg
cltd
stos
pop
xchg
call
fsubrl
inc
cltd
add
pop
sbb
rol
outsl
xor
jecxz
sahf
rcrb
movsb
negl
je
cmc
add
les
xchg
pop
cmp
das
add
and
sbb
hlt
sub
jo
adc
sub
add
lods
frstor
cmp
fcoms
shl
xor
je
lcall
push
fnstenv
in
jmp
push
mov
xchg
stc
jle
lock
pushf
push
test
je
inc
icebp
mov
les
adcl
shlb
stos
cmpsb
sbb
cltd
inc
sbb
int
fisubrl
sbb
cmp
mov
hlt
shll
orl
mov
icebp
daa
cld
and
pop
sti
jmp
mov
cld
daa
lods
push
mov
mov
in
xchg
loopne
jae
dec
inc
jecxz
popf
sub
rcr
das
adc
mov
adcl
dec
lods
push
repz
outsl
ficomps
or
cli
pusha
mov
add
push
out
shll
xor
cltd
cmp
ficoms
in
cmpsl
inc
iret
outsl
push
mov
shll
int
cmpsb
leave
cli
sbb
mov
xchg
pushf
jnp
sbb
js
jnp
insl
push
fwait
sub
pop
pusha
jno
sbb
xchg
mov
sbb
fsubs
xchg
inc
inc
mov
int3
inc
push
fdiv
cmp
int3
xor
lods
loope
inc
cmp
mov
cld
jmp
push
push
mov
mov
mov
jno
or
or
mov
inc
pop
dec
adcb
sbb
in
add
es
adc
add
mov
jg
ret
xor
dec
aam
pop
mov
xchg
loopne
fsubrs
js
push
rolb
xchg
in
sub
push
stos
jns
scas
add
int3
ds
jno
adc
mov
push
xor
xchg
and
xchg
sti
push
lock
lcall
sbb
fistl
inc
movsb
dec
iret
xor
js
rcl
aas
or
enter
inc
test
lods
lock
xchg
shl
scas
dec
inc
rcl
sub
add
jmp
or
ficoms
lret
jae
push
leave
shll
pop
or
cmc
mov
enter
mov
mov
adc
xor
int
cld
xor
adc
cmp
lret
dec
dec
lods
dec
xor
jo
mov
cmp
repz
mov
xchg
aaa
mov
jb
mov
cmp
push
xchg
popa
or
fimull
movsb
movsb
push
minps
jns
js
das
mov
jmp
lahf
dec
popa
sub
and
pop
mov
clc
dec
test
out
sub
imul
xchg
fs
jge
or
out
imul
or
mov
xchg
push
mov
xor
sbb
xchg
dec
inc
cmp
mov
dec
insl
je
fisttpl
lock
or
popa
imull
js
push
mov
cmp
out
pop
pop
and
shlb
lcall
dec
lahf
inc
push
and
mov
cmp
jo
pop
dec
mov
xor
setns
scas
decb
push
push
jnp
std
push
notl
push
mov
jmp
xchg
pushf
cmpb
jl
jmp
xrelease
push
gs
push
xchg
ljmp
and
sbb
add
pushf
stos
mov
repnz
mulb
sti
adc
or
imul
or
insl
shll
nop
daa
mov
xchg
dec
mov
pop
adc
push
fwait
jbe
xor
fdivs
inc
dec
daa
es
mov
out
scas
mov
adc
inc
js
clc
cli
jno
sets
ds
adc
pop
mov
mov
and
and
mov
in
pop
push
adc
mov
add
in
nop
nop
xchg
pop
loope
jmp
or
mov
and
xchg
cmpl
jg
adc
add
into
stos
pusha
popf
sbb
push
mov
pop
or
adc
mov
push
pop
int
fnstcw
jecxz
inc
outsl
adc
mov
xor
cmp
pusha
lcall
xor
imul
jo
mov
call
push
mov
gs
addl
test
sub
mull
dec
cmp
xor
jb
aas
jns
inc
pop
jg
adcl
call
hlt
nop
add
andb
enter
icebp
mov
lea
dec
push
jmp
or
das
and
sbb
in
or
cwtl
adc
enter
insl
xchg
or
fidivrs
les
rcll
imul
dec
fldl
sub
daa
ds
decl
push
or
inc
add
push
push
addb
test
xchg
cpuid
push
and
bound
lahf
sahf
mov
and
jg
pusha
cmp
inc
sub
jge
out
cmp
shr
xchg
gs
das
cli
mov
push
ljmp
je
lahf
std
es
hlt
cmpxchg
jo
pop
inc
xor
sbb
imul
mov
cltd
test
insl
jne
fcomip
dec
les
inc
jg
pop
xor
dec
inc
rcll
out
fcomps
mov
cmp
and
add
or
fwait
mov
push
sub
outsl
add
mov
clc
outsl
sarl
into
repnz
mov
stos
dec
into
or
xorb
stos
adc
mov
sbb
add
or
xchg
and
mov
mov
lahf
mov
inc
jbe
add
in
xor
mov
adc
repz
ljmp
push
mov
divl
ljmp
push
jbe
mov
inc
lret
mov
popa
xchg
or
in
stc
dec
add
add
mov
xor
inc
mov
push
mov
push
rorl
lock
mov
xor
dec
adc
in
xlat
cmpsl
scas
xchg
and
aad
sub
cmpsl
hlt
lahf
jo
stos
aam
popa
dec
inc
lods
or
lock
je
lret
lock
leave
push
xor
dec
lds
cmp
hlt
or
je
mov
ds
fwait
es
shlb
jecxz
cmp
sub
je
fdivs
pusha
push
inc
mov
and
sub
out
cmp
pusha
cld
mov
cmp
fcmovb
repnz
xchg
xor
add
movsl
rorl
cmp
pop
mov
cmp
pop
shl
xchg
addr16
push
mov
movsl
mov
sbb
js
jne
jae
adc
inc
dec
mov
ss
jno
adcb
cmp
loop
and
test
popf
int3
aam
add
movsb
in
aam
jle
or
fimull
mov
push
pushf
mov
cmp
lret
sub
leave
xor
xchg
cld
sbb
mull
leave
fnstenv
test
adc
sub
lea
cwtl
sahf
jg
dec
outsb
mov
fstps
into
cmp
inc
dec
mov
or
sbb
pop
mov
mov
or
xchg
mov
dec
in
jbe
mov
jg
rclb
fld
les
test
aas
or
lods
outsb
or
mov
and
in
stos
cmp
fisubl
pop
add
clc
cmc
inc
mov
cld
jne
mov
pusha
cmpsb
enter
pusha
fidivrl
xchg
scas
push
loope
bound
mov
mov
loop
add
cltd
je
fisubl
sbb
push
fwait
adc
and
orb
ja
fnsave
adc
or
xchg
imul
imul
fidivs
imul
stos
rcll
test
cli
mov
std
je
cmc
jge
popa
movsl
insb
fwait
xchg
sub
insb
rcl
enter
cld
and
test
incb
repz
fisubs
mov
sub
mov
push
stos
add
out
adc
out
push
subl
adc
push
lea
aaa
lea
dec
pop
or
lret
insb
enter
les
in
jl
sbb
fstps
test
enter
jno
pop
ficoms
orb
fadds
call
add
lds
sub
cltd
sub
test
adc
adc
dec
sarb
lds
mov
ds
lcall
insl
les
dec
in
push
test
jge
loopne
fldt
push
add
sbb
into
mov
loop
mov
or
test
jnp
push
rclb
inc
les
jge
int3
mov
adc
push
adc
inc
aaa
mov
push
mov
sbb
sbbb
sbb
sahf
jo
call
or
sti
cmc
pushf
lods
xchg
popf
push
fwait
push
mov
adc
enter
repz
adc
loope
or
insb
mov
scas
pop
sbb
jne
xor
add
cmp
adc
lahf
mov
push
fidivs
inc
testl
inc
push
xchg
mov
push
arpl
nop
jg
divb
test
inc
ret
into
mov
iret
std
xchg
loope
testb
bound
clc
inc
les
sbbl
or
push
test
jno
xchg
mov
andb
daa
mov
in
or
ja
adc
cwtl
mov
pop
rolb
jbe
adc
in
push
bound
mov
mov
call
hlt
xor
mov
xor
imul
jbe
and
sbb
jb
jl
divl
inc
outsl
mov
into
sub
jecxz
adc
iret
cmp
ror
aaa
popa
jns
sbb
adc
in
ja
lret
mov
cmp
shrd
sbb
pop
cmpsl
pop
fadd
mov
popa
and
push
int
iret
testb
ja
sub
sbb
scas
leave
sub
sub
lds
shrl
ja
test
mov
adc
mov
xor
mov
or
and
xchg
cld
test
pop
popf
outsl
hlt
inc
push
stos
inc
rcrl
insb
jae
sbb
push
jp
test
movb
cmpsb
or
testl
or
jb
arpl
insl
popl
loop
out
cmp
add
inc
shll
int
dec
fs
adc
push
lcall
popa
sarl
cwtl
cld
shrl
lcall
addr16
pop
aaa
shl
insb
stc
out
int3
sbb
fs
push
and
mov
cltd
fmuls
and
mov
push
movsb
dec
push
push
and
fiaddl
adc
clc
out
push
sti
repnz
adc
out
in
jge
xor
movsl
dec
insb
mov
cmp
fsubr
pop
mov
or
sub
mov
or
loope
mov
mov
repnz
cmpsb
js
or
cmp
jle
lcall
lods
packsswb
mov
mov
inc
fnstsw
fwait
mov
clc
jle
mov
adc
lret
push
daa
repz
jne
fidivrs
je
jne
sbb
dec
inc
test
call
cmp
xor
aad
insb
mov
cmp
and
fwait
popf
outsb
and
xor
pop
adc
inc
leave
mov
push
push
das
xchg
xchg
clc
aam
cld
faddl
add
call
xchg
pop
dec
add
aaa
add
mov
mov
inc
mov
movlps
stc
sahf
ret
shll
test
in
out
push
std
mov
fdivrs
dec
push
or
aad
cmp
sub
inc
call
daa
lcall
mov
jmp
insb
or
dec
push
mov
mulb
adc
aas
lods
sbb
call
leave
xchg
nop
or
jno
movsl
fnstsw
lret
std
jne
sti
aas
popa
test
push
sbb
aad
fsubs
pusha
sub
and
sub
sbb
adc
dec
inc
add
and
jns
jl
repz
inc
bnd
std
sub
or
mov
stos
int
outsb
or
dec
aad
jp
push
loope
test
add
pop
xlat
jge
mov
clc
outsb
cltd
pop
adcb
dec
mov
lods
arpl
dec
lret
dec
cmp
test
mov
adc
xor
mov
cmp
int3
pop
xchg
ret
pop
push
shr
imul
lods
hlt
lods
xor
push
sbb
mov
pop
insl
frstor
cmc
in
adc
mov
lods
inc
popf
cmp
leave
fs
jbe
cmp
add
push
inc
push
push
roll
add
cmp
push
fnstcw
dec
into
push
adc
in
push
rorb
mov
sub
das
sbb
jge
insl
cli
pop
mov
push
sbb
js
loope
cmp
mov
pop
js
add
call
sbb
push
ja
shr
pop
out
mov
inc
push
call
lret
adc
int3
push
addr16
pop
ja
cld
xorl
das
mov
dec
and
lret
sarb
inc
aad
jp
jmp
test
or
imul
lret
fisubrl
mov
outsb
nop
out
cmp
movsl
mov
mov
jne
jecxz
shl
aam
fwait
int
repz
out
adc
sbb
icebp
xor
das
or
mov
inc
lock
xchg
filds
cmp
mov
frstor
repnz
cmp
lds
jno
and
inc
aam
imul
pop
jp
ja
push
les
lret
add
pop
fisubrl
idivl
movsb
jae
shlb
insl
push
cmp
jo
push
push
in
lock
sub
sbb
mulps
scas
je
cmp
mov
and
je
mov
test
pop
adc
stos
int
hlt
loope
adc
mov
push
and
pop
mov
into
mov
insl
xor
sbb
mov
mov
mov
xor
ds
xor
data16
ror
push
add
or
lea
test
call
out
data16
or
lea
push
jg
jp
mov
popa
out
and
add
adc
sub
lods
mov
push
add
js
mov
or
xlat
xchg
out
ja
aas
orl
push
insl
mov
sub
xchg
lahf
adc
subb
add
cmp
out
dec
cmp
notb
in
arpl
call
test
mov
mulb
out
imul
dec
int
loope
mov
push
mov
push
popa
fcmove
bound
rorb
inc
in
pusha
adc
add
imul
in
int3
iret
and
idivl
addr16
stc
jecxz
xchg
mov
jnp
push
xchg
in
add
add
sbb
and
movsb
into
lret
roll
jle
lock
adc
add
mov
loop
int3
ret
popf
call
gs
ljmp
in
lods
sub
lret
xchg
adc
mov
jp
mov
rcrb
sub
mov
in
mov
mov
mov
or
mov
ds
xchg
xchg
addr16
cmp
push
ror
repz
jecxz
add
mov
cmpb
jns
lods
pushw
mov
popa
js
add
and
dec
jns
jb
xchg
inc
mov
mov
not
mov
sbb
stc
ds
testb
push
enter
adc
shll
movsl
or
stc
or
and
mov
xchg
cwtl
subl
xor
rorb
jbe
jp
mov
insb
sbb
mov
adc
ret
hlt
sbb
popf
cmpsb
xor
xor
push
scas
js
push
sbb
lods
es
arpl
flds
dec
test
dec
into
sahf
sbb
sar
rcrb
mov
leave
imul
push
repnz
pop
jno
xor
jl
fnstsw
sub
aam
mov
movsl
ss
or
mov
in
cmp
mov
mov
jp
xchg
fs
cltd
cmpsl
xchg
jne
loop
cmpsb
sbb
lret
aad
pop
fadd
jge
cwtl
mov
sub
xor
pop
iret
mov
xchg
cmc
ret
aas
jb
icebp
xchg
cmp
out
push
mov
cmpsb
xchg
aas
jle
fidivs
in
adc
aas
in
out
push
jmp
clc
sbb
fsubs
push
sub
fdivrs
lret
jns
cmpsl
fstps
pop
add
sti
xorl
sub
test
adc
sahf
jmp
add
mov
mov
repz
lret
sahf
inc
addr16
in
mov
stos
adc
test
mov
xchg
lahf
xchg
mov
adc
test
test
insl
sbb
push
aaa
add
das
jl
inc
push
out
push
dec
negb
inc
les
add
imul
out
push
imul
jbe
adc
push
jae
push
mov
das
sub
mov
xchg
or
fistl
or
xchg
pop
mov
adc
cmpb
sbb
int3
rcl
cli
cmp
mov
stos
mov
out
push
xlat
push
jae
scas
cwtl
jb
pop
es
jecxz
fs
xor
js
repnz
jnp
cmp
jg
cmp
out
testb
jbe
sbb
mulb
in
sti
out
mov
sbb
leave
mov
fstl
inc
pop
test
inc
xor
cli
popa
or
cmpsb
mov
or
xchg
inc
mov
jns
xchg
mov
and
pop
popf
popa
jp
cmp
inc
in
cs
scas
hlt
mov
ja
mov
scas
mov
gs
pop
jno
xchg
popf
imul
push
cmp
push
mov
push
and
mov
xchg
xchg
inc
inc
ljmp
in
add
lret
mov
dec
addr16
cltd
pop
dec
insl
adc
dec
je
fstp
xlat
loop
push
fnstsw
mov
jae
ret
cmpsl
add
popf
lret
rorb
cmpsb
jb
out
es
pushf
push
dec
fimull
mov
dec
xchg
push
or
int
cmp
mov
dec
push
sub
imul
mov
iret
jns
mov
xchg
daa
and
mov
inc
mov
mov
rcl
adc
pop
in
enter
mov
cmpsl
fs
and
xchg
jle
and
xor
out
int
push
push
dec
imul
xor
sub
xchg
inc
cmp
ret
cmc
sbb
pop
or
in
pop
clc
push
fadds
nop
pop
add
xlat
jno
sub
mov
inc
cwtl
scas
test
insb
adc
mov
rcrl
pop
xor
adc
add
pushf
fbld
inc
arpl
mov
dec
cmp
lods
inc
loope
fcomps
fisttpll
sbb
fwait
in
push
fwait
push
fldz
pop
push
adc
cwtl
push
sahf
rcl
push
xchg
add
mov
movsb
sub
cltd
xchg
dec
mov
mov
mov
xchg
iret
gs
pop
notl
jnp
insl
mov
pop
xor
cmpsb
jg
cmpsb
repz
jno
scas
dec
adc
jo
cmc
cmpsb
testb
inc
mov
push
sti
jg
jbe
ret
xchg
out
cmp
and
scas
sub
sub
jne
mov
sti
fists
or
pop
xor
or
lods
push
xchg
mov
mov
imul
imull
inc
rclb
xchg
addr16
push
stos
out
outsl
subl
stos
inc
cltd
bound
clc
sbb
movsb
xchg
xchg
mov
xchg
insb
push
sub
xor
imul
dec
mov
inc
push
xor
xor
mov
jo
add
aad
sbb
adc
jl
or
lock
std
adc
jg
shrb
or
jb
popf
call
mov
mov
cmp
icebp
inc
cmp
mov
sbb
in
stc
aad
movsl
pushf
int3
lret
add
xchg
cwtl
xor
jmp
jae
fidivrl
ds
out
stos
inc
iret
aaa
aad
lods
jmp
ror
mov
out
daa
or
rcrb
and
pop
or
sub
leave
jle
scas
push
popa
aam
lret
mov
mov
cli
push
out
rol
notl
ret
pop
lods
and
idivb
mov
sbb
xchg
sub
adc
xchg
daa
pop
ret
pop
or
les
push
ljmp
das
push
rcrl
sub
pop
out
push
inc
mov
jecxz
pop
das
inc
loop
mov
dec
stos
leave
cmp
adc
icebp
fadds
iret
sub
add
mov
cmp
nop
call
movsb
mov
sub
jle
stc
add
dec
xchg
mov
shrl
in
lahf
cwtl
enter
or
in
inc
fadd
enter
mov
add
push
sub
test
mov
cmc
bound
mov
es
les
jb
mov
les
loopne
movl
jmp
push
movhps
cmpsb
es
scas
xchg
lods
mov
out
cmc
or
cwtl
pushl
xchg
push
mov
test
movsl
out
insl
scas
movsb
or
outsl
xchg
dec
movsb
stos
xchg
out
mov
data16
popf
enter
loopne
jl
jl
sub
in
mov
stos
es
and
sahf
mov
and
mov
jmp
call
xor
mov
push
xchg
pop
iret
dec
pop
scas
out
add
shrb
testb
mulb
stos
aam
clc
or
or
jge
mov
mov
xor
push
sbb
push
aas
mov
sahf
or
inc
sarl
insl
dec
int
test
sbb
iret
nop
mov
dec
into
xchg
movsl
repz
out
mov
out
jmp
addb
pop
jl
push
and
cmp
data16
jb
fwait
xchg
mov
mov
jnp
dec
lock
mov
movsl
data16
jmpw
hlt
push
or
subl
ret
sub
outsl
stos
adc
aaa
or
jnp
cmpsb
mov
insl
mov
out
xchg
mov
lahf
ficoms
xchg
fistps
call
sub
add
rclb
and
shl
in
dec
pop
test
aas
shr
sbbl
fisttps
cmpsl
cs
xchg
mov
adc
aas
adc
cmp
or
fs
ret
aad
clc
xchg
pop
mov
mov
dec
push
mov
scas
push
mov
add
xchg
or
test
in
in
mov
repnz
dec
or
inc
cli
repz
fwait
daa
fcmovnb
ds
pop
or
rorl
out
in
xorb
sbb
and
repz
aam
mov
mov
enter
xlat
test
std
cld
cltd
mov
pop
xchg
pop
repz
push
push
push
xchg
fidivrl
lds
popl
pop
add
aaa
and
scas
je
dec
mov
and
addr16
adc
stos
int
inc
outsb
pushf
sbb
sub
testb
arpl
gs
mov
add
outsl
lret
int
cmp
jbe
jns
pop
xor
cltd
push
aam
dec
nop
fs
mov
in
mov
testl
leave
lds
scas
inc
mov
movsl
jmp
mov
stc
dec
enter
nop
cmp
or
rorb
mov
sti
js
int3
out
push
je
in
xchg
push
cmp
aam
pop
inc
pop
add
fstps
jmp
je
sub
fsubl
aad
and
add
jecxz
sti
pop
loopne
pop
add
pop
lahf
rcll
pop
and
xchg
lock
and
negl
jne
inc
cltd
inc
sbb
sbb
jne
test
pop
and
push
hlt
mov
push
xchg
dec
xor
xchg
dec
pusha
test
iret
xor
cltd
cmpsl
or
outsb
adc
inc
fsin
sahf
jne
inc
push
lea
lcall
ss
push
or
mov
push
jne
mov
imul
xor
adc
fprem
mov
je
mov
jl
jmp
inc
in
sub
rol
fwait
mov
jne
fistl
jl
jno
mov
cwtl
mov
mov
aam
add
push
add
and
sti
icebp
out
sbb
push
cmp
cmc
int3
sbb
std
mov
es
clc
xchg
lret
lcall
in
jge
jg
pop
addl
jae
push
test
xchg
jno
push
lods
aam
test
mov
mov
xchg
mov
pop
test
sbb
mov
and
pop
push
lods
fwait
mov
rcrb
push
aas
movsl
lahf
xor
sbb
mov
jne
bound
cmpsb
mov
and
cmp
cs
push
sbb
xchg
hlt
cmp
ja
add
lret
fldenv
popf
adc
fsubrl
sbb
inc
adc
and
cwtl
sub
adc
jmp
jno
cmp
cld
push
imul
iret
mov
adc
ss
push
test
out
or
out
movsb
pop
and
data16
jle
xor
out
out
fisttpl
iret
lock
mov
mov
pop
dec
popl
mov
jo
sub
mov
add
lock
xor
inc
inc
in
daa
movsl
rcrb
into
into
pop
fldt
jno
int3
pop
test
fdivrs
fldt
xor
inc
xor
call
mov
popa
mov
jnp
and
xlat
mov
addr16
xor
dec
adc
lret
add
add
sub
push
xchg
dec
cltd
jecxz
mov
popf
jmp
xor
xor
lahf
stos
xchg
lods
mov
xlat
xorb
mov
sbb
mov
bound
push
scas
sub
mov
push
hlt
pop
movsb
pop
mov
and
loop
mov
mov
push
add
loop
aam
cmpsl
pop
mov
push
sub
push
push
adc
add
cmc
inc
jp
stos
and
cmpsb
or
lcall
push
les
repz
sbb
sbb
clc
sub
es
pop
lods
adc
xchg
mov
inc
dec
aam
sbb
mov
cmpb
in
movsb
imul
adc
pop
adc
fwait
push
ret
xchg
dec
ds
enter
sbb
scas
popa
pop
mov
out
lahf
std
mov
mov
pusha
imul
push
mov
push
xchg
outsl
lods
sub
stos
adc
lahf
test
stos
sub
xchg
sti
jbe
insl
adc
sub
push
xor
aad
pop
inc
lahf
inc
mov
lret
mov
mov
push
jb
adc
insl
out
rorl
mov
fldt
xchg
lret
ret
cld
mov
outsl
jge
andl
push
adc
pop
pop
fsubr
xor
push
xorl
mov
pushl
jo
xchg
jb
pop
mov
add
jl
inc
adc
out
shlb
jno
aaa
inc
xchg
xchg
enter
lds
out
mov
dec
pop
andl
mov
aas
push
test
jmp
mov
push
jge
push
and
stos
repnz
add
imul
incl
xor
jno
mov
pop
test
icebp
ss
out
in
xor
je
sub
in
stos
push
shld
mov
das
fnsave
lahf
sub
pop
fistl
loopne
popf
pop
popf
and
les
mov
and
mov
push
cltd
arpl
mov
into
add
jecxz
cltd
mov
add
lret
adc
lock
daa
cmp
mov
push
pop
es
add
test
dec
pop
jmp
add
xchg
lret
sbb
inc
xorb
push
pop
lock
aaa
lods
shrl
xchg
jecxz
int3
jbe
es
aad
mov
push
or
mov
and
mov
sub
push
sub
or
test
push
mov
nop
clc
outsb
sub
mov
lock
pop
push
mov
jle
mov
cs
adc
and
gs
jbe
mov
sarl
xorl
cmp
je
int3
sbb
div
popf
and
mov
mov
pop
sub
fistl
in
cmp
mov
cmp
pop
jecxz
inc
sub
movsb
pushf
adc
mov
jae
add
enter
mov
mov
aas
inc
or
sti
les
aam
ss
inc
icebp
fs
clc
dec
dec
arpl
pop
js
xchg
dec
fwait
jmp
mov
jge
xchg
pusha
daa
xchg
popf
inc
arpl
daa
in
sti
pop
pop
loope
add
aas
add
inc
dec
lcall
mov
push
mov
add
dec
or
sub
lret
xchg
and
pop
aad
pop
imul
jae
sbb
popa
xchg
pop
int
push
add
faddl
inc
les
cmp
sub
inc
sub
mov
add
bnd
lods
cmp
xor
jo
incb
ja
xchg
or
lret
imul
int
push
test
icebp
push
or
pop
or
xor
insl
cmpsl
add
or
hlt
imulb
fcompl
into
jle
outsb
mov
jl
lcall
lcall
daa
incl
lock
outsl
mov
or
add
add
sbb
or
fdivrl
clc
mov
jmp
jl
mov
test
fidivl
ss
push
mov
mov
jo
pop
cmpsb
test
sbb
test
in
lcall
pusha
dec
xchg
test
stos
mov
lret
sbb
or
cltd
add
rcll
shrl
test
or
stc
add
mov
jg
add
inc
adc
loop
inc
jge
and
jnp
jae
mov
in
xchg
int
xlat
or
xchg
mov
fwait
sbb
dec
cmc
mov
repz
add
jecxz
and
cmc
or
or
push
jb
jge
push
sbb
lret
sub
scas
jle
lock
out
jne
cmp
cltd
inc
pop
pop
pop
dec
lea
sub
adcl
add
arpl
push
xchg
es
and
dec
out
xchg
out
xchg
pop
es
xchg
mov
adc
mov
loopne
adc
nop
dec
fldl
jle
imul
into
test
mov
xchg
mov
int3
adc
fdivr
push
sbb
loopne
insl
pop
pop
mov
lock
push
andb
gs
push
or
dec
xchg
adc
xchg
mov
push
adc
cli
inc
mov
push
mov
cmp
add
jo
pop
inc
mov
lcall
repnz
dec
pop
fistps
cmp
jo
xlat
push
cli
in
in
cmovne
lret
xor
jne
cmpl
push
iret
insl
stos
hlt
arpl
adc
std
or
or
xchg
ds
push
mov
push
sbb
sub
sub
cmp
sbb
xchg
mov
sar
stos
mov
out
test
stc
mov
inc
mov
into
mov
addl
mov
cmp
es
decl
jg
inc
js
xchg
dec
int3
xor
popf
mov
rorb
xor
push
movsl
mov
push
icebp
add
in
adc
aas
xchg
in
bound
lea
ljmp
fidivs
sub
pop
loop
mov
xor
push
adc
inc
add
lock
pop
add
mov
mov
push
test
cld
push
je
cmp
mov
push
push
and
adc
pusha
lret
inc
lahf
jp
fidivl
pushf
dec
das
xor
scas
mov
jge
xor
sbb
cmc
rclb
xchg
outsl
mov
mov
push
xchg
sbb
scas
pop
jecxz
push
or
ja
sar
dec
or
in
negb
pop
mulps
cmpsb
push
jmp
jns
mov
push
mov
xchg
or
out
dec
mov
movsl
mov
divb
into
and
push
push
scas
lods
pop
sub
dec
or
das
ret
cltd
cmp
arpl
mov
pop
repnz
divl
pushf
and
dec
mov
shrb
and
xchg
and
testl
jae
mov
mov
repz
in
int
push
je
xchg
add
aas
shr
jbe
lock
mov
mov
mov
lods
xchg
dec
add
xor
dec
lock
jne
xchg
das
enter
push
adc
adc
xchg
hlt
jno
cs
inc
sub
outsb
test
movsl
xor
mov
and
pop
sbb
outsb
faddl
in
mov
mov
pop
and
aam
mull
je
adc
adc
or
and
out
jmp
inc
mov
pop
mov
mov
fcoms
cmp
pop
sbb
mov
imul
gs
mov
cmp
sub
shll
jge
clc
inc
scas
or
push
or
inc
mov
inc
and
aaa
inc
addb
sti
and
and
xor
push
in
mov
setnp
outsb
push
rcrb
push
xor
ret
cmp
in
rolb
xchg
pop
xor
cli
mov
push
in
pop
push
or
div
rclb
shl
outsb
leave
add
cmp
arpl
mov
popa
frstpm(287
pop
sub
pop
jle
int3
shrl
test
pusha
xchg
call
push
xchg
xor
jmp
sahf
cmp
mov
and
xchg
dec
adc
lds
push
stos
and
popf
or
lcall
fistps
outsb
cmp
movsb
mov
push
arpl
mov
sahf
push
scas
or
mov
sahf
and
or
cmp
loop
lret
xor
shr
into
test
test
or
xlat
dec
sahf
dec
scas
incl
fidivrs
in
outsb
sub
pop
daa
mov
fwait
or
aaa
or
ljmp
sbb
pop
fwait
in
add
sub
aas
iret
and
lret
repnz
clc
sub
lea
arpl
push
cmp
pop
adc
sbb
es
and
xlat
adc
mov
mov
cwtl
prefetch
inc
dec
mov
sti
or
cmpsb
adc
je
loopne
cmp
and
jle
rolb
in
stos
in
mov
cmp
fsub
ja
test
shl
roll
in
cmp
inc
jb,pt
push
outsl
loop
push
jno
jp
dec
stos
aam
or
mov
xrelease
fisubs
stc
and
rolb
std
fstpt
sub
rcll
negb
pusha
out
adc
leave
or
cmp
mov
lcall
in
hlt
outsl
ret
xchg
xlat
cltd
push
je
sbb
sub
xlat
test
adc
mov
add
pop
push
mov
rcll
add
pushf
aas
jmp
cmp
fcmovnb
lods
dec
loop
xchg
sbb
push
mov
mov
mov
add
inc
jns
mov
aaa
fwait
outsb
aad
out
icebp
xor
es
es
jle
cmpsb
adc
in
xchg
cltd
push
xchg
stos
subb
cwtl
jg
pop
loop
fwait
cmp
lods
add
jmp
cmp
ficomps
sub
and
cwtl
rclb
sbb
pop
and
or
leave
lds
scas
out
das
into
sbb
loop
imul
test
test
add
clc
jle
call
sub
addr16
xchg
lock
fnstenv
cmp
or
xchg
imul
pop
arpl
sbb
and
inc
icebp
xchg
rcr
dec
loopne
jae
cltd
xor
or
ja
into
jp
jp
inc
pop
aas
sbb
ret
xchg
out
sub
pop
mov
and
inc
aaa
ret
and
imul
xchg
js
push
and
lods
xor
cmp
mov
or
bound
jo
xor
lahf
jge
addb
cmp
pop
and
cmc
hlt
jo
xchg
pop
inc
cmp
test
outsl
xor
bnd
js
andb
dec
pushf
cs
in
fidivrl
add
mov
int3
or
cli
mov
ja
std
sub
cmpsl
cld
ds
hlt
push
jg
cli
xchg
xchg
pop
inc
andb
pushf
inc
push
cwtl
mov
jae
pop
cld
ret
in
mov
dec
ja
dec
lret
add
stos
sahf
adc
sahf
insb
jmp
xchg
lret
mov
add
and
data16
mov
jae
orl
xor
mov
jbe
data16
or
jl
pushf
sar
mov
movsb
push
outsl
jge
push
jnp
dec
addr16
cmp
and
imul
clc
pop
fmuls
cwtl
add
jno
outsl
imull
jmp
dec
cli
sbb
movsl
pushf
ja
push
push
mov
push
call
lahf
fs
fsubrp
movq
fwait
mov
inc
lea
gs
inc
xor
jno
or
in
xor
xlat
xor
xor
xchg
clc
ja
or
testl
fwait
cmp
es
ret
bound
dec
and
xor
xchg
in
pop
in
mov
hlt
lret
sbb
adc
pop
xor
push
rcll
mov
or
test
test
xor
loope
or
adc
mov
jne
jmp
cltd
adc
xor
adc
xor
cmc
sbb
xchg
xor
std
push
stos
loope
lds
pop
push
and
mov
push
mov
hlt
repnz
xchg
mov
jne
dec
in
sbb
adc
popf
sbb
sub
popf
fmul
inc
jae
adc
xchg
sub
call
les
or
sahf
cmp
mov
and
imul
dec
pop
out
push
arpl
push
cmp
push
mov
xchg
xchg
inc
sub
cmpsb
int3
sti
jecxz
mov
xor
inc
pop
mov
push
adc
hlt
nop
test
sbb
adc
test
adcl
push
dec
sub
adc
loopne,pn
stos
into
mov
fbld
jge
loopne
repz
xor
shlb
leave
cmc
mov
pop
lret
scas
sti
jg
add
sub
imul
repnz
test
fsubs
xchg
xor
lds
pop
fmull
sub
cmp
xor
xlat
fstpl
cmpsl
xchg
sbb
mov
fsubs
nop
push
loope
mov
clc
into
pop
movsb
xchg
pop
and
negl
test
jbe
loope
adc
scas
fnstenv
or
lds
daa
xchg
mov
ret
in
push
push
mov
arpl
rorb
sarb
in
cmc
mov
loopne
iret
or
in
pop
jno
enter
jns
fidivl
test
jmp
std
mov
sbb
cmp
add
repz
rclb
push
mov
js
scas
mov
or
jecxz
mov
add
xor
aam
jns
fnstenv
xor
xchg
mov
push
pop
pop
pop
jge
shrb
lahf
jle
jmp
mov
cmpb
ret
mov
mov
push
and
xchg
adc
mov
cmp
frstpm(287
lret
xchg
push
mov
rcl
lret
lret
sbb
mov
or
inc
aam
popf
lahf
dec
scas
popa
movsb
out
add
xchg
dec
lahf
pop
jp
movsl
xchg
sar
out
dec
out
lock
xor
sti
mov
scas
test
pusha
aas
jecxz
rorb
xchg
inc
add
mov
and
shll
enter
repnz
aas
mov
imul
cli
xlat
mov
push
push
and
push
sbb
fldl
add
dec
mov
sti
mov
imulb
das
repnz
icebp
lods
cmp
xorb
sbb
fstpl
mov
in
mov
cmpsl
jge
clc
addr16
sbb
adc
mulb
cli
pop
pop
popa
lods
dec
mov
mov
sahf
push
cmp
lret
adc
les
sbb
repz
cmp
fists
cmp
ljmp
inc
dec
lods
mov
adc
out
popl
and
xchg
dec
mov
jbe
ss
xchg
pop
out
addr16
sbb
aaa
addr16
pop
sub
sbb
sub
jbe
mov
mov
push
xor
dec
pop
daa
pusha
stos
js
or
add
dec
std
jmp
mov
ljmp
mov
shll
cwtl
and
add
out
repnz
js
xchg
push
push
rorl
xchg
or
jno
insb
insl
mov
repnz
fists
loope
mov
and
out
pop
jle
dec
push
mov
aaa
fisubl
and
ficoms
jge
enter
sub
cmp
add
aam
inc
cmp
test
mov
stos
pop
stos
xlat
or
xor
adc
cmp
or
jge
mov
iret
sub
mov
fildl
mov
ret
or
push
pop
xchg
mov
neg
cs
mov
mov
dec
hlt
aam
push
daa
mov
test
pusha
sub
jmp
sbb
cs
into
sbb
mov
sbb
mov
fidivs
mov
test
jle
pop
ljmp
dec
and
cmp
mov
das
push
loopne
int
fs
push
push
or
mov
inc
loopne
adc
mov
ficomps
inc
jmp
xor
fxch
add
inc
repnz
jmp
sub
mov
test
inc
dec
out
enter
push
inc
push
xorb
fidivl
incl
into
push
out
jnp
fildll
stos
fwait
mov
mov
mov
scas
cmpsb
and
rorb
mov
pop
enter
add
outsw
sub
out
inc
stos
cmpsb
and
lahf
lahf
pop
ljmp
js
jmp
xchg
iret
jl
push
sahf
rcrl
out
mov
js
loope
fnsave
sbb
pop
das
in
arpl
mov
sub
fwait
andb
lea
fdivrl
faddl
test
xchg
dec
insl
mov
inc
sbb
mov
pop
push
data16
insb
add
mov
rol
sub
ret
jl
rolb
js
fwait
add
popf
cmc
ja
or
adc
push
xchg
cmp
jb
sbb
mov
std
sub
jnp
scas
inc
mov
mov
ret
sub
pop
cwtl
push
aad
ret
and
test
decb
test
enter
xchg
or
dec
mov
pop
lea
dec
xchg
jle
cmpl
jp
rcrl
pusha
mov
fs
inc
xchg
fimuls
jo
push
add
ret
pop
lock
out
es
dec
push
ds
jp
lods
xchg
dec
in
jecxz
adc
jbe
cmpsb
sub
clc
test
ja
insl
repnz
test
mov
mov
dec
adc
sbb
ss
pop
push
sarb
adc
xchg
imulb
les
dec
repz
cmc
outsl
pop
inc
mov
js
rorb
stc
and
lock
lock
xchg
mov
icebp
xor
xchg
push
mov
iret
jge
sbb
pop
pop
jl
cmp
push
and
pop
mov
xor
add
in
jge
cmp
lcall
add
lds
dec
fcmove
inc
pop
mov
icebp
dec
lret
sti
cmc
jo
movsl
mov
ljmp
xor
cli
test
xor
dec
into
mov
sub
mov
cmpsl
and
insb
nop
pop
pop
jp
cmp
lds
adc
loopne
fdivr
scas
push
in
xchg
je
je
mov
sti
shll
cs
rcl
inc
shl
sub
int
out
cltd
pop
inc
sub
cmp
clc
popa
adc
sbb
mov
fsubr
incl
inc
mov
or
mov
nop
adc
xchg
lock
ret
jb
ret
jl
push
into
stc
dec
bound
jle
and
push
loope
push
insb
adc
jge
nop
scas
jecxz
mov
dec
fidivl
sarl
jg
in
xor
std
push
sbb
push
icebp
int
jp
sbb
pushf
das
inc
dec
lret
aaa
faddl
inc
clc
pushf
dec
xchg
xor
movsb
mov
jns
movsb
into
dec
mov
clc
or
insb
clc
ljmp
push
mov
mov
sub
jne
insl
mov
roll
das
ja
fucomp
mov
arpl
inc
ljmp
loopne
xor
lods
data16
mov
push
std
push
jnp
dec
test
mov
sbb
imul
lret
add
inc
push
push
mov
jo
jmp
push
inc
inc
mov
leave
xchg
sbb
fsubl
inc
lock
mov
pop
mov
lea
pop
popa
jo
mov
mov
push
subl
mov
scas
adcl
fbld
fisubrs
xor
orl
xchg
pop
je
fwait
nop
push
mov
lahf
lods
xor
ljmp
ret
imul
orb
das
fiadds
xor
mov
int3
in
and
cwtl
mov
xor
inc
dec
aam
fwait
rcrb
data16
inc
imul
call
xor
cli
or
in
adc
aam
arpl
rorb
in
or
dec
cmp
cmp
sub
mov
in
js
push
test
enter
cmpb
push
sub
daa
inc
fsubr
pop
jg
inc
jecxz
dec
sbb
jmp
push
aaa
xor
dec
hlt
rclb
insb
out
ljmp
mov
data16
mov
lock
jp,pt
fisttps
sahf
rolb
dec
div
repnz
adc
stos
pop
adc
jecxz
in
mov
lock
sub
stos
adc
pop
pusha
rorl
push
and
es
xchg
cs
jbe
mov
push
adc
mov
lcall
repnz
scas
mov
adc
mov
ss
mov
mov
push
insb
mov
loop
pushf
jno
jg
push
out
je
out
dec
repnz
pop
mov
dec
pop
and
insb
or
ds
sub
mov
out
xchg
out
dec
and
pop
jmp
testl
push
maskmovq
lret
sbb
adc
adc
sahf
outsl
test
or
cmp
imul
pop
and
or
mov
xor
pop
cmp
pop
cmp
imul
mov
out
loope
ljmp
aam
adc
or
addb
test
add
cli
xchg
xchg
adc
out
xchg
loop
and
or
and
dec
pop
aam
sbb
pop
add
mov
sysexit
dec
nop
jp
loop
xchg
xorb
insl
or
call
mov
xchg
mov
adc
pop
push
lret
sti
mov
addr16
lret
out
imul
add
jb
cmp
scas
add
dec
dec
adc
je
cpuid
xor
mov
lret
cmp
adc
adc
push
cmp
stos
std
nop
sub
ja
jo
pop
add
test
cmpsb
scas
lods
xchg
cmc
sub
pop
stos
enter
push
insl
sbb
inc
insb
mov
shrb
pop
xchg
in
rclb
das
push
subb
add
xchg
out
sbb
mov
hlt
addr16
cmp
pushf
addb
xchg
jne
popf
pop
or
imul
adc
shrl
repz
dec
aas
leave
test
shrl
enter
das
mov
push
mov
cmp
lea
test
push
push
inc
pop
in
rcrb
push
jmp
or
cltd
hlt
adc
out
adc
pop
jae
ss
push
cmp
sahf
jmp
cld
inc
adc
xchg
stos
hlt
sbb
adc
sub
divb
mov
int
mov
and
arpl
pop
rcl
cmp
popf
adc
popa
icebp
std
dec
scas
in
js
push
and
dec
pusha
xchg
pop
lret
push
addr16
pushf
ljmp
sub
mov
sbb
scas
cmp
cmc
lods
xchg
lea
stos
nop
loope
cmp
aaa
imul
pop
int3
int
scas
mov
push
fidivrs
adc
xor
lods
pusha
mov
add
cmp
cmc
mov
in
and
jae
test
xor
push
dec
dec
ja
rol
imul
xor
testb
inc
pop
xchg
sub
mov
mulb
scas
jle
sub
jp
es
jne
mov
pop
es
push
cmpsb
shrl
mov
mov
mov
js
pop
or
mov
dec
inc
push
in
int
xchg
mov
shll
fstps
cld
inc
dec
mov
mov
stos
mov
push
mov
and
or
sbb
fs
dec
add
mov
popa
aam
lea
bound
outsb
fisttps
mov
sbb
push
test
and
iret
pop
iret
add
fnstenv
pop
lods
xor
sbb
fstps
outsb
popf
int
xor
cmp
cltd
xchg
and
xchg
push
xchg
mov
rorb
test
adc
ljmp
jge
mov
dec
insl
xchg
mov
std
push
pop
inc
movsb
sbb
in
add
je
nop
nop
adc
stos
adc
icebp
inc
add
pusha
dec
cltd
lea
sbb
xchg
mov
aam
cmp
aam
push
rcll
fsts
test
mov
mov
divl
push
sub
adc
pop
data16
popa
ss
mov
sub
cltd
and
ret
pushf
repz
mov
push
xor
inc
mov
cmp
cwtl
or
les
cltd
push
xorl
sbb
xor
cmp
outsb
push
mov
dec
inc
push
xchg
hlt
pushw
cmpsl
push
pop
in
sub
lea
xchg
pop
pop
add
gs
cmpl
ret
sbb
or
les
fiadds
in
fmul
adc
test
scas
jo
jns
inc
cmp
mov
or
mov
mov
or
jne
stos
lahf
or
push
fs
push
in
mov
inc
adc
pop
dec
cmc
cmc
enter
mov
cmc
insb
pop
jmp
and
popf
push
arpl
rcll
jno
loopne
mov
mov
cmp
and
add
xchg
push
cli
je
pop
and
cmpsb
out
and
sub
jg
xchg
mov
lods
andl
test
jns
mov
sub
in
xor
fimuls
inc
lods
ds
les
roll
imul
sub
movsb
mov
into
cmp
xchg
inc
mov
repnz
xor
lea
loope
je
loope
cmp
mov
pop
jle
dec
pop
popf
mull
cld
mov
hlt
fstpt
and
fmull
sub
popa
pop
in
mov
aad
stc
adc
stc
shll
mov
call
fsubr
sbb
mov
push
pop
in
nop
add
into
adc
mov
jp
andl
jnp
xchg
inc
mov
lds
mov
mov
and
jg
cmp
cs
mov
push
sub
jmp
adc
and
pop
dec
mov
andb
paddusb
cmovl
and
inc
cmc
mov
popa
jge
sti
icebp
lret
mov
popf
mov
out
movsb
xchg
cmp
repnz
xchg
ret
jno
out
fwait
mov
fwait
fs
je
daa
mov
out
lods
sti
out
cltd
frstor
xor
push
cltd
negl
aad
fsubrs
or
pop
xchg
je
aas
mov
scas
push
mov
movsb
ret
jnp
push
fcoml
or
xchg
addr16
icebp
mov
xchg
mov
fisubs
outsl
sarb
loop
testl
shll
out
xchg
jb
push
jmp
xchg
fisttpll
add
pop
cld
jno
sub
push
mov
pop
dec
clc
jne
bound
les
cmp
insb
jnp
add
mov
daa
ds
mov
shl
imul
dec
adc
lsl
loopne
inc
pop
push
sarl
cmp
push
scas
shll
push
mov
test
inc
mov
xor
jl
sahf
cmp
out
aaa
push
ds
and
mov
dec
movsl
push
xchg
cmp
loopne
cmp
adcl
les
push
sub
inc
pusha
outsb
rcr
movsb
int3
inc
lock
dec
loop
popf
dec
and
push
mov
insl
dec
in
cli
jno
out
cli
imul
push
jno
shl
adc
sbb
cmp
xchg
mov
stos
lds
out
insl
fldenv
mov
out
jb
jne
sbbb
lret
adcl
push
cmpsb
outsb
and
orb
lds
fnstcw
test
inc
pop
xchg
mov
into
or
leave
inc
mov
imul
into
imul
pop
out
cltd
ficomps
out
add
imul
sub
mov
aad
and
jae
jne
gs
add
inc
push
jl
arpl
jl
or
xchg
cs
sbb
inc
sub
or
outsb
mov
dec
jl
push
sbb
or
mov
cmp
in
jmp
in
adc
jnp
push
int
das
ljmp
mov
nopl
enter
mov
cmpsb
ret
adc
mov
jmp
xchg
push
dec
adc
pop
xor
mov
xchg
icebp
int3
shlb
outsb
movsb
fstl
adc
mov
addr16
adc
mov
jbe
xchg
mov
xor
cmp
pop
push
push
enter
mov
pop
push
jae
lcall
add
loop
sub
lds
std
lea
or
pushf
je
movsl
add
sub
xchg
mov
subl
dec
xor
test
sub
and
dec
and
mov
cmpsb
sbb
sbb
cwtl
jno
xor
dec
fs
stos
xchg
sub
pop
cs
or
pop
fistl
adc
push
push
add
stc
scas
mov
je
cmpsl
and
mov
in
inc
cmp
int
jo
sbb
add
jle
sub
or
cmpsl
test
sub
pop
ret
das
jmp
notl
inc
sahf
leave
pop
shlb
pop
rcrb
mov
sub
mov
flds
jbe
fildl
cmp
not
sti
aaa
jmp
pop
add
mov
lcall
adcl
hlt
lcall
nop
fbld
in
add
outsl
pop
rclb
insl
fldenvs
mov
subl
scas
push
pop
sub
and
mov
lret
aam
add
or
xchg
cwtl
aas
xorl
pop
fstpl
mov
pop
push
aaa
cmp
dec
cld
dec
mov
and
in
push
aas
stos
test
popa
test
xchg
pop
lret
leave
ret
mov
jb
test
bound
hlt
in
and
inc
inc
push
cmp
stos
or
std
call
in
js
lea
lods
or
loope
rorl
cmp
out
adc
test
push
in
dec
test
addr16
adc
scas
xlat
xor
insl
dec
ret
pop
test
das
insl
jae
lahf
stos
or
pop
push
jb
xchg
movsb
outsb
add
sahf
lcall
out
sub
mov
xchg
dec
sarl
sbb
mov
inc
insl
xchg
or
jo
cli
pop
mov
cmp
std
mov
jecxz
cli
xor
or
scas
dec
lods
fmulp
sbb
jnp
dec
cld
adc
mov
mov
inc
sahf
sbb
icebp
outsl
dec
neg
stc
xchg
enter
fimuls
xchg
jle
mov
or
cmp
shlb
aad
add
std
adc
push
faddl
inc
mov
mov
test
adc
lods
and
adc
and
mov
xor
adc
lock
or
pop
sbb
fistpll
arpl
mov
and
fstl
gs
ds
mov
ljmp
mov
outsl
inc
lret
jne
mov
adc
cmp
in
icebp
push
or
push
movsl
cmp
fnsave
cmp
cmp
in
xor
mov
lcall
xor
jb
cmc
mov
stos
dec
imul
es
test
in
movsb
pop
inc
data16
inc
dec
call
into
test
add
into
ljmp
and
ds
aas
test
push
test
int3
testl
outsb
mulb
jbe
push
ja
push
aad
pop
push
sbb
xlat
dec
sahf
jae
jnp
ljmp
ret
sti
mov
sbb
xchg
dec
out
adc
sahf
dec
dec
jnp
adc
xor
mov
scas
dec
popf
push
lcall
in
add
inc
stos
int3
mov
sarb
fstpt
iret
dec
mov
mov
movsb
filds
or
imulb
push
dec
add
cmp
nop
jl
cmp
xchg
xorb
jne
pop
jns
xor
ret
icebp
xchg
scas
mov
mov
dec
gs
in
xor
lret
fdivrl
push
jecxz
cli
inc
add
call
pop
inc
mov
int3
mov
mov
lea
xchg
loopne
les
loope
icebp
lret
lods
jge
loopne
pop
test
mov
jge
fimull
mov
adc
jmp
cs
cmp
out
mov
and
popf
cli
insl
addr16
dec
das
bound
fyl2xp1
pop
push
mov
xor
push
in
es
mov
clc
jmp
loopne,pt
je
lods
dec
push
xlat
fcmovbe
outsl
dec
inc
cltd
inc
insl
pop
adc
test
stos
inc
int
stc
call
sbb
mov
inc
rcl
mov
js
daa
fcoms
mov
mov
pop
mov
mov
scas
ljmp
test
movsb
add
pusha
mov
push
cs
lahf
and
sbb
stos
fisubs
out
mov
call
inc
jmp
pop
insb
outsb
mov
mov
jmp
outsb
mov
lahf
scas
mov
out
in
sarl
add
scas
and
add
mov
filds
jecxz
dec
popa
in
jge
jmp
dec
in
xchg
in
inc
xchg
sub
gs
mov
test
or
mov
cltd
inc
pop
xchg
pop
adc
fsubl
xchg
xlat
mov
jns
push
pop
sbb
and
jg
fsubrs
ljmp
jns
loope
aad
jns
call
dec
loop
dec
mov
pop
sbb
jecxz
xchg
fcmovnb
or
pusha
pop
jae
outsl
jle
adc
adc
cmpsb
out
xchg
call
lcall
adc
out
inc
stos
jne
push
ljmp
mov
int
cltd
adc
add
dec
daa
fisubrl
popa
cmp
jmp
inc
adc
pop
or
mov
std
add
xchg
jl
repnz
adc
out
or
int3
faddp
iret
push
pushf
and
inc
lret
outsl
jb
pop
pop
xchg
out
lret
jo
jmp
mov
loope
or
sti
daa
adc
stc
rcr
pushf
mov
sub
lret
push
or
lods
pop
mov
test
test
ss
hlt
mov
push
push
in
mov
movsb
jbe
mov
rorl
mov
filds
pop
mov
push
mov
mov
fidivl
cmovo
scas
mov
xchg
pusha
jo
jnp
jg
repnz
jns
xchg
sbb
cltd
sbb
ret
pop
scas
dec
scas
stos
in
and
arpl
add
mov
inc
or
add
mov
es
dec
sub
inc
fwait
adc
ja
or
add
mov
aas
mov
sub
gs
movsb
cld
iret
pop
fs
andb
add
data16
fs
xchg
cs
sbb
jno
rcll
repnz
icebp
jg
call
and
in
or
aad
fwait
das
sahf
stos
add
int
jp
movl
imul
and
or
mov
xor
sub
jg
dec
add
cltd
arpl
sub
inc
fsubrl
jae
inc
xchg
daa
sahf
es
mov
mov
xlat
lock
mov
push
fmuls
push
scas
imul
or
stc
adc
adc
incb
cmp
lahf
adc
and
sub
add
xchg
or
arpl
aaa
inc
out
sbb
outsl
test
mov
gs
mov
cwtl
repnz
dec
sbb
sbb
push
lods
addr16
pop
je
movsl
insb
mov
les
call
mov
inc
add
or
mov
jo
aaa
inc
or
js
test
in
push
xchg
xor
mov
mov
shr
outsb
shrl
mov
in
in
outsl
mov
mov
subl
fisttpl
pop
repnz
xchg
lret
addr16
cs
icebp
mov
mov
cmpsl
xor
loopne
mov
xor
jmp
inc
adc
movb
cmpsb
shll
pop
xor
sub
clc
iret
fsubl
add
jae
dec
pushf
imull
repnz
or
mov
mov
mov
jo
cmp
sarl
cmc
jp
stc
call
fucomp
test
enter
jmp
shrl
lahf
popf
push
adc
xchg
or
or
idivb
pop
xorb
stc
pop
sbb
fptan
sbb
pop
lds
pop
mov
cmpl
lods
sub
mov
dec
push
adc
jbe
mov
test
xchg
push
cmp
sarb
pop
push
cmp
stos
push
sbb
stos
js
inc
popa
cmp
aaa
xor
ds
sbb
sbb
out
ret
loop
sbb
dec
mov
lods
mov
rcrb
int
sub
jmp
test
out
push
fcmovne
lcall
pop
gs
popf
and
xlat
and
push
adcb
pop
xchg
sti
test
hlt
dec
sti
in
fwait
repnz
mov
outsb
fildl
pop
ret
mov
int
loope
pusha
cmp
into
jl
mov
mov
je
into
xchg
push
or
ret
outsl
jb
pop
adc
dec
mov
cmp
pop
in
or
cwtl
imul
mov
int3
into
inc
adc
insb
pop
lret
pop
mov
sbb
out
mov
enter
pop
adc
sbb
sub
pop
adcb
int3
mov
xlat
sti
dec
adc
ljmp
mov
push
pusha
add
test
and
xchg
gs
in
aad
push
mov
in
cmp
cmpsl
inc
cmp
cmp
fidivl
les
popa
lret
test
ficompl
pop
dec
fildll
dec
add
push
ficompl
mov
jne
stos
movsb
enter
ret
subb
push
mov
sub
push
daa
shll
xchg
ret
lea
mov
arpl
out
movsl
outsl
pop
scas
fcompl
into
lahf
sub
and
cmp
xlat
testl
pop
or
mov
adc
xchg
jle
mov
mov
fmull
sbb
cs
cmp
aad
sbb
jo
in
inc
mov
daa
add
pop
push
jno
dec
pop
mov
stc
push
sbb
mov
jg
xlat
mov
pushf
frstor
add
mov
ret
adc
mov
gs
push
gs
int3
add
and
int
aad
push
xchg
cmp
cli
test
jmp
mov
jb
mov
jecxz
icebp
add
and
jo
jns
std
mov
outsl
xlat
fcomp
insb
in
add
cwtl
stos
push
das
cmp
outsb
push
dec
adc
rolb
push
aam
and
cmpsb
sbb
insl
push
in
iret
cmpsl
ds
fstps
adc
jo
push
imul
js
in
ss
push
cld
stc
push
jl
les
roll
inc
mov
out
dec
fwait
mov
stc
das
aas
je
xor
lods
mov
stos
push
xchg
rol
mov
aad
mov
pop
aaa
dec
inc
sbb
orl
jl
add
sub
cmpsb
xlat
testb
mov
and
mov
cmp
lret
pop
cmovbe
mov
cld
cmp
push
test
jle
movsb
dec
mov
sub
insl
pop
mov
adcl
mov
mov
push
xor
xchg
inc
imull
arpl
loopnew,pt
cmc
dec
xchg
cmp
push
lret
imull
test
pop
mov
add
lock
imul
xor
or
xor
mov
fs
adcb
sarl
lea
jecxz
sbb
mov
xchg
sub
loopne
pusha
dec
add
scas
push
pop
shll
or
xlat
rcrl
mov
cmp
orl
test
push
add
dec
cmp
lea
pushf
mov
add
push
push
call
mov
cld
add
lret
out
sbb
add
cmp
je
xchg
std
jp
push
cld
inc
dec
or
fsubrs
hlt
lret
inc
or
add
xor
jo
push
scas
out
or
sbb
sbb
lods
aam
pushf
jbe
cli
adc
adc
ss
lret
mov
push
fnstcw
popf
mov
cmp
lock
jmp
push
loopne
or
push
add
lea
push
clc
add
xchg
bound
dec
out
inc
push
outsb
dec
nop
popf
out
xor
ror
ljmp
sbb
lock
std
add
mov
cmc
xchg
push
mov
adc
pop
mov
jno
es
in
stos
in
ds
gs
sti
ljmp
pop
xor
mov
adc
jno
sub
and
add
mov
shlb
enter
pop
xor
push
pusha
mov
rclb
outsl
inc
clc
sahf
and
xchg
cmpsl
sub
mov
out
int
cld
popf
adc
repz
lret
mov
add
adc
and
dec
add
jo
sbb
xchg
psubq
fdivs
repnz
fistps
bnd
mov
mov
inc
popf
cmpsb
cld
mov
sub
aam
clc
jbe
jnp
push
shl
adc
jb
mov
fs
fwait
mov
lods
push
stc
test
push
ss
leave
jne
sti
mov
xor
aad
das
nop
mov
xchg
and
push
test
pop
ficomps
xor
sub
inc
mov
mov
repnz
test
xchg
adc
sar
pop
add
pop
sbb
adc
push
addl
jne
xchg
mov
stos
push
xrelease
cmp
sahf
sub
push
pop
je
mov
lock
pop
jge
push
std
lcall
sub
in
inc
sbb
cmpsb
inc
mov
fisttps
jne
popa
jo
int3
aad
mov
test
js
jl
push
subl
out
xchg
dec
add
push
cli
popf
fbld
rcrl
adc
xlat
xchg
insb
cld
orl
rcl
clc
mov
dec
dec
out
and
negl
fwait
ret
cwtl
sbbl
stos
and
lea
and
fmull
ret
jns
cs
push
inc
dec
popf
dec
shlb
pusha
mov
xorb
setge
ja
repz
ror
jno
mov
ja
nop
into
jne
jns
push
mov
jmp
add
shrl
sub
imul
sarl
sub
inc
ret
jl
push
xchg
jge
out
and
rorb
mov
jae
andl
push
pop
arpl
call
add
adc
cmp
mov
or
fdivrl
xor
pop
or
xlat
clc
or
sysret
stos
movsl
cmp
mov
imul
xor
push
add
add
cmpsb
aaa
shll
fistl
call
jns
movntps
mov
push
sub
stc
inc
hlt
sub
rorl
loope
jae
mov
xchg
jmp
fstpl
je
pop
sbb
stc
pop
inc
in
hlt
inc
iret
jle
enter
adc
and
xor
mov
bound
push
inc
int
add
ret
sbb
cmp
inc
xchg
and
or
in
dec
inc
pusha
lret
je
cmp
loop
test
inc
hlt
enter
adc
sub
leave
jge
mov
adc
call
adc
jbe
lahf
adc
lock
cwtl
inc
and
iret
and
sub
push
sub
sti
mov
mov
sarl
cmpsl
sub
popf
sbb
aam
jle
cltd
cli
icebp
pop
and
es
data16
inc
mov
pop
xor
pop
or
fildll
sbb
aas
sub
jecxz
and
cmpsl
and
mov
xchg
push
dec
gs
sub
mov
pusha
rep
ljmp
mov
inc
adc
xor
frstor
sub
add
mov
or
es
movsl
adc
mov
mov
sub
cmc
cmp
mov
scas
leave
add
jp
fcoml
pop
ja
mov
or
ss
pop
xchg
jmp
or
out
and
cli
repnz
hlt
pop
sbb
daa
in
jbe
pop
fsubl
pop
mov
test
pusha
jnp
shll
rcrl
out
cltd
in
sub
push
in
mov
addr16
movsl
mov
dec
ds
push
mov
out
frstor
push
ljmp
lahf
cmp
movsb
inc
sub
loop
out
pusha
dec
les
mov
data16
add
sub
daa
test
and
daa
xor
negl
inc
add
test
cmpsb
stos
adc
push
xchg
inc
jmp
xor
addl
movsb
aaa
inc
pop
stos
xchg
out
shrb
inc
inc
pop
out
or
rol
inc
xor
je
fdivrs
push
dec
popa
addr16
or
pop
dec
fsubp
arpl
addr16
pop
pop
dec
dec
dec
cs
outsb
insb
stos
aad
mov
lds
sbb
es
sarb
aad
in
sti
in
mov
dec
mov
mov
lea
sbb
mov
std
push
aam
aad
pushf
mov
pushf
xchg
xchg
divl
sbb
xor
pop
shr
rcrl
lods
push
and
outsl
mov
call
xchg
test
es
lahf
adc
outsl
and
sbb
es
push
jge
pushf
xor
lea
in
mov
into
mov
add
xchg
dec
sub
sbb
push
stos
pop
cli
mov
or
fadd
pop
push
in
aaa
pop
mov
in
push
cmpsl
mov
or
ja
std
push
lcall
jg
clc
mov
xchg
sbb
adc
sbb
inc
es
fisttpl
add
pmaxsw
arpl
xchg
stos
mov
call
int
nop
fldcw
xchg
aaa
into
nop
in
dec
push
sarl
add
jp
and
sbb
inc
push
in
cs
mov
pop
daa
mov
mov
sbbb
test
mulb
stos
mov
jg
je
clc
xchg
out
stos
repz
pop
mov
xor
je
mov
out
mov
pop
outsl
out
and
push
mov
and
jecxz
or
lret
add
inc
enter
insl
stos
inc
pushl
fsubp
movsb
es
jp
outsl
imulb
adc
dec
sti
pop
imul
mov
sbb
ds
stos
lock
int3
push
xchg
daa
out
mov
jnp
aad
sbb
cmc
mov
add
jg
ret
and
movsl
in
mov
add
and
ds
cmp
jno
movsb
es
xor
loopne
or
fidivrs
shlb
sbb
pop
or
sub
dec
and
mov
pusha
fdivrl
fnsave
sbb
pop
push
stc
aam
jmp
cmp
call
mov
xor
sub
mov
push
cs
sub
pop
stc
xchg
movsl
xchg
sub
or
call
sbb
iret
popf
pop
mov
daa
loopne
aaa
fistl
outsl
int
adc
aas
mov
call
adc
mov
push
push
sbb
fidivrs
arpl
cltd
sahf
mov
jnp
adcb
xor
sbb
push
adc
inc
xchg
rcl
add
sarb
jno
shll
negb
andb
popa
arpl
cmc
cmpl
mov
in
push
sbb
lret
repnz
and
sarl
or
push
maskmovq
notl
pop
inc
imul
leave
scas
dec
rolb
add
and
jno
les
cmp
in
in
sahf
push
mov
ret
daa
into
aaa
out
stos
filds
sbb
cmp
subb
stc
lahf
and
mov
pop
fwait
push
add
xlat
icebp
clc
subl
mov
or
mov
xor
sbb
rcr
pushf
imul
in
in
mul
and
adc
sub
das
rcll
in
sbb
adc
sti
adc
mov
stos
fidivl
stos
lahf
jo
sbb
aam
jle
xor
decl
rorl
aam
fnstsw
xlat
stos
ds
lock
cmp
mov
lcall
push
stos
cs
outsb
test
jp
or
cmp
lock
sti
cmp
cmp
mov
mov
sub
rcrb
scas
add
loope
adc
addr16
xor
outsb
fcoms
test
test
inc
les
lods
inc
addr16
push
mov
pusha
mov
enter
adc
es
cmpsb
mov
xchg
mov
imulb
lret
sti
call
sbb
push
sbb
jp
or
jns
lods
pop
dec
in
mov
cmp
movsl
addr16
mov
iret
scas
xor
dec
xchg
jne
mov
jo
stos
mov
lods
jne
xchg
cli
aad
mov
mov
cli
sbb
jbe
dec
loopne
jecxz
mov
cs
ret
sbb
fucomip
sbb
mov
stc
push
push
mov
cltd
mov
ljmp
add
and
mov
arpl
ljmp
sbb
jae
or
jmp
inc
jle
addr16
jge
lret
sub
cmp
shrl
fnsave
fstl
add
xchg
fldz
daa
in
jp
pop
and
punpcklbw
pop
adc
test
and
xchg
dec
and
leave
dec
notl
lds
mov
or
jecxz
add
cmp
arpl
mov
test
pop
adc
jbe
pop
mov
jl
lds
pop
imul
and
in
dec
ret
mov
in
out
cmp
xchg
mov
out
popf
xor
mov
popa
inc
fidivs
pushf
mov
data16
iret
jno
rcrb
sbb
out
daa
push
or
jb
pop
push
or
fs
pusha
sbb
cmp
inc
adc
popf
cmp
xchg
les
and
mov
dec
sbb
pop
fdivrl
jo
in
mov
test
loope
sub
jle
rorb
jo
xchg
push
aam
loope
sarb
jns
movsb
jo
push
scas
inc
das
and
jmp
loopne
and
add
stos
cmpsb
cmc
xchg
out
pop
cmp
jp
sbbl
pop
pop
fwait
sub
scas
inc
xchg
scas
dec
dec
jp
inc
xorb
inc
shlb
das
icebp
xchg
mov
pop
cmp
test
mov
nop
add
and
andl
inc
fstpl
imul
pop
fisubrl
lcall
mov
sbb
push
fsubl
lods
out
movsb
inc
sti
mov
sti
aam
add
fbstp
bound
ljmp
xchg
cltd
fwait
push
in
cmpps
fldcw
pushf
aam
lock
pop
pop
pushf
add
shrl
aam
insb
xchg
adc
pop
push
les
push
jbe
mov
mov
xor
arpl
fsts
dec
pop
in
outsb
push
mov
out
icebp
jo
and
popf
push
pop
mov
inc
pop
cmp
and
repz
pop
leave
lds
jnp
insl
cmp
aas
inc
push
insb
inc
pop
clc
jl
and
sbbb
jo
movsb
test
cld
sub
pop
loop
mov
loop
jmp
jbe
push
outsb
xchg
mov
adc
lret
ds
jmp
dec
xchg
sub
xchg
pop
cld
mov
pop
inc
jbe
std
add
and
sbb
notb
fsub
jg
test
dec
into
imul
stos
adc
xor
lahf
lds
xchg
mov
xor
lcall
jae
inc
xchg
mov
mov
int3
shrl
fistl
lcall
jle
fiaddl
out
xchg
notl
mov
in
gs
or
test
bnd
jge
xor
inc
lds
or
test
popf
pop
jecxz
add
push
dec
lock
test
repz
mov
stc
stos
or
lahf
out
jle
pop
lret
loope
int3
push
or
adc
jb
insl
push
dec
lods
pop
sbb
imul
jnp
add
arpl
lock
es
rorl
inc
jp
mov
movb
scas
jecxz
and
xor
divb
mov
in
rolb
xor
cmpsb
mov
xchg
inc
mov
cmc
mov
lods
xor
daa
je
fnstenv
mov
or
mov
and
xchg
and
into
in
cmpsl
lea
push
aaa
xor
addb
add
in
xchg
inc
inc
mov
adc
ss
shrl
cmp
filds
movsb
and
icebp
jp
fimull
push
lret
sbbl
out
sti
push
cmp
aam
ss
in
push
mov
jb
popa
test
add
inc
or
or
dec
sarb
icebp
push
cmp
ret
in
pop
or
loope
mov
icebp
push
cltd
fidivrl
rol
pushf
and
xchg
mov
ret
test
mov
cld
outsb
jge
insb
add
fidivl
push
neg
cmpsb
mov
xchg
sbb
xchg
into
lahf
push
pushf
lret
or
leave
sub
xchg
rcrl
iret
inc
mov
xor
in
jmp
bound
setg
mov
insl
les
or
ljmp
lock
or
push
repnz
incb
sbb
jg
and
dec
pop
or
xchg
pop
movsl
popf
in
insl
movsb
ficompl
mov
movsb
sbb
lods
add
flds
mov
inc
xchg
jg
add
dec
push
jecxz
popa
lods
in
pop
push
adc
fdivrl
shrl
mov
lods
fsubs
pusha
add
mov
hlt
jns
inc
pop
enter
in
mov
cmp
add
leave
push
clc
into
popf
ja
sarl
push
add
inc
pushf
jns
dec
fadd
sbb
dec
adc
xchg
mov
sar
aad
shl
ffreep
aam
cmp
mov
inc
mov
orb
and
rorb
lret
mov
test
lods
and
aad
jne
or
dec
cwtl
or
push
push
shlb
mov
cmp
subb
in
lret
cmc
cmp
push
mov
pop
out
xor
test
sub
dec
data16
push
mulb
dec
addl
orb
lock
arpl
sbb
fcom
xchg
jb
scas
xchg
xchg
push
jnp
push
fldl
loopne
je
push
or
inc
std
ret
xlat
scas
movsl
outsb
repz
and
add
mov
jbe
sub
fiaddl
jmp
pop
imul
xor
movsl
push
mov
inc
sub
iret
rcll
faddl
sbb
rcl
xchg
mov
in
sbb
sbb
arpl
loop
xor
mov
inc
xlat
pop
shl
or
pop
aam
shll
jg
jmp
sub
cmp
ror
sub
stos
mov
jmp
add
mov
sbb
jne
jbe
and
out
ja
dec
fsubl
loope
dec
sub
inc
add
push
call
icebp
int
outsl
pop
andl
xchg
cli
jno
mov
and
ljmp
repnz
mov
lds
std
enter
adc
mov
or
adc
xchg
adc
and
inc
mov
cwtl
sub
scas
pop
cmpsl
or
add
aam
pop
enter
daa
mov
jmp
jne
jg
lret
pop
test
popf
shlb
leave
scas
mov
sbb
jne
inc
bnd
add
sub
aaa
es
add
mov
add
and
es
ljmp
outsb
push
push
push
inc
mulb
mov
mov
and
mov
cli
mov
dec
dec
or
mov
jnp
xchg
cli
hlt
push
sbb
inc
add
inc
repnz
out
mov
mov
push
dec
sarl
mov
jg
and
rcrl
lret
cmp
lods
or
pop
push
dec
push
shrb
addr16
rcrl
out
or
inc
pop
xchg
add
xchg
jno
fwait
inc
test
pop
fsubp
fdivrl
jge
xor
xor
out
es
ret
xor
fucomp
and
sbb
cld
jecxz
mov
xor
jmp
aas
mov
or
fcomip
jg
movsl
mov
mov
loop
mov
cmp
lret
push
cmp
add
cmpsb
inc
sbb
push
sbb
fiaddl
in
loope
pop
adc
loope
je
lods
cmp
in
inc
sbb
dec
add
mov
ret
dec
nop
adc
arpl
ds
fisubrs
cli
sub
inc
inc
cmpsb
add
pop
inc
shll
mov
xlat
ljmp
sbb
pusha
icebp
inc
xlat
xchg
repz
shlb
xlat
dec
jle
lea
mov
jno
jo
mov
cmc
stc
gs
cli
shrl
push
add
shl
add
ret
jno
pop
pushf
movsl
aad
insl
fadd
xchg
shl
loope
divb
xor
and
lods
jb
sahf
push
sub
inc
dec
in
aam
cmc
scas
xor
out
xchg
inc
int3
lret
push
cmp
pop
ljmp
jbe
mov
push
or
pop
inc
jl
stos
mov
push
mov
into
jbe
or
daa
popf
pop
mov
jno
enter
mov
jge
rorb
outsb
je
pop
jl
xchg
icebp
jbe
push
xorb
mov
cmp
mov
fistpll
and
cmp
loopne
arpl
or
mov
lahf
push
fldl
lcall
inc
mov
cmpsl
ret
test
iret
clc
addb
and
sahf
imul
sbb
add
sahf
xor
mov
inc
add
lods
sub
pop
sbb
mov
adc
mov
lahf
jns
sub
dec
fistpll
pop
push
sbb
ret
pop
lds
fsub
fistpl
idivb
test
fimull
sti
fs
pop
stc
pop
imul
lret
and
mov
imul
cmc
pop
daa
mov
add
pushf
or
xchg
imul
mov
mov
push
fwait
xchg
into
add
pop
xchg
lret
mov
mov
cmpsl
mov
in
repz
enter
out
mov
ja
fldl
xor
xor
sub
call
inc
mov
pop
cmp
inc
push
or
repz
push
push
in
fadd
negb
lods
jmp
cmp
mov
in
ss
mov
movsl
sub
insl
adc
scas
push
push
mov
sub
aas
pop
jmp
sub
push
cli
inc
pop
xchg
nop
push
jle
sarb
je
sub
ret
nop
adc
ja
add
or
aas
lock
jno
add
nop
push
in
lahf
pop
notl
int3
jno
or
xchg
sub
add
lds
sub
jecxz
jmp
das
gs
lea
cmp
pop
inc
pusha
ja
enter
pxor
mov
mov
push
stos
movsl
into
add
sub
cwtl
dec
adc
ficompl
mov
and
xor
pushf
mov
jecxz
adc
pop
int
int3
jno
add
jne
popf
cli
fwait
push
dec
pop
sbb
inc
fcmovnbe
lods
aam
loopne
and
inc
inc
jmp
lret
mov
cmp
mov
je
or
pusha
addr16
fs
clc
loope
add
test
out
xchg
dec
xchg
fcomps
xchg
push
adcl
lods
jbe
or
dec
adc
addr16
cwtl
pop
repz
into
or
mov
or
pop
mov
lcall
mov
iret
pusha
test
pop
push
test
cs
scas
movl
flds
les
filds
lcall
jmp
loopne
in
call
fsubs
jl
scas
iret
aas
jno
xor
sbb
outsl
cmp
fildll
add
lea
xchg
int
popa
inc
mov
sub
in
xchg
jns
mov
mov
aaa
xchg
sbb
xchg
cltd
call
cmp
nop
ljmp
adc
mov
das
inc
aam
cmc
adc
mov
add
imul
sbbb
sbb
das
and
insl
adc
stos
push
int3
adcl
add
addr16
push
out
bound
adc
or
cltd
test
pop
cli
sarb
cmp
ret
test
cld
push
dec
push
and
lret
cmpsb
pop
mov
int
cmp
xchg
pushf
pop
cmp
decl
xorb
xchg
pop
push
xor
divl
dec
or
daa
int3
je
cli
jne
jp
xchg
lcall
cmp
cwtl
pusha
pop
ja
les
xor
mov
lods
pop
cld
or
sahf
sbb
and
jne
inc
jnp
stc
or
xchg
pop
push
add
cmpsb
xchg
fpatan
das
xor
fdivl
push
in
mov
fs
pushf
in
jbe
fdivrl
jmp
daa
cld
xor
imul
fstpl
mov
lret
pop
sub
sbb
movsb
ljmp
dec
lahf
xchg
mov
jecxz
iret
loop
ja
cmpsb
jmp
cli
jae
outsl
dec
or
inc
aam
and
gs
ret
xor
movb
mov
out
mov
ds
orl
mov
adc
nop
xor
fbld
shr
mov
add
inc
shlb
adc
ljmp
ffree
add
add
out
not
mov
lea
iret
lock
and
idivl
inc
icebp
in
out
ret
fs
dec
mov
rcrl
pop
sbb
jle
add
inc
jl
xchg
inc
imul
inc
sub
jge
push
out
aam
leave
jecxz
adc
mov
fwait
pop
lock
rcll
pusha
or
fcmovb
cld
outsb
mov
sarl
pop
inc
cmp
jne
jnp
pop
xchg
dec
cmpsb
sub
xor
in
cmp
in
xchg
mov
gs
mov
fiadds
ljmp
pop
sub
xchg
xor
mov
sbb
adc
xchg
lea
xor
pop
or
into
dec
enter
fcmovnb
jnp
inc
mov
popf
mov
push
sbb
jns
and
mov
adc
inc
or
push
dec
pop
je
or
cwtl
inc
outsb
inc
data16
dec
test
jb
mov
imul
cmpsb
mov
cmp
pushf
sub
incl
idivb
cli
jge
mov
ljmp
ja
stc
fsubrs
xchg
pop
pop
data16
mov
xlat
pop
hlt
pop
and
lcall
and
fdiv
mov
fsubrl
out
and
push
xor
wrmsr
int3
cltd
dec
dec
sub
fcompl
pop
push
mov
and
lret
xchg
aas
scas
mov
repz
fstp
jmp
fmul
sbb
mov
fdivs
adc
cld
xor
xor
jae
inc
mov
js
xchg
mov
cs
sub
or
ja
mov
rclb
in
inc
stos
mov
int
dec
cmp
repnz
xorl
xchg
xchg
mov
add
cli
stos
fstpl
push
cmp
lcall
sub
or
andl
dec
add
xchg
cmp
lea
mov
mov
mov
cmp
shr
lods
dec
imul
add
clc
inc
lods
jl
gs
mov
fstl
out
xchg
cld
into
cli
xchg
push
push
xor
fisttpll
jne
pushf
push
in
lea
jge
rol
movsl
xchg
cmp
jns
dec
repnz
mov
loop
xchg
push
scas
adc
test
movsb
jp
mov
jl
icebp
adc
xchg
jbe
push
lock
jnp
iret
push
scas
xchg
mov
iret
mov
leave
fistl
mov
xchg
ret
push
and
dec
inc
adc
pop
call
and
lcall
test
ljmp
shl
xchg
lahf
xchg
imul
and
test
repz
das
jns
fisubl
iret
gs
nop
mov
xor
neg
loope
std
xor
fsubs
adc
push
addr16
sbb
pop
lahf
imul
ljmp
xchg
addr16
icebp
sar
lret
and
sub
into
pop
add
jae
movsl
pop
aad
pusha
mov
stos
inc
or
sub
clc
arpl
mov
adc
outsl
notl
xor
add
xlat
xchg
mov
inc
fwait
int
inc
push
mov
iret
lea
inc
jge
cld
push
movsb
idivb
cltd
fiadds
aas
or
out
das
ret
jmp
test
sbb
pusha
pop
int3
in
push
pop
test
pop
push
pop
scas
movsl
cmpb
ficompl
jo
fcomps
mov
pop
mov
lret
push
pop
out
pusha
or
rorl
sahf
mov
mov
dec
push
leave
jle
sub
scas
outsl
mov
and
in
movsb
arpl
or
mov
xor
push
call
in
xor
cmp
fisubs
lock
mov
push
jmp
mov
stos
pop
xor
push
dec
mov
dec
call
cmp
jge
jp
ror
push
insl
push
cwtl
inc
nop
leave
xor
dec
xchg
out
jbe
lret
pushf
mov
push
cmp
es
gs
push
jmp
cli
dec
lock
lods
jno
hlt
lods
jl
repnz
mov
push
inc
jnp
mov
or
mov
in
add
adc
dec
or
xchg
sbbl
xchg
jmp
in
pop
mov
fstpt
push
outsb
pop
or
pop
or
rcl
imul
jne
jmp
ds
ljmp
mov
cmp
adc
ret
shrl
rclb
adcl
pop
in
jne
xchg
scas
or
mov
repnz
pop
pop
loop
int3
mov
adc
iret
push
add
es
cltd
mov
push
pusha
dec
movsb
shrl
adc
sub
fs
mov
dec
es
mov
push
xchg
mov
pxor
push
add
jl
or
imul
jns
pushf
mov
push
into
shlb
mov
cmp
mov
stos
imul
mov
dec
ficomps
adc
call
pop
inc
int
subb
pop
adc
jno
jl
cmp
mov
leave
jo
cmpsb
mov
icebp
sahf
add
fiadds
ja
add
sub
push
shl
pop
mov
cli
shl
push
add
push
push
push
xchg
sahf
inc
ja
xchg
popa
pop
imul
xor
gs
mov
inc
push
in
es
adcb
jmp
xchg
shrb
inc
notl
es
cmc
lahf
rcr
mov
les
ret
adc
xchg
xor
std
adc
in
jle
addb
and
mov
jge
test
dec
aam
push
sub
xor
xchg
je
xchg
mov
xor
xor
adc
jns
mov
inc
repnz
sahf
repnz
lahf
or
int
repnz
int
adc
pop
imul
jge
stc
push
jb
push
mov
pop
jb
and
xor
shlb
xor
mov
mov
pusha
stos
out
out
inc
jae
shr
mov
fucomp
mov
inc
push
mov
cmc
inc
or
xor
repz
int3
test
and
imul
or
push
in
test
in
fdivl
test
and
ret
adc
push
cmpsb
jns
enter
pop
add
pop
jmp
mov
adc
jmp
jl
orl
adc
sbb
adc
out
ss
arpl
mov
pusha
jmp
or
icebp
je
fstpt
mov
sub
mov
inc
add
sbb
sbb
xchg
jnp
pmulhw
cmp
push
mov
dec
test
in
jl
in
mov
mov
mov
add
dec
cli
mov
ja
sbb
add
push
xchg
aam
das
test
pop
movnti
cmpsl
inc
call
mov
movq
mov
and
imul
shll
jo
xchg
ss
or
jle
pop
sbbb
arpl
dec
jge
leave
push
sbb
fistpl
adc
les
arpl
enter
js
hlt
xchg
inc
inc
sub
push
xor
cmp
pop
sub
pushf
cmc
push
jne
mov
std
push
xchg
mov
or
insl
std
push
inc
fucomip
dec
mov
fadd
mov
mov
roll
movsb
push
xchg
call
dec
jmp
and
add
add
call
cld
lods
and
divb
in
mov
xchg
loop
fcmovnu
pop
lods
and
mov
rcrl
rorl
ret
js
jg
in
dec
movsb
insb
fisubl
shlb
fstpt
mov
push
push
push
fdivrs
push
add
mov
adc
pop
int
xor
jp
in
sbb
daa
loope
pop
xchg
xor
lcall
cmp
popf
mov
push
sbbb
inc
cmp
xchg
test
cmc
outsb
movsl
sbb
xchg
add
lret
out
inc
and
push
aas
adc
xchg
sbb
flds
xchg
inc
inc
push
mov
jl
cli
xor
jg
mov
movsl
sbb
sbb
xchg
shl
push
sti
popl
jl
or
popa
test
or
lods
xchg
adc
xchg
push
mov
hlt
cmpsl
or
js
pop
fisubs
insl
or
insl
add
pop
add
cwtl
xchg
xor
cwtl
scas
push
ret
mov
adc
mov
pop
sti
adc
cmp
jo
pop
fs
rcrl
mov
xchg
je
add
outsl
imul
mov
lds
xchg
xchg
sub
pop
pusha
push
imul
xchg
cmp
push
xchg
mov
jno
pusha
jecxz
mov
lock
dec
lds
incb
stos
xor
dec
int
jl
jg
int
pusha
mov
mov
shl
push
out
fadds
sub
aad
repnz
dec
icebp
addl
push
jo
add
or
mov
sbb
and
push
mov
sbb
mov
mov
insb
pusha
imul
sbb
push
xchg
cmp
iret
xor
inc
and
xchg
adc
dec
pusha
ret
scas
mov
fidivl
movsb
shl
inc
mov
mov
hlt
rorb
lods
mov
negb
push
andb
or
aam
or
es
mov
push
loope
orb
mov
push
or
shll
pusha
xchg
mov
insb
mov
jecxz
ficomps
dec
jle
mov
xor
cmp
xor
lea
pop
xchg
nop
es
xlat
xchg
mov
test
adc
push
xchg
cwtl
iret
sub
addr16
dec
cmc
inc
out
jnp
lods
pop
rorl
xchg
xchg
inc
adc
or
mov
test
mov
or
je
lods
mov
mov
mov
sub
mov
iret
mov
sbb
imul
fisttpll
idivl
mov
pop
sub
dec
int3
icebp
inc
sbb
addr16
fwait
popa
fs
outsb
outsl
hlt
mov
pop
cmp
leave
xchg
data16
cmpsl
and
data16
adc
jle
fwait
inc
fdivrl
jae
push
and
inc
push
mov
fsub
pop
jno
add
adc
mov
cmpsb
data16
dec
mov
jmp
inc
pop
xchg
xchg
pop
icebp
pop
mov
lcall
add
into
dec
loope
jo
cmp
dec
hlt
icebp
subb
inc
cmc
cmp
out
sub
addr16
sub
movsl
sbb
pop
dec
std
pop
sbb
daa
pop
mov
jnp
test
lret
sbb
jae
add
add
fstl
xchg
pushf
int3
jl
repz
into
scas
out
jnp
inc
inc
and
pushf
sbbl
fisttpl
inc
dec
add
bound
dec
lods
cs
call
fucom
loopne
cmp
xor
mov
rcr
mov
sub
xchg
cmp
adc
cmpb
rcl
pop
hlt
out
call
cli
das
idivb
or
jo
jecxz
lock
cltd
pusha
aad
mov
sar
jle
jl
shlb
push
ret
imul
jp
pushf
cmp
inc
mov
or
lea
sbb
mov
cld
nop
cli
gs
xchg
xchg
and
int
movsl
sbb
mov
adc
imul
push
iret
out
fldenv
or
hlt
insb
mov
jmp
sub
in
enter
mov
lods
jg
adc
lds
cmp
jl
xor
jb
cmc
ret
cmc
int3
sub
jb
inc
repnz
add
push
adc
mov
jae
pusha
pop
icebp
xchg
pop
sub
cmc
or
repnz
loope
sbb
dec
add
insb
movsb
repnz
movsb
jmp
add
enter
sbb
addr16
sub
sahf
flds
sbb
cmpl
sarl
dec
loop
cmp
loopne,pn
mov
dec
repz
mov
mov
sub
fstl
addr16
sub
push
cs
or
mov
xor
pop
in
jns
dec
loopne
iret
stos
cmpsl
or
mov
and
popf
fcompl
sbb
mov
lock
out
js
shl
mov
aad
inc
add
cmp
pop
and
xor
mov
xchg
lock
jns
mov
test
inc
fdivrp
adc
flds
pop
dec
enter
imul
mov
inc
pop
sbb
ds
push
inc
push
shlb
mov
mov
sub
sub
cld
xlat
mov
cmp
xor
lahf
xchg
sbb
sbb
mov
mov
repnz
lock
mov
movsl
mov
outsl
je
andb
or
daa
rcrl
cmp
decb
movsl
inc
pop
imul
cli
outsl
insl
sbb
mov
out
cmc
outsb
jne
lea
push
xchg
imul
inc
push
call
mov
enter
testl
aad
stos
fisttpl
mov
mov
push
int
sbb
arpl
and
sbb
movsl
pop
sub
cmp
lcall
push
cmp
insb
fnstcw
out
aas
movsl
mov
pop
lods
or
dec
or
push
sti
pop
es
out
out
add
push
test
lock
cmp
lahf
lcall
adc
loop
lea
lock
lods
or
dec
push
adc
daa
sbb
add
lea
cwtl
lahf
add
mov
fcmovnu
and
push
dec
fcomps
jle
inc
stos
out
cmpl
lods
bound
popa
push
insb
dec
add
xor
insb
push
jns
daa
mov
movsb
sub
ljmp
push
xor
or
xor
aad
addr16
loope
jg
iret
mov
lods
test
hlt
pop
ffree
lahf
out
lods
push
les
inc
jne
dec
clc
jmp
sub
data16
fadd
push
xor
hlt
frndint
faddp
mov
int
pop
fstpl
daa
hlt
ss
add
and
mov
std
decl
sub
xchg
sti
out
in
pushf
mov
pop
inc
subb
icebp
and
push
lahf
mov
mov
les
sub
mov
mov
lods
add
mov
andl
outsb
add
dec
shll
mov
xor
shll
cmp
pushf
inc
and
insl
hlt
rcrb
sbb
add
xchg
xlat
mov
mov
dec
inc
dec
cmp
fmuls
xchg
sbbb
repz
xchg
das
dec
sti
dec
mov
mov
lods
out
mov
xor
xchg
insb
gs
xorl
rcl
lock
mov
mov
pop
and
mov
jg
dec
outsb
outsl
imul
gs
js
dec
pop
shr
push
and
add
or
cmp
xor
in
jle
addr16
sahf
ljmp
cmp
push
out
sub
fistpll
ja
add
pop
mov
cli
mov
mov
mov
dec
cltd
pop
repnz
fs
mov
mov
out
nop
cmp
cmp
xor
jmp
es
lods
imul
lods
cmp
lret
sub
sub
repnz
mov
xchg
inc
mov
xor
filds
jp
mov
sbb
mov
das
push
xchg
jmp
aam
jl
sub
imull
inc
inc
jmp
or
xchg
mov
xlat
cmp
dec
cmp
jge
sbbb
in
xchg
xor
fnstcw
andw
shr
cmp
imul
inc
sub
jl
stc
sub
jbe
popf
loopne
sub
xchg
lret
jb
dec
ficompl
hlt
xchg
dec
sti
add
faddp
sbb
cwtl
rcrl
pop
adc
fiadds
push
xchg
pop
sub
out
fcomps
lret
std
mov
aas
rolb
pop
ss
add
mov
xchg
xchg
fwait
jge
or
jge
lock
call
push
test
mov
icebp
inc
loop
out
add
adc
sbb
dec
cmp
scas
leave
das
ss
add
aam
or
mov
mov
and
xchg
push
cmpb
mov
lahf
cmp
shr
jp
push
cmpsl
mov
fcoml
mov
xchg
movsl
dec
inc
dec
mov
jecxz
cmpsl
enter
and
inc
mov
sub
mov
lods
jnp
dec
mov
movsl
in
loop
ret
jns
icebp
aaa
insb
daa
je
push
sbb
lds
clc
imul
mov
pop
movsl
push
jbe
dec
push
icebp
cld
xchg
dec
mov
mov
jp
mov
arpl
scas
adc
or
fldenv
jmp
stc
lods
inc
jecxz
ss
and
or
and
aad
push
cli
iret
mov
inc
gs
popf
and
arpl
jg
out
xchg
icebp
call
jne
addr16
sbb
cli
add
pop
stc
lahf
xchg
outsl
inc
addr16
jl
jg,pn
and
mov
fxch
call
mov
mov
jge
bound
dec
jbe
push
add
lea
inc
pop
insb
xlat
mov
rorl
movsl
push
lret
xor
test
mov
cmp
ja
into
loop
fsub
cmp
sbb
inc
stos
mov
jne
lods
or
enter
adc
lds
mov
pop
mov
cmp
nop
shlb
daa
jb
loop
icebp
xor
mov
movsb
push
in
sbb
jnp
xor
fxch
push
cli
fcoml
sahf
jne
push
out
or
sbb
push
inc
add
pop
in
jge
sub
leave
push
pop
jae
sub
call
je
inc
mov
ds
imul
push
mov
pop
xchg
sbb
adc
sub
lds
aam
or
cmove
cmpsl
mov
or
dec
ss
fsub
cwtl
daa
mov
jmp
test
loope
ljmp
xor
movsb
std
inc
add
fdivl
nop
jp
sub
movsl
imul
pop
jge
cmp
aaa
call
decb
repnz
test
and
orl
test
mov
push
aad
mov
mov
fwait
test
adc
inc
adc
mov
sub
mov
mov
sub
fisubl
in
mov
mov
adc
cmp
in
cmpsb
cmp
loope
jl
in
stos
fs
in
fisubrs
sbb
insb
sub
lea
push
cmpsl
mov
push
inc
sahf
test
test
and
dec
mov
lea
adc
in
sbb
or
mov
push
sarl
mov
cmp
jbe
mov
fsubl
dec
xchg
pop
scas
cld
addr16
ja
stc
push
sbb
jecxz
sbb
adcl
pop
mov
mov
mov
cmp
xlat
fnstenv
push
fstl
add
sbb
xor
add
jo
insl
jl
sub
pop
xchg
fwait
mov
int
mov
cmp
clc
push
inc
mov
test
fdivl
cmp
adc
xchg
icebp
iret
cmp
stos
fisubrs
dec
mov
shlb
dec
xchg
dec
xchg
sub
cmp
test
add
xlat
mov
jo
or
outsb
push
stc
sub
sbb
mov
or
xor
int
enter
pop
aam
jne
jo
jne
in
jmp
pop
iret
aam
sbb
popa
mov
bound
xchg
sub
test
test
mov
gs
cmp
test
cwtl
mov
mov
xchg
insl
cmp
dec
or
out
imul
jp,pn
lret
in
inc
jbe
xchg
cltd
push
lods
es
pop
sbb
dec
cmp
mov
lods
clts
jbe
adc
enter
movl
into
fwait
in
adc
ret
aad
add
lahf
mull
push
add
sbb
scas
fdivr
xor
adc
cmovne
mov
xor
jl
lds
mov
aad
cmpsl
mov
jg
sar
call
je
mov
jae
outsl
setb
leave
js
movsl
dec
push
xchg
pop
lds
dec
xchg
into
pop
imul
and
and
in
push
rcr
xchg
stc
push
push
cmp
pop
mov
add
pop
bound
and
jmp
sbb
les
hlt
movsl
mov
add
inc
pop
jl
adc
pushf
sub
add
inc
lahf
xor
sub
cmp
int
jae
mov
js
dec
sbb
dec
outsl
lcall
dec
daa
stc
cltd
mov
outsl
mov
stc
xchg
or
push
lret
test
pop
loopne
xchg
incb
movsl
and
mov
rcrb
loopne
mov
nop
out
xchg
inc
and
pop
out
or
pop
mov
data16
fildl
sbb
jne
dec
imul
add
loopne
loop
ja
push
daa
movsb
pop
adc
pusha
and
out
ret
orb
in
test
mov
sub
aam
xor
cmp
enter
mov
mov
pop
xor
rorl
out
ret
xchg
jbe
call
lret
std
sbbl
mov
jns
jns
mov
sbb
lcall
lcall
dec
sahf
xchg
and
into
dec
jo
dec
inc
repz
jmp
xchg
and
andb
test
mov
scas
shll
mov
scas
addr16
rorl
fs
fiaddl
cs
aas
sbb
insl
lods
imulb
jl
jbe
imul
mov
sub
out
sbb
cld
sub
jb
loop
jmp
xor
mov
pushf
cs
mov
pop
and
arpl
sahf
dec
sub
cmpl
adc
les
sub
test
into
into
jecxz
mov
inc
jbe
inc
add
int3
jae
jle
or
cmp
ret
sbb
arpl
movsb
out
jno
imul
jecxz
xor
pop
pop
xor
or
push
in
cs
sub
ret
jns
xor
inc
ss
xor
outsl
mov
enter
in
int
jbe
mov
mov
outsl
adc
call
dec
scas
cmpsl
xor
cwtl
cmp
orb
cld
fimull
push
in
mov
sbb
mov
dec
and
or
xchg
lcall
pop
sahf
or
or
in
hlt
imul
dec
sar
hlt
test
mov
add
or
fwait
hlt
xchg
ss
xchg
xchg
jge
inc
sbb
jno
jg
stc
inc
ret
sub
add
dec
push
lods
push
sbb
icebp
repnz
sti
mov
xor
push
stc
fs
clc
dec
cmp
aam
dec
arpl
jbe
lret
rcrl
dec
movsb
pop
insl
sbb
mov
lret
clc
rolb
pop
les
aas
or
pop
lret
xchg
mov
dec
sub
out
add
outsb
adc
aam
jg
fdivr
push
or
mov
mov
mov
add
movsl
in
xchg
mov
clc
clc
jno
fiadds
mov
jle
xor
and
dec
arpl
push
push
dec
cmp
fldt
rcr
and
inc
test
sbb
dec
aas
xchg
cs
xor
inc
dec
cmp
cmp
jle
pop
or
push
pop
lods
mov
mov
xchg
xor
arpl
aam
icebp
scas
mov
stos
mov
sub
jecxz
daa
decb
jmp
dec
outsl
loopne
out
xor
iret
sub
sbb
mov
or
xorl
lods
jae
pushl
stos
imul
bound
filds
dec
jbe
aas
jo
or
pusha
push
insb
jb
and
andl
mov
add
outsl
jbe
mov
fisubl
gs
popf
sahf
push
mov
repnz
inc
out
std
inc
xor
stos
das
mov
jbe
lods
dec
inc
push
test
xchg
lock
xchg
push
in
xchg
or
daa
xchg
hlt
mov
push
or
pop
addr16
sti
pop
add
or
sub
or
call
popa
sahf
xorb
mov
andl
test
push
stc
jnp
dec
dec
add
mov
fisttps
lods
push
add
mov
add
cmp
pop
popa
rcl
nop
push
add
adc
stos
andb
pop
pop
inc
scas
clc
lea
and
push
add
sbb
cli
sub
ret
ds
sub
inc
mov
dec
fstl
mov
add
xchg
jns
inc
fisubl
jno
xchg
add
jno
dec
icebp
cmp
adc
dec
mov
mov
repz
xchg
fwait
push
jne
pop
adc
and
jns
jno
arpl
pop
and
dec
test
in
sbb
adc
insl
shl
pop
adcl
stos
inc
or
gs
arpl
mov
and
xor
pop
repz
in
sub
aaa
in
mov
divl
mov
jmp
cmpsb
xor
lret
push
add
pop
push
pop
mov
push
pop
pop
popa
cs
xor
adcb
adc
sarb
adc
pop
xor
movsb
cli
lds
push
xor
sbb
ds
cld
mov
call
pop
inc
push
shll
into
mov
jne
dec
jbe
add
dec
out
adc
add
and
lods
mov
leave
aam
push
jp
jbe
sarb
cmp
pop
imull
push
lea
xchg
fwait
mov
cwtl
push
sub
test
pop
xchg
xchg
das
faddl
sub
xor
cmp
lret
loop
bnd
push
jl
out
das
cmp
pop
fwait
loop
add
mov
sub
dec
push
fimull
nop
in
cmp
fs
lock
out
mov
flds
sbb
loopne
push
push
sub
push
push
bswap
repz
cmp
movsl
sub
inc
or
movsl
jmp
cld
cli
daa
in
inc
push
jle
xchg
push
dec
fs
lods
xchg
and
or
xorl
pop
sbb
inc
push
adc
push
dec
mov
adc
mov
gs
xor
andl
lea
sbb
xorl
rol
sub
xor
cmp
lds
mov
decl
ss
sarb
mov
jo
lcall
test
adc
call
clc
jbe
or
es
rcll
lds
mov
mov
mov
mov
jle
dec
mov
icebp
or
inc
mov
out
mov
sbb
or
xchg
cmpsb
mov
stos
adc
xor
xor
dec
jmp
rorl
mov
repz
cmp
aam
mov
and
test
call
xchg
xchg
adcl
xor
push
fidivrl
cli
mov
cmp
xchg
in
jbe
stc
arpl
sub
jg
jg
sub
xor
ret
inc
inc
adc
dec
mul
pop
or
xchg
out
sub
xchg
repz
enter
shlb
or
shll
je
cmpl
fwait
mov
test
dec
dec
mov
icebp
lret
es
cmpsl
popa
push
into
xor
sub
ficoms
mov
loope
aam
sub
iret
dec
pop
lret
add
loope
jae
cli
jno
movsl
adcl
clc
fstl
jmp
cs
or
std
mov
xchg
mov
jne
mov
lock
mov
xor
inc
add
in
xchg
rcr
fwait
or
add
imul
and
in
inc
adc
lret
into
cmpsl
jg
or
adc
sarl
mov
adc
repnz
xor
jecxz
dec
in
roll
push
pop
sbb
rorl
shl
jae
ror
test
push
xor
and
pop
sub
mov
cwtl
mov
test
pop
xchg
push
roll
and
je
scas
mov
scas
or
daa
mov
test
pop
lcall
jecxz
imul
mov
jae
mov
push
stos
imulb
ds
lods
inc
xor
icebp
cmp
mov
addr16
xorb
xor
repnz
aas
cs
repz
ret
movl
iret
push
or
clc
mov
jnp
rorl
xor
cmc
cmp
scas
cmp
sub
nop
xchg
stc
push
jmp
add
and
pop
jecxz
pop
imul
jg
push
test
inc
jns
sbb
and
dec
sti
std
enter
dec
jne
jo
mov
mov
out
mov
mov
mov
push
data16
inc
xchg
movsl
push
inc
inc
out
js
jge
icebp
das
adc
push
adc
mov
pop
rol
xchg
sbb
jae
push
daa
dec
and
mov
adc
lret
in
jnp
out
stc
loop
aas
dec
cmp
add
sbb
popa
dec
les
jl
loop
frstor
cwtl
das
xor
jae
mov
or
xchg
mov
movsl
inc
adc
sub
add
push
mov
lcall
outsb
cwtl
mov
adc
movsl
mov
gs
ret
xor
push
pop
sbb
scas
mov
sub
or
cmpl
and
push
xchg
in
clc
orb
cld
and
xor
outsl
addl
cmpsb
lock
movsb
xchg
sub
clc
cmp
stc
cld
xor
addb
sahf
rcr
push
xor
cmp
fnstcw
ret
cmpsl
test
push
mov
mov
mov
xchg
pop
jns
ljmp
sub
push
std
pop
mov
daa
aas
mov
pop
cltd
hlt
in
bound
in
lock
and
les
push
mov
cltd
mov
out
out
inc
incl
adc
xchg
in
sbbl
lock
pop
test
sub
shrl
fistl
dec
popf
test
iret
test
dec
shlb
stc
fisubrl
loopne
mov
int
add
fstps
fildll
mov
pusha
mov
mov
jge
or
sub
data16
sbb
hlt
pop
dec
add
insl
bnd
sahf
jmp
movsl
or
std
scas
dec
repnz
repz
jecxz
inc
push
fcomp
add
sbb
sub
mov
data16
bound
sbb
das
jle
or
cmp
test
cmp
imul
mov
push
ljmp
fwait
ss
std
mov
movsl
loop
lods
cltd
sbb
jno
call
jecxz
add
push
ds
jl
stos
movsb
mov
pop
dec
jge
pop
mov
dec
jns
push
stos
in
mov
nop
sbb
fdivr
fdivrs
mov
sbb
pop
movsl
sub
mov
mov
bound
in
sbb
or
lock
aam
mov
arpl
push
pusha
and
inc
fistpll
xchg
dec
stos
ja
add
pop
dec
xlat
xor
push
push
push
adc
aam
movl
xchg
lea
je
loopne
jne
or
mov
dec
idiv
mov
mov
adcl
dec
fimuls
mov
cmc
push
les
loop
call
jb
fildl
shlb
leave
pop
sbb
cmpsb
push
out
mov
xchg
stos
repnz
movsb
adc
dec
imul
loope
cmpsl
inc
imul
fadds
xor
cmp
sbb
faddl
add
imul
repnz
xchg
scas
inc
test
push
jg
dec
xchg
cmp
popa
mov
dec
xchg
jae
shrb
or
xor
movsl
scas
fdivr
push
sbb
aad
push
dec
jno
pop
loop
ficoms
icebp
cmp
or
ja
test
ret
mov
sub
pop
xor
and
xor
shl
jnp
test
and
push
add
aad
xchg
fisubl
xchg
clc
test
push
mov
cmp
rcrl
je
pusha
or
fwait
into
or
mov
xchg
inc
inc
or
mov
xor
pop
mov
fbld
cli
and
out
cld
sbb
xor
push
dec
push
dec
pop
mov
loope
leave
lods
cwtl
pop
xchg
in
mov
ja
and
inc
add
aad
out
pop
rcll
cmp
sbb
fmull
rorb
inc
mov
xchg
mov
cmp
das
cmp
push
inc
dec
push
std
sahf
movsb
loope
popf
add
insl
in
in
out
jbe
push
repnz
xor
lds
jae
fwait
gs
cmpsb
data16
push
and
lea
andb
out
add
sub
jecxz
push
into
lcall
add
push
jo
je
jb
adc
aaa
std
sti
jmp
daa
lods
in
sub
pop
and
cltd
cmp
push
rolb
mov
icebp
pop
add
aam
in
xchg
test
fptan
pop
xchg
fmul
cltd
and
jg
push
cmp
and
push
cmp
in
lods
sbb
xor
dec
push
mov
cwtl
jno
test
mov
jle
lds
adc
testl
xor
pop
cmp
add
shr
pushf
mov
push
push
cmp
mov
and
xchg
lods
and
out
stos
cmpb
aam
push
cli
mov
push
dec
fldcw
into
testl
mov
push
sti
jne
jne
pop
das
movsb
cwtl
pop
inc
mov
rcrl
shrb
sub
pop
inc
idivl
leave
repz
mov
jb
cmp
loope
test
sbb
inc
jl
fstpl
addr16
sbb
add
cld
pop
jne
push
fwait
inc
movsb
mov
test
add
dec
subb
lcall
test
mov
mov
mov
sti
insl
mov
cmc
mov
inc
sub
lret
push
dec
test
leave
add
stos
addr16
rclb
xor
icebp
xor
into
mov
loope
jg
lcall
mov
mov
jns
nop
jmp
scas
inc
in
sub
aam
inc
lret
jmp
fs
shlb
xchg
sbb
shrl
xchg
ror
mov
sarl
shll
fisubl
ljmp
cmp
cmpsb
push
sub
push
add
out
hlt
sub
jae
mov
sbb
imul
daa
int3
jbe
in
xchg
ret
xor
outsb
nop
and
hlt
jnp
out
shlb
out
out
fcompl
cmp
sbb
xchg
bound
adc
adc
out
jecxz
lahf
xor
pop
ja
mov
xor
cmp
test
mov
mov
stc
pop
mov
jb
iret
insb
rolb
mov
add
arpl
test
add
sti
scas
sub
mov
add
scas
fcoml
jmp
pop
and
push
xlat
push
aad
xchg
cltd
xchg
xor
cmp
movsb
xchg
andb
mov
push
jp
jno
mov
outsl
jle
or
repz
mov
and
mov
notb
clc
sub
jae
nop
scas
jnp
mov
lret
cmp
adc
xlat
push
iret
dec
rorb
cmp
scas
aaa
xor
aaa
inc
dec
insl
dec
stos
leave
fdivl
ret
div
dec
cmp
std
inc
and
arpl
jns
cmp
cwtl
add
push
pop
mov
insl
or
sub
fiaddl
icebp
jg
out
xor
dec
pop
dec
jecxz
out
jne
mov
pop
mov
rorb
push
popa
xchg
sahf
loop
fdivr
in
sbb
inc
pushl
xlat
xor
jmp
push
icebp
jmp
mov
lea
fs
pop
insl
push
add
or
mov
sti
and
shrb
push
mov
setno
cwtl
mov
call
mov
inc
sbb
dec
iret
mov
adc
pop
shrl
inc
loope
std
xchg
mov
adc
push
xor
enter
and
sbb
repnz
call
leave
xchg
jg
or
mov
aaa
and
or
rcr
loope
push
push
es
shlb
sub
bound
sarb
xchg
push
popa
xor
mov
out
imul
push
in
in
jnp
int3
inc
push
stc
push
add
xor
sarb
jne
mov
subb
mov
mov
lds
aaa
and
pop
lods
leavew
out
inc
xor
loopne
sbb
jnp
mov
fists
test
mov
adc
shrl
shrl
mov
cmp
in
and
in
add
push
push
push
dec
lret
jl
xchg
xchg
out
cs
into
fsubrs
dec
sbb
xlat
pop
out
imul
mov
into
cmp
jge
pop
pop
dec
stos
sbb
sti
mov
xor
xlat
pushf
fildl
cmp
daa
in
xor
scas
in
sbb
or
push
or
fstl
aad
dec
scas
int
mov
rclb
push
leave
repz
popa
and
fnclex
inc
adc
dec
addr16
roll
loope
inc
ret
add
call
xchg
dec
cli
mov
and
sbb
cmp
out
mov
and
add
cmp
rcrb
dec
xorb
cli
sar
ljmp
stos
adc
mov
movd
sti
sbb
jp
lea
jp
sbb
adcb
call
leave
int3
in
sub
cmpsl
test
jecxz
dec
not
xchg
cmpsb
adc
mov
mov
or
adc
dec
dec
stos
das
xor
icebp
mov
cmp
jl
jnp
push
das
jge
jmp
stc
fldenv
dec
movsl
fsubl
pop
xor
fistl
test
jno
mov
rorb
mov
and
mov
ds
mov
xchg
test
addr16
shrb
loop
push
mov
adc
jns
mov
repz
fldcw
mov
pop
leave
popa
imul
jnp
push
daa
mov
xor
jg
aaa
lret
push
adcb
sbb
cmp
test
inc
roll
push
popa
or
xor
int3
push
jns
or
or
add
push
jae
lea
sbb
sbbl
imul
pop
out
xor
gs
jge
imul
in
xchg
jl
repnz
mov
jbe
push
mov
pop
scas
lret
cmpsb
lret
mov
sbb
xorl
mov
dec
pop
and
jecxz
jecxz
jmp
push
sti
cmp
xor
ds
lcall
inc
sub
adc
mov
loopne
imull
test
pop
and
ret
push
mov
adc
or
ss
mov
mov
push
cmpsl
dec
scas
clc
lods
push
stc
cmp
xor
out
pop
test
popa
mov
or
test
lds
and
add
lds
xor
jo
lret
xchg
add
mov
push
adc
sahf
dec
shrb
js
jmp
fmull
clc
adc
shr
scas
add
pop
sbb
xchg
pop
mov
sub
xor
test
out
adc
cmp
sti
mov
cmp
jle
pop
je
cli
cmp
fistpll
or
xchg
in
add
xlat
xchg
pop
adc
mov
scas
sti
mov
add
out
adc
mov
imul
mov
inc
ljmp
and
push
cli
iret
or
mov
mov
sbb
jle
jp
dec
enter
adc
sbb
scas
lds
negb
imul
ret
sbb
push
xor
push
jle
sbb
push
sbb
cmp
sarb
cmpsl
xchg
jae
adc
sbb
and
sbb
or
jnp
pop
or
cmp
pop
movsl
fisubrl
sbb
mov
add
sbb
out
aaa
push
loope
fs
scas
cli
inc
es
pop
mov
fldl
or
adc
pop
mov
mov
sub
fcmovnb
or
inc
mov
daa
ljmp
mov
frstor
imulb
pop
test
or
adc
jno
iret
shr
adc
jp
repnz
sbb
xor
jl
pop
lcall
es
ja
cld
icebp
aas
arpl
cs
inc
push
sbb
cmp
addr16
xchg
cli
shl
ret
push
ficoml
adc
inc
cmpsb
iret
popa
cltd
aad
out
imul
cmp
mov
outsb
sti
jmp
sahf
lahf
lcall
or
sbb
repz
dec
out
jg
jne
test
es
jmp
add
adc
mov
leave
push
pop
jno
aad
stos
mov
hlt
sub
add
push
jae
scas
je
sub
call
popa
arpl
aas
mov
mov
pop
imul
aam
fs
sbb
cmp
fs
std
or
xchg
mov
data16
loop
fs
cltd
lds
into
lret
ds
lcall
push
mov
das
shlb
jg
jae
inc
mov
fistpll
mov
mov
mov
adc
adc
and
dec
mov
enter
out
enter
sbb
inc
dec
stos
call
divb
test
cwtl
xchg
sahf
imul
subb
rcrb
mov
mov
int
aas
sahf
sar
fldl
fucom
sbb
mov
ret
or
leave
ror
and
dec
xchg
pop
ds
cmp
ret
jbe
in
cwtl
mov
or
aas
xor
loope
sbbl
sub
packsswb
test
push
pop
pop
andb
nop
push
lods
cld
leave
out
jbe
dec
addr16
out
cmpb
pop
pop
fmuls
and
popf
iret
cmp
mov
inc
xor
arpl
ljmp
fucomip
lret
inc
mov
push
mov
repz
mov
je
gs
in
daa
leave
and
cmc
int
or
push
inc
push
xchg
stos
mov
insb
js
and
lea
push
mov
mov
jle
cld
push
cmc
ret
or
push
ss
mov
push
dec
push
cs
mov
lock
dec
addr16
frstor
lcall
mov
daa
ret
test
testl
scas
sbb
mov
in
push
ret
jl
in
xchg
xchg
pop
in
fdivl
ret
cmp
push
mov
imul
int3
mov
lock
inc
dec
add
fwait
pop
push
adc
std
inc
mov
popf
jb
insl
sub
mov
cmpsl
jns
in
mov
dec
mov
fs
sti
sbb
fdivp
sbb
das
dec
sbb
cmc
mov
add
push
in
inc
mov
mov
mov
sbb
cmp
je
pusha
insl
push
inc
adc
sub
push
jno
mov
cltd
fs
out
mov
data16
sarb
or
mov
jae
mov
adc
fwait
or
mov
jp
sub
outsb
shll
mov
fs
popf
cwtl
xchg
fidivrs
and
adc
cmpsl
mov
xchg
dec
xchg
mov
popf
cs
or
jno
mov
shlb
add
or
or
pop
rcr
add
clc
scas
or
stc
push
bound
arpl
aam
mov
sahf
sbb
push
out
popa
xchg
test
fnstenv
cmp
ja
aad
imulb
pop
hlt
icebp
loop
rorb
dec
cmc
pushf
push
pushf
stc
clc
mov
orl
cmpsb
xor
sub
xchg
dec
pusha
jmp
mov
test
jp
and
dec
jg
add
lds
out
sub
sti
mov
push
mov
scas
jmp
clc
mov
gs
xchg
test
lcall
int
mov
in
jp
sbb
mov
adc
add
cld
cmp
pop
das
push
bound
mov
xchg
add
stc
enter
or
test
inc
mov
loope
mov
bound
fldenv
outsl
testl
popf
adc
ds
push
dec
dec
jp
into
les
aam
js
aad
push
dec
movsb
lret
sbb
adc
std
jmp
add
roll
into
adc
or
cmp
or
ja
mov
sarb
js
pop
mov
add
in
mov
xor
xchg
pop
cli
loopne
ss
cwtl
out
inc
pop
sarb
jne
jmp
ret
and
leave
lcall
sub
idivb
mov
cli
mov
test
adc
fadd
add
and
jle
push
out
aas
add
mov
imul
les
das
popf
lcall
xchg
ret
test
inc
dec
or
mov
nop
xchg
lds
lods
or
jg
pop
fisubs
xor
inc
mov
movb
lock
mov
call
xchg
lret
push
loop
xor
int
push
jge
mov
push
xor
sti
out
and
out
mov
fcompl
out
fdivl
jge
jb
sahf
gs
xor
insl
xor
pop
pop
test
mov
adc
in
dec
or
jg
in
jg
xchg
mov
sbb
fimuls
inc
fwait
sbb
and
mov
fisubs
enter
stos
mov
orb
je
sar
mov
out
repnz
outsb
push
loope
pop
sub
sub
adc
push
lods
jbe
and
inc
inc
jo
sub
sbb
iret
into
lea
cwtl
out
dec
pop
hlt
cmc
push
cli
les
iret
insb
sbb
cmp
cltd
bound
inc
and
lea
out
adcl
jg
jecxz
cs
xor
cmpsl
mov
pop
jns
stc
jbe
notb
fcomps
repnz
or
pop
rorb
dec
enter
cld
das
push
ret
xor
test
cmpsb
pop
ds
imul
scas
cmp
fadd
ja
push
js
jmp
filds
fimull
mov
inc
mov
jp
push
or
sub
and
sbb
xchg
dec
repz
or
stos
inc
xchg
jnp
and
fldenv
cmp
fistpll
out
jecxz
push
loopne
inc
mov
mov
repz
jp
adc
movsl
andb
mov
pop
pop
push
and
stos
fidivs
das
jl
inc
es
iret
pop
dec
mov
mov
das
leave
dec
fldenv
test
sub
mov
fisttpll
adc
divl
xlat
cmp
pop
loope
lret
pop
push
clc
adc
cmpsl
xlat
pusha
xchg
push
xor
xchg
or
imul
pop
mov
icebp
shrl
stos
loopne
inc
xchg
ret
xor
sbb
fidivrl
and
das
mov
iret
icebp
fldl
dec
jp
dec
ja
addr16
adc
lds
add
adc
sahf
stos
daa
and
dec
lret
repz
adc
dec
scas
stc
push
neg
icebp
mov
sbb
jge
lret
mov
icebp
lret
cli
loopne
cmp
sbb
push
outsb
rcrl
cmp
cmp
mov
jecxz
mov
sbb
shlb
stos
mov
push
inc
pop
xor
in
mov
and
jge
mov
push
leave
fisubl
ds
pop
in
and
aam
and
repz
daa
out
cmpsb
cmp
adc
jecxz
push
add
jl
jl
cmp
mov
lods
mov
popa
sub
dec
sbb
mov
popf
in
testb
mov
push
add
orb
fsubs
call
adc
dec
cmpsl
imul
push
or
jge
sbb
push
jl
stos
inc
je
popa
lock
ja
inc
pop
and
jp
jo
es
je
mov
stos
popf
and
out
push
pop
insb
mov
sbb
fdivs
or
jg
xor
out
xchg
mov
mov
cmp
mov
push
notl
cmp
cmp
push
dec
lcall
stc
add
adc
js
lea
test
sbb
sub
pop
pop
pop
aaa
lods
dec
sbb
bound
xchg
inc
mov
fsubrs
fiaddl
push
jns
mov
cmp
dec
popl
leave
sti
mov
fwait
dec
fistpll
popf
fdivrl
stos
aas
push
mov
ret
jle
mov
mov
cmc
test
mov
sahf
push
push
and
clc
sub
xchg
gs
cli
neg
test
pushf
shll
test
add
push
loope
stos
xchg
nop
js
xor
mov
leave
pop
push
test
mov
sarl
outsl
mov
repz
je
mov
push
pop
xchg
cli
xchg
data16
push
adc
scas
pop
inc
cmc
add
je
sahf
mulb
bound
insb
inc
fxam
iret
mov
addr16
cs
mov
fldt
jb
sub
test
adc
adc
sahf
xor
adc
out
lea
cmp
ret
into
bound
xor
jmp
test
mov
outsl
ss
mov
subb
add
int3
add
aaa
add
and
mov
pop
out
les
dec
pop
dec
lcall
outsb
push
push
push
in
jns
sti
jns
pusha
das
add
inc
lahf
dec
mov
inc
cltd
cmp
dec
mov
xchg
sub
sti
fs
adc
sub
mov
xchg
push
jle
jl
test
lock
loope
push
xchg
or
ror
cmp
mov
jae
mov
or
jno
xor
ljmp
pop
push
gs
xor
add
xor
inc
cld
mov
xchg
xchg
lret
or
cld
dec
mov
pusha
add
outsl
in
fwait
pop
xor
dec
cmc
gs
addb
inc
pop
pop
fcmovne
mov
dec
movsl
push
push
pop
stc
inc
dec
adc
lret
push
and
fs
mov
cltd
loope
pop
jge
test
push
push
enter
imul
test
push
loopne
push
dec
xchg
fistpl
xchg
jmp
sub
cltd
ljmp
repnz
clc
mov
mov
push
sub
fdivs
fwait
dec
js
or
dec
jmp
jo
add
pushf
lds
or
fisubs
lahf
ss
testl
in
xchg
fisubrs
adc
pop
push
daa
or
dec
jbe
in
or
jmp
rorb
fs
cmpsb
into
or
test
stos
jp
inc
test
sahf
stos
add
test
pop
sbb
fs
pop
lahf
iret
cltd
rcrb
cld
mov
push
mov
mov
mov
or
adc
loope
cwtl
dec
fcomps
push
pop
mov
andl
repz
mov
cmp
jne
repnz
ljmp
ret
inc
jbe
out
pop
push
fnstsw
pop
fiadds
sub
or
xor
mov
les
mov
ds
imul
mov
push
and
mov
ds
mov
dec
mov
pop
lret
add
insb
inc
std
push
inc
and
mov
in
stos
aad
js
xlat
sub
mov
push
lock
and
push
in
loopne
mov
mov
stc
or
sub
lods
jns
sti
lock
push
ljmp
jp
mov
inc
dec
movsl
jae
push
add
cs
loop
add
adc
xor
xchg
mov
sub
jecxz
outsl
into
enter
mov
dec
into
out
js
pop
in
mov
xchg
pop
js
fnstenv
pop
ljmp
out
enter
mov
dec
add
lods
jae
clc
cmp
imul
fildl
cs
inc
jbe
enter
movsb
mov
imul
les
mov
scas
mov
ficompl
push
jne
icebp
shll
mov
dec
movl
xchg
xor
mov
push
fsubr
cwtl
inc
hlt
sub
pop
sbb
ja
add
or
pop
roll
popa
jbe
add
mov
loopne
sti
push
push
gs
mull
lahf
push
les
or
cmp
sub
loope
adc
lcall
mov
mov
or
mov
mov
sahf
xchg
xchg
popf
jmp
adc
sbb
stos
inc
in
lock
enter
lahf
lahf
mov
roll
and
and
fmull
jae
arpl
mov
int3
das
nop
pop
or
add
xchg
sahf
jecxz
pop
mov
incl
mov
int3
enter
xchg
xchg
fldt
sub
pop
dec
mov
fiadds
sub
sbbb
push
lcall
cmpl
xchg
ds
pop
rcrb
je
test
ja
imul
sarl
ja
cwtl
mov
fs
push
or
push
sbb
iret
pop
xchg
aaa
mov
loope
push
call
xchg
jmp
in
xor
test
or
andl
in
adc
nop
push
loopne
loop
imul
inc
mov
jb
stos
dec
fstpl
pop
push
or
add
jne
xchg
ss
dec
mov
push
popf
cltd
jmp
xor
push
jbe
jp
movsb
push
inc
push
xor
add
arpl
pop
clc
int
add
popl
mov
cmpsl
jge,pt
cmpsl
insb
push
rorb
sbb
inc
pop
stos
fnstcw
addr16
jnp
add
cmp
loope
pop
lcall
pusha
xchg
pop
pushf
dec
popa
mov
xor
pop
cmp
sbbl
cmpsb
ret
test
psrlw
sarb
jb
sub
imull
ficomps
sbb
and
pop
call
adc
aaa
or
arpl
mov
fwait
jecxz
loop
mov
pushf
xor
and
bound
push
loopne
add
rcr
jmp
cli
jmp
add
sbb
adc
or
and
enter
push
aaa
mov
loopne
les
in
jno
fistps
sti
lret
sub
add
movsl
aad
fimuls
push
out
loop
jnp
and
mov
nop
pop
hlt
test
sbb
add
mov
mov
addr16
outsl
sub
int3
mov
inc
adc
push
jo
loopne
xchg
aam
and
cmp
pop
mov
imulb
fmulp
adc
addl
or
icebp
loopne
xchg
clc
dec
pop
daa
and
orb
and
mov
in
repz
or
push
or
dec
aaa
push
cmc
subl
xchg
std
push
xchg
push
lods
xchg
add
not
in
pop
jp
mov
insb
popa
icebp
stos
cli
aad
mov
push
adcb
movsl
mov
mov
mov
xchg
mov
mov
mov
repz
ja
shrl
outsl
adc
xchg
pop
xchg
jno
cmp
xchg
push
dec
mov
pop
ret
into
sub
dec
lahf
mov
and
mov
xchg
jp
and
push
js
sbb
rorb
rclb
insb
mov
pop
pop
jmp
lds
aam
lret
orb
push
je
cmpsb
mov
adc
add
adcb
test
and
sub
fcoms
les
clc
test
push
in
and
mov
xchg
sbb
and
dec
adc
lahf
push
sahf
es
inc
cmp
xchg
cmp
inc
outsb
ret
out
fisubs
cmpsb
addl
mov
loope
lods
cwtl
arpl
mov
dec
outsb
xor
cmpsl
cmp
je
movsb
cmpsb
lds
sarl
lea
add
adc
aas
test
in
cmp
jl
aad
aas
lods
jo
mov
xor
dec
dec
or
bound
call
xchg
cmpsb
loope
cmp
jl
xchg
pusha
aam
sub
push
dec
inc
cwtl
imul
pushf
insb
mov
jmp
mov
mov
xchg
push
lock
sbb
xor
cmp
ljmp
ljmp
movsb
negb
clc
mov
xchg
mov
dec
loope
shlb
andb
adc
scas
pop
pop
sub
sub
jmp
mov
pop
or
push
scas
xchg
push
xor
aaa
xlat
lcall
ss
scas
lret
push
xchg
insl
out
hlt
xchg
jb
sub
pop
shrb
add
mov
int
lahf
jge
and
outsb
out
aas
mov
lds
xchg
lods
xor
xor
fbstp
sub
dec
sbb
cmp
fimuls
lods
jle
sub
mov
lahf
add
cmp
jge
and
enter
pop
daa
stos
fs
xchg
dec
add
jg
adc
dec
imul
negb
jne
inc
jae
xchg
push
lods
or
xor
mov
mov
fwait
sti
xchg
push
mov
inc
xchg
mov
outsb
imul
bound
sbb
fmull
pushf
std
add
fistpl
mov
addb
mov
cld
fsubrs
or
in
sbb
fidivrl
clc
adc
lahf
neg
mov
fistl
cltd
pop
out
sub
fidivrl
daa
rclb
ret
mov
jno
mov
scas
sub
mov
int
rcrl
sarl
pop
or
out
outsb
pop
jp
add
inc
dec
cmpl
or
aaa
mov
xchg
shr
int3
aas
fwait
aam
mov
aad
xchg
cmc
fs
cmp
into
push
ret
loopne
es
inc
xchg
sub
xchg
xchg
jno
dec
shlb
pop
aad
xor
add
pushf
adc
xchg
test
insl
fidivrs
pusha
sbb
push
out
nop
mov
jmp
ljmp
mov
cli
dec
ds
negb
mov
jae
popf
andl
movsl
pop
in
stos
xlat
movsb
test
or
pop
mov
dec
inc
adc
xchg
ja
inc
test
xor
cld
fwait
dec
mov
gs
imul
pop
test
mov
dec
jg
inc
cmp
push
jo
jns
gs
addb
mov
xchg
mulb
push
pusha
mov
notb
test
add
pop
in
jbe
cmpsb
das
mov
ja
dec
dec
sub
jl
jae
mov
shl
inc
call
dec
mov
imul
push
popa
mov
adc
in
scas
push
rcr
jne
xor
jl
pop
mov
insl
add
mov
fwait
push
and
adc
out
xchg
pop
int3
dec
adc
jns
loop
rorl
rolb
ss
fld
je
dec
mov
int3
and
lods
pop
stos
or
or
inc
add
push
or
cs
stos
push
xchg
mov
mov
scas
xlat
add
push
shrl
jno
xchg
add
mov
push
xor
loope
pusha
stc
sti
mov
inc
inc
leave
sbb
mov
lahf
xchg
cmpsl
jo
inc
in
push
push
push
and
fisubl
push
out
mov
lock
es
jp
adc
sbb
rorb
repnz
inc
stos
out
out
jecxz
xor
dec
dec
hlt
test
dec
in
push
test
aas
pop
cld
sbb
aam
sahf
jp
ds
mov
sub
iret
fsubr
lret
imul
cli
add
push
shl
lods
jnp
add
pop
xchg
cwtl
lahf
out
mov
cmp
jae
xchg
or
pop
sub
out
sub
sbb
les
mov
out
lds
xlat
lock
push
or
dec
addr16
nop
out
gs
xorb
icebp
lock
rcrl
in
cmp
or
shll
sub
mov
mov
mov
in
mov
outsb
add
add
xor
test
xor
xchg
iret
xchg
pextrw
xor
jg
insl
imul
out
dec
cld
xchg
stos
sub
ret
add
test
fstps
ffreep
and
sti
aam
ret
jmp
pop
hlt
dec
aaa
xchg
mov
mov
mov
adc
mov
loope
xlat
int
push
popf
inc
pop
cwtl
sahf
test
dec
sbb
dec
out
adc
xchg
out
mov
dec
jecxz
adc
lret
pop
or
pop
pop
adc
jno
push
xor
shrl
pop
lret
ja
xchg
inc
adc
std
mov
or
cmpsb
div
jne
repz
cltd
mov
lret
lods
push
int
mov
and
clc
mov
and
sbb
ljmp
stos
xor
and
out
outsl
stos
push
cli
jo
adc
std
stos
stos
and
mov
xchg
notb
dec
fwait
mov
pop
aas
pop
enter
mov
inc
pop
mov
sbb
imul
mov
jno
cmp
lods
or
daa
cmc
fadd
mov
cmp
mov
inc
xor
test
aad
push
xchg
leave
ret
jmp
negb
pop
fwait
ret
std
inc
clc
adc
xor
pushf
inc
inc
dec
add
cmp
or
cmpsl
xchg
push
mov
mul
shlb
jo
push
and
jl
mov
test
in
icebp
aas
cld
div
fcompl
imul
xchg
push
or
mov
pop
push
addr16
pop
roll
mov
and
adc
sbb
testb
mov
push
mov
inc
fadd
mov
into
aad
mov
adc
fnsave
mov
and
outsb
add
hlt
ret
inc
leave
pop
insb
mov
mov
inc
xchg
sub
sar
incl
fbstp
repnz
xchg
popf
mov
mov
push
sbb
out
inc
xchg
push
push
cmc
and
daa
test
rclb
xor
cmp
sbbl
cld
dec
outsl
or
pop
fs
sbb
jns
lret
out
lods
mov
ret
imul
push
shlb
cmp
fst
push
push
scas
xor
scas
push
jl
dec
mov
jbe
jb
cs
xchg
pop
pop
mov
push
add
sub
cmpb
jo
arpl
or
cltd
ss
and
sbb
adc
xor
stos
movsl
out
pop
inc
lcall
and
mov
jne
and
xchg
jle
lods
mov
jmp
psrld
or
stos
or
roll
inc
xchg
mov
in
cmc
arpl
adc
cwtl
jp
loopne
sub
push
cmp
flds
into
jbe
and
call
test
movsb
inc
pop
rolb
lods
imul
pop
dec
inc
jg
cmp
and
cltd
fcompl
ret
adc
outsl
rcrl
lock
inc
stos
add
loopne
lock
out
call
sbb
arpl
jg
xchg
mov
xchg
ljmp
insb
add
sbb
mov
push
outsb
jns
sbb
jae
movsb
pop
testl
shlb
ljmp
cmp
fnstenv
cmp
scas
fildl
mov
mov
xor
fildll
mov
xor
xor
sar
adc
mov
test
pop
push
or
inc
dec
push
lret
ja
cs
lods
lahf
les
ja
mov
stos
xchg
jbe
sub
leave
cmp
sahf
inc
mov
imul
call
inc
in
cltd
push
insl
mov
shl
filds
incl
adc
shll
mov
insb
xchg
rcrl
add
pop
movsb
and
and
into
stc
inc
pushf
dec
add
xor
sahf
out
push
fwait
roll
mov
movsb
xchg
push
popa
stos
ret
push
mov
adc
fs
pop
or
arpl
dec
adc
fdivl
call
aas
cmpsb
xor
call
fsubrs
popf
lcall
cmp
arpl
fcmovu
pop
add
out
scas
mov
adc
adc
popl
jmp
jb
jp
stos
cmpsb
xor
out
push
imul
aam
mov
inc
sub
xor
and
and
les
xchg
sub
rcl
mov
jg
sub
sarb
mov
push
xchg
xchg
xor
fstps
and
aaa
cmpsb
daa
leave
push
jecxz
dec
xor
sahf
cmpsb
mov
std
cmp
aam
jle
mov
add
dec
ss
test
adc
fimuls
jl
cwtl
int3
cmp
test
jbe
xchg
ja
and
mov
sbb
hlt
outsb
dec
xor
mov
xor
clc
inc
inc
js
jl
mov
push
mov
cmpsl
xchg
dec
inc
daa
mov
cmpsl
into
pop
jns
mov
rorb
pop
dec
sub
pop
add
cltd
jnp
loopne
shrl
rcr
xchg
lcall
inc
mov
mov
sbb
imul
fidivrs
dec
inc
xchg
dec
fiaddl
sbb
push
sub
sbb
mov
jne
mov
dec
fcomip
sbb
pop
jno
lds
mov
iret
lds
xchg
les
sbb
sbb
pop
jno
pop
mov
pop
inc
lcall
fiadds
push
mov
cmc
adc
inc
push
rolb
jb
adc
fistps
pop
mov
pop
xor
repz
into
push
popf
fwait
xor
dec
mov
xchg
push
dec
lret
mov
and
xor
mov
cmp
fsubr
dec
sbb
pop
adc
js
sahf
imul
push
call
loopne
ffreep
xor
imul
lcall
jle
jle
movsl
mov
test
or
xor
std
sbb
sbbl
icebp
xor
fcompl
cld
gs
add
adc
insl
cmp
sub
sub
jp,pn
testl
nop
jns
bound
leave
dec
inc
addr16
mov
orl
adc
or
cmpsb
je
loope
inc
push
or
iret
popa
mov
xchg
sub
pop
in
cmpsb
mov
mov
inc
add
sbb
and
in
stos
pop
jmp
test
lret
cmc
lods
stos
xchg
enter
mov
push
jg
pushf
push
test
sbb
cli
lret
jmp
rcll
xor
sbb
movsb
stc
sub
adc
mov
ret
and
lea
bound
inc
pop
and
xor
jp
lods
mov
jmp
push
imul
stc
xchg
cmp
cwtl
lds
inc
jmp
hlt
fcmovbe
ror
mov
rcll
hlt
cmp
mov
fistpl
stos
mov
cmp
out
jmp
in
fmull
mov
insb
add
pop
mov
out
lahf
cmp
mov
cli
insl
xor
out
pop
add
fdivl
adc
xchg
mov
xchg
ja
mov
push
mov
mov
aam
pop
xor
adc
adc
mov
jns
aam
movsb
and
xchg
jl
inc
sub
loop
lods
mov
fmulp
lcall
sbb
xchg
shlb
pop
mov
sub
jb
jle
call
xchg
movsl
outsb
mov
repz
aad
nop
ror
jp
and
je
xlat
cmpl
xchg
ss
pop
les
mov
mov
adc
inc
add
sbb
into
mov
lods
imul
ljmp
xchg
xlat
xor
adc
adc
pop
or
out
push
lods
roll
shrl
testb
cmpsl
mov
or
into
mov
add
fwait
push
and
add
mov
sbb
sub
inc
fsubrl
fsubs
mov
mov
lds
cwtl
out
loopne
mov
mov
lret
outsb
popa
push
mov
mov
iret
lods
imul
fstpt
sbb
int3
ljmp
dec
imulb
add
pop
sbb
scas
mov
or
xlat
gs
jl
xor
cli
in
push
adc
sub
sbb
dec
pop
fidivrl
and
mov
mov
push
xor
xchg
mov
aam
pushf
dec
dec
rolb
aas
mov
jmp
js
cs
and
xchg
dec
dec
shlb
sub
test
das
lret
xchg
cmpsb
cmp
push
mov
adc
fadds
or
dec
cmp
scas
decb
or
inc
mul
sbb
mov
adc
rcrb
jo
add
out
xlat
and
pop
push
rcr
pop
xor
xor
sahf
mov
mov
and
xor
xchg
stos
inc
fwait
and
fwait
loopne
stos
outsb
xor
clc
jle
insb
or
fldcw
pop
sub
mov
adc
sub
jg
cmp
in
daa
sbb
pop
inc
lods
movsl
es
adc
inc
sbb
sbb
decb
insb
imul
or
add
shlb
cmp
ja
adc
adc
imul
cmp
inc
repz
cmpsb
inc
dec
pusha
jb
dec
sub
out
lds
mov
adc
and
push
jle
push
mov
stos
lea
mov
ret
rclb
lret
lcall
cmp
imul
pop
ss
jbe
leave
test
add
fdiv
cmpl
adc
imul
hlt
add
xchg
push
iret
mov
int
out
push
xlat
xlat
sub
and
out
lea
nop
cld
pushf
test
push
push
or
mov
aad
sub
jb
js
movsb
adc
sbbl
lods
fisubl
jne
mov
sbb
insl
xchg
sub
pop
ja
stc
enter
xor
daa
ss
push
jge
xor
stc
adc
jbe
and
sti
aad
lret
rolb
push
fistl
adc
pop
mov
fisubl
enter
push
cmp
pop
sub
add
or
and
xor
jl
dec
jno
mov
sarl
xchg
dec
push
faddl
jp
ljmp
repz
ja
dec
cmp
cmp
or
sbbb
lods
sub
movsl
sub
std
jle
hlt
mov
add
test
fwait
xchg
fdivrs
pop
sub
mov
mov
sbb
push
jno
or
arpl
sbbb
sbb
jle
push
mov
stos
xor
repz
loope
mov
stos
fisubrl
xchg
in
xchg
mov
int3
sbb
xchg
cmpsb
and
xlat
inc
inc
aas
aad
leave
movsl
jns
dec
push
inc
mov
dec
cli
dec
lea
xchg
arpl
mov
add
divb
sbb
adc
les
mov
insl
adc
dec
or
or
jp
dec
out
adc
mov
jl
ljmp
xor
xorb
fisubl
hlt
lds
test
je
stc
dec
fs
mov
xchg
js
repz
mov
enter
add
jb
aaa
mov
mov
out
dec
xchg
xchg
sbb
out
mov
xchg
inc
sti
mov
shlb
mov
cmp
ljmp
testb
cmp
ret
mov
rclb
aaa
mov
cmpsb
out
or
cld
daa
jb
xor
jl
sbb
insb
outsb
pop
sub
inc
jl
in
shr
and
pop
xchg
push
lds
je
mov
jmp
fs
inc
subb
mov
pushf
leave
and
cmp
pop
movsl
fmuls
lret
xor
mov
insb
imull
push
imulb
data16
lret
mov
shll
cmpsb
test
sub
roll
add
xchg
and
inc
movsl
inc
or
add
or
sbb
push
cmc
sub
std
push
stos
add
push
sbb
push
int3
subb
xchg
xchg
pop
in
adc
inc
cmp
imul
jae
in
loop
jo
mov
leave
mov
cwtl
outsl
decl
lahf
stos
scas
lret
jg
pop
lods
xor
cmp
test
int
xchg
inc
push
or
pop
xchg
push
fimuls
loope
in
imulb
xor
loop
aad
adc
mov
movsb
push
pop
jno
adc
fists
shrb
sbb
xor
bound
cli
sub
daa
call
or
xor
add
das
lret
xchg
rsm
pop
popf
cmp
sbb
in
xchg
push
imul
xchg
sub
pop
add
cmpsl
or
mov
pop
fdivr
je
test
mov
je
xor
ret
xchg
pop
or
imul
mov
add
pop
push
lds
movsb
out
das
cmp
add
fucomp
jbe
leave
xchg
std
xchg
in
sbb
jbe
movsl
out
stos
mov
mov
xor
fildl
pop
inc
nop
loope
movsb
outsl
fsubl
and
pop
push
ja
sub
xor
fstps
mov
inc
dec
or
cmp
xor
cmp
in
cwtl
outsl
pop
stos
in
mov
andb
enter
sbb
adc
aas
nop
lret
bound
mov
leave
vmwrite
adc
mov
cmp
aas
imul
sub
push
push
movsl
jns
add
mov
decl
test
sub
dec
lret
mov
fsubs
out
xor
out
push
push
xchg
stos
dec
jge
jno
inc
push
mov
cli
jne
xchg
cli
addb
jle
insl
enter
jno
cmp
scas
out
outsl
stc
lcall
stos
js
imul
mov
lods
jmp
sub
push
pop
aam
mov
test
mov
pusha
js
xlat
test
adc
jmp
test
sbb
pop
repnz
mov
xchg
scas
adcl
dec
lods
mov
cltd
push
mov
adc
movsl
pop
stos
js
jmp
icebp
push
xchg
into
pop
or
outsl
outsb
fldlg2
dec
cmp
and
das
push
push
xlat
adc
enter
mov
cld
cmp
jbe
idivl
ss
lods
adc
cmp
push
loope
fwait
dec
cmp
dec
inc
xor
push
mov
sbb
xchg
daa
jl
inc
and
and
xlat
xchg
xor
mov
pop
mov
xchg
mov
xchg
cmpsb
dec
inc
fs
cld
xor
lods
xchg
fidivrs
xchg
mov
ret
sbb
icebp
mov
mov
adc
fistps
decl
test
push
jo
cmp
cmc
inc
mov
inc
sar
jg
sahf
aad
push
add
mov
dec
sbb
add
jg
int3
rorb
inc
ss
mov
inc
gs
mov
add
push
aas
inc
adc
pop
addr16
xor
inc
pop
push
ficomps
imul
cs
adc
xor
rorl
lock
ret
sub
push
outsl
inc
int3
push
aad
cli
mov
jp
stos
jecxz
jnp
out
mov
rclb
lret
iret
sub
jle
and
add
cld
mov
movsb
pop
loopne
or
xorl
enter
aam
pop
rolb
sub
or
fldl
imulb
daa
cmp
scas
lret
mov
in
int
inc
out
test
sub
scas
adc
jno
xchg
ja
dec
scas
rorb
mov
clc
stos
push
mov
aas
outsl
cli
btc
loop
or
lock
shll
push
aaa
or
in
jmp
mov
cwtl
sbb
aaa
adcl
jmp
xor
js
lcall
lret
push
cmc
and
xor
push
ret
test
cmp
or
dec
add
xchg
mov
in
sub
cld
sbb
popf
fwait
add
xchg
push
imul
adc
mov
pop
pop
das
mov
cmp
fs
pop
sbb
dec
xchg
cmp
rorl
mov
in
lahf
mov
xchg
fiadds
mov
inc
jbe
cmc
add
mov
pop
outsl
pop
jo
sti
mov
sbb
pop
inc
pop
leave
mov
pop
inc
add
fwait
scas
xor
sub
pop
or
int
mov
in
xchg
jle
mov
xorb
jle
lods
iret
int
and
or
jge
out
enter
sar
outsl
mov
lods
lret
mov
test
push
add
push
lcall
int3
xor
stc
int
mov
clc
pop
xlat
sub
insb
adc
cmp
imul
mov
orb
ret
jae
mov
sbb
into
ljmp
incl
xlat
sub
jmp
jecxz
xchg
cmp
jle
pop
call
pop
adc
xor
mov
mov
fwait
pop
xor
in
push
clc
ds
dec
cmpsb
jg
xchg
mov
mov
mov
xor
test
dec
and
jne
cmp
lret
cmp
fstp
xchg
cs
add
out
adc
les
gs
out
ljmpw
icebp
pop
ds
or
add
insb
pop
xor
imul
mov
dec
xor
mov
shl
in
mov
xchg
dec
loope
mov
orl
outsb
and
jb
popf
lcall
add
stos
loope
mov
sub
sbb
clc
jnp
jl
fidivl
jo
xor
cmp
stc
mov
jo
fiadds
into
dec
into
mov
shlb
cmp
outsb
ret
dec
ja
or
sbb
dec
adc
xor
iretw
mov
mov
push
push
popa
hlt
add
fisttps
and
jb
sahf
xchg
cld
movsl
or
sub
sarb
int3
mov
add
fs
scas
roll
cs
into
jmp
jne
sbb
inc
jp
pop
mov
roll
sub
add
push
inc
push
movsbl
xchg
or
mov
inc
cmp
shll
inc
hlt
lods
iret
pop
repnz
or
mov
in
pop
xchg
push
pop
xchg
and
xor
sub
jg
arpl
insb
xor
stc
das
sti
cmp
push
dec
or
sbb
loop
scas
inc
add
fwait
xor
pop
mov
mov
sub
cmpl
jecxz
mov
std
pop
shlb
cli
call
sbb
icebp
shlb
fcomps
mov
add
adc
jmp
mov
jg
xchg
lcall
pushf
mov
stos
jge
mov
jo
jbe
repz
add
aad
adc
sbb
and
xor
out
les
jmp
xor
cmp
mov
inc
ja
fnstcw
fsubs
cmp
sub
xlat
jb
dec
out
mov
pop
ret
push
fwait
loope
loopne
bound
or
and
or
in
aad
addl
imul
push
shlb
and
mov
jns
and
cmpsl
mov
dec
sbb
std
jbe
cmpsb
stos
cmpsb
mov
mov
jns
push
or
jnp
mov
in
cmp
mov
ss
shlb
lock
sub
push
xor
jecxz
hlt
arpl
sub
decb
addr16
dec
jae
in
bswap
pop
leave
xor
jge
add
rolb
sbb
popa
mov
push
out
lea
ss
xorb
fnsave
jl
popf
xor
lcall
enter
jnp
push
pop
mov
or
je
pop
dec
or
sbb
mov
push
dec
sub
mov
int3
aam
pushf
pop
pop
pop
shlb
mov
sub
pusha
nop
inc
imul
arpl
xchg
push
and
xor
xor
push
xor
out
nop
xchg
mov
mov
mov
ds
sti
inc
inc
jle
xchg
sarb
subl
push
pop
out
scas
sti
cltd
inc
xbegin
nop
jbe
in
sahf
cld
cmpl
mov
and
std
out
push
popa
insl
sub
or
xor
cld
int
call
lock
and
pop
aas
add
insl
push
inc
cli
stos
js
mov
test
lret
loop
fs
xchg
mov
or
push
push
cmc
fstpl
movsb
jne
xchg
xchg
mov
mov
sub
xlat
dec
lock
leave
jnp
lea
jg
mov
lahf
mov
adc
lock
mov
adc
repnz
rcrl
mov
cmpsb
cmp
ljmp
jns
enter
xchg
xchg
add
psrad
leave
jle
pop
cld
imulb
dec
aam
dec
cmp
lock
and
or
fisubs
fidivrl
bound
jecxz
pop
cld
and
sti
loop
daa
dec
int3
fcomps
push
push
aaa
jmp
inc
dec
stc
int3
fdivrl
scas
out
rorl
push
mov
out
fsubrl
mov
into
xlat
icebp
stos
push
adc
or
push
imul
push
dec
orl
in
adcb
std
xchg
pop
das
movsl
lcall
xor
add
lahf
jmp
push
fiadds
lods
leave
add
mov
sbb
testb
test
jne
xchg
imul
out
push
sbb
xor
jecxz
ljmp
insb
mov
fdivs
aam
lret
mov
ficompl
popf
push
lea
xchg
insb
adc
push
leave
outsb
loop
pop
add
insl
xchg
dec
in
dec
push
loopne
xor
sub
sarb
and
es
pop
outsl
dec
insl
jns
mov
out
adc
cmc
lret
push
push
dec
mov
xchg
pop
cwtl
out
add
adc
arpl
sbb
pop
pop
and
outsb
xor
outsb
scas
xchg
mov
xor
jo
arpl
sahf
in
push
pop
jae
test
inc
imul
and
hlt
loop
jbe
mov
arpl
jecxz
lahf
cwtd
popf
jb
clc
insb
adcl
adc
cmp
xor
xor
cld
push
push
xlat
stos
ljmp
bound
xor
and
sub
out
sub
sub
ljmp
loopne
jg
mov
dec
xorb
and
sbb
lea
jmp
or
sbbb
sbb
inc
adc
test
les
outsl
in
mov
outsb
in
pop
ret
adc
mov
push
outsb
idivl
cli
aas
fdivrl
xchg
mov
imulb
scas
dec
xor
ja
sti
adc
mov
ja
mov
xchg
dec
outsb
mov
cmp
add
fwait
jge
rolb
scas
or
fidivl
sti
imul
xchg
jnp
add
setl
push
mov
dec
xchg
into
pop
xchg
mov
xchg
adc
inc
stos
aas
mov
sbb
in
push
pop
arpl
movsl
notl
mov
out
add
jle
mov
clc
adc
cmpl
lahf
imul
jae
loope
cmp
dec
cmpsb
stos
aas
scas
pusha
test
mov
sbb
xor
xor
out
gs
popf
out
sbb
inc
fiaddl
dec
ss
dec
or
push
outsl
pusha
xor
pop
cmc
mov
leave
aad
pop
out
outsb
sbbb
fwait
sbb
mov
or
pop
pop
cmp
clc
addr16
bnd
loope
add
arpl
testb
push
dec
lcall
mov
sbb
pop
jmp
mov
mov
or
xchg
inc
stos
cld
icebp
std
cli
jno
sbb
push
pop
mov
adc
dec
lcall
mov
fidivs
or
push
ret
out
or
xor
cmp
cmp
or
dec
aam
jb
pop
jl
xchg
adc
scas
xchg
push
adc
mov
xor
movsb
xor
mov
divb
idivb
xchg
arpl
jo
mov
jg
or
push
and
jg
call
xlat
fwait
fs
mov
push
pop
ljmp
pusha
lds
enter
rcrb
into
in
cmp
rolb
loopne
or
jne
mov
mov
xchg
xchg
mov
sbb
leave
rolb
jecxz
loop
pop
das
addl
pusha
shlw
out
push
insb
cltd
adc
shlb
loopne
dec
movsb
dec
test
mov
jge
pop
jp
dec
test
push
test
ds
out
pop
push
outsl
cld
xchg
addr16
inc
test
xchg
in
mov
xchg
fdivrs
push
fwait
inc
xor
xorl
inc
shlb
imul
add
inc
adc
movsb
xchg
push
ret
mov
xchg
pop
add
in
jbe
pop
or
pop
test
mov
ss
rorl
sub
or
fsubr
sub
rcrl
cmp
outsb
pop
mov
inc
fisttpll
add
jmp
xor
push
scas
std
aaa
or
test
inc
push
icebp
loope
popf
sub
clc
rcl
ds
cmp
mov
iret
and
push
cmp
cmp
xor
shll
out
or
xchg
pop
or
jae
insb
test
jae,pn
inc
out
jle
xchg
or
pop
jle
pop
icebp
xchg
idivb
ret
lock
pop
jl
ja
fldenv
sub
push
into
and
lods
out
insl
dec
adc
cmpsl
pop
and
push
fsubs
sbb
je,pn
aam
subb
dec
out
mov
add
nop
aad
roll
or
jnp
sub
loope
ret
xchg
mov
jae
adc
lcall
sti
aam
and
xchg
add
sub
jle
and
int3
iret
adc
sbb
or
xor
adc
in
ss
andb
mov
ret
xchg
and
push
jae
cmpsl
pop
test
adc
adc
xchg
fldenv
hlt
repnz
insl
jne
fmuls
and
mov
ja
sub
add
xor
mov
in
lods
cmp
and
int
and
lahf
push
pop
and
push
xor
test
push
aam
lock
pushf
pusha
add
sbbb
cltd
or
cmp
pushf
mov
push
xor
or
cltd
or
outsb
adc
jmp
addr16
ljmp
adc
test
mov
inc
mov
and
ljmp
push
or
push
cmp
cmp
imul
and
pop
repnz
push
jne
xchg
ljmp
outsl
ljmp
insb
insl
enter
xchg
push
mov
lock
cmp
adc
mov
addl
pop
mov
jecxz
fbstp
push
bound
test
push
sbb
mov
push
stos
outsb
push
lret
cmpsl
and
movsl
pop
xchg
push
loop
sbb
mov
mov
popf
xchg
pushf
mov
add
jne
es
adc
iret
and
jge
ss
and
or
adc
out
pusha
jle
mov
mov
stos
adc
insl
pushf
jg
xor
xchg
jmp
and
mov
ja
xchg
push
dec
dec
cwtl
and
addb
leave
daa
mov
aam
loop
or
jecxz
dec
daa
jecxz
cs
out
jge
sbb
push
insl
mov
js
inc
fdiv
fisubrs
xor
mov
adc
sti
xchg
mov
imull
xchg
daa
cmp
sub
popa
cmp
xchg
xchg
bound
std
mov
adc
dec
cmp
pop
mov
dec
or
pop
outsb
pop
ss
in
jae
pop
std
adc
jg
fisttpll
repz
loope
fmul
mov
pop
frstor
dec
mov
push
cld
fstpl
pop
std
les
xchg
lret
pop
js
jge
testb
cmp
into
and
adc
mov
dec
or
call
sbb
jp
xchg
pop
cmp
xor
jecxz
cmpsb
icebp
je
imul
and
jge
cmc
mov
cmp
mov
add
jae
sub
mov
add
and
or
push
pop
call
xchg
dec
sbb
call
cltd
cmp
xor
pop
fsqrt
jno
or
leave
aad
mov
xchg
sbb
mov
out
mov
sbb
adc
shrl
cmp
jb
mov
inc
and
ss
call
jmp
xchg
aad
adc
outsb
rolb
push
divl
scas
ficompl
decb
bound
subb
pushf
in
pop
mov
dec
mov
pop
add
xor
loop
icebp
rclb
rcrb
stc
xor
bound
jecxz
fidivs
adc
lock
idivb
or
shll
adcl
ret
testl
jnp
mov
mov
ss
and
jmp
xor
dec
into
mov
pop
mov
mov
data16
xlat
ja
jb
fdivp
rclb
mov
lods
sub
push
cwtl
mov
dec
mov
arpl
push
pop
sbb
mov
push
fcompl
movsb
mov
pop
aas
js
sbb
jne
push
pop
mov
pop
int3
mov
dec
inc
out
lcall
xor
lock
mov
sbb
xor
pop
pop
dec
in
mov
cmp
push
cmp
cmp
jg
sbb
adc
jo
xor
jle
push
pop
popw
outsl
inc
cmp
insl
mov
xor
jg
jl
cmpb
clc
in
mov
xor
push
fcmovu
pop
rol
loope
cmp
push
in
int
iret
mov
dec
push
and
es
fs
or
cmp
jb
scas
in
ds
jmp
push
ljmp
repnz
jg
mov
adc
jl
push
jmp
aam
int
nop
mov
sub
pop
adc
outsl
sub
cmp
scas
sbb
cltd
test
arpl
add
shlb
cmp
jns
push
push
cmc
jae
popf
sub
stc
push
testb
imul
vpsrlw
fiadds
ss
icebp
mov
mov
es
fwait
mov
lret
lods
xchg
push
adc
sahf
aas
hlt
out
cmpsl
test
mov
in
dec
out
rclb
shlb
xchg
scas
das
dec
add
fisttpl
xchg
and
dec
add
push
pop
pop
in
rol
into
cltd
mov
in
ret
mov
dec
cmpsl
xchg
lcall
inc
mov
and
push
out
xchg
outsb
insb
mov
stc
ljmp
sub
jge
push
test
jmp
add
mov
aam
inc
inc
jnp
in
mov
push
mov
out
lcall
aaa
std
cmp
pop
xorb
fldt
fldl
adc
in
lds
jle
mov
call
add
mov
jne
in
mulb
stc
insl
or
in
popa
lea
or
pop
push
cmpsw
push
repnz
mov
repz
cmp
jb
loop
rcr
adc
lret
cmp
xor
cli
lods
call
and
and
cmpsl
cmp
xor
cli
pusha
leave
mov
cmpsl
or
movsl
pop
cltd
test
hlt
add
adc
xchg
lcall
mov
fiadds
dec
shr
xor
cwtl
cmp
jle
mov
or
test
add
pushf
shl
lahf
mov
cmp
daa
sarb
rclb
xor
jnp
icebp
pop
addr16
push
scas
je
decb
inc
fdivrl
hlt
lcall
mov
cmp
in
scas
aas
lret
daa
jg
dec
aaa
sbb
adc
sbb
mov
jle
pushf
adc
notl
loopne
insb
xor
in
push
jne
push
andb
xchg
mov
jge
push
scas
dec
pop
pop
repz
push
idivl
loope
cmp
ffreep
mov
and
js
adcl
pop
orb
mov
insb
js
push
and
loopne
je
repnz
xor
movb
enter
fwait
out
bound
jnp
cmp
dec
sahf
shl
sbb
xchg
sar
jb
rolb
insl
xchg
mov
cld
andl
sti
sarb
sub
ja
xor
cld
sti
mov
inc
and
in
push
syscall
mov
scas
mov
insb
inc
daa
pop
stos
shrb
cld
pop
test
add
sti
popa
mov
arpl
cmp
dec
addl
psrld
xchg
daa
int
lock
adcl
es
ficomps
add
mov
lret
mov
cmp
nop
fcoms
stc
mov
mov
cmpb
adc
shll
xor
adc
ret
cmpl
adc
out
lock
mov
shrb
sub
mov
pop
into
xor
popa
add
cld
adc
inc
hlt
jge
push
dec
ja
pop
stos
mov
mov
dec
mov
fildl
jo
pop
iret
in
sahf
add
out
sub
movsl
mov
rcl
dec
incb
inc
sub
lods
in
out
test
dec
pop
xor
dec
aaa
outsl
jl
mov
adc
push
imul
dec
in
lea
mov
mov
mov
call
inc
in
cmp
mov
shll
sti
push
insl
test
inc
or
cmp
stos
scas
inc
add
hlt
and
mov
ret
out
xchg
dec
cld
out
iret
sahf
push
push
rolb
clc
leave
fwait
mov
dec
xor
lods
add
data16
mov
or
sub
loope
icebp
je
mov
jno
dec
out
movsl
pushf
adc
add
inc
cmpsl
cmpsb
xchg
adcb
stos
ret
mov
push
inc
add
xchg
jnp
loopne
scas
ja
psadbw
rolb
dec
les
and
mov
push
shl
push
mov
inc
imul
shll
add
in
inc
scas
es
jl
jge
ret
jnp
jecxz
xor
ret
jo
insl
test
imul
xor
inc
mov
push
repz
out
popa
outsb
int3
add
mov
icebp
sbb
into
mov
lds
xchg
add
fistpl
sbb
lock
pop
sarb
div
jnp
xchg
dec
adc
push
aad
push
bound
aaa
xchg
mov
push
popf
push
xor
push
xlat
out
push
mov
push
dec
ret
ficoml
mov
into
fwait
cmc
mov
sbb
dec
xor
push
test
xor
add
addr16
push
clc
or
dec
jp
int3
jecxz
cmpsb
dec
mov
sub
pop
mov
xchg
loop
jb
mov
popa
movsl
mov
jecxz
call
mov
sbb
adc
lods
and
ret
out
mov
and
bound
fdivrs
shrb
xchg
loop
pop
cwtl
add
lods
addr16
mov
mov
iret
xor
lret
ljmp
lock
xor
jb
mov
xchg
sbb
cwtl
push
and
push
jg
dec
jmp
ret
cs
push
cli
cs
sub
adc
pop
scas
pop
enter
push
and
cmpl
mov
dec
push
push
ficoml
cld
out
inc
cmp
sarl
arpl
or
cvtdq2ps
push
cmpsl
dec
push
out
mov
pop
lods
popa
xchg
sahf
lcall
jb
pop
xor
pop
push
mov
push
or
faddp
out
push
sbb
call
pop
add
or
ret
jnp
sti
fs
out
jmp
jge
sbb
in
clc
jmp
mov
cmc
insb
cmpsb
xlat
and
arpl
mov
jb
imul
lret
push
lret
test
sbb
inc
inc
push
sbb
xchg
subl
ret
jnp
sub
and
es
jo
in
mov
or
pop
xchg
inc
push
push
jmp
xlat
xchg
ja
fiadds
adc
mov
jmp
sbb
inc
imul
add
jge
push
xchg
repz
and
test
loope
ror
insl
leave
xchg
or
or
hlt
inc
mov
sub
aad
out
add
push
sbb
mov
sbb
jnp
sub
aas
stc
movsb
xor
inc
or
mov
es
adc
in
xor
scas
fcoml
fdivrs
loopne
call
int3
data16
faddl
mov
fistpll
xchg
dec
ss
fmul
push
outsb
jl
add
aad
call
adc
cli
mov
in
xchg
adc
js
xor
stc
jmp
jne
or
and
xor
or
push
movsl
adc
enter
aam
arpl
pop
add
pop
icebp
and
leave
ficompl
or
inc
dec
arpl
jns
add
cmp
or
pop
es
push
jecxz
cmp
jo
pop
jmp
jg
xchg
test
stc
pop
aad
mov
jne
lods
jbe
push
pop
or
inc
arpl
jne
addr16
aad
stos
or
xor
and
dec
sbb
push
jecxz
jo
aaa
jno
loopne
or
or
idivb
pop
xchg
mov
dec
sti
cmp
inc
mov
packuswb
xchg
addr16
mov
jle
push
int3
mov
xor
mov
mov
adc
or
adc
jmp
xor
pop
arpl
mov
or
cmp
jle
stos
add
lds
xchg
ud1
dec
xchg
leave
pop
repz
dec
arpl
mov
insb
fdivrs
out
cmp
fidivl
lea
stos
push
movb
test
inc
int
xchg
push
xchg
jns
jge
fwait
mov
les
mov
sub
insb
mov
mov
in
jge
mov
rolb
cld
adc
jmp
clc
mov
jo
cmpsl
push
dec
faddl
scas
or
nop
dec
or
cmp
push
decb
add
cmc
rorl
jae
xor
adc
jle
js
ret
mov
push
sub
je
loope
dec
pop
sarl
pop
frstor
jge
movsb
and
hlt
ja
sti
adc
inc
push
jg
movsl
xor
mov
mov
add
add
or
aad
xchg
mov
dec
mov
inc
add
pop
das
mov
aam
jp
fisttpl
dec
call
inc
outsb
jge
inc
mov
adc
xchg
push
and
dec
cmp
sub
add
out
lea
xchg
sbb
xorb
sbb
cmc
push
mov
jp
pusha
popl
and
mov
add
mov
out
test
push
jbe
mov
mov
stos
add
leave
aaa
inc
movsl
insl
stos
addr16
push
lods
xor
data16
xchg
cli
mov
cmc
inc
mov
jmp
dec
hlt
or
stos
sbb
push
js
mov
push
sbb
loopne
lock
sub
lret
and
sub
and
outsb
push
lods
jg
jg
fcmovnu
jb
test
xchg
xchg
cmpl
or
sbb
lock
fadds
xor
sbb
repnz
adc
bound
cmp
mov
inc
mov
cmp
test
jmp
pop
mov
pop
jp
flds
sub
xchg
pop
mov
addr16
ja
pop
mov
jbe
loop
mov
add
divb
outsl
pusha
rep
sub
mov
adc
aam
fwait
pop
mov
push
push
mov
add
fwait
outsb
clc
gs
lcall
pop
push
in
aaa
adc
add
fbld
clc
ja
scas
aam
pop
cld
push
pop
das
cmpsb
add
pop
adc
fucomi
jns
add
xor
jle
fisubrs
hlt
and
pop
mov
arpl
inc
dec
push
popw
or
notb
mov
mov
cltd
mov
xchg
xor
sarb
ret
orl
mov
add
inc
sub
mov
push
cmpsl
cs
rcr
fdivrl
dec
lea
out
gs
ret
shl
xor
pop
pop
call
int3
mov
jg
lcall
std
pushl
stos
sbb
xor
sahf
dec
pushf
in
popf
fsubrl
test
pop
cmp
es
int3
adc
sub
mov
sub
into
icebp
imul
and
pop
xor
outsb
push
xchg
in
push
mov
sahf
dec
movsb
xlat
mov
xchg
insb
mov
add
stos
mov
add
mov
jg
jb
mov
lds
xor
xchg
push
mov
sarl
vmovaps
dec
jbe
sti
adc
mov
inc
inc
scas
cmp
clc
mov
or
push
cmp
jns
imul
pop
fld
fistpl
or
scas
loope
inc
sbb
push
lret
popl
mov
xor
pop
xchg
lods
push
lods
sbb
shlb
jge
xchg
adc
cmp
add
dec
inc
inc
xor
clc
les
inc
in
jns
dec
mov
sbb
or
xchg
push
xor
push
test
mov
or
sbbl
jns
dec
xchg
sub
mov
into
jge
dec
aaa
and
movsb
push
inc
dec
xor
mov
gs
syscall
dec
aas
sbb
mov
mov
sbb
push
divl
add
jg
inc
fstps
incl
lock
outsl
push
xor
xor
jbe
in
cmc
insb
xchg
mov
adc
mov
dec
mov
outsl
fwait
mov
fwait
mov
int
mov
pop
or
pushf
xchg
into
xchg
inc
cmp
test
fistpll
dec
push
rorl
pop
pop
mov
jbe
loope
inc
je
xchg
insl
frstor
sub
stos
in
push
or
push
push
pop
repz
jmp
decb
pushf
lea
fisubrl
loopne
mov
cwtl
cmp
mov
jbe
insl
test
sbb
stc
or
and
xchg
xchg
orl
mov
loope
loope
xor
inc
rcr
imul
ret
xchg
push
movsb
mov
xor
dec
jb
out
jb
push
ficompl
in
imul
aam
por
xchg
mov
xor
mov
fcmovne
mov
das
rclb
inc
or
iret
rcr
sbb
or
jg
sbb
notb
xor
push
roll
sub
cmp
or
cmpsb
jbe
cwtl
add
sbb
mov
test
inc
js,pn
add
stos
and
push
ss
jge
inc
repz
std
test
xlat
mov
cld
data16
movsb
test
inc
add
stos
shlb
outsl
fidivs
test
inc
scas
into
xor
xor
dec
xchg
out
repz
push
lahf
mov
sub
mov
lcall
sbb
pop
mov
lds
dec
jae
repz
pusha
loope
xchg
out
push
fwait
jecxz
jae
xor
je
jae
out
push
scas
sbb
adc
imull
jecxz
out
sub
mov
and
cltd
jmp
and
xchg
sarb
test
mov
and
insl
nop
dec
dec
xchg
clc
mov
prefetch
inc
jbe
lods
outsl
or
jne
jno,pt
xchg
out
sbb
mov
mov
ljmp
sub
xlat
ja
in
ficomps
pusha
rorb
mov
or
push
lret
sbb
sub
lret
cs
and
dec
mov
insb
idivb
roll
inc
pop
pop
jae
gs
push
shrb
fsubs
in
stc
cmp
test
mov
jne
notb
inc
sbb
orl
add
inc
mov
pop
test
test
push
int
mov
lds
rcll
xchg
mov
add
std
aad
xchg
adc
mov
add
cmp
rcll
adc
xchg
xchg
adcb
hlt
push
or
xor
outsb
jle
ja
xchg
pop
icebp
loop
fwait
add
fwait
negb
lret
popa
pop
xor
mov
movsl
and
cmp
cmp
push
mov
in
fs
cli
test
mov
and
cmpsl
xchg
pop
iret
lods
jp
andl
stos
jbe
loope
sub
outsb
test
fdivl
aas
adc
arpl
push
push
xchg
int3
repnz
dec
xor
inc
or
cwtl
pusha
cmpsl
fwait
xchg
mov
and
lods
pop
sub
mov
push
jnp
aam
imul
std
imulb
mov
pushf
shrl
xor
lret
sub
mov
lods
es
sub
mov
shlb
cmpsl
adc
pop
in
push
scas
sub
cwtl
mov
lds
fwait
rorb
lahf
sub
add
imul
outsl
fs
arpl
mov
sbb
xor
ror
xchg
lahf
cmp
fcomip
dec
lds
cmp
test
frstor
aas
test
and
pop
add
pop
pop
fwait
enter
mov
or
jl
movsb
icebp
shll
cmpsl
and
imull
push
subb
adc
mov
push
cs
sub
mov
mov
ret
xor
cmp
out
loope
push
test
pusha
pop
adc
push
and
jno
insb
cmp
jl
push
popa
sub
repz
or
sbb
push
shlb
fsub
xchg
fiadds
jns
fildll
test
std
imul
lret
and
es
or
das
lods
fcmovnu
mov
push
insb
adc
lret
lcall
sbb
mov
je
inc
loope
sahf
mov
leave
sub
push
mov
or
inc
cmp
setne
call
adc
aad
cmpsl
mov
inc
daa
dec
push
xor
sti
std
pushf
ss
lcall
sbb
dec
mov
into
movsl
mov
repz
mov
movsl
out
pop
repnz
pop
aad
test
test
pop
shll
mov
out
add
mov
lds
adc
xchg
daa
enter
mov
mov
cld
push
in
mov
inc
pop
inc
cmp
ficomps
add
icebp
jle
in
ljmp
inc
push
clc
jo
int3
mov
popf
push
call
popa
jo
in
ret
outsl
ljmp
out
enter
popf
inc
dec
cmpsb
aam
outsb
mov
ret
adc
lods
mov
cs
sub
iret
lret
into
fistl
test
pop
pop
frstor
cld
jno
icebp
je
xor
lret
and
leave
insb
cmp
mov
mov
xor
mov
adc
stc
sbb
mov
inc
fs
int3
mov
lret
mov
dec
jmp
sbb
inc
or
in
push
repnz
cs
xlat
pop
cmp
sub
pushw
adc
mov
ja
outsb
rcr
xchg
out
mov
pop
pop
sub
jmp
jnp
fcmovu
outsl
or
negl
gs
int
dec
cs
call
inc
inc
idiv
aas
das
sbb
daa
nop
cmc
movsl
cmp
adc
xchg
mov
push
xchg
xor
inc
and
pop
mov
xchg
outsl
lcall
dec
sti
mov
or
xchg
insb
decl
or
jp
add
inc
mov
push
and
addr16
rorl
aas
push
lods
adc
push
push
pop
jne
test
add
fisttps
pop
mov
std
pop
or
idiv
xchg
pop
jg
xchg
and
repnz
pop
ds
out
pop
and
ds
push
fmuls
fcmove
daa
pop
shrb
adc
add
daa
mov
mov
jecxz
cld
or
inc
movsl
xchg
ljmp
dec
imul
or
outsl
push
xchg
loop
fistps
xchg
xchg
inc
fbstp
popa
repz
xor
xlat
pop
out
andb
inc
lahf
mov
xor
jnp
mov
xchg
es
jl
fbstp
and
test
arpl
cmp
orl
sahf
push
mov
ja
mov
mov
ss
jns
je
pop
sbb
pop
cmp
aad
mov
shll
xchg
jp
sbb
mov
cld
testb
mov
and
decl
out
in
sti
insl
jnp
punpckldq
mov
faddp
pop
repz
imul
jg
or
pushf
fistl
cmp
jl
std
in
les
dec
fwait
xchg
sbb
dec
sub
cmp
xchg
adc
jb
pop
push
fucom
push
mov
pop
push
test
dec
cli
sub
test
fdiv
inc
mov
push
icebp
xor
imul
pusha
lret
cltd
mul
pop
lods
lods
mov
sub
aam
loopne
mov
mov
xchg
sbb
bound
jae
cmp
mov
jns
js
in
jo
jae
std
iret
xchg
jbe
inc
mov
cli
into
inc
push
cmp
rol
push
sub
into
mov
out
fldcw
cmp
dec
out
out
inc
inc
xor
xor
dec
stos
imul
mov
ds
ljmp
ret
mov
sbb
jmp
stos
dec
movsl
sbb
push
jne
popa
mov
dec
outsb
cmpsb
adcb
lods
push
xchg
push
test
mov
data16
xchg
sub
mov
in
pushf
rcrb
jno
xchg
xor
adc
jmp
xor
xchg
xchg
test
xchg
shl
mov
addl
fisubs
sbb
je
mov
sti
mov
cmpb
inc
inc
jnp
bound
cmp
jecxz
dec
cmp
add
les
in
int
sub
outsb
int
or
cmp
cmp
dec
int
fsubrl
ljmp
shl
mov
mov
cli
adc
push
mov
push
sbb
cmc
pop
xchg
mov
and
addl
jb
dec
or
cwtl
mov
fadds
lahf
sub
cmp
xor
je
sub
daa
stos
and
ljmp
ja,pt
push
mov
push
xchg
stc
push
mov
jns
adc
rcrl
test
jne
movsb
das
mov
xchg
test
mov
cld
or
cs
aam
dec
inc
in
jmp
mov
sub
or
push
jecxz
push
mov
das
repz
idivb
mov
incb
dec
fs
mov
sti
mov
jp
lds
out
jne
js
js
mov
data16
sbb
xor
push
arpl
xchg
mov
inc
cltd
or
push
push
dec
bound
dec
insb
mov
mov
and
xchg
imul
aas
inc
cld
inc
jl
mov
inc
outsl
test
nop
loope
xchg
xchg
stc
jmp
sbb
adc
fdivs
jl
and
jbe
add
bnd
shlb
push
stos
lret
loopne
aas
dec
sti
out
insb
cmp
and
mov
add
mov
dec
repz
lods
push
cwtl
jne
xchg
lcall
sbb
repz
ret
sub
add
in
xchg
std
icebp
scas
push
data16
fwait
ret
out
rcr
arpl
int
out
outsb
clc
nop
dec
push
mov
or
xlat
mov
mov
mov
enter
and
or
sub
loope
int3
push
add
and
adc
mov
jp
outsl
xor
mov
dec
aam
jno
mov
repz
outsl
cli
mov
movsb
sarb
pusha
std
mov
lods
jmp
inc
fmull
dec
inc
jo
jmp
push
push
clc
fdivrs
mov
in
lods
xchg
dec
push
jmp
mov
xchg
and
movsb
push
fsubp
xor
shlb
cmp
cltd
scas
out
dec
fiaddl
xor
push
cmp
mov
cs
and
add
movsl
ss
outsl
sub
cltd
lock
loop
mov
pop
mov
insl
stos
push
aas
mov
repnz
sbb
pop
or
dec
dec
mov
and
fwait
pop
xchg
sub
nop
repz
aad
fwait
out
out
aaa
loopne
lds
dec
shrb
add
cmp
ja
ret
inc
or
outsb
mov
ret
sub
mov
stos
imul
lock
jnp
and
adc
inc
ret
and
and
inc
mov
out
and
xor
lods
mov
or
sub
ret
sbb
sub
sarl
push
inc
repnz
dec
sbb
push
sub
lea
adc
push
lahf
fs
outsl
pop
icebp
adc
cmp
inc
xchg
lret
sub
out
cmp
jae
jmp
push
mov
xor
outsl
aas
pop
inc
incb
or
xchg
fimull
xor
xchg
mov
and
jl
push
xchg
outsb
lcall
dec
jl
mov
hlt
cwtl
dec
ljmp
outsl
mov
ja
pushf
mov
xor
xlat
push
popf
js
sbb
pop
repnz
push
and
adc
xchg
xor
gs
pop
mov
mov
or
or
mov
xchg
outsb
fwait
cld
test
or
daa
xor
cmp
adcb
shl
jp
push
ja
mov
pop
call
jge
notl
pop
icebp
sbb
pop
dec
xor
jecxz
and
fdivr
or
clc
mov
clc
std
std
pop
xor
push
jae
sbb
push
test
pop
jl
push
mov
mov
add
lods
gs
pop
xchg
mov
push
loopne
and
xchg
and
or
xchg
shl
outsb
inc
lods
mov
jae
addr16
lock
xor
addr16
pop
mov
cmp
mov
loopne
icebp
aad
mov
out
pop
pop
push
push
lods
addr16
mov
jae
lret
mov
mov
xor
loope
sub
and
push
mov
movl
clc
loopne
fcomp
inc
sub
sub
cmp
cwtl
imul
mov
inc
cmc
enter
cmp
stos
cltd
lea
cmp
flds
push
lock
xchg
dec
add
jno
push
rclb
aas
idivl
gs
aaa
add
mov
xchg
fsubr
ret
sbb
andb
push
or
pop
or
repz
call
adc
lea
ret
mov
mov
scas
xor
xor
sub
pop
repz
inc
push
or
mov
bound
enter
push
dec
and
jne
mov
les
filds
xor
cmc
repnz
iret
push
or
xor
mov
sbb
dec
mov
inc
icebp
testb
ja
gs
cmp
cmp
sub
inc
ret
cmpb
cmpsl
ret
xchg
jmp
out
sahf
in
mov
adc
rorl
ret
xor
scas
dec
jo
xlat
fwait
scas
daa
xchg
mov
dec
lahf
out
insl
fidivrs
lret
add
icebp
fsubrs
cltd
xchg
pop
aaa
movsb
xchg
dec
mov
inc
cmpsb
mov
push
push
mov
sbb
lret
cmpsl
and
cmp
add
push
xor
insl
xchg
mov
idivb
loope
or
sahf
divl
pop
jl
dec
in
inc
clc
sub
jp
lret
cmp
popa
subl
loop
outsb
pop
xor
mov
in
sbb
sbb
inc
repnz
xor
or
popa
xor
ret
jae
inc
mov
xor
orl
test
jmp
into
lods
cmc
cli
aad
pop
xchg
cld
nop
and
cmp
jg
xor
inc
pop
xchg
out
push
cmp
dec
je
test
jecxz
or
inc
ret
inc
ljmp
fnstsw
cltd
nop
iret
adc
xor
push
jmp
gs
pop
cmpsb
stos
icebp
push
or
mov
rclb
mov
sub
in
or
pop
dec
sarl
pop
cmpb
insb
push
cwtl
dec
ja
xor
rcrl
cwtl
int3
shrl
movsl
jg
fistpll
popf
nop
mov
mov
sbb
ret
inc
adcb
jbe
sbb
adc
xchg
mov
adc
dec
cmp
imul
mov
pop
into
xor
push
push
repnz
out
je
adc
cmpsl
pop
clc
cs
int3
cmp
rcll
arpl
test
scas
dec
jl
dec
icebp
int
popl
adc
pop
lcall
pop
sbb
hlt
or
inc
cmp
subl
sub
nop
mov
lcall
hlt
and
divl
adcb
sbb
hlt
cmp
mov
jo
mov
fstl
or
mov
fimuls
sarb
ret
out
xor
jb
pop
mov
call
idivb
adc
cld
cmp
cli
insb
cld
jns
adc
pop
add
sbb
xchg
ljmp
push
sarl
jae
push
dec
dec
lahf
jmp
inc
jecxz
pop
adc
xchg
pop
xlat
sbb
fs
pusha
and
in
ret
xor
mov
jge
jp
sub
mov
test
cmpsb
loop
add
sbb
popa
fisubrl
or
rcll
sub
mov
adc
mov
aam
setp
movsl
or
fistpl
adc
ret
cmp
rcr
mov
or
xchg
push
aad
out
lock
adc
mov
mov
pop
test
call
jne
lcall
dec
xor
xlat
cmpsb
outsb
mov
pop
fildll
jae
jae
inc
mov
pop
sbb
adc
inc
push
and
dec
add
jl
stc
lcall
cmp
bound
insb
repnz
sub
add
mov
push
call
fnsave
pop
add
out
out
aaa
cmp
lret
push
jns
mov
adc
sbb
cmc
sar
inc
dec
lock
inc
aad
xchg
adc
and
test
cld
je
xlat
cs
outsb
mov
outsb
mov
add
jnp
cmp
imul
push
hlt
adc
xchg
add
cltd
push
ds
dec
add
shl
faddl
mov
xchg
out
add
mov
imul
adc
mov
cmp
cmpsb
and
stos
xorl
ret
mov
add
xchg
rclb
aad
lcall
cmpsl
xchg
repnz
sbb
jge
push
fstl
aas
loopne
xor
in
jnp
int
fsubr
dec
xor
test
adc
movsb
leave
bound
dec
adc
sbb
xchg
adc
std
mov
sub
test
daa
adc
std
and
pop
adc
jns
fstpl
xor
mov
push
iret
add
data16
je
or
ret
mov
jg
add
sub
loopne
out
hlt
ljmp
sub
mov
movsb
or
sub
cmp
iret
dec
lcall
add
inc
mov
mov
shrb
lods
jns
sub
out
popf
push
call
pop
sbb
add
pop
add
and
scas
arpl
jmp
sbb
cltd
mov
jmp
push
ret
in
mov
jle
fwait
mov
mov
and
aas
sbb
mov
roll
dec
subl
les
cli
and
mov
cmpsl
scas
push
sbb
pusha
jge
xor
sbb
jnp
ljmp
and
sbb
pop
fldt
cmp
adc
and
stc
mov
ret
jns
mov
call
bnd
mov
ud2
add
filds
movsl
fs
pushf
sbb
push
cld
ja
out
lret
shll
sub
or
sub
xchg
or
addl
ret
dec
insl
cmp
subl
int
push
or
fists
daa
test
rcl
push
outsl
push
xor
out
popa
jp
fnstenv
iret
xor
push
mov
jne
into
sub
lcall
rcll
jno
cmp
ja
fwait
pop
cmc
rolb
mov
stc
pop
stos
js
xor
pop
cmp
push
cmp
js
xchg
jge
mov
adc
mov
sub
mov
push
idivb
cld
push
mov
das
int3
stos
inc
jg
jae
in
loop
outsl
xor
xor
mov
push
adc
sub
movsb
dec
jg
xchg
jecxz
jbe
cmpb
xchg
jno
int
stos
inc
aaa
rcr
dec
icebp
cmpsl
repnz
stos
xor
xchg
out
or
mov
stos
xchg
test
add
js
sbb
dec
jmp
test
aam
into
sbb
in
xchg
mov
sbb
es
fdiv
filds
sbb
inc
insl
test
out
lea
mov
in
addl
movsl
or
das
imul
adc
mov
je
sbb
test
cld
negb
xor
pop
jnp
xchg
outsl
dec
xchg
jl
js,pt
or
adc
out
cmp
fisttps
mov
ret
push
adc
xor
mov
xor
xchg
or
pop
clc
cltd
inc
and
jle
ljmp
or
jle
dec
jb
daa
aas
and
dec
negl
notl
or
pop
sbb
jle
pop
add
pop
pop
fistpl
add
mov
xchg
push
daa
jnp
jnp
enter
and
mov
cmp
sbb
sbb
mov
scas
mov
cmp
xor
lretw
dec
mov
add
or
sub
test
mov
or
and
mov
jge
xchg
outsl
inc
test
loopne
dec
push
dec
jo
xchg
push
scas
inc
mov
fstps
xor
sbb
mov
xchg
mov
rcr
cmp
mov
fldcw
pop
ja
cmp
cmc
xor
and
cld
xchg
jg
jb
pop
lret
and
ljmp
or
xchg
dec
xchg
mov
xor
sbb
jg
daa
xchg
mov
push
jne
or
flds
pop
mov
jo
roll
mov
mov
mov
lods
push
cld
pop
rcl
inc
xchg
sbb
idivl
jb
mov
sbb
jb
fisttpl
inc
mov
popa
in
or
insl
in
cld
push
aad
lret
and
mov
insb
push
dec
push
fidivs
adc
cmpl
inc
rclb
repnz
sub
add
sbb
xor
loopne
inc
cmp
sbb
xor
sti
mov
and
ret
and
jne
xor
lods
in
inc
jmp
cs
xchg
shll
sub
enter
mov
jg
stos
lock
pop
and
inc
jmp
add
pop
into
fst
push
mov
cltd
aas
aas
mov
cmpsb
mov
jecxz
jb
sar
nop
shl
testb
or
cmp
mov
pushf
sub
or
mov
mov
adc
iret
mov
fcompl
hlt
mov
lds
out
mov
rcll
fldenv
and
sbb
pop
roll
push
fbld
inc
adc
jb
sarl
movsb
cmp
xchg
dec
push
jne
ret
xor
sbb
test
fcmovb
outsl
xor
pop
jle
dec
inc
dec
or
gs
inc
hlt
add
push
scas
jae
add
int
ja
mov
or
xor
inc
iret
pop
in
cmp
loop
ret
mov
ds
ss
fimull
or
jo
mov
in
push
sub
add
xor
shlb
lods
sub
sub
lea
clc
and
popf
cmp
sbb
subb
daa
xchg
add
xchg
xor
inc
add
imul
fwait
addr16
das
add
gs
or
lods
or
jg
add
mov
sbb
cmp
insl
push
jecxz
sbb
jno
fbld
dec
fwait
jbe
mov
in
sbb
mov
and
cmpsl
das
sbb
inc
rcrb
repz
dec
sub
pop
in
sub
push
sahf
pushw
repz
pop
das
push
pop
pop
into
xchg
out
stc
aaa
cmc
xchg
jp
xor
mov
scas
mov
stos
mov
imul
mov
lds
es
add
jmp
sub
jg
xchg
and
inc
fcoms
xlat
pop
dec
scas
daa
dec
int
ljmp
inc
jmp
adc
ljmp
or
adc
lret
mulb
push
adc
lea
sub
mov
enter
cmp
in
xchg
in
cmp
ljmp
sti
cmp
cmc
ficoms
fdivl
mov
adc
addb
mov
mov
inc
adc
mov
mov
pop
test
and
popf
push
mov
stc
data16
jle
out
inc
or
clc
and
popa
cmpsl
repz
les
cs
daa
jle
ret
or
xchg
push
loope
push
jb
or
divl
xchg
cmp
and
in
xlat
enter
ljmp
bound
imul
add
int3
int3
inc
add
cmp
mov
sbb
push
cmp
xor
xchg
in
bnd
jmp
mov
movsl
cmp
jb
jp
icebp
mov
sbb
sbb
cmpsb
push
loopne
jnp
push
repz
aam
xchg
xchg
lods
sbb
dec
push
or
xchg
push
sbb
or
jns
pop
sub
mov
pop
dec
ret
cltd
lret
mov
rcrb
aaa
pop
cmp
or
in
jecxz
jecxz
push
dec
xor
mov
test
jb
lret
pop
push
int3
cmc
sarl
push
nop
daa
inc
xchg
adcl
jns
sbbl
jno
or
leave
push
inc
adcl
test
or
dec
js
clc
sbb
mov
or
pop
adc
dec
and
cmc
pop
cmpsb
mov
xor
pop
out
gs
push
xor
gs
pop
push
cmp
pop
dec
fdiv
xor
pop
inc
scas
fstpt
xchg
leave
pusha
andl
leave
sbb
testb
mov
xchg
rorl
lds
insl
xchg
sbb
sti
mov
icebp
cmp
jle
fistl
je
cmpsb
insb
and
mov
imul
cmc
js
enter
add
lahf
xor
cmp
sub
aas
fcomp
stos
add
pop
or
inc
xchg
adc
repnz
inc
xchg
xor
push
inc
daa
out
out
imul
addl
dec
push
jo
xor
mov
scas
das
mov
mov
cltd
mov
ret
jmp
mov
mov
shrl
push
out
xchg
jmp
lret
clc
sarl
jg
out
sbb
inc
push
iret
add
stc
xchg
in
popf
xchg
out
cmp
lea
inc
ss
or
hlt
mov
jnp
sub
push
jno
icebp
aad
rclb
cltd
nop
xchg
insb
insl
inc
mov
add
xor
sub
mov
lret
inc
jno
jmp
pushf
cmp
shrl
lods
mov
arpl
ficomps
pushf
fwait
popa
mov
cli
cs
insl
mov
mov
js
mov
lock
pop
pop
clc
or
mov
push
divl
dec
in
popf
sbb
jne
jb
push
lods
mov
int3
mov
sbb
mov
js
lcall
adc
xchg
fs
loopne
nop
inc
dec
and
in
test
inc
enter
out
pop
daa
push
jbe
adcl
cmc
shrb
fisubrl
out
sbb
js
lret
pop
jno
inc
sahf
pop
idivb
add
andb
sub
int
shl
push
push
mov
mov
lret
test
ret
insl
or
test
out
xor
or
sbb
sbb
xlat
call
orl
lret
outsl
xchg
mov
push
movsb
push
ljmp
pop
dec
mov
or
or
mov
movsb
mov
adc
adc
ds
dec
push
repnz
enter
push
pusha
jmp
mov
pop
fldt
push
inc
ljmp
int
jo
adc
mov
fdiv
sub
adcl
imul
jl
into
pushf
pop
aas
loopne
mov
jmp
add
jno
push
stc
sub
fdivr
push
xor
mov
xor
ljmp
insl
fucomip
xchg
push
jnp
mov
cmp
and
imul
mov
test
adc
xchg
popw
inc
enter
inc
pop
div
cmp
adc
mov
fldenv
sbb
push
jle
sbb
jg
or
sbb
xchg
sbbb
mov
fnstenv
sahf
jge
or
repnz
outsb
pop
stos
mov
fistps
push
jbe
mov
mov
ret
xor
leave
sub
mov
sub
pop
into
sub
dec
out
inc
dec
add
mov
dec
arpl
rorb
xor
fimuls
sub
int
aas
adc
inc
push
jge
test
fs
test
jo
testb
or
pop
mov
stc
mov
lds
dec
jl
notb
jp
shl
mov
jns
sub
pop
inc
and
add
mov
and
inc
mov
jne
inc
inc
dec
adc
mov
daa
mov
das
ljmp
push
mov
push
and
ficomps
push
mov
enter
push
jo
leave
mov
repnz
cmpsb
data16
mov
fcoml
sbb
push
enter
pop
cs
and
xor
outsl
push
push
pop
out
lock
fmuls
mov
push
mov
test
pop
cmp
ficompl
les
xchg
cwtl
arpl
sub
and
shlb
bound
push
lock
je
cmpsl
les
fnstsw
ds
pop
mov
lcall
aad
insb
iret
add
imul
cmp
stos
pop
gs
xchg
aad
mov
mov
mov
out
jbe
loop
inc
shl
sub
xchg
fwait
jb
shll
xor
js
pop
ds
mov
pop
mov
lds
cmpsl
std
jb
sbb
xor
dec
push
roll
xlat
cwtl
rcrb
hlt
cmpsb
call
int3
fwait
pop
mov
push
push
mov
bswap
push
sub
jb
pop
in
jp
repz
nop
cmp
dec
popa
and
sahf
and
cmc
and
jmp
into
push
or
pop
push
dec
dec
or
dec
push
subl
xchg
sbb
stos
or
sarb
mov
lcall
or
cltd
stos
xor
clc
adc
cmpsb
pop
cltd
mov
jbe
arpl
rol
inc
mov
jge
cld
mov
sbb
cwtl
xor
fbstp
scas
rol
inc
lahf
sbb
rol
sub
sbb
xchg
adc
nop
push
push
test
ret
sbb
jno
mov
scas
lret
mov
fistps
xor
add
push
int
imul
sub
jne
ljmp
xor
adc
xor
imul
cmc
repz
and
mov
in
pop
icebp
into
dec
data16
pop
pop
iret
sub
loopne
pop
aam
and
hlt
xchg
xchg
fsts
fisubl
fisubrl
out
loope
mov
out
outsl
mov
stos
mov
fiaddl
pop
inc
fdiv
repz
adcl
test
sbb
xchg
add
aad
popf
or
cmp
sub
or
and
imul
and
test
fcmovb
cwtl
push
arpl
dec
or
mov
repnz
push
xor
adc
pop
and
and
mov
push
in
inc
push
outsl
insb
ror
jnp
inc
popf
pop
imull
sarl
and
xchg
or
inc
cmc
mov
inc
adc
leave
mov
ret
cmp
jns
mov
push
out
fisubl
popf
dec
or
adc
sub
subl
push
fisttps
pop
mov
lods
mov
sub
or
push
fs
lcall
mov
aaa
cmpsb
lahf
add
cli
and
ss
stos
outsl
sub
push
rol
dec
dec
out
cmpsb
add
aas
cmp
into
in
add
enter
repz
xor
push
pop
subl
lahf
jl
or
inc
pop
adc
sbb
add
ret
mov
test
mov
cltd
js
jo
cmp
cmp
push
outsl
repz
aam
dec
cli
mov
fdivrp
jae
aaa
les
andl
xor
jno
add
icebp
scas
sbb
hlt
aad
sbb
in
cmp
adc
dec
xchg
jne
push
xor
in
into
or
lahf
sbb
push
in
jbe,pt
cmpsl
aas
xchg
popa
cmpsb
sbb
aad
push
stc
into
and
loop
pushf
decl
aam
jae
addr16
lods
push
insb
pushf
stos
push
es
sub
jnp
add
add
mov
int3
dec
fs
pop
mov
roll
add
mov
call
mov
adc
sbb
inc
inc
jge
mov
mov
mov
and
xor
and
fstpl
dec
nop
mov
xor
mov
les
addl
inc
loop
mov
sub
shrl
clc
ds
out
xlat
xchg
test
mov
test
je
mov
cmpsb
aas
lea
jecxz
js
dec
int3
sub
inc
sbb
inc
fists
push
jmp
popf
sub
mov
lcall
inc
mov
ds
push
xor
xchg
fdivrs
xchg
sbb
sub
sub
neg
int
dec
negl
les
adc
mov
push
pop
xor
js
pop
xchg
das
sahf
lea
fs
push
xor
pushf
mov
ffree
adc
cs
sbb
mov
scas
or
inc
dec
or
fmuls
xor
imul
jp
les
push
mov
pusha
push
sub
mov
mov
sub
or
inc
adc
int
xabort
or
pop
stos
jg
test
sub
sub
divl
push
xor
fcomi
outsl
jle
popa
cli
test
fs
dec
enter
cmp
jbe
inc
insl
mov
adc
fsubrs
push
mov
inc
mov
insb
mov
mov
and
mov
push
mov
cmp
mov
testl
or
int3
mov
jb
xchg
insl
jge
or
add
adc
adc
mov
pushf
out
cld
aad
or
mov
mov
xchg
stc
mov
add
mov
addb
jb
xchg
daa
xor
dec
push
fdiv
gs
mov
push
lret
jmp
inc
addr16
add
fdivrs
adc
sub
je
inc
iret
sub
jo
or
addl
outsl
sbb
in
in
loope
push
loop
jge
mov
jge
jl
js
punpcklbw
mov
jb
push
sbb
data16
shll
and
xor
jne
sti
and
xchg
xchg
xchg
pop
ljmp
xor
out
stc
sub
in
push
in
sbb
test
lods
je
std
fstpl
lds
ds
out
jecxz
mov
scas
jge
nop
inc
push
add
jl
das
push
xchg
idivb
jp
pusha
mov
mov
fiaddl
adc
fdivs
sbb
lock
mov
cltd
ss
js
je
in
xor
cmpsl
inc
ljmp
xlat
and
sbb
les
fistpl
inc
jnp
push
cmpb
mov
adc
loop
ret
sbb
fs
dec
pop
push
sub
pop
cs
fucomip
or
test
popa
sub
dec
mov
mov
or
stos
mov
mov
xor
sahf
fstps
sub
dec
neg
push
lahf
sub
sub
jle
adc
repz
adc
iret
push
dec
leave
lret
lock
inc
push
sub
lods
adc
cld
call
adc
push
cmpsb
outsl
sbb
jne
mov
lcall
jne
or
mov
add
xor
stos
or
mov
loope,pn
jbe
aad
pop
movsl
or
test
sbb
cmp
xchg
test
adcb
lock
popa
or
stos
fmull
aas
flds
mov
enter
mov
lahf
int3
xor
sahf
imul
xchg
js
ds
repnz
xor
aaa
mov
cs
decl
xchg
xchg
test
bnd
repz
xor
stos
arpl
xchg
mov
or
pop
rclb
dec
cmpsb
lds
xchg
movsb
jp
mov
aas
push
test
test
cmp
mov
mov
inc
xor
sub
add
mov
sbb
out
or
dec
or
dec
push
mov
imul
sub
xor
scas
mov
cmp
sbb
into
fstpt
mov
ljmp
adcb
ds
xchg
ja
ffree
or
cmp
scas
dec
inc
test
repz
scas
and
jbe
loop
pop
pop
cmc
leave
pop
sbb
cs
scas
jo
notl
cwtl
sar
xchg
mull
into
cmpsb
xor
bound
insb
push
mov
test
adc
fsubl
mov
xor
mov
jmp
lret
inc
dec
mov
int3
jno
arpl
mov
push
lahf
sarb
movsl
test
loopne
add
dec
pop
nop
and
call
mov
lds
jecxz
popa
int
lds
push
fsubrl
clc
or
xchg
and
push
adc
jnp
add
and
xlat
cmp
inc
jbe
dec
and
sub
sarb
adcb
lods
daa
add
aas
std
mov
pop
cs
adc
xchg
xchg
xchg
fcompl
orb
xchg
mov
mov
cmpsb
push
add
adcb
fwait
push
scas
fcomps
adcl
cs
call
sbb
pop
in
add
lea
cmp
popf
js
pop
out
fldcw
sub
icebp
mov
dec
popa
aas
add
jmp
stos
shlb
dec
jb
and
js
mov
bound
hlt
pop
push
cmp
test
aas
pop
or
clc
mov
xchg
mull
sbb
mov
aad
inc
fwait
dec
mov
enter
jmp
cs
mov
sti
out
cmp
ret
inc
scas
jns
call
lds
lret
inc
ret
js
shll
rorb
cmp
sbb
xchg
push
clc
xchg
xchg
mov
mov
outsb
aas
mov
or
out
insl
dec
outsb
mov
sub
jnp
outsb
xchg
movsb
fiadds
rorl
pop
mov
mov
mov
jb
js
xchg
inc
ret
aam
mov
mov
or
insl
pop
push
lock
ja
fucomi
repnz
jp
test
popf
mov
out
mov
mov
mov
and
imul
insb
mov
fiaddl
scas
outsb
fidivrs
and
push
data16
stos
popa
stc
mov
rdtsc
in
sbb
fildll
call
test
popa
repz
insb
rcll
loop
adc
pop
inc
sbb
insl
mov
xor
add
popa
cld
push
adc
cmpsl
xchg
arpl
sahf
inc
push
cli
xchg
dec
and
bound
sbb
xchg
out
dec
jbe
daa
pop
rcrl
repnz
jecxz
push
pop
xchg
popa
faddp
lea
push
in
out
add
jmp
int3
sti
jne
xchg
sub
fistps
ret
mov
mov
dec
xchg
mov
shrb
int
mov
xchg
mov
es
lret
repz
cmp
out
adc
adc
aam
inc
jno
int
mov
pop
mov
xchg
dec
cmp
arpl
pop
push
xor
sbb
push
in
or
push
insb
pop
sub
loopne
std
in
sbbb
adc
jno
and
insb
inc
push
dec
jo
inc
sti
movsl
jno
lods
scas
and
add
mov
sbb
iret
dec
in
fcoms
adc
adc
lea
cmp
xchg
push
outsb
xchg
pushf
jmp
outsb
pop
scas
in
jae
ret
cmp
jecxz
or
jg
adc
xor
jge
movsb
outsb
lahf
mov
inc
or
jge
pushf
pop
cmp
loop
fisttpll
cmpsl
cld
push
adc
sub
dec
sbb
jne
cmc
dec
mov
outsb
das
pop
mov
js
xor
jl
xchg
in
push
mov
ljmp
pop
cmpsl
in
nop
mov
cltd
insl
ss
jge
lea
jecxz
cli
push
cmc
push
push
in
pusha
xchg
add
add
outsl
jp
jnp
dec
mov
loopne
add
aas
dec
and
pusha
cmpsl
loop
jle
enter
scas
or
or
dec
out
xor
js
pusha
mov
cli
add
in
shl
mov
mov
sbb
jl
mov
dec
movsb
jo
lcall
stos
sub
enter
push
pushf
xchg
dec
inc
push
push
stc
bound
pop
mov
dec
adc
sbb
sub
mov
stos
dec
xor
or
dec
adc
in
jne
push
sbb
shr
pop
adc
test
pop
mov
mov
cmp
cmpsb
setnp
mov
fstpl
dec
adc
and
movsl
sbb
in
mov
ljmp
movsl
cmpsb
arpl
inc
mov
inc
cmc
out
mov
inc
loope
sub
xlat
adc
mov
mov
repnz
ret
cmp
mov
out
jmpw
aad
fbstp
fs
clc
sub
jbe
hlt
mov
ss
mov
outsl
sbb
mov
jg
insl
inc
enter
xor
mov
fld
cmp
push
xor
mov
or
lcall
pushf
add
mov
mov
testb
sbb
mov
cmp
out
sti
ret
cmpsb
xchg
movsl
sti
out
in
jno
test
and
or
push
jo
jp
lcall
aas
in
outsl
mov
xchg
lcall
ffreep
dec
sbb
bound
sub
repz
dec
movsl
push
shrb
outsl
adc
cld
pop
in
mov
xchg
ret
mov
jno
xchg
clc
mov
and
lcall
xchg
popf
push
and
loopne
lods
std
mov
ja
pop
xchg
shlb
subb
hlt
push
dec
jbe
leave
dec
cmp
xchg
xchg
jns
pop
ret
mov
xor
in
std
jge
and
xor
push
mov
outsb
xchg
adc
push
pop
insb
xchg
adc
arpl
jne
xchg
aaa
adc
xor
pop
xorb
xlat
push
dec
adc
stc
push
fcmovnu
push
fildll
cli
jne
rcr
adc
iret
and
loop
std
lea
xchg
and
push
je
jp
lret
jbe
xchg
dec
cmp
ffreep
add
loopne
aaa
or
nop
push
lods
into
dec
push
loope
xchg
xchg
cmp
xchg
sbb
mov
cli
and
cmp
lret
pop
leave
sub
hlt
pop
mov
xchg
ret
jno
xorb
in
and
mov
cmp
mov
aaa
push
aaa
mov
push
js
mov
sub
popa
divl
mov
jl
inc
push
sbb
or
dec
movsb
xchg
mov
mov
adc
xorl
mov
sub
orb
addr16
outsl
mov
mov
idiv
lret
push
ja,pt
mov
cmpsb
mov
lods
push
cltd
cmpsl
and
aam
mov
pusha
idivb
inc
cmp
scas
cmp
jbe
or
mov
inc
xchg
dec
adc
mov
add
mov
lret
fcoml
mov
jge
jle
mov
lret
cmp
push
pop
ds
push
inc
push
cltd
scas
push
mov
out
pop
mov
add
ja,pt
popa
scas
mov
ss
ret
add
adc
in
lea
mov
mov
aad
mov
jo
xchg
xorb
lahf
pop
pop
push
test
adc
push
loopne
xchg
sahf
jne
xchg
shr
cwtl
mov
pop
push
faddl
pusha
pop
test
jg
inc
hlt
lods
mov
and
adc
adc
test
mov
lret
das
xchg
xchg
mov
leave
sbb
jl
iret
or
jno
add
js
dec
push
rorb
cmpsb
jo
fwait
sub
notb
jmp
stc
nop
inc
mov
xor
push
addl
and
fisttpl
pop
xor
jmp
stc
adc
or
insl
int
lahf
fs
inc
test
outsb
cmc
lock
int
ljmp
scas
cwtl
and
mov
xchg
push
sub
dec
pop
xchg
daa
xor
inc
enter
je
das
pop
jo
xor
cmp
sub
mov
sahf
mov
mov
and
mov
test
xor
mulb
push
nop
mov
movsb
pop
push
pushf
and
dec
push
pop
jmp
jbe
mov
js
push
out
adc
addr16
icebp
and
jmp
into
outsb
sbb
icebp
mov
loopne
mov
mov
push
out
fldt
adc
in
cltd
das
ret
dec
push
pop
dec
call
inc
aad
and
push
mov
mov
mov
mov
sbb
mov
xor
push
sub
or
adc
mov
pop
pop
popf
into
xchg
dec
jl
mov
sub
mov
xlat
sub
stc
inc
nop
xchg
outsb
ljmp
pop
fidivl
cltd
jne
outsl
aaa
cmp
lcall
mov
stc
jmp
nop
cltd
shrl
sub
xor
cld
mov
dec
outsb
inc
repnz
pop
mov
rcrb
inc
into
sbb
fisubrl
adc
stc
jecxz
scas
icebp
jge
dec
das
add
cmp
scas
mov
clc
cwtl
mov
dec
and
addb
mov
outsb
outsl
inc
shrl
adc
out
jmp
lahf
lea
xchg
jmp
cmp
cli
xchg
inc
fists
fildll
and
sbbb
outsb
aaa
jae
xor
push
fnstenv
cmp
inc
fst
push
lahf
dec
movsb
testb
inc
sub
enter
adc
pushf
shlb
xchg
sbb
icebp
sbb
cmp
dec
fadds
orl
dec
js
pop
xor
mov
js
dec
es
notl
mov
cmp
add
jmp
dec
mov
and
add
mov
jnp
subb
push
movsb
jno
jnp
mov
pop
sbb
int3
je
adc
into
clc
sub
cwtl
out
aad
pusha
icebp
rcrl
cmc
mov
jg
push
add
cs
mov
stos
xchg
arpl
sub
je
mov
xchg
lods
rclb
push
fs
jle
and
aaa
outsl
inc
fdivs
lods
jno
sub
and
xchg
or
fsubs
inc
pop
lcall
int
and
xchg
pop
dec
test
adc
aas
sub
jmp
add
fldenv
or
subl
sbb
or
movsb
xor
jnp
inc
mov
fidivl
jg
inc
into
xchg
inc
pop
sbb
inc
pop
dec
aam
repnz
ret
lea
sub
fdivrp
pop
mov
scas
out
mov
stc
out
jnp
sbb
ret
jmp
or
lock
jge
movsl
cwtl
jae
clc
mov
orl
int
jge
pop
dec
movsb
stos
mov
mov
jle
test
sahf
or
cwtl
stc
sub
les
jp
inc
jg
jae
push
lret
push
xchg
hlt
xchg
pop
iret
push
scas
and
ret
ret
or
fpatan
jmp
or
mov
or
out
je
mov
push
sbb
lret
mov
outsl
fadd
sub
movl
adc
sbb
fnstsw
fstpt
adc
mov
dec
xor
pop
pop
push
mov
loope
shll
out
and
inc
es
popf
jecxz
vpacksswb
mov
pop
or
fistl
daa
mov
pop
add
les
cs
xor
jae
dec
dec
mov
mov
mov
addr16
ds
pop
and
jl
loop
popf
pop
and
sbb
jle
push
mov
pop
cli
int3
fisubrl
mov
test
adc
ss
mov
sub
jb
in
cld
jbe
or
sub
xor
sub
cmpsl
out
dec
and
sbb
add
mov
movntq
les
jbe
jnp
ficoml
mov
mull
aad
xor
and
ss
lea
mov
sub
sti
xor
shlb
inc
roll
aad
mov
and
pushf
cmp
ret
push
push
ds
fcoml
dec
mov
jle
push
pop
les
sbb
cmp
lcall
xor
push
aad
push
mov
dec
push
lods
mov
rolb
adc
scas
popf
pushf
cmp
sub
inc
xchg
les
in
icebp
jmp
inc
mov
pop
dec
inc
dec
adc
clc
in
lock
ffree
test
idivl
mov
test
fidivs
push
pop
hlt
add
sti
ficomps
sbb
mov
and
loopne
inc
in
or
lea
out
fadd
fistl
loop
push
testb
push
pop
decl
or
fwait
adc
add
mov
dec
dec
push
aad
ret
addl
cld
jbe
es
and
fnsave
mov
sbb
mov
dec
bound
mov
xor
ds
push
mov
nop
mov
push
repnz
jmp
xor
decb
push
mov
mov
out
js
and
lret
pusha
mov
rorb
add
inc
test
sbb
rcrb
daa
xor
cld
push
mov
js
aad
xor
push
xchg
es
aas
sahf
dec
push
cltd
stc
and
inc
lret
and
push
mov
movsl
cli
cmp
mov
inc
dec
rolb
ds
ffreep
mov
dec
sbb
fisubl
fidivrl
push
je
or
sbb
adc
jo
test
lret
iret
scas
mov
sbb
pop
xchg
sahf
and
orl
out
mov
imul
les
push
jno
dec
movsb
data16
fldenv
xor
add
js
nop
mov
ss
xchg
inc
stc
ret
icebp
shl
pop
addr16
call
fdivrl
cmp
imul
leave
push
dec
dec
movsl
lods
sub
mov
test
out
xchg
cld
or
push
imul
ljmp
xchg
jmp
dec
xchg
clc
xchg
push
adcb
stos
rorl
or
mov
fnstsw
and
dec
pop
jl
mov
lcall
mov
loop
dec
mov
add
jb
jg
addl
xchg
arpl
call
push
inc
test
ja
xchg
cmpsb
ja
aad
mov
dec
scas
jl
sahf
in
mov
orb
pop
fnstenv
addr16
jns
xchg
popf
mov
ss
cmc
xchg
clc
xchg
xor
lods
cmp
loopne
mov
jno
inc
pop
jne
out
mov
xchg
mov
sub
mov
mov
daa
cs
cmpsb
aam
cbtw
into
mov
add
adc
idivb
std
inc
js
lods
sub
push
es
jle
sahf
idivl
imul
cmp
sub
sarl
xchg
push
test
sbb
jne
fs
xchg
jge
jge
gs
enter
fld
jnp
int
push
jl
rcl
adc
sbb
imul
xor
mov
push
out
jno
out
outsb
jbe
add
sbb
fwait
out
cmpl
cmpb
mov
adc
out
xchg
mov
test
hlt
and
adc
pop
sub
ljmp
mov
or
sub
shll
xchg
dec
jp
aam
loopne
cwtl
andl
sub
mov
mov
pop
sub
cmpsb
mov
in
insl
adc
cwtl
push
inc
negb
xor
hlt
xlat
stos
sub
push
jb
fs
aaa
dec
mov
dec
jecxz
lcall
and
lock
repz
sbb
add
dec
add
aaa
into
shlb
movsb
add
loopne
mov
or
dec
cwtl
jae
jp
pop
pop
pop
inc
push
mov
jmp
fwait
jmp
cmc
les
pop
and
out
dec
push
rolb
inc
clc
movsb
test
fwait
out
and
in
xchg
cs
mov
ficoms
push
popa
cmpsb
mov
adc
fcomi
and
cmpsb
xor
lahf
mov
es
push
push
mov
push
push
pusha
sbb
sub
mov
dec
xchg
dec
mov
mov
test
lret
iret
clc
shlb
pop
and
mov
repz
lcall
mov
adc
stc
and
scas
repz
push
int
xchg
cmp
nop
mov
inc
es
pushf
fs
rcrb
mov
lea
or
clc
cli
dec
ljmp
aad
cmpsl
cltd
ljmp
jo
insb
imul
int3
outsl
mov
sub
bnd
push
daa
es
and
and
mov
mov
inc
cwtl
es
es
lea
mov
xorb
mov
test
jp
data16
pop
dec
ljmp
push
xorb
mov
cli
loopne
xor
daa
and
jg
add
fucom
sub
sub
test
in
cwtl
les
or
std
push
cld
in
scas
hlt
jb
sub
and
enter
pop
mov
rclb
lahf
movswl
test
in
popa
mov
out
in
sti
in
cmp
xchg
jbe
out
orb
test
cmc
dec
cmpsl
ja
cwtl
das
mov
imul
add
inc
insl
or
popf
inc
add
mov
mov
cmp
lock
jbe
mov
pop
mov
int
sbb
into
test
sarl
mov
fwait
enter
sub
xchg
sub
pop
es
dec
icebp
and
inc
jecxz
sbbl
jp
aas
inc
mov
mov
dec
xchg
test
add
std
cli
pop
jmp
mov
idiv
cmp
adc
mov
fidivrl
mov
arpl
popf
into
push
mov
add
xchg
dec
clc
xor
hlt
mov
mov
out
jmp
adc
adc
pop
mov
push
loopne
push
mov
shrb
imul
fiadds
lret
xchg
test
divl
jnp
fs
js
cmp
jecxz
bound
sbb
cmp
adc
mov
subb
adc
or
fbld
cmp
and
data16
in
fists
scas
insb
xor
gs
and
loop
lea
arpl
and
adc
adc
cld
stos
outsl
push
pop
pusha
and
xchg
inc
pop
movsb
or
aam
xor
jmp
arpl
sub
pop
fdivs
xchg
outsb
test
out
mov
insl
add
xchg
mov
pop
pop
lahf
les
addr16
shrl
adc
test
jp
xlat
mov
in
mov
xchg
push
sbb
mov
push
mov
sarb
push
dec
imul
jbe
mov
dec
cli
jg
jmp
loop
mov
and
mov
sbb
lods
sar
cmp
jecxz
pop
mov
push
imul
mov
sbb
push
addb
lret
call
lock
sub
jae
sbbl
into
flds
cmpsl
aad
int3
loopne
and
fsubl
sbb
shll
cmp
xchg
sub
or
add
jmp
negl
es
icebp
in
jmp
aam
hlt
int3
sbb
int3
leave
cmpb
cli
mov
hlt
and
mov
xchg
push
push
cli
test
out
fbld
sub
and
popa
mov
outsl
sbbb
mov
lods
iret
pop
ficoms
mov
int
adc
std
repnz
jnp
popa
adc
daa
in
lret
outsl
adc
xchg
dec
sbb
mov
test
fcomi
es
mov
xchg
xchg
mov
mov
adc
data16
xchg
adc
pusha
xchg
sarb
sub
pop
fcoml
cmp
jecxz
test
stc
in
mov
test
mov
std
or
fcoms
xchg
mov
add
js
inc
icebp
or
dec
inc
inc
mov
and
mov
stos
nop
pop
xchg
stos
and
scas
xchg
ficoms
ja
ret
mov
bound
lret
inc
push
or
es
pop
sub
mov
out
jge
dec
pop
cld
cmp
es
popf
outsl
push
cwtl
repz
je
daa
xor
xchg
pop
xchg
mov
sbb
rcll
jb
fucomp
or
push
pop
call
outsl
and
out
mov
sbb
push
and
das
cmp
lret
mov
outsb
das
sar
push
les
push
scas
adcl
outsb
icebp
or
dec
stos
ljmp
mov
xor
mov
pop
jp
imul
inc
mov
and
jp
push
push
cli
ret
stos
sub
mov
cmpsl
push
arpl
mov
mov
and
push
outsl
pop
js
cli
pop
jmp
std
xchg
pushf
fcompl
repz
mov
out
lcall
decb
mov
fldt
pop
fists
adc
push
sub
addr16
inc
or
sahf
push
das
dec
xlat
shll
or
es
sub
jl
imul
sti
daa
mov
mov
jg
xchg
test
js
inc
popa
add
in
mov
std
loop
xor
decb
aam
dec
jge
mov
sub
dec
cs
incl
pop
addb
sbb
dec
pusha
sub
xlat
push
sbbl
xchg
ficoml
adc
out
mov
push
xor
int
xor
repz
sbb
lock
jmp
in
pop
add
cmpsl
and
jge
and
aad
into
sbb
and
sbb
cmp
push
lea
lds
lods
dec
xlat
sub
scas
fwait
push
xlat
dec
jbe
sti
push
fwait
movsl
fs
test
icebp
fimull
cltd
xchg
mov
hlt
and
inc
dec
xor
inc
mov
and
mov
subl
push
xor
cltd
addr16
bound
push
push
push
fwait
mov
add
ret
daa
push
xchg
stc
adc
adc
lret
cmpsl
xor
xor
int
rcl
jg
xchg
xor
pop
in
mov
mov
mov
leave
es
shll
mov
jbe
lea
adc
pop
cmc
in
lea
or
icebp
sbbl
cli
rorb
cwtl
addb
dec
push
jp
fucom
out
mov
adc
jae
or
stc
clc
cld
stos
int
adc
sub
xlat
add
cmpl
xchg
bound
sahf
mov
sub
shrb
mov
jge
mov
mov
nop
cmp
push
lods
sahf
or
cli
in
dec
sti
sbb
xchg
and
push
stc
and
mov
or
sahf
mov
and
sbb
mov
push
lods
jns
or
cltd
scas
lock
out
add
flds
adc
xor
and
enter
jle
mov
xor
jp
les
push
fimuls
and
and
je
jp
inc
test
mov
ja
jo
clc
mov
jne
gs
or
fbstp
mov
pop
iret
aaa
jge
mov
mov
or
insb
add
imul
sub
das
bound
push
mov
cmp
or
aam
fisubs
and
mov
int
jno
jbe
sbb
xchg
fwait
pop
pop
mov
xchg
sti
int
sarl
inc
sbb
pushf
xor
jns
and
in
loop
sub
mov
clc
movsl
lds
ljmp
mov
xlat
mov
leave
cmp
dec
jbe
push
bound
push
shll
pop
daa
add
ss
fadds
xchg
sub
in
pop
push
test
sbb
loopne
xchg
add
iret
shlb
sub
push
scas
js
stos
loope
mov
pop
les
les
adc
add
aad
rorb
adc
xchg
sbb
sub
das
outsb
aaa
ja
fs
sahf
sarb
addr16
add
push
or
or
sub
test
xchg
sub
fbld
mov
outsb
insl
icebp
and
mov
out
in
mov
mov
adc
mov
and
lahf
daa
cmp
movsl
icebp
mov
out
or
nop
sbb
and
test
mov
xor
or
jmp
jno
lret
sahf
imul
fwait
cltd
jge
les
ss
or
xor
enter
or
hlt
mov
insb
mov
add
add
mov
fcompl
pop
jnp
pop
sub
std
stos
enter
mov
mov
jne
leave
push
lock
outsb
or
rorl
jl
into
std
test
sahf
aaa
arpl
or
es
out
mov
out
stos
mov
xchg
outsl
je
inc
stos
mov
in
movsl
stos
pop
jmp
out
or
in
incl
imul
clc
and
pop
pop
and
inc
push
inc
or
xor
jecxz
cmpsb
shlb
xchg
in
pop
into
cmpsl
bound
sub
in
add
pop
dec
xor
test
dec
jne
push
mov
loop
fwait
mov
sbb
cld
cmp
jp
push
ja
mov
sbb
cmp
inc
mov
std
push
sub
call
insb
adc
sub
into
inc
ds
es
jnp
leave
sub
es
dec
adc
mov
jg
push
mov
and
adc
jecxz
ljmp
jecxz
movsb
movsb
push
arpl
adc
ds
sahf
in
jns
ss
mov
insb
test
adc
push
mov
inc
sub
shlb
mov
clc
imulb
int
jbe
ret
mov
xchg
add
std
das
push
inc
into
js
popa
std
fildl
mov
int
addr16
loopne
mov
lea
lea
pop
aaa
test
inc
adc
add
inc
in
cmp
loop
jno
sbb
and
fimuls
push
paddw
push
ds
imul
and
daa
cmc
lock
daa
jmp
lret
es
repz
jg
jns
xchg
in
cmp
mov
xchg
pop
lods
aam
mov
pop
adc
decb
cmp
sub
cmp
jmp
pop
inc
sbbb
aad
inc
inc
push
popa
or
icebp
jnp
sbb
mov
rclb
daa
add
leave
pusha
xchg
push
xchg
setb
jnp
and
repz
mov
scas
test
cmc
test
push
jg
lret
sbb
mov
movhps
lods
jmp
js
xor
mov
jno,pt
jmp
in
cmpsb
cs
adc
cmp
jno
add
and
enter
mov
mov
rcrl
andb
mov
fisttps
mov
xlat
push
add
jl
xchg
adc
std
sahf
stc
jle
or
jb
cmpsb
sahf
and
fdivrs
addr16
scas
ret
xor
icebp
leave
adc
aaa
mov
in
dec
mov
lods
mov
mov
dec
jb
xorb
and
sub
jge
pop
daa
out
jae
and
jbe
cmp
and
aas
cmp
or
mov
insb
adc
fs
mov
mov
push
aam
mov
inc
lcall
rorl
xor
xchg
add
scas
inc
push
stc
gs
mov
push
push
orb
mul
cmpsl
add
lea
inc
pop
imul
mov
mov
xor
xchg
repnz
jb
pop
sub
insb
jne
test
push
inc
or
popf
movsl
mov
mov
rorb
fmuls
or
sbbl
rcrb
jns
push
enter
loop
xor
mov
jo
push
add
push
xchg
or
mov
mov
mov
lret
loopne
movsb
into
das
out
mov
pop
dec
mov
pushl
mov
rcll
cltd
arpl
add
inc
xor
push
scas
pushf
dec
and
xor
leave
out
pop
shl
aam
fdivs
jb
mov
inc
xchg
inc
lcall
mov
mov
push
mov
pop
bound
rcrl
and
lahf
pop
lret
push
loop
aaa
push
push
mov
or
js
inc
and
cmp
insb
mov
pusha
jbe
sbb
pop
decl
and
cmp
jmp
push
cmp
adc
sbb
lahf
or
loopne
jnp
mov
xchg
pop
push
and
rcll
xchg
repnz
cli
xor
inc
xchg
add
mov
in
or
addb
sub
add
pusha
xor
sbb
movsl
ficomps
aam
adc
sbb
xchg
and
popa
sti
pop
jge
dec
xchg
shrl
mov
pop
xor
mov
xchg
sub
call
mov
jecxz
xor
xchg
rcr
xchg
jp
cmpsl
std
adc
hlt
negl
mov
repnz
adc
inc
and
pop
and
sbb
jle
popa
das
js
mov
jnp
mov
stos
popa
stos
or
movsl
cmpsb
pop
test
stos
outsl
cmp
ds
call
add
pop
repnz
cmpsb
cmpsb
jo
int3
fisubs
dec
mov
imul
xchg
or
mov
inc
cltd
je
and
or
std
push
lret
ror
and
arpl
mov
es
inc
ret
jle
fisttpll
scas
popf
cmp
pop
lods
jbe
xor
and
adc
jbe
nop
sbb
arpl
insb
lret
or
cmp
or
adc
mov
adc
fistpll
je
shlb
hlt
cmpsl
add
bound
adc
lds
inc
ja
pop
insl
imul
push
fs
adc
push
leave
cltd
mov
push
sub
pop
cld
xor
xchg
jbe
xchg
es
mov
xchg
aaa
cmpsl
mov
xor
daa
inc
test
sbb
repz
pop
scas
jbe
imul
and
cs
mov
add
xlat
out
mov
pusha
pop
push
sti
or
and
fsts
dec
arpl
inc
pushf
jge
cmp
test
jmp
xorl
aam
iret
ss
int
out
adc
mov
fmul
jne
push
std
mov
jl
clc
test
push
int3
adc
popa
imull
adc
insl
cmp
clc
push
add
sbb
xlat
imul
daa
imul
aas
lahf
pop
inc
mov
jo
mov
and
ja
es
push
pop
and
out
push
aaa
sahf
cltd
xor
jb
ljmp
ljmp
dec
adcb
lret
xchg
sub
fcompl
pop
hlt
mov
insb
xchg
push
mov
xor
push
sbb
imul
mov
aaa
push
lea
inc
insl
pop
jae
ret
sti
mov
nop
mov
pop
insl
add
mov
int3
jno
add
dec
and
jae
stc
and
xor
sbb
loope
mov
and
xlat
push
daa
cld
jns
sub
dec
clc
mov
out
add
in
or
push
or
out
addr16
and
mov
jb
sub
xor
dec
inc
sahf
xchg
test
xor
pop
mov
lret
je
call
pop
rclb
cltd
push
lods
mov
pop
mov
adc
stos
mov
adc
mov
andl
sahf
cld
push
cs
push
xchg
cmp
shr
cmp
jge
fiaddl
jnp
lods
jbe
pop
jecxz
ret
pop
fwait
mov
bound
rcll
out
or
mov
popf
test
loope
xchg
push
xchg
pushf
push
jecxz
jg,pt
iret
fsubrs
call
mov
xchg
push
pop
push
or
inc
fdivp
call
imul
aam
fcompl
cmp
dec
mov
inc
pop
jb
arpl
push
loop
repnz
enter
mov
lods
jg
mov
push
pop
aam
dec
imul
lods
inc
inc
add
dec
and
mov
fildll
inc
enter
sub
mov
adc
sbb
repz
mov
mov
inc
or
push
xchg
fiadds
mov
aaa
cmc
rorl
std
pop
fstl
int3
push
and
push
mov
mov
fdivrs
xchg
mov
adc
cwtl
inc
pop
out
test
scas
sub
cltd
fnsave
mov
cmc
js
mov
icebp
mov
fdivrl
clc
mov
andb
fadd
add
movsl
sbb
sarb
rol
sub
sbb
into
cmp
test
mov
gs
fwait
rcrl
aad
ljmp
test
incb
aas
mov
sbb
dec
push
pop
out
out
in
cs
repnz
aam
outsb
mov
xchg
jnp
sahf
and
subb
dec
in
imul
pop
int
jbe
loopne
sbbl
add
pop
or
push
sub
daa
push
cmpsb
enter
mov
cmc
fisttpl
repz
in
decl
jge
mov
outsb
leave
xchg
pop
add
leave
pop
add
int
jae
mov
xchg
andl
mov
mov
js
adc
push
jle
lret
push
pushf
ljmp
mov
mov
jo
lret
xchg
aas
add
out
add
dec
std
jmp
xor
mov
push
pop
cmpsb
mov
popf
out
mov
dec
mov
sti
das
jno
mov
dec
lahf
arpl
inc
lea
mov
aad
ljmp
dec
out
inc
jno
cmp
in
adc
lea
xchg
int3
cmp
jg
adc
xchg
fisttpl
pop
imul
mov
jle
imull
ja
es
inc
push
inc
cmp
aad
mov
mov
push
push
jp
sbb
adc
xor
inc
sbb
and
sbb
mov
push
imul
inc
add
lahf
mov
cmp
inc
jne
scas
aad
inc
xor
xor
mov
jbe
fs
mov
dec
xor
std
fldcw
sub
jge
or
push
and
inc
inc
inc
fwait
lahf
push
push
testb
stc
ret
mov
scas
cs
rcrl
rorb
pop
cwtl
pop
outsb
movsl
rcr
mov
or
test
addr16
jns
pop
loop
out
fisubrl
or
mov
mov
bound
dec
faddl
and
movsb
cmc
test
or
lock
push
lods
scas
sub
ljmp
dec
int3
adc
pop
adc
jmp
hlt
add
xor
rorb
jns
jo
cmp
roll
mov
sub
popa
mov
ljmp
test
xchg
pop
xor
dec
lock
dec
push
push
mov
mov
add
mov
sahf
jns
push
scas
aas
int
jp
iret
ret
pop
inc
pop
fcompl
inc
out
push
jle
ss
inc
fdivl
xlat
jne
jnp
lods
push
push
add
jg
dec
xor
push
data16
xlat
sbb
mov
ret
jmp
pop
nop
cmp
inc
sub
mov
in
scas
ja
sub
movsl
mov
xchg
and
jecxz
pop
movsl
lods
mov
mov
dec
movsb
stos
xchg
pop
test
sub
js
stos
add
loop,pn
enter
dec
scas
mov
faddl
jl
cmp
pusha
in
insb
loope
push
stos
testl
ljmp
jle
aas
or
adc
mov
sti
ds
aad
mov
mov
inc
or
mov
xor
mov
aam
in
dec
insl
mov
fisttpll
mov
add
das
jno
aad
inc
sbb
rorl
imul
add
vpshaq
clc
ljmp
sbb
and
sub
inc
inc
cmpsl
xor
inc
add
and
dec
fistps
sbb
mov
adcb
mov
add
mov
bound
incb
cwtl
mov
jl
sahf
xlat
shrl
cmp
pop
daa
stc
lret
stc
cmpb
xchg
push
data16
jbe
enter
ljmp
sub
mov
pushf
mov
mov
arpl
gs
add
mov
mov
int
sbb
mov
mov
pushf
sub
adc
push
push
mov
adc
inc
bnd
mov
aaa
push
bound
cmpsl
fwait
jmp
mov
adc
push
in
xor
push
sahf
xchg
insb
jge
cmc
ljmp
cmovl
das
cltd
adc
jmp
bound
sub
push
out
lock
push
cmpsl
or
mov
pop
and
les
andb
jl
ss
xor
xchg
mov
add
mov
and
mov
inc
cmp
ja
push
rolb
xor
push
jge
std
sbb
test
ja
mov
mov
out
pcmpeqb
xor
ret
xor
cmpsb
pop
xor
mov
scas
es
ror
xor
ficoms
insl
mov
sbb
ljmp
dec
cmp
vmovhpd
bound
xchg
adc
mov
loope
shlb
imul
jnp
jne
cmp
addl
add
enter
cmp
fidivrl
jb
mov
stos
movsb
pop
scas
std
sbb
mov
pop
fdivl
add
mov
fs
sbbl
pop
push
in
enter
or
xchg
jge
sub
pop
jge
pop
stos
sub
movsb
lds
stc
js
pusha
add
sbb
pop
inc
enter
cld
ret
fwait
cmp
ja
and
or
jg
sub
pop
scas
fdivs
test
push
cmp
sub
inc
jmp
dec
hlt
daa
xchg
lods
xor
shrl
push
xorb
mov
sub
aas
jno
inc
mov
cmpsb
iret
call
cmp
xchg
and
jnp
daa
into
enter
insb
gs
jb
sbb
movl
inc
sub
fistpl
mov
data16
dec
and
cmp
repnz
leave
test
xor
inc
xchg
pop
mov
mov
shl
cmp
push
jl
sti
les
inc
in
jo
out
shrl
fiadds
sbb
lock
sti
jg
inc
or
dec
stos
push
or
xor
add
jmp
push
jbe
sarb
lahf
push
daa
pop
sub
pop
test
xchg
dec
push
adc
push
push
dec
mov
or
dec
xor
test
pop
loope
hlt
add
ljmp
add
push
test
cmpsb
sub
notl
mov
imul
call
jns
mov
or
inc
xor
push
pop
add
xlat
shrl
mov
and
jae
push
mull
push
jne
xor
pop
jns
loop
cmp
cld
push
jecxz
dec
in
push
mov
ret
xchg
mov
popf
mov
jb
int3
std
pushf
push
and
sbb
rcrb
cld
test
mov
scas
sti
loopne
xor
loopne
je
ja
mov
iret
insb
call
mov
xor
pop
push
mov
lea
pushf
push
ss
sub
and
data16
lods
sub
adc
cmpb
test
cmp
stos
adc
insl
mov
lock
rclb
mov
jmp
adc
shrl
movl
imul
ret
dec
xchg
stc
iret
imul
jo
sbb
stos
or
push
subl
ficoml
mov
xor
into
pusha
cmc
dec
into
fmuls
sub
cli
cmp
add
inc
sbb
cmp
or
es
xchg
dec
out
mov
and
or
ret
loop
ret
cmp
jmp
push
add
mov
push
jnp
or
cmp
sbb
insb
mov
scas
movsw
add
lods
mov
scas
xor
cwtl
addb
sahf
ficompl
jle
mov
pop
lret
sbb
lods
repz
mov
mov
xchg
or
xchg
add
jmp
test
mov
cltd
push
cmpsl
lcall
mov
repnz
jbe
insl
out
xchg
or
imul
das
push
pop
lods
inc
fdivrp
les
mov
adc
ja
loope
xchg
push
pop
inc
divb
fdivl
xchg
insb
lea
fadd
xchg
in
jae
pushf
pop
xorl
jbe
dec
cs
sti
add
lea
push
mov
push
neg
rcll
cmc
mov
aas
stos
ds
push
cltd
inc
and
cli
dec
repnz
cld
jno
sbb
pop
mov
mov
shll
mov
mov
xor
ljmp
add
mov
sub
ljmp
pop
pop
push
leave
mov
push
sub
sub
aam
pop
pop
cmpsl
fsubrp
fwait
sub
sbb
mov
fs
loopne
call
iret
mov
sub
dec
lcall
add
mov
dec
jle
xchg
ret
movsl
int
fcomi
add
fiaddl
mov
sbb
rdseed
cwtl
roll
in
mov
xchg
test
stos
loop
adc
xchg
adc
mov
in
dec
mov
pusha
sbb
js
outsb
sub
pop
xchg
lock
pop
nop
fldl
push
ds
jge
imul
aad
ja
add
ror
inc
mov
mov
ja
gs
aam
sub
scas
mulb
loope
or
sbb
sub
mov
cmp
loopne
push
out
ds
adcl
mov
clc
mov
fistps
mov
aam
dec
in
aaa
jno
sbb
jecxz
pop
popf
jbe
pop
mov
dec
repz
test
add
add
mov
xor
push
and
ljmp
addl
daa
xor
ret
into
adc
mov
sub
test
rcr
mov
stos
sahf
mov
add
mov
jg
cltd
popf
mov
aas
mov
lods
sub
scas
cmc
jg
or
mov
mov
pusha
nop
aaa
xor
cmpsl
data16
cwtl
mov
out
inc
divl
shlb
sbb
out
shll
insl
call
bound
cmp
mov
mov
inc
sbb
inc
cli
aad
fcompl
in
shr
push
add
xchg
adc
mov
icebp
mov
inc
inc
or
lds
insl
je
in
xchg
sub
push
or
mov
sbb
sarb
enter
call
mov
xchg
mov
scas
fnsave
adc
das
xchg
push
cli
pushf
sub
lahf
in
push
mov
mov
mov
xchg
int3
arpl
ret
pop
xchg
arpl
mov
mov
and
mov
inc
cli
movsb
out
adc
pushf
xor
mov
rorl
xor
test
loopne
cmc
loope
sti
mul
bound
cmc
xchg
les
hlt
popf
mov
jl
out
gs
dec
rorb
xor
js
and
lods
dec
scas
loopne
imul
pop
pop
push
mov
data16
add
mov
jg
shlb
dec
mulb
xor
cltd
addr16
or
leave
stos
aam
and
into
inc
insl
jle
fcmovu
push
in
xchg
xchg
int
shll
icebp
scas
hlt
cld
mov
out
push
jo,pt
mov
stos
dec
dec
imul
mov
mov
sbb
ret
jge
sub
fmul
inc
jle
test
jge
inc
add
scas
mov
adc
add
andb
mov
cmp
cmp
stos
imull
in
test
fs
add
cmp
sahf
hlt
lods
push
cwtl
mov
hlt
mov
out
lock
pop
shlb
add
sbb
daa
pop
push
popf
sub
lds
roll
nop
fbld
xchg
xor
jne
test
lcall
inc
mov
cltd
push
sar
loop
adc
jo
or
jle
mov
lock
cmpsb
push
dec
sub
inc
mov
movsb
ret
mov
mov
ljmp
int3
out
push
pop
es
fcompl
cs
pop
pop
and
and
int3
cmpsl
clc
fistl
jo
leave
fldt
jb
xor
scas
sbb
jl
dec
push
sbbb
mov
test
dec
sbb
add
jnp
and
cmp
sbb
popa
cmp
cmpsb
xchg
daa
xlat
cmc
aaa
js
mov
bound
push
int3
fwait
dec
js
xchg
test
sbb
xor
pop
arpl
add
and
js
out
jns
sub
mov
cmpsl
adcb
aam
fisubl
jg
mov
lea
int3
cmp
add
pop
sub
mov
and
inc
sbb
mov
sti
and
sarl
rclb
mov
mov
popf
sbb
sub
addr16
inc
outsb
out
jp
fidivrl
mov
lahf
in
imul
flds
jge
stc
ds
xor
pop
mov
xor
repnz
addr16
mov
xchg
daa
mov
push
push
pop
sub
fnstenv
jmp
mov
into
iret
xor
mov
les
aaa
sbb
hlt
popf
xchg
inc
jo
adc
dec
inc
push
loopne
daa
test
cmpsl
jge
lods
mov
int
ljmp
sbb
jnp,pn
mov
jp
jb
daa
xor
push
adc
popf
push
in
lods
cmp
call
arpl
xchg
sub
cmp
xchg
mov
pop
int
out
loope
pop
cmpsl
mov
and
mov
das
fdivr
lret
test
inc
push
jne
mov
je
lcall
xor
xchg
push
mov
mov
dec
mov
push
mov
leave
js
incb
pop
mov
xchg
out
mov
adc
stos
pop
pushf
push
insl
out
das
dec
jb
inc
pop
sbb
add
scas
test
xchg
add
xchg
sbb
fwait
cmp
ja
push
icebp
insb
dec
add
aad
aaa
jne
ret
cmc
es
stos
add
imul
loop
and
mov
inc
jl
jg
jbe
aaa
leave
movsl
jnp
decb
negl
push
lret
leave
push
pop
cmpsb
push
cmp
es
arpl
mov
push
shlb
icebp
xchg
lock
into
cmovb
je
gs
cld
and
or
mov
push
int
add
fidivrl
test
insb
ljmp
inc
cs
fisubl
scas
pop
mov
aas
jb
sbb
in
jl
movsb
and
dec
mov
or
cli
iret
test
cmp
adc
xchg
sub
mov
and
lahf
sbb
orb
mov
pop
sti
sub
pop
or
add
rorl
push
or
mov
mov
mov
pop
pop
jmp
pop
sbbl
jg
popa
cmpsl
fcoml
sbb
outsl
and
mov
pop
out
inc
or
fwait
jg
lahf
xor
push
rclb
cs
cli
pop
jo
es
or
loopne
or
cmp
idivb
loopne
cmp
mov
cli
test
data16
adc
jle
cmp
and
inc
sbb
xchg
sbb
pop
lahf
dec
dec
mov
hlt
push
lret
xorl
xor
fdivl
and
scas
xor
dec
add
or
jmp
ljmp
or
adc
mov
pop
cli
popf
leave
lock
mul
iret
into
dec
fiadds
push
popa
pusha
std
push
mov
lock
lcall
adc
sbb
ss
testl
push
mov
or
and
imul
addr16
js
gs
rcll
call
dec
pop
mov
test
shll
push
xchg
cwtl
lods
add
stos
in
xchg
in
test
and
aas
push
pop
bound
push
pop
repnz
inc
outsl
pop
cmp
ret
sbb
lret
dec
xchg
in
mov
cld
dec
out
stos
cmp
cld
and
les
dec
adc
push
cmp
enter
stos
xor
mov
mov
movsl
mov
adc
or
or
push
mov
sub
repz
addl
mov
std
fdivs
and
pop
fcmovu
int3
dec
fldcw
push
imul
add
repnz
iret
xor
pop
or
into
xchg
pop
into
out
pop
cli
mov
subl
lea
fisttpll
out
aas
orb
xor
clc
cli
add
fisubs
inc
sbb
int3
test
ret
mov
les
jo
mov
nop
xor
lock
xor
and
dec
add
mov
dec
aas
mov
mov
cmp
sarb
adc
xor
and
mov
jnp
mov
fiadds
and
xchg
push
lds
sti
movsb
jmp
push
pop
int
dec
and
aad
out
pop
sarl
insl
imul
cmpsl
aad
jmp
das
dec
fucom
mov
pop
xchg
ljmp
mov
test
lea
fisubl
and
add
repnz
popf
sbb
movsl
sub
jle
adc
imul
cmp
or
ja
pop
sti
cmp
in
mov
jbe
cmp
xlat
cmp
and
ret
mov
mov
sub
mov
push
pop
in
adc
mov
mov
cmp
jae
andl
and
pop
push
or
xor
sub
and
rcll
add
or
mov
add
lret
loop
mov
mov
mov
jg
push
les
jbe
or
icebp
mov
jmp
mov
pop
int3
jae
inc
jle
gs
cmpb
jno
in
stc
inc
mov
mov
lds
sbb
pop
xor
and
xor
push
mov
pop
mov
pop
jns
jne
push
scas
sti
inc
mov
leave
mov
xor
mov
sub
jne
xlat
mov
aas
scas
imul
ds
mov
mov
into
pop
sbb
outsb
pop
dec
cmpsl
fdivr
ja
fwait
cmpsl
push
ret
cmp
fists
gs
inc
adc
inc
dec
xlat
test
popa
and
add
mov
addr16
sahf
out
out
xchg
popf
lret
sarb
leave
xchg
jg
sub
adc
and
mull
call
daa
adc
fs
cmp
inc
or
iret
lret
jbe
inc
and
popf
inc
out
out
lock
inc
sahf
test
lods
inc
push
enter
std
inc
dec
fldl2e
mov
xchg
out
adc
mov
mov
fiaddl
push
add
ret
jg
or
add
loop
test
jle
insl
lds
jmp
out
shlb
sbb
xor
sbb
push
adc
and
xor
mov
movsl
insl
nop
sti
push
shr
add
xchg
mov
xlat
insb
ret
imul
data16
inc
loop
sbb
jbe
dec
inc
inc
pop
push
arpl
xchg
arpl
test
sub
jle
dec
cmp
rclb
xchg
push
sub
test
shlb
or
inc
sub
in
insl
rcrl
xchg
stc
push
sti
outsb
adc
jo
adc
lock
in
sbb
pop
into
inc
and
ss
mov
repz
xchg
pushf
movsl
bnd
shlb
jb
fldcw
test
adc
iret
or
adc
or
mov
testb
jae
shlb
pop
sub
fists
bound
int3
jns
xchg
idiv
pop
adc
jne
shlb
add
push
insb
cmpl
pop
jl
pop
mov
ja
mov
and
pop
adc
inc
xchg
mov
push
cld
sbb
repnz
pushf
mov
lds
xchg
add
enter
js
icebp
mov
ljmp
int
test
mov
pop
mov
ja
xchg
stc
lret
pop
push
push
sti
adc
add
out
out
push
fidivs
fsubrs
xchg
xor
jbe
gs
mov
push
mov
push
out
mov
pusha
adc
push
pop
outsl
les
dec
test
jmp
dec
xor
arpl
sbbl
fucomi
daa
jge
dec
adc
and
jmp
repnz
mov
mov
and
mov
out
movsb
xchg
and
inc
push
iret
stos
ror
pusha
aaa
or
jmp
and
fwait
incb
mov
int
jecxz
test
shrl
sub
pop
and
fadds
movsl
repz
sub
cmp
cli
shl
pushf
ja
movsb
fwait
mov
cmp
out
jl
cmp
lock
cmc
mov
dec
jne
dec
rcr
inc
xchg
dec
loope
dec
sub
cmp
popa
jae
addb
push
cld
ret
or
sub
int3
rep
daa
xchg
mov
iret
mov
pop
dec
cmp
jp
pop
and
xlat
fmulp
sbb
sub
cmp
add
inc
mov
fsts
push
add
aaa
inc
push
mov
inc
ljmp
gs
repnz
sub
mov
fucomp
cmp
shll
scas
test
bound
lea
jns
rolb
in
cwtl
sbb
push
sti
and
mov
ja
lcall
scas
dec
ret
push
add
in
adc
dec
test
adc
lods
cmpsb
aaa
jle
dec
repnz
pushf
mul
push
pop
pop
mov
lret
mov
lahf
and
movsl
insl
shlb
cwtl
pop
mov
aas
dec
popa
sub
xor
fsubr
xchg
adc
cli
cmc
scas
pop
jl
out
cmpsb
and
dec
xor
jp
sbb
fwait
and
fiaddl
out
stos
jne
into
dec
sub
add
test
outsl
lods
push
dec
rcrb
add
lock
popaw
add
aaa
and
mov
mov
aaa
push
subl
jecxz
mov
sarb
shlb
push
dec
add
cmpsl
andl
inc
and
out
push
dec
add
dec
repnz
inc
inc
push
cmp
divb
scas
int3
pop
add
xchg
push
inc
cli
in
mov
imul
test
add
xchg
mov
push
test
lcall
dec
push
or
imul
jmp
mov
sbb
inc
pop
xor
sbb
sub
add
aad
cmp
iret
pop
popf
lea
sti
aaa
cmp
int3
shl
jno
ret
inc
sub
inc
outsl
jae
pop
push
fdivl
dec
sub
xchg
gs
mov
sub
pop
push
or
es
clc
mov
shll
js
xchg
inc
mov
movl
jp
lret
movsl
shlb
sub
pop
xchg
frstor
sub
mov
cmp
xchg
inc
jle
inc
cmp
cmp
or
leave
sahf
xchg
add
scas
adcb
test
pop
fwait
xchg
inc
daa
xor
lret
cld
leave
shlb
mov
and
pop
mov
andb
aam
or
xor
sbb
mov
incb
mov
cmp
pop
jns
dec
push
stos
add
push
das
sbb
addr16
cli
mov
or
xor
aam
push
movsl
sbb
cwtl
lret
nop
mov
and
mov
imul
std
int
and
pop
inc
mov
push
pushf
nop
cmp
inc
jge
sbb
pop
sub
adc
into
xchg
int
stc
sub
cmp
mov
mov
sarl
adc
mov
jnp
dec
cli
pcmpeqw
lret
sub
xchg
push
sbb
dec
adc
int3
in
jecxz
dec
movl
dec
and
adc
icebp
sbb
les
stos
dec
rorl
std
icebp
cmp
push
fbld
sbb
jmp
cmpsb
xlat
movsb
inc
loopne
paddusw
int
sbbl
fwait
pushf
or
xchg
and
dec
movsb
sahf
push
jmp
cmp
into
out
stos
cltd
xchg
mov
sbb
mov
sub
aas
in
sub
js
jns
xchg
adc
sar
xlat
xor
and
out
das
cmp
bound
jle
negl
mov
and
push
cmp
imul
lahf
in
mov
mov
inc
repnz
or
ror
sbb
in
mov
pop
xchg
sahf
adc
mov
mov
popl
sub
cmp
mov
cwtl
pop
sarl
shrl
rcr
popa
fs
xlat
sub
into
pop
mov
adcb
es
sub
and
xor
xchg
push
ds
xchg
mov
xchg
jns
or
pop
ds
push
icebp
mov
or
mov
sbb
sbb
popf
arpl
push
iret
or
jnp
xchg
loopne
mov
pop
sarl
hlt
in
andl
sub
in
push
add
test
push
popf
mov
ror
imul
lret
xchg
in
mov
ljmp
xchg
ds
outsl
nop
stos
push
pop
ret
stos
mov
lcall
mov
sbb
clc
jne
fs
inc
pop
mov
adc
in
push
fwait
clc
adc
fidivrs
addr16
push
sahf
cmp
cwtl
add
sbb
xchg
sahf
out
dec
xchg
sub
js
rol
jno
nop
shrl
rclb
or
sarl
mov
pop
cmp
out
sub
das
mov
and
add
add
insl
idiv
mov
repz
or
in
dec
pop
std
aaa
cld
aaa
fs
push
andl
lahf
stos
inc
ss
jp
pop
out
ss
jbe
push
push
xchg
xchg
dec
cli
popa
stos
dec
outsb
pusha
adc
es
jg
dec
xor
jl
sahf
mov
or
add
sbb
and
cmc
adc
xchg
vmread
cmc
cmp
cltd
or
outsb
aas
push
les
int
cltd
das
fstps
sbb
cmp
jle
stos
jb
mov
lods
lret
sbb
inc
loopne
testl
cmp
jle
shlb
inc
jb
jbe
inc
cmp
mov
pushf
lcall
shrb
sti
icebp
cs
popl
movl
dec
cmp
and
xor
in
push
es
imul
loope
loop
cmp
mov
add
push
outsb
sub
add
cmc
sbb
dec
std
leave
mov
mov
inc
mov
dec
inc
push
pop
adc
pop
jg
bnd
push
pushf
dec
adc
pop
stos
lea
mov
add
mov
fldcw
xor
dec
lahf
and
in
cmpsl
mov
jg,pn
mull
adc
cmp
stos
inc
fs
inc
sbb
adc
sahf
pop
js
movsl
iret
pop
jle
sarl
es
mov
jge
cmp
push
add
xor
loope
jg
shlb
mov
push
adc
dec
cli
scas
mov
loope
popf
add
xchg
mov
pop
jecxz
push
sbbb
int
jns
cmp
jg
cli
sbb
mov
push
xor
lret
hlt
hlt
test
icebp
rorb
jbe
or
clc
mov
fbld
cmp
mov
mov
adc
inc
jnp
insb
jl
dec
sti
jp
sub
add
or
pop
pop
mov
lahf
inc
push
rcrl
sahf
fs
iret
ficomps
inc
bound
xchg
imulb
sub
cmp
jnp
cwtl
je
cmp
mov
mov
scas
pusha
pop
mov
lcall
mov
mov
jnp
xchg
into
xlat
push
adc
dec
xchg
movsl
mov
nop
mov
and
dec
push
dec
xor
jle
mov
mov
aas
lret
adcl
loope
inc
outsb
les
popf
or
sbb
pop
lahf
cmp
cmp
inc
dec
mov
mov
pop
ds
jecxz
rcrl
insl
jb
mov
div
adc
mov
push
fwait
add
jb
fstps
mov
mov
cmp
mov
repz
addl
cld
sbb
mov
cmp
or
shrb
lahf
es
push
stos
pushaw
push
mov
or
xchg
lods
mov
jle
adc
repnz
loope
or
cmp
jge
adc
sbb
lds
jo
and
sbb
jecxz
dec
cld
gs
into
push
call
jp
ds
imul
lcall
fists
aam
add
ret
test
jecxz
xor
and
popa
lret
and
push
push
push
adc
ret
mov
les
push
stos
cs
sbb
dec
jbe
pop
movsl
or
push
popf
inc
fwait
sbb
ror
jnp
mov
rcll
std
dec
popf
xchg
mov
mov
inc
sub
push
mov
sub
imul
cmc
in
xor
mov
sarb
mov
mov
add
adc
pop
ret
filds
xchg
les
xlat
hlt
sahf
mov
mov
cs
mov
and
push
push
pop
lds
jge
std
sub
in
rcll
cmp
push
mov
push
aad
pop
xsavec
dec
mov
dec
aam
dec
xlat
sbb
lret
shl
mov
shl
fcoms
loop
cld
fs
push
or
pop
jg
js
mov
xchg
movsb
mov
xchg
stc
lahf
out
mov
or
ret
jbe
rcl
mov
sbb
fistpll
mov
jmp
shlb
data16
inc
lahf
lods
dec
in
add
adc
addr16
mov
ret
cmpsb
lahf
shll
arpl
fidivrl
in
or
repz
test
adc
mov
jne
das
mov
mov
fnsave
test
or
jecxz
in
jnp
int
mul
push
mov
pop
je
adc
jl
rol
or
mov
fisubrs
js
mov
je
test
jecxz
mov
js
xor
call
in
jle
fimull
dec
adc
loopne
cmpsl
mov
mull
push
sahf
jo
shlb
mov
scas
jae
jge
xchg
bnd
imul
cmp
dec
loop
push
jae
cmpsl
in
mov
sbb
insl
icebp
shr
mov
cmp
dec
dec
iret
aaa
sbb
pop
je
sti
mov
jb
jae
mov
push
scas
add
cmp
aas
int
pop
dec
dec
scas
xchg
ficoms
xor
ret
scas
testb
out
repnz
mov
pop
xchg
push
sub
jns
mov
push
xchg
loopne
mov
sub
outsl
dec
xchg
pop
mov
mov
mov
xchg
fstpl
js
xor
lcall
and
movsb
inc
sub
cmpl
add
pop
mov
popf
leave
or
std
xchg
cmp
mov
das
insl
pop
lods
xlat
push
hlt
das
mov
jbe
pop
lret
orb
prefetch
pop
es
nop
push
jb
mov
out
idivb
ret
out
sbb
mov
push
stos
mov
rdmsr
adc
test
dec
adc
or
mov
aas
or
or
adc
das
aad
sub
cmp
imul
mov
xchg
jo
and
xlat
imul
and
bound
out
cmp
push
sahf
xchg
fisubs
repz
outsl
adc
xchg
sub
sub
ljmp
dec
jge
cmp
pop
jo
inc
sbb
mov
jge
in
sub
cwtl
cltd
sbb
repz
outsb
subb
loope
cltd
add
mov
popa
or
sub
mov
cmp
xchg
pop
sbb
loop
xlat
lret
lret
loop
movsl
popa
pop
loop
mov
aaa
jmp
pop
decb
aaa
add
jns
movsb
mov
dec
cli
mov
jb
or
fidivrs
adc
ds
in
sub
cmp
dec
mov
idivl
aas
int
sahf
out
cmpsl
arpl
mov
inc
add
pop
jns
add
xchg
enter
xchg
sub
test
pop
jns,pn
dec
xorl
jno
mov
mov
and
jbe
sbb
aad
fildl
add
ss
out
add
jecxz
movsb
and
mov
inc
std
xor
dec
dec
imul
xchg
decl
jb
adc
loop
dec
dec
insb
idiv
mov
mov
lods
test
nop
stos
shrl
loopne
mov
pushw
shll
out
add
xchg
jno
jae
xor
nop/reserved
pop
lea
out
mov
enter
dec
in
pop
ja
aas
outsb
cmp
adc
insb
lret
adc
mov
pop
enter
test
andl
mov
enter
movsl
or
aaa
test
fs
adc
fwait
mov
out
pusha
jl
loop
push
dec
scas
loope
addb
xchg
insl
daa
out
sbb
in
jne
sub
dec
aas
clc
add
mov
jo
test
out
inc
mov
and
popf
cmp
sbb
mov
outsb
aaa
lahf
cmp
iret
xchg
add
into
dec
adc
adc
leave
mov
ret
js
out
aam
mov
fsts
and
adc
dec
jns
xchg
in
sub
jle
call
fisubrl
outsl
push
shr
cmpsb
test
in
and
aam
jg
popf
xor
pop
inc
ds
ret
sub
xchg
push
hlt
rcrb
addl
js
jl
mov
mov
outsb
lret
ss
sub
pop
or
pop
cmp
fnstcw
and
popl
push
xlat
mov
outsl
cmp
pop
jnp
mov
jae
mov
cmp
inc
pop
imul
pop
add
xchg
out
fcmovnbe
mov
call
les
aas
hlt
test
cmp
test
std
lock
leave
pop
push
scas
mov
jecxz
jle
mul
mov
push
enter
cmp
inc
fwait
push
adc
pop
add
mov
sbb
mov
push
jo
xlat
and
subb
dec
cmp
mov
push
mov
xlat
mov
push
sbb
jge
cmp
and
mov
xchg
jmp
pop
xchg
jnp
fstpl
cli
mov
jmp
pushf
int
scas
les
xlat
dec
sbb
mov
sbb
fisttpll
out
out
ss
daa
mov
shl
cld
movl
cld
outsl
repnz
cmpsb
xor
push
wbinvd
lods
stc
je
lods
mov
addb
cmp
push
mov
jns
and
adc
lret
mov
stos
xor
lret
push
aaa
sub
subb
out
and
jl
and
pop
adc
aam
or
fucomip
mov
shr
ljmp
xor
xor
pop
or
fcomi
out
add
repnz
mov
dec
stos
mov
sarb
rorl
dec
mov
fistpl
dec
jbe
sarl
lret
add
fsubs
push
ljmp
insb
movsl
push
cwtl
fimuls
daa
or
popa
test
xor
loop
dec
movsb
leave
push
sbb
mov
inc
jg
cmp
in
push
mov
loop
mov
adc
imul
imulb
cltd
jmp
and
mov
push
jle
mov
xchg
hlt
cmp
lock
pop
ja
push
mov
aam
add
dec
bound
mov
orl
int
mov
sbb
lea
fildll
inc
xor
xchg
loop
or
enter
test
dec
aaa
adc
ja
xchg
lock
adc
hlt
mov
xchg
mov
sub
jbe
int
dec
mov
xchg
int3
movsb
or
addr16
sar
lock
hlt
fidivs
mov
stos
dec
jo
xorb
ret
mov
push
lret
jo
shlb
push
into
ljmp
jl
jle
mov
inc
negb
cs
mov
adc
or
jo
sbb
ljmp
and
mov
test
mov
mov
sarl
pop
mov
pop
test
js
mov
addr16
push
mov
daa
in
cmp
xor
and
cwtl
pop
ja
popf
pop
pop
jo
inc
mov
sbb
fs
push
push
outsl
sub
jnp
mov
cmc
nop
pop
les
movsb
inc
dec
cmp
mov
lret
popf
jns
cmp
sbb
dec
gs
pop
cs
js
or
insb
ret
jp
or
cmp
fstpt
outsb
add
mov
adc
pop
push
pusha
push
data16
push
incl
add
dec
js
lcall
cmpsl
fs
push
test
test
cmpsb
mov
les
pop
insb
push
add
cmp
imul
inc
pop
xor
fwait
cwtl
repnz
sub
fnsave
add
fsubrs
add
mov
xchg
out
dec
inc
divl
jnp
sbb
nop
dec
push
not
leave
xor
sbb
je
daa
out
cmp
sarb
movsb
test
negl
or
cltd
cmp
xor
jb
fstl
addr16
inc
xor
xchg
pop
sbbl
jmp
aaa
and
scas
movsb
jbe
xchg
jae
dec
adc
pop
aad
in
jl
adc
sub
mov
shl
insb
lahf
dec
in
inc
xor
mov
cli
int
sub
cli
cmc
add
jne
sub
das
cwtl
adcb
daa
pop
addr16
imul
dec
jo
loopne
stos
push
xchg
aas
insl
inc
pushf
into
sub
push
jo
pop
adc
push
xlat
cmp
cmp
fidivrl
lret
nop
iret
lcall
mov
into
repz
mov
sub
icebp
outsb
inc
jle
push
mov
or
push
sub
pop
repz
rol
mov
out
ja
sbbl
mov
or
dec
hlt
das
scas
sub
adc
xor
test
lea
jecxz
insb
test
inc
or
mov
aas
xchg
inc
mov
adc
jae
call
mov
lret
movsb
stc
mov
call
lods
or
add
stos
sbb
pop
ror
ret
xor
mov
sbb
inc
daa
popf
sti
cmp
and
es
bound
aad
stos
movb
sti
sub
mov
nop
sbb
jmp
and
xor
xchg
ja
gs
xor
pop
addr16
ret
sub
or
repz
pop
lods
divb
push
enter
lods
push
lret
xchg
pop
sub
imul
mov
into
mov
lock
and
push
push
test
insl
outsb
push
add
rorl
cli
lahf
std
mov
lret
xor
sti
data16
mov
xor
in
loopne
enter
cmc
pop
and
or
dec
jecxz
pop
mov
push
or
mov
ljmp
lods
adc
sub
test
mov
int
jae
pop
loopne
xchg
cmp
pop
mov
rorb
and
jmp
repnz
pushf
in
in
add
mov
scas
sbb
lea
in
pushf
psllq
sub
cmp
into
lods
pop
stc
es
dec
mov
mulb
mov
xor
call
insb
or
fsubs
xchg
inc
push
repnz
cmp
ja
xorb
mov
xchg
fwait
sbb
xor
idiv
xchg
dec
loopne
jmp
mov
cmpsl
data16
add
pop
push
test
push
sti
popa
ret
es
sbb
jb
xchg
enter
sub
jg
addr16
insl
add
fisubl
sbb
jp
jb
and
hlt
add
pop
hlt
imul
aam
test
jns
bound
rolb
aaa
fstpt
clc
std
aaa
or
test
jae
test
arpl
into
fisttpll
inc
sbb
pop
jae
jmp
orb
or
xchg
ss
sub
mov
scas
or
push
xchg
mov
xor
xor
mov
sahf
cltd
iret
xchg
mov
cmp
mov
pop
jmp
sub
loopne
cvtps2pi
div
cmp
js,pt
sub
sub
fnsave
pop
fwait
scas
cmc
fdivr
cmp
fdivrl
xor
xchg
inc
push
das
xchg
lods
mov
inc
push
mov
fs
cltd
push
mov
mov
decl
mov
adc
shl
xor
cmpsl
clc
ljmp
lret
mov
fisubrl
or
aad
and
shr
xor
jmp
cmp
jns
push
xlat
and
mov
sbb
shll
cwtl
push
mov
sbb
xchg
fsubr
adc
sub
ficomps
push
lcall
mov
cmp
jno
sub
js
xchg
movsb
cmp
es
push
cli
mov
sbb
adc
jae
sub
iret
xchg
push
pop
aaa
dec
test
lret
jae
ret
inc
cmp
in
fst
xchg
cwtl
loop
cs
and
ret
mov
lods
pop
and
jae
mov
mov
insb
out
sbb
daa
dec
fists
xor
add
lret
adc
or
cmp
clc
fisttps
jno
je
idivb
sub
into
lock
lcall
dec
insl
repz
clc
adc
xchg
clc
pop
adc
sbb
jno
outsb
mov
rcll
mov
and
add
lods
jp
mov
mov
scas
sbb
add
mov
stos
xchg
mov
rclb
in
je
inc
or
inc
popf
xchg
cmp
fsts
loopne
jnp
cmp
adc
out
out
push
scas
loope
push
mov
icebp
fsubr
push
repnz
sub
sub
jle
pushf
fnstcw
mov
adc
jb
inc
repz
xchg
cmp
adc
icebp
imull
popa
pusha
fwait
cwtl
out
jbe
sub
jle
xor
or
add
mov
sbb
arpl
or
mov
movsl
fsts
cmp
pop
jno
push
test
and
cmpsb
in
sti
pop
lods
push
adc
sub
push
rorb
jge
xchg
mov
movsl
jae
ss
or
orb
dec
decb
shll
jns
xor
enter
insb
scas
movsb
mov
add
enter
fcomps
out
push
mov
sbb
imul
cmpsl
xchg
xchg
call
pop
sar
out
out
and
pop
jnp
mov
sub
mov
jns
ljmp
sub
pop
cmp
inc
in
push
jns
cmp
cmp
push
addb
mov
xor
loope
fdivr
fdivr
cmp
das
imul
mov
jg
sbb
cmp
push
jnp
mov
inc
xchg
imul
das
mov
push
xchg
push
pusha
xchg
popf
or
lret
jecxz
add
mov
sub
ss
lods
cld
pusha
sbbl
rcl
fs
xchg
rorb
movsb
cltd
add
jg
sbb
xchg
cmc
popf
ss
lret
negb
pop
popf
int
and
mov
pop
sub
jmp
lds
xchg
dec
movsb
mov
cltd
mov
bound
mov
xorb
imul
cmp
pop
inc
int3
repnz
cmp
xor
sbb
ljmp
or
lret
lret
xchg
pop
xchg
sbb
mov
js
mov
lret
pushf
add
pop
or
loopne
add
iret
xchg
cmp
ds
pop
xor
dec
hlt
or
testb
dec
add
ds
sarl
sub
fstps
mov
add
jnp
insl
mov
add
xor
pop
enter
mov
ljmp
stos
mov
mov
fwait
in
push
add
idivb
dec
inc
dec
pop
dec
pop
mov
mov
pushf
push
mov
outsb
sub
cltd
sub
mov
inc
je
jge
int
cmpl
xor
mov
stos
pop
jge
mov
push
dec
cli
lds
xor
out
das
addr16
xor
gs
sbb
push
inc
sub
into
test
cmpsb
adc
mov
gs
mov
fs
aam
es
stc
adc
jmp
stos
cli
out
cltd
add
jp
mov
pop
scas
adc
fs
rorl
jb
dec
mov
out
hlt
data16
call
mov
inc
in
dec
pop
cmp
out
lcall
add
mov
fisubrs
outsl
add
lcall
out
in
jle
xor
fstpt
outsl
mov
pushf
gs
sahf
sbb
sbb
jo
adc
push
adc
lds
leave
or
jb
xchg
fisubs
jl
xchg
jne
in
shrb
push
mov
fdivrs
sub
fwait
pop
mov
test
xchg
mov
jge
out
int
jg
cmp
in
into
pop
mov
cs
pop
movsl
or
sub
test
orl
fwait
push
out
jle
jns
pop
out
daa
xchg
sub
push
mov
roll
stc
mov
arpl
imul
test
add
jno
leave
testb
sub
jbe
sti
dec
jl
insl
daa
clc
xchg
bound
xlat
pop
test
lret
xchg
fs
add
lods
test
rcll
and
cmpsb
addr16
cli
push
inc
add
inc
nop
cmc
pushf
inc
scas
popf
les
outsb
out
nop
insl
cmp
insl
cmp
std
xchg
mov
insl
fisttpll
jne
testb
inc
lods
leave
movsl
mov
stc
popf
adc
imul
xchg
fisubl
xor
push
int3
xchg
mov
lcall
js
out
inc
popf
das
push
mov
and
xchg
lods
fsub
fs
out
dec
jo
inc
jl
fdivl
mov
xor
dec
jp
pop
push
or
mov
jmp
fdiv
push
xchg
loop
punpcklwd
shrl
dec
ds
xchg
or
mov
pop
mov
test
cs
idivl
stos
pushf
test
pop
daa
xlat
out
int
push
into
dec
xor
in
and
push
aas
mov
mov
repnz
call
jg
pop
pop
sti
loope
mov
popf
and
mov
pop
mov
dec
aaa
pushf
push
pop
mov
repz
mov
push
addl
stos
js
add
sti
sub
xchg
jle
test
lret
test
in
pop
mov
push
sub
aam
push
stos
cmpsb
stos
imul
adc
or
loope
fstps
xor
inc
sbb
loopne
mov
loopne
xchg
lock
pop
jbe
push
pop
add
mov
cpuid
jg
jo
sbb
add
dec
popa
dec
mov
mov
fildll
dec
and
xchg
jecxz
psllw
and
add
xchg
inc
cmp
gs
jecxz
fld
jne
loop
ljmp
push
xchg
inc
fwait
js
out
push
pop
jmp
cmp
pop
insb
fstps
es
sbb
rorb
push
shl
fsubrl
fs
fdivrs
mov
xor
cmp
mov
cmpsb
xchg
add
js
sub
clc
jge
aam
and
jns
mov
es
cld
ret
sbb
pop
jbe
stc
dec
mov
imul
xchg
aas
adc
in
inc
cmc
jae
mov
xor
sub
or
movsl
add
into
xlat
iret
sub
lahf
push
lds
xchg
ds
jp
pop
xor
xchg
imull
adc
adc
cmp
push
sbb
mov
and
ds
push
push
sub
xchg
cld
jbe
jae
jmp
aaa
xchg
sub
or
push
enter
adc
and
out
jecxz
fdivr
sti
push
push
fiadds
loope
fnstsw
pop
mov
fdivrl
ror
fwait
xor
inc
fsts
loop
addr16
cmpsb
jmp
add
xor
ficoml
fnstenv
dec
xchg
je
pop
and
mov
fs
out
inc
sbb
push
pop
pop
jo
xor
lods
cmp
dec
cmp
das
subl
mov
int
icebp
loop
shrb
xorl
mov
fiadds
imul
sbb
add
enter
fidivs
mov
or
je
lods
inc
cmpsb
jp
add
test
bound
andb
adc
xor
jnp
xchg
outsb
int
roll
inc
popf
sbb
adc
lea
add
lret
cli
and
mov
fldcw
lods
cs
lods
shll
pop
lcall
inc
push
mov
jno
int3
sahf
jne
add
dec
sbb
jl
pop
dec
inc
aam
dec
dec
ljmp
mov
fistl
xchg
shlb
push
push
or
push
out
xor
movsb
pop
shrl
add
bound
call
mov
mov
fnstsw
inc
mov
inc
stc
xchg
and
mov
xor
pop
mov
jmp
jb
jg
pop
lea
mov
shll
cmp
shrb
loop
sbb
mov
xor
enter
out
mov
dec
or
add
js
sbb
mov
jmp
outsl
jmp
add
mov
ljmp
cmp
mov
dec
sub
test
pop
jge
add
push
std
jecxz
out
dec
repnz
rcr
jno
xchg
iret
rcrb
popf
xor
jo
int3
sahf
adc
mull
add
jmp
sub
dec
jne
or
jns
jecxz
es
test
mov
mov
pop
mov
inc
addb
js
xchg
sub
loop
in
xor
cmp
xor
sbb
mov
mov
jle
xchg
cltd
mov
mov
shl
pop
fstpt
outsb
ret
loope
ds
push
jecxz
ss
sbbb
test
push
or
sbb
sbb
mov
jo
sti
cmp
and
cli
test
test
pop
gs
ljmp
adc
cs
in
cmp
push
xchg
or
mov
popf
aad
or
dec
popa
rcrb
pop
jno
cmp
sub
and
sub
fnsave
jno
xor
mov
jg
or
dec
mov
sub
mov
and
pop
xchg
push
mov
outsb
mov
mov
aad
push
inc
xor
push
sub
outsl
mov
mov
ss
jle
pop
cltd
push
ret
imul
shll
scas
adc
test
add
int
cmp
das
je
bound
scas
inc
test
mov
pusha
inc
push
andb
stos
addr16
enter
adc
lds
sbbl
cmc
fmuls
out
cmp
mov
xchg
dec
push
xchg
sub
das
ret
add
adc
lret
das
fbstp
ds
dec
pop
add
mov
or
in
mov
xchg
ret
jg
or
lahf
xchg
inc
jmp
rcll
add
shll
xchg
cs
push
lea
jne
jbe
inc
fs
or
jnp
sub
jg
subb
je
arpl
add
mov
adc
data16
inc
fwait
xchg
nop
fdivl
rorb
push
xcrypt-ofb
cmpsl
test
push
xchg
push
shl
rclb
xor
jmp
mov
add
in
call
mov
aas
xor
inc
loop
aas
inc
out
mov
mov
jecxz
pop
in
sub
xchg
and
jns
mov
dec
fs
mov
pop
out
inc
ja
outsb
push
cmp
inc
push
cmp
push
adc
test
movsl
fcmovnu
mov
imul
sarb
daa
loop
adc
push
add
push
lret
sti
pop
dec
loope
xor
sub
data16
cmp
xchg
pop
ja
fnstcw
jo
rcrl
jo
daa
out
cmc
push
adc
idivl
inc
aaa
or
mov
stos
add
mov
add
pop
out
sub
repz
cmp
orb
cmp
std
or
xchg
movsb
jmp
dec
mov
xor
in
xor
lods
shr
mov
dec
jl
dec
sbb
lds
mov
call
dec
icebp
mov
push
es
lods
repz
nop
adc
inc
out
mov
fsub
pop
jp
sbb
mov
mov
jne
sub
add
dec
xchg
dec
adc
adc
or
xor
lods
push
jmp
xchg
nop
push
loopne
int3
or
push
add
inc
fistpll
fwait
adc
out
pop
push
or
fdivl
addr16
mov
push
xor
push
pushf
in
cmc
push
ljmp
mov
test
out
paddd
push
ret
xchg
mov
stos
testb
or
jnp
mull
pop
jle
xchg
gs
in
xchg
fadds
in
or
mov
in
cmp
lods
stos
jl
sub
xchg
mov
xor
pushaw
jno
add
mov
rorl
pop
jmp
push
cmp
test
stos
lahf
fwait
push
int3
mov
mov
leave
pushf
sahf
popa
loopne
push
test
mov
jo
mov
jo
in
xchg
mov
jg
fstpt
jae
mov
fwait
cwtl
pop
fmulp
es
das
add
or
shrd
lods
dec
aad
push
dec
in
sub
cld
sub
aad
lret
outsl
dec
mov
cmp
dec
scas
inc
jo
test
je
jge
icebp
jo
mov
out
aaa
jge
popf
push
inc
in
push
aas
sahf
fcmovb
addb
or
cmc
fistl
stc
push
push
pusha
add
push
mov
je
mov
xchg
in
push
mov
roll
pop
xor
popf
scas
adc
aas
cld
mov
cmpsl
mov
xchg
bound
cltd
adc
jb
sti
push
aas
inc
addl
aam
jnp
loop
icebp
dec
push
xchg
outsb
mov
mov
jae
inc
xor
and
mov
daa
int3
jno
andb
pop
mov
cld
cmp
popl
cmp
cmp
add
test
arpl
int
sbb
xor
jle
adc
fists
pop
int
mov
xlat
mov
lret
leave
fwait
dec
repnz
scas
lahf
xlat
push
jb
in
cmp
add
popa
lods
adc
push
add
into
cmpsb
imul
add
ljmp
cmpsb
and
popa
push
sarb
pop
xor
xlat
and
shll
sbb
or
add
xchg
ret
cmpsb
lret
in
mov
adc
movsl
icebp
adc
loope
jne
arpl
lcall
dec
mov
xchg
mov
sbb
sbb
xchg
add
push
cld
mov
jb
stos
int
das
nop
test
test
push
sbb
mov
dec
arpl
hlt
dec
pop
jns
xchg
stos
je
imul
enter
cli
int
repnz
ja
das
jle
pop
mov
cwtl
sbb
stos
sarl
add
fwait
out
aas
sub
lods
adc
stos
movq
cmc
push
dec
pop
add
cmp
mov
lods
mov
dec
std
adc
adc
loopne
in
scas
test
sub
icebp
imul
addr16
pop
out
scas
test
daa
mov
movsb
insl
mov
cltd
lret
insb
lret
ss
push
aam
push
inc
pop
push
or
mov
rclb
in
cmp
and
ljmp
lods
push
int3
lea
enter
push
and
lcall
jno
sub
dec
outsb
push
sbb
sub
fs
mov
cli
push
or
xchg
in
mov
fisubl
sbb
gs
jbe
loopne
mov
jge
imulb
xchg
mov
adc
cmp
xor
int
enter
xchg
ret
js
ret
je
lods
mov
clc
sub
mov
mov
push
dec
movsb
insl
jl
aaa
pop
cwtl
jecxz
orb
daa
xor
cmpsb
pop
mov
push
les
push
push
mull
test
ljmp
push
mov
sub
ljmp
xor
cwtl
movsl
int
mov
jl
jo
sub
add
lahf
lahf
subb
xlat
xchg
in
subb
jp
adc
roll
and
out
jb
inc
cli
adc
loop
mov
xor
sub
cmp
ss
jb
neg
jecxz
dec
xlat
jge
mov
inc
insb
cmp
adc
mov
fimull
and
sahf
jnp
mov
adc
rcrl
test
sub
fs
les
push
add
pusha
mov
add
mov
mov
fs
std
cmc
ret
mov
arpl
adcb
and
lock
xor
sbb
cmp
mov
and
imul
push
dec
sbb
sub
add
mov
adcl
pusha
sbb
dec
in
mov
cmp
mov
cmp
push
shlb
in
add
cwtl
push
mov
xchg
fimuls
mov
sub
in
push
pop
or
lcall
orb
std
mov
insl
or
or
pop
in
icebp
aad
movsl
ljmp
mov
cwtl
mov
add
jp
sub
pop
cmp
mov
ret
sub
cmp
pop
pop
idivb
mov
jns
cmc
lret
mov
mov
stc
and
cmove
gs
arpl
mov
xor
data16
in
adc
enter
lods
jge
cmp
das
imul
or
iret
arpl
adc
popa
movsl
cmp
aaa
mov
mov
xlat
or
loopne
sub
fwait
cmp
cwtl
in
push
pusha
out
inc
daa
pop
mov
out
cmpsl
xor
mov
fwait
into
cmp
cmp
and
fucom
cld
ret
stc
sbb
lea
ret
dec
stc
pop
mov
mov
xor
mov
repnz
ja
shll
push
loope
dec
sub
je
mov
out
mov
sub
out
arpl
into
loop
jp
fldl
mov
sti
push
adc
sbb
nop
into
les
repnz
test
idivb
lea
dec
mov
movsl
sbb
idivl
add
jo
loope
pop
lock
stos
shlb
daa
stc
xchg
out
push
push
mov
faddl
push
dec
adcl
push
cmp
xor
jno
or
andl
dec
shl
ss
cmp
scas
add
outsl
mov
add
and
je,pt
cld
sarl
pop
je
inc
push
js
mov
into
or
mov
insb
mov
lock
jp
xchg
out
inc
jae
ss
daa
push
arpl
aam
add
jnp
mov
aad
adc
loopne
lret
xor
xchg
call
in
or
pop
mov
rolb
js
cmp
ror
sbb
dec
mov
pop
sub
out
scas
push
pop
jo
mull
inc
cltd
idivl
mov
add
mov
mov
dec
test
push
mov
dec
adc
adc
and
mov
ds
shrb
push
pusha
bound
pop
push
ja
cmp
and
adc
movsb
loopne
push
and
inc
popf
cmc
or
mov
gs
pop
push
dec
xor
in
push
negl
mov
xchg
cmpb
sub
mov
lods
mov
jne
aas
rcl
or
fdivp
imulb
lods
fdivs
sbb
cmp
out
pop
jae
and
mov
popa
out
mov
jg
sti
mov
or
stc
inc
and
outsl
sub
test
xchg
sub
fstl
add
mov
dec
inc
mov
jp
addr16
icebp
mov
mov
ficoml
mov
jmp
pop
xor
icebp
adc
aad
testb
adc
xor
xchg
popa
int
ja
sti
lods
out
add
fnsave
ljmp
jmp
push
and
jmp
xlat
add
mov
pop
pop
adc
jmp
sbb
stos
mov
mov
roll
ret
in
movb
inc
push
pop
cmp
dec
mov
jp
imul
testb
inc
and
xor
outsl
decb
aad
pop
lret
lea
outsb
pusha
bound
and
jp
ja
mov
xchg
sub
sbb
call
cmp
add
aam
inc
rorl
ficoms
cld
lcall
jle
mov
inc
ss
cs
dec
or
xchg
adc
fimull
aas
xchg
hlt
inc
jns
aad
xchg
pop
inc
cmp
pop
test
movb
out
mov
jns
add
imul
in
push
stos
fisttpll
out
inc
inc
dec
aam
adc
jp
std
xor
push
popl
cwtl
test
gs
adc
js
pushf
mov
cmp
inc
sbb
dec
out
lods
xchg
test
negl
jl
insl
add
xor
pop
mov
rclb
and
adc
call
in
push
inc
add
or
jmp
rcrb
je
sarb
push
in
sti
cmp
jge
fdivs
add
addr16
in
push
dec
aaa
mov
orb
lods
mov
cmpsl
shlb
dec
cli
cmpb
mov
sbb
lret
xchg
sahf
popa
fsts
push
outsl
push
bound
pushf
lahf
orb
test
pop
adc
mov
cmc
sbb
or
jae
mov
arpl
push
pop
push
cmpsb
pop
dec
sbb
pop
pop
js
and
repz
stc
int
adc
or
mov
pop
je
ja
test
xchg
faddp
dec
cld
mov
stc
hlt
xchg
loop
xlat
mov
jb
inc
adc
shll
add
mov
ljmp
push
in
sti
pop
pop
aas
stc
sub
pop
push
sbb
aaa
dec
pop
pop
insl
pop
out
add
jl
fmul
movsl
rcrb
ss
mov
lods
test
or
or
and
adc
pop
sbb
int
ret
ret
xchg
or
push
add
pusha
jne
in
cmp
jge
mov
cmp
inc
mov
mov
insl
pop
cmc
movsl
and
outsl
cmpsl
inc
push
adc
fnstenv
ret
or
rcrb
aas
and
pop
lcall
flds
loopne
aas
jns
jle
add
cwtl
inc
inc
shl
sbb
jg
repz
jmp
xchg
pop
sub
jp
inc
stos
bound
cmp
ja
jp
mov
sbb
ret
mov
jl
sbb
cli
dec
aas
xor
test
inc
andl
fs
pop
gs
pop
jne
mov
push
clc
shll
pop
mov
insl
sub
ljmp
mov
in
int3
pop
stos
jnp
dec
lods
push
outsl
sbb
les
add
mov
mov
fadds
cld
imul
xor
mov
or
out
pop
sub
xchg
pop
mov
adc
test
add
pop
xchg
ret
pushf
dec
add
adc
ja
hlt
sub
int
das
cld
outsl
push
sbb
call
scas
xchg
inc
jne
inc
mov
loop
mov
pop
inc
inc
call
adc
adc
or
jo
add
lahf
pop
inc
data16
or
rol
jl
adc
xchg
add
jbe
popa
in
sub
in
loope
xor
sbb
test
lds
mov
fsubrl
push
xor
aaa
pop
adc
test
and
sub
lods
lea
int3
add
leave
shrl
fldl
cmp
jg
lods
mov
inc
cmp
movsb
test
pushf
xor
mov
fdivl
add
iret
imul
ret
test
mov
push
sbb
test
cltd
inc
fadds
out
mov
test
pushf
dec
pop
lock
mov
fidivl
fcmovnbe
xchg
faddl
inc
xchg
ret
push
jb
bound
cwtl
sbb
or
in
rolb
jb
insl
imul
orb
mov
aad
inc
aas
xchg
pop
push
adc
into
pop
and
dec
or
xchg
cmpsl
mov
push
orl
aad
inc
push
adc
cld
and
jmp
mov
inc
cmp
test
mov
fistps
sub
fbld
inc
add
jp
dec
dec
and
jecxz
movb
lret
daa
ss
pop
shlb
dec
xchg
daa
sub
iret
sub
sbb
pop
fldl
xchg
jne
in
push
jmp
ret
rorb
add
std
mov
add
icebp
test
xorb
dec
insl
lock
push
call
mov
add
sub
mov
loop
inc
clc
mov
aam
shrl
pop
jb
rcl
sbbb
dec
lcall
out
mov
add
push
or
lods
or
sub
xor
shrb
mov
mov
shll
jno
test
pop
aas
pusha
dec
sbb
in
adc
mov
lock
pop
mov
add
jl
xor
sub
into
push
dec
fistpll
dec
mov
scas
add
pop
popa
jbe
jecxz
pop
leave
addb
add
dec
mov
xchg
sub
push
push
js
hlt
push
jle
cwtl
nop
mov
mov
mov
dec
insb
jns
out
das
js
add
cld
faddl
pop
cmp
xchg
mov
jge
jo
outsb
jbe
aam
rcll
lahf
mov
icebp
daa
ja
in
aad
pop
test
xor
jb
mov
ljmp
xchg
pop
js
pop
mov
jne
add
jp
add
les
inc
mov
popa
dec
mov
aam
negb
in
jnp
mov
or
push
addr16
fstps
mov
sti
sub
popa
xchg
push
bound
insb
adc
pop
js
inc
jg
mov
sub
ljmp
scas
cwtl
push
cmp
test
addl
enter
mov
aam
fwait
cmp
push
mov
jnp
dec
lahf
aad
in
jo
dec
inc
div
xlat
imul
mov
dec
nop
inc
sarb
jo
pop
shl
insl
cld
dec
pusha
push
in
jae
es
ljmp
mov
adc
push
pushf
xor
mov
aad
sarl
jp
sbb
push
lret
arpl
insb
ja
pushf
cs
xchg
xchg
dec
addb
lods
rcrl
adc
cs
orl
sbb
xchg
push
dec
adc
inc
push
sbb
pusha
outsb
xor
pushf
stos
rol
adc
xchg
xchg
dec
data16
clc
fidivrs
std
jp
pop
fcompl
shl
int3
lods
jno
cmpsl
xor
push
gs
test
loop
mov
outsl
or
dec
inc
pop
rep
fnstcw
or
sub
push
adc
mov
inc
or
call
adc
mov
jne
xchg
das
pop
jno
dec
rcrl
es
pop
hlt
inc
cmp
push
push
fistps
xchg
push
push
add
cmpsl
test
sbb
and
cmpsl
jnp
mov
cmp
pop
adc
xchg
gs
or
or
movsb
mov
mov
mov
cmp
jge
sbb
xor
loop
lds
adc
enter
cltd
pusha
test
push
sbb
pop
or
jo
mov
cmp
pop
dec
push
jb
mov
and
add
jbe
and
cmp
jno
add
or
or
ret
fisubl
xlat
jmp
cmp
jmp
adc
and
out
ja
cmc
addr16
aaa
and
stos
push
arpl
scas
dec
lods
fidivrs
mov
shrl
sbb
pop
pushf
jno
into
cmpsb
adc
add
xor
push
inc
mov
xor
jge
je
aam
ds
pop
or
and
mov
scas
les
jnp
sbb
mov
stc
in
sbb
es
stos
leave
sbb
imul
mov
imul
insl
push
jbe
adc
daa
xchg
xchg
or
xchg
stc
xchg
adc
lret
stos
mov
rclb
pop
or
fsubrl
rcr
leave
fs
pop
scas
mov
mov
cmp
cmp
test
ja
jns
sub
mov
xchg
mov
xchg
xchg
mov
repz
jge
add
and
fldt
std
or
in
mov
adc
adc
sbb
adc
cmpsb
add
push
or
xlat
mov
xchg
into
mov
dec
das
and
gs
icebp
push
add
mov
pusha
mov
jmp
aad
mov
aam
out
clts
jne
adc
push
or
pop
push
push
jp
aam
in
push
lds
add
dec
test
mov
int3
xchg
scas
jge
jecxz
adc
push
lds
pop
iret
insb
add
inc
dec
movsl
add
iret
insl
cmp
xchg
xor
movsl
sub
mov
stos
fstl
xchg
bound
push
sub
xor
adc
popa
fs
fcoml
mov
pop
xor
dec
jb
dec
sub
cli
xchg
jne
je
movsl
test
cmp
sub
ja
add
loopne
pop
negb
mov
inc
jl
adc
cmp
dec
shl
mov
or
stos
ret
mov
inc
dec
fstpt
add
test
int
inc
les
insb
inc
movsl
mov
test
aad
and
icebp
cs
in
dec
lcall
inc
sti
bound
jo
mov
out
enter
sbb
loopne
fnstenv
sbb
mov
pop
jecxz
xor
mov
cmp
mov
imul
int3
xchg
insb
mov
jb
cltd
cmp
or
in
sub
jg
dec
add
cmpxchg
insb
jl
or
or
xchg
outsb
and
clc
mov
inc
and
sub
leave
lahf
shr
arpl
push
xchg
xor
pop
fsubrl
xchg
out
ret
dec
jns
sbb
and
pop
or
add
sbb
sub
cmp
nop
adc
fldt
ret
and
in
xor
addl
xchg
push
adc
out
jmp
mov
outsl
ljmp
push
sbb
jbe
ret
cmpsb
insb
xchg
and
std
imul
rorb
adc
sbbl
xchg
lahf
arpl
sbb
negl
es
inc
test
fcompl
fwait
xor
nop
xchg
cmc
push
lret
inc
loop
cmc
into
mov
and
dec
popf
xor
mov
test
nop
push
dec
xor
xchg
pusha
nop
sub
cli
das
and
jge
adc
fucom
notl
sbb
sub
adc
cli
call
pop
jle
mov
sarb
notb
mov
sub
lcall
pusha
and
ds
ret
adc
sub
movsb
pop
xlat
inc
negl
pop
stos
fdivl
mov
dec
and
das
packsswb
mov
cmpsb
jbe
std
bound
sbb
inc
sahf
jp
xor
lock
push
lods
int
cmp
cli
sarb
adc
test
and
and
aaa
out
xchg
xchg
jmp
mov
xchg
ljmp
aaa
in
testb
pushf
mov
sbb
push
jnp
and
fcmovnu
incl
dec
sbb
ret
mov
xchg
xchg
jp
sub
dec
and
mov
push
pop
pop
adc
adc
lds
loope
inc
pop
sbb
push
xchg
ljmp
and
ja
and
sbb
cmp
push
adc
xchg
mov
sbb
add
sbb
test
in
jno
push
iret
pop
or
jmp
cmp
fiadds
adc
scas
pusha
xchg
mov
mov
pushf
lea
cmp
ret
aaa
pop
mov
xchg
out
pop
test
stc
add
push
jle
lock
push
ds
shl
scas
pop
js
dec
sbb
pop
adc
push
pop
mov
imul
inc
push
mov
andl
fisubrl
mov
adc
or
mov
push
ds
fldl
enter
enter
adc
pop
push
sahf
or
jae
pusha
in
movsb
and
dec
scas
xchg
fidivrs
roll
and
mov
push
ja
popf
sbb
les
and
das
leave
clc
dec
jns
out
fimull
idivb
sub
inc
rcrb
pop
mov
and
stos
dec
jecxz
es
mov
mov
rcll
xor
rcrb
dec
jno
sbb
cmpsb
add
sbb
pop
add
sbb
je
mov
iret
popa
movb
xchg
sub
mov
shrb
jno
fidivs
mov
sahf
outsl
sbbb
mov
and
scas
lcall
mov
dec
iret
mov
jbe
sti
xor
mov
rolb
jae
stc
dec
cmpl
cmp
mov
push
cmp
fdivrs
subl
cmp
add
inc
push
xchg
lret
sub
lea
shl
cmpsl
in
pop
pop
dec
enter
mov
dec
ss
adc
pop
in
cmpsl
imul
cmp
inc
adc
mov
push
sub
in
ficomps
lahf
cmpsb
int
shlb
jmp
cmp
sbb
test
xchg
mov
xchg
xor
decl
jbe
push
jo
mov
inc
es
enter
inc
push
int3
lods
icebp
jo
sbb
mov
repnz
imul
std
mov
push
dec
push
out
push
or
lret
dec
into
jl
pop
ret
dec
leave
dec
lahf
aaa
movsl
add
hlt
loope
ja
sahf
in
xchg
cs
flds
xchg
dec
cmp
adc
test
xchg
push
test
leave
divl
sbb
jmp
lahf
dec
mov
cmp
and
lods
sub
fmull
xchg
adc
mov
fidivrl
xchg
insl
xchg
outsl
ds
pop
pop
jmp
sub
inc
cs
pop
add
je
jns
cli
add
dec
pop
fildl
cli
cmp
jle
pusha
jmp
fidivrs
or
jl
loopne
pop
sbb
push
adcb
pop
mov
gs
sub
out
fcoml
test
mov
adc
add
ds
fisubs
pop
pop
lcall
push
jns
jmp
mov
cld
adc
stos
bound
adc
and
jle
sti
and
and
fsub
or
fcomi
lret
adc
xor
out
mul
in
sub
insb
pop
dec
push
jo
int3
push
push
xor
orb
mov
lret
pop
imulb
dec
aas
and
dec
mov
pop
icebp
add
ljmp
mov
addb
fwait
stos
pop
or
icebp
shll
lock
adc
add
dec
mov
push
fistps
fisubrl
jnp
sbb
orl
mov
aad
ret
popf
add
push
inc
into
sbb
push
jno
sbb
loope
das
decl
adcb
fsubrp
dec
pop
js
nop
sahf
adc
cli
nop
mov
test
mov
mov
mov
es
fsubs
xchg
cs
mov
mov
cmp
adc
jecxz
fdivrl
mov
mov
pop
and
and
xchg
xchg
push
leave
cmp
dec
xchg
sbb
es
adcl
or
pop
xchg
cli
jp
lret
daa
loope
sbb
add
dec
subl
add
jmp
xor
pop
pop
push
int
dec
add
fwait
stos
push
mov
sbb
std
and
sarb
xor
cmp
xchg
push
xchg
test
shlb
ss
fistl
sub
adc
mov
or
js
xchg
jl
mov
xchg
pop
int
rcrl
inc
test
inc
cmp
loope
xor
in
test
popl
mov
sti
xor
mov
mov
pop
sub
test
punpckldq
mov
adc
and
loopne
lahf
shll
jmp
ljmp
push
cmp
pushf
sbb
sbb
push
or
clc
mov
xchg
mov
xchg
and
and
ss
cmp
fdivs
mov
and
xchg
and
cmp
filds
mov
dec
jnp
mov
sub
mov
cmpb
pop
jg
hlt
rorb
lock
shl
cmp
rcrl
jbe
adc
pop
push
setns
pop
xor
push
sbb
pop
insl
cmpsb
mov
ret
xchg
lock
cmpsl
sbb
mov
push
flds
lock
cli
daa
loopne
fisubrl
add
popa
sar
inc
jnp
xchg
mov
jp
mov
lcall
in
cmp
test
pop
mov
sbb
xchg
gs
cld
out
ds
cmp
sub
loope
pop
aaa
xor
dec
jp
sbb
popl
and
xchg
push
jnp
int
pop
aad
loope
or
bound
jecxz
stos
testb
dec
xchg
ss
outsb
add
dec
mov
int
out
cmp
das
shlb
push
sub
xchg
cmp
sub
fldenv
jle
xchg
jnp
cs
sbb
pop
xchg
cs
js
cli
vpaddq
dec
arpl
dec
sbb
fists
lods
mov
aam
test
mov
rolb
call
mov
rorb
lahf
pop
aad
dec
lds
ljmp
inc
sub
sbb
push
fs
jmp
adc
pusha
xlat
jmp
inc
lret
ficoms
mov
leave
mov
dec
xor
sbb
test
pop
insb
mov
imul
pop
push
shl
clc
mov
mov
call
xchg
hlt
arpl
stos
sbb
stc
clc
jno
cs
lahf
popa
push
and
daa
inc
or
inc
ret
jp
arpl
mov
cmp
push
test
push
rclb
pop
push
push
test
loopne
mov
dec
pop
jecxz
mov
pop
mov
sub
aas
std
lcall
sti
jns
xor
xor
fmulp
inc
frstor
adc
int
xchg
jg
sti
rcrb
inc
mov
sahf
les
mov
mov
aas
es
jecxz
sub
negb
pop
int3
jmp
shlb
inc
push
and
or
dec
cli
lds
pop
pop
pop
mov
imull
inc
dec
nop
stos
sarb
mov
arpl
mov
gs
stc
mov
mov
jl
iret
adc
into
leave
jb
push
push
or
jb
xchg
jp
outsb
movsb
cmp
clc
jecxz
movsl
lret
sub
push
mov
cli
loopne
movsb
fadds
dec
in
ret
or
lock
xchg
rol
pop
lods
jecxz
and
rcll
ljmp
mov
mov
in
push
adc
bound
dec
rcll
pop
jns
stos
ljmp
jmp
push
pop
jl
int
inc
jg
fisttpl
enter
adc
xchg
mov
fldt
andb
sti
in
lret
int3
mov
mov
jge
xor
push
movsb
cld
mov
pop
add
mov
clc
ja
cmp
std
inc
adc
movsb
mov
mov
xor
repnz
int
jns
push
mov
test
mov
test
xor
jno
pop
or
jo
filds
xchg
subl
stc
aad
outsb
xor
rcrb
mov
mov
icebp
sub
mov
gs
lahf
jne
adc
int
es
cmp
aaa
fwait
jbe
shrb
sbb
dec
fimull
sub
sti
cmpsb
cmp
jns
jp
push
xchg
adc
push
jp
sahf
lods
dec
add
push
mov
pop
pusha
or
mov
in
iret
cmpl
ss
push
das
arpl
in
mov
out
xchg
mov
xchg
jecxz
imul
insb
or
pop
push
inc
movsl
push
outsb
pop
dec
cmp
xor
mov
mov
into
outsb
pusha
xor
mov
inc
inc
ljmp
xchg
loope
mov
movsl
or
push
testb
test
in
adcl
inc
xchg
out
dec
inc
add
mov
repnz
or
push
xchg
add
aad
inc
xor
frstor
cvtps2pd
insb
lcall
sub
shrl
call
cli
xchg
jl
jp
cmpsl
or
daa
lret
loopne
or
ss
cmp
pusha
jle
fdivrl
fnstcw
into
pop
and
xor
sub
mov
outsl
shlb
add
aad
mov
je
insb
ljmp
adc
lcall
lahf
sub
mov
int3
add
mov
pop
imul
jmp
cmp
iret
dec
mov
cmp
dec
inc
leave
leave
pusha
xor
cmpsl
and
cmp
bound
jo
push
cmp
xor
stc
dec
lcall
dec
inc
aas
sbb
test
or
lock
or
dec
mov
cltd
xchg
sahf
or
mov
fwait
outsb
add
jbe
lret
aas
fldl
xchg
add
inc
jb
push
fadd
mov
pop
stos
sub
out
mov
push
shrl
out
shll
xor
lea
mov
cmp
push
mov
out
cs
mov
cmp
test
fnstenv
dec
mov
insb
test
adc
js
mov
jecxz
lret
fs
addr16
adc
jo
ret
sti
add
push
imulb
mov
aad
jg
sbb
add
icebp
cld
js
iret
push
mov
and
sub
scas
subb
adc
add
xchg
je
fld
or
add
in
cli
int
das
sub
cmpsl
lea
jnp
hlt
mov
lret
test
clc
jmp
movsl
arpl
test
xchg
sub
les
jecxz
mov
inc
lcall
jbe
push
sub
and
shll
call
xor
addr16
mov
ss
ret
shrb
jbe
leave
out
sahf
dec
repz
repz
les
mov
jne
inc
sbbb
mov
jle
fs
imul
sub
repz
pop
sbb
lods
bound
cmp
jae
mov
and
dec
add
mov
lods
push
sbb
jns
insb
iret
jmp
ficomps
pushf
jne
ficompl
xchg
pop
pop
lret
int3
push
loopne
outsb
lahf
sbb
aas
std
add
stos
gs
int
cmp
mov
sahf
scas
cmp
scas
cmp
sub
jne
push
nop
fiadds
and
lock
enter
mov
pop
push
mov
fxam
push
movsb
outsl
movsb
divb
shr
bound
add
add
ret
mulb
mov
leave
xchg
cmp
lock
pushw
mov
out
mov
or
sbb
repz
fisubl
js
xchg
fwait
hlt
mov
xchg
or
lock
xchg
test
icebp
pop
lds
and
dec
into
adc
dec
jns
mov
js
mov
cmp
jno
outsl
jl
sahf
add
lcall
pop
inc
testb
and
mov
jb
mov
dec
cwtl
popl
mov
cmc
icebp
and
pusha
push
cmp
out
add
inc
and
pusha
ds
pop
dec
inc
outsl
jnp
inc
shlb
divb
xor
out
imul
mov
clc
pop
popa
mov
and
dec
in
or
les
dec
negl
pop
bnd
arpl
mov
mov
pusha
dec
and
jno
lahf
xchg
and
dec
or
mov
jecxz
lret
sti
shr
jbe
rcl
mov
fstpt
ret
movsb
popf
fistpl
ss
in
inc
lcall
push
arpl
jno
cmpsl
xchg
js
sti
das
mov
cmp
iret
push
push
dec
cmpl
jns
sbb
scas
dec
daa
push
mov
daa
cmp
mov
sub
xlat
mov
cwtl
add
aaa
adc
pop
or
mov
arpl
inc
or
int
in
push
ret
and
movsb
lods
push
cmp
lock
xchg
gs
and
mov
lock
movsl
loope
xchg
push
fs
cmp
add
ds
clc
fdivl
inc
fsubrs
imul
pop
or
loopne
fstpl
xlat
ret
int
jecxz
icebp
or
jp
mov
push
xchg
testl
imul
or
push
xchg
inc
out
jae
shll
sbb
movsb
loopne
mov
out
pop
test
test
push
outsl
jecxz
leave
xor
dec
and
pop
push
in
sbb
fsubl
lret
in
xchg
nop
rcll
add
stos
aad
mov
add
outsb
fmuls
dec
dec
jge
stos
xor
lock
sahf
dec
adc
stos
xorl
cmpsb
in
adc
outsl
cmp
mov
jo
push
test
jae
loop
aam
in
in
add
jge
or
cmp
xchg
push
pop
xchg
pop
decl
loope
mov
movsb
stc
push
sub
bound
inc
xchg
push
fs
imul
and
add
or
xchg
pusha
popf
push
jecxz
pusha
mov
push
add
hlt
subb
imulb
mov
test
out
test
outsb
mov
ret
push
mov
jno
mov
sahf
lret
sbb
test
leave
test
pop
push
notl
in
pop
adc
mov
sub
and
daa
shlb
aad
pop
adc
mov
xchg
jle
cltd
mov
cmpsl
ds
jnp
shrl
gs
fstps
mov
in
push
add
dec
aas
fcmovnb
loopne
int
dec
jle
ds
push
and
jecxz
mov
mov
leave
lahf
scas
test
movl
in
adc
out
pop
xor
les
inc
jle
daa
and
xchg
adc
sub
dec
and
data16
mov
fisubl
gs
sbb
mov
xchg
mov
mov
inc
xchg
repnz
push
cmp
subl
mov
add
sbb
pop
sub
or
call
xchg
addb
sbb
push
pushl
out
jns
sbb
dec
adc
or
mov
xchg
and
jae
insl
out
mov
push
adc
lods
jno
addr16
lret
push
das
cmp
mov
mov
jbe
cs
adc
xor
lods
dec
out
pop
and
stc
loop
addr16
movsl
ds
dec
jmp
fcoms
and
add
hlt
es
mov
jae
dec
xor
cmp
jmp
push
insb
pop
or
or
cmp
inc
mov
sub
dec
scas
cld
out
imul
ljmp
test
mov
rorb
inc
mov
daa
pop
adc
sub
scas
push
add
jno
insb
push
jne
int3
fcoms
cld
mov
fs
dec
faddl
lock
dec
xor
cmpsb
fisttps
pusha
notl
out
fildll
pop
addr16
rolb
jmp
repz
test
jns
mov
push
mov
jne
sub
xor
imul
pop
jne
jbe
jo
pop
imul
xchg
jg
popf
push
stc
sub
adc
jg
xchg
add
mov
jne
inc
adc
in
cld
lock
push
add
mov
cmpsb
push
add
scas
adc
cld
jb
pushf
shr
sahf
leave
push
or
inc
inc
inc
and
pusha
sahf
add
xchg
xchg
push
jl
jg
out
cmp
inc
cmpsl
and
sub
or
add
rcll
push
aas
loope
mov
hlt
fmuls
cmc
or
clc
sbb
lds
mov
fildl
idiv
jae,pt
dec
ja
adc
popf
push
mov
cmpsb
fcoml
xchg
or
cmp
loope
outsl
hlt
lret
fs
sbb
inc
cmp
mov
iret
mov
or
out
pop
dec
push
fnstenv
xor
xor
mov
inc
push
stos
test
inc
out
adc
jns
incl
adc
adc
jns
jne
pop
fs
out
inc
sub
outsb
push
enter
dec
or
loope
sub
in
fcomi
ss
lods
push
dec
cmp
aas
ljmp
sub
cmp
mov
jns
xchg
cmp
jp
and
in
test
xor
das
nop
lcall
dec
fs
repz
jno,pn
in
testl
cmp
subb
dec
adc
cmp
cmpsl
clc
sbb
out
jno
and
pop
out
loop
jbe
and
scas
js
ret
aaa
decl
xor
loopne
cs
xchg
scas
jnp
mov
addr16
jp
stc
jb
pop
std
xchg
insb
push
stos
imul
movd
ss
mov
fstpt
stos
lock
stc
jmp
in
lods
push
popa
adc
cmp
mov
aam
add
pop
inc
push
stos
loop
test
mov
stos
movsb
adc
test
xorb
shr
fnstenv
mov
and
lret
push
cmp
mov
pusha
mov
in
push
shl
sbb
dec
test
mov
mov
mov
jne
mov
mov
loopne
mov
lock
inc
imul
cmp
gs
clc
outsb
loop
push
xchg
cmp
cli
in
insb
inc
test
jns
push
jns
ret
pmovmskb
jecxz
or
xchg
and
rcl
xor
xor
fldt
je
mov
movsl
sbb
mov
in
lret
and
pop
int
cmp
xchg
lcall
pop
pop
int
lds
pop
mov
mov
int
push
lcall
cwtl
rep
adc
pop
rcl
lods
jns
aam
sub
adc
test
adcb
pop
jmp
mov
mov
or
mov
enter
add
out
mov
add
neg
dec
data16
out
mov
sahf
mov
xor
mov
mov
pop
test
orb
push
jmp
stos
jmp
aad
insb
enter
sbb
inc
dec
movsb
mov
xor
jp
lods
lcall
pop
lods
mov
mov
mov
lods
pop
in
inc
mull
mov
imul
lret
nop
sbb
dec
pusha
dec
fldcw
pop
ljmp
push
in
or
imul
andb
leave
cmc
adc
jnp
pop
scas
fcoml
popa
imul
mov
insb
fbld
push
dec
jg
cwtl
and
inc
imul
lds
cld
fildl
andl
divl
scas
negl
aaa
xchg
rcrl
or
cld
lock
dec
sbb
add
test
cmpsb
mov
stc
pavgb
sub
outsl
mov
insl
mov
fmull
int3
shlb
lret
test
jne
loope
addr16
popa
pop
js
mov
xchg
cmpsb
xchg
sahf
dec
arpl
mov
arpl
scas
scas
dec
xchg
cmp
scas
stos
mov
jae
sbb
jmp
in
ret
add
mov
jns,pn
sbb
cld
cmpl
lret
or
mov
rcll
push
call
lods
shll
jo
mov
jecxz
xor
mov
repz
push
and
repnz
mov
dec
inc
dec
lahf
test
dec
cwtl
dec
loopne
dec
mov
cli
lock
jo
xchg
pop
dec
cmpsb
popf
push
sbb
dec
daa
stc
daa
jl
mov
jo
jg
mulb
push
mov
adc
fdivrs
dec
push
jb
cmp
aas
scas
adc
cmp
inc
jo
das
lret
xor
fimull
dec
pop
push
rcll
xchg
mov
adc
insl
fucomip
push
inc
hlt
lcall
outsb
fcomps
insl
jmp
add
ljmp
shl
or
dec
and
adc
aas
pop
test
dec
movsb
enter
mov
fiaddl
ja
or
inc
add
icebp
pop
inc
adc
add
adc
pop
sti
rclb
mov
dec
push
inc
mov
stc
xor
sub
xor
mov
ret
push
out
stos
movsl
test
mov
mov
js
dec
out
mov
ja
test
scas
test
hlt
sbb
subb
roll
xor
jmp
daa
xchg
in
jns
push
adc
popa
xor
divl
scas
jecxz
cmpsl
mov
pop
and
xlat
mov
into
lahf
jbe
roll
push
test
cld
cmp
pop
adc
std
fimuls
mov
push
and
rclb
pop
jae
fisttpll
int3
xor
sub
mov
data16
and
add
mov
adc
fldcw
pop
rcrl
daa
pusha
data16
not
test
pop
inc
fwait
pop
and
cmp
leave
in
pop
sahf
gs
in
push
cltd
inc
push
movsb
mov
xchg
jae
test
je
sbb
sbb
sar
iret
push
push
int
xchg
repnz
lcall
push
mov
aam
jns
clc
xchg
sbb
int3
out
rcl
out
frstor
mov
dec
push
into
fildl
mov
jge
sahf
pop
aad
jbe
nop
adcl
xor
mov
fs
mov
dec
inc
and
or
mov
sbb
cs
push
add
movsb
shrb
or
sbb
jbe
iret
cs
push
push
fstps
jmp
xorl
add
adc
imul
in
loop
cld
add
pop
jae
cs
mov
pushf
push
outsl
les
xchg
xor
fcomps
pusha
and
jge
mov
cwtl
xor
mov
inc
popf
loope
inc
shlb
aas
cmpsl
int
rcll
push
xchg
sbb
xor
int3
cmp
insb
mov
repz
pop
cmp
push
dec
push
lds
xchg
or
into
repz
pop
fs
xlat
and
aam
jb
jle
into
les
aaa
mov
mov
aas
xor
pop
and
subb
nop
add
sub
add
jl
lret
popf
adc
fsubrl
and
aas
pop
fldenv
mov
mov
and
lret
jp
cmp
push
ljmp
loop
imul
ja
cltd
dec
mov
movsl
in
fucom
testb
lcall
mov
lea
cld
dec
imul
rcll
push
aaa
lock
xor
pop
cmp
aaa
movsl
bound
sbb
jo
sbb
fidivrl
and
or
cmp
jo
insl
inc
test
push
xor
aas
insl
xchg
adc
cbtw
insb
push
jne
shlb
test
push
cmpsb
lock
dec
outsb
adc
imul
call
das
jmp
pop
pop
mov
cmp
cmpsb
pop
fst
loopne
push
adc
dec
dec
sub
pop
and
fildl
pop
pusha
int
cmp
pusha
xor
sahf
adc
push
xor
jbe
out
imul
sarl
push
je
div
lds
gs
out
cmc
insl
in
cmp
shrb
push
mov
sub
imul
out
inc
or
sbb
inc
push
mov
arpl
test
cwtl
popf
bnd
rorb
orl
adc
in
push
fstpl
test
movl
mov
ret
das
and
mov
push
xchg
push
xchg
stos
sbb
gs
shl
and
movsb
or
cld
mov
cli
outsb
xor
push
aad
dec
cmpsb
xchg
mov
mov
mov
cmpsb
pushf
inc
adc
dec
loop
addl
sub
shlb
hlt
push
sub
lds
mov
lods
adc
cmp
aad
pop
dec
iret
out
adc
push
sbb
out
adc
mov
rcrl
jmp
xchg
cmp
cmp
outsl
int
mov
stc
and
pop
cmp
mov
ret
cmpsb
mov
outsb
xor
das
dec
inc
mov
iret
sbb
andl
pop
sbb
out
inc
adc
gs
addr16
sub
and
dec
xor
ss
mov
jmp
sbb
out
inc
add
cmp
dec
sub
mov
aas
or
nop
repz
inc
xchg
test
sub
xchg
or
insb
jmp
add
xchg
dec
dec
xor
xchg
aas
lret
daa
cmp
inc
mov
xor
aas
out
cmp
pop
ss
movb
stc
orb
xor
cmpb
mov
jbe
push
sbb
nop
leave
mov
pop
popa
cmpsb
enter
xor
push
jnp
dec
lret
lea
clc
xor
or
pop
add
xor
cmp
arpl
dec
pop
fcoml
mov
jo
dec
clc
test
push
imul
or
mov
les
sub
pop
arpl
nopl
push
movsl
xlat
lock
insb
in
jge
jl
jge
push
jb
outsb
test
or
je
lock
lahf
mov
mov
ficoml
in
fs
sahf
rorb
add
pop
pop
stos
mov
aaa
ja
imul
fdivl
push
ret
xchg
insb
pop
push
sbb
mov
dec
enter
ret
ror
pushf
push
cs
stos
jmp
orb
xchg
dec
sbb
fldln2
mov
jl
sub
insl
and
mov
push
arpl
shll
sti
outsb
push
xchg
xor
outsb
push
int
lods
pusha
inc
add
std
cmpsb
mov
loop
pop
and
or
out
jns
sbb
outsb
push
adc
dec
inc
leave
aad
add
stc
sbb
idiv
cmpsb
mov
mov
inc
xchg
outsl
loop
ja
lea
sub
clc
or
cmpsl
stos
jg
xchg
or
inc
sbb
ss
lds
mov
xchg
movsb
mov
lahf
fcmove
sbb
bound
lret
stc
mov
jmp
dec
outsb
jmp
add
and
in
mov
adcb
and
mov
push
test
scas
cmc
cs
out
add
push
rol
cltd
sub
mov
ja
mov
icebp
push
pop
loopne
xchg
rorl
outsl
or
mov
popa
ss
scas
mov
fildll
sub
push
and
xchg
arpl
idivl
cwtl
in
daa
dec
and
xor
sti
int3
fidivl
mov
ss
daa
and
test
or
test
lods
insb
mov
mov
inc
dec
cmp
mov
xor
scas
inc
scas
pushf
dec
sub
ret
sbb
push
inc
adc
mov
mov
xor
mov
rcrb
outsb
test
bound
test
or
mov
add
mov
dec
lea
pop
sub
mov
loopne
fcomi
add
mov
popf
not
adc
subb
pusha
cmc
xchg
push
loope
fs
pop
les
scas
nop
movntq
in
or
fisubrs
inc
and
sub
cwtl
loop
mov
mov
mov
fisubrs
add
in
dec
or
sub
inc
jbe
stc
aam
inc
and
cmpsb
mov
fstl
cltd
aaa
mov
negb
dec
divw
dec
ret
cwtl
stos
data16
cli
cmp
pop
sub
lcall
jecxz
dec
stc
dec
cmpb
adc
enter
out
sbb
inc
lock
mov
jmp
imul
test
sub
loop
mov
pop
dec
addb
int3
lods
cltd
pusha
xchg
outsb
jno
out
outsb
mov
pop
rolb
out
fsubrl
popf
inc
int
sbb
shrl
jbe
shr
in
lahf
and
imul
jae,pn
adc
loop
mov
iret
mov
mov
jb
xor
sti
les
clc
sbb
cmp
jl
add
stc
ficoms
mov
dec
mov
xor
and
or
imul
xor
dec
sub
rolb
shrl
add
je
jne
fsubrs
lret
jno
mov
sbbl
jp
inc
xor
pop
out
push
jecxz
or
jge
movsb
cmpsl
push
xchg
out
jmp
fsubr
inc
push
sub
adc
pop
push
test
sub
and
adc
mov
pop
lahf
add
push
mov
test
jne
mov
sub
xchg
shll
es
add
xor
and
in
and
loop
out
out
movsl
or
push
mov
lods
subb
cmp
mov
repnz
cmpsb
lods
stos
nop
das
leave
movl
inc
subb
mov
add
xor
xchg
xchg
outsb
jae
es
imul
jns
testb
sbb
loopne
arpl
test
in
insb
inc
inc
rcll
mov
xchg
movsb
push
add
push
test
addl
push
jne
es
faddl
jge
xchg
push
and
xchg
pusha
xor
int
repz
cmp
xchg
or
ss
lods
das
xor
in
insl
mov
xor
push
std
add
ds
call
stos
push
mov
push
imul
push
aaa
insl
das
insl
xchg
or
or
movsl
sub
lods
add
je
scas
or
les
addb
lds
loopne
mov
shrb
divl
xor
ret
imul
mov
cmpsl
jl
addr16
rcr
int
lds
xchg
inc
jmp
push
mov
jae
or
mov
mov
inc
fstl
jae
adc
aas
dec
mov
sub
cs
mov
mov
lret
pop
movb
add
sbb
je
out
shrl
aas
loope
ret
stos
adc
hlt
aaa
add
ss
arpl
cmc
sbb
sub
idivb
and
insb
popa
ss
fucom
aad
xchg
ret
push
xor
aas
lods
pop
sbb
daa
and
xor
inc
sbb
clc
les
in
aad
push
mov
or
andl
fidivrs
inc
bound
or
rep
loopne
adc
fsubp
ja
inc
mov
xor
xor
in
mov
faddl
in
ret
js
out
pop
jo
fsubrl
roll
pop
flds
test
sub
popf
push
pushf
or
call
pusha
outsb
pop
add
xchg
lea
jne
and
pop
test
xorb
xchg
icebp
jbe
int
mov
xor
pop
scas
shl
aam
adc
fcmovne
jbe
add
int
sahf
cmp
aaa
inc
and
push
push
mov
cmp
daa
test
sbb
add
mov
jecxz
pop
mulb
fldenv
imul
jbe
jb
mov
sbb
cltd
or
push
dec
pusha
rclb
aas
stos
lret
xor
icebp
push
pop
repz
push
adc
mov
out
loopne
pop
fs
xchg
movsb
inc
pop
and
movsb
add
test
pop
cmp
gs
and
mov
mov
inc
stos
rorb
imul
out
mov
orl
push
imulb
leave
mov
mov
xor
and
sarb
scas
lret
sub
push
cmp
push
aad
mov
add
enter
bswap
jecxz
and
sbb
jmp
jb
jnp
test
jg
push
lcall
ss
push
testl
xchg
pop
sub
adc
call
xchg
xchg
sub
fldcw
les
mov
push
mov
pusha
xorb
jp
popf
fwait
mov
xchg
or
int3
test
ss
pop
pop
xchg
jle
push
mov
adc
jns
sbb
lret
mov
adc
aam
sarl
mov
mov
enter
cmp
mull
add
sbb
test
movsl
hlt
adc
and
sbb
add
sub
ds
call
xchg
hlt
and
lds
and
fstpl
addb
jg
mov
xor
int
adc
xchg
adc
cli
clc
pop
jo
shr
cli
lock
stos
sti
mov
or
movsb
loop
mov
cmpsb
cmp
xor
mov
frstor
pop
jbe
test
cmp
push
sub
push
cs
cmc
mov
jecxz
dec
outsb
xchg
lcall
test
sbb
cmpsl
add
dec
and
inc
mov
push
inc
mov
mov
addb
fnstenv
dec
jge
fistpll
push
inc
xchg
sahf
shl
aas
lcall
mov
cmpl
mov
and
dec
movsl
hlt
scas
push
mov
xchg
xchg
fsubrs
lcall
mov
and
filds
lds
mov
iret
ret
movsb
pop
dec
push
repnz
pop
fwait
bound
sub
fisttpll
ss
loope
rorb
movsl
xlat
jbe
mov
inc
scas
fisttpl
pop
adc
cmp
addb
pop
not
inc
lret
cmp
pop
sub
ret
mov
test
mov
dec
daa
shrl
push
aam
sbb
lods
mov
push
in
stos
shlb
sub
push
sbb
push
addr16
inc
dec
lods
movsb
push
hlt
pop
jno
lcall
ds
adc
cmp
mov
popa
sub
mov
push
bound
call
pop
dec
fistl
cld
add
push
lock
filds
sbb
and
in
in
jg
out
nop
lea
sar
jne
repz
fs
ds
xchg
add
push
repz
mov
pusha
push
hlt
mov
mov
xor
ret
mov
push
ja
mov
pop
mov
jae
imul
jp
push
cmpsb
rcrl
mov
ret
fs
shlb
sub
push
cltd
mov
mov
mov
jb
imul
shrl
shlb
aad
add
pop
xchg
mov
push
or
punpckhbw
push
sbb
mov
test
add
xchg
cmpsb
fstp
cmc
or
into
pusha
repnz
push
in
loopne
orb
dec
mov
dec
jge
testb
sub
push
push
iret
imul
mov
mov
sbb
fadds
adc
cs
icebp
add
mov
pop
pop
dec
ss
std
or
mov
movsb
ret
xor
xchg
xchg
movsb
insb
jbe
add
out
adc
aas
sti
adc
addr16
in
adc
jecxz
jae
cmpsl
sar
imul
jae
je
xor
in
ret
mov
mov
hlt
xor
jle
jno
or
or
mov
xchg
cmp
lods
lahf
data16
pop
test
or
outsl
dec
es
repz
dec
cmp
arpl
and
adc
pop
xor
push
data16
push
es
fstl
sbb
pop
stc
mov
adc
dec
push
fistl
pop
xchg
ds
sub
jno
lods
xchg
ja
int3
sub
mov
push
test
or
sub
out
out
pop
dec
icebp
sub
ds
out
mov
lods
stos
clc
pop
xchg
xchg
or
cmp
mov
cmp
js
pop
cmc
stos
out
sub
and
or
pmuludq
mov
sbb
xchg
pop
mov
xlat
sbb
mov
sahf
icebp
xchg
setge
lea
cltd
xor
fmul
cltd
sti
mov
mov
fs
out
iret
pushw
insl
mov
ret
xchg
fiadds
jge
pop
arpl
int3
ret
sub
sbbl
enter
cmp
mov
adc
sub
aaa
inc
mov
push
ja
mov
mov
lret
aad
test
adcb
push
mov
insb
adc
divb
pop
mov
fwait
or
cmp
jo
idivb
lea
cltd
xchg
cmp
jmp
mov
cld
pop
movsl
cmp
cli
xor
jnp
insl
push
fwait
insb
cli
mov
cli
negl
shl
jbe
pusha
insl
sbb
pop
mov
mov
cmp
jne
add
xor
cmp
stc
out
or
in
fistps
cmp
aas
int
or
mov
dec
arpl
mov
popa
lcall
loopne
pop
cmp
andl
mov
loop
pop
cmp
pop
cmp
ds
stos
mov
dec
cmpsl
mov
mov
inc
sub
adc
mov
jbe
fidivrl
mov
xchg
ljmp
sbb
rcll
jmp
fucom
in
mov
xor
pop
test
and
das
jg
adc
push
mov
or
hlt
or
loope
data16
fiadds
inc
sbb
imulb
sub
dec
push
jmp
cmpsb
add
stos
andb
int3
lret
add
lock
mov
cmp
cmpxchg
mov
aad
nop
stc
into
mov
and
ret
dec
sub
lods
jne
mov
gs
cmp
dec
add
iret
out
loopne
push
mov
xor
hlt
lret
movsb
loop
fdivp
mov
sub
movsl
adc
add
ds
insb
aas
out
or
bound
push
pop
in
or
add
xor
or
movsb
pop
pop
push
movsb
insb
xor
stos
xchg
mov
mov
pushf
add
mov
and
fwait
lcall
je
popf
jae
push
pop
adc
cmp
mov
dec
add
nop
stos
mov
sti
mov
xlat
inc
mov
dec
sbb
push
fs
scas
std
inc
push
or
or
call
inc
imul
sub
mov
inc
lods
lret
rolb
lahf
xchg
lret
jno
push
lods
shlb
jno
lret
imul
and
mov
cs
sub
popa
loop
sbb
clc
insb
out
lock
or
mov
sbb
orl
xchg
cmp
jae
add
cmp
dec
wrmsr
dec
jae
push
cmpsb
mov
iret
push
and
outsl
inc
repnz
les
fmull
mov
aaa
and
arpl
mov
and
or
ja
ja
xor
lock
lock
stos
or
xor
divb
in
jnp
cmpb
das
loop
sahf
pop
or
iret
ficoml
lods
inc
sub
int
fwait
xchg
sbb
lock
mov
inc
mov
jmp
push
fidivs
cltd
lock
loop
into
push
sbb
addr16
imul
pop
stc
fdivrl
dec
pop
out
mov
sbb
push
sbb
cmp
imul
aad
out
add
ja
or
pop
push
ret
add
loop
outsl
sbb
push
aad
xor
and
scas
push
jnp
pushf
loopne
mov
pop
dec
push
push
jae
adc
ds
jmp
mov
mov
pop
fwait
dec
inc
and
pop
sub
cmp
dec
mov
in
dec
popa
push
mov
push
decl
les
inc
insb
add
sbb
push
popf
pop
pop
pop
sbb
cmp
xchg
jmp
push
pop
fists
imul
lods
xchg
add
dec
ljmp
and
add
jmp
dec
adc
arpl
cmp
insb
das
push
sti
fwait
out
leave
inc
and
imul
shl
imul
test
or
test
jae
cld
movsb
ret
xchg
scas
jg
out
lret
cmp
cmpsb
popf
jae
out
je
adc
and
daa
iret
bound
aad
cmpsl
int
out
lret
in
sub
ret
cmp
jbe
arpl
jns
jmp
inc
inc
arpl
hlt
das
jecxz
inc
adc
outsb
bound
xor
shrb
adc
sub
xchg
mov
push
xchg
pop
das
pop
pop
adc
imul
out
adc
cmp
enter
cmp
movsl
mov
outsb
scas
add
mov
push
jae
pushf
aaa
aam
xchg
sub
sti
lods
sub
gs
adc
out
dec
cmpsb
cmp
pop
loopne
cmp
xor
and
add
sti
js
cmp
loop
imul
iret
scas
push
sub
adc
aad
outsb
scas
push
xor
fisubrs
inc
js
inc
mov
imul
cli
stc
stos
xor
xchg
mov
je
adc
iret
lret
dec
mov
repz
sub
sbb
and
xor
jg
pusha
add
pop
aas
mov
jecxz
fs
insb
pop
cli
pop
mov
jnp
sbb
adc
fs
xchg
cmp
loope
scas
mov
lcall
xor
out
cmp
push
into
jecxz
cmpsb
sbb
cwtl
cmp
mov
inc
test
orl
sbb
in
lds
cld
inc
jae
mov
cmp
mov
xchg
xor
aam
and
push
push
ss
jg
xchg
sub
ds
mov
xchg
out
or
gs
repnz
icebp
adc
cld
lret
cmp
inc
int
jp
imul
cmpsb
mov
dec
mov
lods
movsb
insb
push
mov
aas
inc
fnstsw
add
movsb
push
arpl
test
lahf
mov
or
test
jl
fbld
add
pop
lret
xchg
push
std
mov
or
inc
das
aad
in
out
push
ss
loop
jae
adc
jns
in
adc
imul
lea
shrb
push
mov
and
push
loope
lea
out
lret
add
std
insl
outsb
add
pop
addr16
test
mov
xchg
clc
and
add
lcall
pop
fwait
xor
push
add
int3
jmp
int
popf
mov
xchg
test
out
stc
jbe
popf
mov
aas
scas
rorb
push
jnp
inc
inc
popa
xchg
dec
jne
and
or
outsb
shrl
pusha
mov
arpl
and
push
pop
ljmp
in
loopne
stc
iret
mov
cmp
ret
cwtl
inc
ljmp
ror
xor
shlb
cmp
mov
sbb
sbb
dec
imul
lret
jb
dec
nop
add
mov
movsl
and
dec
mov
int3
les
shrb
mov
and
int
fcmove
fisttpll
cmpb
mov
outsl
aam
mov
inc
or
pop
or
sbb
out
in
inc
scas
movsb
or
scas
and
push
mov
pop
xchg
mov
add
push
xlat
sarl
inc
test
xor
mov
xchg
add
fdivs
pop
pop
and
pop
cmpsb
test
mov
das
mov
roll
or
aam
cld
imul
flds
push
cmc
or
push
int3
sets
sti
mov
bound
lds
fmul
and
inc
mov
scas
mov
fmull
addr16
push
out
jmp
je
scas
fisubrs
push
mov
xchg
mov
jns
jno
mov
in
push
ret
or
push
outsb
cmc
in
jl
fldcw
or
pop
popa
jbe
jno
add
movsb
jns
xchg
mov
aas
dec
and
add
imul
rorl
icebp
inc
jmp
arpl
repnz
es
int3
mov
cld
sub
ret
xchg
sub
jb
shrb
fsubrs
xorl
mov
nop
jae
shll
pushf
in
and
dec
xchg
lock
lret
inc
insl
hlt
popa
pop
or
jbe
sbb
mov
or
fdivs
addl
sub
cmpsb
jmp
sbb
ds
arpl
push
inc
pushf
dec
jns
fimuls
jns
outsb
push
mov
jo
xor
xchg
cmp
sti
xor
aas
xor
inc
aas
dec
push
movsl
dec
xor
aas
int3
test
sub
mov
out
int
js
std
mov
arpl
jnp
dec
loopne
ret
sub
pop
incl
xchg
lahf
push
repnz
fistl
and
inc
inc
add
cmp
aas
fcmove
cwtl
out
or
bound
roll
inc
and
mov
ffreep
pusha
mov
cs
out
loope
pop
addr16
and
fistpl
mov
pop
add
roll
mov
dec
jecxz
test
in
sub
sbbl
dec
mov
aam
fistl
xor
pop
pop
aad
mov
and
jno
std
push
and
and
xor
mov
sub
lahf
loopne
and
adc
sbb
sub
sbb
stos
mov
push
ljmp
out
lahf
mov
xor
adcl
sub
push
push
push
int
pusha
ds
cmpsb
push
leave
fidivrs
mov
outsl
push
jp
xchg
sub
mov
inc
out
sahf
inc
ficompl
in
sbb
add
mov
mov
and
mov
cmp
and
loopne
call
scas
jno
leave
ret
jp
xor
pop
fs
pop
and
pop
pop
xchg
in
movsl
shrb
test
jbe
jnp
lret
fiaddl
jl
jl
push
xor
xlat
cld
fs
xchg
jmp
jecxz
sbb
sbbl
imul
mov
and
sbb
imul
js
pop
push
push
lods
or
sbb
adc
cmc
dec
in
icebp
leave
into
mov
sbb
or
rorl
xlat
insl
shrl
fwait
lods
pusha
jmp
test
test
int
lret
sbb
test
fcmovnu
mov
mov
add
mov
cld
inc
mov
inc
fdivp
roll
shll
pusha
outsl
mov
adc
dec
cs
jge
mov
xchg
sahf
push
pushf
out
push
mov
div
jns
jle
push
pop
pop
popa
sub
mov
mov
add
mov
lods
out
mov
testb
movsl
jne
sarb
enter
enter
mov
int3
or
out
sbb
imul
stc
out
or
jge
lods
movsb
aam
hlt
into
mov
fcmovbe
pushf
mov
hlt
ret
push
jns
inc
sbb
jbe
sbb
xchg
cmc
rcl
outsl
ss
rclb
lahf
es
mov
pop
jno
std
in
mov
stos
dec
pop
popf
adc
das
shll
imul
lahf
push
ja
movsb
ss
jecxz
xchg
mov
aad
notl
inc
inc
leave
mov
xchg
dec
xchg
push
cld
mov
mov
mov
stc
mov
dec
int3
mov
popf
jb
cmpsl
pop
test
into
xchg
xor
sub
mov
pop
mov
xor
in
inc
add
arpl
push
repz
fmuls
out
adc
orl
notb
or
adc
int
cmp
mov
mov
faddl
arpl
xor
lret
inc
pop
rorl
pop
scas
mov
rcl
decl
inc
jmp
dec
and
pusha
xchg
ficompl
lock
pop
push
push
cmpsl
mov
xlat
lcall
mov
or
and
push
out
and
xchg
add
xchg
daa
dec
dec
loopne
add
in
lds
mov
fists
shll
shr
jl
test
or
sbb
imul
loop
lahf
pop
mov
pop
addb
js
cmp
dec
pop
inc
cmp
sbb
daa
mov
push
mov
add
cmp
jne
lock
hlt
xor
inc
mov
mov
cmpsb
mov
sbb
sub
daa
mov
fbld
adc
pop
inc
stos
in
hlt
cmp
mov
inc
mov
jnp
sbb
add
cmc
out
mov
inc
push
mov
mov
xlat
push
inc
and
push
pop
shr
stc
frstor
or
test
ds
adc
ja
xor
sub
outsl
inc
xlat
mov
mov
in
out
dec
scas
stos
loope
cmp
xor
fisubl
daa
mov
jno
fmulp
and
in
out
pop
xorb
jg
xorb
sub
push
mov
push
outsl
mov
repnz
stos
pop
mov
mov
pop
out
xchg
dec
rorb
dec
mov
stos
sahf
jno
rclb
jae
flds
es
lods
movsl
and
daa
push
int
mov
adc
cmp
push
fsubp
mov
xchg
nop
add
or
fisttpll
scas
and
pop
inc
mov
adc
enter
jae
movsl
xchg
inc
cli
stos
cmp
mov
adc
faddp
fimuls
and
pop
gs
fwait
add
repnz
pop
add
popf
mov
mov
inc
out
fldcw
mov
movsb
outsb
loop
add
fdivl
jb
mov
test
jne
jbe
pop
add
push
sbb
mov
ds
fisttpll
ret
mov
into
mov
in
cltd
in
mov
cs
lea
insl
pop
dec
jle
xchg
mov
mov
fcoms
add
jb
out
push
adc
test
xorl
or
gs
sahf
into
lods
inc
enter
push
mov
push
adc
aam
imul
xchg
push
stc
int
xchg
cmc
adc
sub
add
jmp
aas
push
test
jne
lret
xor
adc
mov
pop
test
and
je
das
stc
xor
scas
jns
insl
xor
xchg
sub
iret
xchg
cmpsb
add
xchg
mov
mov
iret
rclb
ret
mov
addr16
and
outsl
push
and
lea
xchg
jne
jle
fdivrs
xor
pop
dec
lods
and
cmpsl
and
or
mov
xor
pop
gs
adc
loopne
sub
dec
adc
fistps
shr
inc
sub
dec
test
cmpl
push
movsl
add
and
add
ret
shll
dec
dec
test
add
insl
aam
jg
jge
adc
pushf
jecxz
and
in
xor
mov
push
mov
int3
pop
dec
mov
testl
js
dec
or
adc
enter
mov
insb
and
dec
push
sbb
sub
out
rclb
cmp
fildll
xchg
and
push
mov
fndisi(8087
dec
scas
andl
push
cmpsb
out
sbb
addb
rcl
jns
mov
xchg
jecxz
dec
loopne
mov
js
in
add
lcall
push
sub
inc
xor
push
sysenter
mov
cmp
icebp
cwtl
lds
xor
cmpsb
fldt
out
or
dec
xorl
sbb
cli
mov
mov
movsb
pop
jne
imul
push
sub
and
push
clc
sub
jno
movsb
out
lret
icebp
pop
fnstenv
push
or
aam
enter
cmp
or
mov
pop
push
pop
ljmp
sti
shll
jno
or
in
out
popf
jne
lret
scas
mov
xlat
bound
sti
push
mov
loopne
dec
pusha
mov
cmp
xchg
and
sbb
jg
jo
shrb
nop
lea
mov
or
xor
in
add
xchg
stos
orb
mov
fwait
xchg
mov
movsl
shll
xchg
fwait
mov
orl
imul
pop
xorb
int3
movsl
sahf
scas
xorl
jecxz
dec
stos
fldl
cmp
push
int3
mov
jmp
enter
rcl
dec
cmpsb
jecxz
idivl
outsl
xchg
and
cmp
stos
mov
test
push
fidivl
cmp
das
xchg
cmp
xchg
mov
call
pushf
sbb
pop
inc
fcompl
aad
add
jne
daa
pop
dec
outsl
jmp
mov
dec
popf
cmp
daa
dec
inc
xchg
lcall
dec
int3
sbb
imul
lea
mov
add
lods
cmp
xchg
mov
mov
jae
mov
loop
sahf
popl
pop
aas
in
or
dec
add
mov
icebp
xor
insb
fsubs
jl
dec
jl
cmc
adc
loop
mov
lret
aam
sub
repz
mov
xor
mov
mov
andl
sub
imul
ds
into
sub
notb
imul
bt
inc
fdiv
dec
loopne
inc
or
add
int3
loopne
mov
es
sub
ret
and
jne
rclb
nop
pop
cmc
mov
dec
xchg
popf
rcrl
jne
and
pushl
bound
jno
mov
push
xor
push
shll
cli
nop
aaa
out
outsb
cltd
mov
test
aaa
fdivp
enter
cmp
push
inc
dec
cmpsl
xchg
fistps
cmp
inc
in
icebp
fildl
mov
jle
gs
gs
insb
dec
pop
fcomps
sbb
dec
xchg
jmp
int
loopne
fidivs
inc
dec
jmp
dec
or
in
or
icebp
jmp
add
jnp
jmp
fists
mov
scas
js
fsubr
and
jp
jbe
mov
mov
inc
cmp
dec
filds
pop
lcall
mov
pop
or
and
mov
stc
inc
ret
insb
cmp
fadd
or
aas
push
nop
das
mov
sbb
sub
or
repz
dec
aaa
cmp
mov
jg
repz
sahf
xchg
dec
jl
sbb
test
jns
xor
les
not
pop
push
jae
dec
sbb
out
fisttpl
mov
fiaddl
xchg
mov
sbb
pop
insl
push
imul
iret
jb
sub
aam
xor
in
shlb
jnp
or
dec
sub
repnz
cmpsl
cmpsl
inc
xchg
pop
cld
inc
sbb
and
lret
data16
nop
aad
or
jae
std
addl
sub
inc
rcll
cwtl
gs
les
or
int3
or
cmp
out
dec
je
jg
inc
mov
repz
and
jge
pop
les
les
push
inc
repz
insb
loop
mov
pop
pop
inc
cmp
dec
push
daa
mov
in
fcmove
je
aaa
jnp
sub
movsl
pusha
rolb
pop
ret
and
jns
lock
loopne
inc
xchg
add
adc
icebp
pushf
out
push
cmp
cld
xchg
mov
jp
cwtl
add
in
flds
call
lods
out
xor
je
les
enter
fsubl
pop
inc
add
xor
add
cli
or
jne
dec
jno
iret
push
sti
nop
xchg
sbb
imul
adc
sub
adc
or
stc
stos
and
sub
or
dec
add
into
test
dec
fdivs
fidivrl
bound
sub
hlt
movsl
jne
inc
pusha
mov
inc
sub
push
call
and
jg
sub
mov
scas
loopne
cmpb
mov
add
and
imul
mov
js
bound
in
or
outsb
dec
jle
push
ret
imul
push
into
shrl
lods
or
stc
adc
and
in
push
mov
push
push
pop
push
repz
pop
jecxz
inc
cmpb
or
mov
add
ret
add
adc
xor
out
xor
jnp
xor
xor
jmp
cmp
cmp
clc
ljmp
pop
push
adc
push
bound
lds
jno
mov
xor
push
sbb
bnd
punpcklwd
sub
sarl
call
inc
insb
cmpsl
int3
adc
xchg
push
mov
fldl2e
stos
add
push
inc
nop
inc
xchg
call
filds
xlat
and
xchg
jae
roll
filds
leave
sti
int
sysexit
scas
mov
fists
inc
test
inc
push
mov
jp
mov
jmp
and
push
adc
push
or
mov
orb
and
add
adc
dec
cs
mov
push
test
mov
outsb
pop
sbb
mov
cwtl
fdivr
stos
pop
sub
add
add
fsub
sahf
jne
xorb
shr
inc
and
mov
jb
outsb
mov
adc
add
xchg
mov
icebp
int
cmp
icebp
mov
int3
sub
xor
xchg
dec
jp
sbb
jb
int3
cmp
hlt
insl
push
dec
incl
popf
js
sbb
popf
xor
aam
lods
shrl
dec
xchg
xor
sub
stos
adc
aaa
dec
or
aad
rcrl
cmc
inc
movsl
pop
and
sbbb
fs
out
dec
adc
xor
bound
push
es
jp
hlt
xchg
pop
test
cld
pusha
inc
dec
pop
sbb
sub
dec
lret
cmp
jp
xchg
aaa
roll
lea
cmp
add
pusha
dec
mov
push
sti
out
jp
outsl
ret
stos
popa
adc
fistps
aad
sbb
and
cmp
or
push
int3
pop
pop
aaa
mov
mov
pop
dec
sbb
inc
cld
fimuls
cmp
xchg
inc
jecxz
out
mov
fcmove
stos
jmp
movsl
add
sbb
pop
adc
icebp
sbb
xchg
sub
inc
sbb
adc
roll
jbe
clc
sbb
xlat
into
ret
cmp
push
xchg
xlat
loopne
add
test
mov
clc
dec
test
dec
push
enter
push
sub
fsts
and
dec
add
ds
stos
dec
xor
fmuls
pop
shr
sub
adc
outsb
ja
adc
int3
fxam
adc
shr
push
dec
adc
cld
or
pop
cwtl
xor
inc
mov
mov
mov
ljmp
inc
nop
imul
in
cmp
jne
sbbl
pop
clc
jg
push
and
sbb
push
xor
and
inc
xor
hlt
sahf
jo
jb
adc
ss
jmp
lret
mov
out
fs
or
jb
inc
adcl
push
test
out
push
push
or
cmpsl
aaa
lock
and
jne
cmp
sti
pop
jae
in
ds
inc
jno
mov
cld
sbb
cmp
das
pop
popf
sarb
jp
dec
pushf
xlat
div
stos
and
stos
sbb
shll
jno
xor
gs
lods
inc
bound
mov
and
mov
out
or
mov
idivb
mov
mov
clc
xchg
pushf
popl
subb
bound
mov
scas
arpl
jno
mov
ja
pop
jnp
arpl
jmp
xchg
pop
imul
jb
shrl
rclb
jmp
out
and
adc
into
jp
and
in
int
push
xchg
inc
jg
je
mov
or
jle
repz
pusha
movsl
fildll
xchg
aas
in
sbb
clc
xchg
arpl
ljmp
push
fcmovne
pop
push
stos
add
loope
xchg
mov
out
pop
mov
sub
xor
rol
and
je
or
pop
ljmp
mov
push
xchg
lods
xor
sub
jge
sbb
adc
pop
xlat
sbb
iret
jmp
into
popa
xorl
push
dec
loop
pop
fnstsw
mov
arpl
mov
jo
sub
sub
das
add
and
loop
shrl
pop
pop
and
push
adc
sub
gs
xchg
mov
loop
dec
adc
adc
ret
aad
fwait
or
pop
mov
pop
test
ret
add
inc
lea
cmp
mov
jg
or
shll
insb
rol
cmp
mov
push
decb
call
fwait
mov
push
push
mov
daa
mov
add
fidivrs
sub
mov
cmp
je
imul
sarb
enter
mov
std
aaa
mov
push
adc
jmp
testb
movsb
add
dec
sub
pop
mov
xor
xchg
sub
mov
and
outsl
fs
mov
cli
loop
mov
and
fcmovb
fildll
push
sub
cltd
cltd
imul
ja
push
shlb
cld
and
ret
sbb
pop
hlt
add
cmp
pop
xlat
adc
and
es
add
xor
cmp
negb
lods
mov
or
cmpb
iret
mov
stc
out
enter
push
jle
lcall
std
xor
push
sbb
leave
pushf
cs
lea
sbb
test
jbe
xor
mov
push
jg
cwtl
or
mov
adc
add
loope
pop
imul
imul
js
imul
lods
xor
mov
mov
push
filds
lret
xchg
out
adc
call
in
adc
insb
in
mov
sti
xchg
xor
test
add
hlt
adc
rorl
adc
add
jmp
dec
ja
cmp
add
mov
add
sub
or
lods
jecxz
testb
dec
adc
ds
lods
xchg
inc
call
mov
adc
push
cmp
mov
push
xor
sub
cmpb
inc
mov
fs
lds
mov
pop
mov
lret
sbb
repnz
sub
fildll
xchg
cmp
jmp
ja
movsl
sub
daa
pop
push
out
add
imul
clc
scas
xor
pop
fmuls
add
push
fnsave
leave
jbe
orl
inc
scas
xchg
fyl2x
xchg
mov
int3
adc
jmp
int
adc
inc
adc
das
mov
dec
data16
js
inc
out
cmpsl
mov
and
aad
jp
sub
inc
and
mov
test
ficomps
stos
or
aam
aad
stos
mov
movsl
arpl
cmp
mov
mov
js
xchg
icebp
rorb
repnz
xchg
mov
and
dec
jl
dec
cmp
mov
jo
int
scas
inc
pop
xlat
pusha
pop
jns
out
pop
repz
sbb
pop
ret
sub
push
sub
dec
pop
push
sub
dec
pop
mov
stos
popf
adc
pop
inc
mov
jmp
movsl
pop
pop
testl
push
and
mov
rclb
mov
out
mov
mov
xor
push
or
sub
test
adc
push
loopne
jne
or
or
adc
dec
pop
cmp
mov
sti
push
dec
or
clc
les
cmpsb
mov
data16
jmp
or
push
mov
adc
js
add
adc
cmp
adc
ja
ljmp
cmp
and
sub
cmp
aad
in
xchg
aas
mov
or
imul
dec
into
mov
xchg
pop
pusha
mov
sti
bound
or
push
insb
stos
stos
and
or
or
and
inc
out
jo
jmp
mov
cmp
fstl
push
adc
pop
inc
mov
pop
stc
pop
lahf
pop
pusha
mov
stc
in
stos
lock
push
and
xchg
and
sbb
movzbl
cwtl
test
xlat
fsubrl
inc
jo
scas
xchg
push
cmp
mov
lahf
sub
jle
push
cld
movsl
int
cmpsl
jle
jo
push
insl
scas
xchg
mov
daa
dec
mov
repnz
dec
dec
sub
lea
leave
jecxz
dec
add
lea
shl
sbb
pop
int
xor
enter
pushf
outsl
cmpsb
test
push
or
mov
aam
push
rclb
hlt
stos
jne
shl
int3
jmp
addl
out
add
jmp
xchg
push
andb
insb
jl
xchg
push
pop
dec
dec
iret
mov
jo
inc
test
rclb
adc
inc
test
sbb
inc
xlat
fwait
and
mov
dec
and
aaa
dec
div
in
sub
adc
add
rcrb
cmp
adc
pop
std
xor
popf
fcoms
loopne
push
adc
xor
leave
mov
popa
jae
and
lret
dec
shrl
mov
shll
inc
pop
inc
lahf
jae
add
enter
int
inc
data16
cmp
mov
xor
push
mov
daa
mov
in
addr16
push
ljmp
dec
sbb
test
push
in
and
movsb
fwait
ret
dec
lods
push
test
add
in
lahf
jmp
pop
xchg
das
repz
lock
fbld
mov
cmp
mov
lret
jecxz
aaa
sub
pop
or
in
sub
sub
inc
sbb
and
imul
and
stos
cmp
mov
and
fwait
inc
nop
les
popa
daa
and
sub
adc
ss
dec
xchg
shl
pop
jp
add
hlt
mov
or
lds
adc
dec
aam
fdivs
dec
aam
push
cmp
ret
push
inc
mov
jge
jge
roll
mov
ret
fwait
cltd
adc
sahf
sbb
aad
in
shlb
in
flds
gs
and
incl
xchg
les
lods
ja
or
mov
or
fs
loopne
inc
xor
fwait
ret
sub
cmp
push
ret
ljmp
sbb
mov
movsl
jne
aad
sahf
cld
dec
adc
rcrb
sub
mov
clc
sub
pop
adc
mov
mov
sbb
ja
test
push
pop
cs
aam
out
bound
jbe
push
lret
shrb
add
mov
test
sbb
iret
dec
nop
or
daa
loop
mov
inc
xchg
xor
xor
add
inc
lret
pop
pop
xor
int3
je
and
push
mov
pop
push
adc
dec
icebp
mov
gs
insl
outsb
xor
fnstsw
shll
mov
mov
lods
arpl
jb
jb
push
andl
lea
nop
fwait
cmp
jb
mov
mov
cmp
cs
dec
fldenv
mov
int3
rorb
jbe
loopne
lock
pop
into
dec
jg
shrl
xlat
mov
lahf
mov
sahf
mov
outsb
scas
es
xchg
sbb
movsl
pop
pop
cs
mov
dec
pop
stos
into
divb
shrl
std
mov
sub
pop
outsb
pop
xchg
push
icebp
int
cmp
inc
ret
xchg
loopne
add
pop
inc
dec
push
add
add
sub
je
test
pop
pushf
orl
cld
mov
roll
jns
fstl
mov
pop
imul
add
fidivrs
enter
jmp
fbstp
je
or
adc
adc
sub
test
fisubrl
mov
mov
movsb
xor
int
cmp
or
imul
xor
scas
xchg
adc
ljmp
sti
xchg
mov
jnp
mov
cmc
jno
fldenv
in
fidivs
icebp
lret
mov
or
and
flds
movsb
mov
pop
leave
pop
and
aas
scas
insb
out
bound
sub
xchg
je
xchg
divl
loop
aad
adc
dec
addl
repz
daa
mov
xor
sbb
adc
loope
leave
or
int3
stos
jnp
je
xchg
sbb
movsl
push
mov
mov
inc
inc
outsb
push
add
loope
test
clc
aaa
dec
mov
rep
popf
xchg
mov
push
loope
lcall
movsb
mov
and
jmp
pop
mov
jnp
inc
adc
mov
jns
sbb
push
cld
outsl
cld
lret
jmp
popa
jecxz
idivl
or
clc
push
add
cs
fldcw
fwait
mov
inc
or
inc
int
rorl
or
jne
xor
push
enter
in
push
fsub
xchg
push
inc
idivl
mov
les
loopne
mov
adc
push
and
outsl
test
pop
mov
xchg
xchg
fstpt
push
int
mov
xchg
jne
insl
and
sarl
jnp
cmp
or
mov
data16
push
mov
pusha
fstpt
mov
dec
or
xor
cltd
lahf
mov
sbb
fiadds
xlat
icebp
sub
cwtl
popf
sbb
sbb
out
aad
pushf
mov
rolb
mov
adc
cmc
inc
inc
aad
push
push
test
out
cmp
pop
fadd
testl
push
mov
mov
mov
popf
jno
mov
iret
mov
mov
xor
jp
push
pop
pop
js
sti
add
arpl
sar
xor
leave
popa
inc
shr
xor
inc
cmp
inc
or
mov
adc
cwtl
xor
in
jp
icebp
jns
das
loope
and
inc
mov
repnz
sub
ljmp
sarb
sub
xor
test
leave
pop
adc
mov
push
xor
adc
ret
fsub
das
inc
out
daa
xor
icebp
scas
and
xor
sar
jno
mov
xchg
jnp
ret
fs
pop
and
jnp
es
sti
scas
hlt
pusha
pop
push
test
arpl
mov
add
jge
mov
sbbb
fsts
jp
lret
xchg
push
xor
sub
dec
dec
hlt
xchg
shrl
mov
jne
pop
jg
adc
pop
outsb
push
icebp
mov
cmpb
inc
pop
mov
xchg
mov
aad
loope
pop
cwtd
cmpsl
adc
and
jle
mov
rorb
dec
cwtl
jne
push
or
outsl
or
pop
repz
lea
sub
mov
iret
sarl
xor
mov
pop
scas
call
adc
sub
lds
sti
imul
movsl
adc
div
fcompl
cwtl
ljmp
lret
repz
cmp
jo
inc
mov
cmpsb
xchg
push
push
test
xchg
cmp
mov
sti
repz
mov
sti
stc
push
xchg
cmp
insl
xchg
orb
mov
aad
int3
repnz
mov
add
mov
add
out
dec
xor
testb
and
inc
cmpb
push
xchg
mov
inc
dec
push
jle
stc
cs
cmc
push
mov
iret
test
fwait
dec
mov
jmp
into
push
out
call
mov
mov
movsb
shr
dec
ja
adc
int3
enter
cwtl
sbb
mov
dec
cwtl
in
mov
hlt
mov
or
or
xor
pop
dec
pusha
sub
sub
cwtl
lock
addr16
ds
xlat
inc
cwtl
push
out
mov
jge
decl
ds
imul
mov
xor
leave
ja
sbb
mov
cmp
push
push
adc
fidivs
inc
pop
repz
ss
jge
inc
lods
aas
pop
ljmp
jo
div
pop
mov
notl
push
cmpl
icebp
outsl
dec
es
popf
mov
xchg
cli
push
lret
ds
push
inc
or
je
jmp
jmp
jmp
pop
enter
testb
xchg
dec
fwait
xchg
add
shlb
cmp
xchg
ds
loopne
sub
mov
das
sbb
push
or
cmpsl
push
inc
arpl
movsb
jp
call
jns
lcall
adc
scas
jbe
mov
ds
arpl
sbb
iret
call
mov
sahf
xchg
orl
pop
loopne
push
adc
dec
and
psubb
dec
movsl
jae
out
jl
mov
rcrb
or
mov
stos
xchg
add
movsb
jle
xor
imul
mov
and
or
jle
cmpsb
push
push
clc
clc
ret
jb
pop
cmp
fists
mov
aaa
xlat
inc
rcl
mov
mov
outsl
arpl
std
add
mov
aas
lret
add
lea
push
sbb
mov
js
out
mov
sti
aaa
lar
mov
insb
inc
dec
mov
dec
push
cltd
adc
mov
inc
sub
mov
add
mov
mov
fadds
pop
cmp
repz
or
fdivl
aam
inc
sahf
jne
adc
xchg
sub
pushf
jmp
inc
cltd
pop
repz
add
mov
push
cld
call
fidivl
jns
in
arpl
push
and
in
or
xor
int3
leave
or
add
stc
mov
addr16
in
hlt
insb
xchg
inc
in
cmp
out
cmp
lcall
notb
mov
hlt
cmp
mov
sub
adc
daa
dec
and
sub
popf
pop
xchg
outsb
in
cmp
ss
dec
jle
call
fdiv
in
int
daa
inc
loopne
aas
imul
in
and
je
lcall
sbb
subl
push
rol
sbb
in
test
fs
xchg
pop
outsl
dec
jp
jne
xchg
xlat
and
aas
movsl
push
pop
push
xor
push
jno
pushf
xchg
sub
out
pop
rolb
xor
in
insb
icebp
out
lds
int
out
fadds
cmp
push
and
arpl
mov
ss
gs
add
test
pop
sbb
cmpsl
icebp
dec
sub
iret
jns
pop
or
pop
lcall
cmp
and
push
mov
mov
xchg
insb
mov
in
add
inc
adc
pop
add
orl
lahf
mov
push
sbbb
dec
repnz
dec
arpl
dec
js
aaa
xchg
fldenv
sbb
sub
xchg
frstor
test
jnp
test
mov
and
adc
stc
pop
pop
xor
adc
inc
cmp
popa
aaa
mov
dec
dec
jbe
dec
cmp
popa
inc
out
bound
pop
shrb
push
repnz
cltd
jp
lret
insb
shlb
jp
repz
dec
mov
shlb
mov
cmc
push
das
cs
jp
stos
mov
leave
inc
sub
jno
aaa
jl
jmp
les
add
test
sub
mov
mov
int
dec
push
dec
aas
jecxz
xor
sbb
lahf
into
sbb
cmp
hlt
int
xorb
add
out
addr16
out
hlt
jo
jno
scas
mov
cmp
sub
xchg
leave
mov
cmpsb
rcr
jo
mov
sub
dec
movsl
add
dec
outsb
mov
push
imul
mov
pop
nop
sub
xchg
push
xor
xchg
stos
shll
lock
aad
stos
inc
xor
mov
cmpsl
sub
jae
pop
inc
negb
xchg
lods
ja
out
jns
add
or
push
inc
xor
push
inc
sub
jns
cli
inc
push
and
retw
pop
mull
fmulp
std
lahf
mov
popa
pop
out
negl
test
add
xor
pushf
dec
sbb
adc
lcall
or
xor
xor
push
sbb
adc
cmp
sahf
dec
or
adc
jge
shll
push
data16
mov
xchg
xchg
xor
test
aaa
mov
shr
pop
int
sub
lret
dec
fadds
movsl
xchg
xchg
adc
dec
sub
clc
out
ret
adc
aad
fldcw
pop
enter
outsl
scas
cmp
fucomip
imul
adc
xchg
jns
xchg
sub
add
mov
mov
pop
jle
mov
jo
pushf
insl
dec
dec
loop
mov
inc
stc
in
inc
fsubrs
xchg
add
xchg
mov
jl
adc
insl
out
popa
data16
testb
and
dec
cs
sbb
sub
mov
add
mov
mov
push
nop
stos
lcall
mov
pop
push
cmp
icebp
stos
jge
pop
add
jl
lret
xor
jmp
subb
mov
lods
out
push
mov
xchg
or
sbb
pop
aas
inc
fdivr
repnz
xor
out
ds
inc
push
lahf
call
iret
mov
cltd
dec
sbb
push
and
pusha
test
stos
movsb
adc
or
xorl
jl
aas
adc
shlb
mov
fadds
sbb
xchg
inc
jg
loopne
jb
adc
clc
shlb
repnz
stos
adc
lret
sub
inc
ret
pop
nop
fisttpl
push
iret
testl
add
jmp
es
dec
aam
es
out
inc
lcall
aad
pop
mov
repnz
xor
pop
adc
jnp
adcb
cs
mul
jbe
dec
fmull
mov
test
or
mov
xorl
mov
cmp
outsl
push
in
mov
jb
inc
cmp
push
xor
leave
add
pop
push
dec
inc
xchg
lahf
aad
mov
test
cmp
stos
sbb
outsl
jbe
jg
or
xor
push
scas
sub
xlat
dec
or
shrl
aas
lcall
icebp
stos
sbb
jge
fcoml
outsl
lock
xor
jge
cmp
mov
lea
jno
jecxz
lret
daa
push
nop
xchg
or
outsb
sub
lock
and
cmp
push
or
cmp
lret
push
cmp
xchg
roll
lds
ljmp
mov
cmp
int
sbb
cmp
lds
or
outsb
add
repnz
test
loop
inc
sti
adc
fisttpl
aad
pop
test
lods
sbbb
pushl
in
fcomps
out
inc
jnp
ljmp
push
lock
or
xchg
fs
outsb
jo
negb
popf
mov
adc
stos
and
fbld
xchg
movsb
jp
outsl
loopne
or
shll
sub
push
std
ffreep
movsb
popa
jle
fcompl
insl
sub
pop
jbe
mov
inc
mov
subb
js
lret
push
addr16
sti
in
adc
leave
int
mov
mov
sahf
inc
pop
jbe
push
sub
pop
cmp
loopne
sbb
inc
sahf
inc
mov
cmpsl
testl
cltd
fcmovnb
enter
dec
into
fs
xor
test
jnp
jbe
out
mov
cltd
lret
pop
dec
jo
clc
cmp
shll
lret
cltd
jecxz
sub
xchg
pop
mov
mov
addl
daa
xor
jns
insb
mov
lahf
ljmp
sbb
fcmovne
test
test
jp
lods
add
cs
ss
cs
lret
lock
cmpsb
sub
std
add
cmc
xor
imul
stc
sbb
sub
in
pop
sti
pop
fsubrs
dec
push
decl
cwtl
xor
ficoms
mov
jb
inc
xchg
xchg
arpl
mov
stos
jl
pushf
push
int3
jno
sbb
sti
inc
dec
mov
sub
lods
and
xchg
out
stos
add
pop
jl
adc
cmp
imul
adc
and
xor
jge
pop
sbb
mov
lea
addr16
pop
jge
mov
mov
cld
in
insl
mov
cld
xchg
inc
icebp
inc
ret
xchg
adc
fwait
test
mov
jmp
mov
xor
jns
add
jne
fwait
fwait
inc
aam
xchg
jl
lret
aaa
cmpsb
cli
bound
gs
add
push
xor
cmp
clc
adc
pusha
cltd
loopne
sbb
mov
sbb
in
jno
push
roll
xor
add
mov
or
xchg
shlb
push
fmul
in
dec
pop
in
jle
cs
or
shll
push
idivl
out
out
add
sub
iret
jecxz
mov
lret
mov
cli
mov
stos
and
adc
push
es
aam
jl
fwait
sub
inc
sub
cmpsl
cmp
nop
mov
inc
xchg
push
mov
into
pop
inc
pop
sub
xchg
mov
jnp
mov
xchg
into
mov
loope
sbb
popa
mov
push
sub
add
lahf
out
push
jnp
mov
sub
jns
ret
add
lea
daa
das
jae
xor
out
cltd
stc
pop
and
cmp
js
gs
mov
xlat
rcll
ret
pushf
lods
pop
ds
push
jne
bound
cmp
jo
mov
jns
or
loop
lahf
xlat
sub
pushf
insl
ja
xor
dec
daa
cs
add
imul
push
add
rclb
nop
stos
int
or
sub
push
ficoml
push
enter
out
rcll
mov
dec
cmp
dec
cmp
inc
arpl
cmpsb
pop
jbe
sbb
xlat
cs
rorb
cmp
mov
jnp
outsl
inc
sbb
jno
mov
cmpsl
mov
mov
int
lock
xchg
pop
mov
lods
cs
and
push
pop
negb
lods
out
sub
repz
lahf
mov
inc
aad
or
lods
sti
cmp
mov
and
mov
jmp
in
test
adc
fdivs
hlt
stos
or
jle
and
add
sbb
ss
cmp
or
or
dec
cmp
and
add
push
dec
mov
jo
or
fninit
std
mov
adc
imul
into
out
clc
xorl
stos
mov
pop
push
cmp
mov
mov
sub
xor
fsubs
xor
fldz
xlat
aas
cmp
icebp
or
imul
cmc
scas
add
shrl
dec
sgdtl
out
inc
les
push
push
cmpsl
sub
daa
shlb
pushf
xchg
mov
cltd
sti
xchg
flds
xor
jmp
fwait
and
pop
dec
testb
or
push
pop
pop
mov
push
pop
xchg
push
lret
imul
mov
pushf
repnz
pop
dec
add
stos
add
jp
shll
mov
lret
mov
mov
inc
sub
xchg
mov
sub
mov
imul
mov
and
pusha
cmp
popf
push
data16
orl
cmc
jp
sahf
fldcw
out
inc
mov
xchg
or
pop
psubsw
gs
sbbb
outsl
in
les
xor
aaa
and
push
dec
movsl
mov
out
fsubrs
mov
mov
scas
into
cmpsb
fstpl
stos
pop
aad
in
cwtl
jae
jae
pop
test
cmp
add
sbb
xchg
imull
jg
push
lret
and
lds
xchg
xchg
lret
inc
mov
jecxz
fistpll
loopne
andl
dec
pusha
lds
xor
lahf
clc
dec
push
les
add
outsl
daa
mov
ja
mov
and
add
xor
add
cmc
rcrl
arpl
popa
fiaddl
inc
sub
add
push
sub
out
push
pop
daa
popw
adc
jnp
sbb
xor
aad
push
dec
jno
add
add
addr16
sarb
push
xor
ljmp
mov
jae
inc
popf
cmp
mov
insb
insb
push
inc
test
mov
neg
xor
cwtl
pushf
add
xchg
mov
push
repnz
incl
cmp
cs
out
jbe
daa
and
imul
dec
dec
or
loop
mov
mov
mov
out
fsubr
sbb
push
inc
mov
mov
inc
idivb
aas
push
dec
dec
dec
xchg
pop
adc
in
mov
roll
hlt
out
scas
jmp
mov
rcll
scas
pop
call
aas
pop
mov
adc
and
sbb
testb
imul
add
pop
insb
mull
cmp
or
cmp
bnd
hlt
mov
add
pop
lahf
in
xchg
dec
pop
sahf
or
rclb
imul
pop
lret
sbb
jnp
push
pop
xorl
shrb
fists
lcall
sub
shrl
inc
sub
scas
jns
sbb
sar
dec
inc
fildl
or
xchg
jp
fisttpl
popa
fs
mov
insl
stc
pop
call
adc
nop
pop
pusha
cltd
test
inc
pusha
and
or
jne
out
dec
fwait
or
and
bound
scas
sti
ficoms
nop
test
push
ret
in
jge
subl
and
mov
sbb
mov
stos
and
lahf
pop
or
jno
cmp
inc
ret
stos
aad
xor
add
movsb
mull
cltd
adc
mov
or
mov
out
cmp
scas
stos
add
jo
sbb
fs
outsb
aas
addr16
xchg
test
lods
inc
jmp
inc
shl
jae
sub
jmp
in
aad
jns
in
in
and
adc
sub
or
dec
cmp
fs
mov
lods
mov
cld
aad
and
cld
push
je
or
sbb
aas
jecxz
outsb
xor
mov
and
xor
daa
add
cld
loop
stos
pop
jae
mov
or
jg
insb
mulb
or
or
aas
in
int3
loop
daa
add
fistpll
ljmp
bound
and
xorb
cs
sbb
cmp
mov
test
loope
xchg
loopne
in
or
int3
insl
popa
lock
lahf
sbb
inc
xor
xchg
xchg
jmp
mov
add
mov
les
sub
inc
cs
bound
pop
xchg
xor
lret
mov
cmp
stos
jo
hlt
jno
dec
movsl
mov
subl
int3
and
cmp
dec
lds
insl
xchg
stos
aad
adc
movsl
dec
popa
inc
leave
rcrl
fmulp
mov
and
cmp
sub
sti
insl
xchg
push
data16
stc
push
in
clc
mov
in
sub
out
ret
and
mov
mov
int
inc
repnz
repnz
lock
adc
cwtl
xchg
andb
and
mov
sti
jmp
dec
das
push
inc
mov
jbe
fnstcw
imul
sbb
inc
cmp
shll
test
out
mov
stos
ss
mov
sbb
inc
xchg
dec
jo
daa
ret
das
inc
mov
addr16
push
popa
add
test
jmp
fwait
jae
inc
cli
movsb
pop
pop
outsb
cmp
lret
insl
sbb
sub
imul
aam
sub
cmp
mov
and
cmp
orb
idivb
jp
inc
lret
xchg
cltd
out
fmuls
lret
fwait
adc
outsb
in
and
andb
sub
xor
xchg
push
jmp
mov
pop
and
out
jno
or
jno
pop
cmpsl
imul
or
cmpsb
in
jno
xor
mov
and
aaa
sub
mov
lods
cmp
ja
sbb
inc
add
sub
nop
pop
mull
adc
cmpsl
bound
loop
les
jl
popa
inc
gs
cmp
addr16
jns
jl
push
cmp
scas
lods
push
out
jle
lcall
in
cwtl
pop
dec
in
cmp
sbb
xchg
mov
jno
andl
imul
jnp
mov
mov
dec
cwtl
push
subl
loopne
jg
clc
in
pusha
dec
xor
lahf
setbe
mov
test
test
in
push
mov
andb
ficoml
add
sub
and
add
jae
cmp
pop
push
xchg
fs
mov
pop
adc
fcompl
pop
dec
into
mov
shl
ds
sub
lds
aaa
iret
mov
arpl
loopne
fs
jno
xchg
ja
sbbb
jge
dec
cmp
pusha
cmp
sbb
inc
mov
imul
fsin
jg
lahf
fimull
sub
leave
jnp
pop
loop
lcall
mov
mov
lret
jae
fbstp
adcl
mov
insl
or
and
sbb
loope
jge
dec
cli
sub
sbb
xchg
fldt
xchg
adc
daa
pop
inc
jne
jae
cmp
mov
fdiv
and
and
sbb
arpl
popa
dec
cwtl
fsubrs
das
lret
mov
insb
mov
jge
adc
sbbl
cmp
stos
inc
scas
push
push
xor
mov
mov
inc
movsl
mov
add
pushf
sub
push
dec
popf
nop
hlt
movsb
xchg
ss
subb
mov
fdivrs
adc
nop
push
dec
cli
repnz
call
in
out
pop
call
dec
xchg
mov
push
push
cmpsb
das
and
dec
lock
sbb
cwtl
fiaddl
pop
es
xchg
repnz
scas
jb
mov
mov
add
and
loope
inc
jbe
in
cli
cmp
lret
cmp
dec
addr16
sbb
mov
test
push
mov
or
push
dec
clc
sbb
xchg
xchg
inc
mov
dec
iret
cmc
and
subb
std
mov
add
je
xor
mov
cmc
add
jo
pop
pop
mov
inc
pushf
push
xchg
and
call
inc
jno
std
push
fdivrl
loopne
inc
movsb
cwtl
call
movsb
jne
mov
call
jb
stc
arpl
jne
imul
nop
mov
inc
push
dec
pushf
adc
jle
xor
ss
or
fs
pop
jp
pop
or
popa
sti
ja
add
ds
xor
shrl
dec
sbb
mov
dec
pusha
lock
pushf
es
les
movsb
cmp
mov
mov
repz
mov
out
leave
inc
stc
gs
cld
aaa
movsb
xchg
mov
ja
cmp
lret
sbb
aaa
aas
push
out
push
int
movsb
in
pop
xchg
fimull
insl
mov
js
pushf
icebp
xchg
add
xlat
mov
outsl
add
mov
push
jo
xchg
or
pusha
push
push
sti
sbb
out
jle
into
test
or
fldt
arpl
aas
xchg
jmp
orl
pop
push
sbb
or
sub
jb
imul
dec
mov
inc
sub
cmpsb
in
sub
cli
sub
mov
loope
jnp
insl
xchg
adc
jb
or
fs
cmp
andl
iret
jnp
fdiv
ljmp
jle
inc
divb
pop
push
int
pop
jb
inc
push
mov
fists
aas
rcll
fsubrl
fsubl
add
pop
jg
xor
lock
and
cmp
or
sub
subl
call
sbb
mov
xchg
push
pop
pusha
jge
pop
aas
mov
rcll
push
inc
das
mov
sbb
add
pop
sub
aaa
pop
test
call
call
xor
iret
in
dec
sarl
clc
mov
enter
decb
and
nop
les
sbb
dec
shr
subl
dec
jo
pushf
shl
dec
xor
mov
imul
out
inc
or
ret
xchg
cli
pop
test
sbb
jo
ds
jp
mov
sub
call
mov
cs
lcall
in
sub
iret
xor
jmp
jecxz
cld
test
lcall
out
mov
fmuls
cmc
mov
cmp
data16
sbb
gs
xchg
mov
shlb
stos
lds
imul
mov
fs
test
dec
cs
mov
in
lea
je
es
push
and
rcl
loope
stc
ffree
cmp
mov
mov
pop
lock
mov
in
movsb
cmpsb
out
les
sbb
fdivrl
jle
mov
xchg
bound
mov
mov
iret
jae
xchg
adc
jmp
xchg
lcall
loope
jl
mov
loope
movl
adc
adc
mov
idivb
lock
call
mov
add
addb
sub
nop
jg
inc
mov
stos
imul
fdivs
daa
adc
push
in
fisttps
jb
cmp
inc
push
pop
push
and
mov
inc
fistpl
sahf
cwtl
xchg
test
cs
ffreep
fidivrl
scas
ss
ficompl
daa
gs
mov
mov
inc
jmp
adc
push
or
outsl
xor
cmp
and
xor
call
xchg
mov
mov
faddl
push
mov
in
fnstcw
push
pop
jae
out
dec
push
arpl
pop
rdtsc
push
jecxz
cmp
in
sbb
adc
and
out
call
inc
fsubl
mov
mov
push
fildll
cmpsl
push
test
das
fcoml
mov
lea
bound
and
scas
mov
mov
shlb
incb
das
mov
ds
dec
mov
lret
jae
adc
mov
jle
sbb
add
dec
pop
repnz
jmp
jo
out
adc
sub
adc
inc
add
repnz
jecxz
lock
aad
pop
sub
popl
iret
sahf
mov
out
ja
mov
mov
into
ret
mov
orb
push
mov
xchg
xchg
int
testl
sub
lea
or
cmp
repz
cmpsb
push
xchg
mov
in
cmp
xchg
sar
inc
imul
and
cmp
push
sub
lcall
adc
dec
fs
icebp
repz
or
xor
imul
sarl
push
push
xor
xchg
xor
xorb
iret
out
jl
pop
jno
jp
loopne
lock
add
je
xor
push
sbb
mov
fists
stos
or
pop
sbb
ss
ja
inc
add
jl
push
xchg
mov
or
adcb
cs
dec
dec
shl
ljmp
fwait
clc
fxch
adcl
sub
pop
ja
push
imulb
cmpsl
add
je
lods
mov
mov
sahf
dec
movsb
xchg
dec
test
clc
mov
jle
pushf
pop
dec
mov
sbb
fldt
sub
mov
xor
pop
icebp
call
aas
sti
dec
lods
sub
mov
repnz
inc
sub
mov
inc
shll
jns
mov
adc
mov
jmp
jns
push
mov
sub
jne
mov
mov
rolb
and
xor
inc
mov
movsl
andl
cld
inc
push
fnsave
mov
cli
lahf
add
sub
add
adc
adc
mov
leave
mov
inc
ds
in
faddl
mov
mov
mov
lea
ss
pop
movsb
stc
scas
push
mov
test
mov
sbb
sbb
jns
cmp
aaa
pushf
push
jo
idivl
sbb
xor
test
incb
jle
pop
xchg
push
pop
into
shlb
rcrb
sahf
lods
dec
cmc
cli
jnp
mov
mov
sbb
dec
in
lret
bound
push
cmp
cmp
lahf
pop
xchg
jbe
push
shll
or
mov
adcb
jae
clc
loopne
inc
jge
je
sarb
bound
sarb
push
mov
and
add
cmp
jae
push
in
xchg
outsb
sbb
mov
adc
in
xchg
flds
add
sbb
cmp
add
push
mov
into
addl
mov
adc
xchg
sbb
sbb
ret
mov
pusha
sar
stc
movsb
imul
xor
into
das
popf
daa
loopne
mov
sub
cmp
stos
ds
dec
push
js
pop
push
leave
or
mov
sub
sbb
push
cmp
ja
notb
in
xchg
push
sbb
and
insb
in
push
clc
lods
push
jmp
sub
mov
xlat
mov
test
xchg
fidivs
adc
imul
sbb
fwait
enter
add
cmpsl
xor
data16
test
or
sbb
xor
fwait
call
and
shl
aad
push
loope
sbb
lcall
cli
and
icebp
sbb
and
testb
aas
in
xorl
mov
lret
test
xchg
mov
jge
inc
adcl
adc
xchg
xchg
pop
mov
clc
mov
push
scas
ja
inc
xlat
dec
fcmovbe
inc
sub
jo
out
lea
aad
incb
pop
jecxz
mov
jp
jne
mov
popf
pop
pop
pop
loop
lahf
test
je
xchg
or
add
push
lahf
push
fucomip
out
test
ret
stos
push
negb
andl
push
mov
orb
test
negb
ja
add
shll
in
mov
mov
dec
push
icebp
fsubs
xor
fnsave
sbb
stc
lock
and
jmp
sbb
out
aad
jle
dec
pop
imul
inc
sub
push
fidivl
lahf
push
nop
adc
dec
xlat
xchg
and
jmp
mov
movsl
xchg
filds
lds
scas
stos
or
aaa
lahf
movsl
add
jge
out
and
or
xchg
rorl
ja
test
xchg
fnstsw
sub
mul
xlat
mov
mov
loopne
ljmp
mov
push
out
push
dec
imull
xor
fmull
pop
xor
pop
push
lret
cwtl
in
pop
xchg
in
jbe
adc
pop
lock
insl
insl
mov
push
add
fwait
or
daa
pop
iret
movsb
call
or
leave
mov
push
adc
in
hlt
lock
repnz
sub
and
data16
inc
mov
push
push
out
adc
jo
lds
inc
push
sbb
ret
push
scas
mov
push
aad
fwait
cmp
cltd
mov
jb
jp
leave
arpl
inc
popf
xor
lahf
sub
mov
mov
sbb
adc
cmpb
addr16
outsl
cmp
xor
rcrl
in
loopne
jmp
fcomps
movsb
dec
add
stos
push
subb
inc
jbe
test
add
dec
mov
fcompl
jae
clc
cmpsb
movsb
bnd
jnp
mov
mov
rorb
inc
test
push
mov
scas
jne
push
xchg
mov
cmpsl
les
fistpll
mov
cmp
shll
and
sub
adcb
jp
outsb
or
dec
pusha
insl
sub
fs
push
js
sub
sub
xor
ret
add
ret
mov
mov
mov
popf
subl
leave
jmp
add
sbb
cmpl
jnp
add
in
outsl
lea
add
movsb
fs
ds
adc
lea
iret
call
or
mov
mov
shrl
fwait
addb
leave
leave
add
jno
cld
dec
mov
or
and
dec
ja
std
or
pop
and
shll
jge
dec
mov
xor
xchg
mov
stos
rcrl
ja
cmpsb
mov
inc
dec
lods
dec
mov
mov
arpl
inc
pop
add
push
out
lods
je
hlt
call
lds
mov
jnp
leave
cltd
lock
mov
cmpsb
dec
adc
sub
inc
call
loop
mov
add
and
lds
mov
sub
pop
test
cmp
pop
mov
and
cmp
std
cmp
push
xchg
xchg
lret
push
je
popa
pop
filds
out
das
push
dec
xchg
lret
inc
in
mov
push
shrb
andb
fwait
sahf
jecxz
cmp
mov
mov
push
and
rcll
lahf
and
cmp
mov
add
inc
pusha
popf
add
xor
lahf
jb
xor
inc
cwtl
push
jo
adc
or
mov
ja
out
es
xor
cvtpi2ps
push
adc
sbb
pop
aad
push
pusha
test
dec
scas
iret
fdivrs
rol
pop
cmc
shrb
clc
jne
ljmp
sub
cmpsl
sub
loope
mov
add
adc
popa
jmp
mov
cmp
sbb
xchg
sbbb
lock
mov
bound
out
dec
pop
fwait
mov
push
sahf
xchg
inc
mov
xorb
imul
dec
je
scas
xor
mull
cmp
xor
push
loopne
andb
add
cmp
dec
dec
sbb
int
icebp
addr16
mov
rcll
orb
mov
push
pop
call
cmovp
pop
push
mov
add
mov
popa
into
sbb
scas
pusha
mulb
push
adc
insl
lret
add
jo
inc
push
inc
adc
push
dec
fnstenv
mov
sub
mov
push
stc
adc
out
imul
push
dec
mov
cwtl
inc
jecxz
cmc
cmpb
jb
cmp
cli
lods
cli
sub
dec
divb
repnz
cli
or
pop
fbld
pop
lea
jnp
and
push
push
lods
lea
mov
pop
mov
push
cmc
cli
test
nop
repz
push
mov
mov
jge
faddl
inc
inc
dec
adc
int3
iret
movsl
popa
in
push
xchg
xchg
mov
mov
inc
mov
notl
jg
lret
je
aam
movsb
imul
and
ficompl
sbb
shll
pop
jnp
mov
mov
fcomp
lock
ror
std
data16
inc
add
lea
jmp
stos
xor
cmp
xor
cld
cmp
cmp
xchg
mov
and
fdivrs
push
sub
ds
inc
test
fstpt
sub
sbb
xchg
cld
int3
pop
add
insb
out
imul
addl
xor
adc
insb
push
fisttpll
das
pop
jl
je
pop
xchg
cmpsl
lret
inc
movsl
or
pop
xor
mov
insb
pop
mov
repz
inc
push
mov
scas
or
iret
sbb
mov
lahf
lret
jle
mov
or
cmp
clc
or
cmp
mov
jbe
push
mov
and
or
fildl
jecxz
add
mov
es
mov
lock
movb
dec
pop
in
dec
stos
cmp
in
xor
push
jno
jge
push
lods
xor
jmp
nop
inc
arpl
enter
bnd
xor
xchg
aas
or
mov
shlb
popf
mov
popa
add
aad
lahf
mov
leave
xchg
sbb
push
jo
aas
scas
add
dec
cmp
dec
mov
pushf
jmp
push
jg
js
pop
shlb
adc
in
inc
call
gs
imul
inc
inc
data16
mov
lods
imul
cmp
push
loopne
movsl
lods
mov
enter
or
inc
adcl
dec
add
xchg
in
into
and
out
mov
mov
mov
enter
inc
rol
lods
mov
inc
fwait
xchg
movsl
or
and
lods
inc
pop
or
idivl
sbb
xlat
mov
jmp
dec
ds
push
xchg
imul
adc
push
fnstsw
inc
and
or
cltd
nop
inc
lret
mov
icebp
nop
daa
or
xchg
call
jecxz
inc
cmpl
dec
mov
inc
push
fwait
xlat
fst
cmpsl
and
out
out
repz
jo
fldl
data16
in
xchg
cld
scas
and
fiaddl
mov
int3
push
jle
pusha
or
jmp
roll
ds
inc
push
xchg
push
or
jg
sbb
js
cmpsl
jmp
ds
adc
lea
popf
dec
leave
mov
movsl
xchg
jo
fldt
xor
cld
nop
aas
outsl
or
inc
push
gs
add
repz
jg
out
lea
ret
in
mov
lods
or
in
jnp
or
sbb
int3
mov
repnz
cmp
imul
jecxz
jmp
mov
jp
ret
mov
jb
ja
movb
out
mov
cmp
out
push
pop
lods
xchg
dec
dec
inc
jbe
rorl
jno
les
push
or
popf
xchg
clc
pop
sbb
cld
daa
mov
iret
lods
aam
hlt
push
es
jno
add
jge
sub
jne
dec
sahf
insl
jb
in
mov
sti
cld
movsb
repz
in
dec
mov
mulb
clc
dec
addr16
xchg
or
test
shll
fidivs
cmp
aas
mov
mov
fwait
or
pop
inc
mov
data16
daa
xchg
and
cs
out
iret
repnz
mov
mov
add
and
cmpsl
push
xchg
stos
int3
les
fs
push
mov
adc
push
scas
mov
leave
cmc
ds
es
or
sbb
or
fdivl
sahf
mov
and
andb
insl
jae
push
andl
mov
inc
dec
addr16
and
jmp
lahf
sub
push
adc
push
xchg
sbb
pop
dec
mov
sti
das
or
mov
xchg
outsb
test
add
pop
test
aad
jmp
cmc
inc
bound
cmp
xor
xor
je
pop
push
sub
ss
xlat
pop
mov
in
leave
push
push
xor
mov
cmp
jl
pusha
mov
sub
cwtl
and
movsl
mov
and
mov
aad
in
repnz
cmpb
sti
ret
scas
not
jmp
push
scas
dec
xchg
pusha
mov
in
xor
lock
cmp
add
mov
cltd
mov
push
sahf
push
inc
add
xchg
cmc
push
insl
adc
ds
mov
lock
xor
mov
push
mov
stos
jno
mov
aaa
push
xor
mov
test
or
dec
scas
push
iret
dec
movsb
push
imul
mov
jo
faddl
jp
xchg
and
mov
std
xor
pop
dec
sti
push
sarb
xor
sti
popf
je
xor
out
jae
push
xchg
sbb
and
pop
jo
inc
lcall
mov
rorb
sbb
popa
fisubl
fwait
lea
lods
add
sub
pusha
in
movsbl
cmpl
and
push
popf
mov
fisttpll
lahf
xchg
ljmp
cwtl
fsubrl
fdivrl
test
inc
cli
adc
mov
out
inc
or
xchg
dec
pushf
sar
sub
ret
mov
inc
pop
jp
stc
jmp
loope
and
outsl
mov
pop
pop
xor
cmp
lds
xor
addr16
cli
xor
adc
jmp
xchg
sbb
jnp
dec
mov
jo
outsb
xchg
cmp
test
movsl
push
mov
aam
shlb
lock
mov
or
dec
dec
sbb
movsb
cmp
das
sbb
sub
and
cwtl
or
gs
mov
jbe
out
scas
push
push
shlb
std
shrl
cmpsb
mov
lahf
dec
adc
enter
fsubrl
sub
stos
sub
mov
xchg
adc
pop
bound
mov
stos
cmp
mov
scas
adc
imul
push
mov
or
out
pop
push
int
mov
aaa
insb
push
bound
scas
loop
lock
dec
push
lds
add
sahf
out
insb
dec
xchg
gs
cmp
jns
dec
inc
sbb
rcr
sub
mov
pop
lods
out
notl
pushf
int3
push
pop
ds
mov
mov
insb
ljmp
loop
add
jge
popa
and
sbb
inc
mov
cmp
and
subb
dec
jl
jp
adc
sbb
movaps
dec
cltd
pushf
adc
inc
bound
or
push
and
and
aas
ds
fucom
pop
jmp
hlt
in
hlt
mov
pushl
ss
test
out
bound
mov
out
xor
mov
push
pop
and
fsts
and
inc
sbb
inc
jecxz
rclb
mov
int3
les
daa
inc
fists
mov
movsb
push
scas
cli
ds
jnp
pop
sub
push
push
cmp
xor
xor
push
lods
mov
ret
and
mov
fs
loope
or
rol
push
jl
mov
lods
mov
hlt
or
insl
int
push
push
in
push
xlat
xchg
pop
xchg
ja
sarl
enter
js
rcl
mov
in
mov
push
xchg
scas
je
dec
movsl
jb
gs
sub
insl
push
push
dec
popf
dec
mov
insl
dec
and
and
int
sub
sub
insb
lods
lods
je
fldl
shlb
enter
sbb
test
or
and
hlt
xor
xchg
jo
insl
push
shrb
push
xchg
mov
sti
dec
xchg
mov
lods
xor
cmc
lret
add
faddp
mov
pusha
out
mov
mov
pop
mov
lret
adc
pop
aaa
fldcw
cmp
lods
cmp
and
mov
mov
js
shl
mov
pop
push
subl
sbb
cli
push
aam
movsb
inc
mov
sbb
inc
push
pop
aaa
sub
ja
out
mov
mov
mov
xor
loope
leave
inc
cmp
jecxz
sbb
jne
mov
mov
out
push
in
rcrb
orl
pushf
cwtl
sub
or
jbe
bound
cmpsb
out
lock
sbb
adc
popa
mov
out
fldcw
cmp
add
or
pop
fnstcw
push
int3
sub
fdiv
dec
adc
loopne
lods
fnstcw
cmp
sbb
pop
repz
test
je
sub
or
cmp
cmp
addr16
adc
gs
inc
daa
fdivr
fwait
lods
sub
mov
add
mov
xchg
ljmp
pop
xlat
add
or
push
adc
jle
nop
inc
insb
sbb
repnz
out
ljmp
into
loope
rcl
stos
mov
xchg
xor
add
cmpsl
cli
mov
pop
jno
call
cmp
in
mov
out
aaa
mov
sbb
aas
push
mov
pop
ds
fcompl
lahf
cli
xchg
sbb
xor
and
aas
arpl
mov
inc
jmp
mov
xchg
mov
cli
pop
sbb
adc
mov
and
stos
ficomps
xor
jbe
sub
pop
stc
test
push
sbb
or
les
and
xor
out
les
rclb
push
hlt
scas
pop
out
or
adc
shrb
lcall
sbb
mov
sub
sbb
xchg
jp
std
xchg
out
jbe
cmp
shr
insb
jb
cwtl
push
mov
jne
cli
mov
inc
xor
jae
rcr
imul
cmp
idivl
adc
inc
lea
test
jecxz
mov
into
stos
ret
push
add
gs
cmp
cmp
in
push
jnp
es
dec
inc
pusha
sbb
adc
movsb
test
jnp
pop
shl
pop
lods
xchg
mov
inc
xchg
rorl
cld
cmp
and
cltd
mov
sub
pop
rcrb
shlb
adcb
in
loope
push
das
test
jae
call
mov
aad
fisubl
es
fcmovu
pop
xlat
sub
add
mov
fcmovnu
cmp
and
sub
test
inc
adc
inc
and
idivl
mov
pop
xor
add
cmpsb
mov
into
mov
lret
fidivrs
push
fisubrl
in
xchg
cmc
sbb
ja
mov
jo
or
dec
xchg
mov
add
jl
xor
enter
mov
loop
fldt
dec
lock
or
cli
inc
pop
sub
or
jae
rclb
push
call
xor
jp
push
rcr
push
out
cmpsl
sbb
or
ret
hlt
add
sub
imul
dec
lfs
push
pop
and
lods
jne
or
mov
dec
test
cmp
mov
dec
and
fmull
or
les
sbb
or
sub
enter
jbe
out
pusha
pop
insb
pop
sbb
mov
or
outsl
jecxz
bound
inc
xchg
lds
sbb
and
or
push
adc
out
stos
in
inc
stos
jb
movsb
jns
mov
xlat
push
mov
loopne
arpl
mov
leave
fwait
stos
xchg
fwait
cmp
cmp
mov
mov
xor
pop
test
mov
std
imul
call
dec
stc
lock
inc
xlat
cs
lahf
hlt
mov
push
mov
pop
loope
pusha
out
rclb
sbb
pop
mov
pop
jmp
nop
cli
and
pop
jo
lds
rcrb
pop
sub
aad
dec
mov
mov
mov
sub
mov
into
cwtl
push
sbb
data16
insb
or
add
les
mov
fmuls
emms
xor
sarb
daa
lods
cmp
inc
mov
fldenv
out
push
xor
cmpsb
jle
xchg
test
xor
adc
hlt
ret
les
jno
or
or
movsl
fldcw
fistps
call
sti
or
aam
ljmp
jmp
shl
outsb
insl
bound
add
xchg
sub
and
jecxz
push
push
jns
mov
or
ss
iret
or
mov
inc
test
shrb
xor
add
arpl
in
outsl
outsl
je
push
push
stc
call
mov
insb
pop
or
pop
insl
mov
and
sbb
cmp
pop
adc
push
mov
les
fistps
adc
nop
pop
jnp
add
pushf
roll
mov
aas
loop
cmp
andb
push
sub
xchg
dec
xor
pop
mov
dec
incl
dec
daa
repnz
insl
gs
jp
insb
aam
inc
pop
xor
mov
adc
data16
nop
imul
scas
aas
add
pop
cmpsb
mov
xchg
insl
aad
repnz
aad
inc
lcall
loope
int3
nop
cwtl
push
mov
mov
mov
mov
int3
lret
leave
lahf
xchg
sub
ss
inc
mov
in
out
test
and
cwtl
daa
lcall
frstor
fucomi
ficoms
jmp
daa
dec
loopne
nop
adc
or
ja
ror
inc
jae
inc
xchg
fcmovnu
or
out
loopne
ja
jecxz
add
stc
pop
inc
in
inc
inc
fcompl
jge
rcrb
add
dec
mov
mov
movsb
jge
arpl
ja
pop
rcrb
pop
lret
jg
push
int
mov
mov
sub
out
mov
jle
mov
pusha
popa
inc
and
add
nop
sub
iret
ror
add
and
xchg
xor
loope
aaa
popf
out
not
or
jge
cltd
in
out
cmc
mov
cmp
mov
gs
fsub
mov
lcall
xlat
mov
xchg
or
test
push
enter
nop
push
cwtl
inc
cmpsb
pop
es
shl
push
inc
out
mov
fisubl
sbb
jge
test
jbe
pop
jmp
dec
arpl
sbb
aaa
pop
cmpsl
dec
sahf
scas
adc
sub
mov
gs
cwtl
pop
lahf
cmp
mov
cmp
push
outsb
or
pop
and
sub
inc
xchg
push
lahf
loop
loope
cltd
sbb
xchg
xchg
jb
mov
mov
jae
lcall
cmp
mov
fidivl
and
and
mov
xor
mov
repz
mov
xor
lcall
xchg
mov
in
rolb
dec
xchg
outsl
nop
stos
pop
clc
out
aaa
test
out
scas
shr
lcall
add
imul
enter
xlat
jecxz
xor
push
jg
jbe
sub
add
and
dec
jb
hlt
mov
xchg
sbb
fistpl
movb
push
mov
xchg
mov
fsubs
cli
aaa
dec
mov
xor
xor
sbb
ffree
jo
jo
xor
movsl
fsubrs
mov
adc
int3
dec
xchg
imul
dec
inc
mov
nop
adc
and
out
rol
enter
sbb
push
fidivrl
jg
repz
pop
or
inc
test
xchg
lcall
xchg
aaa
stc
fsubs
add
int3
das
lgs
gs
fcompl
mov
call
sahf
inc
mov
mov
dec
add
inc
mov
push
push
arpl
movsb
mov
fwait
je
mov
sub
ret
test
outsb
aaa
adc
push
sub
cmp
addr16
loope
orl
lcall
stos
enter
psrld
fdivl
xor
in
or
push
gs
enter
out
loopne
popa
inc
xor
aaa
call
inc
mulb
loope
sarl
sbb
ret
xchg
sbb
adc
les
imul
adc
add
mov
or
push
jl
fs
and
test
sbb
int3
sbb
out
sub
pop
testl
xchg
or
mov
in
add
push
rol
jno
std
pop
add
loope
cwtl
sbb
decb
ret
jg
jb
cmp
in
adc
mov
movsl
xor
push
adc
xchg
imul
push
lret
or
into
or
jg
movsb
fwait
push
xchg
inc
dec
adc
int
rorb
sbb
das
mov
adc
adc
mov
movsb
loop
ficompl
xchg
rcrb
mov
fs
decb
mov
push
adc
pop
pop
loope
cwtl
std
fcompl
inc
push
and
add
push
lods
pop
mov
mov
jns
into
add
push
inc
lods
or
pop
rcll
or
jl
mov
ja
xlat
jae
pop
sti
pop
cmpsl
sbb
sub
shl
imul
outsl
push
xlat
mov
inc
or
jne
rcl
xor
push
int3
or
push
push
popf
insb
gs
jns
mov
insl
out
pop
cmp
sbb
mov
sbb
out
pop
add
cli
jns
push
lahf
adc
push
in
test
test
pusha
mov
das
gs
in
adc
test
mov
frstor
int3
dec
std
dec
mov
in
dec
jecxz
and
mov
add
jne
cmp
add
lcall
ss
or
push
jmp
add
data16
jge
or
mov
push
and
lods
cli
stc
in
aad
aam
cmp
into
stos
adc
sti
imul
addr16
ljmp
scas
mov
push
sbb
sar
pop
pusha
mov
cmp
movl
mov
pop
xlat
rcrl
jge
cmpsl
inc
out
mov
lcall
mov
dec
lods
jge
testb
xchg
out
mov
mov
stos
lret
adc
fistpl
pop
xor
dec
jne
inc
ret
ret
mov
mov
popf
and
arpl
or
ret
dec
cmp
push
and
test
orb
push
jge
jne
clc
test
clc
imul
into
mov
xor
cwtl
aaa
ficompl
call
pop
andl
ja
pop
mov
cmc
arpl
jmp
les
cmp
arpl
std
pusha
rorl
adc
pop
out
rep
jge
or
jae
aad
push
or
mov
inc
and
ja
cmpsl
mov
mov
mov
jle
xchg
inc
notb
dec
imulb
add
gs
loope
dec
dec
lret
lock
outsb
daa
ja,pt
xchg
movsl
aaa
mov
xor
xor
sahf
mov
lea
adcl
call
mov
jp
in
xor
xchg
dec
xor
xor
dec
add
cmpl
mov
int
sbb
adc
inc
cmp
xchg
xchg
fmul
dec
negb
out
jle
adc
lret
jnp
iret
adc
inc
add
fnstenv
shr
aas
push
cmp
in
sarb
dec
imul
nop
add
adc
jo
and
pop
or
inc
int
repnz
leave
gs
ret
inc
pop
dec
stos
int3
pushf
pusha
mov
and
xor
adc
push
divb
or
outsb
loope
adc
std
push
out
addb
mov
xor
xchg
inc
ja
push
lret
and
jae
xor
movsb
lcall
addl
xchg
pop
cs
test
lock
loop
jge
das
adc
movsb
in
dec
lock
repz
sub
cmc
jns
cmp
adc
inc
notb
mov
ja
scas
mov
mov
push
dec
aad
xor
ljmp
jno
sub
int3
xchg
mov
inc
pop
add
shlb
hlt
cli
xchg
shrb
into
mov
sbb
pop
lret
shll
push
push
mov
or
mov
lock
aad
lds
arpl
xchg
jb
aas
push
dec
xor
sbb
ljmp
aas
adc
negb
xchg
xor
jl
test
lcall
insl
add
adc
sarb
cmpb
sbb
mov
leave
sbb
xor
dec
xchg
adc
inc
lret
addr16
and
lods
test
adc
pop
ljmp
ss
jns
push
std
inc
pushf
popf
push
rcll
mov
pusha
lret
jle
rolb
pop
into
xchg
mov
push
iret
cmpsl
imul
mov
push
adc
out
pop
iret
or
test
inc
and
mov
in
mov
xchg
dec
pop
and
push
dec
xor
sub
pop
mov
xchg
insl
mov
fwait
mov
inc
enter
inc
pop
mov
rcrl
in
mov
jle
or
out
and
fdiv
lods
shlb
jmp
xlat
out
sbbl
xchg
push
ret
mov
adc
sarb
pop
inc
mov
adc
daa
push
sub
repz
out
pop
jne
vhsubps
sti
sbb
and
sub
stos
inc
jae
add
mov
dec
mov
sbb
insl
inc
adc
imull
xor
pushaw
sbb
and
adc
loope
push
popa
jo
fdivrl
lods
push
sti
in
add
cmpsb
xchg
imul
adc
cmp
inc
mov
divb
int3
das
outsl
push
in
sub
jnp
out
push
subl
stos
mov
es
aaa
fdivr
pop
adc
outsl
or
movsl
and
and
inc
jge
sahf
adc
scas
aam
cmpb
xor
psrlq
sub
sub
xchg
or
sarb
cmpsb
mov
repz
insl
fdivl
jno
fs
daa
repnz
sub
jp
or
and
inc
sub
add
sarb
leave
push
jle
int3
ret
pop
mov
push
push
iret
inc
jmp
je
arpl
xor
push
ds
jb
les
mov
jl
push
lcall
mov
movsb
adc
setp
fistpl
popf
pop
daa
test
pop
mov
es
pop
cmp
subl
cs
cltd
push
mov
dec
jmp
add
lret
icebp
and
mov
mov
mov
repnz
out
testb
ret
shrb
or
jno
adc
lea
sbb
hlt
mov
sbb
sbb
dec
in
and
jl
fs
and
jo
pushf
fnstcw
mov
popf
insb
push
dec
mov
inc
insb
dec
ljmp
enter
repz
xor
inc
push
cmp
popa
push
call
rolb
incb
mov
data16
and
and
shr
xchg
or
mov
fsubl
icebp
mov
fsubl
mov
mov
jae
enter
mov
arpl
jns
outsb
mov
dec
mov
and
daa
mov
loop
pop
out
mov
mov
pop
dec
push
mov
push
cld
stc
adc
xor
cmp
xchg
pop
outsl
clc
das
aas
push
test
iret
push
ret
addr16
pop
sub
repz
dec
cmpsl
xlat
jecxz
les
ret
sbb
ficomps
stos
xchg
jp
mov
inc
sbb
xchg
call
jmp
mov
jmp
stos
aam
in
and
popa
cmp
jge
insl
stos
and
pushf
lcall
or
push
add
into
push
lret
mov
and
xchg
addl
inc
jecxz
pop
sub
xchg
push
loopne
cli
and
ficoml
and
insb
mov
inc
mov
fcoms
adc
and
cmovle
scas
aas
ret
push
nop
testb
cli
notl
arpl
icebp
xor
mov
test
lods
movsl
fwait
repnz
addr16
and
es
movsl
xor
add
xchg
push
dec
and
pusha
ret
fsubrp
test
fcomps
mov
sub
ljmp
fucomip
push
dec
imul
xlat
loope
inc
sub
in
icebp
inc
lods
loop
icebp
rorl
mov
adc
jnp
add
pop
in
data16
mov
lahf
ffree
dec
pop
iret
mov
inc
push
fdivs
adc
xchg
sbb
add
xor
stc
nop
addl
in
fdivrs
into
pop
clc
jns
mov
std
inc
or
int3
and
fisubs
lcall
ret
or
or
lods
or
or
hlt
jae
mov
xor
js
pop
fisubl
in
mov
fwait
jmp
xlat
out
icebp
dec
add
sub
pop
mov
cmp
inc
out
ss
dec
or
inc
jmp
test
hlt
stos
pop
sti
add
out
add
stos
test
out
or
push
addl
mov
shl
push
xchg
pop
jle
rorb
je
push
outsb
std
data16
subb
xchg
stc
xchg
fs
push
mov
aaa
jp
mov
mov
cltd
insb
xchg
cmpsb
out
rclb
je
ja
inc
inc
bound
mov
dec
shrl
repz
sub
sbb
sbb
xor
add
pop
addr16
adc
scas
adc
int
adc
fidivrl
xchg
xor
insl
add
sbb
jo
popf
jb
jg
fiaddl
mov
hlt
or
fs
mov
push
fstps
mov
nop
aam
loop
mov
sub
jle
adc
addb
pop
dec
push
adc
insl
inc
dec
cmpsl
pop
pop
movsl
lret
fimull
incb
pushf
xchg
mov
or
xchg
dec
shr
mov
mov
inc
xor
pushf
bnd
xchg
cmp
push
jecxz
or
ror
or
mov
mov
mov
mov
cmpsl
xchg
mov
dec
hlt
fcmovne
hlt
adc
xchg
push
movsb
jge
jns
dec
jno
mov
mov
sbb
ljmp
shr
mov
movb
xchg
dec
sub
imul
das
pushf
pushf
decb
xlat
mov
dec
fistpll
pushf
in
add
sbb
in
outsb
dec
or
movsb
nop
jp
add
movsb
adc
pop
jno
pop
push
arpl
xchg
loopne
movsl
ret
hlt
xor
cmp
ja
lea
push
pop
push
in
out
jge
cmp
xchg
add
pushf
jbe
mov
aaa
lock
xchg
cmp
dec
test
mov
add
movb
pop
test
xorb
xchg
sbb
sub
push
or
push
sub
adc
inc
jae
loope
cli
out
push
scas
xor
fsubr
call
nop
enter
ret
push
out
pop
dec
popf
xchg
stc
negl
mov
mov
inc
in
cmp
imul
and
mov
jp
sub
jg
xorb
inc
mov
pop
roll
mov
inc
push
aaa
inc
data16
stc
call
or
test
jecxz
rcrl
and
mov
xor
out
sbb
xchg
ljmp
pop
push
inc
inc
psrlq
popa
sbb
xchg
pop
jp
orb
mov
xchg
lock
div
inc
sub
push
fsub
lods
and
jmp
les
imul
pop
out
aaa
sub
or
loope
jmp
lds
pop
aam
orb
sbb
and
add
int
std
and
sbbb
mov
pop
inc
test
mov
sub
jbe
jae
cmpsl
push
mov
out
push
push
fimull
xor
cld
pushf
dec
sti
imul
sbb
shlb
in
fisubl
aad
add
inc
scas
cmp
cmpsl
xchg
cmc
loopne
dec
xchg
sbb
xchg
cmpsl
scas
mov
xchg
push
or
mov
adcl
cmp
call
adc
jmp
xchg
xor
idivl
and
ja
push
outsl
out
call
repnz
fsubp
aaa
stos
test
orb
pop
sbb
sbb
push
mov
loopne
sbb
add
ret
stos
sbb
es
xor
and
lds
xchg
cltd
int
ja,pt
push
aam
push
add
xchg
xchg
fistpl
sub
pop
mov
mov
ret
mov
test
push
sbb
push
decl
pop
adcb
mov
call
daa
cmp
push
and
fdivs
inc
xor
fmuls
jecxz
jl
cld
sbb
andb
mov
push
pop
ret
push
sbb
sbb
les
subb
pusha
imul
stc
outsl
mov
call
xchg
es
mov
push
ljmp
push
iret
push
insb
out
out
aas
out
jecxz
lds
jmp
sbb
iret
imul
add
inc
rcr
jmp
pushf
ds
dec
pop
pushf
ja
jge
nop
sbbl
int
dec
xchg
movsl
and
mov
jae
cwtl
iret
js
shlb
and
xchg
addr16
decb
iret
movsb
xchg
dec
push
pusha
mov
jecxz
into
or
cmp
xchg
imul
imul
popl
lcall
adc
xchg
gs
jmp
fistpl
cmp
das
jge,pt
mull
or
ret
jge
jne
jge
negl
cmp
out
or
xchg
sbb
xor
shlb
loopne
rorl
lahf
int
scas
add
xchg
iret
sbb
xchg
jae
push
fsubs
cmp
push
fdivs
mov
mov
or
stc
fidivs
outsb
psubsw
and
push
jb
mov
add
fdivl
or
xchg
xchg
daa
in
outsb
and
mov
xchg
in
mov
jbe
and
jbe
xchg
rclb
mov
imul
in
mov
das
leave
dec
sub
jge
add
lahf
addb
stc
jp
std
and
inc
or
fistpll
xchg
or
push
daa
cld
nop
pop
dec
mov
into
inc
mov
adc
mov
out
in
dec
out
fisubrs
cmp
mov
inc
xor
int
addr16
xchg
imul
jbe
mov
repnz
ret
push
cmp
xchg
xchg
insl
push
push
jecxz
mov
or
sarb
and
push
sbb
movsb
sub
xchg
push
mov
into
cmpsb
into
icebp
and
jl
ret
jmp
fwait
loop
xchg
xchg
out
out
dec
js
adc
es
aas
ljmp
call
pop
xor
pusha
ds
xchg
xor
inc
dec
push
and
outsl
mov
outsw
cmovle
adc
divb
and
arpl
cltd
sbb
gs
fmull
loope
push
cltd
jns
xor
lods
mov
fimull
ljmp
subl
ljmp
xor
mov
ret
lea
cmp
popf
or
jb
sub
adc
fdivs
mov
adc
push
pop
dec
push
mov
repz
mov
or
pop
and
clc
cld
inc
imul
jg
loop
or
es
adc
and
cli
jle
cld
xchg
fxch
adc
mov
cltd
je
nop
dec
sbb
in
scas
shrb
jp
xor
ss
mov
in
sbb
pop
scas
addr16
adc
mov
jno
cmpsb
popa
test
xchg
mov
shll
scas
stos
and
sahf
aad
in
and
xor
insb
movsb
jecxz
lret
sub
or
push
fldl
mov
mov
rcrb
imul
jl
fwait
sub
in
cmpsl
mov
imul
int3
fbld
jbe
into
outsl
xchg
enter
mov
mov
push
and
push
add
jecxz
sahf
daa
cmp
or
xchg
insb
shll
stos
std
sbb
dec
cmp
mov
cmpsb
mov
inc
and
mov
xor
cld
sub
dec
dec
mov
cmp
stc
ljmp
mov
in
loopne
iret
push
inc
lcall
push
cli
lret
xor
fisubl
pop
aaa
adcl
test
lock
in
mov
dec
clc
inc
sbb
js
stc
cltd
push
pusha
cmpl
fsubs
lahf
pop
in
lret
mov
dec
push
adc
add
fs
outsb
leave
xor
mov
mov
add
lea
adc
insl
sub
mov
hlt
dec
scas
nop
adc
stos
cmpsl
sub
std
mov
out
popf
ret
aam
int3
outsb
cli
or
je
inc
lea
scas
scas
mov
das
jp
mov
jne
add
mov
push
popa
jge
sti
xchg
notl
stos
pop
faddl
xor
iret
in
sarb
and
loope
mov
or
dec
clc
int
mov
sub
fldcw
arpl
push
or
fdecstp
cmp
pop
mov
and
out
jno
cli
lods
subl
int3
lea
ret
cli
and
push
aaa
dec
std
mov
aas
out
add
imul
dec
cmpsb
dec
andb
test
adc
lds
mov
inc
mov
add
or
test
dec
lea
xchg
mov
setp
lock
fadds
and
cmpsl
iret
call
gs
call
add
jns
dec
or
inc
mov
mov
inc
pop
mov
sbb
sub
add
out
aas
xchg
repz
aam
inc
negb
mov
hlt
mov
mov
sub
and
mov
outsl
addr16
and
jmp
js
push
leave
mov
fnstsw
mov
test
stc
es
daa
outsl
imul
ret
xchg
jnp
bound
idiv
fisttps
inc
cwtl
jno
pop
xchg
push
cmp
lds
int3
insl
aas
push
add
push
and
nop
lret
and
scas
loop
stos
mov
xor
push
dec
adc
ja
mov
mov
mov
std
sub
and
andl
shr
dec
test
lret
sub
lea
jp
fcmove
pushf
aam
push
cmp
icebp
inc
imul
or
out
adc
add
adc
dec
aam
push
stos
outsb
pushf
das
xchg
lret
cmpb
scas
popa
mov
push
shll
cmc
push
mov
int3
xor
fcmovu
jecxz
insb
jb
in
in
or
sarl
ficomps
mov
push
rolb
cmp
in
arpl
movsl
arpl
xlat
mov
cmp
cmp
mov
fsubp
mov
test
aam
xchg
pop
cmp
sub
sub
imul
mov
jg
dec
jb
ljmp
ret
pop
clc
mov
dec
cs
add
dec
imul
or
outsb
pop
js
push
and
inc
loope
add
nop
xor
aam
sub
jns
sub
roll
out
dec
ret
iret
aad
iret
inc
pop
fstp
icebp
jmp
mov
sub
add
pushf
mov
xchg
cli
push
fisttps
leave
xchg
dec
outsl
push
bound
lret
jae
push
push
std
scas
dec
sub
push
in
gs
mov
loope
rcrb
or
pop
scas
push
loopne
cwtl
inc
dec
xor
adc
cs
out
push
add
cmp
imul
lret
imul
or
fincstp
test
cmp
push
adc
pop
push
hlt
dec
shll
out
sbb
and
mov
call
loope
cmp
mov
pop
and
xor
ja
add
push
scas
xchg
aas
xchg
inc
popf
mov
jae
sub
dec
jmp
pop
and
xchg
mov
xor
pop
mov
cwtl
leave
lds
and
sub
inc
mov
arpl
inc
lods
and
lea
pop
add
mov
or
jnp
add
xor
stos
add
jmp
bound
mov
dec
xor
popl
pop
lahf
fsubl
fisttpll
leave
ret
dec
test
pop
cmp
dec
xlat
in
push
add
mov
pushf
int3
pusha
pop
xchg
mov
xchg
mov
xchg
jmp
mov
inc
repnz
and
mov
sahf
inc
dec
push
jno
test
jno
ficoml
andl
and
pop
pop
cmc
push
pop
stos
sub
jp
pop
inc
mov
and
test
push
or
xchg
or
mov
lods
aaa
test
shrb
sub
adc
add
outsl
jnp
add
fstps
mov
and
push
cs
arpl
test
ljmp
xchg
add
in
xchg
test
repz
jb
lods
mov
icebp
xchg
mov
arpl
sbbl
sti
and
loop
movsl
pushf
icebp
iret
out
cmp
ss
repz
popa
adcl
jno
xor
popl
mov
cli
push
jb
stos
fnstsw
es
jae
popf
sub
sub
jecxz
lods
jle
imul
shrl
movsl
mov
xchg
dec
rep
lret
fsubrs
leave
xor
lea
xchg
cmpsb
cmpsl
ljmp
lods
adc
outsb
pop
add
adc
je,pt
and
mov
imul
xorl
add
dec
mov
sub
or
adc
fdivrl
pop
push
lds
mov
int
mov
add
mov
ret
movsb
test
cmp
in
cmc
lds
gs
inc
push
cld
ja
lret
or
shll
mov
vptestmb
push
xor
outsb
xchg
aad
dec
mov
jl
das
lods
mov
cs
and
stc
inc
jle
inc
roll
decb
mov
adc
pop
mov
dec
mov
insl
addr16
lods
or
hlt
inc
hlt
or
sbb
sysexit
adc
fs
sbb
sbb
xlat
pop
push
sar
add
stos
or
fs
out
and
lods
out
test
fsubs
push
inc
dec
sbb
imul
cs
out
repz
mov
adc
std
dec
xchg
fiaddl
or
adc
lret
adc
cmpsl
in
jmp
push
adc
scas
pop
jecxz
daa
sub
out
cmpsl
adc
lods
jb
outsl
jno
mov
js
push
jb
insb
mov
lods
in
js
repz
xchg
lahf
andl
scas
xchg
dec
pushf
jae
out
jbe
jle
int
popf
pop
add
sbb
int
inc
sbbb
aam
in
into
imul
adc
into
movsl
popf
xor
adc
fdivrp
pop
das
fdivs
xor
inc
lods
insl
push
test
inc
fdivrs
dec
inc
enter
divl
sbb
fimull
loopne
icebp
inc
jae
rcrb
mov
push
cltd
jnp
push
test
fsubp
jo
cmp
cltd
std
nop
out
jne
scas
loop
test
cmp
bnd
sbb
dec
sub
sub
mov
add
push
std
inc
sub
dec
or
fisttpll
stos
outsb
std
push
and
or
sti
push
sbb
stc
sarb
clc
aaa
loope
push
aad
out
pop
sbb
jo
mov
sti
xchg
mov
and
movsl
fcoml
sbb
mov
pop
cmc
or
mov
sub
add
pop
imul
jl
or
loope
xchg
push
inc
adc
jmp
mov
ret
int
and
das
pushf
and
mov
ret
adc
aam
mov
out
xor
xor
daa
xor
iret
inc
pop
rcll
cwtl
xor
enter
inc
lds
aad
jecxz
push
fs
push
or
inc
loopne
push
pop
mov
hlt
push
xchg
jge
lcall
mov
sub
adc
popf
sbb
mov
jp
push
push
dec
inc
flds
sbb
xor
jmp
xlat
push
pop
dec
enter
or
sbb
mov
xchg
leave
and
pop
xchg
push
jecxz
xchg
inc
scas
lret
stos
testl
movsl
mov
and
dec
call
adc
xor
sub
std
and
jmp
add
sbb
dec
out
cmp
repnz
pushf
imul
pause
xchg
pop
imul
rcr
mov
imul
ja
sahf
aas
incb
mov
std
adc
ljmp
jg
or
loop
imul
mov
out
dec
addr16
mov
pop
std
cltd
sub
mov
jae
stos
xor
fucomi
mov
scas
lock
sbb
insb
inc
jb
jno
sbb
cld
push
fistps
aaa
inc
push
cmp
shl
xchg
mov
jge
dec
fsubrl
mulb
mov
mov
fwait
dec
push
into
ficompl
cmc
bnd
xor
pop
lcall
popf
push
pop
adc
outsl
add
or
inc
inc
fnstcw
aam
rcrb
cmp
dec
rep
clc
lret
popa
add
xchg
es
sbb
rcrl
jmp
jne
das
repz
add
scas
icebp
pop
inc
dec
stos
shrl
mov
mov
mov
jb
mov
jmp
int
loop
insl
jbe
inc
cli
add
iret
daa
xor
out
fwait
aaa
mov
cmpsb
notl
scas
sbb
push
loop
iret
fsubrl
sti
mov
inc
lods
pop
outsl
and
pop
fisttpl
dec
fnstsw
jecxz
jns
add
orb
adc
shll
pop
popa
ja
shll
rclb
push
inc
push
jle
sub
push
bound
adc
jle
insl
ja
push
cmp
jle
xchg
mov
fs
xchg
fidivrs
xlat
cmp
push
cmp
xchg
jl
fdecstp
push
divl
fsubrl
mov
mov
push
mov
addr16
jp
cli
mov
js
mov
xor
and
fsub
jo
pop
mov
adc
mov
add
mov
mov
add
cmpsb
popa
mov
adc
sarl
xchg
adc
mov
push
jne
and
test
cmp
xchg
lds
adc
xchg
xchg
movsl
call
push
add
pop
adc
pop
aam
mul
aas
fistps
xor
out
icebp
jl
out
ljmp
mov
clc
fstps
xor
or
scas
jg
jg
or
imul
pmulhw
mov
outsb
mov
rcl
repnz
mov
ss
cwtl
shl
subl
lock
cli
nop
call
sbb
out
lds
rolb
mov
mov
jbe
xor
fistps
dec
jp
xchg
pushf
arpl
inc
cmpsl
jnp
push
add
sbb
adc
ljmp
sub
imul
mov
das
popa
out
inc
add
jo
imul
outsb
xlat
pop
loope
dec
sbb
stos
movsl
cmp
bound
jnp
mov
sub
xor
sbb
pushf
adc
adc
dec
adc
imulb
pusha
mov
push
cltd
xorb
inc
outsl
push
aaa
aam
ljmp
mov
cmp
icebp
jl
mov
rcrl
xor
aam
insb
movsb
sub
jae
inc
inc
jmp
repz
ja
fnstenv
sbb
sbb
dec
sub
leave
xlat
mov
jno
outsb
cld
or
arpl
test
andl
out
enter
jne
pop
aad
lods
mov
mov
jno
fdivs
xor
xchg
mov
and
inc
shlb
stos
xchg
jae
pop
xchg
out
sub
stos
psrld
jecxz
mov
fisubl
call
mov
je
test
inc
jecxz
add
popf
pop
in
add
sbb
jo
repz
scas
mov
fmul
in
xor
movsl
sbbb
roll
inc
icebp
push
adc
add
inc
loope
std
sbb
and
pop
aaa
xor
cld
xor
mov
push
jmp
jp
dec
cmpsl
cmpsb
jnp
loop
ja
adc
add
lret
push
dec
ret
or
push
pop
ss
subl
and
cs
jno
sub
and
stos
ljmp
in
add
dec
aam
int
mov
fstpl
popf
out
ret
cltd
push
jnp
mov
mov
mov
rorb
mov
ss
sbb
and
xor
dec
mov
adc
arpl
xor
push
es
sti
es
cmpsl
add
and
call
test
mov
cmp
xchg
xlat
lea
stc
mov
add
and
scas
mov
inc
push
pop
push
fs
mov
pusha
jg
and
rclb
lahf
inc
inc
adc
mov
push
fldl
dec
pop
int
cmpsb
or
repnz
popa
pandn
sub
sbbb
loopne
sbb
lret
push
int
mov
dec
enter
or
pop
sbb
mov
push
sarl
mov
or
mov
enter
scas
pop
dec
cs
and
fsubrs
mov
mov
popf
outsb
xchg
jns
sbb
push
inc
xchg
or
xchg
xlat
pop
mov
pop
jb
fwait
in
sub
decl
in
lods
mov
lret
rcr
fcmovb
add
aaa
mov
sbb
jp
lock
cli
js
out
stc
and
sub
mov
shll
xor
add
cwtl
xchg
xchg
in
jl
dec
in
mov
leave
jae
stos
lret
push
fildll
int3
jl
es
clc
rorb
jl,pt
lock
cmpb
lcall
pop
mov
sahf
aas
pushf
iret
cmp
mov
fistpl
pusha
enter
pop
add
mov
fwait
lea
fmull
xor
int
insb
ret
arpl
mov
pop
jbe
mov
loopne
add
jge
fldl
xor
fs
or
push
andl
inc
nop
loope
add
nop
test
std
out
insb
or
jl
push
pop
pop
push
push
add
shrb
xor
lock
incb
jnp
js
pop
ljmp
das
cmp
idiv
mov
mov
mov
mov
out
lds
add
or
scas
cwtl
mov
dec
jnp
cs
jecxz
sbb
push
scas
sahf
repz
mov
jge
rcrb
or
bt
es
in
push
pop
enter
sbb
pop
divb
sub
add
sar
mov
adc
xchg
or
out
ja
or
stos
cmpsb
mov
mov
jae
movsl
and
sahf
dec
jmp
adc
jbe
sbb
lret
rol
xchg
daa
sub
fwait
or
lds
xchg
jmp
mov
mov
cmp
mov
sti
arpl
fs
pop
push
mov
ficompl
int3
mov
int3
and
imul
inc
clc
scas
mov
cld
scas
pushf
rclb
gs
push
loope
push
xchg
ret
mov
mov
cmp
outsl
jne
into
int
stos
fisubl
dec
out
pusha
adc
cwtl
pushf
in
arpl
xchg
fnsave
ret
push
fwait
fwait
xchg
sbb
into
mov
mov
cmp
movsl
imul
mov
add
fcmovb
inc
lea
dec
inc
mov
mov
icebp
sbb
jae
mov
push
mov
push
dec
test
test
xor
popa
mov
push
mov
inc
mov
hlt
mov
mov
lock
xchg
adc
fnstenv
pop
and
sbbb
call
jp
xor
mov
aaa
jle
mov
inc
dec
mov
cmp
sbb
aam
mov
test
xlat
negl
push
add
and
es
inc
cmp
and
xchg
mov
mov
aas
sub
addr16
inc
movsl
jmp
mov
repnz
and
jae
or
push
dec
inc
push
std
and
into
mov
mov
cltd
cmp
push
xchg
loopne
divl
or
pop
std
push
jl
ja
movsb
pop
aaa
xchg
inc
loop
push
dec
push
adc
mov
jne
push
inc
xor
in
xor
cmpsb
cmp
fsubrp
mov
mov
lahf
push
mov
xor
js
cmpsb
movsl
out
mov
jno
xor
sbb
dec
pop
pop
jne
mov
and
lret
mov
xchg
cmp
movsl
enter
sbb
in
dec
mov
xor
sub
leave
lcall
add
mov
add
insb
mov
push
mov
lret
lods
cmpsl
adc
pop
out
ret
pop
data16
push
loope
pop
hlt
push
jecxz
aad
cwtl
pop
pop
gs
push
add
repnz
fbld
in
and
cmp
pop
adc
mov
sub
cs
mov
in
sub
and
mov
ljmp
notb
cmpsl
jb
push
xchg
or
sbb
adc
pop
jbe
push
jbe
and
int
fisubl
arpl
mov
sbb
push
shl
push
and
ffreep
add
aad
xchg
out
push
lahf
lret
push
mov
cli
pop
xor
loop
xchg
xor
in
cmp
xchg
stos
push
int
scas
mov
jnp
ss
popf
add
fdivs
sub
jno
insl
pop
sub
mov
int
adc
cmc
sub
and
dec
ss
rorb
mov
cmp
cmp
stos
cmpl
fiadds
leave
sbb
dec
sbb
int
scas
faddl
xor
and
loope
es
mov
dec
push
push
into
shll
inc
xchg
sbb
rcrl
dec
jbe
cwtl
add
xlat
or
fiadds
xor
push
sbb
into
rcr
andb
ficompl
mov
out
aaa
fwait
arpl
lods
adc
clc
sti
shlb
rclb
roll
dec
mov
mov
adc
repnz
and
loopne
imul
push
out
data16
adc
fdivrs
sub
or
faddl
ljmp
out
xorl
push
sbb
repz
scas
lock
jns
adc
sub
fsubl
pop
loope
xchg
xchg
pop
cmp
je
into
push
fs
js
repz
inc
mov
mov
fstpt
sti
mov
popf
cld
mov
push
mov
sti
mov
leave
movsl
sbbl
gs
and
addr16
shl
sti
orl
lahf
mov
cmp
sti
loope
shl
jmp
lret
lret
xor
gs
xor
mov
jg
push
popf
inc
sub
fs
push
lea
sbb
arpl
pop
jb
sub
repnz
push
push
jbe
sub
lds
sahf
xor
pop
out
add
stc
pop
pop
fidivl
cmp
jno
fimuls
in
xchg
ljmp
iret
or
jne
and
mov
adc
jg
mov
xor
mov
hlt
imul
popf
mov
addr16
fucomp
sub
mov
lds
icebp
repnz
ret
xchg
fisubs
addr16
mov
gs
xor
rcr
sub
fldlg2
xor
pop
lods
jecxz
lock
loopne
outsl
xchg
push
test
mov
cmc
pusha
and
push
cmpsb
ret
outsl
sub
mov
test
sub
aad
xchg
pop
or
and
nop
in
adcb
and
inc
push
clc
add
addl
adc
sub
mov
nop
mov
stos
cwtl
xlat
mov
bound
in
jg
lcall
adc
in
pop
xor
int3
es
mov
and
les
imul
or
es
xchg
fldt
stos
xchg
les
sub
shll
es
mov
rcl
cmp
push
pop
mov
dec
jecxz
leave
or
cmpsl
jp
scas
out
mov
xchg
or
xchg
dec
cld
jbe
xchg
cmp
mov
cmp
jmp
or
jmp
mul
mov
fwait
int3
push
stos
subl
movb
in
lods
cmp
int
dec
or
jne
push
inc
out
out
test
lret
sub
out
test
pop
xor
or
jns
out
adc
aam
test
mov
test
int3
xor
xor
in
push
data16
mov
jns
imul
mov
mov
add
add
lods
inc
dec
mov
iret
mov
leave
gs
jno
inc
in
stos
adc
aas
xchg
xor
push
dec
cwtl
in
xchg
fcomps
mov
mov
xor
xor
scas
dec
adc
out
loopne
out
repnz
adc
hlt
and
xchg
xchg
xor
sahf
popa
add
insl
push
movsl
sahf
pop
imul
push
push
lahf
jae
jno
test
or
push
xchg
jno
jbe
jae
dec
jne
scas
jp
notl
dec
fstl
mov
mov
stc
cmp
and
inc
leave
in
orl
or
and
adc
fistpl
sbb
sbb
gs
mov
push
add
or
sub
push
fists
push
mov
lds
das
or
bnd
fcomip
scas
xor
mov
ret
cmp
iret
mov
or
add
std
push
mov
xchg
xlat
xchg
jbe
mov
dec
fists
imul
loope
push
push
jl
je
gs
push
mov
jb
dec
sbb
lret
mov
and
push
lock
mov
sbb
in
mov
cmp
add
xchg
mov
push
test
sbb
xorl
cmp
and
stc
fisubs
data16
iret
repz
fbld
xchg
jp
pop
faddl
repz
bound
sbb
loopne
push
lahf
cmp
insl
ds
roll
inc
xchg
inc
fadds
das
mov
push
pop
jecxz
ja
mov
sub
xchg
inc
jmp
test
cmp
adc
mov
inc
fmuls
lret
inc
xor
fdivrs
std
and
ror
and
enter
pusha
jbe
jg
ret
push
mov
push
dec
or
cmp
and
adc
das
in
pop
and
mov
push
or
xor
inc
mov
jno
mov
scas
lock
dec
lret
mov
pop
dec
pop
sub
dec
test
fs
ss
pop
sub
fisubl
sbb
sub
hlt
inc
dec
push
addb
imul
movsb
lahf
push
gs
je
in
jge
out
or
bound
popf
inc
stc
aad
dec
outsl
rcl
aam
xorl
fsts
test
cmp
sbb
std
and
inc
and
inc
xchg
or
int3
leave
clc
and
ret
cld
in
push
sub
test
fwait
jmp
jmp
popa
cld
cmp
inc
pop
cmpsb
cmp
push
push
inc
sbb
cmp
fisubrs
inc
and
loope
adc
inc
adc
jnp
fdiv
adc
jb
mov
add
sti
test
mov
and
pusha
lcall
mov
mov
sbbb
stos
das
add
mov
icebp
cltd
jnp
lahf
dec
movq
pop
ret
sbbl
imul
mov
and
xchg
mov
mov
add
loopne
pop
dec
test
jae
push
and
cld
lcall
jne
xor
cltd
mov
push
dec
cmp
mov
inc
mov
fsubl
mov
cld
je
mov
add
lret
push
clc
leave
mov
icebp
insb
outsb
mov
lret
neg
loop
dec
mov
sbb
adcb
dec
jg
dec
mov
ret
mov
dec
push
mov
fmul
in
clc
mov
sbb
xchg
adc
xor
mov
shll
adc
jnp
stos
sub
cltd
into
and
mov
mov
push
call
bound
sti
pop
jo
pop
sub
adc
outsb
pusha
mov
push
leave
call
fistps
push
push
mov
dec
out
mov
push
es
mov
dec
add
in
out
push
xacquire
fstpl
push
mov
pop
push
jl
out
jge
sub
xor
int3
mov
or
stos
xchg
out
int3
mov
test
or
adc
inc
sbb
movsb
insb
insl
mov
cmp
aad
pop
ret
pop
push
enter
xchg
or
test
insb
dec
cmc
sbb
push
jno
les
and
cmpsb
and
dec
cmp
sub
sahf
cmc
cmp
sbb
xchg
pop
mov
aam
jecxz
jmp
sbb
lock
out
cli
mov
and
mov
push
xchg
pop
fscale
and
sub
repnz
outsl
xor
push
sub
movsl
xlat
sbb
fstl
bound
out
cmp
jo
es
xchg
push
sbb
out
xlat
add
fwait
mov
jmp
in
mov
cmp
bound
enter
sbb
repnz
mov
push
rolb
dec
pop
adc
lods
sbb
mov
lods
ds
xchg
lret
mov
orb
mov
xor
loopne
mov
xchg
push
or
adc
dec
pusha
das
pop
push
xor
ret
arpl
xor
mov
push
sub
adc
out
mov
out
data16
addr16
enter
jns
movsb
call
ljmp
stc
pop
cmp
imul
cmp
mov
push
insb
addl
sbb
dec
lock
jmp
jg
aam
xchg
sbb
xor
or
adc
mov
dec
aas
pushf
xchg
dec
cmp
pop
out
mov
in
in
mov
add
mov
call
aad
bound
adc
mov
jmp
xor
cwtl
cltd
loopne
idiv
insb
in
popf
aas
mov
dec
nop
in
punpcklbw
mov
scas
outsb
or
jle
mov
adc
popf
sti
mov
ret
hlt
and
test
enter
fs
inc
mov
test
clc
ffree
insb
aad
out
repnz
repz
dec
xchg
sbb
and
sbb
push
cmc
arpl
cmp
inc
frstor
xlat
hlt
fcompl
jmp
faddp
std
outsb
add
inc
dec
mov
enter
jne
aam
dec
push
xor
adc
or
xor
push
cmp
test
ds
icebp
js
js
in
mov
and
shl
mov
and
gs
aaa
push
fstl
jmp
push
outsl
fiadds
mov
pop
xor
push
ret
add
fdiv
into
sahf
cmp
sti
les
xchg
je
sbb
or
aam
cmp
test
shr
aaa
loopne
fstl
lea
sarb
rcr
call
inc
ss
clc
mov
fsts
outsb
outsb
add
sahf
inc
popa
add
iret
mov
add
xchg
scas
push
pop
scas
sbb
int
cwtl
xor
std
aaa
dec
or
cmp
js
mov
jbe
out
pop
out
aam
cmp
rolb
cltd
or
repnz
or
push
dec
ret
jno
in
arpl
pop
cmp
outsb
cmp
jp
out
adc
push
mov
popf
adc
inc
sbb
pushl
cmpsl
into
add
mov
adc
loope
push
repz
sub
xchg
loopne
sbb
xchg
ret
mov
push
icebp
xor
inc
sbb
aas
sbbb
dec
lds
mov
nop
xchg
inc
dec
dec
jl
jg
xchg
jge
inc
xor
xor
pop
and
add
sbb
nop
movsb
test
aaa
jns
add
adc
push
lods
pop
mov
mov
jns
adc
arpl
loope
fmulp
push
sbb
push
mov
inc
push
arpl
call
and
or
dec
add
cmp
mov
sub
outsl
dec
je
test
mov
push
or
mov
arpl
push
jo
mov
testb
out
dec
test
fildl
pop
ret
lods
and
mov
sub
jne
dec
icebp
push
inc
lahf
nop
or
lea
push
mov
dec
je
outsl
jae
cmpsb
cltd
mov
cmc
insl
jg
xor
or
call
cld
push
mov
aaa
cmc
inc
mov
cmp
xchg
xor
gs
cmp
adcb
push
mov
inc
mov
sbb
sub
jnp
push
xchg
mov
ljmp
pushf
inc
mov
std
stos
pop
loopne
xchg
shrl
add
add
sub
cmpsl
mov
and
sarb
arpl
inc
icebp
movsb
sub
std
lahf
daa
cmp
ror
jg
jo
inc
jle
imul
mov
sbb
sub
popa
dec
and
fucomip
fs
in
je
jns
es
and
ret
mov
or
sbb
mov
idivl
cmp
jecxz
push
incl
adc
xchg
inc
testl
mov
and
subl
jo
mov
loope
sub
mov
fiaddl
cltd
adc
test
mov
stos
inc
cmp
jp
in
pop
mov
sbb
stc
and
cwtl
imul
mov
test
sbb
jmp
ds
cmc
jp
mov
std
jo
pushf
stc
cmp
sub
shlb
pop
out
adc
mov
mov
dec
cmc
das
xchg
jbe
xchg
mov
jo
pusha
push
icebp
gs
push
xchg
pop
ret
mov
mov
fbstp
movsl
xor
sbb
or
inc
lock
adcb
jb
sub
inc
mov
daa
inc
pop
loope
jae
mov
das
cmp
mov
dec
jg
std
int3
xchg
or
sub
mov
dec
pop
rcrl
sbb
nop
rcrb
call
xchg
cmc
adc
mov
int
popa
and
pop
je
xor
lret
mov
out
sub
inc
imul
divl
js
lcall
pop
imul
adc
mov
sub
jno
testb
adcl
sbb
add
xor
jns
out
sahf
js
arpl
dec
iret
std
clc
std
jne
in
aad
dec
cmp
cmp
add
imul
dec
xchg
dec
aad
cltd
mov
pushf
mov
push
out
cwtl
or
int
mov
scas
insb
jnp
push
and
pop
lahf
mov
sbb
fisttpll
lret
test
lea
pop
xor
pop
test
mov
inc
jle
xor
imul
ror
outsl
fs
and
fisttps
sahf
jnp
jge
fptan
je
mov
enter
fnstsw
inc
fsubrl
int3
mulb
jmp
shrb
adc
ret
xor
pushf
or
ja
pop
or
dec
stos
popa
xor
cmpsl
xchg
in
fdivs
adc
and
outsb
cmp
sub
bnd
ficompl
push
and
mov
jne
push
xor
lcall
or
jmp
xor
insl
xchg
cmc
mov
int3
mov
add
mov
inc
pushl
call
shrb
push
popa
xor
neg
aas
adc
lods
jmp
and
push
push
mov
push
shl
jmp
inc
fildll
and
lods
cmp
bound
out
add
sbb
pop
shll
jle
push
or
add
movsb
push
pop
sub
leave
outsl
sub
fadd
sub
imul
dec
gs
test
cli
aas
xchg
pop
pop
mov
enter
pop
es
cmp
int
mov
incb
xchg
pop
test
jno
arpl
cmpsl
mov
push
insl
cmpsl
xor
sbb
add
and
mov
jp
popa
imul
mov
test
jg
popa
ret
and
adc
cmp
ds
cmp
nop
push
and
pushl
or
push
dec
testb
bound
or
outsl
inc
aas
sbb
aam
or
mov
adc
notb
pop
shll
test
in
loop
inc
xor
dec
insb
sub
cmp
rorl
jge
nop
repz
mov
dec
mov
fmull
aam
jno
mov
dec
mov
inc
icebp
stos
xor
add
rcr
inc
jne
sub
fsts
dec
cmpsl
jo
sub
mov
dec
mov
jns
cmp
lahf
sbb
push
cmc
cmp
add
mov
push
xor
daa
insl
pop
fistps
jmp
addr16
mov
nop/reserved
stos
xchg
bnd
inc
cmp
lods
addb
shlb
or
jo
add
in
nop
movsl
es
mov
mov
mov
mov
xor
addb
test
cmpsl
enter
push
loopne
dec
cmp
jnp
push
mov
sub
dec
xor
dec
insb
push
pop
xchg
int
cmpsl
mov
test
arpl
push
inc
clc
mov
out
mov
out
stc
pop
push
insl
or
nop
push
xor
inc
push
mov
shlb
fdivl
lea
stc
adc
jl
loopew
roll
sub
cmp
sbb
mov
inc
mov
popf
push
loopne
lock
and
sbb
push
or
and
xor
daa
outsb
mov
stos
repnz
test
xor
or
xchg
test
scas
nop
push
pop
push
outsl
push
negb
mov
jbe
in
repz
pop
jbe
ret
xchg
jo
inc
loop
dec
jp
jne
push
std
int3
popf
and
xor
xlat
dec
adc
pop
dec
andl
insl
adc
iret
roll
lods
push
jbe
imul
dec
add
push
dec
adc
jmp
sbb
mov
and
mov
cmp
pop
and
xor
xchg
insb
aad
test
and
sub
pop
cltd
dec
mov
sub
shll
xchg
pusha
mov
inc
add
cs
add
bound
sub
enter
mov
push
icebp
sbb
iret
sbb
aas
lahf
dec
popf
repz
fisttpll
sbb
cmp
movntq
push
sub
aad
aad
in
int3
sub
add
jne
inc
int
inc
xor
subb
jecxz
sbb
movl
out
xor
call
xor
addr16
cltd
or
std
icebp
pcmpgtd
push
and
push
ss
fisubs
mov
das
insb
push
cmp
mov
and
cmc
scas
jae
mov
xchg
or
data16
add
adc
jo
jmp
in
jo
jg
mov
fildl
cwtl
jmp
ficompl
daa
jne
inc
imul
push
shlb
xchg
cld
xorb
mov
xor
notl
insl
dec
in
and
sub
shr
out
fiadds
fisttpll
imul
mov
push
pop
loop
xor
jl
sbb
mov
or
popa
mov
or
cwtl
or
aam
ds
xchg
pop
leave
lcall
int3
data16
hlt
loop
bswap
movsl
pop
test
mov
dec
rorl
sahf
leave
ja
mov
sbbl
lret
loopne
ja
fistpl
fnstsw
addr16
jnp
push
cmpsl
pop
inc
add
pop
cmp
movsb
sahf
dec
adc
rcr
add
push
lret
push
loope
stos
stos
and
std
outsl
push
ds
pop
clc
mov
mov
fdivp
popf
sub
sbb
dec
movl
es
adc
sub
or
or
push
cmp
outsb
pusha
xor
testb
adc
pop
inc
adc
cmp
dec
sbb
es
movsb
fistpll
pop
mov
dec
xor
pop
repnz
arpl
push
push
xor
jg
popf
js
ds
ljmp
mov
xor
cmpsb
cmp
add
iret
mov
xor
xchg
pop
inc
inc
jbe
cmpsl
loop
jbe
outsl
scas
icebp
xorl
out
or
cmp
scas
xchg
andb
shlb
insb
out
cwtl
inc
test
out
sahf
push
test
cmc
ret
hlt
xchg
mov
lret
ja
sbb
cmpsl
imul
test
arpl
lret
xchg
gs
idivb
fsubrp
movsl
mov
jecxz
bound
fsubr
mov
xor
les
inc
mov
dec
push
mov
je
orl
lret
mov
insb
das
pop
mov
bound
mov
scas
int
xor
fs
adc
mov
fildll
jmp
repz
push
xchg
sbb
fs
sub
loop
out
add
mov
jge
cmp
mov
imul
iret
mov
outsl
dec
add
mov
mov
pop
mov
fstps
push
data16
inc
pop
push
cli
fimull
fnstcw
push
and
mov
push
pop
pop
push
enter
jmp
out
push
daa
and
xchg
lock
clc
xchg
loop
jnp
aas
push
sbb
cld
mov
popa
sbb
push
in
push
or
and
jmp
mov
and
jmp
jnp
stos
test
fadds
xor
sub
add
dec
scas
add
xchg
ds
lret
movsl
xchg
into
popf
cmpsb
lcall
sbb
call
shlb
sub
ffreep
pop
xchg
iret
mov
ja
lret
call
sbb
imull
sub
insl
loop
bound
aaa
pop
jecxz
push
jmp
sbb
shl
pop
add
fcomp
push
sarb
addb
mov
rcrl
mov
pop
sub
mov
inc
jge
hlt
ljmp
outsb
mov
xchg
sbb
adc
xor
mov
xchg
push
inc
push
enter
sbb
shlb
jp
sub
outsl
into
xchg
add
push
out
mov
adc
aaa
mov
rorl
popf
mov
fdivrl
push
loope
mov
outsl
les
shlb
in
cmp
lock
xchg
addl
inc
or
ret
cmp
aam
fs
or
clc
cmp
add
mov
repnz
fcmove
pushf
cmp
les
jmp
lahf
mov
mov
cmpsb
icebp
push
pushf
inc
dec
vpavgw
xor
mov
popf
adc
loope
add
nop
sub
push
pop
pop
sbb
inc
fnsave
mov
push
xor
mov
ret
je
push
cmp
lea
test
dec
aam
stc
xchg
fidivrl
add
sbb
xor
xchg
add
les
fadds
add
aas
lock
and
mov
pop
jmp
fwait
jb
sub
bound
jno
pop
pushf
xchg
add
xor
push
test
fs
je
addr16
jp
sti
les
adc
lock
cmp
sub
jp
xor
mov
ret
xor
mov
sahf
clc
pusha
mov
mov
xchg
dec
es
dec
mov
and
in
and
loopne
and
into
cld
cmpsb
inc
arpl
into
jne
add
dec
mov
daa
in
xchg
sti
xchg
xchg
inc
in
adc
add
loop
adc
out
push
lcall
pop
addr16
rcll
push
pushf
test
add
dec
cmp
outsl
jle
loopne
dec
fdiv
xchg
leave
cli
addr16
fbld
js
fwait
arpl
iret
fistpll
stc
adc
cmpsb
mov
lods
roll
repz
rcll
ljmp
and
aam
and
adc
call
sub
aaa
cmpsl
std
stos
mov
fisubrl
dec
xor
mov
sbb
cmp
add
inc
frstor
jo
jp
outsl
aam
imul
imul
in
and
mov
scas
or
jge
add
or
sbb
adc
pop
mov
ficoml
sub
xor
ret
out
jp
int
xor
iret
xor
push
test
mov
fldcw
push
xor
pushf
xchg
dec
pop
stos
jmp
stos
lods
xlat
inc
mov
hlt
mov
rorb
xchg
sahf
insl
and
sti
clc
movsb
rolb
jae
adc
xor
xchg
mov
mov
adc
fwait
gs
jg
cmpsb
push
sub
popf
sahf
shll
pop
outsb
scas
outsl
negb
es
cmp
mov
enter
popa
cmp
jle
dec
lahf
mov
jp
loope
loopne
ja
cmp
and
sbb
hlt
inc
and
es
out
xchg
dec
in
xchg
fs
dec
stos
and
push
stos
pop
jae
pop
nop
jg
fimull
mov
pop
fs
mov
pusha
inc
in
es
xor
addb
outsl
xor
mov
lahf
push
pop
pop
jge
inc
sub
xor
sub
ljmp
jne
stc
lret
mov
mov
mov
mov
inc
mov
out
cmp
inc
flds
jno
adc
enter
popf
subb
xchg
push
pop
call
cs
leave
mov
inc
adc
ja
inc
repz
cmp
mov
leave
cwtl
jo
hlt
mov
and
adc
xchg
mov
jno
subb
xor
fs
arpl
test
sbb
mov
repz
cmpsb
mov
adc
pop
nop
rcl
movsb
mov
mov
lds
bound
adc
push
sub
dec
icebp
jmp
pxor
xor
mov
sub
filds
push
xorb
push
sbb
jb
leave
lahf
into
push
mov
xor
in
shl
xchg
idivb
push
repnz
mull
fbstp
pop
sub
pop
insb
or
and
mov
cld
ret
mov
pop
jnp
pop
push
ret
negl
dec
rcrb
leave
std
icebp
cmp
cmp
dec
adc
dec
dec
pop
aam
insl
push
je
xchg
cmp
mov
fs
sbb
sbb
mov
int3
insb
outsb
pop
addr16
aas
sarb
and
xchg
or
repz
jg
cli
pop
ss
testb
pop
and
sahf
repz
jno
call
ret
stos
out
xchg
pop
testl
push
ljmp
lds
shlb
xchg
movl
adc
mov
pop
out
rorb
adc
cmp
mov
jecxz
roll
mov
out
sbb
sub
nop
scas
ljmp
pop
inc
enter
lods
mov
dec
bound
mov
sbb
add
sbb
scas
lcall
xor
jmp
scas
out
jo
push
or
sub
mov
ret
add
sbb
out
push
mov
xor
pop
imul
leave
popa
push
jmp
add
sub
int
inc
test
adc
push
aad
das
mov
or
pop
sub
pop
sti
pop
jb
into
lcall
or
stos
add
sbb
lock
cmpsb
pop
ficoms
or
or
arpl
mov
xlat
push
push
sub
addr16
xor
push
cmpsl
sbb
push
jge
and
fstps
pop
sub
jbe
and
ljmp
dec
popa
jle
stc
sub
jb
xor
cmpsb
sti
ss
cmp
fnstcw
mov
loop
ds
fstpt
adc
sbb
out
or
icebp
shlb
sbb
push
into
nop
xor
mov
mov
xor
divl
mov
push
aaa
mov
and
dec
or
adc
mov
push
sub
inc
cmp
inc
icebp
cld
aam
pop
adc
xor
xchg
movsl
sbb
clc
mov
mov
mov
push
dec
inc
xor
lahf
repz
aam
std
lea
call
rcrb
daa
outsb
ret
push
fldcw
and
push
dec
stc
and
std
ret
ljmp
cmp
and
mov
pop
roll
orb
cmp
outsl
imul
inc
sti
lahf
dec
pop
or
xlat
ss
mov
daa
in
lret
flds
out
mov
enter
pop
xor
pop
xchg
sub
ret
mov
faddl
cmpb
mov
fcompl
cmpsl
sbbb
loopne
std
pushf
pushf
push
cmc
rcrb
jp
arpl
cmpsb
cmp
jg
clc
fcomps
dec
pop
mov
jbe
lahf
push
scas
add
shrd
mov
cmpsl
mov
lods
rcrb
call
cmpsl
jb
ret
and
dec
cltd
add
push
enter
mov
pop
enter
sar
push
out
sub
jl
sbb
push
fnstsw
and
pminsw
iret
jnp
mov
xchg
mov
ljmp
mov
xor
int3
idivb
or
sub
jb
xchg
adc
mov
mov
xor
xchg
notl
loopne
sub
rorl
cmp
je
cli
push
and
in
popa
nop
fs
xor
insb
mov
dec
out
das
js
gs
out
iret
push
inc
leave
mov
or
sub
xor
fxch
lret
lahf
lea
xchg
or
or
mov
jns
cmp
xchg
cmp
in
jmp
sarl
adc
ret
popf
jnp
sti
jb
jno
fnstsw
jle
fidivrl
fsubl
test
add
mov
sub
jbe
hlt
in
cmp
mov
ss
dec
nop
lea
stos
xchg
notb
mov
and
repnz
sub
pop
roll
fbld
and
lcall
sub
xchg
les
jae
mov
mov
and
mov
in
lods
sbb
xchg
jmp
clc
mov
add
test
fwait
outsl
lret
pop
xor
cmp
lods
fisubrl
add
and
push
and
mov
xchg
and
cwtl
cltd
cld
adc
push
inc
ret
push
or
mov
pop
imul
xchg
mov
imul
adc
jg
mov
popf
jne
pusha
call
push
scas
add
stc
xorb
pop
int3
and
push
mov
in
add
stos
pop
call
mov
xchg
xchg
cmp
xchg
negb
pop
cmp
and
xchg
xor
dec
fiadds
ret
mov
stos
sbb
sbb
mov
or
leave
cs
aaa
mov
sub
push
adc
shlb
rcll
in
xor
add
sbb
mov
ds
incb
pop
cs
fidivrs
cmc
cmp
js
jge
dec
das
test
sub
bound
cmp
inc
dec
push
nop
xchg
cs
dec
repz
cmp
xchg
mov
sub
inc
jnp
sub
jb
cmp
adc
mov
mov
lret
jp
push
pop
shl
aaa
and
insl
daa
push
pop
cmp
cmpsl
sub
cmpsl
lcall
stc
mov
dec
jl
xor
lock
in
mov
daa
das
sbb
mov
cmc
pop
sarb
iret
xlat
cmpsl
lea
adc
push
mov
clc
pusha
clc
aad
pop
push
cld
pop
lea
mov
sub
aad
in
cmp
jg
xchg
in
inc
pop
pop
push
adcl
mov
mov
repnz
mov
jne
dec
sub
cld
nop
cmp
loopne
pushf
sbb
loopne
inc
aam
test
cmp
lods
sbb
shrb
into
shr
add
push
or
fstpl
add
push
jnp
repz
dec
hlt
mov
aaa
pop
dec
jle
lret
mov
aad
xor
cmc
cld
inc
inc
test
rol
into
ret
xchg
dec
sub
ss
daa
xchg
and
xchg
push
cmc
ljmp
or
cmp
mov
subb
test
jbe
xor
out
mov
sbb
cmpsb
and
jmp
outsb
add
in
inc
js
or
lahf
cmp
dec
and
lock
je
xor
jg
sbb
sub
mov
imulb
bound
lds
fidivs
jo
mov
fldl
sub
popw
and
lret
xor
push
rorb
and
sbb
push
movsb
push
xor
dec
inc
arpl
jecxz
pop
mov
xchg
sub
mov
jle
lds
rcrl
in
cmovae
add
mov
xchg
dec
bound
setno
stos
jle
gs
sbb
sbb
mov
pop
push
mov
mov
add
xchg
push
add
adc
adc
sub
int
dec
jge
sti
fimuls
aad
or
and
addr16
mov
jo
dec
and
aaa
push
and
out
cmp
fdivrs
jg
push
or
bound
push
out
arpl
dec
push
out
mov
ss
jnp
dec
sub
mov
xor
dec
mov
pop
inc
add
mov
out
pop
mov
inc
sbb
jns
push
jl
jne
ss
std
sbb
xchg
or
xchg
adc
enter
or
or
lock
leave
cmc
dec
inc
add
adc
aaa
sbb
js
test
sbb
imul
addb
mov
std
sbb
sbb
inc
out
mov
out
mov
mov
xor
mov
jle
in
cmp
jle
xchg
stos
or
daa
add
jl
aad
insb
jmp
sbb
add
rol
cmp
jo
aas
repnz
stos
mov
fsubr
gs
dec
ret
cmc
cli
sti
pop
xchg
gs
into
pop
sahf
adc
adc
sarl
hlt
cmp
xchg
je
inc
lcall
int
or
stos
lods
sbb
cmp
fadd
add
xchg
xor
sbb
icebp
mov
and
or
ss
leave
push
jno
xor
out
mov
xor
scas
sbb
fidivrs
into
movsl
std
fdiv
push
jle
mov
mov
fsubp
pop
sbb
jmp
ss
out
mov
inc
imul
mov
adc
sbb
jns
stc
pop
mov
lahf
mov
jbe
mov
sbb
push
inc
mov
shlb
sbb
addr16
sbb
xchg
mov
in
stc
cmp
dec
fsubrs
lds
add
insb
cmp
xor
adc
push
ljmp
mov
push
and
sbb
adc
je
push
into
jns
sbb
sar
fisttps
sahf
test
fcompl
mov
sbb
paddusb
dec
movsb
test
push
cmp
mov
jne
xchg
js
icebp
lretw
push
xchg
test
xchg
dec
jle
dec
rol
sbb
addb
fucomip
inc
out
dec
lock
lods
insl
adc
pop
lds
les
push
jmp
sbb
cmp
mov
repnz
cmp
push
dec
loopne
test
lock
clc
fsubs
lods
push
or
insb
jo
pop
xor
mov
aas
push
sub
stc
repz
mov
cmp
cmpsb
out
int
ret
call
push
mov
push
jecxz
popa
and
insl
xor
cmpsb
enter
shrb
arpl
cwtl
stos
mov
cmp
and
add
daa
les
movsb
pop
fisubl
divl
mov
or
push
cmpsb
cmc
and
pop
popf
cmpsl
sbbl
push
shl
sub
not
idivb
or
inc
xchg
sbb
dec
pop
adc
cmp
push
arpl
push
lods
sub
daa
push
dec
jp
lods
jmp
out
rcl
cmc
or
hlt
aad
cmp
jb
cltd
push
out
fisubl
push
addr16
clc
jp
out
fdivrl
push
loopne
test
pusha
push
xchg
sbb
pop
mov
mov
call
push
sub
adc
out
sub
jns
sub
mov
gs
cltd
cmp
shll
cmp
lods
pushf
lahf
ret
and
notl
rcrb
sarb
pusha
xor
mov
pop
and
xor
xchg
cmp
js
lcall
popf
mov
pop
lds
into
jecxz
push
out
orl
jecxz
scas
mov
or
sub
es
clc
xor
outsl
dec
lret
push
xlat
loopne
insb
mov
int3
fsubrs
xchg
and
push
inc
adc
add
sbbb
pushf
mov
imul
push
idivl
push
mov
dec
dec
in
jge
xor
mov
loope
bound
jae
adc
mov
mov
inc
int
push
xchg
sbb
gs
scas
rorb
rcrb
in
pop
mov
mov
lret
and
bswap
mov
out
and
dec
sub
cmpl
scas
sbb
lds
pop
std
shrl
fcomi
call
iret
pusha
pop
cmc
sbb
mov
pop
aam
aas
stos
push
shlb
shlb
dec
call
ja
scas
mov
insl
mov
mov
hlt
push
mov
adc
jl
dec
push
loop
ja
fistpll
nop
cmp
addr16
int
xor
dec
or
pop
inc
jmp
jno
and
lcall
mov
adc
ret
das
icebp
orb
lods
insb
fstpl
sbb
hlt
xchg
xchg
test
mov
test
pop
call
leave
outsl
adc
std
mov
aad
lahf
fsin
cli
in
sbb
enter
fidivs
mov
dec
add
sub
cli
inc
loop
pop
jg
hlt
jno
pop
sbb
lahf
test
inc
sub
push
push
outsb
mov
sub
pushf
hlt
call
push
dec
outsl
insl
fimuls
jo
mov
pop
leave
xchg
mov
mov
imul
jno
mov
call
mov
mov
mov
loope
mov
mov
mov
push
push
ljmp
nop
decl
jo
inc
push
push
cmp
xor
jecxz
jno
lock
xor
and
inc
xor
or
sbb
insl
mov
imul
push
mov
or
jge
test
xor
clc
imul
cmp
dec
add
icebp
or
sub
mov
sti
pop
in
stc
dec
es
dec
addr16
lret
and
sub
mov
repz
bound
pop
in
sti
adc
xor
mov
sbb
cmc
xor
in
mov
gs
fidivl
cs
aam
jbe
cmp
cmc
and
cmp
pop
shl
scas
xor
jge
xlat
fisubl
lds
pop
repz
jge
mov
mov
lahf
sub
ljmp
xchg
mov
push
push
add
mov
cltd
or
xorb
lods
idivb
imul
mov
stc
lock
stos
cmp
scas
jnp
repnz
mov
or
mov
dec
out
icebp
clc
cmp
jbe
lods
into
cmpsl
mov
pop
in
push
push
imul
sbb
inc
pop
jo
mov
pop
loope
movsl
mov
mov
cmp
aas
dec
fwait
xchg
mov
xchg
mov
sub
or
push
inc
andl
add
rcrl
jae
mov
sub
test
int3
adc
and
xor
imul
cmp
mov
fbld
ret
jecxz
inc
cmpsb
sub
cwtl
mov
or
sti
add
pop
add
inc
pop
pop
mov
add
jo
lahf
loop
inc
mov
xor
pop
add
push
in
sbb
jg
dec
lods
xlat
aad
and
sbb
push
ret
xor
pop
xor
pavgb
xlat
arpl
in
mov
or
insl
in
jns
pop
mov
and
pop
jp
repz
mov
mov
dec
shrb
ret
and
inc
insb
mov
jnp
sbb
push
fdecstp
pop
jb
aaa
xor
cmp
fiadds
jbe
jle
sbb
cmp
pop
add
movsl
sarl
cs
dec
js
hlt
shl
sbb
xchg
sub
pusha
sti
adc
incb
and
add
push
sbb
mov
insb
and
icebp
outsb
outsl
sub
xor
mov
outsb
push
xchg
pop
ja
dec
inc
das
rorb
enter
gs
in
pusha
pop
je
filds
rcll
inc
out
ljmp
xchg
mov
mov
sub
shlb
fldt
add
popa
data16
arpl
xor
insl
xchg
mov
jne
punpcklwd
cmp
out
out
push
fcompl
mov
or
xor
je
jb
sbb
rol
rcr
cmp
addl
xchg
xorb
xchg
push
or
divb
das
push
scas
mull
test
jnp
xor
mov
mov
sbb
scas
loop
add
and
inc
icebp
adc
mov
dec
jnp
inc
push
adc
ret
mov
mov
mov
andb
lods
daa
jmp
sub
int
mov
adc
jne
std
and
int
xlat
stc
xor
stos
pop
adc
mov
or
addr16
insb
ret
mov
pop
subl
mov
xor
fistpll
repnz
or
out
jl
or
adc
mov
fsubr
dec
aad
xor
mov
imul
scas
jno
in
push
pusha
in
pop
pop
das
ror
jae
push
or
loopne
sbb
xor
push
bound
sub
add
lcall
xchg
cmpsb
pop
sbb
icebp
add
mov
sbb
push
mov
test
push
outsl
sti
mov
rcll
icebp
mov
imul
pop
pop
repnz
dec
pxor
sbb
cmpsb
mov
xchg
sbb
cmpsb
jae
out
mov
cli
dec
pop
xor
xor
push
cli
and
mov
xchg
into
pop
xchg
sub
aas
lds
xchg
cmpl
dec
xor
mov
cld
inc
aam
and
enter
das
push
mov
inc
xchg
dec
in
xchg
mov
and
mov
or
cmp
dec
xor
inc
sbb
inc
dec
lea
inc
sbb
add
jmp
lods
push
or
mov
pop
mov
jg
in
mov
sbb
sub
dec
ret
lahf
jb
and
inc
mov
sbb
lock
dec
inc
test
ret
cwtl
mov
clc
popf
mov
cmp
mov
stos
loop
adc
ds
int
nop
int3
sarb
insb
faddl
mov
insb
xchg
dec
xchg
xor
shlb
xchg
push
xchg
test
addr16
into
lret
fcomi
repz
lock
cmpsl
adc
cmp
adc
jbe
and
adc
pop
cmpsl
iret
mov
push
out
mov
lock
popa
mov
add
shl
xor
fldl
int
cwtl
ret
or
and
in
adc
fnclex
dec
mov
xor
push
jle
ret
mov
mov
cmp
out
cli
mov
dec
js
fidivs
or
jno
movsb
push
xor
mov
lahf
cmp
cs
lock
test
int
mov
push
or
xchg
ss
add
pop
mov
les
rorl
or
out
push
mov
xchg
xor
add
outsb
sub
jg
cmp
gs
aaa
dec
cmp
inc
mov
xchg
push
cmp
dec
imul
in
mov
jle
cmp
cmp
aas
hlt
pop
jmp
inc
lret
sub
loopne
mov
sbb
add
or
xchg
out
pop
lods
xor
inc
mov
decb
pop
jns
imull
add
test
cmc
lret
sub
push
xor
insb
mov
mov
fs
addb
xchg
xchg
push
xor
xchg
bound
call
adc
push
jmp
ror
insb
aad
fwait
cli
dec
push
jmp
or
fimuls
popf
outsb
mov
adc
sub
jbe
test
js
fimuls
mov
loop
and
jle
fildll
dec
add
xchg
jecxz
jecxz
ljmp
decb
lret
pop
lds
sbb
std
or
xchg
int
adc
jecxz
pop
arpl
mov
adc
mov
xchg
sub
mov
fdivrs
pusha
xchg
scas
adc
cmpsl
movsl
pushf
dec
sbb
lcall
push
cmpsb
xchg
pop
cmpl
jnp
inc
rcl
mov
mov
repz
es
shlb
add
cwtl
insl
pop
mov
outsb
fsts
inc
mov
jle
mov
adc
cs
test
dec
cli
out
add
rcl
les
push
fisttpll
out
les
daa
inc
popf
push
sub
fwait
js
sub
jno
inc
or
add
and
mov
sar
xlat
pop
rorb
das
push
arpl
cmpsb
fcomip
mov
or
dec
pop
cmp
add
pop
cmp
lcall
movsb
cmp
fwait
lcall
add
roll
jecxz
lcall
push
sub
or
push
and
sbb
mov
inc
out
test
gs
jge
lahf
dec
xchg
repz
std
jno
fisubs
sbb
and
xor
ja
hlt
cmp
lds
sarb
mov
movsl
add
add
jns
es
xchg
cmp
aam
cli
sub
xor
sbb
mov
mov
cmp
push
mov
jle
inc
movsb
popa
xchg
dec
cmp
pop
and
leave
movsl
ja
clc
pushf
inc
mov
imul
mov
jle
sbb
ja
mov
mov
xchg
sbb
in
jp
test
and
sar
pop
dec
or
aas
xor
xor
fisttpl
mov
bound
push
out
sub
mov
aam
sub
xchg
call
push
test
int3
sti
pushf
pop
adcb
xchg
pop
enter
inc
in
or
in
int3
inc
aas
sar
movl
cld
ljmp
or
test
mov
pop
add
mov
data16
jne,pn
mov
jle
sbb
add
test
xorb
cmpl
xor
iret
mov
cmp
fstps
xchg
mov
insl
jl
aaa
pop
test
enter
shrl
mov
mov
test
ret
test
mov
add
cmp
nop
loop
push
scas
in
stos
add
jne
xchg
xor
dec
pusha
add
dec
jle
mov
.byte
pop
