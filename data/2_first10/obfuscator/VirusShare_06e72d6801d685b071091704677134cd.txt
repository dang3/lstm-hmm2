add
add
incl
add
mov
add
pop
add
add
pop
add
pop
add
add
add
jb
gs
xor
cs
insb
add
add
je
outsl
fs
gs
popa
outsb
fs
gs
add
add
fs
imul
add
add
je
jb
arpl
fs
jae
add
add
jb
jne
insb
inc
insb
insb
outsl
arpl
add
push
imul
jb
add
add
jb
jne
insb
push
jb
je
arpl
lea
push
mov
push
call
jle
pop
add
pop
add
add
pop
add
pop
add
add
add
cld
pop
pop
ret
mov
push
mov
pusha
mov
mov
cld
mov
xor
movsb
mov
call
jae
xor
call
jae
xor
call
jae
mov
inc
mov
call
adc
jae
jne
stos
jmp
call
sub
jne
call
jmp
lods
shr
je
adc
jmp
xchg
dec
shl
lods
call
cmp
jae
cmp
jae
cmp
ja
inc
inc
xchg
mov
mov
push
mov
sub
rep
pop
jmp
add
jne
mov
inc
adc
ret
xor
inc
call
adc
call
jb
ret
sub
mov
popa
pop
ret
lea
push
mov
push
mov
mov
mov
add
mov
add
mov
add
mov
pop
pop
ret
nop
jmp
inc
cmpb
jne
inc
ret
mov
add
ret
push
mov
add
push
push
push
mov
add
mov
mov
cmpl
jne
call
mov
call
mov
add
mov
add
mov
mov
add
mov
mov
add
mov
mov
add
mov
mov
add
mov
mov
add
mov
mov
mov
mov
add
mov
mov
mov
dec
test
jb
inc
movl
cmpl
je
mov
add
mov
add
push
push
call
add
add
incl
dec
jne
push
push
mov
mov
push
push
call
mov
mov
mov
add
mov
push
push
call
add
mov
jmp
lea
push
call
mov
cmpl
jne
push
call
mov
mov
call
mov
mov
add
mov
test
jbe
mov
movl
testl
jne
movzwl
push
mov
push
call
mov
mov
call
mov
jmp
push
mov
push
call
mov
mov
call
mov
add
incl
dec
jne
mov
cmpl
jne
mov
mov
add
mov
add
mov
push
push
mov
push
call
mov
mov
add
add
mov
add
lea
push
push
push
push
call
lea
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
int3
pop
pop
pop
mov
pop
ret
lea
nop
nop
nop
nop
pusha
call
nop
nop
nop
nop
ret
nop
nop
nop
push
nop
mov
push
push
push
mov
push
mov
sub
push
push
nop
push
pop
pop
pop
add
nop
pop
mov
pop
pop
nop
pop
pop
mov
nop
jmp
ret
nop
nop
push
mov
nop
push
push
push
mov
push
mov
nop
pop
mov
pop
pop
nop
pop
pop
mov
nop
nop
jmp
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
pop
pop
pop
add
pop
mov
pop
pop
pop
pop
mov
jmp
ret
push
mov
push
push
push
mov
push
mov
pop
mov
pop
pop
pop
pop
mov
jmp
ret
mov
nop
nop
nop
nop
nop
pusha
nop
nop
call
nop
nop
ret
nop
nop
jo
jno
call
add
add
add
add
add
add
add
add
ret
nop
nop
jo
jno
call
add
add
ret
mov
push
mov
push
push
push
mov
push
mov
sub
push
push
push
pop
pop
pop
add
pop
mov
pop
pop
pop
pop
mov
jo
jno
ret
nop
push
mov
nop
push
push
push
mov
push
nop
mov
sub
push
push
push
nop
pop
pop
pop
add
pop
mov
pop
nop
pop
pop
nop
pop
mov
jo
nop
jno
ret
lea
nop
push
mov
push
nop
push
push
mov
push
nop
mov
sub
push
push
push
pop
pop
nop
pop
add
pop
mov
pop
pop
nop
pop
nop
pop
mov
jo
nop
jno
nop
nop
ret
push
nop
mov
nop
push
nop
push
push
mov
push
mov
sub
push
nop
push
push
pop
nop
pop
pop
add
pop
nop
mov
pop
pop
nop
pop
pop
nop
mov
jo
jno
ret
nop
nop
nop
nop
pusha
nop
nop
call
nop
nop
nop
nop
nop
ret
lea
jo
jno
call
nop
nop
nop
ret
lea
int3
nop
nop
nop
nop
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
ret
nop
nop
nop
push
mov
push
nop
push
nop
push
nop
mov
push
nop
nop
mov
sub
push
push
push
nop
pop
pop
nop
nop
pop
add
pop
mov
pop
pop
pop
pop
mov
jmp
add
add
add
add
ret
nop
push
mov
push
push
push
nop
mov
push
mov
sub
push
push
push
pop
pop
nop
nop
pop
add
pop
mov
pop
pop
pop
pop
mov
jmp
ret
nop
push
mov
push
push
push
nop
mov
push
nop
nop
mov
sub
push
push
push
nop
pop
pop
nop
nop
pop
add
pop
mov
pop
pop
pop
pop
mov
jmp
add
add
add
add
ret
mov
nop
nop
push
mov
push
nop
push
push
mov
nop
nop
nop
push
mov
sub
push
push
push
pop
pop
nop
nop
nop
pop
add
pop
mov
pop
nop
nop
nop
pop
pop
nop
pop
mov
jmp
ret
lea
add
inc
add
rolb
pusha
inc
add
rolb
or
add
sub
add
jbe
add
cltd
push
add
les
add
push
push
add
pop
add
mov
add
add
add
add
xor
add
scas
add
add
add
add
add
adc
add
mov
add
add
add
addb
inc
test
add
add
add
inc
fdivrl
add
add
add
add
mov
add
add
add
add
mov
add
add
add
add
sti
add
add
add
push
push
add
pop
add
inc
add
adc
add
inc
outsl
adc
outsb
jo
roll
add
popa
insb
add
add
jb
stos
lea
sbb
and
popa
call
lcall
or
dec
outsb
sbb
mov
and
jg
rcrb
add
inc
jns
sub
insb
add
outsl
jb
add
inc
or
add
xchg
fadds
cwtl
shlb
push
push
je
cs
sbb
add
nop
xor
fs
or
adc
xor
cld
and
xor
pop
push
dec
bound
arpl
imul
mov
insl
sbb
es
dec
dec
fnstenv
popaw
arpl
pop
add
or
xor
add
and
add
jmp
or
enter
jg
mov
add
js
gs
insb
cltd
loopne
jno
mov
and
bound
mov
test
adc
ret
xchg
push
fs
push
mov
xchg
cwtl
inc
or
cmp
and
xchg
mov
aam
lods
jb
cmp
and
in
jb
cmp
and
enter
jb
cmp
mov
and
xchg
lock
jb
cmp
push
add
les
call
test
sub
je
movzwl
aaa
mov
cmp
pop
pop
sub
push
xor
pop
or
dec
jb
cmp
xchg
push
push
mov
cmpl
jne
push
push
call
add
rcrb
mov
add
or
add
mov
add
lea
add
push
mov
addb
cmp
jne
in
icebp
stc
adc
push
popf
pop
nop
mov
inc
add
mov
bnd
fsubr
popf
ds
test
dec
add
test
or
adc
bound
adc
push
add
lahf
mov
push
push
adc
mov
push
push
push
aas
mov
popf
adc
pop
call
add
push
pop
out
nop
lods
cmp
push
cmp
add
add
call
mov
sub
or
inc
add
jmp
add
cmp
xchg
jmp
jne
loope
call
lahf
and
push
mov
pop
push
clc
mov
sbbl
into
add
insb
call
xor
and
sbb
xchg
sub
fs
lds
inc
jmp
pop
idivb
add
iret
das
sar
xor
ds
stc
or
sti
inc
scas
and
in
lock
jae
or
jae
xchg
xchg
or
cmp
sbb
sti
stc
adcl
fiaddl
cmp
sub
mov
daa
mov
out
movsl
adcl
and
push
rorb
cmp
sarl
insb
dec
fs
dec
adcb
mov
sbb
stc
push
adcb
dec
mov
sub
popa
jbe
stos
push
lods
add
jne
scas
jns
inc
fs
sbbb
cmp
dec
ja
cmc
std
lods
bound
jg
dec
dec
adc
cwtl
jecxz
or
pop
pop
push
push
or
repnz
push
add
repz
ficompl
dec
repz
xchg
out
cmp
inc
xchg
movb
jnp
xor
push
xchg
jbe
mov
push
call
or
movl
rcr
sub
cmpsl
pushaw
add
sbb
cmpl
sbb
or
adc
sbb
adc
sub
hlt
mov
ljmp
add
in
fisttpll
and
loop
sub
sub
inc
jge
xor
pop
cmp
or
dec
sti
xchg
pop
jbe
sbb
mov
add
push
adc
add
fcoms
call
cmpsb
mov
adc
cwtl
jbe
or
xchg
cwtl
je
sub
mov
or
gs
sahf
jmp
jne
push
adc
or
sub
inc
movsl
test
cmp
idivl
ja
mov
mov
lods
shrb
add
cmpsb
mov
sbb
aaa
add
out
ror
pop
aam
dec
cmp
push
jg
dec
and
and
mov
je
incb
dec
mov
in
sti
xchg
xor
leave
and
movsb
das
jle
pop
int3
mov
xor
pop
movsl
pop
and
push
call
test
cmp
js
cli
aas
and
je
shlb
jne
mov
jle
fiaddl
adc
xchg
push
call
mov
xorb
aaa
or
push
aas
or
jne
mov
or
and
lods
jmp
mov
nop
xor
push
adc
jne
icebp
or
jmp
adc
sbb
jne
inc
dec
mov
jnp
jno
sbb
adc
push
inc
adc
dec
pop
dec
imul
and
lea
xorl
inc
or
fidivs
pop
mov
rorl
adc
stos
jecxz
jl
adc
je
mov
ret
data16
cmp
mov
movsl
adc
imulb
adc
and
xchg
and
push
mov
pushf
cmp
dec
pushl
int3
mov
test
sub
stc
addb
jle
dec
adc
mov
popa
push
addb
xchg
test
int3
cmp
inc
mov
cmp
pop
mov
add
rolb
repnz
or
sbb
clc
sbb
shrb
sbb
xchg
xchg
scas
push
mov
and
jmp
mov
outsl
push
dec
lahf
and
je
xchg
sbb
push
push
adcl
push
cmp
adc
cmp
aad
ds
mov
dec
add
mov
inc
jg
push
jne
adc
je
pushf
xor
idivl
fimull
aad
or
in
add
fistpl
add
cmp
or
adc
dec
or
jg
rorb
add
add
hlt
jmp
and
nop
fiaddl
mov
or
xor
les
or
mov
sub
jb
add
or
movlhps
adc
call
cmp
lret
add
sbb
fdivr
adc
jl
movl
mov
call
mov
ret
inc
or
or
pusha
mov
mov
sub
add
loop
lods
jg
pop
add
loope
gs
outsb
or
push
push
lret
sub
xchg
or
add
andl
adc
dec
fnstenv
loope
inc
or
push
je
sub
sub
push
and
scas
enter
xor
fwait
and
testb
aam
inc
inc
cmpsl
jb
or
cmp
push
les
inc
call
ficoms
fs
xor
add
jo
mov
pop
jmp
sti
fadds
and
add
repz
sub
push
andl
dec
cmp
add
nop
dec
xchg
mov
or
push
pop
push
dec
push
call
aaa
sub
call
jl
xlat
dec
jge
and
icebp
outsl
bound
sti
jmp
adc
scas
ljmp
inc
push
and
daa
cli
insb
lds
test
fildl
arpl
imul
call
dec
add
mulb
xchg
mul
call
dec
jo
repnz
fisttps
add
sub
dec
sbb
cmp
mov
cmp
adc
or
es
lahf
add
jmp
sar
inc
sub
pop
jg
sub
cmp
jl
xchg
push
inc
ljmp
xor
sbb
sbb
adc
xchg
or
pop
and
sub
xor
adc
add
mov
cltd
pop
std
rorb
push
nop
pop
loop
mov
cmp
movsl
xbegin
jmp
loopne
xlat
popa
mov
cmc
sub
or
pop
cmp
xor
testb
inc
add
add
or
xchg
je
or
add
call
pop
or
mov
pop
gs
shlb
xor
adc
pusha
push
icebp
push
call
inc
dec
mov
cli
push
mov
les
pop
mov
dec
ss
pop
daa
int3
lea
push
adc
xor
es
lcall
clc
add
xchg
je
les
stos
shlb
xchg
jbe
ljmp
mov
sbb
data16
xchg
popl
mov
inc
jle
or
js
pop
arpl
pop
je
jle
jmp
fcoml
or
call
ret
jne
sub
sbb
mov
movsb
sub
cmpl
nop
ficoml
xor
sub
sub
out
popf
xor
adc
add
dec
or
mov
mov
adc
xchg
call
jmp
sub
mov
dec
cmp
or
leave
pop
insb
in
stos
push
data16
xchg
das
shlb
sti
push
clc
mov
je
and
adc
jle
mov
jmp
ror
push
push
inc
xor
and
and
addb
in
sti
mov
sub
cvtps2pi
mov
and
movb
dec
scas
inc
nop
pop
adc
jne
sub
or
jl
xor
inc
mov
push
or
dec
or
imul
sub
adc
jb
jmp
sbb
mov
adc
sbb
sub
or
xchg
lcall
and
xor
dec
inc
sub
imul
std
lock
mov
mov
pop
mov
nop
and
cli
loopne
xchg
mov
idivl
push
clc
mov
mov
jmp
and
out
fstpl
push
test
add
inc
mov
mov
cmc
or
dec
or
les
mov
dec
push
add
pop
mov
popf
dec
push
or
stos
mul
call
or
mov
or
inc
nop/reserved
sahf
dec
add
sub
cwtl
clc
or
movsb
loop
clc
cmp
sub
jno
les
dec
xorl
fbld
xchg
inc
test
add
and
cli
add
cld
inc
or
aaa
orl
push
sub
sub
push
sub
or
in
push
ret
call
dec
xchg
adc
cli
sub
adc
and
or
shlb
ret
add
dec
mov
in
inc
fs
loope
or
lds
enter
or
add
pop
push
dec
and
mov
incb
das
jne
or
jb
pop
insb
adc
repz
inc
insb
push
inc
pop
and
mov
sbb
fdiv
add
jp
mov
sahf
aas
call
add
pop
adcl
into
ds
or
jl
js
bound
dec
addr16
inc
fsubl
jl
push
push
in
push
sbb
push
mov
push
and
push
add
aaa
jp
push
and
cmp
vpsubsb
loope
adc
and
ret
das
lods
clts
cmp
scas
clc
fisubl
call
xchg
rorl
dec
dec
rolb
inc
clc
jmp
cmp
movsb
loop
push
ds
cs
or
xchg
cmc
lret
xor
lret
or
or
push
sbb
sub
adc
and
repz
bound
xchg
repz
or
in
xchg
test
sar
addb
lcall
ret
fs
cmp
jge
sarb
lock
xchg
add
xchg
call
pop
repz
add
mov
sub
mov
insl
sub
jle
call
adc
iret
pop
dec
add
je
sbb
inc
je
inc
cmp
add
call
or
cwtl
sbb
mov
push
inc
and
sbb
cli
loope
in
xor
xor
test
out
in
adc
cmc
xor
out
nop
xchg
jecxz
cmp
cmpl
aad
sbb
inc
or
mov
in
cmp
and
mov
add
inc
nop
call
sbb
xchg
adc
test
mov
pop
clc
mov
fs
pop
pop
out
add
and
or
sahf
or
pop
or
cwtl
add
jmp
cmp
sbb
mov
test
lods
push
inc
xor
and
lcall
push
push
push
call
add
inc
or
lock
shr
mov
loop
xchg
mov
jl
jp
movb
push
je
subb
sbb
add
jg
sub
inc
inc
outsl
jl
test
rolb
add
jmp
mov
cmp
mov
loop
mov
inc
fadd
mov
push
xor
sahf
sti
jmp
rcl
js
mov
clc
push
sahf
add
divl
je
pushf
and
movsl
or
mov
mov
cld
call
sbb
std
cmpsb
sbb
inc
and
cs
or
adc
sahf
lds
add
and
out
cmpb
mov
add
add
out
in
cmp
push
xor
push
adc
or
or
roll
ljmp
cmp
sbb
sarl
ja
jo
or
call
ffreep
ds
jmp
cltd
jno
push
mov
adc
ret
jbe
or
inc
inc
lds
ja
jb
loope
pop
add
cs
push
cltd
shrl
cwtl
subl
inc
stos
imul
divb
push
mov
mov
test
mov
xchg
jmp
out
sub
roll
into
pop
push
adc
or
outsb
add
dec
jmp
mov
adc
and
fnclex
fldcw
mov
pop
adc
adc
sbb
into
pusha
push
add
or
psubd
and
fwait
mov
or
xor
cmp
out
mov
sbb
add
cld
mov
mov
jl
js
pop
add
xchg
add
or
sbb
xor
orl
add
and
lcall
mov
push
sbb
mov
mov
fs
or
mov
addr16
or
arpl
loope
mov
data16
jne
adc
push
sbb
xor
inc
or
and
je
movsl
loopne
mov
or
gs
push
leave
xor
sbb
lret
jle
cmp
mov
inc
inc
and
call
add
mov
rorb
inc
adcb
add
push
ret
ljmp
pop
cmp
fnstenv
dec
mov
dec
add
pop
cmp
aaa
cwtl
mov
or
dec
in
jmp
push
push
add
fistps
addb
sbb
push
cmp
xor
push
adc
dec
add
dec
iret
push
or
iret
fistpl
repnz
cmp
js
std
mov
aas
mov
add
adc
add
out
or
sbb
and
cmp
dec
outsl
jo
out
out
mov
or
or
dec
and
or
and
adc
iret
outsb
mov
jb
xchg
xor
int
stos
shl
data16
shll
xchg
or
stos
rcll
and
and
nop
pop
fstpt
mov
inc
jo
and
clc
mov
push
sub
sub
pop
inc
and
js
pop
jg
inc
push
xor
jne
sub
and
inc
inc
in
and
add
or
and
ja
cmp
clc
mov
add
sbb
fcoms
xor
out
int
or
outsl
hlt
filds
neg
jle
js
pop
aas
sub
or
fcompl
sub
test
add
popa
adc
add
or
push
aad
in
pusha
lcall
cwtl
lock
movsl
mov
stc
mov
push
inc
push
inc
cmpb
jne
repz
add
add
pop
leave
xor
xor
mov
adc
je
pop
adc
lea
or
cmc
cld
xchg
fisttpl
push
push
cs
fisubs
je
push
ja
push
or
jbe
das
or
popa
sub
and
and
or
push
scas
and
jge
inc
stc
and
adc
mov
stc
jo
fnstsw
xor
jne
fldz
mov
cmp
pop
or
mov
mov
add
ja
pushf
or
push
ret
pshufw
mov
adcb
mov
imul
leave
add
scas
or
mov
mov
movsl
aam
es
sub
test
hlt
and
mov
and
jecxz
addb
sbb
cs
shlb
imul
fimuls
and
mov
inc
bound
inc
add
xlat
fadds
lods
add
js
xchg
mov
or
or
push
in
int3
into
sbb
cmp
test
popa
push
pop
mov
ror
movsl
sbb
nop
mov
pop
stos
add
hlt
daa
lret
into
pop
hlt
test
or
pop
hlt
in
or
mov
dec
addr16
leave
repnz
rclb
outsl
cld
gs
sahf
mov
sub
imul
dec
aaa
pop
js
mov
add
stos
mov
cmp
jmp
xchg
test
stos
pop
add
jg
mov
add
daa
cmp
jl
xor
cmp
call
dec
mov
jle
push
inc
add
sarb
pop
jbe
int3
repnz
test
nop
fneni(8087
daa
cmp
clc
scas
adc
cli
pop
pop
pushf
mov
pop
inc
mov
fs
add
repz
loope
jp
jp
cmp
addb
fdivrs
mov
xchg
push
cmpsb
scas
mov
pop
pop
or
addl
xchg
cmp
xor
push
in
cmp
sahf
xchg
pop
add
push
movsl
mov
aaa
popa
jl
fadds
and
addr16
repz
mov
subb
add
mov
push
pusha
les
aad
bound
xor
ret
jmp
xor
popa
out
incb
cmp
jne
sbb
add
and
mov
or
fisubs
outsl
or
cs
hlt
movzwl
dec
jnp
addr16
lea
push
pusha
push
push
or
sbb
das
int
inc
dec
cmp
or
push
xor
mov
xchg
ret
ja
push
or
push
mov
mov
les
jmp
jmp
lret
ds
sar
mov
cmc
subl
loope
ret
leave
mov
or
push
pop
push
inc
push
sbbb
insb
popa
cmp
fs
push
dec
rolb
push
dec
popa
jae
push
mov
adc
jecxz
cltd
cmp
sub
fsubrl
jo
xor
add
push
inc
rep
gs
or
shlb
mov
inc
pop
or
dec
sbb
push
cmp
xor
cwtl
out
lds
dec
repnz
mov
adc
inc
fsubl
cmp
pop
fcom
and
mov
fs
in
clc
lahf
int
cmp
fmuls
rorb
lahf
add
cmp
cmpxchg
mov
adc
adc
jecxz
mov
xchg
or
push
pop
cld
dec
pop
mov
fdivs
rclb
pop
add
adc
in
mov
gs
mov
push
daa
pop
faddl
lahf
add
sbb
in
cmp
jle
repnz
add
jae
cmp
add
mov
sub
sbb
fnstsw
adc
fnstsw
ss
jp
add
call
fsubs
jne
inc
xchg
orl
push
or
jb
pop
pmulhuw
add
sbb
addl
adc
xor
and
mov
dec
je
mov
pop
cmc
cmp
lcall
dec
shl
insb
mov
aam
loope
loop
xor
adc
clc
mov
cld
and
push
sahf
ljmp
mov
wrmsr
jb
xor
sarl
dec
setne
lret
push
xor
mov
movsb
aaa
dec
or
push
cmpsl
mov
xor
mov
mov
lock
xor
jne
jb
ja
lret
fcoms
or
adc
jne
or
cmp
sbb
dec
lds
daa
cli
jns
add
lea
mov
ret
push
mov
mov
cmp
sarl
push
xor
leave
jne
or
add
adc
data16
mov
in
add
scas
loope
pop
and
testb
sub
cld
je
inc
cld
push
outsl
dec
push
or
add
pop
pop
jbe
out
jmp
xor
xor
jne
push
xor
mov
dec
shlb
test
lock
xchg
cmpsl
push
add
push
andl
or
pop
loop
jp
rorb
lods
pop
mov
add
fnstsw
mov
dec
sbb
jnp
mov
popa
cwtl
cmp
adc
loopne
dec
push
cmp
mov
into
dec
jne
jns
fucomi
sbb
add
sbb
inc
jecxz
out
sbb
add
inc
dec
enter
push
xor
jl
xor
pushf
repnz
push
xor
inc
in
jge
pop
add
push
or
push
add
jl
pusha
sub
xor
imul
adc
mov
add
movl
lret
rorl
pop
or
add
sbb
sub
or
mov
push
enter
popf
scas
int3
movsb
inc
add
rorb
adc
orl
sub
mov
pop
call
cmp
add
push
xor
in
or
call
sbb
pop
push
ret
bound
and
or
push
loopne
fs
bound
sbbb
test
push
push
jmp
inc
out
sbb
cmp
xor
jmp
aam
mov
jle
push
add
xor
sbb
imul
loope
pop
sbb
rclb
push
movsb
and
lret
mov
mov
pop
imul
inc
ficoms
xchg
pop
sbb
push
mov
add
je
cld
call
adc
sbb
test
push
std
mov
dec
mov
loopne
cmpl
push
je
call
and
pusha
jbe
sub
ja
lea
or
mov
imul
sub
or
xor
stos
push
popa
cmp
or
cmp
push
je
add
add
mov
cvtpi2ps
xor
mov
sub
repnz
test
inc
sbb
add
call
mov
add
mov
clc
cmp
in
push
add
das
call
jmp
mov
mov
adc
or
cmp
mov
test
test
push
stc
adc
push
inc
add
jne
sbb
inc
scas
sbb
inc
sub
or
pop
add
mov
or
daa
lds
out
xchg
xchg
aas
leave
cli
clc
and
add
cmp
jne
pop
fs
push
mov
pop
subps
mov
sbbb
mov
fisubrs
jne
loope
dec
fld
sub
jmp
adc
mov
mov
or
xor
sbb
cmpsl
pop
sub
or
adc
daa
outsl
mov
in
fdivs
andl
cmp
loop
pop
cmpsb
xchg
jecxz
call
arpl
sub
cli
mov
and
fs
popf
mov
inc
push
movl
sti
icebp
push
fs
call
xchg
and
cmp
or
adc
adc
push
push
push
push
fisubs
cmp
mov
mov
xor
mov
call
ret
mov
inc
or
andl
cmp
or
pop
popf
aad
ds
xor
scas
adc
adc
pop
lds
mov
sub
inc
add
and
dec
bound
pop
pop
xchg
fs
shlb
sub
add
mov
ret
xor
pop
dec
repz
int3
xchg
xor
lret
or
out
jmp
or
xor
sub
je
test
or
adc
add
mov
cmp
jmp
add
sub
jb
out
loope
cmp
adc
sub
inc
adc
push
and
cmp
std
nopl
push
cmp
mov
enter
leave
cmc
loope
icebp
and
iret
icebp
push
lahf
and
pop
xlat
pop
push
pop
into
pop
adc
inc
mov
jecxz
jecxz
loop
cld
sub
in
leave
push
or
mov
adc
movsb
ss
mov
dec
inc
cmpsl
jmp
mov
int3
cmp
xor
sbb
push
lret
mov
jle
cmp
mov
ror
push
adcb
add
xchg
mov
fdivs
ss
sbb
mov
js
or
or
nop
xchg
mov
push
adc
push
mov
mov
bound
inc
hlt
or
sub
outsl
cmp
outsl
push
lds
and
sbb
dec
cmp
jecxz
xchg
jp
xorl
add
and
and
xor
xlat
or
pop
dec
xchg
mov
mov
push
test
sbb
xor
rorb
xor
and
out
cmp
jmp
daa
js
xchg
and
xchg
ss
ret
nop
pusha
test
repnz
adc
popa
cmp
jle
sbb
adc
inc
daa
fwait
rcll
in
pusha
mov
adc
daa
test
movl
mov
andb
dec
mov
push
stc
sub
cmp
movb
and
cmpb
cmp
in
out
mov
push
push
add
nop
mov
inc
and
pop
pop
and
shrd
jmp
je
sub
add
sub
dec
sub
or
mov
mov
cltd
mov
push
add
mov
adc
sub
pop
dec
xbegin
add
sub
add
pop
inc
loope
xchg
push
push
loope
lods
inc
push
adc
int
and
xchg
push
idivl
fcomps
and
rol
pop
sbb
mov
sbb
and
aaa
mov
movsl
pop
pop
leave
test
cmp
dec
sbb
popa
popf
adcl
adc
in
and
xor
or
push
push
call
pushl
add
push
jg
cltd
mov
shlb
inc
jne
dec
xor
fs
xchg
push
lods
push
or
inc
out
mov
mov
ret
inc
cwtl
jae
jnp
jbe
cmpl
mov
rcl
and
js
call
out
mov
adc
stos
pop
rclb
mov
inc
add
jg
andb
cmp
imul
add
icebp
into
mov
mov
push
mov
jl
incb
cmp
sub
test
cld
xor
add
and
mov
jne
and
or
mov
inc
shl
add
add
sti
pushf
bound
jmp
sahf
mov
push
and
add
orb
sbb
in
clc
dec
add
dec
jl
lock
mov
mov
and
inc
pop
mov
scas
adcl
push
sbb
add
xchg
sub
inc
out
push
aas
dec
xor
xlat
nop
xor
inc
inc
jg
mov
pop
inc
or
pop
sbb
lods
rcrb
int
add
xchg
outsb
xchg
dec
les
adc
test
sub
insl
loopne
incb
xor
pop
data16
ds
add
push
rorb
mov
ret
pop
aaa
pop
xor
out
mov
mov
cmp
add
test
call
loop
jmp
shrb
push
push
into
inc
or
mov
lea
mov
add
adc
cld
in
mov
cmpl
lea
xorl
jge
push
sahf
xrstor
mov
pop
icebp
jl
fimuls
mov
daa
jmp
lock
rol
sbb
or
adc
xor
push
xor
jge
xor
adc
mov
mov
sti
repz
xor
xchg
push
push
and
or
ror
add
or
add
fs
xor
inc
add
adc
int3
fs
xor
bound
or
pop
or
or
jmp
or
dec
add
cmp
cld
scas
cmp
mov
inc
aam
push
adc
xchg
repnz
scas
ror
pop
add
adc
jmp
add
jno
jae
pop
daa
cmp
pop
cld
mov
adc
cmp
jl
shrb
pop
xchg
lock
das
xor
shll
add
push
aas
enter
pop
jle
push
out
mov
jbe
test
cli
cmp
add
call
in
dec
outsl
adc
in
cmpsb
das
ss
and
addl
adc
pop
mov
aam
movsb
pop
mov
jmp
rorl
add
inc
cld
add
int
xorl
mov
sbb
in
cli
arpl
add
ret
dec
and
subb
nop
jno
lret
fcoml
cmovp
clc
movsb
nop
inc
leave
test
add
cli
je
cmp
add
cld
dec
jmp
test
xor
or
xchg
cmp
jne
nop
cld
ljmp
xchg
or
int3
mov
fidivrs
pushl
jb
adc
or
cwtl
mov
sahf
mov
mov
dec
sbb
fs
adc
or
jmp
or
out
and
sub
xchg
addps
sub
or
rolb
dec
pop
xor
imul
jns
jno
sbb
dec
icebp
and
cmp
or
jo
popa
cmp
adc
gs
push
jae
outsl
or
popa
mov
mov
push
and
test
inc
leave
sbb
xlat
cmp
adc
mov
mov
int3
lds
leave
fdivs
push
jg
mov
mulb
loopne
adc
jle
in
pop
lods
adc
lock
cmp
pop
mov
mov
jns
rclb
or
cltd
test
es
jl
cmp
or
sub
clc
pusha
push
sbb
pop
and
ds
jmp
xor
adc
push
mov
inc
cli
pop
mov
adc
mov
xor
sub
pop
jle
sub
nop
add
inc
add
add
lea
test
push
jecxz
and
push
nop
or
cli
mov
xchg
cltd
push
dec
inc
mov
push
cwtl
xchg
add
jge
adc
dec
iret
imul
jge
ljmp
fadds
push
lea
adc
stc
cwtl
popl
divb
jmp
sbb
inc
inc
es
xor
loope
dec
cld
loop
aaa
dec
js
sbb
pop
adc
or
repnz
movsb
mov
pop
pushf
and
xor
ret
aam
test
lahf
push
nop
lcall
and
jne
lret
call
cwtl
es
cmp
pop
xchg
xchg
cmp
cld
pusha
xlat
jmp
nop
js
call
pop
xor
in
mov
icebp
xchg
out
inc
call
test
cmp
ret
aam
mov
js
or
in
fs
sub
push
push
call
mov
push
xchg
loopne
push
cs
pop
pop
lods
lods
mov
mov
aam
call
test
push
mov
push
mov
push
push
sub
jae
jno
rcr
test
inc
pop
rolb
jle
cmp
call
ret
mov
xchg
loop
xchg
stc
fisubl
les
jmp
lret
cmpsl
rcrb
mov
inc
aam
mov
movsb
call
push
jmp
dec
cmp
or
mov
pushf
adc
jbe
test
dec
push
and
imul
inc
xor
fs
or
push
addr16
pop
insb
inc
and
push
or
pop
sbb
or
pop
xchg
nop
lods
fwait
hlt
stos
stc
push
nop
pop
call
sti
add
dec
mov
dec
cmp
ret
movsb
add
lcall
dec
lret
cmp
aad
push
sbb
shlb
xchg
call
imul
bound
fwait
jl
inc
mov
jo
dec
adc
add
mov
das
fists
xor
push
jne
add
mov
bound
sbb
sarl
pushf
jo
mov
int3
cwtl
test
inc
pop
dec
dec
lods
add
and
push
js
jl
jl
jl
jl
jl
jl
in
icebp
adc
or
adc
sub
lcall
jmp
push
or
adc
out
jmp
loopne
aad
push
push
or
pop
add
push
dec
test
cmp
call
sub
adc
daa
sbb
push
lock
sbb
dec
xchg
sar
daa
test
inc
pusha
je
aaa
push
adc
adc
stc
fstpl
in
loopne
push
sub
inc
in
and
and
dec
jbe
pop
sbb
mov
xchg
push
stc
add
jg
or
sub
mov
lret
inc
or
mov
xorb
sub
push
sub
mov
repz
adc
imul
inc
add
dec
and
cmp
adc
inc
icebp
jmp
cmp
mov
adc
shl
and
inc
or
jns
xor
in
xor
rorb
and
outsb
cld
sbb
or
sarl
ret
xchg
push
std
pop
scas
lahf
ret
or
or
xor
sub
cs
or
xor
or
mov
and
inc
jge
adc
call
mov
adc
jge
test
cli
sub
aas
push
les
test
adc
stc
dec
lock
aam
and
dec
std
xchg
or
popa
aas
pop
sub
cmp
lds
add
inc
and
sub
jnp
and
pop
or
pop
sbb
inc
adc
jo
mov
inc
mov
push
or
test
lret
jmp
call
add
insb
or
cvttps2pi
inc
test
and
jge
xchg
push
pushf
push
adc
aam
push
repz
orl
inc
pop
and
cli
loop
jp
aam
call
adc
or
jecxz
and
cmp
sbb
ja
hlt
mov
lret
inc
ljmp
call
inc
add
cmp
je
insb
je
cmp
sub
sub
add
data16
pushf
lcall
mov
scas
dec
enter
daa
call
jnp
call
ja
test
cwtl
adc
fldcw
mov
lods
fcmovbe
pop
test
jge
mov
fnstcw
pop
fs
or
adc
std
inc
or
pop
adc
or
jb
call
je
dec
and
or
imul
imul
loopne
pushf
das
inc
jl
fadds
stos
pop
das
push
sbb
jg
ret
pop
mov
add
cltd
decl
pop
jmp
in
lock
ds
add
mov
push
movb
call
pop
daa
cmp
pop
jno
testb
insl
call
in
lea
out
je
pop
aad
push
andl
xchg
add
xor
into
jge
dec
sbb
xchg
xchg
add
xchg
add
inc
dec
lock
movsb
cmpl
stc
push
in
and
orb
addr16
jbe
lods
sub
data16
in
mov
lret
or
adc
push
xor
push
scas
es
inc
pop
push
xchg
xchg
adc
decb
inc
jbe
mov
xor
out
cmp
adc
add
push
mov
add
push
sbb
push
sbb
add
test
clc
adc
jle
int
or
dec
adc
cmp
push
mov
dec
xchg
inc
or
lea
ret
fwait
mov
xchg
and
dec
jne
lret
mov
lcall
push
orl
adc
push
push
dec
loop
daa
xor
dec
clc
jne
fisubs
ret
inc
push
pop
push
sbb
pop
je
cwtl
cltd
cmp
adc
aas
mov
lods
popa
xchg
pop
xor
dec
add
push
push
mov
lret
inc
leave
call
pop
mov
push
lods
add
push
jp
pushf
std
cmp
cmpl
push
cltd
pop
sub
mov
xor
cmp
pop
fdivs
cmpl
sub
lret
add
mov
call
les
mov
mov
jge
popf
inc
repnz
insb
mov
cli
movsb
daa
je
inc
sbb
or
dec
add
ret
imul
cld
jecxz
jmp
cmp
roll
adc
pop
jne
lahf
lods
push
xchg
mov
mov
ljmp
dec
push
rcl
pop
cld
data16
or
adc
push
xor
push
dec
push
das
lods
iret
dec
mov
push
frstor
lods
shrl
cltd
sbb
cli
xchg
adc
jmp
cmpb
loop
or
add
dec
das
add
add
cmpb
mov
or
and
cmpl
add
lea
push
pop
xor
pop
inc
mov
and
add
add
inc
cmp
shlb
push
push
movsb
xor
mov
mov
jle
dec
mov
pushf
es
jmp
loop
popa
addb
push
loopne
ret
cmp
movb
push
sub
dec
xchg
dec
fwait
mov
inc
mov
sub
push
not
and
daa
push
lcall
ret
imul
outsb
subl
fs
imul
addr16
popa
jae
dec
mov
adc
loopne
adc
push
outsl
ret
in
adc
and
iret
push
gs
push
inc
or
pop
cmp
in
and
xor
sbb
cmp
adc
bound
rcrl
pushf
adc
add
nop
add
pop
fimuls
shlb
mov
sarb
push
xchg
mov
add
dec
or
loope
mov
addb
addr16
inc
cwtl
dec
push
cmpsb
popa
xor
dec
cmp
nop
scas
repz
inc
mov
mov
mov
jge
pusha
jne
int3
or
and
movsl
mov
arpl
jmp
add
cmp
test
adc
or
inc
je,pn
in
sub
mov
ret
push
xor
cli
inc
push
push
cmpsb
mov
inc
jns
fs
sbb
cmp
repz
mov
outsb
push
xor
or
loope
mov
cmp
pusha
push
push
outsl
data16
ja
jb
jl
push
inc
push
arpl
iret
divb
test
jbe
enter
je
mov
stos
add
sbb
push
dec
and
xchg
jb
push
mov
mov
or
cmc
repnz
pop
sbb
and
cmp
pop
adc
sar
loopne
cmpsl
mov
sbbl
data16
icebp
mov
mov
sub
rcll
xor
fnstcw
jmp
pop
mov
jmp
cmp
xchg
arpl
or
mov
test
mov
addb
in
fsubr
cmp
jne
je
int
jae
push
mov
push
iret
mov
add
lods
mov
xchg
out
and
cmp
xrelease
pop
dec
mov
in
adc
push
cld
daa
jne
adc
sub
ljmp
mov
push
mov
repnz
push
fwait
clc
daa
sub
dec
and
pop
and
sbb
jne
pusha
fwait
push
pop
inc
mov
mov
mov
mov
ja
in
add
pop
dec
add
mov
jmp
cmp
pop
fwait
sub
mov
bswap
add
cld
movsl
add
mov
fbstp
insb
add
jnp
js
pop
cmp
adc
test
in
dec
push
adc
add
ret
popa
js
imul
sub
add
andb
ret
bound
movsb
pop
add
daa
fs
mov
testl
mov
into
xchg
jecxz
cli
push
push
push
push
js
out
dec
xchg
enter
leave
xchg
and
inc
cmp
mov
adc
inc
cmp
ja
jns
pop
xor
pop
cmpl
cmp
push
ja
fiaddl
shr
or
mov
xor
push
mul
outsb
aas
sbb
lahf
pop
sahf
add
push
rolb
aad
xchg
jmp
js
test
es
shlb
add
cmp
dec
or
mov
inc
add
fnstenv
inc
test
test
sbb
dec
inc
jbe
mov
add
jb
sub
insb
rcr
mov
jg
fnstsw
outsb
mov
lock
or
xor
adc
fs
ss
clc
inc
test
out
adc
incb
mov
inc
test
sub
or
das
aam
aas
ret
and
je
sbb
mov
or
in
rcr
inc
jne
mov
dec
int
insb
call
roll
push
or
mov
mov
int3
dec
dec
jbe
adc
inc
push
adc
inc
inc
popf
jae
mov
mov
push
dec
pop
hlt
inc
xchg
xchg
push
inc
and
cwtl
pop
test
cmpsl
xor
jae
mov
sbb
mov
out
dec
jne
sbb
sbb
or
xchg
push
mov
imul
test
xor
enter
pop
add
push
out
adc
sub
adc
in
mov
lea
repnz
in
jg
mov
cmp
or
jp
enter
shr
sbbb
xchg
enter
mov
dec
cmp
inc
sub
or
xor
in
test
std
sub
addl
rcr
adc
mov
rcll
xchg
push
pop
sbbl
adc
out
movsb
iret
dec
xor
lret
in
jno
ljmp
ret
adc
sub
jns
loop
push
in
test
loop
push
rcrb
sahf
sub
jno
cmp
push
and
mov
sbb
fdivrl
cli
jle
and
xchg
push
je
add
push
mov
sbb
xchg
or
push
add
js
addl
jb
rcll
xor
pop
jmp
movsb
xchg
xchg
subl
clc
cmc
push
push
or
and
lods
out
adc
lods
das
push
rcll
jb
dec
je
adc
lret
mov
pop
or
adc
adc
mov
mov
aam
adc
fidivs
push
daa
andb
dec
subb
iret
mov
adcb
xor
lock
mov
jge
mov
and
rorl
xchg
push
adc
mov
dec
mov
dec
call
fnstsw
aad
data16
adc
sub
and
in
clc
bound
cmpsl
scas
mov
adc
and
add
mov
xor
add
clc
add
or
jp
scas
pusha
pusha
jmp
call
or
jns
adc
mov
sbb
xor
dec
xchg
call
fs
or
push
call
mov
call
je
andl
sub
mov
xchg
cli
xor
xchg
adc
push
mov
sub
push
jp
adc
test
jne
es
cmpb
sub
outsb
dec
xorl
add
fcmovnu
mov
push
clc
dec
mov
xor
sub
adc
insb
test
cmp
roll
aas
test
out
push
xchg
xor
jmp
inc
insb
lds
adc
sub
mov
hlt
cmp
cmovs
inc
push
dec
std
cmp
je
cmp
add
push
xchg
ficompl
and
aaa
enter
dec
test
pop
xchg
jo
adc
and
push
inc
jo
js
add
cs
xor
dec
xor
je
and
outsl
fs
gs
leave
arpl
scas
xchg
push
or
adc
mov
push
inc
push
inc
sti
in
jae
jbe
cmp
je
dec
divl
push
popa
mov
jbe
aas
inc
dec
cmp
or
push
lds
sbb
push
xorb
sub
or
xor
jg
cmp
cmp
pop
js
subl
push
mov
jae
sub
lahf
push
push
andps
in
inc
sbb
xchg
cmpsb
sub
mov
insb
xchg
sbb
je
cltd
or
sbb
xchg
and
xchg
adc
adc
or
or
add
ret
dec
dec
clc
cmpsb
or
and
xchg
in
enter
jb
cmp
sbb
mov
and
xchg
int3
enter
ja
in
jb
cmp
and
in
jb
cmp
and
in
jb
cmp
mov
and
fs
jb
cmp
mov
and
inc
enter
jb
cmp
xor
xchg
and
sub
bound
cmp
xor
xchg
and
xchg
sub
sub
and
and
sbb
sbb
xchg
or
or
add
or
cld
xor
cltd
or
sbb
mov
and
xchg
in
loopne
fdivl
cmp
sbb
mov
and
xchg
fsubp
xchg
mov
jb
cmp
and
in
jb
cmp
and
in
jb
cmp
mov
and
pop
enter
jb
cmp
mov
and
cmp
cmp
xor
mov
sbb
xchg
xchg
enter
jb
cmp
mov
test
js
je
jo
insb
mov
and
enter
jb
cmp
dec
mov
and
enter
jb
cmp
sbb
mov
and
and
sbb
sbb
cmp
sbb
mov
and
inc
adc
xchg
mov
in
jb
cmp
sbb
mov
and
xchg
fmul
fsub
aam
sarb
int3
sbb
mov
jnp
inc
mov
enter
jb
cmp
and
in
jb
cmp
pusha
enter
jb
cmp
mov
or
pusha
in
jb
cmp
mov
and
inc
enter
jb
cmp
xor
xchg
and
and
sbb
sbb
adc
adc
xchg
add
and
jb
cmp
sbb
mov
and
xchg
loopne
fsub
fdivs
cmp
sbb
mov
and
mov
mov
jb
cmp
mov
xchg
nop
enter
jb
cmp
js
je
jo
insb
in
jb
cmp
pop
mov
and
enter
jb
cmp
punpcklbw
adc
or
ret
call
inc
xor
imul
or
push
clc
adc
fsubl
cmp
jl
cld
sbb
xchg
or
xor
adc
movsb
or
push
push
mov
movswl
out
add
or
pop
jg
inc
mov
sub
jg
jbe
testb
inc
fistl
sub
shr
imul
imul
adc
mov
call
hlt
stc
or
or
xchg
adc
sbb
mov
sub
cld
rclb
mov
xchg
inc
fcoms
push
movsb
cmp
and
nop
pop
rclb
push
das
add
cltd
push
jo
xchg
jno
vpsubb
subl
jne
in
test
call
adc
or
aaa
std
adc
pop
adc
orb
sub
push
clc
cwtl
mov
lahf
imul
mov
mov
sbb
movsb
xor
scas
and
pop
cli
sbb
adc
push
jmp
movsb
mov
popa
gs
push
fldenv
and
dec
inc
lds
adc
loopne
pop
rclb
adc
pop
push
dec
cmpsl
pop
sbb
and
push
adc
push
and
dec
ds
push
call
movsl
inc
sbb
dec
inc
aad
xchg
cwtl
je
inc
push
je
fsubrl
and
into
lds
inc
cmp
rclb
test
enter
mov
sub
stos
or
icebp
xchg
repnz
jb
cmp
sbb
mov
and
xchg
cli
enter
jb
cmp
sbb
loope
inc
loop
jecxz
in
in
out
out
call
ljmp
in
jb
cmp
sbb
mov
and
xchg
aam
aad
jb
cmp
sbb
mov
and
xchg
fmul
fucom
fidivs
cmp
sbb
mov
and
xchg
enter
jb
cmp
sbb
mov
and
xchg
int3
enter
jb
cmp
mov
mov
mov
mov
mov
mov
mov
mov
enter
jb
cmp
mov
enter
jb
cmp
stos
aaa
adc
sbb
and
or
jno
or
shlb
or
das
insb
gs
outsb
cld
test
sbb
outsb
lahf
sti
lods
imul
sub
stos
cwtl
or
inc
js
gs
imul
or
add
adc
fisubrs
push
add
jo
pop
nop
push
sarb
les
dec
jne
out
add
insl
outsl
jb
push
test
lods
pop
mov
cmp
inc
dec
outsb
mov
mov
or
ja
data16
aad
test
and
outsl
push
adc
mov
insb
mov
cmp
or
adc
enter
jno
and
sbb
popa
pop
add
inc
inc
imul
outsl
nop
push
insb
pop
mov
sbb
popa
outsb
addr16
scas
pop
les
leave
or
or
mov
outsl
ja
sahf
and
push
inc
fs
mov
mov
nop
js
pop
xchg
js
aam
cs
mov
jbe
add
dec
jo
shrb
aam
push
mov
sarb
sub
mov
pop
loope
push
pop
enter
or
nop
fdivrs
and
lods
mov
movaps
mov
xor
jp
inc
and
xor
or
cmp
jae
lea
pop
enter
or
mov
in
pop
testb
int3
test
pop
inc
rorl
mov
mov
mov
dec
inc
sub
adc
dec
jns
jne
seto
push
push
inc
mov
arpl
mov
or
dec
jbe
inc
aad
and
imul
pop
in
pop
mov
inc
or
mov
testb
push
enter
and
ret
and
fs
enter
repz
inc
pusha
test
andl
mov
fnstenv
mov
lods
lretw
pop
int3
pop
enter
mov
push
push
push
adc
js
and
push
loop
pusha
andb
gs
sub
jecxz
add
xor
imul
push
cmp
enter
and
cmp
call
add
repnz
or
mov
add
mov
jno
add
jb
popa
fs
jne
add
int3
add
jmp
and
mov
sti
and
sbb
adc
frstor
or
rcrl
or
or
sub
mov
std
dec
add
add
dec
pushf
add
push
loopne
sbb
es
cmp
dec
push
loopne
or
xor
xchg
pop
adc
lret
push
dec
pusha
hlt
imul
pop
jae
in
push
mov
and
push
outsb
cli
imulb
sahf
idivb
pop
xor
ljmp
fcomi
add
and
rclb
mov
mov
call
mov
mov
daa
xchg
lods
push
fistl
daa
xor
push
adc
lds
outsb
or
or
pop
call
shr
bound
adc
ljmp
adc
mov
nop
ret
inc
jp
loop
mov
jle
call
popf
stos
test
sub
jge
dec
aaa
rclb
imul
sub
mov
inc
xor
sub
dec
rolb
outsb
ret
ss
inc
pop
addl
or
imull
cmp
jbe
ret
jle
leave
repz
add
mov
cmp
push
pop
movsl
addr16
test
sbb
loop
mov
js
repz
jne
mov
inc
mov
inc
push
mov
pop
pushl
jae
mov
js
mov
sub
sub
cmp
je
fsub
ret
push
xlat
out
push
je
lds
sbb
int
cld
notb
test
xchg
stos
xor
sti
jne
jae
push
adc
popa
enter
xlat
sbb
daa
or
fsubr
xchg
out
stc
and
push
aaa
xor
adc
enter
daa
testl
ret
pop
jmp
mov
adc
lds
sbb
inc
and
sbb
arpl
inc
push
mov
in
fmull
lahf
sbb
xor
stos
sbb
adc
call
mov
inc
cmp
jl
pop
addb
es
jge
add
call
jmp
dec
sub
mov
xchg
insb
into
or
fstl
stos
iret
add
lock
mov
enter
add
sub
jb
cmpsl
jg
adc
add
xchg
cmp
inc
cmpb
mov
ds
test
ret
ljmp
fwait
pusha
or
sbb
and
inc
dec
and
test
mov
mov
jns
neg
xor
pop
jnp
sub
or
mov
push
xor
div
pop
movsb
ret
cli
cmp
ret
adc
mov
add
ljmp
jbe
adc
shll
add
jne
insl
add
out
in
adc
leave
gs
jo
jmp
or
repnz
shlb
jmp
pop
shlb
xor
notl
and
jo
add
mov
negl
adcl
xor
test
mov
sub
or
pop
cmpsb
sbb
or
shrd
cmpl
subl
add
and
cwtl
pop
fadd
sub
roll
aaa
add
dec
aaa
clc
lods
aaa
stc
mov
repnz
fadds
roll
fstsw
sahf
jae
insb
popa
add
ffree
leave
ret
fadd
pop
lods
jmp
out
jmp
and
jmp
inc
and
lea
or
push
repnz
adc
repnz
pop
scas
aaa
mov
add
sub
push
mov
mov
mov
hlt
lcall
mov
adc
mov
fimuls
push
or
outsl
pop
mov
push
cltd
bound
sub
push
mov
jb
inc
lods
mov
xchg
sbb
mov
jo
xor
xor
mov
adc
pop
dec
cmp
ret
mov
mov
lahf
inc
rcll
adc
mov
sub
and
decb
nop
mov
pop
adc
and
xchg
jns
xchg
add
lods
ret
pop
lods
pop
int
adc
fldcw
push
inc
xchg
inc
call
and
fwait
dec
das
mov
lods
mov
cmp
jg
jecxz
sbb
out
dec
negb
push
or
jle
mov
add
loopne
adc
fldt
fcomps
inc
jecxz
xchg
add
dec
xor
add
push
dec
add
and
jg
or
jp
push
pop
xor
xor
add
and
in
call
and
or
mov
dec
ret
inc
rorb
enter
xor
nop
icebp
popa
gs
mov
adc
and
idivb
adc
xor
mov
adc
xchg
cmp
shrb
clc
sbbl
pop
push
out
add
add
loopne
and
insb
inc
aam
mov
fiaddl
adc
mov
test
mov
mov
imul
jmp
nopl
andb
mov
les
xchg
outsl
dec
stos
xlat
je
loop
push
jno
movsl
jbe
leave
jne
shr
and
xor
push
pop
adc
xchg
in
jbe
inc
sub
dec
jl
dec
call
lahf
ret
sub
lret
lea
push
mov
and
les
push
cld
sti
xor
les
mov
push
pop
daa
adc
push
push
push
pop
lods
mov
mov
sub
dec
push
inc
test
sarb
fnstsw
pop
aam
imul
mov
stos
mov
test
adc
aad
dec
clc
cli
mov
pop
push
test
jne
jno
int3
push
jg
xchg
mov
cli
sbbb
cmc
popf
jp
sub
dec
inc
jg
mov
and
pop
cmp
adc
mov
gs
add
add
dec
inc
or
xchg
test
or
insb
mov
add
cs
mov
push
and
pop
push
hlt
inc
push
dec
push
inc
adc
nop
fmul
cmp
incb
sbb
outsb
lret
inc
enter
stos
cltd
fisttpll
or
mov
repz
cwtl
clc
imull
insl
clc
inc
mov
ror
in
fwait
sbb
push
outsl
cmp
mov
leave
adc
or
stos
cltd
es
sbb
xchg
xchg
adc
mov
aam
fistpl
mov
enter
mov
cmp
push
fistl
and
inc
in
sbb
idivl
out
sub
mov
ja
fistpll
pop
cld
pop
ret
movsb
pop
pop
ret
dec
push
daa
call
test
xor
inc
jge
stos
sub
cmp
dec
call
fs
dec
mov
repnz
sub
dec
dec
mov
jp
mov
mov
mov
add
repz
mov
into
shlb
and
je
dec
push
cmp
ja
xchg
and
je
test
fdivl
sbb
jl
inc
fsubrl
or
xchg
flds
pop
test
pop
add
cli
inc
xchg
clc
hlt
jp
push
repnz
dec
or
inc
mov
cmp
push
je
mov
dec
fists
loopne
icebp
jbe
push
lea
movsb
lods
xchg
pop
adc
enter
cld
jg
jl
dec
in
mov
push
xchg
sub
mov
cmc
stos
add
and
sbb
fimull
sbb
pop
testl
call
sahf
ret
into
cltd
in
cmp
or
adc
pop
lods
insb
data16
in
jns
pop
sti
pop
jbe
mov
dec
lds
ss
rolb
je
cld
lret
call
sbb
add
cmp
stos
or
push
das
aaa
add
jo
pop
repz
test
mov
cmp
je
or
sbb
push
xor
cltd
add
jecxz
pop
lret
fst
les
xchg
movsb
fldcw
inc
mov
fs
jge
clc
or
std
jnp
bound
or
lods
cmp
mov
jne
test
sub
out
and
nop
das
repnz
imul
ds
out
sub
lods
cmc
jle
out
out
xor
and
lods
jmp
les
mov
cs
mov
sub
cwtl
jne
push
pop
push
inc
arpl
pop
mov
sub
jae
add
cmpb
xchg
or
lret
sarl
test
and
stos
dec
push
popa
xor
jge
inc
repz
shll
sbb
mov
jmp
cmp
sub
pop
cmp
imul
movzbl
rolb
incl
inc
xchg
in
jmp
xchg
cmp
pop
jg
mov
adc
cli
jo
sbb
je
test
lret
fisttps
inc
pop
lret
cmp
pop
test
jne
lea
pushw
pushf
aas
push
add
and
and
or
jmp
mov
sbb
dec
jae
mov
cltd
and
scas
adc
cltd
adc
adc
ja
mov
repz
fsubrs
shl
cld
cltd
pop
xchg
fsubl
push
sub
or
xor
xchg
sti
sbb
sbb
or
xchg
sub
jmp
enter
pop
jo
adc
inc
hlt
cwtl
shll
scas
imul
jno
adc
cmp
movsb
punpckldq
cmpl
jbe
mov
imul
jmp
sub
leave
and
inc
dec
repz
adc
jmp
out
lds
and
adc
and
xor
sti
dec
es
xchg
pop
jp
ljmp
jle
sbb
add
mov
pop
jnp
cmp
ja
cmp
jmp
xor
xchg
sub
mov
dec
cld
stc
mov
fs
inc
push
or
lods
icebp
lea
xlat
mov
adc
jecxz
xor
sbb
inc
je
out
cmp
inc
mov
inc
jle
inc
add
nop
testl
mov
cmpl
sub
sbb
and
adc
and
mov
clc
in
mov
mov
mov
xchg
inc
iret
and
pop
sbb
xchg
ret
xor
jecxz
or
mov
pop
sahf
fwait
adc
lea
pop
pop
mov
xchg
sub
push
mulb
mov
adc
dec
push
push
mov
ret
mov
sub
incl
ret
mulb
movsb
push
inc
icebp
call
sub
sub
inc
lock
call
or
push
sub
pop
pop
mov
dec
clc
add
adc
mov
imul
jge
or
dec
cmpsl
adc
and
lea
repz
movsl
sti
adc
or
and
mov
sub
cmpb
jl
jmp
dec
add
xor
scas
sub
inc
daa
leave
mov
dec
imul
cmp
lock
pusha
arpl
push
lea
xchg
call
je
push
xor
stos
pop
or
pushf
dec
in
jmp
add
idivl
in
or
in
mov
stos
xchg
push
mov
xor
mov
inc
xor
mov
inc
dec
push
sub
jg
dec
mov
pop
stos
cmp
add
pop
pop
lcall
mov
imull
or
and
mov
test
dec
jmp
inc
pop
mov
loope
push
addl
pop
dec
mov
adc
jge
adc
jb
ljmp
mov
movzwl
dec
sub
es
inc
or
jo
lea
mov
rorb
jp
out
jmp
test
shrl
pusha
lods
add
or
or
mov
jle
popa
mov
sbb
mov
bound
or
rcll
dec
cld
add
jmp
aaa
cli
dec
sub
out
dec
dec
jb
je
daa
lods
or
xor
rorb
je
adc
stos
ret
sub
dec
dec
aam
dec
mov
or
sbb
dec
sbb
xor
dec
stos
cmpb
dec
cmp
fnstcw
sbb
xchg
jmp
xor
inc
pop
lea
loop
or
adc
stos
or
pop
inc
clc
adc
test
pushf
xor
mov
or
xchg
dec
stc
jns
sbb
xchg
xchg
fadds
stos
leave
mov
mov
in
mov
call
mov
cli
or
jb
mov
das
xchg
mov
jmp
aad
add
or
add
repz
inc
call
je
adc
jne
mov
sti
adc
sub
ret
and
stos
jecxz
jnp
dec
add
jne
call
es
sbb
adc
lahf
sbb
mov
add
cmp
cwtl
sbb
lea
sub
ds
pop
inc
cmp
je
push
push
in
and
in
push
insl
push
or
xor
pop
pop
inc
loop
push
mov
cs
jecxz
sub
add
mov
out
mov
sub
sub
sub
add
dec
sub
sub
add
cs
add
xor
cmp
out
xor
aam
test
inc
cld
dec
test
test
dec
xor
pushf
subb
mov
ret
mov
sarl
testw
rcll
scas
inc
push
or
add
sbb
inc
in
cwtl
insb
int
fldt
pop
sub
rclb
or
sar
mov
data16
pushf
and
fabs
dec
in
test
es
fsub
not
jnp
jmp
inc
je
or
mov
lcall
lea
mov
mov
out
add
call
data16
sahf
jmp
xor
stos
mov
add
or
jns
dec
or
ja
fidivrl
or
aas
cmpb
sbb
dec
js
push
cmp
jmp
push
mov
mov
dec
sahf
or
sbb
icebp
cld
push
pop
or
mov
xor
dec
daa
out
sbb
call
mov
lret
dec
add
mov
imul
fadds
test
and
mov
pop
mov
sarb
fidivl
jae
dec
add
sbb
in
insl
or
cli
mov
or
fidivl
xchg
or
fwait
push
fisttps
sbb
sub
push
jo
and
ucomiss
dec
adc
enter
imul
cmove
jo
lea
dec
adc
sub
movb
call
imull
jmp
cmp
adc
push
and
sub
jmp
pop
or
mov
fldenv
jns
js
and
call
andb
sub
xor
sub
in
in
ss
mov
mov
cmp
or
push
pop
pop
add
icebp
je
add
and
cmp
jne
inc
ds
call
ret
adc
mov
stos
rorb
andl
sub
xor
loopne
add
neg
jmp
test
mov
imul
add
and
xchg
addr16
mov
fisttps
ret
sub
loopne
jae
ficoml
cmp
push
inc
jmp
dec
sbb
dec
push
cld
inc
mov
test
xchg
imul
add
add
mov
jne
mov
and
bswap
or
testl
mov
insb
scas
pop
pop
jo
aaa
xor
push
mov
and
mov
xor
xor
divl
jbe
mov
pop
mov
pop
je
inc
aam
mov
fldt
fstpl
fwait
lahf
or
push
inc
lods
mov
jno
sbb
sub
pop
je
pop
adc
fildl
loop
inc
or
jl
lods
fcompl
sbb
xor
or
add
mov
out
subb
dec
xchg
clc
dec
hlt
or
das
mov
arpl
cli
cmp
inc
add
or
mov
mul
sub
pop
sub
or
shl
enter
rolb
enter
call
leave
dec
fildl
xchg
push
dec
mov
fwait
cmpsl
add
pop
mov
lret
movsb
dec
mov
jns
dec
jp
sbb
jne
push
or
adc
push
add
fucomip
dec
aaa
mov
adc
inc
push
lcall
mov
sub
pop
pushf
ja
iret
daa
cld
push
clc
mov
pop
shr
sub
enter
and
and
mov
and
sbb
mov
icebp
pop
je
cmp
insb
cli
xchg
cmpl
cmpsb
jg
lea
lds
loopne
incb
sysexit
addb
daa
ja
shlb
jmp
or
mov
iret
cld
loopne
pop
inc
ja
bound
push
loop
add
pop
dec
incb
xor
imull
in
mov
cltd
mov
icebp
insl
lds
mov
cli
lret
ja
repnz
inc
sbb
int3
or
jne
imul
call
popa
inc
call
dec
in
test
xor
sbb
xchg
xchg
inc
hlt
or
mov
jmp
mov
push
pusha
dec
xchg
shr
stc
mov
pop
loope
jl
jmp
ret
adc
ret
or
lock
das
pop
in
cmpl
dec
dec
sub
imul
add
rcr
adc
nop
clc
subb
add
inc
pop
call
sub
push
pop
dec
pop
or
cmpl
xchg
mov
jp
mov
mov
push
repnz
arpl
adc
fs
jmp
push
inc
test
clc
or
push
hlt
das
dec
ret
lahf
int3
mov
push
xchg
sbb
hlt
sti
lcall
imul
ret
icebp
and
mov
cwtl
inc
stc
int3
dec
lock
leave
in
mull
out
mov
cltd
cld
mov
rcr
lock
lahf
cli
and
adc
in
adc
adc
cwtl
sbb
out
dec
repz
or
stos
dec
adc
pushf
push
daa
in
add
push
cmp
test
in
lds
call
jg
sub
mov
mov
xchg
out
sub
mov
mov
mov
add
pop
mov
or
cmp
sti
je
adc
jmp
mov
sub
js
push
cmpb
jne
sub
outsl
or
cmp
lea
out
push
push
push
lock
repnz
cltd
aad
movb
mov
and
in
pop
in
push
aas
out
inc
call
sti
enter
sbb
mov
leave
mov
inc
fidivrl
xchg
adc
or
push
cmpsl
cmp
enter
in
and
lock
addr16
repnz
popf
mov
fistps
inc
stos
adc
cmp
inc
in
das
push
mov
cli
add
imul
mov
inc
sub
test
xor
mov
rcrl
or
add
and
mov
mov
cmp
jne
cs
mov
pop
and
jp
or
aas
pop
call
lock
call
test
mov
xchg
bound
aaa
and
jno
push
loop
xor
pop
cmc
sbb
ret
jmp
dec
in
xchg
mov
out
addr16
adc
cmpsl
bound
cmp
jp
ja
jg
in
arpl
call
or
imul
adc
test
lds
je
daa
jb
add
andb
xor
pop
xchg
data16
inc
and
pop
push
xchg
dec
stos
add
inc
lcall
or
xchg
lock
or
js
sbb
ret
add
push
fdivrl
mov
in
mov
cmp
add
mov
mov
push
add
out
sub
dec
mov
mov
and
jecxz
loop
jmp
ret
push
inc
dec
or
mov
jae
fstpl
pop
add
rorb
dec
mov
insl
ds
cmc
test
add
sub
dec
mov
push
lods
icebp
mov
or
pop
push
sti
dec
mov
sbb
push
push
cmp
xchg
test
sar
js
rorb
cmc
cmp
or
or
or
pusha
test
push
mov
push
or
test
add
mov
sbb
into
inc
jnp
add
sahf
or
lahf
and
push
imul
rolb
adc
or
and
add
pusha
aad
mov
xchg
int
adc
jmp
and
mov
sti
push
cli
sbb
dec
adc
aaa
dec
testb
call
les
js
push
bound
push
inc
fcoms
add
fistpll
adcl
dec
adcl
jmp
mov
xchg
je
xor
sbb
test
ret
aam
sbb
out
gs
jl
pop
dec
call
ret
push
insl
jmp
and
and
push
out
imul
or
inc
call
dec
sarb
test
daa
enter
or
mov
std
and
adc
or
inc
cld
sub
lods
mov
stc
sbb
sub
mov
loope
dec
jne
jmp
mov
jo
xor
jl
rcll
add
jnp
loopne
aad
sahf
or
mov
jmp
push
popa
clc
pop
fmull
ds
or
cmpb
adc
hlt
push
and
out
add
mov
aas
inc
sbb
mov
aas
inc
push
jne
inc
imul
loope
out
mov
or
mov
sahf
addl
cwtl
xchg
jo
push
push
cld
mov
loope
fdivl
sub
jle
pop
cmp
inc
or
push
adc
mov
aas
mov
cmpsb
cli
dec
xor
xchg
xor
fs
xor
sbb
and
sbb
add
jne
and
mov
mov
movsb
sub
push
test
movsb
push
fwait
cmp
add
push
and
or
testl
dec
fwait
insb
adc
in
jne
mov
lret
je
dec
test
sub
inc
pop
cmpl
popa
inc
jmp
lret
icebp
add
mov
in
notb
add
bnd
mov
xor
jae
dec
out
test
cmp
push
movups
add
adc
xor
daa
sti
test
imulb
dec
sub
bound
adc
leave
in
ucomiss
in
insb
imul
add
pushf
call
add
and
pop
lahf
inc
sahf
sub
test
nop
clc
outsl
adc
lock
dec
out
push
into
cmp
adc
or
add
xor
nop
imul
jb
jmp
or
mov
jmp
scas
bts
ss
dec
or
xor
add
popf
jns
sbb
and
push
aam
push
adc
scas
xchg
ret
or
fwait
jne
mov
jmp
es
in
js
push
pop
ds
lea
cli
clc
leave
cmp
mov
pop
and
fsubs
inc
stos
mov
pop
arpl
push
cmp
sbb
mov
add
jae
nop
clc
rorl
rclb
push
dec
stc
cmp
pop
or
mov
push
adc
lea
and
add
aam
or
inc
pop
xchg
lea
ficompl
push
xchg
xchg
dec
pop
mov
lahf
add
jge
sbb
xchg
and
dec
pop
repnz
mov
imul
test
in
leave
push
jne
nop
gs
adc
incb
add
mov
push
dec
pop
sbbl
ret
inc
dec
pusha
movsb
pop
sbb
mov
rorb
sub
jae
jno
or
and
sbb
mov
sub
mov
mov
xchg
cs
xor
sub
insl
sbb
inc
shlb
mov
mulb
cmp
adc
push
inc
xchg
sahf
movsl
imul
mov
pop
fdivs
int3
or
mov
mov
mov
js
mov
fwait
mov
fiadds
jp
cmp
mov
scas
loop
imul
mov
cwtl
push
outsl
xchg
cmp
pop
jl
je
repz
in
cmp
and
idiv
cmp
xchg
pop
pop
pop
lock
mov
addl
fdivs
dec
cmp
pop
call
pop
push
jmp
mov
inc
sbb
imul
lock
inc
fbstp
int3
fisttps
mov
xchg
push
das
scas
or
add
push
stc
adc
pop
add
popf
cmp
push
mov
push
mov
xor
shlb
cs
insb
or
subl
pusha
and
lahf
mov
sahf
add
xchg
adc
sbb
xor
pop
mov
gs
lahf
cli
mov
jne
mov
add
jne
repnz
packsswb
call
enter
cltd
sbb
ret
add
sarl
jns
fadd
cmp
push
mov
negl
xchg
push
inc
decl
xor
ret
push
inc
pop
fdivs
or
dec
mov
es
in
lods
mov
aas
dec
daa
jbe
cmp
adc
leave
iretw
adc
aas
mov
stos
pop
mov
push
adc
xor
enter
dec
movsl
xchg
hlt
or
pop
in
leave
dec
xchg
es
out
add
out
pop
repz
test
jl
sub
sbb
jle
mov
mov
js
push
hlt
push
popf
std
add
in
shrl
mov
inc
std
and
enter
repnz
js
mov
test
xchg
jl
mov
inc
imulb
jb
pop
dec
and
cmp
push
mov
lret
negl
call
sti
enter
in
jmp
cmp
repnz
and
cmc
pop
mov
lock
push
scas
push
popf
adcl
add
jmp
cmpb
ja
call
fadds
add
sub
or
sub
or
mov
jns
fsubs
jbe
cmpl
enter
mov
call
nop
testb
adc
inc
jp
and
movsl
cmp
arpl
mov
add
and
mov
mov
or
fwait
mov
sbb
sub
adc
mov
jno
fwait
lcall
and
push
es
arpl
sub
adc
fsubr
add
insb
lcall
lds
push
fsubl
sbb
insb
pop
fsts
sbb
or
movsb
sbb
jne
test
aad
and
dec
out
mov
or
push
test
jle
adc
test
xor
cmp
cmp
rolb
jmp
shl
pop
mov
cmp
and
clc
iret
mov
stos
or
xchg
stos
fildl
mov
mov
adc
andb
test
pushf
bound
inc
jl
push
push
add
js
or
stos
and
mov
scas
mov
add
fwait
sub
movsb
inc
adc
popf
ss
push
pop
and
adc
push
aam
xchg
data16
les
xor
add
sub
popf
popa
xchg
sub
cmp
xchg
xor
or
inc
clc
sub
push
sbb
js
push
data16
xchg
stc
adc
and
xchg
pop
aaa
inc
inc
inc
or
xor
xchg
add
std
add
jle
and
push
leave
or
adc
scas
inc
adc
dec
jecxz
dec
ret
ja
cmp
adc
cmp
dec
mov
dec
loope
arpl
daa
into
icebp
cmp
je
mov
mov
sbb
cmp
out
leave
pop
ja
inc
dec
call
cmp
mov
int
mov
sbb
push
nop
cmp
lret
mov
les
jl
mov
jmp
daa
fucomp
mov
idivb
paddusb
jmp
or
adc
mov
orl
je
push
push
gs
sbb
rdmsr
add
cmp
sar
add
flds
push
add
std
ljmp
je
in
xchg
or
xchg
outsb
daa
jae
int3
cwtl
loopne
test
icebp
lahf
mov
jle
ret
adc
popf
or
lds
push
push
in
cmp
flds
push
sbb
call
mov
and
pushf
std
leave
pop
mov
adc
cmpsl
imul
push
xchg
shl
mov
call
shlb
add
lods
push
rcrl
sub
xchg
lods
xchg
test
fadds
call
shll
rorl
inc
inc
dec
dec
loop
and
mov
or
nop
lock
jo
sub
and
jne
movsb
popa
and
xchg
pop
add
fdivs
cwtl
push
add
or
lret
and
or
in
es
cmc
add
push
add
call
out
inc
xchg
ret
pushf
in
mov
inc
call
dec
inc
mov
push
xor
xor
pop
je
xchg
and
jge
fildl
or
adc
call
into
aad
les
pop
add
sub
push
cld
dec
sub
mov
mov
pop
mov
mov
or
xchg
nop
mov
mov
ja
in
mov
popa
inc
adcb
cmpb
adc
imul
sub
test
jae
mov
add
enter
push
push
and
dec
mov
jp
jae
pusha
push
add
jne
xor
push
mov
pop
mov
lret
mov
stos
and
nop
or
mov
push
imull
cld
dec
icebp
out
ret
das
xor
mov
xor
sbb
fnstsw
or
inc
clc
and
mov
or
addb
or
dec
repz
mov
mov
cmp
adc
mov
loope
sub
popf
sbb
and
loop
call
sub
add
xchg
push
jle
jmp
dec
pop
jb
mov
mov
fsubrs
mov
call
sahf
lock
out
lret
daa
or
sbbl
test
cwtl
lea
inc
aad
movsb
mov
dec
mov
jle
push
inc
jmp
stos
mov
xor
adc
inc
pop
inc
add
jmp
shlb
fcoml
xor
je
add
fs
aaa
call
xchg
add
sbb
xchg
test
adc
aam
in
les
jle
les
aas
and
jp
in
addr16
sub
jle
mov
pop
mov
insb
gs
sub
adc
or
cmp
loop
fucomip
and
std
inc
fisubrl
dec
test
or
mov
xorl
lock
inc
std
mov
aam
and
push
lret
jb
fs
popf
sbb
or
popf
mov
push
and
or
inc
and
incb
ret
mov
mov
scas
jp
mov
mov
ja
roll
xor
cmpsl
js
jns
dec
cs
jg
ret
mov
inc
add
xchg
call
adc
mov
lea
sbb
icebp
lods
xchg
or
mov
mov
lock
fs
and
rcrb
dec
push
movsb
mov
lea
mov
xchg
lahf
inc
mov
adc
push
cmp
add
or
int3
movsl
dec
or
dec
call
aam
test
inc
hlt
outsb
mov
js
test
pushf
mov
or
mov
xchg
pop
lret
or
mov
hlt
cli
dec
push
lods
lock
popa
scas
mov
push
ss
xor
inc
aas
jmp
mov
cmp
add
push
popf
test
xchg
mov
push
and
mov
push
aad
cmpl
shrb
mov
rcrb
add
in
test
jnp
imul
sub
mov
inc
inc
aam
sub
adc
mov
test
notb
dec
or
adc
adc
mov
cmp
in
mov
xor
test
push
leave
xchg
pop
mov
push
add
int
cmpsb
sub
xchg
inc
xorl
stos
movsl
adc
push
fisubrs
leave
mov
les
inc
mov
clc
data16
push
adc
adc
test
inc
push
hlt
jecxz
pop
cmpb
xchg
mov
lea
or
pop
popf
clc
cld
dec
or
insb
push
xor
or
aas
cmp
jg
cmp
jne
add
adc
sub
or
xchg
adc
jmp
mov
pop
dec
adc
mov
inc
ljmp
sbb
fs
orb
jmp
das
andl
lret
or
adc
ljmp
sti
and
sub
cwtl
test
and
lea
dec
sbb
fld1
in
sarb
pop
mov
nop
ret
xchg
pop
pop
fucom
adc
fcoms
stc
aas
out
adc
movsb
in
ret
cld
insb
lds
push
mov
mov
sbb
push
lcall
lock
hlt
clc
xchg
nop
pop
in
pusha
push
loopne
or
xchg
dec
sti
push
cli
push
xchg
fsubs
rol
mov
loopne
xor
sub
inc
addl
cltd
dec
in
mov
pop
lcall
sbb
mov
rcl
lcall
inc
les
enter
inc
mov
es
sub
inc
push
and
jmp
or
xor
aaa
and
xor
jmp
das
and
mov
ret
fwait
add
push
add
or
or
or
or
pop
nop
repz
sti
addr16
xor
adc
cmp
or
mov
lods
nop
mov
jecxz
adc
mov
pop
cld
cmpl
jg
and
sbb
test
mov
daa
push
fs
cs
or
or
cmpl
test
pop
cmpsb
xchg
adc
data16
in
and
inc
xchg
mov
cld
mov
sub
cs
mov
mov
xor
mov
call
cmp
and
leave
sub
enter
adc
mov
push
or
fs
xor
mov
push
call
sub
je
cld
cli
xchg
adc
xchg
inc
pop
pushf
xchg
and
add
nop
inc
mov
idivb
and
ret
xchg
and
xchg
addb
cmpsb
push
or
mov
jecxz
adc
std
sub
sarb
add
daa
ljmp
adc
jae
iret
mov
arpl
push
rcr
xor
pop
xor
ss
aaa
fs
test
lock
mov
jo
sarb
mov
push
roll
mov
adc
pushf
mov
nop
int3
mov
mov
pop
lea
xchg
adc
or
lds
push
out
lds
cmp
or
inc
jae
test
std
xor
fxch
and
or
hlt
mov
mov
xorb
mov
or
push
inc
mov
fs
mov
cmc
lods
push
or
lods
cld
adc
or
inc
or
push
or
ss
inc
inc
cwtl
js
and
adc
xorl
movsb
or
cwtl
outsb
mov
outsl
in
sub
push
adc
test
orb
push
call
dec
jg
mov
les
loope
in
dec
or
repnz
mov
sbb
add
and
outsb
xor
inc
adc
mov
adc
jl
test
cltd
xchg
cmp
lock
and
jne
loope
inc
push
jle
mov
xchg
and
mov
call
dec
testl
dec
mov
sbb
out
jns
jle
cwtl
jae
sahf
sub
in
es
mov
jne
cmpsb
xor
stc
push
and
xor
in
mov
sub
xor
loope
das
mov
and
mov
leave
add
inc
jge
jb
jne
mov
sbb
sti
jae
pop
pop
or
jmp
cmp
mulb
pusha
xchg
add
adc
scas
insb
add
jmp
mov
dec
pop
cld
out
clc
test
xor
or
jmp
es
add
or
inc
outsb
mov
add
mov
pop
shr
cmpsl
dec
nop
add
ret
sti
sub
xchg
test
sub
iret
dec
or
jns
nop
xor
pop
push
pop
mov
xor
jo
adc
or
or
cmp
gs
cmp
xor
xor
test
jg
in
pop
pop
das
mov
cwtl
xor
push
add
and
or
lods
mov
inc
dec
jge
std
jle
or
cs
dec
leave
in
xor
in
xchg
rcll
aas
push
jns
add
pop
hlt
jge
push
mov
jge
sbb
dec
stos
hlt
ret
scas
mov
sbb
or
in
mov
std
mov
stc
mov
xor
adc
call
lock
mov
incl
dec
cmp
jae
or
sbb
lds
inc
inc
jmp
in
or
hlt
sbb
jp
ret
leave
dec
pop
and
xchg
push
adcb
push
iret
pop
push
push
nopl
pusha
repnz
jl
daa
call
ret
push
sub
pop
mov
mov
xor
jge
dec
adc
test
add
dec
or
cmc
inc
push
xor
and
push
ds
adc
add
adc
cmp
clc
pop
mov
adc
and
jne
call
mov
adc
or
xchg
dec
push
popa
cmp
daa
jg
in
icebp
jp
xchg
jne
push
rorb
sub
jns
pop
xchg
in
add
out
je
cltd
lds
shll
es
jae
sbb
stos
sahf
outsb
pop
scas
pop
or
or
shlb
insl
outsl
in
or
not
mulb
das
xchg
cmpsl
cmpb
jl
imul
mov
test
bound
incl
lods
into
adc
mov
and
xor
mov
fbld
ljmp
ljmp
pop
and
pop
in
push
js
jge
and
fld
pop
push
lcall
sub
mov
pop
clc
xchg
mov
mov
jp
or
je
mov
or
push
sahf
es
sub
sbb
xor
mov
xchg
mov
or
adc
push
sarb
cli
jbe
mov
ss
je
inc
call
lock
lods
sahf
cltd
inc
sub
push
sbb
jne
sub
enter
push
iret
mov
mov
mov
cmpsb
lcall
je
clc
addr16
sbb
mov
dec
and
mov
mov
cld
push
sarb
or
in
popf
hlt
and
fnstsw
hlt
xor
cmp
mov
inc
call
inc
ja
jno
pop
icebp
insb
inc
jge
movl
mov
dec
decl
notb
mov
push
mov
sub
jb
adc
inc
sbb
in
in
xor
jae
adc
jne
clc
or
or
jne
xchg
clc
pop
ja
mov
in
shrb
icebp
addb
or
or
add
call
inc
add
adc
enter
dec
mov
sub
shr
mov
les
push
iret
mov
movsl
out
or
jne
lcall
xchg
aaa
add
dec
test
jmp
lock
push
mov
add
ss
cli
or
cmp
in
inc
daa
mov
jp
incb
adc
inc
cmp
lea
push
mov
andb
add
pop
pushf
xchg
sbbb
adcl
xchg
adc
mov
das
incb
dec
sub
cs
call
into
push
sbb
mov
push
pop
mov
test
and
jb
je
imul
push
call
or
out
inc
push
and
les
mov
inc
lock
mov
mov
out
push
lock
call
lret
inc
xor
adc
lcall
or
mov
adc
test
movsb
sbb
xchg
and
xchg
in
sbb
pop
enter
mov
mov
mov
adc
sbb
xchg
xchg
rol
mov
jp
aam
dec
and
or
in
aam
push
adc
mov
mov
inc
insl
xchg
sbb
add
sbb
addb
mov
push
int3
add
and
xor
mov
jns
cmp
xchg
enter
sbb
xchg
push
enter
aam
cmpsl
bnd
jl
daa
out
jns
mov
inc
les
and
es
mov
and
add
rclb
inc
xchg
and
jge
int3
loope,pt
cld
push
hlt
mov
inc
lds
jb
sarb
or
sub
inc
in
dec
xchg
cltd
push
fisubs
jl
jb
jg
loopne
push
insb
in
inc
insl
das
fs
lods
jo
pop
xor
and
imul
mov
movsl
or
jo
dec
sub
outsl
lahf
fsubl
xchg
sbb
add
and
sub
cmp
test
sbb
sarl
mov
insb
into
lret
or
test
jge
adc
adc
fs
xchg
or
jecxz
insb
pusha
clc
lret
sub
icebp
jnp
push
push
xor
cwtl
sti
xorb
in
popf
xchg
imul
je
jo
jmp
sbb
ret
jno
mov
in
call
inc
aaa
jno
lock
pop
adc
pop
ljmp
mov
sbb
add
sbb
mov
pop
repz
mov
add
test
call
dec
jmp
xor
iret
adc
fucomi
or
push
call
xor
in
cmp
mov
adc
mov
cs
pop
call
jb
inc
push
jo
arpl
inc
js
popf
into
add
inc
push
fs
push
or
loope
adc
cld
mov
test
mov
divb
lods
mov
push
aas
push
daa
lds
call
sbb
repnz
cmp
in
fimuls
mov
and
test
mov
jle
adc
cmp
subb
and
pop
mov
push
xor
and
pop
pop
in
dec
push
test
mov
adc
push
popf
ficompl
fimull
push
mov
jmp
fldt
cltd
hlt
jecxz
movsb
push
inc
dec
std
mov
sub
mov
mov
or
movl
inc
and
pop
repnz
outsl
bound
xchg
clc
add
into
psrld
push
or
call
adcl
inc
or
push
fstl
or
mov
lahf
inc
cltd
and
xlat
sub
imul
cmp
push
fcmove
dec
shl
mov
movl
ss
add
adc
add
push
mov
sbb
das
inc
fisttpll
push
and
push
and
call
jp
cmp
stc
sahf
push
dec
push
xchg
or
adc
dec
cmpsb
sub
xor
lahf
adc
push
lock
mov
sbb
adc
adc
sahf
mov
push
sbb
fists
out
inc
iret
dec
mov
add
pop
subb
ja
and
jl
xchg
mov
sub
adc
cli
bts
fsts
lea
call
jmp
adc
enter
in
dec
jp
mov
shlb
inc
adcb
pop
orl
xor
mov
sbb
xchg
ret
jle
sbb
leave
in
test
mov
orl
mov
imul
ja
mov
aam
cmc
cmpsl
stos
and
lret
xor
and
mov
sub
cs
pop
xchg
sub
dec
inc
add
cmp
push
xor
fwait
jmp
aam
jp
jle
les
jmp
dec
xchg
add
lcall
add
rcrb
in
mov
inc
dec
jbe
cmc
dec
sbb
inc
std
xlat
mov
jge
xorl
sub
cmp
push
xor
jo
sub
mov
testl
mov
adc
xchg
in
decl
push
out
in
mov
hlt
stos
and
mov
int
and
cwtl
sub
mov
mov
iret
divb
fs
pop
and
xchg
ds
outsl
hlt
gs
into
adcl
int
pusha
sbbb
xchg
push
sahf
mov
mov
adc
icebp
xchg
repnz
inc
pushf
adc
mov
adc
imull
jbe
mov
mov
clc
scas
js
push
inc
cld
mov
ljmp
jno
xor
cmp
mov
and
lahf
mov
add
out
popa
insb
cld
push
and
adc
clc
imul
jb
fs
fcompl
fs
js
int3
mov
insl
add
mov
push
mov
dec
and
inc
inc
jno
mov
and
enter
and
jl
shlb
je
js
insb
dec
fs
shlb
dec
pop
fwait
push
adc
xor
and
adc
fs
and
pusha
xchg
cmp
inc
jno
add
adc
sub
adc
cwtl
jo
adc
bound
and
and
ja
mov
cld
popa
inc
xor
clc
sbb
sbb
sbb
lock
fmuls
in
xchg
enter
pop
enter
push
enter
dec
enter
pushf
int3
fcomps
les
mov
mov
cmpsb
sbb
cmpsb
xor
mov
cmpsb
or
mov
mov
mov
inc
jno
mov
or
and
push
mov
and
push
cld
and
pushf
push
in
and
xchg
push
loopne
and
mov
cmp
mov
and
pushf
and
mov
test
sarb
nop
inc
xchg
adc
xor
aam
test
mov
push
test
adc
call
test
adc
mov
jns
cmp
add
xchg
adc
inc
sub
or
insl
adc
cmpsb
push
sbb
cmp
test
mov
adc
sti
ja
fadds
or
movsb
mov
mov
pushf
mov
inc
cwtl
and
adc
mov
or
inc
aam
and
insb
and
and
jae
mov
imul
data16
movsb
stos
orb
test
jl
mov
push
push
inc
jb
xor
popa
loope
notb
sbb
sarb
in
out
xchg
cmc
adc
icebp
dec
jae
cmp
mov
rorb
js
and
fmuls
mov
jo
cmpl
pop
mov
jmp
outsw
movsl
sti
xchg
or
sub
call
adc
xor
xchg
or
adc
mov
adc
sbb
test
lret
mov
sbb
xor
push
adc
push
stos
add
mov
sbb
test
arpl
and
or
or
rol
and
lea
insb
xchg
mov
mov
adc
push
pop
push
adc
and
and
clc
in
insb
test
gs
cmp
cmp
inc
lret
xchg
fdivr
shll
or
arpl
pushf
dec
pop
es
in
dec
stc
sub
or
enter
xorb
adc
or
add
push
adc
call
mov
in
mov
mov
sbb
mov
mulb
xchg
mov
pushf
ss
repnz
frstor
adc
nop
dec
jo
sub
sub
jo
rcl
mov
imul
lea
mov
pop
mov
or
and
lea
dec
sahf
push
test
cmp
je
cmpsl
mov
addr16
mull
das
hlt
hlt
or
xchg
or
cmp
lret
movsb
push
rcll
cld
cli
adc
jnp
rclb
add
add
sar
push
pop
cmp
rclb
insb
mov
fisubl
mov
sbbb
mov
or
test
and
test
push
sbb
enter
or
sbb
jl
adc
sbb
push
test
and
les
in
decb
les
fs
inc
shll
nop
mov
jo
stos
xor
sbb
or
inc
xchg
and
popf
sub
inc
mov
jg
fmul
cwtl
dec
mov
imul
adc
loopne
inc
jo
test
and
nop
fmull
js
pop
and
and
sbb
or
test
adc
std
mov
bound
and
and
sbb
adc
in
adc
mov
stos
inc
push
push
jns
cmp
add
stos
sbb
outsl
je
or
sbb
inc
bound
test
outsb
mov
adc
dec
mov
xchg
inc
outsb
or
dec
mov
loope
inc
insl
jo
dec
xor
clc
outsl
clc
push
jns
scas
test
adc
fisubl
adc
inc
sti
inc
fnstcw
and
jae
adc
push
or
jp
dec
adc
cmp
mov
clc
cld
pop
repz
xor
sub
jae
call
adc
roll
mov
cmpsl
pminsw
or
cmp
and
dec
test
inc
pusha
imul
mov
shl
sbb
das
and
push
pop
pop
xchg
or
pop
xchg
cmp
je
and
dec
adc
xor
sub
or
push
inc
jne
sub
and
push
sbb
sbb
mov
hlt
adc
or
or
notb
int3
je
jbe
mov
cli
sub
imul
adc
aam
adc
sub
fs
js
pop
lods
shlb
incb
mov
inc
aad
inc
inc
fidivrs
adc
scas
cmp
fs
movsb
aas
nop
movsb
out
and
gs
sub
fistps
test
fistpll
mov
push
inc
mov
ss
pushf
dec
jo
push
inc
outsl
fidivrs
inc
fdivrs
dec
insl
jo
mov
cmp
int
sbb
cmc
jmp
repz
push
push
repnz
adc
push
nop
cld
jae
js
xchg
fwait
mov
loope
add
loopne
jo
fsubs
fwait
cmpsl
xchg
in
sbb
cmp
xchg
mov
dec
idivb
xchg
faddl
inc
sbbb
loope
loope
lret
pop
and
jae
adc
out
aaa
adc
in
std
sbb
outsw
inc
popf
rcrl
enter
push
push
call
adc
jmp
in
in
insl
xchg
mov
js
mov
push
and
loop
in
hlt
fstl
stos
lret
push
inc
lock
push
inc
js
fs
or
nop
pushf
pop
inc
popa
inc
lock
test
lock
sbb
or
add
sub
adc
mov
inc
lret
movsb
push
test
dec
jecxz
inc
js
test
mov
test
push
push
jecxz
sub
inc
dec
inc
lock
mov
xchg
jmp
cltd
in
add
cmp
daa
jg
cmc
sbb
add
push
pop
sub
pop
mov
mov
add
jmp
or
aas
jae
jg
push
imul
mov
push
dec
daa
lock
roll
dec
add
and
jge,pt
pop
cmp
std
lcall
mov
jbe
or
fisttpll
push
dec
pop
mov
clc
test
push
aaa
mov
pop
outsb
adc
sub
xor
sub
es
mov
fbld
pop
fisubs
jmp
or
jl
outsl
mov
mov
test
test
mov
mov
popf
test
sub
cwtl
and
mov
ja
incb
xchg
loopne
jne
mov
fsubs
jmp
aad
lret
and
adc
adc
pusha
mov
imul
push
aam
les
imul
fsubs
fcompl
add
imul
and
adc
cmp
cli
xlat
cwtl
loopne
pop
subl
loopne
call
dec
push
and
jmp
std
aad
cld
dec
sub
adc
hlt
adc
or
ret
pop
sbb
imul
or
outsl
jnp
jl
call
in
pop
pushf
inc
push
or
mov
out
call
gs
jmp
adc
or
pop
mov
add
push
popl
adc
in
push
or
xchg
xor
or
lahf
ret
add
add
jge
jecxz
test
insb
hlt
ljmp
test
mov
ds
jne
add
cmp
and
and
daa
shr
pop
decl
sub
dec
call
sub
dec
test
and
adc
sbb
testb
and
or
data16
clc
hlt
leave
pandn
fmuls
test
xor
inc
sub
cmp
call
jmp
mov
inc
push
movzwl
lock
popf
inc
push
mov
inc
dec
xor
sub
call
jmp
sahf
lea
jmp
sub
jns
adc
or
nopl
adc
idiv
cmp
cltd
and
or
push
add
adc
adc
xchg
sub
xchg
jbe
sbb
and
add
mov
dec
repz
dec
es
mov
test
pop
je
mov
movsl
out
inc
addb
enter
outsl
inc
ret
dec
add
push
or
dec
push
movsl
repz
leave
add
and
nop
dec
paddd
or
inc
aaa
mov
pop
lahf
jl
add
jne
out
mov
cmpl
inc
sub
cli
adc
cli
adc
testl
jnp
mov
and
push
mov
sub
or
xor
push
jmp
jle
test
mov
cld
mov
cmpsl
dec
jl
dec
ljmp
pop
cltd
mov
clc
or
fwait
test
testb
dec
add
mov
nop
fs
and
inc
sbb
push
lods
and
sbb
in
mov
cli
adc
or
dec
ja
repnz
shlb
push
push
call
jb
add
cmp
xorb
jo
or
stos
and
nop
dec
jl
mov
sub
pop
mov
call
adc
pop
shl
push
and
xchg
mov
std
adcl
adc
mov
je
scas
aad
mov
dec
test
add
rcl
sbb
push
cli
or
sub
rcr
xchg
or
adc
clc
pop
push
adc
push
push
sub
push
adc
mov
inc
ret
cmp
inc
adc
movups
lods
adc
sub
neg
push
or
imul
mov
add
jmp
and
imul
lods
repz
pop
fnstenv
cmp
je
ss
sbb
push
push
dec
mov
push
add
into
or
mov
roll
xlat
xor
ja
pop
addb
imul
outsb
in
mulb
js
call
xor
pop
jge
adc
cmp
repz
push
and
outsl
inc
pop
or
lcall
push
jno
dec
dec
add
cmp
add
andb
daa
add
je
mov
inc
mov
adc
adc
mov
cld
xor
aam
insb
sahf
mov
enter
icebp
push
dec
push
cmp
inc
addb
jo
in
test
mov
adc
add
mov
leave
nop
idivl
mov
mov
jno
in
push
and
adc
or
mov
popf
add
addb
negl
cmpsb
push
clc
test
mov
cwtl
fldl
test
dec
and
out
add
and
shrb
sbb
pop
pop
inc
and
inc
imul
mov
mul
les
pop
pop
ret
or
adc
push
xor
xchg
repnz
mov
xchg
pop
out
notb
lods
outsb
outsb
stos
mov
sbb
adc
repnz
jge
adc
mov
call
out
movsl
jmp
sbb
lret
cltd
fs
hlt
bound
das
sbb
pop
or
call
and
out
add
call
dec
test
mov
push
mov
inc
jle
pop
hlt
push
and
cmp
adc
xchg
cs
inc
popa
mov
xchg
jmp
push
inc
aas
pusha
mov
lcall
lret
mov
adc
add
sub
adc
aaa
dec
push
stos
cmp
fmull
out
add
cmpb
or
mov
icebp
dec
fists
stos
or
xor
daa
push
xchg
fmuls
mov
fsubr
xchg
test
clc
call
inc
rcll
repnz
cs
or
push
mov
inc
mov
inc
rcr
xchg
loop
xchg
and
push
dec
or
psrld
mov
xchg
bnd
inc
ficoml
jbe
es
or
mov
adc
push
imul
test
mov
fsubl
push
fimull
and
and
adc
fmuls
mov
daa
enter
nop
adc
aam
add
in
dec
aad
hlt
add
shlb
rcll
inc
mov
call
mov
sbb
les
push
adc
call
jg
push
sahf
cmp
dec
stos
std
mov
out
mov
das
hlt
sub
je
test
ljmp
lret
jmp
mov
push
cmp
sahf
mov
pushf
sbb
je
shlb
xchg
xchg
and
add
repz
repnz
orb
enter
push
repz
pop
or
adc
add
xor
push
outsb
mov
adc
push
pushf
gs
or
das
sub
stos
add
stos
adc
mov
mov
inc
mov
loope
lahf
inc
and
fnstsw
mov
call
test
pop
clc
cwtl
cwtl
lods
call
inc
ds
dec
sub
aaa
mov
pop
dec
fldl
scas
mov
xchg
xchg
cmp
xchg
addr16
stos
cs
lret
fcompl
mov
jp
dec
shll
mov
mov
pop
jle
orl
xchg
and
data16
push
pop
xchg
call
inc
lds
push
call
sub
jmp
xchg
push
dec
pop
xchg
std
ds
cwtl
mov
mov
les
test
lods
xchg
icebp
and
outsb
sbb
inc
fmull
or
mov
mov
call
movsb
mov
push
push
or
push
js
fdivr
add
popa
stc
pop
dec
or
call
mov
sub
jb
clc
sub
les
cmc
insb
mov
hlt
mov
lock
pusha
push
repnz
xchg
pop
out
or
dec
add
sahf
inc
xchg
call
andl
jmp
movsl
les
mov
les
inc
xorl
fs
push
daa
sbb
jmp
testb
in
xchg
ficoms
mov
dec
jge
jb
dec
sbb
push
adc
cmp
sub
xor
mov
or
sub
call
push
dec
adc
enter
cmp
mov
cmpsl
test
xor
fimuls
ljmp
inc
dec
push
inc
ret
lahf
inc
clc
mov
mov
inc
add
mov
cmp
dec
jno
jb
cltd
in
inc
fwait
sub
or
inc
ljmp
inc
xchg
add
and
in
sub
lcall
sub
lcall
xor
and
and
insl
movsl
mov
imul
outsl
mov
aam
xchg
push
adc
inc
loopne
mov
adc
nop
fadd
scas
test
aaa
adc
fmuls
xchg
test
cmp
xchg
dec
adc
inc
aam
js
pushf
aaa
jbe
dec
jl
sarb
cmp
cmp
int3
call
cmp
dec
cmp
mov
inc
enter
dec
add
inc
repnz
nop
inc
fisubs
and
stc
sub
cli
add
sbb
roll
xor
xchg
and
xor
or
adc
adc
insl
inc
mov
stos
sub
out
and
mov
cmp
cmp
sub
sbb
mov
aas
mov
dec
sbb
mov
pop
cwtl
pushf
aas
in
loop
mov
call
cmp
lods
call
cmp
pop
dec
or
test
outsl
repnz
dec
daa
imul
sbbl
mov
cmp
aas
dec
pushf
sbb
pushf
sbb
dec
xorl
dec
cmp
cwtl
adc
lock
xchg
adc
aam
pushf
cmp
pushf
sbb
fs
mov
and
and
dec
dec
lds
mov
mov
add
test
sub
test
lret
xchg
les
push
fs
bound
cld
dec
dec
cmp
inc
inc
adc
cmp
lcall
dec
pop
mov
pusha
frstor
xchg
jp
ret
lcall
mov
jmp
add
leave
ja
jle
cld
push
xchg
sahf
lcall
test
mov
add
mov
sub
or
or
mov
inc
or
and
mov
xor
jge
in
fwait
stos
mov
jp
adc
pop
pushf
push
or
js
enter
enter
and
mov
and
push
lds
roll
scas
cltd
dec
mov
mov
or
pushl
lea
loop
cli
out
inc
ljmp
insl
jo
je
push
jo
jne
ret
adc
adc
popa
ret
outsb
je
adc
adc
repnz
lea
cld
insb
gs
adc
jne
movsb
cmove
jb
leave
outsb
arpl
mov
dec
xor
dec
bound
stc
xchg
xlat
cmp
jle
lahf
cmp
rcll
xlat
out
inc
adc
push
aas
imul
arpl
iret
cmc
adc
adc
xor
jecxz
dec
mov
xor
mov
and
enter
inc
fs
dec
outsl
adc
adc
add
xor
dec
push
std
or
pop
jno
or
sahf
mov
inc
mov
orw
loope
ja
and
pusha
or
jmp
xchg
inc
pushf
fwait
mov
sahf
xchg
daa
inc
sti
shll
lea
mov
add
xchg
add
push
and
and
jmp
lea
and
faddl
and
cmp
dec
mov
cmp
mov
mov
adc
les
inc
call
xchg
sub
inc
xor
inc
xchg
sub
xor
or
jg
cmp
mov
push
pop
inc
xor
pop
and
test
adc
cmp
or
mov
inc
lahf
xchg
and
dec
call
or
cmp
and
stos
push
push
lods
cld
mov
ljmp
and
in
movsb
push
gs
and
pushf
mov
xchg
loope
mov
jae
scas
and
or
sub
jno
sbb
std
adc
sbb
xor
sub
dec
inc
xor
inc
das
mov
mov
imul
xor
stos
dec
xor
hlt
cmp
xchg
xchg
add
pop
nop
xchg
addl
jl
push
mov
or
mov
scas
and
xor
xor
test
xchg
pusha
repz
cmp
call
push
pushf
xchg
push
jmp
or
data16
sbb
xor
adc
sbb
push
fucomp
iret
jl
ret
in
gs
pop
ljmp
pop
jge
add
jnp
je
sarb
xchg
adc
inc
sub
inc
inc
xor
and
sub
mov
and
stc
ss
orb
push
xchg
icebp
cld
inc
add
pop
jl
pop
idiv
dec
mov
movsb
lock
xor
std
adc
push
xor
ret
dec
cmpb
inc
outsl
lds
xchg
xor
sbb
mov
pop
xor
add
fdivrs
sub
adc
mov
sahf
outsb
and
add
ret
and
cmc
lea
pop
and
jle
add
mov
out
xor
inc
push
mov
je
loop
xor
ret
testl
daa
test
fbld
or
or
mov
jnp
stc
div
into
pop
jl
popf
stc
lock
or
ja
call
lods
pushl
enter
and
lea
punpcklbw
jbe
dec
sub
xor
jg
cmp
add
sub
add
mov
pop
dec
ljmp
pop
cwtl
cmp
push
lahf
cmp
and
mov
cli
fucom
in
lds
gs
jno
outsl
add
inc
ss
mov
lock
decb
xchg
pusha
pop
dec
add
mov
sub
pop
mov
xor
aad
mov
dec
inc
mov
mov
addl
cs
add
stos
sub
and
pop
sub
sub
adc
mov
jne
leave
mov
cld
sub
pop
or
xor
adcb
mov
jg
jmp
hlt
inc
loope
rcrb
test
xchg
sti
inc
test
lock
push
mov
xchg
das
dec
and
pop
imul
sbb
and
cmp
cld
xchg
pop
in
ljmp
xor
stos
push
adc
subl
cmp
cli
mov
in
mov
or
hlt
adc
adc
loope
mov
leave
adc
sbb
gs
inc
dec
orl
cwtl
mov
and
nop
jmp
or
out
adc
notb
xchg
shl
test
inc
add
popf
sarb
stos
out
xor
scas
mov
and
in
jb
cmp
xchg
and
in
jb
cmp
lahf
and
in
jb
cmp
das
mov
inc
test
push
inc
inc
incb
test
and
cmpsl
rclb
fbstp
push
lock
test
enter
dec
add
ljmp
movsbl
cmp
push
decb
cmp
loopne
adc
xor
idivb
dec
sbb
jmp
xor
dec
xor
cmp
jle
mov
push
aad
lock
ja
addr16
cld
jge
xor
cs
je
pop
sub
movb
testl
in
scas
rolb
gs
or
pushf
imul
pop
out
or
pop
mov
pop
or
movsl
jl
or
js
or
and
aas
cmp
cld
jo
pusha
dec
and
sbb
lahf
pop
xor
mov
in
or
enter
in
jbe
shl
jl
sub
call
jae
push
lock
pop
push
push
mov
and
mov
sub
daa
je
ljmp
inc
or
lar
pop
loopne
adc
ja
or
jmp
call
aam
mov
cmp
ret
data16
adc
push
pop
sbb
sub
movsbl
pop
mov
adcb
daa
fistl
xchg
sbb
mov
cltd
ss
or
fcompl
out
push
or
adc
jne
mov
sahf
ja
pop
jg
popa
or
call
push
adc
mov
mov
xchg
jl
lea
inc
jno
pop
cmp
incl
cmp
push
and
lds
and
mov
and
dec
or
lods
cmp
cmp
idivl
jl
stos
std
ljmp
xlat
mov
out
pushf
adc
aad
int
stc
or
in
ret
xorl
jno
lea
mov
sbb
clc
or
jno
pusha
xlat
call
adc
xchg
push
stc
jle
decl
inc
adc
test
das
pop
mov
sbb
sbb
mov
or
rcll
call
out
inc
movsb
pop
inc
jle
clc
jl
out
xchg
pusha
mov
cli
or
mov
xchg
fs
sub
imul
cli
xchg
jl
jp
hlt
inc
sahf
lods
aaa
and
les
xchg
stos
leave
les
fdivs
mov
cld
add
xchg
pop
icebp
xchg
or
adc
incb
push
rorl
fldl
aas
movsl
pop
jecxz
or
in
inc
and
cmp
pushf
rorb
iret
scas
adc
add
add
add
call
mov
incb
or
nop
adc
mov
fwait
and
subb
sahf
xlat
mov
arpl
xchg
int3
aas
push
int3
mov
jp
xchg
and
inc
fldt
fstps
sbb
or
dec
js
imul
add
cmp
adc
or
pusha
dec
and
inc
cmp
or
test
adc
pop
pop
add
add
out
adc
mov
pop
and
push
inc
jne
inc
or
xchg
adc
inc
inc
push
mov
fstps
fwait
cwtl
sub
push
jle
enter
push
pop
mov
jno
fistpll
cmp
mov
ja
xchg
repz
inc
xchg
or
dec
fcoml
nop
push
jmp
movsl
lea
sub
xchg
lds
lea
inc
movsb
mov
ficoms
xchg
inc
jp
xchg
cmp
inc
xor
mov
aaa
adc
ficomps
add
adc
pop
add
faddp
lods
mov
dec
or
mov
fdivrl
mov
sbb
xchg
call
jns
add
cltd
je
in
icebp
mov
mov
out
daa
dec
push
jmp
cmp
cmp
lods
or
jne
dec
mov
sti
in
inc
mov
xchg
or
and
adc
cmp
into
cmc
rorb
cmp
loopne
push
inc
test
mov
cmp
sahf
test
sti
mov
add
push
xor
xlat
lods
xchg
mov
and
adc
lret
and
inc
cwtl
shlb
add
jne
add
outsb
insl
gs
je
mov
iret
xor
data16
outsb
ret
mov
mov
push
dec
push
inc
mov
fisubrs
jge
sbb
push
sbb
imul
add
inc
fs
sbb
adc
ficompl
dec
mov
dec
out
push
jns
inc
les
xor
mov
push
push
adc
addr16
or
mov
lea
push
inc
cmp
dec
sbb
dec
insb
adc
xor
sub
loopne
push
or
inc
ds
cmovno
or
dec
gs
jo
outsl
cmpsl
idivb
add
xchg
push
mov
dec
clc
add
clc
nop
add
add
dec
gs
call
push
add
fnstcw
ss
stos
out
xor
push
fmuls
dec
addr16
dec
jbe
popa
dec
or
push
sahf
adc
stos
out
pop
loop
pop
cmc
add
inc
pop
lcall
mov
imul
xor
jp
adc
xchg
inc
xlat
pushl
inc
xchg
repnz
cmp
or
or
test
lock
dec
nop
xlat
push
outsb
pop
dec
push
adc
inc
cmpsl
adc
or
test
mov
ret
les
mov
clc
scas
pop
fs
cmp
mov
push
jb
cmp
adc
sbb
adc
dec
in
nop
lods
pop
in
lods
mov
cmp
je
adc
int
push
pop
movsl
add
imul
fs
ds
inc
add
jae
nop
mov
ja
test
out
test
adc
jno
and
outsl
cs
jo
sbb
test
mov
and
mov
xlat
inc
pushf
jb
xchg
xor
arpl
scas
pop
sarb
mov
pop
mov
push
sub
add
push
aas
sbb
adc
dec
loope
aaa
add
pop
cmp
and
add
es
xchg
hlt
or
and
push
cltd
mov
or
test
pop
pop
enter
scas
adc
cmp
pop
lods
xchg
pop
loop
xchg
adc
sbb
push
add
lods
les
aam
aas
or
dec
lock
xchg
repnz
enter
loopne
add
push
addb
call
adc
pop
inc
scas
fldcw
repz
inc
pusha
or
push
jmp
dec
push
into
adc
lahf
enter
icebp
dec
js
pop
inc
inc
fsubrs
shl
fstps
insb
rorb
or
xor
icebp
or
out
xchg
lock
xchg
mov
adc
push
pop
cmp
and
push
push
nop
pushf
sub
lds
in
jae
fs
jo
add
xor
pop
pushf
jae
push
shlb
scas
cmp
sub
push
pushf
sbb
in
sbb
push
fsubl
inc
inc
add
inc
test
lds
and
or
mov
dec
xorl
sub
dec
push
std
pop
les
sbb
movsb
lds
js
and
xor
fmull
xor
adc
je
add
and
dec
pop
adc
daa
adc
nop
fcoms
push
inc
in
or
mov
or
dec
addb
out
movsb
sbb
dec
sbb
adc
and
inc
rcrb
mov
loop
dec
xor
push
or
push
sbb
nop
push
add
adc
rclb
adc
jo
xor
cmp
push
or
test
jno
popf
sbb
and
fsubl
imul
push
cmp
or
dec
sub
cmpsl
adc
inc
mov
push
sbb
mov
push
rolb
adc
les
sub
mov
xor
mov
or
icebp
or
adc
mov
jo
adcb
push
dec
popa
outsb
fs
jmp
mov
les
inc
mulb
sarb
fcoml
in
mov
pop
and
scas
mov
jl
sbb
adc
je
scas
jl
jo
mov
xchg
int3
ds
int
sbb
jp
insb
mov
and
pop
and
and
inc
mov
jl
andps
push
adc
mov
or
adc
adc
and
fs
and
shlb
cmc
or
pop
sub
inc
push
int3
loop
push
push
ficoml
inc
jo
inc
sbb
sbb
or
dec
sub
push
in
or
adc
scas
mov
inc
pop
sbb
push
xchg
nop
jo
pop
xchg
mov
pop
mov
push
fs
xor
adc
mov
inc
adc
dec
push
cmp
push
rolb
int3
pop
fists
and
or
or
int
xor
dec
pop
lea
and
push
sub
inc
pop
adc
in
add
sbb
xadd
cltd
sub
pop
aaa
aam
test
dec
or
cmp
push
push
sub
add
mov
adc
insb
mov
mov
jbe
fnstenv
adc
push
pop
orb
out
mov
jne
pop
inc
data16
or
out
cmp
dec
sub
mov
loopne
repnz
dec
and
mov
stos
mov
jnp
mov
mov
mov
fsubr
mov
pop
and
xor
sahf
xchg
inc
or
aam
jnp
jmp
pop
aas
int3
push
xchg
jno
fwait
inc
test
sbbb
loop
in
add
int
dec
addb
in
mov
shrl
and
inc
and
fisubl
xchg
sbb
and
cmpsb
xchg
and
sub
lcall
bound
xchg
xor
xor
cmp
data16
dec
adc
inc
cwtl
data16
pop
sbb
or
in
xchg
loopne
and
fwait
pop
adc
mov
xchg
cmpsl
clc
mul
mul
cmc
out
div
in
loopne
icebp
cld
lock
clc
xchg
or
xor
dec
and
sbb
mov
adc
and
dec
or
sbb
adc
or
xor
and
inc
fists
in
mov
adc
or
pop
inc
add
test
and
jnp
mov
pop
test
add
dec
pop
inc
aad
push
push
popa
addr16
pushf
les
jle
in
adc
pushf
js
fwait
addl
mov
mov
adc
punpckhwd
movsl
imul
test
icebp
test
adc
mov
xchg
xor
push
sbb
and
loopne
pushf
pop
or
nop
pop
dec
popf
test
dec
nop
or
mov
adc
les
adc
dec
lods
and
mov
insl
lock
test
fs
dec
sbb
inc
or
jns
jno
push
jne
dec
cmpsl
dec
bound
jne
inc
or
pop
or
or
and
mov
xchg
popf
orb
lds
pop
jecxz
inc
sub
sbb
test
outsl
cmpsb
jecxz
fmul
dec
and
and
or
outsl
jne
es
imul
sub
pop
add
mov
call
stos
sub
movsb
add
in
mov
aas
lds
mov
mov
out
xchg
pushf
pop
fdivs
push
jl
imul
mov
lock
push
adc
jbe
jbe
sbb
jne
lcall
popa
xchg
ljmp
push
sahf
inc
je
pop
sub
ret
jne
or
fnsave
jo
adc
jb
subb
and
std
int
pop
push
mov
adc
mov
lods
xor
inc
cmpsl
in
or
scas
add
in
inc
push
loope
lahf
lock
pop
adc
and
xchg
or
mov
xchg
mov
std
lea
mov
das
enter
push
dec
push
std
mov
push
push
std
movsb
xchg
popa
popf
popf
or
inc
xor
adc
jg
adc
sub
fldcw
pop
fnstenv
andl
fildl
and
aas
cmpl
or
shlb
subb
or
out
mov
push
mov
sbb
dec
xchg
loopne
mov
repz
adc
mov
arpl
dec
inc
test
sub
add
sarb
pusha
or
dec
outsb
in
push
mov
les
scas
sub
adc
inc
movsb
out
jno
add
ds
subl
fs
sbb
mov
shll
jp
pop
and
nop
clc
mov
inc
mov
andl
jge
lea
scas
cmp
or
adc
in
mov
mov
or
maxps
xchg
lock
es
push
inc
push
imul
dec
mov
out
xchg
or
adc
dec
adcb
dec
in
xor
in
mov
dec
mov
sub
xor
or
daa
adc
xor
push
push
mov
mov
dec
push
inc
and
add
movsl
mov
sbb
testl
call
mov
adc
and
inc
adc
xor
jb
sub
and
shlb
les
sub
mov
into
jge
inc
ss
dec
or
mov
cmp
mov
or
adc
aam
ret
adc
pop
movsb
outsb
sbb
lea
mov
ds
jl
inc
xor
pop
das
pop
imul
in
daa
pop
sbb
push
inc
pop
mov
int
and
jecxz
and
movsb
and
xchg
dec
pop
xor
pop
sti
test
xor
xchg
scas
test
movsb
xor
mov
out
inc
cmpb
xchg
mov
cld
jmp
fimuls
out
xchg
xor
shll
daa
jbe
inc
call
xor
mov
fs
rorb
adc
in
dec
lea
es
push
popl
inc
xchg
sbb
xchg
and
test
clc
adc
lea
shll
ja
lock
test
inc
push
jae
aaa
es
std
loopne
inc
cmc
int3
or
inc
cmp
call
sbb
test
outsl
or
lods
cmp
inc
push
mov
mov
lock
int3
pop
data16
jle
push
jns
mov
add
dec
sub
or
push
test
jae
fstp
dec
call
loop
shrb
xor
imul
xlat
dec
inc
les
pop
sti
push
cs
inc
pop
sbb
sti
out
out
dec
movsb
rolb
aas
mov
pop
fmull
mov
int
cs
mov
jge
test
dec
mov
inc
js
and
push
push
enter
cwtl
enter
xor
xor
movsb
cs
xor
incb
sti
push
add
js
xorl
mov
sbb
adc
repnz
les
jne
iret
and
sbb
sti
stos
sbb
xchg
inc
mov
pop
popf
jmp
adc
movsl
mov
push
psubsw
mov
xor
xor
adc
lret
or
gs
hlt
adc
or
scas
push
or
rclb
push
jge
je
cmp
sub
orb
jnp
push
inc
enter
xchg
and
test
mov
pushf
or
out
popa
mov
and
fsts
call
xchg
inc
push
or
add
push
das
in
sub
cmp
push
jae
test
iret
das
sub
pop
mov
mov
call
cwtl
push
cld
iret
movsb
mov
and
sub
inc
std
adc
or
daa
inc
enter
add
nop
jp
cld
ror
jle
inc
xor
lea
inc
mov
sub
adc
push
addl
iret
cmp
push
xor
and
outsb
loop
xchg
leave
push
mov
cld
mov
sahf
pop
outsl
inc
cmp
sbb
cli
push
push
inc
js
xor
stc
or
mov
fs
mov
test
mov
or
jae
or
xor
jmp
mov
cld
sti
cmpl
je
jp
int
push
mov
je
xchg
mov
xor
adc
mov
ja
sbb
jo
sti
mov
rcll
inc
pop
xchg
pop
dec
and
loop
cmp
or
sahf
sti
cmp
test
pop
push
pushf
and
add
sbb
sub
lods
push
and
adc
xchg
jl
pop
mov
ret
xor
dec
repz
mov
mov
xchg
and
xor
adc
arpl
cmpsb
mov
fiaddl
add
dec
add
cs
or
pusha
repz
das
test
out
sbb
test
inc
or
pop
xor
dec
push
cli
cmp
and
pusha
les
stos
insb
in
pop
sub
pusha
shl
cmp
jne
or
not
cmp
and
push
xor
mov
and
jae
xor
in
add
cs
bound
inc
and
pop
xchg
adc
inc
popa
or
add
mov
dec
mov
ret
xor
loope
sarb
movsb
adc
cli
inc
nopl
pop
cmpsl
cmp
lds
ret
push
sti
jbe,pt
scas
push
in
or
or
or
xor
sub
cwtl
scas
or
inc
jne
pop
sub
mov
jo
mov
dec
add
adc
and
cmp
test
sti
add
dec
push
xor
sub
adc
inc
inc
sbb
mov
and
call
les
in
jl
int3
js
xchg
lahf
in
dec
mov
out
dec
scas
and
rcrb
bound
mov
rcll
push
das
jne
je
lret
dec
push
xor
adc
insb
sbb
xlat
mov
jo
test
and
aaa
push
push
enter
pop
pop
fld
roll
daa
add
lock
call
cwtl
push
repnz
jl
pop
ret
jbe
cmp
dec
xchg
inc
sub
stos
aam
bound
push
xor
add
call
xchg
pop
enter
push
ficoms
add
roll
dec
das
out
xor
call
or
cs
insb
jecxz
xchg
imul
adc
add
cmpl
adc
in
es
fimull
sti
pushf
or
add
mov
cs
ss
test
cmp
push
fnstenv
je
dec
xchg
xor
inc
fsubrs
push
and
or
adc
push
adc
or
cld
pop
cltd
sbb
cmp
mov
aaa
sub
negl
add
sub
mov
mov
lods
mov
jae
sbb
and
adc
rol
push
inc
testb
sub
mov
call
icebp
xor
pop
mov
cltd
sub
push
and
mov
outsb
add
mov
xchg
sbb
fldl
mov
mov
sub
enter
jg
lock
or
fwait
or
std
decb
in
xor
jae
jae
or
xor
dec
adc
out
mov
add
or
xor
fwait
out
xchg
mov
add
and
xor
repnz
cmp
cltd
add
and
into
mov
xchg
mov
ljmp
std
scas
mov
sub
add
in
adc
push
sbb
das
cld
xchg
inc
jnp
inc
add
mov
mov
inc
adc
mov
lahf
and
nop
mov
jmp
movsl
sahf
jp
pusha
cmpsb
jne
mov
and
dec
hlt
pop
int
pop
push
gs
cwtl
inc
xchg
std
and
es
push
cmp
dec
lods
aad
inc
jae
cmp
sarb
inc
out
lods
push
dec
mov
mov
dec
inc
push
or
cli
inc
aas
jle
movsl
lret
in
jmp
or
mov
test
lret
or
lahf
xor
xchg
jmp
inc
cmp
dec
jge
push
pop
add
adc
jne
sbb
xor
rcrl
mov
out
and
push
mov
add
pop
push
sub
es
psubsb
xlat
stos
jns
or
lret
and
mov
aad
mov
in
rolb
sub
scas
xor
jmp
fdivrs
push
jbe
stos
or
fwait
cmpl
xchg
fcoms
loop
xchg
incl
insb
sbb
dec
les
stos
sub
mov
adc
std
lret
inc
xchg
fnstenv
xor
jle
sbb
and
enter
loopne
test
leave
jmp
inc
dec
lahf
subb
jg
dec
dec
enter
cld
dec
sbb
repz
sub
test
rcrl
jns
arpl
ret
and
sub
and
cmc
in
rcll
and
test
adc
pop
jmp
dec
ljmp
movsb
inc
add
bound
inc
sbb
ljmp
jnp
sbb
xchg
adc
and
sub
adc
cwtl
rol
inc
jne
jbe
lods
mov
and
dec
push
leave
jne
pop
adc
sti
jmp
push
sub
add
cmp
je
sbbl
fnstenv
in
jae
jno
rcll
jno
movsl
add
les
lea
mov
xchg
sahf
adc
push
std
arpl
push
cmp
or
push
adc
xchg
and
shl
pop
inc
mov
hlt
outsb
add
pop
leave
insb
lock
mov
inc
jbe
gs
xor
cmp
pop
jge
dec
iret
xchg
add
leave
push
and
mov
and
jmp
sbb
lahf
push
out
cmpsl
mov
push
in
cmp
and
adc
push
cmp
cmp
cmp
out
sbb
jg
into
mov
outsb
es
mov
pushf
inc
xlat
xchg
lock
inc
ds
mov
sub
or
pop
insb
test
xchg
jns
dec
xor
cmp
pop
nopl
pop
stos
adc
mov
mov
loope
mov
rorl
mov
pop
jmp
jg
jl
fsubs
dec
inc
mov
pop
lock
bound
rol
je
inc
push
test
mov
pop
ja
add
xlat
jb
mov
push
add
in
mov
jne
xor
jmp
inc
add
jne
inc
decl
in
mov
pushf
and
test
mov
iret
testb
inc
sbb
jnp
mov
adc
ljmp
and
je
in
orl
shlb
fwait
rcrb
faddl
push
cmp
sub
cmp
test
mov
movsb
outsl
mov
jne
test
lcall
stc
sarl
push
outsb
imul
pusha
cmp
sbb
inc
sahf
jns
lahf
mov
fsts
unpckhps
mov
sbb
dec
ljmp
lea
fiadds
push
repnz
push
hlt
jbe
mov
clc
inc
mov
jl
mov
xor
pop
cs
add
std
test
or
mov
xchg
pop
push
xchg
fiadds
xor
sbb
sub
je
jbe
test
add
or
movsl
pop
out
dec
add
cmp
push
mov
icebp
decb
xlat
mov
and
and
push
pop
pop
gs
sahf
xor
jle
adc
cmpsb
and
movb
add
jmp
lock
pop
or
dec
lcall
push
rcrl
movsb
mov
repz
lods
and
rclb
mov
pop
imul
dec
int
call
into
jno
inc
fsubs
cmp
in
and
out
push
sahf
mov
and
inc
xchg
xorb
dec
add
xor
xchg
push
push
clc
jns
lock
fldt
xchg
xor
cmp
push
dec
or
push
mov
enter
sbb
cmp
xchg
adc
inc
sbb
adc
adc
shl
sbb
cmpsl
cmpsb
cld
inc
movsb
dec
idivb
lods
les
popf
call
lock
imul
popa
out
inc
cmovb
mov
jo
or
jbe
enter
shlb
push
mov
or
xor
mov
xchg
inc
arpl
sbb
lret
bound
or
sbb
mov
mov
sub
jo
pushf
or
mov
daa
test
inc
sub
call
shl
jmp
dec
adc
sub
add
pop
out
das
mov
push
push
or
push
inc
pop
stc
mov
jo
push
inc
mov
jp
lahf
adc
inc
mov
dec
data16
jne
andb
mov
icebp
cmpsl
aas
sarl
and
out
sub
hlt
aad
xlat
mov
cmp
jb
insl
and
xor
mov
dec
pop
cli
push
leave
and
sahf
xor
mov
es
and
js
or
das
icebp
fs
in
adc
adc
loop
fstl
ror
icebp
insb
adc
aas
outsb
adc
fldenv
jnp
xorb
stc
jnp
iret
pop
ret
fstpt
lahf
inc
mov
xchg
outsb
outsb
repz
clc
mov
jle
je
popf
adc
push
cmp
pusha
dec
std
xor
pop
mov
das
cmc
aaa
lea
in
dec
adc
mov
push
and
shll
in
ds
xchg
xor
and
mov
mov
sti
push
sarb
data16
xchg
lock
jg
cmp
dec
jl
xchg
out
push
lds
dec
lods
inc
and
inc
dec
cltd
push
sbb
addr16
fsubrs
mov
inc
dec
test
or
inc
dec
scas
cmp
leave
and
and
jo
inc
mov
out
xor
jo
clc
inc
jp
dec
inc
movsl
mov
cmpsl
das
xor
cltd
push
lea
mov
cmp
xor
dec
roll
shl
dec
lret
add
xchg
push
mov
xchg
mov
adc
push
in
dec
and
call
div
mov
sub
jecxz
fldcw
xchg
loopne
add
bound
loope
je
mov
std
inc
rorb
ret
sbb
cs
shl
and
xchg
nop
dec
adc
push
out
adc
adc
jp
ret
mov
mov
dec
cld
sbb
mov
clc
outsl
fcoml
push
xor
or
mov
dec
in
xor
adc
cmc
movsb
outsb
orb
xchg
or
push
clts
xchg
ljmp
int
orb
sbb
outsl
je
xor
loope,pn
cmp
pop
rcll
push
jp
int
or
jnp
movsb
dec
lret
dec
and
adc
jecxz
mov
xor
stos
je
in
mov
cmpb
je
jl
add
or
sti
daa
pop
push
adc
cmpsb
fists
push
fisubrs
xor
sbb
mov
jp
dec
adc
dec
imul
add
sub
mov
out
dec
jg
jns
imul
mov
andb
dec
inc
inc
stc
xor
adc
lea
sub
dec
dec
and
add
pushf
dec
imul
sub
mov
or
out
mov
and
dec
add
call
lret
mov
jge
loopne
scas
bound
adc
push
std
repz
pop
xchg
clc
pop
mov
scas
sbb
lea
mov
les
mov
addr16
mov
stc
clc
adc
dec
sbb
inc
sbb
stos
sub
fisubrs
bound
dec
adc
call
movsb
fldcw
cmp
bound
call
clc
jmp
mov
push
cmp
or
sbb
add
dec
push
dec
jecxz
push
mov
mov
in
sub
mov
outsl
dec
popa
fdivs
repz
movsb
and
jmp
lea
and
mov
pop
std
xor
inc
push
fsubr
xor
insb
push
sbb
cmp
adc
jg
enter
or
cmp
repnz
pop
mov
dec
cld
cld
mov
in
loope
je
or
lea
call
sbb
xlat
cmp
out
mov
mov
push
dec
dec
hlt
sahf
movsb
mov
sub
inc
hlt
jmp
cltd
orb
and
vandnpd
stos
in
add
inc
jmp
mov
mov
in
cwtl
push
or
or
jo
mov
lret
sub
add
clc
xchg
call
xchg
cmp
pop
or
aaa
jp
dec
mov
adc
call
push
jmp
out
inc
dec
sub
xor
ljmp
xlat
cmp
pop
mov
iret
jno
leave
xor
dec
xor
cld
inc
and
icebp
dec
fadds
lods
ljmp
dec
sub
testb
mov
add
mov
pop
imul
xchg
pop
shlb
inc
fiadds
orb
push
divb
adc
rorb
or
subl
pop
iret
imul
dec
sbb
or
inc
stos
cli
adc
cmp
rcr
les
test
sub
loop
xchg
notl
jnp
and
pop
mov
push
xchg
jo
mov
xchg
sbb
sub
es
fcmovbe
negb
imul
xchg
outsl
mov
in
mov
mov
push
and
inc
fsubrs
test
xor
jb
sub
inc
sub
xchg
xor
fists
inc
out
adc
ljmp
ret
shrb
mov
cmp
add
push
lea
add
mov
cmp
lods
push
roll
and
or
call
push
gs
test
push
iret
and
jnp
iret
dec
das
xchg
jge
xlat
jl
mov
mov
stc
adc
inc
and
and
cli
addr16
push
dec
cltd
jg
js
lock
cmc
out
hlt
dec
mov
push
or
je
or
cwtl
pop
or
fidivs
inc
adc
imul
and
push
sahf
je
jge
lea
jmp
sbb
dec
mov
and
inc
pop
add
cmp
repz
jle
shll
xor
jbe
fs
in
dec
inc
repz
push
cmc
fisubrs
mov
sbb
or
adc
mov
push
jmp
outsb
add
mov
sbb
lcall
lret
sar
rcll
pushf
popw
dec
pop
adc
and
mov
out
mov
test
mov
lock
popw
and
push
je
mov
inc
imul
ret
enter
cmpsl
xor
lods
imul
mov
mov
pusha
dec
test
push
repnz
or
xchg
adc
pop
or
es
lods
loope
loopne
adc
jo
pop
repz
dec
lods
negl
mov
push
mov
das
sub
ret
js
nop
fwait
or
inc
pop
inc
adc
movsl
jmp
cmp
mov
jne
cmpl
jbe
shr
and
mov
sub
mov
push
jl
inc
dec
and
inc
jg
ret
pop
mov
sub
cmp
lock
mov
or
jp
jp
push
inc
dec
dec
xor
sbb
jle
mov
imull
nop
and
jl
mov
mov
popf
dec
lcall
add
shr
out
and
jge
pop
sbb
adc
fists
mov
inc
test
icebp
inc
jmp
rol
jge
mov
mov
adc
sahf
pop
mov
mov
shrb
add
imul
mov
lret
cmp
js
and
inc
jle
xchg
and
in
or
pushf
fldcw
add
lods
bound
mov
les
dec
scas
push
mov
aaa
ret
movsb
cmp
adc
dec
stos
test
add
xchg
in
xor
dec
nop
fs
test
xchg
mov
cmpl
or
xorb
add
daa
adc
cwtl
or
jbe
es
pop
mov
and
inc
adc
dec
xchg
jae
stos
roll
loop
dec
mov
add
cli
jge
aam
mov
xor
inc
push
and
or
lea
sub
es
mov
rcrl
sbb
jmp
insb
dec
push
or
mull
sti
inc
push
dec
leave
arpl
mov
cmp
and
xor
or
dec
dec
add
push
push
mov
out
adc
aad
and
sub
je
icebp
mov
jbe
adc
push
or
cmpsb
loopne
negb
loope
es
inc
das
sub
test
fs
pusha
push
adc
push
or
dec
loope
iret
push
inc
cmp
sbb
test
icebp
or
push
popa
xor
sbb
xor
xorl
int
adc
jg
sub
jns
xor
mov
lock
add
or
and
in
call
out
not
or
cmp
mov
jae
lds
add
add
xchg
test
mov
lret
sti
out
sub
sub
jnp
ret
sbb
cltd
sub
sbb
mov
pop
lea
mov
fxch
ficompl
and
adc
push
aam
rorl
xchg
sbb
add
and
stos
mov
sub
icebp
addb
andl
in
sbb
fstp
mov
lea
lock
mov
inc
sbb
mov
add
nopl
mov
in
push
test
fimuls
mov
je
negb
pop
inc
or
dec
cmpsl
lock
enter
fsts
repnz
dec
scas
sarl
push
xor
pop
jmp
sbb
or
sbb
and
dec
enter
dec
lods
clc
mov
fdivrl
cld
mov
mov
pop
push
lds
mov
mov
and
dec
jbe
inc
pop
test
xchg
out
jne
cmp
fimull
mov
cmpl
lea
lods
xor
aas
dec
sub
mov
add
jge
in
cmp
pop
mov
inc
jle
or
mov
xchg
in
sbb
dec
fidivrs
xchg
out
pop
imul
cwtl
loopne
aaa
inc
daa
inc
cmc
pop
gs
xchg
and
dec
cmp
call
mov
mov
mov
mov
sarb
in
inc
or
fnstsw
add
clc
push
xchg
mov
add
lret
mov
cmp
fincstp
sbb
pop
push
or
imul
adc
leave
add
cmc
divb
cmp
into
jge
push
cmpsb
or
add
jmp
or
jae
pop
pop
sbb
addl
add
je
sar
lea
jmp
sahf
mov
or
popl
add
sbb
sti
add
cwtl
xchg
clc
sbb
or
and
inc
and
or
fadd
lock
push
cmc
adc
push
pop
add
fsubp
push
fsubp
sbb
jne
scas
and
sbb
xchg
dec
icebp
xchg
roll
aad
or
add
lock
aas
sub
sarl
idivl
or
push
imul
loope
into
and
jmp
ljmp
loopne
clc
mov
add
mov
sti
xor
jne
push
loopne
scas
cmp
cmpsb
icebp
adc
push
pop
incb
lock
push
jmp
adc
inc
adc
or
pop
ljmp
or
inc
push
and
fsubl
icebp
ljmp
cmp
add
nop
leave
pop
jle
cmp
push
adc
jp
lret
aad
lock
mov
les
int3
in
jbe
stos
lret
repz
roll
pop
xchg
sub
mov
sar
icebp
inc
mov
out
push
xor
das
cmc
pop
addr16
xlat
lods
jae
hlt
lret
jne
xlat
pop
mov
sub
lret
push
push
mov
outsl
mov
cld
inc
and
enter
loope
pop
sbb
and
daa
rcr
outsl
mov
jg
jge
cli
dec
mov
clc
hlt
adc
pushf
loopne
rcrb
add
inc
adc
dec
in
jle
adc
movsl
xchg
adc
lret
dec
stos
adc
divl
loopne
jge
movl
stc
pop
pushf
dec
sub
jo
rolb
xor
outsl
xchg
fadd
push
and
icebp
mov
inc
out
mov
cmp
mov
ja
cmp
aad
jmp
in
dec
cwtl
pop
sbb
mov
scas
aad
cwtl
test
sbb
mov
nop
lahf
fs
mov
sub
jl
mov
shl
add
xchg
or
or
outsl
pop
jo
imul
pusha
push
out
sbb
js
adc
adc
mov
dec
nop
push
adc
adc
xlat
fbld
lea
mov
ficoms
addr16
or
inc
aam
push
iret
mov
dec
sbb
fidivrs
jb
add
ds
xor
out
ror
lea
adc
fistps
mov
push
mov
negl
jo
enter
add
push
fsubl
adc
inc
test
inc
mov
jle,pn
mov
movsl
andb
add
push
inc
nop
pop
ret
fistps
and
add
lock
add
cmp
bound
test
test
pop
jbe
cmpsl
call
int3
adc
bound
stos
push
testl
jmp
lahf
xchg
pop
adc
add
in
ljmp
sbb
pop
and
jge
pop
mov
loopne
mov
std
push
mov
rcll
stc
outsb
adc
sarl
lcall
jbe
fcoml
pop
lret
pop
dec
sub
jbe
mov
scas
out
pop
inc
addr16
lods
push
fdivrs
sub
lds
and
push
mov
fs
shll
cmp
xlat
jl
dec
inc
enter
or
mov
int
daa
icebp
pop
rolb
into
mov
fstps
sub
jle
repnz
mov
daa
ret
pop
xor
jno
cld
mulb
pop
aad
ret
andl
rcrl
hlt
push
mov
adc
je
xor
adc
add
pop
movsl
ss
adc
mov
dec
cli
shll
ret
jg
addl
adc
or
jl
push
stos
jne
xchg
out
fmuls
stos
stc
cmc
mov
inc
and
mov
pop
adc
iret
xchg
in
add
andw
test
sub
push
nop
lret
xchg
aam
lods
jl
jmp
cmp
fs
out
push
sub
gs
dec
pop
pop
xlat
push
mov
out
fstpl
pop
jg
xchg
and
adc
mov
sub
mov
inc
add
lock
cmp
ret
push
adc
inc
push
negl
jecxz
cs
daa
je
test
scas
int3
cs
leave
push
jb
test
in
shrl
and
das
movsl
mov
sub
xchg
adc
mov
push
xlat
or
cmp
ljmp
adc
lret
fsubrl
inc
dec
jle
cmp
inc
sbb
insb
popf
jne
cld
mov
je
nop
or
mov
ss
mov
cmpb
cwtl
mov
and
sbb
shlb
xchg
cmc
adc
mov
cwtl
xchg
leave
into
pop
ds
stc
ret
and
pop
in
or
sub
lret
push
jo
cmp
push
shlb
adc
push
dec
enter
fnsave
cmp
xchg
mov
inc
lret
and
shr
adc
bound
aam
jmp
je
or
push
cmp
mov
cmpsl
sub
call
or
sbb
dec
adc
sbb
inc
js
clc
lret
movsl
and
sbb
jle
les
rclb
addr16
ret
add
dec
lds
mov
add
push
cmp
dec
hlt
sbb
test
inc
mov
push
popa
mov
lcall
adc
sub
sbb
sub
pushf
pop
push
mov
outsb
or
pop
or
push
inc
lret
push
pop
or
add
mov
dec
push
push
sbb
leave
js
sbb
push
int3
lahf
mov
sub
mov
push
push
das
push
lahf
nop
sbb
lds
mov
add
push
inc
jo
in
pushf
dec
clc
xchg
mov
lcall
push
outsb
in
xor
inc
pop
cmp
push
cltd
jne
adc
aas
add
call
inc
push
ss
mov
inc
imul
cld
mov
fisubl
daa
test
jne
mov
and
pop
call
xchg
xor
xchg
jo,pn
adc
iret
jmp
push
adc
cltd
int3
ja
sbbb
xlat
rcl
neg
mov
repz
fidivrs
stos
js
data16
sub
and
shrb
sbb
inc
xlat
dec
rorb
jmp
xor
shll
flds
sub
enter
mov
popf
fs
and
daa
inc
push
jns
aad
pop
iret
popf
int
movsb
cmp
ljmp
inc
jp
test
adc
pusha
outsl
dec
mov
daa
je
rclb
sub
into
test
scas
xlat
lods
in
mov
mov
out
lret
shlb
cmpsl
sarl
ja
jmp
inc
lock
out
cwtl
xor
movswl
clc
push
stos
leave
mov
or
and
dec
outsl
push
sbb
mov
xchg
jge
dec
pop
cmp
mov
mov
or
les
xchg
les
and
mov
dec
mov
adc
cmp
jg
mov
or
push
sbb
sub
pop
sbb
adc
mov
adc
pop
iret
mov
jmp
xor
cltd
ja
clc
lock
push
cmp
xlat
arpl
mov
inc
adc
mov
push
add
cld
out
loop
orb
jne
pop
lahf
push
shr
sub
int3
mov
mov
push
cmp
and
dec
and
int
ret
pop
testb
sbb
dec
mov
mov
fsub
pop
mov
lods
dec
jle
cmpsl
or
push
and
fs
es
and
adc
test
mov
mov
call
or
stos
mov
les
sbb
inc
sub
sub
pop
jae
orl
fistpll
and
or
lret
mov
cwtl
push
or
and
xchg
sti
mov
insl
cld
dec
js
int3
mov
mov
sub
xchg
out
adc
sub
sub
cmp
jle
xlat
mov
lds
mov
jl
xor
jnp
push
int3
in
inc
je
int3
imul
cld
dec
leave
pop
fsubp
and
daa
cmpsb
inc
jae
je
pop
fstp
push
jmp
jge
popa
mov
insl
inc
add
xor
xor
pop
xor
dec
cmpsl
out
popf
js
cmp
mov
std
pop
mov
fs
xor
std
shlb
push
cmp
data16
lea
pop
mov
pushw
push
jmp
cwtl
sub
shr
and
sub
iret
ret
inc
push
inc
push
notl
add
or
aas
cmp
mov
add
call
cmpsl
sti
call
hlt
cmp
testl
jo
push
fldenv
ret
xlat
xor
addb
mov
test
fs
xchg
clc
mov
adc
outsl
repz
mov
pop
sbb
and
sbb
addr16
and
jo
xor
insb
sbbb
lret
in
jo
jno
rorb
aam
call
cld
mov
sbb
or
test
lcall
inc
add
jmp
sub
stc
or
mov
lahf
or
pop
mov
and
sbb
dec
cmpsb
out
xor
ret
test
addr16
pop
adc
mov
push
sub
mov
data16
push
test
jne
cltd
inc
add
push
jmp
adc
in
dec
xchg
pop
test
inc
cmp
or
nop
mov
and
jbe
daa
lds
mov
mov
fwait
sbb
pushf
xchg
dec
adc
mov
shl
addr16
and
pop
dec
fstpt
or
adc
pop
sbb
cmpsl
mov
popa
std
test
ror
nop
and
inc
leave
sti
fs
scas
rcrb
shll
dec
loopne
in
jmp
push
push
shrb
mov
nop
in
or
push
xor
jbe
movsb
or
and
jae
cld
insb
mov
jge
insb
daa
push
idiv
lret
or
jmp
cwtl
pop
std
adc
sbb
test
xlat
xor
jb
addr16
les
popf
sti
rclb
popa
xor
iret
shll
pop
and
and
adc
or
bnd
push
ljmp
in
mov
dec
add
test
cmp
and
sbb
push
les
jo
nop
adc
push
test
shrl
daa
xchg
xor
adc
add
xor
mov
lds
jmp
movsb
sbb
pop
mov
and
and
sti
mov
adc
inc
sar
or
dec
out
adc
and
xchg
ret
jmp
out
daa
pop
adc
adc
call
cld
push
mov
add
imul
add
gs
imul
mov
xchg
xor
leave
lret
jae
cmp
cld
das
call
cmc
mov
jo
jae
dec
stos
mov
mov
pop
pop
pop
cmp
dec
push
out
push
add
adc
hlt
mov
ljmp
xor
sub
mov
jb
add
rcrb
and
cmp
ret
sub
xchg
push
sbb
fisubl
xor
pop
pop
jmp
mov
sub
test
push
jge
adc
or
xlat
or
les
dec
daa
in
nop
stos
call
mov
mov
dec
mov
push
jmp
xchg
dec
pop
insb
dec
mov
sub
or
scas
push
sub
jp
pop
xchg
xchg
nop
hlt
push
inc
mov
mov
enter
dec
or
adc
lock
test
or
mov
and
or
add
or
fcoml
push
mov
adc
push
loope
testb
adc
sub
xchg
and
adc
dec
loop
jge
push
in
sahf
ret
lea
jmp
jbe
push
add
jge
add
test
pop
mov
clc
mov
pop
xchg
inc
xchg
pop
add
loopne
push
xchg
test
rclb
xor
cmp
jne
sub
xor
sbb
and
inc
adc
test
cmp
mov
push
scas
push
call
pop
push
mov
sub
dec
dec
or
or
ret
jmp
std
lock
add
inc
inc
cmpsl
test
outsl
adc
xor
test
push
cmpsl
and
lahf
fsubrl
add
cmp
ja
int
insb
out
dec
mov
and
pop
dec
cltd
cmpsl
into
aam
cli
or
xchg
mov
or
push
mov
xor
add
cmp
jne
sbb
or
cli
bswap
xor
push
xchg
nop
and
mov
pop
pop
cmc
xchg
hlt
xchg
in
inc
fsubrl
mov
push
and
mov
movsl
mov
pop
insb
jmp
mov
sub
fiaddl
jne
jnp
imul
pop
mov
leave
pop
dec
mov
loopne
mov
nop
sub
enter
test
mov
fsubl
add
cmp
dec
sarl
les
xor
or
inc
rcrb
xchg
imul
call
mov
in
rolb
jl
push
add
jge
mov
aas
insl
inc
xchg
mov
bound
gs
jb
mov
call
lock
fs
sti
jmp
jge
or
pusha
sbb
jne,pn
icebp
xor
addl
fcmovbe
xchg
inc
test
inc
imul
enter
push
dec
mov
cmp
dec
jg
lret
cmp
pop
xorb
jne
inc
sbb
call
ss
push
and
mov
negl
jmp
imul
xchg
push
lock
jmp
xor
dec
mov
mov
xorb
xor
sbb
or
add
bound
dec
sub
cs
js
pop
or
mov
jmp
mov
js
mov
bnd
pop
mov
push
fistpll
xchg
cli
int
jp
rclb
mov
xchg
iret
pop
push
rorl
subps
arpl
and
push
shlb
shlb
outsb
popa
sbb
push
pop
out
and
and
call
jl
mov
mov
lahf
jnp
cli
lock
xor
mov
xchg
and
push
hlt
fcmovnbe
cmpsl
xchg
sbb
cmpsb
imul
mov
mov
hlt
daa
nop
out
jl
dec
xor
call
or
cmp
or
lret
and
inc
xchg
inc
add
rol
fucomp
inc
cmp
ss
enter
aas
xchg
pop
and
xlat
sbb
xchg
and
mov
mov
jl
roll
jae
push
cmpsl
fsts
lret
pop
mov
jg
and
sbb
push
pop
add
jg
dec
hlt
bnd
inc
adc
adc
sub
xor
dec
std
inc
out
mov
sbb
jne
mov
pop
jmp
mov
cmp
pop
push
fwait
or
filds
enter
mov
and
mov
add
lret
add
xor
movsl
in
dec
out
jl
mov
push
in
sahf
in
dec
jmp
mov
add
jo
pop
pop
inc
enter
mov
out
mov
fisttpll
jne
or
sahf
pop
ret
mov
inc
pop
mov
jo
and
notb
bound
lea
inc
sub
cmp
adc
mov
xor
jno
pop
inc
adc
test
inc
adc
in
pop
sub
mov
cmp
adc
xor
inc
sub
adc
int
dec
pop
lods
mov
leave
xchg
in
sub
scas
inc
pop
adc
sbb
xor
aaa
dec
out
cwtl
sub
sbbb
dec
inc
test
in
call
push
mov
cmp
adc
aam
out
inc
testb
test
or
in
data16
popf
sarl
aaa
fdivrs
xchg
inc
inc
ds
js
cmp
push
inc
inc
pop
clc
add
dec
and
inc
pop
jbe
popf
push
out
jg
aam
or
test
dec
pop
pop
data16
insb
mov
sti
adc
push
fistl
push
mov
pop
stc
in
pusha
dec
jmp
inc
mov
dec
jge
pop
cli
shlb
add
lcall
iret
call
cmpsl
inc
and
pop
push
jnp
xchg
or
mov
jnp
sbb
lock
shr
addb
leave
ss
ja
cli
push
int
inc
push
mov
pop
out
cmpsl
pop
xchg
fidivs
aaa
lods
das
mov
mov
cmp
sub
cmp
mov
pop
xchg
pop
cmp
cmp
xchg
pop
or
sub
xor
or
nop
cmp
mov
pop
es
adc
push
or
movsb
clc
mov
fs
pop
daa
add
clc
and
xor
pop
int3
or
lock
je
or
adc
jno
mov
xor
push
adc
fs
repnz
mov
sub
adc
pop
cmp
jecxz
or
scas
and
push
pop
and
dec
sti
dec
add
inc
mov
push
and
and
cmp
xor
or
inc
xchg
or
lret
imul
fildll
and
mov
je
in
mov
inc
fs
dec
repnz
test
mov
sub
dec
movsb
cwtl
mov
jg
mov
inc
dec
mov
aaa
daa
jmp
das
mov
lock
xor
inc
mov
dec
das
dec
fwait
mov
adc
aam
test
sub
rorb
into
mov
xlat
cmpsl
jmp
clc
outsl
fistl
stos
subl
std
data16
in
fwait
adc
jecxz
ret
cltd
xchg
orl
and
inc
mov
loope
xchg
and
xor
loopne
loopne
bts
jmp
clc
jecxz
data16
fwait
bound
stos
insl
scas
fwait
dec
mov
cmpl
and
jno
iret
and
or
mov
in
adc
add
or
bound
outsb
adc
into
push
repnz
and
shrl
inc
stos
fsubrp
ficompl
xchg
test
cmpsb
jno
adcl
je
mov
cld
and
cmp
sub
cmc
dec
jge
xor
jb
lds
adc
loopne
cld
movsl
nop
or
out
jb
dec
cld
pushf
insl
ljmp
sti
mov
das
push
icebp
cmpb
int
into
jae
rolb
into
mov
sahf
cld
dec
cli
and
mov
test
push
mov
push
call
xor
ja
push
xchg
ret
dec
add
test
ja
adc
mov
xor
adc
cmp
and
aas
mov
jno
xchg
movb
int
adc
mov
dec
dec
aam
or
push
loopne
les
mov
sbb
and
mov
xchg
bound
sti
add
outsl
cmp
or
xchg
xlat
mov
xchg
mov
lock
mov
xor
cld
jmp
add
out
fs
out
pop
inc
icebp
pop
cmp
push
mov
ret
mov
es
imul
arpl
inc
das
pop
mov
mov
in
rorb
stos
gs
cltd
sbb
mov
xchg
test
lock
sub
adc
int3
movsl
cld
cltd
icebp
pop
mov
dec
mov
adc
dec
jg
pop
cmp
rolb
pop
adc
or
mov
sahf
inc
mov
inc
mov
fcoms
out
fs
or
dec
or
sub
inc
mov
mov
pop
pop
clc
push
nop
dec
sub
lret
adc
and
in
and
test
bound
and
hlt
mov
imul
cmovp
fs
xor
mov
enter
inc
push
or
and
adc
mov
xchg
sbb
aaa
popa
cmc
std
mov
cwtl
xchg
ds
mov
cmp
xchg
push
nop
jl
movsl
inc
mov
cmp
dec
mov
repnz
dec
je
scas
cwtl
inc
hlt
movsb
push
jge
test
push
jl
sub
mov
inc
cli
jge
fs
push
mov
inc
jbe
pop
mov
or
xchg
stc
insl
cmp
neg
stc
inc
inc
push
out
sahf
sahf
je
xchg
fxch
lds
mov
mov
adc
jecxz
pop
jnp
test
stos
or
pop
push
jns
lods
fs
mov
push
cli
xchg
ljmp
push
call
sbb
clc
out
sub
sub
sbb
inc
mov
mov
scas
js
mov
inc
lcall
fs
mov
js
pop
or
lret
enter
mov
fs
das
lret
or
ds
inc
call
loop
xlat
mov
dec
mov
jo
in
jmp
mov
mov
xor
rcll
test
jnp
inc
test
push
and
bound
add
pusha
mov
sbb
push
ficoms
call
push
and
pop
movsl
repnz
xchg
test
xchg
stos
flds
das
sub
push
push
pop
orl
popa
xchg
leave
sub
sub
mov
pushf
sbb
sarl
das
dec
lock
in
cmp
mov
mov
pop
push
mov
nop
mov
xchg
clc
stc
scas
iret
cmpsb
and
adc
loop
dec
xchg
hlt
mov
push
mov
les
scas
int3
vmovsldup
fsubr
loop
sbb
loop
rcl
push
stos
mov
sbb
pop
call
int
das
cltd
and
push
xchg
and
xchg
into
es
nop
repz
das
fstl
out
sbb
add
lock
or
outsl
dec
sub
inc
lret
daa
inc
xchg
lods
push
rolb
enter
rcrl
cltd
outsb
gs
inc
fcmovu
movsl
cltd
outsb
or
push
sbb
mov
inc
pop
jl
xchg
mov
icebp
push
lods
movsl
mov
and
pushf
mov
inc
sub
mov
xor
fstl
into
mov
stos
je
pop
ficoms
push
lea
push
xchg
xor
adc
aam
push
mov
sub
xchg
push
xor
call
sbb
or
or
dec
inc
clc
cmp
or
repnz
fbstp
lcall
inc
lods
rorb
mov
mov
pop
sbb
mov
aas
adc
insl
cmp
inc
and
mov
push
push
loope
aam
lock
rcll
add
fs
and
cwtl
cmp
xor
je
jg
sahf
mov
jmp
xchg
pop
mov
xchg
idivb
jmp
adc
adc
testl
mov
inc
inc
push
mov
fwait
xchg
das
cmp
repnz
sbb
sub
in
gs
test
daa
push
popa
and
rcll
mov
sub
mov
mov
mov
lret
mov
leave
stos
mov
ja
dec
mov
mov
adc
sub
or
mov
push
in
pop
lds
lret
rcl
or
out
insl
add
ficomps
dec
jbe
les
inc
call
aam
xor
and
mov
pop
pop
test
jecxz
test
or
push
jl
cmp
mov
push
add
inc
push
or
sub
out
adc
and
out
jg
xor
sbb
sub
add
xor
mov
add
rdpmc
mov
lcall
imul
jb
imul
imul
inc
mov
pop
sbbb
mov
cmp
push
dec
test
sbb
add
ret
dec
movsb
je
and
and
mov
pushf
fs
jae
jns
or
mov
lods
movsb
xchg
iret
xchg
adc
in
jg
aam
out
scas
jg
bound
add
push
dec
mov
jb
or
addr16
stc
aaa
into
iret
push
mov
lods
pop
cltd
and
in
push
mov
dec
rorl
inc
test
push
mov
pop
mov
iret
movsb
or
xor
jo
mov
fs
dec
call
icebp
xor
cmp
add
insl
pop
cmc
sbb
xrelease
inc
and
aad
mov
pop
push
adc
pop
lcall
ficoml
push
xor
arpl
in
dec
sbb
js
or
mov
cmpsb
mov
or
jno
dec
cmpsl
pushl
and
into
mov
rorb
sub
out
cmp
sbb
or
push
and
movsb
es
adc
mov
dec
jecxz
push
lds
mov
mov
sub
pop
sbb
cmp
push
mov
les
sbb
loope
nop
ffreep
mov
jb
bnd
mov
mov
xchg
ret
inc
and
jge
je
inc
mov
fists
ret
jp
push
popa
cwtl
push
call
dec
repnz
xor
add
rorb
push
or
xchg
in
shll
mov
jae
ret
cmpl
fisttps
scas
cmp
ret
dec
mov
sbb
loop
pop
and
push
jle
scas
adc
sbb
jae
roll
sti
sub
ds
pop
jmp
jmp
or
mov
mov
adc
xchg
mov
mov
dec
sbb
aad
jns
in
xor
sbb
adc
sbb
mov
sbb
int
nop
sbb
add
sbb
and
adc
adc
scas
jnp
cli
pop
dec
add
pop
rorb
fiadds
pop
jne
cmpsb
lods
adc
or
fs
fbld
cmc
or
xor
ret
xchg
and
mov
xlat
cli
fdivs
xor
aas
or
adcb
mov
dec
or
pop
push
dec
dec
dec
or
cmp
aad
stc
inc
or
adc
sbb
adc
lret
push
daa
lock
or
movsb
and
jne
data16
mov
inc
sbb
stc
and
or
shlb
cltd
push
xchg
xchg
ja
bound
mov
cmp
das
ret
push
add
shr
adc
orw
cmc
adc
push
sub
inc
mov
fisubl
test
and
inc
adc
sbb
pop
dec
arpl
and
mov
mov
sub
sarl
push
or
lds
jle,pn
es
and
or
mov
movsl
aas
mov
daa
incb
jecxz
fdivrs
mov
jge
fidivrl
movsb
xchg
mov
inc
and
inc
push
push
and
mov
sub
or
mov
movb
and
inc
xchg
inc
nop
addl
cmp
or
xor
scas
mov
sub
jo
scas
fs
scas
cmc
xor
lcall
test
and
test
or
and
inc
xchg
nop
int3
data16
jl
inc
mov
es
push
fmull
repnz
adc
movsb
cmpsl
ja
pop
stos
bound
inc
repz
aas
in
into
ss
xor
or
jne
and
cmp
sbb
sbb
ficomps
cmc
jns
push
push
popf
pop
or
and
lock
hlt
add
add
test
xor
dec
clc
mov
in
jg
adc
fbld
inc
sub
in
push
or
call
imul
sub
push
inc
dec
mov
inc
mov
hlt
movsl
loop
int3
mov
push
call
je
out
mov
cmpb
mov
and
test
outsl
cmp
mov
add
xchg
push
bound
mov
pcmpgtd
pop
les
push
xor
sti
adc
pop
pop
mov
mov
push
lods
sub
pop
fadd
lahf
inc
jmp
push
inc
mov
leave
xlat
ds
or
pop
sti
sub
jae
es
sbb
adc
sbb
xor
mov
and
adc
jge
add
popf
pop
dec
rol
mov
xlat
mov
jecxz
gs
dec
lea
jle
test
insb
enter
push
inc
into
jmp
fimuls
jnp
out
and
je
dec
cmp
jbe
mov
dec
mov
sub
mov
add
or
daa
jp
mov
push
cwtl
mov
adc
sarl
test
add
mov
jmp
aam
mov
mov
pop
lahf
mov
divl
push
or
sub
cmp
cmp
roll
mov
cmp
cwtl
and
cmc
sbb
test
mov
jge
and
std
adc
jnp
xchg
sbb
cwtl
call
mov
inc
dec
and
popf
pop
rcrb
or
mov
jbe
mov
roll
cmpsb
fcom
and
or
cmc
iret
enter
loope
cli
xchg
mov
aam
cmp
cs
test
mov
into
pusha
inc
adc
xchg
hlt
and
pop
lret
xchg
test
pop
dec
adc
or
jbe
lcall
adc
aas
imul
cwtl
xor
subb
adc
in
std
adc
mov
leave
adc
int
mov
js
divb
xchg
adc
fdivr
fwait
inc
cltd
movsl
in
mov
out
pop
cmpl
hlt
xlat
sbb
in
sbb
adc
mov
inc
ja
roll
out
inc
xchg
call
or
xchg
cltd
test
xlat
sub
shll
cmp
push
fcoms
or
ja
cmc
push
mov
inc
sub
xor
inc
or
and
cmp
push
popf
xchg
into
test
sub
call
in
imul
cmp
push
push
int3
je
sbb
mov
xor
sub
sbb
loopne
out
outsl
mov
imul
jge
xchg
dec
pop
mov
push
xor
add
or
mov
pop
and
insb
es
mov
inc
jbe
daa
jne
and
xchg
dec
imul
icebp
inc
xor
or
sbb
sti
in
mov
cmc
fdivl
out
jbe
fcoms
xchg
adcb
mov
mov
fwait
call
popf
inc
and
mov
adc
pop
stc
lret
xor
sbbl
mov
sbb
aas
xor
or
sahf
jmp
test
push
jne
mov
repnz
dec
mov
inc
or
mov
lds
sub
jmp
xchg
xchg
lret
outsl
mov
or
lahf
pop
mov
adc
add
repnz
xor
jo
mov
movsb
mov
pusha
insl
sti
xor
jle
add
inc
sub
lret
inc
pushf
cs
fildll
sub
cmc
adc
or
mov
or
xorl
in
out
mov
xchg
jge
ret
enter
dec
mov
jg
push
and
cmp
jne
pop
mov
push
dec
out
loop
mov
xor
inc
lcall
xchg
fsubs
js
dec
mov
xor
or
imul
push
loopne
in
and
mov
lret
mov
cs
ret
jbe
in
vmovaps
scas
cmp
iret
popf
je
mov
pop
mov
or
cld
jle
arpl
jle
outsb
xchg
cmp
icebp
push
or
int
jp
xor
adc
adc
icebp
mov
add
adc
test
adc
aam
fs
xor
fcomps
add
faddl
cmp
pop
dec
adc
in
daa
push
lret
in
sbb
fs
adc
iret
dec
jecxz
decl
xor
add
in
fadds
add
call
sbb
sub
loopne
in
dec
ds
mov
test
jmp
lods
mov
add
jmp
push
jecxz
pop
cwtl
jecxz
pushf
nop
mov
cld
mov
jo
adc
or
ret
jl
dec
cmp
push
sbb
cmp
dec
sbb
notb
jae
arpl
xorb
add
xchg
rolb
xchg
pop
stc
push
sbb
add
mov
inc
and
pop
sub
cmp
xchg
mov
inc
pop
jecxz
js
push
xor
jne
aaa
mov
scas
push
inc
enter
pop
and
sbb
xchg
das
pop
mov
movsb
sub
scas
ja
sbb
xchg
adc
nop
adc
mov
sbb
jmp
lea
push
rorl
loop
inc
add
adc
pop
pop
jecxz
jp
add
xchg
sbb
mov
aas
add
imul
lock
lea
push
add
in
jge
dec
das
call
push
test
lea
add
movb
movb
push
std
test
adc
inc
add
add
ret
pop
mov
xorb
mov
pop
rcll
cmp
stc
cmp
sub
or
xchg
mov
dec
xchg
and
push
mov
aam
clc
mov
scas
leave
adc
mov
adc
xor
adc
mov
stos
add
lock
test
mov
jecxz
ret
mov
rcrl
sub
push
call
push
ret
mov
nop
sub
adc
sub
mov
dec
cmpb
adc
cmpsb
call
cld
push
in
mov
adc
mov
sbb
popa
in
cld
aam
clc
push
sarb
adc
mov
dec
push
push
imulb
les
inc
movsl
popf
dec
add
jge
mov
push
mov
inc
std
and
cwtl
sarl
xchg
shll
sub
and
pop
stos
cmp
sub
dec
dec
ret
rcrl
scas
cmpsl
adc
cmp
jmp
pusha
and
sub
or
xchg
mov
pop
jge
mov
sub
jae
call
stos
scas
cmpb
push
and
enter
add
adc
repz
mov
dec
push
mov
xchg
nop
pop
repnz
xchg
loope
cmpsb
or
xchg
jne
int3
mov
cmp
mov
lea
jo
jno
jb
jae
inc
je
jne
jbe
ja
js
jns
jp
jnp
inc
jl
jge
jle
jg
pusha
jb
cmp
arpl
mov
and
push
jb
cmp
mov
and
push
enter
jb
cmp
mov
and
pop
enter
jb
cmp
mov
and
inc
enter
jb
cmp
cmp
inc
mov
and
dec
enter
jb
cmp
dec
mov
and
xchg
xor
xor
xor
xor
popf
jbe
push
std
test
adc
lcall
adc
xor
push
push
inc
outsl
insb
and
in
dec
dec
out
push
push
inc
fs
mov
pop
stc
pop
fcoml
jb
jo
fsubl
scas
pop
sarb
enter
repz
mov
sbb
push
inc
sbb
imul
or
jmp
dec
lcall
dec
xor
mov
or
stos
push
or
stos
inc
pop
cld
add
xchg
inc
push
movsb
push
incl
pusha
stos
mov
insb
xchg
cld
inc
push
pop
xorb
data16
inc
bound
arpl
dec
adc
or
in
xlat
push
imul
movsb
sub
test
sbb
enter
xchg
push
outsb
dec
and
pop
insl
jo
into
inc
clts
push
adc
push
or
popw
pop
inc
jle
lds
mov
jecxz
cld
sbb
stos
sar
and
out
xor
or
inc
insl
inc
insb
sbb
imul
lea
gs
dec
outsl
stc
push
push
aam
or
sbb
or
dec
push
jmp
and
imul
and
mov
lret
mov
inc
pop
inc
or
or
mov
cmp
in
movsb
mov
push
jne
dec
and
and
stos
inc
bound
add
or
bound
imul
sbb
fdivrl
mov
push
or
inc
clc
push
inc
movsb
cmp
and
cmp
mov
mov
int3
mov
sbb
xchg
pop
pop
repz
paddw
or
adc
push
push
imul
push
or
adc
mov
inc
cltd
ficoml
sbbl
lods
jno
pop
dec
mov
lret
push
pop
cmpsl
inc
mov
out
adc
imull
sbb
xchg
and
lods
aam
rol
ds
dec
sti
cmp
ret
sub
sub
or
or
aam
dec
shlb
push
inc
hlt
mov
add
in
cwtl
repnz
into
mov
popa
incl
sbb
mov
sub
sub
dec
cmp
sub
test
add
mov
subb
jbe
pusha
stc
fwait
cmp
or
push
xor
data16
mov
ror
jle
mov
scas
push
loop
mov
inc
or
xchg
jl
and
in
sbb
dec
push
pop
or
fdivs
push
inc
sbb
insb
adc
loope
dec
inc
mov
lods
popa
lock
xchg
add
leave
imul
aaa
dec
dec
aas
roll
pop
loope
and
cmp
pop
push
or
inc
pop
push
mov
mov
push
add
mov
and
sbb
push
mov
int3
jo
int
push
jbe
sub
push
add
add
out
sbb
dec
rcrb
sub
add
pusha
iret
xlat
inc
dec
fistl
les
pop
adc
fcompl
scas
adc
loope
xchg
or
push
inc
popa
loopne
jae
pop
in
or
sar
adc
sub
push
cwtl
aam
ss
push
push
inc
and
cs
mov
fs
pop
or
dec
lods
and
aaa
push
add
lods
adc
xor
aas
mov
mov
add
mov
inc
xor
pop
js
out
cmp
or
pop
xchg
dec
pop
mov
adc
jmp
dec
or
aaa
aam
fimull
jne
jb
push
lods
add
loopne
mov
arpl
add
jl
fs
cmp
cmpsl
pop
fistps
push
jg
rorb
dec
push
mov
inc
cmpsb
cmpsb
outsb
push
adc
sti
int3
pop
xchg
rclb
int3
add
dec
push
stc
xchg
push
xchg
ret
mov
pop
or
fistps
push
loope
or
addr16
jnp
mov
mov
inc
xchg
popa
mov
and
mov
jp
aam
sbb
rorb
mov
sahf
xor
pop
mov
mov
pushf
push
sub
mov
sub
sbb
pop
mov
inc
jmp
or
mov
cmp
xor
add
adc
xlat
ds
adc
xor
clc
and
out
nop
xchg
ljmp
out
nop
add
loop
insb
xor
pop
mov
and
mov
pop
adc
rcrb
push
pop
adc
jmp
daa
dec
ja
push
adc
pop
mov
inc
adc
int
cltd
fisttpl
in
mov
call
push
bound
push
dec
movb
xchg
sbb
les
jl
movsb
inc
testl
shrl
es
loop
add
je
bound
pop
adc
aas
enter
pop
mov
push
xor
or
sar
rclb
or
dec
insl
lret
inc
cmpb
test
js
arpl
clc
xor
pop
or
xchg
lret
imul
pop
pusha
adc
inc
and
inc
aam
lahf
insb
test
fadds
insb
stc
enter
and
je
fwait
rcrb
adc
sti
xorb
inc
shlb
inc
arpl
mov
rol
incb
pop
dec
inc
push
or
add
nop
or
rcl
sub
lret
cwtl
mov
mov
inc
mov
dec
je
scas
sbb
mov
insl
aam
mov
sub
adc
inc
or
enter
pushf
adc
inc
inc
xor
sbb
test
xchg
or
push
inc
adc
push
or
es
sub
add
sub
subb
fs
sub
adc
mov
adcl
repnz
and
cmc
mov
and
sbb
mov
pushf
or
push
or
outsl
outsb
mov
fs
pop
sub
adc
xor
inc
loop
sub
jl
mov
inc
xor
adc
sbb
nop
pushf
das
mov
adc
or
mov
cs
sbb
or
aam
pop
xchg
or
lahf
and
cmp
push
call
ret
nop
lock
inc
mov
adc
stc
jl
dec
popa
outsb
dec
dec
int3
rcll
xor
rol
xor
inc
dec
jne
mulb
pusha
mov
and
sti
lret
and
add
jne
push
or
jmp
mov
ret
sbb
inc
test
aam
popa
movzwl
xchg
adc
adc
jp
stc
lods
adc
dec
inc
scas
iret
jp
pop
clc
jmp
ds
and
sub
dec
pop
dec
call
call
mov
push
inc
push
inc
push
and
dec
and
dec
cmp
stos
mov
adc
or
sbb
xchg
fs
in
inc
xchg
sbb
xchg
push
adc
test
mov
xor
mov
jle
pop
subl
and
pop
xor
or
ds
cltd
or
movsl
test
mov
sbb
mov
roll
mov
cli
cmp
cld
std
dec
ja
pusha
mov
idivl
bound
inc
cmp
dec
sbb
mov
inc
imul
push
loopne
imul
mov
orb
cmp
inc
and
mov
outsb
out
xor
cmp
aam
push
test
or
adc
js
xlat
push
sti
outsl
xchg
mov
std
inc
stos
jge
out
cmpsl
ja
inc
das
aam
js
mov
lret
je
and
lods
sbb
push
imul
or
les
push
lods
enter
and
add
xor
fs
loop
jg
mov
adc
jge
subl
popa
or
outsl
enter
xor
jl
mov
mov
repnz
and
add
jg
cli
pushf
push
jno
mov
repz
sub
cmc
adc
adc
notb
pusha
sbb
fs
cli
sarb
faddl
inc
jmp
cld
stos
js
mov
movsb
dec
push
test
jnp
repnz
push
lods
lcall
stos
and
pop
sarb
cmp
cmp
imul
inc
jb
loop
fs
test
enter
outsb
adc
gs
add
and
popa
jo
movsl
inc
xchg
push
push
mov
stos
iret
pop
popa
sub
rcrb
js
imul
fmull
inc
lock
imul
fdivr
adc
or
jne
or
inc
incl
jae
popa
lea
mov
popf
xchg
cmp
pop
push
stos
add
mov
dec
rcll
dec
pop
or
inc
dec
popa
insl
dec
and
dec
mov
fisttpl
lahf
push
mov
sub
or
mov
js
popa
popf
jne
fdivl
jno
lds
pop
imul
sbb
cwtl
jns
and
addr16
lahf
adc
loopne
je
push
daa
sub
aaa
or
dec
sbb
test
lea
lahf
jne
cmpsb
inc
inc
or
shrb
imulb
int3
push
imul
dec
jle
and
inc
inc
or
jns
fldt
inc
adc
sub
aad
jp
and
ss
mov
sub
and
test
add
cmp
push
fwait
or
outsb
jne
insl
sbb
and
orb
call
push
loop
push
mov
jae
cwtl
or
and
xor
daa
loope
mov
push
enter
sub
dec
adc
mov
sbb
or
jg
or
jmp
xor
mov
and
adc
test
jno
ljmp
aaa
jae
push
adc
lock
or
ja
in
mov
and
inc
dec
push
dec
pop
inc
ja
ja
cmp
dec
cmp
inc
clc
inc
inc
push
sub
movsb
cld
push
loopne
dec
inc
sub
xor
push
dec
inc
push
inc
sub
adc
dec
inc
stc
dec
sarl
dec
inc
inc
mov
inc
dec
dec
and
xor
js
inc
inc
xor
xor
push
and
ret
and
inc
cmp
adc
inc
neg
enter
jl
push
push
dec
test
inc
sbb
inc
sbb
inc
nop
and
push
jmp
push
add
cmp
or
and
test
push
orb
push
repz
dec
ljmp
call
jo
sbb
enter
mov
sub
inc
sti
mov
addl
or
cmp
call
xor
jl
daa
pop
inc
orl
dec
or
jmp
jne
and
inc
adc
or
mov
lea
je
jnp
sub
call
or
mov
sbb
data16
dec
sbb
daa
enter
jne
movb
jp
into
or
adc
xor
lods
mov
adc
shlb
mov
sbb
fidivrl
jae
pop
sbb
mov
sbb
dec
shll
fsubrs
jmp
mov
cltd
jo
negl
xor
cmpsl
pop
mov
or
push
push
js
jmp
cmp
add
call
jae
pop
lahf
out
cmp
lds
xor
loop
dec
dec
mov
sbb
les
rcrb
mov
or
ja
add
fstpl
dec
and
lds
stos
ret
fbstp
das
adc
hlt
mov
cwtl
pop
filds
cmp
or
test
orb
mov
and
sti
or
pop
lret
dec
mov
jns
dec
jbe
inc
sti
and
cmpsl
mov
sbb
je
mov
rcrl
mov
and
mov
mov
pop
mov
enter
add
and
ja
add
movl
jbe
imul
adc
test
testb
sbbl
shlb
jmp
adc
push
add
xchg
sarb
aad
or
mov
dec
mov
sbb
lahf
jp
in
sub
pop
mov
sub
sbb
mov
xchg
sbbl
fdivr
movsb
mov
mov
cmp
cmp
sbb
dec
push
ficompl
or
adc
mull
dec
sub
or
xor
or
fildl
lahf
or
lds
push
adcb
xchg
dec
or
aam
adc
mov
jo
adc
mov
movsl
fdivl
jp
sub
mov
pop
dec
je
lds
cmpsl
aam
jns
cmpsb
sub
stos
pop
ficoml
add
fldcw
sub
push
js
jp
nop
sub
inc
sahf
adc
mov
adc
in
xchg
adc
or
xchg
sbbb
jmp
lods
pop
orb
leave
mov
arpl
and
mov
push
sub
fs
fs
lods
mov
test
push
sbb
dec
aaa
dec
push
in
mov
fdiv
push
subl
neg
leave
push
sub
enter
push
sbb
xor
or
rcl
adc
les
cld
jp
or
sub
aaa
jo
sbb
inc
xor
stos
xor
xchg
in
sahf
dec
dec
bound
lahf
arpl
or
popa
shl
sub
xchg
mov
jl
imul
mov
add
sbb
sub
imul
cmp
and
scas
add
mov
adc
adcl
jecxz
lret
enter
add
and
inc
mov
jl
cmp
int
lret
testl
inc
mov
in
sti
jae
xor
dec
stos
jl
fiadds
pop
pop
lret
jns
or
inc
pop
lock
pusha
lret
sbb
movsb
fiaddl
lock
push
repz
adc
call
arpl
into
jne
jo
and
int3
ja
jne
adc
movzbl
xchg
ljmp
call
dec
hlt
subl
lretw
push
in
rcll
insl
sub
inc
adc
xchg
lods
mov
push
push
sbb
movsb
mov
or
lods
fcmovu
jp
or
divps
das
xor
or
jns
xor
int3
loope
push
loopne
sub
shlb
icebp
push
cmp
aaa
fsubrs
cmp
mov
les
je
and
adc
hlt
popa
sbbb
fs
les
xchg
stc
cmp
xchg
insb
mov
sbb
int
push
jns
sti
dec
imul
cltd
mov
and
mov
adc
xchg
and
xchg
jns
xor
sub
mov
mov
int
ja
enter
pushl
rclb
inc
or
aaa
movb
xchg
pop
sub
and
popa
jne
fidivs
dec
inc
iret
shlb
lock
fidivrs
clc
add
movsb
sbb
mov
ss
dec
cmpsl
jbe
rolb
je
sub
adc
ja
sbb
pop
and
adc
xchg
rorb
call
xor
popf
repnz
hlt
or
or
push
and
test
inc
dec
push
xor
inc
cmp
sbb
cmp
adc
pop
jmp
cmp
cli
xlat
clc
mov
shll
jno
pusha
bound
lea
mov
inc
mov
lods
mov
hlt
lahf
nop
adc
or
jle
or
sub
inc
nop
and
and
fs
inc
xchg
cld
bound
in
jge
and
shlb
mov
fsts
xlat
mov
or
imul
sti
sbb
jp
push
sbb
jl
inc
gs
cmp
push
insb
adc
es
arpl
xlat
inc
call
mov
lea
loopne
fisttps
pop
outsb
out
adc
add
xchg
nop
mov
or
xchg
adc
xchg
sub
inc
and
fldt
pop
push
and
push
or
int
popf
invd
ficoml
or
or
push
push
outsb
push
ss
iret
xchg
push
sub
push
jmp
cmc
xor
or
cmpsl
ljmp
and
out
pop
imul
mov
sbb
add
popf
mov
xor
jns
xor
mov
inc
xchg
in
xor
adc
and
mov
lds
sub
enter
mov
decb
pop
ljmp
scas
xchg
ljmp
pusha
sub
xchg
outsb
adc
jae
lret
or
cmp
fs
add
xor
inc
xchg
push
mov
or
or
shlb
fisttpl
or
fldenv
pop
loopne
and
push
push
mov
xchg
add
mov
pop
and
rcll
popf
sub
test
push
mov
ljmp
mov
add
sahf
or
cmp
and
adc
or
test
rorl
or
push
adc
adc
mov
mov
adc
inc
sbb
mov
push
push
sub
jg
outsl
mov
inc
inc
aam
cmpl
or
mov
xor
push
and
jne
jge
adc
mov
mov
test
outsl
push
ret
imul
mov
les
mov
movsb
adc
dec
js
sub
aam
and
xchg
push
and
jg
orl
jge
daa
cld
mov
mov
ljmp
inc
aad
xor
sub
dec
dec
lea
lcall
or
bound
icebp
add
add
inc
js
mov
add
inc
jae
and
inc
not
and
mov
js
or
cwtl
sub
shll
mov
add
and
test
sbb
jb
xor
and
aas
movsb
cmpsl
popf
call
pop
movsb
out
clc
sbb
insb
jns
adcb
adc
aas
add
sahf
lea
sbb
pop
lock
or
shll
sbb
mov
cmp
je
mulb
xchg
cmc
fcoms
add
outsl
bound
add
push
push
pop
add
dec
push
dec
cmpsb
mov
add
outsb
or
xchg
int3
mov
inc
leave
repnz
xor
xor
xor
xchg
push
mov
fs
push
aaa
mov
mov
or
ljmp
adc
xchg
hlt
test
jecxz
pop
adc
adc
sbb
xchg
xor
in
das
stos
pop
and
and
and
and
in
not
pop
pop
js
lds
add
mov
or
inc
cmp
and
enter
sbb
je
xchg
fwait
std
inc
xchg
xor
shlb
add
sti
mov
mov
fs
and
clc
call
test
popa
xchg
hlt
sbbl
inc
mov
je
push
loop
test
popa
mov
std
shll
mov
outsb
adc
decb
rcr
dec
sub
pusha
imul
pusha
test
push
pop
aam
push
adc
dec
fldenv
je
fs
mov
leave
out
clc
aas
nop
adc
adc
call
adc
stos
and
lea
loopne
sub
and
add
repz
inc
in
inc
adc
push
cmpsb
enter
scas
mov
sbb
adc
pop
mov
inc
mov
push
in
adc
mov
xchg
ds
jnp
xchg
hlt
lds
mov
add
lock
adc
ss
dec
rcrl
xor
sub
je
and
sub
xor
jbe
pop
inc
sub
lods
sub
add
pop
lock
pop
xchg
pop
cmpsb
inc
pextrw
push
aam
shlb
nop
adc
mov
insb
lods
outsb
mov
pop
or
sub
adc
xchg
in
es
mov
std
xchg
nop
pop
add
adc
add
push
lds
enter
sbb
loopne
sahf
cltd
dec
negl
and
cmp
push
jnp
movsl
jg
inc
cmp
lods
pop
mull
add
add
add
test
sub
inc
test
jne
and
vpmacsswd
rcl
dec
mov
fwait
xor
lret
fisttpl
and
sbb
sub
adc
bound
and
and
sub
cmp
mov
jg
mov
cmpsb
shrb
dec
sbb
int3
pop
xchg
fcmovu
dec
mov
jno
rcrb
test
push
push
push
mov
xor
mov
outsb
xchg
dec
mov
cmc
rclb
test
adc
adc
icebp
dec
adc
daa
jmp
sub
adc
sub
and
or
fs
int
sub
inc
xchg
stos
pop
push
test
addl
test
xor
xrelease
les
push
push
push
adc
je
adc
or
mov
test
loope
faddp
lods
test
test
test
pop
cmp
push
lret
mov
pop
push
push
lods
pop
inc
pop
ficoml
sub
mov
add
mov
xchg
data16
push
add
mov
mov
or
add
jecxz
fmuls
movb
dec
dec
lods
sarb
mov
mov
jmp
inc
push
pusha
cmp
aas
dec
test
daa
jle
push
mov
pushf
mov
mov
xchg
fwait
pop
pushf
mov
mov
dec
jne
fildll
jge
sub
mov
pop
outsb
push
sbb
xor
push
xor
adc
aaa
dec
stos
rcrb
shll
pop
pop
stos
mov
aam
das
pop
testl
in
cwtl
push
sbb
xor
xchg
xor
outsb
mov
enter
xor
push
jmp
push
xor
daa
cmp
adc
mov
xor
andl
mov
or
adc
mov
inc
nop
xchg
cld
xchg
adc
int3
mov
fsubl
xchg
fists
push
cmp
subl
sti
adc
xor
orb
cmpl
dec
inc
iret
nop
xchg
add
mov
and
inc
andps
push
loopne
pop
cmp
inc
and
insb
sbb
xor
adc
push
sub
xchg
into
xor
sbbb
mov
leave
jnp
fisttps
stc
insb
pop
adc
jge
push
sbb
mov
cmp
push
adcl
ja
jae
test
loopne
add
xlat
inc
stc
jl
dec
lea
repz
dec
fldenv
mov
inc
and
sbb
cmp
and
loopne
clc
test
xchg
gs
or
decl
pop
push
into
inc
stos
test
je
arpl
sbb
push
lret
test
cmp
push
pop
cltd
cmp
arpl
add
sub
aas
and
dec
mov
xchg
xor
loope
call
cmpl
sub
and
call
adc
les
add
lret
xor
dec
xchg
adc
idivl
faddl
pcmpeqb
push
push
out
adc
or
add
lea
cmp
mov
adc
test
sub
mov
cmp
clc
das
lret
shrl
lds
push
jne
cmp
stc
bound
imull
sbb
in
inc
mov
mov
lock
sub
jecxz
les
push
loop
jge
lcall
fadds
fs
int3
ret
stos
dec
push
stos
pop
xor
adc
daa
aam
push
push
loop
xor
scas
adc
hlt
call
ficomps
loop
pushf
dec
sbb
ja
fmull
std
lret
add
daa
pop
ret
xchg
pop
and
or
rcl
shlb
inc
and
mov
fs
je
mov
pop
xchg
and
mov
pop
cld
push
sub
movb
enter
test
mov
mov
mov
push
and
push
test
lock
mov
test
scas
inc
push
dec
lret
mov
pop
jg
cmp
mov
daa
mov
pop
les
sub
cld
pop
int3
push
sbb
test
bound
cvtps2pi
jo
push
dec
inc
movsl
and
sarl
push
inc
orb
or
nop
jg
test
cmp
add
icebp
jl
mov
inc
enter
sbb
dec
out
rcrl
push
xor
adc
xchg
push
movsl
aad
imul
sbb
das
shlb
and
out
testb
jmp
sti
add
pusha
icebp
jne
sbb
call
nop
cmp
or
frstor
or
sub
push
lods
push
stc
and
flds
test
inc
cmp
xor
in
dec
push
and
outsl
or
inc
cwtl
or
dec
scas
call
jbe
inc
inc
in
push
push
jmp
mov
mov
fsubl
fcoms
lods
addb
and
es
arpl
hlt
pop
ret
and
movb
pop
fiadds
ret
inc
mov
jg
sub
loopne
es
cmpsb
push
sbb
nop
pop
dec
pop
cmp
call
push
sbb
jne
icebp
push
inc
dec
fnstsw
imul
push
sarb
sbb
pop
mov
push
call
adc
and
cmp
cli
in
add
daa
mov
adc
sbb
push
pop
aam
rcll
lea
enter
roll
or
inc
nop
mov
enter
andl
test
int3
and
dec
mov
adc
mov
insl
arpl
ljmp
dec
ret
stos
pop
mov
sub
nop
rorb
cwtl
lahf
out
adc
and
pop
and
and
and
jnp
inc
in
inc
push
mov
pushl
icebp
sub
xchg
jns
inc
stos
test
fnstenv
rcl
cmp
jge
inc
add
rcl
xchg
inc
xchg
adc
push
fidivrl
lods
lds
and
mov
paddq
aad
and
ljmp
lock
cmp
mov
jo
adc
jmp
data16
or
pop
cmp
testb
into
lock
lods
stos
dec
fcmovnbe
js
jae
jne
mov
rcl
pop
lret
xor
jmp
orl
jb
in
loop
lea
and
jmp
sub
mov
popa
sub
insb
movl
sbb
invd
add
mov
js
sbb
or
lea
adc
movl
or
jns
or
or
std
out
adc
insb
stos
adc
test
xchg
xor
pop
dec
and
andl
jne
popf
icebp
pushf
adc
push
rclb
sub
cltd
enter
adc
in
mov
adc
push
mov
push
fdivrs
lods
rcll
scas
leave
mov
sbb
pop
mov
cwtl
adc
sub
jl
or
push
lods
mov
imul
mov
clc
hlt
sub
or
mov
add
enter
dec
scas
pop
sbb
adc
push
ds
jae
mov
sub
push
inc
test
xor
push
andb
lcall
mov
dec
leave
pushf
inc
imul
popa
jg
or
movsb
arpl
push
imulb
sub
jae
test
fmull
push
fldenv
jne
push
push
call
mov
fists
mov
mov
fs
lods
dec
adc
mov
jl
lods
mov
add
ljmp
and
dec
enter
push
adc
in
or
push
int3
call
add
inc
fmull
inc
lahf
pop
imul
xchg
scas
mov
xor
dec
out
sub
cltd
or
fsubrl
ret
jne
sub
inc
insb
ljmp
lahf
xchg
cwtl
push
test
xlat
cs
add
sbb
out
jl
adc
roll
ret
and
mov
shl
mov
mov
push
lods
or
add
enter
mov
scas
inc
scas
push
xor
subb
push
sub
fsts
nop
dec
push
hlt
push
jge
fdivr
in
scas
or
loop
aad
and
cmpsb
ljmp
cmp
es
fdivl
or
xchg
fmull
or
pop
in
ds
adc
dec
sub
inc
nop
int
and
and
sbb
repz
daa
rcll
std
inc
and
push
xor
dec
jne
loopne
sub
pop
push
lret
outsl
sbb
mov
aas
sub
adcl
dec
and
xlat
xchg
shll
dec
or
pop
repnz
fists
dec
sub
and
mov
mov
sbb
mov
adc
mov
add
out
mov
test
or
nop
jo
jp
jbe
lods
or
adc
cmpl
or
cs
pop
push
mov
insb
and
inc
sub
cltd
cmpsl
adc
in
aas
mov
fidivrl
hlt
xchg
in
in
mov
push
out
sbb
jne
xchg
rcrl
pop
mov
stos
imull
leave
jae
add
stos
or
test
into
hlt
push
jmp
dec
or
cmp
lea
sbb
adc
mov
push
mov
ss
addr16
fadds
in
test
cwtl
xchg
xor
and
jne
cmp
adc
mov
pusha
in
sub
push
bound
xor
inc
test
aaa
dec
dec
push
mov
sbb
jg
jnp
lret
or
movsl
or
lret
das
mov
fs
shl
push
les
jmp
sub
xchg
and
jno
or
repnz
pop
les
or
push
and
rcrb
nop
pop
das
sbb
jo
push
mov
jb
xor
xchg
push
ret
pop
add
or
lcall
aas
in
cmc
mov
jge
pusha
inc
adc
jae
jl
das
jbe
jp
jmp
jb
inc
out
xchg
xor
xor
mov
xchg
mov
push
mov
orl
int
imul
jns
and
inc
test
adc
test
mov
adc
mov
xchg
aam
sahf
lock
jo
popa
outsl
movsb
mov
out
or
mov
push
cmp
dec
inc
addr16
cmp
insl
pop
or
xchg
sub
cmp
inc
inc
decb
outsl
jne
xor
adc
xor
inc
dec
add
adc
add
jne
cmp
aam
lods
inc
mov
jge
pop
jle
sahf
add
inc
dec
jnp
inc
lock
dec
mov
pop
les
vphsubbw
aad
shrb
pop
in
inc
ds
jmp
in
stos
adc
ret
cwtl
repnz
fnstenv
mov
and
dec
mov
push
ljmp
mov
push
jno
das
jecxz
xor
icebp
cmp
inc
dec
xor
cmp
or
mov
aaa
cmpsb
mov
push
sub
je
in
jne
xor
les
es
push
push
and
mov
icebp
jle
imul
mov
adc
insb
imul
fs
cld
or
cmpsb
inc
sbb
test
inc
add
les
xor
frstor
dec
add
adc
mov
aam
adc
or
fdivl
out
lds
lock
aas
fistpl
int3
ret
cmc
vmovaps
jns
sub
sub
inc
add
shr
jno
cmc
adc
and
mov
push
mov
cmp
mov
cmpl
cmc
sti
pop
or
int3
pushw
mov
decl
adc
roll
pop
icebp
adc
lods
and
inc
cmp
icebp
addr16
mov
out
inc
mov
adc
addl
cs
mov
inc
pop
inc
lods
insb
loop
mov
pop
mov
dec
or
mov
hlt
push
stos
and
daa
dec
idivb
shr
add
xor
mov
das
lods
and
pop
jp
push
dec
jg
test
pop
loop
mov
scas
adc
or
and
sbb
cld
jns
push
sbb
leave
and
adc
xor
test
in
cmpsl
dec
jmp
repz
daa
stos
ja
cmp
mov
adc
jle
icebp
nop
and
pop
adc
and
rcr
adc
and
mov
call
inc
rorb
movsb
xor
pop
mov
pop
jmp
jg
push
mov
push
mov
bound
sub
aad
dec
jmp
adc
inc
xlat
xor
push
div
pop
ret
inc
clc
dec
or
adc
movsl
dec
ds
enter
orb
and
sbb
andl
xor
enter
adc
mov
insb
sbb
test
fcmovbe
sahf
dec
pushf
and
and
lods
js
mov
cmpsl
dec
adc
cli
imul
add
leave
mov
lret
packssdw
inc
call
andb
mov
adc
lock
int3
dec
push
adc
inc
orl
mov
in
cmp
js
loop
cmp
push
repz
ret
jne
call
faddl
mov
mov
mov
stos
fs
pop
sbb
inc
inc
cli
pop
mov
les
jno
xchg
push
int3
das
je
dec
push
dec
sub
daa
testb
cwtl
inc
add
push
fnsave
mov
mov
dec
adc
sbb
push
and
aas
jo
insl
sbb
mov
adc
mov
sbb
xchg
out
mov
das
jmp
sub
lock
cwtl
int3
notb
pop
sbb
out
pop
fildll
dec
fisubrl
dec
mov
ja
dec
shll
mov
fs
dec
cmp
add
test
mov
cmp
push
gs
push
add
cmp
daa
pop
arpl
sub
into
or
xchg
mov
pop
or
push
and
lds
stos
mov
std
inc
call
cmp
pop
pop
sti
or
in
or
in
sbb
sub
dec
add
sbb
and
push
push
sub
sub
inc
out
dec
adc
and
xor
mov
fwait
sub
insl
cli
dec
mov
sub
and
clc
inc
or
test
cwtl
mov
repz
repz
mov
cmc
inc
loop
jo
dec
sub
jno
inc
test
pop
push
jne
cli
ret
fstpt
enter
adc
lock
insb
movsl
add
adc
arpl
mov
fsubrs
pop
mov
stos
push
mov
add
add
dec
and
dec
xchg
cmpsl
xor
pushf
mov
ja
ficompl
mov
pop
cli
mov
jne
adc
movsl
pop
orb
jmp
push
push
int3
test
lods
imul
xor
call
adc
mov
jmp
adc
in
or
jae
push
js
pop
mov
pop
mov
leave
fcoms
dec
imul
or
sbb
mov
addr16
mov
lock
jle
lock
dec
adc
fldl
xchg
mov
scas
stc
sub
outsl
cmp
add
fbld
lret
sub
rolb
lock
loope
enter
addr16
xor
add
sub
xor
sub
hlt
mov
insl
lcall
push
adc
movsb
insb
mov
or
mov
addb
pop
lods
jne
je
dec
xchg
inc
xor
xchg
test
fdivrs
xchg
lahf
inc
push
ss
sbb
movsb
xor
cmc
mov
mov
loop
daa
jg
pop
xor
cltd
jmp
push
je
add
popf
and
push
mov
dec
adc
adc
jle
push
cwtl
or
orl
movsb
pop
add
das
dec
inc
hlt
xor
bound
push
adc
fs
std
add
cmp
sbb
mov
fwait
or
or
in
mov
scas
ja
repz
jmp
mov
xor
mov
inc
out
jg
into
pop
inc
std
push
popa
enter
sub
mov
stos
cwtl
or
inc
decl
sbb
adc
lock
mov
add
xlat
int
lcall
push
jmp
repnz
out
fiaddl
subl
push
shll
dec
leave
test
jae
jg
cmp
pop
shlb
data16
movsl
out
push
pop
in
rorl
loope
pop
or
push
aaa
cmpsw
mov
push
in
ret
and
add
cmp
ljmp
adc
or
ss
sar
mov
into
aam
daa
push
out
fistps
gs
jmp
pop
fs
mov
inc
dec
pushaw
mov
enter
push
and
fs
ljmp
mov
and
call
sbb
jp
in
cmpsl
xlat
adc
lahf
fstl
and
ljmp
lret
xchg
sub
jne
pop
adc
and
movsb
sub
or
mov
mov
and
xchg
pop
shlb
mov
or
push
sub
xchg
cmpb
push
mov
and
or
sbb
add
test
push
je
sbb
mov
jg
or
cmp
xchg
inc
pushf
pop
jg
es
jns
pop
jg
js
xor
rolb
jmp
add
call
jns
test
push
call
dec
jb
mov
sbb
and
push
dec
rcrl
pop
cmp
inc
sti
dec
std
jp
and
jo
je
mov
sub
inc
fucomip
out
jb
adc
sbb
or
in
test
cli
pop
lock
sti
jbe
sbb
mov
push
and
pusha
sbb
xchg
addr16
lock
push
sbb
push
mov
jne
std
gs
mov
orl
fs
inc
push
mov
lret
cld
les
in
aad
and
or
out
pop
sub
mov
imul
xchg
sub
and
jne
mov
push
add
jle
push
xchg
mov
mov
inc
movsl
repnz
add
mov
sub
out
jns
push
or
jno
data16
sti
icebp
mov
adc
push
jne
and
out
call
mov
pop
inc
in
orb
sub
aam
out
pop
fldenv
add
cmpb
fcomps
xlat
pop
mov
outsl
lods
in
mov
pop
xchg
les
jl
jb
pop
insb
jnp
repnz
or
je
adc
push
fcomps
out
fdivl
push
and
mov
inc
enter
rcr
mov
cmp
popf
xor
xor
jge
ss
in
pop
mov
pop
int3
xchg
stos
ret
std
sub
mov
sbb
mov
sub
cld
dec
mov
jmp
pop
mov
les
lret
adc
mov
ljmp
or
mov
fcoml
add
and
push
movups
fbstp
loopnew
add
add
aad
jg
pop
push
aaa
push
stc
sbb
jge
xchg
and
inc
push
add
push
aad
mov
arpl
mov
push
filds
pop
sub
nop
add
mov
out
xchg
push
xor
sub
rcll
xor
or
xor
and
jns
rclb
pop
mov
mov
dec
dec
leave
pop
xchg
push
cmc
pop
js
fmul
mov
sbb
jp
push
test
inc
ljmp
pop
pop
imul
add
add
cmp
adc
js
fisubs
daa
push
inc
jle
je
nop
pop
xor
icebp
inc
lods
add
fs
pop
adc
mov
ficompl
fcompl
dec
aaa
cmp
icebp
decb
clc
in
xchg
gs
sbb
jl
xor
adc
xor
pop
cld
adc
mov
inc
aaa
push
fidivs
icebp
adc
fldl
jg
add
shll
lock
dec
ljmp
es
mov
push
cltd
and
inc
jl
in
movsb
movsl
fs
push
pop
or
leave
cli
jl
push
and
dec
and
add
test
mov
push
or
add
add
ss
fidivl
call
sbb
test
mov
outsb
mulb
xchg
pop
lods
push
adc
cs
js
or
cmp
push
mov
inc
iret
cs
stc
test
mov
out
rcrb
call
xchg
test
in
cmp
pop
mov
or
lahf
mov
pusha
das
punpckhdq
pop
leave
ja
in
and
outsl
pop
shrl
ret
test
mov
mov
ror
and
adc
xor
sub
stos
xor
outsl
or
inc
out
or
in
push
mov
fiadds
inc
sub
xchg
push
sub
sbb
leave
adc
mov
sbb
mov
sub
push
mov
inc
pop
jmp
push
pop
add
xchg
pop
out
push
int3
sub
sbb
mov
sub
jmp
xlat
xor
and
or
lret
inc
sub
pop
lds
mov
push
je
fimuls
pop
int
jne
int3
mov
inc
sbb
mov
push
addr16
loopne
call
sbb
lahf
hlt
dec
imul
leave
sub
mov
insb
cmovl
adc
dec
sub
aam
inc
or
cmp
cld
rorl
pop
inc
cmp
or
push
out
repnz
push
repnz
pop
movsb
cmp
into
xchg
jp
loopne
lock
and
add
jns
or
xchg
and
push
ljmp
pop
sub
push
xchg
dec
dec
pop
xor
std
rol
or
lea
mov
pop
clc
and
mov
xchg
xor
inc
push
dec
repnz
xor
mov
clc
dec
imul
or
je
mov
or
pop
or
mov
cli
adc
ret
xchg
xchg
adc
xchg
or
sbb
and
jne
cmp
cmp
test
popf
jne
je
adc
fsubrl
inc
or
or
push
sbb
test
inc
jne
add
add
or
dec
add
mov
test
sbb
aas
js
push
push
cmp
adc
cmp
jge
adcl
pop
ja
jle
clc
inc
cltd
push
enter
in
repnz
inc
adc
pop
and
push
push
or
inc
adc
or
add
je
in
call
movsl
sbb
dec
mov
js
inc
and
sub
and
cmp
mov
ds
cs
cmp
subb
bound
and
test
xchg
adc
pop
push
and
push
xchg
jno
push
mov
fs
cmpb
lea
sbb
imul
inc
mov
sbb
popf
inc
and
or
mov
gs
xor
or
loop
test
adc
add
scas
in
push
jmp
pop
sbb
xor
loopne
call
mov
push
push
mov
mov
pop
push
mov
cmp
adc
pop
pop
xchg
stc
adc
es
mov
mov
mov
xchg
and
sbb
mov
xor
and
cmp
clc
adc
adc
lods
daa
shrb
adc
sqrtps
mov
sbb
push
lea
lods
pop
mov
call
subb
push
cltd
ljmp
sub
cwtl
pop
cmp
dec
movsl
iret
fstpl
pop
jbe
xor
push
popf
popa
clc
fs
repz
jmp
or
or
mov
sub
mov
sub
jns
and
pushf
je
cwtl
int
fldenv
popf
inc
int3
push
mov
pop
mov
cmp
int3
or
mov
ss
rcrl
js
test
test
rorb
rorl
js
dec
int3
dec
sbb
pop
add
add
push
adc
push
cli
int
lahf
popa
sbb
push
cmp
mov
aaa
sbb
insl
movsb
mov
pusha
lea
movsl
inc
cmp
add
or
push
mov
aam
hlt
jne
fwait
inc
cwtl
cmp
push
jmp
xchg
cmp
insl
cwtl
cmpsb
xacquire
aas
lret
loopne
test
psadbw
push
sbb
repnz
fists
sbb
pop
aad
dec
or
cmpsl
rcr
dec
mov
sub
inc
rcll
mov
outsb
pop
mov
inc
cmpsl
push
scas
push
and
push
cmp
test
jns
jno
ret
adc
fildll
dec
movsl
sub
push
mov
or
push
and
push
sub
jnp
jecxz
inc
adc
jno
mov
inc
pop
jno
cmp
es
fldcw
aas
dec
jmp
movsl
ret
push
push
mov
repnz
lock
dec
inc
stos
lods
stc
sub
iret
and
cltd
lock
imul
divb
dec
inc
leave
push
into
jbe
push
and
cs
mov
cmp
mov
cmp
dec
push
mov
xlat
imul
aas
and
cmp
divl
and
xchg
inc
mov
nop
mov
push
out
sub
enter
or
mov
cltd
xor
adc
out
push
subl
inc
adc
ljmp
leave
cwtl
and
xchg
or
je
sub
ds
push
sbb
in
mov
sbb
inc
xor
cld
and
divl
aam
and
mov
loop
ja
inc
movb
movsb
mov
test
gs
ss
mov
outsb
add
or
inc
jae
mov
sub
sahf
pop
js
mov
add
arpl
push
test
xchg
sbb
pop
mov
fst
inc
test
imul
fs
dec
inc
cmpb
push
xorl
adc
inc
imul
add
es
jp
sbb
xor
xchg
movsb
push
or
iret
dec
pushf
inc
or
test
fcoms
push
dec
pushf
or
and
mov
sbb
push
push
mov
adc
push
outsb
and
ret
cmp
pop
loope
hlt
mov
and
fadds
test
lret
hlt
imul
mov
pop
or
testl
fcoms
fcom
adc
sbb
call
xchg
mov
and
mov
cmp
xchg
xchg
add
push
popa
jns
icebp
idivb
cmp
mov
adc
stos
adc
aad
lret
inc
push
push
adc
lods
fsts
or
and
cmp
pop
and
adc
mov
push
iret
shr
fnstenv
cmp
jmp
test
movsb
xchg
fsubrs
lret
mov
pop
out
lea
ret
mov
cld
popf
push
mov
inc
push
cmp
or
inc
stos
sti
das
cmpsb
sbb
movsb
inc
jns
rcrb
and
loopne
xor
pop
inc
cld
pop
sbbb
les
sarb
mov
dec
aad
jmp
jmp
aam
mov
mov
jp
in
sub
or
pop
ljmp
xor
in
dec
jecxz
add
insb
call
clc
int
ret
bnd
sub
cli
jae
pop
lods
int3
mov
popf
sbb
inc
ds
pusha
mov
add
jb
pop
dec
pop
shr
mov
cmpsb
add
out
gs
push
jb
push
inc
stos
leave
cmp
stos
je
subl
mov
push
repz
jb
clc
fst
mov
and
sbb
inc
mov
push
or
or
ret
push
push
xor
pop
push
add
imul
aad
in
js
or
nop
scas
sarl
ret
cltd
xchg
or
add
xor
push
push
xor
lds
push
repz
or
int3
and
jmp
sbb
xchg
push
nop
pop
mov
xchg
and
pop
sbb
test
and
adc
cmc
jno
and
jmp
call
sub
loope
dec
adc
sarl
or
pop
push
jb
lods
push
roll
pop
mov
mov
xchg
in
push
inc
sbb
es
dec
mov
call
loop
xor
adc
in
dec
insl
test
inc
and
cmp
fiadds
mov
mov
cs
mov
pop
jmp
mov
adc
lds
inc
loopne
mull
lock
daa
xor
sub
mov
jo
mov
popa
xlat
pop
les
push
sbb
in
bound
cmp
cld
pop
sbb
mov
push
push
inc
or
push
add
dec
scas
jecxz
es
sub
mov
pop
sarl
cmp
push
or
test
out
pop
mov
xchg
cs
inc
or
add
add
add
pop
sub
pop
out
add
cmpsb
sub
xor
cmp
sbb
pushf
mulb
or
rcll
sub
or
inc
aad
fildl
adc
pop
cmpsb
mov
xor
or
mov
jmp
icebp
xchg
add
repz
sub
sarl
add
lods
sbb
rcrl
jg
js
into
movhlps
xlat
movsb
bound
ficoms
adc
fcoml
xor
rcrb
testb
jmp
ss
jb
xlat
mov
fnstcw
stos
cmpsl
out
xor
add
mov
movsl
sbb
cmp
and
gs
add
call
shr
ret
shlb
inc
or
push
or
push
dec
mov
or
jno
outsb
insb
fstps
adc
sbb
es
lods
cmp
jae
adc
jp
daa
call
shll
inc
cmpsb
addl
outsb
fdiv
lock
out
inc
lods
call
pop
imul
dec
cmp
clc
push
push
andb
mov
push
dec
das
in
aas
fcmovne
or
sbb
jnp
dec
push
cli
dec
pop
adc
xlat
push
repnz
mov
addr16
sub
fsubs
xor
push
xor
xor
push
xor
inc
popf
cwtl
inc
mov
insb
mov
loopne
jns
ljmp
push
adc
inc
and
dec
and
sbb
add
xor
ja
mov
idivb
xorb
mov
nop
adc
test
or
insl
or
jle
lret
push
lret
mov
cmp
dec
les
mov
and
mov
mov
jne
push
ret
arpl
adc
mov
loop
loopne
push
sub
imul
cmp
mov
mov
sahf
int
or
imul
rcll
xchg
xchg
add
movb
aas
lret
xor
lods
out
les
test
mov
dec
in
push
in
xchg
dec
jno
lret
icebp
pushw
mov
add
pop
pop
loope
push
jp
mov
mov
push
mov
pop
inc
inc
inc
xchg
push
lahf
sbb
cmc
and
mov
notb
pop
cld
imul
sahf
aad
lock
xchg
loop
xchg
sbb
pop
or
adc
pop
mov
jp
cmp
xor
fs
subl
xlat
dec
in
sub
test
out
xor
insb
cmp
cmp
push
sbb
cmpsb
dec
or
xor
xor
repz
call
adc
xchg
inc
sbb
mov
mov
sbb
test
movsb
sbb
fnstsw
cmpps
mov
ljmp
incl
rolb
fcoms
testl
lret
loopne
das
mov
filds
cmpsl
data16
jo
or
scas
push
call
pop
jp
in
loope
push
and
adc
dec
inc
dec
sarb
or
sbbb
push
fsubs
mov
mov
mov
sbb
and
inc
push
sub
ljmp
lock
movsl
xor
jne
loopne
mov
clc
add
jmp
fistl
mov
enter
jne
dec
push
fdivs
sti
push
adc
inc
dec
inc
in
mov
pop
inc
sbb
imul
xor
cs
adc
pop
jle
aas
pop
mov
adc
push
xchg
testl
adc
adc
push
push
in
cmpsl
ljmp
rcl
add
rcll
sub
push
add
push
clc
and
sbb
pop
or
call
jbe
dec
and
xchg
repz
xor
xchg
mov
jae
and
mov
sub
push
mov
xchg
push
push
mov
jne
xchg
mov
lock
mov
dec
jbe
mov
push
in
je
mov
mov
mov
push
and
aam
xchg
or
and
leave
cmc
insb
or
fildl
jae
jb
add
mov
and
and
insl
mov
sub
mov
std
or
and
jbe
aad
imull
adc
mov
enter
mov
pop
into
scas
and
and
mov
pop
test
add
xor
inc
sub
arpl
sti
popa
enter
add
jae
loop
xchg
push
int3
mov
scas
leave
fsubs
or
push
cmpsl
pusha
call
pop
cmp
std
adc
aas
aaa
cmp
adc
add
and
mov
jge
push
aas
sahf
movsb
pop
in
movsb
movsb
and
bound
outsb
and
gs
push
into
testb
jne
or
cmp
and
daa
lret
cmpsb
and
inc
inc
clc
push
adc
or
notl
inc
mov
push
adc
out
jmp
mov
mov
movsl
add
dec
orb
pop
and
and
xor
pop
xchg
movsb
or
cwtl
and
pushf
fs
mov
adc
ja
cmpxchg
adc
and
mov
push
lock
mov
cmp
dec
ja
popf
jbe
dec
test
dec
pop
sub
sub
in
mulb
in
mov
push
filds
or
lcall
sub
rol
sarl
mov
cmp
jno
fs
inc
inc
mov
or
loope
push
imul
mov
mov
xlat
xchg
bound
sub
jle
add
push
jo
sti
addr16
sub
pop
add
or
jmp
push
push
call
icebp
imulb
test
bndldx
jmp
sbb
insw
xchg
out
and
shlb
mov
xchg
jo
fucomi
movsl
xor
lcall
or
inc
cld
js
xchg
aam
adc
or
xor
adc
ret
cmp
lds
inc
add
sub
or
sbbl
out
push
dec
adc
adc
add
jg
insl
or
jns
add
es
imulb
xchg
dec
repnz
dec
cmp
sub
or
negb
aas
push
mov
in
les
testl
lea
pop
or
cmp
out
or
loopne
add
sub
or
inc
leave
lea
xchg
ret
pop
cs
sbb
push
mov
call
insb
push
jb
inc
xchg
das
jmp
add
inc
loopne
adc
mov
sub
and
mov
test
je
xchg
test
hlt
and
mov
or
xor
push
ficoms
outsl
out
cmp
sbb
sub
or
mov
into
inc
sahf
movsb
dec
shlb
xor
ret
push
shrb
adc
andb
enter
sarb
inc
cmpb
mov
lock
mov
xchg
psubsb
xchg
cld
data16
jnp
into
test
pop
push
mov
xchg
jge
dec
xchg
dec
cmpsb
xchg
int
fmul
call
pop
jae
lea
mov
sub
adc
jo
mov
or
mov
lcall
sbb
mov
xlat
sbb
lods
loope
movb
add
push
dec
nop
test
sbb
jecxz
xchg
add
sbb
in
xchg
add
pop
shlb
sub
xor
pop
adc
and
push
test
and
xchg
push
fnsave
inc
cwtl
das
aas
xor
pop
insb
sub
add
jnp
jmp
lods
icebp
adc
cmp
mov
pop
sbb
movsl
push
push
adc
lea
lock
or
call
jge
shlb
or
popf
xchg
push
ds
inc
pushl
stos
lret
call
mov
orl
pushf
mov
addb
xor
cld
out
add
xor
lock
nop
mov
cmp
into
cltd
pop
or
sub
xchg
or
in
inc
cmp
jb
scas
sub
xor
cmp
jae
adc
mov
jne
orl
push
ss
or
adc
push
aam
push
sub
add
mov
insb
add
into
jge
or
fisubrs
mov
cmp
pop
aam
pop
sbb
aaa
inc
cs
inc
sbb
call
inc
jae
daa
aaa
xchg
je
daa
aad
or
inc
or
fsubr
lret
mov
pop
cltd
dec
js
and
push
xchg
pop
adc
mov
mov
and
or
jb
sub
push
jno
sub
mov
push
and
push
mov
jmp
and
or
xor
mov
mov
add
je
xchg
cmp
mov
out
inc
jo
nop
or
add
sub
dec
adc
pop
push
jno
inc
sbb
and
mov
repz
insb
call
lock
fimuls
pop
mov
pop
pop
push
lret
pop
scas
cwtl
push
mov
idivb
mov
dec
xlat
xchg
jnp
filds
cld
mov
mov
inc
dec
jns
add
push
or
mov
sbb
popf
or
adc
mov
sub
movsl
mov
or
push
leave
push
loop
iret
lods
lahf
and
inc
xchg
jle
pop
fnsave
data16
aas
negb
les
mov
add
mov
push
mov
lea
nop
fdivr
lods
push
int
test
test
lds
gs
push
pushf
ds
adc
mov
mov
and
adc
push
sbb
je
push
sub
mov
dec
inc
mov
adc
lahf
push
xor
in
dec
adc
or
cmpsb
xchg
xchg
xchg
push
or
xor
aad
mov
jl
aam
sub
les
subb
push
dec
push
mov
sub
popl
aas
test
xchg
negl
jmp
je
xor
test
cmpsl
movsl
adc
shrl
lock
inc
adc
or
cmpsl
leave
cld
int3
xchg
hlt
test
mov
mov
sub
xor
leave
pop
sub
jnp
xor
add
jl
pop
jb
or
movsl
add
cs
lea
push
daa
fcoms
movzwl
mov
xor
test
xchg
sarb
or
or
dec
pushf
xchg
inc
dec
add
pop
test
cs
xchg
pop
cmp
cmp
or
test
idivb
std
jg
lods
mov
outsb
call
adc
aad
out
rcl
dec
adc
mov
mov
lea
xlat
aam
or
or
or
jne
stos
jns
sub
cmpsl
add
xchg
es
or
shrl
sub
lahf
lea
lretw
add
or
jo
mov
sub
mov
xor
mov
push
jmp
aas
lods
jle
in
stc
mov
add
push
push
and
and
xchg
ja
add
dec
jmp
fldcw
mov
mov
imul
push
lahf
jb
add
sub
jge
mov
push
call
call
sbb
sub
xor
std
scas
outsb
les
jecxz
aam
pop
sti
daa
das
in
xor
mov
adcb
push
adc
push
dec
lods
gs
xor
or
pop
jp
divb
pop
mov
jmp
sub
stc
inc
scas
xchg
push
xchg
in
rolb
mov
lds
xor
mov
xor
or
push
push
cmc
inc
xor
add
pop
and
negb
xchg
ss
jbe
stos
popa
in
dec
imul
sub
ss
mov
mov
adcb
aaa
jg
test
icebp
add
jne
mov
mov
add
out
das
pop
mov
cwtl
mov
and
adcl
jbe
sbb
xor
and
dec
and
push
add
push
popa
je
gs
mov
or
add
mov
xchg
xchg
and
add
push
xchg
dec
add
lret
add
inc
cmp
sub
add
jle
call
sub
xlat
inc
cs
fmuls
mov
std
inc
push
adc
lret
adc
ljmp
push
leave
ss
sbb
jns
pop
std
mov
mov
stos
cwtl
fstpt
fistpll
cltd
inc
and
in
popf
pop
lods
shrl
out
and
ret
jmp
cmc
xor
stos
test
inc
mov
mov
jb
stos
sub
jmp
daa
mov
push
inc
or
xor
sub
push
movsb
sbb
sbb
mov
adc
mov
jne
xor
lds
or
dec
jge
sahf
adcb
push
xchg
jge
cmpb
or
inc
lds
dec
sti
lret
cmp
mov
std
fsubrs
mov
sti
or
inc
data16
ret
cmp
lcall
les
xorb
push
test
and
xchg
and
pop
mov
push
add
sbb
cwtl
mov
hlt
ficomps
ljmp
add
jp
xor
dec
ljmp
mov
mulb
jmp
dec
call
adc
push
cmp
inc
rclb
sbb
icebp
mov
outsl
mov
xor
adc
adc
test
add
sbb
iret
or
enter
rcr
push
clc
cmp
mov
or
mov
lret
adc
mov
adc
outsb
jno
mov
push
outsl
xor
add
adc
xor
inc
xor
sbb
push
mov
mov
push
in
arpl
repnz
ljmp
js
push
outsb
mov
test
pop
sub
or
pushf
ds
mov
jg
mov
movsb
jp
and
mov
dec
add
test
lret
lock
sub
test
ret
mov
and
popf
call
mov
add
and
push
push
mov
mov
test
add
sub
adc
adc
cld
add
or
sarb
push
test
loopne
inc
ss
jne
add
mov
in
cmp
push
int3
mov
sbb
and
aaa
push
call
push
stc
into
movsl
fcoml
mov
push
xchg
pop
hlt
push
add
cmp
mov
adc
test
idivb
push
js
test
shll
je
or
sub
sub
insl
jle
mov
add
cld
cmp
je
jno
mov
jecxz
pop
stos
lret
xor
cmpb
or
sti
pop
add
dec
stos
inc
mov
lret
cmp
scas
fchs
je
add
jg
sub
sti
outsl
out
mov
pushf
rcl
stc
sbbb
jl
stc
adc
cmpsl
arpl
adc
dec
cmp
jns
iret
test
scas
jno
sar
dec
or
jl
xchg
pushf
cld
jle
pushl
lcall
inc
push
push
nop
jle
jb
xchg
jnp
and
pop
ja
sbb
add
lock
and
and
inc
pop
push
xor
and
xchg
sub
sub
and
and
push
cs
inc
je
sub
sbb
or
adc
mov
and
inc
adc
xchg
mov
in
jb
cmp
sbb
mov
inc
hlt
and
in
imul
std
fs
xor
mov
jecxz
adc
cmp
sbbb
sub
add
cmpl
mov
xor
sub
scas
push
mov
adc
mov
or
and
mov
sbb
adcb
mov
or
mov
inc
xlat
not
or
pop
push
add
fiaddl
rorb
les
cmp
bound
andl
sbb
cmp
push
clc
and
call
push
adc
or
movsb
push
ret
ljmp
dec
mov
cltd
flds
sub
rcr
add
les
sub
lahf
pop
mov
push
jns
inc
mov
adc
push
fldl
mov
lea
and
sbb
xchg
lea
adc
pop
xor
loopne
add
test
test
mov
fcomps
push
pop
mov
jl
jl
push
add
push
jge
add
and
outsb
loop
xchg
sbb
add
out
pop
ror
mov
cmpb
jne
xchg
and
mov
nop
cmp
and
mov
add
xlat
std
mov
adc
jmp
mov
mov
jmp
mov
das
sub
xlat
or
mov
xchg
sbb
sbb
or
lock
sub
lret
xchg
inc
adc
sub
adc
mov
add
inc
std
sub
push
sti
leave
push
cli
test
ss
sub
inc
and
and
xlat
loope
jl
sub
ret
dec
xchg
popf
sub
push
cli
stc
out
test
enter
adc
and
ret
out
test
cld
mov
shl
pop
cltd
outsb
addl
pusha
cmpl
jb
mov
add
call
pop
dec
in
or
dec
push
or
add
jle
int3
jne
mov
jmp
dec
push
jb
push
inc
sub
xchg
mov
xlat
sbb
adc
and
push
dec
sub
aam
and
and
add
xchg
fisubs
jbe
stos
sub
inc
faddl
jmp
loop
aas
adc
or
cwtl
nop
inc
cli
mov
pop
xlat
clc
decl
and
fs
js
mov
daa
subb
aam
adc
pop
adc
sub
inc
or
daa
in
ja
inc
push
test
jmp
jl
inc
test
lds
in
gs
adc
adc
mov
cld
neg
leave
clc
cmpsl
or
push
inc
popa
mov
test
ss
scas
push
inc
mov
jne
pop
jge
add
out
xchg
sub
xchg
movb
adc
decl
push
adc
sub
jne
insl
scas
xorb
jns
cmp
jo
push
es
lcall
or
cmp
cld
mov
test
or
test
cmp
adc
adc
push
and
xor
inc
jno
loope
je
jns
cmp
jmp
adc
std
push
and
mov
and
adc
inc
mov
xor
or
inc
testl
dec
testl
adc
enter
xchg
cld
mov
pop
rcr
mov
or
cmp
and
push
mov
jne
xchg
mov
inc
jno
mov
mov
and
repnz
mov
jne
ja
movsb
jo
fs
fs
adc
icebp
mov
outsb
fs
ds
cmp
sub
data16
add
mov
cmp
addb
push
rorb
add
cmpsb
in
xchg
mov
sub
push
jnp
imul
inc
xchg
imul
pop
arpl
fcoms
lret
and
jne
push
sub
dec
cmp
push
xchg
sub
dec
outsl
inc
js
je
data16
orl
xchg
pop
xor
or
rcl
sbb
mov
adc
or
and
fnstenv
inc
dec
inc
nop
adc
mov
daa
int3
pop
adc
or
adc
cmpsb
jecxz
adc
arpl
xchg
ja
xor
mov
push
and
dec
add
add
pop
jnp
movsb
lds
cmp
in
nop
dec
inc
sbb
mov
jo
bound
xor
cmpsl
add
sub
mov
inc
xchg
cmpsb
adc
iret
insl
sub
cmp
int3
test
cmpsb
or
and
mov
pop
or
inc
inc
ret
cmpl
cld
and
mov
mov
ljmp
adc
repnz
xchg
xchg
popf
repnz
xchg
repz
daa
fwait
pop
mov
push
aam
add
jno
fdivrp
mov
inc
clc
mov
repz
sub
hlt
mov
std
mov
pop
lock
out
std
sub
lock
mov
sub
jl
inc
jmp
pusha
ss
shl
and
cmp
and
mov
and
mov
xchg
sbb
mov
out
std
jp
roll
stos
mov
inc
mov
mov
mov
incl
mov
adc
adc
mov
and
insl
inc
xchg
push
or
xchg
mov
in
push
inc
dec
adc
mov
jl
hlt
inc
push
enter
or
fwait
sbb
out
pop
sub
rcll
and
daa
dec
push
addr16
sbb
mov
adc
or
mov
data16
sbb
mov
xchg
mov
inc
cmpsl
clc
iret
dec
jle
clc
adc
push
or
test
int3
or
sbb
clc
cli
bnd
sbb
notb
inc
sub
jne
ljmp
inc
cmp
mov
sbbl
jne
pop
test
in
mov
adc
xor
push
mov
ror
add
adc
scas
clc
into
mov
stos
repz
or
adcb
shll
jno
rorb
std
mov
into
xlat
in
adc
movsb
mov
jne
ljmp
dec
jle
or
or
in
xor
mov
mov
mov
mov
and
les
dec
mov
divb
std
adc
pop
xchg
xor
in
sbb
je
popa
adc
in
push
add
or
fs
daa
loope
rolb
inc
inc
dec
dec
xchg
cmc
and
stc
xchg
addr16
push
xor
icebp
lahf
roll
sbb
in
xor
and
insl
mov
push
add
jle
dec
jne
aas
fisttpl
inc
push
add
test
jnp
dec
mov
and
inc
lea
and
into
cs
je
adc
mov
push
inc
cmp
lock
dec
or
lea
loopne
cmp
rcr
jecxz
out
jecxz
or
std
sbb
or
cmp
mov
xchg
sti
push
and
push
loopne
fnstenv
dec
xchg
push
xchg
jmp
xlat
movsl
or
mov
sbbb
adc
mov
daa
or
adc
cltd
mov
scas
sub
mov
inc
xchg
sub
sub
pop
aam
fadds
in
inc
xchg
mov
inc
push
xor
xor
pop
imul
dec
pop
adc
dec
andb
cltd
sbb
in
in
dec
das
ss
jle
inc
jns
mov
fstpt
xlat
sahf
sahf
test
xor
stos
in
mov
das
xchg
fsubrl
xchg
call
sbb
lahf
push
in
push
xor
hlt
sbb
mov
shl
lods
jecxz
hlt
dec
lret
inc
inc
gs
cwtl
sbb
cmpsb
dec
stc
shrl
lahf
lret
sbb
jnp
dec
loopne
sub
mov
out
jmp
ret
es
pop
mov
call
loop
dec
adc
call
adc
or
sub
ds
inc
cmp
fists
sti
daa
push
lock
pusha
jmp
test
rcll
pop
dec
mov
notb
or
sbbb
and
push
adc
fwait
and
inc
cmp
inc
or
in
jmp
adc
xchg
in
dec
loope
insb
into
shr
fwait
and
push
mov
mov
call
out
sbb
push
xchg
jg
jno
dec
notl
bound
inc
adc
into
sti
adc
loopne
pop
sub
sub
sub
sub
pop
fdivl
adc
mov
cwtl
and
icebp
adc
mov
adc
mov
pop
inc
cmc
sub
or
loope
push
pop
es
pushf
pushf
dec
jo
dec
int
sbb
and
or
and
xchg
lock
inc
and
test
je
adc
cli
test
daa
add
mov
xchg
or
push
jo
iret
stc
mov
call
call
mov
arpl
cmp
sub
ss
enter
dec
std
jae
fs
inc
jne
add
hlt
std
sbb
test
mov
and
push
shl
je
adc
je
add
jmp
mov
mov
inc
and
aas
clc
dec
sbb
movsl
fs
push
cmpsb
and
add
out
std
dec
es
fisubs
adc
jns
dec
out
sub
and
call
push
repnz
pop
jle
call
js
or
jg
mov
lcall
push
push
sub
push
dec
sub
sbb
call
scas
sub
in
mov
cmpl
inc
add
loopne
fwait
loope
push
or
cwtl
jl
lret
fnstsw
int3
inc
les
xor
push
push
jbe
add
jns
xchg
jp
xchg
push
cli
and
ret
subl
sub
dec
cmp
lock
dec
xchg
xor
pushf
cmp
push
xchg
cmp
lock
sbb
addr16
js
push
mov
cmp
scas
adc
sbb
movsl
mov
sbb
sbb
neg
sbb
mov
xor
dec
sub
pop
lods
pop
add
pop
push
adcl
or
test
mov
lret
sub
add
mov
stos
adc
inc
test
and
xor
and
mov
mov
mov
push
and
cmp
or
test
adc
or
dec
push
test
mov
and
test
cwtl
lahf
mov
in
sub
xchg
jge
cmp
xchg
and
mov
call
cmp
pop
test
rclb
arpl
cltd
je
cmp
mov
dec
dec
test
mov
gs
jnp
dec
push
mov
hlt
and
pop
movsl
frstor
cld
push
or
loope
sbb
pop
mov
fbld
pop
fldcw
dec
xor
push
inc
pusha
mov
test
imul
nop
jnp
jae
mov
adc
ss
out
jo
and
inc
adc
pusha
int
or
push
in
dec
pusha
cwtl
int3
ds
std
adc
dec
inc
decb
cwtl
pop
xor
push
push
add
push
ret
push
mov
sbb
pusha
inc
fsubs
xor
or
jb
hlt
arpl
cmc
inc
adc
mov
push
mov
sub
push
and
fisttpl
movsb
mov
or
aad
popa
inc
aas
repz
mov
xor
or
or
movsb
mov
mov
addr16
or
push
xlat
nop
xchg
test
icebp
push
cmp
clc
push
inc
cmpsb
loop
pop
je
mov
repnz
stos
cmpsb
adc
subl
or
inc
cmp
and
sbb
test
sbb
push
or
vmread
and
mov
nop
sbb
adc
bound
inc
mov
and
adc
mov
shlb
xor
sbb
mov
and
adc
mov
lock
hlt
xor
sbb
mov
pop
cmc
add
pop
inc
or
or
adc
sbb
and
and
inc
sub
sub
xor
rol
pop
adc
mov
or
ja
test
je
push
dec
lea
adc
into
fldenv
cmpl
lods
arpl
subb
xor
jbe
popa
jbe
daa
mov
cmpsb
mov
mov
push
nop
jl
mov
in
adcb
sbb
test
and
nop
rorl
test
and
pop
addr16
inc
xchg
and
cmp
cwtl
test
and
pushf
lahf
and
xor
inc
inc
movsb
and
xor
test
inc
mov
pop
adc
mov
les
inc
add
and
adc
and
inc
rclb
pop
mov
cmp
and
adc
mov
in
and
adc
imul
mov
dec
xor
inc
inc
fsubl
js
xor
nop
and
adc
mov
inc
mov
hlt
add
in
inc
enter
lock
mov
and
adc
enter
daa
add
bound
mov
jo
mov
inc
xchg
je
inc
xor
adcl
outsl
and
in
pop
adc
or
inc
dec
and
jl
cmp
cwtl
cmp
or
inc
mov
adc
out
jo
and
fdivl
movsb
dec
sub
fists
sub
sbb
and
push
xor
xchg
cmc
xchg
or
adc
and
or
fisttpll
xor
push
xchg
mov
cmovae
aam
mov
jb
ja
ud0
xchg
dec
sti
xor
loope
sbb
dec
mov
ret
and
push
popa
jb
aad
ja
adc
pop
inc
mov
and
push
js
xchg
mov
cmp
jae
and
mov
pop
dec
arpl
js
pop
imul
rolb
adc
movl
sbb
mov
jl
adc
inc
adc
ror
bound
clc
pop
test
jne
std
inc
aaa
push
pop
repnz
call
faddl
xchg
pop
inc
adc
dec
movsl
sbb
jae
fs
mov
or
push
and
fwait
mov
jo
or
loope
push
push
push
js
xchg
test
fadds
repz
cmc
inc
mov
mov
adc
lret
sbb
movsl
das
and
mov
fs
mov
adc
mov
xor
fs
aas
jne
lock
hlt
enter
xor
stos
mov
xchg
imul
dec
sbb
popa
jge
pop
dec
pop
inc
dec
popa
movsl
cmp
inc
pop
outsl
arpl
xor
jno
test
scas
dec
mov
cli
add
call
xchg
or
or
mov
or
or
pusha
sbb
xor
jne
rorl
push
call
push
lds
fcoms
dec
ror
imul
pusha
test
fsubs
dec
fsubrs
fiaddl
incb
mov
in
inc
repz
in
dec
xchg
mov
hlt
ds
sbb
and
cmp
popa
and
dec
aaa
icebp
and
sub
fs
imul
dec
js
xchg
cmp
lea
pushf
enter
dec
cmp
int
push
push
xlat
les
inc
bound
test
enter
xor
add
xor
shll
sub
in
add
pop
sbb
inc
insb
jl
and
adc
jno
mov
xor
js
es
pushf
push
dec
xchg
adc
pop
push
mov
les
push
sub
inc
icebp
cmp
sub
push
arpl
insb
inc
les
mov
or
dec
stos
mov
fs
inc
push
imul
fisubs
shrb
imul
js
add
add
leave
lock
xor
aaa
and
test
sbb
or
jns
mov
lods
push
pop
adc
and
inc
jae
jge
xchg
inc
xor
jmp
push
inc
add
add
inc
hlt
setnp
cmp
add
pop
pusha
adc
dec
loop
push
je
rolb
outsb
jno
and
inc
push
sarb
adc
in
mov
push
pop
jecxz
jns
and
outsl
adc
outsl
dec
scas
xchg
push
sbb
push
mov
sub
xchg
push
and
jmp
in
bound
or
les
jne
test
mov
adc
xor
mov
xchg
pushw
imul
std
je
out
stos
xchg
std
setns
push
pop
push
sti
imul
fstl
inc
outsl
shll
ja
or
xchg
cmpsb
adc
in
add
and
adc
jecxz
cmp
mov
dec
leave
adc
scas
jae
stos
icebp
bound
cli
and
test
mov
sarb
int3
fwait
dec
frstor
jne
std
in
sub
push
and
leave
xlat
inc
and
movsl
cwtl
arpl
and
xor
imul
pusha
sub
dec
or
icebp
jae
and
add
add
mov
in
js
adcl
mov
mov
jae
aaa
fprem
mov
or
sbb
fldenv
sub
cwtl
mov
adc
loop
mov
or
push
cmp
shr
cltd
sahf
and
addb
les
xchg
sbb
adc
mov
add
xchg
jnp
adc
outsl
xchg
mov
mov
or
les
test
mov
mov
pusha
dec
or
jo
je
xor
js
in
cs
in
stos
cmp
ljmp
fs
dec
hlt
mov
lds
sbb
sub
adc
push
pop
or
addr16
or
or
aam
sbb
mov
push
pop
clc
and
ret
into
call
notl
mov
jmp
pop
outsl
repnz
sub
jp
sbb
push
or
flds
rcrl
push
dec
sbb
or
pop
push
enter
pop
mov
jg
jae
jmp
add
sbb
mov
cmp
or
fisubl
fisttpll
prefetch
or
fs
or
mov
adc
test
or
cwtl
jmp
les
jns
shlb
daa
xchg
movsb
in
pop
and
mov
or
les
mov
lret
gs
xor
jo
mov
clc
clc
lock
pop
inc
test
testb
xchg
add
and
enter
pushf
cmp
dec
lock
divb
pop
dec
lock
mov
ret
inc
xchg
popa
iret
sub
push
inc
insb
mov
orb
mov
mov
sub
scas
adc
sub
cld
movsl
adc
push
stos
popa
dec
icebp
mov
int3
adc
push
loope
add
inc
sub
push
xchg
xor
js
clc
ja
cmp
add
icebp
push
imul
mov
incl
cmc
dec
lahf
jge
jno
mov
mov
test
mov
mov
jnp
mov
cmpsl
dec
adc
call
push
mov
mov
mov
daa
int3
mov
xor
adc
pushf
pop
xchg
xchg
jmp
jp
inc
cmpsb
xchg
adc
leave
lods
mov
lcall
xchg
jns
bound
leave
std
xlat
clc
mov
adc
adc
sbb
js
or
sub
adc
sbb
add
rol
scas
jb
cmp
dec
xchg
and
dec
out
push
clc
cs
xor
or
mov
xchg
enter
push
loopne
call
stos
scas
aam
rcrb
jmp
jb
pop
add
notb
int
jle
or
xor
dec
in
por
pop
aas
std
cmp
cld
enter
das
pop
in
out
pop
jge
movsb
test
ret
cmp
pop
jle
jb
cltd
dec
clc
jmp
push
inc
push
shll
inc
imull
xchg
pop
fmuls
and
dec
adc
jge
mov
rcrb
das
lds
mov
cmp
fldcw
incb
add
ret
jmp
push
xor
adc
dec
stos
mov
movsl
div
inc
push
std
pop
jg
adc
or
mov
hlt
lods
pop
jmp
sub
xchg
or
push
dec
push
decb
in
es
and
sti
xor
es
fadd
jo
and
lock
xor
imul
cmp
dec
jne
cmpl
push
or
mull
scas
jmp
loop
cld
or
cmp
ljmp
mov
mov
cmp
sbb
fs
dec
xchg
xchg
stos
adc
dec
shrb
icebp
add
fs
jmp
jmp
adc
pop
push
pop
pushf
xor
push
ja
cwtl
push
in
lds
imul
dec
pop
ret
stos
cmp
clc
cltd
cmpl
testb
adc
test
nop
xchg
dec
xchg
test
nop
stos
jae
mov
adc
pusha
add
pop
ja
test
push
jmp
aas
or
sbb
add
and
dec
sbb
mov
nop
adc
outsb
mov
enter
nop
xchg
and
inc
int3
push
and
or
dec
daa
push
jg
rolb
cmp
je
mov
sbb
andb
aaa
and
sub
dec
daa
int3
fisttpll
add
jmp
imul
mov
cmc
jns
mov
cs
push
mov
jo
int3
cltd
jp
andl
mov
inc
sub
and
mov
mov
xor
xchg
and
xchg
xchg
sti
pushf
mov
dec
or
rcrl
dec
jno
aad
push
into
adc
test
jo
and
movsl
push
popf
arpl
fs
out
ljmp
fs
pop
fs
push
mov
test
lds
mov
test
rcl
xor
mov
mov
jle
dec
scas
mov
int3
push
xor
icebp
mov
mov
push
enter
pop
call
pop
test
movsb
mov
aad
lods
movsl
dec
lock
mov
push
add
xor
mov
or
jne
dec
push
add
jl
adc
jo
pop
inc
or
addb
dec
movsl
jg
push
add
mov
or
push
jmp
push
mov
movsb
es
clc
std
mov
push
je
adc
add
adc
negb
rclb
mov
push
mov
jnp
scas
call
inc
js
xchg
or
mov
jmp
push
or
out
or
lods
lret
movsb
out
mov
jmp
ret
call
or
push
int3
and
mov
icebp
popf
adc
rclb
add
push
int3
inc
stc
xchg
mov
sub
pop
bound
icebp
mov
cmp
fs
test
ja
xchg
nop
push
in
insb
jbe
nop
adc
adc
test
sbb
mov
inc
jne
idivb
mov
jo
or
paddd
das
call
shrl
dec
push
cs
mov
call
pop
sub
inc
jbe
pop
imul
xor
add
xor
mov
pop
loopne
pop
out
mov
sbb
push
out
jecxz
and
ss
shlb
or
mov
add
les
and
arpl
add
mov
mov
mov
decb
gs
je
inc
xchg
mov
lret
std
cmp
lds
mov
xchg
add
enter
adc
dec
pop
cltd
pop
jne
mov
inc
int3
mov
cmovae
push
fmul
sub
test
inc
mov
mov
and
jne
hlt
and
aad
jo
adc
clc
and
adc
pop
adc
cmp
mov
push
in
dec
add
adc
add
enter
adc
jmp
mov
cli
adc
cmp
jne
cwtl
add
push
lea
adc
imul
push
xchg
mov
or
and
sbb
loope
pop
pop
aad
adc
or
pop
scas
mov
xchg
jmp
pusha
scas
int3
dec
fwait
inc
jbe
movb
das
clc
testb
push
pop
or
daa
int3
add
and
sbb
hlt
fmull
sub
ffreep
lds
push
mov
adc
lods
and
ret
push
lret
loop
lret
pop
mov
sub
enter
ret
stos
sub
push
rorb
push
push
push
call
loopne
out
in
add
jmp
or
cmp
ds
sbb
jecxz
in
adc
and
jno
xor
call
xchg
sbb
mov
mov
xorl
inc
push
mov
pop
data16
mov
fwait
push
fcmovbe
popf
dec
mov
mov
cmp
gs
add
shll
inc
xlat
mov
jge
sar
dec
jle
enter
cmp
ror
cmp
xchg
dec
adc
jne
add
xor
fsts
insb
int
ret
adc
inc
cmp
inc
rol
sbb
pushl
les
mov
pop
les
nop
xor
mov
in
jp
jae
add
gs
mov
or
dec
dec
jg
add
adc
arpl
dec
and
inc
bound
je
sub
cmp
add
or
push
dec
outsb
inc
gs
repnz
mov
ds
lret
or
or
or
add
jbe
cmpsl
cwtl
mov
push
xchg
pop
dec
mov
test
push
and
push
pop
insb
cmpsl
je
sbb
or
mov
out
sbb
pop
dec
sbb
mov
cs
dec
pop
push
in
and
out
mov
mov
mov
sub
je
adc
inc
imul
jmp
jb
lahf
clts
cmp
cmp
sub
cmp
outsb
jo
sub
sbb
jo
call
in
sub
loopne
dec
and
fcoml
in
outsl
mov
xchg
int3
sbb
aam
inc
enter
enter
enter
push
enter
insb
enter
enter
or
mov
adc
out
mov
addb
xor
or
dec
inc
out
jnp
lahf
sub
adc
fmul
call
and
sbb
add
jae
mov
and
stos
shlb
mov
or
pop
sahf
add
mov
cmp
mov
int3
sub
imul
int3
mov
mov
orl
push
xchg
xchg
int3
mov
xor
jl
subb
sbbb
mov
dec
or
xchg
test
shll
mov
enter
adc
int3
xor
shlb
shlb
adc
mov
pushf
inc
cmp
inc
add
ds
push
push
jo
sub
mov
or
xor
push
sarb
cld
aad
test
sub
mov
cmovs
clc
test
ds
cwtl
outsl
add
jae
orl
lcall
or
or
imul
inc
popa
push
xchg
mov
inc
xor
and
es
dec
inc
mov
jle
or
mov
inc
or
je
push
pop
dec
inc
jns
add
cmp
stos
push
inc
mov
daa
repz
in
sbb
arpl
dec
test
or
jmp
imul
cs
mov
mov
push
adc
jg
jl
clc
mov
jae
aam
icebp
dec
fwait
pop
daa
iret
mov
and
dec
inc
pop
cld
jo
mov
adc
fs
push
aas
lods
or
inc
loopne
jb
je
das
out
push
lret
aam
or
adc
mov
and
insb
pushl
in
mov
inc
ljmp
out
mov
dec
sub
andb
push
lock
cmpl
cmp
or
push
outsl
jo
push
call
pushf
fbld
pusha
jns
sbb
mov
pop
mov
lahf
or
popf
and
gs
xchg
nop
dec
xchg
pop
or
sbb
and
xor
nop
push
je
lea
xchg
dec
repz
int3
dec
push
xlat
pusha
test
enter
sbb
movsb
push
daa
les
or
pop
pushf
lea
int
add
imul
mov
rcrl
push
xor
dec
sub
mov
jle
fmuls
call
lds
push
and
cwtl
inc
dec
lock
repnz
aaa
dec
or
dec
outsl
fldenv
rorl
subb
inc
outsl
rcr
and
sbb
pop
and
dec
cltd
fdivl
mov
dec
and
imul
sahf
xchg
ja
push
hlt
sbb
inc
movsl
insb
es
xchg
dec
and
jmp
or
inc
daa
lods
pop
arpl
daa
and
xor
xchg
xchg
pop
and
push
inc
mov
mov
loope
nop
and
push
mov
int3
pushf
sbb
jg
sub
pop
xchg
sbb
or
cltd
out
jmp
sub
sahf
jb
test
or
and
add
xlat
imul
sub
push
mov
mov
or
fdivs
and
pop
inc
mov
xchg
jl
adc
mov
es
out
in
sub
addb
add
mov
je
mov
adc
push
adc
inc
adc
test
and
data16
cwtl
aad
shlb
imul
pushf
xor
iret
adc
clc
and
popf
adc
imul
xchg
push
mov
cmp
ret
mov
adc
dec
pop
inc
cli
nop
and
mov
pop
scas
dec
adc
ret
enter
xchg
xorb
adc
xchg
mov
sbb
jge
wrmsr
test
cmp
mov
ds
mov
mov
jp
idivb
sar
shlb
mulb
adc
jl
sbb
mov
fstpl
fwait
cmp
sbb
mov
fwait
faddl
call
out
inc
movd
or
dec
xor
xor
jle
sbb
arpl
pop
inc
daa
xor
lods
inc
cmp
lcall
sub
cwtl
loope
test
push
call
sub
call
scas
xchg
mov
cwtl
pusha
fnstenv
add
movsl
xchg
mov
pusha
dec
push
test
int3
mov
lcall
insl
mov
jg
mov
std
call
outsb
and
test
cld
adcb
popa
mov
inc
cld
jp
jl
lds
mov
in
aad
cmp
sub
test
jge
push
add
jns
inc
sbb
mov
loope
outsl
cmpb
imul
and
pop
mov
adc
cmpb
lahf
push
rorb
cmpsl
imul
aaa
cmpb
mov
sbb
add
push
jmp
xchg
and
xchg
and
btr
inc
sarb
cmp
mov
dec
call
test
and
xchg
dec
sti
xor
or
xchg
xchg
ds
sti
jmp
and
and
mov
mov
ja
fcoml
je
xchg
sub
mov
push
mov
adc
nop
jns
adc
add
call
leave
lcall
js
les
xor
xor
inc
and
inc
jge
mov
add
adc
das
and
push
les
pop
mov
xchg
imul
xor
cld
push
inc
popf
adc
cmp
pushf
adc
out
or
lods
std
mov
adc
sbb
mov
inc
cmp
hlt
adc
inc
cld
mov
sub
mov
in
out
pop
mov
invd
cmp
lods
push
adc
dec
in
mov
or
and
movlps
and
push
jl
sbb
sub
jne
pop
ds
iret
out
and
pushf
jmp
or
inc
and
xor
push
lret
fs
das
mov
pop
jmp
adc
jae
sbb
or
add
adc
or
inc
lret
mov
cmp
pop
or
mov
dec
mov
cwtl
inc
lcall
sub
sub
fnstenv
dec
mov
inc
mov
loop
les
scas
pop
frstor
repnz
xor
cs
add
xchg
mov
xchg
push
jl
jmp
jmp
test
scas
inc
insl
mov
jmp
mov
repnz
lcall
mov
pop
shll
adc
mov
push
les
jae
xor
es
scas
cmp
cmp
xchg
push
and
sbb
inc
push
and
push
jg
outsl
sar
jmp
loope
loopne
or
std
jo
mov
or
mov
lcall
cmp
addl
cltd
inc
cmp
xor
push
popf
pop
fsubr
mov
or
sbb
inc
das
testl
jmp
out
sub
aas
in
jb
cmp
sbb
mov
and
in
jb
cmp
sbb
mov
and
in
jb
cmp
sbb
mov
and
in
jb
cmp
sbb
mov
and
out
adc
add
add
cmp
add
pop
xchg
or
or
or
jl
cwtl
imul
fs
adc
xchg
cmp
push
inc
xor
mov
inc
and
dec
cmp
adc
mov
and
dec
sbb
and
inc
or
mov
adc
and
inc
aam
mov
adc
and
dec
fcoms
mov
mov
mov
inc
xchg
test
mov
mov
xchg
jl
nop
inc
je
mov
and
dec
js
pop
and
push
and
dec
pusha
xchg
inc
and
cmp
mov
dec
and
dec
inc
xchg
and
cmp
mov
sub
dec
and
cld
mov
mov
adc
adc
in
clc
addr16
fsubrl
popa
rorb
push
and
mov
das
sti
pop
and
mov
mov
je
and
push
nop
jle
cmc
mov
std
cwtl
lods
push
inc
movsl
les
orb
outsl
lret
jl
insl
js
js
cmp
je
popa
sub
jge
mov
mov
enter
jbe
mov
call
mov
inc
adc
lock
int3
xor
jecxz
and
xor
mov
xchg
inc
loope
and
adc
inc
lock
test
in
adc
cmp
inc
inc
lea
pop
dec
mov
mov
pusha
cld
mov
xor
call
mov
jne
mov
xor
mov
imul
mov
in
test
xchg
jno
jl
loopne
fs
pop
jo
je
jl
and
and
jl
rclb
mov
call
xor
inc
add
xchg
xchg
sbb
push
test
sub
or
and
std
cmc
push
fs
imul
jo
mov
int3
xor
mov
sarb
fadd
cwtl
pop
imul
test
cmp
test
stos
cmpsl
rclb
loop
xor
icebp
aas
adc
mov
and
push
dec
popf
pop
or
movsl
sub
enter
cmpl
mov
adc
dec
pop
test
call
nop
lods
repnz
cmp
cld
dec
pop
and
add
and
ret
js
or
add
jns
dec
pop
adc
int3
adc
nop
in
xor
pushf
nop
sti
cmp
les
xchg
or
or
lahf
loope
outsb
cmp
mov
test
adc
dec
stos
and
or
mov
jne
xchg
sub
je
inc
or
fcomi
adc
call
mov
lock
mov
in
sbb
adc
pop
fs
sar
das
xchg
fistpl
nop
adc
push
and
xor
repnz
xchg
or
inc
into
xchg
sub
fisubs
xchg
pop
adc
outsl
test
dec
sahf
cmp
sub
inc
loopne
xor
pop
mov
jo
sbbb
xchg
loope
inc
adc
pop
push
mov
dec
ret
jg
loop
fs
push
push
cmp
lret
cld
rcr
push
test
xor
push
jle
dec
imul
push
incl
sub
pushf
arpl
insb
sbb
or
or
adc
inc
fisubl
fs
or
push
jo
jb
sbb
dec
popa
xchg
fs
adc
xor
cmp
js
ja
adc
fs
fs
addr16
or
jb
cli
lods
push
push
sbb
and
push
adc
insb
push
imul
push
push
outsb
mov
or
push
or
bound
insb
and
stos
dec
pop
pop
test
adc
xchg
push
jo
mov
xor
xchg
xor
dec
sub
sub
mov
fisttpl
imul
bound
adc
inc
mov
in
inc
js
dec
mov
jbe
or
imul
adc
mov
out
cmp
mov
aaa
xchg
xchg
ret
or
lods
dec
fcompl
cmpb
je
nop
repz
jne
mov
in
jg
add
mov
add
call
inc
mov
add
js
popa
push
mov
jg
or
je
gs
in
push
nop
insb
daa
push
xor
pop
imul
pop
dec
jo
pop
inc
cmp
sbb
pop
jne
add
push
icebp
mov
repz
pop
mov
icebp
aas
stc
fdivl
cmc
xchg
arpl
dec
cld
pusha
push
mov
lret
test
sub
sbb
loop
mov
mov
incb
outsl
ss
or
clc
xchg
fdivrl
add
frstor
mov
leave
in
push
inc
shrb
lea
sub
clc
xor
out
dec
scas
cmp
jne
adc
mov
and
jge
test
ja
std
or
pop
xchg
pop
mov
movb
js
mov
cmp
jge
repnz
lock
or
aam
jmp
push
push
icebp
call
je,pn
jmp
and
mov
mov
adc
and
adc
mov
mov
adc
mov
sub
fadds
leave
push
or
mov
add
sub
pop
jb
sbb
repnz
cmpsb
js
pop
rorb
ja
cmpb
fsubl
add
inc
add
addl
pop
or
or
or
or
or
or
inc
adc
mov
adc
and
dec
adc
inc
sbb
mov
adc
and
inc
sbb
add
and
jp
or
dec
mov
inc
icebp
add
adc
inc
dec
push
xchg
push
fwait
mov
fists
adc
or
inc
xor
mov
fs
dec
adcb
mov
dec
jmp
push
add
and
cli
pop
movsl
mov
sbb
push
jmp
push
adc
test
add
pop
adc
ljmp
enter
sbb
sbb
cmpsb
les
push
adc
and
test
push
mov
jae
movups
or
inc
adc
sub
push
mov
inc
xor
inc
xor
or
inc
das
and
adc
mov
les
cmp
or
inc
cmp
inc
and
adc
les
and
ficompl
sbb
sbb
sbb
cmpsl
xor
or
inc
xchg
and
pop
mov
and
ja
sbb
imul
arpl
dec
and
and
adc
mov
and
test
and
addr16
and
adc
dec
mov
std
mov
mov
add
les
mov
or
sbb
decl
inc
fstpl
fdiv
mov
push
call
nop
inc
fmul
mov
inc
pushf
inc
inc
pop
push
lea
xor
push
pop
dec
pop
add
js
lock
stos
xor
test
popa
enter
pop
push
call
lret
add
cmp
add
fsubs
jl
gs
repz
sub
sbb
dec
jmp
and
fs
mov
xor
popf
into
mov
enter
and
enter
dec
and
lds
lea
mov
sbbb
fs
and
imul
pushf
adc
or
adc
or
jmp
out
pop
jbe
js
jnp
push
out
and
cwtl
clc
pop
push
mov
inc
push
div
jo
pushf
xchg
in
mov
xor
sub
mov
cmp
inc
adc
sub
or
sahf
adc
or
call
and
sbbl
mov
dec
jns
and
pushf
rcll
lods
xor
mov
add
adc
cld
mov
xor
or
add
mov
add
jp
push
ret
movsb
ja
jne
sbb
pop
adc
push
mov
sub
mov
lods
mov
popa
add
push
mov
in
call
sbb
or
mov
push
lahf
icebp
mov
inc
jb
pop
jo
and
nop
sub
pop
push
scas
lcall
fs
pop
daa
add
sarb
jo
push
lahf
push
jo
pushf
icebp
push
sti
adc
push
cmp
lahf
adc
adc
xchg
or
vsubsd
loopne
pop
mov
fs
or
or
movsl
repnz
mov
cmc
jo
dec
pop
lahf
jno
add
jmp
loopne
cld
xor
das
and
xlat
sbb
pop
lahf
in
adc
push
pop
cmpsl
dec
je
jmp
pop
and
inc
test
push
xchg
in
xchg
in
mov
mov
daa
nop
adc
adc
aad
enter
xor
and
pop
jns
jle
enter
cld
mov
sub
mov
or
xor
repnz
movsl
out
bound
insb
mov
jo
inc
push
push
stos
or
mov
nop
imul
cmpsl
adc
mov
outsl
pop
mov
dec
sbb
inc
es
lds
test
mov
clc
xchg
mov
mov
mov
inc
dec
jb
and
test
leave
popa
add
mov
daa
adc
sbb
fsub
xchg
repnz
and
adc
int3
testb
jmp
and
add
xor
or
push
pop
sub
sub
sub
add
shr
and
dec
dec
dec
je
aam
and
jmp
push
pop
js
sbb
rclb
dec
stc
jle,pn
mov
aam
aam
ljmp
das
jbe
xor
xor
xor
mov
ss
les
and
test
dec
push
inc
mov
movsl
push
xchg
hlt
mov
pop
dec
popa
jns
test
fs
xor
or
or
pop
fsts
inc
in
loope
sub
mov
stc
push
or
loop
mov
mov
leave
jo
je
lahf
int
inc
in
xor
lret
inc
pop
outsb
adc
cmp
push
adc
adc
adc
into
inc
pop
xchg
int3
pop
cmpsb
or
in
or
add
lret
pop
dec
or
stos
add
gs
lea
or
pop
adc
rcrl
cmpsl
cmp
push
aam
enter
add
movsb
jl
inc
jbe
push
push
std
xchg
nop
fmuls
inc
rclb
daa
lret
int3
push
inc
mov
movsb
into
call
sub
push
daa
mov
shrb
and
dec
push
repnz
adc
in
cmp
fwait
leave
adc
test
daa
cmp
mov
lret
push
and
adcl
adc
call
fadd
test
sbb
cmp
xchg
mov
sbb
sbb
and
dec
pop
inc
dec
leave
push
mov
or
jbe
das
decl
rol
jg
push
and
pop
or
cmpsl
icebp
bnd
mov
cmp
dec
push
xor
loop
lods
add
outsl
and
mov
inc
fs
fidivl
movsb
jle
and
and
mov
in
mov
push
nop
sub
sub
sub
adc
adc
and
mov
and
pop
sub
daa
pushf
dec
lcall
or
sbbb
std
test
cmp
jl
cmp
xchg
arpl
out
push
stos
and
dec
and
or
xlat
push
mov
and
sub
adc
cmp
and
mov
sub
aad
mov
fs
les
inc
pop
arpl
inc
rcl
les
inc
rcll
mov
ret
inc
sbb
fistpl
mov
int3
iret
or
sbb
xor
insb
inc
daa
mov
cmpl
mov
insl
aad
adcb
fdivrl
inc
jo
in
xchg
bound
sub
scas
push
pop
adc
lds
add
xchg
fisubl
fcmovbe
pop
scas
js
mov
adc
mov
lods
and
add
les
sbb
inc
and
ss
test
mov
or
lods
xchg
jmp
scas
or
or
add
xchg
punpcklbw
or
jbe
mov
dec
inc
arpl
xchg
out
adc
and
xchg
and
jne
mov
lret
xor
repz
adc
mov
or
insb
addr16
mov
push
adc
dec
sub
cmp
xchg
sub
push
stc
pop
or
stc
sbb
mov
sub
inc
sbb
leave
into
in
dec
aad
enter
ror
push
jnp
je
sub
pop
dec
sub
mov
loopne
mov
or
xchg
ficoml
fsts
mov
js
or
addr16
stc
inc
adc
test
and
out
dec
xchg
pop
mov
aam
and
add
adc
inc
daa
mov
add
sub
cmpsb
ja
movsb
mov
inc
test
sub
xchg
nop
cli
testl
cmp
dec
sub
xchg
and
int
xchg
add
pop
imul
cmpsl
or
loope
or
loop
mov
xor
and
je
xor
xor
shll
notl
aaa
stos
and
inc
mov
and
addr16
sub
add
aam
inc
shlb
or
push
jb
orl
roll
push
pop
jo
dec
and
inc
cmp
cmp
aas
cs
inc
ficomps
mov
inc
mov
jo
jbe
mulb
fwait
xchg
push
mov
movsb
sub
addl
sub
xor
mov
adc
ret
xchg
fisubs
and
or
inc
mov
pop
in
mov
adc
loopne
and
or
adc
int3
sub
or
sbb
push
jl
fs
mov
add
js
movsb
push
mov
mov
or
nop
rcll
jle
sub
clc
dec
nop
sub
test
fdivr
sub
roll
or
or
fstps
or
push
je
mov
cmp
pop
pop
fimull
mov
les
mov
mov
push
and
je
and
fsubl
xor
push
jo
inc
in
lods
pop
add
or
xor
ret
es
lea
fistpl
or
and
data16
or
jns
adc
dec
lahf
stos
movaps
mov
adcl
and
mov
sub
push
xor
cld
xlat
push
dec
out
push
addb
dec
icebp
xor
ud2
pop
mov
mov
lret
ret
fildl
sub
mov
adc
adc
les
sbb
lods
adc
sbb
jle
shll
gs
sarb
push
sbb
xchg
lret
mov
sbb
sbb
paddb
mov
sub
push
jg
mov
repz
or
add
cmp
and
or
pop
adc
and
daa
test
or
mov
push
nop
sub
and
das
test
xor
dec
repnz
ret
cmp
hlt
roll
outsl
sub
je
push
mov
and
dec
lahf
in
xchg
and
jae
or
stos
or
addr16
andl
push
adc
xor
adc
mov
pop
add
push
add
cli
out
pusha
mov
add
inc
fldt
push
inc
stos
shr
dec
mov
jmp
and
sti
and
mov
sti
imull
shl
das
shrl
push
mov
call
push
rorl
das
sarb
and
mov
push
mov
mov
xlat
or
and
jmp
sbb
xor
fcomip
scas
add
daa
test
bound
xlat
xorb
scas
outsb
stos
fnstenv
push
lahf
and
and
add
hlt
mov
bound
in
xor
adc
or
sub
mov
xor
sub
mov
lahf
loopne
sub
fstpt
jmp
or
lret
hlt
ret
mov
imull
leave
pop
xlat
push
mov
mov
mov
loopne
enter
stc
add
fstl
and
adc
mov
sbb
add
or
addl
repz
rorb
lcall
push
pop
inc
xchg
sub
test
xchg
movsb
jp
popa
jp
dec
push
adc
add
push
pushf
sub
jge
cltd
cwtl
mov
adc
rolb
fsts
pop
xor
in
jmp
sbb
test
das
repnz
xor
insl
jecxz
les
sar
cmpsl
loope
pop
dec
mov
dec
dec
add
pusha
addb
cmp
mov
adcl
inc
or
inc
call
adc
and
and
or
lods
pop
xor
sub
mov
mov
movsb
xchg
lahf
les
sub
xor
sbb
mov
test
pushf
loopne
inc
push
push
xchg
jmp
sub
loope
cmp
xchg
push
lea
arpl
movsl
push
add
and
or
imul
imul
jl
fs
xchg
jl
adc
loop
push
test
fadds
fstps
test
or
push
dec
mov
aaa
fadds
jl
dec
je
xchg
sbb
and
mov
inc
push
es
testb
daa
rcrb
or
or
jns
inc
xchg
jae
sub
int3
and
stos
mov
adc
shll
dec
jp
data16
add
cmc
loope
mov
inc
mov
notb
dec
jl
add
push
or
das
scas
pop
or
aam
push
mov
cltd
dec
mov
inc
add
sbb
push
sbb
test
pop
dec
adc
jbe
rcrb
sbb
loop
lds
xor
jp
nopl
dec
inc
mov
xor
in
mov
sbb
fstpl
mov
push
jo
call
cs
int
inc
je
mov
or
inc
xor
jmp
push
dec
js
in
andl
outsb
jno
ret
fdivrl
or
cmp
jle
sbb
enter
sbb
cltd
xchg
je
notl
mov
xchg
jmp
or
es
or
inc
lret
int3
out
leave
xchg
in
enter
add
daa
jne
adcl
dec
cltd
rclb
data16
mov
xchg
es
das
negb
fsubs
ds
jp
inc
outsl
flds
jp
aaa
xlat
xchg
add
mov
dec
sti
mov
popa
jmp
test
adc
jns
sarl
mov
and
lcall
push
pop
in
enter
jbe
mov
jb
adc
inc
and
pop
and
xchg
or
pop
dec
sub
mov
add
adc
push
add
push
and
cmpsb
loope
or
and
and
loope
dec
push
add
mov
inc
push
jle
ja
mov
cmpl
nop
outsb
test
je
outsl
cmp
cld
sub
pusha
mov
or
adc
dec
inc
cwtl
sub
cs
add
inc
dec
stos
ret
aad
test
setge
xchg
push
movsb
mov
and
dec
xor
dec
sub
dec
and
das
xor
mov
dec
in
xchg
filds
add
insl
xchg
jno
pushf
cmpsl
sub
inc
xchg
call
xchg
rorl
or
add
inc
add
repnz
and
xor
pop
xor
push
cwtl
push
xchg
xchg
pushf
mov
enter
mov
or
adc
les
in
loop
mov
addb
scas
icebp
in
add
cltd
or
dec
fdivrl
test
enter
inc
push
scas
les
in
pop
fs
sub
nop
lods
adc
adc
imul
setne
xor
add
mov
add
push
xchg
ret
bound
loop
lahf
pop
cmp
xor
cmp
fdivs
adc
in
pop
rsm
or
inc
mov
gs
pusha
outsb
mov
push
dec
adc
add
or
inc
mov
push
sub
push
dec
rcrl
outsb
xorl
shll
inc
inc
xchg
pusha
into
jne
push
sbb
call
sbb
movsl
enter
aad
inc
cmpl
out
dec
jb
mov
inc
and
sbb
lock
push
add
and
push
inc
xchg
dec
xchg
out
and
int3
or
jb
ret
xchg
adc
jb
or
jns
xlat
movb
fildl
les
xor
inc
xor
and
xchg
lahf
push
aas
inc
or
por
dec
rorb
inc
mov
lea
sub
or
movsl
pop
aaa
bound
int3
fimull
inc
mov
push
push
sysret
and
adc
cwtl
inc
mov
mov
test
test
cmc
sbb
pop
test
out
push
xor
push
add
cltd
push
and
cmove
or
push
popl
adc
xchg
jle
je
mov
mov
loopne
push
pop
xchg
lods
add
adc
and
enter
adc
cmp
mov
fimull
je
lahf
fidivs
popf
nop
in
ja
inc
and
sahf
and
add
gs
cmp
fisubl
ret
nop
aam
cwtl
addb
cmp
and
dec
pop
push
push
push
aaa
push
sub
mov
ret
fidivrl
mov
inc
adc
ret
movsb
push
cmp
orl
into
inc
cld
xchg
dec
mov
test
outsb
push
inc
xchg
bnd
ljmp
les
adc
scas
fs
sarb
push
mov
or
sbb
je
mov
jo
mov
add
mov
xchg
cmp
addr16
mov
sbb
inc
xchg
push
clc
dec
fbstp
mov
and
aad
push
cltd
das
sub
cli
and
nop
xor
xchg
pop
add
out
aam
adc
add
and
dec
and
mov
push
sbb
imul
push
xor
or
mov
mov
xchg
decb
sar
lock
or
int3
outsl
mov
jbe
and
mov
push
sub
rcl
icebp
imul
xor
push
lea
cmp
jg
dec
mov
outsb
clc
lret
mov
or
addl
xor
mov
imul
dec
xor
lcall
add
enter
sti
sub
inc
push
rcrb
subl
imul
sbb
add
sti
pop
push
xchg
push
dec
jo
lret
bound
pop
fadds
enter
bound
or
rorb
xchg
xor
or
testl
and
bound
movlps
pop
mov
and
mov
into
in
adc
mov
xor
jne
push
andl
into
dec
or
pusha
ret
dec
jo
mov
bound
fsubr
mov
mov
adc
pop
cmp
gs
inc
loopne
mov
movsl
andl
call
xorl
outsb
xchg
xor
adcl
xchg
inc
jo
ret
fs
lret
push
pop
stc
popa
movb
jg
roll
xor
aaa
jne
ljmp
and
pop
adc
fcoms
mov
subb
adc
adc
add
andb
rclb
out
imul
stos
cli
xchg
ret
push
aam
cmp
push
andnps
adc
xlat
pop
jo
test
sub
sub
mov
mov
popf
out
xchg
fcoms
and
push
adc
or
repnz
push
lea
sbb
es
push
inc
jns
jmp
test
and
pop
mov
push
punpckhdq
call
idiv
mov
ja
iret
xchg
cmp
add
sarl
fildl
sti
pop
sti
push
jmp
frstor
nop
cmpsb
xchg
fsubr
sub
sbb
push
jnp
test
mov
pop
jne
mov
push
sub
nop
adc
mov
or
and
daa
call
mov
jne
jp
adc
push
sbb
stos
pop
xchg
nop
call
mov
andb
ret
sbbb
push
mov
dec
push
aam
adc
or
pop
and
push
pushf
andb
inc
inc
add
aaa
adc
enter
push
mov
call
push
xor
in
push
int3
adcb
mov
jne
mov
cli
or
pushf
stc
sbb
dec
ret
rcrb
adc
stc
iret
mov
je
fstps
jns
push
imul
sub
adc
push
jnp
jp
scas
mov
cmp
xchg
fs
enter
jmp
pusha
mov
mov
cmp
jmp
shrb
add
sahf
sbb
push
and
addl
push
or
mov
jg
daa
xchg
shll
mov
fldenv
cmp
pop
bound
pop
xor
and
pop
out
lods
push
arpl
movb
ss
push
xchg
fistpll
jmp
pop
xor
addl
push
imul
mov
test
leave
dec
jp
sub
push
cmc
loope
or
mov
jmp
nop
push
jne
mov
sbb
movb
int
jecxz
adc
adc
sub
pop
adc
jmp
push
adc
fs
in
mov
pop
xor
call
jae
dec
mov
xor
mov
add
cs
mov
mov
sub
xlat
je
ljmp
xchg
test
movl
and
js
xchg
std
pushf
xor
add
or
add
and
loop
popf
mov
ds
jns
fs
loopne
sbb
xchg
in
into
mov
pop
push
pop
mov
aam
iret
add
lods
orb
lret
jns
shlb
out
leave
or
sub
dec
js
arpl
cmp
jb
adc
jle
dec
int3
xchg
fwait
or
mov
and
adc
je
inc
mov
enter
call
adc
adc
xchg
adc
jmp
into
cmpsb
lea
and
repnz
mov
cmp
movsl
nop
or
ret
sbbl
add
test
or
call
mov
dec
in
and
andl
mov
adc
sub
movsb
xor
jg
or
repnz
add
adc
mov
call
mov
cmp
jne
sub
fs
or
movsb
push
push
push
out
xchg
mov
stos
lahf
adc
lock
cmp
int3
mov
fldl2e
adc
mov
fninit
std
ds
ret
pop
repz
mov
rclb
sub
fisttps
xchg
out
xor
jmp
imul
push
rclb
sarb
cmpsl
call
fcompl
cltd
push
cmpsl
push
inc
add
call
stos
inc
mov
mov
adc
xchg
sub
loop
pop
out
mov
sbb
hlt
adc
fsub
inc
fstpl
and
out
mov
mov
shlb
and
jo
pop
inc
xchg
inc
enter
ss
popf
inc
dec
fs
or
dec
xchg
mov
pusha
addb
les
push
or
or
aad
pushf
sub
adc
mov
bound
sbb
sub
add
loop
fadds
dec
cmp
cmp
push
bndstx
pop
mov
pusha
jb
test
pop
mov
push
clc
inc
lock
scas
pop
xchg
ret
dec
in
mov
or
int3
add
jmp
or
add
or
les
ja
inc
out
inc
add
jg
dec
aas
push
cmp
or
push
add
adc
js
inc
jmp
dec
fs
inc
int3
jne
xchg
sub
and
dec
dec
xchg
push
and
gs
mov
dec
and
jne
insb
cltd
xchg
xor
aaa
inc
inc
sbb
fs
mov
fdivs
mov
inc
and
jmp
ljmp
lock
js
sbb
push
push
lcall
push
fcompl
rcrb
test
mov
pop
arpl
ljmp
out
icebp
cmp
add
inc
pusha
xchg
gs
popf
cmp
es
mov
mov
and
sbb
cmpsb
push
cld
outsl
mov
jg
bound
cli
and
stos
pop
sub
push
shl
outsl
mov
test
and
pop
or
gs
mov
or
inc
mov
push
or
adc
adc
call
mov
adc
cmp
pushf
and
hlt
stc
rcrl
inc
sbb
out
int3
push
mov
jecxz
shr
aad
test
cltd
jne
mov
ret
bound
loope
cltd
mov
inc
jl
adc
scas
mov
push
test
push
mov
leave
adc
push
pop
sbb
cmp
loop
push
or
lods
daa
adc
cmpsb
pop
int3
jg
push
push
mov
popa
adc
cmp
dec
loope
repnz
mov
lods
or
out
jb
cmp
xlat
jo
mov
in
dec
loop
mov
jecxz
cmp
add
xchg
xor
xchg
std
jg
mov
repnz
bound
sub
or
and
xchg
js
loop
mov
inc
dec
push
jp
nop
pushl
mov
cld
lahf
push
xchg
inc
adc
les
cld
fstl
roll
cmp
sbb
push
mov
in
or
popf
in
shl
cld
mov
ja
repnz
and
aad
fsubrs
inc
pop
loop
pop
data16
or
mov
add
jmp
add
test
pop
mov
test
add
cmc
insb
std
daa
inc
test
pop
jecxz
in
push
aam
add
inc
push
adc
std
icebp
lods
out
adc
dec
inc
sub
xor
and
jae
icebp
cwtl
sbb
cmp
mov
or
dec
dec
inc
adc
sbb
sbb
loopne
add
ret
movb
and
add
push
call
mov
int
dec
xchg
or
inc
sub
mov
call
loopne
js
in
or
cltd
inc
and
xlat
pop
adc
call
cwtl
xor
pop
adc
out
mov
pop
sti
bound
adc
lea
push
mov
adc
cmpsl
and
test
or
adc
mov
push
mulb
push
pop
adc
call
fsts
cli
mov
push
sub
iret
imul
pop
in
xchg
mov
adc
pop
add
push
add
inc
xor
and
cli
call
enter
add
cmpl
sub
call
loope
test
push
repnz
mov
daa
incb
dec
jne
jo
inc
and
lds
clc
das
sub
adc
popf
ljmp
sbb
test
pop
adc
dec
jmp
jg
mov
xchg
repnz
and
in
scas
pop
jmp
shr
mov
xchg
lock
inc
jl
fs
lea
test
enter
flds
and
sub
and
daa
xchg
ss
pop
sbb
sbb
or
bound
xor
pop
xchg
dec
bnd
pop
imul
movsb
popf
and
dec
lret
xchg
inc
adc
mov
pop
orw
mov
syscall
add
pop
jg
jle
jle
jge
adc
or
or
fnsave
ret
pusha
and
add
mov
call
dec
out
push
xchg
inc
dec
pop
daa
pop
in
inc
in
roll
push
lock
and
inc
leave
aad
rcll
scas
sbb
in
xchg
icebp
or
jl
and
scas
addr16
bound
xor
inc
movsl
testb
iret
xor
popl
cmp
stos
xchg
cli
popf
shlb
jo
lcall
inc
sarb
call
mov
call
jg
pop
jp
add
push
or
mov
dec
xor
push
and
add
pop
push
dec
dec
push
dec
inc
dec
push
adc
jl
out
or
lds
rorb
fidivrs
push
and
xor
sub
or
or
xor
je
lahf
call
adc
mov
cmp
clc
adc
pop
sti
enter
or
movb
insb
lahf
clc
mov
out
cmpb
add
cmp
jne
and
jmp
jb
loope
mov
inc
aaa
xchg
and
or
adc
pusha
mov
call
push
test
push
and
arpl
sub
mov
shrl
ja
sub
xchg
sbb
rcl
movsl
or
pop
adc
mov
jnp
aaa
dec
cli
pop
cmpsb
pusha
xchg
add
popf
imul
sarl
xor
vpunpckhbw
cmpsb
in
popf
mov
popf
lods
ja
cld
xlat
ret
sbb
xlat
sub
testb
pop
inc
inc
sub
jmp
push
sbb
inc
adc
dec
jecxz
dec
sbb
mov
daa
pop
adc
loopne
call
or
call
mov
fcompl
and
inc
ja
fdivl
mov
jl
mov
or
inc
mov
lock
mov
call
imul
addr16
fwait
out
dec
jo
cmp
cli
push
push
mov
mov
icebp
loope
mov
lahf
adc
subl
add
xor
dec
out
inc
mov
rcrb
or
mov
cli
jo
mov
pop
mov
test
and
add
push
mov
adc
cmp
push
pop
push
test
lret
dec
cmp
fs
xor
push
imul
out
sub
movsl
mov
inc
ss
mov
sub
push
insl
ret
bound
push
cwtl
xor
outsb
stos
or
adc
scas
addr16
leave
and
clc
jmp
dec
in
in
push
xor
and
adc
mov
or
into
xchg
ss
cmp
icebp
cltd
sbb
insb
adc
xor
les
int3
and
push
jg
cmp
push
gs
pop
cmp
or
test
in
movsb
cld
inc
enter
jmp
or
pusha
adc
mov
sub
push
das
push
inc
fadds
mov
and
mov
mov
cld
mov
inc
push
in
das
les
les
cmp
push
push
shl
mov
ret
sbb
push
adc
inc
js
sbb
inc
out
jecxz
and
jo
push
test
pop
and
test
adc
sub
adc
xor
or
leave
sbb
adc
inc
loope
add
out
sbb
inc
pop
xlat
adc
cmc
adc
and
loop
lock
das
hlt
out
jge
int3
inc
adc
inc
push
int3
inc
xor
dec
push
push
xlat
mov
fs
pop
adc
int
insb
sbb
inc
lock
lock
xor
mov
mov
test
inc
inc
lods
add
add
iret
xchg
in
shl
push
loopne
pop
adc
out
jp
mov
nop
adc
inc
mov
lret
imul
push
insl
bound
lods
lcall
push
fs
mov
sub
sub
mov
xorb
fs
dec
inc
pop
jne
loope
cltd
adc
outsl
sti
out
out
push
arpl
push
clc
mov
gs
gs
mov
jae
sbb
xchg
pop
sbb
les
in
sub
repnz
mov
imul
ss
or
lcall
add
jecxz
ror
and
or
or
and
or
mov
xor
adc
and
add
pop
or
aad
movsl
mov
dec
int3
adc
sub
dec
mov
cmp
les
cmpsl
push
add
jg
clc
adc
add
repz
mov
sub
xchg
jo
adc
adc
jno
jg
test
fs
mov
push
push
mov
cli
lods
cltd
in
add
dec
lods
test
leave
cmp
and
push
jmp
dec
jne
loopne
and
enter
adc
add
les
sub
xchg
loopne
or
shrb
push
outsl
or
mulb
push
push
je
xchg
mov
pop
pop
jnp
and
jbe
pop
or
add
sbb
testl
add
test
fs
icebp
pcmpgtb
mov
and
push
mov
in
pop
add
add
dec
xchg
pop
push
push
nop
xor
cmc
cltd
push
adc
mov
push
dec
jge
jae
lds
bound
mov
jbe
and
in
or
inc
call
int
adc
sti
push
call
filds
jp
movsl
or
int3
cmpsl
mov
push
adc
mov
sub
sbb
fists
cmpsl
and
and
cs
xor
dec
mov
push
pop
cmpsl
mov
push
cmpsl
cld
rorb
add
push
flds
dec
jge
sbb
enter
or
cmp
push
push
sub
negl
mov
and
dec
std
ja
cmp
fcmovnb
outsb
xor
add
push
scas
mov
cmp
and
test
shrb
xor
cmp
push
test
push
orb
cld
or
cmpsb
lds
or
ds
or
arpl
jne
jne
xchg
adc
mov
dec
inc
dec
sti
dec
test
cld
imulb
sbb
mov
or
mov
mov
jae
jp
mov
add
push
ss
xchg
dec
cs
push
inc
cmp
fwait
inc
adc
jo
pop
xchg
in
sub
js
add
js
and
push
push
and
mov
or
mov
cli
and
dec
pop
push
or
inc
fiaddl
sbb
xchg
mov
in
aad
mov
xchg
cli
xchg
push
mov
push
jo
xchg
mov
jp
popa
jbe
sti
mov
adc
jp
push
repnz
pop
push
lods
sti
pushf
push
cmp
sbb
jp
push
and
adc
inc
inc
out
sahf
js
sbb
jns
mov
das
inc
jle
jge
push
pop
lret
repz
push
cmpsl
lret
movsb
add
add
or
xchg
add
pushf
pop
sbb
pop
or
or
cmpsl
or
and
xor
or
mov
sbb
cmp
cmp
cmp
xchg
fdivrp
movsl
fists
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
das
mov
dec
lret
or
xchg
sbb
mov
or
push
add
cmp
test
lea
xor
and
inc
pop
xor
or
sbb
or
and
js
nop
and
fs
pusha
dec
lods
dec
or
xchg
mov
les
cmp
jo
sbb
dec
mov
adc
dec
test
pop
mov
je
xchg
cltd
or
movsb
mov
mov
cmp
sbb
sbb
inc
xor
inc
pop
adc
mov
mov
mov
mov
or
or
or
dec
fwait
inc
and
addr16
mov
xor
lahf
or
imul
mov
pop
shld
incl
lret
or
rcll
std
cli
in
or
aam
add
lret
sbbl
dec
add
int
add
dec
and
ss
add
dec
jmp
and
sbb
add
popf
imul
jo
lea
pop
call
popa
mov
pop
dec
aad
ljmp
add
andl
xchg
push
nop
inc
leave
or
sbb
into
fs
mov
test
rorl
clc
inc
icebp
mov
cmp
cmp
and
xor
inc
stos
adc
push
cmp
and
icebp
adc
clc
sub
add
dec
clc
mov
or
das
or
jo
popf
cmc
sub
push
xor
adc
xor
or
push
push
inc
subl
push
inc
cmpsb
jb
rcpps
je
addl
xchg
inc
push
jns
push
andl
arpl
xor
lods
pop
jecxz
sub
or
and
sub
aam
push
fsubl
nop
adc
push
mov
inc
jp
jne
ficompl
or
push
bound
xchg
mov
jle
dec
or
push
popa
iret
nop
adc
dec
scas
xchg
and
nop
pop
inc
dec
or
jne
idivb
dec
push
or
xchg
adc
dec
push
and
fisubs
sub
jae
adc
imul
imul
insb
pop
push
mov
setge
adc
clc
push
push
dec
xchg
push
stos
mov
cmpb
xchg
stos
pusha
or
or
xchg
movsb
and
sub
add
into
mov
or
ja
pop
mov
cld
cli
pop
mov
arpl
shlb
mov
adc
into
or
pusha
movups
dec
or
test
je
cmp
sub
rcrb
ret
loop
test
add
add
adc
cmp
push
test
add
cmp
and
xchg
jnp
aaa
mov
lret
mov
addl
repz
adc
sbb
and
sbb
sbb
dec
and
push
and
iret
das
fmull
mov
add
push
cvttps2pi
xor
xor
cmp
cmp
bound
sbb
daa
pop
in
dec
push
daa
push
ret
out
out
out
out
in
loopne
std
cld
mov
cld
mov
xchg
stc
addl
mov
mov
mov
mov
lods
xchg
mov
and
add
subl
dec
clc
mov
adc
push
xor
xchg
push
xchg
je
mov
or
or
sbb
dec
or
inc
mov
int3
adc
or
sbbl
nop
mov
andl
mov
insb
lcall
test
mov
or
xchg
hlt
and
loopne
inc
cmpb
push
int
mov
icebp
popf
add
and
dec
hlt
sub
inc
sahf
sub
lahf
cltd
or
mov
mov
pusha
movsb
fsts
imul
mov
in
mov
cld
cmpsb
and
mov
mov
and
sub
enter
pop
adc
outsb
xor
cmp
nop
shll
sbb
nop
leave
xchg
jo
xchg
dec
cwtl
pop
icebp
sub
lods
nop
shll
js
mov
sbb
test
call
cmpsl
adc
lds
insb
adc
push
lea
sbb
or
outsl
sbb
jg
adc
test
mov
rcl
mov
shl
mov
adc
and
jo
loope
or
xor
inc
dec
or
int3
mov
pop
add
cld
mov
fadd
cwtl
pop
or
adc
std
xor
shll
and
inc
pushl
mov
clc
fcomp
or
xchg
or
cmp
loope
mov
clc
mov
adc
mov
or
rorb
push
adc
pop
add
int3
or
sub
in
xchg
popf
hlt
jns
or
adc
jmp
dec
or
cmp
andl
mov
pop
mov
mov
out
loope
adc
adc
ret
xchg
mov
dec
or
lea
adc
sbb
and
fdivrs
int
xchg
adc
mov
hlt
decb
sub
aam
fimull
in
push
and
dec
gs
insl
and
xchg
mov
push
xor
adc
rclb
adc
lret
dec
adc
or
js
andb
mov
enter
pop
fcomip
lret
cmp
adc
mov
or
rorb
sbb
or
out
push
push
popf
sbb
stos
and
push
jmp
pop
mov
mov
cwtl
lea
or
jb
dec
nop
xchg
xor
push
cmpsb
mov
jp
dec
cld
movsb
inc
call
in
lock
or
inc
je
push
movsb
adc
clc
jnp
prefetch
inc
movsl
clc
jl
add
pop
clc
pop
push
inc
sbb
loope
cltd
jne
push
adc
notl
or
movsb
mov
lods
cmp
and
je
xchg
rclb
adc
cmp
jne
mov
cmp
pop
lods
loopne
xor
mul
das
push
lcall
out
addr16
xchg
jno
mov
push
aaa
cli
xor
xor
cmp
push
and
hlt
lock
sbb
lods
daa
test
pop
mov
push
mov
sbb
and
push
push
popf
pop
aam
push
call
negb
nop
pop
out
cmp
jb
lcall
out
push
ja
int3
inc
push
jae
dec
adc
dec
inc
gs
insl
jne
rclb
jnp
lret
dec
inc
addr16
or
stc
orb
mov
into
push
enter
push
inc
dec
xchg
ret
mov
test
test
cmpsl
cmc
dec
lods
cli
or
popa
mov
push
xor
test
mov
jo
push
or
imul
out
push
into
push
inc
mov
imul
jo
lods
mov
jge
pop
xchg
jecxz
pop
push
xor
push
adc
adc
adc
call
adc
pusha
mov
mov
dec
mov
std
pop
fnstenv
push
jmp
inc
and
call
shlb
test
mov
sbb
imul
jle
outsb
push
sub
add
cmpl
adc
xor
mov
call
sub
mov
rep
and
mov
jbe
mov
dec
fcoms
rclb
push
mov
loope
adc
cmp
pop
cmp
adc
push
lock
inc
mov
aam
xlat
shlb
in
inc
jbe
cmpb
add
inc
sub
lods
or
adc
jl
mov
repnz
adc
dec
jp
jae
mov
pop
mov
pop
dec
pop
ljmp
jecxz
adc
cld
fcoml
and
pop
push
jbe
adc
movsl
xor
rep
ja
sbb
cmc
lret
jle
cmp
mov
popa
push
xchg
cs
je
jmp
or
pop
jne
sbb
daa
inc
push
mov
dec
xor
sub
clc
pushf
fdivs
jmp
adc
dec
dec
jne
cld
mov
cmp
cmp
addb
jae
daa
es
inc
cmc
sub
xchg
lcall
jne
nop
push
or
jo
xchg
sub
das
add
or
nop
push
pop
gs
mov
or
out
adc
jo
adc
add
push
jo
and
add
jo
sub
add
je
sarl
loopne
xchg
lahf
fdivrs
dec
add
lahf
inc
fwait
popf
pop
sbb
add
daa
pop
pop
shll
das
adc
ret
test
xchg
fstpl
std
push
movsb
scas
stc
adc
and
cmpl
ja
pop
sbb
inc
ds
mov
test
inc
adc
mov
xchg
movsl
divl
cmp
mov
adc
add
mov
add
adc
mov
adc
call
push
mov
adc
or
idiv
sbb
or
push
movl
adc
xchg
arpl
jmp
jmp
cmpl
sub
mov
mov
dec
jle
aam
out
int
cmp
aad
mov
push
xor
repz
repz
sub
xor
cli
and
inc
les
into
les
jg
cltd
or
push
dec
hlt
data16
and
push
add
pop
jl
jl
lahf
addr16
mov
or
adc
inc
adc
iret
push
loope
cmp
xchg
push
scas
fsubrs
push
or
fldl
fwait
pop
jp
lods
movsb
scas
mov
inc
andb
nop
dec
fbld
jo
sbb
inc
or
iret
push
jbe
inc
and
repz
jle
rolb
inc
push
xchg
or
inc
cmpsl
and
arpl
cli
je
and
shrb
mov
call
pusha
mov
and
mov
push
push
and
inc
aaa
hlt
jmp
jno
and
fadds
inc
mov
adc
dec
and
xchg
xor
repz
call
cmp
clc
jmp
mov
out
pop
push
adc
cwtl
mov
mov
xor
and
sbb
push
sbb
mov
jbe
pop
mov
sbb
push
lea
aaa
jnp
movsl
add
pop
sbb
mov
inc
mov
jae
push
cmp
add
mov
in
push
cld
mov
and
or
bnd
add
xlat
xor
pop
or
or
ret
loopne
or
sub
fmuls
and
dec
shlb
or
adc
mov
add
mov
mov
mov
hlt
daa
cmp
mov
pop
loope
or
fiaddl
dec
loop
inc
aam
mov
mov
fs
pop
jne
loopne
cmp
lahf
fcompl
xchg
inc
out
shlb
decb
mov
add
adc
push
or
jmp
add
cmp
jo
movb
adc
jmp
xlat
xor
or
pop
mov
lcall
fsubs
std
rorl
and
sub
mov
push
rolb
xchg
fidivrs
cmc
xchg
xor
or
and
inc
xor
das
adc
aas
enter
mov
and
out
ret
sub
mov
cmp
pop
and
inc
mov
sbb
pop
pop
xor
inc
mov
sub
jecxz
or
std
mov
dec
ljmp
mov
test
mov
aaa
lea
push
sub
jecxz
dec
andb
push
cmpsb
fidivrl
aam
fcmovnb
cs
adc
dec
fldl
push
push
and
mov
sbb
cmpl
sbb
cmp
addb
clc
mov
arpl
ret
ss
stos
fmull
dec
mov
adc
repnz
cwtl
inc
jmp
je
inc
and
lods
xchg
push
mov
data16
mov
and
fadds
loop
test
fiadds
adc
add
sub
add
call
dec
test
shrb
xor
xorb
pop
dec
das
lcall
inc
jl
test
push
test
dec
pop
ljmp
aad
incb
dec
sub
out
sbb
std
dec
mov
push
pop
adc
jne
and
xor
cs
in
jbe
dec
jle
and
das
cmp
push
xchg
adc
xchg
arpl
sbb
in
and
imull
inc
or
or
jb
les
dec
jne
cmpl
jle
dec
sbb
jge
sbb
mov
inc
push
mov
and
and
dec
pushf
dec
jne
adc
add
push
mov
add
adc
pop
pop
adc
inc
mov
popa
xor
dec
adc
mov
shll
rcrl
int3
sub
repnz
addl
sbb
xor
or
add
cmpb
xchg
rorl
push
das
mov
das
mov
pop
mov
stos
call
test
mov
inc
and
jae
xchg
cwtl
test
mov
sub
adc
adc
or
jmp
and
popf
sub
push
jo
xor
out
aaa
je
cs
mov
xchg
loopne
fsubrs
mov
leave
shlw
leave
pop
mov
shlb
push
std
scas
insl
mov
mov
call
fsubr
sbb
push
jle
sub
inc
or
mov
xchg
sbb
xor
jb
in
and
push
mov
or
std
push
push
lcall
sub
addr16
jo
or
cmpsl
xchg
mov
js
or
in
sar
clc
testb
dec
sbb
mov
sbb
jnp
cmp
je
mov
or
rorl
call
call
clc
adc
xchg
jg
jmp
incb
add
repz
mov
les
loop
test
dec
pop
xor
add
sbb
add
adc
add
dec
push
push
push
test
push
xchg
push
mov
mov
stos
dec
cmc
or
inc
and
mov
mov
fwait
inc
jne
push
movb
or
jmp
lcall
sub
decb
dec
mov
gs
int3
xor
and
mov
mov
in
push
or
push
push
add
or
test
cmp
mov
arpl
js
xorl
lret
cli
xlat
xchg
jecxz
add
dec
sbb
enter
push
adc
das
sbb
add
mov
call
sbb
xchg
and
lock
push
adc
sub
push
and
ljmp
fwait
jne
inc
inc
call
inc
inc
and
mov
cltd
lcall
inc
mov
mov
mov
testb
gs
inc
dec
or
dec
int
test
and
test
or
xchg
test
out
fcoms
jmp
jne
lea
pop
and
push
lock
or
or
inc
push
jmp
and
sbb
daa
xchg
andl
sbb
icebp
out
mov
pop
pop
mov
pop
and
imul
or
pop
and
sbb
mov
sub
sbb
notl
pop
push
daa
inc
adc
adcb
jmp
inc
mov
popf
cmp
fcomi
jg
cmp
test
dec
adc
lea
js
jecxz
sub
test
pop
jle
sbb
adc
ljmp
dec
aad
loop
fdivrp
fstpl
fwait
jmp
mov
mov
lock
add
lret
jle
jecxz
icebp
jns
in
cli
dec
ss
xchg
mov
aaa
pop
inc
sub
rorb
loope
adc
jmp
jmp
sbb
enter
add
pop
xor
and
movsb
inc
test
lahf
or
push
adc
cmpsb
jmp
pop
sub
mov
push
gs
pop
xchg
push
pop
loopne
fs
icebp
jno
and
mov
inc
mov
xor
inc
cmpb
push
into
mov
insl
adc
inc
jne
push
lock
pop
leave
mov
daa
adc
mov
mov
add
or
sbb
add
sbb
sbb
out
inc
or
imul
adc
int3
sbb
sub
arpl
call
jg
inc
jmp
xor
jle
test
scas
ss
xor
sub
add
es
popl
lea
dec
jmp
cli
xchg
mov
push
jnp
jp
lds
push
in
dec
sub
mov
mov
adc
and
jbe
jg
fcompl
out
add
sub
xchg
cmpsb
pop
pop
jb
sbbl
mov
jmp
or
call
xchg
add
leave
and
ljmp
mov
call
jne
mov
push
loop
stos
push
roll
sub
repnz
dec
or
scas
sub
add
adc
mov
hlt
push
mov
cwtl
jo
xchg
xchg
add
std
cmpsl
cld
adc
dec
xchg
or
dec
pop
data16
sbb
inc
mov
mov
mov
push
sbb
pop
cmp
mov
out
add
shlb
mov
mov
bound
loopne
inc
dec
insb
sub
sub
dec
adc
dec
rdmsr
pop
adc
add
push
mulb
or
adc
jmp
adc
or
adc
sahf
push
fsts
jge
push
pushf
jnp
cmp
push
push
adc
or
push
aam
mov
mov
inc
mov
sbb
ret
xchg
test
sti
and
adc
cmp
cmp
rolb
mov
push
adc
call
jmp
stc
push
or
out
in
pushf
sub
icebp
inc
jae
adc
inc
sub
mov
mov
sub
and
push
or
dec
lret
push
adc
rclb
add
repnz
inc
or
sub
sbb
jle
scas
cmp
nop
mov
or
mov
sahf
test
push
cli
and
mov
cmp
jno
and
mulb
mov
push
pop
inc
fwait
sbb
xchg
jle
mov
sub
pusha
mov
push
adc
mov
push
test
je
xchg
mov
bound
in
push
fwait
xor
cmpsl
dec
shrl
sbb
push
xchg
loope
push
and
jo
dec
out
jecxz
dec
mov
out
je
jmp
aam
xchg
push
mov
lock
mov
in
je,pt
pushf
cmc
push
add
add
lds
jnp
sbb
sbb
push
mov
movsl
dec
fld
pop
daa
pop
pop
push
js
cmpl
push
das
cmp
int
orb
mov
adc
icebp
rol
call
out
jge
sbb
pop
shrl
xchg
sub
inc
pop
ret
push
adc
pop
ja
les
cmp
pop
ja
insb
popa
lock
cld
pop
gs
add
sub
in
dec
movsb
add
mov
cmp
imul
pop
adc
sbb
push
lahf
mov
push
aas
ds
dec
push
or
inc
xchg
mulb
dec
andb
lods
aam
mov
repz
rclb
lahf
jb
arpl
lahf
cmp
out
lahf
pop
lock
and
push
sub
jne
or
adc
or
dec
stos
loope
fisubrs
inc
pcmpeqw
xor
decb
mov
sub
and
mov
sub
cmp
adc
adc
cmpsl
mov
scas
mov
pop
or
and
inc
push
pop
andl
sub
pusha
cmpl
sub
xchg
push
nop
mov
push
rclb
cmc
jg
or
jne
lcall
mov
pop
pop
adc
loop
pop
xchg
addl
test
aam
je
daa
enter
stos
inc
shll
inc
adc
or
shr
adc
push
xlat
xchg
xor
cmp
sbb
mov
aad
cmp
adc
jb
dec
or
sbb
orl
ret
js
fmull
std
jb
xchg
pop
sbb
aas
lcall
or
stos
cld
mov
adc
and
and
fcomps
or
cmp
adc
cs
jge
jb
xchg
je
and
push
mov
adcl
or
stc
dec
mov
push
pop
pop
jmp
cmp
shll
push
or
adc
push
sahf
push
aas
aaa
ret
and
push
andps
testl
jbe
aam
pop
jnp
test
sbb
xor
pop
cmpsl
mov
push
add
inc
mov
sbb
sti
sub
sub
les
adc
and
cmpsl
negl
std
insl
and
cmpsl
les
pop
sbb
jbe
lret
cmpsl
sub
mov
adc
addb
cmp
hlt
dec
in
xchg
or
or
pop
mov
das
mov
and
pop
call
jge
ja
mov
addl
push
lock
popf
adc
cmp
mov
std
adc
test
inc
or
push
push
enter
and
or
loope
mov
pop
add
leave
sub
ficompl
ficoml
pop
push
push
stc
mov
movsb
decl
fs
sub
inc
xchg
pop
jle
push
push
xchg
inc
decb
mov
or
mov
daa
pop
fisubs
lds
and
cmc
stc
mov
iret
push
add
adcb
push
nop
xor
es
sub
jl
sub
cmovb
aas
test
cmp
sub
sbb
adc
and
dec
adc
cmp
cmc
sahf
mov
outsb
adc
adc
mov
adcb
inc
inc
pushf
pop
popf
std
xchg
mov
not
pop
push
call
push
sarl
decl
jmp
mov
cmp
jge
lds
stos
fs
sub
lods
cmp
xrstor
push
lods
inc
inc
or
sbb
and
pop
fsts
push
ret
imul
sbb
xchg
jne
aaa
push
mov
push
js
xchg
and
sbb
mov
cmp
bound
mov
adc
sar
hlt
lods
or
and
and
inc
out
mov
in
push
and
push
inc
mov
mov
push
cmpsb
das
inc
in
adc
lahf
push
adc
lods
test
push
dec
jp
ds
adc
inc
mov
arpl
or
and
sbb
xchg
sub
inc
inc
push
add
inc
pop
pop
mov
sbbl
or
popa
dec
jp
decl
jmp
mov
jnp
push
movb
add
call
dec
mov
xlat
call
xchg
xchg
cltd
aas
add
inc
sbb
jne
jmp
push
ljmp
aam
sub
fnstsw
mov
push
push
and
and
or
mov
add
sbb
push
fs
das
push
outsb
loope
test
bound
add
leave
aad
mov
pop
orl
adc
lahf
gs
sub
pop
ljmp
push
out
call
fcomi
dec
add
mov
add
push
mov
sbb
lds
das
mov
push
call
adc
int
pop
dec
and
jl
push
cmp
scas
or
xor
xor
jb
dec
insb
mov
adc
dec
sbb
mov
or
push
pop
in
pushf
pop
xlat
dec
sbb
mov
or
addl
jmp
das
dec
ss
jl
stos
dec
std
adc
push
inc
add
rclb
push
pop
fldl
adc
loope
pop
add
inc
shll
test
push
sub
mov
jo
mov
gs
mov
xor
sbb
mov
mov
scas
jae
cld
xchg
pushf
clc
cmp
cltd
xchg
xchg
or
pushf
adc
enter
mov
sahf
xorl
arpl
fs
push
stos
inc
push
or
sbb
or
cmove
popa
lcall
xor
cmp
lcall
jo
or
jmp
dec
in
pop
lods
sub
and
jle
push
or
lret
adc
cmp
clc
jne
push
push
addr16
sub
cmp
jg
aad
jge
dec
lock
les
daa
cmp
and
mov
push
push
push
push
arpl
jne
or
jg
xlat
pop
mov
mov
nop
clc
dec
sub
adc
xchg
rolb
std
ss
xor
xchg
sub
inc
and
jmp
sbb
dec
push
enter
fiadds
or
jge
add
leave
pop
ret
adc
and
pop
out
sub
lea
lcall
and
fwait
jb
das
inc
xor
jnp
jmp
rsm
or
inc
dec
cld
aam
out
adc
cmp
push
push
push
dec
inc
push
mov
dec
testb
push
inc
incl
xor
mov
addr16
or
sbb
sub
aad
mov
or
iret
cmpl
cmpb
mov
add
hlt
test
mov
cmp
mov
nop
shrb
or
xchg
xor
or
test
xor
or
scas
mov
inc
dec
xor
push
inc
lcall
adc
xor
and
jae
inc
pop
xor
dec
push
fdivr
xchg
imul
sahf
adc
add
cmp
mov
xchg
inc
jmp
inc
sti
mov
mov
xchg
adc
inc
xor
lcall
adc
sub
sbb
or
dec
sbb
cwtl
arpl
dec
leave
mov
adc
sbb
cmp
inc
push
inc
mov
push
push
xchg
dec
es
dec
loop
popf
and
or
icebp
lea
ds
cmp
inc
call
adc
pop
pop
adc
push
es
mov
out
std
adc
sbb
insl
xor
adc
or
inc
les
dec
push
xchg
dec
xchg
cmpsl
aas
aaa
or
adc
inc
mov
icebp
mov
std
clc
and
dec
nop
xchg
aad
xor
pop
lds
cmp
test
push
nop
and
inc
mov
inc
inc
cmc
xchg
sti
ret
jmp
jmp
mulb
in
push
mov
push
outsb
cld
xor
jne
sub
adc
sub
adc
cwtl
and
jns
je
add
imul
into
push
xchg
imul
and
inc
movsl
pop
sti
outsl
mov
pop
jno
mov
mov
inc
or
dec
out
or
cmpl
or
enter
or
adc
loop
leave
sub
jp
icebp
jo
push
add
lds
int
xchg
cmp
pusha
leave
xchg
rorl
dec
inc
inc
and
inc
stos
inc
fs
pop
fsubrs
mov
mov
sbb
inc
add
lods
stos
or
fwait
inc
sub
sub
mov
enter
xchg
xchg
mov
movsl
fnsave
bound
adc
pop
in
dec
push
dec
fnstenv
out
dec
cmp
lods
inc
pop
xor
test
test
mov
inc
mov
fsubs
ja
and
jp
add
es
je
mov
push
or
or
popf
dec
xor
jo
mov
shlb
rorb
jle
fimuls
inc
in
adc
mov
add
xchg
ret
push
adc
scas
or
dec
mov
cld
xchg
test
scas
test
mov
bound
inc
cwtl
pop
jne
aaa
mov
and
movsb
dec
add
cmp
jne
mov
jl
xor
lret
mov
ret
scas
adc
push
or
xchg
hlt
daa
aaa
mov
sarl
mov
mov
aad
lock
test
into
add
enter
push
jo
imul
mov
mov
inc
scas
or
aas
jbe
jmp
mov
adc
fs
push
and
adc
jmp
pop
or
cmpsb
icebp
cmp
xor
sbb
mulb
dec
or
sbb
mov
repz
leave
loop
jbe
mov
add
test
xor
inc
test
out
or
mov
push
or
dec
mov
mov
or
sbb
sub
xchg
xchg
mov
lock
pop
lods
cmp
ret
inc
in
enter
sbb
or
inc
xchg
xor
jle
shlb
mov
jno
or
pop
dec
push
scas
rcr
and
idivb
ss
mov
cwtl
sub
lret
pop
push
mov
pop
adc
or
push
pop
sbb
or
sub
cmp
push
clc
pop
or
cmc
xchg
mov
adc
inc
push
mov
mov
loope
data16
js
dec
cmp
ja
jbe
imul
mov
stos
lea
jbe
call
inc
or
push
enter
lds
add
mov
jne
inc
mov
int3
dec
pop
inc
in
sub
jle
popa
dec
outsb
call
lds
je
push
into
xchg
mov
fidivs
jns
or
enter
std
push
lcall
rol
enter
dec
adc
ja
dec
xor
in
cmp
mov
or
pop
out
je
sub
int
mov
jmp
or
jne
mov
insb
inc
mov
adc
or
sbb
dec
inc
xor
push
loope
sbb
or
mov
lods
test
test
jle
cmp
pop
sbb
enter
test
mov
xchg
adc
mov
mov
cmp
adc
adc
lea
push
int
sbbl
repz
and
adc
pusha
cs
es
sahf
sub
dec
push
rclb
cmp
push
dec
mov
pop
xor
push
lods
inc
sub
cmp
jp
push
jbe
repz
lds
insl
xlat
pushf
lods
daa
int3
ds
into
jo
test
add
add
pop
je
push
scas
push
mov
cmp
call
and
lods
xor
push
inc
les
mov
cld
xor
bound
adc
inc
inc
into
sbb
adc
push
loope
js
addl
movsl
cmpsb
xlat
in
pop
mov
leave
mov
and
cwtl
pop
je
pop
pop
pop
pushf
mov
xchg
shrb
pop
push
lret
call
dec
cltd
lea
mov
test
and
xor
and
or
and
and
or
or
cmp
ficompl
mov
test
bound
sbbl
or
punpckldq
mov
lods
cmp
data16
dec
mov
in
push
sbb
adc
js
ret
pop
cmp
dec
pop
call
adc
or
gs
jmp
in
cmp
fadds
push
or
adc
aad
scas
testl
sbbb
enter
mov
jle
push
mov
fisubl
jge
push
or
jg
fs
out
cmp
xlat
xchg
call
mov
imul
and
arpl
push
mov
mov
sbb
out
in
ret
je
push
push
jge
push
xchg
inc
push
or
push
pop
mov
mov
call
mov
xor
sbb
loope
and
mov
test
rol
inc
jne
xlat
xchg
mov
dec
mov
and
and
test
inc
test
hlt
call
and
fs
in
movsb
mov
lret
pop
adc
mov
push
xchg
jge
inc
xor
lea
adc
cmpb
sbb
inc
in
xor
xchg
mov
push
xchg
shr
push
out
imul
pop
xlat
mov
push
adc
pop
and
fs
lcall
sti
mulb
or
nop
push
sub
dec
imul
pusha
and
bnd
push
push
dec
sub
and
cmpb
jne
and
lahf
loopne
push
call
das
je
xchg
pop
mov
adc
xor
hlt
rorl
ja
pop
je
and
inc
sbb
sete
sbbb
add
lock
push
pop
jmp
mov
mov
lods
adc
jo
xchg
jno
stos
lret
sub
push
aas
push
add
je
clc
hlt
test
mov
and
add
gs
fs
and
add
out
and
inc
ljmp
shlb
adc
jno
enter
std
push
cmp
test
jl
cmp
idivb
jno
ret
or
clc
mov
into
popa
or
dec
and
cmc
dec
jecxz
xor
mov
test
mov
inc
adc
jp
mov
jne
sbb
or
jb
insb
push
cmp
adc
outsb
test
add
mov
sbb
repz
out
and
fists
test
lock
adc
pop
inc
adc
mov
jmp
push
testb
je
sbb
fwait
pop
bound
mov
hlt
pop
jno
popf
add
xlat
fimuls
jg
es
lods
cmpsl
sbb
sbb
jmp
jno
and
loop
pop
ret
je
stc
fisttpl
icebp
aam
xchg
les
mov
popa
movb
lock
inc
repnz
sbb
inc
ret
call
jle
pushf
lret
inc
hlt
and
xchg
ja
int
cmp
imul
pop
gs
mov
in
or
mov
pop
add
sub
add
mov
mov
nop
cltd
dec
sbb
pop
adc
and
or
fisubrl
aam
sti
push
cmp
cmpb
pop
and
not
cli
dec
enter
lds
push
fmull
loopne
or
loope
jl
adc
mov
cmp
jge
imul
mov
cmc
and
or
pop
ds
xor
popa
sub
inc
repnz
cmp
stos
add
je
int
jl
sbb
outsl
adc
adcb
cmp
pop
std
pop
cmp
cmp
cld
push
sar
add
in
add
loope
add
test
and
mov
add
imul
sub
sub
inc
testb
cmp
sbb
xor
aad
roll
cmpb
jne
enter
jmp
test
setl
fisubrl
orl
in
jg
out
sub
pop
sub
or
ficoms
xchg
xchg
test
loope
and
or
ret
adc
mov
adc
lahf
mov
roll
xchg
mov
xchg
adc
xchg
fmull
lds
or
add
sub
jns
enter
mov
pop
push
or
aas
dec
add
fwait
mov
jle
xlat
addr16
and
sbb
cmp
pusha
dec
stos
mov
aas
and
cmp
fdiv
adc
push
push
add
pop
jno
loopne
add
fs
inc
sub
and
push
push
imul
das
mov
fisubrs
inc
xchg
in
lea
sub
cmp
push
lock
add
call
jb
popa
ret
cmp
push
sahf
clc
add
adc
inc
and
aas
fstl
sbb
call
nop
inc
cmp
roll
in
sub
sbb
push
inc
adc
sbb
push
loopne
sahf
sbb
adc
in
mov
push
sbb
out
jno
xchg
int3
lret
xchg
mov
sbb
push
add
call
push
outsl
or
jno
cld
aas
enter
sahf
in
jne
sbb
mov
jo
cmpb
xchg
hlt
lods
push
push
mov
sub
jb
je
mov
inc
imul
pop
push
cmp
dec
bound
push
dec
adc
lea
xchg
les
xchg
jmp
xchg
and
pop
mov
jge
in
sbb
xor
dec
rorl
mov
xor
sbb
int
nop
xor
and
xchg
mov
int3
cmp
adc
adc
cmp
sub
xor
cmp
push
sub
in
push
xchg
shrl
add
aad
mov
cwtl
and
sbb
jmp
push
fmull
dec
and
fld
dec
int
push
nop
or
and
sbb
push
aad
mov
pushl
icebp
es
sbb
cmpsb
sbb
adc
push
outsl
xor
dec
cltd
lea
jne
cmc
sbb
mov
jo
jmp
pop
add
or
sbb
mov
cmp
daa
cld
aad
jb
sti
sbb
out
xchg
mov
xor
adc
enter
jns
dec
inc
dec
push
push
or
xor
and
arpl
rorl
and
sbb
repnz
mov
add
add
mov
xchg
push
adc
adc
js
cwtl
jne
ret
push
add
lods
jnp
in
sbb
push
jmp
push
out
sbb
and
dec
and
inc
adc
mov
mov
cmp
aaa
jl
pop
iret
xchg
cltd
xor
push
dec
push
daa
push
nop
add
and
and
fisubs
xchg
adc
sbb
dec
ljmp
xlat
repnz
aas
adc
mov
mov
and
and
cmp
mov
xchg
int3
mov
stc
mov
out
add
outsb
dec
jo
test
or
mov
mov
nop
pop
pop
add
jnp
ds
add
dec
or
jg
cmpsl
xor
xor
pop
cmpsb
mov
sar
jmp
in
int3
dec
pop
jnp
sbb
ljmp
gs
or
and
clc
add
dec
ret
inc
and
adc
call
mov
loopne
or
inc
push
cli
xchg
and
jmp
lock
sbb
int3
repnz
mov
dec
clc
xor
into
jbe
inc
mov
sbb
adc
xor
sbb
adc
and
push
push
pop
inc
ret
rcrb
inc
lock
xchg
jo
adc
shlb
add
repz
push
sti
push
jmp
sub
jb
cmp
aaa
call
popa
movsb
mov
jmp
outsl
aad
or
sarl
jnp
in
out
push
jmp
mov
sub
movsb
loope
nop
push
or
pop
mov
jmp
enter
push
fimuls
push
sbb
in
xchg
out
cmp
mov
mov
icebp
or
dec
push
cmp
lods
mov
pop
sbb
push
dec
adc
dec
pop
mov
pop
dec
adc
test
scas
bound
xchg
xchg
pushf
dec
add
push
xor
mov
pop
add
xor
mov
and
inc
add
pop
out
dec
movsb
or
mov
fimuls
mov
inc
inc
dec
sub
adc
call
repnz
movl
jge
sbb
roll
xlat
cli
add
mov
mov
mov
xchg
pop
ret
adcb
pusha
cmp
dec
push
mov
aas
and
cmp
fiaddl
ja
lea
xchg
or
adc
and
jo
lret
cmp
jmp
lods
getsec
adc
mov
add
xchg
push
xchg
add
jne
sub
or
mov
sub
sub
insb
sbb
jmp
cmp
pop
popa
loopne
call
fwait
mov
ficompl
jb
mov
loop
cli
jmp
add
add
jle
push
out
out
ja
inc
inc
cmpb
sahf
insb
or
imul
jne
lea
call
add
inc
adc
out
push
rorb
sbb
pop
xchg
imul
daa
loop
and
push
xor
in
push
stos
out
xlat
jo
leave
push
in
das
stos
cmp
testb
je
aad
add
addr16
clc
add
mov
mov
shll
aam
std
enter
mov
jle
push
fisubl
xor
inc
sub
fwait
and
das
leave
sbb
mov
sub
adc
push
jmp
les
stos
jno
sub
add
mov
sub
test
ljmp
push
fidivrl
or
jns
mov
pop
into
and
std
movsl
das
ret
idivb
rclb
in
bound
pop
fs
mov
dec
sbb
fisttps
pop
lods
lods
test
and
sub
mov
cmpsb
or
lock
cmp
dec
shlb
and
add
fs
mov
mov
mov
mov
cmpsb
mov
dec
xchg
push
xor
rcll
aam
cmp
or
or
rorb
inc
push
icebp
dec
jb
xlat
cwtl
mov
test
push
adc
stos
adc
lds
add
xlat
je
or
inc
dec
push
jle
repz
and
push
dec
lds
into
or
out
rolb
or
lret
ljmp
ljmp
or
daa
dec
shrb
or
ret
call
jno
dec
rclb
mov
jnp
pop
or
jbe
push
lock
shr
cmp
xor
fwait
xor
dec
popf
lea
pop
clc
insb
mov
sbb
imul
inc
jmp
mov
lret
movsl
adc
in
cmc
jns
int
mov
mov
mov
mov
scas
and
gs
cmc
xchg
cmpsb
in
adc
sbb
stos
mov
and
adc
inc
out
ficoml
or
or
add
and
jne
push
bound
and
xchg
leave
stos
cmp
mov
mov
mov
adc
fdivr
sbb
in
jb
and
ja
pop
inc
mov
mov
dec
mov
dec
cmpsb
rcll
rclb
mov
mov
xchg
gs
movsb
es
mov
addl
lods
push
test
add
mov
fisubs
shrb
aam
push
fldl
pop
into
test
and
xor
in
faddl
jge
pusha
repnz
adc
enter
pop
push
and
inc
dec
dec
push
popf
pusha
and
cmpsl
adc
dec
call
xor
in
push
leave
push
cmp
inc
xchg
std
jmp
rcrl
adc
add
stos
and
getsec
inc
ja
and
fmuls
add
jmp
adc
pop
call
pop
js
sub
mov
adc
push
mov
inc
jne
sbb
inc
mov
sbb
xchg
adc
lods
leave
movsl
dec
sub
push
add
leave
add
fildl
cmpl
outsb
or
mov
insl
in
add
and
bound
testb
movhps
out
bound
testb
ret
jno
cmp
mov
dec
pop
loop
jle
pop
je
push
xchg
stc
or
cwtl
add
or
sub
or
js
test
inc
dec
jne
cld
and
xor
sub
sub
pop
pop
and
sbb
sbb
lret
adc
inc
pop
sub
idivb
jmp
mov
push
lods
xor
sbb
dec
push
or
add
repnz
orb
xchg
mov
or
sar
sarb
jp
and
mov
jp
xor
pop
lods
sub
outsb
cmpsl
fistpl
arpl
adc
mov
es
jo
xchg
cmp
aam
rcll
push
push
es
rolb
dec
push
mov
mov
xchg
pop
ss
sbb
push
out
pop
int
inc
mov
xchg
out
stos
loopne
fstps
or
jne
xlat
cmp
push
push
fcompl
and
nop
cltd
pop
jecxz
cwtl
test
sti
bound
pop
mov
jnp
scas
clc
mov
in
push
pop
xor
push
or
cmc
in
jl
nop
test
jecxz
xor
dec
nop
movl
jbe
mov
pop
ret
in
jb
hlt
test
nop
sbb
adc
pop
sbb
pop
xchg
or
xor
out
dec
pop
pop
sub
mull
cmp
in
dec
lods
adc
or
daa
ljmp
cmp
jmp
enter
sub
push
sub
pop
inc
fdivrl
or
daa
sub
movsb
in
sub
cwtl
mov
sbb
lea
andl
cmp
inc
mov
mov
pop
loope
lock
sub
pop
sar
negl
mov
inc
cmpsb
stos
movsl
test
and
fists
push
inc
sti
ret
push
dec
notb
add
cmp
fiadds
fists
mov
cld
mov
inc
clc
adc
sub
mov
test
mov
mov
push
push
ret
inc
push
dec
adc
adc
or
dec
rorb
dec
push
lea
stos
fdivrs
movsb
pop
xchg
push
ret
test
and
out
addr16
and
pop
pop
hlt
das
push
pop
push
add
negb
push
push
push
mov
jbe
sahf
mov
daa
pop
lea
out
cwtl
mov
lcall
jmp
pop
mov
adcl
loope
imul
movsb
push
cmp
ret
push
push
mov
cmpl
lea
call
xor
push
cmpb
or
out
xor
dec
or
data16
xchg
or
inc
js
insb
and
adc
cs
xor
std
pop
xlat
cli
xor
mov
lret
lock
jne
xor
lahf
in
add
icebp
and
hlt
jmp
push
out
xchg
mov
test
pop
rorl
and
sub
xchg
cmp
xor
or
add
cwtl
sbb
or
mov
clc
loop
aad
push
jno
out
in
out
xchg
mov
sub
lods
mov
test
cld
adc
dec
push
or
lock
movsl
xchg
xchg
xchg
ss
sbb
data16
xchg
jmp
adc
push
or
adc
pop
mov
ret
ja
ret
pop
xor
xor
es
push
jo
pop
xchg
out
cmp
filds
fnstcw
jno
sub
adc
mov
orl
or
add
push
fcompl
fistps
loopne
jae
fiadds
daa
dec
jne
push
pop
in
inc
cwtl
pop
enter
jo
movsl
js
dec
adc
daa
add
mov
jmp
cmp
jmp
pop
dec
or
sbb
clc
insl
xor
cli
adc
shlb
jp
mov
mov
fisubs
je
sub
shlb
test
mov
cmc
xor
dec
mov
negl
jbe
dec
mov
dec
out
movl
shl
out
push
xlat
add
mov
xchg
cmp
adc
pushf
sub
xchg
add
shrb
stc
mov
cmpb
xchg
cmc
or
dec
push
or
outsl
cmp
mov
cmc
cwtl
jnp
roll
xor
jmp
add
clc
int3
jne
lock
std
jmp
movaps
pushf
jge
and
add
aam
sub
mov
add
jno
ffree
dec
stos
sbb
pusha
pop
inc
mov
ret
mov
js
and
pop
jle
shlb
and
mov
cmp
fsqrt
cs
dec
pop
inc
jnp
in
cli
mov
and
cmp
inc
jmp
mov
jl
adc
push
or
push
push
faddl
add
jne
bound
mov
fbld
or
shll
adc
add
cmpb
insb
sbb
inc
fidivl
add
call
xor
mov
fs
ffreep
xchg
mov
push
ret
mov
push
and
adc
aad
rolb
dec
inc
push
aam
dec
and
aad
test
sub
adc
sub
add
xor
and
mov
dec
xor
or
mov
cmpsl
addb
mov
fwait
clc
push
call
mov
pop
rol
pop
test
mov
xchg
mov
fs
ljmp
or
or
sub
push
sbb
jge
hlt
aas
inc
incb
push
sbb
jo
sub
xchg
icebp
or
subl
notl
test
and
stos
adcb
ja
bound
fisttps
adc
mov
mov
mov
js
loopne
push
push
fstps
and
adc
sub
adc
mov
cmp
clc
call
push
aad
icebp
push
inc
jo
cld
sub
jg
add
push
call
nop
mov
movb
push
mov
lea
icebp
pop
idivb
or
and
jns
mov
mov
sub
test
lods
pop
mov
nop
in
fs
sbb
enter
addr16
pop
pop
jp
dec
sub
jne
ret
cmp
push
inc
mov
ds
mov
lret
xchg
add
lahf
push
cmp
aaa
xchg
mov
test
cld
hlt
or
callw
popa
push
subb
out
push
call
adc
dec
adc
call
nop
adc
sarb
cmp
or
enter
aam
jl
adc
cmp
sbb
add
data16
testb
pop
pop
mov
dec
int3
test
xchg
shll
test
jo
adc
inc
mov
int3
ja
mov
push
fwait
sub
and
fstl
jnp
sahf
adc
add
outsl
jmp
xchg
insb
js
push
nop
rcll
mov
in
sti
push
ja
jb
and
cmpsl
rcll
int3
or
adc
enter
in
adc
jmp
push
test
lahf
shr
aaa
jnp
add
sbb
cmp
setle
xor
cmp
cmp
and
testl
mov
stc
mov
xchg
push
incl
das
mov
pop
xor
pop
aam
shlb
leave
sti
dec
push
hlt
repnz
out
scas
push
add
popa
and
aad
add
dec
push
cmp
adc
dec
adc
inc
or
addr16
lahf
call
call
inc
std
lcall
jmp
push
xor
inc
loopne
int3
or
in
xchg
out
test
or
add
call
scas
testb
and
add
dec
leave
nop
out
adc
cmp
lahf
rorb
aas
sbb
hlt
jmp
inc
bound
push
popf
imull
movsb
push
nop
mov
mov
add
sub
fxch
imul
jg
add
xchg
inc
mov
in
call
lock
add
xor
sbb
xchg
lock
movb
and
icebp
jmp
xor
lock
je
mov
adc
imul
rorb
out
mov
push
and
sbb
or
les
add
jne
and
inc
add
mov
jl
lret
xor
xor
jae
mov
es
rolb
ja
and
scas
push
movsl
push
push
or
adc
xchg
or
sub
adc
sbb
adc
mov
add
jle
iret
sub
or
pop
adc
sub
adc
push
mov
cmp
inc
cmp
push
popf
fs
mov
popa
dec
sub
pop
shrb
or
daa
push
and
mov
push
jo
push
mov
into
dec
push
les
add
push
or
shrl
cwtl
dec
xchg
and
mov
xchg
cmp
add
xchg
iret
jge
imul
adc
or
sbb
cs
inc
gs
les
bound
pop
adc
add
aad
adc
adc
xor
pop
jbe
sub
and
dec
inc
push
xchg
cmp
pop
call
hlt
mov
das
js
push
adc
jge
clc
push
sbb
enter
or
ret
repnz
and
pop
pop
notb
popf
fcmovne
and
call
sub
testb
repz
xchg
clc
mov
call
xorl
jg
in
mov
and
mov
sub
dec
mov
icebp
dec
and
inc
xor
jmp
inc
sbb
cmp
dec
jge
mov
imul
xchg
fsubrs
lret
mov
cli
lahf
inc
arpl
sbb
sub
and
test
scas
sbb
sbb
hlt
mov
push
lock
sub
rcll
or
dec
leave
mov
ret
and
jb
mov
inc
pop
call
lock
std
pusha
js
cmp
xor
pop
adc
or
add
push
popa
jne
popf
push
incl
repz
push
lock
cmp
cmpsb
cmpsb
daa
mov
bnd
scas
je
clc
stos
jl
inc
jecxz
lahf
popf
inc
jbe
and
mov
dec
mov
scas
test
in
rol
xchg
mov
test
sti
insl
lds
ds
mov
jns
adc
mov
or
popl
fwait
movl
mov
or
pop
push
pushf
cld
and
outsb
or
inc
pushf
lret
jae
daa
jbe
leave
or
xor
dec
pop
loop
fsub
xchg
adc
cmp
xor
xor
inc
or
sub
icebp
ret
mov
test
idivl
mov
add
outsb
ss
adc
push
out
inc
and
subb
sub
rolb
mov
sbb
push
or
add
xor
cld
nop
and
jae
sbb
test
fisubrs
leave
cli
test
fsts
sub
xchg
aad
dec
pop
inc
pop
sub
faddl
les
add
cltd
cmp
sub
pop
inc
lds
pop
inc
fwait
enter
sbb
push
dec
push
inc
sbb
cmp
xor
cmp
pushf
push
sbb
sbb
pop
ret
movsb
sub
mov
adc
ret
dec
leave
cltd
in
cwtl
inc
aam
adc
add
dec
add
xor
cmpsl
mov
inc
test
dec
test
jl
inc
mov
out
incb
xchg
lds
in
loopne
mov
jne
sub
add
pusha
xor
rorl
sub
enter
mov
cld
ret
pop
repz
pop
push
mov
sub
sub
adc
mov
cld
gs
push
mov
adc
enter
jbe
rolb
add
scas
mov
add
xchg
adc
sub
nop
mov
pop
xor
into
adc
mov
push
cmp
aaa
jne
adc
jo
aaa
xchg
stc
movhps
mov
js
mov
cmp
ret
cmpsl
or
loopne
clc
mov
call
jmp
xchg
push
cwtl
mov
test
pop
inc
dec
and
cmp
xchg
cmp
pop
dec
and
in
cmp
pop
mov
cmc
xor
push
std
repz
into
mov
or
fdivrp
push
sbb
fs
enter
xchg
pop
xchg
xchg
pop
inc
in
test
dec
lods
inc
icebp
iret
mov
shlb
stos
cmp
scas
shlb
mov
sbb
xor
scas
or
pop
ss
mov
mov
dec
test
pop
imul
push
iret
and
cmp
adc
iret
jb
jg
pop
inc
pop
imul
or
loope
pop
inc
movsb
jo
gs
sahf
iret
pop
mov
sub
stos
sub
in
mov
push
sar
dec
mov
push
inc
xchg
dec
stos
insl
test
adc
test
jle
mov
std
push
test
and
adc
ss
je
loop
or
pushf
cmp
movsb
pop
cmc
in
sub
into
lods
pop
les
mov
jle
sbb
dec
push
call
add
adc
loop
pusha
movsl
add
cmpl
nop
or
icebp
pop
add
adc
push
cmc
daa
inc
push
pop
hlt
jnp
add
push
stos
leave
and
loopne
lock
popf
sub
adc
cs
adc
aad
dec
and
push
xlat
mov
and
and
enter
pop
scas
cmp
sarb
jecxz
sbb
movlps
xor
inc
dec
enter
mov
lret
mov
sub
pop
inc
stos
push
mov
add
cs
insb
bound
mov
sbb
jne
xchg
ret
push
adc
cmpsb
inc
inc
adc
movl
decl
push
adc
inc
push
add
dec
or
add
or
rclb
fs
in
jne
pop
add
cmpb
insb
push
movsb
inc
mov
or
orl
sbb
sub
pop
ret
lret
popf
push
xchg
and
mov
sub
and
rorl
pop
sub
icebp
mov
cmp
lds
inc
ss
adc
scas
and
adcb
jle
mov
and
dec
lret
aam
pop
add
int
xor
leave
test
xchg
sbb
incl
pop
sub
ja
dec
scas
xor
mov
adc
jge
subb
test
sub
pop
add
out
jb
jge
sbb
or
inc
das
mov
inc
nop
jmp
clc
mov
test
insl
dec
or
mov
shrb
js
aad
pop
in
les
les
cmp
inc
pushf
mov
rclb
rcll
rolb
out
cmpb
shl
mov
sbb
lea
dec
adc
jnp
dec
rorb
fcmovbe
bound
data16
lods
and
jmp
aam
xor
hlt
inc
pushf
daa
mov
mov
or
out
add
mov
adc
movups
xchg
dec
lock
icebp
xor
adc
xor
sub
hlt
aaa
xor
cmp
mov
jge
adcb
fdivrp
daa
nop
enter
jo
ja
test
inc
inc
call
and
ret
mov
and
push
enter
adc
adc
sbb
test
dec
mov
adc
or
es
movsl
fsub
fimull
xchg
std
enter
adc
scas
inc
lcall
xor
and
imul
pop
mov
cmp
mov
popa
jg
in
xchg
xchg
push
push
or
pushw
inc
lahf
inc
pop
ret
or
fstps
push
cmp
gs
cmp
loop
sbb
push
add
cld
cltd
orl
mov
int3
mov
aaa
xchg
or
fs
sub
push
dec
mov
shrb
add
pop
mov
inc
add
lods
sub
inc
repnz
xor
push
mov
dec
aam
pop
je
das
sub
cmp
jne
shll
lods
fsts
test
ja
popa
inc
sbb
or
sbb
rolb
gs
outsb
outsl
mov
dec
lea
mov
out
mov
or
leave
movsl
aaa
fidivl
cmp
lea
inc
add
sbbb
sub
mov
out
call
fldl
cmp
insl
add
xor
sub
jns
adc
fucomi
roll
xchg
je
jp
push
mov
add
mov
pop
or
pop
fisubrs
test
xchg
fists
lock
adc
jp
sub
icebp
lret
or
mov
push
and
in
fimuls
addb
xchg
jns
mov
or
push
mov
popa
mov
in
add
gs
and
mov
fstpl
cmpsl
and
push
decl
daa
in
and
xchg
or
pop
jl
adc
testl
out
das
mov
shlb
js
imul
adc
loopne
mov
xchg
js
lock
pop
adc
xchg
mov
inc
mov
ljmp
nop
cmpl
pushf
and
ds
das
pusha
mov
mov
punpckhwd
pushf
cmp
addr16
sub
cmpsl
pop
loopne
lcall
mov
or
test
scas
insl
movntps
das
jne
jae
daa
fs
push
sub
and
pusha
mov
mov
sbb
and
sub
or
xchg
dec
and
mov
cld
push
mov
das
fstps
jl
xor
sbb
addr16
jg
mov
sbb
loop
push
dec
xor
fs
cmpb
cli
xchg
mov
repz
jmp
in
cmp
lret
fcompl
jo
popf
mov
add
in
leave
and
ljmp
insb
jmp
in
js
mov
and
jmp
push
xor
dec
shrl
mov
push
bound
or
and
test
add
mov
or
and
sub
jo
cs
mov
dec
dec
sbb
cmp
lret
cmp
jmp
sub
push
pop
push
mov
clc
rcrl
stos
aam
inc
xchg
cld
sub
adc
cli
add
pop
mov
enter
clc
pushl
sub
cltd
fld
fnstsw
and
mov
xlat
mov
out
push
repz
iret
inc
push
sbb
sbb
dec
je
push
xchg
pop
lods
stc
jbe
jne
dec
loopne
cmp
repnz
sti
mov
dec
xchg
sti
or
sbb
adc
add
mov
xchg
sti
rolb
rcrb
in
lahf
icebp
mov
ja
les
int
cmp
mov
inc
pop
je
cmpl
xchg
jl
lret
adc
add
push
or
push
cmp
xchg
xchg
lds
daa
aaa
mov
mov
decb
inc
sub
rol
sbb
idiv
and
in
enter
mov
mov
xor
push
sbb
cmp
fstpt
subb
push
inc
or
out
inc
orb
je
repnz
push
push
mov
fs
scas
lret
clc
dec
push
push
arpl
mov
call
loopne
xchg
push
pop
cmp
xor
mov
pop
push
adc
je
hlt
fs
or
addb
lds
or
adc
pop
arpl
pop
outsb
notb
rolb
xor
or
cmpl
bswap
sub
fwait
adc
and
les
out
in
les
mov
add
cltd
add
xlat
out
sub
xchg
lea
ja
jae
loopne
xchg
xchg
inc
push
mov
mov
sub
lds
pop
les
ss
cmp
and
and
bound
sbb
or
sbb
pop
shl
adc
call
pop
push
sub
dec
fs
leave
add
nop
scas
and
cmp
call
jnp
and
push
and
jecxz
add
xlat
xchg
aas
xchg
call
mov
test
orb
sub
add
cmp
inc
or
sbb
pop
mov
push
mov
mov
or
call
or
push
inc
sbb
push
and
and
insl
cmpsl
std
das
repz
sub
xchg
scas
sbb
leave
loopne
ds
aas
or
cmp
add
pop
jg
gs
jns
lahf
cmp
loope
insl
pop
and
clc
dec
jne
pop
push
js
mov
cmc
in
sub
or
imul
fstpl
jge
push
add
and
xor
mov
push
sub
or
adc
dec
mov
in
aaa
adc
and
fsub
cmove
movntq
out
mov
shrl
cmpsl
mov
push
adc
mov
in
lock
and
cwtl
adc
and
adc
call
sub
mov
aaa
dec
xor
xor
jge
xchg
mov
repz
fisttpl
xor
les
and
jne
or
je
inc
dec
jne
test
pop
icebp
into
xchg
push
sbb
sbb
popa
push
testl
mov
xor
inc
addl
pop
jle
push
mov
add
jnp
adc
cld
sbb
ljmp
pop
ja
jno
add
lods
xchg
and
ret
mov
lock
mov
shlb
jmp
movsb
and
pusha
xlat
call
insl
test
xchg
add
add
orb
mov
cli
dec
mov
dec
jae
dec
cmpsb
xor
sub
loop
xchg
inc
inc
push
decb
lock
inc
std
adc
icebp
movsl
faddl
pusha
mov
cmpsb
inc
inc
jno
adc
sbb
mov
enter
xchg
xchg
call
dec
xchg
pop
mov
push
jecxz
gs
call
xor
mov
sub
movsl
faddp
mov
fnsave
inc
lcall
cmp
int3
sub
sti
xor
xchg
dec
pop
pop
add
xor
mov
pop
fcomp
adc
adc
dec
mov
fistpl
dec
dec
and
push
call
gs
daa
inc
lret
pop
and
enter
pop
std
enter
xlat
pop
ja
call
nop
dec
pop
or
add
jne
inc
cld
lahf
xor
jb
jg
dec
in
jne
js
and
les
pop
pop
cs
or
jmp
jmp
lods
push
movsb
and
test
and
nop
mov
popa
leave
hlt
orb
stos
repnz
inc
fnstsw
das
mulb
inc
push
push
inc
imul
into
and
hlt
adc
lret
cmp
lock
cmp
popa
rcl
mov
sbb
xor
pop
dec
inc
dec
cs
mov
sub
lock
sbb
arpl
lcall
test
aas
clc
test
xor
sub
mov
mov
or
push
add
loopne
cld
adc
sbb
cmc
mov
out
movsb
push
mov
sbb
sbb
or
pushf
and
or
fldenv
lods
clc
into
pop
sub
fdivrp
cmp
pushf
shr
das
scas
fiaddl
or
mov
push
mov
sub
fldt
sub
cmp
inc
add
inc
add
lahf
and
fs
sbb
add
int3
test
fisubl
pushf
and
mov
insl
push
or
mov
or
call
or
fmuls
clc
and
bound
push
and
xchg
inc
cmp
xlat
mov
ljmp
xor
and
push
jl
jecxz
and
add
sbb
rcl
xchg
add
and
sub
mov
es
pop
inc
adc
dec
sbb
and
clc
fsubr
int3
scas
and
movsl
test
sub
enter
cmp
call
xchg
les
dec
or
daa
mov
lret
test
out
std
out
ja
mov
sbb
push
pop
or
dec
lret
cmp
fdivs
mov
inc
jo
mov
push
int
jmp
sub
or
cmpsl
test
fs
push
xchg
cmpb
pop
shlb
btr
push
mov
xchg
push
das
jne
mov
push
fsubl
and
or
mov
pop
push
pop
int3
adc
push
ja
xchg
sbb
pop
int
fsubrs
sbb
xchg
jne
lret
mov
dec
js
data16
pop
mov
xchg
stos
sbb
inc
push
adc
sub
leave
and
nop
orl
lds
cmpsb
cmp
push
pop
push
mov
mov
adc
insb
stos
push
inc
test
test
jns
pop
pop
fisubl
push
sahf
sub
fmull
test
lret
lret
sub
lds
xchg
xor
js,pt
movsl
sti
add
mov
sub
sbb
xor
or
mov
jmp
add
xor
jnp
lahf
pop
paddq
gs
mov
and
js
fimull
mov
inc
pushw
cmpl
mov
dec
mov
in
xor
xor
sub
push
sbb
call
jmp
sub
adc
aas
test
adc
inc
add
inc
sbb
in
sub
mov
mov
push
mov
ficoml
ljmp
adc
dec
and
adc
and
je
pop
push
sub
adc
inc
xor
dec
cmp
test
add
inc
inc
xchg
sub
adc
mov
cmp
push
call
xor
inc
dec
mov
arpl
mov
mov
sbb
pop
cld
js
movsl
ljmp
xor
inc
jns
sbb
inc
mov
iret
inc
dec
cmp
adc
out
dec
pop
and
inc
xchg
test
or
pushf
dec
sbb
pop
aam
mov
add
adc
sar
shlb
and
inc
int3
xor
lcall
sahf
sbb
fisttps
jns
fldl
into
mov
dec
sarb
sbb
mov
push
icebp
pop
and
mov
xchg
mov
cmp
stos
jbe
out
mov
push
negl
imul
adc
push
inc
adc
adc
mov
ljmp
adc
lods
insl
xorl
ret
mov
mov
xchg
jp
iret
and
incl
push
loope
cmp
imul
adc
push
dec
stos
pop
lock
push
sti
jb
cltd
inc
mov
and
stos
stc
sbbb
enter
adc
mov
sbb
je
or
fs
push
lods
ret
lahf
push
sahf
or
jne
cmp
mov
dec
push
mov
mov
push
add
enter
nop
ror
sbb
inc
clc
xor
sbb
aam
rclb
jbe
push
fs
pusha
jmp
aas
jle
cmpsl
filds
sbb
inc
mov
push
aam
call
clc
jge
call
testb
adc
adc
test
and
shr
mov
xor
scas
or
aam
cmp
inc
pop
insb
and
ljmp
mov
jns
jo
mov
mov
out
push
or
mov
adc
or
and
or
or
ret
sub
adc
and
mov
mov
ja
std
enter
xlat
adc
xchg
cs
inc
aas
cmpsl
pop
mov
outsb
dec
test
loopne
test
enter
or
xlat
or
push
jns
mov
xor
cs
pop
into
shll
les
mov
jb
push
inc
cmp
push
cmp
repnz
movsb
xchg
out
adc
repnz
xor
outsl
push
pop
inc
mov
fs
outsl
pop
shr
bound
aad
and
out
rolb
inc
adc
sub
mov
lods
fsts
or
inc
je
jmp
adc
xor
pop
jnp
rcll
gs
xchg
es
jp
icebp
ffreep
pop
fisubl
lods
popf
fsubrs
rorb
sbb
movsb
in
and
xchg
dec
loopne
lea
inc
scas
adc
repnz
mov
dec
lods
rorb
lods
and
js
xchg
rep
mov
or
je
fiaddl
scas
lret
faddl
sahf
repnz
push
xor
cli
iret
xchg
mov
mov
cmp
push
mov
inc
sub
push
pop
sub
cmpsl
push
imul
sub
testl
mov
sbbb
add
out
inc
mov
xchg
or
mov
insb
mov
push
mov
push
sbb
pop
sub
inc
cmp
pop
inc
in
and
sarb
adc
fs
xchg
stos
insl
int3
add
das
and
popf
pop
mov
loopne
cmp
and
push
push
sub
sub
mov
fists
mov
cmpb
movsb
and
xor
ret
mov
lock
and
or
mov
nop
sub
xchg
mov
fnstcw
xchg
ret
popa
add
lahf
inc
imul
adc
xchg
adc
sub
stc
adc
dec
inc
insb
fbstp
add
add
add
mov
int
daa
pop
data16
daa
sbb
shl
or
and
and
je
or
add
into
enter
adc
das
mov
sarl
inc
push
mov
daa
notl
jle
enter
hlt
fcoml
test
sub
insl
mov
push
xchg
push
subb
sbb
add
mov
push
rorl
mov
push
addr16
push
les
pop
sub
xchg
sahf
or
xchg
mov
xor
adc
jle
cmpsb
in
js
movsb
mov
adc
or
cmpsb
ja
xor
daa
int3
mov
call
jmp
jge
xor
inc
fisubl
clc
dec
sbb
jl
test
sbb
jne
cwtl
iret
repz
test
fwait
push
or
inc
divb
fidivrs
mov
add
test
sub
out
lcall
cli
mov
rcrb
and
imul
outsb
jns
inc
mov
mov
push
push
call
std
loope
push
adcl
loop
mov
sub
stos
jno
pop
es
cmp
cmp
dec
outsb
adc
je
lcall
es
pop
push
call
test
inc
ret
xor
and
shll
cltd
fwait
int3
inc
cmp
pop
shrl
or
int
or
call
dec
mov
fs
leave
pop
inc
test
dec
push
in
mov
sub
add
inc
mov
and
add
jb
push
fists
jp
add
sub
out
bound
hlt
or
add
sub
mov
mov
pop
dec
dec
push
int3
mov
mov
in
addb
cwtl
or
jp
lret
pop
inc
sbb
push
xchg
cmp
cmp
mov
or
mov
movsb
dec
in
enter
dec
push
xor
testl
fdivs
mov
or
mov
push
pop
sub
es
sbb
sbb
aam
lret
or
jp
je
ds
mov
mov
sub
bound
mov
pop
mov
push
lret
jg
ss
adc
cmp
dec
xchg
mov
inc
jp
fimull
push
ror
data16
cmc
and
inc
movsl
add
mov
and
test
mov
fcoms
cmpsb
or
and
add
jnp
mov
add
add
dec
je
jmp
cmp
mov
clc
inc
lods
jmp
sub
je
cld
sub
lds
jne
fcom
dec
pop
lods
mov
xchg
cmp
loope
mov
push
add
loopne
ror
cmp
pop
jne
jne
jp
adc
adc
add
mov
mov
fcmovbe
xchg
push
mov
lahf
xor
inc
imul
xor
jg
lock
clc
sti
and
sbb
jg
add
sbb
adc
add
push
add
push
aas
inc
inc
pushf
outsl
mov
sub
or
movsl
test
shl
add
loop
sbb
es
jne
popa
mov
mov
push
scas
dec
add
mov
mov
xor
inc
add
cmp
jg
je
das
hlt
jmp
push
adc
ret
rcr
adc
adc
adc
out
inc
js
add
imul
test
xchg
dec
xchg
clc
sbbb
or
and
add
dec
xchg
mov
or
pop
out
cmp
mov
pop
movsl
les
and
adc
mov
and
mov
filds
push
xchg
push
leave
cmp
bound
movsb
inc
dec
mov
inc
jl
jp
hlt
dec
inc
push
vplzcntq
aas
and
fidivl
mov
das
push
and
nop
mov
xor
xor
jno
inc
stc
scas
int3
std
inc
sub
xchg
adc
arpl
in
in
mov
sub
or
inc
jne
push
xchg
jge
hlt
push
aas
les
push
jbe
add
pop
outsl
repz
cmp
adc
sub
cltd
rorl
pop
inc
lds
ss
fs
and
adc
inc
and
xchg
mov
pop
push
outsb
sar
mov
movsb
out
popf
cli
imul
enter
push
test
leave
ljmp
jecxz
dec
out
mov
icebp
loop
test
jmp
gs
inc
cmp
xlat
call
dec
jne
xor
movsl
or
xor
dec
add
ja
cli
xor
or
orb
sbb
or
pop
ret
lcall
and
mov
add
scas
mov
pop
add
hlt
hlt
push
sarb
lea
or
test
mov
cltd
sbb
cmpb
sbb
clc
xchg
jmp
cmp
cmpsb
enter
dec
sar
sarl
enter
and
mov
xchg
test
popa
in
jne
jne
in
inc
ficomps
xor
pop
dec
movsl
sti
sub
enter
gs
cwtl
inc
in
inc
dec
xor
iret
cmp
xor
idivb
xchg
out
shl
pop
mov
and
adc
pop
roll
jb
cmp
pop
rcll
call
jl
push
roll
sub
dec
lock
mov
movsl
sub
les
je
push
jne
mov
es
adc
cmp
xchg
pop
cwtl
daa
nop
jge
adc
out
aam
add
push
adc
jle
and
adc
adc
cmp
rorb
les
repnz
sub
xchg
mov
and
mov
nop
testb
je
lret
call
mov
out
xlat
inc
movsl
adc
push
and
xchg
add
push
popa
clc
das
adc
sbb
enter
push
inc
outsb
sub
add
jmp
pop
cltd
cmpsl
sti
cld
int
push
sub
xor
or
inc
setno
mov
cmpsb
cmpsl
shlb
xor
mov
push
cwtl
mov
xor
jp
cmpsb
xchg
push
adc
insl
adc
mov
adc
pop
inc
mov
pop
mov
xchg
shll
out
jecxz
sbb
cltd
push
xor
sub
dec
and
jle
inc
xor
daa
lds
inc
sub
cmovne
dec
sub
push
mov
or
adc
pop
adc
cmc
push
insb
lret
push
adc
mov
loopne
call
mov
mov
pop
inc
fists
out
inc
and
out
sub
dec
cwtl
add
sbb
xchg
xchg
xchg
push
push
dec
out
sbb
jne
pop
add
pushf
and
add
sti
lea
or
xor
inc
cltd
pop
ret
scas
rorl
dec
sahf
push
push
cmpsl
icebp
rcrl
or
outsl
xor
push
push
xchg
xchg
adc
adc
fidivs
fsubrs
clc
jp
jmp
add
jb
cmp
inc
mov
int3
sbbb
inc
dec
or
adc
xchg
jle
leave
cld
mov
loope
add
sbb
jne
movsl
push
push
mov
or
in
mov
pop
and
sub
das
lods
add
in
add
mov
insb
movsb
std
jecxz
sub
sub
mov
bound
aaa
adc
adc
sub
mov
hlt
push
ss
xlat
xchg
arpl
or
push
cmp
mov
cli
enter
test
mull
sbb
test
or
imul
xor
mov
gs
adc
xor
pop
pop
call
xor
fcoms
enter
xchg
push
jb
int
stc
movswl
outsl
or
ja
and
data16
cld
ret
cmp
ffree
daa
adc
xorb
inc
mov
mov
fsubs
cs
call
adc
cli
or
xchg
cwtl
and
xchg
adc
adc
sahf
movsb
lret
mov
nop
cmp
je
pop
jae
andl
and
ss
mov
cwtl
loope
cmpsl
push
cmpsb
mov
adc
mov
jno
mov
adc
test
mov
data16
js
mov
je
or
inc
lods
les
test
orl
dec
aas
cltd
cmpb
jle
fdivl
mov
pop
sbb
icebp
imul
or
sbb
call
or
mov
insb
outsb
mov
sub
adc
ret
adc
lcall
adc
aam
mov
ja
adc
or
adc
dec
jp
stos
adc
mov
ror
add
add
inc
jne
mov
add
sub
dec
ja
aad
xor
mov
sbb
inc
mov
adc
jne
pop
pop
pop
mov
mov
adc
jae
or
outsb
ja
test
mov
stos
or
pushf
push
mov
call
popl
mov
cmpsb
pop
and
jge
jb
pop
xchg
das
xchg
imul
mov
pop
push
sbb
or
dec
or
mov
push
daa
push
push
sub
xchg
or
lcall
mov
fadds
jge
or
or
ljmp
shrb
push
cmp
lret
fcmovnb
repnz
gs
inc
rolb
dec
xchg
test
and
mov
ja
push
jbe
je
pushf
jmp
fucomip
in
outsb
mov
enter
cmp
pushf
sub
les
mov
shll
outsl
pop
test
and
bound
xchg
sbb
mov
xor
cmp
aad
sbb
lret
cld
mov
add
add
sbb
or
or
ljmp
rorb
test
inc
or
popa
xchg
imul
or
fdivl
push
jbe
push
mov
inc
adc
jbe
sub
push
iret
in
aaa
push
mov
pop
loope
adc
jns
sbb
cltd
xor
orb
imul
stos
cwtl
pop
cmp
jno
imul
mov
add
push
jae
or
lcall
cmove
xchg
pop
mov
mov
rorb
jb
xchg
pushw
push
stos
sub
icebp
ljmp
out
outsl
cmpsl
leave
rcll
push
in
xchg
or
mov
cmp
jle
fstps
mov
sub
inc
lock
inc
in
test
sbb
out
inc
daa
xchg
mov
and
sub
add
adc
mov
inc
enter
les
add
or
shlb
inc
in
push
stos
out
nop
cmp
xchg
mov
or
adc
ljmp
movsb
outsb
ret
mov
jecxz
sub
jb
inc
add
or
movb
push
mov
cmp
add
adc
jne
mov
inc
int
or
shll
or
out
sub
outsb
xor
jmp
popa
loope
add
or
je
int3
mov
nop
int3
inc
enter
cs
nop
jp
add
mov
sub
pop
mov
stc
mov
sub
push
stc
in
shlb
pop
pop
std
pop
dec
mov
adc
or
xchg
loopne
mov
jle
mov
sbb
dec
icebp
mov
jle
pop
sbb
aam
add
push
dec
add
sarb
push
int3
stos
sub
nop
mov
push
mull
adc
leave
fdivs
ss
sbb
rclb
adc
rorb
inc
and
add
xor
jmp
loopne
nop
mov
jge
loopne
sbb
mov
or
faddl
and
jmp
divb
inc
int3
cli
xchg
sbb
inc
mov
xchg
inc
or
hlt
or
aas
inc
inc
or
and
add
and
in
jge
and
jmp
mov
pop
aas
mov
cmp
lret
iret
cwtl
mov
and
jge
dec
pop
or
shrl
dec
cmp
pop
inc
or
xchg
cmpsl
push
sub
mov
lock
in
xchg
inc
inc
test
xchg
dec
pop
mov
into
or
enter
jae
dec
clc
sub
sahf
imul
xchg
xchg
sbb
filds
sbb
add
lods
mov
jbe
push
fsubrs
sbb
xor
mov
notb
ret
or
push
xchg
mov
inc
inc
push
push
pop
shll
inc
jo
in
mov
inc
sbb
sub
adc
mov
in
push
mov
sub
mov
lock
or
fs
mov
cmpsl
push
pop
pop
jo
dec
into
sbb
cmp
mov
mov
and
fldcw
push
mov
std
add
push
inc
dec
mov
dec
ret
iret
aaa
lcall
adc
in
xchg
or
inc
dec
or
into
ror
rcll
push
add
cmp
mov
or
push
adc
and
dec
sub
mov
push
inc
dec
aam
int3
or
test
mov
in
and
xchg
cmpl
push
add
jmp
cmp
xor
adc
or
adc
mov
jbe
nop
xchg
je
leave
aad
jbe
add
cmp
pushf
sub
pop
mov
dec
cmp
lea
fcompl
inc
in
sub
pop
cli
inc
insb
neg
orb
movsb
or
add
push
call
sbb
je
push
xchg
xor
add
loop
fs
fs
xchg
mov
push
or
add
or
shrb
aam
popf
loope
mulb
mov
scas
jae
jne
inc
add
loop
or
xchg
icebp
adcl
divl
adc
repnz
jb
and
mov
mov
adc
push
add
dec
aas
lock
out
sub
mov
pushf
mov
xchg
pop
arpl
xor
lods
sbb
jne
lret
jge
lret
test
daa
aaa
ljmp
cmp
lret
pop
fldenv
xor
adc
add
mov
cli
and
test
and
adc
adcb
aam
nop
add
outsl
jecxz
test
in
adc
sub
jecxz
es
and
inc
adc
adc
push
mov
xor
gs
pop
andb
cltd
adc
mov
inc
arpl
add
dec
sub
bound
loop
mov
and
inc
mov
sbb
and
les
pop
mov
in
add
or
jo
leave
hlt
push
mov
push
push
imulb
cmp
rcrl
leave
sub
out
inc
aas
inc
outsl
pusha
daa
fldl
xchg
rcll
add
call
mov
or
dec
pop
inc
mov
dec
psubsb
cmpsb
and
mov
adc
lods
lods
hlt
mov
push
aas
push
mov
mov
mov
movb
rol
outsl
fmuls
test
jnp
adc
lcall
mov
inc
aam
mov
or
mov
out
or
lcall
adc
pop
cmp
jmp
mov
add
mov
adc
cwtl
sub
scas
and
jl
cmpl
jg
movsl
inc
or
push
mov
lret
adc
in
sub
fnstcw
jg
test
or
out
repz
sub
or
out
repz
scas
jb
add
roll
push
jge
movhlps
jbe
and
nop
out
inc
subb
stc
nop
pusha
cwtl
mov
call
scas
lret
mov
or
cmp
in
outsb
movsb
es
xchg
mov
cli
cmp
loopne
cld
call
or
fimull
test
push
sahf
sbb
loop
adc
mov
add
pop
adc
dec
cmp
cltd
and
xor
push
cmc
call
jg
mov
jb
xorb
ficompl
and
sbb
ljmp
fdivrl
xchg
flds
mov
push
adc
inc
subb
fbld
or
inc
xchg
cmc
andb
jge
and
cwtl
mov
in
test
test
mov
orb
leave
cmp
fwait
cs
adc
push
mov
pop
les
or
mov
xor
pop
lds
cmpsl
jmp
ret
stos
lret
mov
sub
fidivl
sarl
jmp
inc
lods
and
pop
mov
xor
pop
cltd
fstps
ffree
aad
xor
addl
into
or
xchg
sub
xchg
cmp
or
insb
or
rcll
cmpsb
add
call
in
lds
cmpl
cld
mov
jp
xchg
add
cmp
lea
inc
ss
testl
cltd
jb
or
pop
dec
mov
xorl
inc
adc
adc
loopne
add
push
or
mov
or
mov
add
jg
mov
pop
xchg
stc
ret
jmp
mov
clc
mov
addr16
xchg
push
pop
dec
lods
cmp
xchg
es
adc
ret
and
jns
push
fsts
inc
cwtl
and
add
mov
push
addl
adc
scas
push
pop
leave
repnz
stos
iret
sub
xchg
push
xor
movb
dec
mov
mov
xchg
negl
ret
test
add
and
add
adc
mov
in
and
push
push
and
dec
sti
sbb
inc
push
and
adc
cmp
jle
sbb
xor
sbb
xchg
std
sbb
push
nop
sub
or
mov
stos
adc
daa
cmp
or
add
test
jl
mov
sbb
or
dec
cmp
cmp
sbb
adc
dec
std
jo
sbb
push
loopne
xor
sti
xor
in
jle
mov
fucomp
pop
loope
test
pushf
cmp
push
fs
or
sahf
int
cmpsl
jmp
xor
push
test
add
shl
aam
out
ret
movsl
fisttpl
mov
decl
out
dec
jnp
loopne
movsb
mov
or
mov
or
push
dec
scas
cmp
lcall
movsb
push
iret
dec
or
data16
stos
pop
mov
push
popa
arpl
xchg
andl
or
push
mov
das
in
sbb
bound
movsb
pop
sbb
aam
mov
or
push
rcr
push
push
call
daa
mov
aas
call
fadds
push
insb
inc
dec
in
movsb
pop
dec
and
les
cmp
inc
js
pop
outsb
mov
sbb
rorl
icebp
sub
das
jne
sub
cmc
sub
add
xor
imul
in
lret
adc
fcompl
das
jae
inc
hlt
mov
push
adcb
xchg
ljmp
jns
mov
inc
inc
jo
mov
inc
lods
inc
push
rcr
xlat
lcall
enter
mov
pop
popf
aas
aaa
push
mov
push
mov
loope
pop
add
ja
call
mov
daa
inc
jns
xchg
fldt
cwtl
push
push
mov
fs
scas
daa
and
or
and
dec
enter
push
mov
inc
push
shll
shlb
push
or
js
mov
rcl
sub
cli
dec
dec
cmp
jle
push
icebp
lahf
or
sbb
push
js
aaa
outsb
jge
sbb
loop
fldenv
pop
bound
pop
in
jmp
aam
in
bound
call
cmp
ja
mov
and
pop
jmp
mov
iret
cmc
bound
incb
insb
ja
mov
jp
test
adc
inc
decb
fs
push
ljmp
pop
pop
sbb
push
mov
dec
cmc
in
es
imul
pop
mov
mov
push
and
adc
or
sbb
test
jnp
outsl
pop
ljmp
das
inc
push
in
sub
and
pop
lds
mov
inc
mov
inc
push
pop
scas
test
dec
mov
dec
mov
jb
js
mov
or
and
add
jb
loop
jb
into
sub
and
bound
ljmp
stos
or
rcr
aas
mov
mov
pop
jnp
inc
test
test
pop
movzbl
lret
mov
movsl
jp
xchg
push
cmpsl
or
sub
xchg
enter
and
mov
adc
lock
xchg
shll
and
int
ljmp
inc
out
or
jno
or
das
add
shrb
jp
mov
xchg
inc
mov
mov
xchg
lahf
push
loopne
inc
jno
cld
sbb
jl
stc
sbb
mov
mov
mov
jne
xchg
and
fucomip
ljmp
jns
inc
lods
xor
mov
add
cmc
add
and
lods
in
decb
mov
jbe
cmp
cmpsb
out
daa
call
sub
mov
adc
mov
ret
and
jne
or
outsl
pop
add
jmp
xor
sarl
inc
outsb
lret
out
jo
and
je
hlt
aaa
dec
xchg
xchg
repnz
sbb
mov
stos
test
jmp
xchg
gs
inc
cmp
andl
sbb
add
add
ds
ret
mov
cs
adc
lcall
cmp
fwait
or
mov
outsb
jmp
adc
cmp
push
pop
cli
adc
lcall
jo
in
jae
das
jne
mov
cmp
gs
cmp
cmp
jb
mov
mov
lret
mov
jmp
or
push
sbb
add
pop
xchg
sub
jmp
inc
jmp
jle
pop
loope
iret
inc
push
push
aad
repnz
and
call
pop
dec
jle
loop
std
hlt
popa
data16
cmc
mov
jo
xchg
jl
dec
xor
rcrl
cld
inc
push
adc
push
ret
jmp
jg
cld
pop
adc
test
lret
xor
xchg
cmp
cltd
idiv
cli
mov
pop
pop
inc
or
add
dec
cmc
pop
add
push
sub
shrl
and
mov
xchg
js
adc
and
mov
mov
adc
in
cs
inc
inc
lods
sbb
push
or
arpl
lods
je
jnp
xchg
adc
pop
sbb
mov
js
mov
insb
shrl
fistpl
mov
enter
xchg
push
xchg
inc
pushf
xor
dec
jno
cmpsl
dec
movb
ljmp
jecxz
mov
test
scas
and
add
jg
mov
inc
mov
in
data16
lods
push
into
and
add
inc
push
add
js
daa
dec
test
mov
insb
les
test
sub
das
int3
adc
add
insb
jg
push
add
and
lock
or
pop
lds
dec
pusha
adc
push
test
or
sbb
pop
or
or
xor
sub
and
xor
mov
adc
push
add
inc
or
xor
incb
mov
xor
adc
xchg
es
sbb
and
clc
push
jge
mov
push
push
call
pop
ljmp
pop
lock
in
xor
shlb
arpl
jecxz
pop
call
lods
and
xor
adc
pop
jnp
je
lcall
lcall
inc
lods
jb
ds
mov
mov
adc
pop
or
cltd
and
int3
push
xchg
pop
enter
stos
shll
inc
or
dec
loopne
or
pop
nop
sub
inc
dec
jne
push
mov
test
ja
jl
mov
adc
xor
jle
pop
xor
add
lock
subb
dec
lds
dec
pusha
sub
xchg
stc
lods
mov
jno
jae
dec
mov
call
int3
jp
popa
mov
push
dec
hlt
std
lcall
pop
and
daa
mov
hlt
adc
jo
add
adc
or
sbb
loop
inc
out
mov
movsb
or
mov
push
dec
test
or
xor
mov
pop
mov
adc
dec
daa
adc
xor
jp
dec
add
xchg
popf
pop
bound
or
addr16
adc
sahf
int3
xor
cmpsl
sub
lods
mov
popa
in
or
push
out
cmp
xchg
addr16
or
outsb
pop
inc
lret
push
push
dec
push
sub
outsl
enter
xor
or
add
add
xor
inc
scas
and
je
lcall
imul
in
push
repz
lcall
sbb
fcoml
mov
sbb
xorb
shll
push
iret
nop
mov
push
in
fldl
jmp
incl
or
jecxz
mov
stos
call
popf
push
or
sbb
xor
xchg
mov
ret
je
icebp
jo
inc
cmpsl
pop
call
out
hlt
call
pop
or
push
fcmovu
repz
jns
jge
fs
and
test
clc
imull
or
lea
mov
call
xlat
pushf
fwait
movsl
jp
nop
hlt
mov
test
je
aam
loopne
fs
adc
call
call
call
push
aas
adc
jo
maxps
xchg
test
ds
xchg
lcall
dec
pop
lds
xor
sbb
lock
in
lahf
push
xchg
hlt
call
add
pop
clc
out
pop
enter
out
enter
in
je
and
pop
or
psubd
fs
inc
test
inc
adc
xor
test
lods
shr
pop
bound
mov
and
mov
inc
mov
push
repnz
outsl
lock
sbb
pop
xchg
sub
sub
stos
dec
jb
mov
push
mov
rclb
dec
pop
mov
dec
adc
pop
je
arpl
cltd
push
xchg
cmc
mov
orl
jmp
inc
cmp
sub
out
mov
xchg
push
in
pushl
pop
shlb
out
dec
fmull
adcb
test
call
jne
fstpt
xor
testl
push
std
or
out
pushf
idiv
movsb
jns
ss
outsb
mov
mov
xorw
mov
jmp
push
xchg
push
jno
and
inc
xchg
pop
sub
mov
cmpsb
push
cmp
ds
push
call
notl
sbb
cmp
ret
ljmp
push
cld
leave
inc
fidivs
xlat
loope
sbb
xor
push
push
pop
push
jmp
fbld
stos
mov
push
xchg
into
movsl
mov
cmp
outsl
inc
or
ljmp
cmp
xchg
xchg
adc
roll
enter
bound
aas
jne
adc
mov
push
pop
in
orb
inc
sbb
sub
cmp
jne
aas
and
lret
jmp
mov
xor
adc
clc
dec
mov
mov
push
jne
mov
mov
ds
call
mov
mov
nop
stos
sub
inc
in
sub
aas
jmp
sti
iret
out
or
cmp
scas
mov
jl
mov
dec
ljmp
pop
scas
fldl
sbb
fcomp
add
mov
push
mov
cmp
nop
jb
and
ss
out
test
adc
xchg
xor
pop
sbb
pop
test
stos
cmp
push
inc
ds
shr
rcrl
cmp
and
sbb
jbe
testb
and
cmpsl
lret
sbb
inc
push
stos
push
push
pop
mov
and
mov
jno
jg
outsb
mov
adc
jne
es
jmp
inc
add
adc
sbb
add
or
lret
pop
inc
cmp
pop
adc
orl
push
clc
pop
cmp
lret
pop
imul
mov
filds
jmp
sbb
nop
xor
mov
cmp
shrb
ret
lahf
and
and
mov
mov
and
jge
movsl
mov
xchg
and
push
jmp
mov
jg
scas
mov
pop
mov
jg
pop
lods
dec
in
push
and
lock
jle
enter
inc
add
mov
mov
cmp
push
or
xchg
out
popa
push
jne
mov
pop
adc
lods
aaa
pop
pop
pop
outsb
std
mov
outsb
cmp
pop
and
cmp
mov
pop
lahf
ds
push
adc
sbb
sahf
sub
aas
push
jp
xchg
mov
push
jge
add
pop
adc
or
fmul
fdivr
sahf
lock
xchg
jmp
cwtl
cmp
push
mov
daa
testb
add
sahf
gs
enter
leave
dec
cli
pop
dec
sub
pushf
xchg
pop
adc
ds
mov
dec
enter
loope
cltd
jmp
and
dec
cmc
adc
push
and
dec
pop
push
cld
inc
cmp
mov
mov
mov
lods
lds
cli
adc
nop
jle
push
aad
sbb
xorb
adc
dec
dec
clc
xchg
cld
outsl
pop
fiaddl
xor
aam
cld
mov
adc
movsb
mov
or
xchg
idivb
or
in
repz
fcmovnb
jge
aas
xchg
in
ja
adc
fsubrs
jmp
cli
adc
pop
test
test
pop
and
xchg
call
mov
fwait
and
je
jg
dec
jne
test
jo
xchg
call
add
bnd
sahf
add
mov
leave
dec
add
lahf
cltd
in
or
add
imul
push
and
adcb
mov
incb
mov
cmp
push
sub
mov
mov
xchg
gs
inc
fs
mov
pcmpeqw
cmpsl
pop
or
jae
repnz
pop
pop
sub
inc
push
or
cmp
xchg
and
xchg
test
repnz
jge
cs
adc
xchg
insb
negl
es
incl
ret
mov
sarl
mov
div
or
jmp
cmp
sub
stc
or
daa
bound
jp
and
pop
cmp
or
movl
les
lret
std
jmp
pop
stos
adc
xchg
adc
sbb
mov
push
fstpl
dec
xchg
adc
repz
sbb
pop
pop
add
bswap
xlat
or
dec
or
and
jb
test
fwait
inc
and
insb
and
mov
mov
sub
and
cmp
loope
popl
cld
mov
ds
add
fbstp
add
add
fwait
shr
pushf
pushl
push
call
dec
dec
sbb
sbb
pop
call
scas
shrl
adc
es
and
mov
inc
or
aas
lds
mov
xlat
lds
test
mov
inc
adc
pop
filds
push
mull
das
daa
stc
fstl
push
jne
mov
movsb
sbb
xchg
add
insb
clc
dec
mov
clc
mov
call
popw
xor
cmp
xor
ljmp
dec
jmp
mov
incl
sub
inc
daa
jle
dec
xchg
in
sti
jae
push
ret
add
or
adc
sahf
cmpsl
push
xchg
movsb
ret
daa
stc
push
adc
push
clc
xlat
add
adc
mov
rolb
dec
pop
cld
cmp
push
cmc
loopne
mov
test
dec
nop
add
flds
xchg
les
leave
push
cs
fwait
add
add
lea
repnz
push
mov
sbb
mov
mov
into
imul
and
push
pop
inc
or
lea
ja
cmp
dec
out
hlt
jmp
add
test
pop
or
lahf
inc
dec
jmp
add
jnp
gs
repnz
xchg
cmpsb
incb
hlt
mov
out
loop
sbb
es
adc
sbb
mov
sub
fisubrl
sub
or
or
jge
jecxz
js
ficompl
mov
sub
stc
and
popa
pop
push
popf
and
das
bound
lret
mov
cmp
lods
es
adc
sub
jb
sub
in
pop
mov
xor
movsb
cmp
mov
mov
adc
pop
push
sbb
dec
gs
sbb
jae
cmp
cld
mov
push
add
in
add
mov
imull
test
into
adc
push
movb
divl
aaa
cmpsl
dec
loop
and
dec
pusha
out
cmp
test
psubsb
je
cmp
mov
push
inc
pop
leave
aaa
gs
adc
outsb
adc
adc
and
inc
inc
hlt
and
lock
mov
and
inc
iret
aad
push
push
shll
pop
xchg
mov
or
cmp
pop
jmp
pusha
fadds
inc
lods
outsl
pop
jnp
ret
pop
in
dec
pop
xchg
mov
popf
js
bound
jno
js
stos
mov
call
or
pop
movsl
push
push
pop
stos
xlat
mov
imul
pop
adc
scas
or
add
adc
int
nop
add
test
jmp
andl
xchg
or
sbb
jne
jle
push
jb
rolb
jb
scas
jmp
inc
sbb
or
lods
and
test
jae
mov
nop
scas
sbbb
unpcklps
mov
movsb
adc
out
mov
inc
es
xchg
ja
enter
stc
call
cmpsl
inc
ja
and
pop
cs
ljmp
sbb
xchg
sub
or
sub
insl
jo
xchg
inc
or
jp
icebp
es
icebp
in
test
push
mov
out
push
fisttps
lock
mov
pusha
in
and
inc
dec
nop
repnz
xchg
add
ja
out
mov
and
or
mov
mov
push
inc
dec
and
sub
mov
adc
stos
loop
or
scas
lods
xor
add
fwait
lret
add
mov
dec
and
xor
lods
repz
mov
jmp
sub
in
test
xchg
and
xor
fucomip
test
push
decl
test
xorps
mov
jmp
cmp
rcrl
fdivl
out
xor
addl
mov
push
daa
fmull
fmull
pop
data16
mov
clc
inc
call
cmc
or
loopne
push
xchg
mov
pop
cmp
rcll
adc
cld
repz
mov
pop
out
test
test
inc
pop
lock
push
xchg
nop
inc
clc
pop
loop
sub
js
fwait
loope
pushf
xorl
inc
adc
add
and
lods
and
dec
fcmovb
dec
in
fdivrs
sbb
push
test
jl
and
or
inc
mov
jle
pop
mov
xchg
fimuls
mov
xchg
js
adc
jl
das
push
adc
cld
push
nop
xor
imul
sub
push
adc
call
pop
sub
adc
pop
cmp
enter
lock
test
adc
push
cmp
js
pop
hlt
push
inc
push
push
mov
stos
enter
mov
lcall
inc
adc
mov
imul
adc
sub
cmc
push
mov
push
and
bound
push
mov
test
adc
jbe
scas
ds
out
and
cmpb
loope
xchg
mov
fs
adc
jne
adc
mov
add
adc
inc
cmp
inc
rclb
mov
adc
out
xchg
insb
into
adcb
out
subb
test
pop
test
data16
mov
mov
pop
es
mov
add
jmp
jnp
nop
mov
ret
cmp
adc
or
sbb
adc
mov
push
pusha
addr16
mov
aam
bound
or
add
push
push
push
call
pop
pop
mov
and
push
mov
jo
dec
pop
mov
mov
pop
ds
push
mov
pop
xchg
or
subb
call
mov
jne
cmp
dec
inc
push
call
adc
or
jmp
push
xor
arpl
pop
xchg
out
lea
push
data16
pop
jnp
sub
mov
lret
mov
mov
mov
movsl
jne
dec
mov
jge
and
pop
mov
push
pusha
ljmp
and
mov
pop
or
sahf
ret
push
pop
scas
sub
sub
and
fs
inc
add
push
pop
call
mov
adc
push
in
jecxz
fildll
push
push
mov
sbb
or
in
cmpsb
fsubs
adc
jb
xchg
push
sub
cmp
jg
dec
xchg
lock
dec
adc
in
push
push
or
mov
and
xlat
jl
push
mov
jg
jns
push
je
test
je
xor
fwait
mov
inc
xchg
sub
push
jecxz
imul
inc
sbb
adc
sub
mov
filds
and
pop
sbb
push
es
shlb
rcr
cmp
test
call
sub
dec
push
into
loop
out
jle
dec
lods
rcrl
mov
in
mov
jne
push
jecxz
pop
call
and
cli
xor
or
mov
inc
pusha
out
inc
jno
call
notb
in
test
xchg
cmp
in
push
xchg
mov
in
jge
fadds
leave
sub
jne
lcall
cmp
cmp
jmp
sub
push
shr
sub
sbb
add
dec
pop
mov
pop
xor
fstl
and
enter
jne
sub
jmp
sub
gs
or
test
movhps
loope
repz
test
push
sub
pop
fisubl
mov
imul
and
push
notb
enter
dec
imul
adc
fsts
push
inc
sbb
loopne
and
adc
in
dec
dec
loop
pushf
rcrl
pusha
sbb
inc
or
add
xchg
scas
or
popf
pop
pop
dec
push
xchg
cltd
mov
xor
push
fwait
pop
mov
inc
push
and
inc
sarl
dec
xor
add
pop
test
push
lock
fwait
mov
mov
adc
rorl
inc
sbb
aaa
pushf
mov
sub
inc
mov
xor
fildl
loopne
inc
jno
push
cmp
lods
or
aaa
fsts
and
pop
jg
je
in
mov
call
andb
or
mov
bswap
sbb
fwait
pushf
dec
loopne
inc
cmp
inc
stos
cmp
adc
mov
xchg
pop
in
fistpl
loop
adc
jns
enter
mov
je
cli
inc
shl
int3
push
pusha
mov
test
mov
or
mov
mov
mov
and
sbb
sbb
xor
insb
mov
xchg
push
popf
loope
jns
std
jg
sbb
push
pop
mov
idivl
jne
in
xchg
test
and
add
and
popa
aam
jmp
sbb
je
clc
pop
scas
movsb
cmp
iret
xchg
mov
or
xor
aaa
inc
cmovs
mov
adc
and
popa
sbb
pop
or
int
mov
jle
mov
mov
rclb
cmpsb
jmp
push
fnstsw
pop
ds
cmp
stos
jmp
dec
xchg
jle
add
mov
or
test
xor
les
add
add
push
pusha
lahf
xchg
sbb
or
fs
pop
sub
movsb
inc
cmp
jne
cmp
fsts
clc
xchg
ja
pop
enter
into
jnp
subb
xor
lea
enter
call
push
sbb
and
dec
lcall
push
imul
xchg
adcl
lea
xor
push
and
call
testl
scas
mov
mov
xchg
mov
jno
stos
inc
or
arpl
cmp
mov
push
push
leave
jle
jmp
jno
aam
or
js
adc
rcr
mov
ljmp
mov
xchg
sub
mov
sub
test
push
aad
loope
out
and
and
xchg
testl
sub
cld
loop
sub
xchg
or
pop
jmp
cwtl
jne
inc
xor
call
mov
pop
leave
scas
and
push
je
dec
jne
push
sub
cwtl
adc
xor
push
or
jge
nop
push
jle
movsb
shll
fs
jmp
cmp
and
daa
fs
sub
js
in
push
inc
sahf
and
or
icebp
push
and
cmpsb
cwtl
inc
mov
cs
andb
test
jne
bound
jmp
cmc
cltd
dec
xor
das
rcrl
xor
xor
in
addb
mov
jp
fdivp
jo
inc
mov
je
std
inc
sbb
pusha
popa
add
call
cmc
lds
mov
mov
push
push
adc
jg
or
lock
sti
push
inc
or
push
pop
int
inc
inc
cld
or
push
jle
mov
or
add
aaa
pusha
movsl
jmp
inc
inc
cmp
jbe
push
xchg
fstps
int3
sub
popf
negl
lret
orb
adc
push
sbb
sub
xchg
sub
adc
push
xlat
scas
xchg
cmp
dec
adc
mov
adc
call
prefetchnta
sbb
push
sbbb
je
xchg
cli
and
jno
push
xlat
imul
sub
repnz
pusha
pop
or
and
mov
cmpb
icebp
cmp
testb
cmp
push
push
xlat
xor
mov
pop
sbb
adc
test
fisttpll
xchg
pop
adc
and
sbb
add
mov
cmp
cmp
sbb
dec
pop
sub
hlt
sub
clc
push
aam
push
xor
sbb
inc
imul
out
mov
mov
cmp
sbb
and
sub
orb
cmpsb
adc
jno
or
inc
lods
mov
and
sbb
and
fsub
push
adc
xchg
cmp
repnz
inc
sub
test
and
adc
mov
xor
mov
mov
scas
popa
into
mov
dec
sbb
data16
push
push
inc
push
xor
add
dec
lds
imull
fisttpl
jp
insl
addr16
push
popa
dec
sbb
je
in
or
pop
dec
popa
jae
dec
adc
and
stos
jmp
test
cmp
aad
out
aaa
push
dec
jo
adc
sub
ja
cmp
out
and
sub
xor
inc
xchg
je
sbb
xchg
jb
addr16
inc
dec
jae
jae
or
dec
bound
data16
adc
cwtl
cmp
sbb
push
jle
and
xchg
ret
pop
mov
mov
add
mov
xor
push
out
mov
sbb
lahf
and
cmpsl
movsb
push
pop
mov
push
and
jl
lret
push
jo,pn
ret
das
cwtl
xor
js
outsl
cmp
or
xor
adc
mov
cld
loopne
jb
dec
ret
scas
sub
ja
subb
movsb
jno
je
push
icebp
mov
fisttpll
das
lock
leave
push
popf
movsl
cmp
shlb
outsb
push
mov
mov
int3
pop
push
pusha
insb
cmpb
test
and
adc
mov
mov
scas
xlat
std
cmpsl
sub
les
fwait
ljmp
call
hlt
mov
call
mov
test
movsl
and
and
push
sbb
mov
mov
xchg
push
mov
mov
test
lret
dec
mov
imul
lret
les
mov
push
or
imul
mov
bound
and
mov
pusha
mov
jbe
stc
aam
cmp
lods
mov
ret
mov
add
mov
mov
je
adc
mov
sub
inc
shufps
cmp
inc
push
push
bound
shrb
xchg
mov
imul
cmpsb
out
sbb
imull
dec
mov
pop
push
aad
or
call
cmp
dec
adc
lods
movsl
xlat
sti
sub
insb
add
imul
xchg
jne
push
data16
sbb
sbb
cmp
inc
outsb
mov
test
gs
scas
ret
fadd
push
inc
or
sbb
or
cmp
imul
push
cmc
nop
inc
lahf
mov
int3
and
cmp
inc
push
inc
push
mov
cltd
xor
cmpsl
test
testb
jmp
clc
mov
adc
subl
add
and
add
add
xchg
add
jmp
pushf
fidivrs
jmp
call
or
je
adc
cwtl
mov
fs
adc
mov
nop
xchg
enter
in
out
mov
mov
jo
dec
adc
ds
pop
pusha
mov
and
fildl
mov
stos
mov
add
inc
iret
enter
fwait
inc
mov
test
sbb
add
cmp
jg
bound
int3
cld
inc
out
data16
cli
push
xor
aad
mov
pop
xor
les
pop
sbb
ljmp
or
mov
popa
xchg
js
inc
fsubrs
or
push
jb
call
xor
push
jo
int3
inc
sbb
or
daa
and
adc
or
dec
sbbb
mov
add
pusha
mov
cld
lock
fs
sbb
push
jle
add
sti
cltd
push
mov
pop
test
mov
movl
adc
stc
pop
adc
jl
xor
sbb
inc
or
dec
and
or
or
or
push
or
push
or
mov
lock
cltd
adcl
add
adc
adc
or
xor
cmp
add
call
jns
movsb
dec
adc
mov
les
fcompl
xor
or
je
inc
int3
pusha
int3
mov
or
leave
push
mov
jg
nop
leave
dec
je
jae
dec
in
pop
imul
jo
cli
mov
movsl
adc
mov
das
and
fisubrl
add
or
jmp
out
cmp
movsb
leave
int3
or
rolb
imul
adc
mov
xor
in
dec
cld
inc
jmp
in
loopne
or
cmp
inc
xchg
or
mov
pushl
xchg
or
stc
repnz
xchg
or
and
inc
fdivrs
dec
mov
or
pop
push
sub
js
jge
cmp
pop
cmc
sbb
add
xchg
xor
shrb
pop
push
xor
fisttpll
mov
mov
jg
cmc
adc
xor
jg
xor
lcall
inc
inc
mov
test
mull
mov
xchg
cli
loop
sti
pop
insb
sub
xor
push
pop
loop
xor
jo
pop
or
repz
insl
push
stos
mov
jl
pop
call
push
push
lea
inc
out
fildll
xor
mov
sub
pop
sub
push
sbb
je
in
nop
or
mov
imul
adc
sbb
ss
lods
daa
mov
sahf
je
cmpsb
jnp
xchg
hlt
adc
xor
dec
xor
dec
jo
int3
and
lahf
std
sbb
loopne
inc
mov
in
cmp
jno
dec
stos
cmp
pop
enter
ss
inc
and
or
inc
pmulhw
insb
sub
xchg
std
adc
outsb
and
inc
xor
sub
subl
jp
out
outsb
lods
fs
sub
and
push
test
aaa
das
inc
les
add
mov
and
add
in
add
xor
outsl
jmp
aaa
sbb
and
sub
inc
aaa
jnp
shr
test
add
and
and
xchg
and
out
lret
movsl
mov
aad
pusha
mov
jmp
hlt
adc
jmp
pusha
or
xor
fs
mov
loop
pop
lcall
cltd
xchg
mov
and
or
sbb
lea
cmp
push
icebp
jne
xchg
imul
iret
sub
xchg
std
xor
add
gs
sub
xor
sbb
sahf
out
fistl
push
rcrl
loope
or
pop
ror
and
push
and
loopne
and
jmp
or
xchg
stos
inc
pushl
push
inc
push
mov
jmp
es
sub
mov
jp
enter
xchg
inc
add
xor
mov
mov
or
mov
mov
jp
cmp
lahf
sub
sbb
inc
adc
sub
inc
jge
push
lcall
ret
jne
and
pusha
outsb
pop
sub
cmp
into
or
sbb
hlt
xchg
cmovo
sub
popa
pop
jmp
push
mov
xor
js
jg
insb
int3
inc
ret
push
dec
testl
and
adc
push
add
cmp
jb
shll
cld
xchg
pop
in
adc
mov
xchg
das
and
pop
pop
inc
inc
repnz
xchg
pop
xchg
std
in
add
pop
cmp
jbe
cmp
daa
cltd
std
shr
add
mov
add
pop
popf
mov
cltd
xor
fistpl
pop
stc
imulb
movsl
pop
stc
xchg
push
nop
test
lea
jp
pop
push
psubw
inc
xor
mov
mov
fldl
subl
jmp
dec
idivl
sbb
sbb
fadds
inc
and
mov
adc
sub
cld
add
ja
dec
add
test
daa
mov
xchg
or
inc
xchg
push
inc
scas
lea
call
xchg
out
cmp
jo
cmp
cmp
xchg
mov
call
fcomps
call
inc
sub
push
add
daa
es
jle
adc
mov
push
outsl
jno
stos
dec
xor
fcompl
lea
pop
call
xor
xor
pop
ljmp
cmpb
js
out
addr16
fcoms
rorb
nop
add
push
in
add
pop
imul
fisubrs
aad
sbb
adc
pusha
mov
mov
dec
subl
sub
insb
add
scas
je
or
sbbb
aad
imul
push
pop
mov
adc
pop
fdivrs
jg
sub
and
xchg
clc
insb
xchg
aam
mov
call
aad
lods
push
mov
pop
xchg
inc
enter
add
pop
xor
lret
nop
pop
mov
je
cltd
sbb
popf
xorl
and
mov
adc
dec
sti
add
orl
das
les
inc
mov
lahf
sti
cmp
ljmp
and
ficoms
xor
and
aas
xor
rcrl
cs
lret
inc
out
xor
cmc
xchg
rorb
call
cmp
movsl
pop
adc
xchg
dec
popa
cmp
lds
pop
rolb
xor
or
pop
xchg
mov
cmp
ss
push
cmp
ss
je
jp
and
adcl
push
pop
insl
inc
ljmp
mov
test
data16
and
push
je
cmc
or
cmp
adc
fdivl
test
xor
xor
adc
and
and
mov
movsb
lcall
gs
push
lock
xchg
je
inc
or
jg
mov
nop
mov
cmpsl
add
push
cmc
jp
pushf
and
dec
sub
add
inc
adc
sbb
xchg
mov
call
dec
fstps
fldenv
pop
push
dec
cmc
ds
cltd
jnp
outsb
sub
mov
nop
push
imul
loop
and
or
mov
or
dec
loop
jmp
ljmp
aam
mov
pop
test
out
lret
lds
inc
xchg
clc
fstps
or
push
movzwl
xlat
mov
cmp
subl
inc
mov
xchg
xchg
adc
xor
jp
insb
sbb
call
and
jmp
inc
or
jmp
test
and
cmc
or
add
imul
add
xor
mov
mov
jae
mov
les
stos
popa
and
or
insb
inc
sbb
rorl
mov
pusha
sbb
xor
adc
push
cmp
xor
dec
insl
popa
and
sti
mov
in
clc
hlt
adc
lcall
or
or
bound
pushf
adc
pop
hlt
and
xchg
xchg
lahf
in
cwtl
shlb
jno
inc
sbb
movsb
shlb
out
inc
mov
aad
adc
sub
jnp
sbb
sub
xor
cmp
stos
inc
bound
je
dec
xor
ret
mov
or
or
je
and
and
pop
and
rclb
sub
adc
xor
mov
int
cmp
test
sub
sbb
add
jmp
inc
adc
std
aad
inc
rorb
lds
and
xchg
loope
daa
mov
xor
repnz
incl
adc
push
outsb
mov
mov
sub
inc
sub
sub
and
mov
fcompl
daa
or
push
subl
mov
outsb
adc
dec
push
xchg
test
scas
les
stos
inc
in
add
out
inc
lds
or
mov
cmp
push
dec
adc
outsl
aam
jns
pop
xlat
stc
test
sub
xchg
test
test
stos
cmpsb
divps
sbb
or
push
call
je
loope
pop
shll
pop
ja
ficoml
pop
mov
sub
inc
xor
clc
add
push
jg
sbb
pop
popf
sarl
pop
or
inc
dec
adc
mov
mov
and
in
jb
or
sub
into
or
and
cmp
loope
lds
dec
in
shl
pop
inc
in
dec
shlb
nop
mov
and
push
push
push
cld
mov
cmp
lock
dec
push
lods
or
push
push
inc
sub
popf
repnz
xor
imul
jmp
insb
pop
pop
push
movsl
loopne
pop
mov
mov
cmp
xor
into
pop
gs
ret
sahf
inc
cmp
lock
popf
icebp
xchg
pop
pop
scas
aaa
adc
lods
lods
pop
pusha
add
mov
mov
mov
fbstp
and
push
out
mov
push
pop
in
or
cmpb
or
adc
sub
xor
sub
pop
loop
push
inc
mov
sbb
mov
rcrb
ljmp
mov
inc
dec
jmp
dec
lahf
ficoms
jo
push
mov
movsb
adc
movsb
sub
scas
xor
les
or
sub
xchg
testb
adc
mov
cmp
sbb
or
test
lods
orb
sbb
int
hlt
aam
gs
cmp
fimuls
daa
lahf
inc
rorl
and
pop
sub
lds
call
inc
push
push
outsl
pop
clc
negl
push
mov
cmp
fcompl
sub
adc
pusha
adc
lock
imul
dec
mov
mov
pop
push
dec
sbb
push
sbb
jbe
jmp
inc
and
adc
into
dec
jl
subb
subb
or
push
out
push
hlt
repz
xchg
mov
xchg
sarl
jmp
sub
loop
sub
cmp
mov
pop
out
cld
xchg
lds
dec
xchg
sbb
daa
call
mov
call
pop
lods
out
dec
fisttpl
aad
or
loope
or
stc
jns
inc
lahf
mov
cmp
mov
adc
fldl
mov
andl
xchg
cmpl
sbb
lret
sbb
scas
mov
inc
adc
xor
inc
and
xor
inc
push
call
mov
outsb
or
std
inc
mov
fwait
adc
adc
sub
pushf
mov
std
cmp
popa
dec
cmp
test
adc
sti
xchg
daa
roll
cmovge
mov
push
adc
loop
adc
sahf
jp
cmp
adc
mov
jle
mov
das
lret
lahf
jge
sbb
cld
jmp
push
dec
push
rcr
inc
nop
or
dec
pop
dec
or
adc
adc
fwait
jp
inc
or
adc
hlt
repz
or
mov
nop
inc
jl
or
call
mov
mov
pushl
xor
and
sbb
adc
dec
cmpb
decl
test
dec
jb
mov
push
pop
adc
dec
xor
pushf
mov
jae
mov
and
dec
test
pop
repz
popa
or
in
insl
adc
push
jo
mov
pop
int3
out
fisubs
hlt
adc
inc
cmp
std
jp
movsl
sub
out
iret
and
inc
fbld
and
pushf
insl
xchg
or
je
cmp
jne
insb
iret
call
in
mov
or
jle
sub
push
je
rcll
inc
addb
jge
icebp
mov
sbb
das
inc
push
and
negb
pop
or
xchg
sbb
cmp
ret
adc
mov
ret
adc
sbb
or
and
sub
dec
in
inc
or
push
leave
and
xchg
nop
movb
sub
and
cmpsl
dec
sbb
pop
popf
cltd
sbb
pop
sti
pop
mov
out
cmp
or
inc
sub
and
in
jge
fcoml
adc
lret
cs
jmp
xor
fldenv
push
mov
and
movsl
mov
mov
hlt
cli
push
stos
xchg
xor
pusha
and
out
sahf
jmp
mov
les
loope
inc
push
gs
fs
mull
mov
jbe
clc
cltd
testl
mov
hlt
inc
daa
cmp
int3
leave
dec
jg
xchg
mov
lods
mov
je
js
test
mov
mov
fsubrs
jl
or
sub
xor
and
jmp
and
pop
popa
ret
xor
sub
loope
and
and
mov
xchg
enter
sbb
dec
lret
sbb
jns
sub
add
clc
lret
dec
jg
cltd
dec
aad
cmp
jmp
jno
insl
call
shlb
dec
jne,pt
in
bound
pusha
pop
shl
call
es
xor
dec
adc
dec
add
adc
or
dec
jmp
or
mov
dec
leave
jle
lock
or
cmp
mov
push
xchg
sub
das
cmp
dec
ret
stos
pop
mov
enter
inc
int3
call
pop
aas
mov
pop
add
pop
inc
das
inc
dec
mull
test
imull
repnz
je
ljmp
push
xor
sub
jne
aas
push
pushf
or
add
jmp
sbb
daa
sbb
mov
cmp
daa
ret
or
pushf
hlt
rol
xor
js
xchg
ffreep
pop
sbb
add
sbb
and
xchg
push
sbb
inc
push
mov
pop
sub
into
aaa
aad
or
adc
mov
jae
out
and
adc
lcall
in
int3
daa
push
sahf
mov
push
xlat
add
cmp
push
lds
sbb
das
out
sub
push
xchg
dec
add
je
popa
jo
or
gs
es
lea
mov
mov
in
adc
jno
mov
or
test
sbb
pop
and
push
mov
call
push
aam
add
xchg
and
sub
dec
leave
hlt
insl
popf
movsl
ss
and
jo
jg
xor
stos
push
pop
dec
adc
cmpsl
aam
popa
sbb
and
mov
test
test
call
jle
adc
mov
stos
sub
sub
xor
mov
xchg
pop
mov
adc
sub
enter
rorl
xlat
push
sbb
adc
les
jmp
bound
cwtl
mov
sub
pop
repnz
repz
inc
loop
push
jl
jnp
xchg
jg
dec
dec
in
popa
xor
pop
inc
in
dec
jne
sbb
push
scas
and
lea
popa
pop
rcll
jge
gs
lret
pop
or
pushf
sbb
sub
cmpsb
fmuls
hlt
sbb
sbb
fisttpll
xlat
imul
cmpsb
insb
jl
push
inc
sub
mov
sbb
mov
add
lods
movsb
push
daa
imul
bound
icebp
sahf
mov
sbb
addr16
icebp
out
adc
mov
adc
sbb
add
repnz
inc
and
das
mov
add
mov
jne
sbbb
dec
cmp
mov
out
ds
es
pop
out
or
cmp
nop
sbb
xchg
dec
ret
xor
mov
and
iret
adc
faddl
les
cmp
test
sbb
dec
sbb
cmpsb
insl
dec
sbb
and
sbb
test
data16
sub
xchg
push
sarb
inc
dec
jmp
inc
shr
popa
gs
or
aaa
xlat
fs
adc
out
xor
mov
mov
and
lods
cli
add
int3
xchg
or
dec
xor
sbb
cmp
jne
mov
xchg
push
sub
cmpsl
or
pop
out
jne
jmp
cmpl
cmp
push
popf
or
pushf
sbb
add
push
inc
push
jns
test
popa
push
and
mov
and
into
inc
jnp
popa
jg
adc
pop
inc
inc
fs
je
idiv
and
cmp
adc
xor
pop
outsl
or
test
ss
clc
sbb
mov
mov
ljmp
xor
sbb
cmpsb
push
and
je
inc
jns
sbb
add
arpl
int3
je
mov
shll
adc
icebp
repz
pop
push
jb
scas
mov
incl
ret
push
pop
and
fildl
or
adc
mov
mov
inc
push
mov
jle
rcll
push
jbe
test
push
or
dec
push
loope
or
lods
pop
iret
or
std
pop
loop
xor
add
or
jmp
jb
and
inc
outsb
scas
lods
adc
add
inc
dec
outsb
rol
lds
nop
insb
ret
or
inc
out
movsb
popa
imul
push
and
mov
outsb
or
fisubrs
push
add
lods
mov
adc
xor
fucomp
jbe
or
dec
nop
jle
insl
aas
pop
push
cmp
out
cmpsb
mov
test
add
nop
mov
fiadds
popa
ja
xor
repz
out
inc
mov
adc
adc
jns
mov
adc
addr16
in
pop
addr16
nop
jo
insb
sbb
fs
mov
out
mov
ja
mov
adc
mov
and
push
call
fimull
mov
adc
add
push
ja
push
pop
in
inc
inc
rolb
pop
and
movsl
cmc
shr
insb
mov
movsl
repz
push
inc
or
das
scas
sub
movsl
or
in
rcll
jmp
sbb
sub
inc
frstor
es
adc
aaa
mov
mov
add
call
xor
les
fs
test
int3
inc
orb
mov
ss
loopne
fimuls
data16
orb
dec
call
or
mov
lahf
dec
les
jns
data16
data16
and
std
adc
sub
adc
cmp
xor
cltd
xchg
adc
lods
shl
pop
inc
cmp
aas
cmp
call
bound
jns
stc
nop
push
nop
loopne
add
or
push
cmp
cmpb
out
out
lret
xor
pop
cs
push
mov
push
adc
pop
push
out
arpl
movsb
pop
inc
popf
add
andb
aam
pop
shld
mov
in
stos
daa
sbb
shlb
mov
dec
push
mov
inc
subb
dec
fistpl
add
inc
ss
nop
aad
imul
cmp
push
imul
mov
dec
mov
jae
es
inc
arpl
add
xchg
gs
ja
stos
jbe
cwtl
mov
cmp
push
pop
xchg
mov
das
sbb
fsubs
fwait
xchg
push
sahf
and
push
aas
sbb
movsb
inc
js
jmp
inc
inc
popa
jo
flds
dec
pop
mov
push
or
lods
inc
in
pop
test
or
push
sub
cmp
mov
push
inc
inc
cmp
fnstcw
inc
fistps
enter
aas
dec
loopne
inc
or
outsl
das
jne
in
es
cmovbe
jns
cs
cmp
add
sahf
sti
dec
btc
out
inc
aaa
and
and
mov
inc
cmp
mov
add
push
popa
and
and
dec
adc
xchg
cmp
adc
or
inc
adc
xor
adc
clc
push
imul
mov
inc
rcll
inc
dec
outsb
inc
insb
loope
imul
pop
outsb
nop
cmp
adc
loope
insb
dec
cwtl
pop
dec
cli
inc
loope
movsl
dec
cmp
xor
xchg
repnz
inc
outsb
pop
pop
ret
in
sbb
sub
dec
sub
js
fs
dec
outsb
xchg
pop
sub
inc
insb
push
mov
and
or
fsubl
test
stc
cltd
dec
cwtl
jno
lods
adc
les
add
dec
push
adc
inc
bound
jmp
or
xor
and
xchg
add
dec
lahf
lock
loopne
xchg
lock
and
pusha
sarb
hlt
jbe
jp
mov
lods
js
test
adc
adc
or
pushf
jmp
cmp
mov
add
shlb
jnp
pop
pop
cs
pop
xchg
mov
sub
add
jb
sub
btc
test
xchg
adc
jg
dec
pop
outsl
dec
pop
inc
pop
test
rolb
mov
or
movsb
or
mov
js
push
pushf
shrb
ret
add
pop
es
or
ficoml
add
push
das
scas
push
mov
orl
jo
xchg
std
sub
push
push
sahf
mov
inc
mov
jno
mov
fmulp
pop
push
add
je
ss
sbb
or
xchg
xchg
sub
dec
insl
movsb
lcall
cmp
push
outsl
pop
dec
sbb
xchg
adc
dec
push
mov
or
and
jmp
lds
add
fidivrs
cmp
sub
dec
js
scas
adc
js
rol
and
adc
adc
adc
or
movsb
loop
in
shll
adc
aas
and
or
test
push
xor
sbb
cmp
lds
in
je
cltd
lock
push
aaa
adc
mov
mov
mov
pop
repnz
pop
test
test
or
push
lods
jne
or
test
inc
push
xchg
xchg
divl
xchg
and
dec
mov
das
mov
cmp
adc
scas
cld
call
and
push
dec
mov
das
orl
arpl
xor
or
jnp
mov
adc
xchg
xor
xor
cmp
inc
inc
inc
inc
inc
add
dec
dec
dec
dec
dec
dec
add
push
push
push
push
push
push
add
pop
pop
ja
adc
mov
std
cltd
ss
daa
adc
add
inc
fs
mov
lock
enter
and
in
adc
das
jae
mov
inc
xor
imul
sbb
sar
mov
outsl
and
add
cmpb
imulb
push
lret
cmp
pop
enter
iret
sbb
cmpsb
les
sbb
shl
mov
dec
lea
xor
adc
mov
adc
mov
mov
sbb
xchg
push
adc
xor
pop
sbb
cmp
sub
xchg
lock
and
sbb
je
or
outsl
mov
wbinvd
xchg
mov
mov
pop
inc
jge
adc
dec
enter
lahf
adc
mov
cmp
nop
cli
and
inc
mov
mov
pop
hlt
mov
int3
adc
jmp
adc
mov
test
or
insb
and
or
add
jmp
jno
sub
aaa
ret
adc
push
fs
pusha
inc
sub
adc
outsl
test
jne
inc
loop
js
dec
mov
sbb
int
or
incb
aaa
out
test
sub
fbld
jl
stos
dec
mov
cmpsl
adc
xchg
inc
mov
xchg
bound
mov
test
ja
daa
dec
cmpsb
or
adc
adcl
mov
xor
push
jecxz
ljmp
call
push
call
dec
pusha
sbb
pop
cmp
jl
cmp
or
adc
adc
dec
std
push
rcl
cmp
stos
and
mov
mov
enter
mov
fnsave
dec
call
shrb
andl
cmp
lahf
mov
idiv
inc
sub
imul
add
and
out
xor
movsl
sbb
lret
jns
or
test
ret
popf
frstor
sub
mov
iret
icebp
dec
lods
dec
lds
dec
xor
or
jmp
or
arpl
cli
fadds
sahf
mov
or
cmp
or
cld
or
mov
lds
fmuls
or
inc
mov
ret
dec
sbb
cmp
inc
sub
inc
pop
and
das
push
and
mov
mov
mov
pushl
fistpl
sbb
pop
add
arpl
cmp
jg
mov
addr16
cli
stos
popf
push
add
insb
ffree
xlat
cmpsb
mov
outsl
sar
jmp
jns
out
xchg
push
adc
lock
xchg
jno
xor
sbb
or
aam
pop
sbb
jle
clc
scas
gs
and
xchg
pusha
cld
sub
jle
subl
jmp
xor
lds
adc
cmp
call
xor
ljmp
xor
idiv
cltd
sbb
jecxz
pop
gs
mov
and
sub
sbb
in
insb
adc
in
add
or
jne
ss
push
iret
dec
enter
push
sbb
mov
ja
pushf
and
sti
push
roll
movl
cmp
xchg
shrb
loopne
sahf
lret
lret
push
xchg
adc
in
inc
mov
lods
std
dec
mov
cmp
sbb
pop
sub
adc
push
testl
or
xchg
mov
adc
pop
inc
imul
dec
sbb
xchg
int3
test
xor
pop
repnz
cs
cmpsb
and
sbb
daa
jnp
aad
nop
sbb
movsb
insl
insb
inc
movzbl
cmp
jo
repnz
pop
or
mov
adc
lret
sub
imul
insb
pusha
movsb
int3
push
hlt
cld
sti
stos
call
add
fs
cmp
pop
into
and
js
and
test
hlt
mov
mov
or
call
mov
pop
call
lods
xor
push
xchg
jge
aam
or
push
xchg
in
and
jne
pusha
lods
inc
movsl
and
xor
stos
call
and
mov
popa
lret
movups
push
movb
or
inc
add
call
data16
loope
cmc
inc
sub
stc
or
sti
fs
mov
cmc
test
cld
sti
cs
or
call
popa
mov
sbb
pop
ljmp
and
loope
and
lods
mov
or
subb
pop
push
dec
push
jg
cmpl
push
adc
enter
ds
aad
push
das
pop
push
xlat
clc
push
js
js
sbb
loope
adc
xor
rorl
mov
xor
xchg
add
add
inc
dec
ss
push
add
pop
std
cld
sti
sbb
test
out
mov
adc
cmp
inc
or
or
push
mov
xor
cmp
pop
dec
add
dec
fucomi
dec
pop
add
pusha
add
jae
neg
or
ds
and
mov
dec
and
ret
mov
push
push
and
cmc
fildll
xor
adc
jle
js
push
xchg
stc
push
movl
lret
aas
call
cli
fadds
adc
cmpb
and
dec
push
mov
dec
inc
pushf
inc
in
xor
das
sbb
adc
mov
loope
xor
loopne
ret
test
jmp
add
jbe
pop
cmp
pop
leave
pop
dec
dec
or
lea
in
ret
dec
cmp
jecxz
and
xchg
xor
cmp
sub
je
xchg
cmp
daa
shll
mov
xlat
xchg
and
test
mov
movsl
imul
inc
mov
or
push
adcb
push
ret
call
cmp
xor
push
test
cmp
adc
xchg
inc
cmp
lock
jnp
ds
jns
lea
mov
leave
lock
and
sub
push
jae
inc
jmp
pop
mov
ret
sbb
cmpsl
adc
and
cmp
or
xchg
lods
cltd
pop
jle
adc
jmp
jmp
pop
sti
iret
enter
or
sub
adc
dec
xor
gs
test
dec
in
in
cmpsl
rcrb
fstpt
inc
lods
idiv
and
data16
pop
inc
lods
das
and
sub
std
jno
call
mov
dec
bound
imul
popf
inc
les
jno
or
inc
jbe
fs
jno
insb
sbb
into
jg
and
jge
sti
adc
or
jle
xor
sbb
jne
nop
outsb
pop
push
and
andb
insb
cmp
or
pop
rcrl
call
mov
sbbl
inc
pop
scas
sbb
pop
mov
sbb
jp
fimuls
inc
movsb
cli
mulb
out
jne
add
stc
addb
stos
adc
insb
cmpb
dec
adc
xor
ret
jnp
cld
ja
and
xchg
push
dec
push
inc
fmuls
mov
sbb
inc
sub
jg
xorb
gs
jo
add
cmc
or
and
xchg
cmpsb
lods
adc
jmp
or
push
jmp
mov
jb
repnz
cmp
fsts
call
mov
inc
sub
or
jge
jge
xor
pop
aas
jae
mov
into
xchg
add
xchg
xor
test
add
jne
mov
or
cmp
adc
xchg
and
push
add
and
or
sub
fwait
std
cmovle
js
cmp
xor
push
or
dec
imul
dec
scas
xchg
loopne
sub
jb
push
jne
lret
xchg
fstl
hlt
mov
enter
inc
xchg
inc
fwait
push
or
loope
push
fcomps
arpl
divb
jecxz
test
add
adc
mov
and
fsubl
addl
mov
add
and
stos
and
add
push
push
or
mov
dec
mov
sub
inc
or
xor
jno
das
push
es
lret
mov
call
push
jg
test
xchg
inc
std
hlt
inc
and
dec
cmc
cmpsl
mov
push
imul
xor
cmpb
mov
int3
js
test
out
mov
insb
insb
pop
in
cmp
enter
jle
add
push
insb
add
mov
and
jmp
add
cltd
dec
hlt
hlt
mov
sarl
or
lods
add
xchg
test
mov
inc
adc
push
je
mov
sti
xchg
std
lock
cmp
mov
es
ja
loop
adc
cmp
cmp
dec
inc
inc
gs
push
loope
pusha
sub
clc
pop
cmpsb
lock
and
loop
adc
lock
pop
loop
testl
lahf
je
pop
xchg
ret
sub
sub
push
aas
inc
cwtl
dec
push
and
or
sbb
xchg
adc
pop
loope
or
out
fistps
mov
scas
or
mov
adc
test
add
loopne
adc
mov
inc
daa
data16
or
push
loopne
sub
js
add
inc
iret
lods
movsl
inc
sbb
imul
mov
mov
adc
das
rcrl
cmp
loope
mov
push
or
enter
mov
lock
jg
sub
ss
clc
inc
add
lcall
popf
push
inc
dec
cmp
mov
rclb
adc
rcll
xchg
push
jl
dec
and
jecxz
add
dec
cmp
inc
sub
sahf
xchg
jne
xor
mov
shlb
lods
pop
shlb
test
add
xor
sti
mov
adc
xchg
add
dec
lock
rolb
pop
xor
cmp
or
jmp
sub
add
pushf
mov
push
cld
mov
sbb
dec
or
push
cld
and
ret
mov
and
mov
sbb
xor
bound
or
loopne
inc
insb
inc
cwtl
adc
and
mov
mov
lock
lahf
jo
jmp
cmp
ss
es
jns
or
dec
dec
and
cmp
leave
or
cmp
add
pop
add
pushf
mov
dec
test
hlt
dec
push
sub
cmp
dec
jns
test
int
jmp
add
mov
or
inc
jnp
pusha
mov
mov
jmp
mov
add
cli
lret
pop
fimuls
sahf
leave
sbb
dec
fwait
pop
nop
adc
mov
cwtl
mov
sub
dec
or
hlt
sub
mov
jg
inc
push
sub
sub
inc
clc
add
lock
insl
stc
inc
dec
imul
jp
push
test
pop
call
loope
inc
or
test
xor
lea
out
xor
inc
dec
lods
jnp
sub
out
ret
mov
and
lea
lock
mov
cltd
xchg
hlt
pop
push
cmpsl
clc
into
cmc
xor
rcrb
pop
movsl
stos
adc
mov
and
imul
dec
clc
push
push
ret
in
adc
mov
push
sbb
and
gs
push
hlt
and
movsb
pop
cld
and
xchg
jne
sub
sub
sub
mov
jge
and
lock
out
and
cmp
cld
sub
mov
push
and
push
push
loopne
and
jmp
xchg
xchg
mov
mov
cmp
ja
adc
pushf
mov
inc
movsl
sub
shl
xchg
and
mov
cmpsl
sbb
jmp
outsb
stos
fs
add
mov
dec
jne
adc
inc
or
call
ficomps
dec
cmp
call
pop
sbb
pushf
pop
sub
or
movzwl
test
fwait
jno
mov
jmp
enter
adcl
loopne
daa
adc
outsb
popa
mov
cli
fmul
xchg
sub
adc
pushf
or
add
test
iret
xchg
jg
call
and
inc
test
dec
in
cltd
cmc
cmpsl
cld
or
je
lds
cli
sbb
sub
push
sbb
das
adc
enter
sbb
popf
push
xchg
inc
xor
jmp
xchg
sbb
and
bound
sbb
bound
push
in
dec
daa
in
fs
xchg
hlt
push
dec
jo
dec
xchg
sbb
cmc
inc
sti
int
fidivrl
jp
dec
je
or
mov
or
push
and
rcrb
addl
cmpsb
cmpsl
mov
and
js
dec
mov
fcoms
fdiv
sti
add
sub
or
movsl
and
cmpsl
sbb
xchg
je
push
ret
jg
mov
clc
bound
cmp
push
xchg
loopne
adc
adc
or
cmp
icebp
aam
push
adc
xor
test
lret
icebp
insl
adc
or
mov
popa
dec
clc
push
icebp
test
sbb
push
clc
lds
and
loop
aad
loop
js
jo
addb
sbb
inc
jecxz
xchg
ljmp
cltd
test
xor
cmp
mov
xor
sub
lret
scas
loop
mov
adc
sbb
mov
inc
sub
xor
lret
adc
orb
adc
jo
popf
adc
pop
adc
mov
fcomp
push
mov
jbe
clc
dec
movsb
cmp
cmp
test
adc
and
pop
test
adc
les
in
sub
pop
inc
push
repnz
test
fmull
movl
call
cwtl
sub
push
push
loopne
mov
sbb
and
push
or
jmp
xlat
in
inc
add
cmp
loopne
mov
fsubrs
push
call
push
rolb
stc
or
xlat
jmp
rcl
fisttpll
into
or
repnz
mov
movsl
fwait
mov
iret
call
push
jle
stc
push
and
inc
addl
pop
dec
enter
adc
sub
push
mov
cmpl
xchg
sub
je
lea
dec
cld
pop
mov
xor
sbbl
and
and
dec
dec
jge
fdivs
mov
vcvtsd2si
pop
add
push
fs
cwtl
pop
jmp
inc
hlt
cmpl
js
adc
jmp
or
rorl
shll
pop
dec
int
jg
loopne
les
addb
add
push
lea
pop
scas
mov
mov
mov
xchg
xchg
rorb
jo
dec
and
dec
xor
push
jbe
nop
call
movsl
add
push
inc
je
xchg
pop
repnz
cltd
movl
add
les
pop
mov
adc
mov
sub
inc
xor
cmpsb
in
bound
pop
add
mov
push
inc
jbe
aas
jg
enter
movsb
sbb
mov
xor
pop
push
enter
xchg
shll
push
ret
test
pop
mov
test
push
sbb
xlat
loope
mov
or
sbb
push
addr16
cltd
inc
push
daa
add
dec
or
addl
dec
test
aad
movsb
andb
lret
jns
test
pop
push
pusha
in
divl
jg
dec
sbb
call
ljmp
lods
imul
or
cmc
test
and
jmp
or
mov
loopne
push
jnp
mov
in
popf
xlat
sub
test
add
je
inc
std
scas
jecxz
and
xor
mov
jns
adc
call
test
daa
adc
push
pop
ret
mov
std
mov
and
mov
or
outsl
aas
std
push
xchg
cli
add
call
adc
lahf
dec
ret
push
es
jne
cld
mov
pop
test
sub
lahf
call
pop
push
sub
fcoms
or
aas
cmp
xchg
frstor
js
sub
clc
lock
cmp
push
cli
popf
hlt
daa
mov
jne
dec
push
xor
insb
inc
cmp
clc
push
inc
inc
push
sub
addr16
mov
or
cmpsb
push
jnp
aam
and
subl
loop
xor
sub
pop
ja
or
cwtl
test
addl
idivl
pop
mov
aas
je
xor
adc
and
jnp
mov
xchg
sub
mov
cmp
mov
cli
shlb
mov
dec
adc
pusha
test
add
loop
enter
or
add
push
scas
mov
jp
das
loopne
shll
pusha
mov
int
or
fisubrs
lock
popf
popa
dec
inc
inc
inc
lods
sub
or
mov
call
daa
ret
push
inc
sub
mov
cmpsl
cmc
push
int3
xchg
orl
aas
je
sub
loope
cmp
inc
add
loopne
pop
js
daa
mov
push
aas
loop
ljmp
std
xchg
xchg
dec
ljmp
sbbb
ficoms
or
jbe
icebp
pop
enter
sbb
jg
dec
test
sar
outsb
dec
inc
and
mov
push
dec
adc
push
pusha
outsb
fimuls
lcall
loop
xlat
ror
or
or
adc
pcmpeqw
pop
adc
sti
add
dec
test
jl
cs
sti
aad
adc
movsb
aam
pushf
inc
lret
adc
les
sbb
test
and
pop
pop
in
and
jns
xchg
inc
lods
pop
pop
test
mov
mov
movsl
push
mov
scas
testl
loopne
adc
test
mov
jl
inc
rorl
adc
or
test
scas
xor
sub
xchg
or
mov
fs
push
adc
jne
ss
das
cmpb
test
jne
cmpb
jecxz
cld
dec
and
push
jne
cmpsb
sbb
ja
and
adc
xor
addr16
scas
dec
pop
rcll
sub
dec
ret
and
xor
sbb
push
push
xor
mov
jmp
xchg
push
add
popf
push
shrb
je
in
ja
xchg
lock
icebp
dec
inc
dec
sbb
adc
sub
pusha
fcmovbe
inc
jmp
shlb
mov
shl
pushf
adc
repz
jp
adc
xchg
jo
xchg
out
es
dec
xlat
jb
and
sbb
mov
loopne,pt
cwtl
lahf
or
shr
int3
test
jmp
mov
orb
sub
xchg
pop
dec
mov
pop
lcall
dec
pop
push
or
or
inc
call
mov
dec
sbb
pop
idiv
nop
out
or
sti
jno
or
cmp
popa
push
pusha
out
test
sti
bound
jp
xor
rcr
mov
inc
dec
ficoml
jne
cmpsb
dec
je
jmp
lock
inc
adc
dec
movsl
push
popa
push
jp
ds
push
dec
je
add
mov
and
call
test
leave
push
aaa
stos
lret
or
push
aas
loope
std
repnz
out
aam
pop
call
and
mov
ret
jne
cwtl
mov
jo
mov
cmp
cmp
cwtl
pop
xchg
or
aam
adc
cs
insl
and
mov
sti
xchg
ret
test
push
mov
xchg
xchg
sbb
das
call
stos
mov
leave
push
imul
mov
nop
xorl
js
jbe
mov
insb
jns
adc
or
in
sbbb
addb
aas
sub
push
inc
insb
cli
scas
aas
dec
inc
mov
out
aaa
xor
data16
pop
push
jge
cli
xor
xchg
mov
stos
mov
test
sub
mov
loope
xor
cmpsl
adc
idivl
xchg
stos
mov
xlat
sbb
shll
adc
cmpsl
dec
mov
and
in
jg
cmp
xor
enter
inc
idivl
stos
fisttpl
sub
xor
push
jne
push
push
nop
or
mov
mov
hlt
inc
pop
pop
xchg
movsb
adc
inc
adc
push
mov
adc
mov
pop
in
or
mov
pusha
daa
mov
js
std
xchg
sbb
testb
aad
push
jl
data16
cli
loop
mov
cmpsl
jmp
push
and
or
imul
pop
int
or
pop
sbb
js
gs
mov
adc
roll
call
dec
cmp
cmp
ret
sub
inc
xor
rolb
into
out
call
shrl
loop
jb
xor
imul
add
call
je
push
jecxz
push
call
mov
dec
iret
xor
sub
cwtl
pop
out
mov
sub
push
xchg
adc
fisubrl
adc
les
in
imulb
adc
push
cmp
xchg
dec
pop
sub
adc
cmp
data16
loop
sub
popf
mov
xlat
icebp
push
jmp
into
aas
dec
xchg
or
or
push
call
aad
sub
lret
push
mov
or
and
adc
stc
cmp
dec
jne
clc
das
pop
xchg
add
xchg
enter
push
jp
ljmp
xor
lahf
loopne
and
leave
dec
jle
bnd
les
enter
sbb
ds
or
cld
aam
and
cmp
sbb
movsl
daa
dec
inc
add
adc
push
iret
jmp
call
mov
lods
and
fstpl
pop
fiaddl
jbe
xchg
aam
push
add
push
adc
mov
pop
sub
and
mov
aam
rolb
or
add
mov
jge
push
inc
imul
sbb
and
mov
push
push
imul
je
inc
fsubrs
lret
xchg
cmp
cmpsl
cmc
mov
xlat
mov
imul
sti
sub
movups
in
push
popa
or
test
push
jmp
mov
add
mov
cmpb
pushf
loopne
mov
push
adc
imul
les
xor
inc
mov
adc
nop
das
lea
les
mov
push
jnp
sbb
cld
push
jge
cmc
mov
adc
popf
mov
fmulp
xchg
loopne
out
jmp
xchg
or
scas
pop
inc
or
dec
gs
cmp
xchg
inc
scas
or
rcrl
mov
adc
cmp
sti
mov
gs
jb
xchg
enter
xchg
call
insl
push
dec
xor
pop
fs
movsb
push
int3
call
bswap
in
cmp
data16
inc
icebp
xlat
movl
xchg
cmc
adc
pop
jmp
adc
xchg
mov
inc
es
enter
jo
add
inc
jmp
push
int
xor
inc
frstor
mov
cmpsb
add
sti
mov
in
sbb
outsb
push
fwait
mov
stc
aaa
cmp
push
test
mov
adc
subl
mov
nop
cmp
pop
dec
jmp
adc
and
add
fmuls
mov
or
les
cmp
adc
cwtl
jle
jle
std
adc
inc
dec
dec
clc
pop
and
sub
loopne
dec
pop
aas
and
push
push
add
push
inc
xchg
add
iret
mov
jmp
cli
sbb
sbb
pop
lahf
inc
push
xchg
jno
ret
sub
clc
aam
loop
stos
call
jge
jo
cmp
in
bound
inc
cmp
jl
aad
shlb
pop
and
aas
adc
and
sub
dec
and
and
xchg
mov
add
push
bound
mov
and
call
rorb
cld
enter
adc
iret
hlt
or
lods
sahf
or
rclb
mov
inc
aas
mov
mov
xor
or
mov
aad
aas
or
mov
mov
sub
loopne
cmp
int
add
push
cmp
fsts
test
fsts
movsb
pop
lahf
sbb
ljmp
cmp
jle
int3
inc
inc
and
and
mov
adc
daa
jbe
adc
push
add
sub
jl
aas
inc
adc
out
mov
js
jmp
adc
mov
add
push
mov
mov
ret
mov
sub
push
mov
mov
in
pop
or
cmpb
sub
inc
inc
and
daa
push
or
sbb
jne
add
add
sbb
movsb
xchg
push
dec
pop
push
sbbl
aaa
dec
gs
bound
and
jle
adc
loopne
inc
jne
imul
jne
xchg
jne
orl
mov
jl
mov
loop
and
add
or
movsb
sub
cmp
das
testb
inc
stc
mov
inc
pushf
and
ror
cmc
dec
in
xchg
adc
cmp
pop
jo
sbb
and
sahf
jecxz
jecxz
sub
flds
fldenv
std
call
in
and
call
scas
or
clc
cmp
pop
jge
mov
mov
sti
iret
xor
icebp
lds
lock
mov
icebp
outsb
lret
mov
inc
leave
or
cmc
jno
sub
ret
inc
call
loop
outsl
and
mov
inc
stc
adc
or
inc
insb
test
cmp
inc
lock
push
and
xchg
push
pop
sbb
push
xchg
push
popf
fildll
bound
jne
rcrl
orb
xor
xor
movsb
pop
lahf
push
out
sub
sub
pusha
cld
or
mov
hlt
cltd
add
xor
out
sub
push
sbb
xorb
sti
cmpsl
pop
in
or
jne
mov
rol
mov
fs
fistpll
cli
ljmp
cli
data16
push
imul
jl
ret
aam
inc
in
or
imul
mov
shlb
cmpl
out
adc
hlt
dec
mov
hlt
rclb
rep
pop
fs
int
inc
lock
xchg
mov
xchg
fwait
xor
lea
cli
and
xchg
push
mov
xlat
inc
push
fiaddl
jo
mov
faddp
push
push
or
cmc
dec
imul
mov
sarl
ja
out
fadds
addl
adc
in
push
adcl
test
sti
movsb
lcall
or
cld
cs
loope
or
adc
dec
or
jne
call
add
in
xchg
cmpsl
imul
test
jle
mov
jne
notl
lret
inc
mov
adc
repz
add
dec
sarb
mov
inc
add
add
add
push
leave
ss
fmuls
divl
ja
xchg
in
mov
mov
inc
outsl
push
int
ja
mov
call
mov
nop
ss
lods
out
add
mov
stc
incb
call
add
pushf
or
fs
pop
jmp
xor
mov
out
lret
ljmp
dec
call
pop
mov
dec
das
mov
xor
and
cmpl
jb
pop
push
into
or
jmp
jmp
inc
scas
int
call
xlat
leave
add
xor
cmp
sub
add
push
add
xchg
sbb
cmc
push
adc
jae
js
shll
push
aam
inc
shrb
push
call
inc
testb
je
or
or
aas
repnz
jae
shll
arpl
repz
call
lods
stos
enter
insb
mov
pop
sub
xorb
std
inc
fisttpll
lods
add
mov
mov
out
cs
dec
xchg
push
add
repz
or
or
xor
out
jns
jmp
xor
scas
repz
xor
jecxz
jecxz
add
icebp
aam
mov
mov
and
xchg
adc
xchg
fsubl
sub
pop
push
lret
test
mov
mov
jp
adc
and
cli
add
rolb
cmp
je
aaa
or
or
inc
lcall
jl
lods
bound
xchg
or
out
or
mov
xchg
jecxz
bound
repnz
out
jp
pop
cwtl
les
xor
push
sbb
js
push
sub
push
cld
mov
cld
std
fdivl
pusha
rcll
xchg
adc
adc
push
push
push
mov
pop
or
or
fiaddl
or
es
push
cmp
inc
in
pusha
jge
add
xchg
std
sahf
test
mov
mov
cwtl
fimull
sub
push
or
sbb
sbb
call
lea
adc
repnz
sbb
sbb
mov
or
clc
gs
cld
adc
mov
call
pop
push
test
push
repz
xor
push
push
adc
cltd
mov
adc
push
push
or
add
call
or
push
addr16
lcall
sti
sbb
popa
insl
xchg
mov
out
inc
pusha
xchg
xchg
pop
js
mov
cmp
loopne
dec
test
sbb
addr16
jnp
or
imul
sub
dec
inc
sti
pop
push
clc
jg
or
xchg
cmp
in
sub
and
xchg
sarb
xchg
inc
adc
mov
arpl
mov
mov
cs
mov
imul
cmp
in
and
push
loop
mul
aam
dec
addb
jmp
or
enter
roll
rorb
push
cld
mov
ret
in
and
inc
cmp
push
cmp
or
int
mov
pushf
shlb
or
push
orb
or
aad
add
cmc
lock
mov
jmp
je
movsb
push
mov
stos
push
sete
call
scas
dec
and
push
aam
push
icebp
add
rolb
testb
push
sbb
lea
lods
testl
test
jns
or
jecxz
outsl
sub
cmp
xor
dec
fsts
push
or
pop
imul
cmc
imul
mov
call
pop
ret
push
jne
adc
andl
mov
pop
test
sbb
leave
cmp
ret
std
or
je
daa
xlat
gs
in
xchg
push
lock
dec
loopne
mov
fwait
sti
dec
push
movsb
call
inc
or
andl
push
mov
add
and
mov
pop
sarl
inc
test
rorl
ljmp
jmp
movhps
or
in
aad
pop
adc
sub
addb
or
sbb
in
sub
sbb
int
imul
jb
lods
mov
xchg
and
clc
in
test
xor
dec
dec
jmp
popa
xchg
mov
fisubs
xchg
or
sbb
inc
jmp
ret
jne
pop
push
out
cwtl
or
es
aad
sub
shrb
xor
clc
testb
and
mov
push
jne
ret
inc
dec
rcl
or
les
xor
fidivl
je
fldenv
bound
cmc
jno
and
popa
push
dec
or
pop
call
or
pop
or
jmp
dec
cmp
jge
inc
shrb
sti
fucom
je
cmp
fisttpll
fdivr
and
jl
xchg
xor
xor
stos
gs
pushf
sbb
dec
mov
inc
jge
mov
push
lea
test
in
sub
loop
xchg
mov
xchg
dec
cli
mov
xor
shrb
mov
and
inc
fs
and
ret
xchg
fsubrl
idivb
push
ret
and
cmp
cmp
mov
mov
mov
mov
adc
lret
fists
inc
clc
mov
add
sub
pushf
sub
xchg
popa
divb
pop
xor
inc
cmp
xchg
imul
inc
or
mov
xor
imul
lret
subl
out
outsl
rcrb
nop
cmp
push
jne
sbb
adc
loop
leave
incl
sub
mov
test
adc
fsubrs
and
mov
jp
inc
mov
loope
mov
lock
popf
call
test
jg
push
cmp
nop
je
sub
sub
test
es
push
and
add
and
sbb
cmp
push
and
inc
cmp
or
daa
jmp
scas
arpl
xchg
decl
int
inc
and
push
dec
popf
push
add
or
scas
int
cmpb
imul
mov
repnz
loop
inc
imul
inc
xchg
mov
jl
je
inc
sbb
scas
mov
adc
mov
mov
int3
loopne
xor
cmc
xor
lea
inc
add
or
mov
repz
lds
mov
or
stc
adc
jle
or
xchg
jge
xchg
cmc
out
adc
ret
movl
adc
pop
xchg
push
std
mov
pop
fstpt
add
pop
push
or
cmp
mov
mov
hlt
mov
mov
cs
sub
mov
inc
rorb
cld
pushf
xchg
sbb
mov
movsl
inc
addr16
aaa
jne
mov
es
insb
push
xchg
pop
or
xorb
notb
sub
push
fistps
xchg
mov
pop
enter
fldcw
cli
mov
xchg
enter
mov
daa
mov
add
movups
repnz
cs
lock
adc
out
adc
mov
inc
push
jle
cld
xor
sbb
shrl
ja
sbb
push
sbb
inc
push
dec
pop
std
scas
mov
cmp
aam
imul
adc
adc
out
mov
shl
rcrl
add
cmp
in
insb
scas
mov
mov
inc
mov
sbb
or
adc
mov
in
cmp
inc
add
adc
out
xchg
add
out
in
dec
pop
jg
out
sub
sbb
push
xor
outsb
inc
movsb
mov
stos
in
inc
daa
push
inc
and
mov
adc
orl
popf
loopne
or
dec
xor
repnz
push
adc
or
shrb
adc
mov
adc
and
out
loopne
dec
dec
or
inc
inc
and
hlt
dec
mov
les
mov
adc
mov
push
out
mov
push
pop
add
and
loop
orl
imulb
push
test
jg
jb
ss
mov
xchg
xchg
inc
fisubrl
fsubr
mov
xchg
pop
test
jl
push
cmp
adc
or
mov
fwait
and
mov
jle
gs
lcall
gs
adc
cltd
cmp
pop
mov
repnz
cmp
out
lret
mov
jae
push
popa
out
and
push
sub
mov
sti
cmpsb
call
mov
out
pop
test
popa
inc
repnz
mov
or
sub
in
mov
mov
push
mov
nop
add
lea
pop
call
adc
jmp
scas
mov
jnp
stc
pushf
push
add
ss
xchg
sub
test
or
pop
mov
data16
sub
and
mov
add
popf
mov
movsb
mov
mov
mov
sbb
and
dec
cmpsb
mov
pop
xor
xor
daa
and
and
mov
dec
pop
push
pop
push
movsl
arpl
jmp
dec
pusha
loope
sub
in
inc
jns
jns
js
ret
mov
adcb
shl
sbb
call
adc
push
push
push
push
push
or
jmp
pop
mov
ljmp
enter
push
shll
mov
jo
mov
mov
test
pop
jmp
cmp
call
and
lahf
ja
fistl
mov
cmp
and
test
lods
adc
testb
sbb
test
fcomps
lods
dec
jg
adc
int3
cli
push
test
inc
sub
lcall
dec
add
inc
and
nop
pop
mov
sbb
push
mov
in
dec
imul
jecxz
scas
je
mov
gs
or
xor
jmp
ret
xor
enter
cltd
xor
or
cmp
jne
fyl2xp1
pusha
ss
xor
pusha
call
sub
loope
inc
gs
andb
pop
adc
sub
mov
mov
adc
rcrl
push
mov
adc
inc
addl
cmp
call
cmc
sbb
inc
int
cmp
cmp
push
push
cld
scas
jb
adc
and
sub
mov
sub
inc
sysenter
je
mov
sub
xor
ret
inc
loopne
push
fmull
pavgw
mov
scas
int3
cmp
std
or
cwtl
cmp
xor
push
orb
and
mov
xor
jb
imul
pushf
outsb
xor
sub
push
and
dec
or
and
cmp
and
inc
jo
mov
sbb
mov
sbb
adc
repnz
or
fmull
cltd
fcoms
adc
jo
mov
mov
and
adc
mov
cltd
push
lock
adc
and
outsl
or
jl
test
cmp
lods
rcrl
or
inc
and
movsb
rcll
sbb
add
fcoms
mov
pop
push
mov
or
mov
clc
mov
adcl
add
jae
mov
insl
mov
xchg
pop
xchg
popa
cmpsl
stos
cld
dec
or
rcrb
pushf
and
stos
scas
adc
shlb
leave
or
mov
stos
sub
or
stos
xchg
mov
cmp
cmp
adc
jmp
inc
mov
push
xchg
or
jb
insb
lea
jmp
jg
inc
cmp
nop
je
jns
lods
add
jae
push
gs
xor
push
adc
dec
push
ret
imul
adc
insl
cld
clc
xchg
xchg
hlt
push
lahf
jnp
fadd
ds
push
adc
fmull
and
stos
jne
xchg
test
push
pop
sbb
outsb
push
and
repz
in
mov
dec
mov
inc
insl
xchg
jg
mov
test
add
push
ss
sbb
les
dec
scas
or
addl
and
or
in
push
dec
clc
push
test
push
dec
cltd
addr16
imul
and
pop
dec
or
and
and
cmp
push
jge
sti
andl
inc
mov
pushw
dec
dec
push
in
sbb
imul
pop
adcb
outsl
mov
push
cld
mov
adc
out
xor
inc
mov
xor
rorb
pop
and
push
mov
or
lea
inc
packuswb
lcall
rolb
mov
stos
adc
leave
jo
mov
dec
xchg
mov
aaa
or
ja
dec
inc
call
adc
das
pop
mull
popa
js
es
dec
xor
xchg
mov
test
mov
mov
mov
or
xchg
test
and
add
xor
or
imul
xor
add
cmp
fbstp
dec
lods
xor
mov
xor
in
cld
mov
rolb
or
cwtl
adc
pushf
cmp
inc
or
or
orb
popa
or
or
lock
lret
xchg
mov
adc
jnp
pop
or
lret
lods
fwait
xor
outsl
cli
popa
mov
rorl
or
inc
mov
add
ret
sub
mov
lds
or
and
in
mov
sbb
jbe
faddl
add
call
or
leave
shrb
and
mov
gs
push
and
adc
adc
lds
fs
mov
aas
push
bound
outsb
gs
push
pop
popf
cmp
inc
or
adc
inc
cld
clc
adc
or
push
imul
mov
shll
call
mov
adc
or
push
imul
inc
push
add
sub
dec
add
das
mov
movsb
xor
shr
push
or
test
adc
add
loope
int
ficoml
int3
sahf
cmpsb
mov
enter
leave
sbb
cmp
xor
cmp
or
psrad
push
push
or
inc
jns
dec
outsb
fstl
mov
push
dec
arpl
jb
sub
add
jns
sarl
movsb
mov
rcrl
sub
pop
push
push
lods
push
push
jp
insb
push
mov
push
pop
jae
mov
push
pop
add
add
xor
jo
daa
xor
scas
add
adc
ja
jns
adc
push
and
pop
sbb
push
inc
imul
ficoms
lcall
adc
pop
test
mov
lea
add
and
push
insl
pop
insb
adc
and
push
or
mov
lock
jbe
rclb
dec
pop
ss
rolb
jecxz
sub
and
fildl
push
pusha
adc
or
mov
test
adcb
inc
test
push
gs
mov
inc
mov
test
dec
imul
push
test
mov
or
jg
pop
add
test
push
and
cmp
inc
push
mov
jb
cmpsl
dec
lds
mov
ljmp
je
nop
push
fadds
aam
call
dec
jae
addr16
push
push
iret
dec
loope
add
dec
mov
insb
aad
lods
mov
movsl
lea
jns
cld
and
cmp
nop
push
pop
pop
insl
cmp
pop
add
push
pop
test
mov
or
or
lea
ljmp
mov
lods
nop
add
into
mov
adc
add
dec
mov
aam
nop
mov
mov
pop
mov
and
shlb
icebp
or
retw
or
mov
xchg
and
sub
in
jne
mov
mov
or
inc
mov
lret
mov
lret
sub
shlb
xchg
and
int3
repnz
aam
add
movsb
cwtl
loope
and
insb
in
pop
pusha
jmp
or
inc
xchg
and
push
icebp
adcb
jecxz
sub
enter
pushl
cmp
sub
adc
lock
cli
ficomps
cmp
cs
cltd
push
adc
adc
ret
sbb
sbb
push
mov
pop
xchg
and
sar
rcll
sbb
and
outsb
sub
push
inc
mov
roll
mov
aas
into
mov
iret
cmp
add
or
iret
adc
iret
and
adc
sub
cmp
ret
mov
mov
in
mov
decl
scas
iret
std
iret
lods
iret
lods
iret
ror
ror
stc
iret
in
int
int3
iret
stos
iret
leave
lds
cmp
or
adc
out
adc
out
and
or
mov
out
mov
xchg
mov
repnz
hlt
add
cmc
add
xchg
or
testb
or
testl
int3
sbb
mov
and
clc
sbbb
adc
adc
push
sbb
bound
enter
mov
hlt
and
lods
enter
in
inc
xchg
leave
push
inc
or
xor
jmp
dec
aam
test
aad
inc
lret
ret
adc
cltd
or
sub
mov
xor
sub
adc
adc
movsb
mov
cmp
mov
mov
sub
ja
add
mov
push
fs
or
push
mov
lret
adc
mov
dec
push
xor
movsb
xor
loopne
adc
in
cmp
pop
lods
add
or
pusha
push
jmp
inc
popa
pop
xor
push
xor
dec
sub
enter
loopne
xchg
sub
inc
cmp
roll
popa
inc
push
mov
push
dec
loope
cmp
in
dec
adc
sti
ja
aaa
js
fdivrp
xchg
xchg
mov
cmpsb
out
inc
adc
jmp
outsb
arpl
push
jae
into
and
pop
enter
loop
pop
jecxz
mov
jge
sbb
or
xchg
dec
add
xorl
ffreep
fs
inc
or
mov
xor
xlat
pushf
aam
and
xchg
dec
push
divb
leave
jmp
enter
pop
movsb
repnz
cmp
dec
add
add
lods
es
jmp
inc
fs
mov
mov
adc
lret
jp
enter
int3
or
mov
pushf
andl
push
xor
fisubs
inc
outsl
adc
xchg
add
add
sbb
xchg
lret
call
xor
arpl
jo
push
mov
dec
in
push
push
pushf
push
adc
inc
repz
and
arpl
adc
je
push
movsl
add
pop
dec
subb
mov
and
cmpsl
adc
loopne
add
gs
outsl
arpl
fdivr
cmpsl
or
lahf
adc
mov
dec
push
insl
xchg
add
and
xchg
cmp
and
inc
dec
push
ret
aam
test
jns
and
add
fs
inc
pop
dec
pusha
mov
dec
pop
nop
imul
loope
dec
fldt
es
push
push
and
idivb
scas
mov
daa
adc
mov
sub
mov
mov
dec
inc
push
ret
pop
sub
pop
insl
mov
das
hlt
inc
les
push
call
fstl
and
adcl
push
mov
pop
insb
sbb
fstl
sub
stc
inc
imul
sarb
mov
dec
pushf
sub
inc
scas
aad
mov
mov
add
shrl
repz
mov
ja
dec
sub
dec
inc
or
fldcw
mov
inc
inc
xor
movsl
jl
cs
jmp
dec
insb
fs
mov
push
loop
jb
xlat
es
fmuls
das
push
mov
imul
inc
into
movsl
pusha
adc
into
jp
or
mov
sbb
ficoml
leave
xor
push
push
imul
jl
test
sub
mov
loop
inc
xchg
push
or
mov
xor
adc
mov
xor
in
dec
xor
push
adc
xchg
xchg
movsb
inc
addr16
test
daa
xor
mov
and
xor
pop
cltd
addr16
out
mov
xchg
fdivl
movsl
sub
or
inc
jne
push
gs
xchg
push
adc
out
pop
scas
jo
cmp
dec
mov
xor
pop
add
sub
aad
fsubrl
cmp
das
cmp
and
pop
inc
in
cmp
das
jl
inc
add
xchg
sarl
dec
outsb
cmp
cwtl
xchg
or
mov
inc
shlb
xlat
dec
subb
sub
and
jmp
cld
dec
mov
sub
aas
dec
and
xor
hlt
in
imul
js
and
jmp
subl
add
xor
gs
push
cs
push
icebp
xor
and
shlb
jle
lea
cld
ss
inc
and
fstl
daa
xor
or
mov
add
dec
gs
mov
and
mov
adc
popa
cmp
testb
lret
scas
mov
popa
cwtl
jo
notl
nop
dec
cmpsl
fs
xor
call
lret
dec
cmc
xor
addr16
dec
inc
and
jmp
dec
adc
jmp
adc
pop
jb
jl
dec
rclb
dec
stc
dec
rorl
insl
lods
das
or
adc
mov
dec
stc
dec
popa
ret
movsl
push
imul
repz
dec
and
mov
pop
and
stc
dec
dec
mov
add
xlat
loopne
jmp
and
scas
jle
jae
dec
inc
call
inc
pop
add
pop
aad
scas
push
xchg
push
and
dec
outsl
jne
xchg
mov
push
xchg
xchg
test
mov
push
aam
inc
inc
dec
loopne
movsb
jl
loopne
mov
loopne
cli
or
mov
orb
push
push
enter
inc
lret
push
mov
jb
pushf
add
dec
pop
and
push
add
push
mov
adc
daa
push
test
and
and
ret
pop
inc
or
jns
aam
xchg
shlb
pop
add
adc
roll
fldl
push
pop
add
xor
dec
or
push
lret
ljmp
or
mov
inc
push
mov
mov
rcrb
lds
sbb
cmp
movsb
or
xor
add
mov
xchg
cmp
mov
stos
cld
decb
and
inc
mov
mov
or
or
setns
dec
xchg
pop
adc
ljmp
cld
or
mov
and
or
mov
inc
or
daa
inc
aam
dec
pop
xor
into
and
call
test
or
in
or
je
cmp
dec
push
xor
test
daa
mov
bswap
movsl
and
mov
test
push
or
je
inc
lods
dec
test
xchg
into
sbb
xchg
fdiv
and
pusha
and
adc
cmc
fcoml
inc
loopne
cmpsb
adc
or
push
xchg
mov
or
inc
jo
or
adc
dec
mov
cmpsl
adc
mov
mov
cmpsb
or
je
push
in
adc
into
shr
or
les
jne
or
popa
sbb
push
sub
and
cmp
and
movsl
icebp
push
or
xor
call
rclb
lock
icebp
and
decl
movsb
lock
or
pop
je
or
iret
xchg
mov
lahf
mov
arpl
dec
mov
nop
pop
add
mov
mov
repz
hlt
fnsave
aam
push
clc
cmp
dec
hlt
mov
aas
movsl
pop
mov
push
adc
mov
xchg
popa
movsb
sbb
mov
gs
mov
in
shl
xchg
xchg
dec
pop
sub
xchg
push
cmpsl
out
pop
mov
out
push
hlt
outsb
xchg
adc
jge
ret
jmp
call
scas
xor
jl
mov
push
inc
clflush
or
cmpl
cltd
js
cmp
dec
pop
outsl
cmpsl
pop
xor
inc
cmpsl
push
ja
push
clc
jmp
test
push
jne
cmpl
mov
or
fs
xor
or
sub
xor
or
adc
call
pop
push
lahf
xor
push
mov
fdivl
pusha
jae
sbb
mov
lret
movsl
mov
push
adc
cmpsl
nop
rcr
or
dec
repz
adc
adcb
pop
inc
add
aad
jg
lock
xor
mov
sar
pop
les
frstor
movsl
aaa
mov
and
lods
adc
mov
lods
mov
sub
sbb
stos
add
push
or
mov
cmp
and
push
outsb
cmp
and
pop
outsb
adc
xor
sbb
mov
outsb
in
mov
jmp
pushf
add
mov
test
je
xorb
add
call
adc
movsb
insb
adc
or
pop
add
stos
ljmp
cmc
test
sub
add
add
pop
sub
je
pop
xor
xor
sub
orb
add
sbb
add
sbb
pop
enter
add
and
add
test
and
cld
adc
hlt
shlb
jecxz
test
xchg
adc
xchg
movsl
jmp
int3
and
and
mov
inc
sti
das
mov
cmp
fs
std
xchg
cmp
sub
inc
test
mov
xor
clc
inc
or
pusha
pop
je
inc
mov
sti
scas
jecxz
or
mov
dec
mov
push
xchg
stos
adc
sub
xorl
mov
inc
or
add
shrd
sbb
push
loope
icebp
dec
or
shl
pop
sub
ret
or
pop
roll
push
and
mov
bound
adc
incl
sub
or
popf
in
rol
mov
sarl
mov
out
xor
xchg
mov
lock
pop
movsb
inc
jl
adc
adc
and
pcmpgtd
mov
negb
adc
xchg
mov
incb
mov
aam
rcll
movsl
mov
or
xor
dec
push
push
sub
sbb
bound
push
mov
inc
add
in
cmp
jmp
cs
add
adc
and
popa
mov
adc
jne
cs
pop
push
or
push
jl
dec
test
cld
call
out
inc
popf
push
adc
adc
push
hlt
cmc
cmp
daa
add
insb
dec
or
sub
xchg
add
xor
iret
cmp
lods
inc
orl
call
jnp
shlb
clc
lret
push
pop
add
mov
test
jo
xchg
and
outsl
xor
sub
call
test
sub
push
push
pop
xchg
in
xor
scas
xchg
jl
xchg
push
inc
pop
cmp
lds
lock
mov
inc
push
addl
adc
fwait
push
out
jbe
sbb
das
lods
insb
mov
cltd
mov
pop
and
and
lock
pop
push
fisubs
mov
mov
ret
jnp
test
out
sub
cmp
jnp
js
xchg
jns
jmp
sbb
inc
push
fsincos
andl
sub
push
leave
mov
sbb
push
mov
pop
hlt
notl
jmp
xor
jne
jb
xor
outsl
mov
pop
gs
and
scas
leave
dec
or
std
mov
stos
lods
jge
adc
fs
xchg
jp
push
mov
iret
or
ds
xor
fs
add
ret
push
jmp
xor
pop
inc
or
sbb
jp
dec
adc
pop
sti
fsubrl
and
inc
adc
pop
pushf
xchg
pop
mov
inc
pop
sbb
popf
in
xor
inc
adcb
push
dec
dec
jo
pop
mov
push
inc
push
outsb
clc
mov
stos
and
xlat
cmp
mov
pop
lcall
push
test
sbb
lea
hlt
ret
mov
test
pop
fs
fadd
mov
xchg
push
cmc
pop
or
and
jmp
rcrl
dec
or
int3
xchg
jno
dec
jmp
add
xlat
adc
mov
push
pop
push
pop
and
call
ret
xchg
add
push
je
loop
loope
sub
dec
mov
push
mov
adcb
and
es
pusha
and
gs
stos
out
and
push
dec
fwait
jl
xchg
pop
movsb
mov
mov
xchg
je
adc
or
jbe
mov
std
and
push
jbe
and
adc
mov
icebp
rorl
dec
test
xor
lods
out
in
xor
out
xchg
and
push
test
enter
icebp
adc
mov
xor
mov
xchg
push
dec
push
and
loope
xor
inc
add
dec
adc
dec
sahf
pop
jecxz
cmp
fistpll
dec
cmp
and
sbbl
or
adcl
movsb
aad
or
push
call
das
inc
cwtl
cmp
shrl
adc
xlat
adc
mov
pop
ljmp
inc
sahf
das
sbb
mov
push
rcll
lods
jae
inc
fdivrs
stos
and
test
pop
sbb
fcoms
and
dec
mov
pop
inc
inc
add
ljmp
out
and
ljmp
loope
movb
outsl
or
and
sub
adc
or
addr16
cmp
fcomps
fcomps
or
sbb
add
loopne
push
test
jge
mov
add
adc
adcl
and
or
je
pop
inc
sbb
sub
push
push
outsl
or
inc
in
ss
sbb
and
pop
adc
out
cmc
push
scas
adc
not
or
mov
jecxz
push
mov
pop
adc
aam
pop
sbb
aad
push
and
mov
stos
cmp
xor
mov
xor
pcmpeqw
xor
mov
sbb
rcr
add
mov
test
data16
sarb
inc
sbb
adc
sbbl
ret
cmp
cmp
gs
sbb
sub
gs
out
ret
pusha
pop
sti
add
sti
addb
inc
mov
pop
sbb
insb
xchg
add
dec
lahf
ret
shl
xor
sbb
cmp
clc
xchg
cli
repnz
sbb
push
cmc
sbb
cld
leave
xor
sahf
sbb
test
mov
sbb
inc
adc
mov
loop
sbb
stos
push
sub
out
and
mov
popf
jp
xchg
push
dec
add
mov
aaa
and
push
cmp
sub
cmpl
mov
xchg
test
jge
cwtl
cmp
inc
dec
fidivs
mov
enter
inc
adc
movsb
test
and
jmp
inc
pop
jp
in
dec
inc
and
mov
sub
negb
call
movb
mov
mov
ret
int3
mov
jo
addr16
mov
cld
add
xor
sbb
pop
push
mov
int3
inc
pop
or
movsb
sbb
xor
or
andb
scas
enter
adc
add
rclb
cli
lea
dec
arpl
add
or
out
inc
add
sub
adc
call
mov
out
pop
das
inc
outsl
sub
repz
sbb
insl
sar
push
pusha
mov
cld
xchg
push
mov
xor
sub
jmp
mov
mov
mov
adc
and
daa
pop
mov
push
out
pop
sub
das
call
enter
dec
adc
je
mov
push
cmp
sub
jnp
xchg
hlt
fcmovnb
and
sti
cmp
in
es
rcll
mov
out
xor
adc
xor
sub
idivl
cmpb
comiss
arpl
sub
adc
hlt
mov
cmpsl
jne
mov
adc
xchg
or
or
das
push
cmp
popf
ja
arpl
pop
xor
mov
daa
push
cmp
pop
data16
arpl
in
gs
sti
loop
test
repz
jb
push
out
ret
jmp
hlt
xor
pop
add
adc
add
add
cmc
jnp
inc
or
ljmp
inc
je
mov
sar
inc
test
imul
cmp
cld
cli
ds
rclb
cmp
mov
or
jg
mov
add
dec
insb
and
int
arpl
mov
rolw
and
add
js
test
mov
jmp
sub
dec
cmp
or
jno
or
dec
pop
and
pop
cmp
mov
adc
xor
push
popa
pop
adc
jge
sarb
or
or
xchg
fistps
cwtl
inc
ljmp
push
dec
xlat
mov
jge
pop
sub
add
call
or
lahf
pop
add
push
pop
fists
sub
call
lods
push
sbb
mov
mov
popf
or
sub
cmp
inc
lcall
inc
xchg
dec
jns
out
add
call
inc
adc
jle
outsl
or
lds
xchg
sbb
sbb
mov
inc
mov
inc
cmpsl
mov
in
sub
cmp
int3
ja
pop
inc
or
jne
inc
inc
mov
mov
mov
mov
dec
pop
mov
adc
sbb
sarl
je
push
push
sub
and
or
lret
idivb
rcrb
mov
sub
sahf
adc
and
push
pop
adc
push
cli
and
enter
add
xor
adc
notl
ja
pop
sbbb
and
int3
fnstenv
cs
out
jmp
cwtl
es
dec
mov
std
shlb
fldl
cltd
xor
or
mov
push
pop
mov
push
xchg
loop
fisttps
decl
dec
jle
out
arpl
test
mov
mov
lret
pop
dec
inc
mov
jnp
or
sub
je
adc
rorl
movsb
adc
icebp
push
or
inc
int
mov
or
jl
inc
lret
and
mov
movsb
sbb
adc
cmp
stos
shlb
adc
or
cmp
pop
in
lret
sbb
fisubrl
and
fdivrs
lret
or
lea
leave
add
xchg
sbb
cmpb
jns
sub
call
cs
xchg
lock
das
ja
pop
sub
push
movl
fdivr
cmp
mov
scas
push
add
dec
and
jl
loopne
cmp
xchg
jne
mov
in
data16
js
aad
xor
cmpl
dec
jno
dec
js
pop
mov
inc
mov
popf
bnd
sbbl
js
in
xchg
push
add
loopne
pushf
sbb
mov
jo
mov
xlat
test
dec
hlt
xor
call
mov
mov
dec
or
inc
or
jae
cmpsb
lea
push
je
xor
stc
sub
pop
mov
mov
ret
pusha
adc
xchg
cmc
pop
push
fdivrl
int
pop
mov
movsb
orl
jo
cmpb
inc
movsl
dec
aam
mov
int3
sbb
test
and
outsl
sbbb
cmp
das
and
mov
ja
daa
inc
test
adc
or
jns
testb
adc
mov
test
jne
andb
and
dec
in
add
cmc
sub
adc
mov
cwtl
mov
in
inc
mov
adc
or
lock
adc
ja
xor
inc
mov
add
mov
test
in
or
xor
addl
lds
or
cmp
in
inc
jbe
push
es
xchg
push
cmp
lret
push
sub
subl
fldcw
mov
pop
sbb
inc
and
icebp
xchg
std
pop
push
sub
sub
sub
push
mov
sub
or
jb
xchg
loopne
adc
inc
adcl
ret
popf
push
add
movl
sahf
dec
jne
sub
dec
in
test
stos
jl
les
push
xor
cld
out
lods
jl
loop
jp
xchg
js
js
or
xlat
cltd
pop
lds
scas
mov
imul
fsubs
cmp
sbb
mulb
bound
dec
shrb
leave
and
and
sub
and
gs
push
or
adc
mov
inc
inc
stc
pop
dec
push
add
push
or
jl
pop
pop
loop
lock
push
icebp
jge
bound
mov
or
jne
outsb
adc
stos
mov
xchg
mov
mov
shll
jg
and
shll
cltd
add
pop
jmp
xor
lods
andb
cmp
loope
or
push
sbb
andb
daa
je
inc
call
mov
or
jl
fimull
test
dec
ret
or
lea
pop
jmp
jg
iret
jge
xchg
push
in
ret
pop
int3
mov
js
pop
andl
enter
cli
fistl
push
sub
xor
push
jnp
jo
test
xchg
dec
cld
mov
mov
sub
scas
ja
mov
lods
pop
mov
inc
sub
xchg
cli
loop
rcll
cmpsl
dec
xchg
call
jmp
test
jne
dec
xor
jle
add
outsb
mov
inc
fs
jge
adc
test
inc
inc
test
jl
xorl
xor
mov
mov
xor
jae
pop
sbb
pusha
jbe
adc
inc
adcl
jge
in
push
xchg
pop
hlt
mov
ret
test
push
movsb
or
scas
sub
nop
push
push
and
fistpl
mov
mov
adc
xchg
mov
pop
and
test
add
and
adc
into
or
je
sbb
or
es
das
pop
adc
mov
push
jo
shrl
jnp
shlb
es
inc
out
and
pop
lods
cmpsl
sub
mov
add
fucomp
loop
dec
mov
add
cmc
jmp
repnz
mov
pushf
add
ds
push
push
or
call
fcmovnbe
cld
and
or
adc
push
cld
push
push
cli
add
and
adc
push
test
adc
xorl
out
nop
and
scas
sbb
pop
pushl
inc
hlt
add
adc
daa
ja
mov
cmp
adc
bound
mov
or
xchg
lea
jnp
mov
mov
dec
add
push
push
dec
pop
add
mov
inc
mov
fwait
xor
sbb
movsl
push
adc
cmp
test
or
loope
sbb
mov
js
fnstenv
je
out
loopne
outsl
jb
mov
in
das
fidivs
cmp
mov
movsl
pop
cld
inc
rorb
imul
cwtl
inc
shrl
adc
mov
mov
cltd
adc
cmpsb
cmp
mov
nop
push
in
sbb
adc
mov
ja
cmp
jns
fwait
ja
lods
adc
push
jne
and
xor
bnd
jbe
push
push
pop
mov
cltd
das
leave
push
cmp
iret
xor
and
iret
mov
lret
imul
aaa
add
pop
push
add
push
adc
test
mov
cmpb
bound
aas
orb
push
sub
pop
adc
add
add
roll
mov
das
lahf
jge
mov
frstor
or
dec
add
push
lods
insl
dec
xor
cmpb
nop
or
psllq
xchg
pop
xchg
pop
push
nop
cmp
maskmovq
sbb
repnz
dec
incb
fdivrl
cmp
dec
cs
sub
out
xchg
lar
pop
je
out
adc
cs
int3
gs
and
push
inc
mov
mov
pop
ficoms
enter
inc
add
out
cmp
fimull
in
inc
loop
or
mov
push
xchg
pop
adc
and
add
inc
or
add
lds
dec
adc
cmpsl
push
lcall
xor
push
dec
in
sti
fwait
movsb
inc
aas
mulb
inc
and
inc
loop
jge
push
inc
sub
pop
cld
stc
jmp
jl
ljmp
unpcklps
add
push
pop
jg
jp
mov
aad
negl
add
jne
cwtl
fstps
dec
les
addr16
fwait
ja
xchg
dec
nop
mov
ja
cmp
enter
jge
inc
dec
subb
out
add
lods
inc
xor
or
les
ret
into
cld
push
mov
aaa
cs
arpl
adc
stos
pause
xor
mov
dec
jmp
fcoml
adc
out
notb
dec
enter
pusha
sub
jne
scas
hlt
jns
popf
negl
in
enter
push
or
xchg
xchg
jo
mov
or
push
mov
dec
push
insl
sub
lods
out
xor
insb
inc
inc
cmp
pop
adc
xchg
lods
cmp
mov
mov
push
cmpsb
or
stos
mov
das
or
pop
push
stos
and
add
add
dec
jno
loop
pop
sahf
inc
in
adc
dec
inc
das
aas
icebp
lret
cmp
insl
dec
adc
jle
clc
push
add
lret
sbb
insl
inc
imul
dec
xor
es
in
add
fs
add
imul
push
adc
lcall
gs
adc
adc
cmpl
sub
test
adc
add
inc
jg
je
ret
xorl
sub
and
and
xor
dec
pop
xchg
je
in
ljmp
push
dec
je
xor
pusha
sub
inc
adc
cmp
in
mov
stos
sbb
xor
or
call
push
sub
mov
lock
mov
xchg
mov
sbb
push
pop
dec
cltd
lods
adc
push
jmp
mov
movsb
adc
in
xchg
inc
xor
and
mov
test
jnp
inc
cmpsl
lock
lds
adc
xchg
mov
hlt
cwtl
push
adc
loope
adc
test
orl
and
sub
push
xor
nop
insb
mov
sub
jmp
jl
test
pop
cmp
jmp
add
jnp
adc
and
or
push
call
pop
dec
add
cmpsl
xor
in
out
popf
jb
and
gs
in
hlt
push
call
cmp
add
loopne
sbb
js
adc
mov
inc
iret
cltd
cmc
rolb
and
push
jno
adc
pop
xchg
rolb
add
mov
or
jmp
push
push
clc
les
sub
sub
xchg
aam
xchg
jp
add
dec
sarb
mov
adc
iret
jecxz
adc
xchg
sub
iret
movsl
sbb
push
push
mov
lea
or
or
iret
xor
push
sbb
sub
xchg
leave
or
enter
enter
es
adc
test
push
and
lock
fbld
adc
push
xchg
jne
sub
and
jg
and
inc
or
adc
or
jno
cmp
xchg
mov
adc
imul
or
or
push
mov
rclb
mov
mov
and
int3
push
jmp
mov
aas
xchg
add
in
aaa
jb
jne
mov
cmp
or
das
jne
sbb
lret
mov
and
adc
xorl
push
inc
xor
mov
cmp
cmpl
jge
or
das
xor
mov
sub
jns
hlt
lcall
pop
aad
jnp
push
and
lret
loop
sbb
inc
ds
push
test
je
push
movsb
sub
push
inc
lods
inc
push
push
mov
cwtl
xchg
add
mov
out
testb
add
mulb
mov
cmc
jno
call
mov
xchg
out
mov
sbb
push
mov
test
xchg
push
cmp
inc
add
or
rorb
inc
sub
arpl
xor
nop
test
mov
insb
mov
nop
iret
or
mov
neg
cwtl
std
aad
dec
jae
adc
cmpsb
stc
pop
scas
cmp
or
rcll
pusha
adc
jmp
inc
data16
sub
or
icebp
das
into
sub
push
pop
sbb
and
imul
lret
push
push
les
jno
and
mov
push
mov
xchg
cmp
cmp
jmp
int
nop
pop
aad
cwtl
cmp
rolb
pop
js
jp
enter
mov
aam
andb
cs
or
pop
cmp
cld
cli
bound
xor
es
les
sub
push
movsb
sbb
push
xchg
sub
pop
fistps
imul
nop
inc
test
mov
scas
inc
jns
aam
andb
pop
popa
mov
jne
adc
daa
les
jmp
sbb
and
and
xchg
insb
sub
cwtl
rcrl
push
pop
gs
testb
mov
xchg
repnz
je
pop
mov
inc
sahf
clc
cmpsb
or
stc
cld
add
and
xchg
dec
dec
xor
int
testb
sbb
pusha
mov
push
jnp
stc
mov
mov
and
jge
pop
pop
adc
clc
pop
mov
mov
rcrl
xor
mov
push
xchg
push
and
adcl
call
fstps
push
lock
mov
cli
push
sbb
push
and
mov
pop
sbb
ss
test
data16
mov
mul
and
aaa
sub
dec
cmp
xchg
push
and
pop
inc
jmp
mov
cli
lods
dec
inc
cmp
and
add
mov
cwtl
pop
adc
sub
call
pop
adc
push
or
pusha
popa
orb
adc
mov
hlt
push
add
iret
add
popa
outsl
in
or
mov
adc
push
adc
js
adc
xchg
test
xchg
fistl
lcall
movsl
inc
pop
pop
cwtl
cmp
aad
push
sahf
push
push
ljmp
or
push
mov
xor
and
xor
sbb
cld
xor
sahf
mov
fisubrs
pop
push
out
mov
pop
xor
add
imul
cmp
iret
int3
dec
ljmp
insl
scas
shll
arpl
aas
mov
jle
add
mov
mov
mov
sbb
add
adc
out
add
xor
fbld
repz
push
cmp
loopne
cmpb
xor
movsl
push
outsl
cmpsl
daa
sub
es
cmp
push
pop
push
gs
int
mov
shr
ret
push
sub
mov
test
xor
sub
fimull
xchg
inc
adc
inc
out
outsl
popa
insl
mov
stos
sub
xchg
jbe
inc
mov
nop
ret
sbb
ret
inc
stos
pop
insb
sub
ficoml
xlat
jo
jmp
add
scas
mov
xor
fstl
cmp
pop
adc
test
nop
hlt
and
out
or
adc
sbbl
push
inc
loop
cld
jne
xchg
andl
nop
aam
call
jmp
mov
xchg
cmc
flds
and
inc
mov
jmp
out
bound
jo
xchg
daa
les
cwtl
adc
push
mov
ja
sub
sub
je
and
stos
repnz
xchg
sub
xor
cmp
lret
and
sbb
sub
push
cmp
adc
leave
cmp
mov
pop
aas
pushf
fidivs
mov
push
dec
fwait
xor
sbb
nop
dec
sbb
xchg
adc
mov
out
sbb
movaps
das
mov
pushf
sbb
xchg
jbe
pop
popa
or
pop
jl
jp
mov
xor
lods
imul
fistps
push
push
and
add
jl
mov
mov
nop
pop
repz
jno
cmp
or
add
cmpl
jae
xchg
aam
repnz
call
mov
movsl
mov
ret
mov
fsub
pop
mov
or
jo
lods
repnz
fwait
shrb
and
or
nop
mov
xorb
imul
into
dec
aad
add
nop/reserved
and
arpl
jo
adc
and
fidivs
lcall
push
test
lock
orl
imul
pop
jl
sub
cs
lods
adc
and
dec
cmpsb
adc
push
fnstenv
pop
and
leave
flds
inc
call
les
or
inc
cmpl
xor
adc
je
adc
inc
call
and
and
add
and
mov
popf
outsb
add
mov
sub
lcall
sbb
mov
jo
push
out
sub
adc
xor
gs
mov
jne
xchg
push
pop
lods
outsb
fsts
call
pop
xchg
push
pop
add
fs
or
cmpsb
push
push
sub
adc
inc
sarb
adc
test
jne
jp
add
imul
dec
pop
push
dec
lods
push
sub
adc
pop
mov
lds
divb
call
push
sbb
das
rcr
adc
adc
inc
xor
cmp
cli
cmp
sub
xchg
test
or
jle
shlb
and
das
push
push
mov
pop
push
mov
xchg
lea
and
das
and
sub
add
sbb
push
inc
sbb
mov
pop
pop
xor
and
cmp
xchg
mov
cmp
jge
sbb
cs
or
dec
pop
push
fildl
inc
push
andb
adc
pop
and
pop
pop
sti
dec
add
les
lcall
mov
nop
dec
movsb
mov
jp
xor
imul
lcall
std
icebp
adc
cs
sub
cwtl
xor
inc
lcall
popa
dec
adc
pushf
sbb
xchg
inc
sub
adc
sbb
lahf
pop
aad
bound
adc
mov
andl
test
mov
adc
dec
andb
inc
mov
cmp
push
xor
andb
adc
mov
sub
or
pop
bsf
add
iret
xor
cmp
adc
xchg
push
loopne
loop
or
xchg
or
jg
dec
lods
sub
mov
lds
jmp
dec
xadd
jo
push
les
shll
inc
xchg
adc
sahf
sbb
jmp
dec
call
sbb
pop
out
fdivl
or
call
mov
es
and
sub
jne
or
sub
call
dec
fcomps
sub
ret
xchg
add
mov
andb
repnz
sub
add
outsl
sbb
mov
sbb
sbb
test
cwtl
or
adc
sub
or
and
sbb
or
sbb
aas
jmp
add
mov
mov
jg
xor
adc
sbb
loop
pop
icebp
adc
das
cmp
sub
or
cmc
jo
and
sub
fldl
push
xor
das
push
jp
or
test
testb
orb
or
push
dec
pop
sub
shrb
xchg
cmp
jecxz
sbb
jmp
xor
xchg
jae
dec
mov
mov
pusha
cmp
mov
xchg
xlat
test
push
push
sbb
shll
call
fidivrs
push
push
daa
sahf
add
mov
adc
test
sbb
stos
lret
dec
xor
fsubl
aaa
and
pop
inc
imul
inc
dec
push
cmp
nop
add
sub
push
or
cltd
hlt
inc
push
testl
and
xorl
mov
sbb
sti
cwtl
sub
adc
mov
push
lea
jmp
pushf
add
loopne
pop
jg
in
inc
or
or
inc
adc
adcl
hlt
adc
clc
inc
and
push
push
add
mov
push
jl
mov
adc
mov
mov
and
and
add
cld
xchg
mov
xchg
mov
sbb
jae
inc
decl
cmp
mov
mov
push
xchg
in
repnz
subl
and
push
mov
jae
mov
rcrb
sub
inc
enter
dec
sbb
mov
outsb
mov
sbb
inc
and
loopne
xlat
mov
adc
cld
inc
mov
mov
test
js
sti
fs
arpl
leave
cmp
xor
fadd
ljmp
and
pop
loop
xor
into
int
push
push
cmp
sbb
divl
rolb
nop
cwtl
mov
sahf
movsl
bound
lahf
fucom
or
push
push
cmc
jns
leave
jbe
imul
call
dec
bound
dec
jl
pusha
inc
xor
and
sarl
pop
push
mov
cmp
sahf
push
cs
and
mov
mov
scas
add
add
cmp
jge
test
lcall
pushf
imul
adc
sub
test
ret
bswap
jl
sbb
push
and
lcall
sti
mov
cmp
dec
and
push
push
decl
inc
push
jmp
or
sub
push
mov
pop
leave
add
adc
outsb
xchg
jmp
test
dec
xchg
js
call
call
inc
push
add
mov
push
cmp
mov
loop
sahf
fs
fwait
mov
mov
or
and
adc
sub
sub
mov
dec
mov
xor
adc
push
jl
or
cmpsb
push
sbb
inc
mov
icebp
outsl
mov
inc
adc
or
sbb
pop
ss
aad
movsb
xchg
add
cmp
xrelease
movsl
inc
sbb
inc
imul
and
adc
xor
ficomps
mov
push
pop
fsub
outsl
lods
jbe
jne
fucomi
int3
popf
pop
test
das
cwtl
jl
pop
adc
iret
sub
pop
scas
rolb
adc
rorb
sbb
repnz
cmpsl
add
jg
and
nop
xchg
jecxz
das
or
add
fimull
cs
sbb
adc
jl
jae
dec
xor
gs
mov
xor
xchg
adc
lret
mov
cmpsb
pop
shrb
cmpl
sti
inc
sbb
test
loopne
out
adc
pop
loope
jp
dec
fstpt
xchg
lcall
add
push
adcl
imul
in
sub
mov
pop
cmpb
mov
or
or
or
or
dec
push
cmp
imul
mov
dec
xor
push
repnz
and
xor
or
cmpb
adc
push
lret
dec
in
sti
rcrb
jmp
adc
leave
stc
and
call
mov
into
and
ss
xchg
inc
push
cmp
adc
lock
inc
jl
add
push
loopne
mov
inc
xchg
and
movsb
sbb
test
nop
add
movsb
xchg
mov
enter
or
test
rorl
or
or
daa
jno
fisubl
inc
daa
out
mov
stos
cmp
jnp
push
ljmp
sti
sarl
sub
jmp
and
lods
imul
and
push
adcb
jmp
dec
das
xchg
and
call
mov
ljmp
and
xor
xchg
dec
test
ljmp
or
lret
je
mov
inc
push
adc
and
cmc
ficompl
arpl
test
jne
int3
and
inc
pushf
sbb
cmp
movl
mov
push
xor
lods
push
gs
jne
cmpsl
dec
outsb
sbb
mov
add
mov
mov
inc
push
mov
fidivrs
negl
inc
sbb
adc
or
cs
repnz
inc
ja
and
mov
loop
jns
mov
dec
pop
lock
mov
xor
sbb
mov
test
push
mov
pop
dec
shll
dec
jae
subb
stc
mov
mov
sub
push
ret
movl
mov
or
lcall
loope
outsl
test
movsb
ret
push
cltd
neg
ret
lods
xor
sub
add
int3
push
fwait
aad
es
call
xorb
inc
dec
ret
add
adc
xor
xchg
mov
inc
lcall
add
lock
or
pushf
and
xchg
push
adc
xor
push
cmpsb
cmp
push
sbb
add
popa
adc
pop
pop
mov
aam
rorb
adc
or
decl
push
mov
mov
hlt
cld
jo
jle
add
xor
fwait
adc
dec
add
xchg
push
push
jmp
nop
cmp
les
push
stos
test
jno
lahf
xchg
aam
and
daa
pusha
push
subb
inc
push
dec
mov
test
out
insl
mov
mov
dec
cmpsb
lea
je
cmpsl
jae
sbb
nop
xor
cltd
inc
jmp
shlb
test
or
imul
and
adc
dec
or
push
int
rcrl
or
cs
roll
stos
iret
and
pushf
mov
and
or
adc
or
jge
xchg
jb
nop
sub
icebp
test
sti
xchg
pop
je
xor
cmpw
stos
js
fbld
inc
repnz
jle
push
or
mov
insb
ds
jo
call
lret
add
stos
jl
out
and
inc
pop
call
movsb
mov
dec
or
or
mov
int
cs
icebp
imul
sbb
mov
adc
or
ret
dec
testl
adc
mov
sbb
aaa
cmp
inc
sti
fstl
add
pop
jns
divl
sbb
sti
jnp
lea
dec
lret
fisubl
mov
cmp
leave
adc
xchg
jmp
cmpb
dec
es
mov
mov
xchg
frstor
je
incl
pop
mov
adc
inc
jg
dec
jbe
mov
movl
mov
sub
adc
or
arpl
imul
push
push
fucomp
in
call
xor
xor
inc
repnz
jle
push
dec
jmp
cltd
daa
pop
mov
or
movsb
mov
sub
int3
jmp
enter
mov
pop
or
add
add
xor
cltd
push
push
mov
mov
mov
in
je
cmp
in
pop
push
adc
mov
and
popa
sarl
or
mov
inc
and
test
and
mov
popa
push
test
mov
repnz
push
dec
xchg
and
dec
mov
jmp
dec
xchg
neg
mov
push
push
insb
mov
jg
cmp
push
cmp
push
out
out
xchg
loopne
mov
fcompl
jns
inc
les
leave
enter
pop
pop
pop
lds
and
prefetch
and
and
sub
xchg
xchg
aam
icebp
pop
inc
cmp
movb
addl
xor
adc
mov
mov
mov
in
scas
clc
pushf
mov
jne
in
fprem1
dec
pop
inc
popf
dec
adc
cmpl
pop
adcb
call
xchg
jge
js
jno
lcall
movsl
push
sbb
cmc
scas
sbb
mull
cmp
sbb
jg
mov
sbb
push
in
xor
incb
inc
scas
or
sub
dec
pop
jmp
dec
testl
inc
mov
add
push
fisubs
jl
sahf
dec
adc
dec
mov
inc
adc
sbb
pop
xchg
test
pusha
mov
in
mov
call
lahf
sub
adc
psubusb
test
adc
subl
lds
lock
mov
push
mov
stos
xchg
inc
push
inc
mov
dec
mov
inc
pop
lea
pop
pop
xor
jbe
mov
and
adc
xor
sub
add
sub
test
inc
and
inc
and
insb
sbb
outsb
rcrb
cltd
or
pop
divb
jb
mov
sub
cltd
xor
scas
sub
or
jge
sub
mov
cmp
sub
xor
enter
xchg
lock
movsl
or
mov
lret
lock
jo
loope
test
enter
mov
aad
add
dec
aas
jbe
push
cmp
mov
and
inc
or
cs
mov
jmp
lea
hlt
call
dec
es
and
xor
push
movsl
mov
ror
mov
xor
cmpsl
push
pop
and
movsb
sub
mov
lret
sbb
in
ljmp
jecxz
push
sub
sarl
outsl
in
mov
cmp
out
cltd
and
pcmpgtd
lret
inc
setge
jl
rolb
mov
movl
xor
or
rcrb
xchg
cli
daa
sbb
or
insl
jmp
je
push
sub
xchg
xor
xor
mov
cmp
or
std
stc
sahf
leave
inc
jge
sub
stos
movsb
mov
enter
sti
or
aam
cmp
shll
pop
push
inc
in
jmp
adc
std
repz
xchg
in
lret
mov
or
shl
loop
add
loope
fdivr
ljmp
mov
sbb
and
loop,pt
cmp
xor
dec
cmpsl
and
or
sti
mov
jne
jg
jnp
dec
aas
ljmp
sar
fmul
jo
scas
sbb
xor
push
xor
pop
push
test
xor
orb
sbb
and
xor
sub
xchg
sbb
mov
stos
pop
inc
dec
enter
in
pop
inc
test
enter
insb
movsb
dec
scas
lock
jge
lahf
out
sub
shr
rorb
or
xchg
jle
jo
mulb
jne
das
out
dec
int3
je
inc
cmp
push
adc
xor
mov
call
inc
dec
mov
mov
adc
std
int
or
loope
les
cmp
andb
and
xchg
mov
cmp
lahf
pop
and
sbb
push
fimull
pop
and
and
push
and
push
adc
mov
dec
sub
mov
sbb
inc
inc
xchg
xor
fldt
dec
cwtl
add
loop
or
sub
add
pop
xchg
and
jo
lods
sub
sub
dec
pushl
andb
es
rcl
test
add
js
insb
scas
adc
lea
mulb
sarl
cmc
ja
mov
or
adc
jle
loop
mov
add
je
push
mov
push
push
cmp
dec
outsl
scas
inc
adc
mov
or
adc
push
int
movlps
add
push
jmp
mov
push
and
test
lahf
ds
sub
pop
push
adc
and
xchg
mov
sub
popa
loop
add
cmp
cmp
xchg
adc
mov
inc
mov
cmp
addr16
pop
mov
adc
xlat
sti
enter
lret
jp
xchg
cli
clc
inc
cmc
cmpsl
andl
arpl
cs
cmp
les
imul
je
int3
mov
insb
pop
push
jno
jge
inc
push
and
cmp
push
push
loop
incb
mov
push
cld
or
mov
sti
and
pop
fisubrl
loop
daa
aad
shrl
pop
or
lods
ds
out
clc
pop
push
fisttpll
testl
adc
pop
jmp
aaa
leave
jb
xchg
cltd
adc
mov
push
xchg
add
or
add
dec
in
xorl
cmp
ss
adc
cmp
mov
negb
pop
jg
dec
or
xchg
or
fdivr
fldcw
jg
andb
push
adc
out
fcomps
sbb
xlat
daa
xchg
and
mov
lahf
js
pop
out
and
mov
xor
add
inc
daa
pop
ja
cld
adc
jge
xchg
in
or
adc
add
out
adc
xor
mov
adc
pop
fildl
sub
jmp
and
lret
mov
push
int
aad
enter
in
aam
mov
dec
and
fcomps
rdtsc
inc
js
xchg
sbb
mov
mov
fsts
and
fldl
das
gs
mov
pop
lods
sbb
jne
adc
inc
inc
add
mov
xor
mov
mov
out
xor
sub
sbb
movsl
push
adc
out
aaa
cmp
cmp
test
call
mov
and
mov
test
mov
outsl
mov
dec
mov
shlb
inc
arpl
pop
call
pop
mov
pop
dec
and
gs
mov
jne
mov
jge
sub
adc
mov
dec
jl
mov
aaa
mov
mov
pop
data16
je
pop
out
aam
loop
adc
pop
adc
xchg
js
enter
stos
bound
call
test
push
lret
push
jmp
adc
adc
fs
sub
enter
or
cs
mov
mov
out
xchg
jge
cs
insb
ror
push
insl
mov
sbb
xchg
jle
dec
sbb
popa
push
fidivs
xor
and
pop
sti
add
nop
adc
inc
lahf
adc
pushl
inc
and
xchg
sbb
mov
push
inc
stos
outsb
rorb
inc
push
mov
jl
or
mov
jg
and
jo
hlt
xchg
test
sub
jg
mov
cmpl
xchg
lahf
push
or
arpl
stos
xchg
jge
and
idivl
push
mov
rorl
sbb
pusha
les
mov
sbb
inc
and
call
xor
push
jmp
mov
call
je
inc
fsts
scas
add
mov
xchg
pop
mov
jae
test
pop
fsubl
fcoms
pop
dec
mov
jge
les
jge
add
dec
inc
xchg
jmp
add
call
mov
dec
and
and
cli
aaa
push
lds
mov
scas
push
pop
rcll
inc
ret
loope
call
daa
nop
je
cmpsl
add
shr
bound
or
js
sub
mov
test
jne
mov
repz
xlat
inc
or
jl
xchg
push
xchg
push
adc
adc
das
jecxz
shr
repnz
dec
lods
pop
test
add
nop
mov
insl
or
xchg
sub
and
dec
and
xchg
adc
lcall
inc
repnz
pushf
push
nop
stos
jl
sbb
push
nop
mov
and
cltd
pop
sbb
and
or
popa
sar
cltd
hlt
dec
test
add
lock
aas
mov
inc
insb
call
push
xor
lock
pop
mov
inc
adc
push
dec
push
sbb
pop
mov
jnp
out
movsl
stos
and
adc
pop
icebp
in
call
add
ret
lea
div
cmpsb
pop
fisubl
rorb
xor
push
cwtl
xor
shll
adc
mov
sub
cld
test
inc
fnop
leave
xchg
js
and
mov
or
xchg
or
push
push
cld
mov
repnz
cmpsb
in
and
push
call
pop
outsb
inc
dec
or
in
mov
incl
mov
mov
mov
jb
popa
pminsw
cli
sbb
sub
rclb
mov
fstl
mov
stc
subl
enter
mov
mov
lods
icebp
mov
addr16
and
adc
dec
xchg
call
dec
mov
notl
or
xor
adc
mov
dec
sar
xchg
mov
push
int3
pop
push
cmp
cmpsb
hlt
out
in
xchg
int3
cmc
push
sub
xchg
jmp
sub
out
aad
push
and
ret
push
mov
pushf
inc
fcompl
sub
cmp
mov
add
sub
mov
or
test
in
sub
sub
icebp
or
mov
and
inc
cld
sahf
arpl
pop
orl
fsubl
sub
or
xchg
loopne
test
call
mov
adc
in
lret
adc
and
daa
xlat
int
lds
test
sub
das
dec
mov
lods
insb
mov
or
xor
movsb
dec
push
dec
mov
jae
fs
daa
inc
lea
and
inc
mov
inc
sub
push
jnp
push
out
call
stc
ljmp
incl
sub
je
or
push
lret
xchg
das
call
inc
ss
push
leave
cmp
push
jo
int
loop
jge
sub
mov
cmp
out
mov
mov
mov
and
or
movzwl
in
add
pop
stos
sub
push
adc
in
xchg
aam
mov
push
dec
aad
roll
aad
pusha
sahf
int3
cmp
addb
jne
das
sbb
movsl
pop
enter
lea
movsl
jecxz
push
inc
stos
jne
pop
sete
mov
lea
xor
pop
lahf
add
add
clc
cwtl
loop
cmp
outsb
adc
or
and
test
jle
jg
mov
pop
mov
sbb
pop
pop
lret
mov
mov
imul
fstpl
loop
imul
out
xor
nop
pop
lock
lods
mov
mov
xor
ja
jnp
cmp
xchg
push
mov
xor
sub
pop
adc
hlt
push
dec
or
jl
push
mov
or
ja
ret
xchg
je
sub
xchg
mov
fisttpl
lock
imul
test
fnstenv
mov
fwait
test
test
mov
test
es
cld
jnp
dec
movsb
cmp
test
pop
pushf
int
insl
or
test
dec
popa
fiaddl
inc
in
int3
mov
cmp
sbb
sbb
adc
xor
push
push
adcb
mov
es
aam
pop
nop
mov
and
inc
mov
test
nop
inc
xchg
cli
mov
jns
dec
sbb
sbb
or
ljmp
sub
cmp
lahf
mov
sti
mov
sub
je
jnp
and
cmp
sub
add
add
lods
outsb
push
out
push
in
movl
mov
mov
add
mov
mov
jno
das
and
cmc
dec
bound
and
push
or
adc
pop
or
repz
pop
cmpsb
dec
pop
push
fisubs
adc
inc
les
in
pop
out
jns
rcrb
out
enter
lret
adc
or
xchg
xchg
push
jp
or
pop
adc
ja
adc
and
call
jae
test
enter
cmp
or
push
push
sub
push
icebp
sbb
or
lock
and
xor
or
or
std
xor
add
adc
ljmp
sti
xor
sbb
mov
cmpsb
lret
bound
std
syscall
mov
and
cli
repz
bound
adc
enter
inc
outsb
aas
jl
dec
or
dec
in
cmp
xchg
push
mov
jge
dec
stc
js
add
aad
sub
ret
movsb
test
andb
in
in
dec
out
lahf
add
enter
dec
push
mov
jmp
gs
clc
mov
jo
jmp
xchg
sbb
pop
add
pop
push
jmp
ret
or
fs
xor
push
adc
sub
adc
or
rcl
cmp
idivb
adc
out
test
call
inc
fldenv
push
mov
and
adc
xchg
call
jg
test
push
mov
sub
mov
sti
out
jl
adc
hlt
jle
jmp
xchg
push
cmp
rcr
push
push
jo
or
pop
mov
push
out
insb
rcr
add
orb
lret
dec
cmpsl
ret
push
loop
lock
adcl
jmp
xacquire
sub
pop
or
lahf
sbb
sbb
int
push
movsl
push
shlb
ds
push
lock
pop
std
shlb
ss
pop
xor
jo
add
adc
xchg
fsubrl
les
stos
xchg
cmpsl
adc
idivb
adc
jecxz
test
incl
mulb
xor
inc
xor
pop
sarb
dec
pop
adc
mov
inc
repnz
xchg
imul
movsb
sbb
jle
fcomip
xor
cmp
jo
pop
add
mov
dec
mov
int
or
mov
mov
mov
pop
dec
xchg
aam
psrlq
xchg
mov
std
add
fsts
std
cmp
pop
cwtl
jecxz
daa
test
jne
enter
aam
cmp
popa
and
sub
and
daa
jg
mov
popf
and
cmp
jne
pop
clc
push
cmp
mov
cmpsb
imul
add
and
cmpl
dec
push
lock
lahf
pop
repz
push
call
adc
mov
sahf
call
shlb
jae
scas
fisttpll
arpl
sub
out
rcrb
mov
and
clc
jne
jae
pop
and
insb
push
xchg
and
in
sub
xor
nop
lret
sub
movsb
inc
mov
fcoms
sub
dec
mov
addr16
cmpl
cmpsb
jmp
mov
jne
int
adc
sub
fs
cwtl
pusha
movsb
and
xor
leave
andl
pushl
or
cld
cmp
or
push
add
cmc
mov
pusha
je
adc
mov
gs
adc
cltd
ret
inc
mov
int
or
aad
mov
icebp
mov
lahf
push
push
outsl
notl
lods
inc
and
repz
stc
dec
mov
dec
push
cmp
mov
mov
inc
test
or
sbb
pop
jmp
cli
inc
or
sbb
and
adc
mov
adc
aaa
adc
cli
ja
mov
cmpsl
ja
ja
sbb
adc
mov
push
mov
and
inc
inc
and
ret
test
push
lret
mov
jmp
xchg
leave
cmp
pop
mov
ja
and
push
inc
inc
sub
test
or
pop
dec
sbb
dec
dec
roll
push
enter
outsb
jb
adc
mov
shll
dec
pop
lds
outsb
push
icebp
adc
es
xchg
pop
and
test
sub
scas
cld
cmp
mov
or
and
fisubl
out
dec
loop
cmpb
sbb
inc
mov
push
adc
jne
testb
or
add
sub
cwtl
cmp
mov
push
ret
leave
mov
dec
and
adc
jmp
mov
cmp
lahf
sarl
mov
sti
push
cmp
setl
fs
inc
sbb
adc
jnp
dec
cmp
and
pop
push
stc
dec
mov
mov
push
test
adc
xor
push
or
push
rcrb
rorb
jle
scas
mov
add
icebp
movsl
lahf
jl
dec
dec
and
sub
fimuls
add
dec
outsb
jle
sbb
adc
push
cli
sub
lock
pop
push
lods
popa
psubb
lcall
push
or
adc
and
inc
dec
and
lock
lret
out
in
sub
pop
push
inc
add
rclb
in
pop
and
and
inc
dec
hlt
je
dec
fisttpll
icebp
std
ljmp
push
mov
sub
lods
mov
push
nop
push
jle
mov
xor
add
adc
mov
ret
or
shlb
mov
les
add
add
inc
or
xor
lock
call
mov
movsb
ds
fidivl
pusha
jno
adc
jns
fsts
mov
hlt
mov
es
fimull
sbb
cmp
pop
mov
pop
cmp
dec
mov
adc
movl
xchg
data16
fcomi
cmc
out
push
dec
and
ret
test
in
cmpsb
mov
xchg
popa
mov
xchg
pop
mov
daa
push
in
dec
dec
negb
popa
inc
cmp
loope
outsl
mov
clc
cmp
iret
or
call
and
aam
clc
adc
aas
inc
rol
cld
dec
jne
adc
and
dec
xchg
pop
pop
push
mov
push
aaa
dec
fisttps
ljmp
cli
cmc
jmp
xor
xor
in
fcom
aam
dec
leave
sbb
inc
adc
mov
and
xor
xlat
push
std
nop
int3
xchg
cld
sbb
scas
mov
mov
shrb
addr16
stc
pusha
inc
push
sbb
ja
mov
jne
pop
xor
add
adc
add
or
add
add
jmp
sbb
call
jns
sbb
repz
mov
adc
adc
jmp
mov
das
mov
movsl
lea
mov
cmc
push
hlt
call
mov
sub
lods
jl
cltd
mov
and
addb
hlt
xchg
mov
cwtl
pop
rclb
or
cmpl
les
cli
stc
out
and
and
cmpsb
mov
and
mov
jmp
out
xor
lds
sbb
loop
dec
lds
test
sub
das
lds
leave
subl
pop
mov
pop
inc
jle
push
std
in
sbb
arpl
movsl
shrl
lret
mov
xor
rolb
cmp
lret
jmp
test
inc
fisttpll
or
rcr
or
mov
inc
add
lcall
daa
inc
imul
mov
stc
cmp
sbb
adc
mov
fbstp
xor
dec
dec
push
cmp
jne
and
cmp
sbb
scas
inc
repnz
loop
mov
xor
sbb
cmp
push
sbb
push
sbb
insb
fnsave
call
and
push
pop
test
gs
pop
scas
movsb
aam
push
push
aaa
scas
cmc
and
nop
adc
jns
add
push
mov
mov
or
ret
xchg
insl
mov
jle
jmp
mov
and
or
jl
scas
shlb
add
cmp
mov
cmc
adc
or
jmp
jmp
cltd
mov
pushf
cld
clc
dec
cmc
ret
mov
andb
push
push
mov
xor
lods
popf
divb
lret
std
sahf
andb
jmp
or
mov
outsl
pop
data16
lods
adc
mov
faddl
clc
nop
jo
sbb
jl
and
cmp
inc
xor
adc
adc
adc
ljmp
dec
or
sbb
push
es
push
mov
jl
or
andb
or
setge
mov
mov
push
mov
cwtl
sub
daa
or
mov
int3
out
sbb
xor
dec
or
jo
ljmp
inc
xor
cmpb
adc
pop
or
sub
pop
jmp
add
and
mov
or
add
pop
xor
popf
inc
adc
xchg
scas
cmp
and
mov
jb
cli
push
pop
fst
pop
nop
or
sbbl
or
xor
pop
push
icebp
sub
adc
jecxz
pop
dec
inc
dec
dec
and
cmpsb
adc
int3
and
call
pop
or
mov
and
test
int
sbb
xchg
xchg
xchg
push
lret
inc
or
cmp
dec
pop
jge
sti
or
xchg
ljmp
popf
jo
int
and
loope
jmp
aas
dec
jno
mov
inc
andl
adc
sub
mov
mov
cmp
fdivs
adc
push
cmpl
aas
or
xor
inc
iret
addl
lea
jnp
push
nop
or
sbb
push
add
adc
jmp
xchg
mov
dec
jmp
mov
push
inc
xchg
dec
call
aam
jo
fstps
adc
cld
pop
daa
mov
jbe
or
mov
sbb
push
push
jbe
xchg
jns
movsb
xor
inc
test
dec
bt
xor
clc
inc
lahf
les
and
les
test
das
nop
and
mov
pop
in
sub
pop
std
shlb
adc
stc
and
lret
xchg
call
aaa
xor
imul
and
add
into
int
cld
or
fs
add
lcall
jb
and
ret
sub
adc
out
nop
push
hlt
inc
mov
jp
popw
adc
or
sub
or
icebp
aas
pop
mov
or
aam
jl
jb
and
daa
icebp
in
gs
pop
inc
jne
mov
pop
mov
popf
iret
mov
test
xchg
dec
jg
test
xor
aas
push
pop
sub
js
jns
jbe
sahf
shlb
sub
cld
shr
mov
mov
push
loopne
inc
xor
inc
push
call
or
cwtl
bound
xlat
repnz
or
sbbb
add
call
dec
adc
bound
das
pop
adc
sub
push
mov
cli
imul
mov
je
pop
xchg
or
mov
aad
icebp
popf
scas
outsl
dec
mov
dec
jb
ret
test
mov
inc
add
pop
flds
mov
or
popa
inc
xor
mov
push
rclb
jge
cmpsb
test
pop
out
jbe
xor
pop
mov
adc
or
insb
jl
xchg
pop
add
and
call
inc
inc
push
mov
aad
aas
and
scas
mov
add
push
add
addb
in
adc
ret
pop
mov
adc
ljmp
add
dec
ret
mov
sbb
adc
adc
jle
cmpsl
and
sub
js
call
out
and
fsubs
pop
clc
jge
dec
inc
xor
sbb
cmp
inc
pop
call
mov
sbb
popf
in
pop
pslld
call
jae
or
pop
sbbb
call
pop
xor
cmpsb
adc
mov
divl
div
sarl
shll
sbb
add
and
js
add
or
pop
sbb
push
imul
stos
push
and
cmpsb
cmp
add
add
daa
inc
xor
sti
mov
adc
or
test
mov
dec
cmp
rclb
lock
mov
jge
sub
pop
xchg
xchg
or
sub
daa
stos
clc
sub
clc
jmp
and
cs
data16
mov
adc
orb
and
mov
pop
adc
lret
ret
inc
add
pop
push
ljmp
push
mov
dec
cwtl
dec
inc
xchg
enter
sbb
scas
dec
xorl
add
push
addb
adc
xchg
jae
add
lea
outsb
push
sub
idivb
add
popf
sub
and
inc
pop
enter
xchg
fidivs
sbb
sbb
inc
or
cmpb
jmp
add
adc
adc
and
js
cmp
dec
and
pop
stos
js
or
sub
ja
shl
fs
jb
data16
cmp
jno
jmp
mov
adc
and
call
jmp
test
push
fs
sbb
icebp
sbb
cld
test
xor
push
inc
shl
scas
andb
into
ja
fs
inc
sub
call
nop
test
sbb
mov
xlat
stc
lds
xchg
xchg
rcrb
jmp
xor
je
push
inc
inc
xor
mov
push
daa
adc
and
xchg
push
outsb
lret
adc
mov
pop
push
inc
gs
push
push
fisttps
cs
inc
mov
inc
mov
adc
mov
push
sbb
mov
cmp
and
fadds
dec
jns
xchg
sub
cmp
xor
dec
xor
or
lods
sbb
jo
jp
push
shrb
aad
dec
mov
xor
lods
lods
or
call
push
fstps
cli
xchg
inc
dec
mov
add
xchg
xchg
fucom
clc
add
push
adc
xchg
scas
and
lcall
movb
decb
add
cmpl
aas
mov
cmpb
add
addr16
jne
mov
fsubrl
call
nop
popf
adc
inc
push
add
xor
daa
repz
mov
sub
or
shr
je
call
dec
sub
inc
adc
stos
push
jmp
lahf
push
dec
or
or
out
test
sarl
sub
mov
jno
scas
pop
or
or
insl
popf
sbb
sub
inc
or
mov
ljmp
mov
aad
sbb
aad
xor
call
inc
inc
sbb
iret
xchg
scas
ret
adc
push
fsts
aas
cmp
cltd
repz
xor
push
adc
push
ret
outsl
mov
ds
xor
or
or
aaa
mov
nop
or
sarb
sbb
aaa
in
cmp
cmc
sub
ret
or
inc
in
mov
loope
and
incl
cltd
call
cmp
jne
pop
out
jl
out
mov
cmpsb
sbb
sbb
scas
adc
jne
data16
pop
mov
shlb
push
pop
jmp
xor
out
mov
cwtl
mov
clc
mov
jecxz
stc
and
cmp
out
adc
cmc
clc
inc
sub
imul
jg
data16
sbb
pop
push
inc
xchg
jmp
adc
test
pop
leave
or
sub
adc
sub
push
push
in
mov
test
out
add
insb
je
jae
xor
scas
arpl
mov
in
jns
test
adc
std
jmp
sub
aaa
adc
or
das
shlb
cwtl
push
or
int3
cld
lcall
jmp
mov
leave
icebp
lret
sbb
call
mov
xorl
xchg
pop
jae
xor
push
mov
and
and
sub
adc
xorb
jmp
mov
in
out
scas
enter
add
sbb
mov
shrb
jg
xor
aaa
test
or
xchg
pop
mov
lret
and
mov
xlat
add
or
je
push
fcmovne
lds
sti
call
xchg
xadd
stos
add
mov
iret
test
pusha
sub
xchg
jo
ret
and
xchg
movsb
adc
and
and
pop
imul
jg
sbb
sbb
mov
adc
les
or
rclb
les
scas
int
sub
adc
pop
cmpsb
imul
mov
fcmovbe
mov
adc
and
pop
mov
xor
lea
jmp
lahf
inc
pop
shlb
mov
push
cwtl
sub
mov
inc
ss
mov
inc
jbe
or
inc
mov
xchg
ret
dec
call
stc
jo
jg
lret
fidivl
popf
add
stos
mov
dec
mov
inc
and
scas
dec
xchg
cmp
outsb
fs
cli
pushf
push
insb
andl
out
adc
mov
dec
dec
dec
lods
loopne
bnd
sbb
pop
sbb
sub
imul
mov
das
xor
call
jne
cmp
es
sbb
sbb
test
dec
xorb
jae
cmp
sbb
es
fidivrl
cli
int3
arpl
or
imul
ljmp
mov
fcoml
sub
or
adc
add
sbb
add
aam
cli
loopne
mov
pop
xchg
push
pop
or
je
xchg
inc
out
and
iret
ljmp
mov
mov
inc
sub
dec
adc
mov
mov
push
adc
aam
xor
rcrl
add
sti
mov
mov
mov
jle
pushf
mov
add
push
call
jne
lds
push
xchg
fisubl
dec
rclb
cmp
fcomps
sub
leave
inc
xchg
outsb
xchg
adc
cli
std
lret
mov
mov
aam
outsb
or
das
or
pop
fbstp
sub
inc
pop
or
call
or
and
movsb
sub
fsubrs
or
dec
decl
mov
mov
cmpsb
lahf
inc
mov
sarb
repnz
push
das
xor
or
clc
xchg
shlb
les
add
lcall
pop
pop
xchg
and
dec
xchg
mul
sub
dec
inc
cmp
cli
adc
lea
and
cli
wbinvd
sbb
mov
mov
xchg
push
and
mov
sarb
lods
xchg
jp
push
sbb
das
rcrl
int3
pop
dec
add
cld
and
out
push
hlt
mov
lcall
sti
cld
cmp
sub
in
push
jmp
inc
cld
call
push
mov
inc
and
ret
pop
xor
adc
inc
cli
aas
or
sti
push
mov
jo
mov
fnstcw
push
mov
movb
btrl
ret
mov
pusha
bound
mov
test
adc
xchg
je
or
sbb
jle
mov
divl
cmpsb
mov
and
or
hlt
and
loope
xchg
jnp
pop
xorl
sti
push
or
lret
cmp
into
dec
adc
mov
repz
mov
leave
mov
add
fldl
dec
out
out
rclb
inc
dec
pusha
mov
sbb
leave
pop
sub
lock
dec
lock
xlat
adc
enter
inc
in
push
adc
mov
test
jne
mov
push
rorb
adc
and
aam
xchg
rorb
add
ds
out
and
cwtl
and
out
int3
or
push
dec
loop
pop
mov
nop
xchg
pop
or
call
les
negl
mov
in
pop
and
sub
call
je
jnp
xor
push
daa
out
sub
insl
mov
push
mov
std
dec
jo
push
add
sub
sar
loope
xlat
xchg
push
push
outsl
or
fucomp
ds
jle
lret
js
cmp
insb
push
cltd
jg
test
or
in
fsts
sub
js
adc
sarl
xor
and
push
mov
jno
repnz
ss
xchg
mov
mov
lods
loop
das
xchg
mov
jmp
adc
mov
dec
fwait
movsb
pop
sbb
and
clc
cmpsl
jbe
leave
pusha
sbb
lahf
or
test
cmp
rcll
add
xor
jge
jp
lcall
dec
push
test
cli
notb
outsl
call
or
pop
or
adc
xchg
bound
testl
std
or
pop
hlt
cwtl
arpl
pop
sar
testl
sub
hlt
or
adc
ret
mov
out
lret
dec
jnp
cmc
andb
push
push
add
add
sub
js
popa
pop
sub
lods
mov
push
lea
aas
movsl
cmp
data16
jle
mov
xchg
test
push
or
es
cmp
jecxz
hlt
test
lock
lahf
add
test
cmpsb
js
or
fistpll
fs
fisubs
daa
cli
and
jl
or
xorb
mov
clc
das
mov
pusha
cmp
repnz
sub
adc
add
sbb
shlb
daa
pusha
adc
dec
popf
imul
sti
push
lahf
jo
int
xor
cmp
pop
call
bound
cmp
push
jne
mov
push
or
mov
add
push
or
sub
pushf
mov
imul
sub
sbb
or
xlat
outsb
xchg
push
or
cmp
and
cli
pop
rcr
push
aam
push
add
adc
or
adc
cmc
sbb
inc
add
std
int
and
lea
in
in
movsl
jl,pt
in
ljmp
ret
sahf
loopne
and
mov
add
and
scas
add
xchg
mov
test
mov
scas
cwtl
loopne
aam
out
out
dec
ljmp
adc
sub
sub
cltd
imul
sbb
mov
decl
daa
mov
jge
les
fcoms
sub
cmp
ljmp
rorl
lock
jnp
je
orl
roll
push
cmp
jne
adc
loop
adc
inc
in
loopne
int
mov
daa
mov
in
push
add
sub
imul
xor
push
jmp
pop
test
ds
iret
pop
push
jecxz
adc
mov
aad
dec
or
pop
bts
pop
mov
out
mov
push
pop
pop
sbb
in
push
shrb
adc
sbbb
xchg
jp
inc
sti
pop
inc
in
aaa
or
or
int
add
stc
cli
sub
pushf
xchg
es
paddq
push
xchg
and
inc
adc
pop
cld
mov
push
call
jo
test
add
pop
aad
push
pop
gs
call
out
pop
xchg
push
sub
mov
xlat
cmovno
adc
movsl
mov
mov
lock
push
dec
repz
fucom
inc
lods
daa
sub
sbb
es
daa
sub
add
push
sbb
loope
scas
sub
and
add
je
push
lea
loope
and
repz
adc
mov
xchg
fcoml
rcrl
stos
dec
cli
mov
dec
fsubrl
aas
xlat
lods
lods
sub
cli
inc
cmp
pop
das
icebp
jns
fdiv
cli
dec
sub
sti
mov
pushf
and
pop
cmp
js
push
sbb
or
mov
sbb
hlt
jno
adc
add
dec
in
cld
sub
xchg
and
sbb
in
orl
xchg
inc
sub
push
push
adcl
and
or
or
fs
or
dec
das
repz
in
movsb
xor
adc
std
push
lcall
xorb
bound
xor
in
and
mov
or
outsb
jmp
and
test
out
xor
adc
xor
push
les
and
inc
in
aad
insb
inc
loopne
jmp
nop
pop
movsb
call
fnstenv
scas
cmp
inc
mov
pusha
test
push
pop
loopne
cltd
test
fs
fnstsw
add
xor
je
and
negl
add
add
pushf
cmpsb
cmp
pop
mov
add
pop
test
rep
xchg
jl
sahf
push
int
js
jle
jb
cmpsb
popa
mov
mov
adc
push
inc
sub
mov
mov
cwtl
add
jns
inc
lcall
push
dec
mov
push
jno
inc
nop
push
aad
adc
sub
push
inc
sbb
and
sbb
or
pop
out
nop
shl
add
xchg
fmuls
cwtl
es
lods
iret
data16
and
and
je
test
pop
movsl
sbb
fs
pop
clc
mov
lcall
int
mov
fildl
daa
xchg
adc
call
scas
pop
enter
mov
les
in
jae
stos
mov
fcomp
mov
and
add
mov
inc
inc
orb
rolb
cli
movsb
test
and
mov
lret
push
push
mov
add
movsb
sbb
xor
xor
xchg
sbb
clc
addl
add
movsb
inc
lods
nop
dec
insb
ds
je
scas
roll
loopne
shlb
sar
mov
arpl
cmp
jge
mov
sub
mov
add
cs
out
sub
dec
inc
jmp
cmp
jl
mov
sub
and
xor
cltd
push
loopne
aad
imul
loop
pop
repnz
fs
inc
int3
cmc
and
inc
pop
xor
mov
js
nop
or
popf
adc
cmpsl
vpxor
fmulp
adc
and
jecxz
push
adc
out
pop
mov
push
fs
push
enter
lea
add
dec
push
ret
ljmp
xor
dec
loop
leave
clc
pop
sbb
mov
inc
inc
nop
adc
pusha
bound
loope
repz
and
lea
xchg
cmpsl
mov
and
or
dec
xorl
call
shl
outsl
xchg
repz
or
in
add
jle
xchg
ss
jne
fs
or
aaa
jns
or
cli
xchg
cmp
xchg
hlt
cmpsl
aam
lods
dec
inc
push
jae
xchg
jo
sub
je
inc
or
popa
movsl
hlt
jge
jno
cltd
insl
lahf
mov
inc
push
mov
leave
pop
in
and
test
imul
out
dec
mov
fs
inc
call
fiaddl
sbb
lcall
pusha
xlat
and
cmp
jne
in
mov
flds
add
add
sti
and
add
repz
mov
sub
ret
mov
je
jne
inc
mov
or
sarb
pop
sub
push
adc
jmp
fisttps
jmp
enter
dec
mov
cli
adc
orl
sbb
push
adc
ja
fst
sub
and
push
in
out
mov
repz
xchg
xor
push
hlt
xchg
adc
repz
test
enterw
add
lea
sub
mov
je
pop
push
fnstsw
jne
rolb
je
adc
xchg
test
dec
fcoml
adc
adc
add
xchg
inc
jecxz
jae
lahf
inc
data16
dec
adc
lret
sub
adc
pop
lds
sbb
push
or
jmp
inc
pop
xchg
lret
js
xchg
mov
xor
adc
cli
call
add
mov
cmp
fmull
cmp
ficoms
stc
xor
lea
call
gs
scas
movsb
cmp
adc
add
mov
add
cwtl
mov
mov
adc
sbb
fs
push
sbb
insb
inc
jo
popf
push
or
dec
add
imul
xlat
aad
mov
or
call
sub
sbb
and
pop
sbb
adc
cli
xchg
sbb
and
pop
xor
mull
insb
data16
lock
in
sub
mov
dec
nopl
jmp
leave
pop
push
push
push
or
sarb
hlt
and
xchg
js
xlat
test
push
movsl
and
sub
outsb
inc
cmp
fcoml
add
mov
outsb
mov
jne
push
out
notb
xchg
cli
mov
aad
jbe,pt
xchg
aam
imul
cmp
in
cltd
rcr
je
out
xor
cmpsb
cs
sub
adc
cmp
lret
ret
and
inc
push
push
mov
cmp
and
and
fildll
ret
or
cli
mov
aas
inc
icebp
stc
in
jne
push
xor
fstpl
adc
sbb
loop
mov
add
add
sbb
ret
mov
movsb
pop
cltd
dec
xchg
or
jge
loopne
or
add
sub
cmpb
aas
cltd
cmp
loopne
inc
adc
and
cmpsb
cld
mov
jmp
jae
jmp
clc
roll
inc
dec
add
out
inc
lds
call
je
mov
unpckhps
sbb
pop
adc
popa
jae
bound
sbb
dec
shr
add
cwtl
dec
mov
xor
or
icebp
dec
sbb
adc
daa
jo
notl
fs
adc
jns
or
sti
push
ja
mov
xor
and
repnz
and
push
popa
jbe
cmpsb
and
push
or
inc
js
or
inc
imul
push
xchg
punpckldq
stos
adc
es
mov
xor
ret
mov
and
and
xor
pushf
sub
sub
pop
mov
scas
xor
adc
fsubrl
or
cmpsl
xlat
sub
es
xchg
xor
cwtl
dec
sub
mov
test
xor
adc
aad
or
or
xor
add
int3
mov
or
or
pushf
jp
int3
and
inc
pop
xor
mov
fstl
xchg
sub
nop
rcl
inc
mov
jmp
inc
cmp
push
push
pop
adc
rcll
ds
in
addr16
sarb
hlt
leave
mov
or
sbb
pop
mov
fcompl
ret
push
mov
pop
xlat
out
and
icebp
andb
jmp
in
sub
xor
push
mov
mov
add
xchg
js
adc
mov
adc
mov
adc
adc
adc
in
std
xor
push
xchg
mov
dec
pop
imul
lock
mov
shlb
jl
cs
dec
jb,pn
lock
outsl
adc
push
and
add
pop
cmp
add
daa
fcoml
add
dec
sbb
jmp
xor
pop
xor
call
mov
repz
adc
nopl
les
and
dec
out
cmp
inc
push
sbb
mov
out
leave
mov
jno
fistps
gs
sbb
mov
inc
popa
push
adc
cmp
cld
js
mov
movsb
push
shlb
sbb
or
xchg
and
daa
mov
inc
push
std
jo
incb
inc
or
jb
sub
std
adc
fdivr
push
and
push
lea
scas
aam
push
popa
std
and
adc
shrl
and
adc
and
mov
mov
add
rep
movsb
pop
push
or
fsubr
or
rolb
fmuls
lahf
push
popf
pop
lret
xchg
int3
bound
or
lcall
lock
les
adc
xor
and
fnsave
and
add
xchg
jg
mov
sub
pop
mov
and
inc
adc
sbb
rorb
or
adc
test
jnp
push
fcoms
adc
orb
xchg
mov
inc
mov
jns
icebp
pop
add
js
fadds
cltd
mov
jnp
push
or
and
cmp
inc
push
adc
dec
mov
mov
cmpsb
call
je
lret
xchg
rcrb
mov
aad
or
int3
sbb
pop
push
add
push
out
lods
insb
mov
cmp
stos
mov
pop
push
scas
cmp
add
cmpsb
mov
int
mov
iret
and
push
mov
sub
mov
rolb
enter
xor
sbb
adc
lock
push
push
and
loop
xlat
adc
cld
xchg
std
mov
jmp
adc
out
fdivrs
add
or
cli
adc
jb
adc
hlt
aaa
test
cmpsb
adc
inc
call
mov
scas
call
or
fcoml
jmp
test
inc
pop
aam
adc
adc
adc
bound
adc
jmp
mov
inc
push
fldcw
and
outsb
sbb
mov
cmp
aad
sbb
cltd
push
dec
push
call
mov
sbb
or
into
mov
loop
jmp
les
test
push
bound
sub
or
int3
mov
aaa
mov
std
or
push
mov
cmp
inc
add
incb
push
and
jno
mov
flds
or
xchg
inc
xor
cmp
inc
pop
push
cmc
or
pop
sbb
mov
push
test
pop
sbb
cmpsl
and
inc
loop
xchg
out
mov
mov
push
xor
dec
loope
jp
in
and
test
aam
mov
out
loope
mov
sbb
cmp
or
and
xchg
mov
iret
and
les
call
insb
pop
cmpl
and
imul
les
inc
mov
or
outsb
mov
clc
insl
or
inc
rorb
cmp
or
push
je
mov
movsl
adcl
js
adc
and
cmpb
add
cmp
aam
xor
test
or
and
inc
push
pop
or
dec
xchg
or
test
sbb
push
sbb
or
movsb
pusha
inc
push
adc
popa
or
or
and
dec
cmp
or
pop
mov
mov
adc
test
or
push
add
xchg
mov
pop
jp
test
add
mov
cltd
clc
int3
loope
or
mov
mov
popa
or
imul
lea
adc
add
sbb
mov
hlt
fstp
leave
or
or
mov
dec
sbb
rclb
and
or
inc
int3
aaa
cmc
or
mov
inc
or
andl
sbb
push
addl
in
pop
call
rorl
sbb
aas
inc
pop
or
jns
xor
dec
sub
sbb
fdivrs
and
sbb
sub
xlat
repz
add
inc
and
xor
sbb
rolb
or
add
arpl
sbb
sbb
clc
and
enter
or
fcmovnu
fiaddl
fxch
loopne
jo
xor
in
inc
jb
outsl
iret
add
imul
mov
add
aam
jbe
divb
add
xor
add
inc
inc
inc
inc
mov
into
mov
or
sbb
sbb
add
mov
jo
addb
inc
or
lods
sbb
add
add
mov
imul
xchg
arpl
cmp
or
sar
or
or
or
dec
add
and
enter
or
and
inc
call
add
or
xchg
adc
sbb
mov
adc
das
shll
dec
inc
push
pop
mov
push
xchg
andb
inc
nop
cwtl
mov
dec
mov
inc
rcr
mov
adc
and
dec
add
in
xor
add
add
and
adc
inc
xor
sbb
inc
jb
rorb
jno
je
in
mov
dec
jne
and
movsb
adc
pop
call
les
je
popa
and
sbb
adc
pop
and
and
push
cmp
dec
or
cltd
adc
adc
or
int3
cmp
sub
aam
push
xchg
pusha
and
test
enter
call
incb
mov
adc
pop
pop
ljmp
or
mov
dec
inc
inc
fs
push
add
xor
js
jmp
lock
cmp
add
xchg
jae
cwtl
mov
jb
sub
mov
cwtl
adc
push
sub
adc
and
adc
pop
and
lcall
xor
xor
adc
or
xor
inc
sub
adc
push
push
and
inc
mov
faddl
lock
in
push
sbb
adc
loop
nop
je
adc
gs
enter
add
adc
sbb
add
movlps
dec
pusha
xchg
adc
js
adc
add
mov
and
mov
and
rolb
push
adc
and
dec
push
xchg
or
fs
add
and
dec
mov
inc
add
mov
adc
and
inc
or
or
xchg
and
js
cmpsb
mov
inc
enter
pop
and
inc
jo
mov
or
ret
push
cmp
or
sbb
adc
dec
mov
cmpb
dec
in
xchg
mov
mov
cmp
mov
push
dec
mov
inc
sbb
cwtl
adc
and
dec
call
bound
add
add
ret
gs
jmp
adc
or
dec
data16
pcmpgtw
pop
loopne
fwait
arpl
inc
addb
inc
add
xor
xchg
js
je
bound
icebp
dec
or
fwait
or
or
or
adc
and
sbbb
push
adc
mov
test
mov
mov
js
mov
sub
push
dec
fs
je
addb
rcrb
fsubs
dec
lock
clc
imul
jl
subb
mov
lcall
jle
or
pop
sbb
mov
sbb
inc
lods
mov
or
dec
inc
add
add
adc
cmp
dec
fwait
pop
aam
adc
gs
or
mov
and
xchg
pop
enter
je
test
jmp
push
enter
jb
inc
sub
or
cmp
inc
and
dec
push
inc
jo
dec
mov
fs
dec
clc
mov
add
xchg
nop
adc
movsl
sub
mov
es
and
or
dec
js
mov
cwtl
inc
mov
mov
adc
and
pop
adc
sub
inc
adc
dec
jo
andb
inc
mov
loopne
sbb
jo
jo
mov
push
adc
or
out
and
adc
inc
inc
adc
test
or
push
nop
adc
rclb
cld
loopne
cli
adc
and
inc
add
or
xchg
sbb
testl
and
dec
hlt
xchg
push
repnz
lock
mov
out
inc
enter
adc
and
pop
and
xchg
adc
ljmp
xchg
cmp
sub
sti
in
cmp
add
add
add
nop
repz
subb
inc
or
or
stos
add
cmc
sub
ss
inc
adc
sbb
test
add
je
mov
nop
adc
or
hlt
cmp
pusha
lods
aad
lds
daa
mov
add
add
int3
sti
inc
test
adc
aaa
je
cmp
add
cmpsl
out
mov
pop
pop
inc
sahf
int3
js
shlb
xor
cltd
or
cmovbe
nop
sbb
xchg
stc
or
xchg
cli
and
inc
cld
std
mov
adc
and
dec
add
test
addb
add
add
mov
or
fs
dec
adc
in
pop
je
movsl
lock
mov
xchg
sbb
mov
sbb
sub
out
popa
and
adc
repnz
inc
sub
pop
or
dec
mov
imul
adc
mov
cmpsb
xor
enter
or
pop
dec
or
andb
push
or
sarb
adc
jns
cwtl
rclb
sbb
shll
call
arpl
and
push
pop
xchg
mov
xor
lret
call
cltd
sbb
pop
mov
test
jns
sbb
sbb
sbb
int3
and
popa
or
loope
or
les
push
sbb
clc
mov
adc
mov
andb
mov
fs
inc
shlb
cmp
orb
pushf
sub
xor
lret
mov
imul
in
jmp
adc
or
in
mov
mov
jo
fsts
cld
dec
mov
mov
fs
insb
xchg
imul
sub
fs
lods
imul
test
cmp
shrb
or
dec
xor
test
xchg
mov
or
push
pop
mov
cwtl
or
sub
in
cmp
leave
int3
shr
sub
inc
mov
sub
xor
add
jno
xor
in
pop
shll
popa
cwtl
fdivs
or
adc
adc
cwtl
movsb
int3
int3
mov
movsl
cmp
mov
push
cmp
cltd
mov
sbb
test
sbb
pop
push
hlt
rclb
dec
sub
and
dec
lock
mov
and
pop
addb
sub
pop
pop
push
test
xchg
jecxz
dec
dec
sbbb
enterw
sahf
inc
cltd
mov
dec
movsl
adc
xor
test
or
js
jmp
jo
rclb
test
sub
adc
and
pop
cltd
jns
or
xchg
dec
mov
or
lock
adc
xchg
inc
xor
cmp
adc
mov
push
mov
dec
clc
mov
adc
sub
adc
loopne
test
or
jno
dec
test
xchg
or
or
addb
movsl
add
inc
xchg
inc
or
xchg
cltd
and
pop
adc
adc
dec
lock
lcall
adc
adc
fwait
and
pop
lahf
and
js
mov
adc
movsb
adc
loope
scas
add
inc
ror
xchg
in
loop
add
push
and
inc
dec
roll
mov
jp
or
inc
aam
mov
adc
and
add
dec
cmp
js
mov
dec
lret
and
and
cltd
inc
sbb
mov
dec
and
dec
push
inc
sahf
stos
mov
ljmp
adc
and
gs
inc
xor
pusha
and
dec
xchg
test
mov
les
rclb
hlt
adc
fwait
cmp
push
adc
xor
inc
and
dec
inc
bound
adcb
and
dec
scas
xchg
shlb
inc
fsubr
mov
adc
pushf
add
and
dec
xor
je
mov
rclb
push
inc
popf
push
mov
xor
inc
dec
push
xchg
data16
mov
fmuls
xchg
clc
sbb
jmp
dec
pop
mov
je
test
xchg
test
mov
notb
push
lahf
add
and
dec
cmp
dec
inc
add
adc
xchg
cmpsb
adc
mov
adc
and
cld
adc
mov
pusha
and
dec
test
scas
mov
and
dec
lock
adc
mov
cmp
pusha
dec
jb
mov
lcall
ljmp
enter
pop
and
jbe
mov
dec
into
xchg
fisubs
lock
adcl
dec
xchg
pop
and
xchg
and
dec
repnz
movsb
adc
inc
add
adc
or
pop
adc
jp
mov
adc
and
inc
or
and
inc
dec
pop
mov
test
dec
mov
inc
aam
mov
adc
and
cmpsb
add
dec
sub
push
pusha
mov
andb
movsb
xchg
mov
rolb
clc
adc
add
and
dec
inc
xchg
push
and
orb
dec
ret
and
inc
repnz
and
and
inc
cmp
push
adc
dec
test
mov
mov
adc
and
inc
or
or
xor
inc
inc
push
bound
lcall
inc
fsubr
mov
adc
jmp
xchg
and
push
mov
xchg
dec
mov
and
inc
out
mov
stos
adcl
dec
inc
xchg
dec
and
data16
mov
lcall
and
inc
in
mov
adc
lods
add
and
dec
cmp
push
mov
dec
mov
and
inc
in
mov
lods
adcl
dec
inc
xchg
pop
and
je
mov
dec
enter
out
hlt
add
sbb
or
insb
or
mov
dec
fsubl
clc
inc
adc
mov
and
dec
mov
inc
in
mov
mov
and
ss
dec
pusha
xchg
js
nop
inc
mov
or
out
or
mov
and
lea
fstp
int3
add
cmp
inc
xor
or
add
out
add
loopne
outsb
add
pop
xor
daa
sub
addr16
xchg
jl
xchg
out
out
out
out
out
out
out
out
out
out
out
loope
xor
shrl
insl
loope
jmp
mov
mov
stc
enter
sar
aam
fdivr
fdivr
idiv
clc
push
xor
je
jbe
js
jp
jl
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
aas
push
xor
je
jbe
js
jp
jl
jle
jle
jle
jle
jle
sbb
xor
xchg
lret
ss
leave
jb
call
insl
je
jbe
js
pop
pop
cmp
cmp
leave
sbb
and
sub
xor
stc
pop
stc
imul
mov
lcall
stc
stc
aad
loope
jmp
clc
pop
cmp
je
jbe
js
jp
jl
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
sbb
cmp
popf
es
lret
lahf
jmp
or
jae
jns
xchg
loope
jmp
mov
stc
aad
idiv
push
aas
jb
je
jbe
loopne
loope
int3
ret
sbb
xor
popf
jb
js
mov
xchg
lahf
pop
fistps
daa
daa
das
inc
bound
test
jmp
testl
mov
sub
stc
pop
stc
test
mov
pushf
stc
mov
sar
stc
fbld
xor
xchg
push
sahf
push
pop
les
clc
mov
jo
jns
jg
lahf
cwtl
pop
jmp
xor
sbb
sub
add
lock
call
xchg
hlt
lahf
clc
ret
cld
jecxz
or
and
cmp
lock
add
cmp
dec
dec
mov
iret
inc
cmp
stos
lock
xor
les
loope
jmp
or
cmp
js
dec
adc
out
cli
addl
sbb
push
ret
xchg
mov
repz
repz
getsec
cmp
inc
call
mov
mov
cmp
sarl
cmp
push
add
or
mov
btr
and
jb
in
mov
call
nop
mov
add
xchg
cmpsl
out
in
out
div
out
loope
cmp
xchg
fstps
mov
sub
and
push
jg
mov
mov
lods
stc
mov
mov
fyl2xp1
in
clc
push
aas
jb
je
jbe
loopne
mov
push
mov
fnsave
or
cmp
push
sbb
and
icebp
sub
mov
je
sbb
xor
xchg
sbb
pop
xor
rcr
loop
ds
int
aad
fstpl
cmc
sar
fprem
aaa
cmp
je
sbb
cmp
cmp
fwait
inc
cmpsl
shll
mov
repz
cmp
in
call
sbb
repz
repz
repz
repz
fwait
rep
repz
mov
repz
repz
lock
push
in
fs
xchg
xchg
cld
xchg
test
stc
mov
lret
stc
xlat
stc
in
idiv
inc
push
fcomps
mov
ret
mov
xchg
inc
mov
pop
dec
bound
jp
or
iret
xchg
iret
lcall
iret
mov
iret
ror
fcmove
loop
ljmp
xor
jo
xchg
add
or
adc
and
xor
mov
lahf
push
lahf
pop
lahf
bound
iret
adc
ficoms
iret
stos
iret
mov
mov
iret
ror
fcmove
loop
ljmp
xor
xchg
adc
sub
xor
inc
stc
dec
stc
push
stc
pop
xor
push
jb
jp
cmp
cld
xchg
cld
lcall
cld
mov
cld
sar
loop
ljmp
xor
ficomps
sub
repnz
data16
bound
jle
jle
dec
sub
xchg
aas
lcall
aas
mov
aas
sarb
fidivrl
loop
ljmp
xor
dec
adc
sub
jp
sbbb
lahf
mov
lahf
mov
lahf
rclb
daa
es
loope
xor
leave
adc
sbb
and
sub
xor
cmp
inc
stc
dec
stc
push
stc
pop
stc
stc
push
jb
jp
cmp
stc
xchg
stc
lcall
stc
mov
stc
sar
loop
ljmp
fs
adc
sbb
and
sub
xor
dec
cld
push
cld
pop
cld
cld
push
jb
jp
cmp
cld
xchg
cld
lcall
cld
mov
nop
jle,pn
jle
jle
pop
repnz
or
mov
iret
and
sub
cmp
inc
lret
dec
daa
sub
out
in
rol
jp
xor
repz
repnz
mov
sar
loop
ljmp
cwtl
mov
adc
sbb
and
sub
xor
cmp
inc
cld
dec
cld
push
cld
pop
cld
cld
push
jb
jp
cmp
cld
xchg
cld
lcall
cld
mov
jle
jle
jle
jle
jle
jle
sbb
cmp
popf
adc
sub
inc
lahf
dec
lahf
push
lahf
pop
xchg
bound
dec
int3
mov
iret
out
repz
mov
ret
xchg
shlb
sti
rorl
cmp
and
sub
xor
xchg
push
sbbl
repz
repz
pause
repz
repz
imul
sar
fdivr
loopne
sarb
jo
add
sbb
jp
xor
add
dec
aas
push
aas
pop
aas
pusha
aas
push
aas
cmpb
aas
nop
aas
cwtl
aas
mov
aas
mov
aas
sarb
fdivrs
loopne
call
sbb
or
and
pop
xor
cmp
push
lahf
pop
lahf
pusha
lahf
push
lahf
sbbb
lahf
mov
lahf
mov
ror
fmul
loopne
call
or
sbb
sub
xor
cmpsb
cmp
push
inc
lahf
js
jl
sbbb
lahf
test
enter
aam
fcomps
in
call
mov
pop
data16
xor
xchg
cmpsl
cmp
inc
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
in
mov
cmpb
adc
adc
cmp
pop
dec
lahf
dec
xchg
push
adcl
pause
repz
repnz
jo
jle
jle
jle
jle
jle
jle
dec
enter
rcrl
cld
sti
xorl
or
adc
and
inc
icebp
dec
stc
dec
stc
push
stc
push
stc
pop
stc
pop
stc
pusha
stc
fs
push
aas
mov
aas
lods
daa
mov
jp
loop
aas
aam
hlt
and
and
mov
adc
adc
sbb
sbb
sub
dec
pop
push
lahf
pop
lahf
pop
lahf
pusha
lahf
fs
push
xchg
je
pop
movsb
rep
repnz
pop
jle
dec
mov
int3
stc
fdivr
cld
mov
dec
or
adc
adc
sbb
and
and
xor
push
iret
pop
iret
pusha
leave
fs
jbe
stc
jo
je
js
jl
mov
lods
stc
mov
mov
sub
aas
enter
sarb
aam
call
adc
sbb
sbb
and
and
sub
sub
xor
inc
stc
fs
insb
sub
aas
je
js
jl
cmpb
aas
mov
mov
mov
pop
fs
aam
fsubs
cld
call
popf
sub
cli
jl
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
dec
aam
iret
in
call
iret
hlt
iret
clc
iret
cld
ret
or
sub
xor
cmp
inc
jecxz
repz
repz
repz
repz
repz
repz
repz
repz
rep
repz
enter
lock
jle
jle
loopne
jb
je
jbe
dec
adc
sbb
iret
push
iret
push
iret
pop
iret
pop
iret
pusha
iret
fs
push
mov
stc
mov
mov
mov
daa
les
out
pop
cmp
or
adc
sbb
sbb
and
add
dec
cld
pop
cld
imul
lods
mov
mov
cld
cld
enter
add
aam
sub
xor
xor
std
sahf
cmp
inc
addl
repz
pause
repz
repz
repz
repz
rep
repz
or
ds
call
jg
mov
push
aas
insl
in
lcall
xchg
rcll
jo
pop
xor
jns
or
mov
leave
popa
rol
cmp
or
sbb
and
dec
xor
decb
xchg
dec
scas
aas
push
aas
push
aas
pop
aas
pop
xor
cmp
testb
mov
or
in
mov
cmpsb
aas
int3
or
ds
ret
pop
adcl
js
sbb
xor
xor
xor
divl
dec
daa
cltd
inc
mov
cmp
sarl
jnp
leave
pop
cmp
inc
dec
cmp
xchg
jmp
movsb
mov
cs
lahf
mov
and
insb
in
popf
lock
repnz
pop
cmp
jmp
aas
xchg
mov
lret
inc
mov
sbb
popf
push
sbb
lcall
mov
bound
xor
mov
scas
inc
hlt
popa
push
mov
sahf
shll
dec
and
sbb
jp
inc
pop
aaa
pop
leave
je
sbb
jecxz
sti
stc
or
mov
fdivp
xor
jb
je
jbe
pop
iret
cmovl
adcb
dec
sar
je
dec
ja
xchg
dec
int3
lea
cmp
mov
ret
ret
shl
jecxz
lock
ds
arpl
jb
mov
sahf
sahf
jp
stc
xchg
aas
mov
rorb
out
mov
femms
xor
pushf
js
jl
dec
xor
cwtl
lock
hlt
loopne
xchg
cmp
lahf
sub
jp
or
push
test
sbb
jl
ret
xchg
cmp
aas
lods
aas
out
es
pop
dec
lret
push
aaa
mov
jbe
sbb
cmp
leave
sbb
cmp
sarb
mov
cmp
sahf
and
cs
xor
int
aas
inc
aas
dec
aas
dec
aas
push
aas
pop
aas
popa
aas
addr16
insb
aas
jb
jns
lahf
mov
cmpsl
lahf
lods
lahf
mov
mov
fdiv
sbb
jle
arpl
js
sub
mov
push
cli
pop
pop
and
mov
stos
repz
in
call
lcall
inc
fwait
outsl
pop
adc
andl
adc
inc
in
call
clc
inc
rcrb
and
mov
dec
jae
mov
rcl
xor
in
call
inc
xchg
pop
dec
pusha
jbe
ds
xchg
out
out
in
rolb
xchg
js
pop
mov
sub
xor
js
adc
jne
sbbl
xlat
dec
aam
ret
cmp
ljmp
stos
cmp
xlat
bound
or
add
loopne
xchg
cmp
es
sahf
push
push
sbbl
jecxz,pn
call
cmp
push
ds
xchg
inc
mov
les
jle
jle
jle
pop
mov
lods
iret
mov
mov
loop
stc
sar
sub
and
hlt
lahf
clc
lahf
cld
mov
or
adc
sbb
sbb
and
dec
sub
jno
stc
push
jl
and
out
out
out
out
out
in
mov
dec
dec
pop
test
lods
and
mov
sub
and
movsl
or
fs
shrb
add
adc
sbb
jl
dec
sub
jo
outsb
sub
jmp
insb
pop
je
jle
iret
test
mov
js
adc
stc
shrb
int3
inc
fidivrl
lock
subb
and
fs
sub
sub
xor
sub
xchg
pop
sub
lock
dec
sahf
movd
leave
int
fucom
out
in
cld
pop
and
outsl
adc
mov
adc
js
fcoml
mov
pop
mov
out
icebp
pop
insb
sbb
popf
das
sbb
pop
adc
or
pop
jns
test
in
push
inc
cld
push
push
jp
les
mov
in
loope
pop
cmp
push
daa
xchg
xchg
in
add
jb
sub
cmp
inc
cld
dec
mov
pop
push
enter
insb
aas
ja
jge
cmpb
aas
xchg
sub
fcompl
mov
iret
imul
stc
lock
sti
stc
add
leave
adc
pop
fstps
daa
jno
icebp
xor
inc
aas
dec
aas
push
aas
pop
aas
pop
aas
imul
lahf
test
fwait
test
repnz
pop
xlat
lahf
fstpl
sbb
lock
hlt
jb
mov
les
push
aam
sbb
rcrb
pop
in
and
inc
and
push
es
sub
sub
out
in
mov
cld
mov
pushf
shlb
pop
movsb
lods
lret
enter
hlt
or
inc
push
add
and
movsl
dec
lock
pop
cld
pop
mov
push
sbbb
push
jle
pop
nop
and
rclb
pop
les
sbb
inc
sbb
push
adc
sbb
and
js
pop
sub
sbb
iret
cmp
cmp
pop
leave
js
clc
lahf
mov
cmp
inc
mov
mov
mov
data16
aam
lock
loopne
cld
movups
sbb
movsb
xchg
sub
cmpsb
xor
test
aaa
xchg
mov
aas
mov
pop
in
push
in
inc
lock
xchg
ss
lret
ret
push
icebp
lock
daa
xchg
xchg
addr16
mov
xor
in
call
icebp
dec
inc
and
loope
cmp
es
dec
xchg
mov
out
lock
push
mov
push
icebp
jmp
push
ss
scas
cmp
ret
mov
sub
adc
ds
pop
xchg
rclb
mov
or
rcrb
popa
test
jl
cld
jne
jns
sbbb
lahf
test
xchg
orl
rep
repz
pop
cmpsb
push
and
inc
les
scas
cmc
xchg
stc
mov
add
leave
and
in
mov
sub
jno
cmp
xor
xchg
or
pop
repnz
orl
insl
in
test
sarl
test
lock
ret
clc
es
cmpsb
ljmp
lock
xor
into
test
lock
cld
add
aaa
or
sbb
and
xor
xor
inc
stc
inc
stc
dec
stc
dec
stc
push
stc
push
xor
pop
cld
popa
xor
leave
daa
xlat
dec
test
lahf
mov
xchg
rcrb
push
mov
rorl
mov
push
outsb
cmpsl
jae
inc
mov
into
xchg
movsl
in
lds
lock
call
cmp
pop
lret
ret
push
adcb
mov
daa
cmp
outsl
cmp
cmp
xchg
aas
mov
pop
clc
shl
out
repz
in
test
cmp
cmp
sub
das
in
mov
cld
push
test
push
jl
hlt
push
xchg
xor
repnz
shl
jle
jle
pop
int3
and
in
adc
push
or
adc
sbb
and
clc
pop
cmp
hlt
dec
inc
lock
stc
fs
insb
stc
jnp
xchg
xor
sub
jb
sbb
cmp
mov
popa
rcrb
sub
mov
pop
cmp
jnp
jg
add
mov
jecxz
hlt
mov
imul
cmpsl
test
mov
xchg
rclb
mov
fmull
out
out
dec
adc
dec
loopne
sub
test
xchg
lods
mov
je
cld
enter
inc
fsub
pop
dec
sbb
pop
and
pop
pop
xor
bnd
fdivrs
jle
jle
dec
mov
sbb
mov
and
outsb
xchg
in
andb
in
mov
xor
cmp
cmp
inc
xchg
inc
and
repz
xor
dec
mov
push
iret
xchg
leave
cwtl
fdivrs
pop
lods
paddq
lret
fadd
fsub
stc
in
call
cmp
add
aam
loopne
xor
cmp
cmp
inc
cld
inc
cld
dec
cld
dec
mov
mov
adc
movsb
cld
test
ficomps
fcoml
repz
jbe
push
cld
dec
pop
add
loopne
add
dec
out
out
out
negl
pop
mov
lcall
leave
test
ljmp
mov
pop
clc
xchg
cld
sbb
xchg
or
adc
loop
dec
loop
js
daa
pop
xchg
fs
out
out
in
mov
mov
out
mov
xchg
enter
sbb
adc
sbb
and
ljmp
ficompl
jo
je
js
jl
adcb
call
paddusb
iret
ror
aam
fmul
fmul
loopne
in
ljmp
call
in
sub
sub
xor
mov
dec
loopne
push
mov
jge
lods
mov
lahf
pop
sbb
out
out
in
out
and
sub
sub
ror
shr
cmovbe
or
popa
pusha
lods
js
aas
fsubl
out
out
pop
cmp
or
adc
sbb
cld
sub
jns
mov
arpl
repnz
clc
add
pop
and
jo
outsb
jle
jle
jle
pop
test
adc
mov
jle
jle
loopne
jb
je
jbe
js
jp
jl
jle
jle
pop
inc
or
dec
loope
push
stc
push
stc
pop
push
fs
out
in
cld
clc
aas
cmpb
das
mov
out
in
test
sub
stc
mov
mov
mov
stc
les
or
int3
jo
pop
aam
fmul
loopne
lock
add
add
inc
inc
mov
fs
add
insb
lock
je
test
jl
test
mov
dec
enter
test
xor
or
add
inc
dec
xchg
in
inc
push
mov
push
fs
je
xchg
sub
jecxz
repz
mov
in
mov
rclb
pop
push
adc
sbb
test
xor
sbb
cmp
push
inc
das
mov
leave
push
les
insb
or
xchg
js
dec
pushf
ret
pop
and
lods
orb
jae
rcrl
stos
fldcw
mov
and
aas
shlb
push
add
push
xchg
and
sbb
adc
adc
or
cmpsb
lds
test
jl
adc
into
sub
inc
and
dec
inc
and
mov
add
xabort
daa
into
shll
out
stc
or
push
add
xchg
sub
push
mov
cmp
sahf
mov
cmp
xor
adc
inc
sub
xchg
test
cwtl
fsubrl
lods
cld
mov
xchg
adc
fmuls
loopne
cmp
mov
flds
cmp
repnz
lock
push
movsb
dec
mov
nop
and
sub
mov
daa
or
push
fimuls
sahf
sub
ret
fimuls
cmp
mov
sbb
outsb
daa
jne
xor
xor
add
cmp
cmp
inc
mov
jae
test
icebp
rorb
int3
jns
mov
aam
adc
xchg
sbb
in
xchg
insl
mov
pop
rorl
sub
push
adc
orl
mov
pop
xchg
outsl
cmpb
xchg
mov
jmp
test
or
ljmp
push
jl
dec
insb
je
and
mov
ss
dec
xchg
inc
dec
or
arpl
jae
mov
or
notb
or
cmp
xchg
cmp
popf
in
add
aaa
es
add
inc
cmp
cmp
xchg
dec
insb
shrb
loope
popa
and
cmp
xchg
sub
sub
cmp
mov
dec
sbbb
in
inc
inc
mov
orb
xor
leave
mov
and
call
ret
xchg
ljmp
push
outsb
je
sbb
sub
jmp
shlb
call
add
cmc
rorb
cmp
and
flds
test
loope
call
je
jbe
cmc
loopne
ds
push
push
jb
lret
insl
pop
scas
mov
mov
lea
inc
loopne
cmp
int3
sub
mov
xor
jmp
mov
add
jl
addl
fldl
xchg
shl
fsubrs
cmp
subl
pop
fwait
xchg
mov
addl
aas
pop
xchg
mov
xchg
enter
adcb
sub
cld
jbe
mov
stos
ret
divb
xor
push
cltd
lock
rol
ret
imul
xor
or
icebp
and
dec
sub
movsb
pop
iret
ja
jle
xchg
fsubs
shlb
sbb
cmp
adc
jmp
cmp
test
rcr
xor
jmp
shlb
mov
xor
xchg
xor
push
mov
xchg
mov
out
inc
add
add
adc
dec
pop
in
mov
loope
ficoms
push
cmp
mov
add
ret
cmp
push
cmp
jp
stos
and
shll
dec
lea
adc
je
sarl
aas
cmpsl
mov
mov
pop
cs
pop
ds
cmp
mov
mov
cld
out
sbb
fstl
pop
loopne
popf
call
xor
xor
cmp
sub
inc
fidivs
cmpsl
and
aaa
pop
leave
or
psubusw
loope
jmp
and
daa
stc
sub
push
stc
xor
aas
add
aas
aas
aas
inc
aas
inc
aas
dec
aas
dec
es
loop
je
mov
jo
je
jbe
js
cwtl
dec
and
pushf
push
mov
test
cmp
mov
pop
mov
push
mov
cmp
push
and
sub
test
aas
ds
inc
aas
inc
aas
dec
aas
dec
aas
push
sub
adc
xchg
in
in
nop
enter
xchg
outsb
sbb
repz
stc
mov
pop
in
call
xchg
add
ret
popa
pop
sbb
mov
jnp
or
jb
pop
pop
enter
xchg
mov
lods
lock
test
repnz
fcoms
cmp
je
dec
inc
mov
mov
add
imul
and
shll
js
cmp
lods
movsl
mov
stos
inc
mov
dec
inc
push
imul
or
mov
add
cmp
inc
jl
jle
pop
jle
sbb
lret
cmp
adc
push
or
add
movlps
sub
ret
xor
cmp
popa
cmp
push
adcb
cwtl
andb
leave
dec
mov
inc
and
push
or
aam
push
or
pop
sub
push
cmp
dec
push
or
push
jle
jle
inc
js
cld
nop
cld
cwtl
mov
or
push
or
push
add
rolb
daa
jmp
sub
mov
lock
pop
cld
pusha
mov
pop
jo
js
sbbb
mov
mov
ss
filds
shrb
sub
adc
test
mov
push
mov
leave
enter
in
pop
add
jb
lock
mov
xchg
sub
call
inc
cmpb
shl
jmp
adc
dec
ret
inc
sarl
or
js
jle
jle
dec
cmpsb
cmove
pop
bnd
cmp
push
das
sbb
jl
jg
jle
loope
pop
sub
jbe,pn
jp
xchg
iret
xchg
lret
cltd
loope
stc
aam
push
cmp
push
cmp
aas
aas
cmp
stc
jbe
or
inc
cwtl
lcall
fsubrl
pop
es
adc
dec
adc
inc
jl
pop
cmp
pop
dec
pop
mov
sub
push
pop
in
aas
cmc
push
push
xor
dec
mov
push
in
jle
pop
movsl
push
push
inc
xor
dec
mov
pop
loope
mov
imul
in
cld
xchg
cli
imul
sub
dec
loop
fidivs
push
pop
repnz
in
cwtl
cld
cmpsb
mov
idiv
nop
das
inc
xchg
sbb
xchg
test
loop
dec
imul
mov
jle
xchg
aam
hlt
out
dec
pop
sbb
sbb
ss
push
mov
or
jl
ss
xchg
or
mov
push
adc
ret
fidivrs
pop
pushf
inc
cli
repz
inc
mov
arpl
mov
fs
aam
fs
hlt
testb
dec
sbb
insb
dec
jno
pop
jo
je
pusha
jl
bound
and
das
fcoml
xchg
or
jnp
sbb
pop
inc
leave
pusha
dec
bound
pop
pop
data16
push
je
insb
jl
outsb
test
jo
fs
mov
pop
pushf
jbe
movsb
js
lods
xchg
mov
xchg
ror
xor
das
cmp
sahf
add
or
dec
cmp
jb
je
dec
mov
mov
addr16
movsl
in
cwtl
mov
psrlq
jecxz
jmp
pop
mov
lret
call
les
xor
pushf
and
inc
andb
or
jbe
pop
or
pop
lret
popa
xchg
jae
mov
mov
roll
pcmpgtd
lock
jl
cmp
push
push
cmp
mov
out
add
or
es
mov
inc
leave
xor
fxam
cmp
enter
or
xor
shll
shlb
xor
leave
cmp
cmp
sub
cmpl
pop
xor
addr16
test
stos
daa
repz
mov
lcall
cmp
mov
lock
dec
repnz
pop
or
xor
ret
push
outsl
jecxz
repz
repz
dec
es
rcr
fsts
outsb
or
push
push
dec
lods
loopne
sbb
cmp
add
into
cmpl
repz
add
or
loope
ret
enter
dec
and
sahf
and
rorb
pop
and
xchg
outsb
cmp
push
cmp
xchg
aad
insb
and
mov
shl
call
pop
cmp
mov
jbe
pop
sarl
xor
iret
inc
or
mov
inc
call
imul
loopne
mov
xchg
sar
and
jle
pop
js
jp
jbe
xchg
pushf
lock
int
xchg
in
mov
xchg
into
test
das
out
addl
sbb
lea
subb
mov
mov
sbb
cmp
inc
cmp
add
inc
cmp
aas
and
sarl
mov
int3
jo
nop
push
mov
sbb
and
in
sub
lock
loopne
xchg
lock
dec
lahf
dec
lahf
addr16
ja
scas
xchg
leave
ret
out
hlt
sbb
sub
adc
gs
ja
scas
xchg
bound
stos
cmp
enter
test
or
loopne
enter
dec
push
cmp
pop
xor
dec
mov
popa
es
js
adc
jbe
cwtl
divl
ss
cmp
cmp
cmpl
cmp
stos
push
inc
push
in
jmp
xor
and
push
xchg
scas
mov
xor
dec
cmp
arpl
sbb
cmp
pop
inc
cmp
xchg
imul
sbb
push
push
je
dec
pop
fcoms
mov
cmp
sub
lock
mov
into
mov
in
xchg
repz
int3
test
adc
test
sub
xor
leave
sbb
pop
and
les
daa
cmpsl
test
mov
test
in
sar
and
lahf
pop
bound
gs
xchg
cwtl
leave
lcall
dec
pop
lods
xchg
mov
mov
iret
iret
leave
flds
ljmp
or
inc
pop
dec
adc
das
loop
in
dec
stc
dec
add
pop
push
call
push
repz
lock
pop
sub
repnz
fdivl
popw
or
xchg
sahf
mov
je
call
fstpt
pop
hlt
ret
pop
cld
sbb
shlb
stc
movsl
das
psrld
mov
dec
pop
mov
jo
pop
xchg
orb
lahf
fistl
sub
scas
dec
push
mov
push
repnz
cmp
pop
dec
int3
outsl
daa
loop
out
in
mov
inc
cld
push
and
jg
jle
aas
setb
jo
cwtl
inc
jp
dec
leave
mov
mov
or
push
inc
loopne
cmp
and
call
je
pop
adc
cmp
dec
and
sub
das
insb
inc
dec
fs
stc
sub
sub
dec
movb
adc
cmp
push
push
adc
subb
pop
dec
dec
cs
aas
mov
loop
sarb
mov
clc
sahf
xchg
lahf
fwait
push
lahf
ret
fsubrs
dec
scas
sarb
mov
aas
shrl
push
or
pop
and
loop
and
stc
cmp
fiaddl
test
rcrb
xchg
aad
fdivl
pop
test
mov
repnz
loop
add
cmp
rolb
xor
xor
adc
xor
loopne
cmp
inc
cmp
icebp
and
dec
mov
ds
dec
dec
arpl
ljmp
jae
andb
addl
mov
or
xlat
clc
out
jle
sbb
xor
xchg
push
lock
pop
sbb
jns
xchg
adc
or
repnz
repz
add
ret
sbb
mov
dec
mov
test
adc
ss
insl
and
stc
mov
xchg
cmp
mov
xchg
xor
pushf
push
call
daa
aad
push
cmp
pusha
and
jae
lahf
les
sar
fs
arpl
and
adc
imul
or
ljmp
jle
jle
jle
jle
dec
mov
xor
mov
aam
fstpt
jmp
repnz
clc
lcall
jae
cmp
rcrl
outsb
daa
jne
lret
mov
xchg
loopne
lahf
pushf
mov
iret
lahf
test
loopne
or
cmp
jo
jl
pop
dec
ret
mov
repz
ja
xor
mov
and
lods
mov
mov
jle
dec
jecxz
jo
ret
add
pop
xchg
adc
sbb
inc
sub
cld
dec
cld
dec
mov
jae
sub
test
test
aas
int
fcmove
in
iret
icebp
iret
inc
add
adc
daa
ret
xor
cmp
inc
repnz
push
xchg
sbb
outsl
aas
or
mov
or
jbe
call
jle
adc
adc
inc
and
jns
icebp
inc
psubd
insl
shl
cwtl
and
in
mov
dec
sub
add
or
rcrb
lahf
xchg
xchg
cmpsb
ret
mov
inc
repnz
add
or
sbb
jl
dec
dec
sub
aas
push
ja
addl
jbe
enter
stc
repz
daa
adc
sub
pop
daa
insb
fwait
xchg
cmpsl
mov
jp
sub
js
ret
mov
fcompl
inc
pushf
in
out
movsb
ret
push
negb
out
pop
xor
mov
cmp
sbb
insb
ss
sub
push
lret
xchg
pop
jle
inc
jp
clc
outsb
sbb
imul
jle
f2xm1
in
xchg
inc
bound
cmp
cmp
pop
push
lahf
test
mov
pop
rol
je
dec
xor
call
cld
mov
xor
or
lods
ss
hlt
sbb
sbb
test
lods
ds
in
lods
sbb
ret
cli
lahf
out
test
jle
or
movsl
inc
test
sub
cmp
xchg
cmp
cmp
dec
inc
add
ja
xchg
inc
fisttps
add
fcomp
enter
or
test
mov
mov
outsl
or
ss
mov
out
out
lock
dec
pop
andb
test
jle
dec
or
mov
lock
mov
pop
add
lock
add
mov
mov
cmp
dec
xchg
or
push
cmp
dec
pop
inc
mov
inc
mov
inc
dec
mov
and
repnz
dec
in
adc
sub
adc
and
dec
pop
iret
leavew
jne
push
inc
mov
lods
mov
es
and
in
call
hlt
cld
clc
mov
add
or
out
and
cmp
loopne
and
popa
adc
xor
cld
cmp
cmp
andb
or
xchg
test
sar
ss
xchg
xor
ret
adc
faddl
adc
lock
daa
cmp
bound
push
xor
mov
in
lods
xchg
mov
push
fiadds
fs
scas
or
test
iret
and
sbb
adcb
mov
idiv
sub
jno
lahf
adc
jbe
fldenv
mov
mov
jle
pop
aad
add
hlt
sti
dec
push
pop
mov
sbb
cmpsl
ret
push
add
aas
mov
jns
xor
adc
xchg
pop
mov
test
movsb
in
clc
test
cld
test
call
push
xchg
mov
push
scas
leave
insb
sbb
test
mov
cmpsb
int3
xchg
movsb
xchg
in
mov
les
movsb
and
mov
inc
sub
movsl
lret
mov
jl
push
sub
pop
jecxz
ss
ret
pop
cmp
xchg
and
push
push
aaa
xor
dec
aam
pop
push
xchg
xchg
loope
lods
aas
enter
loope
cmp
cmp
inc
fs
mov
and
mov
out
mov
int3
cltd
adc
imul
or
push
and
pop
dec
xorl
jbe
enter
mov
repnz
cmp
and
jmp
xorl
adc
and
xor
nop
or
or
pop
icebp
ljmp
lahf
es
test
cld
xor
dec
repnz
push
stos
jl
dec
mov
lods
lcall
enter
lock
ja
mov
repnz
in
mov
insb
cwtl
and
mov
or
xor
ljmp
cli
jo
adc
cmp
in
aam
push
dec
dec
or
mov
neg
adc
in
add
cs
xor
inc
add
ds
or
inc
lock
jle
dec
push
and
pop
clc
sbb
dec
push
push
jb
xchg
dec
adc
xchg
mov
push
pop
cmpsb
mov
jle
jle
dec
in
and
adc
sub
pop
fildl
nop
jnp
nop
fmulp
loop
fdivrs
loopne
jb
dec
sbb
mov
enter
dec
push
movsb
ljmp
iret
je
jl
mov
mov
lods
fnstenv
in
inc
lock
add
pop
xchg
sbb
inc
cmovns
popa
leave
imul
adc
sbb
lahf
sti
es
lahf
test
mov
pop
push
jle
mov
or
xchg
cld
dec
loope
jmp
or
push
repnz
mov
push
sub
loopne
popa
mov
fisubrl
ficoml
cmp
fadds
pop
cmpsb
pop
sbb
lock
popf
adc
pop
shlb
push
sbb
pop
pop
pop
or
fs
dec
insb
mov
xchg
fwait
call
adc
or
je
push
inc
nop
in
call
inc
movsb
ds
rcl
lock
jle
dec
stc
push
inc
sbb
hlt
mov
movl
out
pop
xchg
lret
mov
sbb
xchg
dec
ret
call
lcall
stos
add
add
or
sbb
push
cmpps
iret
mov
pop
int
out
cmp
in
call
rcl
je
jl
add
mov
inc
sbb
ds
jmp
xor
push
lcall
in
inc
push
jle
jle
dec
cld
mov
cmp
adc
push
jno
js
es
mov
mov
aas
adc
inc
es
sub
push
mov
xchg
movsb
test
test
std
cmp
lods
aas
jne
loopne
add
jbe
cmp
sub
push
mov
jle
cld
iret
cld
loopne
in
push
add
daa
call
ja
cld
inc
mov
lock
loope
outsl
rcrl
dec
ret
sub
adc
jno
inc
xchg
mov
push
scas
mov
xchg
loope
cmp
sahf
pop
dec
arpl
mov
iret
lock
adc
xor
clc
pop
cmp
addr16
mov
rcll
push
dec
mov
inc
push
dec
cmpsb
or
xchg
and
jnp
xchg
aam
loop
or
clc
dec
jge
dec
xbegin
xor
ret
jbe
fwait
push
xchg
jecxz
or
or
push
popa
push
pushf
aas
cs
out
and
in
test
sarb
hlt
repnz
pop
cld
push
int
cmpsl
icebp
lock
loop
jmp
mov
inc
test
lock
hlt
outsb
rclb
aas
subb
or
int3
sub
adc
insl
clc
notb
jb,pn
je
pop
push
lock
sahf
or
sub
repnz
jg
jo
mov
cld
cltd
mov
mov
cld
or
fldcw
clc
sbb
or
xchg
pop
mov
clc
aas
aam
out
or
pop
fldenv
pusha
mov
test
push
xchg
lret
ret
add
repz
repnz
in
dec
xor
or
jne
lret
std
rol
loopne
lahf
in
dec
xor
das
jne
add
mov
jo
shll
mov
pushf
add
xor
add
loopne
push
lock
lock
test
test
sub
clc
push
cmp
aas
js
rolb
sbb
sbb
mov
and
loope
pop
shll
or
test
pop
pushf
xchg
faddl
add
fdivs
or
add
subb
adc
or
aad
sbb
test
sahf
arpl
outsl
fdivl
mov
pop
xchg
adc
fcoml
inc
sarb
pop
push
xor
cmc
adc
mov
mov
pop
mov
adc
aas
and
push
cmp
push
xchg
dec
clc
adc
and
hlt
xchg
shrl
cld
loopne
in
push
ja
dec
pop
cmpsl
inc
dec
xchg
sar
xor
mov
pop
push
mov
scas
loop
cmp
cwtl
lea
cmp
mov
fiadds
repnz
sub
ret
fwait
cwtl
shrl
mov
into
popa
lods
vpsadbw
push
ss
dec
dec
push
sub
popf
outsl
add
lods
test
sub
and
mov
call
loope
subl
rolb
jle
dec
out
aas
sti
es
stos
movsb
or
jle,pn
sub
mov
cmp
mov
ds
outsb
pushf
adc
xor
or
pushf
nop
jle
dec
loopne
pop
in
pop
pop
shll
icebp
push
sub
loope
sub
adc
mov
nop
adc
mov
inc
in
pushf
or
sub
add
adc
xchg
push
mov
repnz
or
es
movsb
sub
jo
adc
xor
in
inc
sub
das
sbbb
mov
loope
imul
outsl
bnd
adc
mov
ret
and
repnz
xchg
inc
inc
dec
stos
and
rorb
lods
ret
repnz
sti
lahf
decl
pop
push
scas
test
and
stc
adc
cmp
sub
in
les
and
lock
adc
aas
les
sbb
mov
mov
gs
inc
js
dec
jno
clc
bnd
pop
cli
xchg
mov
or
jp
mov
movsb
nop
mov
push
cmp
pusha
adc
dec
in
dec
jb
mov
lahf
and
inc
push
pop
jle
pop
out
sbbl
cli
std
add
push
push
mov
cmp
push
inc
jb
add
jp
jle
add
mov
or
lcall
stos
clc
cli
pop
mov
dec
mov
int3
mov
shlb
fidivrl
mov
mul
mov
cld
add
ds
cmp
cmp
sub
lds
lods
jbe
dec
aas
bound
push
xchg
mov
pminub
lret
leave
rolb
out
pop
add
push
lcall
mov
out
dec
add
dec
jle
dec
fsubs
addr16
xchg
lock
mov
das
stos
pop
push
leave
xorb
or
dec
push
daa
rorl
test
in
rcr
lret
push
inc
mov
xor
in
inc
test
ss
sbb
fmuls
pop
lahf
pop
xchg
bound
jb
aam
jp
jle
dec
dec
xchg
fcoml
push
adc
cmpsb
subl
repnz
xchg
push
push
and
ljmp
sub
mov
xor
pop
add
mov
adc
cld
cmpsb
das
push
sar
jp
pop
sbb
pop
and
sub
cmpb
xchg
or
push
pop
dec
ret
fmull
pop
mov
xchg
outsb
jle
adc
push
rclb
in
sbb
xchg
sbb
mov
xchg
mov
pshufw
mov
mov
mov
jb
lret
in
je
add
stos
pop
cmp
jb
mov
fisttpl
xchg
in
ret
adc
mov
stc
int3
jl
aas
aam
fcoms
cmpsl
fnstcw
stc
inc
stc
push
adc
mov
mov
pop
mov
jo
jle
pop
ret
in
jmp
push
mov
cmp
sbb
insb
push
ljmp
dec
cmp
pop
cli
test
sar
jo
inc
in
pushf
push
push
sbbb
xchg
inc
mov
push
scas
mov
cwtl
adc
mov
pop
jo
dec
or
scas
dec
je
jp
dec
xor
ret
enter
je
hlt
mov
add
ja
sub
fldl
idivb
cmpsb
and
add
stos
enter
push
popf
lods
mov
mov
or
push
in
fcmovb
fdivrs
nopl
add
add
mov
out
cld
xchg
mov
sub
cld
rcrb
add
sbb
and
push
adc
repz
mov
jle
dec
add
mov
loopne
jbe
pop
aam
ficoml
ret
dec
aad
cmc
faddl
and
lock
jns,pn
adc
jb
mov
sub
mov
mov
sbb
xchg
and
mov
ret
fs
dec
pop
mov
cld
jns
adcl
or
push
data16
pop
jo
pusha
xchg
sbb
test
xchg
daa
clc
loop
xor
movsb
rcrb
sbb
push
xchg
inc
in
rcrb
jmp
bound
lock
pop
and
and
dec
mov
arpl
imul
fcoml
cmpsl
xorb
dec
lret
out
inc
mov
or
lcall
jo
jle
jle
jle
pop
add
mov
jo
je
pop
add
dec
popa
mov
mov
shl
imull
inc
lods
ja
mov
or
mov
mov
pop
push
mov
cli
daa
xchg
xchg
cs
sub
iret
fwait
imul
divb
sub
mov
dec
jae
cld
add
xor
pop
adc
es
cmp
jns
popf
mov
les
jo
lock
jg
add
addr16
xor
out
xor
or
cmp
cmp
mov
loope
or
or
pop
cmp
xchg
stc
and
jbe
or
pop
ret
pop
adcl
inc
dec
mov
in
dec
jl
xor
mov
jmp
pop
clc
pop
pop
dec
mov
cmp
mov
sarb
cmp
ret
jbe
in
and
cmp
mov
je
daa
mov
xchg
cmpsl
mov
mov
jb
je
pop
es
in
sarb
cmpsl
cmp
and
dec
mov
mov
add
mov
into
aas
sub
ror
js
cmp
into
jecxz
cli
aas
ret
add
xchg
adcb
xchg
fs
dec
addb
jo
inc
repnz
fs
pop
inc
dec
xor
shl
cmpb
or
or
addr16
adc
orb
enter
test
subb
mov
pop
or
dec
or
cwtl
shl
loope
sub
xchg
scas
dec
xchg
int
js
push
adc
add
jp
dec
nop
pushf
sarb
xchg
loopne
cmpb
ljmp
sbb
mulb
jb
loop
test
or
cmp
pop
and
gs
scas
and
jb
pop
jge
push
add
xchg
jmp
pusha
dec
adc
mov
lahf
ret
imul
popa
and
mov
shlb
cmp
cmp
pop
push
jnp
ds
xchg
or
pop
pusha
mov
cmpl
lret
xchg
xor
mov
adc
xchg
push
push
inc
and
sbb
daa
mov
push
mov
push
mov
sub
xchg
andb
xchg
movsl
push
lods
lret
popa
lods
lahf
roll
and
ds
fnstcw
rol
adc
push
pusha
outsb
mov
retw
lcall
adc
test
cwtl
cmc
mov
push
adc
push
mov
mov
ljmp
xor
ret
mov
push
xor
lahf
test
push
xorb
arpl
dec
xchg
loop
jge
lcall
push
sub
dec
sbb
xchg
js
add
cmp
adc
popa
in
cmp
mov
andb
or
cmp
xchg
loopne
mov
or
cmp
cmp
and
jecxz
daa
scas
mov
push
inc
cld
push
sub
mov
lock
cwtl
mov
and
mov
dec
cmp
and
nop
pop
stc
data16
mov
xchg
test
cld
movsl
xchg
shll
or
mov
lock
flds
in
jmp
sub
pushf
push
xchg
adc
aam
mov
sub
mov
addr16
imulb
add
or
sub
into
inc
test
or
lock
ret
push
xchg
sahf
in
stos
or
mov
leave
push
shrl
cmp
loop
pop
push
pop
test
out
jg
outsb
lds
shr
js
jo
xor
pop
or
lock
popf
test
mov
sbb
sbb
stos
push
dec
push
leave
movsl
out
cld
daa
cwtl
xchg
push
jo
pushf
dec
push
mov
push
dec
in
cmpsb
clc
movsb
cld
push
lret
ss
adc
cld
lret
es
lods
xchg
mov
xor
xor
cmp
int3
mov
test
mov
mov
lahf
aas
mov
mov
hlt
mov
sahf
xchg
iret
cmpsl
lret
stos
fmuls
clc
adc
fimuls
ds
jo
imul
loopne
and
pop
test
cwtl
aas
cwtl
aas
lods
es
jbe
rorb
icebp
push
dec
xor
ret
fcomps
inc
ljmp
jecxz
dec
lods
stos
push
sbb
aam
mov
mov
iret
mov
cmp
cmpsb
adc
sbb
cmp
push
cld
cmp
pop
ret
push
adc
decb
adc
lods
push
das
sub
in
movsb
fadds
mov
mov
sub
mov
es
sti
push
inc
mov
push
add
imul
cmp
dec
inc
addr16
je
cmp
dec
jnp
sub
clc
imul
out
div
and
cmp
cmc
pushl
pop
adc
fdivrl
shrl
mov
mov
sbb
repnz
jmp
sub
and
fists
add
and
or
hlt
les
or
test
rclb
lret
pop
insb
loop
pop
mov
xor
inc
mov
pushf
dec
lret
in
push
aam
lds
das
test
mov
loopne
or
dec
jne
xor
pop
adc
jns
pop
ret
out
insb
xor
cmp
jns
addl
into
adc
test
test
adc
pop
adc
xchg
pop
lock
sbbb
int3
pop
fdivrl
jp
dec
and
pop
inc
clc
mov
or
rcll
sub
inc
xchg
inc
pop
int3
lock
pop
adc
sub
jbe
lods
dec
mov
sarb
aas
xchg
sub
cli
or
out
push
cmp
dec
and
inc
inc
pushf
cli
push
jo
mov
push
adc
in
push
sub
mov
sarb
xor
push
mov
push
pop
jle
and
and
cld
in
mov
sbb
cmp
sahf
mov
jle
jle
jle
pop
sbb
pop
pop
repz
pop
inc
lock
adc
pop
xchg
fsts
stc
leave
jbe
pop
out
test
xor
loope
ds
pop
mov
shlb
in
call
pop
outsl
ret
rorb
loope
sti
loope
jnp
xchg
or
movsl
add
xchg
mov
push
in
adc
repnz
jne
sbb
inc
jp
mov
and
sbb
filds
mov
aas
sub
pop
in
mov
sub
inc
sub
and
push
bound
stos
lock
xor
xor
cmp
mov
jb
pop
or
push
sbb
or
pop
les
fbstp
or
pop
leave
mov
ret
lcall
dec
pop
pop
sbbb
scas
pop
mov
sub
jg
loope
inc
push
cwtl
jmp
push
cmp
jge
adcb
neg
inc
cld
sub
add
xor
popa
and
sub
add
jl
inc
lods
clc
sub
nop
int
mov
mov
dec
loopne
stos
call
ret
dec
jb
sbb
pusha
xor
jbe
lds
inc
mov
cmp
stos
xchg
div
outsb
jo
jno
add
sbb
and
jo,pn
jbe
js
pop
addb
not
xchg
fisttpll
test
xor
mov
bound
loopne
dec
xchg
mov
enter
icebp
daa
dec
bound
punpckhdq
inc
imul
fdivrs
jp
dec
pop
ret
inc
mov
loopne
add
data16
pop
stos
loope
fiadds
imul
push
xor
shrb
rcl
ficoml
mov
pushf
pop
lahf
outsl
sahf
imul
push
dec
and
rorb
js
push
mov
mov
stc
into
sub
repnz
std
stc
add
cld
mov
xor
push
inc
int3
cmp
in
dec
inc
loopne
data16
outsb
sahf
push
adc
and
adc
push
addl
ret
cli
jl
ret
dec
hlt
push
imul
cmp
fs
pop
xchg
in
and
testl
adc
mov
mov
and
aas
xchg
test
mov
es
loope
sub
mov
pop
je
in
push
test
scas
ret
pop
pop
loopne
test
aam
into
and
insb
scas
leave
dec
das
movsb
scas
xchg
lahf
mov
fs
shrl
add
mov
cld
mov
xchg
loope
xor
orl
mov
ret
fsubp
data16
int3
outsb
in
in
jb
jp
jle
lahf
xchg
repnz
push
jl
sahf
loopne
cmpsb
xchg
add
scas
scas
cmovb
icebp
fidivrs
push
out
cmpsb
pop
out
lahf
repnz
imul
jbe
push
push
sbb
push
dec
ficompl
pusha
adc
mov
add
mov
pop
daa
popa
loope
cmp
aas
cmp
stos
insl
push
add
neg
adc
push
leave
es
paddusb
arpl
pop
lea
rcrb
inc
aam
mov
add
inc
es
mov
outsb
lahf
gs
aad
mov
mov
loopne
and
inc
pushf
jb
jbe
test
pushf
adc
mov
das
icebp
rol
jb
pop
xor
pushf
ja
push
pop
cltd
mov
sahf
jle
pop
fldl
sbb
popf
or
lret
insl
jge
xchg
mov
jbe
cld
mov
adc
lock
add
ret
rclb
jg
xchg
and
mov
xchg
jecxz
and
and
mov
dec
insl
lock
xchg
mov
xlat
pop
mov
scas
xchg
or
push
cmp
das
inc
fdivs
dec
insl
ret
std
pop
les
push
xchg
cmpsb
repnz
and
fwait
mov
aas
out
or
fdivs
shrl
mov
loope
lock
cmp
stos
jne
cmpl
mov
push
pop
call
lahf
mov
lds
in
add
fsubl
xchg
aam
stos
sub
movsl
mov
mov
mov
fmull
loop
insb
jbe
rcrl
stc
mov
xor
mov
jbe
push
inc
sub
xchg
xor
in
jmp
enter
dec
mov
dec
pop
scas
enter
inc
pop
out
xchg
repnz
pop
jae
cmpsb
sub
ret
dec
int
sub
pop
or
dec
adc
lods
das
das
cmpb
leave
or
loop
cmp
inc
les
sbb
arpl
ss
dec
xchg
and
sti
paddsb
or
fcoml
mov
test
xor
push
mov
bnd
loopne
imulb
jp,pt
mov
call
xlat
xor
dec
iret
cld
mov
push
shr
mov
shll
add
aam
int3
cmp
sub
dec
idiv
lcall
fs
movl
insl
rcl
dec
sahf
orl
jno
adc
lock
xor
insl
mov
rolb
and
sarb
pop
jne
clc
mov
stos
mov
jge
out
shl
and
call
push
je
dec
mov
repnz
hlt
sub
pop
inc
or
inc
inc
sub
dec
xchg
loopne
rcrl
xchg
enter
mov
sarb
cmp
xchg
add
js
sbb
jp
mov
push
xchg
mov
mov
pop
jb
push
mov
pop
xchg
and
lock
popf
adc
mov
lds
add
push
cltd
jl
adc
mov
div
adc
xorl
inc
pop
das
or
dec
fdivrs
in
mov
xchg
inc
dec
sub
bound
add
xchg
lock
xor
sahf
push
xchg
lahf
xchg
pop
mov
or
les
into
adc
cli
adc
dec
xor
mov
hlt
es
test
mov
call
scas
jno
sub
mov
scas
movsb
out
enter
loopne
cld
xchg
or
sub
pusha
sub
cmp
add
push
dec
push
and
push
cmp
push
in
sti
cmpb
or
jbe
lock
sbb
push
sbb
xchg
cs
xor
andl
and
test
out
push
push
imul
in
push
mov
out
or
aad
add
loopne
in
popf
fcomp
jb
je
pop
leave
add
pop
and
bound
cmp
and
or
pop
push
int3
loop
cmp
push
dec
hlt
cmp
push
sbb
popf
les
xlat
pop
test
loope
js
and
sbb
loope
and
sbb
xchg
pop
jle
adc
in
das
test
push
ficomps
repnz
add
scas
cmp
cmp
mov
out
mov
dec
out
andb
mov
sub
jle
push
sub
nop
jp
jnp
xchg
mov
sbb
rolb
call
pop
push
push
sti
leave
sbb
adc
and
and
testb
lock
lods
pop
xchg
sbb
movsl
adc
cmp
and
lods
outsb
and
push
mov
in
test
mov
push
sarl
jle
xchg
push
subl
jns
sbbb
call
jbe
mov
rclb
lock
sahf
push
out
and
mov
and
push
cmp
test
xchg
jl
mov
movsl
cmp
ds
cmpsb
jbe
js
dec
or
stos
or
add
insb
and
pop
cmp
cmp
stos
hlt
in
in
aas
mov
add
subb
cmp
sub
in
lret
jns
bnd
jbe
cmp
mov
sub
xchg
mov
add
lock
arpl
das
leave
out
inc
das
repnz
das
hlt
add
sbb
and
fmuls
add
cmp
les
push
sub
ja
cmp
dec
pop
mov
repnz
data16
mov
cmp
dec
jle
add
daa
mov
mov
and
iret
mov
cmp
inc
add
ffree
movsb
out
adc
or
mov
stc
sbb
shrb
pop
ret
movb
mull
ret
negb
sub
outsb
pcmpeqb
jge
clc
jle
dec
mov
add
hlt
std
cmp
dec
adc
mov
push
push
xchg
jl
ss
sbbb
fs
scas
js
xchg
lahf
les
jle
adc
ds
repnz
clc
jbe
sub
enter
add
xor
lods
sahf
or
xor
shll
outsb
cmp
imul
mov
push
sahf
repnz
data16
mov
insb
and
mov
push
std
jle
mov
shrb
cmpsb
das
repz
pusha
xor
jecxz
daa
sub
insb
jge
dec
idivl
decl
daa
stc
mov
sbb
pop
cmp
mov
js
aas
mov
cwtl
sahf
outsb
adc
in
dec
rorb
insb
loopne
inc
lock
jo
data16
aam
addr16
in
mov
pop
jge
inc
xchg
movsb
addb
xchg
add
and
stc
fdivrl
inc
sub
aam
xchg
sub
nop
cmp
test
lahf
inc
or
jnp
mov
jg
push
je
pop
adc
push
adc
mov
insb
fmull
ret
push
dec
pop
lods
xchg
mov
movsb
int3
lret
aam
pop
daa
jb
imul
cmp
and
add
cwtl
mov
les
mov
aam
jp
ds
lods
cmp
mov
daa
test
mov
shlb
loope
test
aas
adc
jmp
gs
leave
popf
fmul
pop
push
sub
std
pop
add
add
add
nop
xor
add
add
adc
or
enter
xor
or
mov
adc
and
add
push
roll
or
inc
add
inc
xor
add
nop
push
pop
cmp
inc
xor
adc
and
or
xor
inc
mov
cmp
dec
push
xchg
in
and
mulb
or
add
dec
adc
enter
adc
mov
xchg
sbb
fsubs
add
inc
adc
icebp
clts
sub
repnz
repz
pop
and
inc
jo
mov
dec
notl
sar
mov
adc
or
inc
cld
xor
decb
xchg
jmp
js
testl
adc
xor
adc
inc
xchg
icebp
and
lock
cli
adc
push
mov
adc
and
dec
cmp
push
test
cwtl
push
and
pop
add
icebp
rorb
sarb
loopne
lock
mov
bswap
and
xor
inc
pop
nop
push
cld
pusha
xchg
jo
and
mov
rcrb
or
xor
lock
rorl
mov
jle
and
xor
nop
inc
cld
push
xchg
pusha
aas
and
orb
mov
mov
inc
shl
pop
nop
loopne
lock
or
jl
adc
and
nop
xor
inc
xchg
push
aas
and
jo
enter
mov
pop
shl
mov
pop
adc
adc
or
js
lock
adc
icebp
in
pop
dec
js
lods
and
cwtl
push
cmp
cmp
outsb
cmp
fsubrs
test
cmp
js
ret
pop
call
subb
sbb
and
sub
add
inc
add
push
adc
arpl
ret
add
cmp
inc
xchg
adc
push
add
or
pop
push
mov
xchg
add
xchg
adc
test
push
xor
fcoml
cwtl
xorl
pusha
sahf
add
push
insb
movsb
adcl
fs
and
loopne
and
inc
int3
cmpsb
loope
adc
pushf
and
or
xor
xchg
pop
negb
inc
add
enter
add
or
inc
xor
and
outsl
sbb
push
xchg
and
sbb
push
xor
dec
and
dec
sub
adc
sbb
dec
inc
add
push
sub
and
push
lea
push
xchg
dec
xor
sbb
sbb
imul
inc
dec
or
xor
int
push
adc
jle
int
inc
lea
dec
push
or
jns
pop
test
inc
push
sbb
pop
mov
sub
adc
or
stos
dec
adc
push
add
jmp
xchg
add
or
xor
add
or
adc
mov
pop
fs
cmpb
inc
add
add
cld
xor
clc
sbb
cmc
lock
clc
loopne
rcrb
cld
or
inc
aas
or
popa
wbinvd
out
sbb
jbe
pop
add
mov
xor
or
or
or
adc
jo
add
push
cmpsb
adc
add
imul
push
inc
out
out
sbb
inc
fwait
testb
fisttps
and
cmp
rolb
add
loopne
ret
add
lar
pop
add
aas
sbb
and
lcall
add
lock
xor
mov
sbb
lods
cmp
lods
add
and
jl
inc
enterw
jle
jg
and
sbb
jo
pusha
mov
rolb
pushf
and
lock
or
es
adc
loope
cmp
adc
and
dec
jg
dec
aas
cmc
add
inc
pop
aas
mov
rorl
out
inc
cmp
adc
loopne
mov
push
or
pop
test
rclb
nop
cmp
add
add
std
enter
lock
loopne
adc
pop
add
sub
roll
add
pop
and
inc
pusha
cmp
clc
dec
mov
xor
xor
and
loopne
enter
lods
add
stos
add
add
sub
xor
sbb
xor
inc
lea
and
in
add
adc
test
nop
ret
cmpl
sbb
inc
xor
push
add
adcl
adc
cld
add
cmp
push
fmull
and
lock
jle
xchg
push
sbb
push
or
push
sbb
sub
pop
inc
or
inc
out
inc
push
addl
sbb
xor
sub
std
data16
lcall
mov
cmp
jecxz
ret
sarl
rolb
and
sbb
pop
push
pop
or
or
je
xchg
or
loope
aas
push
and
adc
loop
mov
dec
orb
push
pop
inc
add
adc
add
push
add
inc
pop
inc
add
dec
push
xor
mov
aas
ret
addl
mov
mov
sbb
xor
and
add
cmc
pop
push
and
orl
xor
sub
clc
sub
push
daa
inc
sub
daa
dec
sub
data16
push
adc
cmp
adc
push
adc
mov
adc
dec
pop
mov
test
enter
sbb
mov
cmp
sub
adc
pushf
push
sub
jno
cmp
pop
cli
push
sub
loope
inc
mov
push
xchg
shlb
mov
cmp
or
and
adc
inc
and
cs
sub
sub
aas
sub
sbb
and
fwait
cmp
inc
cmp
ss
dec
push
movsb
cs
repz
imull
int
lcall
stc
sbb
mulb
dec
push
stos
subl
adcb
inc
sub
or
pop
insb
mov
fs
sub
mov
or
stc
or
sub
mov
mov
sub
cmp
pop
adc
mov
fwait
mov
push
mov
push
or
add
idivl
clc
lds
cmpsb
aas
cmp
inc
lahf
inc
or
adc
out
popa
dec
push
pop
mov
mov
wbinvd
adc
mov
daa
push
aas
sub
adc
mov
push
out
inc
in
xchg
mov
cmc
adc
add
xchg
add
or
ss
mov
test
pop
sbb
pop
sub
adc
or
mov
push
mov
aas
repz
ss
mov
pop
inc
imul
lods
mov
mov
test
inc
adc
fs
scas
push
push
push
xor
sub
adc
xor
sub
dec
insw
in
xor
mov
jne
adc
dec
add
dec
mov
adc
xchg
out
inc
ja
mov
jecxz
sub
inc
add
mov
data16
mov
lods
pop
int3
sbb
push
add
xor
sub
mov
xor
xchg
cmp
arpl
and
xor
stos
lcall
jmp
inc
sub
xorb
and
xchg
or
repz
enter
test
mov
cmp
inc
push
icebp
cmp
cld
mov
mov
and
inc
cmpsb
mov
daa
adc
mov
mov
push
mov
adc
and
test
adc
sub
mov
mov
data16
test
into
mov
cltd
aas
adc
or
out
and
mov
adc
cltd
les
setno
xchg
jmp
cmp
pushf
sub
xchg
mov
subl
jg
or
jnp
insb
clc
or
sbb
sub
stos
sub
adc
dec
ficoml
dec
adc
daa
mov
dec
sarb
sub
daa
lret
daa
mov
movsb
lock
mov
dec
mov
lea
adc
and
xchg
movsb
jecxz
adc
mov
xchg
sub
cltd
add
jo
or
adc
mov
adc
addr16
in
push
inc
mov
cmp
dec
sub
out
test
sub
std
or
pop
sub
inc
mov
repz
bound
adc
shrb
mov
les
inc
xchg
xchg
sub
data16
sub
push
fists
and
test
and
mov
js
cmpsb
sbb
sub
sbb
mov
push
aas
dec
sbb
sub
dec
inc
xor
add
xchg
lcall
in
je
mov
adc
mov
sbb
lcall
pop
sub
shl
xchg
pop
mov
mov
in
imul
outsl
sub
mov
xchg
cmc
clc
adc
in
jno
je
fwait
sub
call
cwtl
add
stos
fstl
lahf
call
mov
push
adc
push
shlb
sarb
paddb
xor
mov
add
ss
xor
push
pop
mov
loope
or
xchg
out
loope
or
inc
daa
dec
cli
adc
add
cmpsl
in
dec
nop
or
adc
inc
cmp
push
inc
pop
arpl
dec
lea
loope
ret
stc
pop
rcrb
outsb
sbb
imul
or
xchg
outsl
jno
jae
add
sarb
sarl
das
bound
mov
and
imul
or
shll
xor
test
pop
xorl
jl
data16
call
xchg
inc
mov
or
xchg
mov
xchg
jo
js
ret
sub
mov
push
test
loopne
sub
or
xlat
add
mov
fwait
adc
or
fadds
fsubs
faddl
or
xor
adc
xchg
cmp
inc
xchg
adc
xchg
fistps
sbb
dec
and
cwtl
adc
mov
lods
adc
or
xchg
mov
cwtl
or
pushf
mov
xor
sbb
cmp
or
mov
ss
or
xor
sbb
or
xchg
in
call
out
ret
sbb
or
mov
and
lods
jo
sbb
lods
jmp
es
daa
bound
fnstenv
jo
sub
pushf
je
mov
loopne
xchg
movsb
push
pop
cmpsb
rolb
popa
movsl
into
cmpl
dec
jne
inc
xchg
jno
int
jle
lods
lret
movsl
cwtl
pop
mov
rclb
in
sbbb
fisttps
and
out
push
out
fstl
call
aaa
mov
out
add
mov
add
adc
and
and
rclb
leave
clc
cmp
ss
clc
adc
mov
mov
or
subb
cwtl
adc
cmp
cmp
bound
adc
xchg
inc
std
rorb
and
fisubl
inc
adc
inc
fdivrl
dec
bound
dec
flds
dec
sbb
push
aam
push
fisttps
adc
call
imul
cmp
add
pop
loop
pop
and
pusha
bound
arpl
add
add
add
dec
imul
inc
call
jne
inc
jp
je
add
rorl
nop
outsb
adc
xchg
add
popf
push
push
mov
stos
addl
cmp
add
sbb
test
stos
or
add
out
mov
lods
scas
push
jae
jo
out
mov
mov
mov
or
enter
mov
orl
jmp
sbb
lock
roll
xchg
shll
xchg
add
ja
call
fdivrs
fprem
cltd
xchg
adc
xorl
and
ljmp
lea
push
xchg
int3
xchg
data16
or
adc
add
pop
shll
push
test
icebp
add
and
inc
mov
or
pop
mov
cli
add
in
mov
out
ret
out
addl
enter
rclb
and
stc
cmp
out
lock
incb
mov
cmpxchg
jl
add
add
dec
dec
add
inc
and
sbb
xor
add
cs
scas
cmp
dec
enter
out
jecxz
lret
lret
and
and
loopne
dec
enter
pusha
and
test
add
xchg
stos
push
imul
push
rolb
popf
movsb
jb
nop
mov
or
shlb
stos
jno
add
ja
aad
pop
add
stos
jb
mov
rcrb
outsl
loop
or
adc
mov
iret
and
pop
fwait
outsb
jo
stos
xor
test
dec
int3
lods
xchg
xor
push
insl
and
or
mov
mov
add
adc
test
loop
sahf
push
imul
adc
add
sbb
loop
or
mov
add
add
sub
inc
xorl
sub
fcomps
aaa
push
bound
push
lock
inc
out
ljmp
fucomip
pop
jmp
call
leave
and
xchg
cmpsl
jge
add
fsubp
loope
add
and
sbb
outsb
outsl
test
fiadds
jno
addb
aas
and
ficoms
fcoms
mov
fwait
sub
cli
decb
add
in
stc
clc
testb
in
xor
or
pop
pop
pop
pop
jnp,pt
rol
cwtl
into
idivl
repz
ljmp
jns
adc
inc
cmp
inc
mov
xchg
inc
sub
or
jle
cmp
jo
inc
popf
ds
dec
and
pop
movsl
cmc
sti
in
movsb
xor
push
jle
mov
insb
icebp
cld
mov
bound
dec
hlt
jl
lret
or
nop
sub
shlb
or
cld
mov
arpl
add
cld
sbb
adc
dec
add
icebp
push
scas
add
out
ja
inc
dec
dec
in
push
loopne
into
or
outsb
or
pushf
gs
sbb
adc
and
add
int3
loope
insb
pop
add
sbbb
cltd
push
outsl
insl
inc
pushf
andl
xor
jne
orb
and
lods
js
je
insb
dec
adc
call
push
mov
sbb
arpl
xor
add
inc
sbb
push
or
sbb
les
sbb
mov
mov
mov
sbb
and
mov
mov
dec
insl
movsl
test
insl
sbb
cmpsb
and
cltd
and
gs
pushf
jo
adc
outsl
jns
and
leave
and
sbb
leave
sub
xchg
cmp
cmp
popa
jbe
xchg
sbb
inc
mov
cs
insb
and
sbb
push
inc
imul
cmp
or
inc
dec
adc
pop
insb
inc
bound
nop
push
push
push
inc
mov
cli
adc
dec
pop
shlb
cmp
and
xchg
mov
xchg
sub
cmp
je
push
adc
mov
js
and
sub
add
in
dec
mov
inc
ror
jl
inc
fwait
popa
sbb
mov
inc
push
lds
je
and
adc
fs
cli
xchg
mov
pushf
in
mov
add
mov
and
addl
arpl
cltd
jae
popa
movsb
xor
es
sub
push
sub
xchg
js
je
arpl
test
push
int3
insb
inc
stos
push
push
sub
xchg
xor
pop
aas
add
inc
insb
je
movsb
sub
and
mov
add
test
je
repnz
mov
into
sbb
aad
inc
adc
arpl
sahf
pusha
jo
outsb
and
push
ds
dec
mov
enter
insl
sbb
inc
push
outsb
bound
push
data16
loop
pop
pop
lods
cmpsb
je
cs
js
je
mov
and
je,pn
fs
fstpl
loop
mov
inc
mov
and
mov
icebp
push
or
push
pop
arpl
leave
je
pushf
push
xchg
sbb
jp
ret
push
data16
sbb
pusha
push
push
push
mov
sub
push
and
push
and
jo
popa
inc
and
inc
inc
sub
leave
mov
lcall
xor
push
insl
xchg
dec
inc
mov
ret
mov
sbb
sbb
xchg
int3
xchg
and
dec
inc
je
xchg
and
mov
movsb
popa
inc
call
jns
cmp
mov
dec
add
push
orb
push
outsl
sahf
sub
sub
sbb
je
lret
clc
mov
orb
fsts
inc
fwait
icebp
arpl
leave
sbb
les
fs
imul
or
stos
xor
int3
add
loopne
xchg
rorl
addl
inc
push
adc
cld
ja
cmp
out
dec
inc
push
push
pop
xor
data16
sub
jae
and
outsb
fadd
add
repnz
push
mov
sub
mov
rclb
stos
and
or
dec
test
leave
cmp
mov
pop
bound
push
adc
xor
icebp
mov
outsb
push
push
gs
inc
xchg
rcrb
sbb
push
push
or
inc
cs
add
jo
arpl
bound
ss
sbb
dec
movsl
sbb
js
add
pushf
xor
mov
push
sub
mov
mov
lds
js
sub
nop
aaa
loopne
adc
adc
push
push
mov
jp
dec
inc
shlw
and
ss
fs
dec
dec
sbb
xor
aam
mov
insb
cmpsb
nop
dec
adc
lret
pop
push
adc
adc
test
cltd
movsb
xchg
jbe
repnz
mov
pop
movsl
and
and
mov
dec
adc
je
lea
jle
cmp
imul
negb
sub
push
cmp
adc
je
jp
push
sub
dec
jb
ja
or
dec
push
stos
js
mov
jnp
inc
insb
xchg
insb
add
fwait
or
cld
cmpsb
or
or
cmpsb
enter
imulb
dec
dec
adc
lea
mov
sub
fisubrl
and
jl
push
fstps
xor
mov
xchg
insb
sahf
leave
inc
mov
mov
mov
test
jle
push
dec
scas
or
xchg
xor
cltd
js
pop
push
xor
imul
push
hlt
std
cmp
lahf
es
mov
mov
jo
mov
rclb
scas
sub
xor
push
into
sub
ja
adc
cld
sub
sahf
mov
out
push
jo
push
dec
sbb
and
cmpsb
movsl
mov
les
add
fwait
hlt
movsb
add
inc
roll
mov
dec
sarb
xchg
bound
fsubs
mov
shlb
hlt
jb
int3
dec
outsl
insb
shll
push
push
pop
pop
push
fs
js
and
adc
jo
dec
jns
shrl
mov
lret
enter
and
dec
fs
out
pop
movsb
sbb
mov
es
insl
in
pop
icebp
aaa
out
dec
xor
dec
mov
xor
jl
movsb
lret
push
adc
popl
cs
push
xchg
and
data16
rcr
mov
push
push
sbb
sbb
and
nop
inc
dec
and
jbe
out
test
mov
movsb
mov
xchg
dec
push
pop
xor
xchg
movsb
push
and
idivb
jp
pop
lds
mov
sbb
mov
sahf
jmp
dec
imul
dec
divb
mov
movsb
push
rclb
ljmp
xchg
dec
movsb
sub
pop
add
dec
push
test
loopne
fwait
js
out
adcb
dec
lahf
push
dec
dec
out
dec
and
mov
test
inc
sub
dec
or
inc
mov
subb
xchg
jmp
xchg
insb
mov
mov
mov
and
xchg
or
mov
insb
movsb
std
pop
xor
adc
insl
test
nop
mov
daa
lds
gs
cmovs
movsb
sub
jo
push
stc
push
je
adcb
sub
push
dec
jb
stc
xor
imul
push
mov
cmpsl
inc
mov
je
aas
cmp
fidivrl
mov
in
mov
addr16
push
fsubrs
and
movsl
push
aam
popa
cmp
cmp
push
push
push
xor
lods
push
inc
cwtl
jne
adc
cld
and
push
mov
push
mov
loop
lcall
pop
push
adc
cmpsb
dec
push
outsb
adc
or
jb
adc
lcall
inc
adc
sbb
inc
mov
adc
outsl
cmp
push
push
mov
ds
xchg
and
inc
and
adc
addb
push
jns
pop
push
sub
test
repnz
pushf
pop
push
shrl
mov
fisubl
dec
enter
jns
add
dec
xchg
dec
arpl
xor
and
push
adc
pop
jmp
push
or
ds
inc
dec
xor
sub
add
dec
xor
clc
loop
scas
into
or
xor
repnz
and
test
dec
lock
cld
add
mov
insb
int3
and
movsb
dec
fchs
xchg
or
lds
sub
test
inc
adc
dec
and
or
loop
ret
mov
andb
pop
adc
outsb
fstps
out
and
push
xor
cmp
and
insb
dec
xchg
ds
mov
pushf
pop
lret
lret
mov
and
xor
mov
xchg
aam
cmpsb
xchg
sbb
clc
lcall
inc
leave
adc
cmp
pushf
sub
adc
fdivrl
int3
inc
push
cltd
test
repnz
cmp
aaa
push
js
push
mov
or
adc
icebp
sbb
aaa
add
cli
mov
out
add
sub
test
bnd
jb
or
in
enter
cli
pop
fidivrs
dec
jae
mov
cld
dec
xchg
push
mov
jne
xchg
sbb
dec
jbe
pushf
pop
pop
sbb
pusha
mov
adc
rorb
or
cmp
push
adc
jle
stos
lds
sub
push
jbe
push
or
into
cmp
data16
inc
jbe
fldl
or
xchg
call
adc
add
lock
push
jmp
mov
mov
mov
xchg
sahf
add
pop
js
out
cmpsb
xchg
pushf
jbe
sub
ss
fiaddl
stos
cmp
gs
fcomps
sbb
mov
sbb
inc
xchg
insb
lods
aam
cmp
bound
inc
xchg
mov
xchg
nop
cmpsl
inc
cld
mov
ja
lret
cmp
jle,pn
popa
rcrb
push
dec
inc
mov
in
test
adc
sub
cli
pop
into
scas
sub
stc
push
jl
mov
jp
mov
scas
xor
and
jo
je
xchg
push
xor
out
dec
addr16
imull
in
sub
inc
mov
xor
sub
or
push
xor
inc
pushf
mov
daa
lds
movsl
fidivs
mov
sbb
pop
imul
rcrb
gs
xor
add
push
dec
mov
dec
push
inc
stc
jbe
pushf
ljmp
into
and
cmp
xlat
lret
mov
lds
push
das
pop
inc
movsb
mov
jp
push
and
ficoms
jbe
push
or
push
mov
cs
data16
jns
cmp
sub
dec
fldenv
imul
push
imul
mov
pop
or
inc
mov
imul
iret
shll
jb
in
inc
dec
jo
shl
imul
lret
jp
into
and
or
mov
arpl
xor
xchg
repnz
jno
push
xchg
dec
cs
fidivrs
jp
fs
enter
inc
inc
mov
sub
andb
dec
cmp
add
inc
add
adc
sub
sbb
or
push
arpl
adc
push
addr16
sub
push
jns
leave
gs
xchg
adc
out
sbb
dec
push
js
outsl
ja
add
push
push
jns
gs
adc
icebp
push
fcomip
ja
xchg
pop
push
mov
cmp
mov
adc
dec
sbb
mov
stos
push
adc
inc
add
imul
cli
sti
xchg
cmc
icebp
addr16
fs
push
loopne
imul
mov
andb
push
std
mov
imul
outsb
dec
stc
mov
outsl
jb
sub
fiaddl
inc
jno
sbb
push
mov
jo
rep
pop
sub
inc
jb
cmpsl
push
adc
insl
push
xchg
cmp
push
test
dec
lret
xchg
add
bound
pop
pop
mov
sub
out
mov
dec
sub
movsb
in
jb
xchg
xor
mov
mov
movsl
nop
push
popa
adc
cwtl
push
xor
call
int
lret
or
jne
int
dec
insl
addr16
mov
outsl
mov
daa
pop
sbb
inc
insl
and
pop
lret
mov
mov
push
mov
rcll
aas
stos
fmull
out
push
push
add
inc
jne
in
outsl
dec
cmpl
popa
shll
leave
push
frstor
push
push
js
les
add
mov
fstl
inc
fs
push
xor
cmpsb
test
add
cli
imul
rol
xor
xor
inc
mov
inc
mov
add
add
je
xor
jo
sbb
or
fs
pushf
dec
arpl
imul
jmp
lea
push
pop
pop
or
pushf
xor
adc
mov
daa
rorl
addr16
push
js
in
mov
mov
out
mov
xor
daa
xor
adc
int
je
movsb
add
add
rorb
jg
jl
add
pop
cmp
arpl
inc
fnstcw
inc
popa
popf
gs
fldl
xchg
xor
xor
inc
push
push
inc
push
or
adc
push
and
sbb
gs
push
or
dec
dec
popa
push
ds
stos
mov
push
dec
cmp
or
dec
stos
inc
push
adc
test
outsb
mov
test
and
stc
out
mov
fs
jb
cmp
stc
mov
pushf
or
outsb
ud2
pop
or
adc
sbb
dec
outsb
arpl
push
xor
out
aas
push
or
fisubs
cmp
add
dec
xor
or
jns
push
cmpsb
inc
cld
push
adc
xor
inc
arpl
xchg
cmp
push
push
mov
jns
sbb
test
arpl
jne
sahf
xchg
bound
inc
imul
sbb
dec
stos
or
push
ss
lcall
fs
adc
pop
dec
nop
jecxz
and
pop
inc
sub
andl
sbb
sbb
push
dec
push
push
and
cmp
sub
xor
dec
rcll
clc
push
and
push
ss
aas
sbb
popa
pop
sbb
and
adc
push
lock
aas
add
dec
dec
inc
mov
and
xchg
dec
add
add
or
inc
sub
add
and
es
push
or
mov
sbb
pop
pusha
pop
and
xor
data16
sbb
daa
sub
push
adc
es
dec
lahf
push
add
add
sbb
out
loop
jno
cmp
adc
loope
add
inc
add
adc
jae
push
add
or
test
sbb
pop
add
or
movups
add
and
imul
movd
daa
push
mov
stc
mov
xchg
and
jnp
jns
jbe
or
add
stc
sub
add
inc
sbb
cmpl
add
cmp
and
daa
call
lds
sub
and
cmp
cmp
aaa
stos
pop
das
mov
cwtl
aaa
dec
push
add
push
push
inc
dec
dec
addl
sbb
add
xor
out
and
cmp
pop
into
xchg
xor
xor
dec
sub
mov
push
push
push
ret
nop
imul
xor
nop
pop
test
sub
xchg
adc
cli
and
add
adc
hlt
pop
stos
sbb
pop
mov
xchg
aas
or
add
xor
adc
adc
push
mov
and
add
pop
or
nop
lret
add
adc
nop
pop
or
gs
jo
imul
fdivs
xchg
pop
stos
pop
fildll
adc
gs
popa
push
fs
pop
push
xchg
push
das
inc
add
cmp
add
and
xchg
jl
sbb
dec
cmp
jb
cmp
rcll
inc
dec
dec
inc
inc
dec
inc
push
push
outsb
push
inc
pop
mull
insl
pop
nop
sbb
sub
inc
dec
inc
cmp
inc
jb
cmc
and
repz
test
es
enter
and
shrl
pop
cld
dec
dec
ficoms
sbb
mov
adc
mov
jmp
push
adc
sbb
inc
xchg
sub
ret
ja
jo
pop
jno
cmp
adc
enter
push
xchg
push
pop
pop
loopne
add
gs
mov
push
prefetch
and
push
outsl
jno
push
je
sahf
jae
push
jb
stc
imul
pop
imul
imul
adc
push
dec
testb
rclb
push
rorb
inc
adc
cwtl
mov
cmpsb
dec
mov
or
inc
xchg
pop
pop
cmp
mov
aaa
push
adcl
mov
sub
mov
daa
ss
push
add
and
inc
aaa
cmp
nop
fwait
sbb
sbb
pop
pop
xor
es
jmp
sub
push
inc
adc
jno
mov
jb
lret
add
sbb
sub
or
xchg
push
xchg
rclb
ret
push
xchg
adc
fptan
add
add
or
sub
lret
fs
push
adc
pushw
dec
int
push
mov
or
pop
and
and
dec
dec
dec
jae
outsl
xchg
push
cmc
in
repz
pop
std
xchg
jno
movsl
outsb
pushf
imul
add
rcrb
sub
add
push
inc
orb
fimull
xchg
lods
dec
and
push
inc
and
pusha
addb
xchg
ja
xor
ss
push
gs
das
gs
push
pop
xchg
fcompl
je
inc
faddl
sub
and
sub
sbb
out
insl
inc
dec
push
stos
xchg
fsts
cmp
orb
and
add
pop
xchg
je
and
xor
or
mov
test
inc
push
sub
movsl
sbb
arpl
gs
imul
cld
cltd
cmp
dec
fsubrl
xor
pop
adc
add
inc
dec
inc
pop
popa
pop
jb
jbe
push
fiaddl
adc
pop
push
jbe
ja
outsb
movsb
pop
movsb
sub
or
add
and
dec
movsb
cmp
mov
sub
cmp
jp,pn
xchg
gs
xchg
dec
inc
lods
pop
dec
push
pop
cwtl
push
jp
pop
xchg
jns
lret
divb
push
xor
rdmsr
inc
add
imul
sub
push
movsb
lahf
mov
pushf
test
movsl
fnsave
pop
push
dec
pop
jno
or
stos
adc
sub
or
or
or
and
or
inc
shll
stos
push
sub
stos
dec
xor
lret
pop
outsb
daa
shl
test
popl
mov
cmp
aaa
out
push
push
dec
add
jge
jl
mov
stos
pop
push
leave
sub
push
outsb
dec
or
xor
dec
addl
xor
adc
dec
cltd
jb
dec
dec
dec
push
push
bound
dec
xchg
inc
jg
inc
inc
dec
xor
push
push
adc
push
push
push
push
das
lret
inc
sub
push
jge
es
push
lret
fwait
insb
add
or
adc
adc
popf
pop
cmp
push
jl
push
xchg
xchg
aas
pushf
push
insb
fsubrs
jg
or
sub
xchg
mov
sbb
sbb
int3
add
adc
icebp
adc
adc
push
out
push
loope
push
bound
es
stos
adc
mov
inc
push
push
imul
daa
sbb
in
jg
cmpl
out
call
sahf
push
cmp
js
outsb
lret
add
bound
sbb
sbb
pop
sbb
pop
and
cmp
push
pop
push
push
mov
dec
nop
sbb
dec
lcall
mov
and
and
inc
inc
dec
push
sbb
push
cmp
and
adc
arpl
pop
or
inc
pop
xor
leave
cmp
into
inc
movsb
aas
cmp
add
rclb
push
push
push
dec
sahf
push
mov
inc
push
pop
push
add
pop
ja
jnp
cmp
and
inc
inc
sbb
sbb
sbb
adc
popa
pop
test
ret
xor
idivb
cmp
cmp
imul
push
dec
push
fstpt
pop
enter
sbb
or
pop
xor
mov
divl
das
sub
sbb
stos
jno
ds
lret
or
xchg
ljmp
sarb
ljmp
jge
pop
jbe
aad
mov
mov
mov
pop
imul
fimull
push
ja
pop
push
popf
shl
sbb
push
push
pop
pop
push
dec
pop
cs
repz
or
dec
sbb
iret
mov
mov
xchg
shll
jge
dec
push
push
push
scas
push
pop
sti
mov
pop
pcmpeqb
pop
push
or
popf
push
xor
inc
dec
push
sbb
sub
mov
test
inc
xor
add
data16
xchg
out
adc
aaa
cmp
and
push
adc
add
lea
and
sbb
sbb
add
sbb
or
or
push
sbb
jmp
gs
fs
sbb
sbb
sbb
and
cltd
adc
add
adc
xchg
icebp
pop
dec
or
xor
and
mov
push
cmpsl
xchg
adc
sti
or
push
sub
mov
jnp
js
jle
dec
inc
xchg
cmpb
xor
push
test
dec
test
pop
add
pop
arpl
xor
je
outsl
insl
dec
imul
shll
pop
adc
add
pop
push
push
push
xchg
outsb
js
je
sti
aad
mul
insb
arpl
ss
and
cmp
cmp
andb
stos
bound
xor
xchg
dec
dec
and
fildll
insl
rcr
insb
or
xchg
leave
ja
sub
shlb
or
pusha
pop
sub
mov
adc
adc
push
and
test
or
test
cmp
lds
ret
rcll
and
daa
inc
adc
sbbl
or
movlhps
dec
sub
sarb
lcall
sbb
jl
out
repz
push
imul
sbb
ljmp
jno
inc
int
push
push
xor
les
cld
xor
hlt
push
add
jb
push
push
dec
pop
jno
stos
pop
lcall
fistps
dec
push
outsl
dec
pop
les
sbb
push
bound
sub
sti
cmc
cmp
push
push
cs
cmp
inc
and
mov
xor
xor
mov
cmp
or
loopne
aaa
xor
insb
addr16
inc
cmp
cs
jnp
jno
pop
test
pop
mov
dec
xchg
adc
push
and
test
inc
lret
das
test
dec
stos
xor
xchg
shrl
pop
pop
mov
pop
push
xchg
icebp
mov
sub
push
ret
sbb
push
push
and
dec
pop
lods
sub
push
popl
fldl
insl
sub
shrb
out
cmpsl
mov
sub
ret
cwtl
int3
dec
push
push
js
int
cmp
inc
mov
xchg
bound
xchg
add
inc
dec
jo
dec
dec
inc
outsb
dec
shlb
dec
imul
ss
mov
jg
push
ds
dec
mov
cmp
push
pop
adc
loope
js
dec
fldenv
lcall
sub
daa
or
mov
ds
enter
imul
lea
sub
xchg
lock
gs
push
xchg
nop
sub
push
adc
push
push
push
lahf
movsb
mov
dec
pop
lds
ja
aam
pop
and
push
push
ficoml
dec
pop
xor
call
outsb
jecxz
imul
pop
pop
add
adc
push
and
loop
shll
cmc
push
push
push
push
bound
xchg
insl
adc
push
pop
outsb
pop
mov
cmpsl
add
push
pop
pop
sub
adc
clc
add
and
dec
mov
xor
sti
xor
xor
icebp
mov
in
adc
push
les
orb
ss
jp
xor
popa
pop
cmpsl
mov
inc
dec
mov
pcmpeqd
and
inc
pop
cltd
push
add
or
cmp
dec
pushf
xor
gs
xchg
adc
inc
dec
inc
lret
sub
sub
sbb
sbb
xchg
pop
inc
enter
pop
arpl
pop
bound
lods
shll
jbe
je
test
sbb
stos
mov
rorb
sub
sub
adc
push
mov
fists
push
and
lods
cmp
les
mov
xchg
stos
mov
xor
mov
fwait
push
pop
sbb
sbb
xorb
xor
inc
inc
cmp
mov
or
and
or
mov
rcrb
and
push
push
fs
push
aam
rcrl
pop
inc
adc
dec
push
or
out
push
pop
cld
shll
mov
clc
add
ds
aas
loope
and
sahf
sub
add
push
lock
cwtl
out
and
jb
add
popf
sub
jecxz
imul
arpl
insl
in
mov
into
dec
lea
add
xor
daa
sub
push
aas
xor
mov
cmp
outsl
and
inc
jmp
cltd
push
enter
sub
cltd
rclb
rclb
inc
adc
je
pushf
adc
mov
push
push
loope
mov
pop
mov
sub
movsl
pop
imul
dec
out
pop
or
add
mov
bound
xchg
and
mov
xlat
push
or
mov
jecxz
dec
pop
mov
inc
mov
stos
and
pop
push
mov
push
outsb
push
shll
jge
test
dec
pop
pop
adc
push
inc
bound
imul
imul
nop
inc
cld
add
jae
je
ja
int
and
xor
add
push
dec
sub
in
inc
mov
push
lods
cld
push
aaa
adc
sbb
mov
xor
jb
jne
mov
divl
test
xchg
mov
nop
sub
outsb
int3
fcoms
ds
stos
mov
ljmp
add
pop
mov
xor
mov
lods
roll
cmp
push
or
movsl
or
push
sbb
pop
out
sbb
and
push
call
popf
sub
sbb
mov
cmp
or
push
aad
pop
sbb
cmp
loop
je
imul
mov
mov
xchg
sbb
test
mov
nop
jmp
xchg
or
push
popa
in
dec
lcall
bound
push
das
xor
fldl
gs
push
sbbb
push
mov
shll
dec
jne
jnp
outsb
mov
fsubrs
push
pop
in
test
in
jge
xor
insl
mov
imul
pop
or
and
push
xchg
cwtl
xchg
sbb
jnp
arpl
fs
dec
cwtl
jg
inc
in
add
jle
xchg
mov
xchg
stc
and
push
mov
aam
add
add
cmp
cmp
pop
gs
pop
gs
popa
dec
pop
sbb
jno
add
push
adc
adc
add
and
and
xor
into
scas
repnz
inc
xchg
test
daa
clc
jge
imul
aad
imul
sub
aam
leave
stos
gs
ja
aas
pop
push
jo
js
mov
lret
int
stos
and
imul
xorl
inc
mov
xchg
mov
dec
inc
stos
fldt
mov
popf
xor
out
bound
dec
addr16
dec
les
aad
pop
adcl
xchg
fiadds
mov
sub
xchg
xor
ja
bound
jns
xchg
xchg
xchg
lea
jo
sbb
inc
cmp
cwtl
adc
ds
lods
xchg
mov
jae
pushf
pop
daa
leave
xchg
jno
push
clc
inc
push
lods
mov
dec
and
aaa
rol
cmp
imul
insl
cmp
xor
nop
loopne
dec
or
ret
inc
fnsave
outsb
xor
dec
inc
cmp
ret
inc
sub
push
xchg
inc
and
movsl
mov
inc
xor
adc
sbb
add
pop
xchg
in
jb
in
shrb
sbb
loope
push
ds
int
xchg
fstps
cwtl
cltd
xchg
pop
push
push
xchg
ficoms
dec
dec
loope
inc
sub
ljmp
xchg
mov
test
in
test
cmp
das
sahf
add
xlat
xor
cmpsb
pop
in
push
jae
movsb
mov
jo
call
dec
push
lcall
xor
mov
lock
push
mov
mov
popf
jnp
jl
sbb
clc
insb
aaa
mov
mov
inc
test
mov
dec
mov
and
imul
and
and
cmp
fsubs
jnp
stos
dec
data16
push
or
inc
inc
and
push
push
push
je
cmp
dec
test
icebp
inc
and
push
mov
sbb
sbb
cmp
adc
or
lock
inc
sub
dec
lds
xchg
rcrl
bound
pop
xchg
movsb
jno
lcall
push
int
cmp
imul
push
cmp
xchg
popf
stos
and
xor
insl
pop
adc
clc
pop
jecxz
dec
sub
sub
movsb
popf
and
ret
pop
jp
jnp
aaa
xchg
push
push
cmpsb
addr16
mov
push
push
push
addr16
roll
mov
pop
test
sbb
dec
dec
mov
jo
push
xchg
das
movsb
test
aam
movsb
adc
mov
push
adc
adc
jl
mov
xor
cmp
imulb
push
jle
rcll
mov
jo
outsb
push
pop
insl
imulb
pop
pop
test
jo
ss
adc
dec
por
or
dec
das
add
inc
jae
pop
jb
daa
xor
mov
mov
lcall
fwait
pop
push
sub
jp
imul
bound
daa
outsb
dec
inc
xor
adc
pop
push
bound
imul
lods
gs
mov
fcoms
and
jg
addb
or
lods
subb
addr16
mov
mov
mov
fisttps
mov
push
sub
orb
dec
pop
jno
rcll
push
jge
pop
das
or
lods
jg
stos
push
stos
into
jp
or
cmp
gs
ret
and
sub
bound
ss
push
cmp
das
lret
adc
ret
loop
xchg
mov
mov
xchg
inc
test
andl
dec
dec
pop
or
fs
sub
repnz
bound
lcall
test
pushf
popf
arpl
mov
pop
imul
es
orb
fs
das
pushaw
or
sub
pop
sbb
out
lods
add
loope
les
xchg
jp
repz
lret
ljmp
mov
leave
sub
jp
movsb
lret
stos
jno
cmp
sub
dec
ret
mov
mov
aad
cmpsl
dec
shrb
icebp
gs
stos
test
xchg
hlt
lcall
stos
movsl
sbbl
gs
cwtl
sub
adc
movsb
dec
aam
push
jno
jno
pusha
movsl
aaa
adc
popa
or
mov
jle
jge
icebp
pop
das
lds
push
lods
mov
mov
cmp
imul
daa
loop
lock
test
popa
bound
pop
pop
pop
push
sub
loop
loop
test
les
mov
imul
lcall
pop
and
pop
movsb
xchg
sbb
rcrb
push
add
and
xchg
sub
dec
mov
push
cmp
adc
lods
pop
xchg
mov
orl
mov
icebp
mov
movsb
stos
dec
movsl
adc
push
pop
pop
test
insb
cmp
pop
mov
sbb
sbb
push
andb
or
shll
inc
mov
jge
int
rcrl
pop
insb
jb
dec
mov
add
push
imul
add
dec
lahf
add
inc
inc
popa
int
cmp
aad
xchg
pop
and
and
daa
and
and
lcall
pop
test
jle
jp
test
jno
sti
xchg
lock
pop
lret
gs
gs
push
mov
outsb
xor
stos
imul
ficompl
clc
les
dec
push
mov
sbb
dec
out
test
jecxz
sub
decl
or
push
imul
inc
jmp
fdivrl
les
lret
sbbl
hlt
test
mov
lcall
int3
mov
sbbb
dec
out
lcall
jp
sti
stos
mov
icebp
test
lret
mov
lret
gs
jo
leave
push
xchg
push
mov
pop
das
pop
pop
add
ret
fiaddl
es
sbb
cmp
xor
add
sbb
and
loop
shr
pop
and
dec
ljmp
mov
mov
bound
dec
xchg
les
lret
mov
in
mov
movsb
sahf
leave
cmpsb
call
pop
sub
push
lahf
imul
xchg
xchg
lret
xchg
mov
and
lock
jnp
iret
push
gs
inc
xchg
cmpsb
test
aad
dec
xchg
dec
xchg
dec
lcall
and
push
mov
push
xchg
lock
cld
cmp
fwait
xchg
push
xchg
xor
mov
movsb
or
jo
pop
push
adc
mov
add
mov
mov
xchg
data16
gs
rcr
xchg
std
cmpsb
lods
push
cmpsl
lahf
aad
push
insl
pop
stos
stos
lret
ja
scas
lods
and
int3
mov
pop
mov
xor
sbb
sbb
or
or
sbb
push
daa
sub
das
sub
pop
mov
sub
inc
ret
mov
sub
lcall
popf
leave
and
sahf
or
test
dec
lods
pop
pop
push
adc
call
outsb
and
xchg
adc
das
adc
mov
fs
push
ds
lods
or
sub
fs
out
and
mov
sub
out
xor
sub
cwtl
xchg
and
stos
bound
inc
mov
mov
call
repz
push
lods
ss
push
and
mov
inc
pop
fucom
fmuls
shrl
aad
pop
cmp
pop
sub
jmp
int
jno
or
cmpsl
scas
inc
decl
push
movsb
adc
subb
adc
adc
adc
push
push
les
in
mov
nop
loopne
mov
add
int3
gs
mov
stos
gs
bound
lods
dec
cmpsl
sub
xchg
xchg
mov
inc
pop
push
lahf
push
shll
pop
gs
push
imul
sbb
xchg
jl
pop
sub
pusha
xor
pop
movsb
adc
es
test
ja
lods
sbb
sahf
in
inc
ss
stos
rorl
stos
andb
pop
shrl
insl
inc
or
lea
mov
out
pop
and
pop
dec
sub
sub
xchg
sub
imul
pop
stos
pop
jecxz
imul
jnp
arpl
sub
dec
xchg
sbb
jne
and
testb
scas
test
outsb
jecxz
je
in
sbb
mov
stos
cld
lods
scas
ljmp
clc
mov
movsb
push
nop
loopne
mov
push
clts
and
jb
mov
mov
out
jecxz
jl
loopne
xchg
mov
outsb
lods
sub
and
call
mov
mov
pop
jge
adc
ljmp
xlat
sahf
fcoms
cmp
dec
mov
inc
fcmovnbe
inc
icebp
stc
push
jns
inc
push
xor
das
pop
push
stos
cmp
dec
sub
insl
cmp
popf
jns
mov
xchg
hlt
dec
ja,pt
pmaxub
inc
inc
sub
or
pop
popa
push
and
mov
pop
adc
int
jne
scas
scas
cmp
push
pop
imul
pop
xchg
xchg
inc
shrl
loope
hlt
mov
mull
ret
mov
dec
or
pop
icebp
adc
cli
mov
stc
jle
fs
xorl
cmp
xor
mov
mov
sub
pop
mov
push
pop
insl
or
xchg
push
xor
adc
stos
adc
imull
stos
mov
pop
insl
jae
mov
sub
je
addl
xchg
jno
mov
xor
ror
daa
movsb
jae
mov
push
push
push
add
and
push
adc
mov
mov
and
push
pop
lods
or
push
scas
mov
inc
test
or
bound
mov
pop
push
bound
pop
push
bound
mov
mov
jb
aam
outsb
les
fisubs
stos
inc
mov
icebp
andl
test
jbe
inc
push
sbb
rorb
repnz
movsl
sbb
cmpsb
sarb
push
stc
pop
daa
sbb
test
movsb
test
lahf
fnstenv
lahf
cltd
test
mov
sub
pop
testb
sub
popf
jecxz
push
pop
push
and
inc
pop
subb
mov
aaa
xchg
xchg
imul
dec
dec
imul
jb
imul
xlat
lea
imul
xor
rcrb
dec
push
imul
cwtl
pop
and
cwtl
stos
push
in
push
mov
mov
inc
je
dec
pop
scas
pop
pop
push
scas
push
dec
mov
sub
loop
rcrl
lahf
xchg
popa
and
cld
loop
push
pop
das
inc
xchg
adc
xchg
push
inc
loopne
mull
or
xor
cmp
outsl
adc
jae
xchg
xchg
xchg
mov
push
rolb
xchg
xchg
xchg
adc
pop
psrlw
ss
jp
push
jae
imulb
lret
push
shrl
scas
xor
xchg
inc
arpl
xor
stos
sub
loopne
andl
cmpsl
stc
inc
lods
cmp
push
fwait
push
pop
jmp
dec
pop
or
mov
adc
sbb
xchg
xor
movsb
dec
icebp
mov
out
mov
sub
mov
das
pop
lods
pop
dec
scas
and
push
push
mov
das
outsl
mov
jbe
mov
mov
push
mov
std
aad
out
stos
ficomps
stc
and
call
insb
lcall
jl
je
aam
push
adc
imul
adc
dec
adc
test
gs
gs
mov
ret
cwtl
leave
jns
jecxz
rcl
cmp
jb
or
push
inc
sbb
icebp
adc
scas
or
mov
popf
lcallw
or
push
inc
scas
sbb
inc
sbb
dec
jecxz
imul
push
sub
push
pop
mov
xchg
xor
sbb
dec
stos
pop
jns
dec
or
push
gs
imul
scas
pop
fbstp
dec
mov
jb
cmp
mov
mov
fcmovnb
jae
nop
pop
push
lds
icebp
in
std
sar
mov
ds
mov
imul
xchg
push
mov
dec
add
cltd
xchg
adc
fcoms
cmp
push
rorb
inc
dec
inc
pop
and
cmp
dec
loope
cld
pop
pop
xchg
clc
fisubs
mov
mov
or
push
jnp
jg
cmp
push
imul
push
outsb
push
cmp
lret
push
mov
pop
les
adc
sub
xchg
int
xchg
loope
adc
mov
pusha
loope
push
xchg
popa
pushf
lods
imul
mov
push
pop
dec
test
aaa
sub
lcall
mov
stos
mov
stos
pop
jge
ja
mov
lods
mov
imul
ret
lds
push
mov
lret
out
ror
je
cli
shlb
shrl
pop
stos
gs
inc
pop
outsb
insb
pop
fcmovb
sub
js
adc
and
lods
aaa
out
leave
sub
mov
or
inc
push
and
ds
scas
addr16
insl
insb
cmp
dec
fsubrl
pop
or
mov
mov
rclb
inc
or
inc
sbb
xchg
pop
imul
stos
pop
mov
sub
stos
jp
xor
mov
cs
fwait
mov
sbb
int3
mov
jae
flds
mov
push
and
dec
int
cmp
popf
stos
iret
inc
inc
xchg
push
in
rclb
mov
lret
dec
add
sbb
mov
push
sub
int
out
pop
add
xchg
pop
lret
cmp
cmp
rcrb
pop
gs
push
fisubl
push
ret
mov
aam
loope
xor
mov
lea
mov
push
pop
sub
inc
nop
lret
inc
das
loop
test
pop
sub
outsl
lds
sub
push
subl
xchg
js
sti
js
insl
and
pop
lahf
cmp
jl
clc
scas
mov
xchg
rorl
cmpsl
sbb
pop
int3
adc
or
mov
mov
dec
std
push
pop
mov
xor
aaa
jge
les
fnstenv
loope
jno
mov
pop
lods
push
dec
ret
stos
bound
ror
or
lret
int
mov
inc
mov
pop
test
aaa
gs
add
bound
iret
aad
xchg
adc
leave
repz
inc
ret
mov
sub
addr16
xchg
fnstcw
pusha
push
pop
mov
js
xchg
xor
outsb
es
das
loop
pop
mov
cmp
aad
into
dec
stc
or
or
lds
xor
test
dec
loope
add
stos
pop
pop
stos
xchg
push
push
je
push
dec
pop
loopne
stc
dec
popf
pop
lea
lcall
mov
lods
cmp
push
sub
sub
pop
sub
bound
stos
lret
jo
rorl
push
mov
pop
xchg
and
xchg
xor
rcll
into
sar
pop
scas
pop
dec
aad
push
pop
jno
or
push
push
es
xor
dec
imul
stos
inc
inc
lods
or
or
clc
dec
rolb
sbb
cs
fdecstp
push
addr16
into
lods
jge
pop
adc
mov
bound
bound
add
ja
xchg
xchg
lcall
dec
movsl
and
cmp
xchg
movsb
mov
cmp
dec
jb
xchg
aaa
xchg
push
xchg
sbb
ljmp
fwait
mov
sbb
pop
or
adc
fsubrs
lret
sub
cmp
pop
and
test
fldcw
mov
ds
das
and
mov
mov
in
popf
ficomps
out
stos
push
enter
fdiv
pop
push
xchg
rolb
dec
xchg
dec
pop
bound
das
outsl
sbb
pop
insl
pop
adc
mov
push
cmp
sub
jns
stos
jno
jb
pop
mov
push
movl
or
pop
cs
jo
and
inc
das
inc
cwtl
dec
pop
popa
dec
pop
adc
inc
sbb
push
movsb
dec
stos
sub
mov
cltd
rcll
or
xchg
fcompl
out
mov
pop
fidivs
xor
inc
rcrl
mov
mov
push
mov
xor
dec
leave
push
jnp
inc
sub
xor
pusha
aam
test
pop
mov
aam
nop
push
das
push
int
jae
mov
push
cld
into
nop
gs
bound
lret
ror
test
leave
ret
and
jns
sub
pop
push
ds
mov
dec
test
push
aaa
push
dec
rolb
and
lods
imul
mov
or
jp
imul
or
das
divb
movsl
mov
jl
js
mov
test
filds
fsubrl
ficoms
jae
push
fs
cs
cmpl
mov
dec
push
dec
inc
loope
adc
sub
xor
dec
out
xchg
sbb
push
movsb
mov
and
or
xchg
je
push
lcall
push
movb
pop
aam
mov
fcomps
aaa
xchg
rclb
iret
xchg
mov
ret
pop
mov
mov
mov
enter
nop
push
fcmovbe
or
iret
xlat
aaa
int
dec
cmpsb
shrl
fidivrl
les
test
dec
push
jo
fsts
rcrl
dec
push
pop
adc
ficoms
test
addr16
xor
test
mov
jns
xlat
xor
or
lock
popf
inc
inc
inc
int
inc
mov
mov
xchg
rcr
jno
loope
subb
and
pusha
pusha
or
sub
sub
push
imul
imul
imul
fldcw
adc
scas
dec
mov
stos
gs
mov
mov
push
int3
int
adc
pusha
ljmp
dec
loopne
pop
outsb
pop
pop
imul
imul
in
mov
scas
mov
popa
int
and
mov
leave
mov
cmp
xlat
into
das
push
out
xor
sar
and
lret
push
push
ficoms
in
or
imul
xchg
mov
int
js
pop
adc
mov
mov
shll
fwait
or
inc
cmpb
scas
pop
movsl
mov
xor
lods
inc
int3
push
xchg
bound
cmc
jne
insb
inc
dec
rcrl
scas
adc
push
ja
adc
mov
push
push
jno
in
sbb
xchg
push
shlb
pop
pop
lret
mov
pop
xor
cltd
int
xchg
mov
and
stc
rolb
cmpb
cmp
pop
dec
adc
in
pop
pop
jno
mov
es
adc
pop
xchg
shlb
mov
mov
add
ret
mov
fiadds
enter
dec
xor
out
mov
nop
rorl
mov
xchg
fmuls
and
dec
int
jp
xchg
mov
adc
push
stos
push
sbbl
outsl
ret
loop
mov
inc
das
jne
imul
lods
sbb
ficomps
dec
push
mov
test
cld
jp
jns
dec
loope
push
gs
mov
push
push
scas
sbb
adc
push
push
adc
jecxz
pop
xor
mov
push
outsb
imul
fsts
add
mov
mov
dec
mov
xchg
sbb
pop
mov
inc
cmc
mov
xchg
cwtl
scas
lea
pop
js
mov
fstpl
pop
mov
rorb
xor
xor
rol
dec
imul
inc
arpl
and
js
cmp
fnstsw
iret
idivl
lock
add
push
cmp
fs
data16
dec
int
sub
repnz
adc
pop
cmp
rclb
mov
icebp
push
scas
pandn
ret
lcall
test
dec
bound
push
dec
jno
push
imul
lds
out
xor
xchg
ja
mov
stos
jge
mov
pop
inc
adc
xor
sub
mov
shll
stos
je
or
xchg
xchg
push
pop
scas
dec
push
dec
pop
lcall
push
dec
push
insb
pmullw
mov
cmpsl
lahf
js
mov
out
xchg
sub
mov
icebp
fisubrs
pop
outsb
fs
aad
lds
xor
lret
out
and
sahf
aad
lret
aad
push
into
pop
in
sub
add
inc
dec
and
dec
push
int
adc
pop
pop
adc
and
mov
repz
dec
xor
push
jns
lods
cmp
add
lahf
popf
xchg
gs
subb
inc
repz
shrl
shrb
mov
sub
jp
pop
lods
cwtl
adc
cmp
cltd
or
mov
test
mov
cmp
ror
ljmp
xor
push
pop
cs
insb
jl
pop
jge
lret
jbe
sbb
nop
pop
test
ds
pop
outsl
or
outsl
cmp
push
push
mov
xorl
ret
lds
gs
push
push
fdiv
add
int
int3
pop
push
xor
dec
pop
jbe
mov
fidivs
adc
stos
xor
mov
push
push
sti
push
mov
push
jb
std
imulb
ret
add
mov
fstpl
subb
hlt
sbb
mov
sub
lock
jp
jle
gs
sub
or
cmp
jmp
xchg
sbb
inc
adc
inc
arpl
xchg
mov
test
sub
sti
rclb
xor
pushf
cltd
cmp
aad
adc
mov
push
data16
xor
fdivp
xchg
sarl
bound
xchg
int
iret
sti
sub
stc
sub
ret
xlat
fsubr
cmpsl
mov
inc
or
sub
and
or
bound
mov
into
xchg
push
cmpl
cltd
pop
jo
jae
inc
and
xchg
movsb
inc
aas
bnd
nop
push
je
outsb
and
sahf
das
add
jno
or
je
dec
out
rcll
cmp
bound
stc
bound
dec
mov
xchg
sbbl
dec
push
pop
sti
lcall
stos
add
mov
lcall
pop
xor
test
adc
mov
loope
and
or
inc
jge
fs
sbb
loopne
gs
inc
loopne
pop
pop
popf
push
clc
fiaddl
mov
test
xor
in
sbb
movsb
pusha
sub
sbb
mov
iret
pop
dec
ror
stos
int
movsl
lcall
xchg
and
lret
in
pop
dec
sarb
in
inc
in
stos
aad
xchg
daa
inc
stos
bound
lods
dec
push
andb
cmp
push
imul
push
bound
sub
jge
dec
push
cmpsl
sub
push
jae
imul
dec
dec
subl
pop
jg
outsb
and
or
or
sub
inc
js
dec
jo
popf
mov
sub
sub
jnp
pop
imull
loop
jne
lahf
test
iret
pop
sub
and
dec
aad
pop
or
setp
cli
and
adcl
dec
test
mov
jp
sbb
jecxz
dec
rorl
dec
push
xor
adc
lret
sbb
ror
or
adc
decb
mov
repz
lea
push
imul
cld
inc
xor
ss
scas
push
mov
add
es
aas
stos
outsb
and
jno
adc
jno
sub
pop
outsb
push
mov
cmpxchg
das
outsb
pop
ds
xor
insb
mov
pop
cltd
cmpsl
or
int
into
jle
sub
or
shlb
dec
cwtl
push
pop
adc
lds
xchg
icebp
mov
pop
les
call
xchg
lret
icebp
jb
sbb
xabort
mov
popf
adc
fucomi
pop
inc
adc
dec
xor
and
mov
cmp
stos
xor
nop
inc
inc
inc
cmp
fucomip
movsl
ret
or
in
jmp
push
imul
mov
fists
mov
lret
push
dec
rclb
loopne
cmp
loop
fldlg2
ds
or
stos
push
shlb
pushf
jo
mov
lahf
sbb
push
test
and
in
data16
cmp
jge
insb
xchg
je
push
cltd
add
xor
mov
and
nop
jl
xchg
sub
leave
cmp
mov
rcrl
cwtl
imul
pop
imul
mov
movsl
xor
lret
pop
xchg
ret
nop
xor
add
cmpsb
xchg
lcall
push
test
xchg
lahf
sbb
fldcw
dec
xorb
inc
mov
sub
lcall
inc
mov
imul
push
push
jno
enter
sbb
xlat
fldl
fxch
mov
ret
fsub
in
jns
cmc
add
enter
mov
test
xchg
ljmp
dec
jne
pop
into
sub
and
jb
es
add
dec
ja
test
xorb
outsl
jle
imul
ds
je
ret
shrl
pop
fldenv
clc
add
pop
add
stos
pushf
mov
mov
and
notl
cmc
aad
push
mov
sbb
movsb
push
std
mov
icebp
pop
sbb
fistl
test
les
push
testb
pop
ss
adc
sub
ljmp
cmp
sbb
mov
fisttps
jno
sub
mov
icebp
dec
push
mov
ljmp
and
ret
leave
les
jp
repz
int
add
loope
shl
xlat
ja
lcall
call
lds
test
and
mov
int
push
jge
jl
out
and
push
push
xor
mov
call
jge
pop
push
popa
or
loope
outsb
ficompl
mov
call
outsl
jge
sub
inc
js
pushf
insl
and
lock
stos
ja
cmp
dec
out
pop
xor
and
bound
cmp
jmp
push
sub
mov
les
aam
inc
push
enter
movsl
or
aad
outsb
xchg
movb
adcl
rclb
or
inc
xchg
fstl
push
sbb
stos
test
loope
jno
adc
xchg
hlt
icebp
arpl
sub
push
jecxz
scas
dec
test
cmp
lret
lods
mov
lods
scas
mov
mov
bound
rorl
sbb
mov
je
jmp
sarb
ljmp
xchg
test
or
jae
pop
pop
xor
cmp
add
and
dec
data16
and
dec
insl
push
outsl
jnp
pusha
imul
arpl
je
jg
xchg
jb
mov
push
inc
inc
in
or
push
les
push
gs
ja
jnp
mov
js
stos
imul
dec
int
pop
js
aam
stos
test
mov
outsl
and
jae
dec
push
push
xchg
and
lret
clc
into
stos
outsb
jo
stos
inc
adc
push
jmp
dec
lret
fidivrl
sbb
lret
pop
and
aas
mov
xchg
stos
int
xor
pop
adcl
mov
cmp
outsb
sbb
mov
jge
and
push
mov
mov
push
lods
jno
add
aam
aad
loop
sub
jae
fdivrs
dec
rcl
mov
push
inc
lock
sbb
scas
inc
stc
jb
shll
mov
cmp
popa
outsb
push
inc
push
dec
sub
aaa
cs
cmp
pusha
dec
bound
loopne
xchg
lea
pop
pop
imul
mov
es
scas
out
rorb
mov
xor
cmp
fdivrs
push
inc
loope
and
mov
xor
jge
or
or
gs
mov
imul
and
inc
lods
inc
mov
or
dec
adc
dec
in
sub
stos
mov
jp
inc
daa
fadds
loope
cmp
inc
mov
pop
ds
cmp
mov
cltd
mov
repnz
ret
sub
or
movsb
and
jecxz
in
or
ror
add
faddl
fnstsw
pop
insl
pop
or
or
xchg
dec
js
popf
mov
push
cmp
lods
jnp
ret
repnz
mov
arpl
pop
mov
cmp
add
jnp
addr16
daa
cmp
push
ds
cmc
xor
insb
lea
test
loop
gs
daa
int
jno
push
imul
xchg
ret
and
pop
rcll
inc
loope
movsb
jmp
lods
mov
movsb
lret
ret
or
pop
das
push
andb
xor
add
pop
lock
mov
jecxz
xor
mov
mov
xchg
stos
bound
jecxz
push
push
cmp
push
movsl
lcall
test
gs
daa
sub
pop
or
mov
xlat
mov
cltd
mov
test
shrb
outsl
xor
pop
cwtl
jmp
fwait
mov
les
cmp
in
xlat
leave
fidivl
fistpl
in
xchg
jmp
sti
sahf
sbb
jae
out
sbb
in
and
lock
repz
push
popf
inc
repz
jae
lcall
sarb
mov
pop
pusha
mov
ja
push
addb
outsl
incb
cmp
test
mov
js
adc
push
mov
testl
lret
shll
ja
jp
jnp
int
jle
jno
push
or
mov
adc
outsb
push
add
loope
cmp
jmp
sbb
jo
xor
xchg
stos
push
lret
jl
sbbb
push
xor
rcrb
std
push
lret
scas
xchg
mov
ret
out
pop
xor
xchg
fnstcw
insl
or
sub
xchg
mov
and
lret
cmp
adc
rcrl
and
pop
fs
pop
shlb
jno
or
nop
cwtl
adc
xlat
fstp
mov
fcmovnu
cmp
fidivrs
out
push
int
xchg
sahf
jo
iret
rorb
leave
fdivs
push
rolb
or
loope
andb
js
or
bnd
imul
sub
inc
rorl
arpl
pop
mov
orl
or
push
sbb
jl
mov
or
jb
xchg
mov
inc
repz
sub
mov
dec
dec
mov
test
sbb
stos
push
dec
shrl
in
popa
stos
lock
push
xor
loop
adc
sahf
stos
xchg
and
xchg
xchg
mov
int3
sub
cmp
stos
pop
popf
or
xchg
push
or
xchg
cmpsl
jecxz
dec
or
shlb
jb
mov
loop
test
outsb
shlb
pop
dec
shrl
mov
xlat
icebp
or
adc
mov
adc
shl
rcrl
dec
ret
push
push
imul
adc
aad
aam
repz
pop
xchg
add
test
je
xchg
roll
push
jo
bound
add
call
push
repnz
faddl
dec
inc
pop
pop
out
mov
stos
or
or
cmp
scas
xor
aam
mov
jl
js
push
jbe
push
addb
aas
dec
out
fcoms
mov
sbbl
push
mov
imul
sbb
jp
pop
lea
jb
fs
nop
xchg
jo
xchg
mov
test
push
stos
xlat
push
mov
pop
mov
xchg
rcll
orb
lahf
out
xchg
or
inc
pop
rcrl
sbb
filds
nop
sub
les
out
mov
xchg
mov
test
leave
rcr
push
aad
mov
mov
shl
cmp
out
in
out
loope
sbb
call
fsubrp
xchg
lods
fs
call
ret
mov
outsb
cld
xchg
dec
pop
test
sub
push
pop
imul
jp
jnp
pop
adcl
mov
addr16
pop
dec
push
sub
and
sub
mov
ret
sbb
jp
std
xchg
jb
mov
or
js
lcall
or
cmpsb
push
dec
lret
test
movsl
jno
stos
gs
jo
pop
mov
push
push
push
cmpsb
bound
cmpsl
or
xchg
ja
inc
stos
dec
aaa
push
inc
adc
jmp
imul
and
mov
lds
ss
jne
into
sub
dec
fsubrl
cmc
mov
jl
pop
mov
lods
adc
mov
aas
ret
movsb
cmp
rorb
stos
push
in
loop
pop
imul
xlat
sbbb
mov
xchg
cld
and
adc
jb
jp
adc
jb
jp
jae
jns
insb
imul
outsb
push
data16
mov
jnp
push
xchg
nop
orb
add
jbe
dec
xchg
or
mov
mov
and
jp
dec
jge
push
push
pop
add
jp
mov
addr16
ds
mov
xor
dec
xchg
pop
mov
or
sub
push
insb
jecxz
pop
or
xor
dec
lea
outsb
pop
pushf
jo
cmp
mov
stos
adc
imul
push
test
jl
mov
mov
xlat
adc
and
lret
sub
mov
mov
ds
mov
ror
mov
ret
mov
out
or
addr16
push
in
pop
xor
jo
fldenv
xor
lret
sbb
pop
xchg
stos
mov
mov
andb
dec
jno
mov
xorb
xchg
insb
pop
fwait
jbe
outsl
add
and
insl
push
xchg
sbb
test
test
inc
jl
mov
jp
jg
push
xchg
gs
push
dec
sub
ret
pop
sub
mov
ret
fmull
adc
push
xor
pop
push
inc
xchg
mov
lods
bound
xchg
mov
and
in
lahf
out
mov
daa
rol
fdivl
scas
xor
mov
pop
xor
push
xor
cmp
pop
loopne
lret
cmp
outsl
jp
and
test
rcl
add
fcmovnb
sbb
push
sbb
int3
lret
sub
add
fsubr
cmc
out
cs
inc
cmp
std
cmc
cmp
in
dec
rorb
fsubp
fiaddl
sub
mov
sub
cld
cmp
sub
or
stc
inc
movsl
ret
fisubl
pusha
clc
xorl
je
test
orb
lea
js
sub
xchg
adc
mov
nop
adc
stos
mov
mov
ja
jb
push
mov
test
mov
mov
inc
sbb
and
dec
dec
adc
push
fisttps
or
movsl
push
jle
imul
sbb
sahf
mov
xchg
pushf
lcall
pop
mov
mov
pop
push
frstor
scas
movsl
popf
in
pop
data16
jb
sbb
add
push
and
lods
push
negl
movb
das
into
mov
xor
je
outsl
add
leave
aam
rorb
adc
call
aaa
in
aas
xlat
add
fxam
jecxz
out
fsub
in
fcomps
jno
es
xor
push
cltd
xor
mov
pop
push
lret
pop
push
pop
cmpsl
inc
jb
lahf
fcomps
dec
pop
mov
lea
in
ja
jnp
lahf
dec
and
push
sbb
xchg
pop
stos
mov
mov
pop
jno
test
jo
mov
cs
mov
insl
dec
les
js
rcll
scas
xor
jmp
nop
push
cs
inc
daa
jl
imul
pop
clc
add
cltd
loop
dec
pushf
aam
xor
mov
out
mov
stos
mov
mov
ret
adc
xchg
js
adc
sbb
push
push
jmp
dec
inc
pop
xchg
pop
adc
xchg
pop
dec
pop
sbb
jae
jno
int
rcl
lret
dec
fcomps
fsubrp
jmp
out
call
outsb
jb
jge
aad
pop
cmp
mov
cld
in
in
icebp
movl
and
mov
dec
push
test
push
fcoms
movsb
fsubrl
lods
out
mov
out
lock
pushf
xchg
push
lahf
test
push
xchg
jno
pop
fstl
test
sbb
subl
into
dec
pop
mov
push
mov
or
xor
lcall
xchg
lret
jno
sub
xchg
cmp
sub
stos
jp
inc
pop
adc
sub
dec
mov
pop
sbb
add
mov
cmp
pop
mov
jne
inc
out
xchg
lcall
out
lahf
add
cmpl
sbb
adc
pop
scas
or
mov
fistps
jb
xor
add
xchg
pop
xchg
loope
or
push
out
in
fucomp
jp
hlt
repz
icebp
jno
push
in
xchg
xlat
testl
into
iret
repnz
out
in
inc
outsb
jae
icebp
push
outsl
lret
cmp
pop
jp
xor
daa
and
les
xchg
lret
and
lret
inc
je
frstor
leave
das
cltd
cmp
pop
lods
cmpsl
int3
nop
mov
xchg
dec
mov
test
imul
jl
mov
xchg
adc
inc
lods
mov
push
clc
push
pop
ja
push
ja
fnstsw
lret
sbb
pop
test
lods
mov
or
cmp
push
int
xor
icebp
js
sbb
xchg
push
mov
push
lahf
or
mov
or
mov
negl
lods
notb
push
lcall
pop
add
jns
pop
bound
dec
popa
aad
add
or
mov
mov
xchg
push
gs
adc
shl
mov
adc
push
mov
bound
popf
mov
mov
in
cmp
cmc
lahf
imul
out
in
cmp
push
out
mov
aas
stos
xlat
loop
fisubs
shlb
jge
ret
mov
outsb
movsl
ljmp
xchg
fwait
or
jp
test
andb
lahf
lcall
imul
cltd
adc
loop
lret
xor
loope
push
pop
sub
xchg
mov
mov
stos
mov
xchg
pop
mov
push
or
sub
lods
das
scas
dec
and
push
rorl
int
push
sub
lods
or
daa
arpl
xchg
movsb
mov
loopne
mov
adc
mov
xchg
pop
pusha
and
mov
lcall
cvttps2pi
cmpsl
or
mov
rol
xchg
fists
test
mov
scas
inc
mov
mov
in
xchg
outsb
rorb
cwtl
mov
hlt
pop
gs
or
dec
mov
out
cli
jo
clc
jmp
xchg
pop
push
adc
inc
mov
sub
sub
scas
pusha
sbb
sub
sub
adc
or
or
outsl
mov
pop
mov
js
stc
adc
pusha
or
cwtl
std
sbb
pop
sub
add
xchg
push
xchg
push
int
and
or
ja
in
cmp
dec
pop
pop
push
popf
pop
or
xchg
xchg
icebp
test
pop
push
dec
lods
inc
xlat
pop
dec
adc
and
or
pop
dec
or
mov
mov
mov
icebp
adc
cmp
adc
cmp
or
pop
fistpl
mov
sbb
jle
cwtl
push
dec
push
test
fsts
push
notl
daa
adc
xorb
jge
xchg
inc
mov
mov
sbb
xor
mull
in
clc
cli
fdivr
jns
xor
sti
out
div
out
repz
ljmp
pop
popa
pop
xlat
xor
loope
sub
add
cld
lahf
dec
test
in
or
jecxz
imul
mov
jg
sub
push
jp
or
sub
mov
mov
stos
mov
pop
cmpsl
data16
xchg
push
jae
dec
and
test
addb
aam
test
mov
xor
mov
mov
mov
xchg
insl
mov
pop
pop
lcall
lret
addr16
or
mul
cmpsl
leave
xor
sbb
push
dec
cmp
lcall
sub
xchg
loop
fcomps
and
pop
jo
pop
pop
lea
xchg
mov
fildl
js
add
sub
pop
and
mov
push
cmpsb
imul
push
sbbl
pop
xchg
lcall
xchg
pop
out
jg
sbb
stc
call
jp
pop
js
cli
sub
fstl
mov
push
out
sti
mov
dec
push
addr16
sbb
int3
lods
inc
aam
lcall
test
sbb
cs
loop
push
adc
stos
je
inc
mov
les
push
adc
or
xchg
pushf
pop
xchg
xchg
mov
cltd
mov
xchg
pop
fwait
xchg
cmpsl
mov
pop
push
xchg
adc
pop
add
xor
cwtl
and
mov
jg
pushf
mov
fcoml
pop
mov
xor
add
pusha
xorl
ret
ss
push
adc
dec
int
outsb
jnp
leave
push
push
and
out
pop
and
aas
cmp
mov
and
push
adc
mov
pop
lcall
add
test
movsl
mov
sbb
jbe
movsb
mov
outsb
test
dec
lods
leave
outsb
push
xchg
rcl
and
xor
mov
sub
dec
adc
movsl
adc
add
sbbl
movsl
sub
mov
lock
in
lock
and
jbe
push
gs
notb
in
loope
fisubrl
hlt
inc
bound
icebp
leave
cld
lods
push
xor
sti
sahf
repz
cld
div
add
push
addr16
add
jo
test
insl
mov
mov
lods
insl
dec
icebp
push
jle
aam
pop
dec
shll
cwtl
xchg
cmp
or
xchg
xchg
lahf
cltd
shl
stos
push
daa
lcall
subb
inc
jno
es
and
cli
ljmp
insl
js
cmp
cmp
xor
xorl
and
inc
and
or
mov
mov
jl
xor
dec
cmp
cmpl
incl
jl
adc
push
test
pop
stos
adc
inc
jmp
xchg
sub
je
test
decb
insl
cmp
cltd
sub
mov
jno
pop
push
cmp
lock
mov
enter
adc
imul
mov
lods
rolb
push
imul
test
rcrb
xchg
sbb
gs
fistps
add
fcmovnu
in
stc
loop
push
mov
iret
lahf
fs
cmp
stc
dec
add
sbb
repnz
jle
aas
push
cmp
mov
jmp
imulb
addb
mov
repz
push
jae
test
stos
and
fadd
fldt
push
dec
outsb
mov
dec
lea
imul
push
pop
lds
push
ja
pop
adc
xchg
add
cltd
aam
mov
scas
test
adc
add
push
push
xor
aaa
and
cs
xor
idivb
test
shrl
xlat
add
inc
test
roll
fdivr
inc
push
pop
and
inc
push
imul
pop
or
cs
add
sub
subl
fsts
xor
pop
cld
sub
ret
mov
cmp
dec
adc
in
push
mov
lahf
testb
pop
loopne
sub
ds
cmp
sub
pop
pop
mov
mov
dec
or
js
pop
in
es
in
loop
jno
cmp
call
dec
pop
push
pop
or
lock
imul
pop
div
in
add
ja
pop
sbb
pop
dec
pop
imul
aad
adc
adcb
adc
xchg
mov
jle
test
cmpsl
mov
lahf
and
dec
and
int
add
aaa
pushf
xor
cmpsl
or
inc
push
xorb
insl
push
dec
aaa
cmp
jb
dec
scas
mov
mov
test
pop
popa
dec
dec
inc
lock
popa
rclb
loope
and
mov
es
das
xor
add
cmpxchg
hlt
or
adc
sbb
sub
dec
int
adc
dec
loop
inc
mov
mov
pop
test
aaa
cmp
scas
bound
push
xchg
pushf
fwait
lods
mov
daa
sub
fwait
sub
addr16
nop
cmc
nop
and
inc
push
cmc
fucomip
cmpl
push
pop
inc
idiv
xchg
push
enter
jnp
mov
addr16
out
arpl
in
iret
mov
jg
jo
jp
pop
arpl
push
dec
or
outsl
orb
das
and
mov
or
jmp
or
dec
sahf
and
mov
xor
and
xor
sbb
imul
int
movsl
mov
mov
aam
mov
push
push
push
dec
inc
ds
lds
push
mov
pop
lret
int
inc
dec
inc
pop
mov
dec
je
les
pop
push
pop
les
fwait
sbb
rcrl
mov
arpl
adc
and
xor
call
or
pop
jns
fldenv
mov
jo
add
dec
pop
fs
cmpsl
scas
sbb
movsb
stos
movsl
bound
movsb
inc
jno
mov
roll
mov
aam
inc
xchg
subb
rcr
loopne
inc
ret
mov
push
out
imul
sbb
insl
pop
adc
rclb
push
shlb
jmp
jp
xorb
push
jb
push
push
js
push
addl
and
stos
push
or
push
cmp
pop
push
push
mov
sub
and
push
lea
lods
mov
lcall
bound
imul
xchg
xchg
dec
sub
repz
push
and
push
xchg
lcall
pop
jne
jp
lock
stos
adcl
pop
pop
push
pop
sbb
push
adc
je
fdivs
adc
sbb
mov
xor
and
lret
xchg
inc
stos
in
pop
jmp
mov
mov
add
inc
cmp
mov
xlat
cs
and
dec
sub
mov
gs
int3
cmp
pop
adc
test
pop
fmuls
adc
loope
or
push
push
data16
aad
jno
shl
and
js
xchg
out
xchg
cli
out
hlt
and
pop
xchg
out
pop
gs
ret
and
dec
jns
add
push
jo
xorl
out
mov
jns
rcrl
xchg
jmp
xchg
jb
pop
rorb
push
mov
mov
orb
stos
movsl
xor
xchg
dec
mov
cmp
mov
stos
scas
push
scas
mov
or
inc
jge,pt
imul
fisttpl
push
push
and
xchg
ret
mov
jge
sbb
lret
cltd
stos
imul
ret
adc
cli
leave
int
das
ss
pop
and
and
in
cmp
adc
test
dec
rolb
pop
dec
add
mov
popf
cltd
pop
pop
pop
xchg
stos
pop
xor
sbb
pop
insl
or
pop
adc
fistl
test
imul
xchg
adc
icebp
out
add
les
in
pop
push
inc
cmc
hlt
in
idivb
icebp
jmp
pop
jge
dec
mov
jns
nop
mov
and
or
arpl
pop
push
xchg
push
aaa
orb
dec
xchg
adc
pushf
test
icebp
jno
jecxz
push
mov
test
ds
dec
rcll
push
adc
pop
push
jp
bound
jno
mov
pop
outsb
int3
daa
mov
inc
insl
aaa
sarb
cmp
adc
jl
in
sub
pop
add
pop
sub
jl
and
ret
pop
push
aad
jp
shl
mov
add
xor
inc
or
or
inc
sub
and
push
mov
sahf
dec
movsb
mov
xchg
mov
mov
push
les
loop
push
aaa
xor
sub
sbb
std
sbb
jns
hlt
and
dec
cltd
add
out
cs
push
or
popa
jecxz
add
inc
addb
in
test
out
andl
std
std
loope
and
inc
bound
fldt
dec
mov
lock
jne
jae
test
mov
mov
push
dec
addb
lea
xorb
call
mov
add
arpl
xchg
sbb
mov
mov
xor
pop
icebp
ljmp
pop
je
dec
shrl
inc
sbb
pop
bound
mov
out
mov
sarl
adc
imul
int
pop
sahf
push
jae
or
push
add
add
dec
add
sub
and
jle
test
shlb
pop
pop
push
loopne
pop
cmp
imul
and
inc
sbb
sbbl
push
push
or
jp
popf
sbbb
lods
out
pop
movsb
mov
inc
bound
xchg
ljmp
xchg
popw
adc
xor
and
int
add
roll
pusha
pop
push
mov
mov
hlt
repnz
sti
adc
adc
imul
mov
or
divb
stc
pop
add
cld
sti
mov
or
hlt
pop
cs
lea
loopne,pt
mov
or
bound
fcoml
push
jns
mov
jae
jg
inc
jno
loope
clc
xchg
mov
fwait
sbb
popf
pop
push
xor
pop
and
loope
and
pop
pop
push
lret
xor
sahf
andb
aam
bound
add
push
pop
pop
xchg
lahf
dec
sahf
mov
outsl
xchg
popa
loope
pop
pusha
mov
adc
les
sub
pop
push
xor
inc
rolb
push
push
sub
add
add
push
push
ds
adc
rorb
shufps
call
movsl
nop
shrl
ja
cmc
imul
mov
cmp
fbld
pop
mov
call
mov
pop
loope
push
and
ljmp
loopne
lret
mov
into
add
sbb
push
jmp
pop
push
push
je
rclb
pop
pop
push
pushf
jns
xor
inc
loopne
push
addb
js
mov
mov
lcall
or
sbb
sbb
pop
and
dec
movsl
lcall
xchg
insl
dec
dec
pop
rclb
mov
or
ja
dec
push
push
dec
aaa
push
pusha
adc
xchg
cltd
mov
inc
push
test
or
das
mov
dec
mov
mov
and
dec
jb
popf
fnstenv
add
add
adc
das
loopne
push
daa
and
je
sub
adc
add
mov
movsb
test
xor
rcl
ret
add
or
rcrb
shr
push
push
cmp
cmpsl
mov
adc
in
jmp
out
cmp
daa
int3
mov
push
mov
lock
addl
xchg
mov
imul
xor
pop
imul
rcr
xchg
test
jb
cwtl
test
pushf
fdivrs
cmpsb
jbe
xchg
xchg
push
loope
test
lods
and
cmp
xchg
xor
addr16
xchg
hlt
xchg
rcrl
mov
orl
inc
sbb
mov
mov
adc
lret
fwait
das
mov
bound
jle
fstps
fimuls
daa
sub
and
add
add
or
adc
cmp
or
adc
and
or
cmpl
mov
rcrl
jo
push
mov
fldt
sub
pushf
or
mov
push
imul
je
pusha
pop
push
push
iret
add
aam
fucomp
cli
clc
xor
addr16
mov
popa
lock
cli
aaa
shrb
add
imul
sbbb
jge
pop
outsl
jo
addb
pop
jle
imul
xor
inc
push
push
imul
push
mov
xchg
mov
push
xchg
mov
scas
insl
sub
mov
int
dec
or
ss
aad
xchg
pop
xor
mov
mov
pushf
xchg
xchg
push
pop
pop
mov
in
or
test
inc
lcall
adc
dec
dec
pop
scas
mov
nop
fimuls
pop
test
scas
es
dec
lret
xor
nop
nop
xchg
dec
pop
cli
jns
or
or
push
out
jp
push
mov
dec
pop
mov
xor
add
pop
std
pop
push
ds
es
xchg
rolb
popa
imul
lret
imul
pop
arpl
xor
imul
push
imul
jne
mov
jo
push
addr16
xor
add
dec
dec
inc
push
pop
and
push
push
aas
add
outsb
stos
add
nop
cmp
movsl
lcall
sub
int
adc
xchg
fs
xchg
xchg
int
xorb
xor
bound
or
in
mov
insb
dec
lret
xchg
ds
inc
sub
xor
scas
sahf
in
das
or
negb
popa
mov
cmp
dec
repz
dec
lds
loope
outsb
adc
rcr
dec
lds
imul
xor
add
add
pop
nop
imul
pop
imul
rorb
mov
rorb
iret
not
sub
pop
pusha
in
inc
pushf
ja
je
test
fxch
or
push
js
jns
sbb
scas
lods
cmpl
lcall
sbb
cmp
test
repnz
pop
jb
inc
push
pop
push
sub
and
imul
jg
or
xor
aaa
das
inc
inc
pop
outsl
mov
addl
jg
add
pushf
stos
jg
aad
stos
lods
pushw
sahf
mov
mov
call
inc
movsb
in
mov
xor
adc
in
gs
or
jnp
sahf
jae
dec
clc
adc
dec
dec
popa
dec
mov
test
loope
sub
dec
xorb
dec
pop
iret
imul
mov
xor
adc
or
cmp
dec
adc
pop
add
js
lahf
or
fdivrs
pop
mov
mov
push
pop
mov
xor
mov
imul
mov
push
jmp
push
xor
ds
rorl
jo
lret
movsb
pop
sar
pop
ds
imul
inc
add
inc
dec
push
imul
and
xor
loope
dec
ljmp
ja
je
jl
inc
cmpb
xor
push
inc
xchg
xor
push
xchg
adcb
mov
xor
js
jge
jmp
scas
mov
inc
icebp
shll
or
into
enter
mov
test
mov
data16
insb
jns
mov
stos
stos
adc
pop
andb
addr16
inc
inc
xchg
aad
dec
insb
cmp
insb
jb
test
cmp
sub
push
and
fs
cmp
cmp
test
dec
cld
fstps
inc
dec
fnstcw
pop
clc
dec
xor
sub
cmp
adc
les
sbb
lahf
ss
sbb
lds
leave
aam
mov
add
push
push
das
xor
lock
cmp
sub
xor
lds
cmc
jl
or
mov
std
jae
in
cmp
negl
cli
sbb
out
mul
mov
or
in
jo
jl
sub
hlt
or
ljmp
mov
outsl
mov
loopne
xor
inc
and
cmp
sbb
push
push
mov
inc
imul
dec
jnp
push
jae
jg
or
movsl
dec
lahf
les
imul
mov
and
mov
adc
mov
pushf
add
ror
ror
mov
sahf
jns
pop
cmpsl
rorb
sahf
cmpsb
mov
jb
add
sub
cs
dec
adc
mov
imul
lock
lcall
push
push
mov
imul
mov
push
or
mov
push
and
adc
push
xor
inc
iret
enter
int
xlat
fimuls
push
cmp
cmp
cmp
add
mov
mov
inc
movsl
loope
dec
nop
add
call
leave
ror
add
loope
popf
test
mov
aad
aas
or
push
xchg
imul
imul
inc
lahf
mov
and
jo
inc
inc
adc
add
or
das
addb
push
cmp
jne
ds
jae
jae
js
mov
lods
cmp
push
les
les
lcall
xchg
lea
nop
shrl
sahf
lods
cmpsb
inc
lret
test
into
fcom
test
mov
subb
mov
mov
add
cmp
inc
adc
or
sbb
and
push
adcl
in
cld
dec
rorb
jne
xor
scas
xor
cli
test
mov
push
aad
push
jbe
sub
jo
mov
xchg
add
add
fcmovbe
push
jb
pop
imul
das
sbb
pop
loop
enter
sub
xchg
adc
push
or
lret
rcl
call
mov
mov
loope
out
rcl
clc
mov
sar
dec
push
lock
mov
push
add
mov
cmp
cmp
clc
and
sbbl
jecxz
mov
ss
add
jge
cmpsl
mov
fwait
mov
mov
xor
push
push
push
mov
xchg
xor
cwtl
ljmp
mov
xchg
stos
gs
js
dec
jl
fmuls
add
popf
movsl
sub
cwtl
lahf
cmp
mov
mov
stos
pop
dec
lret
add
sub
sub
push
lock
daa
or
fcoms
pop
outsb
xor
or
push
sub
adc
outsl
icebp
fnstsw
int3
add
sub
je
fsubp
fdivr
add
pop
fisttps
jmp
inc
lock
cmp
mov
jnp
sub
add
dec
dec
fdivrp
fimull
push
xchg
faddl
lock
clc
xchg
cmc
std
dec
sub
xchg
hlt
loop
inc
sar
mov
add
xchg
lahf
sahf
jns
xchg
mov
jbe
or
xor
adcb
inc
dec
adc
xor
aad
mov
aaa
add
mov
pop
push
popf
mov
cmpsl
or
sub
lock
scas
test
push
mov
cmp
mov
xlat
cmp
add
sarl
daa
pop
out
gs
rol
pop
je
js
idiv
mov
scas
movsl
lods
clc
int
cmpsl
rorb
add
test
loope
sub
or
dec
push
aad
cmp
hlt
pop
and
mov
xchg
bound
push
or
xchg
or
idivl
cld
sbb
outsl
je
das
jbe
cmpsb
stc
daa
mov
shll
add
or
bound
push
xchg
push
inc
add
and
dec
and
adc
and
push
inc
and
pop
pop
loop
daa
ds
add
in
xor
mov
mov
addr16
cltd
shrb
dec
repnz
cld
inc
push
mov
mov
xorb
add
adc
and
daa
popa
sub
push
xor
dec
pusha
dec
dec
push
data16
pop
push
insl
imul
test
popa
and
gs
mov
dec
mov
or
mov
sbbb
mov
ss
rcrb
adc
movsb
lods
sbb
rcr
pop
stos
mulb
loopne
mov
cmp
xor
pop
lds
lds
out
test
xchg
pop
les
jne
ds
dec
pop
or
push
mov
pop
or
fisttpll
adc
scas
ja
inc
pop
aad
push
jbe
cs
daa
or
sub
out
mov
call
enter
fwait
cld
pop
dec
sbb
data16
push
ljmp
jno
add
mov
in
div
out
sti
stc
xchg
add
faddl
stos
pop
xchg
push
adc
add
fwait
jbe
ljmp
push
pop
or
sub
dec
and
xchg
push
aas
enter
outsb
arpl
dec
rorb
add
pushf
scas
pop
cmpsl
sub
adc
or
ret
mov
test
push
punpckhbw
mov
mov
int3
leave
push
xor
and
jg
aas
mov
and
popa
add
fistpl
leave
pop
xlat
inc
add
dec
push
int
cmp
dec
lds
mov
mov
sub
push
movsl
bound
cli
sbb
and
push
aas
sbb
xor
paddd
mov
sbb
imul
lock
add
inc
and
incl
jge
pop
jnp
and
xchg
push
lock
lds
bound
mov
lcall
push
pop
dec
gs
hlt
cld
out
xchg
cli
jmp
icebp
out
pop
mov
mov
nop
roll
mov
xchg
popl
pushf
sahf
test
xchg
add
push
push
aam
inc
imul
ss
add
jle
mov
nop
outsb
xchg
lods
test
cs
push
orl
lret
repz
rclb
ss
scas
mov
dec
mov
or
add
sarl
rolb
rol
iret
lret
mov
fcmovnbe
cli
add
rcr
addb
fucom
or
lret
add
jae
cmp
movsl
imul
popa
icebp
cmp
dec
aas
jno
cmp
xorb
ret
and
movsb
ljmp
or
loop
jo
mov
stos
pop
std
inc
dec
ficomps
pop
sub
xchg
cmp
push
xor
mov
add
mov
add
in
mov
dec
pop
out
mul
push
lods
pop
mov
pop
cmpsb
sub
imul
pusha
pop
ret
leave
adc
lock
jmp
clc
dec
mov
or
adc
pop
mov
mov
jle
inc
test
mov
xchg
movsl
movsb
lcall
dec
push
pop
dec
and
cwtl
int
pop
je
jno
add
inc
popa
jbe
cltd
and
xchg
add
xchg
movsb
xor
mov
shrl
and
mov
ret
mov
adc
mov
nop
jno
mov
mov
aaa
into
int3
or
enter
xchg
mov
cmp
int3
mov
mov
mov
xlat
aam
xor
lret
scas
mov
inc
dec
mov
scas
testb
jl
dec
cmp
fiaddl
aam
add
or
adcb
notb
add
pop
daa
jno
outsb
mov
cli
popa
xchg
or
cmovp
aad
xchg
mov
ds
and
cmpsl
movl
jmp
xchg
add
sub
cs
jno
adc
adc
and
xor
add
cmp
int3
lret
in
mov
dec
pop
rorb
shlb
pop
adc
inc
ja
add
inc
push
add
stc
lods
sbb
mov
mov
push
push
and
xor
pusha
cmovo
ds
jb
pop
jle
movsb
subl
cmpsb
call
adc
aam
sbb
mov
into
jo
adc
pop
stos
pop
sub
mov
shlb
lods
stos
pop
ds
aam
shlb
shll
fidivrs
adc
pop
add
jecxz
mov
stos
jge
sbb
jnp
loop
jno
xor
add
mov
dec
adc
gs
rol
or
bound
jo
xchg
stc
das
jl
and
mov
push
imul
add
and
or
adc
and
data16
jle
pop
fimull
add
out
in
iret
imul
popf
adc
and
or
adc
and
inc
inc
jg
leave
jg
xchg
rorb
xor
icebp
lods
add
push
push
cmpsb
mov
stos
sarl
outsl
jo
cmp
xorb
pop
inc
push
daa
push
bound
lcall
test
ret
cmpsl
mov
mov
xchg
push
inc
push
xor
lcall
in
push
inc
inc
mov
mov
movsb
rolb
loop
stos
push
imul
iret
dec
fmul
adc
loop
fists
clc
push
push
imul
test
adc
outsb
jp
imul
or
dec
mov
cmp
test
mov
and
in
daa
jecxz
cs
sub
dec
push
add
cli
ret
loop
ficomps
xchg
add
daa
sbbl
test
sbb
fucom
in
call
roll
xor
xor
sub
sub
fisttpll
lods
mov
js
das
cmc
hlt
inc
dec
mov
xchg
push
push
lcall
hlt
sbb
pop
xchg
mov
cltd
inc
mov
add
cmp
xor
ret
pop
dec
bound
add
add
scas
stos
lahf
mov
inc
add
jo
test
imul
push
das
xchg
xchg
fs
rclb
les
cmp
lock
pop
pop
test
stos
popa
sahf
stos
pop
push
sbb
jge
ja
add
inc
in
roll
mov
mov
popf
jae
cmp
cmp
pushf
aas
dec
push
sub
je
enter
or
mov
sbb
stc
or
sbb
sub
sbb
das
cltd
inc
add
pop
clc
adc
cmp
ret
cmp
xchg
hlt
repnz
and
aam
sub
js
lcall
xchg
sbb
leave
ret
leave
inc
nop
cmc
ljmp
push
imull
push
sub
add
cmc
push
dec
out
stos
push
jno
cwtl
lret
add
shlb
addb
mov
add
inc
test
add
adcb
add
mov
std
ror
fisttpll
pop
imul
pop
cld
or
movsb
lret
aad
mov
push
imul
mov
adc
shrb
or
popa
aad
je
sahf
xor
mov
clc
lods
mov
cmp
pushf
push
arpl
mov
mov
mov
movsb
das
xor
ss
and
and
xlat
mov
stos
ja
jb
add
or
lds
sub
adc
pop
hlt
sbb
in
jmp
or
sarb
sub
es
jno
icebp
push
mov
ret
shl
jmp
push
repnz
add
out
mov
mov
shll
dec
int
mov
xchg
je
cwtl
test
dec
pop
dec
bound
push
xchg
add
cmpsb
mov
shlb
fistpll
xchg
aam
rorb
and
lods
and
imul
xchg
stos
adc
pop
stos
push
jp
xor
ds
mov
in
fwait
xchg
push
popf
pushf
mov
lret
subb
popa
mov
and
mov
cmp
inc
mov
or
into
outsb
into
ja
sub
inc
sarl
cmp
inc
enter
pop
dec
mov
xchg
adc
sub
adc
lock
inc
push
xchg
xchg
xchg
lret
adc
pop
dec
int
sub
inc
clc
out
sub
icebp
sbb
jae
xchg
or
gs
cmpsl
loope
icebp
lock
mov
pop
dec
mov
pop
xchg
movsb
movsl
nop
test
inc
arpl
sub
lahf
ja
orb
push
fs
or
adcl
int3
loopne
shl
sub
inc
push
and
jmp
lret
or
ret
les
mov
push
pop
pop
and
xchg
nop
ror
xchg
pop
aad
push
and
mov
mov
pushf
test
push
pusha
adc
je
pop
shrb
pop
xor
cmp
adc
lock
sub
and
inc
outsb
jl
mov
pop
call
push
imul
xchg
and
xor
in
sbb
fs
lret
adcl
xchg
mov
loop
test
stos
pop
rcrb
or
sub
xor
pop
cmp
mov
aam
adc
push
rorb
push
adc
sahf
cltd
scas
orb
movsl
pusha
jp
cmp
mov
js
jge
jne
add
mov
dec
leave
pusha
pop
rclb
jecxz
in
jmp
adc
les
inc
arpl
push
pop
push
mov
rcr
loopne
fcmovnbe
mov
ljmp
adcb
adc
ror
lds
cwtl
add
mov
mov
add
cmp
rorb
push
xor
lock
rcrl
cmp
dec
and
ret
std
daa
inc
pusha
aam
adc
adc
dec
ret
jbe
dec
push
inc
clc
pushf
cmp
scas
dec
enter
add
in
and
and
cmp
mov
fisubl
add
cmp
mov
push
gs
cmp
frstor
fcmove
inc
sub
dec
cmp
repz
jl
adc
mov
stos
clc
mov
insb
lods
adc
push
add
fwait
xchg
mov
xchg
mov
xchg
push
enter
adc
jecxz
pop
gs
ljmp
test
sarl
push
mov
rcll
push
nop
pop
shl
fadd
rol
jecxz
and
shll
bound
out
enter
fsubr
push
pop
jecxz
dec
shll
test
mov
sbb
sub
xor
les
and
sub
adc
xor
cmp
sbb
cmp
leave
or
push
cld
sub
pop
mov
cmp
mov
and
mov
pop
sub
movsl
mov
or
mov
ret
enter
and
sub
cvttps2pi
and
movsl
jle
dec
int
les
xchg
int
testb
sarl
imul
inc
popf
movsl
insb
cwtl
les
ret
or
mov
rcl
xor
or
mov
and
jmp
mov
mov
sarb
add
cmp
fs
cli
rcrb
ret
in
push
enter
cmc
sub
add
lods
sub
dec
rcrl
es
loop
add
and
pop
addr16
add
push
cmp
inc
repz
das
sbb
dec
and
cmp
cmp
std
xchg
mov
mov
add
test
pusha
lods
lea
mov
and
inc
sbb
xorl
das
adc
dec
addb
mov
pop
test
inc
mov
mov
sahf
fldt
cmp
or
dec
gs
outsl
jo
shrb
mov
inc
adc
shr
pop
cmpsl
mov
mov
adc
lcall
mov
mov
xchg
shlb
int3
ffree
add
fldt
in
cmp
mov
into
lret
or
shrl
pop
sarl
sti
stos
pop
push
pop
loop
mov
mov
stos
xchg
stos
mov
mov
das
cmp
daa
out
cli
sbb
addb
addl
push
add
pop
pop
pusha
ds
dec
pop
sbb
daa
sub
sbb
arpl
push
mov
lods
inc
pop
les
or
push
adc
int
rclb
or
js
mov
pop
pop
or
or
shlb
inc
jno
xchg
mov
cmp
mov
dec
and
mov
scas
mov
repz
sti
in
dec
stc
push
sbb
lret
jb
mov
xchg
mov
push
pinsrw
lds
fcom
mov
and
xbegin
mov
out
jmp
and
fcmovnu
jmp
mov
cmp
lcall
iret
mov
mov
pushf
stos
cmpsb
lods
mov
inc
in
inc
imul
add
fldt
push
daa
inc
mov
adc
loope
mov
xchg
lcall
or
pop
and
xor
data16
cmp
add
jecxz
mov
or
or
push
adc
adc
jae
dec
sub
jle
test
push
stos
inc
mov
push
and
rclb
sub
adc
or
cmp
cmp
mov
or
sti
stc
out
inc
mov
test
je
repz
sahf
push
les
inc
sbb
pop
lret
adc
fsubrs
dec
iret
push
push
push
es
outsb
lret
push
mov
lods
push
shrl
std
pop
les
or
mov
idivb
mov
pop
cmp
push
xchg
mov
insl
jno
xor
loopne
stos
mov
mov
std
add
cltd
movsl
cmpsb
lods
adc
pop
mov
lods
push
pop
arpl
imul
or
push
add
inc
inc
pop
pop
jecxz
loopne
push
or
xchg
pop
adc
xadd
test
jecxz
movsb
test
loopne
les
lds
mov
sub
imul
mov
imul
mov
jg
and
push
push
dec
sub
adc
mov
hlt
std
cld
dec
push
rclb
cmp
mov
inc
sbb
nop
push
nop
inc
std
xor
sbb
enter
aad
cs
sub
pop
dec
mov
fldpi
bound
test
fsubr
insl
ljmp
or
jns
sbb
dec
test
adcb
mov
popf
and
push
add
push
popa
pop
lods
mov
jo
aad
jno
shll
outsl
subb
rcl
mov
jb
dec
add
jae
jle
shrb
jb
outsb
dec
outsl
push
insl
lock
xor
add
xor
stos
lds
and
call
mov
lods
inc
mov
jno
daa
fcomp
jb
nop
scas
push
bound
dec
aaa
fs
jo
gs
bound
add
and
lds
push
mov
shrb
leave
mov
lret
pop
stos
mov
out
loope
fldl
adc
clc
rorb
push
gs
add
cli
popa
jae
enter
xor
in
out
out
aam
and
lock
out
inc
fucomi
sbb
mov
sub
in
inc
call
adc
cmpsl
pop
jo
adc
orb
mov
cmp
xor
push
pusha
dec
pop
lds
cli
pop
dec
test
xchg
pop
loope
jno
jp
cwtl
mov
lret
mov
push
add
dec
pop
sqrtpd
dec
or
push
adc
loopne
push
and
or
adc
adc
sbb
mov
adc
xor
or
jbe
mov
addr16
sbb
lret
sub
lcall
push
pop
pop
sub
add
sub
cld
and
fiadds
lock
dec
cli
or
or
xor
iret
scas
hlt
rorb
push
inc
fldln2
push
in
or
repnz
int3
leave
add
rol
fld1
sarb
out
jb
loopne
mov
xchg
dec
push
xor
or
pop
cmp
xlat
leave
outsb
or
cli
loopne
in
out
cmp
in
enter
fsubr
jecxz
lret
fcmovb
mov
out
xor
neg
jb
aam
push
inc
dec
adc
lds
cs
jno
jl
pop
jne
xor
adc
pop
icebp
repnz
pop
sbb
sub
add
pop
jo
jno
jg
push
cld
dec
popa
mov
or
sbb
repnz
jno
push
cmp
cmp
call
mov
push
outsb
push
cmpsl
mov
clc
sbb
movsl
xchg
mov
fdivrs
loop
add
fidivrs
fisttpl
loope
push
push
xchg
cli
xchg
sub
dec
shlb
mov
push
repz
sti
loopne
in
in
inc
cmc
stc
jae
push
push
jmp
add
sub
bound
es
shrl
dec
int
jp
call
in
les
fldl2t
xor
jmp
jno
fsubl
rclb
testb
fmull
jmp
shl
orl
or
or
xchg
dec
imul
repz
hlt
adcb
test
mov
push
mov
jbe
add
mov
call
push
mov
into
test
imul
mov
xchg
xchg
pushf
adc
lea
fldl
add
or
adc
xchg
or
xchg
lock
mov
or
hlt
pop
ds
sub
iret
aaa
clc
sub
pop
adc
daa
or
and
outsb
in
and
and
push
pop
xchg
outsl
xor
call
les
adc
dec
js
rclb
icebp
or
ja
out
repnz
mov
lahf
xchg
sub
dec
push
ret
les
into
in
loope
in
add
div
shlb
stos
pop
jb
bound
aam
ss
add
jmp
in
mov
push
movsb
rolb
call
rclb
fistl
imul
push
push
dec
popf
pop
loope
sub
data16
leave
or
addb
mov
xor
or
and
push
lret
add
mov
les
xchg
shll
rcll
adc
adc
shrl
add
loopne
bound
jl
mov
stos
xor
call
sub
dec
clc
addr16
mov
je
add
sub
imul
add
aaa
insb
inc
aad
fs
sarb
push
add
mov
orb
pop
jecxz
lock
dec
push
push
rorb
in
jo
mov
xor
imul
gs
mov
in
out
out
movaps
stos
out
call
adc
hlt
dec
scas
fisttpll
inc
xlat
push
mov
loop
int
ficomps
sbb
fcom
sub
jmp
xchg
int3
pop
sub
clc
in
les
inc
xchg
fsubrl
das
stos
je
movsb
cs
push
jno
mov
rolb
cmpb
movsl
cmp
dec
test
sbbl
add
add
push
and
movsb
shlb
mov
imul
and
mov
ja
sbb
adc
mov
je
sbb
enter
xor
imul
and
push
push
adc
dec
addr16
repnz
mov
aad
xchg
mov
sti
lret
repnz
cs
cmp
hlt
shl
ret
ret
adc
xlat
rcll
push
rolb
xchg
push
shrl
aam
out
bound
xchg
pop
xchg
mov
out
dec
out
pop
and
gs
stc
jae
es
and
pop
mov
fcoml
mov
out
movsb
rolb
jecxz
fnstsw
mov
jmp
xchg
fdecstp
jl
mov
push
pop
ljmp
stos
adc
insl
or
push
push
inc
and
movsl
ret
cmp
arpl
imul
mov
push
popa
les
loop
jno
xchg
test
ret
push
ret
inc
mov
aas
dec
les
add
and
and
and
sbb
add
sub
inc
and
int
sub
pop
pop
pop
cmp
xchg
sbb
lret
sbb
cmpsl
cmpsb
cld
lahf
sbb
lahf
adc
xchg
test
repnz
cli
sub
lds
loope
shll
leave
lret
int3
in
out
shr
xchg
call
imul
lahf
imul
icebp
hlt
lods
pop
sbb
rcll
pop
xchg
decl
ljmp
push
mov
jecxz
fistl
movsb
or
pop
pop
je
fcmovnb
rclb
cmpsl
das
mov
inc
bound
jns
lods
stos
cmp
inc
dec
sub
mov
adc
lds
lods
hlt
push
and
invlpg
add
add
vxorpd
mov
jo
pushf
dec
test
dec
push
pop
mov
aam
xor
jae
pop
add
or
jo
dec
cli
push
mov
dec
out
popf
ret
loopne
mov
test
jge
rcl
call
leave
or
loope
filds
iret
rol
jecxz
shll
xchg
sbb
push
repz
into
fsubrp
xor
and
repz
lcall
mov
adc
fistps
mov
xor
out
bound
popa
lea
mov
add
in
outsb
es
and
mov
nop
fldcw
add
shlb
cmp
or
arpl
outsb
sahf
test
js
test
adc
dec
inc
adc
sbb
dec
and
sbb
movntps
add
shll
sub
push
and
jge
sbb
cmp
loop
dec
shll
pop
clc
insl
xchg
sub
outsb
push
mov
or
je
test
fwait
pop
hlt
push
cmp
lock
sbb
mov
in
hlt
neg
scas
outsl
pop
clc
lret
jno
jmp
push
push
outsb
jns
add
xchg
pop
jmp
es
adc
add
mov
leave
fadds
fcmove
loopne
lret
lret
in
shll
xchg
int
shl
loop
nop
pop
cmp
in
fsubrl
and
jl
int
sub
popf
in
mov
cmp
pop
push
fcoml
outsb
and
es
int
jecxz
aad
cmp
xor
push
xorb
pop
mov
in
mov
fisttps
call
lahf
aas
xchg
call
xchg
xlat
orl
jecxz
mov
mov
mov
push
sbb
jge
inc
ffree
jb
cmp
jo
jae
in
add
push
pop
or
or
and
jno
icebp
adc
dec
push
adc
adc
adc
loope
jp
sbb
push
fldl
outsb
sub
ffreep
add
sbb
push
pop
cltd
jae
and
lcall
mov
clc
jno
xchg
dec
leave
push
mulb
mov
call
movsl
jmp
pop
xor
data16
adc
xlat
insl
push
and
lock
loop
rorb
mov
mov
lds
imul
out
mov
loop
addb
fucomp
out
or
aaa
loope
inc
dec
mov
repz
xchg
or
and
inc
or
imul
jp
dec
data16
push
stos
push
and
fildll
dec
sub
in
add
sub
dec
out
jp
adc
incl
dec
scas
mov
jge
fnstsw
add
and
sub
pop
push
arpl
sbb
push
sbb
js
dec
or
or
dec
push
jno
scas
jo
ja
jo
xor
fdivrl
mov
mov
ss
xor
or
lret
xchg
pop
xor
inc
out
mov
dec
in
dec
cmp
xor
repnz
out
in
pop
push
gs
xlat
jge
dec
in
or
js
movsl
bound
scas
data16
iret
loopne
iret
sarb
or
imul
fdivrp
loope
xchg
gs
aad
jae
fldenv
adc
pop
out
and
mov
adc
and
jnp
in
lretw
or
xchg
inc
push
sub
in
int
icebp
adc
push
int3
dec
imul
icebp
aam
in
je
dec
outsl
push
mov
cmp
pop
push
xchg
fidivs
outsb
jb
mov
mov
les
cs
pusha
cmpsb
dec
push
pop
sbb
add
mov
jno
lcall
rcrl
and
and
iret
mov
sub
int
pop
fisubs
and
loopne
pop
add
scas
sub
add
cmp
inc
pop
pop
inc
add
and
xor
cmp
lcall
sbb
inc
sub
dec
xchg
adcl
inc
and
fldl
nop
inc
loope
call
jne
push
and
in
jmp
xchg
fstpt
shlb
cs
das
add
pushf
pusha
mov
mov
int
xlat
push
aad
xor
bound
imul
sub
in
stos
jge
nop
stos
dec
xchg
icebp
aas
lds
mov
cmpsb
push
pop
es
or
sub
push
push
ljmp
sbb
stos
ja
test
jo
ret
dec
mov
jp
stos
pushf
mov
lea
bound
push
pusha
addr16
xchg
push
dec
ds
adc
inc
hlt
or
orb
adc
mov
xor
sbb
pop
test
mov
sub
sub
cmpsl
or
push
xchg
sbb
aad
loope
cmp
popf
jno
adc
mov
int3
mov
rcr
dec
fsts
mov
stos
mov
mov
xchg
push
ret
loopne
in
in
pop
ja
shr
out
loop
add
and
ret
loopne
ret
xchg
cmpsb
push
xchg
pop
cltd
mov
dec
dec
notb
fldl
sub
fmull
cmp
or
add
mov
xchg
popf
sbb
loopne
or
stos
pop
stos
gs
and
inc
in
push
push
imul
in
and
repz
gs
fdivl
fwait
shll
sub
mov
les
mov
push
push
mov
adc
jb
pop
push
push
cmp
test
dec
push
sbb
jmp
das
scas
xchg
and
movsl
fwait
push
dec
sbb
pop
test
cld
inc
push
imul
dec
sti
aaa
jecxz
mov
loop
fmuls
stos
pop
cld
bound
stos
mov
push
or
dec
push
push
idiv
loop
xlat
push
cld
jecxz
lret
pop
xchg
sub
pop
jg
xchg
rorb
loope
je
pop
sahf
out
cmc
push
cli
adc
fmull
sbb
into
loop
stc
pop
out
ficoml
mov
lds
push
les
mov
rcr
out
in
into
add
out
jmp
sti
inc
push
aam
out
mov
in
xor
test
cltd
movsl
pop
mov
and
mov
shll
and
aad
call
out
xchg
push
test
mov
into
mov
cmpsl
push
iret
hlt
out
cli
inc
in
dec
push
gs
xchg
imul
or
mov
xchg
xor
mov
add
inc
dec
push
inc
dec
push
ss
inc
inc
push
pop
daa
cmp
or
and
pushf
gs
push
nop
rcll
test
add
sbb
int3
pop
push
sub
outsb
scas
or
pushf
jae
jp
movsb
xor
fwait
add
je
sub
jno
and
je
adc
add
mov
push
pop
dec
pop
icebp
fsubrl
loopne
pop
and
jns
js
cltd
cwtl
push
mov
mov
cmp
iret
xlat
dec
into
lret
icebp
loop
jnp
push
int3
fcoms
out
sti
fisubs
cmp
rcrl
jecxz
xchg
cmpsl
or
mov
inc
cld
pop
or
loopne
daa
popa
test
mov
mov
sbb
sub
jle
pop
jbe
sub
loopne
push
nop
dec
add
sub
loopne
sbb
hlt
pop
or
and
or
jecxz
push
pop
sub
push
imul
call
orb
pop
fs
aad
cmp
and
jle,pn
aas
mov
sbb
repz
cmp
mov
jg
mov
dec
movb
push
dec
pop
mov
das
push
cmp
pop
pop
xor
inc
inc
mov
arpl
sti
and
dec
mov
xor
loop
pop
push
add
cmp
es
and
loopne
imul
gs
enter
cmp
fldenv
fldl
loope
and
pop
sti
dec
lret
imul
dec
push
pop
inc
xlat
ss
pop
ret
push
mov
sub
testl
es
adc
cs
testl
mov
cmpb
test
js
pop
xchg
mov
push
dec
xchg
push
std
or
orl
fs
fisubs
lods
test
ja
jecxz
div
lods
in
mov
ljmp
mov
push
punpckhbw
pop
sub
cmp
add
dec
pop
pop
sub
sub
pop
bound
ds
adc
adc
addl
and
daa
sub
bound
xor
cmp
and
pop
pop
sbb
lods
mov
adc
push
mov
pop
add
js
dec
push
xor
test
cmp
push
bound
mov
sub
cltd
mov
push
rcl
daa
loop
adc
shrl
repz
loop
mov
mov
push
sti
xchg
lods
adc
repz
cmp
call
cmp
repnz
out
push
bound
xor
ss
push
push
push
xchg
aam
in
push
dec
fisubrs
call
mov
push
mov
push
bound
addr16
loop
lret
div
push
insl
je
lea
movsl
and
push
mov
nop
popf
fwait
push
arpl
bound
jno
adc
inc
inc
and
xor
aas
inc
inc
test
or
filds
cmp
adc
pop
or
imul
pop
sub
stos
push
int3
mov
add
pop
sbb
push
je
gs
fsub
divl
xor
adc
jle
sub
sbb
inc
hlt
inc
sub
cmp
push
add
jecxz
stc
decb
cltd
sbb
or
pop
notl
push
xchg
jno
repnz
cmpsl
dec
push
out
cmp
orl
xchg
sbb
xchg
lret
in
push
mov
test
cmpb
xor
sbb
or
adc
pop
stc
out
enter
clc
mov
push
xchg
fwait
test
lret
sbb
xor
sub
push
sub
xchg
in
jmp
mov
and
imul
hlt
lods
hlt
rclb
or
or
fstpl
xchg
sarl
cwtl
imul
xchg
cmp
int
dec
data16
sbb
pop
and
add
add
inc
stos
dec
ret
ret
lods
leave
fistpll
mov
xor
dec
icebp
add
cs
cmp
out
xor
dec
push
pop
mov
push
cmpsl
into
push
or
mov
pop
andl
and
xchg
and
push
jo
mov
subb
and
add
fdiv
xor
or
adc
inc
inc
add
lea
dec
push
rol
dec
gs
int
and
push
cmp
or
push
adc
pop
stos
gs
xor
out
mov
push
sub
mov
inc
add
dec
rclb
or
pop
call
cli
mov
and
cmp
or
imul
inc
pop
xor
dec
addb
push
xchg
jo
cmp
sbb
and
or
add
mov
cmp
inc
dec
dec
nop
or
inc
inc
sub
pop
nop
lret
mov
stos
jno
das
pop
sbb
push
scas
pop
and
cmpsl
push
jo
adc
bound
aam
mov
lret
leave
xchg
shlb
jmp
jmp
js
dec
dec
je
stc
jl
into
in
mov
pop
push
hlt
loop
into
xchg
rorb
rclb
fwait
xor
dec
xor
pop
mov
dec
cmp
and
xor
mov
xchg
gs
and
mov
sbb
pop
shr
xor
test
mov
mov
push
xor
adc
bswap
cmpsb
pop
ret
jns
loopne
push
pop
add
cmp
dec
mov
mov
and
mov
pop
dec
rcr
popa
jmp
movsl
pusha
fsubrs
aaa
cmp
sbb
test
sbb
jne
pop
xchg
pop
mov
adc
or
int
ja
enter
jg
addl
jecxz
int
xchg
bound
sub
in
mov
fisubrs
jle
ljmp
cmp
and
loop
mov
push
sub
xchg
das
aaa
int
js
mov
mov
stc
loop
dec
xor
xchg
les
push
xchg
push
push
push
inc
dec
xor
mov
xchg
lahf
popf
pop
mov
ret
adc
push
and
inc
push
add
push
push
dec
push
pop
dec
push
dec
push
and
aaa
push
xor
or
int
sbb
sub
sub
aas
inc
push
mov
pushf
xchg
and
daa
aam
imul
adc
call
mov
and
mov
ret
or
pop
loop
dec
cld
push
xchg
rclb
dec
int
pop
mov
and
fmuls
cmp
in
cmc
and
add
pop
jnp
outsb
in
hlt
fdivrp
ret
pop
loopne
rolb
stos
mov
fistpl
xor
push
xchg
cltd
jb
and
mov
mov
xor
add
aam
in
stos
pusha
or
cmc
std
lods
mov
mov
adc
out
mov
xor
aad
mov
push
push
ds
int
sar
rcl
cmp
test
add
sub
sub
js
and
xor
adc
pop
adc
out
xchg
adc
movups
ss
loope
pusha
dec
or
push
jecxz
push
outsb
sbb
push
shl
and
sub
sub
push
ljmp
and
imul
and
sub
in
in
les
sarl
sbb
out
fiaddl
jecxz
cltd
xchg
mov
mov
or
and
add
nop
jne
test
es
imul
dec
xchg
jae
or
addb
and
mov
mov
call
ss
sbb
repnz
pusha
mov
lods
add
stos
mov
addb
adc
inc
inc
cmpb
pop
sbb
jge
push
lds
xchg
add
in
shlb
or
clc
or
aas
inc
inc
inc
dec
pop
and
out
pop
and
sbb
pop
xchg
in
adcl
lods
movl
pop
cmp
aam
test
pop
scas
mov
popf
ret
lahf
mov
in
hlt
xchg
jbe
push
out
out
int3
adc
popf
nop
inc
hlt
std
sahf
jns
and
jno
data16
or
bswap
fbstp
mov
xchg
das
xor
mov
mov
push
dec
mov
das
daa
fcmove
jns
adc
imul
dec
xor
and
test
js
movsl
data16
bound
and
xchg
add
ljmp
xchg
mov
xchg
mov
bound
mov
and
or
xor
lock
add
lret
orl
orl
cmp
adc
xor
sub
and
shll
push
or
or
and
and
add
pop
add
or
dec
push
daa
es
sub
fdivrs
sub
pop
adc
sbb
test
sub
mov
inc
mov
mov
clc
mov
or
sti
pop
jp
pop
pop
push
in
xor
ret
lock
sti
movsl
mov
adcb
ljmp
das
in
jns
adc
jns
pop
xor
in
cmpsl
xchg
cmp
or
in
out
lods
jno
cmpsb
sub
dec
stos
push
je
mov
jmp
xor
adc
push
ja
lcall
mov
mov
leave
jmp
out
out
dec
mov
push
pop
jge
cmp
xchg
mov
movsl
jl
mov
mov
pop
dec
pop
push
daa
das
xor
adc
dec
jbe
add
push
pop
xchg
pop
sbb
popa
mov
mov
sbb
sbb
inc
or
out
and
dec
and
incl
mov
es
das
or
adc
and
mov
xor
jge
sbb
xor
inc
sub
cmp
pop
incl
in
lock
jg
rcl
cmpsb
push
mov
test
jb
ljmp
pop
lds
mov
dec
pop
dec
out
dec
dec
mov
lods
xor
sub
pop
mov
mov
adcl
dec
call
sbb
scas
and
lea
call
fildl
or
jecxz
ljmp
mov
add
test
add
dec
xor
inc
or
adc
dec
push
push
ret
dec
imul
inc
pop
inc
call
dec
and
pop
and
mov
adc
pop
pop
and
pop
or
mov
jge
clc
fiaddl
jbe
imul
mov
popf
mov
ja
push
testl
xor
daa
rcl
sbb
or
and
mov
mov
mov
mov
jmp
test
lods
push
bound
cmp
pop
push
pop
inc
fucomi
in
fldcw
gs
jg
inc
lret
xchg
stos
imul
stos
xor
mov
fwait
shrb
shl
dec
xchg
lcall
pop
push
mov
push
cld
in
cmpb
pop
sbb
mov
lret
rcr
fisubs
jae
aaa
pop
cmp
cs
cmp
dec
sqrtps
pop
pusha
cmp
inc
and
pop
sbb
sbb
push
adcl
out
sbb
mov
aaa
sbbb
sarb
pusha
xchg
fldl
cmpsl
or
das
jns
xchg
add
lahf
xor
xlat
out
lahf
push
mov
add
shr
out
dec
in
lret
pop
push
sbb
rorb
sub
mov
push
lret
inc
repnz
pxor
adc
or
push
lods
data16
fstl
fucomi
mov
xor
pop
cmp
xchg
int3
sbbl
add
gs
and
dec
movsl
outsb
mov
xchg
rorb
out
repz
test
pushf
sahf
add
in
jbe
js
aas
inc
imul
das
ds
dec
out
lds
les
cmpl
pop
and
xor
push
or
or
sbb
sbb
or
pop
shlb
lods
sahf
inc
add
jge
mov
mov
sbb
dec
or
or
push
push
fsts
add
gs
ret
and
sub
push
xor
loope
das
mov
jnp
loopne
stos
or
or
dec
xor
mov
xchg
mov
stc
sub
ds
icebp
sbb
cmp
fwait
gs
mov
adc
iret
shll
pop
push
mov
rcl
popa
clc
out
out
cmp
and
adc
das
push
sbb
mov
jp
pop
cmpsb
negb
mov
push
popa
adc
cli
repnz
cld
add
js
add
mov
inc
inc
cmc
inc
in
xor
inc
daa
dec
dec
pop
pop
adc
je
add
adc
or
or
pop
add
xchg
push
push
insl
push
jmp
lods
push
stos
scas
scas
dec
add
xor
sub
adc
rorl
mov
pop
add
push
in
dec
adc
xor
or
push
lret
xchg
stos
push
imul
mov
jmp
arpl
stos
sub
ret
dec
stos
push
leave
in
sub
sbb
lcall
sub
lret
inc
loop
jns
test
sbb
and
jno
inc
outsb
call
stos
dec
mov
aaa
addb
fwait
push
mov
push
enter
dec
mov
in
mov
add
je
gs
and
dec
cmp
push
out
or
mov
insl
or
adc
or
sbb
cld
ds
ds
xor
push
dec
dec
push
push
push
cmp
inc
jle
sub
scas
test
lock
out
pop
xor
push
mov
or
or
adc
jecxz
or
out
out
mov
and
mov
add
fcom
in
scas
dec
fs
mov
fdivr
cmp
lock
lcall
loop
cmp
mov
aam
outsl
pop
aas
cmp
in
mov
jb
push
dec
lret
jp
jb
push
rclb
outsb
movsb
push
ljmp
fwait
dec
imul
call
xor
cmpsl
mov
mov
pop
nop
rolb
outsb
add
pop
pop
gs
xor
add
inc
dec
xor
add
cmp
xor
or
push
loopne
pop
sbb
dec
mov
xor
sti
and
mov
incl
sbb
fcmovnu
push
mov
loope
jle
es
mov
outsb
sbb
push
xor
mov
lret
outsb
xor
loop
out
test
aad
js
add
dec
out
push
inc
push
pop
dec
stc
xchg
dec
out
pop
pop
pop
out
lea
push
call
and
mov
ds
xchg
dec
sbb
in
sub
xchg
pop
stc
jae
pop
push
subb
xor
fwait
mov
adc
ja
adc
outsb
sub
inc
cmp
leave
fisubrl
mov
mov
mov
mov
cwtl
inc
push
pop
push
imul
dec
dec
and
xor
cmp
inc
mov
daa
cs
adc
and
push
jmp
mov
mov
sbb
sbb
jg
inc
lods
mov
dec
push
jno
mov
rol
mov
daa
or
cwtl
lahf
jl
dec
outsb
int
jnp
add
scas
or
and
scas
roll
and
out
imul
int3
push
out
or
adc
sbb
inc
lods
or
dec
xlat
mov
add
lods
mov
fwait
add
mov
inc
push
scas
sbb
dec
or
jecxz
in
mov
loop
out
in
mov
xlat
mov
push
ror
adc
add
test
add
gs
jne
xchg
xchg
test
les
call
outsb
push
push
pop
add
mov
ret
mov
mov
insb
jl
jne
test
gs
push
add
sub
push
push
pop
pop
xor
cmp
push
and
mov
push
sub
int3
mov
imul
mov
dec
xor
lock
imul
push
xor
cmp
pushf
adc
addr16
mov
or
jecxz
or
sbb
mov
ljmp
sti
nop
push
in
notb
bound
bound
imul
cwtl
xorl
out
sub
pop
push
jae
sbb
pop
xchg
inc
aam
nop
jecxz
sbb
fcomp
fiaddl
aaa
push
data16
pop
xchg
xchg
cmpsl
sbb
gs
insb
inc
xchg
mov
inc
hlt
mov
dec
dec
stos
subb
or
fstp
lods
add
fcomp
lods
add
mov
dec
pop
pop
dec
cs
pop
xor
ss
cmp
and
mov
das
test
cs
scas
mov
dec
push
pop
lret
push
push
out
mov
pop
add
sbb
or
pop
test
gs
jecxz
push
pop
push
push
push
cmp
call
sub
adc
mov
and
repz
or
daa
ss
sbb
jmp
outsb
xchg
jl
mov
adc
rclb
outsb
jbe
loop
cmp
in
testb
shl
loope
mov
iret
cmp
addr16
stos
stos
imul
test
or
cmpl
cmp
dec
dec
push
cmp
aas
mov
xlat
mov
stc
mov
inc
imul
xchg
sarl
nop
add
or
rorb
ja
insl
popf
inc
xor
push
push
add
lret
in
jnp
adc
and
imul
aas
add
cmp
mov
insl
or
push
push
je
pop
adc
jo
ret
testl
leave
sub
arpl
call
mov
rorl
xchg
cmp
outsl
jnp
push
pop
pop
cmp
cmp
sub
int
sarb
cmp
js
stos
pop
push
lret
ds
pop
loope
push
jge
bound
clc
cli
adc
mov
sbb
stos
sbb
add
or
adc
jb
add
mov
inc
ss
mov
ret
in
mov
cmc
icebp
iret
dec
pop
aad
cmc
fs
rclb
or
fs
mov
call
icebp
lds
push
mov
or
sarl
push
call
hlt
add
mov
jp
jnp
insb
insl
test
mov
setle
aas
xchg
pusha
pop
orb
inc
inc
jb
xchg
fcmovu
mov
das
inc
mov
pop
testl
jnp
adc
int3
mov
cld
jmp
loop
jno
xchg
mov
fdivs
das
enter
add
push
outsb
clc
or
ds
mov
push
push
and
loopne
hlt
notb
xor
mov
xchg
imul
jno
xchg
dec
push
mov
xchg
bound
or
jno
pop
imul
hlt
enter
popf
jp
xchg
push
fs
int
adc
pop
leave
mov
or
gs
push
js
xorb
sarl
subl
add
js
jbe
pop
popa
imul
cmp
jno
roll
push
and
cmp
and
mov
pop
xchg
jo
and
lret
popa
jo
repnz
loopne
cmc
hlt
mov
push
mov
fsubrl
pop
sub
add
adc
jbe
adc
lods
sbb
in
mov
pop
jne
leave
xchg
js
inc
fdivp
mov
dec
sbbb
mov
fisttps
imul
mov
ja
lea
int
lret
sbb
xor
setns
push
mov
dec
icebp
xchg
cld
mov
fcomip
call
loopne
jmp
and
outsl
cwtl
int
dec
bound
push
mov
mov
xor
push
cmc
mov
subb
int3
fcompl
std
and
mov
cld
icebp
dec
sbbb
fstpt
popa
fs
adc
repnz
loope
and
pop
lahf
orl
hlt
test
lahf
insb
pusha
sbb
pop
int3
or
and
es
or
mov
adc
add
pop
push
aad
popf
test
mov
add
out
movsb
shlb
je
fisttps
jno
mov
cmpsl
push
es
jl
daa
jbe
and
lods
mov
sarl
addr16
mov
mov
jmp
adc
movsl
das
stos
test
add
ja
lret
cmp
aas
int3
mov
pop
cmp
and
adc
in
add
mov
push
idivb
adc
mov
xchg
repnz
cmpsl
push
xor
aam
repz
or
jae
push
push
xchg
lcall
js
cmp
jecxz
lods
aaa
dec
loopne
jl
dec
add
jp
push
push
cld
stc
sub
mov
cmp
pop
dec
sub
dec
movsl
shlb
push
insb
adc
inc
outsb
clc
std
fadd
das
dec
cmpsb
cld
sti
sti
add
sbb
gs
pop
and
data16
add
or
ljmp
in
xchg
outsb
ds
jno
ljmp
out
xor
lcall
inc
repz
push
test
lcall
push
push
ret
push
lcall
mov
adcl
jo
popf
bound
push
or
out
and
fbld
loope
mov
cwtl
dec
movsb
rorl
call
scas
fmull
adc
push
or
adc
mov
push
mov
cmc
adc
out
sbb
sub
add
cmp
and
inc
call
cli
pop
xor
push
movsb
in
repz
lret
das
mov
mov
jnp
mov
mov
inc
movsb
push
fld
jmp
mov
aad
fcompl
hlt
loope
sub
bound
ja
jbe
lods
scas
fsubp
or
mov
lds
in
fwait
shll
out
pop
pushf
adc
sbb
and
xor
mov
aaa
pop
clc
push
into
jb
movsb
push
dec
add
mov
mov
stos
push
cmc
xchg
lahf
ss
jbe
mov
ficompl
out
jp
cld
in
dec
mov
cltd
adc
xchg
mov
and
out
lds
inc
mov
mov
mov
cmp
xor
sub
push
adc
xchg
repz
and
push
daa
fyl2x
push
xchg
xchg
das
pusha
inc
pushf
fwait
xchg
cmpsl
adc
xor
mov
je
loopne
scas
add
iret
aad
pop
push
mov
js
out
or
lds
lret
in
icebp
cmc
and
ljmp
adc
cmc
mov
cmpsb
pop
stos
imul
mov
sbb
in
push
sub
cmpl
inc
frstpm(287
out
mov
and
in
push
enter
adc
stc
inc
adc
dec
repz
scas
pusha
fdivs
xchg
pop
movsl
cli
lahf
push
cmp
stos
sub
pop
ret
and
jge
jne
push
ja
sub
and
push
loope
ja
int
and
popa
add
lods
scas
fmul
lret
or
sti
in
lret
nop
stc
outsl
pop
lock
clc
add
repnz
push
mov
dec
sbb
fldenv
lea
out
mov
xchg
mov
sahf
shlb
push
jmp
fs
aam
pop
or
mov
test
pop
lret
push
mov
stos
sbb
or
pop
mov
mov
push
jno
fldenv
mov
xor
inc
shlb
jo
mov
mov
call
call
imul
jne
imulb
dec
in
cmp
jns
jmp
sbb
in
sub
pop
or
or
mov
add
pop
or
or
push
pop
mov
push
les
mov
pop
pop
stos
daa
sub
push
xchg
jo
mov
mov
mov
mov
outsb
jbe
lds
je
movsb
mov
ljmp
rorb
int
inc
lods
xchg
in
pusha
cmp
dec
jno
and
xchg
lret
es
sub
push
out
cwtl
shlb
mov
imul
mov
add
sub
sbb
rorl
shrb
adc
push
outsb
int
jnp
dec
in
or
fmull
iret
into
sub
jg
ja
mov
out
outsl
jmp
mov
outsl
shl
cmc
and
push
lea
imul
push
in
sub
mov
push
cmp
inc
mov
es
or
xor
push
dec
mov
in
mov
mov
xchg
imul
fsubr
jecxz
sub
adc
in
or
or
sub
dec
mov
dec
or
addb
bound
imul
in
mov
scas
cmp
sub
in
movsl
mov
push
dec
sub
and
movsl
xchg
dec
xchg
int
rclb
push
lods
push
push
sahf
xor
xchg
sarb
adc
cmp
test
movsb
xor
insl
popa
jg
jne
pusha
in
lsl
dec
call
jns
cmovp
into
dec
push
push
adc
cmpsb
mov
lods
push
cmp
pop
xor
ds
add
in
or
jmp
xchg
mov
sbb
aaa
rorb
push
sub
addr16
lods
push
jne
sbb
rcr
fisubrl
push
and
cmp
push
jg
mov
mov
add
jg
gs
xchg
cmc
out
das
push
jbe
or
dec
mov
rcll
xchg
xchg
add
out
pop
jmp
push
push
adc
sbb
push
stos
push
jno
and
sub
push
call
and
jg
in
add
lods
pop
push
jmp
push
imul
loope
dec
push
pop
push
dec
icebp
in
std
hlt
dec
sbb
shl
loop
xchg
mov
push
pop
pop
sbb
cmp
xchg
push
out
xchg
rcrb
sbb
nop
outsb
fcomp
mov
fdivrl
mov
idivb
pop
ds
lret
lret
sbb
pusha
cmpsl
imul
inc
popa
mov
icebp
jne
fdiv
pop
cmpb
dec
xor
mov
roll
mov
add
xchg
repnz
cmc
jmp
fidivrs
shr
adc
push
scas
add
addl
sarb
push
add
dec
mov
add
mov
adc
aad
push
jp
sbb
call
push
add
lods
push
movsl
push
scas
push
push
mulb
sub
fistpll
loope
pop
push
cmp
push
lret
inc
jmp
xchg
push
hlt
out
shlb
push
adc
in
rclb
or
pop
ljmp
aad
sti
jmp
sbb
in
out
jg
pop
icebp
cmp
divl
negb
lods
mov
cs
mov
add
push
mov
pop
inc
xor
mov
enter
dec
std
rcll
adc
jmp
jle
push
popa
bound
iret
and
subb
imul
mov
push
inc
aad
outsb
je
jp
lods
or
mov
or
jo
lods
push
orb
jmp
testb
pop
add
fimull
inc
push
push
lahf
xchg
inc
out
fisttps
inc
push
sub
jnp
dec
sub
cmp
sbb
mov
test
xchg
or
inc
add
adc
xchg
inc
ret
dec
insl
aad
in
or
cli
push
add
xchg
push
shll
out
sar
or
dec
das
hlt
add
insb
bound
sub
in
xor
cmp
jo
add
and
stc
xor
enter
and
inc
sbb
sub
insl
enter
adc
mov
ss
xor
test
mov
and
sub
and
push
push
push
push
pop
jne
xchg
outsl
pushf
cmp
sahf
mov
or
pmullw
and
push
pop
sbb
add
orb
dec
jo
ljmp
scas
daa
popa
lret
mov
push
add
jbe
mov
or
fs
mov
addr16
push
inc
or
cli
xchg
adc
add
and
pop
push
jno
pop
inc
adc
jmp
add
xchg
add
imul
out
push
xor
cs
divl
jb
xlat
xchg
arpl
push
sti
scas
adc
outsl
outsb
cmp
jl
jbe
into
inc
jns
jb
adc
push
in
jp
das
aas
push
mov
inc
mov
lea
inc
sbb
outsl
arpl
adc
xchg
jae
cmp
pop
inc
jne
inc
fidivs
push
push
in
int3
jnp
dec
mov
sub
cmp
inc
push
push
addr16
push
aad
seta
adcl
inc
jns
bound
push
insb
jae
xchg
xchg
jl
or
push
fwait
bnd
cmp
inc
js
add
je
aaa
mov
adc
mov
sub
and
fidivs
pop
fs
jae
cmovge
aaa
aam
dec
popa
outsb
fildll
or
adc
imul
adc
dec
inc
out
imull
popa
mov
dec
sub
or
inc
sete
jg
xchg
fwait
jne
inc
je
xchg
orb
stos
ja
ds
xor
adc
push
repz
adc
in
mov
adc
int3
dec
sub
jne
jb
es
dec
sarb
inc
adc
stc
push
fnsave
inc
push
fsubs
outsb
addr16
mov
dec
outsl
daa
push
dec
cmp
adc
mov
pushf
push
jbe
jo
inc
popa
push
and
imul
xchg
std
inc
adc
dec
sahf
outsb
inc
mov
pop
or
inc
outsl
hlt
xchg
or
je
popa
push
jns
and
inc
jp
push
movsb
fs
adcb
loopne
stos
into
inc
testb
push
ljmp
sub
xchg
xchg
ret
loope
xchg
pop
shl
and
cmpl
dec
inc
mov
repnz
push
stos
rorb
dec
bound
arpl
push
dec
mov
jge
data16
jne
filds
add
pop
push
cmovne
push
das
or
je
push
jmp
sub
test
adc
sarl
inc
ret
and
imul
nop
or
mov
lds
int
sbb
sahf
xor
inc
or
dec
popf
rorb
lret
push
sbb
je
cmp
pop
fcoml
push
lahf
adc
jp
jmp
mov
jne
outsb
add
jb
jo
cmp
lret
insl
adc
insb
dec
xchg
jg
sub
aaa
pop
xchg
sub
mov
setge
insl
dec
sti
in
jae
movl
xchg
and
test
sub
imul
adc
insl
push
repnz
movsl
popf
pop
or
imul
sahf
xchg
clc
mov
daa
jl
sti
mov
sub
sbb
je
insl
inc
lods
fsubrl
mov
push
inc
mov
sub
enter
and
or
rcl
out
std
lods
and
mov
xchg
aad
jbe
hlt
xor
push
and
push
or
fldcw
xor
lahf
inc
addr16
and
cmpsb
lret
mov
add
jle
xchg
or
ja
jb
test
xor
dec
sub
push
push
inc
jmp
in
fnstenv
and
mov
inc
roll
int
or
ret
mov
xor
fsubrs
cli
insb
mov
adc
dec
ljmp
sbb
jae
bound
adc
push
mov
jnp
cmpsb
push
test
and
and
cmpsl
hlt
inc
fistl
or
xchg
adc
sub
inc
push
js
std
jns
cmpsl
outsl
and
and
xor
data16
imul
sbb
and
jae
inc
test
dec
repz
cs
cmp
sub
add
incb
adc
pop
xchg
pop
pushf
sbb
lcall
rcll
pop
lcall
fwait
insl
jl
sub
mov
scas
loop
das
dec
jbe
and
or
push
inc
dec
jne
insl
movb
cli
lcall
shll
xor
das
pop
cmpsb
aad
icebp
mov
push
dec
insl
mov
nop
cmc
orb
test
dec
repnz
jo
push
nop
sub
pop
xchg
jne
mov
cwtl
or
sbb
mov
add
pop
outsb
pop
push
aaa
inc
and
aaa
leave
xchg
lret
cmp
cmpsb
adc
mov
leave
fwait
in
and
add
jge
inc
mov
mov
imul
xlat
sub
cmp
or
xor
lea
adc
insb
jo
jg
mov
jo
mov
addr16
jae
xchg
sbb
inc
inc
mov
push
dec
in
dec
pop
push
sahf
push
jb
ds
insb
mov
dec
add
daa
in
arpl
pop
test
nop
popf
lock
sub
outsb
jmp
les
sub
sti
mov
lret
jnp
or
test
lods
or
jb
nop
test
jae
adc
iret
out
ja
mov
adc
aas
dec
cvtps2pd
push
or
bound
ljmp
addr16
xchg
mov
mov
mov
inc
punpckhbw
xor
nop
xchg
jo
inc
fisttpl
pushf
jns
inc
fs
lock
xorb
pusha
int
or
inc
adc
push
jne
push
ficoms
inc
pushf
rcrl
xor
xor
ljmp
sbb
cmp
xchg
push
jns
xchg
insl
push
mov
nop
or
nop
ficoml
rol
jl
cwtl
lcall
add
inc
arpl
push
sbb
xchg
jne
mov
cltd
push
fs
int3
mov
sub
xor
sub
jne
out
xchg
jge
out
lahf
dec
imul
cmp
adc
fcmovnbe
jl
test
push
jae
imul
or
das
cmp
jnp
adc
dec
arpl
test
or
data16
pop
dec
push
dec
jae
adc
or
rcll
xchg
push
lcall
mov
push
imul
mulb
in
and
xlat
lret
outsb
jbe
int
addl
fsubp
xchg
dec
gs
sub
les
push
jno
cmpsl
mov
fwait
sbb
call
adc
je
test
pushf
jns
jo
dec
sub
in
popf
push
rorb
adc
or
jne
sub
cmp
sbb
push
xchg
and
stos
pop
rcrl
sub
push
jb
push
dec
fwait
push
rol
fwait
jno
subl
call
in
gs
or
nop
adc
xor
mov
dec
xchg
dec
and
enter
adc
test
jae
leave
movsl
adc
bound
inc
inc
or
cltd
insb
insl
jbe
adc
shrb
and
xchg
push
push
mov
mov
push
iret
xchg
test
imul
jno
xchg
sbb
fcoms
mov
or
stos
and
dec
movzbl
aam
pop
or
adc
mov
inc
movsb
clc
fld1
or
pop
rorl
push
push
cmp
or
inc
sbb
adc
fs
adc
bound
jns
xorb
adc
or
pop
cmp
and
push
cmovle
test
int
sbb
push
cmp
lret
adc
shrl
cmpsb
dec
jle
xlat
fstps
push
add
jb
adc
in
sub
pushf
outsb
es
dec
lret
pop
inc
or
aas
mov
data16
mov
or
pop
dec
insl
lahf
dec
fs
ja
xor
fwait
cli
rcll
xchg
add
inc
xchg
sbb
rclb
mov
subl
jp
push
inc
cmp
xchg
inc
adc
inc
popa
push
inc
mov
movlps
dec
ljmp
imul
fidivrs
adc
movsb
icebp
xor
or
stc
or
in
xchg
push
test
push
insl
rorb
mov
dec
dec
add
pop
push
cltd
xchg
jge
inc
push
enter
xchg
and
adc
dec
imul
adc
mov
adc
rorl
mov
adc
pop
cs
adc
in
aam
adc
mov
push
pusha
pop
inc
adc
xor
insl
adc
sbb
dec
insl
adc
fistps
mov
or
dec
rclb
jge
adc
jne
insl
nop
adc
ss
jae
adc
add
adc
lds
inc
add
ljmp
inc
adc
jbe
mov
add
mov
add
add
add
and
add
pusha
add
addb
add
add
add
add
add
add
add
cmp
add
add
add
add
add
add
add
push
add
add
jb
add
add
add
mov
add
add
add
add
add
add
add
add
add
add
add
add
nop
add
add
jno
add
add
add
add
and
add
add
add
add
add
add
add
add
add
add
add
add
and
add
add
add
add
mov
jge
nop
nop
popl
jge
jge
imul
push
pop
add
imul
push
jp
add
ret
add
pusha
add
jns
add
mov
add
xchg
ljmp
xchg
in
add
loope
pop
mov
mov
xchg
xchg
xchg
add
xorl
add
loopne
adc
out
add
leave
lock
mov
add
movb
fcos
add
incl
mov
incl
mov
incl
lahf
cmc
incl
add
in
add
addl
push
xchg
add
out
incl
test
ljmp
or
in
add
jae
add
mov
add
incl
pop
add
fdivr
add
add
mov
call
add
push
sbb
out
add
sar
add
in
add
mov
add
in
cltd
fdivr
add
add
add
add
filds
je
incl
add
int
add
int3
incl
push
loope
add
movsl
loopne
lcall
add
test
add
add
int
add
int3
incl
inc
add
cli
add
pushf
fiadds
lcall
add
xchg
add
sar
add
int3
incl
add
incl
sub
incl
gs
add
nop
fiaddl
lcall
add
mov
dec
aad
add
add
int3
incl
add
incl
sbb
incl
jno
incl
push
flds
xchg
shl
add
test
add
testb
loope
add
lret
add
into
incl
je
incl
add
faddl
xchg
into
repnz
lret
lea
add
out
add
lret
add
int3
incl
je
incl
or
lock
xchg
add
jmp
incl
add
int3
incl
imul
in
jge
jmp
mov
jmp
add
lea
add
add
add
jge
push
pop
add
arpl
inc
push
pop
add
out
add
sar
add
int
add
incl
es
add
out
push
out
add
pop
jne
das
bound
add
insb
xchg
add
insb
fwait
add
jo
add
arpl
dec
jb
add
xchg
loop
push
xchg
in
add
xchg
in
add
xchg
in
add
incl
ds
add
sar
add
incl
inc
cmc
add
lcall
add
in
or
in
or
loope
add
xchg
aam
mov
add
xchg
mov
out
add
xchg
loop
or
fildl
add
add
testb
out
add
into
incl
adc
incl
test
incl
jne
cli
add
adc
add
test
add
mov
add
mov
add
test
add
mov
add
test
add
xchg
fldl
popa
mov
add
add
add
mov
add
idiv
add
cmc
incl
scas
icebp
incl
lods
out
incl
imul
add
into
incl
add
incl
dec
fcos
add
lock
cmpsb
lock
stos
hlt
incl
stos
hlt
incl
stos
hlt
incl
mov
in
incl
xor
pushf
fiadds
mov
call
add
out
incl
outsb
jecxz
add
call
incl
je
incl
and
incl
add
incl
add
incl
add
fdivr
add
ljmp
popf
jmp
add
ljmp
cmp
stc
add
filds
mov
call
add
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
or
incl
push
sar
add
incl
inc
add
aad
add
incl
cmp
xchg
fldl
mov
call
add
add
incl
push
add
jmp
incl
push
fdivrp
add
into
incl
add
incl
add
incl
add
incl
add
incl
add
sar
add
incl
xor
incl
sub
incl
add
incl
inc
fdivr
add
std
add
faddl
mov
jmp
add
mov
add
clc
incl
incl
incl
incl
cmc
incl
xchg
in
incl
or
incl
add
incl
add
incl
sub
incl
mov
incb
aad
incl
shl
incl
enter
shl
add
in
add
incb
push
flds
xchg
aad
add
ja
jne
enter
into
add
rolb
push
mov
fildl
and
cli
add
fdivr
add
lret
add
incl
inc
add
std
add
icebp
incb
incl
incl
incl
incl
pop
loop
add
xchg
fldl
ret
out
std
add
add
add
lods
jmp
dec
loopne
add
lret
add
incl
xor
leave
testb
mov
in
add
fwait
add
mov
add
pushf
xlat
add
xchg
flds
cmp
fldl
movsb
movsb
movsb
add
out
add
lret
add
incl
push
sar
add
cli
add
incl
data16
add
add
enter
incl
add
fdivr
add
loopne
add
xchg
flds
xchg
fdivr
add
add
test
add
idiv
add
stc
incl
mov
out
add
fildl
cltd
fdivr
add
jp
xchg
loopne
jns
call
add
out
stc
add
cwtl
jecxz
out
add
rolb
stos
int
movsl
stos
lods
add
aas
inc
aas
incl
pop
incl
pop
incl
pop
incl
pop
incl
pop
incl
pop
incl
ud0
rorb
inc
or
cld
add
pop
clc
add
add
psubb
add
clc
add
psubb
add
clc
add
paddb
add
cld
add
ud0
add
push
pop
push
pop
push
pop
push
ud0
decl
ljmp
mov
or
lock
mov
