out
dec
lahf
lahf
or
push
loope
cmp
dec
xchg
push
mov
aam
pop
xchg
jmp
sub
ljmp
roll
push
bound
popl
jp
mov
leave
add
xor
aas
imul
loop
xor
lea
mov
cmp
cmp
sub
imul
fsubrs
cmp
xchg
sub
test
push
mov
je
lahf
repz
jmp
aaa
aas
adcl
fcompl
jl
negb
ss
loopne
mov
imul
ja
arpl
fisubrl
xchg
leave
xchg
add
adc
cmp
add
sbb
into
xorl
cmc
adc
fistpll
divl
push
mov
xchg
sub
push
add
in
cmpsl
stos
cmp
data16
imul
and
sub
bound
pop
in
shl
imul
lea
shl
xchg
aas
sbb
arpl
cmp
push
mov
mov
dec
dec
repz
js
or
push
cmp
sub
adc
and
or
scas
add
in
jg
mov
mov
push
pushf
mov
aas
mov
test
test
scas
sub
roll
jbe
icebp
aad
outsb
xor
push
sub
and
xlat
fsubrl
push
fwait
outsl
mov
cmc
insb
ret
mov
lret
outsb
arpl
jbe
jle
mov
loopne
sti
int
jne
stos
cmc
popf
adc
loop
mov
xor
ss
sarl
mov
mov
or
stos
leave
mov
hlt
xchg
cld
aaa
sub
xchg
in
cmpsl
ret
rolb
test
mov
mov
nop
setne
adc
push
rorb
xchg
roll
mov
lcall
xor
stc
sub
loope
sub
call
dec
xchg
and
inc
push
push
jmp
push
mov
mov
lea
xchg
or
mov
xchg
test
mov
fbld
add
jo
je
divb
pop
push
dec
test
xchg
xlat
sub
movlps
pop
ror
jp
leave
jecxz
jecxz
jl
jae
mov
lea
dec
and
arpl
loopne
fisttpll
adc
sub
outsl
xchg
add
imul
xchg
outsb
xor
mulps
or
repz
xor
jne
mov
cs
cmp
sbb
xchg
shll
fcoms
cmp
addr16
or
mov
dec
movsb
test
or
jmp
lret
xchg
mov
xchg
mov
pop
lahf
push
or
lea
int3
push
or
divb
cmp
or
cmp
and
xor
jb
xchg
out
mov
loope
push
xor
cmp
cmp
bound
sub
mov
mov
ds
pusha
test
add
gs
adc
jmp
lcall
leave
fmuls
je
fldenv
orl
pop
xor
repnz
jle
pop
sub
pushf
pminub
lods
xchg
sub
jmp
mov
or
aam
or
and
imul
pusha
lds
mov
cmpsl
push
jge
cld
in
in
jo
xchg
sub
arpl
mov
movsl
clc
pusha
lret
push
mov
scas
dec
scas
arpl
stc
mov
push
jbe
mov
out
jns
in
enter
addr16
cli
pop
push
fmul
rcr
ftst
xor
xchg
sbb
dec
xchg
lods
fwait
sbb
dec
dec
faddl
stc
lcall
dec
add
shl
mov
xor
dec
cmp
in
adc
and
rcr
stos
cwtl
and
jno
mov
leave
adc
andl
push
push
mov
pop
mov
movsl
mov
out
pushf
inc
inc
dec
lods
outsb
cmp
push
mov
push
xchg
inc
push
fnstenv
mov
inc
pop
and
mov
pushf
mov
push
mov
imul
adc
insb
jmp
xlat
sub
stos
in
ret
mov
ljmp
xchg
xchg
cs
in
inc
neg
push
or
fiaddl
fmul
push
mov
inc
cs
lods
leave
xchg
leave
vpshufhw
dec
fiaddl
and
lahf
mov
out
insb
sahf
inc
jnp
outsb
push
pop
xchg
add
push
xorl
inc
mov
rorb
addr16
flds
xchg
leave
dec
xchg
and
sbb
sub
int3
mov
xchg
outsb
jae
jbe
test
jns
xor
movsb
sbb
mov
dec
inc
adc
ss
and
xchg
movsl
adc
clc
jb
sbb
mov
jnp
insl
or
into
add
ja
jecxz
enter
push
addb
icebp
call
es
lods
push
mov
cltd
out
fdivrl
xor
mov
aam
rclb
or
test
xor
loopne
sarl
outsb
adc
dec
pop
rcll
in
lods
cmpsb
je
xor
add
test
sbb
test
dec
add
and
mov
mov
and
pop
sbb
popf
mov
jne
stos
sbb
jmp
jae
inc
adc
outsl
jb
and
out
mov
orb
and
les
xor
jb
mov
ret
test
fstpl
push
sbb
push
lret
in
hlt
or
aad
cmp
rolb
sarb
ret
loopne
test
jmp
flds
loope
in
mov
jo
fs
mov
cmp
sub
or
iret
mov
sub
ja
in
inc
test
jne
cmpsl
or
adc
movsl
les
adc
mov
outsl
add
xchg
mov
mov
mov
int3
test
cs
scas
xchg
nop
push
mov
push
jl
testl
jae
sub
les
cmc
pop
push
adc
push
fistps
jg
ror
andb
jp
popa
int
jp
out
or
cs
cmp
xor
std
mov
rorl
daa
pop
test
fldenv
les
xchg
sarb
dec
adc
sbb
mov
fidivl
loopne
jae
push
push
pop
xchg
xchg
shlb
mov
mov
xchg
popa
dec
xor
fistpl
pop
cmp
je
mov
mov
insb
sub
mov
js
iret
inc
out
aaa
add
into
add
repz
jle
and
mov
xlat
add
stos
lahf
xchg
push
pop
sti
cmp
in
cmp
stos
enter
sbb
add
rcll
mov
enter
cwtl
sbb
popa
out
inc
outsl
stos
xchg
dec
out
shrl
cmp
inc
push
mov
add
cmp
scas
insb
ja
scas
andw
jl
sub
shlb
pop
andb
inc
adc
shr
repnz
dec
negl
push
push
mov
movsl
stc
inc
repnz
dec
ret
in
and
jns
cmp
jo
mov
add
aad
inc
out
inc
ret
mov
xor
add
xchg
push
push
rorb
roll
lcall
mov
aaa
push
loop
subb
jg
cld
sub
dec
xor
mov
mov
mov
jbe
repnz
hlt
xor
sub
jl
jecxz
and
lcall
pop
stos
ja
push
or
sub
sub
repz
jnp
adc
push
jae
lods
movsl
cli
sbb
mov
orl
lods
xor
jle
into
sbb
sbb
loop
mov
in
and
lcall
ss
js
xchg
jecxz
sbb
dec
mov
add
dec
loop
movsl
sub
jns
cmp
mov
pop
dec
shrl
int
mov
es
xchg
xlat
mov
jge
xchg
sbb
ja
xchg
push
jb
sub
jecxz
cmp
stos
rorb
mov
jge
loop
aas
aaa
stos
add
push
adc
and
les
mov
fstpl
sub
pop
or
jo
test
cmp
sbb
in
jnp
hlt
mov
push
or
dec
clc
add
jbe
repnz
push
cmp
inc
pushf
adc
arpl
mov
jns
movsb
or
mov
out
push
xchg
add
pop
mov
jmp
leave
dec
imul
lret
mov
mov
push
mov
rolb
push
jmp
addr16
mov
lret
mov
subb
push
sub
dec
test
push
dec
pop
mov
movsl
cmpsb
mov
mov
lea
cmp
dec
sbb
in
adc
clc
jmp
outsl
iret
shll
out
jmp
fists
test
or
add
inc
jg
mov
loop
ljmp
bound
pop
mov
repz
adc
push
adcl
sbb
scas
dec
lods
inc
repnz
lcall
into
push
dec
sub
dec
je
stos
leave
scas
pushf
shll
mov
sub
push
push
mov
push
or
aad
mov
adc
push
xchg
sbb
cwtl
dec
out
xor
push
fcoml
cmp
icebp
daa
aad
rclb
lret
arpl
xor
pop
out
add
test
dec
mov
call
loope
jb
pop
fsubrp
mov
ret
mov
js
mov
fs
mov
stos
lcall
loop
sarb
je
int3
sbb
out
sub
inc
fistl
in
xchg
jne
in
and
stc
or
mulb
sub
pop
inc
inc
int
adc
xor
or
mov
jmp
outsl
lods
sub
shlb
imul
push
pop
push
push
cmp
jbe
adc
add
in
divb
mov
adc
sbb
cmc
aaa
stos
loop
je
inc
inc
pushl
xchg
lret
sub
dec
fdivl
sub
sarl
cmp
aaa
fdivl
xlat
pop
js
mov
mov
pop
fadds
jb
dec
idiv
xchg
ja
rorl
mov
mov
xchg
mov
popf
jbe
leave
mov
xor
or
mov
or
inc
push
push
push
dec
lods
or
lret
pop
inc
leave
add
mov
lock
fildll
xchg
dec
jb
clc
test
adc
into
pop
aad
lahf
ljmp
push
notl
pop
in
mov
frstor
jb
test
mov
cltd
shl
push
fidivrl
xlat
inc
addr16
pop
xchg
std
add
cmpsl
push
xchg
sub
mov
xchg
lds
inc
rcr
cmp
icebp
mov
cwtl
xor
push
stos
movb
imul
cs
adc
mov
outsb
or
xor
movsl
mov
je
in
and
or
rcrl
in
dec
dec
rcl
fcoml
sub
mov
stos
fxch
hlt
and
or
pop
mov
and
fwait
jge
loop
mov
mov
push
mov
ret
stos
int
cli
mov
sbb
ror
sub
cmp
daa
mov
lahf
in
sub
in
xor
push
jo
xchg
sub
sbb
mov
pop
aam
lret
dec
pop
aad
dec
jb
repz
jecxz
add
scas
push
xchg
inc
lea
xor
stos
fs
mov
cmp
ss
mov
ss
xor
ffree
mov
pop
xlat
leave
xchg
ss
cli
dec
in
mov
scas
mov
stos
cmpsb
iret
sti
aam
xor
lahf
outsb
mov
xchg
add
in
negb
push
jne
inc
fdivrl
jnp
das
dec
test
movq
dec
mov
insb
push
jle
mov
test
sbb
and
and
and
out
mov
ret
test
inc
inc
jp
iret
bswap
out
lods
fcomps
test
je
xchg
and
lret
pop
mull
adc
leave
test
mov
sbb
popf
lds
inc
cmp
add
cmpsb
mov
mov
cld
and
loopne
push
iret
bound
pusha
mov
mov
dec
cltd
cmp
iret
loope
loop
sbb
xchg
mov
out
adc
mov
dec
mov
movsl
and
mov
or
dec
and
and
imul
subl
push
fbstp
rcll
and
cmc
push
xchg
ret
gs
addb
bound
sub
fiadds
in
xor
inc
into
lcall
adc
inc
jo
and
testl
in
loope
icebp
lods
les
stc
sti
js
stc
inc
into
pop
cltd
testb
xor
in
or
sbb
cmc
mov
push
clc
shrl
pushf
dec
jne
push
stos
in
xchg
push
out
lock
or
test
jno
fstl
mov
dec
movsb
xchg
scas
inc
jp
pop
xor
out
cltd
cwtl
lcall
leave
xor
mov
or
xlat
lret
dec
pop
shlb
and
adc
leave
les
aaa
mov
sarl
jo
inc
test
add
dec
mov
xchg
jg
std
lea
movsl
aad
imul
fcoms
jno
lcall
das
adc
mov
add
movsb
repnz
stos
or
jb
jne
leave
push
push
mov
hlt
jae
and
insl
mov
adc
adc
or
xchg
mov
ja
inc
faddp
repz
or
xor
scas
xchg
cwtl
clc
out
outsb
test
dec
mov
inc
je
pushf
sbb
pop
pushf
std
stos
adc
aam
int
movsb
push
sub
sub
test
sub
pushf
shlb
adc
mov
lock
loopne
fcomp
cwtl
dec
jmp
insb
call
ljmp
fsubr
push
lea
and
test
jae
inc
mov
mov
inc
inc
jecxz
sbb
leave
int
hlt
fwait
push
mov
and
out
in
or
bound
push
sub
fdivs
ja
push
mov
jno
pop
insl
and
fmull
xor
cmp
repz
insb
call
jb
mov
adc
push
sbb
jns
es
cmp
lock
inc
and
into
jo
icebp
jg
psubw
adc
jmp
jo
int3
js
add
inc
loope
scas
adc
test
pop
inc
mov
shll
cmp
xchg
test
jnp
pop
iret
lds
sub
push
pop
inc
push
mov
mov
arpl
dec
gs
mov
test
inc
mov
jp
test
xchg
ds
push
lods
jmp
jmp
or
jno
sub
je
ret
jb
fwait
int3
mov
mov
jecxz
ljmp
mov
or
lahf
pop
in
fildll
dec
sub
notl
call
repnz
aam
mov
aaa
ja
sbb
sub
loope
xor
xlat
sub
xchg
mov
scas
mov
mov
push
push
adcb
imul
xlat
push
jecxz
lahf
inc
mov
mov
adc
test
les
xchg
mov
xorb
dec
adc
xchg
mov
pushf
rolb
lret
push
aaa
pop
out
movsb
or
das
pop
popa
mov
gs
and
xchg
gs
mov
movsl
mov
or
mov
pop
shrb
lds
dec
les
sbb
cmc
jns
push
ret
xlat
and
mov
cmp
lahf
repnz
xchg
ror
test
push
sub
pop
stc
stos
add
aad
cmpsl
test
mov
xchg
xchg
push
xlat
add
and
mov
and
mov
pop
sbb
clc
mov
les
out
jo
inc
xabort
jp
and
pop
fstpt
testl
lods
jae
dec
sbb
lods
je
sbb
stc
pop
loop
pop
adc
mov
mov
in
insb
inc
adc
xchg
stos
iret
xchg
push
mov
mov
imul
ret
jle
cmpsb
cmp
test
shrl
sahf
mov
dec
aaa
subb
pusha
es
movsb
loopne
sti
loope
mov
pop
std
sbb
scas
mov
pop
es
scas
fwait
jl
pop
xor
shlb
pop
push
pop
repnz
cli
jge
cmp
gs
repz
je
out
xchg
pop
rolb
mov
std
fldt
mov
xor
test
js
push
je
push
adc
das
aad
add
xchg
xchg
inc
sub
pop
insl
out
movsl
daa
cmc
xchg
adc
pusha
mov
jl
cmp
mov
mov
fsub
mov
sbb
nop
push
cli
mov
enter
or
adc
push
mov
pop
lret
int3
fs
cmc
dec
gs
test
jmp
sbb
fildl
or
call
jle
inc
aas
aad
test
pusha
mov
jmp
sub
cltd
jne
arpl
xchg
add
push
mov
test
sub
into
pop
test
insl
int
mov
sbb
out
arpl
subl
lret
aam
push
lods
leave
inc
push
xchg
jle
in
push
cmp
mov
push
int3
insl
adc
repz
push
cli
lods
cmp
mov
xchg
aaa
jae
loop
repnz
cwtl
aaa
inc
cs
cmp
loopne
mov
mov
adc
add
push
mov
mov
jns
add
push
mov
loop
push
gs
lock
push
das
in
scas
mov
mov
or
mov
xchg
in
xor
jecxz
enter
mov
push
sbb
adc
ljmp
test
shll
fdecstp
inc
inc
ja
ret
xor
pop
imul
stos
shlb
scas
cmp
arpl
mov
cs
sbb
scas
mov
dec
cmp
xor
repnz
repnz
test
loopne
xor
data16
add
aam
xlat
pop
fnstcw
and
push
incb
mov
mov
jmp
test
inc
inc
out
sub
insb
hlt
repnz
lock
inc
push
stos
pop
sbb
ja
int
xchg
out
push
mov
and
in
in
mov
movsl
mov
inc
lock
repz
push
mov
fisubs
inc
fbld
shll
cmp
aam
and
mov
leave
add
xchg
cmp
mov
adc
or
fmuls
nop
jge
adc
pusha
roll
test
add
dec
xchg
out
jg
or
inc
add
nop
int3
xor
pusha
lret
test
lcall
in
jp
or
int3
ja
andb
fistpl
mov
test
out
jl
sub
jp
rcrb
jnp
in
jmp
fcomi
mov
mov
pushf
inc
mov
adc
mov
xor
popa
adc
dec
push
inc
inc
mov
xchg
in
cmp
aam
imul
stc
cmp
dec
in
fs
sub
push
stos
outsb
xchg
add
jne
lds
push
mov
insb
xor
xor
xlat
sub
icebp
dec
inc
jb
mov
dec
aam
cld
mov
repnz
subl
xor
adc
dec
mov
add
mov
or
loope
xor
mov
rorb
out
sbb
xor
jno
lock
aas
inc
outsb
imul
cmp
dec
mov
adc
jnp
add
jge
xor
repz
lods
sbb
add
repz
out
bnd
and
mov
xchg
loop
cmpsl
lods
out
int
and
mov
inc
and
aam
pop
lret
rcr
enter
or
adc
mov
mov
adc
or
jb
add
cmp
mov
test
xor
sub
cmp
mov
pop
pop
adc
rcl
pop
xorb
dec
aam
out
jmp
xchg
mov
push
or
pavgw
aad
mull
into
fidivl
mov
push
ljmp
icebp
xorl
lret
jp
loop
fs
sub
lret
push
mov
sbb
mov
cli
cs
jnp
xchg
repz
lds
ljmp
imul
cli
sub
cli
push
adc
mov
sub
xchg
cmpsb
add
push
in
pop
push
orb
mov
lock
mov
sub
dec
lret
imul
repz
cmp
ffreep
jno,pn
inc
mov
xchg
clc
cmp
cwtl
jbe
mov
jne
mov
dec
nop
int
sbb
xlat
pop
push
push
add
not
inc
cld
negb
stc
xor
iret
in
clc
cmpsl
in
imul
adcl
or
pusha
push
mov
cltd
std
popl
dec
xchg
mov
addb
int3
movsl
outsb
or
mov
ds
movsl
in
test
repz
mov
cmc
sub
add
sub
sub
mov
xor
mov
in
fcoml
push
out
push
das
pop
mov
lea
jmp
test
daa
fildll
rcll
les
cmpsb
mov
pop
or
inc
mov
and
in
add
mov
dec
stos
jmp
rep
jp
pop
pop
and
daa
je
pushf
daa
jle
mov
in
daa
mov
movsl
jmp
call
in
xor
xchg
mov
rcr
ja
cltd
sub
int
push
and
jge
jns
sbb
aad
mov
dec
xchg
or
mov
lods
add
or
cmp
mov
lods
jecxz
jmp
push
movsb
mov
les
aas
dec
dec
data16
jb
ljmp
outsl
scas
xchg
es
testb
cmp
pop
insb
ja
mov
or
push
outsb
or
cmp
cld
push
addr16
or
les
sub
lcall
fadd
xchg
push
mov
jmp
adc
jmp
mov
jbe
add
sub
pop
cli
int
stos
xchg
scas
push
outsb
lret
xchg
lods
in
jp
adc
popa
loope
test
cmpsb
or
or
inc
dec
mov
mov
clc
pushf
fstpl
mov
repz
xor
adc
lods
xchg
add
mov
cli
lcall
push
or
and
push
push
cmpsl
inc
fldt
shlb
std
push
hlt
sbb
jns
push
mov
int
nop
xchg
pop
lahf
cli
dec
and
cwtl
popa
jecxz
pop
push
daa
sub
pop
sub
sbb
frstor
jmp
and
repnz
dec
stos
xor
xchg
lock
iret
sti
fiadds
test
inc
sbb
in
adc
or
xchg
imul
lock
ds
data16
add
test
and
cmp
outsb
pusha
xor
in
stos
push
popf
incl
int3
mov
lds
aas
rol
or
sbb
sahf
push
stc
mov
fidivrs
mov
sbb
cwtl
shlb
xorl
dec
out
inc
inc
push
aad
imul
mov
lret
sar
xlat
aas
mov
sbb
sbb
ljmp
dec
adc
mov
sahf
and
call
mov
xor
shlb
push
ja
push
mov
aad
jno
arpl
jb
cmpsl
push
xchg
scas
sub
pop
xchg
movsl
movsl
rcll
insb
and
in
jne
das
dec
push
je
iret
es
dec
push
psubsw
jg
wbinvd
sarl
jmp
leave
jmp
decl
jnp
pushf
mov
sub
mov
pop
gs
sbb
mov
fists
inc
test
test
pushf
jl
fwait
inc
jmp
push
inc
lahf
adc
mov
aam
aam
jno
movsl
lods
jmp
out
out
rol
pusha
adc
stos
sub
sti
dec
test
mov
or
mov
movsl
mov
dec
scas
dec
insl
inc
shl
stc
cld
out
push
rclb
pop
mov
or
jnp
mov
repnz
mov
ror
cltd
jne
dec
cmp
xchg
xchg
cmp
lods
movsl
pop
imul
push
push
not
jb
sti
shlb
push
pop
push
int
lret
sbb
jge
xor
out
sbb
push
sub
pop
sbb
insl
scas
mov
sub
les
leave
sub
add
or
xlat
pop
aad
lcall
fidivrl
dec
insb
mov
jbe
xchg
fcmovnbe
inc
loop
xchg
shlb
dec
int3
jle
das
int
stos
out
idiv
in
mov
loope
fimull
movsb
fst
push
cs
add
insl
add
jp
pop
push
out
jb
add
xor
mov
mov
jnp
add
loope
mov
sbb
rcrb
movsb
push
mov
inc
daa
in
hlt
mov
fbstp
dec
nop
or
push
das
jno
push
popa
and
scas
dec
add
fstpt
mov
cmp
xor
cmp
pop
mov
mov
mov
in
inc
repnz
scas
cmp
pop
or
mov
imul
sbb
popa
lods
sbb
xchg
call
popa
fisttps
mov
inc
fbstp
inc
les
scas
add
std
pop
roll
push
movsl
or
inc
lods
xor
push
sub
jmp
fildll
fistps
and
push
xlat
mov
mov
adc
jle
and
enter
test
aas
pop
nop
jbe
xlat
mov
jno
je
mov
sub
cltd
fimull
sbb
lods
movsl
inc
xchg
nop
cld
rcr
lods
jmp
adc
mov
cmp
lods
or
mov
mov
in
jo
add
ds
xlat
dec
cmp
std
repnz
shr
imul
jns
and
lcall
mov
das
mov
cmp
sbb
imul
jno
add
pop
sub
mov
enter
in
movsl
aam
sbb
in
inc
mov
rcr
lock
bnd
lahf
add
mov
add
jle
adc
cmpsb
jne
inc
push
call
mov
repz
js
fdivrl
lock
gs
out
jp
sbb
mov
push
add
mov
dec
gs
jno
mov
repz
popa
iret
jp
mov
sbb
push
push
arpl
dec
gs
lcall
and
adc
cltd
xor
jb
fs
mov
sub
fldl
mov
cmp
repnz
ss
sub
shll
das
loopne
mov
xchg
mov
inc
sub
loop
adc
jae
mov
jne
stc
add
mov
inc
adc
dec
fcmovnu
xchg
push
lods
push
out
ss
idivb
mov
and
movsb
sahf
xlat
cmp
jge
roll
xchg
aad
jecxz
cmp
fbld
dec
popf
fwait
icebp
cmp
and
lods
and
dec
loop
cmp
pop
mov
jle
xor
or
mov
scas
in
sub
add
repnz
jl
mull
jae
mov
push
in
ss
cmc
cwtl
or
gs
hlt
out
xchg
add
leave
mov
jle
pop
aaa
push
cmp
fnsave
ret
pusha
sbb
mov
lds
in
jl
std
cmc
dec
inc
xor
rolb
ljmp
lock
mov
fwait
dec
aam
jno
mov
insb
lods
inc
scas
scas
mov
lds
dec
insl
xchg
dec
jmp
cmp
pop
mov
cs
jae
mov
jb
std
addr16
out
and
sub
insb
movsl
xor
push
sub
jae
pop
insl
orb
pop
inc
xor
icebp
je
dec
xchg
xor
int3
mov
add
rolb
sbb
adc
inc
fdivs
out
push
lret
mov
stos
stos
push
pop
repnz
cmovns
inc
jl
add
jge
pop
stos
inc
jmp
cmpsl
fstpt
gs
int
dec
dec
movl
mov
xsave
inc
jbe
sti
fildll
add
loope
out
mov
fwait
dec
add
movsl
rol
imul
inc
ret
aad
mul
imul
sbb
aad
jge
dec
sbb
pusha
pop
lea
adc
lds
push
fldenv
cmp
adc
out
adc
mov
cmc
jnp
lret
testl
mov
into
sbb
push
outsb
int3
xor
in
inc
add
or
inc
adc
jbe
mov
lds
sti
inc
imul
push
jl
dec
lods
bsr
pusha
adc
sti
sub
js
push
mov
popa
test
outsl
mov
push
ret
sbb
inc
jno
push
test
cs
jae
sbb
push
in
popf
sub
mov
jmp
loopne
push
jb
rclb
imul
mov
divl
or
negl
aad
lods
insl
aad
sbb
adc
icebp
add
or
sub
ds
out
and
nop
movsb
loope
adc
adc
fists
fimull
mov
mov
and
jle
sub
mov
add
push
push
push
pop
mov
adc
cmpsb
ds
out
xor
push
insl
fldcw
in
popa
mov
pop
cld
sub
insb
cmpsb
adc
addb
mull
fwait
rcr
pop
jecxz
fcomip
inc
rolb
das
push
inc
lret
cmp
leave
das
and
and
lret
xchg
inc
inc
test
sub
sti
fdiv
mov
fsubrs
and
sti
out
scas
adc
mov
push
jbe
jbe
mov
lret
adc
mov
inc
jg
jp
jmp
sarb
cmpsb
test
lahf
fstl
testb
cmpsl
pop
fbstp
push
lret
sti
add
js
dec
cmpsb
vandnps
ja
int3
and
xor
sub
jae
xor
mov
dec
xlat
aaa
or
pushf
push
mov
mov
cmp
sbb
rcr
mov
sub
hlt
bound
push
nop
movsl
jno
mov
fucomip
or
add
jmp
jae
cld
adc
inc
fstps
mov
sub
imul
add
adc
enter
add
mov
int3
cmp
xor
xchg
movsb
jg
shlb
adc
or
jae
add
add
sbb
push
rcr
mov
pop
push
inc
arpl
mov
movsb
dec
mov
xor
jbe
or
fistpll
fwait
rclb
das
xchg
aad
cmpsb
add
xchg
filds
fidivrl
out
divb
imulb
adc
mov
mov
and
cli
fwait
lds
insb
jg
or
adc
arpl
mov
push
movsl
in
pop
dec
inc
sahf
jae
into
or
divb
and
mov
xchg
out
jg
not
adcl
pop
xlat
lea
mov
daa
cmp
jge
popa
and
pop
sbb
mov
mov
pop
and
push
pusha
shll
mov
mov
mov
clc
pop
mov
mov
jle
mov
sbb
cltd
mov
icebp
shrb
rorl
sub
mov
mov
sub
ds
jp
js
cmp
pop
jle
sub
sub
pop
jae
jo
cmp
js
pusha
add
or
sbb
push
ja
mov
dec
pop
cmp
pushf
out
das
test
test
inc
mov
cld
clc
or
lret
mov
xor
in
stos
dec
jp
xchg
shlb
test
fiaddl
push
std
pop
mov
sbb
pop
lcall
adc
arpl
lcall
pop
clc
xor
lock
fs
ljmp
imul
inc
jp
andl
negb
arpl
xor
data16
xorb
jle
aaa
ret
ss
cmp
rcll
mov
aas
inc
and
movsl
adc
or
cltd
inc
notl
loope
shl
mov
dec
inc
arpl
xchg
divb
int
jmp
dec
repnz
rcrb
out
jne
push
lds
xchg
sbbl
or
push
std
adc
movb
rcrl
jo
shr
scas
lea
jg
daa
jg
and
mov
rorl
inc
rorb
repz
push
aaa
xor
test
mov
cmp
mov
sub
rolb
pop
loopne
loop
jmp
jge
mov
mov
cwtl
mov
scas
fs
out
mov
stos
sub
jg
sub
int3
adcl
push
shll
dec
mov
sub
xor
cltd
or
push
ror
push
mov
mov
lods
sbb
xchg
push
inc
inc
les
mov
dec
cs
xor
cmp
inc
add
pop
mov
xchg
sbb
jns
xor
push
pop
sbb
adc
dec
ja
lods
scas
cmp
std
popf
dec
fcomps
pop
into
adcb
adc
int
inc
mov
mov
adc
push
xchg
movsb
addb
out
ds
cld
sbb
xor
mov
arpl
lea
mull
out
xchg
push
lock
or
pop
sbb
adc
jo
js,pt
xchg
dec
clc
adc
mov
rcll
add
sbb
lods
dec
jbe,pn
cmp
inc
adc
cwtl
add
push
xchg
lds
add
or
inc
push
mov
mov
pop
mov
icebp
aam
sahf
int3
js
gs
stc
mov
and
repz
xor
dec
mov
in
mov
mov
jne
xor
in
sarb
mov
rcll
pop
push
pop
stos
scas
inc
enter
test
mov
mov
out
dec
and
xorl
inc
iret
inc
lret
jnp
xchg
daa
test
xchg
scas
pop
mov
mov
ja
aas
add
push
sub
roll
or
lret
adc
test
lret
sub
xor
int
add
cmp
ret
inc
mov
or
mov
ds
jg
outsb
mov
cmp
ljmp
dec
bound
cmpsl
cli
mov
pop
mov
sub
mov
fwait
stos
pop
xor
push
cmp
cmpsl
test
xchg
xchg
hlt
pop
dec
xchg
int
push
std
cmp
push
mov
xorl
mov
push
pushf
cmpsl
mov
rcr
inc
sub
push
pop
imul
or
test
jae
xchg
cmp
push
mov
push
cmp
push
sub
xchg
out
ret
cmp
fistl
mulb
imull
shr
inc
mov
lcall
pop
and
sti
adc
das
mul
imul
fimull
push
out
hlt
imull
sbb
dec
cmp
mov
fistps
icebp
mov
loope
pop
xor
popa
jb
cmpb
sub
in
sarb
inc
lea
mov
jg
aam
add
orb
call
xchg
les
push
movsb
mov
orb
add
jge
leave
sbb
lock
rolb
xor
adc
outsb
mov
mov
mov
jno
pop
sti
jbe
sub
jne
aaa
fldcw
jbe
std
jbe
jae
mov
xor
out
jb
fs
push
mov
inc
ja
inc
fadds
lcall
fisubs
xchg
pop
mov
es
and
or
pop
xor
lock
sbb
std
movhps
cld
fildll
scas
mov
movsb
mov
cwtl
lret
imull
cs
xchg
inc
ret
jbe
scas
aad
rclb
in
insl
test
mov
pop
aad
jne
sbb
pop
loopne
adc
out
push
adc
xchg
sub
jg
xor
lds
mov
push
mov
sarb
rcrb
mov
inc
pushf
adc
adc
cmp
rol
clc
xchg
fwait
test
mov
cmp
mov
jmp
push
dec
pop
jo
push
mov
fnstcw
sbb
adc
cwtl
ss
es
xchg
push
cmc
cltd
ret
movsb
fsubs
ljmp
sub
push
adc
out
inc
dec
std
cmpsb
adc
mov
and
mov
pop
adc
lock
int
and
nop
arpl
pop
pop
xor
pop
jle
popf
ljmp
push
mov
jns
jns
in
out
or
pop
lds
ja
adc
adc
push
xchg
adc
std
pushf
loope
fpatan
in
or
inc
out
sahf
aaa
scas
lret
orb
push
pusha
xchg
movsb
cmp
repnz
clc
stos
fdivr
push
cmp
ffree
mov
jae
pop
push
jno
mov
mov
xchg
sbb
out
pop
scas
pop
sbb
mov
cmpsb
jl
stos
xorl
lahf
xchg
int
inc
jge
push
repnz
das
push
ficompl
mov
jecxz
cld
mov
and
pushl
push
xor
dec
sti
mov
xor
fdivrl
sbb
xchg
mov
and
push
cmp
std
adc
bound
int3
jmp
push
sub
pop
sbb
shr
mov
cwtl
pop
pop
outsl
icebp
push
out
xchg
shlb
mov
aad
lret
hlt
pop
movsb
arpl
test
sbb
sti
insb
push
jmp
jmp
pop
outsl
mov
cmpl
or
mov
test
inc
or
out
adc
dec
cmpsl
pop
test
jecxz
add
iret
testl
pop
daa
in
jp
aas
nop
aaa
es
mov
in
cmp
sti
sbb
ret
push
inc
push
push
stc
dec
leave
cmpsl
leave
enter
dec
scas
push
push
shlb
xchg
fidivrs
fisttpl
addr16
into
or
cmp
or
lock
cmp
rcll
aaa
bound
in
inc
out
cwtl
jne
mov
jnp
movsb
xchg
and
xlat
in
mov
mov
sub
aad
or
loop
rcrl
into
stos
cmp
out
push
mov
jnp
stos
in
sub
scas
data16
loopne
cs
or
cmpsl
add
pop
dec
pusha
test
shl
ficoml
mov
mov
jge
jecxz
pop
lret
fcomip
pop
lock
test
pop
jle
or
fimuls
sbb
movsb
lret
adc
dec
idivb
xor
adc
aam
lds
ja
xchg
push
push
lods
xchg
js
lock
jae
popa
sub
push
xor
imul
sbb
in
mov
into
sbb
pop
inc
inc
loopne
pushl
scas
icebp
jnp
subl
ljmp
push
pop
decl
aas
sahf
and
fiadds
push
pop
js
test
inc
out
shlb
xlat
dec
add
push
sub
sub
in
call
push
xor
fs
les
mov
loope
sub
out
outsb
pop
imul
roll
and
cmpb
js
dec
sbb
loopne
hlt
into
je
in
dec
pop
lret
pop
xor
xor
js
adc
out
test
push
xchg
cwtl
cmpsb
js
aam
cmp
scas
mov
sarl
int
jbe
bound
inc
xchg
xor
pop
pop
pop
scas
arpl
hlt
mov
int
mov
adcl
out
xor
shll
dec
fsts
dec
orl
xor
dec
mov
pop
cmp
jb
adc
jns
aad
ret
xchg
or
and
add
insl
pop
add
add
cwtl
mov
add
xchg
pop
or
loop
adc
nop
cmp
mov
adc
std
sub
ss
pop
mov
sub
insb
sbb
ret
push
adc
lods
insl
mull
dec
sbb
push
pop
cltd
push
aaa
jo
pop
outsb
mov
adc
ficoml
dec
aad
loopne
adc
cmpsb
or
gs
push
push
jle
mov
push
lcall
add
int
jb
ret
aas
cmpsb
nop
rcl
sbb
push
jge
lock
cmpsb
xchg
sub
pusha
aaa
mov
inc
hlt
xlat
xchg
sbb
mov
jg
mov
cld
sbb
movb
ljmp
jl
xchg
jl
std
dec
xchg
outsb
repz
testl
mov
fildll
pop
mov
inc
inc
mov
and
and
popa
add
mov
in
xlat
mov
aaa
aas
repz
fisttpl
mov
outsl
and
jle
mov
or
sahf
mov
xlat
arpl
rcrb
push
iret
hlt
push
push
mov
and
sbb
xchg
adc
out
ljmp
mov
mov
mov
push
mov
aad
push
scas
sahf
mov
in
pop
push
or
popa
fildll
fwait
mov
mov
sub
mov
mov
fimull
outsb
lock
push
loope
popa
cmp
cmp
jno
dec
jp
sub
xor
adc
test
out
mov
sub
fsubr
inc
rol
les
add
incb
adc
int3
push
aam
test
dec
xchg
xor
inc
push
and
sbb
jg
jo
and
clc
mov
adc
pop
movsl
cwtl
out
or
ja
insl
jno
mov
sbb
lahf
mov
dec
shrb
add
call
xor
push
mov
arpl
fbstp
fwait
add
jmp
add
dec
loope
aad
pop
sub
test
scas
inc
rcrb
push
jnp
aas
rcll
jnp
and
movsl
ds
pop
xchg
sub
xor
int3
fsub
add
mov
push
je
fcoml
mov
sbb
jle,pt
inc
mov
jbe
sub
inc
in
jge
and
shl
pop
gs
inc
popw
push
jbe
ja
jae
mov
stos
pop
add
decb
jge
loopne
popf
inc
iret
ja
xor
dec
add
scas
rorl
cltd
int3
mov
jnp
mov
out
aad
js
fsubp
cwtl
outsb
fsubl
push
inc
jns
push
jmp
ja
cwtl
ret
decb
ret
idivl
jb
imul
test
leave
add
sub
jle
jmp
mov
fisttps
push
or
in
js
pop
int
dec
fs
lea
mov
popf
or
lock
rcrb
loopne
leave
xor
lret
sbb
cmp
pop
hlt
call
xchg
fldl
movsb
add
fdiv
pop
push
lods
pop
aaa
adc
inc
lods
xchg
mov
cwtl
outsl
lods
clc
and
lock
bound
test
ret
cvttss2si
adc
call
in
scas
sbb
push
outsl
inc
mov
mov
aas
or
pop
out
push
or
and
dec
repnz
and
pop
les
les
jg
xlat
dec
mov
xlat
sbb
enter
movsb
xor
loope
and
jecxz
mov
imul
mov
cli
jge
call
mov
lahf
dec
subps
xchg
test
out
xor
add
mov
movsl
pop
repnz
jb
mov
push
inc
mov
sahf
fwait
adc
push
pop
ret
sub
loope
jge
iret
inc
jecxz
push
insl
mov
punpckhwd
daa
jecxz
jl
call
mov
pop
mov
ss
scas
leave
mov
negb
les
lret
cmp
add
mov
mov
ljmp
sub
add
cs
sbb
xchg
push
test
mov
adc
cmp
xchg
repz
pop
push
mov
cmp
test
mov
shrb
push
outsl
test
adc
cmp
cmp
cmp
mov
popl
leave
leave
adc
dec
mov
fwait
test
enter
mov
cltd
xchg
inc
lahf
push
ja
loop
shrb
fwait
sahf
cmpsl
loopne
sbb
xchg
nop
popa
out
ds
lock
out
in
hlt
orl
dec
nop
lret
mov
sbbb
xor
mov
je
idivl
clc
jecxz
inc
outsb
cmp
push
rol
mov
xor
mov
push
jne
dec
cmp
leave
xchg
jno
cltd
jbe
sbb
xchg
or
dec
stc
aad
sarl
add
ficoms
and
ss
xor
filds
pop
sub
jecxz
and
jmp
xchg
fisubs
jle
push
test
ljmp
sbb
mov
arpl
push
loope
xlat
in
cmpsb
sub
sub
push
mov
mov
cs
adc
push
mov
push
fwait
addl
xchg
imul
pop
inc
mov
jmp
pop
fsub
jmp
mov
push
std
mov
fwait
xchg
insl
lret
stc
jge
mov
mov
lds
cmp
nop
add
pop
pop
push
ret
add
dec
iret
push
ja
test
lea
push
aaa
leave
dec
mov
cmp
or
or
push
andb
ja
jno
bnd
cmpsb
push
adc
aaa
out
out
sub
into
inc
push
pop
xchg
cmp
rol
jle
outsb
xchg
in
aam
dec
pop
mov
outsb
ja
dec
mov
scas
inc
pop
popa
std
inc
lock
jne
sbb
push
outsl
pop
in
cmp
mov
jno
cmc
adcb
pop
outsb
stos
inc
out
nop
cltd
popa
cwtl
dec
mov
mov
jmp
lret
filds
loope
pusha
sbb
fmull
mov
enter
xchg
pop
mov
ljmpw
xor
mov
nop
dec
pushf
sub
dec
fldcw
sbbb
jl
sub
sbb
sbbl
je
and
pop
in
shrb
mov
mov
dec
aam
jnp
add
sbbl
test
push
mov
adc
xchg
outsl
xchg
jg
fistpl
hlt
jo
bound
sub
sti
enter
in
mov
out
fldt
sub
cwtl
scas
adc
filds
stos
inc
push
xor
or
nop
fwait
mov
or
mov
sub
aaa
xchg
mov
ss
fsubs
outsb
test
lds
out
jl
xorb
test
push
xchg
dec
addr16
imul
dec
and
fstps
in
xchg
push
mov
daa
jecxz
mov
mov
gs
jg
inc
xlat
or
inc
xchg
sbb
or
pop
cltd
fistps
mov
adc
pop
sub
jge
and
lods
mov
lock
in
push
xor
test
leave
mov
xchg
mov
fnstenv
mul
sub
mov
mov
roll
xchg
mov
fldt
aad
out
mov
std
in
ljmp
ret
mov
lret
push
cmp
xchg
xor
sub
test
pop
and
sub
pop
out
push
push
leave
sahf
xor
es
test
or
cmp
iret
xchg
loop
push
inc
lret
loope
dec
and
enter
imul
shll
jmp
mov
pop
sbb
mov
sub
sbb
nop
mov
mov
sti
out
xor
arpl
rcll
mov
cs
adc
mov
cmp
or
iret
ds
popa
lods
mov
dec
out
ja,pn
push
jecxz
cmp
cmp
hlt
jl
fcos
dec
jb
fisubrl
add
hlt
in
repz
aad
mov
icebp
mov
sub
sbb
adc
jae
lahf
hlt
push
jp
xchg
cmp
push
push
lea
push
inc
fwait
sbb
insb
decb
push
inc
mov
inc
push
js
xor
mov
in
sub
fildll
shlb
out
mov
mov
xchg
cmp
shl
xchg
cmp
add
add
dec
out
pusha
enter
lcall
mov
sahf
movsl
push
pop
push
popf
bound
adc
fistpll
pop
scas
push
test
push
pushf
aas
fisubl
adc
movsl
stos
pop
hlt
int
test
or
daa
and
dec
ret
jle
push
sbb
sub
out
ss
mov
xor
sub
fwait
lock
ss
clc
cmp
mov
and
movsl
or
pusha
lock
cmp
mov
sbb
sub
orb
sub
imull
sub
push
stc
in
outsb
and
jo
mov
sub
into
sub
mov
cli
mov
push
fwait
jae
sbb
xorl
int3
popf
mov
lea
xchg
fcmovu
daa
movsl
arpl
xchg
xchg
sbb
pop
xchg
add
dec
out
lea
mov
pushf
jp
orb
mov
fcom
lcall
aas
out
stos
mov
orb
mov
js
mov
ljmp
dec
push
mov
cmpsl
aas
data16
cmp
inc
sub
push
fisubl
adc
int
jb
fidivrl
dec
sub
ja
cmp
or
lock
sbbb
stos
cmp
fcomps
xor
stos
inc
mov
movsl
pushf
mov
ja
sti
push
or
sbb
mov
jmp
adc
xor
imul
xor
stc
aaa
push
lods
in
in
into
push
daa
std
aam
ds
xchg
or
or
in
mulb
clc
mov
aaa
pop
jns
pop
xor
push
jg
lahf
mov
push
jnp
xlat
mov
popf
addr16
in
mov
movsl
cmp
fld1
popf
in
movl
sbb
data16
mov
and
jnp
jo
sub
mov
call
imul
or
mov
xchg
arpl
insl
or
cmc
jne
ret
jne
fidivl
xor
jl
lea
inc
add
push
icebp
or
out
jno
mov
push
testl
inc
loope
ss
pop
test
ds
dec
jecxz
mov
sub
jmp
xlat
jmp
add
shlb
mov
xchg
push
mov
push
cli
or
cmc
push
jbe
lcall
iret
push
cmp
mov
faddp
jae
inc
insl
nop
in
imulb
xor
test
mov
and
dec
pop
xor
cmp
fdiv
cmp
adc
mov
pop
mov
jg
jne
xchg
sub
sti
add
movsb
jbe
or
adc
fnstenv
pop
jp
push
inc
add
enter
cmc
jge
jl
adc
pop
push
jmp
ljmp
movsl
pop
xchg
inc
outsl
out
or
xchg
into
add
and
leave
xchg
loop
pop
xor
jl
inc
loope
into
adc
sarl
rclb
add
mov
adc
pop
in
imul
mov
fcmovu
sti
sti
pop
mov
xor
out
aaa
int3
jbe
popf
mov
icebp
push
aas
adc
loop
lret
fiaddl
mov
adc
push
outsb
jg
or
inc
or
pop
dec
sti
movsl
sbb
and
pop
jp
xchg
pop
inc
repnz
or
stos
adc
xchg
std
mov
jp
add
dec
bound
out
jmp
div
xor
idivb
jge
nop
orl
test
jge
gs
pushf
andb
jo
gs
outsl
adc
clc
jge
daa
cmp
jl
shrb
stc
jno,pn
pusha
sahf
stos
add
mov
roll
cmpsl
add
out
rclb
jnp
call
popf
or
jb
push
cmp
add
sbb
xchg
sbb
mov
pushf
fcoml
movsb
xchg
call
insb
cld
sub
mov
fidivrl
push
pushf
pop
das
inc
das
dec
inc
int3
bound
out
iret
add
outsb
lahf
cmp
dec
xchg
jl
or
rcll
xchg
dec
mov
mov
and
xor
lcall
jnp
push
cmc
fcmovbe
cmp
sub
lret
add
inc
mov
ja
mov
pop
nop
dec
inc
daa
mov
mov
jbe
pop
andb
sbb
push
mov
jo
mov
inc
pop
xchg
es
jp
or
push
nop
adc
cld
mov
fprem
xor
and
lock
and
xchg
adc
pop
addl
out
jge
push
sub
or
add
iret
data16
xchg
mov
movsb
jle
mov
faddp
das
pop
jb
sbb
cs
adc
scas
js
mov
ljmp
fcomip
pop
jne
test
imul
dec
sarl
cmp
cmp
es
dec
js
jle
push
inc
scas
sahf
adc
inc
aas
test
stos
xchg
mov
pop
lock
mov
mov
outsb
cmpl
sbb
xchg
mov
or
and
fidivrl
fs
xchg
cltd
outsl
bound
sub
mov
popa
fcom
imul
xchg
jae
lret
or
dec
cmp
sub
jne
shl
mov
mov
imulb
out
xor
xchg
testl
fxch
fdivs
shlb
mov
jo
cmpb
pop
bound
scas
loope
inc
mov
adc
sbb
lret
lret
aam
aad
adc
dec
sub
mov
into
out
lea
ret
pop
sti
fisubl
push
aas
sbb
idivb
out
adc
pop
xor
add
sbb
mov
adc
cwtl
je
mov
jp
mov
mov
decb
in
pop
clc
in
dec
jbe
sbb
inc
sbb
xchg
jb
out
pusha
fyl2x
pusha
push
mov
ffree
jno
fisttps
jns
push
in
xchg
test
jbe
aad
cmp
xchg
cmpl
aad
xor
ret
jb
rcr
xor
mov
xchg
adc
cli
sub
pop
cmp
orl
cmpb
cmc
cli
or
into
cmpsb
or
cmpsb
add
jno
pop
pusha
sarl
and
jl
ud0
dec
adcl
lock
sar
mov
inc
fisubrs
fists
inc
push
and
or
dec
je
inc
sahf
iret
in
outsb
fmuls
push
dec
jae
cwtl
jg
pusha
dec
mov
ljmp
ja
data16
xchg
stos
inc
cld
mov
shr
or
ss
mov
jecxz
lods
fidivl
testb
out
adc
mov
aam
ss
lods
aas
mov
sbb
jns
stc
repz
imul
xor
imul
cmpsl
out
pop
or
out
in
movsl
sti
pop
jne
daa
rorb
pop
addl
insl
add
movsl
fidivrl
cltd
and
es
mov
data16
test
data16
ret
pextrw
mov
je
sub
movsb
mov
addr16
mov
dec
and
add
roll
loopne
push
ret
cmpsl
ljmp
pushf
rorb
stos
aam
add
cli
push
mov
fnsave
lds
sbb
sti
call
mov
dec
add
pop
mov
pop
and
cmc
call
and
mov
push
xorb
mov
cmp
imul
and
sti
add
jnp
in
push
pop
jns
mov
sub
icebp
jae
gs
mov
jecxz
mov
lock
out
xor
roll
push
xor
push
sti
dec
repnz
mov
notb
andl
adc
popa
and
sti
ret
xor
int3
jne
out
mov
xchg
int
dec
and
in
and
sub
aam
std
call
push
loopne
add
adcb
arpl
sbb
out
std
lret
xchg
cmp
jp
iret
leave
repnz
cwtl
and
sub
mov
fst
sti
add
test
and
out
xor
aaa
add
mov
xchg
cmc
cmpsl
adcl
mov
pop
pop
movsl
jl
out
hlt
pushf
aaa
fwait
dec
cmp
xor
mov
inc
xor
bsr
jnp
mov
jns
and
mov
shlb
jnp
out
mov
sbb
mov
imul
aam
cld
xor
or
push
fldl
xchg
mov
roll
pop
ds
mov
aas
sbb
pop
adc
mov
imul
mov
fstps
je
test
add
pop
call
mov
loope
aas
hlt
pop
sbb
cmpl
xchg
inc
sti
shrl
lods
push
addl
fadd
lcall
sti
push
add
jmp
jo
test
in
sbb
push
loopne
mov
inc
icebp
cmc
sbb
movsl
jecxz
or
shll
jne
scas
push
loope
sbb
and
test
daa
push
out
sbb
sub
mov
dec
sub
sbb
mov
lods
cli
sub
fisubl
push
and
stc
lahf
inc
jp
les
test
pop
sbb
mov
xchg
pusha
xchg
dec
mov
bound
daa
data16
out
xchg
inc
bound
gs
or
shrl
mov
or
std
inc
scas
mov
xor
pop
push
movsb
add
pop
jmp
in
fld
and
xor
pop
fwait
adc
mov
dec
sbb
push
inc
xchg
push
push
cwtl
lea
scas
mov
cwtl
jle
or
imul
cmp
dec
arpl
mov
xchg
mov
int
mov
xlat
mov
xlat
clc
xchg
xchg
jle
cmp
jmp
dec
mov
dec
fcmovne
filds
or
jbe
jno
inc
inc
lret
test
fidivrs
test
push
movntps
sbb
dec
xchg
xchg
daa
cwtl
xchg
push
mulb
or
test
push
in
sbb
cmp
mov
dec
or
cmp
dec
inc
pop
sub
mov
aaa
mov
ret
add
cmc
pushf
outsb
fnsave
mov
lahf
fucom
sbb
lahf
out
lret
ret
add
push
lcall
xchg
shl
push
jle
push
xchg
test
sub
cmpsb
cmpsb
push
xchg
adc
mov
push
outsb
cmpsl
outsb
in
push
je
insb
push
fcompl
mov
fwait
in
in
mov
mov
xor
bound
cmp
addr16
pop
ss
add
xchg
fisttpll
addb
xchg
xchg
mov
lds
int3
js
cmp
leave
repz
stos
inc
aam
sti
movsl
and
ljmp
adc
aam
lock
out
lahf
jnp
dec
cmp
push
jmp
ljmp
xchg
xchg
shlb
iret
sub
sbb
jns
lcall
imul
mov
pop
out
mov
pop
or
dec
insb
hlt
xor
mov
fwait
xchg
cmp
rorb
mov
in
jns
inc
xchg
loop
repnz
xchg
push
filds
fldt
or
xor
pop
mov
xor
iret
mov
movsb
in
inc
imul
test
mov
imul
pushf
xchg
jbe
in
nop
dec
mov
adc
sbb
jo
sub
xchg
into
or
lock
xchg
jmp
in
cmpsb
sub
aam
adc
mov
push
xor
jle
mov
sahf
int
push
xchg
inc
or
data16
ja
jbe
inc
mov
jmp
call
cs
adc
loope
mov
push
jns
or
xchg
jns
cmp
inc
mov
lcall
nop
inc
scas
mov
add
pushl
sub
je
cmp
adc
cs
cmp
hlt
imul
jle
or
cmp
jl
fs
mov
repnz
push
loop
add
ficoms
addr16
adc
push
push
rorb
sub
sahf
mov
inc
sbb
loopne
dec
es
jae
jae
push
mov
ret
inc
mov
fadds
sbb
pop
sub
sti
daa
jge
mov
scas
test
jbe
rol
test
hlt
dec
out
mov
mov
mov
in
daa
pop
arpl
adc
push
xchg
mov
push
jns
out
arpl
adc
cmp
jno
dec
into
jmp
xchg
jmp
xchg
es
adc
out
cmp
outsl
cld
cmp
sbb
ror
sar
xchg
iret
add
out
aas
and
lods
dec
push
add
loope
cmpsl
mov
push
xchg
push
pop
clc
mov
stos
cmp
mov
xchg
add
pop
inc
pushf
adc
int3
xlat
outsb
nop
jecxz
inc
cld
xchg
cmpsl
out
or
rorb
xor
sbb
sub
pop
and
fisubrl
jmp
sbb
dec
lret
rcrb
std
xchg
mov
lret
stos
pop
fisttpll
loop
hlt
subb
adc
mov
mov
movsl
push
jg
dec
pushf
loop
sbb
push
pushl
cmc
cld
xor
sbb
jecxz
sbb
flds
es
mov
jge
pop
push
dec
jno
test
imul
pop
mov
xchg
sub
sahf
push
cwtl
jp
cmp
dec
daa
sub
mov
repz
in
repz
mov
cmp
lea
inc
and
push
jecxz
jns
aam
insb
xchg
enter
or
out
int3
sarb
sbb
mov
test
cwtl
repz
mov
jg
ljmpw
inc
cmp
lret
movsl
xchg
inc
jge
stc
arpl
test
and
das
pop
test
popf
loope
and
mov
lock
push
xchg
rclb
ffreep
dec
xchg
movsl
mov
mov
xor
daa
jb
xchg
dec
mov
xor
lcall
mov
aaa
aad
and
insb
dec
ret
and
push
cwtl
dec
cli
and
inc
sbb
int
xorb
inc
imul
icebp
jbe
cmc
rorl
nop
push
rclb
xor
int3
enter
cmc
sarb
in
fmull
stos
jle
rorb
lea
fidivrs
ljmp
sbb
mov
cmovp
mov
xchg
xchg
mov
pushf
jo
ds
test
mov
stc
jbe
inc
test
xchg
out
and
iret
push
jg
ret
mov
lahf
add
scas
ljmp
in
xchg
fsub
pushf
jmp
mull
fs
not
out
inc
xor
aas
ljmp
adcl
or
pop
cmpsl
dec
xor
ret
sub
rcl
add
jg
aaa
sub
fisttpll
repnz
pop
setae
imul
pop
xor
add
push
sti
lock
xlat
andb
mov
incb
std
and
and
dec
lock
movsl
or
data16
mov
sbb
push
jno
push
lea
test
out
mov
cmp
dec
push
aad
stos
dec
lcall
les
in
add
adc
je
xchg
cmpsl
mov
enter
in
or
sbb
or
lea
sub
jo
or
pop
jmp
test
notb
std
add
sub
mov
cld
jo
or
mov
es
xor
dec
inc
lcall
scas
imul
call
sub
loopne
jne
inc
push
inc
fucomip
jno
sub
cli
mov
cmp
andl
imul
pop
leave
pop
xor
lret
enter
xchg
out
mov
inc
outsb
push
pop
push
sbb
adc
or
pop
xlat
aam
xchg
movsb
pop
mov
mov
dec
lcall
sbb
sub
cmp
imul
int
mov
test
xor
idivl
test
idiv
mov
cli
xchg
jnp
shll
dec
add
mov
xchg
mov
cld
cmp
pop
rolb
mull
inc
dec
lcall
sub
std
jp
test
fiaddl
pop
dec
cmp
adc
xor
lea
imul
shrl
sbb
int3
adc
fcoms
out
insb
fldcw
push
pushf
jo
cmp
pop
or
dec
lock
adc
sub
sub
pop
jae
or
call
cmp
inc
lock
pop
ja
popa
jge
scas
fiadds
or
movsl
shlb
jmp
stos
pop
adc
aaa
sub
test
popf
lret
jecxz
pop
loope
les
mov
or
in
adc
ljmp
cmp
sub
repnz
sbb
mov
in
clc
cmp
std
xchg
jb
cmp
lods
insb
add
lahf
jecxz
and
lahf
mov
arpl
xchg
sub
dec
pop
mov
and
pop
push
xlat
lds
es
xchg
call
shll
je
add
push
pop
es
xor
push
inc
insl
test
pushf
insb
cwtl
ds
cmpsb
push
or
mov
mov
sbb
inc
xchg
mov
into
jb
push
ret
xor
sbb
rolb
mov
push
mov
das
jo
cmpsb
aam
jge
sti
ja
addb
mov
push
jo
mov
je
xor
icebp
adc
ja
or
sbb
inc
nop
adc
sti
movsb
inc
sub
repz
ficomps
mov
mov
or
mov
cmp
adc
jbe
fimuls
mov
pop
repnz
add
dec
sbb
xchg
push
insb
popf
lcall
jmp
dec
mov
adc
scas
jns
jne
mov
lret
push
scas
jb
sarl
cmc
jge
adc
push
repnz
int3
add
adc
jle
fists
adc
adc
jl
push
fistpll
mov
inc
fmul
sbb
adc
adc
aad
inc
out
sbb
arpl
dec
mov
mov
xchg
lcall
or
fwait
jl
out
xor
dec
push
cmp
jp
push
cmpsl
or
orl
pop
ret
adc
fdivrl
xchg
popf
cwtl
icebp
add
inc
mov
in
mov
lret
into
loope
icebp
sub
jmp
or
push
add
cmpsl
xchg
add
pop
in
mov
push
fucomp
mov
sub
stc
fcmovnb
and
sub
cmp
or
ficomps
es
jmp
shlb
sbb
push
addr16
mov
in
mov
jns
push
pop
loope
insl
lcall
aaa
stc
inc
aas
cli
add
fmull
mov
loope
mov
add
push
out
arpl
pop
and
add
adc
sti
mov
orl
daa
dec
addr16
xor
jo,pn
and
push
dec
pop
adc
std
xchg
jb
mov
insl
mov
sub
sub
or
cmp
jno
pusha
stc
rorl
dec
push
mov
test
addr16
idivl
and
push
mov
test
push
inc
mov
xor
fldenv
in
xchg
pop
or
rclb
jne
jne
subl
scas
lcall
mov
inc
aad
pop
pop
outsl
mov
inc
mov
mov
hlt
loopne
pop
cmp
test
lods
xchg
cmp
push
outsb
enter
cmp
mov
xor
pop
mov
mov
dec
dec
test
xchg
lahf
adc
xor
mov
sbb
das
cli
fwait
jmp
jne
or
arpl
jle
mov
aad
pop
xor
push
inc
mov
cs
test
inc
add
dec
cmp
outsl
inc
and
stos
fistps
xchg
pushf
push
adc
push
std
insl
xchg
roll
adc
push
adc
cmpsb
xchg
and
outsb
inc
fsubp
cmpsb
or
mov
push
inc
hlt
push
inc
xor
inc
insb
out
sub
int
ljmp
daa
cmp
mov
cmp
and
aaa
sbb
sti
mov
xor
in
jbe
pop
sbb
out
jmp
sbb
xor
jnp
and
xor
and
bound
cwtl
push
nop
test
cmpl
push
repz
pop
rorl
or
cmp
outsl
outsl
sub
cmc
cltd
push
std
sbbl
rsqrtps
cltd
jle
adc
push
sbbb
cmpsb
dec
push
dec
das
and
inc
lret
mov
mov
jns
jmp
aam
mov
mov
mov
int
mov
pop
mov
divl
aam
test
inc
fistps
icebp
inc
lds
push
and
mov
test
mov
lret
divl
sub
icebp
push
shlb
xchg
aam
sbb
sub
lods
sub
xchg
push
mov
sub
fs
enter
arpl
es
push
push
rep
add
mov
push
aad
out
aaa
xor
ret
lea
or
push
jmp
push
jmp
and
mov
fildl
lret
add
addr16
fldcw
mov
sbb
xchg
push
push
xchg
fsubp
and
jl
pop
cmpsl
pop
add
adc
scas
jns
push
cmp
pop
cmpsb
test
das
lahf
lahf
repnz
dec
lret
mov
mov
repz
inc
or
jmp
sub
sbb
cmpsl
jbe
js
cld
jmp
das
ret
inc
fcoms
mov
out
loop
or
out
call
cmp
pushf
data16
and
les
fdivr
mov
subl
cld
cltd
inc
mov
dec
aad
pop
repnz
push
push
mov
dec
xlat
sub
outsb
rcll
shlb
push
mov
cmp
add
xchg
lea
pop
jo
repz
xor
js
lds
lret
lds
jmp
xor
inc
sahf
xchg
and
lds
ljmp
sti
stc
push
jg
in
cmp
andb
hlt
scas
pop
sub
mov
xor
lods
xchg
out
iret
mov
push
subl
lds
loope
orl
out
cmpsb
push
jne
test
cltd
jmp
mov
sbb
lcall
pop
test
jns
ret
pop
cltd
xor
lods
push
mov
jae
lods
pop
js
mov
push
adc
aam
mov
add
pop
xchg
ret
loope
lock
pop
or
and
mov
push
xchg
ljmp
or
ret
cmp
dec
or
push
aaa
pop
shrl
adc
ret
sbb
cmp
mov
pop
sbb
imull
xchg
popf
fcoms
xchg
push
daa
aaa
outsl
rcrb
adc
test
jmp
sbb
pop
inc
mov
aas
sub
aam
xor
aam
sbbl
jns
pop
js
movsl
das
xchg
xchg
add
lcall
ja
arpl
push
ret
inc
adc
xchg
pop
notl
data16
xchg
and
lcall
and
ds
and
enter
movsl
lret
daa
push
adc
int
arpl
inc
xchg
push
push
jo
cli
cwtl
hlt
gs
or
dec
icebp
push
subb
pop
cmc
mov
imul
gs
mov
pop
mov
daa
jb
hlt
xchg
out
iret
mov
enter
pop
xchg
movups
jmp
in
xor
push
hlt
test
stos
arpl
fstl
push
mov
fs
mov
mov
lea
clc
rolb
mov
cli
push
mov
xchg
outsl
cmpsb
nop
inc
push
dec
bound
out
push
mov
sti
dec
inc
push
stos
sub
jg
es
lret
in
test
mov
bound
sbb
fidivrs
push
sub
fs
xchg
and
addl
inc
sbb
push
aad
rcr
xchg
xor
adc
or
ljmp
pusha
loopne
push
sbb
mov
dec
je
xchg
lods
lods
fldl
es
sbb
negb
jl
test
push
addb
std
xchg
repnz
mov
cmp
das
ficoml
jo
lds
int3
std
mov
scas
shll
sysenter
adc
leave
fcmovnbe
mov
rcl
mov
pop
sub
dec
mov
jg
push
stos
push
xor
out
inc
sub
cmp
mov
insl
cmp
pop
xchg
aad
mov
push
add
inc
std
mov
cmp
adc
add
cmpsb
mov
jae
xor
clc
lds
test
add
push
cmp
mov
mov
out
inc
lea
fisubrs
test
and
fadds
mov
pop
test
push
ja
cld
movsb
xchg
lock
push
push
stc
inc
and
xchg
sub
mov
xlat
push
push
imul
dec
and
in
sbb
xor
fidivl
add
and
xchg
pop
push
jl
mov
jmp
addr16
cmp
sub
movsl
rorb
cmp
lock
subb
outsl
xchg
pop
jl
cmp
xchg
addl
pop
mov
mov
mov
xlat
xor
inc
xchg
inc
or
fcoml
add
pusha
in
add
pushf
out
movsb
mov
ljmp
sub
push
xchg
out
pop
push
test
mov
inc
sub
popa
jge
add
mov
adc
mov
mov
loopne
loopew
jge
jmp
mov
gs
push
inc
adc
jecxz
fstpt
mov
mov
and
jae
mov
mov
and
ret
xorl
mov
rcr
clc
sub
cld
mov
stos
scas
add
pop
fsubl
jl
test
adc
aam
cli
rcrl
popa
push
mov
xchg
iret
mov
push
push
lea
adc
push
add
mov
andb
sbb
jae
bound
ljmp
adc
jbe
sub
and
jae
das
push
mov
xchg
adc
mov
out
cmp
call
sbb
jae
fs
xchg
mov
movsb
sub
or
pop
leave
mov
andl
dec
inc
cmp
cmp
mov
mov
js
sbb
call
add
xchg
pop
and
std
sahf
xchg
mov
push
iret
mov
pop
js
cli
cmpl
fldcw
test
mov
sahf
je
jl,pn
xchg
imul
mov
ror
or
pop
nop
inc
push
mov
inc
adc
nop
addb
enter
push
or
mov
mov
push
scas
les
xchg
sti
test
sbb
jne
pusha
ret
xlat
cmp
lods
or
mov
mov
shll
lcall
popf
cmp
or
iret
jnp
ja
movsl
dec
movsl
dec
jg
push
je
bound
inc
adcb
push
leave
int3
cmpl
sbb
fwait
js
nop
mov
dec
jle
sbb
mov
adc
lea
inc
inc
sub
pop
ds
pop
xor
addl
fildll
test
addr16
push
push
add
sub
insb
pop
test
xor
or
test
shlb
out
inc
lods
pushf
sahf
je
jnp
test
gs
sbb
sub
mov
bnd
pop
cs
and
ss
cmpsb
xor
repz
dec
xlat
xor
outsb
mov
test
icebp
int3
sbb
mov
sbb
cmpsb
pop
ljmp
fdivs
sbb
pop
xor
fdivl
cwtl
adc
int3
jae
cmp
je
leave
sbb
fwait
mov
lea
xchg
enter
xchg
shlb
mov
hlt
pop
pop
xor
push
pop
xor
dec
jnp
xchg
fimull
dec
inc
jne
cmp
dec
div
fstps
icebp
pop
and
lds
xlat
mov
out
sbb
xchg
pop
scas
mov
stc
cmpsb
hlt
notl
shll
in
inc
adc
scas
out
stos
outsb
xor
push
xor
rorl
popf
sti
aaa
push
popf
lret
push
or
cmpsl
mov
push
popa
mov
loope
cmpsb
shlb
inc
cmc
xor
cmp
addb
adc
and
imul
jno
jae
nop
inc
jb
popf
add
cmp
cmp
sti
divl
cld
ja
out
notl
add
push
dec
xchg
cltd
sub
dec
cmp
js
loopne
mov
mov
lret
lret
lcall
mov
cltd
jnp
pop
jne
add
fcomps
jb
push
out
jl
pop
jae
rcrl
scas
dec
mov
cmp
cmpsl
mov
ret
push
mov
push
aaa
icebp
mov
cmp
mov
test
fwait
xchg
mov
and
jp
inc
dec
call
lods
jns
mov
out
sahf
xor
push
and
pusha
iret
mov
xchg
in
leave
sub
cmp
call
mov
cmpsl
roll
scas
jno
int3
ficoms
test
mov
int3
or
popa
add
wbinvd
push
mov
mov
sbb
add
loope
or
inc
cmpsl
sub
arpl
or
scas
stos
out
shrb
adc
or
dec
test
cmp
push
jmp
add
and
cli
sbb
leave
addr16
pop
jp
dec
clc
mov
cwtl
sub
es
scas
jecxz
mov
pop
xchg
jnp
jae
test
mov
mov
fdivs
mov
mov
mov
inc
shlb
or
call
lods
pop
jg
mov
lock
cmp
and
xchg
mov
pop
pop
mov
mov
mov
cmp
mov
cmp
flds
push
insb
jbe
mov
add
popa
rorl
rolb
rol
in
call
pusha
jo
push
aam
pop
mov
movsl
or
push
mov
ja
pop
out
lea
andl
pop
enter
add
test
lret
adc
out
in
sbbb
add
and
pop
sbbb
hlt
cmpl
cmc
lahf
cltd
pop
and
dec
push
pop
pop
cwtl
in
jmp
mov
sbb
sub
call
imul
pop
mov
sbb
xchg
and
xor
ret
aad
cli
popf
push
test
jg
push
inc
add
gs
xchg
in
ss
cmp
movl
fbstp
lea
and
mov
lods
pusha
call
inc
in
jb
pop
jg
rcrl
imul
subl
pop
sbb
mov
daa
push
adc
lahf
rcl
push
mov
push
stos
cmpsl
sub
mov
cmp
hlt
or
pushf
pop
jle
sbb
cld
push
fwait
jl
popf
dec
adc
add
enter
jmp
and
push
mov
ds
mov
rol
in
mov
xor
adc
xchg
mov
imul
dec
cmpsl
and
mov
jns
jmp
inc
flds
mov
sub
push
and
in
jp
stos
xchg
lahf
cmp
sbb
xchg
cli
popf
dec
pop
inc
pop
cwtl
ds
mov
add
icebp
cmp
mov
out
test
imul
cmp
pop
pop
mov
cwtl
pop
jns
xchg
pop
test
rclb
sub
out
cmp
mov
lods
mov
push
xor
jo
es
push
movsl
pop
sbb
in
inc
mov
lea
pop
dec
jle
inc
fstpl
fcoml
xor
xchg
xchg
or
pop
mov
jmp
pop
insl
popa
pop
loop
imul
mov
add
xor
jbe
popf
call
in
and
test
sbb
movsb
mov
jnp
sti
dec
mov
pop
sarb
dec
or
jmp
sahf
sarl
push
xor
cmc
fbld
ret
cmp
lret
inc
mov
or
push
adc
and
mov
sar
scas
test
enter
adc
bnd
shr
cmp
mov
or
pushf
iret
inc
pop
dec
cmpsl
xor
roll
stos
stos
dec
insb
sub
pop
or
xchg
lret
sbb
sbb
add
pop
pop
test
xor
cmp
xchg
cltd
popf
lock
outsb
lea
inc
xchg
mov
fs
push
bound
mov
push
repnz
pop
or
sahf
cmp
cs
in
aad
lahf
sbb
and
mov
jmp
call
mov
inc
rcpps
or
pop
inc
ljmp
ret
sub
cmp
aad
js
xchg
cwtl
inc
fdivp
or
scas
das
lea
gs
and
popf
mov
in
insb
scas
inc
mull
sbbb
clc
mov
sub
out
mov
sub
dec
pop
xor
push
sub
insl
mov
pop
dec
pop
scas
and
pop
mov
pop
in
aad
mov
and
jle
shll
mov
sub
int3
xorl
push
xor
push
icebp
xor
jae
mov
or
jl
xor
push
and
pushw
insl
sbb
jle
pop
adc
push
fistps
push
cltd
push
sbbb
push
inc
mov
xchg
and
popa
push
faddl
pop
dec
mov
dec
fnstsw
dec
icebp
mov
mov
sbb
cmpsb
inc
xchg
add
sar
stos
mov
jecxz
in
popa
test
dec
push
out
into
fwait
push
and
xor
fcomp
sbb
pop
fistps
push
mov
fisubrl
insl
pop
cmp
xor
mov
mov
jne
fisubl
pop
or
and
fbld
xor
out
xchg
int3
aas
push
in
cmpsl
call
sbb
jnp
sbb
scas
call
adc
mov
xor
inc
mov
mov
pusha
adc
mov
mov
sbb
sub
mov
fimuls
xor
push
pop
pop
xchg
xchg
cmp
inc
es
sarl
mov
add
test
jb
pop
cmp
push
pop
shll
daa
sbb
sar
dec
mov
outsb
or
lret
sahf
fisttpll
xor
test
shr
dec
mov
xchg
addl
mov
cmpsb
std
ficompl
mov
jle
outsb
xor
pop
mov
daa
jecxz
js
daa
ret
cmpsb
test
mov
aas
mov
mov
movsb
leave
rol
js
or
pop
cmpsl
cmp
mov
lret
xchg
inc
cmc
mov
out
aad
jp
add
call
push
adcb
mov
lea
mov
movsl
daa
jge
sub
push
repz
add
and
sub
call
negb
ljmp
lret
or
push
ja
daa
xor
or
mov
sbb
inc
xlat
inc
je
popf
test
out
xor
mov
aas
lock
aas
cmpsb
shrb
addb
or
push
in
enter
hlt
out
adc
hlt
xchg
mov
out
or
fstpl
stos
mov
fstl
jl
add
out
daa
imul
inc
sbb
stc
ret
mov
push
xchg
aad
movsl
and
loopne
lcall
sbb
arpl
pop
inc
jno
and
bound
jb
jle
sub
pop
sbb
filds
repnz
aaa
sbb
mov
jns
rcrb
mov
jbe
pop
incb
cli
xchg
lcall
xchg
popf
jle
xchg
shr
mov
popa
out
or
mov
inc
sti
xchg
lss
ljmp
jle
lret
sub
lcall
inc
mov
scas
pop
repz
stos
inc
rolb
inc
loop
mov
sbb
movsb
orl
ljmp
sub
or
int3
stos
imul
stos
pusha
cwtl
and
pop
imul
and
cmp
adc
xchg
mov
sbbb
or
sahf
out
out
cmp
test
sbb
mov
adc
adc
hlt
aaa
xor
sub
icebp
mov
in
inc
sarl
ja
daa
imul
fisubrs
adc
inc
and
push
sbb
outsl
js
ret
int
iret
xchg
sbb
mov
scas
mov
pop
shll
mov
inc
or
mov
repnz
xchg
sub
imul
lcall
cmp
in
das
imul
fildll
xor
xchg
test
mov
js
dec
repz
fbstp
pop
ss
and
out
adcb
add
fisubl
in
mov
and
mov
sbb
leave
stc
test
jbe
mov
add
push
aaa
mov
fdecstp
test
push
gs
mov
and
add
inc
cmp
jno
mov
jbe
mov
jae
xchg
inc
inc
cltd
mov
fistps
and
int
cmp
cmp
rclb
mulb
push
sahf
pushf
xchg
push
mov
in
fmuls
mov
xor
sarb
or
lea
inc
or
xor
mov
pop
adc
adc
pop
pop
sbb
insb
push
clc
imul
xchg
add
sub
test
ret
movsl
adc
inc
aam
add
sbb
in
dec
inc
les
dec
sahf
repnz
mov
movsl
and
lret
hlt
fbld
std
pop
push
inc
xchg
sbb
sub
dec
das
and
repz
mov
repnz
sbb
andb
js
mov
lret
lret
mov
aad
orl
fwait
loope
inc
mov
mov
pop
aam
scas
and
or
mov
sbb
mov
stos
mov
gs
add
adc
ds
jmp
insb
jg
and
sub
inc
fidivrl
or
fsubl
push
pushf
stos
adc
mov
in
cwtl
mov
ds
enter
lret
push
lea
aam
push
notb
js
adc
mov
add
call
sub
xor
jle
stc
fmull
outsb
adc
ljmp
lret
aam
in
mov
test
mov
lods
out
stos
push
mov
out
fdivrl
int
pusha
cmp
or
ljmp
in
outsb
jo
out
lahf
sbb
sub
popa
pushf
aad
jecxz
ficompl
xchg
dec
in
ljmp
push
push
int
rcl
es
lahf
xor
jne
test
cmp
mov
cmp
popf
stc
loop
leave
cmpsb
push
pop
inc
out
cs
sti
mov
push
cmp
cmc
push
xor
jge
sbb
int3
cwtl
insb
aam
int3
jg
call
pop
mov
rorl
xor
loope
mov
sbb
in
jbe
mov
add
or
add
push
push
pop
inc
push
pop
push
adc
pop
xchg
mov
cmc
add
xchg
mov
popa
sar
inc
ret
cmp
xor
roll
movlps
pop
bound
dec
sahf
cmpsb
ja
pop
adc
pushf
dec
pop
lahf
cmp
xchg
dec
xor
jbe
add
sbb
incl
clc
inc
test
fnstenv
adc
test
lods
sub
dec
in
dec
fsubrs
mov
or
shll
mov
dec
xchg
jg
push
jno
add
cli
push
aaa
xchg
shll
incb
xchg
lods
sbb
pusha
cmp
cmp
mov
inc
fists
mov
cmp
std
out
adc
ret
push
test
loopne
pusha
mov
mov
dec
cmp
test
stos
inc
ret
rclb
push
adc
mov
xor
je
push
adc
xor
xchg
jo
xchg
xchg
pushf
mov
or
sti
inc
shr
in
js
test
adc
adc
jmp
js
push
stc
adc
dec
sbb
xorb
mov
jbe
jecxz
lea
pop
adc
or
test
std
add
testb
pop
ljmp
aas
inc
in
push
out
xchg
fldenv
pop
sbb
pop
cmovge
xchg
dec
fcmovne
loop
in
adc
stc
test
stos
dec
mov
mov
xlat
loope
sahf
sahf
std
aam
pop
or
nop
sti
mov
js
cli
test
out
xchg
jns
adc
push
imul
cmpsl
ss
les
add
fbld
lock
mov
aad
inc
in
xor
mov
loop
stc
sub
pop
test
dec
addr16
mov
inc
mov
and
sbb
mov
arpl
mov
sbb
addl
ja
idivl
cltd
or
and
mov
icebp
cwtl
sbb
rcll
leave
sbb
xchg
cmp
mov
pop
adc
and
fmul
cwtl
cmp
jle
pusha
adc
decb
call
fbstp
xchg
loop
adc
popf
loopne
mov
sub
mov
xorl
subb
mov
out
dec
cmc
cmp
int3
rcll
xchg
pop
add
loope
mov
pop
jl
add
sub
push
mov
pop
repnz
loope
jecxz
dec
cli
mov
sub
aad
sti
inc
xchg
gs
aad
pop
xchg
loopne
push
or
xchg
js
cmp
mov
push
ja
xor
andl
jl
mov
add
out
jbe
imul
fdiv
xchg
cmp
or
mov
icebp
clc
mov
push
scas
fisubrl
repz
cmpsb
xchg
dec
gs
sub
xchg
icebp
movsl
pop
or
sti
mov
push
mov
cmp
mov
cmc
xor
and
mov
stos
mov
adc
dec
inc
or
push
xchg
repnz
jp
dec
jge
das
sti
dec
jecxz
and
call
and
add
xchg
mov
jge
aas
int
loope
addl
xchg
js
xchg
loope
sbb
divb
shll
sub
xchg
xlat
mov
repz
test
iret
lcall
pop
leave
in
pop
js
outsb
cmp
shr
inc
cmpsb
push
jae
inc
lret
mov
sbb
mov
xchg
mov
adc
xchg
adc
push
lods
adc
icebp
insb
pop
nop
stos
and
push
sub
mov
sub
fs
leave
cmpsb
mov
sti
mov
mov
mov
mov
or
lods
and
fnstsw
sbbb
mov
push
pop
scas
cmp
cwtl
mov
out
inc
mov
xor
rorl
xchg
cwtl
fwait
push
xchg
lret
out
stos
comiss
jmp
mov
loopne
jmp
das
in
inc
data16
add
jno
loop
hlt
mov
xor
out
das
inc
jp
test
push
xchg
ret
push
dec
pop
repnz
in
jb
movsl
ss
mov
imul
sub
mov
ja
xor
xor
adc
ficoms
mov
in
or
popf
je
sub
push
insb
add
and
nop
mov
and
pushf
insl
ljmp
or
in
imul
inc
xchg
mov
xchg
jecxz
outsb
jp
mov
mov
or
cmp
fcmovnbe
inc
gs
mov
stos
pop
add
push
jnp
shll
ret
sti
popf
imul
push
push
or
jnp
adc
test
jbe
lret
jb
out
adc
jp
adcl
pop
stos
push
lcall
mov
inc
call
sti
add
jmp
mov
push
insb
ljmp
xlat
jecxz
scas
or
insb
test
adc
xor
frstor
mov
clc
icebp
dec
arpl
fs
or
pop
scas
and
adc
sub
cmpsl
ret
sub
mov
fcmovu
sub
jle
jo
add
stc
push
stos
jmp
dec
decl
mov
ss
sub
aad
push
pop
cmc
daa
fidivrs
mov
je
arpl
lea
push
sub
int
pop
daa
imul
push
nop
add
fisubs
push
insb
sbb
sbb
sub
rcrl
mov
inc
xor
icebp
sbb
test
sbb
mov
pop
xor
inc
fadds
mov
shll
jae
sbbl
int3
jbe
xor
and
adc
pop
gs
and
cmp
leave
addr16
int3
sub
or
pop
hlt
fstl
mov
jecxz
mov
les
lock
pop
xchg
aaa
pop
and
xchg
jmp
dec
or
lea
je
jo
jbe
jne
cmp
lret
xor
jecxz
mov
es
cmpsl
lcall
cld
sbb
mov
mov
pop
or
push
adcb
jmp
loop
lds
mov
pop
add
repnz
lahf
loope
movsb
lods
sub
pop
mov
dec
test
push
ret
out
out
adc
mov
push
add
fidivrs
nop
repz
pop
mov
cmc
and
pop
dec
sarl
stc
dec
add
daa
popf
xor
pop
mov
cltd
cmc
inc
cmp
push
jns
fsts
xor
jl
cmp
mov
xor
repnz
cmpsb
sbb
add
and
mov
cs
les
xchg
aam
aad
xor
inc
aam
sti
adc
nop
push
push
pop
push
sub
imul
sbb
and
aas
lahf
loopne
dec
jbe
enter
subb
ret
inc
test
cmovp
dec
xchg
jo
test
jle
fisubrl
int
arpl
stos
je
out
pop
subb
ds
int3
xchg
daa
notb
push
mov
cs
jo
mov
loop
sub
aad
dec
movsl
dec
sarb
fld
mov
adc
xlat
bound
jmp
gs
lret
ja
or
shrb
cmpb
outsl
out
xor
out
cwtl
imulb
xchg
call
mov
xor
shrl
addr16
idivl
adc
jp
scas
inc
add
sarl
add
xor
add
adc
push
pushf
pushf
push
js
ret
pop
xchg
fcoml
push
adc
mov
sub
xchg
mov
out
ds
jne
scas
ljmp
and
fstl
jo
fwait
push
clc
push
mov
popl
call
xchg
outsb
xchg
lahf
std
cmp
cmp
rcll
sbb
cmp
rorb
mov
jge
idiv
roll
adc
gs
xchg
ljmp
out
inc
insb
xchg
push
ljmp
out
call
sbb
dec
add
lret
fisubrs
js
push
pop
cmc
or
adc
cs
ja
mov
daa
push
popf
repnz
in
sub
sub
add
inc
testb
xchg
or
sub
sbb
mov
push
mov
cmp
jl
call
outsl
cs
data16
int3
lret
icebp
mov
ja
cli
mov
icebp
jle
imul
and
mov
lret
mov
mov
das
cmpsl
jne
adc
pop
push
rcr
sbb
clc
aam
adc
push
ja
jne
inc
mov
ss
shrl
xchg
ss
js
or
mov
sub
in
into
sbb
loope
push
xchg
sbb
hlt
mov
je
es
or
mov
dec
ds
test
cltd
aaa
test
or
cli
dec
and
je
stos
aas
push
aad
add
test
pushf
test
js
pop
dec
jmp
xor
pop
sarb
scas
das
adc
outsl
inc
out
lods
int
jge
sub
cmp
cmp
or
and
mov
xor
jnp
cs
rcll
popa
arpl
mov
cltd
xchg
and
sarb
shr
mov
cs
inc
and
lcall
in
aaa
push
scas
stos
sub
mov
jb
in
cmp
add
xchg
pop
and
enter
loop
add
xor
pop
sub
lcall
push
clc
mov
cltd
adc
mov
push
loopne
pop
push
inc
push
hlt
xchg
inc
dec
dec
inc
push
jns
loop
xchg
aad
dec
ret
xor
je
nop
sub
pop
add
imulb
rorb
daa
into
shl
rorl
gs
and
pop
cmp
pop
inc
sbb
insl
and
xchg
in
push
pop
mov
xchg
push
cwtl
mov
sub
loopne
and
sbb
push
sarl
jo
arpl
lock
xor
sbb
fcomi
pop
jns
cmp
movsl
mov
jl
ja
push
inc
movsb
sbb
into
pop
mov
pusha
ret
cmp
dec
push
imul
popf
leave
aam
xor
cli
in
call
push
jne
neg
loope
adc
jne
fsub
mov
dec
jecxz
fcos
pusha
mov
imul
in
loopne
stc
push
cmp
add
test
xchg
popa
mov
dec
inc
push
stos
je
inc
push
es
jl
lock
repz
lret
and
int
cld
adc
add
and
inc
popa
sub
adc
fisttpll
dec
mov
adc
cmpb
imul
mov
arpl
testl
rolb
ud1
mov
fsubrl
add
mov
imul
in
cmp
cvtps2pi
sbb
adc
fdivrl
adc
ret
lds
mov
add
xchg
lock
addr16
or
clc
cmpsl
popf
cmp
shrb
ds
bnd
adc
inc
outsb
cltd
xor
out
push
add
cmpsb
lods
adc
add
divl
xor
xchg
shl
or
in
in
addr16
mov
out
mov
jae
aas
in
jmp
daa
cld
dec
hlt
mov
sub
add
push
in
jbe
sahf
mov
xchg
pop
in
jl
ja
pop
stos
call
cli
xor
push
jbe
sbb
cmovl
ror
jnp
mov
or
gs
add
ficompl
scas
bnd
xor
cwtl
fwait
inc
xchg
lock
insb
sub
js
aaa
fimull
jle
mov
icebp
dec
cmp
outsb
arpl
and
loopne
aad
loopne
testl
lods
cmp
scas
sub
fdivr
push
insb
push
dec
lret
sub
jle
movsl
xchg
fadd
rorb
test
gs
ljmp
lret
mov
sub
cmpsb
cmp
mov
cmpsb
mov
lret
sahf
adc
xchg
stos
iret
and
fimull
fiaddl
dec
js
xor
pushf
fsubs
push
dec
mov
insl
filds
dec
push
lods
and
pop
dec
add
sub
in
add
and
pop
sti
enter
push
adcl
addl
add
mov
lea
gs
repz
mov
lcall
inc
pop
lea
stc
xor
lods
jmp
or
push
rolb
mov
fiadds
pushf
adcb
mov
cmp
adc
test
scas
jae
push
shl
adc
push
push
fmul
add
and
mov
xor
cwtl
pop
mov
lods
lods
mov
or
js
mov
loop
push
add
pop
cmpb
push
or
xchg
adc
ljmp
pop
sbb
or
mov
dec
mov
into
outsl
repz
cli
sbb
cltd
jae
inc
push
cmpsl
sarb
dec
pushf
ret
stc
mov
mov
mov
push
inc
fsubl
imul
lock
push
ds
and
imul
inc
mov
xor
or
sub
popw
pusha
das
ret
dec
mov
mov
sub
adc
inc
mov
xlat
sahf
rol
clc
idivb
popa
jns
imul
or
xchg
push
push
lods
movsb
out
jbe
dec
pop
or
mov
and
les
xchg
stc
mov
gs
jg
ret
or
repnz
imul
arpl
addl
mov
jge
dec
push
jo
scas
lcall
pushf
add
iret
inc
jecxz
lods
jg
aaa
mov
lcall
in
int
loop
lods
pop
cmp
ficoms
add
rorb
int
or
cld
ret
ret
adc
cmp
push
mov
or
mov
popa
jb
repnz
dec
xor
jnp
icebp
lret
movsb
inc
incl
add
and
aam
mov
cmp
mov
push
pop
mov
add
inc
std
sarl
out
xor
jp
xchg
stos
cmp
mov
fistps
inc
mov
xchg
rcll
in
insb
pop
lods
imul
movsl
fdivr
movsl
add
or
dec
rorb
sub
jns
pusha
pop
pop
clc
xchg
and
xchg
xchg
push
movsb
gs
loope
xchg
xchg
aaa
cwtl
addr16
xchg
sub
mov
xchg
jl
and
testb
or
mov
and
add
fdivrl
stc
jmp
xchg
jl
cwtl
mov
mov
add
sar
iret
in
clc
sahf
pop
xor
stc
negl
loopew
test
test
pop
push
jne
ucomiss
mov
aad
ljmp
push
imul
mov
push
test
dec
ret
jle
sub
inc
push
aad
lods
sbb
fdivrs
push
pop
out
push
into
test
inc
stos
stos
mov
adc
shlb
add
cmp
or
inc
stos
outsl
mov
jmp
mov
xor
cmpsb
mov
cmp
cmp
inc
add
inc
or
adc
mov
or
ret
repz
pop
mov
pop
jmp
lods
adc
add
adc
xchg
inc
or
cltd
jl
fistl
lds
in
xor
pop
pop
das
push
mov
repnz
push
add
in
iret
jnp
test
sbb
aaa
xlat
fcomps
pushf
dec
clc
sarl
psllw
ret
mov
push
aas
repnz
pop
sub
lock
es
mov
xchg
ss
pusha
and
in
insl
decl
daa
adc
dec
insl
ret
adc
and
add
inc
inc
mov
sahf
dec
mov
ljmp
fdivrl
push
fimuls
leave
pop
xchg
out
jle
or
lcall
xchg
sbb
cmpsb
mov
cwtl
pushf
push
pop
scas
fistpl
inc
pop
xchg
and
int3
add
ljmp
add
inc
xchg
cmpsl
loope
cltd
outsl
in
xchg
movsb
sbb
and
cmpsl
sarb
xor
add
add
fldln2
dec
fisubs
les
sub
cmp
inc
imul
push
lahf
jbe
shrb
addl
push
shlb
mov
imul
in
pop
mov
iret
dec
xor
dec
outsb
test
call
sbb
sti
icebp
ljmp
mov
stos
dec
incl
cltd
dec
fisubrs
add
out
add
dec
push
cmp
jge
xorl
xchg
mov
inc
stos
ja
inc
pop
and
or
dec
mov
cmp
inc
dec
bound
push
fcomps
call
rcl
mov
add
movsl
jecxz
pop
pusha
ja
out
test
mov
adc
leave
and
mov
test
fisubrs
imul
or
stc
outsb
in
inc
xchg
mov
sbb
mov
adc
mov
scas
jbe
mov
sbbl
push
jl
sub
cwtl
pop
jle
push
push
arpl
inc
lods
mov
fcomps
stos
lock
pop
mov
test
push
mov
adcb
sub
push
inc
jmp
repnz
cmp
gs
jp
sbb
or
xchg
jbe
sahf
or
sub
cmpb
pop
insl
int3
movsb
inc
imul
add
cli
xchg
fs
jecxz
dec
lods
mov
ss
cli
stc
dec
sbbb
sbb
inc
dec
xchg
add
fisttpll
dec
and
and
adc
gs
aam
ret
adc
sub
outsl
mov
les
xchg
mov
jp
cmc
sbb
jb
stos
push
sbb
cmpsl
or
xchg
in
cltd
and
xchg
mov
stc
jae
xorb
cwtl
xlat
daa
lock
add
addr16
cmp
jne
mov
pop
jbe
or
leave
or
into
daa
rcll
sbb
ficomps
ljmp
lods
pop
mov
sub
and
int
push
inc
daa
mov
aas
mov
int3
inc
inc
and
loop
shll
xlat
lcall
adc
cld
and
jp
adc
bound
call
xor
mov
aam
ja
or
mov
lahf
sahf
dec
mov
or
lods
push
aas
sti
cmpsl
cmp
xchg
jno
iret
movsb
rolb
add
rorb
ficoml
add
ss
cmp
xchg
fs
and
shrl
lods
pop
cld
mov
dec
push
jecxz
xchg
test
adc
mov
stc
xor
and
add
cwtl
cmp
imul
pop
mov
cmc
popf
in
mov
jnp
test
pop
cmc
sbb
cltd
cmpsl
push
dec
push
in
jnp
or
adc
das
js
inc
fdivs
pop
ret
sub
ss
sbb
iret
cmp
stc
mov
xchg
mov
aaa
xor
jp
enter
dec
repz
sti
enter
adc
lods
adc
out
pop
jg
ljmp
mov
add
repz
mov
push
jle
and
cmp
xchg
xchg
out
movb
stos
aas
ljmp
rcrb
jge
mov
push
das
and
cmp
mov
ret
outsb
adc
es
fsincos
or
pushf
xchg
dec
into
es
inc
or
xor
add
sub
add
pop
sub
pop
mov
call
adc
mov
insb
dec
or
popa
inc
rcl
jne
push
in
or
mov
ds
das
pusha
cld
jecxz
imul
test
fs
mov
test
roll
inc
out
adc
jmp
jb
push
fistl
inc
ret
cld
jge
dec
xchg
and
outsl
mov
xchg
testl
cwtl
sti
std
enter
test
dec
rclb
pop
mov
cmp
and
push
mov
lret
xor
mov
pop
push
and
mov
ror
rcrl
and
roll
mov
pop
jae
or
fildl
leave
mov
jmp
imul
mov
dec
jb
and
mov
add
out
lcall
out
or
jl
xor
nop
ja
lret
push
pop
mov
dec
or
ljmp
add
popa
insb
and
andl
cmpsb
sbb
call
push
mov
int
fidivl
js
xchg
fiaddl
lock
mov
or
cmp
test
or
faddl
scas
aaa
xorl
dec
out
xchg
nop
mov
fwait
xchg
and
cmc
and
sahf
jnp
hlt
jl
mov
call
sbb
jo
jge
int
js
rorb
cmp
xor
adc
pop
xchg
xor
adc
outsl
sbb
test
mov
and
lods
pop
xchg
pop
notl
pop
stos
notl
push
cwtl
pop
and
sahf
pushf
jb
enter
add
xchg
xchg
mov
pop
test
dec
mov
repnz
jne
scas
fst
xor
fs
sahf
add
xchg
cmp
adc
gs
int
pop
xor
in
cmovae
test
shll
stos
enter
xchg
test
icebp
cmc
push
xchg
cli
aas
fstl
mov
dec
jl
scas
adc
es
les
daa
ss
lret
bound
xchg
lea
cld
adc
mov
mov
push
jl
notl
pop
cmp
movsl
xchg
push
aad
mov
sbb
mov
xchg
xor
xchg
shr
push
pop
jmp
push
push
stos
addr16
cmpsb
movsl
mov
xor
jb
cmp
sarb
aas
ja
movhps
addl
cmpsl
jp
jbe
fisttpl
aas
es
mov
subl
adcb
mov
jl
cmp
out
add
jle
loopne
fsub
data16
push
cmp
orb
lahf
or
loopne
sub
pop
jp
cmp
fdivp
shl
lea
mov
mov
pand
mov
int
xchg
mov
insl
ret
pusha
cmc
cltd
pop
inc
inc
loop
mov
cld
add
loopne
hlt
out
scas
add
adc
aad
xchg
pushf
ret
imul
jnp
mov
pop
sub
sbb
mov
mov
test
cmp
lods
mov
lds
lods
push
inc
push
add
rcr
jns
or
xchg
push
dec
mov
pushf
daa
shrl
decb
cmp
fimull
rorb
sub
mov
sarb
cmp
in
or
jns
sub
xchg
pop
cmpsl
push
xchg
outsb
push
mov
sbb
inc
in
jo
xchg
lds
push
push
xor
filds
pop
ds
xlat
into
fistps
je
icebp
fisttpll
push
mov
push
mov
pop
mov
mov
jae
mov
cmpsl
pop
mov
testl
adc
jne
aad
jp
aad
fcomp
pop
adc
test
mov
dec
into
mov
xchg
subl
cmp
popa
push
sub
push
sub
movsb
mov
insb
fcoms
inc
hlt
jge
jb
ss
dec
loop
xchg
lret
add
push
movsl
js
aas
shll
clc
push
mov
jg
or
sub
dec
jle
inc
inc
cmpsb
xchg
mov
push
xorl
mov
dec
xchg
xor
and
cs
int3
lods
dec
sti
pop
test
ret
xor
ret
rclb
lret
adc
xchg
jno
adc
je
shll
adc
add
rorl
or
sub
xchg
inc
sub
aad
jmp
mov
jo
jg
xor
xor
scas
sbb
jp
inc
jb
jbe
movsb
mov
test
dec
xor
pop
xor
and
insb
mov
xchg
fimull
pop
pop
adc
dec
shl
dec
inc
es
pop
pop
or
std
leave
jecxz
mov
mov
push
sarl
stc
out
repz
mov
mov
jge
mov
in
jmp
cmp
jge
jmp
push
movsb
jb
out
mov
adc
int3
xchg
jb
fcmovnu
ret
aam
ja
jno
sub
and
mov
jae
jle
mov
inc
mov
mov
lgs
aad
pop
lret
test
dec
addl
loop
sbb
mov
aad
xchg
lcall
push
cmp
inc
mov
push
cmp
test
lock
data16
jp
repz
mov
push
repz
lret
inc
xchg
pop
repz
xlat
fdivrs
and
and
xor
sbb
jbe
roll
jae
jno
icebp
jp
pop
pushl
mov
in
and
pop
cmp
jb
imulb
imul
call
lock
dec
imul
mov
in
pushf
cli
xchg
out
add
lcall
lret
lea
xlat
sbb
jmp
mov
out
je
les
and
stc
lds
js
mov
mov
fisttpl
mov
and
push
inc
dec
mov
xchg
jg
divb
jne
fucomip
mov
subb
cwtl
andb
call
jp
out
movsl
pop
popl
outsb
pop
and
test
iret
xchg
shr
test
into
mov
out
inc
test
out
pop
pop
or
divl
mov
sub
pfsubr
jae
jg
jno
mov
loop
sbbl
mov
out
xchg
push
mov
pxor
pushf
cmc
adc
sbb
enter
popf
fcomps
sbb
sbb
jbe
cmpsb
cltd
jge
sbb
add
in
out
in
cmpsb
loopne
pop
pop
jge
int3
pop
mov
test
xor
jmp
sub
pusha
js
mov
pop
scas
js
adc
adc
outsl
fcmovne
pop
mov
sbb
or
int3
sbbb
mov
xor
ss
cltd
sub
cmpsl
call
mov
jmp
popf
mov
gs
lods
fcmovnu
sub
loopne
scas
jbe,pn
stos
push
fbld
dec
mov
jg
dec
add
sub
xchg
add
cltd
test
ret
pop
mov
divb
frstor
das
inc
pop
sub
bound
cmp
mov
insl
push
push
xor
mov
out
mov
sbb
ret
xchg
fcompl
sbb
outsl
fnstenv
fidivs
xor
stos
pop
sub
cmp
in
loopne
push
mov
xorl
scas
in
push
jb
les
or
int
jg
jle
rcrb
int
call
xor
test
xchg
fcmovbe
inc
push
dec
push
jno
aad
sub
push
ljmp
and
addb
jo
cmc
ljmp
xchg
xor
dec
lods
cmpsb
lea
push
mov
inc
mov
xor
jp
scas
push
ss
mov
imul
stos
pop
mov
sub
bound
loopne
sarl
mov
xchg
dec
and
notl
je
jge
cltd
jo
loope
adc
and
jne
mov
imul
cmp
sarb
mov
mov
dec
icebp
lds
mov
pop
cmpsl
mov
imul
lods
cmp
mov
sbb
xchg
or
adc
sarb
orl
jmp
jbe
mov
inc
push
adc
jae
adc
stc
test
fsubrl
add
push
cwtl
in
pop
shrb
addl
repnz
inc
push
mov
fists
enter
jge
pop
loop
and
mov
mov
aaa
fidivrs
sub
outsb
pop
rcrb
jp
adc
fwait
cmc
fs
lahf
leave
or
adc
adc
pavgw
mov
jl
mov
xchg
xor
popf
sbb
shlb
rorl
rol
clc
sub
jg
mov
adc
xor
or
sub
dec
dec
mov
ja
lock
or
lret
or
adc
inc
adc
movsb
fwait
daa
adc
mov
sub
add
push
es
shll
xor
xchg
ljmp
push
das
data16
add
out
or
sti
mov
aas
sbb
mov
xor
dec
mov
pop
lret
jbe
insb
pop
mov
icebp
mov
pop
push
cwtl
data16
dec
and
outsl
insl
push
xor
dec
jge
inc
xchg
or
std
mov
push
push
mov
scas
mov
fisubs
mov
stos
in
sbb
mov
not
aas
xor
or
cmp
std
adcl
cmc
shrl
pop
popa
mov
push
loope
mov
jne
test
sbb
xlat
in
inc
jo
imul
inc
jb
push
sahf
sub
cltd
dec
push
adc
call
mov
xchg
pop
in
sarl
xlat
jnp
mov
mov
push
fisttpll
cmpsb
mov
data16
cmp
push
incb
lods
test
jo
loop
and
insl
and
pop
or
add
int3
bound
pop
das
dec
popa
out
mov
ja
orl
cs
add
sbb
sub
sbb
push
out
gs
add
or
xchg
je
mov
mov
sahf
insb
ret
add
cmp
sbb
loope
or
in
add
stos
xchg
or
xlat
pop
jl
pop
div
mov
or
jle
mov
inc
xchg
mov
xchg
pop
pop
int3
xchg
rcrl
add
jnp
insb
dec
iret
push
pushf
aaa
adc
test
push
fs
mov
andb
adc
lock
popf
sahf
mov
jns
stos
std
lock
insl
pop
mov
dec
jne
push
inc
aas
shll
cmc
dec
mov
out
mov
and
sub
mov
inc
and
sahf
shlb
or
and
clc
mov
test
ds
adcl
inc
rolb
xchg
push
ja
shll
adc
and
push
mov
out
ret
rorl
xorb
leave
nopl
inc
mov
in
clc
fbld
rorb
in
push
stos
adc
andl
fldl
in
cmpsb
ficoms
xorl
cs
leave
outsl
sti
lock
cmpl
inc
push
repnz
iret
sub
scas
mov
lods
rolb
add
cltd
aad
mov
aam
iret
mov
sub
push
xor
pop
push
push
aas
dec
imul
or
mov
scas
or
scas
les
loope
jnp
bound
fnstenv
cmpl
sbb
sub
cmp
test
lret
xchg
mov
mov
sub
mov
jmp
or
mov
inc
loopne
out
fdivrl
push
clc
push
inc
or
dec
add
gs
dec
in
movb
jge
inc
or
loopne
mov
xchg
vmovlps
in
mov
stc
push
popf
pop
and
sub
out
xchg
or
mov
insb
mov
icebp
adc
lods
fisubrs
push
dec
les
xchg
cmp
xchg
hlt
adc
in
sub
hlt
aaa
push
fbstp
ror
lret
test
sub
pusha
jg
cltd
andl
push
xor
adc
add
jge
jne
mov
xor
push
dec
adc
enter
inc
cmpsl
mov
daa
cmp
push
dec
or
test
stos
icebp
mov
add
lds
sub
out
dec
add
int
outsl
aad
push
aas
stc
outsl
or
notb
dec
out
inc
jl
nop
xchg
sub
movsl
out
pop
out
mov
daa
mov
aaa
push
jecxz
inc
leave
gs
fcoml
cmp
out
negl
pop
sub
add
scas
enter
dec
pop
xchg
call
jno
stc
das
mov
insl
scas
xor
mov
cmp
imul
or
loope
imul
aam
push
pop
shll
jb
cmpsl
ss
fdivr
add
pop
mov
push
sar
scas
outsl
lcall
loopne
jecxz
inc
mov
leave
iret
stos
cwtl
jne
out
xchg
and
in
mov
out
and
xlat
cli
push
and
and
sbb
outsl
jge
sti
jmp
rorb
push
cmp
mov
popf
pop
mov
xorl
test
mov
stos
mov
sar
std
leave
int
arpl
and
push
xchg
adc
push
cmc
out
insb
out
add
xor
leave
sbb
mov
push
mov
and
sub
fisubs
cmp
shlb
mov
idivl
nop
cli
hlt
or
mov
or
mov
fwait
ljmp
cmpsl
jg
adc
fcmovb
test
xchg
and
mov
mov
in
and
inc
movsl
jae
roll
xor
adc
lock
in
movsb
mov
fcmovu
or
js
cs
out
dec
repz
pop
inc
les
xchg
into
mov
push
add
hlt
sahf
push
mov
jae
lock
mov
push
sbb
push
mov
fdivrl
xchg
repnz
adc
fimuls
arpl
xchg
pusha
adcl
jle
lret
fcomps
pop
jo
jno
cmp
sbb
outsl
jge
adc
das
inc
mov
jbe
add
movsb
jl
jns
sar
dec
and
jo
scas
add
aam
mov
scas
mov
cmpsb
lret
sbb
pushf
mov
adc
adc
xor
bound
dec
data16
xchg
jmp
fwait
loopne
jo
mov
sub
ss
push
js
inc
in
les
roll
add
ljmp
xchg
dec
mov
mov
push
and
pop
test
aad
icebp
insl
in
test
inc
adc
ljmp
rol
add
jae
xor
dec
rorb
xor
xchg
cmp
inc
mov
mov
adc
popf
mov
inc
cltd
outsl
out
adc
aam
and
mov
sarb
xchg
adc
jmp
test
pop
mov
stc
jnp
aaa
daa
ss
jp
clc
mov
push
test
mov
xor
fwait
mov
dec
adc
and
pop
xlat
and
mov
pop
cmpsl
jmp
mov
jl
enter
jecxz
arpl
sbb
mov
push
inc
push
loop
sub
push
lock
xchg
aas
adc
sbb
mov
pop
ss
aad
xlat
shll
cmp
push
xchg
pushf
stos
and
lds
pop
imul
jp
nop
insl
int
mov
mov
add
cmp
push
push
les
out
in
aas
prefetch
mov
es
push
in
inc
jns
jge
mov
mov
cmp
in
lds
inc
aaa
rcrb
aad
jg
fildl
sar
data16
cmpsb
inc
cmpb
xor
inc
jl
push
mov
pop
stos
loop
or
into
dec
hlt
sbb
idiv
and
lret
xlat
dec
jae
data16
jle
sub
rcl
movsb
jb
mov
xlat
xchg
out
pushf
xchg
sub
push
test
shll
in
popf
sub
and
cmc
sub
lods
cwtl
faddl
pop
xchg
pushf
call
addb
inc
mov
in
into
mov
cmpl
pusha
mov
push
ret
outsb
cmp
mov
sbb
or
fnstsw
mov
gs
xchg
cltd
scas
fmulp
and
jmp
mov
js
fbstp
dec
in
sub
mov
pop
and
fimull
shrb
mov
jo
sub
cmpsb
stos
cltd
sbb
js
out
popf
stos
ds
repnz
icebp
shrl
setle
pop
and
xchg
jle
push
lret
bound
arpl
scas
cmp
fists
xorb
xor
icebp
cmp
mov
ret
fwait
out
push
xchg
mov
sub
mov
cmc
mov
xchg
aam
xchg
and
xchg
dec
jnp
cmp
orl
jg
mov
pop
inc
ja
jecxz
push
std
cmc
sbb
push
pop
or
mov
xor
inc
xchg
pop
and
cmc
fdivrs
adc
xor
ja
notl
cmpsl
mov
enter
cld
mov
repnz
cwtl
add
fmull
dec
roll
dec
gs
dec
xchg
mov
dec
icebp
xor
lods
mov
sbb
and
testb
xchg
jne
loopne
imul
cmp
cmp
mov
pop
jmp
push
xor
lods
outsb
scas
popa
fisttpll
xchg
sub
xor
mov
push
outsb
jecxz
mov
mov
imul
jo
sbb
shrl
ja
lds
dec
mov
iret
test
and
fldl
mov
arpl
jp
stc
push
call
mov
test
in
dec
inc
cmpsb
jge
push
pop
sub
stc
xchg
xor
dec
dec
jns
outsb
mov
gs
imul
add
adc
jecxz
lcall
pop
jbe
clc
push
sahf
xor
xlat
pusha
mov
ds
lahf
gs
mov
lahf
imull
fwait
roll
es
push
adc
lock
add
repz
loope
jl
mov
and
inc
add
jp
mov
js
inc
sub
sub
bswap
lea
into
scas
inc
pop
shll
inc
push
sbb
insl
andb
orl
jnp
mov
adc
push
js
and
shlb
testl
stos
inc
push
add
push
sti
xchg
pop
in
add
mov
es
add
jmp
int
es
imul
mov
mov
xchg
aam
cltd
xchg
mov
push
aam
loope
nop
push
dec
popf
pop
popf
pop
out
push
pop
push
repz
aad
je
xor
pop
pop
ja
ljmp
scas
out
mov
into
mov
cmp
icebp
add
into
int
mov
scas
testb
cwtl
push
sbb
gs
xchg
sbb
mov
int
sbb
outsb
imul
jle
mov
cmp
push
js
push
pusha
fsubl
push
xor
lds
inc
cmp
sub
lods
cmp
std
cltd
xor
mov
push
out
clc
mov
push
dec
xchg
inc
jl
sahf
in
jb
mov
mov
mov
jmp
or
inc
je
xchg
or
lahf
sub
push
push
jle
insb
stc
iret
out
mov
pop
cmpsl
sarl
xor
push
cmp
fldz
ror
and
push
data16
push
icebp
cmp
xchg
fdiv
shlb
jp
jmp
xor
mov
test
sub
inc
and
push
js
ljmp
shl
mov
jb
cmp
aad
pop
pop
mov
push
push
jmp
fcmovne
repz
out
es
inc
push
lret
and
jne
leave
add
fistpl
daa
in
fsub
ljmp
in
xchg
pop
daa
loopne
xchg
test
nop
push
add
leave
mov
jecxz
test
daa
mov
mov
sti
ljmp
add
jns
out
jmp
cmp
daa
in
and
push
push
das
pop
inc
fxch
push
jmp
mov
cmp
test
pop
inc
dec
mov
inc
sbb
mov
sarb
js
je
lods
shll
in
pop
rol
in
inc
mov
scas
pop
lds
aaa
dec
xchg
lret
fdiv
mov
adc
sbb
js
out
test
aad
sbb
pop
push
xor
test
rolb
jecxz
dec
stos
and
test
fldenv
jb
out
and
in
pop
inc
or
jb
shr
leave
pop
xor
dec
or
mov
ja
cmpsl
int3
dec
xor
jno
scas
imul
jo
movsl
jmp
sbb
xor
jmp
aas
push
cmp
in
and
popf
dec
lds
sbb
dec
xlat
or
sti
sarb
pop
in
movsl
imul
es
fs
inc
in
cs
xor
xlat
repnz
mov
mov
loop
mov
and
test
sti
les
fadds
pop
fs
testb
and
lahf
push
xor
mov
cmpsl
in
rclb
icebp
jmp
mov
loop
ret
hlt
jmp
jbe
jb
xchg
clc
push
fidivl
push
jne
cmp
push
push
xor
sub
orl
sbb
bound
mov
xor
mov
icebp
cltd
push
xchg
leave
das
jp
cmp
pushf
fwait
push
sbb
xlat
es
mov
in
sub
mov
pop
rolb
sbb
lahf
add
jb
ja
adcl
cwtl
jae
pop
cmpsb
dec
lret
nop
fildll
lods
imul
inc
in
movsl
insl
dec
ss
enter
mov
add
iret
adc
sbb
mov
cmc
into
int
lret
xchg
out
adc
inc
adc
inc
push
xchg
ss
pop
mov
mov
adc
push
dec
shlb
fisubl
pop
out
pop
xchg
stc
sbbl
push
mov
and
push
sahf
inc
adc
imul
mov
mov
jbe
cmp
enter
int3
cwtl
xchg
ja
loopne
fcmove
mov
mov
cmpsb
out
xor
andb
sub
cmc
popf
mov
inc
fsubr
sbb
cld
scas
cld
xchg
ljmp
aad
sbb
or
ret
jno
push
loopne
call
push
adc
mov
repnz
mov
pop
ljmp
pop
dec
data16
mov
ja
test
mov
sbb
stos
mov
push
sar
mov
int3
pop
xchg
aam
adc
cmc
adc
inc
insl
sub
jle
pop
push
or
mov
orb
lods
in
jl
add
mov
fwait
popf
outsl
push
mov
inc
mov
adc
divl
lock
mov
xchg
push
aad
adc
aas
bound
and
test
inc
cmp
in
imul
faddl
mov
push
pop
arpl
sub
imul
and
push
add
imul
cmp
sbb
ret
adc
test
imul
hlt
dec
sub
sahf
imul
mov
add
cmp
insl
cmpsl
arpl
jecxz
or
inc
push
mov
sbb
adc
bound
dec
addl
sbb
gs
insl
mov
cmc
and
lods
xchg
sub
testl
mov
in
cmp
inc
lea
lcall
mov
inc
fwait
and
jbe
push
inc
mov
std
jecxz,pn
cltd
jno
lods
and
in
inc
xchg
and
aad
out
out
daa
xchg
idiv
mov
mov
lar
jae
ret
jecxz
dec
push
ret
lea
adc
adc
and
aad
es
cmc
daa
push
xchg
push
int
mov
stos
add
xor
loopne
fwait
adc
fidivrs
aam
imul
jnp
lods
test
idivl
push
jbe
jmp
push
jmp
inc
in
dec
mov
test
cmpsb
inc
fildll
mov
sbb
adc
jae
stc
sbb
inc
add
xchg
xor
xor
xchg
in
add
popf
sub
mov
mov
xchg
push
ss
mov
push
lcall
and
pop
mov
push
addr16
mov
push
je
add
movsb
inc
mov
imul
sbb
and
repz
sbb
sahf
lcall
sub
mov
in
loopne
jg
cmpb
data16
stos
sub
lods
and
cmp
cli
mov
dec
xchg
xor
push
and
pusha
jmp
inc
aam
jmp
mov
scas
loopne
fwait
mov
int3
pop
adc
jmp
xchg
aam
push
cltd
bound
mov
adc
sub
je
xor
xor
xchg
lret
shl
xchg
iret
dec
stos
sbb
cmp
sub
insb
jg
std
cmp
pop
jmp
divl
push
push
hlt
shrb
mov
push
cmovle
in
dec
xchg
mov
icebp
cmp
int
mov
stc
cmpsb
shlb
or
sbbl
mov
cmp
adc
sahf
lock
add
stos
movsl
lods
imul
cmpsl
adc
mov
xor
pop
adc
push
jmp
mov
xchg
jmp
js
aas
push
sahf
setge
fidivl
inc
fs
faddp
and
cmp
outsb
popa
xor
div
cld
flds
sahf
and
xchg
xchg
cwtl
jnp
sub
stos
add
rcrl
jmp
jmp
fwait
mov
or
add
push
and
into
jge
inc
loope
push
jmp
push
sub
loope
hlt
sbb
cli
mov
dec
ficoms
fwait
mov
xor
call
lcall
xor
inc
lods
xor
mov
test
mov
push
jnp
lds
push
in
mov
jmp
push
pop
cmp
addb
les
cmp
shlb
add
mov
mov
xor
scas
or
dec
cmp
push
mov
shl
add
adc
fists
les
mov
xchg
lret
xchg
repnz
or
repnz
dec
inc
push
popa
out
stos
xor
jp
and
xor
and
rcrb
ja
add
inc
xor
unpcklps
adc
xchg
les
sub
cmpsb
nop
cmp
add
sbb
jl
iret
pop
out
and
sar
jae
lods
sarl
cli
loopne
or
xchg
pop
xor
loope
adc
orb
insb
xor
addb
xchg
icebp
lahf
pop
sbb
mov
test
mov
push
sub
in
mov
jl
sub
aaa
sahf
stc
aad
fcoml
jns
or
ja
stos
xor
add
pop
aam
jg
xor
insb
sbb
or
jae
inc
lods
or
cmpb
mov
push
mov
xchg
test
pushf
or
and
mov
iret
mov
xchg
xchg
lret
dec
cli
in
popf
popa
and
cmp
movsb
jb
inc
cs
sub
push
clc
push
inc
sbb
push
cmpsb
pop
pop
cmp
or
adc
lea
dec
pop
fwait
mov
sahf
aas
mov
cmp
inc
sub
pop
adc
fwait
ret
daa
loop
mov
stos
sub
movsl
outsb
xchg
mov
jne
dec
stc
test
pop
sbb
dec
in
or
out
mov
ret
popl
sbb
pop
cld
jp
inc
pop
ss
lods
push
lods
jle
or
and
mov
push
insb
fisubs
pop
mov
or
mov
or
pop
push
push
mov
mov
lods
add
xchg
pop
sbb
jge
test
xchg
xor
lds
cli
pushw
inc
daa
popa
mov
pushf
sarl
push
add
lea
pop
fpatan
pusha
clc
cwtl
cwtl
fisttpl
pop
incb
cmp
xchg
out
shr
dec
aaa
pop
popf
inc
lds
mov
push
aas
andl
pop
cmp
rorl
xchg
mov
inc
mov
lret
jmp
sbb
mov
aaa
mov
push
scas
mov
push
loopne
flds
outsl
outsb
push
into
arpl
xor
mov
mov
cmp
popf
cmc
cld
cwtl
pop
jle
jp
xor
pop
pop
cmp
movsl
cmp
inc
data16
jae
clc
push
jmp
pushf
adc
mov
sbb
push
dec
push
add
mov
call
fwait
sbb
add
aad
xchg
mov
or
xor
mov
xchg
cmpsl
dec
dec
mov
or
inc
popa
les
inc
jecxz
leave
inc
and
cmc
push
mov
sbb
ss
ljmp
out
dec
leave
out
or
lret
lcall
or
sbb
lret
push
test
cmpsl
repz
mov
test
out
jno
fdivl
push
mov
stos
xchg
pop
push
in
sub
test
popa
push
pop
imul
jbe,pt
iret
add
jp
push
mov
out
loop
inc
movsl
test
stc
push
inc
add
mov
and
stos
jb
jb
sbb
lods
in
das
and
cmp
jbe
sbb
dec
xchg
pop
sub
xor
lret
sti
pop
mov
das
dec
shll
and
arpl
fisttpl
fcompl
mov
dec
dec
fsts
dec
lods
sti
fisubrl
xor
mov
push
or
push
xor
ljmp
pop
inc
sti
popa
fs
xorl
jl
and
enter
mov
push
daa
jecxz
repnz
lcall
dec
repz
jmp
or
imul
or
cmp
jg
scas
cmp
and
imul
jb
jbe
mov
decb
js
sbb
fdivrs
in
mov
mov
inc
mov
vcvttpd2dq
notb
pop
rclb
push
imul
notl
out
stos
push
push
xor
push
dec
mov
stc
xor
inc
int3
enter
xchg
sbb
pop
sub
mov
fiaddl
inc
test
incb
mov
lcall
paddq
addr16
test
or
imul
in
in
insb
mov
cld
aam
popa
mov
test
inc
mov
ret
jle
xor
push
fcomps
push
xchg
mov
xchg
out
xchg
mov
mov
sub
mov
pop
jne
clc
leave
mov
sbb
xchg
shll
dec
lcall
test
scas
mov
test
add
sub
mov
out
imull
xchg
xchg
mov
adc
lret
lods
repz
es
mov
inc
pop
nop
xor
shlb
xchg
push
addr16
xorl
and
and
xor
jge
pop
inc
cmp
shrb
addr16
dec
jns
lcall
push
test
insl
and
push
loope
cmp
leave
aaa
inc
in
cli
bound
sub
sbb
mov
xchg
into
shrl
fstpl
push
pushf
cmc
add
arpl
sbb
mov
mov
pop
in
stc
dec
sub
es
subb
and
xor
or
adc
js
mov
push
mov
jbe
inc
xchg
pop
adc
cmp
bnd
daa
xchg
adc
push
rcll
and
fisttps
and
lcall
push
sub
std
inc
icebp
gs
mov
mov
push
stc
lcall
faddl
lods
cs
add
xchg
dec
push
fnclex
pextrw
xchg
pop
mov
iret
sub
inc
arpl
sti
std
ficompl
xchg
divl
lea
cwtl
sahf
stos
sahf
xor
lock
fistpll
popf
dec
ja
cli
cmp
aam
ficoms
mov
stos
cmpsb
ss
lcall
movsw
mov
daa
pop
sub
jmp
aam
lcall
leave
push
cmp
iret
bound
dec
mov
or
aas
test
out
mov
or
pop
divb
cmp
sub
sbb
fnstcw
xchg
loope
mov
adc
outsl
lret
pop
rorl
add
push
clc
ljmp
pusha
add
lcall
iret
enter
mov
mov
scas
sti
outsb
sbb
ss
loop
and
mov
inc
inc
insb
xchg
clc
addb
inc
mov
pushf
addb
data16
lahf
add
mov
icebp
jmp
jns
add
adcb
lods
mov
ret
sub
outsb
jmp
cmp
cmp
push
xchg
and
cmpsl
ja
aas
fstl
sub
push
out
pop
mov
outsb
stos
in
imul
xchg
add
daa
xor
lret
sub
stos
mov
insl
aad
rol
and
enter
sahf
jnp
adc
and
sbb
pop
add
mov
mov
lcall
enter
cwtl
std
js
les
ret
cs
add
sbb
dec
scas
xlat
mov
aaa
and
popf
in
mov
subb
ja
pop
ljmp
or
popa
lret
push
push
cmp
add
cld
inc
inc
mov
pop
push
sbb
cmovge
outsl
dec
jmp
xchg
clc
sbb
xchg
jp
mov
nop
inc
sub
mov
lds
xchg
mov
orb
hlt
incl
sar
lret
sbb
inc
inc
insl
cmc
fcoms
stos
lret
ljmp
leave
call
in
test
push
mov
das
sti
leave
int
and
inc
ret
sub
add
mov
insb
sub
scas
adc
loope
cmp
rcll
shlb
jns
mov
inc
sub
xchg
dec
pusha
or
jp
push
sbb
aad
mov
add
pop
dec
mov
imul
test
out
adc
lea
insl
icebp
stos
and
add
call
push
pop
cmp
scas
in
cmc
inc
jp
pop
mov
sub
adc
and
jno
lock
mov
cs
fldcw
sub
cmp
decb
and
lds
sbb
sbb
xlat
cli
mov
fistpl
sub
xchg
or
mov
mov
sbb
push
lret
or
pop
xchg
les
and
add
pop
pop
mov
pop
mov
or
fidivrs
ja
fmul
cmp
xor
test
and
dec
sbbl
dec
sbb
pop
cmp
popf
movsl
lods
sub
dec
xlat
mov
cmp
rol
mov
dec
out
mov
pop
icebp
pop
dec
mov
clc
fcmove
outsl
mov
mov
add
nop
jnp
inc
sbb
adcb
fiadds
out
stos
movsb
ss
xor
jp
std
fsubl
out
dec
mov
data16
jmp
jl
mov
jo
daa
fcoms
jnp
scas
jge
mov
push
and
mov
add
je
mov
and
data16
call
cli
lcall
mov
pop
xchg
scas
xor
imul
add
pop
ja
or
into
lods
in
push
pop
out
cmp
clc
cmp
loopne
push
jmp
lahf
mov
in
movsl
jo
jg
or
cmp
xchg
add
xchg
add
movb
push
jb
in
mov
pop
xor
add
enter
pushf
and
outsl
adcl
ret
push
jmp
inc
pop
mov
sub
aam
mov
cmp
addr16
repz
fisttpll
xchg
icebp
xchg
and
or
mov
popl
add
filds
jg
xor
cmp
ret
rorl
sub
aad
cwtl
cmp
rolb
sahf
cmpb
repz
xchg
ja
scas
xor
jg
mov
xor
fimull
mov
fdivrl
xor
sbb
cmp
dec
mov
dec
add
aam
pop
mov
iret
inc
je
jae
xlat
in
xchg
movsb
sbbl
pop
or
mov
pop
lcall
xor
and
sbb
cltd
xlat
rcr
in
call
cs
rcrb
or
jle
add
or
and
lea
lods
sub
movsl
shll
stc
mov
adc
int3
mov
mov
xchg
test
cmp
or
popf
add
and
jl
lret
in
icebp
lds
shll
mov
xchg
pop
add
outsb
int3
mov
dec
inc
clc
jne
xlat
sbb
ljmp
sahf
loope
mov
scas
adc
rcl
mov
lods
in
mov
sub
int
pop
mov
negb
shll
inc
dec
sahf
ss
sbb
or
jbe
cmpb
sub
jl
mov
mov
pop
js
jl
fistpl
push
je
fimull
inc
sbb
pop
stos
mov
fnstsw
imul
dec
cmp
push
insl
leave
add
mov
scas
pop
or
test
fsts
lahf
mov
cmp
js
sub
std
push
orl
cli
scas
aas
loopne
rcrl
inc
out
pop
ret
nop
pop
ds
pop
ret
mov
mov
outsb
sbb
out
pop
test
movsl
mov
adc
push
and
out
xorl
fcmovu
pop
sub
pop
inc
sbb
dec
lods
xchg
lcall
insb
jb
dec
lock
lahf
gs
and
add
data16
sbbl
je
stc
mov
iret
nop
je
outsl
ljmp
cmpsl
cmp
pushl
mov
in
adc
int3
loop
mov
mov
jb
es
ja
dec
das
popa
frstor
jp
ret
arpl
addr16
adc
or
xor
xchg
add
scas
in
inc
mov
push
mov
dec
es
add
jmp
mov
or
mov
xchg
xorb
cmp
xor
ljmp
dec
stc
icebp
mov
orl
call
xchg
add
ss
arpl
out
cltd
jp
fimuls
test
jmp
sub
stos
jno
mov
jae
cltd
push
jecxz
sub
dec
lahf
push
ret
mov
ja
dec
test
bound
lret
les
sarl
inc
mov
add
sub
inc
enter
xchg
xchg
jp
stos
mov
in
xchg
out
sbb
aam
and
orl
in
dec
mov
int3
movsl
cmovno
in
mov
xchg
rcrb
mov
xchg
je
in
scas
ja
sbb
aaa
mov
mov
push
mov
xor
es
addr16
xor
mov
lret
pop
mov
cmp
adc
je
mov
mov
std
insb
fwait
lcall
mov
push
push
xchg
sahf
pusha
adc
addr16
neg
mov
cwtl
mov
add
add
rcll
add
das
pusha
cltd
fmulp
fsts
les
dec
in
jge
dec
xchg
mov
push
jae
adc
xchg
mov
test
sbb
mov
sub
mov
and
jg
sub
and
mov
lods
cmpps
pop
lods
add
cmp
push
or
xchg
into
and
mov
add
or
xorl
lret
xor
adc
call
sbb
add
cmpsb
movb
pop
mov
mov
fs
arpl
scas
popa
test
pop
sbb
inc
repz
sar
mov
and
xchg
mov
icebp
inc
dec
xor
jae
push
fists
xor
shr
xchg
ret
adc
mov
mov
jecxz
sub
gs
cmpsl
push
add
ds
push
lcall
dec
add
call
fldl2e
jno
test
jl
sbb
dec
pop
fwait
dec
mov
sub
xchg
push
iret
cmc
push
lods
dec
ljmp
fsubl
cmp
loopne
mov
mov
mov
xor
pop
push
inc
cmp
push
mov
shlb
addr16
push
call
pop
push
cmpsl
add
dec
ret
or
rorb
xchg
sbb
ds
or
stc
fwait
out
stos
mov
cmp
pop
and
xchg
out
cmp
into
leave
sub
pushf
mov
jp
loope
jp
pop
sub
mov
jp
mov
sub
mov
movsl
cmp
or
adc
xor
or
mov
adcb
lret
lds
fstpt
cmp
adc
movsl
call
ljmp
xchg
jecxz
pushf
dec
xchg
xchg
pop
out
popa
mov
je
dec
ret
out
mov
cmpsl
lahf
shll
neg
jae
inc
jg
lahf
imul
sub
pop
loop
mov
push
sub
shll
inc
fwait
enter
pusha
insb
sub
push
into
adc
mov
arpl
test
inc
faddl
push
push
or
imul
shll
repz
repnz
repnz
adc
pop
dec
insl
stos
int
sub
jae
std
add
fcomps
fisttpll
push
ss
daa
int3
out
inc
sub
ja
xchg
cmp
aad
in
fisubrs
xor
stos
mov
sbb
lret
cmc
xor
inc
mov
mov
xchg
jecxz
test
daa
iret
fucom
insl
stos
sarl
mov
adc
sbb
sub
in
push
js
lods
sti
out
mov
mov
pusha
push
adc
sub
mov
arpl
xchg
mov
icebp
fisubrl
icebp
sbb
inc
subl
sub
xor
cmp
push
js
popf
cmp
mov
int3
push
jl
inc
jno
sbb
mov
jle
xchg
out
lods
outsl
push
pusha
fistl
dec
or
push
pusha
mov
iret
mov
sub
stos
push
mov
pop
stos
dec
enter
subl
sbb
adc
lods
mov
cmpl
pop
inc
stos
aaa
lcall
fnstsw
test
pop
movsb
aam
and
call
leave
iret
push
leave
incl
das
outsl
iret
xor
clc
out
andb
dec
xchg
in
adc
or
adc
or
pop
pop
out
loopne
pop
in
test
cmp
mov
mov
fwait
xlat
jno
jp
mov
lcall
cmp
push
aad
lret
shrl
mov
sub
push
scas
xchg
dec
and
pop
or
sbb
or
std
inc
insl
ret
adc
pop
ljmp
jbe
mov
arpl
jne
push
adc
clc
mov
stos
cld
cmpb
inc
or
add
call
mov
sbb
and
outsl
popa
push
arpl
cmp
xor
mov
pop
xor
ret
xchg
mov
stos
shll
add
xchg
add
jecxz
mov
cli
iret
clc
mov
dec
ffreep
mov
iret
imul
adc
mov
test
mov
sbb
iret
mov
mov
pop
and
fldt
shll
scas
jecxz
gs
repnz
in
xchg
cwtl
stos
sahf
mov
adc
addb
adc
xor
xor
jmp
in
pop
or
sub
test
ret
lret
cltd
jmp
lret
dec
and
cmpb
pop
mov
ror
sbb
jmp
jmp
lock
cli
mov
jb
mov
fnstenv
mov
int3
addr16
xchg
push
ficompl
mov
jo
in
filds
mov
js
mov
or
sbb
test
sahf
test
or
pop
cmp
jecxz
icebp
addl
pop
addr16
hlt
sub
jp
mov
mov
inc
inc
push
popl
inc
push
pop
push
cmpb
push
pusha
mov
jnp
pop
cmp
mov
sbb
ss
mov
xchg
int3
test
rolb
cmp
rolb
loop
cmp
in
fdivrs
push
andl
pop
jns
pop
bound
dec
fisubrs
les
add
lods
stc
out
lock
lods
test
addr16
or
lock
insl
inc
movsb
adc
sub
movsb
cwtl
mov
inc
fs
mov
push
dec
aam
insl
cmp
add
xorb
fisubrl
loop
pop
xchg
push
mov
shlb
dec
cmc
sub
hlt
add
push
pusha
inc
push
rol
hlt
push
xor
pop
jno
loopne
push
dec
jo
in
mov
inc
ss
mov
movsb
dec
mov
push
outsb
and
mov
sbb
mov
loopne
inc
fwait
gs
aaa
daa
cmp
ljmp
sub
pop
enter
inc
js
loopne
adc
out
xchg
push
push
mov
xchg
xchg
jnp
out
cmp
dec
jmp
inc
or
jo
ljmp
testl
mov
ljmp
xchg
jmp
mov
lret
out
or
ficomps
dec
or
mov
shll
xor
sbb
lret
aad
pop
mov
movsl
pusha
sub
test
xor
flds
jns
inc
inc
repnz
dec
arpl
mov
into
popa
push
and
rolb
daa
mov
and
mov
aaa
pop
xchg
enter
notl
jne
movsb
push
pop
xchg
out
jl
lock
ja
pop
inc
xor
stos
xchg
mov
aam
cmp
xor
lcall
int
lock
fistpl
jmp
es
in
xchg
dec
loopne
jne
mov
rclb
mov
outsb
mov
xor
ret
inc
xor
xchg
stos
jp
lock
jmp
std
repnz
lahf
dec
fwait
inc
ss
add
add
push
push
ss
adc
push
insb
jl
scas
call
mov
outsb
gs
or
push
mov
cmp
jo
in
lcall
in
fadd
dec
xor
mov
xchg
sarb
mov
push
add
dec
clc
ja
xchg
xchg
ret
sarl
jle
enter
add
inc
nop
repz
movsl
sbb
ds
mov
dec
int
jg
sahf
imul
lret
aam
test
mov
pop
jae
fdivl
xchg
push
or
push
andb
in
mov
mov
pop
mov
lcall
ljmp
xchg
aaa
ficompl
dec
push
pop
in
xchg
cli
fs
push
enter
jl
add
xchg
mov
stos
mov
sub
sbb
adc
sarl
adc
filds
divb
xlat
ja
cmp
add
or
dec
std
dec
imull
inc
push
or
aaa
int3
stc
sarb
mov
rcrb
mov
in
push
dec
or
jmp
sbb
cmp
fs
fisubl
xchg
sahf
rcrl
xchg
xchg
repz
push
sbb
loope
jno
cmpsl
popf
iret
enter
enter
xor
cld
ret
pusha
arpl
and
mov
imul
call
mov
icebp
mov
stc
popf
sub
inc
orb
daa
popa
movsl
div
adc
jbe
cmp
sbb
sub
mov
dec
rclb
cld
js
cld
lcall
xchg
jl
repz
clc
aad
clc
test
and
fisubrs
inc
mov
ds
daa
pop
push
jmp
mov
test
pushf
xor
sub
jo
push
dec
jmp
push
clc
out
cmpsl
call
sbb
in
icebp
repnz
pusha
pop
int3
push
outsl
popl
sbb
add
xchg
adc
aaa
jl
xlat
push
loope
jl
push
mov
iret
imul
jo
shlb
pop
add
dec
cs
push
pop
dec
test
pop
adc
push
sbb
mov
sub
movsl
cmp
pop
pop
cld
out
out
add
sub
rorb
or
adc
dec
test
sub
and
pop
sub
cs
div
adc
mov
nop
leave
mov
aam
hlt
mov
lret
cld
jmp
inc
dec
arpl
or
gs
push
loope
jmp
xor
mov
push
cmpb
mov
sub
pop
push
cmp
rcrl
xchg
pop
pop
mov
mov
hlt
dec
xlat
adc
icebp
std
test
lods
mov
cmp
aad
mov
xor
xor
sbb
mov
pop
enter
sarb
mov
sub
or
fidivs
das
pop
sbb
ret
cmp
dec
cmp
pusha
sbb
ret
and
out
adc
jl
ret
and
pusha
testl
inc
aam
pop
mov
ret
inc
addr16
aas
lods
idivb
aas
stos
shlb
mov
scas
gs
add
in
dec
add
mov
add
jl
in
sub
add
jmp
stos
add
and
dec
jge
add
lahf
push
repnz
lea
repnz
rorb
xor
mov
sbb
jbe
push
das
gs
popa
add
jne
cld
iret
cmp
adc
sub
xor
jnp
loop
push
notl
ret
push
clc
mov
or
cmc
sbb
cmpsb
pop
std
bound
into
bound
inc
aaa
xor
xchg
xorb
xor
push
push
inc
sbb
in
and
test
cld
add
adc
add
pusha
mov
outsl
or
fwait
and
in
loop
das
cltd
int
and
ss
push
jbe
lock
add
and
scas
mov
push
in
xor
movsl
jno
mov
sbb
in
add
inc
pop
mov
lods
scas
pusha
sub
sti
jno
xor
popf
cli
fsubl
or
sub
mov
jmp
fwait
and
punpcklbw
mov
push
lcall
dec
dec
push
sti
shrb
out
and
pop
icebp
push
mov
add
fisubs
sub
mov
mov
inc
sbb
int3
scas
sarb
inc
adc
push
xchg
jns
jge
sti
xor
inc
xchg
out
cmc
rcrl
stc
pushf
inc
fld
loopne
int
adc
fidivrs
ret
fsubs
cmpsl
stos
test
ja
out
dec
lcall
pop
and
out
andb
fwait
repnz
shl
fistpll
loope
fidivs
mov
das
push
mov
and
pusha
lods
std
add
jns
lock
notb
mov
stc
mov
pop
aaa
sub
or
pop
stc
test
cmp
ja
jl
out
jecxz
jo
mov
pop
adc
imul
push
or
pop
bound
and
mov
add
loopne
and
adc
loopne
in
out
test
add
out
mov
dec
mov
lock
les
mov
pop
xor
mov
mov
rcrl
pmaxub
arpl
jmp
shl
sbb
ss
pop
add
out
mov
lahf
loope
cld
popa
imul
pop
test
out
pop
mov
fcmovbe
test
mov
adc
out
loopne
sub
sbb
fstpt
test
out
add
sub
adc
sub
pop
push
mov
sarl
dec
sub
ds
shlb
pop
stos
xlat
pop
call
in
mov
mov
shll
and
push
repnz
rol
test
inc
inc
pusha
mov
fists
imul
lea
cmpsl
sub
jmp
loopne
jge
je
push
fs
dec
cmpsl
ret
addr16
rcrb
notl
cmp
idivb
shll
jns
out
aam
mov
movsb
fwait
inc
loopne
jle
enter
rcl
sbb
cmp
add
and
lods
int3
jp
sti
pop
aad
pop
cld
cmp
or
push
add
cld
or
inc
and
outsl
dec
loop
jae
mov
cmp
imul
add
and
ja
ja
jg
mov
loopne
xor
in
cwtl
jbe
test
hlt
test
xchg
cmpb
or
jbe
lock
repz
lcall
add
mov
xchg
lea
test
mov
adc
lret
mov
jmp
push
ja
mov
test
dec
outsl
add
subb
loopne
std
add
add
inc
push
push
inc
int3
pop
jns
mov
adc
test
mov
jmp
dec
sub
pop
fs
sub
out
or
arpl
fs
cli
int
in
insb
mov
jecxz
jns
cmc
xor
jp
add
mov
mov
mov
mov
clc
jns
sub
and
mov
jmp
sub
gs
shll
lret
adc
js
push
inc
lods
and
xchg
movsl
call
jmp
subl
xchg
xchg
int
xchg
jge
push
stos
jmp
pop
daa
popf
aam
xchg
sbbb
cli
lds
lret
fistpll
jo
xor
sbb
and
mov
rcrl
movsb
mov
fisttps
repz
add
push
or
aaa
in
test
inc
sbb
pop
mov
mov
fidivl
call
and
imul
mov
pop
stos
nop
repz
mov
lret
jo
sub
div
insb
out
pop
jmp
fldt
pop
pop
sbb
test
rcl
cwtl
jp
pop
sub
ret
cmp
pusha
stos
and
jl
or
cmpsb
test
in
cmovae
mov
movsb
cmp
in
add
xlat
sahf
xlat
xor
pop
dec
out
sbb
js
cmp
imul
xchg
sbb
aaa
imul
stos
push
mov
jg
and
repz
popf
cmp
scas
xor
das
jne
rcr
js
mov
pop
mov
cs
xor
jae
mov
pop
enter
sbb
xor
xchg
testb
test
shrb
jmp
jge
sbb
xchg
in
sub
cmp
ret
jmp
mov
pushf
xchg
aaa
loopne
idivl
push
aas
mov
dec
outsb
fsubs
loop
mov
lcall
xor
cltd
pop
stos
sti
fistps
inc
loop
lock
repnz
call
ret
lcall
xor
sbb
inc
sub
int3
jo
jecxz
nop
inc
mov
and
enter
and
pop
dec
push
jl
mov
cmp
pop
stc
icebp
cmp
lock
jmp
jmp
push
movsl
cli
push
popa
jge
jle
jbe
out
fs
mov
sbb
insl
notl
in
ljmp
or
inc
xchg
sbb
ljmp
inc
adc
shrb
adc
jne
loop
shlb
mov
jbe
push
sub
sbb
ljmp
cmpsb
pop
fisubl
push
jp
ds
icebp
mov
and
fsubrl
pop
mov
fs
push
popa
inc
pop
or
mov
test
lock
mov
push
out
pop
imul
loope
pusha
gs
or
cli
sbb
lds
xchg
lcall
in
push
xchg
es
out
jnp
pop
sbb
inc
pusha
addr16
stos
mov
dec
mov
push
lea
adc
in
insb
pushf
jns
jne
xchg
lds
daa
xor
inc
loop
mov
out
xor
jne
xor
pop
dec
push
lods
negl
xor
sarb
dec
sbb
cltd
call
mov
and
out
adc
addb
sub
pop
push
in
adc
rcr
mov
jae
fnstcw
mov
mov
fists
mov
ja
inc
je
ja
mov
sbb
gs
mov
popa
shrl
jae
call
pop
jo
lock
lock
jg
push
ljmp
mov
mov
in
rclb
or
push
push
mov
push
gs
dec
jmp
xlat
aaa
hlt
adc
mov
mov
xor
ds
lods
in
and
mov
push
pop
pop
test
cmp
js
xor
loop
in
or
int
popf
bound
fildl
sub
movsb
pushl
jae
cmp
rorb
enter
fidivrs
not
xlat
ja
or
push
dec
dec
cs
pop
das
mov
scas
pop
cli
push
xchg
cmpsl
data16
mov
fdivs
mov
loopne
movsb
stos
test
pop
mov
aaa
inc
fildll
pop
cld
mov
jp
dec
and
add
push
jmp
mov
jae
push
xor
stos
arpl
push
adc
bound
dec
shll
insl
lret
adc
push
add
outsb
jb
sahf
mov
xchg
inc
xorl
in
cmp
ja
mov
mov
or
stos
ss
mov
mov
enter
or
lock
or
xor
mov
inc
in
out
fcompl
inc
push
pop
dec
int
adc
lahf
daa
mov
jo
jbe
roll
sti
pop
fidivrs
out
leave
jle
fstpl
push
dec
push
inc
dec
out
jmp
sti
imul
dec
push
popa
pusha
test
and
or
xchg
je
mov
aaa
outsl
adc
cmp
jno
in
das
inc
mov
sti
push
mov
pop
jbe
into
pop
sub
pop
or
jbe
xchg
insb
mov
adc
addr16
imul
inc
mov
mov
dec
inc
push
mov
mov
in
clc
out
repz
out
mov
or
int3
or
mov
mov
neg
and
and
add
imul
aam
mov
cmc
push
sub
mov
adc
mov
mov
iret
xchg
test
jo
xchg
sbb
cmp
cmp
and
mov
jbe
mov
xor
xor
scas
push
faddp
jle
clc
pushf
dec
scas
fwait
adc
mov
fdivs
lds
imul
mov
sar
cmp
mov
sbb
xchg
inc
jne
xor
stc
xor
scas
adc
fcomi
and
xor
xor
adc
xchg
mov
ret
push
shlb
ljmp
mulb
mov
sub
add
cs
dec
inc
push
xor
jmp
or
fisubrs
sub
pop
aam
aad
in
mov
mov
pop
cmc
dec
push
push
or
insb
js
jp
xlat
out
jg
jl
mov
inc
and
fistl
push
jp
push
in
stc
mov
lds
jle
sub
imul
jge
push
repnz
mov
mov
into
fistpl
cld
leave
mov
mov
sbb
cmp
mov
xchg
pop
and
aas
pop
mov
cwtl
mov
aad
jle
and
adcb
mov
inc
scas
icebp
test
dec
shrb
xchg
sbb
xor
push
icebp
or
cmp
scas
mov
insl
push
out
and
adc
popf
fsubrl
stc
jp
or
lahf
outsl
sub
and
in
stc
sti
sahf
fnstsw
das
mov
in
data16
popa
sbb
stc
dec
arpl
leave
sbb
daa
leave
or
push
jmp
mov
out
imul
test
mov
dec
pushf
and
mov
das
vpmovusdw
test
pop
jbe
xorl
imul
out
lea
and
mov
mov
xor
jl
pusha
sub
push
arpl
mov
xchg
mov
push
leave
pop
mov
call
dec
cmp
out
mov
dec
inc
mov
inc
enter
mov
in
push
lret
icebp
inc
pop
jp
filds
or
mov
sbb
test
mov
jne
push
dec
push
xorb
push
push
and
notb
sbb
iret
xchg
mov
mov
xchg
stos
ret
sbb
jp
imul
push
xchg
jl
jb
into
pusha
or
or
cmp
add
mov
jmp
fucom
in
inc
mov
mov
pop
push
and
fisttpl
and
add
cs
mov
int3
xchg
andl
adc
pusha
popf
dec
mov
ret
mov
in
mov
movsb
sub
push
push
shrb
jbe
in
or
adc
pop
push
int3
dec
mov
xchg
les
push
loopne
pushf
inc
jno
dec
pop
jb
sbb
fidivl
push
jecxz
shll
ds
daa
jle
sub
icebp
pushf
scas
incb
lock
sub
call
aam
xor
jbe
add
dec
cmp
lods
stos
sti
pop
xor
stos
psubd
aaa
test
lea
addl
ret
stc
inc
inc
imul
cmp
dec
fistl
js
or
or
rol
jmp
adc
ds
add
aas
imul
lahf
cltd
xor
cli
mov
mov
cmp
movsb
cmp
inc
xor
gs
sbb
lds
icebp
out
jo
insl
divb
xlat
ljmp
and
or
push
shlb
or
aad
jmp
or
xor
push
xor
cwtl
pop
sbb
call
scas
dec
inc
cli
pop
clc
mov
xchg
jbe
xor
fsubp
cmp
sbb
jo
les
mov
xchg
dec
push
push
mov
push
int3
hlt
add
daa
inc
addr16
sbb
xor
mov
sub
imul
shl
stos
hlt
push
int
repz
mov
vmovntpd
jnp
mov
popf
mov
mov
inc
cmp
dec
mov
cmp
or
xor
ds
sub
sbb
push
xchg
mov
xor
mov
std
or
jecxz
mov
cmp
cld
or
insb
addr16
cmp
pop
pop
mov
ficoml
inc
rcrb
xor
inc
outsb
mov
jecxz
bound
pop
jno
push
lods
add
xor
adc
lcall
int
cli
mov
xor
dec
jg
mov
jp
jno
sub
gs
mov
pop
and
pop
addr16
xor
cltd
mov
mov
xchg
cmp
sub
sub
aam
arpl
repnz
out
dec
aaa
xchg
jge
sub
mov
push
loopne
aaa
fcomps
movsl
cvtps2pi
daa
in
jmp
xchg
xlat
das
push
in
std
lods
lret
pop
scas
and
lods
scas
dec
jmp
aaa
das
adc
rcrb
pop
je
testb
sahf
mov
sub
jmp
or
or
outsb
stos
gs
roll
or
ljmp
cs
xchg
mov
jne
aam
cmp
dec
and
pop
ja
ss
mov
lret
mov
fs
xchg
sbb
jns
jp
sub
test
shlb
out
out
fistps
out
push
or
sub
jb
lock
pop
outsl
sbb
cwtl
and
shll
xor
or
inc
mov
int
jae
loop
roll
cld
out
test
insl
mov
stc
cmp
leave
xlat
cwtl
xchg
lds
gs
std
icebp
cltd
mov
cmp
popa
fiadds
lret
repnz
les
push
and
push
and
mov
cmpsb
xchg
gs
cld
nop
xchg
outsl
int3
leave
lret
cmc
outsb
pop
iret
test
pop
push
jnp
sbb
sub
lds
loopne
inc
sti
mov
shlb
negb
das
mov
cmp
mov
or
loope
mov
outsb
jo
dec
aam
adc
shlb
dec
mov
jge
and
lcall
pop
ljmp
inc
icebp
cmp
stos
arpl
inc
scas
push
ss
lea
fsubs
scas
jbe
sbb
lods
xchg
inc
jge
cmpsb
mul
mov
rorb
inc
xchg
cld
adc
mov
cmp
popf
and
inc
push
lods
dec
mov
loop
addr16
daa
adc
add
adc
xchg
pop
jecxz
jle
mov
adc
cmp
jbe
pop
test
shr
jge
mov
pop
movsb
sbb
or
int3
sbb
call
call
dec
pop
adc
xchg
rcl
fnstenv
mov
std
in
inc
ljmp
inc
push
inc
push
push
xor
addr16
ja
adc
cltd
repnz
mov
dec
mov
ss
mov
movsl
les
mov
jp
lret
es
push
pop
cmc
mov
scas
cmp
ja
int3
js
dec
outsb
je
dec
jmp
pop
filds
adc
dec
xor
js
jp
inc
aad
outsl
jbe
fisttps
cmp
and
push
popf
inc
lahf
adcl
loope
sub
mov
mov
popf
mov
adc
pop
stc
in
or
xchg
push
scas
imul
or
out
jge
mov
loope
ja
push
mov
mulb
xor
pop
jle
sbb
cmpsb
xor
iret
jnp
xchg
call
sub
in
jne
sub
inc
jbe
fsubrs
and
enter
push
pop
clc
fistl
iret
mov
xor
hlt
inc
js
fnstcw
cmp
xor
js
ret
mov
sub
gs
insl
and
push
cld
and
pop
mov
lea
jge
inc
lods
mov
ljmp
cld
sbb
outsb
popf
push
fsubrl
imul
cli
mov
fiadds
mov
xchg
jmp
sub
jle
loope
cmpsl
mov
hlt
mov
cwtl
cmp
xor
movsl
lret
test
shl
pop
frstor
fldl
aad
lret
adc
scas
loop
repz
cmp
je
fcoms
stos
test
mov
cmpsl
inc
add
fidivl
jecxz
push
aad
popa
xor
sbb
pop
ds
mov
mov
in
stos
jae
es
add
jae
aam
pop
or
sub
dec
rcrl
dec
mov
js
or
fimuls
fcomps
lods
jg
xchg
sub
xchg
xchg
hlt
negb
cmp
sub
push
and
push
xchg
sbb
lock
mov
fdivrs
imul
data16
repnz
inc
cmpsw
movsl
nop
jmp
leave
adc
adc
jbe
outsb
stos
pushf
call
loop
and
jae
insb
and
pop
cmp
sbb
in
lods
mov
rol
sub
xor
dec
sbb
mov
or
lret
cwtl
mov
sbb
fcomps
add
mov
and
pop
into
or
stc
pop
xor
das
push
leave
jnp
sbb
les
and
out
sub
jo
lods
adc
rep
stos
icebp
fdivr
sub
pop
mov
adc
dec
push
shl
pop
push
sti
pop
mov
push
pop
xchg
std
dec
push
test
outsl
and
into
icebp
or
mov
xchg
mov
mov
xor
or
loopne
sahf
test
movsb
inc
inc
fcomi
test
mov
fisttpl
lods
sub
adc
sbbl
jno
popa
nop
lock
out
inc
dec
mov
push
mov
add
adc
cld
adc
sbb
insb
lods
jmp
jge
insl
pusha
dec
repz
jnp
dec
rolb
mov
lcall
fbstp
into
or
adc
std
inc
mov
push
add
fdivrl
sbb
leave
add
jne
fs
add
xchg
jmp
jg
sub
xor
add
imul
rorb
inc
pushf
pop
mov
loope
xor
xor
add
push
sbb
mov
loopne
dec
cmp
aam
or
or
aam
mov
lret
popa
fucompp
push
add
fcmovu
fstp
lcall
add
push
imul
mov
das
inc
je
pop
mov
sbb
mov
sbb
aas
jno
mov
sti
je
stos
push
cmp
inc
fs
mov
add
sbb
lock
pop
dec
pop
inc
adc
cmpsl
into
sub
xor
mov
mov
and
call
ret
sbb
fisubrs
imul
adc
xor
test
sbb
sub
scas
shrb
push
fistpll
sub
lea
mov
and
mov
and
and
andl
out
movsl
rolb
mov
ds
outsb
xchg
and
jno
enter
stos
cmpsb
push
adc
pop
fwait
ljmp
inc
repz
push
push
lea
jge
mov
adc
add
int
movsb
push
xchg
mov
lods
cmp
lcall
hlt
stos
mov
arpl
mov
lret
cmp
loopne
scas
lret
loope
sbb
mov
in
xchg
push
nop
lcall
fcmovne
jle
xor
pop
dec
shrl
lock
xchg
in
and
adc
ss
inc
add
loope
cmp
or
xchg
iret
pop
lods
jne
add
pushf
test
jge
jge
pop
mov
out
ror
mov
jg
shrb
inc
adc
inc
aam
or
shrb
jne
inc
and
das
test
imul
adc
icebp
mov
jbe
and
adc
in
leave
movsb
xor
push
in
mov
mov
push
dec
xchg
leave
sub
adc
hlt
dec
inc
aam
pop
xchg
fisubs
sbb
jbe
gs
cs
xchg
xchg
push
data16
icebp
pop
stc
arpl
outsb
jae
mov
and
mov
shl
scas
pop
loope
adc
fwait
push
jge
shrl
jns
andl
mov
xor
test
push
mov
sbb
decl
pop
lahf
aaa
hlt
and
in
sar
pop
loope
aad
push
adc
add
rolb
cmpsb
mov
lea
cmp
nop
movb
add
mov
or
cli
insl
mov
xchg
out
hlt
imull
std
add
cltd
mov
inc
in
repnz
inc
sub
or
mov
mov
pop
js
mov
mov
sub
push
mov
dec
ljmp
mov
mov
mov
cbtw
adcl
cmp
decl
addr16
leave
outsl
out
out
ljmp
shrl
aas
mov
add
daa
cwtl
or
enter
jns
jae
sub
inc
dec
fdivl
push
daa
adc
sub
repnz
imull
ret
inc
add
mov
into
or
mov
loop
mov
cltd
mov
jge
push
lds
and
aad
push
inc
insb
dec
push
leave
xor
xchg
sbb
lcall
inc
push
repz
sub
pop
mov
and
add
lea
dec
inc
leave
repnz
or
addr16
enter
outsl
add
inc
sub
push
cmp
aas
push
sbbb
mov
cmp
fnstenv
sub
out
arpl
fdivrs
push
inc
enter
fistps
repz
adc
fiadds
es
xchg
in
imul
xchg
or
cmp
mov
in
xchg
out
cmp
inc
es
add
mov
cmpsb
shlb
fstenv
das
hlt
jb
mov
hlt
jl
lea
lock
popl
lcall
lock
sbb
sbb
repz
push
mov
int
jle
jo
in
in
push
fsubrs
push
cmp
insb
scas
in
gs
fadds
adc
xchg
sahf
xor
jmp
mov
mov
fisubs
or
mov
xlat
mov
lret
mov
nop
xchg
push
stos
adc
mov
cmpsb
inc
lcall
pop
adc
push
lock
in
aam
xor
push
stos
aam
lcall
inc
sahf
enter
add
popf
aam
daa
push
test
in
push
repz
dec
add
push
mov
aaa
scas
xchg
inc
inc
jg
mov
call
ja
pop
or
pop
js
int3
mov
loopne
test
or
int3
dec
lea
daa
or
out
lods
mov
add
pop
in
jbe
outsb
stc
and
repnz
mov
dec
pop
cmc
xor
jns
ret
cmp
int
out
ljmp
dec
jbe
movsl
jae
daa
jbe
mov
adc
xchg
xor
out
mov
aad
inc
xchg
mov
inc
jp
push
cmp
sbb
lock
sub
add
sbb
repz
imul
in
ss
inc
sti
jb
add
mov
jno
rorl
jo
sub
pop
pop
mov
sub
in
cmp
xchg
mov
sub
jp
jno
jb
inc
enter
cvtpd2pi
movsl
xlat
push
movb
and
jg
fst
testb
inc
jne
sub
js
outsb
or
push
jns
ret
pop
push
push
pop
mov
mov
and
add
xor
pusha
xchg
fwait
mov
xlat
dec
push
and
dec
push
insl
ret
jge
pop
faddl
xor
dec
aas
loop
fdivrs
loopne
addl
sahf
mov
sub
pop
add
je
pop
hlt
mov
push
ljmp
mov
jo
stos
mov
xlat
sbb
ret
std
outsl
cs
out
sbb
andb
int3
mov
mov
in
jge
in
add
xchg
dec
leave
sbb
jno
fdivs
repz
or
hlt
movsl
cmpsb
mov
test
pop
add
pop
jecxz
mov
and
mov
and
push
inc
shrl
push
in
inc
aam
push
out
push
std
fs
mov
adc
adc
jmp
mov
add
int3
mov
daa
and
sbb
mov
sub
shrl
and
sub
pop
cs
negb
popa
ficoms
insl
inc
xchg
in
mov
adc
sbb
int
loop
jo
adc
add
cmp
in
sub
movsl
adc
lret
lock
nop
leave
dec
mov
shlb
test
neg
lcall
mov
sahf
std
imul
push
stc
outsl
mov
or
insl
mov
out
push
cmp
add
mov
sbb
mov
adc
mov
sub
out
repnz
inc
stos
inc
jne
shlb
mov
and
dec
mov
mov
lods
movl
pop
adc
bound
push
mov
sarl
cmp
test
xchg
test
repnz
leave
stc
or
pushf
mov
sarb
sti
and
lret
cmp
iret
jbe
pop
jge
push
sub
imul
testb
xor
loopne
push
mov
fs
xor
clc
adc
jo
ss
jmp
aad
mov
js
add
add
push
pop
popa
adcb
rcrl
xchg
cmpb
roll
sbb
int3
mov
push
dec
cwtl
ret
es
ret
pop
cmpsb
ja
stos
or
inc
addl
scas
dec
in
push
out
push
push
sbb
arpl
and
add
jl
mov
shlb
mov
cmp
aad
je
into
mov
xchg
pop
mov
roll
push
mov
dec
pop
or
mov
mov
jno
xchg
sbb
cmc
inc
xchg
mov
xchg
cld
dec
xchg
daa
xlat
mov
or
jo
xchg
fsubs
mov
sub
dec
jp
push
inc
or
mov
mov
jge
clc
mov
call
cmpsl
pop
divl
vpunpcklqdq
pinsrw
orb
adc
sahf
cmp
cmc
sbb
xchg
stos
dec
adc
ret
sub
stos
pop
mov
push
xchg
or
cbtw
enter
mov
mov
adc
je
ljmp
push
lret
jg
xchg
pushf
popa
xorb
int3
movsl
or
rcl
test
xchg
jns
test
xor
cli
xchg
cld
ret
mov
pop
mov
xchg
push
jne
scas
xchg
popf
repz
ret
mov
mov
daa
shll
pusha
dec
jae
lock
add
push
cmp
int
out
cmp
and
xchg
lahf
xchg
fnstenv
push
std
mov
cmc
test
fdivrl
cmp
scas
push
mov
mov
inc
jo
negl
lret
xchg
xchg
movsb
into
mov
fsubrs
dec
mov
inc
ss
in
sub
leave
mov
mov
dec
movmskps
add
popa
imul
xchg
gs
inc
push
std
lret
inc
sbb
cmc
jp
mov
test
inc
lret
cmpsl
inc
fnstenv
pop
subb
xchg
cld
push
or
das
testb
mov
push
into
ja
outsl
fistl
lods
popf
and
jmp
in
xchg
cwtl
dec
cmpsb
bswap
xor
or
cmc
push
bound
leave
notl
test
mov
testl
outsl
mov
dec
sbbb
divb
sbb
std
pop
mov
mov
out
fst
in
mov
push
test
push
jb
dec
mov
mov
repz
dec
fistpl
das
sub
cmpb
xor
inc
fs
push
lea
cli
fdivs
and
xchg
inc
pushf
and
sub
outsb
jmp
loope
mov
stc
inc
shl
out
dec
or
pusha
ficoml
push
mov
jmp
push
shrb
idivl
pushf
add
arpl
jne
rcrl
outsb
int3
out
rorb
and
hlt
and
xchg
movsb
add
iret
push
movl
pop
add
stc
push
add
pop
ret
xor
int
fwait
cmp
shr
xchg
movsl
loope
frndint
fsubs
xchg
scas
adc
mov
xchg
pop
dec
cmc
sbb
movsb
jg
cltd
loope
ja
test
adc
lds
adc
int3
loop
loope
push
mov
fstps
sub
push
lret
in
bound
sti
scas
inc
adc
add
adc
bound
jbe
pop
sti
sbb
cmc
outsb
aad
dec
stos
and
jp
jne
adc
mov
arpl
adc
xlat
push
sub
jb
scas
jle
mov
cli
adc
fcomps
pop
jnp
lods
add
xchg
das
mov
or
sub
cmp
call
in
push
bound
aas
fdivr
pop
jmp
inc
stc
stc
std
cmp
sahf
add
mov
jae
push
inc
stc
test
xchg
enter
mov
push
xchg
or
jnp
or
cmpsb
out
das
lret
pop
sahf
cmpsl
inc
loopne
sub
lahf
adc
push
dec
fcoms
mov
xchg
dec
movsl
xor
inc
aas
enter
icebp
scas
xchg
scas
jno
mov
mov
cmpsl
jp
dec
pop
lods
data16
leave
out
sub
push
sub
lods
rorb
push
push
out
jbe
sti
fxch
pop
adc
sub
pop
imul
test
xor
scas
adc
fwait
xchg
adc
xor
inc
pop
xchg
sti
push
pop
xor
push
lods
inc
mov
lret
cmp
test
loope
pop
pop
mov
push
aaa
mov
repz
push
in
push
mov
fists
std
and
sbb
pop
cmp
mov
or
aaa
aam
fdivl
jns
dec
es
mov
adc
cmp
lret
test
lret
add
cmp
pop
jg
mov
repnz
adc
pop
mov
pop
fcoms
xchg
cmp
clc
arpl
rcrl
cmpb
mov
xchg
call
dec
int
scas
stos
sbb
daa
or
loopne
imul
pushf
jns
adc
push
or
fwait
jg
jo
jl
push
xor
out
push
stos
sbb
mov
push
sti
loope
mov
and
push
mov
cmp
iret
push
lock
xchg
pop
leave
jecxz
sarb
lea
cmpsb
mov
dec
lds
pop
jle
js
or
inc
sbb
mov
je
int3
imul
xchg
lret
arpl
xchg
cwtl
xchg
pop
cmp
scas
sar
jae
shrb
insb
pop
pusha
jne
mov
imul
movsl
lcall
ljmp
jp
adc
inc
stos
push
gs
jae
test
pop
test
int3
jmp
pop
inc
pop
fiaddl
mov
outsb
ja
sbb
lea
cwtl
inc
xor
pop
repz
lods
pop
xor
fmuls
xchg
xchg
sub
pop
add
aad
push
cmp
loope
xor
jmp
sub
loop
push
jp
pop
repz
push
rol
inc
repnz
lcall
loop
int3
sbb
push
push
rolb
mov
inc
lods
popf
pop
and
mov
pop
jnp
lcall
xor
out
popa
xor
add
fwait
add
fwait
nop
cmp
and
mov
ja
popa
xchg
jns
jmp
xor
inc
sub
pop
sub
pop
sti
iret
inc
push
cmpsb
xchg
push
jno
ljmp
nop
push
adc
xor
out
xor
cli
lcall
xor
sub
loop
decl
out
mov
data16
imul
fistl
cld
jb
std
bound
repz
pop
cwtl
pop
inc
stos
jno
xchg
cmc
lea
out
push
mov
sbb
xchg
inc
dec
cld
xor
in
shrl
cmp
sbb
out
lret
xor
scas
ret
xlat
xor
pushf
pusha
cli
sub
pop
test
sysenter
outsb
mov
pop
pusha
mov
jecxz
or
push
sub
clc
cli
pop
pop
das
repnz
aad
jno
jecxz
xor
in
out
leave
push
in
and
dec
adc
leave
fst
mov
mov
stos
mull
es
cld
into
fcmovne
pop
pavgb
cmpb
xor
cmp
pop
popf
daa
outsl
adc
push
sub
addr16
ret
daa
xor
pop
or
xor
mov
cmp
mov
mov
sub
es
test
lret
xchg
mov
int3
mov
dec
pop
roll
leave
int
jge
fwait
xchg
lahf
pop
ret
insb
shld
cli
gs
arpl
out
jnp
adc
ret
adc
jns
adc
push
js
jp
pop
jge
addr16
mov
or
inc
push
insl
pop
mov
sub
lds
fidivrs
in
and
mov
xor
or
cwtl
in
fmuls
dec
or
mov
lret
insb
fwait
inc
mov
and
loope
and
adc
stc
out
cld
mov
pop
add
repnz
push
add
pop
mov
push
sbb
xchg
hlt
ret
cmp
xchg
mov
nop
mov
imul
push
push
ficompl
adc
cmp
mov
adc
push
push
test
jo
adc
das
ss
icebp
adc
push
cs
mov
in
xchg
jg
in
in
cmp
enter
push
mov
sub
mov
mov
stos
jp
xchg
les
pop
or
out
sarb
or
mov
loope
cld
inc
or
add
sub
or
test
dec
test
ja
mov
shrb
out
pop
pop
imul
lret
and
xor
sub
add
int
mov
mov
mov
push
call
lock
fwait
rcrl
loop
push
pop
test
mov
xchg
roll
mov
pop
sbb
lds
sub
pop
sbb
pop
data16
mov
sub
jb
or
out
cmp
xchg
pop
push
aas
lret
and
pop
mov
mov
jg
roll
aas
mov
mov
sar
sbb
int3
mov
jl
sbb
cmpsl
add
push
loope
iret
shld
inc
and
sub
jae
jl
or
out
inc
dec
and
mov
js
mov
jbe
pop
repz
xor
push
in
js
rorb
mov
loopne
jge
lock
cmp
rolb
mov
adc
pop
inc
mov
mov
xchg
jnp
pop
inc
fadds
enter
mov
push
mov
lcall
mov
mov
cmpsb
rorl
and
outsl
stos
icebp
nop
sbb
xor
cmc
cltd
mov
std
add
outsb
hlt
popf
mov
and
push
test
shlb
push
outsl
repnz
mov
or
push
push
jmp
aam
mov
xor
lea
xor
icebp
addb
int3
mov
mov
xor
daa
pop
push
negl
int
jge
test
repz
pop
mov
mov
enter
mov
ss
mov
inc
imul
and
dec
dec
ret
ljmp
dec
bnd
je
shlb
xchg
icebp
inc
movsb
mov
movl
push
out
stc
ja
js
fisubrl
test
in
popf
sbb
mov
sbbl
pop
shl
sbbl
pop
je
int
pop
push
sub
jb
adc
xor
add
push
call
sub
in
outsb
mov
fidivs
test
xchg
add
les
jbe
xchg
mov
push
jbe
mov
add
loop
cs
mov
hlt
mov
push
pusha
fistps
sbb
sbb
into
sub
adc
adc
mov
jo
arpl
push
xchg
js
xor
neg
xchg
xor
and
mov
pop
jo
pop
sub
ja
jbe
lds
mov
push
xchg
or
mov
vmread
adcl
xchg
xchg
mov
int3
inc
and
jecxz
push
pop
je
jns
dec
and
imul
mov
leave
dec
mov
out
pusha
in
lock
pusha
sbb
push
xchg
ja
mov
push
xchg
lea
je
adc
inc
mov
and
add
push
cmpb
push
pop
mov
imul
fwait
lcall
mov
push
xor
dec
loope
mov
inc
push
cmp
pop
cmp
xor
adcl
icebp
fadds
pop
jl
addr16
testb
and
aas
mov
stos
cmp
add
ret
popa
in
sub
mov
mov
lret
push
lcall
and
pop
mov
hlt
sbb
jg
jp
jg
aam
mov
movl
jge
sub
adc
inc
adc
mov
lods
fsub
adc
fcomi
push
fsubrl
sbb
lahf
mov
movsl
xor
xchg
testb
loop
inc
push
out
ja
add
aaa
jo
adc
xlat
in
cld
cli
les
sub
push
orl
mov
hlt
dec
aam
mov
shlb
ret
or
xchg
jne
sti
repnz
test
lahf
imul
xchg
sahf
rol
outsl
push
lcall
pop
in
xchg
mov
leave
adc
lahf
add
cld
cmp
repz
lahf
sbb
scas
enter
xchg
sbb
es
and
aaa
loop
fs
test
stc
out
xor
mov
add
aas
jnp
out
rcr
jmp
fstpt
and
cmp
pop
xor
cmc
jle
out
ljmp
and
test
out
xchg
inc
fcomi
inc
lahf
mov
inc
cmp
fistps
mov
rorb
aad
inc
jno
movsb
jbe
xchg
les
andl
mov
xor
divb
insl
cld
dec
call
sahf
and
lods
inc
adcb
mov
mov
into
mov
push
pop
es
pop
xchg
xrelease
sti
push
sti
add
ljmp
jne
imul
es
outsl
insl
je
lret
std
xor
fadds
shl
mov
xorb
incb
mov
or
sub
mov
xor
add
xchg
sub
aas
inc
lods
add
pop
imul
arpl
add
pop
imul
add
repz
jmp
rcrb
jecxz
js
adc
jp
pop
rcll
outsl
stos
jnp
lock
shl
rorl
add
pop
ss
out
rolb
imul
test
addr16
jp
or
adc
enter
sbbb
imul
outsl
lods
jo
jne
sub
rcr
scas
mov
leave
dec
js
out
imul
push
push
pusha
inc
stos
push
adc
cmc
fsubs
in
fwait
rcrb
jmp
out
inc
jbe
and
push
jnp
dec
push
jns
xor
push
adc
loopne
inc
jno
test
push
imul
mov
push
push
mov
lret
sub
ljmp
xchg
data16
loope
loope
push
arpl
pop
mov
jae
aam
icebp
in
sub
sarl
pop
sahf
int3
xchg
and
mov
int
das
imul
mov
scas
aas
adc
aas
mov
imull
xchg
rclb
push
adc
arpl
sti
xor
mov
inc
cmp
dec
push
rcr
add
adc
cltd
xchg
mov
scas
mov
or
dec
or
pop
clc
xchg
enter
lock
push
lret
or
int
sbb
mov
cmpl
scas
cmp
mov
lods
jb
dec
das
jg
adc
in
fidivrs
inc
sahf
dec
fidivl
xor
push
lds
xchg
pop
mov
jp
iret
imul
and
lret
cli
in
fldcw
dec
jge
outsb
loop
fistps
mov
les
pushf
xchg
test
ficompl
jl
push
in
inc
pusha
sbb
pop
sbb
popf
adc
xor
mov
push
xor
mov
push
bound
dec
push
jno
mov
test
dec
fisttpll
scas
mov
add
or
out
sahf
insb
test
cmp
out
cmp
mov
mov
xchg
add
ljmp
push
jb
lcall
dec
test
xchg
pop
fiadds
sbb
lahf
mov
es
andb
scas
jp
js
mov
dec
js
inc
cmpl
push
inc
lret
mov
mov
into
ret
jnp
enter
ret
pop
loop
mov
jae
addl
aam
xor
pop
jnp
xlat
pop
clc
mov
sti
push
stos
xchg
push
aas
lea
cmp
pop
mov
mov
sbb
push
xchg
and
xlat
push
fs
iret
push
or
pop
test
mov
data16
inc
jge
es
mov
dec
lret
pop
and
sarl
add
cmp
test
cmpsb
stos
inc
arpl
sarl
mov
shl
in
dec
mov
cmp
inc
into
xorb
lods
je
xor
sti
test
cmpsb
cmpsb
pop
xor
insb
mov
int
adc
fwait
dec
scas
sbb
iret
push
stc
pop
cs
ja
and
cmp
popa
jle
in
adcb
dec
subl
cmp
andb
nop
push
mov
xchg
and
movsb
inc
cmp
data16
xchg
in
lahf
cwtl
inc
pusha
push
shll
inc
lret
xchg
aas
int3
lods
add
iret
imul
bound
fstpl
and
push
and
mov
inc
mov
insl
inc
fcomps
sbb
pop
mov
ret
pop
pop
xchg
push
sahf
in
movsl
repz
xchg
js
mov
fimull
jle
inc
or
mov
cwtl
std
insb
es
daa
xlat
sbb
shrl
sbb
arpl
call
mov
test
sbb
cmpsl
sbb
or
sti
adc
jge
push
bound
inc
es
mov
call
int
xorb
inc
sub
js
mov
in
xor
incl
mov
pop
cmpb
jl
ret
insb
lret
pushf
nop
cli
test
jne
aad
ja
cltd
jge
xor
and
push
iret
mov
outsb
and
inc
loopne
pop
push
mov
sub
outsl
ret
cmpsl
data16
xchg
push
gs
test
ljmp
push
mov
xchg
jns
ss
cmp
lods
adc
or
inc
leave
ds
xor
jmp
dec
mov
ret
pop
jns
push
jp
lods
bound
jecxz
jl
in
out
sahf
cmp
test
push
shlb
xor
das
sbb
mov
popa
aaa
push
shl
xchg
test
mov
aam
hlt
test
mov
mov
and
xor
mov
call
push
scas
stos
popf
int
les
loope
test
iret
inc
fisttps
test
or
fcmovb
pushf
mov
mov
and
imul
addr16
jl
in
call
popa
fdivrl
clc
mov
xchg
xor
and
lods
imul
mov
and
or
popf
or
ss
cmpsb
les
adc
lds
push
mov
mov
and
inc
pop
in
es
pop
push
pop
call
xor
jo
rcll
stos
mov
mov
xor
adc
mov
rcr
cmp
mov
jo
int3
adc
cld
mov
mov
xchg
mov
sbb
mov
daa
das
adc
aad
xchg
test
adc
mov
push
cmp
pop
test
cmpsb
pop
and
aad
fstl
imul
push
in
mov
js
xchg
xlat
outsb
outsl
call
cmp
daa
push
mov
bound
push
mov
je
out
fimull
cltd
mov
adc
imul
and
sub
cmp
cli
mov
xor
mov
xchg
lods
lea
outsl
mov
scas
cmp
mov
in
xchg
icebp
add
test
mov
sbb
movsb
out
je
mov
rcrl
mov
xor
ja
mov
push
mov
adc
xchg
out
test
sbb
push
pop
and
jle
outsb
scas
incl
push
les
mov
loop
idiv
cwtl
sbb
hlt
or
in
push
ficoml
lock
subl
orl
sahf
repz
cmp
cltd
cmpsb
push
inc
out
sti
movsb
stos
stos
je
dec
jle
inc
or
cs
jmp
mov
rcrl
movb
dec
sbb
mov
fbstp
icebp
lds
jecxz
cmpsl
push
sub
mov
jne
stos
loope
or
nop
in
das
fldt
out
iret
fildl
lock
pop
stc
aam
addr16
ret
jns
pop
test
xchg
inc
or
inc
jo,pn
or
hlt
jmp
xor
mov
adc
test
or
arpl
enter
ret
pusha
daa
fcompl
xchg
inc
xchg
je
add
mov
pushw
dec
addr16
clc
roll
into
repnz
sub
rol
xchg
scas
pop
inc
xor
cmp
mov
daa
cmp
int
lods
adc
jle
add
sbb
sahf
cli
dec
mov
mov
push
pop
stc
loope
and
inc
ffree
in
and
lea
add
mov
test
insb
mov
sub
stos
call
iret
ljmp
pop
nop
stc
push
jle
fmul
jp
es
sbb
push
movsl
push
fisubl
repz
mov
sub
and
loopne
dec
testb
lcall
fmulp
dec
subb
xchg
jno
movsb
arpl
shll
sahf
ret
inc
bound
mov
dec
sub
aas
sub
fistpl
xchg
adc
aam
rcrb
loope
icebp
adc
fmuls
adc
cli
and
testl
mov
cmp
lock
pop
clc
dec
getsec
ja
add
cmc
sbb
mov
jg
jge
js
push
xchg
cmp
lret
fs
leave
mov
push
push
aam
jo
in
sbb
outsb
imull
jne
mov
loopne
les
fsubl
mov
push
mov
push
inc
clc
mul
in
ljmp
addl
ljmp
sti
inc
mov
cmpsb
ss
cmpsl
js
xor
xchg
jnp
ret
mov
jmp
lret
xchg
cwtl
daa
inc
xchg
sbb
push
mov
jnp
inc
jbe
and
jno
dec
jo
sub
fistpll
pop
cld
out
mov
jl
jbe
lret
mov
adc
inc
jmp
xchg
outsb
sbb
addr16
jle
cmp
pop
orb
sub
push
cmpsb
adc
jmp
sarl
int
sbb
movsl
outsb
mov
jecxz
rcll
sub
inc
lods
std
pop
jle
mov
pusha
jp
xchg
bound
or
adc
in
mov
xchg
dec
cmp
sbb
ret
and
notl
xchg
int3
lods
outsb
mov
bound
mov
int
cltd
out
xchg
mov
outsl
icebp
add
adc
in
and
adc
ret
mov
dec
addr16
jle
lds
das
stos
xorb
xor
jno
repz
mov
sub
decb
xor
aaa
mov
repnz
int3
adc
sub
mov
dec
test
dec
sbb
jns
jecxz
fdivp
pop
aaa
fcmovnbe
adc
rolb
and
mov
std
pop
sub
bound
pop
push
cmpsl
movsl
cmpsl
test
sbbl
movsl
dec
mov
sub
mov
scas
push
lahf
in
gs
add
ss
mov
xchg
mov
ljmp
jmp
jnp
jle
repnz
cmp
jne
pop
xor
out
xor
mov
mov
lods
pop
lret
lahf
rcrb
lret
lea
or
mull
test
insl
sub
subl
iret
into
mov
mov
add
adc
insl
cmc
mov
push
in
fnstsw
leave
inc
lahf
add
shll
ss
lds
or
cmpsl
xchg
ja
pop
call
je
cmp
call
mov
ss
push
out
cmpsb
sub
mov
xchg
nop
loope
pop
pop
loope
aam
call
jns
out
sarl
in
xor
sub
pusha
and
sbb
lret
divl
jbe
sub
sub
test
or
idivl
cltd
cmp
dec
lods
jmp
adc
int
cmp
sbbl
popf
cmp
xchg
sbb
es
push
rclb
xchg
bound
push
in
jecxz
shl
jecxz
int
cmp
adc
popf
push
loopne
mov
push
jl
push
jns
int
push
test
fistps
and
xor
cltd
jae
repz
lods
ja
cld
imul
lret
lcall
add
mov
mov
cmp
mov
int3
sub
jl
scas
add
lods
fiadds
mov
ficompl
and
lahf
imul
cwtl
mov
fisttpll
inc
mov
xor
jmp
xchg
add
pusha
fisubrs
pop
mov
dec
fnsave
pop
dec
cmpsb
dec
xor
jae
add
shl
arpl
fistpl
and
xchg
ficompl
inc
fisubs
loope
repz
bound
cwtl
or
es
mov
push
inc
repz
mov
mov
and
push
inc
and
and
loopne
push
fisttpll
pop
dec
fwait
mov
or
mov
add
negb
pushf
sub
mov
repnz
into
movsl
insb
sbb
orb
sub
jns
pop
loop
push
pushf
rcll
xlat
movsb
fs
adc
fdivs
jb
sbb
jb
dec
xlat
add
sub
sarb
movsl
incl
xchg
inc
repz
es
stos
mov
out
mov
fdivs
pop
int3
fs
pop
jae
ret
pop
hlt
repz
loopne
mov
loopne
jo
dec
rcll
stos
out
es
mov
xor
add
pop
cmp
pop
push
repz
xor
mov
sbb
lods
mov
add
mov
es
sbb
or
insb
lahf
jl
into
mov
mov
pop
decl
aam
movsb
xchg
arpl
sbb
fadd
jnp
test
mov
pop
xchg
in
leave
adcl
arpl
mov
and
aas
outsb
imul
mov
sbb
add
jg
inc
pop
into
leave
sub
and
dec
stos
add
ret
fnstsw
repnz
or
ror
fdecstp
cmpsl
movsb
ret
popa
ret
inc
sbb
lret
in
pop
fs
pop
cli
and
dec
unpckhps
push
insb
ret
inc
or
mov
xchg
add
jge
add
or
cmpsb
push
adc
mov
lret
loope
add
xchg
les
inc
rcrl
xchg
aaa
or
dec
cmpsl
fwait
push
lods
movsl
iret
jae
sahf
inc
inc
stc
popa
jl
xor
cs
orl
sbb
mov
jo
lret
aam
xor
push
dec
or
adc
dec
movsb
or
mov
and
cld
fdivrl
inc
sbbb
gs
sti
pop
mov
ret
push
inc
test
cmp
sub
fcom
inc
daa
addr16
pusha
jns
dec
pop
repnz
dec
lea
testb
enter
scas
sbb
insb
sbb
push
add
push
int3
jp
sbbl
outsl
push
fxch
dec
mov
scas
mov
xor
cmp
aam
pop
out
mov
fwait
dec
cltd
test
lock
pop
punpckhdq
jge
push
repnz
movsl
mov
push
rclb
push
out
fdivrl
in
xlat
loopne
fstp
cmp
mov
adc
ficomps
ret
ja
xchg
lret
pushf
dec
test
out
mov
jg
adc
pop
adc
test
loopne
ss
icebp
ror
mov
movsl
and
out
lods
or
test
pop
inc
sbb
test
adcb
fildl
and
pop
cmp
inc
setp
pop
lods
xchg
loop
pop
xchg
pop
repnz
xlat
mov
das
mov
xadd
push
outsb
aas
inc
adc
pop
fcompl
fwait
cltd
jns
sahf
lods
xor
into
and
xchg
hlt
sub
cmp
in
sub
jb
dec
push
ficoml
mov
loop
fnstsw
mov
push
pop
pop
outsl
in
lods
push
ret
sub
adc
repz
pop
lock
fisttpll
and
hlt
push
mov
jbe
cmpsl
movsb
mov
cltd
in
mov
test
aaa
test
ss
pop
popf
xor
inc
push
addr16
leave
sbbb
add
cli
lahf
push
push
cmc
fnstsw
and
stos
fnstsw
add
shlb
cmpsb
movsl
sti
dec
mov
jns
inc
or
iret
xchg
cmpl
push
cmp
mov
divps
bound
cltd
pop
neg
ja
dec
fs
cmpsb
int
aam
cmp
adc
cmc
pop
lret
dec
mov
in
iret
xchg
lds
push
push
fs
cld
xchg
sar
test
aam
nop
sbb
fadd
jnp
mov
sub
nop
cmp
ret
jl
daa
pop
cmpb
mov
push
mov
xchg
imul
test
jecxz
enter
cmp
rol
in
mov
mov
push
shl
popa
pop
movsb
xlat
popa
or
mov
femms
mov
scas
shl
fmull
call
scas
cmpsb
cmp
adc
add
int3
outsl
in
xor
cs
adc
cli
mov
mov
lods
inc
rolb
add
and
addr16
pop
mov
dec
fisubl
mov
gs
push
cmpsb
sbb
sbb
sbb
sti
xlat
cmp
mov
pop
xor
lret
aad
inc
das
lock
push
or
cmpb
js
xchg
stos
inc
sub
push
sti
es
sub
notl
in
dec
call
ret
call
movsl
jecxz
cmp
outsl
in
icebp
mov
paddd
mov
std
sahf
cli
sub
push
or
push
cltd
aas
sub
pusha
push
movsl
arpl
movsl
into
aad
les
jnp
push
push
jg
xchg
and
je
and
cs
xchg
je
es
lock
sub
sahf
inc
orl
dec
enter
lret
lea
lret
cmp
int3
imul
mov
mov
sarl
cmp
aam
mov
sti
out
scas
push
inc
lcall
pushf
inc
xor
mov
ffree
mov
in
dec
dec
sub
in
jo
cmpsb
xor
cmp
jmp
in
shll
or
jns
adc
out
or
std
cmp
add
xchg
sbb
jbe
jns
popa
adc
pop
xchg
je
es
sets
inc
adcb
xor
data16
popa
xor
or
xchg
cmp
int
mov
notb
pop
lea
pop
mov
dec
mov
ss
or
clc
rolb
loop
aas
mull
outsl
fcmovu
ror
push
das
push
psraw
out
push
and
xor
xchg
rcll
and
mov
pushf
cmp
or
bound
sbb
dec
aam
into
repz
mov
and
mov
int3
jg
push
rorl
mov
fucomi
testb
cld
and
jno
js
orb
arpl
and
rorl
adc
mov
sahf
pop
icebp
xor
jns
int3
inc
mov
jecxz
add
dec
dec
mov
pusha
dec
or
insl
mov
mov
cmp
push
mov
push
call
pop
or
push
jbe
inc
insb
pop
jle
cmp
movsb
mov
xor
arpl
mov
jb
xor
push
and
push
pop
test
fists
ficomps
inc
test
push
add
cmp
adc
leave
jle
mov
mov
dec
dec
ficomps
daa
ja
lret
adc
lods
jmp
jo
cmp
or
in
cltd
loop
imul
lods
pushf
push
inc
mov
lret
and
test
cmp
js
xchg
aam
das
xor
xchg
xor
xor
cmp
adc
sbb
jl
pop
xchg
sahf
jnp
sub
sbb
sbb
xor
lcall
fscale
or
inc
jle
sbb
test
inc
popf
aaa
xchg
je
sub
shl
in
jne
mov
test
ja
subb
dec
jns
xchg
std
pushf
std
mov
dec
test
jg
bnd
push
out
jb
sub
add
sbb
fimuls
test
data16
imul
mov
push
push
sti
push
aad
loopne
jo
fwait
loope
and
mov
in
jle
adc
cmpsb
sbb
je
ret
aaa
cmp
and
or
test
imul
adc
inc
xor
addps
mov
test
divb
sahf
pop
sbb
mov
out
mov
sub
pop
iret
add
icebp
pop
lret
dec
jmp
in
dec
pop
mov
clc
arpl
out
cltd
inc
pop
int3
fs
stos
dec
pop
add
add
mov
sbb
and
pop
mov
lea
jne
das
mov
stc
jbe
cmp
int
fwait
pop
xchg
jle
sub
loop
push
push
xor
movsl
out
cmp
dec
jnp
movsb
jns
in
xchg
in
push
adcl
push
dec
out
cmp
sub
xor
or
xchg
sahf
enter
imul
xchg
inc
pusha
jle
dec
cmpsb
test
adc
icebp
cmp
inc
lcall
xchg
dec
rolb
lods
out
nop
jae
test
out
hlt
adc
xor
mov
push
in
lahf
aam
mov
sbb
adc
shlb
jbe
jg
lock
pop
addb
jle
push
into
mov
adc
mov
push
or
insl
mov
movsb
xchg
dec
scas
sbbb
jno
xchg
lcall
outsb
and
jns
xchg
push
cmp
addr16
xor
mov
jns
sbb
fld
repnz
leave
add
fbld
cmpsb
loopne
jb
mov
sub
push
ds
pop
lock
mov
mov
int3
ljmp
inc
aaa
jmp
lods
push
add
adcb
enter
mov
xchg
jb
adc
fidivrl
adc
mov
lret
dec
scas
cmpsb
lods
adc
addr16
ret
pop
push
es
jp
movl
push
cs
clc
inc
aaa
inc
mov
push
int
mov
sti
mov
in
cmp
hlt
lds
xchg
stos
push
daa
jle
mov
fistps
mov
lods
es
sbb
pop
fsubl
push
sub
leave
ret
into
push
jnp
shll
inc
xchg
cmpsl
pusha
pop
hlt
and
dec
imul
mov
cmp
mov
adc
mov
sarl
ficoml
cmp
insb
cmp
addl
iret
adc
xchg
fwait
dec
les
mov
and
xchg
popa
andl
je
sbb
or
pop
ljmp
sub
jmp
test
test
cmc
push
je
jg
sub
icebp
adc
out
ds
je
sub
mov
nop
fisttps
mov
clc
sbb
loop
out
xor
mov
add
pop
xor
fimull
movsl
dec
movsl
xchg
je
cmp
popa
cmp
adc
fcompl
fnstsw
lods
mov
jb
jp
inc
gs
sbb
push
adc
adc
rol
lret
xchg
add
push
cli
push
icebp
push
dec
mov
inc
imul
sarl
push
testl
in
int
shlb
inc
mov
stc
js
adc
jecxz
movsl
mov
cmpsl
insb
mov
mov
insb
or
add
xchg
ss
mov
sti
das
xchg
xchg
fwait
pop
jns
xor
enter
add
inc
int3
rorl
rclb
das
sub
inc
fcomip
pop
repnz
sbb
jg
mov
xchg
dec
add
push
jne
getsec
rcrl
mov
cmp
cli
push
xor
lds
jns
jl
mov
stos
mov
mov
and
sahf
mov
xchg
popf
fisttpll
adc
push
add
pop
mov
test
or
xchg
mov
xor
in
gs
inc
outsb
hlt
adcb
sub
dec
inc
clc
cmc
mov
repnz
xor
lock
pop
aaa
les
stos
or
cmp
imul
movsl
cmpsl
dec
mov
or
add
cmp
mov
adc
mov
or
lds
xchg
adc
push
addr16
enter
shll
out
mov
cmpsl
scas
es
adc
mov
mov
xor
in
sbb
stos
int
icebp
inc
popa
mov
out
sub
imul
fisubl
xchg
mov
iret
orb
ret
icebp
test
faddl
add
and
cltd
mov
les
sbb
jb
push
loope
popa
scas
pushf
inc
inc
sbb
cmpsb
outsb
sahf
xor
fisubrl
xchg
rorb
push
loop
or
pop
cld
jae
sti
scas
daa
aas
in
fnstcw
clc
mov
test
fs
sarl
cltd
jecxz
mov
pushf
lods
xchg
adc
jo
rorl
test
out
cld
test
nop
sub
cmpl
pop
sbb
fs
jl
xchg
add
in
push
hlt
pop
cmpsb
or
mov
pop
movsb
mov
xorb
mov
cld
xor
or
in
xchg
push
test
frndint
mov
insl
adc
sbb
mov
pop
out
mov
push
into
rcll
jno
mov
xorb
add
fisubrs
jmp
repnz
sbb
mov
mov
jle
inc
fsubs
push
jmp
sbb
push
pop
popa
ret
sbb
inc
out
cmp
inc
adc
leave
mov
arpl
enter
pop
mov
ljmp
aaa
xor
lds
sub
mov
into
ret
popf
loope
push
xchg
dec
idivb
loop
dec
add
aad
or
inc
mov
cmp
rcrb
adc
enter
mov
cltd
fdivl
mov
mov
cmpsb
mov
inc
push
jmp
shrb
in
dec
repnz
push
jo
jb
or
fsts
mov
jb
fimuls
sub
mov
cmpsl
sbbl
mov
out
pop
decl
lods
add
dec
push
dec
or
mov
leave
test
add
fst
repz
stos
ss
shrb
lock
mov
stos
adc
outsb
rcl
or
and
xchg
cmp
lock
jns
pop
data16
shl
jbe
cmpsb
mov
cmp
mov
pushf
sbb
adc
leave
pushf
loope
cmp
inc
jo
sub
in
test
mov
push
cmpl
cmpsl
aaa
push
aam
imul
scas
cs
adc
bound
sti
in
sbb
xchg
push
test
icebp
shll
mov
stos
stos
adcb
adcb
lock
stos
xor
jae
cmpsl
frstor
leave
push
push
inc
hlt
xchg
xchg
sub
or
push
mov
inc
adc
cmp
or
mov
out
and
iret
inc
lret
aam
cmp
outsb
cmpsl
out
adc
cmpsl
cmp
je
mov
xor
cmp
mov
roll
xchg
fs
ds
mov
xor
imul
or
call
dec
dec
lods
xchg
in
divl
mov
cmp
cmpsb
outsb
loopne
mov
or
cli
mov
arpl
lcall
popf
xlat
add
adc
fisttpll
and
push
loope
divb
mov
sub
jb
subl
mov
xor
mov
inc
ficoml
pop
cmp
imul
or
mov
sub
xchg
test
xchg
pop
out
cmp
xchg
fadd
in
pop
xor
stos
ficomps
frstor
roll
push
insb
insl
pop
push
cmp
stos
cltd
xor
or
push
xchg
mov
cmp
clc
xchg
cwtl
mov
icebp
add
xor
mulb
sbb
cld
mov
mov
stos
xor
nop
or
icebp
and
push
mov
cs
cmc
into
ss
add
icebp
test
mov
mov
mov
int
pop
xchg
adc
aad
push
add
test
pop
sub
ss
mov
arpl
pop
das
mov
xchg
iret
pop
in
push
jp
dec
hlt
mov
or
sbb
outsb
cwtl
in
stos
icebp
mov
js
or
fbld
mov
into
daa
dec
xchg
shll
add
adc
test
movsb
loopne
xchg
jnp
aad
test
jmp
out
je
iret
mov
cmp
push
leave
jne
lock
stos
nop
js
adc
inc
dec
mov
xchg
pop
sbb
or
pop
shlb
xchg
cmp
mov
or
lret
cwtl
adc
xor
or
mov
fdivrl
stc
mov
cmp
enter
rcrl
push
xchg
cmp
ror
mov
fsubrl
test
pop
clc
mov
in
push
std
push
adc
inc
jns
fcomps
das
pop
xor
jl
mov
lret
push
aad
xchg
add
fsubl
xor
mov
push
pop
test
scas
lret
inc
jge
movbe
testb
out
jne
pop
adc
jno
in
outsb
sub
neg
mov
or
lcall
fbstp
in
scas
roll
pop
xor
rorl
mov
sbb
mov
adc
mov
mov
pop
arpl
sbb
mov
xor
mov
jp
jmp
adc
sub
cltd
xchg
xchg
dec
xchg
sbb
adc
jb
jp
leave
bound
push
lahf
sbb
xor
jno
andl
daa
and
out
movsb
mov
mov
lods
aas
cmp
daa
jnp
imul
ljmp
test
arpl
mov
hlt
lea
aam
sbb
sbb
cmc
lods
xchg
sub
insb
int3
mov
arpl
push
jle
nop
jmp
xchg
xor
xor
loop
ds
mov
mov
and
push
fisubs
jl
pusha
jecxz
repnz
shrl
fsubs
and
fisubrs
jl
inc
loop
xor
test
aaa
jecxz,pt
add
adcl
stc
push
jl
add
push
jmp
lret
stos
cli
sbb
sub
fistpll
mov
addr16
xchg
in
shlb
fidivl
fists
mov
aam
push
or
xor
xor
or
daa
xorb
and
fwait
cli
mov
pusha
aad
push
inc
cmc
in
orl
in
sub
daa
pop
fsubrp
push
outsb
mov
outsl
arpl
scas
sbb
cmpsb
lahf
hlt
add
stos
iret
jle
jae
cwtl
int3
test
arpl
imul
cmpsl
test
jne
fs
ret
lret
adc
negl
xchg
loopne
ljmp
push
sbb
aas
mov
movsb
or
pop
lea
dec
inc
pop
shlb
cmpsb
push
push
pop
movsb
mov
mul
mov
jnp
lret
xchg
jo
fnstcw
push
pop
out
push
jle
xor
add
sahf
sbb
sub
xor
mov
mov
pop
push
ret
sbb
in
dec
adc
and
clc
mov
lcall
mov
fsubrl
pop
dec
lods
add
mov
mov
or
out
push
sbb
bswap
std
sti
lea
sarl
pop
pop
sbb
mov
in
sahf
mov
sbb
fnstcw
jnp
sti
mov
jp
shr
mov
repnz
inc
ftst
jnp
xor
push
jg
pusha
inc
aam
sti
sub
adc
pop
stos
mov
push
cli
cld
fists
pop
sub
pop
ss
popa
dec
adc
jge
push
pop
orb
addr16
fcoms
orb
or
fildl
arpl
push
cld
dec
add
div
push
or
push
push
push
dec
or
push
mov
ja
mov
xchg
popa
xlat
in
int3
push
and
adc
mov
jecxz
and
mov
int3
jno
in
push
in
lret
lods
push
xor
gs
mov
andb
frstor
xchg
aad
mov
mov
pop
loopne
clc
mov
xor
xor
mov
clc
roll
jge
call
rolb
das
fidivrl
mov
ret
popa
inc
dec
jnp
xchg
mov
fisubs
mov
or
inc
test
sub
adc
fldt
push
pop
mov
jg
xchg
jp
es
inc
dec
or
ret
push
push
pop
mov
adcb
jg
sbb
orl
cmpsb
loop
push
test
sbb
xchg
int
jbe
add
sbb
roll
push
outsl
and
xchg
rcpps
fistpl
std
gs
cmp
sub
repz
mov
repnz
sbb
fwait
xor
aaa
mov
jge
insb
lock
push
adc
pop
push
adc
dec
mov
sub
xchg
iret
jo
mov
xchg
lret
jae
push
adc
outsl
mov
jb
lock
pop
loope
scas
pop
stos
pusha
inc
xor
fdiv
add
or
pop
and
lahf
mov
pushf
push
cmpsl
in
pop
in
lret
pop
rorb
mov
or
jns
cmc
or
jae
and
inc
orb
xor
and
xchg
jb
cmp
fidivrs
mov
jae
push
testl
iret
mov
mov
in
int
xchg
adc
xor
pop
mov
or
stc
sbb
xor
icebp
lock
mov
lock
xchg
add
pop
or
xlat
es
dec
mov
jne
inc
fwait
and
shll
push
aad
inc
jle
add
mov
push
mov
out
pop
shlw
je
pop
push
imul
ret
sub
push
test
cmp
mov
rolb
out
ja
add
outsl
add
stos
out
mov
rorb
adcl
ret
inc
fwait
cmpl
je
sub
jle
pop
fmul
jno
popa
clc
or
cmpsb
rcrb
out
mov
lock
push
xchg
inc
pop
push
aaa
xchg
mov
mov
pop
and
imul
adc
inc
daa
sbb
adc
out
mov
xor
push
ficomps
imul
rclb
xor
lret
fmuls
jno
mov
add
sbb
add
xchg
scas
push
in
xchg
mov
hlt
imul
and
lds
sub
test
jne
inc
jnp
sbb
fcmovne
pop
pop
or
into
add
or
ja
call
int
ror
adc
sub
inc
cltd
dec
cmpsb
fistl
sub
mov
jo
cmpl
lahf
cmpsb
stc
mov
push
lds
jge
rclb
imulb
inc
scas
repnz
std
pop
shll
mov
fimull
sbb
dec
daa
cmp
mov
icebp
ss
out
das
xchg
push
cltd
xchg
push
out
pop
xor
xchg
xchg
inc
ja
data16
push
mov
icebp
ljmp
sub
out
jbe
out
daa
mov
sub
mov
inc
mov
inc
lcall
sbbl
inc
push
bound
add
cmp
or
insl
jg
pushf
lods
add
ss
push
mov
cwtl
sbb
or
fistpll
pop
xchg
call
daa
jnp
scas
adc
inc
cmp
js
or
testl
push
imul
mov
mov
mov
pop
sbb
jmp
gs
popf
mov
jae
imul
cmp
pusha
xor
lock
cld
xor
enter
push
lret
inc
mov
fcmovbe
jne
xchg
xchg
aad
inc
stos
xchg
push
arpl
xchg
pusha
test
inc
add
pop
push
inc
arpl
inc
loope
adc
mov
lods
adc
mov
push
jb
mov
mov
insb
adc
add
sbb
jae
stc
pop
pop
out
aad
lock
repnz
mov
daa
in
movsb
popa
mov
or
xor
out
popa
rorb
out
mov
xorb
loope
adc
movsl
jecxz
jnp
test
xchg
call
loop,pt
ds
pop
imul
cmp
mov
mov
nop
sub
popf
cli
movsb
imul
add
mov
and
pop
add
arpl
ss
dec
repnz
fmull
jge
inc
add
mov
iret
pop
add
add
je
xlat
push
adc
insl
repnz
in
jge
cmp
addl
xlat
pop
data16
scas
cmpsl
cmp
jl
xchg
xchg
add
loop
aad
pop
clc
adc
lods
lretw
mov
dec
imul
test
sbb
jne
adc
xchg
jbe
icebp
pop
stos
adc
pop
pop
xchg
xorb
stos
jge
push
mov
in
mov
repnz
lret
insl
xchg
shlb
stc
sub
test
cli
add
mov
and
pushf
aaa
push
push
rol
dec
sub
clc
setno
push
iret
js
cltd
cmp
mov
inc
ljmp
jo
bound
pusha
fisttpll
cwtl
ja
out
test
bound
add
fcomps
call
add
push
or
setbe
jl
outsl
or
pop
scas
inc
adc
out
cmp
sub
pop
cld
jo
jecxz
fcmovnu
or
pop
aad
lret
mov
jmp
push
pop
in
or
pop
xchg
jmp
sbb
sahf
not
popa
and
mov
lock
mov
cwtl
cmp
and
hlt
out
stc
mov
std
out
or
popf
push
hlt
push
fwait
mov
loope
push
push
gs
inc
das
aas
push
jno
xchg
jns
jb
inc
arpl
push
jmp
mov
jno
nop
inc
repz
jnp
es
rcll
fwait
add
xor
std
mov
xor
leave
adc
add
cli
mov
xchg
push
lcall
leave
loop
or
sub
jp,pt
imul
adc
das
sub
jge
cmpsl
mov
cmp
dec
and
ljmp
inc
pop
test
xchg
xor
fisubs
lret
jno
mov
mov
insb
aas
push
sub
in
add
or
add
jl
cmp
mov
or
subb
sbb
lahf
insb
ds
push
or
and
gs
jb
mov
xchg
fisttps
push
push
dec
and
mov
push
inc
push
jb
loopne
mov
aaa
cld
add
ja
popf
jae
pop
std
insb
imul
or
dec
or
adc
ja
ror
adc
xor
add
cs
push
lds
daa
mov
sbb
jb
pop
pushf
enter
mov
stos
sahf
pop
xchg
cmp
ret
xchg
int
hlt
mov
fdivrl
popa
in
mov
or
mov
xor
lods
cmp
jnp
lock
or
push
xchg
aaa
in
out
shl
and
aas
mov
loope
repz
or
lock
cmc
xor
mov
cmp
rcl
jmp
dec
cmp
icebp
addb
rcr
pop
pop
js
push
hlt
pop
shl
in
dec
movsl
mov
jb
sbb
mov
jb
pop
outsl
call
movsl
inc
or
sbb
outsl
xchg
movsb
loopne
mov
mov
cli
mov
dec
cmp
std
sub
xor
in
or
sbb
popa
test
cld
cmp
adc
imulb
scas
outsb
jnp
daa
lea
fstpt
xchg
sbb
aad
int
pusha
fisttpl
push
pop
js
xchg
pop
mov
arpl
ficoms
aaa
in
jge
pop
push
popa
repz
es
mov
jo
mov
inc
lods
dec
movsb
lret
insb
cmp
test
push
jae
enter
js
jge
lds
cmp
add
icebp
cmpsl
shlb
add
fldenv
invd
aad
cwtl
cmp
pop
pop
mov
mov
js
pop
shll
dec
out
and
mov
dec
dec
test
not
lcall
lret
pop
add
mov
iret
jnp
movsb
out
in
data16
popl
mov
test
fwait
xor
fcoml
fstp
inc
sbb
cli
inc
xor
nop
lret
xor
mov
ljmp
fdivs
inc
adc
pop
add
cmp
inc
fnstcw
test
aas
sti
icebp
lock
in
pop
inc
sbb
dec
cmp
mov
adc
xchg
inc
mov
insb
popa
mov
mov
fs
ljmp
mov
jle
xchg
outsl
adc
in
and
lret
pop
jns
popf
dec
or
pop
inc
fsubl
rcrb
pop
mov
and
popf
dec
out
mov
psrad
ljmp
pusha
inc
cmp
mov
add
sbb
in
popa
sbb
push
mov
sub
and
shrl
cmp
out
addr16
mov
cmc
dec
mov
inc
pop
push
dec
jmp
inc
movsb
add
xchg
and
or
or
lret
pop
xchg
mov
jmp
push
fcom
mov
mov
mov
dec
addb
or
mov
push
adc
mov
mov
arpl
mov
cmp
add
ss
roll
rolb
sub
jecxz
pop
in
dec
pop
xorb
lret
push
or
inc
jnp
mov
and
xchg
das
xchg
push
dec
outsl
in
mov
adc
out
add
jmp
mov
enter
data16
lds
and
daa
into
sub
add
push
xchg
dec
shll
pop
pop
xor
in
fistl
imul
ret
push
in
add
in
mov
push
ret
sbb
nop
push
fadd
fs
fidivs
mov
pop
gs
jo
cs
mov
data16
add
mov
or
nop
pop
add
sarb
pop
out
cmpsl
int
xor
inc
cmpb
adc
fsubl
subl
popf
push
dec
into
dec
jg
mov
mov
or
push
das
push
sahf
xchg
mov
nop
jb
and
push
push
iret
mov
or
jb
out
in
xor
sub
jbe
sbb
stos
outsl
ret
jns
mov
push
andl
cmp
adc
sub
dec
les
inc
jae
test
mov
cltd
dec
or
fwait
orl
in
add
mov
decl
cwtl
jo
scas
repz
into
mov
push
jecxz
out
pop
aas
fldln2
iret
repz
sahf
xor
mov
sub
pop
inc
fistl
lcall
out
jnp
mov
sbb
lret
push
test
xchg
mov
mov
mov
lea
sbb
sub
jnp
ficomps
push
sahf
inc
test
rol
out
cli
sti
inc
dec
mov
xchg
call
adc
and
rcl
pop
hlt
xor
or
jae
test
push
mov
fsubrl
adcl
lods
addr16
jb
lds
mov
js
jno
inc
call
cltd
fdivr
pop
mov
insb
dec
lcall
lods
add
in
adc
test
jge
jl
jp
decw
mov
pop
push
pop
cmp
push
sbb
fwait
test
push
and
insb
in
pusha
loop
test
out
pop
xchg
xchg
ss
imul
xor
rep
icebp
cmpb
loopne
into
fstpl
lret
divl
fldl
ds
ja
or
adc
out
cmp
push
iret
or
fldcw
out
mov
sub
jbe
xor
push
icebp
dec
imull
push
mov
test
jno
shrb
adc
and
dec
shlb
imul
jle
pop
inc
jae
testb
push
mov
frstor
inc
faddl
xchg
ret
dec
fisttps
push
bound
shl
lds
aas
aam
push
sub
lods
mov
push
pop
mov
jno
cmpsb
mov
jge
cmp
call
cmp
pop
sbb
add
inc
loopne
dec
outsl
mov
xchg
jb
cwtl
adc
int3
cmp
imul
adc
sub
mov
out
add
dec
fldenv
test
or
mov
pop
xlat
and
sub
push
jns
sahf
pop
stc
jbe
stos
in
imul
sub
sbb
jl
or
fstl
scas
rcr
lods
push
or
arpl
loopne
ds
xor
mov
andl
cltd
mov
xchg
sarb
sarb
cmp
loopne
fsubs
cmp
mov
jp
xchg
and
and
dec
lock
jae
pop
pop
cs
rcl
clc
addr16
imul
inc
es
jnp
sbb
adc
mov
movsl
push
or
fcompl
mov
movsb
ror
xorb
in
sub
jno
lods
imul
ljmp
mov
inc
or
mov
cmp
xchg
add
and
ds
out
mul
std
push
les
out
jbe
push
mov
daa
xchg
rol
xchg
test
mov
sub
out
add
pop
fsubl
sub
mov
jno
adc
out
xchg
jae
sbb
mov
sbb
int3
lcall
cmpsl
out
pop
daa
dec
jns
sub
cltd
mov
jecxz
or
add
je
push
lods
push
xchg
int3
cwtl
in
mov
jl
sub
jbe
fdivs
mov
jno
imul
jg
ja
pop
mov
cmp
pop
mov
push
adc
dec
pop
lods
dec
addr16
movl
mov
or
mov
nop
je
inc
and
and
mov
pop
test
mov
sbb
mov
sub
enter
add
inc
sbb
cltd
cwtl
icebp
rorw
test
cmp
scas
pop
out
movsb
mov
fstl
push
cmpsl
sbb
xor
mov
fistl
cmc
inc
mov
les
fld
pop
pushl
iret
mov
cli
mov
lcall
ja
int
sbb
out
fadds
ret
pop
mov
fsubs
or
xor
outsl
fadds
sahf
outsl
cmpsl
mov
jecxz
sub
and
dec
popa
outsb
imull
lret
mov
mov
and
cld
jo
lock
bound
lds
cmc
mov
fwait
mov
jecxz
rolb
add
je
popf
shrb
dec
or
ficompl
mov
xor
stc
mov
cmp
inc
inc
test
dec
and
or
push
or
jne
out
and
sbb
fildl
call
stos
xor
mov
scas
bound
inc
sub
imul
mov
lods
cmp
mov
inc
jle
or
jmp
int3
xor
pop
pop
cmp
out
dec
inc
cld
cmp
xchg
xor
lods
jge
inc
adc
dec
lods
insl
mov
pop
in
add
stos
inc
in
aaa
inc
adcb
push
dec
sub
cwtl
and
inc
sub
push
sub
rol
pop
jmp
mov
pop
insb
sub
clc
jge
repnz
mov
dec
repnz
xor
insl
push
scas
mov
sbb
addr16
xchg
outsb
iret
fldl
mov
xchg
ljmp
shrl
aaa
jne
sbb
add
add
mov
je
ss
and
scas
cli
sub
rclb
dec
jb
insl
jle
and
insb
push
clc
push
sbb
fsubl
cmp
xchg
cmp
pop
pusha
xlat
cmpsl
or
fnstsw
push
lock
or
mov
adc
inc
pop
xchg
and
fneni(8087
stos
lods
push
mov
adc
sub
aad
mov
add
push
push
adc
and
cwtl
fstps
in
outsb
leave
popa
jp
push
or
test
push
jno
fcomip
fstl
gs
loopne
lcall
in
or
push
jae
jg
movsl
cmc
mov
or
jge
jge
into
cltd
mov
dec
cltd
aas
lods
pop
scas
jne
sarl
push
movsl
adc
add
cmp
add
aam
inc
push
loop
and
dec
loop
cltd
xor
pop
push
out
ljmp
xchg
jno
popfw
insb
leave
jb
mov
cmp
cmp
cmp
arpl
jl
ret
test
pop
jno
scas
sub
inc
sbb
xlat
add
lret
inc
xchg
or
cmp
push
dec
push
and
js
fdivs
mov
sbb
add
push
test
popf
mov
pusha
outsb
dec
cmp
repz
popa
inc
sbb
jno
sub
out
jge
and
or
add
pop
stos
mov
mov
nop
lods
mov
xor
ja
stos
sub
or
scas
sbb
or
and
push
shll
sub
pushf
mov
pop
xchg
inc
out
cwtl
lea
ja
push
sub
mov
int
fidivl
cmp
pop
mov
int3
sbb
dec
jbe
mov
mov
jle
fistl
inc
jle
mov
jmp
aad
sbb
loop
adc
mov
int
cltd
inc
xor
add
in
fldenv
mov
pminsw
clc
arpl
lcall
cmp
test
fidivl
mov
dec
dec
movsl
in
ret
iret
lcall
inc
push
lds
xor
mov
jnp
lcall
pop
xchg
push
ss
popf
jno
ror
cltd
out
mov
sub
or
adc
add
mov
mov
mov
ss
xchg
inc
loop
pushl
xor
xchg
push
insl
inc
fistpll
out
cmpsb
into
mov
pop
mov
sbb
inc
or
sub
addr16
repnz
fistpll
mov
cmp
xchg
insl
filds
les
ss
jb
fmull
js
cmp
xchg
inc
roll
movl
mov
mov
sarl
push
mov
out
repz
gs
and
das
jo
fs
outsb
adc
jecxz
xor
test
inc
mov
subl
addb
fbstp
outsl
dec
dec
les
cmp
jp
add
cmc
cmpsl
lock
adc
push
cltd
or
pop
lock
sbb
sbb
shll
inc
fistpll
and
insb
xor
lahf
aam
cmp
sub
pop
add
int
ret
clc
jbe
pop
aaa
dec
or
xchg
sbb
mov
out
or
test
push
push
inc
lret
or
push
push
push
leave
xor
ret
insl
push
imul
pop
sub
mov
xchg
loope
icebp
dec
rorl
in
cwtl
pop
ficoml
adc
push
jo
push
js
inc
cmpsb
mov
mov
mov
adc
loop
fdivrl
mov
push
mov
lea
nop
cwtl
fcoml
testl
fsubp
push
bound
out
pusha
inc
jo
xchg
fisubs
jg
xchg
push
arpl
call
scas
inc
inc
imul
push
test
enter
sbb
adc
pop
jecxz
pop
push
pop
xchg
or
testb
data16
dec
adc
jmp
mov
cmp
push
push
pop
sbb
mov
sub
inc
pop
gs
adc
mov
lds
push
dec
cmpl
jp
sub
xor
fmuls
or
jbe
fnsave
jne
cmp
add
aas
mov
xchg
fcom
sub
add
arpl
mov
cmpsl
lock
sub
jno
xchg
in
loope
into
mov
aam
daa
and
dec
or
cmp
out
add
loope
add
jg
jle
insl
pop
pop
cwtl
dec
loop
and
lret
push
mov
jae
sbb
shl
sub
cmc
ret
push
or
inc
in
fs
fdivs
mov
add
push
aam
lcall
mov
push
push
movsb
cld
adc
fbld
mov
mov
cmpsl
inc
into
cmp
pop
popf
adc
push
push
ss
add
hlt
pop
shll
push
fmuls
fnstenv
rol
jns
movl
repz
cmc
xchg
inc
push
ljmp
in
fsub
sti
fdivrs
cs
movsb
out
adc
xchg
adc
ficompl
repnz
movsl
setbe
or
iret
out
push
mov
je
mov
movb
daa
sub
insl
push
shl
push
sbb
out
mov
add
hlt
push
pusha
pop
scas
ret
xchg
mov
scas
outsb
lea
jecxz
lahf
jnp
mov
enter
pop
cmp
aaa
adc
fcmovnb
imul
stc
sbb
dec
xchg
stos
scas
xchg
das
jo
dec
iret
enter
dec
add
out
push
xor
arpl
das
dec
mov
std
repnz
mov
pop
adc
cmp
lock
inc
outsl
movb
xchg
stos
insl
iret
add
aad
xor
cli
jnp
scas
jle
dec
lret
jbe
and
push
js
push
push
stos
adc
inc
ds
ret
or
lahf
lcall
mov
aam
xor
outsb
add
addr16
in
add
mov
sbb
loope
test
daa
lods
imul
add
mov
mov
mov
jo
lret
jg
lret
jo
cmp
pop
cmp
inc
mov
add
jno
and
lahf
and
push
sub
pop
in
gs
ror
icebp
pushf
sbb
clc
bnd
cwtl
js
shrb
stc
xchg
lcall
and
outsb
repnz
adc
xor
inc
loope
enter
aam
cmpsb
popf
iret
mov
in
movsb
fisubs
xchg
fcoml
inc
les
jno
adc
inc
in
mov
adc
adc
xor
sahf
sub
cmp
popf
adc
stos
push
sbb
imul
scas
inc
lcall
jne
inc
leave
push
cmpsb
mov
ljmp
push
push
mov
fwait
bound
sti
sbb
arpl
cmp
jns
out
mov
leave
mov
push
popf
cmp
dec
mov
idivl
jle
sti
xchg
push
lret
ljmp
sbb
divb
or
dec
add
hlt
xchg
shrl
mov
jle
data16
mov
xor
nop
add
pop
jmp
enter
pop
shll
push
pop
daa
xor
addr16
test
add
testl
jl
or
aad
arpl
scas
lret
test
and
test
adc
mov
jmp
dec
insb
adcb
insl
mov
sub
cli
mov
or
fdivl
jge
call
adc
sub
adc
inc
push
scas
push
aaa
mov
in
jo
aam
repnz
mov
aas
xor
dec
cmc
sub
jmp
aas
xchg
int3
dec
popf
cmp
sbb
push
mov
insb
mov
mov
in
arpl
push
push
cmpsl
icebp
lock
mov
popf
add
aam
mov
adc
cmp
mov
jno
xchg
lds
jno
jns
inc
stos
inc
mov
mov
push
inc
mov
hlt
cmpsb
pop
lds
dec
mov
sti
pop
xor
fisubl
push
sti
jg
or
cwtl
xchg
xchg
sti
filds
inc
xchg
pop
jnp
mov
mov
adc
mov
fstpt
fwait
aaa
jne
test
jmp
or
mov
push
sbb
imul
movsl
dec
sub
das
lods
cmp
xadd
cmp
add
mov
ja
ljmp
sub
daa
xchg
xlat
or
ljmp
ficoml
loope
adc
es
adc
add
in
mov
xchg
mov
cmp
int
fmuls
aas
or
lds
je
jmp
das
push
loope
aaa
mov
out
stc
shrl
addr16
mov
fnstenv
gs
imul
js
xor
xchg
stos
pop
adc
cmp
outsl
fs
jbe
pop
push
inc
imul
mov
nop
into
mov
aam
jl
es
xchg
xor
adc
push
mov
dec
xor
mov
into
insl
decl
jb
push
sbb
in
in
mov
inc
add
mov
mov
addr16
leave
ret
fldcw
adc
adcl
add
adc
fbld
xor
jmp
xorl
jne
and
sbb
fcmovnu
imul
mov
in
dec
lods
pop
jbe
dec
mov
dec
cmp
or
mov
lret
cmpl
bound
push
leave
mov
das
or
mov
in
mov
xor
mov
lods
and
in
popa
in
pop
outsb
fdivrl
adc
stos
dec
leave
and
push
adc
inc
pop
xor
jae
and
dec
jle
stos
xchg
insl
stos
stos
je
pop
scas
and
cmc
jbe
mov
pop
sub
scas
popa
xchg
dec
or
stos
fnstcw
clc
jle
sar
iret
cmp
movsb
fildl
or
push
rolb
add
mov
xchg
mov
shlb
xor
int
mov
ja
mull
test
add
pop
lret
pop
cmp
testb
cmp
jmp
out
xor
jno
pop
push
pusha
inc
and
aas
push
gs
add
cmp
movb
pop
xor
lret
sub
mov
lods
and
jmp
mov
fnstenv
inc
cmpsl
subl
xor
addl
mov
rorl
push
sub
mov
cmp
lret
dec
inc
ret
dec
clc
mov
pushf
imul
lret
jne
jno
or
bound
scas
sbb
les
das
mov
addr16
lret
aam
mov
cwtl
xchg
aad
lea
cmpsl
pop
xchg
pop
dec
jmp
dec
xor
dec
jle
out
add
mov
inc
lahf
scas
outsl
icebp
cmp
add
mov
jp
gs
sub
push
out
pop
mov
push
mov
mov
pop
xchg
adc
popf
push
pusha
push
in
xchg
aad
mov
rolb
aam
dec
lock
lret
test
cmp
jo
je
fs
inc
push
cwtl
das
cmpb
mulb
push
into
xor
add
adc
cmp
sbb
out
outsl
jns
data16
lds
mov
outsb
cmp
pmuludq
adc
mov
jge
inc
neg
aad
pop
lods
repnz
int3
fsubrp
mov
pop
imul
adc
add
rol
pop
sbb
dec
cs
insl
pop
sbb
push
hlt
call
addr16
adc
pop
dec
or
das
insb
push
sub
imul
hlt
lcall
sub
inc
arpl
xchg
push
imul
cmpsl
ja
aad
hlt
sahf
mov
inc
mov
mov
cmp
xchg
jo
add
pop
mov
hlt
xor
jno
call
or
in
mov
pop
fs
hlt
rorl
fldcw
sbb
rorb
popf
clc
je
in
mov
mov
adc
lea
icebp
insb
ret
daa
mov
inc
and
fucomip
lret
aas
adc
aas
mov
stos
jns
xor
jbe
and
arpl
xor
mov
and
sahf
pop
jo
mov
cmp
and
adc
pop
sar
sub
gs
jnp
out
lods
es
xchg
xor
pop
enter
das
je
dec
dec
mov
shrl
dec
sub
jo
in
out
cltd
inc
push
mov
inc
in
add
out
jno
dec
xlat
pop
cmpsb
xchg
xchg
testb
sub
ds
negb
cmp
push
out
pop
jae
lcall
movl
out
addb
push
leave
fmull
fsubrs
shlb
stos
jmp
dec
and
mov
lock
bound
icebp
nop
mov
lcall
jecxz
mov
shll
push
inc
adc
lock
aam
dec
inc
xchg
and
cltd
mov
mov
lret
test
cli
push
pop
fsubrs
rolb
pop
stos
mov
stos
das
and
fxch
mov
mov
loope
gs
lahf
sub
xchg
xor
fdivrl
aam
gs
add
das
adc
mov
mov
icebp
pop
clc
mov
jmp
data16
dec
inc
jae
insl
imull
aaa
or
jecxz
fs
out
mov
xor
pop
dec
xorl
sbb
cmp
mov
popa
adc
cmc
mov
jl
and
cmc
ss
or
or
inc
cwtl
cltd
jmp
sbb
add
fimull
popw
lds
jnp
cs
sub
sbb
sahf
out
jne
je
pop
shrl
stos
rcrb
adc
fiadds
mov
insl
outsb
mov
xchg
lcall
jmp
test
xchg
mov
and
std
movsb
cs
aaa
bound
cmpl
scas
pop
inc
pop
inc
pusha
sbb
test
mov
mov
jae
sarl
jns
push
adc
fs
xor
cmpsb
lea
and
enter
inc
loop
pop
mov
pop
jne
nop
sub
and
cltd
add
jbe
mov
ljmp
mov
popf
les
push
jle
loop
dec
xchg
cltd
xor
sbb
push
int
jae
pop
in
pushf
mov
icebp
and
cs
fld
mov
popa
fsubrs
cmp
push
es
xchg
cs
test
daa
insb
out
push
leave
push
hlt
mov
jne
and
hlt
inc
xchg
and
int3
sub
int
mov
sti
xor
push
arpl
hlt
dec
add
stc
mov
or
mov
mov
xchg
test
lods
cmpsl
adc
jb
adc
sbb
aam
jge
movsb
leave
ds
pop
jnp
mov
loop
jae
movsl
jae
inc
mov
or
ficoms
sahf
mov
sbb
lret
mov
enter
lock
cmp
inc
jecxz
es
shll
test
shll
dec
lahf
push
jno
test
adc
out
aam
lds
out
push
jb
cltd
push
sbb
cmp
pslld
adc
lea
les
stc
sbb
jae
js
repnz
addr16
push
fucomp
mov
lea
push
pop
mov
sbb
stos
jmp
fcmovnu
cmp
sbb
rclb
rcrl
xor
stc
or
aaa
pop
mov
push
outsl
pop
iret
sbb
rcrl
stos
inc
mov
sarb
mov
addb
add
sub
sub
pop
into
leave
leave
sbb
lea
or
push
pop
fs
dec
test
push
inc
xor
je
xchg
add
popl
rorl
dec
int
das
push
popa
fldenv
xor
repnz
inc
outsl
aas
xor
mov
adcb
mov
xor
mov
jle
xchg
dec
jae
shll
cmp
mov
or
shrl
mov
sarb
test
inc
cwtl
outsb
or
push
lods
loop
out
popf
inc
mov
push
bound
jno
jle
loope
sub
gs
mov
call
xor
or
sbb
mov
adc
mov
nop
filds
xchg
dec
pop
arpl
cmp
pop
rcrl
mov
rclb
jae
mov
rorl
inc
outsl
nop
jo
lahf
and
and
les
pop
arpl
rcr
cld
testb
sahf
push
push
sti
or
enter
xchg
pop
mov
mov
cmp
lahf
dec
shl
mov
sbb
dec
push
aam
ds
pop
mov
ds
dec
es
sub
lock
into
imul
mov
cmp
cmp
hlt
or
xchg
push
xchg
mov
sbb
push
or
test
xchg
mov
sti
pop
xchg
xor
pop
inc
outsl
jnp
xor
adc
shll
pop
or
adc
sti
xchg
xchg
jo
in
and
push
add
cmp
cmpsl
in
test
mov
adc
mov
xchg
sub
test
pop
push
ficoml
pop
rcl
sbb
scas
xlat
mov
cmp
std
mov
jns
std
ret
xlat
add
cmp
lods
aaa
dec
jns
pop
pop
incb
adc
loop
adc
pop
and
push
cli
shll
mov
shrl
push
sub
in
repz
test
dec
loopne
mov
lahf
jnp
mov
push
test
and
leave
xchg
clc
adc
addr16
aam
lock
adc
scas
push
shlb
pop
dec
xchg
repnz
mov
xchg
scas
mov
or
inc
insb
into
adc
xlat
push
push
inc
mov
or
add
push
repnz
adc
jo
subl
out
je
mov
ret
loopne
int
xchg
mov
jg
out
es
dec
movsb
push
movsl
and
add
push
jb
add
outsb
pushf
shl
cltd
rorb
mov
lods
sbb
xchg
adc
inc
pop
push
inc
and
mul
lock
dec
cmp
adc
nop
test
in
mov
lcall
enter
cmc
inc
xor
add
sbb
sub
fiaddl
out
xchg
cmp
cmp
mov
out
in
xor
sub
cli
mov
cmp
les
mov
lods
add
xchg
into
pop
and
icebp
xor
fmuls
je
lds
xor
es
outsb
sbb
sub
mov
int3
aad
mov
xor
pop
adc
adc
mov
in
sub
cld
pop
gs
jae
push
js
sub
pop
add
adc
movsb
jae
das
lcall
push
mov
icebp
das
sbb
adc
into
mov
mov
pop
sub
xor
daa
xor
popf
sbb
stos
push
jl
jmp
mov
or
outsl
push
in
fs
pushf
repnz
and
xchg
lcall
outsb
jl
scas
sbb
xor
enter
cmp
mov
adc
xor
or
jnp
loop
mov
fwait
daa
sub
scas
jne
mulb
jne
mov
out
gs
shrb
pop
shl
push
add
lods
shl
xchg
mov
or
inc
sub
rcr
pop
incl
sub
inc
lcall
xchg
rclb
jg
mov
pop
jns
push
orb
push
test
rcrl
adc
pop
or
cmp
lods
or
inc
and
jo
cli
fbstp
fmuls
pop
xchg
or
mov
aaa
adc
clc
push
push
movsl
fcoms
add
xchg
pop
mov
shl
cmp
xor
adc
loop
inc
mov
movsb
mov
pop
nop
add
lds
into
lcall
lods
div
aas
pop
fwait
dec
rol
push
mov
inc
inc
jae
jns
movsb
lret
cmp
subb
nop
sbb
hlt
mov
popf
jno
jle
add
and
cmpsb
repz
iret
clc
mov
mov
sbb
jp
dec
rol
mov
mov
push
jb
pushf
repz
movsb
push
aam
or
mov
js
dec
pop
push
in
std
and
adc
sbb
fldcw
jge
sub
loop
cmp
out
ficoms
or
shrl
pushf
pop
mov
jge
aaa
cmp
scas
iret
sbb
clc
ret
das
sahf
lds
das
fs
pop
sbb
mov
sub
cmp
xor
push
xchg
push
dec
fnstsw
inc
shl
jmp
ds
sub
cmp
icebp
and
jecxz
or
gs
cmpsl
mov
xchg
in
xor
fdivs
ret
mov
sub
stc
or
xor
cltd
aaa
mov
mov
mov
pusha
shrl
push
adc
pop
das
push
imul
in
mov
push
jnp
mov
adc
fildll
sbb
addl
push
jnp
jb
xor
cmc
test
clc
pop
sbb
pop
pop
push
pop
mov
sub
xlat
int
pop
ds
mov
lcall
mov
or
lahf
dec
sub
jb
mov
mov
push
cli
mov
int
sub
mul
inc
loope
push
movsl
loope
sbb
mov
in
push
mov
xor
push
fdivs
test
jmp
sub
out
mov
out
imul
out
dec
mov
inc
xchg
pop
mov
sbb
mov
jecxz
jge
mov
pop
mov
fldl
mov
shrl
push
add
lcall
das
dec
lcall
clc
clc
xorl
rol
xchg
addr16
add
cmp
adc
xchg
pop
stos
lds
jbe
movsl
ljmp
add
jno
mov
pop
sbb
fists
pop
adc
dec
push
adc
pop
mov
and
pop
movsb
iret
sub
ljmp
decb
mov
jg
int
insl
pop
ret
mov
sub
jnp
add
cwtl
fld
cs
in
lods
fstpt
xor
stos
push
movsb
jle
aad
leave
in
je
jp
xor
sti
sbb
xor
sarl
add
outsl
out
bnd
mov
clc
adc
and
mov
je
push
mov
loop
inc
lock
cmp
adc
rcl
scas
ja
scas
add
imul
mov
insl
ret
cwtl
or
push
xchg
idivl
pop
mov
mov
cmp
lret
sbb
hlt
inc
mov
out
mov
outsb
push
imul
lahf
inc
mov
ss
test
jge
in
xchg
loop
and
nop
push
and
cmp
sar
mov
adc
lods
inc
mov
mull
shl
lret
cmp
xchg
out
push
xchg
int3
cld
mov
outsl
or
and
mov
pusha
jmp
cwtl
push
sbb
jnp
int3
cmp
jns
pushf
push
sub
mov
lods
mov
pop
pop
stc
imull
mov
psubusw
lds
rorl
cs
data16
sar
mov
and
sub
jnp
out
loop
scas
inc
and
lcall
mov
fidivrs
inc
mov
cmp
lock
sub
iret
leave
inc
jbe
dec
sbb
mov
cmp
js
xchg
je
aaa
cli
adc
xlat
sbb
sub
pop
sub
pop
sub
pop
jo
cmp
std
push
push
iret
jl
aam
sarb
xchg
add
dec
inc
cmp
loop
xchg
mov
mov
jbe
lock
repnz
test
and
adc
jle
xchg
inc
lahf
cli
stos
push
pop
das
sub
sub
pusha
pop
xor
mov
or
sub
mov
jge
pop
xor
lods
xorb
xor
xchg
dec
jne
cltd
and
inc
cwtl
mov
jb
xor
push
stc
stc
loop
xor
sahf
jle
pushf
push
std
and
inc
jl
push
push
test
push
xchg
cltd
pop
pop
cltd
sub
jnp
cmpsb
sahf
loop
testb
rcrb
add
ja
jmp
cmp
cltd
xchg
testl
jae
pop
and
pushw
inc
jb
mov
sbb
iret
jns
lds
mov
pop
add
mov
lret
out
stc
dec
fbld
xor
pop
add
in
cmp
jae
mov
in
fimull
cmc
pop
jmp
and
repz
mov
jo
jb,pt
test
sti
sbb
xlat
test
std
mov
fdivrs
sub
jb
sub
xor
cwtl
mov
hlt
xchg
dec
jmp
aad
push
mulb
movsl
int3
imul
push
adc
jle
cmp
jle
ret
mov
call
dec
test
roll
daa
lock
in
insb
lahf
fdivl
jae
sbb
repnz
xchg
out
pop
pop
lock
jmp
pop
arpl
lock
cmp
pop
and
iret
int
xor
ss
or
imul
pop
inc
inc
sub
mov
sub
pusha
mov
test
out
pop
add
add
and
jecxz
clc
outsb
adc
xchg
jle
sbb
mov
or
pop
sub
negl
pushf
outsb
and
add
clc
and
sbb
addr16
cmp
dec
mov
ret
pop
dec
lahf
push
xchg
jbe
outsb
lods
pushl
jne
in
call
jo
in
popa
mov
iret
stos
xchg
and
mov
xor
adc
pop
lret
pop
leave
in
add
xchg
xchg
inc
es
add
out
dec
xchg
subb
add
or
les
xchg
aaa
jp
dec
or
jne
loop
cmp
imul
mov
jge
rcrb
push
lea
int
push
cli
es
sub
mull
mov
ds
sbbl
call
mov
mov
aaa
pop
inc
sbb
xchg
push
fsubl
push
ret
mov
lret
xchg
pop
push
pop
jmp
cmc
xchg
mov
in
add
addr16
dec
rcrb
popf
stos
mov
sub
cmp
add
cmp
flds
fnstsw
jnp
mov
es
jge
shrl
jle
xchg
lret
inc
shll
inc
cmp
dec
pop
mov
xchg
int3
or
cmp
pop
repz
mov
cmp
dec
daa
mov
dec
stos
push
hlt
icebp
sar
sti
mov
inc
push
ss
inc
jg
cwtl
aad
push
adc
inc
cmp
pop
xor
inc
fbld
in
fcompl
inc
andb
in
jne
stos
cmp
unpckhps
sbb
adc
jo
ss
out
scas
add
and
mov
add
pusha
sbb
dec
pop
jecxz
jge
lret
loop
mov
push
inc
jne
xchg
in
scas
leave
bound
fmul
movsl
push
mov
test
or
lock
jle
lods
movsb
cmp
push
cmp
mov
sbb
mov
jnp
mov
xchg
cmpsl
pop
mov
add
repnz
cmpsl
call
test
mov
pop
in
add
mov
jl
js
mov
enter
insl
fldl
jno
out
out
lcall
out
dec
ud0
imul
mov
fadds
xchg
xor
test
sub
gs
xchg
pop
xchg
pop
ljmp
lock
mov
cmp
adcb
addr16
cmpsl
xlat
xchg
jns
jmp
push
push
jge
adc
lock
mov
mov
jno
aaa
add
adc
test
mov
and
ficomps
gs
iret
mov
mov
lret
xchg
push
jmp
mov
test
loop
out
or
test
pop
inc
adc
fcomp
mov
jno
int
xor
decl
shl
inc
or
jecxz
and
test
out
cmpsb
ret
add
mov
icebp
jle
stc
xor
outsb
mov
jg
push
sub
ja
push
cltd
jbe
ret
mov
icebp
adc
xchg
and
iret
xor
pop
cmp
add
fst
push
gs
jge
fucom
loop
and
inc
sub
sub
aas
cmpsb
dec
cmp
enter
mov
sahf
cmp
aaa
loop
fxch
adc
ja
cmc
or
and
dec
test
inc
push
stos
lcall
shlb
mov
xor
cli
mov
push
les
lea
mov
mov
enter
push
xor
jle
ds
aaa
popa
shll
lds
mov
cmpl
gs
fwait
lods
pop
enter
inc
out
cmp
sub
pand
call
rcr
dec
push
mov
sub
add
scas
jnp
insl
js
xchg
mov
fisubs
aas
mov
dec
jge
les
and
add
and
xor
mov
call
xchg
aaa
jbe
mov
arpl
mov
or
sahf
fidivl
inc
adcb
add
adc
pop
pop
sub
popl
jno
xlat
lods
arpl
negl
pop
lea
outsb
adc
mov
pop
lret
and
jp
inc
pop
add
adc
das
loop
push
push
jge
mov
jle
xchg
fstpl
shl
xchg
jmp
lods
jbe
pop
jo
and
or
ljmp
adc
lcall
pop
mov
push
mov
xor
in
fisubl
adc
jmp
cmp
lods
outsl
jmp
jns
and
sbb
xlat
lret
movsb
pushf
clc
inc
hlt
jne
fldenv
cmp
enter
sbb
sub
jne
sub
push
pop
outsb
push
mov
fcmovu
shlb
jbe
or
test
push
or
xchg
sbb
stos
cmp
push
fnsave
cmpsl
dec
pop
or
dec
mov
mov
addr16
jecxz
inc
divb
inc
lret
push
outsl
dec
dec
or
aas
ret
sarb
out
pop
iret
sbb
xchg
sub
inc
ss
push
pop
bnd
adc
mov
pop
popf
xor
jp
push
dec
jle
outsl
lret
lret
sub
dec
push
stos
xchg
sub
jle
test
xchg
and
dec
orb
enter
hlt
lahf
mov
sbb
sbb
xchg
adc
mov
rcr
hlt
lcall
sarl
jne
push
in
popa
sti
lahf
mov
mov
jae
pop
and
adc
sub
xlat
jbe
mov
cmp
sbb
mul
lods
push
adcl
xor
mov
enter
cmp
xchg
dec
xor
jne
outsl
cltd
add
in
adc
mov
xchg
jmp
cmp
push
push
fcmovnu
popf
bound
and
das
add
outsb
js
jno
stos
leave
jge
ficoml
aad
add
cmc
xor
mov
dec
test
mov
imul
dec
mov
lahf
add
push
push
in
cmp
xorl
sbb
adc
xchg
mov
int
stos
xchg
cli
arpl
int
icebp
test
fcoml
lds
push
sub
repnz
mov
cltd
mov
lea
mov
xor
or
pop
and
not
lea
enter
sbb
inc
xorb
xchg
fwait
dec
ja
push
aaa
add
test
mov
out
in
jnp
cmp
shrl
call
ss
insb
cli
popa
mov
xchg
jne
cwtl
je
or
mov
dec
loop
mov
mov
cltd
mov
adc
cmp
dec
fadd
mov
sbb
cwtl
js
hlt
iret
movsb
dec
subl
fcomp
adc
stc
sbb
inc
fnstcw
xchg
xor
fnstenv
add
adcb
idivl
lcall
repnz
push
inc
cmp
adc
add
scas
orl
filds
addr16
mov
in
mov
jg
ret
mov
pop
dec
scas
xchg
pop
test
mov
dec
enter
aam
cmp
push
imul
push
lcall
icebp
outsb
pop
xchg
pop
loop
dec
fidivs
jae
mov
mov
sub
mov
push
cmpsb
add
outsl
push
stc
loope
in
int
das
sti
push
icebp
push
jmp
repnz
mov
mov
sahf
gs
insl
cmp
in
or
cmpsl
push
and
jp
push
in
and
push
pop
fdivs
xor
lret
adc
mov
xchg
aad
mov
ret
adcb
fbstp
inc
fs
push
mov
dec
sti
movsl
sub
adc
js
addr16
xlat
movsl
je
xor
in
fs
xor
lods
popa
stos
rorl
jmp
push
adc
aam
arpl
les
push
hlt
ljmp
pushf
xchg
shll
xor
mov
ja
pushf
aam
mov
mov
out
subb
mov
adc
out
stos
pop
mov
insb
hlt
js
cwtl
pop
sbbl
sbb
fldcw
push
gs
add
icebp
icebp
lret
jnp
mov
push
cld
xor
adc
aam
in
jge
negl
mov
je
mov
jp
insb
lods
flds
inc
mov
jb
in
test
jno
scas
dec
mov
popa
inc
dec
jmp
popl
out
pop
imulb
jne
insl
bound
push
imul
cmp
fldt
cmp
mov
mov
mov
popa
mov
sub
inc
shrl
sbb
lds
int
adc
mov
or
xchg
mov
icebp
mov
dec
loop
mov
cs
out
lret
mov
dec
fsubl
jns
in
push
jns
in
mov
dec
push
shl
fistps
cmp
sbb
scas
jnp
push
mov
inc
jp
push
imul
cmpb
gs
cmp
gs
out
out
push
or
lock
inc
ja
ja
ds
icebp
outsl
pop
in
iret
es
push
out
loop
mov
mov
idivb
xor
sub
xchg
jecxz
lods
popa
mov
sbb
cltd
mov
flds
aam
imull
push
icebp
dec
cmp
int
es
mov
jb
cmpl
imul
push
lea
cld
int
cmpsl
jg
pop
les
lret
cmc
inc
repnz
int3
or
adc
stos
aam
jo
inc
shl
sbb
jno
leave
xor
aam
loopne
xchg
popa
cmc
mov
sub
out
jo
ret
inc
je
call
cmp
call
loope
jp
cmc
add
jbe
sbb
pop
test
adc
idivb
mov
xchg
shl
mov
sub
lahf
mov
pop
lea
mov
mov
xchg
adc
sbb
lahf
fdivs
inc
inc
stos
out
adc
xchg
repnz
and
sbb
sbb
outsb
sbb
bound
push
or
or
pop
insb
mov
setg
testl
adc
jmp
insb
mov
ds
in
adc
loopne
mov
pop
push
adc
xlat
cld
ljmp
stos
mov
adc
shll
sbb
sub
mov
sub
arpl
mov
hlt
sbb
pushl
mov
cmp
fwait
jbe
xchg
in
mov
xchg
or
nop
pop
leave
outsl
fldl
or
add
sub
jbe
testb
pop
out
jb
div
movl
or
sbbb
rorl
add
mov
xor
dec
inc
aaa
sub
subb
cltd
arpl
mov
sub
mov
lahf
pop
push
cmp
push
push
cld
sbb
cmp
cmpsb
cmp
dec
mov
call
sbb
mov
cmp
gs
lock
inc
pop
movsb
cltd
rclb
push
movsb
jns
add
repnz
arpl
sub
les
mov
xchg
das
subl
mov
mov
sbb
sahf
mov
imul
outsl
out
pop
pop
stc
cmpsb
add
ja
das
in
in
jg
sahf
sub
xchg
es
and
imull
cmp
mov
ret
mov
and
xchg
and
mov
mov
fwait
mov
out
mov
in
bound
dec
jbe
mov
sub
sub
jmp
lods
in
xlat
jmp
loopne
mov
inc
shr
int
xchg
or
test
jbe
lret
mov
mov
cmp
loop
adcb
cmp
mov
mov
roll
sbb
and
push
jle
xchg
lods
push
nop
sbb
outsl
int
push
in
add
scas
or
cmp
inc
daa
mov
cmp
adc
sbb
call
adc
int
push
pop
cmpsl
xchg
rolb
xor
pop
push
test
jl
popf
jg
pop
lods
mov
adc
sub
scas
sahf
shll
int
add
mov
or
out
cmp
xchg
push
pop
xchg
or
xor
xor
outsb
fimull
cmc
adc
sbb
jns
add
adc
inc
sub
in
addb
lods
lods
mov
xchg
sbb
decl
or
pop
out
out
testl
xor
jno
pop
mov
fiadds
pop
lock
cmpsl
and
xor
pop
sbb
add
outsl
push
xor
or
rcrl
xor
std
add
or
xchg
rcl
pop
in
das
inc
mov
pop
inc
xor
scas
lds
fnstenv
xor
lret
sahf
loop
jmp
cmp
cltd
dec
dec
mov
cld
out
popa
inc
xchg
xchg
and
mov
stos
add
data16
scas
es
add
fidivs
add
xor
inc
adc
lds
mov
mov
cmpsb
cmp
mov
loopne
or
loop
jp
out
sbb
or
sub
xchg
cld
xor
add
ljmp
mov
test
pop
nop
out
inc
pop
jmp
aaa
lcall
aam
out
pushf
mov
popf
out
sub
sahf
stos
fistpl
xor
mov
enter
insl
lods
jle
movsl
and
jl
hlt
jns
cwtl
xchg
sbb
not
pop
test
lock
cmpsb
ror
xchg
repz
mov
lea
and
cmp
leave
scas
inc
xor
insb
ljmp
aam
push
push
ljmpw
ja
stos
cmp
push
xorb
jae
jnp
scas
add
push
cmc
shlb
xor
lods
cmp
xchg
pop
clc
sarl
movsl
movsl
test
cmp
xor
mov
or
pop
dec
lock
not
mov
fnsave
fisubs
lret
xchg
imul
jno,pt
std
push
xor
aas
inc
inc
xchg
sar
fbstp
ds
mov
mov
addr16
loop
je
scas
rcr
aad
xchg
xchg
inc
mov
fwait
mov
push
push
mov
add
or
icebp
and
in
sub
add
lahf
mov
or
stos
outsb
or
ret
mov
fisubrl
add
pop
popa
add
cmpl
sbb
out
pop
ret
hlt
mov
loop
or
out
mov
cmp
les
in
outsl
cs
sub
dec
inc
aaa
or
jge
sahf
imul
lahf
push
iret
mov
aaa
pushf
mov
sti
hlt
notb
dec
push
or
push
or
test
inc
cmp
sub
sbb
push
jecxz
mov
ficoml
fsub
push
pop
lret
pop
cmpsl
jp
mov
iret
dec
test
xchg
mov
mov
out
add
inc
or
repnz
stos
dec
lret
fsubrs
xchg
div
sbb
or
call
jmp
outsl
mov
scas
mov
neg
cli
jbe
push
cmpsb
les
xor
out
push
sahf
sbb
pop
mov
daa
repz
dec
adc
fbld
icebp
push
fstpt
sub
mov
fnstsw
or
pusha
inc
popa
lret
lods
test
fs
test
loope
jle
sbb
pop
into
xchg
outsb
mov
test
push
in
pop
xchg
fcom
jbe
test
cmpsb
icebp
test
cld
or
dec
mov
sub
mov
inc
mov
pop
cltd
mov
pop
insb
imul
cmpsb
dec
es
mov
fimuls
rcl
inc
out
fnstenv
pop
daa
or
mov
inc
mov
mov
gs
aam
jmp
insb
jp
mov
jns
jne
sti
imulb
test
adc
scas
add
adc
rcl
mov
orb
fdivrs
scas
jp
jae
stos
xor
mov
aaa
or
inc
test
mov
pop
dec
sahf
xchg
pop
dec
xor
and
cmpsb
add
or
mov
xchg
int3
sub
iret
xor
jne
sbb
ss
iret
stc
daa
add
mov
ss
fsts
xchg
dec
or
xor
cmp
faddl
jl
dec
mov
or
rcrl
orb
mov
mov
popf
mov
jns
cmp
mov
dec
hlt
in
xchg
scas
popa
jnp
les
mov
lea
xor
and
xchg
inc
sbb
sbb
push
ret
clc
adc
data16
movsl
pop
mov
or
clc
lret
or
addr16
dec
int3
pop
ror
jp
mov
pop
jnp
lahf
cmc
adc
cmp
nop
mov
int
lret
rcl
shrb
sbb
add
sbb
mov
pop
fxch
in
xor
pop
lock
inc
subl
movsb
sbb
lcall
sbb
lods
or
jg
movsl
aam
mov
es
into
mov
inc
xchg
sbb
repnz
inc
xor
dec
pop
push
loop
insl
adc
dec
test
out
insb
cmp
lods
push
test
dec
ljmp
divb
fidivs
fimuls
icebp
loop
sbb
xchg
push
add
out
cli
fidivl
or
or
shl
xchg
out
out
or
jl
daa
xor
shl
cltd
lea
mov
mov
rorl
data16
push
push
hlt
mov
in
aam
test
xor
movsl
adc
cmp
loopne
ret
push
sbb
pop
push
jo
addb
mov
dec
fidivs
shrb
sbb
clc
mov
cli
movsl
push
iret
lods
hlt
pop
inc
dec
mov
adc
inc
pop
xor
mov
mov
call
scas
scas
jnp
inc
mov
stos
pop
jb
in
jle
hlt
aam
xor
or
mov
cli
leave
lock
ss
and
pop
roll
inc
loope
pop
fidivs
imul
out
cmp
ret
lea
popf
jecxz
movsl
adc
mov
sub
jl
xchg
cmpsb
mov
dec
sub
orb
repnz
dec
inc
int
mov
and
stos
lret
dec
and
inc
mov
xor
ds
dec
and
in
lret
cmpsb
mov
lods
imul
mov
and
minps
inc
push
jo
jecxz
in
mov
adc
or
ret
push
in
dec
mov
cmp
test
push
mov
pop
test
add
inc
enter
les
cmp
xchg
adc
icebp
icebp
and
imul
mov
sbb
mov
or
inc
sub
movsl
insb
push
dec
xchg
aam
mov
mov
push
test
push
xchg
rep
mov
add
pusha
cli
mov
or
add
divl
movsl
xor
mov
divl
imul
sahf
add
push
cmp
gs
idivb
inc
mov
xchg
imul
lods
fwait
push
bound
imul
jbe
jle
cmp
inc
pop
xor
stc
jae
pop
into
inc
mov
mov
and
xlat
das
stos
lahf
sub
lcall
lock
xchg
pop
and
out
repnz
xor
jge
out
jmp
push
test
scas
add
pop
push
or
pusha
test
ljmp
jnp
loope
xchg
outsl
ret
xor
sbb
adc
sub
jecxz
lahf
js
or
insl
test
cmpsb
aam
imul
or
xor
leave
ret
enter
and
mov
sub
dec
aaa
ds
sub
roll
daa
popf
js
lcall
sub
dec
leave
scas
fists
enter
es
mov
mov
pop
add
dec
xchg
stos
lock
mov
jb
ljmp
and
ret
inc
or
xchg
xchg
inc
jns
or
daa
dec
bound
push
pop
mov
mov
mov
aaa
mov
test
rolb
jecxz
mov
das
jmp
aaa
mov
mov
jno
mov
jmp
fwait
or
jmp
rcrb
cmc
mov
adcb
mov
hlt
xchg
je
mov
repz
enter
rcrb
pop
out
fdivl
inc
dec
lds
mov
loop
inc
cmc
mov
sub
ja
add
mov
enter
sub
pop
cwtl
adc
scas
shll
rcrb
lcall
cli
test
aam
and
pop
test
and
mov
sbb
ret
xchg
mov
mov
push
out
mov
insl
aaa
push
pop
cmp
mov
ljmp
inc
jae
pop
push
clc
push
and
inc
and
lea
push
dec
adc
hlt
adc
add
add
incl
inc
sbb
outsl
mov
fucom
pop
mov
leave
icebp
jge
pop
push
mov
jmp
in
jne
push
in
mov
add
lret
subb
pushl
mov
dec
adcl
in
add
xor
iret
pusha
inc
mov
xor
jno
mov
je
push
cmp
into
repz
sahf
int
mov
push
mov
xchg
mov
sbb
lock
cmc
test
cltd
ss
xchg
xchg
jnp
aam
fwait
cmpl
stos
push
dec
adc
js
or
aam
mov
adc
outsl
add
xchg
xchg
dec
xor
loop
jg
gs
add
and
xchg
mov
mov
iret
dec
dec
xchg
and
inc
in
adcl
dec
imul
push
fdivs
cmp
lds
cmpsb
adc
push
mov
mov
push
sbb
jnp
jno
xchg
xchg
outsb
sahf
das
pop
xchg
pop
or
add
mov
push
pop
out
xchg
pop
jge
cmp
mov
addr16
adc
jmp
sub
fimull
mov
sub
mov
aaa
int3
dec
lcall
lea
aam
je
cmc
aad
pusha
push
stos
mov
xchg
inc
fwait
aam
xor
mov
aas
les
cmp
jecxz
jbe
add
mov
mov
mov
push
xchg
lock
jne
div
jb
ss
ret
sbb
push
movsl
sub
mov
add
push
ja
mov
in
mov
adc
in
scas
adcl
insl
jle
pop
lahf
xor
push
clc
sub
mov
push
popa
push
stos
iret
dec
hlt
je
push
lock
cltd
mov
inc
jns
jb
ret
jmp
flds
in
add
dec
arpl
rclb
test
mov
jecxz
scas
add
stc
mov
pop
mov
push
neg
dec
test
sahf
dec
or
xchg
aaa
je
jg
shr
mov
mov
shl
cli
js
jno
xchg
and
lods
cmp
pop
out
xchg
imul
dec
hlt
pop
or
inc
mov
xlat
inc
jp
push
cmp
dec
sti
xor
ss
repz
or
pop
stos
or
xor
xchg
out
je
fwait
pop
movsb
or
jle
inc
xchg
loope
jo
cmp
jg
hlt
stos
ficoml
test
lods
inc
inc
lcall
inc
mov
pop
dec
data16
mov
mov
je
mov
and
mov
mov
pop
je
out
inc
pop
mov
jno
iret
sarl
stos
mov
insl
mov
daa
aaa
inc
mov
stos
sub
adc
adc
and
mov
fsts
lds
mov
in
cmpl
fists
cmp
repnz
cmp
pushf
orb
push
sahf
enter
cmpb
jnp
adc
jnp
fistpll
mov
pop
jb
push
jb
pop
shrl
add
jnp
push
mov
cmp
push
movsb
scas
outsb
xchg
push
push
push
jmp
mul
iret
adc
lock
je,pt
mov
out
lret
mov
pop
sub
mov
sub
cmp
xchg
jle
movsb
scas
and
add
adc
mov
cs
sub
mov
sub
mov
testl
sub
mov
jae
int
xor
out
mov
dec
fistl
push
sahf
arpl
int
mov
icebp
adc
div
stc
scas
sbb
pop
cmp
push
scas
xchg
pop
xlat
cmp
mov
push
jb
in
sbbb
cmp
andl
icebp
mov
enter
int
and
je
fwait
xchg
pop
mov
xchg
iret
cmpl
clc
and
bound
dec
mov
lods
pop
outsb
mov
add
jnp
add
jbe
push
pop
out
xchg
inc
pop
cld
push
mov
lods
mov
dec
push
jg
inc
leave
fwait
dec
pop
hlt
add
aaa
daa
cmc
mov
enter
sbb
mov
les
jl
mov
fildll
inc
shl
orl
push
ds
pop
lret
rolb
lret
xchg
dec
daa
sub
push
dec
ret
push
pop
mov
push
push
xchg
ljmp
pushf
sti
jl
xlat
push
clc
sbb
jne
cmp
jo
ds
inc
add
daa
cmp
add
xlat
bound
xor
fstpt
outsl
and
mov
xchg
sbb
mov
mov
imul
jns
popa
loopne
out
add
push
pop
cmp
mov
cli
jno
mov
call
push
inc
mov
mov
pushf
outsl
daa
inc
jnp
or
out
pop
jge
in
mov
push
fsubs
mov
push
test
fstl
rolb
lods
scas
movl
xchg
mov
pop
addr16
loope
test
popf
shll
aas
loope
addb
insb
or
cld
xorl
mov
mov
mov
jg
or
mov
sbb
mov
push
iret
movsl
cmp
aaa
and
roll
insb
frstor
xchg
mov
fsubrl
fstpt
lds
mov
out
push
sbb
push
test
lret
stc
fisubs
mov
aaa
mov
push
sub
sarb
dec
cld
movsl
pop
mov
add
cmp
rcr
push
mov
lcall
rdmsr
out
inc
mov
ret
les
adc
data16
lret
push
dec
scas
inc
insb
stos
push
push
cmc
xchg
add
or
add
les
imul
decl
sub
add
in
outsl
pop
setge
mov
vsqrtss
push
cmp
pop
cwtl
xor
mov
test
pop
sahf
fnsave
movsb
or
and
push
adc
out
in
arpl
add
dec
insl
and
sarl
add
fadds
sub
cs
out
or
leave
fsts
cmp
dec
xchg
fdivrp
lret
jbe
push
sub
mov
cmpsb
dec
cwtl
cwtl
inc
push
push
lcall
adc
push
inc
leave
mov
out
scas
jae
xor
enter
jnp
mov
ret
xor
aam
loope
pop
fisttps
test
mov
dec
mov
push
xchg
or
mov
mov
mov
pushf
xchg
adc
scas
mov
or
mov
ficompl
mov
data16
inc
mov
enter
xlat
xchg
hlt
cmp
mov
outsb
push
addr16
push
gs
add
fisttpll
out
xor
adc
jne
addl
lock
dec
dec
sqrtps
aas
xor
gs
insb
out
imul
push
adc
inc
cmp
popf
int3
daa
lock
repz
or
rcl
jb
int3
fmull
xchg
clc
imul
scas
push
xor
rol
xchg
in
mov
jmp
mov
xchg
mov
inc
mov
cmc
jb
xor
daa
pop
pop
dec
aaa
aaa
into
cmp
mov
dec
ret
rorb
aaa
aad
and
pop
cmp
loop
cs
pop
fildll
cli
push
mov
scas
add
stos
cmp
inc
addr16
xchg
pop
pop
sti
es
sbb
std
sbb
ljmp
fcoml
popa
pop
shrb
scas
inc
mov
xchg
fnstsw
sub
pop
xchg
fistl
rorb
fldt
shll
iret
sub
enter
loope
popa
in
add
jo
cltd
add
or
adc
mov
mov
js
out
dec
xor
cs
jecxz
pop
jno
cmc
mov
push
arpl
jae
cwtl
inc
add
orb
out
and
insb
dec
outsl
sbb
and
mov
jp
lahf
out
jb
xchg
int3
mov
sub
mov
shll
lcall
xlat
icebp
sbb
subl
sub
test
subl
sbb
add
push
xchg
pop
adc
adc
and
dec
jmp
jle
mov
test
pop
scas
mov
shl
xchg
int
pushf
mov
mov
setno
scas
xor
and
ficomps
fs
jmp
notl
adc
cltd
push
out
or
or
and
rol
movzwl
mov
cs
xchg
aas
xor
aad
pop
mov
das
sbb
jbe
repnz
and
mov
mov
in
push
add
fcoml
sub
lea
cltd
or
les
lds
fidivrs
pop
ret
mov
lcall
jo
rcl
mov
fadds
mov
test
lods
push
and
rol
jle
outsl
idiv
mov
ret
in
sbb
in
mov
cld
enter
dec
sbb
dec
add
push
sysret
movb
mov
addr16
call
lock
cmpsl
push
icebp
mov
push
add
push
mov
pop
pusha
sahf
movb
cmpsl
cmp
leave
push
mov
stos
jae
and
movsl
mov
jns
jmp
mov
into
andb
rolb
push
mov
pop
jb
ret
mov
pop
push
imul
and
sbb
sahf
enter
lods
add
subl
out
cmp
inc
test
es
xchg
popa
loope
mov
push
inc
aaa
sbb
mov
fs
xchg
loopne
adc
sub
gs
clc
xchg
pop
mov
or
movsb
shl
addr16
test
imul
push
sbb
cmp
xchg
cs
pop
movsl
ficoml
mov
dec
frstpm(287
jb
or
inc
xor
push
mov
stc
xchg
mov
jno
dec
jecxz
pop
xor
clc
dec
insl
outsb
xor
mov
popa
push
mov
jbe
sub
cwtl
mov
sbb
jp
insl
ficompl
xlat
inc
fcoms
xchg
jp
aad
push
popa
fiadds
iret
mov
repnz
add
lds
shll
add
mov
rorb
xor
inc
clc
in
xor
xchg
mov
xchg
sub
sub
andb
negl
pop
sti
aaa
aas
stos
add
gs
pusha
lds
aad
lret
rorl
pop
or
loop
push
stos
test
jbe
xchg
xchg
pop
mov
leave
cmc
repnz
inc
in
fistpll
loopne
jns
cmpsl
inc
cmpsl
stos
xchg
pop
add
out
sbb
imul
mov
jle
into
outsl
test
out
out
dec
cmp
stc
sbb
xlat
pop
pop
mov
fisubl
xchg
dec
cmp
stos
insb
xor
dec
xlat
jnp
jecxz
andb
ret
mov
cmp
jg
sub
lods
or
jmp
xchg
add
pop
xor
std
out
mov
and
pop
jne
dec
insl
jae
push
clc
sbb
adc
ficoml
cltd
ja
aad
cmp
rcll
and
aas
add
pop
adc
cld
mov
ljmp
popf
out
inc
popl
mov
dec
mov
xchg
push
dec
fisttpl
test
jmp
inc
xchg
cwtl
pop
and
fsubrl
adc
stos
loope
add
jns
adc
xchg
sub
jnp
lods
into
shlb
sbb
mov
xchg
inc
out
dec
jno
xchg
push
imul
add
push
and
mov
out
push
pop
stos
jne
jno
je
stc
icebp
sub
mov
mov
in
pushl
repz
jge
pop
out
pop
shl
testl
leave
lods
jns
inc
jmp
adc
pop
mov
addr16
push
adc
test
push
dec
fs
lods
xchg
enter
jl
add
lock
and
mov
icebp
dec
dec
sbb
add
cmp
push
pop
rcrb
xchg
loopne
testl
cmp
icebp
ret
sbb
mov
insl
mov
mov
and
sub
ss
lods
negl
sbb
mov
stc
inc
mov
sub
sbb
out
fwait
ljmp
jg
jns
add
pop
lcall
or
not
jge
ljmp
sbb
pusha
sbb
lock
mov
out
rcrl
and
jb
out
fs
push
cmpl
jne
jge
xacquire
sbb
lods
mov
inc
andb
js
iret
jle
jecxz
rcrb
mov
pop
xor
loopne
xor
pop
sti
sbb
rcl
push
pop
pushf
dec
cmp
cltd
arpl
xchg
into
hlt
cs
inc
jl
add
std
out
adc
ret
shrl
add
mov
adc
jp
fdivr
adc
notl
jb
mov
dec
stc
leave
enter
inc
cwtd
push
nop
lock
jl
jmp
into
arpl
cmc
cltd
sub
cmc
inc
push
add
jb,pt
mov
mov
sub
cmp
into
and
lock
outsl
add
mov
dec
dec
ss
jnp
into
dec
jbe,pt
sub
repz
cwtl
repnz
fstl
repnz
std
bound
xor
dec
in
in
mov
adc
or
jae
push
fs
mov
fnstenv
mov
jno
or
fcomps
repz
scas
js
pop
imul
pop
inc
cmp
dec
inc
lahf
jae
ret
mov
out
push
and
sbb
mov
ja
push
sbb
mov
fadd
out
icebp
lods
sub
arpl
add
mov
lock
push
leave
add
sbb
popa
cwtl
cwtl
imul
imul
pop
sub
outsl
and
fs
js
js
lock
std
push
das
repnz
xchg
xchg
push
or
leave
pop
fcoms
addr16
mov
in
enter
dec
dec
nop
mov
subl
pop
adc
loope
xor
and
pop
je
xchg
push
fcompl
out
push
stos
loopne
fiadds
sub
iret
ljmp
jbe
push
aad
ret
movsl
notl
aaa
cli
hlt
insb
mov
test
shl
pop
cld
jo
popw
jo
push
and
jg
subps
iret
or
das
shl
xor
movsl
jns
inc
mov
pop
xlat
and
data16
mov
incb
jns
sub
jmp
push
cmp
xchg
sti
push
sbb
jg
mov
jmp
call
jns
cmc
sbb
lea
xor
lret
mov
inc
cli
or
in
cli
fdivl
xchg
int
fsubrl
add
mov
cld
outsl
lock
cmp
push
xchg
aad
mov
rcrb
inc
jge
pop
jge
xchg
or
js
jbe
push
sbb
rcr
or
inc
dec
sub
fucomp
inc
icebp
icebp
popa
aaa
adc
xchg
xor
sbb
inc
test
push
ret
aad
ret
sbb
out
int
idivb
rorl
loope
mov
sub
cmp
sbb
xchg
add
inc
cmpsl
test
add
sbb
out
jno
aas
cmpsl
jb
dec
lret
xchg
inc
sar
mov
ss
stc
loope
in
shrl
inc
insl
inc
mov
aas
movsl
add
mov
je
shl
in
or
pop
mov
jmp
or
test
adc
outsl
inc
enter
push
nop
jo,pn
inc
jne
aam
jne
push
jmp
jp
arpl
dec
mov
sbb
sub
mov
push
out
add
push
inc
int3
pop
fbld
jo
lock
sbb
mov
add
xchg
jbe
cli
sub
mov
mov
inc
or
stos
xchg
daa
arpl
fisttpl
cmp
xchg
dec
lock
sbb
add
sti
mov
clc
cmp
mov
repz
dec
pop
arpl
or
jb
jecxz
scas
sub
sbb
push
xor
sub
mov
test
cmpl
sbb
push
xor
jg
inc
iret
add
push
and
mov
ret
stos
outsl
or
push
xchg
dec
sbb
push
mov
adc
cli
stc
and
dec
jmp
mov
aaa
mov
add
andb
adc
or
clc
mov
in
int3
sbb
xchg
int
cltd
call
and
inc
xchg
mov
int
popf
jecxz
fwait
lret
scas
xchg
mov
pop
jle
shlb
pop
push
setae
xchg
mov
jne
inc
ret
iret
incb
les
pop
mov
xchg
test
ljmp
bound
sub
push
cmp
adc
in
sub
lds
push
mov
insb
sub
push
add
dec
test
dec
xchg
xor
xchg
inc
push
rolb
rorl
sbb
out
jns
mov
mov
jbe
add
call
ret
add
outsb
inc
and
mov
in
nop
jecxz
mov
and
mov
push
in
incb
and
dec
sub
lods
mov
push
sub
jno
xchg
ljmp
add
jecxz
push
sbb
dec
dec
xlat
inc
es
lcall
adc
stos
loopne
sub
and
mov
push
dec
jge
push
jmp
mov
jl
stc
cmpb
cmpsb
cmp
add
movsb
in
add
sbb
mov
lods
call
aas
call
popf
enter
mov
and
push
enter
shlb
sbb
sahf
adc
and
mov
in
xorb
mov
inc
sbb
push
out
mov
push
or
cmpsl
mov
mov
int
cmc
lret
sbb
leave
test
push
push
ds
arpl
inc
jle
pop
pop
mov
fwait
jmp
jae
dec
fdivl
out
mov
and
add
mov
outsl
jno
into
push
inc
aaa
inc
mov
dec
jle
test
ss
xor
push
in
fisubs
cwtl
aam
xchg
aaa
mov
in
std
js
out
arpl
in
les
cwtl
xchg
test
jo
clc
xchg
push
mov
imul
fucomi
stc
xor
push
rorl
or
xor
leave
insl
adc
das
in
fidivrl
fdivrs
into
loopne
xlat
or
jle
pop
xchg
daa
lods
hlt
lods
aam
adc
fcmovbe
jnp
pushf
cs
cmc
jmp
sbb
aas
adc
lods
lret
mov
or
mov
jbe
or
xor
xchg
mov
xor
lea
fdivl
pop
adc
fsubrp
xchg
test
jle
inc
hlt
mov
test
out
fcoms
sarb
pop
fiadds
push
stos
pop
repz
jecxz
sub
adc
add
int3
dec
jp
pcmpeqd
pop
or
jo
ficompl
cmp
repz
xor
out
pop
dec
inc
push
loop
adc
imul
daa
cmpsb
loope
and
cmp
dec
insb
inc
or
insl
mov
mov
jl
inc
or
iret
sbbb
xor
sbb
xor
pusha
mov
leave
sub
xor
pop
jle
jge
or
cmpsl
and
dec
pop
mov
mov
pop
js
pop
and
jp
dec
repnz
stos
pop
adc
hlt
pop
insb
stos
push
cmp
xor
sub
or
pop
je
push
popf
fisubrs
arpl
es
mov
gs
insl
fwait
push
loope
cmp
lahf
popf
cmp
cmp
mov
adcl
adc
enter
sub
sub
ljmp
xchg
add
xor
jecxz
adc
dec
pop
jecxz
jnp
mov
and
add
lods
lock
and
mov
aam
ss
or
adc
lret
adc
add
mov
pop
ret
fnstenv
cmpsb
out
and
std
stos
orl
ffreep
add
jg
xchg
in
fimull
es
inc
xchg
rcrl
push
lea
inc
jl
pop
jl,pt
aam
fcmovnb
mov
adc
add
repnz
inc
pop
xor
jmp
xor
fists
mov
icebp
addr16
add
fcmovnbe
dec
lcall
mov
fprem1
pop
adc
jb
inc
jle
push
adc
testl
xchg
sbb
out
xlat
nop
ret
lds
pushf
cli
inc
push
movl
pop
push
jbe
mov
cmpb
lds
push
sub
xchg
int
sbb
xchg
mov
popf
int3
fdivrl
mov
push
ja
mov
lahf
pop
and
xchg
or
mov
or
enter
test
out
out
jnp
push
in
adcl
and
mov
jne
out
jbe
test
adc
ds
push
out
ja
push
jns
leave
test
sbb
outsb
pop
xor
orb
mov
js
pop
jg
mov
rorl
mov
jns
jp
mov
addr16
jmp
lock
mov
lahf
cwtl
iret
adc
lcall
cmp
les
xchg
jo
repnz
pop
daa
das
int
popa
ljmp
lock
jo
testl
mov
popf
popf
andb
mov
addr16
rol
mov
mov
xchg
sub
aas
cmp
add
and
mov
adc
cmp
adc
lret
ss
les
fldenv
sub
pop
pop
outsb
jmp
test
jb
sbbl
daa
stc
aam
ljmp
cwtl
enter
mov
inc
adc
hlt
mov
dec
lock
popa
push
adc
imull
pcmpeqb
inc
adc
clc
jbe
sub
xor
cwtl
jl
ljmp
mov
sub
pop
and
jae
shl
aam
cmp
mov
push
push
lods
xor
ficomps
stc
inc
pop
cmp
ljmp
arpl
mov
xchg
sahf
lds
mov
xchg
sbb
in
ret
cmpsl
add
or
sbb
insb
adcl
jno
fnstsw
fs
jl
int
fs
push
cwtl
cmp
fldl
jecxz
dec
push
orl
xchg
aam
add
pop
sbb
xor
push
mov
jb
js
fnsave
das
fcompl
jo
lock
ret
cld
in
sub
insl
cmp
push
cmc
cmpb
inc
or
push
cmp
sub
lods
scas
ror
adc
sub
pop
mov
jo
test
ja
mov
pop
xor
push
mov
ja
xor
call
push
ds
insb
dec
mov
cld
mov
stc
fwait
in
push
dec
mov
xchg
pop
adc
js
dec
pop
fsubp
pop
xor
inc
cs
push
or
ja
xchg
mov
shlb
jb
pop
sbb
not
movsl
dec
or
cwtl
xor
mov
dec
fwait
or
and
stc
call
or
sub
fbld
scas
mov
das
cmpsb
push
incb
mov
arpl
loop
mov
popf
dec
sbb
in
outsl
mov
mov
out
dec
imul
ftst
ds
js
mov
shrl
in
mov
dec
frstor
ret
repz
sahf
in
pop
outsb
dec
arpl
mov
shrl
inc
bound
and
xor
dec
fstpl
fistl
or
aas
pop
sbb
inc
mov
mov
pop
mov
fistps
es
pop
fwait
push
pusha
popf
mov
scas
adc
sarb
sbb
dec
dec
sub
std
mov
popa
setl
push
int
xor
das
add
pop
cmp
mov
pop
pop
addr16
mov
jmp
xchg
mov
sub
push
pop
mov
lcall
mov
sub
cmp
lret
and
sahf
stos
and
mov
and
adc
fst
push
mov
cwtl
add
movsl
ljmp
mov
jle
pop
lret
arpl
insb
sbb
cltd
sbb
repz
mov
hlt
inc
push
push
mov
inc
icebp
outsl
xlat
jp
sbb
roll
jo
mov
cwtl
cld
stc
mov
into
mov
and
mov
xlat
or
push
repnz
xlat
jecxz
adc
cmp
daa
insb
bound
mov
and
leave
xchg
rclb
or
psubusw
cwtd
cmp
fbstp
jo
jb
jo
popf
cmpsl
fistpl
popa
jp
cmc
mov
mov
push
fsubrp
jbe
xchg
cmp
das
mov
mov
scas
adcl
int3
cmp
and
faddl
enter
adc
mov
test
mov
jo
mov
psllq
push
rorl
push
mov
xchg
mov
adc
inc
mov
repnz
iret
daa
lcall
dec
cmp
xchg
jnp
stc
jl
add
and
sub
inc
dec
cmp
divb
sbb
data16
and
fwait
aad
neg
lock
xchg
pop
ja
or
mov
addl
mov
pop
mov
gs
lods
lds
or
pop
stos
push
fcomps
fwait
rol
xchg
jl
gs
mov
addr16
test
lods
aaa
jl,pt
dec
mov
push
dec
push
jns
nop
jmp
sbb
icebp
stos
xor
xor
lea
out
cli
fisttps
lock
sbb
push
cmp
adc
sti
push
ds
mov
or
popl
mov
clc
fnsave
mov
xchg
and
push
shlb
std
outsb
dec
into
sahf
pushf
jb
stos
jle
subb
rcl
sbb
sub
sub
pop
dec
lea
scas
sbb
xchg
or
mov
add
adc
dec
popa
xor
inc
inc
leave
pop
mov
add
pop
jno
jmp
scas
or
notb
sub
in
enter
fwait
mov
fwait
xor
dec
imul
pop
aad
cs
lods
cmpl
lock
enter
pushf
cmpl
xchg
rcrl
dec
mov
jge
sbb
xchg
inc
bound
pusha
shll
inc
loop
xor
add
gs
dec
fildl
hlt
jp
xlat
cmp
mov
mov
adc
daa
xchg
stos
dec
iret
or
loope
shrl
scas
dec
jo
out
rclb
cmp
addb
icebp
and
mov
mov
sbb
mov
and
cmc
in
or
shrl
add
leave
push
dec
in
sbb
mov
test
inc
mov
push
mov
jo
jo
and
xchg
les
inc
push
xor
or
or
mov
dec
mov
outsb
mov
mov
adc
in
negb
loopne
mov
adc
loope
or
movsb
jb
sub
stos
sub
mov
push
fwait
inc
xchg
adcl
adc
cmpsl
ss
pop
stos
xchg
sub
stc
sub
jno
push
clc
mov
movsb
mov
pop
jns
lret
lcall
xchg
fstps
shlb
out
aaa
inc
paddd
sbb
repz
dec
mul
xlat
adc
loope
dec
or
xorb
push
xor
pop
mov
cs
enter
movnti
push
movsl
cmp
pop
out
pop
jo
xchg
sbb
jle
jo
sbb
jnp
aad
mov
mov
push
adc
sarb
dec
pop
mov
stos
lods
sub
aaa
out
fwait
mov
mov
fildl
jnp
out
ret
or
xor
mov
sbb
jle
leave
pusha
lahf
hlt
sub
mov
and
rolb
iret
lcall
jne
push
dec
mov
inc
pop
popf
mov
mov
fisttpl
cmc
mov
cmpsb
pop
add
sbb
mov
cmp
fcoms
pop
scas
lret
jne
push
jmp
push
jno
mov
stos
packuswb
sbb
push
leave
mov
xchg
js
out
add
inc
jno
cmpsl
flds
jne
int
add
scas
xor
call
dec
push
aad
dec
scas
cmpsl
lock
mov
pop
add
repz
xor
pop
inc
push
inc
jmp
cli
stos
inc
lock
mov
in
icebp
fiadds
ja
push
mov
lcall
stc
xchg
into
xlat
adc
mov
repz
push
adc
cmp
jle
sbb
and
mov
cs
adc
jl
ss
adcl
add
xchg
pop
cld
ja
and
hlt
ljmp
insl
or
lds
xor
sbb
in
stos
pop
cltd
xchg
mov
cmp
inc
test
flds
inc
xchg
push
ljmp
mov
adc
add
rolb
mov
int
iret
sbb
aad
adc
popa
push
xlat
in
pop
xchg
jp
iret
je
xor
idiv
fdivrp
jbe
xor
push
nop
test
cwtl
test
push
dec
mov
push
mov
xor
das
into
mov
jno
jmp
test
test
pop
cli
imul
cmp
jmp
sub
pop
dec
push
insb
mov
or
and
and
out
mov
cmp
cmp
sbb
jl
gs
sub
imul
in
notl
adc
mov
jmp
pop
mov
call
icebp
and
pop
std
je
mov
call
or
push
push
mov
outsl
xchg
mov
aaa
jecxz
into
sarl
jbe
mov
ja
imul
movsl
popa
shr
cmp
jnp
loopne
jle
int
shll
mov
mov
and
insb
aam
pop
or
mov
pushf
jae
inc
outsb
insl
sub
je
ret
lods
xchg
dec
sbb
jnp
push
gs
ret
add
arpl
xchg
into
out
mov
dec
pop
xlat
cmp
aas
fisubrl
and
mov
jle
jnp
dec
adc
add
add
mov
or
or
icebp
sub
inc
mov
push
sbb
mov
stc
movsb
sbb
cwtl
js
mov
in
leave
test
insb
sti
cmp
ljmp
ret
pushf
lcall
pop
and
outsb
popf
pushf
es
xchg
rcl
dec
dec
xor
lret
loope
ret
sbb
fadds
xchg
testl
out
jno
dec
daa
jge
push
faddp
pop
int
and
fs
add
push
push
repz
sti
dec
jb
xchg
push
push
xor
push
scas
aam
cmpsl
loop
std
push
outsl
cmp
add
jecxz
jecxz
in
shrb
xchg
mov
subl
ss
add
negl
stos
test
cld
jns
xchg
pop
mov
sbb
sahf
pop
out
fdivr
push
pop
adc
jmp
insl
mov
xchg
jno
insb
daa
jle
pop
das
movsb
in
xorl
daa
push
push
movsb
xchg
or
sahf
dec
sub
sahf
mov
fcomps
sbb
andl
test
insb
in
sar
mov
bound
ret
int3
stos
outsb
cmp
je
ficompl
xchg
inc
jecxz
imul
test
enter
mov
sti
mov
sbb
inc
ret
pushf
add
pushf
popa
sub
rcr
xchg
mov
mov
xchg
mov
jns
push
jge
insl
aaa
fnstsw
loope
mov
or
icebp
sub
dec
subl
push
imul
xor
ds
push
adc
aas
lods
jl
or
scas
lahf
sub
insl
or
subl
test
fisubs
push
xor
insb
push
sahf
enter
jns
dec
mov
mov
adc
iret
hlt
fxch
mov
add
pop
jp
enter
add
or
cmc
lock
jmp
pushl
lods
daa
outsb
jo
cld
ror
imul
add
dec
push
data16
mov
js
inc
jp
dec
xchg
xorb
adc
shrb
scas
push
outsb
aas
inc
cmp
lock
dec
into
clc
sbb
popf
add
push
sub
or
ret
jns
mov
in
add
or
scas
xchg
mov
and
cli
pop
mov
cmp
cmp
test
mov
push
xor
xchg
jb
xchg
jb
mov
je
movsb
push
sub
push
mov
loope
jp
sahf
inc
inc
icebp
mulb
leave
test
xchg
lret
clc
cltd
test
hlt
lock
add
mov
loope
mov
hlt
imul
xlat
dec
shrl
mov
scas
push
cmp
lock
pop
in
dec
jb
incb
cli
xor
nop
push
or
sti
xchg
jle
inc
les
scas
rcrl
stc
jl
jl
sti
les
int3
inc
stos
incl
sbb
into
jb
jb
pop
fidivs
pusha
sbb
mov
jecxz
push
pop
mov
push
mov
inc
call
xchg
je
imul
fs
cmp
xor
pushl
xchg
sbb
pop
inc
sub
pusha
xor
xchg
xchg
jge
cmpsb
leave
jp
orl
or
sarb
ds
pop
test
stc
aad
mov
aam
bound
ret
rep
ljmp
fcoml
fst
sbb
cli
les
orl
push
add
mov
xchg
pop
sbb
ret
cmpsl
jne
insb
jno
or
sbb
loop
sub
inc
xchg
mov
inc
push
cmpsb
adc
xor
aad
xchg
lods
xor
cmpsl
pop
adc
add
mov
mov
fidivrs
inc
xor
inc
and
stos
add
jne
test
mov
fisttpll
in
scas
sub
mov
int3
ds
mov
lods
popf
pop
fnstenv
mov
dec
data16
adc
xchg
dec
fsubrs
cmp
js
or
stos
in
or
mov
sbb
shlb
adc
pop
arpl
pop
xor
push
mov
ljmp
insb
enter
mov
aaa
adcb
push
test
jno
sbb
int3
cmp
mov
loop
xchg
or
daa
mov
sub
in
push
lock
mov
mov
out
sahf
mov
testl
ss
lret
add
dec
xchg
pop
fstl
pop
cmp
sub
lahf
jle
push
xor
mov
dec
push
or
pushf
sub
adc
popa
mov
repnz
sbb
pop
fdivrl
adc
xchg
loopnew
cmc
bound
mov
fcoml
movl
xor
xchg
mov
test
fistpll
mov
push
add
test
mov
mov
bnd
mov
inc
movsl
lret
clc
or
and
aam
in
or
cmp
fcomps
fisubrs
scas
and
or
mov
lods
std
les
push
push
xchg
dec
or
sahf
flds
nop
mov
push
ss
jo
movsl
push
outsl
std
jnp
or
pusha
fbld
inc
test
mov
call
scas
or
add
lahf
test
mov
cld
test
clc
sahf
jmp
lahf
fcoml
jne
movsl
xchg
mov
mov
insb
repz
fwait
sub
pop
or
mov
dec
loope
xor
mov
rcrl
push
insb
push
push
cwtl
dec
adc
lcall
into
mov
test
xor
cmp
aam
mov
loope
rolb
hlt
jp
shll
or
jmp
loop
out
jno
adc
xor
inc
dec
pusha
push
popf
and
ds
imul
mov
pop
xor
add
mov
push
push
xchg
xor
or
cmp
jno
imul
mov
lahf
fisubs
int3
inc
mov
outsl
xchg
inc
sub
xor
push
jp
cld
addr16
out
and
lahf
pop
adcl
sub
jns
popf
adc
xor
pusha
mov
scas
pop
inc
imul
or
push
lret
addr16
imull
mov
cltd
fisubrl
pop
mov
pop
repz
clc
int3
daa
push
movsl
mov
push
cli
dec
pop
out
adc
js
cmpsl
imul
jle
sbb
adc
jo
or
xchg
xchg
mov
ret
adc
das
mov
imul
clc
cltd
pcmpeqd
imul
lea
cmp
push
mov
and
xor
jp
and
sbb
lret
inc
dec
out
sbb
mov
xor
pusha
mov
inc
push
fs
cltd
hlt
out
in
add
sti
push
hlt
and
or
push
mull
xor
cmp
mov
push
mov
outsl
sti
aaa
insb
lea
in
lock
push
gs
stc
or
push
enter
out
xchg
adc
notl
or
shrb
roll
push
sarb
faddl
test
testb
test
cwtl
xor
xorb
push
stc
push
mov
in
xchg
sbb
outsb
orl
dec
xchg
adcl
repnz
inc
inc
out
add
stos
mov
jg
sub
shl
sbb
and
ret
mov
test
pop
adc
jle
loope
xchg
push
ds
or
or
daa
dec
dec
mov
cmp
jnp
pop
enter
popf
xor
jns
repnz
mov
fldl2e
push
int
mov
arpl
rolb
out
sub
sahf
xchg
rclb
sbb
lahf
sbb
cli
sbb
dec
loopne
xor
loopne
ljmp
jo
rcr
cmp
insb
pop
shl
stc
jg
xor
fiaddl
sbb
cmp
stc
in
ret
cmc
inc
pushf
jae
lods
xchg
adc
enter
adc
cld
jnp
adc
xchg
inc
cmpsl
loop
sub
outsb
xchg
jl
push
gs
pop
sub
stos
inc
jp
out
push
lea
xchg
outsl
out
or
int
aas
pop
cli
dec
xchg
or
aaa
and
push
fidivrs
sbb
dec
pop
add
mov
or
push
gs
jo
stos
enter
xchg
adc
or
inc
mov
mov
div
add
jns
repnz
mov
and
adc
adc
loope
test
daa
mov
cmc
imul
adc
test
insl
imul
rorb
jle
outsl
jae
rorb
data16
mov
pop
inc
daa
mov
in
into
and
add
mov
clc
ss
dec
inc
mov
cmp
sahf
in
aad
sub
repz
sbb
movsl
add
mov
prefetch
xchg
mov
test
gs
stc
lods
imul
pop
lds
mov
shlb
add
insb
ss
and
and
sub
arpl
adc
cmpsb
mov
imul
insb
cmp
out
xchg
enter
xchg
or
or
mov
rolb
incl
stc
push
xchg
mov
xchg
xchg
daa
sbb
dec
adc
sub
mov
push
sub
aas
push
inc
mov
add
scas
push
fs
int3
cld
sub
mov
and
xchg
incb
stos
pop
jl
xor
mov
clc
cmp
sub
mov
sub
xor
out
mov
pop
or
mov
pop
nop
test
int
mov
aam
jb
fs
push
xorl
push
adc
iret
jl
pop
inc
loopne
test
dec
pusha
cmp
scas
and
xor
int3
rorb
and
push
fucomip
mov
fdivp
lods
push
xor
mov
scas
fists
imul
jbe
iret
xchg
popa
push
pusha
jp
add
into
dec
jecxz
ffreep
call
mov
jno
scas
pushf
sbb
mov
push
inc
pop
lret
or
mov
jo
leave
push
out
mov
rolb
imul
sbb
daa
out
mov
das
mov
out
lock
sub
je
lahf
repz
jb
test
aam
aad
pop
add
mov
mov
xchg
pop
pop
mov
cmpl
clc
cmp
jg
push
sub
mov
lea
lods
sub
push
mov
bound
aas
ret
pop
pop
and
filds
cli
push
xchg
adc
or
outsl
xchg
pop
mov
mov
inc
push
popa
inc
jmp
les
mov
les
mov
or
dec
out
sbb
jns
inc
arpl
ds
inc
stos
inc
inc
hlt
cltd
add
enter
inc
fmull
sub
lret
xchg
or
mov
lods
aas
cmp
cld
sbb
neg
shlb
les
sbb
into
sub
pop
fcom
rcrb
xchg
loop
jl
mov
movsl
xlat
jnp
add
in
test
sarl
sub
mov
xchg
mov
stc
out
fstpl
add
outsl
js
mov
btr
ljmp
ret
cmp
push
incl
pushf
pop
add
pop
stos
in
pop
fbstp
jne
lret
pop
dec
leave
lea
push
imul
les
cmp
mov
in
jbe
in
bnd
into
xchg
loop
xchg
sbb
xchg
lea
fs
mov
lods
jns
out
mov
cmp
loope
mov
and
inc
mov
add
inc
add
dec
cltd
shl
or
and
jae
int
sahf
or
fnstenv
dec
stc
clc
xor
mov
call
cmp
in
nop
adc
add
stos
insl
adc
pop
xlat
popa
push
push
clc
sbb
xchg
dec
or
clc
mov
push
push
in
clc
data16
int
mov
mov
jno
int
dec
jae
ret
mov
int
xchg
sti
add
xor
call
sbb
fcmovnu
std
inc
out
pop
mov
int3
mov
or
pop
cmp
sub
enter
jns
aaa
sub
jo
imul
test
add
cli
pop
mov
imul
sub
adc
loop
lods
fsubrl
adc
lret
xor
mov
and
repz
pushf
inc
fiaddl
mov
adc
je
add
wrmsr
add
ja
push
adc
mov
or
add
nop
push
and
cmp
addb
xor
out
push
cmpsl
mov
aaa
mov
mov
jnp
test
pushf
cmp
ds
jecxz
divb
cs
fildl
loop
roll
mov
test
fdivs
mov
mov
mov
mov
mov
and
mov
push
dec
stc
xor
orb
dec
mov
sti
fsubr
inc
mov
mov
jno
pop
icebp
cmp
pop
push
pop
cmc
pop
jg
push
test
cmp
int
gs
faddl
and
adc
push
xchg
mov
xchg
mov
scas
imul
lods
test
imul
ds
jns
push
daa
adc
mov
rolb
cmpsb
jnp
shll
enter
les
add
cmp
sub
cmp
ja
je
rcrb
imull
lock
out
adc
cli
cmpb
lock
stos
sbb
xor
ret
mov
xchg
repnz
sub
gs
in
icebp
out
stc
lret
inc
push
shl
outsl
imul
push
scas
mov
stos
push
adc
and
dec
lods
test
jg
popf
mov
jge
inc
nop
call
stc
sub
clc
into
lcall
stos
cld
push
jecxz
jae
iret
mov
lcall
je
push
cli
inc
es
push
jns
mov
mov
xchg
in
xchg
data16
mov
and
outsl
adcb
sbbb
pop
or
cmpsb
dec
jecxz
xchg
mov
xchg
and
push
mov
add
mov
pop
cmpsl
cmpsb
outsl
push
jg
shr
inc
mul
jno
mov
test
cmp
mov
sahf
sbb
mov
mov
lcall
jp
cmp
mov
mov
test
jp
cmpl
xor
sub
cltd
jle
das
jge
jle
out
js
push
inc
rorl
xor
xchg
add
push
pop
jns
push
test
js
push
fs
arpl
mov
pop
xchg
testb
cmp
pusha
xor
adc
lret
mov
mov
nop
cltd
and
and
xchg
xor
sbb
call
sbb
pop
std
sbb
imul
imul
xchg
xchg
imul
es
push
pop
add
adc
aad
cwtl
cmp
mov
mov
lea
jmp
fidivrs
pop
inc
xchg
pop
mov
pop
sahf
leave
xchg
lcall
shufps
test
aaa
ja
mov
inc
xchg
ljmp
test
cmp
clc
mov
cmp
mov
pop
ss
gs
add
push
add
or
dec
jns
sbb
adc
fisttpl
inc
mov
loopne
push
shlb
cltd
sarb
adc
in
fsubr
cmc
inc
xor
iret
mov
in
add
fsub
mov
jb
push
xchg
insb
inc
movntq
incl
dec
js
adc
and
andl
sarl
rol
mov
xor
xchg
xchg
push
xor
and
jmp
add
leave
jne
dec
lret
and
jb
ficomps
movsl
dec
sbb
mov
cld
pop
jmp
das
pop
mov
ret
cltd
inc
stos
sbb
mov
pop
enter
fistpl
push
test
lahf
dec
scas
mov
and
jno
jb
cmpsl
jmp
sbb
inc
mov
shrl
cli
add
ljmp
repz
pushf
cs
loop
cs
loop
lea
xchg
lcall
rclb
xchg
push
loope
adc
push
mov
mov
inc
loopne
insl
mov
popl
cmpsl
int3
sarb
push
icebp
shl
idivl
out
inc
jp
mov
inc
cmp
push
mov
scas
loop
subb
das
lea
cmpsb
testl
pusha
lock
ficomps
cmc
daa
mov
mov
inc
mov
stos
sbb
movsb
negb
ljmp
int3
imul
stos
pushf
add
mov
imul
sub
or
into
std
pop
cmpsl
xor
ja
lahf
es
mov
rcrl
jb
xor
mov
pop
mov
fidivrl
js
sub
shll
enter
push
fidivs
mov
cmp
test
into
mov
push
mov
xchg
mov
xchg
dec
shlb
dec
xor
enter
mov
ja
adc
mov
xor
add
adc
dec
dec
in
adc
pop
mov
les
sarb
cmp
push
push
mov
rorl
jb
sub
test
and
dec
jl
xor
mov
pop
mov
pop
mov
mov
lcall
test
cmc
lret
mov
push
push
mov
mov
outsl
loope
inc
xchg
jl
pop
fdivrl
inc
mov
lds
je
hlt
add
xchg
dec
add
cmp
loopne
add
sbb
fwait
mov
pop
out
mov
sbb
push
inc
outsl
xchg
pop
mov
loope
xchg
in
jmp
or
mov
sub
mov
into
mov
js
movsl
enter
cmp
jmp
mov
lret
jb
sti
mov
rcl
and
push
cmp
xor
inc
push
xchg
in
push
ljmp
ja
xor
sbb
jl
lcall
mov
movsb
in
out
ret
rol
out
leave
fidivl
out
out
xchg
sbb
outsb
aam
pop
rorb
pop
out
fdivrl
sahf
or
mov
mov
jne
mov
xchg
cmp
insb
xor
outsl
in
aad
sub
pushf
insl
aam
mov
mov
jo
and
push
outsb
es
sbb
push
je
out
push
fiaddl
push
in
repnz
lods
test
adc
cltd
inc
insl
mov
jnp
fs
fildl
repz
mov
push
pop
hlt
loop
lcall
inc
push
lods
gs
push
mov
push
or
cltd
stos
cmp
aam
ja
movsl
mov
dec
xor
insl
lods
jecxz
push
cmp
imul
fs
jae
lea
lea
adc
repnz
out
ja
loopne
sub
orb
xorl
or
std
inc
mov
fmulp
add
add
fsub
sbb
aaa
addr16
dec
int
mov
ja
lds
sbb
add
mov
or
iret
popf
repnz
fnstsw
sbb
gs
adc
in
fidivrs
mov
hlt
lods
arpl
jge
aas
sbb
outsb
xchg
jl
lcall
pop
dec
fwait
cmp
jmp
xor
shrb
mov
inc
addr16
or
aad
lock
add
jnp
jecxz
sahf
mov
rcll
mov
iret
in
in
or
or
insb
mov
mov
and
les
lea
sbb
jp
jg
popa
mov
dec
or
xchg
and
roll
vpaddd
and
stc
rol
pop
jns
scas
insb
inc
sbb
xchg
jbe
fs
push
addb
gs
xor
std
repnz
movsl
sub
js
ret
clc
pop
clc
mov
pop
mov
xchg
sub
stos
and
xchg
dec
out
rorl
icebp
pop
xchg
adc
lret
mov
ficoml
mov
popf
mov
loop
fisubs
orl
rcrl
lea
cli
inc
sti
imul
test
mov
or
push
mov
lahf
fnstcw
adc
lods
jnp
mov
inc
pop
or
jno
lods
lock
pop
dec
jge
movsl
pusha
ljmp
mov
add
popa
cmc
add
lods
or
test
mov
insb
dec
aam
xchg
js
sub
enter
inc
test
pop
mov
ss
cmp
sbb
inc
fisubrs
std
lods
mov
icebp
mov
push
mov
xchg
adc
lods
mov
lcall
push
dec
push
rorl
mov
inc
pop
lods
das
jmp
ss
fldl
ljmp
or
and
sar
decl
jp
jne
adc
xchg
push
push
mov
in
fst
mov
addb
mov
sbb
lcall
and
cwtl
pop
mov
lcall
add
int3
xor
addr16
sti
mov
mov
sub
push
fwait
jl
lret
out
and
sub
loop
cwtl
jns
int3
adc
dec
inc
inc
lcall
xor
pop
fistpll
fldl
scas
cmp
fmul
js
mulb
and
adc
lahf
int3
or
movsl
add
or
adc
mov
mov
fidivrs
adc
add
shrb
lods
leave
subb
sbb
add
jmp
dec
ljmp
or
mov
inc
pop
pop
pop
inc
xchg
fsubp
xor
sub
pop
scas
mov
cli
jb
cmpsl
emms
mov
cmp
repnz
subl
xchg
mov
pop
mov
pop
push
fs
outsb
add
movsl
add
jmp
cli
mov
ret
jnp
dec
or
insb
lods
ja
pop
dec
enter
loop
cmp
nop
push
sbb
fisttpll
in
cmp
ficomps
in
addr16
xchg
adcl
lock
jp
sbb
xchg
stc
jge
enter
and
mov
int3
fidivs
dec
mov
test
dec
decb
pop
or
shlb
push
aad
dec
inc
adc
arpl
push
push
ljmp
iret
pusha
cmp
lds
sbb
std
sbb
inc
ljmp
jb
outsb
fwait
inc
nop
push
mov
cmpsb
std
clc
stos
dec
stos
add
lock
outsb
cmp
das
insl
push
nop
adc
xchg
mov
rcrb
add
je
jmp
adc
ret
or
pop
loopne
outsl
cwtl
inc
push
ret
pop
scas
adc
daa
jle
sbb
adc
nopl
adc
jge
add
add
push
les
mov
jge
in
rorb
fwait
or
cmp
xchg
clc
popf
sbbb
fidivs
pop
and
les
mov
insb
xor
fadds
mov
movsb
cli
xlat
mov
sub
mov
xchg
ret
jnp
jecxz
loopne
int3
or
scas
ja
push
adc
or
inc
bound
into
mov
fisttps
imul
or
jnp
cmpsb
inc
aam
lds
aam
insb
lcall
icebp
test
imul
arpl
testb
mov
daa
lds
sbb
data16
mov
aam
inc
outsl
les
dec
cli
sbb
repnz
inc
xor
bound
mov
dec
dec
pop
mov
jns
jge
lods
shrl
iret
fs
mov
mov
inc
mov
cmp
mov
push
pop
push
sub
cmp
dec
sbb
adc
pop
jo
mov
popf
dec
mov
sub
mov
fcompl
pushl
mov
mov
fisttpl
sbb
or
sub
gs
mov
mulb
loopne
loopne
dec
pop
movsb
jp
adcl
or
mov
movsl
aas
push
xchg
gs
bound
or
mov
das
lret
mov
cmp
hlt
popa
sarb
inc
in
xchg
lock
push
fstps
pop
and
jo
cmp
mov
fmull
push
call
mov
es
mov
hlt
lahf
xchg
dec
dec
sti
ret
pop
pop
push
jg
repnz
test
leave
mov
aad
repz
jp
mov
cmc
sbb
jl
xchg
cli
dec
out
loope
imul
cmc
int
mov
pop
push
clc
ljmp
xor
std
aaa
mov
filds
adc
mull
pop
pusha
mov
lea
cltd
adc
in
fildll
mov
xlat
mov
fimull
daa
cmpb
xchg
mov
sub
mov
sti
and
cli
mov
dec
push
inc
sub
mov
jmp
test
sti
mov
inc
insl
push
insl
js
xchg
pusha
dec
call
dec
sub
pop
jno
xor
arpl
hlt
inc
ret
or
sbb
jecxz
cli
in
loopne
jo
out
ret
mov
jb
imul
in
mov
xchg
bnd
xor
out
out
mov
add
ret
push
lea
scas
jae
stos
outsl
sub
add
rorb
mov
inc
sar
push
mov
rcll
mov
push
pusha
in
inc
dec
fadd
lahf
adc
sbb
jbe
movb
shll
repnz
repz
xchg
push
push
icebp
loope
jnp
sarl
sbb
scas
shr
movsl
pop
repz
cmp
sbbl
jbe
orb
dec
aas
mov
and
xor
in
pop
rorl
push
xlat
bound
jecxz
ss
add
mov
push
cs
pop
mov
fmuls
in
lcall
popa
mov
jle
inc
fwait
lock
test
outsb
out
sbb
popf
fimull
aad
jg
arpl
push
push
out
xor
shlb
push
sahf
std
decb
inc
out
das
and
inc
sub
sbb
aam
and
or
xlat
or
inc
fildll
popa
mov
or
pusha
mov
in
add
je
or
inc
cltd
push
cmp
daa
daa
dec
push
loope
sub
enter
mov
aad
adc
cli
loopne
and
std
ja
imul
mov
sbb
test
fwait
std
mov
sub
mov
in
test
mov
sbb
jbe
lea
sbbl
jecxz
aam
lret
pop
push
lret
pusha
popa
pushf
test
repz
lcall
pop
test
mov
sahf
jg
movsl
test
imul
shlb
inc
xor
mov
stos
sbb
dec
sbb
js
mov
loopne
or
cmp
add
xor
dec
hlt
fnop
push
mov
fcmove
mov
adc
mov
lret
scas
push
loope
xchg
push
fistl
pop
xlat
xchg
lret
fs
lock
pop
jnp
insb
or
jo
mov
repnz
ljmp
loope
mov
add
xchg
mov
icebp
insb
mov
or
mov
sbb
jge
cmc
rolb
out
mov
adc
loope,pt
cwtl
out
ret
pop
into
mov
lahf
subb
dec
mov
push
adc
mov
xor
mov
les
push
out
aad
ficomps
test
and
jne
cmpsl
ret
xchg
addr16
cmp
pop
adc
sbb
pop
sbb
in
cmp
lods
lahf
cmp
xor
xor
repz
stos
mov
xchg
ds
mov
cmpsl
clc
sub
inc
adc
mov
shl
jl
test
pop
hlt
jo
pop
es
push
xchg
add
pushf
filds
cmp
lods
add
mov
jo
lods
pop
dec
dec
int
ret
cmp
daa
add
lock
in
jg
std
dec
or
jle
out
inc
jp
xorl
jno
mov
outsl
inc
adc
repnz
test
dec
faddp
xor
and
adc
icebp
cmp
rcl
pusha
mov
test
sub
lret
mov
lds
adc
shll
cmp
add
xor
rclb
lea
dec
jecxz
mov
or
inc
inc
lods
insb
ffree
imul
jge
mov
jns
push
cs
cltd
std
mov
mov
hlt
xchg
cwtl
mov
push
inc
sub
outsl
sub
pop
mov
daa
push
jb
mov
pop
and
mov
fmulp
outsb
jle
inc
andb
mov
jp
dec
dec
stc
pop
cltd
sarb
jmp
subl
popa
das
adc
out
out
inc
mov
fwait
jg
inc
adc
insb
pop
sub
push
sbb
cld
add
dec
jge
cmc
cmc
hlt
stos
xchg
sbb
stos
mov
addr16
jp
mov
outsl
push
cmpsb
mov
imul
sarb
jno
add
out
imul
push
ljmp
pop
mov
jbe
xor
sbb
jecxz
in
mov
cmp
das
clc
ja
xchg
ss
and
orl
xchg
mov
rcl
ljmp
mov
arpl
fistpll
mull
mov
int3
pop
stos
jge
out
shll
mov
mov
test
push
imul
mov
push
insb
popa
inc
add
out
cmpsb
in
jl
icebp
jl
xchg
aad
popf
mov
imul
loopne
pop
repz
outsl
add
cli
dec
or
sbbb
rcll
data16
push
fisubrl
xor
cld
cmp
fcomip
imul
in
fwait
mov
outsl
ficoml
xor
inc
and
adc
push
pop
leave
fcmovu
xchg
xchg
or
sbb
xor
adc
xchg
inc
aad
cwtl
mov
adc
jl
outsb
push
inc
pop
iret
dec
xchg
mov
jb
dec
insb
inc
cmpsb
and
test
stos
addb
les
ss
mov
inc
lods
mov
fs
push
push
lcall
bound
aad
xor
sbb
nop
cmp
cmc
cmp
pop
pop
out
stos
jle
sub
insb
jns
test
std
dec
out
mov
push
lcall
cwtl
push
pop
rep
rol
idivb
sbb
scas
cmp
pop
cs
addr16
pop
jecxz
mov
sbb
or
jle
and
data16
sbb
xor
pop
mov
pop
popa
inc
in
cmp
and
push
push
cmp
add
inc
outsl
cmp
or
filds
scas
xor
cmp
mov
push
xor
lret
repz
jbe
clc
jle
mov
mov
in
imul
lock
or
adc
jne
xchg
inc
movsl
cmp
jo
rep
cmp
ljmp
dec
mov
inc
jmp
into
call
imul
fstpt
mov
adc
sar
mov
insl
xchg
push
ret
sbb
jnp
mov
outsb
inc
mov
cltd
jb
xchg
dec
mul
lahf
mov
sbb
ljmp
lods
and
movsl
or
adcb
fucomi
lret
mov
sub
daa
inc
push
aam
mov
dec
clc
push
or
jg
and
push
xor
mov
popf
xchg
pop
inc
inc
push
mov
mov
dec
decl
xor
into
in
cwtl
outsb
mov
pop
sbb
jle
mov
clc
loop
sahf
aad
cmc
push
addr16
add
fsin
inc
xor
stos
add
pop
movb
dec
jo
inc
fistps
xchg
pop
xor
shll
aam
cltd
push
sbb
stc
pop
and
out
rorb
inc
cld
adc
or
nop
ret
add
fsubrl
xchg
loope
daa
arpl
inc
adc
adc
mov
in
jecxz
inc
loopne
in
ja
mov
test
enter
mov
mov
ret
popf
mov
adc
dec
mov
mov
stos
push
adc
dec
aam
std
bound
cli
xor
aam
dec
sbb
testl
dec
mov
mov
dec
movsl
xor
stc
xor
mov
jo
xor
outsb
cmpsb
shl
mov
xchg
push
sbb
mov
sub
movhps
mov
sub
orl
cld
aas
mov
cmp
push
sub
rorl
add
inc
addr16
mov
pop
xchg
cld
ja
mov
sub
inc
imul
emms
ret
sbb
daa
in
jp
out
cwtl
or
xchg
jne
pop
sahf
lcall
cmpsl
outsb
mov
and
jl
inc
dec
cmpsl
cpuid
cmpsl
and
xchg
xchg
bound
push
sbb
sub
dec
push
push
fistpl
xchg
jbe
xor
sub
dec
iret
pusha
jb
mov
ja
out
daa
int3
rolb
nop
push
out
jbe
insb
shl
je
cld
scas
clc
or
add
subb
mov
pop
mov
jne
cmp
mov
pop
repnz
mov
push
aad
jns
fiadds
dec
enter
movsb
rcr
dec
out
mov
add
sub
xchg
add
mov
mov
or
rcl
cmc
ror
push
jnp
push
mov
pop
xorl
ret
cmpsl
int
mov
push
dec
addr16
pop
mov
xchg
int3
cli
lret
push
sub
in
cmc
repz
mov
fmull
sub
popf
sbb
lret
jmp
sbb
cli
inc
dec
lret
ror
xchg
ficomps
std
or
das
aad
adc
mov
jns
mov
cmp
adc
rclb
sub
cmpsl
out
pop
inc
mov
adc
jbe
leave
push
and
and
je
mov
mov
mov
and
lods
sbb
push
cld
xor
sbb
mov
xor
repnz
mov
lcall
lds
std
push
mov
xchg
mov
insl
ret
xchg
jle
mov
push
mov
inc
scas
lods
in
and
sub
shr
pop
cmp
call
ffree
in
mov
loop
cmpsl
lea
adc
in
xor
push
sub
lcall
sbb
cmp
mov
push
dec
mov
push
jnp
test
jno
push
cli
pop
mov
aas
mov
xchg
push
pop
outsb
xor
sarl
mov
leave
lea
mov
mov
test
and
inc
pop
sbb
lcall
inc
dec
dec
subl
loope
in
aaa
mov
data16
and
add
pop
cs
sub
push
lea
orl
xor
pushf
and
xor
push
outsb
cmp
mov
mov
sub
mov
sub
das
mov
js
push
xor
iret
call
fisubs
arpl
push
fidivrs
and
ret
les
pushf
xchg
lock
dec
jle
ja
fdivrl
sarl
jae
sbb
xchg
jo
pop
test
cmp
push
mov
jmp
test
loop
test
adc
mov
xchg
repnz
pop
mov
icebp
fdivrs
and
push
or
push
xchg
inc
xlat
loop
pop
das
imul
jne
ljmp
push
mov
dec
stos
icebp
adc
push
lret
mov
xorl
push
gs
mov
cwtl
xchg
aaa
or
mov
daa
push
dec
sub
sub
rcrl
mov
ds
sub
mov
mov
mov
sbb
add
jle
std
mov
mov
fcmovu
ja
mov
test
mov
daa
push
adcb
sbb
push
or
push
clc
or
shrb
add
enter
dec
inc
pop
loopne
out
add
mov
or
cmp
mov
cmc
outsb
cs
inc
mov
aad
mov
sahf
int3
lds
std
or
xor
testb
iret
jae
stc
mov
push
sahf
cmpb
leave
xor
xor
xchg
mov
ss
push
movsb
stos
ret
add
stc
cmp
fmuls
iret
pop
dec
mov
pop
xchg
mov
xor
fsubs
adc
pop
lods
ja
and
sbb
pop
sarb
pushf
int3
ljmp
push
jl
add
xchg
push
ret
popl
cli
pop
sub
lds
pusha
test
and
mov
mov
jbe
stos
xchg
push
and
mov
test
ret
leave
push
out
xchg
jno
aas
or
mov
scas
jb
jl
in
mov
outsl
pop
sbb
or
push
or
and
pop
xor
jb
or
stos
xor
xchg
dec
lcall
dec
push
test
fsubr
fisttpl
mov
pop
sub
fs
xor
jbe
push
fsubrl
repz
or
int
rclb
push
fwait
dec
sub
mov
xchg
cltd
out
add
fwait
mov
orb
sub
fs
or
inc
mov
mov
nopl
ret
cltd
cmpsb
loope
xor
outsb
fsubr
js
adc
add
xor
mov
adc
popa
hlt
sub
xchg
clc
rcrl
int
jmp
pop
sbb
cmp
jno
lcall
stos
clc
pop
daa
iret
cmp
ficomps
sub
cwtl
xchg
negb
mov
inc
popf
nop
es
dec
xchg
cmp
inc
xor
push
scas
cwtl
lahf
cwtl
dec
add
dec
jnp
xor
imul
ficompl
nop
arpl
imul
scas
out
sbb
out
and
and
pop
sbb
gs
mov
xchg
test
aam
xchg
jle
and
imul
mov
ret
adc
xchg
stc
and
loope
sub
inc
add
cs
jne
addr16
das
dec
and
inc
push
dec
mov
pop
jns
mov
mov
stc
push
bound
sub
sahf
xor
ret
scas
mov
je
into
dec
mov
bound
add
xchg
pop
das
test
dec
fs
add
lret
push
jge
mov
mov
out
xchg
cltd
dec
push
fwait
jno
insl
inc
push
push
adcl
ficompl
fbstp
nop
pushf
add
or
lret
cwtl
xchg
sub
and
pop
adc
cmpsb
mov
call
cltd
in
outsb
cmpsl
test
adc
mov
mov
test
rcrb
mov
pop
nop
and
push
xlat
push
loop
fstps
mov
mov
push
addr16
xchg
pop
push
and
in
arpl
push
test
jo
jg
cmp
xchg
sti
add
testl
pushf
ja
repz
fadds
and
cmp
pushl
cltd
xchg
or
mov
push
mov
cmp
inc
add
sub
push
cmp
dec
mov
add
sbb
loope
stos
daa
jns
sahf
push
pop
dec
out
loop
jl
int
sub
cmc
mov
xchg
mov
shlb
push
cld
push
push
not
and
sub
add
push
popf
pop
sbb
subb
mov
enter
fsubrp
aam
inc
pop
jle
das
jp
fucomip
inc
mov
pop
sub
clc
nop
jle
dec
and
jl
ljmp
lods
mov
adc
js
push
add
loope
adc
les
jge
insb
inc
arpl
lock
ljmp
sbb
jp
mov
int3
scas
cltd
dec
aas
scas
adc
stc
outsb
pop
and
jge
call
cmp
movl
sub
and
je
pushl
xor
gs
stc
mov
movsl
and
sub
flds
mov
push
inc
ror
int3
out
xor
movl
adc
push
pushf
cmp
cmpsb
sbb
ja
push
mov
not
pusha
pop
xchg
sub
stc
into
gs
push
das
dec
xchg
movsb
les
xchg
add
push
jp
xor
jbe
or
jns
outsl
sar
push
mov
jno
mov
aad
out
jp
pop
mov
ja
cmp
inc
jbe
aam
in
push
mov
mov
fadds
jne
pop
cmp
xor
or
dec
cmp
xor
scas
cli
pop
js
ljmp
stc
jnp
pushf
add
fucom
push
rclb
cmp
lods
cmp
cmp
sub
cmp
cmp
fists
sub
xchg
repz
test
push
test
icebp
rdpmc
jle
fwait
or
call
add
loopne
sbb
push
and
scas
pop
sbb
jne
les
aad
iret
jns
xor
pop
mov
mov
xlat
xlat
pop
or
out
mov
in
mov
aaa
enter
jecxz
dec
out
push
test
mov
inc
cmc
mov
test
jmp
sub
scas
mov
lds
mov
pop
cwtl
rclb
inc
scas
ja
mov
and
mov
popf
stc
dec
xchg
or
iret
fsts
push
adc
stc
leave
lods
pop
cli
and
lods
lock
insl
inc
sbb
sbb
insl
scas
push
xor
sbb
dec
movsl
arpl
mov
fiaddl
cmp
out
out
cli
loope
loope
out
cmp
inc
daa
stos
test
leave
dec
pop
and
out
adc
sub
hlt
test
pushf
cmpb
stos
mov
mov
outsl
mov
mov
in
sub
sub
sbb
jecxz
cmp
mov
jns
mov
dec
inc
adc
inc
cmp
movsl
push
xorl
repz
mov
lcall
cltd
and
gs
jb
fcmovnbe
test
scas
lock
les
fisttps
lock
or
cwtl
pop
jp
sub
cmc
mov
mov
jge
push
cmp
or
jnp
jp
sahf
outsb
mov
dec
xchg
scas
push
es
dec
mov
cltd
dec
jmp
push
or
punpckhdq
or
mov
fsts
imul
nop
pop
jo
push
imul
cltd
mov
nop
and
mov
leave
push
ljmp
rcl
jge
mov
xlat
gs
pop
mov
lods
xchg
sarb
es
or
cs
jno
adc
xchg
sbb
pop
and
sbbl
aam
and
pop
mov
rcrb
movsb
test
in
cmp
outsl
int
into
scas
or
rclb
mov
test
insl
push
pop
mov
mov
loopne
xchg
xchg
aaa
gs
pop
fldpi
js
add
xor
sub
out
or
insl
or
inc
hlt
jl
leave
test
cltd
mov
cmp
int
mov
lret
std
sbb
lret
push
push
push
pop
adc
lods
lahf
push
ret
xchg
repnz
cmp
xchg
pop
push
out
add
or
and
jae
aas
lret
stos
or
add
ljmp
mov
inc
mov
push
mov
inc
xchg
sbb
ficompl
mov
lret
es
fisubrl
inc
mov
sub
xorb
and
loop
out
jnp
xor
loope
rcrb
jno
loope
inc
mov
cmp
jns
sub
and
sub
lahf
jb
sub
outsb
lock
push
popa
push
outsl
lods
cmpb
add
jmp
or
test
fnstcw
stos
outsb
cwtl
xor
inc
jae
mov
xchg
push
dec
inc
jo
mov
fcoms
and
inc
icebp
jge
int3
or
xor
out
and
movsl
enter
das
das
cmp
mov
fldl
pop
xor
cmc
sbb
or
xor
push
fists
out
stos
mov
and
dec
icebp
bound
enter
push
mov
mov
mov
mov
push
shll
cmpsl
push
lcall
or
mov
mov
repnz
jo
dec
mov
data16
and
cltd
out
xchg
aam
or
jge
cmp
stos
xor
xor
ds
sti
out
pop
outsl
mov
pop
mov
mov
cmpsb
cmpsb
or
repnz
repz
or
test
in
push
into
inc
mov
xchg
in
ja
rcll
push
int
lea
jl
add
dec
dec
jge
or
ss
mov
add
lock
add
fsubrs
jno
fstpt
divb
or
test
pop
sub
jo
std
jno
movsb
adc
xchg
jg
loope
cmpl
clc
std
pushf
fcomps
aad
data16
int3
mov
add
adc
test
inc
pop
xor
or
cli
cmp
dec
call
mov
inc
mov
dec
in
in
cli
aam
add
call
stc
inc
sbb
js
dec
data16
jno
and
iret
out
movsb
add
xchg
pop
lea
mov
fiaddl
out
xchg
push
cmp
lret
dec
faddl
jb
push
cmpl
xchg
pop
js
pop
rcrb
es
adc
subl
jo
loopne
jl
pop
mov
icebp
fs
cs
jmp
nop
popf
xor
sbb
inc
testl
add
lock
adc
int3
shl
incb
xor
mov
mov
mov
pop
xor
data16
in
adc
push
cs
and
fsubrl
daa
add
enter
popa
iret
enter
cwtl
fnstcw
frstor
add
add
in
lahf
xlat
cld
dec
lods
adc
outsb
sub
mov
add
inc
adc
add
pop
repz
fmuls
jne
fsts
mov
bound
jecxz
push
dec
in
int3
gs
aad
sub
jg
int3
lock
pop
pop
inc
addl
in
or
js
in
pop
xchg
xor
adc
stc
push
xchg
xchg
aad
insb
cmp
shll
fadds
mov
mov
in
jno
xchg
fs
clc
ret
or
mov
scas
cmpl
jge
ds
xchg
cmp
cli
and
adc
xor
jmp
sbb
aaa
jno
and
mov
roll
mov
xchg
mov
clc
cmp
inc
cld
mov
adc
jae
sbb
movl
sbb
invd
scas
inc
pushf
xchg
sbb
inc
mov
cmp
inc
aad
shlb
stc
std
shrl
xchg
mov
xor
dec
adc
mov
add
mov
popl
push
adc
outsl
cmp
push
push
lcall
xchg
ss
jnp
insl
bound
dec
adc
lret
sub
pusha
out
cmp
mov
and
push
mov
cli
ret
add
or
shlb
imul
mov
out
mov
jb
pop
or
adcl
lret
cmp
stos
fisttpl
int
or
xchg
cmc
lcall
ficoml
jge
adc
aas
and
aaa
pop
ljmp
mov
mov
fistl
gs
fucomi
cmp
rcrl
pop
iret
inc
pop
sub
leave
inc
pop
sub
imul
clc
xchg
jecxz
adc
stos
cmp
mov
icebp
push
mov
rclb
jg
or
sub
add
mov
mov
push
sub
movsl
jecxz
sarl
lahf
in
cmpsb
or
ljmp
push
outsb
call
call
cmp
push
subb
lret
push
mov
mov
js
popa
cmc
sbb
das
je
and
je
lcall
roll
adc
mov
movsl
out
imulb
mov
adc
pop
out
cli
and
xchg
gs
jp
xlat
into
pop
repz
mov
dec
aaa
push
cmpb
decb
push
ret
mov
out
pop
outsl
dec
push
scas
bound
decb
inc
sti
dec
outsb
add
repnz
jb
lds
xchg
xor
jb
dec
add
mov
push
lods
fisttps
pop
fildl
cltd
mov
mov
sbb
adc
mov
mov
or
aaa
jle
add
mov
ret
lds
movsl
shlb
gs
xor
repz
repz
xchg
in
sar
and
mov
call
xchg
sbb
es
push
in
mov
movsl
int
push
mov
inc
jg
cmp
enter
lds
cwtl
or
cmpsl
out
movzwl
jbe
dec
test
stos
in
mov
push
test
push
fistl
stc
xchg
les
aam
stc
pop
xor
mov
call
mov
xchg
rcl
xchg
mov
sbb
cmpsl
aam
pop
loope
adc
sub
je
call
jle
nop
add
inc
xor
xor
dec
cmc
idiv
add
lret
jle
mov
ja
outsb
sub
fisubl
push
cmp
jo
sbb
les
sbb
push
lods
shll
jne
inc
jl
jae,pn
xor
adc
test
push
fwait
sub
shl
bswap
cmp
idivb
adc
or
sbb
das
xlat
lahf
in
gs
xchg
adc
cmp
jle
mov
or
cmpsb
addr16
movsl
push
and
fwait
push
and
fistl
xlat
push
addb
insb
popa
mov
in
and
bound
mov
mov
test
stc
lret
addb
mov
imul
das
mov
cmp
jno
mov
mov
jo
dec
lret
ror
fisttps
loope
das
lahf
dec
jno
and
or
dec
pop
xor
cld
inc
in
dec
dec
push
dec
leave
test
pop
pop
dec
stos
sbb
mov
cmc
cmp
bound
loopne
mov
adc
mov
cs
add
sub
sbb
stos
cmpsl
lods
cld
xlat
xchg
jns
mov
das
jl
push
jecxz
leave
pop
push
pop
out
repnz
mov
sbbb
out
int
imul
clc
mov
daa
cmp
ljmp
mov
or
inc
dec
divb
leave
cmp
push
mov
jo
clc
xchg
cld
push
cli
push
lds
pop
xor
add
loope
or
cs
int
adc
xor
pop
cmp
xchg
int
sub
inc
rorl
jmp
fcomps
outsb
data16
outsl
lret
push
xchg
xor
outsb
scas
test
lock
mov
notb
mov
push
sub
frstor
jne
cmpsb
fidivs
fdivrl
lret
push
insb
mov
adc
inc
pop
popf
xchg
loope
jl
or
cmc
sbb
lcall
sub
ss
fcmovne
push
mull
fcmovnu
aam
enter
bound
sub
test
add
sbb
jecxz
scas
xor
jl
dec
scas
sub
push
sub
pop
das
inc
jmpw
push
enter
mov
popf
fwait
jnp
and
dec
fcmovnb
test
ds
mov
in
lods
and
fldln2
sbb
popf
cmp
das
cwtl
arpl
nop
out
cmp
push
or
imul
insl
pop
lcall
mov
es
outsl
hlt
shrb
lds
pop
test
loop
mov
mov
mov
cmp
pop
sbb
mov
mov
neg
repz
push
mov
jo
inc
jns
sahf
lock
mov
mov
dec
dec
inc
iret
inc
jnp
popf
pop
movsl
fwait
out
sub
mov
add
sub
in
leave
jne
dec
lahf
sub
inc
sub
pop
and
push
in
mov
pop
fdivrp
jle
fstpl
sub
rclb
sti
push
inc
mov
xor
mov
and
sub
or
jnp
add
dec
jnp
stos
sub
sbb
pop
xchg
mov
addl
inc
lret
mov
xor
fbstp
jg
outsl
in
ret
dec
stos
dec
sub
jp
dec
and
mov
jle
shr
adc
addr16
adc
fcmove
jge
jmp
mov
inc
jecxz
xchg
sub
jb
and
in
cmp
cmp
dec
and
xor
cmp
leave
or
push
push
leave
pop
push
ds
push
push
add
xor
dec
push
andb
aad
icebp
lea
and
mov
sub
pop
jnp
into
xlat
scas
inc
fs
add
xchg
popa
mov
push
mov
adc
mov
scas
cmp
mov
ja
dec
pop
into
out
mov
clc
cmpl
dec
xchg
and
cmp
sarl
push
xchg
push
mov
cmc
adc
arpl
repz
aas
enter
inc
pop
sbb
cwtl
push
mov
lds
mov
stc
push
fildl
sub
sahf
pushf
inc
mov
pop
call
stc
jecxz
jge
in
and
adc
into
fisttpll
ret
jns
cmp
mov
and
adc
std
jmp
vpmullw
and
dec
xor
xchg
or
add
std
dec
iret
push
add
mov
ja
test
loopne
jp
mov
cmp
jmp
add
fbstp
dec
out
leave
test
scas
xor
cld
roll
add
cli
adc
jnp
orb
sbb
mov
loop
jb
cmp
shrb
jae
cli
push
xchg
sbb
lret
mov
mov
cmp
fsubrl
adc
cwtl
inc
mov
jbe
insl
pop
cld
sbb
add
add
mov
pop
test
xor
inc
cld
push
imul
in
adc
data16
xor
ja
cmp
es
ss
js
dec
mov
test
sti
mov
jbe
and
call
into
fwait
push
adc
push
mov
daa
xor
aam
clc
xchg
jo
jge
ret
sti
ss
pop
movsb
shlb
rcll
xlat
sbb
inc
out
mov
pop
inc
ljmp
fs
test
sub
sbb
inc
sub
xchg
push
xchg
sub
fiaddl
jmp
dec
in
mov
sub
into
ret
ret
pusha
xor
loop
mov
ja
pop
jbe
or
dec
mov
pop
pop
mov
xlat
cld
fucompp
pushf
das
sbb
pop
push
repnz
sub
mov
or
dec
insl
mov
div
rcrb
push
repnz
repz
rolb
pop
dec
loop
fisubl
out
add
cmpsb
daa
lahf
gs
sub
push
mov
lret
sub
notl
lods
ljmp
and
xor
fidivl
and
std
dec
repnz
faddl
aad
test
es
subl
stos
not
sub
cmp
and
addb
dec
call
push
xor
enter
push
pop
aas
ss
and
cmpsl
ret
and
jnp
xchg
test
mov
push
dec
jmp
dec
cmp
sbb
addr16
in
push
push
xor
jno
sub
inc
mov
jge
hlt
sub
inc
jg
mov
push
daa
inc
sbb
xor
adc
pop
inc
pop
insb
or
jp
inc
sahf
xor
movsb
and
loope,pn
dec
add
sub
jo
es
in
adc
lret
iret
imul
aam
jge
lds
sbb
sbb
sub
jle
insl
daa
xor
pop
mov
dec
push
repz
insb
adc
pusha
outsl
notl
rclb
shlb
adc
inc
imul
mov
sbb
xchg
repz
leave
push
jb
div
sbbb
addr16
movsl
in
xor
add
pop
bound
push
mov
lahf
jns
filds
adc
inc
xchg
push
push
pushf
xor
mov
dec
and
fists
cltd
mov
testl
mov
fs
out
lea
xchg
push
test
dec
jmp
mov
xchg
adc
stos
int
push
xor
xor
inc
add
cmp
sbb
das
jbe
mov
out
xchg
push
je
push
leave
lea
test
idivb
inc
mov
adc
cli
sub
out
test
mov
jae
mov
repz
adc
push
mov
xchg
lcall
inc
test
lret
xchg
sbb
in
adc
icebp
loopne
push
lock
xlat
add
xor
push
dec
icebp
sub
fwait
fs
aad
sbb
lret
lods
loop
roll
cmp
mov
aam
dec
test
hlt
cmc
mov
out
xchg
sbb
gs
inc
ljmp
jmp
gs
lock
sbb
sub
out
addr16
sub
sub
inc
repz
orl
push
notb
movsb
push
xchg
or
pusha
xor
mov
sub
mov
fdivrl
push
lods
mov
fidivrs
out
int3
sti
inc
ja
mov
push
sbb
cwtl
scas
dec
and
mov
pop
flds
sub
pusha
nop
mov
add
cmpsb
adc
pop
inc
xor
repnz
and
data16
push
rorb
rcrb
loop
clc
lret
mov
mov
loopne
imul
ljmp
aam
cmp
test
es
in
sbb
push
outsl
imul
sub
and
sub
lea
adc
aaa
hlt
sti
and
cmp
repnz
xchg
jns
xchg
cmp
iret
mov
mov
mov
and
lahf
push
stos
xor
repz
insl
cmp
pop
inc
lods
pushf
cmp
xchg
and
mov
add
push
lds
cmp
xchg
mov
xchg
mov
mov
in
mov
into
iret
jl
lea
inc
hlt
pop
lods
addl
sbbb
dec
push
xchg
fiadds
mov
or
and
jb
jnp
pop
xchg
repz
mov
xor
je
jg
or
pop
inc
cmp
cmp
xchg
ljmp
leave
push
cmp
cltd
push
jbe
adc
cmp
mov
outsb
aas
dec
loopne
testl
sbb
mov
and
mulb
es
js
push
cmc
lcall
xchg
lahf
mov
aam
mov
jl
jns
aam
mov
add
lods
std
test
xor
mov
cmp
pop
or
or
sub
mov
jp
roll
jo
and
xchg
cmp
fstl
and
test
lret
mov
in
mov
push
add
loopne
pop
in
lcall
out
sub
fwait
jnp
sbbb
stos
add
je
cmove
lds
cmpsb
dec
sub
enter
dec
stc
ds
inc
cli
mov
jo
mov
mov
scas
sbb
daa
fdivr
add
aas
add
jle
xor
and
adc
std
mov
out
jg
add
xchg
lods
sbb
rorb
sahf
sub
lahf
jns
jns
inc
call
jmp
pop
adc
leave
popa
out
pop
pop
rcr
insl
dec
push
loop
les
xlat
test
push
adc
and
ficoml
mov
daa
arpl
lcall
cmc
add
sub
mov
rcrb
enter
cmp
xor
arpl
cmpl
push
xchg
shll
cld
inc
xchg
xchg
jge
aam
sub
xor
clc
pop
lret
call
outsb
pop
daa
dec
arpl
or
or
in
push
push
iret
adc
add
xchg
xchg
dec
out
adc
shll
out
sbb
movsb
test
gs
mov
fcompl
fstl
jns
pop
xor
mov
lock
pop
ds
fisubrl
enter
mov
push
outsb
sub
iret
xchg
or
pusha
push
pushf
vmread
add
iret
and
lea
popa
sarb
mov
loop
and
pop
sub
popf
push
adc
add
jmp
adc
dec
pushf
adc
jmp
mov
xchg
fadds
mov
or
push
iret
push
int
push
lods
and
fidivrs
dec
mov
mov
jno
xor
sub
push
das
pop
and
shrb
jb
inc
pop
adc
or
and
push
imul
scas
cli
mov
jecxz
mov
sbb
add
cmp
cli
insb
mov
inc
push
sti
jae
insl
xor
out
xchg
mov
stc
dec
in
out
ret
push
mov
mov
sbb
dec
jecxz
mov
mov
mov
lock
mov
inc
pushf
cmc
mov
dec
in
sti
sub
fists
repz
not
or
jbe
fisubrl
jne
aaa
insl
je
insl
mull
mov
cmp
imul
lret
or
sbb
mov
and
pop
lods
xchg
push
dec
mov
in
xor
pop
aaa
inc
stos
lods
pop
jbe
scas
or
ficomps
sbb
cwtl
repz
pop
jecxz
rcl
mov
pop
movb
lcall
cmp
enter
pop
pusha
loopne
sbb
fisttps
mov
xor
push
daa
sub
cmc
or
movsl
in
in
pop
leave
pop
cmp
fsts
jb
outsb
fld
dec
xchg
jecxz
cmp
push
sbb
int3
push
and
inc
pop
repz
out
push
mov
lea
adc
mov
insl
cmc
lahf
hlt
mov
test
out
std
sbb
xchg
adc
mov
lock
lret
dec
or
js
pop
pop
dec
pop
xchg
add
push
xchg
inc
outsl
push
sbb
mov
mov
in
mov
push
test
ljmp
icebp
repz
ret
push
stc
push
pusha
dec
fidivrs
push
push
bound
shlb
sbb
lods
roll
xchg
nop
xchg
test
xchg
bound
in
xchg
add
fcoml
cmpsb
test
jecxz
xor
mov
add
pop
cld
mov
cld
and
test
cmpsb
stos
pop
popa
and
std
lods
xor
test
cmp
push
pop
pop
test
sub
cmp
sbb
inc
iret
jbe
and
pop
mov
mov
xchg
cmp
nop
add
aaa
imul
or
movsl
lods
fcoml
in
stos
push
mov
data16
out
loope
pop
xchg
decb
jl
pop
lock
add
leave
cmp
cmp
xchg
dec
into
pop
movsb
dec
push
clc
xor
mov
ds
and
repz
shll
jge
cld
rcrb
push
sbb
hlt
fsubrs
jecxz
jmp
shrb
imul
dec
scas
and
lret
je
adc
test
aam
lret
rorb
mov
jbe
hlt
pushf
xor
pop
cltd
btr
inc
inc
push
dec
sub
in
sbbb
sahf
adc
cmp
xchg
jb
repz
std
jl
out
imul
cmp
imul
scas
scas
test
push
pop
push
ds
add
mov
jmp
mov
inc
pop
sub
stos
or
cld
or
mov
or
jb
jns
lods
mov
outsb
fs
inc
jp
stc
push
nop
sbb
mov
cli
inc
cltd
inc
lods
jmp
popf
fstl
sbb
mov
dec
mov
cltd
mov
jecxz
movsl
lret
cwtl
enter
clc
sbb
arpl
xchg
mov
sub
jge
mov
fs
push
push
push
iret
jo
push
and
and
adc
test
or
push
sub
mov
xchg
mov
mov
jae
xor
jge
xchg
repz
outsl
jmp
bound
pusha
repnz
in
inc
aas
jge
cld
mov
inc
lock
arpl
push
icebp
jne
mov
in
adc
xchg
popf
sbb
arpl
sbb
cmp
std
test
lret
int3
mov
xorb
stc
mov
and
popa
xor
ljmp
inc
mov
mov
ja
xchg
jb
cmpsb
loop
insb
mov
enter
add
jno
and
sti
ret
push
fdivrl
lcall
sbb
pop
adc
negb
or
aas
aas
dec
jno
jge
mov
out
or
lcall
cmpsb
aas
fs
mov
int
ret
icebp
or
test
push
je
mov
mov
mov
movsl
popa
dec
lcall
jb
mov
jecxz
nop
pop
ja
stos
loopne
popf
sub
push
inc
cmp
push
and
cli
push
and
push
bound
pop
inc
bound
mov
and
int3
repz
pop
sub
or
pop
inc
push
jmp
shrl
popl
jp
sti
pop
push
lret
in
jl
xor
fucomip
rorl
cmp
into
fwait
pusha
jae
sbb
popf
ret
fnstsw
mov
dec
jno
jge
jle
pop
stos
out
push
push
xchg
cmpsl
ret
cmp
popa
jae
cmp
rclb
jnp
add
and
mov
and
pop
daa
add
outsb
adc
lods
and
mov
ds
addr16
out
and
out
xor
adc
imul
movsl
loope
mov
lods
pop
push
mov
flds
aas
mov
fisttpl
add
repnz
lahf
mov
mov
fsubrs
jns
fsub
pop
out
xchg
pop
and
sbb
adc
enter
fsubrp
and
sub
pop
fists
mov
mov
push
arpl
gs
sahf
cmpl
call
ret
loop
lods
add
and
ss
mov
scas
mov
xor
mov
lret
and
or
outsb
loop
leave
out
dec
rcll
mov
xor
divb
lods
in
fisubrs
cmp
cmc
gs
jge
mov
lock
mov
int
xchg
dec
jae
mov
jle
bound
jnp
and
push
cmpl
rcll
jp
jno
push
clc
shl
push
outsb
andl
pop
jmp
jae
inc
xchg
lods
cli
cltd
movsb
push
sub
mov
jae
xchg
xchg
cmp
adc
pop
inc
sbbb
bswap
outsl
aam
jmp
mov
cmp
repnz
dec
mov
mov
or
push
call
fs
dec
adc
out
and
mov
jge
fisubl
imul
xor
int3
pop
out
scas
mov
xchg
dec
out
sbb
mov
push
xchg
sbb
out
mov
lods
mov
stos
popa
sub
push
xor
xchg
fsubr
sub
adc
push
aad
and
cmp
rcrl
sub
sahf
insb
mov
movntps
je
js
mov
mov
mov
mov
push
std
adc
jnp
gs
dec
fisttps
mov
jp
fmulp
clc
mov
cwtl
ljmp
in
lods
and
jmp
mov
mov
and
scas
adc
add
daa
psubsb
adc
xlat
push
das
stos
push
mov
push
shrl
add
cmpsl
test
lea
mov
in
cmp
loope
jno
xor
aas
outsl
xchg
out
fwait
loopne
mov
or
jmp
shrl
mov
scas
mov
xchg
sbb
ret
pusha
rcll
sbb
cmp
and
test
imul
jg
pop
jne
sub
add
mov
pop
int3
sbb
clc
fistpll
sub
xor
cmp
addl
popa
push
in
xchg
adc
and
shrb
add
jl
rcrl
pop
test
jne
stos
daa
mov
call
adc
pushw
add
cmp
shr
xor
mov
sti
xchg
xor
pop
xchg
call
mov
cmp
clc
cmp
int
scas
pop
xchg
into
mov
and
movsb
or
xlat
movsb
int
das
bound
popf
cmp
and
push
mov
out
into
dec
pop
pop
arpl
cmp
cmp
imul
jbe
cltd
mov
inc
icebp
popf
xchg
xchg
mov
mov
xchg
test
addl
pop
jmp
pop
hlt
insb
ret
cmp
scas
ficompl
call
or
outsl
js
push
dec
lods
dec
mov
jmp
adc
lahf
push
fnstcw
pop
in
repz
scas
adc
sahf
lods
mov
test
fsubrl
pop
xchg
cwtl
pop
sbb
mov
mov
xchg
ror
adc
add
pushf
xchg
adc
jnp
je
shrl
gs
xor
clc
lahf
sub
fisubrl
mov
repnz
pop
jl
or
cli
mov
ret
leave
xchg
or
xchg
mov
xchg
mov
pop
jae
jp
daa
ret
xchg
rcll
push
cs
inc
mov
inc
ja
dec
daa
cli
sub
add
movsl
pop
inc
bound
dec
inc
outsl
mov
mov
ljmp
and
mov
or
andl
movsl
out
shll
jbe
lods
lods
adc
lcall
push
or
xchg
jmp
mov
pop
aaa
incl
mov
mov
mov
and
or
repz
mov
out
gs
jne
inc
xor
jge
mov
into
lahf
ja
sub
enter
bound
int
pop
loope
cmp
fcmovnb
mov
insl
push
int
out
sbbl
aas
pop
mov
cs
xchg
sub
testb
xchg
cmp
cmpsb
pop
mov
insl
test
push
push
leave
cmp
push
mov
inc
push
rcl
pop
or
mov
orl
repz
imul
sub
inc
inc
cmp
or
ja
call
xchg
insl
add
jecxz
push
sub
cmpsl
sahf
and
pop
push
outsl
dec
loopne
mov
adc
sbb
imulb
cltd
xchg
or
in
push
gs
out
movsl
fstp
hlt
repz
clc
test
jns
dec
sbb
pop
fcom
lret
int
mov
lret
shl
iret
sti
out
sbb
or
inc
sbb
or
stc
testb
inc
push
mov
lahf
pop
aad
hlt
daa
je
sub
push
xor
jns
mov
shll
aad
xchg
adc
xchg
aaa
mov
inc
pop
scas
test
xchg
sub
cmp
xor
lods
push
sbb
pop
add
cmpsl
shll
fstpl
insb
in
xor
mov
mov
sub
add
movsl
mov
ret
cltd
ret
je
xchg
aaa
jp
cmpsb
fucomip
clc
dec
mov
add
mov
addr16
ljmp
mov
adc
sbb
pop
cld
or
mov
ja
jno
sbb
imul
pop
hlt
add
stc
push
sti
mov
scas
stos
fidivrl
test
pop
fcoms
sbb
lock
adc
pop
add
call
adc
push
adc
add
adc
shr
fildll
mov
lds
mov
xchg
mov
inc
push
int3
test
mov
sbb
ret
fcomps
jb
pop
jmp
xor
mov
xchg
dec
std
iret
loope,pn
scas
and
cmp
pop
ret
adc
fcoms
push
scas
push
adc
mov
pop
mov
imul
clc
push
push
pop
and
xchg
out
jle
nop
jmp
jp
repz
test
mov
mov
imul
fbld
mov
mov
into
push
push
xor
mov
sbb
or
mov
push
fcoms
jns,pt
add
adc
cmp
jl
jb
cmp
insl
inc
push
movl
xchg
push
push
sbb
dec
pop
pusha
mov
mov
dec
push
rolb
scas
ss
jecxz
cmc
ljmp
cmp
xlat
mov
jecxz
push
jns
dec
cmpsl
inc
scas
inc
pop
xchg
adc
rorl
dec
and
rclb
fmull
stos
push
imul
mov
jbe
int3
jmp
bound
dec
sbb
xor
xor
inc
fidivl
sub
sub
repnz
loopne
insb
ds
int3
nop
pop
push
jnp
popa
and
mov
into
mov
xor
iret
rorb
idivb
xor
push
lods
jge
gs
jecxz
inc
nop
xor
xchg
outsb
add
pop
in
mov
dec
popa
xor
dec
lret
add
icebp
in
scas
cmp
aas
push
add
aaa
int3
iret
pop
fiaddl
jp
pop
and
sub
mov
mov
lock
jnp
cmpb
das
push
lods
test
inc
bound
idivl
jle
loop
add
push
ds
std
adcb
ljmp
test
xchg
fs
rcr
push
fdivrl
out
push
mov
cmpsb
cmp
imul
insb
or
cwtl
mov
ret
and
shlb
jb
add
decl
das
push
fidivrs
scas
cwtl
imul
push
ss
push
insb
push
add
idivb
mov
adc
pop
jecxz
bound
in
movsl
loop,pt
dec
repnz
mov
sahf
flds
pop
pop
in
mov
insb
cmpsb
fidivs
xor
lahf
mov
mov
fwait
cmp
push
pop
pop
test
cli
stos
cmpsl
xor
cmp
fs
mov
das
out
cmp
sbb
arpl
mov
bound
lods
inc
jmp
cmp
loopne
sbbb
and
xor
jo
mov
xor
and
sti
push
jbe
hlt
aad
lods
fistl
loop
lds
and
dec
ret
out
fnstenv
arpl
xchg
pop
aam
call
inc
std
imul
jp
loopne
inc
ficomps
xor
add
pop
fildll
inc
xchg
outsl
sub
pushf
sarl
xor
and
dec
mov
adc
inc
cmp
xchg
xchg
inc
xchg
aad
push
rorl
jnp
insb
mov
jb
outsb
push
xchg
or
or
enter
nop
jg
sbb
in
incb
push
sbb
mov
imul
repnz
aam
and
repnz
cmp
std
mov
lods
lret
lret
int
test
sbb
push
mov
fiadds
mov
in
add
pop
dec
repz
push
sbb
jnp
fstps
sbb
cld
jnp
in
inc
ror
cwtl
and
rcr
cli
dec
and
cmp
inc
aaa
mov
xchg
aaa
roll
mov
data16
les
mov
ficomps
cmp
pop
pop
and
cwtl
cmp
imul
adc
ds
mov
inc
inc
lds
je
inc
int
ja
das
mov
mov
ret
mov
sub
lahf
addl
fld
push
mov
jmp
inc
sbb
out
fstl
add
and
les
les
cs
test
and
in
in
cwtl
sub
popf
sbbl
scas
call
push
add
inc
les
pop
push
pop
pop
je
or
xchg
or
popa
mov
add
jp
hlt
or
jnp
call
mov
xchg
add
and
xchg
popf
cmp
or
or
push
mov
lret
dec
mov
dec
cmp
fdivrs
shl
or
fldt
fldt
sarl
cmp
push
test
mov
lods
stc
xchg
fildll
ja
mov
xor
cmpsl
hlt
sub
bound
mov
mov
arpl
cmc
mov
push
test
sbb
cmp
adc
inc
and
popa
xor
sarl
arpl
call
adc
push
cmpsl
push
pop
inc
cmp
sub
push
jo
jbe
jmp
scas
fdivl
call
hlt
dec
outsl
sub
cmp
out
lods
push
pop
leave
scas
sbb
sbb
add
lcall
data16
push
dec
imull
mov
ljmp
out
cwtl
int
vmovsd
adc
adc
sub
sbb
mov
xchg
mov
ss
and
das
stos
in
outsl
jns
push
out
dec
adc
je
loope
xchg
popf
and
lahf
leave
repnz
fcoml
call
sub
mov
cmc
gs
loopne
mov
std
mov
jnp
out
sub
divl
mov
cmpsb
sbb
push
push
jnp
les
cwtl
jmp
movsl
fldt
mov
push
mov
mov
mov
or
lcall
fsub
les
jecxz
mov
dec
xor
mov
add
jmp
push
mov
sbb
add
fisttpll
push
out
in
ss
mov
out
sarb
js
ds
mov
adc
jbe
add
mov
aad
push
mov
fadds
sbb
cmp
mov
cmc
dec
adc
gs
pusha
add
jl
pop
aad
xor
test
adc
pop
fs
in
js
pushf
fs
mov
adc
cmc
dec
mov
leave
mov
and
in
mov
out
ljmp
sbbb
test
mov
cmpsb
lret
nop
test
aas
repz
or
xchg
mov
lea
jge
xor
xchg
dec
mov
dec
sbb
push
stos
lret
loop
xchg
ja
insb
lret
out
mov
xchg
mov
outsl
xchg
mov
push
or
shrd
nop
aad
fildl
data16
idivl
inc
xor
lcall
lret
pop
mov
push
ret
inc
push
push
adc
cld
cmpsl
sbb
loopne
jns
fidivs
test
cmovnp
loop
xorl
xor
in
ds
out
out
sbb
cmp
sub
jae
mov
ljmp
jecxz
cmc
xor
xor
or
std
fldl
ljmp
adc
mov
fisttps
int3
enter
sub
in
mov
aas
jge
orl
pop
insb
pop
or
mov
jo
inc
sbbl
andl
pushl
xor
rclb
pop
adc
xor
xchg
lods
jns
pop
xor
lods
sahf
adc
icebp
cltd
sub
cs
test
pop
mov
adc
push
pop
test
jl
or
mov
dec
xor
add
lods
movsb
mov
loope
fwait
inc
xchg
jae
adcb
ja
js
xor
mov
and
or
icebp
fsubrs
ret
movsl
xchg
pop
jns
fxch
ja
rclb
push
jle
sub
daa
inc
pop
push
mov
test
push
adc
mov
inc
mov
pop
sub
cmpsb
mov
stos
dec
daa
mov
iret
mov
inc
push
jno
insl
mov
sub
ret
jg
ds
jae
inc
jl
stos
pop
out
icebp
addr16
repnz
aad
out
cld
fwait
aas
aaa
add
xor
aaa
mov
pop
mov
lea
sbb
lret
jge
dec
inc
jmp
movsl
mov
dec
and
mov
dec
rcrb
cmpb
iret
aaa
sti
lds
mov
stos
add
cmpsl
or
mov
xchg
imul
sbb
add
aad
test
cmp
orl
jo
sbb
lea
cli
mov
dec
outsb
loopne
movsb
rcrl
xor
hlt
xlat
fildll
test
jl
adc
adc
push
sbb
and
ficomps
jecxz
in
mov
fldenv
pop
inc
jmp
fisttps
aaa
cmp
je
push
loopne
pop
pop
and
or
or
push
mov
icebp
push
sub
hlt
test
add
jns
lock
xor
ljmp
stc
pop
xchg
cmc
inc
fdivl
sbb
pop
pop
mov
sbb
adc
ja
loope
pop
xchg
jb
mov
and
outsl
cmp
jle
mov
mov
lea
pop
or
xchg
cwtl
imull
pop
fiadds
lcall
in
sarl
pop
js
icebp
cld
outsl
and
cmp
xchg
ljmp
push
fdivs
fcoml
hlt
data16
lds
test
or
imul
sbb
ret
xor
dec
sbb
push
dec
ret
mov
inc
add
inc
cltd
scas
pop
push
fst
push
xchg
movsl
cmp
call
inc
outsb
in
inc
fstl
ret
bound
out
push
aas
mov
mov
loope
jle
test
mov
out
sbb
pop
mov
pop
dec
and
mov
test
adc
mov
inc
xor
repz
sub
cmp
rep
and
push
sti
xor
xor
and
ret
and
jl
sub
in
in
arpl
lret
jp
nop
add
sub
out
xchg
push
sbb
jmp
daa
fdivl
jne
mov
loopne
jg
or
xlat
cmc
adc
and
repnz
movl
loope
outsl
cmp
inc
inc
cmp
push
cli
mov
outsb
fwait
sub
add
mov
nop
pop
scas
inc
in
adc
notl
arpl
dec
loopne
pop
xchg
stc
imul
xor
int
rcl
test
xchg
fstl
inc
aas
sub
in
movsl
les
mov
fildll
add
pop
cmc
loopne
outsb
adc
sub
dec
xor
pushf
movsl
sbb
and
in
sbb
and
cmc
mov
xchg
repnz
sub
jp
add
daa
fdivs
xlat
and
add
js
jg
cmpsl
pop
movsb
lds
mov
mov
int
mov
out
jno
lcall
pop
sbb
jmp
lock
push
sbb
cmp
sahf
pop
cld
xchg
int3
push
sbb
cmp
lcall
stc
sti
mov
add
inc
jmp
into
test
popf
mov
mov
mov
loop
push
xchg
adc
fcomip
push
sahf
jl
aad
pop
lods
pop
testb
gs
inc
lcall
js
test
ret
test
mov
cmpsb
into
imul
dec
push
add
sbb
xchg
cltd
xchg
movsb
mov
adc
int3
and
loope
cmpsb
imul
dec
rclb
daa
mov
or
stc
call
into
int
push
pop
cmovge
mov
test
stc
push
arpl
inc
inc
clc
xchg
repnz
mov
cs
sub
roll
cmp
mov
test
inc
rcll
lods
mov
shlb
xchg
dec
stc
push
xchg
xor
xor
in
ret
aam
shll
or
push
inc
ret
das
mov
xorb
push
rcrl
call
lcall
fcoml
mov
movsl
dec
xor
mov
add
sbb
in
cwtl
in
repz
inc
pop
divl
gs
mov
inc
mov
std
into
push
div
fwait
mov
ljmp
adc
xlat
or
mov
mov
sub
mov
je
pop
cltd
lods
pop
ljmp
pop
out
les
or
lahf
and
shlb
stos
xchg
push
pop
mov
jmp
add
sbb
push
xchg
iret
roll
adc
fsubl
jle
mov
stos
xchg
cmp
xorl
pop
rclb
es
xchg
ret
gs
insl
jbe
mov
dec
pop
adc
push
hlt
lods
mov
sbb
jno
mov
fildll
push
mov
notl
neg
mov
sbb
or
mov
inc
fmull
mov
add
lea
mov
sbb
push
pop
out
jno
and
push
mov
cmc
out
jo
fcomip
cwtl
sbb
aas
mov
cltd
push
mov
fidivs
jge
testl
adc
addr16
jmp
out
stc
dec
aaa
mov
or
in
ljmp
push
or
lods
push
sahf
adc
add
out
or
mov
xor
xor
addr16
js
or
and
inc
sub
fs
pop
inc
and
xor
filds
enter
out
loope
sub
push
call
call
out
testl
pusha
xchg
ljmp
retw
addr16
jno
insb
andb
xchg
in
pop
pop
and
jg
fldl
push
shll
stc
add
dec
dec
sbb
mov
data16
cmp
je
jmp
cmp
xchg
fadds
add
xchg
mov
loope
outsl
push
test
push
and
push
stos
rorl
inc
lcall
push
div
sub
sub
fsubrl
sahf
insb
cmp
pusha
mov
xor
into
dec
repz
outsb
ja
cld
lret
mov
and
cltd
out
lcall
icebp
jne
and
cmpsb
test
insl
mov
xor
xchg
pusha
sbb
testl
cmp
in
xchg
stos
add
in
mov
ret
pop
push
cmp
inc
push
test
iret
add
in
jecxz
pop
add
mov
lea
aas
call
push
int
stos
js
jae
dec
sub
xchg
and
xor
fnstenv
inc
sbb
xorl
jp
lahf
xor
test
jl
orb
je
and
lods
jns
sbb
rcr
inc
repz
movsb
fstpl
jecxz
mov
xchg
add
mov
push
jmp
adc
fstps
adc
or
sbb
int3
test
sub
xchg
cwtl
ds
lret
std
adc
and
iret
add
movsl
xor
into
test
call
mulb
shll
repnz
into
mov
cmpsl
mov
sbb
and
dec
clc
sub
push
pop
mov
cmp
cmpsb
mov
xchg
xchg
stc
push
mov
subl
icebp
icebp
xchg
jno
rcll
jbe
add
mov
dec
in
ret
xchg
in
out
add
ja
sbb
daa
int3
imul
shrb
gs
xchg
cwtl
adc
lcall
mov
nop
cmpsl
jp
fstpt
mov
pop
pop
popf
adc
mov
es
add
cmp
adc
lea
mov
push
imul
add
cmp
xor
test
imul
divb
out
and
fisttps
aam
mov
insb
andb
cmp
sub
push
pop
and
mov
fwait
movl
xor
jbe
out
inc
ljmp
cmp
mov
pop
ss
icebp
repnz
adc
adc
jne
arpl
cld
inc
or
push
inc
loope
ljmp
fsubrl
stos
je
iret
stos
mov
lret
cltd
and
test
fucomi
mov
clc
lahf
lds
mov
fstps
sbb
fidivl
xor
movsl
inc
aam
insl
sbb
ficompl
push
lcall
ja
xor
dec
adc
lods
into
jmp
add
xchg
sub
mov
pop
add
scas
push
sbb
xor
mov
mov
xchg
mov
fmulp
fs
cwtl
mov
hlt
xor
popf
fsubp
push
mov
popf
loope
pop
and
and
xchg
add
ficomps
mov
jg
push
int3
inc
mov
dec
and
sub
pushf
and
inc
lods
aaa
jge
add
mov
aam
lods
pop
mov
dec
add
pop
inc
xchg
jecxz
xchg
jecxz
sbb
iret
jecxz
xlat
push
jns
notb
lea
push
jl
xor
pop
jl
push
cmpsb
xchg
je
jo
imul
mov
fstpt
js
insl
cmp
push
xor
mov
sbb
mov
mov
mov
add
notl
xor
dec
mov
in
xchg
lods
adc
xor
orl
mov
sahf
jo
sbb
mov
int3
roll
sbb
adc
std
or
add
scas
and
ds
out
jp
and
mov
int
stos
adc
and
aaa
mov
and
pop
mov
or
mov
jns
loope
inc
mov
mov
dec
mov
push
sti
mov
jge
mov
add
ret
daa
scas
mov
mov
pop
mov
xlat
lret
dec
outsb
add
call
mov
push
rorl
nop
jl
sahf
sub
js
insl
or
sbb
push
imul
stos
fs
mov
dec
mov
push
in
ficompl
sbb
jno
ss
movsl
lods
mov
outsb
sub
xor
push
imul
lods
dec
dec
test
mov
outsb
repnz
pop
repz
or
in
mov
rorb
or
rcr
sub
movsl
incl
or
sti
mov
shlb
rcr
insl
imul
shl
adc
mov
mov
mov
mov
xor
bound
xorb
mov
xor
into
fwait
dec
xor
push
adc
jns
xor
adcb
dec
or
mov
cmp
xchg
pop
xchg
icebp
add
dec
lcall
xchg
in
aad
jp
inc
aad
add
xchg
addr16
sbb
shll
ja
xlat
add
pop
or
movsl
pop
xchg
sub
sub
repz
ja
notl
push
add
pop
dec
ja
jle
mov
xor
xor
jp
mov
lcall
xor
or
pop
mov
cld
mov
jecxz
add
xor
sbb
dec
shlb
mov
xchg
dec
insl
cli
dec
push
lds
les
out
lds
inc
cltd
adc
pop
ror
rcrb
mov
outsb
jmp
jb
sbb
pusha
lret
jo
mov
pop
pushf
pop
and
jnp
inc
xlat
inc
dec
lcall
sbb
movsb
lret
shlb
leave
fidivl
xbegin
mov
xor
mov
aam
scas
pop
into
mov
xor
out
loopne
neg
ret
in
jo
stc
ss
pop
and
idivl
daa
out
push
lret
aad
adc
repz
jo
out
addr16
add
xchg
cld
lcall
aaa
not
lea
mov
int
aas
in
xor
sbb
and
into
xor
pop
pusha
imul
jno
push
inc
add
mov
dec
pop
repz
int
xchg
inc
mov
mov
pop
mov
or
hlt
scas
es
fistpl
adc
ja
xchg
vpaddb
mov
jl
jb
out
jns
out
inc
xchg
and
cmp
aad
loope
mov
mov
jnp
fdivrl
sahf
sti
mov
xor
lahf
and
aas
xlat
sub
mov
test
cmp
add
jp
and
mov
sbb
insb
pop
jmp
mov
andl
movsl
dec
dec
clc
or
mov
xlat
lea
xchg
sbb
maskmovq
mov
and
inc
jmp
adc
xchg
das
jg
mov
or
adc
add
es
dec
mov
jne
bound
xchg
negb
inc
inc
mov
mov
jge
insb
and
and
ss
mov
inc
mov
add
mov
pop
es
mov
push
mov
and
ret
xor
sub
and
push
cli
push
imul
and
fistpl
rcrl
ljmp
ret
xor
test
cli
jne
or
es
lret
mov
cmpsb
lock
divl
jl
pop
idivb
mov
push
fcomip
push
std
mov
xchg
js
icebp
lds
xchg
pop
cmp
sbb
sahf
and
ret
movsb
and
arpl
repnz
fwait
in
xor
xchg
pusha
les
cmp
add
insb
stos
cltd
jmp
jmp
xor
pop
pop
mov
lcall
pop
and
cli
repnz
fcomip
xor
dec
mov
dec
dec
sbb
je
imul
add
fcomp
ret
and
jns
push
inc
lcall
pop
jmp
leave
aad
sub
jecxz
inc
test
pop
rolb
xor
adcb
leave
jo
cmp
pushf
mov
add
cltd
lods
lea
mov
int
cmp
adc
nop
push
mov
pop
pushf
cmc
jmp
loopne
mov
inc
inc
mov
stc
fisttpl
aaa
jmp
inc
lock
push
jne
jl
cltd
sub
das
and
aas
das
xchg
add
dec
adc
aad
lret
jnp
and
fidivrs
mov
and
mov
sub
pop
out
add
jle
test
int
xchg
lcall
mov
sbb
arpl
pop
mov
xor
pop
subl
dec
stc
jecxz
test
ret
iret
and
inc
dec
sub
push
push
rolb
push
push
jg
imul
stos
mov
icebp
int
fisttpll
add
inc
xlat
clc
rorl
ss
xor
fsqrt
xchg
stc
pusha
push
dec
jae
xchg
and
lahf
pop
jle
mov
push
and
xchg
add
and
xchg
test
setno
jmp
in
mov
lahf
jmp
mov
and
cmpb
pop
xchg
movl
fs
push
inc
xor
aaa
bound
leave
xchg
lock
mov
aas
mov
insb
fildl
and
add
lahf
xchg
add
and
std
and
pushf
mov
pop
sbb
pop
xchg
icebp
out
pop
mov
daa
sbb
addr16
gs
jbe
push
push
mov
add
lock
inc
lods
and
clc
les
sub
jmp
daa
inc
or
clc
mov
mov
and
jb
loope
mov
lods
arpl
mov
xlat
pop
xchg
lds
call
aad
hlt
aaa
or
imul
pushf
negb
xchg
mov
call
lock
mov
int
pop
pusha
bound
pop
in
inc
out
stos
sti
clc
push
scas
xchg
mov
leave
jecxz
lods
xor
hlt
popf
std
mov
outsl
push
mull
stos
mov
cmp
xchg
mov
in
pusha
cli
and
sbb
pop
cmp
and
rcll
fnstsw
jecxz
mov
into
fstl
bound
dec
movsb
aaa
inc
jb
lea
into
ret
and
jne
push
pop
bnd
in
hlt
cmpsb
cmp
and
push
pop
rcr
inc
adc
pop
dec
xor
sub
mov
scas
call
xor
dec
mov
pop
ja
fmul
rcrl
xchg
sbb
outsb
push
adc
rorb
add
das
incl
fcmove
dec
aaa
inc
pusha
arpl
test
daa
scas
xchg
or
mov
aad
das
inc
mov
fchs
push
mov
call
xorb
push
add
or
in
je
cmpsb
xor
andb
mov
sbb
pop
jecxz
xlat
ret
std
aas
stos
jbe
sbbl
iret
test
test
popf
jb
jg
sub
imul
push
cld
mov
dec
scas
add
or
xchg
fcompl
scas
mov
xchg
es
pop
mov
call
fidivl
aam
in
fchs
idivb
shld
jg
sub
sbb
jns
inc
int
insb
jle
sbb
test
ds
push
xchg
pop
in
repnz
push
add
clc
push
addr16
scas
adc
hlt
sub
jbe
mov
xor
fucomi
push
sbb
pop
stos
out
cmp
sub
sbb
bound
mov
mov
stos
and
mov
mov
pop
je
and
int
inc
rcr
mov
imul
push
in
mov
pop
pop
sub
gs
mov
jmp
sub
imul
xor
inc
mov
cs
xchg
in
into
xor
fwait
mov
jne
ret
mov
popa
je
cltd
sub
add
les
je
dec
push
dec
frstor
lahf
sub
xor
dec
pop
std
enter
shlb
cmp
push
jmp
jnp
or
sub
sbb
int
dec
clc
gs
sub
nop
out
xchg
loop
fwait
xor
outsb
push
sbb
sbbb
nop
pop
test
pop
fnstcw
les
movsl
cmc
out
mov
xchg
and
push
out
push
ss
mov
xchg
enter
rcrl
mov
adcb
pop
shrb
cmp
mov
rclb
sbb
ss
sbb
into
sbb
jl
jl
or
repz
rcrb
pop
jp
cmpsl
mov
jo
mov
movsb
stc
negb
dec
arpl
lods
fcoml
mov
mov
dec
xchg
mov
in
int3
jo
jecxz
cs
pop
xor
int3
imul
sbb
into
imul
xchg
mov
movsb
cwtl
inc
jbe
sub
sbb
test
and
push
fiadds
inc
cmpsb
stos
dec
out
cmp
cmpsl
sahf
push
cmpsb
xchg
fisubrl
jns
add
mov
nop
negl
fwait
int3
loopne
sahf
mov
dec
lods
push
mov
ret
inc
pop
pop
jecxz
xchg
mov
pop
test
push
ret
or
mov
fmulp
sub
mov
push
add
or
xchg
gs
and
mov
fsubr
jge
out
mov
test
addr16
test
dec
cmpsb
or
or
jmp
jge
rclb
adc
bound
call
or
mov
dec
jb
andb
pop
imul
xor
jge
lahf
scas
lods
or
sbb
xchg
jl
adc
cmp
out
mov
stc
aaa
loop
mov
fwait
adc
call
and
lea
jno
pop
sub
pop
test
clc
xchg
adc
shrb
xor
cli
jecxz
call
jo
add
lods
and
inc
add
jnp
mov
aas
adcl
pop
inc
pcmpeqb
cmp
jle
push
addr16
mov
aas
loope
ss
stos
in
mull
cltd
and
jp
je
leave
cmpsl
out
mov
fcoms
call
jo
xchg
jns
push
adc
and
or
clc
lods
push
push
sahf
push
imulb
cmc
mov
mov
fs
outsb
or
loope
fnsave
stc
cmc
dec
ja
shll
and
test
out
inc
imul
lock
mov
jae
ret
cmp
aam
push
sbb
in
aad
andb
insl
cltd
cmc
test
xor
sbb
or
pop
loop
add
pushf
add
mov
jne
or
scas
jb
adc
aad
jg
hlt
xorl
and
daa
test
aas
shl
sahf
or
adc
cmpsl
fildl
jp
or
std
ret
mov
jne
call
mov
orb
pop
push
call
fstl
jae
sbb
outsb
dec
add
inc
jg
int3
inc
les
lcall
dec
fistpl
push
out
cmp
jge
push
jb
jle
dec
inc
add
out
andb
icebp
sub
or
add
bound
out
loopne
xchg
cmp
add
fwait
out
xlat
xor
fstps
cli
iret
pusha
imull
adc
push
test
mov
mov
or
cmp
fsubr
fisubs
jns
popf
loopne
sbb
loop
and
lods
call
sub
pop
sbb
push
add
stos
int
shll
in
popa
ret
lret
pop
mov
subl
cmp
test
and
and
mov
ret
dec
icebp
inc
cmp
hlt
scas
clc
push
repz
mov
mov
aad
in
push
push
adc
out
adc
pop
mov
adc
hlt
push
negl
pop
notb
adc
sub
lahf
jnp
push
loopne
and
negl
aam
push
in
orl
mov
bound
lea
sub
push
lret
loope
push
jmp
jmp
xchg
xchg
mov
dec
jnp
aas
icebp
xchg
out
data16
xorl
aaa
pop
sar
shll
mov
mov
add
call
xor
mov
xlat
mov
sub
mov
jo
ljmp
xchg
add
pop
lds
loop
int3
adc
stos
lea
or
adc
stos
enter
fldcw
mov
sbb
mov
clc
cli
gs
lret
inc
dec
adc
loopne
xchg
lock
movsb
add
js
add
das
cmp
pop
mov
cld
inc
mov
and
adc
fsubrp
insl
jbe
and
ds
jmp
adc
loope
and
fsubl
pop
sti
shlb
and
jge
cli
inc
scas
mov
out
pop
jle
ret
or
es
inc
push
push
fwait
push
outsl
in
jbe
cmp
sbb
adc
xlat
jmp
dec
es
push
fwait
sub
xor
adc
mov
outsb
mov
push
into
push
loope
out
push
jbe
test
mov
bnd
add
fisubrs
adc
mov
push
inc
cmp
and
sbb
pusha
push
mov
scas
aam
xor
jne
aas
add
cltd
icebp
out
ja
or
pop
repnz
xor
pop
adc
mov
test
es
imul
sbb
pop
sub
loop
sbb
mov
pop
stos
pushf
cmpsl
pusha
roll
xor
fdivs
mov
and
or
sub
or
jmp
jl
pop
xchg
xlat
sbb
gs
jecxz
and
jnp
xor
pop
cli
pop
jmp
jno
stos
push
pop
sbb
mov
rol
sbb
dec
in
aas
mov
sarl
dec
leave
enter
mov
fwait
pop
mov
sub
int
loope
and
adc
add
sub
mov
cmpsb
pop
lret
adc
dec
add
mov
pop
out
loopne
xchg
xchg
jecxz
js
test
sbb
push
jno
inc
in
xchg
sub
xchg
xor
lret
std
in
stos
xor
xlat
bound
lret
xchg
lock
daa
sbb
pop
jmp
mov
cltd
xchg
jecxz
mov
inc
cmpsb
dec
mov
jmp
testb
xlat
sarb
xor
jl
test
loop
mov
mov
add
push
cli
cmpb
movsl
cltd
xor
sbb
inc
xchg
pop
enter
dec
dec
imul
icebp
cli
pop
and
and
sbb
shll
mov
scas
push
mov
add
adc
or
repz
jbe
ss
fdiv
xchg
inc
adc
push
int
and
sti
and
mov
add
sub
inc
cmp
lock
push
out
ret
das
dec
jno
sbb
insl
push
dec
stc
out
jnp
mov
test
jmp
rclb
push
mov
mov
pop
pop
jnp
xor
pop
pushf
jmp
and
cmp
sti
mov
push
push
sbbl
jge
pusha
mov
lret
mov
movsl
mov
jmp
sbb
scas
cld
in
push
pop
fs
imull
mov
aad
and
out
push
pop
stc
stc
imul
inc
xchg
add
mov
inc
int3
adc
loop
jae
rcrl
xor
stc
adcb
idivl
lods
xlat
int3
lods
ljmp
push
lods
stos
pop
jmp
dec
cmp
cmp
jbe
add
insb
iret
mov
in
mov
dec
and
in
pop
mov
je
jg
scas
xor
std
je
je
mov
inc
inc
mov
pop
adc
push
stos
mov
sub
push
call
jo
fidivrs
les
cmpsl
mov
rcll
xchg
inc
push
scas
push
enter
dec
sarl
ljmp
fnsave
or
movb
jno
fwait
add
adc
adc
pop
xor
leave
sub
jmp
fdivs
test
orl
fmull
std
mov
jo
out
inc
jl
xlat
cli
fsubs
push
mov
cld
push
adc
cli
push
pusha
lret
pop
outsl
push
fdivrp
lahf
les
popa
adc
push
jne
xchg
mov
sbb
or
repnz
pop
int
fstpt
jge
sahf
jg
or
cli
je
insb
inc
daa
dec
mov
arpl
dec
rcll
mov
test
rcr
and
push
aaa
outsb
inc
popf
test
mov
fnsave
push
cmpl
xchg
cwtl
inc
imul
xchg
xchg
cli
lea
shrl
fcoms
jns
cltd
test
inc
ljmp
jecxz
jle
in
adc
test
mov
loop
fsubrl
dec
lcall
xchg
adc
clc
xor
and
fstl
mov
pop
and
in
lcall
xchg
fsub
fmull
pusha
add
push
lock
jecxz
jg
shll
mov
mov
mov
inc
pop
into
cli
add
fistpl
fwait
or
std
out
std
sbb
push
jecxz
int
stc
push
and
sbb
test
in
mov
mov
inc
popa
cld
sbb
rolb
cwtl
push
aam
cmpsl
sahf
rol
push
jae
ret
add
std
pushf
pop
aas
pushf
xchg
or
clc
add
repz
adc
popa
cli
fidivs
sbb
enter
jmp
ret
sub
push
push
sub
ret
leave
pop
cmpl
cmp
push
sbb
mov
lea
add
jne
in
mov
je
push
int
js
add
jmp
sti
punpckhwd
fcomps
fwait
stos
int
mov
pop
fnstsw
out
inc
mov
mov
fists
mov
sbb
rolb
mov
pop
scas
movsb
les
mov
pop
stos
dec
sub
and
aaa
leave
das
call
or
outsb
cmpsb
jns
fcomp
mov
out
imul
adc
outsb
dec
pop
insl
sub
xor
aad
ret
lahf
popa
mov
in
and
xchg
adc
cmp
cmp
add
cmp
inc
jno
andl
dec
lea
xor
and
std
es
out
sbb
jmp
push
push
lods
jg
cmc
xor
call
testb
add
jge
iret
cltd
dec
shrl
iret
sti
push
stos
lods
movsb
stos
movb
sub
xlat
enter
ret
imul
xor
adc
xor
inc
mov
push
sub
nop
push
loopne
xor
loopne
or
sarb
push
cmp
mov
jg
jg,pn
addr16
pusha
or
sbb
int3
lret
and
std
cmc
das
fcomps
outsl
cmp
in
mov
cld
ficompl
scas
mov
andb
in
in
sahf
push
pop
aas
xchg
cmpsb
lcall
loop
loop
push
fadd
jae
int
rorl
cltd
hlt
cmp
push
mov
fiaddl
stc
xchg
or
out
push
inc
ret
imul
cmc
int
cli
cmp
or
cmp
or
mull
mov
std
xor
out
repz
fmulp
std
filds
xchg
xchg
cmc
jmp
sub
loopne
aad
jne
nop
and
pop
ret
fcmovu
in
adc
mov
cld
inc
iret
pop
in
stos
mov
push
test
xchg
scas
inc
push
aas
add
fdivrs
or
fmull
fsubrl
mov
fs
jmp
cmp
ss
loope
sti
loop
xor
mov
or
and
dec
mov
pop
test
lahf
dec
lret
xlat
jne
idivl
push
jno
mov
iret
pop
xor
pop
das
sub
ret
adc
cli
and
push
rol
mov
sub
popa
mov
dec
jns
in
das
push
lcall
dec
adc
lods
fnstcw
shlb
lock
cmp
mov
dec
xchg
sub
inc
sub
and
mov
or
sbb
movsb
push
cli
mov
and
hlt
cmpsl
sbb
pop
fwait
stos
imul
clc
movsl
js
arpl
ljmp
pop
push
mov
je
out
fwait
mov
cmp
imul
jbe
cmp
movb
shr
addr16
shl
dec
jg
ss
scas
adc
or
pop
mov
insl
lock
xchg
das
stos
je
loop
jbe
dec
sub
incl
repz
stc
add
mov
mov
mov
mov
pushf
loopnew
in
or
jge
dec
lea
outsb
mov
xchg
sub
push
pop
sbb
mov
pop
add
in
int
cld
push
sub
int
ja
test
xchg
jp
gs
lock
loope
sbb
jecxz
xchg
pop
andb
lods
mov
mov
sub
jb
stos
mov
cld
imul
jmp
and
enter
xchg
and
lods
jbe
sar
stc
push
adc
add
cs
mov
bound
arpl
mov
fcomps
inc
sub
fimull
push
xor
jp
xor
add
jne
push
addr16
mov
xor
cmc
ja
mov
test
fsubrp
inc
movsl
fcmovb
cwtl
jecxz
ret
xor
std
xor
mov
jne
sti
sbb
popa
inc
idivl
jb
sarl
dec
in
je
cld
loopne
inc
loop
shl
cmp
xor
push
cli
cwtl
cmp
add
test
mov
xlat
fnstcw
jno
fwait
sbb
enter
cld
xor
dec
push
lds
out
add
into
pop
dec
push
out
mov
push
mov
ss
call
movsb
loop
mov
jmp
je
sbb
shrl
pop
lods
push
movsb
xor
jecxz
sahf
imul
lret
mov
mov
push
and
pushf
fcomi
pop
xchg
pop
out
call
aas
inc
jbe
sub
rcrl
pop
jmp
addr16
int
repz
rcrb
lods
inc
leave
push
or
push
test
and
mov
imul
or
cmp
mov
mov
inc
push
mov
imul
jne
ret
and
icebp
mov
test
fcoml
je
jmp
test
dec
shrl
loopne
std
add
cmpsb
pop
aam
and
and
movd
movsl
pop
inc
hlt
negb
je
push
and
mov
ret
pop
jmp
or
xchg
fldenv
movsb
cwtl
aaa
mov
lds
ja
repnz
sub
jae
ljmp
aas
xchg
movsl
cmp
fs
xor
int
int3
inc
lea
pop
dec
ret
lds
movsb
rclb
push
mov
cmc
and
rcrb
and
aam
inc
fwait
jno
mov
and
fwait
idiv
cld
fdivr
adcl
cmp
and
adc
int3
mov
in
pop
cmp
shrb
sbb
aad
add
fimuls
popa
sub
fisttpl
adc
pushl
pop
ret
int3
lods
mov
push
out
xchg
ret
mov
clc
pushf
xor
xchg
out
or
xlat
aad
mov
sbb
outsb
es
out
xchg
mov
xorb
jbe
clc
ss
stc
subl
add
pop
call
xchg
mov
loop
loope
aaa
jecxz
ljmp
or
cs
inc
xchg
or
inc
les
rol
xor
inc
lods
dec
add
sbb
push
pushf
adc
jb
sbb
push
lds
and
push
test
jmp
loop
test
outsb
sub
mov
xchg
test
add
and
rcrb
fdivrl
sbb
ljmp
ljmp
xor
mov
aas
lret
jns
mov
repz
xorl
push
adc
test
sub
and
push
not
jns
or
or
mov
xchg
mov
dec
mov
cmp
inc
xchg
jne
sbb
cmp
in
xchg
sub
xlat
xchg
inc
mov
mov
mov
rorl
add
leave
das
jbe
jns
fbld
addb
jb
mov
cmp
adc
data16
mov
scas
jp
jnp
aam
mov
and
push
cltd
mov
pop
imul
and
and
mov
sbb
dec
fsubrl
and
outsl
dec
cmp
aam
std
lcall
push
stc
testb
mov
xor
lock
mov
sti
sahf
push
loopne
ficoml
fdivrs
xchg
ljmp
ljmp
adc
popf
flds
jae
mov
sub
and
jo
add
stos
shlb
int
add
cld
pop
sbb
repz
add
fsubs
cmpsb
stos
and
xor
fxch
mov
int3
call
out
mov
inc
or
mov
mov
fs
adc
into
adc
add
das
xor
lret
inc
sti
subb
mov
pop
call
and
adc
popf
mov
inc
push
jo
xchg
and
lret
dec
inc
movl
xchg
not
mov
hlt
inc
shrl
sub
jno
lods
add
mov
mov
sbb
jb
das
in
movsl
fsubrs
lahf
das
mov
xorb
mov
jbe
mov
stc
insb
xor
xchg
mov
std
test
mov
jl
aas
lret
xor
push
push
addb
xor
push
pop
add
adc
lods
pop
out
pusha
and
movsl
jle
lea
jle
or
fsub
xor
inc
push
mov
adc
lcall
inc
xchg
aaa
ds
imul
or
mov
pop
push
mov
mov
int3
test
inc
jae
stc
bound
repnz
xchg
gs
push
cmp
xor
xchg
sar
mov
add
push
mov
pop
push
mov
adc
push
push
icebp
je
and
push
adc
xchg
mov
cmp
int
js
cmp
fists
inc
pop
nop
push
xchg
mov
xchg
xor
dec
scas
and
adc
or
out
mov
jg
push
jmp
imull
faddp
adc
push
ss
adc
out
push
adc
ss
mov
adc
test
xchg
dec
push
call
mov
mov
mulb
data16
decl
rep
push
fbld
stos
inc
mov
int
cmpsb
arpl
cli
fwait
insb
cmpb
push
iret
xor
daa
xchg
sbb
mov
adc
out
push
inc
xor
mov
loop
push
scas
in
es
and
ljmp
repnz
fiadds
mov
cmp
cmpb
out
add
inc
movsb
pop
push
mov
cmc
push
and
icebp
push
sbb
jmp
jae
jne
out
xor
pop
xor
sbb
insl
xchg
std
cmp
or
loop
xor
enter
pusha
ret
aad
jns
push
cmp
loop
dec
jbe
pop
dec
je
jnp
xlat
cmp
fiadds
inc
nop
out
in
pop
fmul
icebp
enter
xchg
mov
xlat
sub
fwait
sub
ds
js
xor
jo
data16
mov
mov
pop
xlat
test
sub
xor
ficoml
xchg
adc
mov
ja
adc
adcl
mov
lret
xchg
xchg
mov
repz
es
pop
fwait
add
scas
aad
cwtl
lret
push
fidivl
aam
or
push
dec
cmp
cltd
cwtl
sahf
jg
call
ljmp
inc
mov
hlt
or
pusha
popa
xlat
loope
iret
lea
jno
mov
cltd
dec
loop
xchg
sti
pop
jl
jae
mov
aam
ret
and
ret
jp
ljmp
add
add
adc
stos
ret
push
dec
push
lret
mov
cmp
int3
xchg
into
xchg
scas
jge
xchg
mov
sub
sbb
ljmp
mov
jae
mov
orl
loope
in
cmpsl
mov
jnp
push
pushf
into
fistl
mov
gs
cmpsl
lahf
sub
inc
inc
in
adcl
pop
inc
fcmovnb
push
pop
pushf
hlt
sub
adc
lret
cmp
cmc
js
mov
dec
les
push
dec
and
or
mov
cmp
inc
pop
fwait
rclb
lret
mov
cmp
dec
icebp
pop
fdivrl
mov
mov
pop
lahf
adc
sub
scas
rclb
stos
inc
dec
in
dec
lock
mov
cmc
push
cmpsb
sbb
sbb
mov
push
jg
outsl
shll
jnp
stc
repnz
and
adc
jl
lret
lcall
mov
sub
aaa
sub
out
sbb
add
stos
in
pushf
mov
addr16
iret
test
or
daa
pop
sbb
mov
xchg
sub
into
cmp
jo
or
mov
sbbl
inc
cmp
ja
sub
arpl
xchg
cwtl
jecxz
std
ret
sbb
and
imul
cmp
test
das
mov
xchg
repnz
xor
mov
aam
fstpt
sub
aaa
or
loope
pop
cmp
mov
lret
in
aaa
or
cmp
mov
inc
imul
cwtl
push
xlat
cmpsl
cmp
push
or
or
mov
movsl
mov
outsl
inc
push
into
out
jecxz
fnstcw
flds
pop
outsb
add
sahf
sbb
push
pusha
dec
fnstenv
mov
rclb
aas
sbb
fstl
xor
in
mov
adc
xlat
and
int3
popf
loope
xor
xchg
or
popa
cmp
daa
lahf
push
movsb
aas
jmp
xor
rcl
xchg
sub
sahf
xor
sti
xchg
mov
fsubrs
push
sub
out
repz
repnz
jae
cmp
jno
jo
xor
outsl
ds
bound
cmp
jae
test
inc
xchg
xor
es
mov
out
cmp
mov
pop
jbe
pop
jmp
pop
imul
or
mov
rcrl
cmp
jne
mov
call
das
sbb
int
iret
push
and
mov
and
cmp
loope
rol
fwait
add
gs
mov
mov
dec
int3
push
pop
cmp
sub
mov
xlat
cmp
into
fdivrs
fwait
jnp
mov
data16
xor
jle
jb
push
mov
adc
xchg
mov
mov
pop
add
and
je
ss
cmpsb
xchg
imul
dec
cmc
inc
call
negl
or
adc
std
in
rorl
fistpll
sbb
adc
mov
and
cmpsl
popf
stc
arpl
mov
mov
adc
pop
push
fnstcw
fimull
scas
loope
adc
sub
out
repnz
add
icebp
pop
shl
pop
push
rorl
mov
xor
or
jno
sti
fidivl
fsts
push
fwait
and
repz
jne
pop
mov
out
mov
movsl
test
je
mov
ds
pop
or
aad
pop
subl
sarb
cmpsb
iret
mov
jns
sub
cltd
push
in
movsl
sbb
push
xor
xchg
xor
andl
pop
mov
int3
clc
repnz
sub
xchg
incl
popa
sti
mov
fidivrl
ret
pop
jmp
pushf
add
cmc
xchg
mov
xchg
xlat
shll
jbe
in
or
jbe
es
cli
xchg
inc
push
stos
pop
pop
rcll
pop
pop
inc
icebp
pushl
mov
add
sbb
mov
lret
mov
push
bound
mov
and
pop
inc
scas
ss
icebp
aas
iret
fldcw
xor
or
dec
xor
iret
mov
daa
rcl
fwait
mov
clc
repnz
pop
hlt
pop
push
mov
sbb
popf
mov
sarl
dec
pop
jne
ficomps
push
cmp
jno
fisubrs
mov
push
inc
std
movb
xchg
jle
mov
inc
and
ss
imul
push
push
sbb
dec
pop
push
cmp
ret
aad
popf
shr
xchg
and
inc
shll
enter
hlt
ret
inc
and
fsub
addr16
shll
and
mov
cmp
dec
test
mov
push
add
je
bnd
icebp
lds
sub
xchg
inc
stc
jae
loop
jp
data16
out
mov
push
jnp
mov
and
adc
sti
and
inc
or
insl
outsb
pop
das
in
jno
in
insl
cmp
into
es
mov
arpl
nop
into
lret
xchg
test
inc
adc
xchg
lods
ds
test
lret
test
lods
stos
mov
or
gs
sub
sar
inc
mov
or
xchg
xor
mov
scas
mul
test
cmp
xchg
xchg
mov
or
xchg
dec
cmpsb
mov
repz
dec
test
sub
push
test
mov
add
or
jmp
mov
out
lods
icebp
mov
test
daa
and
and
adc
lods
dec
cmc
sbb
push
cltd
test
ja
inc
test
xor
ret
sbb
and
cwtl
push
in
jp
lock
mov
cld
pop
jne
sbb
nop
in
xchg
popl
iret
pop
push
jp
lods
pop
mov
cltd
int
inc
xor
mov
incl
hlt
cmp
inc
pop
sahf
xor
jb
inc
fldl
iret
stc
sub
or
pop
dec
pcmpeqb
dec
pop
add
jmp
loope
sbb
mov
aas
xchg
mov
push
adc
cmp
pop
fld
dec
mov
ror
mov
sub
repz
pop
jle
jg
inc
gs
dec
or
lea
outsb
sti
mov
stos
inc
enter
and
push
bound
mov
fisttps
mull
push
mov
cmc
mov
fists
sbbb
lds
and
and
daa
cld
dec
stos
dec
inc
and
xchg
or
xor
jl
adc
sti
ds
adc
stos
xchg
fmul
push
pop
iret
data16
or
mov
mov
push
push
imul
and
sub
xchg
fildl
mov
jl
mov
jg
mov
sahf
dec
mov
cld
xchg
test
cli
mov
call
mov
aas
dec
lret
test
or
pop
ljmp
mov
fwait
mov
mov
mov
fcom
iret
fs
hlt
cmp
popa
ds
inc
divb
scas
jle
and
and
lods
xchg
fisttpl
sbb
insl
jmp
xchg
xor
cmp
stos
mov
sub
pop
jmp
js
push
cmp
mov
mov
sar
lcall
shr
xchg
sbb
cltd
pushf
lock
mov
enter
mov
pop
xchg
push
xchg
aam
jns
push
mov
push
mov
loopne
out
push
loope
fisubs
mov
out
lock
xor
pushf
pop
fdivs
lds
leave
or
in
imul
fs
test
fldlg2
das
mov
lret
bound
dec
cli
add
mov
sbb
adc
aaa
and
pop
lock
cmpsl
inc
mov
push
jmp
in
push
xorl
adcb
adc
inc
imul
add
adc
repz
xchg
pushf
pop
jnp
jmp
pop
sub
into
ss
inc
sahf
divb
cs
divb
out
and
sbb
sahf
insl
neg
push
mov
fdivp
fsubr
jecxz
or
sbb
dec
mov
adc
push
mov
rcrb
jg
ja
dec
cli
aaa
hlt
mov
push
lods
rorl
aad
test
jno
movb
lock
cmp
lea
xchg
rclb
neg
ret
jo
lods
sbb
jne
push
fs
addr16
addl
mov
test
outsb
pop
std
xchg
or
jae
imul
or
idiv
fdivl
and
out
xchg
xor
ds
ret
imul
mov
pop
mov
mov
pop
imul
jl
xchg
mov
jb
ljmp
inc
out
mov
xchg
and
dec
adc
mov
es
pop
push
rolb
inc
cltd
push
fcomps
icebp
hlt
jecxz
loope
sbb
and
mov
jb
pop
gs
subb
pop
mov
fsubl
jnp
xchg
pop
cmpsl
sti
ljmp
fstpt
or
pop
mov
and
cmpsb
jne
jne
test
jecxz
sar
insb
lret
jne
xchg
jmp
fstl
out
push
adc
pusha
sbb
clc
pop
lock
lcall
lahf
cmc
jns
outsl
out
dec
push
mov
outsb
stos
push
fsubs
cmp
fdivrs
cmp
sahf
mov
jge
cli
insl
outsl
pop
pop
sbb
add
aam
jb
les
jmp
sahf
jg
arpl
fs
xchg
pusha
xchg
pop
test
mov
scas
das
movsl
cwtl
test
dec
xor
aaa
inc
movsl
movsb
sub
jo
push
inc
cld
xor
mov
pop
ja
push
fs
pop
pop
into
rcl
dec
inc
movsl
mov
mov
outsl
imul
sub
sub
imul
ja
je
into
push
dec
inc
lods
ds
sti
ja
and
out
mov
dec
inc
cmpsl
js
mov
or
out
sahf
jae
incl
test
inc
pop
dec
ss
imul
loope
add
or
or
rol
sahf
mov
add
add
mov
divl
sbb
dec
inc
sub
es
sbb
stos
mov
pop
mov
xlat
push
lcall
aas
pop
or
push
cs
sub
xchg
test
addr16
adcl
stc
sti
bound
mov
ss
ds
sub
sti
inc
push
sbb
jmp
push
jle
inc
adc
popf
and
xor
xchg
out
leave
filds
fsubr
xchg
mov
add
outsb
subb
cmp
xor
out
mov
adcb
fs
imul
add
mov
xchg
jb
mov
js
and
dec
mov
pop
push
rorl
xchg
scas
repnz
lds
and
cmp
out
push
stos
fucomip
adc
mov
pop
in
in
loop
and
or
push
ss
outsl
cmp
fisttps
mov
cmpsb
pushf
ja
cld
xchg
push
sub
sbb
pop
mov
stos
popf
sbb
xchg
mov
and
xchg
adc
mov
jle
cwtl
hlt
mov
int3
leave
enter
and
cltd
fwait
pop
push
jmp
clc
push
cmp
jnp
daa
out
pop
outsl
les
sahf
imul
sub
pop
mov
lret
push
or
mul
mov
testb
and
and
pop
xchg
fstpt
ds
mov
cltd
ret
jo
dec
add
pop
mov
push
aas
pop
pop
xchg
xor
ja
pop
outsl
pop
cmc
je
pusha
movl
and
and
stc
aam
lods
scas
mov
rcll
cmpsl
mov
jns
sbb
add
jle
jecxz
jbe
jmp
xchg
push
xor
sbb
outsl
popf
das
xchg
rorb
dec
fadds
xchg
in
pop
mov
dec
lds
gs
shrb
pop
repz
loopne
pop
js
xor
cld
adc
ja
lahf
pop
push
lea
bound
cmp
pop
stos
add
xor
sub
lcall
lret
mov
pop
sarb
js
sub
xchg
jb
mov
dec
sahf
aad
xor
pop
pop
movsl
cmpsb
sub
int3
jne
clc
in
and
pop
orl
mov
ret
jbe
enter
inc
pop
int
int3
inc
inc
cmc
xchg
add
or
movsb
cmp
imul
repnz
or
loopne
movsb
pop
and
mov
inc
aaa
mov
stc
sbb
mov
scas
fdivs
xchg
xor
mov
mov
adc
xchg
push
sbb
mov
divb
inc
jmp
dec
sarb
ss
jle
jecxz
std
or
arpl
xchg
pop
jmp
pusha
mov
ficoml
push
push
lcall
mov
movsb
cmc
mov
fists
aaa
adc
add
add
das
mov
and
jae
xchg
mov
sub
push
xor
das
notl
stos
pop
stos
adc
adc
data16
mov
pop
xchg
cmp
xchg
mov
imul
inc
jle
cmc
sub
xchg
or
icebp
cmp
adc
sti
aad
xlat
in
cmpsl
xor
mov
aam
movsl
in
and
xor
sti
int
and
sbb
inc
pop
push
ret
idiv
mov
scas
sarb
outsb
clc
jmp
cmp
jle
cmp
xchg
in
adc
push
out
xorb
mov
xchg
mov
imul
mov
lahf
call
cs
jmp
cwtl
bound
test
in
cwtl
or
popf
mov
push
lahf
mov
push
pushf
xchg
fnstsw
jae
sbb
sbb
sub
sbb
repz
ficomps
shrl
mov
xor
add
aaa
xlat
mov
inc
test
mov
scas
cmpsb
mov
add
or
shl
lret
lods
sub
stc
lods
in
lea
sub
out
lock
daa
stc
push
xlat
fsubl
cs
ss
lock
ret
jl
xor
or
push
mov
dec
mov
cmpsl
inc
lds
pop
xor
ror
pop
es
mov
mov
mov
outsb
clc
mov
mov
dec
or
repz
pop
fsubl
aaa
scas
jl
lds
jnp
out
lods
fstps
pop
scas
ljmp
and
into
inc
and
jp
pop
iret
popl
pusha
add
popa
and
mov
dec
and
sbb
test
pushf
cmp
js
addb
rcll
lods
cmpb
rcll
bound
mov
in
and
lock
nop
nop
fwait
push
jbe
rolb
hlt
movsl
cwtl
loop
sahf
add
mov
or
cs
aam
negl
ret
rcrl
and
aam
pop
or
aam
out
mov
pushf
out
sub
lcall
cwtl
cmp
cmp
jne
add
xchg
mov
sbb
mov
loop
adc
scas
push
inc
outsb
push
subb
push
push
xchg
insl
xchg
out
mov
or
pushf
scas
repnz
xchg
out
stos
subb
icebp
cmc
lret
or
jge
cmp
xor
fdiv
ficompl
mov
jns
lret
cltd
jmp
int
cmp
lock
push
sub
push
fs
xchg
arpl
xchg
sub
inc
out
add
jl
repnz
cmp
adc
test
jle
mov
sbb
pop
and
loopne
ja
jp
pusha
call
fists
push
pop
leave
cmpsb
mov
loop
xor
and
cmp
xorl
add
push
mov
mov
push
sbb
outsb
cwtl
or
roll
xchg
in
out
inc
jge
scas
pop
inc
cmp
add
lcall
sbb
aad
ret
repnz
and
ficomps
dec
test
push
test
into
adc
push
mov
rorb
xor
loop
repz
push
cmpsl
push
stos
pushf
mov
jmp
cli
xor
ja
jne
pop
dec
and
inc
ljmp
sti
call
and
mov
mov
xchg
cwtl
sub
loope
clc
and
jmp
or
lret
fwait
rcll
dec
stos
scas
leave
pop
pop
add
jmp
mov
or
hlt
addr16
int3
inc
mov
xchg
sbb
sub
adcb
jns
jle
dec
inc
rcrb
std
aad
hlt
int
mov
mov
cmp
and
push
xchg
or
jp
fcmovne
sbb
add
sbb
loope
rcl
pop
fstl
sti
add
mov
mull
fldcw
xor
mov
jmp
test
aam
add
aaa
mov
jno
mov
fwait
movsb
xor
je
loopne
lret
icebp
add
mov
movsb
movsb
add
jp
adc
mov
sbbl
sub
xor
int
lret
divb
xchg
cmp
jmp
push
int
jle
sbb
mov
roll
jne
xchg
push
rcl
iret
xchg
mov
cmp
ss
in
or
add
inc
shll
aaa
cltd
add
jecxz
test
jmp
lret
in
dec
mov
mov
mov
sbb
loope
jo
pop
clc
push
mov
addr16
fwait
gs
cmp
mov
sub
gs
cld
sbb
mov
or
xor
mov
in
jmp
mov
mov
lds
loop
xchg
pop
pushf
push
rcll
out
add
adc
pop
mov
mov
fisubrs
rcrb
lods
inc
inc
pop
pop
adc
insl
or
or
arpl
xor
out
pop
sub
in
test
in
mov
in
cwtl
sbb
sub
shlb
or
jge
mov
loopne
dec
aad
stos
xchg
adc
xchg
mov
test
es
sub
outsb
cmp
stos
xchg
mov
test
loopne
mov
adc
xor
xor
xchg
pop
cmp
sbb
mov
mov
inc
or
jnp
xor
pop
cwtl
sbb
sub
repz
mov
ds
mov
or
dec
je
jo
jne
lret
jo
ret
gs
dec
mov
mov
sub
inc
and
dec
push
aad
jae
push
cmp
loop
push
aaa
aas
pop
decl
sub
mov
loopne
test
inc
adc
aas
cmpsb
test
xchg
adc
mov
dec
pop
or
inc
test
dec
inc
fcoml
daa
push
xchg
clc
stos
dec
aaa
ret
in
cmp
mul
fs
mov
nop
outsl
dec
fcmovnbe
out
mov
push
fbld
aad
xor
cld
addr16
and
add
out
inc
sbb
jne
pop
leave
test
out
test
adc
stc
incl
pop
loop
xchg
rol
clc
jp
pop
mov
nop
daa
mov
or
inc
push
lahf
xchg
insl
jge
cld
out
lock
out
inc
adcb
aam
and
jp
cmpsl
cwtl
cs
lods
sub
std
jne
flds
pop
or
popf
or
leave
inc
jmp
mov
clc
nop
add
add
lods
pop
stos
jle
xor
mov
mov
out
sahf
test
jno
and
lds
xchg
scas
jns
mov
bound
stos
mov
repnz
lahf
sti
rol
loopne
std
pop
fsts
sbb
lcall
clc
rdmsr
jno
sbb
lret
mov
clc
int
cmp
xchg
jmp
xchg
shlb
jbe
xchg
insb
cs
test
lahf
in
ret
mov
addl
mov
fs
in
xchg
les
lret
mov
dec
fwait
push
cmp
mov
and
xchg
add
imul
aaa
andb
fdivrs
jnp
movsl
repnz
xor
jmp
push
mov
and
in
add
xor
out
xor
stc
jmp
cmpsb
in
mov
sti
into
xorl
push
aaa
xchg
push
shll
pop
sbb
mov
imul
hlt
sarb
pushf
and
mov
and
aas
jmp
add
pop
cmp
jmp
adc
push
push
push
aad
pop
imul
pop
jae
into
in
mov
xchg
xchg
or
in
dec
scas
adc
int
scas
cmp
insl
insl
stc
jp
int
vpshab
mov
mov
ds
repnz
mov
pusha
lea
sub
push
aad
ja
mov
lods
ja
ja
test
jmp
ret
inc
add
inc
addr16
in
pop
lds
ja
xchg
lods
repnz
push
test
jmp
cwtl
insb
outsl
mov
fisttpl
lock
push
pop
sub
ficoms
std
fcoms
mov
xlat
inc
loop
mov
cmp
mov
mov
xor
pop
aad
jne
xchg
das
sub
insb
jmp
popf
icebp
jo
adc
ss
mov
adc
fists
cli
push
fidivrl
enter
in
cmp
xchg
mov
and
lcall
jl
xlat
mov
das
cmp
clc
mov
jge
inc
adc
dec
xlat
push
and
std
sti
sbb
nop
mov
mov
xchg
lret
add
xor
daa
or
inc
dec
sti
enter
pop
mov
xor
dec
and
mov
lret
incl
arpl
push
push
pop
popa
inc
lret
mov
enter
xchg
popf
pop
fadds
push
insb
adc
xchg
jmp
sbb
mov
cmc
fsub
push
push
sub
xor
rcrb
and
xor
repnz
and
mov
or
lods
cmpsl
popf
xor
lds
jae
add
sub
pushf
fld
xor
cmpb
cmp
pop
lcall
mov
pop
and
dec
xor
jae
sub
sbb
fistps
fistpll
mov
add
mov
cmp
lret
sbb
shl
mov
popa
inc
jns
sub
ljmp
mov
sub
or
adc
inc
xchg
mov
adc
in
orl
jge
cmc
cmp
xchg
aam
call
inc
addr16
std
test
push
or
jg
out
pop
pop
inc
dec
aaa
lods
shll
arpl
xor
xor
inc
fsubrl
or
in
pop
or
pusha
out
lock
xor
push
lods
mov
roll
mov
lods
ljmp
push
pop
orb
dec
cmp
aam
lods
push
les
pop
popf
inc
inc
pop
cmp
push
push
in
iret
ljmp
sbb
add
jl
popf
or
lods
push
insl
mov
and
call
mov
shll
jbe
cmp
out
test
fsubr
in
xchg
das
xchg
xor
inc
popa
dec
out
cltd
testl
push
bound
call
mov
push
mov
add
mov
aaa
pop
shll
cltd
mov
mov
xchg
cs
add
out
out
lret
adc
xor
fstps
inc
ljmp
xor
pushf
mov
scas
mov
mov
mov
fldt
lds
inc
sbb
das
cli
jbe
or
cmp
enter
shll
add
fsubrs
hlt
aaa
inc
out
add
fnstsw
test
icebp
shll
daa
loop
xor
add
fucom
dec
pop
jo
fwait
loopne
mulb
mov
clc
mov
aas
pop
and
loop
ret
lock
mov
sbb
mov
or
xor
dec
addps
mov
in
test
dec
and
scas
movsb
mov
push
add
cmp
out
jb
adc
es
stos
popf
push
inc
inc
outsl
pop
dec
loop
aas
pushl
sar
push
stc
and
stos
ja
push
and
gs
test
sbb
nop
pop
mov
in
repz
roll
cwtl
sahf
in
mov
adc
jo
loopne
xor
mov
sbb
aas
push
bound
fdivr
ds
xchg
out
cld
out
xchg
mull
fildl
int3
mov
aam
push
or
mov
imul
adc
scas
adc
cmpsl
push
out
mov
lcall
mov
mov
popf
shlb
lcall
fstl
lods
sub
je
insl
or
adc
mov
out
push
add
cmp
sarl
rclb
sub
adc
mov
jmp
cmc
std
hlt
ds
jno
dec
fidivs
xchg
data16
cmp
adc
int3
xor
add
daa
xchg
add
lret
pop
mov
into
or
sbb
in
mov
mov
adc
lea
pusha
rcll
jmp
clc
mov
shl
mov
enter
out
sub
mov
jl
jno
test
push
jecxz
xlat
xchg
imul
or
and
out
jbe
cmp
mov
das
into
imul
stos
mov
push
mov
subl
sahf
inc
ss
mov
aas
jne
or
dec
fistl
inc
fs
out
mov
push
mov
jmp
fdivp
pusha
arpl
ucomiss
fldenv
pop
sbb
movsb
je
sbb
enter
call
sub
jb
fdivrs
das
mov
xchg
mov
mov
sbb
out
xchg
jno
loop
dec
sar
insb
aad
mov
mov
loop
inc
dec
push
and
fwait
inc
mov
ds
into
xor
and
sarb
inc
out
loope
mov
mov
mov
aas
loope
jge
out
iret
cli
pop
pop
out
shr
inc
add
std
and
mov
aas
pop
jae
cmpsb
mov
nop
or
mov
xchg
out
insb
test
push
aas
arpl
cmp
pop
and
cmp
jmp
rcll
xchg
and
mov
sub
arpl
adc
fs
jno
rclb
cs
cmp
repz
mov
in
test
xchg
ror
inc
xchg
jne
insl
or
popa
cli
push
pusha
ret
xor
xor
push
mov
cmp
pop
movsb
arpl
stc
testl
ja
jo
out
rclb
sbb
jp
scas
popa
imul
iret
add
lds
flds
push
icebp
inc
jae
or
cmp
lret
ret
mov
cmpsl
mov
add
sbb
push
stc
mov
in
cmp
leave
xlat
adc
mov
ds
mov
outsb
das
outsl
decl
sbb
iret
push
pop
or
ret
add
fidivrl
xchg
push
mov
shrb
add
mov
addl
dec
add
lds
cmp
lret
xor
push
in
fcoml
cmp
sahf
sbbb
sbbb
cwtl
int3
in
push
xchg
inc
repz
push
sarl
in
pop
push
xorl
jmp
roll
adc
or
xlat
lods
jb
loop
lods
pop
cmp
je
stos
lock
out
mov
adc
aam
jnp
dec
hlt
mov
pop
push
mov
mov
enter
add
jnp
data16
cwtl
arpl
adc
dec
push
inc
push
and
mov
addl
push
adc
frstor
sbb
mov
push
sbb
mov
mov
jno
mov
rol
add
inc
sbb
in
mov
mov
leave
xchg
mov
add
lds
shrb
inc
sub
aad
jp
ret
cltd
mov
jno
sahf
test
stos
stc
inc
adc
xor
cs
repz
leave
insb
mov
xor
inc
cltd
xor
mov
jmp
movsb
xchg
aas
imul
test
das
inc
and
pop
inc
xchg
cmpsl
popa
sbb
mov
mov
pop
enter
jb
scas
rorb
out
lret
ss
or
xor
push
lds
xor
std
xchg
sbb
jmp
and
adc
lahf
fdivrp
or
dec
pop
in
jmp
ss
jb
cs
inc
iret
inc
test
ljmp
adc
js
inc
push
xchg
add
js
mov
xchg
arpl
xlat
insl
mov
incl
xchg
mov
scas
mov
pop
sub
int
adc
jp
lock
out
fnstenv
xor
and
mov
pop
aaa
inc
inc
pop
mov
inc
pop
add
aas
leave
idiv
sub
jae
ret
lret
cmc
aas
mov
mov
push
popf
inc
iret
ret
mov
dec
xchg
shll
sbb
mov
fs
pop
xor
jmp
mov
and
loopne
mov
sbb
xor
mov
mov
jne
and
cmpsl
cmc
xor
leave
and
jg
adc
fdivr
xor
aad
xchg
leave
fimuls
leave
xchg
pusha
fdiv
adc
fnstsw
mov
subl
stos
dec
cmc
scas
and
jp
jne
mov
sti
subl
and
sub
iret
outsl
jecxz
lods
shlb
mov
mov
scas
mov
ljmp
sbb
data16
dec
repz
jg
loope
cld
xchg
sub
jno
jnp
rclb
xor
dec
mov
mov
dec
sbb
ja
cli
sahf
mov
jle
mov
cmp
mov
mov
scas
sbb
cmpb
jecxz
push
add
pop
push
lock
sbbb
repz
stos
aaa
jns
jbe
iret
aas
inc
mov
jo
lcall
pop
cmpsb
insb
cmp
push
mov
or
fwait
pop
cwtl
scas
fsubrs
cmp
mov
lret
inc
sub
or
shll
or
shlb
xchg
lcall
popf
ljmp
in
in
pushf
xor
gs
xlat
cmp
dec
lods
push
test
decl
mov
jb
orl
mov
das
jae
fisttpll
daa
mov
mov
cmp
test
dec
fcmovbe
pop
sub
or
add
sbb
fsts
xchg
sti
mov
sbb
pusha
push
shlb
xor
es
sbb
movsb
cmp
stos
outsb
mov
inc
or
lcall
lahf
mov
movsw
in
adc
iret
pop
test
popf
inc
daa
shlb
imul
daa
lods
or
cmp
out
notl
mov
lods
inc
and
popf
out
pop
rclb
mov
flds
mov
sub
mov
mov
push
dec
jle
fsubrl
gs
das
pop
or
dec
dec
outsl
mov
je
call
loop
and
test
pop
mov
stos
push
mov
loopne
jmp
scas
imul
mov
mov
cld
shll
jmp
jg
sbb
in
in
jne
and
mov
mov
push
addr16
mov
jne
xlat
pop
jne
rcrb
es
repnz
loop
pop
in
dec
mov
pop
mov
push
lods
pop
popa
push
mov
xchg
xlat
pop
sbb
fistpll
pop
std
mov
mov
test
xlat
shlb
out
sbb
dec
mov
sub
jns
cmp
lock
add
daa
push
div
xchg
ds
fstl
pop
dec
test
pop
ret
add
movsl
mov
push
jg
int3
sbb
in
pop
mov
outsb
sbb
and
hlt
lock
cmp
xchg
mov
lea
ds
aam
xchg
mov
sahf
pusha
repz
popf
addr16
xchg
jecxz
xor
push
aad
in
or
pop
shll
std
dec
add
jne
ficoml
mov
pop
popf
and
test
cmp
out
mov
jns
jmp
adc
aas
jb
aam
cmp
imul
test
notrack
push
repz
lret
arpl
fwait
leave
mov
addr16
rorl
lods
xor
in
sti
icebp
jp
sahf
leave
mov
xchg
stos
aad
xor
mov
mov
rcrb
je
shr
sub
pop
pop
les
inc
jmp
inc
aad
push
sub
adc
sbb
mov
dec
mov
sub
popf
jmp
adc
inc
loope
mov
nop
ss
stc
jb
pop
pop
mov
aam
cld
aaa
jnp
adc
dec
dec
add
jge
ffree
lahf
inc
add
stos
inc
sbb
popa
inc
divl
xor
les
stos
xorl
push
shl
ljmp
pop
fildl
lods
mov
inc
scas
in
ds
xlat
mov
jbe
add
dec
push
mov
fs
adc
lods
sbb
stc
adc
push
les
add
jmp
mov
and
or
mov
mov
mov
inc
lret
stc
push
jne
mov
rcll
sbb
std
aas
popa
mov
cmp
adc
int
xchg
gs
mov
dec
mov
imul
nop
outsl
fsubr
into
test
push
push
pop
mov
sbb
faddp
inc
push
repz
add
mov
or
insl
pop
push
pop
push
and
pushf
sahf
cwtl
cmp
jp
sub
jle
mov
push
xlat
jle
mov
stc
mov
mov
negl
sbb
mov
push
xor
jbe
sbb
mov
test
fnsave
mov
pop
mov
int3
xchg
mov
fwait
jne
mov
lods
test
lret
or
or
push
lahf
repz
out
jmp
dec
jle
aaa
pop
mov
adc
movsb
push
adcb
mov
jge,pt
cmp
sub
jmp
rcl
sbb
pop
dec
mov
into
insb
lods
dec
clc
aad
cmp
jge
sti
jge
bound
idiv
popf
pop
cmc
xchg
lahf
xor
sbb
loope
cli
into
in
sub
lahf
scas
lock
les
cltd
lods
insb
inc
adc
int3
daa
in
in
das
lret
out
add
pop
adc
cmp
div
les
push
lahf
loope
jecxz
int3
repnz
push
cmpsb
dec
push
imul
ret
add
push
ret
clc
push
xlat
cli
push
dec
fwait
cmpsl
mov
mov
push
into
adc
inc
xchg
nop
jecxz
xor
dec
enter
stos
in
pop
rorb
int3
mov
dec
mov
repnz
xchg
push
repz
adc
add
jne
aam
sub
jmp
fwait
jnp
loop
push
sbb
negb
pushf
pop
lahf
mov
and
shll
or
sbb
push
xlat
inc
mov
cs
jle
lea
add
and
pushf
cmc
mov
test
out
lcall
pop
push
pop
jg
stc
push
mov
dec
vmwrite
mov
fdivrp
mov
ja
inc
xchg
jnp
add
ret
cltd
dec
cmpsl
mov
push
fmuls
or
cltd
push
in
pop
xchg
mov
and
sahf
sbb
pusha
xchg
call
inc
and
shr
dec
and
int
push
lahf
ret
loope
test
stos
pop
xor
lret
fisubl
xchg
test
sbb
out
lea
imulb
xchg
push
push
mov
add
dec
and
movsl
movsl
cmpsl
inc
mov
fnstcw
inc
mov
lret
cmpsb
std
sub
pop
ret
iret
push
jae
aaa
xlat
arpl
jbe
sahf
add
push
xchg
jae
push
pushf
inc
add
dec
xchg
aas
inc
adc
std
push
mov
cmp
movsb
inc
jno
cmpsb
les
or
lcall
lock
out
add
in
mov
aas
cltd
xor
das
xchg
pusha
pop
pop
les
in
fcoml
dec
adc
aad
sbb
pop
out
je
in
mov
cmp
aam
inc
pop
mov
out
jl
es
dec
sub
pusha
test
xchg
faddl
mov
pop
clc
out
cwtl
mov
outsb
loop
stos
fs
bound
idivb
cli
js
andb
mulb
inc
cltd
push
xor
jne
mov
xcrypt-cfb
cmpsl
loop
fbld
loop
xor
jmp
xor
out
nop
sti
sub
ss
inc
xchg
iret
sbb
cmp
inc
xor
gs
aad
sbb
push
cmp
sti
in
mov
in
lods
xcrypt-ofb
cmpsl
out
xchg
cltd
xor
data16
add
xor
adc
stos
movsl
clc
shl
sar
sti
jmp
inc
jo
fisubrl
inc
imul
jmp
jg
jge
and
mov
sbb
adc
fsubrl
push
ror
aad
push
popf
sub
mov
or
subl
jmp
fcompl
mov
push
lcall
fxtract
filds
lret
inc
add
cltd
out
test
sub
in
cltd
push
adc
fmuls
push
into
jg
pop
lret
movsl
ds
aad
add
aaa
in
xor
fwait
call
jle
fbld
jle
out
es
adc
outsl
into
ja
cmp
dec
stc
ja
pop
mov
cmp
or
xchg
adc
shlb
aad
subl
outsl
gs
jg
movsl
nop
or
lock
mov
and
aas
pop
shrb
cmpsb
mov
cmpsb
mov
mov
jle
cli
out
ret
icebp
mov
cld
pop
xchg
xchg
push
sub
insl
mov
jg
push
daa
push
mov
pop
pop
mov
lcall
jno
mov
dec
scas
push
mov
jno
jbe
mov
loop
xchg
push
loop
and
inc
sub
sahf
xor
push
adc
or
pop
repz
jmp
mov
imul
and
cwtl
sti
inc
ljmp
hlt
jmp
scas
push
das
loopne
scas
or
fmull
xchg
in
sbb
call
inc
repz
pop
xchg
xlat
test
pop
cmp
fimull
xchg
sbb
into
movsl
test
dec
sbb
mov
testb
xchg
gs
shrb
jp
or
lret
xor
loop
imul
pushf
cmc
mov
xchg
xchg
adc
adc
cmp
in
les
insb
or
testb
insl
cli
cli
dec
decb
insb
jmp
add
add
clc
out
je
cwtl
push
xlat
inc
fidivs
pushf
enter
cmp
movnti
das
and
repz
xchg
cmp
lcall
pop
jecxz
mov
add
imul
sbb
pushl
movsb
inc
cmp
xchg
push
mov
loop
shll
pop
or
not
cli
xorl
push
cmp
mov
mov
call
mov
mov
mov
mov
ret
sbb
or
sbb
add
mov
fs
mov
fldcw
mov
sti
pop
cltd
xor
loope
xchg
out
xor
pop
aam
aaa
cmp
loop
les
and
mov
roll
xchg
mov
sub
lret
sbb
jne
repnz
pop
iret
and
mov
out
gs
ret
and
add
push
cs
cli
cmp
push
fcomps
mov
xchg
lods
je
fistps
push
xchg
fimull
in
shlb
iret
pop
lahf
xchg
fwait
push
push
es
cli
out
subb
sbb
xor
dec
std
add
push
cld
push
add
jp
xor
mov
out
mov
sbb
dec
test
and
mov
rorl
loope
sbb
xor
lock
shl
gs
jmp
loopne
mov
cmp
movsl
jae
xlat
dec
cmpsb
fistpll
repnz
daa
dec
nop
cmp
rep
jo
mov
lret
stc
arpl
aam
popa
adc
mov
push
push
xchg
call
jecxz
sbb
pop
pop
jbe
lahf
and
jb
rolb
fisubs
jg
push
push
mov
dec
xor
adc
cs
jle
sub
arpl
dec
ljmp
js
es
mov
dec
and
clc
xchg
mov
jle
xlat
xchg
arpl
push
inc
or
icebp
mov
jp
sub
pop
outsb
scas
sbb
fs
sub
call
sbb
sbb
jbe
lods
popf
pushl
aam
notb
xor
daa
jmp
inc
cmpb
jb
sub
mov
icebp
pusha
stos
cmp
xor
pop
loopne
mov
sti
or
in
dec
xchg
fimuls
outsl
inc
test
dec
rcrb
jno
jbe
shlb
lods
pop
lods
jmp
jns
mov
and
fs
push
addb
shrl
fwait
or
mov
stos
ror
hlt
repnz
dec
sbb
jl
pop
in
shrl
inc
clc
jecxz
ret
mov
or
lods
sbb
rcrb
lock
stos
in
int3
jbe
jge
add
jmp
std
test
movsb
addb
mov
aas
push
mov
arpl
push
mov
dec
pop
lret
sub
push
cwtl
bound
int3
lock
mov
inc
dec
sahf
pushf
push
das
inc
ja
push
fisubrl
xor
add
loopne
addr16
cli
inc
rcrb
adc
dec
cmp
pmullw
dec
xchg
mov
pop
push
mov
push
lcall
lret
jno
cli
add
jae
xchg
ss
icebp
jae
rorl
movlps
add
pop
popfw
mov
cmp
mov
sbb
push
aad
lret
lods
jbe
cmpsb
pop
xor
inc
push
cmp
lret
mov
jnp
sarl
testl
jbe
mov
inc
mov
mov
cmp
sbb
aad
jmp
jbe
movsb
pop
mov
mov
mov
lret
or
xchg
adc
scas
ss
mov
inc
mov
mov
mov
sbb
push
aad
lret
lods
jbe
cmpsb
pop
xor
inc
push
cmp
lret
mov
jnp
sarl
testl
jbe
mov
inc
mov
mov
cmp
sbb
aad
jmp
jbe
movsb
pop
mov
mov
mov
lret
or
xchg
adc
scas
ss
.byte
.byte
.byte
