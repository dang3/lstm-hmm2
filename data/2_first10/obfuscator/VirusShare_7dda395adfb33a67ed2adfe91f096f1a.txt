add
add
lock
xorb
add
add
add
inc
add
orb
add
mov
add
shlb
add
add
add
add
add
sbb
add
cmp
add
push
add
addb
add
shlb
add
add
add
sbb
add
add
mov
add
gs
add
shlb
add
add
add
sbb
add
fwait
or
push
push
adc
add
cmpsb
sahf
cmp
add
add
add
add
add
add
add
add
add
add
add
cmpsb
sahf
cmp
add
add
add
add
add
add
add
add
negl
add
lcall
shlb
add
add
add
add
add
sbb
add
shlb
add
add
add
sbb
add
add
add
mov
add
add
add
cmpsb
sahf
cmp
add
add
add
add
add
orb
add
shlb
add
add
add
add
add
js
add
fcoms
add
cmpsb
sahf
cmp
add
add
add
add
add
add
xchg
push
add
add
shlb
add
add
add
cmpsb
add
or
add
shlb
add
add
add
sbb
add
add
add
add
add
add
add
inc
add
push
add
push
add
add
inc
add
inc
add
inc
add
pop
add
inc
add
adc
dec
add
dec
add
pop
add
dec
add
dec
add
add
pop
add
inc
add
adc
add
inc
add
inc
add
push
add
push
add
pop
add
push
add
push
add
add
inc
add
or
dec
add
dec
add
pop
add
dec
add
push
add
push
add
add
add
dec
add
dec
add
add
inc
add
dec
add
inc
add
dec
add
inc
add
add
add
outsb
add
add
add
add
add
and
add
add
call
add
add
add
add
add
add
add
add
add
add
addb
add
add
add
addb
addb
add
addb
add
incl
add
add
add
incl
incl
add
incl
incl
incl
add
incl
add
mov
mov
addb
mov
mov
mov
mov
mov
orb
mov
mov
mov
mov
mov
or
mov
mov
mov
mov
mov
mov
mov
or
mov
orb
orb
mov
orb
orb
mov
or
orb
orb
orb
orb
mov
or
orb
addb
orb
mov
orb
or
mov
addb
orb
or
mov
or
mov
mov
mov
mov
cwtl
mov
orb
mov
cwtl
mov
orb
mov
mov
mov
cwtl
cwtl
mov
cwtl
cwtl
mov
mov
cwtl
mov
mov
mov
mov
cwtl
mov
mov
add
cltd
mov
mov
mov
mov
add
jmp
add
pop
addb
add
add
add
add
add
add
pop
jg
movsb
and
xchg
xor
lcall
jns
mov
push
dec
bound
mov
inc
pop
jmp
fistpl
push
loope
inc
mov
scas
xchg
jge
inc
xchg
push
movsl
pop
pusha
cmp
xchg
jmp
ret
aad
and
dec
pop
sub
jecxz
rcrb
ljmp
cs
lret
mov
jg,pt
je
cmp
push
test
mov
cwtl
mov
loope
push
push
sbbb
pop
or
loopne
adc
mov
ret
or
cli
jo
inc
fldt
cmp
push
xorb
insl
fwait
add
cmp
mov
jne
jmp
lret
and
push
movsl
inc
jo
jmp
cmp
arpl
imul
or
int3
fsubrl
push
pop
shl
jns
inc
in
pop
push
in
mov
test
call
add
out
push
adc
push
das
nop
stos
and
sub
mov
pop
imul
mov
jno
mov
cmc
adc
mov
push
and
aaa
ret
daa
xor
jae
lea
outsl
fisubrs
mov
xor
cli
pushf
xor
jecxz
xchg
sub
cli
lret
in
push
ror
pop
cmpl
stos
dec
outsl
cmp
inc
sbb
insl
adc
dec
pop
cmp
or
loope
and
fmul
mov
test
nop
or
mov
inc
divb
fdivl
fdiv
lods
mov
lahf
lock
stos
pushw
mov
cwtl
add
sbb
mov
mov
adc
jne
sub
add
into
jb
inc
or
mov
mov
ljmp
das
jbe
sbb
in
mov
xchg
int
ja
push
insl
fdivr
call
lock
scas
iret
imul
movsl
add
add
je
vpavgb
imul
fs
js
in
mov
and
mov
adc
xchg
mov
and
mov
mov
mov
push
dec
fists
dec
pop
pusha
sub
aad
and
loop
js
ja
sbb
pop
stos
es
test
mov
lahf
pop
in
sub
in
mov
cltd
lds
ffree
sti
nop
sub
jo
mov
and
jo
dec
out
in
xchg
out
xor
call
mov
incb
mov
cs
xchg
push
cmp
gs
fstpl
pop
aaa
jl
jmp
push
insb
nop
cld
mov
daa
mov
icebp
mov
push
mov
dec
jmp
push
mov
sub
inc
pop
xchg
imul
add
pop
pop
out
jl
pushf
cmpb
or
ds
leave
lock
subb
test
xchg
mov
cld
pop
cmp
hlt
push
dec
mov
aaa
adc
into
pusha
adc
roll
lock
dec
push
xor
outsl
mov
sbb
loopne
std
rclb
dec
jnp
mov
jae
push
dec
rcl
sbb
aas
mov
xchg
cwtl
dec
dec
jmp
mov
ja
adc
hlt
gs
sub
mov
mov
into
fildl
mov
cwtl
test
mul
push
test
aaa
fwait
mov
js
fwait
or
shlb
rcrb
ret
hlt
das
add
xchg
in
nop
or
push
jb
es
mov
add
sti
or
hlt
cmp
mov
mov
sub
pmulhw
sub
arpl
pop
icebp
mov
loopne
sbb
xlat
data16
push
outsl
pop
cmc
add
fisttpll
or
jge
mov
clc
movsl
sub
push
jbe
pop
stc
shr
jp
inc
add
fcmovne
jo
filds
popa
ja
lds
push
or
sbb
xchg
ljmp
popa
inc
fnstsw
pop
ret
mov
aam
cs
sti
nop
or
aas
push
insb
cmp
in
lcall
xchg
dec
mov
mov
mov
xor
fimuls
js
push
or
inc
shlw
aas
lock
push
pusha
nop
daa
or
insb
out
cmpsb
int
jnp
mov
mov
je
cltd
sbb
cmpsl
pop
aad
inc
ja
idivb
in
ror
or
push
cmc
dec
mov
outsl
and
jecxz
iret
data16
frstor
shlb
mov
fnstcw
out
mov
in
cmpsl
mov
dec
fisttpl
mov
mov
jmp
int3
and
aaa
adc
or
pop
outsl
pop
mov
repnz
push
pop
mov
push
pop
dec
adc
rcrb
les
nop
cli
mov
lcall
hlt
in
mov
mov
mov
cltd
mov
rcll
cmp
loope
out
stos
push
jmp
jge
arpl
aas
xchg
dec
cld
xor
ds
hlt
cmp
test
sbb
outsl
stos
and
fidivs
inc
rcl
push
out
sub
icebp
pushw
adc
sarl
mulb
nop
test
sti
adc
insb
out
push
mov
jp
in
or
ss
pushf
std
fs
xchg
push
xchg
addr16
xor
outsb
sbb
sub
adc
cmp
adc
mov
sbb
mov
cmc
int3
push
jnp
and
je
push
lret
out
inc
cld
mov
dec
add
aas
sarl
test
mov
shlb
jmp
mov
mov
in
mov
movsb
sahf
les
xchg
pop
push
xor
clc
fcoml
xchg
add
xor
push
mov
lock
cmp
in
addl
pop
pop
or
xchg
data16
dec
mov
pop
mov
ret
mov
iret
lods
fsubr
outsb
dec
add
cmpl
adcl
pop
jp
xor
xor
repz
das
out
jae
dec
or
icebp
leave
cmp
loope
cmp
jne
sarb
sbb
pop
inc
movsb
push
insl
lods
xor
jmp
sbb
jle
xchg
sbbb
int3
in
jbe
fwait
and
ljmp
cltd
mov
adc
sub
cmpsl
repnz
aas
divb
push
pop
xor
push
repnz
cmp
mov
dec
out
test
sub
sbb
loop
mov
jne
enter
ljmp
xor
pop
sub
cltd
mov
mov
jmp
sub
jp
lret
adc
notl
sbb
cmp
enter
jg
leave
data16
cmpsb
fistl
data16
in
add
inc
or
test
jle
rcrb
imul
jne
idivl
add
mov
ds
xchg
pop
sub
mov
xchg
jo
imul
mov
aam
fs
shl
adc
mov
addl
daa
cmpl
mov
fsubrp
stc
pop
add
jbe
aas
mov
mov
mov
out
adc
push
cmpsl
jns
imul
pop
test
inc
adc
aaa
push
or
mov
lock
sbb
cltd
iret
nop
xor
push
out
sbb
mov
outsb
int3
in
mov
and
shll
add
pop
and
aaa
mov
cmpsb
xorb
nop
ret
in
jmp
sbb
add
and
inc
sti
jbe
sti
inc
mov
ds
sub
inc
push
cmp
jl
xor
push
imul
arpl
fidivrs
add
jp
imul
clc
xorb
xchg
leave
jo
les
fs
jns
push
repz
push
divl
jo
mov
mov
aad
iret
xlat
outsb
in
dec
fsubs
sbb
inc
sbb
cmp
faddp
inc
sbb
push
mov
out
mov
or
mov
jg
daa
sbb
aad
iret
cs
xor
arpl
cmp
sbb
out
mov
jecxz
gs
jo
mov
dec
jbe
mov
add
lret
stc
pop
aas
std
leave
jo
pop
jbe
jne
aam
mov
mov
jg
mov
mov
in
pushf
test
outsl
mov
addr16
pop
and
pop
test
fwait
aaa
cltd
cmp
ljmp
xchg
push
xchg
lcall
mov
sub
jno
push
pop
adc
stc
add
mov
sub
add
or
jne
arpl
cmp
lea
inc
add
push
fwait
xchg
and
pop
imul
add
aad
aaa
sbb
mov
stos
std
popf
in
jbe
js
push
rcrl
ja
jle
cmp
test
jmp
dec
or
mov
pop
and
adc
jp
dec
inc
push
jnp
adc
jmp
inc
push
ret
sbb
mov
push
out
rolb
leave
inc
mov
shlb
lahf
ret
pop
push
cmpsl
in
and
push
mov
fdiv
jmp
adc
mov
lock
ror
movsb
mov
add
ljmp
fcom
adc
dec
mov
xchg
push
lret
mov
mov
cmp
imul
xor
int3
cmc
xor
mov
cwtl
mov
imul
imul
outsl
jne
fistl
sub
test
loopne
out
stos
cmp
aas
pop
inc
enter
and
adc
insb
aaa
adc
mov
mov
lods
in
imul
scas
jge
or
fdivr
icebp
js
mov
lret
sub
mov
hlt
cmpsb
movsb
les
addr16
lret
lret
lods
mov
pop
hlt
dec
mov
mov
sub
sahf
jmp
push
mov
gs
arpl
gs
push
xchg
loop
inc
fistpl
jle
jbe
fwait
movsb
es
mov
sbb
inc
icebp
jns
fwait
inc
jno
jo
cmp
js
sbb
outsb
fmulp
mov
loop
dec
inc
dec
add
adc
mov
scas
pop
test
bound
insb
gs
gs
push
jmp
fwait
and
es
cmp
pop
add
sub
add
divl
jp
mov
ss
pop
sub
pop
add
mov
adcl
or
enter
push
inc
jge
dec
xchg
ja
mov
or
or
adc
cmc
mov
pop
sbb
je
dec
and
rolb
or
push
sbb
jo
cmpsb
insl
mov
mov
fdivrp
pushf
int
jnp
lcall
icebp
pop
mov
cmp
pop
in
adc
aam
xor
jl
push
bnd
sbb
jae
cmc
hlt
dec
cmc
adcb
sbb
pop
sub
testl
push
push
pop
push
pop
mov
outsb
fstl
xor
sbb
insl
jg
or
xchg
dec
jg
or
xchg
jae
andl
clc
sub
add
pop
or
pop
and
inc
scas
scas
xchg
dec
jp
sub
arpl
sbb
pushf
mov
cmp
xchg
test
and
ljmp
xchg
mov
in
pop
test
stos
add
mov
jle
idivb
push
mov
das
dec
fwait
pushf
test
push
fldenv
scas
inc
or
lret
fs
or
dec
or
cmp
rorl
test
jle
mov
and
mov
push
enter
aas
mov
pop
hlt
and
mov
add
mov
sbb
scas
jecxz
movl
fnstenv
inc
mov
inc
dec
ja
sti
push
push
sbb
sti
mov
loopne
lods
movb
dec
int
arpl
cli
xor
aam
mov
or
mov
xchg
fs
rcr
xor
sub
push
mov
xchg
les
nop
cwtl
xor
pop
lahf
das
clc
xchg
mov
push
jmp
pop
in
jle
jecxz
roll
arpl
stc
mov
and
rcl
and
mov
xchg
ds
dec
add
add
inc
push
push
in
adc
pop
mov
sub
and
pushf
imull
cmp
cmp
movsb
mov
lret
fdivr
mov
addl
stos
in
dec
dec
sbb
jb
or
ds
and
push
stc
ret
lods
nop
and
or
aaa
inc
cld
inc
lcall
xor
js
sub
sti
and
mov
add
mov
sbb
enter
data16
icebp
add
push
movsl
xor
roll
pop
cmc
sahf
push
sbb
shll
movaps
dec
sar
pop
fcoml
mov
ds
mov
jno
inc
inc
bound
pop
mov
ret
dec
repz
add
clc
pop
push
sub
push
push
and
jno
mov
pop
jg
mov
cmc
dec
sub
fadds
mov
dec
mov
mov
and
and
push
ljmp
dec
idivb
mov
ss
inc
and
push
jne
mov
xchg
sub
mov
inc
dec
add
orl
xor
add
xlat
and
xor
push
nop
adc
das
inc
sub
int
js
mov
shlb
sub
call
mov
stos
mov
inc
subb
jo
rorb
iret
jl
xor
inc
shlb
jg
push
push
test
adc
outsb
and
mov
aam
mov
aaa
andl
add
aam
out
cmp
movsb
or
int3
aas
mov
lock
jnp
loop
hlt
in
dec
mov
ds
push
cs
imul
push
hlt
clc
pop
sub
push
add
mov
loope
in
adc
arpl
inc
fucomi
inc
adc
or
stos
push
xchg
addr16
addr16
das
out
fs
or
ffree
pop
sub
aaa
jns
or
rclb
xor
test
and
jne
cmp
scas
xor
test
dec
dec
cwtl
push
sbb
dec
rcrb
aaa
into
jae
inc
ds
daa
push
pop
add
inc
mov
scas
mov
push
popf
std
iret
or
pop
cmp
rcrl
add
mov
bound
inc
sahf
out
or
bound
enter
jae
push
inc
in
pop
inc
or
cmp
mov
mov
sbb
and
popa
sub
inc
push
inc
imul
rcrb
adc
or
and
mov
pop
jne
mov
dec
and
out
lret
fdivs
or
inc
or
push
or
sub
repz
idiv
mov
push
push
xor
xchg
and
cmc
push
cmp
popa
loope
in
mov
hlt
pop
fldenv
dec
dec
add
dec
shll
jge
mov
or
cmpsl
test
adc
std
sub
and
jg
cmp
push
mov
insl
sets
push
sbb
sub
insl
cmp
test
adc
in
mov
jg
cli
xor
je
mov
in
and
gs
add
lock
imul
jns
fidivl
add
scas
jecxz
pushf
xchg
cmc
sbb
xchg
outsb
fsubrl
jo
xchg
sbb
lcall
mov
xchg
lret
cmp
add
in
mov
adc
mov
test
aas
sbb
test
movsl
icebp
or
ljmp
push
cld
outsl
js
mov
dec
mov
outsb
fsubs
test
xchg
cld
in
pop
sbb
jge
push
jl
pop
mov
cmpsl
pop
in
inc
std
jno
mov
aad
js
pop
out
insb
stos
and
fistpll
mov
andb
je
xchg
aas
rorb
pop
and
cmp
nop
add
xchg
adc
fldcw
mov
pop
push
lods
sub
shll
aad
aam
mov
mov
mov
mov
mov
fisttpll
fwait
cmp
sub
pop
stos
cmp
xor
jp
mov
mov
das
mov
xor
cmpl
lock
jg
mov
ds
ficoml
mov
aas
cmpsl
iret
pop
pop
xor
mov
dec
movsb
fsubrp
jg
cmp
dec
mov
lahf
xchg
dec
lea
and
sbb
mov
jmp
dec
out
shlb
jae
cmp
fldt
and
and
dec
pop
adc
add
out
sbb
push
pop
popa
cmp
dec
loop
frstor
push
push
push
cmc
call
mov
scas
mov
pop
and
and
stos
rolb
ds
fisttpl
or
negb
loope
or
outsb
jne
fadd
hlt
inc
iret
cmp
sbb
pop
addr16
incl
aaa
imul
pop
add
outsb
mov
ret
xor
mov
rcrb
pop
jge
rorl
sbb
stc
test
imul
mov
ror
inc
sbb
push
lods
pop
cli
mov
dec
xchg
mov
inc
or
les
and
je
push
push
in
xchg
mull
jns
mov
outsb
and
mov
sub
mov
lahf
call
fs
outsb
lret
and
cmc
out
mov
and
mov
cmpsl
jp
mov
ss
fcmovb
jg
ret
push
ret
dec
add
shr
shlb
or
int3
xor
or
fs
jmp
ret
dec
sbb
dec
jg
jo
jecxz
jle
xchg
cmpsb
mov
fwait
sub
pop
lahf
lods
sti
jno
popa
push
sub
hlt
dec
xchg
ret
pop
in
sub
stos
es
testb
lock
cmp
sar
insl
and
shlb
jnp
pop
mov
jmp
or
add
sbb
es
pop
inc
mov
jmp
jno
push
sbb
and
and
test
mov
cmp
mov
xor
cmpsl
sub
aaa
fcoml
out
and
fisttpl
mov
adc
cmp
rclb
adc
int3
lea
jb
sbb
adc
mov
sub
pusha
enter
clc
icebp
fstl
cmp
sti
xchg
add
js
test
mov
xor
cld
add
xchg
mov
shll
cld
push
pusha
push
ror
scas
push
imul
cmpsl
mov
push
jg
jo
lds
fsubrl
mov
push
dec
shr
fldcw
pop
jmp
lret
xor
mov
pushl
sbb
push
outsb
out
les
inc
xchg
lds
popa
mov
mov
rorl
mov
enter
jae
jmp
mov
jmp
mov
mov
jo
and
xchg
mov
mov
add
in
inc
inc
mov
sar
aas
push
into
ror
pop
xchg
or
out
sbb
mov
mov
adc
pop
cs
loopne
sbb
jb
adc
cmp
and
test
lret
cs
ds
cld
mov
test
sub
mov
jmp
or
jns
mov
loope
sub
jo
stos
aas
push
adc
cltd
mov
cmp
mov
stos
jne
xlat
jno
ret
mov
pop
pop
stc
or
cmp
icebp
sbbl
repnz
pop
fidivl
fcmovbe
jo
cmpsb
xchg
shlb
test
es
test
mov
comiss
arpl
js
sbb
sbb
imul
jo
adc
sar
xor
mov
mov
inc
and
cmp
out
xchg
jmp
andb
jg
aam
aam
pop
xchg
xchg
jp
jle
aam
fldl
scas
xchg
mov
push
cmpb
inc
lea
cmp
sbb
in
sbb
mov
les
shl
adc
or
lea
js
andb
cmpsl
loopne
or
xchg
push
and
dec
inc
ja
aas
pop
push
mov
xor
sub
scas
mov
cmc
ljmp
sbb
sub
pop
les
sbb
mov
fldcw
test
sbb
mov
cmp
aad
and
lock
inc
fwait
jo
fsubrl
cmc
xchg
dec
shlb
add
jge
xchg
adc
mov
loop
out
test
xchg
fwait
lret
fcomps
rorl
inc
cmp
jge
shrl
jecxz
and
sbb
xor
pusha
pop
loopne
pop
jl
fcmovne
hlt
aam
enter
mov
incb
push
fstpt
movsb
repz
push
jg
adc
mov
jge
aas
xor
mov
mov
add
hlt
repnz
push
cld
hlt
imul
movsl
lret
andb
fdivrs
add
jl
push
cld
pop
es
test
pop
mov
jb
push
sub
outsb
cmpsl
lret
add
out
mov
lahf
aaa
test
adc
mov
inc
fsubrs
mov
test
jbe
adc
push
out
repz
inc
std
into
aam
mov
shlb
es
mov
inc
aad
andl
mov
rclb
jmp
cmpsb
mov
mov
cmc
lahf
sar
mov
xorl
pushf
test
rcrb
jbe
push
mov
and
ficompl
cmp
aas
pop
addr16
aad
cld
outsl
filds
insl
shrb
shl
cmp
push
inc
lcall
addr16
nop
xor
push
outsb
mov
fistpll
sub
xchg
test
enter
mov
jbe
mov
fbld
fidivl
and
subl
mov
inc
fs
fcomp
loopne
jb
push
imul
sub
sbb
dec
xchg
test
data16
scas
jp
rorb
int3
pop
xor
bound
loopne
jecxz
addb
xchg
int3
push
fwait
push
imul
dec
fwait
std
dec
scas
and
xchg
fiadds
fnstsw
aas
or
aaa
popf
inc
cs
imul
dec
aam
sti
ss
or
and
bound
fisubs
lcall
fucomip
in
pop
das
lock
lcall
add
adc
jg
add
push
sub
xor
add
mov
das
cmpsb
call
inc
push
faddp
pop
mov
fisttpll
shl
push
popa
sarl
or
jnp
jno
aam
push
sahf
jnp
pop
push
mov
inc
xchg
daa
js
repnz
subb
addr16
and
xchg
aaa
out
incb
pop
sahf
add
mov
or
enter
scas
mov
push
pop
dec
pop
jge
mov
out
insl
cwtl
mov
dec
dec
lods
int3
and
enter
push
nop
and
imul
flds
xorl
cmp
pop
jns
lret
mov
fidivs
sbb
sahf
sbb
mov
out
jmp
cmp
mov
add
je
cld
or
ds
rolb
xor
out
mov
lods
inc
sbb
pop
inc
lock
inc
mov
adc
loop
addr16
jo
cltd
jp
sbb
xchg
into
movsl
inc
sbb
xor
insb
xor
xor
neg
xchg
xchg
or
inc
cwtl
xchg
imul
add
inc
cmpb
jge
in
jecxz
das
push
lds
leave
aam
stos
jmp
jne
in
mov
add
daa
icebp
les
jae
aas
jecxz
and
mov
movsb
mov
cmp
pushf
push
ja
ja
mov
adc
pop
push
xorb
lock
inc
sbb
jecxz
xlat
mov
in
dec
inc
stc
lret
and
push
movsl
mov
push
sbb
sbb
cli
pop
sbb
mov
mov
and
stc
sti
jmp
pop
out
inc
movsl
popl
sub
ss
or
fstpl
std
and
ss
in
add
ficoml
mov
scas
in
subl
ficompl
js
push
xorl
imull
dec
push
mov
arpl
aas
push
ror
mov
jmp
call
rcrl
imul
sahf
add
xchg
fsub
movsl
pop
and
mov
imul
or
repz
mov
icebp
dec
sbb
test
das
aad
inc
inc
jle
test
xor
mov
adc
or
pop
cmp
fistl
cmpsl
lods
mov
je
sbb
sbb
lahf
pop
int3
xchg
sbbl
ret
lret
dec
test
push
mov
push
in
imul
sub
nop
pop
rcrl
cmpsb
adc
test
pop
inc
loop
loopne
imul
jae
lea
push
xor
xchg
mov
sbb
sbb
inc
push
xchg
xchg
add
ss
fisubs
push
fimuls
sbb
int
movsl
imul
aas
scas
scas
and
cs
push
jne
pop
dec
adc
inc
repnz
fdivp
add
mov
or
lahf
mov
mov
mov
mov
sbb
in
or
rcrl
arpl
in
rcrl
fisttpll
pop
add
dec
jmp
mov
dec
ja
fstl
pop
fcoml
rcll
push
push
pop
add
fildl
dec
xchg
xorl
or
or
daa
subl
rcrb
clc
nop
cmpsl
repz
scas
in
mov
int
stc
out
xlat
incb
sbb
mov
scas
lods
adc
fisubl
cmp
lcall
das
push
or
cs
das
icebp
sub
popaw
scas
inc
push
loopne
mov
jbe
dec
icebp
fmulp
and
xor
xchg
add
mov
cmp
dec
cld
les
in
pushf
cli
outsl
shr
xchg
pop
sahf
mov
sbb
xchg
int
or
out
imul
imull
jnp
push
ss
or
sub
mov
enter
repnz
cmp
ret
jbe
sbb
test
cmp
hlt
mov
xor
and
ret
in
or
loopne
cmp
push
inc
aas
enter
adc
movsb
cmc
jecxz
subl
and
xchg
push
nop
lcall
js
adc
test
mov
dec
xor
stos
pop
pushf
fisttpl
cmp
pop
mov
push
dec
stos
out
cmp
jne
out
mov
fnsave
out
call
test
push
sbbl
mov
xchg
mov
leave
jle
out
adc
shll
ficoms
clc
repnz
inc
and
sub
xchg
mov
dec
sbb
sbb
sub
js
dec
das
dec
jae
nop
mov
inc
lods
jbe
lock
dec
sbb
lds
sub
mov
lods
jge
decl
and
adc
das
xchg
dec
addr16
sub
jge
pop
aas
and
rolb
daa
xorb
subb
into
mull
movsb
mov
mov
sbb
mov
jns
xchg
out
iret
lahf
int
shll
ret
push
icebp
dec
mov
jo
jns
or
shrb
fwait
mov
jns
mov
in
xor
repz
rcll
jae
xor
xchg
xchg
sub
mov
mov
cmc
inc
hlt
mov
jge
add
in
jp
cwtl
daa
pop
mov
js
aam
dec
fsts
jno
cli
test
push
mov
cwtl
out
mov
repnz
mov
or
or
arpl
or
jb
imul
sahf
jno
std
cmp
cmpl
rorb
leave
mov
jnp
int
in
insb
not
les
lret
sarb
nop
and
lods
in
xchg
adc
jp
sbb
cltd
sub
sahf
aaa
xchg
xor
call
lock
sub
std
in
pop
subl
sub
mov
nop
push
add
mov
sbb
test
push
insb
test
push
sub
fldl
dec
push
addr16
cli
fbld
inc
mov
inc
jge
dec
push
jg
ja
adc
or
repnz
jno
pop
orl
fwait
pop
and
insb
idivb
popa
pop
aaa
cwtl
sbb
stc
jg
lret
ljmp
adc
xor
mov
lea
and
pop
imul
daa
inc
fs
cmc
and
sbb
mov
mull
test
gs
jmp
mov
mov
xchg
in
sbb
add
movsl
adc
add
sarb
test
dec
dec
les
inc
adc
sub
int
and
lcall
lcall
setle
mov
aam
mov
fsubl
bound
pop
add
daa
push
xchg
xchg
pop
sbb
push
sub
jo
push
xchg
movsl
sub
or
out
push
fwait
pop
pop
cvtdq2ps
xchg
std
adc
lahf
sar
xor
mov
cmp
mov
and
in
sbb
gs
shlb
stos
mov
addr16
cwtl
push
xor
xchg
data16
xchg
xchg
out
hlt
push
adc
mov
push
and
out
or
movsb
add
mov
push
mov
and
push
mov
xorl
and
jne
xor
cld
xor
adc
lret
aad
ss
mov
inc
pop
mov
adc
xor
xor
shll
dec
mov
add
add
add
idivl
pop
aad
jg
inc
sub
sbb
inc
mov
in
add
or
pop
xchg
xchg
scas
mov
cmpsl
int
js
fld
mov
jmp
out
push
loopne
jb
adc
push
ss
sbb
sub
cltd
loop
cmp
sub
sub
dec
mov
leave
mov
pop
je
int
je
mov
bound
pop
mov
incb
loop
jb
aam
sbb
add
jg
movsl
pop
or
mov
add
decb
and
aam
dec
sbb
orb
repz
mov
cmp
hlt
mov
mov
lods
subb
jne
call
and
psrlw
lods
push
adc
xchg
aam
jno
dec
arpl
cltd
in
ret
sarl
xchg
or
cmpsb
dec
cli
add
xor
cmp
inc
dec
add
and
xchg
mov
xchg
mov
pusha
adc
inc
mov
faddl
dec
cltd
in
pop
shll
into
fdivrl
and
mov
mulb
or
cmp
or
xor
repz
push
dec
lahf
cmp
les
popa
shr
inc
jmp
aaa
mov
sbb
cmp
jae
and
clc
bound
or
adc
mov
dec
lahf
js
add
insl
aaa
scas
cmp
xchg
and
cs
loopne
xor
push
out
xor
stos
int
sti
jg
jno
lcall
inc
fisubrs
dec
mov
xchg
mov
adc
in
inc
jae
fcompl
dec
cmp
lock
and
int3
push
ss
jnp
sarb
fs
pop
mov
inc
lcall
adc
inc
shrl
rcll
inc
and
jnp
outsl
mov
jge
ljmp
and
js
mov
mov
stos
leave
cwtl
scas
movsl
hlt
pop
adc
inc
push
roll
fdivl
dec
sub
mov
iret
add
push
or
insl
cmpsb
dec
icebp
mov
pop
mov
xchg
and
jbe
add
mov
or
mov
adc
in
leave
push
int3
inc
out
adc
dec
sbb
xor
test
test
inc
xchg
jmp
iret
mov
insb
dec
fsubl
pop
mov
cmp
and
ret
mov
mov
pushf
jae
inc
mov
aas
sbb
fistps
movsb
and
sbb
inc
or
add
push
insb
int3
push
or
stc
dec
xor
adc
mov
cmp
lcall
jmp
jle
dec
popf
sahf
lds
sar
rcrb
cmp
sbbl
mov
fwait
lret
lahf
push
inc
je
push
jae
and
int
jmp
pop
fstps
pop
add
pop
jmp
or
lcall
inc
xchg
dec
cmpsb
xchg
insb
mov
clc
out
jbe
ds
out
add
outsb
inc
aad
pop
xlat
inc
mov
adc
pop
call
pusha
cmp
jne
lock
dec
push
ret
add
aad
addr16
shll
inc
xchg
mov
fs
cmp
inc
inc
mov
imull
test
cmp
xchg
mull
mov
insl
lret
mov
jle
stos
loope
add
add
dec
sub
sub
into
push
fisttpl
in
sub
push
mov
sub
aam
pop
fldcw
inc
cmp
xchg
mov
inc
pop
mov
stos
int3
enter
cs
or
jp
adc
pop
js
sahf
into
add
nop
mov
cmp
mov
dec
push
or
ds
push
lods
sbb
cmp
adc
cmc
inc
xchg
mov
cmp
stos
cmp
mov
call
sub
mov
test
cs
cli
dec
xchg
lock
insl
jmp
loope
jnp
scas
std
adc
fdivs
int3
or
add
adc
push
sbb
xchg
clc
popf
cwtl
mov
xchg
loop
jmp
clc
push
push
pop
addl
movsl
pop
movsb
and
dec
in
addr16
mov
test
loop
push
out
xchg
test
leave
add
mov
outsb
jo
and
and
stos
inc
mull
inc
dec
or
mov
mov
mov
addl
nop
dec
pusha
aam
fisubs
push
enter
adc
loope
or
dec
xor
pop
imul
push
mov
out
movsl
push
adc
out
int3
sbb
lret
notl
jle
pop
pop
mov
ja
outsb
jns
push
lcall
dec
rorl
out
lret
dec
sub
mov
mov
mov
hlt
sarl
and
repz
sbb
ret
inc
add
inc
push
ret
ja
inc
les
pop
repnz
aad
mov
push
addr16
out
add
stos
cmp
jne
cmp
dec
add
xor
add
inc
test
or
push
scas
fsubr
insb
xorb
or
xchg
in
xor
gs
inc
mov
adc
or
mov
push
int3
dec
das
sbb
push
adc
test
adc
pusha
ret
mov
sub
xor
pop
scas
cmpsl
daa
cli
jle
cmpsb
pop
jns
out
mov
jge
js
pop
adcb
mov
es
pushw
test
jns
sahf
fsubs
xlat
sti
movsb
dec
push
pop
sbbl
ss
pop
mov
xlat
enter
cmc
cmp
cwtl
repnz
addr16
loope
std
mov
xor
add
xchg
loopnew
les
mov
lahf
imul
or
call
sub
or
pop
mov
cld
jle
hlt
pop
aas
pop
aam
mov
mov
jg
inc
fs
dec
dec
sub
shr
mov
mov
adc
and
pop
cmc
xor
cwtl
add
ret
push
pop
jne
mov
mov
mov
test
mov
call
subb
mov
dec
movsb
mov
xchg
mov
loopne
xchg
movsb
or
lahf
shrb
aas
jnp
leave
in
or
xor
push
push
jmp
fiadds
push
bnd
add
insl
jle
subl
dec
cwtl
inc
jp
cmp
mov
insb
pop
dec
mov
sub
push
bound
mov
sbb
push
mov
orl
inc
out
test
push
mov
lret
xchg
andl
fwait
xchg
int3
cwtl
std
pop
sub
inc
lock
inc
fnsaves
adc
cli
push
dec
sbb
jl
imul
push
shlb
loopne,pn
out
rcl
cmp
test
add
inc
inc
hlt
inc
push
js
stos
ret
test
sbb
sarl
sahf
xor
mov
test
mov
stc
mov
xor
into
insl
add
fsts
push
xchg
test
cmp
mov
and
inc
test
aam
cmp
adc
sbb
push
xlat
enter
cmpsb
sbb
push
stc
insl
mov
xchg
jg
mov
mov
sbb
fmuls
or
fnstsw
cmp
mov
xchg
xchg
add
cltd
mov
cwtl
imul
rclb
std
xor
pushf
xor
pop
ljmp
mov
adc
daa
divps
imul
mov
outsb
pop
vpsrlq
inc
sub
faddp
sbb
pop
cmp
ds
fistpl
sti
dec
lret
push
inc
lock
push
dec
cld
mov
loope
sbb
sbb
outsl
icebp
mov
push
mov
adc
xchg
das
and
mov
jp,pt
xchg
sbb
pop
sub
push
jns
ds
lods
or
add
xchg
mov
add
leave
negb
aad
cmp
lods
test
lock
les
add
popa
mov
jno
mov
popf
movsl
idivl
sti
in
insb
mov
into
xlat
mov
cmpsl
cmp
cmp
pop
sar
sub
mov
addb
adc
arpl
jl
push
sub
mov
pop
dec
adc
dec
insl
and
js
daa
xorl
out
sbb
dec
or
inc
xchg
clc
int3
jmp
mov
in
push
dec
ja
icebp
pop
jo
sbb
out
pop
or
and
or
sub
fsubrl
inc
data16
push
push
sbb
push
adc
push
mov
and
loope
shll
lods
push
inc
sub
mov
lock
shrl
pop
out
mov
xor
sbb
clc
jno
sub
out
mov
popf
pop
jo
xlat
js
test
push
iret
lock
cmp
mov
inc
mov
push
in
inc
xchg
ja
out
inc
sub
out
dec
cli
rorb
int3
stc
pushf
pop
stc
inc
into
inc
std
repnz
mov
adcb
adc
cmc
fcoml
dec
adc
out
adc
mov
in
shlb
or
xor
push
loope
jle
and
dec
lods
dec
movsb
repnz
mov
jne
test
add
loop
and
pop
addr16
mov
mov
inc
ret
dec
or
sti
push
xchg
lret
jnp
cmp
push
xchg
push
ja
adc
lea
push
cmp
and
and
pop
mov
and
or
push
aas
jle
addr16
test
addb
lahf
imul
out
pusha
cmp
or
xchg
test
jne
das
sarl
push
lock
xchg
std
fisubl
push
in
loope
ds
gs
xchg
mov
stos
sbb
pushf
mov
push
leave
out
sub
pop
mov
movsbl
rolb
addl
cltd
ret
mov
daa
jbe
adc
jb
icebp
lcall
dec
test
bound
fcmovbe
imul
cmp
rclb
shll
adc
inc
or
dec
push
xchg
pusha
pop
mov
adc
dec
xchg
fistpll
jnp
in
scas
fists
adc
aas
cmpsb
gs
fidivl
gs
mov
test
into
mov
cmp
push
or
fstpl
test
xchg
rcrl
mov
insl
and
push
repnz
loop
adc
movsl
in
pushf
mov
jns
jo
stc
test
cltd
xor
imul
xorb
mov
enter
mov
das
jg
std
push
pop
call
pop
jmp
dec
aaa
push
adc
pop
xor
or
pop
movsb
cmp
lds
sti
dec
out
push
mov
pop
mov
adc
pusha
inc
clc
cmpsb
and
dec
imul
sarl
cmpsb
mov
ljmp
daa
icebp
mov
inc
cmp
les
int3
orb
and
js
pop
es
add
mov
dec
dec
sarl
mov
cmc
faddl
pushf
cmp
and
mov
sbb
add
inc
dec
inc
enter
sti
out
cld
rcrb
jp
mov
leave
dec
stc
xchg
or
enter
rol
lea
repnz
jne
adc
fnstsw
imul
scas
pop
mov
pop
or
aad
add
call
pop
movsb
add
popf
pop
dec
push
out
jb
movl
dec
add
arpl
nop
imul
cmp
mov
and
outsb
lock
inc
and
mov
push
and
inc
icebp
inc
lods
inc
or
jne
in
mov
xchg
adc
inc
cmp
fadd
add
push
sbb
xor
ss
adc
fcmovu
les
fists
xchg
jge
repz
sub
mov
insb
rolb
notl
add
into
sub
stos
bound
xor
xchg
jl
into
and
shll
jne
movsl
jl
push
pusha
outsb
and
adc
pop
sbb
and
int3
xlat
sbb
add
into
mull
roll
decb
jp
mov
lods
adc
stos
mov
xor
jbe
mov
inc
scas
dec
cmc
sub
sub
ret
xlat
push
mov
fildll
imul
xchg
mov
push
out
fisttpll
jb
xor
inc
in
or
add
jmp
pop
aad
cmp
jmp
fbld
fisttpll
aaa
push
out
in
jns
and
jns
xor
jno
pop
mov
xchg
fcmovnbe
jp
xchg
cmpsb
imul
adc
push
cmp
jae
lret
lret
mov
das
cmc
sub
out
dec
cmp
jle
int3
daa
cwtl
xchg
push
push
jbe
mov
mov
aaa
das
xor
jg
outsb
daa
cld
mov
leavew
lock
sub
xchg
xchg
je
push
and
xchg
adc
test
daa
cld
fwait
add
inc
in
inc
mov
clc
cmp
inc
cmp
lahf
aas
add
push
mov
lar
inc
je
outsl
xchg
mov
push
dec
jns
jge
shlb
dec
mov
mov
jns
rcrl
mov
sahf
or
out
push
aam
pop
fdiv
and
pop
push
push
shlb
out
adc
int3
sub
add
pop
ljmp
mov
inc
push
ret
arpl
mov
fmull
xor
inc
pop
inc
cmp
daa
dec
bswap
mov
lods
lret
pmullw
fildl
xchg
sbb
in
or
imul
stos
xlat
aaa
jge
cli
fdivl
gs
lcall
scas
pusha
mov
data16
xor
xor
mov
mov
mov
jecxz
sub
imul
mov
cltd
add
fxtract
into
bound
shlb
mov
rcl
jne
xor
inc
adc
sub
int
mov
shrl
out
lahf
js
leave
jmp
sbb
and
or
pop
imul
movsl
mov
cmpsb
pusha
test
pop
addr16
xchg
jnp
scas
fs
loopne
mov
dec
mov
fwait
jg
pop
xchg
lods
xchg
inc
les
cwtl
dec
mov
mov
add
or
js
xchg
pop
leave
push
enter
sub
xchg
pusha
mov
dec
mov
in
mov
sbb
pop
je
lret
mov
leave
jno
xlat
cmp
daa
out
jbe
mov
push
imul
jno
in
mov
push
in
inc
sbb
lahf
pop
inc
scas
std
ret
mov
mov
in
pop
loope
mov
push
pop
ret
into
jmp
pop
mov
rorl
stos
inc
mov
pop
fldpi
ja
sbb
movsb
cld
mov
push
out
je
xor
pushf
mov
pop
or
movl
insb
jl
ret
int3
data16
cli
inc
cmp
sub
push
inc
add
jns
inc
mov
mov
cmp
ret
sub
and
inc
aas
icebp
add
addl
add
pop
mov
imul
push
std
out
enter
xor
cli
cmc
cmp
or
mov
aas
cmc
and
xchg
cld
mov
int
repnz
push
add
inc
fwait
xchg
fstl
and
jg
dec
leave
sub
cmpsb
loope
into
ljmp
sahf
test
jo
mov
dec
cmp
xor
or
insb
cmp
enter
gs
jmp
push
mov
aad
add
scas
iret
xchg
lret
push
mov
test
sub
cmc
mov
dec
stos
sub
shlb
push
lea
insl
aad
imull
loop
pushf
mov
in
jp
daa
xchg
jnp
fwait
xchg
test
mov
push
push
rcrb
mov
adc
and
dec
daa
fcoms
mov
mov
addr16
cmp
xchg
inc
push
cmp
jb
jno
call
and
cmp
mov
mov
jbe
and
push
or
stos
mov
mov
sbb
and
sbb
cltd
dec
stc
enter
pop
pop
clc
repnz
or
stos
mov
xchg
jno
cmpsb
rol
incb
fs
xor
scas
sarb
cmc
jmp
aam
xchg
mov
inc
adc
cltd
dec
mov
and
loop
je
jp
fstpt
cmp
cmp
cmp
push
and
cld
dec
movsb
mov
jo
inc
mov
add
dec
jbe
push
sub
test
mov
loope
fcomps
icebp
hlt
mov
leave
jmp
xchg
dec
cmpsb
gs
addr16
or
sub
lods
dec
movsb
dec
mov
mov
js
call
enter
mov
cmpsl
mov
out
cmp
je
daa
mov
lahf
cs
loop
cli
stc
mov
mov
push
cmpsb
ja
dec
sub
ret
xchg
jns
out
dec
call
int
inc
inc
rcrl
dec
jae
inc
cmpsb
or
cld
daa
dec
pushl
outsl
subb
cmpsb
xor
sub
out
jmp
jmp
add
addl
and
xchg
ja
mov
mov
cmpb
push
clc
push
or
mov
inc
xor
cltd
hlt
stc
or
in
push
xchg
out
mov
inc
ja
lahf
add
cld
cli
and
xchg
out
rdtsc
inc
push
xchg
mov
jae
mov
outsb
ret
push
mov
iret
gs
dec
clc
push
mov
sbb
cltd
sub
pop
cmpsb
scas
clc
sar
mov
dec
repnz
mov
mov
in
popa
je
inc
out
sti
or
fnstcw
notl
add
lods
adc
enter
lahf
out
addb
in
push
and
mov
push
mov
or
das
pop
push
sbb
push
jg
aam
jl
outsl
and
or
inc
inc
adc
cmpsb
mov
lods
xchg
cmp
pop
sbb
cmp
idivb
ljmp
je
add
and
adc
pop
sti
add
pop
jb
push
int
js
add
mov
aaa
push
mov
lcall
sub
std
aaa
fisubl
push
adc
test
mov
js
mov
jg
in
pop
fdiv
lock
jg
ret
jnp
xchg
or
ljmp
ljmp
shlb
rolb
xchg
seto
xchg
lds
sub
hlt
push
mov
push
out
rcll
leave
aad
ret
pop
data16
fisttpl
and
mov
or
push
dec
push
shlb
popa
mov
faddl
jp
mull
adc
iret
insb
leave
fidivrs
sub
and
fs
dec
push
lods
icebp
mov
outsb
outsl
jecxz
aam
jae
mov
mov
clc
adc
and
rorl
ffreep
sub
cmp
mov
shlb
jle
or
cmp
lret
call
dec
sub
mov
mov
adc
shl
xchg
pop
and
outsb
cmp
mov
int3
adc
inc
mov
or
popa
adc
stos
add
sub
repz
mov
xchg
inc
and
test
pop
mov
lods
mov
ret
lods
repnz
cld
call
inc
jl
xchg
clc
push
sub
lods
in
dec
lret
hlt
sub
fdivp
jo
mov
loop
or
jmp
mov
das
inc
lret
dec
pop
pop
add
std
imul
or
lock
push
mov
xchg
test
in
insl
xchg
xor
repnz
adc
ds
pop
stos
ret
rol
pop
dec
push
das
add
cmpsl
cmp
sub
je
sarl
xchg
mov
mov
out
dec
mov
cmp
mov
sub
in
adc
in
pop
clc
bound
shl
cli
jne
dec
xlat
aas
jle
sbb
sbb
call
ret
mov
daa
insl
push
fsub
pushl
jno
inc
xchg
xchg
xchg
out
mov
pop
sub
jne
mov
jne
mov
daa
or
sbb
gs
pop
dec
mov
paddusb
lock
dec
inc
mov
ljmp
aas
mov
inc
test
addr16
mov
jnp
adc
xor
cli
mov
xor
popf
add
stos
mov
dec
out
jge
scas
mov
addr16
or
mov
daa
stos
mov
sbb
adc
jecxz
mov
lret
out
test
icebp
es
push
adc
jp
dec
xor
or
push
roll
pop
and
add
xor
scas
into
daa
sub
icebp
mov
inc
arpl
int3
jbe
cmp
mov
add
rcr
movsl
add
or
cmpsb
jb
adc
push
adc
mov
out
lcall
in
xchg
xor
or
lcall
inc
sbb
sbb
fiadds
push
inc
aas
fnstenv
mov
xchg
jbe
movsb
movsb
je
add
test
clc
aam
sbb
sbb
lods
sahf
mov
dec
rorl
pop
pop
imull
lock
test
pop
lcall
push
std
fsubl
and
in
xchg
imul
add
imul
adc
in
cltd
bnd
insb
or
movsb
xacquire
aaa
aad
mov
lock
cmc
lcall
mov
addr16
xor
sub
mov
push
rcll
daa
jle
cmpl
arpl
aam
or
add
mov
jecxz
pop
pushf
or
iret
jp
pop
add
ret
inc
pusha
xchg
push
mov
mov
and
movsb
fstpl
jmp
xor
sbb
orl
lret
fcomp
lcall
loop
and
inc
jno
in
mov
mov
call
daa
std
sub
mov
sbb
rol
daa
movsb
add
jne
push
sbb
das
fldt
mov
into
rol
add
ret
test
xchg
xor
mov
cld
test
sbb
rcl
inc
incl
sbb
nop
call
xor
mov
call
xchg
icebp
adc
cmc
push
or
loop
imul
out
das
mov
sbb
xor
jg
or
insl
inc
test
pushf
mov
inc
sbb
mov
add
inc
dec
pusha
int
cmpsb
jb
push
pop
sti
and
in
jns
sub
lea
add
mov
cmpsb
test
stc
std
or
in
orl
addb
xchg
or
sub
xor
adc
mov
push
adc
push
js
adc
cld
test
lret
outsb
test
repnz
call
push
inc
and
push
mov
enter
jle
inc
sti
cmpsb
outsl
out
xchg
lods
mov
jns
das
dec
xchg
stos
ret
pop
sub
loop
jg
repnz
jns
jg
pop
gs
adc
aaa
pop
mov
imul
sar
data16
leave
dec
cmp
inc
jae
int
pop
and
mov
push
je
popa
pop
pop
in
mov
leave
sub
dec
pop
mov
cmp
dec
xor
gs
jo
cmp
leave
push
nop
xchg
pop
lret
lea
and
jo
cld
mov
pop
lcall
dec
mov
jl
mov
inc
dec
xchg
enter
xor
ss
cmp
pusha
xchg
stos
xchg
push
xor
lahf
inc
mov
lods
jne
aas
cld
mov
cmpsb
rorl
sbb
test
je
mov
test
add
out
push
fdivl
or
test
dec
cs
pop
fs
cmp
add
or
xchg
xchg
scas
inc
stos
in
mov
icebp
movsl
push
pusha
rcr
loopne
jne
jp
ret
cmc
jne
pop
mov
or
sar
pop
lds
dec
mov
lret
sub
mov
leave
and
xchg
pop
int
mov
lea
clc
xlat
jle
out
cmp
adc
enter
insl
cmpsb
jl
mov
add
jb
shrl
aad
add
xor
jno
fwait
jp
sbb
cs
addr16
lea
aaa
std
lret
lea
add
dec
xchg
sbb
cs
in
in
rorl
in
aad
jo
xor
es
xchg
fcompl
inc
push
xchg
and
push
sti
xchg
lods
repnz
lds
ret
cli
cli
roll
inc
inc
mov
sub
sub
outsb
adc
sbb
and
mov
dec
clc
cmc
mov
idivl
push
ds
jne
add
pop
cmp
and
push
sub
cmpsl
jns
and
fwait
xchg
stos
cmp
push
push
les
aaa
and
daa
dec
dec
rep
adc
xrelease
xor
in
outsb
or
clc
ja
sbb
das
add
leave
aad
and
scas
push
sbb
sub
and
jle,pn
icebp
rcll
scas
xor
dec
xchg
pop
mov
out
cmp
inc
push
mov
shl
in
xchg
lds
and
shlb
pop
jle
or
mov
mov
decb
xor
shll
dec
loope
mov
dec
push
std
cmc
mov
ds
dec
daa
mov
add
push
add
mov
mov
and
xor
mov
test
test
adc
mov
stc
xlat
push
jg
in
fs
stc
sbb
aaa
cmp
add
lods
pusha
cmp
rcl
push
ret
fimull
in
lea
xlat
or
mov
cmc
in
negl
fnsave
adc
or
fnstcw
lods
imul
mov
mov
mov
inc
cmp
or
mov
sub
mov
stos
loop
or
sbb
ja
mov
push
scas
cld
xchg
cltd
jge
fists
test
pop
jno
sub
nop
vpcmpeqb
xchg
mov
xor
aas
sbb
cld
xchg
shrb
or
ja
mov
scas
adc
mov
push
pop
lcall
dec
in
loope
int3
or
mov
outsl
das
adc
in
lahf
stos
inc
jae
shrb
ja
fcomps
xchg
cmp
lods
fnsave
mov
mov
stos
mov
adc
dec
mov
andb
mov
xor
mov
clc
or
testl
dec
and
es
lahf
ret
add
cmp
inc
out
sub
arpl
cmp
sbb
cmp
sbb
mov
je
mov
int
cmp
and
leave
add
mov
inc
stos
cmp
test
push
pop
push
popa
movsb
enter
nopl
aaa
mov
pusha
in
mov
rorl
mov
stc
cs
cmp
int3
or
shrb
push
push
ja
xor
lret
mov
jle
loopne
cld
or
inc
push
sub
fs
inc
xor
jecxz
ja
loop
mov
hlt
cwtl
xlat
mov
inc
cwtl
add
fdivrl
out
out
repnz
imulb
and
push
sarb
sarb
xor
xchg
mov
rcrb
jae
mov
fstpt
sbb
outsb
es
clc
into
push
out
dec
cmp
mov
arpl
dec
cmp
int3
sub
dec
adc
or
loope
or
std
add
aaa
inc
or
stos
xchg
sub
test
sahf
cmp
xor
jns
ret
fwait
jg
jb
and
int3
shll
mov
daa
test
mov
mov
ljmp
jb
inc
insl
pushf
mov
retw
add
lods
push
cmp
mov
ja
enter
jnp
imul
xor
mov
loope
rcl
or
shrb
or
fs
test
pop
mov
mov
sar
xor
jle
mov
sbb
inc
lahf
xchg
or
push
adc
repz
repz
shr
dec
aas
jnp
sub
xor
xor
add
stos
fsubl
add
ss
insl
loopne
push
xor
cmp
push
dec
mull
xor
xchg
and
and
hlt
bound
ret
popf
repz
fbstp
inc
mov
mov
xor
dec
sti
dec
inc
push
sbb
jp
mov
jmp
aad
push
call
inc
aad
shll
and
movsb
xchg
stc
stc
loopnew
cmp
mov
int
add
fistps
arpl
es
loopne
int
pop
xchg
jb
pop
cli
jge
pop
data16
push
mov
dec
mov
and
shlb
dec
push
loope
hlt
ss
cwtl
rorl
rorl
mov
cmp
test
push
push
inc
jg
test
daa
ljmp
cmp
jecxz
testl
daa
mov
lret
sub
pop
orl
xorl
call
pop
fs
cmpsb
jnp
in
dec
aas
fiaddl
out
cwtl
push
dec
xor
sub
test
sub
xor
xchg
dec
cmp
ljmp
popf
es
gs
test
into
mov
sub
rorb
pop
cmpsb
push
mov
pop
dec
enter
scas
adc
out
dec
into
xchg
mov
repnz
inc
popf
mov
jnp
in
cwtl
dec
xchg
add
mov
aas
shlb
rol
inc
cltd
mov
mov
xchg
in
test
test
insl
lret
xchg
adcb
xchg
jge
cmpb
jmp
aaa
or
outsl
lods
int3
sbb
imul
pop
cmp
outsb
aam
lahf
out
jecxz
scas
jnp
enter
pop
or
push
jno
test
pop
xchg
cmp
mov
negl
pop
mov
adc
fbstp
cltd
scas
push
and
adc
inc
adc
xor
pop
into
cs
pop
inc
lea
nop
fisttpl
movsb
sub
lea
and
pop
cmpsb
mov
in
mov
sbb
cltd
icebp
mov
ror
movsb
add
out
xor
adcl
imul
pop
lcall
push
add
fstl
fnsave
imul
adcl
pop
dec
lods
dec
adc
mov
xchg
add
addr16
xor
or
ret
in
sub
stc
jge
gs
roll
iret
scas
and
xchg
mov
arpl
lock
mov
pop
mov
iret
xor
push
mov
jmp
sub
xchg
or
sub
dec
mov
mov
xlat
and
js
mov
lds
shlb
mov
cmp
icebp
cmp
mov
dec
aad
sub
mov
mov
shrb
ja
repnz
xor
inc
test
lahf
dec
xor
js
scas
mov
sbb
xor
int3
in
add
mov
pop
jo
adc
adc
fisubrs
es
pop
sub
mov
and
push
sub
jno
stc
sbb
cmp
std
push
dec
cmp
pushf
sub
stos
hlt
ss
out
jne
ret
dec
es
inc
sub
mov
cmp
and
outsl
fmulp
fildl
repnz
cmp
and
or
mov
push
and
xchg
xchg
bound
pop
push
or
cmp
aas
mov
ror
loope
mov
fbstp
mov
mov
xchg
movsl
mov
add
cmp
or
sub
repz
ljmp
dec
xor
call
test
jmp
cmp
rcrb
out
xchg
sbb
lahf
out
sub
popa
gs
push
and
cltd
cmp
pop
arpl
xchg
pop
fstps
nop
inc
aaa
pop
inc
je
shrb
jae
mov
orl
dec
stc
ljmp
mov
lret
ret
lret
jle
leave
les
and
in
inc
mov
mov
push
add
adc
jns
pop
xchg
sarb
jbe
adcl
cld
ret
int3
adc
ret
cli
add
lcall
cmp
std
mov
aas
xchg
push
pop
jns
sbb
mov
sub
inc
jne
push
out
cmpsl
js
cmp
call
xchg
ret
mov
xor
in
mov
add
dec
dec
mov
addl
xchg
xor
cmp
jns
lods
xor
popf
les
add
or
pop
jb
outsb
adc
fmuls
mov
jp
shlb
and
mov
pop
cmp
mov
jecxz
stc
push
push
jecxz
adc
dec
lods
push
jl
cmc
dec
pop
jge
adc
cmpsb
and
add
imul
in
xchg
shrb
push
add
pop
fcmovne
pushl
xchg
js
xchg
dec
cmp
sbb
test
ds
repnz
mov
out
bound
push
push
jno
fdivrp
mov
xchg
loopne
les
fldenv
hlt
insb
inc
loope
nop
jge
nop
test
xchg
cmpsb
push
push
das
aaa
sub
add
mov
icebp
lods
aas
outsl
shrb
imul
cs
addb
fldcw
testb
jle
fildl
push
daa
push
mov
add
lahf
cmpsb
in
cmpb
sti
scas
and
xor
cmp
cwtl
push
cmp
pusha
inc
mov
stos
pop
loop
out
adc
mov
out
sbb
fwait
push
sub
inc
jns
out
iret
divl
add
jnp
dec
push
sarb
mov
xor
fbstp
mov
xor
sub
adc
dec
inc
cmp
fwait
scas
lods
loope
addb
ficoms
or
movsb
mov
aaa
cmp
ret
ss
lret
inc
loope
push
lock
into
daa
jo
cmc
lods
cmp
fs
cld
cltd
push
sub
call
mov
fisttps
lock
out
rorl
or
fisttps
ja
pop
push
pop
aaa
cmpsb
push
arpl
xchg
mov
jg
fistps
stos
inc
mov
mov
or
add
and
jnp
outsl
mov
mov
push
pop
cwtl
mov
ret
sub
pop
xchg
dec
inc
cmp
int
lret
mov
add
mov
mov
xchg
and
fwait
dec
in
hlt
or
and
mov
add
out
pop
popf
xor
sbb
js
mov
sbb
push
out
ss
daa
mov
popa
or
mov
insb
rol
xchg
cmp
pop
sub
xchg
ss
sbb
mov
aam
sub
mov
push
ljmp
addr16
pop
cmpsb
lret
aas
frstor
es
insw
jnp
sbb
in
std
loopne
sarl
mov
cmp
cmpsl
iret
jp
addr16
pop
mov
imul
add
mov
popa
jae
inc
push
sbb
lret
cmp
jns
fcomps
insl
jno
jne
xlat
ja
xchg
into
jmp
and
dec
xlat
or
in
cmp
repz
and
or
adc
loop
out
std
adc
adc
fdivrs
into
scas
movb
addl
nop
jo
hlt
inc
fwait
lahf
nop
push
data16
adc
or
gs
sub
push
xlat
test
jl
push
stos
jbe
int3
jns
add
ret
jp
fcom
mov
les
jno
cmp
sbb
faddl
pcmpeqw
jge
flds
sub
es
test
lea
mov
inc
lea
sbb
or
lods
ss
jl
std
cmp
dec
pop
test
icebp
jp
dec
push
xchg
std
sub
jp
mov
dec
ljmp
fs
adc
jp
mov
mov
nop
push
scas
int3
xchg
xchg
mov
loop
adc
inc
mov
xchg
mov
cmp
jecxz
jbe
inc
out
enter
outsl
sbb
cmp
mov
push
dec
jg
sbbl
stc
test
add
dec
shll
sbb
and
idivl
fimuls
lds
data16
jns
sub
add
lock
push
push
mov
mov
or
icebp
ret
mov
lahf
and
rol
mov
dec
cwtl
and
mov
rcrb
dec
stos
jae
lds
mov
mov
jle
push
mov
xchg
je
xor
insl
jb
loope
push
iret
loop
cmp
loopne
loop
sub
cmp
jl
or
xchg
mov
fsubp
sti
sub
sbb
stos
xor
bound
lds
sti
add
das
pop
xchg
mov
outsl
fldt
jle
mov
stos
xor
mov
sbb
bound
in
xlat
cmp
cmp
dec
cmpsb
xorb
inc
les
loope
inc
adc
cmc
mov
test
xchg
push
shlb
fcompl
pop
insl
dec
push
dec
cld
adc
push
sbb
test
pop
pop
jne
pop
add
pop
mov
sti
loope
add
mov
push
je
sub
lods
sahf
lea
bound
flds
inc
lods
mov
outsl
push
add
push
std
add
push
sub
push
xchg
xor
cwtl
cmp
push
push
mov
mov
xchg
loope
xor
std
jbe
mov
enter
xlat
loop
sbb
push
pop
shll
movsb
jmp
jge
pop
sub
sbb
repz
or
in
mov
pop
pop
xor
xchg
push
call
jge
in
and
loope
repz
sti
mov
mov
and
lods
loope
aam
fcompl
pop
adc
dec
jns
xor
popf
faddl
es
xchg
jbe
jmp
adc
adc
jae
aam
mov
out
scas
out
pop
imul
mov
pop
add
sbb
cmp
sub
idivl
xchg
notb
addr16
pop
ljmp
mov
ljmp
bound
dec
hlt
push
movsl
xor
repnz
hlt
jmp
mov
test
int
dec
add
aad
ret
xchg
stos
jp
scas
xor
movsb
imul
in
sbb
cmp
push
sbbl
or
cmp
sub
push
adc
mov
lcall
dec
data16
fisubl
cld
mov
shl
sub
adc
std
sbb
jo
xchg
or
and
cmp
test
cltd
mov
or
hlt
pop
iret
sbb
or
add
inc
iret
add
fs
cwtl
mov
lea
push
int
movsl
test
stos
cwtl
ljmp
push
outsl
xorl
sub
enter
pop
test
jmp
lds
and
adc
pop
cmp
push
out
loope
xor
push
popf
mov
nop
cmpl
fistpll
sarl
data16
adc
adc
addr16
jne
imul
mov
jle
push
sbb
xchg
xchg
rorl
cmp
mov
sahf
ljmp
decb
movsb
xor
cmp
in
jle
xchg
call
arpl
sub
sbb
or
roll
push
call
out
mov
pop
push
in
out
add
xchg
mov
sbb
stos
push
jge
movsl
sbb
es
xorb
cli
icebp
pop
repnz
out
push
push
xchg
jecxz
or
ljmp
out
xchg
hlt
mov
pop
loop
fldcw
mov
lea
sahf
in
push
push
negl
add
enter
and
cld
ficomps
xor
xchg
mov
and
cmpsb
in
add
mov
xor
out
push
push
or
aad
cwtl
shrl
xor
or
test
cltd
mov
gs
xchg
js
cli
add
cmp
lods
movsb
cmp
enter
stc
mov
pop
lret
out
push
jl
iret
mov
aam
inc
push
ss
jbe
jmp
shlb
mov
mov
mov
roll
cmp
fldenv
pop
push
rcll
dec
mov
div
pop
inc
mov
and
mov
mov
out
loopne
loop
es
push
stos
das
in
xchg
cmp
enter
mov
push
cmp
push
jp
pop
hlt
pop
add
adc
movl
ficoml
int3
daa
xchg
pop
push
mov
mov
neg
push
jg
sub
movsb
ljmp
movsl
loope
cmpsb
xor
cmpsl
mov
xchg
lea
cmc
outsl
cmovbe
adc
int3
jno
xchg
imul
pop
inc
xchg
mov
inc
repnz
ljmp
shr
sub
test
ljmp
aas
call
xchg
aas
int3
mov
aaa
pop
jae
or
outsb
lret
in
xchg
add
es
adc
cmp
xchg
lret
pop
push
xor
insl
mov
pop
xchg
mov
ss
push
into
add
push
push
cmpsb
and
dec
push
lahf
or
mov
imul
imul
sbb
scas
test
fisubs
pop
sub
xor
test
mov
jnp
push
sarl
es
or
mov
jne
cmc
jne
nop
gs
adc
inc
jmp
mov
push
rcl
hlt
int
addl
cmpsb
bound
lods
popf
ds
fnstcw
aad
js
and
mov
ficomps
stos
cmp
stos
inc
mov
add
lret
test
mov
xchg
outsl
fdivs
mov
inc
ret
pop
dec
int3
pop
or
jb
cltd
test
xchg
mov
or
adc
sub
in
inc
fnsave
cmp
push
push
lds
sarl
lret
test
shrl
xchg
push
in
fbstp
dec
aaa
pop
pop
cli
subb
jo
and
jno
scas
mov
mov
or
popa
clc
jno
pop
adc
or
rolb
leave
jb
xchg
ret
dec
imul
lea
cmpsb
or
jne
mov
arpl
dec
stc
loope
xor
cmp
pop
jle
xchg
jne
add
jmp
xchg
cmc
je
es
pop
aad
int3
jbe
sbbl
jle
inc
hlt
call
or
mov
xchg
mov
inc
outsb
xchg
inc
jg
lahf
sub
mov
test
xor
test
imul
mov
xor
add
mov
std
ljmp
pop
dec
es
add
inc
or
aas
rorb
pushf
int
leave
ds
insb
cmp
imul
mov
mov
xchg
leave
andl
cwtl
sub
sbbl
xchg
mov
adcb
xlat
ror
jmp
and
jg
int
cmpsl
outsb
adc
pop
repnz
adc
inc
scas
mov
pop
int3
enter
mov
mov
jo
nop
xchg
arpl
push
mov
push
sub
adc
lds
jg
push
test
sbb
scas
imul
loopne
call
and
inc
push
sbb
and
js
mov
nop
repnz
xchg
xorb
repz
loope
dec
jecxz
insb
fwait
inc
movsb
int3
pop
shll
test
je
int3
lds
push
xlat
or
push
adc
xor
cld
jnp
sbb
pop
repz
and
pop
cmp
jns
loop
mov
ja
lds
dec
lret
or
sbb
popl
mov
out
pop
jno
add
xchg
incl
xor
ds
lock
jge
nop
adc
sbb
sti
mov
rorl
pop
test
fwait
addr16
ret
push
mov
mov
paddb
shrb
imul
les
dec
add
push
imul
push
cld
xor
or
cwtl
jbe
adc
xchg
gs
loopne
mov
xchg
mov
mov
fs
test
pop
xchg
jne
add
outsb
cltd
jmp
dec
xchg
popf
je
imul
sbb
arpl
and
nop
mov
addr16
dec
xchg
pop
rcrb
gs
pop
add
adc
stos
cs
cld
pop
inc
popa
stos
push
cmp
js
in
rcr
sbb
cmp
aas
mov
loope
push
lret
jne
movsl
xor
mov
stc
pop
jl
jae
or
xchg
shrl
jp
aam
aad
aam
add
mov
adc
cmp
daa
dec
int
xchg
icebp
jb
or
push
test
nop
fisubs
mov
inc
pop
dec
jae
mov
sub
out
cs
jb
sub
into
mov
ja
sub
or
push
inc
out
les
inc
aam
xchg
xor
fnstenv
add
and
jge
mov
sbb
sbb
fwait
xor
push
mov
dec
xor
clc
or
cmp
mov
xor
cmp
adc
push
jb
push
jbe
pop
mov
mov
ftst
icebp
mov
cs
in
lret
mov
and
adc
popf
push
lret
jo
movsb
ljmp
leave
subl
jo
push
into
xchg
push
push
add
mov
std
xchg
daa
shll
xchg
add
call
aaa
int
fwait
cli
test
daa
in
addr16
pushf
mov
and
push
pop
sarb
jbe
inc
xchg
fwait
scas
outsb
fimull
mov
jb
mov
or
cmp
fiadds
or
sbb
daa
div
pop
cli
rcll
pop
movsl
push
test
insl
sub
fs
fsubr
or
inc
cmp
cmp
mov
jl
imul
aaa
scas
mov
pop
mov
incb
xchg
adc
pop
cmp
inc
pop
fidivs
jb
pop
inc
adc
out
push
sub
leave
sbb
jae
jmp
sahf
jns
ret
mov
popf
or
cwtl
mov
jne
jne
imul
sbb
cmp
inc
jbe
cs
jl
or
enter
jp
xor
out
mov
jmp
dec
std
movsl
xor
cmpsb
pop
ss
mov
adc
ds
enter
fcomps
mov
push
xor
push
sti
out
push
mov
outsb
lret
call
dec
mov
mov
out
dec
movsl
je
js
dec
sbb
in
in
mov
jnp
mov
or
push
cld
add
in
push
push
cmc
insl
lods
jbe
cmpb
jns
hlt
dec
rcl
push
mov
sbb
insb
imul
mov
fbld
sub
lahf
push
mov
outsl
imul
andb
movsl
loope
outsl
pushf
add
inc
push
mov
mov
leave
pusha
cmpsb
mov
lods
mov
mov
jg
fisubrl
mov
mov
loope
mov
movsl
jne
sti
out
push
in
icebp
aam
and
dec
lcall
sub
ss
ja
mov
sub
fwait
ret
cmpsl
fsub
cltd
adc
pop
cwtl
shl
popa
rol
jbe
repz
pop
add
cmp
add
push
mov
fdivl
sbb
clc
xchg
dec
addr16
repnz
mov
mov
rorb
or
and
sbb
dec
mov
movsb
daa
dec
fstpl
push
mov
movsb
fwait
sbb
shlb
jns
adcb
jnp
leave
jno
je
mov
imul
dec
push
shlb
popf
jns
mov
cwtl
cmc
inc
insl
shrl
jne
mov
clc
out
lcall
xchg
nop
add
and
jnp
xor
jle
ljmp
fwait
inc
push
fdivrl
jmp
or
push
push
mov
or
je
roll
aam
lods
daa
xor
iret
in
push
push
add
jae
js
inc
dec
dec
mov
mov
or
adc
hlt
insl
pushf
pusha
popa
arpl
xchg
leave
cs
insb
and
xor
adc
mov
lods
xchg
jo,pn
inc
dec
mov
mov
mov
xchg
jge
in
jg
push
les
jl
mov
fwait
lret
je
xor
clc
sti
mov
dec
in
mov
imul
cs
jmp
popf
es
xchg
test
push
stos
lret
xor
jb
pusha
bound
inc
inc
xor
dec
push
and
in
push
or
and
mov
nop
push
dec
lods
mov
fwait
add
or
mov
jp
sarl
adc
xchg
pop
add
stos
add
adc
jg
xor
notl
in
popf
adc
out
icebp
stos
call
stc
out
adc
sub
mov
mov
xchg
notb
and
pop
orl
pop
sub
inc
xor
cmpsb
pop
mov
inc
stos
cmc
mov
lock
adc
pusha
mov
pop
mov
adcb
adc
cmp
xchg
and
rol
leave
xchg
dec
inc
loop
popa
ljmp
push
and
dec
jb
dec
sarl
push
loopne
fisubs
add
je
mov
add
fldcw
dec
push
sub
jp
sbb
push
sarl
testl
aad
cli
stos
add
enter
dec
adc
jp
popf
jnp
rorl
sbb
in
arpl
jl
push
sbb
stos
mov
mov
mov
test
scas
lcall
imul
cli
pop
mov
jnp
mov
in
mov
jne
cmp
ficomps
loop
dec
ret
add
or
lahf
xor
sbb
insb
xlat
divl
jne
pop
inc
rcrb
les
repnz
call
addb
or
dec
sbb
test
mov
iret
inc
push
push
xchg
mov
push
imul
and
mov
push
ljmp
popf
insb
sysenter
je
rclb
jmp
cmpsb
out
subl
mov
jecxz
adc
jecxz
test
push
mov
inc
dec
fs
fsub
popf
add
mov
add
scas
lret
dec
xchg
cmp
sbb
les
jg
ja
xor
std
xchg
xor
mov
cmp
mov
aas
inc
outsl
or
int
pop
shll
stc
lods
adc
stos
pop
adc
xchg
enter
jb
and
jmp
mov
pop
pop
in
lock
rclb
addb
jmp
gs
lret
je
inc
iret
sbb
mov
pop
jmp
xor
ja
mov
std
inc
inc
dec
push
rclb
pop
scas
shr
arpl
negb
mov
jnp
mov
clc
scas
ret
xchg
and
mov
sub
inc
adc
push
mov
ret
pop
mov
or
pushf
mov
inc
sbb
int3
inc
xor
scas
jg
xor
mov
dec
pop
add
inc
ret
sahf
inc
dec
mul
addr16
cld
pop
stos
push
popa
ret
inc
cmc
loopne
imull
or
add
ret
mov
and
or
and
icebp
inc
jmp
sbb
sbb
mov
int3
negb
int
dec
je
mov
pop
imul
or
jl
push
jb
add
inc
jae
lret
mov
cmp
push
outsb
inc
popa
fisubl
mov
clc
sbb
inc
xchg
rcrb
cltd
ss
inc
push
cli
dec
out
testl
in
orl
pop
ficoms
dec
cs
les
xchg
aas
nop
mov
push
insl
test
push
mov
dec
jb
fucomi
pop
xchg
rclb
in
inc
mov
shl
cmp
add
mov
fidivl
adc
pop
call
sbb
sub
cmpb
jmp
aas
testb
aaa
xchg
add
cltd
iret
inc
out
add
ret
aam
js
sub
xchg
into
mov
lods
lahf
enter
xchg
fstps
sti
outsl
lods
mul
cmp
pushf
mov
pop
in
insb
xchg
imul
ljmp
pop
xor
popf
lods
or
stos
mov
adc
add
xor
dec
adc
xchg
jmp
add
pop
mov
cmc
pop
xor
loop
xchg
add
roll
loop
or
push
dec
or
je
push
fs
pop
es
lret
pop
pop
in
push
mov
mov
xlat
lahf
xor
pusha
ret
dec
add
cmpsb
fstl
in
push
mov
cmpl
inc
aaa
mov
add
pop
pop
clc
cmpl
fwait
jbe
mov
jge
roll
xchg
sar
int3
cmpl
jne
adc
repz
sub
cmp
int
sti
test
loope
dec
inc
lea
rclb
xor
lds
bound
dec
ret
and
mov
xor
sarl
jno
jne
xor
mov
enter
mov
daa
xor
iret
jae
fs
or
jg
pop
mov
ds
ret
jo
not
popa
leave
sbb
inc
inc
dec
push
test
pop
mov
jge
pop
cmp
cmc
jmp
mov
or
daa
cmpsl
sbb
mov
jg
hlt
in
adc
cld
hlt
popa
push
fstp
aas
sbb
lock
daa
inc
addl
mov
or
push
mov
test
inc
xlat
xor
arpl
movl
lret
xchg
fisubrs
pop
arpl
pop
stos
shll
inc
ret
pop
inc
sub
aaa
sbb
call
adc
cmp
and
loop
mov
push
xor
sub
push
lock
jmp
dec
sub
scas
jbe
add
xchg
mov
and
mov
xchg
xchg
mov
and
mov
adc
std
lea
shrl
sbb
andl
pop
lds
mov
push
cmp
add
cmpsl
out
int3
in
cmpsl
mov
aad
mov
or
jp
sti
xchg
out
loopne
sub
fcompl
outsl
cld
cld
jge
dec
mov
stos
jp
mov
int
sub
pushf
cli
dec
xchg
in
dec
sbb
inc
arpl
and
xchg
mov
xchg
fiadds
cwtl
and
dec
mov
push
jle
pop
jecxz
flds
pop
sbb
mov
xor
fistl
and
jmp
out
xor
cmpsl
xchg
in
faddp
cmp
mov
dec
imul
sbb
dec
mov
arpl
mov
shrb
push
push
subb
out
inc
mov
popa
mov
mov
pop
shlb
mov
mov
push
mov
cmpsl
jne
mov
xchg
and
cs
adc
enter
and
mov
cld
sbb
or
popl
xchg
sbb
adc
lcall
pop
or
jmp
movsl
push
adc
sbb
cmp
mov
push
lcall
jns
popf
jo
sub
pop
or
movsl
in
and
xchg
and
xchg
xchg
icebp
outsb
add
fadds
rorb
fmull
xchg
push
int
xchg
dec
icebp
scas
daa
xor
loopne
dec
push
shlb
popa
cltd
or
test
subb
fsubrs
adc
cmp
pop
cmp
bndstx
mull
negl
nop
call
arpl
inc
xchg
sti
or
mov
rorb
pop
test
mov
sub
aam
out
subb
mov
stc
js
mov
mov
xor
mov
out
test
outsb
insl
insl
jge
jnp
fwait
xor
jno
std
out
jmp
sub
sbb
sbbl
mov
xchg
cmp
push
fwait
rcll
adc
sbb
mov
imul
in
dec
sbb
jb
mov
fnstcw
test
loope
leave
pop
loopne
cmp
jecxz
cmpw
aam
icebp
ret
adc
loopne
shl
adc
inc
sub
mov
js
pushf
add
cs
mov
inc
mov
dec
xor
rcrb
xlat
dec
ljmp
add
mov
add
call
push
jmp
test
mov
shll
xor
push
cmp
xor
mov
xchg
popa
mov
and
xor
aam
into
cmp
cltd
sbb
fwait
pop
sub
lods
mov
push
lea
idivl
push
sahf
jns
out
vcvtpd2dqy
jns
lods
hlt
cs
nop
cltd
jae
ficoml
xor
aaa
mov
movsb
repz
dec
nop
movsl
jno
pop
test
scas
or
cwtd
jg
cmpsb
popf
mov
sub
cltd
and
cmp
jl
or
popf
fwait
les
out
mov
jecxz
push
jbe
cmp
and
mov
inc
inc
out
dec
rorl
mov
jne
mov
mov
fstpl
push
cmp
jno
dec
inc
pop
xor
or
pop
inc
pop
pop
sub
imul
cmp
test
daa
xlat
mov
js
adc
aaa
rcrb
out
decl
lret
jle
in
and
or
cmp
dec
imul
insl
cld
bound
iret
adc
cmp
outsl
inc
jl
dec
adc
mov
dec
xchg
add
ret
pop
and
xchg
out
mov
addb
lret
jb
push
jns
or
mov
pop
ds
pop
out
out
hlt
cmpl
jbe
xchg
fwait
repnz
cmp
xchg
cmp
add
cmc
xor
mov
popf
out
mov
cltd
xchg
call
cmpsb
clc
push
into
push
cmp
out
lds
in
gs
loopne
mov
adc
lcall
pusha
xchg
dec
xor
fwait
movsb
fldenv
push
fsubl
pop
mov
fsubs
xchg
popa
test
xacquire
lods
jge
inc
mov
insb
cld
or
mov
mov
enter
xchg
sbb
out
scas
popf
mov
or
addr16
mov
mov
add
cmp
mov
or
add
jnp
mov
fbstp
xor
push
jp
outsb
jmp
sub
dec
mov
and
lock
sbb
xchg
or
fidivrl
jne
cmp
sub
push
push
imul
xlat
sub
jmp
add
push
roll
sbb
orb
imul
cltd
jmp
push
stos
sbb
or
sti
xor
bound
inc
jl
pop
int3
mov
mov
je
in
ds
in
js
pop
pop
aas
andl
out
xor
sbb
jmp
pop
mov
add
out
cmpl
push
fdivr
jge
jnp
adc
or
xorb
lods
sub
aaa
xchg
stc
addr16
sbb
mov
jb
cli
xor
es
inc
push
push
mov
stc
loop
cwtl
aas
pop
mov
pop
ja
adc
push
mov
outsl
lahf
movsb
dec
dec
adc
fmull
and
mov
iret
push
shlb
movsl
stos
dec
dec
ret
jnp
jne
mov
pop
mov
sub
or
sub
fs
std
jl
shlb
push
ljmp
add
out
es
test
fwait
movsl
jmp
and
icebp
adc
inc
leave
mov
lahf
jno
push
mov
lods
popa
mov
icebp
push
dec
cmp
cmpl
scas
mov
call
pop
mov
or
pop
lret
sahf
int
push
rcr
sbb
jg
cmp
imul
sub
push
mov
and
pop
mov
movsl
adc
and
xor
ljmp
jo
add
test
pushf
jl
mov
jbe
mov
mov
jle
int3
sbb
xchg
jmp
test
imul
ror
gs
pop
pushf
jns
in
orl
loope
addl
inc
adc
xor
sahf
dec
inc
daa
stc
fmull
push
cltd
ret
jl
and
flds
sbb
push
in
fwait
insl
in
mov
sub
aad
jnp
fcmovne
inc
sbb
cmpsl
xchg
in
test
mov
mov
xchg
sub
xor
ds
inc
push
sub
cwtl
jp
fwait
lods
call
dec
or
push
pop
add
repnz
lahf
add
pop
fdivr
push
mov
add
xor
fmull
adc
inc
fiadds
xchg
push
adc
push
sahf
cmp
bound
mov
mov
repnz
test
test
ret
push
or
xchg
or
addr16
shr
mov
call
pop
scas
inc
clc
ljmp
jnp
sub
fmull
cmpsb
enter
repnz
repz
push
xchg
pop
pushf
cwtl
add
mov
xor
aaa
jno
cmp
mov
sar
das
push
xchg
aas
mov
mov
mov
cmp
fwait
push
sub
xor
imul
js
scas
fcmovnu
sub
loopne
mov
jb
nop
ja
sahf
jle
pusha
or
insl
adc
cli
lods
popa
mov
shll
sbb
js
scas
cmpsb
sbb
cmp
xor
int
push
jmp
lahf
imul
andl
sub
add
int3
mov
mov
push
cwtl
lcall
repnz
insl
cmc
cmp
ror
in
mov
cli
hlt
and
mov
nop
or
inc
inc
sbb
ret
shll
lea
aas
outsb
xchg
push
mov
clc
xchg
jmp
sub
dec
or
mov
ret
scas
lcall
mov
sbb
pop
inc
pop
and
pop
imul
in
enter
dec
call
enter
rcrl
push
cli
xor
or
push
in
or
push
inc
xchg
inc
mov
mov
push
inc
inc
lcall
rorb
addl
cmp
xor
shr
cmp
ret
movsb
push
std
dec
push
test
loope
mov
int
cwtl
outsl
sub
sub
push
cmpb
loop
jb,pt
jmp
add
push
inc
lret
pop
jl
movsb
arpl
pushf
push
pop
add
mov
cmp
mov
aaa
imul
mov
or
pop
adc
cmp
xchg
shlb
jge
nop
movsb
movsl
xor
xchg
pop
adc
cltd
dec
and
and
cwtl
dec
les
daa
pusha
push
in
lahf
mov
je
mov
lods
aaa
insl
cmpsb
push
lcall
push
bound
cltd
pop
shl
rcll
icebp
test
inc
mov
mov
andb
cmpsl
aam
push
sbbb
mov
in
and
jns
mov
xchg
mov
pop
or
jecxz
lods
mov
and
push
mov
in
sub
lods
xor
cmp
adc
ljmp
pop
mov
cmp
xchg
ja
js
adc
in
add
stc
xor
push
fwait
xchg
mov
or
push
sbb
lret
stos
bound
test
cld
sbb
repnz
push
out
stc
pop
shrl
jae
and
adc
js
or
jnp
popa
pop
xlat
lock
inc
mov
mov
mov
push
rcrb
les
jmp
lret
or
xor
or
faddl
xchg
jnp
push
sub
fwait
jne
cmp
lods
ss
sti
mov
add
rolb
mov
repz
addr16
cmpsl
jle
xchg
adc
out
inc
lods
inc
push
and
js
add
mov
xchg
mov
mov
ret
out
sub
mov
cmp
enter
sbb
ljmp
arpl
inc
mov
sub
loope
cmp
mov
aas
mov
shlb
aas
das
insl
jge
jnp
dec
fs
add
pop
or
cmp
das
hlt
mov
mov
adc
jp
sub
add
loop
xor
push
xchg
mov
out
shlb
imul
loope
sti
xchg
js
push
and
pop
fucomp
jl
mov
rol
std
mov
mov
add
jge
jo
sbb
mov
cmpsb
dec
lock
cmp
out
hlt
outsl
enter
cmpsl
and
int3
pop
inc
jb
mov
lock
lret
lret
mov
jp
movzwl
fnstcw
xchg
push
xchg
hlt
loope
push
pop
xchg
mov
cltd
inc
pop
xchg
sbb
cwtl
test
push
fs
mov
outsl
jge
jnp
je
push
icebp
negb
insl
aad
mov
cmpsl
pop
arpl
movsb
add
add
sub
pop
inc
lret
lahf
sbb
xchg
addr16
adc
fs
cmp
mov
cmpsb
fsts
mov
mov
popa
dec
add
rol
loop
dec
mov
cmc
and
insl
xor
rcl
pop
sub
fmull
fcomps
mov
sbb
sbb
roll
dec
ds
add
push
push
mov
adc
ret
scas
jg
add
rolb
jne
pop
in
out
mov
ja
stos
scas
shlb
pop
jecxz
pushf
mov
loop
movsl
pop
jg
xor
call
clc
fs
movsl
inc
add
dec
cmp
scas
sub
mov
mov
push
jmp
test
or
lcall
pop
add
mov
cmp
decl
jns
fnstsw
cmpsb
nop
fldcw
jecxz
jl
lcall
push
cmc
cltd
pop
jl
imulb
data16
into
jae
and
jne
imul
and
fsts
mov
cld
popf
stc
inc
pop
cld
push
xor
jns
dec
jo
sub
fucomi
lea
cmp
pop
jne
adc
inc
mov
pushl
lods
sbb
shrl
ljmp
push
mov
movb
out
movsl
inc
loope
jg
mov
and
mov
fiadds
mov
imul
sahf
lock
ret
add
incb
jl
sub
add
cmp
mov
es
mov
fs
mov
ret
pop
aam
imul
std
sbb
xor
enter
adc
negb
xchg
xor
sbbb
or
cs
xor
je
ljmp
es
imul
add
cmp
dec
add
mov
mov
imul
fisttps
push
pop
popf
mov
add
fs
cmpsl
popl
enter
insb
xchg
ja
cmp
pop
outsb
mov
scas
not
rclb
inc
cmc
sbb
iret
add
outsb
dec
push
mov
jns
leave
xor
les
mov
inc
mov
aam
mov
iret
stos
add
add
cmp
mov
jnp
mov
ds
xor
cmp
ret
les
inc
mov
dec
and
pop
addr16
les
and
loope
xchg
jge
lods
add
dec
inc
adc
cmp
stos
jno
in
loop
mov
nop
xor
xchg
pop
repnz
mov
dec
mov
inc
jmp
push
lods
dec
jge
xchg
out
inc
ljmp
push
mov
popl
push
xchg
xchg
mov
or
fisttpl
in
into
std
out
fisubrl
pop
test
int3
xor
out
dec
stos
mov
xor
movsl
les
and
xor
test
mov
pop
aaa
inc
pop
jbe
add
or
mov
fcompl
in
jle
jbe
ljmp
mov
push
rcrl
inc
negl
loop
cltd
cmp
lret
insl
mov
inc
fldl
pusha
test
das
lds
mov
stos
pop
cmp
sub
stos
cmp
loope
addr16
and
add
int
daa
out
pop
sti
adc
pop
ds
icebp
mov
stc
fdivrl
mov
sbb
pop
jae
push
bndldx
cmp
mov
fisttpll
mov
dec
repz
or
and
jbe
in
cltd
sub
cmc
sub
orl
fcoms
cmp
gs
mov
test
dec
adc
sub
fstps
sbb
outsl
popa
pop
aam
imul
add
xchg
adc
or
movb
icebp
mov
ret
jg
inc
jmp
lcall
imul
je
rcll
lds
fdivr
xor
cmp
lds
shrl
loop
push
stc
xor
inc
rol
nop
out
scas
repnz
push
xchg
jno
mov
xchg
ds
xchg
pushf
divb
mov
pop
sub
sbb
popl
sub
or
or
xchg
int3
int3
jbe
les
add
pop
int
lret
mov
leave
rcrl
lods
and
xor
ds
je
lds
or
test
pusha
pop
out
ja
adcb
ljmp
lea
hlt
cmp
aam
inc
cmc
sub
out
lods
lcall
jno
jbe
mov
mov
add
mov
jb
cli
int3
cmpsl
jae
pop
mov
in
adc
pop
mov
sti
add
add
cs
subl
aaa
xchg
xchg
and
adc
pop
jo
popa
inc
inc
sub
loop
cltd
cmp
cmp
or
jno
pop
cwtl
jmp
mov
mov
cmp
or
negb
jae
in
popa
out
push
cltd
lds
jno
jo
mov
xor
stos
test
mov
xchg
dec
pop
les
fwait
stc
mov
mov
into
adc
mov
fcom
inc
je
cmp
imul
jg
jmp
inc
pop
rcl
cli
mov
push
fmull
xlat
cmpsl
enter
lods
mov
jne
xor
sub
test
push
addr16
imul
dec
neg
cmpb
test
dec
dec
cmpsb
ds
jae
int
inc
lahf
adc
mov
inc
mov
ret
push
mov
ja
pop
cmp
inc
jmp
mov
loope
mov
xchg
lods
flds
inc
ret
push
int
in
pop
and
cmp
mov
jns
clc
and
mov
loop
int
lret
call
imul
adc
test
push
pop
ret
into
lret
mov
inc
sbb
mov
sbb
jbe
jg
sbb
xchg
pusha
ljmp
aaa
pop
jb
mov
insb
clc
push
or
cli
pop
mov
cmp
mov
or
aaa
push
push
scas
xlat
lret
mov
cs
fidivrl
push
dec
and
sarb
jne
shll
paddusb
xor
inc
inc
fidivl
sbb
aaa
and
dec
mov
or
std
test
inc
sbb
xor
sbb
ret
adc
clc
mov
cmp
lret
or
out
mov
ljmp
cmp
mov
cltd
sub
or
out
lret
sahf
mov
mov
jo
jge
je
flds
lea
inc
clc
mov
clc
mov
cmpsb
xchg
fdivs
incb
adc
sub
mov
mov
gs
imul
push
push
pop
mov
add
inc
fisubs
imul
sub
out
cs
insb
add
addl
subl
mov
movsb
jl
xchg
xlat
test
xchg
push
fnsave
dec
pop
repz
mov
std
popa
cmp
les
into
sub
ljmp
sbb
clc
cld
stos
outsb
fwait
and
add
mov
and
add
jns
cltd
popa
push
lds
mov
not
sahf
lcall
dec
adc
lea
test
cmpsb
inc
mov
lret
fisttpll
mov
push
jmp
mov
xchg
adc
mov
fldenv
mov
jne
lcall
adc
andl
cs
lret
test
out
faddp
insb
insb
jge
lea
or
push
repnz
xor
cld
lods
jge
into
in
repnz
fchs
icebp
jbe
aad
mov
fistps
dec
stc
or
inc
in
nop
xchg
idivl
jge
jb
dec
pop
loop
push
xchg
rcll
das
insb
scas
xchg
add
dec
in
dec
or
cmp
test
mov
cli
push
mov
cmpl
vrsqrtps
insb
jno
iret
mov
sub
push
pop
push
sti
addr16
or
cmpsb
xchg
scas
lret
stos
iret
test
lods
cmc
mov
jae
rdtsc
stc
push
in
pop
lds
lock
sahf
sarl
mov
shll
out
xor
out
xor
test
push
enter
outsb
sub
adc
dec
add
xor
imul
negb
inc
mov
sbb
rcr
jns
aaa
push
sub
dec
rcr
stos
aas
jp
inc
cmp
mov
lea
mov
jb
cld
cmp
hlt
in
xchg
add
cmpsl
aaa
into
or
push
ss
and
mov
pop
inc
ret
pop
cld
stc
mov
jnp
xor
icebp
or
cmovne
data16
cltd
or
xchg
enter
mov
sbb
or
imulb
imul
push
ret
mov
out
mov
int3
dec
out
xor
xchg
xor
adc
mov
cmp
jmp
mov
lods
jg
enter
shr
add
repnz
or
js
xor
jmp
cmp
pop
dec
jg
sub
dec
out
or
rcrl
ljmp
mov
jge
or
mov
push
jmp
addr16
in
pop
pop
fmull
sub
into
mov
imull
xchg
loopne
jae
out
pop
outsb
insl
push
leave
std
ss
imul
xchg
pop
arpl
icebp
scas
std
cmpsl
lods
jne
push
sbb
pop
xor
add
jb
xchg
icebp
gs
dec
sarb
dec
pop
jmp
je
xchg
ja,pn
leave
ret
arpl
mov
cmc
inc
xor
jge
sub
das
pop
bound
adcb
scas
mov
inc
cmp
out
mov
sbbb
pushf
or
lods
jno
cmp
pop
pop
loop
add
push
push
loope
pop
xor
repnz
cmpsb
xchg
inc
adc
inc
xor
iret
repz
adc
fisubs
int
push
mov
mov
les
push
pop
bnd
mov
mov
xor
mov
pop
clc
pop
rcll
aad
in
push
jb
fdivrl
mov
ret
jp
sti
mov
pop
stos
push
and
xor
sbb
cmc
fs
inc
jnp
xor
pop
xor
hlt
jg
stos
movsl
cli
sahf
xchg
decb
std
cmp
mov
dec
pop
loop
call
jae
xor
xor
gs
xchg
imul
into
in
lahf
mov
inc
or
jmp
push
xchg
into
aaa
cs
mov
jle
sbbb
sbb
into
push
pop
adc
hlt
push
out
pop
nop
push
testl
pusha
xchg
push
loopne
inc
jbe
sub
mov
test
sub
xchg
jge
fists
and
pop
or
inc
outsl
mov
push
scas
pop
shrb
popa
push
mov
popf
adc
push
add
cmp
das
fcmovnu
cmp
out
push
inc
mov
decb
adc
loope
adc
or
lods
leave
pop
jg
cld
pop
push
inc
sub
sub
insb
xor
pop
and
xchg
stos
sbb
sub
in
inc
inc
sub
adc
mov
pop
fucomp
inc
orb
les
mov
jo
enter
lahf
cwtl
push
push
jge
mov
aas
lock
scas
and
pop
aaa
jp
xchg
shlb
idivl
lret
or
jp
pushf
sub
mov
dec
cmpsl
adc
inc
adc
adc
push
or
inc
ja
mov
rorb
in
loopne
jecxz
cmp
xor
adc
mov
movups
and
addr16
dec
les
pop
cmovo
je
nop
mov
xchg
pop
test
cmp
fsubrs
or
jg
pop
and
and
stos
and
fs
jae
std
daa
mov
les
pop
stos
and
jns
pop
sbb
cmp
or
mov
adc
notb
cmpsl
clc
mov
dec
adc
mov
dec
cmp
mov
mov
popf
sbb
aam
popa
pop
mov
xchg
or
or
jne
outsl
lret
pop
loopne
mov
adc
in
js
cmp
or
add
test
mov
aam
cmp
loopne
scas
sub
aas
es
test
mov
fs
mov
jbe
sbb
jecxz
loopne
dec
mov
cmp
or
mov
sub
adcb
enter
fbld
inc
adc
daa
pushf
add
add
xlat
gs
xor
jmp
add
jp
mov
mov
pop
inc
mov
cmc
dec
idivb
inc
xor
pop
add
mov
icebp
stos
ror
push
jecxz
je
or
pop
repz
inc
pop
cltd
aam
dec
cmp
push
inc
and
xchg
push
test
cmp
adc
lods
dec
push
sbb
movsb
mov
add
hlt
or
lea
lret
frstor
and
imul
fs
pop
or
stos
adc
clc
adc
mov
fwait
sbb
scas
or
lods
repnz
test
lret
xchg
stos
rclb
sbb
lahf
outsb
mov
addr16
sti
add
inc
adc
jge
inc
mov
mov
push
out
es
sub
cli
stos
and
test
fmuls
xchg
aad
hlt
jbe
jge
lods
data16
mov
nop
xchg
out
scas
scas
inc
lahf
xor
or
jae
xchg
mov
adc
in
inc
and
nop
ljmp
faddl
mov
in
mov
adc
push
pop
jmp
cmp
pusha
into
sub
stc
popf
insl
xchg
cs
ret
xor
or
cmp
cmp
sbb
jmp
mov
or
not
orl
imul
push
mov
sarl
cmp
aaa
or
jo
lea
pop
jno
mov
mov
mov
ss
sub
std
movsl
loop
loopne
stc
int3
and
lds
cmpsl
nop
mov
out
sbb
in
sbb
inc
jns
mov
daa
aad
stos
popf
mov
ficoml
pop
xchg
aam
mov
in
mov
cli
xor
mov
jns
es
or
ja
shll
outsb
aaa
faddp
mov
cmovb
mov
mov
loope
xor
sub
into
loop
push
add
adc
sbb
inc
pop
lret
cmp
pop
aaa
ja
sbb
push
hlt
cmpsb
nop
jmp
stos
sbb
pop
or
cmpl
adcl
xor
mov
scas
daa
aas
jle
mov
or
hlt
lcall
lcall
xlat
cmp
dec
es
cs
fnstcw
push
sub
sahf
push
push
jge
mov
dec
stc
iret
lods
lods
inc
std
jle
jo
imul
pop
mov
or
decl
jmp
mov
lock
push
aad
mov
lods
sub
adc
lret
mov
ss
lock
pop
ret
jle
pop
push
sub
jbe
lock
mov
mov
dec
mov
pop
xor
pop
stc
cmp
add
insl
sahf
jmp
jl
fs
imulb
lea
push
scas
imulb
imul
jle
fabs
mov
cmpsl
addr16
inc
fldenv
cmp
sub
and
push
add
cmpsl
lods
lods
stos
std
inc
movsl
fsubr
and
push
add
movsb
xor
int
in
aad
or
sbb
clc
xchg
mov
adc
xchg
xor
in
daa
mov
inc
lcall
pop
test
inc
test
sbbl
fistps
dec
cwtl
adc
ja
xor
sarb
call
cmp
test
test
les
shll
jnp
popa
dec
in
sbb
ss
cmpsb
loop
add
or
andb
syscall
dec
call
in
xchg
xor
aad
clc
add
in
insb
xchg
jl
jne
daa
mov
xchg
inc
jb
lret
mov
sub
mov
in
out
inc
into
stos
out
call
push
xor
pop
out
jo
sbb
into
idivb
into
jp
cmc
rolb
adc
aad
clc
bound
scas
jmp
testl
sbb
push
enter
mov
add
xchg
sbb
jecxz
cmpsl
mov
int3
pop
ja
sbb
jno
mov
pop
mov
inc
cmpsl
stos
imul
dec
cld
push
fstl
fistps
int3
mov
in
das
pop
push
mov
and
dec
das
arpl
push
arpl
bound
ljmp
and
test
dec
ss
adc
push
sub
rorb
fldl
aam
dec
test
fsubrs
jnp
in
mov
popa
in
or
sub
stos
xchg
int3
sub
in
mov
rcll
jo
lock
lods
sub
test
mov
and
imul
loop
cmp
loopne
mov
and
popa
addr16
sub
popa
inc
cltd
sub
fnsave
sub
xchg
xor
les
push
mov
mov
ljmp
mov
xchg
rclb
adc
cmc
enter
or
testb
sub
push
inc
subl
stos
jecxz
xchg
jns
pop
xchg
cld
mov
or
loope
sub
pop
rep
dec
adc
cmp
mov
pop
das
xlat
test
xor
xorb
popa
in
sub
rcll
pop
popa
jecxz
and
push
sub
fwait
add
dec
xchg
xchg
inc
sti
daa
push
fwait
push
sbb
imul
sbb
pop
iret
repnz
jg
cmp
add
insl
pop
xor
cmc
rol
adc
call
ss
xchg
aas
shll
mov
xchg
clc
outsl
hlt
outsl
push
pop
pop
adcl
dec
cmp
pop
mov
xchg
repz
mov
xchg
orb
ds
shll
adc
sbb
das
movsb
fidivrl
cmpsb
pop
addr16
or
mov
stos
mov
push
adc
and
testl
jecxz
out
push
adcb
sub
shr
push
mov
or
outsb
jg
and
testl
leave
jno
mov
or
sub
bnd
cmpl
bound
cs
imull
int
lods
xchg
fs
int3
test
pop
jbe
pusha
mov
testl
add
movsb
fisttps
xchg
stc
cmp
mov
xchg
push
and
dec
mov
cmp
adc
out
sub
movb
lcall
mov
xor
sub
push
out
pop
or
ficoml
fldl
js
adc
sub
ja
loopne
ds
mov
lds
sbb
push
fldl
andb
and
xor
mov
popa
mov
nop
std
movsl
mov
movsb
pop
inc
repnz
jbe
ja
addl
xor
cmpsl
pop
add
adc
and
xchg
repnz
mov
or
mov
js
add
sbb
movsl
lods
mov
or
lods
jb
out
dec
dec
jle
dec
insl
dec
bound
repnz
xchg
outsb
push
add
adc
imul
stc
stc
in
xchg
dec
lahf
mov
fdivl
outsl
sub
adc
paddb
pushf
sub
push
fs
addr16
fucomp
mov
fmull
inc
jns
sbb
push
cmpsl
pop
or
jb
mov
and
mov
fistps
push
dec
jno
cmp
push
and
test
ret
xor
add
loope
ret
test
ja
pop
inc
pop
inc
xlat
insb
pop
sbb
nop
push
add
sbb
and
cmc
xor
jmp
mov
push
outsl
adc
in
pop
popf
cmp
push
lea
mov
test
lds
call
adc
movsb
ss
arpl
push
mov
cmp
outsl
jns
adc
dec
add
mov
shrb
cltd
or
mov
or
pop
outsb
jmp
mov
push
pop
lods
in
inc
push
ret
add
adc
xchg
lods
cmc
je
jae
xchg
dec
push
or
inc
xor
adc
pop
jbe
sbb
lahf
adc
add
stos
jns
rclb
mov
jmp
push
mov
ret
dec
pusha
xchg
add
iret
in
mov
sahf
ret
mov
fisubrl
jp
jno
adc
negl
mov
jmp
xor
inc
ret
std
jl
loopne
add
dec
adc
pop
fwait
dec
lret
mov
sbb
insl
xchg
gs
out
or
dec
cs
add
add
sbb
jle
enter
aas
movsw
iret
lods
or
jae
pop
in
inc
mov
lods
stc
cmp
sti
pmullw
subl
mov
sbb
dec
inc
jmp
pop
inc
xor
imulb
sbb
xor
and
popf
lods
cmp
jo
pushl
daa
iret
adc
in
ds
and
std
cmp
add
lret
lds
push
js
repz
pushf
std
jb
mov
jp
lock
push
mov
dec
and
outsb
fcompl
mov
sahf
iret
orb
sbb
leave
push
in
cld
mov
adc
mov
cmc
dec
cmpsl
xor
jmp
daa
fs
sarl
testl
loopne
push
dec
dec
and
int
scas
sub
push
loope
or
mov
push
addr16
push
pusha
or
sbb
inc
and
or
inc
test
dec
sbb
imul
aad
xchg
cmc
mov
adcb
cmp
push
xchg
or
outsb
push
xor
lea
jo
mov
xor
fcmove
jne
push
xor
sub
inc
jno
mov
lock
fmull
outsb
xchg
push
imul
insb
xchg
js
xor
jge
sbb
inc
push
xor
push
pop
pop
mov
sbb
adc
out
add
fdivr
aas
push
cmp
mov
pop
mov
out
call
adc
das
test
fcompl
dec
test
aam
sub
dec
add
xchg
mov
cwtl
ss
std
dec
inc
jae
lea
mov
xor
or
aas
pop
lods
out
xchg
sbb
add
dec
std
pop
fcomps
mov
mov
and
movsl
xchg
inc
jp
fwait
data16
mov
les
jno
into
out
inc
push
leave
and
mov
sahf
cltd
movsb
push
pop
repz
rcll
and
mov
inc
pop
add
in
adc
lea
mov
inc
inc
xor
or
adc
sub
pop
jmp
push
sub
jge
test
lds
mov
data16
lahf
xor
cs
xchg
and
adc
mov
imul
lods
jb
lds
stc
sub
mov
and
nop
push
dec
inc
xchg
xor
imul
loopne
sbb
lods
fidivrl
insb
pop
adcb
dec
outsb
xor
cs
dec
je
repz
mov
pop
test
inc
or
sbb
lods
loop
sar
dec
adc
lds
inc
scas
and
xor
inc
jl
inc
test
rol
pop
je
adc
jnp
jg
lock
cmpsb
data16
push
and
inc
scas
jnp
cmc
ret
arpl
push
pop
fidivrs
out
jmp
or
repnz
jae
sbb
add
cltd
or
mov
mov
sub
clc
shrl
fsubrl
aaa
hlt
je
jae
ret
rcl
scas
jge
lock
jp
loopne
mov
fdiv
and
xor
add
sbb
fs
out
mov
lods
jno
inc
cmp
popf
stos
aam
push
jno
sbb
jp
jnp
pop
add
gs
iret
lods
out
rolb
int
icebp
pop
adcb
mov
mov
push
movsb
adc
dec
push
mov
inc
and
jmp
sub
daa
fnstenv
int
inc
inc
sahf
jnp
add
inc
add
out
and
clc
or
adc
movl
and
lods
fisttpl
mov
cli
aam
dec
sbb
test
fcmovb
adc
mov
and
hlt
rorl
adc
mov
sbb
or
add
cld
push
jl
rol
mov
push
xchg
cmp
cwtl
mov
xchg
mov
int3
cmp
add
sti
out
mov
push
shll
add
out
xchg
mov
xchg
mov
stc
xchg
fidivrl
cmp
outsb
inc
adc
gs
rcll
sub
or
mov
shll
mov
sub
add
and
or
sub
cmpsb
jl
sti
leave
mov
pop
hlt
cld
xchg
stos
adc
or
aad
xlat
push
fwait
repz
sub
sub
cmp
popf
push
js
sub
cmpsl
insl
and
iret
xchg
xchg
les
inc
cmpsl
cmp
rclb
testl
orl
mov
sbbl
xor
cmp
adc
in
mov
cltd
sbb
xor
stos
ret
add
jmp
sbb
sbb
aad
mov
mov
rcrl
loope
xchg
pop
cmp
int
dec
jl
xchg
and
shll
xor
mov
ljmp
pop
jp
and
cmpl
sti
cmpsb
dec
shll
test
jns
and
out
dec
xor
sbb
xor
rclb
pop
xor
jbe
mov
push
sbb
scas
or
xor
push
add
out
or
push
jmp
dec
jmp
sub
fdivl
out
jp
js
sbb
je
or
out
mov
push
sbb
fimull
inc
insb
inc
inc
or
mov
sub
fisttpl
fdivr
dec
fs
push
jl
pop
add
test
loop
shll
dec
sub
pop
pop
ret
idiv
loope
dec
fbld
jo
and
movsb
xlat
nop
movsb
mov
or
xor
push
leave
cwtl
jno
in
jno
or
cwtl
addr16
iret
jge
add
adcb
out
stos
add
adc
loopne
adc
sbb
popf
popf
xchg
jae
cli
mov
push
arpl
or
push
clc
test
mov
call
add
add
mov
icebp
int3
rcll
push
pop
sbb
xchg
adc
jmp
outsb
inc
xor
rclb
sbb
nop
add
jnp
jge
jbe
and
out
ficomps
in
sub
fisttps
loope
stos
int
or
mov
mov
inc
lret
dec
leave
mov
jno
adc
and
addr16
xor
imul
jae
lock
pusha
movsb
add
push
cmpsl
aad
shrb
push
sub
mov
test
aaa
fmull
mov
scas
test
jno
sub
pop
popf
xor
shlb
cmpsl
aaa
jo
push
pop
mov
scas
add
in
sbb
mov
mov
dec
sub
and
mov
jg
mov
imul
and
testl
jbe
mov
push
push
fs
aas
push
cmpsl
lds
mov
aas
pop
jle
mov
in
adc
popf
jecxz
in
push
bound
cld
dec
dec
add
ret
xchg
jnp
mov
or
sbb
incl
andl
fimuls
fistps
and
stc
and
pop
and
test
add
cli
dec
stos
lret
iret
addl
push
xor
aad
inc
add
fsubl
pop
mov
jle
or
mov
sahf
pop
cli
cwtl
pop
cltd
movsb
mov
or
cmc
ret
sbb
dec
xchg
bound
loop
inc
push
lcall
fbld
sub
adc
mov
int
inc
movsb
negl
jl
mov
and
in
ficoms
mov
sbb
mov
hlt
jle
mov
ret
xchg
mov
std
mov
add
cmp
lcall
ss
aad
mov
push
sub
pop
sbb
mov
jno
push
cs
cld
and
cltd
bound
mov
rcrl
fistps
mov
fbstp
lret
mov
fidivrs
out
push
lock
pop
popa
push
adc
push
and
in
cmpsb
inc
test
xor
dec
xor
cmpsl
das
sbbb
cmp
jae
mov
nop
cmpxchg
adcb
inc
mov
inc
popa
test
outsb
fwait
out
sub
mov
sbb
ljmp
sub
shrl
mov
jae
cmp
pop
fsubrs
ficoms
loopne
push
xor
clc
mov
jae
inc
shl
dec
cli
xchg
xchg
mov
mov
mov
mov
cmpb
mov
pusha
jb
cwtl
lea
imul
and
fstpt
cmpsl
mov
push
cmp
int
cmpsl
and
or
adc
and
sbbl
xor
fnstcw
cmp
cmpb
push
in
lods
ret
lcall
mov
jne
mov
pusha
and
cld
fistpll
fidivl
pop
popa
jl
pop
cmp
nop
dec
out
fwait
sub
sbb
push
loopne
sub
mov
mov
sbb
ja
add
cmp
xchg
mov
mov
fcmovnb
scas
cmpsb
cmpl
dec
sbb
fs
lcall
pop
mov
je
aam
jl
outsb
dec
dec
cmp
xor
imul
inc
adc
lock
call
mov
push
outsl
fmull
adc
jnp
das
pop
insl
jge
add
lea
jae
mov
xchg
rcrl
add
inc
sbb
popa
cltd
push
insb
adc
add
jge
hlt
jb
imul
popf
push
xor
fdivrl
mov
inc
push
test
mov
lods
xlat
lret
sbb
mov
aad
pop
int3
fildll
mov
adc
es
pop
subb
mov
or
test
aam
jge
and
out
dec
test
bound
sub
sub
ja
or
es
adc
pushf
jns
xchg
daa
add
sub
mov
cmp
fcomps
insl
add
mov
mov
subl
jbe
mov
xchg
inc
push
cli
adc
adc
test
mov
dec
add
jl
fadd
cmp
nop
push
mov
and
xlat
sub
sub
test
imul
pop
pop
xor
mov
lods
add
js
adc
xor
pop
clc
in
xor
xchg
mov
xlat
cs
icebp
dec
pop
aam
jp
inc
jg
outsb
sub
and
dec
test
pop
mov
rorl
pop
aaa
adc
dec
stos
cmp
ja
mov
outsl
in
push
iret
scas
inc
cmpsb
lds
in
stc
mov
fsubs
jge
lahf
add
cltd
mov
idivl
push
adc
test
jge
mov
rcll
jmp
xchg
mov
sbb
mov
mov
mov
adc
mov
cmp
bound
mov
fucom
inc
cmp
es
xchg
dec
lods
sbb
add
pop
adc
dec
sbb
pop
std
cmp
sub
pop
cmp
stos
testl
sub
dec
inc
shl
dec
mov
jb
bndldx
pop
sti
jo
sub
ficomps
jno
mov
fnstcw
sub
mov
mov
mov
out
mov
loopne
lea
sbb
addl
rcll
fistpl
jle
ja
push
into
sub
lcall
and
mov
xor
mov
cmp
pop
mov
and
sub
push
int3
fs
cmp
popf
jbe
sub
and
push
jl
aam
nop
mov
xchg
fldenv
jb
pusha
jp
leave
outsl
add
sub
mov
push
enter
cmpsb
sbb
fsubl
mov
nop
sbb
mov
mov
dec
sbb
cltd
pop
int
push
xor
mov
pusha
popf
inc
and
addb
jle
mov
push
ficoml
xorb
mov
push
jne
ftst
mov
imul
ret
shlb
mov
fdivrl
or
test
cmc
sti
sbb
push
xchg
mov
mov
xchg
xor
push
mov
mov
xor
pushf
mov
xlat
mov
rorb
stos
mov
cmpsb
and
ror
push
movsl
cwtl
pop
fsubrs
inc
pop
xlat
jg
imul
fiadds
outsb
orl
sub
xchg
cmp
sbb
push
jns
mov
insb
pop
filds
je
stos
cmp
xlat
jns
aas
loope
jge
mov
mov
pop
sub
cmpsb
jl
ret
mov
aam
or
push
leave
imul
mov
arpl
lds
pop
push
ljmp
xchg
hlt
jno
push
adc
daa
xorl
lret
cwtl
enter
push
mov
lahf
adc
jb
arpl
stos
int
aam
arpl
cltd
adc
lahf
fsts
insb
mov
aas
std
or
rol
or
and
jecxz
cmp
insb
shlb
popf
loope
test
dec
orl
nop
out
push
and
stos
call
mov
and
add
jp
dec
adc
es
sbb
lret
fmuls
dec
js
xor
adc
jbe
scas
xchg
ss
xor
test
data16
outsl
xchg
in
fnstenv
scas
adc
adc
inc
addl
stos
lcall
xchg
rorl
cmp
icebp
ja
cmp
pop
cmp
mov
sub
mov
popf
push
jl
add
icebp
lods
lock
scas
stc
ds
test
mov
add
jbe
push
lcall
out
add
lret
stos
xor
xor
and
imulb
nop
nop
in
in
aad
fmull
mov
adc
fsubs
rorl
xor
scas
adc
ret
das
push
inc
sub
in
cld
inc
orb
test
callw
decl
dec
iret
xchg
xchg
pop
shrl
insl
fistl
sub
jp
pop
aas
cmp
add
pop
scas
in
xchg
insl
leave
inc
lret
adc
cwtl
xor
or
rcll
repnz
pop
lret
push
xor
mov
fcmovnu
adc
jbe
ret
ljmp
fbld
sbb
mov
or
add
jmp
xor
notb
sbb
jae
loopne
xor
xor
shl
mov
jecxz
shl
lods
jb
movsb
xchg
jne
addr16
cwtl
rorl
sub
push
jmp
jp
sbb
fxam
movsl
add
das
push
push
xlat
movsb
adc
sbb
cmp
push
mov
or
pop
jb
movsl
ret
scas
jno
xchg
fs
cmpsl
in
push
fstpt
ret
mov
outsb
sub
js
push
rorl
and
cmp
dec
shl
jo
fldl
hlt
mov
inc
cmpsl
sbb
inc
jge
xor
fistps
xorb
sub
cmp
pop
mov
add
push
mov
pop
scas
aaa
inc
int
xlat
sub
push
and
fstps
roll
pusha
es
leave
add
cmc
dec
fbstp
fwait
jmp
les
xchg
or
xor
jbe
lods
imul
movsl
dec
jl
aas
and
sti
fs
xor
add
hlt
in
push
sbb
out
and
mov
adc
stos
jmp
fldl2e
sbb
int3
push
dec
popf
test
ret
cmp
xchg
jecxz
inc
cmp
cltd
mov
xor
out
lcall
notb
mov
xor
mov
mov
xchg
add
test
psubw
mov
push
cmpsb
dec
jno
nop
xlat
mov
int
xchg
inc
sub
mov
add
cmp
data16
out
repz
xor
mov
pop
pop
fwait
sub
out
fs
mov
or
test
add
or
and
mov
ret
insl
fldt
mov
jae
rcl
mov
call
and
imul
ds
lock
scas
pop
push
into
je
sbb
mov
mov
test
pop
gs
add
xor
or
push
jp
idivl
adc
gs
cmpl
cld
test
xchg
mov
test
cli
mov
in
je
aad
loop
push
jnp
inc
or
idiv
dec
jae
mov
mov
xor
daa
test
sbb
insl
das
dec
fnstcw
mov
add
mov
popa
outsl
mov
cltd
pop
gs
rcrb
pop
mov
daa
or
sub
scas
loopne
das
xor
roll
sub
es
push
mov
sub
lcall
daa
add
fwait
insb
shlb
push
sub
lods
lock
imul
xor
fwait
cmp
push
jns
jmp
adc
lret
out
jecxz
ret
shl
into
xchg
xor
sub
or
neg
faddp
xor
inc
insb
sub
and
add
cmp
and
cmp
cmp
sub
dec
xor
xor
iret
out
loope
lcall
testb
stos
cmp
into
jbe
imull
notb
int3
pop
loop
int3
arpl
dec
stos
fdivs
outsb
rorb
add
daa
ret
pop
mov
outsl
mov
mov
cltd
pop
inc
ja
fwait
push
iret
jl
sbbb
mov
inc
pop
mov
mov
aad
ffreep
xchg
cmp
ljmp
popf
jle
mov
or
add
push
push
gs
dec
clc
pop
faddp
js
xor
lea
insb
adc
add
add
lea
aam
in
ja
jne
jo
rolb
inc
mov
outsb
int3
int3
pop
jns
adc
inc
push
push
xor
lea
out
loope
or
repnz
jae
mov
ds
out
mov
sbb
rorb
leave
or
in
lea
jge
mov
xchg
jne
mov
in
movsb
scas
arpl
sbb
pop
jg
xor
mov
sarl
out
xor
loope
and
xchg
push
mov
fldcw
adc
jp
inc
ret
or
mov
xchg
frstor
mov
dec
aaa
sub
jp
mov
out
sbb
int3
inc
pop
gs
sub
ds
push
push
mov
adc
fidivrl
add
or
ds
and
imul
dec
or
mov
sahf
out
fldt
push
cwtl
sub
mov
lods
loop
cwtl
adc
sbb
fidivs
mov
push
mov
xchg
daa
std
cmp
xchg
push
sti
sub
jmp
mov
jo
inc
shll
inc
mov
bound
adc
leave
sti
aad
cmpsb
adcl
jnp
mov
inc
jo
les
dec
lods
fwait
movsb
aaa
out
cmp
sbb
push
insl
je
popa
push
enter
pop
mov
xchg
testl
mov
lcall
mov
clc
ljmp
jns
imul
or
sti
cmp
inc
movsb
ds
pop
cmp
mov
sti
cmp
adc
adc
lds
mov
nop
jae
ja
ja
in
ret
iret
xchg
sub
jl
xor
stos
or
lret
xchg
inc
cmp
cmpsl
sub
pop
stos
out
xor
sbb
jmp
mov
test
and
hlt
out
and
xchg
addr16
push
stos
popa
lahf
test
lea
fldt
pop
sbbl
std
lea
sti
push
mov
mov
inc
fdiv
imul
jecxz
aam
sub
pop
cmp
xor
fdivs
sub
outsb
mov
sub
push
repnz
popf
or
or
push
test
sub
xchg
xchg
addr16
xor
mov
loope
xor
jge
jmp
xchg
sbb
fimuls
push
dec
std
xor
jne
and
icebp
push
pop
rorb
pmaxub
repnz
stc
mov
in
sbb
sub
xchg
lahf
cs
cwtl
inc
lret
xor
and
scas
push
sbb
jg
mov
or
push
sub
jae
stos
movsl
in
aad
jmp
sub
test
mov
pop
lea
popf
rclb
inc
jg
xor
popf
mov
popf
lods
inc
cmp
addb
iret
not
es
fldl
repz
mov
dec
fisttpll
push
mov
mov
movsb
jno
mull
jb
dec
sbbb
cmp
pop
lahf
shll
sbb
ja
lods
sbb
push
cmc
shrb
lea
in
out
loop
inc
in
sub
ljmp
jo
jmp
inc
sahf
clc
out
test
add
mov
pop
sbb
imul
sub
sub
rcr
cli
movsb
mov
push
xchg
sbb
std
and
pop
ja
aaa
jne
ds
ja
repz
pop
test
mov
inc
or
inc
stc
pop
popf
shlb
pop
imul
jg
lea
adc
es
popf
mov
cmp
xchg
or
xor
jne
mov
popf
jne
jns
xchg
out
and
inc
imull
or
dec
mov
icebp
sub
or
fidivrs
movsl
mov
das
push
fnstsw
adc
inc
iret
jne
jge
sbb
sbb
sub
and
xchg
dec
sbb
inc
cmpl
sub
ja
int
xor
inc
pop
sub
mov
test
test
sbb
mov
testb
mov
pop
jl
or
cmp
push
lds
into
sub
dec
and
mov
push
jns
adc
cs
xorl
adc
dec
and
xlat
mov
fnsave
adc
out
cli
dec
jb
mov
sbb
inc
cwtl
aaa
lahf
sbb
out
arpl
icebp
or
push
jnp
jg
push
out
pop
data16
imul
and
sbb
imul
jle
adc
divl
cmp
je
jno
cmpsb
push
and
fimull
push
lods
divl
js,pn
or
aas
sub
stos
jg
test
sub
imul
incb
adc
pusha
dec
fildl
cltd
jmp
lods
jmp
imul
aaa
push
fs
stos
and
jae
xor
fucom
ja
mov
rolb
ljmp
icebp
imul
lret
sbb
adc
dec
cmp
sti
jmp
dec
mov
testb
inc
jo
cmp
les
xchg
or
xchg
cmp
lds
aas
inc
cwtl
movsb
stos
inc
movsl
test
add
jl
out
xor
jo
stc
lea
inc
cmpb
push
cmovo
adc
shlb
into
in
pop
test
sbb
add
or
jbe
adc
cmpsl
adc
jecxz
lock
pop
adc
insb
shl
mov
xor
sbb
pop
loope
dec
push
cwtl
dec
xchg
inc
outsb
bound
sbb
and
adc
das
pop
mov
aaa
sub
xor
mov
in
cmpsb
in
sti
jno
sbb
ret
pusha
mov
ficomps
sti
hlt
movsb
out
mov
inc
lret
push
cli
stc
mov
push
and
popf
xor
mov
mov
dec
das
aad
lret
dec
dec
sub
aas
cs
or
xchg
mov
or
jl
and
popf
add
in
inc
shl
cld
push
ss
adc
popf
ret
mov
mov
lahf
mov
mov
xlat
sti
mov
cltd
out
pusha
sahf
aam
je
push
addr16
and
lods
outsb
mov
call
fstp
daa
dec
rorb
xor
xor
push
and
and
icebp
xor
sbb
sti
jle
sub
fisttps
sub
pop
stos
dec
aaa
inc
lock
pop
sub
mov
test
and
incb
test
fdivrl
addr16
outsl
into
test
imul
jbe
mov
sbb
int3
dec
shlb
mov
cmc
iret
in
jge
loope
sbb
cld
cld
or
xchg
adc
mov
or
scas
repz
and
popa
push
rorb
jle
add
pop
adc
dec
pop
push
fnstsw
dec
inc
dec
in
jl
sahf
cwtl
push
mov
fld
aaa
sub
xchg
stc
mov
fdivp
mov
add
popa
cs
cltd
push
es
fidivl
add
adc
je
jmp
mov
adc
dec
in
das
cmpl
nop
pop
out
xor
lock
mov
and
pushl
pop
xchg
jo
das
lock
sub
mov
sbb
pop
stc
pop
and
dec
sbb
negl
sarl
out
fcoms
jno
mov
mov
or
inc
sub
push
int3
aam
dec
pop
inc
fmul
xchg
mov
pop
ds
push
pop
push
push
dec
mov
fcomi
arpl
jb
loop
xchg
pushf
push
aas
out
call
add
lds
loope
jae
sahf
pusha
out
aaa
add
jbe
xor
sbb
inc
pusha
jmp
test
push
adc
ljmp
test
dec
leave
arpl
inc
pusha
jne
xchg
jg
or
cmp
xlat
xor
mov
cld
xchg
fdiv
mov
loopne
movsb
inc
fists
or
xchg
push
xchg
or
cmp
aad
ret
or
xor
push
mov
outsl
outsb
lds
xchg
sbb
cmp
xchg
and
sbb
cmp
dec
fwait
mov
sbb
adc
push
sbb
test
addr16
jp
enter
pop
loop
mov
fdivl
xchg
adc
cmp
adc
leave
iret
dec
or
jns
xchg
fucom
push
and
dec
inc
test
cmp
mov
xor
xor
mov
pop
cld
rcll
pop
imul
adc
mov
add
jno
mov
lods
fcmovnbe
fwait
mov
push
jne
inc
and
add
stos
lock
jge
gs
ja
or
mov
ror
push
push
mov
cmp
aam
jge
imul
ds
dec
les
test
loopne
popf
subb
insl
jne
insl
fs
dec
lahf
dec
arpl
mov
sbb
daa
xchg
cltd
in
pushf
cltd
push
inc
cmp
ja
repz
test
jp
jbe
cmc
scas
lahf
inc
mov
subb
fiadds
negb
int
arpl
out
fiadds
cld
jle
std
in
fiadds
sbb
notb
adc
add
psubq
daa
in
shll
psubusb
mov
add
repz
sbb
add
push
xchg
mov
lahf
ja,pt
mov
int3
jg
ljmp
sar
adc
mov
dec
dec
bound
insb
test
inc
sarb
push
data16
hlt
ds
addb
pop
push
mov
jno
and
mov
out
and
mov
clc
outsb
xor
dec
gs
cmc
std
inc
ret
test
aas
repnz
sbb
pusha
mov
adc
add
xchg
pop
cs
sbb
sahf
dec
bound
in
sub
xchg
push
push
jnp
call
mov
adc
jmp
lcall
pop
addl
or
insb
mov
and
mov
out
scas
in
cmc
lret
inc
pop
xor
ret
cs
mov
pop
nop
lea
add
jecxz
aaa
xchg
imul
mov
adc
out
insb
fldcw
int
test
jle
mov
pushf
les
pop
sub
std
js
cld
mov
pop
clc
dec
push
into
sbb
adc
jecxz
imul
loope
gs
inc
das
shll
dec
scas
or
stos
mov
insl
insl
ja
xor
mov
inc
cmpsb
shrb
test
xchg
ds
inc
cli
xchg
arpl
and
push
cmpsb
cmp
in
dec
cmpsl
in
inc
fisttps
inc
or
dec
fistpll
mov
mov
cld
lcall
xor
adc
dec
adc
es
ret
je
ret
cmp
adc
mov
jb
repz
xchg
push
imul
push
xchg
js
and
lret
shll
je
pushl
or
dec
pop
or
cltd
insb
xchg
std
xchg
ja
testb
lret
out
icebp
popa
hlt
inc
cmp
inc
out
xor
pop
jle
sub
push
lods
decb
jne
or
mov
sbbb
insl
lea
pushf
mov
jmp
mov
popa
jge
fldenv
pop
mov
mov
cs
or
lahf
sbb
sub
call
jno
test
out
test
xchg
xor
pop
clc
sbb
jnp
test
in
xor
hlt
jne
cmp
mov
jo
dec
mov
jmp
shl
call
xor
out
dec
dec
dec
sub
enter
jge
mov
pop
iret
jg
xchg
adc
mov
loopne
xchg
stos
xor
pusha
movsl
fisttpll
mov
mov
cmp
mov
pop
test
or
fisttpll
pop
jl
xchg
push
test
cmp
loopne
dec
cmp
movsb
icebp
add
int
fbstp
sbb
lods
leave
mov
jl
add
or
fistpl
or
leave
cmp
add
outsb
fnstenv
jmp
ret
push
mov
dec
push
enter
dec
arpl
xchg
xor
cmp
xor
push
cli
enter
loopne
gs
frstor
or
aaa
dec
adc
xchg
lods
add
enter
sbb
dec
dec
enter
test
fcomip
insb
cmpxchg
es
ds
inc
xor
cmp
repz
mov
push
xor
cmp
pop
sub
stos
mov
xor
mov
insb
cmp
xchg
aaa
insl
sub
adc
dec
xchg
xor
lret
cmp
adc
xchg
add
xchg
lds
sbb
sbb
sbb
sub
negl
stos
lds
imul
mov
dec
push
cld
or
push
mov
dec
mov
mov
and
pop
adc
mov
add
jge
imul
xchg
jmp
insl
and
jbe
aaa
lret
data16
in
ss
dec
sbb
pop
cmpsl
sub
sbb
jns
jge
jecxz
ds
mov
mov
and
pop
mov
cmp
mov
mov
cmp
add
cwtl
ss
sahf
adc
js
jo
arpl
outsl
test
inc
add
sbb
fstps
lock
in
mulb
sbb
aam
jecxz
cmp
in
imul
xor
aas
clc
push
js
std
push
mov
in
dec
push
cmp
mov
mov
stc
and
stos
dec
in
stos
stc
adc
aam
call
cmp
cmp
test
loopne
jecxz
jecxz
ret
xchg
call
cmp
jmp
or
adc
push
mov
mov
gs
and
movsl
pusha
xchg
lods
mov
inc
add
push
sub
and
sti
aad
inc
mov
nop
cmpl
mov
add
cmc
mov
dec
inc
mov
jnp
adc
sbb
cli
xchg
stos
addr16
add
xchg
and
jno
ds
mov
sahf
rcrl
ficoml
mov
xor
movsl
pop
int3
andl
iret
sbb
jp
aas
filds
test
ficoms
in
xor
mov
cmc
les
in
into
push
push
add
mov
sub
clc
test
pop
lods
jnp
mov
rcl
xchg
jmp
fiaddl
add
ret
mov
xchg
fistpll
mov
bound
int3
inc
cs
inc
sbb
xchg
mov
in
movb
mov
and
mov
pushf
movsl
setge
out
insl
popa
popf
lahf
inc
bsr
movsb
in
fs
mov
test
sub
cmp
notl
dec
nop
int3
pop
pop
push
add
pusha
andl
fisttpll
mov
test
cmp
jne
pop
mov
sbb
int3
mov
mov
fwait
dec
or
xchg
xchg
adc
push
movsb
adc
roll
and
inc
sub
mov
mov
mov
sbb
adc
push
pop
xchg
mov
mov
fildl
mov
repz
jae
cmp
push
test
push
js
and
into
in
popf
xor
stos
in
pop
cmpsb
mov
fldl2t
dec
or
add
sub
ljmp
int3
push
fcmovnbe
repnz
shlb
add
cmp
xor
fidivrs
and
xchg
fcompl
ss
sub
add
cmpsb
mov
addr16
mov
sahf
stos
insb
std
jmp
sub
xchg
nop
mov
inc
dec
inc
and
hlt
les
mov
xchg
int3
sub
pop
test
push
das
inc
push
popa
cltd
loope
xchg
mov
je
mov
mov
fsubs
fadds
aaa
push
jmp
outsl
lret
call
leave
mov
or
in
pop
stos
inc
popa
xlat
daa
clc
andl
mov
sbb
cmpl
xchg
jae
xchg
mov
lahf
test
adc
dec
clc
mov
and
shlb
bound
dec
popf
mov
out
loop
out
mov
xor
adc
dec
mov
adc
mov
add
xlat
divb
rcrl
cmpl
push
cmp
ss
pop
ds
sub
out
xor
adc
xlat
mul
dec
mov
test
xchg
sbb
cmpsb
int
inc
xchg
mov
dec
lods
ret
xchg
lock
adc
or
mov
repnz
fwait
cmp
adc
pop
and
jl
inc
mov
push
cmp
lods
inc
fwait
sbb
pop
scas
enter
cwtl
pushf
xor
icebp
lret
add
movsl
jecxz
js
lods
jmp
ficoms
xlat
adc
scas
es
add
in
fsubrs
fs
mov
iret
mov
js
das
ja
in
js
iret
jne
mov
dec
fsts
test
nop
movzwl
xchg
and
shrl
adc
xchg
xor
push
movsl
popf
pop
inc
lcall
std
push
gs
pop
push
xchg
xchg
icebp
jo
mov
pop
cmp
xchg
add
sub
cmp
hlt
mov
ficoml
stos
lcall
orb
insb
js
push
add
push
ljmp
int
stos
and
lock
pop
xchg
adc
jle
xor
cmp
add
dec
mov
lea
add
xlat
ret
sbb
add
add
sti
mov
and
mov
fistpl
rol
pop
push
fistpl
adc
dec
xchg
lea
pop
push
and
sarl
imul
int
les
pop
and
push
loop
icebp
push
jl
inc
pop
jb
and
jle
iret
orl
mov
adc
sub
mov
push
mov
add
lock
data16
mov
loopne
dec
cs
cmp
loop
adc
insb
pop
hlt
icebp
xor
xor
adc
and
enter
aam
loop
mov
shl
je
add
xchg
js
push
jle
and
ficoml
lods
dec
xor
xor
xor
imul
stc
add
mov
fdivp
xor
popf
aam
push
fildl
clc
gs
faddl
cmp
mov
or
add
shll
mov
repnz
ds
mov
add
addb
sbb
loop
jnp
dec
mov
mov
jg
loopne
stos
pop
aam
les
leave
shl
mov
xchg
mov
pushf
insb
cld
das
sbb
pop
sub
call
repz
dec
clc
adcl
xor
pushf
add
jecxz
rclb
dec
add
repnz
sub
pop
inc
or
xchg
xor
inc
nop
andb
lahf
add
aam
push
ficoms
xor
insb
or
cwtl
mov
xor
xlat
pushf
sbb
addr16
dec
xor
pushf
fstpl
xchg
jae
mov
jnp
sbb
cmpsl
mov
mov
insl
inc
jns
cmp
dec
iret
jae
andl
out
ljmp
ds
push
testb
push
fcmovu
fimuls
test
rcl
push
and
sarl
push
stos
mov
xchg
cli
adc
and
test
fwait
mov
movsl
int3
or
push
cmp
fadds
cs
les
dec
xchg
or
mov
es
inc
sub
mov
sub
addr16
xor
dec
hlt
cli
add
dec
test
in
int3
jae
test
test
filds
dec
cmc
pop
repnz
push
jnp
sub
je
fsubrl
test
adc
inc
in
xor
and
ja
cld
lds
dec
sbb
push
adc
mov
mov
call
test
pop
pushl
pop
cs
icebp
and
mov
sub
mov
inc
xchg
stc
or
test
or
jns
or
lahf
fbstp
out
out
push
mov
add
mov
jl
fcoms
push
imul
into
inc
mov
icebp
xchg
leave
cmpsl
cmpsb
xchg
ljmp
sub
out
mov
stos
or
dec
xor
stos
clc
and
es
cmpsl
jp
sub
jmp
cs
faddp
jb
outsb
mov
xor
fimuls
sbb
dec
fs
xchg
test
aad
xor
mov
cs
inc
imul
call
push
lods
dec
sbb
addl
jo
outsb
fsincos
pinsrw
adc
pop
lds
and
sub
int
mov
into
cmp
les
xor
mov
imul
pop
das
adc
loop
scas
sbb
out
int
and
xchg
decl
add
jg
stos
mov
daa
test
jp
mov
add
dec
notb
popf
call
mov
xor
and
in
test
adc
push
imul
push
lret
dec
dec
testl
fisubrs
aad
cmpsb
mov
cmp
in
pop
sahf
sbb
int3
adc
aaa
mov
andl
push
aas
sub
mov
push
dec
nop
push
and
xchg
ret
mov
mov
mov
and
sbb
lds
or
mov
dec
insl
sarl
pop
xchg
mov
cmc
cmpsb
inc
scas
xor
sti
leave
iret
mov
mov
and
mov
pop
mov
cld
stos
and
pop
aaa
retw
fs
xchg
mov
xchg
inc
mov
sahf
flds
dec
lds
lcall
jbe
aam
mov
lret
lcall
fs
sbb
push
stos
inc
je
mov
fisttps
xchg
mov
je
add
and
loopne
mov
xchg
xchg
inc
and
lods
pop
jae
cmp
fwait
or
mov
cmp
negl
xor
jmp
pop
push
dec
std
repnz
mov
add
lret
push
js
push
mov
xor
mov
mov
mov
lock
jbe
xlat
bound
cmp
xchg
or
in
andl
cmp
bnd
cs
add
gs
ljmp
xor
insl
sbb
lahf
push
pop
lea
cmp
and
loope
add
iret
push
push
xchg
cmpsb
cmp
mov
dec
inc
mov
in
xchg
loope
fmull
mov
push
dec
outsb
jmp
mov
xor
pop
dec
into
dec
fimull
xchg
jle
or
mov
sbb
popf
pushf
mov
pop
test
stc
adc
jge
pop
dec
add
fst
and
push
adc
mov
jp
dec
mov
sbb
pusha
xlat
into
cmp
cmp
push
adc
scas
mov
dec
and
lret
cmp
scas
ss
jae
mov
test
enter
sbb
iret
pop
pop
loopne
les
cmc
popa
add
xchg
lods
jge
and
cmpsl
push
pushf
add
add
push
jecxz
lahf
nop
ret
inc
pushf
dec
and
add
cmpsb
lret
and
xor
leave
jmp
mov
loopne
adc
rolb
mov
mov
sti
gs
sub
jae
sub
popf
mov
lcall
loopne
dec
call
push
mov
iret
dec
push
sbb
out
mov
sub
pusha
or
adc
add
imull
repnz
dec
in
mov
jns
hlt
ret
nop
adc
sbb
push
int3
cmp
lcall
out
sahf
out
mov
mov
fadds
shlb
subb
rclb
leave
push
xchg
sub
outsl
mov
divb
add
jmp
cmp
arpl
aam
loopne
lcall
mov
int
bound
or
push
push
js
jg
pushf
cltd
lea
hlt
out
sar
test
push
ds
or
out
lcall
aas
cltd
sarl
arpl
mov
lds
sbb
cmpsb
mov
fldl
or
insl
int3
arpl
pop
mov
pop
data16
test
fadd
jbe
add
jmp
inc
imul
pop
sbb
push
push
fcomp
xchg
jbe
add
movsb
sbb
cmc
xlat
dec
ret
enter
loop
mov
popa
stos
outsl
sti
sbbl
dec
dec
sub
inc
icebp
jo
cli
movsl
fisubrs
popa
xchg
jno
and
mov
test
fcoml
shlb
push
dec
icebp
adc
leave
data16
scas
sbb
loopne
inc
in
fisubl
cmpsl
dec
loope
into
mov
mov
or
insl
inc
lret
mov
js
xchg
xchg
xchg
sahf
insl
loope
lea
mov
movsb
jno
sbb
mov
test
stos
hlt
in
mov
loop
ja
sbb
xchg
sub
cld
fs
nop
data16
repnz
push
dec
lret
bnd
mov
push
mov
popf
mov
dec
mov
cmp
movsb
in
jmp
pop
and
scas
mov
subb
jg
divb
add
test
inc
jmp
imul
out
std
in
shrb
sub
cs
sbb
or
mov
mov
cmc
test
and
xchg
mov
fcmovb
xchg
mov
insl
inc
push
ljmp
and
inc
add
mov
lods
mov
and
dec
out
aam
sbb
pusha
xor
push
mov
jg
mov
call
jp
imul
sbb
adcl
push
stc
popa
jnp
pop
fisubrl
mov
into
mov
enter
pop
mov
add
pop
or
or
int
fisubrs
sub
push
jp
xchg
les
dec
mulb
cmp
imulb
rcrl
mov
add
push
test
mov
imul
xchg
sub
mov
or
dec
adc
cld
fs
int
iret
outsb
adc
and
pop
js
leave
and
push
xchg
and
mov
cmp
adc
mov
or
ror
xchg
cmp
jae
push
cmpsb
add
inc
lahf
xor
fcmovne
jp
stos
outsl
jecxz
or
loope
outsl
fldcw
mov
xchg
fstpl
adc
cmp
data16
adc
loop
test
test
movsb
push
dec
mov
test
outsb
adc
mov
stc
jno
push
xchg
cs
add
sahf
bound
gs
mov
ds
push
test
fadds
inc
pop
mov
cmp
loop
pusha
test
aas
mov
push
and
pushf
push
mov
mov
cmp
fisttpl
pusha
repnz
cmc
pop
subl
push
inc
xor
dec
sub
out
mov
mov
in
jl
shr
dec
jp
clc
mov
scas
dec
sti
out
sub
add
mov
inc
and
mov
inc
rol
xorb
ljmp
add
mov
inc
cwtl
push
shl
dec
jb
pop
or
jg
xchg
outsb
stc
fnstsw
mov
xor
addr16
pushf
stos
shl
ja
fisubrl
sti
fs
add
pop
xor
pop
jp
sbb
rcr
jecxz
pop
fnstenv
jmp
push
sarl
dec
stos
dec
outsl
clc
clc
dec
sbb
test
clc
and
shrb
inc
insb
xor
xchg
cmp
push
cmp
dec
iret
std
scas
sub
sbb
sub
jle
cmp
icebp
imul
dec
mov
popa
sub
or
enter
call
mov
std
mov
push
pop
mov
pop
mov
dec
clc
imull
fistpll
sbb
cmp
pop
adc
clc
out
sbb
or
fwait
cs
push
sahf
or
push
jns
fwait
xchg
sarl
adcb
ret
cmp
mov
add
scas
fcomi
sbb
and
fisubrs
jl
test
xor
int
pop
dec
xchg
popa
add
mov
inc
icebp
push
test
or
pop
adc
dec
mov
std
lret
lret
sbb
inc
in
push
sbb
mov
sahf
mov
add
sbb
jmp
insl
imul
dec
int3
add
pop
push
mov
aaa
jo
jno
pusha
jle
pop
popa
outsb
or
xor
test
cmp
repz
out
adc
or
movsl
push
por
add
add
icebp
xchg
repz
je
pop
daa
jg
ljmp
xlat
jle
cli
and
mov
jmp
jae
sbb
fnstcw
dec
inc
or
movsb
xor
sbb
jmp
dec
fidivrl
pop
adc
adc
std
aaa
bound
in
pop
sub
push
or
fnstsw
inc
out
push
fld1
cld
cmp
repz
adc
je
sub
les
jg
push
sbb
pop
addr16
cmc
mov
scas
call
xor
popf
mov
xchg
add
out
shlb
pop
adc
ds
cmp
push
mov
sbb
pop
sub
ret
pop
in
push
and
sub
inc
inc
push
adc
dec
inc
sub
pop
test
mov
xchg
clc
in
xchg
insl
int
dec
bound
add
pop
cmp
ljmp
inc
mov
aas
and
repz
mov
pop
ror
insl
xchg
ficomps
inc
icebp
enter
push
jns
pop
pop
mov
push
lret
xor
es
orl
lcall
sub
pop
lret
lods
ror
jecxz
in
inc
dec
clc
mov
mov
mov
inc
pop
call
jae
pop
bound
cld
insb
cmp
cmp
cltd
sarl
rcll
dec
ret
or
out
stos
xor
in
mov
inc
dec
mov
lods
mov
loope
insl
jmp
and
fistpl
test
sbb
sub
ja
jnp
inc
mov
mov
cmp
gs
outsb
push
push
fnstsw
movsb
lcall
out
or
mov
dec
sub
mov
je
cs
mov
pop
andl
mov
xlat
mov
test
add
sarb
orl
out
pop
lods
ss
xchg
imul
repnz
lods
scas
movsl
pop
or
mov
mov
adc
je
stc
nop
sub
and
test
mov
push
test
adc
out
push
and
mov
jp
rorl
jb
xor
pop
push
enter
cmp
or
inc
adcl
rcll
mov
cmp
or
ds
cwtl
popa
and
ljmp
mov
mov
int
andb
xchg
mov
ret
lds
jns
lcall
mov
mov
push
in
call
dec
push
out
insl
sbb
shlb
push
cmpb
stos
lods
sub
call
out
cli
sbb
mov
pop
cmp
arpl
sbb
movl
mov
les
cwtl
aam
mov
loopne
in
xchg
dec
lcall
adc
movsb
pushw
xor
push
and
mov
mov
gs
xor
mov
movsb
icebp
imulb
lds
adc
mov
loopne
jge
xlat
xchg
out
bound
lock
or
push
out
jl
in
aaa
inc
xchg
or
mov
add
or
jl
sbb
test
ds
pop
cmp
sbb
fdivrl
int
lods
xlat
in
and
xchg
testl
mov
or
ss
jnp
xlat
jge
jl
pop
push
movb
enter
cs
mull
mov
mov
mov
pop
sub
pop
adc
dec
xlat
adc
loop
jo
sub
and
scas
xchg
pop
mov
pop
dec
xchg
in
xchg
pusha
jo
mov
flds
jns
cmp
pop
lret
push
add
inc
popa
movsb
leave
xchg
je
mov
cltd
rcll
ljmp
adc
push
test
data16
out
fcomps
cmpsb
cmp
push
or
test
fucomp
add
gs
inc
jl
mov
test
sbb
xchg
push
inc
in
pop
fldcw
mov
lcall
popa
sbb
mov
jg
dec
mov
push
cmp
mov
xlat
adc
sbb
and
nop
loopne
pop
loope
sahf
mov
pusha
or
out
stc
pop
movsb
sar
arpl
mov
arpl
mov
pop
cmp
push
push
pop
push
jbe
xlat
mov
aam
mov
loop
xor
fcmove
scas
mov
ljmp
or
leave
mov
adc
clc
cld
clc
repz
pop
imul
push
ss
lret
hlt
nop
sub
int
daa
mov
dec
xor
dec
test
aad
das
cmpsb
ja
insb
js
outsl
insl
stos
inc
pop
cli
jne
shlb
out
loopne
subl
xlat
xor
sbb
aad
cld
aam
xlat
and
mov
aas
mov
inc
test
ds
and
mov
insl
in
add
cmp
xor
ljmp
push
outsb
jae
loope
sbb
inc
imul
mov
mov
pop
and
imul
sbb
out
adc
inc
cmp
stc
sbb
cmp
js
gs
dec
or
mov
pop
cmpl
inc
scas
add
pop
sub
cmpsb
in
pushf
add
out
xchg
test
int
ljmp
dec
scas
mov
cld
aad
hlt
xor
add
or
out
xor
pop
cmp
das
mov
out
xor
iret
mov
rcrl
stos
mov
loopne
fstpt
lock
popf
push
inc
in
pop
mov
sub
lods
push
lret
push
jge
roll
dec
push
dec
and
fistpl
out
call
mov
dec
mov
ljmp
aaa
push
cmp
xchg
cmc
pop
push
pop
sub
fisubrs
cltd
mov
lea
call
sbb
int3
cwtl
pop
jns
and
mov
or
and
push
adc
sub
xchg
pop
rorl
xchg
addr16
jmp
adc
mov
and
pop
cli
out
fdivp
cmp
ljmp
addr16
pop
enter
adc
xchg
dec
push
dec
sbb
scas
push
dec
aaa
dec
jmp
fmulp
push
decl
stos
push
ret
leave
jmp
repnz
sub
out
pop
push
stc
pop
xchg
sbb
mov
shlb
std
inc
outsb
cld
mov
nop
adc
inc
lods
push
sub
arpl
adc
cmp
imull
sub
jecxz
bound
inc
pushf
test
jge
out
cmp
lds
jb
stos
and
and
mov
sub
xor
aam
mov
jmp
adc
shll
jb
mov
adc
sub
xor
mov
das
fildll
xchg
and
shrb
push
jns
add
call
mov
inc
dec
xchg
xchg
sbb
mov
movsl
cmp
iret
mov
jb
scas
jl
xchg
insl
jbe
div
xchg
das
mov
add
sbb
and
cmpsb
cli
sub
jl
sarl
es
rcrb
sub
rcr
pop
pushf
fcoms
xor
jmp
lea
fstp
pushf
fldcw
call
inc
adc
and
aam
mov
mov
lods
jbe
sub
mov
outsl
movsl
call
loope
fldz
das
repz
cmp
fsubrs
jle
inc
rolb
pop
jo
xchg
hlt
ljmp
jg
sbb
outsb
enter
or
fisubl
xchg
inc
add
dec
cmp
out
sub
in
jnp
mov
out
xchg
outsb
mov
out
or
iret
xor
movsb
inc
movsl
or
pop
cmp
cmp
or
mov
out
xor
rcl
sbb
jge
out
jecxz
insb
fdivl
mov
push
mov
cmp
jae
cmpsb
loop
add
icebp
mov
push
repz
pusha
adc
sbb
mov
lods
fadds
push
sarl
push
ds
mov
stos
loop
add
and
jg
insb
scas
push
lcall
scas
and
xor
test
call
loope
dec
out
lret
xchg
and
jo
in
sub
cwtl
sar
push
loopne
push
mov
dec
ret
cmpsl
or
cltd
push
or
inc
ja
cmp
dec
test
pop
mov
mov
arpl
lret
adc
mov
lds
rcr
cli
hlt
imul
aas
adc
pusha
pop
sti
lods
dec
iret
xchg
pop
adc
cmp
ret
incb
das
lds
sti
jg
cld
adc
jae
std
add
aam
gs
and
int3
inc
adc
rcrl
mov
out
mov
jecxz
fisttpll
and
jle
sbb
in
pushf
pop
bound
mov
push
xor
jl
xchg
outsb
jl
and
test
pop
mov
das
rcrl
cmpsl
movsl
popa
out
dec
enter
push
pop
jno
fldcw
pop
repz
stos
daa
jl
or
int3
add
sub
adc
ficoms
call
or
mov
sub
or
mov
or
sbb
xchg
fdivrs
adcl
icebp
pop
imul
add
xchg
ret
adc
out
add
out
push
mov
inc
mov
mov
pop
sbb
pop
aaa
jecxz
iret
xchg
out
xlat
decl
pop
push
xor
mov
call
jns
nop
xor
mov
inc
aaa
inc
fninit
inc
stc
pusha
sub
jecxz
mov
out
outsb
into
push
jae
clc
test
mov
gs
xor
in
push
imul
xchg
cmp
push
divb
push
pop
les
jmp
psubb
outsl
mov
add
call
rorl
or
popf
repnz
test
mov
xchg
aaa
mov
xchg
loope
inc
adc
lea
mov
dec
inc
cmp
inc
test
xor
movsb
fimull
pop
push
inc
mov
sbb
mov
pop
pop
fldcw
xor
aam
xchg
imul
sub
xor
movsl
xor
push
mov
mov
fiaddl
pop
jbe
je
add
iret
int
and
lret
mov
jbe
pop
xchg
inc
bound
xchg
insl
retw
les
adc
filds
dec
pop
add
fsubrs
push
jnp
bound
mov
mov
and
fadd
xlat
fcomi
jns
jnp
push
mov
xor
test
push
fs
aas
test
fwait
pop
sbb
aam
inc
leave
jle
mov
add
and
aas
xchg
cmc
pop
mov
adc
or
xchg
pusha
jb
sti
sbb
out
das
fadds
push
and
ret
push
shl
cld
jge
xchg
mov
call
aam
lret
out
shrb
sub
enter
jl
or
ja
push
xor
mov
pop
ret
push
push
insb
mov
loope
popf
pusha
adc
leave
inc
adc
cwtl
inc
ffreep
imul
ss
je
inc
gs
jg
pop
cmp
inc
les
mov
mov
testl
ja
push
adc
mov
mov
cmp
mulb
add
insl
add
or
dec
jno
insb
fdivrs
int3
inc
dec
sbb
jg
clc
xor
mov
scas
xor
fcmovbe
test
shrl
fcmovbe
nop
loopne
mov
pusha
imul
clc
pop
in
iret
pop
mov
xor
sbb
aam
mov
dec
xor
clc
xlat
sub
push
dec
stos
mov
pushw
ret
pushf
imul
and
lret
mov
xor
out
movsb
pop
and
aam
in
sbb
sbb
daa
gs
lahf
in
mov
or
loopne
xchg
add
cmc
inc
ret
iret
aas
sub
and
xchg
insb
leave
outsb
mov
and
pop
mov
sbb
sti
pop
mov
jecxz
cmc
dec
inc
insl
inc
mov
push
jb
aas
mov
fiaddl
scas
imul
jno
int3
rcr
mov
enter
ljmp
out
int
push
push
in
outsb
xchg
js
cmpsb
insl
add
inc
stc
cmp
and
test
inc
xor
push
jmp
je
and
and
pop
xor
jae
mov
int
or
xchg
rolb
push
cmpsb
mov
pop
idivl
jmp
cli
and
std
rcl
or
out
fstl
adc
outsl
and
pop
inc
call
jle
stc
scas
data16
ficomps
mov
nop
sahf
out
sbb
or
repz
sbb
xor
xchg
add
mov
dec
aad
xchg
daa
mov
or
in
sbb
lds
out
int3
mov
xor
movsl
jbe
xchg
clc
nop
xor
cltd
add
test
xchg
das
fisubl
mov
pop
cwtl
and
out
jge
xchg
addr16
js
out
cmpl
in
movsl
push
sti
adc
pop
mov
dec
pop
or
cs
and
mov
fnsave
daa
repnz
mov
jbe
out
aaa
imulb
pop
ret
jmp
popa
jo
mov
outsl
nop
int3
and
sub
imul
pop
jns
mov
out
xor
inc
and
mov
fwait
sub
stos
xchg
gs
cld
not
loop
mov
pop
xor
jmp
outsl
ret
outsb
jb
mov
ja
push
ljmp
push
pop
jg
push
push
ja
xchg
lahf
cwtl
js
out
sbb
enter
adc
jmp
cmp
xchg
icebp
add
xor
movsl
or
out
cmpsl
fs
sbb
dec
ljmp
test
fdivr
or
setg
call
lock
lret
mov
test
cmc
popf
and
or
jnp
pop
fldenv
and
mov
jg
inc
xchg
or
jmp
mov
leave
or
cmpsl
scas
xchg
mov
lret
out
mul
std
clc
shlb
std
xor
lahf
cmpsl
mov
sub
xchg
pop
mov
inc
insl
add
pop
and
and
les
cmp
mov
je
push
and
dec
xchg
and
scas
mov
bound
push
pop
mov
adc
inc
insl
push
inc
outsl
pop
or
out
mov
popf
and
inc
cmp
jecxz
shll
push
das
fidivrs
mov
dec
xchg
out
sub
or
mov
int3
sub
mov
push
add
out
sbb
pop
ljmp
or
sbb
test
pop
in
inc
add
cmp
mov
rcl
mov
iret
inc
push
scas
je
sub
cli
loop
test
insb
icebp
pop
mov
add
lods
stc
mov
int
lret
mov
mov
adc
jp
mov
xor
insb
jae
and
stos
test
push
ss
inc
mov
lret
jg
cld
ljmp
in
mov
fs
in
out
scas
in
mov
incl
xor
cltd
mov
mov
fsubl
scas
push
mov
adc
jmp
inc
mov
inc
inc
cmp
or
jne
sbb
push
and
xchg
lock
push
xor
add
lret
mov
pop
pop
aad
adc
sbb
dec
dec
jg
out
jge
ja
lahf
push
push
sub
cmpsb
mov
mov
sub
rcrb
aad
push
dec
mov
xchg
adcl
rorb
cmp
mov
mov
cmp
push
std
shrl
add
jns
into
mov
rcrb
xor
cmp
adc
popf
jle
pusha
out
js
cmc
or
cmpsl
xchg
push
int
iret
mov
push
bound
test
xor
outsb
in
cmp
mov
popf
xlat
mov
push
es
aam
cli
xchg
dec
adc
lcall
mov
jg
inc
adc
ljmp
add
sti
std
add
cmp
movsl
pop
inc
popf
inc
xor
mov
xchg
sub
stos
and
pop
pop
loopne
addr16
inc
fsubl
xorl
loope
jns
push
adc
stc
divl
lret
mov
mov
aas
call
insb
out
in
inc
icebp
jbe
xchg
sbb
and
or
cmp
adc
sahf
cmp
push
lret
xor
xor
or
sub
pop
xchg
scas
push
sub
jo
pop
mov
mov
xor
outsl
popf
jecxz
xchg
xchg
sbb
repz
dec
and
push
pop
add
dec
or
gs
fcoms
push
stos
sbb
ret
mov
cmpsl
and
dec
inc
sar
xchg
add
mov
repnz
inc
outsl
adc
jns
adc
in
xchg
mov
adc
mov
inc
stos
lcall
in
xchg
sub
mov
add
outsb
out
gs
in
and
add
mov
in
xchg
in
cmpsb
sub
rcrl
inc
dec
fsts
jle
imul
xlat
mov
ljmp
push
cmpl
add
jae
out
cmpsb
jmp
mov
adc
xchg
lea
mov
pop
lret
sub
mov
outsb
pop
mov
xor
xorl
mov
push
mov
fistps
ja
push
jbe
mov
lret
shl
stos
sbb
subb
sub
cmpsl
insl
mov
xor
outsl
data16
aam
lret
push
jo
aad
add
ret
iret
sbb
cmp
inc
mov
inc
in
mov
mov
imulb
int3
lahf
sub
movsl
jl
jno
icebp
sub
cmc
inc
testb
es
cld
loop
mov
popa
xchg
push
or
lret
mov
fnstenv
popa
insl
lret
out
je
mov
lcall
xor
decl
pop
cmp
sub
and
mov
clc
shrl
scas
out
mov
mov
hlt
inc
daa
fimuls
sub
cs
dec
jmp
enter
out
popa
jns
add
repnz
pop
lock
cmpsb
andl
or
js
mov
inc
clc
push
into
inc
pop
int
cli
in
sbb
sbb
icebp
stos
xor
mov
sbb
imul
pop
ja
pop
or
jbe
pop
mov
popf
or
insb
adc
mulb
mov
and
add
inc
push
sub
mov
dec
add
fidivrl
sbb
push
in
call
mov
daa
mov
add
loope
mov
xor
in
in
add
ss
stos
jle
lods
js,pt
adc
test
xchg
push
xor
cvtps2pi
pop
je
hlt
and
or
shrl
fisubs
xchg
adc
and
mov
andb
mov
xchg
and
call
roll
fcoms
les
ja
push
std
lds
xchg
pop
cmp
gs
xchg
xlat
movntq
popf
push
addb
mov
popf
ret
out
mov
int
ret
cmp
rorl
jo
fs
pop
movsl
cmc
and
addb
out
mov
mov
and
xor
sbb
pop
adcb
jle
sub
dec
loop
lea
repz
cld
movsb
inc
push
addr16
addr16
and
fidivs
push
inc
mov
xchg
jg
cmp
mov
mov
adc
hlt
adc
out
data16
ljmp
cmc
mov
jbe
xchg
popf
nop
mov
adc
out
fidivs
inc
sub
push
ret
pop
lret
adc
push
cmp
rcrb
inc
ds
lret
push
mov
cmp
inc
mov
cmp
pusha
nop
les
add
dec
fdiv
push
insl
test
bound
push
sahf
imul
push
in
nop
outsb
xor
jae
cmc
aam
mov
mov
pop
sbb
out
in
js
aad
dec
std
sub
inc
jecxz
outsb
rol
ja
repz
push
dec
mov
sub
sbb
imul
fistpl
push
xchg
mov
ds
movsb
enter
mov
mov
jae
xchg
sbb
xchg
push
pop
and
stc
and
add
movsl
sahf
sub
je
ret
lahf
or
pop
or
xchg
movsl
gs
xchg
pusha
es
in
inc
dec
les
inc
cmp
adc
adc
jo
data16
jb
mov
stos
cmp
inc
push
adc
js
cmc
adc
and
xor
andl
cmp
push
out
pop
jg
lods
popf
fdivrs
dec
and
nop
aaa
shl
ss
inc
pop
adc
sub
mov
adc
and
jg
or
lods
ret
loope
sub
sbb
dec
xor
dec
pop
mov
mov
arpl
push
sub
add
mov
aas
addr16
rolb
pop
sub
ret
icebp
js
mov
jl
daa
and
pop
sub
repnz
in
fistl
sbb
mov
clc
fs
jnp
cmpb
add
push
or
imul
push
sub
dec
cmp
sub
and
xchg
imul
sti
and
jb
scas
xchg
dec
add
out
adc
mov
in
popa
jne
cltd
jge
shl
lds
push
shll
jbe
cmp
fcomp
in
sub
pop
loope
cmp
lods
pop
pushf
mov
dec
adc
fdivr
mov
lock
dec
mov
dec
cmp
and
cs
mov
sbb
sub
sub
mov
aaa
xchg
dec
push
xor
outsl
clc
lahf
cmp
sbb
xchg
imul
mov
insb
imul
add
pop
push
out
loope
inc
rcll
out
push
stos
std
push
dec
xchg
cltd
jl
sub
iret
inc
rcrb
and
adc
lahf
hlt
push
ja
aam
mov
jmp
push
mov
mov
dec
fsub
sub
inc
pop
xchg
mov
ss
shr
lcall
mov
or
add
xchg
stos
and
mov
sbb
xor
and
push
scas
mov
popa
jle
fldl
lret
fildll
push
mov
std
jbe
inc
and
es
add
sub
mov
mov
cltd
jns
xchg
insl
sub
mov
inc
lret
push
in
mov
xor
pop
std
stos
sub
ljmp
imul
sbb
fidivl
adc
popf
loop
or
adc
fsubl
cmc
decl
push
pop
lret
inc
idiv
mov
adc
sub
arpl
xor
xchg
test
outsl
mov
push
into
iret
add
scas
mov
pop
cmp
xor
popf
mov
mov
mov
mov
sbb
mov
outsl
ret
out
jne
cmpsb
add
lds
xchg
rcrl
xchg
lods
sarl
addr16
cmpsl
setnp
and
xlat
jo
push
dec
dec
in
arpl
cmpsb
or
inc
shrb
inc
pop
add
jae
jp
fmulp
add
or
add
pop
jo
sub
dec
push
jl
ret
mov
int3
ja
pop
loop
mov
push
and
addr16
mov
test
rclb
test
movsb
xlat
xchg
push
adc
aaa
stos
and
ja
imul
outsl
sbb
inc
icebp
push
dec
pop
mov
mov
jb
or
das
xor
and
lods
mov
loope
mov
sub
cld
xchg
xor
mov
je
outsl
and
add
clc
icebp
out
jb
sub
pop
fwait
sbb
pop
fsubrs
lds
ret
inc
test
shrb
pop
cmpb
jp
loop
movsl
shr
mov
int
jecxz
push
test
ljmp
jbe
xor
loope
dec
mov
push
push
lods
xchg
xor
out
push
sub
mov
push
movsl
int3
cmp
cmp
jge
cmp
push
or
gs
xchg
rcl
push
mov
jl
dec
scas
dec
and
mov
addb
pop
dec
outsl
repnz
mov
mov
add
test
movsl
mov
je
sub
xchg
add
xor
inc
andb
les
imul
push
dec
mov
xchg
mov
fs
jmp
pop
nop
lret
repz
mov
imul
int
imul
mov
aas
mov
int
daa
lahf
stos
inc
out
mov
lea
lret
aad
sbb
fildl
sub
pop
lea
sbb
sbb
cmpb
iret
inc
imul
push
in
add
addl
loopne
xchg
mov
jl
daa
gs
and
clc
data16
mov
shll
cmp
push
push
dec
call
sbb
cmp
or
scas
xchg
aas
mov
push
xchg
adc
gs
call
xchg
or
mov
pop
dec
dec
popf
pop
xchg
add
push
pushf
jecxz
gs
test
cmp
fwait
aad
sbbl
daa
cwtl
enter
xchg
xchg
mov
mov
daa
out
xor
int3
mov
adc
add
lret
and
push
scas
scas
jnp
pop
dec
subl
and
cmp
es
loopne
xchg
jae
adc
pushf
fmull
dec
xlat
enter
insl
cli
jo
add
push
mov
shr
mov
fstps
into
test
push
lock
es
aad
or
fs
fidivl
mov
cwtl
leave
fs
add
sbb
int
pushf
pop
in
cli
xor
fwait
popf
sahf
out
jbe
push
ss
fistpl
xchg
push
mov
ds
lret
stos
ds
cli
pop
sbbb
pop
data16
cs
mov
pop
aad
ret
in
mov
push
and
xor
mov
add
pop
icebp
in
sub
cli
mov
inc
sub
addb
dec
mov
lock
into
cwtl
mov
jns
push
loop
inc
iret
lods
dec
aaa
dec
scas
cmp
shr
fcoml
div
sbb
jge
leave
fndisi(8087
sub
and
mov
xchg
jno
inc
mov
inc
imul
xchg
lret
pop
mov
jmp
xor
mov
mov
ja
fnstcw
jl
inc
test
orb
leave
push
filds
repnz
les
aaa
sbb
daa
jo
dec
loop
pop
add
imul
les
andb
cmp
xchg
mov
cmpl
sbb
fisubs
cmp
imul
int3
xchg
roll
xchg
xor
idivl
dec
das
pushf
bound
push
orb
xchg
push
add
fs
mov
xor
insb
stos
test
dec
mov
inc
int
enter
xor
mov
sub
loop
lret
call
leave
out
xlat
jecxz
mov
mov
and
sbb
xor
aas
cs
sub
lods
dec
mov
pop
xchg
dec
cmove
les
test
enter
lret
fisttps
cltd
sahf
cmp
jg
lock
test
jns
jle
lock
outsl
push
mov
rolb
lock
jb
les
sub
lahf
cld
cmp
sub
inc
jge
xor
fists
dec
xlat
ss
decl
stos
mov
sbb
push
adc
data16
push
rclb
arpl
or
sbb
shll
mov
testl
cmpsl
jno
movsl
lods
daa
out
cmc
or
cltd
push
or
insb
js
imul
or
push
push
ficompl
jbe
xor
push
xlat
xor
mov
adc
push
pusha
bnd
cmp
loopne
ds
cwtl
sbb
lds
fstps
pop
push
imul
in
lret
popa
movl
call
add
or
fcomps
hlt
and
sbb
push
sbb
movb
sbb
or
subl
pop
xor
ja
cmc
pushf
push
fbld
adc
mov
ljmp
add
ja
int3
dec
jae
or
in
add
xchg
adc
addr16
mov
cmp
stos
pop
and
sbb
xlat
jg
jmp
inc
pop
or
sbb
js
outsb
lock
and
push
sub
sbb
mov
aas
sbb
dec
pop
dec
mov
or
jbe
scas
aas
fsubs
fsubrl
mov
lahf
jne
in
sarb
lods
lock
popf
push
lahf
js
xlat
inc
dec
stc
fs
ljmp
adc
jp
add
nop
rolb
les
stos
out
push
pusha
sbb
mov
mov
das
and
test
std
adc
mov
adc
ret
pop
sti
mov
mov
dec
clc
xchg
aaa
jp
xor
adc
scas
dec
inc
xor
popa
int
cli
lock
push
addl
add
mov
push
pop
sbb
jecxz
push
lock
inc
jl
pop
ret
or
jae
cli
add
in
add
xchg
aam
or
push
je
jbe
mov
cld
and
xchg
ffree
sbb
imul
jns
and
dec
movsb
mov
pop
callw
bound
jp
js
pop
jbe
dec
mov
push
mov
cmp
jmp
jae
xchg
mov
lcall
rcl
ss
fstl
cmp
jns
mov
mov
and
mov
in
clc
repnz
lahf
mov
inc
pop
lods
adc
dec
pop
jae
push
aad
push
add
mov
mov
mov
pop
xchg
add
es
neg
adc
xor
xchg
je
sub
call
fs
fucomip
and
lcall
inc
inc
push
mov
outsl
test
inc
mov
cli
pop
sarb
dec
test
pop
cmpsb
mov
cld
mov
or
push
inc
fxch
mov
loop
cmp
jo
adc
jnp
popf
jnp
jl
ret
push
sahf
add
xchg
leave
lret
popa
sub
loope
and
les
mov
push
pop
push
push
loopne
lcall
dec
pop
sub
or
jle
mov
mov
sbb
pop
xchg
stc
call
mov
mov
inc
loop
insb
xchg
adc
lods
mov
sbb
mov
cmpsb
hlt
es
xchg
nop
mov
xchg
das
mov
add
ja
sbb
lret
inc
jns
in
pop
xchg
mov
mov
xor
popa
dec
pop
cmp
in
jmp
sub
xchg
jbe
jns
pop
arpl
xchg
popf
cltd
leave
mov
mov
inc
pop
fdivl
mov
mov
cmpsb
push
push
or
sti
daa
pusha
cs
iret
sub
lock
std
fisubs
icebp
pop
sbb
out
aad
inc
in
xchg
xor
test
dec
jo
incl
ljmp
jp
dec
mov
pop
loopne
shll
loope
fimuls
inc
gs
das
mov
popa
fwait
xchg
test
xchg
fsubrs
sahf
sti
aas
mov
js
and
aas
mov
insb
mov
imul
add
mov
inc
pop
dec
dec
xor
gs
sahf
les
hlt
mov
popf
cmp
in
mov
cltd
test
mov
xor
mov
xor
push
add
add
xchg
dec
es
xchg
mov
scas
icebp
pop
stos
ljmp
mov
adc
ljmp
mov
imul
dec
push
jo
std
pushf
lds
cmp
mov
outsb
nop
cmc
test
aas
cmp
inc
jno
jb
cmpsb
jae
sbb
sbb
fwait
subb
addr16
mov
mov
cld
int3
adc
gs
mov
sbb
stos
je
inc
inc
cmpsb
into
gs
inc
mov
scas
or
test
fdiv
imul
cld
sbb
and
cltd
and
push
out
lret
stos
jl
pop
loopne
sti
adc
push
popa
push
add
fs
adc
aam
inc
sub
stos
sbb
lret
in
icebp
outsb
inc
repnz
movzbl
cmpb
inc
and
mov
and
out
stc
shlb
sahf
sahf
test
js
sarl
push
out
test
mov
gs
cmpsb
xor
loop
xchg
lcall
or
and
inc
fwait
pop
stc
clc
push
jnp
es
sub
movsb
add
cmc
es
sbb
mov
cwtl
add
out
aas
jno
xchg
mov
push
sub
inc
mov
jmp
lock
mov
les
sbb
js
lods
and
leave
jmp
jmp
or
stos
fwait
loop,pt
lret
sarl
repz
in
push
testl
mov
inc
add
xor
pop
test
cmc
xchg
pop
pop
add
jns
inc
dec
popf
outsb
mov
add
and
lcall
insl
push
das
lds
lods
fistl
sub
jne
mov
and
mov
cmp
push
pusha
jbe
sub
pop
push
or
and
sub
mov
int
adc
pop
xor
cmp
add
mov
cltd
mov
fsubrl
pop
sub
clc
lods
popf
lret
push
cmp
cmpsl
pop
mov
push
cld
dec
popf
lret
or
bound
dec
mov
stos
cltd
adc
mov
jne
xchg
into
imul
leave
leave
iret
or
sub
cmp
jmp
fucomi
movsl
stos
mov
icebp
mov
std
mov
dec
arpl
inc
mov
mov
outsl
mov
push
inc
cmp
dec
inc
test
mov
test
push
jne
dec
shl
sub
pop
mov
test
xchg
shrb
push
roll
sbbb
sbb
and
insl
jns
mov
or
pusha
push
test
in
mov
jns
aam
pop
enter
insl
lcall
adc
push
sbb
mov
push
mov
push
addr16
rcrl
movl
dec
lret
sub
mov
dec
sub
xchg
push
dec
aam
in
dec
mov
dec
cmp
mov
inc
mov
lcall
dec
pop
imul
and
hlt
std
push
pop
inc
fistl
lahf
ret
mov
push
das
rorb
and
jp
js
popf
leave
or
push
xchg
jmp
adc
sti
fs
sbb
inc
sbb
xor
push
xor
mov
aaa
pushw
out
dec
dec
pop
xchg
xlat
mov
cltd
xlat
pop
push
cmpsl
outsl
pop
inc
jl
lods
lea
addl
pop
in
int3
test
xchg
out
jl
cmp
repnz
fstpl
or
mov
decb
mov
adc
dec
lret
mov
cs
jg
push
cli
push
mov
insl
sub
pushl
bound
cmp
mov
mov
sbb
xchg
out
test
sbbb
arpl
leave
les
cmp
cmp
and
xchg
sbb
daa
jbe
push
jns
dec
roll
aas
pop
inc
sbb
test
inc
psubb
mov
and
cltd
dec
das
mov
jl
arpl
jns
adc
pop
cwtl
pop
push
ss
mov
and
into
lds
xor
inc
jbe
pop
pushf
dec
subl
or
push
mov
dec
mov
loope
fidivl
mov
loope
add
adc
xchg
mov
pop
push
jb
lahf
cmp
ja
aas
lret
mov
mov
cmpsl
outsb
sub
xor
push
push
into
cmc
rcll
lods
inc
scas
rolb
mov
jecxz
mov
add
mov
cmpsb
cs
xchg
das
inc
stos
pop
and
loopne
pop
inc
jo
xchg
adc
xchg
mov
cld
pop
pop
call
cli
push
add
in
rcrb
xor
mov
push
xlat
mov
je
push
xorl
push
repnz
aas
mov
lods
ret
and
sarb
ds
jbe
cs
aas
jl
das
sarb
out
adc
or
popf
jecxz
xchg
push
jmp
popf
iret
cmp
jb
mov
pop
jb
mov
push
and
lcall
aad
test
mov
jle
fdivrs
dec
out
stc
inc
jno
dec
cmp
flds
and
pushl
stos
outsl
sub
jnp
repnz
out
lcall
jno,pt
cld
loope
in
add
shlb
jnp
fidivrs
cs
jne
push
xchg
addb
pop
pusha
cmpsl
nop
sbbb
inc
ret
inc
push
fistl
cmp
repz
pop
movsl
ss
out
dec
mov
ret
pop
push
cwtl
popf
cmpsl
mov
jb
insb
and
stos
mov
xlat
or
mov
sbb
loopne
add
imul
sub
incl
es
jl
out
loope
mov
fldt
ljmp
dec
cli
lcall
addr16
cwtl
into
add
xor
repnz
fidivl
dec
or
pop
test
jne
and
jno
add
sbbl
sbb
mov
add
mov
mov
lcall
shll
xchg
arpl
mov
imul
into
int3
sub
cs
inc
and
stos
lods
jo
inc
xlat
je
aaa
mov
push
dec
int
inc
xor
or
in
jne
xor
inc
fstpl
movsb
idivb
cmpsl
pop
mov
pop
cmp
es
es
mov
inc
gs
fld
mov
data16
out
pop
fildll
mov
pop
insl
and
jns
jns
mov
div
xchg
lahf
mov
ret
lret
enter
pop
cwtl
fcoml
test
jle
mul
sbb
test
dec
iret
daa
inc
fbstp
mov
ja
push
cli
in
push
test
add
int3
aam
cmp
out
mov
pop
mov
dec
dec
cmpsl
jnp
loope
mov
clc
mov
xchg
fstpl
frstor
or
jge
out
inc
ss
stos
ja
xchg
fsubrp
stos
lea
dec
jmp
jge
jno
iret
test
lds
or
dec
jp
push
cmp
fs
add
cmc
push
shlb
push
mov
push
je
adc
cmc
sub
insl
fwait
lock
mov
mov
dec
cmp
repnz
push
pop
shrb
inc
xchg
inc
movsl
negb
repnz
mov
cld
rclb
mov
and
add
jecxz
fildll
push
out
test
push
aad
sub
lods
jmp
scas
into
push
call
arpl
add
aad
fimull
leave
out
les
dec
pop
mov
rcrb
pop
arpl
and
mov
cmp
sbb
push
mov
and
popf
pop
pop
pop
sbb
pop
jbe
pop
daa
xchg
fs
jge
pop
xor
xchg
shrl
sub
jg
sarb
mov
xchg
ret
bnd
xor
mov
incl
cmp
cmp
aas
ret
and
jb
xor
jae
sbb
and
lods
sub
sbb
pop
jb
pop
js
outsl
xor
ss
sub
ss
sbb
cmp
xor
push
lods
test
pop
jle
jb
mov
mov
mov
xchg
clts
sbb
jb
mov
addb
cltd
mov
maxps
iret
xor
cmovno
or
inc
enter
jo
shlb
push
sbb
xorl
push
loopne
dec
aam
pop
mov
mov
mov
sbb
push
lds
ljmp
inc
push
dec
out
jmp
sbb
insb
mov
inc
lods
cs
sbb
mov
jmp
xchg
add
div
cltd
or
cmpsl
inc
cmp
aad
mov
es
add
lods
mul
sti
sbbl
scas
scas
cltd
adc
movsb
xchg
sbb
xor
out
outsl
pop
or
arpl
rolb
pop
sub
sbb
and
dec
ss
cmp
fidivs
pop
xor
cmpsl
push
add
subl
mov
mov
int3
dec
push
imul
fsubr
mov
out
gs
mov
cmp
mov
lcall
adc
jp
and
hlt
lock
adc
gs
dec
clc
stos
lods
xchg
push
enter
in
loope
mov
ret
xor
ja
and
out
mov
or
cld
jmp
cmp
sbb
dec
daa
iret
ljmp
sahf
xor
sbbl
jp
sti
je
testl
fsubrs
popa
inc
mov
cmp
push
inc
adc
xor
and
bound
shlb
int3
lods
cld
push
lret
add
aad
pop
xlat
jge
xchg
ss
insb
xchg
jl
or
xchg
mov
dec
mov
stos
mov
lret
sbb
and
sbb
rcrl
fwait
movsb
je
dec
mov
fildll
enter
adc
stc
fdivs
movsb
int
sub
mov
bound
in
and
cltd
dec
jecxz
sbb
jnp
pop
mov
mov
add
dec
dec
loope
popa
dec
cmp
pop
push
adc
push
adc
jmp
dec
adc
daa
mov
test
out
aas
cmp
test
mov
xchg
loope
mov
push
mov
and
mov
cmp
out
pusha
push
fiadds
mov
scas
cmp
inc
dec
pop
mov
cmp
mov
cmpsb
repz
ja
loop
jg
sbb
adc
mov
mov
cmc
pop
pop
sbb
pop
mov
mov
push
xchg
add
sub
les
jb
mov
adc
adc
adc
jns
xor
call
mov
into
mov
ret
inc
sahf
cltd
das
cmp
mov
push
xchg
loopne
and
jnp
arpl
adc
lea
xchg
sub
add
jge
sti
cmp
inc
push
imul
jbe
mov
leave
arpl
ljmp
clc
push
add
cli
inc
push
push
js
sbb
push
add
int3
mov
test
jmp
imul
sbb
call
mov
mov
fs
into
jae
negb
pop
out
mov
adc
xchg
mov
fwait
and
jae
test
sbb
cmp
adc
in
push
cmp
loopne
adc
sbb
and
dec
adc
inc
pop
dec
dec
adcb
sarl
mov
ds
inc
fidivl
cmpsl
mov
xchg
xchg
stc
mull
adc
pop
ja
fcmovbe
sbb
and
std
xlat
aas
ffree
xchg
aas
mov
xor
sbb
and
rcl
push
test
inc
xor
daa
jg
js
pop
in
insl
cmpsb
jg
hlt
mov
adc
test
mov
xchg
or
inc
stos
call
mov
mov
adc
ret
dec
mov
fwait
push
sbb
cld
xor
lds
mov
in
pusha
shrl
dec
xor
and
js
xchg
sbb
sub
in
in
popf
aam
mov
cmp
pop
js
sbb
out
mov
or
mov
rcl
aas
cmp
int3
sub
popa
mov
repz
jb
iret
aaa
add
add
fildl
pusha
arpl
mov
dec
dec
mov
jl
xchg
jmp
jmp
icebp
jge
xchg
stc
sbb
in
jle
lea
out
rcrl
mov
mov
pop
push
outsl
faddl
and
xchg
xor
cmp
loope
mov
lods
adc
sbb
pop
es
cmp
dec
add
shlb
iret
rcll
test
and
mov
sbb
ja
xor
lds
arpl
xor
sub
pop
xor
dec
add
pop
js
sbb
push
and
out
test
xor
push
adc
and
or
xchg
sub
or
pop
pop
inc
rorl
jbe
add
insl
cmpsb
into
mov
mov
adc
int3
pop
lahf
dec
adc
xlat
inc
adc
inc
cmpsb
pop
xchg
xchg
add
xor
jns
jle
in
xlat
push
pop
lods
pusha
xchg
daa
dec
and
mov
and
lods
mov
mov
call
out
adc
xor
rcr
xor
in
insl
jl
lock
movsl
icebp
fldt
xlat
popf
pop
inc
scas
enter
xor
add
insl
jmp
mov
and
loopne
pop
cld
test
data16
fucomip
pop
dec
sti
inc
arpl
jnp
incl
test
fdiv
ret
stos
test
sub
fmul
push
mov
jmp
lret
bound
jae
xlat
mov
les
aad
leave
sub
shlb
mov
cmp
inc
scas
pop
pop
and
fldl
imul
mov
js
ret
popa
imulb
fdivrl
popa
sub
rcrb
fildll
call
mov
mov
add
inc
pusha
sbb
stc
mov
sub
inc
scas
and
test
enter
js
mov
add
mov
in
push
mov
mov
xor
add
cmpsl
inc
push
ja
mov
xchg
dec
ret
lret
jns
lods
or
xchg
outsb
push
mov
shr
and
sub
jnp
imul
push
sub
in
adc
sub
out
mov
arpl
gs
add
mov
jmp
jo
and
cmpb
push
fisubl
mov
shll
mov
out
mov
dec
dec
aas
jbe
push
dec
ret
dec
lods
mov
add
jge
repnz
ss
jp
andl
out
xchg
lahf
cwtl
push
nop
shl
push
ss
xchg
lds
jmp
int3
test
push
bound
insb
ds
data16
shll
sti
outsb
xorl
dec
mov
add
sbb
bound
pushw
orb
mov
push
lahf
cmc
or
scas
and
ja
mov
jae
outsb
leave
pop
and
and
hlt
or
fisubrl
mov
inc
cmp
leave
in
pushl
add
cmc
repz
jne
mov
dec
inc
jge
cmp
or
pop
or
adc
scas
lods
mov
clc
mov
icebp
mov
nopl
repnz
divl
rolb
into
inc
inc
jmp
stos
sahf
xor
out
adc
out
insb
fldt
fadds
push
push
cmpsb
pop
jns
cli
loope
out
mov
je
push
xor
or
sbb
test
pop
xorb
clc
outsl
insb
xchg
mov
push
mov
and
mov
movsl
out
lahf
je
and
mov
sbb
adc
inc
cld
ret
or
jmp
jge
das
sub
int
popf
fists
call
test
and
xor
adc
mov
sti
add
insb
popf
fwait
push
jne
sub
and
cli
xor
sub
mov
out
or
ficoms
sub
mull
jo
in
pop
push
fimull
adc
in
jg
mov
jp
stos
mov
cmp
aaa
push
xor
pop
mov
insl
sub
mov
outsl
popa
fiadds
mov
loope
mov
and
sbb
rolb
in
shll
bound
pop
cmc
mov
inc
jns
out
js
xlat
pop
daa
addl
xchg
push
adc
cmpsb
cmp
lret
add
cmp
mov
dec
je
xlat
cmp
adc
dec
ljmp
cmpsl
stos
bound
int
add
dec
lock
imul
jle
push
pop
or
mov
push
je
adc
outsl
rorb
nop
xor
nop
add
jp
pushf
movsl
cmp
sbb
mov
jno
cmpsb
add
xor
push
jmp
sbb
mov
lea
jnp
mov
mov
imul
int
add
or
sahf
les
and
cltd
adc
xchg
pop
sub
dec
jbe
sarl
mov
add
mov
iret
pop
fs
pop
nop
dec
mov
sub
rclb
jp
arpl
xchg
jo
int
xor
jmp
cld
scas
cmp
in
push
pop
inc
aad
fnsave
lret
pop
xor
stos
outsl
fcomp
addr16
fdiv
mov
adc
test
adc
das
insl
adc
jbe
dec
bound
popa
mov
mov
xchg
xchg
icebp
mov
sub
dec
and
idivb
stos
stos
add
xor
pop
pop
mov
dec
shr
mov
enter
inc
jg
inc
bound
pop
jns
mov
mov
push
xchg
mov
cmp
js
push
dec
fldl2e
test
inc
mov
sub
divl
sbb
cwtl
nop
or
loopne
inc
mov
jne
jge
jg
and
inc
dec
cltd
enter
inc
fldcw
popa
mov
test
movsl
xchg
sti
fwait
cs
jp
pop
adc
sub
ss
leave
mov
mov
addr16
cmp
mov
xchg
mov
pop
push
movsl
fcomip
icebp
loop
add
jnp
xchg
mov
adc
iret
subl
jns
popf
jge
inc
mov
push
mov
mov
sbb
xchg
inc
push
sub
or
or
jne
dec
test
icebp
ficomps
sub
add
mov
adc
mov
cld
or
jle
outsl
cmc
dec
pop
daa
arpl
lods
and
adc
cltd
mov
pop
push
mov
test
mov
ja
push
adc
and
mov
mov
cmp
ss
fnstsw
outsl
in
sub
mov
test
pop
add
sbb
scas
call
or
les
repnz
mov
mov
sahf
xchg
ret
and
pop
into
rcll
xor
lds
inc
push
and
jb
mov
push
or
adc
xor
adc
cltd
daa
push
or
mov
lods
dec
or
sbb
push
scas
orl
mov
int
lcall
push
stos
cmc
sbb
ss
jnp
loop
sbb
lcall
and
jl
xchg
aad
cmc
notb
inc
lahf
scas
push
ret
jmp
inc
lahf
dec
int
xchg
aam
clc
dec
rorl
pop
aas
push
or
icebp
adcb
jmp
inc
cmp
popf
pop
or
out
in
out
jbe
lret
xchg
mov
pop
movsl
repnz
ds
arpl
pop
fcmovnb
adcl
add
insb
cmp
mov
es
rcrb
xchg
dec
dec
lds
adc
mov
add
inc
ljmp
stc
fdiv
cmp
jbe
fbld
pop
stos
mov
jbe
sub
inc
fsubl
es
cmp
fcmovnbe
js
jno
inc
cld
mov
mov
adc
insl
and
xchg
rorb
push
mov
pop
js
mov
mov
loopne
xor
and
pop
and
xor
pop
adc
outsl
cmc
lods
jno
pop
mov
dec
fsts
xor
cli
cli
mov
adc
or
mov
push
pop
into
or
and
cltd
mov
cld
inc
sar
dec
mov
outsb
sub
xor
fdivl
out
int
test
or
pusha
jo
and
pop
mov
scas
shlb
fisttpll
push
shrb
clc
add
xchg
dec
xor
inc
es
call
les
cmp
ss
and
mov
mov
es
es
call
and
ss
adc
imull
insl
xchg
xchg
push
xor
mov
fimuls
cmpsl
iret
xchg
arpl
mov
cwtl
mov
cmp
xor
outsl
mov
mov
xchg
dec
shrb
inc
fcomip
mov
and
sub
lret
imul
jmp
jmp
or
or
daa
pop
loope
adc
adc
popf
movsl
out
mov
nop
imulb
xchg
js
push
or
push
dec
js
pop
fwait
pop
mov
test
bound
mov
out
out
mov
or
or
or
sarl
dec
movsb
and
mov
jg
into
mov
mov
adc
fsubl
dec
xlat
mov
inc
pop
sbb
fnstcw
push
scas
mov
cld
jnp
push
aad
aas
dec
jmp
add
jmp
mov
dec
cmp
cmp
sub
mov
sbb
ds
and
lret
push
xchg
mov
pop
mov
in
or
inc
fists
js
outsb
xor
or
cmpsl
or
adc
and
inc
movsb
imul
mov
mov
loope
or
mov
or
aad
call
xchg
push
addb
rcll
roll
lcall
pushf
xlat
scas
push
loope
cmp
les
pop
lcall
js
push
ret
cld
movsb
jno
push
out
lret
popa
mov
wbinvd
insb
cs
push
push
dec
int
inc
out
ja
jmp
pop
testl
sub
add
mov
inc
adc
xchg
stos
push
xor
pop
stos
jge
std
clc
or
inc
mov
hlt
xor
mov
call
sbb
cmpsb
mov
arpl
lahf
jmp
and
jbe
je
jbe
test
dec
jle
xlat
int3
dec
pushf
jecxz
and
loope
clc
and
aam
cmp
sub
nop
mov
lock
or
mov
push
cmpsl
or
int
sbb
ljmp
inc
aas
inc
pushf
test
cmp
aad
jns
orl
inc
fstpl
xchg
sub
sbb
jne
sbb
rol
add
ficoml
cmc
sbb
imul
sbb
rcl
xchg
jns
jmp
cwtl
mov
dec
lret
mov
mov
jle
add
add
in
loop
je
xchg
je
ja
loopne
mov
jae
push
add
jns
aas
ret
push
or
mov
mov
or
nop
jl
cmp
push
xor
test
std
push
sbb
or
fldcw
jecxz
stos
dec
jne
rorb
insl
pop
or
inc
sub
xor
cmpsb
push
stos
lods
xchg
pop
mov
out
or
mov
sbbl
cli
mov
mov
push
push
fwait
mov
xchg
imul
mov
orl
out
jge
lret
fwait
enter
mov
sbb
inc
xchg
inc
add
mov
push
sbb
rclb
push
or
in
mov
jle
push
insl
in
add
jl
dec
mov
lock
add
sub
fcoml
fdivl
test
fs
mov
add
roll
mov
sbb
jae
ficomps
fsts
mov
iret
mov
mov
jg
adc
inc
mov
imul
or
addr16
addr16
xchg
inc
mov
sbb
into
mov
outsb
sub
jo
lret
sahf
adc
mov
jns
push
add
jge
imul
mov
iret
sub
jae
mov
orb
xchg
lahf
and
jg
lret
xorl
call
sub
add
jns
imul
shll
lods
pusha
test
xchg
loope
leave
sbb
push
add
inc
rolb
or
popf
in
xor
test
mov
pop
xorl
aad
hlt
mov
insb
sub
xorb
xor
scas
jnp
test
add
push
insb
fyl2xp1
lahf
cmpsb
std
or
adc
scas
test
mov
data16
repnz
ret
inc
jno
pushf
or
cmp
ss
and
push
cwtl
test
popa
shl
or
ja
cld
push
data16
or
outsl
cmp
out
jae
std
sti
push
mov
jl
inc
fdivr
pop
shrb
pop
in
leave
loop
shll
or
out
or
aad
xchg
dec
out
xor
mov
cmpsl
out
cmpsl
sbb
cs
repnz
in
subb
mov
push
clc
mov
pop
and
cwtl
mov
jb
sub
mov
and
cmpl
mov
pop
into
xchg
mov
and
cwtl
mov
xor
ficomps
pop
dec
jecxz
iret
cmpsl
leave
jmp
stc
rol
int3
mov
fwait
cmp
mov
scas
jmp
test
adc
dec
arpl
insb
cmp
adcl
xor
mov
in
fdivrs
mov
mov
xor
fsubl
push
lcall
ret
test
leave
testl
outsl
lea
repz
dec
push
imul
xor
inc
dec
pop
xor
mov
outsl
or
in
adc
test
insl
scas
mov
arpl
inc
or
sub
sub
inc
mov
addr16
js
mov
push
imul
dec
and
jg
inc
mov
jbe
adc
gs
les
push
cmp
jns
add
outsl
cmp
jg
mov
jne
push
outsb
inc
and
or
xchg
mov
rolb
sub
mov
fsts
or
ret
jmp
int
lret
ja
in
ficoms
mov
pop
fidivl
cld
mov
push
jns
inc
decb
in
sub
mov
dec
dec
out
and
mov
pushf
dec
icebp
incl
test
mov
fcompl
mov
clc
dec
int
xchg
push
push
mov
in
mov
mov
jae
inc
and
push
xchg
stc
loopw
vpmacssdd
enter
pop
dec
jge
das
jle
dec
adc
clc
pop
shl
jle
pop
les
mov
xor
or
lds
notl
push
pop
fisubl
mov
inc
ret
pop
cmpl
mov
movsl
or
leave
movsl
shll
cltd
xlat
sarl
in
mov
scas
xchg
jns
jnp
scas
xor
mov
lahf
pop
mov
rcll
fsubl
lods
pop
inc
and
and
mov
aad
movsl
jl
ret
into
or
xchg
add
mov
je
inc
jmp
mov
cmp
xchg
das
shll
adc
inc
fldl
ret
dec
cmpsl
fnstenv
mov
jo
fwait
sub
mov
jmp
loop
aad
push
add
xchg
aas
loope
movsb
and
mov
mov
ret
shl
fidivrl
sti
repz
mov
repz
mov
or
mov
lock
xor
jns
mov
enter
stc
cli
int
enter
ficomps
pop
int
aad
mov
movsb
jne
push
cmp
out
ret
scas
push
lret
ljmp
into
mov
popa
push
out
or
jp
iret
lds
lds
mov
test
or
or
dec
outsb
dec
dec
sub
ja
scas
push
stc
adc
icebp
test
imul
aam
cmpsb
inc
int
adc
pop
xchg
xor
inc
lods
jbe
addr16
outsb
mov
adc
lret
pop
xor
mov
test
or
lock
in
movsl
movsl
lret
pop
xchg
jg
imul
lods
sti
lock
push
clc
sub
jns
fstpt
push
cltd
cmp
pop
add
cmpsb
test
pop
cmp
rcr
imul
jae
lods
les
sahf
es
cmpsl
push
scas
lds
jne
mov
mov
and
movsb
jmp
rorl
xchg
es
imull
or
sbb
leave
push
sbbb
lcall
cs
addb
push
xchg
decl
sbb
lods
lea
push
lret
mov
cltd
inc
adc
mov
and
mov
dec
in
or
psadbw
mov
mov
fldl
cld
add
xlat
insl
xchg
sub
sub
adc
pop
fdivrl
test
cli
int
ss
dec
jl
popa
sbb
sub
pop
in
mov
add
cmp
stc
inc
inc
dec
jno
test
mov
leave
sti
sub
xchg
pop
out
mov
fistpl
push
nop
frstor
or
orl
xchg
fsubrl
dec
adc
push
loope
fistpl
jns
int
out
xchg
push
adc
dec
and
int3
gs
icebp
mov
sahf
cltd
mov
inc
movsl
sub
mov
paddb
scas
cmp
outsl
or
push
test
and
rolb
rcll
clc
or
sub
cli
mov
mov
mov
cmp
sarl
ja
mov
lods
out
xor
jg
cmp
push
and
mov
lods
je
fimuls
roll
adc
mov
cwtl
xchg
stos
mov
inc
and
add
gs
fs
rcrl
mov
dec
adc
imul
loope
dec
inc
push
sbb
dec
repnz
sub
xor
cmp
xlat
mov
jge
sub
sub
lods
int
dec
lahf
std
mov
sub
jp
pop
jno
jne
mov
out
icebp
sub
lea
addl
adc
dec
sub
inc
pop
or
mov
sub
push
pop
aas
aad
cmp
sbb
dec
mov
cmp
add
rcrb
xor
jb
lock
jbe
clc
popa
pop
add
or
outsb
clc
pop
daa
les
jbe
and
iret
int
outsl
aaa
cmp
mov
add
daa
xchg
add
movsl
insb
xor
push
adc
hlt
test
in
adc
aaa
dec
lea
movsl
xor
lcall
xchg
push
nop
jo
xchg
sbb
dec
and
sbb
pop
movsl
push
dec
gs
popf
pop
in
dec
push
lods
outsb
and
movsb
mov
pusha
sarb
ja
pusha
pop
jo
add
mov
push
das
loopne
insl
call
xor
dec
add
aad
incb
cmp
push
mov
xlat
cmpsb
lcall
pop
leave
xchg
popa
add
aad
jg
aaa
xchg
lret
xor
and
inc
mov
mov
adcb
ds
mov
cli
adc
fsubp
lock
ss
scas
testl
enter
lcall
pop
fisubl
sub
xor
mov
mov
mov
daa
mov
jecxz
pop
aaa
pop
ficompl
sub
add
xchg
test
push
in
dec
mov
sbb
inc
adc
insb
inc
mov
xchg
adc
stos
push
clc
mov
adc
mov
adc
xchg
cld
adc
divb
push
xlat
inc
jecxz
xchg
inc
icebp
push
xor
fistps
cld
hlt
jp
cmp
test
rorl
push
arpl
fsubp
xor
dec
aas
fldl
jo
xchg
ds
mov
pop
adc
into
js
repz
jl
pop
test
pop
stos
or
sbb
stos
inc
xchg
push
es
je
xchg
xchg
or
add
or
mov
out
fmul
pop
iret
add
int
loope
mov
cmp
pusha
in
std
inc
sbb
push
test
jae
ss
imul
dec
or
sbb
loope
jle
xor
push
jbe
movnti
ds
push
les
and
xor
add
or
inc
dec
out
mov
dec
adc
jo
inc
insl
cmc
pop
hlt
fnstcw
inc
xchg
gs
mov
push
push
not
popa
jl
push
je
mov
pop
shr
jbe
xorb
cltd
xchg
xor
iret
daa
xor
dec
insl
mov
xor
and
xchg
pop
mov
adc
pop
arpl
dec
adc
dec
pop
scas
lods
mov
lret
add
and
dec
xor
jbe
jnp
rcrl
jno
mov
lods
addr16
fnstcw
lret
fs
xor
add
movb
lods
xor
or
xor
lds
xor
inc
jle
push
inc
roll
movsb
inc
mov
lods
sti
jmp
cmp
cmp
cltd
push
daa
and
sahf
add
dec
sbb
jo
fisttpl
loop
cmp
repnz
movsl
shlb
jno,pt
lahf
cmpsb
das
fwait
inc
sti
pop
dec
cmp
push
sub
mov
stc
gs
xchg
and
and
mov
scas
mov
and
fldenv
loop
pop
nop
stos
add
mov
and
mov
mov
stos
jnp
stos
inc
or
and
mov
in
aad
sub
leave
dec
dec
imul
push
out
sbb
jp
mov
insl
pop
je
popf
outsl
adc
popf
mov
test
mov
sbbl
aas
jge
scas
jbe
xchg
and
mov
sbb
out
cs
test
lock
sub
arpl
adc
cmp
and
mov
scas
pop
mov
repz
sti
pop
cmc
cltd
push
inc
push
in
scas
sub
pop
sbb
adc
stos
fs
fistps
inc
mov
js
test
stos
push
clc
leave
adc
add
paddusw
mov
insl
cli
inc
push
pushf
sbb
jmp
enter
and
leave
enter
lods
inc
cmpsl
stos
imul
mov
addb
mov
sub
cmc
xor
js
popf
add
push
xchg
jg
lret
or
inc
dec
std
mov
lret
sub
fwait
jbe
clc
push
popf
xor
out
adc
and
pop
nop
sub
dec
or
xchg
push
and
jl
dec
add
jle
jae
lret
lods
imul
pop
mov
shll
aas
push
inc
xchg
mov
bound
xor
dec
mov
fisttpl
xchg
sbb
inc
cs
push
pop
push
shrb
sbb
jae
cltd
pop
cmp
mov
icebp
fcoms
cli
lock
jle
pop
test
test
pop
leave
cld
stos
imul
mov
rcrb
push
jae
push
stos
out
mov
jge
sub
jp
enter
popf
sub
rorb
stc
adc
jmp
stos
test
lods
cmpsb
cld
imull
imul
aam
stc
cmc
lods
add
sub
push
and
mov
dec
shll
adc
call
xchg
das
jnp
adc
int3
jg
ficoml
out
xor
or
cmp
add
adc
shr
add
jge
cmpsl
clc
mov
pop
test
add
andl
icebp
ret
pushf
pop
iret
dec
cld
daa
mov
std
sbb
fnsave
lret
loope
sub
cmc
xchg
js
jb
add
mov
mov
outsb
rcl
sub
mov
shlb
sbb
into
mov
and
mov
lret
mov
sub
jmp
pop
fdivrs
and
movsl
xchg
push
sbb
clc
movsl
test
xchg
ret
popa
lods
xchg
std
in
pop
sti
in
cmp
cltd
sub
jae
cltd
pop
data16
subl
into
and
adc
pop
mov
or
cltd
cmpl
hlt
lcall
stos
adc
dec
dec
jbe
pop
aaa
push
sbbl
xchg
cmp
aas
mov
adc
repnz
fcmove
loop
mov
add
push
dec
inc
cmc
jae
in
fldcw
and
fimuls
push
stos
cmp
movsl
push
lret
aad
xchg
dec
dec
shrb
test
jle
sub
test
and
movsb
arpl
rclb
mov
xchg
and
pop
xchg
sbbl
imul
jmp
rol
int3
cli
jns
sbb
test
loope
sbb
push
jb
imul
jno
fldenv
adc
cmp
jl
inc
subb
imul
jge
inc
push
fdivr
pop
movsb
add
pop
inc
xchg
inc
pop
test
mov
je
mov
loope
pop
jg
or
cmc
mov
xchg
xchg
fdivrs
mov
into
shrl
dec
movsl
in
pop
ret
sub
jne
enter
fldt
sub
or
incl
fwait
rol
pop
xor
gs
xchg
das
cmpb
in
xor
jecxz
cmp
fisttps
cmp
inc
push
sub
cld
push
mov
inc
pop
stos
xor
pop
push
cmp
or
lock
push
dec
test
jge
fsub
mov
aas
out
stos
cmpsb
jae
and
sub
jbe
jno
adc
mov
mov
hlt
inc
jnp
jle
push
xchg
std
lods
sub
pop
iret
inc
insl
hlt
ljmp
xchg
cwtl
cmp
inc
jg
adc
jmp
out
sahf
inc
mov
sbb
push
cmovp
repz
push
or
idivb
mov
jp
mov
subb
or
sti
cmp
pop
movsb
fmull
clc
andb
mov
jb
inc
ss
and
xchg
cmp
or
pop
mov
mov
xor
hlt
mov
gs
cs
add
xlat
sbb
xchg
inc
add
jecxz
mov
aas
jecxz
rcrl
mov
mov
les
subb
daa
adc
inc
cmp
call
stos
cmpb
inc
xchg
xchg
aas
cli
cmp
popa
sub
ljmp
jg
fmull
xor
ret
pop
fistpl
aaa
mov
les
xchg
in
xchg
daa
into
inc
jecxz
cmc
inc
cmp
push
fs
dec
test
call
inc
mov
pop
mov
out
loope
mov
pop
cld
dec
outsb
shl
or
lahf
mov
dec
mov
fisubrs
jbe
iret
pop
mov
xchg
rclb
sub
xlat
movsb
add
std
bound
loopne
repnz
loopne
ds
pop
push
out
sbb
repnz
test
xchg
cmp
jb
mov
inc
pushf
xchg
add
lea
addr16
and
testl
pop
ffree
cmpsl
pop
inc
inc
and
arpl
outsb
jecxz
or
mov
addl
jle
lds
sarl
or
mov
sbb
add
add
punpcklbw
sub
jecxz
add
inc
mull
pop
push
or
push
enter
sbb
rorb
sbbb
scas
sbb
mov
xchg
mov
enter
mov
out
lahf
cmp
jecxz
in
xlat
adc
dec
fwait
addl
js
imul
mov
xor
push
xor
cld
xchg
dec
jno
adc
sub
into
out
dec
lcall
shl
lcall
fsubs
out
rolb
push
adc
pop
jbe
xorb
sbb
out
lahf
pop
sbb
bound
pop
lret
aas
or
mov
daa
push
mov
jnp
jo
pop
jecxz
ljmp
cs
mov
divb
cli
xlat
mov
and
mov
in
scas
inc
lret
xchg
xchg
mov
in
fldcw
sbb
adc
inc
mov
xchg
in
inc
icebp
ret
mov
dec
fcoml
icebp
in
xor
ftst
out
gs
xor
ja
out
mov
add
inc
out
mov
mov
cwtl
add
mov
lds
insl
sbb
aad
pop
lods
xor
js
mov
sub
sub
pop
mov
mov
mov
jbe
fs
movsl
pop
movsb
out
addr16
sbb
cmpsl
or
jo
dec
sub
decb
xor
insl
or
mov
jno
faddl
sub
dec
pusha
lret
push
stc
pop
mov
lahf
loope
pop
lret
push
mov
mov
or
or
scas
cmp
push
jecxz
mov
fidivs
sub
adc
push
insb
inc
jmp
pop
decl
enter
xchg
adc
outsl
in
and
push
sbb
mov
add
call
cmc
and
push
loop
or
inc
xor
outsb
add
cmc
rcrl
mov
movsb
addr16
jbe
inc
dec
cmp
sbb
filds
ljmp
pop
jbe
loope
mov
inc
jns
push
mov
mov
shrl
mov
in
sbb
pop
xor
ret
inc
mov
xor
sbb
cmp
pop
icebp
push
out
iret
addr16
mov
inc
mov
imul
pop
addb
cmp
pushf
sti
mov
sbb
mov
neg
xor
add
ja
mov
outsl
adcl
in
xchg
imul
pushf
mov
dec
sub
cmp
adcl
sbb
sti
aam
mov
sub
push
pushf
xlat
lcall
sarl
pmulhw
and
es
adc
mov
sbb
nop
ret
mov
clc
mov
add
inc
mul
mov
sbb
push
push
push
ljmp
decl
rclb
inc
push
cmp
movl
inc
xchg
xor
sbb
sub
pop
loop
jge
stos
xor
jl
cs
into
sbb
sub
test
mov
and
sub
subb
or
jb
sbb
into
loope
pop
push
jb
sbb
out
sub
fdiv
leave
push
cld
insb
jns
xchg
loope
mov
dec
cmp
sarb
les
pop
adc
clc
push
pushf
xor
jb
mov
mov
pushf
into
and
mov
pop
pop
clc
pop
jo
xchg
cli
cmp
fcmovnb
cmpsb
add
popa
daa
mov
and
cltd
rcl
int
scas
add
lea
cli
orl
test
cwtl
lods
jns
test
xchg
lret
popf
not
lock
inc
cmp
mov
imul
lock
jge
sub
mov
mov
pop
nop
test
fmull
sub
cmp
mov
shl
sub
cmp
mov
pop
inc
shlb
subl
mov
xchg
adc
orl
xchg
rolb
xchg
ret
push
xlat
in
mov
movsb
dec
xchg
ret
pusha
rcll
loope
jl
sbb
int
xor
popa
das
cld
loopne
mov
daa
stc
ds
push
push
xor
adcb
mov
aad
sub
rorl
les
pop
jge
movsb
pop
std
mov
cmp
lret
add
pushf
jmp
bound
hlt
fwait
add
cmpsl
pop
pop
mov
mov
lods
jnp
or
negb
hlt
adc
dec
pop
ret
pop
rclb
jl
pop
nop
sbb
mov
mov
leave
aad
mov
push
mov
bound
add
add
cli
xchg
in
xchg
sbb
test
mov
cmp
in
lock
nop
das
pop
jp
lds
jge
adc
push
inc
pop
and
xchg
andb
fcmovnbe
sahf
push
arpl
ss
adc
xchg
dec
in
xchg
push
inc
aas
loopne
adc
jmp
mov
aad
jmp
jnp
jbe
jl
and
scas
sbb
nop
dec
icebp
in
dec
mov
push
fsubrp
in
les
sbb
aas
pop
ret
fldenv
xchg
inc
cld
mov
fdivr
mov
cmp
xchg
mov
sbb
jge
dec
add
inc
push
xchg
nop
jle
dec
mov
ljmp
pop
mov
test
add
and
cwtl
xchg
xchg
das
inc
addr16
mov
pusha
cmp
or
test
cltd
dec
xor
lcall
push
xor
mov
out
sbb
int
std
inc
jns
das
pop
das
xchg
mov
arpl
pop
cmpsl
xor
push
sbb
push
add
iret
lcall
jge
les
aaa
insl
sbb
adc
jl
cltd
inc
mov
enter
jbe
inc
lahf
in
pop
inc
icebp
inc
jmp
adc
push
hlt
xor
pop
in
mov
pop
cmp
dec
sbb
cmp
xlat
mov
and
pop
loopne
movsl
das
pminsw
stos
into
sbb
add
in
out
push
cmp
push
imulb
jp
mov
mov
cld
loopne
xor
std
inc
xchg
sbb
pop
rorb
test
fmull
xor
out
fwait
pop
stos
mov
add
mov
and
xor
xor
fsub
lcall
push
cmp
mov
jl
popf
fldl
test
nop
xchg
arpl
pop
cmp
adc
movnti
mov
dec
cmp
dec
mov
cltd
ret
data16
dec
xor
pop
lods
inc
xlat
stc
inc
xor
jge
cmp
sub
mov
nop
das
ret
push
fldcw
mov
stos
jno
fucom
pop
push
inc
push
adc
mov
jecxz
mov
imull
mov
jno
cmpsl
dec
inc
jle
in
sbb
in
daa
mov
sub
sbb
mov
es
clc
and
repnz
mov
loopne,pt
aad
hlt
das
jne
pop
loop
jecxz
cmp
dec
jecxz
push
cmpsl
test
cmp
mov
mov
leave
or
mov
mov
push
adc
adc
insb
jmp
mov
repz
leave
cmp
dec
out
daa
ret
cmp
mov
test
pusha
rcll
aad
hlt
sbb
inc
push
push
xchg
repnz
and
shll
xchg
and
sarl
xchg
negb
test
mov
push
push
push
stos
xor
sbb
push
sub
arpl
inc
xor
jle
out
hlt
adc
stos
xchg
jg
out
iret
mov
sub
mov
mov
push
bound
xchg
adc
mov
jae
and
jecxz
dec
enter
push
pop
mov
ret
fsubrp
ret
and
rorb
rolb
sbb
and
mov
or
out
mov
movsl
jbe
fidivs
xchg
cmpsb
jo
addr16
sub
movsl
fwait
mov
stc
push
lods
dec
test
add
test
scas
adc
and
stos
dec
rcr
cwtl
in
add
xor
lret
ljmp
push
les
js
fwait
sub
pop
int
lahf
movsl
les
sbb
pop
push
add
add
fisttpl
cmp
dec
into
xor
js
sbb
lret
cmp
bound
lods
jp
lock
test
or
fmulp
push
fs
and
sbb
jmp
jne
sub
mov
adc
iret
scas
lea
sub
mov
stos
mov
pop
flds
push
imul
dec
mov
jb
jecxz
dec
sub
aas
cli
xor
push
sub
jns
das
adc
dec
enter
sub
loop
push
call
movsb
jmp
add
cmc
mov
xchg
mov
in
inc
mov
data16
fnstcw
cmc
xchg
cltd
jns
cmp
inc
leave
mov
mov
jmp
test
lret
out
jb
push
jmp
popa
sub
inc
sub
insb
xor
cmpsl
pop
imul
ret
nop
or
fstpl
in
mov
mov
adc
je
jp
fcompl
jecxz
pop
or
inc
and
pushf
push
xchg
jbe
insb
loopne
sub
aam
loopne
in
mov
inc
inc
fwait
dec
pushl
and
enter
out
push
mov
dec
pop
and
xchg
fcomi
mov
in
cmp
lods
in
push
jecxz
repnz
mov
outsb
pushf
lea
cltd
mov
pusha
test
push
xchg
subb
es
jae
pop
popl
or
pop
scas
jo
push
pop
rcr
fidivrs
sub
or
xchg
insl
scas
sahf
pop
cmpsl
jecxz
ss
out
fsts
jl
divb
adc
jl
and
or
mov
aad
dec
sbb
sbb
ds
stos
sahf
movsl
stos
mov
clc
test
push
xchg
repnz
xchg
test
jp
sahf
js
popf
mov
pop
dec
cmp
cmp
jge
push
push
adc
mov
push
test
and
out
nop
data16
clc
divb
xor
jno
mov
jmp
xchg
lods
cmp
out
cmc
sbb
jp
push
adc
xlat
movsb
mov
in
adc
lea
xor
mov
nop
or
in
push
pop
inc
mov
gs
lret
test
cld
xchg
mov
adc
lds
popa
repnz
cmc
add
xchg
sbb
dec
inc
sub
xchg
adc
inc
rclb
mov
sub
jle
jge
idivb
loopne
sbb
jmp
push
jmp
push
pop
add
loop
pushf
or
clc
push
jp
shll
push
std
jae
cmp
pusha
push
cmp
int3
jnp
ror
fwait
and
fmulp
pop
sub
lret
mov
rcr
push
jmp
lret
mov
mov
jge
xchg
mov
pop
inc
inc
xchg
push
hlt
insl
mov
sbb
js
scas
filds
pop
enter
out
hlt
xchg
push
sub
ret
out
test
push
xchg
mov
fwait
push
sub
mov
rorb
out
enter
inc
inc
and
push
mov
pop
inc
or
jo
add
fistl
je
jecxz
cmpsb
test
insb
test
xor
dec
mov
xchg
negl
and
mov
mov
pushf
aaa
scas
insb
xchg
insl
and
inc
inc
ret
mov
lods
call
xchg
leave
mov
push
das
add
jo
sub
push
out
cmp
popa
int3
jnp
repnz
or
push
arpl
add
mulb
sbb
mov
cmp
push
or
xor
test
stc
rcl
pop
cs
loopne
sbb
movsb
js
xorl
lret
insl
rcr
out
and
ljmp
dec
inc
xchg
pop
lods
imul
xchg
mov
jecxz
mov
push
jecxz
rolb
cltd
mov
add
xchg
mov
or
mov
pop
lea
sbb
int3
test
movsb
mov
sub
jb
pushf
dec
mov
pop
add
xor
jge
cmpsl
adc
bound
lock
push
repnz
pop
lahf
xchg
stos
testl
in
out
xchg
add
xor
in
push
cmp
mov
outsb
push
ljmp
xor
adc
fldcw
ds
fnstsw
sti
aam
sbb
addr16
cmp
or
inc
inc
xchg
dec
mov
inc
fistpl
dec
insl
pop
lcall
xchg
pop
sbb
cmp
in
insl
inc
sub
test
je
fs
cld
jnp
or
add
mov
mov
mov
stos
lcall
pop
mov
das
aas
faddl
bound
inc
adcb
lods
sbb
push
inc
dec
je
xchg
scas
stc
xor
jae
jns
push
xor
cmc
add
push
dec
in
insb
push
push
test
push
push
mov
lods
pop
cmp
xchg
add
mov
fsubp
lods
int
movsb
add
enter
sub
loope
mov
inc
lods
fdivrp
push
and
insb
les
push
icebp
out
outsb
subl
pop
in
or
popf
ds
out
mov
mov
xlat
sahf
les
mov
ss
cmp
scas
popa
int
cmp
and
ret
pop
out
jno
fisttpll
std
int3
adc
inc
xchg
or
mov
std
or
shlb
jns
push
xor
insl
insb
pop
inc
xchg
jg
ds
dec
pop
adc
mov
xor
sbb
dec
sbb
xor
cmpsb
ret
cmpsl
mov
cwtl
ljmp
mov
sbb
test
rorb
repnz
adc
cld
adc
pop
xor
jl,pn
popa
loope
cmp
mov
inc
lds
sbb
lea
mov
push
jg
int
rolb
dec
imul
xchg
inc
adc
lahf
inc
les
cmp
aad
test
inc
push
ret
or
sub
repnz
out
leave
ss
lds
add
js
std
and
inc
jns
jle
test
iret
adc
adc
inc
cs
jae
pop
cmp
mov
mov
mov
in
scas
add
inc
push
inc
xor
dec
pop
cld
movsl
rorl
data16
arpl
test
clc
sbb
mov
sbb
push
cmc
imul
in
pop
lea
mov
mov
out
jbe
sbb
adc
cld
push
scas
adc
loopne
sub
dec
mov
in
cmp
pop
and
sub
lcall
lahf
sub
outsb
not
push
mov
cld
add
pop
mov
scas
sbb
in
scas
fsubl
pop
jb
arpl
add
mov
sbb
iret
inc
pushf
stos
or
jnp
mov
push
sti
mov
mov
cmp
push
test
pop
ror
cld
or
xor
stos
movsl
mov
sub
cltd
jns
fsub
mov
out
in
scas
push
in
hlt
mov
imul
aam
int
lods
mov
or
lock
pop
mov
push
shll
leave
gs
je
shr
push
out
js
mov
rolb
aaa
pop
mov
lea
or
gs
dec
stos
pop
addr16
fs
stc
xor
jbe
addr16
sbb
mov
mov
jecxz
mov
push
je
push
movb
sahf
jae
rcrb
dec
pushf
dec
aas
fnstcw
jae
jnp
leave
fs
jg
in
cltd
stos
inc
int3
in
sub
cmp
jb
repnz
jns
xor
arpl
dec
cld
dec
in
sahf
mov
sub
es
gs
out
gs
xchg
jbe
lret
push
xchg
dec
sub
cmp
cmp
jl
mov
mov
mov
loope
xchg
cmp
nop
jg
fdivl
sahf
sarb
iret
test
sub
lahf
xchg
mov
xor
xchg
loop
rcrl
xor
lcall
imul
push
push
popf
and
pop
fistl
std
imul
aad
fmuls
mov
lahf
das
lcall
xchg
fsubrp
add
adc
cwtl
mov
push
ficoml
lods
jnp
lods
cs
out
lret
dec
mov
dec
pop
add
divb
and
pushf
scas
or
out
pop
fmuls
fcoms
push
movl
cltd
mov
push
outsb
pop
sbb
aad
push
sbb
cwtl
je
inc
in
scas
xor
add
xchg
and
push
pop
inc
fstpl
ret
imull
daa
cs
dec
out
lods
dec
pop
mov
mull
loop
in
xor
inc
sahf
jb
cmp
iret
imul
inc
rcl
cmpsl
clc
aam
movsl
xchg
imul
stos
add
fiadds
popa
cmc
testb
inc
loope
dec
js
outsl
jp
sbb
xorb
out
or
scas
sti
adcb
xchg
and
cmp
push
je
repnz
mov
and
daa
cmp
fisttps
push
jns
daa
dec
mov
test
sub
ss
push
dec
fwait
enter
xchg
lds
lcall
add
mov
jle
subl
loop
sbb
cld
cmc
js
dec
lahf
push
imul
imul
mov
xchg
jmp
jo
sbb
movsb
aaa
or
jge
iret
jnp
cmp
cmc
pop
cltd
aam
pop
sub
rcrb
adc
repz
out
pop
or
adc
sbb
and
mov
out
inc
push
std
mov
cli
dec
jge
adc
outsl
cmpsb
mov
push
icebp
lret
in
jne
out
mov
sbb
outsb
and
dec
inc
bound
imul
in
pop
jbe
inc
cmp
and
imul
cmpsl
pop
leave
inc
pop
loopne
ret
adc
mov
jnp
outsb
test
and
jo
out
adc
pushf
dec
ds
int
pop
adc
jge
push
push
mov
iret
xor
sub
push
in
cli
push
sbb
int3
je
scas
jb
adc
dec
es
xor
imul
mov
pop
int
push
imul
enter
call
lea
scas
mov
xchg
sbb
cmpsl
mov
stc
lods
popa
sarb
push
mov
cmp
pop
sbb
sbb
inc
sbb
sub
subl
dec
cwtl
mov
dec
ret
and
movsl
or
pop
xchg
js
pop
sbb
lea
imul
arpl
xchg
enter
decb
imul
dec
and
lret
xorb
repnz
jl
fwait
mov
nop
lret
inc
out
outsl
in
push
fcmovne
bound
addr16
jecxz
cmp
dec
fiaddl
scas
ret
subl
aaa
cltd
add
or
ficomps
scas
mov
pop
sbb
dec
dec
outsb
js
push
aas
mov
and
stc
adc
int
mov
mov
mov
mov
and
and
xchg
jo
test
fs
scas
push
inc
and
or
lahf
int3
mov
rorb
jns
test
rcrb
jae
test
outsl
outsb
mov
out
add
push
xlat
mov
push
pop
int3
inc
sar
in
pop
aas
jnp
gs
stc
outsb
ret
fwait
push
lahf
cmp
data16
shlb
sbb
aad
incb
push
daa
cmp
inc
data16
pop
arpl
insl
inc
xchg
call
gs
mov
cmpsl
jge
stc
jg
hlt
mov
sbb
fsub
push
cltd
movb
dec
mov
push
adcl
xor
mov
cmp
inc
imul
mov
out
andl
cmp
and
sti
rolb
mov
and
out
pop
add
adc
xor
orl
mov
mov
imul
mov
xor
dec
out
inc
rorb
test
xchg
sbb
mov
jl
xchg
mov
out
dec
imul
out
sub
xchg
pop
adc
pop
inc
jnp
push
xchg
pop
push
mov
in
add
imul
aaa
mov
xor
add
push
stc
in
out
cmp
imul
lret
push
push
rorl
out
or
mov
add
pop
test
push
and
out
lret
cmp
fs
pusha
or
mov
cli
aas
or
sub
adc
fisubrs
add
or
xor
mov
sbb
cmpsl
sub
lods
mov
lret
push
mov
mov
sbb
das
add
aad
in
test
jl
jmp
loopne
stos
les
enter
and
daa
out
repz
mov
out
xchg
push
nop
mov
jne
pop
sti
sbb
xor
loope
lods
pop
cmp
sub
int3
clc
mov
lret
fnstsw
mov
mov
cmp
shll
pop
mov
jo
fildl
pop
dec
movsl
mov
in
add
shlb
inc
push
sbb
sbb
lds
pop
mov
cld
stc
pop
cltd
pop
add
push
icebp
xlat
out
adc
aas
sbb
push
push
xchg
cs
shlb
les
adc
fistps
mov
repz
sub
xchg
cmp
sar
mov
lds
and
aaa
bound
in
out
jecxz
lret
movsb
dec
dec
sub
idivl
jae
mov
pop
repz
cmpb
roll
in
lahf
scas
pop
xchg
ja
mov
cmpsl
jnp
push
pop
in
fldenv
mov
icebp
inc
push
mov
push
call
jle
pop
fdivrs
popa
icebp
push
pop
test
adc
incb
sbb
and
xchg
js
and
stos
mov
xor
push
out
ror
add
fcompl
cli
sahf
daa
xor
aas
push
daa
sbb
and
jae
stos
push
shlb
adc
mov
jno
cwtl
and
lea
jl
cmp
loopne
mov
sbb
inc
and
lods
jecxz
and
negl
hlt
ja
dec
jmp
outsl
movsb
or
mov
mov
sarb
leave
rcrb
fwait
xchg
loope
in
mov
xchg
pop
cmp
fwait
or
stos
or
test
loop
shll
push
jb
jge
push
pop
in
dec
fsubs
xor
ret
mov
imulb
push
test
and
dec
test
and
pop
cmp
or
jns
dec
mov
in
repnz
aas
decb
add
cltd
mov
sub
jg
stos
add
cmpsb
imul
dec
loopne
sbb
fisttpl
fwait
cmp
cmp
lds
and
inc
lock
jbe
xchg
push
repnz
imul
adc
jno
mov
xchg
cmp
sub
mov
loope
dec
push
or
pop
xor
repnz
rorl
push
repnz
and
ret
je
sub
adc
repnz
or
pushf
xchg
jae
or
jmp
push
mov
sbb
xor
pusha
imul
repnz
fdivrl
jg
cmc
jns
push
pushf
xorl
movsb
icebp
xchg
push
cwtl
jns
push
add
in
aaa
adc
and
test
js
jmp
mov
mov
pop
mov
daa
call
push
pop
or
mov
pop
add
mov
mov
xor
adc
xchg
jle
jmp
ret
loop
xor
add
movsb
push
jae
jae
pop
in
mov
cmpsl
fdivs
mov
cmp
dec
mov
push
inc
sbbl
push
cs
rcr
fildll
repnz
or
jmp
aas
mov
nop
arpl
cs
lods
push
dec
je
sbb
dec
cmpsb
shl
pushf
cmpsb
mov
sub
ss
mov
mov
mov
test
cmpsb
add
aam
out
inc
dec
push
test
fisttpl
ja
adc
mov
pop
mov
pop
dec
inc
jge
adc
mov
jecxz
dec
jb
dec
pop
mov
inc
lds
mov
or
fistps
mov
jne
adc
leave
je
iret
fidivrl
nop
iret
rorb
adc
pmulhw
pop
std
nop
push
cmpsb
aas
pop
cmpsl
inc
fisubrs
xchg
sub
adc
jb
out
push
mov
mov
sub
outsb
push
fs
or
fildll
pop
sbb
inc
or
and
jb
mov
cmp
add
sub
jae
xchg
std
leave
push
mov
loopne
mov
add
xchg
mov
addr16
aas
or
pop
sbb
pop
fdivrp
outsb
cmpsb
and
dec
shlb
aas
inc
lds
push
in
mov
mov
mov
pop
in
movsl
jecxz
ljmp
imull
out
and
push
and
cmc
stos
dec
je
or
add
enter
imul
cli
jne
pop
xor
mov
mov
mov
pop
push
and
xor
idivl
and
fmull
pop
dec
jle
les
fcmovnu
and
lret
test
adc
pop
xor
xchg
scas
jecxz
sub
mov
jmp
bound
mov
sub
cmp
sub
jge
jne
pop
call
aas
pop
xlat
mov
mov
inc
rcll
shlb
fnstenv
in
shrb
insl
inc
pop
pop
cmp
push
xor
ret
pop
mov
xchg
push
in
mov
int
mov
adc
dec
sarb
aaa
xor
cwtl
and
adc
push
mov
pop
enter
fstps
jg
into
xchg
test
inc
iret
mov
std
pop
inc
cmpsl
ss
bound
stos
sub
jecxz
mov
sbb
jmp
nop
and
adc
xchg
movsl
dec
xlat
sbb
cmp
mov
xchg
mov
shl
fadd
inc
dec
mov
inc
add
add
push
je
test
fadds
lcall
fnstcw
ljmp
ret
and
dec
jae
test
pop
mov
sbbb
dec
adcb
push
xor
and
push
into
mov
mulb
shl
js
pop
push
rcr
popf
sbb
pop
les
lea
push
add
add
ja
rcll
jae
popa
mov
data16
mov
push
fs
jb
cs
scas
push
push
test
scas
pop
scas
outsb
mov
mov
pop
cmpsb
popl
jo
xor
mov
cmc
xchg
inc
imul
cld
dec
stos
or
test
mov
lahf
ret
pop
inc
ficompl
xchg
adcl
ret
aaa
mov
dec
and
sbb
mov
into
mov
mov
adc
cmp
outsl
mov
test
mov
adc
sbb
jecxz
pop
fdiv
and
dec
int
mov
roll
fs
and
cmp
test
lock
mov
pop
js
pusha
push
stos
iret
repz
mov
popf
push
push
dec
aas
enter
jbe
shrl
inc
shrb
ja
inc
repnz
movsb
mov
xchg
mov
sub
fstpl
adc
jnp
cli
push
daa
sbb
xlat
push
sub
enter
jl
daa
xchg
adc
out
add
loope
fcomps
sub
push
xchg
push
scas
inc
aaa
fiadds
shll
push
push
inc
sub
data16
cmp
scas
xor
aad
xchg
das
adcl
pushf
xchg
sahf
mov
mov
out
ljmp
ljmp
das
out
dec
js
fbld
mov
push
bound
insb
popf
push
add
cld
loop
push
test
sub
daa
dec
mov
or
adc
xchg
inc
xchg
mov
ret
and
ficompl
mov
daa
lret
or
loopne
push
and
inc
std
jns
xchg
rorl
inc
push
push
mov
rcll
negl
cmp
sub
cli
std
hlt
sub
mov
imul
mov
inc
sbbb
mov
jne
test
mov
leave
push
sbb
and
insb
fcomps
and
inc
pop
repz
xchg
aaa
pushf
sbb
adc
mov
je
or
sbbl
test
sub
adc
inc
mov
sub
movsb
sbb
mov
jp
ret
push
stc
mov
jb
in
fsubs
and
push
dec
cltd
popf
int
mov
ret
push
xchg
jecxz
mov
add
xchg
ss
cs
pop
sar
pop
mov
out
pop
movsl
fisttpll
inc
stos
pusha
movl
cmpsb
mov
lahf
push
jp
imul
ljmp
xchg
dec
ficoml
mov
inc
aam
cmp
lods
scas
adc
add
jb,pn
fldcw
cwtl
lock
outsl
gs
iret
scas
insl
pop
xchg
dec
pop
jecxz
jl
jmp
jl
in
pop
outsb
adc
push
jbe
xor
push
adc
mov
bound
stos
fimuls
cmc
or
mov
imul
daa
lret
addl
xchg
jp
mov
mov
out
data16
and
jnp
cmp
shlb
setae
stos
cld
sub
push
inc
add
arpl
xor
sbb
movsb
aam
mov
inc
sub
cltd
das
sub
icebp
xor
cli
jnp
jo
aad
inc
insb
inc
clc
leave
push
mov
xor
cli
loopne
les
movb
fs
cmpsl
jecxz
out
add
and
fsub
cld
out
in
adc
adc
mov
loope
xchg
push
jle
pop
push
pop
sub
mov
pop
inc
adc
nop
jns
stos
lods
mov
icebp
pop
push
test
sub
test
push
bnd
cmp
mov
add
loope
insl
test
ja
lods
cs
fistpll
sub
or
sbb
jmp
add
test
cmc
xor
cld
xor
loop
lcall
shr
inc
lds
shlb
jp
push
icebp
sub
pop
xchg
scas
stc
test
ljmp
mov
popf
frstor
cmp
call
aam
adc
nop
inc
mov
test
mov
and
out
out
imul
mov
rcrl
fs
inc
cmpsl
in
add
xlat
mov
out
mov
mov
xor
mov
and
data16
xchg
cmp
xchg
pop
pop
adc
push
or
cs
pop
jecxz
push
ss
inc
mov
jns
inc
sbb
dec
xchg
push
in
shrd
lret
xor
gs
cli
stc
cmpsl
fisttpll
adc
sbb
repz
pop
jb
mov
add
push
push
pop
jge
stos
cltd
ret
inc
popf
cli
push
jecxz
jnp
popa
leave
aam
lods
jmp
xchg
sub
pop
loop
cmp
mov
arpl
and
sub
lds
outsl
add
mov
cmpsw
dec
and
mov
data16
xchg
jbe
cmpsb
das
adc
insl
aam
shr
mov
sub
mov
in
shll
inc
push
fidivs
int3
mov
lods
and
andb
adc
adc
xchg
aaa
into
mov
xor
mov
mov
push
push
sub
xor
pop
dec
pop
dec
push
pop
or
lds
addr16
xchg
lea
insb
xchg
ror
nop
xchg
lock
into
aas
movsb
pop
stc
cmpsb
inc
stos
xchg
gs
mov
lds
icebp
insl
stc
lods
dec
mov
sub
and
and
shll
es
ljmp
out
and
enter
pop
outsb
aas
ss
add
pop
xchg
scas
adcb
inc
sub
inc
add
lret
cmp
aam
adc
aas
daa
fs
cmp
out
mov
aaa
lods
aas
sahf
adc
fistpl
lods
mov
fdivrp
xchg
xor
sarb
cmp
fidivrs
into
test
dec
xlat
mov
inc
xor
int3
and
jg
or
xchg
and
mov
in
shll
faddl
xorl
or
sub
pushf
xlat
cltd
mov
xor
sbb
lods
cmp
pushf
and
xchg
test
and
xchg
push
cmp
mov
mov
push
xchg
jl
mov
divb
inc
xchg
jl
adc
mov
pusha
test
dec
pop
imul
pushf
xor
xor
js
add
mov
out
xchg
and
jae
leave
pop
mov
sbbb
out
test
ret
aad
mov
dec
stos
mov
ret
push
negb
fistl
jns
shl
lea
and
mov
cmp
jno
addb
xor
mov
test
pushf
or
pop
dec
lea
sub
mov
push
fiadds
inc
mov
rcrl
divl
repz
add
dec
cmp
push
xchg
cmp
pop
int
xchg
push
add
jle
inc
emms
arpl
fnstcw
int
bound
add
bound
mov
cs
ret
fldz
adc
call
xor
out
xor
sub
cmp
stos
mov
pop
sbb
popa
dec
mov
sub
repz
cli
cmp
inc
lods
xor
repz
inc
in
lret
lahf
pushf
fildll
test
jo
mov
push
outsl
push
dec
cmp
lret
dec
or
push
dec
push
push
dec
xchg
inc
mov
xchg
xor
fldenv
fs
xchg
loop
pop
sbb
cmp
mov
jmp
xchg
xor
std
inc
sub
sub
das
pop
aas
mov
nop
cpuid
inc
arpl
mov
push
jl
imul
dec
daa
int
sti
cmp
imul
or
loop
ss
xchg
push
lock
xchg
scas
adc
jmp
fs
incl
dec
frstpm(287
enter
dec
add
repnz
repnz
jge
lcall
les
mov
js
leave
testb
das
in
jl
sub
adc
repnz
or
and
jecxz
push
push
ret
shlb
aas
int
arpl
sub
mov
jge
outsl
mov
repz
test
arpl
mov
test
inc
nop
xor
out
push
cmpsb
fbstp
out
shl
fcoms
mov
push
cmp
leave
das
cmp
call
shll
push
or
xchg
out
push
xor
inc
xchg
fdivrp
insb
ja
xchg
push
aas
cwtl
jecxz
sub
mov
pusha
divl
ljmp
in
push
test
rol
inc
mov
mov
cmp
add
xor
out
add
shl
push
mov
je
and
add
leave
test
cmp
mov
loopne
sbb
jg
and
leave
add
and
inc
adc
dec
invd
mov
or
adc
test
scas
mov
lds
pop
pop
cmp
nop
inc
mov
push
mov
divb
mov
push
cmpl
mov
cld
test
xchg
push
pop
cmpsl
inc
add
sub
daa
dec
dec
mov
nop
out
add
insl
mov
jnp
pop
and
mov
inc
xor
push
idivl
mov
sbb
fninit
cmp
nop
in
pop
or
dec
sub
jp
mov
cs
xchg
imul
push
enter
and
or
xchg
mov
mov
push
aad
insb
jno
jmp
cs
jnp
jns
int
std
push
xor
into
fisttpl
xor
mov
jno
push
jmp
gs
inc
fcmovne
out
arpl
pop
outsb
add
out
mov
push
roll
lods
and
loopne
sub
aam
setns
inc
adc
xchg
mov
mov
cmc
movsl
jb
imul
xchg
ficoml
jbe
pusha
test
mov
jp
and
mov
lock
xchg
adc
jns
pop
cmp
xlat
sub
std
ret
mov
sbb
and
orb
out
dec
shlb
ds
faddp
mov
inc
pop
mov
inc
xor
xor
cmp
mov
outsb
je
fimuls
mov
cltd
xor
xchg
jmp
xchg
sub
xorl
inc
pop
ficoml
push
pop
cmpsl
out
mov
nop
popf
push
mov
ret
shlb
cwtl
dec
lea
and
adc
or
test
das
cmpsl
and
mov
adc
imul
ret
push
in
insl
sbb
and
in
pop
bound
dec
mov
inc
add
or
sub
dec
cmc
adc
push
push
into
dec
mov
xorl
shrb
lret
mov
insb
cli
sahf
mov
cmp
int3
iret
inc
cmp
inc
mov
xchg
mov
jno
or
push
ds
dec
clc
pusha
iret
xchg
scas
pop
shlb
in
cs
ret
mov
xchg
popf
call
xchg
fldcw
dec
fwait
jbe
adc
adc
xchg
or
frstor
call
adcl
xor
jecxz
and
inc
daa
jp
dec
xor
incb
and
xchg
mov
out
or
inc
cwtl
dec
int
push
out
pushf
xlat
add
push
sub
mov
mov
aaa
and
or
xchg
xchg
stc
and
adc
fdivl
mov
lahf
mov
sub
sub
jne
xor
sarl
rcrl
jo
xchg
push
pop
and
push
pop
inc
sub
mov
mov
mov
mov
ja
test
pop
cs
jg
cltd
push
lds
addb
add
lods
mov
data16
inc
dec
push
fcomps
jmp
cld
dec
xlat
push
xchg
int
add
push
mov
mov
xor
inc
das
push
es
jb
ret
imul
and
lock
sbb
in
cld
xor
cmpsb
push
jno
inc
dec
movsb
sub
jne
mov
mov
lahf
imul
mov
aas
imulb
enter
cmp
sub
jnp
inc
adc
popa
sbb
jno
sbb
dec
mov
cmp
inc
imul
outsb
cmpsb
loopne
and
mov
adc
mov
or
enter
xchg
inc
outsb
sarb
lret
sub
adc
test
je
cmc
repnz
out
lret
jg
mov
push
pop
loope,pt
lods
aaa
or
and
dec
cmpsl
ja
sbbl
jae
xor
lods
jmp
mov
xor
add
dec
loope
cld
jmp
ss
jbe
mov
je
fs
mov
in
andb
cmp
ja
inc
jb
jae
pusha
insl
xor
xchg
jae
cmp
dec
sub
cmp
cmp
mov
or
cmp
test
insb
es
jnp
mov
pop
mov
push
jb
int
adc
mov
adc
mov
adc
dec
sbb
xor
jecxz
test
jae
jno
dec
mov
lahf
sarl
push
out
call
add
dec
mov
nop
xor
dec
jecxz
jmp
xchg
es
pop
sub
push
clc
sbb
add
inc
inc
insb
inc
mov
jle
movups
cmp
fistps
xor
fistl
mov
lds
sbb
imul
jns
bound
cwtl
clc
push
pop
mov
test
aad
mov
inc
jl
cs
fsubrl
add
inc
inc
mov
inc
das
daa
xchg
popf
inc
mov
ret
stos
imul
and
fucom
sbbl
xchg
repz
aam
pop
nop
test
inc
test
iret
outsl
mov
int
xor
daa
test
subl
shll
nop
push
gs
mov
or
or
test
jl
adc
inc
ret
xor
or
xchg
push
dec
jbe
out
call
mov
mov
push
mov
fsubrs
jp
lret
add
or
cltd
mov
lahf
fs
jg
adc
rcll
jle
insb
add
push
sti
mov
mov
inc
in
mov
cmpsl
jmp
movsl
push
or
les
sbb
fistl
jp
lret
sub
jg
cltd
out
std
jne
bound
maskmovq
idivl
sub
mov
cmp
cmp
sub
mov
outsb
or
mov
jno
pusha
loope
aam
xor
mov
in
addl
sbb
call
xor
mov
push
or
mov
test
xchg
in
dec
outsb
pop
inc
leave
inc
push
lock
pop
and
dec
pop
or
cmp
ljmp
and
adc
adc
stc
jg
enter
mov
sub
push
clc
inc
cmp
pop
sub
mov
sbb
cwtl
jmp
into
scas
ja
popa
or
js
pop
fists
test
jno
ds
mov
dec
je
test
mov
mov
push
cmp
jmp
jno
shrl
subb
mov
testl
jl
jbe
dec
lock
cmp
dec
push
mov
pop
push
inc
mov
cltd
das
cmp
sbb
adc
push
mov
cmp
ret
mov
jbe
jbe
decb
in
or
fisttpll
jmp
inc
sub
pop
xchg
shlb
sub
enter
dec
shr
push
loopne
popa
and
jge
fisttpll
mov
cmp
cmpsb
add
dec
movsl
int
subl
inc
mov
add
shll
mov
cmp
aad
sbb
pusha
cmp
jb
xchg
imul
das
or
jne
leave
in
pop
loope
jns
nop
sub
mov
enter
cld
out
cmp
xor
jecxz
sub
mov
fbstp
scas
imul
cmp
icebp
cmp
repnz
iret
lcall
lods
jne
adc
sub
adc
cmp
mov
mov
dec
ds
sarb
insl
out
mov
push
or
push
xor
sbb
sbb
stos
add
jmp
adc
imul
inc
in
pop
insl
mov
sub
push
add
push
inc
lods
mov
jg
push
lea
lods
sahf
cld
fs
dec
push
push
jo
icebp
repz
mov
or
testl
sahf
std
ja
adc
nop
mov
push
push
popf
cmp
xchg
into
fabs
adc
roll
xor
mov
in
xorl
or
cmp
or
shr
xor
and
imul
adc
mov
sbb
clc
pop
xchg
fs
roll
lods
daa
scas
pop
xor
test
jge
int3
push
mov
xlat
pop
mov
pusha
pcmpgtb
fstpt
pushf
lahf
mov
movsb
mov
jo
sub
push
fstp
xchg
int
pop
push
movsl
sub
dec
cmpsl
cwtl
push
sbb
call
push
out
add
int3
dec
pushf
ret
fisubrs
xlat
stc
inc
mov
ds
cmp
push
rorl
push
mov
mov
pop
mov
or
pop
push
insl
mov
enter
or
cli
xor
clc
icebp
mov
aam
shll
jae
inc
mov
mov
add
push
add
mov
es
int
dec
mov
jnp
sahf
xchg
adc
or
test
cmp
mov
fnsave
cmc
adc
mov
sbb
sbb
xchg
sub
pop
mov
shl
mov
lret
xor
dec
pop
xchg
and
shlb
jg
mov
out
in
mov
cmpsl
lock
arpl
test
pop
mov
push
arpl
call
sbb
bound
and
lret
or
pop
xor
loope
mov
insl
je
mov
daa
scas
xchg
sar
jecxz
and
int3
scas
xchg
mov
mov
or
pop
mov
and
gs
test
test
xchg
icebp
stc
imul
rcr
mov
shl
inc
jns
test
jmp
sub
xor
loopne
ds
jge
test
ret
sti
mov
out
and
jo
test
data16
icebp
xchg
jb
push
sarl
out
fisttpl
xor
ja
xor
pop
push
ficompl
push
pop
xchg
ret
out
pop
dec
mov
mov
mov
sbb
insl
jno
xor
and
cmp
lods
jge
mov
push
call
mov
pop
or
insb
push
xorl
clc
pop
mov
fisubrl
push
enter
repz
int
xor
lods
lret
jmp
add
pop
pop
ss
push
stc
xchg
jnp
push
dec
adc
test
stos
fists
xchg
mov
add
pop
or
insl
fwait
and
and
add
xchg
push
movsl
lcall
lods
cli
daa
lods
shrl
in
mov
cmp
push
fadds
xchg
into
stos
and
pop
loope
cmp
add
mov
ljmp
jns
add
sub
mov
dec
fcoms
stos
push
arpl
sbb
cmp
push
lahf
test
outsb
xorb
cwtl
and
add
sbb
sahf
mov
je
std
fs
or
fdivs
lods
fdivs
lea
add
lea
cld
lahf
daa
dec
scas
je
lock
in
stos
or
pop
add
loopne
jge
cmp
mov
add
push
mov
dec
ss
jno
or
inc
add
out
test
push
push
cltd
push
test
mov
adc
push
push
fwait
adc
adc
add
mov
push
and
and
mov
cltd
sub
mov
dec
sbb
testb
mull
or
mov
fucomp
jae
outsb
call
xchg
and
inc
inc
dec
das
std
movsl
out
sbb
dec
call
mov
push
add
std
mov
lahf
or
adc
jmp
pop
fs
xchg
or
jns
lea
sbb
mov
loope
mov
out
xor
imul
test
or
cmp
lods
sbb
movsl
out
les
dec
test
cli
int3
int3
fistpll
lock
fidivl
sbb
mov
or
cltd
out
pop
dec
aam
cmp
add
mov
mov
pushl
mov
mov
imul
mov
enter
stc
xor
in
ss
cmp
pusha
sar
testb
push
leave
xor
or
out
rcrl
pop
outsb
xchg
ss
stc
mov
push
cli
rorl
add
jecxz
filds
outsl
rclb
add
xchg
stos
mov
rorb
dec
cmp
xchg
mov
sub
pop
adc
cltd
cmpsb
iret
mov
or
in
lret
pop
sub
xor
mov
mov
lock
mov
pusha
loope
xchg
addl
imul
xchg
shrl
lods
mov
or
xchg
and
xor
test
lods
data16
and
jecxz
imul
dec
inc
scas
xlat
dec
sti
popf
test
mov
ss
vminpd
mov
mov
mov
jnp
jne
jp
pushf
mov
cs
mov
fisttpl
daa
inc
mov
or
lcall
xchg
loop
repnz
sub
or
mov
jnp
mov
pusha
mov
mov
cld
and
xor
in
jecxz
jns
dec
insb
movsl
adc
xor
push
mov
pop
rcll
pop
stos
cmpsb
nop
or
scas
repnz
dec
cmc
mov
jbe
jae
sbbl
ds
and
addb
iret
sub
sbb
ss
test
mov
add
cmpsb
push
adc
movsl
add
sbb
scas
rcrl
dec
add
fs
push
sub
sub
sbb
mov
rorl
mov
or
cmp
and
rol
ret
cltd
sahf
push
cli
push
push
clc
push
xchg
push
dec
insl
fbld
imul
sbb
inc
xchg
int
std
jmp
sti
push
dec
jmp
fidivrs
xor
dec
xchg
fcomps
sbbl
mov
ljmp
add
sbb
popa
xchg
dec
push
xor
dec
es
mov
jle
and
pusha
nop
mov
mov
jecxz
sub
sbb
xor
dec
mov
inc
loop
lock
ds
jne
sub
aad
push
int3
aaa
xor
mov
mov
int
rep
stos
das
inc
mov
xchg
and
mull
mov
cmp
or
mov
mov
les
push
add
dec
in
pop
in
dec
inc
div
xor
ret
fcom
iret
cmp
pop
pop
fidivrs
dec
imul
and
mov
shll
sbb
cmc
cmp
ljmp
outsl
push
andb
inc
pop
dec
outsl
sbb
sub
mov
call
cmpsl
xchg
insb
jp
testl
mov
xchg
jne
inc
sti
cmp
xlat
rep
outsb
lret
and
cmp
orl
xor
cwtl
inc
jo
imul
mov
add
rolb
mov
mov
in
xor
dec
pop
and
xchg
fs
loopne
mov
lahf
cmpsl
adc
cmp
adc
push
jo
pusha
sahf
imul
call
popl
cwtl
pusha
es
xor
scas
pop
pusha
aad
jp
adc
xor
int
push
pop
ret
sbb
add
adc
pop
les
mov
dec
ds
insb
insl
push
pop
pop
xchg
je
cld
cwtl
inc
mov
mov
jae
fwait
arpl
push
mov
ss
mov
xlat
cli
pop
or
rcrb
in
cmp
xor
dec
mov
xlat
sub
mov
xlat
sbb
jle
adc
addb
jnp
xchg
jo
jae
lret
xchg
arpl
or
xor
rclb
ret
and
or
popf
add
js
arpl
call
mov
pop
rclb
dec
lret
adc
lea
cmpsb
test
sti
pop
xchg
in
add
std
inc
std
sbb
loop
sbb
adcb
sti
pop
or
jl
jp
push
lds
mov
mov
jge
push
lods
pop
push
push
sti
dec
push
jb
nop
jg
cs
mov
inc
enter
inc
sbb
and
test
and
pop
xchg
jbe
inc
push
pop
lods
out
stc
sahf
jbe
movsb
dec
imul
xlat
cmp
or
cli
dec
hlt
sbb
out
sahf
xchg
mov
inc
in
push
add
scas
jge
rcll
pop
sbb
insl
xor
jns
pop
jg
jns
outsl
jo
sbb
fwait
lods
mov
insb
ret
les
ret
pop
testl
sbb
aad
jge
ja
add
push
int3
fistpl
hlt
mov
mov
js
mov
push
jp
jle
add
xchg
and
dec
xlat
sahf
inc
insb
shll
mov
push
mov
lret
add
in
imul
jnp
mov
pop
inc
mov
cmp
aad
mov
outsb
push
pop
stos
rolb
in
loop
adc
iret
loop
cli
lea
je
je
xchg
and
xchg
inc
addr16
inc
xchg
sub
pop
inc
jge
inc
aam
or
cmpsl
mov
push
addr16
and
sbb
push
mov
jo
mov
icebp
in
sbb
sbb
push
adcl
movsb
xchg
shrb
fwait
mov
mov
xchg
jle
jmp
pop
daa
inc
cwtl
sbb
shl
jg
xor
in
pop
popa
dec
fstl
out
sti
jno
sbb
in
shrb
dec
xchg
lret
js
in
rcr
or
scas
int
and
add
xchg
xchg
cmp
scas
inc
cmpsb
pop
lods
test
aas
and
lcall
mov
insl
dec
call
enter
insl
mov
jno
fsubrp
jae
mov
int3
push
fdivrl
pop
sub
movsl
sbb
cmp
repnz
mov
cmp
sbb
jo
imul
xchg
pop
mov
sub
loope
jnp
pop
rclb
lret
icebp
push
ss
and
int3
dec
mov
mov
inc
sbb
or
lret
stos
mov
pop
xlat
stos
xorl
es
mov
test
test
mov
xchg
mov
jl
dec
mov
push
sahf
and
lcall
sub
stos
rcr
or
xchg
lret
cmp
lock
sbb
mov
cmp
std
lahf
cmpsb
in
es
clc
xor
lods
loopne
loopne
pop
lret
jecxz
outsl
xchg
insb
repnz
cli
scas
nop
cs
inc
ja
stc
sub
decb
rorb
pop
jl
fldt
mov
mov
cmpsb
dec
or
lret
xor
mov
fcompl
cmp
ficomps
rcl
push
xchg
sbb
fisubl
jmp
xor
gs
push
imul
test
mov
ljmp
loopne
xor
inc
lret
fdivrs
push
gs
adc
mov
sbb
pushf
jne
jge
jns
scas
aam
jns
test
jmp
push
xor
les
cmpsb
cmp
push
aas
movsl
and
xor
xlat
movsb
mov
sub
lds
sub
out
shl
in
ljmp
int
decl
or
sbb
inc
loopne
shll
nop
test
sub
cmp
imul
pop
icebp
aad
scas
cmove
imul
mov
rclb
mov
jb
cli
ret
push
lods
pop
push
push
in
sub
xor
inc
outsb
mov
pop
lods
xorl
and
add
adc
cmp
mov
adc
inc
test
movb
into
mov
rdtsc
dec
hlt
in
vmwrite
jecxz
fsubrl
enter
xchg
pop
popa
sahf
dec
xchg
rclb
mov
jmp
or
fdivl
stos
neg
mov
daa
fwait
dec
sbb
ds
xorl
mov
or
inc
xchg
or
jmp
hlt
mov
dec
sub
sbb
fnstsw
or
repz
jge
mov
addb
pop
repnz
ret
out
xchg
stc
stos
mov
lds
outsb
sbb
pop
fiadds
leave
test
xor
sub
pop
xchg
jg
testl
add
pop
xchg
inc
cmc
out
xchg
loope
xor
in
movsl
xor
adc
fwait
aam
pop
mov
pop
fiaddl
fsubp
mov
lds
cltd
aad
in
sbb
out
mov
es
push
xor
sbb
push
dec
ds
cmc
adc
popa
pop
mov
or
lds
andl
mov
xchg
mov
movsb
xchg
push
jmp
xor
jle
daa
stos
mov
sbb
sub
and
jle
test
xlat
out
xchg
push
lock
sub
mov
or
mov
lds
daa
lock
and
xchg
std
ret
lods
dec
mov
sbb
adcb
sbb
cmp
mov
daa
leave
sub
stc
lods
arpl
sub
addr16
sahf
outsb
repnz
add
nop
sbb
std
pop
mov
pop
add
sbb
jle
lock
dec
dec
nop
cmp
jb
and
stos
jecxz
push
and
call
add
movsl
in
popa
aad
mov
idivb
lcall
sbb
movsl
adc
cmp
xor
jg
mov
addb
popa
imul
jne
adc
fbstp
cld
adc
jbe
fwait
loope
movsl
lea
and
or
mov
mov
stc
std
mov
cmc
xchg
out
xchg
inc
clc
imul
dec
loope
xor
fldenv
jge
bound
lods
xor
mov
or
jecxz
mov
sar
mov
insl
aaa
jbe
lahf
nop
in
adc
and
xor
leave
call
mov
repnz
fcomps
add
add
daa
jbe
hlt
mov
lcall
xlat
pop
in
dec
pop
les
xor
inc
add
push
jle
mov
adc
xor
clc
mov
pop
sbb
inc
push
daa
inc
out
cli
divl
testl
add
adc
pop
les
mov
test
dec
popf
add
inc
mov
sub
hlt
fsubrl
fnstenv
aad
pushf
jp
cmp
in
jb
push
das
add
pop
pop
pop
adc
mov
test
add
ret
xchg
outsb
fucom
xchg
in
push
xor
xor
sbb
dec
pop
mov
cs
aaa
enter
jae
mov
sbb
push
inc
addb
int3
aam
pop
hlt
roll
add
and
cmp
and
sub
fdivl
jb
cmp
push
fisttpll
out
mov
not
outsl
in
mov
aad
adc
push
rorb
cmp
jae
fists
xchg
popa
xchg
ficomps
fcmovnb
jle
fidivs
xlat
add
ret
mov
push
xchg
fistpl
mov
pop
xchg
sub
xchg
rclb
jg
ret
jecxz
fidivl
pop
repz
repz
fisubrs
ja
int
push
fwait
ret
inc
in
test
jo
xor
add
arpl
sub
sbb
repz
cmc
in
jg
ret
jnp
adc
ret
mov
jecxz
pop
movsb
call
adc
push
adc
insl
push
je
int3
mov
mov
notb
ret
dec
subl
mov
add
push
outsl
jle
push
lock
lcall
fdivr
insb
das
subb
lea
outsl
lret
imul
add
aad
mov
and
adc
xor
andb
xor
mov
lret
mov
add
xchg
mov
xchg
loopne
data16
mov
out
loopne
and
outsl
imul
repnz
sbb
sub
sbb
and
xor
mov
mov
in
add
xor
pop
dec
ret
fcmovu
lret
nop
jne
shl
test
adc
dec
sti
sbb
push
lcall
mov
dec
jbe
fnsave
xchg
mov
scas
and
es
dec
jp
loope
shlb
mov
shlb
sub
int3
data16
sub
movb
movsl
mov
test
lret
nop
cmp
xchg
and
cwtl
jbe
adc
div
adc
mov
add
nop
mov
cwtl
imul
mov
test
or
pop
sti
rcrb
xor
insb
add
test
sbb
insl
pop
ss
and
add
fwait
pop
or
loop
jnp
jnp
sbb
iret
ss
fcom
pop
push
inc
fistl
stos
push
jp
push
add
jecxz
es
cmc
fsub
test
sbb
cmpsb
ja
gs
dec
cmp
xor
shll
lods
or
push
out
loop
rolb
popf
pop
sub
in
sub
mov
xchg
mov
stc
push
fdivrs
mov
xchg
push
inc
cld
adc
sub
hlt
mov
push
movsb
or
lcall
or
xor
xchg
pop
xchg
insb
mov
xchg
xor
in
loopne
sub
push
pop
inc
cmp
sbb
arpl
cwtl
call
pop
gs
pop
mov
pop
ficoms
mov
sahf
adc
or
xor
xor
lret
js
mov
fwait
mov
adc
mov
in
lahf
jno
dec
pop
clc
ret
cmc
insl
test
aam
pop
mov
xlat
jno
leave
sbb
add
xchg
cmpsb
sbb
hlt
fcoml
pop
hlt
test
jl
sti
aam
mov
mov
add
and
fmul
pop
sbb
ljmp
js
mov
push
sbbb
and
outsb
punpcklwd
jae
or
sarl
sub
arpl
add
jnp
mov
stos
inc
sbb
or
ret
popa
repz
pop
lahf
dec
push
jb
or
testb
push
push
mov
rcrb
xchg
jle
add
pop
stc
cli
out
or
ror
xchg
pop
adc
nop
repz
stc
adc
daa
and
inc
cltd
sub
jp
out
mov
push
leave
lret
stos
je
insb
add
popf
ss
adc
push
pop
mov
xchg
clc
mov
push
jns
inc
xor
mov
out
sbb
and
das
lds
sbb
into
enter
push
pop
xchg
scas
mov
xchg
shlb
lret
sti
push
cmp
or
insl
sti
push
xorl
sub
pop
dec
fimuls
mov
mov
jmp
or
mov
pop
pop
in
out
mov
xorl
sti
lret
jecxz
cmp
scas
push
inc
xor
hlt
lds
sub
push
cmp
sub
push
mov
lret
jl
stos
je
jno
es
bound
sub
mov
ret
push
scas
cmp
bound
jne
add
inc
push
jecxz
hlt
hlt
cmpsl
cmp
cmp
sbbl
fcompl
adc
je
imul
mov
in
outsb
xchg
adc
add
ret
stc
jmp
popf
push
or
popf
or
jge
out
sub
scas
sahf
jbe
adc
imul
cli
sub
inc
jb
push
push
outsl
aad
mov
imull
xchg
aam
push
dec
pusha
push
mov
jg
test
cmc
push
push
nop
jl
pop
fwait
jmp
andb
decb
mov
and
mov
cwtl
and
push
dec
pop
mov
mov
cwtl
push
jmp
add
xchg
pop
cltd
xchg
sbb
les
sbb
sub
in
bnd
rclb
divb
jl
std
stos
cli
adc
sub
xor
dec
adc
push
ljmp
stc
lods
sbbb
inc
mov
pop
loope
movsl
pop
cmp
sbb
hlt
mov
xor
adc
imul
movsl
jae
lret
arpl
repz
pushf
ret
add
not
out
repnz
xchg
sub
add
fisubs
pop
mov
subb
movb
jg
clc
shlb
test
aam
xlat
shrl
in
loope
push
jo
fisubl
xchg
pop
pusha
cli
xor
int
and
popl
pop
cmpb
outsb
dec
add
mov
ss
dec
inc
cmc
mov
jmp
shll
hlt
adc
sahf
or
mov
cmp
lds
jg
mov
mov
mov
mov
xchg
sub
fs
jns
test
lock
push
xchg
sbb
loop
xor
mov
add
or
jg
out
mov
hlt
adc
inc
xchg
scas
fildll
or
pop
icebp
push
jle
pop
in
pop
test
addr16
push
outsb
push
popa
cli
fnstenv
fucomi
ret
mov
mov
out
xor
cvtps2pd
int3
mov
sbb
cmp
leave
cmpsb
jns
push
dec
aaa
jge
xchg
jmp
add
dec
shlb
ja
xor
pushf
arpl
jle
pop
mov
mov
sbb
movswl
jle
and
add
xchg
sbb
add
jo
or
jae
iret
loop
and
adc
mov
das
xor
xchg
adc
aad
sti
xchg
outsl
jmp
sub
mov
sub
and
xor
shlb
adc
dec
fincstp
movsl
push
push
int
and
sbb
mov
lock
add
jbe
in
xchg
sti
lock
pushf
rorb
shlb
stc
mov
sbb
mov
in
pop
clc
mov
fs
divl
push
ret
lods
cmpsl
xor
mov
pop
and
int
call
jnp
cmp
sbb
test
sbb
sub
outsb
xlat
inc
mov
dec
adc
stos
sub
xchg
test
arpl
add
pop
je
test
pushf
clc
mov
push
jmp
jmp
js
pop
adcl
jl
in
or
ret
int
push
adc
xor
jnp
clc
iret
imul
lods
lods
mov
mov
pushf
in
mov
int
xchg
push
les
dec
sbb
push
xlat
cmpsl
loope
fwait
add
jg
clc
lds
push
dec
jp
xor
push
sub
shlb
and
mov
movsb
rcr
and
pop
or
leave
pop
or
stos
xchg
cmpl
sbb
xchg
cmpsb
cmp
add
cwtl
cmp
repz
in
sahf
pop
in
test
inc
ja
inc
dec
loop
sahf
sti
push
popf
add
mov
push
jmp
xlat
mov
movsl
int3
inc
jae
fcompl
jle
mov
xor
add
lock
push
mov
shlb
mov
stos
sub
sahf
add
in
xchg
jl
and
xor
sub
movsl
ljmp
fwait
add
subl
xchg
stos
addr16
test
stc
std
callw
jge
icebp
or
xchg
mov
stc
xchg
xchg
dec
cmp
fisttpl
pop
jle
jo
mov
in
dec
push
test
adc
push
and
push
ret
cmpb
stos
gs
mov
in
popf
push
inc
pop
or
push
jl
and
cs
fs
lds
sub
cmpsl
sub
mov
in
add
lods
bound
stos
in
jle
dec
push
lret
jl
dec
xlat
daa
or
loop
pop
xlat
lret
push
loope
pop
pusha
jp
aaa
jmp
call
hlt
mov
push
pop
pop
mov
decl
in
push
jl
xchg
jb
sbb
stos
cmp
xlat
xchg
mov
and
lds
pushf
or
mov
xchg
sub
sub
pop
daa
fdivrl
out
sbb
ret
dec
mov
mov
test
and
mov
sbb
adc
inc
jb
in
dec
pop
xor
lea
out
mov
adc
pop
cltd
dec
das
cmp
outsl
jae
xor
jnp
lds
cmp
leave
dec
jl
imul
cmc
pop
jmp
in
mov
or
cmp
adc
fisubs
stos
orl
mov
imul
jmp
clc
pop
out
cmpsl
pusha
pop
std
pop
iret
lret
mov
loope
jp
pop
sub
insl
xchg
cmp
insb
lcall
iret
insl
lods
jae
out
jno
xor
cltd
xchg
unpckhps
xchg
loop
out
push
xchg
inc
lds
es
sbb
push
popf
or
test
addr16
mov
ss
outsl
push
mov
inc
add
cmp
push
push
pop
mov
loope
inc
push
imul
push
jp
dec
enter
mov
or
js
repnz
mov
loopne
in
jle
sbb
insl
je
inc
jmp
insb
mov
lcall
inc
mul
mov
add
mov
or
clc
nop
push
mov
enter
shl
test
xor
dec
sbb
pop
icebp
xlat
push
cmp
pop
xchg
adc
xchg
mov
popa
iret
orl
push
xchg
pop
adc
sub
push
in
mov
jl
data16
dec
ljmp
out
cmp
xor
popw
or
sub
mov
or
mov
jecxz
data16
test
cltd
add
adc
add
pop
xchg
fcoms
fiadds
sahf
jg
mov
fnstcw
xchg
test
loop
call
cmp
test
mov
sbb
imul
mov
je
add
in
ror
push
or
dec
pop
repz
sub
add
lods
sub
fsubrs
push
sti
repz
ja
mov
rcl
repz
push
mov
jge
hlt
jecxz
nop
popf
sub
sbb
sub
in
gs
xchg
dec
repnz
arpl
insb
sub
mov
sub
adc
pop
dec
cmp
or
mov
loop
divb
sbb
mov
adc
push
test
push
fs
inc
fdiv
xchg
pushf
pop
js
mov
int3
enter
int
adc
mov
ljmp
xor
and
stos
inc
inc
ficomps
adc
int
imul
inc
lds
jns
enter
lock
lock
push
xchg
out
lret
xchg
mov
inc
sub
or
rolb
push
push
repz
jae
and
int3
dec
mov
mov
test
mov
cmpsl
out
cwtl
gs
push
add
jp
cmc
insb
fstl
in
inc
mov
fistl
xchg
jae
in
pop
xchg
jo
push
hlt
mov
inc
push
and
mov
aad
lods
and
mov
insb
fcompl
std
mov
fmulp
out
sbb
pop
jl
push
loopne
dec
imul
sub
lret
pop
insb
push
fldl
and
adc
inc
xor
or
adc
scas
scas
sti
pop
arpl
add
mov
dec
movsb
stos
sub
sbb
ror
xchg
insb
xor
cmp
mov
dec
cmp
testl
and
ja,pn
aad
movsl
in
subl
mov
push
or
pop
sub
mov
aad
push
test
xor
stos
js
cmc
iret
pusha
test
xor
rolb
sub
popf
pop
xchg
es
dec
addl
outsl
icebp
lods
jne
insl
mov
sbb
adc
mov
push
pusha
xor
jecxz
daa
mov
pop
insl
mov
mov
push
lret
and
mov
loopne
outsl
add
ud0
orb
push
xchg
pusha
cs
inc
les
mov
mov
jmp
in
jne
call
mov
sub
cmp
adc
outsl
jl
stos
out
ret
in
rcrb
inc
push
mov
jo
daa
in
jnp
and
movsb
xlat
fldcw
sub
inc
popa
mov
iret
sbb
push
mov
mov
cs
mov
pop
xchg
repnz
loop
ficoms
out
adc
dec
dec
cld
roll
xor
cwtl
sbbb
pop
bound
fldt
dec
cmc
push
sub
rorb
or
mov
jb
cmp
mov
rolb
popf
icebp
pop
push
into
test
loopw
or
lods
dec
push
mov
aam
add
and
pop
push
jnp
push
xchg
xlat
andl
fisttpll
test
xor
cmc
xor
mov
scas
sub
movsb
inc
jo
mov
mov
int
xor
enter
pop
cs
lcall
jne
test
inc
sbb
push
sub
sbb
repz
pop
xorb
add
daa
test
cmc
dec
adc
mov
sbb
je
adc
jnp
pop
outsl
pop
pop
xor
test
and
std
pop
cmp
or
cmpsb
jl
lods
cld
loope
shlb
xor
xchg
jle
add
fnstenv
dec
cmp
sub
sarb
imul
add
mov
js
loope
cmpb
mov
in
and
nop
adc
sub
js
cmp
push
or
es
mov
sbb
pop
jno
nop
mov
sahf
cmp
sub
insl
mov
orb
imul
jo
addr16
test
mov
lods
jns
int
mov
lcall
push
xor
add
jle
insl
pusha
jnp
add
jmp
lock
mov
push
insb
cmp
xlat
lret
dec
sub
pop
lcall
xchg
pop
inc
rorl
sub
jmp
mov
std
xor
jbe
in
mov
outsl
cmp
lcall
push
xor
lock
mov
in
or
gs
mov
adc
jns
cs
in
mov
daa
sbb
lea
dec
push
xchg
jmp
mov
inc
test
adc
fisttpl
in
sub
test
es
stos
inc
mov
mov
ljmp
aam
repnz
iret
movl
insb
pop
adc
mov
pop
imul
imul
pop
lret
sti
aad
in
push
test
scas
sub
ss
and
jae
hlt
dec
daa
hlt
inc
pop
stos
xchg
add
out
adcb
div
mov
mov
mov
jne
pusha
das
lods
mov
sbb
nop
leave
sbb
roll
shl
sarb
pop
lods
dec
mov
dec
xacquire
stos
inc
nop
jnp
pushf
mov
ret
rorb
sbb
arpl
test
xor
out
dec
dec
jecxz
outsb
sbb
add
cli
jo
popf
jmp
and
loopne
and
mov
stos
sbbb
xchg
jo
aam
cmpsl
hlt
pop
pushf
push
gs
cwtl
clc
test
pop
shrl
mov
or
sbb
push
xchg
add
insb
shll
mov
xor
insb
inc
filds
push
mov
pop
push
mov
loopne
mov
inc
cltd
inc
mov
and
jbe
inc
add
enter
adc
push
mov
mov
jle
cmpsl
jno
and
mov
outsb
or
jp
adc
sub
ffree
jo
std
je
imul
imul
inc
stc
int3
cli
mov
in
ret
jecxz
dec
imul
push
push
dec
inc
cmpsb
test
adc
mov
add
testl
jecxz
jns
insl
cmpb
test
cmpl
fwait
loopne
filds
sub
xor
and
nop
mov
inc
xchg
rcl
jae
pop
jmp
icebp
aad
imul
lahf
outsl
push
cld
pop
push
fldenv
and
lods
mov
xor
les
inc
mov
std
bound
nop
repz
fsubs
and
jg
in
dec
clc
dec
xor
cmpl
jl
mov
adc
loop
into
inc
test
sbb
sub
xchg
adc
xchg
in
out
add
insl
pop
jnp
adc
jmp
jmp
arpl
enter
femms
je
mov
xor
arpl
popa
sbb
xchg
fisubrs
movsl
mov
std
lds
fwait
push
jmp
sarl
clc
sbb
xor
cmp
mov
ds
and
sbb
add
xchg
mov
xchg
add
into
test
jne
mov
arpl
push
xorl
idivb
lods
push
pop
inc
out
fidivs
dec
and
jle
test
cld
fisttpl
outsb
push
stos
adc
sbb
pushf
dec
stos
push
adc
sub
sbb
addr16
fstl
int3
rolb
mov
fisttpl
pop
mov
pop
aas
inc
aaa
mov
sub
imul
fisttpll
mov
outsb
fistpl
sarb
jmp
lods
imull
xchg
inc
push
xlat
mov
test
or
and
dec
shl
xchg
sbb
sub
sub
push
lcall
ljmp
ret
cmp
sub
rcl
cmp
pop
pop
ljmp
sbb
adc
xchg
mov
out
cmpsb
pop
fidivl
pop
sbb
fisubl
add
mov
cld
sub
lret
dec
dec
fsubs
out
sub
cld
adc
daa
push
loope
adc
popa
adc
xor
dec
pop
sub
repz
push
jb
jbe
stos
enter
loope
mov
push
mov
add
and
push
loopne
push
leave
sbb
stc
xchg
mov
jnp
jae
push
mov
nop
sbb
fstps
xchg
daa
in
push
ret
cmp
aam
mov
lret
sahf
pop
fisubl
cmp
push
pop
imulb
jno
fidivs
shrl
das
rclb
shrl
add
mov
out
mov
sub
ret
xor
and
dec
jno
out
sbb
shrl
icebp
mov
jecxz
or
sbb
iret
mov
pushf
fwait
xor
lret
xchg
lods
inc
jns
das
inc
cmp
cmc
jmp
xchg
sub
mov
jb
loope
mov
cmp
xchg
add
js
cs
adc
es
push
jl
call
inc
inc
outsl
add
nop
mov
fisttpl
mov
pop
xchg
mov
pop
addb
add
test
je
and
pop
pusha
sarl
pop
sbb
repz
xchg
loopne
pop
sub
xchg
jp
paddsw
xor
jns
inc
frstor
add
out
jmp
push
jl
mov
sahf
sub
mov
xor
loopne
gs
adc
pop
enter
xchg
lods
or
js
pop
les
mov
pop
shlb
les
push
lcall
leave
divb
repnz
lret
inc
fdivl
bound
aaa
repnz
enter
es
cmp
test
out
xchg
inc
inc
test
aas
sahf
popf
pop
add
cmp
sbb
mov
repnz
rcll
add
in
push
jae
cmp
cmp
xchg
push
xchg
push
fnstsw
pop
xlat
lds
jne
pushl
xchg
cmp
lret
addr16
andb
dec
lret
cmpsb
push
inc
pop
pushf
and
insb
mov
cmpl
inc
xor
pop
imul
mov
repnz
hlt
in
jno
ljmp
sub
push
pop
push
cmp
mov
mov
lods
push
aaa
dec
daa
inc
sarl
adc
scas
xorl
stos
xchg
scas
mov
mov
sbb
mov
sub
out
mov
adc
lret
add
mov
push
mov
test
xor
jmp
xor
jne
outsl
sub
dec
or
add
mov
and
mov
mov
or
sub
jbe
or
addr16
es
pop
int
mov
fldenv
js
arpl
out
aad
in
push
daa
es
dec
outsl
adc
out
scas
rcl
std
mov
add
dec
jmp
jne
enter
ds
inc
sub
adc
push
fildl
adc
mov
sub
or
loope
jno
push
daa
jns
jp
ret
inc
je
adc
cld
xchg
test
xor
out
cwtl
adc
mov
mov
fdivr
sar
fiaddl
dec
aaa
cmp
divl
sub
inc
push
fdivrl
jns
jge
xor
xchg
aam
cmp
push
inc
push
add
inc
jb
and
jno
and
mov
sbb
mov
leave
lods
imul
dec
xlat
mov
cmp
cmpsl
cld
aaa
xchg
test
lods
dec
orb
addr16
mov
lods
push
lods
jmp
repz
js
push
fs
pop
faddl
nopl
xchg
mov
imulb
jle
das
xchg
push
pop
push
sti
jo
addr16
jmp
fidivrs
sub
sbb
sub
cmpb
into
add
rcrb
outsb
xchg
pop
js
and
idivb
loopne
mov
pop
fdivrl
ljmp
lret
xor
lcall
xchg
cli
adc
ds
aam
push
or
stos
xchg
and
mov
test
js
mov
pusha
dec
inc
push
jge
add
aaa
jns
fmull
pop
xchg
mov
mov
stos
mov
or
ss
lods
and
out
adc
out
push
push
jno
pop
mov
jmp
xor
lods
xlat
push
pop
pop
orb
cmpsb
int
inc
cmp
pop
jg
leave
inc
add
stc
mov
or
mull
and
movsb
add
or
jp
cmp
sub
ret
imul
cmp
test
bound
xor
insl
das
pop
shll
jl
cmpsl
sub
xchg
xor
push
ret
xor
add
and
loope
imul
negb
outsl
inc
adc
xor
repz
mov
fdivrl
or
cltd
mov
jle
rclb
mov
mov
dec
cld
add
sti
jmp
mov
adc
jb
clc
js
fmuls
loope
xchg
jmp
mov
dec
mov
fldenv
adc
aaa
in
lret
pushf
push
cmpsb
int3
or
jo
dec
sub
inc
call
sti
stos
imul
sub
fucom
shlb
xorb
pop
sbb
rcrl
pushf
jmp
lcall
fldenv
ficomps
sub
pop
sub
push
loope
add
repz
dec
xor
cs
rcr
je
enter
or
aaa
mov
sub
fwait
lcall
stos
jecxz
ffreep
dec
mov
or
int
inc
out
out
lock
mov
mov
icebp
aaa
or
mov
loope
mov
mov
cmp
sub
neg
fidivs
into
mov
inc
mov
sbb
mov
add
leave
dec
pop
repnz
pop
mov
dec
enter
pop
mov
push
jecxz
lea
dec
xor
add
mov
or
cmp
inc
popa
adc
pop
push
add
loop
test
mov
out
jnp
leave
adc
push
push
mov
mov
mov
orb
sahf
push
lods
shl
jl
fsubrp
addr16
sub
mov
inc
and
push
xor
ss
mov
mov
pop
push
loope
or
fmuls
in
out
pop
sahf
push
loopne
pop
add
sbb
cmp
scas
cmc
cwtl
mov
lea
popa
mov
or
mov
mov
add
jae
orl
hlt
or
aas
inc
mov
mov
cltd
repz
sbb
pop
dec
push
adc
pop
out
mov
mov
or
loopne
add
pop
in
dec
imul
sub
out
or
add
adc
fldcw
ss
fistpll
stc
jb
push
lret
mov
cmp
pushf
dec
or
pop
ret
movsb
stc
dec
nop
pop
leave
sbb
adc
pop
out
xor
rcrl
mov
jnp
leave
in
cmp
in
mov
jb
aam
mov
bound
sbb
or
mov
xor
sbb
incb
add
push
jl
les
mov
rcl
sbb
fwait
iret
fsts
push
jle
imul
shrb
sti
cli
mov
jbe
lahf
lcall
sub
aad
rcrl
in
mov
sub
out
mov
and
mov
xchg
pop
lcall
inc
jmp
push
std
dec
lea
hlt
add
jge
or
jae
lret
mov
outsb
push
es
add
mov
sub
leave
out
test
in
add
jmp
loope
jnp
sbb
test
dec
mov
cwtl
push
fsubl
sub
adcl
mov
shl
dec
dec
mov
cwtl
xlat
xchg
sbb
and
loopne
lods
bound
xor
push
pop
sub
lret
movq
jp
or
call
or
daa
arpl
xchg
inc
mov
ficomps
add
subb
jg
test
cmc
pop
sti
or
std
mov
dec
jne
jp
adc
imul
jne
mov
mov
mov
int
push
cmc
mov
inc
adc
cwtl
insl
pop
xor
or
ja
jnp
add
test
xchg
xchg
sbb
pop
push
stos
jecxz
rcrl
lret
cmp
imul
enter
out
popa
pop
sbb
lock
adc
cli
add
or
push
dec
shlb
jmp
arpl
and
icebp
clc
rcll
adc
les
xor
loop
mov
cmpsb
xor
jbe
icebp
mov
mov
imul
stos
lahf
mov
sbb
imul
push
sbb
jbe
add
xor
scas
cmp
xchg
push
mov
mov
jne
popf
bound
sahf
subb
repnz
dec
popf
mov
cmp
int3
daa
js
clc
xchg
rorb
push
out
xchg
dec
sub
andl
movsl
in
in
jne
inc
and
push
popa
mov
shl
push
push
jne
inc
xor
incl
loope
out
cmpsb
jns
in
test
movq
jecxz
mov
and
es
jae
dec
hlt
xorb
movsl
mov
sub
dec
cmp
jno
les
je
leave
xor
ljmp
push
and
aam
insb
pushf
xchg
inc
or
test
inc
inc
mov
sbb
lods
xor
imul
cld
mov
js
in
mov
test
push
loopne
push
jle
jmp
in
jle
testb
ja
jg
pop
inc
ja
cmp
push
mov
out
xchg
mov
jae
cltd
or
shll
dec
hlt
cmp
in
out
mov
jmp
jp
inc
jne
xor
or
sub
mov
stos
rcl
inc
dec
push
sbb
pusha
lods
testl
adc
divl
ljmp
addr16
mov
push
arpl
xchg
adc
ja
or
pop
push
and
ja
jp
pop
inc
mov
icebp
or
iret
rcr
repz
jg
rcll
mov
cltd
dec
push
pop
push
out
mov
cmp
lcall
push
jno
cli
dec
orl
inc
fcmovnu
inc
inc
and
push
mov
mov
lret
push
dec
bound
lcall
cmpsl
push
jb
xchg
bound
movb
shll
es
add
cmp
add
movsl
or
shr
mov
arpl
insl
cwtl
cmp
lcall
fisubrs
rolw
xor
and
jb
cmp
shll
sbb
int
cmc
in
and
adc
dec
mov
adc
loop
or
loope
and
adc
dec
xlat
roll
inc
jb
add
mov
push
cmp
mov
cld
mov
out
imul
das
push
add
sub
out
enter
mov
mov
push
loope
xchg
mov
adc
mov
data16
and
rep
pop
push
sub
repz
mov
sti
cli
leave
movsl
add
test
stos
in
push
jbe
in
ljmp
mov
ja
cli
jge
lods
mov
lock
jne
shll
clc
sahf
ror
or
outsl
mov
loop
or
fistpll
pushf
lods
lcall
mov
shrb
push
in
mov
lcall
xchg
imul
or
sub
add
addr16
into
sub
xor
fdivl
arpl
dec
les
mov
add
mov
push
fwait
adc
ds
shll
add
leave
iret
pop
sub
cli
mov
or
lcall
fcmovu
pop
or
cmp
cld
imulb
sarl
or
insb
add
sahf
jb
sbb
movsb
sahf
pop
cwtl
out
shl
cmp
lcall
jb
xchg
jmp
lcall
test
and
cmp
loop
lods
ljmp
xchg
xor
popf
imul
pop
pop
in
push
xchg
int
iret
jge
or
sbb
and
cltd
arpl
mov
sbbl
das
sbb
fistpll
fistl
fdivrp
sub
jle
movsl
xor
out
test
jg
push
fcmovu
push
fildl
mov
test
jge
int3
pop
lcall
xchg
mov
mov
lock
fwait
mov
pop
push
add
pop
sub
and
jne
push
cld
mov
sahf
xchg
lods
mov
sbb
lcall
nop
test
sbb
sub
cmp
call
mov
pop
xor
in
push
xchg
jg
fldenv
cmp
or
add
outsl
sub
hlt
into
mov
movsl
pop
jno
push
mov
jp
mov
cmp
sub
lods
and
adc
adc
bound
adc
dec
ret
test
orb
inc
orb
jae
jbe
or
jge
test
push
sbb
loopne
mov
iret
je
dec
mov
movsb
add
ret
add
cmpl
push
mov
dec
push
dec
push
pop
repnz
into
pusha
mov
xchg
popf
inc
pop
dec
mov
movsl
or
sbb
aad
mov
in
ficomps
clc
cmp
testb
or
or
mov
sbb
sub
and
jbe
shll
inc
inc
add
mov
addb
fildll
sti
cmpsb
test
lock
in
dec
fdivrl
into
or
inc
pushf
pop
addl
aas
xchg
lahf
scas
pop
dec
imul
nop
mov
xor
and
jecxz
iret
bound
gs
cli
jecxz
sbb
je
scas
repnz
add
daa
dec
lret
addb
loop
lods
push
jl
lahf
movsl
xchg
add
loope
andb
jo
gs
xor
jp
mov
imul
and
repnz
stos
ret
dec
jmp
lods
jns
outsb
inc
jnp
test
mov
stc
add
mov
xor
or
mov
dec
mov
fwait
sbb
cld
mov
add
std
xchg
push
sub
add
adc
daa
loopne
mov
inc
mov
jecxz,pt
dec
adc
sahf
sub
mov
popf
push
sub
sbb
jae
and
mov
mov
or
push
stc
pop
adc
out
loopne
call
lahf
cmp
jae
mov
popa
xchg
popf
roll
xlat
test
test
sbb
mov
lret
scas
test
mov
xchg
xor
out
cmpsb
sbb
inc
test
sbb
insl
mov
and
pop
sbb
ds
mov
arpl
lds
shl
test
add
shlb
lret
cmp
cltd
aad
mov
lock
jb
jp
mov
stc
repz
add
xchg
xor
pushf
movb
arpl
lea
cwtl
imull
aaa
das
idivl
mov
icebp
daa
fwait
repnz
push
push
xlat
sub
rcrb
sahf
mov
inc
call
xchg
xchg
sbb
fisubl
inc
cli
and
mov
mov
xor
jg
sbb
cmpl
jge
das
inc
adc
shrb
cltd
mov
cmp
sahf
imul
jecxz
mov
filds
add
aam
pop
push
adc
push
push
and
fwait
hlt
or
rcll
ret
loop
jg
leave
adc
jmp
add
inc
xor
xchg
add
inc
movsb
outsb
push
xor
lds
fcomps
fcomps
movsb
mov
loope
push
jno
daa
dec
add
sub
mov
jg
add
outsl
mov
shll
push
adc
xchg
dec
push
sub
lea
sarl
inc
xchg
sbb
out
mov
fbld
imul
push
lea
cmp
popa
or
in
sub
adcb
xor
arpl
into
add
sub
adc
ds
shlb
insl
xchg
rcll
jo
aad
mov
xor
cltd
xchg
cmc
mov
gs
and
xor
xchg
xchg
pop
mov
shlb
push
es
cmpsl
xor
dec
xchg
es
fnsave
and
hlt
push
test
scas
fs
imul
cmpsb
mov
sbb
test
fldenv
add
bound
leave
inc
mov
add
or
loop
cld
xchg
les
adc
pop
fsubl
cltd
out
shrd
push
cmp
fsubl
sarb
or
mov
mov
lds
fwait
aam
or
xchg
addl
rclb
fcmovbe
shll
mov
stos
lahf
imul
push
xor
cwtl
jle
mov
cmp
push
pop
fs
mov
mov
push
xchg
loope
fimuls
jl
or
and
jae
shll
add
xor
xchg
push
fdivs
sti
fdivs
sub
lds
pop
sub
leave
mov
inc
mov
data16
in
lods
mov
in
xor
sbb
rcr
gs
sti
mov
loop
divl
fdivrs
pop
insb
lahf
andl
adc
pop
enter
push
jg
ja
cmpsb
lret
insl
pop
xchg
pop
scas
add
cmp
dec
push
std
js
shrl
hlt
aad
fistpll
aam
icebp
dec
call
lods
mov
leave
fucomp
outsb
std
rcll
sbb
pop
jge
mov
mov
jle
std
arpl
stos
add
mul
leave
dec
ret
hlt
pushf
jge
sbb
jb
push
outsl
push
jno
mov
negb
fwait
xchg
ret
lods
addl
cmc
xchg
sub
adc
mov
push
mov
sti
ljmp
ret
cltd
xor
jb
or
inc
mov
inc
mov
insl
fadds
shrb
decb
imul
dec
lahf
fsubr
xchg
push
mov
loope
movsl
mov
dec
in
and
add
cmp
std
into
repz
cwtl
pop
out
jns
inc
data16
jg
push
iret
test
mov
inc
rcrl
dec
pextrw
mov
and
jb
push
aaa
scas
cmp
call
jae
inc
xchg
ror
icebp
hlt
das
push
shlb
clc
cmpsl
adc
jg
out
enter
push
popf
call
dec
jle
rorb
jmp
add
sbb
sub
aas
aam
dec
xchg
jg
fistps
jbe
cmc
pushf
filds
inc
push
mov
pushf
dec
dec
fistpl
mov
insb
or
shl
push
popf
dec
ja
lcall
lea
bound
icebp
cltd
ret
loope
ret
imul
ljmp
ret
icebp
mov
mov
inc
fsub
mov
push
data16
call
inc
cmp
inc
pusha
test
lods
pushf
cmpl
icebp
imul
mov
daa
les
fimull
xor
mov
or
xlat
jo
arpl
loope
addr16
mov
insb
mov
cmp
bound
fwait
mov
or
cmpsb
div
lahf
dec
pushf
mov
mov
sbb
mov
lcall
xchg
shlb
test
inc
mov
and
xchg
add
pop
pop
leave
adc
xchg
cld
in
fsubs
push
and
lret
xlat
mov
xchg
cmpsl
je
iret
out
push
jl
stos
or
dec
dec
leave
xor
sub
pushf
cwtl
push
mov
push
les
lahf
sub
clc
bound
jecxz
cli
push
push
xor
push
shrl
push
in
fnstenv
out
daa
idivb
push
mov
adc
shrb
dec
into
mov
cmp
add
dec
lea
pop
mov
sbb
fstpt
lahf
push
xchg
lret
cmp
add
sbb
jle
lods
scas
popf
lds
shll
adc
in
jb
add
and
int
std
stc
inc
or
jge
jns
or
sub
js
std
push
jns,pn
dec
xchg
jle
mov
mov
loopne
jl
cmc
push
test
adc
add
sub
scas
jo
iret
cmpb
sub
outsb
lcall
inc
fbld
lret
or
push
fsts
sbb
pop
lahf
or
mov
mov
pop
mov
dec
push
pop
push
and
inc
xor
and
inc
jnp
and
and
js
call
inc
bound
adc
inc
jnp
pop
test
jne
lret
mov
jne
lret
movsl
mov
fcomps
push
xor
dec
in
loopne
js
hlt
add
mov
fldenv
cmp
out
aaa
fwait
movsb
jnp
adc
dec
stc
jo
push
push
sub
rolb
mov
sub
mov
jle
movsb
fnstsw
jp
mov
inc
lcall
enter
sar
push
mov
das
mov
in
scas
cmp
idivb
cmp
xchg
sbb
movb
push
sahf
inc
xlat
push
inc
push
in
in
pusha
inc
inc
mov
and
lret
adc
push
cltd
jne
enter
lods
push
pop
and
xor
pop
sub
rcrb
mov
lret
lock
outsb
daa
in
inc
xchg
hlt
movsb
loopne
pushf
rcrl
je
sub
ret
xor
roll
imul
push
jb
pop
mov
mov
jl
ficoml
mov
pop
xchg
or
mov
jnp
sbbb
je
loope
in
test
sti
dec
lcall
jno
addr16
cwtl
push
ror
data16
cwtl
dec
stos
cmp
jmp
push
pop
push
enter
idivl
lret
push
stc
and
enter
mov
adc
or
pop
jmp
test
xor
pop
es
in
jae
lret
mov
or
ja
mov
aad
lock
and
pop
add
mov
jne
xlat
vpminsw
es
shl
or
and
shll
sub
daa
dec
insl
andb
sbb
cmp
cmc
add
negb
sbb
pop
jo
or
add
outsb
add
sub
daa
pop
clc
jp
sbb
mov
dec
dec
insb
cltd
and
fidivrl
xor
les
cmp
dec
pop
mov
divl
enter
dec
cmp
scas
or
pop
adc
mov
imul
jl
aad
cmp
add
add
or
sbbl
movl
jb
cltd
inc
xor
jo
mov
pop
or
outsl
xor
btc
hlt
or
mov
adc
push
or
mov
ss
in
imul
cmp
push
js
arpl
or
cmp
stc
mull
jbe
ficoms
mov
push
ret
dec
fld1
mov
cmpb
sarl
outsl
nop
sub
add
imul
dec
push
or
js
or
xor
pop
into
cwtl
xor
in
jns
in
push
call
and
jmp
fdivs
fsubr
cs
mov
xlat
mov
xlat
iret
test
pushf
out
repnz
mov
and
adc
jmp
xchg
fidivl
lret
iret
jns
xchg
jns
cs
sub
xchg
int3
aad
push
inc
adc
mov
lcall
mov
jp
and
loopne
out
movsl
inc
lods
pop
or
mov
imul
xchg
icebp
jg
out
das
sti
das
adc
xor
sub
jns
jbe
fpatan
dec
mov
adc
xor
aad
add
clc
es
fisubrs
and
sbb
dec
adc
movsl
stos
fstps
xchg
ret
pop
inc
insb
aad
push
lret
jmp
jg
fisubrs
mov
cli
es
loopne
cmc
inc
in
out
fwait
dec
add
icebp
xor
inc
lahf
and
ss
sub
xor
sub
jne
and
pop
mov
stos
push
sub
dec
orb
jns
lret
sub
dec
mov
imul
xchg
das
push
sbb
adc
mov
and
pop
stos
push
push
call
int
adc
pop
pop
cmp
fucomp
pop
jecxz
out
jmp
pmulhuw
mov
push
testb
fsub
mov
mov
idivb
ret
dec
jnp
xchg
or
push
mov
lods
or
lret
inc
push
loop
cmc
sub
dec
pop
jecxz
sahf
jg
sahf
mov
xchg
scas
or
out
insb
mov
mov
cmc
or
stc
adc
xchg
mov
xor
into
inc
fidivl
icebp
mov
fnstcw
sarl
pop
sub
cmpsl
xlat
imul
repnz
xchg
mov
insb
and
decb
mov
rorb
push
jg
mov
mov
mov
cmp
and
xlat
jg
sbb
mov
scas
movsl
add
ficompl
gs
jmp
mov
bound
stos
add
cmc
xor
xchg
popf
push
scas
mov
out
mov
xchg
bound
cs
and
dec
pop
fld
lret
pop
push
push
leave
adc
xchg
sub
and
mov
mov
sbb
dec
xor
xchg
js
adc
jns
adc
jo
push
sub
jmp
lahf
mov
xor
mov
iret
in
ljmp
and
mov
int3
push
push
test
mov
push
dec
mov
std
in
aaa
adc
sub
inc
in
cmp
xchg
cs
arpl
sbb
mov
and
xor
dec
xor
and
outsb
dec
inc
sbb
enter
ljmp
mov
addl
cmp
push
mov
fdivrl
test
sarb
lods
inc
test
mov
outsb
jno
scas
adc
jle
mov
lcall
add
xlat
mov
dec
into
call
mov
mov
sub
push
popf
es
or
mov
adc
cmp
jnp
jmp
adc
inc
dec
pop
xchg
adc
cmp
mov
add
js
adc
mov
idiv
cwtl
pop
push
je
pop
mov
push
ret
shll
inc
aad
xor
rcl
sub
ljmp
and
jnp
enter
mov
or
or
lods
push
sub
push
mov
pop
add
sahf
fadds
push
stos
sub
stc
leave
ret
test
xchg
out
adcb
aas
dec
ror
data16
pop
jno
fwait
xchg
outsl
push
cmp
sbb
jp
lods
jns
mov
or
sub
push
jge
sbb
insl
mov
jbe
adc
mov
clc
cmc
lea
cwtl
xor
cmp
ret
or
fs
daa
ljmp
mov
xor
sbb
cld
rorb
sub
lea
cmp
scas
push
push
add
jmp
xor
popa
pop
iret
jl
scas
ret
mov
test
in
inc
sub
fsubr
stos
loope
cmpsl
sbb
and
sarl
fidivrs
imul
jns
fsubrs
fisttpl
inc
cmp
pop
das
sbb
shl
mov
shrl
fsubrp
popa
jg
push
cmpsb
cmc
andb
pop
ss
lods
add
in
pop
push
sbb
cmp
aas
adc
xchg
insw
in
roll
mov
jmp
xchg
out
inc
fiaddl
mov
cltd
mov
xlat
lret
jbe
adc
test
cmp
jecxz
scas
xchg
movsb
mov
fsubrs
cmp
dec
xchg
or
call
pushf
jne
ss
jge
lea
push
adc
jb
test
decl
in
mov
aaa
lods
push
mov
push
cltd
movsl
xchg
fwait
cli
or
pcmpeqw
jge
mov
or
jno
jge
inc
xchg
mov
fcom
dec
fsubl
jp
in
movsl
add
sbb
popa
pop
rcrl
and
push
and
pusha
inc
sub
loop
mov
mov
aam
mov
mov
xchg
sbb
shl
leave
xchg
push
sbb
push
ret
mov
shl
les
push
mov
pushf
sahf
fwait
sbb
add
nop
push
icebp
mov
cmp
fmuls
test
xor
mov
xor
jae
lds
in
jae
mov
jae
popa
pop
insb
or
adc
hlt
out
out
insb
movsl
int3
mov
fdivrs
jne
pop
mov
scas
es
test
add
push
bound
lret
mov
loop
std
mov
mov
leave
aas
cmp
mov
mov
sub
jno
fcmovnu
pop
pop
lret
and
scas
ds
cltd
xchg
sti
sarb
arpl
xchg
aam
cltd
sub
add
push
mov
push
or
cmpsl
mov
mov
addr16
shrl
pushf
ret
mov
mov
jmp
imul
hlt
xchg
popa
leave
inc
xor
in
loopne
ret
std
cmpsb
push
lret
in
jo
pop
jae
mov
mov
mov
shlb
cmpb
fsubs
dec
imul
fabs
jne
insb
iret
cmp
dec
shll
adc
sbb
dec
cmp
lods
lods
cmp
lods
stos
add
jmp
stos
fs
push
stos
jl
adc
xchg
stos
repz
cmp
cmp
js
dec
stc
loopne
push
mov
push
push
daa
adc
and
stc
sahf
out
repnz
inc
adc
stos
popa
dec
inc
in
nop
out
popf
dec
dec
jo
cmpsb
hlt
xchg
adc
filds
cmp
sub
lcall
xor
std
xchg
jmp
cmp
test
xlat
lcall
xchg
mov
inc
lahf
roll
sub
popf
int
mov
mov
inc
je
in
in
repnz
gs
xchg
pop
repnz
jg
fyl2xp1
aad
lret
pop
mov
sti
mov
cmp
shr
jl
mov
les
jmp
jnp
testl
push
cmp
in
mov
nop
push
mov
xchg
stc
sub
scas
xor
pop
xchg
faddl
xchg
push
fidivs
push
faddl
inc
mov
xchg
fldln2
cmc
add
jno
push
and
test
jge
sarl
cltd
loop
mov
xor
mov
pop
mov
popa
das
fsubrs
in
outsl
mov
or
mov
in
test
xor
sub
insb
xor
sub
dec
add
clc
mul
and
pop
movntq
push
insl
mov
in
lds
cmp
js
negb
add
push
stos
push
imul
mov
push
push
test
sbb
int
push
mov
in
mov
mov
sbb
or
aam
fldt
sbb
lret
and
push
xor
push
jg
and
adc
sub
clc
gs
in
nop
insl
aaa
stos
inc
in
into
iret
adc
jl
out
stos
push
jg
xchg
pop
adc
and
shlb
enter
inc
pop
cmp
cmp
fs
stc
mov
stc
or
data16
xchg
jno
dec
and
sahf
out
in
mov
add
xchg
mov
lea
mov
popa
cmp
jo
movsb
aaa
int3
push
das
or
sbb
cmpsl
xlat
in
mov
xchg
orb
inc
int
mov
jg
inc
ljmp
mov
adc
ret
jg
outsb
or
fwait
int3
addr16
push
popf
inc
in
or
das
and
dec
push
mov
adc
js
cmp
subb
pop
add
das
mov
sbb
fistpll
fdivs
cmc
inc
scas
mov
js
loope
orb
pushl
roll
cmp
in
es
inc
cltd
insb
push
jg
adc
push
adc
scas
xchg
pop
push
ficoml
push
and
cld
arpl
and
ret
adc
stc
jmp
inc
out
lcall
pusha
or
insb
std
cmp
fidivrl
lahf
std
push
ret
cmpb
mov
adc
test
cmovge
cmpsb
jecxz
pushf
scas
mov
jl
int
push
loopne
ss
inc
rolb
xchg
int3
pop
and
xchg
dec
and
mov
mov
in
jns
out
rolb
sbb
xor
cmp
add
sbb
xchg
aaa
dec
cmpb
mov
sub
mov
shrl
out
sbb
push
sti
lock
int3
ficoml
mov
push
xchg
and
int
cmp
sbb
or
push
adc
add
pop
fdiv
pop
jecxz
jne
jg
xchg
dec
imul
mov
lahf
cmpb
rorb
repnz
mov
xlat
sub
mov
inc
data16
push
adcl
mov
inc
and
int
scas
inc
sub
dec
or
cmp
jae
fbstp
data16
fbstp
push
jno
pushf
jns
mov
mov
mov
insb
stos
lods
jns
adc
pop
enter
rcrb
dec
xchg
mov
pop
inc
in
pop
push
cmp
mov
test
xchg
xchg
cmp
data16
or
lcall
outsl
loopne
fildll
or
fimuls
mov
pop
es
sub
jecxz
and
ret
mov
dec
dec
add
loope
adc
aad
int3
sbb
mov
dec
call
add
xchg
arpl
mov
xchg
sub
cmpsl
lcall
in
jg
mov
cmp
xor
in
adc
and
outsl
inc
adc
inc
movsb
cld
sahf
pop
pop
or
jo
iret
or
les
or
fsubr
ljmp
or
cmpsb
rcrb
ret
cmpsb
pop
ds
pop
jmp
repnz
lock
sub
das
insb
call
jl
xchg
popf
das
pop
push
in
fisttps
cmp
popa
or
sbb
into
cmp
pop
aaa
mov
test
pop
cmp
mov
and
add
fbld
gs
sbb
or
arpl
stos
add
addl
cwtl
sbb
mov
xchg
cmp
clc
xchg
adc
loop
mov
xor
roll
bnd
adc
call
cmpsb
add
fwait
cmp
call
lds
mov
mov
adc
pop
mov
sbb
sbb
aad
addb
sub
add
inc
xor
mov
pop
or
mov
aad
push
sti
pusha
test
or
jg
cwtl
jo
cmpsl
ss
es
push
xchg
xor
jne
bound
iret
jmp
xor
rcr
mov
mov
sbb
xlat
cmp
pop
popf
std
dec
lock
push
mov
push
loopne
cmpsl
push
push
and
adc
dec
jge
fmull
fs
and
push
outsb
popa
and
insb
int
in
sar
out
dec
jno
adc
out
push
xchg
mov
sbb
inc
sbb
gs
iret
or
cmp
mov
mov
fisubl
mov
andb
sub
loope
mov
js
dec
cmpsb
lea
rorl
call
cltd
lret
cli
outsl
add
leave
out
scas
lea
ljmp
adcb
jno
clc
push
inc
cmpsb
mov
pop
adc
inc
ljmp
and
sub
ljmp
add
pop
mov
and
pop
push
jae
inc
push
cmp
cmp
roll
ds
int3
icebp
cmpsl
repz
out
jg
mov
push
cltd
insl
rorb
push
xchg
hlt
push
push
push
or
push
push
dec
mov
loope
push
push
scas
cltd
cmp
mov
popa
sub
mov
std
int
jns
xchg
fdivrs
out
rcl
lahf
ret
pop
insb
xchg
xchg
int3
sahf
xchg
push
lods
jg
in
les
pusha
jp
lcall
push
enter
jns
jns
jmp
pop
and
xor
mov
mov
jmp
jle
andl
in
cmp
sbb
ljmp
fidivl
call
fsts
mov
das
dec
mov
adc
pop
jmp
aad
aam
js
xorb
cli
div
sahf
jne
and
adc
movsl
sub
sbb
imul
add
and
std
popa
and
jbe
ds
push
mov
dec
push
cmc
out
mov
movsl
xchg
pushf
das
adc
sbb
ja
bound
sarb
inc
negl
negb
ljmp
aas
mov
xchg
and
or
insb
dec
pop
inc
out
inc
adcl
in
test
pop
out
push
sbb
add
add
mov
xchg
sarb
int
jmp
lcall
ficompl
jecxz
adc
hlt
add
or
xchg
jp
mov
jp
arpl
lret
jle
adc
dec
jmp
add
xchg
pop
pop
outsb
rcr
mov
cmp
imul
addr16
lock
jge
cmp
outsb
jg
imul
sbb
jne
pop
pop
stos
fucomp
and
jp
mov
cmp
pop
xchg
dec
sub
xchg
fwait
aam
pushf
mov
fwait
dec
add
ret
lods
inc
imul
sub
mov
xchg
dec
sti
xor
fisubrl
cmpsl
add
mov
xchg
mov
cmp
fstl
xchg
std
jb
andl
mov
in
inc
loopne
jb
pushf
les
lea
adc
rcr
adc
les
stos
ret
push
pop
sub
popa
in
ljmp
xlat
shrb
test
decl
cmpsl
imul
adc
jnp
addl
inc
inc
inc
xchg
dec
cmp
inc
movsb
xchg
pop
test
lock
pop
xchg
and
aaa
pop
sub
sub
cmp
dec
push
push
fistl
push
nop
fbld
movsl
cmp
pop
stos
in
inc
shr
pushf
push
xchg
insb
inc
push
inc
pushf
pop
pop
les
dec
aas
push
stos
fwait
popf
jb
sbb
nop
push
xor
mov
pop
jp
or
out
out
ret
inc
push
insl
adc
mov
mov
xor
cli
mov
xchg
aam
test
out
sub
fbld
shll
or
adc
inc
adc
xchg
enter
jg
movsb
push
push
mov
lahf
xchg
out
dec
jbe
int
pop
jno
mov
inc
lds
or
mov
mov
cltd
xchg
add
pushf
inc
add
stc
pusha
xchg
mov
add
xchg
dec
shrl
imul
sub
mov
iret
jl
loope
outsl
incl
insl
popl
fnstcw
js
in
loopne
sbb
push
or
cltd
push
adc
aaa
les
aaa
xchg
das
inc
mov
cld
xchg
mov
hlt
mov
jmp
jb
or
icebp
imul
in
mov
add
pop
and
xor
iret
and
mov
ljmp
faddl
pop
shll
sbb
sbb
push
cmc
subl
sbb
push
push
shll
xor
dec
adc
lds
xchg
call
test
jbe
add
push
mov
imul
lock
pop
dec
cmpl
add
dec
sub
loop
in
stc
sbb
push
leave
loop
imul
cmc
push
out
pop
inc
insl
mov
and
aam
xchg
mov
bound
in
aam
scas
pop
xchg
sbb
adc
dec
addb
xor
cmp
orl
scas
jmp
and
ds
pop
cli
adc
idiv
xor
ret
cmp
xchg
pop
sbb
shlb
ss
lock
mov
lea
outsl
faddl
lret
sbb
pop
push
inc
mov
es
and
jnp
dec
xor
fcoms
xchg
shrb
xchg
cld
xchg
pop
xchg
int3
addr16
jge
or
adc
push
add
into
push
inc
mov
inc
stos
mov
pusha
mov
xchg
in
enter
sbb
dec
data16
cmpsb
mov
cwtl
or
mov
pop
push
pop
push
in
outsb
add
jmp
pop
movsl
pop
icebp
notl
dec
mov
push
inc
pop
subl
and
mov
aas
fs
jbe
filds
jbe
clc
sarl
add
pop
jle
mov
jne
outsl
lret
and
push
push
pop
loop
mov
filds
arpl
test
dec
xor
push
adc
sbb
std
repz
out
mov
cwtl
hlt
xchg
xchg
lcall
pop
lods
sahf
mov
pop
lret
mov
int
pusha
push
dec
mov
cmc
lret
xor
jb
push
cld
xchg
into
sub
mov
insb
js
jae
xlat
sub
dec
mov
mov
call
jo
inc
aad
test
push
cltd
jmp
mov
psraw
icebp
fs
and
icebp
cmpl
dec
clc
lock
pop
aam
xlat
arpl
stos
and
xlat
imul
insl
cmp
aas
clc
outsl
mov
clc
pop
mov
jns
es
jnp
xchg
iret
mov
and
or
and
test
les
inc
cmpsl
aaa
ss
xchg
ja
mov
mov
xchg
mov
pop
jb
rcl
fisttpl
iret
push
leave
fstl
mov
mov
mov
repz
jmp
dec
int3
in
xchg
cmpsl
int3
inc
out
lea
js
insl
fdivl
jg
mov
loop
test
push
sbb
mov
cmp
data16
xchg
sbb
dec
ja
outsb
mov
jo
in
test
push
push
cld
addr16
dec
sub
aaa
pop
shl
cs
and
in
pop
icebp
jae
aaa
mov
pushf
mov
je
cmp
insb
mov
push
imul
xchg
dec
xchg
int3
mov
pop
xchg
pop
push
sar
cmp
adc
into
test
jl
negb
das
cmp
shlb
mov
sti
mov
cld
outsb
lods
sub
mov
punpckhwd
pop
sbb
cmp
jmp
or
stos
jp
outsb
js
push
lret
fwait
dec
mov
repz
mov
push
push
adc
repnz
xchg
cmp
pop
cwtl
gs
cmp
adc
adc
aam
cmpsl
enter
lcall
std
xchg
das
mov
push
jbe
pop
adc
dec
fisubl
pop
cltd
xchg
fcomps
and
cmp
mov
mov
daa
inc
cmp
and
pusha
mov
jl
xchg
sub
gs
enter
push
lret
pop
mov
mov
outsl
insb
stos
mov
jne
lfs
inc
js
jnp
lea
or
ficompl
or
in
addr16
pushw
into
out
movsl
pop
pop
mov
mov
xor
or
sbb
out
dec
pop
push
mov
jmp
push
repnz
xor
sti
xchg
flds
pop
nop
cli
test
sub
mov
add
inc
push
mov
cmp
sub
fisubs
adc
fildll
dec
cs
out
pop
ja
pop
sbb
arpl
push
add
popa
sbb
add
mov
push
add
es
shll
mov
xchg
mov
ret
push
xchg
jg
pop
adc
out
in
cmp
loop
scas
test
es
add
test
inc
cmc
mov
mov
adc
leave
movsb
push
ljmp
ret
in
xchg
xchg
cmc
pop
ja
and
xchg
cwtl
jo
and
movsl
dec
cmp
scas
add
and
inc
xchg
shrb
je
push
cmp
fstp
into
addl
mov
in
inc
scas
inc
dec
and
movsb
lcall
imul
jno
mov
push
leave
lock
out
cmpsb
inc
xor
pop
mov
es
sahf
or
in
inc
aas
iret
mov
aam
xor
lcall
testl
loopne
sub
push
xchg
push
mov
dec
dec
sbb
sti
iret
mov
xchg
pop
bswap
int3
push
repnz
sub
repz
mov
mov
adc
dec
int3
popf
fidivrl
popf
popf
sahf
in
xchg
xlat
pusha
adc
push
shrl
ja
lock
pop
loope
popf
push
mov
xchg
sub
mov
dec
jnp
leave
add
jae
or
dec
push
ljmp
cmpsb
cmp
test
stos
push
repnz
bound
dec
or
gs
and
popa
sbb
jbe
inc
loopne
lcall
fs
add
out
arpl
mov
mov
stos
fucompp
cltd
loopne,pt
das
iret
and
insb
lcall
push
sti
flds
mov
repnz
gs
cmp
sahf
inc
mov
stos
je
sbbl
stos
cmp
sbb
xor
xlat
push
and
mov
xchg
mov
add
js
test
and
fcomps
mov
mov
jg
pop
data16
and
jg
or
insl
jae
ficompl
test
test
xchg
sbbb
dec
jle
push
adc
cmp
mov
lahf
mov
jmp
cmp
pop
es
lock
push
pop
xchg
out
mov
xor
arpl
fnstcw
addl
dec
gs
test
aad
popf
dec
mov
arpl
outsl
mov
out
ror
out
outsl
int3
ja
mov
sub
mov
push
mov
int3
ficompl
fsts
test
ds
dec
pop
mov
loop
in
xor
mov
cmp
or
and
ja
xor
imulb
cltd
pop
ror
xor
and
sub
dec
inc
push
lahf
dec
stos
adc
jb
sub
aas
jae
inc
pushf
add
dec
test
push
insl
xor
mov
push
orb
jne
stos
cmp
ljmp
adc
je
int3
lock
cmpsb
jg
je
push
insl
mov
ret
pop
jecxz
xchg
mov
in
dec
add
bound
mov
xchg
nop
iret
push
scas
cs
adcb
push
xchg
in
out
lea
and
pop
movsl
sub
jbe
dec
cmp
inc
xchg
outsb
int
shr
adc
lock
mov
jmp
aam
je
inc
icebp
and
mov
gs
or
fisubrs
mov
outsb
push
mov
mov
jmp
loope
mov
pop
sub
xor
insb
repz
dec
push
out
jp
out
mov
pop
in
ljmp
jnp
add
xchg
push
mov
xor
sub
dec
jp
fisttps
mov
cmp
push
and
jmp
into
inc
fiaddl
and
mov
jl
jg
rorl
cmc
jecxz
addr16
subb
insl
mov
push
inc
aas
aaa
enter
adc
dec
scas
inc
fimull
sub
jge
mov
jle
xor
push
fbld
xor
mov
fistps
shlb
add
inc
outsl
and
jb
jno
push
mov
dec
push
jmp
leave
dec
jno
fists
jl
adc
loopne
mov
add
jp
scas
jae
insb
cmp
outsb
xor
mov
sub
adc
mov
das
out
repz
inc
or
push
loope
xor
cmc
sub
cs
mov
inc
shll
add
jmp
lret
xorl
mov
xor
push
dec
lock
outsb
mov
push
in
or
mov
jns
ja
sti
mov
xor
inc
fisttpl
add
enter
shlb
je
std
mov
push
pop
mov
int3
cwtl
sbb
pop
imul
and
test
mov
fisttpl
jns
out
in
cmp
adc
cld
jecxz
mov
mov
xchg
or
mov
lds
clc
push
leave
enter
lds
xchg
sbb
cwtl
or
mov
loopne
adc
test
std
std
int3
cmpsl
xchg
mov
jge
push
sbb
inc
es
fs
sbb
cmp
push
sub
fxch
jg
int3
clc
cmp
data16
add
addb
lret
dec
jno
mov
dec
mov
pop
xchg
mov
sub
adc
push
cli
pop
pop
push
inc
mov
sub
mov
nop
shl
mov
add
aad
das
pop
daa
xor
dec
xlat
mov
inc
fucomi
or
add
lock
aad
push
stc
dec
jne
dec
jle
adc
xor
lcall
sub
sub
lea
test
iret
cmp
sub
les
fildll
popf
andl
xchg
pushf
test
sbb
sub
fldpi
mov
xor
nop
xor
cmovg
or
jp
lds
shll
dec
push
das
popa
xchg
cmpb
jp
pop
mov
push
sub
out
push
ljmp
jae
jp,pt
sub
test
adc
sub
inc
sbb
scas
ret
aaa
mov
fistpll
stos
jl
jb
mov
rcll
xor
add
inc
fcompl
pop
cmpsb
out
inc
lock
andl
loopne
das
add
push
xchg
push
push
sub
notl
es
inc
test
sahf
sbb
ljmp
aad
out
push
push
push
into
jge
xchg
sub
mov
jg
mov
shll
xor
je
add
mov
and
mov
pop
dec
das
daa
xchg
popf
bound
addl
pop
popa
aas
cld
adc
add
imul
mov
mov
inc
cmp
add
mov
sti
divl
jp
inc
int3
arpl
push
inc
into
cmc
dec
inc
pop
mov
mov
je
xchg
mov
inc
add
aaa
sbb
stc
mov
insb
push
adc
jmp
mov
adc
sar
fbstp
cltd
std
inc
add
cmp
xchg
in
mov
enter
sahf
and
add
sub
sub
shlb
jbe
push
push
lret
jg
cltd
gs
push
cmp
int3
dec
mov
xchg
enter
push
lods
sbb
test
movsb
outsb
pop
mov
dec
cmpsl
lea
cmpsl
gs
push
jo
test
dec
lcall
cmpsl
mov
stos
fs
mov
repnz
leave
icebp
frstor
or
in
xchg
mov
es
testl
sub
or
fiaddl
pop
pop
movsb
stos
push
or
dec
or
xor
dec
ret
bound
call
pop
cmp
in
sar
imul
outsl
addb
nop
mov
xchg
rcrb
add
std
or
and
adc
sbb
mov
xchg
and
pop
mov
jne
sbb
add
mov
or
mov
outsb
dec
movsl
leave
fwait
inc
in
mov
icebp
out
icebp
sarl
sbb
sbb
or
mov
cmpl
pop
push
lods
cwtl
cld
push
ss
sbb
jmp
js
es
ret
mov
sub
dec
dec
int3
das
push
add
enter
mov
in
bnd
subb
sub
stc
iret
add
aad
adc
xchg
movsl
adc
cmpsl
std
cltd
dec
mov
jp
jecxz
aas
mov
adc
sbb
sti
xlat
pushf
dec
lds
cmp
mov
lret
mov
mov
dec
xchg
inc
pop
mov
and
cmc
xor
mov
js
push
test
fldenv
push
jmp
inc
dec
aad
or
or
call
cmp
mov
mov
dec
sbb
pushf
and
inc
imul
dec
jle
sub
mov
push
dec
nop
sbb
mov
push
test
cld
inc
push
sbb
inc
xchg
dec
jp
fstl
pop
cli
cmpsb
push
mov
test
or
jecxz
mov
or
xchg
xor
inc
jae
loop
and
test
or
lods
jnp
sub
inc
cmp
xor
in
fwait
jno
outsl
dec
movsl
xchg
dec
hlt
shlb
sti
mov
sub
mov
in
inc
mov
sahf
pop
push
out
mov
jnp
repnz
test
inc
sub
loopne
pop
and
rcll
lods
or
or
aas
cmp
inc
push
mov
xchg
shl
pop
out
in
out
rcll
movsb
pop
leave
rcrb
jns
dec
int3
inc
jle
or
or
push
fldl
repz
jle
inc
xchg
aam
movsb
mov
std
imul
add
bound
aam
popf
ret
arpl
push
stos
mov
jb
mov
mov
mov
mov
sub
dec
enter
and
repnz
jno
xchg
out
xchg
xor
or
dec
push
mov
stos
sbb
push
call
cmpsb
pop
shlb
xchg
mov
es
mov
mov
mov
mov
jns
and
shlb
dec
or
movsb
out
rep
int3
sbb
adc
sbb
lret
xor
notl
xchg
ja
xchg
sub
and
cmp
dec
adc
out
pop
jmp
add
jmp
das
cmpsl
movsb
repz
sub
pop
xor
sub
test
in
and
cld
cmp
cmpsl
dec
sub
and
insb
adc
xchg
fwait
mov
xchg
cmpsl
ret
cmc
and
insl
cs
popa
js
test
mov
mov
xchg
push
mov
push
sub
jmp
mov
cmp
xor
stos
repnz
gs
dec
jns
cli
or
lods
sbb
dec
push
xchg
sub
sbb
inc
and
scas
insl
pushl
lods
into
jbe
mov
push
adcb
call
stos
or
adc
repnz
push
mov
sqrtps
enter
push
pop
jp
pop
adc
cmp
cmp
push
sub
jl
mov
jl
test
mov
jle
sub
test
sub
pusha
das
xchg
cmp
sub
jnp
stos
lods
loop
cmp
bound
loop
xchg
mov
or
lds
subl
popa
inc
jb
pmaxsw
fucomi
and
ret
and
push
ret
into
sbb
shl
and
cmpsb
out
fisttps
jmp
stos
mov
xchg
sbb
std
xchg
shrl
cltd
repnz
sub
add
mov
mov
test
add
xchg
stc
push
adc
arpl
mov
fwait
mov
lea
mov
mov
cmpsb
mov
add
lret
cmp
push
jmp
mov
push
push
test
cmp
ja,pn
insl
push
xchg
mov
mov
out
and
mov
sub
pusha
mov
pop
or
inc
clc
iret
or
je
cwtl
cs
andb
push
repnz
addl
inc
enterw
dec
scas
ss
push
outsl
les
repnz
repz
or
sub
dec
out
ret
sti
xor
ja
lds
jb
or
inc
inc
add
cltd
push
add
push
ljmp
lock
mov
fucomip
mov
add
lods
mov
cli
add
insb
dec
jne
mov
add
clc
mov
stos
pop
jns
pop
xor
stos
mov
and
inc
cmpsl
shl
jae
mov
cs
jmp
inc
mov
mov
add
xlat
lret
jno
push
mov
mov
mov
adc
fildll
inc
add
mov
inc
mov
or
push
inc
lock
shll
sbb
icebp
in
pop
rol
loop
adc
cmp
gs
inc
in
dec
cli
call
push
je
dec
lea
xor
mov
mov
out
aam
mov
mov
dec
and
in
std
repnz
cltd
push
inc
cmp
cmpps
movd
rorb
push
jg
push
mov
imul
jge
push
cmpsb
stc
fiadds
pop
sar
shlb
bound
xlat
inc
mov
subl
cmp
les
sbb
jge
jb
ret
cmp
ljmp
rcr
inc
jb
jbe
or
xchg
test
adc
cmc
test
pushl
sbb
jno
mov
dec
lcall
lahf
popa
sub
fstpt
jo
sbb
into
mov
cmpsb
cmp
mov
xchg
xor
cmp
adc
stos
xor
nop
pop
fwait
es
inc
cli
fcompl
push
xlat
pop
les
iret
mov
mov
push
fcomps
or
pop
aad
dec
ds
mov
xor
jmp
mov
xor
mov
mov
jge
xchg
jp
cmc
mov
add
dec
pop
out
inc
test
or
mov
sbb
into
jns
nop
cmc
nop
dec
jns
inc
cmp
lds
fsubrs
jl
iret
in
sub
sahf
into
xchg
pop
adc
jne
int
pushf
sbb
ret
loopne
mov
add
sub
cmp
xor
xor
push
jbe
mov
leave
jae,pt
mov
stos
les
jmp
scas
insl
xchg
mov
or
add
outsb
mov
sub
movsl
insl
mov
in
sbb
test
mov
js
sub
leave
adc
pushf
xchg
xchg
gs
cmpsb
imul
and
inc
in
fimull
mov
inc
xchg
push
outsl
mov
outsl
or
or
jmp
cmpsb
dec
sahf
push
frstor
xchg
jae
cmp
mov
inc
dec
dec
out
or
filds
pushf
pop
fstp
and
outsl
inc
fldcw
mov
arpl
mov
cmp
and
adc
adc
mov
cmpsb
sub
cs
mov
sbb
lods
inc
jge
icebp
sbb
mov
mov
daa
lret
shll
lea
adc
fst
jno
aam
stos
int3
negb
notl
test
jmp
xor
lret
out
insl
xor
loope
enter
mov
ja
sbb
dec
mov
loope
xchg
addr16
cmpsb
xlat
std
aas
idivl
xchg
xorl
les
sub
das
icebp
sbb
jle
ret
mov
rcrl
outsb
ja
pusha
lds
cmp
add
popa
pop
pop
mov
mov
xor
jp
cltd
dec
push
jns
mov
push
mov
in
cmpsl
cmp
out
xchg
adc
adc
in
jns
insl
mov
in
jae
and
inc
sub
mov
fcmovbe
mov
adc
and
sbb
xor
jge
cmc
push
fstl
adc
mov
insb
jmp
jmp
sub
clc
xlat
jg
xor
mov
divb
jg
mov
mov
mov
jl
cmp
adc
push
js
add
stos
dec
enter
mov
cld
jecxz
jp
cmp
into
push
xchg
das
or
iret
movd
std
inc
xor
mov
and
sahf
inc
mov
cmpsb
add
jbe
pop
push
loopne
fidivs
je
sahf
pop
mov
out
mov
daa
fs
add
cld
inc
daa
scas
mov
mov
jno
sahf
jb
xchg
jb
jb
cwtl
arpl
mov
out
xor
adc
pop
cmpsl
or
jne
js
stos
dec
pushf
fstpl
cmpsb
int3
test
sti
orl
repz
rclb
mov
mov
add
xchg
dec
es
mov
notb
nop
dec
pcmpgtd
sub
stc
jb
add
adc
das
and
push
push
sub
dec
mov
pop
xlat
ljmp
cli
mov
adc
fcomps
xchg
ds
xchg
mov
push
inc
adc
dec
imul
jg
xor
mov
jge
mov
push
xchg
sbb
xor
dec
pop
xchg
jmp
out
inc
inc
cltd
push
sbb
outsl
mov
xchg
in
push
pop
cmp
adc
add
fmuls
jg
jo
or
sbb
xchg
lahf
cli
pop
cmp
and
xchg
dec
sahf
cmpsb
das
pop
mov
out
xor
jne
and
mov
cmp
jl
push
pop
popa
jnp
and
int
dec
xor
shl
jb
xor
or
mov
std
div
jmp
es
xchg
add
jns
in
aam
cmp
orl
loope
or
cmpl
testl
mov
jnp
hlt
repz
mov
mov
enter
push
outsb
pop
push
xchg
repz
cmp
pop
dec
and
or
insl
loop
inc
xor
scas
stc
cmpsl
and
jp
fwait
dec
dec
inc
xor
call
pushf
out
inc
cwtl
lcall
adc
aas
or
mov
mov
and
mov
mov
ja
ss
pop
call
sbb
cli
pop
push
lcall
fbstp
pusha
outsl
lret
pop
test
shlb
mov
adc
jo
outsl
jne
cli
and
xor
call
inc
pop
and
jl
push
mov
jecxz
or
test
cld
int
push
std
cltd
test
movsl
inc
pop
dec
jl
shrb
mov
jne
repnz
outsl
in
out
or
into
xchg
out
mov
pop
das
jg
scas
je
fsubl
adc
sub
pop
pushf
inc
adc
imul
jbe
icebp
std
fistpl
pushf
inc
call
inc
inc
addr16
sub
mov
enter
lds
pop
inc
add
and
inc
shlb
sbb
outsl
es
lcall
pop
imul
dec
or
adc
and
neg
pop
adc
aaa
push
dec
push
inc
dec
in
and
xchg
and
loop
arpl
fsubl
jb
iret
movsl
push
int
rolb
jle
test
jne
pop
dec
fmuls
inc
test
in
xor
add
sbb
lods
repz
bound
in
mov
cmpsl
int
lods
std
stos
call
cwtl
pop
insl
fs
psubd
gs
cs
inc
jg
push
fidivs
mov
jns
rcll
pop
clc
inc
cmpsl
push
lahf
not
fisubrl
outsl
cmpsl
out
cmp
dec
push
push
gs
flds
jne
mov
lahf
inc
push
mov
into
jg
jo
cmp
jns
xchg
test
movsb
movsb
xchg
mov
scas
clc
out
jl
pop
add
cli
insb
enter
call
shll
push
mov
and
xchg
mov
outsb
ss
inc
push
mov
int
pusha
movsl
insb
jge
lea
jbe
and
add
pop
lods
mov
pop
inc
pusha
jecxz
aam
cmp
je
add
out
fildll
adc
push
pop
ret
fwait
cmp
pushf
popa
imul
sbb
insl
lods
inc
rorb
cmpsb
aad
aaa
mov
inc
adc
notb
jge
cmc
mov
sbb
or
test
stc
xor
xchg
cmp
cmp
push
pop
mov
sub
mov
rorb
dec
add
ds
lea
in
sbb
mov
and
mov
mov
jl
mov
lods
mov
out
out
mov
push
rol
fdivl
xorb
adc
imull
mov
add
ja
arpl
adc
out
or
pop
setbe
and
jecxz
icebp
aam
dec
push
push
cmpsl
jmp
pop
adc
xor
cmp
jle
cs
leave
lock
inc
or
cld
push
push
inc
cmp
test
subb
mov
adc
imul
add
flds
xchg
mov
iret
xor
push
lcall
fcompl
add
or
cmpsb
cmp
pop
and
add
stos
add
adc
test
std
in
fisubrl
in
lret
cltd
and
or
loopne
and
pusha
loopne
xchg
inc
aam
push
outsb
inc
loop
rcrl
cld
movsb
jecxz
xor
lret
pop
jge
das
cltd
ror
pop
cltd
out
xor
andw
out
into
push
loop
cltd
pop
out
inc
insl
popa
lods
mov
dec
shr
sub
fidivl
mull
shll
daa
andl
mov
adc
mov
jo
mov
jbe
imulb
jbe
adc
rcrl
mov
dec
push
mov
and
mov
shl
pop
and
jle
inc
shll
mov
hlt
popa
idivb
push
hlt
lods
or
bound
es
cld
and
pop
movsl
add
mov
pop
test
push
mov
scas
pop
cmp
es
xor
cmpsb
jle
sub
shrl
sbb
sub
jmp
inc
rorl
clc
mov
push
sbb
sub
in
inc
sbb
inc
pop
out
dec
ljmp
enter
jnp
aas
add
in
sbbl
mov
aam
dec
sub
scas
or
sahf
inc
xor
pop
or
cmpsb
mov
fiaddl
ja
pop
adc
insl
fcompl
shl
inc
pushf
mov
cmp
mov
lods
or
jno
xor
sahf
mov
lret
and
in
or
jbe
stos
popa
popl
in
mov
lret
in
adc
jl
push
inc
shll
pop
insl
in
lds
aaa
daa
rcr
or
out
mov
push
xlat
lds
pop
mov
aad
push
pop
fcompl
mov
loope
xchg
subl
scas
mov
test
and
push
popf
imul
xor
pop
lds
mov
das
sub
pop
dec
pusha
jmp
xor
popa
mov
out
in
pusha
mov
dec
inc
jmp
loopne
jge
clc
fsubl
adc
movsl
shl
and
mov
stos
aas
scas
or
jo
mov
push
fdivs
sbb
lds
mov
add
into
les
push
into
mov
movsb
mov
sbb
rorb
and
pop
negl
into
cmp
shll
jno
fmuls
enter
sti
arpl
mov
sbbl
mov
test
bswap
jmp
inc
clc
adc
jne
jmp
out
fucomp
add
out
sbb
jae
movsl
jg
push
xorl
cs
cmp
rolb
testb
flds
pusha
dec
mov
popf
in
repnz
jl
and
incb
xchg
pop
add
xchg
cwtl
dec
ror
int3
movsb
rorb
insl
jecxz
cld
xor
iret
xor
imul
adc
mov
fsub
outsb
mov
loopne
sub
jnp
out
mov
mov
sti
adc
add
push
sbb
pop
leave
mov
imul
in
pop
xchg
std
out
mov
rolb
mov
es
xabort
xor
pop
lret
push
sti
std
call
out
inc
sub
mov
movsb
lcall
jbe
mov
mov
cltd
pop
or
jmp
or
inc
sahf
xor
scas
dec
fisubs
pushf
outsb
fwait
mov
into
cmp
add
out
fst
push
cmpsl
aam
outsl
push
add
in
cwtl
pop
push
jl
and
push
pusha
aad
adc
lcall
fstpl
cmp
and
lods
cmpl
sbb
call
stos
pop
gs
ljmp
fisubl
push
pop
push
fstpt
out
int
cltd
or
add
sbb
mov
shrl
cwtl
push
or
push
pusha
jle
xor
test
cmp
subb
adc
popf
add
xor
fstps
sub
movsb
lcall
dec
mov
rorl
xor
pushf
xor
dec
pop
xor
adc
sub
lret
or
int
xor
and
sub
shrb
bound
jo
cli
xor
ss
paddsb
stc
sbb
inc
sbb
fstpt
test
add
addr16
test
addr16
cli
jl
ficompl
fldenv
pusha
out
rcrb
or
jl
push
aas
pop
idivb
sbb
mov
fimull
int3
subb
pop
arpl
daa
jmp
sbb
pop
loop
or
xor
xchg
xchg
insl
leave
lret
jmp
test
fistpll
or
iret
addr16
mov
xor
int
sub
pusha
ljmp
testl
pop
data16
movsb
lahf
adc
or
push
cmpsl
cmpsl
iret
pop
cmp
mov
lds
mov
pop
notl
scas
add
adc
push
pop
push
jns
mov
xor
push
in
fldcw
and
or
dec
mov
fisttps
lret
pushf
loopne
dec
jnp
test
leave
add
movsb
push
cmp
pop
repz
loopne
add
xor
int
xor
mov
pop
adc
jle
sti
pop
movb
push
js
mov
push
mov
adc
xor
popf
xchg
mov
sub
mov
add
add
dec
outsb
mov
xchg
push
add
loop
add
insl
aam
or
lahf
mov
xchg
pop
pop
fisttpll
adc
int3
jne
pop
sbb
jmp
movsl
les
insb
outsl
shl
or
add
icebp
cmp
mov
xor
mov
in
aad
push
jns
lret
mov
jle
icebp
out
mov
xchg
pop
popl
jns
dec
sub
push
pop
sub
fadds
pop
lods
add
out
movsb
ljmp
imul
jns
loop
push
rorl
mov
outsl
loop
push
xchg
jp
ret
pop
ret
xchg
mov
mov
push
add
dec
inc
xor
pop
ljmp
add
lea
orl
hlt
push
popf
xchg
repnz
out
std
sahf
das
xchg
mov
lret
insl
arpl
in
inc
out
scas
cltd
or
push
das
inc
jnp
push
in
xlat
rorl
andb
pop
xor
dec
stos
xchg
pop
push
jo
aas
rorl
sarb
popa
lahf
in
enter
stos
insb
rclb
lret
pop
sbb
iret
or
jmp
hlt
xor
rcrl
aas
mov
push
es
and
add
push
outsb
gs
jb
test
lcall
icebp
inc
loope
jecxz
je
cmpsl
inc
pop
dec
and
movsl
in
add
cwtl
dec
mov
cltd
fdivs
jno
sbb
filds
add
mov
pop
out
cs
les
aam
adc
incb
ret
cmpsl
and
outsl
mov
faddl
ds
mov
pop
pusha
push
lret
xor
cmpsb
dec
xchg
out
and
or
mov
jle
xor
int
or
lds
pop
lock
mov
dec
cmp
mov
push
cmpl
es
test
sub
pop
in
out
mov
lds
test
and
mov
xchg
je
negl
push
sbb
and
lea
xchg
stos
inc
dec
clc
adc
imul
test
sar
mov
sbb
clc
dec
cmp
dec
dec
ja
mov
ds
lods
add
jle
sbb
sbb
ss
mov
in
mov
ja
jnp
ss
adc
popf
insl
popf
cli
cmp
adc
jle
fsubrs
data16
idiv
pop
cli
out
stos
sahf
insl
test
mov
mov
sub
shlb
mov
in
pop
xchg
and
bound
mov
pop
inc
cld
inc
inc
pusha
out
mov
add
pop
pop
ja
sbb
aaa
mov
push
jg
shrb
pop
repz
aam
dec
je
dec
aas
pop
xchg
mov
add
and
xchg
add
mov
jecxz
aaa
xchg
insb
cli
jnp
enter
aad
insl
inc
mov
mov
bound
xchg
fwait
xchg
push
call
movsb
popa
ds
in
dec
lret
mov
adc
imul
sbbl
mov
or
push
xchg
cmc
push
cmc
xor
fiadds
stos
movsb
mov
xchg
inc
xchg
gs
jmp
loope
clc
shlb
rcr
mov
push
mov
jbe
dec
xchg
or
inc
push
out
into
jae
shl
dec
and
pop
outsb
hlt
sahf
xchg
pop
push
stos
es
xor
pop
push
js
mov
adc
or
mov
pop
fwait
rcrb
jl
call
iret
add
xor
daa
add
sbb
push
inc
cwtl
dec
inc
incb
in
pusha
mov
sahf
jbe
into
add
fdivs
jns
shrb
dec
mov
fldpi
push
push
dec
insl
add
xchg
pop
imulb
stos
adcb
sti
test
pop
xlat
fcoms
bound
and
mov
jmp
js
inc
scas
inc
xor
adc
js
lock
movsl
test
mov
mov
popf
push
fdivl
jno
insb
fisttpl
pop
bound
jg
sub
mov
or
sahf
adc
or
cmp
sbb
xchg
gs
mulb
add
jg
inc
mov
mov
bound
mov
jo
or
aad
outsl
data16
pop
sbb
stos
cmpsb
pop
roll
adc
popa
call
iret
mov
adc
mov
hlt
cwtl
xor
in
pop
loop
jae
or
cmp
adc
mov
popf
jnp
push
mov
cmp
pop
xor
or
inc
push
pushf
mov
mov
dec
sbb
mov
pop
sub
jnp
jbe
and
movsl
pop
in
inc
stos
loopne
incb
mov
fsts
andl
pop
ja
es
or
pop
push
jp
add
xor
pop
scas
push
push
addl
xlat
sbb
fcomps
inc
in
nop
cwtl
dec
mov
pop
cmp
call
xchg
jle
mov
xlat
xlat
xchg
push
test
inc
mov
and
fbstp
out
test
mov
xorl
mov
daa
jbe
sbb
push
pop
adcb
shl
xchg
pop
lret
mov
and
and
jae
xchg
fsubs
sbb
push
inc
pop
mov
mov
scas
jae
push
or
mov
mov
mov
or
or
push
insb
mov
lods
mov
cltd
scas
repnz
scas
or
or
adc
mov
and
mov
jno
aam
dec
out
mov
xchg
incl
pop
adc
insl
arpl
dec
ds
jno
push
test
iret
sbbb
cmpsb
lcall
pop
jge
mov
nop
cltd
aas
daa
mov
push
inc
mov
pop
cmp
jns
sbb
ss
gs
ja
sub
or
xchg
ret
lcall
sbb
std
sbb
je
xchg
pop
dec
sub
pop
ss
gs
rclb
push
and
xchg
push
push
cmp
mov
pop
mov
inc
into
movsb
xchg
ret
nop
mov
neg
dec
test
dec
pop
fistl
sbb
fmuls
popa
arpl
mov
mov
inc
out
cmp
mov
dec
sub
inc
jp
xchg
xor
mov
adc
int3
repnz
pop
inc
sbb
dec
xchg
mov
std
decb
push
xchg
lods
sbb
mov
cmc
repz
sub
fisttpll
and
xor
xlat
xlat
pop
imul
loopne
cmpsl
aas
inc
lea
call
in
jns
push
pop
xchg
shl
dec
imul
cmpl
outsb
sbb
les
mov
cmp
mov
mov
pop
stos
cmp
imul
push
mov
pusha
loope
add
stos
cli
pop
sub
loop
je
xor
data16
sbb
add
pusha
arpl
mov
test
push
mov
aaa
sbb
cmc
push
daa
push
or
fcomps
repnz
push
mov
int3
mov
aas
rcrb
dec
ss
pusha
test
sbb
mov
enter
sbb
and
mov
sub
push
pop
adc
and
xchg
adc
pop
cwtl
mov
and
js
out
adc
rcl
mov
cmc
test
sahf
push
jo
inc
sbb
gs
dec
aas
popa
jmp
jmp
loope
sbb
mov
dec
out
es
mov
fdivl
psllw
in
xlat
hlt
add
pop
lods
mov
mov
fstpl
cli
mov
mov
inc
stc
out
lret
xchg
ret
js
lret
cs
adc
adc
push
jae
mov
push
sbb
inc
xor
and
and
push
test
fiaddl
pop
enter
out
fcomps
idivl
jg
jecxz
pop
rclb
push
adc
inc
or
popf
pop
and
sbb
icebp
int3
jb
pop
fcmove
out
dec
xlat
or
out
dec
gs
push
or
aas
inc
mov
adc
jge
imul
outsb
ljmp
sti
test
popf
out
xor
cli
data16
pop
fildl
pop
jno
jae
les
xchg
addr16
jno
pop
sbb
decb
inc
mov
and
mov
loop
xorl
std
setns
jl
jge
add
inc
scas
fadd
cmp
dec
push
lret
jae
out
or
mov
sbb
data16
ficomps
cmpsl
or
pop
xchg
mov
bound
notb
sbb
mov
cmp
xchg
and
inc
jae
inc
pushf
mov
mov
pop
lock
addb
hlt
mov
pop
push
out
addr16
popf
adc
popa
dec
in
sets
inc
dec
pop
hlt
aad
jnp
int3
fisttps
jmp
mov
ret
out
ljmp
xchg
cmp
insb
in
lahf
out
test
sar
pop
jg
sub
sbb
pusha
inc
mov
add
nop
mov
sbb
adc
inc
jns
ljmp
add
mov
mov
pop
xchg
int
out
popa
popf
dec
mov
fyl2xp1
push
mov
xchg
inc
icebp
fistpll
pop
and
out
dec
push
mov
enter
jl
lcall
add
in
or
adc
das
inc
and
push
ss
in
adc
data16
mull
popf
push
sbb
insb
push
pop
in
cltd
and
xor
inc
call
mov
xorb
pop
lret
jle
cltd
jl
push
fcomps
inc
dec
xchg
add
roll
pusha
and
aam
std
sub
or
out
shl
lret
inc
and
cwtl
cmp
fucomi
mov
popa
fidivs
sub
or
mov
insl
fisubs
and
out
pop
repnz
and
cmpb
push
mov
xchg
add
push
movsl
mov
jecxz
jmp
lods
xchg
sbb
cmp
lahf
adcb
jp
mov
and
into
inc
insl
xchg
mov
rolb
mov
or
jae
into
adc
insl
flds
jo
in
mov
mov
data16
mov
mov
sbb
cmpsb
mov
inc
lods
lret
add
sub
mov
jmp
std
lahf
fdivr
pop
test
cwtl
push
dec
lds
inc
mov
dec
lock
imulb
ja
jae
jnp
mov
xor
repz
and
test
aas
mov
shl
in
fwait
push
loope
and
out
xlat
jae
sub
enter
mov
popa
mov
push
lea
jl
outsl
mov
stc
leave
arpl
mov
fcmovu
and
aad
fldcw
mov
xchg
sbb
sub
or
int
mov
push
inc
cmp
out
push
jns
rorl
sbb
movsl
xor
test
adc
dec
pop
push
and
leave
cli
mov
ja
fsub
shl
push
inc
and
fisubl
cmp
repz
jae
sbb
bound
jp
xor
ds
push
push
push
inc
pop
xchg
hlt
dec
sub
pop
sub
scas
inc
push
adc
aaa
das
xchg
in
mov
mov
pop
inc
add
shlb
loope
outsb
in
mov
or
inc
cmp
cld
inc
xchg
pop
insl
loope
sbb
inc
mov
adc
cmp
xorl
cmp
mov
repnz
inc
jmp
xchg
shrl
mov
mov
fsts
test
daa
test
add
pop
sub
mov
sub
jmp
mov
pop
sbb
jl
inc
outsb
das
push
mov
mov
mov
xchg
pusha
les
int3
mov
push
clc
in
cmp
cltd
jb
loop
and
adc
aaa
pop
cli
push
test
sub
jle
cmp
mov
xchg
rcll
mov
inc
gs
mov
movsb
push
popf
xchg
add
sbb
or
cmpsl
outsl
lahf
mov
std
pop
jns
ret
xlat
sub
cs
packsswb
mov
push
and
out
outsb
flds
ret
cmp
adc
inc
mov
stos
call
mov
mov
inc
es
insb
es
mov
mov
xor
je
test
jmp
or
mov
lock
popf
loope
push
sbb
je
xchg
pusha
call
push
mov
test
int
pop
in
ss
adc
sub
test
mov
adc
insb
dec
in
push
jbe
pop
add
sbb
push
push
adc
movsb
loope
loope
xlat
mov
jbe
test
fidivrs
pusha
or
test
stos
push
std
push
xor
mov
adc
addr16
mov
push
fdivs
mov
fists
icebp
xlat
jo
jge
imul
ficoms
adc
clc
ss
test
fimull
test
push
xchg
cli
arpl
stos
jno
mov
jns
cmp
std
cmpb
inc
pushf
push
mov
ljmp
out
pop
add
jmp
imul
push
loopne
dec
xchg
ljmp
xor
ss
loope
aaa
sub
test
outsb
sbb
pop
jne
jns
jno
daa
in
mov
dec
push
push
dec
jecxz
sar
les
mov
or
and
cmp
test
xchg
outsl
pop
rol
imulb
stos
js
adc
jp
ss
bnd
sbb
inc
test
test
shl
aam
enter
xchg
adcl
push
out
sbbb
mov
into
inc
sbb
ja,pn
push
ficompl
or
jnp
jp
xorl
in
stos
in
jg
popa
adc
lock
mov
xchg
push
sub
inc
in
roll
and
out
pop
pop
ret
rcr
dec
xchg
rorl
mov
repnz
mov
push
movsl
pop
out
fbld
mov
int
sbb
repz
and
pop
out
iret
xor
push
in
in
pusha
mov
and
stos
inc
pop
add
adc
pop
pusha
cmp
testb
or
xor
int
stos
fistl
sbb
test
sub
inc
faddl
dec
and
push
mov
bound
in
xchg
sbb
int3
sub
outsb
out
ds
in
dec
xor
cmp
xchg
lea
mov
jg
out
addb
jne
ja
inc
dec
fstps
xlat
jo
jp
rclb
pop
iret
sub
inc
stc
sbb
fwait
sahf
in
popa
cld
mov
pop
adcl
test
sbb
jbe
into
xchg
repz
sub
sub
pop
pop
mov
xor
or
fisubs
push
lahf
int3
movsl
pop
xlat
arpl
add
mov
cmp
sub
ret
es
shrb
cli
lahf
in
mov
push
daa
mov
ds
pushf
mov
mov
inc
js
or
arpl
jmp
sub
lock
out
pop
mov
mov
mov
pop
fsubrs
mul
push
and
aas
les
ds
int3
mov
mov
xchg
mov
jns
and
add
sbb
sbb
and
xor
pop
adc
aaa
in
lods
mov
into
mov
cmp
jo
mov
mov
pushf
lea
jge
mov
jnp
mov
sbb
sub
mov
inc
jns
xchg
pop
or
lret
sub
mov
cmp
sbbl
mov
scas
mov
sbb
push
pushf
xchg
mov
pop
frstor
dec
push
push
mov
pop
push
jge
aad
icebp
test
enter
jne
push
out
scas
xchg
pop
xchg
lret
sti
push
adc
mov
inc
int3
das
in
adc
mov
jbe
and
orb
add
mov
mov
adc
cld
and
nop
or
pop
hlt
jnp
adc
sbb
xchg
rcr
jmp
mov
out
adc
in
jl
cld
xlat
out
xchg
inc
test
pop
mov
push
mov
fsubrs
cs
and
pop
add
xchg
fsubrs
aam
fidivs
dec
jno
fisubrl
jmp
sbb
mov
and
xchg
adc
jle
repz
dec
add
inc
ljmp
xor
xchg
sbb
push
setbe
sbb
xchg
mov
lods
hlt
movsb
orb
in
mov
mov
inc
cld
inc
je
ss
icebp
push
push
cmp
inc
cs
jne
pop
mov
lret
pop
gs
lea
xchg
mov
test
js
fmull
cmpsb
mov
mov
fdivrl
scas
and
cltd
pushf
cmp
mov
adc
aas
mov
aaa
rcll
fwait
lock
iret
cmp
dec
jno
push
mov
sub
mov
lods
into
les
rorl
mov
mov
pop
js
pop
clc
in
inc
xchg
das
pop
or
xchg
dec
hlt
je
pusha
gs
sub
jo
stos
lods
mov
dec
pushf
aam
adc
jmp
inc
js
fildl
or
sti
mov
mov
fidivrl
xor
cwtl
xchg
inc
mov
lods
and
fbld
aas
loop
xor
pop
out
push
insb
jg
pop
out
sbb
push
jge
mov
inc
fcomps
xchg
std
and
popa
ret
cmp
mov
int
in
aaa
das
inc
jnp
and
mov
in
cs
movl
push
cmc
jmp
insb
rcrb
hlt
jns
out
push
mov
cmpb
lea
negl
popa
divb
mov
shlb
pop
int
dec
pop
hlt
inc
aad
imulb
out
push
adc
gs
dec
mov
inc
adc
shll
fs
xor
cmp
xlat
sbb
cmp
push
pop
or
icebp
repnz
mov
add
pop
fistpll
sub
rcl
dec
push
ret
shrl
clc
daa
pop
or
push
mov
int
adc
sub
stos
js
mov
cwtl
and
das
add
in
movl
sub
jns
pop
pop
addb
repz
outsb
shrb
xchg
and
pop
in
aaa
scas
out
ss
and
push
ret
jnp
imul
ja
outsb
stc
mov
scas
addl
ljmp
fisttpll
cmp
daa
push
cmp
adc
dec
or
sub
push
icebp
movsbl
xor
popa
and
pushf
push
in
roll
imul
mov
movsl
sbb
insb
mov
adc
les
out
loopne
out
jno
rorb
inc
mov
lret
test
lret
jae
mov
xchg
jmp
in
cmp
mov
push
es
lret
jne
dec
and
sbb
sub
daa
mov
jmp
out
mov
ja
je
push
adc
mov
mov
pop
push
sbb
xchg
aad
int
dec
and
out
out
pop
fs
inc
in
dec
push
pop
jg
loop,pn
setne
test
test
lahf
leave
cmc
fwait
ljmp
aam
movsl
push
out
movsl
jnp
xchg
fildl
adc
dec
sbb
xsaveopt
push
ror
push
stc
and
mov
mov
loop
pop
out
and
pop
pushf
scas
push
ret
mov
xor
pop
ret
std
cmc
in
hlt
idivb
int3
ret
int3
test
and
add
outsl
cmp
icebp
negl
mov
mov
jp
xor
inc
inc
fistpll
jbe
inc
fisubl
mov
dec
mov
in
inc
jo
mov
popa
testl
sbb
pop
divl
xchg
cmp
fwait
mov
and
cld
adc
hlt
and
jbe
test
shrb
punpcklwd
pop
stos
sbb
ret
or
shl
add
in
ret
mov
in
dec
outsb
test
xchg
pop
pop
ffreep
pop
pop
jle
outsb
lcall
push
out
xlat
xor
lea
nop
sarl
mov
enter
sub
xchg
nop
xor
out
loopne
fbstp
iret
jb
pop
das
jnp
or
inc
ss
xor
cmp
push
xor
inc
negl
mov
inc
sub
cmp
ret
mov
push
add
inc
inc
xchg
fst
inc
icebp
cmpsb
mov
jg
or
jns
sahf
aas
lret
and
call
loop
in
lock
or
cmp
jmp
dec
popl
mov
dec
mov
outsl
or
sbb
popa
lahf
cld
jbe
fs
insl
loopne
add
mov
xchg
fwait
pop
jmp
ret
jbe
lods
jle
push
loopne
push
inc
jmp
mov
and
test
roll
xchg
mov
daa
jp
iret
movsl
in
and
cmp
shll
cmpsb
xchg
shl
xchg
dec
fsubp
adc
test
inc
test
and
daa
out
cmpsl
xchg
gs
jmp
addl
sbb
fwait
cmpsb
pop
negb
cmp
into
push
loopne,pn
push
repz
clc
mov
std
jae
ret
inc
test
add
mov
adc
mov
iret
pop
adc
sub
scas
test
mov
in
jmp
repnz
mul
pop
push
movsb
sub
pop
stos
repnz
or
xor
mov
adc
inc
loop
mov
cmc
clc
jns
repz
sbb
cmp
lahf
out
mov
aaa
jns
push
out
inc
push
stos
jle
pop
das
cwtl
and
mov
add
scas
or
sub
movsb
inc
dec
xchg
rorb
lods
mov
cmp
mov
mov
movsb
mov
jmp
cmp
js
adc
add
sub
test
in
sti
es
roll
xchg
shll
es
push
push
xor
aad
adc
push
ljmp
cmp
add
enter
popa
loop
push
xchg
mov
add
mov
shlb
mov
mov
loopne
fldcw
and
sarl
adc
lds
dec
mov
imul
jbe
mov
mov
pop
push
jp
mov
dec
push
sub
sbb
andl
cmp
mov
stos
sub
push
xchg
pusha
dec
adc
inc
mov
jg
lcall
adc
pop
stos
fdivs
sbb
sahf
daa
push
pop
mov
or
pop
inc
jo
imul
icebp
popa
jg
pushf
fnsave
pop
int3
aad
insl
mov
inc
mov
int3
add
dec
fcompl
fdivrp
sbb
dec
mov
push
mov
out
and
aad
jmp
movsb
mov
dec
inc
jbe
std
add
fs
inc
adc
neg
jg
ss
mov
test
popf
fmuls
rcll
mov
inc
sti
and
ja
xchg
adc
jg
push
nop
sbb
mov
cmp
pop
lock
in
sti
mov
cmp
popf
out
loope
cmp
push
cmc
xor
out
shl
mov
sbb
dec
lcall
and
imul
mov
mov
mov
hlt
loope
push
lea
sbb
xchg
adc
xor
pop
push
test
out
sbb
lcall
les
movsb
or
out
fwait
mov
adc
leave
gs
mov
repnz
stos
pop
cmp
lcall
pop
cmp
xchg
inc
inc
lcall
xchg
pop
xchg
call
mov
jae
xor
dec
inc
xchg
ljmp
jnp
ret
pop
add
push
jb
sbb
iret
dec
dec
and
lahf
hlt
fwait
rorb
mov
cwtl
push
xchg
mov
outsb
popf
hlt
jp
and
inc
jp
lret
mov
sbb
jno
jo
mov
mov
jae
stc
lock
mov
imul
scas
sbb
jnp
sbb
hlt
idivl
cmp
fs
adc
push
lock
mov
xor
pushl
add
add
lret
popl
adc
pop
push
mov
mov
out
and
xchg
fwait
sub
lret
cmp
cmpsl
cmp
scas
and
aas
movsl
xchg
pop
lock
pop
cmc
or
sbb
rolb
ss
cwtl
sub
inc
mov
stos
bswap
pop
xor
mov
sbb
mov
push
mov
cmp
mov
jne
cmp
test
xor
or
cltd
xor
sub
cltd
sub
lcall
cmpb
sbbl
icebp
int3
jmp
das
sbb
and
jl
decb
fs
into
les
into
adc
loopne
sbb
loopne
in
cmp
cmp
lahf
out
cmp
in
inc
adc
push
mov
dec
jmp
add
dec
test
fisubrs
mov
into
insl
xor
fwait
lret
dec
clc
loope
cmpsl
and
stos
es
movsb
cmp
or
dec
testl
adc
in
lcall
popl
in
out
push
enter
mov
jae
ficompl
and
mov
or
pop
xlat
add
leave
cmp
push
imull
mov
push
jbe
stos
dec
adc
std
dec
cmc
xchg
push
xchg
std
pop
or
int3
push
adc
mov
ficoml
in
mov
push
sbbb
sub
adc
loope
inc
nop
or
inc
sub
push
sub
pop
jnp
xor
jecxz
cmp
dec
push
inc
daa
pop
mov
filds
xchg
enter
pop
xchg
add
xchg
xor
test
repnz
pop
rcll
push
inc
xchg
lds
mov
rol
sti
or
or
pop
xchg
inc
push
imul
bound
cmp
sub
mov
sbb
and
push
jle
sbb
mov
push
inc
dec
dec
pop
mov
das
inc
xor
pop
cltd
adcl
mov
dec
push
xchg
repz
cmpl
and
pusha
aas
movsl
je
shrb
dec
dec
ret
fldt
pop
outsl
push
nop
sbb
rorb
mov
nop
lahf
mov
dec
sbb
lret
xor
add
push
xlat
scas
lcall
sbb
push
jle
and
pushf
testb
insl
lcall
mov
pop
pusha
or
iret
sti
jg
cmp
jg
add
mov
jo
inc
pop
cli
es
mov
mov
mov
mov
aam
mov
imul
in
subl
mov
repnz
ret
je
or
add
adc
fwait
mov
or
and
cmp
stos
xchg
and
scas
ja
cmpsb
mov
fwait
int3
cmp
pop
sbb
iret
inc
add
icebp
popf
stos
cmpsl
xchg
fs
pop
rcpps
cmpsb
lcall
loop
jge
gs
adc
jp
pop
in
or
mov
mov
adc
arpl
push
sbb
lea
in
push
rolb
inc
addb
inc
orl
pop
push
xor
inc
imul
push
mov
push
int3
push
cmpsb
lret
jae
and
adc
icebp
dec
imul
or
adc
mov
inc
xchg
sub
in
repnz
cli
ja,pn
orl
insb
loopne
sbb
andb
mov
jnp
and
pop
xchg
es
push
jecxz
dec
cmpl
pop
pop
leave
cmp
into
ror
dec
mov
clc
inc
pop
sub
jbe
icebp
mov
in
loope
jne
pop
mov
repz
les
jnp
cs
jp
rclb
xlat
jp
jmp
jg
xor
inc
jge
repnz
push
inc
hlt
or
mov
mov
notl
loopne
andb
popf
inc
jl
mov
push
addr16
or
jnp
out
outsb
cli
mov
cmp
stos
movsl
ljmp
add
mov
push
js
mov
adc
xchg
lcall
es
dec
mov
in
mov
pop
pop
jle
outsb
sbb
dec
push
jo
negl
int3
and
pop
xchg
mov
inc
dec
ja
push
loop
push
xor
aam
icebp
imull
ret
xchg
pop
mov
sbb
pop
ret
std
xchg
cld
xchg
xchg
add
sahf
xchg
cli
lock
adc
mov
je
pop
fyl2x
pop
and
repnz
pop
test
xchg
xor
sub
mov
iret
je
sahf
cltd
test
sub
xchg
pushaw
push
mov
pop
mov
mov
sbb
loope
les
xchg
pop
cli
mov
pop
mov
and
adc
dec
cli
mov
mov
xchg
lret
cwtl
inc
lds
xor
adc
mov
sti
and
add
sbb
fwait
pop
ret
fstps
and
jl
addb
jle
lock
aad
adc
sub
test
loope
xchg
fisttps
int
outsl
mov
ret
add
jmp
bound
fldz
call
jo
lods
push
xor
mov
adc
pop
imul
jle
je
sbb
rcrb
sbb
xor
lock
add
jl
shr
cld
push
mov
add
dec
mov
out
adc
pop
or
xor
sub
push
ret
lock
inc
cmp
xchg
mov
js
push
hlt
xor
imul
add
sub
fsubs
dec
into
insl
lea
out
adc
sbb
mov
or
pop
shlb
std
out
jle
aaa
dec
cmp
test
adc
cmpsb
dec
insl
mov
dec
nop
jge
lcall
adc
xchg
cmc
into
and
ret
jp
ret
xchg
sub
xchg
add
repnz
mov
inc
pop
out
lods
and
fucomi
lock
pop
pop
push
sbb
xor
hlt
or
sbbl
dec
adc
mov
in
push
shlb
xor
push
and
cwtl
add
dec
rorb
add
inc
sub
fcoml
or
and
fidivrl
add
arpl
testb
int3
cmp
repnz
xor
sti
xor
mov
inc
popa
mov
ja
xchg
xor
fcompl
clc
shll
clc
out
orl
sub
enter
or
dec
xor
mov
into
nop
test
inc
cmp
scas
mov
dec
leave
es
mov
jmp
sbb
ss
cltd
pop
out
inc
inc
and
ds
adc
pop
negb
or
outsl
bnd
int3
dec
jne
mov
imull
aas
mov
xor
push
xchg
xchg
outsl
or
inc
add
ds
mov
pop
sar
adc
stc
aad
out
imul
pop
mov
jbe
clc
lcall
lahf
scas
loopne
mov
sbb
imul
ja
fs
pop
jmp
mov
movsl
lods
xchg
xor
and
sbb
lret
stos
lods
das
loop
inc
imul
fcoms
inc
jmp
fadds
or
mov
cwtl
pop
jb
dec
mov
mov
pop
lret
int
insl
push
fs
cwtl
sub
sbb
sbb
lahf
sbb
dec
mov
inc
sbb
pusha
pop
lds
pop
cwtl
mov
mov
and
std
adc
push
stos
pop
mov
cmp
fstps
sbb
mov
xor
cmp
sbb
out
aam
xor
xchg
xlat
aad
add
daa
xor
jecxz
lahf
mov
sub
cmp
and
in
cmp
mov
aam
mov
push
aam
imul
fwait
aaa
aam
rorb
in
jae
add
bound
dec
cli
inc
fnstsw
aad
mov
xor
aas
movl
popf
gs
lock
xchg
xchg
out
mov
add
fmuls
push
sbb
or
adc
dec
fisttps
push
sahf
ret
sbb
xchg
out
cwtl
orl
xchg
pop
inc
fucom
fdivrs
fnstsw
push
jmp
daa
clc
or
adc
sbb
rolb
xor
fdivrs
orl
lock
mov
cmpsb
aam
push
test
aaa
xor
inc
mov
cmc
cmp
xor
push
shll
int
clc
loope
fnstsw
outsb
addl
jnp
in
sub
js
xchg
bound
fstpt
in
je
xor
int3
jbe
int3
loop
pop
mov
sbb
outsb
fidivs
arpl
cmpsb
aad
jo
mov
shll
ss
push
pop
int3
mul
pop
lret
push
jo
jns
inc
mov
adcl
adc
cld
cwtl
mov
mov
mov
and
mov
in
dec
inc
mov
addr16
fbstp
lea
mov
nop
movsl
mov
push
jp
fsubrl
out
xor
rcl
mov
xor
int
mov
cmp
xchg
add
andl
jmp
jecxz
push
cwtl
jl
push
mov
clc
aas
sbb
insb
xchg
shlb
and
push
loop
add
sbb
xchg
lcall
push
adc
fwait
add
pop
cwtl
xchg
popa
fiadds
adc
add
pop
push
adc
push
pop
inc
inc
mov
or
xchg
or
cmp
jle
pop
out
jbe
pop
jo
daa
lcall
lds
inc
fwait
stos
and
es
xor
inc
addb
xor
test
lods
and
push
stc
or
push
push
add
popf
sbb
mov
cli
mov
fdivrl
dec
inc
sarb
mov
test
shrl
int
inc
inc
mov
in
test
add
dec
mov
into
es
push
out
test
xchg
push
rcll
mov
fstps
out
xor
mov
sbb
outsb
bound
push
in
mov
pop
idivb
push
mov
rcll
jae
mov
aaa
test
cmp
mov
fadd
sarb
outsl
iret
cmpsb
push
xchg
sbb
imul
lcall
mov
sbbb
dec
mov
pop
fistps
add
mov
mov
insb
stc
and
xchg
les
out
xchg
xlat
lret
lods
sub
sti
sbb
mov
lods
shl
sbb
addr16
adc
xor
jmp
lret
and
jge
in
sti
sbb
jmp
cmp
mov
enter
cmp
sbb
scas
in
mov
loopne
ret
adc
pop
xor
push
in
gs
adc
and
icebp
inc
mov
pop
ljmp
pop
aas
popf
cs
sbb
imul
jne
cltd
lret
jne
pop
scas
test
stos
inc
in
repz
jo
into
stos
test
inc
sahf
lods
jbe
xorb
in
pop
and
fildll
data16
adc
lea
mov
pop
test
ss
and
cld
clc
inc
pop
popa
imul
jg
and
nopl
dec
aas
xchg
pusha
sbb
sbb
and
divl
jno
adc
pop
mov
mov
out
imull
fadds
mov
sbb
cmp
aad
inc
inc
push
xlat
sbb
cmpsl
xor
test
push
mov
lods
pop
shl
out
jae
or
movsl
mov
xchg
sarb
adc
cmpsl
mov
pop
lret
pop
cmp
fisubl
xchg
call
xor
mov
loop
pop
dec
std
sub
lret
idiv
sti
push
les
pop
mov
cmp
lcall
sub
scas
mov
cld
or
jns
xchg
loope
mov
in
jo
xchg
and
mov
mov
push
lods
cmp
pop
add
sbb
or
int3
gs
mov
cwtl
sbb
insb
mov
and
and
jns
cld
daa
pop
aad
imul
rcrb
jmp
out
in
leave
int3
jg
and
xor
jbe
call
mov
not
jo
test
adc
push
es
pop
adcl
ljmp
fistl
adc
xor
jmp
ds
out
fcoml
mov
fistpll
pop
daa
outsb
inc
sbb
stos
sbb
scas
push
mov
inc
dec
cmpsb
rcpps
shlb
pusha
inc
imul
push
sub
pusha
dec
pop
add
loope
jle
fnsave
mov
mov
xchg
pusha
shl
push
mov
dec
cmp
dec
lds
mov
push
arpl
mov
inc
sbb
ja
mov
call
jae
ljmp
cmp
push
pusha
mov
adc
push
lret
sbb
push
pop
and
insl
stos
jbe
pop
jecxz
add
mov
ljmp
inc
mov
xor
lock
test
dec
push
js
mov
sti
xor
jne
dec
call
jle
stos
mov
push
pop
lcall
cmp
cmpsb
pop
add
jnp
nop
sbb
or
mov
ficomps
jg
dec
mov
pop
fwait
pop
cmp
sbb
pop
lds
sarb
lock
push
mov
inc
ds
stos
das
jnp
cmp
push
and
push
inc
cmp
dec
jnp
dec
inc
lret
and
cmc
mov
add
and
sbb
dec
xor
hlt
and
mov
or
ss
inc
cmpsl
lahf
fstpt
in
cld
in
mov
scas
mov
imul
dec
lods
dec
xchg
xor
inc
andl
or
inc
pop
pop
jmp
inc
inc
in
mov
xchg
jnp
out
clc
ret
dec
lret
mov
repz
sbb
pop
add
sti
pusha
xor
dec
lret
xchg
js
out
mov
jbe
es
pop
outsl
jl
sbb
dec
leave
xchg
dec
pop
xchg
dec
std
adc
sub
sbb
in
aad
or
stc
scas
inc
sbb
cmp
loop
mov
test
adc
test
add
jae
dec
xor
xchg
add
and
nop
xor
xchg
inc
mov
jp
flds
int3
inc
xchg
jecxz
cltd
test
out
push
rol
and
and
sahf
jg
ja
xchg
clc
iret
insb
jl
std
inc
sbb
sub
cwtl
daa
pop
les
adc
add
jmp
xchg
jg,pn
js
mov
sbb
jmp
lods
shlb
mov
mov
jmp
rclb
mov
jno
inc
inc
and
addl
cwtl
mov
mov
xorl
pushf
cmp
xor
scas
xchg
add
in
adc
pop
cmpsb
jp
insl
jo
add
sbbb
out
sahf
xchg
fnstsw
fnstcw
ret
imul
cmpsl
ror
les
push
aad
aad
fdivr
push
xor
lock
out
ss
lock
clc
jnp
adc
popf
jmp
test
ja
bound
adc
scas
push
test
pop
pop
or
jecxz
sahf
jl
push
call
lods
loope
outsl
jl
xorb
decl
loop,pn
and
repz
sbb
inc
shl
insb
mov
in
dec
out
test
into
imul
xchg
enter
cmpsb
or
pop
sbb
xor
jmp
insl
lock
in
loope
nop
xor
inc
adc
icebp
negl
sti
mov
fistps
xchg
cmp
xchg
cmp
cld
or
fidivrl
dec
cltd
mov
push
movsb
mov
mov
popl
jmp
daa
in
xchg
xchg
notl
inc
or
icebp
dec
clc
getsec
outsl
sar
ss
push
and
mov
cmp
sub
fdivs
jmp
push
sahf
ja
mov
lcall
sub
xchg
movsb
imull
in
lret
push
pop
stos
or
fadds
xchg
add
jl
call
push
cmp
inc
jg
icebp
mov
int
test
adc
push
xor
bound
out
jmp
cmpsb
mov
xchg
xor
loope
in
test
loop
jno
pop
push
inc
fimull
pusha
sub
fidivs
inc
push
inc
popa
pop
daa
call
sub
adc
or
inc
and
cmp
out
add
dec
gs
or
imul
jecxz
sahf
pop
lcall
sahf
loope
mov
jmp
mov
and
lret
inc
add
movzwl
or
ds
test
cltd
lahf
dec
imul
test
dec
adcb
js
jge
shl
sti
or
pop
ficoms
mov
inc
xchg
jno
add
inc
pop
sub
inc
jge
mov
scas
fwait
pop
push
add
sbb
add
je
push
loopne
xor
fsubr
sbb
pop
pop
testb
and
inc
enter
jns
jnp
out
dec
and
ljmp
lock
pop
or
lods
in
dec
ret
pop
mov
shrl
inc
push
mov
fstpt
stos
cld
or
outsl
push
and
push
movsb
pop
jle
lcall
test
fwait
and
lods
jl
sub
mov
inc
sahf
addr16
xchg
loop,pn
inc
or
adc
adc
jmp
add
clc
fsts
jnp
jl
mov
mov
push
pop
sahf
sub
dec
xchg
or
lret
xchg
cmc
push
fwait
pop
sub
adc
pop
mov
mov
inc
leave
das
dec
pop
jmp
push
push
xchg
mov
fsts
push
or
dec
cli
pop
ret
xchg
push
shlb
aaa
sbb
data16
ds
popa
jae
jne
xchg
vmread
push
fucomp
out
loope
add
bnd
mov
jb
lods
pusha
pushf
mov
mov
fistps
std
push
fldenv
xchg
pop
xchg
outsl
mov
lret
xchg
loopne
insb
movsl
xor
paddb
enter
fdivl
push
ss
jg
and
pop
pop
sbb
mov
stc
inc
pop
shll
lahf
js
and
mov
mov
adc
push
mov
lea
xchg
xchg
sub
pop
add
xchg
dec
xor
sub
fstps
out
sti
arpl
shlb
sbb
xchg
aaa
in
adc
pop
push
in
fmuls
stos
repnz
xchg
jl
sahf
jp
movsl
dec
addr16
fldenv
pop
ja
xchg
sbb
mov
scas
sub
push
orl
fnstcw
pop
mov
jl
jp
dec
push
push
jne
inc
dec
call
idivb
push
sbb
cltd
adc
jmp
push
arpl
sub
sarb
mov
mov
stos
decb
clc
cwtl
fimuls
add
add
xor
mov
sub
stos
in
sbb
bound
lock
jns
jbe
repz
js
cmpsb
xchg
push
enter
scas
mov
add
inc
dec
sbb
into
push
mov
jne
inc
push
xor
pop
imul
inc
pop
xchg
test
rorb
xchg
xchg
mov
or
adc
outsl
push
call
loop
cmp
lcall
cmp
inc
aas
sbb
int
lret
push
dec
dec
pushl
mov
adc
gs
bound
mov
inc
or
cmp
mov
xor
push
cmp
and
jbe
inc
add
mov
les
lea
adc
out
dec
sbb
sbbb
and
cmp
add
jmp
ret
xchg
cmp
cmp
adc
add
lock
into
ret
jmp
inc
sub
test
bswap
inc
mov
into
repz
pop
lahf
fisubrl
dec
into
not
imul
mov
dec
mov
xor
push
add
mov
jg
push
pop
xchg
push
ret
insl
fcomps
mov
je
jno
cmpsb
mov
repz
mov
decl
aam
es
test
sub
xchg
jae
lcall
mov
aas
push
test
jne
push
xor
sub
inc
scas
xor
out
sbb
inc
ret
push
push
cmp
shlb
imul
fcmovne
dec
sti
lea
xchg
adc
loopnew
inc
or
loopne
inc
leave
xchg
outsl
and
jns
dec
movsb
fsub
or
test
loop
push
das
fisubrl
inc
out
outsl
jno
push
mov
aam
js
xchg
add
aas
or
push
dec
add
xchg
pop
fs
in
daa
stc
rorb
jl
int
inc
cltd
mov
loop
or
test
pop
pop
sbb
pusha
mov
add
shl
aas
sti
xchg
xchg
jnp
or
js
inc
cwtl
lret
bound
inc
cli
loop
and
or
dec
xlat
dec
fbstp
out
in
ss
dec
lea
aaa
fwait
sub
out
inc
std
cltd
and
mov
out
jmp
aam
rcrb
ret
xor
adc
comiss
adc
movsb
retw
sbb
or
sbb
xor
lds
stc
fstpt
push
ret
cmp
xchg
mov
in
je
pop
enter
mov
orl
stos
pop
push
mov
repnz
adc
dec
adc
lods
or
iret
lock
in
sub
pusha
lcall
xcrypt-cbc
cmpsl
xchg
push
xchg
mov
xor
movsl
mov
mov
in
xor
decl
ret
das
mov
jecxz
pusha
add
lcall
mov
aad
pop
xchg
sbbb
lea
inc
inc
push
push
js
mov
scas
xor
movsb
sahf
add
fisttps
clc
int3
adc
push
mov
in
sbb
loope
xorl
or
jge
subl
inc
testl
mov
addr16
push
xchg
inc
lods
adc
hlt
pop
pop
int3
shll
push
mov
push
mov
rcr
cli
pop
sub
and
inc
out
out
xchg
jmp
fmulp
out
jno
outsb
js
int3
mov
inc
sub
jb
xor
popa
mov
pop
adc
mov
pop
mov
push
xchg
out
leave
sbb
mov
loop
data16
sub
push
inc
or
clc
daa
inc
fwait
inc
ljmp
fmul
js
or
xorl
sbb
fmull
cmpsb
mov
push
mov
inc
add
lds
aad
out
pusha
roll
jmp
inc
push
inc
inc
aas
mov
and
mov
and
xchg
aas
mov
xor
inc
mov
mov
inc
in
sbb
xchg
add
mov
decb
cmp
mov
xor
in
push
pop
xor
adcl
dec
pushf
dec
repnz
xchg
fxch
pop
jno
movsb
int3
xchg
and
mov
aad
add
xchg
addr16
sub
lret
out
cmc
xchg
sub
in
mov
mov
adc
sbb
or
and
jmp
push
push
scas
leave
rolb
push
imul
add
bound
push
inc
jg
xchg
out
inc
stos
nop
pop
xchg
test
pop
lret
sbb
sub
std
mov
stos
repz
loopne
dec
dec
mov
fs
bound
xor
adc
dec
js
xchg
dec
sbb
imul
stc
fidivrs
jg
cmp
dec
pushf
das
mov
adc
mov
ss
xchg
into
stos
mov
mov
shl
mov
mov
data16
push
inc
andb
addl
and
xor
cmp
mov
pop
insl
mov
inc
inc
ds
ljmp
inc
jge
xor
fcompl
jae
cltd
jge
mov
bound
xlat
jnp
div
cmp
xor
mov
cmp
add
flds
mov
fadds
or
push
mov
fstps
and
adc
jae
cmp
cmp
adc
test
imul
icebp
fisubs
mov
pop
pushf
mov
and
inc
scas
lock
add
or
cmp
dec
adc
jbe
sbb
sbb
call
inc
enter
xor
insb
ret
xchg
adcb
mov
rcrl
dec
and
push
test
cmp
movsb
call
sub
xor
ss
rorl
bound
inc
mov
add
sub
and
aaa
and
nop
cld
add
lahf
cld
in
push
cmp
mov
sbb
scas
js
stc
jmp
push
sbbb
mov
adc
add
flds
insb
sub
and
ljmp
mov
jno
call
lock
leave
pop
dec
je
or
cmp
mov
pop
pop
pop
add
push
repnz
xchg
int
inc
cmp
std
inc
mov
bound
mov
int3
mov
out
jp
stc
jnp
movsb
pop
jbe
pop
mov
xchg
mov
or
movsl
cld
rcll
push
test
jecxz
mov
test
dec
inc
ret
mov
data16
sbb
cmp
xor
mov
call
imul
stc
cwtl
movsb
dec
clc
sub
and
dec
dec
xchg
lahf
mov
sarl
call
cmp
pop
sti
mov
adc
xor
jmp
lret
imul
decb
sub
stc
pop
inc
fisubrl
pop
adc
xchg
pop
repz
ja
cmp
xor
mov
sub
or
cmp
int3
aas
or
inc
jbe
jb
cmc
in
dec
add
mov
jne
xor
hlt
call
push
pop
shl
mov
sbb
inc
out
lret
jae
lahf
enter
jmp
or
shr
sbb
xchg
mov
popa
cmp
je
loopne
mov
xor
sarl
cwtl
inc
in
add
push
pop
repnz
mov
sub
push
mov
enter
or
mov
mov
inc
dec
mov
adc
icebp
shll
cmp
jbe
lds
fs
sahf
jge
or
dec
stos
pop
test
jp
in
xchg
mov
mov
sbb
insl
ljmp
pop
movsb
jbe
inc
cwtl
lds
mov
stc
jmp
mov
es
lods
sbb
scas
xor
adc
out
mov
sti
imul
mov
adc
dec
lret
jp
loope
adc
lret
enter
inc
pop
mov
inc
lret
inc
pusha
shrb
and
add
ret
cwtl
mov
sub
inc
add
mov
outsl
scas
cwtl
mov
jmp
mov
in
nop
dec
cmp
das
sbb
lock
pop
lret
aaa
mov
cmp
out
lcall
mov
jle
sub
push
adc
shll
enter
insl
sarl
xchg
das
mov
ret
loopne
xchg
adc
sub
movsl
es
stc
push
or
fmuls
popf
popf
or
sbb
ja
aas
ljmp
ljmp
fwait
or
mov
xchg
pop
sbb
scas
lcall
jb
fsubr
test
ret
lock
xlat
in
pop
pop
nop
mov
scas
mov
jle
mov
lods
fildl
xlat
add
and
pop
push
jmp
xchg
sbb
push
lahf
movsb
in
xchg
int3
push
ds
testb
jp,pt
jns
mov
xchg
add
ljmp
add
sarl
in
or
enter
jle
sbb
dec
cli
pusha
inc
popa
push
jbe
push
ja
adc
push
std
outsb
stos
jns
push
je
jge
inc
insb
sbb
fstps
sub
mov
push
and
jecxz
xchg
and
mov
std
jo
insl
or
out
push
les
addl
negl
jecxz
daa
xor
sub
sub
sbb
test
sub
rcrb
push
rclb
lea
mov
or
bound
ja
dec
pop
mov
out
or
or
int
add
mov
adc
incl
xchg
mov
inc
jns
xor
inc
mov
shll
ja
punpckhbw
cmp
inc
lock
pop
out
cli
lcall
lock
jae
jge
loop
jbe
clc
pop
mov
imul
push
push
test
movsb
sbb
mov
std
push
mov
sub
or
mov
push
mov
aad
adc
and
adc
mov
dec
leave
mov
pop
mov
mov
add
push
push
invd
jne
inc
int3
or
insl
ljmp
mov
or
add
or
ret
daa
comiss
pusha
addr16
test
mov
pop
pop
inc
pop
out
sub
xlat
leave
sub
xchg
jecxz
sbb
cwtl
dec
push
mov
mov
xor
and
sbb
sahf
cmpsb
andb
sbb
jg,pn
or
fwait
pusha
jmp
rol
push
daa
popf
cmpsb
add
mov
jbe
sub
xchg
pop
inc
add
xchg
hlt
pop
rolb
sbb
and
or
xor
jge
push
push
xlat
lods
call
in
pop
call
cmpsl
mov
dec
int
rcrl
inc
sub
mov
or
out
xchg
lret
lds
bound
add
movsb
push
push
add
cld
repz
mov
fcmove
aaa
scas
outsb
fisubrs
jl
or
cmpsl
cmc
in
call
insl
outsb
ret
add
add
xchg
cmp
nop
mov
popf
mov
int
insb
mov
xchg
add
or
mov
lahf
sbbb
test
sub
pusha
getsec
xlat
xlat
mov
pop
stos
inc
loope
xchg
dec
pop
mov
jg
mov
adc
adc
int
rcrb
jns
cs
lcall
bound
out
jl
pop
iret
insl
mov
imul
mov
mov
jno
stc
inc
dec
pop
xchg
jg
inc
jns
push
mov
dec
rcrb
push
sbb
int3
sub
cmc
fstpt
sub
inc
outsb
jecxz
flds
lret
jae
bnd
popa
adc
call
sub
jo
cli
in
in
and
into
mov
dec
sub
or
mov
dec
in
xchg
add
and
xchg
jo
sbb
sarl
ss
jb
cmp
test
mov
and
pop
mov
scas
inc
sbb
jb
es
rcll
inc
dec
lds
cltd
jge
ficomps
enter
mov
add
inc
mov
mov
mov
pop
inc
jo
add
lods
cmp
push
pop
adc
cmc
idivb
lods
inc
mov
or
jne
mov
jecxz
sub
dec
inc
jno
outsb
jno
mov
cmpsl
int3
push
xorl
fildl
xor
pusha
leave
sahf
fbstp
inc
testl
lock
cmc
int3
jl
test
inc
je
ljmp
cli
aam
dec
pop
int3
mov
sbb
scas
or
inc
and
jge
push
rol
stos
xchg
pop
aad
nop
pop
daa
xchg
fs
dec
mov
lcall
dec
fwait
push
and
push
dec
sub
dec
jns
jge
aaa
pusha
rcll
xor
dec
repnz
les
inc
repz
cli
and
inc
adc
xchg
cmp
repnz
insl
jne
cmp
pop
shrl
lea
xor
push
mov
stos
mov
push
jne
dec
mov
data16
cltd
lahf
mov
lods
mov
aaa
and
mov
mov
std
int
xor
lea
push
lahf
push
or
mov
dec
xor
mov
imul
adc
mov
in
mov
out
outsl
nop
sbb
out
inc
inc
pop
xchg
out
rorb
shll
in
stos
icebp
adc
fcmovnbe
inc
pop
out
inc
aas
pop
lods
push
sbb
and
or
call
or
inc
nop
sbb
call
hlt
mov
adc
lods
xor
cmc
cltd
out
or
enter
sub
and
test
mov
add
cs
scas
nop
and
mov
and
pop
push
mov
add
mov
push
sahf
outsb
leave
fisubs
push
dec
inc
or
enter
loope
roll
mov
enter
cmpsl
outsb
adc
pop
dec
in
inc
cwtl
or
adc
pushf
loope
cli
aam
xchg
dec
inc
clc
mov
fnstsw
xlat
call
mov
add
mov
dec
or
xchg
lds
out
cld
xchg
cli
aaa
pop
sub
cmpl
and
inc
jb
lods
bnd
jno
stos
inc
xchg
add
dec
jmp
adc
iret
mov
sbb
pop
aas
jb
mov
cli
iret
stc
dec
xchg
mov
adc
pop
adc
push
rclb
dec
and
dec
fdiv
jae
or
sub
push
xor
add
lock
bound
jmp
adc
adc
pop
movsl
sub
jge
test
stos
xchg
xor
sbb
js
jp
sub
popf
out
mov
mov
and
adc
jo
pushf
pop
inc
push
loopne
add
push
loope
outsb
cmp
cmpsb
mov
cs
fisubs
rclb
xor
add
xchg
int3
xchg
mov
pop
sbbb
aaa
inc
mov
cld
xor
pushf
shlb
jne
add
xor
dec
jle
push
aas
in
outsl
lret
push
mov
lea
ficoms
add
lds
dec
js
popf
ljmp
les
adc
inc
mov
and
mov
pop
mov
inc
fucompp
lock
imul
out
dec
fmulp
cmp
xchg
aam
mov
mov
xchg
push
jmp
push
dec
xchg
xchg
push
sbb
daa
mov
cli
icebp
sbb
xchg
xchg
mov
mov
ret
sahf
in
mov
loopne
andl
sbb
lods
add
popf
adc
lret
sbb
stos
xchg
jae
pop
icebp
pop
mov
push
and
popf
pop
pop
loopne
add
call
sub
push
in
xlat
in
jl
fldlg2
mov
cld
outsb
into
lcall
jb
ret
inc
stos
push
arpl
andb
imul
test
aas
mov
dec
push
xor
rol
mov
cltd
mov
push
fists
ja
xchg
stos
sbb
sahf
cmp
add
aam
test
outsl
mov
bound
lock
push
lea
push
int
add
ljmp
and
pop
jle
aam
pop
adc
or
dec
enter
pop
mov
adc
std
std
js
cld
or
pop
mov
add
jp
xor
mov
push
sub
stc
icebp
repnz
fwait
movsl
sbb
stc
cmp
adc
push
add
cli
cmp
jp
insl
mov
adc
or
cmp
jns
fs
fcom
adc
cmc
aaa
pop
ret
movsl
sbb
lock
outsl
add
lcall
imulb
ficoms
sub
outsb
xchg
fists
insb
jbe
cmp
cs
push
es
sub
sub
call
scas
popa
cmp
out
jmp
shll
daa
idivb
jo
test
loope
fs
cmc
lods
ret
in
gs
lock
shl
enter
mov
sbb
add
enter
sub
in
loopne
dec
jne
test
stos
cli
dec
shll
pop
lahf
sub
sbb
pop
mov
cmp
cmpsb
sbb
mov
rorb
push
fwait
jg
jl
add
lds
imul
and
movsl
outsb
fsubs
dec
or
mov
loope
and
repnz
mov
stos
lret
int3
imul
or
pop
pop
data16
sbb
out
loope
xor
fucomip
cltd
or
insb
xchg
cmp
lret
subb
mov
and
push
call
xchg
push
pop
shll
cmp
addb
movsb
and
bound
movsb
call
fnstsw
ds
aad
dec
loope
fldcw
lea
jmp
neg
out
or
nop
sbb
mov
nop
adc
cmp
imul
shl
fs
push
pushf
xchg
mov
xchg
sub
call
leave
cld
add
sbb
pop
js
dec
mov
mov
pop
stos
pop
fbld
sbb
sbbb
pop
dec
jb
andl
sub
mov
cltd
int3
xor
and
scas
add
repz
flds
and
notb
insl
xor
rcll
sub
mov
js
sub
sub
or
jp
dec
add
adc
jo
sbb
sarb
sahf
mov
int3
in
arpl
enter
mov
cltd
mov
filds
aas
fsubrl
xchg
lods
push
ja
add
stos
call
lea
nop
sbbb
pop
pop
or
cwtl
or
xor
loopne
jmp
xor
test
out
dec
or
imul
cld
test
dec
mov
jp
xchg
cmpsl
xor
shrb
insb
pushf
ret
pop
lahf
dec
xor
pop
stos
nop
je
xchg
jbe
nop
mov
addr16
gs
cwtl
inc
test
jnp
or
out
xchg
and
cld
xchg
cmc
fistps
loopne
aad
lods
aas
scas
imulb
cmc
lods
mov
mov
jae
dec
lret
jns
jl
in
mov
xchg
mov
add
xor
arpl
movsl
cmp
mov
cmpsb
into
xchg
jo
jno
repz
mov
xchg
xor
push
test
jle
nop
jp
adc
cmp
lret
mov
js
notb
pop
jne
call
push
pop
int3
adc
push
sbb
ds
lods
shrl
jbe
add
call
adc
leave
jp
dec
in
xchg
lods
pushf
jb
xchg
test
fwait
aam
mov
jmp
mov
incl
add
xor
jae
push
dec
fucomp
psubsw
and
out
jo
sbb
notb
lods
andb
add
test
xor
popa
rorb
ja
divl
test
adc
jg
iret
xor
ja
push
iret
lea
pop
dec
aad
jmp
les
xchg
mov
cmp
pushf
add
mov
cli
cmpsl
dec
dec
daa
pusha
pop
xlat
call
mov
push
fwait
test
push
inc
fcoml
lret
sti
push
dec
sbb
aad
jnp
clc
enter
mov
mov
jmp
dec
divl
push
sbb
jne
fstps
cmp
pop
stos
out
daa
add
ds
mov
dec
sub
sbb
pop
push
mov
and
mov
les
cld
sub
pop
gs
jecxz
out
les
cwtl
sti
in
dec
add
out
cwtl
sub
xchg
sbb
xchg
cmpsb
into
sar
adc
sub
bound
cmp
cmp
add
inc
sub
mov
aas
mov
jge
mov
jb
sarl
dec
jne
mov
pop
inc
adc
dec
or
or
pop
js
cmp
notb
xor
dec
xchg
jg
jae
int3
dec
dec
out
dec
dec
push
mov
or
cmp
je
mov
mov
and
test
pusha
cmp
add
mov
test
sub
add
std
jle
ret
aam
mov
in
inc
insb
insl
hlt
fstpl
jge
lret
lret
out
out
cs
shrl
inc
dec
das
pop
xorb
xor
cmp
icebp
aas
out
jp
mov
mov
rcr
pop
xchg
dec
add
test
cmp
jmp
fisttpl
loope
aam
dec
scas
outsb
mov
daa
push
add
adc
lret
lea
sbb
test
rclb
push
inc
sub
cs
xor
xorb
pop
orl
ret
insl
in
clc
adc
jecxz
push
xchg
inc
mov
addr16
xchg
stos
mov
loope
ljmp
fcmovbe
shlb
adc
or
xlat
mov
adcb
repnz
cmp
lahf
mov
push
add
push
push
mov
hlt
pop
int3
cmpb
test
sub
loop
mov
into
mov
mov
cmp
nop
xchg
test
pop
arpl
push
int
cmp
lods
mov
mov
sbb
dec
mov
sbb
add
jnp
scas
sbb
cmp
pop
sbb
push
jl
push
gs
push
xor
mov
fnstcw
add
leave
sub
mov
pop
and
jb
mov
les
sbb
xor
sub
add
add
xor
lods
jg
push
in
loop
xchg
jne
test
insl
fwait
out
rorb
stos
or
dec
xor
cmp
push
or
push
ror
mov
je
cmp
lods
inc
push
cmp
inc
jns
jb
jl
outsl
mulb
add
xchg
sub
iret
scas
pop
les
std
sti
sub
shrb
test
lock
repnz
repz
xchg
and
mov
jnp
mov
loope
adc
mov
mov
adc
pusha
sbb
lahf
push
sub
lcall
sbb
xchg
loope
dec
mov
sti
out
mov
xor
mov
call
jg
stos
xchg
add
xchg
ja
subl
xor
xchg
pop
and
std
inc
lea
cmp
insb
ret
mov
sub
xchg
std
sbb
jg
popf
lds
test
xor
jo
outsb
cmp
push
pop
xor
jg
push
jbe
mov
loop
cmc
inc
adc
dec
xchg
cmp
test
adcl
cmpl
mov
lds
movsl
push
and
outsl
sarl
inc
or
mov
sbb
in
pop
sub
aad
jnp
sbb
xor
dec
add
mov
lods
mov
int
fstpt
and
test
pop
fs
leave
imul
bound
repnz
inc
push
pop
mov
popa
adc
lret
sbb
in
push
xor
stos
adc
jl
cwtl
push
icebp
loop
mov
jle
addb
fdivl
mov
inc
jne
jl
xor
push
divl
add
outsb
loop
adc
mov
pop
mov
jo
adc
mov
mov
loopne
cwtl
inc
dec
adc
ljmp
pop
addr16
sbbb
xor
fsubrl
inc
inc
iret
lock
mov
jmp
lea
dec
xor
mov
dec
dec
popa
mov
mov
mov
movsb
les
data16
adc
je
jne
out
shl
repz
in
arpl
dec
icebp
loope
mov
fdivrs
mov
orb
mov
mov
pop
sbb
xor
jmp
cld
sbb
mull
push
imul
es
pop
sbb
aad
dec
leave
cmp
call
and
and
push
mov
fisubrs
xor
std
add
leave
cli
mov
xchg
insl
sbb
lock
xor
inc
xchg
inc
lods
and
push
call
call
xor
insl
setle
mov
nop
outsl
jmp
inc
std
int3
mov
adc
or
xchg
stc
cmpsb
loopne
scas
gs
icebp
icebp
push
iret
testb
sbb
data16
in
loop
bound
sbb
adc
ja
mov
jle
mov
push
pusha
ficompl
mov
bound
stos
test
out
arpl
test
inc
pop
stos
lds
popf
mov
movsl
pop
pop
inc
jb
lock
aaa
inc
sti
adcl
pop
mov
jo
sub
popf
sarb
push
mov
or
pop
dec
movb
ss
data16
and
loope
std
outsb
mov
in
data16
iret
bound
lods
mov
daa
imul
rorl
xor
mov
iret
xchg
js
jbe
xchg
cmp
popa
adc
rol
inc
sbb
add
rcrl
push
and
inc
xchg
mov
mov
push
fwait
jae
data16
jnp
jmp
inc
and
iret
sub
add
call
mov
mov
rolb
adc
push
pop
lret
pop
out
pop
cmp
into
aad
mov
xlat
addr16
fs
ja
mov
fbld
mov
sbb
jge
or
cs
adc
mov
clc
sbb
and
cmp
insb
ds
inc
fs
fisttpll
mov
mov
sbb
inc
cli
mov
sbb
call
cmp
lcall
push
sub
leave
addb
inc
xor
dec
pop
sub
repnz
addr16
gs
cmp
and
pop
dec
add
mov
imulb
cmp
mov
add
cs
jge
jae
in
negb
div
mov
jnp
or
mov
push
outsb
mov
roll
les
or
xchg
or
loopne
mov
adc
lcall
fidivl
and
adc
sbb
fmulp
and
or
adc
add
sbb
inc
jnp
insb
inc
popf
cwtl
and
out
push
adcb
mov
xor
mov
es
in
jl
incl
fmulp
stc
lds
push
push
iret
mov
fistpl
out
clc
ret
or
mov
fs
loope
ds
into
fisubl
mov
ret
insb
adc
fstl
iret
cmp
cwtl
outsl
test
mov
je
mov
push
lods
out
repnz
in
and
sbb
push
arpl
adc
pop
lods
popa
mov
cmp
push
mov
in
adc
xor
pop
pop
scas
mov
imul
cmp
daa
addl
or
aaa
cmp
rclb
movsb
add
add
pushf
pop
push
mov
popf
sbb
mov
sbb
fldt
js
out
pop
jne
sbb
adc
sub
jg
adc
jmp
add
stc
cmp
jns
add
jg
xchg
add
cli
scas
jb
mov
sbb
and
inc
push
xchg
cmp
mov
jns
jno
jbe
pop
lret
outsb
sahf
gs
aam
rcr
mov
repz
push
add
aaa
jnp
testl
jle
sub
mov
cmpsb
pushf
xchg
fcoml
divb
dec
push
sbb
into
pop
fs
ja
lock
dec
sub
sarl
or
sub
push
push
iret
call
cmpsb
ds
call
mov
mov
int
icebp
sahf
aas
sub
hlt
mov
lea
addr16
fidivs
vandnps
mov
xor
cmpsl
icebp
mov
pop
pop
out
das
pushf
lret
add
or
adc
or
mov
mov
pusha
into
push
pop
xchg
out
push
jmp
sub
js
shlb
inc
mov
jb
adc
rcrl
mov
cwtl
push
sbb
out
cld
sbb
stos
mov
pop
jge
incb
cmp
inc
cmp
push
cmp
push
jecxz
ja
loop
sahf
and
loope
and
repz
pop
push
push
mov
sub
lods
jecxz
aas
inc
lret
leave
daa
cmpsl
xchg
stos
stos
das
rcr
sahf
mov
test
add
sub
out
xchg
cli
jae
xor
shrb
lock
lcall
divl
shll
push
and
in
cmc
cmp
pop
sbb
cwtl
push
and
dec
notl
push
add
jb
xor
cmp
sbb
sbb
das
iret
dec
sub
lods
rclb
movsb
adc
cmp
adc
roll
push
or
test
mov
inc
dec
mov
cld
sbb
sbb
jg
cmc
sahf
and
jbe
ss
ja
inc
adc
xor
in
sub
stc
loopne
push
nop
sub
aas
push
lods
cld
fisttps
sbb
mov
dec
into
ret
outsl
out
idivl
adc
push
sub
mov
or
shll
pop
jbe
mov
inc
jg
mov
int3
dec
inc
cld
mov
scas
xchg
dec
xor
xchg
cmc
cli
je
dec
sub
pop
sbb
roll
sbb
xchg
push
jnp
and
call
mov
adc
test
xor
loope
push
std
pop
inc
fcmovne
repz
out
sbb
jno
add
jmp
inc
mov
mov
mov
pop
outsb
xor
push
jae
push
push
mov
ss
jb
push
push
call
inc
jl
adc
inc
call
jecxz
in
fstpl
push
mov
cmpsb
add
test
jne
and
xor
and
fcompl
rclb
push
pop
mov
mov
and
add
sbb
addr16
std
mov
pop
repnz
in
notb
cmp
sbb
jb
sbb
xchg
enter
xchg
adc
push
fiaddl
mulb
in
rorl
cmp
mov
adc
fcmove
rcrl
sub
in
je
les
in
sti
pop
push
shrb
call
repz
test
nop
push
jl
and
pop
fistpll
pop
lret
lcall
adc
adc
pop
inc
mov
pop
test
sub
and
add
adc
push
sbb
aad
adc
jg
push
adc
mov
ret
mov
adc
pushf
dec
pop
mov
out
mov
iret
push
sarb
pusha
fisubs
pop
test
pop
add
fwait
inc
ss
cmp
xchg
movsb
mov
jbe
adc
xchg
outsl
add
fdivr
xchg
sbb
jnp
or
xor
push
cmpsl
scas
fstpl
or
pop
stos
in
jno
or
push
or
add
sbb
sarb
fcoml
xor
loope
mov
mov
sbb
fdivrp
lcall
mov
xchg
movsl
call
jo
fisubrs
pop
xor
xchg
pop
and
fisttpl
mov
idiv
adc
cld
jns
cli
ds
push
mov
jae
pop
fwait
in
lods
andl
fstpl
push
dec
adc
aaa
inc
scas
mov
fadd
inc
cmp
cmp
data16
xchg
jo
mov
out
in
aad
pop
adc
mov
test
mov
mov
mov
in
dec
pop
cld
rclb
rcl
sbb
inc
sub
imul
pop
xorl
stc
scas
aam
push
lea
in
mov
out
movsl
shrl
jno
or
pop
cmpsl
add
das
pop
sub
and
in
bnd
movsl
in
jno
xor
xchg
inc
orb
xchg
lock
mov
cld
inc
aas
mov
lret
dec
rolb
scas
ja
pop
dec
pop
mov
shrl
outsb
dec
pop
cmpsl
ljmp
inc
fwait
push
andl
fwait
movsl
repz
inc
lea
loope
mov
dec
fadd
dec
ror
cmp
cli
negb
pop
fcmove
stc
out
iret
cmpsl
xchg
add
inc
xor
mov
fisubs
dec
imul
cmc
sub
inc
or
sub
imul
test
xlat
das
add
dec
push
xchg
push
outsb
xor
pop
mov
jmp
pop
lret
in
mov
push
or
inc
and
jecxz
and
ds
test
pop
sbb
out
adc
mov
xor
cmp
and
mov
and
jecxz
mov
dec
repnz
cli
jge
push
mov
orb
movsb
test
push
mov
mov
int
pop
call
loopne
and
fs
pushf
movsl
mov
lock
cmp
clc
adc
pop
mov
test
adc
or
add
fadds
xchg
leave
fmul
or
fisttpl
movsb
shlb
in
mov
popf
pop
repnz
or
inc
or
daa
xlat
gs
adc
mov
sub
repz
ja
fldenv
pop
jns
sbb
out
aad
dec
xchg
fsts
outsl
cmpsl
leave
fdivs
add
sarb
dec
pop
cmpsb
mov
sub
cmp
pop
push
js
popf
mov
mov
xchg
aaa
xchg
jbe
js
mov
aam
pushf
xchg
push
es
add
stos
std
rolb
stos
negl
jb
negl
add
in
inc
adc
push
aas
xchg
xchg
scas
xor
inc
ret
mov
dec
sti
mov
sbbl
mov
pusha
rorl
aam
mov
xchg
cmp
jb
out
scas
xlat
repnz
adc
pop
lret
cld
xor
pop
or
je
pop
mov
sub
scas
lods
dec
leave
hlt
sbb
lret
cmpsl
and
inc
fnstsw
testb
cltd
repz
xlat
jnp
xor
pop
jge
mov
xor
shll
stos
outsl
jae
and
int
negl
imul
fisttps
or
mov
insl
inc
jl
or
lahf
dec
xor
aaa
xchg
lret
fadd
loope
outsb
dec
sahf
pop
add
jo
fmull
jo
movsl
jge
addr16
add
das
and
or
fldl
notl
hlt
sbb
dec
dec
xchg
xchg
jge
insl
pop
fnstenv
sbb
mov
xchg
jmp
push
pushf
jbe
xchg
xchg
arpl
loop
fnstcw
or
cs
lods
xchg
iret
push
pop
lcall
xor
popf
mulb
test
popf
mov
xchg
cwtl
add
mov
addb
stos
std
fiaddl
xor
das
pop
sahf
mov
push
loop
and
stos
adc
test
repnz
xchg
xchg
push
push
mov
add
lods
xor
mov
inc
and
fmuls
or
popf
daa
push
out
mov
lahf
cmp
mov
or
mov
icebp
pusha
in
mov
fsub
mov
ds
sub
stc
mov
mov
mov
cmp
mov
mov
out
shr
push
fisttpl
and
push
push
scas
inc
ret
push
push
mov
xchg
lods
jnp
icebp
pop
inc
inc
cmp
lods
mov
and
jp
dec
iret
push
imulb
out
xor
movsl
cli
xchg
enter
jne
aam
sarl
mov
sti
sbb
lcall
nop
jne
addr16
sar
mov
mov
mov
cmp
int3
dec
dec
pop
bound
sub
xchg
leave
pop
out
xorb
add
jecxz
insl
nop
fbld
add
jno
jns
ficomps
call
add
inc
mov
out
jno
cmc
mov
push
stc
jne
dec
mov
cmpsl
push
add
xlat
mov
outsb
mov
das
flds
ds
cmp
hlt
ret
iret
test
scas
sub
loopne
xchg
or
jle
imul
cmp
cmp
ds
or
mov
sbb
mov
push
mov
inc
mov
xchg
int3
leave
xor
dec
xchg
push
jae
pminub
mov
adc
sti
mov
dec
aad
pop
mov
leave
inc
popa
pop
stos
push
xchg
test
sub
js
jne
jmp
mov
jbe
xor
loop
aad
loopne
sarb
pop
fbld
out
mov
divb
popa
sub
jge
sbb
insl
add
sub
jnp
lods
pop
or
fildll
push
std
scas
jmp
sbb
xchg
out
and
lock
mov
daa
inc
jnp
fsubrs
cwtl
enter
lea
xchg
mov
inc
jnp
arpl
roll
jl
and
pop
out
fisubl
cwtl
inc
cmpsb
adc
pop
orb
or
outsb
push
inc
cld
aam
call
and
cmp
test
movsl
imul
aad
clc
gs
lock
inc
pcmpeqb
adc
popa
xor
into
cli
xchg
push
dec
push
jno
or
mov
add
pop
fmul
xchg
aas
lret
xor
out
ss
cs
xchg
out
lods
lret
adc
xchg
lock
imul
xchg
and
mov
xchg
loope
mov
cmpsb
dec
test
xlat
sub
lock
mov
push
or
mov
pop
mov
test
dec
inc
cpuid
fmull
adc
popa
in
fldcw
pop
cld
xor
xchg
pop
cmp
xor
aad
lcall
fcmove
cmp
mov
insl
xor
addr16
jno
add
enter
jns
add
sbb
loope
sahf
mov
jg
jl
outsb
cwtl
push
sbb
cwtl
subl
ss
sbb
mov
push
aaa
dec
mov
icebp
out
lods
sub
adc
imul
inc
es
in
xor
js
mov
leave
aad
bound
mov
sub
test
in
std
int3
ss
adc
push
push
push
mov
add
pop
mov
push
pop
push
mov
mov
testl
adc
out
pop
movsl
imull
add
inc
lret
or
ljmp
mov
pop
mov
je
xchg
fwait
cmpsl
imul
mov
popa
out
das
mov
fs
test
push
out
jnp
jnp
sbb
dec
push
jg
cli
cmp
push
ficoms
mov
xor
lods
stc
movsb
and
sub
xchg
sahf
and
bound
loopne
lods
mov
shrb
mov
mov
and
jno
jno
insl
imul
into
push
sub
arpl
sub
mov
ficoms
enter
bnd
test
adc
inc
decb
andl
push
adc
push
mov
aam
outsl
negb
cs
test
idivb
and
cmp
fimuls
cmpsl
and
mov
roll
add
mov
mov
ffreep
xor
xlat
cmc
sub
xor
loope
jle
rorl
cld
and
mov
icebp
fistps
adc
dec
enter
cmc
and
mov
aaa
gs
aaa
inc
sbb
dec
and
jo
mov
fcmovnbe
and
nop
sbb
insl
pop
lock
movsl
int
jmp
outsl
test
push
jecxz
mov
out
call
xchg
mov
pop
arpl
lcall
mov
std
or
stos
mov
or
xchg
push
dec
xor
jnp
sub
mov
jl
mov
pop
mov
or
mov
cmp
stos
rcrl
add
rcrl
xchg
push
test
insl
lea
or
out
add
xchg
add
adc
cmp
fwait
sub
sbb
outsl
iret
in
sbb
mov
pushf
jns
fdivrl
sahf
adc
movsl
nop
repz
pop
outsb
loopne
adc
or
scas
mov
iret
jb
adc
xor
enter
int3
sbbb
jnp
xchg
cs
stos
xchg
gs
push
push
cs
inc
bnd
outsl
into
dec
adc
jg
jo
mov
pop
sbb
shl
imul
enter
xor
sub
stos
cli
jne
out
jb
jns
fisubs
ljmp
mov
xor
movsl
adc
lds
xchg
push
xchg
pop
or
push
jge
out
mov
mov
cs
dec
mov
cmpsl
mov
or
in
rcrl
mov
push
lds
sub
pop
sti
inc
int3
mov
jb
mov
movsl
mov
call
xor
and
jne
das
pop
or
jno
sbb
insl
xor
dec
jo
repnz
dec
lcall
lods
mov
addl
xchg
mov
pop
xchg
xchg
loope
mov
test
push
jae
mov
dec
or
mov
pop
mov
mov
imul
out
mov
mov
outsl
push
sbb
por
leave
mov
sbb
out
inc
ss
push
nop
fsubrs
outsl
mov
sahf
pop
add
daa
jge
lock
mov
and
daa
insb
add
and
sbb
in
jb
adc
lret
je
inc
test
call
push
jge
ficoml
jmp
push
mov
xchg
es
pop
xlat
pushf
fldenv
scas
hlt
mov
inc
mov
add
jmp
fs
cs
sti
mov
xor
test
sbb
mov
adc
sbb
sub
jae
sub
push
cmp
jle
mov
test
cmp
outsb
mov
and
lcall
lcall
test
add
std
push
mov
xchg
jmp
fsts
push
ret
mov
and
fdecstp
inc
mov
ss
xchg
cwtl
fnstsw
incb
jp
aas
sbb
fldcw
lcall
scas
add
mov
mov
jo
xchg
inc
xchg
sarb
sub
dec
adc
out
fadds
std
sbb
sti
imul
push
js
dec
inc
and
fildl
je
fbld
inc
dec
and
fcoml
out
fldcw
mov
cmp
push
inc
movsb
stos
imul
cmp
out
daa
cli
mov
pusha
jp
xchg
mov
packsswb
sahf
mov
jne
dec
das
lods
gs
jns
dec
mov
dec
mov
insb
mov
dec
addb
test
rolb
testl
push
imul
jg
aaa
outsb
xchg
jbe
mov
pop
stos
arpl
pop
jne
mov
arpl
push
cmpsl
in
insl
mov
mov
flds
mov
mov
in
call
cmp
mov
dec
mov
inc
cli
sbbl
jbe
mov
repz
arpl
dec
cmp
lcall
cltd
sbb
inc
sub
shl
call
cmp
stos
or
insl
popf
out
cmp
scas
and
fs
daa
inc
sub
push
adc
test
cli
loop
push
mov
outsb
out
xor
rorl
mov
out
repz
xor
mov
stc
pop
divb
sub
scas
sub
jmp
out
lar
lret
lock
mov
or
mov
repnz
push
cld
mov
clc
dec
pop
pop
sbb
xchg
sbb
mov
iret
dec
leave
int3
mov
pusha
sbb
push
test
push
gs
jns
or
or
fisubrs
scas
jo
cwtl
ret
sbb
adc
dec
cmpb
out
imul
cld
cltd
pushf
add
movsb
add
stos
clc
mov
jne
push
pop
dec
lock
and
sbb
aaa
jg
lret
ss
xor
in
xchg
inc
sub
test
pop
cmpsl
dec
sub
pop
mov
add
and
repz
xchg
inc
lds
mov
push
and
xchg
in
cmpsl
pop
shlb
pop
lods
xor
or
pop
or
icebp
mov
inc
cltd
push
ljmp
lcall
add
xor
rcrl
and
inc
ljmp
cmp
mov
cli
std
jg
addr16
stos
push
dec
leave
in
das
cmp
push
jmp
jmp
pop
jb
inc
gs
gs
repz
in
lea
inc
and
repz
stos
pop
dec
ret
data16
jb
xor
jg
popf
jg
cmp
sub
sarb
mov
movsl
js
pop
xor
outsb
enter
cmpsl
mov
jnp
xor
ret
loopne
mov
stc
shl
nop
hlt
ss
int
cmp
lods
orl
adc
sbb
push
loopne
jmp
int3
inc
push
xor
or
sub
jb
add
cwtl
inc
pop
cmpsb
ljmp
filds
or
push
test
repnz
jp
push
mov
sub
leave
xor
enter
bound
dec
and
and
pop
das
inc
cmp
add
adcb
outsb
int
in
pop
cltd
pop
push
loop
or
das
fucomi
lahf
xor
inc
imul
mov
mov
jmp
cli
jp
adc
repnz
jnp
mov
iret
ljmp
push
inc
outsl
cmpsb
dec
xchg
or
cmp
xor
je
aaa
imul
sbb
jmp
xor
ret
loopne
fistpll
scas
xchg
sbb
aas
roll
and
mov
movsl
or
in
fimuls
in
test
test
out
scas
les
jb
lock
leave
jecxz
jno
fsubp
xor
repz
popa
pop
testb
dec
leave
xchg
cmp
shrl
mov
das
cs
push
imul
in
lcall
push
in
aaa
rorb
xor
fdiv
les
add
in
or
lods
adcb
ficoml
mov
imul
cmpsl
sahf
call
dec
ja
shr
pop
lcall
sti
sbb
lret
mov
or
test
xor
push
jno
out
mov
loope
imul
dec
test
jge
mov
sub
inc
dec
insl
xor
call
outsl
and
inc
pushf
pop
pop
js
dec
push
addl
mov
push
fstl
pop
je
ss
fdivrl
push
addr16
into
xchg
mov
dec
divb
cltd
cmp
cmc
cld
pop
jns
or
jg
and
or
adc
push
test
hlt
mov
mov
pop
insl
and
add
lcall
xchg
dec
inc
and
mov
push
aam
xchg
add
inc
fwait
dec
jg
cmp
or
loope
lods
dec
shl
cmc
pop
push
push
add
pop
or
mov
cmpsl
jmp
inc
insl
shrb
addr16
in
jp
mov
cltd
in
inc
cli
adc
dec
mov
clc
dec
call
inc
cli
adc
mov
dec
sub
push
xchg
lret
sti
packsswb
sti
dec
sbb
stos
push
or
mov
mov
enter
ljmp
aas
xchg
das
xlat
test
mov
pop
mov
aam
dec
ja
shrb
jg
pop
call
mov
mov
and
addr16
and
inc
cltd
and
dec
mov
mov
mov
fcomps
lret
add
xor
adc
lret
cmp
clc
inc
mov
jo
cli
fnstenv
and
les
or
lock
fnsave
mov
sbb
jp
movsb
rclb
push
testl
jmp
int3
test
les
into
xor
ss
mov
cwtl
cmpsb
test
adc
and
mov
into
cmpsb
push
xlat
push
add
or
fsubs
xor
rolb
xorl
pop
adc
jmp
xorb
inc
push
mov
outsb
loopne
add
sti
pop
push
adc
out
loop
xlat
pop
dec
lret
std
loopne,pt
aam
dec
les
gs
xor
out
jl
sbb
movsl
and
adc
jge
xor
inc
loop
xor
sti
jb
push
jecxz
scas
and
pop
arpl
mov
pop
repnz
fdivrs
fwait
nop
loop
sbb
fisttpll
in
jo
mov
ret
cld
push
insl
xchg
add
pop
negb
dec
pusha
xchg
mov
lahf
dec
push
loopne
cmp
sti
and
fdivrl
in
fisubl
adcl
mov
out
jns
and
inc
mul
adcb
das
and
mov
sub
stos
cld
frstor
cmp
movsl
stos
sbb
lods
xchg
sbb
cmpsl
dec
pop
imul
push
push
xor
pop
call
xchg
jmp
movsl
ret
je
ret
cmp
lahf
lret
nop
pop
gs
or
cmp
and
sub
cltd
xchg
push
dec
or
arpl
mov
push
adc
xchg
or
xlat
mov
push
lahf
stc
push
dec
ja
push
xchg
mov
adc
test
js
pop
dec
sub
lods
pop
out
lods
in
subl
mov
dec
xchg
aam
cld
cmpsl
xchg
outsb
sub
xor
add
jge
iret
adc
add
sbb
mov
sbb
popa
cmp
add
cltd
push
pop
mov
sbb
dec
sarb
push
pusha
mov
push
xchg
and
mov
inc
or
inc
pushf
cltd
sbb
mov
inc
cmpsl
insl
mov
in
sub
sbb
daa
push
mov
jecxz
lahf
push
xchg
jne
mov
sub
jmp
out
cmp
xor
subl
pop
imul
fdivs
xchg
and
jecxz
insl
js
push
xor
adc
or
loop
outsb
push
xor
in
xlat
outsl
test
jbe
xor
leave
aaa
pop
and
sbb
adc
inc
dec
cltd
popf
xor
xor
pop
shrb
cli
loope
adc
sbb
xlat
lret
loopne
pop
dec
aas
or
xor
adc
xchg
pusha
fidivrl
stos
ss
jbe
imul
xchg
cmp
add
lods
sub
push
jle
xchg
jle
fistpll
fwait
cmp
mov
or
mov
iret
mov
repnz
lds
mov
push
push
mov
insl
inc
fistpl
lahf
jne
mov
and
mov
cs
scas
cmp
dec
pop
xchg
cwtl
fidivl
call
movsb
or
fildl
scas
popa
lods
jae
mov
fmul
aad
out
adc
pushw
movsl
stos
leave
imul
cmc
jno
push
ja
cmp
inc
pop
mov
sub
leave
fsincos
scas
adc
int3
mov
xchg
cmp
sbbl
movl
test
test
dec
push
push
fisubl
mov
or
stos
jl
arpl
sub
daa
mov
cwtl
arpl
test
fbstp
xchg
cmp
pop
cs
xchg
test
test
inc
inc
adc
stos
jae
mul
jb
inc
dec
lods
mov
jae
adc
loopne
rorl
push
jg
xchg
imul
mov
jae
rclb
je
add
pop
adc
ficoml
pop
enter
inc
dec
imul
push
jb
insb
in
sbb
scas
pushl
sbb
mov
cmp
jp
cmp
mov
sti
mov
xchg
shll
push
xlat
sub
lahf
data16
roll
xor
lods
out
cmc
push
ja
les
xor
popa
mov
xchg
lods
imul
mov
addb
orl
push
lret
dec
ss
repz
sbb
push
mov
or
mov
gs
push
mov
xorl
inc
iret
and
notb
xor
je
mov
loop
inc
or
ficomps
sti
rolb
and
ja
in
push
xchg
sahf
test
push
mov
xor
inc
or
add
cmp
cmp
push
inc
mov
in
fs
sbb
es
or
cs
lds
in
cmp
mov
push
dec
fldt
stos
fists
int
in
loopne
pushl
bound
cmc
ret
push
push
push
scas
stos
xorb
sub
enter
push
ret
jp
pushf
scas
andl
lret
loopne
xchg
adc
cmp
cs
xchg
fmul
addr16
jp
push
test
add
pop
dec
cmc
lcall
shll
aam
cmp
fs
or
push
lret
and
sub
fnsave
popa
nop
pop
cld
movsb
add
ret
dec
pop
in
adc
jmp
inc
neg
aam
cs
mov
and
xchg
loop
std
adc
dec
not
add
aad
ret
cs
ret
sub
mov
lret
data16
enter
cmp
inc
fs
arpl
aad
lahf
jp
mov
xlat
incb
inc
daa
mov
xor
fcompl
xor
push
iret
jge
cmpb
cwtl
out
xchg
repz
sbb
call
rolb
sub
add
outsl
ftst
add
sbb
sbb
jmp
lret
cli
inc
pushl
inc
cwtl
xor
icebp
sbb
xchg
mov
test
mov
sbb
pop
xorb
cmp
dec
jle
push
cltd
rolb
sbb
lcall
dec
lret
dec
in
rcl
bound
fisttpll
xchg
lock
mov
or
pop
xchg
ret
pop
mov
xchg
jmp
jb
inc
ja
jle
les
fisttpl
fnstenv
ficomps
xor
dec
ret
ret
cmp
call
test
mov
sub
es
scas
and
dec
and
hlt
push
pop
jl
pop
in
mov
lcall
lock
mov
or
aas
xchg
fidivrl
add
jnp
jmp
test
imul
sub
mov
icebp
arpl
lret
idivb
sti
sbb
iret
cmpsl
sbb
pop
push
mov
ss
les
sub
mov
icebp
enter
ds
pop
mov
ss
shll
call
add
inc
ljmp
sub
xor
movsl
loop
add
repz
mov
jmp
jns
inc
or
pop
add
aam
xchg
ror
ret
pop
pop
add
mov
cmc
sahf
cmp
push
lds
and
jge
movsl
fcmovnbe
inc
aaa
adc
and
jb
xlat
cmpsb
jo
push
stos
sbb
outsl
shll
pop
aas
mov
adc
pop
test
out
add
pop
scas
add
fidivrs
sahf
xlat
or
repnz
fs
dec
jmp
sbb
inc
pop
hlt
pop
inc
sub
xor
addr16
ss
ficoml
pop
push
stos
cmc
aad
std
repz
push
int3
cmp
push
test
loope
scas
push
sahf
adcl
lds
loopne
pop
divb
cmp
pop
or
and
ret
sub
mov
xlat
cmp
jecxz
pushf
mov
aas
shlb
loope
jmp
out
xchg
in
pop
push
nop
les
dec
dec
clc
idivb
fwait
mov
jl
bound
xlat
jne
les
sub
xor
mov
mov
xchg
dec
arpl
mov
mov
pusha
fldl
jbe
and
mov
mov
call
push
mov
shl
jne
aam
in
jno
lcall
iret
push
out
lods
push
cmc
xchg
dec
dec
dec
fisttpll
mov
inc
mov
mov
add
mov
add
sub
push
rolb
stos
cmpsl
mov
cmp
jl
inc
addr16
repz
jle
push
cmpl
inc
add
into
lea
cmp
je
jg
in
or
addr16
cs
or
data16
outsb
or
jbe
std
cld
or
cmpl
aas
pop
mov
cli
test
fwait
cmpsl
scas
lods
ja
xchg
mov
cmp
addr16
cmp
adc
nop
adc
pop
outsl
xchg
mov
fnstsw
and
mov
sub
mov
ret
and
repz
aas
dec
mov
shlb
mov
add
and
into
cld
mov
or
stc
orl
jecxz
lds
hlt
in
iret
nop
aaa
inc
ja
sbb
or
jbe
cmp
pop
jge
lret
std
and
inc
mov
cs
pop
ficomps
xor
mov
leave
fldenv
aam
pop
jo
pop
cld
lock
mov
xor
test
xchg
mov
and
flds
dec
sub
push
mov
fsubrs
pushf
jbe
lea
or
int
cmp
scas
inc
pop
aaa
leave
js
aaa
lret
rolb
or
xchg
xlat
popa
in
dec
mov
addl
xchg
inc
pop
mov
pop
aaa
cmp
xor
clc
int3
xchg
adc
sub
shrl
mov
dec
shl
xlat
pop
mov
stc
mov
call
outsb
in
orl
push
arpl
ret
insl
iret
aam
and
inc
jae
or
clc
mov
mov
jo
out
xor
popf
add
mov
pop
cmp
cmpb
or
addr16
mov
enter
negb
cmp
mov
pop
lods
bound
push
cwtl
gs
dec
xchg
ljmp
jl
xchg
hlt
pop
pop
ljmp
imul
test
pop
pop
lahf
stc
jge
xor
dec
adc
idivb
fldln2
jb
roll
jge
pop
repz
imul
cmp
iret
hlt
push
out
mov
arpl
sub
ljmp
sti
test
or
stc
imull
xor
roll
rol
dec
ds
data16
enter
xlat
loop
aas
outsl
lret
outsl
or
sahf
sub
fs
jge
aas
adc
and
pushf
dec
das
push
movsl
adc
inc
ror
dec
cli
push
scas
pusha
fldt
push
gs
or
mov
push
dec
sbb
sbb
jg
sbb
aad
mov
inc
mov
out
dec
cmp
jnp
aad
fs
pop
clc
xchg
maskmovq
add
ljmp
int
mov
negb
jle
ja
sub
mov
add
pop
lret
fiaddl
adc
sub
and
lods
movsb
add
mov
ljmp
push
or
iret
loopne
or
mov
fildll
mov
jge
push
das
jp
fisttpl
push
or
mov
ret
out
imul
cld
sub
test
in
push
ja
cld
jnp
push
jle
jge
mov
xor
sbb
adc
add
insb
icebp
jmp
out
loopne
testl
xor
mov
sbb
jns
scas
lds
idivb
jge
cwtl
sti
in
test
pop
and
jno
add
lret
lea
or
stos
cmp
test
cmp
cmp
int3
xchg
cmp
push
jge
push
adcl
mov
insb
inc
add
inc
xor
test
push
cld
cs
nop
push
jmp
sub
mov
lea
sbb
push
imul
imul
daa
std
cs
inc
sbb
xchg
into
hlt
lods
mov
pop
push
loope
and
lahf
bound
inc
push
jo
outsb
fisttpl
xlat
dec
mov
xchg
cmp
jbe
fs
sbb
jmp
test
loope
cmp
negb
mov
dec
fwait
inc
insl
dec
jp
lret
dec
int3
mov
xor
adc
pop
je
xor
aam
fstpt
sti
and
cs
insl
pop
inc
adc
out
jno
das
mov
dec
roll
and
pop
push
jg
dec
sub
add
sub
retw
mov
adc
xchg
jno
xchg
test
in
mov
icebp
push
test
scas
clc
xchg
imul
dec
cs
jg
loop
mov
mov
xor
cwtl
in
cmp
fcompl
imul
div
push
xor
cmp
jle
jae,pt
jns
xor
sahf
cmc
insb
xchg
mov
cmp
sti
or
enter
jnp
or
sub
cmp
pop
in
sbbl
sbb
inc
icebp
and
xchg
outsl
pop
sub
dec
push
lret
adc
je
movsl
jne
push
sub
cmp
ja
inc
lock
insb
and
mov
mov
xchg
inc
in
or
testb
add
sbb
push
pop
subl
cwtl
lock
xor
movsb
xor
mov
cmc
push
and
mov
shll
mov
ror
xor
dec
adcl
mov
leave
sarl
inc
loop
fldenv
adc
jno
leave
loop
or
lock
rcll
loop
fdivrl
adc
ja
in
xor
ffreep
mov
addl
mov
jae
dec
call
out
mov
mov
mov
push
xorb
and
out
push
testb
sub
sbbb
aaa
mov
add
jecxz
xchg
das
aas
test
imul
imulb
or
mov
sbb
cltd
jbe
scas
and
or
pop
inc
xor
imul
or
daa
mov
cmp
stos
cmp
xor
pushf
lods
scas
mov
fwait
mov
incb
push
movsb
enter
clc
call
fcomip
into
fstl
jmp
aad
scas
mov
adc
push
fbstp
mov
adc
sub
scas
add
lds
in
addr16
in
cmp
adc
in
and
xchg
dec
cltd
or
ficomps
jno
jae
imul
adc
add
rolb
mov
int3
push
loopne
push
push
jecxz
lret
shlb
jne
jns
ljmp
call
push
xor
add
fisubs
in
ds
mov
xchg
scas
mov
cmp
or
fnstcw
sub
in
lret
aaa
xchg
loop
cli
mov
xorb
xor
push
jbe
sbb
movsb
fiadds
push
add
shll
or
xlat
pop
jle
pop
sub
lcall
notb
adc
cmc
mov
sub
fsincos
loop
inc
jae
imul
mov
sti
jb
add
mov
pop
mov
inc
pop
ds
pop
xchg
jmp
push
pop
adc
ds
repz
push
mov
mov
pop
daa
xchg
lods
add
nop
sub
ljmp
ret
inc
lds
jnp
add
mov
gs
add
mov
mov
mov
sub
add
pop
mov
arpl
adc
sahf
push
jmp
cmp
fisubl
cmp
xchg
in
popf
cmp
shll
sbb
lahf
mov
stc
add
jecxz
fnstsw
xor
aam
sahf
int
xor
loope
sub
sub
test
cltd
push
into
and
xor
sub
and
dec
in
test
inc
aad
push
addr16
inc
mov
dec
push
pushf
push
js
test
pop
jmp
lods
out
mov
or
inc
dec
je
mov
mov
add
or
ss
lret
pop
or
xchg
hlt
sahf
push
dec
mov
or
mov
fstp
cli
sbb
jae
or
addr16
inc
cli
dec
das
pusha
sub
inc
stc
or
jo
xchg
fcoml
ret
and
add
popa
mov
xor
xchg
in
rolb
and
jge
add
pop
cltd
push
into
loop
dec
daa
shlb
mov
pop
andl
ljmp
push
sub
bnd
push
popa
pop
and
lret
xchg
xchg
adc
sub
push
xchg
divb
sub
ljmp
dec
divb
hlt
or
xlat
cmpsb
pushf
inc
into
movsl
pop
and
cmpsb
shll
fs
push
jmp
xor
adc
add
push
sar
lahf
sbb
xor
pusha
cmp
jge
xchg
cwtl
loopne
sbb
movsb
dec
adc
adc
push
cltd
out
pop
jp,pt
jns
addr16
leave
das
add
sarb
sub
test
sbb
lret
sbb
aaa
bound
lea
jge
push
and
lods
fs
aam
dec
push
or
pop
fimuls
pop
mov
adc
loopne
dec
inc
mov
mov
inc
cltd
xor
mov
mov
jl
movsb
insb
inc
mov
stos
jb
test
or
scas
je
fadd
lods
fsubs
mov
mov
dec
adc
movsl
cwtl
adc
jg
sbb
jbe
std
and
sbb
popa
sub
inc
mov
sub
sub
arpl
lcall
jge
sti
std
lahf
pushf
inc
pop
inc
paddusw
ljmp
jbe
or
enter
pop
out
mov
jg
aam
sub
lea
cmpsl
aaa
xchg
imul
leave
sub
fnsave
imul
insw
es
xchg
mov
icebp
loopne
cmpl
pop
into
popa
icebp
mov
pop
nop
ljmp
xor
dec
cmp
inc
ficoml
in
stos
lret
ror
sub
lahf
pop
sub
test
iret
dec
xor
xchg
sub
arpl
push
lret
push
push
sub
and
pushf
jle
sbb
ljmp
fists
clc
dec
xchg
mul
test
xchg
pushf
adc
mov
mov
cli
ljmp
or
icebp
xor
push
int3
cmp
into
xacquire
push
into
out
addl
int3
sub
mov
and
ret
test
add
add
repz
xchg
mov
push
mov
testb
mov
or
mov
iret
pop
repnz
pop
adc
test
mov
movsb
dec
loop
arpl
push
inc
inc
jmp
pushf
and
add
inc
insl
in
arpl
lcall
imul
imul
cmpsl
popf
fstpt
test
pop
shr
or
fistpll
jbe
in
pop
sbb
dec
sub
mov
pusha
pop
filds
pop
or
xor
adc
popa
xchg
sbb
ds
lahf
sti
or
push
sub
sti
jo
ror
push
rcrb
clc
out
clc
inc
xchg
outsl
pusha
sbb
cmc
nopl
paddsb
in
mov
popf
jmp
loope
and
out
lods
or
push
sbb
xor
xor
es
int
and
sbb
pop
movsl
xchg
push
add
lock
cmpb
les
out
pop
in
pusha
pop
gs
adcl
loop
mov
or
sbb
or
popf
loopne
dec
jl
jnp
xchg
cmpsb
mull
add
push
pop
jl
sti
data16
jae
xor
pop
out
inc
add
loope
outsb
and
cwtl
sarl
inc
xor
inc
xor
outsl
cli
mov
scas
inc
test
adc
mov
push
push
lods
dec
push
cmp
adc
mov
sti
cmp
dec
or
sbb
mov
fsubrl
ficoms
and
mov
jle
pop
jb
lock
jne
repz
scas
xchg
jg
mov
stos
adc
xchg
call
ret
dec
adc
lcall
mov
push
mov
jo
fdivl
mov
sarb
aas
or
repnz
inc
fistl
or
lret
enter
xchg
xchg
in
push
mov
cmp
mov
pop
cmp
mov
jg
ficompl
mov
gs
clc
push
das
push
jg
push
clc
inc
sub
sbb
pop
mov
adc
insl
out
addr16
push
and
xlat
push
es
xor
daa
jnp
pop
test
xchg
mov
rclb
sub
js
add
jbe
mov
fwait
lea
ja
fcoms
sti
push
bound
movsl
or
negl
ret
sarb
add
and
push
into
je
stc
movsb
pop
loopne
or
int3
lret
cmp
push
in
pop
das
mov
lea
xchg
adc
jg
xor
cltd
in
push
or
js
sbb
adc
mov
rol
aam
sbb
test
adc
xlat
xchg
fwait
es
or
mov
or
in
cmpsb
mov
insb
lock
inc
shrb
push
xorb
pop
push
mov
lcall
dec
push
dec
das
pop
out
mov
pop
xchg
pop
out
add
adc
sahf
xor
and
mov
lods
inc
ja
add
mov
insl
cwtl
pusha
sti
pop
ret
xchg
int3
jno
icebp
xor
jae
daa
cmp
push
lock
sub
pop
pop
xchg
jmp
icebp
xchg
and
out
outsb
loope
sub
loop
scas
mov
mov
popa
inc
pop
inc
nop
aam
ss
mov
in
mov
lods
mov
in
fisubl
jp
jge
test
sahf
xchg
movsb
xor
aas
pop
sub
add
fiadds
cld
test
sahf
jbe
pop
sbb
lcall
inc
mov
movsl
sbb
shll
aaa
daa
sti
adc
out
pop
insb
xlat
data16
jecxz
int3
inc
push
fxch
fcmovbe
and
mov
jb
jmp
stc
lods
jmp
rclb
push
or
ja
jbe
ret
push
sti
fmul
adc
inc
in
jmp
mov
cltd
clc
aad
push
mov
jnp
pop
and
ljmp
pop
jbe
orl
out
in
cltd
sub
sbb
insl
outsb
loopne
sbb
nop
fisubrs
repnz
aas
adc
adc
inc
outsb
test
cli
or
xor
jbe
pop
cld
clc
inc
orb
adc
cmp
cmp
repnz
mov
dec
jae
repnz
mov
adc
dec
adc
psrlw
lret
cs
xor
dec
sub
pop
xor
mov
out
out
dec
hlt
sbb
cmp
cmp
int3
jnp
bound
xor
and
in
adc
mov
sub
sarb
xorb
imul
cld
lahf
add
div
aam
stos
les
cld
mov
push
xchg
out
xchg
scas
pop
pop
dec
jnp
movsb
negl
adc
xor
cmp
fbstp
and
and
sub
out
ss
mov
push
data16
in
ret
sub
or
push
xor
mov
ljmp
jl
repz
pushl
insb
xor
mov
pop
movsb
out
and
popa
push
pop
inc
mov
or
dec
xchg
dec
daa
je
lods
jb
fmuls
xchg
addb
push
nop
sub
mov
add
jmp
out
lods
cli
insb
sbb
xchg
dec
cmp
pop
inc
add
pop
xlat
stos
scas
aas
sub
aad
jne
out
cmp
sbb
dec
es
fadds
popa
int
into
loop
jo
repz
es
mov
mov
sub
jae
out
jbe
pop
es
popa
xlat
arpl
cmp
mov
jns
jge
and
repnz
adc
xchg
aad
and
push
ss
mov
xchg
jns
pop
dec
sbb
lea
shrl
and
sub
out
es
push
inc
aad
sbb
and
mov
mov
mov
mov
rcll
test
out
dec
add
into
cmc
mov
xor
pop
push
xor
cwtl
das
ljmp
xchg
std
sub
xchg
inc
cmp
lods
jp
xor
ss
jp
mov
push
loope
mov
addr16
aas
sub
jl
xor
and
pop
pop
xor
rcrb
and
ss
xchg
addr16
pop
push
inc
mov
dec
inc
test
or
lds
or
pop
mov
xchg
pop
dec
push
in
add
nop
or
mov
pop
push
adc
add
push
lods
xchg
push
outsl
enter
pop
push
sub
jo
dec
cmpsb
mov
int
pop
mov
jg
push
rorb
lds
xor
xchg
add
sub
cmc
loop
sub
mov
stos
outsb
jb
gs
mov
insl
cli
jb
sahf
ljmp
inc
addr16
or
fsubl
xchg
in
push
push
lret
inc
adc
dec
jecxz
fildll
dec
lock
out
xchg
gs
mov
in
xchg
inc
nop
mov
cmp
repz
fwait
xchg
mov
nop
testl
adc
daa
je
xor
mov
andb
lret
cmc
push
rep
cmc
push
or
xchg
jmp
stos
fdivl
pop
enter
cmc
cltd
cs
rcl
leave
or
pop
sarl
rorl
sub
mov
rorl
cmp
mov
psubsw
jo
add
scas
movl
dec
xchg
mov
inc
insl
inc
dec
out
sub
in
inc
cs
loopne
adc
scas
push
loopne
fcomip
ss
loope
jne
les
scas
test
jp
pop
in
sbb
push
insb
mov
fwait
test
ljmp
or
mov
or
in
and
cwtl
sar
mov
mov
xlat
or
sarl
notl
shrl
sbbl
mov
push
xchg
sbb
xchg
or
test
stos
lods
pushf
lods
adc
or
push
mov
les
out
dec
movsb
or
and
mov
sarl
cld
xchg
shlb
out
popa
enter
stc
mov
add
out
adc
ret
mov
test
and
mov
lahf
xor
sbb
mov
fimull
stos
lods
cmc
sahf
push
je
insb
adc
pushf
loop
cli
std
pop
push
xchg
sahf
mov
movl
push
aad
cmp
pop
into
mov
dec
or
bound
mov
and
les
sub
out
mov
test
push
jle
xor
sub
aad
ss
pop
movsb
adc
sub
fsts
sbb
ljmp
sbb
mov
pop
in
xchg
jbe
ss
repz
adc
fcmovb
xor
scas
or
loopne
loope
shl
outsl
mov
daa
fs
push
mov
pop
lret
mov
jge
stos
sarb
ljmp
lock
sub
shlb
repnz
adc
jne
mov
mov
and
mov
jge
inc
add
aas
inc
adc
cld
enter
pop
xor
add
xchg
fsub
cmp
loopne
sbb
xchg
inc
shrl
addr16
lret
cmp
ror
push
inc
cmp
mov
in
adc
pop
mov
jl
adc
and
cli
jae
clc
shlb
test
inc
shlb
aam
jecxz
dec
notb
and
mov
imul
fcmovne
sbb
lcall
jmp
fmuls
imul
jle
sub
cmc
pop
mov
sahf
incl
xor
stc
mov
pop
mov
or
test
stos
or
es
mov
sub
fidivrs
xchg
std
or
jle
stc
xor
mov
fistl
jae
add
out
in
xor
add
jnp
pop
bound
mov
mov
enter
sbb
pushf
jae
mov
sbb
pop
lret
jl
into
xchg
scas
inc
inc
das
cmp
dec
push
jle
sub
std
and
sahf
adc
dec
das
andb
add
inc
cli
fbld
sbb
pop
jns
test
nop
cli
pop
fists
jg
jmp
ja
arpl
ljmp
xchg
mov
fsts
pusha
lods
mov
icebp
icebp
out
lret
xchg
stos
pop
sbb
push
inc
outsl
cmp
and
loopne
push
mov
jecxz
sub
sub
aaa
inc
adc
and
inc
call
fisttps
shlb
xor
mov
pop
adc
in
loop
pop
sbb
aas
ret
and
or
and
pop
js
in
sbb
repz
cmp
jle
and
add
insb
cs
dec
outsl
jmp
daa
mov
jo
dec
cmp
and
mov
mov
mov
xchg
les
pop
adc
leave
sub
psubb
xor
push
adc
aad
enter
jno
sar
push
push
jge
jbe,pt
sbb
popf
stc
mov
lea
push
jg
push
mov
dec
push
dec
and
xchg
in
pop
lods
and
rclb
cmp
mov
loope
stc
fcomip
dec
sbb
cmpsb
dec
add
mov
lahf
or
inc
insl
dec
inc
arpl
adc
or
mov
imul
inc
roll
xor
fwait
jl
and
push
dec
inc
mov
sarl
add
loope
push
xor
push
out
mov
cmp
jns
mov
sar
loopne
jae
mov
add
loope
stos
jns
and
add
sub
ret
sub
xor
adc
xor
add
jl
mov
out
mov
inc
push
push
inc
out
test
sub
push
gs
adc
pushf
jecxz
in
test
insl
jmp
cld
adc
call
cmp
mull
mov
dec
cmp
xchg
and
jae
nop
push
or
jno
add
xor
add
lcall
and
decb
pop
xchg
adc
cmpsl
imulb
mov
and
jo
mov
sub
dec
mov
cmp
js
cli
fimuls
outsl
lds
pop
les
hlt
ja
mov
fucomi
push
mov
jmp
aaa
pusha
add
dec
shlb
inc
mov
mov
fnsave
cmp
test
mov
push
movsb
jmp
or
cmc
push
fsubs
mov
pusha
adc
push
cmc
lock
jns
jne
lea
mov
adc
inc
add
jnp
stos
mov
push
sub
in
pop
jmp
adc
stos
cmp
leave
int
mov
pop
iret
sbb
ret
mov
cmc
imul
enter
adc
mov
scas
fwait
mov
sbb
in
fdivrl
cmp
decb
cwtl
push
xor
imul
pop
lds
and
and
out
add
jl
dec
sahf
push
xor
cld
inc
insl
repnz
icebp
mov
or
cmp
sarb
mov
int
mov
mov
leave
and
mov
rorb
fidivrl
pop
std
push
inc
divl
test
cmp
sbb
jp
in
mov
cli
sti
sbb
inc
aas
push
xchg
rcrl
enter
and
xor
fstpt
add
enter
pop
jbe
and
mov
jle
pop
cmp
imul
popf
ss
jmp
jmp
jb
push
cmpsl
xor
data16
push
fidivrl
insl
xor
iret
add
insl
outsb
int3
add
roll
jne
push
push
movsl
in
das
dec
sbb
daa
dec
cmp
rorb
sti
mov
scas
stos
stos
cmp
cmpsl
mov
mov
in
bound
in
dec
mov
push
leavew
mov
aad
test
sub
push
sub
cmp
sbb
add
outsb
int
dec
add
adc
into
mov
mov
into
adc
xchg
sti
mov
push
dec
mov
cmp
je
fstps
sub
sbb
dec
sbb
lret
and
lock
add
jno
out
fs
push
push
loope
mov
jnp
insl
adc
sbb
and
imul
ljmp
add
je
jb
or
xchg
ds
and
stos
and
mov
inc
add
jg
xchg
cmp
mov
je
lret
mov
decl
fs
inc
pop
mov
dec
jbe
cmpsl
or
inc
mov
rolb
popl
jae
dec
hlt
cld
cmp
mov
push
cmp
add
mov
pop
xor
cmp
fimull
out
lods
push
popa
jge
ret
lahf
mov
out
push
jp
insb
out
ds
dec
nop
test
ljmp
cli
jecxz
push
adc
and
adc
js
mov
js
add
push
pop
insb
out
ss
push
out
ss
fwait
add
test
push
es
mov
sub
add
loope
cmpsb
cltd
nop
aam
jl
movsl
js
mov
mull
notl
mov
dec
mov
fwait
imul
mov
cmp
scas
int3
cmc
adc
xchg
push
cltd
aad
roll
pop
sbb
add
scas
ret
xor
xlat
fisttpll
sbb
and
shll
stc
sahf
mov
dec
sbb
pusha
call
test
pop
lods
adc
out
sub
mov
push
nop
jno
mov
subl
push
cmp
push
xchg
cmp
insl
insl
fidivl
cld
add
mov
push
loop
mov
cmc
xor
outsl
filds
mov
fs
in
or
mov
xchg
aam
push
jns
pop
inc
mov
and
mov
inc
les
lcall
push
lock
xor
arpl
sbb
xlat
push
push
and
aad
mov
clc
sahf
sahf
aad
addr16
int
pushf
dec
lcall
test
pop
dec
mov
faddl
adc
fstps
cmp
stos
cltd
movb
aam
and
mov
dec
test
rcr
fidivrs
pop
lea
jecxz
cwtl
rorl
cmp
adc
pop
sbbb
pushf
jl
aas
add
fbld
fwait
jle
adc
xchg
dec
cmp
push
cmp
mov
or
fwait
xchg
xor
stc
int3
adc
sbbl
pop
jmp
fwait
movsl
and
sti
and
cmp
sbb
into
mov
rcl
jo
jp
ljmp
clc
shl
xor
lods
insl
insl
sahf
add
rcr
mov
das
add
daa
cmp
inc
push
sbbl
xorl
dec
aad
js
jno
ja
pop
je
jge
shrl
lds
rcl
mov
pop
lret
inc
push
testl
ss
cli
cmp
jmp
daa
pop
pop
mov
adc
cmp
mov
mov
mov
adc
xor
repz
call
push
js
leave
shr
sub
in
xchg
popf
inc
cmpsb
xchg
outsb
out
adc
or
sbbb
icebp
into
dec
mov
or
into
mov
mov
dec
rcr
pusha
lcall
sahf
cld
inc
xor
rclb
enter
mov
mov
inc
fmull
inc
cmp
adc
lret
sub
xchg
cli
and
das
scas
pop
jae
mov
xchg
cwtl
sahf
out
rorl
push
jnp
push
test
loope
dec
xchg
cmpsb
adc
adc
in
or
jmp
aad
test
jecxz
insl
pop
testb
cmp
push
js
adc
call
dec
push
gs
mov
fiaddl
stos
mov
pop
into
mov
add
pop
loope
loope
xor
fisttpl
ret
push
cmpsb
and
dec
hlt
es
fisttpl
sbb
scas
jae
jg
bound
push
outsl
fidivs
test
stc
dec
arpl
dec
lahf
icebp
fs
push
int
mov
lcall
inc
out
or
sysenter
ret
sbb
aaa
mov
xchg
daa
or
mov
in
fsub
xchg
insl
call
adc
and
mov
loope
xor
cmp
mov
imul
cmp
pop
rorb
sbb
std
dec
icebp
addr16
sbb
stc
jg
jnp
jmp
mov
jb
mov
stc
stos
sbb
fcomi
ja
dec
incl
enter
push
data16
mov
push
pop
ret
int
fimuls
jle
adc
sbb
sub
jo
imul
mov
out
add
sub
iret
rcl
rolb
mov
sarl
lea
or
and
repnz
out
shlb
jae
or
add
rcrl
out
popa
fs
insl
xchg
cmc
outsl
lret
lea
in
mov
mov
int
or
popf
pop
jae
xchg
jo
jp
dec
loope
movsl
xchg
dec
popa
aaa
inc
test
inc
fcomps
pop
mov
sbbl
dec
out
cmpsb
fcmove
sti
fiaddl
mov
sbb
in
lahf
or
sbb
adc
fcmovnb
lahf
fdivrp
das
lea
sbb
mov
notl
loop
or
imul
lret
dec
or
out
push
mov
and
sub
xchg
loopne
arpl
stos
mov
pop
les
cmc
and
into
aaa
scas
pushf
jge
xor
sbb
inc
jno
aam
xchg
outsl
cltd
push
adc
jnp
push
fisubl
dec
xor
aad
jl
test
mulb
cmc
rol
xchg
movsl
test
jl
pop
out
inc
mov
add
js
sarb
sahf
mov
pmaxub
pop
ja
xor
test
mov
pop
push
int3
pop
daa
not
push
inc
inc
jle
or
cmpsb
stos
inc
jge
sbb
scas
std
pop
xor
sbb
mov
aaa
nop
or
repz
leave
adc
inc
sub
addb
sub
imulb
mov
xorb
dec
sahf
les
xchg
jmp
iret
mov
mov
inc
addl
push
dec
jae
insl
fisttps
xor
sbb
mov
out
or
sti
sti
and
cwtl
add
adc
fcmove
cmpsl
mov
rolb
push
push
push
inc
mov
pop
sub
jo
js
mov
push
insb
jmp
popf
sbb
sbb
pop
fnstcw
and
sub
lcall
and
movsb
arpl
jo
pop
pop
data16
gs
cmp
xchg
and
fcompl
clc
fstp
pop
xor
call
clc
ret
xlat
insl
xor
jo
adc
or
mov
cmp
movsl
xor
cmpsb
incl
ja
arpl
insl
fstpl
xchg
rcr
jecxz
outsl
sbb
push
jno
sub
test
push
adc
lods
sar
sbb
xchg
movsb
jnp
test
fsubr
sahf
movsl
sti
cli
subb
aas
sbb
ss
dec
mov
and
push
adcl
inc
hlt
arpl
loop
shrb
out
roll
stos
adc
push
inc
insl
sahf
clc
push
mov
imul
ljmp
mov
fdivs
cltd
loop
pushf
sub
sub
mov
cli
cmpsl
jecxz
and
or
mov
subb
dec
nop
xor
je
loopne
xchg
ficompl
xlat
les
aaa
mov
adc
dec
fildl
add
push
jne
pop
mov
or
neg
cs
push
js
mov
ljmp
xchg
xchg
mov
jnp
xchg
addr16
in
push
xor
xchg
and
mov
sahf
scas
pusha
cltd
xor
jge
stc
sub
push
out
sub
test
xchg
out
xchg
jnp
loopne
xor
aaa
xchg
cmp
aas
lds
in
xor
or
out
int
sbb
fdivrs
jns
scas
sub
ret
cmp
jne
jg
je
sbb
or
jp
loope
inc
push
mov
pusha
lods
and
or
pop
cmpsl
or
mov
sub
adcl
je
jno
outsl
jl
lcall
dec
or
notb
add
ret
call
xchg
mov
adc
inc
mov
sub
sahf
rolb
std
inc
push
push
or
fwait
jle
add
ljmp
xor
sbb
rclb
inc
or
jmp
test
pop
and
xchg
add
mov
pop
test
push
insl
fcoms
jecxz
push
or
jnp
iret
nop
ljmp
add
nop
pushl
es
xor
add
xchg
pop
mov
movsl
sbb
pusha
je
mov
sbb
jmp
dec
dec
and
cltd
adc
iret
test
int3
aas
out
cmpsl
adc
stc
orl
dec
jg
xor
xlat
fldenv
test
adc
loopne
xor
adcl
in
cmpb
dec
dec
leave
pop
xor
addb
inc
fcmovnu
fidivl
sub
pop
iret
push
fcmovbe
cmp
sbb
mov
imul
mov
or
je
pop
mov
outsb
pop
mov
cmp
pusha
stc
insb
das
insl
pushf
rorl
jo
mov
and
call
daa
imul
sub
aaa
repz
mov
push
jmp
dec
mov
cmp
and
addb
in
sbb
dec
adc
mov
push
sar
lods
dec
rcrb
and
adc
push
shl
ret
pop
std
sbb
fisttpl
xlat
and
jl
and
add
inc
xchg
mov
pusha
shlb
mov
and
mov
ret
push
adc
mov
mov
xchg
cmp
adc
mov
adc
shrl
pavgw
sbb
pop
mov
xor
dec
loopne
and
sbbb
orb
pop
add
outsl
cmpsb
out
sbb
jne
jo
fwait
push
movsl
int
ret
shlb
xchg
mov
subb
cs
cltd
pop
repz
nop
sqrtps
xchg
inc
jb
xchg
push
adcl
hlt
inc
xchg
sahf
dec
mov
stos
xlat
add
das
test
pop
jmp
popa
dec
lods
jnp
mov
sar
or
sbb
int3
cmp
addr16
aam
pop
ljmp
jmp
pop
xor
mov
sbb
faddl
push
filds
mov
jne
or
fwait
adc
and
pop
pop
jecxz
xlat
mov
in
ror
pop
fldt
pop
xor
jecxz
pop
movl
inc
inc
nop
sbb
lods
rorl
mov
negl
mov
sbb
or
lea
out
icebp
sahf
cmp
xchg
dec
inc
out
sbb
daa
fimuls
pop
fildll
mov
test
out
call
stos
xlat
add
mov
test
scas
loop
xchg
fldcw
mov
dec
mov
jmp
lock
fbld
dec
in
sub
fcoms
rcll
mov
lods
sub
stc
and
xchg
pop
scas
out
mov
movsb
sbb
fimull
lcall
sub
and
sbb
and
push
rcr
jmp
mov
or
and
jmp
or
imul
dec
ret
push
call
dec
cmp
sbb
imul
jns
fs
inc
mov
icebp
push
enter
repz
xchg
in
das
enter
popa
or
xchg
enter
je
adcb
rcrl
les
mov
inc
sub
scas
loope
insl
fadd
aas
call
bound
xor
enter
sub
repnz
repz
or
dec
or
xchg
js
xchg
mov
shrl
mov
out
push
cmp
push
cli
add
in
stos
clc
ds
fwait
movsl
mov
ret
sbb
jmp
lods
cmpsl
push
push
out
inc
lret
xor
loope
sub
lret
lods
rclb
clc
gs
pop
inc
xchg
bound
stc
xchg
jne
jge
nop
lds
hlt
mov
inc
add
xchg
cld
sub
repnz
repnz
ret
cmp
sub
addr16
adc
jno
xor
dec
loope
push
and
and
mov
jl
stos
push
or
stc
mov
cwtl
rolb
int
add
mov
cmp
in
add
and
and
cs
adc
jmp
aad
cmp
fidivl
and
jbe
cli
pop
add
test
popf
sub
or
jae
fcoms
pop
adc
cmp
mov
cmp
loop
jbe
insb
out
cmp
push
mov
push
dec
add
jae
out
mov
and
inc
jne
popa
out
xor
jge
movsl
adc
jge
ror
es
jae
les
cmpsb
frstor
and
repnz
nop
push
inc
inc
mov
push
jp
jg
mov
sub
fcmovb
push
aas
and
jp
pop
sbb
fcmovnu
xor
lahf
sbb
sbb
fsubrs
inc
inc
insl
jg
fisttps
lods
sub
xchg
and
jns
adc
orl
xor
aas
bound
sub
out
outsb
xor
mov
lods
sub
push
mov
add
mov
lea
sub
lret
mov
inc
pop
andl
cltd
call
data16
repz
push
lods
fists
dec
jb
lods
sbb
repz
popf
loope
jae
push
leave
or
mov
in
cwtl
jne
mov
fs
add
mov
jno
mov
repnz
cmp
div
aam
sub
outsl
outsl
out
pop
lods
jle
test
sub
ret
fnstcw
repnz
xor
mov
lret
lcall
sbb
fs
mov
push
movsb
jb
push
jge
mov
xchg
jns
dec
mov
mov
mov
ficomps
shlb
sub
pop
les
adc
lods
adc
orl
cmc
adc
xchg
lock
xchg
lods
fsubr
pop
nop
mov
dec
cmp
insb
mov
sbb
inc
sbb
dec
xorl
push
leave
nop
gs
or
pop
mov
jecxz
cmp
bound
xchg
mov
mov
jo
add
inc
std
add
insl
sub
loope
in
push
mov
subl
xor
sub
mov
dec
clc
arpl
in
ja
out
jns
xor
int3
mov
sub
loope
mov
add
idivb
sbb
cmpsb
cmp
rcl
mov
xchg
cwtl
cmpb
xorb
mov
scas
ds
adc
pop
outsb
sub
push
in
adc
mov
inc
push
xchg
mov
and
jg
push
jmp
xchg
scas
fldl
sbb
or
and
push
cmpsl
pop
adcb
in
pop
insb
mov
or
mov
jnp
das
data16
lret
sub
add
imul
dec
data16
gs
inc
or
in
into
adc
push
pushf
dec
ficoms
adc
inc
and
inc
dec
push
jb
in
jmp
in
mov
outsb
sub
test
or
cmp
xchg
and
xor
shr
icebp
inc
jnp
and
push
cmpl
dec
cmp
rol
cltd
lods
jb
add
mov
ljmp
xchg
jg
dec
popa
addr16
lock
out
fsubs
out
adc
cmp
into
jge
dec
jl
testb
nop
sub
dec
jno
xchg
rorb
loope
out
dec
ds
inc
int3
mov
sub
mov
and
pop
sarl
in
add
rorl
xchg
xchg
cli
mov
int
sahf
pushf
mov
pop
clc
pop
in
sbb
inc
inc
stc
inc
jae
and
subl
bound
or
lods
dec
push
stc
cmpsb
pop
in
mov
dec
mov
jg
xor
push
push
loopne
ret
sub
das
dec
push
cmp
pop
cs
aad
pop
cwtl
jmp
sbb
repz
addb
lea
gs
imul
outsb
rolb
mov
mov
loopne
sahf
pop
sub
cmp
adc
ljmp
stos
lock
push
add
js
popa
push
pop
int
loope
lahf
out
xor
xchg
lock
test
cmp
jb
aam
movsb
cmpsb
xor
rsqrtps
mov
aad
out
leave
ja
jnp
test
rcrl
cmp
xor
pop
dec
mov
xor
andl
leave
js
popf
in
test
xor
jno
mov
pop
aaa
lea
cwtl
mov
lods
rcll
mov
test
loopne
push
repnz
sub
mov
cmp
enter
xor
adc
fidivl
mov
js
ja
dec
push
jl
jbe
pop
jns
enter
push
add
mov
popa
or
lret
inc
jnp
inc
mov
movsb
push
idiv
mov
js
jno
out
stc
aam
shrl
incl
test
mov
add
enter
jl
imul
fdivrl
loopne
lock
fists
dec
out
cltd
mov
dec
jle
pushl
inc
push
xor
cmp
lods
ret
leave
push
ljmp
aad
sahf
ja
out
test
lcall
add
iret
sub
push
pop
mov
js
outsb
adc
std
test
aam
pop
jp
hlt
gs
jmp
sbb
test
pop
push
notl
insl
cmp
sbb
sub
adc
xor
push
fldl
or
gs
cli
fbld
insb
xor
repz
rcll
mov
out
sub
push
jle
test
mov
fsubr
jo
mov
aaa
insl
jecxz
test
pop
pop
imul
cmp
cmp
ja
movsb
ja
pop
rcr
movl
mov
out
lock
shl
cmp
es
jle
jle
xchg
sub
mov
pop
inc
xlat
sub
push
dec
sbb
shl
jl
mov
shlb
lea
outsl
jg
gs
sub
clc
imul
adc
adc
pop
cmpsb
pop
mov
mov
lret
into
fcompl
shl
test
add
jecxz
ds
nop
gs
rorl
xchg
stos
add
rol
xchg
dec
movsb
ret
inc
xchg
fmul
pop
inc
cli
cmpsl
cmp
push
xchg
andl
mov
or
jne
aaa
lods
aaa
mov
push
repnz
testl
cmp
andb
les
jo
gs
stos
cmp
cs
cs
or
cmp
adc
cmpsb
push
add
lods
jl
dec
fisubrs
lahf
andl
adc
enter
jl
mov
jmp
jnp
inc
pushf
scas
jno
in
jne
sub
add
fbstp
fiadds
nop
mov
mov
sub
sub
mov
mov
push
ficoml
lret
or
xlat
mov
xchg
mov
sbb
je
inc
std
cmp
xor
cmp
push
mov
cmpsl
xorb
jmp
jb
xor
dec
mov
cmp
mov
fwait
adc
and
in
push
jg
jns
gs
data16
push
out
xchg
ficoml
add
push
std
push
or
cwtl
xchg
add
in
add
aas
jg
jg
movsb
mov
sub
cmc
push
mov
cltd
arpl
test
push
and
or
push
sbb
out
vmaxsd
test
jl
xchg
jmp
mov
pusha
pop
mov
cmpsl
inc
in
cwtl
push
and
add
sub
or
or
jb
cmp
ja
scas
xchg
cmp
mov
jns
jge
inc
fistl
xchg
movsb
and
int3
sub
pop
cmpsb
adc
outsl
dec
bnd
test
in
cwtl
sub
enter
lcall
inc
sahf
insl
cmc
pop
push
shl
fidivs
fwait
addr16
filds
xor
add
xor
mov
insl
test
lods
push
mov
push
pop
mov
push
shlb
in
pop
lcall
sbb
pop
jo
out
stos
lock
xor
or
int3
lods
dec
jl
idivl
and
test
cmpsb
mov
jne
inc
outsb
out
and
push
or
js
aas
adc
xor
lret
jne
jb
jmp
mov
mov
lret
in
ret
pop
fwait
and
addl
cmp
icebp
mov
jle
sub
mov
imul
cmc
pop
pop
xor
in
imul
xchg
cwtl
jb
mov
dec
orb
test
inc
jbe
stc
les
data16
dec
xor
pusha
aam
test
mov
jnp
xchg
cli
xor
imul
sub
roll
jp
sub
xchg
or
sbb
mov
orb
addr16
xlat
adc
mov
dec
or
jnp
pop
jg
inc
int
shlb
adc
fsubs
push
jmp
ror
cmp
xchg
notl
cld
jle
cli
mov
ret
sbb
inc
repnz
aaa
imulb
mov
popf
int3
mov
pop
jne
mov
push
push
aaa
xor
or
sbb
lret
dec
push
adcb
jo
bnd
inc
push
push
or
push
fnstenv
nop
shl
rorb
movsb
jnp
mov
or
inc
stos
lods
mov
movsl
cltd
cld
icebp
push
jns
test
fwait
inc
mov
shlb
inc
fisubs
jbe
rolb
loopne
mov
out
xor
cmpsl
lds
and
sti
sbb
dec
int
loop
test
addr16
jb
std
loopne
push
cwtl
call
jmp
movsl
inc
push
push
and
add
adc
scas
outsb
lock
and
and
cld
lahf
adc
testb
jmp
cwtl
push
scas
cld
dec
sbb
jge
sbb
notb
push
inc
aam
adc
mov
xchg
repnz
cltd
mov
add
ljmp
scas
jg
ret
lods
shlb
adc
imul
mov
scas
jmp
add
imul
ret
ds
out
xchg
popf
or
aaa
pop
sub
inc
xchg
and
pop
and
ret
or
rcl
fidivrs
xor
xchg
fstps
fs
pop
outsl
push
sqrtps
out
mov
cs
ss
in
movsl
sbb
pop
jo
pcmpgtb
inc
xlat
lods
pop
pop
aad
out
std
ja
jmp
sub
stos
sti
add
mov
xor
dec
and
aam
dec
lods
lret
testb
fwait
loop
mov
mov
pop
repz
mov
push
nop
fadd
addr16
xchg
pop
mov
jge
testl
and
es
mov
push
lahf
lods
cwtl
std
jno
mov
sbb
jge
js
mov
xor
pop
lock
cs
lea
cmp
outsl
dec
push
pusha
loopne
adc
dec
jmp
fidivrs
fldt
pushf
pop
lea
xchg
adc
popf
xor
inc
out
imul
xchg
out
sti
inc
sbb
dec
lods
popf
mov
cmp
sbb
adc
add
test
jl
in
add
lods
sub
pusha
adc
push
in
push
mov
and
insb
or
in
rcll
out
in
add
stc
std
imul
insl
and
dec
hlt
sbb
cmp
xorl
pop
pop
pop
popa
jg
xor
xlat
fwait
enter
stc
mov
stc
mov
ficoms
mov
movb
in
adc
lods
and
repnz
xlat
xor
fbstp
test
and
mov
stc
loopne
sbb
ss
push
in
push
cltd
imul
dec
movsb
pop
cmp
negb
pop
mov
out
jl
gs
stc
cli
idiv
jmp
out
xchg
lret
insl
imul
daa
and
sub
cs
js
nop
cltd
lcall
clc
lock
add
sub
xchg
mov
pop
jecxz
rol
push
mov
pop
sub
or
pop
push
push
aaa
inc
rcl
inc
and
inc
lret
aad
dec
mov
testb
push
js
insl
add
add
inc
sbb
or
mov
inc
test
pop
sbb
xchg
cmc
imul
jecxz
fldenv
jmp
xchg
outsb
jge
jae
add
insl
ficoml
pop
pop
outsb
or
mov
and
filds
lcall
mov
icebp
xor
xchg
pop
das
dec
mov
cli
xchg
mov
dec
add
jnp
lret
pop
push
jb
or
inc
fsubrl
xchg
movsb
pop
cmp
xchg
fsts
aaa
aad
cmp
xor
cmp
mov
enter
adc
dec
dec
jl
dec
mov
sbb
sub
add
xor
rol
jg
mov
aas
popf
hlt
ds
jnp
sbb
push
enter
test
imul
daa
inc
jb
mov
into
out
pop
aad
adc
xor
jle
fisttpl
sbb
jp
push
stos
scas
outsb
mov
mov
stos
dec
mov
leave
and
mov
jnp
mov
int3
cmp
in
pop
sbbl
mov
sbb
idivb
xchg
std
pop
or
jg
sbb
push
push
test
addb
inc
sub
fldt
mov
add
test
mov
sbb
or
insl
addr16
mov
jno
fbstp
ja
inc
aas
roll
inc
mov
jbe
mov
jle
stos
push
sbb
rolb
movups
scas
xor
xchg
jae
sub
inc
xchg
outsb
loope
sbb
or
clc
push
and
mov
mov
leave
inc
out
fnstcw
push
push
jns
adc
inc
insl
pop
shll
jmp
xchg
adc
sub
push
push
sahf
cli
call
aas
lret
pop
fcoml
jo
inc
sahf
sahf
in
test
mul
pop
inc
cmp
loope
enter
and
jmp
push
mov
jae
ds
idiv
cs
jae
pop
into
movsb
dec
xchg
in
shrl
adc
cmc
dec
notl
add
outsb
dec
jmp
jnp
cmpsb
test
into
imul
sbb
dec
add
shll
frstor
js
cmp
add
xor
adc
pop
insl
mov
or
daa
les
xor
icebp
clc
cmc
outsl
dec
cmp
push
push
pusha
or
jecxz
and
pop
ljmp
xor
sub
xchg
add
je
or
call
fldenv
in
pusha
ds
into
loopne
jg
add
pop
iret
cmc
cmp
mov
jb
or
out
push
outsl
or
ror
pop
sti
xchg
insb
lret
rcrb
add
mov
sbb
into
dec
hlt
pop
jb
cmpsb
sbb
cmc
subb
in
jmp
xchg
inc
loop
inc
xchg
es
mov
movsl
add
cmp
cld
enter
jo
sarl
pop
mov
push
cld
fdivrl
hlt
dec
into
push
les
mov
pop
fnstsw
or
out
nop
add
iret
lret
xchg
cmp
or
fs
push
mov
push
sahf
ffreep
outsl
jle
mov
xlat
repz
sub
arpl
popa
adc
mov
pop
mov
adc
test
call
gs
mov
xchg
fdivrl
pushf
jbe
in
cmp
sahf
sarb
adc
cld
sub
push
lfence
aad
adc
mov
mov
inc
inc
stos
xchg
and
push
rorb
add
cmp
mov
int3
clc
callw
mov
out
cmpsl
push
call
jg
mov
xchg
sub
fwait
jle
xchg
push
inc
test
mov
es
shr
jecxz
andb
mov
data16
mov
push
lfs
xchg
mov
jg
sbb
sub
lahf
insb
les
dec
movsb
mov
sbb
pop
sub
and
mull
sbb
scas
sbb
push
nop
popa
sub
xorb
mov
cmpsb
xchg
lock
xchg
mov
pop
push
push
lret
lods
lahf
pushf
mov
mov
lahf
xchg
pop
jle
out
xchg
mov
push
push
xor
xlat
addr16
cmp
das
rorb
push
fistps
pop
shll
scas
dec
je
lods
adc
jmp
cmp
test
lret
xorb
dec
fiaddl
mov
cs
inc
or
xchg
cli
sub
es
fsubs
cmc
jnp
mov
mov
mov
lods
out
testl
mov
adc
mov
shl
out
xchg
sti
jne
nop
cltd
mov
xchg
push
mov
jl
leave
xor
stos
push
mov
cmpsb
mov
mov
out
sahf
cmpsb
cld
sbb
sbb
cmp
dec
add
push
sub
adcb
xor
pop
mov
mov
cld
add
xlat
stos
cmpl
sbb
int
jp
or
and
push
dec
aam
push
mov
mov
mov
or
test
adc
pop
mov
cmp
call
test
jns
ud0
adc
adc
sbb
mov
xlat
scas
jae
sbb
pop
xlat
rol
mov
or
cmpsl
ret
sahf
cmp
dec
insb
int
mov
cmp
aad
ret
not
pop
mov
shrb
das
fs
or
sub
ret
xchg
dec
nop
not
xor
mov
mov
sub
dec
mov
xchg
cld
mov
adc
gs
mov
xchg
scas
xchg
psubd
dec
das
lcall
xchg
adc
sbb
lret
mov
pop
mov
stc
das
repz
pop
stos
das
aas
inc
cmp
inc
jle
push
cltd
cwtl
inc
sahf
clc
int
movsl
xchg
cwtl
jbe
in
jae
pop
xlat
test
add
mov
xlat
repnz
and
sub
mov
dec
cmp
test
fisttps
in
in
ljmp
jb
ret
mov
loopne
xchg
in
lahf
or
je
sti
fwait
mov
mov
or
sbb
sbbb
adc
mov
and
in
inc
mov
jo
dec
fcoms
mov
xchg
or
pop
aad
pop
pop
leave
dec
adc
fnsave
push
cmpsb
fnstcw
sub
out
pushf
mov
ds
mov
jae
rolb
jns
sub
cli
sbbb
pop
in
xchg
mov
dec
or
out
popa
push
push
popf
add
fcmovne
mov
push
or
clc
js
jne
adc
jb
ja
push
xchg
mov
dec
cmp
lods
mov
ljmp
in
add
mov
or
adc
dec
xor
adc
std
cmp
scas
jae
pusha
or
dec
xchg
or
shr
sub
push
add
add
adc
or
rorl
lcall
sub
xor
les
ljmp
aam
xchg
push
clc
int3
xor
xor
cmp
xchg
test
stos
arpl
rorb
xchg
xchg
pop
pop
popa
adc
inc
xor
adcl
inc
imul
fwait
pushf
insl
mov
sbb
mov
sub
out
leave
mov
xchg
xchg
hlt
testb
scas
jne
push
shl
shlb
in
mov
lea
xchg
mov
sbb
into
cltd
mov
or
add
or
je,pn
push
scas
push
fmuls
xor
rol
test
sbbb
icebp
js
pusha
out
loopne
cld
outsl
pushf
pusha
lea
aam
mov
ret
mov
jno
pushf
inc
jne
cmp
imul
loopne
pop
movsl
imul
movsb
inc
je
jnp
fadd
mov
push
stos
xchg
pop
outsl
cmp
outsl
cltd
pop
mov
in
pop
dec
cmpsl
in
cmc
xlat
dec
push
xor
mov
ficoms
lahf
add
pop
jns
sbb
xchg
cli
or
dec
push
cmp
sahf
incb
sub
push
stc
cmp
movsb
push
loop
mov
pushf
push
sbb
in
cs
sar
sub
loop
fnstenv
rcrl
or
pop
sub
pop
cmp
clc
inc
jmp
mov
mov
pop
jle
lea
lods
mov
xor
dec
add
fidivl
and
mov
lcall
lock
mov
stos
sbb
inc
and
push
lcall
pusha
mov
pop
jno
movsl
out
xchg
loop
push
jae
sbb
xlat
add
and
enter
repnz
mov
pop
test
jl
jmp
xchg
dec
push
insb
adc
int
stc
push
fs
sub
in
sbb
pop
aaa
fdivrl
and
mov
xchg
or
lahf
inc
ret
in
mov
mov
push
xor
mov
iret
sti
jne
insb
repnz
or
xlat
cmp
jmp
sbb
flds
mov
movsb
jnp
into
stos
push
or
mov
movsl
cmp
out
mov
test
in
xor
outsb
pusha
dec
mov
mov
iret
daa
sub
inc
jo
sub
cmp
daa
nop
sti
scas
outsb
aad
out
jmp
adc
push
fnstenv
out
rcrb
add
mov
std
lahf
jns
fwait
push
push
lret
iret
daa
sub
imulb
cli
xor
fistl
and
push
in
out
xor
test
enter
shrb
add
imul
ret
mov
push
lahf
pop
mov
test
sub
fcmovnbe
jecxz
ret
test
and
in
dec
test
imul
jle
wrmsr
scas
mov
inc
and
scas
orl
sbb
push
roll
addl
mov
movsb
repz
mov
mov
jnp
les
adc
and
sub
add
push
or
mov
pop
jecxz
loope
scas
or
adc
xor
test
fistpll
jge
jl
rcll
in
xchg
xor
ss
jbe
pop
js,pt
into
in
mov
push
fcompl
mov
hlt
mov
ja
lock
lock
sbbl
or
dec
scas
sbb
xchg
cmp
inc
test
jno
mov
cmp
push
addr16
and
movsb
or
outsb
scas
test
stc
test
aam
fdiv
addl
int3
lcall
popa
cwtl
lods
jnp
sahf
push
fdiv
mov
inc
popa
xor
mov
loope
pushw
mov
cmpsb
push
sbb
cltd
nop
or
inc
adc
mov
in
iret
mov
mov
push
pop
sbb
inc
xor
xor
inc
ret
ja
rcr
push
int
mov
mov
xchg
mov
aaa
inc
jbe
jno,pn
ljmp
nop
xchg
xor
aaa
push
cmp
in
cmc
pusha
aas
jnp
or
cwtl
mov
int
lods
mov
es
mov
daa
inc
xor
add
lock
mov
nop
sub
or
or
xchg
mov
and
or
xor
repz
cld
inc
mov
dec
sbbb
mov
mov
aam
loope
into
sub
out
out
xchg
loopne
dec
dec
jbe
out
jecxz
push
in
into
sbb
jb
insb
cmp
fisubrs
in
xchg
xchg
dec
lea
fisttps
ja
jb
jecxz
inc
ret
push
ja
and
pusha
pushf
cmc
cltd
addr16
and
adc
xchg
sub
cmp
cmp
cmp
es
arpl
inc
mov
andl
imul
dec
fmuls
stos
bound
cmp
dec
std
pop
push
mov
add
roll
lcall
mov
mov
cli
gs
loop
or
shll
lds
das
mov
mov
sbb
jmp
outsb
mov
cmp
popa
push
popl
ret
push
xor
out
inc
inc
lock
jbe
push
lahf
push
in
xor
cltd
dec
aaa
xor
stos
enter
jb
cli
aad
ret
aas
and
cmp
mov
mov
dec
inc
imul
testb
jae
lds
inc
jns
cmp
stos
hlt
and
jbe
mov
fwait
sub
outsl
icebp
andl
push
shlb
adc
in
xchg
imul
mov
and
dec
xchg
sub
int3
cmpl
jge
out
mov
inc
in
xchg
xor
nop
jb
and
mov
outsb
leave
cli
xor
out
daa
jbe
arpl
out
mov
cs
ds
inc
repnz
insl
shrl
lods
jne
lcall
test
int
test
xor
in
sbb
shrl
scas
and
cmpb
sub
inc
lret
jbe
aas
xlat
jp
jle
jl
cmc
scas
inc
push
inc
pop
loope
xchg
sarb
test
gs
loop
aad
pop
mov
iret
adcb
or
fsubrl
mov
sahf
cmc
sbb
mov
xchg
mov
test
dec
mov
lock
lock
sbb
out
test
stos
jbe
jmp
jecxz
jb
dec
cwtl
cmp
jecxz
jp
out
jne
sub
sbb
subb
cmp
in
or
adc
jle
mov
xor
or
mov
jno
add
sbb
ja
in
bound
hlt
xor
mov
divb
cmpsb
stos
scas
cmp
jmp
add
in
mov
data16
popf
repnz
daa
mov
cld
pop
outsl
or
in
addb
mov
add
clc
mov
pusha
cmp
rol
lahf
inc
push
movsl
xor
add
add
aam
sbb
adc
vpmacsww
js
aam
fidivrl
push
pop
fdivl
xchg
sbb
cs
push
sub
sub
sti
loopne
mov
pushf
ret
jae
insl
add
jne
mov
pushf
aaa
lret
jp
adcb
mov
sbb
mov
imul
es
and
out
je
fstps
jmp
rcrb
or
or
subl
insl
mov
insb
mov
inc
outsl
pushf
sbb
mov
and
rcr
out
jmp
das
xlat
stos
push
adcl
cmp
lds
lret
sub
je
jae
shll
je
jno
dec
repnz
xor
inc
ss
mov
push
mov
imul
in
cmp
fbld
dec
es
mov
inc
mov
ds
sahf
ret
sarl
jb
cmp
insb
or
sub
jmp
jl
inc
aas
leave
sub
xor
stos
cmpsb
loop
mov
sbb
jecxz
js
and
dec
in
daa
mov
aas
xchg
dec
movsl
jle
fwait
add
stc
cmpsb
inc
in
adc
adc
cmpb
push
jo
in
jns
sub
add
xor
leave
sbb
sbb
push
stc
outsb
xor
pop
sbb
cmp
subl
or
mov
xor
ret
or
jl
mov
in
adc
cmp
inc
shlb
rcrl
push
inc
popa
andb
mov
pop
ljmp
test
pop
push
data16
or
test
jge
xchg
mov
sub
sub
jp
cmp
lea
outsl
and
cmp
popf
fldcw
stc
mov
or
cltd
xor
sbb
ret
aas
mov
shlb
push
sti
aas
add
push
mov
insl
xor
push
push
dec
or
int
enter
cld
aad
xor
je
gs
or
inc
shrb
inc
push
or
mov
adc
sub
in
fstps
push
or
repz
adc
sbb
mov
aad
mov
aam
and
dec
fwait
gs
adc
push
idivb
das
popf
adcb
lods
push
mov
rclb
fcmovnu
mov
cmp
pop
jge
pop
nop
or
cltd
rclb
sub
dec
jno
add
pop
or
mov
mov
shll
in
cmc
lret
xor
xchg
xchg
fwait
jp
fildll
movl
jne
xchg
cli
sahf
pop
js
jge
and
out
mov
shl
imul
cld
adc
cwtl
pop
xlat
inc
dec
xchg
cli
jecxz
mov
cmp
das
sbb
xchg
xor
adc
cmpsl
nop
push
xchg
clc
stos
dec
push
fbld
stos
jb
and
stos
sbb
test
mov
mov
inc
es
leave
enter
push
dec
ret
lds
ret
lret
xor
jns
movsl
popf
ljmp
adc
loope
pop
xor
data16
jle
xchg
fsubp
sub
je
and
iret
mov
loopne
das
pop
jmp
mov
test
pop
sub
cld
or
fcoms
push
xchg
dec
jnp
adc
in
daa
cli
movsl
imul
fwait
pop
inc
inc
popf
sbb
imul
lcall
mov
cld
and
out
gs
cmp
dec
es
fs
imul
lret
in
imul
cltd
ficoms
ret
cmc
fnstenv
pushf
pop
push
lea
ss
xorb
or
xlat
mov
shlb
outsl
cmp
aas
fisttpl
inc
sub
imul
stc
lret
cltd
repnz
and
sahf
xchg
lods
fnstcw
pop
ret
fadd
imul
cld
adc
iret
bound
jl
test
sub
stos
adc
push
js
shr
stos
dec
push
jp
into
ficoms
orb
in
stos
imul
ret
fsubr
push
in
aas
out
int3
cmp
fs
mov
les
jg
mov
xor
adc
sub
cwtl
popf
lods
lds
xchg
fadds
mov
adc
mov
scas
ret
lret
imul
xchg
lcall
ss
test
pop
jbe
mov
loope
xchg
sbbl
outsl
mov
sub
repnz
in
adc
xlat
call
mov
fmulp
hlt
jb
mov
push
into
push
scas
xor
mov
xor
and
or
stos
cli
aad
insb
fcmove
jbe
cmpsb
inc
or
out
sbb
add
int3
and
in
push
outsb
imul
pusha
int3
inc
insb
push
fldenv
movsl
cltd
test
inc
xchg
mov
ds
dec
push
out
dec
scas
jle
notl
add
or
sbb
xlat
push
mov
lahf
cmp
push
aaa
sbbl
insb
pop
outsb
lcall
out
fs
inc
mov
jle
jecxz
xchg
jno
repz
xchg
jmp
inc
mov
pop
push
cmp
inc
lods
in
cmc
lock
ss
dec
mov
mov
sub
jbe
aaa
ss
in
in
xchg
push
xchg
es
out
out
dec
push
push
or
mov
insl
mov
enter
pop
push
insl
shlb
stos
popa
aad
les
and
pushf
je
rol
out
stos
movsl
icebp
loope
add
fnstsw
add
pop
repnz
xor
inc
f2xm1
xchg
pop
pop
cmp
lock
jmp
not
pop
shlb
cmp
mov
call
daa
and
popa
stos
jno
pop
cmpb
pop
mov
dec
jbe
mov
add
pop
inc
in
mov
or
dec
adc
inc
in
dec
and
sbb
aaa
sub
mov
fsubrs
sbb
out
lds
sti
pop
rolb
imul
inc
icebp
int
cmp
in
inc
aam
lock
mov
inc
sub
mov
or
stos
or
cmp
paddd
bound
lcall
mov
push
ljmp
mov
adc
divl
pop
jl
int
cmpsl
nop
jge
adc
inc
jnp
les
rclb
xchg
or
outsl
and
pop
ret
xor
and
and
nop
adc
std
in
push
call
xor
and
add
arpl
shll
testl
cmp
call
icebp
xchg
cmp
pop
fstpl
lods
hlt
scas
lock
inc
ljmp
data16
sub
pop
aam
adc
sahf
mov
pop
jnp
fistl
into
arpl
sub
in
lds
loopne
adc
cmpsl
shrl
cmp
cmp
mov
pop
pop
test
in
push
repz
repnz
inc
lods
push
adc
fdivl
int
xor
inc
imul
addr16
fcmove
cmpb
sub
adc
lcall
or
ss
add
mov
ljmp
adc
ret
or
test
add
cmc
aas
in
push
das
mov
fdivrs
or
bound
pop
movsb
ss
or
mov
jno
jnp
xchg
out
inc
insl
adc
out
std
fnstenv
push
inc
fs
scas
mov
jnp
pop
imul
ret
pushf
jno
push
pop
jne
mov
aaa
xchg
sub
ret
mov
pop
add
push
push
add
addl
clc
lret
fistpl
repnz
stos
add
ja
sbb
lock
xchg
dec
fistl
outsb
out
shrl
in
adcb
xchg
mov
pop
fisubrl
testb
fsubs
mov
mov
aad
lea
rclb
pop
mov
cmp
dec
rcrb
test
mov
mov
push
jp
aam
lahf
loop
sbb
jbe
dec
push
sub
sbb
jmp
das
xor
push
lret
mov
popa
lea
mov
xchg
jg
pop
call
ss
cltd
inc
sub
seto
call
enter
pop
mov
stos
hlt
test
call
popf
and
lods
addr16
push
cwtl
test
jnp
dec
lahf
xchg
xlat
inc
cmpsl
cli
adc
pop
inc
bound
ja
ret
dec
xor
iret
fistl
in
mov
and
pop
in
test
xchg
je
out
insb
sbb
icebp
mov
ret
jo
int3
mov
aad
and
sbb
adc
lods
and
xor
inc
mov
mov
ret
cltd
leave
push
inc
sub
in
cmp
xchg
js
in
xor
pop
cmp
gs
dec
and
push
jne
push
mov
ret
sub
ds
pop
rcrb
testl
mov
in
jns
mov
enter
pop
loop
test
xchg
adc
cmc
je
mov
xlat
jne
cmp
mov
jmp
sub
dec
pop
push
adc
push
xchg
sarb
sbb
sbbb
sbb
repz
mov
pop
xor
movsb
cs
bound
out
rorb
mov
xchg
jbe
int
push
add
jns
and
pop
dec
hlt
mov
mov
push
add
cmp
pop
and
in
pop
roll
mov
dec
and
mov
lods
push
popa
les
adc
or
mov
mov
bound
sub
pushf
pusha
add
pushf
jmp
outsb
adc
das
cltd
cmp
out
lea
sub
inc
jbe
rclb
adc
xchg
cmp
popf
stos
cltd
repz
mov
lds
sbb
mov
ret
stc
jo
cwtl
cmpsl
add
adc
add
inc
fdivrl
jecxz
mov
cld
mov
outsl
int3
fidivrs
shlb
iret
ret
fistl
xchg
movl
mov
mov
imul
lds
mov
leave
clc
bound
and
pop
xor
daa
daa
mov
out
hlt
jle
mov
cmc
fiadds
push
xchg
mov
aas
andl
fidivs
sbb
gs
popa
leave
add
addr16
aam
fwait
xchg
cmp
sub
xor
call
add
sahf
je
pop
ja
and
pop
movsb
or
and
push
adcb
mov
fidivrs
in
dec
pop
imul
xchg
test
std
push
mov
push
aam
jmp
pop
add
push
out
shll
roll
jnp
push
in
dec
mov
es
jb
fsts
lret
fs
fs
addr16
mov
imul
inc
stos
fsubr
dec
jns
call
icebp
mov
push
inc
mov
out
jnp
popf
out
cmp
push
inc
jb
mov
sub
push
xor
push
call
push
adc
xchg
int3
or
fnstcw
and
in
mov
sbb
cltd
scas
xor
fdivrl
addl
mov
add
pop
sub
bound
iret
jnp
test
pop
rcrb
cmpsl
and
inc
imul
hlt
adc
jo
pop
cld
sub
loope
hlt
xchg
hlt
mov
mov
mov
jb
mov
dec
sbb
dec
data16
aaa
jl
bound
cmp
jns
add
loope
sti
mov
repnz
jns
fistpl
imulb
call
xor
cmp
sbb
mov
in
push
jg
lock
sub
or
push
dec
jmp
jns
fs
test
jle
inc
addr16
sbb
push
std
xlat
cmp
xchg
jns
fcmovu
mov
mov
pop
loop
and
in
fmul
iret
rorl
mov
div
out
jge
pop
mov
insl
gs
cmp
aad
inc
xchg
dec
push
lock
lea
adc
mov
hlt
rol
std
jne
jnp
or
lock
cmpsl
cmp
loope
dec
das
sbb
inc
jns
mov
cmpsl
pop
in
aad
test
in
or
jno
inc
cmpsb
in
dec
shl
mov
cmpb
pushl
ret
inc
aam
fadds
add
imul
sub
xchg
mov
mov
or
les
pop
xchg
lea
adc
pop
xor
bound
jg
les
adc
xchg
push
sub
repnz
mov
out
loop
xchg
push
xchg
imul
jp
or
add
gs
mov
out
fistpl
jl
fcomps
xor
add
daa
js
in
mov
and
rcrb
adc
jae
les
cmp
sbb
cmp
jbe
outsl
mov
mov
cmp
push
mov
loopne
pop
les
pop
jp
mov
mov
jg
jmp
out
scas
ret
or
lcall
insb
rorl
jmp
add
mov
inc
jge
push
ja
das
mov
gs
xchg
mov
test
loop
xchg
int3
test
adc
push
pop
mov
inc
cli
sahf
pop
adc
pushl
sarl
mov
sbb
ss
test
int3
std
sbb
aas
xor
aam
lea
fcompl
sti
fldl
and
rolb
popf
out
cmp
sahf
faddl
scas
dec
push
das
sbb
or
int3
jge
push
es
push
sub
adc
test
insb
and
push
scas
fwait
jle
inc
push
dec
jg
addb
or
arpl
aam
add
aaa
jo
pop
or
xchg
imul
sti
icebp
sarb
mov
in
and
mov
enter
ret
clc
subb
push
jle
jl
or
xchg
into
inc
data16
mov
add
movsl
je
jbe
xchg
sbb
xor
test
mov
popf
pop
dec
sub
lods
mov
sbb
div
xchg
repz
jae
nop
mov
jp
aas
push
inc
inc
dec
xor
shr
pop
int
shrl
mov
sub
jge
mov
je
mov
ljmp
test
imull
and
mov
or
in
mov
int
inc
movsl
mov
or
mov
ja
mov
mov
lods
xlat
and
in
inc
mulb
lds
mov
testb
mov
mov
shll
lods
jl
dec
popf
loopne
ljmp
mov
push
test
movsb
pop
aad
aam
or
dec
push
lds
mov
fsubl
cmp
mov
push
daa
dec
enter
xor
jbe
mov
pop
ror
jb
add
adc
inc
sub
jns
mov
push
jns
mov
mov
ja
xor
je
insb
pop
aas
xor
jecxz
imul
cmpsb
imul
pop
sub
ret
add
sahf
jmp
push
cmp
pushf
hlt
ret
pop
ljmpw
xchg
dec
shrb
in
inc
test
sub
xchg
and
sbb
xchg
or
lods
dec
adc
pop
scas
inc
jb
pop
or
pop
fs
mov
mov
dec
jno
test
inc
sbb
sub
push
ss
pop
lock
in
pop
push
mov
insl
cltd
pop
pop
lret
mov
sub
dec
push
and
mov
into
jae
jecxz
lret
jno
xor
ds
aas
push
mov
repz
loop
pop
xor
test
push
mov
inc
push
xlat
loopne
lret
push
iret
or
stos
ljmp
pushl
jmp
or
pop
gs
and
mov
xor
pop
sbb
sub
hlt
jb
pop
mov
ds
jbe
fs
add
push
rorl
ds
js
scas
arpl
pop
lahf
cli
inc
rolb
xchg
jo
push
sbb
jge
repnz
in
push
and
dec
xor
and
loope
das
lods
xchg
jae
lds
push
cmpsl
icebp
push
pcmpgtw
lds
lods
cld
mov
shlb
pop
popa
or
incb
or
rorl
or
cwtl
cmp
pop
cmp
sub
mov
jo
inc
aaa
testb
xchg
or
sbbl
popa
ljmp
or
adc
fimuls
daa
fcmovbe
cmpsb
mov
add
ja
mov
in
aaa
pop
push
jnp
addl
jo
jno
int3
mov
test
stos
sbb
add
mov
mov
ja
cwtl
xchg
add
ret
adc
ss
loop
jl
push
inc
cli
into
xor
pop
mov
idivb
jbe
jecxz
mov
mov
mov
cltd
les
repz
mov
mov
shl
or
std
insb
push
ss
hlt
das
ret
jnp
pusha
outsb
cmp
hlt
push
fsubrs
sbb
enter
jg
popf
enter
xchg
adc
jge
pop
mov
pusha
lods
fs
inc
repnz
pop
fadds
push
jo
sbb
adc
mov
mov
mov
xchg
mov
inc
fistl
lods
cmp
mov
adc
adc
push
int3
pop
lret
test
mov
icebp
ja
xchg
adc
cmpsl
and
add
xor
out
mov
out
jnp
adc
or
stos
aaa
movsl
loope
or
xor
dec
pop
ljmp
imul
add
not
fldenv
mov
pop
lcall
push
dec
imul
scas
mov
mov
int
cs
shlb
sbb
mov
xor
pop
push
or
dec
xor
addr16
sub
ljmp
xchg
xchg
and
scas
aas
dec
xchg
mov
sbb
pop
push
mov
sbb
loope
cld
inc
test
movsl
test
mov
mov
or
mov
pop
pop
cmc
xor
dec
in
fisubl
jge
xorb
push
loop
or
sub
jnp,pt
push
sub
ret
adc
clc
sub
jmp
mov
aaa
mov
je
clc
ffree
mov
adc
sub
rorb
xor
stos
cs
or
add
pusha
test
mov
cltd
pop
cmpb
cli
sub
mov
push
jl
das
adc
lods
fwait
xor
inc
xorl
pop
dec
fcoml
pop
cmc
mov
mov
cld
jp
jg
mov
cmp
add
je
stos
push
cmp
in
cmp
mul
pop
mov
jo
leave
pushf
in
ret
mov
add
add
cmp
lea
jae
bound
add
xchg
cmc
xchg
fstpt
mov
adc
pop
test
shr
sub
adc
sarb
push
mov
inc
add
and
pop
mov
xchg
mov
pushl
jp
add
pop
add
jge,pn
decl
ret
mov
jnp
cmp
pop
lds
push
jno
mov
adc
mov
xor
fbld
stc
pop
loopne
mov
mov
mov
sub
mov
inc
rclb
xchg
aam
pop
sbb
mov
pop
les
cmpsl
push
cmp
or
lret
mov
mov
cmp
pop
insb
idivl
mul
mov
mov
popf
mov
clc
and
int
lcall
lcall
fs
mov
xchg
pop
popf
loope
sub
dec
sub
inc
mov
xor
cmp
aam
addr16
mov
pop
dec
out
mov
xchg
test
jl
stos
mov
testl
shl
les
xor
test
push
aam
pop
js
pop
push
std
testb
imul
lea
mov
loopne
jmp
mov
loope
inc
cmc
leave
in
push
test
jp
jmp
stos
js
inc
lcall
sbb
loop
adc
xlat
mov
xor
adc
iret
sub
fldl
or
ret
inc
dec
or
scas
cmpb
ljmp
cmpsl
sarb
jle
push
popf
ss
and
cmp
dec
xchg
sahf
cmp
rcll
adcb
hlt
decl
mov
in
cs
pushf
or
add
arpl
popf
xlat
or
xor
lret
or
fisttpll
pop
inc
mov
push
pop
jle
jo
stos
and
notl
mov
outsb
call
fcom
xor
sub
sub
js
orb
sub
sbb
adc
insb
inc
lret
out
rcll
les
push
mov
clc
in
daa
loop
dec
adc
cmp
cld
loop
mov
cmc
jo
aam
insb
and
adc
sub
aaa
cmp
cmp
sub
cltd
fiaddl
cmp
scas
mov
pushf
xchg
stc
rclb
mov
xchg
movsl
cli
sar
popa
dec
jnp
call
icebp
lea
movsl
or
push
push
sbb
and
xor
negb
jge
lods
fisttps
bound
mov
jg
popa
sub
sbb
cld
or
stos
adc
out
mov
jo
scas
and
adc
das
mov
mov
sub
shll
xchg
mov
fld
xor
add
sub
or
lahf
push
lea
ja
sbb
cli
out
inc
aam
test
fidivl
pop
sti
fisubrl
ljmp
fbld
loope
pushf
push
add
jno
out
popa
jle
inc
outsl
fyl2x
fwait
ljmp
rclb
cwtl
pushf
add
test
pop
rcrl
mov
jecxz
dec
gs
es
lret
stos
add
pop
sub
push
xchg
pop
mov
dec
mov
sub
leave
addr16
dec
inc
pop
jbe
orl
push
pusha
dec
xlat
push
xlat
pop
test
xchg
xchg
movsb
mov
cmpsl
stos
sbb
jno
loope
scas
cmc
push
push
sub
push
les
out
xor
xchg
cmc
sbb
mov
daa
pop
fwait
ret
lahf
out
stos
xchg
stos
jmp
and
nop
arpl
cmp
xchg
fs
dec
sbb
mov
pop
std
push
xchg
rcrl
pop
sbb
cmp
sub
jno
mov
push
cmp
movsb
arpl
in
mov
mov
pop
rclb
push
js
clc
jb
or
xchg
xchg
push
push
inc
xor
rclb
cmp
les
pop
adc
pop
leave
dec
or
insb
sti
mov
cltd
nop
jo
ja
popa
adc
popa
pop
aad
xchg
pop
scas
in
cmpps
inc
fs
sub
cmpsb
xor
and
jle
arpl
lods
jbe
sbb
icebp
imul
pushf
mov
push
xor
cwtl
jecxz
xchg
mov
sbb
dec
push
adc
ret
mov
movsl
cmp
jg
call
mov
aas
es
add
adc
pusha
aas
out
add
cs
adc
std
pop
adc
dec
nop
mov
or
jmp
das
popf
cld
rclb
or
xorl
jae
push
or
pop
out
cs
push
jne
pop
sbb
mov
stc
jae
out
xor
jge
rorb
lcall
icebp
cmp
inc
sbb
and
mov
inc
addb
jo
fsubrs
mov
enter
jmp
add
lods
sub
ja
shll
adc
mov
test
dec
mov
movsb
add
cmpl
cs
jecxz
fnstenv
mov
aad
adc
cmp
movsb
out
xchg
jge
jmp
lods
insb
inc
jmp
mov
pop
and
mov
insb
inc
loop
cmp
and
neg
ljmp
fs
dec
loopne
xchg
icebp
imul
jl
repnz
inc
je
mov
loop,pn
sti
test
aaa
mov
mov
in
andb
cmc
xchg
call
mov
jae
pop
mov
mov
adc
inc
sahf
jb
xchg
inc
dec
fadds
and
sarb
dec
inc
sub
loop
add
adc
stos
lods
outsl
dec
lods
loopne
test
lret
fcmovnu
sub
jle
mov
shll
test
cmp
gs
in
mov
insb
pusha
js
je
jne
inc
mov
je
xor
faddl
pop
or
xor
add
or
mov
xchg
xor
aam
cld
mov
hlt
adc
push
fwait
jp
dec
pop
or
ret
pusha
or
rcrb
push
je
mov
cmp
mov
xchg
ja
test
aam
jmp
insb
adc
cltd
or
ss
sbb
push
ret
scas
dec
daa
clc
fcoms
dec
aas
pop
dec
and
xchg
add
mov
sub
testb
js
mov
les
xchg
cltd
loope
cmpsb
testb
insl
sbbl
pop
fistps
dec
push
jge
in
add
and
pusha
sub
lods
mov
enter
pop
push
mov
cli
fwait
add
cmp
bound
mov
pop
pop
aaa
nop
add
sub
and
movl
and
sub
stos
cmpsb
aaa
outsb
mov
jge
outsb
outsb
push
sub
cmp
lret
sbb
lock
push
out
nop
fstl
or
iret
dec
jle
mov
lret
or
jmp
into
mov
mov
xchg
mov
enter
arpl
mov
cs
and
pop
pop
mov
cltd
xlat
out
paddusb
nop
fstp
aad
bound
and
mov
sti
add
dec
xchg
fcomi
xorb
jl
sub
hlt
movsb
popa
jmp
add
or
or
mov
andl
jbe
jmp
pop
xchg
pop
mov
cmp
dec
xor
out
rcrb
mov
mov
aam
jae
mov
fcomps
mov
pop
out
enter
mov
push
add
out
shlb
push
ret
lcall
mov
and
imul
and
fcoml
sbb
pop
push
push
jmp
xchg
xor
jp
repz
call
adc
bound
fnstenv
mov
lcall
fsubr
mov
jno
mov
pop
pop
mov
sbb
push
cmpsb
loope
stos
cmp
dec
and
mov
rcr
jmp
lock
mov
mov
cld
jp
shrb
inc
sahf
jo
jae
hlt
pop
cmp
mov
adc
andb
xchg
icebp
lock
orb
ficoms
mov
or
das
arpl
out
dec
pop
pushf
mov
push
rcrb
dec
in
sbb
les
xchg
cmp
outsb
movsl
adc
mov
mov
cmp
arpl
mov
gs
add
push
mov
sarl
xchg
xor
xchg
mov
cmp
mov
push
mov
fsubrl
pushf
movsl
mov
push
adc
mov
sahf
push
pop
and
and
jne
std
push
sbb
mov
flds
data16
or
inc
sbbl
mov
add
mov
loope
pushf
xor
mov
std
adc
in
stos
inc
aaa
cmp
cmp
dec
push
push
jno
mov
ja
sahf
rclb
and
aaa
daa
pop
push
mov
cmp
pop
arpl
xchg
dec
mov
cmp
cmp
sbb
fcoml
cmp
aad
mov
adc
je
int
lods
push
filds
hlt
pop
push
out
andb
aaa
mov
ja
cmpsl
inc
or
inc
xor
cmp
pop
je
push
pop
push
ja
xchg
mov
dec
enter
nop
imul
repnz
movsl
pop
jbe
daa
ds
lods
xor
hlt
cltd
xchg
roll
jbe
lock
stos
popa
add
inc
scas
arpl
insb
outsb
stos
cmp
into
dec
dec
adc
ret
loopne
mov
hlt
mov
cmp
sahf
divb
scas
and
jo
and
test
sbb
and
adc
jnp
push
jmp
adc
adc
xor
loop
jno
push
and
js
orl
mov
int3
xchg
add
mov
inc
mov
fs
mov
mov
popa
dec
ret
test
jbe
push
outsb
push
fcmovnb
loop
fcoml
int3
sbbl
sub
fldt
and
imul
xchg
lcall
push
dec
shll
mov
mov
addr16
lock
sbb
inc
sahf
mov
cmp
outsl
mov
mov
mov
mov
js
cld
and
ror
add
nop
cmp
or
sub
inc
aad
adc
sub
imull
dec
test
push
and
cs
scas
push
pop
cmp
pop
sbb
arpl
push
fs
out
cmpb
lock
mov
in
out
xchg
xor
pop
scas
out
cmp
xor
sbb
in
and
mov
adc
xor
mov
mov
cmp
xchg
mov
add
lret
jge
xchg
and
sbb
mov
in
dec
fisubrl
in
jae
xchg
adc
jle
pop
jo
sbb
repz
pop
outsb
sarb
lods
call
push
repz
adc
xor
scas
daa
dec
push
cmp
xchg
dec
outsl
es
scas
xlat
mov
push
mov
dec
jmp
and
mov
sbb
jecxz
enter
inc
pop
test
aas
pop
mov
lahf
into
iret
je
mov
mov
pop
dec
xchg
stos
cmp
idivb
jno
int3
mov
push
push
sbb
in
dec
aas
test
pop
inc
rcll
outsl
xchg
mov
scas
sbb
lret
mov
ret
pop
mov
mov
inc
mov
outsl
dec
mov
cmp
pop
aaa
loope
add
insl
loop
loope
push
xor
nop
cmp
and
adc
stos
out
mov
xchg
call
test
push
xorb
pop
xchg
movsb
fwait
aad
stc
xor
mov
pop
jae
push
push
pop
test
mov
xchg
push
mov
into
xchg
nop
jno
sbb
ret
mov
jno
jge
sbb
test
nop
hlt
fimull
add
inc
cs
jle
out
pusha
rcr
push
fdivl
cmc
shl
scas
test
mov
inc
cmp
and
pop
sub
insb
fwait
repz
test
mov
scas
pop
dec
loope
mov
mov
into
aaa
fdivl
mull
ret
repz
data16
jbe
sbb
movsb
fisttpll
add
dec
cs
aas
push
mov
push
sbb
in
mov
sbb
ds
pop
xlat
push
sahf
pop
cmp
xor
stos
lret
jb
test
outsl
mov
mov
clc
pop
xchg
jg
lret
jno
js
cmp
cwtl
dec
call
lea
jno
pop
stc
sahf
arpl
mov
pcmpgtb
xlat
cwtl
inc
inc
mov
dec
push
cmp
mov
dec
imul
inc
mov
popa
rcl
dec
test
pop
push
push
adc
or
scas
aaa
lds
loope
es
test
ljmp
mov
push
cmp
xor
jge
icebp
mov
push
and
ds
cmp
jmp
mov
sub
mov
stos
movsl
divb
out
cli
or
rcr
push
addr16
cmp
arpl
shlb
repz
outsl
adc
push
les
mov
jp
adc
test
add
or
jno
mov
adc
bound
fnsave
scas
test
add
jae
scas
outsl
lock
inc
out
les
dec
mov
ljmp
jmp
fucomp
add
mov
lods
add
sarb
rorl
fsubrs
adc
jb
leave
stos
or
xor
xchg
add
call
mov
jle
lds
clc
sub
push
cltd
sub
sub
mov
aam
sub
daa
jp
data16
mov
push
mov
dec
std
sub
ficompl
mov
mov
jae
mov
push
rorl
mov
cmpsl
or
dec
rolb
add
mov
rep
add
mov
jb
sbb
pop
sub
mov
ds
mov
orb
add
mov
push
movsb
ret
or
repz
shrb
in
cmc
mov
pop
pop
fstpl
mov
enter
pop
push
dec
sub
test
mov
push
and
loop
insl
fwait
loop
cmp
mulb
xor
clc
mov
repz
cmp
add
lcall
and
mov
jmp
mov
cmpsl
pop
lock
popf
add
jae
pop
jno
sbb
xor
jae
push
mov
mov
mov
rcll
inc
mov
pop
push
in
xchg
notb
pop
add
xchg
jns
sbb
daa
shr
ja
jb
lock
dec
sub
pop
dec
or
std
inc
sub
loope
cmp
or
mov
loope
cmpsb
pop
movl
fnsave
mov
mov
cltd
mov
jecxz
loope
call
sub
ficoml
dec
addb
movsb
imul
roll
inc
sub
xchg
inc
sbb
mov
nop
xchg
lods
jle
mov
and
int
push
pop
pushf
mov
bound
xor
imul
jb
daa
jns
scas
pop
dec
sub
sub
daa
jg
mov
fisubrs
jne
lahf
fidivrs
xor
mov
dec
int3
adc
adc
movsl
insb
sbb
in
stc
jo
dec
or
inc
mov
xchg
mov
mov
mov
stc
xchg
cmpsl
movsl
adc
xchg
adc
shrl
push
or
loop
add
mov
mov
push
aam
xchg
push
and
das
sti
push
mov
outsl
add
addb
fs
aas
xor
and
addr16
gs
daa
lcall
or
pop
out
sbb
fwait
dec
mull
push
add
ret
inc
cmpsl
pushw
imul
repnz
cmc
popa
insl
jno
sti
loop
adc
mov
mov
lods
dec
jge
in
xchg
test
xor
insb
xor
push
sbb
mov
jecxz
push
pop
ljmp
dec
loope
xor
ret
mov
sbb
or
push
dec
sbb
int
push
cmp
out
int3
xor
aaa
mov
inc
sbb
push
in
pop
sub
or
repz
fs
dec
add
arpl
mov
or
dec
test
and
int3
ret
in
push
adc
or
js
imul
mov
ret
test
cmpb
shrb
xor
pop
push
dec
mov
jmp
jp
fldt
dec
cmp
mov
out
cld
cs
int3
cmp
dec
rcr
imul
cmc
dec
into
sub
mov
sub
sbb
cwtl
movb
xchg
push
fiaddl
roll
add
icebp
mov
stc
jo
sbb
test
dec
fildl
loopne
adc
xlat
aaa
popf
rclb
xlat
push
ss
lds
in
pusha
pop
loope
stos
lods
sub
add
cld
push
cmpsl
ds
inc
pop
adc
je
xchg
cs
mov
roll
fiadds
ja
mov
jmp
or
mov
outsb
repnz
cmpb
push
xchg
mov
cmc
leave
jmp
scas
sbb
mov
mov
mov
or
and
and
incl
imul
mov
out
sub
or
or
dec
cmc
inc
js
mov
pop
pop
arpl
test
mov
pop
daa
adc
push
pop
das
insb
xor
test
xchg
xchg
mov
push
int
or
adc
in
xor
daa
xor
shll
pop
fucomp
out
decb
aam
outsl
cltd
sti
jnp
aam
popf
xchg
cmp
nop
ds
sub
lahf
cltd
ss
loop
enter
mov
push
fmuls
cli
inc
mov
pop
iret
fldl
dec
jne
and
xor
jnp
sbb
loopne
fcomp
push
mov
loope
push
dec
jl
jg
in
mov
add
sbb
mov
out
pop
ljmp
or
fucomip
out
xchg
mov
and
pop
add
push
lock
cltd
cmpsl
mov
xor
cmp
pcmpgtw
shlb
ja
pop
ret
fsubp
sahf
in
xchg
ret
jbe
pop
popf
xor
loope
push
sub
jmp
in
add
xchg
or
mov
mov
cwtl
ficompl
jne
adc
ja
scas
mov
add
inc
push
rol
inc
clc
push
push
sbb
mov
sti
cmpsb
inc
jo
or
mov
xchg
inc
cmp
sbb
gs
and
outsb
mov
sbb
call
jl
cs
cmp
mov
aas
mov
addr16
icebp
mov
lcall
int
push
lea
adc
sub
adc
in
imul
adc
jl
mov
sarb
sahf
xlat
pusha
push
fsubrs
vorps
test
jecxz
xor
aad
fsub
push
adc
xchg
dec
popf
lds
daa
jns
imul
pushf
pop
rcrl
push
jbe
mov
imul
and
orb
es
aad
cmpsb
cmp
xchg
sahf
sub
daa
xchg
mov
pop
bound
add
test
aas
adc
out
hlt
fidivrl
test
mov
outsb
ljmp
test
std
js
sbb
mov
call
sub
enter
push
sub
popa
insb
inc
jle
loope
push
or
pop
mov
mov
pop
dec
loope,pn
fistl
jp
add
out
adc
mov
pop
mov
arpl
int3
cld
lea
mov
mov
sub
movsl
in
lahf
fbld
mov
jecxz
lret
loope
sub
cld
xchg
ret
xchg
nop
cli
mov
pop
loop
mov
ja
test
mov
add
push
repz
xor
mov
push
fdivl
fmull
out
pop
mov
clc
cmpsl
sub
rcrl
and
std
push
jne
xor
aas
cwtl
cmpsb
jge
stos
adc
sarl
jl
jnp
mov
push
inc
fcoml
testb
jns
push
pop
pushf
and
push
out
mov
jb
push
adc
lret
test
outsl
fwait
cmp
inc
adc
lret
xor
adc
cmp
dec
inc
adc
aas
aam
xchg
enter
jo
add
mov
inc
push
sbb
in
add
cltd
ljmp
jmp
push
jge
loop
daa
adc
fadds
lods
jmp
push
cli
fwait
sbb
mov
jp
jo
mov
lahf
mov
daa
popf
pop
sbb
jge
sub
mov
mov
cmpsb
mov
xor
les
mov
cmpl
sbb
nop
imul
cmpsl
sbb
rcll
test
pop
xor
popl
sub
mov
jmp
repz
mov
cmp
jbe
nop
int3
or
das
xor
push
pop
dec
push
adc
jg
cli
xchg
pushl
call
ror
int3
sub
sub
rol
jge
mov
dec
cmpsb
and
rcl
jmp
data16
push
addr16
add
std
pushw
lahf
inc
lods
sbb
xchg
test
inc
push
dec
push
movsl
cwtl
cli
punpcklwd
push
push
push
aaa
adc
nop
popa
push
cld
shll
rcrb
int
addr16
dec
insl
ss
push
lds
iret
sub
mov
in
jno
stc
jecxz
mov
jne
fwait
ljmp
aaa
mov
push
in
cmp
cmp
fmull
mov
out
mov
sub
mov
fwait
and
cltd
clc
aas
loop
push
push
adc
mov
fdivs
fcoms
popa
adc
into
faddl
mov
add
mov
inc
and
or
test
sbb
lahf
loop
add
xchg
inc
mov
mov
bnd
jl
xchg
and
movsl
aas
mov
outsl
lahf
cmp
sub
xor
and
mov
cmpsb
movsl
cltd
push
jne
xor
push
mov
aas
mov
rcrb
adc
sub
out
mov
outsl
hlt
adc
and
gs
cmpsl
add
mov
adc
mov
into
pop
mov
sbb
lcall
cmp
in
dec
xor
in
bound
cwtl
lods
cmp
xor
int3
test
push
out
add
outsl
and
icebp
loop
shll
mov
mov
cmc
bound
movsl
insl
loop
push
frstor
into
insb
adc
lods
xor
rcll
test
leave
cwtl
xchg
ljmp
push
mov
out
push
jmp
mov
test
inc
movsl
mov
xor
aad
mov
mov
dec
mov
loop
lock
test
push
and
push
in
stc
cmp
dec
insb
or
push
out
daa
fistl
push
movl
jb
mov
insl
repnz
add
imul
lods
out
int
mov
mov
jns
sub
mov
call
imul
sbbl
enter
xchg
pop
pushf
mov
loop
mov
mov
sub
mov
icebp
insb
ret
inc
dec
push
mov
cli
das
movsb
inc
cmp
pop
or
and
sub
jmp
lret
mov
iret
push
push
insl
lock
cwtl
sub
dec
jmp
outsb
movsb
xchg
call
cmpsl
pop
ret
shll
pop
fmul
aad
sqrtps
adc
fistl
aam
xchg
push
stos
femms
cmpl
mov
xor
sbb
mov
js
test
fldenv
and
xchg
mov
add
add
add
ret
cmc
push
inc
mov
adc
movsb
push
test
push
push
or
icebp
rclb
dec
xchg
mov
lcall
cmc
inc
ss
mov
andl
xor
sbb
jne
jae
jo
pop
adc
js
xor
mov
std
call
ds
xor
js
jg
pop
mov
pop
mov
out
xlat
pop
cli
mov
jl
sbb
xlat
sbb
test
mov
cmp
in
push
out
push
xchg
bound
mov
sbb
push
and
out
xchg
sub
inc
mov
pop
pop
movsl
xchg
mov
sarl
jns
adc
sbb
pop
shlb
push
jecxz
inc
out
pusha
xchg
adc
jl
ficoml
mov
mov
sbb
in
imul
add
adc
xchg
cmpsl
pop
sbbb
add
adc
cmc
bswap
cwtl
dec
fcomp
addr16
out
xchg
or
insb
cs
les
mov
lods
push
pop
nop
sub
adc
sub
clc
outsl
outsb
icebp
loop
dec
push
adc
dec
lcall
test
lea
dec
in
sub
icebp
mov
mov
arpl
inc
adc
in
xchg
xlat
fidivs
adc
push
sbb
mov
jp
movsb
clc
je
test
or
sub
outsb
pop
fsubl
pop
push
xchg
scas
rorb
push
add
outsl
cmpsl
shlb
insl
xchg
and
add
cmpsb
insb
sbb
lahf
je
inc
aas
push
jp
cmp
dec
inc
pop
mov
jb
xchg
imul
xor
clc
roll
sub
mov
mov
inc
rolb
in
mov
mov
out
jle
scas
xor
pop
mov
stos
shr
into
sub
imul
add
mov
mov
lods
pop
lret
je
fstpt
dec
mov
jae
ja
test
clc
pop
mov
stos
dec
inc
pop
out
sbb
not
sub
stos
loop
addr16
addl
loope
stos
add
mov
inc
lcall
push
mov
enter
cli
xchg
cmp
mov
out
in
sbb
cmpl
fnstcw
inc
or
sarb
aas
scas
and
jl
or
push
ljmp
orl
jbe
inc
mov
cmp
pop
mov
inc
cli
lods
adc
jno
sbb
mov
xchg
mov
cwtl
xor
or
repnz
cmp
outsb
nop
xor
mov
lret
mov
fsubrl
mov
je
cmp
nop
mov
repnz
sub
fcompl
pop
xor
sbb
xchg
cmc
jecxz
fdivs
test
mov
cmp
cmpsl
btr
lock
jg
pop
sub
jnp
jp
adc
dec
cmp
enter
insl
lcall
roll
cmp
sbb
insl
dec
push
jbe
fcmovnb
mov
rorl
add
rolb
out
and
and
int3
pop
cmpsl
xor
dec
enter
in
push
mov
ffreep
cmp
cmp
fwait
pop
bound
fisttpl
sbb
and
sbb
sbb
push
aas
outsl
lea
rclb
ss
adc
sub
bound
lock
sqrtps
mov
and
dec
cmp
out
jmp
xchg
outsl
dec
cmp
adc
cmpsl
insb
fneni(8087
test
xchg
push
sti
popa
push
jp
mov
data16
es
xchg
sub
pop
sbb
or
iret
mov
pop
fwait
pusha
add
hlt
hlt
insb
repz
and
xchg
fcmovb
mov
xchg
adc
mov
roll
pop
mov
cmp
aaa
test
pusha
adc
das
push
test
lret
jecxz
inc
cmpsl
mov
inc
lcall
xor
adc
jmp
xor
or
push
pop
mov
mov
xchg
out
xorb
scas
sti
jp
cltd
in
hlt
psubw
xor
rorb
out
xchg
xchg
frstor
mov
mov
out
xchg
xchg
push
add
lock
pusha
fadds
inc
cmp
dec
xor
out
orb
scas
out
movsb
mov
lods
xor
mov
dec
push
mov
jno
mov
xor
add
cmp
daa
mov
test
loope
cmc
pushf
rcrb
mov
iret
sbb
inc
sbb
jecxz
cmpsl
adc
push
xor
loopne
mov
cmp
pop
pop
iret
iret
or
sbb
sbb
jecxz
lahf
jmp
int
lahf
in
inc
push
popf
mulb
iret
neg
xadd
add
mov
dec
hlt
push
cmp
mov
xor
jb
or
push
pop
or
icebp
xchg
push
inc
scas
jecxz
arpl
or
stos
call
std
call
iret
mov
adc
adc
pop
or
jle
sbb
rorl
inc
clc
adc
sti
pusha
sub
negb
jle
mov
cld
mov
pop
popf
and
cmp
mov
jle
rol
xor
mov
push
out
ret
jl
xor
popa
das
xor
jg
cld
iret
int
or
mov
mov
out
into
ret
mov
adc
mov
jno
imul
cwtl
stc
in
pop
xor
add
pop
daa
mov
cli
movsb
aas
in
dec
fs
pop
jl
pop
cmp
jns
sbb
dec
mov
jmp
mov
dec
sub
or
or
fbstp
fstps
imul
jae
stc
fcomip
shll
pop
jmp
push
inc
fisubs
or
je
add
scas
test
loope
mov
sbb
xchg
sbb
mov
dec
cmp
mov
inc
dec
fmul
mov
add
sbb
mov
sbb
pusha
fs
jge
adc
xor
nop
cvtps2pi
out
mov
cmc
loop
roll
fbstp
inc
outsb
cltd
cmp
mov
orl
addr16
jl
popf
test
loope
rcll
jne
ljmp
dec
mov
and
push
dec
rcrl
jecxz
sbb
or
dec
dec
mov
and
xor
inc
mov
repnz
mov
mov
or
movsl
sarl
mov
out
pop
lods
or
or
adc
xchg
mov
movsl
addb
push
sbb
outsl
dec
out
pop
cld
add
xchg
mov
leave
outsb
mov
mov
mov
ret
dec
stc
xchg
test
cmp
xlat
jns
dec
outsl
sarb
aaa
aam
push
ret
inc
mov
push
int
insb
in
popa
mov
shll
pop
pushf
ltr
sbb
loop
ja
pop
dec
in
lahf
cmpb
gs
insb
std
stc
test
mov
jmp
popa
nop
pop
into
nop
inc
in
pusha
ss
cvtpi2ps
push
mov
adcl
in
jl
inc
test
cmc
aas
sub
outsl
stc
jmp
inc
cpuid
out
jmp
fdivrl
das
call
ret
imul
fcmovne
add
mov
jl
shl
jmp
scas
xlat
fsubrl
loopne
sbb
cld
dec
mov
incb
lods
jne
stos
sub
or
jno
repnz
pop
outsl
jbe
inc
int3
test
out
push
out
hlt
fcmovnu
mov
dec
cltd
aad
icebp
mov
jno
das
or
dec
jb
out
decb
inc
or
ljmp
push
daa
mov
out
int
dec
jp
mov
loope
push
sub
mov
xchg
aaa
lea
push
enter
outsb
xchg
add
cmp
cli
lods
xchg
jmp
jecxz
into
adc
dec
push
mov
cmpsb
ljmp
mov
fdivrs
faddl
test
jno
decb
xchg
test
in
iret
sbb
subb
fninit
in
inc
lcall
xchg
ficompl
fldcw
push
int3
scas
das
psubq
xchg
xlat
xorb
xchg
popa
aaa
fldt
test
inc
inc
repnz
sbb
or
and
dec
pop
dec
dec
pusha
pop
insb
inc
dec
mov
xchg
cmp
enter
je
daa
xchg
push
adc
repnz
xor
sbbb
xlat
and
cmpsl
inc
pop
lds
in
push
adc
out
push
std
adc
xor
sub
xchg
orl
cmp
and
xchg
bound
fiaddl
shll
mov
rcrb
ficoml
out
mov
push
fsubl
aaa
xor
loopne
jl
enter
les
popf
jns
mov
movsl
fwait
fwait
xor
mov
test
or
pop
jp
pop
in
shl
add
loop
shrl
test
xchg
lods
mov
adc
loope
cmc
mov
mov
jl
jno
mov
xchg
outsb
lds
sub
dec
xchg
aam
push
jge
stos
inc
frstor
dec
pop
clc
and
xchg
mov
sub
pop
js
pushf
or
dec
xchg
gs
in
add
andb
xchg
adc
pop
xor
sarl
jne
xor
xchg
mov
lds
sbb
xchg
sbb
push
stos
fidivrl
sub
aaa
mov
sbb
pop
jns
mov
and
popa
outsl
clc
cmp
call
sub
xchg
mov
mov
fstpl
sub
push
or
jne
push
xlat
stc
and
xor
add
xchg
loop
mov
cmp
loop
aas
sub
add
add
fmuls
loopne
loopne
pop
mov
test
sub
fs
in
add
cmovl
push
adc
loopne
mov
mov
fcompl
lods
jb
pop
push
mov
xor
imul
rcrl
sbb
lods
cmp
cmc
mov
sub
adc
dec
dec
jbe
inc
push
jno
xor
inc
jno
jo
out
jecxz
shlb
inc
cmpsl
xor
push
leave
stos
das
jge
jb
orb
mov
loopne
pusha
push
mov
xorb
sbb
ret
jge
mov
movsl
mov
lret
inc
lret
dec
push
fadd
dec
addb
adc
hlt
mov
inc
mov
xchg
fs
add
dec
fcoms
lds
and
or
adc
cwtl
pop
daa
push
xor
xor
xchg
bound
imul
mov
mov
xchg
stos
xchg
pushf
fucom
daa
and
ja
sub
jns
push
iret
cmp
or
and
dec
loopne
mov
rcl
out
and
jnp
pop
aam
ficoml
ljmp
push
jnp
data16
and
adc
in
mov
cmp
cld
movsb
sbb
sahf
bound
mov
push
cs
mov
sub
jmp
in
js
sub
or
lea
push
or
lods
icebp
jp
push
popf
sbb
lret
leave
push
and
test
push
and
dec
rcrb
mov
jb
dec
jo
fldl
and
and
imul
sbb
add
jno
mov
dec
dec
and
out
fists
jnp
xlat
cmp
ss
and
jne
scas
mov
addr16
jp
scas
rolb
inc
data16
and
inc
out
je
mov
or
and
enter
scas
mov
pop
outsb
daa
lret
sub
ja
jae
mov
ljmp
imull
adc
mov
mov
inc
rolb
xchg
call
cwtl
arpl
loop
push
mulb
mov
dec
out
pusha
fs
fnstenv
pushf
cmc
jmp
test
ds
sbb
pop
dec
cltd
iret
fnstsw
cmp
fsqrt
jl
mov
push
xchg
insl
in
mov
fstpt
enter
int3
daa
push
andb
adc
adc
repnz
lea
or
fidivrs
cmp
aaa
lock
xchg
jmp
arpl
dec
add
cmp
loopne
cltd
loopne
out
ljmp
ja
test
jnp
subl
push
popf
sbb
into
cmp
loope
aaa
xor
xchg
movsl
mov
cmpsb
jbe
inc
aam
lret
lock
or
out
pop
fiadds
ret
test
and
jecxz
cmp
pop
and
dec
xchg
stc
aam
inc
mov
popa
inc
sbbb
cwtl
push
or
sub
loopne
pop
xorl
or
sub
enter
cmp
and
inc
je
fs
xchg
pusha
jp
pop
popf
adc
or
mov
lods
push
ljmp
or
cli
adc
and
or
cmp
pop
adc
in
fisubl
in
lahf
fsubrl
adc
sarb
int3
mov
cmp
pushf
adc
inc
sbb
adc
pop
xor
mov
push
jne
inc
pusha
ffree
add
jle
mov
adc
add
mov
inc
shll
add
lock
mov
repnz
xor
fldenv
or
int3
sti
ficoms
jbe
fsts
mov
adcl
daa
cmp
inc
fcoms
in
mov
push
pushf
scas
inc
aam
and
cwtl
mov
jns
fucomip
scas
popf
outsb
push
outsb
scas
push
lahf
insl
mov
dec
or
mov
lret
mov
daa
inc
gs
mov
mov
mov
push
pop
mov
int3
ja
jo
push
jp
and
cmpsl
add
aaa
push
out
pop
or
dec
lea
fisubrs
ret
mov
int
xchg
and
insb
pop
fmull
fwait
lea
cltd
ljmp
sti
aas
sahf
jns
and
dec
repz
xchg
xor
lahf
add
mov
mov
adcb
shrb
dec
divb
jp
adc
sbb
gs
or
rolb
mov
aaa
jo
cmc
ret
cmp
xchg
inc
xlat
xor
add
inc
lock
jnp
sub
inc
loopne
stos
inc
cld
adc
lea
pop
imul
xor
lret
mov
pop
nop
jo
in
mov
mov
loopne
pop
jbe
pop
stc
sti
jo
push
and
sarl
or
jmp
push
pop
adc
sub
mov
cmp
sbb
xchg
lods
out
js
leave
in
subl
mov
mov
ljmp
mov
loope
mov
mov
mov
and
dec
mov
pusha
pop
jae
fbstp
pop
sbb
insb
mov
mov
xor
lods
fcomp
pop
cmpsb
out
push
sub
adc
imul
inc
addl
daa
add
imul
inc
mov
inc
push
sbb
test
jl
jb
popa
mov
sub
push
test
stos
add
insb
or
in
mov
mov
jae
movb
cmc
xor
mov
fisubrs
enter
mov
fcomps
pop
xlat
or
mov
add
ret
mov
hlt
js
sbb
loop
test
iret
inc
and
iret
fbld
inc
outsb
ret
les
push
mov
fneni(8087
cli
adc
cmp
mov
push
jb
movsb
movsb
movsb
rcr
das
push
lret
scas
adc
not
out
mov
inc
pop
push
imul
fiadds
ds
mov
jo
mov
outsl
push
cmp
and
out
stos
mov
repz
jg
adc
stc
push
mov
sub
xor
subl
dec
fadds
mov
push
push
adc
and
bound
xor
jg
adc
cmp
jnp
movsb
sub
es
sub
dec
rcrb
adc
add
pop
int3
std
xchg
sub
or
out
jl
sub
inc
jb
sub
adc
sbb
lods
or
lea
out
inc
pop
daa
fmull
lcall
mov
dec
mov
ret
addr16
jmp
xor
lret
mov
push
sub
push
icebp
mov
cmc
mov
cmp
mov
mov
add
imul
cmp
lods
xchg
clc
xchg
rorb
fiadds
cmc
and
shlb
xchg
aad
dec
out
mov
add
lods
loop
xchg
inc
mov
lea
xor
or
ljmp
mov
cmp
sub
mov
pop
mov
cmpl
fs
stos
or
sbb
add
add
jle
sbb
fidivrl
push
pop
inc
lcall
mov
mov
call
iret
rclb
sub
nop
nop
aam
push
mov
fs
sahf
sbbb
rorb
push
push
out
push
and
inc
sbbl
xchg
or
mov
lds
repz
xor
lods
hlt
subb
cli
xor
xchg
int3
ja
dec
loopne
out
test
iret
test
ret
add
push
mov
mov
mov
fisttpl
xor
and
lock
sbb
scas
adc
xchg
mov
ljmp
cltd
in
and
cmp
inc
divb
push
dec
pop
test
jns
sbb
loop
or
mov
repz
pop
mov
mov
das
test
cld
or
data16
fildl
jmp
dec
dec
lahf
pop
xchg
call
or
es
int3
and
daa
xchg
sbb
aam
mov
js
movsl
add
ss
push
mov
cli
in
fimull
mov
shll
popa
fdivs
dec
or
sbb
popf
dec
push
mov
pusha
sti
je
into
loopne
je
pop
int3
dec
xchg
hlt
mov
ss
lret
fldcw
adc
aaa
pop
adc
dec
ss
ja
mov
mov
jnp
bound
out
fdivrs
cltd
mov
lods
pop
sub
and
int3
in
adc
fistps
es
bound
jns
testl
jecxz
mov
inc
loopne
xchg
inc
add
fildll
aam
aad
fdivr
lret
xor
inc
mov
add
pop
loop
out
mov
xorl
mov
sbb
rclb
stc
loop
lock
mov
mov
data16
ja
mov
push
cmp
pusha
lea
inc
xchg
push
insb
xchg
nop
push
mov
add
pop
xor
push
js
fstpl
ja
push
ret
add
push
mov
gs
cwtl
data16
add
push
add
xchg
cmp
xlat
nop
xchg
push
or
pop
pop
out
dec
pop
jbe
mov
add
lcall
push
dec
push
cmp
cwtl
mov
negl
addr16
push
out
adcl
inc
dec
imulb
es
mov
mov
mov
dec
dec
jae
and
xchg
popa
push
adc
jns
dec
scas
add
lcall
rclb
cmp
sub
out
push
push
dec
cmp
addb
loope
jo
and
aas
xchg
mov
pop
xchg
push
mov
or
xchg
sub
mov
filds
jb
cmp
enter
cmp
or
cmp
ffreep
dec
cmp
cld
dec
push
mov
inc
xchg
aaa
ljmp
lds
in
mov
adc
and
adc
cmp
xor
sbb
cmp
int
jecxz
fistps
out
xlat
orb
sub
pop
in
pop
xor
aaa
xchg
inc
jl
in
jg
cmp
and
pop
fiaddl
test
rorb
push
out
aas
movsl
pop
dec
sbb
push
sbb
int
js
jnp
fsubr
movsl
pusha
xor
jl
in
xchg
stos
add
nop
mov
dec
in
mov
sbb
jno
mov
lods
sub
push
add
jae
xchg
std
jno
dec
mov
cmp
cmpsl
xchg
xchg
les
arpl
jmp
loopne
fldlg2
cs
mov
sahf
add
dec
mov
inc
add
xor
dec
fsub
into
mov
jae
xlat
adc
mov
cmp
std
aas
sub
in
sub
dec
je
ret
imul
pop
aas
jle
or
push
xorb
in
and
mov
fdivr
push
and
bound
mov
fcompl
sarb
add
xor
sti
mov
inc
add
adc
lahf
nop
cmp
jg
cli
pushf
cmp
stos
mov
xchg
pop
xor
call
in
xor
push
sbb
hlt
add
fwait
outsb
arpl
or
imul
xchg
lock
and
fwait
incb
loope
je
cmc
subl
nop
sar
add
add
sti
add
jb
xlat
fsubl
sub
aad
out
pop
dec
mov
and
enter
gs
lock
xchg
xchg
or
pop
mov
pop
jl
lahf
shll
push
push
push
xchg
push
ret
lods
test
ljmp
daa
sbb
pop
adc
or
adc
push
push
pusha
pop
faddl
jle
inc
nop
dec
dec
xor
js
es
xor
jb
aaa
in
jne
daa
xchg
sub
lock
sahf
sub
jecxz
inc
sarb
pushf
jb
adcl
cmp
mov
lret
daa
movsb
dec
jb
jnp
cmp
sbb
pop
xchg
sub
jmp
outsb
lods
inc
adc
movsl
xor
pop
pop
jae
and
mov
lea
adc
mov
xor
popa
push
mov
rcrl
pop
lods
icebp
sar
inc
fstpt
std
mov
repz
sub
adc
rep
addb
mov
jle
sahf
mov
and
adc
shlb
jl
call
mov
xchg
lret
xchg
std
mov
cmc
sub
inc
and
push
sti
imul
imul
fistpll
xor
stc
inc
xor
je
push
repnz
lahf
sub
adc
lods
fldcw
jo
mov
cmp
push
mov
fcoms
stc
lds
imul
cmp
cmp
jmp
rcrl
stc
in
arpl
pushf
int3
popa
inc
or
stos
pop
xlat
mov
jae
mov
cmp
pop
xor
in
test
out
aaa
cli
or
imul
xchg
sbb
sbb
cmp
aas
jne
pop
fisubl
cmpsl
int
ljmp
adc
lods
inc
push
xor
jecxz
mov
push
loop
aas
mov
nop
out
stc
lret
lret
and
divl
mov
inc
test
mov
pop
js
cmp
insb
xchg
cmc
xchg
pop
sbb
xchg
xchg
stos
mov
nop
xorb
repnz
push
push
daa
rorl
mov
xchg
aam
push
dec
xchg
fists
cmp
push
fisttps
push
jl
andl
orb
es
push
sub
add
popf
xchg
dec
sub
lods
pop
mov
ret
jl
fidivs
mov
test
in
cwtl
fisttpl
push
mov
les
rcrb
xor
icebp
and
jmp
inc
pushf
scas
jecxz
rep
fsubrs
mov
and
mov
push
push
and
jmp
jecxz
sbb
inc
cmp
aam
mov
add
add
xchg
in
mov
push
ja
scas
in
jnp
fidivs
cmp
xlat
add
mov
dec
cmp
incl
cmp
ror
and
jae
push
aad
inc
pop
repz
xlat
aam
arpl
iret
mov
aad
out
popa
mov
cmp
insb
popa
mov
mov
mov
jno
ret
adc
mov
xor
xchg
cwtl
pop
pop
xor
inc
lret
addr16
test
inc
xchg
sub
dec
xchg
idivl
cli
jno
rcrb
cld
into
pushf
test
sbbb
pop
leave
test
sub
rsm
shlb
sbb
scas
test
pop
pop
aad
shll
stos
daa
mov
test
out
xchg
push
fsubp
rorl
cli
push
pop
in
sbb
xchg
ss
out
decl
inc
jns
xchg
mov
inc
test
adc
add
arpl
push
je
fdivrl
jo
in
push
pop
mov
fldenv
and
sbb
xor
xchg
or
cmp
testl
fs
adcb
test
xchg
in
sti
pop
insb
mov
adc
repz
jp
subb
push
sbb
sbb
mov
fbld
inc
lock
lock
shlb
mov
movsb
mull
test
cmp
jmp
dec
xor
jge
fidivs
rcl
or
je
inc
inc
and
push
cmp
xor
addr16
std
loop
xor
sti
jo
sub
mov
cwtl
mov
frstor
loopne
and
add
add
xor
out
incl
pop
xchg
pop
stc
jp
insb
movsl
jecxz
jno
lcall
pushf
sub
push
pop
sbb
ret
movsb
push
inc
adc
push
xor
shlb
repnz
loopne
loop
int3
inc
mov
add
icebp
pop
ret
mov
adc
int3
fwait
data16
mov
cmp
and
mov
adc
mov
cltd
xor
xchg
ss
das
xchg
popa
cld
jns
push
out
inc
jp
sub
xor
inc
mov
notb
lock
mov
sarb
mov
testl
pop
jno
popa
fwait
push
jb
insl
js
shlb
out
pop
lea
mov
sub
cli
adc
int3
push
mov
insb
jge
cmp
cmc
sahf
or
dec
fiadds
ljmp
cmp
icebp
jle
loop
pop
xchg
mov
dec
outsb
addr16
dec
lret
lock
test
inc
jp
mov
adc
jp
adc
aaa
incb
icebp
add
inc
lods
mov
shrb
jmp
int3
mov
fsincos
fidivs
aam
or
movsb
dec
fs
push
xlat
cmpsb
mov
jbe
dec
jge
push
std
pusha
push
jno
idivl
mov
inc
iret
jle
lods
aam
push
aad
lods
fstpt
std
mov
fimuls
push
or
inc
leave
sub
mov
sbb
jmp
cmp
movsb
js
imul
mov
adc
xchg
lcall
inc
out
je
shl
push
in
cmp
daa
or
sbb
xor
out
pop
pop
pop
sub
daa
adc
cmp
dec
mov
mov
mov
xchg
ds
mov
in
rep
push
adc
inc
dec
adc
loope
cmp
movsl
push
sbb
fildll
dec
mov
in
rclw
lahf
leave
jmp
mov
pop
add
dec
mov
ja
inc
loopne
or
fstp
jns
jle
ljmp
ret
rol
xchg
mov
in
addr16
pop
ljmp
lea
cmp
into
mov
in
out
in
outsl
cmc
mov
imul
stc
dec
adc
out
aas
ds
sub
or
mov
mov
adc
out
aad
cmc
mov
in
push
mov
adc
jns
in
and
insb
and
xor
push
fcmovu
mov
xor
mov
enter
cltd
mov
fwait
adc
mov
add
or
std
or
rclb
imul
shlb
clc
sub
push
hlt
xchg
mov
xchg
push
lds
jmp
movsl
add
mov
inc
sub
adcl
pop
xor
decl
xchg
aaa
xchg
fidivrl
lret
or
aaa
les
xorl
enter
nop
pop
int
mov
adc
orl
mov
aas
cmc
mov
test
cmp
cmp
in
pop
mov
mov
cwtl
adc
mov
adc
pushf
jne
push
ss
jae
mov
push
fbstp
sbb
lock
lret
popf
pop
xor
fsubl
sbb
lahf
fldcw
dec
sub
out
adc
cmp
aam
xchg
outsb
xchg
sahf
cmpxchg
inc
fsubr
mov
sahf
push
popa
jle
adc
iret
inc
push
lds
jae
adc
push
jge
loopne
insb
insb
push
call
jmp
jno
fwait
mov
aam
push
popf
cli
cli
ret
cld
leave
test
loop
addb
fsts
mov
gs
inc
jns
adc
repnz
fwait
std
neg
mov
ret
adc
pop
sti
jp
mov
mov
jmp
mov
and
clc
lret
pushf
dec
pop
xor
decw
inc
mov
pop
push
popf
stos
ret
jecxz
or
sti
testl
mov
mov
std
dec
fldl
fldcw
popa
int
iret
cs
jno
fadd
jns
xchg
or
inc
pushf
push
icebp
insl
push
es
std
out
or
adc
sarb
ret
mov
lock
into
mov
into
sahf
insl
fisttpl
jb
sahf
mov
xor
rclb
in
js
ror
je
iret
push
jb
test
add
sarb
push
loopne
jg
fbld
jbe
xchg
mov
repz
add
outsl
cmp
out
add
es
mov
xor
dec
inc
es
add
shll
fisubrl
xorl
ret
lret
jmp
jnp
clc
or
cli
adc
jg
dec
out
adc
fwait
push
pusha
sbb
cmp
fcmovnu
push
jmp
insl
imul
ficoml
push
testb
loop
push
or
aad
push
aam
outsb
pop
out
xlat
jge
jl
arpl
add
sbb
das
xor
xchg
hlt
movsb
cli
mov
insl
fidivl
loop
loopne
test
adc
mov
push
hlt
sub
daa
test
mov
and
jne
hlt
fimull
aaa
scas
and
jne
rolb
ret
push
add
mov
adc
jns
subl
sub
les
mov
mov
in
lea
in
mov
mov
push
cmp
xchg
mov
sub
lods
fidivrl
and
rorb
inc
sub
aam
repz
in
inc
fld
jmp
test
inc
jo
pop
std
dec
xchg
adc
lahf
dec
out
nop
push
cmp
rorl
lret
not
addr16
push
out
aaa
mov
push
andl
mov
mov
inc
xor
mov
fcompl
push
clc
jge
pusha
or
sbb
mov
add
sbb
mov
mov
add
mov
outsl
inc
xchg
cmp
divb
cmp
icebp
adc
pop
sbb
fcom
pop
insl
loope
inc
push
mov
ror
sti
fbld
jo
xor
push
or
loope
mov
push
pusha
dec
mov
fisubrs
aaa
dec
pop
imul
imul
test
pop
push
fnsave
aad
and
dec
enter
enter
push
lock
push
sbb
inc
cmp
sahf
dec
adc
in
hlt
fwait
outsb
stc
negl
ss
push
dec
push
sbb
add
je
pop
xchg
aad
inc
or
hlt
pushf
cmp
scas
je
imul
add
mov
lret
nop
sbb
cmp
in
imul
int3
jnp
in
mov
mov
int
fbstp
mov
fnstcw
scas
mov
dec
dec
jbe
cwtl
ja
cmp
mov
aas
imul
movsl
sbb
and
jb
test
xchg
mov
dec
cmc
movsb
xchg
aas
pop
and
pop
xchg
jle
inc
gs
fisttps
syscall
pop
sbb
jnp
xchg
jbe
pop
xchg
fistpll
call
mov
sbb
ljmp
push
stc
in
inc
lods
jmp
pop
mov
mov
mov
inc
jnp
push
jl
loop
push
or
pop
and
test
cs
mov
xchg
aad
fisubrl
mov
mov
enter
jl
push
or
arpl
push
ds
out
arpl
sbb
cmpl
dec
out
xchg
push
dec
xor
or
shl
and
xchg
shrb
loopne
cmp
lcall
cmpsl
cmpsl
add
pusha
push
divb
js
adc
xchg
dec
inc
mov
repz
fisubrl
sti
pop
pop
adc
cli
lea
mov
jb
xor
inc
mov
mov
xor
dec
test
aad
or
mov
frstor
push
jns
fmul
lret
lods
stc
xor
test
adc
xor
adc
xchg
insb
sub
cmpsb
add
mov
and
ss
rclb
fidivrs
add
mov
push
pop
iret
sub
movsb
adc
and
cld
iret
dec
jle
es
adc
xor
jno
jbe
sub
stos
xor
mov
inc
or
and
movsl
xor
sub
int3
aaa
imul
push
mov
pop
stos
fsub
leave
jle
sbb
inc
outsl
lea
sbb
cmpsb
popa
insl
roll
cwtl
fiadds
push
push
out
or
jmp
fsubs
ljmp
idivl
cld
xchg
mov
cmpsb
inc
out
and
lret
xchg
fldl
lcall
adc
dec
ja
dec
and
lret
and
arpl
stos
loopne
subb
jnp
dec
pop
push
int3
lods
jl
dec
xor
push
stc
pop
xchg
dec
xchg
mov
leave
push
push
mov
inc
push
lahf
dec
lret
in
xchg
mov
mov
xchg
testb
mov
dec
pop
lret
mov
push
jle
xchg
mov
daa
hlt
test
loopne
hlt
ljmp
or
inc
call
cs
and
push
mov
stc
jno
push
movsb
clc
hlt
inc
das
sub
in
in
loope
and
xor
insl
push
in
jg
sahf
cmp
insb
loope
fwait
xchg
out
xchg
adc
cmp
fs
sbb
icebp
mov
dec
dec
push
adc
mov
pop
divl
mov
adc
xchg
sub
mov
sti
pusha
aad
push
insl
idivb
loope
cli
inc
outsb
dec
testb
jo
mov
pop
loopne
mov
pop
test
inc
or
loop
popa
scas
cmpsb
das
xor
js
push
add
aad
pop
pop
adc
and
jmp
dec
int
mov
stos
hlt
lds
jae
mov
pop
into
add
sahf
ja
fucom
mov
jge
dec
and
lods
xchg
sbb
scas
and
jns
les
loope
push
mov
shrl
in
stos
or
sahf
jg
and
fstps
stos
add
push
jp
repz
lods
cmc
and
mov
push
pop
pop
adc
cs
icebp
adc
lret
adc
xor
lahf
in
jne
push
jae
icebp
andb
jmp
popf
sahf
mov
add
addl
test
mov
and
fdivl
mov
and
ret
pop
sbb
and
loope
jns
xchg
dec
rcrl
adc
push
pop
sub
inc
mov
sti
sbb
sbb
lock
test
xchg
xchg
ljmp
clc
sbb
adc
jge
insl
fwait
pop
mov
iret
jecxz
imul
ljmp
loopne
enter
mov
lds
leave
xor
cmpb
jl
cld
les
out
rcll
leave
pop
lods
jmp
lods
xor
mov
enter
in
jnp
push
jg
std
jbe
lret
sub
rol
stos
mov
mov
fxam
pop
cltd
dec
mov
adc
sbb
aam
xchg
out
jbe
clc
cld
fisttpll
inc
in
cmp
ljmp
pusha
ds
mov
push
scas
fsts
jl
sbbb
inc
scas
test
hlt
out
mov
push
push
cmp
into
sub
std
push
and
ret
hlt
pop
adc
test
insb
in
insb
das
rorb
xchg
sti
inc
dec
add
jl
ds
pop
add
scas
and
int
adc
dec
xchg
mov
imul
movsl
pusha
push
mov
loopne
mov
mov
movsl
sti
adc
jp
clc
push
test
das
or
out
test
popa
mov
add
lods
pushf
push
jbe
or
shll
int
mov
sub
icebp
aam
mov
gs
inc
adc
cmpsb
jle
arpl
fldl
pop
sbb
mov
out
sti
pusha
push
pop
sub
cld
inc
dec
xor
xor
mov
enter
push
cmp
test
movsb
arpl
shlb
mov
sbb
lods
aas
dec
iret
adc
xor
and
jge
cli
pop
aad
push
or
mov
cmp
cmp
jb
mov
por
addr16
xchg
pop
cs
js
addl
aam
insl
pusha
dec
test
stc
sbb
cmp
adc
sub
xorb
adc
xor
xchg
test
loop
fidivrl
call
add
inc
les
xchg
jno
or
shl
cmp
jmp
jle
push
test
in
imull
push
cmp
mov
and
dec
inc
jg
icebp
stos
int3
pop
add
adc
jmp
sahf
add
xor
mov
xchg
shll
adc
adc
aad
mov
inc
dec
push
test
push
in
je
xchg
scas
repnz
notb
mov
stc
cmp
xchg
mov
pushf
pop
cmpsl
shll
into
dec
dec
xor
cwtl
shlb
addr16
lock
fdivs
dec
sahf
mov
mov
sbb
test
and
pop
dec
fsts
int
ds
lcall
adc
lret
jo
and
in
std
in
clc
lock
sub
popa
mov
data16
fildl
cmp
out
mov
pop
and
adc
pop
cli
sbb
negb
inc
imulb
lret
xchg
dec
pop
ljmp
mov
dec
outsb
sub
sub
movsl
jg
outsl
rclb
and
in
xor
jo
cmpsb
dec
pop
mov
and
shrb
fnstenv
inc
bound
mov
in
js,pt
lahf
mov
mov
dec
sbb
dec
pop
cli
inc
mov
cmp
orl
mov
xchg
cmp
loopne
xlat
arpl
add
inc
orb
and
pusha
ret
jb
rep
xchg
push
sbb
adc
fnstcw
mov
aad
push
pop
sub
sbb
loop
mov
push
or
mov
adc
lcall
adc
adc
call
clc
adc
sub
push
and
stos
in
loopne
lahf
inc
cmp
push
xchg
cltd
jecxz
mov
fcompl
or
clc
xor
sti
xchg
add
mov
xor
dec
dec
jg
pushl
cmp
xchg
dec
push
xor
pop
subl
mov
mov
test
aaa
repnz
pushf
cmpsb
sbb
addr16
call
cmp
sbb
call
dec
ljmp
push
push
push
test
cltd
mov
js
repz
and
les
jae
cmpsb
cwtl
mov
test
in
and
or
outsb
sub
scas
cltd
nop
pop
sub
inc
testl
cltd
add
pushf
fwait
out
and
fstl
mov
hlt
and
inc
inc
ficoms
test
or
outsl
and
hlt
and
stos
jns
scas
das
popl
cmp
movsb
inc
mov
dec
ficoml
adc
in
call
lea
push
les
mov
fcmovnbe
mov
mov
lea
mov
dec
push
push
or
out
sbbb
les
xchg
fsts
fistl
cmc
rcrb
add
gs
push
ss
inc
fsubrp
sahf
inc
imul
jmp
mov
or
imul
xchg
jo
xchg
out
loop
out
mov
int3
scas
and
cld
jne
outsl
sbb
jl
test
push
ljmp
xchg
mov
lcall
jl
inc
ss
pop
ljmp
xchg
pop
jbe
cmc
cmp
vaddps
xstore-rng
cmpsl
inc
inc
mov
push
enter
push
mov
cmp
sbb
scas
loop
insl
sub
dec
cmpb
inc
adc
push
mov
ja
push
inc
sub
loop
jne
sbb
scas
adc
shl
pop
and
mov
ret
pusha
fcompl
lcall
sbbl
lcall
xorb
sub
subb
pop
call
dec
lcall
push
xorb
shrb
loopne
aas
in
inc
xchg
daa
cmp
cmp
mov
daa
rcrl
sub
mov
out
iret
sub
insl
dec
fstpl
sub
mov
outsb
loope
dec
cmc
subl
lret
into
outsb
out
sbbb
and
xchg
push
dec
sbb
jb
fsubrl
fs
icebp
sbb
mov
push
lock
insl
test
aam
push
xchg
sub
and
cmp
leave
push
incl
dec
push
push
adc
sbb
mov
and
cmpsl
in
dec
xor
loopne
cmp
insl
nop
call
or
adcb
adc
jmp
push
ret
rcr
xchg
or
out
test
or
out
or
lds
jne
xor
fsubrp
pop
lods
mov
jae
int
push
mov
out
add
test
popf
jae
call
jl
int
xor
ror
dec
mov
sbb
pop
lahf
mov
pop
inc
rcll
sti
pop
adcl
mov
or
nop
andl
pusha
rcrb
cmpsb
xchg
mov
mov
and
and
pop
fnstsw
sub
mov
cmp
xchg
movsl
push
pusha
loopne
mov
aad
push
jns
push
ret
mov
pop
cmp
inc
dec
sub
jno
notl
icebp
into
mov
xor
mov
stos
add
and
mov
xchg
ljmp
cmpl
adc
pop
cmp
rorb
cld
lods
leave
sbb
aad
or
gs
mov
aaa
dec
cmc
inc
pop
sub
sbb
jg
mov
add
add
push
or
in
movl
jge
lret
dec
fstps
ds
push
jae
es
inc
sub
mov
insb
pop
and
cmp
call
dec
enter
lds
jo
mov
testl
stc
pop
faddl
mov
mov
push
mov
ret
pop
xchg
dec
mov
lods
sub
dec
inc
mov
lahf
shrl
mov
mov
call
jge
xchg
dec
out
stc
lods
ss
xor
lret
and
xchg
shl
mov
add
and
lahf
mov
jecxz
mov
add
es
jle
xchg
or
mov
or
int3
fdiv
mov
inc
fs
into
movsl
pop
adc
push
std
imul
dec
movsl
fwait
xchg
jge
cmpsl
in
ja
incl
or
or
mov
mov
mov
ret
add
loop
sbb
es
hlt
and
dec
xchg
pop
or
mov
scas
fwait
sahf
dec
adc
mov
sbb
push
jo
mov
xor
shl
lret
aaa
lret
push
xor
adc
das
mov
les
rcll
xchg
cmc
push
outsl
and
jmp
mov
xchg
notb
adc
mov
jmp
clc
dec
stc
adc
push
cmpsb
jg
cli
roll
cmpsl
adc
push
jle
pop
enter
dec
cmp
xchg
and
xor
and
jl
push
cmpb
popf
in
int3
ds
mov
sahf
adc
aad
cld
mov
in
ljmp
pop
sbb
pusha
inc
push
mov
lods
cwtl
add
xor
loopne
sub
add
sbb
ljmp
pop
push
cmpl
fsubl
jo
xlat
sbb
hlt
loope
cmpsl
test
xor
and
and
pusha
and
loop
in
lcall
mov
push
ret
jne
jp
xor
mov
or
out
hlt
jp
or
stc
pop
aam
mov
push
arpl
out
mov
leave
sub
inc
xchg
ret
mov
cmp
sub
addr16
subl
adc
xlat
repz
jo
sbb
in
lock
lock
mov
inc
mov
mov
ret
xor
and
or
test
orl
pop
cli
sbb
pop
xor
fbld
jmp
cmp
sbb
pop
pusha
pop
or
iret
mov
xlat
int
aaa
inc
push
cmp
jp
imul
pop
or
sbb
sbb
mov
dec
lods
stos
and
repnz
mov
sbb
xor
gs
out
mov
mov
mov
sub
loop
arpl
mov
cmpsb
mov
stos
xor
repz
fisttps
dec
cli
shll
xor
lcall
push
sahf
push
push
movlps
xchg
aas
xchg
mov
inc
dec
cmp
aam
clc
testl
push
fs
add
sbb
fstpl
cmp
pushf
out
imul
loop
jl
mov
pop
pop
ss
fcmovne
push
mov
mov
ret
xchg
and
sahf
add
push
loop
xchg
mov
jmp
xchg
mov
push
cs
loope
sbb
and
push
adc
or
scas
sub
fistpll
daa
dec
into
jecxz
xor
mov
sbb
push
and
xchg
push
xchg
push
jmp
cmpsl
jne
dec
and
adc
sbb
sbbl
sub
push
ret
repnz
dec
mov
lcall
out
push
mov
mov
jg
inc
lret
sub
int
jmp
jmp
push
imul
popa
adc
mov
push
or
mov
mov
lds
mov
sbb
pop
sub
ds
mov
sbb
iret
addl
pop
scas
and
sub
shlb
add
inc
xchg
inc
scas
adc
outsl
in
ljmp
fistl
xlat
movsl
or
mov
mov
cmc
bndldx
push
into
adc
mul
subb
in
add
bsf
cld
in
fsubl
movl
sbbl
pop
aam
into
sub
cmp
lret
push
into
xchg
and
les
fisttpll
xchg
cwtl
cmpsl
loop
rclb
cmp
adc
mov
adc
cmp
sahf
cmp
mov
push
fdivs
pop
or
or
mov
insb
sub
js
push
inc
movsl
lea
insl
pop
negb
mov
in
mov
push
shr
sbbl
aad
mov
add
jns
loope
pusha
jmp
stc
loopne
les
loopne
push
sahf
mov
pop
pop
cmpsb
out
sub
hlt
out
sbb
push
fs
pop
and
insl
add
stos
into
fstpt
cmp
sub
lret
nop
ds
mov
and
sub
jns
clc
ret
mov
out
out
sub
inc
pop
ss
orl
shr
lret
ret
dec
inc
fidivl
sarl
int
push
lds
xlat
test
divb
or
xchg
out
dec
daa
fidivrs
ret
test
mov
rcll
and
mov
cmpsl
test
xor
or
dec
sbbl
and
dec
aaa
inc
ret
mov
pusha
mov
mov
scas
inc
pop
addr16
push
shl
repnz
das
add
stos
push
lods
arpl
mov
and
pop
xchg
loopne
mov
add
cwtl
fistl
out
inc
push
dec
cli
mov
out
inc
mov
dec
mov
pop
aad
outsl
xchg
stos
mov
dec
xchg
adc
ss
js
into
cli
mov
xchg
cmp
imull
jge
movsl
or
shll
xor
ljmp
movb
sbb
push
jns
aaa
ret
inc
pop
sbb
mov
sub
mov
aas
pop
and
pop
orb
mov
dec
dec
lcall
int3
and
subl
jmp
adc
lret
adc
dec
push
add
fwait
and
in
xchg
filds
fs
sub
mov
and
xchg
in
je
jo
mov
sbb
jp
pop
xchg
les
inc
jmp
sahf
dec
sub
mov
lret
dec
push
es
lret
sbb
adc
push
cmpb
adc
subb
sbb
mov
aas
adc
mov
xchg
mov
mov
pop
jbe
cmpsl
fists
test
and
daa
add
push
test
daa
jae
in
es
or
mov
ret
push
stc
test
outsl
aas
sbbl
lods
and
cmp
mov
sub
dec
leave
leave
lret
mov
je
fs
negl
in
lds
adc
clc
js
decb
daa
mov
popf
arpl
xor
or
adcl
adc
jae
jb
daa
inc
insb
xor
push
add
cli
repnz
mov
in
scas
ja
add
sbb
adc
or
add
xchg
les
fiadds
dec
in
daa
outsb
adc
and
jg
stos
xor
jmp
out
mov
inc
pop
xor
jle
je
out
mov
add
jnp
je
cli
fisubrl
pop
jle
fsub
mov
mov
push
inc
fs
pop
repnz
iret
adc
pop
arpl
xchg
outsb
icebp
inc
ja
test
jne
jae
xchg
mov
push
imul
in
mov
lds
data16
dec
inc
jmp
xor
cwtl
jo
fsubl
or
fistpll
pop
test
adc
test
clc
jmp
add
ficomps
or
sbb
fists
adc
shl
push
add
test
cltd
shr
outsb
int
fadds
pop
mov
mov
jp
movsb
xchg
movsl
sti
cmpsb
outsb
cli
in
mov
mov
or
sbb
mov
push
jecxz
cmp
dec
sti
cli
adc
cmp
sbb
inc
fnsave
mov
cltd
push
clc
jbe
stc
bound
das
arpl
fsub
dec
les
jg
pop
aaa
hlt
jg
ja
inc
fildll
pop
icebp
xor
or
inc
outsb
cmc
fwait
jo
adc
rcr
mov
mov
loop
gs
shll
add
popa
repz
dec
mov
mov
xchg
xor
cli
out
and
jg
mov
test
cmpsb
jno
xor
and
inc
adc
adc
cld
pop
pop
pop
pop
call
into
scas
inc
cmp
jge
cs
js
adc
mov
rolb
pop
stc
mov
sub
inc
outsl
xchg
fistpll
jecxz
scas
mov
inc
leave
fucomp
pop
mov
orb
pop
and
shl
subb
sbb
or
orb
jnp
mov
mov
jmp
nop
push
mov
pusha
pop
xchg
jbe
ret
iret
jg
fcomps
pop
xor
or
mov
push
cmp
sarl
jg
repz
pop
cwtl
inc
xor
sti
cltd
mov
ss
or
mov
sahf
inc
movsl
popa
adcb
pop
in
mov
sbb
jl
adc
push
iret
fildl
jne
stos
push
imulb
out
dec
in
push
rclb
lods
mov
dec
ret
pop
out
rolb
add
imulb
cmp
xchg
sbb
jbe
jbe
out
aad
movsl
mov
inc
movsl
addr16
mov
je
add
es
add
sub
push
loop
and
addr16
into
dec
push
xor
test
inc
mov
imull
adc
jne
ja
add
or
ds
stos
cmc
jae
mov
cmpsb
scas
dec
jb
arpl
gs
sub
scas
dec
int
mov
insl
aaa
cmc
mov
loope
int3
mov
add
and
mov
push
and
cmp
sub
lea
sbbb
lock
into
mov
push
push
loopne
je
jge
lods
das
aas
leave
popa
inc
movsb
test
sarb
sub
sub
dec
sti
cmp
mov
ja
out
add
shl
push
data16
cmp
rcll
lcall
insl
push
and
ljmp
in
or
cwtl
js
sahf
sub
fistps
mov
imul
mov
js
lods
mov
adc
iret
mov
sub
repnz
sbb
mov
lock
xor
adc
or
sbb
subb
jnp
in
adc
sbb
rol
pop
pop
in
cltd
jns
mov
sbb
in
in
aaa
mov
and
repz
cltd
cmp
in
mov
test
fadd
imul
xchg
jmp
out
aam
lret
outsb
test
sbb
xchg
ficomps
mov
push
inc
xor
stos
aas
push
or
adc
cli
jge
mov
add
scas
mov
jle
mov
into
push
cmpsb
push
mov
pop
xchg
sub
cmpsb
lea
lods
add
push
pop
inc
mov
xchg
xor
dec
cmpsl
sub
incb
ret
aam
xchg
inc
pop
jl
dec
pop
cli
inc
and
imul
sub
int3
stos
jle
scas
loopne
popf
data16
xchg
sub
jp
xchg
adc
inc
mov
arpl
lahf
movsb
xor
mov
push
ss
lcall
jp
or
les
rcll
jb
sbbb
test
xor
xor
addb
jnp
decb
xchg
cmp
jns
push
out
and
lret
js
cmp
jp
cmp
subb
hlt
subl
inc
lahf
pusha
mov
iret
ljmp
lock
stc
hlt
xchg
mov
nop
jo
xchg
addr16
mov
jnp
mov
mov
popf
divl
xchg
jmp
callw
lea
add
dec
fstl
and
jnp
call
daa
adc
lds
mov
adc
repnz
lds
outsb
xchg
lea
xchg
mov
mov
gs
cs
stc
data16
sbb
dec
sub
repz
push
test
xchg
lret
pushl
orb
mov
push
push
jns
cmp
pop
adc
mov
into
loop
sbbb
push
lret
cmc
pop
mov
repz
mov
push
call
pusha
aad
jecxz
mov
call
push
jmp
test
cwtl
and
arpl
push
sub
add
adc
jnp
out
mov
xchg
mov
icebp
inc
mov
arpl
movsl
dec
lcall
addr16
push
ret
adc
mul
rorl
fisttpll
mov
icebp
and
inc
sub
scas
es
jno
pop
mul
jne
cmp
jno
xchg
ss
mov
cld
icebp
test
stc
sbb
insb
dec
xchg
push
mov
or
cmp
pusha
lods
xor
mov
xor
clc
loope
dec
inc
shl
fs
movsl
xchg
pop
jno
fsubrs
mov
or
ror
pop
into
fldcw
xchg
nop
jg
jl
and
push
mov
ret
imul
dec
jle
dec
cmp
jmp
push
mov
rcrb
movsb
imul
fldt
jnp
sbb
cli
dec
mov
jne
push
in
mov
mov
cs
leave
push
sbb
out
cwtl
adcl
stos
lods
stos
and
jge
adc
mov
or
and
xor
dec
test
jno
jecxz
dec
shlb
pop
mov
jns
pop
stos
xchg
pop
adc
repz
int
xor
mov
and
add
fisubrs
push
mov
rorb
adc
add
ret
ljmp
es
sbb
and
rorl
sarb
adc
pop
sahf
dec
pop
addr16
lock
push
daa
push
sbb
sub
add
mov
ljmp
sbb
scas
gs
jecxz
mov
in
popa
adc
push
mov
inc
cmp
mov
pop
aam
jb
stc
jb
gs
test
adc
loopne
popf
mov
xchg
lea
and
add
fidivl
stos
adc
call
out
fidivs
or
sbb
stos
adcl
loopne
std
pushf
bound
lods
sbb
adc
pop
pop
mov
push
fcomps
js
sti
push
cmc
rorl
mov
mov
shll
enter
loopne
lret
imul
add
jnp
mov
fistps
jno
xor
sarb
outsb
loope
out
rcrl
orps
out
test
pusha
inc
xchg
aad
ret
stos
mov
push
ret
movsb
add
cld
mov
out
pop
and
test
push
sarb
push
clc
lods
mov
mov
gs
push
push
repnz
sub
movsl
lahf
lds
je
fcoml
xchg
mov
pop
sbb
stc
sti
cmp
inc
mov
pop
xchg
popa
dec
je
test
test
or
ds
xchg
mov
pop
sub
jns
xchg
xchg
adc
jmp
ja
scas
pop
mov
cmpsb
and
pop
mov
out
fwait
sub
shrb
in
inc
into
inc
std
int
inc
adc
inc
xchg
add
inc
lret
insl
xchg
ds
mov
mov
add
lret
sub
test
icebp
pop
sub
jnp
stos
and
push
loope
inc
mov
jmp
in
xlat
pop
and
scas
jo
sbb
imul
ds
jg
cmp
mov
inc
andb
cmp
pop
jns
pop
inc
mov
shlb
lcall
mov
arpl
or
test
mov
lds
sub
jae
sub
shrl
xchg
ficoms
jbe
leave
jo
xor
cli
fdivrl
mov
jmp
ret
arpl
mov
insl
xor
sarb
in
inc
inc
sbb
leave
lret
inc
mov
daa
mov
mov
xchg
insb
pusha
xor
inc
rorb
sub
xor
fwait
sbb
sub
rclb
int3
lea
xchg
add
fmulp
and
dec
int
xor
pop
pop
fsubrs
sahf
popa
jo
cmp
mov
popa
sub
leave
and
add
xlat
es
mov
jae
lock
mov
inc
push
dec
ret
adc
cmpsl
adc
inc
mov
sysexit
sub
push
incb
add
xor
test
xchg
ret
and
arpl
jge
pop
pop
mov
popf
and
push
lcall
enter
gs
paddd
cmc
fbstp
dec
insb
cltd
lods
sahf
lcall
jae
loope
inc
out
cli
push
lods
inc
data16
jns
test
add
mov
xor
mov
pop
movsb
mov
inc
add
push
inc
in
ss
jecxz
mov
add
cmc
inc
xor
push
rol
jle
dec
outsl
cmpsb
dec
lea
fs
inc
bnd
imul
xchg
xor
cs
shr
ljmp
pop
lahf
sub
imul
lock
lret
je
pop
enter
lds
pop
fiadds
cmp
cmp
inc
clc
loopne
jle
xor
imul
out
jno
fdivr
inc
stc
pop
mov
push
ljmp
imul
repnz
adc
lea
inc
cmp
inc
cmpsl
fiadds
add
dec
pop
shrb
jp
out
mov
lea
push
pop
inc
les
outsb
out
insl
sub
jae
scas
sahf
add
inc
inc
in
popf
pop
out
xchg
daa
or
imul
inc
outsl
and
out
cli
icebp
mov
mov
push
inc
pusha
dec
jp
mov
or
shlb
xlat
addl
ret
mov
call
les
sbb
inc
push
add
xchg
nop
xor
fwait
pusha
leave
adc
mov
adc
inc
jl
cmp
lods
cmovnp
ret
in
mov
xchg
movsb
cltd
aad
mov
dec
xchg
clc
and
jne
pop
scas
xchg
xchg
mov
ret
push
lret
sub
cmp
cld
inc
mov
adcb
mov
and
fistpll
jb
jecxz
popa
mov
in
hlt
sbb
mov
xor
sbb
cmc
out
add
xchg
mov
jne,pt
into
out
mov
mov
in
imul
xchg
inc
xchg
mov
das
push
pop
mov
mov
les
and
or
mov
xor
pop
sbb
fisubs
div
cltd
gs
aas
hlt
xor
mov
mov
imul
xor
jb
mov
pushf
and
push
mov
test
icebp
jge
jge
jl
sbb
push
add
cmp
and
adc
scas
adc
jp
cmpsb
outsb
mov
mul
jnp
push
mov
jb
xbegin
int
xchg
jmp
int
xchg
push
sub
xchg
adcb
inc
sub
cmp
in
jne
jge
jecxz
lret
mov
push
mov
inc
mov
jae
dec
shlb
hlt
imul
ror
xchg
sbb
in
out
jno
shrl
inc
rcll
xchg
ds
std
popf
cld
mov
sbb
fcmovnbe
fbstp
in
aas
mov
push
push
out
movsb
mov
add
adc
push
pusha
pop
xor
notl
js
sahf
sahf
insl
in
add
callw
outsb
mov
add
push
addl
out
cmp
sub
lahf
sbb
test
pop
iret
sub
add
jns
jo
sbb
jns
clc
aas
sbb
pushf
mov
inc
or
loopne
imul
lods
in
adcb
push
pop
shll
xlat
dec
mov
cmp
sbb
mov
mov
push
andl
sbb
in
in
cmp
pop
xchg
movsl
mov
mov
sub
fsubl
sbb
dec
rorl
sarb
aas
fimull
pop
js
jmp
mov
mov
xor
in
push
pop
movsl
test
fs
sbb
shll
loop
pop
sarl
inc
push
sbb
ror
mov
mov
pop
enter
sub
les
add
enter
xchg
sarb
jns
lret
rsqrtps
lock
and
pushl
cmp
and
push
cmpsb
and
dec
scas
push
mov
dec
jns
mov
adc
cmp
inc
jnp
notb
inc
shr
pop
in
ljmp
sbb
lahf
push
ds
aas
notl
push
es
sub
inc
inc
rcr
sub
mov
mov
dec
xchg
add
push
lods
push
xor
dec
ret
rorb
ja
stos
push
sub
test
cmpsb
xchg
xchg
cmpsb
xchg
int
add
jb
and
in
outsl
mov
andl
and
gs
lret
pop
xor
jp
nop
shrl
ja
mov
mov
inc
imul
mov
sahf
adc
or
mov
imul
jp
fistpl
and
cmp
out
in
xchg
sub
pop
fwait
inc
pushf
and
push
or
fcoms
push
leave
ja
sahf
jecxz
mov
jb
inc
imul
sti
jne
shrl
pop
push
inc
mov
sbb
inc
in
or
rcrl
push
xlat
xor
dec
add
mov
mov
xor
push
sub
lcall
sti
push
insb
pop
adc
push
push
fsubrp
sub
fisubrs
repz
aaa
sbb
push
jl
imul
popf
movsl
loopne
scas
adc
daa
mov
add
out
int3
adc
enter
int3
xchg
rcrb
ljmp
xor
scas
mov
inc
repnz
js
nop
xchg
xchg
sbb
sub
adc
rcll
or
add
sti
adc
addl
jle
fcoml
dec
sbb
xorl
gs
push
xor
inc
xchg
push
inc
mov
push
mov
dec
clc
nop
cmpsb
outsb
push
add
clc
cwtl
imul
fsubrl
xor
dec
in
add
jecxz
popa
xorb
sahf
cmp
pop
pop
jg
les
fmuls
sahf
jbe,pt
pop
es
pop
push
xchg
push
or
dec
je
fcoms
pushf
fisttps
inc
stc
fs
daa
hlt
jg
gs
loop
mov
push
push
das
insb
in
and
flds
xchg
mov
jnp
aaa
push
cmp
and
dec
sub
xor
xor
pop
fwait
popl
std
in
sub
sub
xlat
mov
sub
push
insl
xor
icebp
mov
jb
ds
and
push
dec
jae
shll
sbb
sub
dec
jmp
xchg
les
jae
jo
adc
sub
mov
cmp
jne
shl
jbe
pop
movsl
lret
nop
push
push
pop
std
xor
add
aad
cld
mov
jo
mov
inc
loopne
mov
sbb
decb
xchg
or
out
mov
data16
fnstenv
ret
push
and
sbb
jge
lods
mov
sbb
loopne
or
scas
xchg
shl
test
mov
push
mov
outsb
dec
fistps
les
js
cmp
or
adc
or
lds
addr16
mov
cld
inc
sahf
daa
shll
stos
das
adc
pop
xchg
mov
dec
mov
add
inc
pushl
lods
pushl
xor
dec
jp
and
sahf
rcrl
fisubrl
push
in
add
sbb
jnp
add
jmp
ss
test
flds
jo
loope
es
hlt
test
sbb
lahf
outsb
sysexit
in
jmp
mov
xchg
out
lds
cwtl
lcall
stos
jg
jl
jo
or
sub
mov
clc
jne
leave
adc
fs
mov
adc
lret
xor
dec
sbb
mov
mov
scas
cmc
mov
lahf
lds
rclb
outsb
sub
pop
inc
dec
sarl
into
cwtl
test
lods
mov
dec
pop
repnz
push
inc
fnstsw
mov
sub
cmpsb
je
or
lea
sbb
sbb
call
pop
cwtl
imulb
mov
add
mov
inc
jns
pop
fsubr
in
push
sub
sarl
scas
push
pop
push
jae
leave
cli
inc
cwtl
or
in
mov
xlat
rcrl
or
test
xchg
cs
test
pop
push
shrl
fisttpl
adc
adc
pusha
sbb
dec
or
and
mov
jmp
call
out
daa
daa
ret
mov
push
out
pop
adc
mov
jle
je
imul
lock
addr16
imul
push
cmp
inc
sub
and
cmc
fdivrp
fisttps
mov
jo
jl
adc
popf
outsb
notb
push
jns
adc
jmp
aas
arpl
into
mov
mov
sub
rorl
xor
mov
daa
push
cmp
jae
jno,pt
sahf
inc
dec
outsb
push
ljmp
lret
mov
loopne
and
inc
int
icebp
es
dec
lods
sbb
rorl
out
idivb
push
xchg
loope
daa
aas
jbe
inc
scas
arpl
in
nop
pop
or
or
push
dec
leave
mov
out
pop
test
in
aad
inc
gs
pop
loop
add
cmp
in
lods
xor
imul
clc
bound
loope
or
gs
lret
xchg
or
fwait
sbb
arpl
fsub
push
jno
push
shll
iret
cwtl
test
xlat
lret
cltd
inc
mov
jp
movsl
addb
xchg
repnz
pushf
ja
jmp
or
add
cmp
daa
dec
push
adc
jmp
sbb
movsl
frstor
cli
inc
and
scas
fnstcw
in
xchg
fsubs
icebp
cwtl
fwait
inc
add
nop
insb
pusha
inc
es
jbe
jbe
fwait
jne
sub
adc
loop
sub
loop
ret
dec
xor
lock
adc
stos
adc
addr16
mov
xchg
push
mov
mov
sti
mov
mov
or
out
inc
and
mov
fbstp
jge
out
xchg
addr16
mov
leave
jnp
cmp
and
push
inc
jb
enter
jge
in
testl
fsubrs
test
push
ljmp
dec
jle
mov
inc
ljmp
sbb
ret
ja
or
loopne
fwait
pop
movsb
cmpsl
add
shlb
push
ret
jb
adc
mov
inc
in
clc
es
ja
adc
andl
outsl
mov
inc
je
lret
mov
jmp
sbb
sub
lahf
lret
pop
daa
fcmovne
sbb
out
push
mov
fstpl
mov
clc
add
bound
xchg
popa
test
inc
inc
pop
js
mov
push
mov
test
lods
adc
cmpsb
add
lret
cmp
sti
push
dec
cmpsb
pop
adc
and
mov
sbb
cmpsb
mov
in
test
and
cwtl
mov
or
sbb
movsb
testb
insb
jmp
xor
dec
shlb
jae
divl
movsl
mov
inc
sbb
adc
sbb
daa
xor
and
test
icebp
cmp
testb
pop
add
repnz
mov
pop
lcall
sub
test
or
pop
inc
stos
pop
push
rcrb
pushf
pop
xchg
aaa
mov
cmp
cs
dec
sbbb
negl
lret
lods
pop
jnp
scas
shlb
xor
dec
icebp
push
pop
fbstp
mov
mov
xchg
jl
cmpl
add
add
stos
rcrl
lods
pop
sub
test
push
mov
xlat
dec
mov
cld
cmp
movsl
es
iret
cmpsb
mov
cli
imul
gs
gs
push
aam
hlt
push
mov
mov
gs
dec
out
sub
rolb
pop
jo
cmp
mov
adc
sub
pop
xchg
jae
mov
decb
inc
push
call
testl
popa
iret
stc
ja
jae
xor
mov
push
fisubl
adc
mov
clc
in
jmp
das
mov
add
es
test
cmp
xchg
test
cmp
push
sub
enter
sbb
ror
cmp
inc
clc
xchg
xor
jmp
inc
out
push
xlat
pop
pop
das
pop
jae
or
add
or
push
xor
and
aaa
iret
push
mov
loopne
ja
and
fists
and
push
cmc
mov
iret
out
shlb
fdivrs
int
clc
pop
add
repz
sub
cmp
cmpsl
aad
dec
loopne
filds
out
lods
in
shll
adc
mov
mov
jae
test
hlt
repz
push
xor
cmp
mov
mov
ret
loop
shl
ficomps
jb
and
test
mov
jns
adc
in
js
push
fstps
pop
and
mov
int3
mov
xchg
cltd
xlat
jle
jle
dec
pop
pop
sbb
cld
dec
sub
adc
lcall
cwtl
leave
in
inc
pushf
add
or
mov
lret
jb
insb
sub
in
or
or
imull
jo
push
mov
insb
jmp
jne
fldcw
jmp
pop
sub
or
pop
pushl
mov
lods
inc
dec
imul
ljmp
cs
cmp
mov
stc
fistpll
lods
mov
sbb
fbld
and
add
std
repnz
jnp
test
sbb
loop
sub
mov
ret
sub
cli
inc
addr16
sahf
sahf
cmp
aad
cld
pop
stc
jg
mov
lfs
stos
or
mov
xor
push
sub
xchg
mov
fcmovnbe
mov
cwtl
mov
aad
fwait
or
xor
and
mov
inc
xor
adc
pop
mov
inc
dec
jmp
movsb
dec
push
int
scas
loopne
add
xorb
lds
mov
mov
andb
insl
addr16
xor
xor
jl
subb
mov
bound
lods
cmp
ret
adc
js
cld
shrb
cmp
jp
mov
push
call
push
leave
inc
jg
sub
out
stos
or
push
jg
out
lods
jle
and
out
push
xchg
movsl
sub
cmp
cs
mov
mov
cmp
dec
addr16
out
js
mov
mov
loop
jp
dec
or
aas
popf
push
pmuludq
sbb
jbe
xchg
dec
push
mov
adc
pop
pop
mulb
and
fildll
orl
xchg
enter
pushf
fnstcw
mov
inc
jl
int
flds
adc
xchg
popf
xlat
xchg
clc
add
cmc
add
mov
out
xor
into
and
fucom
sbbb
repz
pop
inc
test
int
aad
sub
push
or
xor
and
mov
jl
sub
or
js
or
imul
mov
out
sub
mov
adc
sahf
aam
cld
in
popa
insl
xchg
jne
add
xchg
mov
mov
mov
add
cmp
jg
pop
stos
xor
dec
iret
jns
inc
ss
add
mov
jl
cmp
pop
inc
xchg
or
in
xchg
add
pop
dec
decl
int
cmp
mov
jg
or
jp
pop
aad
scas
mov
pop
jno
aaa
mov
inc
pop
dec
dec
cld
stc
xchg
shll
xchg
sbb
or
xchg
jns
sub
ficoms
xor
mov
xchg
leave
xchg
cmp
insb
dec
aam
inc
mov
fcmovnb
mov
repnz
and
adc
push
outsl
scas
rcrl
cltd
sbb
iret
sub
arpl
dec
gs
sti
ret
inc
test
das
or
hlt
mov
sbb
dec
mov
and
shrw
mov
jmp
jns
pop
jbe
pop
sbb
iret
cltd
stos
rclb
push
test
cmpsb
aas
mov
sahf
mov
mov
mov
xchg
push
in
mov
mov
add
dec
fwait
mov
mov
inc
pop
test
or
in
hlt
imul
pop
sti
dec
stc
test
or
adc
dec
call
sbb
cwtl
inc
out
ljmp
ljmp
mov
cltd
fcom
push
push
mov
outsb
sub
xchg
add
sbb
mov
mov
data16
jae
push
lahf
add
mov
clc
sub
inc
ds
cmp
sub
adcb
repnz
dec
roll
test
xchg
shlb
cwtl
sbb
ss
add
xor
xor
in
jge,pt
push
sbb
push
pusha
or
xorl
cwtl
mov
mov
jmp
inc
test
test
xlat
das
adc
loopne
pushf
adc
arpl
push
aas
mov
sti
bound
cltd
out
shr
daa
push
xor
xchg
fdivl
add
test
popa
mov
adc
mov
test
sbb
add
and
test
icebp
dec
xor
xor
int
cld
js
sahf
push
cltd
pop
in
mov
cli
inc
outsl
int
out
cli
pushf
add
jle
inc
and
fstpt
scas
inc
dec
cli
sbb
or
or
sbb
cwtl
imul
push
outsl
inc
sub
popa
mov
cmpsl
mov
scas
push
sub
or
clc
pop
call
lea
int3
stos
or
and
imul
add
cmp
pop
lret
ss
loope
and
xchg
or
cltd
jo
and
dec
xchg
scas
out
out
xor
js
insl
into
sti
popl
mov
aaa
add
mov
das
test
jne
out
inc
in
and
cmp
imulb
push
or
enter
cld
mov
arpl
xchg
ja
dec
dec
xchg
push
inc
mov
setp
iret
ljmp
iret
push
fwait
mov
lret
loope
push
mov
das
loop
mov
enter
mov
xor
ja
xor
ds
subl
outsb
shr
fsubp
cmp
imulb
daa
sub
mov
sahf
dec
clc
bound
pushf
jnp
jns
jo
data16
ja
xchg
mov
pop
or
inc
icebp
mov
aam
in
cld
test
mov
inc
scas
cld
aam
add
push
or
pop
outsb
xchg
cltd
stos
insl
cli
mov
pop
inc
pop
jg
into
enter
and
fwait
lds
push
lahf
fucom
inc
aad
push
xchg
insb
cwtl
xor
sbb
push
hlt
sti
adc
jno
sahf
out
popa
mov
mov
sub
cmp
insb
lcall
mov
ja
mov
pop
xchg
xor
adc
out
test
popl
lods
popa
ss
lds
jo
in
push
mov
fucom
mov
cs
mov
mov
sbb
out
add
adc
pop
cmp
test
imul
lcall
cltd
mov
mov
xchg
push
jo
pop
xchg
mov
dec
add
sbb
and
mov
lahf
add
adc
popa
jns
jp
add
aas
and
mov
push
mov
cmp
and
push
or
pop
popl
pop
jge
mov
and
xor
push
or
pop
push
je
push
enter
faddl
cmc
push
ljmp
out
sbb
dec
movsb
xor
imul
stc
mov
mov
stos
lds
lods
push
cmp
mov
pop
pusha
cmp
pop
sbb
xor
arpl
sbb
mov
fwait
mov
sub
cmp
ret
push
inc
push
bound
sahf
lret
out
xchg
jne
xchg
pop
movsl
call
jns
mov
mov
roll
jb
sbb
jge
lds
jle
out
out
lcall
jo
mov
xor
in
mov
adc
mov
mov
jl
sti
pop
fmuls
push
out
cmovns
sub
das
push
popf
adc
xchg
mov
xor
inc
adc
cwtl
xor
ja
cli
out
movl
testb
loop
mov
mov
inc
xchg
and
ss
push
call
test
jns
sar
pop
jae
stc
jae
bound
jecxz
push
xchg
dec
xor
test
and
arpl
lods
rol
int3
lret
cli
popf
mov
cmp
aad
out
mov
aaa
mov
out
daa
test
mov
sub
hlt
testl
loopne
pop
lods
loope
pop
nop
scas
stos
add
dec
addr16
popf
pop
test
add
out
mov
add
fadd
sub
pop
pushf
shr
inc
cli
jo
xchg
dec
mov
lods
mov
mov
je
jno
adc
lods
adc
shrl
mov
push
scas
int
rcll
mov
mov
inc
dec
outsb
push
add
dec
cmp
shlb
into
movsb
int
and
sbb
shlb
cmp
lret
pop
shrb
sub
sub
xchg
sbb
sbb
and
pop
dec
into
icebp
fdivr
xchg
int
cmp
fs
push
add
cmpb
sbb
xor
hlt
mov
cmp
test
pushf
sbbb
data16
lahf
mov
xor
jmp
jg
jg
cmp
pusha
xchg
cmp
fstpl
cmpsl
ljmp
in
add
lcall
pop
inc
jb
cmp
dec
and
sub
leave
sub
push
popf
mov
xchg
cmp
mov
cmp
jle
nop
in
mov
xchg
into
dec
push
jl
add
push
aam
out
push
test
jbe
xchg
sahf
std
loop
inc
xor
cli
adc
xor
bound
mov
insb
aas
xchg
aam
sbb
inc
stos
pop
cltd
adc
pminsw
pop
dec
out
shll
aaa
daa
pop
test
sahf
negl
adc
mov
inc
dec
dec
cltd
jb
mov
pop
test
push
jns
add
and
mov
and
lods
mov
lret
xchg
push
scas
adc
push
mov
push
gs
jmp
pop
lods
dec
jmp
and
popa
jmp
shlb
xor
scas
mov
into
xorl
jp
lcall
stc
xor
aam
das
sarl
insl
rol
jecxz
cmp
loopne
mov
popl
enter
std
jecxz
sub
stos
adc
mov
ret
sub
mov
test
sub
pop
push
push
inc
cmp
mov
and
jl
les
sarl
ds
negb
popf
xchg
pop
mov
cmc
outsb
shlb
fbld
dec
jo
hlt
xor
jb
sbb
cmp
and
jbe
mov
push
xchg
addr16
lret
sub
test
cli
mov
mov
cmp
inc
ja
mov
cmp
shll
cmpsb
push
and
addb
mov
outsl
sbb
and
rol
mov
mov
push
flds
mov
jl
cltd
sub
mov
xchg
mov
dec
pop
pusha
lcall
dec
sub
bound
cwtl
adc
adc
emms
lods
scas
mov
ret
mov
xchg
call
xor
push
mov
sahf
lods
and
mov
ja
daa
dec
sbb
cmp
fimuls
add
fs
mov
das
sub
inc
cld
or
js
xor
loope
stos
repnz
xor
adc
lahf
xchg
inc
sbbb
faddl
out
stc
lods
lds
jecxz
add
mov
and
pop
mov
xchg
mov
sbb
out
pop
fdivrs
add
cmc
or
inc
pop
mov
pop
sbb
mov
test
pusha
arpl
loop
xor
jecxz
push
mov
mov
jne
mov
repnz
outsb
in
fldenv
xor
mov
out
test
sbb
push
pop
sbb
int3
jecxz
lahf
or
mov
int3
ficoms
mov
mov
push
lods
dec
and
or
es
subl
push
out
sbb
or
jno
push
pop
negl
cltd
push
jnp
subl
add
cli
insb
pop
dec
out
popf
ret
xor
adc
and
and
push
stos
in
fisttpll
jecxz
mov
insl
mov
jnp
shrl
leave
mov
test
addl
movsl
lods
sbb
stc
push
jne
dec
push
inc
out
lock
sub
adc
mov
fcmovb
imul
aaa
ss
mov
loop
push
jae
movsl
cmpsb
sbb
ljmp
sbb
nop
mov
roll
dec
rorl
pusha
or
mov
rolb
sbb
in
sbb
mov
outsl
jp
mov
idiv
nop
cmpsl
push
pop
jg
pop
cli
fcmovnb
and
movsl
pop
mov
push
in
pop
dec
sti
dec
loopne
out
es
dec
xor
or
jl
push
movsl
nop
jmp
sub
into
add
aaa
scas
mov
outsl
push
adc
fwait
pop
icebp
mov
pushf
stos
add
pusha
pushf
hlt
loopne
gs
lret
cmp
xchg
or
in
jbe
test
adc
vmwrite
cltd
rorb
jae
sub
jne
push
icebp
xor
inc
mov
repnz
xchg
lods
stos
loope
xor
filds
cld
aam
loopne
popf
mov
in
outsb
xor
inc
in
jp
outsb
mov
adc
push
jle
dec
testl
push
jae
insb
popa
jae
cmp
mov
sub
xor
jnp
lock
sti
scas
jns
push
out
lahf
imul
enter
popf
lods
sbb
rorl
push
sti
adcb
shrb
cs
pop
sub
cmp
cltd
xchg
in
dec
movsb
jns
sbb
test
negb
pop
adc
inc
add
shl
xchg
out
shll
cmpsl
je
xchg
out
xchg
dec
out
and
outsl
jmp
pop
xchg
inc
daa
js
int3
leave
lds
data16
fidivrl
shll
pop
cmp
cli
lea
cmc
mov
pop
add
lea
sub
add
mov
mov
shll
push
test
popa
movsl
std
lret
stos
xchg
push
out
icebp
fbstp
mov
xchg
cmpsl
sub
inc
xchg
sub
lock
shl
and
sbb
pop
mov
push
push
out
addr16
fwait
cli
test
fwait
out
jo,pt
lock
int
mov
sub
daa
mov
je
push
mov
out
mov
inc
mov
inc
lea
adc
inc
and
iret
movsb
mov
ds
ret
test
mov
add
mov
inc
lcall
shlb
push
or
std
sub
cld
adc
sbb
push
pusha
es
cmp
xchg
scas
mov
out
xchg
dec
cmpsl
cmp
pop
addl
arpl
sub
imul
and
xrelease
dec
out
outsl
mov
push
enter
cwtl
push
ret
or
lret
xor
daa
adc
jge
pop
mov
mov
in
mov
add
popa
push
jo
movsb
lock
cmp
pop
addr16
mov
sbb
fabs
mov
inc
and
call
xchg
or
push
adc
mov
push
fcompl
mov
aad
inc
mov
arpl
arpl
xor
mov
pop
out
lahf
mov
or
and
mov
mov
shll
mov
repnz
or
jb
rcll
dec
inc
test
add
xlat
mov
dec
repnz
in
sahf
pop
aam
mov
fsubrl
pop
in
dec
mov
add
jl
dec
add
mov
sub
jae
stos
cmp
hlt
imul
popa
lahf
call
or
sti
stc
out
push
xor
int3
mov
flds
out
xchg
fidivs
jnp
cmp
mov
int3
inc
cmpb
stc
adc
mov
xor
push
sub
xchg
xchg
icebp
jge
or
and
jns
shl
cmp
mov
je
sub
push
cs
es
push
sahf
sti
or
pop
mov
subl
pop
cmp
sbb
push
jns
cmp
cmp
pop
clc
mov
pop
mov
add
push
dec
pop
xor
repz
cmpsb
imul
imul
xor
inc
pop
insb
mov
jae
movsb
mov
lock
mov
jle
inc
lahf
xchg
dec
cmp
cmpsl
mov
movsl
rcl
mov
fsubl
jle
xor
fbstp
lahf
jl
sbb
popf
push
jle
inc
icebp
jmp
and
mov
xor
cld
fmulp
push
inc
cmc
popf
xor
pop
call
lcall
cmp
jg
lds
inc
lea
int3
xlat
and
test
movsb
outsl
jp
cmp
outsl
xor
mov
loop
mov
lods
pop
cs
fldcw
test
es
fists
rcrb
cmp
fwait
test
mov
into
mov
pop
in
xor
mov
xor
enter
stos
xchg
in
daa
pop
or
mov
jo
test
aaa
push
cmp
pop
lahf
stos
inc
call
in
cmpsb
pop
mov
iret
cmp
sbb
sti
cmp
in
sti
loopne
and
test
in
and
mov
push
cmp
cli
mov
add
or
cmp
icebp
popf
gs
stos
ss
aad
cmp
dec
imul
pusha
nop
or
push
jnp
cli
xchg
int
pushf
jns
in
sbb
fdivp
mov
push
mov
shl
sbb
test
fs
mov
repz
std
orl
insl
adc
and
test
aam
test
dec
sar
in
cs
lahf
inc
sub
inc
test
mov
shr
out
xchg
add
enter
out
mov
arpl
mov
scas
jo
ja
sbb
add
jmp
or
pop
in
outsl
mov
in
mov
inc
mov
push
and
add
mov
aaa
es
mov
pushf
jecxz
fmuls
in
adc
adc
sbb
mov
xchg
std
dec
popa
mov
outsb
imul
cmp
jns
xor
enter
adc
jl
lret
sbb
lods
jp
std
sbb
aad
rol
fstl
outsb
jmp
push
inc
pop
into
imul
dec
iret
dec
insl
stos
std
aad
ljmp
adc
mov
sub
mov
sti
sbb
inc
jl
jle
es
sbbl
daa
hlt
sub
sub
jb
popf
fisubs
mov
cmp
and
aaa
xchg
and
push
push
idivb
jge
lahf
out
lds
or
nop
movsl
jecxz
mov
ret
adc
loopne
psrld
icebp
dec
jp
in
aas
xchg
fucomip
ja
ror
sbb
cld
jle
mov
and
clc
cs
push
ret
scas
dec
cltd
sub
fdivs
xor
sti
sub
rep
stc
clc
or
xor
pop
mov
sbb
rclb
or
daa
fwait
aad
jo
addr16
mov
adc
and
push
push
push
mov
push
and
out
pop
fldt
mov
iret
xlat
mov
test
vdivps
and
faddl
fnsave
in
or
add
leave
enter
fdivr
shrl
mov
xchg
pusha
mov
adc
ja
or
sub
std
xor
xchg
pmaxsw
in
call
or
add
rcll
mov
loop
fildll
int3
sbb
outsb
testb
fdivrl
push
ljmp
and
test
popf
imul
xchg
dec
sub
sub
pop
pusha
mov
jne
lret
aas
andl
mov
pop
dec
test
pop
enter
sahf
push
cld
xor
sti
and
xchg
push
pop
in
ljmp
jp
rcr
xor
and
jmp
lret
and
push
jbe
sbb
lea
fistpl
negl
jl
out
jno
adc
mov
sub
pop
std
push
sti
out
enter
pop
out
int
dec
add
std
sbb
inc
fistps
and
test
rcrl
insb
push
int3
inc
mov
es
loope
in
popa
jmp
xchg
xor
push
incb
movsl
leave
xchg
xor
sub
xor
xor
dec
push
cli
mov
loope
out
adc
aas
jo
xchg
iret
sub
adc
in
mov
pop
sub
or
or
je
call
and
xor
aad
fisttpll
and
out
mov
jle
aaa
jg
mov
mov
cwtl
out
sbb
imul
mov
mov
das
push
pusha
pop
fisubl
outsl
sbb
cmp
nop
push
jno
ret
add
jo
mov
dec
and
mov
mov
xor
aas
test
or
cmpsb
push
into
jp
or
dec
sub
mov
mov
mov
int3
jmp
call
ds
fadds
push
sbb
lahf
or
rolb
and
fstpl
push
dec
enter
mul
ds
loope
mov
cli
dec
lcall
std
movl
ds
jge
popa
es
lods
data16
addr16
jmp
ud0
insb
in
clc
adcl
xchg
mov
xor
insb
jl
pop
dec
sbb
ja
mov
out
and
movsl
shl
fstpl
clc
pusha
adc
insl
mov
push
push
xchg
testl
addr16
test
mov
jns
lock
mov
pop
mov
sub
sub
cld
mov
out
xchg
ret
jno
out
aam
and
pop
dec
dec
xchg
pop
sbb
sub
adc
dec
fdivs
mov
paddsw
fidivs
mov
xor
shll
mov
adc
in
jl
push
frstor
jecxz
les
jo
int
out
pop
xchg
in
dec
int3
sbb
cs
mov
ja
xchg
sti
xlat
sub
push
xchg
push
push
mov
mov
nop
decb
inc
fcomip
adc
sub
jl
mov
mov
adcb
fmul
pop
pop
loop
add
adc
cltd
cmpsl
pop
fidivs
sub
push
xor
lea
pop
sub
imul
cld
ret
aaa
inc
pop
cld
lods
adc
mov
xchg
and
inc
push
loop
mov
sub
adc
jbe
pop
cltd
mov
sahf
sti
sahf
in
sbb
mov
add
or
lcall
sbb
pop
jb
adc
js
and
das
dec
sarb
addl
hlt
inc
cli
push
pop
enter
add
hlt
ja
icebp
ret
and
jmp
jo
dec
int
adc
and
fldl
fistpl
decl
cld
in
or
adcl
jo
or
mov
lds
insb
pop
cmpsb
daa
loop
out
cmp
mov
cmpsb
cmpsl
cwtl
inc
sub
push
in
push
fs
jae
icebp
jns
push
mov
lahf
cmc
push
jb
into
sbbb
inc
movsl
lods
push
and
or
xchg
add
pop
stc
and
sbb
push
lret
inc
jno
sbb
mov
and
lahf
dec
bound
push
pop
inc
jns
cs
mov
inc
lods
add
mov
pop
jl
call
lret
imul
pop
cmp
cld
ficomps
movsl
mul
movsb
push
mov
es
ret
xchg
dec
pop
sub
mov
xor
dec
mov
jnp
xor
leave
loopne
sub
stos
cld
jb
xchg
jns
inc
mov
sbbb
cmp
rcr
icebp
pop
repz
pop
xchg
mulb
enter
out
cmp
cmp
int
hlt
aaa
mov
and
imul
xorl
jnp
push
xchg
dec
xchg
cli
in
mov
add
int
mov
pop
and
adc
repnz
sbb
dec
iret
das
movsb
or
pushf
je
pop
into
fidivl
enter
loope
outsl
imul
xor
icebp
sbb
jb
mov
movsl
sbb
push
or
mov
dec
loopne
pop
fs
jnp
in
add
sub
and
dec
push
sahf
fisttpl
jns
push
push
jp
arpl
xor
and
adc
or
mov
xor
test
fprem1
xor
push
jbe
cmp
jg
xlat
cmp
shlb
dec
nop
sarb
lock
imull
shl
adc
test
cld
mov
jl
scas
lea
aam
cmp
sbb
mov
mov
dec
jb
sbb
rcll
jmp
aaa
addb
imul
xchg
fimull
cmp
inc
lret
dec
pop
xor
mov
mov
or
hlt
out
ss
xchg
idiv
xchg
mov
jb
inc
test
fsubrs
mov
mov
pop
mov
adc
lret
cmp
imul
push
inc
mov
stos
movsb
pushf
mov
mov
je
inc
pop
stc
shrb
jg
aad
out
xchg
pop
addb
lea
pushf
movsl
sbb
add
sub
add
iret
cld
sbb
ds
add
test
js
add
lret
ss
aas
mov
outsl
into
mov
push
cmp
ja
pushl
bound
insb
maskmovq
testl
mov
cmp
mov
flds
rol
test
out
fdivrl
inc
pushf
hlt
push
adc
jl
leave
call
fnstenv
leave
movsb
sub
in
inc
mov
push
lods
mov
lods
xchg
xlat
mov
scas
lahf
sbb
in
add
mov
outsl
movsb
jg
jge
stc
pusha
mov
sub
into
dec
loopne
mull
xchg
imul
jb
mov
test
jb
cmovg
sbb
leave
loopne
shl
aam
orb
ja
clc
mov
cmpsl
or
pop
mov
movsb
push
divl
sbb
xor
sbb
and
push
repnz
mov
dec
pop
cmp
rol
in
sub
xchg
insl
shlb
shrb
ret
int
mov
aaa
mov
ficompl
add
mov
lock
sbb
dec
out
and
iret
nop
and
mov
ljmp
out
add
out
jecxz
out
fbld
mov
iret
or
pop
jnp
sbb
sarl
adc
in
cmp
stos
addl
inc
jmp
addb
jg
inc
lds
daa
adc
in
ror
inc
je
daa
ds
js
dec
test
lds
push
xor
ret
outsl
jns
mov
mov
mov
push
js
cld
nop
out
shlb
jecxz
fimull
lods
lret
xchg
jle
cmp
mov
clc
je
nop
outsl
push
mov
imul
aaa
inc
in
mov
in
sub
xor
mov
push
and
push
stc
sub
ss
sub
ss
data16
xchg
jp
cmpsl
stos
insl
rcrb
loop
out
cmc
gs
lods
insl
inc
cwtl
jo
roll
cmc
push
aaa
mov
cli
arpl
mov
cmpl
ds
cmp
sub
pop
inc
xchg
sbb
jp
push
arpl
movsb
fnsave
es
jae
nop
lea
int
pop
sub
rcrb
mov
aaa
mov
dec
push
and
sub
js
mov
pop
cmp
aaa
xor
popa
lcall
cltd
cmpsl
jmp
dec
pop
push
mov
hlt
outsb
mov
jno
adc
jb
enter
dec
leave
push
inc
pop
jnp
outsl
leave
movsb
fiadds
scas
pop
cs
push
loope
loopne
outsb
add
test
add
orb
fwait
adc
fdivrl
lods
adc
jecxz
lods
pop
sbb
cld
mov
xor
icebp
aas
sti
jp
int
add
test
pop
mov
pop
nop
jg
and
sbb
push
dec
xor
arpl
aam
mov
dec
in
push
xchg
dec
aam
aam
inc
test
in
imul
push
popf
xor
stos
shlb
sub
inc
xchg
mov
mov
loopne
push
add
lds
dec
test
xor
and
jo
inc
je
test
pop
addr16
popf
mulb
dec
mov
xor
sbb
inc
lods
inc
sub
insl
push
xchg
mov
adc
test
hlt
push
and
ret
dec
sysenter
jnp
std
pop
fcoms
jns
or
aam
pop
mov
add
fdivr
testl
lods
add
adc
and
js
mov
adc
aam
xchg
lods
push
sbb
iret
xchg
pusha
and
mov
sti
jae
fisttpl
insl
cmp
shll
sub
pop
add
std
xchg
dec
repnz
jg
push
in
mov
push
jne
push
fcmovu
sub
repnz
inc
dec
xchg
repnz
and
mov
cmp
mov
rorb
aad
pop
sti
mov
pop
jle
pop
add
push
xchg
jge
jp
push
pop
scas
and
xchg
aaa
imul
mov
outsb
lods
enter
daa
mov
fs
push
mov
into
ficoml
pop
leave
xchg
jo
cmp
cmc
stos
and
xor
in
stos
fnsave
ds
xor
stc
sahf
sbb
cmpsb
lret
add
pop
push
call
mov
sbb
cmpsb
xchg
mov
rcrl
mov
aam
and
out
xor
leave
sbb
stos
and
es
xor
or
xchg
loopne
pop
mov
mov
insb
adc
inc
push
dec
enter
jge
push
xor
xchg
ja
xchg
xchg
imul
es
xchg
out
in
push
inc
cmp
into
inc
mov
mov
out
mov
add
cmp
repz
sarb
xchg
movsb
and
pop
dec
scas
lock
dec
xor
add
cmp
adc
fs
test
pop
mov
insb
xlat
and
loopne
cmpsb
aad
inc
jns
mov
inc
dec
fistpll
jle
xchg
and
enter
sbb
adc
inc
call
xchg
repz
or
in
jl
bound
sti
mov
outsl
mov
mov
or
push
pop
inc
dec
hlt
out
pop
push
outsb
shlb
mov
sbb
pop
pop
jp
add
sub
in
nop
pop
hlt
int3
jg
inc
push
fwait
into
stc
mov
aas
sar
aad
aad
sub
jl
pop
pop
and
jae
subb
test
insl
adc
pop
inc
dec
aad
std
inc
out
rorb
jae
popf
dec
fdiv
leave
nop
sbb
and
fiadds
mov
or
cmp
arpl
mov
pop
or
out
pusha
push
rclb
enter
cmp
sbb
mov
mov
ret
push
cwtl
push
mov
pop
lods
xchg
push
lods
xchg
pop
lahf
pusha
mov
into
and
dec
je
cmp
outsl
xor
cmc
jle
movsb
ja
push
or
push
ja
sub
aas
js
adcb
sub
mov
xor
lods
and
jl
mov
js
and
inc
and
mov
shll
mov
aaa
les
push
es
mov
std
add
pop
push
jle
adcl
adc
mov
inc
pop
xor
rcll
mov
add
jnp
or
mov
popf
imul
cwtl
movsb
mov
movsb
push
and
lcall
and
fs
loopne
mov
sti
add
mov
cmpsl
test
rcrl
aad
ret
add
sbb
jp
repz
pop
ds
cwtl
pop
push
dec
out
mov
jle
cmp
iret
mov
insl
jecxz
movsl
jmp
adc
mov
call
sub
mov
je
stc
mov
jnp
dec
push
arpl
dec
sahf
out
cli
add
xchg
adc
jl
fmull
imul
xor
setb
sub
push
and
and
repnz
pusha
xchg
jns
push
lock
jp
add
mov
xor
loop
shlb
cmp
adc
gs
mov
mov
mov
jae
je
scas
ret
ret
inc
cmp
stc
jmp
jbe
out
xchg
outsl
cmpsb
jne
sbb
lods
push
lcall
cmp
xor
dec
mov
mov
sbb
into
inc
adc
xchg
scas
push
lret
rcrb
shll
fmul
sbb
push
jno
shll
jb
xchg
popa
pop
xchg
insb
xchg
or
cmpsl
cmpsb
out
je
adc
xor
jl
push
cmp
inc
xchg
insb
loopne
inc
aam
xchg
flds
aaa
inc
adc
adc
sub
cmp
adc
sub
das
jl
jle
in
outsb
sub
subl
jns
out
jnp
sbb
jp
xor
xor
lahf
sbb
dec
jg
inc
mov
sub
ja
sub
jne
imul
inc
xchg
sbb
dec
les
mov
addr16
popa
xchg
mov
lret
adc
xor
dec
push
sbb
adc
xor
lcall
sub
bound
mov
adcl
inc
insl
shll
inc
jmp
push
aam
popa
popa
mov
jns
dec
cmp
out
sub
pop
bound
lahf
fstpt
aas
cmp
sbb
fildl
js
mov
mov
lock
mov
xchg
int3
sbb
dec
fcoml
inc
ljmp
cmp
and
imul
fisttpl
push
mov
pop
mov
lret
adc
imul
or
fsubrs
fisubl
pop
out
cmpsb
repnz
fld
popf
in
daa
jp
mov
xchg
push
pop
negb
stos
mov
negl
pop
xor
mov
stos
xchg
push
add
std
adc
mov
fsubs
dec
fstpl
mov
pop
push
sbb
and
pop
aam
cli
and
stos
jbe
out
xlat
ja
sub
in
fdivr
or
fidivrs
scas
mov
dec
and
orl
sub
jns
jbe
insl
idiv
xchg
lcall
adcl
enter
adc
jbe
dec
xchg
adc
cltd
scas
jecxz
fcompl
rclb
sarb
cmp
mov
push
and
mov
xchg
jp
and
repz
dec
dec
mov
and
and
mov
push
iret
xchg
in
inc
pusha
orb
out
in
fisubrs
and
xchg
mov
dec
xchg
push
sbb
xor
subl
xchg
pop
lods
jae
mov
stos
cmovge
stos
rorb
mov
in
dec
in
out
shlb
mov
icebp
clc
fsubrs
lret
pop
add
push
push
shl
xchg
sarl
mov
arpl
fiaddl
or
and
pop
push
in
leave
add
mov
shrb
scas
imul
cmp
sti
cmp
mov
jl
leave
fabs
in
loopne
mov
or
adc
jbe
out
add
nop
lods
sbb
repnz
mov
loopne
xchg
scas
out
hlt
pop
dec
sbb
out
pop
jmp
xchg
adc
push
out
dec
dec
and
shrb
testl
fwait
andl
addr16
adc
jmp
aad
test
out
stos
mov
bound
jns
add
cltd
sbb
adc
mov
insb
dec
xchg
cltd
add
icebp
mov
out
jecxz
xor
lret
sbb
dec
cli
ficoml
jle
inc
push
out
sub
lods
jmp
sbb
popf
test
sbb
mov
imul
pop
gs
and
cwtl
fnstcw
push
mov
cmc
cmpsl
leave
shll
movsb
xchg
sub
xorb
clc
ret
fdivrs
jbe
sarb
into
jbe
pop
ret
and
jns
adc
ss
sti
lcall
mov
imul
xor
dec
mov
cwtl
push
xchg
stc
lea
addb
and
mov
out
clc
jp
pushf
dec
fwait
mov
add
jg
mov
cwtl
aam
mov
adc
dec
cmp
mov
dec
stos
das
xchg
nop
rorb
xchg
das
xchg
mov
xor
mov
mov
ss
and
sbb
mov
jge
adc
mov
jns
jle
adc
xchg
xlat
or
lock
movsb
fdivr
push
lods
push
pop
insl
pusha
push
mov
mov
mov
int3
jmp
jge
mov
xor
daa
andl
pushf
jno
mov
fldl
jnp
test
imul
push
popa
into
mov
shll
pop
lret
add
fwait
inc
dec
adc
jae
cld
rcrb
sub
jmp
push
pop
jecxz
push
inc
enter
cmp
cmp
js
adc
mov
jne
add
es
lcall
cmp
cmc
xchg
xchg
or
push
int3
adc
jg
fsubs
mov
mov
or
push
sti
xchg
loopne
push
add
dec
dec
push
sarl
scas
test
pop
loop
pop
lret
repz
loopne
repnz
cmpsb
leave
test
ret
lea
je
popa
xor
in
pop
sbb
pop
mov
mov
push
pusha
lods
sub
fisttps
test
adc
xor
inc
sub
xchg
loop
jne
pop
and
mov
ret
stc
adc
pop
push
sahf
scas
xor
addr16
test
sahf
sbb
push
scas
mov
mov
stos
jge
das
imul
sub
popa
mov
xchg
push
aaa
jae
inc
das
or
in
pop
fcmovnb
cmp
cmp
shl
pop
aad
insl
les
cmp
push
std
xchg
cmpsl
insb
enter
push
cmp
mov
adcb
jno
pushf
inc
adc
push
icebp
jnp
mov
loope
clc
push
insl
mov
push
fists
push
mov
push
jle
sbb
loopne
sbb
inc
lcall
sbb
ljmp
xchg
jo
mov
repnz
imul
sarb
mov
sbb
push
push
pop
mov
push
xchg
test
fidivl
sbb
cltd
or
faddl
adc
fldenv
xchg
clc
mov
rorb
adc
popf
ljmp
jbe
xchg
adc
cld
mov
xor
mov
xchg
outsl
loopne
out
and
movsb
dec
dec
add
les
cli
popa
ljmp
mov
es
clc
les
lret
mov
lods
iret
shrl
mov
mov
inc
xchg
popa
cltd
xchg
sbb
jl
scas
fsubl
in
jge
int
std
in
push
in
sub
es
jg
adc
test
fs
int
push
cltd
push
adc
xor
dec
pop
popa
xor
cs
push
and
or
bnd
insl
cmpsl
loop
shll
roll
movsl
mov
or
jae
stc
bound
add
loop
sbb
outsl
push
mov
mov
into
inc
popf
adc
das
in
mov
mov
xor
aad
mov
dec
dec
imul
pop
adc
hlt
cltd
jae
mov
fnsave
mov
icebp
dec
xchg
fmull
inc
scas
ljmp
jo
int3
data16
mov
push
je
sahf
pop
add
inc
in
mov
out
call
repnz
lea
mov
sahf
mov
push
cmp
adc
cmpsb
js
sub
pop
sbb
test
pop
cmp
sbb
and
xchg
mov
jl
cmpsb
sbb
stc
int3
xchg
jmp
nop
add
and
xor
bound
pop
adc
lret
xor
and
sub
sbb
fcmovnbe
xchg
nop
in
lret
pop
dec
jo
add
mov
cltd
idivl
cmpl
and
jns
test
push
js
dec
mov
mov
cmpsb
mov
push
repnz
push
outsl
sahf
dec
imul
stc
adc
jge
xor
shl
in
hlt
movsl
insl
cmp
adc
mov
dec
fistps
jno
mov
jno
cmp
fs
out
inc
popf
mov
mov
das
mov
fstps
popa
dec
dec
lods
xchg
fistpll
mov
sbb
call
jb
inc
aad
outsb
cmp
data16
mov
jns
mov
sti
insb
xchg
cmpsl
lret
test
pop
int
mov
cld
or
sub
push
cmp
cmpsb
mov
loopne
xchg
mov
cmp
sbb
loop
pop
or
mov
inc
mov
sub
mov
in
pop
ja
pop
stos
int
pushf
stc
dec
sbb
sub
push
adc
mov
sbb
jmp
mov
push
div
mov
scas
popf
addr16
lea
adc
push
jmp
int3
movsb
movsl
inc
vpmaddwd
test
clc
dec
sbb
pop
or
and
push
mov
xor
pop
shrb
test
cmpsb
enter
fisubrl
jbe
shrb
jns
mov
icebp
loopnew
cmp
cmp
dec
inc
mov
sbb
scas
xchg
add
and
lock
stc
subb
jne
cmp
push
jbe
mov
cwtl
inc
fildl
faddl
fs
push
mov
insl
cwtl
sub
and
rolb
ljmp
div
xor
jg
dec
aas
cmp
in
test
adc
outsl
bound
bound
and
insb
outsb
loop
add
jae
pop
les
inc
sbb
shrl
mov
mov
imul
jae
sbb
mov
mov
aas
adc
nop
mov
clc
rcr
add
sbb
sbb
movsb
out
addb
stos
inc
jecxz
sbb
ss
pop
ret
pop
pop
sub
dec
filds
xchg
dec
das
jb,pt
pop
add
dec
adc
ss
clc
inc
cwtl
hlt
lahf
pop
xchg
push
cmp
push
cmpsb
push
mov
insb
mov
test
in
ret
xor
push
cli
mov
sbbl
movsl
leave
xorl
or
insb
out
dec
push
call
sbb
inc
inc
add
idivl
add
icebp
mov
adc
jmp
mov
or
push
fisttpl
pusha
lcall
cmp
lock
adc
and
sub
add
mov
int3
testl
add
std
push
scas
jbe
movb
shr
pushf
je
sarl
adc
rcrl
mov
cld
xlat
xor
and
dec
shll
scas
inc
adc
xor
mov
gs
add
mov
mov
shll
mov
jb
inc
aam
testl
idivb
loope
inc
or
dec
shll
inc
das
inc
hlt
push
dec
or
out
ds
push
mov
loope
pop
push
inc
cmp
jns
aaa
jns
xor
mov
add
std
and
push
sub
mov
dec
xchg
imul
mov
or
aam
movsl
pusha
dec
movsl
ror
push
sbb
sub
scas
loopne
xor
lret
pop
pop
fs
imul
cmp
outsb
jns
mov
int
sub
mov
cmp
dec
fdivrl
stos
jbe
test
mov
movsb
rorb
in
add
adc
in
pop
mov
icebp
mov
and
scas
inc
mov
pushf
pop
xor
jle
mov
pushf
js
inc
dec
and
dec
mov
fldcw
sbb
mov
adc
les
or
je
test
inc
in
mov
inc
arpl
pop
jbe
popf
pop
pop
daa
pop
sbb
push
adc
push
lea
mov
and
call
imul
dec
std
icebp
sub
stc
pop
loope
ret
out
rcll
adc
sub
sarb
jno
es
rclb
shrb
icebp
lret
lock
jle
xor
ret
cmp
push
lcall
fsubs
jecxz
mov
jnp
fdivp
jo
mov
loope
lret
loop
mov
in
cmp
cmpsb
andb
and
scas
test
in
xchg
adc
jg
lods
pop
or
dec
inc
mov
mov
rcrl
popf
jno
rorb
sbb
or
icebp
stc
seta
adc
adc
cmp
mov
push
adc
sub
adc
xor
jge
lret
push
push
lcall
stos
jg
adc
cmpsb
rolb
ja
mov
sub
shrl
dec
insb
xchg
mov
mov
jbe
xor
addr16
lea
lea
fnstcw
sti
mov
xlat
cld
bound
pop
cmpsb
test
mov
or
mov
test
push
into
fistl
int3
std
mov
sar
sbbb
add
gs
mulb
cmp
cmp
loope
popa
push
movsb
test
sbb
add
mov
lods
insl
mov
xor
sub
inc
or
xorb
pop
or
cwtl
ds
mov
in
fwait
pop
repnz
and
and
push
jmp
jb
xchg
xchg
fstpl
cmp
flds
mov
ss
in
int
inc
jle
jmp
add
das
scas
cwtl
cmp
ret
out
bound
div
xchg
dec
xchg
mov
cmp
data16
in
mov
lods
inc
aas
pop
add
pop
or
sbb
test
xor
push
scas
adc
mov
call
lock
and
pop
or
push
test
inc
add
or
mov
rcrb
in
cmpsl
into
or
jbe
stos
dec
scas
test
push
xorl
ss
popa
inc
fisubl
mov
xchg
sbb
push
lret
mov
mov
je
push
fldenv
add
inc
mov
lret
adc
in
mov
or
pop
jle
cmc
daa
jb
les
jle
and
lret
push
ss
pop
and
xchg
xchg
cmp
out
lods
push
test
fdivrl
mov
gs
xchg
pop
xchg
into
jge
push
xchg
mov
fcoms
mov
mov
adc
dec
movsl
xchg
push
repz
inc
sub
rcrl
mov
mov
fucomp
testb
and
cwtl
adc
xchg
daa
mov
fnsave
jo
int
movsl
and
repnz
push
fisttps
xchg
and
and
arpl
arpl
cmpl
push
mov
les
icebp
push
adc
stos
jns
add
stc
sub
loope
pop
pop
pop
pop
xor
insl
in
sbb
mov
lds
cwtl
outsl
and
data16
pop
andb
pop
inc
push
dec
fidivrs
aas
in
js
xchg
or
push
scas
mov
cli
fisubs
xor
pop
mov
add
cmp
push
adc
test
mov
in
in
fmuls
adc
pop
cmp
sbb
or
xchg
vandps
push
adc
popa
jge
test
orl
shlb
inc
stc
fcmovnb
int3
xchg
loope
or
mov
and
iret
cs
filds
nop
ret
mov
sub
xchg
shrl
mov
ret
push
cmp
test
out
outsl
mov
pop
rol
xlat
iret
aam
ret
mov
aaa
dec
fldt
ss
xor
pop
dec
or
rcr
and
je
pop
xchg
in
enter
loopne
or
and
test
dec
jnp
sbb
pop
loope
jl
mov
mov
int
mov
movsl
stos
push
mov
aaa
and
jg
mov
sub
loope
mov
aad
idivb
inc
mov
insb
and
jne
xor
outsb
jg
xchg
sub
popf
dec
fdiv
cmp
push
push
test
rcrb
fimuls
je
loop
in
jnp
sbb
dec
sbb
jl
dec
orl
clc
aaa
ljmp
enter
lahf
dec
loope
cli
stos
es
out
mov
mov
mov
jl
mov
imulb
ljmp
jp
out
cltd
ja
adc
and
decb
inc
sahf
push
inc
cmc
add
enter
outsb
xchg
and
scas
lret
outsb
fs
and
pop
hlt
and
mov
sbb
psubw
mov
mov
fimuls
fildl
dec
leave
out
icebp
aam
xchg
push
shll
sub
jnp
mov
mov
inc
stos
push
fistpl
movsl
dec
add
imul
pop
andl
add
xchg
sub
xor
pusha
xchg
loop
stc
bound
pop
push
xchg
dec
push
repz
xchg
in
cmp
les
or
xchg
shrl
fisttpl
outsl
xor
mov
jg
ret
cmp
out
lods
mov
filds
mov
lods
adc
lret
sub
jne
lea
lcall
pop
lahf
jo
xor
negb
xchg
gs
and
mov
inc
mov
sarb
add
inc
rclb
mov
popa
sbb
jp
jecxz
outsb
fimull
pushf
sahf
push
sub
mov
icebp
sub
mov
adc
add
nop
enter
inc
adc
cmp
mov
mov
xlat
or
push
aaa
pop
das
icebp
cwtl
adc
push
pop
xchg
stos
fisubs
sbb
xor
fdivrp
dec
mov
sub
orl
lahf
rcrl
loope
or
or
cmp
xchg
mov
dec
push
add
jne
loopne
sbb
sbb
xlat
and
mov
das
ja
lods
mov
push
popf
inc
pop
gs
push
dec
sub
mov
imul
insl
inc
clc
sti
and
in
jne
jp
push
push
mov
xchg
filds
inc
sbb
jbe
pop
out
adc
popf
or
cmp
pop
loop
scas
and
ret
cltd
out
ret
jno
lock
bound
sbb
xchg
or
lods
xor
sub
xchg
sub
shr
aas
sbb
jp
in
pop
mov
imul
dec
dec
fstpl
orl
in
add
int
jp
inc
jbe
loopne
fcompl
js
mov
mov
and
stos
or
rolb
jl
pop
mov
push
sbb
or
std
inc
es
std
fistl
mov
xchg
or
jp
dec
fists
mov
movsb
fs
arpl
shrb
call
stos
mov
stos
testl
shl
pop
leave
stc
lahf
jns
sbb
addr16
pop
mov
test
sub
jae
cmp
sub
cmp
dec
add
xor
add
jne
mov
adcb
repnz
lret
aad
and
mov
movsb
pop
push
dec
daa
std
xor
or
dec
stos
insl
aad
xor
pop
jg
fmulp
mov
test
loope
jmp
call
dec
sub
jl
sub
dec
mov
dec
pop
inc
mov
pop
push
out
push
cmp
mov
pop
jle
adc
pop
arpl
jo
fs
mov
mov
mov
push
rclb
sub
lds
jae
stc
test
add
rol
aas
sbb
push
mov
xor
lret
mov
sub
adc
xor
xlat
aas
jnp
ljmp
mov
jbe
xor
jnp
daa
pop
add
pop
fbld
jl
pop
pop
mov
cs
cmpsb
mov
test
add
dec
push
jmp
fdivr
jge
jecxz
test
dec
mov
aad
mov
mov
aas
xchg
mov
movb
or
mov
cltd
outsb
or
sbb
jge,pn
dec
or
fisttpll
repz
pop
add
sti
pop
add
daa
gs
lret
dec
mov
adc
or
jmp
sahf
into
outsb
imul
fdivs
xor
sbb
movsl
and
xchg
push
je
push
xorl
arpl
clc
stos
rorl
jmp
sahf
jae
fcomp
andps
mov
adc
es
imull
and
add
mov
inc
pop
push
frstor
dec
sbb
push
pop
xchg
pop
repz
jno
mov
pop
jge
dec
scas
out
sbb
xor
nop
outsb
imul
out
and
dec
fucomp
inc
add
aas
rcrl
aad
mov
mov
add
ret
mov
cwtl
mov
jb
pop
cmp
ret
adc
iret
cmc
pop
ds
mov
adc
das
mov
dec
sbb
pop
add
or
xchg
daa
inc
out
int
les
jle
mov
fxam
jne
in
fisttpll
add
fdivrl
faddl
rolb
pop
scas
movsl
mov
scas
lods
inc
movsl
mov
jne
jae
arpl
push
sub
inc
jbe
insl
push
cmpsl
shll
cmc
hlt
lcall
mov
cltd
xor
aad
xlat
cs
and
and
xchg
cwtl
dec
mov
add
outsl
sti
loop
inc
or
cmp
pop
bt
icebp
das
sub
or
or
and
xorl
sub
imul
add
xchg
jae
lods
in
or
lret
jnp
sub
xchg
sub
pusha
insb
xchg
sub
adc
iret
shld
xchg
xor
jecxz
je
and
stc
mov
add
lods
pop
mov
inc
pop
addl
testb
push
int
ss
pop
int3
adc
add
adc
cltd
das
shll
pop
bound
in
add
stos
jns
nop
divl
movsl
mov
jecxz
mov
dec
hlt
mov
das
out
lods
xchg
inc
lods
mov
in
fcom
dec
call
jecxz
outsl
iret
mov
cld
mov
sub
adc
jg
in
or
insl
jl
pushl
mov
iret
or
insb
inc
dec
lret
out
or
sbb
push
xchg
xchg
jp
sub
adc
xchg
iret
popf
jo
das
and
inc
sbb
pop
and
or
xchg
dec
mov
sti
aam
jne
mov
jae
add
sarl
mov
or
mov
add
mov
mov
sbb
sub
int
pop
stos
jne
sahf
leave
pop
xor
inc
cli
pusha
xchg
cmpsb
pop
dec
outsl
inc
sbb
lods
mov
push
jae
push
lahf
and
rorb
scas
test
mov
mov
dec
inc
jmp
or
repz
popf
jae
cmp
fisubrl
into
mov
mov
push
cltd
inc
and
icebp
cmpb
xchg
adc
inc
repz
je
stos
xchg
faddp
inc
dec
and
or
hlt
int3
sahf
lods
mov
xchg
stos
je
jae
negb
sub
adc
add
stos
push
int
inc
mov
fcompl
mov
adc
push
test
sti
aas
mov
sti
bound
sbb
push
fs
and
jg
aaa
xchg
call
dec
or
negl
fldenv
and
outsb
inc
jno
lahf
fisubl
pop
xorb
pop
cmp
rcr
mov
leave
js
mov
repz
loopne
rcrl
cmpsl
cwtl
xchg
adc
repz
inc
loope
nop
xor
popf
ficoml
cmp
fisubrl
into
add
mov
jmp
loope
push
outsb
add
push
cmp
call
jnp
jns
outsb
xchg
rcr
daa
xor
js
es
xchg
cs
add
repz
ss
lret
push
lods
push
push
or
mov
push
mov
xchg
rcrl
xor
pop
cmp
jp
xor
stos
pop
push
inc
iret
jmp
data16
cmp
fmul
sahf
add
cmp
stos
movsl
jne
mov
mov
inc
lcall
jle
in
add
dec
pop
or
push
and
xchg
lcall
popf
test
dec
insb
and
sub
adc
scas
push
mov
lods
inc
mov
jle
out
int3
push
xor
push
test
loope
push
mov
in
movsl
add
popa
or
xchg
mov
xlat
or
xchg
clc
mov
pop
jge
dec
fmuls
jb
jo
mov
mov
pop
xchg
push
das
call
pop
jae
movsl
pop
movsb
cwtl
stos
mov
popa
mov
insb
mov
packssdw
jnp
inc
jge
sub
cmp
lcall
or
pop
fdivl
ret
push
sbb
shrb
inc
mov
jmp
and
sub
fdivrs
adc
outsl
add
cmp
cmp
inc
imul
sub
into
push
push
mov
shlb
xchg
stos
repz
push
adc
add
cmp
dec
shll
add
xor
xchg
stos
icebp
mov
add
int
fidivl
push
cld
jbe
adc
fcmovbe
mov
mov
push
mov
adc
xlat
ret
push
hlt
dec
pop
dec
enter
mov
mov
xchg
add
loope
roll
loop
push
in
insl
and
add
mov
in
cli
fs
iret
mov
xchg
inc
xor
add
ss
push
sub
jp
pop
adc
push
das
rcrb
repz
xor
les
inc
test
cmp
and
mov
into
push
push
jge
xchg
or
pushf
push
jmp
cmc
aad
pop
mov
adc
lea
and
cmpsl
pop
mov
lea
pop
lcall
mov
and
adc
test
xchg
or
aam
roll
test
das
scas
test
hlt
sahf
push
or
mov
imul
shll
adc
or
sub
cmp
jle
pop
inc
inc
adc
mov
add
sbb
fisttps
cmp
jae
mov
mov
inc
loopne
xor
insb
add
jb
shl
call
std
mov
shl
sbb
jle
add
pop
adc
fsub
aad
add
mov
stc
outsb
mov
xchg
fucomi
cmpsl
xchg
sub
adc
cld
sbb
add
mov
in
pop
je
rol
lds
movsb
xchg
scas
es
bound
dec
shrl
sti
popf
std
fwait
or
cmp
push
mov
out
jg
mov
dec
jle
jg
push
popf
lret
repnz
pop
jecxz
mov
repz
call
xlat
int
xorl
cltd
add
jle
xchg
lcall
sub
int3
cmp
test
mov
adc
push
ja
inc
lds
lods
mov
cwtl
adc
into
fnsave
and
out
in
push
sbb
add
push
push
stos
sub
pop
inc
cltd
and
and
idivb
cld
bound
lods
mov
popf
xor
in
das
jl
stc
push
jne
test
fnstenv
or
inc
movsl
mov
fld1
or
notb
mov
xchg
add
leave
xor
cmpb
cli
sarb
test
push
or
cmpsb
pop
sub
xor
adc
in
mov
mov
adcb
testl
and
fildl
stc
jecxz
decb
cld
jecxz
das
mov
sarb
adc
lds
dec
jg
inc
cmpsb
mov
mov
in
cs
imul
lds
and
nop
adc
or
jle
lret
ffree
sbb
jg
fwait
ja
js
xchg
mov
ss
inc
cmp
push
call
sbb
cmp
fisttpll
jg
adc
je
inc
shlb
mov
adc
xor
xor
scas
aam
add
imul
vphsubbw
into
jbe
mov
flds
imul
mov
pop
xor
mov
fnstsw
in
pop
xor
ja
fwait
and
push
mov
cmp
imul
cmp
sbbb
mov
dec
jo
adc
inc
outsb
gs
lea
pop
testl
sub
add
ret
popf
icebp
movsl
mov
lahf
cmp
fldl
cwtl
sub
push
cmp
adc
scas
xor
pop
push
jae
cmpsl
fldenv
xchg
int
cwtl
sti
sbb
out
bound
mov
add
xor
cs
ds
ficoml
push
push
ss
shll
jp
cmpsl
leave
xor
popa
rorl
mov
xlat
jnp
sub
shl
or
lods
add
out
jb
fnsave
push
dec
xchg
pop
mov
xchg
jne
outsb
cmpsl
stos
je
shrl
lahf
mov
imul
subl
nop
sbb
loopne
les
loopne
lock
adc
add
pop
push
inc
cmpsl
popa
and
shll
add
add
sub
xchg
and
test
sub
xchg
mov
or
insb
loope
pop
js
add
rolb
loopne
orb
sahf
fidivrl
int
cs
pop
dec
mov
outsb
test
sarb
xor
mov
lods
mov
test
in
test
sub
adc
add
adc
call
pop
stos
loop
jnp
mov
loope
fstl
ret
outsl
xor
inc
mov
jl,pt
pop
mov
lods
cmp
fists
testb
fisubl
int3
mov
mov
fstps
in
xor
cwtl
xchg
fnstsw
stc
movsl
dec
inc
cmp
xlat
cmp
pop
mov
das
mov
sbb
adc
add
xor
ret
js
push
mov
cwtl
dec
fsubl
fmulp
cmp
arpl
mov
fsubrs
imul
call
jp
pop
cmc
sub
mov
jbe
test
scas
movsb
in
push
out
xchg
add
mov
cli
inc
js
push
cmp
mov
int3
in
testb
fstpl
cmc
xor
jb
xorl
xor
fwait
dec
mov
pusha
out
int
out
sbb
popa
jmp
icebp
jmp
jecxz
adc
shlb
jns
mov
imul
mov
and
hlt
cld
pop
pop
ss
popa
xchg
mov
push
imul
mov
sub
push
sbb
mov
xor
pop
sarb
adc
adc
pop
arpl
add
idivl
adc
jle
sbbb
mov
push
cli
ror
mov
push
pop
inc
ss
mov
add
mov
sbb
mov
cld
enter
inc
clc
pushf
and
push
nop
pop
push
sarb
xchg
pop
mov
sub
and
jge
iret
mov
ljmp
xchg
mov
and
adc
inc
insb
dec
mov
dec
dec
inc
and
sub
pop
dec
jbe
andb
mov
fistpl
je
call
inc
xorb
adc
jnp
inc
shlb
or
cmp
in
pop
dec
sbb
aas
add
inc
sub
enter
call
mov
add
add
sti
push
ja
inc
mov
mov
shlb
lock
cld
fistps
js
cmp
xchg
mov
cmp
stc
xchg
arpl
xchg
dec
xchg
and
jl
arpl
xchg
pop
enter
sbb
lret
imul
push
and
jle
inc
mov
mov
fiaddl
mov
mov
push
cmp
sub
fidivs
pop
jg
les
jl
lds
nop
fstl
jecxz
sub
dec
push
in
mov
scas
bound
lret
cmp
imul
mov
loope
out
adc
out
add
mov
xchg
push
push
pop
or
xchg
pop
inc
inc
sbb
or
cmp
mov
and
testb
or
lcall
or
mov
data16
je
jno
push
xlat
ja
sahf
ja
xor
cmp
cmpsl
shll
pop
push
out
cmp
leave
leave
push
ds
pop
add
sbbl
inc
insl
shrl
aaa
loope
in
lahf
jno
lock
push
mov
imul
sbb
cli
add
sbb
out
pop
add
lahf
mov
dec
xor
mov
push
xlat
or
mov
lret
daa
mov
movsb
mov
mov
js
test
fcomi
jnp
lea
fcmovnu
mulb
out
sub
vmread
nop
add
mov
into
gs
ss
fwait
cmp
movsb
cmp
dec
xchg
testb
add
pushf
pop
shll
lahf
loopne
inc
movsl
inc
das
jns
push
adc
mov
imul
filds
sbb
arpl
bound
mov
mov
into
xor
pushf
mov
mov
inc
mov
jne
iret
pusha
mov
out
inc
jo
ret
rclb
sbb
xor
xchg
subb
and
sub
lds
test
adc
in
or
stos
adc
icebp
ret
icebp
in
sahf
xor
add
setle
add
push
into
frndint
nop
mov
cmpl
xchg
int3
out
nop
sub
pop
loop
sbb
jnp
cmc
enter
jnp
lret
negl
and
jb
cmpsb
xchg
lret
push
inc
jmp
sbb
fdivrl
dec
aaa
mov
xchg
cmp
dec
jae
mov
lods
int
outsl
and
mov
cmp
jp
xchg
shr
add
out
jmp
int
jno
xor
gs
hlt
mov
imul
imul
shl
pop
mov
int
jae
cmp
mov
in
or
cs
or
hlt
dec
push
out
dec
inc
ret
ss
sub
inc
arpl
xchg
add
or
and
add
fmuls
ficoml
faddl
je
xor
push
sub
xchg
or
adc
test
call
shll
mov
add
xchg
push
jecxz
cmp
repz
cltd
repz
jnp
outsb
test
adc
call
xchg
cmp
mov
nop
int
nop
and
sbb
out
int
jb
jns
sbb
fcompl
and
les
je
xor
icebp
add
xchg
call
cmc
or
jb
adc
aaa
sub
dec
jno
in
in
mov
jp
stc
sub
subb
xlat
sti
mov
xlat
into
js
out
sahf
or
aam
mov
jae
int
lret
scas
out
nop
xchg
jle
out
jae
incl
jnp
out
popa
int3
mov
sbb
test
fistl
xor
dec
jg
mov
cmc
mov
inc
out
test
mov
mov
aam
lcall
cmpb
push
lock
jg
decb
ror
adc
pop
cmc
lret
faddl
jge
aam
push
stos
mov
aaa
xor
lock
in
mov
push
jecxz
push
cmc
inc
push
and
or
or
and
push
pop
clc
mov
pop
sbb
test
jg
inc
outsb
xchg
call
inc
in
mov
sub
jns
push
test
loop
scas
cld
pop
jmp
push
adc
mov
std
leave
mov
xchg
loope
mov
sbbb
nop
sbb
or
sahf
pop
lods
pop
sub
xor
xor
in
shrb
xor
rorl
dec
push
fdiv
inc
inc
sub
fsubl
xor
push
mov
std
and
pushf
dec
xchg
bound
mov
aas
cmp
fildll
jecxz
cmp
mov
push
testl
out
mov
xor
jbe
nop
lods
out
adc
aam
xchg
mov
stc
dec
cmp
fimuls
clc
pop
push
lret
cmp
cs
loopne
leave
xchg
aaa
cmp
stc
aad
jne
mov
imul
pop
lock
fcompl
fisubrl
adc
jg
jl
mov
or
dec
xor
shl
push
mov
xorb
add
pop
xchg
pop
repz
int
jge
out
movsl
stc
out
pop
mov
pop
cmpsl
cmpsl
sub
mov
je
xor
xchg
mov
mov
inc
mov
rclb
pop
pop
orl
pop
aad
adc
sbb
xchg
and
add
adc
out
dec
xrelease
or
jl
repz
and
sub
rcl
jbe
lret
in
je
fxch
cwtl
xchg
sbb
stc
adc
add
push
int3
out
jp
int
xchg
add
mov
in
es
xchg
stc
mov
insb
call
pop
lahf
jb
jne
repz
mov
sub
or
imul
lcall
scas
dec
imul
mov
xor
jnp
mov
shll
push
cmc
jmp
lcall
lcall
dec
cmpsb
sbb
push
or
dec
xor
xor
aaa
inc
xor
jl
inc
jmp
test
inc
fwait
loope
pusha
inc
idivl
aam
pop
cmpsb
mov
mov
inc
test
inc
mov
imul
sub
daa
push
mov
mov
outsl
imul
ret
aaa
jnp
ficompl
mov
sahf
lods
xchg
jmp
inc
loop
xchg
or
adc
mov
arpl
ret
and
jp
push
jns
inc
in
divb
ljmp
or
arpl
lret
hlt
mov
leave
xor
xchg
ds
ss
nop
sub
jne
ja
add
in
mov
dec
sub
xor
hlt
jmp
les
jo
jno
popa
ret
dec
mov
push
and
mov
repz
push
sar
sti
jmp
fwait
arpl
stos
in
pusha
mov
enter
push
sahf
mov
cmpsl
movsb
popa
sub
jno
add
in
jae
mov
mov
inc
aad
mov
ret
push
arpl
in
into
arpl
loopne
movsb
fcoms
arpl
xchg
imul
shl
nop
lods
stos
lcall
mov
dec
out
pop
loope
mov
ljmp
xor
dec
push
outsl
pop
inc
mov
ss
and
dec
cmc
xchg
vminsd
sahf
inc
sarb
rol
jl
push
clc
out
roll
push
sub
imul
fs
mov
sub
add
xor
cwtl
add
shl
scas
sub
or
cwtl
insb
fbstp
sarb
enter
pop
shll
testl
push
sub
sub
rcll
or
sarl
push
mov
lods
subl
and
xchg
fistpll
test
add
rcll
cmpsb
addr16
xlat
dec
dec
lahf
pushf
jb
dec
and
mov
adc
sub
sahf
or
in
lret
push
out
jns
rcll
daa
imulb
lahf
nop
repz
fwait
pop
dec
cmovnp
faddl
cmpsl
test
or
das
es
pop
sub
push
daa
lcall
push
or
in
xchg
cmc
inc
int3
dec
mov
in
sti
mov
test
xor
xchg
and
and
mov
repz
imul
andb
ds
inc
push
mov
or
test
dec
cmp
jns
jmp
cmpsb
popf
sbb
adc
in
les
popf
arpl
jae
stos
sbb
mov
xor
mov
out
outsl
and
cli
insl
jne
sbb
xchg
inc
daa
frstor
add
cmp
aad
gs
xchg
fdivl
pusha
shld
mov
and
push
mov
pop
push
frstor
dec
mov
fwait
push
out
pusha
cs
inc
add
inc
popa
fldt
jmp
or
and
ret
sub
daa
loopne
nop
sub
ret
fimuls
push
cmc
pop
xor
movsl
outsb
loope
adc
iret
cli
pop
out
jg
xor
fsubrl
fildl
xlat
out
out
mov
movsl
jmp
xchg
shl
pop
cmp
mov
and
sub
add
mov
imulb
rcll
lahf
xchg
call
lret
iret
imul
pusha
out
xchg
pop
movsl
push
xor
jp
mov
dec
ss
push
leave
push
cmp
mov
aad
andps
sbb
lods
lock
pop
push
in
repz
je
adc
addb
jne
add
nop
icebp
xchg
inc
daa
or
repnz
stos
cmp
pop
sbb
icebp
repz
ss
sub
jnp
shll
sub
adc
mov
jle
sbb
jb
sub
pop
shll
mov
mov
sbb
xor
flds
jnp
test
mov
and
ss
sub
pop
dec
sub
xlat
xor
mov
and
inc
dec
gs
sub
xchg
jl
xchg
aas
xchg
movsl
stos
xor
outsl
and
lock
lea
popf
sub
fistpl
test
popf
push
sbb
jmp
shll
mov
and
or
inc
cmp
mov
xor
and
xchg
imul
dec
fsubrs
lock
mov
and
sbb
test
stc
pop
pop
popf
jo
fwait
xchg
push
repnz
push
in
push
mov
sarb
les
inc
int
fs
jle
lret
or
push
call
aad
loopne
push
mov
out
rol
mov
pusha
in
cmpsl
sub
mov
lea
sub
or
aam
add
dec
sbb
cmpb
stc
pop
mov
push
sarl
fbstp
sub
lock
sbbl
bound
xchg
mov
sbb
aad
leave
lahf
repnz
in
sarb
mov
js
adc
aaa
imul
hlt
lock
repz
pop
addb
jns
cmp
sub
dec
pop
or
mov
push
cmp
cmp
lods
std
xchg
nop
dec
pop
and
jnp
mov
popf
insl
or
inc
xorb
pop
mov
clc
dec
js
stos
sahf
dec
dec
pop
dec
or
call
insb
or
mov
ss
or
or
divb
lds
imulb
cmpsb
cmp
mov
sub
in
dec
mov
and
xlat
jo
jmp
dec
aam
call
cltd
fdiv
sbb
aad
cmp
outsb
add
adc
dec
jnp
xchg
cmp
xor
jecxz
test
fcmovnbe
xlat
push
sub
hlt
mov
sbb
scas
xchg
mov
ret
adc
or
int
imul
and
movsb
cmp
insl
adc
push
mov
cmp
cltd
jno
xor
mov
pop
mov
loopne
mov
adc
push
pop
add
ljmp
push
js
loop
mov
jno
push
dec
inc
jbe
mov
jl
xor
push
sub
in
ret
mov
push
testb
aaa
ljmp
pop
add
sub
test
sbb
faddp
repz
adcb
int
push
enter
es
mov
or
pop
call
xlat
push
xor
cmp
dec
push
mov
clc
or
mov
dec
jo
repnz
flds
lock
and
sbb
fwait
shrb
jns
xchg
dec
stos
in
mov
aam
sbb
cmp
arpl
add
or
pop
mov
push
xchg
enter
mov
je
dec
neg
out
jp
pop
out
push
sbb
add
pop
pop
into
push
xchg
jg
pop
mov
or
cmp
cmc
nop
xchg
ds
fstps
xlat
outsb
stos
and
in
or
loop
lods
xchg
jmp
sti
jg
dec
stos
andl
cmp
sti
jns
ret
push
js
mov
nop
xchg
pushl
aad
jl
adc
int
jno
add
out
dec
scas
das
ds
pop
mov
loope
in
into
xchg
push
mov
mov
xor
mov
xlat
int3
sub
icebp
jle
fists
loopne
xchg
fdivp
push
subl
sbb
push
loop
lret
sbb
daa
les
xor
cwtl
in
mov
es
mov
pop
mov
pop
idivb
cmpsb
sarl
inc
imul
loope
push
nop
cltd
idivb
in
icebp
das
pop
xchg
rorl
jmp
imul
mov
decl
jmp
add
les
imul
mov
rolb
jge
mov
sti
mov
cmp
int
mov
cmp
gs
imul
push
pop
adc
and
pop
jnp
mov
and
fstpt
inc
outsb
shr
cs
jbe
stos
adc
xlat
mov
orl
fmulp
lahf
cmp
mov
in
je
sbb
adc
and
cmp
ljmp
das
and
int3
ss
fwait
and
mov
ret
xchg
push
das
add
jo
out
sub
xor
shlb
inc
icebp
sub
sbb
jbe
xchg
jle
jnp
jno
ror
sbb
mov
sbb
movb
add
ret
add
mov
xor
and
pop
cltd
and
pop
mov
or
imul
sub
shlb
adc
pop
sbb
loope
sarb
jecxz
outsb
lahf
and
sub
shll
rclb
mov
jl
stos
fcom
jp
orl
out
cltd
push
sbb
icebp
aas
into
push
test
ds
push
mov
push
lds
bound
inc
jmp
pop
cmp
mov
in
lock
sub
loopne
lds
test
jae
ret
das
inc
bound
lods
outsb
sub
jno
lods
cli
rorb
bound
jmp
lcall
lahf
hlt
inc
lret
lods
fs
decb
xchg
jmp
pop
push
mov
sahf
cs
pop
cmp
push
scas
sub
jmp
xor
inc
and
jge
fistps
mov
into
jbe
mov
shr
add
mov
xchg
xor
sbb
pop
stos
leave
scas
adc
negb
mov
push
jno
dec
fdivl
data16
jns
mov
mov
pushf
andb
cwtl
pushf
stc
adc
xor
mov
fnstenv
jo
or
mov
lock
lds
inc
lret
fildl
sub
pop
mov
and
popa
shrl
int
aam
jne
add
mov
sub
jmp
add
ljmp
pop
hlt
aad
mov
mov
mov
mov
fisubl
jo
mov
lock
jecxz
scas
sub
cwtl
pop
dec
push
jecxz
pop
mov
add
or
mov
mov
mov
and
jmp
in
popf
popl
pop
imul
or
lahf
sbb
dec
cmp
cmp
int
and
xchg
sub
mov
sbb
hlt
es
fstpt
mov
in
mov
jmp
mov
rol
cltd
inc
enter
ficoms
jle
adc
call
arpl
mov
fs
jmp
sti
loop
mov
sub
ljmp
movsl
and
testl
pop
xchg
sbb
movsb
mov
outsl
add
push
shl
cs
int3
cld
lcall
out
adc
xor
lds
cli
aad
leave
movsb
jae
pop
pop
mov
mov
lahf
push
in
mov
pop
movsl
lods
sub
sbbl
lea
bound
inc
mov
test
mov
cmp
out
inc
movb
adc
or
xor
sub
mov
mov
int
mov
jno
in
and
pop
je
add
in
arpl
aas
pop
adc
and
mov
in
add
jmp
ret
sub
icebp
mov
shlb
xor
je
and
test
dec
loop
int
scas
lds
jb
mov
pop
xchg
iret
inc
sbb
andb
ss
int
mov
xchg
jbe
dec
ret
lret
cwtd
jno
jne
sbb
xchg
nop
cwtl
or
mov
mov
test
add
mov
aaa
loopne
jmp
fldcw
jns
sbb
inc
sarl
lret
adc
xor
adc
jmp
mov
imul
inc
jae
sub
movsb
mov
cltd
add
xor
inc
neg
outsb
add
mov
adc
in
xor
ss
jnp
adc
pop
int
mov
push
mov
cmp
add
push
adc
call
inc
mov
xor
xchg
ret
jnp
dec
fs
and
push
cmp
pop
jle
xor
add
rclb
inc
xchg
or
popf
cs
inc
adc
mov
jecxz
js
repnz
sbb
sbb
mov
sub
out
cmp
inc
inc
sahf
mov
sarl
adc
ja
mov
roll
add
push
orl
xor
sbb
sub
fldenv
cli
shll
or
test
popa
filds
push
lcall
dec
fucomip
push
stc
sbb
fldcw
addr16
xchg
arpl
sub
andb
roll
fs
mov
jne
pop
jnp
in
sub
push
pop
icebp
mov
hlt
and
fistps
sub
iret
lahf
sbb
dec
cmp
push
bound
xchg
mov
test
das
jl
mov
add
xchg
fs
mov
in
mov
lea
pop
out
or
leave
imul
fdivl
sbb
arpl
out
lcall
cmc
aaa
mov
add
mov
xchg
push
push
sbb
aam
pushf
ret
or
inc
jmp
xchg
sub
xor
pushf
xchg
push
adc
bound
or
popf
sub
sbb
lret
adc
fstps
idiv
das
lods
lret
repz
outsb
pop
ds
and
test
push
mov
roll
sub
mov
dec
fmull
lock
out
cli
cltd
jl
lcall
imul
fwait
int3
test
mov
mov
orb
lods
push
xchg
loope
cmp
dec
push
jge
sbb
lcall
jbe
test
cwtl
shll
jbe
jp
push
std
iret
mov
shlb
xchg
jmp
or
movsb
das
add
add
ljmp
popf
aas
push
das
lock
stos
outsb
jne
jecxz
hlt
xor
subb
mov
or
cltd
jmp
push
push
push
stos
push
and
scas
loopne
aaa
cmp
push
icebp
pushf
lock
jbe
mov
in
push
xor
add
cmpl
shrl
cmp
sub
xchg
stc
ficomps
sbb
lcall
jne
xchg
push
xlat
push
push
adc
popa
add
sbb
push
push
mov
leave
loop
push
imul
pop
xchg
pushf
rclb
mov
mov
lea
jp
cwtl
in
jge
dec
loope
mov
push
pop
inc
outsb
imul
arpl
mov
and
lcall
shll
insb
inc
aam
fimull
pop
in
mov
ja
outsl
call
aas
nop
xchg
imul
popa
outsb
stc
cmp
lods
xor
popa
mov
adc
pop
pushf
incb
xlat
fisubrs
jae
sub
and
xor
aas
mov
jae
ret
ljmp
cltd
psubb
das
push
ds
pop
fsubrs
mov
pop
inc
sbb
ljmp
inc
add
inc
ret
push
repnz
add
loop
and
pushf
mov
dec
push
inc
push
lahf
pop
push
push
loopne
mov
imul
mov
mov
jge
and
inc
inc
sub
push
es
fnstenv
and
roll
lods
sbb
ja
jge
pop
xorb
stos
fmull
xor
cmc
lret
je
push
stos
das
mov
sarl
jge
rolb
inc
aam
test
sbb
insb
lret
std
pop
mov
inc
xor
mov
or
xchg
scas
and
lahf
cmpsb
mov
or
add
int
data16
cli
jmp
push
xchg
mov
sarl
test
mov
adc
scas
fwait
sub
cmp
push
in
jecxz
mov
jae
out
add
sub
adc
test
shll
ret
arpl
or
sub
loope
xor
fdivr
pop
jnp
xchg
outsb
cmpsl
sbb
bound
sahf
mov
mov
fldenv
or
es
jnp
sbb
push
dec
pop
sbb
sub
aaa
out
leave
lret
fnsave
sbb
sbb
jg
inc
sub
fs
push
cmp
in
jmp
add
and
lret
sbbb
xor
sbb
loopne
mov
movsl
in
mov
dec
jp
out
aad
jne
xor
jl
dec
xchg
mov
rcrl
inc
push
and
inc
fcomi
cmpsb
mov
inc
xor
aad
movsb
or
dec
stos
pusha
inc
jns
mov
fwait
cmp
in
lock
filds
xor
lcall
insb
jae
movsb
sub
xorb
jns
mov
pop
or
or
sub
sub
sub
dec
lea
push
repz
xchg
lret
mov
lock
fldl
sub
dec
pusha
sar
mov
mov
push
insb
movsb
add
insl
jp
jno
jle
sbb
in
sub
aas
data16
daa
fwait
movsl
imulb
adc
xor
andb
mov
and
mov
into
ficompl
dec
pop
add
xchg
inc
adc
cmpsl
wrmsr
xor
outsl
sub
es
mov
jae
xor
and
shl
inc
mov
mov
shll
mov
int
call
or
in
rcrb
adc
shrb
sub
shlb
add
shrb
inc
push
outsb
ja
loop
cmp
and
cmp
scas
cmpsb
les
jmp
int
cwtl
aad
lcall
sub
inc
nop
push
pop
int
jns
out
lods
and
mov
loop
or
scas
mov
shlb
jge,pt
and
sbb
pop
sub
dec
sbb
scas
or
mov
mov
ss
hlt
adc
jae
es
dec
fildll
gs
push
into
inc
je
clc
cwtl
in
insl
das
mov
or
ja
into
cltd
hlt
mov
dec
sbb
dec
and
sub
rcrb
sbb
jecxz
sarl
sbb
subb
outsb
out
add
scas
push
or
in
push
xchg
outsb
and
lret
xor
mov
notb
or
xchg
push
repz
in
push
adc
jae
xchg
sub
adc
push
jg
fnstcw
call
push
cmp
rol
imul
rol
sub
cwtl
shlb
in
add
fisttps
test
insl
sub
lcall
test
incl
cmp
inc
aaa
scas
push
cmp
cmp
ja
dec
scas
dec
mov
push
aaa
neg
fisubrs
insl
frstor
je
mov
jle
faddl
stc
sub
sub
sub
xor
loop
xchg
ds
inc
add
cmc
mov
lcall
push
adc
jg
mov
popf
pop
mov
testb
push
addr16
xchg
loop
xor
or
or
stc
enter
mov
aaa
fidivl
shll
mov
sbb
or
jl
mov
mov
cli
loop
sbb
movsb
jl
or
cmp
cld
mov
arpl
cmp
mov
int
fsubl
hlt
lods
jmp
pop
sbb
jl
and
scas
push
rcll
sub
xchg
cld
repnz
jecxz
fsts
lods
arpl
mov
and
inc
and
subb
cmp
cmpsl
into
and
out
or
movsb
in
mov
js
rol
test
push
xor
jp
sub
sbb
jbe
in
push
mov
pop
cli
mov
sub
xchg
rolb
mov
cmp
sbb
aaa
lods
fsubr
or
or
test
dec
mov
and
mov
dec
test
jecxz
sbb
mov
ret
aaa
out
test
push
insl
mov
sub
mov
fcmovnbe
js
inc
into
cld
sbb
cmp
xor
pop
sub
mov
int
push
insl
dec
lret
pop
and
lods
jl
mov
fiaddl
fs
into
cmc
pop
mov
or
mov
ljmp
test
xchg
or
das
cmp
xchg
mov
jmp
ljmp
jmp
mov
jb
pop
adc
popf
lock
mov
loopne
push
fildll
out
sahf
mov
icebp
xor
mov
outsb
shll
cwtl
out
mov
das
sbb
sbb
sbb
in
xor
cmc
clc
add
shr
es
outsl
stc
inc
push
out
pushf
jl
fcmovnb
incl
rclb
dec
add
mov
xchg
inc
and
add
out
les
dec
jecxz
shll
mov
idivb
inc
loopne
jp
adc
data16
divl
pop
sbb
fcoms
repnz
push
jb
jmp
adc
jmp
mov
pop
inc
inc
shlb
cs
mov
and
sbb
rcll
outsl
pop
push
lahf
dec
inc
xchg
sbb
and
mov
popa
push
xlat
iret
push
aaa
popa
mov
repnz
lds
push
push
dec
cmp
mov
jle
xchg
aad
xchg
jbe
or
stc
adc
cwtl
or
out
mov
jb
push
scas
sahf
gs
sbb
fcmove
iret
inc
xor
cltd
fidivs
in
ds
pop
xchg
and
inc
xor
or
daa
inc
jl
cmp
sub
std
call
ret
fsts
mov
mov
mov
jmp
in
jge
inc
cld
jo
stc
jmp
inc
inc
add
cs
ret
xchg
lcall
aad
mov
movsb
pop
sub
pop
lds
das
mov
add
jle
lahf
push
jno
dec
cltd
dec
adc
movsb
jnp
mov
in
pop
adc
xor
push
hlt
es
enter
rclb
ss
mov
insl
fldl
jge
xor
push
arpl
mov
cmpsl
fstps
iret
fidivs
ficompl
mov
inc
push
xchg
ja
loop
cld
xchg
nop
shrl
cld
ljmp
repnz
das
mov
addl
mov
pushf
inc
cmp
orl
xor
es
mov
inc
xchg
jl
inc
mov
ret
mov
and
push
cli
fnstsw
add
loop
ljmp
mov
sbb
fucomp
std
movl
xchg
loope
sbb
mov
sub
jl
jo
mov
or
sbb
je
add
dec
sarb
cmp
outsb
ja
stc
mov
out
cmpsb
data16
sbb
cmc
xchg
out
in
mov
push
cmpsl
xlat
adc
stos
push
aas
inc
insb
adc
xchg
pop
jecxz
inc
outsl
popf
adc
in
test
dec
cmp
push
or
negl
test
out
push
push
arpl
jae
loop
in
loop
jmp
mov
adc
inc
js
scas
add
mov
sahf
icebp
add
inc
insb
xchg
add
jle
inc
push
ret
sub
repnz
adc
es
mov
or
int
mov
dec
pop
addr16
fisubs
into
xchg
mov
push
jmp
xchg
notb
cmp
test
leave
mov
add
mov
ret
inc
cli
inc
xorb
int3
inc
push
pop
test
stc
mov
int3
popf
push
xchg
push
outsb
jnp
sbbb
rorl
mov
mov
mov
rorb
inc
es
jp
sub
fadd
xchg
push
push
or
pop
pop
cltd
out
stos
mov
sarl
ljmp
andb
fs
jge
push
cmp
push
not
jbe
fimull
jle
pop
int3
or
jb
cmp
mov
aas
shlb
sub
xor
dec
mov
xchg
or
loope
stos
dec
xchg
add
jns
rcll
and
ret
jne
pop
fwait
std
push
stos
cs
mov
fisttpl
imull
std
and
dec
jg
in
xchg
les
sub
rcl
jnp
fsts
js
or
rorl
pop
mov
daa
aad
lret
mov
jp
lahf
xchg
cld
andl
mov
shl
xorl
aam
sub
pop
sti
gs
cmc
les
add
push
push
dec
and
inc
jae
sbb
je
mov
nop
cs
jbe
nop
push
and
dec
or
jne
sub
jmp
and
pop
fcmovb
ret
stc
rcll
iret
scas
out
sub
cmp
imul
inc
xor
mov
xchg
adc
sub
out
pop
leave
lret
aam
ds
jg
mov
pop
pop
loop
cmp
cld
aam
loope
cmp
push
pusha
push
insb
je
pushl
and
aas
jo
mov
mov
aad
es
test
clc
mov
arpl
fsubs
push
loope,pn
lret
lret
push
jnp
jbe
outsb
fisttpl
out
outsl
shrl
mov
shl
dec
daa
jns
shrb
mov
jbe
add
aad
push
sti
shrl
sbb
adc
cmpsb
in
dec
pop
sbb
loope
jo
outsb
arpl
sbb
or
inc
add
jmp
lahf
and
aad
mov
imul
mov
sbb
or
popf
loop
scas
int3
push
ret
cmp
addr16
mov
mov
push
xchg
int3
xor
or
stc
cwtl
mov
popa
sbb
in
mulb
inc
adc
inc
sahf
mov
in
and
push
dec
adc
mov
add
pop
lahf
jns
addr16
imul
dec
dec
jecxz
mov
push
pop
cli
fstps
inc
adc
sub
add
lea
movsl
xchg
lock
into
and
pop
xor
shll
mov
xchg
add
shr
js
push
fcomps
je
sti
orl
sbb
sub
ljmp
das
sbb
shll
fwait
inc
and
or
stc
cmp
insb
add
mov
insl
xor
repnz
add
adc
push
shrl
xchg
push
mov
xor
xor
rcr
inc
repnz
dec
xor
sub
call
dec
or
leave
push
sbb
pop
cmpl
xlat
adc
mov
cmp
xor
xchg
je
add
mov
arpl
or
push
mov
loope
adc
repz
mov
push
jne
push
cmp
jb
pop
fyl2xp1
pop
mov
xchg
xchg
jmp
mov
or
ljmp
sub
cmc
std
push
sbb
jmp
int
movsl
xchg
sbb
add
das
fisttpl
ds
fwait
popf
pop
add
sbb
fwait
mov
or
in
dec
test
cmc
add
adc
jle
rcll
mov
mov
pusha
jne
dec
xchg
out
add
mov
lret
cmp
sbb
jne
inc
daa
jl
dec
sti
aas
es
pop
hlt
les
mov
arpl
adc
or
adc
lahf
dec
inc
shll
lods
dec
iret
loopne
mov
daa
test
pop
inc
push
scas
xlat
xchg
test
pop
mov
out
sbb
pop
leave
shr
jmp
ljmp
cltd
adc
fisttps
sbb
mov
inc
jecxz
inc
inc
or
rcrb
pusha
inc
aaa
lret
out
fisttps
jb
scas
inc
out
pop
push
popa
or
mov
aaa
loop
sub
inc
inc
pusha
stos
jb
mov
sti
or
sahf
int
sub
lret
sub
mov
fadd
jle
inc
mov
mov
sub
pop
and
xlat
jns
lock
incb
push
movl
shlb
sti
mov
jle
cmp
jl,pt
push
shl
fiaddl
lret
add
push
inc
in
lahf
jne
adc
scas
lea
aaa
pop
cs
lods
outsb
push
mov
xlat
dec
pop
rol
jae
cli
lods
mov
push
jae
dec
loop
xor
pop
shlb
andl
mov
mov
mov
pushf
mov
push
shlb
mov
mov
lds
dec
lods
dec
nop
sarb
lock
and
das
dec
or
adc
push
push
imul
ss
outsl
xchg
mov
cmc
xor
and
sbb
lods
sbb
xchg
pop
adc
aam
ret
out
add
push
int3
mov
test
imul
jnp
leave
pop
test
dec
cli
xchg
mov
lret
jno
adc
out
mov
ret
js
pop
xor
int3
js
inc
cmpsb
mov
loopne
sub
pop
lock
xor
xchg
aad
jb
scas
mov
bound
mov
stc
adc
xor
jmp
or
cmp
lea
repnz
pop
imul
adc
xchg
xchg
xchg
push
repz
inc
dec
xor
and
mov
xchg
mov
push
lahf
mov
pop
push
rolb
push
rcll
xor
jb
jmp
mov
adc
dec
sbb
fildl
or
cmpsl
dec
push
xchg
into
fnsave
lea
sbb
xchg
xchg
inc
in
push
loopne
push
and
imull
sbb
add
push
shll
dec
sub
in
pop
clc
fstl
aad
pop
dec
insl
mov
in
fists
scas
inc
jne
mov
jge
or
lods
addb
daa
cs
lcall
sbb
les
cmc
dec
push
into
mov
adc
sti
loopne
xor
pop
lahf
or
lds
jo
cltd
xchg
pop
xor
fcmovu
lahf
cmpsl
jne
push
lahf
add
movsb
mov
in
popa
xchg
and
fldt
mov
jno
iret
add
stos
dec
mov
aam
sub
cli
sarb
sbb
test
push
lret
shrb
scas
popf
es
or
mov
pop
in
pop
lahf
ret
sbb
xchg
cld
pop
imul
inc
lret
fists
bound
bound
movsl
and
subl
and
dec
imul
add
push
jecxz
es
mov
xchg
loopne
mov
gs
mov
push
xor
push
loopne
cmp
mov
pop
adc
add
dec
mov
sti
fists
mov
xor
mov
aas
cmpsl
sub
push
cli
notl
popf
push
pop
and
dec
dec
out
addr16
mov
jne
push
popa
mov
mov
push
adc
push
pop
push
fwait
std
sbb
and
arpl
add
mov
test
sub
lret
mov
repz
lds
sub
adc
inc
sbb
push
mov
xchg
cmp
gs
shrl
es
ja
jle
mov
mov
xor
jne
aas
push
test
mov
or
mov
rol
fldcw
mov
inc
and
mov
add
xchg
stc
cld
in
insl
rclb
adc
lock
repnz
or
outsb
sahf
loope
push
outsb
mov
repnz
adc
jbe
xor
xorb
div
fstp
fchs
adc
addr16
pop
sahf
mov
cld
sub
iret
cmpl
mov
mov
sbb
dec
addb
les
adc
testl
std
std
lods
push
movsl
xor
in
xor
cli
push
pop
fbstp
stc
rcrl
pop
or
xor
sbb
fwait
jb
cmpsl
aam
lds
ret
out
ds
scas
jbe
pushl
pop
sbb
popf
addb
arpl
outsl
add
ficoms
add
pop
cli
shlb
sub
out
js
add
les
js
cmp
les
icebp
test
mov
movsb
mov
call
add
call
minps
mov
sbb
out
daa
enter
lahf
inc
mov
jne
sub
jae
mov
adc
bound
or
or
pop
mov
lods
xor
cmp
sbb
xor
mov
enter
lahf
test
adc
inc
mov
mov
jae
cmp
ss
es
add
bound
inc
pop
xor
xchg
xchg
cmpsl
sbb
fidivrs
sbb
cmp
and
add
out
imul
repz
mov
lds
dec
lds
xor
insl
not
sbb
jecxz
out
add
je
jmp
fcoml
inc
sub
movsl
pop
xor
pusha
cmc
mov
dec
aaa
in
mov
push
mov
ljmp
testl
int3
and
lds
mov
test
push
js
dec
arpl
jecxz
sahf
add
xor
into
mov
inc
loop
xchg
cmp
popf
lods
pop
mov
ja
dec
out
sub
iret
cmp
mov
insl
adc
or
mov
iret
push
repz
pop
ds
push
mov
arpl
insb
scas
inc
int
push
fldl
cmp
dec
sti
xchg
sahf
clts
mov
mov
fdivrs
adc
jmp
mov
xchg
dec
mov
inc
pusha
mov
jns
outsl
iret
xchg
adc
shrb
addr16
pop
xchg
push
stos
bswap
and
inc
ss
movsl
mov
lcall
or
cmp
xchg
pop
jo
jae
int3
mov
and
add
add
mov
xlat
pop
pop
rcr
sbb
and
mov
cmp
push
mov
or
mov
xor
stos
jno
inc
mov
repz
fidivrs
push
pop
xlat
loope
loop
jecxz
popa
icebp
sbb
flds
inc
int3
push
pop
sub
cmp
fimuls
aad
cmp
jae
addb
movsl
jae
cltd
jns
popa
sbb
cld
inc
xor
add
or
jmp
or
fimuls
hlt
je
pop
jnp
out
push
mov
inc
lock
shrb
repz
inc
popa
mov
mull
mov
jns
ret
mov
das
pop
not
icebp
lods
jp
cmp
mov
outsb
test
pop
lds
enter
hlt
aad
pop
xlat
mov
mov
mov
pop
movsl
mov
scas
bound
sbb
outsl
xor
clc
lods
dec
mov
xchg
mov
repnz
mov
fwait
jns
lret
adc
inc
jle
lret
sbb
sub
data16
fsub
add
xchg
in
aam
loop
dec
ret
lods
lds
pop
addr16
pop
lds
popf
stos
add
mov
mov
in
movl
adc
ja
or
popf
dec
idivl
xchg
or
test
scas
mov
cli
andb
pop
xchg
cmp
dec
lea
test
ja
sub
mov
adc
outsl
jle
ljmp
in
shrb
xor
mov
shl
lea
loope
in
sbb
pusha
cltd
ror
pushf
mov
pop
mov
movsl
or
jecxz
lret
rcrl
test
lods
in
add
loop
mov
fs
adc
stc
test
int3
jo
sbbb
call
shrl
das
mov
jne
jnp
test
repz
ret
adc
xor
mov
iret
cmpsb
cld
lret
nop
xorb
mov
adc
cmp
cmp
dec
mov
jbe
test
cld
addb
arpl
dec
adc
cmpsb
stc
xchg
sub
in
xor
mov
adc
aas
mov
adc
pop
stos
pop
dec
cmpsb
jg
and
out
xor
sub
mov
loope
sub
repz
and
cmp
or
mov
jo
add
push
sahf
jmp
inc
cltd
sbb
lahf
in
push
repnz
sub
push
dec
pop
shll
loop
mov
mov
pop
std
insl
bound
and
gs
mov
sbb
orl
mov
xchg
pop
fadds
and
adc
je
pop
or
mov
xor
cmp
mov
add
lock
push
repnz
stc
fbld
xor
ret
lds
shl
ret
aad
das
mov
mov
jecxz
lahf
mov
fbstp
adc
pop
push
test
cmpsl
inc
orl
inc
cmc
cmc
jge
fwait
arpl
mov
inc
mov
xor
pop
dec
jb
mov
mul
jmp
fsubrl
or
inc
mov
sbb
leave
mov
pop
out
cmp
dec
lea
adc
push
movsl
jl
or
xor
lcall
dec
scas
xchg
cmc
xor
and
lahf
fs
mov
pop
movsl
dec
int
push
sbb
jmp
mov
mov
cli
fisttpll
sbb
jp
ljmp
cmp
cld
adc
arpl
je
push
jle
sbb
loope
lods
scas
movsl
xlat
push
ficoms
jnp
addr16
aam
in
mov
and
loope
sub
insb
das
scas
loope
lods
pusha
icebp
push
repz
pushf
pop
mov
pusha
adc
add
jmp
imul
mov
movsl
and
add
es
in
lods
lods
mov
fs
dec
cmp
movsb
add
and
and
push
aad
cli
mov
push
xchg
jne
sbb
lret
dec
xchg
out
cmp
lds
cmp
push
jno
movsl
adc
mov
push
push
xor
mov
sbb
add
lcall
xor
int
loop
dec
js
mov
mov
mov
stos
push
into
mov
cmpsb
inc
fcom
shll
inc
iret
sbb
push
cmc
mov
mov
cmpsl
mov
ss
push
roll
adc
sti
movsl
pop
xlat
jl
push
add
push
ret
adcl
jno
outsl
movsl
addr16
pcmpgtb
js
mov
sbb
xchg
js
adc
in
andb
mov
cmp
push
in
sub
insb
in
scas
imul
in
popf
pop
xchg
push
push
insb
add
xchg
orl
sbb
shll
dec
aas
sbb
in
pop
push
fs
dec
sub
fprem1
call
add
adcl
lock
es
mov
push
xor
andl
lock
adc
xchg
fisttpl
jb
sahf
jecxz
jnp
xchg
mov
sbb
or
in
mov
pusha
andb
cmp
jno
std
push
aas
inc
inc
mov
popf
fistpl
fsts
cmc
imul
add
fadds
adc
das
dec
mov
inc
sbb
pop
dec
ficomps
xchg
jle
adc
sub
inc
mov
sbb
movsl
jb
and
shll
sub
mov
xor
push
pop
jg
mov
cmp
pop
shlb
and
subb
add
bnd
mov
ficompl
adc
xchg
and
std
jle
ret
or
ret
mov
test
mov
rclb
fstpt
cmc
insb
movsb
sbb
bound
jno
outsb
xchg
insb
out
fs
out
lret
imulb
das
inc
movsb
popa
cmp
dec
in
mov
xor
gs
push
inc
fisttpl
xor
adc
xchg
sbb
iret
popa
and
jns
ds
sar
loope
dec
cmp
les
adc
add
arpl
xor
movsl
sub
popa
daa
mov
fildl
xchg
add
mov
faddl
mov
add
mov
es
inc
mov
sbb
in
fs
or
test
mov
or
sti
pop
push
daa
nop
dec
sbb
pop
pop
lahf
enter
cltd
rorl
cltd
mov
push
and
xchg
test
xchg
sub
stos
loopne
imul
cltd
inc
cwtl
lods
xor
pop
jo
test
out
add
cmp
outsl
je
adc
aas
iret
and
sbb
pop
sub
pop
ds
or
ror
push
std
mov
sub
clc
ljmp
or
les
ucomiss
push
imul
push
sub
sbb
adc
mov
cmp
sbbl
pop
lods
repz
push
repz
sbb
mov
dec
jo
cli
roll
and
call
cmp
enter
cmpsw
push
in
sbb
add
and
test
dec
loope
stos
pop
xchg
pushf
add
sub
jmp
xchg
addr16
fnstcw
mov
les
sub
inc
cmp
ds
lods
mov
adc
shlb
jno
aaa
sub
jbe
outsl
xchg
and
sub
ja
inc
aas
repz
push
cltd
sti
pop
jl
stos
adc
loopne
in
bound
aas
ja
sub
sub
outsb
gs
xor
call
repz
inc
push
pop
ja
in
sbb
cmp
mov
cmpsb
imulb
or
or
negb
inc
push
enter
aad
inc
inc
ret
aam
loope
je
adc
out
xlat
push
rolb
outsl
pop
iret
jns
push
jae
imul
xchg
cltd
pop
push
push
cmpb
in
mov
xchg
dec
call
mov
xor
mov
fmull
xchg
mov
ret
push
popf
pop
cmp
or
dec
fbld
mov
sbb
stos
jmp
sbb
inc
fs
les
mov
filds
dec
mov
xlat
xchg
cmpsl
and
jns
out
inc
inc
adc
scas
fcomi
push
xchg
add
sbb
or
xor
je
popa
loopw
mov
popf
cmpb
push
repnz
out
push
imul
mov
jne
popf
mov
pop
cli
jmp
sahf
cmp
jecxz
subl
or
adc
sub
fnstsw
sbb
adc
dec
les
mov
test
add
sbb
xor
aam
dec
adc
jle
xchg
jbe
add
sub
adc
fcomps
cmpsb
jmp
cmp
cwtl
push
and
xchg
cmpsb
loopne
lret
xor
and
inc
mov
push
sti
or
jnp
push
push
sub
movsb
xchg
in
or
sub
scas
std
jne
push
sbb
iret
jae
push
jo
iret
fsts
iret
loope
ret
cmp
mov
cli
outsl
mov
pop
pop
movsb
aaa
cs
xor
sub
jmp
scas
inc
out
ficoms
loope
xchg
dec
dec
mov
in
sbb
jle
jge
pop
pop
mov
or
lret
in
ljmp
les
mov
push
outsb
xor
push
xchg
test
adc
cmp
shlb
mov
mov
pshufw
iret
mov
stc
les
sarb
dec
mov
lret
cli
cwtl
adc
jbe
icebp
cmp
add
or
repnz
push
loope
je
dec
jl
pop
fists
mov
scas
fidivrs
xchg
mov
xchg
inc
scas
jl
push
hlt
sbb
cwtl
push
inc
lret
dec
dec
int
pusha
insl
mov
xchg
dec
aad
es
pop
mov
push
mov
jmp
stos
fldl
int3
jne
stos
jl
jnp
lahf
ja
jle
adc
scas
stos
add
sbbl
mov
ljmp
inc
fisubs
dec
in
mov
cmp
lea
popf
mov
rcl
push
fwait
xorb
outsl
enter
xor
movsb
jno
sbb
imul
pop
out
addr16
lea
mov
push
inc
jge
fsubl
mov
scas
adc
pop
mov
push
or
les
fildll
add
add
nop
lea
and
add
inc
jp
pop
jbe
mov
out
add
pop
sahf
outsb
ret
rcll
nop
andl
inc
inc
sahf
fimuls
cmp
mov
mov
mov
xchg
or
cli
in
cld
cs
nop
push
fdiv
mov
adc
loop
xor
divb
jmp
mov
cmpb
js
sahf
lret
cld
and
lret
sub
and
insb
cmc
filds
mov
xchg
inc
loopne
cs
imul
sub
outsl
cld
mov
mov
xor
adc
filds
iret
popf
sbb
cmp
push
mov
lods
dec
ficoms
sub
in
or
jne
inc
jmp
in
push
lret
ljmp
into
or
sub
pop
mov
xor
mov
mov
pop
lds
pop
cmp
test
and
jl
push
lahf
xchg
dec
cld
je
cmpsb
adc
ljmp
mov
xchg
sbbl
shll
pop
shl
mov
rcrl
inc
adc
jmp
pusha
sub
rolb
xchg
mov
xchg
mov
xor
scas
xor
push
pop
stos
pop
pop
cltd
dec
std
cmp
insb
inc
addr16
mov
xchg
jno
jne
or
in
xchg
es
fnstsw
cwtl
repz
mov
ss
xchg
pushf
jnp
imul
movsl
bound
pop
sub
jmp
lods
cwtl
push
inc
inc
or
push
sbb
out
imul
xchg
cmp
jge
xlat
loope
sahf
andb
lret
mov
fstpl
add
rcrl
lret
and
jge
sarb
inc
add
out
test
dec
mov
pusha
mov
lcall
add
out
push
aaa
xchg
add
outsl
repnz
fnstenv
dec
inc
jne
movsb
mov
mov
imulb
sub
test
cs
fldl2t
popw
inc
pop
mov
sbb
mov
push
repz
sbb
mov
ja
clc
loopne
push
enter
inc
pop
sbb
lahf
subl
jae
or
in
aad
jge
cs
iret
fdivrl
mov
cmc
movsb
inc
and
cmpsl
repnz
or
popa
pop
stc
xor
jecxz
fiaddl
push
pop
and
add
addr16
mov
push
pop
dec
inc
pop
paddusb
mov
test
mov
jle
js
das
dec
mov
hlt
loope
scas
xor
xor
into
test
sub
xor
mov
in
and
stc
int3
jo
sbb
pop
sbb
icebp
insb
cmp
add
xchg
call
mov
mov
arpl
mov
inc
sarb
out
pop
enter
aam
xor
cwtl
mov
and
push
out
lods
dec
test
push
outsb
dec
ja
dec
pop
jns
mov
xor
ljmp
pop
pusha
pop
jno
mov
xorb
int
fstpl
add
dec
arpl
test
add
dec
xchg
adc
sbb
fistpll
pop
xor
stos
dec
shlb
inc
jle,pt
jle
or
sub
into
ja
mov
and
xlat
insb
fdivl
jo
push
mov
xor
pop
leave
je
xor
push
movb
ficomps
jecxz
popf
cltd
pop
adc
int3
rclb
or
seto
into
loop
lcall
adc
addr16
mov
sbb
rcl
push
push
sbb
push
cmp
imul
jns
fstps
stos
mov
and
sub
mov
jno
push
cli
insb
leave
int
ja
sub
dec
cmpsl
insb
mov
push
and
lcall
ffree
cs
add
pop
addb
mov
cmp
mov
call
cmpsl
sub
shlb
push
sbb
and
stc
lcall
sarb
mov
cmpsb
cmpsb
adc
ss
add
push
cltd
mov
adc
xchg
or
std
int
gs
add
ficomps
pop
cli
mov
jl
sbb
add
pop
fadd
pop
sbb
out
dec
sbb
out
mov
sbb
fs
lods
xor
dec
adc
adc
loopne
xor
adc
adc
mov
lcall
and
nop
ret
mulb
and
lds
in
imulb
inc
hlt
pushf
iret
fidivrl
cmc
and
in
aas
cmc
xor
or
in
add
push
and
mov
sbb
xchg
sbb
xor
adc
loop
add
in
fcoml
mov
pop
ficoms
fiaddl
push
ljmp
inc
insb
sbb
mov
jo
mov
inc
mov
sahf
out
jecxz
pop
out
mov
inc
gs
sti
pop
xchg
mov
add
jo
daa
test
mov
mov
mov
adc
pop
stc
outsb
pushf
jge
push
mov
hlt
fistl
roll
test
ficoml
mov
imul
fcomi
je
pop
mov
add
lahf
lock
or
push
jb
popa
ret
push
lods
loop
adc
push
sahf
fbld
in
xchg
test
insl
call
push
decb
test
lods
cmp
ss
push
movsl
cmpsb
int3
ja
mov
xchg
mov
stos
xlat
stos
or
hlt
mov
push
insb
dec
pusha
inc
test
daa
lret
stc
xor
push
out
cmp
mov
or
push
clc
stos
movsl
adc
xchg
into
sbb
jecxz
lds
mov
ljmp
jbe
dec
pop
ja
adc
or
adc
andl
scas
sbb
lods
cmpsl
fadds
lret
ficoml
or
mov
icebp
mov
loop
and
in
or
and
push
pop
mov
pop
movsl
les
ja
or
sbb
xchg
or
pop
test
xchg
out
aas
xor
cmpsl
adc
inc
sahf
jmp
sahf
lret
sub
shlb
jnp
sti
inc
push
popa
lds
xor
push
scas
push
scas
in
pop
dec
cmpsb
cmpsb
or
push
xor
or
cmp
xchg
aaa
and
push
aad
movsb
ss
aad
pop
pop
jl
inc
dec
or
mov
stos
sbb
mov
jns
push
leave
repz
or
movsl
adc
sub
fisubrs
int3
push
mov
xchg
pop
ret
jae
insl
bound
out
dec
insl
hlt
decl
jb
and
xchg
lds
outsb
aas
fwait
dec
clc
xlat
and
sarl
shlb
add
mov
lds
outsb
push
roll
shr
rorl
cmp
fwait
test
mov
cmp
pmullw
fwait
inc
js
xchg
dec
cmp
pusha
testl
push
mov
cmpsl
rclb
inc
mov
dec
dec
jns
shr
jge
negb
aam
test
or
repnz
inc
pop
out
cmp
and
popa
ret
jecxz
jbe
pushf
push
inc
fisubrl
in
js
push
call
add
jecxz
pushf
push
jb
and
lds
xor
jge
xchg
xchg
dec
inc
ljmp
aaa
or
push
lock
jle
cmp
ficoms
sbb
stc
loope
jg
xorb
mov
and
icebp
mov
and
sbb
mov
out
xchg
jne,pn
fcoml
repnz
outsb
int
out
std
scas
dec
xchg
xor
pop
jle
adc
and
ret
loope
or
and
dec
filds
xchg
mov
xchg
imul
arpl
push
inc
mov
fs
out
scas
push
xorl
filds
cmp
or
sbb
or
push
or
push
negl
cmc
jmp
fs
out
push
xchg
sbb
dec
mov
inc
xlat
add
stos
ss
bswap
and
mov
mov
call
dec
into
mov
or
sbb
shll
cmpsb
cmpsl
mov
pop
xchg
or
pop
jg
jmp
aas
lock
fsts
xor
cmp
test
gs
push
negb
cltd
lods
jl
inc
loope
xor
mov
add
sub
pop
hlt
mov
int
movsl
test
xchg
sahf
ljmp
movsb
iret
jae
add
nop
ss
insl
in
pop
sub
cli
pop
iret
sahf
data16
fistl
stc
push
sub
lahf
xchg
add
outsl
mov
jo
mov
jne
insb
bswap
jecxz
dec
or
sti
repz
mov
pop
lcall
jnp
push
lea
cmp
pop
arpl
cmp
arpl
xchg
bound
jecxz
mov
insl
pause
mov
dec
rcr
insl
pop
mov
popa
loop
cmp
hlt
addl
xchg
hlt
imul
in
scas
test
mov
xor
dec
adc
push
sub
shl
js
adc
xchg
cmpsl
push
push
and
xchg
lahf
je
int3
xchg
imul
push
pop
lea
xchg
outsb
push
test
pop
jge
ret
enter
jne
scas
sub
repz
mov
cmp
outsb
lcall
mov
or
mov
fadd
fisubrl
adc
or
inc
popa
mov
pop
pop
sbb
out
loope
ds
stos
insl
int3
sub
lock
clc
push
filds
mov
mov
add
test
xor
mov
into
popa
adc
push
rcrb
dec
adc
leave
lea
xchg
pushl
repz
jmp
ficoml
icebp
sub
jle
mov
dec
fimull
lods
popf
ljmp
xchg
aam
movsl
mov
adc
testb
nop
add
movsb
inc
add
sti
jno
insl
add
mov
jge
inc
jmp
dec
mov
or
mov
stos
inc
negb
jecxz
and
imul
mov
or
jbe
adc
push
outsb
loope
enter
xor
mov
and
lods
push
mov
dec
jnp
and
mov
dec
shrl
and
push
pop
jle
sub
sbb
or
ljmp
test
mov
fcomp
xlat
cld
imul
adc
ss
sbb
notb
push
stc
je
int3
dec
push
lods
cli
iret
inc
inc
mov
inc
fsts
cmp
sahf
sub
jle
testb
lcall
sbb
packsswb
lcall
jle
imul
xor
push
sub
mov
jp
stos
loopne
add
loope
jns
in
insl
outsl
mov
cmpsb
cld
adc
add
xchg
lods
ljmp
out
xor
pop
or
outsl
out
or
jmp
sbb
jbe
add
push
push
pop
sub
andl
add
mov
scas
jns
nop
dec
test
andb
sbb
call
dec
add
mov
sbb
gs
ds
jb
mov
ss
ds
rcl
adc
jmp
sar
sbb
les
jnp
pop
pushf
mov
insl
scas
dec
daa
aam
push
xor
nop
test
pushf
mov
data16
sti
ret
mov
data16
outsl
fiadds
test
cmp
mov
inc
inc
mov
pusha
jae
sub
das
jno
adc
arpl
movsl
arpl
xchg
push
int
stos
test
sub
mov
xor
subl
cmp
std
mov
adc
fld
adc
xchg
adc
push
fwait
out
imul
cmc
inc
push
in
lret
dec
fdivr
das
add
iret
pop
or
cltd
add
js
ret
and
or
fnstenv
jle
lea
pop
data16
out
les
lea
push
std
cmp
push
fsubl
push
mov
popf
jae
or
ret
daa
add
fmull
inc
pop
stc
inc
or
int3
sbb
rolb
xor
push
les
outsb
call
cmp
mov
sbb
xchg
loope
cmc
gs
jae
cs
sbb
ficomps
outsl
lock
cld
push
add
cmp
pop
outsb
or
mov
mov
out
adcl
fs
ss
adc
xor
inc
lahf
mov
xchg
rclb
loop
iret
xchg
arpl
pusha
shl
or
pop
jp
cmpsl
fstpt
test
sub
fwait
jecxz
jle
jb
jnp
pop
stos
add
cmp
add
ljmp
cmpsb
repnz
insl
jae
xor
or
push
sbb
imul
mov
iret
inc
testl
insb
cmp
inc
fwait
leave
ss
dec
out
popa
xchg
pop
dec
sub
ja
xchg
cwtl
mov
cmpsb
andb
or
push
mov
outsl
cli
push
sub
mov
or
and
and
jl
dec
push
pop
sub
rolb
cltd
ret
stos
xchg
loop
clc
icebp
xchg
icebp
fistl
cmp
mov
sbb
out
push
repz
fidivs
jg
scas
cmp
sbb
test
push
jne
cmp
in
xor
cmp
xchg
and
fdiv
mov
jae
or
inc
cld
mov
mov
mov
or
add
jmp
es
fcoml
lods
popf
pop
or
int3
xor
pusha
daa
mov
fimuls
jg
mov
shrb
mov
ja
jo
ljmp
arpl
mov
or
cwtl
or
sbb
jb
daa
cmpsl
lahf
pop
repnz
lock
mov
fs
mov
pop
push
mov
std
je
add
gs
testb
xor
stos
or
nop
add
pop
or
xchg
fimuls
out
push
leave
cmp
mov
outsl
xchg
and
xchg
mov
dec
mov
int3
leave
xor
test
gs
decl
add
insb
cltd
xor
jns
out
popf
push
pop
dec
inc
jo
mov
out
dec
xor
pop
lods
hlt
xor
xchg
mov
lahf
and
inc
fistpll
jg
mov
dec
xor
fsubrp
inc
push
pop
sti
call
nop
dec
cmp
or
jmp
add
dec
mov
mov
pop
outsl
pop
pop
cs
out
adcl
jno
outsb
jbe
pop
mov
ljmp
mov
sar
rolb
fsubrl
sarb
push
pushf
ret
stc
and
push
mov
scas
and
push
and
fdivrs
lock
rcr
jne
xor
test
inc
fnstenv
inc
cmovae
xchg
pushf
mov
mov
jns
inc
in
fbld
lds
and
cs
jl
cmp
push
imul
or
sbb
mov
data16
pop
scas
aad
add
mov
cli
jg
jmp
sub
aaa
call
push
add
lret
mov
in
sub
jnp
dec
icebp
int3
lea
mov
lock
cmp
sbbb
mov
mov
lret
data16
adc
cmc
pop
push
aad
ja
jg
popa
pop
mov
imul
int
add
mov
sub
xor
and
adc
or
xor
or
test
lds
or
dec
xor
daa
pop
xor
icebp
cmp
pop
adc
mov
dec
mov
mov
xchg
and
push
pop
push
add
push
enter
add
push
loopne
sub
mov
call
clc
dec
jne
ficoml
in
repz
xchg
xchg
mov
pusha
xor
xor
ds
sbb
pusha
fistpll
adc
out
fimull
push
into
and
invd
mov
mov
mov
jbe
pop
xchg
cmp
mov
or
cltd
fiaddl
lret
adc
fsubl
and
outsb
cmp
push
mov
mov
fdivrs
sbb
xlat
int3
sub
cmp
popa
shrb
lds
sbbl
dec
mov
in
lahf
stc
inc
gs
xor
cld
outsb
jo
and
mov
dec
arpl
enter
push
jmp
add
fidivs
imul
jl
pop
or
mov
adc
and
out
sub
int
arpl
inc
jge,pt
ret
call
movsb
das
mov
loop
lcall
pop
int
mov
test
es
sbb
call
xor
push
insb
xchg
or
imul
xchg
dec
stos
xlat
outsb
sub
cmp
lods
jg
insl
push
int3
jne
inc
aad
dec
hlt
mov
adc
adc
push
cmpsl
sbb
mov
int3
sub
adcl
xchg
sar
xor
or
ja
mov
adc
pop
and
out
adc
outsl
and
leave
mov
testl
ss
jp
ljmp
pop
inc
add
es
xchg
adc
imulb
movb
mov
dec
aad
mov
mov
pop
jbe
ss
mov
pop
mov
or
lea
faddl
jecxz
sbbl
inc
stos
mov
pop
xor
pop
xor
imul
cs
pop
mov
mov
scas
test
ficoml
adc
in
jnp
mov
cmp
mov
fdivp
pop
lods
popf
test
inc
xchg
jb
mov
jae
roll
push
movsb
xbegin
scas
data16
add
add
sbb
test
ret
lahf
push
pop
test
int
jecxz
mov
sti
xchg
xchg
inc
dec
in
cmc
pop
mov
enter
add
inc
mov
jp
ja
fs
sub
iret
inc
mov
jne
mov
sbb
xchg
mov
sahf
dec
xchg
pop
and
leave
lret
or
imulb
insb
push
enter
sbb
push
jns
pop
push
out
ja
xchg
push
je
cmp
pop
nop
add
subb
add
cwtl
dec
inc
jg
in
movb
adc
scas
cmp
xor
test
notl
nop
repz
imul
mov
xchg
mov
add
hlt
leave
and
cs
sti
mov
fidivs
fistpll
push
imul
inc
fsubrs
outsl
daa
jg
mov
lret
push
mov
dec
add
stc
dec
sub
jmp
jl
hlt
cmp
aad
or
push
cmpsb
int3
lods
sub
sbbb
pushf
shlb
sti
mov
and
cmpsl
xor
imul
movsl
in
mov
add
jg
jb
adc
mov
push
xor
fiadds
cwtd
arpl
lock
push
cmp
pop
pop
into
push
popw
push
jnp
sbb
aam
clc
cwtl
je
rclb
inc
daa
enter
sbb
daa
jnp
adc
adc
aas
adc
int
int
into
lods
wbinvd
xor
or
out
mov
gs
pop
cld
dec
and
mov
xchg
xchg
aas
dec
push
ds
sub
xor
scas
jecxz
jbe
dec
push
call
adc
pop
sbb
inc
pop
popa
mov
xor
cld
push
adc
cwtl
hlt
mov
mov
scas
adc
jbe
roll
stos
and
aad
cmpsb
cld
push
stos
sti
or
loope
outsl
mul
aaa
or
das
jne
push
stos
scas
and
adc
inc
push
xor
rolb
sub
cli
loop
lea
scas
sahf
pop
outsl
mov
pusha
sbbl
or
in
or
xchg
jge
ret
pop
loope
xchg
xor
clc
mov
xor
jecxz
xchg
out
int3
cs
dec
add
push
mov
mov
cmp
xorb
imul
jb
mov
mov
pusha
movsb
push
fucomi
jae
push
mov
bound
xchg
cmp
jnp
hlt
das
in
hlt
dec
jl
jae
in
xor
fadds
pop
lret
or
test
and
repz
leave
out
leave
xchg
push
dec
sub
pop
lret
rcrb
pop
push
ja
mov
mov
imul
cs
mov
outsl
inc
adcl
gs
mov
mov
or
mov
add
insb
repnz
push
ret
mov
dec
mov
add
pop
lahf
or
xchg
addl
aas
sti
pop
ficompl
push
dec
add
fisubs
jnp
fidivl
pusha
jns
in
inc
cmp
in
test
scas
int3
lock
sub
sub
mov
sub
sti
or
aaa
jbe
lret
add
jmp
fcompl
inc
cli
jo
mov
dec
push
jno
mov
pop
int
lret
add
dec
sahf
adc
aas
aad
jl
nop
lds
add
cmpsl
mov
adcb
fidivl
or
insb
cmp
push
push
popa
push
and
push
cmc
inc
adc
cs
or
jb
pop
lret
jns
pop
je
adc
mov
pop
inc
push
lcall
mov
inc
mov
pop
add
jns
push
scas
les
inc
ret
rolb
adc
pop
fs
shll
loopw
les
nop
xchg
popl
xchg
push
dec
push
push
xchg
push
push
and
lret
test
adcl
repz
push
xchg
and
add
js
or
cltd
ss
lret
imul
inc
cmp
jo
or
sub
adc
test
addb
xchg
mov
jnp
xchg
and
push
fldl
xchg
cmp
push
mov
rcr
sti
pop
inc
les
loope
inc
add
mov
js
pop
or
test
push
push
and
add
inc
nop
das
xor
ret
cmp
mov
pusha
pop
jnp
jmp
out
cmpsb
cmp
in
sbb
jecxz
out
push
pop
repz
test
std
mov
sbb
lcall
xor
pop
inc
push
les
lret
jns
fs
mov
cmp
mov
filds
mov
es
sbb
adc
data16
dec
mov
shl
or
jecxz
fcoml
ja
mov
jne
arpl
repnz
scas
mov
fs
in
push
cmpb
and
scas
sti
adc
xchg
mov
clc
push
inc
call
ja
ljmp
les
add
sbb
jmp
js
movsl
pop
mov
and
movsb
xor
test
cmp
add
fcomps
inc
addl
or
or
test
pop
push
jmp
daa
cltd
cmp
repz
add
repz
add
arpl
push
jmp
xchg
orb
push
adc
sbb
mov
and
int3
lahf
insl
fnop
in
xchg
cmc
cli
movsl
and
or
jns
and
loopne
movsl
jle
inc
mov
js
enter
je
shl
pop
mov
pushf
iret
fs
xchg
or
inc
call
fs
insb
jnp
xchg
dec
movsb
rcrl
push
pop
repz
sbb
pop
pop
sub
push
sahf
lahf
cwtl
and
jg
adc
push
div
sbb
jg
pop
movsb
sub
movsl
jl
fisttps
ja
jge
mov
clc
pop
loop
pop
xor
into
cmp
or
inc
in
shll
scas
ja
jne
in
adc
mov
sub
pop
fisubrl
and
jne
cmp
leave
jecxz
adc
mov
cmp
lret
add
pop
inc
in
fisttps
mov
fdivrl
js
jno
lock
mov
pop
ljmp
into
mov
mov
sub
ret
pop
sub
stos
insb
data16
xchg
in
sarl
cmp
sbb
test
pop
aad
out
push
cmp
scas
icebp
out
test
imul
std
jge
into
jne
push
jmp
std
sbb
scas
iret
test
es
xchg
pop
in
js
test
and
mov
leave
jo
dec
or
adc
adc
shl
sbb
aaa
add
outsl
nop
and
push
int3
pop
cmpsl
sbb
int3
mov
mov
ret
adc
mov
andl
movl
add
inc
scas
sbb
jl
add
daa
es
cmc
and
adc
mov
int3
mov
popf
fs
jmp
es
adc
stos
xchg
jbe
inc
fwait
lcall
cmovge
push
clc
aad
mov
popf
inc
out
movsl
jno
pop
insb
jae
xlat
jge
popa
sbb
clc
jge
add
es
repz
dec
hlt
dec
lock
or
idivb
ror
sbb
xchg
repz
ret
mov
mov
cmp
test
call
sarl
insb
adc
sub
icebp
cwtl
int
or
dec
add
outsb
cmp
fmuls
sbb
xor
jne
push
inc
jnp
mov
push
or
sub
xlat
or
pop
add
dec
cmpsb
xchg
xor
jge
and
data16
dec
loop
push
xchg
xor
adc
and
push
cmp
push
ljmp
sbb
or
popf
push
pusha
subl
push
jbe
push
xchg
insb
leave
inc
or
cs
cmpsb
filds
cmp
inc
inc
or
mov
add
repz
repnz
fiadds
nop
mov
sub
add
in
cmc
jge
sbb
jnp
jno
push
repnz
mov
push
cmp
cmpsb
jae
test
xor
push
mov
push
xchg
cmp
stos
sub
ret
jp
sub
fcompl
icebp
imul
inc
cmc
mov
stos
cwtl
repz
or
imul
addl
hlt
add
mov
insl
das
mov
push
jne
popf
sub
pop
xchg
rolb
push
loop
push
pop
push
repz
pushf
insb
rcrl
pop
fwait
scas
orps
lret
mov
and
dec
xchg
rolb
jns
jp
or
or
add
jne
shrl
call
inc
aad
jmp
xor
jge
sbb
sbb
repnz
pushf
adc
and
xor
cs
adc
xor
or
test
or
pop
pop
insb
sub
fwait
icebp
lods
jnp
shlb
adc
jg
cmpsb
bound
test
ret
fwait
jge
xor
xchg
aam
cmpsl
insb
out
stos
sub
inc
xchg
ret
mov
jbe
cwtl
icebp
or
mov
je
adc
bound
push
fs
mov
shll
arpl
stc
mov
aas
imul
test
push
lods
or
nop
jbe
dec
and
xchg
movsl
stos
das
scas
scas
dec
std
mov
enter
sti
or
add
stos
mov
dec
sbb
add
leave
dec
fs
das
pop
inc
lock
imul
and
aad
out
test
out
ss
mov
and
cld
sbb
pop
fwait
popf
and
xchg
ja
pop
mov
rcrl
add
cld
mov
inc
mov
xchg
jl
js
loopne
call
sub
push
push
lcall
insb
mov
mov
jb
adc
pusha
mul
rcrl
jge,pn
mov
sub
iret
shll
jo
xor
ret
pop
jmp
xchg
idivl
outsb
xchg
jl
inc
in
inc
xchg
push
andb
mov
cmp
addr16
sub
popf
fimull
aad
sarb
jle
push
popf
mov
xlat
mov
scas
mov
bound
add
mov
and
cmc
adc
out
daa
sbb
scas
pop
fbld
jle
dec
scas
mov
dec
dec
xchg
repz
call
cmp
movsb
cmp
cmp
mov
popf
push
out
jmp
push
imul
int3
ficomps
inc
dec
adc
xor
loop
push
sub
cmc
sub
jmp
mov
mov
fnstenv
mov
add
or
nop
lea
push
pop
lea
sarb
shlb
in
aam
add
mov
dec
arpl
push
sbb
cmp
jae
lea
hlt
dec
cltd
cli
inc
sahf
sub
iret
mov
bound
xchg
push
push
repnz
inc
ss
adcb
movb
nop
addr16
mov
ror
inc
cltd
scas
repnz
js
outsl
lcall
icebp
push
mov
cmpsl
in
dec
add
sub
movsl
mov
xlat
jl
and
dec
rcrb
aaa
sahf
jnp
jmp
or
adcl
mov
mov
xchg
and
clc
subb
jb
sub
sub
sbb
sbb
rolb
push
cmp
cmp
jo
lea
test
adc
out
cmp
repz
mov
pop
popf
and
les
dec
jp
cs
stc
xlat
ss
or
inc
sahf
sarl
xor
cmp
pop
outsl
xchg
push
sub
push
daa
loope
int3
popf
loopne
pop
pop
lret
mov
cmp
pop
dec
cmpl
lret
out
enter
hlt
repz
pop
js
lock
jbe
cmp
inc
adc
sub
dec
outsb
sbb
rol
cld
fs
ret
loopne
inc
push
aas
andb
push
icebp
insb
jg
aad
pop
out
andl
push
mov
nop
mov
fs
gs
imul
lret
sub
repnz
push
rorl
dec
dec
and
shrb
imul
pop
inc
pop
xchg
mov
lock
mov
jo
lcall
or
jmp
sbb
sbb
cmpl
cmp
mov
adc
je
or
mov
xchg
movsl
cmp
inc
mov
pop
sub
jp
push
add
jne
orb
or
test
bswap
call
xor
out
adcl
insl
dec
add
in
sbb
lcall
cli
cmp
movsb
loopne
js
roll
popf
cmpsl
mov
stos
jle
rcrb
jmp
add
movsb
repz
leave
dec
js
jbe
cmp
jbe
sbb
iret
nop
and
sti
ds
cmp
lcall
xchg
adc
loopne
jecxz
add
or
and
push
adc
inc
add
sub
sub
data16
data16
push
pop
fdivrs
loop
rcrl
lret
inc
xor
or
inc
in
adcl
or
rolb
xlat
mov
shll
aam
mov
sub
sub
mov
lds
jp
add
add
mov
xor
add
enter
fistl
stos
jae
jp
inc
cld
in
mov
and
inc
lcall
pop
push
cltd
sbb
int3
mov
inc
aad
mov
out
idivl
mov
lcall
push
cmp
mov
mov
dec
addb
xor
out
dec
jge
cmpsl
decl
lods
xlat
pop
mov
fsubl
scas
lock
lods
and
fistps
fs
and
and
inc
sarl
mov
lods
out
jnp
sahf
or
cmp
mov
dec
lret
jnp
data16
jl
sbb
push
fcom
push
pop
mov
and
cmp
pop
and
fwait
pop
in
xchg
mov
mov
ret
and
cmc
inc
sub
mov
cmp
push
in
dec
flds
inc
push
xchg
lods
aam
loop
xor
xor
testb
negl
mov
les
lahf
test
dec
inc
jmp
or
aas
sahf
mov
movsb
pusha
and
loop
dec
add
dec
js
xlat
leave
das
sub
dec
fisubrl
mov
mov
out
pusha
inc
jno
das
clc
nop
loopne
sbbl
xchg
sbb
insb
pusha
aaa
cmp
test
push
cwtl
or
pusha
adc
cmpsl
fwait
arpl
aam
cmc
pop
clc
xor
xor
pop
xchg
mov
or
sub
inc
adc
jmp
mov
mov
pcmpgtd
aam
push
mov
cli
inc
jle
aam
push
pop
or
pop
jo
es
mov
fdivl
dec
pop
rcr
inc
adc
lods
pop
pop
lods
and
mov
ret
pop
sarb
adc
mov
sar
mov
rolb
and
xor
pop
adc
lret
outsb
out
loopne
loope
adc
inc
jmp
mov
popa
mov
fwait
dec
push
inc
cmp
fyl2xp1
and
or
ds
xor
sbb
push
mov
jmp
adc
push
mov
call
mov
popf
enter
js
jo
rcr
repnz
push
cmp
dec
negl
fwait
add
jecxz
mov
test
fistl
arpl
mov
hlt
sbb
shll
adc
test
xchg
push
loop
hlt
popa
lret
mov
jle
pusha
adc
int3
ficoms
add
mov
mov
fidivs
xchg
push
pop
gs
xchg
outsl
and
ljmp
out
mov
add
hlt
dec
sub
orb
stos
jg
xor
push
ds
movsl
pop
lahf
cmp
mov
sub
arpl
insl
inc
mov
push
sbb
cmp
lds
mov
pop
stos
out
sbb
repz
mov
cmpsl
push
push
adc
jno
xchg
mov
imul
scas
test
push
gs
in
in
add
lock
add
cmp
inc
dec
push
push
xchg
jbe
xchg
les
ds
cli
mov
adc
sub
cmpsl
out
jo
add
mull
lea
mov
orb
mov
cli
jg
mov
push
sub
aad
cmp
cmp
jg
in
shr
jmp
je
mov
xchg
cmp
fnstcw
imul
cld
mov
push
mov
push
inc
jbe
sarb
mov
aas
mov
mov
scas
mov
int3
test
inc
jge
sarb
cmp
pop
lods
out
xchg
sub
xchg
xor
sub
jnp
sbb
inc
fnstenv
pop
mov
jl
stos
push
shlb
cmpsl
icebp
daa
je
inc
pop
repz
lds
out
lods
cmpsl
clc
shlb
and
out
sti
shlb
fiadds
aaa
sbb
pop
test
push
mov
movaps
add
fcomps
pop
aad
pop
jg
jae
loope
popa
ss
pop
outsb
icebp
inc
lret
fnstsw
push
push
jl
mov
push
ss
dec
push
out
int
dec
rcll
xchg
rolb
xchg
sub
or
fwait
sbb
xchg
add
pushf
push
popa
dec
jb
jge
out
sbb
mov
insl
int
push
cmp
xchg
push
daa
ret
jnp
je
fistps
in
or
xchg
clc
push
mul
idivl
xor
inc
int
or
jecxz
cmc
outsb
push
push
inc
fwait
test
push
push
mov
aam
or
xor
jle
sbb
int3
ret
or
rol
cwtl
xor
push
push
dec
pop
pop
lahf
pop
inc
push
insb
jo
jecxz
add
mov
jns
xor
hlt
pop
xor
and
add
ljmp
and
fs
push
dec
out
xchg
loop
mov
and
xchg
cmp
fistpl
sub
push
and
loop
inc
fcoml
inc
ljmp
fstpl
inc
add
ficoml
mov
dec
and
cmpsb
loopne
clc
adc
dec
pop
in
jae
aad
xor
pop
and
aad
std
mov
sbb
lock
ss
ljmp
subb
sarb
ret
pop
imul
int
out
add
jne
cmp
mov
dec
sbb
mov
fisubl
lds
out
xor
in
nop
lods
cmp
mov
movb
cwtl
or
fdivrl
mov
sbb
outsl
movsb
outsb
inc
xchg
jge
mov
lods
aad
push
std
testb
ja
push
pop
fstps
push
xor
xchg
je
or
lea
sbb
pop
mov
cltd
ficompl
shl
adc
jbe
dec
dec
addr16
rcrl
jbe
sub
movsl
push
pushf
cltd
adc
sbb
jge
xor
xchg
outsb
xchg
ss
out
mov
jmp
mov
lods
mov
push
enter
push
les
mov
xlat
sub
inc
mov
rcl
idivb
mov
sbb
fildl
lds
add
dec
mov
push
arpl
adcl
je
jbe
pop
adcl
push
mov
or
loope
repnz
jns
jl
outsl
sub
sub
test
dec
push
dec
and
mov
or
call
stos
mov
out
dec
cmp
sub
pop
out
repnz
sub
and
add
push
scas
push
push
mov
dec
data16
stc
das
in
fisubs
loop
inc
in
dec
and
jbe
mov
out
inc
jne
mov
popf
cmp
addr16
inc
ss
inc
mov
jae
testl
mov
sbb
pop
ds
cmpsb
lods
dec
ss
arpl
repnz
notb
jle
mov
mov
fisubs
scas
inc
stos
mov
pop
loope
add
cmp
sbb
mov
adc
stos
xchg
pop
cmp
push
xchg
adc
pop
xchg
mov
insl
inc
sub
jmp
push
rcrl
sub
ds
mov
rcr
xchg
int
lock
xchg
std
fdivs
and
mov
mov
pop
cmpsb
outsb
jbe
and
je
jle
pop
in
in
mov
jg
outsl
and
test
loop
es
sub
push
cmpsb
mov
mov
lret
push
jecxz
pop
pushf
rcr
sbb
test
pop
pop
mov
adc
js
call
loopne
inc
imul
cmpb
cmp
out
in
fisubs
xor
bound
add
inc
cmp
push
lds
sbb
mov
fwait
cmp
or
push
ja
loope
hlt
repz
mov
es
dec
adc
xor
inc
scas
sbb
push
mov
out
loope
jbe
ljmp
xor
leave
ret
pushaw
add
popa
sub
jns
pop
decb
inc
outsl
mov
cwtl
xor
ds
and
js
sub
inc
in
mov
push
dec
jnp
out
cmc
loopne
cmp
in
cmpsb
jbe
mov
sub
loopne
std
xchg
xlat
shll
je
mov
pop
pop
mul
adc
push
sub
adc
ja
loopne
test
push
mov
jne
lcall
inc
xchg
jmp
cmp
mov
bnd
lock
push
mov
xor
xor
adc
push
xchg
into
cmp
sub
or
jns
pop
mov
inc
nop
hlt
test
jecxz
jle
outsb
mov
or
mov
xor
fimuls
mov
sub
rorb
mov
clc
mov
lcall
arpl
or
pop
mov
jl
popa
sbb
aaa
push
sub
and
sub
je
add
pop
aam
jo
sbb
addr16
and
test
xchg
mov
pusha
mov
into
insl
sbb
sbb
std
mov
push
mov
je
sub
aad
shl
gs
nop
fucom
lcall
xorb
mov
mov
leave
mov
inc
cmpsl
mov
or
shl
jle
addr16
or
xchg
pop
shlb
rorb
movsl
hlt
jbe
inc
push
shl
xor
jmp
addr16
xor
mov
adc
lock
ja
cmp
push
int
insl
xchg
fisubl
out
pop
ds
jbe
sub
sar
leave
pop
bound
aaa
jle
dec
and
js
jne
and
dec
dec
rorb
mov
leave
bound
pop
pusha
mov
into
aas
jle
les
fwait
jge
or
push
dec
add
pop
inc
rcrl
test
outsl
inc
jne
and
loop
xor
pop
push
cmp
inc
stos
out
fcompl
mov
xor
cwtl
addr16
cmp
xor
mov
mov
mov
lret
fwait
add
das
mov
test
je
andl
scas
fwait
in
stc
ss
push
pop
and
movb
xor
lahf
hlt
jns
xorb
outsl
jo
push
push
insl
xor
test
repz
pop
fidivrs
loope
xor
xchg
jmp
enter
cmp
pushf
pop
scas
imul
and
lea
adc
lret
movsl
xor
cmp
fcom
and
les
lahf
aam
add
negl
or
pop
jnp
adc
stc
sbb
andb
inc
daa
push
pop
repnz
fxtract
adc
push
adc
ret
ljmp
mov
xchg
adc
call
cmpsl
xor
xchg
xor
jbe
imul
push
lahf
jmp
pop
call
bnd
fisttps
in
mov
xchg
and
mov
scas
mov
xchg
add
push
pop
sbb
lret
ret
jecxz
mov
ficoms
pop
jo
pushf
xchg
fbstp
aaa
add
xchg
mov
mov
orl
mov
aaa
add
je
and
pop
mov
in
mov
cmp
pop
add
fisubrl
data16
mov
mov
fs
loopne
sub
ljmp
and
dec
shrl
fmul
sbb
mov
sub
pop
dec
stos
add
ja
sbb
push
stos
repz
add
ss
xchg
mov
jl
sbb
add
jns
add
clc
xor
cmp
stos
les
enter
sub
sahf
push
pop
std
ret
mov
push
sub
ror
adc
xor
and
iret
dec
movsb
lea
addr16
dec
das
mov
mov
jb
imul
jo
loope
pop
lds
sbb
push
inc
add
inc
pusha
xor
pop
dec
jge
in
mov
fimuls
daa
and
sbb
std
lret
xchg
orb
mov
cmp
aaa
addr16
sub
loopne
mov
dec
lock
or
jne
cld
divl
cmpsb
adc
divb
fdiv
pop
sub
jmp
pop
arpl
je
jecxz
loopne
outsl
mov
push
mov
cmc
dec
adc
dec
test
stos
sbb
sub
imul
jmp
shl
cmpb
add
adc
inc
add
aaa
lret
rclb
or
jne
repz
push
sbb
cs
jnp
ss
dec
add
add
sbb
jnp
pop
loopne
mov
sub
addb
cltd
cmp
sbb
and
dec
lret
mov
push
mov
mov
shll
movsb
std
int
cwtl
pop
pop
movsl
xchg
ror
xchg
adc
push
dec
and
dec
stos
orl
inc
fldt
repz
int
out
ror
dec
or
int3
pop
fimull
push
add
daa
lods
add
push
xor
std
add
inc
repz
js
mov
jns
dec
and
xor
stos
fdivs
mov
pop
mov
andl
inc
add
jle
dec
sub
add
out
data16
fidivs
xchg
inc
mov
das
sete
xchg
cs
out
sbb
into
dec
iret
divb
fiadds
incb
stc
sub
adc
inc
add
fldcw
out
cmp
pop
cmp
dec
pusha
adc
cmp
hlt
ficoms
cmp
add
or
sbb
or
lock
mov
jno
fwait
loope
in
or
pop
or
xchg
inc
mov
dec
fldenv
subb
xchg
inc
orb
cmc
shr
or
in
outsl
dec
mov
movsb
dec
mov
sti
jnp
pop
call
pop
dec
jle
mov
xor
or
mov
jp
and
mov
cmpsb
xor
cmp
ljmp
aaa
stos
je
gs
mov
ret
cmpsb
sbb
pop
ss
inc
leave
mov
push
mov
insl
sub
jge
xchg
out
pop
fiaddl
aad
ss
jno
jb
mov
jle
idivl
das
adc
xor
mov
dec
inc
cmp
xchg
sub
call
js
je
adc
sbb
gs
inc
sti
sbb
fdivrl
icebp
pushf
cmpsb
in
leave
stc
lahf
fidivrs
xor
out
bnd
iret
xchg
fstl
imulb
in
xchg
loope
cwtl
inc
sub
shr
data16
sbb
xchg
mov
mov
xchg
cwtl
add
mov
loop
andl
cmp
inc
call
push
and
xlat
mov
push
cmpsl
sbb
mov
pop
nop
xor
cmpb
cmp
test
movsl
mov
jae
subl
or
xchg
or
adc
or
das
mov
jbe
pop
and
inc
jle
cwtl
mov
pop
pop
movsb
bound
add
jecxz
xor
scas
inc
mov
dec
cmc
push
mov
mov
push
xor
ss
jl
inc
iret
add
popa
test
sbbl
sub
pop
jae
push
cmp
dec
pusha
rorb
push
out
pop
pushf
push
repz
out
xor
mov
outsb
pop
icebp
mov
lahf
pop
shlb
lea
cld
mov
adc
mov
jne
add
loope
and
mov
dec
inc
pop
mov
pop
sahf
mov
jmp
out
stos
push
in
in
xchg
push
xchg
mov
fmull
jmp
mov
test
push
bnd
adc
dec
sub
loopne
or
cmp
inc
xor
ss
mov
imull
pop
fcompl
out
mov
cmp
inc
jmp
sbb
sbb
and
mov
sub
jmp
loope
xchg
xchg
les
pushf
mov
push
nop
xchg
dec
imul
popl
xchg
ss
test
sub
int3
outsl
xor
fidivrl
pushf
js
movsl
dec
repz
fstpl
out
mov
mov
sbb
nop
sbb
cli
lahf
out
fsts
xchg
push
repz
dec
pop
aas
mov
lea
rcrb
inc
adc
gs
pop
adc
mov
inc
pop
cmp
inc
adc
in
cmpsb
push
sub
aas
outsl
ret
repnz
push
sbb
test
sub
or
aam
ss
mov
mul
mov
pop
das
or
dec
add
das
mov
fwait
sub
adc
test
ds
lret
in
cmc
cltd
les
pop
iret
ret
mov
mov
loopne
test
lret
pop
xchg
lock
push
cmpsb
out
lock
or
and
mov
imul
xchg
loopne
sbb
aaa
dec
xchg
push
or
dec
cmp
push
xchg
arpl
sahf
sub
loopne
inc
lock
add
pop
arpl
mov
popa
adc
cmc
mov
push
popa
js
fdivrp
push
and
and
andl
cmp
ljmp
cmpsb
lds
hlt
stc
loope
scas
insl
xor
pop
aas
xchg
bound
mov
pop
das
scas
cmp
mov
dec
out
mov
jmp
push
das
cltd
mov
std
mov
stos
pop
fwait
icebp
in
in
nop
add
imul
push
ja
xlat
cltd
xchg
cmp
scas
and
pop
pusha
iret
sub
aas
sti
fldt
dec
add
test
pop
ja
mov
dec
ljmp
cmpsl
pop
iret
inc
outsb
mov
loop
mov
or
ficoml
movsl
xchg
jnp
jbe
aas
iret
rcll
or
mov
gs
adc
je
lods
aam
int
lock
lcall
dec
je
int
adc
add
mov
push
in
add
cwtl
lods
push
sbb
mov
addr16
jne,pn
xor
pop
push
xorb
cmpxchg
sahf
mov
sbb
pop
into
ret
jmp
ret
pop
out
stos
xor
in
scas
dec
push
outsb
sub
jecxz
lret
imul
mov
xor
xchg
pop
xor
jns
cwtl
into
xchg
adc
outsb
int
addb
int3
in
add
mov
mov
mov
cld
and
nop
loop
dec
es
mov
jnp
mov
push
cmp
fisubs
xchg
aad
push
insb
sbb
daa
cmp
ds
xor
jbe
xor
sbb
fmuls
orb
and
adc
lods
dec
xor
mov
pop
shlb
in
sbb
cmp
les
mov
cs
mov
sub
fldt
frstor
popf
in
or
outsb
mov
or
adc
pop
and
call
xor
jp
cmp
adc
sti
pop
lcall
or
xchg
fdivrp
divl
mov
sbb
add
mov
push
push
stos
aad
shl
pusha
cmp
imul
iret
pop
add
pop
push
pushf
xchg
dec
aaa
xor
jne
cmpsb
sbb
dec
sub
out
cmp
popf
pop
scas
aad
in
inc
mov
aas
and
push
subl
jne
xlat
xchg
sub
pop
arpl
movsb
adc
jno
xchg
dec
out
mov
popf
mov
push
sbb
jle
mov
mov
outsl
add
mov
lods
jmp
aam
out
outsl
shrb
mov
rorb
xor
lahf
cli
sbb
mov
scas
sbb
mov
jmp
in
sbb
xor
data16
xor
faddl
and
call
fidivs
mov
pop
cs
in
mov
pop
hlt
test
loopne
and
pop
dec
cmp
fwait
cmp
push
or
push
xchg
push
cld
out
rcrl
lret
std
dec
les
adc
xor
int3
roll
jge
push
sbb
xor
test
mov
and
nop
adc
ss
pop
mov
pop
jmp
pop
or
pop
das
in
out
test
xchg
daa
pop
jae
test
test
or
scas
adc
mov
xchg
fmull
insb
or
and
int3
mov
jbe
dec
rcll
clc
cmpsb
dec
sub
daa
fs
lods
mov
adc
sahf
popf
test
pushf
enter
xchg
je
ja
adc
cmp
sbb
xchg
loopne
add
clc
mov
mov
xor
notl
adc
enter
movsb
adc
dec
cli
ret
adc
pusha
and
push
adc
loop
xor
pop
loope
jns
stos
lcall
fcoml
sti
push
xor
mov
xchg
std
sbb
push
mov
sbb
mov
lods
xor
sbb
adc
xchg
test
pusha
dec
and
cmc
push
lret
sbb
fiaddl
jns
push
inc
movsb
pop
shlb
es
sbb
jg
pusha
pop
pop
dec
cltd
movsl
jb
xchg
pop
xor
out
push
jle
mov
cmp
es
cmpsl
mov
ja
and
push
test
push
jg
push
xchg
adc
cwtl
add
outsl
and
or
push
adc
lds
pop
out
xchg
ljmp
xchg
sub
repz
xchg
jg
imul
aad
pop
mov
je
mov
daa
jb
inc
mov
test
mov
xchg
and
ret
sets
and
movsb
bswap
mov
test
sbb
sbb
sub
faddl
or
fucomi
fbld
cmc
sbb
jne
xor
sub
pop
pusha
inc
pop
pop
cmpsb
xchg
mov
or
xor
or
sbb
lret
outsl
or
cmpsl
xchg
dec
xchg
inc
add
mov
mov
pop
sub
mov
fiaddl
pusha
xor
cmp
test
sub
in
xchg
add
movsb
sub
jmp
enter
cmp
into
lock
mov
mov
out
ljmp
add
cmp
mov
outsb
mov
add
or
scas
jle
cltd
loope
into
bound
fnsave
clc
xchg
mov
cmp
int
jae
scas
lods
mov
divb
xchg
mov
xor
ds
inc
jbe
pop
sarl
or
movsb
jb
je
sbb
dec
sbb
pop
daa
or
mov
mov
mov
ds
sarb
jb
in
lahf
imul
insb
mov
fcmovne
lahf
push
nop
pop
mov
push
lea
das
adc
insb
shlb
add
mov
popa
inc
push
clc
and
dec
scas
cmp
inc
cmp
pop
hlt
aas
aad
mov
or
mov
adc
mov
add
ret
mov
xor
stos
xor
mov
std
and
xor
mov
icebp
aad
pop
loop
push
js
xchg
popaw
jecxz
mov
hlt
and
push
sub
mov
inc
mov
js
sub
js
xor
test
mov
ret
adc
sub
and
jne
xchg
jecxz
sbb
cltd
ds
jg
push
cmpb
jbe
scas
pop
pop
and
sti
sub
aaa
xchg
cmp
push
loopne
mov
pop
repz
and
lret
mov
xor
cmp
ljmp
enter
int3
enter
fcomps
pop
pop
imul
mov
ljmp
inc
or
inc
xor
jmp
daa
fs
cmpsl
jno
pop
sti
popf
int3
pop
inc
das
nop
adc
js
mov
adcb
decb
sahf
inc
inc
cmpsb
insb
mov
push
cmp
insl
subb
or
iret
int
xchg
adc
lea
dec
loop
sub
call
bound
iret
sub
repz
setl
sub
lods
fnstsw
mov
lods
jmp
orb
xchg
mov
lret
fsubp
dec
inc
inc
aad
out
xchg
inc
pusha
xchg
insb
cmp
push
push
je
jb
jmp
pop
mov
lahf
mov
xlat
jnp
rorb
rorb
sbb
jno
shll
sbb
push
dec
sbb
or
daa
mov
clc
adc
inc
popa
pop
loopne
add
sbb
mov
cmp
push
insl
shll
push
push
clc
cmp
aad
out
mov
sub
mov
mov
mov
adc
inc
in
jb
cs
cmp
insb
push
push
inc
mov
arpl
ja
sub
mov
xchg
pushl
xlat
je
mov
cmp
mov
jg
lahf
add
dec
or
sbb
dec
fistl
jg,pn
pop
pop
int3
mov
or
push
inc
ficoms
pusha
pop
rcl
xchg
push
dec
push
xor
pop
cmp
jecxz
sub
call
push
mov
cld
push
mov
fidivl
or
mov
lret
stos
jle
pop
add
sub
movsl
lds
repnz
shlb
inc
cmp
andl
xor
jle
cwtl
pop
pushf
mov
cmp
inc
push
pop
adc
add
outsb
pop
or
mov
lcall
xchg
incl
pushf
fisttpl
stos
outsb
push
xchg
xchg
jge
pop
jecxz
push
dec
mov
dec
or
insl
not
and
xchg
cmp
in
ret
xchg
mov
imul
fmul
cmc
mov
test
jg
mov
into
jecxz
pop
and
addr16
imul
sbb
fwait
dec
rcll
inc
mov
cmpsb
pop
fists
inc
dec
xor
push
pop
scas
insb
add
pop
add
dec
jae
xchg
nop
push
and
jmp
mov
or
jmp
xor
mov
or
xchg
mov
mov
pusha
loopne
scas
mov
cmp
and
mov
jp
pusha
or
fldl
outsb
push
idivb
dec
inc
cmp
mov
cmpb
inc
jp
test
fs
les
or
jnp
and
or
imulb
scas
mov
in
jmp
inc
pop
mov
nop
push
or
sbb
sbb
cmpsb
clc
fisubl
int
pop
mov
jns
mov
dec
xchg
push
insb
and
ljmp
je
popf
out
in
ret
cmpsl
pop
cmp
dec
das
std
pop
out
pop
popf
or
arpl
fwait
daa
out
mov
sbb
mov
imul
lods
xchg
ljmp
mov
xlat
xchg
leave
mov
jae
icebp
dec
dec
or
sarb
add
jnp
scas
push
cli
push
sbb
mov
dec
jg
sub
mov
jle
test
sbb
dec
add
mov
xchg
lea
jbe
pop
xlat
sub
pop
pushf
xor
mov
jecxz
push
mov
pushf
push
addr16
mov
adc
roll
sub
in
rcll
lds
stc
push
xor
sub
mov
cmp
adc
lock
push
push
orl
jne
sub
repz
and
call
clc
sub
shrb
mov
arpl
jg
into
fistps
pusha
adc
test
mov
mov
sub
xor
jno
jmp
mov
je
pop
xchg
adcl
sahf
pop
xchg
outsl
icebp
sub
mov
inc
mov
jns
mov
out
adc
js
dec
push
mov
adc
xor
cli
pop
xor
leave
call
movsb
cmp
cmp
imul
lods
or
mov
mov
or
pop
popa
xor
jbe
ja
fstpl
mov
push
insl
mov
aaa
arpl
sbb
stos
sub
and
pop
mov
cmp
lods
shrl
std
mov
sarb
lods
out
mov
xchg
scas
nop
push
or
cmp
fldcw
jl
add
aad
cmpsb
cmp
push
xchg
das
je
test
js
dec
mov
xchg
mov
outsb
popa
mov
mov
sub
test
cmpsb
ret
adc
dec
stc
and
sub
mov
loop
ret
add
bound
mov
or
mov
outsl
and
sbb
jle
fwait
mov
lock
fidivl
ret
iret
jmp
jg
jnp
les
pop
scas
cmpb
out
movsl
cwtl
or
cmp
pop
repnz
cmp
jge
lock
call
cld
or
dec
sbb
xchg
jnp
mov
movsl
jb
or
clc
flds
mov
in
std
cltd
lea
test
mov
int
cs
push
dec
repz
out
jno
pop
test
push
push
xchg
mov
cmp
xor
in
mov
les
add
lret
mov
test
push
fisubl
push
fadds
cld
movswl
mov
aad
lahf
fwait
outsl
pop
pop
sbb
ret
push
ss
mov
adc
repnz
stos
shl
das
pop
mov
xor
push
pushf
jne
loope
adc
cltd
sub
xchg
filds
ja
cmp
lea
sub
and
cmpl
push
test
xor
cmp
lahf
and
jno
mov
pop
add
mov
jecxz
jne
repnz
outsb
push
fdivp
ss
out
imul
idiv
lahf
dec
or
test
inc
xlat
xor
jb
scas
clc
mov
fistps
add
aam
daa
scas
sbb
mov
sub
push
pop
dec
xchg
aas
std
stc
test
mov
add
xchg
dec
cmp
stos
outsl
pop
dec
mov
aaa
and
push
jne
out
push
call
sub
pop
add
lcall
sub
jns
push
lret
xor
push
mov
pop
push
loope
imul
mov
out
xchg
inc
loope
mull
jne
push
cli
dec
ret
popf
sbb
push
dec
mov
pop
pop
pop
cmp
dec
sbb
sub
out
sbb
shl
shr
mov
ss
inc
mov
rcl
push
pop
pop
pop
aad
in
cmp
fwait
dec
xor
add
das
xchg
lea
lahf
loope
scas
cmp
jp
sarb
filds
mov
push
in
movsl
repz
and
cli
adc
fstpl
daa
enter
std
aas
sub
xchg
clc
mov
inc
push
xchg
mov
and
cmp
lcall
inc
es
shrb
pushf
lcall
xchg
xor
sahf
into
mov
cmc
jge
dec
cmp
push
in
cwtl
dec
pop
hlt
or
jae
mov
xchg
and
pop
cmc
loop
jp
lock
sbb
or
aas
mov
insb
orl
sub
sbb
or
mov
jg
xchg
fs
movsl
sbb
lds
pusha
push
inc
testl
mov
iret
addr16
bnd
push
push
pop
hlt
out
loop
loop
xchg
ja
ret
in
sbbl
cmpsb
push
xor
andl
lahf
pop
push
or
arpl
adc
add
add
or
pop
or
int
or
push
aad
mov
dec
xchg
test
jno
mov
mov
or
ret
pop
test
fadds
add
jecxz
mov
xchg
lcall
ljmp
jns
sub
scas
sbb
xor
shrl
outsl
push
pop
push
icebp
sti
loop
mov
mov
test
lret
push
sarb
inc
cwtl
lods
sbb
data16
push
scas
repz
scas
cs
xor
pop
fisubrs
in
rorl
and
mov
or
stc
dec
fistl
mov
inc
pop
mov
shlb
popf
sub
xchg
test
fwait
shlb
test
xor
inc
pop
lahf
ficomps
aad
movsb
rorl
cltd
jmp
jg
ja
mov
lock
popf
ret
lods
cmp
adc
cmp
or
mov
shlb
ret
add
and
dec
in
arpl
cmpsb
mov
rorl
jb
or
aaa
sarl
imul
xor
sbb
mov
jae
jno
rcr
dec
mov
loopne
xchg
jle
xchg
push
mov
push
lds
outsl
cli
jb
popf
imul
popf
ljmp
lods
adc
adcl
fisubl
call
mov
and
inc
xor
div
in
in
test
jmp
dec
int3
mov
add
jmp
push
cwtl
sti
and
test
leave
cmp
xchg
movsl
loop
and
or
gs
dec
mov
sub
lcall
mov
jb
push
mov
jl
stos
sbb
lds
ret
or
inc
dec
pop
cmp
adc
xor
push
pop
pushf
ret
ror
cmpsb
mov
pop
adc
pop
jmp
xchg
inc
push
xchg
lret
inc
mov
push
push
add
jge
and
dec
sbb
dec
mov
and
addb
ss
mov
sbb
rcl
lahf
clc
dec
xchg
mov
mov
bswap
cmovle
dec
lods
inc
insb
fwait
cmp
pushl
jne
out
xor
test
ret
addl
roll
jnp
inc
sbb
jle
insb
inc
and
inc
lret
pop
mov
pop
mov
jo
adc
cmp
rolb
loopne
cmpsb
push
cs
test
add
stos
dec
test
je
aaa
sub
cmp
xchg
mov
push
mov
jne
pop
pusha
and
push
dec
inc
fcompl
ret
jge
rorb
pop
cmp
sbb
and
dec
dec
xlat
jecxz
mov
loope
popf
push
in
movb
cmp
movsl
stc
stos
or
push
push
outsb
jnp
pop
lea
sahf
arpl
cmp
mov
loop
mov
int3
pop
mov
shrl
xchg
add
lock
pop
jno
bound
outsb
les
shl
test
shll
add
cld
inc
cs
cs
xchg
jbe
add
fsubr
jle
jno
dec
imul
in
sub
iret
mov
mov
sub
inc
bound
les
cmp
dec
cmp
loop
lcall
pop
cwtl
das
insb
daa
daa
mov
sub
out
dec
xor
std
mov
pushf
mov
push
jge
test
push
jge
sbb
fsts
arpl
in
mov
inc
mov
outsl
sub
aas
testb
mov
std
ret
sbb
je
out
xor
fcoms
loop
lcall
jbe
sbb
jge
shll
cmpsb
xchg
mov
pop
mov
lcall
xlat
mov
mov
sub
sbb
loope
sbb
icebp
cmpsl
mov
or
mov
imul
pop
add
adc
std
cmp
imul
out
cmp
push
leave
mov
incb
sub
int3
xchg
fs
notb
cli
addr16
dec
leave
sar
cmp
fildl
jo
sbb
stos
sub
mov
ret
add
ds
xchg
mov
push
out
das
or
xchg
xor
inc
or
sub
sbbb
adc
pop
mov
ror
ret
jg
adc
data16
add
lods
jecxz
and
sbb
or
xchg
and
cmp
dec
sbb
add
fildll
jne
mov
imul
into
ret
push
aas
mov
lret
out
xor
insl
inc
fs
lods
mov
pop
push
jo
and
ljmp
fidivrl
xchg
mov
repz
jno
icebp
int3
sar
in
sub
jmp
sbb
xchg
clc
xchg
ja
pop
add
or
mov
into
imul
cli
push
mov
std
and
shrb
and
cmpsl
imul
mov
rclb
cmp
inc
xor
or
jo
add
int
jns
addb
sub
clc
mov
mov
push
js
xor
xchg
out
imul
mov
inc
cvttps2pi
mov
and
inc
inc
mov
pop
and
inc
lret
adc
notl
mov
xor
lods
cmc
push
into
adc
mov
sarb
rorb
rcll
xor
lock
mov
pop
mov
push
imul
inc
push
xor
dec
fbld
jae
test
push
cmp
jg
mov
enter
arpl
imul
pop
ja
popf
inc
mov
inc
push
aaa
lock
inc
fbld
cmpsb
lock
test
xor
mov
cmp
sbb
sbb
push
test
xor
mov
movsl
dec
add
adc
aam
pop
scas
add
cli
pusha
mov
stc
xchg
jmp
sub
or
xor
jns
or
adc
das
pop
imul
lret
pop
outsl
jp
or
mulb
mov
xchg
inc
and
cmp
std
lcall
mov
cmp
jle
cmc
imul
pop
sbb
lcall
imul
jb
ss
adc
enter
jg
insl
scas
test
loopne
add
jmp
xchg
jnp
in
lds
ljmp
cmpsl
xor
xor
decl
leave
sub
push
je
dec
sub
fs
pop
adc
and
sub
loope
sbb
jb,pt
in
out
or
rorb
mov
cmpsb
push
xchg
xchg
aaa
push
mov
mov
sub
push
jns
lret
xor
jne
push
pop
mov
stc
pop
data16
adc
cmp
mov
sbb
sbb
add
insl
xchg
lcall
ja
and
push
imul
ljmp
sub
mov
inc
iret
stos
ret
movsb
xor
adc
fs
mov
stc
jp
jecxz
push
adc
mov
xor
leave
movsb
cli
sbb
das
xchg
push
lcall
imul
push
cmp
or
fmuls
jl
push
ja
fs
mov
xor
movsl
call
mov
test
xchg
jle
dec
adc
sub
jae
mov
in
popa
push
cmpsb
aaa
xor
aaa
xor
xchg
adc
push
or
xlat
add
les
xor
mov
fldl
cltd
adc
rcrl
repnz
out
fnstsw
xor
cli
loope
mov
cmp
test
pop
sub
jno
mov
cmp
dec
stos
imul
jp
sbb
inc
mov
mov
dec
push
jbe
pop
xchg
arpl
les
outsl
aas
push
add
xor
jo
fisubrs
sub
into
cmp
or
push
jbe
mov
ljmp
xchg
push
pop
inc
sahf
sub
daa
mov
in
push
lods
andb
sbb
in
arpl
sub
mov
sbb
xchg
fstpt
push
add
pop
scas
andb
lret
xor
loope
je
mov
mov
stos
mov
xchg
add
aaa
cli
mov
neg
and
aaa
pop
call
fistl
adc
jae
mov
aam
dec
mov
xor
roll
push
inc
cmp
xchg
pop
sub
mov
test
out
and
shl
xor
loopne
cli
mov
ja
jb
xlat
and
adc
lods
dec
pop
jmp
xlat
imul
mov
popa
push
mov
mov
xor
jbe
notb
pop
xchg
shrb
repz
popa
xchg
dec
stos
mov
repz
lahf
xor
xchg
jns
mov
lock
lahf
ret
popf
add
popa
sub
or
and
mov
mov
mov
rcrb
xor
sahf
and
int
push
add
pop
add
jnp
fists
xor
fcompl
stc
mov
frstor
cmpsl
cmp
aam
in
aad
push
or
add
xor
das
sub
xchg
or
adc
clc
and
pop
jae
add
lahf
xchg
nop
mov
repnz
arpl
dec
rcrb
outsl
xchg
out
and
and
fld
fisubrl
je
dec
push
data16
inc
faddp
mov
pop
pop
mov
pop
mov
dec
loopne
mov
ljmp
je
dec
cwtl
xchg
fstpl
add
pusha
lret
addb
and
int
popf
inc
and
ret
inc
adc
sub
call
sub
mov
xor
and
lcall
fisubs
add
mov
sti
push
xchg
insl
sbb
repnz
cmc
mov
repz
lcall
sti
push
jle
jge
mov
adc
bound
or
movb
cmp
sbb
fmuls
push
and
faddl
ds
jp
xor
sub
xchg
mov
jecxz
fnstcw
or
in
pushf
mov
ds
dec
dec
out
push
adcl
ljmp
sbb
and
mov
mov
jmp
repnz
repz
and
inc
mov
pop
xor
xor
insb
sbb
add
xor
pop
outsl
mov
repnz
popa
dec
cmc
sub
sbb
mov
out
jno
inc
adc
xchg
sbb
push
stos
inc
out
mov
ja
sbb
movsw
xchg
in
faddl
daa
ja
push
shrb
adc
and
das
cmp
mov
pop
stc
and
xor
loop
adc
lods
mov
mov
xchg
aam
sbb
sbb
sub
jmp
out
and
and
adc
dec
fsubl
cmp
mull
adc
out
enter
cmp
or
jo
or
push
inc
push
xor
jnp
cmp
jle
loope
ss
mov
pop
mov
inc
push
cmp
fistps
lock
cmpsb
lea
cmp
testl
fptan
loopne
call
lock
in
gs
rcl
xchg
mov
inc
cmp
push
pop
imul
aad
jno
mov
jmp
fadds
inc
gs
shlb
mov
adc
test
mov
aam
mov
ja
push
cmp
mov
imul
fistps
imull
sbb
cwtl
out
sbbb
fisubrl
push
push
into
mov
pop
mov
stos
and
mov
xchg
movsl
add
pop
adc
fs
les
and
pop
std
xchg
or
sarb
fwait
sbb
adc
fldlg2
adc
arpl
add
cmp
outsl
xor
mov
mov
push
xchg
jecxz
popa
and
add
ja
xor
dec
jmp
mov
cmp
jl
imul
in
adc
imul
lahf
in
js
ljmp
sbb
xchg
daa
push
in
adc
cltd
add
mov
add
enter
mov
popf
add
pop
repnz
bound
ljmp
xor
ss
mov
popf
add
mov
jae
xchg
xor
dec
xchg
out
loopne
pop
lahf
iret
or
push
movsl
adc
loopne
cmp
inc
scas
out
jns
jge
mov
sbb
cmc
les
dec
cmpsb
sbb
outsb
test
mov
pop
aad
dec
hlt
test
sbb
fildll
jp
addb
push
cwtl
not
add
jae
dec
out
xchg
inc
mov
fldl
fsts
add
aaa
pop
mov
add
stos
aas
cmc
jp
push
aas
iret
ficomps
add
and
in
stos
fnstsw
inc
mov
in
bnd
pop
loop
insb
jnp
addr16
push
xchg
or
add
mov
and
xchg
aam
add
jle
std
mov
ja
addl
pushf
sbb
sub
adc
fldl
repz
jno
jecxz
mov
sub
mov
insl
in
std
mov
push
xor
jl
jge
enter
push
addr16
loop
inc
pop
sbb
inc
aam
arpl
and
fsubs
and
inc
pop
aam
addr16
sbb
or
iret
cmp
push
mov
call
inc
scas
push
push
adc
push
mov
pop
xchg
dec
shr
test
push
pop
sub
and
lret
dec
add
mov
scas
mov
xchg
icebp
xchg
and
cmc
icebp
cltd
push
cwtl
sbb
ret
pop
add
sbb
dec
jmp
jg
hlt
dec
push
xchg
loope
xchg
cmp
lods
sbb
pop
out
scas
pop
add
dec
xchg
adc
int
xor
xor
shll
stc
cmc
popa
or
mov
inc
pop
mov
and
push
mov
sub
je
inc
xor
mov
push
mov
scas
and
imul
xchg
pop
jl
push
jl
mov
lret
add
cmp
mov
std
rcll
or
pop
fsubl
imulb
aad
dec
test
dec
aas
sub
stos
mov
mov
push
int
mov
xor
or
into
pop
aas
shl
cmp
xor
mov
out
orl
rcll
xor
stos
cmp
subl
adc
pop
data16
aam
mov
fidivrs
cmc
fldcw
jo
dec
ret
ret
mov
or
pop
sub
xchg
push
sbb
jb
imul
cwtl
jecxz
ret
sub
stc
add
xor
sti
fsubrs
les
push
mov
jp
aam
test
jl
mov
sahf
jns
jbe
cmp
adc
out
repnz
fchs
mov
lods
out
fistpll
gs
imul
mov
into
push
fdivs
jno
dec
sbb
push
sbb
sbb
inc
shlb
rorb
sbb
jecxz
sbb
mov
or
xchg
in
dec
mov
sub
xor
icebp
cmp
sbb
out
xlat
pop
jecxz
sub
movsl
push
inc
mov
mov
fimuls
mov
idivb
cmpb
mov
adc
mov
lahf
repz
push
cmp
pop
pop
cmp
push
ljmp
insb
pushf
jg
cs
and
adc
int3
sbb
sub
sti
stos
xchg
out
xchg
cmpsb
ss
outsl
in
pop
jecxz
in
movsl
stos
clc
gs
sti
cmp
cmc
pusha
fsubl
pop
xor
or
repnz
lcall
call
repnz
mov
cmp
mov
or
xor
in
cmp
or
pop
push
scas
cmp
xchg
and
test
mov
aam
and
imul
lock
and
cmc
mov
jmp
add
inc
sbb
adc
unpcklps
in
sahf
ja
mov
mov
push
lea
in
lods
ja
je
xchg
clc
jl
add
push
mov
add
daa
out
sbbl
pop
pusha
stc
aad
mov
or
xchg
and
push
fiadds
push
scas
outsb
ja
pop
lcall
insl
jmp
dec
ss
fisubrs
add
aaa
lea
sub
in
daa
vmovss
jge
and
sub
sub
les
adc
xchg
int3
hlt
pop
inc
xchg
push
push
and
shll
lds
add
or
lret
mov
add
mov
adc
cmp
addr16
or
repz
cltd
xor
jo
inc
jns
inc
and
stos
mov
pop
shll
aam
jno
lea
stos
jg
adc
pushf
jecxz
gs
push
xor
bound
push
mov
cwtl
ret
mov
adc
mov
jno
cmpsb
sbb
jp
stos
cmc
out
xchg
icebp
pop
in
repz
mov
outsl
inc
scas
shrl
into
mov
shlb
rol
push
adc
invd
add
cmc
out
punpckldq
cmp
fwait
push
push
sbb
mov
fwait
jne
jbe
faddl
clc
es
aaa
push
mov
mov
gs
add
xchg
sarl
fsts
sarl
push
cs
push
ja
mov
dec
movsl
rolb
cld
mov
or
mov
mov
xor
fstl
repz
loopne
dec
sahf
addl
pop
inc
outsl
jns
test
lods
call
shrb
mov
mov
cltd
jg
and
testl
or
adc
xchg
ret
push
and
or
repz
dec
push
test
add
movsb
push
hlt
push
shrb
sbb
sbb
sbb
loop
jo
cmp
push
in
fwait
rcrl
adc
sti
popa
add
call
xchg
shll
loopne
pop
int3
dec
mov
popf
xchg
dec
std
dec
data16
add
adcb
in
stos
push
mov
pusha
aas
cmpsl
and
imul
stos
pop
mov
fnstcw
add
sbb
pushf
lahf
push
inc
mov
jns
sahf
add
imul
mov
sub
sbb
arpl
out
jle
fs
mov
mov
iret
mov
fs
jge
inc
push
daa
lock
cmp
jg
lahf
xchg
outsb
xlat
gs
push
adc
sub
fsub
fwait
rcrb
hlt
jnp
adc
iret
sub
lcall
mov
xor
lea
lds
inc
in
mov
adc
cli
cmc
mov
mov
xor
mov
insb
out
aas
dec
jmp
jne
incl
lret
push
mov
shrb
or
sub
fistl
popf
push
es
dec
mov
inc
std
jmp
adc
inc
cmp
pop
jecxz
mov
sub
insl
and
sarb
jl
inc
lods
xor
push
loop
push
or
sub
xor
clc
test
dec
pop
imul
mov
std
fistps
sbb
movsb
mov
fimull
mov
fiaddl
xchg
add
hlt
gs
mov
push
sbb
rorb
xlat
vpsubd
xor
int
mov
add
aam
out
xchg
adc
jnp
mov
cld
scas
clc
loop
mov
test
jle
inc
mov
xor
mov
sub
mov
or
mov
fsts
xor
jecxz
stc
push
cld
stos
scas
mov
mov
movsl
pop
sub
outsl
fisubl
pop
and
or
push
add
test
inc
lds
test
ficoml
es
or
popa
adc
jmp
ljmp
iret
lds
iret
jno
adc
repz
pushf
lods
dec
scas
testl
add
jns
cmp
dec
stos
push
ljmp
aad
sbb
andb
add
push
mov
rclb
sbb
lea
aas
jl
aaa
fildll
fst
rcrl
insl
mov
sbb
lock
imul
inc
rol
mov
xchg
pop
xchg
ret
jno
or
cmp
pop
sub
jg
mov
mov
push
outsl
stc
rcll
scas
inc
aad
arpl
jne
dec
jp
mov
int
pop
mov
add
adc
push
xlat
ret
out
cltd
push
xchg
mov
shlb
in
ffreep
mov
imul
mov
sbbl
mov
mov
faddp
xor
mov
push
lcall
push
add
mov
fsubrs
scas
jmp
or
jmp
js
cmp
movzbl
jmp
pop
fs
sbb
pop
inc
mov
sub
mov
dec
popa
ret
in
clc
shll
sub
xchg
mov
pushw
mov
outsl
mov
fwait
into
lods
pop
xor
lret
es
dec
sar
mov
pop
fbstp
dec
jp
negl
pop
jnp,pn
cmp
movsl
lds
aas
insb
hlt
scas
pop
push
incb
and
stos
insb
stos
sub
fmull
repz
and
add
leave
mov
mov
pop
repnz
pop
shl
xchg
and
jno
faddl
fwait
xchg
lods
dec
sbb
mov
gs
cmova
cmp
inc
jnp
mov
pop
mov
adcb
pushw
pop
es
out
ss
arpl
movsl
iret
sub
sub
nop
sbb
add
aam
pusha
mov
mov
push
pop
rol
jbe
out
pop
imul
inc
lods
and
insb
adc
cmp
push
inc
mov
cmp
pop
loopne
mov
jnp
je
stos
jp
mov
andl
add
add
insb
xabort
iret
inc
orb
mov
fcmovb
sub
insl
nop
push
push
sahf
sbb
lret
test
inc
cwtl
imul
daa
add
call
mov
xchg
fsubrl
mov
mov
push
and
inc
add
pop
insl
fnstcw
leave
jbe
insb
jge
leave
cs
addr16
inc
dec
enter
sbb
jne
dec
test
out
inc
push
dec
pop
lret
xchg
sbb
inc
cmc
repnz
jmp
sbb
sbbl
mov
xchg
adc
sbb
repz
adc
xchg
sub
jno
adc
or
or
dec
outsb
call
pop
stc
inc
dec
xchg
lods
lret
gs
mov
mov
cmp
push
jne
dec
repz
je
pop
loop
sbb
mov
in
in
and
sti
fiadds
ljmp
mov
sbb
xor
cmp
out
pop
mov
popa
sub
cli
in
or
lcall
push
jbe
loopne
popf
out
imul
out
sub
jp
stos
fs
rclb
mov
mov
aas
adc
fdivp
xlat
cs
lcall
add
xor
inc
stc
movsl
fsubrs
ss
cwtl
adc
mov
rolb
fiaddl
sub
add
jbe
jge
mov
fmull
and
orl
sub
lahf
mov
cmc
push
aam
add
jge
mov
mov
hlt
jns
sbbl
cmpsl
jne
mov
fdivr
pusha
in
ds
xchg
aad
cmp
mov
lods
xchg
cld
outsb
jle
jns
ja
roll
fcmovnbe
leave
shlb
sbb
cld
bound
mov
cmp
sub
hlt
or
adc
xchg
out
cmp
jno,pn
and
divb
or
fsubrl
xchg
add
daa
pop
and
mov
and
rolb
ds
cmpsl
scas
jne
bound
inc
fwait
push
daa
inc
push
jae
or
or
xchg
xor
popa
into
jno
int3
sarb
jne
addb
insb
cmpsl
repz
sbbb
aaa
and
out
sbb
jno
inc
mov
xor
add
cmp
and
mov
xlat
test
stos
and
popa
mov
jle
arpl
sub
adc
aas
pop
jmp
jge
adc
xor
push
das
icebp
scas
andl
subl
mov
daa
push
adc
inc
repz
ds
push
lcall
push
inc
stos
cltd
loope
outsb
mov
jge
stos
out
jge
sbb
cwtl
out
mov
cli
inc
loopne
xchg
stos
or
and
outsl
dec
lods
aam
arpl
push
int3
and
sbb
mov
test
dec
push
subl
pushf
xchg
fcmove
xor
pop
dec
xor
mov
xor
jbe
lock
in
sbb
rcll
lret
imul
je
test
shrl
rcrl
in
test
loopne
pop
imull
push
jne
ficoml
push
xchg
imul
les
pop
ret
loop
xor
in
jge
das
mov
out
or
and
repz
stos
loop
jg
out
loopne
loope
cmp
lahf
shll
mov
push
and
test
cmovge
push
out
xchg
inc
xor
cmc
sbb
adc
jmp
sub
popa
jecxz
mov
js
cwtl
pop
xor
sbb
push
aam
mov
mov
andb
into
test
xchg
in
aad
adc
pop
xor
dec
sub
cmp
mov
mov
imul
xchg
aaa
add
jae
out
or
push
mov
in
imulb
jmp
hlt
mov
cmpsb
das
ret
jle
dec
bound
ret
jmp
inc
push
push
ss
xchg
push
clc
pop
es
mov
lods
inc
jns
adc
mov
xchg
inc
jecxz
scas
repz
push
mov
sbb
xor
push
out
mov
nop
jge
xor
jnp
shlb
push
jmp
push
pushf
notl
add
je
sub
pop
push
dec
stos
xchg
out
in
fisttpll
cmp
call
add
sub
iret
add
and
lock
jne
int
lahf
mov
mov
mov
ret
repnz
jge
sub
mov
mov
ja
adc
push
int
icebp
inc
push
mov
leave
movsl
push
in
jl
push
xchg
fidivrl
lret
test
inc
mov
lcall
sbb
cltd
or
aaa
out
out
jae
mov
ds
scas
xchg
pop
dec
mov
mov
lcall
xchg
js
daa
cmp
mov
xchg
clc
out
cltd
dec
cs
fnstsw
int3
aad
in
int3
push
out
stc
xchg
inc
mov
inc
mov
jbe
inc
xor
ss
or
inc
outsb
add
aad
sbb
lods
adc
mov
fnstsw
mov
dec
ljmp
mov
jb
lret
pushf
adc
addr16
rcl
fwait
stos
sub
mov
pop
addr16
jge
xchg
cmc
mov
add
push
mov
test
push
push
push
popa
iret
add
pushf
call
je
mov
push
or
fnstsw
cmp
cmp
inc
and
or
xchg
outsb
je
scas
sbb
lea
shlb
cwtl
xchg
jnp
out
cmc
jns
pop
lahf
cmp
push
arpl
adc
push
imul
and
imul
rcrl
shrl
pop
add
pushf
or
imul
repz
mov
adc
and
pop
hlt
pop
mov
lahf
xchg
push
mov
fsubr
dec
xlat
in
xor
enter
movsb
inc
push
mov
push
mov
cli
lea
sub
or
imul
inc
sbb
sar
or
and
popa
pushf
cwtl
in
or
inc
stos
repz
cwtl
inc
mov
dec
mov
sti
inc
push
popa
ret
pusha
test
adc
pop
out
loop
pop
in
jae
mov
sub
or
push
fwait
sarl
cs
push
fisttpll
imul
lock
rorl
pop
xorb
and
sbb
xor
jge
dec
push
enter
dec
jge
ljmp
dec
pslld
shrl
dec
add
pop
nop
imul
hlt
pop
mov
lret
add
fdivrs
cmp
insl
ja
std
add
sub
cld
loop
add
into
push
movsl
cli
shrl
mov
add
jecxz
fists
psubw
fstp
movsb
out
and
add
cmp
or
insl
xchg
dec
xchg
sbbl
fcmovnb
push
outsl
movsb
sahf
scas
adc
mov
lahf
cmp
subl
push
ds
jg
sarb
mov
mov
add
cmp
das
pop
and
sahf
mov
cmpsw
xor
out
mov
repnz
xor
loopne
jge
mov
sbb
jle
push
dec
mov
pop
roll
and
sbb
popa
nop
xchg
mov
jo,pn
fistpl
push
add
xor
outsl
cmp
cs
sbbb
js
pop
dec
cmp
inc
pop
ja
jb
push
xor
test
outsl
mov
sub
or
xchg
test
fadds
dec
mov
inc
inc
orb
and
loopne
emms
in
arpl
dec
cmpsl
arpl
xchg
jns
jbe
xlat
leave
aas
shr
xchg
lea
add
xor
sub
ror
cmp
ret
insb
pop
or
add
mov
test
xor
loope
in
mov
addr16
ret
mov
jns
jle
std
mov
data16
push
xor
jbe
scas
or
pop
mov
mov
and
test
aas
outsb
aam
pop
int3
mov
popf
cmp
imul
into
cs
into
aad
in
push
add
pop
or
aas
xor
push
lea
addr16
and
pop
fistpll
ret
dec
add
js
inc
and
cwtl
insl
xchg
inc
cld
jge
gs
movsb
fs
pop
cmpsb
repz
sub
stos
das
inc
cmp
sub
push
push
lock
jb
cld
pushf
push
stc
inc
les
jg
mov
adc
jmp
daa
pop
pop
inc
vmovaps
cmp
in
xchg
pop
movsl
dec
mov
dec
popa
pop
std
inc
clc
scas
fbld
arpl
repnz
subb
aad
sub
inc
stc
push
imul
lahf
test
and
fidivrs
call
xor
jecxz
int3
xchg
imul
or
jp
push
ds
mov
rcr
test
daa
mov
jmp
imull
xor
inc
cs
rol
faddl
das
inc
test
imul
lods
jl
mov
int
and
int3
call
xor
and
pop
or
test
inc
and
insb
in
sbb
shll
push
push
out
ja
iretw
inc
lret
and
lea
inc
and
fneni(8087
push
movsb
mov
movsl
into
cmp
cli
roll
nop
insb
xchg
aam
adc
jnp
pop
inc
and
pop
into
or
push
mov
clc
repnz
test
mov
sub
stos
mov
mov
inc
jecxz
inc
adc
orl
adc
sbb
insl
inc
data16
les
push
shl
pop
ss
aad
mov
sbb
pop
movsl
push
mov
lock
xor
movsb
fistpll
dec
in
pop
mov
das
out
inc
fs
shrl
pop
cmc
enter
addr16
xor
into
ja
jl
jne
dec
xchg
ljmp
mov
add
mov
jbe
inc
aaa
jp
dec
cmc
into
popa
and
call
jo
loop
std
sbb
test
test
mov
mov
jp
or
dec
inc
test
out
mov
cli
mov
mov
lret
nop
push
pop
jbe
je
mov
mov
mov
sahf
sub
xchg
nop
push
jns
add
imulb
in
stos
mov
sub
or
and
mov
mov
aas
cli
adc
pop
ja
push
push
fiadds
les
cltd
outsl
jae
fnstenv
adc
outsb
arpl
push
fdivrl
test
lahf
push
mov
movb
movsl
into
or
les
mov
dec
stc
es
sbb
push
imul
pop
nop
xor
scas
sbb
pop
mov
lods
sahf
sub
out
jle
out
lret
ret
jg
pop
jae
pop
push
lock
in
push
inc
lahf
mov
shll
pushf
out
sub
inc
or
test
add
fs
mov
push
mov
push
sarb
mov
outsb
mov
push
das
fnstenv
or
mov
iret
adc
inc
cmc
enter
scas
daa
fiadds
cli
jp
sub
fldl
inc
out
popa
pop
fstps
sbb
xchg
adc
sti
andl
rcrl
jb
arpl
ss
cmp
cli
jne
pop
adc
shrl
pop
sub
repnz
int3
push
and
jno
jecxz
xor
jecxz,pt
dec
xor
aas
in
jl
or
popf
enter
ss
xchg
sarb
cmpb
jp
and
cmp
sbb
and
inc
sub
fs
sbb
dec
shll
cmp
or
xor
repnz
jb
inc
or
xchg
fisubl
pop
out
clc
push
adc
cmpsb
mov
xor
lods
cmc
jmp
or
in
cmp
je
ds
push
jecxz
add
xchg
xchg
jns
daa
xor
cld
lea
sbb
mov
dec
adc
pop
lods
out
sub
sbb
cs
mov
pop
and
adc
mov
outsb
add
fwait
in
orb
push
rcl
sbb
enter
popa
inc
mov
push
cli
push
movsb
call
test
xchg
outsl
push
out
inc
mov
mov
pmuludq
ss
aam
pop
push
jp
sti
ljmp
mov
jp
rcl
fisttps
loopne
pop
jo
shrl
repz
mov
dec
fs
lds
rclb
adcl
insb
and
addr16
rorb
xchg
outsl
mov
cltd
pop
cmp
call
cmp
pop
jbe
sub
addr16
jne
xlat
sub
scas
pop
insb
mov
mov
mov
call
ds
add
jns
push
dec
cmc
fcmovne
xor
or
pop
iret
push
int3
jecxz
xorl
pop
fsub
dec
cmp
and
inc
jp
mov
rcll
pushf
add
fisubs
leave
dec
arpl
adc
fsubrl
mov
cwtl
sbb
xchg
push
cmp
ret
movsl
rclb
sbb
inc
cmp
stc
jae
xchg
dec
aad
lret
cmpsl
jne
xchg
inc
inc
mov
fld1
std
jno
pop
xor
or
cmp
and
pusha
stos
mov
jno
cmpps
xchg
xchg
push
scas
and
arpl
or
dec
in
fs
push
mov
adc
mov
popf
sbb
inc
xor
sti
cwtl
jmp
inc
mov
adc
iret
fldt
mov
inc
sbb
add
adc
xor
imul
insl
or
and
push
jecxz
add
or
lods
xchg
add
inc
hlt
imul
cmp
jg
or
jp
and
jae
stos
pop
mov
sub
push
push
push
stc
xor
sub
adcl
pop
mov
iret
mov
aad
cmp
mov
aad
jo
je
gs
rclb
jl
xchg
inc
adc
mov
mov
pop
push
sub
pusha
mov
lcall
mov
xlat
adc
sbb
shr
cs
sub
adc
lea
cld
mull
adc
xchg
jecxz
mov
enter
push
cmp
and
push
adc
push
or
test
mov
adc
sbb
clc
add
jle
mov
js
cmp
enter
add
adc
mov
movsb
imul
mov
fisubl
or
mov
xor
add
lock
mov
and
jo
mov
dec
mov
mov
push
gs
jo
daa
inc
xlat
test
xor
pop
dec
add
jbe
mov
sbb
dec
and
inc
pop
cs
mov
pop
jns
xor
jb
dec
jmp
push
cld
movsl
mov
in
and
lds
add
sahf
dec
add
cmp
rcrb
loop
and
imul
xor
inc
xor
add
dec
mov
lret
cmp
ljmp
jg
mov
ja
les
jnp
or
stc
sbb
imul
or
shll
ds
xchg
leave
mov
mov
sub
pop
icebp
jge
adc
xor
inc
mov
xchg
push
sub
xor
inc
dec
cli
lock
and
pop
dec
sahf
iret
pop
pop
or
push
mov
pop
rclb
lea
sub
pop
and
push
ss
loop
addb
sbb
sub
test
popa
fwait
jmp
inc
stc
mov
pusha
fwait
dec
pusha
cmp
in
pop
iret
mov
jo
xor
sbb
cld
and
xor
inc
stc
pop
data16
inc
stos
push
adc
pop
dec
in
lock
rcl
hlt
sub
ds
shl
xor
or
icebp
hlt
aaa
pushf
inc
movsl
add
push
pop
pushf
fdivrp
and
shl
mov
add
add
stc
push
test
in
push
stc
cld
aad
ja
fs
stos
lock
pushf
mov
adc
roll
divl
loope
popa
jbe
or
cs
mov
insb
int3
xor
pop
pusha
filds
fsub
sbb
arpl
inc
inc
pop
jnp,pt
sub
cmp
je
or
pop
jle
fcoml
cmp
stos
daa
cmp
xchg
lahf
icebp
mov
cs
and
psubq
jmp
xor
enter
cmc
in
stc
outsb
add
lret
mov
jae
lds
pop
dec
sahf
repz
inc
andl
mov
adc
data16
push
outsl
xchg
mov
xchg
jp
jg
les
pop
dec
adc
hlt
test
int
or
adc
lds
mov
pop
and
loopne
pop
rcr
lock
cmc
cli
inc
mov
mov
call
dec
lods
and
sbbl
mov
cli
or
das
sti
cwtl
aam
mov
lret
cli
pop
stc
cmp
cltd
or
lods
and
dec
mov
or
mov
inc
adc
push
add
ss
ret
add
cmp
ljmp
sbb
or
mov
push
aad
ljmp
jb
movsb
xlat
data16
imul
pop
frstor
push
jmp
les
int
rcrl
mov
xor
rcll
inc
or
lock
ja
lret
push
cmpsl
or
add
lods
cmc
jnp
and
fdivl
hlt
ficompl
xchg
pop
push
out
icebp
testb
sub
repnz
stc
or
leave
pop
xlat
cmp
dec
inc
mov
xchg
cmpsl
add
pop
inc
pop
out
cmpsl
dec
add
sub
cltd
push
mov
aaa
xchg
mov
popf
fmuls
xchg
push
sbb
loopne
jo
pop
jmp
sbb
insb
in
addr16
xchg
fsub
repnz
out
pop
adc
pusha
inc
ss
rorb
add
sbb
cmp
imul
jg
adc
inc
xor
ljmp
dec
icebp
int
mov
fwait
les
pop
std
cmp
cmc
cmc
push
xchg
cwtl
outsb
jmp
mov
ret
mov
mov
jecxz
into
orl
dec
inc
cmc
mov
pop
push
fbld
or
cmpsb
push
add
xor
cmc
jae
lds
dec
popf
int3
loopne
mul
mov
les
xchg
add
rcrb
mov
fistps
jle
pop
xchg
add
test
mov
aas
icebp
or
pusha
das
push
xor
jbe
fidivs
outsl
inc
sti
ffreep
aad
ror
add
je
cmp
pop
or
mov
xchg
pop
cmp
inc
jl
loop
fucompp
cmc
push
lea
pop
xchg
pop
dec
pop
insl
cmp
mov
cmp
popf
fwait
ret
movl
cmp
pop
lock
lret
and
decl
push
adc
sub
dec
mov
add
xchg
ds
hlt
pusha
les
ret
rcrb
das
pushf
cmp
add
pushf
xchg
cmpsb
ret
add
adcb
adc
xchg
cmc
jp
mov
outsl
mov
sbb
pop
sub
xor
sub
fisubl
cli
pop
or
mov
sti
xchg
add
ljmp
dec
and
sbb
lcall
repz
and
mov
call
push
jae
pop
stc
xorb
jno
scas
pop
or
pop
in
sti
mov
stos
cmpsb
mov
pop
sbb
test
movsl
push
or
and
ret
mov
dec
inc
sub
xor
xor
pop
fistpl
ljmp
out
pop
pop
iret
jle
in
aam
dec
insl
sbb
jae
push
push
adc
add
rorb
cmpl
and
xchg
lret
out
jg
hlt
sahf
out
adc
je
mov
mov
jmp
inc
mov
leave
pop
scas
adc
add
test
fmull
stos
xchg
loope
loop
pop
movsb
int3
mov
dec
push
push
mov
dec
mov
enter
dec
pop
pusha
ljmp
cmp
inc
lods
bound
pusha
push
out
out
pop
fmuls
mov
lods
cmc
pop
rcrl
mov
pop
lock
jnp
cli
mov
in
clc
dec
les
xchg
mov
or
ret
fidivl
aas
aam
aad
fcompl
xor
pop
jb
add
in
and
outsb
mov
add
lcall
enter
jbe
dec
scas
xchg
mov
push
cwtl
fidivl
and
shll
ret
sbb
addr16
pusha
xlat
jg
enter
adc
ja
push
adc
cmpsb
jns
push
stos
cmpsb
ja
push
pop
mov
add
js
test
dec
add
xchg
stc
fcoms
mov
cmp
mov
inc
xor
test
sub
stos
ds
mov
and
cmp
and
cmpsl
mov
mov
daa
loopne
out
sbb
in
jbe
jno
les
mov
xchg
test
sbb
test
imul
mov
xor
add
inc
jns
cs
xor
sub
xor
repnz
rorb
dec
pop
repz
push
ja
lods
push
stos
pushl
push
push
or
sub
pop
xchg
mov
push
sbb
sbb
xchg
adc
pop
test
add
mov
push
fcoms
inc
mov
jbe
sub
test
sahf
add
mov
add
sbb
adc
add
jno
in
mov
xlat
mov
adc
mov
loop
adc
sub
jne
lock
dec
int
mov
jmp
mov
and
xor
push
add
outsb
je
xchg
test
ja
add
push
xchg
push
in
das
or
iret
es
bound
mov
mov
mov
push
adc
cmp
sub
cmc
inc
ljmp
scas
scas
mov
aas
fsubrs
cmpsb
pop
dec
aaa
in
jne
add
jns
jae
divb
cmp
dec
lods
in
and
jb
mov
xor
pop
jmp
sub
jmp
xchg
sub
or
jmp
adc
lret
jnp
cmpb
cmc
iret
push
xchg
fcomip
mov
mov
sbb
repz
mov
lahf
loope
pop
insl
mov
mov
pop
push
cmp
pop
xchg
aaa
push
jmp
sub
xchg
inc
rclb
push
pusha
fdivrp
lret
mov
inc
movsl
out
aaa
jbe
sbb
test
fsubrs
pop
adc
daa
and
pop
int
mov
repz
or
dec
xor
xor
and
jg
jo
pop
mov
sub
in
dec
push
cwtl
and
mov
scas
jecxz
sbb
aam
leave
jns
add
add
jmp
outsl
shr
jne
cmp
into
xor
inc
out
adc
inc
fildl
aaa
mov
or
dec
stos
test
jp
lret
out
sub
mov
les
jl
pop
lret
jbe
cmpb
stc
pusha
sub
or
stc
mov
addb
ljmp
mov
pushl
lcall
es
iret
xor
aaa
ret
sub
sti
stos
sub
adc
inc
mov
out
and
sti
push
or
cmc
cmp
or
test
push
out
incl
jg
insl
aas
and
mov
movsl
jecxz
cs
push
push
cmp
jns
es
jg
mov
shll
jns
sbb
pop
mov
pop
lea
mov
pop
jl
out
mov
pop
inc
and
mov
push
jg
push
cmp
cs
sahf
aas
scas
dec
dec
lock
push
mov
leave
arpl
leave
xchg
popf
add
mov
mov
cmc
lock
xlat
lcall
inc
stos
dec
or
jae
dec
es
cmp
ljmp
sti
loopne
nop
shll
jne
ja
loop
setbe
clc
subb
cmp
xchg
pop
cmp
into
push
adc
mov
and
ret
pop
fsubp
add
ss
push
out
sbb
test
mov
cld
outsl
adc
cmpsb
imul
movsb
aam
ja
stos
sub
pop
test
mov
shlb
clc
mov
pop
pop
push
arpl
hlt
jae
adc
push
hlt
pop
es
cltd
lods
mov
scas
lret
mov
cmpsb
push
adc
and
cmp
mov
mov
xchg
les
pop
mov
mov
inc
add
daa
imul
test
xchg
mov
je
test
loop
test
jl
push
incl
lcall
enter
pusha
sub
shrb
jge
push
jo
xchg
enter
mov
jbe
and
data16
aas
cmp
stos
pop
in
mov
out
and
into
sub
sbb
xchg
mov
sub
hlt
mov
aad
in
fdivs
cs
test
jl
mov
fwait
jmp
lea
cmp
inc
in
xchg
data16
xchg
sbb
mov
mov
dec
push
sti
add
mov
push
nop
fstl
fimuls
mov
sub
loopne
sbb
xor
imull
enter
push
mov
out
gs
mov
jne
jbe
shl
push
and
sti
mov
paddusw
push
popf
sbb
ljmp
cmp
dec
pop
and
mov
cmpsb
flds
add
push
and
stc
mov
dec
and
cwtl
shlb
xor
notl
mov
adc
insb
add
js
dec
pop
lcall
cmp
sbb
add
push
xorb
push
adc
fisttpl
jmp
or
xor
orl
push
xor
sti
mov
pop
xchg
mov
pop
mov
out
fadd
ds
and
sbb
lods
mov
pushl
mov
int3
das
pop
mov
adc
lcall
scas
pop
pop
fwait
scas
rclb
inc
jne
xchg
iret
call
ja
mov
or
mov
stos
scas
cli
mov
and
jl
pop
stos
jns
shl
and
pop
sahf
dec
add
les
pop
jne
cs
cltd
xchg
jae
adc
push
stos
push
pop
jg
and
pop
add
shll
push
add
pushf
aaa
add
mov
lock
fs
pop
jae
pop
outsb
out
inc
aas
scas
mov
inc
cmp
jo
dec
xchg
imull
xchg
popf
js
sub
mov
push
fistpll
nop
xchg
xrelease
inc
insb
sbb
cli
outsl
cmc
test
add
cmp
popa
ret
and
jb
in
ljmp
hlt
daa
add
add
mov
sbb
adc
fldcw
ja
pop
push
cmp
dec
pushl
leave
inc
dec
iret
or
and
inc
fldl
pusha
xor
jae
out
pusha
leave
jns
sub
mov
fadds
and
mov
fdivrp
dec
jno
push
rorb
mov
sub
rcrl
inc
jne
pop
stos
mov
jne
icebp
std
outsb
cld
fwait
push
pop
sarl
xor
int
in
or
inc
jae
xor
add
adc
icebp
in
cmpsb
ds
xor
iret
jl
or
aam
dec
pop
ficomps
les
xor
mov
call
es
jns
shrl
jno
xor
jle
pop
jb
outsl
cwtl
cli
xchg
jo
fwait
test
adc
cmc
xchg
in
fadds
pop
adc
jnp
lahf
pusha
push
cmp
inc
xchg
pusha
push
ret
test
in
and
enter
inc
gs
cmp
mov
imul
dec
cmp
stos
les
pop
or
push
iret
ljmp
int3
aas
loop
add
aad
dec
xlat
std
ficoms
nop
pop
aam
out
xchg
adc
pop
je
dec
add
xchg
lahf
jp
push
dec
and
scas
test
xchg
push
roll
cli
add
cli
mov
mov
pop
fs
lahf
jmp
test
loope
fsubr
cmp
fstps
pop
xchg
sub
aam
bound
xor
aad
insb
std
sar
cmpsl
add
pushf
and
push
jne
jecxz
repnz
pop
and
jmp
mov
jbe
pop
clc
pop
pop
out
lahf
arpl
and
xor
xchg
push
insl
ret
lret
jae
sarb
jl
popf
daa
xchg
ss
ds
sbb
xchg
dec
and
lret
daa
jb
rorl
sbb
adc
fwait
dec
adc
fldcw
call
jmp
sbb
mov
lret
andb
or
cmpsb
fisttpl
jmp
fistpl
jecxz
into
rorb
lret
mov
xchg
test
aaa
data16
xchg
fs
cs
and
xchg
xchg
mov
mov
or
leave
jne
xchg
add
fs
jmp
imulb
pop
cli
and
mov
sub
ret
push
nop
stos
pop
push
std
imul
lret
cmp
dec
fisubrl
and
adc
das
scas
adc
push
fcoml
adc
dec
lahf
fadd
sti
jmp
arpl
adc
jno
dec
mov
adc
lds
adc
add
xchg
call
testl
lds
int3
jbe
repnz
icebp
lds
pop
lcall
xor
xchg
in
push
add
and
push
fcomps
sub
and
mov
xchg
mov
sar
not
lock
xchg
dec
sub
or
inc
push
mov
inc
fimull
mov
mov
int
cmp
movsb
add
sbb
mull
stc
or
aam
or
imul
lret
sahf
lods
leave
or
push
test
mov
les
rcll
cmp
mov
in
or
sbb
cli
addr16
and
or
sub
cmpsb
push
mov
popf
std
dec
fs
xlat
movsb
mov
adc
xchg
ljmp
add
pusha
xchg
shll
pop
or
sar
mov
lea
stos
les
jecxz
imul
xor
inc
shlb
jle
nop
sti
jo
xchg
pop
push
mov
pop
fnstenv
push
mov
lahf
push
inc
push
xor
and
dec
inc
pop
data16
inc
push
inc
js
cmp
sbb
mov
mov
cmp
dec
cmp
or
mov
scas
movsb
xchg
dec
sub
int
rcll
test
push
inc
sub
pop
xchg
iret
pushl
xchg
dec
cmpsl
mov
mov
xor
xor
pop
aaa
add
and
xor
mov
rcll
dec
mov
inc
jbe
cmpl
insb
out
push
jns
rcrl
dec
push
data16
xor
rclb
jne
inc
mov
sbb
inc
jmp
inc
outsl
sbb
cltd
and
lahf
xchg
scas
jg
cmp
pop
adc
push
sahf
imul
pusha
pop
aam
outsl
sti
out
pop
sti
ret
lods
jge,pn
jecxz
out
cltd
rolb
and
bound
ret
adc
cmc
mov
pusha
shll
pop
xchg
mov
stc
ds
jp
dec
test
stos
shl
sti
out
pop
mov
cmp
iret
add
aad
sub
push
and
dec
and
outsb
mov
fdivrs
jb
cmp
adc
mov
es
and
jecxz
icebp
int
xchg
pushf
pushf
mov
in
int
adc
cmp
adc
fidivs
xchg
mov
out
and
fnsave
rol
xchg
cli
dec
sub
mov
adc
cmp
mov
mov
pop
mov
cltd
mov
scas
ja
loope
addr16
or
mov
mov
mov
cmpsb
cmp
or
lret
jnp
fistps
pop
je
nop
jb
or
jnp
push
pop
jae
and
movsb
dec
jmp
lds
pop
xchg
push
in
fistpll
push
fld
test
dec
pop
pop
rolb
popf
insl
fcmovnbe
lcall
xor
into
test
xchg
js
pop
cltd
cmp
pop
daa
add
inc
mov
pushl
sbb
or
mov
add
fnstenv
and
movsb
aaa
fcoml
sbb
or
std
and
repz
fsubl
pop
jg
or
xor
sub
mov
cwtl
inc
cld
out
mov
shlb
rcrl
sbb
stos
call
enter
into
adc
cld
and
jbe
sbb
rorb
ja
push
pop
jle
and
xchg
xchg
das
ret
sbb
or
lret
mov
cli
stc
or
pop
add
out
cmpsb
shlb
xchg
jp
loope
or
dec
push
inc
hlt
je
pop
lds
cmp
cmp
loop
sti
rcll
pop
push
cltd
aad
mov
push
mov
notl
imul
imul
rorb
lcall
xor
jnp
stos
incb
jmp
jmp
push
fdivrp
cmc
jnp
mov
popf
mov
mov
mov
lds
pop
push
mov
fildl
inc
faddp
xchg
adc
popf
xchg
faddl
leave
xlat
call
sub
cwtl
sbb
out
test
sbb
pop
mov
pop
dec
sbb
shlb
xchg
push
popl
into
imul
pop
jmp
sub
push
xor
fwait
sahf
and
je
inc
push
adc
mov
pop
mov
mov
pop
sub
dec
add
iret
mov
sbb
ret
dec
jl
jge
push
ds
cltd
mov
jo
or
test
sti
popf
out
pop
push
cwtl
cli
sahf
fstpt
jmp
cmp
cltd
mov
addr16
push
imul
and
push
jmp
enter
or
and
adc
and
mov
cmp
mov
ja
sbb
into
cmpsb
jae
loope
mov
lods
out
data16
push
push
das
and
lock
enter
push
cmpsl
das
cmp
ficoml
lea
out
jmp
jo
enter
xchg
mov
pop
mov
mov
imul
fs
jecxz
js
inc
sbb
adc
sub
sub
jae
aas
jne
pop
lods
mov
adc
fdivl
mov
xchg
enter
adc
cmp
jl
out
mov
adc
jb
roll
test
jne
xor
mov
lods
inc
dec
daa
jg
dec
push
fistps
mov
xchg
mov
ret
xor
push
adc
nop
cmpsl
mov
in
dec
push
test
lret
pop
call
mov
cmpl
lods
or
mov
insl
dec
jnp
xchg
imul
pop
flds
dec
jbe
das
pop
dec
clc
xlat
push
mov
dec
jecxz
daa
xor
mov
popa
cmp
xorb
int3
test
xchg
popa
int
dec
push
repz
push
sub
loop
sbb
mov
mov
push
or
add
pop
add
mov
jnp
pop
ret
sub
test
clc
dec
sub
arpl
fstps
mov
out
mov
outsb
add
mov
andb
js
bound
mov
and
xchg
sbb
xchg
fcmovnb
pop
mov
sbb
mov
js
pop
xor
fbstp
mov
pop
aaa
jne
sub
and
popa
sub
or
std
push
bound
jae
add
push
adc
js
sub
pop
push
mov
popf
xchg
jb
add
or
and
mov
mov
push
pushf
sete
dec
daa
out
nop
aad
lcall
addb
in
dec
mov
mov
adc
leave
and
mov
mov
sbb
sahf
or
mov
scas
ret
aaa
dec
sbb
int
cld
rol
out
cmpsl
dec
adc
lret
pusha
xchg
jmp
and
fucom
or
inc
pop
and
jno
inc
lds
jmp
cld
xchg
loopne
leave
mov
sahf
and
dec
pop
pop
das
pop
lahf
std
xchg
icebp
je
and
outsb
mov
or
cmp
jbe
pop
pop
nop
lods
lahf
int3
xor
int
mov
fwait
jno
fcomps
sbb
xchg
mov
fiaddl
repnz
sbb
sub
adc
subl
xchg
push
xchg
jg
icebp
or
outsl
lds
sbb
cld
insl
sub
rcl
mov
aaa
cmc
inc
cli
fistpl
xor
adc
and
ret
xchg
fcoms
mov
sbbb
fs
andl
das
std
mov
xchg
das
fldl
call
add
inc
pop
cmpsl
push
pop
or
sbb
pop
outsb
or
lret
je
cmpsb
addr16
or
cmpsb
xchg
xor
stos
lahf
pop
pop
cmp
gs
dec
jnp
pop
adc
cli
mov
dec
or
pop
cwtl
pop
inc
mov
loope
in
mov
jge
or
mov
mov
and
repnz
cmp
jno
mov
andb
adc
mov
stos
pop
push
aaa
imul
inc
into
lcall
push
pop
or
cltd
movsl
and
cli
cmp
dec
jno
popa
cmp
xchg
dec
adc
insl
sbb
jbe
fsubrs
adc
jbe
cs
stos
push
test
int
xor
addl
push
xor
xchg
std
dec
test
lahf
inc
addr16
aad
push
push
sub
or
inc
data16
out
xchg
mov
jecxz
pop
in
sub
add
and
js
stos
addl
fxch
jo
inc
sub
sbb
xchg
repnz
sub
out
push
mov
pop
sub
sbb
jge
dec
or
cmpb
movsb
sahf
cmpl
and
sbb
push
outsl
movsb
add
mov
dec
sub
loope
push
xor
out
push
sbb
rclb
neg
shl
jno
arpl
and
and
ret
push
cmpl
or
push
push
mov
loop
fisubrl
jmp
adc
cmp
mov
dec
sbb
mov
pusha
sbb
lret
loopne
das
push
repnz
dec
imul
push
cltd
movsb
jp
scas
mov
pop
je
fwait
test
fcompl
jl
sbb
shl
popa
dec
cmpsl
pop
and
or
orb
lods
call
fwait
test
in
mov
mov
ret
ja
lock
imul
mov
xor
shrb
into
xchg
scas
sahf
lods
hlt
aad
and
add
outsb
int3
sub
ss
fucompp
xchg
sbb
je
dec
ds
jbe
cmpsb
adc
jp
xor
sub
push
incl
mov
xchg
mov
dec
int
adc
lods
cld
sbb
push
mov
enter
lods
add
stos
adc
xchg
xor
pop
mov
cmpsb
xchg
push
pushf
es
mov
mov
data16
adc
mov
pushf
mov
push
xchg
jmp
pop
add
pop
loop
sbb
xor
divl
jbe
sbbl
scas
test
jo
xchg
shrl
popf
fs
or
sub
and
jl
test
call
sbb
xchg
and
and
jmp
pop
lcall
adc
lods
in
ret
daa
in
inc
xchg
int
js
fwait
hlt
std
add
scas
push
add
sub
cmpsb
mov
cld
mov
out
dec
lret
jnp
inc
pop
push
hlt
sbb
loopne
insl
loopne
inc
sti
stos
test
lds
sub
cmpsl
push
fisubs
mov
fwait
sub
sar
mov
adc
das
xor
fnstenv
inc
sub
xchg
loopne
int
imul
ss
pop
dec
pop
and
inc
mov
in
loop
lret
aaa
in
fld
mov
mov
insl
push
loopne
jne
dec
cmp
or
lock
mov
fsubrl
fndisi(8087
imul
mov
daa
inc
daa
clc
out
push
lcall
shll
inc
aad
outsl
cmpsl
outsb
inc
push
or
sub
push
jb
jbe
and
mov
lahf
xchg
mov
mov
sub
dec
push
js
mov
fmulp
jbe
fisubrs
mov
mov
push
mov
inc
mov
sub
jo
pop
mov
loope
in
jle
popf
mov
sub
fsts
or
faddl
rcr
in
sub
add
push
sahf
mov
sub
adc
sbb
rcl
fwait
movl
sub
mov
push
cmp
and
inc
dec
inc
sbb
push
dec
xchg
enter
subl
push
cmp
push
add
mov
or
stos
mov
ds
and
mov
lahf
cmp
sbb
lahf
adc
jmp
jae
or
sti
int3
lods
les
stos
sub
push
jno
pop
xchg
push
rclb
cmp
lret
push
mov
lahf
push
or
sub
sub
shrl
ja
ljmp
dec
jmp
push
xchg
insb
pop
cmp
cmp
jle
sub
addr16
cmc
pop
pop
loop
xor
lret
and
jbe
jae
aaa
mov
mov
mov
jbe
sub
mov
push
outsl
outsl
sub
divb
adc
adc
adc
adc
jne
jne
out
dec
test
inc
dec
adc
leave
jge
data16
push
pushf
push
cmp
les
outsb
pop
lock
outsl
dec
aas
xchg
fdiv
add
aam
not
cmp
xlat
in
popl
nop
imul
inc
cmp
sar
ret
cli
pop
xor
xor
inc
insl
addr16
mov
or
frstor
inc
ds
aaa
cs
ljmp
leave
jns
mov
xor
cwtl
or
gs
dec
jg
or
jno
jle
mov
mov
stc
out
mov
incl
push
cmp
daa
jo
pop
jo
je
jnp
push
push
cmpsl
mov
xchg
cmp
sub
push
scas
xchg
fcoml
xchg
and
xor
xchg
sub
jge
push
push
into
sti
enter
in
sub
jns
mov
outsl
adc
mov
into
in
lcall
push
pop
lahf
sub
or
pop
cmp
lock
dec
or
xchg
mov
pop
pop
adc
sub
sub
icebp
je
sahf
int3
lahf
push
aas
inc
movsb
fldenv
fxtract
or
pop
add
mov
out
and
mov
inc
sbb
xchg
sub
test
data16
pop
dec
nop
in
sub
pusha
mov
lods
cwtl
cld
movsl
xchg
xor
xor
cwtl
fmuls
xlat
test
adc
mov
lret
notb
or
out
shlb
mov
add
fucom
mov
mov
imul
cmp
mov
push
int3
sub
aam
sbb
inc
jns
dec
jns
xchg
cmpsb
cwtl
jmp
fisttps
fnstenv
js
movsl
xchg
ret
shrl
mov
xor
sub
push
inc
inc
data16
jle
ret
push
push
into
sbb
test
xor
pop
stc
or
and
int3
fidivrs
mulb
xor
inc
xchg
mov
sbb
xchg
sub
mov
mov
cmp
outsl
cmpsl
mov
mov
in
dec
mov
pop
adc
ja
fisubs
xor
outsl
jge
jl
push
push
mov
mov
adc
add
sub
out
decl
xchg
hlt
ret
pop
sbb
lret
test
and
mov
les
mov
inc
into
negb
mov
inc
and
inc
or
jno
sahf
cmp
cmp
sub
fldl
lret
outsb
xchg
pop
xor
inc
mov
lea
lds
shr
sub
inc
jp
negl
sbb
jecxz
xor
clc
jno
mov
adc
xor
call
jb
dec
aaa
test
pop
int3
jbe
shlb
mov
pop
mov
aam
xchg
insb
push
jmp
or
sarl
push
ror
imul
dec
push
out
test
push
dec
sbb
addr16
jl
sar
lahf
push
pusha
pop
loop
repz
daa
push
test
hlt
mov
lock
mov
cli
add
cwtl
adc
push
inc
mov
sub
shlb
fcoms
jne
std
out
inc
mov
inc
rcrl
or
in
xor
out
mov
mov
xchg
sbb
popf
mov
mov
es
push
mov
add
shll
jle
dec
jnp
cltd
pop
in
movsb
sub
xorl
mov
sbb
mov
test
dec
notb
xlat
mov
cmpsb
xchg
cmp
incl
stc
scas
insl
repz
outsl
ret
les
popa
lea
sarb
dec
inc
dec
rcr
add
adc
xchg
out
clc
mov
cli
xor
out
divl
andl
int
stc
filds
in
xor
sbb
xor
and
push
cwtl
test
test
mov
lods
sbb
cmp
dec
fwait
insb
in
ret
push
cltd
mov
stos
dec
sbb
dec
dec
pusha
sbb
inc
adc
push
or
aam
mov
pop
mov
int3
pop
dec
popf
iret
in
ret
jg
pop
mov
dec
aam
pop
add
or
mov
and
dec
ficomps
xchg
repnz
mov
cld
inc
popf
out
mov
gs
stc
repz
dec
scas
inc
lcall
insb
pop
push
jo
xchg
inc
and
mov
mov
adc
xchg
scas
dec
add
fwait
arpl
or
stos
adc
mov
xchg
jno
inc
enter
mov
add
xor
jmp
idiv
cltd
xchg
sti
mov
ljmp
call
fnsave
sub
sti
push
or
das
outsl
movsb
in
filds
je
fsts
jmp
mov
adc
pop
mov
push
pop
lods
rcrl
mov
lods
pop
clc
push
aaa
push
bound
and
adc
push
xchg
cld
in
add
mov
jb
adc
push
pop
movb
test
lea
sub
xchg
cli
mov
push
dec
testl
cld
inc
imul
dec
add
push
or
bnd
imul
jge
cwtl
lods
stc
inc
add
jecxz
les
jmp
mov
into
sbb
cmp
push
pop
jmp
sub
jge
xlat
insb
rcrb
je
mov
or
cmp
xlat
fstpl
dec
es
pusha
sbb
xlat
xchg
inc
cmc
fstpl
sub
xor
pop
xchg
insl
xor
adc
push
bound
in
or
pop
roll
jl
je
shrl
loopne
push
add
in
ljmp
and
pop
imul
pusha
add
rcrb
dec
fnstsw
pusha
dec
push
xchg
fisttpll
adc
rolb
bound
mov
xchg
mov
add
fisttps
js
fdivrs
push
scas
xchg
jge
jns
incb
stc
add
shr
push
add
xchg
icebp
jb
sub
or
dec
pop
iret
jb
sbb
repz
mov
mov
les
xor
in
popa
cmp
popf
push
adc
outsl
xchg
fbstp
aad
xor
add
jnp
xchg
jmp
jmp
xlat
jne
jg
movsl
jg
out
out
jl
movsl
and
xchg
sub
insl
inc
cwtl
jns
xor
jmp
mov
sub
idiv
repnz
pshufw
mov
pop
pop
mulb
mov
fnstcw
and
cmp
notl
sahf
stc
ficoms
aad
push
std
mov
rol
icebp
dec
xor
popf
loope
loope
cli
jle
mov
and
dec
push
popa
hlt
iret
cli
out
sti
mov
xchg
daa
roll
ljmp
clc
mov
mov
mov
and
bound
loope
inc
cmc
adc
pop
xchg
sub
and
mov
inc
dec
cmp
rcll
fisubs
js
cmp
or
das
mov
mov
subl
or
das
mov
mov
std
mov
xchg
sub
fnstenv
cltd
mov
xchg
arpl
and
lret
jnp
or
sub
outsl
sahf
stos
ficompl
loopne
mov
sbb
cwtl
leave
aam
xchg
in
ret
mov
mov
pop
sahf
xchg
pop
xor
loop
adc
out
divl
and
test
pop
pop
inc
lret
adc
imul
add
roll
cmp
icebp
leave
jns
into
shrl
cmp
jne
fwait
pusha
cld
jecxz
ror
xchg
xor
add
push
mov
inc
dec
xchg
inc
ljmp
mov
mov
sub
xchg
push
rcl
int
lods
pushf
sbb
in
loop
shll
sbb
fwait
mov
lret
fimuls
mov
sub
xorb
ss
jmp
popa
add
imul
in
imul
test
stc
lret
test
fistpll
out
pop
loop
jecxz
inc
inc
or
adc
mov
es
add
daa
icebp
fldl
pop
xor
jo
jmp
insb
js
mov
lods
jp
cmp
mov
pop
push
cs
repz
push
mov
mov
nop
fisubl
dec
mov
sti
leave
pop
mov
mov
jnp
mov
and
push
lds
xchg
xor
or
outsl
pop
daa
inc
bound
dec
addb
movsl
mov
scas
fcomps
cwtl
mov
arpl
ja
aas
xor
push
push
lock
lret
cld
xor
icebp
or
mov
sbb
outsb
push
mov
jg
mov
les
mov
bnd
push
sbb
cs
push
ret
lahf
pop
pop
and
xchg
xchg
xchg
in
or
jle
jno
pop
ss
int3
daa
sbb
mov
mov
inc
lahf
js
mov
sti
mov
sbb
es
jmp
push
cmp
push
xor
dec
lret
pop
mov
imul
js
out
sub
xchg
out
cmp
adc
xor
sub
adc
cld
and
out
test
insb
ret
and
pop
sbb
add
ss
movsl
and
sub
mov
or
xchg
adc
mov
out
sti
lret
icebp
push
sti
mov
mov
and
enter
movsl
clc
rolb
push
mov
pusha
loop
and
add
std
sahf
add
stc
or
and
adc
outsb
mov
push
or
push
and
call
cwtl
inc
mov
adc
push
fisttps
xor
adc
xchg
pop
insl
aaa
das
jno
adc
sbb
mov
cmpsl
xor
push
orl
and
cmp
test
test
aam
sub
sub
iret
adc
lret
jno
mov
xchg
jb
jmp
push
adc
bound
xchg
imulb
insb
std
lret
popa
mov
sbb
nop
ret
mov
ret
ds
cmp
test
mov
pop
and
mov
fs
mov
cmc
fildl
test
test
jne
push
cli
popa
and
cmp
mov
xchg
jl
aas
popa
jns
mov
lock
xchg
jne
mov
mov
arpl
mov
sub
dec
sub
cmp
mov
mov
push
pop
dec
jl
or
sub
sub
fsubr
push
aaa
mov
test
xchg
pop
xor
movsl
pop
jge
lea
push
cmp
fdivrl
xchg
stos
cmp
test
jae
mov
das
fs
sahf
icebp
aad
daa
xor
xchg
cmp
mov
push
sub
ljmp
add
and
insl
xchg
ret
pop
leave
pop
xchg
jge
aam
cmp
jmp
lea
xlat
in
scas
insl
inc
jbe
into
andb
sbb
and
aad
clc
mov
stos
ror
stos
push
int
inc
mov
mov
fiadds
dec
imull
les
dec
dec
in
add
cli
inc
js
and
es
popa
jle
push
jle
test
and
inc
and
ret
mov
jb
ret
mov
or
cmc
cmp
dec
or
test
cmp
call
enter
mov
jbe
jbe
jl
imul
jl
or
cli
int3
aas
mov
stc
inc
cld
dec
mov
or
repnz
adc
mov
fs
ror
rcr
jl
sub
cltd
in
adc
dec
aad
mov
dec
imulb
rol
out
ds
mov
cli
or
ret
es
add
mov
test
mov
fadd
test
pop
xor
inc
es
mov
rcr
push
iret
fstps
ror
jb
jne
pop
incl
xor
fidivrs
call
lcall
fwait
jg
mov
mov
jno
mov
and
fdivs
mov
push
je
test
fucomip
jg
cwtl
dec
fiadds
mov
jb
ficompl
ja
add
shl
jp
pop
push
push
add
xchg
nop
xchg
xlat
mov
loopne
enter
mov
out
and
inc
and
test
pusha
ljmp
cmp
sbb
aas
rcll
or
lcall
cld
cwtl
mov
mov
ret
les
fwait
sahf
sahf
jb
loopne
jg
mov
subl
mov
loope
push
mov
jmp
and
inc
outsb
mov
stos
out
mov
aas
pop
sbbb
xor
push
out
mul
xor
jns
shr
xchg
out
xchg
xchg
dec
sub
scas
hlt
cld
pop
sub
dec
pushl
inc
outsl
pop
push
inc
xchg
les
and
mov
lahf
insb
and
loope,pn
hlt
scas
jne
shll
les
inc
cli
out
int
pop
pusha
div
cmp
daa
leave
out
add
int
mov
nop
fdivs
or
addr16
inc
mov
cmpsb
dec
aam
pusha
sub
or
cs
xor
mov
sarl
ds
jno
or
mov
adc
repnz
nop
stc
leave
int3
and
sub
scas
ja
push
movsb
add
or
pop
ffreep
data16
fstps
inc
arpl
out
fwait
jmp
pop
mov
movsl
insl
stc
xor
cmp
lods
insb
imul
fists
xchg
lret
lcall
mov
sub
inc
push
jmp
neg
pop
ljmp
inc
scas
cwtl
lret
dec
sarl
xlat
adc
out
dec
shl
push
mov
sbb
sub
sub
push
lods
ja
dec
pop
xlat
lods
xor
negl
sahf
xchg
mov
sbb
aaa
xchg
outsb
es
ds
fistpll
mov
add
pop
rcl
pop
jno
pop
inc
mov
pop
push
mov
test
jmp
sbb
rclb
or
iret
enter
adc
inc
and
stos
cmc
outsb
lds
aam
ds
lahf
insb
jno
mov
lret
and
ret
xchg
frstor
mov
iret
add
pop
mov
push
mov
xchg
test
xorb
adc
add
mov
fisubl
adc
test
and
add
repnz
in
fstpt
or
ja
mov
mov
cmp
fmul
xchg
mov
test
fimull
dec
stos
push
test
aas
movsb
adc
cmp
sub
push
cmpl
imul
sub
lret
jle
divb
int
cmp
jne
sub
outsb
shll
jns
clc
aas
nop
or
ret
jp
lods
jne
inc
mov
dec
jae
lcall
in
cmp
adc
mov
stos
sbb
fldcw
aad
mov
push
mov
ror
in
call
xchg
dec
inc
stos
aaa
mov
pop
fists
std
xor
dec
and
jecxz
stc
adc
add
nop
in
mov
push
sahf
lahf
sar
jecxz
jbe
test
sub
insl
mov
push
sahf
adc
loope
lock
fnstcw
mov
fidivs
push
enter
ret
add
xchg
gs
js
out
push
mov
or
leave
mov
popa
jne
lds
adc
jg
mov
pop
repnz
inc
push
jmp
leave
imul
adc
inc
adc
inc
mov
imul
jns
sub
mov
insl
dec
mov
mov
cmp
and
mov
call
sahf
mov
shl
xchg
cmp
mov
xchg
hlt
pop
dec
in
pop
dec
lods
test
xor
aam
xor
imul
xlat
cwtl
dec
push
jnp
ret
xchg
sbb
inc
pop
xchg
sbb
jge
sub
aas
xchg
mov
scas
xchg
mov
add
cs
xor
ss
lods
fimull
mov
arpl
lret
xchg
outsb
into
call
add
adc
sbb
in
outsb
adc
sub
mov
insl
cmc
arpl
js
sbb
or
adc
repnz
loop
andl
xchg
sti
xlat
enter
pop
fildl
jae
andb
lock
xchg
rcrl
iret
or
stc
dec
rcrl
stos
mov
pop
cli
imul
ja
out
adc
addr16
mov
inc
xor
les
enter
cmpsl
xlat
pop
mov
pop
adc
or
push
hlt
cmp
dec
mov
iret
insl
dec
mov
in
insb
arpl
push
xor
fmull
dec
mov
xor
repnz
cmp
fldl
mov
xchg
movsb
xchg
pushf
mov
pop
xchg
popa
shrb
inc
loopne
adc
and
xchg
cmpl
test
jne
aad
cmp
jmp
mov
fisubs
pop
xchg
popa
ret
mov
or
and
cmpl
cmp
loopne
xchg
lock
loop
mov
ljmp
std
push
insl
bound
std
cld
mov
scas
insb
push
xchg
leave
sarl
sbb
or
jne
cltd
js
xchg
popa
mov
ljmp
out
jbe
sub
jne
sbb
and
out
sbb
rolb
outsl
xor
and
rol
mov
leave
ret
mov
adc
push
loope
test
lea
and
sub
pop
jo
pop
sbb
xchg
and
dec
or
pop
sub
dec
adc
xchg
mov
mov
or
loope
les
ret
das
push
test
sub
sub
test
lcall
pusha
test
add
pushf
fidivs
mov
mov
add
sub
ret
xor
jp
inc
sti
push
sub
inc
cmp
insl
mov
inc
mov
xchg
int3
movsb
cmc
rclb
adc
outsb
outsl
pushf
mov
push
test
xor
cmpsl
test
xor
loop
fmuls
cmp
sti
aad
xor
sub
xchg
outsb
push
sbb
mov
subl
and
dec
and
xlat
jae
or
leave
shl
xlat
xchg
lea
xor
cltd
inc
cmpb
iret
dec
nop
sbb
and
jnp
je
push
sub
cltd
je
sahf
add
cmp
out
xchg
push
jle
stc
and
xchg
repnz
dec
sbb
roll
into
xor
les
xchg
pushf
test
pushl
das
pop
in
xlat
lcall
xor
mov
cmp
sub
sub
insb
std
ret
mov
jmp
decb
mov
jle
xorl
and
rolb
fmul
negl
loop
push
cwtl
mov
add
jo
pop
out
dec
pushw
add
pushf
out
jbe
xchg
dec
pop
lahf
loop
aam
fsubl
add
cmp
scas
mov
dec
sbb
inc
imul
sub
pop
sahf
push
and
pusha
insl
dec
adc
aad
xor
dec
xor
jp
cmp
aas
std
fcoms
inc
mov
inc
test
mov
shrb
inc
es
cmp
fildll
outsl
cmp
inc
mov
xchg
test
dec
mov
stos
jl
push
dec
mov
cltd
add
jmp
adc
cmp
iret
sub
lds
sbb
cld
cmpsb
jb
sbbb
adc
aaa
jp
mov
ss
cmpsb
popf
push
pop
mov
jle
in
outsb
pop
out
scas
adc
aam
and
in
xlat
mov
cmpsl
jle
push
mov
les
mov
jmp
add
xor
punpckldq
dec
and
push
imul
xor
adc
dec
pop
sub
sbb
pop
ja
les
sbb
sbb
add
orb
and
stc
movsb
xor
sub
shll
rol
push
lahf
dec
add
push
mov
mov
rolb
repz
xchg
fs
and
in
andl
mov
mov
jle
movsl
shlb
mov
mov
cmp
fwait
loope
xor
sbb
mov
lret
push
pop
mov
push
and
mov
gs
adc
jl
test
push
xchg
mov
push
out
clc
std
pop
out
je,pt
popa
sarb
push
out
movsb
std
sahf
xchg
push
lods
add
clc
push
decl
scas
mov
test
pop
enter
xchg
sbb
sahf
movsl
xor
cmpsl
adc
cltd
push
cmp
cld
aam
mov
cmp
add
xor
out
dec
dec
and
cli
ret
xchg
aad
push
push
pop
xchg
jge
xchg
sahf
xor
mov
je
ficoms
add
in
nop
dec
and
repz
das
rol
cwtl
fwait
out
xlat
add
arpl
jns
out
aam
or
pop
fisubs
or
das
dec
mov
adc
adc
insb
push
and
inc
fs
aam
lock
stos
dec
mov
dec
int
mov
push
neg
inc
mov
jp
jg,pn
jecxz
push
and
xchg
movsb
ss
xor
stc
adc
jge
inc
jne
xchg
push
cmp
xlat
cmp
or
sahf
push
xchg
jno,pn
sti
jge
add
or
inc
jg
sbb
cltd
nop
les
addb
inc
sub
aam
jno
ss
inc
loop
lahf
xor
adc
leave
add
repz
stc
mov
xor
dec
loop
xchg
xchg
outsb
mov
cmpsl
mov
rorb
popf
or
pusha
insl
add
jno
mov
push
in
xchg
pop
in
bound
lret
addr16
mov
cmp
adc
lods
or
add
lahf
stos
lds
shll
dec
ljmp
in
ss
int
arpl
dec
test
in
inc
sbb
cmpsb
cmp
adc
adc
pusha
shll
movsl
in
mov
inc
and
push
lds
shr
les
jp
daa
add
mov
cmc
mov
out
das
js
xchg
je
test
ret
xchg
mov
pop
cs
pop
xor
ret
nop
push
ret
dec
push
imul
dec
lock
in
int
jns
pushf
out
mov
out
xchg
or
mov
call
mov
test
cmp
jno
inc
cwtl
cs
push
dec
int
or
mov
or
mov
add
nop
sbb
outsb
push
mov
adc
in
push
inc
mov
pop
out
dec
or
jg
add
cmc
mov
dec
fdivrs
into
sbb
mov
pop
mov
or
nop
mov
and
mov
mov
not
ret
cmpsb
loopne
jp
cmpsl
sbb
push
mov
dec
scas
jb
cmp
ret
mov
out
mov
pushf
cld
inc
jecxz
sub
or
push
loope
stos
sbb
aad
xchg
jbe
and
cmp
push
je
jb
pop
and
add
and
out
shr
fisttpl
mov
popf
or
fsub
jbe
fdivrs
fsubl
loope
filds
pop
jle
pop
mov
popa
cli
lret
pushf
outsl
xchg
pop
inc
lea
jmp
lcall
xchg
fists
test
push
into
and
aad
inc
imul
je
aaa
mov
movsb
mov
es
cmp
mov
and
jns
xchg
rcr
pop
fwait
mov
push
mov
cmp
pop
pop
dec
arpl
insb
rcrl
arpl
les
add
cmp
lods
arpl
test
lret
stc
cmc
es
fcomip
cmpsl
shlb
jecxz
repz
ret
imul
bsf
out
mov
push
push
popa
shll
xchg
call
inc
mov
orl
pop
cwtl
jmp
adc
fnstcw
xchg
or
xor
pop
xchg
icebp
fldcw
lcall
int
std
lock
add
aaa
xchg
lahf
aas
mov
and
and
outsb
pop
jmp
jge
mov
pop
xchg
sbb
jecxz
cmpsl
or
leave
inc
mov
mov
xor
push
daa
test
inc
jmp
xchg
push
out
add
imul
sti
adc
push
ljmp
jae
xor
add
lds
out
dec
mov
addr16
scas
lods
push
jge
dec
sub
mov
sarb
js
mov
mov
mov
int
mov
stos
or
scas
aas
xlat
pop
mov
mov
dec
lock
lea
xchg
in
les
mov
shll
ss
jle
and
adc
inc
mov
leave
imul
sbb
jmp
pop
pusha
push
push
cmp
push
mov
pop
or
push
mov
stos
adc
sqrtps
push
add
popf
mov
mov
fadds
dec
dec
and
out
ja
in
movsb
xchg
imul
adcb
cltd
test
enter
push
fwait
loope
xchg
and
add
dec
insb
out
dec
mov
fwait
call
xor
and
test
mov
cmp
jle,pt
gs
sbb
mull
mov
mov
mov
in
lods
and
and
icebp
cmp
pop
pop
add
lahf
inc
jno
mov
pusha
ja
dec
aad
add
mov
push
jge
out
in
aad
mov
mov
ljmp
inc
rolb
adc
adc
inc
and
fidivl
add
mov
inc
das
out
and
push
insl
mov
push
imul
add
adc
outsl
push
adc
dec
into
fdivrl
inc
jl
jecxz
or
push
lods
pushf
in
adc
std
pushf
mul
cmpl
sub
pop
imul
pop
scas
cmp
outsl
cmpsb
cmc
adc
std
add
sbb
mov
into
mov
xor
in
pushl
iret
ljmp
int
adc
test
mov
movsl
adc
in
mov
sahf
push
sbb
movsl
push
mov
adc
ljmp
add
xor
js
js
pusha
mov
mov
js
xchg
mov
into
mov
mov
test
mov
xorl
aas
inc
ljmp
fisubl
fxch
lcall
mov
dec
lock
sarl
jno
dec
sub
cld
fists
jg
inc
or
sti
adc
cmp
shll
popfw
sub
incb
js
test
xchg
cmp
out
repz
pcmpeqb
lret
jmp
sub
outsl
je
mov
movsl
jne,pn
cld
jo
push
repz
in
fs
int3
adc
lods
xor
mov
or
jge
stos
xlat
int
cmp
xchg
addl
pop
cmp
shl
lret
adc
cltd
ss
add
mov
imul
lods
outsb
daa
xor
and
je
push
and
xor
pop
js
mov
in
cmp
sbb
dec
or
pop
mov
mov
jecxz
fldcw
add
pop
rclb
in
or
push
mov
rorb
or
adc
sbb
clc
mov
fs
adc
ja
fcompl
into
mov
cmp
jmp
pushf
and
and
jmp
pop
sub
into
adc
leave
mov
mov
mov
or
cmp
add
call
lods
mov
xlat
lock
inc
out
sahf
maskmovq
testl
rorl
jmp
inc
inc
adc
movsl
push
fsts
stos
js
cld
test
inc
test
repnz
or
aad
xor
adc
arpl
or
xlat
in
sbb
fstl
fs
iret
dec
ss
aad
in
mov
call
or
jne
jb
scas
sbb
in
lahf
lods
xchg
fld
jp
jb
dec
add
ret
stc
sub
lods
es
cmc
inc
iret
mov
addr16
js
dec
xchg
xchg
cmp
push
movsl
cld
xor
push
dec
sbb
ja,pn
mov
xchg
lods
xchg
xor
in
std
aam
lock
lahf
in
pop
push
mov
int3
imul
jecxz
cmp
mov
notl
jp
ds
sbb
adc
mov
shlb
fmulp
sub
js
mov
sbb
xchg
imul
loope
or
push
cli
push
sbb
push
xorb
pop
jecxz
push
jbe
mov
push
outsb
lcall
jle
cmpsb
adc
mov
inc
leave
lcall
sub
mov
adc
icebp
jge
fucomp
mov
insl
cli
inc
add
mov
sbb
or
cwtl
adc
iret
cmp
push
or
push
mov
mov
cmp
xor
cmp
ficompl
sub
lahf
lods
in
sbb
mov
int3
imul
jno
roll
sub
loopne
cltd
ret
notl
jmp
and
and
loop
lcall
add
adc
adc
sahf
mov
pop
jne
sbb
hlt
rcl
dec
stos
xchg
add
inc
daa
loop
insl
jns
rorl
cmp
jns
cli
cmp
jl
outsb
pop
std
mov
pop
sub
cmp
and
inc
popa
fcmovnbe
inc
pop
daa
int3
js
sub
jne
pop
mov
int3
jecxz
and
ds
mov
mov
dec
mov
jae
in
xor
push
xchg
arpl
pop
fldl
out
xchg
lret
clc
icebp
xlat
fstpl
cs
dec
stos
out
xor
testl
pop
xchg
in
aad
shlb
outsl
iret
sub
mov
inc
test
fldl
out
mov
fmull
iret
and
aas
test
shll
testl
mov
push
push
imul
pop
inc
push
je
push
ja
cmp
dec
aaa
in
sbb
xlat
insb
mov
add
lahf
lock
sbb
jnp
mov
mov
into
mov
out
cld
xor
test
jb
mov
negl
stos
dec
adc
in
dec
in
inc
xchg
lds
nop
add
insb
mov
test
ss
adcl
lahf
loopne
sbb
mov
push
sbb
inc
mov
sbb
inc
sub
clc
divb
loopne
sbb
sarb
adc
xor
imul
repnz
or
cmp
pop
lahf
imul
inc
sub
ret
mov
xchg
jbe
movsl
push
adc
mov
mov
jne
adc
dec
jle
cmpsl
mov
imul
ss
jp
das
dec
orl
aad
add
and
les
int
scas
inc
add
sahf
movswl
add
lahf
bound
cwtl
mov
decl
mov
mov
adc
pushf
xchg
dec
pop
pop
pop
push
sbb
sbbb
incl
arpl
stos
daa
movsl
xchg
mov
aas
push
int
aad
fdivl
pop
movsl
push
ds
out
jp
js
adc
aaa
cld
fidivs
aam
loop
mov
ret
je
mov
jae
addr16
testl
mov
rcr
aas
mov
iret
out
add
fistps
xchg
add
ds
mov
out
shrb
mov
mov
add
pop
cmp
push
arpl
inc
outsl
out
and
cmc
push
int3
mov
test
fadds
cmp
test
mov
je
xor
cwtl
dec
xor
sub
stc
rcrb
enter
fildl
int
xchg
lcall
push
adc
dec
cli
ljmp
or
sar
insb
jnp
mov
cmp
sub
push
andb
mov
xchg
dec
xchg
aaa
fsubs
ret
das
pop
and
inc
mov
pop
insl
sarl
sub
hlt
imul
fcmovne
xor
cmp
mov
mov
mov
fs
or
and
push
jbe
loopne
dec
mov
mov
int
ret
ret
movb
add
call
xorl
dec
outsb
out
fwait
outsl
or
pop
and
mov
jl
cmp
add
hlt
sahf
nop
test
cld
xchg
or
xchg
nop
xchg
jg
add
pop
lods
aad
or
jae
push
inc
add
icebp
pop
jno
aad
cmp
faddl
scas
xchg
sbb
pushf
loop
or
push
fists
dec
mov
fmuls
dec
jmp
int3
cmp
add
mov
adc
or
mov
adc
push
xlat
std
push
jae
jp
out
imul
or
jle
xchg
mov
aaa
fmuls
pop
mov
add
and
jmp
mov
stos
test
dec
mov
and
int
aam
lock
sahf
sbb
icebp
cmc
lods
pop
pop
adc
in
lds
stc
lods
xchg
ror
rorb
lret
sub
mov
rcl
mov
fldln2
or
mov
icebp
mov
nop
test
ja
mov
push
mov
nop
aas
cltd
mov
fucomp
out
xor
mov
push
or
out
out
and
scas
ret
test
gs
and
arpl
fadd
orl
and
fcompl
ficompl
pop
push
cmpsl
dec
pop
jns
ud2
or
out
pop
dec
sub
les
fs
add
xchg
ljmp
adc
jb
inc
jg
sti
push
rol
arpl
mov
jb
cmpsl
inc
aaa
cli
nop
ss
mov
inc
jno
or
push
jg
and
es
adcl
adc
mov
and
test
cmp
add
adc
cmp
push
std
in
nop
out
jcxz
sub
cmovge
xchg
mov
imull
jecxz
outsl
xchg
mov
jne
filds
inc
add
inc
push
lods
cmp
mov
nop
jmp
imul
mov
mov
insb
aas
int
cmp
cmc
inc
mov
popf
inc
fwait
gs
push
adc
stos
lock
aam
iret
ficoms
mov
icebp
mov
int3
sbb
xor
insl
mov
pop
push
sub
rclb
cs
sub
stos
jne
jns
jle
mov
sbb
sub
pop
mov
std
clc
jle
rcrl
out
push
icebp
pop
ljmp
mov
and
fistpll
pop
inc
fimuls
mov
into
dec
shll
jg
lcall
popf
test
inc
popf
mov
flds
outsl
xlat
and
sarl
dec
xchg
jb
inc
jmp
popa
jae
xorb
dec
adc
sbb
out
fdivrl
cmpsb
xchg
push
sti
je
stos
xchg
orb
aam
xchg
arpl
xchg
mov
pushf
fsubs
xchg
roll
push
push
adc
aad
push
fwait
mov
testb
mov
and
clc
jmp
sub
ja
dec
mov
sub
outsb
scas
out
fstp
std
push
push
lock
jl
inc
cltd
daa
stos
into
mov
mov
mov
mov
pop
hlt
xchg
daa
popa
loope
cmp
xchg
ljmp
pop
mov
inc
sub
popa
loope
loop
aam
jae
lahf
inc
pop
mov
mov
push
addb
ror
mov
xor
cmp
mov
or
mov
ret
pop
push
fstpt
inc
es
daa
lret
mov
sbb
dec
sbb
lock
lods
pop
aam
mov
mov
out
dec
jle
nop
mov
pusha
loop
push
pop
mov
orl
inc
jo
pop
mov
push
xchg
cltd
cli
xchg
cld
adc
push
push
fwait
jno
fs
fcoml
push
jns
adc
inc
pop
adc
sahf
pop
xor
orb
push
xor
inc
rcl
add
lcall
and
and
fists
fs
arpl
dec
in
rcl
pop
out
sub
mov
sbb
jle
pop
jecxz
sub
stc
sbbb
inc
jg
jae
fsubs
inc
dec
pop
dec
int3
pop
out
add
jmp
shll
cmpsb
inc
out
and
mov
jae
cmp
fstpt
inc
insl
jbe
or
adc
jmp
mov
std
int3
sub
outsb
shll
fwait
outsb
ror
xor
loop
adc
add
xchg
cmp
hlt
pop
inc
xchg
sub
add
jmp
out
xor
and
mov
scas
enter
ret
clc
inc
mov
ret
imul
mov
mov
mov
pmaxsw
ret
pop
lods
pop
in
push
push
iret
jcxz
xchg
repnz
jl
vpsubb
sbb
jns
pop
mov
jmp
xchg
outsl
jae
faddl
mov
inc
pop
jmp
jle
outsl
or
or
jbe
xorl
movsl
mov
mov
loop
dec
and
or
push
iret
leave
or
cmp
pushf
ret
aad
rorl
jmp
dec
sub
in
push
out
xor
cmc
bound
xchg
inc
das
push
xchg
cmp
sub
xor
ds
xchg
mov
sub
jg
sahf
add
xchg
scas
ret
stos
xchg
rolb
in
vmovlps
rcrb
mov
leave
lds
dec
sub
enter
jne
cltd
cwtl
jno
pushf
cmpb
adc
rcll
jp
and
loopne
outsl
add
jmp
push
sbb
mov
stc
int3
fbstp
popa
or
or
loopne
lret
adc
adc
cs
test
adc
pushl
incb
rorl
cs
nop
ss
mov
ljmp
lds
mov
outsb
and
fcomps
repnz
mov
push
imul
mov
sahf
adc
xchg
rcrb
and
pop
stos
enter
sbb
cmp
mov
xlat
mov
xchg
mov
outsl
pusha
or
in
mov
or
fisttpl
adc
fs
cmpsl
xchg
push
xor
dec
scas
das
lret
fidivs
sub
jne
xchg
bnd
fstps
cmpsl
xor
fnstcw
fisubrs
mov
orb
push
mov
jbe
inc
movsb
sbb
lret
xchg
mov
and
inc
bndldx
loope
cmp
aaa
xchg
cmp
jp
dec
sub
fwait
add
mov
adc
enter
out
xor
lahf
jle
aad
push
fdivl
mov
mov
push
cmp
mov
dec
ljmp
cmp
mov
mov
pop
arpl
push
mov
pop
mov
call
mov
cmp
add
aas
sbb
add
and
sbb
adc
pop
fiadds
or
test
cmpsb
mov
mov
mov
addb
mov
mov
xor
sahf
xor
mov
scas
pop
je
adc
nop
or
add
insl
test
mov
call
mov
imul
movsl
xchg
xlat
into
outsb
dec
xchg
cmp
xlat
pop
xor
daa
pop
mov
sub
std
loope
repz
adc
sub
cwtl
push
in
int3
mov
scas
test
jmp
sub
fmuls
test
pop
mov
jecxz
mov
jle
push
inc
out
xchg
dec
xor
ret
inc
push
adc
fidivrs
sbb
outsl
insb
mov
stos
int
mov
out
xor
repz
popf
jle
and
xchg
mov
inc
sarl
or
push
test
adc
xchg
shl
fs
iret
inc
dec
enter
sbb
mov
mov
cld
push
or
cmp
stos
jl
js
dec
sti
rcr
call
stc
inc
mov
fstpt
je
inc
sub
call
mov
adc
in
cmpsl
jo
in
inc
cmp
frstor
mov
je
popaw
jge
imul
out
pop
xchg
cli
pop
fcom
cld
pop
bound
adc
pop
and
xorl
inc
pop
jp
adcb
int3
pop
test
aaa
stc
fcompl
pop
cmp
pop
fistpll
div
push
sahf
pop
arpl
pusha
pop
push
fiadds
dec
lods
sbb
pop
les
mov
mov
xor
push
sub
outsl
and
xchg
fisttps
jno
imul
mov
arpl
jmp
xor
xor
adc
mov
or
add
add
test
dec
pop
in
lahf
scas
lea
ljmp
or
test
cmp
add
inc
fidivrl
bound
movb
imul
cltd
es
push
icebp
jb
enter
lods
sub
pop
mov
subb
ss
test
sbb
cmp
test
inc
popa
mov
leave
sti
push
mov
out
jle
es
aam
lods
ret
sti
loopne
pusha
lods
test
pop
ljmp
dec
push
imul
shl
ljmp
scas
adc
cmpsl
dec
sbb
fst
jb
cld
mov
fsubrs
fwait
call
adc
lret
std
sub
icebp
mov
push
lcall
sub
aaa
dec
jge
lock
popa
sub
pop
pop
adc
iret
js
cmpsl
xlat
stos
inc
mov
add
out
xor
call
mov
adc
xchg
jno
nop
jns
in
daa
subb
jnp
aaa
jns
add
stos
imul
or
xchg
lcall
lods
in
inc
leave
mov
stos
pusha
sbb
cmc
sbb
mov
ror
cmpsb
imull
push
push
jbe
inc
clc
loope
dec
jge
xchg
loopne
mov
mov
xchg
mov
in
and
int3
ss
dec
xchg
or
jne
xor
mov
mov
pop
dec
faddl
out
repz
push
adc
jl
pusha
cmp
xchg
mov
nop
cltd
cmp
sub
insb
push
or
orb
mov
sub
test
xor
inc
dec
or
xor
gs
or
js
shlb
sbb
sti
int3
or
xchg
add
mov
rcrl
arpl
pop
mov
inc
jmp
or
insb
pop
and
lret
outsl
std
adc
mov
mov
push
xchg
ror
int
leave
lods
cmpsl
push
push
les
jle
dec
cmp
das
enter
mov
xor
in
sbb
xchg
dec
adc
or
and
in
xor
push
iret
pop
loope
loop
xchg
add
icebp
cmp
int3
sbb
pop
inc
jmp
inc
dec
cmp
rolb
mov
mov
mull
mov
add
pop
lods
notb
or
or
fsubrs
ret
mov
mov
inc
scas
sbb
aad
push
sub
clc
out
fs
cmpsl
cs
fisttpll
pusha
out
movsbl
and
cmpsb
mov
rcl
xchg
jne
inc
rolb
pop
mov
dec
mov
mov
or
mov
ss
in
in
cmp
xor
test
push
clc
jmp
shrl
jl
bound
stos
and
aad
insb
and
lcall
fs
sbb
scas
xor
xor
test
and
or
push
bound
fsubs
jecxz
idiv
cmpsb
dec
insb
in
in
lahf
mov
pusha
add
push
fmul
fstl
shll
icebp
aaa
xchg
dec
mov
push
mov
cs
lods
mov
mov
sub
mov
stos
rcll
mov
int
test
out
sub
dec
fs
call
adc
std
add
cmp
int
adc
idivl
lods
push
xor
xlat
inc
aam
out
stc
xchg
xchg
xchg
test
in
jbe
js
in
mov
sbb
cmp
mov
clc
sbb
mov
xor
les
mov
jnp
xor
leave
sbb
lret
mov
mov
sbb
pop
fsubrp
mov
push
es
loopne
jnp
cld
loope
ret
js
adc
orb
nop
mov
into
cmpsl
test
pop
nop
inc
ret
or
test
xor
icebp
sub
inc
adc
sbb
iret
mov
push
xchg
scas
ds
inc
jne
aas
mov
lods
stos
cmp
xchg
ljmp
xorb
push
leave
rcl
repnz
dec
cmp
insb
subl
or
jmp
rorl
inc
inc
add
mov
xor
std
sub
jmp
test
add
jo
sub
jo
iret
jp
bound
xchg
in
aam
ds
icebp
dec
jne
loopne
rol
addl
add
gs
movsl
pop
push
jl
cmp
jg
pop
mov
cmp
out
add
rcll
push
mov
mov
mov
inc
add
ja
xor
outsb
stos
shll
mov
out
stos
stos
mov
pop
xchg
sbb
cltd
jle
and
insb
orl
dec
loope
fucomip
sub
movsl
mov
xchg
test
dec
mov
sub
mov
and
cmc
push
push
mov
dec
cs
sti
or
xchg
adc
test
imul
jle
data16
outsl
and
cld
shlb
or
mov
mov
fimull
out
push
ss
jle
mov
addr16
shrl
sti
orl
mov
fisubrs
stos
adc
cmpb
inc
jnp
lea
dec
xchg
fcmovnbe
mov
fdivl
adc
mov
adc
xchg
stos
adc
mov
add
xchg
into
cmp
pop
and
rclb
stc
mov
mov
lret
out
xor
mov
jge
or
ret
roll
and
cmpsl
jb
push
dec
xlat
daa
mov
sbb
pop
gs
jno
scas
jmp
and
and
popf
dec
fdivr
and
aad
testl
popa
andl
cmpsb
adc
fldl2t
jl
mov
sbb
and
cmc
icebp
xchg
mov
lods
arpl
xor
sbb
nop
push
pushf
sti
ljmp
cmp
xchg
data16
add
in
mov
out
sbb
daa
cmp
flds
push
lods
cmp
aas
inc
xchg
daa
cs
push
cmpsb
or
adc
push
dec
adc
xchg
cmp
aaa
lds
push
cmp
mov
jmp
cmp
lcall
mov
sub
or
jg
mov
aaa
jg
and
cmp
movsl
into
push
arpl
in
sbbl
lods
xor
dec
jb
and
mov
ds
shrl
aad
sbb
movsl
daa
push
inc
cmc
xor
scas
nop
mov
jne
push
sti
stc
outsb
pop
mov
fs
fdivr
xchg
fsts
fs
mov
scas
fdivs
mov
push
fimuls
inc
or
xchg
push
lea
sahf
cmpl
mov
ret
mov
mov
ret
push
bound
mov
int
xchg
sbb
sub
dec
mov
iret
fadds
xor
mov
lods
aas
add
mov
cwtl
sub
mov
jecxz
mov
xchg
mov
jae
xor
xchg
inc
dec
inc
mov
inc
cmp
mov
xor
jecxz
imul
call
pushf
mov
mov
add
out
das
sub
and
adc
push
idivb
pop
or
mov
xchg
loope
jb
bound
cmp
test
into
add
adcb
sub
dec
pop
cli
outsl
mov
or
add
gs
sbb
sbb
jno
xor
outsb
xor
inc
and
clc
scas
adc
stos
stc
fldenv
repz
aaa
loop
cld
dec
cmp
xchg
mov
mov
shrl
jae
sub
add
xorb
or
and
sti
add
pop
pop
mov
std
push
negl
xchg
xchg
push
repnz
xor
inc
outsl
imull
jae
nop
push
popf
pop
xorl
nop
lock
loope
sub
jp
push
mov
push
cli
movsl
loopne
jno
add
pop
jae
loopne
punpckhdq
ss
mov
mov
jns
cld
aas
js
scas
in
jno
dec
test
sahf
fildl
subl
mov
xchg
inc
xlat
fmull
orl
jnp
push
mov
roll
pop
pop
stos
push
int
loope
mov
fiadds
mov
int
imul
jne
aas
movsl
cmp
scas
lds
roll
mov
daa
push
xchg
push
and
loop
bound
dec
aas
pop
call
ss
iret
aam
sbb
jb
cmp
push
cmpsl
adc
rcr
das
adc
and
ret
xchg
jmp
xchg
movsl
repnz
adc
movb
imul
push
rclb
pop
xchg
in
fisubrs
das
add
stos
sbb
sub
loopne
adc
ja
push
sub
jbe
call
stos
push
pmuludq
test
jmp
shll
and
add
jbe
dec
fwait
lret
jg
fisttpll
sub
bound
xor
mov
sbb
xchg
jmp
push
inc
or
sbb
repnz
js
lock
pop
sbb
add
push
xor
jo
sbb
xchg
cmp
data16
push
mov
fsubrl
inc
aaa
iret
orl
mov
mov
mov
sub
lds
cmpsb
and
xchg
int3
call
jmp
dec
and
xchg
movsl
or
loopne
cmp
mov
clc
es
or
je
mov
ss
sbb
or
outsl
fs
movsb
jb
add
ret
mov
cmp
adc
ja
sahf
pop
adc
loope
inc
dec
out
pop
call
push
decb
sub
and
pop
jle
mov
sbb
xchg
movsb
filds
and
and
sbb
mov
sub
test
loopne
hlt
sub
push
loope
xor
sub
mov
push
lahf
xchg
push
xchg
in
cs
mov
cmp
ss
pop
sbb
lahf
aas
jl
std
mov
sbb
cs
iret
sti
jns
jo
inc
xorb
arpl
lea
mov
push
sahf
scas
and
add
xor
adcl
mov
dec
leave
clc
sub
fbld
and
dec
bound
inc
scas
and
dec
add
dec
inc
push
lret
int
pop
xor
aam
imul
pop
and
mov
es
test
mov
add
xchg
sti
ficoms
loop
cwtl
notb
mov
test
out
enter
xlat
jne
cmp
mov
in
fwait
shll
add
shl
cmpl
adc
xor
hlt
inc
jbe
leave
testl
mov
insb
cwtl
mov
push
inc
lret
dec
jmp
xchg
and
and
fisttpll
inc
sub
pop
pop
adc
add
test
and
pop
loope
loop
sahf
pop
xchg
cmpsb
xchg
xchg
fst
adc
and
outsb
std
lret
rcrb
push
ds
cwtl
or
cmp
outsl
push
jg
mov
push
jle
insb
lahf
cmp
cmpsl
inc
jmp
lret
cmp
jb
subb
jb
sub
dec
mov
andb
and
inc
xchg
call
push
mov
xchg
aam
js
mov
nop
rorl
mov
or
ds
rcr
scas
pop
lods
mov
lds
sub
adc
and
mov
ja
pop
out
and
fcomps
jg
sbb
mov
dec
sub
iret
xchg
add
cmpsl
cld
repnz
cli
mov
arpl
je
jmp
cmp
sbb
or
daa
mov
adc
enter
das
imul
les
outsl
mov
push
cld
popa
jmp
lds
xchg
adc
test
sub
dec
sub
push
rorb
out
and
loope
out
jg
dec
fisubrs
into
sbbb
xchg
pop
rorl
lret
ret
cmp
xlat
dec
jge
sahf
aam
dec
adc
cmp
fstpt
int
sahf
sbb
and
dec
inc
xchg
fisubl
jmp
inc
pop
mov
ss
mov
scas
stos
mov
call
insb
lcall
test
divl
sbb
outsb
movb
jl
inc
push
mov
xchg
mov
fdivl
ss
lock
fdivr
inc
aam
push
sub
push
cmp
mov
lret
sbb
pop
sbb
addr16
lret
xor
test
in
push
fsubl
mov
test
add
dec
jge
xor
sbb
mov
pop
sbbl
lods
stos
sbb
sub
push
dec
ja
dec
pop
mov
lret
aaa
add
cmpsb
js
lcall
movsl
adcb
push
xor
xor
jno
sti
mov
sahf
mov
gs
push
adc
adc
cmp
aaa
cmpb
or
pusha
rcrl
aam
cmp
dec
enter
jp
stos
idivb
fwait
pop
or
lret
jne
inc
fs
mov
aad
dec
xchg
jae
sub
inc
sub
mov
sbb
mov
jg
ds
bound
arpl
shll
sbb
call
arpl
test
rcrb
xchg
mov
pop
movl
test
push
ret
aam
mov
xchg
pop
ret
push
mov
fadds
inc
and
das
rcrb
cli
adc
loop
stos
push
push
loop
data16
dec
adc
out
mov
cwtl
inc
rolb
mov
jmp
lret
xchg
pop
mov
stc
fdivp
out
jecxz
icebp
cli
in
dec
xor
xlat
lods
mov
mov
mov
and
jg
lods
add
testb
push
xor
mov
inc
cmp
cli
pop
stc
and
fistpll
xor
out
pusha
cmp
cmp
and
std
xor
pop
xchg
push
jns
rcrl
nop
adc
or
xchg
adc
andb
fldcw
stc
out
aas
or
cmp
insb
movsb
adc
and
cltd
leave
add
mov
adc
repz
adc
mov
inc
out
nop
lds
ret
stos
inc
sbb
adc
mov
xlat
outsl
aaa
xor
repz
adc
cli
clc
mov
mov
and
xlat
sahf
cs
out
push
stc
push
pushf
ds
add
movsb
sbb
inc
outsl
pop
jne
js
jns
xchg
cmp
bnd
sbb
lea
rol
jbe
sbb
cmp
js
jae
pop
xlat
adc
cltd
inc
sbb
mov
sarb
ret
adc
repz
insb
push
mov
jbe
xchg
pop
mov
jo
int
insb
cs
pop
push
mov
and
lret
sub
loope
lret
jecxz
push
jno
xchg
in
shr
inc
push
insl
hlt
out
jle
shll
addr16
cmpsb
and
unpckhps
push
les
add
nop
outsb
jg
orl
je
aas
xchg
dec
lret
incb
shlb
mov
cmp
jns
mov
test
pop
ljmp
inc
mov
inc
dec
out
insb
push
mov
aaa
pop
push
ja
mov
fisttpl
adc
mov
sbb
or
jp
pop
pop
push
inc
pop
out
test
mov
ficoml
fcom
jbe
test
lret
jl
movsb
jno
cmp
jmp
mov
subb
out
sub
inc
push
sbb
xlat
in
ljmp
mov
imul
call
mov
repz
mov
jno
push
jle
mul
out
test
sbb
idivb
pop
sub
sbb
outsl
pop
test
mov
mov
push
inc
scas
sub
or
das
insb
loopne
sti
shlb
lods
push
fildll
sbb
xchg
daa
dec
outsl
mov
adc
sub
mov
ljmp
mov
xor
sub
mov
test
into
sub
enter
insb
jbe
cld
mov
fs
ljmp
mov
xorb
mov
or
and
mov
pushf
jae
jp
mov
aad
jg
xor
cmp
loopne
sub
stos
test
out
mulb
lods
cli
aas
cs
mov
out
ds
sub
fisubs
in
sahf
mov
adc
push
mov
aam
fsubl
lods
sub
js
dec
rcr
pop
adc
pushf
insb
xchg
dec
movsl
adc
jno
mov
jge
mov
mov
imul
push
insb
push
nop
jge
mov
and
pop
mov
push
sbb
arpl
es
mov
subl
xchg
and
cmc
push
xor
or
inc
into
pop
sbb
add
and
or
and
data16
mov
jno
pop
jg
inc
adc
or
imul
pop
cmp
push
adc
sbb
xchg
sub
cmpb
jae
pushf
aas
cmp
sbb
adc
mov
cmc
pushf
imul
jl
test
adc
sbb
push
jge
insl
fwait
shrl
fwait
ret
add
aam
and
test
dec
pop
sub
ljmp
sbb
push
push
add
adc
ljmp
xor
xorl
fcoml
pop
addr16
sbb
adcb
aad
cld
int
push
lret
lcall
jecxz
fdivs
sbb
cwtl
push
xor
imul
mov
cmp
sub
mov
and
js
push
out
add
xor
dec
and
mov
scas
xchg
sub
xchg
cmc
out
leave
loop
pop
stc
mov
push
push
orb
ds
test
les
data16
xchg
mov
faddl
sti
addl
inc
sbb
call
rorb
and
and
push
pop
cltd
roll
sbb
arpl
fdivrl
int
adc
mov
lahf
scas
jl
cwtl
push
arpl
nop
lods
rorb
aam
or
movsl
mov
shll
sbb
cmp
or
mov
je
cmc
icebp
mov
cmp
mov
xor
sbb
and
cli
in
xchg
xor
pop
out
mov
mov
or
add
icebp
adc
daa
and
mov
dec
stos
push
and
push
jbe
jae
dec
sub
outsb
inc
pop
in
fmuls
ret
mov
mov
outsl
outsb
mov
bound
sub
push
in
add
gs
inc
hlt
call
lds
mov
bound
test
iret
jae
add
lock
sbb
inc
pop
data16
lahf
mov
cmp
sub
iret
mov
rcrb
cwtl
xor
addr16
mov
fistl
lea
push
leave
inc
sbb
scas
sti
mov
cmp
xchg
jl
call
cmpsl
enter
rcr
out
xchg
sub
dec
sbb
sahf
mov
leave
push
adc
outsb
mov
fcmove
jle
pop
xchg
fistpll
pusha
fisubl
mov
stos
lea
dec
xchg
movsb
rcr
repz
sub
cs
daa
cmpb
stos
ja
mov
std
xor
lock
cli
cli
scas
js
jbe
lret
mov
dec
repnz
rorb
loopne
push
pop
dec
mov
cmp
xchg
out
cld
dec
add
mov
clc
shr
lret
addb
daa
cwtl
roll
fdivr
ss
adc
sar
lock
ret
lret
dec
push
test
jne
test
subb
imul
ljmp
xchg
lods
mulb
mov
rcll
inc
mov
lea
in
cmp
sbb
sbb
lea
xchg
pop
ljmp
inc
fwait
popa
dec
iret
outsb
jns
jmp
mov
rcrl
jbe
fcomip
sti
pop
bound
and
jle
lret
outsl
push
pusha
ret
and
push
lock
dec
aad
push
dec
add
adc
cwtl
call
fldz
and
aaa
push
adc
cmp
jmp
arpl
lea
sbb
or
out
andl
insb
mov
adc
push
xchg
daa
imul
mov
xchg
call
inc
inc
dec
jmp
in
lcall
inc
stc
subb
jp
push
xchg
mov
push
xor
loope
xor
fadds
inc
xor
stc
int3
cmpsl
test
std
mov
inc
push
testb
push
ret
ds
lret
in
loop
lret
out
les
stc
mov
jne
mov
ficomps
xchg
inc
ds
lcall
cmp
dec
lahf
mov
jbe
pushf
push
int
push
stos
and
andb
sub
mov
dec
fwait
mov
mov
sub
test
dec
inc
fidivrs
sub
push
in
or
aad
cld
or
cmpl
loopne
sub
xchg
pop
cmpsl
cli
sub
stos
cmp
iret
ja
mov
xchg
pop
sbb
dec
fiaddl
adc
dec
in
and
and
adc
adc
popa
aam
add
adc
pop
and
inc
out
mov
sbb
daa
push
test
sub
mov
test
or
xlat
xor
or
mov
orb
inc
loop
std
mov
cmp
cmpsl
pop
lea
push
cmpsl
xchg
sub
insb
mov
imul
or
xor
imul
testl
sub
out
cltd
jecxz
xchg
int3
pop
repz
pop
aam
xchg
mov
mov
and
jle
xchg
add
in
jnp
mov
ret
repnz
je
out
shl
sub
xor
repnz
jbe
xor
aad
mov
xor
test
test
fidivs
into
sti
data16
lods
sbb
xchg
outsb
sub
mov
pop
adcb
hlt
shlb
push
lcall
arpl
jno
lock
movsl
add
bound
cli
in
xchg
and
rol
enter
mov
mov
mov
imul
jns
cmp
test
insl
or
xorl
jl
inc
mov
bound
sbb
push
pop
pop
xchg
out
mov
mov
pop
xor
and
in
sub
insb
popf
addb
aam
js
movsl
mov
cmp
sbb
mov
or
lods
ficoml
jecxz
pop
pop
jae
jmp
xor
jmp
mov
stc
jg
jns
and
les
or
dec
insb
xchg
sahf
daa
inc
mov
cwtl
addr16
into
inc
adc
je
cld
in
aaa
ja
jle
mov
int
cld
sti
mov
jmp
jecxz
lds
test
xchg
adc
and
push
test
or
inc
push
xorl
jno
pop
add
xor
cld
clc
fnstsw
jb
stos
and
aas
mov
mov
sti
or
lret
cmc
sub
pop
cmp
adc
push
sar
pop
mov
mov
insb
cmp
stos
fsubrs
imul
sbb
and
and
mov
stos
xor
into
loop
jge
and
mov
mov
lahf
ds
mov
mov
and
push
popf
arpl
xor
lahf
mov
inc
popf
loop
cmc
xchg
fldenv
or
add
xchg
cmp
inc
and
adc
out
cmp
xchg
sbb
xchg
lock
sbb
cld
mov
push
hlt
jmp
insl
les
or
inc
sbb
xor
aas
fdivs
and
in
and
fnsave
jmp
mov
cmpb
push
sbbl
add
xor
orl
inc
mov
add
out
loope
xor
and
cmp
inc
mov
or
data16
jno
mov
mov
call
pop
loop
jl
stc
or
mov
popf
fisubrs
aam
loop
cmp
das
shrb
dec
mov
push
pop
sub
sub
ret
cwtl
je
xchg
xchg
push
mov
lea
add
mov
call
lods
divl
pop
sub
cmc
adc
loope
jne
mov
outsb
dec
jns
xchg
lock
test
test
das
ljmp
mov
cmpsl
daa
out
sbb
adc
stos
pop
mov
call
mov
movsb
jae
ret
adc
xor
push
cltd
jmp
stos
push
out
jo
mov
mov
loopne
and
mov
sbb
mov
push
fidivrs
mov
mov
mov
sbbb
movsl
ljmp
cmp
std
movsl
gs
test
lret
cmp
push
push
push
mov
popf
or
push
call
mov
inc
dec
mov
adc
dec
cli
cmpsl
stos
inc
hlt
mov
dec
push
cli
and
mov
data16
addr16
cmc
jmp
mov
arpl
test
sbb
pop
je
push
jl
sub
int3
inc
imul
lods
push
xchg
lea
orb
inc
mov
inc
xchg
adc
out
scas
mov
push
sbb
pop
dec
in
in
iret
and
mov
fs
fwait
stos
mov
or
inc
dec
pop
sub
fbld
mov
arpl
push
mov
dec
jno
inc
sub
ja
es
loop
fcmove
aas
mov
sbb
test
or
test
or
scas
push
push
clc
out
and
repnz
mov
outsb
xchg
in
andl
stos
mulb
mov
add
fcomps
xchg
ffreep
xor
inc
out
pop
fldcw
flds
jnp
dec
cld
push
leave
test
add
pop
sti
in
pop
adc
outsl
push
sbb
cmp
inc
dec
mov
mov
popf
push
lods
loop
mov
imul
jecxz
insb
ja
xchg
pop
jmp
mov
mov
in
sbb
loop
mov
mov
testl
inc
bound
mov
push
inc
std
jbe
out
outsb
arpl
cltd
test
xor
fcmovnbe
testl
adcb
mov
shll
add
cld
movb
test
xchg
out
sbb
dec
stos
and
add
insb
into
push
pop
fcomi
mov
adc
add
lret
xor
or
jp
add
mov
in
das
push
in
in
or
stos
aaa
and
pop
or
and
push
loope
cld
imul
cmpsl
xchg
xor
les
pop
aaa
stos
pushf
jo
scas
stos
hlt
add
ja
mov
dec
into
rorl
call
mov
add
bound
xchg
jae
sbb
fldt
xchg
mov
mul
sbb
pop
bound
inc
push
out
xor
fdivrl
mov
push
cmp
jae
dec
add
xchg
loope
and
push
hlt
imull
sahf
push
cmp
imul
fcmovb
lret
mov
mov
push
leave
mov
jb
xor
fs
push
test
sbb
xchg
movntq
out
stos
jecxz
cmpsb
es
adc
push
cs
inc
std
mov
out
nop
mov
inc
xor
xor
std
sbbl
or
xor
daa
aaa
jmp
out
mov
stos
adc
jp
adc
add
adc
inc
sbb
imul
jb
xor
cli
ss
cmp
aad
xchg
or
out
mov
mov
sbb
call
dec
xchg
mov
movsb
mov
lret
out
or
arpl
js
xchg
inc
sub
push
lock
mov
add
sbb
pop
fnsave
cwtl
cmpsl
lds
lods
sub
mov
inc
sahf
cs
mov
xor
inc
fdivrs
or
out
or
int
into
rcl
arpl
xor
fbstp
addl
inc
jb
sbb
dec
xchg
test
adc
les
arpl
push
mov
jmp
or
hlt
push
ret
pand
cltd
in
xor
popf
fcomps
xor
in
lock
mov
jmp
gs
sarb
sbb
ja
xchg
inc
leave
in
cmp
movsb
in
mov
cli
mov
outsl
sub
push
push
movsb
cs
xchg
and
mov
es
inc
sub
jbe
and
lcall
mov
mov
daa
cmpsb
lahf
mov
cmp
dec
mov
lret
push
ret
sbb
push
sub
xor
jle
mov
xchg
mov
jbe
lahf
idiv
loop
sar
shlb
jns
xlat
fdivrl
pop
push
imul
fcomip
ljmp
pop
aad
mov
add
inc
imul
ret
jmp
push
movsl
insl
cmp
sahf
adc
fwait
pop
testb
je
cs
or
popf
fsubrs
dec
mov
or
mov
push
or
inc
mov
leave
mov
cli
inc
or
repz
repnz
cmp
data16
icebp
sub
pop
das
mov
mov
into
int3
pop
inc
fsubr
sbb
adc
mov
ss
mov
fs
shrb
pop
ja
loop
mov
xchg
insb
inc
sbb
ljmp
out
notb
out
mov
stos
push
or
nop
pop
xchg
adc
mov
aam
inc
out
mov
pop
dec
cmpsb
mov
xchg
and
imul
cmp
jne
sahf
das
jne
xor
mov
push
mov
testl
js
cmp
stos
xchg
push
mov
cmpsb
loop
push
idivb
add
xor
pop
sahf
add
gs
xchg
pop
mov
cmp
repnz
jno
pop
cmp
sub
es
roll
inc
add
mov
mov
out
aas
les
scas
ret
fidivrl
jp
pop
rolb
aad
dec
data16
fldenv
xchg
add
mov
cmc
xor
andb
xor
mov
sahf
push
or
movsb
adc
inc
jg
pop
std
sub
inc
cmp
add
mov
inc
mov
dec
and
rcrb
loope
in
or
and
out
imul
cmp
cmp
cmpsb
jnp
das
addr16
or
jo
mov
inc
rcr
sub
dec
jle
mov
push
pop
gs
pop
pop
mov
bound
loope
cli
aaa
cmp
cmc
cli
mov
mov
popf
fnop
test
jnp
xor
sbb
inc
outsl
arpl
mov
popf
adc
add
push
cli
xchg
dec
dec
xchg
or
fdivrl
scas
out
xor
test
inc
dec
cmp
mov
gs
mov
dec
adc
fwait
lds
sub
sbb
aam
movsb
adc
mov
outsb
mov
subb
andl
insb
or
in
fcomip
push
sbb
xor
outsl
cmpsl
js
and
pop
repz
fiaddl
icebp
iret
cmpsb
sarl
repnz
fwait
dec
ja
and
bound
and
mov
popa
mov
subl
and
cld
sub
inc
imul
mov
xchg
rorb
fmuls
sbb
ss
dec
mov
repnz
mov
rol
lds
filds
lods
loope
jno
aaa
and
insb
mov
icebp
push
inc
nop
imul
rcr
cmp
xchg
dec
in
mov
xor
dec
mov
std
pop
jge
jg
sahf
fsub
xorl
adc
xchg
cli
cmp
xor
xor
xor
aaa
rorb
mov
mov
pop
add
movsl
lret
ret
mov
test
add
sub
lea
adc
iret
xchg
repz
or
xchg
repz
sub
xchg
hlt
adc
ljmp
pop
aas
loopne
cmpsb
sub
jno
and
push
into
cmp
ljmp
dec
flds
push
in
rol
xchg
xlat
inc
pop
aaa
dec
sarb
fistps
jae
mov
scas
shlb
aaa
repz
add
jle
fisttpl
mov
cmp
jnp
and
sub
mov
loopne
insb
xchg
das
cwtl
clc
dec
rclb
sbb
call
pcmpeqb
add
test
xchg
pushf
push
xor
or
repz
push
mov
notb
loope
mov
push
and
into
and
ror
out
add
mov
xorb
jo
lock
clc
or
fildll
call
lcall
ret
icebp
jbe
mov
cltd
push
imul
movsl
sbb
inc
inc
call
popf
das
push
mov
jo
in
cmc
mov
mov
jl
bound
lea
gs
sub
int3
pop
sub
scas
loopne
and
push
ljmp
addr16
aad
push
mov
ja
imul
mov
mov
xor
adc
cmp
movsl
sub
sub
idiv
cld
in
mov
mov
adc
sbb
mov
in
std
ja
dec
je
push
sahf
lock
pop
std
xchg
sbb
imul
inc
mov
xor
or
icebp
mov
dec
xchg
jl
mov
in
test
int
daa
ds
test
in
clc
dec
adc
xchg
dec
xor
in
dec
push
hlt
cmc
fldenv
mov
and
xlat
out
ja
adc
mov
jge
xchg
mov
nop
jns
adc
scas
mov
in
or
test
mov
fs
repz
testl
pop
inc
loopne
aas
sti
shll
inc
lds
jmp
clc
fdivrp
cld
sbb
push
ss
repnz
xchg
lods
jg
xchg
inc
shlb
in
sbbb
ja
subl
push
add
scas
lret
cmpsb
andl
jb
daa
xchg
pop
dec
adc
cmp
aaa
pop
mov
mov
imul
mov
fnstenv
in
ret
xchg
jb
push
push
cltd
in
andl
adc
mov
mov
add
lret
and
mov
push
pop
not
sbb
adc
and
mov
jp
bound
jg
imull
or
xchg
rcll
and
sarb
rolb
push
dec
imull
clc
aas
dec
xchg
dec
and
mov
fucomi
pop
dec
cmp
sarl
iret
push
mov
xor
or
xor
jo
and
add
jecxz
pop
mov
aam
cmp
rcrl
mov
out
push
pop
mov
xlat
add
pop
mov
das
mov
jecxz
jge,pn
inc
aaa
xchg
leave
fistpl
pop
out
inc
repnz
inc
pusha
sub
jg
scas
test
fldcw
ja
sub
cmp
mov
xor
mov
inc
mov
stos
inc
pop
mov
scas
sbb
push
out
push
bound
orl
repnz
push
test
in
ljmp
scas
call
je
push
addr16
pop
push
mov
pop
cmpsb
fldl2t
push
ret
xchg
dec
pop
out
je
mov
loope
arpl
push
out
lcall
jb
sahf
sahf
dec
pusha
jmp
aaa
mov
lea
mov
inc
xor
mov
cmp
xchg
shrb
arpl
std
cmp
sbb
push
xchg
sub
shll
clc
dec
loopne
in
test
stc
jae
cli
nop
ja
lret
sbb
sub
mov
sahf
mov
int3
sbb
nop
xorl
loop
arpl
les
jle
or
sbb
in
movsb
sbb
xor
xchg
incl
jne
dec
cmp
or
dec
xchg
xor
enter
cwtl
sub
jnp
clc
nop
jecxz
jg
xchg
inc
fisttps
pop
jnp
xchg
inc
lret
aad
jp
fs
sub
std
mov
rclb
nop
mov
loop
inc
xchg
xchg
mov
inc
mov
aam
rcl
or
int3
dec
es
popa
insl
jge
ds
cmc
stc
pop
xor
hlt
and
lret
xor
in
or
sbb
popa
out
push
ficompl
sbb
in
push
mov
sti
sarl
dec
dec
pop
lahf
xchg
mov
pop
sbb
icebp
in
xor
add
cwtl
adc
cmp
jbe
hlt
test
push
gs
jb
xchg
mov
cmpsl
stos
rolb
aaa
mov
cmpb
and
arpl
lcall
int
and
fimuls
outsb
add
rcl
or
xor
pop
adc
in
int3
push
mov
pop
and
movsl
mov
fdivp
sub
jmp
lret
fiadds
movsb
jle
mov
cld
jge
test
pop
shr
or
push
mov
lock
fadds
lds
hlt
mov
adc
inc
mov
push
loop
adc
js
aaa
adc
push
sar
hlt
pop
mov
roll
dec
in
stos
xchg
pop
sbb
movsl
dec
call
jge
cmp
lahf
jo
jg
mov
inc
jl
inc
mov
arpl
xchg
ja
xchg
fidivl
mov
inc
lret
adc
mov
pop
jno
mov
loop
xor
inc
out
nop
mov
sbb
cwtl
lret
jae
fs
in
mov
out
jbe
stos
add
adcl
mov
inc
mov
ret
xor
mov
push
cwtl
in
push
xlat
and
xchg
cmp
push
outsl
mov
dec
ss
fs
movsl
jl
mov
je
dec
sbb
push
jmp
enter
xor
lea
inc
fnstcw
fwait
xlat
cwtl
cmp
jo
aaa
enter
popa
xor
pop
mov
jns
iret
sub
test
test
or
ficomps
fnstsw
stos
xor
dec
addr16
mov
movsl
xor
jge
xlat
sbb
cmpsb
hlt
negl
rclb
popa
mov
and
adc
mov
sbb
cltd
adc
aas
ds
hlt
mov
fistpl
adcb
jmp
loopne
mov
cmp
cwtl
pop
js
cmp
xor
test
xor
in
adc
add
movsl
push
imul
repnz
int
rolb
shrb
push
cmpsl
sub
adc
xorb
test
in
mov
inc
mov
push
and
in
fists
shlb
mov
in
dec
sbb
and
mov
mov
int3
dec
out
mov
fistpl
jge
jg
sbb
aam
xchg
jne
shrb
xlat
xchg
mov
jae
sbb
pop
mulb
push
sub
inc
pop
fdivr
jle
fs
es
divl
sti
insl
mov
std
cli
dec
jne
add
outsl
push
jo
lahf
xorb
shl
cli
pop
dec
rcrl
jg
addl
movsb
aaa
ja
inc
inc
sbb
outsb
pop
bound
into
shr
aaa
outsl
roll
dec
lahf
mov
out
sub
mulb
push
push
jbe
mov
hlt
mov
movsl
lret
dec
sbb
movsl
cld
push
xchg
mov
sbb
ret
inc
add
clc
inc
addl
mov
or
xchg
sbb
add
clc
mov
icebp
enter
xor
push
iret
sbb
pop
enter
loope
ds
push
push
aam
ljmp
xchg
jg
int
push
cmc
mov
sbb
inc
add
xlat
jae
jb
sub
adc
pop
add
loop
mov
cmp
ja
pop
fst
je
iret
mov
das
pop
pop
mov
xchg
and
cwtl
mov
push
mov
lret
outsb
inc
addr16
dec
jl
dec
stc
imul
aam
fwait
int
lret
clc
addr16
and
movsb
adc
or
mov
ja
push
cmp
loopne
out
sub
push
test
movsl
pop
jb
clc
cmp
sbb
inc
mov
bound
call
ja
inc
sub
lods
sbb
xor
stc
mov
xchg
movsl
dec
and
movsb
test
jbe
insb
rolb
clc
jecxz
test
dec
push
jns
lea
sub
insb
in
or
or
xchg
sub
inc
cmp
repz
pop
add
sbb
xchg
and
out
shrb
sti
inc
xor
push
popa
es
mov
jne
fcoms
jnp
sub
adc
scas
shl
pushf
xchg
mov
xchg
hlt
into
or
dec
xor
loop
scas
in
outsl
sbb
test
jns
adcl
sub
and
filds
in
movsb
jbe
sub
out
pushf
pop
repz
add
ja
pop
movsl
stos
xor
inc
pusha
fnstsw
sub
fs
jp
and
lds
sub
test
iret
mov
subl
sbb
ret
dec
dec
loopne
fnstsw
cmc
pop
add
aad
push
lock
fsubrs
std
ja
inc
sub
int
and
mov
in
sbb
ljmp
mov
scas
ds
popf
gs
mov
movsb
daa
in
push
cmp
jmp
pop
and
sbb
insl
lock
aam
call
sbb
push
and
push
int
inc
xchg
aam
pop
popf
dec
cli
sub
ja
jecxz
cmpsb
dec
and
dec
adc
mov
outsl
pop
fs
cmp
aad
pusha
mov
loopne
cmp
imul
mov
test
std
loop
in
mov
out
arpl
dec
shrl
dec
fbstp
xor
jbe
test
dec
sbb
xor
sbbb
sbb
add
push
rclb
cwtl
inc
pop
fwait
andl
lret
xor
pop
stc
dec
arpl
push
cwtl
imul
or
sti
dec
pop
inc
mov
stos
stos
subb
in
in
push
shll
and
enter
mov
cmpsb
pop
add
xchg
ljmp
dec
mov
out
aad
outsl
xor
push
fwait
adc
push
mov
pusha
or
pop
ja
or
mov
test
dec
inc
dec
add
push
xchg
loop
xor
fistl
daa
sbb
ret
ja
mov
fdivp
loopne
lahf
lea
dec
jnp
je
add
scas
cmp
adc
mov
movsb
popf
ss
divl
adc
mov
sahf
cmc
cmp
add
mov
cmpsl
add
dec
pop
leave
test
cmp
xchg
push
movlps
or
icebp
fsubrl
popf
pop
dec
mov
mov
cmp
sbb
push
adc
hlt
dec
call
push
cmp
mov
pop
std
and
iret
in
daa
mov
pop
jmp
sub
sub
pop
lcall
push
out
jg
sahf
rcll
dec
or
mov
sbb
fs
mov
fidivrs
loope
in
or
pop
fnstenv
insb
cmp
and
loope
mov
jmp
loopne
stos
jns
fildll
xor
pop
stos
or
push
add
and
gs
mov
mov
sub
xchg
addr16
fcmove
sbb
jmp
dec
mov
mov
mov
add
clc
dec
arpl
lahf
mov
shrb
test
pusha
sti
das
jmp
ss
stos
insl
inc
pushf
enter
jp
xor
call
xchg
enter
clc
out
jnp
mov
mov
inc
mov
pop
sub
imul
xchg
mov
cmp
lret
xor
push
out
movsl
mov
insl
or
fisttpl
mov
movb
mov
ret
mov
daa
test
jmp
push
call
ja
outsl
cmp
dec
pop
add
lret
enter
push
add
aam
xchg
pop
bnd
fbld
add
sbb
or
ss
push
mov
jae
popf
sbb
sbb
dec
mov
pop
sahf
mov
outsb
pop
jl
lods
mov
daa
sarl
dec
or
inc
nop
pop
es
ja
in
mov
pop
push
push
imul
adc
pop
sbb
pop
cld
fwait
xchg
aad
or
lds
mov
fbld
outsl
dec
loop
pop
or
out
push
add
out
negl
lds
sub
or
lret
pop
adc
push
sub
mov
push
lahf
imul
pusha
and
xchg
decl
dec
mov
jge
sbb
repnz
imul
adc
outsl
xchg
sbb
inc
xchg
mov
jnp
push
imul
cmp
xor
icebp
mov
pop
mov
xor
mov
jl
aam
cs
insb
push
cmpb
mov
xor
cmp
jo
or
xchg
loopne
dec
js
neg
inc
mov
sub
out
les
fmull
rol
mov
cmp
cmpsl
aas
shlb
mov
cmp
fwait
lock
idiv
mov
sarb
mov
out
sbb
mov
int3
mov
sub
push
shrb
pushf
ret
stc
jmp
repz
outsb
mov
adc
or
dec
je
aad
pop
in
scas
test
mov
sbb
sbb
sahf
cld
addl
mov
pop
in
or
subl
add
mov
clc
fwait
shlb
aaa
jo
push
or
mov
adc
es
jecxz
test
lea
add
arpl
in
or
aad
sub
and
in
adc
cmp
mov
jecxz
jecxz
sub
mov
je
mov
cmpsl
mov
mov
or
sti
xchg
mov
or
push
xor
fildl
aad
fisubrl
or
inc
dec
adc
fs
pop
es
adc
insl
mov
cmpsl
das
mov
ds
jecxz
flds
xor
xor
outsb
push
icebp
pop
push
popf
stos
jecxz
clc
jae
mov
arpl
jae
mov
cmp
and
push
lea
popa
pop
hlt
sbb
inc
and
mov
mov
cld
dec
jno
ret
xor
dec
iret
dec
shlb
gs
imul
sub
loope
pop
loope
movsb
pusha
sar
fadds
les
gs
cli
dec
fildll
cmp
and
mov
push
push
loope
mov
xchg
xor
xor
shrb
xor
mov
or
mov
xchg
or
xchg
movsb
jb
adc
xchg
xlat
mov
dec
rcl
cli
cmpsl
mov
cmp
push
jg
ja
jae
inc
insb
movsb
das
enter
iret
filds
enter
fisubrl
add
lcall
ljmp
out
in
jmp
jp
fs
cmp
adc
arpl
scas
daa
lds
in
scas
js
mov
inc
mov
and
pop
pop
inc
jb
fisubrs
mov
hlt
or
in
je
sahf
aam
sub
push
into
push
scas
cld
sti
lods
lea
push
or
inc
xchg
push
loope
dec
mov
xchg
out
and
sar
mov
lds
shl
pop
push
or
lcall
pop
jge
pop
sbb
mov
mov
inc
addr16
mov
dec
sub
mov
sub
arpl
ljmp
outsl
in
inc
dec
lods
aad
call
xor
mov
in
shrl
inc
gs
sbb
sub
loopne
loopne
repz
in
js
insl
gs
movsl
adc
push
in
xlat
icebp
lahf
push
es
mov
mov
testl
pusha
mov
mov
repz
pop
pop
push
call
insb
shrl
jb
mov
es
xchg
stc
loope
outsb
into
cmp
scas
dec
xchg
popa
mov
mov
lahf
jl
adc
inc
mov
xchg
aaa
pop
add
hlt
bnd
call
and
and
jg
ss
fstl
ss
push
test
out
imul
xorb
sub
and
inc
mov
sub
inc
add
fistpl
xchg
daa
out
mov
js
les
xchg
loope
jl
pop
pushf
les
pop
push
movsb
sbb
cwtl
out
cmpsl
mov
mov
pop
fcomip
enter
mov
imul
sti
mov
cmc
rcrl
push
sub
mov
and
xchg
cmpb
loopne
lds
into
adc
and
jmp
adc
sbb
push
shl
pop
mov
in
and
dec
loopne
sub
xchg
push
inc
ds
out
sbb
and
jo
stos
mov
jae
adc
lret
push
mov
jge
cmp
jge
dec
lds
jb
and
gs
and
xor
loope
mov
in
into
push
outsl
push
sbb
xchg
lods
test
sbb
aad
add
xlat
add
int3
xor
mov
pop
stc
dec
pop
lds
add
jb
xor
mov
add
les
dec
rcr
fwait
das
int3
add
mov
in
mov
and
cltd
adc
mov
inc
or
adc
xchg
imul
lahf
out
sarb
jecxz
test
or
mov
dec
ja
lret
sub
xor
enter
and
rcl
ja
clc
hlt
jge
int3
add
and
pop
add
xchg
in
cmpb
sub
loopne
cli
in
cmp
bnd
mov
fwait
sahf
dec
xchg
out
bound
mov
or
sub
movsl
in
adc
dec
les
sbb
sti
pop
fsubl
xor
cmc
outsl
int
inc
dec
pop
enter
je
mov
icebp
sarb
leave
push
inc
fisubrs
dec
adc
jbe
xchg
hlt
cmp
pop
das
add
in
inc
pop
out
sub
outsb
repz
cmp
inc
inc
mov
dec
dec
rorl
push
pusha
mov
test
lahf
enter
and
test
push
adc
xchg
xchg
lcall
clc
lods
es
arpl
test
in
adc
mov
stc
push
in
pusha
imul
adc
add
inc
sbb
cli
lahf
sbb
movsl
enter
jno
ja
mov
movsb
xchg
sub
sbb
lret
pushf
push
push
inc
fistps
pop
or
jae
push
lods
xchg
or
lods
ljmp
sub
dec
out
adc
adc
lret
stos
jbe
pop
mov
cmc
sub
inc
xor
inc
sarb
gs
jmp
outsb
ja
xor
add
or
gs
outsl
aaa
xorl
cmp
jecxz
cmp
mov
mov
push
insl
fcmove
and
rcpps
lret
shlb
add
and
out
fwait
mov
int3
in
jo
push
pop
push
xor
fnstenv
jp,pt
std
mov
xor
push
adc
cmp
push
clc
out
pop
imul
pop
lock
out
fimuls
jmp
xor
pop
pop
cmp
jle
bnd
mov
inc
jmp
inc
push
int3
ja
stos
sahf
jb
mov
adc
mov
add
add
adc
xchg
fs
je
jns
mov
mov
ja
ljmp
fldcw
loopne
cmp
jl
mov
jne
adc
ss
cmp
mov
fdiv
shll
add
xor
mov
dec
das
aam
mov
push
push
mov
xor
shll
adc
mov
lods
and
sub
sub
lods
push
shrb
out
jecxz
and
adc
pop
inc
xchg
mov
sahf
cmp
push
pusha
ja
dec
jne
testb
jno
lods
out
jb
daa
xchg
push
out
lods
pushf
or
dec
ret
xchg
jmp
inc
cmp
std
adc
pop
iret
pop
xchg
cmp
test
add
inc
pop
xor
cltd
or
and
push
jnp
jne
lret
mov
outsb
push
insb
mov
ficoms
dec
lret
mulb
inc
xor
inc
lret
mov
in
daa
add
sbbl
and
insb
out
aam
int
mov
hlt
out
cmp
jo
stos
add
nop
jne
jl
sub
xor
dec
mov
scas
sub
ja
filds
pop
push
fldt
mov
or
fabs
jo
and
loopne
scas
and
dec
mov
mov
pop
push
add
sbb
or
or
adc
add
sub
std
mov
jo
stos
cltd
jno
lods
mov
push
push
lret
call
xchg
or
sub
icebp
cwtl
cmp
in
cltd
in
ret
and
mov
ljmp
aas
or
adc
pop
loop
jmp
fidivs
repnz
mov
cmp
and
sub
vphaddbd
in
dec
das
or
lret
or
mov
sbb
or
adc
xchg
mov
shl
fwait
pusha
sahf
jp
mov
cmp
adc
push
xchg
fldl
adc
push
jae
jmp
rorb
test
pop
cmp
out
xchg
mov
inc
mov
add
into
sbb
jne
das
xor
push
push
add
repz
pop
lds
lahf
adc
ret
inc
stos
cmp
xorl
pop
gs
pop
adcb
shl
stc
adc
sahf
fadd
jb
out
out
inc
repz
cmp
inc
adc
sti
jp
stos
imul
jns
push
int3
into
cmpsb
xchg
mov
mov
jne
pop
cli
gs
movsl
mov
sti
mov
inc
cwtl
lret
add
mov
mov
out
inc
movsl
shll
div
lds
loop
inc
sbb
inc
inc
pushl
cmpsl
push
and
stc
mov
mov
lret
dec
jmp
scas
loop
pop
into
pop
out
sahf
sbb
pop
lock
add
xchg
push
mov
fs
je
dec
dec
push
movsb
inc
sub
jb
jmp
test
es
dec
into
xchg
pop
fstl
pop
adc
out
push
imul
mov
ja
scas
aad
imul
repnz
mov
mov
sti
ljmp
gs
pushf
sub
leave
not
loopne
inc
arpl
bound
in
jge
int
push
gs
inc
and
and
outsb
sub
push
popa
or
icebp
lret
mov
xorb
push
jne
mov
aas
cmpsl
je
lahf
shlb
in
js
outsl
sti
xchg
mov
push
dec
les
xchg
out
pop
cli
imul
in
jecxz
scas
inc
add
pop
es
addl
loope
repnz
repz
fistpll
arpl
lock
out
arpl
sub
bound
rcl
cmp
cmc
jmp
scas
data16
imul
je
push
test
mov
sahf
fdivrp
repnz
mov
in
insl
adc
jle
and
mov
gs
xor
cmp
shll
sub
add
mov
push
mov
inc
sbb
inc
arpl
sub
fimull
addl
out
or
push
jnp
insl
cmp
inc
xchg
mov
cmpsb
out
stos
inc
roll
scas
out
icebp
bound
popf
pop
adc
xchg
stc
pop
imul
gs
aad
or
inc
or
adc
daa
lock
xchg
jle
ds
dec
mov
cmc
pop
pop
jns
into
xchg
cmp
mov
rorl
das
jae
mov
and
mov
call
ret
fisubl
mov
push
dec
sub
sbb
adcl
xor
xchg
movsb
xor
jnp
mov
dec
jecxz
movsb
jmp
adcb
pop
mov
adc
outsb
jg
mov
addr16
xor
test
push
mov
xchg
pusha
repz
daa
in
aas
imul
mov
in
enter
sbb
sub
loope
pop
xchg
jle
xchg
gs
or
shld
sub
aad
sub
inc
ret
sarl
pop
ljmp
aaa
jg
in
add
mov
addl
jle
iret
movsl
sub
push
xchg
cli
cmp
mov
pop
cwtl
cltd
xlat
push
lea
arpl
jbe
cmpsb
stos
les
push
dec
sub
adc
lods
or
sarb
add
ss
mov
sahf
and
movsb
ret
rorl
xor
fadds
inc
push
cmp
adc
mov
inc
fisubs
ret
sub
inc
movb
push
mov
movsb
and
rcll
ret
cmp
ja
fnstcw
fbld
sti
ret
daa
bound
cmpb
jge
pop
cwtl
vminps
das
and
hlt
inc
insl
movsb
test
sti
mov
pop
sbb
mov
mov
or
flds
stos
xchg
repz
shrb
inc
test
arpl
scas
xchg
setb
jmp
mov
sbb
cld
lods
scas
inc
ljmp
jno
sbb
xchg
jle
lds
inc
push
aaa
jb
jnp
imul
adcb
orl
mov
push
ss
xor
cld
inc
inc
mov
mov
inc
shrl
mov
and
push
xlat
in
fwait
mov
pop
jmp
lret
dec
cld
cmp
out
shr
icebp
push
xor
rcll
int
cwtl
lds
pop
jg
lret
test
mov
out
mov
cld
push
jle
insb
andl
pop
pop
and
dec
mov
cmp
mov
loopne
lock
insb
insb
hlt
jbe
pop
pushf
jl
mov
xor
daa
cltd
sbb
xor
ret
lds
hlt
lds
mov
or
xchg
pop
std
push
lret
outsl
jp
aaa
dec
mov
movsb
fisttps
testb
sarl
sar
loope
push
movsb
adc
add
cs
inc
test
ss
roll
es
mov
mov
outsl
push
fnsave
mov
shlb
into
lods
lock
int
xchg
int
fcmovnbe
dec
pop
inc
arpl
arpl
mov
mov
mov
jnp
ljmp
popf
and
icebp
cmp
arpl
sub
cld
fcmovb
daa
jo
test
xor
jns
fs
ror
cld
shrb
stos
jae
or
adc
jmp
out
and
fcmovnu
mov
jge
jp
dec
jbe
icebp
xchg
mov
and
push
sbb
and
addr16
arpl
jne
ret
and
dec
sbb
cmp
cld
add
sti
or
hlt
inc
into
les
lea
dec
cmpsl
mov
jg
bound
add
fdiv
cmpsb
mov
stos
jg
or
fldl2t
push
sbb
pushf
cmc
adc
xor
cwtl
mov
sar
scas
sarl
sub
das
mov
mov
cltd
pop
mov
dec
jae
out
mov
xchg
in
and
or
lret
mov
pop
cmp
adc
inc
arpl
xor
or
cmpb
fisubrl
into
mov
aad
mov
test
adc
testl
filds
jle
and
push
orl
mov
lcall
pop
rolb
push
sbb
scas
jae
mov
bound
xchg
cmp
mov
dec
lds
mov
xor
popa
mulb
xchg
into
lcall
or
pop
sbb
loop
cmpsb
sub
fmuls
lds
inc
inc
subb
cmpsl
leave
sbb
je
xor
insb
mov
fsts
push
daa
jg
pop
mov
ds
loopne
addr16
cmpsl
js
xchg
mov
xor
cmc
aam
xchg
gs
div
mov
sbb
mov
movsb
ret
mov
movsb
cmp
dec
push
and
or
mov
jg
ret
sbb
cs
orps
icebp
pop
pop
or
sub
imul
insl
ja
mov
negl
sub
loopne
jo
push
int3
and
loope
xchg
push
mov
push
mov
jb
xor
ss
mov
jne
jb
pop
lock
ljmp
jmp
rcll
das
ficomps
mov
cmc
lcall
repnz
jmp
jg
gs
mull
add
in
stc
sbb
arpl
test
and
mov
jne
mov
inc
gs
loopne
aam
rclb
and
rcll
in
sti
mov
lahf
xor
cmp
push
jg
or
mov
cmp
test
cltd
dec
fnsave
xlat
andb
dec
adc
sub
xor
mov
sbb
adc
mov
enter
jge
ret
in
into
call
push
in
or
insb
hlt
imul
push
sub
xor
std
mov
dec
dec
cli
test
inc
mov
mov
ljmp
repnz
push
fisubrl
ljmp
cmp
and
jecxz
cwtl
jge,pn
xor
roll
or
push
xchg
inc
adc
sub
or
pop
das
adc
mov
jecxz
shlb
push
jne
mov
rcrl
sbb
sti
inc
xchg
mov
push
mov
leave
bound
imul
mov
adc
scas
dec
cltd
and
hlt
cmp
jb
lods
push
daa
add
fldenv
or
dec
nop
and
jnp
cmp
out
popa
std
sub
dec
lcall
cld
cmp
outsb
pop
fidivrl
stos
mov
pop
fildll
movsl
adc
aad
cmp
adc
xchg
jae
adc
xorl
cmp
cmpxchg
into
xor
iret
insb
mov
mov
mov
cmpsl
pop
movl
ljmp
mov
fisubrl
stos
push
sbb
insb
lahf
jbe
pop
pop
fdivrl
sahf
push
jl
ja
jmp
bound
push
jmp
xchg
loop
dec
imul
xor
orb
jns
mov
pop
or
popa
pop
mov
insl
imul
mov
mov
lock
push
imul
test
mov
and
cmp
mov
push
or
mov
bound
sbb
dec
push
daa
pushf
mov
cmp
scas
xor
ja
dec
mov
out
scas
sub
push
ficoms
daa
jl
cmc
sub
push
movsb
or
sbbb
mov
imul
adc
or
sbb
and
int3
sub
dec
fsave
pop
rclb
out
jbe
mov
sub
repnz
es
stc
test
enter
mov
push
hlt
out
int
lods
dec
mov
dec
push
lret
xor
jp
jae
cmp
outsl
adc
repz
sbb
aaa
fiadds
fbstp
cmp
je
and
out
cmp
loope
inc
jo
jbe
mov
sbb
dec
jle
fwait
dec
scas
and
mov
mov
data16
and
fs
out
insl
adc
in
sarb
sub
in
lret
test
and
push
pop
or
adc
call
lret
or
dec
mov
cmc
or
or
jnp
sarl
sbb
leave
out
ljmp
adc
push
add
icebp
xor
mov
jb
mov
pop
fisubs
in
in
shl
mov
add
xchg
ret
movsb
xchg
clc
dec
outsb
out
pop
mov
test
mov
int3
cmp
inc
dec
ret
or
orl
movb
dec
imull
lds
out
daa
mov
mov
sub
cmp
jmp
rcl
fmuls
rorl
popa
imul
sub
cmp
xor
mov
lds
and
loop
jmp
iret
fidivs
pop
inc
inc
icebp
sbb
lret
add
lret
out
push
ror
in
mov
out
lods
scas
mov
sarb
icebp
sbb
ja
subb
ljmp
daa
xor
mov
insl
or
push
push
icebp
inc
das
jge
push
flds
insb
pop
cmp
aad
dec
daa
into
dec
mov
scas
push
fwait
lahf
int3
jno
cwtl
push
jle
mov
xor
scas
decl
sbbb
in
push
arpl
call
inc
test
and
sahf
ds
aaa
ljmp
daa
cs
sar
in
inc
pushf
fsubrl
pop
cmp
inc
shlb
sub
out
pop
push
mov
ljmp
jns
jge
xor
rcl
lret
or
stc
mov
rcrl
sahf
jo
je
mov
iret
movsb
jecxz
mov
sub
jl
das
sbb
shrb
popf
adc
ljmp
xchg
pop
mov
pushf
cmpl
repnz
cs
sub
sarl
xor
jmp
int
xchg
pop
add
inc
test
out
dec
xchg
ret
xchg
sub
addr16
adc
jbe,pt
pop
ss
pop
jns
iret
stc
cld
adc
cwtl
sub
repnz
add
cmp
rorb
jecxz
shrb
pushf
push
pop
jo
push
mov
inc
repz
mov
jp
div
sub
rcll
mov
repz
lcall
pop
shl
xchg
and
jae
fucomip
jnp
jle
cmp
dec
les
push
sbb
loopne
adc
or
pop
hlt
mov
cmp
mov
cmp
test
sbb
shrl
sbb
adc
mov
loopne
addl
jnp
xchg
mov
arpl
mov
subb
sbb
scas
dec
mov
popa
mov
mov
loope
sub
add
sub
fs
sbb
into
pop
mov
pop
push
aas
lods
mov
dec
scas
push
push
inc
pop
push
jbe
aaa
in
rclb
lods
out
repz
imul
or
pop
lock
cwtl
or
mov
call
mov
mov
or
inc
dec
jecxz
jl
add
aam
mov
imul
mov
mov
outsb
sub
adc
aam
sar
ljmp
xchg
int
cwtl
ret
mov
pop
pop
cwtl
cmpsb
fs
cmc
cmp
inc
out
push
cmp
adc
dec
mov
inc
push
dec
popa
js
adc
pusha
test
shll
fisttpll
adc
inc
sbb
and
in
rcrl
lea
fistpl
xchg
sar
lods
mov
jp
int
mov
push
push
mov
or
push
mov
andb
dec
push
sbb
in
int
cmp
mov
int3
mov
lcall
xlat
jecxz
data16
imul
test
aam
and
outsl
sub
cmp
or
sub
and
inc
ret
ljmp
push
push
shlb
mov
call
dec
cmpsb
cmc
xor
sbb
mov
inc
mov
or
mov
gs
jmp
in
ja
pop
jmp
addr16
popf
fnstsw
mov
je
and
push
inc
cmp
adc
mov
inc
dec
aas
and
or
xor
lds
push
addl
push
dec
insl
fistl
cwtl
and
filds
std
lea
loopne
inc
xor
aad
lret
dec
mov
and
jmp
out
roll
or
in
aas
leave
loop
fidivrs
pop
sbb
xor
mov
jge
arpl
push
sub
ja
aad
cltd
xchg
scas
pop
or
pop
call
xchg
daa
mov
mov
inc
add
enter
mov
push
inc
outsl
or
jmp
aam
es
loopne
ss
sub
xor
mov
and
sahf
les
mov
xchg
loopew
scas
cmc
mov
ret
xchg
mov
jo
rorb
cmc
jp
ds
aas
pop
inc
sub
out
popf
ja
dec
dec
push
push
push
iret
xchg
dec
adc
lods
into
xor
mov
imul
inc
inc
add
mov
pop
icebp
call
cmp
sti
stc
mov
popa
shr
popa
xor
adc
inc
dec
inc
mov
dec
adc
pop
push
jle
push
add
gs
adcb
push
mov
mov
int3
dec
aam
push
mov
ja
dec
fldcw
loopne
dec
pop
or
jae
jbe
sbb
sub
adc
lods
mov
xor
xchg
mov
pop
hlt
nop
sahf
adc
pop
stos
ja
push
addr16
and
pop
pop
les
push
dec
xchg
and
mov
sub
mov
push
daa
dec
xchg
mov
dec
test
jae
mov
or
lahf
push
addr16
pop
or
mov
push
mov
lds
adc
dec
fildl
insb
and
repz
jle
out
push
repnz
adc
pop
inc
cmpl
jle
xchg
sub
sbb
mov
subl
jae
mov
mov
adc
push
js
pusha
mov
imul
sbb
daa
sbb
stos
jb
js
in
test
mov
dec
popf
inc
mov
or
rclb
adc
lods
or
add
movsb
xchg
lcall
push
repnz
in
mov
addb
pop
cmpsl
roll
jo
sbbl
xchg
adc
mov
or
leave
mov
out
adc
jo
xchg
xchg
mov
stos
sub
mov
imul
sub
add
or
jge
addl
cltd
aad
push
jl
out
inc
cltd
stos
mov
sbbl
and
sahf
mov
clc
mov
test
mov
inc
xchg
pop
fmull
xor
scas
mov
fsts
mov
cmp
jecxz
adc
ja
loop
into
pop
xor
mull
out
je
addr16
shrb
xor
int
repz
adc
cmpsl
push
inc
jmp
sbb
push
or
cmp
ds
ds
popf
adc
cmc
mov
dec
lret
cld
lock
ret
push
inc
sbb
or
and
xchg
ljmp
es
lahf
inc
pop
aad
jb
sahf
fadds
addr16
fsub
hlt
clc
fildl
xchg
daa
lret
xchg
clc
dec
add
adc
int
jl
cmp
enter
mov
add
jge
xor
jle
das
leave
mov
dec
xor
push
add
bound
mov
cli
add
jge
push
mov
or
mov
hlt
gs
xchg
pop
movsb
faddl
mov
dec
cs
div
push
in
jg
das
adc
add
das
add
and
shrl
pop
adc
pop
pop
call
add
mov
in
out
or
fbstp
outsl
fnstenv
pop
mov
lods
popf
add
inc
bound
insb
pop
cs
mov
lea
movhps
lahf
jno,pt
xlat
push
xchg
sahf
pop
xchg
shlb
sub
pop
cmp
popf
dec
push
loopne
push
ss
or
dec
enter
inc
sahf
add
dec
mov
inc
sub
cmp
jecxz
call
stc
and
into
jbe
jecxz
out
push
in
inc
or
and
lret
fucomi
outsl
stc
xchg
sub
outsb
mov
jge
sub
inc
inc
cmc
icebp
aaa
jmp
adc
pushf
push
stos
hlt
jbe
push
xchg
rcll
cmp
adc
fistpl
scas
fisubs
inc
stc
test
adc
test
rcrb
xor
inc
hlt
add
in
aam
or
add
push
insl
ja
nop
fistl
xor
pop
add
pop
loop
cmpsb
fiaddl
adc
push
iret
bound
cmpsb
sbb
pop
sub
aam
push
fldenv
xchg
lods
push
mov
outsb
cli
or
or
sub
mov
int3
ds
lahf
xchg
xor
sub
xor
aam
sbb
and
add
dec
mov
repnz
adc
and
push
int
in
sbb
dec
jno
loopne
cmpsl
xor
aas
notl
jns
sti
dec
repnz
xchg
dec
ret
push
insl
mov
movsb
fimull
daa
int3
add
out
xlat
cmp
aaa
pop
js
shll
cmc
clc
inc
in
ds
sbb
in
inc
je
dec
xchg
xchg
and
aad
in
sbb
xorb
int3
push
ret
inc
sbb
mov
jo
mov
jp
push
xchg
pop
mov
mov
mov
xchg
nop
fmull
ss
sbb
mov
jmp
mov
sbb
xchg
in
ss
aam
or
lods
lea
xchg
add
xchg
and
dec
ljmp
aaa
pop
pop
sti
cmp
rol
xor
sub
fisttpl
push
cwtl
out
or
std
fidivs
ffree
push
shrl
add
repnz
and
sbb
pop
mov
mov
cmp
dec
add
popf
mov
mov
cmpsb
mov
adcl
adc
mov
push
mov
xchg
cmpsl
data16
ret
je
sub
sbb
ds
push
fwait
ds
int
in
int
jb
faddl
jg,pn
xor
or
and
bound
sub
lods
pop
inc
call
inc
sbb
aad
scas
sub
mov
push
nop
pop
xchg
shlb
test
aaa
pop
pop
bound
jge
add
imul
and
scas
insl
adc
xor
aaa
jb
mov
lea
test
insl
shrl
cmp
mov
jge
pextrw
sbb
jnp
out
mov
or
repz
mov
iret
lahf
mov
cmpsb
push
sbb
mov
mov
fwait
cmp
test
data16
adc
push
or
adc
cmp
or
jl
int
sbb
lcall
cmc
cwtl
into
dec
pop
xor
or
add
clc
mov
fmulp
sbb
pop
push
ficompl
pop
arpl
push
sub
sub
rclb
test
into
push
inc
in
mov
mov
push
fildl
sub
shlb
push
sbb
and
mov
das
adc
adc
inc
stos
int
rolb
shll
and
ficomps
aad
jmp
jae
aad
mov
mov
add
movsb
cli
dec
clc
scas
mov
mov
pop
jge
mov
push
push
jo
sub
push
dec
jl
dec
inc
xchg
inc
xor
arpl
shlb
mov
xor
push
fsts
fnstcw
ljmp
repnz
dec
add
lret
mov
stc
iret
out
or
and
inc
inc
xchg
ffreep
xor
mov
sbb
xchg
fs
lea
adc
stos
pop
jl
xchg
cmpsb
xchg
test
xchg
add
out
in
inc
adc
out
mov
movl
lcall
mov
ret
mov
dec
adc
out
xchg
jl
inc
out
test
lds
jmp
adc
dec
arpl
mov
aas
sbb
cmp
xor
cmp
je
sub
sub
pop
add
imul
rolb
and
lods
sbb
jmp
popf
ror
inc
fwait
imul
lret
cs
dec
jg
xchg
int
or
xchg
aas
pushf
popa
rol
shrl
and
jnp
sbb
popl
pop
jge
add
xchg
leave
aaa
push
data16
sahf
hlt
xchg
xchg
mov
dec
leave
insb
int
push
and
mov
ljmp
out
leave
enter
xor
movsb
push
fs
sub
mov
fadd
imul
ljmp
add
add
test
cmpsl
push
jbe
mov
inc
insb
and
push
adc
ret
imul
push
mov
fmuls
mov
push
fsub
test
inc
sub
dec
inc
mov
je
pop
jmp
mov
fimull
push
lock
mov
pop
inc
push
iret
mov
stos
test
cmp
add
adc
cmp
ss
call
imul
call
rcrb
lods
or
mov
or
stos
shrl
out
jo
mov
decl
movsb
sti
cmp
inc
jecxz
lds
sarb
fwait
hlt
push
outsb
sbb
and
lret
push
fwait
sub
adc
lret
xchg
add
lea
sbb
sbb
jge
lock
adc
arpl
adc
and
mul
fdivs
rclb
adc
loope
insb
cmp
shl
roll
gs
cmpsb
sub
sub
dec
lret
adc
push
and
stos
inc
inc
inc
test
add
xor
cwtl
inc
hlt
sbb
adc
ljmp
add
adc
jecxz
mov
xor
mov
loop
in
pop
mov
push
out
push
pop
test
subb
iret
push
pop
lds
and
pop
arpl
andl
mov
cmp
outsb
xor
mov
mov
movsb
inc
fsubl
fadds
pop
xor
mov
lret
mov
push
cmpsl
pusha
push
and
or
mov
negl
inc
insl
gs
xor
pop
imul
cmpl
js
or
xchg
xor
mov
mov
sub
shr
neg
jg
xchg
pop
sbb
pop
out
int
push
je
pop
ret
sbb
lret
loop
mov
push
jecxz
dec
or
dec
adc
lahf
sar
jo
push
outsb
push
adc
insl
cmp
ret
jge
or
jns
push
and
hlt
mov
push
jns
fsubrl
lret
ljmp
lods
test
xlat
scas
cmp
dec
das
adc
or
inc
mov
popf
xchg
ljmp
xlat
inc
add
push
mov
outsl
not
outsb
popa
cmp
jl
cmp
jo
daa
pop
cli
inc
int3
or
jae
ret
xchg
dec
dec
dec
iretw
bound
xchg
mov
dec
idiv
std
inc
lea
loope
push
out
and
mov
int
jecxz
push
rorb
testb
rcll
inc
je
mov
fcmovb
mov
aas
adc
lods
add
xchg
or
popf
pop
pushf
or
loope
dec
mov
fisubrs
repnz
lret
das
jg
bnd
push
scas
aad
add
les
mov
leave
pop
popf
fwait
and
add
jmp
loopne
lcall
mov
cmp
sti
fucomi
dec
pop
and
jle
jmp
and
dec
movsb
imul
push
pushw
mov
sbb
jle
icebp
jg
jl
adc
pop
popf
lcall
lea
pop
loop
and
leave
lods
cmp
pop
mov
aad
sbb
xor
test
scas
jnp
je
add
add
das
xor
test
cmp
shlb
push
in
mov
lods
out
jno
fistl
cltd
ja
xor
sbb
iret
or
ss
cld
inc
repz
into
inc
adc
adc
mov
sbb
punpckhdq
sub
pop
push
xchg
ljmp
mov
aam
mov
lods
xchg
pop
imul
pop
cmp
scas
and
notb
pop
movsb
jae
or
in
adc
popl
cmc
mov
dec
sbb
jbe
mov
scas
add
and
jb
sbb
fs
inc
mov
test
sbb
fnstsw
sub
jge
xor
iret
movsb
xor
lock
pop
fidivrs
je
aas
dec
mov
stc
jp
fisttps
jmp
mov
jne
push
pop
adc
js
jmp
mov
jmp
fcos
mov
jle
pop
mov
cmc
test
loop
in
aad
mov
xchg
sbb
addr16
enter
insl
aam
in
cmp
imul
das
and
fbstp
mov
sti
or
sarb
repz
sahf
push
icebp
add
mov
into
popa
lods
pop
movsl
ficomps
lret
ret
out
pushf
push
cmp
inc
pop
neg
or
in
sub
or
lods
ror
mov
orl
pop
shr
jmp
scas
lahf
and
and
mov
iret
repnz
fadds
push
add
int
stos
xor
cwtl
pusha
pop
xor
push
int3
jb
loop
lcall
dec
xchg
or
outsb
es
lock
inc
pusha
mov
andb
lahf
cmp
cmp
mov
sbb
mov
jbe
mov
ljmp
lods
jl
inc
inc
in
out
ja
or
std
repnz
fdiv
test
lods
mov
add
mov
stos
loopne
clc
fcmovne
sbb
or
mov
mov
sbb
cmp
adc
xchg
repnz
enter
jge
adc
or
xchg
dec
ss
and
repnz
aaa
stc
stos
xchg
pop
sub
icebp
lods
cmc
push
add
or
out
mov
cli
sbb
lock
inc
es
pop
stc
movsl
test
pop
cwtl
loopne
jg
add
inc
push
out
jp
int3
dec
jne
in
push
xchg
push
or
adc
dec
repz
adc
icebp
inc
shrb
clc
shlb
adc
or
addr16
ret
pusha
das
cli
mov
daa
dec
push
sub
mov
les
popa
insb
lea
in
push
xor
icebp
ret
mov
or
add
jecxz
inc
dec
cmp
adc
cmp
or
jecxz
shrb
movsl
call
add
push
fs
and
ljmp
and
xor
test
sub
lds
inc
aas
mov
push
adc
fwait
sub
dec
adc
lea
test
mov
adc
dec
sbb
sbb
and
ja
add
adc
mov
cmpsl
mov
popf
dec
ljmp
adc
mov
pop
xchg
jmp
sbb
push
push
jns
ss
jno
pop
inc
xor
int3
adc
sub
popf
pop
shrl
pop
or
pusha
enter
in
inc
ja
inc
popa
jnp
test
push
mov
xor
sahf
cmp
xchg
push
or
into
stc
hlt
jne
mov
push
mov
leave
hlt
cmp
fstp
or
js
and
adc
mov
lret
popa
pop
add
outsb
shl
mov
test
and
dec
fimuls
inc
lods
ficoml
xlat
mov
xor
fs
repz
aaa
add
fcoms
testb
lods
sbb
xchg
arpl
cs
cmp
dec
and
aad
pop
scas
jns
lret
outsb
daa
dec
sbb
repnz
pop
inc
sbb
mov
mov
lds
jb
pushf
or
adc
movb
mov
jecxz
inc
scas
test
push
arpl
push
sub
cmpsl
mov
repz
stos
int3
pop
fwait
inc
jo
fbstp
sbb
push
sbb
dec
ret
daa
inc
sub
dec
daa
mov
jo
xor
cld
push
in
pop
add
jmp
in
sbb
test
call
push
pop
mov
add
push
mov
inc
sbb
pop
repz
mov
fs
xlat
xchg
cmp
shrb
inc
adcb
adc
and
pop
pop
js
mov
mov
in
and
lds
or
mov
imul
xor
push
shr
jmp
ljmp
mov
in
loope
sbb
xlat
pop
pop
mov
pushf
outsl
loopne
sub
mov
and
out
in
or
or
insl
jb
push
cmp
mov
fmull
test
add
xchg
loopne
or
jb
dec
jno
mov
imul
mov
xor
adc
repnz
movsb
sub
hlt
jmp
add
and
iret
xlat
inc
mov
mov
or
lods
and
mov
shlb
mov
pushf
push
leave
and
cmc
ror
imul
repz
imul
mov
pop
sahf
out
fcomps
addr16
nop
pop
into
pop
pop
mov
and
sub
fdivr
add
mov
jmp
push
xchg
sub
xchg
adc
xor
clc
cmpsl
add
loopne
std
dec
cmp
push
mov
xchg
outsb
cmp
pop
cli
inc
inc
push
pop
sbb
inc
add
xchg
test
jmp
mov
out
sar
or
hlt
das
dec
push
iret
iret
imul
dec
hlt
stos
pop
xor
dec
cmc
jne
fildll
insl
or
adc
dec
ljmp
cmp
sti
mov
xor
mov
dec
mov
cs
jbe
mov
mov
hlt
mov
cmp
mov
adc
add
push
shl
mov
fistl
dec
mov
mov
push
xchg
pop
sbb
or
or
jnp
inc
lret
mov
gs
out
mov
fstpt
pop
hlt
cli
loope
inc
dec
sbb
jmp
dec
mov
lock
icebp
inc
sub
pop
pop
mov
mov
popf
xor
xchg
or
pop
aas
into
push
inc
int3
xchg
mov
pop
leave
jg
xchg
repnz
dec
adcb
lcall
notl
je
int3
mov
xchg
cmpl
cmp
push
sbb
xchg
mov
test
imul
hlt
test
mov
push
scas
push
ja
mov
mov
aad
inc
adc
jecxz
adc
xchg
movsb
sbb
inc
std
mov
and
std
mov
pop
inc
xchg
sti
je
cmp
mov
test
aam
je
jge
ja
and
push
ret
mov
daa
dec
dec
je
fldcw
xchg
mov
push
test
addl
test
or
push
fwait
inc
push
ds
adc
mov
lds
adc
xor
stos
and
dec
pop
jmp
adc
fst
loopnew
xchg
daa
dec
movsb
in
arpl
loope
xchg
sbb
fstpl
dec
in
daa
loop
mov
in
pop
adc
jecxz
push
inc
push
cmp
jl
xchg
lock
cwtl
mov
jns
lcall
fisubs
in
and
out
jns
aad
add
cld
adc
ret
inc
sbb
add
sbb
cmpsl
cltd
add
call
xchg
jecxz
mov
xor
out
jge
jg
sahf
lock
sarl
loop
jmp
in
mov
ret
loope
xor
fstl
hlt
inc
into
pop
fistpl
sub
mov
sub
pushf
mov
lods
popl
pop
cli
inc
adc
movl
mov
cmp
xor
sub
pop
ss
aam
or
jmp
push
int3
mov
cmpsb
cmp
push
jecxz
and
stos
out
sbb
cmc
icebp
mov
repnz
push
repnz
ja
lret
mov
and
push
gs
stos
push
aam
and
cmp
lea
mov
enter
fucomip
jae
push
fs
pop
push
xchg
in
cs
inc
or
sarl
inc
xchg
fwait
sub
in
aaa
cmp
popf
xchg
xchg
pusha
movsl
vandps
xchg
sub
pop
sbb
fidivrl
sti
add
jmp
mov
ret
rolb
add
in
cmpsb
jp
rcl
ret
arpl
imul
inc
imulb
js
test
cs
add
pop
lock
sbb
jo
mov
jmp
dec
push
shll
and
stos
insl
outsl
inc
add
push
and
loop
or
add
sbb
xchg
cltd
nop
ret
sub
in
cmp
lcall
leave
mov
push
mov
pop
nop
loopne
sbb
sub
inc
outsl
sbb
cmp
and
mov
lahf
lock
cmp
movsl
scas
adc
shl
xor
iret
mov
adc
or
push
cmc
imul
cmpsl
inc
scas
dec
jo
aas
je
jl
addr16
outsb
test
add
imul
incb
pop
out
adc
movsl
clc
call
xchg
push
mov
jmp
mov
jb
jecxz
leave
es
add
xor
cmp
jle
pcmpgtw
mov
and
add
xlat
jne
icebp
mov
pop
adc
push
pushf
jnp
sub
movsl
sbb
jp
movsb
xchg
stos
testb
popf
mov
xor
movb
out
push
icebp
addr16
mov
jp
sub
adc
arpl
adc
or
xchg
test
test
nop
mov
out
push
jne
jge
lods
or
loopne
in
test
cltd
clc
dec
push
int3
lret
sahf
sbb
push
push
ljmp
bound
sbbl
inc
call
pop
inc
divl
mov
arpl
pop
pop
lcall
dec
xor
xchg
fwait
test
mov
pop
mov
call
dec
inc
push
push
jnp
es
xchg
lret
xchg
popa
fyl2x
inc
lock
mov
repnz
mov
lods
std
sub
add
out
and
mov
test
jmp
mov
stos
pop
hlt
shl
inc
aam
dec
es
push
add
mov
jle
ror
cs
popf
daa
stos
ja
rcl
lds
outsl
js
push
cwtl
outsl
enter
repz
enter
xor
and
push
outsl
pop
cmp
push
fwait
cmp
jp
adc
xchg
push
cmpsl
add
push
pusha
aad
jo
jne
xlat
fnstsw
pop
ss
cwtl
push
add
pop
jo
ja
mov
das
xchg
pop
leave
aaa
pop
xor
jge
cmp
in
sub
sub
push
adcl
lock
adc
fists
scas
inc
cmp
cmp
mov
cwtl
cmp
mov
lods
mov
loope
enter
testl
mov
inc
xor
push
test
mov
mov
pop
inc
subb
pop
sub
xor
and
dec
or
mov
sti
cwtl
stos
jecxz
mov
orb
mov
les
aad
bound
jle
fnstenv
push
mov
or
push
out
frstor
or
lods
jae
and
and
sub
jmp
sub
push
add
ret
movsl
mov
and
stos
xchg
out
test
enter
add
in
fwait
xchg
andl
sbb
mov
out
xor
lcall
out
jg
insl
pushf
pop
or
xchg
add
mov
inc
push
loope
in
ret
dec
add
test
jge
xchg
movl
dec
mov
bound
outsb
xor
shlb
and
fisttpl
cmp
out
cmp
inc
loop
hlt
push
xchg
loopne
faddl
pop
inc
dec
in
stos
es
jnp
lods
dec
in
dec
push
les
subl
adc
jno
jno
pop
add
jb
mov
adc
pop
jnp
pop
pop
mov
test
xchg
and
mov
jne
push
jle
int3
outsl
cmc
data16
mov
sub
repnz
pop
cwtl
mov
or
xchg
lcall
mov
mov
sbb
mov
pop
ss
sub
repz
shll
ds
push
icebp
stos
xor
jnp
test
insb
dec
lret
orb
xor
inc
xchg
adc
push
xor
lods
add
xor
lds
or
clc
ds
aas
push
mov
bound
test
repz
jecxz
dec
add
sbb
loope
jns
jg
jmp
xor
or
stos
sbb
cli
xchg
insb
and
fisttps
push
dec
or
mov
pop
xor
std
mov
popa
fsubrs
pop
lods
in
out
mov
fsubrl
repnz
lods
or
pop
das
shr
push
mov
cli
dec
jo
insl
in
mov
stos
les
cmpsb
adc
mov
into
pop
fiadds
aad
in
jmp
xor
cmp
push
es
sub
inc
add
dec
sub
add
mov
xor
push
iret
sahf
lods
fistpl
imulb
in
and
jle
jne
call
adc
and
mov
mov
popf
push
pop
pop
pop
and
scas
jbe
sti
addr16
and
scas
mov
dec
adc
aaa
sarb
push
mov
adc
bound
mov
aad
ja
repnz
outsl
testl
xchg
inc
push
xor
mov
and
push
jb
adc
lret
xor
shlb
pop
cmp
ja
shr
lahf
fisttpll
js
push
gs
lds
inc
scas
call
sbb
stc
dec
pop
add
jg
mov
add
dec
fstp
cmp
mov
stc
add
pop
or
cmp
fldt
sub
es
iret
fldl
jns
mov
test
jb
outsl
cs
mov
push
push
mov
jmp
in
insl
test
dec
jecxz
mov
enter
sbb
sub
and
cs
jle
sbb
scas
loopne
pop
std
mov
fucom
xor
arpl
push
cmp
ds
adc
xor
or
dec
pop
xchg
and
dec
or
dec
cmp
mov
inc
jne
cmp
notrack
lods
and
add
cmc
fiadds
adc
push
xor
cmp
ror
sbb
sub
jbe
sti
outsl
jl
and
push
mov
shrl
mov
cmp
push
ret
fs
imul
shl
fldt
lret
cmp
sbb
jo
int3
add
cmp
lods
out
adc
mov
in
test
out
xor
pop
call
repnz
int
cmp
xor
push
shrl
fiadds
push
out
js
in
push
sbb
outsl
sbb
cmc
or
ljmp
popf
pop
mov
dec
jno
xor
les
inc
mov
es
mov
dec
sbb
out
ja
inc
sbb
and
push
xchg
dec
push
push
inc
outsl
loope
into
cmpsb
out
mov
push
enter
fnstenv
call
or
das
pop
lcall
xor
mov
sti
imul
iret
push
ret
jbe
or
push
pusha
push
push
inc
pop
js
jp
inc
shrl
leave
pop
or
adc
adc
and
fwait
xchg
fiaddl
out
ja
mov
jbe
xchg
mov
fmulp
jbe
inc
pop
push
pushf
xlat
mov
sub
test
jecxz
mov
scas
enter
pop
xchg
dec
orl
fwait
mov
insb
into
sbb
cwtl
pop
rcll
and
jns
add
aaa
pop
adc
mov
push
ss
pushl
jmp
pop
imul
mov
in
mov
pop
sahf
rclb
jl
dec
xor
pop
mov
jecxz
insb
mov
ss
jnp
lcall
cmpsl
add
aam
push
and
jbe
rclb
cs
sbbl
jnp
aas
test
pop
add
repnz
in
and
mov
mov
and
push
sub
pop
popa
addb
pop
jg
inc
into
mov
push
push
or
es
in
ja
nop
jecxz
cmpsl
movsl
jg
pop
mov
mov
fucomi
push
insl
movsw
pop
add
movsb
lret
movsl
jb
jb
sub
movsb
mov
in
xlat
mov
push
inc
jb
inc
enter
push
out
push
sub
lods
iret
cmc
dec
pusha
sti
xchg
loope
lock
lods
sahf
xchg
scas
mov
jmp
adc
daa
push
ret
mov
out
mov
fdiv
rol
les
dec
xor
repnz
ds
bswap
push
mov
jbe
xchg
in
shlb
push
gs
xor
loop
movsb
dec
loope
mov
sbb
pop
pop
xchg
xor
mov
jbe
dec
nop
and
dec
shll
popa
hlt
push
movsb
repz
mov
pop
fldl
leave
push
and
mov
jns
cmp
fdivrp
iret
cmp
sbb
pusha
sub
les
sub
xchg
movsb
lahf
mov
pushf
daa
stos
stc
dec
sub
lret
repnz
es
js
fisttpl
lds
xchg
test
ja
push
fidivl
stc
sub
fsubrl
jp
add
cmp
jbe
push
adc
into
repz
enter
sbb
gs
daa
shlb
push
adcb
lea
je
pop
sbb
add
inc
rclb
das
test
or
test
inc
mull
adc
push
mov
sar
nop
cli
adc
shlb
fldt
mov
mov
adc
or
push
repz
adc
outsb
add
cmpsb
outsb
ljmp
dec
push
xor
or
nop
and
xlat
cmpsl
cwtl
insb
push
aaa
cld
movl
push
pop
jg
mov
es
push
xchg
ret
outsb
pop
xchg
mov
cmp
jne
sub
jno
rcr
cmpsb
sbb
adc
xor
pop
inc
mov
push
imul
cmp
out
stos
es
stc
lea
enter
bound
xorl
out
mov
and
sub
mov
decl
dec
jecxz
jg
insl
nop
fimuls
dec
xchg
insb
test
pop
mov
addl
mov
fs
xor
xor
out
xchg
arpl
movsb
mov
cmp
sub
mov
pop
jbe
or
cmp
movsb
clc
insb
in
imul
test
call
sub
lret
cmp
shlb
sahf
add
push
dec
bound
inc
fadds
test
or
outsb
mov
xchg
out
xor
sub
out
test
or
push
dec
mov
sbbb
xchg
cwtl
or
push
out
lock
adc
push
arpl
in
mov
lea
and
sti
or
pop
cwtl
je
das
shlb
dec
xor
shr
cmp
jne
aas
idivb
mov
mov
dec
mov
je
es
push
dec
dec
loope
stc
lds
lds
dec
pop
wbinvd
or
jecxz
adc
jp,pn
xor
xchg
in
pop
pop
mov
gs
jae
sahf
mov
mov
pop
sbb
jbe
jno
pushf
fucomi
pop
in
outsl
lahf
dec
cmc
or
inc
sub
movsl
jmp
shrl
pushl
push
dec
les
call
pop
adc
lds
add
jnp
inc
ds
sbb
mov
xor
push
xchg
cmp
aaa
fistpl
js
jno
lods
jne
jnp
popa
fs
or
mov
push
and
ss
jnp
sub
mov
push
pop
lods
jl
insl
out
xchg
add
mov
adc
ret
imul
add
xor
shrl
jp
xchg
pop
rorl
imul
adc
aad
adc
or
stc
push
imul
pop
imul
ds
sbb
jle
fwait
cmp
push
mov
out
int3
jnp
ljmp
enter
stos
fisubl
mov
xchg
push
bnd
cmp
repnz
pop
aaa
sub
pop
sbbl
mov
in
mov
iret
mov
aaa
add
sarb
mov
rolb
add
mov
fxch
xchg
dec
ja
cltd
in
xchg
sbb
xchg
xchg
fisttpll
lahf
inc
xor
outsl
jns
in
stc
push
jae
cwtl
jno
inc
lods
and
fwait
sbb
repnz
scas
leave
call
mov
dec
clc
jmp
movsb
add
mov
or
repnz
fwait
movsl
imul
pop
in
ret
ret
rcl
dec
test
in
adc
mov
pusha
rclb
sbb
mov
sub
jp
out
rcr
mov
aam
mov
aad
sub
popf
in
xor
mov
imulb
mov
loop
aad
pushf
xchg
lcall
xchg
jae
je
sub
dec
push
push
mov
xchg
fcomps
inc
mov
jae
xchg
add
and
repnz
dec
sbb
inc
mov
push
xlat
inc
sbb
dec
movsl
or
pop
rol
sub
jo
cmp
and
fidivrs
or
adc
sbb
inc
fstpl
cwtl
ja
leave
jge
ret
mov
add
mov
daa
sahf
or
testb
mov
cmpsl
stos
and
aad
outsl
adc
jbe
mov
adc
adc
adc
clc
mov
aam
cli
cmp
lea
scas
fsubrl
ss
test
int
fimull
jb
xor
mov
int
cmpsb
lret
jbe
icebp
or
jnp
pop
cmpsl
into
adc
and
push
dec
push
add
fwait
lods
push
add
sahf
add
add
push
inc
sbb
add
push
lahf
es
cmp
test
adc
mov
xor
jmp
mov
and
mov
cld
ljmp
push
call
cmp
jl
test
lods
cltd
xor
mov
jb
pop
testl
lods
repnz
mov
and
push
popa
dec
mov
aaa
das
inc
pushf
fwait
mov
pop
fbstp
filds
jg
repnz
jae
scas
mull
mov
jge
sahf
cmc
push
imul
cs
inc
xor
adc
mov
test
movsl
add
push
push
adc
loop
decb
fnsave
insl
shl
pusha
repnz
ljmp
sahf
jbe
imul
imul
xchg
loopne
dec
fcoml
pop
mov
jo
in
pop
add
and
jl
push
ljmp
jbe
jno
leave
mov
rcll
adc
adc
pop
les
mov
lods
fdivrs
imul
inc
push
ffree
out
fmul
stos
push
mov
aam
xor
out
lods
mov
scas
sub
out
sub
mov
outsl
outsl
dec
sbb
jge
sbb
cs
sti
adc
mulb
sbb
loop
add
movsl
cltd
push
cwtl
js
ds
mov
inc
mov
push
aad
and
sbbl
cmp
mov
cmp
add
mov
int3
jno
pop
cwtl
mov
inc
popa
scas
push
xchg
mov
test
nop
mov
jl
inc
push
sti
xlat
inc
xor
mov
out
mov
or
lock
or
pop
inc
pop
push
cmp
inc
sti
pop
xor
add
inc
pop
cltd
mov
xor
mov
das
pop
fst
lret
inc
lret
jno
in
mov
loopne
xor
jb
lcall
inc
clc
daa
sbb
jns
or
fwait
sub
popa
call
cmp
inc
imul
popa
aas
mov
lret
xor
out
popa
repnz
cmp
jmp
cmc
xchg
scas
mov
gs
and
int3
pop
xchg
test
jp
je
adc
in
jno
ds
dec
das
jo
pop
mov
out
repnz
movsb
not
lods
push
mov
movsl
mov
jp
adc
jae
mov
adc
mov
test
fwait
dec
icebp
mov
jge
inc
add
xchg
cmpsb
lods
in
sbb
out
fisttpl
ja
fsubl
jbe
cmpsl
std
xlat
ret
pop
pushf
push
ret
lahf
adc
cs
jecxz
je
mov
xor
cmp
cmp
push
jb
int
cmp
fildll
push
adc
and
shl
mov
mov
int
movsb
movsb
xor
shll
psrad
jb
mov
sub
sub
pop
js
push
cmpb
loopne
mov
pop
fcomps
jae
js
fdivr
xchg
inc
mov
fcoml
xchg
inc
repz
iret
xchg
cmpb
xor
dec
in
xchg
sbb
out
push
in
fdivl
adc
add
sbb
ljmp
cwtl
pushf
movsl
adc
add
dec
gs
sbb
cltd
push
sbb
pop
mov
das
enter
enter
push
sub
xchg
loope
dec
push
stos
std
fisubl
sbb
sti
dec
or
dec
fwait
les
bound
jmp
int
adc
push
je
nop
in
xchg
out
test
cmp
andl
les
or
mov
loopne
popf
mov
jmp
fnstenv
xchg
inc
inc
dec
jnp
add
sarb
das
fwait
cmpsl
arpl
fdivrl
and
repnz
dec
cmp
and
jl
xlat
xchg
mov
push
sub
adcl
stos
mov
mov
sbb
loope
addr16
mull
lret
test
out
dec
fwait
jmp
sbb
mov
out
lahf
adc
movsb
or
push
loope
rol
add
shrb
dec
cmpsw
xchg
stos
pop
ja
clc
xchg
out
push
mov
mov
dec
sbb
dec
sbb
jb
ss
sub
mov
add
nop
pop
stos
mov
subb
xchg
insb
inc
mov
sbbb
xchg
ret
jae
pop
mov
insb
stos
sbb
push
xchg
jge
cli
daa
imul
mov
fldenv
insl
test
or
inc
rcrl
cmp
mov
test
aaa
fldt
rorb
inc
stos
mov
push
jmp
mov
fisubrl
das
pop
dec
xchg
mov
ljmp
add
filds
add
jle
leave
adc
cmp
mov
outsl
cmp
mov
cmpsl
lcall
sub
sbb
nop
imul
popl
cmp
push
mov
clc
pop
out
and
rcrb
mov
out
jo
xor
cmp
imul
and
or
sahf
jg
push
dec
andb
inc
sub
sbb
mov
mov
mov
popl
sbb
or
xchg
repz
or
lea
daa
test
xchg
lods
iret
cli
call
push
popf
fsubr
sub
shrb
popf
call
sahf
gs
lds
sub
hlt
pop
add
push
pop
inc
aas
adc
scas
pop
jbe
je
adc
aas
xchg
rcll
stos
fs
mov
jno
das
iret
inc
fs
mull
cli
ret
outsl
clc
jge
shlb
jo
icebp
bound
lds
fistl
jl
in
std
lea
lods
jmp
xor
fs
pop
jne
negl
lcall
mov
sub
popa
fisttpll
mov
dec
js
cli
outsb
and
call
rcr
lock
stos
rol
xor
xchg
push
insb
ret
mov
or
mov
ret
enter
daa
pop
lods
or
int
push
mov
mov
out
movl
sub
shll
aas
and
cmc
and
adc
jg
push
jg
jecxz
push
cmp
push
outsb
xchg
iret
pushf
inc
sub
adc
or
popa
in
iret
cmpsb
push
ror
popa
pop
outsl
out
mov
lds
je
test
push
popa
es
mov
scas
test
cmp
dec
sbb
inc
sbb
scas
mov
fs
mov
sub
mov
stos
add
rclb
jae
imul
jno
frstpm(287
scas
jmp
mov
nop
cmp
out
push
testl
dec
mov
rclb
js
in
fwait
xor
adc
xor
testb
mov
test
pop
imul
imul
sub
lock
cld
pop
sub
jge
stos
mov
jmp
xchg
jno
icebp
xor
jp
dec
fmuls
pop
cmp
addb
lcall
and
add
ficoms
or
cmc
sbb
pop
mov
rorl
repz
pop
jnp
out
jnp
mov
sub
adc
xor
sarl
test
dec
mov
jb
test
xlat
or
fcoms
shlb
push
xchg
into
or
ret
shrb
stos
cmp
aaa
call
test
scas
xchg
add
pop
out
in
ret
jnp
push
sarb
push
push
in
fbld
mov
xor
cli
and
test
pop
sub
loopne
data16
js
mov
loopne
aaa
outsl
loop
push
neg
lahf
pushf
ss
jge
xor
xchg
fnstenv
sbb
icebp
stos
xchg
testb
or
xor
cld
sysret
push
lock
test
add
sub
icebp
mov
pop
cld
jl
stos
inc
push
mov
aad
adc
dec
sbb
pop
add
and
jecxz
jnp
mov
cltd
ret
fstpl
imul
inc
dec
iret
cmp
fdivr
dec
ror
xlat
dec
add
xor
call
push
push
dec
mov
push
stos
ss
out
leave
adc
push
cmc
std
repnz
ucomiss
dec
mov
fcompl
or
pop
lods
pop
nop
test
in
mov
push
aas
gs
scas
loopw
repnz
es
xchg
loop
stc
mov
add
and
outsl
mov
push
hlt
pop
insl
adc
les
sub
xchg
cmc
addr16
xor
fisubl
cmc
popf
nopl
in
addr16
mov
movsb
jnp
mov
add
nop
pop
fwait
scas
es
faddl
mov
mov
xor
and
push
xor
lret
sub
xlat
out
int3
imul
dec
mov
jge
dec
ds
mov
mov
mov
adc
mov
cs
rcll
es
lds
gs
aaa
pop
mov
dec
shrb
pushf
xchg
fsts
adc
imul
popf
pop
jp
xchg
adc
sbb
pop
sbb
xlat
xchg
pop
jmp
inc
jge
xchg
xor
xchg
mov
xchg
clc
pop
jp
lock
aas
in
scas
testb
adcl
cmp
test
std
ret
mov
mov
js
jnp
mov
mov
out
jb
fnstenv
loope
jmp
push
pop
fildll
sbb
outsb
sub
sub
xchg
and
pop
popf
add
leave
imul
xchg
cmp
ret
sarl
cmp
arpl
sti
add
inc
hlt
jns
dec
push
add
pop
cltd
add
and
and
loope
inc
cmpsb
xchg
rcrb
fcoml
mov
nop
sub
cmpsl
fwait
jge
fs
xor
scas
popa
pop
cmp
fistps
aad
in
rcrl
mov
cmp
ja
cmp
pop
xchg
mov
inc
mov
or
fistpl
dec
les
mov
cmp
push
pop
cmp
add
or
aas
lods
lds
cmp
ficoml
sbbl
jp
xchg
push
ds
lds
dec
inc
sbb
pop
push
pop
mov
cmpsb
out
pushf
xor
mov
outsb
aas
jmp
cmpsb
mov
jo
push
fistps
pop
pop
xchg
rorl
js
mov
inc
mov
mov
add
sarl
xor
fs
pop
sub
sahf
pop
xchg
ficoml
popl
xor
cmpsb
cmp
stc
lds
sbb
inc
subb
push
lcall
out
jl
pop
nop
sbb
push
cld
sbb
sub
notb
push
add
outsb
movsl
add
dec
add
cmp
jp
mov
mov
push
push
or
and
pop
xor
xchg
imul
push
test
and
repz
xchg
in
inc
inc
xor
ficoml
cmp
bound
sub
test
imul
test
jns
xlat
sahf
mov
cld
cmp
orb
shr
mov
push
test
insb
inc
adc
mov
adc
mov
push
in
shrb
inc
cmp
dec
add
mov
inc
insb
lret
jl
leave
or
in
add
jb
xor
mov
mov
cltd
lret
cmp
xor
sti
cmpb
pop
mov
clc
pop
fst
push
and
xchg
mov
add
adc
inc
xchg
push
into
cmpsb
imul
mov
lods
fs
inc
cs
xor
int
aad
pop
aaa
iret
mov
sbb
inc
sub
and
sbb
dec
es
call
das
pop
movsb
add
xor
ja
rcrb
loopne
in
mov
in
sbb
aam
jmp
add
xor
in
and
pushf
sti
mov
outsl
pop
dec
pop
lds
push
dec
imul
add
std
cmp
pop
jp
mov
inc
imull
ljmp
out
dec
inc
dec
adc
int3
sbb
aas
inc
add
cmp
rcr
ja
aaa
hlt
out
inc
cmp
std
push
add
ja
and
cwtl
cltd
or
xchg
arpl
imul
aas
sub
dec
call
aam
jl
xchg
inc
mov
fsts
push
idivb
out
push
xlat
cltd
pusha
repz
xlat
sahf
mov
push
and
fucomp
imul
cmp
loopne
loop
mov
cltd
inc
lock
xchg
loope
pushf
aaa
mov
sbb
jl
dec
jno
xor
mov
ret
adc
fdiv
in
xchg
mov
sub
pop
aas
into
push
aas
mov
fnsave
pop
xchg
and
cs
and
sub
xor
and
lods
lock
repz
push
lcall
out
dec
in
cmpsl
imul
sbb
mov
arpl
cli
inc
aaa
sub
lock
sbb
inc
ret
xchg
es
jl
aad
push
jb
add
add
mov
out
repz
cwtl
movsb
add
inc
call
add
test
cli
xchg
mov
stc
pop
jb
subb
je
adc
xchg
xchg
adc
in
xchg
xchg
pop
clc
shrb
push
imul
cwtl
dec
data16
add
fstl
ficoms
in
push
dec
int3
popf
mov
out
mov
repz
bound
xchg
pop
pop
sub
push
sti
jae
nop
pop
mov
cmpb
fstl
ja
cmp
ret
popf
mov
outsl
adc
pop
lods
jno
xchg
mov
pop
lods
mov
pop
cmp
jle
fcoml
sub
loopne
pop
add
int
outsl
ret
daa
repnz
adc
jb
and
das
xchg
and
movsb
lcall
pushf
fs
pop
lock
fld
out
dec
sbb
std
hlt
fucomp
pushw
je
jnp
xchg
sbb
insb
movsl
inc
adc
cmc
cmp
arpl
mov
mov
mov
xor
shll
xor
std
mov
and
addr16
imul
mov
inc
xchg
lds
cmp
sbb
and
push
fcompl
imul
sti
scas
jns
xor
push
imul
pop
mov
mov
dec
pop
adc
mov
add
cmp
xchg
inc
movl
leave
dec
jae
cmp
movsb
inc
pushf
add
shufps
or
popa
dec
push
pop
mov
push
and
inc
std
pop
jmp
in
xorl
repz
mov
scas
push
cmp
nop
or
sub
dec
jmp
cld
mov
js
lods
arpl
dec
nop
xchg
inc
mov
cwtl
arpl
push
sti
test
mov
mov
inc
and
fs
mov
outsb
adcl
dec
ljmp
aad
jge
pop
xor
mov
push
push
negb
andb
rorl
test
sbb
inc
mov
xchg
ret
dec
push
and
loope
sub
adc
adc
adc
push
pop
mov
xor
aas
adc
shl
or
cwtl
jnp
or
mov
fmuls
mov
inc
inc
fcompl
xor
fwait
cmp
pop
add
lret
xchg
xchg
add
pusha
clc
cmpsl
sbb
notl
inc
pop
dec
cmp
add
fcomps
inc
jmp
push
mov
lock
in
mov
sub
lcall
das
movsl
pop
mov
test
psraw
add
and
xor
inc
adc
push
test
out
cmp
std
fistpll
ret
cmpsl
mov
lods
add
xchg
in
jmp
pop
pop
movsb
jp
js
in
out
xor
shll
test
push
in
aad
adc
loop
stc
shrb
into
cmp
add
lcall
in
sbb
xchg
mov
lods
jb
jno
inc
add
arpl
jnp
sbb
sbb
test
leave
in
scas
and
icebp
ja
pop
jne
cmp
imul
jmp
inc
inc
jnp
push
subl
dec
add
pop
andb
loope
cmpsb
jmp
sub
pop
cmp
pop
out
das
mov
sub
adc
cmovne
sahf
mov
and
adc
pop
mov
and
jl
lods
aam
mov
stos
sbb
dec
cmp
lds
cmp
pusha
pop
out
ror
in
aas
mov
push
pop
jp
jl
iret
jo
jecxz
pop
test
inc
mov
enter
jbe
notl
sbbl
movsl
lds
sbb
movl
or
nop
fiadds
out
repz
ret
ret
sti
jmp
aam
dec
icebp
test
adc
jae
les
pop
mov
stc
xchg
fsubs
sbb
xor
lods
sbb
mov
cli
pop
pop
sbb
pop
xchg
bswap
mov
test
pushf
or
mov
leave
cli
enter
push
negb
xor
sub
clc
mov
inc
xchg
push
xchg
in
outsl
notb
lock
div
lds
jae
mov
mov
sbb
mov
test
and
adc
es
xchg
xor
mov
test
jmp
xchg
and
inc
push
aas
leave
clc
push
and
cltd
daa
push
in
les
testb
pop
xor
arpl
mov
sahf
cmp
pop
fsts
mov
addr16
mov
push
add
xlat
jg
lods
int
adc
inc
pop
sbb
push
jmp
and
scas
and
pop
jo
mov
jp
push
out
xchg
push
or
sti
das
mov
lret
jg
jne
adc
out
inc
in
push
leave
fsub
cmp
ret
je
stos
cmp
jg
pop
or
stc
jne
jg
or
dec
mov
addl
pop
gs
aad
dec
jns
sub
mov
daa
or
sbb
mov
or
sub
push
xchg
jns
push
sub
fidivrl
aam
push
icebp
push
addr16
and
dec
inc
mov
lds
jg
pop
fstl
aaa
dec
mov
add
xchg
sarl
stos
inc
out
xchg
lods
mov
and
lock
mov
or
test
sub
fcomps
shl
push
leave
mov
shll
in
mov
shrb
xchg
pop
jne
xchg
lcall
push
pop
add
loopne
bound
rorl
inc
dec
push
cltd
add
jbe
mov
cmpb
mov
adc
data16
xchg
or
idivb
sbb
scas
clc
insl
xchg
xchg
jns
jle
mov
and
out
in
push
pop
ja
jg
mov
addr16
jmp
push
and
jne
xchg
inc
cltd
fldt
loop
movsb
jns
inc
cmp
faddl
mov
mov
aaa
out
sub
ret
lds
aas
push
sub
mov
out
pushf
roll
inc
fistl
and
lods
idivb
mov
rclb
aad
lods
jne
xorb
sbb
arpl
adc
mov
fisttpl
pop
cmp
push
aad
sbb
bound
push
jns
and
and
xchg
dec
and
daa
push
dec
faddl
mov
outsl
mov
rorb
xor
sti
addr16
xchg
sub
fcmovnb
leave
push
cld
mov
loope
cmp
push
dec
mov
popa
cmp
je
dec
adc
clc
loop
mov
int
movsl
and
adc
adc
push
sarl
push
pop
mov
iret
aam
sarl
call
mov
mov
mov
jae
mov
loope
push
mov
cmpsb
sbb
pop
add
movsl
jle
sub
cwtl
sbb
mov
adc
shlb
sub
jmp
xchg
int
adc
gs
inc
push
lods
xchg
dec
jp
jb
dec
sbb
add
jle
or
fucom
xor
loop
pop
pop
lret
push
mov
xchg
outsb
jbe
xchg
je
adc
popf
mov
in
inc
lea
cmp
cltd
cmp
jmp
mov
sti
enter
les
xor
jp
dec
fs
dec
rcll
or
out
jns
dec
dec
test
je
xchg
add
sarl
xor
out
mov
sbb
jmp
movsl
test
bnd
mov
xor
mov
shr
fs
push
push
pop
lcall
shll
mov
cmpsl
dec
jl,pt
js
ds
cli
pusha
lods
mov
pop
sti
test
test
add
sbb
push
sub
adc
jle
or
mov
mov
or
sbb
cmpsb
mov
cmp
fdivr
lds
test
out
lret
lea
jp
push
lcall
adc
lods
dec
mov
cmp
inc
xor
adcb
es
mov
cmpsb
lahf
gs
data16
dec
adcb
cs
mov
lods
fadds
pandn
in
xchg
sbb
xchg
mov
push
std
arpl
jecxz
in
lods
mov
adc
out
addr16
stos
mov
cmp
push
cmc
adc
lock
aam
lock
lds
out
sub
sub
out
xchg
mov
xchg
imul
pop
and
js
cmc
or
jecxz
mov
cs
sub
sbb
out
cmpsl
loop
lods
jne
jmp
pop
pusha
mov
jbe
shlb
push
inc
mov
lcall
in
stos
add
xor
ljmp
mov
xor
jmp
sub
cmp
pop
popf
test
jecxz
out
push
and
xchg
iret
mov
stos
xchg
bound
sbb
pushf
jp
mov
xchg
stos
fnsave
or
jnp
cmp
mov
ss
aas
notb
popa
int3
ss
inc
insb
xor
cmc
adc
mov
inc
mov
or
enter
shll
outsb
mov
popf
sub
ja
push
leave
cld
push
or
xchg
jnp
insl
pop
js
test
ss
movsb
rol
imul
fs
adc
ljmp
lock
inc
mov
test
les
int3
push
or
pop
jo
pop
arpl
dec
inc
sbbb
test
iret
insb
mov
fistpl
xlat
push
fimuls
repz
test
in
xchg
nop
sti
stos
add
mov
inc
shlb
adc
popa
or
andl
and
test
js
and
jnp
push
in
aam
mov
in
xor
cmpsl
sub
and
jbe
or
pushf
jae
jno
cmp
xchg
cli
sub
mov
push
subl
pop
call
sahf
add
mov
pop
and
fmull
mov
popa
stc
inc
loopne
and
pop
outsb
or
xor
mov
cmp
decb
subb
stc
dec
ljmp
push
dec
aam
mov
dec
cmp
clc
aas
cmp
sbb
je
sub
aaa
ret
lcall
imul
jl
shrw
inc
cmp
jae
por
mov
ror
pop
push
lods
dec
rcll
mov
stos
or
xchg
push
repnz
xor
pop
daa
adc
mov
sbb
jmp
orb
ret
xor
jg
mov
nop
ja
push
mov
in
jbe
sub
lahf
mov
lret
fdivs
and
add
or
ja
lds
push
sbb
mov
adc
xchg
jbe
or
cmp
ljmp
ficomps
xchg
xlat
jl
or
push
pop
inc
daa
mov
testl
jno
mov
lret
andb
mov
insl
int3
mov
add
outsl
or
jge
sbb
mov
loop
jbe
or
pop
push
push
push
mov
test
cmc
mov
dec
in
add
xor
test
mov
je
push
jmp
out
das
sub
dec
scas
lret
enter
xor
fndisi(8087
pop
and
sti
lock
mov
test
imulb
mov
pop
jge
add
or
rcrl
lods
xor
test
loope
les
sahf
es
xchg
cmc
sub
add
mov
sub
ljmp
in
or
out
push
das
mov
push
mov
lea
mov
pushw
cltd
xchg
insl
out
mov
inc
add
pop
xor
mov
push
in
aas
aad
jns
fisubrs
jbe
inc
inc
adc
add
push
xor
jns
jmp
pop
js
lcall
gs
testl
xchg
jo
jne
jae
xchg
dec
popf
loopne
inc
add
int
mov
jb
movsl
dec
and
adc
std
cld
fwait
inc
mov
pop
sub
lods
jg
sbb
or
xor
sub
fsubp
xchg
xchg
out
popf
divb
cmp
push
aam
jbe
jno
fsubrl
dec
daa
dec
pop
inc
cmp
and
cwtl
imul
xchg
inc
cli
adc
call
fsubrl
test
movsl
mov
lea
into
pushf
aaa
push
push
inc
jl
notb
shrl
movsb
ret
jae
loope
dec
loopne
xor
into
sbbl
mov
pop
pop
adc
or
fisubrs
and
mov
inc
out
pop
add
mull
ds
es
add
xor
mov
sbb
xchg
jae
push
push
cmpsl
push
xor
insl
imulb
outsl
dec
sub
mov
inc
xor
fmul
out
xchg
enter
or
fcoml
inc
ret
mov
stos
in
lahf
fneni(8087
push
es
jecxz
mov
lcall
imul
fwait
iret
scas
dec
mov
lods
imul
mulb
inc
sti
mov
sbb
jmp
mov
enter
and
addl
imul
js
adc
xor
rep
enter
jl
push
mov
mov
into
addb
ret
jno
ljmp
dec
ja
jg
das
loop
int3
jne
cmp
test
xor
xor
push
add
push
aaa
inc
pop
cwtl
dec
stos
sbb
loope,pn
dec
cmp
mov
inc
lds
xchg
addr16
or
lods
mov
cwtl
mov
xor
add
push
rclb
push
lar
ficompl
inc
es
sbb
add
pop
adcl
subb
movsl
push
xor
and
cmpb
pusha
in
jecxz
mov
jle
and
lea
fs
lahf
fsubl
neg
or
in
lds
fidivs
cmp
fsubr
or
xor
mov
hlt
loop
mov
add
mov
into
lods
mov
or
inc
mov
aas
push
and
mov
xchg
add
pop
dec
test
stc
dec
or
loope
outsl
cwtl
or
repnz
lret
in
mov
pop
push
shl
jnp
and
sbb
in
pop
js
adc
and
roll
lods
cmpsb
stos
cmpsb
jmp
mov
mov
or
mov
cmp
out
fmull
dec
push
adc
pushf
sub
xchg
push
dec
jecxz
inc
vpmaddwd
jno
movsb
movsb
loope
mov
test
push
xchg
jecxz
xchg
mov
fmul
cwtl
dec
or
out
xchg
jle
into
cwtl
nop
sti
cmc
adc
lea
scas
adc
adc
lods
mov
pop
push
xor
scas
dec
add
lcall
aad
stc
inc
pop
hlt
or
dec
xchg
jbe
sbb
mov
test
cmp
into
movsb
xchg
jg
mov
sub
fwait
inc
adc
jno
insb
dec
rcll
push
mov
loop
xchg
and
movsb
js
std
adc
mov
shrb
stos
mov
in
aas
jo
insl
xlat
outsb
sbb
daa
xchg
call
inc
jne
lock
bound
lahf
insb
xor
jecxz
or
out
fwait
mov
mov
jle
leave
out
lods
decl
xor
xchg
xchg
rorb
inc
shl
mov
arpl
gs
popf
xchg
cltd
dec
imulb
push
sbb
push
jbe
imul
sbb
iret
fistpl
aas
mov
sub
mov
mov
lods
hlt
cmpl
mov
push
aad
push
adc
xor
push
xchg
pop
int3
and
lcall
out
daa
test
outsb
idiv
mov
cltd
mov
dec
popl
xchg
xor
xor
lds
lcall
mov
mov
pop
xor
and
insl
push
test
mov
les
outsb
negb
sahf
outsl
fiadds
movaps
xor
xor
insl
cs
dec
xor
call
pop
popf
xor
arpl
cmpsb
test
notl
pop
jmp
add
and
jle
popa
fldl
pop
popf
shll
pop
jae
sub
xchg
lds
xchg
or
subb
js
push
add
add
stos
xor
sbb
lea
jbe
jg
decl
stos
inc
into
mov
sbb
lea
push
pop
or
test
jge
dec
cmp
aas
mull
xchg
sbb
cmp
in
inc
sub
movsb
and
jno
mov
js
out
lods
or
cmc
fwait
xchg
adc
xlat
push
mov
mov
xchg
fisttpl
repz
jno
lea
addr16
cmpsb
stos
test
nop
and
mov
testl
cmp
mov
je
iret
mov
mov
pop
push
popf
sti
push
mov
loopne
into
sub
mov
mov
sbb
cmp
test
mov
fwait
cltd
and
es
push
add
push
push
add
or
mov
mov
push
push
or
inc
pop
lea
rcl
cmp
and
aam
aad
mov
add
and
mov
dec
mov
test
andb
lret
sbbl
aas
pusha
push
and
pop
push
push
fwait
scas
sbb
inc
ret
gs
sbb
xchg
ret
insl
mov
sarb
pop
jmp
or
sub
mov
mov
gs
aam
push
lods
lcall
and
test
jae
push
std
sbb
insb
jle
lret
cltd
dec
adc
dec
fwait
push
repz
iret
bound
nop
hlt
xchg
xchg
jmp
xchg
stos
push
xchg
xor
xchg
dec
hlt
xlat
aad
movsb
les
dec
mov
add
mov
sub
ret
imul
mov
dec
stos
sub
fmulp
pop
js
enter
xor
rol
shll
pop
mov
lret
pushl
or
stos
or
mov
aas
jmp
js
mov
sbb
outsl
ret
mov
jmp
ds
jp
mov
lods
clc
stos
xor
in
jbe
sbb
idiv
addb
ror
call
shl
adc
jecxz
mov
dec
jp
push
pop
pop
scas
and
mov
pop
add
mov
cltd
stos
mov
dec
dec
cmpsb
cld
dec
scas
stc
dec
inc
call
mov
mov
jecxz
adc
inc
repz
or
mov
cs
mov
rorl
outsl
aad
xchg
dec
and
orl
xchg
or
iret
mov
fidivrs
outsl
push
fdiv
push
inc
lea
mov
cmp
rsm
jg
jb
mov
mov
adc
out
repz
mov
and
add
rcl
shll
out
push
insb
jbe
out
stos
outsb
fildl
mov
cmp
shrl
jge
mov
scas
jl
bound
inc
mov
ja
jns
or
fmul
xchg
push
lea
push
daa
sbbl
mov
sti
in
inc
sub
dec
out
je
cmp
or
in
in
out
fwait
pop
outsl
xor
std
mov
out
cmc
nop
push
scas
dec
lret
mov
fstpl
sbb
mov
loop
call
hlt
lret
xchg
jmp
fs
or
or
adc
sub
and
lret
shlb
loope
mov
mov
cmp
inc
arpl
jmp
jae
lea
adc
jbe
in
adc
sbb
xchg
and
ljmp
lcall
xor
jo
fmul
sbb
cld
cmp
xor
fdivr
mov
inc
pop
jge
out
mov
pop
adc
cmpsb
pop
mov
pusha
or
jecxz
jae
push
or
sahf
es
and
inc
xor
pop
or
lret
pop
sarl
or
and
imul
push
dec
cmpsb
iret
sub
adc
sahf
sub
or
bnd
cmpb
out
xor
fcompl
sub
test
mov
pop
enter
mov
push
movsb
movsl
ret
sbb
pushf
std
ds
adc
jae
pop
add
inc
mov
jge
adc
cmc
add
das
push
mov
inc
test
imul
popf
in
sbbl
popf
pop
sbb
outsb
cwtl
jnp
dec
jo
mov
bound
out
xor
je
push
sub
or
inc
inc
push
into
inc
sbb
lods
jns
cmpsl
cmp
enter
das
inc
jecxz
jecxz
mov
pushf
add
sbb
pop
dec
mov
call
cmp
pop
and
mov
cmc
cwtl
pop
xor
mov
sarb
inc
xor
add
bound
pop
and
add
mov
fadds
mov
int3
out
mov
sar
bound
scas
pushf
mov
and
push
ljmp
dec
sub
repnz
mov
xchg
call
add
lahf
outsl
sub
mov
cmp
adc
les
lcall
jno
jl
jp
addr16
divb
jl
jl
xchg
xor
add
outsb
jnp
jle,pn
or
js
imul
lds
jb
jmp
cltd
pusha
inc
sbb
movsb
in
cmp
xchg
cmp
arpl
sub
pop
testl
or
sub
pop
sbb
fstpl
cs
stos
icebp
sub
shl
xchg
jge
mov
fiaddl
sbb
clc
push
inc
imul
mov
in
push
inc
nop
out
jo
jl
in
push
daa
orb
pop
mov
outsl
daa
stc
fbld
dec
push
or
mov
movsb
lret
aas
hlt
and
dec
lea
or
lret
clc
sti
repnz
out
and
mov
flds
dec
int3
dec
inc
pop
popl
sbb
push
cmp
dec
jmp
mov
cmp
ja
add
mov
or
out
ss
test
cmc
push
pop
clc
adc
sub
shl
gs
lret
dec
adc
aaa
mov
popf
jno
cmpsb
add
sub
push
jp
dec
or
add
or
mov
or
jns
sub
in
mov
bound
icebp
or
popa
stos
dec
mov
xlat
and
in
inc
xchg
adc
sub
sub
testl
icebp
cltd
xor
sahf
aas
push
mov
cltd
mov
push
inc
sti
int
push
dec
push
cmpsl
cmpb
stos
sbb
jge
mov
cmp
lahf
xchg
ds
stc
sti
and
mov
mov
stc
pop
xchg
mov
push
jno
out
out
aaa
push
pop
pop
jne
and
jmp
hlt
repz
inc
adc
fcomps
jle
test
in
js
ds
cmp
insl
lcall
imul
mov
mov
arpl
andb
push
lock
and
mov
test
sub
mov
mov
xchg
je
or
cli
jbe
xlat
or
dec
pushf
rcll
inc
ljmp
jne
lods
pop
push
add
cmpsb
and
push
fwait
jne
mulb
icebp
xchg
jae
imul
mov
xor
mov
out
aaa
call
andl
mov
or
xor
gs
lds
test
sbb
imul
mov
sahf
das
push
lock
mov
adc
dec
decl
pop
mov
mov
iret
or
sbb
ret
ret
cltd
scas
push
dec
in
ret
repnz
lods
dec
push
xor
cmpsl
or
jp
mov
cld
jb
outsl
outsl
mov
jae
pop
add
sbb
test
xchg
shlb
shll
mov
mov
add
je
sub
bswap
hlt
lcall
sahf
add
or
mov
xorl
ljmp
xchg
xchg
push
xchg
lods
fwait
aaa
push
cmp
in
push
repz
ret
inc
push
pop
mov
or
inc
inc
ds
sbb
cltd
mov
xor
rcrl
push
and
fists
fdivl
dec
sbb
rorb
aam
repz
mov
mov
imul
rorb
ss
mov
xchg
sub
sub
sbb
cmp
fcoml
xchg
dec
jg
xor
data16
not
mov
testb
jl
ja
adc
les
and
sbb
mov
inc
dec
and
xchg
pusha
adc
lahf
daa
and
addr16
xchg
xchg
sbb
pop
aad
sub
test
dec
mov
sar
lcall
cmpl
subb
ja
adc
xchg
add
aad
add
cld
mov
adc
cmp
xor
mov
shl
in
push
lea
lods
stos
add
mov
mov
mov
mov
leave
cmp
movsb
stos
sbb
sub
rolb
loope
mov
fistps
xchg
xor
push
inc
jae
xchg
mov
or
enter
or
sub
dec
inc
aad
and
lods
loopne
std
fldl
dec
leave
push
add
pop
jle
lret
je
rcrl
jmp
inc
sub
out
xor
jle
loopne
add
mov
mov
jp
scas
push
int3
jno
mov
jge
push
xchg
or
mov
or
scas
imul
mov
outsb
add
push
sahf
stos
ds
das
jno
and
add
adc
jb
rcrb
sbb
push
pusha
xchg
data16
inc
movb
cmpsl
mov
jo
adcb
jno
scas
push
outsb
fistl
jmp
cmp
lods
icebp
jb
or
jo
mov
in
xlat
jp
sahf
loope
in
ds
mov
cmp
push
add
mov
testb
enter
and
xchg
mov
xchg
loopne
push
out
inc
call
outsb
xor
pminsw
mov
sub
adc
je
mov
mov
out
popf
mov
mov
jb
dec
inc
pop
arpl
icebp
jae
loope
icebp
dec
mov
loop
lcall
push
inc
xlat
scas
call
ficoms
cltd
dec
inc
ja
ja
loope
fwait
dec
push
pop
shlb
arpl
jg
shrb
lret
imul
xlat
or
pop
or
jmp
pop
stos
add
xchg
dec
hlt
pop
xchg
sarb
sbb
adc
jns
cmp
adc
xlat
pushf
pop
push
in
inc
push
mov
adc
mov
and
call
push
mov
jbe
xchg
mov
pop
cmp
cmc
jge
pop
inc
ljmp
ljmp
arpl
testl
ret
and
mov
icebp
pop
fcmovb
daa
lods
pusha
pcmpgtb
insl
fwait
ljmp
mov
je
sbb
xchg
cmpb
adc
shl
pop
add
push
in
mulb
add
rcr
or
mov
in
pop
addl
pop
pop
push
test
pop
int3
mov
outsl
dec
inc
adc
negl
lret
js
addb
pop
stc
sub
jecxz
loop
mov
cmc
push
push
scas
js
test
xchg
add
cmpsb
bnd
mov
repnz
jnp
lods
jns
out
lcall
pop
scas
ret
xchg
mov
stos
mov
insb
fldl
fimuls
push
aam
out
stos
add
adc
movsb
jl
push
xor
jle
cmp
cmp
cld
xchg
aam
xchg
push
pop
cmp
stc
in
fnstsw
jb
cmp
xchg
out
nop
outsb
push
nop
int
addr16
test
ss
cmpb
lock
xchg
cmpsb
test
sub
loop
stos
cmpb
cs
scas
scas
or
ret
sbb
jbe
dec
dec
scas
out
movsl
add
mov
into
xchg
mov
cld
and
pop
push
sbb
addr16
cli
jno
sti
push
adc
and
movsb
cmp
dec
xchg
inc
mov
xor
adc
add
mov
push
mov
cmpxchg
sub
inc
xchg
adc
aam
fwait
mov
ret
icebp
xchg
pushf
out
fiadds
adcb
and
jl
outsb
ds
and
push
sub
mov
mov
mov
movsb
je
or
rorl
mov
dec
fisubrl
and
addr16
mov
mov
mov
cmp
cwtl
mov
mov
lds
pop
add
cltd
sub
push
rcrb
daa
mov
push
cs
scas
shrl
les
or
cmp
mov
aas
pusha
leave
ss
push
fwait
insl
das
rclb
fs
and
and
push
lds
add
fidivs
xchg
shll
int3
ficomps
sub
mov
dec
xchg
in
sub
or
in
push
cli
bound
cmpsl
inc
fwait
add
adc
xchg
and
out
outsb
lret
mov
fmulp
cmp
xchg
sbb
jo
xchg
jne
mov
stos
push
lea
in
dec
xchg
or
mov
and
fldlg2
into
mov
inc
xor
adc
sti
mov
mov
dec
sbb
addl
inc
out
xchg
aaa
loop
mov
push
jae
jbe
fiaddl
sarb
cltd
call
and
rclb
cmpsl
aam
sub
test
es
stos
lcall
into
ja
cmp
xchg
aad
mov
das
out
lret
sub
pusha
mov
scas
aam
test
aas
hlt
les
pop
push
sti
ds
mov
inc
mov
rcll
ljmp
cmp
inc
rsm
insb
movsl
inc
push
add
popa
cltd
xchg
xchg
mov
nop
lahf
pushw
das
pop
clc
cmp
cld
fistpll
push
repz
add
push
lods
mov
mov
mov
in
xchg
les
popf
jge
hlt
cli
sub
movsb
push
mov
adc
add
xlat
mov
popa
add
cmp
fdivrl
icebp
and
fisttpll
mov
push
movsb
pop
sarb
push
or
loopne
pop
je
fcomps
inc
shll
insb
ret
xchg
idivl
ss
push
lock
dec
lret
add
popa
push
aam
jp
jmp
inc
mov
out
pop
mov
pusha
in
push
and
push
test
mov
hlt
ljmp
or
mov
and
rorb
pushf
mov
and
jns
push
mov
add
fsubl
lock
xor
sahf
or
mov
dec
or
into
dec
and
aas
adc
xor
pop
aam
out
mov
jmp
scas
fs
mov
add
push
shlb
shrl
jmp
mov
pop
int3
fsubs
inc
xor
popa
ds
mov
dec
ret
lahf
or
dec
push
cli
cmc
lret
adc
scas
jne
or
sti
dec
mov
add
add
mov
dec
scas
xor
popf
inc
jbe
out
push
mov
mov
aas
test
inc
add
test
pop
movsb
sub
das
lds
pop
fst
jle
pushf
jge
adc
push
cmc
sbb
gs
fucom
xchg
fdivr
push
push
cmpsl
fcomip
xor
inc
jge
and
cmp
jbe
lds
nopl
push
movsl
adc
sahf
hlt
movsb
pop
icebp
popa
or
testl
imul
sub
shll
pop
xor
dec
mov
in
adc
addr16
jno
xchg
jle
xchg
xor
xor
fnstcw
sahf
insl
or
ljmp
sub
push
fdivl
lret
mov
or
enter
test
dec
add
mov
push
lahf
pop
mov
push
repnz
inc
bound
mov
rorl
jnp
dec
add
shlb
sbb
sbbl
sub
bsr
lds
push
ds
adc
dec
xor
sub
rclb
int3
lahf
scas
lahf
sub
xor
jno
mov
arpl
sub
fisttps
mov
out
pop
pushf
mov
jg
repnz
pop
cltd
xchg
lds
jp
add
into
shlb
sub
sbb
lret
jbe
xlat
jb
fcos
mov
jnp
cld
and
push
pop
or
dec
sub
xchg
push
subl
xchg
sub
pop
jne
mov
nop
ja
flds
pop
mov
jae
xchg
out
dec
push
sub
mov
mov
int
dec
xchg
ljmp
pop
ss
jmp
xchg
jnp
push
rcrb
xlat
in
bound
push
test
jmp
inc
lret
adc
mov
in
arpl
test
movsl
cmp
movsb
fsubs
mov
xor
bound
mov
movsl
and
mov
lock
enter
adc
fs
imul
jmp
int3
fmull
xchg
jae
cmc
pop
mov
and
testl
lret
clc
mov
pushf
inc
mov
sbb
sub
inc
mov
inc
sub
in
xchg
or
mov
add
addr16
jno
idiv
cmp
sti
aad
push
les
cli
fnstcw
jae
outsb
mov
xchg
adc
sbb
pop
aam
int3
cmc
and
lahf
testb
mov
pushf
sbb
add
inc
cmc
jns
dec
insl
dec
sbb
mov
push
loope
dec
rorl
mov
xchg
jl
pop
push
daa
sub
xor
pop
dec
icebp
mov
lods
sub
loop
mov
mov
push
push
mov
bound
cmc
cmp
in
cmp
repnz
pushf
pop
into
popf
or
andps
jl
testl
mov
push
inc
xchg
cmpsb
adc
cmc
jo
cs
sarl
insl
mov
adc
lcall
sbb
adc
dec
shll
jbe
repz
movsl
sbb
stos
test
in
mov
scas
fsubs
icebp
outsb
xor
filds
dec
mov
mov
sub
dec
push
mov
out
and
inc
ds
xor
push
jp
xchg
sub
jmp
jno
sbb
pop
test
add
or
xchg
jl
xchg
dec
neg
insb
hlt
xchg
push
or
sub
and
mov
xor
nop
data16
fcompl
ret
data16
shlb
push
jo
das
js
jo
cmc
pop
xorl
rcll
scas
add
arpl
es
in
inc
daa
test
mov
xor
aad
inc
dec
sbb
pop
cltd
out
jo
sbb
adc
popa
hlt
loopne
icebp
ljmp
dec
insl
shr
enter
inc
push
fcomi
xchg
mov
fs
icebp
pop
mov
push
or
loope
jmp
xchg
lods
mov
movsb
out
aad
inc
imul
pop
xchg
shrl
enter
es
gs
js
mov
push
mov
xchg
xor
stos
push
mov
pop
shll
cwtl
cwtl
mov
xchg
push
sbb
rcrb
iret
cmp
je
leave
lret
xchg
in
leave
dec
out
pushf
adc
adc
mov
mov
and
out
jge
js
or
jg
iret
ljmp
jg
pshufw
dec
cmp
fidivs
aas
adcb
insb
cmp
insl
lods
arpl
scas
adc
fcomi
inc
dec
aaa
mov
push
addb
mov
push
pop
sub
push
scas
hlt
mov
in
cmp
dec
aam
jns
insl
int
pop
nop
sbb
add
adc
fs
mov
ret
repz
outsl
xor
fmuls
add
jmp
jmp
ljmp
sub
lahf
dec
jbe
fucomp
call
pop
cmpsb
sti
scas
adc
bound
mov
imul
ret
jmp
xchg
inc
xor
pop
xor
cmp
pop
inc
mov
mov
decl
das
push
stc
jne
mov
inc
sub
cwtl
and
sub
mov
jecxz
push
mov
and
fcomps
aad
jns
pop
xchg
faddl
outsl
jle
push
jae
lods
pop
adc
mov
mov
add
arpl
fstpt
mov
jg
iret
pop
push
lods
repnz
pop
icebp
loope
push
mov
pop
dec
or
fdivrl
in
adc
sarb
int
mov
sub
xchg
push
out
bound
mov
add
in
loop
push
mov
xchg
pop
imul
sbb
pusha
jp
add
insl
cmp
fdiv
mov
enter
xchg
mov
or
xor
loopne
das
stos
add
xor
sbbl
orb
pop
enter
dec
cmp
or
jg
cwtl
iret
xchg
jne
cmp
jl
jno
pop
mov
in
lahf
push
call
xchg
adc
jno
adc
js
cwtl
lcall
push
sbb
shr
adc
es
jno
fcoml
sarl
int3
lods
push
movsb
adc
sub
int
lods
ljmp
addr16
and
pushf
lea
and
fsubs
and
or
jl
out
add
mov
xlat
out
in
adc
aam
ljmp
mov
aam
sbb
js
leave
mov
pop
dec
jp
test
fs
mov
sub
hlt
imul
movsl
jle
jp
addr16
ljmp
out
pop
in
push
pop
std
movsl
adc
xor
xorb
xlat
adc
sub
push
mov
cmp
xor
mov
cmp
pushf
outsl
lcall
mov
jo
addb
mov
mov
or
lds
mov
sub
ffree
aam
int3
dec
movsb
clc
mov
iret
mov
push
insl
sbb
imul
sub
lahf
into
lret
cs
xor
mov
adc
push
imul
ds
inc
pusha
sub
fxch
adc
ljmp
mov
nop
mov
sti
repnz
cld
scas
mov
inc
je
or
outsl
mov
cld
pop
sub
out
jge
xchg
jns
sbb
jae
popa
mov
addr16
jne
mov
call
inc
dec
shrl
ljmp
lahf
lret
xchg
pop
dec
fimull
mov
xchg
ret
add
cmpsb
or
push
sbb
sub
xor
leave
push
jecxz
dec
and
inc
into
aaa
xchg
pop
das
je
popa
xchg
rolb
adc
and
int
dec
or
mov
mov
test
pop
sbb
cmp
dec
pop
test
iret
insl
xor
in
dec
bound
pop
repz
sbb
ss
sub
dec
sub
call
cmp
sti
in
jmp
inc
mov
xor
xchg
adc
or
or
outsl
imul
ss
sahf
add
ss
xchg
pop
sti
mov
fwait
dec
dec
jecxz
bound
push
sub
xchg
int
pop
ja
sub
push
jge
movsl
scas
add
push
jp
inc
rolb
stos
aaa
test
xchg
xchg
loopne
int
sbb
out
cmp
adc
imul
adc
fwait
lods
xor
mov
enter
aaa
xor
out
fwait
popf
xchg
les
int
adc
adc
jne
testl
shlb
mov
add
mov
add
scas
dec
int
and
xchg
idiv
inc
ja
xchg
aam
incl
shl
mov
cli
push
lret
dec
add
cwtl
xchg
add
mov
das
fsts
faddl
cli
cld
mov
jge
cmp
in
xchg
insb
jecxz
mov
gs
cmpsl
iret
in
jmp
repz
cli
mov
xor
test
fwait
std
in
mov
pop
cmp
mov
stos
adc
shll
stos
jnp
fildl
push
lret
pop
cmpsl
mov
insl
jbe
sub
data16
jne
ljmp
push
sbb
call
popa
sbb
aad
cmp
in
inc
dec
fcmovu
or
sti
scas
lret
pop
xor
mov
out
idivb
lods
add
rcrl
or
push
xlat
orb
jl
ret
in
push
mov
enter
lret
cltd
into
cli
gs
pop
xor
add
inc
sub
push
push
std
sub
inc
leave
jl
jns
mov
xchg
fists
mov
nop
adc
sub
leave
dec
cmp
dec
add
ficoml
adc
pushf
pop
movsb
incl
mov
ficomps
add
out
inc
mov
arpl
jne
clc
mov
je
mov
add
loopne
mov
lock
int3
jg
adc
popa
push
outsb
fbld
std
jnp
cli
fs
inc
mov
and
repz
pop
pop
daa
push
mov
push
hlt
xchg
add
fnsave
jns
cs
inc
xor
pop
pop
shl
sub
jo,pn
popa
fstpt
inc
or
or
push
leave
mov
cltd
sub
cltd
add
adc
push
div
cmp
sbb
mov
pop
les
pop
ret
nop
xchg
dec
dec
inc
es
js
addl
lret
jae
fsubrl
mov
dec
ret
fnstcw
cmc
shl
mov
and
push
push
cmpsb
push
hlt
lock
push
mov
jmp
aam
insb
clc
fisttpll
pop
and
test
fistl
sar
gs
dec
out
jg
and
jne
mov
les
and
mov
pusha
push
fldenv
clc
aad
pop
dec
jle
jnp
cli
mov
outsb
or
das
das
adc
movsl
inc
mov
or
dec
pop
aas
stos
jnp
pop
inc
xor
repz
adc
in
aaa
sub
stos
jns
mov
push
ljmp
lcall
dec
scas
push
sub
jmp
std
ja
mov
mov
sub
pop
inc
std
inc
push
jl
mov
out
inc
out
cltd
decl
lea
and
push
data16
lock
mov
jmp
ds
movsl
jle
fnstcw
or
push
or
mov
scas
loope
sub
sarl
add
mov
pop
cmp
rorl
ds
dec
adc
adcb
pop
sbb
in
outsl
mov
jb
dec
ret
mov
popf
mov
push
adc
sbb
add
aad
push
sub
rcr
stos
pushf
fcmove
push
pop
and
pop
stos
js
gs
or
pushw
mov
sub
fldt
or
or
pusha
daa
roll
mov
mov
lcall
and
pop
loope
adc
xor
and
pusha
sti
lret
xchg
rcr
fnstcw
imul
mov
gs
imul
ret
mov
jno
das
cld
add
xchg
lret
inc
cmpw
adc
mov
mov
sbb
das
adc
test
xchg
sbbb
dec
mov
vmovmskps
jo
imul
stc
jno
push
gs
inc
xchg
xchg
push
mov
jo
xchg
or
in
sbb
push
fisttps
cs
in
add
aas
and
jge
xchg
push
jae
imull
por
pop
gs
out
daa
rcl
lahf
jb
in
mov
mov
sub
mov
cld
int3
or
or
out
and
cmp
inc
dec
sbb
ja
fcomi
xor
scas
cmpsb
out
pop
adc
pop
hlt
in
cmc
jl
ret
das
stos
scas
sbb
outsl
or
nop
insl
sti
mov
pop
push
incl
add
or
jnp
std
insl
lods
decl
es
sbb
daa
shlb
and
bound
sub
cmc
add
orl
leave
jo
mov
add
add
fisubrl
mov
sbbl
xor
aad
ljmp
insl
ret
jl
rcl
xchg
in
jge
jle
shlb
inc
push
fs
adc
push
push
xor
cmp
popf
out
xorl
sub
imull
mov
pusha
movsl
movsl
push
lea
ja
push
add
push
or
push
push
pusha
lea
daa
and
inc
addb
pop
mov
imul
jp
and
inc
scas
or
imul
test
test
push
pop
mov
repnz
fwait
or
push
fwait
ja
add
push
and
pop
xchg
mov
in
jg
andl
xchg
sarl
sbb
add
push
push
mov
shlb
cmp
push
ret
pop
stos
fisubrs
mov
mov
and
cmc
mov
inc
mov
mov
fsubrl
bound
mov
int
mov
mov
leave
xchg
jp
jo
jae
sbb
lds
repnz
js
inc
mov
add
xchg
mov
sbb
movsb
outsl
pop
sbb
sub
iret
hlt
inc
cs
sbb
mov
fisubrl
mov
test
lret
mov
daa
dec
sarl
dec
sbb
test
xchg
lds
jp
aaa
fisttpl
mov
cs
sub
mov
daa
jbe
adc
mov
lods
in
xchg
add
xorl
mov
adc
mov
imul
mov
jg
bound
out
fisttpl
out
dec
sarl
dec
mov
mov
bound
lea
and
mov
mov
loope
jp
in
or
add
add
and
hlt
mov
repz
and
insb
push
fincstp
mov
pop
mov
stos
inc
adc
rcll
jo
je
mov
or
and
sarb
lea
xchg
fwait
mov
cmp
cmpsb
pusha
mov
push
xor
in
cmpsb
or
outsl
mov
mov
xchg
jmp
push
inc
jle
idivb
fs
jg
leave
shrb
jne
add
inc
mov
pushf
lods
or
scas
or
inc
xor
out
rorl
jo
and
cmp
dec
loop
jne
ret
push
push
loope
or
test
jp
inc
pop
lcall
mov
sbb
bound
adc
sbb
dec
in
mov
push
push
push
lret
mul
mov
repnz
gs
push
out
int3
push
mov
rcr
test
movsb
sbb
fmull
or
mov
cmp
or
fisubl
push
enter
or
loop
dec
pop
mov
sub
ficompl
fs
daa
ffreep
xor
xchg
andb
mov
push
inc
out
mov
sbb
inc
push
xchg
arpl
push
movsl
xor
inc
aaa
mov
fcomp
xchg
dec
test
inc
pop
or
repnz
shl
testl
and
pusha
xchg
test
sbb
inc
mov
test
mov
or
mov
sub
xor
inc
jb
int3
and
shrl
imul
xor
test
mov
inc
pop
mull
pop
pusha
inc
or
movsb
adc
addr16
adc
dec
jbe
mov
cli
hlt
clc
aad
dec
hlt
inc
in
mov
fstl
pop
push
addr16
and
dec
test
xor
mov
cmpl
cmp
push
cmc
inc
insl
dec
mov
push
sahf
cmpsb
out
fstl
pop
cli
dec
cmp
icebp
repz
pop
add
pop
jp
push
cpuid
imul
xchg
lods
rol
add
stc
pop
scas
insl
test
inc
push
sub
cli
inc
js
sub
or
mov
cmp
jno
or
jg
pop
fstl
loope
inc
cmc
mov
or
and
xor
push
clc
lahf
lea
or
xchg
inc
cmp
push
inc
loope
dec
inc
sub
mov
add
pop
xchg
aas
jo
sbb
or
push
in
cmp
sub
ja
aas
loopne
mov
sub
pop
out
and
inc
outsb
mov
sbb
jp
mov
rclb
sbb
jmp
lret
cmp
cwtl
test
movsb
insb
add
inc
push
mov
inc
mov
push
xchg
mov
xor
test
lods
fsubrp
lret
sub
mov
cwtl
mov
ret
lock
lods
dec
aaa
mov
push
sub
dec
cmp
loop
mov
das
out
sarl
add
stos
or
xlat
mov
div
cs
cld
es
aad
shl
arpl
dec
stos
xor
dec
mov
adc
aam
xor
add
sub
sbb
and
nop
and
outsb
xor
dec
fisubs
sbb
adc
pop
and
mov
lea
and
cmp
sbb
addr16
xchg
arpl
dec
clc
repz
inc
xchg
lods
adc
xor
push
aaa
mov
inc
sbb
outsl
mov
scas
cmpsl
mov
mov
cwtl
das
das
xchg
sub
test
dec
das
lea
clc
pop
jle
das
or
fmull
pop
bound
mov
ljmp
adc
ficomps
out
cwtl
sub
cwtl
add
jmp
loopne
fcoml
clc
xchg
rcrb
cmpsb
es
sbb
enter
sub
negl
dec
das
fsubl
out
pop
shlb
cltd
rcr
call
jle
popf
inc
inc
into
sub
addr16
adcb
pop
lret
jmp
dec
inc
jb
inc
adc
xor
cs
stos
lcall
mov
fmuls
out
cmp
sbb
movsbl
clc
sbb
sar
inc
dec
and
xor
inc
pop
dec
outsl
inc
call
fs
imul
outsl
in
sub
das
cld
out
push
arpl
enter
cmp
mov
lcall
addr16
imull
mov
xchg
xor
cli
outsl
lds
repz
dec
mov
xchg
pushf
test
push
mov
xchg
hlt
pop
inc
dec
adc
loope
leave
popf
cmc
shll
cltd
into
jp
test
xor
xor
pop
push
filds
mov
enter
fxam
jl
sbb
clc
jnp
dec
pop
gs
orl
adc
test
stos
ljmp
paddusw
adc
dec
ficompl
sub
repz
mov
xchg
in
ret
outsl
test
fldcw
cmp
jbe
mov
push
jecxz
push
lock
stc
or
pushf
lcall
fwait
or
adc
adc
pop
push
insl
loopne
push
mov
fdivrl
jbe
cmp
mov
insl
bswap
push
movsl
aam
lcall
adc
sub
sbb
andl
mov
in
inc
cmp
or
pushf
std
pop
cmpsl
arpl
test
sub
mov
sub
mov
inc
add
jp
push
pop
pop
gs
pop
inc
push
add
dec
aam
lret
aam
dec
cmp
ljmp
sub
movl
cld
cmpsl
mov
sub
fldl
mov
add
std
push
rorl
fisttpll
or
mov
xchg
jns
push
clc
jbe
cmp
fidivrs
inc
xor
mov
enter
xor
or
push
stos
add
pop
popf
add
jle
add
iret
pushf
dec
sahf
int
insl
and
add
fwait
ja
loop
cli
lods
out
add
fcompl
ret
jnp
fdivr
mov
and
stc
cwtl
fnstcw
lock
sti
loopne
fs
and
das
xor
movsb
sbb
mov
shrb
mov
ret
idivl
imul
push
push
test
fnstenv
xor
jno
clc
xchg
pop
jns
xor
inc
pushf
mov
adc
mov
insb
rclb
or
pop
mov
dec
leave
stos
xor
add
push
imul
call
movsb
arpl
cli
imul
out
addr16
cmpsl
fwait
adc
mul
add
in
and
cld
and
lock
or
nop
je
outsl
sbb
fmull
stos
pushf
xor
js
xor
and
not
in
mov
lahf
aas
sbb
dec
imul
aam
cmp
xchg
and
sbb
shl
push
mov
pop
pop
mov
pop
lret
xchg
addr16
inc
rorb
mov
mov
mov
pop
stc
mov
jp
xor
jo
fnstenv
enter
jno
mov
ss
aas
pop
callw
adc
iret
rcll
mov
inc
cmp
xchg
repnz
cmpb
sbb
ljmp
lret
cli
jmp
push
cmc
pop
int
inc
pop
fwait
scas
lds
test
xchg
lret
mov
xor
jb
sub
dec
out
lods
stc
xchg
inc
clc
adc
add
add
dec
dec
das
xchg
dec
int
insl
out
jns
push
sub
lods
rclb
das
mov
fstpl
jno
fs
repz
icebp
sbb
xchg
negb
fs
mov
ss
pop
cmc
clc
cli
out
in
xor
into
mov
mov
jg
mov
inc
bound
jge
cs
clc
dec
mov
mov
pusha
repz
xlat
sbb
xor
or
rolb
bound
jo
xchg
in
pop
roll
mov
repz
jl
mov
xlat
xor
add
int3
mov
jl
popf
xlat
mov
inc
push
int
pop
out
loop
xchg
fisttpl
loop
lahf
js
testb
fsubr
dec
inc
leave
jl
int
out
jle
das
pop
jmp
negb
rcll
hlt
pop
outsl
in
es
sbb
gs
out
popa
push
pop
lods
aas
inc
cmp
inc
int3
std
push
out
dec
pop
dec
js
sub
aaa
fldenv
loope
add
xchg
test
jns
adc
mov
pusha
dec
jbe
in
mov
loope
push
jno
gs
xchg
inc
xchg
inc
ss
in
repz
jbe
adc
rcl
roll
adc
push
leave
xchg
push
test
dec
fcomps
adc
dec
lret
dec
push
jmp
xchg
ret
xor
les
sbb
mov
or
popa
pop
and
pop
fmuls
xor
mov
or
mov
shl
and
pop
or
adc
lret
mov
mov
xchg
neg
idivb
sbb
cld
hlt
pusha
shlb
xor
cmp
cld
and
sti
mov
aad
roll
insl
insb
outsl
test
bound
push
add
js
shlb
mov
pop
out
mov
jp
out
loop
fiadds
mov
hlt
lds
jmp
pushf
pop
mov
cli
addr16
movsb
sbb
sbb
fisttps
pushf
mov
mov
repnz
xorps
loope
lcall
xorl
pop
pop
pop
add
das
out
sub
sbb
cltd
popa
sahf
popf
outsl
mov
mov
fs
cmp
hlt
and
std
and
xor
sbb
push
sbb
and
mov
loop
dec
push
jae
into
loop
ret
mov
sbb
insl
dec
and
adc
rcrl
dec
xor
clc
inc
xchg
andb
cmpsb
aas
in
sbbl
pop
dec
jmp
add
push
fbstp
ljmp
and
lahf
and
insl
jmp
mov
mov
jae
mov
lea
imul
pop
add
xchg
xchg
icebp
repz
int
sbb
daa
enter
insl
pusha
adc
pop
xchg
lock
adc
lret
subl
int
jae
xchg
clc
push
sub
mov
data16
daa
leave
cmpsb
aaa
adc
call
ret
or
out
in
pop
xchg
nop
adc
lcall
lods
lds
cwtl
mov
and
leave
inc
loop
lods
negl
mov
cld
mov
andb
xor
xchg
jbe
xchg
dec
fistps
gs
cmpsb
std
outsl
mov
je
sub
dec
mov
jg,pt
mov
cwtl
xchg
jne
fstps
clc
adc
add
jb
adc
daa
sub
push
test
stos
dec
xchg
and
test
leave
les
jge
jge
add
mov
or
mov
cld
inc
jno
or
mov
test
jns
shll
add
loope
inc
jecxz
sub
outsl
scas
or
repnz
shl
inc
mov
inc
cwtl
inc
dec
movsl
push
mov
xchg
idivb
js
ret
out
fnstcw
cmpsl
mov
push
outsb
test
cmp
jbe
inc
cmp
pop
inc
mov
cmp
and
call
aaa
inc
test
mov
or
aam
test
pop
push
shrw
popf
jp
hlt
aaa
into
hlt
and
dec
dec
aas
fldcw
xor
rol
xchg
and
out
aam
jmp
rcl
ja
insl
mov
or
push
test
xchg
mov
data16
pushl
enter
or
mov
addr16
mov
imul
divb
cmp
stos
nop
dec
pop
fcomp
or
lahf
and
mov
jb
gs
adc
ds
psubusb
mov
andl
pop
mov
dec
flds
movsl
mov
xchg
jns
mov
pop
sub
and
mov
push
scas
rcl
fisubrs
lahf
and
xor
testb
adc
cmp
and
testw
mov
sbb
out
ret
jecxz
mulb
mov
inc
nop
sub
ljmp
lret
jle
and
aad
sub
jmp
scas
test
repz
pusha
lahf
jge
not
scas
jnp
in
insb
jnp
scas
insb
in
repz
lods
ljmp
call
fistpl
int3
imull
addr16
jmp
push
inc
mov
xor
mov
int
dec
stc
fstpt
js
dec
xlat
adc
scas
cli
push
js
add
movsb
orl
mov
vmread
in
fistl
stos
lds
sub
in
out
stc
ljmp
enter
rclb
mov
imul
ja
call
xchg
icebp
jl
pushf
push
das
pop
mov
lcall
ds
push
push
mov
imul
pop
testl
test
pop
pop
mov
cwtl
ja
push
inc
cmp
js
push
clc
cmp
cld
sub
lods
jmp
push
stos
sti
jmp
adc
scas
mov
xlat
jo
jg
addl
sub
test
jecxz
movsb
xor
add
or
cmp
int
add
call
scas
or
clc
dec
add
inc
dec
or
mov
xchg
fisttpl
stos
repnz
push
in
inc
xchg
xor
push
mov
outsb
mov
test
int
cmp
into
xor
lret
mov
jl
cmpsb
inc
mov
inc
test
inc
in
push
adcl
in
data16
xor
hlt
das
scas
inc
outsl
insb
rcrb
fdivs
xor
pop
ljmp
inc
xchg
jbe
add
sub
test
xor
out
mov
lods
ret
sahf
test
rcll
pop
mov
sub
push
cli
adc
icebp
test
stos
add
adc
xchg
scas
insl
jae
daa
mov
jp
aam
fs
in
inc
imul
push
test
sbb
test
sbb
inc
pop
ret
push
adc
adc
cmpsb
gs
leave
pushf
jnp
cmpsl
stos
loope
dec
aad
jae
cmp
cmpsl
sbb
cmp
push
stos
lcall
push
lea
int3
je
sbbb
push
jo
add
sub
cmpsl
imul
nop
test
arpl
rcl
cltd
popf
sub
pop
and
hlt
or
mov
in
push
dec
sub
fincstp
jno
mov
jo
cs
mov
cmpsl
ja
inc
mov
das
mov
fmull
mov
mov
data16
add
ds
dec
adc
mov
adc
shll
pop
xor
inc
in
test
push
test
push
lds
jp
addr16
stos
xchg
mov
ret
mov
mov
inc
fdivr
inc
movsl
ret
fs
xchg
rclb
int3
adc
cmp
mov
aas
push
dec
or
xchg
sarb
xchg
loop
pop
pop
mov
cmp
jge
push
hlt
sbb
aad
lret
mov
orb
mov
and
sbb
add
adc
loopne
in
sahf
xor
xor
cmp
jbe
jmp
mov
mov
rclb
repnz
mov
rcrl
fidivl
bound
xor
lahf
mov
or
xchg
lods
or
pop
mov
test
cmp
add
lret
dec
xlat
and
add
js
cwtl
xchg
mul
mov
jne
xchg
ret
xor
stc
imul
add
ret
push
shlb
dec
mov
addl
flds
mov
xchg
aaa
dec
shl
popf
and
adc
loope
pop
xchg
lahf
fistl
fidivrl
and
rol
or
lret
andb
and
stos
push
hlt
incb
jecxz
jns
xchg
mov
lcall
addr16
in
add
pop
xchg
xchg
sbb
push
push
xchg
pop
adc
mov
ljmp
mov
aas
inc
fs
lahf
aas
xchg
cmp
push
sbb
mov
push
sbb
stos
mov
aaa
mov
push
pop
aad
cmp
dec
sahf
pusha
xchg
lcall
jmp
push
push
xchg
mov
int
popf
pop
dec
mov
mov
cld
incb
pushf
jo
divb
push
pop
das
ljmp
repnz
mov
sbb
pop
mov
inc
lea
jns
inc
sbb
cmp
std
fs
mov
fnstenv
push
in
shl
les
push
or
pop
adc
rorl
jae
adc
cmpsl
rcl
cwtl
jmp
dec
adc
mov
dec
mov
out
push
push
mov
mov
pusha
or
adc
pop
xchg
roll
xchg
mov
adc
loop
add
pusha
push
adc
fisubl
xchg
jmp
cwtl
arpl
or
cwtl
testl
lahf
xchg
cmp
inc
test
mov
mov
sbb
hlt
insl
sahf
lock
out
cwtl
mov
fildl
inc
inc
cwtl
hlt
insl
xor
pop
ja
repz
xor
mov
adc
sbb
ja
pop
jmp
hlt
dec
inc
mov
pop
sub
shlb
icebp
mov
enter
stc
mov
mov
sub
jns
sub
push
xor
dec
xchg
test
adc
aaa
icebp
xor
or
aas
addb
cmp
push
gs
int
inc
dec
insb
inc
or
out
cmp
push
or
cs
inc
push
cltd
push
and
xor
cmpsl
ret
xor
mov
adc
pop
sbb
mov
jmp
xchg
add
rclb
adc
xor
jae
cmp
es
mov
sbb
lret
jmp
stc
or
push
jnp
out
lods
insl
pop
cmp
xor
out
mov
aam
cmpsl
mov
stos
push
sbb
jecxz
scas
fnstcw
fildl
ss
mov
xchg
dec
push
out
inc
stc
notl
dec
mov
push
push
rcr
mov
lds
cmp
and
mov
jbe
sar
sub
add
push
adc
lds
testl
and
ljmp
ret
cmpb
inc
mov
jp
adc
shl
mov
xchg
in
ds
es
test
add
out
mov
repz
xor
loope
pop
js
icebp
dec
mov
rclb
shll
adc
pop
arpl
cmp
fisubl
jb
xchg
sub
cmpsl
mulb
shrb
fisubs
or
dec
xor
pusha
or
inc
cli
insb
dec
ds
inc
dec
je
sub
adc
aaa
jecxz
pop
mov
cmc
mov
mov
dec
int
imul
mov
or
and
or
leave
int3
iret
in
or
pusha
out
xchg
add
jge
or
push
xchg
xchg
add
fs
fisubl
sahf
inc
verr
sbb
mov
stc
jp
sbb
xlat
in
xchg
mov
iret
jnp
mov
mov
call
lea
and
push
bound
ret
mov
shl
or
loopne
int3
adc
pop
dec
xchg
neg
test
and
mov
xlat
mov
mov
aas
jmp
mov
fsubrl
imul
push
aam
adc
insl
xor
subl
sub
xchg
fldt
push
movsb
xchg
lods
jecxz
out
add
cmp
hlt
test
and
adc
cs
cmc
jmp
adc
insl
aas
push
js
xchg
int3
mov
daa
jmp
mov
outsb
jns
popa
sub
jecxz
pop
adc
test
in
pop
xchg
push
scas
push
push
and
sbb
sbb
mov
int
sub
leave
xor
gs
enter
dec
iret
std
push
lret
leave
insl
fwait
jno
mov
add
shlb
jecxz
mull
fldt
cmpsb
mov
adc
inc
adc
xorb
xor
scas
jnp
and
sbb
adc
std
or
rep
jp
ret
adc
fdivrp
mov
cmp
fdivrl
test
pop
ret
dec
insb
xor
rclb
jge
loopw
gs
enter
pushf
cmpsb
add
cmc
xor
inc
pop
push
adc
mov
xor
mov
dec
push
enter
pop
ljmp
cmc
mov
fldlg2
mov
ljmp
mov
pop
jb
in
mov
dec
add
ds
pop
mov
mov
imul
cmp
in
sbb
sti
cmpl
xor
push
addr16
xor
movl
test
xchg
sbbl
je
mov
push
mov
add
clc
imul
xor
fxch
pop
pop
and
or
or
fldl
xor
xchg
sbb
pusha
lret
pop
pop
test
ficoml
jmp
rolb
rclb
lret
cmp
inc
push
arpl
or
dec
jge
aas
rolb
add
js
push
outsb
push
and
adc
daa
in
enter
sbb
into
cmpsl
pop
add
adc
and
les
dec
sbb
test
xorb
into
mov
mov
scas
adc
gs
aad
jp
stos
addr16
imul
repnz
add
stos
push
mov
lods
dec
xchg
cmc
mov
data16
push
cli
sub
lahf
adc
lahf
mov
sbb
data16
mov
cmp
dec
pushl
out
scas
mov
dec
mov
paddsb
cmp
fcompl
cli
add
jmp
call
enter
aad
add
sbb
imull
add
imul
sub
aam
ljmp
adc
sti
push
sub
jae
loop
inc
inc
repnz
add
push
adc
xlat
dec
xchg
cwtl
insb
and
mov
test
push
and
push
imul
lock
ret
xor
sbb
aaa
and
subl
push
test
insb
test
mov
scas
inc
push
shlb
mov
nop
cli
das
jae
jmp
loopne
stos
mov
sub
push
repz
lret
ret
arpl
scas
jo
aaa
outsl
test
mov
fs
imul
popa
pop
cmp
sbb
dec
and
cwtl
jbe
xchg
out
or
ret
dec
mov
jne
pusha
shrl
je
stos
ss
dec
cmp
jo
jp
jbe
sbb
bnd
inc
dec
jno
movsl
mov
or
rcll
dec
popl
ret
mov
and
jle
mov
cmp
movsl
pop
negb
pop
mov
ss
mov
daa
hlt
ljmp
ret
imul
mov
mov
leave
in
push
jle
cmp
popa
mov
int
sub
xor
addb
pop
push
test
jnp
pop
es
cwtl
push
mov
adc
jmp
outsl
cmp
cmpb
inc
jae
add
fwait
cmpb
arpl
mov
les
xor
cmp
push
test
cltd
mov
outsl
imul
and
aam
scas
sub
and
testl
pop
sbb
or
repz
mov
insl
sbb
lock
inc
scas
jg
jne
js
loop
test
mov
inc
sarl
dec
outsl
cmp
test
xorb
mov
lock
cltd
ficomps
sub
fmuls
iret
outsb
adc
es
mov
cli
jp
fsts
sbb
adc
xchg
pop
mov
xchg
inc
ret
add
lods
js
push
xor
sub
fbld
cld
mov
sub
dec
lcall
mull
sub
cmpsl
iret
xchg
aas
das
sub
cwtl
mov
shrl
nop
push
xchg
rorb
repz
fildll
imul
js
add
dec
push
test
jns
sti
sub
mov
mov
lret
andb
xchg
rcrl
sarl
cmpsl
cmpsl
adc
pushf
loope
mov
add
sub
hlt
adc
fwait
sahf
pop
push
shlb
jecxz
sbb
lret
addr16
jo
push
dec
stos
mov
sbb
frstor
call
sbb
pop
push
adc
divl
xor
push
ja
ret
ds
leave
or
int3
xor
inc
xor
loop
aam
mov
pop
add
imul
lods
repnz
sub
mov
add
scas
pop
mov
push
sbb
in
push
out
sbb
dec
mov
lds
push
int
sub
sbb
addb
fwait
lds
je
dec
popa
mov
and
inc
mov
shlb
std
daa
divl
xor
pop
sbb
bound
cltd
mov
push
or
rol
push
mov
inc
dec
mov
push
jp
jb
xor
inc
add
push
lods
jp
cmp
in
pop
cs
cmp
pushf
jmp
jl
xchg
in
push
and
fsub
jp
enter
and
scas
inc
sub
outsb
data16
sahf
call
or
mov
sti
adc
adc
push
es
aas
es
adc
lahf
inc
sub
sbb
pop
push
lds
push
cmc
push
or
aaa
pop
adc
xor
addr16
lret
adc
pop
arpl
int3
mov
jae
sub
test
push
mov
pop
adc
mov
push
nop
mov
out
push
es
sub
mov
cmp
sbb
pop
cmp
mov
pop
xorps
jg
scas
xchg
xchg
rcll
xor
inc
dec
fnstcw
mov
pop
cmp
adc
jbe
or
cs
push
xor
out
pop
adc
lock
push
loope
xor
outsl
fnstenv
repz
mov
cli
daa
push
sar
cmpsl
aad
scas
inc
cmp
pop
xchg
in
jno
pop
btcl
sbb
scas
mov
push
cmpsl
lods
ds
sbb
jg
cmp
mov
push
or
dec
cwtl
xor
sub
add
mov
jne
pop
fldt
ret
addl
pop
dec
es
dec
jle
xchg
adc
cmp
mov
push
movsb
in
pop
imul
xchg
jae
sub
or
pusha
into
lods
jp
fcoml
or
stos
and
test
shll
jmp
aas
mov
mov
dec
xchg
daa
cmp
xor
xchg
or
jl
sub
insl
hlt
sahf
sub
mov
bound
stc
jo
add
pop
mov
xor
fisubl
pusha
rorl
jge
hlt
sarb
fdivrl
sub
and
add
mov
sbb
jmp
clc
push
dec
add
stc
shld
fimuls
shr
pop
lods
mov
fs
std
daa
stc
lcall
xchg
das
into
pop
outsl
mov
xchg
pop
jmp
fs
push
fimuls
mov
mov
xchg
sub
cmp
std
cmp
imul
call
das
jae
out
aas
in
movsb
lret
fists
add
leave
pop
jb
sub
shlb
testl
hlt
jg
hlt
xor
outsl
loope
push
mov
adc
inc
imulb
loopne
xchg
jo
sub
iret
lds
mov
ss
aam
cs
in
mov
inc
out
xor
mov
int
lods
pop
test
aam
mov
jbe
test
add
pop
or
insb
loop
roll
adc
push
divb
lods
outsb
fiadds
test
scas
xchg
int
and
mov
jg
xor
adc
add
or
cs
outsb
std
jae
lock
pop
std
cmp
stos
xchg
dec
or
add
and
inc
in
out
sub
add
pop
inc
cmp
pop
movsl
arpl
ret
xchg
xchg
mov
in
or
insl
stos
idivb
shll
fimuls
mov
lea
mov
dec
inc
lock
cli
xchg
inc
sub
out
xchg
inc
push
xchg
adc
test
mov
xchg
xor
ficomps
fwait
imul
add
push
subb
dec
jp
sbb
or
cmp
aad
dec
sub
push
xchg
cli
test
in
mov
je
lret
lods
insb
mov
dec
and
jne
and
lods
imul
add
ds
test
insl
into
ret
and
mov
scas
mov
pop
xor
jbe
dec
repz
stos
stos
push
out
test
imul
pushl
sahf
movsl
rcll
or
repnz
add
jg
inc
rcrl
cmc
lahf
sbb
out
in
cmp
inc
cld
pusha
mov
jns
push
out
cmpsb
nop
xchg
push
lcall
cmpsl
sbb
jae
jo
fidivs
mov
out
mov
add
jl
arpl
test
xchg
out
nop
or
cmpsb
hlt
push
nop
jg
mov
cmp
or
cmp
xor
insl
shl
rcll
mov
lods
aam
pmulhuw
add
mov
cs
mov
add
fwait
inc
jae
mov
in
sti
dec
xor
sub
and
repz
bound
push
mov
cmp
pushf
sbb
shlb
pop
jmp
inc
dec
and
lds
sbb
mov
push
sub
mov
dec
jle
mov
dec
out
cmp
push
loop
pop
sub
fistl
and
jge
clc
dec
cld
sti
xchg
dec
js
imul
push
loopne
jmp
stos
pop
or
pop
lcall
add
fildl
fs
clc
sub
or
mov
cmp
into
push
loop
les
xchg
xchg
and
sub
sbb
adc
leave
cld
cltd
adc
out
in
cmc
mov
repz
xchg
scas
and
lock
mov
mov
push
or
xchg
inc
pop
add
das
pop
xlat
dec
dec
outsb
stc
sbb
repnz
out
pop
cwtl
lahf
call
insb
mov
lahf
movsl
jno
mov
fwait
mov
adc
cmp
insl
fs
pop
mov
sub
aad
or
iret
inc
xchg
adc
enter
inc
pop
inc
clc
sub
push
lret
movsb
loop
lret
aam
jl
or
stos
mov
add
jmp
cwtl
mov
mov
pop
dec
xchg
and
ret
sub
out
dec
jnp
sbb
jl
or
pop
ja
icebp
jmp
push
fildll
lods
xchg
mov
call
jp
push
and
nop
add
in
pop
repz
add
cmp
mov
jp
pop
xor
xor
imull
push
cwtl
mov
xlat
scas
or
fcmovu
int
repnz
adc
popa
cltd
jecxz
push
sub
dec
jge
outsb
push
pop
mov
adc
mov
aam
je
ret
mov
arpl
cltd
imull
mov
adc
mov
jecxz
aas
cmc
push
fdivr
mov
rcll
mov
cld
arpl
sub
leave
jg
mov
push
push
jns
xorb
push
mov
lahf
testl
push
mov
bound
sbb
adc
subb
aad
xchg
and
and
sbb
dec
lahf
cmp
mov
sbb
ret
sbbb
movsl
add
jne
lcall
mov
jmp
inc
mov
mov
roll
imul
iret
sub
jg
mov
in
push
imul
mov
xor
mov
mov
icebp
test
or
in
mov
mov
rcrl
push
jg
adc
and
lret
mov
andl
sbb
push
outsl
in
cmpsb
clc
mov
or
push
xchg
scas
or
mov
leave
rorb
sub
int
mov
xor
sub
jp
push
jns
sub
loopne
aam
pop
insl
mov
jge
stos
mov
ds
mov
inc
lret
nop
push
clc
repz
sbb
adc
loope
outsb
repz
test
test
sub
mov
gs
add
rcrl
int
cmp
and
in
sbb
in
push
xchg
dec
push
xchg
lahf
xchg
inc
cmp
movsl
inc
aas
ss
les
add
sub
enter
push
or
outsb
push
shlb
pushf
cmp
cmp
ss
mov
xor
add
mov
ret
test
mov
lock
insb
add
cmp
xor
rcll
xor
nop
cmp
jecxz
push
loope
into
leave
into
add
push
jns
imul
xchg
mov
clc
add
mov
cmpsb
ret
pop
aam
cld
pushf
scas
xorb
adc
push
test
mov
xchg
leave
xorb
lods
imul
mov
cmpsl
fsts
mov
add
stc
repz
cwtl
in
or
icebp
mov
imul
mov
inc
push
loope
xchg
jae
call
mov
dec
das
fcmovu
inc
mov
lcall
testl
mov
fisubs
sbbb
and
or
jecxz
push
push
enter
adc
call
psubusw
aas
call
xchg
cltd
arpl
js
dec
data16
mov
xchg
push
mov
clc
and
sti
push
push
inc
popf
cmp
mov
pop
dec
and
cwtl
pop
cwtl
or
lods
arpl
scas
das
js
popf
xchg
inc
push
pop
iret
popa
jae
fisttpll
aad
push
rcl
loopne
add
xlat
mov
and
lret
push
xchg
mov
jae
inc
subl
add
out
in
push
out
xor
insb
es
test
rcrl
out
cmc
inc
std
or
cmp
adc
pop
push
adcb
jae
mov
xchg
in
es
jne
stos
or
or
out
mov
lcall
sbb
xor
inc
inc
or
push
insb
cmp
outsw
dec
jnp
in
shlb
daa
pop
cmp
xor
sub
xor
aam
sub
cltd
push
push
sahf
movhps
mov
in
add
pop
mov
add
stc
lods
xchg
sbb
and
movsb
adc
ret
pop
lret
fidivrl
popf
jmp
cmp
mov
jl
sub
ljmp
pop
outsl
push
ror
mov
insl
aad
in
cmp
pop
loopne
pop
jno
pop
push
or
ds
fwait
popl
xchg
jae
incb
shlb
lock
mov
sbb
ds
test
scas
sbb
aam
cmp
lods
mov
lds
in
notb
push
outsb
pusha
mov
or
sbbl
sbb
add
adc
out
jg
push
nop
jbe
cld
mov
into
arpl
fimuls
dec
cmp
dec
dec
xchg
notl
xor
sub
test
inc
popa
testb
mov
push
jne
push
add
pop
and
xchg
fldl
das
enter
cmpb
fildll
mov
mov
mov
sub
out
dec
xlat
jb
xchg
out
loopne
mov
add
mov
cmp
push
adc
sti
inc
xor
test
int3
pusha
lahf
add
sub
stos
pop
icebp
mov
js
mov
or
ret
lock
xchg
fwait
xchg
adc
imul
mov
and
mov
mov
out
mov
outsb
or
push
leave
enter
mov
outsb
mov
js
ljmpw
mov
dec
fs
cmpsl
fadd
dec
loop
aam
in
push
mov
mov
aaa
loop
mov
data16
push
cmpsb
mov
adc
les
pop
dec
sub
repnz
insb
and
in
and
push
add
sub
jne
call
ss
and
imul
sti
pushf
add
jecxz
cmp
cs
cli
jp
je
or
push
sub
jo
jp
popf
out
lea
cmpl
enter
push
outsl
cmp
fwait
test
outsb
test
icebp
dec
ss
repnz
imul
jp,pn
insb
cltd
scas
mov
in
mov
imul
dec
loope
xor
lods
jns
ror
xlat
pop
adc
sub
insb
jecxz
lea
sti
cltd
arpl
pusha
sbb
sub
nop
in
and
insl
in
mov
xchg
fnstenv
xchg
movsl
add
fs
mov
mov
mov
daa
adcl
xchg
sbb
jnp
inc
xchg
aad
add
ljmp
jnp
sbb
mov
clc
pop
jecxz
sub
add
sbb
lds
rorl
xchg
in
fmul
mov
shrb
in
inc
jle
rol
loope
outsb
jmp
cld
mov
loope
mov
push
jle
or
sbb
lea
inc
mov
lcall
sbb
nop
adc
pop
es
and
dec
jp
dec
jmp
fidivs
inc
repz
add
add
push
cmp
adc
lcall
and
xlat
xor
test
out
stc
add
lcall
lahf
cmpsb
popf
xchg
cli
std
stos
icebp
push
add
cmp
subl
jmp
std
or
sub
jae
popf
mov
std
pushf
mov
aas
sbb
int
adc
dec
xor
inc
orb
inc
pop
add
pop
sub
imul
repnz
pop
jnp
add
sbbb
fxch
sub
xchg
fdiv
sub
aam
dec
not
mov
xor
pop
rolb
mov
ds
pop
mov
daa
call
aaa
enter
cmc
pop
and
jae
cmove
mulb
lahf
ficoml
jg
sub
or
out
sub
je
xor
adc
stos
aas
adc
into
cmpsl
aas
nop
inc
or
jnp
pop
cltd
rorb
lahf
ljmp
and
lods
jo
fidivrl
scas
adc
lds
iret
xor
pop
xchg
inc
out
sbb
stc
pop
mov
sbb
push
pusha
in
jmp
add
popf
sarb
movsb
ret
cmp
mov
and
sbb
test
xchg
xchg
lea
gs
jo
mov
out
push
mov
add
jl
ljmp
jne
repz
in
push
jmp
enter
insl
add
lods
sbb
aad
lods
mov
pop
orb
stc
repnz
mov
sahf
push
add
xchg
call
outsl
hlt
dec
into
sbb
sarl
sub
xchg
out
sti
ret
jno
jmp
lahf
sub
andb
ljmp
call
scas
mov
fisubrs
sbb
push
nop
inc
mov
inc
enter
fistpl
ficoml
xchg
jb
sub
out
cmc
lods
out
fidivrs
ja
daa
enter
add
xchg
push
ja
xchg
or
inc
xor
loop
jle
fmuls
mov
xor
into
jmp
mov
or
jg
and
push
enter
sub
or
out
leave
repnz
mov
xchg
pusha
cli
movsb
jp
mov
mov
add
fisubrl
sub
loopne
mov
jecxz
nop
mov
xchg
cmp
icebp
dec
rep
mov
dec
out
shll
cmp
dec
ds
mov
mov
aas
std
xchg
pop
adc
stc
cmp
ljmp
cmp
into
ss
imul
jae
stos
mov
mov
cmp
shll
lret
xor
dec
or
rcrl
imul
sub
push
mov
ds
loopne
js
or
xor
sub
iret
pop
push
test
aad
loop
dec
inc
mov
and
xchg
loop
xchg
pusha
ljmp
std
shr
inc
jno
movsb
call
vandps
lods
dec
adc
jno
cltd
dec
arpl
xor
mov
pop
pop
test
out
sub
mov
or
add
pop
dec
pusha
out
pusha
mov
jbe
jmp
addr16
sub
sbb
xor
add
dec
xor
jno
cmc
loop
imul
iret
inc
imul
sbb
mov
sub
fisubl
popf
pop
push
sbbl
jmp
jg
sbb
add
in
cmp
cmp
mov
dec
dec
in
pop
in
lds
cltd
fwait
mov
push
sarl
cmp
jge
negb
and
cmp
jb
popa
add
xor
cmpsl
cs
out
adcb
lea
ret
xchg
sub
cs
pop
xor
shlb
sahf
js
iret
lahf
pop
ss
add
sub
shlb
sbb
aas
mov
adc
jl
mov
xor
outsl
mov
pop
mov
xchg
addr16
jge
jns
mov
adc
in
pop
sub
in
in
and
xchg
dec
lea
and
jbe
iret
mov
xor
mov
dec
cld
add
filds
mov
hlt
dec
int
cmpsl
out
sub
out
cs
mov
mov
mov
push
fstpt
mov
sti
or
stos
mov
repz
or
ds
adc
ds
mov
mov
dec
out
inc
push
sti
pop
repz
add
jmp
adc
cli
or
cmpsl
imull
stc
mov
je
mov
cmpsl
les
inc
add
jns
xchg
outsb
adc
gs
test
clc
iret
mov
pcmpgtb
mov
dec
dec
jl
lahf
daa
decb
pop
movsb
movsl
or
dec
mov
cmp
inc
outsb
ja
push
dec
js
ds
cmpsl
jmp
in
jmp
lret
pop
inc
sbb
popf
stos
adc
mov
sub
and
and
push
stc
mov
push
pop
loop
add
push
cmp
adc
gs
lds
sti
in
lds
lcall
xrelease
lret
aam
shr
movsl
pop
negl
les
popf
push
mov
mov
mov
add
repnz
sqrtps
cmp
sub
inc
fimull
push
popl
out
inc
cs
push
cmp
mov
mov
push
aam
mov
mov
fcmovu
mov
or
int
add
ja
xchg
lds
int
xorb
lea
nop
push
pop
out
cld
fmulp
gs
enter
adc
mov
add
mov
aam
sbb
out
inc
or
test
mov
jp
push
inc
mov
mov
shrb
dec
sub
js
int3
mov
mov
push
mov
test
call
fdiv
iret
push
xchg
sub
add
je
push
inc
push
in
mov
divl
lcall
and
cs
inc
outsl
pop
adc
adc
adc
lock
cmp
arpl
scas
aas
jg
mov
cld
out
test
mov
dec
jle
mov
sbb
xor
pop
imul
lods
into
loopne
imul
jle
cmc
adc
stos
rol
lods
outsl
in
out
jg
mov
int3
inc
push
xchg
lock
mov
lret
lret
jecxz
outsb
cld
sbb
and
je
push
stos
lcall
sub
gs
jnp
jl
ds
fistpll
mov
mov
xchg
inc
stc
add
lret
pop
mov
and
sbb
and
push
and
imul
cwtl
shl
test
lret
mov
enter
inc
or
sub
lods
dec
fisubrl
add
mov
jl
cwtl
add
mov
std
rol
ss
leave
push
xchg
fmull
mov
shr
pop
push
cmp
dec
scas
in
xchg
idiv
sub
mov
shrb
ret
mov
xor
in
dec
inc
pop
xchg
mov
add
leave
adc
inc
mov
jns
adc
aad
xchg
fdivr
inc
in
lret
lds
dec
sub
insb
loop
pop
pop
xor
cli
cmpsl
clc
rorb
sti
test
jae
inc
xchg
cmc
mov
adc
rorb
aad
ss
cmpl
cs
sub
mov
pop
pop
and
mov
lods
fcoms
jp
imul
xor
imul
cmp
sub
hlt
add
popf
stc
clc
adc
ficomps
fdivrl
pop
xchg
int3
mov
inc
ret
ss
sbb
sub
inc
jle
icebp
and
xchg
sti
jno
sbb
ljmp
push
test
popa
push
jb
mov
inc
sub
pop
push
rcrl
in
sub
das
pushf
sti
jmp
fildll
scas
lock
mov
call
cmpb
inc
insl
mov
daa
mov
mov
insb
test
rsm
test
cmpsb
or
push
lea
pop
jb
jg
sub
push
sbb
pop
push
inc
push
loope
push
hlt
jae
clc
push
push
pop
rcll
mov
cmc
and
ret
andl
push
in
je
je
and
pop
dec
out
inc
and
sbb
sbb
test
and
mov
xor
add
ret
cld
pop
lahf
lahf
mov
movsl
cli
xorb
aaa
pop
sub
sub
sti
cwtl
pop
xchg
lds
stc
inc
aam
push
out
lret
pop
shl
movsb
cmp
and
pop
jecxz
cltd
lods
pop
push
sbb
xchg
int3
xchg
push
mov
xchg
ss
out
lahf
shlb
lds
aas
jne
sbb
ds
push
lahf
or
mov
ret
movsl
ss
es
adcl
rolb
fsubs
popf
iret
cwtl
adc
pop
iret
sbb
sbb
pop
xor
iret
cmpsb
push
ret
in
fldl
insb
dec
call
sub
cli
xchg
mov
xor
mov
or
jae
inc
add
and
sub
and
ja
xor
mov
adc
jae
xor
test
cmp
fs
jmp
mov
das
test
lcall
ljmp
xchg
pop
add
inc
insl
es
adc
xchg
bound
jne
iret
dec
in
xchg
jp
scas
out
bound
inc
pop
iret
xchg
insb
xchg
insb
cmp
dec
cltd
fs
arpl
sahf
imul
lahf
outsb
pop
sti
rcrl
in
fstp
enter
adc
ret
aad
ds
push
mov
jo
lods
xchg
jnp
push
xchg
lock
sub
xchg
lret
out
int3
test
mov
sub
inc
cwtl
enter
dec
push
pusha
mov
ror
pop
or
ja
decl
ficoms
push
xchg
cli
subl
xor
incb
mov
xchg
pop
stc
movsb
dec
into
xchg
add
outsl
cmp
push
inc
inc
pop
or
sub
jb
push
in
mov
xchg
outsb
cmc
shrl
push
xor
add
outsb
shlb
push
inc
stc
loopne
mov
pop
push
mov
std
shlb
leave
push
jl
jae
lods
fs
add
add
mov
imul
cltd
jg
push
sbb
inc
insl
mov
push
pop
call
adc
and
xor
fsubrs
dec
insl
pop
les
sub
mov
pushf
mov
inc
and
sti
pop
fldcw
push
loopne
insl
arpl
dec
sub
jb
popf
pop
or
push
cmp
push
jge
sbb
inc
lret
push
and
insl
and
xchg
mov
xor
daa
movsl
push
sbb
xchg
xchg
jl
jae
xchg
fwait
jl
ret
or
jge
dec
fmull
sub
pop
xlat
aad
test
mov
rclb
push
sbb
pop
xor
inc
push
adc
push
jge
mov
or
in
stos
daa
lahf
movsb
push
jp
cs
cmp
dec
dec
push
out
das
stos
je
addb
pop
push
cltd
mov
jb
xchg
repz
rorb
dec
nop
outsb
dec
jmp
mov
push
mov
cli
push
fldcw
aad
lret
insl
int
mov
dec
sbb
xchg
out
pushf
mov
jae
or
scas
sbb
gs
inc
cmp
jnp
mov
repz
mov
into
inc
ret
mov
push
add
outsl
mov
cmp
imul
jp
xchg
iret
cmp
jg
jne
movb
mov
cld
xchg
pop
pop
int
pop
sub
testl
xlat
js
lock
rclb
test
in
ss
cmp
add
pop
das
sti
jecxz
arpl
sbb
cld
stos
out
ret
out
xor
testb
mov
cwtl
mov
inc
iret
push
mov
dec
add
std
imull
mov
sbbl
xor
lds
fs
or
rcrl
add
adc
sbb
mov
ja
xlat
cltd
sbb
lods
mov
sub
lcall
pusha
sub
fsubs
xlat
push
xchg
pop
dec
push
and
aad
add
push
mov
lcall
mov
mov
cmpsb
xchg
test
bound
and
dec
call
arpl
pop
sahf
pop
pop
jle
push
movsl
cmpsl
fmul
mov
hlt
imul
mov
bound
lret
addl
fildll
das
out
xchg
mov
lahf
frstor
adc
jnp
cmpsl
mov
mov
inc
data16
fistpll
nop
imul
popf
mov
lcall
je
dec
divl
lods
mov
repnz
test
ds
mov
mov
push
fwait
jbe
sub
leave
pop
iret
jne
mov
js
adc
inc
inc
and
jle
inc
ret
lret
xchg
into
inc
in
fstpt
ljmp
mov
lcall
jns
sub
cmp
sbb
cld
xchg
sub
and
cmp
addl
scas
js
sahf
jae
xorb
xor
push
js
cmpsl
jb
int3
lea
dec
pop
adc
pushf
add
jno
xor
ror
push
ret
test
hlt
pop
xchg
sbb
add
mov
mov
xchg
scas
dec
pop
add
stos
or
lds
fwait
push
inc
rcll
mov
lods
in
adc
sbb
bound
push
aad
xlat
stos
loop
inc
dec
stos
jle
mov
mov
daa
dec
in
push
lock
add
sarb
out
xchg
pop
out
leave
dec
dec
icebp
ja
dec
icebp
jmp
pusha
sbb
cmp
aam
lock
in
imul
push
stc
or
lods
push
xchg
sbb
mov
add
testl
xchg
in
mov
lock
cmp
jnp
xor
sub
stc
scas
loopne
mov
sahf
sub
xor
lds
icebp
aas
xchg
push
mov
add
pop
add
xchg
xchg
lock
hlt
jae
inc
andl
icebp
lret
stc
xrstor
mov
add
in
int
addr16
fmuls
into
xor
mov
and
mov
enter
cmp
push
cmc
cmp
inc
in
in
daa
add
jne
out
lea
lahf
adc
repz
dec
cmp
sarb
cmp
gs
jae
push
sub
jb
sbb
or
sub
pushf
sbb
arpl
call
movsl
loop
call
ficompl
xor
out
fadds
ds
mov
sbb
aas
clc
mov
test
pop
xchg
repz
leave
sbb
lret
imul
dec
inc
stos
cmpsb
scas
jns
in
lods
add
push
pop
in
repz
sub
sbb
push
push
inc
roll
leave
test
pop
ficompl
lahf
push
fmul
push
push
bound
out
gs
cmc
aaa
mov
mov
int3
addr16
and
iret
push
daa
xchg
sub
pop
adc
jp
imul
enter
inc
imul
js
jle
je
sub
and
adcb
in
jae
divb
mov
inc
jecxz
xor
pop
add
cmpsl
test
mov
repnz
jl
push
jle
imul
push
sbb
push
or
insb
push
inc
push
push
std
std
sarb
cli
push
pop
fs
std
cli
jle
xor
sbb
dec
lret
into
sbb
out
mov
lret
in
ror
push
jecxz
cmp
das
mov
out
push
aaa
push
sti
mov
and
lret
add
xchg
fs
mov
jnp
xlat
test
int3
mov
inc
mov
std
push
mov
jbe
pop
cmp
outsl
push
pop
outsb
ret
sub
inc
loopne
push
and
fsubl
imul
push
pusha
and
sub
out
ljmp
insb
cmc
scas
cmp
bound
or
loopne
mov
jl
inc
loopne
cmp
mov
rcrl
pop
adc
jne
xchg
mov
xchg
sub
cmp
call
push
int3
lret
sarl
sub
jmp
or
stos
sbb
das
es
mov
sbb
movsl
aam
fwait
xchg
je
stos
pop
cmp
mov
mov
sbb
push
arpl
loop
mov
mov
in
xchg
bndldx
xchg
dec
in
out
xlat
fwait
mov
pop
int
es
inc
inc
adc
xlat
test
pop
mov
adcl
inc
xchg
popa
sbb
outsl
call
hlt
push
dec
int
mov
aam
pop
or
add
or
clc
ret
dec
xor
ss
push
xchg
mov
add
push
lock
enter
je
pop
popa
push
gs
in
add
mov
int
data16
ds
test
pop
xorb
fisttpl
in
jp
mov
mov
adc
ret
xor
aas
and
mov
pop
cmp
add
pop
jge
push
dec
jbe
cld
xchg
add
into
mov
pop
inc
cmp
xorb
sbb
aaa
mov
inc
lret
hlt
mov
clc
setp
adc
cmp
out
or
sbb
mov
mov
and
cmpsb
popf
out
sub
ss
dec
dec
fs
and
pop
mov
mov
cmp
sub
test
loopne
jbe
int3
jbe
mov
fadd
push
xchg
inc
std
mov
dec
sub
mov
sbb
sbb
ja
mov
jmp
mov
jnp
aad
jp
or
pop
pushf
mov
call
fdivr
loop
pop
popa
out
lea
bound
mov
push
pop
adc
ss
call
cli
loope
mov
pop
ljmp
pusha
subb
push
pop
ds
sub
jg
in
test
cli
testb
bound
stc
js
inc
xor
clc
pop
or
fsts
insl
bound
scas
mov
pop
insl
cmp
and
jbe
jne
mov
pop
adc
xchg
jae
fldt
mov
sbb
inc
pop
cmp
xor
mov
int3
mov
subl
fsubrp
cmp
pop
adc
in
mov
aam
or
sahf
mov
scas
test
sbb
jns
jnp
test
insl
jb
pop
push
ds
mov
ljmp
push
aaa
loope
out
ret
stc
xchg
lods
or
stos
lock
imul
repz
jae
mull
or
lods
addl
jle
push
add
sbb
pusha
or
dec
add
mov
pminsw
or
outsb
inc
icebp
jne
ret
lret
int
push
or
sbb
cmpsb
ljmp
dec
and
push
aad
out
loopne
in
xchg
mov
fsubr
shrl
rcl
in
ss
and
test
inc
and
icebp
push
lcall
or
pop
mov
and
fildl
xor
andl
mov
sub
mov
orl
and
and
dec
push
sbb
sbb
mov
inc
xchg
push
mov
push
and
orb
xchg
push
and
test
push
xchg
es
test
xor
rolb
repz
cmp
fstpt
pop
push
icebp
out
cmc
fsubs
lods
mov
sti
xor
dec
sub
std
xchg
lods
je
bound
sbb
pop
ret
and
adc
cmp
in
mov
pop
cmp
xor
arpl
push
pop
mov
cmpsb
inc
push
pop
in
dec
pop
sbb
mov
mov
mov
jne
je
xor
sbb
lret
mov
or
mov
leave
loope
lods
test
ja
stos
push
insb
adcl
dec
cmp
pop
jg
add
scas
and
aaa
xor
sti
ljmp
sub
mov
loop
push
dec
mov
pushf
ficoml
cmp
popa
pop
sub
lret
in
xchg
scas
mov
icebp
dec
outsl
and
loope
repz
add
or
cld
insb
imul
sbb
imul
xchg
cmp
js
ficomps
cmp
lret
jmp
sub
jne
test
test
push
cmp
idiv
mov
mov
mov
aaa
ss
dec
inc
push
add
bound
mov
inc
adc
shl
pop
mov
or
dec
ret
mov
mov
ds
jae
dec
negl
jne
mov
inc
insb
sti
mov
add
sbb
mov
ficomps
lret
xchg
enter
mov
loopne
insb
pop
inc
sbb
into
repz
or
jne
adc
mov
inc
mov
aaa
add
mov
pushf
lret
jp
xor
adc
adc
xchg
loopne
cs
test
cmpsb
adc
shrb
dec
jns
adc
or
adc
fistps
call
adc
adc
jbe
pop
sbb
mov
or
int
cmp
mov
gs
cltd
arpl
xor
popf
add
dec
jecxz
pop
push
xor
mul
sub
sti
je
pop
lds
cs
mov
mov
mov
sbb
ret
sub
add
outsl
sub
lea
insb
mov
inc
cli
lods
mov
lock
mov
xchg
rorl
mov
push
lcall
cmp
sub
insb
push
call
jns
dec
xchg
scas
or
in
or
pop
mov
push
jae
scas
lea
outsb
out
lds
leave
outsb
bound
sahf
dec
dec
adc
lods
test
iret
int
mov
mov
and
lods
or
push
jno
imul
daa
add
out
pop
mov
mov
fistl
scas
jecxz
cs
jge
pop
cmp
dec
movsl
mov
sbb
fstpl
orps
cmp
ret
ret
das
pop
test
aam
int3
out
or
sub
sub
push
mov
shlb
imul
out
popf
mov
clc
add
fsubrl
adc
push
fmul
sti
cmp
cmpsb
cmp
daa
mov
jmp
cwtl
fistpll
xorl
sbb
sbb
lret
xchg
loopne
pop
shll
in
bound
push
ja
and
popl
cmp
sti
sbb
call
dec
or
mov
in
mov
leave
lahf
push
add
repnz
push
fstpt
and
and
adc
ja
mov
ds
jae
out
mov
aas
in
or
inc
int3
rcrb
lds
insl
gs
dec
aad
out
fsts
sti
clc
xchg
fwait
sub
enter
push
adc
pop
mov
or
pop
jl
pop
jb
shll
into
lret
mulb
movsb
cwtl
mov
adc
sti
and
std
xchg
mov
out
dec
rcrl
sbb
jnp
mov
in
in
imul
mov
lahf
jae
movsl
iret
fcompl
cmp
out
mov
aaa
push
jno
adc
sub
inc
or
sub
and
xor
popa
out
pusha
dec
xor
or
dec
pushf
in
mov
and
pop
loope
xor
loop
push
sbb
jge
push
fimuls
xor
xchg
or
rclb
insl
inc
mov
add
and
cmp
add
xlat
jecxz
adc
iret
inc
or
dec
sbb
shll
pop
inc
push
lods
adc
into
in
leave
xchg
inc
loopne
xchg
psllw
jp
mov
adc
pop
mov
jl
mov
cmpsl
cmp
xor
push
dec
xor
outsl
push
inc
jp
inc
jg
arpl
frstor
and
add
jo
icebp
loopne
jno
pop
push
push
and
addr16
push
addr16
adc
out
mov
movsl
lret
pusha
cmp
insl
iret
sub
or
sbb
jno
jae
call
mov
xorb
mov
outsb
setne
or
inc
dec
rorl
and
mov
jmp
iret
mov
push
inc
and
rorb
sub
int
nop
mov
or
mov
adc
pop
iret
or
mov
inc
sbb
push
xlat
push
frstor
lods
xor
decb
inc
popa
into
or
enter
push
les
in
push
jmp
cltd
cmp
sub
cmpb
movsl
sbbb
enter
inc
mov
mov
or
cmp
pop
xor
inc
insl
mov
sar
es
jno
pusha
out
or
out
imul
bound
xchg
pop
and
mov
mov
xchg
les
pushf
pop
pop
das
gs
lock
fnstenv
daa
fists
dec
iret
pop
cmpsb
stos
inc
cli
hlt
scas
orb
and
rol
sbb
xor
stc
aas
jns
pop
xchg
cmp
and
hlt
and
cs
lock
push
inc
call
cmp
movsb
les
pop
and
test
pop
sub
mov
es
in
pop
mov
adc
or
ret
pop
cmp
sahf
or
xor
mov
xchg
push
mov
and
xlat
mov
push
ja
cmpsl
push
mov
lods
jmp
clc
cmp
imul
cwtl
cmp
inc
pop
sub
jle
xchg
jne
add
mov
jecxz
lds
sbbl
cmp
imul
xor
fdivl
pop
pop
std
mov
das
adc
pusha
cmp
mov
pop
xchg
adc
insl
jmp
in
fnsave
add
push
cld
mov
stc
or
ret
icebp
cmp
into
int
scas
stos
test
xchg
fidivrs
aaa
shrb
mov
into
cmp
xchg
jnp
xchg
push
dec
testl
cltd
aaa
icebp
lcall
sahf
adc
mov
loope
pop
fs
mov
sahf
push
cmp
fidivrs
xchg
ljmp
sar
aaa
je
dec
fsubrs
in
lea
bound
jl
jae
add
push
arpl
cmpb
push
or
fcoml
push
sbb
push
outsb
jmp
mov
dec
mov
cltd
cli
pop
add
xor
stos
aad
data16
in
xor
xchg
xor
mov
addl
mov
das
xchg
fsubrl
in
loopne
dec
ja
mov
std
in
mov
mov
fwait
jp
negb
cmp
insl
imul
cmp
or
popa
xchg
pop
pop
push
pop
cmp
cmp
mov
xor
in
xor
dec
fstl
push
test
cmpsb
icebp
mov
lea
pushf
out
or
mov
jb
pop
das
xlat
pusha
or
or
push
cmp
mov
xor
mov
push
pushf
mov
test
and
in
loop
imul
in
cmp
inc
ljmp
lds
mov
inc
mov
mov
shll
dec
sbb
cwtl
or
adc
add
test
cltd
outsl
call
fsubrs
xchg
inc
jl
jno
lds
fdivrl
popa
xchg
cmp
shlb
add
mov
or
xchg
cmpl
lds
push
add
push
mov
push
jp
add
movsb
out
jge
dec
ret
ret
push
xchg
arpl
sbb
or
mov
xor
jb
lods
out
imul
leavew
ja
xchg
mov
add
mov
mov
mov
xchg
sti
pop
test
es
rcll
in
cmp
data16
dec
testl
in
mov
repnz
sub
cli
cmp
je
loop
add
pusha
idivb
in
je
mov
pop
cmp
icebp
cmc
mov
sbb
xchg
pop
mov
scas
inc
dec
je
ljmp
jmp
lret
movsl
push
icebp
jmp
aam
sub
mov
loope
push
mov
adcl
fsubrs
ja
adc
insb
imul
inc
aas
add
loopne
insl
jecxz
jns
lock
cwtl
es
sub
fcomps
hlt
lods
movsl
cld
in
jg
dec
mov
lds
mov
mov
outsb
adc
inc
not
lds
cmpsb
decb
ss
pop
jns
jecxz
mov
push
je
nop
sbb
sbb
out
mov
lods
jbe
jb
int
push
fistpll
dec
mov
push
lret
repz
std
push
pop
pop
testl
rorl
pop
sbb
push
ret
je
bound
jae
out
rcrl
mov
push
push
mov
push
rol
jb
add
mov
loop
aad
popa
pop
imul
jns
sar
pop
mov
sbb
stos
jne
xchg
cmp
and
adc
push
sub
jns
in
adc
loope
add
and
loop
adc
lds
xor
lret
aad
sub
jmp
rorl
xchg
jp
mov
jne
jmp
lock
gs
jb
xchg
push
jg
pushf
fmull
das
mov
mov
pop
out
mov
mov
xchg
je
jnp
push
popf
dec
cmp
dec
mov
adc
xrelease
jge
sbb
xor
and
fstps
popf
or
fdivrp
inc
sbb
jbe
cmp
jb
pusha
fcompl
push
fcmovb
push
dec
mov
test
stos
sub
push
int
jecxz
cmp
add
jne
xchg
cld
ljmp
add
add
sbb
xchg
fldenv
fcmovnb
push
iret
out
pop
dec
cmpsb
push
or
fwait
test
stos
adc
mov
lods
push
push
dec
in
dec
mov
push
mov
mov
adc
in
xor
daa
jg
jae
xchg
negl
adc
adc
mov
jb
pusha
loop
add
dec
add
sti
les
mov
jp
scas
lds
sbb
push
sub
fcmove
xor
inc
or
adc
mov
in
test
or
sub
lock
imul
sbb
imul
cmp
pop
mov
xor
mov
orl
sub
push
mull
mov
push
sarb
rorl
sub
iret
adc
ljmp
or
mov
and
push
int
pop
jns
dec
aas
and
mov
inc
mov
scas
ljmp
jmp
scas
pop
cwtl
xchg
js
outsb
movlps
arpl
lcall
adc
js
lea
xor
pushf
in
out
outsb
dec
sbb
roll
mov
mov
push
pusha
dec
mov
mov
imul
fwait
dec
sbb
xchg
sti
push
sbb
mov
lcall
and
pop
lahf
cmp
pop
out
dec
xlat
stos
sbb
lea
dec
push
push
cmpsb
out
popa
test
jg
fstl
imul
aaa
loope
xchg
adc
lret
ret
add
add
inc
test
hlt
add
sarl
lock
out
insb
jno
mov
test
pop
pop
and
dec
dec
out
sbb
push
sti
dec
inc
gs
push
dec
test
repz
int
or
popf
pop
fdivs
callw
push
leave
mov
dec
imul
mov
mov
mov
mov
adc
pop
idivb
pop
rcrb
sbb
je
dec
fldcw
jge
and
jno
mov
cmp
insb
imull
xchg
jmp
flds
jns
jp
out
dec
fsubrs
pop
push
inc
mov
out
jp
fisubrs
ljmp
xchg
xchg
ficoms
sub
sub
xchg
add
fucom
fildll
adc
fisubrs
push
mov
push
dec
jl
loope
into
lea
cmp
xor
dec
mov
inc
dec
iretw
arpl
fwait
orl
and
adc
xor
pop
jae
out
push
push
add
sub
data16
adc
ret
shr
cs
test
push
jb
js
int
arpl
aam
iret
test
les
cmp
out
add
mov
inc
imul
fildll
xchg
orb
mov
pop
mov
lods
outsb
xchg
mov
lret
outsl
pop
pop
xchg
test
jns
jns
xchg
fs
into
sub
dec
jae
mov
or
jbe
mov
shll
jle
jns
adc
fcompl
mov
out
push
gs
inc
out
das
int
cmp
pop
lods
leave
pandn
fwait
cmp
cmc
std
jbe
sub
int3
add
js
mov
iret
mov
sub
aaa
enter
sub
stc
mov
cwtl
mov
movsl
imul
jge
mov
xchg
jmp
dec
inc
ja
add
xor
xor
add
out
dec
in
jo
fisubrl
fstps
or
push
test
je
out
dec
fldcw
pcmpgtd
mov
in
loop
pop
dec
dec
fstpl
in
rcll
xchg
cmp
sbb
ror
inc
and
jbe
cmp
out
cmpsb
sarb
repnz
int
insb
mov
dec
add
pushf
in
mov
test
je
add
inc
iret
enter
mov
push
sub
out
sbb
lods
stc
pop
int
mov
xor
in
add
xchg
push
out
pushf
or
orb
sbb
jge
pop
pusha
cmpb
cmc
test
test
mov
in
repz
dec
mov
repnz
sub
pop
jno
mov
out
mov
or
sbb
sbbb
inc
mov
mov
or
jge
sub
add
ja
jg
adc
mov
sbb
and
pop
add
xchg
idivb
fdivrs
cltd
cmpl
daa
jo
jecxz
push
test
sbb
lods
sbb
gs
adc
ja
dec
or
fnsave
subb
add
xchg
inc
pop
or
pop
jne
stos
push
out
out
loopne
fisubrs
xor
psllq
das
pop
aas
inc
les
or
mov
fisttpll
call
test
js
cmp
cmpb
adc
jmp
and
inc
adc
test
jno
je
rolb
fnstsw
mov
rolb
ja
pusha
push
aam
push
fwait
popf
js
lcall
inc
sbb
pop
lea
arpl
or
push
rorl
std
das
jb
stc
fldt
pop
gs
dec
cmp
sbbb
imul
lods
mov
out
adc
ret
fnstcw
clc
call
mov
fsubrs
stos
fnsave
push
ret
and
sub
sbbb
pop
stc
addr16
out
dec
pop
xor
jge
sub
popf
xlat
push
sub
mov
dec
dec
mov
rorl
lods
add
ss
jl
rorl
inc
mov
je
jg
push
mov
dec
xchg
jo
xchg
dec
jp
insb
fwait
ret
mov
sub
rcrb
lods
hlt
mov
es
sbb
mov
mov
cwtl
arpl
fimull
adc
fbstp
dec
push
lea
sub
jo
xor
jge
sub
pop
pop
sbb
jmp
inc
mov
das
insl
sub
mov
pop
aam
arpl
push
lcall
leave
jmp
jle
xchg
shrb
mov
subb
add
or
jecxz
pushf
clc
inc
jne
add
or
pop
cmp
in
loop
nop
xor
cmp
pop
add
int3
daa
sti
jp
xchg
test
jo
adc
ss
mov
prefetcht2
outsl
roll
stos
popf
push
outsl
repnz
out
inc
pop
ss
sub
mov
cmp
inc
cmp
and
pop
sti
out
stos
cmp
xchg
add
adc
jns
leave
dec
push
or
adc
pop
mov
ret
sub
jo
mov
ficoml
push
or
jecxz
sub
ja
cld
dec
adc
sub
or
mov
inc
cwtl
mov
pop
imulb
cmp
fnstcw
enter
mov
or
incb
fdiv
in
jp
push
fistpl
jbe
add
clc
push
stc
push
lock
lcall
test
repz
sahf
int3
ss
sbb
test
repnz
fisttps
pop
adc
sub
add
or
mov
mov
sub
aam
fcomip
out
add
cmp
adc
xlat
lcall
pop
mov
and
and
xchg
jno
iret
imul
xlat
push
jge
cmp
inc
and
fcomi
mov
and
clc
sub
cmp
pusha
aaa
add
pop
jo
push
int3
data16
sub
or
mov
movsb
pushf
mov
addr16
fadds
aas
fistpll
add
pop
sbb
lret
rorb
aaa
std
pushf
inc
cmp
jmp
decl
fistl
xchg
lods
hlt
mov
xchg
dec
lahf
mov
adc
add
and
xchg
add
sbb
or
sahf
rorb
mov
in
testl
fsubrs
inc
shll
and
out
idivl
jae
fdivrp
jo
mov
jns
test
push
prefetch
movsl
lret
aad
dec
mov
sbb
scas
dec
cmpsb
ds
and
iret
adc
fidivrl
sbb
cld
xchg
jecxz
std
ja
mov
or
aaa
movsl
es
cli
inc
and
int3
jne,pn
mov
adcl
pop
jmp
and
push
in
mov
rcrb
cmp
pop
out
pop
mov
cli
or
adc
jp
cmp
cwtl
sbbl
push
push
insl
cs
pop
insl
dec
rolb
push
popa
push
pop
xor
jmp
sbb
loop
in
mov
xor
xor
shl
adc
dec
inc
test
int3
push
lock
cltd
cli
int
pusha
mov
push
xorl
add
jge
int
add
and
call
in
stos
out
push
pop
outsl
push
scas
pushl
lods
cmc
or
fistl
fsub
mov
test
jecxz
dec
mulb
popa
dec
adc
jne
je
jmp
call
jnp
dec
push
movsb
ss
addb
bound
hlt
mov
movsl
aad
out
imul
add
inc
xchg
add
outsl
jge
lea
jns
and
adc
add
cmpsb
cld
jnp
pop
imul
sub
inc
inc
les
lret
sbb
sbb
dec
pop
sub
fwait
out
xor
stc
enter
pop
lods
stos
lahf
outsb
pop
loopne
add
outsb
push
je
std
pop
inc
cmp
adc
out
mov
mov
dec
fisubl
test
aad
roll
jle
adc
adc
xlat
xor
or
xchg
adc
and
dec
or
pop
mov
cmp
pop
jg
inc
mov
mov
inc
sub
inc
adc
push
xor
sahf
es
mov
pop
pop
dec
scas
repz
test
testb
lcall
xor
push
bound
dec
pop
add
sub
mov
adc
sub
mov
xchg
out
aaa
xchg
insl
nop
mov
lahf
and
or
cmc
xchg
insl
mov
out
mull
mov
inc
push
push
jns
push
movsl
xchg
cmp
addr16
out
int
push
add
pusha
and
imul
das
mov
ds
ljmp
pop
in
int3
or
pop
cmpsb
sbb
mov
mov
cli
pushf
rcrb
sbb
cld
aas
hlt
dec
push
mov
mov
jp
add
mov
mov
jmp
mov
mov
orl
xchg
pop
dec
sub
mov
rcll
lret
mov
push
icebp
push
dec
cmp
or
or
push
xchg
jmp
imul
inc
xchg
lret
jo
nop
hlt
stc
add
xorb
lods
push
cli
mov
mov
cwtl
int3
movl
daa
mov
mov
hlt
in
xchg
xor
push
stos
rolb
lods
sbb
add
sub
fcoml
xchg
sub
xor
xchg
xor
jecxz
aam
jmp
jmp
mov
mov
pop
sub
sbb
mov
xor
or
stos
cld
cs
mov
popa
cmpsl
roll
rcl
int3
data16
and
es
mov
cmp
rcrb
mov
pop
add
bound
mov
mov
jnp
pushf
lds
imul
nop
dec
and
clc
mov
dec
jne
mov
repnz
adc
and
ja
pop
stos
pop
jb
mov
lea
adc
push
xor
insb
dec
mov
jnp
push
xchg
mov
insb
pop
cmp
clc
xor
push
pop
adc
test
mov
cmp
add
or
shlb
outsb
xchg
lods
cmpsb
jp
lea
outsl
or
call
les
sub
mov
bound
and
sub
mov
roll
jl
and
popf
sbb
cmp
add
pop
mov
negl
push
mov
cli
push
jle
or
adc
xor
add
dec
inc
cltd
fisubrl
in
jge
sbb
lock
ds
imul
xchg
xor
push
inc
adc
lcall
mov
xor
mov
fs
and
xchg
adcb
mov
nop
add
cmpsb
cmc
mov
stos
ret
std
data16
int3
adc
jp
mov
inc
pop
jle
sub
xor
repnz
clc
mov
arpl
mov
cmpsl
jp
dec
mov
jge
cmp
mov
lret
movsb
and
iret
subl
pop
rcrb
inc
xchg
clc
ljmp
sbb
jnp
cwtl
imul
sub
or
jb
out
mov
xchg
sub
insl
fmulp
dec
adc
or
out
call
xor
sbb
mov
call
add
outsb
xchg
mov
mov
loopne
sbb
fdivrl
pop
xchg
insl
scas
cmp
andnps
or
push
xchg
idivl
cld
push
jl
cmp
jp
xor
jae
push
jg
js
jns
jno
jle
and
sbb
jg
push
adc
cmpsb
xchg
dec
mov
dec
pop
mov
mov
push
aam
sub
out
leave
ret
leave
jne
aas
lods
bound
pop
adc
or
lret
cmpb
xchg
mov
pushf
repz
out
shl
xor
sbb
out
xlat
rclb
pop
lret
sub
push
push
in
lret
jge
cmp
ror
dec
sahf
insb
pop
scas
out
popa
mov
xor
sub
xchg
push
pop
xor
fucom
xor
iret
imul
xor
lret
or
push
adc
lret
sub
loopne
mov
pop
sub
stos
scas
not
ficoml
mov
out
or
jo
lret
mov
mov
dec
out
mov
iret
cmp
bound
es
push
enter
es
ljmp
setne
pop
gs
orl
pop
andb
push
hlt
push
jb
cmp
rcll
or
ret
adc
fdivs
sub
cld
fwait
lcall
dec
sbb
jle
jl
add
orb
jns
lahf
ds
sub
xlat
movsl
inc
cmp
outsb
dec
hlt
pop
mov
bnd
mov
add
sarb
aad
movsl
or
icebp
pop
inc
xchg
out
pop
or
fcomps
pop
cmpsb
sub
testl
incb
push
mov
xchg
repz
xchg
test
pop
mov
dec
push
ja
test
mov
sub
cmp
mov
sbb
sub
mov
insl
sbb
std
jnp
ss
jae
mov
push
nop
dec
push
adc
cmp
sbb
insb
add
xchg
ds
sub
and
jg
sub
cmp
push
movsb
mov
push
mov
iret
jle
clc
cmp
sbb
push
mov
sbb
jb
sarl
or
and
add
daa
cmc
xor
lock
js
mov
adc
pop
or
jae
lahf
and
mov
mov
xchg
gs
les
jl
pop
stc
dec
sbb
mov
popa
dec
outsl
scas
in
pop
nop
loopne
mov
je
mov
pushf
mov
xchg
popf
fwait
mov
arpl
adc
or
push
push
or
xor
sbb
testl
push
test
loop
iret
xor
xchg
or
popa
loope
fs
jp
test
add
sbb
adc
aas
popa
fadds
xchg
inc
int
add
or
or
mov
mov
dec
jne
add
sub
mov
iret
mov
xchg
jecxz
xchg
fsts
bnd
pop
loopne
pop
xchg
pop
pop
out
adc
fsts
cltd
xor
and
mov
pop
pop
jmp
outsb
imul
repz
in
shrb
das
movsb
js
call
dec
fs
movsb
pop
sti
inc
mov
clc
lahf
loopne
jg
das
pop
push
or
aaa
mov
jmp
nop
pushf
or
popa
jp
sub
test
int
dec
adc
mov
lds
sub
fs
into
mov
mov
or
xchg
adc
call
aas
fwait
repz
lahf
add
andnps
sbb
in
add
mov
lret
imul
and
inc
daa
in
popf
mov
int
int3
and
jns
and
into
movsb
mov
push
mov
loop
mov
or
cld
add
mov
rorb
int
in
inc
lahf
add
dec
cmc
mov
arpl
fs
pop
mov
jge
hlt
mov
push
inc
pop
inc
out
and
ja
and
pop
pop
cmp
jl
jae
and
xor
xchg
push
cltd
mov
xor
scas
cmc
int
sahf
push
xchg
mov
mov
insl
lea
dec
or
dec
outsb
jecxz
and
in
push
ljmp
dec
sti
jmp
fists
pop
clc
sahf
mov
adc
fnstsw
aaa
arpl
sub
arpl
cld
das
jge
imul
sbb
sub
fadds
jb
filds
ljmp
mov
orb
adc
xchg
mov
cmp
dec
jns
dec
pop
insl
and
filds
adc
ficompl
out
jle
mov
movsb
push
leave
dec
dec
pop
cmp
or
adc
add
xchg
mov
inc
push
lea
pusha
sbb
sub
cwtl
movl
test
mov
jno
mov
shl
orb
sbb
dec
shll
sbb
je
test
fisttpl
leave
jnp
and
push
or
jo
mov
mov
pop
aad
inc
jp
push
sbb
sub
outsb
inc
mov
sub
adc
pop
xchg
cmp
jmp
dec
and
adc
int3
ret
cmp
scas
in
test
push
jle
push
arpl
enter
xor
xchg
inc
lahf
push
inc
repnz
lock
dec
mov
ds
pop
loop
mov
jge
xchg
pminsw
or
xchg
ljmp
scas
dec
or
sub
repnz
loope
ljmp
pop
enter
inc
aas
sbb
pop
aad
pushf
dec
mov
std
push
ds
push
mov
sti
adc
xchg
push
movsl
test
aaa
jle
inc
outsl
cmp
movsl
call
xor
in
mov
fnstsw
lahf
push
or
adc
lahf
int3
push
filds
or
jbe
pop
mov
jne
std
dec
push
adc
insl
scas
pop
mov
mov
jns
xor
sub
data16
movsb
push
sub
fcmovbe
int
sti
xchg
push
cmpsl
xor
daa
scas
xor
and
loope
xlat
mov
pop
notl
leave
or
jae
add
push
dec
lea
mov
ds
or
sbb
adc
stos
fcmovu
jp
xchg
hlt
cmp
sub
mov
adc
shl
mov
pushf
sub
jge
aad
cmp
lahf
mov
int3
jle
jl
in
push
stos
into
stos
add
data16
test
popa
lahf
test
mov
out
int
in
pushf
add
ja
mov
add
pop
fdivs
xorl
push
push
cmp
mov
sbb
subb
xor
sbb
push
inc
jne
mov
movsl
xlat
mov
imul
inc
shlb
mov
lea
loop
mov
jp
sub
aad
clc
orl
jb
push
mov
mov
stc
je
sbb
or
add
test
addl
and
inc
insb
leave
add
lret
insl
pop
std
inc
sub
fucom
jp
xor
adc
jno
cmpb
mov
mov
out
jp
mov
sbb
jne
mov
pop
cmp
sbb
loopne
xor
mov
and
mov
add
jno
or
movsl
add
push
mov
inc
mov
loop
xchg
into
dec
in
aaa
nop
out
loopne
out
mov
pop
push
lret
movsl
insl
push
xchg
xor
or
aas
push
jp,pt
jae
push
and
xor
add
mov
cmp
pop
fneni(8087
das
mov
jno
jno
or
ret
popa
pandn
or
aad
jbe
mov
insb
mov
or
jg
scas
inc
push
rdpmc
cwtl
pop
enter
mov
push
fsts
sub
sbb
lods
inc
gs
adc
mov
loopne
div
and
adc
and
outsb
push
dec
insl
push
cmp
lods
add
jge
icebp
loopne
cmpsl
mov
cmpsl
mov
ja
ja
pop
sbb
ljmp
jno
adc
xor
mov
fdiv
aad
test
gs
pop
mov
jnp
xor
lock
stos
ret
jns
xchg
fcmovnbe
insl
icebp
mov
stc
test
push
in
inc
sub
mov
lret
fistl
cli
out
add
int3
xchg
jmp
or
mov
sub
xchg
mov
mov
pop
mov
push
xor
std
sub
and
bound
test
popa
jb
jb
inc
popfw
pop
adc
jle
adc
arpl
lahf
nop
or
incl
mov
jo
inc
mov
rcll
mov
rcl
or
adc
stc
jmp
bound
inc
inc
loop
aad
sbb
lods
in
mov
loopne
inc
fsubl
sbb
divb
cmpb
cmpl
sub
sbb
pusha
aad
mov
xor
xchg
aaa
jb
mov
mov
lods
lahf
fsubs
push
xor
gs
xchg
iret
push
loopne
mov
dec
mov
push
xchg
fsubrp
add
jge
pop
pop
cmp
xor
xor
or
insb
pop
xor
inc
mov
sub
xchg
push
dec
xchg
scas
jno
mov
rolb
int3
in
adc
rorl
les
enter
fwait
pop
pop
jae
inc
sahf
pop
push
lods
repnz
fists
jmp
ficoml
mov
outsl
cmp
imul
dec
mov
dec
in
mov
bound
push
scas
cmp
syscall
loop
jge
mov
mov
xchg
xchg
das
dec
cmp
sub
clc
push
or
idiv
pop
outsb
mov
sbb
add
pop
outsl
jl
les
loope
fidivs
int3
lret
fbstp
xchg
daa
cmp
add
fsubrl
mov
add
int3
pop
xorb
xchg
mov
xchg
add
jmp
pop
add
sbb
xchg
push
vpinsrw
xor
jb
outsl
ds
out
icebp
sbb
aaa
test
shlb
nop
xlat
cmp
jnp
and
lcall
add
inc
jne
mov
jb
sbb
popf
sub
xchg
inc
in
jnp
stos
mov
in
pop
pop
imul
repz
insl
js
pop
jp
sarl
xor
out
shll
mov
push
cwtl
push
leave
clc
inc
stc
adc
loopne
jo
fsubrs
sti
adc
and
imul
pusha
stos
mov
adc
mov
mov
xchg
push
jecxz
jbe
leave
and
icebp
aad
mov
aad
pusha
hlt
out
xor
inc
mov
mov
push
fdivrs
push
int3
add
cli
shlb
push
push
inc
outsl
out
test
movsl
jecxz
lret
push
add
out
mov
or
xor
adc
shlb
xor
jge
add
popf
in
pop
orb
mov
jbe
and
popa
sub
in
fs
in
xor
push
insb
cmp
inc
aaa
rcrl
sbb
popf
inc
outsb
mov
test
pop
mov
dec
les
or
xorb
pop
orb
lret
mov
sub
pop
dec
xchg
push
cmpsb
andl
repnz
mov
xor
ret
scas
mov
cmp
test
xlat
jp
push
fmul
cli
mov
dec
jl
mov
cmp
cli
push
xlat
cld
aad
xchg
add
cmp
xchg
mov
mov
sbb
jae
sub
mov
ds
je
cwtl
ss
mov
fisubs
jbe
jg
jne
push
jl
mov
jae
push
mov
cmpsl
push
pop
cmp
ja
or
cmp
xchg
jge
mov
and
sbb
pop
adc
push
in
and
mov
adc
sbb
cpuid
push
repz
or
leave
fsubrs
pop
jg
jnp
mov
mov
inc
movsb
leave
sbb
and
pop
ret
outsb
scas
fidivs
push
inc
xchg
and
mov
aas
or
inc
incb
mov
xlat
mov
push
inc
xchg
mov
mov
mov
fstps
mov
lret
inc
out
cmp
or
aam
out
popa
outsl
xchg
jb
push
cmp
xor
jle
mov
and
adc
lea
test
adc
lods
rolb
roll
push
arpl
imul
cmp
xchg
ja
outsl
ret
or
daa
mov
popa
call
jg
test
into
add
sub
jne
jno
scas
push
data16
push
andb
aam
les
mov
or
lret
icebp
sub
push
inc
addr16
jne
xor
jl
aad
jne
or
push
std
adc
into
and
sahf
cmpb
mov
push
mov
repnz
aas
rorb
sbb
scas
popa
cmpsl
imul
jmp
cs
pop
sbb
stos
test
jecxz
cmp
sub
push
jge
push
mov
popa
jle
popa
xor
ljmp
rorl
aas
scas
mov
das
inc
imul
ljmp
push
aam
push
stc
adc
subl
mov
xor
ljmp
and
cltd
mov
enter
dec
test
pop
mov
fimuls
lods
cmp
js
xchg
add
movsl
int
leave
stc
out
lret
out
aam
pushf
jns
dec
xchg
sbb
push
dec
loopne
cmpl
leave
outsl
or
mov
push
mov
mov
jnp
ret
ljmp
mov
lahf
push
pop
mov
addb
sub
jo
sbb
inc
ret
jne
sbb
ds
shl
lds
jge
xchg
popa
pop
cmc
cmp
xchg
insb
test
adcl
sub
mov
jne
sbb
sbb
jle
es
mov
not
sbbl
adc
cmp
push
xchg
clc
std
sbb
mov
in
repnz
fsubl
pushf
popa
mov
add
into
xchg
iret
mov
pop
and
cli
pmovmskb
sbb
mov
mov
pop
shlw
ret
cld
imul
in
enter
jmp
push
mov
inc
xor
movsb
scas
pop
push
fdivrs
push
push
push
mov
xlat
xadd
and
cmovne
es
add
mov
inc
out
xor
mulb
cwtd
pusha
inc
loop
push
rorl
punpckldq
out
cld
movsl
imull
sar
jmp
dec
and
clc
jnp
and
mov
loopne
cmc
addl
movsl
xchg
clc
mov
in
inc
cld
lea
mov
les
dec
xor
sbb
out
int3
xor
xorb
adc
xor
mov
jp
clc
xor
dec
cmpsl
out
sub
ljmp
test
loope
or
aad
arpl
mov
add
push
jp
fnsave
rorb
sbb
adc
and
or
lds
repz
adc
sahf
gs
es
lret
icebp
mov
mov
jmp
add
in
dec
xchg
add
das
cli
xor
and
aad
inc
in
pop
pop
jae
pusha
in
pusha
or
pop
or
xor
fwait
mov
in
prefetchwt1
rclb
aad
fsubs
test
pop
popa
jmp
sbb
pop
fidivrl
push
push
outsl
xor
adc
jne
out
mov
mov
clc
inc
mov
shll
sbb
pop
jnp
push
loopne
pop
ret
out
sub
stc
xor
cmpsb
xchg
xchg
mov
lahf
pop
dec
es
lahf
push
dec
nop
or
test
or
or
movsb
jge
jne
jbe
outsb
subb
xor
arpl
mov
mov
scas
mov
mov
xchg
jecxz,pt
push
sbb
bound
pop
xor
add
out
ficomps
outsb
jge
in
pop
xchg
pop
inc
pop
and
dec
rclb
loopne
inc
lds
cmp
pop
out
and
mov
cs
loopne
test
ja
sub
dec
mov
adc
push
ret
clc
std
cmpsl
sub
jo
in
fistps
adc
loope
hlt
and
pop
lods
push
dec
fstl
ljmp
xchg
adc
jmp
mov
stos
mov
ss
pop
adc
outsb
cltd
mov
enter
push
lds
mov
je
jl
push
ds
stos
cmp
push
lret
ja
rcll
inc
and
test
fs
dec
add
imull
push
pop
dec
fcmovnu
stos
cmpsl
in
jmp
inc
jnp
or
les
push
pop
ljmp
mov
mov
cmp
aad
cmp
cs
shrb
sub
mov
xchg
inc
inc
pop
push
sub
out
mov
push
fwait
mov
and
add
push
inc
mov
rol
or
clc
push
sarl
cmp
pop
jno
xor
les
inc
dec
loopne
jp
cmpsl
imul
add
iret
inc
mov
test
xlat
jmp
movsl
cmp
mov
in
or
mov
ljmp
iret
jmp
arpl
cwtl
cmp
jnp
int3
or
push
mov
adc
adc
inc
fisubl
dec
cmp
push
mov
stos
pop
je
sbb
imul
repz
movsb
pushf
clc
pop
and
cli
js
fs
push
out
cmp
pop
inc
mov
jnp
aaa
inc
cltd
negl
sub
insl
sbb
test
mov
mov
mov
shlb
lods
fbld
inc
es
push
sbb
pop
dec
cld
loop
in
xor
and
mov
push
dec
fcompp
pop
cmp
xchg
inc
mov
push
jb
pop
xchg
ss
push
sub
fcmovnu
xor
jb
je
shr
pushf
dec
icebp
and
loopne
push
adc
iret
xorl
lea
push
lret
jno
push
mov
test
fnstsw
and
repnz
frstor
pushf
in
rcrb
arpl
sahf
push
fbld
mov
out
mov
xor
xchg
insb
imul
jnp
inc
add
push
inc
lock
mov
test
push
xor
daa
mov
mov
test
push
or
pop
lret
nop
loope
jns
and
ss
dec
in
pusha
pop
push
aaa
stos
inc
aad
sbb
mov
iret
data16
ja
mov
push
mov
inc
mov
inc
add
shll
sarl
in
outsb
mov
jecxz
mov
sbb
lahf
int
push
add
push
sub
aas
leave
push
in
xlat
sub
test
xor
inc
frstor
jb
xor
repnz
lods
push
into
or
jg
rcrb
movsb
xor
mov
jbe
ret
cltd
cmpsb
mov
add
mov
nop
pop
and
fistl
shr
loopne
sarl
push
or
adc
jge
cwtl
aam
push
mov
pop
aas
inc
rcrl
xchg
jne
inc
sbb
cwtl
fistl
xchg
popa
lcall
nop
sub
xchg
push
push
test
repnz
hlt
push
jecxz
adc
lea
ret
push
pushl
add
daa
or
mov
push
notl
mov
add
leave
cmc
cmpsb
jbe
mov
call
loop
sbb
pop
lcall
dec
pop
data16
std
shlb
and
mov
inc
jae
dec
xor
add
pushl
mov
mov
or
sub
pop
out
cmp
fistpl
orl
bound
push
scas
sbb
mov
fsubrl
inc
clc
sbb
aas
mov
fildl
xor
or
cwtl
inc
pop
inc
push
push
out
sub
xor
rcll
sub
mov
mov
sub
inc
mov
mov
cmpsb
fbstp
cs
arpl
aaa
shlb
lcall
mov
push
adc
mov
pop
in
mov
jle
mov
pop
pop
scas
xchg
jle
push
rcr
pop
add
xor
xchg
test
mov
pop
ss
insb
xchg
dec
jns
jecxz
clc
add
aaa
xor
cmp
sbb
sub
leave
repz
xor
cmc
mov
repnz
pop
in
loope
sbb
push
jp
sub
cmp
loop
or
imul
mov
sbb
fldt
mov
add
jge
shlb
inc
movsb
into
push
mov
push
xchg
push
inc
test
sub
cwtl
xor
lcall
add
jl
xor
dec
mov
push
mull
out
or
shr
mov
jmp
movsl
pop
adc
mov
push
data16
and
xor
dec
cmpsb
sub
inc
mov
add
push
lds
dec
fwait
xchg
flds
call
clc
shr
sahf
push
xor
popa
mov
or
push
pop
int
mov
lds
mov
add
jl
mov
pop
and
sub
aam
test
lea
int
push
shrb
call
sbb
mov
inc
jmp
inc
push
sub
lea
pop
outsl
xor
test
mov
cmp
lods
les
xor
mov
imul
push
pop
sti
std
mov
jecxz
push
fcoms
jmp
loope
pop
push
dec
in
cmpsl
testl
mov
stc
shrl
out
lret
test
icebp
ljmp
aas
xchg
jmp
outsl
icebp
mov
ds
into
mov
cmp
sub
and
sbb
sub
ret
xor
inc
scas
mov
shll
sbb
fsub
and
dec
add
out
sub
mov
fcomi
outsl
cmp
arpl
arpl
or
mov
adc
mov
nop
imul
push
jmp
clc
mov
jno
or
xor
mov
fs
inc
scas
aaa
ja
pop
jp
or
inc
ret
testb
mov
shl
push
int
imul
int3
sbbl
and
insl
mov
clc
add
jmpw
mov
mov
leave
ret
ret
sbbb
push
mov
mov
pop
loopne
inc
mov
xchg
je
mov
in
pop
pop
mov
cmp
cmp
mov
psllq
push
jecxz
and
fdivs
in
jns
jne
mov
iret
pop
inc
cmpsl
cmpsb
lret
fsubs
test
sahf
pushl
mov
loopne
ret
and
cmpsl
pop
lret
aas
lods
nop
hlt
mov
lods
sub
cmc
sysret
mov
shl
jns
cmc
xchg
in
jmp
mov
cmp
xor
aaa
cltd
sarl
add
icebp
stc
mov
sbb
xchg
enter
cmp
push
mov
jmp
mov
les
fsubrs
aad
add
or
dec
push
sub
sub
dec
cmp
sub
js
cmp
outsb
aas
lods
push
jnp
cltd
mov
or
aas
test
hlt
fucom
or
sbb
imul
bound
leave
sbb
insl
aas
sahf
int
or
dec
hlt
sub
mov
adc
testl
pop
adc
or
lret
enter
xor
lret
lods
imull
insl
loop
js
fucom
sub
mov
sub
sbbb
arpl
dec
jge
ficoml
aam
scas
ss
fwait
jo
shrb
pop
pop
jmp
mov
mov
cmp
ror
outsb
sub
clc
pop
imul
lods
mov
jecxz
enter
cmp
or
sbb
mov
jmp
stc
in
popf
sub
mov
pop
inc
add
scas
xor
add
lahf
in
jecxz
cli
lock
mov
mov
and
cmpsb
mov
cmc
xchg
lods
aas
cmp
pop
push
ljmp
clc
int
jne
insl
je
jno
cli
or
cltd
inc
sbb
xchg
add
insb
das
fisttps
jbe
jle
clc
je
pop
mov
xchg
xchg
stos
sbb
jge
aas
add
fists
push
aad
daa
mov
sub
push
or
repz
idiv
and
data16
sbb
jmp
pop
jnp
adc
pop
sbb
inc
lods
repnz
mov
and
mov
mov
orl
push
inc
sub
stos
inc
push
dec
push
frstor
hlt
std
xor
shlb
lock
adc
test
outsl
shrl
or
push
fldt
sbb
or
xlat
test
stc
add
pop
dec
into
inc
or
jle
repnz
mov
dec
or
movsb
mov
mov
xchg
xchg
pop
pop
push
iret
addl
and
and
add
fs
dec
movsb
cmpsb
addr16
ds
jg
inc
add
pusha
mov
push
cltd
or
or
cmpsl
movsl
mov
leave
shlb
out
xchg
dec
daa
add
jo
mov
mov
pop
mov
xchg
mov
sub
insb
shlb
add
push
pop
and
dec
dec
fnstenv
icebp
xchg
sub
inc
dec
pushw
xor
sub
cmpsl
arpl
push
sub
pop
and
lock
out
cmp
mov
or
int
lock
ret
or
mov
jp
sbb
or
xlat
sbb
insl
xchg
push
add
sub
sbb
shl
js
jo
jle
imulb
cmp
mov
int3
adc
push
jbe
dec
lock
cmp
aad
into
push
xchg
sbb
aam
int3
std
leave
pop
popf
scas
mov
daa
insb
lea
test
outsl
aad
adc
jae
bound
fbstp
outsb
bound
xchg
inc
lods
lahf
sbb
mov
push
adc
aam
pop
jmp
int3
and
in
ds
sti
shl
sbb
pop
in
fistps
std
ds
mov
xor
shr
hlt
scas
icebp
mov
inc
add
enter
test
add
imul
adc
jb
cmp
imul
sbb
jne
sbb
stos
pop
pusha
sahf
add
xchg
rcr
outsl
inc
out
lret
sub
in
int
mov
daa
mov
dec
das
ja
leave
push
sbb
mov
repnz
cltd
jle
jg
jae
dec
lods
clc
add
xchg
aas
sbb
mov
push
xchg
cmp
jne
pop
mov
sbb
mov
fisubs
pop
divl
mov
cmovns
outsb
dec
xlat
imul
movl
sub
int3
add
pop
call
sbb
mov
mov
mov
inc
aaa
cli
popf
xor
dec
xchg
mov
rclb
dec
in
in
push
xchg
fwait
lds
sti
cld
lock
xchg
mov
add
icebp
rclb
mov
sub
enter
in
xlat
push
xchg
mov
jo
pop
cli
std
leave
add
leave
dec
arpl
cmp
sbb
fnstsw
repnz
mov
mov
orl
cli
pop
cmpsb
mov
add
popf
fdivrs
stos
test
push
jp
faddl
xor
xchg
push
cmpsl
mov
push
in
jle
icebp
inc
push
mov
es
cmp
xor
adc
shl
cltd
cmpsl
adc
shlb
inc
dec
fisubl
fcom
push
sub
lcall
insl
shrb
cmc
gs
pop
loopne
sub
pop
add
imul
mov
sbb
xchg
xor
push
jmp
test
mov
scas
imul
std
adc
add
sbbl
pop
pop
repnz
add
push
je
stos
lods
jp
push
xor
repz
jmp
stos
and
push
xlat
rolb
shrb
inc
das
insb
jb
xor
jmp
lahf
outsb
mov
sub
stc
aam
mov
cwtl
mov
insl
mov
jge
outsb
mov
pushf
int3
fstpt
add
fstps
inc
pop
inc
fwait
dec
jae
andl
shlb
mov
mov
jnp
andb
jnp
push
imul
dec
dec
mov
dec
mov
sete
negl
or
mov
nop
dec
xlat
lea
mov
adc
dec
mov
or
into
and
sarb
and
dec
pop
jl
pop
lcall
les
xchg
xlat
adc
push
movsb
std
or
inc
dec
xor
roll
and
into
push
mov
out
std
loop
dec
sub
inc
std
push
fdivs
adcl
jge
insl
outsl
lds
addl
jmp
sbb
dec
lods
or
or
adc
lea
ss
push
pop
hlt
popf
mov
jo
jo
lret
push
in
xchg
push
cmp
pop
pop
cmp
mov
scas
add
cmp
jb
icebp
pop
rolb
dec
leave
xor
out
sub
ss
repz
inc
jp
dec
sbb
adc
leave
jle
xchg
xor
lea
pop
and
gs
inc
out
cmp
pop
or
ds
mov
andb
xchg
mov
pop
mov
cld
cwtl
pop
push
xchg
jge
xchg
lea
xchg
jl
adc
xchg
shlb
and
adc
xor
adc
sub
movsb
mov
inc
pop
push
ret
add
outsl
mov
push
std
jmp
dec
jmp
jecxz
leave
std
xchg
xchg
push
iret
jbe
test
mov
add
rcl
push
cmpsb
cmc
sbb
push
or
mov
es
cmp
xor
imul
je
ret
jo
std
mov
pop
adc
scas
cld
gs
adc
or
inc
adc
scas
mov
xchg
cmc
sub
test
scas
mov
mov
mov
cwtl
mov
pop
movb
int3
imul
int
js
jg
je
xchg
dec
fwait
insl
psubq
mov
cmp
sub
in
repnz
lods
cli
or
jae
iret
dec
adc
int
sbb
xor
xchg
mov
lock
insb
xor
sbb
xlat
iret
jnp
test
jns
pop
or
mov
adc
adc
jbe
loopne
pop
fst
mov
lods
cmp
popf
xchg
pop
shll
movsb
xchg
in
sbb
fstpt
dec
lock
into
xor
mov
lcall
sbb
pop
hlt
sbb
decl
jp
imul
xchg
jb
loop
add
test
xor
xchg
jne
sar
cmp
mov
sbb
out
or
test
mov
pop
stc
sub
iretw
add
js
ss
jg
jae
dec
arpl
push
in
mov
out
roll
data16
mov
repnz
scas
out
movsl
faddl
aad
add
cmp
std
sub
shlb
mov
sarl
push
movsl
push
mov
lock
out
in
pop
or
jne
sarb
sub
popf
mov
cwtl
fildll
dec
test
and
test
mov
pushf
mov
sub
fists
adc
mov
and
repz
jns
nop
push
les
fsub
cmp
inc
lods
xor
in
int
push
cmp
js
jbe
or
arpl
arpl
dec
or
mov
dec
fisubl
iret
push
jp
adc
popa
dec
lret
movsb
into
xlat
pusha
or
sbb
pop
xorb
fsubrs
mov
dec
stos
mov
pop
jecxz
inc
ds
andb
sub
cmp
loop
mov
and
jmp
out
xor
sbb
lods
into
ret
fmuls
aad
cmpsb
push
adc
lahf
mov
and
jl,pn
mov
dec
pop
push
sar
cmp
xchg
out
xlat
movsl
test
mov
or
hlt
loope
fs
xor
sbb
or
lods
mov
or
push
imul
lods
aad
lea
das
mov
das
push
cld
ret
outsb
ljmp
aas
dec
imul
sub
mov
sbb
inc
inc
adcb
dec
xchg
xor
clc
dec
aas
cld
mov
sbb
mov
jns
sti
jno
mov
in
je
imul
scas
lods
or
dec
je
into
jmp
add
shll
jb
cmp
sbb
stos
mov
sub
lods
xchg
fs
rorl
push
int3
rolb
loope
int3
dec
push
cmp
mov
jmp
imul
stc
xor
outsb
outsl
pop
repz
bound
cmp
mov
add
adc
cld
inc
js
cmp
push
inc
dec
jl
xchg
xrelease
jno
mov
xchg
xor
xor
cmc
leave
lcall
imul
inc
sbb
inc
imul
mov
mov
clc
sti
aas
andl
push
gs
jle
lea
adc
shlb
popf
int3
sub
add
pop
and
jno
push
movsl
xchg
sub
mov
nop
jnp
adc
cmp
lods
inc
mov
call
ja
sbb
lods
insb
hlt
pop
in
adc
and
loope
shll
pop
jp
mov
or
sti
xchg
xor
sbb
movsl
jg
mov
dec
fstpl
pop
add
jecxz
arpl
xchg
cmp
push
repnz
aaa
xchg
or
mov
aam
icebp
test
aam
jmp
adc
or
or
addr16
sbb
push
popf
rcrb
or
daa
les
addr16
mov
fwait
mov
jl
nop
bound
pshufw
popa
fstps
sub
stc
mov
mov
adc
into
faddl
scas
mov
rolb
or
cmp
daa
js
iret
iret
or
sub
ret
int
push
jg
xchg
add
rcrl
mov
in
test
xlat
lret
fcoml
pushf
dec
in
mov
outsl
xor
jmp
call
adc
cmpb
stc
fxch
popf
lahf
daa
test
jne
subl
mov
lcall
hlt
jo
in
inc
mov
fdivs
rclb
mov
push
int
daa
push
sahf
jns
mov
jge
dec
and
subb
dec
lret
ja
sti
loopne
and
cmp
pop
jns
add
mov
rorl
dec
int
rcrb
and
mov
nop
repz
aas
inc
jp
or
mov
cmc
lcall
pop
adc
mov
xchg
inc
loopne
in
cld
cmp
push
stos
outsl
cmc
stos
imul
push
cmpsb
cmpsl
xchg
in
add
ja
add
add
iret
push
push
fwait
pop
push
lcall
nop
push
fcoms
jb
aas
stos
in
and
mov
int3
std
adc
or
add
int3
xchg
add
cmp
and
xchg
fnstsw
add
sbb
mov
or
imull
mov
pusha
sbb
pop
add
mov
xchg
insl
fs
scas
std
enter
mov
test
adcb
jmp
push
movsl
out
in
gs
xchg
outsb
sub
sbb
sbb
push
pop
scas
mov
popa
adc
or
add
sbb
pop
fs
in
sbb
add
aam
mov
dec
push
pop
aam
mov
mov
or
add
pop
mov
out
push
scas
adc
ret
mov
ljmp
test
insl
pop
fidivrs
fadd
xchg
sti
ljmp
jge
adc
mov
sbb
sbb
cwtl
push
xor
aaa
into
aas
dec
sub
cmp
mov
jnp
gs
mov
xor
pop
imul
dec
mov
ds
fcompl
xchg
and
popa
cmc
iret
mov
cltd
inc
divb
in
hlt
push
xor
call
arpl
dec
cmp
repnz
or
lock
data16
cmpsl
lea
inc
stos
sbb
arpl
jno
aaa
ja
ds
cmpsb
rcrl
xor
data16
dec
imul
add
repnz
outsb
aam
xchg
call
je
je
fxch
div
loop
mov
aas
jns
cmc
inc
sbb
shl
push
and
add
and
add
iret
adc
adc
sub
imul
popa
std
add
jmp
setns
fiadds
rorb
cmp
cltd
dec
sbb
movsl
maskmovq
push
test
insb
into
and
fldl
mov
out
ret
mov
sbb
bound
add
mov
mov
sbb
dec
mov
pop
test
lods
mov
push
rolb
pop
iret
fdivrl
xchg
cs
adc
mov
mov
daa
test
lahf
and
or
adc
xor
bound
test
bound
xor
and
out
call
out
gs
sti
push
cmpsb
aaa
inc
push
test
adc
mov
cmp
xchg
lock
fnstsw
testl
shl
movsb
je
aam
rcr
sbb
pop
movsl
lea
xchg
xchg
idiv
std
or
enter
push
mov
jnp
push
jb
stc
dec
cmc
pop
dec
addl
aad
addr16
test
sahf
shlb
sub
sahf
push
inc
and
pop
dec
hlt
or
push
loopne
enter
pop
fs
add
cli
cmpsb
adc
fcompl
xor
inc
cmc
dec
cs
sub
negb
pop
in
pop
int3
daa
and
pop
scas
cmp
jg
mov
iret
dec
ja
adc
push
lock
movsl
cmc
sbb
add
lret
lret
fs
mov
mov
inc
adc
and
repz
lahf
hlt
das
dec
pop
sub
test
fs
push
sub
push
cli
movsl
nop
mov
or
sbb
dec
adc
pop
and
push
or
popf
std
ss
subl
repz
or
sub
or
add
pop
push
sub
pop
aaa
loopne
cli
jl
mull
js
inc
je
fldln2
data16
scas
sahf
lods
jl
divl
out
call
movsb
hlt
cwtl
push
jge
sbb
aas
nop
outsb
jns
lea
jge
lods
addr16
std
add
outsb
xchg
cli
jmp
out
pop
in
dec
int
lahf
sbb
inc
jae
cld
xor
mov
mov
aam
xacquire
repz
push
stc
push
cmp
iret
xor
into
fcoml
pop
insl
or
xor
fdivp
pop
or
mov
aam
pop
das
stos
mov
mov
xor
xor
push
imul
ljmp
ret
sbb
int3
repz
push
inc
fwait
mov
add
aam
int
stos
push
pop
in
loope
jle
mov
movsl
inc
lcall
push
push
and
ljmp
xchg
dec
std
sets
pop
insb
pop
xchg
mov
pop
xchg
iret
insl
xor
push
sbbb
jb
sbb
cmpsl
jnp
jne
jo
xchg
js
or
sbb
mov
clc
es
xchg
ja
add
adc
neg
xor
and
dec
or
xor
popa
jnp
push
xor
popa
aaa
mov
iret
sub
ds
dec
pop
push
jae
mov
fwait
gs
xchg
call
fsubr
mov
and
loop
icebp
or
or
lea
int3
pop
push
mov
push
icebp
mov
pop
repz
sbb
outsb
clc
int3
popf
fs
mov
mov
fsubr
repnz
and
andnps
jp
test
fistl
xor
xlat
mov
sub
lret
pop
mov
adcb
pop
jp
test
aas
xlat
stos
call
shlb
hlt
cmp
or
ljmp
lcall
lret
aam
les
outsb
lret
cmp
mov
pop
and
cwtl
push
loope
jl
xchg
mov
fs
insb
jge
adc
test
jmp
inc
jae
out
rcrl
jmp
push
cmpsb
or
enter
mov
shll
jbe
adcb
pop
and
or
mov
cmc
cmp
and
repnz
jae
andb
xlat
shlb
mov
pop
push
inc
repnz
mov
ja
addb
add
mov
sbb
mov
in
mov
popa
push
lea
sbb
mov
fadd
aas
arpl
dec
cmp
push
sarl
and
mov
test
mov
cmovae
push
out
scas
inc
int
push
sbb
sar
subl
fimull
push
sub
jle
jl
inc
sub
je
aaa
popf
pop
and
and
into
and
adc
mov
fbld
scas
ret
push
jmp
jecxz
mov
fidivl
jmp
testb
xchg
sub
je
in
imul
in
or
mov
add
bound
lods
push
push
and
lock
pop
outsl
pop
pop
mov
insl
ljmp
nop
cmp
out
push
jo
aam
mov
xor
arpl
cmpsl
and
add
filds
pop
mov
andl
adc
fsubrp
pavgw
add
in
pcmpeqd
fwait
sub
pop
pop
xchg
mov
xchg
xchg
mov
dec
imul
push
in
jle
leave
add
out
jl
bound
lahf
je
dec
push
jp
push
and
jecxz
shlb
and
mov
fwait
inc
pop
jp
fstps
std
and
cmp
xchg
pushf
fstpl
dec
mov
cmp
cld
je
or
pop
mov
push
sbb
xor
mov
mov
or
adc
int3
lock
js
in
cli
sub
pop
mov
lahf
outsl
fstl
dec
addb
pop
cmp
jns
andb
dec
mov
and
ljmp
mov
jl
push
scas
fsubr
test
ret
and
xor
sbb
imul
fwait
jmp
push
nop
push
mov
insb
fcmovb
lret
pop
bound
imul
shrb
push
or
das
jp
adc
fsts
adc
pop
mov
mov
lods
xchg
mov
xchg
test
call
test
insl
fistpl
dec
xor
add
les
adc
sbb
cmp
mov
xchg
aas
mov
mov
pop
loope
pop
fsubr
aad
shll
movsl
movb
and
nop
mov
xchg
fisttps
test
sarl
ja
push
inc
movsl
dec
out
loope
call
adc
je
add
bound
sbb
out
adc
test
or
int3
icebp
jl
cmp
add
mov
dec
frstor
dec
jle
inc
jmp
inc
pop
fsubr
mov
imul
adc
jecxz
das
fistpll
and
jbe
pop
jge
lret
push
popf
fnstenv
mov
pop
fsts
mov
sub
jl
xchg
sub
fisttpl
bound
cli
and
ljmp
inc
jmp
scas
add
std
and
or
pop
repnz
sub
add
aas
in
repz
jmp
mov
dec
and
push
stc
xor
imul
sbb
xchg
mov
icebp
inc
jp
mov
lahf
test
addr16
sbb
cmpsb
rcrl
or
add
jl
bound
sub
dec
jnp
lret
adc
dec
int
add
pusha
mov
fsubs
das
std
adc
cmpsb
cmpb
mov
mov
inc
jbe
and
sub
mov
sbb
push
adc
aad
arpl
adc
pop
cmpsl
jmp
scas
pushf
cmpsb
dec
repz
aad
xchg
sub
pushf
cmp
push
lea
daa
push
lds
and
sub
adc
add
nop
in
iret
dec
jno
fcoms
stos
xchg
xchg
orb
mov
add
or
fsubr
das
pop
ss
fcomps
ss
mov
ljmp
jae
orl
popa
int3
out
lret
adc
jmp
scas
fdivl
es
dec
lods
mov
rcr
and
add
aaa
mov
and
movsb
pop
lahf
jae
testb
and
xor
shll
add
int3
clc
faddp
std
ficoml
fcmovne
loopne
scas
adc
and
pushf
mov
les
rclb
nop
xchg
sahf
jnp
sub
pop
push
mov
and
xor
xchg
aaa
pop
adc
dec
popa
push
sbb
lds
pushl
sub
fcompl
vpaddusb
rol
mov
mov
cmc
xchg
xchg
dec
mov
xor
pushl
cmp
xchg
cmp
inc
dec
sbb
mov
fstl
call
jge
or
cmp
cmp
int
jno
and
pop
dec
pop
adc
lods
mov
jecxz
popf
jnp
mov
xor
icebp
push
ret
icebp
imul
addr16
xlat
cmc
push
mov
repnz
rorb
cltd
xchg
mov
cmp
cli
mov
xor
pop
stc
jmp
push
call
cmpsl
in
pop
repnz
sub
shl
jmp
jle
xchg
insb
negb
dec
lds
ret
inc
xchg
shrl
lods
dec
cmp
lods
in
std
js
push
mov
jl
pusha
sub
leave
pop
jae
ljmp
sbbl
cld
sub
xchg
pop
mov
cltd
and
test
push
icebp
rclb
push
sub
fsubl
fisubs
wrmsr
aad
sub
mov
fisttps
in
and
cmp
mov
pop
shll
mul
dec
jl
aam
and
and
xchg
sub
jmp
inc
and
and
jae
push
xlat
les
loop
sti
dec
jae
inc
mov
pop
sti
loop
repnz
dec
and
dec
sbb
out
lea
or
fnstenv
inc
jmp
gs
adc
bound
repnz
test
or
icebp
nop
lods
sti
hlt
ret
nop
jnp
xor
stos
xchg
mov
test
dec
adc
aaa
mov
je
mov
insl
movsl
or
daa
ret
pop
pop
sbb
lds
fs
jns
jp
sti
fnsave
ss
jecxz
cmp
push
rol
aad
int
push
outsl
mov
sbb
fnsave
rclb
fbstp
push
inc
fdivrs
xchg
push
ret
inc
jecxz
inc
jg
inc
cmpl
push
jb
jecxz
out
xor
or
lahf
pop
xor
inc
adc
stos
rcrb
daa
adc
and
out
push
jo
pusha
dec
jnp
aad
popf
lret
dec
addr16
es
dec
push
dec
lret
sbb
imul
enter
pushf
xchg
add
insl
movsb
leave
dec
in
sub
scas
cmp
dec
inc
rclb
das
jne
sub
sarb
aas
mov
mov
dec
inc
pop
mov
repz
mov
adc
daa
pop
pusha
data16
insb
fldenv
mov
inc
rorl
out
in
aam
movsl
fldcw
pop
jb
xor
outsb
sti
fsubs
in
cmp
jae
jecxz
lahf
pop
subb
insb
push
mov
pop
jle
mov
jle
repnz
push
mov
adc
ljmp
inc
mov
cmp
inc
cmp
inc
mov
jmp
jo
cld
rcrl
or
xor
jnp
nop
dec
pop
in
int3
test
push
loopne
or
popa
inc
gs
mov
lods
add
inc
mov
cmp
and
or
add
mov
fucomip
das
xchg
int3
xor
pop
add
pop
cli
hlt
jge
lock
sub
ret
or
insb
or
movsb
add
sahf
rcl
cmc
jb
fists
push
or
cs
shrl
cwtl
into
nopl
enter
jl
push
test
sbb
jo
cmp
fwait
inc
aas
mov
addr16
mov
lods
add
mov
je
mov
jle
jbe
iret
movsb
sarl
fs
push
pop
popf
inc
popf
aaa
sbb
out
and
fsubl
inc
std
dec
or
sbb
clc
addr16
and
js
inc
cmp
or
movsb
jbe
iret
js
adc
push
add
dec
dec
jbe
push
les
jl
sbb
xor
inc
hlt
int3
movsl
int3
cmova
scas
ja
sub
sub
mul
mov
bound
subb
lcall
lods
popf
cmp
cwtl
lahf
or
mov
jnp
add
leave
or
fstpt
pop
adc
xor
sbb
lcall
call
imul
dec
ret
mov
clc
mov
movsb
and
subb
lods
jl
add
out
mov
scas
push
mov
mov
loop
pusha
push
sub
push
sub
or
ja
imul
mov
enter
mov
adc
or
mov
xor
sub
xchg
push
in
inc
popf
dec
ljmp
or
and
sub
sahf
cli
push
cmp
xor
xchg
aam
cmpsb
push
adc
jno
mov
mov
mov
shll
cmp
in
jno
fcoml
pop
lock
sub
inc
lods
scas
dec
loopne
test
fst
jae
xor
jl
pushl
sub
inc
aas
sub
push
or
jnp
shlb
mov
jp
pusha
ja
test
test
mov
int
test
xchg
dec
cmp
lahf
xchg
inc
imul
insb
xor
and
outsb
add
sub
xor
cld
dec
sub
je
lret
lahf
push
inc
jae
mov
stos
mov
push
out
aad
inc
pop
pop
xchg
bound
pextrw
dec
imul
push
fs
xchg
stos
mulb
jg
sub
mov
ja
test
iret
stc
in
icebp
fmulp
fsub
int3
jnp,pn
dec
insl
and
xchg
or
outsl
es
sub
dec
xor
add
xchg
bound
dec
jmp
jle
xchg
int
stc
push
rorb
pop
pop
xchg
inc
adc
daa
cli
pop
dec
sub
adc
ret
jle
imul
ficomps
mov
fmull
ffree
lock
scas
aad
add
inc
cmp
pop
hlt
lret
mov
scas
xchg
lea
pop
pop
outsl
push
push
xor
daa
insb
out
jle
xchg
mov
lret
cli
mov
xor
lods
ja
dec
inc
push
xlat
or
mov
mov
div
clc
test
cmp
sub
sub
sbb
aad
push
add
xchg
inc
icebp
xchg
and
jo
xchg
pop
cld
mov
jg
push
jne
mov
push
and
push
jb,pt
fbld
insl
enter
shlb
lret
cmp
and
cltd
xchg
jne
sub
or
and
pop
daa
ret
jmp
mov
mov
mov
flds
addr16
or
hlt
fnsave
loopne
rorb
cmp
out
lret
scas
adc
in
push
sub
inc
psubsb
sarl
mov
inc
mov
xchg
sbb
and
add
scas
adc
pusha
push
jb
cmpsb
or
adc
mov
js
mov
xchg
and
str
jo
cmpsb
adc
xor
mov
testb
mov
mov
subl
dec
inc
mov
ficompl
pop
in
pop
imul
loop
in
std
cld
flds
push
inc
push
jae
gs
and
jg
ja
mov
ss
fcoml
or
pop
in
add
cs
test
add
mov
loopne
add
jo
push
adcb
cmc
dec
jl
bnd
subl
jbe
inc
jno
cmp
sbb
mov
xor
hlt
ss
fstpt
jg
sub
mov
or
xchg
rcll
mov
mov
cmp
jg
xchg
movsb
icebp
mov
sbb
in
jmp
movsb
outsl
pushl
pop
lret
icebp
punpcklwd
and
mov
cmp
dec
lret
adc
pop
std
jo
or
repz
in
push
mov
sbb
sbb
bound
adc
cltd
ss
jle
mov
xchg
repz
fdiv
dec
mov
mov
mov
pop
jp
shll
aad
push
or
sbb
in
test
ljmp
sbb
jl
lea
leave
cmp
cmc
stc
fbstp
xor
fstps
loope
dec
push
mov
rorb
mov
stos
dec
pop
fcoml
rcll
cmp
cmp
stos
test
cmp
or
pusha
mov
loop
jl
inc
test
add
ljmp
in
pop
shrl
and
fldcw
rcrl
push
sti
fs
movsb
sti
je
adc
rclb
inc
lcall
dec
fists
popf
xor
imul
fcomip
cmp
jno
movsl
loop
push
mov
out
dec
push
aas
and
jecxz
jmp
call
imul
lds
dec
cmc
push
leave
test
push
and
jno
mov
cmp
cmpsb
cmpsb
std
inc
or
test
mov
adc
pop
das
or
popa
and
mov
imul
into
sahf
mov
lret
and
inc
and
push
nop
fisubs
cld
add
cld
mov
bswap
mov
cmp
in
into
bswap
insl
mov
sbb
or
jno
inc
pop
sub
iret
xchg
or
lcall
xchg
xor
mov
les
cmc
pop
push
addr16
ds
neg
push
test
imul
pop
push
into
mov
dec
lea
outsl
orb
test
pushf
test
aam
cli
fsts
mov
outsb
movsb
daa
sub
push
scas
xor
dec
pop
clc
sbb
or
jmp
xchg
sbb
xchg
mov
cmp
fsubs
flds
mov
outsl
pop
imul
mov
add
xchg
dec
test
scas
or
xor
jne
imul
inc
cmpsl
scas
adc
xchg
add
aad
xor
ss
push
stos
add
lahf
mov
and
addr16
cmc
fiaddl
push
or
hlt
ja
jns
dec
cmp
aas
vxorps
xchg
mov
jbe
sub
hlt
dec
inc
imul
lock
xchg
jecxz
popf
jae
jne,pt
out
push
sub
xchg
mov
int3
leave
insb
sbb
sbb
mov
stc
inc
mov
int3
lahf
lods
in
add
push
push
or
lahf
cld
xor
js
lds
inc
mov
jle
xchg
call
sub
es
xchg
jnp
and
mov
loopne
push
aaa
int
pop
add
jne
mov
adcb
adc
data16
push
mov
jno
in
mov
fdiv
lock
pop
push
es
loop
test
mov
xor
cs
js
add
jp
aad
push
xor
xchg
ja
scas
xchg
hlt
jecxz
jle
adc
test
pop
add
mov
pop
mov
lds
mov
mov
push
jbe
rep
push
aad
push
add
popa
stos
pop
and
outsb
add
xchg
ja
push
fistpl
mov
dec
dec
xchg
mov
or
xorb
jo
aam
mov
or
bound
sbb
mov
jne
bound
mov
ja
xchg
outsb
int3
sub
push
ljmp
inc
pop
push
xchg
xor
adc
sbb
mov
push
jnp,pn
dec
dec
sbb
push
pop
cmp
clc
roll
rolb
or
jae
mov
test
fisubl
push
mov
ret
cmp
mov
jp
sub
pop
push
mov
sub
inc
arpl
dec
and
or
mov
ds
adc
cli
jbe
cmp
bound
mov
fldcw
jmp
addl
test
xor
xor
add
add
in
inc
outsl
adc
in
lret
cs
movsl
xchg
iret
sub
pop
aaa
xor
popa
xor
adc
test
jae
sbb
test
push
andb
cltd
test
xor
es
mov
sbb
and
lcall
cmp
mov
mov
imul
sarb
je
iret
add
addl
dec
push
stos
ljmp
lock
jg
adc
mov
or
push
stos
rcrb
out
in
test
adc
notl
aam
xor
lock
cli
fwait
aas
sbb
or
dec
aad
orl
pop
mov
gs
pop
outsl
lods
dec
mov
inc
jecxz
mov
mov
lds
pop
movsl
imul
pop
arpl
int3
bound
inc
pop
xorl
pusha
int
push
jno
out
pop
fwait
or
push
test
aas
inc
sub
dec
pop
jae
repnz
out
in
pop
xlat
daa
aas
add
add
sbb
das
xchg
inc
push
cli
mov
dec
inc
jo
jbe
mov
andb
mov
in
xor
mov
push
cwtl
pusha
fnstenv
jae
test
in
jno
pop
pop
sbb
and
push
bound
push
inc
fs
or
sbb
jno
sub
xchg
dec
add
js
lods
pop
stos
mov
mov
push
inc
int3
dec
jns
dec
dec
sub
addr16
dec
jo
sbb
pop
mov
mov
shld
outsb
in
mov
aaa
ljmp
cmp
push
dec
mov
subl
and
call
dec
hlt
lret
fwait
sbb
iret
mov
out
rcrl
jl
sti
cmp
mov
mov
push
pop
xchg
add
xchg
cmp
xlat
cmp
in
lret
mov
sub
cmp
mov
in
andl
scas
aas
and
test
stc
ljmp
sub
daa
adc
or
dec
pop
mov
out
and
push
xchg
mov
divb
nop
js
fimull
mov
adc
mov
int3
jnp
xchg
mov
insb
cld
inc
cli
iret
jle
sub
xchg
or
js
clc
cmp
cltd
adc
mov
pop
inc
data16
popf
push
xlat
test
mov
push
fmul
mov
or
iret
dec
mov
sahf
inc
rol
mov
cwtl
std
popf
cmpsl
stos
and
jmp
repz
arpl
in
pop
out
pushf
loope
push
movsl
inc
mov
cmpsb
fimuls
mov
xor
xchg
in
mov
imul
xchg
outsl
test
ret
pop
sbb
or
inc
lds
scas
pop
pusha
gs
fildll
mull
sahf
stc
pusha
jp
loop
dec
xor
outsl
lock
fisttpl
jbe
rcll
adc
bound
mov
sub
mov
shlb
test
jo
in
and
or
mov
in
jb
pusha
pop
mov
and
jb
mov
mov
adc
inc
xor
ret
cmc
sub
push
adc
mov
push
arpl
mov
add
das
sbbl
stos
xchg
inc
out
rcl
ret
in
dec
mov
das
sub
xor
cwtl
mov
inc
scas
and
into
adc
fadds
dec
or
mov
cmp
std
inc
btc
imull
dec
out
inc
loope
mov
lods
int
and
bound
jb
daa
repz
mov
push
mov
nop
popa
and
sarb
pop
xor
cwtl
pop
jge
aam
jae
shlb
inc
pop
mov
mov
or
pop
adc
jge
mov
dec
inc
mov
inc
jmp
mov
inc
decl
ljmp
ss
lods
xchg
in
mov
div
push
jbe
or
pop
insl
xchg
loope
mov
and
sti
and
inc
add
pop
lret
jb
pop
push
dec
jnp
xor
stos
mov
jge
ds
xchg
ljmp
test
jbe
out
outsl
dec
loopne
jge
add
cmpsl
xchg
push
ss
cmp
xlat
jnp
insb
and
ja
cmp
pop
inc
outsb
mov
mov
mov
jge
insl
mov
popf
popl
jmp
xchg
test
jl
insb
in
mov
inc
and
incl
loop
push
mov
cmp
popf
adc
lock
and
cmpb
mov
ljmp
mov
imul
push
add
xor
call
xor
in
rorb
es
or
and
pop
jle
imul
or
call
jno
and
and
ret
mov
mov
testl
jle
or
mov
pop
xor
cwtl
stos
add
popf
dec
dec
sub
aas
and
inc
mov
add
cmp
push
fldt
ljmp
and
fdiv
and
sahf
imul
xor
rorl
in
ljmp
sbb
fsubrl
jo
push
dec
lods
in
xor
inc
adc
sbb
in
lods
scas
cmp
nop
inc
jmp
test
pop
hlt
je
jle
push
dec
mov
lret
mov
outsl
cld
mov
xchg
mov
orl
push
adc
scas
int
jp
cmp
mov
xor
mov
push
addr16
cmpsb
cmp
pop
test
push
xchg
cwtl
xor
and
aaa
aam
pusha
test
push
fs
idiv
inc
sub
pop
dec
pop
jne
fnstcw
in
dec
aas
sahf
jbe
jecxz
insl
int
cmp
jle
jbe
and
lea
or
shr
inc
cmpsl
push
lods
inc
adc
cmp
sarb
lahf
cmp
mov
add
cmp
jmp
mov
aam
les
inc
pop
lds
lds
dec
sbb
lea
je
daa
lea
and
push
mov
cld
popf
mov
pop
mov
jne
inc
testb
pop
clc
mov
cmp
adc
lods
mov
mov
pop
pop
imul
inc
rclb
fbstp
sub
cld
add
inc
jmp
dec
in
nop
les
outsb
mov
sbb
sub
loope
push
lret
fdivrl
ficoml
ret
fisubrl
sbb
mov
xchg
shrb
push
cmpsl
inc
push
clts
or
repnz
sbb
mov
mov
outsl
shlb
push
clc
pop
loope
pusha
arpl
mov
push
mov
inc
and
xor
adc
mov
inc
test
clc
dec
ficoms
mov
fcoms
pushf
into
xchg
aad
pushf
xchg
fidivs
sbb
jmp
out
movsl
cmp
fidivl
jecxz
dec
int
inc
lock
push
mov
popa
negb
ja
sbb
pop
movsb
jae
xor
movsl
cmp
inc
dec
inc
fildll
jg
jl
push
mov
sub
hlt
jno
fwait
mov
sbb
fbstp
ja
xchg
lcall
dec
outsb
xor
je
cmc
sbb
and
pop
stc
fcomps
push
sar
cli
pusha
rcrb
and
jle
je
sub
sahf
and
cmc
pop
popa
arpl
jae
gs
mov
fs
xchg
xchg
xchg
popf
aam
es
std
or
push
andl
add
inc
adc
or
mov
negb
repz
outsl
xor
stos
rcr
xor
xlat
in
jno
shll
xchg
push
outsl
fs
adc
mov
aaa
mov
or
lea
js
repnz
cmp
jne
lea
cmp
mov
jno
xor
push
out
aas
xor
cmp
ficompl
adc
fsubrs
cmp
sbb
add
inc
jo
mov
addb
push
jne
mov
mov
imul
cmp
jp
lea
adc
adc
inc
fs
jae
mov
movsb
mov
push
xor
push
daa
mov
sbbl
outsb
inc
repnz
sbb
and
cmp
inc
dec
xor
mov
mov
add
lds
fldenv
push
testl
aam
mov
shl
out
cmp
inc
in
out
cmp
or
or
mov
mov
imul
nop
insl
mov
jae
daa
rcl
jae
push
push
mov
mov
cmpsl
inc
out
push
shrl
sbb
lds
mov
repz
cltd
loope
les
pushl
lahf
sahf
lea
cld
orl
jns
fsubrl
adc
in
les
mov
cmpsl
es
push
dec
stos
and
flds
jns
or
or
daa
mov
in
test
pop
rcll
xor
xor
sahf
add
sbb
cmp
iret
mov
sub
xor
jmp
faddp
adc
into
fistpl
test
adc
cmpsb
in
rcrl
xor
out
jmp
add
outsl
add
xchg
outsl
lods
cwtl
clc
mov
arpl
mov
fbstp
jno
push
xlat
xchg
dec
xor
sub
stos
inc
fs
loopne
pop
mov
enter
cmp
sub
call
test
or
sbb
clc
pop
pop
mov
xor
lds
push
pop
hlt
pushf
mulb
mov
sahf
rcrb
sub
and
pop
jp
fldenv
outsb
mov
mov
iret
fs
adcl
dec
aad
xor
sahf
mov
das
jmp
cmpsb
xor
mov
inc
lret
mov
repz
aam
cmp
in
sub
adc
shll
add
mov
dec
mov
stc
scas
movsb
push
stos
mov
xchg
push
jne
gs
out
dec
out
or
fiaddl
test
lds
clc
mov
mov
popa
mov
push
in
push
dec
adc
jb
loope
dec
jo
mov
rcrl
rorl
pop
in
push
xchg
dec
cltd
xchg
xchg
lods
in
jle
in
mov
adc
fsts
sub
mov
outsl
mov
mov
mov
popa
xchg
xchg
cmp
stos
or
adc
dec
xchg
roll
mov
xor
inc
out
xchg
in
arpl
inc
imulb
shll
bound
xor
mov
insb
adc
outsl
pop
or
push
sahf
xor
xor
inc
sti
push
pop
mov
subb
or
cmp
aad
lret
push
lods
cmc
aas
test
mov
cmpsb
jns
cmpsl
filds
add
movsb
mov
cmpsb
test
in
pmaxsw
cmp
scas
ljmp
xor
cmp
or
push
insl
sbb
pop
pushf
pop
adc
jo
inc
sub
lret
sbb
xchg
dec
jp
and
add
daa
fmuls
pop
mov
arpl
lahf
add
push
xor
mov
adcl
subl
cmp
inc
rol
pop
xchg
scas
das
xchg
pop
jns
pop
mov
mov
adc
stos
in
jno
dec
jne
cs
adc
stc
stc
int3
mov
out
push
adc
sbb
xchg
sbb
xchg
jmp
jmp
and
adc
xchg
dec
cltd
cwtl
xor
iret
and
inc
or
orl
cltd
pop
xchg
call
pop
mov
lock
and
push
add
dec
std
add
push
jmp
gs
adc
iret
sbbl
pop
and
jno
push
std
sbb
mov
sbb
or
mov
dec
push
ja
add
sbb
in
fldt
mov
mov
rcrl
sub
pusha
push
lret
into
xchg
xor
push
repz
dec
pop
jg
adc
repnz
hlt
int
push
mov
test
inc
iret
mov
shlb
addb
dec
mov
enter
fisubrs
sub
push
inc
sbb
aas
lods
das
jge
add
adc
std
loop
xor
fsts
jle
lds
push
cmpl
out
xor
scas
nop
push
push
sub
lcall
and
sub
outsb
xchg
mov
pop
mov
or
jo
shl
and
lret
cwtl
cmp
scas
mov
mov
cmp
imul
mov
or
add
movsb
sbbb
popf
clc
cmpsl
out
push
setle
lock
sbb
sub
shll
leave
fnsave
inc
movaps
faddl
dec
cmc
out
inc
in
out
ljmp
adc
rorb
mov
xchg
fisubs
pop
call
push
data16
jecxz
mov
cmc
adc
mov
pop
cmp
stos
data16
cmpsb
hlt
mov
cmc
sahf
inc
movsb
or
jmp
nopl
int3
daa
clc
lret
idivl
mov
pop
sbb
loop
movsb
jmp
call
je
jne
xor
data16
adc
xchg
xlat
mov
lea
cmp
test
jle
cwtl
fidivrs
mov
adc
stos
jg
ja
xlat
rsm
xchg
subl
mov
jge
pusha
dec
fwait
aas
ret
dec
sbb
sbb
data16
add
mov
push
inc
int
add
std
pop
pop
jne
jg
into
add
dec
push
outsb
adc
and
or
xchg
stc
lods
addr16
xor
fstp
and
mov
lea
pop
mov
mov
aaa
mov
sahf
lds
add
pop
lret
adc
inc
in
dec
xor
arpl
mov
iret
xor
loopne
lods
fwait
jmp
aas
fcmovnu
sahf
imul
mov
mov
sti
jecxz
lods
sahf
jge
adc
and
mov
rcll
mov
lea
add
xchg
jo
in
mov
mov
mov
jnp
mov
test
fidivs
insl
sbb
rcll
loop
cmp
or
xor
stos
mov
sub
push
and
int
pop
je
dec
pop
mov
push
cmpsl
nop
cmpsl
aam
mov
xchg
inc
lds
cmp
shlb
jge
xor
mov
push
mov
inc
cmp
in
cli
decb
add
outsb
sub
jnp
sbb
or
pop
or
cmp
push
sahf
sti
cmpsb
fisubrl
in
roll
mov
jl
inc
ds
pusha
sub
and
xor
sbb
stos
jg
sbb
push
push
add
cmpsb
cmc
je
mov
stc
ja,pt
mov
fistpl
aas
add
or
jmp
and
or
nop
adc
adc
scas
xchg
or
out
cmp
cmovne
mov
push
test
dec
int3
setl
testb
js
pusha
mov
xchg
pop
jne
xchg
xchg
xchg
adc
xor
aam
nop
mov
mulb
in
mov
in
xor
loopne
aas
jg
call
mov
inc
jo
mov
xchg
data16
mov
sbb
cmp
xor
jge
xor
adcl
pop
std
mov
mov
hlt
xchg
jge
mov
pushf
fimull
sbb
sub
stos
add
xchg
sub
aam
mov
inc
lret
adc
xchg
cmp
cwtl
adc
or
and
dec
into
pushf
sbb
cs
mov
sbb
outsl
dec
incl
push
jge
mov
jbe
idiv
mov
sbb
les
movsl
adc
ret
push
sbb
mov
and
hlt
je
das
pop
pusha
popa
dec
movsl
ss
out
mov
add
pop
xor
mov
xchg
lods
jp
ljmp
mov
scas
pop
test
add
movsb
lock
bound
cli
inc
adc
jmp
mov
int3
xor
movsl
jl
inc
jg
push
rcll
sub
push
mov
enter
push
dec
leave
fwait
mov
jl
inc
cli
sbb
dec
addr16
call
adc
hlt
ljmp
or
mov
and
or
xlat
xor
sbb
js
popf
mov
ss
leave
ss
xor
adc
out
or
xchg
inc
push
push
sub
sub
jecxz
or
and
das
push
sar
sub
xchg
xor
mov
adc
jae
or
pusha
add
dec
pop
stos
data16
dec
clc
cmc
xor
orl
fs
fcmovu
ds
cmpsl
cltd
adc
inc
xor
enter
xlat
push
ss
test
fadd
lods
jne
divl
push
popf
jmp
loop
push
lods
mov
xor
mov
jbe
cld
arpl
push
mov
shlb
lret
add
sahf
negb
fidivs
cmp
clc
cltd
xchg
xor
test
bound
dec
testl
xlat
shl
push
xlat
push
std
cmpsb
es
sub
pop
outsl
add
xchg
xchg
call
or
or
test
arpl
scas
ss
xlat
jo
int3
adc
imul
pop
in
jb
shrl
pop
cmp
or
xchg
aam
cld
jg
icebp
sub
shlb
les
inc
push
pop
stc
fdivl
adc
push
cmp
mov
add
xchg
adc
stos
fldenv
imul
roll
cmp
push
mov
xchg
cmc
das
fimull
jmp
push
test
repz
mov
pop
shl
ja
stos
ja
shlb
cmc
xchg
jp
push
jns
xchg
jo
cli
mov
icebp
not
mov
test
sahf
cmp
test
imull
outsl
ljmp
add
rorl
xor
icebp
dec
xchg
andl
and
and
jno
pop
fisttps
mov
jo
in
sub
shrb
xor
cld
ret
add
add
lods
add
cmpsb
push
fdivrs
mov
push
lahf
mov
enter
in
xchg
sub
push
inc
shll
test
xchg
imul
adc
xor
inc
inc
cli
sub
and
mov
mov
sbb
and
and
rcr
or
cmpsl
lods
push
mov
push
mov
mov
jb
sub
test
popf
jmp
or
jb
push
pop
cmp
ret
sti
pop
rcrb
and
js
and
cmpsb
stos
pop
ss
scas
rcll
push
and
popa
test
imul
mov
sub
popa
test
in
xchg
pop
mov
gs
scas
cmpsb
les
iret
testb
pusha
mov
jle
test
or
js
sarl
js
push
mov
adcb
call
imul
subl
pop
push
or
divl
mov
add
inc
imul
or
adc
ficoml
out
cmp
add
pop
mov
push
je
mov
adc
push
push
movsl
or
jno
xorb
sbb
jg
xor
cld
call
mov
or
std
pop
xchg
rcrb
mov
jge
jle
mov
test
mov
or
mov
and
cmp
cltd
fstpt
lahf
je
inc
cltd
inc
lret
xor
lahf
push
jmp
mulb
dec
xor
aam
and
aaa
inc
outsl
aaa
test
sbb
push
add
insb
cmpsl
sbb
adc
push
xorl
inc
cmpsb
add
push
sbb
ja
sub
out
int
orl
pop
aaa
or
enter
fisubrl
dec
sbb
jo
pop
lds
les
inc
cld
xchg
cmc
dec
pop
out
repnz
cltd
mov
and
test
mov
add
scas
pop
sbb
pop
aam
inc
repz
xchg
cmp
scas
in
scas
mov
out
cmp
jge
clc
call
pushf
lds
movsb
ss
sahf
mov
and
and
lock
jecxz
xchg
int3
js
fildl
inc
enter
pop
mov
cmp
rolb
loope
xor
xchg
mov
dec
xchg
mov
in
mov
pop
inc
ljmp
pusha
mov
lods
inc
adc
scas
mov
mov
xchg
ret
jbe
and
add
inc
fnsave
add
jmp
aam
dec
sub
test
jle
xchg
sub
cli
jp
push
imul
push
push
push
cmp
leave
mov
pop
loop
xchg
adc
test
idiv
dec
inc
cmp
sbb
pop
adc
add
outsl
fsubr
cs
cmpsb
cltd
xorb
int
mov
add
pusha
add
aas
ja
leave
sub
and
fnstsw
out
shl
mov
scas
cmc
nop
pop
stc
add
jg
and
nop
sbb
repnz
insb
es
add
and
mov
sbb
out
add
sub
sarl
in
icebp
xor
fmuls
or
inc
negb
mov
ja
nop
cltd
xchg
lret
std
push
adc
test
inc
jge
add
les
mov
cli
lods
lahf
cmp
mov
push
mov
push
push
push
cmp
sub
xor
icebp
dec
in
aaa
push
call
push
je
xor
inc
push
xchg
adc
or
dec
lock
adc
andl
orl
adc
shr
lret
sbb
lods
lcall
xor
mov
test
push
fmull
lock
inc
lods
test
outsl
pushf
cmovb
ljmp
icebp
lock
cmp
sti
sbb
cmp
insl
leave
lock
mov
xchg
outsl
inc
cli
sbb
xchg
sar
ja
scas
dec
push
int
dec
lods
mov
repnz
sub
sbb
fsubs
mov
daa
cmc
aad
cmp
pusha
bound
mov
inc
jbe
inc
xchg
outsl
les
push
fidivs
out
mov
or
inc
sbbl
mov
or
jl
jnp
js
popf
mov
aad
imul
adc
fisttpl
xor
push
and
shll
fwait
and
and
js
rcrb
pop
pop
lahf
rorl
dec
icebp
aam
pop
fcmovne
es
xchg
stos
aad
add
lret
addr16
jbe
dec
push
imul
nop
dec
xchg
jnp
inc
xchg
cltd
aas
gs
int3
push
loopne
cld
push
push
adc
add
enter
jns
stos
cmp
dec
sbb
inc
push
imul
push
cmp
dec
push
or
add
nop
adc
lods
sahf
shll
mov
std
ret
in
lds
xor
mov
dec
in
jp
and
sbb
aam
add
rolb
movb
scas
std
inc
ret
pop
or
mov
pop
xor
leave
out
movsb
pop
mov
inc
push
addl
repnz
adc
mov
jge
and
xor
or
jno
pop
in
repz
or
add
sub
lds
cmpsb
mov
xchg
rolb
mov
stos
loop
xchg
jae
cmp
jbe
das
xchg
bnd
stos
sub
pop
pop
cvtdq2ps
stos
mov
subl
into
pop
xor
mov
jp
es
clc
xchg
fwait
jg
dec
or
sbbl
add
sbb
sahf
fnstenv
xchg
mov
jo
mov
sub
aaa
lahf
out
fidivrs
inc
jb
mov
fildl
stc
dec
xor
ret
fwait
cmp
aas
fldl
xchg
adc
sbb
clc
mov
and
push
pushf
mov
pop
in
fsubr
mov
adc
adc
dec
js
cmp
fsts
and
sbb
lock
mov
stos
loop
or
orb
pop
orb
shlb
adc
sbb
pop
xchg
push
adc
test
es
stc
fistpll
mov
bound
or
sbb
ja
mov
cmp
jo
aad
pop
cld
dec
pop
fldcw
out
lds
ret
js
mov
sbb
lds
insl
shlb
jns
jg
iret
mov
mov
or
inc
push
outsl
mov
pop
and
xchg
and
pop
testl
cmp
pop
cmp
push
loope
sbb
mov
imul
push
popf
mov
mulb
aaa
sub
xchg
out
cmpsb
cmp
and
sub
and
mov
sti
pushf
repz
xchg
shl
mov
push
adc
lods
inc
mov
xchg
xchg
stos
and
adcl
push
inc
inc
mov
add
sub
adc
cmpl
stos
ret
jnp
jg
dec
cld
jecxz
aam
push
xchg
gs
cmp
out
cmp
leave
mov
cmp
and
jbe
ret
or
das
push
out
cwtl
and
jmp
or
inc
orb
stos
cmp
mov
arpl
pop
push
and
xchg
movsl
addr16
movsb
dec
jb
test
jge
sbb
cmc
andl
mov
pop
pop
mov
imul
pop
jne
mov
jg
movsb
sbb
xchg
repz
sub
imul
push
in
ja
shlb
mov
or
in
loope
pop
xchg
dec
imul
adc
jnp
mov
loop
out
pop
pop
orb
lods
cmpsl
push
fsubs
aaa
cmc
add
insl
mov
mov
add
push
fadd
ds
ljmp
push
stc
pushf
faddp
es
push
dec
inc
mov
call
jb
sub
sarb
sub
pop
les
out
add
pop
stos
pop
ss
mov
or
arpl
pop
dec
jl
xor
aaa
cmp
mull
add
mov
pop
lock
push
push
add
xchg
push
insb
imul
inc
adc
jns
out
xlat
xor
inc
aas
adc
push
xchg
cld
push
pusha
push
jg
jno
inc
cmp
inc
mov
mov
pop
ret
lods
add
or
mov
adc
or
fcomp
dec
add
xchg
xor
stos
push
pop
addr16
nop
ljmp
lahf
mov
call
xchg
mov
ds
daa
int
mov
sbb
mov
mov
andb
pop
cmp
adc
jl
sub
ja
cwtl
aas
pushf
lret
lcall
pop
jg
cmc
xor
pop
stos
adc
subb
inc
loop
inc
push
imul
mov
ja
test
and
rcr
mov
sbb
cmp
or
les
test
adc
xchg
stc
pop
dec
gs
cmp
rclb
outsb
iret
jne
push
mov
pop
jns
inc
wrmsr
sub
add
std
mov
lcall
jns
add
enter
inc
cli
inc
push
repnz
mov
xor
push
sbb
aad
arpl
add
inc
aam
mov
dec
int
out
sahf
lret
and
rep
cmc
or
mov
push
sub
test
cmp
leave
iret
imull
pushf
mov
pop
or
and
fs
adc
mov
dec
push
mull
fstp
xchg
pusha
pop
vpmulhuw
and
mov
rcrl
pusha
push
xor
fs
jp
nop
ds
aad
jae
mov
sbb
or
movnti
xchg
adcl
stos
inc
xchg
shl
xor
cmp
stos
clc
and
pop
ss
mov
in
pop
push
in
pop
pop
cltd
jp
fsubrs
adc
push
add
sarl
ss
lret
adc
inc
scas
adc
jecxz
xlat
mov
insl
and
jnp
adc
add
shll
lahf
push
jl
push
movsb
fcompl
pop
cmp
push
jbe
mov
mov
lods
in
mov
neg
scas
mov
pop
rol
mov
jle
test
test
mov
xchg
int
insb
repnz
adc
or
lea
arpl
dec
out
or
pop
cwtl
sbb
int
fs
mov
call
adc
mov
adcb
jbe
add
lahf
repnz
incl
cmp
sbb
xchg
adc
enter
or
and
or
shll
push
mov
jbe
sbb
dec
push
lret
mov
lods
imul
pop
cmp
and
fistl
movsl
insb
or
cld
mov
mov
mov
push
aas
xchg
and
jne
jmp
dec
cmp
jecxz
iret
add
and
sub
sbb
xchg
int
lods
jb
mov
fisubrl
scas
dec
dec
mov
fsts
decb
add
loope
arpl
sbb
sarl
xor
int
sbb
mov
dec
or
icebp
popf
jmp
adc
imul
xchg
sti
mov
bound
pushf
imul
jg
dec
sub
scas
ljmp
bound
cmp
call
ror
scas
imul
push
pop
gs
jbe
shl
int3
into
inc
loop
sbb
xchg
movsb
and
push
out
insl
gs
int3
pop
stos
sub
jge
and
and
adc
pcmpeqb
aas
and
jle
pop
cs
dec
ja
gs
inc
jne
fucom
sar
adc
sub
aad
or
adc
mov
out
outsl
fists
enter
fwait
rorl
mov
xor
lret
loopne
mov
les
mov
int
cwtl
or
inc
xchg
les
pushf
sbb
ret
jp
xor
decb
aaa
and
aas
sub
nop
movsl
mov
pushf
insl
fcmovnb
mov
movsb
dec
aad
dec
inc
loopne
hlt
inc
add
adc
pushf
pop
or
jg
push
filds
mov
stos
jp
imul
cmp
dec
mov
sbb
pop
xor
mov
in
push
icebp
sahf
sub
jg
subl
mov
das
add
sub
push
cwtl
leave
pop
and
pop
mov
xor
int3
inc
pop
leave
bsr
cmp
mov
xchg
push
rorl
mov
cltd
pop
movsl
mov
xchg
mov
xor
adc
popf
adc
adcl
jne
jbe
hlt
movsl
sbb
push
incl
sbb
cmc
test
stos
pop
shrb
out
inc
fildl
aaa
mov
enter
pusha
jo
insb
sbb
mov
aaa
lcall
xchg
cs
jnp
adc
and
fmull
clc
sub
imul
adc
or
lahf
rcrl
notl
int
mov
sub
xor
jb
jb
cmp
pop
xchg
and
xchg
out
std
cmp
imul
lret
and
std
or
loop
sub
pop
mov
cmc
sbb
mulb
add
mov
cltd
jno
insb
xor
xchg
sbb
rol
xlat
dec
xchg
pop
xchg
pop
incb
pop
dec
inc
jg
jb
and
fcoml
faddl
sti
push
into
lock
jo
xchg
sarb
pop
inc
das
pop
inc
loopne
inc
scas
cmpsl
xor
mov
test
dec
aas
stos
das
cmp
pop
das
shrl
pop
mov
movl
insl
sbb
xor
gs
jno
dec
cwtl
in
add
xor
in
ljmp
lret
pop
addr16
jg
imul
lret
lea
out
sbb
push
mov
test
cmp
adc
sub
outsl
in
outsl
mov
and
aaa
mov
mov
pop
cmp
sub
mov
data16
or
dec
mov
mov
mov
in
xlat
cwtl
insb
jl
push
leave
les
push
push
cld
mov
lcall
cmp
adc
mov
cwtl
sub
in
icebp
jae
leave
pop
cltd
inc
clc
push
scas
sahf
pop
sub
mov
out
cmpsb
mov
loop
pop
jno
mov
and
andl
rolb
lcall
sti
test
xor
sahf
aam
dec
lahf
xchg
mov
fbld
outsl
scas
pop
outsb
mov
bound
cmpsl
mov
add
stc
test
xor
aas
sbb
and
jae
push
out
cmp
cmp
mov
mov
call
xor
push
mov
sahf
jmp
adc
and
cltd
xchg
cs
addr16
mov
push
aam
cmp
sub
pminub
jl
mov
dec
inc
fnstcw
imul
pop
sahf
xchg
or
mov
aad
mov
jno
lahf
mov
or
pop
mov
scas
jg
repz
fsub
cmp
aas
mov
jnp
sti
nop
push
jge
sarl
int
push
mov
mov
roll
rolb
push
sbb
ficoml
pop
adc
enter
jecxz
arpl
sbb
pop
icebp
lahf
aam
dec
push
push
mull
push
lret
callw
mov
aas
xchg
sub
jge
mov
or
fstps
aad
shl
aad
aas
seto
jecxz
stos
aad
adc
mov
push
push
aas
sub
mov
iret
rclb
inc
or
inc
sti
loope
add
gs
jne
push
xor
pop
mov
subl
fldt
xchg
push
gs
cmp
es
inc
add
jl
loop
inc
das
sub
mov
ljmp
out
dec
daa
je
lret
cmc
dec
xchg
orl
and
repz
xchg
aam
mov
add
enter
cmp
mov
scas
mov
test
inc
sbb
les
fcmovbe
and
xlat
leave
jmp
jmp
aam
adc
pop
daa
loope
sub
sbb
or
ret
loopne
les
fisttpll
dec
jae
sbb
adc
lods
rorb
inc
dec
mov
jne
inc
mov
add
fcomps
dec
xchg
mov
data16
lea
xor
into
faddl
imul
ret
adc
mov
adc
or
out
jnp
loope
jne
mov
mov
cmpsl
mov
cmp
and
mov
clc
fs
ficoms
pop
cwtl
je
xchg
dec
addr16
dec
out
mov
push
lods
add
pop
mov
pop
xchg
add
jbe
scas
test
clc
xchg
sub
in
inc
aas
inc
push
dec
call
adc
mov
je
jl
jp
repz
adc
addb
xor
cmp
cltd
sub
fld
in
xor
cwtl
mov
mov
ds
fs
lss
mov
insl
outsb
jecxz
adc
push
loopne
add
jg
dec
stos
out
cmp
loope
mov
mov
jb
inc
movsl
shlb
add
adc
movsb
cwtl
rolb
pop
add
bound
dec
xlat
push
repnz
add
cmc
sub
mov
lea
jbe
aaa
arpl
sub
pop
xchg
mov
lcall
fnstsw
pusha
cmp
xor
mov
push
add
xchg
mov
and
dec
pop
pop
mov
stc
test
adc
inc
mov
sub
dec
xor
mov
jnp
cmp
pusha
mov
leave
cli
push
push
fdivs
xchg
add
dec
dec
dec
mov
mov
lahf
bound
call
push
stc
sahf
fidivs
insl
repnz
cmpsl
mov
xor
shll
rorb
into
aad
mov
cmpsl
adc
cmp
roll
xlat
icebp
sub
in
popf
mov
jnp
ljmp
popa
xchg
je
xchg
mov
data16
cwtl
mov
mov
sub
jge
ss
xor
push
and
cmp
xor
mov
xchg
fldenv
pop
gs
pop
or
push
push
test
xchg
xor
out
movsl
and
jg
sub
push
mov
pop
hlt
sbbb
mov
inc
scas
sub
push
adc
dec
repnz
xchg
jns
push
lcall
fsubrl
popf
movsb
or
push
or
xlat
clc
and
mov
lods
dec
fstps
cmp
push
pop
cmc
push
rcl
xchg
mov
xor
jbe
sbb
lock
scas
jb
sbb
adc
xor
and
or
or
mov
push
mov
inc
in
adc
call
scas
fistpll
add
out
fcomps
lret
daa
mov
push
lret
outsb
repnz
test
dec
pop
xchg
lock
int3
push
add
negl
xchg
inc
rorb
stc
pusha
mov
xor
jno
gs
int
movsl
jne
pop
daa
xchg
cli
subl
jns
mov
lods
lcall
ret
stos
fs
test
jl
movsl
std
sub
and
sub
rorb
inc
adc
cmpsb
leave
and
into
jno
lock
daa
pop
cmp
aas
addb
push
sbb
jge
pop
repnz
inc
or
xchg
inc
pop
mov
xor
jae
les
leave
sub
dec
pop
fadd
repz
mov
aam
mov
and
inc
sbb
push
and
ss
jno
fmull
hlt
jg
fwait
jne
cmp
fwait
and
cmc
mov
mov
xchg
jnp
dec
mov
jp
xchg
adc
leave
jns
mov
scas
movsb
and
std
inc
fcoml
cmp
mov
pop
nop
stos
mov
sbb
sbb
fisubs
xor
gs
inc
js
bound
mov
or
clc
lret
add
cmp
mov
rcr
mov
mov
aas
orl
add
or
stc
nop
adc
popf
push
xchg
ret
icebp
add
jbe
and
mov
iret
inc
mov
jbe
dec
into
jo
mov
adc
pop
sbbl
cld
shll
mov
bound
jne
pop
movsl
jmp
push
gs
cmp
sbb
adc
ss
push
xor
sahf
test
xor
ffree
cmpsl
cmp
xchg
stos
jnp
jp
bound
leave
mov
jno
jmp
cwtl
pop
dec
lds
bnd
xchg
mov
dec
lods
jmp
in
shrb
imul
xor
inc
ret
loopne
xorb
arpl
stc
or
sub
mov
loopne
into
xor
sbb
xchg
mov
out
pop
and
aaa
push
jl
or
jnp
scas
pop
add
aas
sbb
mov
jmp
aam
pushf
dec
cltd
sub
and
clc
and
push
idivl
push
add
and
dec
push
popf
and
xor
jb
ret
test
dec
scas
push
jp
and
imul
and
cmp
scas
jo
xchg
cmp
adcl
add
jnp
daa
aas
or
aam
loop
and
ljmp
jg
mov
out
pop
lahf
in
inc
andl
cmp
shr
xchg
cltd
mov
cli
and
stos
or
and
andl
sub
xor
mov
mov
pop
pusha
add
sahf
dec
scas
shlb
test
movsl
sarb
sbb
ljmp
cmc
sti
dec
or
or
and
sbb
xor
mov
push
int3
nop
pop
push
mov
cmc
dec
daa
pusha
fisttpll
stos
insl
in
pushf
adc
aaa
adc
rol
and
mov
sub
lret
or
es
adc
loope
repz
mov
aas
fldl
add
xchg
andl
xor
int3
call
cmp
or
shr
adc
push
fs
jno
scas
cmc
es
shll
lock
sbb
jg
fdivl
sti
xchg
gs
enter
test
sbb
jle
mov
adc
pop
cltd
mov
icebp
jl
fst
push
fs
lret
pop
mov
xchg
inc
jmp
test
sbb
push
adc
push
std
je
icebp
jns
xchg
cmpsl
xchg
std
add
mov
jle
ss
std
xor
mov
sbb
xor
js
pop
movsl
movsl
mov
xchg
xchg
roll
les
sbb
pop
pop
dec
jecxz
int
sub
cmpsb
fwait
int3
push
mov
xchg
jbe
lea
cmc
add
mov
adc
addb
inc
push
adc
aad
test
push
fnstcw
nop
xor
push
enter
mov
mov
stos
pop
fs
jg
in
pusha
repz
in
hlt
cmp
ljmp
sti
inc
pop
mov
add
insl
imul
jmp
sbbb
jbe
pop
pop
jnp
or
cmp
xor
enter
int3
inc
sub
lds
sbb
frstor
into
sti
stos
mov
add
test
inc
pop
enter
xchg
incb
xchg
fnsave
ucomiss
pop
ret
flds
xor
outsb
push
enter
dec
mov
lock
clc
dec
adc
in
add
notl
mov
sbb
push
mov
push
lock
jne
dec
inc
in
sti
push
or
test
mov
scas
pop
sbb
pusha
or
hlt
dec
add
jno
pop
mov
add
cli
pop
or
lea
es
mov
mov
jp
cld
inc
lock
jns
loope
andb
arpl
mov
int3
aad
cltd
lret
dec
dec
mov
into
pop
cmp
lret
cmc
call
push
jmp
mov
mov
or
ret
add
popf
xor
js
fisubrs
cmpsb
xchg
jne
mov
test
aam
lret
pop
hlt
push
movsb
sbb
add
push
or
movsb
jne
enter
test
ret
and
daa
les
int3
stos
sub
push
add
in
ljmp
add
cmp
xor
ret
fisttpl
xchg
int3
popa
sub
je
sub
and
insb
cmp
fisubrl
lret
sbb
and
nop
jno
sub
and
lret
js
sub
or
sbb
push
fsubl
xchg
shlb
mov
xchg
jbe
rcrl
nop
push
push
mov
mov
mov
push
imul
lods
popa
out
xchg
sub
push
popa
pop
dec
dec
xchg
out
ja
ljmp
ljmp
pop
sub
pusha
or
push
pop
pop
daa
xchg
push
shr
inc
jne
sub
pushf
andl
push
es
cmc
mov
jl
test
mov
das
popa
test
lret
shlb
sub
into
mov
xchg
sbb
jno
mov
jbe
repz
jg
in
sbbl
iret
ja
cli
xor
cld
lret
loopne
dec
rcrb
cmp
pusha
xchg
pop
jo
adcb
sti
dec
sub
test
imul
call
ret
je
mov
lock
jne
jns
adc
jmp
jp
jns
jg
pop
es
aam
jbe
cltd
sbb
arpl
stos
pop
push
lret
loope
rclb
fidivs
add
push
mov
cmp
push
fldenv
adc
scas
jle
jl
pop
nop
nop
cmp
inc
fwait
lds
and
sbb
jo
mov
mov
addr16
ja
xchg
fucomi
lods
push
imul
arpl
ljmp
sbb
push
mov
push
loopne
sahf
mov
pusha
sbb
test
adc
adc
sub
test
mul
mull
pusha
push
and
jl
sub
and
fisubs
iret
jb
test
jne
cmp
pop
or
add
mov
add
or
and
sub
xchg
mov
cmp
adc
stos
into
les
xchg
in
mov
in
jae
sbb
call
fcmovnu
xlat
and
mov
sahf
in
inc
add
test
imul
push
cld
lods
rorl
test
mov
ss
push
scas
mov
push
push
mov
out
dec
dec
cmp
mov
jns
into
dec
or
jne
mov
test
mov
mov
and
in
inc
or
mov
adc
and
mov
cmpsl
pop
scas
sub
jl
int
xchg
imul
aas
out
das
dec
ss
add
inc
adc
loopne
mov
pop
mov
push
ror
mov
cmpsb
test
ret
sub
stos
adc
xor
icebp
add
or
hlt
add
inc
pop
and
jecxz
cmp
cli
ss
arpl
add
mov
popf
cltd
andb
cmpsb
repnz
sub
into
and
pop
inc
jge
inc
shll
jmp
call
adc
mov
jne
decl
mov
xchg
push
arpl
add
jecxz
pop
aaa
add
xchg
repnz
in
sti
cmp
popf
add
clc
add
jb
fs
sbb
bound
dec
jge
std
and
cltd
xchg
scas
popf
cltd
mov
sbb
data16
pushf
push
push
xchg
icebp
fs
lds
jmp
stc
push
notb
push
sub
sbb
shrb
inc
pushf
insl
dec
pop
and
mov
imul
cli
or
stos
std
sub
lahf
arpl
test
ljmp
sbb
adc
lcall
ljmp
xchg
aam
sub
shlb
jmp
sub
adc
stc
xchg
insl
lock
sbb
pushl
scas
sbb
ja
int3
hlt
jp
aas
int3
shl
jns
aad
fmull
dec
cli
xchg
adc
adc
and
lahf
cmp
clc
fsts
push
mov
dec
or
popf
and
mov
movsb
xor
cmpsl
cmp
nop
xchg
xchg
and
testl
cltd
xor
xchg
xor
sub
inc
out
pop
mov
shr
pop
repnz
add
enter
jbe
add
jmp
insb
out
sbb
cmp
movsl
or
jo
bound
xor
out
jg
jmp
xor
push
and
lds
or
jle
insb
pop
dec
incb
sub
mov
jp
pop
sbb
sub
mov
cltd
aam
sahf
sub
ds
pop
test
imul
inc
imul
js
stc
fisttpll
cmp
mov
push
adc
sbb
mov
mov
ret
xchg
into
mov
mov
mov
jne
into
in
pop
frstor
lcall
daa
push
cwtl
loopne
mov
movsl
xchg
popa
out
cmpsb
cmpsl
repz
ljmp
push
cmp
pop
aad
mov
clc
xchg
inc
lret
and
sahf
jmp
add
jbe
cli
or
mov
jecxz
sub
std
xchg
push
movsb
imul
rclb
movaps
insb
pop
fs
or
xchg
or
into
out
lret
clc
or
sbb
fnstsw
sti
aad
shr
add
sub
bound
mov
dec
dec
inc
cmp
sub
fisttpll
sub
push
mov
jmp
ret
pop
daa
dec
rolb
jno
test
sbb
btr
mov
jge
sub
js
fs
shll
mov
sbb
ljmp
adc
sub
loop
jl
call
sti
pop
or
fwait
push
jne
mov
cmp
idivl
pop
mov
jbe
in
lock
sbb
pop
das
adc
jg
ret
int3
add
ret
jns
std
xchg
mov
fisubs
sbb
mov
call
test
jns
and
xchg
xlat
dec
adc
mov
in
fstpt
loope,pn
jae
xor
cmp
loope
or
sbb
xlat
daa
out
in
adc
ljmp
cmp
mov
lea
sbb
xor
cmp
pop
xchg
insl
xchg
add
hlt
ret
cmpsb
mov
out
add
add
les
cli
jo
mov
sbb
mov
dec
inc
inc
sub
and
loope
cmpl
xchg
lock
shrl
ja
add
fistpl
int3
lahf
jne
scas
sti
loopne
add
mov
sub
mov
aaa
pop
in
movaps
dec
ljmp
cwtl
adc
fsubs
ss
xchg
inc
inc
push
xchg
push
cmp
push
test
jecxz
jo
push
sbb
xchg
xor
jg
or
loop
clc
add
or
sbb
adc
sbb
mov
fadds
sbb
dec
sub
jnp
in
bound
in
in
test
jmp
mull
in
lret
pop
mov
push
lock
dec
scas
pop
loop
outsl
pop
fistpll
pop
in
cld
test
cltd
jge
jb
rclb
adc
xlat
push
pushf
mov
mov
rol
int3
out
rcrl
xchg
lods
out
test
pop
lea
dec
pusha
xchg
jmp
pop
adc
xorl
mov
ja
lods
mov
jp
fstps
daa
sarl
add
and
dec
aaa
xchg
loope
dec
xor
data16
cmp
jle
adc
xorl
jg
mov
mov
insb
mov
aam
ds
pop
adc
xchg
jno
clc
mov
mov
out
js
adc
stos
or
imul
ds
das
inc
adc
faddp
add
sub
insl
jmp
mov
addr16
sbb
add
out
push
fnstsw
pop
add
xor
push
dec
and
pop
sub
std
out
sub
test
xor
dec
insl
adc
shrl
bswap
pusha
shll
leave
xor
push
add
bound
and
lret
xchg
sub
ret
and
sbb
cmc
movsb
in
pop
mov
sbb
cmp
and
mov
out
fmulp
xor
xor
test
pand
pop
cpuid
pmaddwd
jo
jmp
in
mov
fdiv
mov
mov
ljmp
push
hlt
add
ja
adc
push
cli
push
in
xor
sub
mov
xchg
outsl
jo
sub
lret
and
add
push
push
test
lret
mov
ljmp
ds
or
imul
cmc
adc
push
pusha
js
cmp
pop
addr16
or
cmp
pop
xchg
lods
jb
into
push
in
fsubrl
push
mov
movsb
and
jb
inc
sbb
mov
xchg
mov
mov
daa
movsb
xchg
xchg
daa
cwtl
sbb
jb
mov
out
dec
out
adc
sbb
pop
cmp
xchg
test
push
hlt
test
adcl
mov
sahf
outsb
jb
pop
pop
add
jp
pop
stos
ja
mov
push
cli
das
ss
push
mov
adc
loop
es
dec
dec
fsubrs
add
insb
adc
pop
sub
jecxz
jmp
leave
repz
inc
sbb
test
adc
xor
sbb
push
push
ja
in
call
lods
out
mov
add
inc
cmp
pop
push
inc
fnstcw
aam
movsb
lcall
stc
jns
pop
test
cli
daa
in
rcl
push
fimuls
jnp
xchg
ret
mov
and
xchg
sub
divb
stos
stos
mov
xchg
cmp
and
mov
cmp
leave
pop
dec
mov
push
mov
cmp
stos
pop
pop
mov
imul
sub
pop
mov
mov
push
and
out
data16
into
popf
mov
lock
sbb
and
xor
or
fsubs
test
dec
bound
fst
mov
fcoml
mov
or
xor
aam
insb
inc
cmpsl
mov
dec
lcall
lods
jmp
mov
sub
int3
cmp
leave
cmp
add
adc
stos
sbb
cmpsl
sbbl
cmpsl
cld
push
mov
icebp
dec
inc
stc
and
push
rcrl
test
cmp
jmp
sahf
ret
stc
rcrb
cwtl
repz
xchg
cltd
dec
dec
mov
adc
rorb
or
out
les
out
notb
loope
stos
cmp
mov
pop
test
mov
imul
fcmovnb
icebp
stc
aam
scas
andb
cli
sbb
adc
cmp
popa
adc
cmpsl
jb
ja
gs
js
mov
lods
xchg
sub
jns
pop
int
in
adc
dec
jbe
pop
push
inc
test
sbb
loopne
das
dec
jg
cmp
test
push
sub
mov
inc
xor
cld
popa
aam
fidivrs
popf
test
and
push
roll
xchg
fists
nop
or
adc
adc
sbb
clc
ficoml
pushf
adc
inc
xlat
cmpsb
popa
cltd
xor
cmpsb
jns
sbb
jne
rcll
mov
cmp
mov
xchg
sub
out
pusha
in
add
dec
add
mov
xor
or
dec
mov
jbe
sbb
mov
mov
sbb
imul
outsl
cmp
dec
jle
out
push
mov
fsubrl
inc
jge
in
push
movsb
xchg
sbbb
cmp
mov
lcall
outsb
stos
sub
add
shl
xchg
hlt
lods
fsubrl
dec
dec
fs
iret
dec
mov
cmp
adc
inc
bound
mov
mov
cmc
sub
jbe
xchg
xlat
jno
mov
mov
leave
adc
cmp
adc
mov
or
mov
adc
push
sub
in
leave
rolb
popl
out
lods
adc
pop
push
or
stos
inc
testl
imul
mov
cmpsl
shrb
mov
pop
add
add
add
and
push
adc
xchg
repz
mov
iret
dec
mov
push
inc
mov
scas
mov
test
mov
mov
xchg
or
jl
js
cld
xlat
push
xchg
fwait
jle
sbb
out
das
mov
xchg
lea
mov
cmp
cwtl
mov
sbb
dec
test
push
dec
add
dec
lret
out
add
mov
dec
cmp
scas
enter
xchg
or
ds
sbb
xorl
pop
call
mov
xor
sarb
adc
loop
cmp
push
nop
pop
into
dec
push
sbb
inc
jg
inc
pop
out
hlt
mov
rcll
cmp
push
jmp
les
fldcw
jmp
aas
inc
aad
push
inc
adc
jnp
lods
test
roll
arpl
mov
pop
add
push
movsb
jno
in
mov
lods
xlat
pop
xchg
xor
jge
mov
jmp
and
xor
test
xor
fsubp
jne
dec
jbe
jmp
jb
movswl
cmp
mov
mov
inc
stos
add
mov
je
jle
dec
xchg
jno
cmp
xlat
inc
fcmovu
mov
mov
fmull
aam
js
repnz
pop
sub
je
mov
and
lcall
pushf
enter
mov
les
push
mov
cmp
enter
loopne
pop
in
add
lret
mov
imul
scas
dec
sub
adc
push
jb
in
hlt
xchg
lahf
pop
ljmp
cmp
xchg
inc
icebp
add
enter
sbb
in
lods
add
lret
negl
sahf
xor
fs
push
sbbl
cli
cwtl
out
xor
mov
fidivrs
mov
sub
cltd
insl
in
push
push
jno
out
mov
imul
ret
mov
fidivl
in
jle
cmp
pop
je
push
je
add
cs
push
ja
or
mov
dec
ffree
jae
fs
sub
ret
aad
push
xchg
hlt
sbb
jmp
cmp
sbb
fistps
int3
and
sub
mov
sbbl
adc
int
inc
xchg
mov
cli
jle
enter
inc
ljmp
push
arpl
lock
scas
popf
or
xchg
notb
and
fs
mov
mov
adc
cmp
movsb
aaa
lret
mov
sbb
les
inc
test
cwtl
jbe
addb
push
lea
sbbl
dec
mov
loopne
js
subl
cmc
icebp
and
movsl
daa
jmp
pusha
fs
pop
add
lcall
fstps
adc
cmp
adc
and
or
and
inc
cvttps2pi
xchg
test
das
or
sub
cmp
xchg
inc
into
pop
jne
pop
sub
sbb
pop
push
mov
arpl
addb
roll
adcb
sub
push
lods
sub
xchg
mov
mov
sub
sarb
mov
push
cmp
pusha
ss
sub
mov
fidivl
xor
ficoms
or
adc
mov
jo
int
sbb
xchg
rolb
pop
jnp
mov
ss
fucomip
or
mov
xchg
lds
andb
fdiv
dec
mov
push
inc
aaa
scas
push
les
sbb
das
push
sub
inc
cwtl
pcmpeqd
rcll
js
xchg
sbb
push
iret
movsb
jp
nop
mov
jae
push
pusha
dec
shrl
clc
inc
divl
adc
mov
dec
fstpt
jne
sbb
mov
dec
and
cltd
inc
sbb
arpl
pop
xchg
gs
shll
in
push
jl
mov
jno
sub
xchg
cmp
adc
add
test
xchg
mov
jge
hlt
rolb
xchg
xchg
mov
mov
js
mov
rorl
lret
mov
fwait
add
pop
cmp
sub
idivb
jno
das
or
and
push
xchg
mov
rcrb
mov
pop
add
hlt
jl
mov
dec
loopne
jno
out
ror
into
lea
mov
insb
bound
enter
xor
leave
xchg
sub
mov
mov
xchg
outsl
or
add
imul
das
pop
or
inc
and
mov
test
ss
les
add
popa
cwtl
lea
jo
mov
pusha
mov
hlt
or
loope
jmp
fwait
or
mov
sub
cld
fildll
xor
test
inc
lret
cmpsl
push
imul
ljmp
jg
shll
mov
imul
jno
xor
mov
cmp
xlat
mov
jno
adc
les
inc
fdivs
insl
cmp
lds
test
test
imul
mov
loop
and
sub
out
cwtl
jo
sub
lret
aaa
dec
add
mov
stos
pop
testb
sbb
sub
pop
xchg
xchg
in
add
lock
jle
stc
inc
xlat
sbb
adc
xchg
adc
or
pushf
pop
in
out
adc
jge
sub
push
mov
pop
push
sahf
and
sub
inc
cmp
mov
dec
cmp
testb
jmp
out
pop
xor
negl
fs
xchg
pop
in
aam
fidivl
sub
jae
xor
push
ds
popf
test
add
nop
test
dec
push
inc
int3
outsb
cmp
inc
sbb
xchg
xor
inc
loop
pop
adc
and
inc
push
in
push
jns
lods
outsb
dec
in
sub
inc
int
xchg
in
xor
jge
dec
adc
out
cltd
or
cli
gs
insl
pusha
inc
jmp
push
clc
faddl
mov
ja
mov
test
out
mov
sbb
mov
scas
mov
imul
mov
lds
or
pop
fwait
scas
testl
outsl
mov
test
imul
add
test
fucomip
mov
jp
mov
int
xor
add
mov
inc
dec
mov
shl
adc
sbb
inc
or
into
pusha
add
jp
push
andb
ja
outsl
mov
idiv
sub
leave
jae
std
int3
mov
jg
hlt
imul
xor
iret
push
sbb
pop
jp
imul
mov
adc
inc
aaa
cs
jb
lret
stos
pop
dec
leave
xor
jge,pn
pop
repz
fisubs
push
sbb
in
xchg
in
push
jb
lds
push
adc
nop
or
filds
mov
enter
movsl
mov
mov
mov
sbb
mov
sahf
popl
ret
or
les
ret
and
cmpsl
mov
jbe
in
dec
icebp
jmp
jno
jo
jg
je
jae
ret
mov
sbb
xchg
lods
fsts
add
push
add
pop
pop
mov
cs
push
cli
and
and
inc
mov
dec
decl
repnz
sbb
stos
hlt
mov
inc
mov
or
inc
je
mov
enter
mov
or
adc
pushf
addr16
ljmp
out
mov
xor
rcll
movsl
jmp
roll
mov
iret
sub
dec
daa
add
test
add
pop
cmc
add
push
push
and
in
dec
inc
xor
push
jge
in
mov
mov
insl
cli
sub
xchg
repz
pop
mov
sub
add
sub
push
xor
jmp
dec
test
sahf
data16
dec
mov
hlt
inc
stos
xor
stos
or
cmp
aad
rcrl
mov
cwtl
mov
jle
into
btr
ret
dec
shll
mov
lods
and
mov
mov
inc
xchg
nop
into
jle
and
mov
sqrtps
idivl
movsl
mov
aaa
mov
std
rorl
fld
jmp
jg
addr16
repnz
mov
scas
dec
xchg
pop
mov
fistps
add
jbe
adc
sbb
push
ret
dec
jns
xchg
mov
out
dec
jle
lret
cld
sbb
push
enter
cltd
mov
cmp
mov
jo
or
loop
fldcw
orl
clc
ss
lock
popa
xlat
shrb
and
push
sub
testb
es
mov
addl
push
inc
sub
mov
fs
clc
or
fdivrl
xor
fisubs
xor
fldl
mov
sub
jbe
imulb
sbb
lcall
sub
outsl
lret
jnp
or
fimuls
pop
cwtl
add
enter
out
cmc
jnp
push
ds
stc
xchg
rorl
jb
pop
into
mov
cmp
jae
loopne
sti
into
loope
rcrb
ljmp
xchg
test
xchg
test
sbb
adc
sbb
outsb
outsl
into
mov
sahf
lret
mov
push
push
mov
fiaddl
pushf
in
cmp
test
lea
mov
jle
inc
mov
push
xor
shll
nop
mov
cmpsl
test
xchg
xlat
adc
adc
cmp
notb
or
jns
sbb
xor
cli
test
addr16
insl
mov
in
and
repnz
aad
push
je
pop
lock
into
inc
jle
jae
dec
cmp
pop
push
sub
sahf
stos
and
pop
fs
sbb
fsubr
lock
adc
cltd
mov
adc
jecxz
nop
lret
adc
stos
icebp
pop
push
adc
stos
fnsave
fidivrs
pop
xchg
push
aaa
jmp
loop
lea
out
push
cwtl
cmp
xorps
cmp
push
xor
out
or
push
aas
mov
std
sub
icebp
jl
ja
xor
daa
ss
fcoml
mov
sbb
xor
jb
sbbl
movsb
stos
pop
mov
arpl
ss
cmc
push
aaa
jnp
sub
popf
or
enter
js
push
leave
or
add
sbbb
add
mov
add
fadd
lods
test
lock
adc
lcall
and
fcmove
clc
mov
dec
xor
stos
mov
jns
inc
xor
iret
das
int3
nop
push
xor
insb
cmp
pop
int
daa
lea
andl
cld
or
shrl
mov
pusha
mov
pusha
ss
fistps
xor
mov
or
push
or
hlt
fdivr
push
shrb
faddp
mov
mov
and
xor
sbb
sub
cs
stos
sbb
repz
and
pop
fldcw
movsb
mov
or
sti
enter
xor
add
xor
idiv
pushf
xor
clc
roll
and
mov
dec
pop
cs
xlat
add
ljmp
cmpsb
xor
outsb
repnz
mov
jns
xchg
sub
movsb
out
cmp
addr16
scas
or
xchg
movb
mov
pop
loop
xor
ret
dec
pop
in
or
push
out
mov
lret
mov
shll
push
xchg
dec
mov
pop
rcrb
sbb
mov
jmp
clc
xor
xorl
jo
stos
xor
outsb
shlb
adc
jmp
jmp
popa
xchg
ja
xchg
cmpsb
mov
fidivrl
mov
cmp
push
pop
fadd
je
push
xchg
imul
std
inc
rorl
loope
mov
js
aas
ds
pop
call
push
sub
aas
add
arpl
addb
sub
pusha
jae
cmp
mov
jbe
shll
fsubs
jns
mov
sub
adc
xor
or
mov
sub
mov
xchg
out
cmp
xchg
mov
xchg
mov
sbb
mov
cmp
mov
xlat
ljmp
cmp
in
push
or
sub
inc
pop
in
pop
fcoms
testl
in
and
adc
ret
mov
sub
dec
pop
test
jle
enter
pop
adc
cmp
nop
mov
xor
inc
ljmp
sub
filds
cmp
pop
call
cwtl
popa
mov
adc
jge
mov
add
sbb
shll
sbb
xchg
andb
cmpsl
and
sbb
sbb
or
dec
mov
fldcw
pop
dec
out
push
faddl
xor
scas
iret
mov
test
xor
and
jnp
ret
jp
data16
daa
or
das
test
mov
adc
sub
xor
xor
imul
inc
mov
and
sub
divl
adc
adc
push
xor
and
push
idivb
sbb
jbe
push
mov
ret
xor
sahf
push
cmp
or
imul
push
out
gs
jno
jmp
fisubs
hlt
mov
xchg
ljmp
fcompl
and
mov
in
fwait
outsb
jbe
mov
rcrb
ljmp
imul
cmp
insl
movsl
pop
sub
cmp
sysenter
lret
inc
arpl
mov
mov
dec
lcall
mov
add
mov
iret
adc
cld
xor
or
repnz
jb
ja
mov
xor
popf
mov
jae
pop
cmp
hlt
jp
sbb
shlb
in
add
repnz
pop
adc
rcll
fwait
inc
insb
lods
adcb
aaa
pop
sub
jecxz
sub
cmpb
mov
push
stos
mov
imul
push
push
mov
adc
jnp
dec
and
cmpsb
fldt
fisubrl
repnz
adc
in
int
inc
test
dec
xchg
push
iret
jle
adc
push
cltd
into
pusha
inc
xchg
mov
cwtl
dec
sti
inc
mov
ficompl
imull
cwtl
push
and
je
loop
repz
into
xchg
adc
mov
or
jne
push
dec
rcr
push
xchg
dec
cmpsb
or
call
fisttps
sbb
inc
dec
sub
sti
stos
out
sbbb
loope
dec
shll
fsts
in
cmp
shll
cmpsl
outsl
mov
aad
outsl
inc
out
int3
xlat
push
mov
pop
push
out
jns
jecxz
add
lcall
cltd
cmpsl
repnz
pop
sub
lock
clc
add
sbb
loopne
sbb
fisttpll
insl
fmulp
nop
addr16
jmp
imul
fs
jne
aam
pusha
mov
add
adc
sahf
jle
mov
mov
pusha
hlt
pop
sar
roll
pop
loopne
inc
cmp
fnop
adc
daa
mov
sbb
dec
clc
sbb
mov
in
ljmp
dec
insl
icebp
in
dec
jno
xor
xor
or
sti
iret
inc
push
dec
xor
and
mov
adc
pop
fs
jo
fs
cs
sub
frstor
addl
iret
pop
inc
and
and
lock
sar
loopne
sbb
ss
cmp
cwtl
xor
scas
jne
stos
and
icebp
ret
and
addr16
in
outsb
jl
adc
shl
mov
xchg
or
add
sahf
rorb
jnp
mov
out
push
cmp
loope
int3
pushf
xor
lret
xchg
pop
outsl
jb
pusha
pop
enter
add
mov
lahf
bound
test
add
shlb
sbb
flds
fisubrs
test
mov
xchg
push
fs
xlat
pop
mov
inc
out
call
mov
adc
hlt
jb
mov
jnp
lods
stc
in
outsl
cmpsb
jecxz
fwait
mov
pusha
adc
xchg
rcrl
mov
adc
hlt
mov
test
push
into
mov
repz
add
xor
xchg
mov
xor
pop
fadds
cmp
dec
out
inc
mov
mov
inc
jle
xchg
loopne
popa
sub
cmpsl
int
sbb
dec
xor
stos
cwtl
and
aas
mov
and
imul
push
add
shrb
push
sub
or
rcll
clc
xlat
daa
lcall
inc
aad
shlb
loop
int3
les
movsl
or
xchg
mov
dec
cmc
jae
xor
fcomp
ret
dec
mov
add
mov
or
pusha
inc
adc
lret
mov
adc
cwtl
sub
jbe
and
dec
dec
roll
ffreep
dec
fstpt
andl
adc
sbb
inc
jb
arpl
fstpl
inc
xor
xorb
jae
daa
lds
adc
push
mov
sub
sti
repz
imul
xor
stc
mov
pop
cwtl
lock
movsl
push
ja
mov
outsb
push
icebp
enter
ret
and
mov
mov
loope
lahf
subl
les
mov
in
out
js
mov
adc
out
int3
sub
xchg
sbb
mov
push
cwtl
lods
idivl
lcall
sbb
push
mov
sti
ss
xor
mov
cld
mov
jge
sahf
mov
push
mov
xlat
dec
hlt
sub
push
inc
into
lods
cmpsl
aad
sbb
dec
jp
or
andl
jb
pop
hlt
adc
shll
dec
mov
adc
inc
daa
push
jmp
inc
inc
stos
mov
mov
and
dec
cmp
xor
bound
insb
mov
inc
jnp
pop
sbb
push
push
sub
sbb
aam
divl
or
arpl
jge
es
arpl
loop
or
xchg
sti
or
xor
mov
adc
stos
xor
and
or
adc
jbe
xchg
cmp
divl
jle
and
repz
fdivrl
fsin
cmp
jns
mov
mov
andl
jge
cltd
test
out
dec
sub
sbb
inc
test
mov
lods
pop
cmp
cmpsl
adc
mov
aad
popf
sub
ja
scas
pushf
mov
into
rclb
jbe
mov
and
orb
xor
cs
mov
jno
or
rdmsr
adc
xlat
push
pop
outsb
inc
xchg
out
lahf
gs
gs
xchg
rcrl
lret
or
aad
aad
in
pop
sub
push
aas
pop
dec
mov
jg
fidivrs
sbb
sub
cmpb
inc
mov
dec
xor
dec
in
mov
lods
adc
jmp
sub
and
mov
mov
xlat
movsb
mov
xchg
lds
shl
leave
and
cwtl
jae
divl
scas
adc
cmp
loopne
jg
lret
xor
sbb
xor
idiv
daa
out
loopne
xlat
mov
cmp
jbe
push
mov
and
cwtl
fldl
sbb
lret
bound
lds
iret
xlat
cltd
bound
adc
lock
push
cmp
jb
fwait
test
lcall
imul
cwtl
imul
xchg
dec
xor
xchg
mov
inc
adc
dec
push
in
rol
pop
xchg
cmc
scas
mov
mov
pop
cmp
lea
int3
mov
mov
repnz
cld
test
jle
dec
inc
mov
sub
push
loopne
jecxz
mov
and
sub
lds
sub
jne
aas
push
mov
jl
pop
push
jmp
gs
adc
imul
mov
push
jp
sub
jno
adc
xchg
jle
loope
stos
sbb
mov
mov
loope
cld
popf
mov
bswap
push
test
push
add
divl
mov
mov
mov
insb
das
scas
hlt
pop
test
ds
cmp
sbb
add
insl
cld
mov
cmpsb
xor
sti
adc
ljmp
outsl
xchg
add
dec
sbb
subb
in
mov
rorl
mov
jg
mov
test
mov
and
popa
add
adc
lahf
int
mov
xchg
xchg
cmc
imul
cli
imul
sahf
lret
xchg
inc
jb
xor
mov
mov
adc
add
cli
je
jle
or
pop
xchg
fadds
mov
mov
sub
pop
sahf
shll
adc
xor
mov
sub
shrb
rorl
inc
inc
out
inc
nop
scas
test
into
jge
loope
movsl
in
xchg
jne
aas
testl
shll
popf
inc
lea
imull
nop
pop
out
nop
push
lcall
mov
dec
rclb
call
fisttpll
int3
lret
sbb
adc
fcomps
sub
pop
adc
push
fwait
mov
ljmp
ss
xchg
jg
call
ret
sub
lret
cmpsb
clc
mov
addr16
jno
mov
jecxz
push
or
dec
sub
lods
fs
loop
cmp
and
mov
mov
iret
and
and
jbe
mov
lahf
data16
mov
xor
add
fisttpl
push
mov
fcmovnu
mov
and
jne
insb
out
pop
or
push
sbb
stos
gs
mov
xchg
out
cmp
inc
xorl
jecxz
mov
jae
addr16
cmpsl
incb
scas
sbb
lds
inc
insb
xchg
lods
jb
dec
mov
or
pop
arpl
je
jmp
cmpsl
cmc
mov
outsl
fucom
fstpt
pop
les
jno
mov
pop
sub
mov
cmc
xchg
cmpb
jle
or
ja
movsb
out
jne
pop
push
ljmp
fmul
inc
add
popf
lds
adc
lahf
mov
loope
dec
sub
pop
subb
je
sbb
sahf
xor
rolb
sti
flds
pop
pop
mov
sub
outsl
add
cld
aad
mov
mov
cmc
jp
mov
daa
add
add
aas
dec
outsl
loopne
dec
test
add
cmp
dec
fmull
mov
mov
js
sbb
sub
imul
and
sbb
inc
push
cmpl
sub
dec
pop
cs
aaa
inc
movsl
fdivr
insb
aas
out
lods
pop
add
mov
mov
cmpsl
sbb
rcll
addb
cmp
sbb
mov
push
mov
ljmp
cmp
imul
iret
clc
adc
test
loope
les
arpl
andl
push
or
movsl
ds
popa
mov
sbb
cli
cmpsb
cmpsl
cmp
xchg
xchg
std
mov
mov
cmp
xchg
pop
outsl
sbb
imul
daa
inc
sbb
or
pushf
xchg
mov
and
shlb
cmp
mov
sub
sbb
xlat
test
ficompl
test
popa
loop
cmpsl
pop
dec
ret
inc
adcb
jle
jecxz
xor
scas
pop
in
rolb
test
adc
push
push
push
add
add
and
roll
fdiv
into
push
mov
sub
and
out
jbe
ret
test
das
mov
jp
mov
fsts
lods
je
xor
jno
fsubrs
sbb
dec
push
jns
int
lods
inc
fldl
in
mov
mov
mov
int3
jns
mov
mov
add
das
popf
cwtl
iret
shl
into
add
adcl
adc
xchg
sbb
test
aaa
pop
cmpsl
dec
pop
adc
dec
loop
stc
and
or
pop
sbb
jno
lds
insl
inc
mov
mov
push
fnstcw
leave
dec
add
mov
fnsave
out
loop
dec
test
inc
cltd
and
lahf
rclb
sub
pop
cmp
dec
sbb
push
idiv
mov
repz
sti
loopne
das
pop
out
xor
adc
stos
frndint
pop
or
scas
ret
jnp
inc
inc
sahf
clc
xor
out
imul
sahf
insb
cs
clc
push
adc
sub
xlat
popf
mov
in
dec
xor
mov
outsb
int
mov
mov
stos
dec
sahf
adc
xor
or
adc
sub
rcrb
fadds
scas
xlat
xchg
in
cmp
out
add
jne
or
cmc
pop
call
int
mov
mov
cld
jb
push
sub
imul
add
test
insl
mov
adc
pushf
sub
xchg
lock
pop
jbe
cmp
push
fdivrl
inc
xor
in
leave
mov
fwait
shrl
jne
dec
dec
lods
adc
adc
stos
mov
dec
cli
and
jo
mov
mov
dec
add
jb
xor
add
dec
mov
rcrb
push
mov
adc
lahf
ds
jae
or
mov
jge
shl
sbb
cli
dec
ljmp
enter
dec
jno
sahf
repz
xchg
movsb
mov
xchg
jbe
push
pcmpeqw
add
add
mov
or
jge
imul
outsb
jbe
rol
mov
stos
out
addr16
cs
sub
or
inc
cmp
dec
cmpsl
rcrb
lcall
adcl
push
push
scas
loopne
push
and
loop
inc
bound
ljmp
insb
and
mov
lret
in
pop
xchg
push
loopne
jmp
jo
es
jno
adc
imul
xchg
push
lock
movlhps
movsl
push
jbe
or
push
addr16
lret
push
in
mov
pop
adc
lds
xchg
lret
jle
lret
adc
sar
push
arpl
fs
cmp
sbb
stos
popa
loopne
out
ret
adc
mov
xchg
sbb
push
adc
scas
imul
out
or
sbb
and
push
pop
iret
hlt
mov
jl
or
out
fisubs
xorl
add
dec
inc
ficomps
lea
adc
pop
fmuls
cmp
xlat
cmp
sub
dec
push
sbb
fisubrs
inc
aaa
mov
jo
addb
or
or
jp
push
out
mov
inc
mov
stc
xchg
les
sbb
push
or
sahf
mov
sahf
in
mov
shrb
add
inc
cmpsl
scas
hlt
pop
enter
negb
jb
ds
leave
cmp
xchg
repnz
sbb
pop
adc
mov
jmpw
xorb
shr
fcom
pmulhw
xor
stos
add
aam
cmp
es
cs
xchg
or
lahf
push
push
mov
sub
xchg
xor
inc
xor
rol
cmp
xchg
push
dec
adc
xchg
mov
push
hlt
xchg
inc
jo
cwtl
inc
popa
stc
xchg
movsb
mov
sub
and
pop
out
aad
ret
fadd
arpl
and
push
btc
je
inc
test
inc
adc
cmpb
mov
out
enter
rorl
pop
inc
in
pop
lahf
popa
pop
push
fsubl
pop
ja
xchg
jb
xchg
cmp
jb
ljmp
add
arpl
add
fnsave
enter
sbb
push
sub
shl
xorl
scas
cmp
mov
ret
loope
sbb
sti
and
mov
sbb
call
fs
add
mov
mov
les
xchg
adc
cmc
xor
xorl
sbb
lret
mov
mov
xchg
add
mov
and
jmp
mov
test
pop
in
mov
push
cmp
in
add
jno
nop
inc
iret
and
fcomp
lcall
pushf
dec
leave
pop
mov
rep
das
cmpsl
arpl
pusha
out
sub
sbb
mov
loop
pop
mov
arpl
add
jnp
ljmp
rcll
sub
ret
cmp
push
cmp
es
sbb
shl
inc
insl
mov
rclb
or
cmp
pop
lds
sbb
inc
cli
cmp
cwtl
out
fwait
xchg
xor
adc
loop
jmp
jle
push
testb
es
push
inc
cwtl
push
or
xlat
cmp
arpl
testl
fimuls
jle
pcmpgtb
xchg
insl
je
data16
stc
fcoms
mov
inc
push
or
xor
and
sbb
add
dec
adc
add
aam
add
arpl
cmpsb
push
mov
fimuls
jecxz
cmpps
sbb
pusha
lea
dec
sub
shlb
pop
or
aam
leave
dec
leave
test
movsl
sbb
ljmp
testb
cmp
lods
adc
sub
aam
sti
sbb
es
lahf
pop
insl
jecxz
int3
hlt
pop
xchg
cmp
xchg
fimull
and
pop
mov
lea
hlt
subl
mov
dec
cmc
mov
fxch
int3
fwait
test
dec
cmp
test
xchg
mov
add
mov
subb
std
sub
xor
mov
pop
ss
bound
movsb
daa
jae
or
imul
jno
inc
jae
or
xor
popf
xor
shll
test
lock
sbb
or
push
push
mov
das
mov
ljmp
jmp
pushf
ss
fwait
or
cmp
or
xchg
add
out
bound
jne
popa
push
aas
arpl
jl
or
mov
cmc
xor
add
xlat
ja
fisubrs
js
cmp
or
idivl
enter
in
pushf
sar
sub
and
js
mov
cmpl
mov
pop
inc
scas
cld
mov
sahf
js
rcl
xor
idivl
fcomi
call
lds
repnz
ret
cltd
nop
lret
iret
cmp
icebp
sub
cmpsl
xor
pop
imul
loope
mov
and
xchg
xchg
pusha
xchg
iret
push
sub
fmull
push
clc
cltd
shll
ret
cltd
dec
and
dec
jmp
cs
mov
ret
arpl
xchg
mov
xchg
jb
loope
jp
mov
dec
addb
cld
cli
adc
or
data16
outsb
jge
aam
enter
mov
mov
loop
fcoml
mov
xor
dec
stc
clc
fadd
pop
int3
imul
dec
insw
out
ret
sbb
testl
pop
fiadds
jb
icebp
out
mov
add
xchg
push
iret
repz
into
je
jae
arpl
xor
adc
mov
xor
out
adc
sub
dec
cwtl
sub
insb
fldenv
stos
aaa
iret
adc
arpl
jp
inc
adc
xchg
mov
mov
dec
fcomps
jecxz
xor
repz
xor
dec
lods
add
mov
push
or
test
jp
testb
icebp
movl
mov
sub
ja
lock
outsl
mov
shll
popf
mov
push
imul
in
push
out
adc
push
loop
out
mov
or
scas
cltd
inc
or
aam
stos
push
clc
sbb
or
out
test
and
js
xchg
in
and
sbb
hlt
insb
push
leave
divl
and
mov
add
mul
mov
imul
test
jbe
mov
jne
sahf
enter
and
dec
jae
xorl
ficoml
xor
mov
rorl
jae
mov
mov
repnz
data16
call
sti
rcl
scas
out
dec
mov
xchg
gs
shl
cmp
push
test
adc
mov
dec
scas
pushf
iret
xchg
ret
in
pop
sbb
sahf
xchg
xchg
sub
je
xor
jno
dec
lcall
push
leave
ret
mov
adc
stos
int
adc
das
sbb
lock
push
notb
fiaddl
in
and
lcall
lock
or
negl
mov
push
inc
push
outsb
push
dec
aam
dec
fsubl
sbb
lods
cmp
sub
mov
inc
inc
in
add
sbb
fildll
xor
jl
xor
sub
jae
fsubp
pusha
or
mov
sti
cli
xor
push
add
cmp
scas
sbb
push
jo
addr16
pop
movsb
mov
mov
ja
push
dec
mov
sti
mov
out
arpl
loopne
ret
divb
cmp
divl
ss
data16
in
inc
jns
or
mov
or
ja
clc
dec
mov
jmp
in
pop
fnstsw
jno
dec
or
movsl
xor
out
push
mov
or
out
data16
aaa
pop
xor
movsb
leave
imul
sbb
push
clc
mov
imul
inc
imul
and
pop
out
xchg
push
inc
fbld
sub
pop
fcmovne
je
sbb
outsb
lret
xchg
dec
push
cli
pop
mov
stos
sbb
in
jecxz
ja
inc
push
test
or
mov
mov
lea
outsl
jle
xchg
dec
fdivl
das
mov
or
leave
loope
aaa
sbbl
cmp
sbb
cmp
incl
push
sub
aas
or
jb
or
fisttpl
push
jno
scas
cmp
mov
js
mov
out
mov
inc
ret
div
imul
outsb
add
ret
mov
das
jmp
jae
popa
es
adc
inc
es
sbb
xor
jno
mov
add
stc
mov
mov
subb
shlb
xor
ret
enter
enter
push
sub
divb
dec
jnp
in
mov
inc
sub
sub
sarl
dec
fldenv
jmp
test
sti
stc
or
dec
les
or
lahf
loopne
sbb
stos
add
and
je
addr16
cli
jp
xchg
repz
pop
dec
lods
xchg
cmpsl
rcrb
push
popf
mov
sub
mov
adc
rcrb
mov
js
popf
outsb
sbb
loop
jmp
nop
push
ljmp
pop
inc
mov
jno
push
rcrb
mov
test
dec
jle
nop
sahf
inc
mov
shr
iret
mov
push
leave
aad
stc
jle
inc
mov
and
cmp
fldenv
popf
jae
mov
sbbb
push
icebp
push
add
push
gs
xchg
fcomi
push
insb
or
test
in
out
dec
popf
or
aam
mov
out
in
repz
es
push
int3
aas
into
jno,pt
insl
jp
into
pop
xlat
arpl
push
out
adc
cmp
sti
mov
repz
cmp
mov
subl
je
or
jo
lds
out
in
ret
addr16
lods
fwait
popa
aad
adcl
push
mov
sti
fdivrs
frstor
shll
adc
push
jg
mov
enter
add
pop
mov
aas
leave
sub
xchg
mov
dec
enter
repz
movl
and
xor
sahf
sbb
mov
test
lods
ficoms
mov
dec
popa
or
xchg
xor
fisubrl
roll
and
aam
sbb
adc
xchg
inc
and
sbb
jo
daa
adc
daa
mov
insb
hlt
push
mov
loopne
jne
mov
pop
mov
sbb
cmp
sbb
mov
push
xor
jo
push
int
add
psubusb
into
adc
lcall
shrl
in
clc
sti
add
xlat
pop
cli
lret
and
sar
inc
fdivrl
sbb
jge
jp
imul
adc
cmc
mov
ficomps
xchg
and
fs
pop
popa
pop
int
adc
xchg
mov
jnp
jle
adc
pop
ret
mov
jnp
nop
imul
lcall
pop
int3
repnz
scas
inc
ds
cli
pushf
je
mov
fstps
adc
jnp
mov
xchg
test
inc
aas
mov
jnp
es
push
jp
xchg
out
iret
sub
mov
cmp
imul
js
and
push
mov
and
pop
jmp
orb
inc
push
sub
xor
sub
mov
loopne
cmp
push
mov
pusha
ret
push
fisubs
stc
addr16
nop
dec
subb
dec
pop
inc
ds
fwait
and
hlt
ds
test
aaa
or
test
or
jl
adc
dec
mov
adc
jmp
mov
sarl
popf
cmp
pop
arpl
out
xor
out
scas
ss
shlb
mov
pop
xor
xchg
push
adc
adc
push
es
jge
mov
jg
dec
or
sub
faddp
pusha
adc
or
xlat
sub
push
daa
jae
sub
mov
jecxz
ljmp
mov
shlb
aad
ss
andb
pminsw
cmp
in
rcll
inc
mov
jo
xor
addr16
test
aas
inc
out
pop
test
fstpt
addr16
jns
into
sbb
orl
ret
xchg
aas
testb
fs
add
pop
mov
add
pop
mov
jge
jp
xorb
push
sarb
and
aad
lahf
add
adc
sbb
test
ror
jns
adcl
pusha
xchg
or
jb
pop
mov
adc
push
fisttpl
sbb
add
mov
in
lret
pop
loopne
icebp
lret
idiv
dec
cmp
cmpsb
xlat
andl
xor
lcall
or
and
lock
jg
jno
lods
add
ret
repz
aas
pop
dec
jno
cltd
pop
pusha
loope
call
movsl
mov
push
jmp
in
idiv
je
test
stos
adcl
push
push
out
pusha
pushf
sbb
data16
in
cmpsl
pushf
ret
rcll
aam
mov
inc
push
jmp
cmp
cmp
fisubrs
jge
sahf
xor
mov
insb
jae
jge
sahf
shl
pop
xor
call
sbb
mov
out
rcl
push
nop
mov
ret
gs
iret
shl
xor
or
jne
add
mov
orb
sbbl
movsl
sub
imul
shlb
inc
mov
out
push
jbe
or
lret
pop
add
lods
cld
gs
jae
ret
cmp
sbb
cwtl
push
pop
jnp
dec
mov
cmp
jecxz
xchg
jl
enter
repnz
hlt
fs
arpl
es
mov
aaa
mov
jbe
push
pop
dec
aam
loope
xchg
fcomps
pop
lds
repnz
icebp
ret
ljmp
adc
cwtl
or
pusha
mov
movsl
push
adc
add
lret
cmpb
push
icebp
cltd
push
pop
addr16
fdivs
rorb
daa
sbb
cmp
lcall
fs
lods
pop
lret
movaps
pop
xlat
sti
or
xor
rcrb
xor
jbe
es
out
sbb
mov
enter
push
jg
jmp
popf
adc
adc
loope
cmp
mov
mov
data16
icebp
xchg
pop
pop
popf
adc
sbb
lahf
ljmp
cmp
ret
mov
cmp
imul
fcomps
fwait
cltd
add
test
enter
xchg
test
cmpsl
dec
sar
mov
lock
negb
push
inc
xchg
inc
insl
mulb
jne
test
idiv
adc
sti
in
and
lcall
insb
int
mov
add
outsb
xchg
pop
and
or
lcall
aaa
xchg
in
sarl
cmp
stos
add
scas
ss
shll
and
lret
fisubrl
popf
mov
std
adc
inc
push
leave
pop
sbb
inc
inc
jns
ret
mov
pop
roll
sahf
das
jae
std
faddp
cmpsb
lods
dec
xor
pop
movsb
jmp
sti
add
loop
test
mov
call
clc
add
cmpsb
clc
pop
cmp
repnz
sbb
out
loope
insb
xchg
fldt
rorb
loope
je
mov
mov
mov
out
cmp
jo
mov
pop
nop
outsl
test
mov
fdivrp
xor
movsb
fbld
in
data16
jnp
aas
ja
test
lods
out
inc
push
scas
xchg
xor
sahf
aas
jns
lcall
mov
pop
push
lret
je
mov
sbb
pop
and
sub
cmpsl
pop
ss
push
or
cs
insb
cld
orl
cmp
iret
rorl
and
testl
add
mov
movsb
pop
cmp
out
push
mov
mov
les
push
jmp
out
mov
das
pop
xlat
lea
xchg
iret
es
sbb
sub
or
cmpsl
cltd
or
cmc
sbb
pop
fwait
andnps
sbb
cltd
xor
jmp
loop
cmp
xchg
dec
and
insl
adc
in
mov
dec
adc
fcmovnbe
cmp
sub
cmp
adc
fwait
pushf
sbb
xchg
ficoms
mov
dec
pusha
push
mov
cli
cmpsb
ljmp
pop
ficoms
mov
pop
aad
push
ljmp
negb
xlat
vandnpd
add
stos
mov
lods
into
out
xchg
inc
xchg
dec
les
jge
sbb
iret
push
or
imul
add
rcl
loopne
dec
iret
mov
sahf
fisubl
fisubrs
stc
clc
and
push
imul
and
cli
and
jl
and
int
cmp
icebp
outsl
jb
popf
mulb
cmp
sub
mov
xchg
mov
test
jp
xchg
popl
bound
rorb
inc
and
inc
out
pop
stos
lahf
sub
pop
jno
imul
cmc
mov
xchg
xchg
repz
adc
subb
into
cmp
jae
mulb
cld
or
push
or
jb
daa
nop
out
movsl
pop
xchg
notb
scas
lock
test
fnstenv
in
cltd
pop
xor
scas
mov
std
mov
enter
jp
sub
inc
int3
xor
arpl
ret
int
xchg
mov
jecxz
pop
cmp
sahf
sbb
mov
mov
sub
adc
xchg
mov
stos
ficoms
lods
fbld
movsb
out
jg
mov
lret
arpl
cld
test
arpl
sarl
adc
pop
mov
les
add
test
mov
and
sbb
xchg
inc
test
dec
js
dec
pop
test
sbb
push
insl
loopne
lahf
popf
inc
test
fwait
sbb
data16
push
pop
movsl
mov
pcmpeqd
xlat
fnsave
mov
das
mov
xor
loop
out
add
add
xor
les
push
mov
ja
pusha
or
ror
fnstenv
pop
cld
lret
jno
push
xlat
adc
dec
jno
cmp
lahf
cmp
cmpsb
ret
push
inc
xchg
inc
cli
imul
cld
in
sbb
lock
pshufw
sub
lods
inc
fcoms
cmpsb
mov
aaa
in
mov
test
jmp
and
adc
out
das
cld
mov
das
enter
scas
xor
mov
cmc
push
add
scas
mov
push
push
xor
cmovp
sub
mov
mov
push
xchg
mov
add
lcall
movb
mov
xchg
es
test
cmp
enter
pusha
jmp
push
jns
outsl
pop
mov
out
xchg
inc
inc
lret
sub
loopne
inc
cmpsl
mov
dec
inc
bound
jns
mov
xor
adc
sar
dec
mov
or
orb
fxam
mov
push
stos
push
xor
aas
outsb
and
sbb
inc
sub
dec
icebp
stc
mov
mov
aad
jmp
inc
lret
outsb
mov
mov
jecxz
pop
and
and
mov
ret
push
adc
or
jb
xchg
or
mov
add
or
and
mov
add
add
pop
xchg
add
sbb
fidivl
test
add
scas
outsl
sub
mov
movsl
push
mov
jecxz
sub
mov
pop
jb
pop
mov
mull
lock
loopne
mov
dec
std
cmp
stc
outsl
imul
and
addr16
stos
out
out
inc
mov
outsl
sub
adc
fnsave
push
mov
daa
mov
mov
xlat
lods
pusha
mov
loopne
adc
fnsetpm(287
mov
cmpsl
fstps
std
shrl
or
movsb
xchg
cmp
pop
repz
sti
fiaddl
and
jnp
sarb
orb
dec
test
sbb
mov
call
gs
xor
rorb
bound
and
cli
pusha
or
pop
div
aas
shrl
js
pusha
mov
or
ret
sbb
sub
nop
lods
imul
dec
or
popl
shll
pop
xchg
movsb
mov
mov
add
mov
cmp
cmpsl
loopne
sti
adc
push
aad
addl
sahf
leave
cmpsb
cmp
or
xchg
ret
push
sbb
push
mov
and
sbb
adc
adc
push
loopne
lea
dec
call
movsb
popa
test
sub
push
lea
iret
sub
dec
lods
xchg
add
mov
popa
ret
mov
jle
jge
out
inc
or
popf
xor
cmpsb
jge
inc
rorb
jle
sbb
push
adcb
xchg
or
add
fidivs
das
sub
cs
ret
mov
jmp
fs
repnz
dec
adc
xor
jle
xchg
out
std
jge
adc
popa
std
jg
cltd
cmpsl
jbe
leave
jnp
or
or
imul
fwait
imul
cmp
cwtl
lods
mov
jmp
mov
shll
loope
sub
arpl
xchg
fidivl
xor
jbe
dec
cmpsb
addr16
push
xor
es
cmp
orb
mov
outsb
push
jg
lods
or
lahf
js
enter
movsb
pop
ret
leave
loopne
lcall
je
bound
sbb
jmp
fnsave
cltd
mov
push
ret
repnz
or
clc
gs
dec
sub
addr16
nop
inc
sub
xchg
inc
les
xchg
aas
in
rorl
jns
pop
aas
lea
in
fcmovnb
push
cmp
cmp
cmpsb
ret
xchg
inc
mov
xlat
pop
mov
movsb
xchg
push
aas
push
mov
pop
fisttpll
ljmp
adc
sbb
shr
add
int
aaa
aad
sbb
push
mov
mov
sub
pop
fildll
xchg
dec
leave
adc
iret
mov
pop
pop
sub
imul
outsb
mov
inc
adc
xchg
pop
pinsrw
shrb
sbb
test
sbb
sti
sbb
push
scas
xchg
pushf
out
cmpsb
sbb
pusha
into
and
add
fld
or
push
test
fcompl
jnp
fsubrs
fldl2t
fwait
lods
ret
mov
cld
pop
movl
xchg
mov
push
in
adc
xor
mov
cmpb
adc
rcll
inc
sbb
mov
clc
test
mov
cmp
mov
cli
divb
dec
mov
clc
xor
dec
pop
inc
sarb
dec
push
mov
jge
lahf
icebp
xchg
add
jb
test
lods
pop
dec
aad
jle
iret
mov
jge
mov
xor
in
pop
movsl
bound
loopne
cwtl
pop
aas
daa
cmp
xchg
adc
mov
mov
scas
xor
jmp
inc
mov
lret
sbb
dec
nop
cli
jne
sbb
popl
cmp
das
sub
imul
ss
dec
lret
lds
mov
or
lock
stc
mov
lret
push
int3
ret
and
subb
testb
addr16
repnz
test
loopw
addr16
pop
jg
popa
mov
sub
cmp
pop
clc
incb
cmp
movsb
dec
mov
dec
cmpsb
xor
and
mov
arpl
dec
insb
out
lret
inc
xchg
dec
sbb
decl
pop
jmp
xor
in
test
pop
xor
cwtl
lods
fstps
jnp
fcmovnbe
addr16
sub
jl
cmp
adc
push
bound
inc
loopne
mov
inc
push
mov
pop
xchg
imul
xchg
mov
movsl
fnsave
inc
pop
cmp
mov
int3
das
mov
rorl
inc
movsb
int3
cmpsb
sbb
xor
fbstp
sub
test
call
push
stos
inc
das
pop
das
and
testb
into
test
repnz
inc
mov
imul
cmp
repnz
sub
sbb
loope
pop
je
ror
or
pop
test
jb
loop
ret
and
jo
test
pop
enter
mov
sbb
je
sbb
in
and
sbb
sub
test
add
cmpsl
sahf
jle
stc
adc
xor
add
dec
push
and
or
inc
and
movsl
outsb
push
fisubrl
psubusw
mov
gs
mov
and
pop
add
in
dec
ret
inc
cmpsb
lods
loop
mov
lock
mov
ret
adc
mov
mov
and
je
xchg
sub
clc
fwait
pop
dec
add
mov
mov
push
dec
dec
push
ljmp
leave
adc
cs
mov
mov
ret
mov
pusha
pusha
dec
mov
xchg
popa
insl
subb
sbb
shl
jle
arpl
fidivl
in
popf
pop
lea
sti
sti
cs
xlat
xlat
test
icebp
lds
xchg
arpl
rcll
inc
and
les
les
pop
dec
and
lret
inc
rcrl
or
lods
add
sub
mov
adc
enter
es
movsl
dec
scas
mov
cli
inc
xor
testb
lret
lcall
push
or
xchg
jg
ss
test
stos
xchg
mov
or
sahf
dec
xor
xchg
ret
xor
and
insb
adc
inc
mov
lahf
hlt
xchg
lods
stc
test
cmp
pop
push
test
lret
shrb
loopne
mov
loope
lret
icebp
pop
ret
icebp
bound
out
shlb
and
sub
mov
cmp
mov
pusha
mov
setge
push
inc
scas
jmp
fisttpll
loopne
push
mov
sbb
jnp
aad
lahf
add
and
mov
push
insb
or
inc
popa
ds
loop
and
dec
les
dec
mov
add
add
xor
or
mov
dec
stos
sub
inc
inc
push
xor
in
loopne
jecxz
mov
fmull
outsl
or
add
in
sub
lods
je
lock
andb
aas
adc
inc
dec
js
mov
mov
les
cmc
mov
fcoms
mov
mov
into
aam
int
inc
cmc
dec
pop
xchg
xchg
dec
out
inc
xchg
and
loopne
xchg
adc
mov
pop
orl
jmp
fsts
lods
lds
mov
inc
and
jge
pop
stc
pop
in
jecxz
sub
gs
iret
or
inc
inc
imul
out
fcompl
sub
push
push
rolb
outsl
mov
cmp
mov
pop
popa
shlb
shlb
call
pushf
cs
pop
push
movsl
out
ret
and
inc
stos
jbe
mov
lcall
add
lahf
xchg
sub
mov
in
fs
add
pop
xlat
mov
loope
inc
rcr
ja
cmp
mov
cli
mov
pop
outsl
out
pop
dec
imul
fimull
sub
and
cltd
xchg
sub
and
pop
pop
and
lods
outsl
dec
daa
stos
or
je
and
shlb
add
adc
dec
das
fwait
into
xlat
lea
sub
cmpb
aaa
ja
mov
or
popa
xor
sbb
cmp
mov
stos
in
std
ror
xchg
mov
lea
push
fistps
mov
movsl
nop
push
cmp
jns
fildll
mov
fstp
inc
adc
xor
pop
mov
divl
fmulp
jle
rcll
in
mov
outsb
adc
and
or
sub
lret
xacquire
data16
and
inc
adc
cmpsl
pop
mov
xchg
not
push
or
icebp
xor
or
mov
push
lods
jnp
push
test
repnz
icebp
dec
adc
test
xchg
mov
add
sub
loopne
lret
pop
sbb
sbb
mov
xchg
jne
dec
into
xabort
hlt
fadd
adc
pop
mov
loope
mov
mov
in
cmpsl
leave
dec
push
shlb
inc
pop
lods
xor
mov
mov
jl
pop
stos
shlb
popf
testb
sahf
int
jle
mov
and
repnz
mov
int
lock
stos
xlat
fbstp
testl
cwtl
stos
sarl
lret
fidivrl
xor
cmp
repnz
add
in
lret
and
test
pop
adc
dec
int3
fs
scas
fdivrl
xor
stos
lahf
mov
stc
in
add
xor
out
dec
in
and
roll
bound
pop
sub
sbb
mov
mov
pop
pusha
lods
inc
lock
imul
out
addl
in
add
xchg
jl
xor
pop
stos
ds
mov
rcrl
clc
repnz
ljmp
imul
add
dec
aam
mov
nop
in
mov
jle
xchg
mov
mov
cmp
or
pop
mov
test
repz
iret
mov
loopne
divl
enter
pushf
and
push
lcall
pop
push
repz
mov
xor
jmp
fnstsw
inc
push
das
jbe
es
sti
ds
push
or
aad
cmpl
adc
cmp
out
mov
inc
xchg
data16
mov
es
jecxz
or
inc
jl
test
pop
dec
xor
pop
jnp
sub
cwtl
inc
mov
data16
lods
scas
fs
sbb
rcrl
fbstp
jne
test
jbe
sub
or
stos
jns
clc
mov
push
pop
sub
jge
push
int
pop
jmp
sahf
push
daa
mov
shrl
ror
cs
cmc
testl
xor
in
mov
push
xchg
sbbb
jecxz
push
cld
aad
add
imul
sub
sub
mov
lcall
sub
js
je
daa
mov
sbb
mov
out
mov
sub
pop
hlt
xor
outsl
mov
into
outsl
cli
mov
cli
imul
xlat
pop
pop
in
ss
push
xor
and
mov
outsb
jb
js
call
test
push
outsb
repnz
repnz
out
orb
adc
lcall
idiv
cmp
rclb
popf
xchg
rcll
mov
loopne
test
add
cld
std
xchg
gs
repnz
mov
pop
outsb
leave
js
xor
xor
aad
out
fldt
fistps
fstl
sub
lahf
mov
movsl
sarl
js
pusha
out
add
push
mov
dec
test
and
fdivrl
in
mov
jmp
repnz
adcb
push
adc
arpl
push
out
adc
sub
adc
lret
stos
push
outsl
or
add
out
cwtl
push
push
test
mov
jno
sub
fwait
shll
movsl
cmp
or
std
push
jg
and
clc
add
test
ret
add
cld
fistps
shlb
and
mov
xor
xor
fcmovnbe
mov
gs
xorl
imul
and
loopne
sahf
push
int
das
cmpsb
aad
pop
test
adc
mov
jge
add
dec
aas
lods
and
sbbl
inc
loopne
sbb
shll
pushf
and
ja
add
mov
scas
dec
dec
icebp
mov
lea
sbb
push
popa
jbe
jecxz
cmp
lcall
jg
inc
or
cmp
nop
and
add
mov
fnstsw
mov
test
mov
mov
inc
or
out
sbb
xor
int3
mov
push
pop
ror
pop
push
and
ja
out
mov
jp
mov
dec
insl
rcll
scas
hlt
push
push
add
lock
add
xor
xlat
rolb
out
mov
fldpi
arpl
daa
push
imul
sarl
mov
adc
fcmovnb
enter
in
add
scas
dec
in
nop
inc
add
xor
and
in
xor
insb
test
jl
ds
xchg
iret
ss
push
sub
into
cmp
or
das
lods
dec
xlat
mov
fstpt
lahf
jb
and
fdivrs
push
stos
cmpsl
imul
test
push
mov
rcrl
insb
aad
sbb
jg
fstps
fnstsw
jl
cld
mov
pop
sub
lcall
loop
ffree
push
xchg
in
sbb
rcll
mov
popa
inc
cmp
fwait
xchg
add
fstpl
mov
or
lcall
xchg
aaa
out
cmp
cmp
xchg
mov
fmull
notl
pop
sub
sar
inc
inc
les
sbb
addl
mov
ds
and
arpl
add
ficompl
in
xchg
or
jl
xor
popa
push
setle
testl
nop
jae
stos
mov
dec
mov
xchg
add
fbld
lea
pop
sbbb
pop
jle
lds
aad
or
and
add
test
lret
inc
xchg
dec
mov
loopne
hlt
aam
dec
adc
add
mov
inc
xchg
adc
mov
les
ja
push
fcomp
loope
push
daa
jno
mov
mov
dec
mov
mov
cmpl
sahf
adc
faddl
int
inc
imull
pop
pop
mov
enter
pop
gs
sahf
xorl
jmp
test
xor
clc
lahf
pop
imul
cld
inc
inc
pop
mov
faddl
gs
sarb
and
cmp
insb
arpl
out
sbbl
dec
cmp
mov
popa
or
test
cmpsl
out
push
int3
jmp
cli
dec
pop
nop
mov
in
es
cli
fwait
and
daa
test
fisubrs
or
sub
pop
cmp
sub
addl
xorb
sub
add
or
mov
idivl
addr16
pop
pop
cmpsl
or
ss
andl
cmp
sbb
pusha
xchg
mov
cmp
add
push
out
fwait
mov
arpl
pop
mov
lret
inc
fwait
push
in
addb
xor
subl
iretw
in
aad
dec
cmp
movsb
xor
adc
add
les
daa
dec
xor
and
inc
fcomps
aaa
or
lods
lret
les
adc
xchg
mov
mov
clc
call
cli
inc
loopne
subb
pop
cmpsb
iret
lret
push
out
jmp
add
jno
jge
jmp
stos
insl
pop
pop
sbb
jmp
testb
cli
xor
aaa
jg
out
xor
lock
fwait
sub
inc
jno
fisubl
rclb
dec
jne
jo
pop
dec
sbb
clc
out
jl
pushf
pop
dec
dec
lods
dec
jbe
adc
lret
mov
mov
mov
cmp
ds
lds
adc
sub
jp
fwait
repz
adc
xor
xchg
or
jne
dec
pop
mov
in
inc
xchg
aaa
mov
cmp
or
sub
fbstp
dec
pop
xchg
std
and
adc
mov
adc
jns
xor
inc
enter
jg
adc
mov
xor
iret
pop
test
mov
addr16
mov
orb
lret
pop
jmp
jl
jo
imul
cmpsl
mov
inc
loopne
push
rclb
icebp
xor
push
stos
mov
pop
fadd
nop
bound
imul
into
aaa
sbb
jbe
jge
jl
cmp
xchg
cli
mov
xor
cmp
popf
repnz
imul
dec
shrl
movsb
divb
icebp
arpl
addl
fxch
lret
roll
lods
add
ja
ljmp
adc
pop
or
fcmovnu
movsl
and
daa
icebp
movsl
lea
popa
loope
push
add
xchg
cmp
sub
outsl
sbb
xor
dec
into
xor
pop
jns
call
mov
push
stc
adc
and
iret
push
cwtl
test
dec
sti
or
jle
scas
pushl
call
adc
cld
daa
call
and
aam
out
movb
mov
dec
andl
push
dec
inc
cmp
jmp
fwait
sahf
mov
and
xchg
xor
mov
pop
aas
push
push
test
add
mov
sbb
cmc
or
loopne
add
mov
inc
pop
mov
loope
and
out
pop
xchg
cmpsb
test
jmp
jbe
push
mov
adc
aad
rolb
ljmp
hlt
fadds
jne
clc
add
sbb
fnstcw
or
icebp
xchg
loopne
stos
scas
push
jbe
outsl
lret
aam
cld
mov
mov
sub
mov
stc
mov
pusha
mov
push
cwtl
aaa
incl
push
sub
add
ret
test
sbb
mov
in
mov
mov
dec
pop
sarb
testl
inc
dec
shll
jg
arpl
and
inc
sub
test
jns
stos
jno
enter
pop
ss
pop
orl
shl
or
je
push
add
out
mov
xor
push
dec
mov
jmp
sbb
std
popf
test
pop
and
movsb
sahf
add
mov
aas
xchg
lret
test
rol
adc
loopne
andb
test
and
cmp
out
dec
ret
mov
stos
pop
cwtl
and
and
push
sub
and
into
adc
mov
push
daa
loop
xor
int3
test
fs
cmp
cmp
push
jbe
xor
fwait
sbb
inc
aas
cwtl
mov
dec
addr16
sub
push
imul
cmp
test
rcll
stos
dec
sbb
sub
dec
push
xor
pusha
sub
aad
pop
cld
mov
lock
dec
and
inc
inc
in
mov
fnstcw
mov
xchg
ljmp
mov
jae
lods
punpcklwd
push
test
das
mov
adc
adc
xor
xchg
xchg
aam
sub
jmp
mov
loopne
into
adc
loop
call
add
in
fcmovnbe
movsb
int
loop
cmp
and
scas
push
je
mov
lahf
mov
inc
mov
pop
fwait
mov
enter
xchg
sub
les
and
dec
mov
sbb
xchg
mov
testb
je
sub
sub
cmpsb
xchg
xchg
mov
pop
js
inc
pop
push
repnz
fdivl
dec
loopne
inc
negb
in
adc
fistl
loopne
jle
add
mov
cld
shll
addr16
ja
loop
test
mov
lods
add
mov
stos
loope
and
dec
stc
lea
addr16
aaa
mov
pop
enter
add
es
shr
adc
push
ret
rol
scas
lods
in
leave
stos
sahf
cwtl
push
push
and
movsl
xchg
shl
std
sub
aaa
mov
mov
in
add
pop
mov
stos
xor
stos
addr16
mov
push
or
pop
dec
inc
mulb
mov
mov
mov
in
shlb
xlat
pop
sub
pop
mov
jp
cs
sub
xchg
sahf
sbb
jmp
inc
lret
or
mov
mov
jmp
sbb
cwtl
aam
or
mov
ljmp
fidivrs
xchg
push
sub
stc
cmpsl
xor
or
mov
push
das
scas
dec
adc
pushf
repnz
sub
sbb
jl
mov
sub
and
jge
jg
int3
lcall
andl
pop
jne
or
push
movsb
jne
call
jne
fprem
out
sub
sbb
or
jg
mov
jecxz
sbb
push
push
mov
mov
sub
ja
dec
and
outsl
mov
pop
mov
pop
xor
or
pop
xor
pop
sahf
xlat
movsb
int
mov
xchg
jno
xchg
ljmp
xor
xor
ret
inc
push
push
loopne
xor
pop
sbb
dec
inc
sub
dec
scas
arpl
push
cmp
pop
push
cmc
cltd
imul
jge
clc
mov
movsl
lods
mov
jmp
out
jmp
iret
rorl
bound
in
xor
cld
push
jmp
ja
fyl2xp1
inc
xor
scas
gs
xchg
pop
loope
popa
adc
pop
aaa
popa
jmp
ret
xlat
pop
jle
xchg
xchg
xchg
lret
jecxz
and
out
jecxz
aas
sbb
icebp
mov
mov
sti
sahf
pop
in
push
xor
inc
and
jnp
pop
andl
ljmp
sub
sub
movl
in
xor
fmuls
or
adc
mov
push
adc
rcll
inc
aaa
add
jbe
push
push
lret
mov
mov
cmpsl
mov
and
jmp
cwtl
xchg
ja
aaa
sbb
sbb
in
sbb
jp
ret
sub
mov
bound
or
mov
dec
cmc
scas
fbld
adc
into
fdivs
jns
mov
lds
inc
je
test
inc
lods
aam
mov
fsub
mov
sub
repz
decl
stos
fs
movsb
jge
out
push
and
test
enter
inc
insl
mov
in
mov
daa
push
pop
loope
fisttpll
sbb
fisubs
mov
movsl
pop
xchg
lcall
das
jmp
and
jb
xor
sbb
scas
adc
sub
movsl
rorb
pop
inc
fnstsw
push
pop
xor
push
dec
pop
xor
cltd
add
ret
call
or
test
insb
out
std
lret
pop
sbb
arpl
cmp
jl
jbe
mov
shrb
sub
cmp
loop
enter
xchg
fiaddl
popa
shrb
outsl
or
push
daa
les
mov
movsl
clc
out
rcrl
fdivrs
iret
sub
inc
addl
imul
shlb
je
push
inc
adc
ffree
movsb
and
sbb
insl
adc
daa
pop
dec
mov
cmc
or
rcrb
ja
mov
pop
int
orl
mov
aad
cmp
stos
sub
sub
jmp
push
mov
inc
or
cwtl
in
ss
cmpsl
cmp
filds
mov
add
hlt
pop
fimuls
sahf
sbb
push
cmpsb
lods
sahf
mov
xlat
jb
fcmovbe
out
sbb
lret
push
das
paddd
nop
cmp
jge
popa
jnp
adc
in
inc
insl
jmp
or
cs
and
iret
outsl
aad
dec
iretw
add
fistl
outsl
or
adc
xchg
dec
cmpsl
shlb
scas
js
sub
insl
mov
outsl
fs
xor
stc
sbb
sbb
js
test
in
test
xchg
fidivl
mov
dec
cld
push
jecxz
mov
jne
les
rcrl
inc
test
lahf
clc
ja
dec
and
mov
or
sub
cmp
into
sub
imul
enter
ret
lret
jl
rolb
out
sbb
cltd
ja
push
mov
jp
sbb
push
adc
jle
and
sbb
inc
movsl
sbb
jg
adc
movsb
aas
loop
pop
mov
cmp
jb
xchg
push
inc
fwait
sub
lock
popl
scas
cmp
or
mov
out
shll
ds
xchg
jl
frstor
mov
lret
inc
fwait
dec
hlt
orl
xor
pop
loopne,pn
mov
mov
jl
dec
mov
mov
mov
sub
inc
xchg
sbb
rol
popa
sub
bnd
inc
mov
cmpsl
and
in
sub
inc
pop
out
fldenv
lret
int3
xor
cmc
xchg
jge
and
adc
cli
push
loopne
orb
stc
out
jmp
or
int
movsl
mov
sub
xor
popf
mov
pop
jne
fisttpll
and
aaa
call
push
ljmp
adc
push
dec
out
shl
adc
push
fsubrs
push
mov
pop
cmp
lods
push
jb
inc
mov
add
and
aad
sub
mov
mov
stos
nop
dec
jp
js
jnp
xchg
mov
adc
pop
xor
adc
loopne
cmpsl
xor
jl
xor
and
test
pop
int
rcll
outsl
aad
or
shrl
outsl
xor
idivb
pop
aas
and
push
movsb
out
or
add
xchg
mov
lret
aad
jg
js
jae
xchg
and
gs
sarb
mov
mov
sub
sbb
gs
add
pop
mov
sbb
icebp
popa
add
xchg
mov
or
iret
push
cwtl
popf
ficoml
xchg
jnp
es
mov
push
mov
push
lods
imull
cmp
xchg
xor
pop
insb
test
cld
imul
shll
jle
int
addr16
sbb
aad
and
sub
jb,pn
sub
pop
sub
xchg
dec
inc
int
dec
add
push
cmp
inc
pop
mov
cmp
enter
push
aaa
jp
ret
test
sar
and
stc
scas
mov
or
pushf
lds
fstpt
push
sbb
push
mov
and
bound
popf
dec
sub
pop
test
shlb
add
out
sub
xor
fdivrp
icebp
xor
or
lods
leave
adc
fwait
out
rol
ja
outsl
mov
cmp
adc
mov
sub
adc
into
or
jno
std
sub
loop
adc
mov
pop
cmc
cmpsl
or
cmp
pushf
imull
scas
sbb
xor
fcomi
and
ljmp
test
xchg
andb
sub
xor
cmp
fsub
inc
aaa
shl
fldenv
gs
and
scas
stc
inc
lahf
arpl
lret
mov
adc
mov
enter
repz
adc
push
mov
aaa
es
in
add
int3
pushf
xchg
imul
sti
dec
arpl
inc
add
subb
pop
inc
into
xchg
sti
in
mov
dec
aas
jg
jmp
adc
or
jo
dec
test
lret
test
aam
call
frstor
pushf
sahf
shrl
fs
mov
int
mov
xor
stos
cmp
jle
jae
shrb
pop
fisubs
cmpsl
jae
loopne
sub
pop
xor
mov
shlb
push
imul
in
dec
xchg
push
ja
ja
jb
ja
test
je
mov
ja
stos
ss
sub
negl
clc
jmp
movsl
mov
daa
mov
pop
call
mulb
adc
arpl
lret
jl
outsb
pop
mov
in
scas
mov
rcrb
test
nop
xchg
pop
lods
mov
ss
push
dec
xor
cli
int
mov
mov
or
movsl
cwtl
mov
mov
add
pop
aad
aam
in
sub
fistpll
pop
rorb
cs
jl
icebp
outsl
cmp
xchg
fsubp
es
ret
loope
nop
scas
sub
lock
inc
cs
adc
push
pop
xchg
rcl
outsl
jne
mov
sub
outsl
xchg
mov
push
dec
aam
pop
insl
mov
movsb
mov
ret
mov
and
stos
dec
mov
in
dec
pop
subl
addr16
lcall
dec
jo
mov
les
pop
scas
xor
popf
ret
jmp
test
cltd
dec
aaa
les
je
mov
inc
pop
push
fst
jge
lahf
outsb
out
jge
stos
in
push
sahf
mov
mov
orl
push
cmc
mov
push
loopne
mov
inc
mov
test
fnsave
sub
add
inc
shlb
lea
in
mov
or
mov
mov
pop
xlat
outsl
popf
jns,pn
push
or
pop
or
adc
mov
pusha
imul
vpunpckldq
leave
inc
cwtl
inc
mov
jne
movsl
adc
dec
movsl
cs
adc
ret
add
out
into
xor
sbbl
cmpsb
pop
cmpsb
mov
frstor
lret
cld
imul
push
jae
jge
jne
sbb
cltd
insl
repnz
add
ds
push
jecxz
mov
inc
or
and
add
lret
js
rcll
test
ljmp
adc
mov
and
dec
ja
cmp
jne
pushf
mov
xchg
mov
add
arpl
sub
out
enter
popl
repz
lret
pushf
and
addr16
dec
out
cmp
hlt
loopne
cmp
push
out
jecxz
and
daa
sub
jae
mov
loopne
out
repnz
imul
xor
jle
not
xor
cltd
cmp
sub
cmp
aaa
int3
popf
mov
hlt
mov
popf
hlt
shl
inc
stos
mov
inc
xchg
int3
push
push
xchg
dec
in
or
jo
mov
sub
out
jb
adc
mov
fldcw
push
imul
in
sub
inc
cwtl
iret
sub
fistpl
aaa
mov
pop
push
fmull
mov
loope
add
add
or
dec
movsl
pop
aas
scas
cwtl
lret
mov
xchg
loope
push
out
cmp
lods
fistl
shrl
arpl
inc
aaa
popa
xor
enter
iret
cmovle
loope
daa
mov
sbb
xchg
icebp
inc
pop
cmp
fldcw
jl
pop
dec
push
fisubrl
and
dec
and
sub
cli
xchg
inc
loop
cs
popf
cmp
daa
pop
mov
sub
xchg
rclb
xchg
fisubrl
mov
pop
fwait
jb
sbb
test
push
and
xchg
cmp
add
imul
pop
nopl
jnp
js
dec
adc
jmp
repz
hlt
xchg
rcrb
sub
cli
jmp
aad
lds
in
inc
inc
hlt
sarb
clc
xchg
dec
pop
inc
jo
fs
sbb
sahf
arpl
xchg
xor
js
lods
test
xchg
mov
mov
fcoml
shrb
repnz
mov
imul
aaa
fildl
test
xlat
push
outsl
inc
mov
dec
mov
or
xchg
subl
xchg
in
ret
pop
loopne
jns
dec
inc
popf
mov
pop
or
xor
std
mov
lods
popa
clc
cwtl
or
cmp
ret
jno
pushf
pop
int3
mov
shlb
pop
imul
in
mov
call
fsubp
stos
pop
sbb
mov
aaa
pop
xchg
mov
loopne
cmp
or
and
in
test
dec
and
les
fstp
repz
das
je
clc
loope
add
dec
into
xchg
dec
fadds
mov
jne
enter
push
jb
sbb
fadd
jb
dec
arpl
sbb
push
dec
cmp
adc
sub
loop,pt
mov
fldenv
ja
xchg
data16
lcall
pop
and
cli
mov
add
bnd
cltd
mov
sub
cmp
fbstp
ja
push
xchg
and
push
in
jne
or
in
addr16
mov
call
pop
mov
pop
push
jno
fistpll
test
fistpl
inc
movsb
adc
or
pop
push
subl
mov
mov
jb
push
insl
xor
dec
stos
js
dec
das
popa
mov
outsb
pop
sbb
inc
inc
pop
inc
cmpsl
add
mov
fwait
xchg
dec
pop
std
pop
inc
xchg
ret
rcr
fidivrs
adc
rorl
push
sub
mov
out
inc
aaa
decb
pop
cmpsl
xchg
mov
andl
test
push
inc
and
cmpsl
jne
lods
jmp
push
lock
mov
data16
pop
test
cmp
pop
pop
stc
sub
mov
mov
mov
mov
lods
mov
pop
pop
pop
inc
wrmsr
push
inc
or
repnz
lea
push
sar
ffree
push
jmp
sbb
push
aam
rorb
sub
imul
cwtl
out
dec
outsl
mov
xor
popa
dec
outsb
fists
lds
lahf
repz
sbb
mov
adc
cmpsl
push
sub
add
dec
mov
and
xchg
movsl
out
jns
int
into
xchg
sub
dec
mov
popa
mov
int3
arpl
je
pop
out
and
mov
xorb
imul
dec
mov
inc
push
test
xchg
pusha
mov
clc
cmc
mov
shr
call
add
outsb
int
push
push
mov
packsswb
out
adcl
mov
adc
sub
mov
popf
pop
nop
adc
inc
pop
bound
stos
or
ja
cmp
add
ljmp
cmpsb
test
insb
inc
cmp
in
push
fcoms
sub
xor
nop
repz
in
outsl
popa
test
insl
fxch
cltd
mov
mov
or
mov
push
cltd
pop
jge
sub
inc
pop
jle
out
fdivl
mov
data16
stos
sbb
out
mov
xchg
daa
insb
pop
jb
aaa
fwait
push
enter
lcall
or
jae
inc
dec
lea
lret
inc
mov
out
fldcw
test
jne
adcl
dec
rcll
fwait
jno
or
aad
xor
jg
sahf
xchg
icebp
cld
mov
add
das
sbb
push
or
dec
pop
enter
and
sbb
movsb
mov
mov
xchg
adc
fdivs
jl
stc
addr16
aam
neg
fldenv
and
push
cmpsb
push
xchg
jb
fnsave
sub
adc
sbb
xchg
adc
icebp
mov
jmp
jmp
inc
ss
xor
fistpl
scas
lock
fildl
or
cmp
adc
int3
in
jmp
cmpsl
dec
pop
in
adc
mov
mov
rorl
sahf
inc
pop
adc
cmp
or
jnp
push
jne
sbb
add
or
xor
loopne
add
mov
xor
lock
inc
or
sahf
xor
insb
adc
fcomp
adc
and
fs
andb
pusha
decl
jl
xor
jecxz
leave
test
leave
sbbb
cmpb
bound
pinsrw
daa
and
popf
mov
add
por
or
mov
scas
adc
fs
imul
aam
jae
xor
jecxz
mov
mov
mov
addr16
out
ret
loope
sahf
and
pop
test
xchg
pop
iret
cmpb
or
dec
outsb
jo
xor
inc
fsubl
adc
je
out
push
mov
or
add
sahf
or
push
movsl
insb
inc
shll
mov
aad
sarb
or
test
aam
cmp
stos
insb
shrl
movsl
mov
enter
cmp
test
push
mov
mov
fs
out
pop
xor
dec
xchg
scas
jnp
xlat
mov
sub
flds
sub
jno
gs
mov
fisubl
add
sub
test
xchg
or
dec
mov
daa
dec
scas
xchg
mov
arpl
mov
mov
fsubl
inc
dec
dec
xchg
dec
dec
dec
cmp
mov
xor
nop
mov
cmp
sub
out
notl
das
xchg
cs
pushf
add
mov
in
mov
xor
fsubs
lret
repz
dec
fsub
cmovo
xor
test
mov
pop
iret
or
xchg
ret
push
setno
xchg
xor
aas
and
and
scas
das
out
and
hlt
loop
push
dec
out
inc
setnp
lock
ss
xor
sbb
fstpt
icebp
adc
mov
xchg
insb
test
loopne
clc
add
cmp
mov
adc
lock
jno
adc
negl
pop
sub
mull
xchg
push
mov
cmp
jg
test
inc
jbe
or
sub
test
xchg
das
out
iret
test
sbb
adc
pop
mov
push
movsl
xlat
mov
ljmp
dec
mov
or
mov
repz
in
sub
or
es
mov
fiaddl
xchg
ret
cmp
fdivl
dec
aam
push
xor
leave
or
mov
cwtl
sub
lock
push
sbb
or
sbbl
push
or
stc
xchg
xor
sub
je
mov
movsb
pop
dec
mov
cmpsl
sub
fwait
mov
and
pop
out
rol
das
adc
sub
mov
test
enter
jp
scas
cmp
push
dec
movsb
mov
inc
addr16
cmp
push
cltd
vphaddubq
and
shll
dec
aas
push
leave
xchg
mov
movaps
add
xor
ret
dec
dec
in
fwait
outsb
cmp
or
and
ficoms
sub
jle
aad
mov
or
popa
jmp
enter
ss
test
mov
outsl
rolb
sbb
mov
jne
imul
hlt
xor
cwtl
rcl
inc
mov
popa
pushl
enter
push
mov
add
shrb
out
mov
mov
dec
add
dec
bound
js
aam
jmp
in
pop
cmpsb
out
subb
jmp
cmp
lods
xchg
jae
sub
adc
push
mov
mull
mov
addr16
icebp
push
in
fldcw
adc
push
push
push
dec
ret
icebp
push
in
rcrb
xchg
insb
test
cmp
push
dec
popa
int
hlt
sub
mov
insl
loope
ljmp
push
mov
pop
leave
push
and
cmc
in
cli
notl
pop
js
pop
or
cli
jns
rolb
mov
cld
add
mov
mov
push
dec
inc
push
cmp
scas
test
in
add
mov
sbb
test
cmp
jb
outsb
aad
push
adc
ja
jns
cmp
xor
movsl
cwtl
cld
aad
xchg
rorl
shl
scas
xchg
mov
push
and
cs
test
jns
cmpb
insb
sbb
decl
xor
rolb
push
lods
popf
lods
insb
mov
add
jge
push
addl
or
aas
lds
hlt
iret
xchg
pop
lret
push
or
jecxz
scas
fidivrs
sub
inc
iret
mov
jno
add
jo
xchg
jae
dec
addr16
aas
inc
jno
or
xchg
std
inc
fcmovbe
push
out
push
adc
test
pop
xchg
and
lcall
sbb
lds
sbb
and
mov
sbb
inc
push
ffreep
outsl
movl
adc
add
loope
lret
xchg
and
ret
jecxz
inc
dec
inc
mov
add
bound
dec
inc
cmp
and
insb
xor
adcb
pop
xorb
mov
or
sbb
cmc
into
pop
enter
mov
inc
jmp
pop
repnz
jnp
inc
das
add
pop
das
xchg
cmp
jg
push
adc
sbb
aam
jge
roll
add
push
pop
pop
lods
adc
xor
mov
xor
fs
sbb
jmp
jnp
push
pop
xor
push
jecxz
mov
pop
mov
fcoml
cmc
out
adc
adc
inc
imull
adc
lret
adc
jb
aad
lock
push
and
mov
repnz
clc
add
dec
push
dec
loop
ljmp
iret
cmpsb
addr16
out
je
adc
cld
pop
pop
inc
push
fisubl
pop
dec
mov
and
fcom
adcb
add
fiaddl
cmp
jl
mull
int3
cs
xor
sub
inc
mov
inc
psllq
icebp
popa
push
loope
pushf
or
sbb
cli
push
out
add
in
testb
icebp
xlat
fdivr
add
cli
xchg
out
out
popf
xchg
pop
mov
cwtl
mov
mov
stos
imul
fbstp
das
xchg
add
mov
repz
iret
dec
pop
cli
xchg
mov
xor
pop
inc
cmc
or
loop
or
bswap
mov
xchg
pop
fsubl
pop
push
daa
cvtps2pi
push
push
scas
lods
fbstp
cmpsl
dec
lret
and
mov
inc
add
enter
mov
mov
jl
pop
add
sub
and
xchg
lret
imul
cmpsl
mov
pop
mov
cmp
and
mov
divb
and
dec
jmp
sbb
mov
xor
into
or
loope
inc
mov
sbb
push
lcall
ret
inc
pop
push
es
loop
ljmp
push
mov
cmp
roll
cltd
movsb
inc
shlb
mov
inc
sbb
clc
mov
repz
out
sbb
sti
shlb
aas
cld
or
data16
hlt
adc
out
loopne
lahf
xchg
ss
add
and
cmpsb
daa
mov
and
lock
adc
or
out
and
ja
imul
mov
fsubrl
push
js
std
adcb
andl
sbb
or
je
sbb
inc
stos
mov
ljmp
aad
adc
sub
sub
ss
jb
jnp
loop
cmp
xor
mov
or
movsl
sub
jbe
lret
mov
inc
adc
lock
inc
xor
lods
movsb
mov
dec
imul
cmpsl
hlt
push
cmc
push
push
es
stos
xchg
push
call
add
mov
std
jle
hlt
mov
push
cmpsl
loop
aas
dec
mov
das
lods
pushf
sti
mov
cmpsl
mov
cmp
mov
or
mov
cmp
sub
hlt
or
mov
in
jl
insb
rcrl
add
pop
loopne
iret
inc
ret
push
push
push
or
jno
mov
push
push
aaa
cmp
cwtl
in
inc
shlb
xchg
sbb
adc
jp
movsl
jae
add
popf
xor
icebp
iret
repz
dec
jo
ljmp
mov
shlb
popa
cmpsl
mov
lea
movsb
leave
mov
mov
mov
xor
cltd
test
int
movsb
scas
sahf
inc
das
out
sti
ds
ds
xlat
popa
and
xchg
mov
push
xchg
mov
xchg
imul
lds
mov
mov
int
inc
mov
sbb
stos
cmpsb
gs
xor
jl
aad
pop
movsl
dec
pop
outsl
rcr
inc
fadds
in
mov
das
in
dec
std
or
test
pop
add
jne
sub
pop
adcb
xchg
mov
movsb
imul
xchg
pop
pop
mov
mov
ror
in
sbb
outsl
jle
mov
popf
sti
xchg
lods
dec
adc
cmp
inc
inc
jg
dec
in
sbb
adc
mov
andb
subb
cltd
int
pusha
add
add
adc
xchg
sti
aam
mov
inc
ss
test
inc
jo
scas
mov
add
rdtsc
test
pop
int
mov
sbb
test
mov
xor
cmp
lret
mov
lods
inc
xchg
popf
lea
pop
fimuls
ljmp
cmp
lods
sahf
xchg
pop
push
rolb
jmp
js
cwtl
imul
inc
les
out
arpl
les
test
scas
mov
cwtl
icebp
lcall
sahf
xor
push
cld
shr
and
ja
in
int
adc
cmc
shll
loope
inc
test
inc
dec
jmp
jnp
xor
push
push
es
cmc
pop
inc
in
insl
test
push
mov
aad
test
repz
lea
add
push
adc
les
cmp
dec
rcl
and
outsb
push
jecxz
xor
xchg
or
lahf
in
push
lea
stos
es
in
shrb
xor
aaa
cli
mov
imul
lea
xchg
ds
and
arpl
push
mov
negb
push
loop
test
xor
fisubl
loopne
imul
cmc
pop
sub
xchg
cmpl
lahf
mov
mov
mov
notb
faddp
test
in
sub
test
sbb
cs
jecxz
jecxz
sub
pop
cmp
lock
inc
and
xchg
loope
lcall
push
mov
aaa
aam
cmp
cmp
or
fnstenv
hlt
cmp
popf
ja
jmp
popa
nop
add
mov
xchg
lea
add
sub
lea
cmp
sub
jl
mov
mov
sarb
dec
push
sti
sbb
je
pop
sub
push
push
mov
scas
inc
push
inc
xor
sub
inc
cltd
jl
push
fsubs
cmpsl
sbb
pop
aam
jae
aas
loop
jg
add
dec
stc
les
in
xchg
add
outsl
ds
mov
rorb
scas
sbb
mov
adc
out
xchg
stos
dec
inc
sbb
lock
pop
inc
daa
stos
mov
popa
insb
or
inc
inc
jae
leave
jnp
xchg
fcmovnbe
test
xchg
lock
jg
loope
mov
add
push
fldt
popf
mov
xor
into
xor
xor
xchg
adcb
sbb
mov
or
dec
push
and
movsb
dec
mov
pop
in
pusha
jecxz
leave
jg
push
les
jmp
fimull
push
push
jb
andb
push
ret
cmp
jmp
pop
dec
cwtl
mov
adc
pop
mov
pop
cld
jns
cltd
mov
scas
sbbb
outsl
fstp
pop
xor
push
mov
push
stos
push
test
dec
xchg
mov
or
stc
push
or
mov
and
dec
aas
xor
inc
push
aas
das
sub
fiaddl
pushf
gs
pop
sbb
fistpl
dec
js
fs
icebp
out
lahf
pop
scas
xlat
pusha
sub
cmpsl
or
pop
fcmove
popa
cwtl
add
insl
leave
add
dec
cmpsl
cmp
cmp
pushf
ljmp
xchg
sti
inc
sbb
push
testb
sub
mov
sub
pop
adc
in
sarl
jge
mov
inc
mov
enter
or
mov
mov
mov
in
inc
add
cmpsb
in
adc
sbb
mov
jge
jno
arpl
les
push
inc
add
in
mov
sub
add
cmp
mov
clc
addl
decb
sub
bound
jno
das
adc
mov
das
scas
ret
scas
inc
dec
punpckhbw
and
ss
pop
push
mov
jo
loop
add
testb
dec
call
cmpsl
adc
pushf
mov
out
mov
sub
push
imul
shlb
mov
or
movsb
push
notl
sbb
mov
test
sbb
mov
repnz
cwtl
rolb
mov
adc
mov
dec
addr16
mov
fdivrs
in
fld
faddp
inc
push
and
mov
fs
sub
add
in
push
repz
jnp
mov
pop
mov
in
ja
adc
adc
subb
into
fdivr
and
sbb
xchg
xchg
pusha
pop
pop
or
sets
add
js
into
or
aad
repz
mov
ror
cmpsb
out
pop
jle
mov
mov
outsl
push
aad
xor
add
addb
lock
loop
outsb
pop
in
adc
sbb
mov
xlat
sbb
jo
cmp
xchg
sub
adc
rolb
cmp
sbb
jbe
push
adc
xlat
jp
mov
pop
xor
mov
push
mov
and
aam
cli
mov
push
add
sub
xchg
jo
dec
pusha
mov
dec
imul
stos
inc
mov
adc
push
lods
mov
xor
stos
or
push
rcrb
loop
cmp
out
icebp
out
add
popa
pop
imul
gs
mov
xchg
pop
bound
xchg
and
or
push
repz
ds
loopne
or
xchg
jne
es
in
adcb
mov
and
jge
mov
sub
mov
insb
test
dec
sub
sbb
and
push
pop
imul
fmulp
cmp
mov
ret
cld
pop
jp
cmp
xchg
bound
xlat
push
jmp
jb
testb
xchg
cmc
and
std
inc
insl
jns
or
or
jmp
leave
rcl
xchg
cmp
sub
and
mov
push
xor
mov
adc
lcall
mov
push
movsb
push
cmc
arpl
into
pop
mov
add
nop
into
pop
xchg
xchg
pushl
jb
adc
mov
or
mov
js
mov
add
int3
push
and
lea
and
bound
lods
jne
cld
ss
idivb
inc
dec
andb
call
xor
xchg
mov
add
sahf
or
test
or
aaa
mov
mov
leave
adc
das
push
mov
pop
cmp
inc
mov
add
xchg
xchg
xchg
out
cmpsl
insb
mov
sbb
lods
dec
lods
in
push
daa
out
push
cmp
mov
xchg
fnstenv
dec
or
cwtl
aaa
dec
dec
mov
xchg
and
xor
mov
dec
adc
loop
jg
imul
int3
mov
or
pop
addl
jnp
add
shll
loopne
fisttpll
push
fwait
adc
repz
add
sub
aam
lds
repnz
sbb
mov
fcompl
in
sahf
mov
iret
iret
inc
and
sub
test
in
mov
rdtsc
sti
cmpb
rorb
repnz
cmp
sahf
xor
leave
lahf
test
xchg
popa
loop
inc
sbb
fs
mov
push
aaa
adc
or
scas
hlt
out
xor
dec
jecxz
push
shll
fnstenv
xchg
pop
inc
mov
inc
cli
xor
and
jno
jnp
mov
pop
out
adc
jns
stos
cmp
in
mov
inc
icebp
std
movsb
dec
orl
cli
push
movl
xor
push
mov
cs
cmpsb
xor
incl
cld
push
mov
gs
dec
inc
loope
mov
cmp
insl
mov
and
mov
repz
add
movsl
xchg
out
dec
sti
leave
pop
mov
ret
addr16
cmp
xchg
enter
data16
fmuls
push
push
xchg
mov
loop
fcmovu
icebp
imul
add
leave
mov
or
aam
sbb
scas
fucomip
mov
lret
inc
jns
pop
in
movsb
fldcw
push
push
mov
inc
and
add
jno
roll
add
push
jno
or
scas
or
imul
or
loope
dec
sbb
aad
xchg
aaa
mov
mov
jne
sub
mov
xchg
push
and
pop
xchg
adc
aaa
adc
dec
push
enter
mov
pop
xchg
nop
mov
scas
aad
dec
mov
cs
jmp
hlt
jge
dec
cli
lret
adc
movsb
repnz
mov
jns
mov
xchg
adc
mov
cli
dec
daa
add
gs
mov
test
cli
jmp
das
sbb
mov
push
sbb
jmp
add
ret
and
fdivr
add
adc
inc
mov
ds
pop
test
push
and
inc
jb
lcall
pop
loopne
xchg
cmp
iret
xor
iret
mov
daa
inc
aas
scas
mov
lea
jnp
test
sar
loop
or
cs
daa
add
cld
std
sbb
movsl
repz
and
pop
xor
push
ljmp
inc
xchg
cmp
xorl
pop
mov
js
jmp
pop
inc
pusha
data16
aam
test
out
xor
cwtl
mov
arpl
add
movsb
lods
jmp
mov
and
adc
inc
mov
mov
mov
imul
outsl
mov
sub
cmpsb
push
xor
push
std
loope
aad
stc
leave
mov
and
fwait
insl
inc
pop
clc
mov
rorl
mov
hlt
sahf
mov
mov
lahf
hlt
jae
popf
cmpsb
push
fxch
mov
pop
xchg
lds
leave
sub
add
xor
fdiv
out
out
sub
test
adc
or
sub
push
clc
sub
xchg
and
pop
mov
mov
fstps
dec
lcall
lret
jle
mov
cmp
test
cltd
mov
sub
movsl
mov
jns
mov
push
jne
out
push
jmp
hlt
jb
test
les
aaa
or
push
push
adc
test
fbld
cmp
mov
cmpsl
mov
mov
dec
cmp
subl
outsb
test
xchg
jae
ljmp
add
aas
push
dec
jb
adc
mov
adc
stc
jns
data16
movsl
sar
out
dec
bound
and
popf
fs
pop
mov
sub
test
test
lods
das
jg
adc
aam
movsl
lods
out
lret
and
dec
enter
je
outsb
and
shl
in
or
cli
mov
subl
fcoms
adc
hlt
jae
into
or
sti
mov
mov
mov
int3
stos
les
xchg
lods
mov
scas
cmc
ja
or
shrl
in
pusha
push
ljmp
inc
ja
cmpsl
fdivrs
ret
inc
sub
inc
adc
pushf
pop
push
mov
dec
and
inc
push
in
das
xchg
pop
jge
dec
push
push
lret
call
push
test
mov
jle
pusha
movsb
js
jae
movsb
mov
push
mov
bound
jmp
mov
pop
pop
fmull
ret
or
movsb
mov
xchg
fadd
pusha
orb
and
shl
outsb
bt
mov
pop
in
mov
mov
test
insb
add
pushl
and
repnz
mov
loop
dec
aam
dec
mov
or
pop
cltd
test
mov
cmp
ss
inc
cli
mov
pusha
out
or
inc
inc
add
lds
xchg
fcomps
sbb
int3
test
xchg
dec
mov
inc
pop
pop
mov
mov
lods
subl
stc
xor
out
sbb
nop
jne
sub
cmp
jmp
add
xchg
mov
pushf
je
into
cli
adc
out
xor
mov
scas
stos
adc
int
cmp
js
pop
fisttpll
pop
lock
imul
or
add
mov
mov
mov
inc
scas
lret
and
sahf
or
icebp
inc
hlt
push
test
cmpsb
adc
in
pop
pusha
cmp
pop
aam
orl
push
push
loope
pop
push
mov
mov
pop
push
jle
inc
movsb
sbb
or
fs
mov
addr16
insb
fisttps
push
scas
enter
pushf
inc
les
lret
loope
adc
push
sbb
mov
mov
xor
movsb
xor
repnz
test
push
arpl
xchg
and
add
push
aas
lods
xlat
push
xchg
xor
add
rolb
outsl
call
sbb
push
push
push
bound
cmp
ss
nop
outsb
mov
and
shlb
out
cltd
cltd
jmp
add
adc
adc
xor
ret
aam
scas
mov
cmp
popf
cmp
or
sub
xor
imul
lods
in
filds
fstl
dec
cwtl
mov
add
push
lret
js
aad
pop
fsts
int
jo
and
dec
xor
push
xchg
clc
pop
pusha
movsb
lcall
loopne
inc
dec
test
out
and
xchg
outsb
rcrl
push
mov
jg
xchg
cwtl
movsl
push
pop
push
push
jae
mov
xchg
or
xor
in
ja
pusha
mov
pop
jnp
fsub
jg
sti
sub
iret
jo
cmp
pusha
push
scas
cld
xor
lods
ds
sbb
xchg
addl
pusha
mov
sbb
rorl
aas
xorl
imul
js
mov
jmp
sub
sbb
movsb
inc
sbb
xor
enter
test
jp
sbb
pop
mov
inc
in
hlt
mov
enter
lcall
imul
inc
xchg
ljmp
adc
push
arpl
dec
push
data16
std
adc
xor
pop
cmpsl
mov
cmp
movsl
iret
xchg
pop
arpl
popa
mov
test
rolb
or
push
jmp
stos
lea
pusha
in
fnstsw
xor
inc
daa
or
cmpsb
sub
je
in
roll
xchg
rolb
nop
outsl
and
daa
mov
and
jns
dec
aad
je
push
bound
jmp
out
fildll
jecxz
mov
outsl
fsts
repnz
insl
int
int
pop
pop
mov
push
jae
popf
out
test
stos
fsubs
cmc
les
cmp
in
ret
insb
aas
orb
imul
mov
cmp
ret
bound
aaa
pop
ss
dec
xor
xchg
loopne
xlat
test
jae
insb
inc
ss
cltd
repnz
shll
fldl
jne
jecxz
je
movsb
shrl
fcoml
or
das
ljmp
add
call
arpl
add
shll
ret
push
pop
repz
add
add
je
cmp
and
test
jg
mov
add
sbb
xchg
mov
imul
jno
cltd
es
and
xchg
and
mov
mov
pop
fidivrs
inc
shr
cs
push
mov
xchg
aam
aas
int
xchg
jl
cwtl
push
repz
pop
and
sbb
xchg
jnp
xchg
incb
pop
lds
std
cs
and
jp
fwait
imulb
ds
and
mov
mov
stos
jne
push
inc
pop
mov
inc
aad
or
ret
out
cmpb
outsb
push
pusha
and
lods
clc
xchg
pushf
cmp
or
lods
gs
lret
xlat
cmpsb
stos
fsubrp
icebp
repnz
popf
lret
inc
das
and
sbb
cmp
pop
stos
xor
push
flds
jecxz
and
cmp
rorl
sbb
jmp
inc
adc
push
cmp
adc
addb
mov
mov
xor
pop
jnp
dec
pop
mov
das
icebp
dec
das
pop
imul
push
stc
push
or
xlat
jg
lock
push
mov
or
mov
stos
push
adc
daa
pop
rcll
xabort
negl
shll
xor
mov
in
mov
test
mov
mov
call
icebp
cmpsb
je
pop
test
in
pop
pop
test
push
adc
dec
rclb
icebp
jl
or
pop
mov
inc
ss
mov
mov
ljmp
fmuls
push
in
inc
fcompl
xor
aam
mov
arpl
xchg
and
or
xor
push
jbe
or
int
cmp
push
scas
or
push
xor
or
xchg
cmp
scas
mov
inc
stos
xchg
movsl
cmp
mov
mov
xor
das
push
aaa
pop
or
int3
repz
jo
pushf
lret
sbb
mov
adc
shrb
cld
enter
cmpsb
dec
cmp
sub
xchg
hlt
mov
sbb
clc
shll
push
mov
fdivl
out
aas
loope
jl
inc
xchg
ret
dec
mov
xorb
or
mov
fcoml
and
mov
ficoms
sub
push
iret
xchg
xlat
fld
movsl
inc
lea
mov
push
fnsave
out
fisttps
sub
bound
loop
jbe
mov
sarb
mov
and
jg
mov
xchg
push
inc
dec
fdivrp
push
jl
pop
fistpll
push
push
push
int3
sub
cmp
cli
pop
call
nop
and
mov
xor
gs
loope
sub
hlt
push
insb
add
das
mov
cmpsl
and
push
movd
fldt
dec
and
jb
ljmp
dec
mov
sbb
lahf
arpl
and
xlat
cmp
sub
jp
and
rolb
cltd
fildll
xchg
mov
push
out
add
mov
xlat
imul
popf
shll
idivb
shlb
test
outsl
aaa
shlb
ret
orl
mov
pop
hlt
adc
sub
jb
dec
scas
xchg
dec
test
push
add
pop
jne
xchg
mov
push
es
xchg
int
es
mov
test
mov
push
lea
xor
add
or
scas
push
sahf
xchg
fildll
outsb
xchg
pop
mov
ds
and
adc
mov
daa
mov
int3
sbb
sub
iret
iret
sub
inc
clc
xchg
adc
stc
movsb
cmc
ret
aam
dec
test
popf
sarb
push
push
xchg
fwait
inc
mov
xchg
insb
inc
adc
roll
sti
repnz
jle
jmp
out
add
or
mov
push
cmp
jne
mov
insl
xor
cmpsl
mov
fcmovne
shlb
lds
adc
lret
jb
test
pop
xchg
cmp
fisttpll
pusha
jae
shrl
push
pop
or
adc
xchg
sub
test
pop
dec
cwtl
int
stc
aam
push
add
loope
shr
or
sub
xchg
xchg
inc
mov
jecxz
dec
scas
rep
adc
aam
jbe
dec
xchg
out
pop
cmp
or
addr16
in
ret
arpl
cltd
pop
push
push
mov
push
dec
lret
aad
mov
cmc
inc
in
sahf
fucomip
push
stos
xchg
push
push
js
pushf
insl
mov
jne,pn
adc
bound
lahf
xchg
mov
jmp
push
imul
cltd
or
sub
jge
in
movsl
movsb
out
ror
cltd
and
cs
test
cmc
pop
sbb
inc
int
adc
int3
repz
xchg
shlb
enter
je
add
insl
dec
lods
or
int3
push
enter
imul
jp
push
lea
xlat
xor
mov
iret
cltd
push
jge
and
sub
pushf
in
pop
push
sub
gs
pushf
pop
push
mov
and
xchg
push
push
cwtl
inc
jmp
leave
shrl
aad
dec
mov
dec
iret
and
out
mov
hlt
fwait
push
scas
push
gs
cmp
pop
imul
sub
notl
cli
aaa
imul
mov
cmp
cs
out
loope
std
push
inc
push
cmpsb
mov
daa
pop
addl
jecxz
push
pop
inc
scas
mov
lcall
push
std
mov
push
fmul
lock
pop
mov
sarl
cltd
imul
adc
xchg
inc
popf
cwtl
popf
and
xchg
pop
push
and
mov
rcrb
insb
or
jp
cmp
inc
out
inc
mov
or
cmpl
nop
addb
jb
adc
mov
or
jp
jg
and
xor
aad
mov
xchg
int
jnp
xchg
sbb
inc
cs
test
cmpb
ficoml
movsl
dec
push
mull
jbe
aad
lret
add
inc
dec
cmp
adc
and
mov
pop
sub
in
push
jle
idivb
jmp
js
enter
addr16
aas
shr
inc
test
mov
mov
cld
pop
push
jbe
fldenv
mov
sub
outsb
ja
hlt
outsb
hlt
sfence
add
cs
xchg
dec
mov
divb
jae
add
loop
adc
mov
adc
mov
jge
or
outsl
inc
pop
fwait
xor
push
push
inc
rorb
add
push
adc
repnz
lahf
in
addl
pop
mov
adc
push
daa
push
sbb
push
xchg
add
mov
jle
cmc
aam
popa
lods
push
inc
jb
dec
inc
cmp
popf
les
call
dec
and
cli
add
jnp
cld
jmp
cltd
pushf
loope
mov
aaa
pop
and
in
xchg
jbe
roll
push
mov
jmp
dec
mov
lock
cmpsl
repz
mov
into
dec
int
inc
and
loop
add
test
aaa
mov
loope
dec
pop
fs
inc
xor
je
push
paddb
in
mov
mov
push
cmp
sub
mull
pop
xchg
pop
and
jl
int
in
push
arpl
sub
push
jmp
test
mov
mov
push
punpckhwd
sbb
jbe
push
in
mov
jg
stc
ret
add
mov
sti
push
fwait
xchg
jl
push
mov
add
arpl
leave
sbb
fsub
and
enter
or
push
jne
hlt
shrl
and
psubusb
sub
and
pop
xabort
int
dec
jnp
mov
aam
pop
xchg
das
dec
lcall
or
and
je
pop
aad
push
mov
lods
pop
pop
add
fucomp
inc
movsb
cmp
ret
dec
mov
scas
dec
stc
pop
out
enter
sub
int3
imul
popa
dec
lock
cld
repz
fadd
das
cld
movsb
aad
aad
adc
call
movsl
mov
mov
rorb
icebp
sahf
inc
or
lahf
js
lahf
jmp
xchg
inc
adc
or
sbb
xor
sahf
mov
mov
xor
jge
and
pop
lcall
lods
fs
das
push
xlat
and
add
xchg
push
mov
sub
or
pop
test
addb
sub
push
outsl
pop
into
push
jmp
out
sub
imul
mov
or
aam
addl
cmp
xchg
arpl
dec
push
addl
ja
stos
dec
cmp
cmc
es
dec
stos
andl
loopne
add
fcmovnu
lods
mov
aaa
push
or
movsl
xchg
dec
dec
sbb
lods
jnp
scas
add
adcl
std
js
sbb
mov
xchg
pushf
mov
iret
or
xchg
cmp
loop
ja
nop
in
add
cwtl
mov
cmp
clc
jne
pushf
popa
cmp
mov
jge
pop
and
xor
bound
pop
rcrl
jne
inc
dec
mov
pop
int3
add
cmpsl
cmp
pop
lock
in
decl
inc
jne
mov
xchg
aaa
xor
hlt
xchg
jmp
pop
inc
xchg
push
aaa
pop
mov
jecxz
and
xchg
sub
mov
xor
loope
fucomip
and
sbb
add
xor
dec
mov
xchg
push
or
push
mov
stos
xchg
xchg
popa
cmp
and
enter
add
add
ficoms
mov
test
jmp
xchg
pop
xor
push
imul
in
xor
loop
sti
or
fisubl
cmp
or
push
gs
xlat
leave
and
push
mov
arpl
lcall
pop
inc
shl
lcall
sbb
dec
sub
mov
hlt
call
pusha
sub
in
mov
fisubrs
rcl
rolb
push
or
fistpll
je
inc
repz
and
add
push
leave
mov
add
add
mov
sub
notl
sub
sbb
add
cmp
and
pop
cmpsl
or
in
stos
dec
out
ja
inc
jecxz
add
lahf
pop
pop
testl
pusha
imul
fnstcw
adc
adc
dec
in
xchg
pop
test
movsl
and
aam
add
addps
hlt
jo
sub
push
mov
xchg
cld
aam
jne
dec
mov
sbb
sub
xor
dec
mov
sahf
and
cmp
push
xchg
sbb
fildll
and
push
cmpsl
jne
lods
adc
shl
in
push
xchg
mov
out
pop
aaa
mov
sub
mov
sti
lock
mov
or
push
jge
mov
mov
and
aam
out
and
dec
dec
sbb
insb
nop
adc
inc
mov
mov
push
out
stos
push
pop
sub
pop
je
and
imul
roll
bound
mov
push
push
push
push
pop
iret
in
push
fsubrp
call
dec
negl
das
push
rcll
push
mov
mov
and
negl
mov
inc
push
scas
lahf
mov
pop
lods
stc
cmp
sub
push
ja
inc
jnp
add
je
jbe
std
cld
mov
cmp
or
inc
xor
mov
mov
fcmovu
pop
scas
scas
fiadds
xor
xchg
inc
sahf
jecxz
lock
lret
add
sbb
cld
mov
or
cltd
loopne
lret
jno
inc
mov
loopne
xchg
or
stos
mov
sub
loope
call
adc
push
dec
or
lret
inc
aaa
xchg
rclb
inc
jecxz
mov
ret
push
pop
int
xchg
enter
stos
sub
popf
hlt
add
jns
mov
jns
pop
jmp
inc
jl
adc
icebp
fdivrl
shl
test
neg
cmpsl
sbb
mov
and
jae
sbb
mov
int
lahf
sti
jmp
insl
pop
dec
mov
xchg
dec
cmp
mov
xchg
jmp
clc
call
push
insl
rcrl
es
xchg
push
pop
lret
rcr
shlb
rorb
inc
sbb
outsb
mov
push
pop
adc
mov
stc
cmp
mov
cmp
and
add
pop
inc
out
ret
das
imul
aam
push
xchg
mov
cli
mov
or
dec
movsb
cli
out
inc
and
xor
insl
sbbb
or
push
jb
add
les
clc
add
dec
push
and
jno
movsb
add
xor
js
fldcw
inc
mov
mov
dec
call
pop
sub
adc
stc
insb
mov
std
sub
iret
shrl
and
pushf
mov
stc
lcall
ja
fimuls
jmp
xchg
mov
sbb
call
cmp
gs
jne
pop
addps
mov
fmull
jns
cmp
add
add
xchg
push
hlt
ds
int3
sbb
jp
pop
cmpsb
sub
mov
mov
dec
mov
pop
ret
sub
push
dec
mov
jb
adc
loopne
in
xor
jg
xlat
dec
scas
jmp
push
cwtl
sarb
cmpsl
mov
xchg
stos
loopne
jp
ds
lret
inc
test
clc
test
dec
cmpl
scas
fcompl
hlt
cmc
insb
stos
jae
adc
pop
or
or
scas
dec
iret
xor
mov
mov
icebp
push
jg
mov
hlt
sub
pop
and
cmp
addl
lahf
mov
sbb
sub
add
jg
fsubp
movl
xor
add
and
in
lcall
nopl
das
sub
adc
sub
sub
in
jb
or
xlat
shlb
sub
xchg
loopne
sbb
in
push
jns
adc
or
mov
push
imul
adc
push
mov
icebp
daa
jecxz
mov
mov
inc
xchg
std
adc
inc
mov
fisubs
stos
cltd
cmp
sbb
xor
jo
add
xchg
shrb
addl
int
mov
adc
mov
add
mov
xchg
ja
sub
nop
sahf
popf
out
filds
das
adc
mov
adc
mov
mov
push
xchg
lds
jmp
sbb
mov
add
fcomi
rolb
mov
popa
or
shlb
push
aam
pop
in
test
inc
and
std
jbe
ret
imul
and
rorl
dec
mov
mov
mov
jg
sti
cmpsl
adc
lret
adc
in
aas
and
and
fidivrl
add
fisubs
sbb
arpl
or
xorl
js
dec
mov
ret
test
hlt
jns
push
fdivl
lds
leave
mov
sub
les
pop
je
cmp
mov
cmpsl
cmpsl
adc
sub
push
outsb
fidivrs
imull
push
or
push
leave
mov
push
inc
gs
ret
mov
enter
daa
gs
mov
inc
adc
ficoms
inc
dec
xor
dec
sub
lods
jge
cwtl
adc
push
mov
xorl
cmp
xlat
sarb
jecxz
jmp
jmp
in
aas
sub
pop
fisubrl
mov
push
adc
arpl
sub
lcall
std
movsl
test
sbb
add
mov
shrb
push
sub
pop
mov
xchg
in
out
lods
loope
adc
mov
std
popf
adc
add
in
inc
or
ret
outsb
cld
mov
shr
push
mov
adcb
dec
mov
les
mul
xor
lods
jo
fnsave
shl
sahf
mov
arpl
mov
ss
and
xchg
or
adc
dec
pop
mov
mov
lock
mov
outsl
cli
lds
ja
jno
mov
hlt
fistl
movsb
xor
add
aam
lcall
stos
iret
aaa
stos
pop
sub
push
cmpsl
mov
mov
std
mov
cli
jl
pop
xor
enter
cmp
xchg
xor
sbb
jo,pt
lods
jmp
mov
cmpsl
aaa
cld
and
in
or
es
push
sub
movlps
mov
les
stos
add
mov
inc
xchg
mov
mov
pusha
test
xlat
rcl
adc
inc
xchg
jecxz
outsb
popf
and
xchg
pop
les
and
and
mov
jecxz
jmp
int3
mov
outsb
pop
jmp
les
aaa
addl
xchg
jo
mov
cltd
adc
in
jb
test
mov
loop,pt
or
ror
push
iret
dec
scas
push
cmp
sbb
call
out
xor
sbb
push
cmp
cwtl
mov
xor
push
jb
xchg
mov
mov
test
xchg
out
pop
pop
pop
push
fimuls
lahf
rclb
mov
lret
add
xor
cmp
cmovp
loope
setae
pop
mov
adcl
aaa
movsl
and
push
adc
add
flds
cmpsl
ret
fs
dec
push
aad
xor
jge
out
mov
bnd
popf
cmpsl
shrl
dec
or
rcrb
std
and
or
addb
add
sarl
cmp
pusha
and
jl
imul
or
in
aaa
add
outsb
pop
popf
insb
and
lods
mov
mov
mov
cwtl
xor
in
out
xor
xor
pop
sbb
outsl
enter
dec
shll
and
movsl
and
std
insl
pop
sub
lock
ficompl
push
push
sbb
nop
int
cmp
mov
nop
cmp
stos
pop
test
lahf
and
mov
lret
mov
fcmovnb
dec
mov
xchg
push
sub
clc
and
popf
sub
xor
xor
push
jb
inc
cmovbe
mov
jge
pop
fnsave
mov
mov
and
push
adc
stos
es
sahf
mov
cmp
push
jns
ss
popa
movl
sahf
dec
jmp
sub
sub
push
jl
or
fnsave
lret
ss
sbb
loope
or
push
lea
fidivrs
or
mov
stc
aas
cmp
pop
loop
mov
dec
aam
and
rolb
push
jmp
shll
pop
sahf
and
jp
and
imul
test
add
adc
cmp
lea
inc
xor
push
cltd
lock
ret
pause
pop
out
cmp
mov
and
push
fidivrs
pop
cmpsl
movq
fsubrl
enter
jmp
repnz
insb
mov
mov
push
les
xor
fists
sub
cli
mov
mov
leave
das
and
adc
sbb
add
out
std
loope
cmp
inc
icebp
iret
inc
ja
dec
ljmp
lahf
aad
cmp
adc
icebp
aad
mov
enter
out
push
rolb
ja
add
mov
and
mov
insl
pushl
ja
mov
addl
data16
dec
mov
add
jbe
stos
dec
mov
cld
sub
fldenv
jno
pop
aad
pop
sub
loope
cmpsb
outsb
jb
inc
push
sbb
push
inc
jns
fwait
adc
scas
push
ja
inc
xor
sbb
inc
test
and
test
xchg
mov
push
ljmp
jb
mov
push
push
cmp
xor
mov
hlt
and
out
int3
jns
clc
aaa
sub
in
loope
leave
fcompp
jbe
and
mov
loope
pop
pop
and
lock
shr
xchg
in
pop
dec
fwait
xchg
jecxz
xor
jmp
loopne
scas
das
push
cmpsb
mov
imul
out
cmp
push
pop
mov
pop
jge
adc
call
aad
push
add
mov
or
dec
xchg
lahf
xor
push
jl
pop
enter
xor
pop
idivb
hlt
aaa
jbe
mov
mov
rorb
pop
call
arpl
mov
push
mov
push
pop
cmpsb
jmp
jl
pop
pusha
mov
ficoml
mov
fcomi
fucom
bound
rcll
aam
pusha
clc
mov
shrl
and
fldl
mov
sub
add
lahf
lahf
and
incl
cld
cmp
fcomp
nop
testl
or
out
inc
jle
dec
ret
js
jns
movsl
sub
inc
mov
add
imul
aad
sbb
inc
js
or
loopne
movsl
xchg
push
inc
loop
sub
fldt
sbb
lds
mov
mov
jge
insl
dec
mov
aas
imul
xchg
jne
addr16
xchg
pop
mov
mov
sti
jl
dec
dec
fcompl
xor
mov
test
jl
popf
inc
mov
pop
sub
sub
cmp
push
icebp
mov
paddsb
ljmp
dec
xchg
fistl
mov
repnz
pop
dec
loope
lcall
negl
subb
dec
iret
into
pop
and
into
ljmp
pop
jnp
or
shlb
aaa
cmp
or
mov
ret
and
in
pop
mov
jp
sahf
jne
jo
dec
fnstcw
sbb
pop
mov
test
jo
out
inc
decl
popa
push
dec
or
jo
xchg
mov
lret
je
dec
fstpt
push
clc
outsl
sbb
lods
push
push
repnz
fwait
rorl
imul
jge
mov
fwait
insb
ret
add
imul
lret
aaa
test
sbb
cld
ja
loopne
rcrb
arpl
ja
test
sbb
enter
adc
stos
mov
out
lods
lret
test
pop
popa
push
daa
cmp
popa
xlat
add
js
add
adcb
sbb
jbe
sub
and
lods
xchg
xlat
pop
push
push
sub
jp
imulb
sahf
pop
leave
mov
das
inc
dec
lds
test
test
cltd
rcll
dec
sbb
ja
lcall
sub
xor
rclb
mov
push
sub
scas
in
and
les
lcall
shrb
popa
add
mov
xlat
pushf
jg
push
cmp
movsb
cli
lahf
das
jne
lahf
mov
shr
ret
test
repnz
xchg
add
push
push
cld
and
pop
dec
fnstenv
int
repz
xchg
rcrl
data16
add
sub
adc
cmp
fldenv
and
std
aaa
push
mov
xor
mov
loope
aam
in
dec
and
popa
sbb
xor
mov
rorb
jge
or
pop
pop
out
inc
inc
jmp
push
or
sbb
jne
mov
cmpsb
les
jae
js
pop
push
aad
in
cmpsl
pushf
cmp
dec
lods
popf
jl
xchg
dec
add
mov
mov
daa
lret
xchg
mov
pop
lea
daa
jb
fisttpll
sub
arpl
hlt
add
out
cwtl
ss
lea
popf
shrb
mov
add
cld
dec
movsb
cli
scas
sub
mov
mov
lock
mov
cltd
cmc
jno,pn
xlat
push
nop
mov
ja
sub
imul
sub
sbbl
xchg
scas
ffree
mov
inc
sbb
js
mov
and
out
mov
lods
sbb
push
insb
inc
leave
lret
cmp
push
mov
ret
push
pushf
add
cltd
pop
push
adcb
xor
imulw
sti
fadds
inc
imul
adc
nop
push
lcall
pop
rclb
push
popa
out
cs
std
mov
push
cltd
jp
ficomps
shlb
sub
or
jb
cmp
dec
adc
adcl
out
aaa
cmp
gs
jle
sarb
jle
je
mov
scas
scas
adc
fcomi
fstps
sbb
push
std
mov
int3
aad
rcrl
push
or
inc
push
sub
shl
fbstp
dec
or
data16
and
test
sbb
xor
mov
cld
mov
pop
sub
daa
add
scas
pop
lods
jge
lcall
dec
cs
dec
push
mov
dec
std
test
test
adc
jne
fdivrl
fldenv
sbb
push
push
xor
imul
stc
cli
mov
inc
lea
cli
shlb
push
out
jnp
shrl
mov
rorl
lahf
xor
push
adc
xchg
or
xor
adc
jnp
add
mov
lds
xchg
lds
fistps
jnp
mov
cmp
jp
xor
xor
or
scas
sub
mov
mov
leave
in
dec
mov
jp
jl
adc
or
dec
verr
xor
xor
pop
cli
in
or
jo
ljmp
shlb
stos
pop
pop
sub
pop
out
push
popa
js
repz
push
outsl
mov
fistpl
fildll
or
shrl
jbe
and
mov
data16
mov
cbtw
cld
xchg
outsb
dec
out
jge
jl
mov
mov
clc
mov
sbb
lret
cmp
jo
pop
mov
fidivrs
jns
dec
gs
scas
outsb
add
mov
ret
xor
push
pop
pop
inc
fnstcw
mov
mov
mov
xchg
lahf
mov
mov
in
jmp
xchg
testl
lea
jne
cmp
push
leave
mov
jmp
clc
ret
loope
aas
push
adc
pop
push
mov
sub
fwait
das
addr16
inc
bound
into
adc
adc
and
aas
sahf
jne
out
xor
push
inc
mov
cs
mov
dec
or
out
inc
loop
mov
fisttpl
das
daa
cld
and
lret
int3
ficoml
lods
ds
outsb
mov
jo
cld
cmp
cmpl
jne
test
cs
outsl
daa
scas
stc
arpl
xor
shlb
xor
inc
fildl
xchg
and
xchg
sub
enter
add
dec
stc
add
adc
test
mov
mov
xor
in
inc
mov
lds
test
notl
stc
nop
mov
jge
jbe
in
repz
faddl
sub
imul
lcall
or
shlb
test
adc
aam
fxch
or
adc
aad
in
inc
inc
dec
js
and
sti
and
shl
jge
std
cmp
stos
es
outsb
lods
test
sti
sbb
sbb
cs
mov
jle
dec
push
pop
xchg
pop
into
xor
mov
outsb
inc
xchg
mov
push
rcr
imul
aaa
shlb
daa
inc
in
and
inc
push
sbb
nop
jns
ret
mov
and
pop
sbb
mov
movsl
fldpi
push
into
sarl
pushf
sbb
jo
add
out
stos
shr
mov
lods
insb
scas
test
cmp
adc
xchg
mov
dec
jecxz
rorb
int3
mov
sub
popa
jae
insb
pop
adc
andb
popa
inc
sbb
ss
mov
arpl
inc
add
dec
mov
hlt
ret
add
sub
and
xchg
mov
stos
loop
lahf
lea
jmp
cmp
je
push
test
pusha
and
mov
mov
dec
ror
mov
in
push
ret
cwtl
or
mov
lret
shl
xchg
mov
xlat
testb
adc
dec
xor
add
rol
sahf
push
ret
cmpsb
jb
cmp
mov
daa
mov
push
out
adc
out
cwtl
jecxz
sub
cmpsb
inc
jns
push
shll
xor
ss
cmp
mov
inc
dec
das
mov
push
xor
cmp
xchg
rcr
mov
aas
and
pop
mov
mov
push
lcall
sub
pop
sub
xlat
ficoml
adc
lret
outsl
pop
movsb
iret
dec
fcoms
mov
push
sahf
test
jle
dec
jmp
lret
stos
xor
xchg
mov
fnstsw
add
lock
fsubrs
push
ljmp
fisubs
push
sub
pop
rcrb
cmp
push
pop
testl
imul
jg
icebp
push
rolb
xor
sub
sub
sub
aas
aaa
mov
dec
and
pusha
push
rorb
jle
int
inc
aaa
fwait
inc
dec
mov
insl
add
and
dec
mov
bound
stos
lock
ds
pop
out
cmp
lahf
pop
cmp
jmp
mov
hlt
push
mov
sub
push
mov
fmull
pop
rclb
jmp
dec
pop
adc
outsl
cmp
push
pop
nop
mov
sbb
pusha
mov
movsl
in
jno
cmc
repz
sahf
sub
pusha
fadds
addr16
ficompl
mov
jno
xchg
data16
cmp
pop
clc
ret
sub
xchg
pushf
and
outsb
push
enter
jae
sti
orl
and
dec
cmp
in
cmp
dec
es
hlt
sub
or
test
sbb
shrb
neg
push
insb
hlt
dec
mov
pop
xor
adc
dec
inc
push
incl
adc
pop
std
cmp
adc
fisttps
cs
adc
mov
loope
adc
scas
fiaddl
mov
sub
push
cwtl
sub
clc
xor
push
imul
push
push
stc
popf
jle
push
mov
in
iret
dec
pop
mov
out
das
aam
cmp
sub
dec
cmp
jecxz
push
or
nop
imul
lret
inc
pushw
out
jmp
ljmp
sub
incl
xlat
out
xchg
insl
dec
lods
cmp
scas
out
jbe
pop
test
stc
js
pusha
negb
adcl
bound
adc
cmpsl
sti
insb
outsb
addl
daa
fbld
jecxz
mov
sbb
test
mov
dec
jbe
sahf
cmp
jmp
or
aam
ret
add
mov
cmp
pop
adc
xor
or
pop
dec
sbb
cmp
std
imul
xchg
pop
aas
xchg
dec
flds
mov
jp
out
mov
movsl
xchg
lcall
dec
adc
out
into
push
mov
lods
push
jnp
jnp
push
jp
ss
mov
push
pop
sar
das
push
repnz
inc
inc
xchg
pop
xchg
cmc
fstps
mov
mov
xor
jge
stos
push
enter
xchg
push
add
and
pop
xor
mov
rep
rorb
mov
movsl
jns
xchg
pop
jb
ficompl
mov
int
sbb
xor
dec
outsl
xor
push
sarb
inc
xchg
in
pushf
nop
daa
push
jge
push
jp
pop
cmp
pop
addr16
cmp
mov
mov
or
in
jae
lods
and
cmp
inc
xchg
lock
push
lret
scas
call
pop
mov
sahf
add
fisubs
cmp
xchg
xor
icebp
cltd
ljmp
mov
pop
das
fidivs
xor
leave
outsl
popa
out
cmp
dec
es
dec
pushf
add
in
out
fs
bound
push
aad
shlb
lea
add
sub
sbb
mov
scas
sbb
out
jl
shll
sub
into
ficomps
in
cmp
mov
adc
pop
test
cmc
xor
and
mov
mov
xor
pop
lret
push
daa
xor
mov
icebp
scas
or
mov
lea
mov
mov
es
sub
mov
jp
cs
jb
cmp
aaa
mov
and
xlat
cmpsb
clc
lods
adc
addl
jbe
mov
imul
scas
insl
mov
and
dec
or
fucomp
dec
xchg
add
mov
ret
mov
mov
xor
cmpl
xchg
icebp
xor
das
dec
cltd
add
lods
fcoms
sub
mov
loope
sbb
sub
mov
out
dec
xchg
lds
loopne
mov
mov
in
and
mov
xchg
and
jae
push
addr16
push
ret
jmp
push
call
xchg
sub
or
mov
jne
shrl
pop
mov
js
bound
aam
bound
jnp
jno
mov
icebp
inc
pop
bound
inc
aad
or
dec
out
xchg
dec
push
icebp
fisttpll
mov
stos
movsl
sub
in
mov
adc
jge
dec
leave
into
add
mov
mov
add
mov
adc
subb
cmp
loopne
cmpsl
mov
out
ret
jnp
jo
data16
js
add
push
repz
in
inc
push
inc
cmp
dec
xchg
dec
movsb
sbb
pop
mov
and
xor
and
sub
mov
cmpsl
push
mov
call
bnd
jge
add
sub
or
xchg
or
mov
mov
sbb
mov
xchg
out
mov
enter
jo
xchg
adc
jno
mov
pop
fildll
jbe
push
mov
lods
imulb
xorl
sub
jge
in
out
lods
repz
pop
xchg
sbb
addr16
mov
stos
cmpsb
sti
and
iret
pop
inc
fidivrs
mov
xor
out
jmpw
stc
adc
cmpsb
xorl
imull
sbb
xor
movsb
and
loopne
jecxz
cmp
aas
out
aaa
adc
dec
inc
cmpsl
inc
arpl
push
pushf
or
les
push
aas
sbb
and
mov
dec
jl
imul
mov
cmp
or
and
scas
xchg
mov
aad
rclb
jo
or
pop
imul
pop
js
repz
imul
fstps
inc
dec
lret
xchg
or
cmp
sub
adc
push
loop
mov
jno
rcrl
test
lea
into
mov
pop
inc
fildll
mov
pop
ffreep
ds
pop
push
mov
push
xchg
scas
add
inc
cwtl
mov
inc
or
adc
out
cmp
xchg
xchg
lret
daa
mov
pop
inc
mov
movsl
inc
clc
cmc
loopne
push
outsl
xchg
sbb
xorl
push
icebp
dec
iret
jb
gs
mov
insl
cmp
add
adc
mov
lods
xor
ja
pop
jmp
lock
lret
mov
test
jl
mov
and
mov
fldt
lds
pop
or
adc
mov
xchg
pop
xchg
outsl
rorl
inc
enter
ds
sbb
aaa
lods
xchg
in
sti
cmpsl
push
imul
addl
fstpl
push
xchg
shll
es
push
sub
or
mov
sub
mov
lods
inc
int3
pop
in
pop
cmp
xchg
jae
adc
aas
scas
pop
aad
adc
lahf
cmpl
mov
lahf
add
iret
lds
and
iret
in
or
inc
idivl
and
dec
adcb
insl
sbb
push
ss
xchg
inc
dec
es
mov
in
and
adc
mov
mull
and
jb
jne,pt
push
xor
inc
mov
imul
mov
add
clc
notl
cmp
xlat
fsubrl
xchg
inc
out
stos
ret
arpl
and
mov
mov
popf
xor
inc
cmpsl
lahf
push
cmc
das
js
scas
xor
jl
xor
jp
xor
stos
cld
lds
pop
inc
mov
int3
fwait
xchg
fsubp
add
cltd
shll
mov
int3
mov
sub
xorb
xchg
lret
cltd
in
fistps
cmpsb
lea
pop
mov
inc
mov
fidivs
inc
pop
xor
mov
hlt
cmpsl
lock
aad
cmpl
push
cmp
jns
dec
pop
mov
or
jp
fsubs
shrb
adc
mov
push
loopne
imul
jle
stos
repnz
iret
or
cmp
mov
push
lock
mov
arpl
add
ret
loope
pop
jg
pushf
mov
int3
sbb
fisttpll
jae
or
cmp
std
into
out
xchg
cmp
dec
adc
clc
sub
sbb
mov
inc
or
lea
je
pushl
and
push
push
fdivr
lahf
mov
lret
cmc
movsb
adc
loopew
mov
mov
icebp
cltd
and
mov
int
xchg
clc
mov
lea
sahf
and
addb
push
inc
stos
nop
cmp
andl
mov
jne
je
fld
nop
jo
daa
cmp
adc
lds
std
inc
lcall
leave
and
shrb
scas
nop
sub
sub
sbb
or
call
jge
or
adc
add
sbb
scas
lahf
cmp
ret
movsb
mov
pop
fs
daa
push
add
mov
stc
mov
test
pushf
adc
pop
lret
pusha
mov
add
or
repnz
outsl
scas
ss
das
js
aaa
inc
mov
into
xchg
out
jge
fsts
dec
cmpsb
mov
sbb
stc
mov
mull
pop
mov
jb
jl
mov
das
push
mov
pop
cli
mov
shl
sbb
cmp
sbb
out
das
push
in
cmc
mov
inc
ficoml
fadd
jmp
jnp
cmpsb
fisttps
test
flds
pop
mov
mov
mov
cmp
inc
mov
gs
aam
lahf
je
jl
inc
cs
dec
sahf
mov
and
sbb
adc
push
pop
into
dec
mov
pusha
out
inc
inc
lock
lods
arpl
psllq
jecxz
pop
test
xor
loopne
decb
mov
int
dec
cmp
xchg
data16
rol
add
enter
rorb
add
inc
in
lcall
xchg
xchg
cmc
cmpsl
movsb
jb
push
test
loop
inc
dec
ljmp
add
push
cld
les
lcall
dec
lock
vmovhpd
push
mov
push
sbb
bound
out
pop
addr16
xchg
loopne
repnz
stc
loop
scas
es
xchg
mov
pushf
xlat
sbb
mov
lds
push
sub
mov
ds
cmp
push
push
jbe
ja
cmp
ja
inc
jecxz
xor
push
insb
inc
pusha
push
repnz
jno
push
jecxz
xchg
and
imul
cmp
stos
sahf
cs
xor
pushf
and
test
or
movsb
hlt
and
test
jle
into
xor
jae
mov
push
roll
push
xlat
dec
push
fistpl
adc
movsl
mov
subb
sub
outsb
mov
jne
inc
inc
jae
cwtl
cmpsb
xchg
ljmp
adcl
test
adc
fadds
mov
xlat
pop
pop
daa
repz
gs
mov
xlat
dec
imul
push
pushf
sbb
aas
add
xor
xchg
test
mov
dec
sub
test
call
je
outsb
or
lods
inc
cmp
aad
sub
cmc
ret
mov
mov
push
jl
cmpb
imulb
icebp
fcmovnb
xchg
adc
pop
das
jno
movb
adc
and
std
pop
pushl
or
xchg
or
pop
pop
pop
decb
addb
pop
pusha
mov
xor
or
andb
fwait
inc
add
adc
not
push
ret
addr16
mov
xor
test
jge
push
add
mov
shrl
je
push
fildl
push
movsl
int3
lret
jp
gs
inc
inc
mov
push
lret
xchg
mov
stos
leave
sbb
jge
or
mov
aas
fldenv
cmpsb
addb
mov
ss
addr16
mov
inc
ret
es
pop
add
cmp
movsb
mov
push
push
jnp
cmp
bound
mov
sub
mov
repnz
into
mov
out
imul
mov
or
lahf
repnz
sub
jne
add
xchg
adc
fmuls
inc
push
pop
mov
mov
ds
pop
sti
ret
jo
pop
or
mov
mov
jecxz
decl
pop
je
out
xchg
cmp
mov
cmpl
in
cmp
push
popa
jae
push
les
pop
enter
sahf
sub
mov
shlb
xchg
in
sbbb
adcb
js
jg
inc
and
in
inc
sub
sahf
data16
iret
mov
clc
iret
mov
add
fisttps
cltd
pop
mov
imul
push
jg
xor
es
pop
hlt
in
iret
addr16
sub
cmp
sub
and
cmpsl
cld
lea
aas
cmpsb
pmulhuw
jns
and
out
jecxz
addr16
xor
call
mov
sub
imul
xor
add
sub
xor
gs
iret
mov
test
addr16
push
push
js
arpl
cmp
add
push
fldcw
dec
xchg
jb
mov
jb
std
iret
or
imul
ficoms
aaa
jl
cmp
fwait
dec
xor
dec
jns
addr16
fwait
xchg
enter
lock
cmp
mov
mov
ja
pop
hlt
icebp
adc
subb
mov
addl
icebp
loopne
cwtl
leave
movsb
xchg
insl
fs
test
sub
nop
jge
sub
aad
or
lods
stc
es
sbb
mov
imul
jmp
pop
test
fwait
dec
mov
push
nop
push
dec
test
and
hlt
js
aas
and
cmpsb
pop
and
pop
push
repz
push
and
add
push
xor
push
or
divb
movsl
lods
loopne
sbb
aas
dec
leave
stos
or
mov
loopne,pt
mov
push
xor
lret
ffree
fldcw
je
cmp
test
out
aaa
rcl
addb
dec
hlt
xchg
frstor
std
inc
push
in
pop
mov
test
leave
mov
adc
jmp
jno
mov
jbe,pn
roll
lret
dec
add
lds
xchg
push
shll
stc
fcoml
daa
and
test
pop
sbbb
add
popl
mov
cmp
jle
adc
icebp
or
in
dec
jnp
xchg
shll
pop
and
in
pop
push
mov
pop
mov
rclb
push
xchg
out
jge
sub
inc
xor
das
push
daa
mov
ljmp
adc
cmpsl
fsubl
aaa
and
sbb
movsb
xchg
icebp
mov
aaa
mov
add
popf
xor
les
pop
xor
cmp
sub
enter
test
repz
xchg
ret
push
cmp
pop
stc
cmc
push
mov
fwait
test
jmp
or
ss
mov
xchg
push
rcl
pop
dec
leave
jmp
rclb
or
adc
ss
cmpsl
not
push
sbb
fsubs
dec
fucomp
xchg
xchg
pop
es
add
jecxz
int3
test
mov
jmp
cltd
fisubrl
test
jmp
xchg
mov
in
shlb
aad
cmp
out
cmp
je
fmulp
movsl
popa
in
mov
into
arpl
fwait
call
pusha
fists
daa
enter
xchg
xor
jle
test
dec
enter
and
mov
cmpsb
sti
test
adc
imul
ja
push
adc
push
xchg
jne
xor
and
mov
es
pop
in
push
push
rcr
xchg
add
fincstp
mov
xor
sub
popa
mov
loopne
in
pop
mov
imul
ss
std
clc
sub
adc
out
mov
jg
mov
rolb
and
push
mov
xchg
test
or
insl
aas
out
xor
in
inc
ljmp
xchg
jmp
cmp
xchg
xchg
pop
jge
pop
insl
pop
mov
dec
adc
rcrb
insb
sub
iret
add
loope
rol
in
jnp
sub
add
cmp
popf
daa
imul
push
jns
xchg
pop
fstpl
dec
out
sbb
fidivl
push
bound
ret
into
adc
push
sub
xchg
mov
fstps
and
xchg
xor
fisubrs
out
rcrl
inc
dec
jl
dec
imul
cmp
sbb
arpl
xor
test
mov
adc
in
mov
mov
repz
xor
repz
dec
pop
pop
cmpsb
scas
sub
or
loop
arpl
jge
icebp
je
insb
shll
adc
push
outsb
adc
push
sub
xchg
addr16
push
and
sbb
outsb
int
in
pop
push
repz
xor
lret
nop
xchg
xor
or
les
enter
add
xor
add
ja
pop
jmp
or
adc
mov
jg
or
mov
icebp
lock
in
les
or
mov
xchg
in
popa
clc
ds
fildl
jne
or
add
mov
pop
mov
loope
xor
xchg
fidivrs
data16
out
mov
mov
adc
pop
add
testl
dec
jns
lock
int3
cmp
push
pop
mov
mov
fstps
mov
dec
aam
mov
and
test
ds
pop
push
mov
xchg
movsb
in
outsl
push
lock
mov
pop
jns
arpl
out
fs
add
mov
aaa
inc
dec
pop
mov
mov
addr16
in
adc
cmpl
cmpsl
cld
mov
fiaddl
popa
out
push
dec
and
and
mov
lods
adc
mov
adc
jb
xor
and
push
repnz
or
mov
mov
adc
enter
fsubr
js
mov
andb
ss
push
push
movsl
sbb
insb
scas
mov
dec
loopne
adc
iret
out
and
cli
and
pop
add
jae
fists
stc
mov
stos
test
jae
xchg
pop
jle
dec
pop
mov
push
fwait
jae
iret
adc
inc
mov
repz
add
cmp
jb
and
mov
ficomps
out
sbb
add
mov
xor
dec
out
inc
mov
jnp
sub
jp
insb
mov
pop
mov
xor
or
and
cmp
mov
out
data16
pop
jmp
es
mov
das
aaa
add
push
arpl
daa
push
adc
jb
cmp
pop
adc
sub
cli
push
xlat
sbb
pop
mov
sarb
push
imul
jmp
lods
mov
inc
loop
xchg
dec
and
call
sti
inc
sub
ficoml
das
negl
into
jl
xor
or
sbb
hlt
push
sbb
insb
nop
ja
jo
out
xor
fwait
ret
pusha
sti
ljmp
js
or
pushf
lds
sub
jnp
push
pop
arpl
pop
and
int
push
sub
pop
stos
enter
mov
pop
xlat
ret
subb
sub
in
stos
push
div
mov
inc
push
mov
rorb
xchg
mov
mov
das
add
idivb
sti
lods
jne
dec
stc
cld
xor
or
stc
ja
xlat
mov
ret
popa
popf
adc
int3
cmpsb
loopne
cld
jno
mov
mov
ret
sahf
outsb
jns
rolb
mov
or
outsb
sub
sub
mov
cmp
sbb
nop
aaa
mov
mov
cmpsl
lock
leave
pop
xchg
and
inc
into
sub
ss
xchg
js
insl
push
ljmp
inc
mov
iret
stos
sub
movsb
fwait
adc
xor
add
xchg
mov
fistps
push
jns
pop
sub
cltd
xchg
mov
pushf
lret
popf
push
shl
sbb
mov
or
sar
fidivrs
cmp
jno
xchg
sbb
sbb
dec
das
das
and
aaa
adc
xor
jno
jmp
xlat
jno
stos
cmp
aaa
cmc
out
int3
adc
lret
les
xor
or
js
cmpl
dec
cmc
imul
add
in
jp
cli
dec
jle
lret
mov
daa
dec
cmp
inc
jnp
notl
fs
sahf
jmp
mov
jecxz
jge
movsb
jge
xor
xor
add
sbb
inc
int
pop
orl
fisubs
mov
sahf
ds
push
movsb
test
push
and
ret
or
mov
xchg
mov
sbb
aam
stc
pop
inc
xchg
in
hlt
xchg
lods
cltd
lcall
mov
jp
mov
repnz
test
pop
pop
mov
addr16
xor
iret
mov
xchg
jb
mov
xchg
ja
movsl
pop
arpl
dec
cmc
in
cmp
and
aas
dec
jb
cmp
cmp
pop
ds
cld
stos
push
fidivs
aam
ret
cwtl
jg
jmp
dec
movsb
fisubs
sbb
push
mov
out
arpl
imul
jg
js
ja
lds
push
cmp
ljmp
ret
lcall
cmc
jnp
push
sti
loopne
mov
pushf
icebp
cmc
inc
mov
std
out
mov
lds
stc
stos
icebp
test
push
cld
mov
pop
sbb
ljmp
lret
dec
in
mov
test
inc
inc
ret
fmull
pop
in
out
adc
fcmovb
mov
add
jae
or
mov
jmp
cmpsl
imul
mov
sub
xchg
pop
cwtl
xlat
add
and
pop
aaa
and
dec
ss
lahf
clc
ljmp
mov
pop
daa
mov
repnz
pop
fisttpll
mov
mov
sti
jl
imul
xchg
mov
arpl
test
adcb
inc
into
fists
js
imul
jge
sbb
pop
imul
xchg
xor
gs
shlb
mov
popa
mov
push
lds
pop
xor
pop
pop
push
out
scas
ret
faddp
cmpsb
cmpsb
mov
das
push
lods
repnz
push
mov
xor
rcr
cmp
add
cwtl
and
nop
fsubrl
aad
mov
test
jno
mov
sbb
out
sub
pop
add
cmp
cmp
insb
icebp
inc
pop
or
mov
pushf
cmc
imul
jbe
push
jno
stos
data16
push
adc
cli
xlat
add
mov
sub
dec
mov
sbb
pop
lcall
mov
pushf
push
mov
sbb
ss
jns
xchg
mov
jae
ds
or
out
xchg
add
repz
pop
cmp
fs
orb
ss
iret
fcoml
mov
ret
jle
leave
in
jno
dec
sahf
cs
gs
fcmovnu
jp
add
and
or
pop
ret
cwtl
lods
out
test
ror
add
outsb
movsb
adcb
ficomps
jecxz
out
insb
hlt
nop
mov
xchg
push
xadd
ds
xor
cmp
push
in
pop
inc
cmp
ds
xor
mov
push
fs
mov
push
divb
add
pushf
cmp
fisttpl
cs
dec
mov
mov
add
inc
sub
sub
mov
xchg
repz
call
leave
das
xchg
or
pushf
repnz
ds
popf
mov
ret
cmpsb
adc
dec
enter
js
cvttps2pi
or
xor
sbb
mov
aam
jle
add
test
std
pushf
add
dec
cld
inc
push
sub
ror
inc
loop
test
lcall
repz
xor
pop
jae
out
ja
cmp
gs
and
fstl
je
cwtl
jl
dec
xlat
minps
sbb
lret
pop
insl
aaa
rorb
sub
sti
aas
jg
call
sub
jge
cwtl
cmc
ljmp
lcall
mov
inc
inc
lods
lock
xor
adc
les
jp
jne
sti
and
dec
daa
ret
out
jg
rclb
or
cltd
gs
out
sti
mulb
inc
daa
adc
add
gs
or
js
pop
bound
test
cltd
cs
mov
mov
mov
idivl
sbb
xor
add
mov
clc
sub
sti
fwait
sbb
out
sub
add
xlat
bound
mov
loope
repz
imul
int
inc
addb
jb
cmpsl
mov
iret
cwtl
jp
mul
mov
jb
inc
push
inc
nop
sbb
xchg
push
adc
dec
clc
xchg
push
sbb
cmp
cmp
mov
ja
repz
scas
inc
sbb
push
stc
pop
mov
inc
repnz
loopne
push
add
sti
or
inc
out
fcmovne
push
repz
sti
jb
stc
dec
xor
mov
xchg
dec
mov
dec
dec
negb
in
sbb
bound
pop
scas
adc
insb
or
and
mov
insl
jae
aaa
mov
mov
jp
xor
push
push
sbb
call
mov
or
das
and
adc
and
mov
flds
and
out
out
out
or
jge
stc
xchg
jl
aaa
fwait
aad
xchg
lods
test
movsb
sahf
cmp
mov
mov
hlt
lock
cmp
out
cli
mov
push
insl
push
pop
pop
movsb
mov
pop
int
cmp
xchg
cmp
cltd
int
ds
inc
dec
inc
cmp
inc
insl
mov
dec
iret
inc
jno
rcrb
jae
pushf
sbb
das
leave
lahf
jo
add
xchg
mov
adc
nop
dec
inc
pop
sbb
push
xor
pushf
jmp
orl
inc
pop
xchg
int
jmp
jo
inc
push
gs
out
push
loopne
cs
sub
dec
ds
mov
test
or
arpl
sti
xchg
sbb
leave
xchg
std
adcb
jnp
dec
adc
pop
aad
lret
lahf
sbb
loope
cli
in
popa
jne
not
or
loope
mov
imul
scas
sbb
fldenv
pushl
mov
stos
insl
mov
rclb
mov
xchg
pop
dec
lcall
pop
jns
adc
ret
pusha
xor
cmp
lods
mov
popa
les
enter
bound
lock
inc
movsb
iret
and
repz
lods
les
mov
pop
xor
xor
xchg
cmp
incb
inc
test
jmp
inc
jmp
push
and
pop
sub
fwait
shll
mov
xchg
movsb
lds
sub
mov
and
cmp
fidivrl
adc
aas
mov
jge
movsl
cmp
cmp
imul
jecxz
xchg
and
or
jmp
movsl
jmp
std
xor
das
jns
icebp
bswap
adc
adc
cmp
sub
in
push
in
call
inc
repz
xor
stos
out
mov
hlt
ljmp
dec
ds
add
rol
sbb
push
sub
mov
bound
mov
inc
stos
jmp
cmpsl
jle
push
or
mov
imul
mov
cmpsl
sahf
fst
add
adc
or
iret
testl
mov
pusha
js
mov
adc
out
iret
inc
jge
insb
adc
push
mov
movsl
ror
dec
iret
jp
outsb
dec
lods
lret
test
sub
movsb
mov
sahf
add
fistpll
add
daa
inc
add
popf
jl
inc
cli
in
cmp
aas
jne
jle
cld
push
jmp
cmp
fs
fistpl
and
scas
ss
es
fwait
daa
or
cwtl
xchg
jmp
sbb
mov
sub
xor
shrb
pop
ret
sbb
dec
push
bswap
mov
cmp
fldt
out
es
andl
fcmovne
xchg
add
loopne
and
lock
add
pop
je
jle
into
mov
out
repnz
mov
int3
cmp
mov
mov
out
lret
inc
jne
std
xor
icebp
xchg
sbb
js
ret
pop
sub
imul
fs
pushf
int3
fs
or
mov
jo
or
fimuls
jns
sti
imul
mov
push
jmp
sahf
and
int3
pop
mov
mov
lcall
pusha
repz
cmc
out
ljmp
daa
mov
fwait
das
pop
mov
or
fnstenv
inc
xchg
clc
loopne
jp
jne
cld
lock
jp
testb
jae
inc
outsl
xchg
inc
movsl
mov
and
negl
sbb
stos
mov
or
test
cmpsb
addb
test
insl
jecxz
inc
xchg
sub
out
and
ss
sub
stos
push
subb
lret
sahf
pusha
jo
add
mov
sub
insb
stos
std
imul
mov
lcall
add
add
shrb
and
xchg
testl
popf
enter
push
cmpsl
in
cs
popa
out
sub
popf
imul
xor
and
adc
movsb
popf
inc
pop
je
in
push
cmp
shrl
enter
icebp
sub
add
mov
cld
xor
divb
ror
and
loop
or
mov
pop
cmc
aaa
mov
in
push
out
fdivrs
jae
popf
cmpsb
in
stos
mov
rcl
mov
jp
jp
mov
inc
lea
pop
je
repz
es
fimuls
aaa
mov
sub
out
jmp
mov
ja
rcl
pushl
inc
js
or
mov
outsb
insl
adc
mov
mov
test
sahf
dec
add
adc
gs
pop
sbb
test
cmpsl
inc
mov
fistpl
pop
push
push
sbb
mov
add
lods
ret
jle
int3
add
jne
cmpsl
pop
int3
outsb
adc
gs
sub
pop
popa
fnstcw
fists
ds
inc
sub
pop
fdivrs
mov
mov
push
jmp
popa
mov
cld
daa
mov
pop
pop
cmp
data16
dec
xchg
aas
test
mov
jecxz
xor
xlat
insl
sub
jmp
mov
mov
xchg
push
cmp
into
push
arpl
stc
fidivrl
test
sub
jne
mov
xrelease
sbb
inc
pop
in
es
loopne
das
push
daa
inc
popf
or
push
lcall
loope
movsb
pop
mov
xchg
ret
xchg
and
mov
inc
rcrl
or
aam
xor
cwtl
call
xchg
push
sub
pop
xor
mov
mov
rcrl
ds
xchg
outsb
out
xchg
xor
vmovlps
ds
pop
out
fildl
loope
aas
push
stos
test
push
push
je
addr16
iret
mov
inc
repz
clc
or
in
jmp
js
addr16
adc
fcomip
dec
out
scas
test
jle
mov
fisubrs
xor
mov
lahf
xlat
xchg
pop
xchg
cltd
or
xchg
faddl
divl
xor
outsb
in
xchg
mov
gs
sbb
dec
in
das
mov
notl
add
mov
out
push
mov
dec
cmp
nop
popa
pop
adc
mov
mov
pop
push
fsubl
sub
dec
mov
adc
insb
push
or
shrb
int3
fld
mov
repnz
pop
jmp
xor
add
push
mov
mov
mov
sub
cmc
insl
in
cs
mov
mov
shr
and
sbb
inc
xor
enter
inc
jno
pop
nop
xor
nop/reserved
ret
jp
mov
loopne
adc
into
sbb
mov
popa
mov
je
js
mov
pop
jbe
bound
xchg
sub
mov
cmp
insb
xor
xchg
push
mov
shl
cmp
std
aam
mov
stc
and
mov
jo
and
jne
cld
xchg
adc
xchg
nop
mov
sar
fdivrs
movsl
cmpsb
push
std
lahf
inc
movsl
movsb
adc
pop
js
push
xchg
push
add
mov
pop
mov
mov
fadds
test
mov
loop
push
mov
ds
xchg
add
sahf
xlat
and
mov
sub
mov
jne
xor
and
inc
arpl
movsl
push
dec
stos
or
pop
sub
fstps
movsb
pop
push
outsb
mov
outsl
xor
pop
add
scas
cld
iret
and
fsubs
iret
call
std
sarb
or
les
dec
or
inc
jge
pop
dec
mov
gs
cmp
sub
dec
cmp
jne
test
or
push
sbb
mov
mov
js
outsl
add
jle
mov
sbb
sbbb
js
stc
sahf
and
aad
outsb
pusha
and
xchg
pop
dec
movl
out
cld
sti
sbb
xchg
adc
and
adcb
aaa
xchg
repz
sbb
or
test
faddl
lahf
sub
pop
xor
inc
jg
adc
mov
xchg
cld
xchg
inc
aam
mov
jmp
lea
addr16
sub
lret
inc
ret
aad
or
sub
ret
mov
mov
test
loope
test
pushf
fdivs
sub
xor
sbb
mov
outsl
adc
mul
jno
fwait
gs
jle
mov
in
cltd
rcr
cs
loopne
lock
and
cmp
xor
sub
xchg
xor
hlt
sbb
jle
dec
sub
sysret
shlb
mov
sub
popa
add
mov
shrb
das
call
repnz
push
sbb
and
cmp
mov
mov
push
cmp
popa
mov
jle
xor
mov
pop
lahf
xor
out
gs
xor
sbb
out
shlb
out
jecxz
inc
pop
dec
jb
mov
xchg
xor
mov
pop
les
repnz
fcmovu
mov
xor
pop
dec
mov
push
mov
xchg
or
pop
lret
jmp
lds
jmp
jo
fsubr
sbb
int3
cmpsl
movsl
mov
mov
out
inc
iret
int
jae
ja
add
or
clc
inc
std
jge
es
cmpb
lock
pop
push
push
mulb
mov
adc
cmp
out
lcall
sub
je
jb
mov
push
adc
xor
or
loop
mov
fs
pop
or
sbb
movb
in
arpl
xchg
hlt
cltd
mov
addr16
ret
mov
loope
xchg
push
aaa
shlb
lret
addb
mov
dec
dec
mov
and
jno
addr16
mov
testb
and
pusha
xor
inc
add
leave
jmp
mov
ret
xchg
mov
sub
lea
mov
xchg
xchg
scas
inc
pop
inc
loopne
outsl
push
nop
dec
cs
xchg
cmp
dec
lods
push
inc
sbb
push
fdiv
negl
sub
in
mov
xor
fwait
insb
add
sbb
jns
arpl
dec
bound
popf
not
fstpt
cmp
ja
sub
push
sbb
ficompl
mov
inc
pop
cs
xlat
aas
loop
push
xor
fisttps
lret
das
stc
lahf
jecxz
dec
movsb
in
jb
ljmp
stc
mov
inc
cld
mov
jns
sbb
loopne
nopl
ljmp
adc
jnp
push
daa
shrb
mov
mov
xchg
cmc
lahf
in
and
call
pushf
sub
xchg
pop
pop
inc
popa
iret
lret
movsl
add
enter
or
in
aam
push
bound
push
jge
pop
sarb
sbb
push
loopne
xchg
fs
add
pop
or
sbb
inc
sub
inc
sub
sahf
and
lret
fisttps
ja
ficompl
rolb
jecxz
in
ja
jne
jg
sub
aaa
popf
jbe
mov
jg
add
xchg
je
push
sub
sub
sahf
inc
mov
lcall
ss
push
pop
pop
mov
push
roll
jmp
xor
rorl
mov
sub
cli
sbb
sub
inc
shrb
loopne
xor
add
cmp
aas
push
cmpsl
outsl
xchg
in
pop
push
aas
popf
cs
mov
stc
sahf
pop
push
jecxz
aam
inc
mov
out
test
jno
movsb
jne
add
push
bswap
int3
push
dec
push
lahf
push
xor
xchg
sub
repz
ljmp
test
push
add
lock
xchg
test
ficomps
ljmp
sbb
xor
imul
fmuls
lea
xchg
test
repnz
xlat
dec
imul
scas
repz
inc
es
iret
adc
iret
rcrb
jns
mov
incb
dec
in
cs
stc
pop
sti
xchg
adc
jno
ss
je
xchg
test
mov
ficomps
aad
add
mov
or
out
rcl
cmp
fisubs
xchg
mov
divl
push
loopne
mov
cmpsl
fsubl
cmpl
mov
mov
jp
es
mov
fbstp
pop
punpckhwd
cld
inc
jns
pop
loopne
rcrl
sub
in
loope
out
jmp
or
mov
sbb
movb
add
pop
fstpl
insl
mov
mov
xor
adc
sahf
mov
rorb
repz
lahf
xor
popa
mov
fstl
add
xchg
adc
xor
frstor
mov
jl
lds
pop
push
xchg
bsf
fsubrs
pusha
push
ss
enter
ja
out
pop
pusha
ljmp
enter
pop
orb
imul
inc
jg
enter
mov
lcall
test
dec
jg
sbb
xchg
loop
sbb
jbe
mov
outsb
cli
xor
jecxz
jg
test
push
mov
aad
sub
inc
mov
arpl
pusha
push
jmp
stc
sub
push
xchg
and
fcom
fsubrl
out
and
and
push
dec
sbb
ss
pop
out
int3
jge
shll
out
imulb
adc
popa
inc
jge
cmpsl
or
enter
sub
cmp
push
stos
mov
movsb
int3
cs
mov
mov
arpl
pop
rolb
cmpsl
cltd
insb
cmp
sub
pop
repz
arpl
or
push
stc
or
shlb
push
inc
lret
xor
mov
andl
xchg
test
jp
jbe
testl
mov
or
mov
cld
mov
fisttps
jns
loopne
pusha
mov
push
sub
jl
cmp
mov
hlt
push
mov
call
lds
ret
jo
stos
stos
jge
out
or
add
dec
cwtl
inc
xorb
sub
ret
mov
sti
sub
ja
popa
repnz
jbe
sub
jnp
dec
pushl
cmpsb
fsubrs
cwtl
pop
fwait
inc
sar
sbb
xor
daa
adc
movsb
and
dec
pop
int3
loop
cltd
incl
imul
jg
push
xor
gs
lds
imul
gs
mov
iret
rclb
lahf
rcl
pop
mov
or
sbb
je
je
fnstcw
fs
repnz
and
sti
movntq
addr16
in
les
sub
jnp
subb
test
cltd
mov
push
in
test
movsb
pop
mov
adc
out
pusha
add
cmp
pop
add
xchg
sub
and
sub
cli
and
adc
push
scas
sarl
and
pop
xor
loopne
and
pop
std
daa
pushf
fwait
push
xlat
pop
js
test
cmpsb
mov
gs
fmuls
aaa
lahf
mov
ja
loope
in
lahf
shll
push
outsb
int3
xchg
fdivrl
jbe
xor
xchg
fldcw
xchg
lods
movsl
out
out
les
stos
lahf
cld
jge
push
movsb
pop
into
stos
pushf
or
mov
adc
inc
mov
es
sbb
pushf
jae
addl
les
leave
sbb
fsubrl
shrl
ds
sub
ja
adc
mov
xor
pop
sub
adc
into
and
mov
jmp
inc
fsubl
in
dec
fisubl
push
pop
add
xchg
add
cmp
fmull
xor
inc
leave
sub
les
mov
ss
imul
push
dec
shl
mov
scas
xchg
rcl
or
int3
add
mov
sahf
and
sbbl
mov
adc
iret
test
scas
ret
fwait
mov
negl
pusha
dec
jmp
cmp
mov
or
lock
inc
jno
enter
hlt
psubsw
js
int3
cltd
adc
xor
pop
decb
and
push
sbb
jo
or
fcmovnu
xor
dec
push
add
inc
addb
insl
mov
faddp
push
xor
push
mov
add
cmpb
add
in
xchg
inc
outsl
add
sbb
sbb
fimull
inc
lcall
dec
xchg
and
jg
mov
or
rcl
icebp
cmpsb
pop
mov
subl
cmp
in
fcoml
negb
mov
pushf
push
icebp
adc
adc
fs
mov
adc
lock
inc
inc
rcrl
cmp
adc
lret
inc
test
or
push
repz
jmp
dec
or
dec
add
insb
cld
mull
in
fimull
xorb
mov
jl
js
jl
shlb
mov
cwtl
pop
pop
cmp
aad
sbb
pop
in
rcrl
mov
add
pop
mov
sbb
in
push
shll
and
fiaddl
inc
repz
fwait
imul
mov
mov
mov
lods
cmp
out
in
ljmp
inc
stc
int
inc
fs
push
jb
jnp
lcall
mov
xchg
sbb
repnz
cmp
pop
cwtl
das
std
js
aaa
pop
mov
fldl
insl
push
mov
mov
push
scas
sbb
dec
in
sbb
pop
fisttpl
inc
mov
dec
pusha
nop
sub
rclb
lretw
add
in
push
xchg
mov
xchg
mov
jle
ret
pushf
xor
repz
cwtl
or
movsb
pop
js
out
nop
pop
mov
leave
jne
push
out
insb
mov
lahf
sbb
adc
mov
sub
xor
xchg
push
fs
xor
loop
ja
pop
dec
xor
add
xchg
movsb
jmp
popa
mov
adc
cwtl
inc
jl
popa
and
xor
add
test
jne
jge
sbb
push
xchg
insb
xchg
sub
xor
dec
xor
adc
add
or
mov
mov
stos
sarb
push
pusha
insl
fcomi
cmp
or
lods
mov
inc
and
lods
ljmp
cmp
hlt
mov
or
outsb
hlt
cmc
popa
jno
decl
mov
sahf
lods
or
scas
imul
das
cmp
xchg
filds
pop
jno
push
cwtl
mov
pop
add
loop
fwait
cmp
cld
or
dec
sub
into
cmc
sbbb
lds
xor
in
jl
jo
imul
push
dec
push
dec
pop
bound
orb
xlat
popf
ss
scas
adc
mov
shlb
into
cs
jbe
nop
aaa
adc
xor
mov
xor
inc
push
mov
or
and
cmp
add
dec
mov
imul
sbb
sbb
sub
pop
sahf
cltd
faddl
sahf
lods
stc
out
pop
sub
xorl
pop
cmp
shl
adc
aam
fwait
xor
xor
cmpsb
jecxz
pop
fisubs
adc
push
push
rcll
sti
or
add
hlt
in
bound
jne
out
or
lret
xchg
and
jno
push
push
xchg
mov
mov
int
mov
mov
cmpsb
scas
mov
emms
repnz
pop
addl
les
clc
and
add
jge
lea
mov
jnp
dec
lods
mov
arpl
or
lock
mov
ljmp
push
ds
mov
sbb
imul
into
push
pop
cs
pop
ljmp
adc
stos
enter
pushf
jbe
mov
push
inc
sub
xlat
mov
sahf
into
in
das
mov
adc
test
rclb
or
jp
gs
lcall
popa
push
pop
inc
xor
es
add
mov
addb
adc
add
stos
icebp
lds
and
repnz
jb
inc
mov
in
and
and
dec
sub
cmp
ss
insl
mov
xchg
sub
add
addl
incb
sbb
dec
push
add
dec
or
cltd
adc
pop
sub
jl
and
dec
lods
aam
add
and
xchg
jnp
cmp
push
pop
js
das
outsb
push
cmpsb
sub
adc
loope
loope
adc
add
filds
cltd
xor
leave
imul
jnp
test
lea
lods
dec
fcomi
in
mov
adc
cltd
sbb
adc
jne
mov
cwtl
inc
ret
stos
fiadds
mov
ficompl
ret
push
clc
sub
jp
mov
dec
popa
cmpsb
aam
sub
adc
xorl
mov
xor
cld
xor
out
lcall
pop
icebp
and
jg
fs
mov
push
jl
stc
into
mov
xchg
aas
jbe
add
or
sbb
aam
xchg
loope
gs
pop
mov
loop
fdivl
in
in
inc
clc
pusha
pop
xchg
pop
lods
movsl
movsl
jp
jno
push
xchg
adc
aaa
gs
pushf
int
insb
xor
mov
outsl
cld
xchg
imul
add
stc
xor
not
jl
jle
pop
pop
les
mulb
es
hlt
cs
mov
mov
das
ja
dec
push
and
sub
push
xchg
out
mov
pop
data16
jp
push
and
cwtl
or
movsl
xor
add
jno
dec
mov
sbb
dec
jnp
sub
in
xor
mov
jo
test
mov
leave
push
sbb
aaa
and
andb
mov
pop
fdivr
jo
xor
mov
out
xchg
adc
xchg
shrl
sti
cli
and
mov
sbb
lods
cld
or
cltd
push
iret
inc
frndint
jo
aad
and
in
pop
scas
mov
xor
in
mov
sbb
push
cmp
push
adc
out
jmp
out
ja
into
adc
sbb
aam
push
add
shr
testb
repnz
jns
adc
inc
mov
aam
pop
test
gs
mov
or
sbb
push
insb
xorl
inc
sub
and
and
push
into
je
fildll
mov
aaa
pop
and
rorl
mov
xor
mov
mov
pop
cmc
lods
cmc
mov
sub
push
push
rorb
outsb
mov
adc
fwait
xor
jecxz
mov
insl
xor
or
addb
jle
int3
or
sbb
cmpsb
and
ret
cld
push
rcrb
movsb
inc
aad
stos
test
pop
mov
mov
xchg
fbld
cmpsb
stos
jmp
inc
repz
lods
jno
jae
je
cs
inc
outsb
sub
lods
add
adc
divb
mov
jbe
jne
or
addb
xchg
mov
and
inc
ja
pop
loop
or
jns
shl
inc
pop
hlt
pop
pop
mov
test
mov
fwait
pop
rcrl
imul
cs
call
imul
call
mov
leave
mov
adc
enter
cmp
sarb
and
sub
lret
push
mov
ret
mov
imul
mulb
out
fcmovnb
xchg
xchg
mov
push
push
adc
in
into
mov
rcrl
popf
mov
popa
mov
loop
sbb
push
adc
jecxz
iret
cmp
dec
sub
inc
jno
xchg
xchg
outsb
sub
mov
mov
pop
xchg
lret
cmp
enter
clc
mov
in
dec
out
pop
mov
stos
fisubl
add
dec
pop
add
fs
sarb
xor
sub
fdivl
adc
jnp
lcall
xchg
cmp
or
rcrl
mov
out
ficoms
addr16
cli
clc
cmp
jp
cs
aaa
mov
jmp
lcall
push
cmp
push
test
fnsave
mov
cmp
mov
sbb
frstor
rcll
xchg
jg
xlat
mov
pop
andps
inc
mov
sbb
add
push
aam
push
arpl
xchg
push
mov
push
call
imul
or
repnz
sbb
mov
add
adc
fwait
ljmp
pminub
popf
sbb
jmp
std
outsb
jo
mov
int3
lods
add
push
rorb
ss
push
ja
movsl
or
push
push
cmpl
push
adc
xchg
lock
mov
dec
ja
mov
outsb
idivb
sbb
loopne
mov
inc
inc
fidivl
sub
nop
outsb
push
inc
cmp
sub
stc
add
ds
dec
out
in
dec
nop
mov
jmp
cmc
cld
add
sub
jg
inc
pop
xchg
in
in
xchg
mov
stos
lcall
cld
sub
daa
mov
inc
cmp
rcrb
xchg
in
or
xchg
pop
in
aam
or
adc
push
inc
add
xor
and
jecxz
pop
jns
jo
adc
sub
cmp
lret
ljmp
lret
and
sahf
popa
cmp
test
push
mov
push
and
std
mov
sub
and
mov
loope
pop
scas
lds
fs
inc
je
dec
or
insl
mov
mov
out
in
ljmp
jecxz
call
inc
fistl
rcl
xchg
push
hlt
in
dec
sti
jne
cltd
stos
int3
ja
cs
mov
idivb
ja
pop
and
lcall
lahf
add
js
cmpl
std
lcall
fld
mov
xchg
sahf
sub
mov
adc
add
push
jmp
int3
jle
bound
sub
mov
fstp
push
sahf
cmp
push
jns
int3
jae
xor
ret
inc
aas
xor
push
hlt
sub
mov
std
cmp
out
sbb
jle
fisubs
in
in
push
or
int3
mov
test
jg
rclb
or
xchg
mov
push
out
movsl
jmp
cmp
ret
inc
adc
cwtl
out
jecxz
and
loopne
add
decl
or
cwtl
adc
adc
xchg
sbb
and
bound
int3
push
scas
sub
out
ficomps
cs
pop
mov
inc
inc
xor
sbb
jb
out
ftst
imul
cmp
inc
popa
pop
dec
sub
push
jg
add
dec
and
adc
fstpt
shll
daa
inc
mov
ss
adc
mov
sbb
pop
adc
cmp
imul
and
adc
adc
pop
insb
daa
cmpsb
mov
out
dec
jno
lcall
xchg
add
mov
lcall
add
and
lds
cli
add
push
mov
or
pop
orb
pushl
mov
pop
in
bound
nop
daa
jmp
loop
dec
sub
pop
push
mov
mov
sub
push
imul
mov
pusha
push
lds
sahf
insb
pop
mov
xchg
in
xlat
mov
dec
bts
sbb
je
push
jmp
cltd
adc
shlb
or
repz
ljmp
xchg
sub
fdivs
or
jnp
repz
rol
mov
xor
pushf
mov
adc
push
push
call
daa
mov
insl
push
cmc
hlt
daa
or
pop
push
mov
push
xlat
inc
xchg
stos
scas
xchg
dec
fdivl
cmp
mov
xlat
adc
popa
lret
xchg
pushf
and
adc
lods
sbb
cmp
outsl
push
in
pop
and
aam
and
xchg
incb
xchg
lods
test
loope
sub
push
inc
aam
stos
out
mov
in
mov
push
cmp
out
repnz
xor
xchg
sar
jge
icebp
jl
mov
jle
xchg
ror
lds
fcmovne
push
push
and
repz
adc
jo
repz
mov
jbe
push
imul
pop
out
sbb
fidivl
mull
cmovne
lock
push
cld
enter
aas
aam
insl
mov
mov
adcb
dec
push
pop
idivl
pop
inc
nop
jge
mov
jle
pop
clc
es
cwtl
mov
sbb
clc
adc
xchg
inc
push
mov
xchg
js
movsb
mov
push
xchg
dec
pop
pop
leave
mov
outsb
push
cmp
mov
xor
pop
in
dec
sbb
xor
test
mov
dec
ret
call
pushf
sti
sub
rolb
movsl
push
inc
mov
fidivl
les
mov
or
imul
fistl
adc
mov
push
mov
es
imul
fbstp
mov
cmp
and
nop
fbld
xchg
pop
cltd
scas
pop
icebp
inc
fbld
push
adc
sbb
daa
mov
xchg
jns
les
push
push
pop
push
push
pushf
jns
xor
add
sub
jle
push
lahf
adc
sub
ss
dec
pusha
fildll
rclb
fisubs
jmp
inc
inc
mov
stos
idivb
jmp
pop
push
fwait
test
test
mov
pop
enter
sbb
and
fsubl
test
push
or
jle
arpl
insb
lcall
add
push
test
adc
das
sti
pop
imul
hlt
cmp
jnp
loope
lcall
pop
aam
test
push
inc
ja
adc
jo
push
sbb
push
psubq
or
jbe
dec
mov
sbb
push
cmpsb
and
call
repnz
push
sbb
fs
sub
push
sub
out
jle
or
pop
hlt
in
xchg
push
divl
push
adc
lods
dec
ficompl
out
loope
les
mov
call
fsubr
int3
xchg
movsl
int
lea
mov
jnp
mov
mov
data16
sti
or
add
ds
outsb
inc
jb
ja
push
mov
add
sbb
pop
es
sbbl
clc
pushf
aad
aas
dec
movl
add
repz
mov
out
mov
cltd
push
cmp
pusha
std
xchg
mov
out
jg
pusha
pop
inc
outsl
fmull
test
insb
aad
into
ror
lret
inc
jns
mov
ffree
sbb
js
mov
movsb
jmp
xchg
or
xchg
mov
xor
inc
mov
sub
jae
xchg
enter
cmp
or
mov
pop
cmpsl
mov
clc
push
jl
adc
cmpb
scas
sbb
pop
or
xlat
add
sbb
push
sbb
ret
inc
push
jle
mov
sbb
jnp
insl
loop
iret
xlat
mov
test
lods
jno
das
push
insb
dec
cmp
stc
iret
inc
mov
jmp
sbb
xor
fs
adc
mov
sbb
push
popf
lcall
jp
jl
sbb
bnd
andb
imul
lret
in
gs
mov
insw
shll
jg
es
jmp
mov
imul
cmc
mov
jp
dec
lods
jge
or
dec
jae
lods
fidivrl
push
jae
shr
loopne
imul
or
mov
mov
fisttpll
xchg
jle
lret
into
sub
push
adc
cwtl
push
addb
jl
popf
dec
aam
vcmpps
imul
fs
cwtl
outsb
cmp
test
in
popf
mov
ds
pushf
mov
lcall
dec
std
mov
inc
popf
and
inc
add
cmp
lret
push
xor
mov
sbb
out
inc
ror
add
inc
jne
orb
sti
mov
push
lahf
jg
out
sbb
int3
pop
test
movsb
lods
xchg
cwtl
sub
orl
cmp
cmp
imul
loopne
jnp
es
out
inc
jp
int
xchg
insl
hlt
ret
cmc
test
inc
fs
call
push
dec
mov
cmp
icebp
fisttpl
call
lea
push
adc
clc
repz
aam
out
dec
je
and
xorl
jmp
inc
inc
xor
or
movsb
mov
les
data16
push
jg
cld
xchg
and
fisubs
aaa
mov
loop
jno
in
stc
pop
pop
mov
in
mov
mov
stos
push
stos
ja
daa
addl
loopne
sarl
popf
adc
lds
mov
pop
xor
pop
push
xor
insl
rclb
fdivp
add
pop
mov
adc
out
adc
and
cmpsl
mov
addr16
in
xor
xchg
jb
mov
lea
popf
jb
dec
push
dec
adc
ja
jo
shll
mov
push
xchg
jmp
sar
pop
mov
xchg
sub
mov
fnstenv
cmp
lahf
mov
jmp
jp
dec
lods
imul
adc
mov
inc
pushf
pop
loopne
dec
add
jmp
mov
popf
cs
or
mov
mov
sub
push
sub
add
or
pop
scas
mov
mov
and
mov
movsb
push
dec
inc
repnz
pop
test
test
mov
and
roll
call
mov
in
scas
cwtl
stos
lods
outsb
scas
dec
mov
xchg
outsl
add
or
aaa
add
loope
push
dec
mov
cld
sub
lea
adc
lcall
mov
movsb
inc
push
or
pushf
push
push
aaa
cmp
stos
dec
xchg
mov
sub
and
push
jb
imul
lods
iret
add
add
scas
popa
lret
fucom
pushf
lock
sub
xor
cmc
pop
xchg
fisttpll
sub
sti
cmp
push
cli
pusha
push
fnstcw
lock
sbb
ud1
jge
cltd
push
add
push
adc
fcomps
sub
xor
icebp
bnd
xchg
and
fldt
xchg
jmp
xor
ljmp
xchg
leave
dec
aad
push
push
dec
das
mov
xchg
lds
xchg
jge
es
pop
inc
popf
pop
int
test
pushf
pop
mov
stos
add
hlt
sub
xlat
mov
int
jp
out
js
mov
mov
push
ret
mov
xor
xchg
mov
lods
negb
jg
mov
outsl
sub
cmp
pop
out
rclb
cmp
lret
icebp
or
sarb
sbb
psubd
jbe
jns
xor
xor
xorb
xor
xor
pusha
jecxz
stc
dec
cwtl
inc
adc
js
mov
out
fcoml
mov
das
pusha
fsts
jg
je
pop
or
or
arpl
fs
enter
das
xchg
cli
lock
pop
pop
shrl
popa
ja
lods
cmp
jg
push
icebp
hlt
push
mov
adc
shlb
in
mov
das
mov
mov
sub
out
mov
pcmpeqb
xor
xchg
orl
add
fistl
testl
into
imul
rcl
ret
lret
push
sbbl
push
int3
movsb
sub
or
and
push
mov
imul
rol
add
int
or
rcll
cmp
fwait
subb
lock
xchg
aaa
subl
iret
mov
sbb
or
xchg
int
push
dec
inc
jle
sub
push
popf
jmp
sbb
jecxz
xchg
jbe
cltd
lock
fldenv
flds
das
or
icebp
cmp
adc
push
mov
icebp
push
cmpsb
lcall
lea
pop
push
out
sub
gs
mov
lods
fisubs
sbb
pop
add
jo
mov
lea
add
mov
cmpsb
mov
jb
mov
cmpsl
sbb
jae
sub
loop
sahf
push
in
and
mov
cwtl
dec
and
mov
xlat
mov
push
loope
mov
hlt
rol
loop
xchg
and
sub
in
jle
lahf
xor
inc
cld
iret
mov
fnsave
push
cmp
xor
rcll
test
mov
push
aas
cmp
iret
mov
enter
test
icebp
xchg
xorl
add
rcr
fs
or
cltd
jmp
jno
pop
mov
iret
jl
sbb
cmp
add
sbb
adc
cltd
adc
movsl
icebp
sbb
pop
int
pop
ret
adc
and
xchg
pushf
in
cmp
mov
adc
cmp
jge
xchg
sbb
inc
cmp
pop
aad
xchg
add
shlb
loopne
jl
in
mov
mov
cmp
or
cmpsl
nop
in
mov
xchg
pop
inc
movsb
shl
inc
fwait
add
or
gs
fsts
inc
jmp
js
es
dec
and
dec
add
loop
das
sbb
shrb
dec
jmp
push
addb
ljmp
movsb
push
dec
std
sbb
pop
mov
or
testb
mov
shr
lds
fstl
or
mov
mov
es
mov
sbb
mov
sub
cmp
inc
dec
xlat
add
in
popa
out
int
mov
int3
outsb
push
xchg
negb
sti
nop
and
gs
inc
jnp
mov
inc
pusha
pop
sbb
mov
sti
xor
adc
test
cli
xor
jnp
hlt
push
pop
std
and
aas
cld
mov
push
mov
and
mov
das
or
outsb
scas
cmc
into
lea
cmp
int
sbb
nop
or
dec
lds
cli
mov
das
ljmp
stos
cmp
popf
inc
dec
xor
and
and
jns
push
ss
push
mov
xor
fisttpll
iret
xor
push
or
dec
lods
jge
or
js
xor
xchg
inc
rorl
cs
xchg
mulb
mov
pop
inc
push
sbb
sarb
addr16
dec
push
mov
movsb
leave
loopne
mov
xchg
cmp
mov
aaa
inc
mov
xor
aaa
ss
push
es
xchg
inc
insb
mov
or
dec
push
bound
sahf
push
jbe
or
icebp
fistpl
imul
sbb
pop
jmp
sbb
imul
popf
sub
dec
sbb
ret
sbbb
mov
imul
iret
test
cwtl
out
adc
hlt
and
cwtl
inc
cld
leave
int3
clc
sbb
adc
call
jl
retw
frstor
push
in
and
inc
incl
data16
push
inc
cmp
push
and
mov
xchg
subb
lock
add
push
inc
cmp
test
jle
iret
xchg
mov
and
pushf
setle
cld
jg
fiaddl
test
jecxz
shll
div
fcoms
jae
push
dec
mov
les
outsl
mov
mov
sbb
dec
out
in
adc
sbb
add
jae
inc
test
clc
lods
xchg
test
or
pop
jnp
rorb
or
popf
push
push
mov
loopne
cli
in
add
das
mov
xchg
decl
test
movsl
fnsetpm(287
inc
jp
dec
sbb
data16
daa
gs
pushl
mov
add
pop
jo
sahf
mov
cmc
sbb
cmpsl
int3
cli
xchg
int
dec
add
pop
mov
fdivs
adc
push
sub
leave
dec
in
or
in
xor
mov
mov
adc
js
out
fsub
imul
movb
or
push
lahf
pop
jnp
ds
dec
movsb
inc
or
les
out
xor
ljmp
sti
jmp
add
cmpb
test
add
jl
xchg
inc
lahf
sbb
sbb
out
fistps
xor
fwait
and
and
cmp
sbb
idivb
add
mov
es
cltd
or
mov
push
lret
or
and
mov
fld
jg
adc
mov
mov
and
popf
inc
add
add
xchg
clc
mov
push
xchg
cs
jno
jne
pop
xor
lret
and
jnp
pop
loop
out
pop
loopne
sti
mov
data16
jne
add
push
ret
test
adc
push
jg
aas
decl
sub
das
or
inc
sub
out
sub
outsl
cld
pop
dec
jge
ret
cmp
aaa
mov
cwtl
cmp
jbe
sbb
and
mov
incb
or
popf
in
push
cmp
test
sbb
push
mov
add
xchg
xchg
inc
fistpl
mov
push
jns
enter
mov
sbb
pop
leave
fdivs
std
push
push
rorb
add
pop
add
imul
ret
pop
mov
daa
push
icebp
bound
imul
hlt
ret
insl
cld
mov
xchg
in
push
push
xchg
lea
push
sbb
mov
frstor
lds
cwtl
fdivrl
push
push
xchg
push
xchg
sbb
iret
fcmovnbe
xor
aaa
ja
aam
cltd
test
mov
loope
push
out
pop
rolb
aad
in
test
add
push
ds
mov
in
xchg
cmpsb
mov
xchg
imul
in
dec
xorb
inc
sub
mov
cmpl
jmp
test
pusha
adc
mov
mov
add
fildl
lds
cmp
sub
into
xchg
cwtl
jecxz
add
cmp
data16
imul
out
jp
and
jg
pop
jmp
stos
lock
inc
loop
imul
shl
dec
mov
dec
repz
jmp
xlat
jg
ja
fidivrl
pop
jb
aam
shrb
jecxz
aaa
in
jb
and
pop
mov
in
mov
xor
xchg
dec
add
and
lcall
nop
jne
mov
pop
xchg
orl
imul
gs
inc
or
mov
mov
xor
rcrb
lods
orl
push
nop
popa
or
lods
sub
inc
xor
lcall
cmpsl
push
adc
sub
mov
cmpsb
xor
pop
adc
jmp
xchg
popa
dec
rcrb
aam
loop
stc
cmp
js
xor
icebp
jecxz
sub
int3
mov
mov
jae
mov
clc
int3
invd
fisubl
clc
lods
hlt
dec
cmp
cs
jle
xlat
ds
idivb
andl
hlt
repz
adc
lock
inc
mov
push
test
jle
mov
mov
xchg
out
lea
jbe
xor
dec
shrl
inc
fcom
adc
addl
mov
jmp
mov
orl
add
aam
shll
sub
shrb
bound
mov
mov
or
push
dec
push
aad
adc
push
sub
pop
lds
cmpsb
lea
lahf
btc
inc
jl
loopne
xor
pop
mov
and
mov
add
xchg
inc
bswap
pextrw
jp
out
sbb
int3
sub
adc
popf
mov
push
ljmp
arpl
cmp
xlat
lock
in
push
fbld
push
mov
lods
xchg
adc
je
or
xor
push
lcall
mov
shrl
insl
push
dec
subb
addr16
sarb
cmp
mov
mov
jbe
stc
bound
jle
xchg
xor
cmp
fisttpl
arpl
sub
cmpsb
mov
pop
pop
fidivs
xor
lock
push
repz
xchg
and
mov
mov
sub
neg
sub
iret
lcall
pusha
cmpsb
sahf
dec
jbe
and
mov
jmp
mov
xchg
loope
lods
loop
out
or
out
xchg
leave
jae
inc
aad
mov
push
jo
xchg
cmp
repnz
ljmp
and
jl
in
add
ja
push
pop
push
fcmovbe
xchg
or
dec
mov
repnz
outsb
cmp
aam
add
inc
cmp
lods
jnp
mov
mov
ja
jge
insl
lahf
mov
mov
xchg
sbbl
mov
mov
pop
jb
mov
add
dec
jbe
push
or
push
mov
xorl
dec
inc
xchg
notl
sbb
into
or
jle
cli
shrl
shll
jmp
push
jg
rcrb
xor
imul
negl
sub
addr16
outsb
aaa
movsb
movsb
mov
xor
cmp
rorb
rolb
xchg
stc
lret
push
inc
popa
fs
test
inc
test
scas
adcb
inc
insl
push
adc
aaa
test
cmpsl
rclb
pop
mov
ds
outsl
bound
and
xor
add
inc
push
imul
test
repz
test
aad
xchg
rcl
arpl
fimuls
je
xchg
dec
hlt
fsts
cmp
jmp
push
and
fldl
dec
pop
divb
fdivrp
cmpsl
and
inc
lea
jae
scas
inc
and
in
clc
outsb
push
pop
lods
ljmp
pushf
imulb
int
and
movsb
jp
in
adc
das
and
fiaddl
lods
int3
sub
jnp
test
sub
shrl
outsb
push
sbbl
lahf
or
cmp
hlt
push
jns
push
mov
mov
inc
mov
sub
out
das
addr16
aas
mov
or
mov
sti
negb
iret
ss
popa
dec
jmp
aam
lea
lcall
repnz
jecxz
inc
in
dec
cmp
inc
mov
or
out
lds
adc
addr16
popl
repnz
jbe
mov
sub
pusha
int
sarl
cmp
jns
push
mov
fstpt
test
or
insl
orb
lea
cmp
movsl
repz
loop
mov
and
aam
lret
xlat
je
in
or
xor
jae
add
adcb
mov
test
test
out
arpl
sub
ficomps
mov
inc
lahf
cld
cmpsl
in
cmpb
mov
jg
or
icebp
imul
cld
les
mov
mov
out
inc
sub
ja
inc
xlat
fnstsw
jb
rcl
push
mov
cmpsl
inc
or
pop
add
sub
pop
lds
jg
mov
fcmovne
es
mov
cmp
bound
sti
inc
mov
insl
dec
inc
fabs
int3
lret
movsl
and
sub
mov
adc
inc
xchg
mov
inc
dec
imul
mov
inc
sub
mov
mov
lds
pop
stos
addr16
enter
mov
jl
movl
push
inc
out
inc
loopne
and
or
push
xchg
jecxz
hlt
or
dec
icebp
jg
out
fwait
gs
aas
adc
lahf
push
push
out
pop
pop
rolb
mov
jmp
int
movsb
jae
outsb
push
daa
dec
sbb
add
push
imul
xchg
mov
sub
inc
scas
adc
ficoml
adc
xor
ret
dec
sbb
xchg
and
arpl
inc
or
push
cmp
inc
dec
cmp
sub
rol
add
fs
sbb
xchg
dec
push
and
ret
xor
dec
loopne
fmul
out
bound
subl
inc
sub
sarl
mov
dec
push
lret
push
rorl
mov
daa
out
cmp
into
push
pushf
sbb
cmpsb
bound
aas
pop
mov
mov
push
cmp
fs
pop
stos
loope
data16
cmp
repnz
dec
sbb
icebp
bound
repnz
nop
rolb
add
stos
push
pop
sbb
mov
addr16
cmc
rolb
mov
scas
das
pop
add
rcrl
xlat
in
mov
fidivs
sbb
rclb
cmp
and
ficompl
mov
ja
inc
mov
or
repnz
and
pop
ret
rorl
push
push
push
and
and
cmp
loop
out
cltd
and
inc
dec
sub
jb
std
and
mov
cld
pop
cmpb
ss
loopne
mov
test
pop
aam
fcmovbe
rorl
clc
ud0
mov
push
mov
mov
mov
pusha
mov
mov
sarb
out
fbstp
mov
jo
mov
mov
xchg
or
movsb
mov
sub
inc
or
xchg
cwtl
and
outsb
div
xor
cld
mov
mov
lret
jbe
std
sub
or
lods
add
jbe
sub
data16
daa
pop
test
scas
insb
insb
inc
mov
mov
dec
inc
xor
add
enter
je
lea
test
jl
xchg
jle
sub
gs
nop
in
jnp
inc
cld
adc
in
push
xchg
and
fildl
stos
rolb
cwtl
lret
add
and
jp
pusha
andl
jne
ficoms
outsb
movsl
inc
jb
add
push
test
jbe
jne
pop
add
jp
sub
and
lock
dec
jp
dec
imul
lcall
xor
shl
ret
mov
and
dec
dec
icebp
pop
jmp
cmp
int
frstor
aam
movsb
cli
push
xchg
iret
hlt
shrb
mov
xorl
jnp
lahf
lods
sbb
jg
cmc
adc
sub
mov
test
cmpsl
adc
cmc
repz
jae
test
xchg
jmp
cltd
xlat
loop
push
sub
adc
jns
pop
push
or
lcall
and
mov
xchg
xor
sbb
mov
mov
sbb
jmp
in
push
mov
xchg
frstor
jle
dec
push
mov
cmp
pop
pop
aam
fidivrs
dec
jg
mov
add
mov
jnp
outsb
es
adc
mov
mov
lahf
inc
test
repnz
in
dec
cli
scas
push
mov
les
hlt
pop
and
ss
imul
lcall
ret
mov
dec
popf
mov
push
jle
jp
dec
pushf
and
shll
addr16
push
jmp
cltd
adc
pushf
push
adc
xchg
xchg
test
daa
mov
mov
clc
cmpsb
daa
fxch
rol
jg
or
pop
xor
daa
xchg
rcrb
mov
push
aas
fcmovnb
push
outsl
jns
or
jmp
and
jno
rcll
int
mov
cmp
insl
xor
adc
hlt
or
mov
je
sbb
int
pop
adc
fcomps
or
inc
xor
test
je
fs
add
mov
add
ss
scas
out
out
push
lret
nop
jae
cltd
loopne
sub
mov
sbb
inc
pop
sub
loope
xchg
imul
xor
pop
imul
ja
negl
xlat
pushf
sti
push
jg
lods
enter
pop
gs
cli
mov
xlat
in
pushf
add
lahf
adc
xchg
sar
in
mov
dec
sub
stc
jmp
loop
dec
and
pop
jne
push
push
lods
dec
mov
push
sbb
xchg
jae
sub
push
jns
mov
jbe
cmpsb
cs
mov
addr16
xchg
xchg
push
inc
in
pop
push
sarl
add
push
mov
push
push
ljmp
and
cwtl
test
es
subb
adc
loopne
dec
int3
call
lret
xchg
inc
cmpsb
xor
push
das
cmp
loop
iret
repnz
notb
cltd
inc
mov
mov
dec
jge
test
enter
adc
mov
cld
das
mov
add
jne
orb
mov
mov
adc
and
ja
mov
mov
push
mov
xchg
mov
pusha
push
and
mov
pop
ret
loopne
enter
mov
jne
xchg
cwtl
lcall
add
jbe
pushf
pop
popf
push
sti
add
cld
fsub
in
mov
fcmove
dec
mov
fidivrl
mov
adc
loop
repz
add
sub
sbb
push
or
in
push
add
lds
scas
or
shrl
or
shll
shl
dec
pop
adc
stos
jle
scas
repnz
xchg
and
fimull
ret
popf
pop
cmp
pop
push
push
leave
sar
mov
cld
adc
and
fnstcw
std
sbbb
sbb
stc
add
fstpl
lods
xor
push
mov
add
in
mov
and
cmp
subl
mov
dec
adc
sti
dec
mov
lcall
fildll
add
jo
and
hlt
inc
add
add
mov
inc
pop
push
mov
dec
popa
mov
jo
js
imul
ljmp
jne
jmp
mov
adc
mov
cmp
icebp
jge
xchg
mov
push
mov
xlat
decl
mov
stc
lea
xchg
push
pushf
movsb
jle
aas
push
add
test
mov
adc
xchg
inc
data16
movsb
out
pop
dec
fbld
insb
mov
imul
insl
cltd
push
cwtl
jmp
hlt
popa
jmp
sub
xchg
repz
xchg
mov
hlt
xchg
loop
jg
out
mov
in
andb
cwtl
mov
daa
pop
dec
jecxz
push
fwait
dec
sbb
es
adc
stos
mov
nop
mov
popa
and
pop
movntps
rorb
adc
cmp
cli
jo
xchg
mov
mov
nop
orl
mov
incl
daa
insl
jne
in
pushf
ljmp
dec
mov
scas
add
scas
out
push
xor
inc
pop
inc
jno
insb
sub
idivl
test
or
hlt
inc
adc
icebp
pusha
cld
adc
mov
test
test
xor
ljmp
adc
negb
call
push
jne
subl
mov
jno
xchg
lahf
cmp
stos
pop
fwait
mov
jno
xchg
or
lcall
mov
outsl
or
add
add
dec
scas
add
xor
ja,pn
jns
xor
mov
ja
dec
add
cmp
divb
ss
add
call
mov
push
lret
and
sbbl
add
and
xchg
dec
lahf
call
je,pt
iret
pop
sub
sbbb
hlt
out
aaa
cmp
notb
aam
push
inc
call
lods
fcomp
outsb
mov
stos
bound
add
gs
repnz
bound
ja
clc
pusha
test
aas
mov
cmp
and
inc
jmp
cwtl
cmp
stos
sbb
das
nop
scas
dec
mull
std
jb
fwait
push
dec
or
cmp
push
pop
dec
jne
jecxz
ret
movsl
adc
leave
int
inc
mov
movsb
pop
repnz
fsubl
ret
loopne
rolb
mov
das
cli
mov
adc
stos
sub
push
test
fs
mov
pushf
shll
push
das
pop
pop
aas
xor
test
aam
ret
adc
lcall
sar
pop
or
mov
repz
xchg
mov
enter
rorb
sub
sub
test
jo
and
lods
bound
xchg
jle
dec
ss
loop
jg
pop
pop
mov
aaa
cli
loopne
je
jg
cltd
pop
cmp
mov
repnz
fwait
cli
xor
jno
movsl
dec
lock
mov
mov
in
fcom
sub
cli
fistps
popf
loope
outsl
stos
dec
fildl
iret
jle
adc
shl
cmp
sbb
push
push
xor
insl
mov
add
popf
movsb
in
movsl
sahf
adc
in
xchg
inc
pop
push
imul
orl
shlb
sub
adc
mov
and
insb
iret
add
sub
pop
sub
xor
pushf
and
and
or
rorb
add
sbb
sub
mov
pop
add
in
out
xchg
ljmp
pop
or
add
test
dec
inc
hlt
inc
xor
mov
gs
sub
push
fisubrs
jnp
push
xor
js
mov
sbb
into
lock
scas
and
jmp
push
jmp
and
jmp
loop
mov
jnp
lock
ss
insl
mov
dec
jg
nop
fwait
and
in
jbe
cmc
dec
sub
mov
sub
insb
arpl
inc
adc
dec
and
add
and
jg
adc
jne
jb
xor
sbb
das
jl
sub
out
jl
mov
in
out
mov
xchg
int
andl
imul
lds
or
ljmp
xor
mov
and
test
lret
push
orb
fldenv
outsb
sbb
jmp
adc
fbstp
iret
add
sahf
hlt
dec
fdivrs
pop
cs
push
test
inc
cmpsl
ljmp
lret
mov
dec
std
adc
stos
jge
xchg
pop
cmpb
fmull
das
scas
out
outsb
outsl
push
das
adc
inc
cmp
cmp
cmpsb
ds
jb
push
fsubrl
cwtl
jnp
mov
xchg
enter
in
xor
adc
jno
scas
or
mov
aam
out
xchg
repz
mov
fwait
pop
push
mov
shlb
add
add
cmp
pop
mov
adc
pop
pop
test
or
hlt
cs
xor
sti
push
xorl
es
ret
push
ret
shll
dec
add
ret
sub
jb
les
mov
push
inc
mov
push
jae
and
clc
pop
mov
outsl
cmp
add
mov
dec
jb
cltd
sub
sti
std
sbb
cmp
movsb
loop
pop
loope
imul
sbb
xor
inc
scas
rorb
mov
int3
and
lds
cmp
dec
int
hlt
outsb
out
jae
jbe
mov
push
cwtl
jecxz
aam
dec
popf
test
lea
push
mov
push
sbb
push
ror
ss
xchg
mov
aam
and
call
xlat
int
push
push
subl
cwtl
data16
adc
fcoms
dec
call
inc
clc
xchg
or
pop
mov
push
pop
or
sti
cmp
mov
mov
xchg
push
imul
xchg
xor
push
cmp
out
add
pop
adc
jae
mov
inc
mov
add
push
mov
daa
push
out
jns
jp
je
mov
cld
jge
daa
dec
lock
sbbl
mov
sbb
ss
ljmp
push
test
ja
fs
mov
xchg
add
fimuls
lcall
test
xor
daa
cli
sub
lods
pop
fisttpll
sub
outsb
xlat
repnz
or
hlt
popl
dec
mov
or
mov
and
mov
lds
inc
cmpsb
cmp
pop
mov
and
dec
cli
mov
sbb
adc
insl
pop
movsb
jb
xchg
test
sbb
push
ljmp
stos
dec
sub
pop
cs
sarb
mov
repnz
lahf
roll
scas
test
jmp
ss
and
sbb
pop
mov
sbb
xor
cmp
outsb
and
mov
pop
std
sub
int
push
add
adc
mov
adc
cvtdq2ps
fs
jnp
jmp
neg
sbb
mov
xchg
pop
xchg
fwait
jecxz
cmc
jge
cmp
jbe
unpckhps
mov
in
and
pushf
inc
fstpt
dec
and
cmp
sub
insb
mov
andb
ret
sbb
cmc
ja
jge
xchg
lods
aas
xor
cmp
xor
icebp
std
out
divl
outsb
fwait
shrb
adc
out
daa
mov
cld
cld
push
jns
adc
dec
xor
xchg
cmp
scas
adc
stos
pop
aam
xor
or
cltd
inc
dec
cmpsl
lea
icebp
jp
push
out
pop
xchg
fsts
xor
lods
movsb
dec
add
cs
ret
test
jne
sahf
andb
jecxz
mov
addl
jnp
xlat
push
pop
das
adc
cld
sarb
aam
fistpl
imul
and
mov
gs
stc
orl
pop
adc
fwait
inc
xor
xchg
int3
mov
cmc
dec
aas
cmp
dec
hlt
scas
loop
clc
lea
push
out
test
out
xor
insb
jl
xchg
xor
aaa
and
push
mov
pop
mov
pop
push
xor
int3
clc
nop
and
mov
mov
out
decb
imul
outsl
mov
test
sbb
dec
loopne
gs
jl
pop
fimull
inc
in
xchg
adc
test
jo
or
aad
cmp
and
push
xchg
call
pop
jg
xchg
mov
or
add
or
cmc
das
and
sbb
rclb
cmp
jle
out
inc
lret
xor
and
inc
mov
cmc
sbb
outsb
pop
adcl
and
es
inc
or
icebp
cs
xchg
mov
mov
hlt
xchg
adcl
xchg
sbb
jmp
jo
cwtl
mov
jne
jnp
adc
jp
ljmp
mov
push
xor
inc
push
je
add
adc
gs
xor
rorl
rcrb
das
repnz
add
push
cmp
jae
lcall
movsb
sub
roll
aad
sbb
inc
jae
xchg
or
test
repnz
outsb
xchg
mov
scas
outsb
cs
in
les
mov
jbe
mov
add
adc
sub
sbbb
mov
mov
adc
loope
movsb
inc
repz
mov
mov
jl
xor
mov
jne
dec
fisttpll
stc
jecxz
jno
out
and
xchg
mov
es
xor
shrb
cmp
fiaddl
daa
fsubrs
inc
lea
adc
jge
inc
dec
das
jl
xchg
ss
out
and
mov
out
adc
xor
outsl
xchg
push
pop
cmp
je
cmp
xchg
push
mov
jmp
or
pusha
xor
aas
gs
loop
or
push
mov
test
sbb
and
inc
les
mov
add
lret
fwait
dec
and
mov
push
mulb
cmpsl
push
int3
fdivrl
fnstsw
icebp
or
fwait
cld
hlt
push
ficoml
test
ja
nop
loope
add
std
push
mov
or
and
xor
jl
sbb
mov
dec
dec
pushf
mov
inc
clc
sti
jb
mov
int3
bnd
movsb
ds
sub
out
ljmp
fbstp
cmp
dec
mov
or
jb
cmp
xchg
aad
mov
lods
push
cltd
repnz
loopne
add
mov
adc
daa
mov
add
push
jb
dec
popa
pmaxub
dec
push
sbb
mov
and
mov
xorl
xor
add
sub
pop
jae
movb
jle
xchg
stos
sbb
mov
sub
adc
lds
cmp
test
imulb
or
aam
xor
inc
std
and
scas
pop
push
pop
xor
lahf
and
int3
add
fstpt
jle,pn
out
loope
dec
cli
cli
dec
and
int3
fs
pop
pop
adc
rol
add
sarb
dec
adc
push
bound
push
mov
push
and
adc
rorb
xchg
xor
pushf
add
imul
mov
gs
stos
pop
cmp
cmp
out
xor
aaa
xchg
sbb
gs
adc
xor
loopne
push
mov
inc
fcmovbe
or
cmp
aaa
scas
inc
es
mov
test
test
xor
and
mov
dec
sahf
adc
gs
pop
mov
cmp
cs
scas
sub
pop
sbb
lods
in
rcrl
cmpsb
mov
sub
xchg
fcomip
push
test
dec
in
stc
cmp
testl
and
add
jle
popa
in
stos
test
adc
ljmp
xchg
sahf
push
add
mov
mov
mov
inc
roll
push
jbe
jo
in
fwait
loope
xor
enter
pop
aas
test
out
add
cmp
insb
sub
jae
xchg
das
ja
mov
shrb
lret
sti
lahf
push
jmp
pop
xchg
movsb
xor
push
xchg
jns
inc
adcb
jne
lock
sub
sbb
in
ret
lods
es
roll
cmp
add
xchg
test
inc
fwait
std
pushl
rcr
or
in
pop
sbb
mov
aas
mov
adc
mov
xchg
cmp
fwait
into
sbb
push
clc
pusha
push
mov
push
shrb
jo
add
and
stc
or
ljmp
scas
shrb
inc
push
inc
mov
inc
push
arpl
adc
dec
sub
xchg
mov
outsb
pop
dec
out
adc
pop
mov
pop
jbe
jecxz
adc
xor
xor
sub
jns
int
push
decl
stos
stc
repz
xor
push
xor
mov
nop
stos
shlb
xchg
stos
in
out
adcl
pop
xor
sub
push
fwait
movnti
jb
insb
mov
cmp
iret
mov
jmp
push
sbb
mov
rcll
movsb
xchg
xor
ja
out
pop
pop
mov
dec
sbb
and
filds
repz
xchg
fiadds
mov
std
cwtl
mov
mov
dec
sub
or
call
mov
sbb
adc
pop
pop
inc
scas
loopne
hlt
arpl
sti
lahf
bound
and
cmp
andb
xchg
xchg
in
mov
gs
add
mov
cmp
out
adc
out
xlat
test
jbe
icebp
leave
mov
and
or
ret
sub
sbbb
lcall
das
push
sti
out
lret
cwtd
pop
adc
pop
or
and
rcll
jmp
mov
cwtl
cmp
dec
jg
and
sub
rcll
push
imul
mov
movsl
mov
xor
inc
enter
add
and
popf
xchg
add
int
jns
lods
lcall
push
sub
dec
sti
inc
fwait
fs
cld
cltd
and
les
call
lret
adcl
and
xchg
aas
movsb
xchg
int3
fsts
insb
fistps
xor
inc
rclb
shlb
push
lea
xchg
movsl
or
push
nop
xchg
lcall
mov
cmp
sub
fildl
rorl
inc
cmpsb
mov
push
push
jmp
cli
pop
and
mov
movsb
adc
adc
sarb
cmp
adc
mov
testl
pmulhw
popf
stos
addr16
dec
mov
bnd
push
fistl
lock
mov
and
enter
xchg
in
pushf
pop
jo
xchg
mov
push
adcb
jnp
sti
jns
lret
push
cmp
outsl
loopne
sbb
xchg
test
sti
xchg
sub
addr16
outsl
jne
in
test
pop
test
aad
outsb
fcoml
ja
mov
adc
stos
sbb
push
jns
imul
jge
int
jmp
add
xchg
pop
mov
pop
das
scas
orl
jae
pushf
mov
in
ss
and
gs
cmc
xor
or
push
ror
cmp
cmpsl
shl
sbb
xchg
adc
xor
popf
sbb
data16
test
mov
add
rolb
or
test
mov
arpl
rclb
fisubl
cmp
push
or
and
sub
int3
push
adc
insl
nop
push
sbb
loope
into
jmp
icebp
xchg
repz
xor
push
jno
sbbl
mov
sub
ror
ret
adc
jl
jnp
sbb
hlt
mov
push
out
ss
test
cltd
shll
lahf
cs
shr
and
or
insl
cmp
clc
cmp
jno
pusha
sbb
pop
sbbb
sub
pusha
in
pop
enter
in
in
dec
sub
xlat
adc
fsubrl
fs
mov
jge
mov
jo
shl
ss
cmp
or
test
enter
arpl
das
fimull
rorb
inc
cmc
cmp
mov
shl
push
fidivrl
enter
das
or
xchg
cltd
ror
and
dec
or
pop
rolb
jle
stc
cmp
fisubs
mov
int3
pop
shrb
rcr
nop
bound
mov
sarl
in
adc
sbb
cmp
and
insb
out
push
sub
and
jnp
add
mov
sbb
jle
jmp
mov
aas
clc
out
sub
cmp
xchg
mov
and
pushf
loop
jle
mov
and
outsb
je
sahf
js
xchg
loope
imul
mov
and
mov
sbb
insl
mov
mov
inc
sti
arpl
mov
mov
mov
in
dec
xchg
adc
cmpsl
lds
mov
jle
les
in
adc
jge
enter
sbb
mov
mov
or
jmp
or
push
mov
aad
mov
repz
xchg
mov
sub
pop
mov
mov
fmull
mov
mov
aaa
lcall
shll
cmp
xor
fistl
mov
inc
mull
mov
in
insl
dec
std
adc
ja
arpl
addr16
mov
cmp
inc
nop
iret
cmp
les
inc
sbb
faddl
or
xor
mov
les
stos
pop
addr16
jbe
add
lea
sbbl
cmp
mov
xchg
and
fwait
outsl
mov
int
or
or
jnp
gs
hlt
add
lcall
mov
aam
mov
jnp
inc
loope
add
ss
repnz
push
insb
adc
popf
stos
push
push
frstor
jg
dec
stc
out
inc
or
es
ds
popa
push
mov
mov
push
dec
lock
addr16
or
xchg
mov
outsl
lock
pop
xchg
mov
js
jl
shrb
mov
jb
and
jg
push
imul
or
int3
ror
inc
cld
adc
stc
jmp
push
xor
adc
mov
ja
adc
xchg
sarl
and
mov
cwtl
sub
sahf
push
fists
push
iret
sahf
aad
pop
insb
fnstcw
mov
in
rorb
das
je
or
mov
call
inc
insl
ss
dec
add
mul
adc
dec
push
cwtl
inc
adc
arpl
mov
mov
cli
or
stos
add
dec
push
jb
arpl
or
cmp
cmp
shr
jg
xchg
int3
out
enter
jbe
add
pusha
test
pusha
push
mov
inc
mov
and
lock
aaa
aas
repnz
subl
fnstcw
out
test
jnp
xchg
outsl
insb
lock
fst
dec
stos
inc
out
jae,pn
jnp
roll
loope
pop
pop
adc
arpl
mov
ljmp
stos
mov
fs
test
dec
loope
dec
mov
jo
jo
out
lahf
xlat
jb
or
inc
pop
outsb
data16
mov
js
jnp
inc
imul
movsl
xor
sub
ds
stos
sahf
gs
push
adc
in
popa
fwait
ljmp
jb
rcl
inc
nop
scas
push
adc
popa
xor
or
and
addr16
int3
int
mov
enter
inc
and
mov
das
ja
pushf
ds
popa
in
mov
xchg
insl
or
adc
sti
test
push
js
fisubrs
jl
inc
pop
sbb
cmc
out
lahf
test
jno
loope
test
in
adc
jmp
pop
movsl
pop
cmp
push
cmp
jae
imul
sub
mov
inc
test
imul
xchg
xchg
xor
lcall
loopne
jne
rclb
arpl
jo
mov
xchg
popf
daa
sarb
and
pop
cmpb
lock
sahf
insl
cmpsl
scas
loopne
shrl
jno
mov
sub
mov
cmp
sbb
jg
mov
out
dec
into
sbb
xchg
rcr
push
flds
js
inc
das
mov
cmc
cmp
xor
mov
lret
iret
mov
jl
leave
pushl
in
push
jmp
pop
out
insl
notl
jp
jbe
mov
nop
mov
insb
mov
push
lock
jnp
mov
aaa
bound
ljmp
lcall
push
iret
inc
jle
xor
lods
and
add
jp
pop
mov
inc
movsb
mov
pushl
out
repz
movsb
add
dec
pushf
js
jp
dec
shrl
bound
mov
or
or
add
repz
out
push
xor
mov
lea
lods
jbe
pop
fs
ss
sbb
in
addr16
mov
xlat
fdivrl
insb
movsl
rclb
inc
ss
or
mov
cmp
lcall
sub
inc
rcrl
sbbb
jg
mov
pop
outsl
movsb
popa
dec
jo
sub
push
inc
ret
inc
jg
out
sub
cmpsb
clc
repnz
pushf
ficoml
ret
leave
jnp
or
inc
rcl
push
dec
test
int
pop
call
int
scas
aaa
mov
xchg
hlt
fsubrl
jmp
inc
fwait
lods
imul
rcr
ds
add
insl
ret
xchg
movsl
mov
ja
in
lock
mov
pop
out
leave
cld
jbe
out
repnz
pop
pop
jmp
push
sub
fbld
push
add
lahf
xor
mov
dec
inc
inc
and
out
das
cmp
popf
pop
push
dec
xchg
pop
fcoml
insb
mov
std
mov
jno
push
jbe
repnz
pop
xchg
push
lds
mov
in
movsb
xlat
adc
scas
das
rcrb
in
mov
mov
cld
repnz
and
sahf
xchg
in
push
pop
mov
ret
js
jmp
pushf
adc
inc
mov
mov
xor
into
mov
push
lret
mov
andl
pop
pop
mov
xor
test
addr16
fldcw
std
popa
in
sub
popf
addr16
and
or
xlat
cmp
mov
add
outsl
add
out
test
jmp
fidivs
or
mov
lcall
push
adc
icebp
push
xor
dec
xor
or
jbe
push
cmpsb
leave
dec
or
imul
pusha
mov
push
xchg
loope
add
add
idivl
add
jmp
std
aaa
dec
mov
push
test
cmp
loop
sbb
lret
hlt
pop
scas
in
call
cmp
xchg
pop
push
inc
clc
jle
cmpl
cmpsb
test
or
mov
addl
outsl
inc
dec
addr16
lret
mov
add
mov
and
pop
subl
cs
imul
fwait
js
sub
bound
cli
mov
and
inc
mov
test
add
je
and
pop
call
mov
sub
push
sarb
inc
orl
jle
xchg
xchg
call
test
stc
push
jns
sub
xchg
pusha
insl
cli
aaa
popf
dec
hlt
jne
test
sub
jnp
sub
aaa
and
cmp
sbb
dec
je
jmp
inc
andb
out
mov
movsb
mov
mov
out
jbe
mov
cli
enter
xchg
and
shrl
insb
push
push
mov
and
imul
add
push
jge
dec
out
repnz
js
xchg
mov
in
imul
rorb
popl
mov
lods
leave
cli
shld
mov
inc
cld
mov
push
test
pop
pop
push
sub
xchg
mov
inc
popf
adcl
test
xchg
push
je
xor
cmpsl
les
inc
popa
rep
lea
dec
data16
or
xor
push
or
or
daa
mov
fsubrl
or
ja
decl
cmp
fldcw
rorb
aam
xlat
jle
gs
test
jge
mov
icebp
push
add
push
std
pusha
dec
aam
mov
sub
leave
or
aad
cmp
test
pushf
lods
ficomps
inc
fimull
outsb
cwtl
cmp
fwait
sti
aas
filds
jbe
mov
cmp
xchg
xlat
dec
pop
enter
push
mov
jge
ret
and
insb
xlat
pop
pushf
mov
xlat
fwait
sbb
popa
or
and
out
pop
pop
mov
movsb
cmp
test
sti
int3
dec
push
std
add
or
loope
pop
shrl
mov
mov
int
cmp
lret
insl
jnp
das
cmc
cmp
cmp
sbb
in
cmpsl
fcomps
sub
dec
ss
out
lahf
cmp
stos
jo
jmp
sub
add
mov
dec
sbb
test
andl
ja
and
pop
adc
pop
xchg
rcl
jmp
scas
ljmp
or
gs
test
hlt
inc
lods
int3
mov
mov
rcll
addr16
push
push
sbb
lcall
test
or
pop
sti
rcrb
push
lret
xchg
ljmp
and
or
pusha
mov
pop
int3
xor
mov
jp
sbb
in
out
jge
add
es
mov
inc
inc
xchg
sub
adc
cli
jno
or
xchg
mov
sub
arpl
mov
sbb
jne
and
dec
and
mov
add
dec
js
cmp
push
scas
push
scas
dec
sbb
ret
and
jae
in
xor
cltd
call
mov
add
fsubrl
ret
addl
inc
int3
lcall
out
fstps
xor
iret
lahf
movsb
sub
sub
mov
mov
sub
lcall
fnsave
dec
test
jb
jne
or
push
mov
inc
in
add
add
cld
aad
ds
cmc
enter
cmp
incl
xor
enter
jp
icebp
xchg
inc
daa
cmp
mov
cltd
in
jmp
sbb
shll
test
or
mov
and
sub
bound
adc
loope
popa
adc
xchg
lods
imul
xor
push
jmp
dec
ds
pop
adc
sbb
and
jb
in
or
inc
push
pop
out
ss
mov
mov
mov
out
push
int
cmp
push
call
ljmp
mov
inc
imul
dec
bound
mov
sahf
sub
or
dec
pushf
testb
lahf
cmp
addr16
std
xchg
in
jns
adc
ret
adc
jae
xlat
test
jns
xchg
mov
adc
xchg
inc
fldl
ret
lea
jl
pop
sub
jecxz
adc
pop
jecxz
cltd
mov
stc
mov
add
mov
add
sbb
loope
rorl
les
mov
clc
lea
pop
aad
dec
mov
dec
movsl
push
jp
jne
addr16
and
cmp
fsubl
test
out
sahf
add
and
ds
arpl
in
xlat
mov
cli
test
mov
adc
add
fdivr
data16
outsb
addr16
lret
add
fldl
mov
mov
pushf
aas
js
repz
pop
loop
sbb
pop
mull
dec
das
nop
xor
iret
sub
std
outsb
add
test
jg
gs
imul
ja
movl
push
sub
sub
popl
shlb
push
xorb
jle
add
pop
fmull
in
out
push
cmp
push
in
mov
mov
and
xor
das
movsb
adc
and
mov
pop
push
push
dec
mov
push
cli
inc
add
and
sbb
lods
add
lahf
shl
jmp
in
mov
cmovo
pop
dec
sub
mov
testb
ss
jbe
sub
xchg
nop
popa
je
xchg
in
popf
movsl
repz
mov
cmc
jne
into
sub
and
out
addr16
outsb
icebp
adc
mov
xchg
test
icebp
sbb
sbb
push
lret
fdivl
pop
mov
stc
sbb
sbb
fstl
lea
cmpsb
test
add
orb
fs
ds
xchg
test
cltd
insl
jge
pop
xchg
mov
mov
and
cmc
mov
test
es
sbb
inc
repz
lahf
mov
nop
push
popa
adc
push
sub
lods
rcr
cmp
int3
sub
cld
fsts
sbb
jecxz
cmp
out
and
rolb
shlb
shlb
mov
call
sub
push
shrl
iret
enter
fildl
and
jle
out
sahf
and
js
insl
mov
outsl
sbb
sbb
and
jne
cwtl
ficomps
adc
sbb
in
or
cwtl
test
aam
movsb
and
xor
into
cld
scas
jp
int3
movd
fisttpl
pop
stc
movsl
les
imul
stos
push
inc
imul
xor
mov
dec
loop
add
or
out
inc
daa
and
dec
sahf
sbb
inc
mov
insl
testl
fists
lock
adc
mulb
xlat
cmp
xchg
loop
ds
jo
lods
sub
pushf
mov
jns
in
jecxz
js
loopne
or
xlat
call
or
jmp
or
jecxz
inc
mov
aam
sub
pop
and
xchg
mov
fld
dec
ret
dec
addb
inc
push
mov
mov
mov
add
lahf
loopne
jl
ret
xchg
rorl
cmc
mov
ja
enter
mov
pop
sub
jnp
inc
aaa
pop
lods
ljmp
cs
outsb
repnz
std
xchg
inc
jno
daa
out
ficoms
sbb
in
mov
imul
ss
pop
iret
xchg
jne
inc
lea
ja
cmp
lock
mov
rcr
sbb
into
std
mov
inc
ja
sub
mov
jge
mov
ret
push
cmp
dec
mov
std
cmpl
fwait
mov
scas
adc
push
xor
scas
imul
ffree
fwait
jns
push
pop
jl
stc
and
das
push
pop
add
jo
push
decl
adc
sbb
and
sti
mov
leave
ljmp
ds
dec
xchg
imul
jb
mov
mov
xchg
pop
jg
test
fbld
ret
repnz
cmp
lcall
aam
iret
sbb
mov
outsl
incb
lock
dec
aad
add
cmp
jbe
ljmp
lods
cmp
xchg
jo
add
mov
addr16
pop
push
jnp
and
ljmp
mov
jge
xor
ret
add
xchg
xchg
add
sbb
ret
lcall
divb
loop
sbb
mov
lock
jae
je
xor
mov
cmpsl
xor
cs
flds
xor
add
test
mov
rorb
cli
pop
inc
ja
add
inc
adc
sti
xor
pop
sbb
ja
fisubrl
mov
sbb
and
mov
mov
push
mov
fsubs
dec
aaa
cli
outsb
test
mov
add
inc
ret
les
mov
addr16
dec
dec
xchg
stc
cmp
insb
push
dec
out
in
push
loopne
adc
bound
or
jmp
jecxz
icebp
adc
clc
shlb
mov
or
mov
or
or
and
cmp
or
mov
cmc
shll
inc
cmpl
cwtl
jo
or
xchg
and
push
js
sbb
and
pandn
pop
orl
jbe
push
jg
xchg
jae
inc
adc
rcrb
cmp
in
sbb
push
lods
dec
push
add
sti
dec
pop
sbb
stos
inc
and
sbb
iret
inc
push
je
test
lods
mov
lds
xchg
sbb
ss
pop
mov
mov
sbb
mov
cmpsl
ds
sbb
push
std
mov
orl
mov
xchg
xchg
push
ror
cs
jne
test
inc
scas
test
jns
jg
sbb
mov
sub
cmp
dec
lock
je
je
mov
xchg
cmp
sbb
repz
pop
inc
cmc
mov
sub
jae
iret
fldt
xor
movsb
push
push
inc
mov
mov
sbb
dec
mov
mov
xorb
add
pop
cmpsb
shlb
lcall
mov
stos
popa
movsb
pusha
les
dec
cmc
enter
sub
mov
daa
outsb
ljmp
outsb
ret
rcrl
inc
punpcklwd
cltd
and
repz
xor
int3
movsb
sub
mov
mull
aaa
and
out
or
enter
frstor
movsb
test
jnp
jl
xor
bound
mov
cmpsb
jp
sarb
jl
sub
adc
inc
inc
sbb
negl
cwtl
shrb
mov
jl
iret
dec
sbb
nop
ljmp
popa
hlt
and
out
mov
std
sbb
xchg
inc
and
dec
repz
jnp
jbe
stc
xor
test
jge
int3
push
bound
iret
mov
fstpt
js
dec
cld
andl
mov
push
into
push
adc
add
gs
jmp
ss
adc
cmpsl
movsb
add
jecxz
aam
int
push
jp
lret
mov
and
cmp
push
push
movsb
mov
test
fbstp
adc
cmp
sub
mov
mov
mov
and
cmp
ds
ret
les
pop
sti
mov
xchg
jg
loope
iret
inc
cmp
cmp
hlt
jle
mov
stc
mov
dec
push
test
adc
xchg
xchg
daa
dec
mov
lock
pop
adcb
or
popf
cs
and
inc
adc
test
les
jmp
test
in
jp
nop
aam
pop
and
fs
jns
nop
aam
lret
into
in
xor
jp
into
xor
push
mov
and
mov
scas
xor
cmp
lret
pop
in
lods
mov
fstps
idivb
add
cmp
cmpsl
xor
dec
adc
jmp
xor
pop
jno
loope
jmp
mov
adc
adc
das
cmp
insl
hlt
mov
nop
arpl
mov
mov
and
repnz
and
dec
outsb
and
rcrl
fsubrs
mov
inc
xchg
andl
notb
popa
mov
inc
pop
mov
arpl
push
adc
cmpsl
call
cmp
mov
push
xor
mov
shr
lcall
ds
jge
and
add
push
or
xor
cmp
jno
or
mov
add
fisubrl
stc
jmp
data16
imul
data16
movl
cltd
mov
ja
jne
lock
mov
mov
test
add
gs
addr16
xchg
insl
fildll
test
mov
push
mov
add
jge
test
arpl
push
sti
add
lret
sahf
cltd
xor
outsl
aas
fstps
test
inc
mov
xchg
mov
fwait
das
lods
fs
mov
lock
mov
inc
sbb
mov
data16
imul
push
or
or
addr16
fdivrl
inc
dec
mov
cmp
into
inc
mov
fidivrs
pop
mul
fxch
pop
push
insb
adcb
sbb
lcall
out
jl
stos
add
mov
and
mov
clc
cltd
xchg
sbb
cwtl
test
cmp
or
pop
cmpsb
aaa
mov
imul
or
or
xor
loope
adc
mov
push
outsb
mov
addr16
mov
mov
jge
xchg
mov
sub
jg
mov
mov
loopne
dec
loope
mov
add
mov
sahf
add
clc
in
int3
mov
imul
jge
xchg
xor
mov
aaa
std
stos
mov
test
test
loope
loopne
loop
xchg
adc
rol
and
jmp
loope
sub
jg
or
and
imul
pop
stc
push
dec
xchg
push
fimuls
push
xor
xchg
nop
aaa
pop
inc
push
and
ss
fstpl
js
pusha
out
cmp
xor
sahf
std
mov
push
fwait
push
or
out
sbb
cwtl
scas
add
dec
adc
loopne
std
jb
xchg
lock
dec
mov
push
push
mov
mov
sbb
or
repz
pop
fisubrl
adc
mov
aad
pop
fcoml
stos
adc
in
notb
xor
fisttpl
jno
in
adc
imul
daa
xchg
test
das
clc
mov
stos
cmpsb
sti
mov
repz
dec
dec
sbb
pop
lds
mov
mov
cmp
jg
aaa
push
pop
out
pop
and
jmp
in
and
int3
or
data16
mov
fs
movsl
out
lret
mov
sbb
pop
mov
xlat
jecxz
cli
mov
mov
and
mov
bound
pusha
add
xchg
inc
cmpsb
xchg
and
sub
inc
dec
dec
and
mov
test
dec
push
shlb
fisttpll
je
filds
sub
ret
jno
and
movsb
mov
jle
xor
les
stos
dec
jns
out
fimuls
mov
xor
mov
hlt
ret
sub
lcall
clc
scas
aad
jb
stos
add
cli
das
sub
sbb
and
mov
dec
insb
fnstcw
into
mov
or
sarb
mov
loope
inc
inc
test
aas
leave
aas
aaa
dec
mov
repnz
fnstenv
mov
inc
mov
add
sbb
aam
sbb
cli
sti
xchg
jmp
mov
leave
inc
xchg
jbe
adc
orb
jle
adc
mov
or
add
data16
mov
popa
dec
push
jmp
jb
inc
and
mov
stc
movsb
ja
and
mov
je
loop
cmp
cvtps2pi
aas
push
insl
xchg
inc
mov
loope
jp
push
int
cltd
ljmp
stc
xchg
cli
shll
jae
in
push
ret
test
mov
ss
dec
test
cmp
das
iret
mov
out
inc
dec
mov
jmp
xchg
add
insl
or
lods
inc
cmc
lahf
push
sub
pusha
test
int3
shl
mov
cmp
daa
dec
sub
cs
adc
hlt
incb
cli
dec
mov
adc
or
push
call
xorl
xchg
mov
outsb
inc
in
dec
jg
pop
lods
and
push
in
mov
cmp
jae
xchg
inc
push
mov
sbb
iret
mov
adc
test
sbb
ss
cmc
add
jne
mov
mov
inc
loope
jl
inc
add
rcll
icebp
pushl
and
mov
sbb
test
jge
je
xchg
cmpsb
mov
push
xchg
data16
sahf
mov
mov
fs
fcmove
shrb
jl
shrl
add
adc
xor
out
cld
dec
sbb
sti
repz
add
call
das
sbb
xor
js
or
xchg
bound
mov
ja
fs
mov
stc
adc
xchg
mov
sbb
and
lret
shll
movsl
sub
inc
fwait
inc
xor
adc
adc
xchg
fstpl
rorl
fstl
popf
outsl
push
andl
pop
in
xor
and
into
inc
in
pop
fwait
sbb
daa
jl
sbb
aas
or
mov
test
sbb
leave
push
add
pop
xchg
xchg
out
and
mov
pop
negb
fisttpll
mov
mov
pop
sub
int3
ljmp
jno
sbb
or
push
add
push
mov
xchg
adc
sbb
imul
and
dec
stos
push
arpl
in
mov
ret
mov
jl
mov
xchg
cmpl
fists
setns
sub
push
movsb
decl
add
testl
test
xchg
dec
cli
test
stos
push
or
test
test
xchg
loopne
outsl
inc
cmc
push
mov
adc
or
mov
divw
sbb
inc
subl
inc
lahf
adc
push
outsb
mov
push
sub
jecxz
imul
cmpsb
test
fs
cwtl
stos
call
inc
cmpsb
push
add
loope
mov
mov
mov
stc
and
rcl
push
daa
mov
xchg
push
aad
dec
leave
call
pusha
int3
pushf
xchg
jmp
mov
sarl
ret
mov
aas
ja
rcll
icebp
xor
mov
stc
mov
aad
sarl
jnp
push
sbb
mov
cmpsb
and
xor
fistl
jl
icebp
lods
mov
call
out
or
and
fidivrs
sub
ja
xchg
ret
push
aaa
bound
xchg
dec
sub
call
sub
and
mov
mov
dec
jle
sub
outsl
cmp
sahf
xchg
dec
mov
adc
loope
dec
push
nop
shl
jno
loop
mov
pop
movsl
outsb
sti
out
sbb
jne
lret
lahf
pop
mov
mov
cltd
mov
xchg
mov
rcr
mov
ljmp
leave
cmpl
je
ds
pop
pop
int3
sbb
adc
xor
mov
xchg
adc
outsb
sahf
in
jno
jle
call
push
sar
inc
es
lcall
movsb
mov
mov
xchg
fimull
sub
add
mov
loopne
add
cmp
pop
cmp
aam
ret
in
jns
loopne
sbb
lods
push
cmpsl
ret
add
push
pop
inc
pop
shrl
mov
cmp
push
mov
subl
adc
push
out
xlat
rorb
and
popf
inc
icebp
pop
fcoms
xchg
gs
push
mov
xor
lods
outsb
imul
loop
ljmp
ljmp
imul
fmuls
out
sub
mov
movsl
mov
es
into
insb
out
inc
out
call
jno
stos
jl
and
jp
decl
cltd
jl
aam
mov
mov
jne
or
bound
mov
out
movsb
fidivrs
int3
xor
sahf
sbb
jge
or
outsb
dec
jae
pop
pusha
sbb
popf
mov
pop
mov
dec
jecxz
gs
xchg
xchg
cmpsl
loop
sbbl
addr16
xchg
fbstp
sub
test
sbb
jl
mov
mov
pop
add
inc
daa
addr16
andb
insl
ret
movsb
ficoms
mov
imull
jle
lds
push
scas
stc
adc
ret
scas
cld
pop
leave
adc
rclb
icebp
sarl
bound
int
push
add
sub
stos
xchg
mov
dec
adc
pop
in
arpl
xor
inc
arpl
mov
sbb
or
jg
jge
xchg
sbbb
rorl
and
std
cltd
in
add
mov
dec
push
enter
or
stos
and
inc
dec
mov
sub
push
cli
pop
mov
cs
and
popa
insl
int3
push
sarb
lahf
xor
sub
mov
cli
arpl
aaa
loope
repnz
jg
inc
shrb
jl
aad
test
xor
xchg
and
stc
popa
fstps
lods
inc
adcl
xor
sbb
xchg
fldpi
xchg
jae
pushf
es
out
movl
xor
push
xor
pop
fcoms
lahf
dec
nop
dec
push
mov
inc
push
xchg
xchg
jbe
ret
test
mov
xorb
sub
dec
pop
ds
dec
xchg
popf
and
jae
daa
push
movsl
jns
call
test
push
pop
lcall
lds
loope
outsb
cmpsb
inc
call
xchg
loop
in
mov
xor
sub
mov
pop
and
pop
js
mov
fcompl
lret
iret
loope
adc
push
mov
daa
outsb
jne
loopne
mov
xchg
addr16
repnz
fcomip
pop
mov
mov
mov
sub
pop
outsb
lahf
cs
leave
or
lret
adc
mov
and
push
aaa
rorl
int3
arpl
add
movsb
mov
or
std
leave
rorl
dec
xchg
push
pop
mov
pop
fists
cli
xchg
in
xchg
gs
mov
mov
jecxz
push
add
inc
jb
sahf
loope
or
sbb
pop
clc
ljmp
imul
lret
jns
mov
or
sbb
iret
pop
sub
pop
mov
jecxz
scas
and
adc
jecxz
out
xor
dec
lahf
clc
mov
ret
mov
inc
out
dec
mov
mov
jl
fld
sbb
jge
ret
imul
cmp
push
sbb
nop
sahf
sahf
mov
lea
out
lock
mov
pushf
xor
and
mov
lret
push
jne
xchg
int3
repz
mov
lret
out
mov
xchg
or
xchg
cmp
lods
aad
pop
or
fistpl
add
lods
jmp
bound
mov
ficoms
mov
push
push
mov
movsl
pop
xor
ret
mov
jg
sbb
jg
outsb
in
pop
push
or
cmp
jecxz
stos
fldl
pop
dec
cmpsl
inc
push
mov
xchg
insl
jne
daa
movsb
ja
add
sbb
inc
mov
jno
mov
icebp
clc
jbe
xchg
test
movsl
subb
xchg
xchg
xchg
jle
ja
adc
imul
testb
orb
shrb
pushf
js
xor
das
addr16
aad
dec
outsb
jp
sub
testl
pop
jb
aam
or
fwait
jno
sbb
ret
lea
aam
in
mov
out
loop
or
test
in
loopne
shll
sbb
pop
mov
dec
mov
pusha
lcall
sti
imul
arpl
sbb
cmp
stos
add
daa
mov
mov
add
xchg
clc
and
icebp
and
enter
dec
in
sub
adc
shrb
or
pop
cmp
dec
push
adc
icebp
mov
test
sub
sti
inc
push
std
mov
gs
mov
sub
sbb
jbe
std
loop
daa
xchg
in
push
adc
mov
add
lret
insl
adc
fnstsw
pop
arpl
mov
and
add
cs
push
in
aaa
mov
xor
sub
jl
and
push
cwtl
cmp
mov
inc
test
je
loopne
xchg
or
scas
or
notl
adc
pushf
dec
adc
scas
leave
mov
push
jb
punpckhbw
xchg
inc
and
cmp
ffreep
adc
movsb
xchg
xchg
jo
and
or
test
jmp
aaa
xchg
nop
add
repnz
loop
mov
adc
jecxz
ret
or
sub
insb
mov
adcb
call
jmp
fwait
push
jno
iret
adc
cs
push
arpl
pop
and
xor
arpl
jecxz
mov
dec
sub
shufps
and
les
jbe
loope
clc
cltd
imul
in
std
pop
xorb
dec
jno
loop
out
imul
mov
pop
jae
cmp
stos
mov
mov
cmp
clc
ficompl
cmp
js
inc
cmp
addr16
cmc
fcomip
mov
sub
sub
mov
cli
mov
pusha
rcll
lret
cmp
xor
xlat
cmp
dec
mov
add
mov
dec
lea
fidivrl
cltd
sbb
in
jbe
test
das
or
fsts
jae
aad
jl
xchg
xchg
loopne
cmpsb
mov
mov
dec
jo
addb
xor
jb
xchg
mov
cmpsl
inc
les
push
mov
cmp
xchg
test
bound
mov
daa
pusha
jb
jmp
sub
pushf
push
out
sti
rcrb
push
addr16
lcall
jno
aad
cmp
mov
pop
sub
orl
outsb
or
xor
outsb
mov
cmp
sar
pushf
jno
pop
aam
shrb
jbe
je
int3
adc
push
aas
mov
ljmp
adc
sbb
pusha
mov
shll
out
push
fs
imul
jl
or
int3
jnp
push
insl
cmp
xor
cli
cmpsb
lcall
in
cmc
pop
clc
push
or
bound
xchg
je
cmp
push
lods
cwtl
mov
jg
jle
push
adc
fisubrl
rolb
inc
and
repnz
das
orb
xor
add
xchg
xorl
jbe
cltd
dec
aas
int
add
cmc
push
xor
testb
jb
push
nop
movsl
jae
test
inc
jno
inc
stos
popa
and
mov
popa
push
fcomps
icebp
xchg
lret
sbb
fistl
pushf
in
shl
mov
pop
test
xor
test
cmc
fisubl
addb
jmp
push
jp
xchg
ret
iret
fs
push
repnz
add
pop
js
dec
std
xor
push
inc
jle
int
mov
mov
push
mov
adcl
ja
xor
rcrb
adc
xchg
insb
divl
ret
insl
push
sbb
mov
fld
loop
mov
data16
lds
insl
mov
fidivrl
cmpsb
adc
push
pop
icebp
pop
lods
dec
jno
add
pop
cs
xor
or
jnp
and
popf
gs
sub
mov
ficompl
out
js
stos
xor
pop
pop
std
inc
fdivl
mov
pop
out
ja
cld
jmp
mov
lods
data16
xchg
sub
outsl
adc
dec
xor
out
les
cmp
mov
mov
outsl
leave
jbe
test
hlt
out
mov
dec
cwtl
into
js
dec
pop
popf
sub
sti
movsb
mov
jl
movsb
cmp
pop
xchg
add
dec
out
sub
rcr
sbb
mov
dec
xchg
cmc
lret
rep
and
add
push
test
pop
outsb
sbb
addl
les
lock
ret
sub
pop
pop
add
pop
mov
loopne
out
aam
pop
data16
lock
mov
sti
fnstsw
sbb
mov
call
addr16
dec
ja
clc
cmpsl
jmp
ffree
mov
loopne
lock
mov
mov
popf
ret
stos
addr16
cmp
lods
dec
clc
stos
dec
sub
jl
jb
iret
std
lret
pusha
pop
jbe
push
push
ja
out
dec
push
lret
sbbb
cmc
pop
in
mov
mov
scas
pop
push
xor
test
lcall
and
jnp
push
pop
stos
xor
jo
mov
int
int
xchg
add
dec
lock
jns
jge
and
out
fs
scas
mov
push
push
imul
imul
mov
pop
cli
mov
sarl
insl
mov
fs
leave
data16
push
stos
rclb
lret
inc
pop
pusha
push
shll
xchg
in
dec
push
shrl
dec
mov
dec
test
adc
test
jne
inc
sub
add
out
dec
leave
in
in
add
les
push
faddl
lods
inc
shl
mov
push
jp
addl
lahf
in
int
mov
int3
ss
sbb
bound
aaa
mov
mov
out
sub
pop
addr16
push
data16
sub
jmp
test
lds
in
adc
lret
fadds
push
mov
mov
mov
stc
jl
mov
pushf
inc
mov
pop
jmp
push
adc
xchg
loope
test
cmp
mov
ss
ret
push
scas
test
imul
aad
out
imul
mov
xchg
ds
in
loopne
lcall
outsl
mov
ljmp
loope
pop
dec
enter
sbb
aas
dec
daa
dec
sbb
js
and
cmpsb
ffree
inc
inc
mov
scas
add
pop
jp
cmc
or
and
pop
sub
sub
pop
or
les
and
push
pop
stos
lea
mov
adc
fsts
test
lret
and
clc
push
xor
mov
add
movsl
out
popf
fwait
shr
jmp
fcomps
outsb
aas
xchg
xchg
sbb
cmpsl
mov
jne
cwtl
repnz
jnp
mov
dec
data16
xor
dec
xchg
andb
imul
scas
in
jo
mov
add
mov
mov
fmull
adc
loope
inc
inc
mov
iret
ret
cli
fisubl
or
ret
xchg
out
adc
jae
lret
dec
fdivs
in
and
adc
or
pushf
jge
sahf
xchg
pop
dec
pushf
aad
or
rclb
roll
xchg
das
nop
mov
ja
mov
ss
xor
xchg
mov
sbb
outsb
jne
in
sti
mov
dec
lock
xor
idivl
popf
jno
ss
adc
jo
and
inc
jbe
lret
std
out
int
mov
sub
push
push
add
push
jnp
push
jmp
jle
add
in
or
rclb
cmpsl
xchg
mov
dec
into
mov
sbb
popf
filds
decl
filds
inc
cld
lock
push
scas
movsb
test
xchg
stos
inc
mov
push
aas
sarl
jle
aas
jbe
fcoml
cwtl
iret
movsl
mov
push
jo
inc
fldcw
xchg
lods
loope
pusha
aam
mov
jmp
sub
bound
or
sbb
xchg
cmp
or
jp
jle
mov
repz
insl
mov
xchg
repz
or
loopne
data16
andb
xchg
mov
ja
repz
cwtl
ds
call
rcll
and
dec
cmp
or
les
mov
and
mov
js
aad
mov
notl
xor
mulb
jecxz
push
clc
or
dec
push
in
or
mov
mov
add
or
push
imul
sbb
hlt
pusha
mov
xchg
inc
sarb
mov
xchg
cltd
scas
test
std
enter
arpl
push
mov
inc
nop
js
xchg
xor
jp
icebp
adc
jns
test
and
or
mov
push
lcall
inc
mov
in
dec
je
xchg
xor
cmp
push
nop
pop
push
fnstsw
aam
lret
iret
sub
push
add
lea
mov
xchg
push
mov
hlt
mov
rcrb
pop
xchg
scas
sbb
mov
roll
sub
and
pop
in
jo
in
pusha
sbb
add
lods
insl
jnp
mov
jb
in
fwait
repnz
addr16
sahf
cli
addr16
inc
mov
push
dec
push
jb
lds
filds
xchg
ret
sub
jne
icebp
stos
or
xor
push
test
aam
sub
cmp
pop
in
mov
mov
or
loop
insl
aam
stc
push
test
roll
fcmovnb
cmp
pop
ja
lret
adc
push
add
cli
xor
std
in
shll
mov
mov
jo
mov
mov
mov
cmp
inc
iret
pushf
adc
pushf
cmp
icebp
sub
sahf
jo
sub
jle
adc
sbb
repnz
fxch
inc
xor
popa
mov
dec
cld
pop
push
mov
push
push
push
adc
and
push
sbb
clc
lods
add
push
fstpt
outsl
or
mov
into
push
jae
mov
test
inc
mov
mov
inc
add
add
add
divb
cmpsb
jne
mov
int3
movsb
mov
enter
and
shl
out
push
add
flds
jbe
shl
xor
adc
pop
add
movsl
stos
subl
vmovapd
sbb
pop
test
dec
into
ja
sub
ret
or
and
in
shl
rcrb
pop
inc
xchg
andb
mov
push
rorl
mov
pop
shll
mov
pop
push
sub
enter
aas
test
subb
jo
mov
sub
pop
test
lret
in
pop
xchg
andl
ret
aaa
jb
cmp
add
add
test
cmc
adc
xchg
add
mov
sbbl
int
mov
and
or
icebp
stc
jne
jb
push
push
std
sub
sbb
pusha
popf
in
xchg
repz
mov
inc
xchg
loope
inc
and
pop
mov
mov
mov
popf
test
push
xor
cmp
mov
stc
and
movhps
mov
jp
mov
inc
mov
cld
and
inc
cmp
cld
dec
pushf
lea
out
cld
cmp
fstl
pushf
imul
xchg
nop
jge
adc
out
mov
xchg
inc
in
dec
mov
sbb
and
sbb
adc
loop
ss
rclb
std
jb
psubusb
pop
arpl
daa
inc
and
mov
sbb
inc
dec
shl
sbbl
ss
cmp
jne
cwtl
ss
stos
jne
and
sahf
shlb
pusha
out
push
pop
sbbl
fcomps
fbld
add
call
mov
scas
mov
test
jb
insb
pop
dec
mov
jno
lock
addr16
jmp
cmp
ficoms
inc
mov
orb
popf
push
in
add
adc
fbld
and
and
in
dec
daa
pop
stc
aaa
or
push
ret
and
mov
adc
rcrl
movsl
mov
push
and
clc
mov
xchg
push
out
inc
cmp
push
out
xchg
push
pop
inc
out
cmp
jo
xchg
dec
fisttpl
dec
cmp
jmp
mov
jl
shrb
cmp
test
cmp
sti
into
scas
inc
dec
stos
or
jp
mov
xchg
test
insb
and
adc
or
push
mov
xor
lds
lods
sub
mov
jnp
add
add
dec
or
pop
or
inc
sub
sbb
push
inc
push
cmp
lret
in
dec
push
aad
cmc
mov
daa
movsl
sbbl
push
mov
test
in
mov
loope
xor
popf
ja
ljmp
andl
es
jae
jg
mov
repz
mov
inc
or
dec
pushf
inc
jle
xchg
add
insl
push
pop
icebp
mov
push
and
mov
dec
jae
mov
jmp
aad
and
test
jecxz
shrb
cmp
push
bswap
mov
std
pushf
pop
push
mov
xchg
lods
xor
mov
aas
jae
in
cmp
jnp
adc
or
stos
xlat
aad
jg
add
ja
mov
testl
repnz
jp
cmpsb
inc
dec
popa
shrl
sbbl
push
mov
push
xchg
in
cmp
push
or
inc
fstpl
nop
push
xorb
sub
testb
sbb
jmp
ret
repnz
xor
popa
and
out
cwtl
add
and
pushf
loope
mov
mov
shll
mov
sahf
into
fs
or
mov
adc
js
xchg
rcl
loopne
ret
icebp
cmpsl
push
mov
sti
pop
inc
in
mov
mov
sbb
jl
movsb
fninit
roll
and
lret
lcall
cmc
jo
daa
mov
mov
popf
mov
mov
add
dec
adc
sbb
dec
dec
mov
cmp
punpckldq
clc
outsb
pop
fwait
pop
mov
jo
jnp
in
push
mov
imul
pushf
in
ja
cwtl
jno
test
xchg
dec
cld
dec
mov
mov
scas
bound
negl
push
test
daa
into
jle
js
in
cmp
and
adc
in
pop
lret
sub
pop
pop
mov
mov
in
lods
cmpsb
push
mov
mov
rcl
adc
push
out
jge
push
xor
cmp
test
xchg
inc
into
push
or
cmp
xchg
jae
xor
mov
mov
dec
xchg
aaa
xor
lret
sar
loopne
cmp
jp
mov
sub
std
rorl
xchg
call
fisttpll
rcll
xor
mov
jmp
xchg
lea
shl
jmp
dec
push
lods
sbb
movsl
mov
mov
adc
je
cwtl
dec
mov
dec
out
sub
fs
sub
jg
jns
lds
ret
out
movsl
pop
repz
sub
jnp
ret
scas
imul
dec
bound
push
mov
fistpll
cmp
cld
xor
arpl
push
or
ja
jl
mov
mov
dec
das
mov
jns
or
pop
ja
jno
mov
push
jge
jo
xor
xchg
pop
push
and
ret
or
jno
mov
dec
mov
push
jg
addr16
cmc
xor
in
pop
lock
sbb
xor
cmp
pop
je
fisttpll
inc
pop
mov
add
jp
push
inc
testb
out
push
lock
xchg
dec
repnz
sub
inc
mov
jnp
lret
xchg
push
sub
rcrb
cld
xsavec
push
lret
lods
fldenv
sti
ja
mov
test
fnsave
mov
hlt
rcrb
pop
ds
outsl
arpl
jnp
mov
push
dec
addb
add
inc
jae
or
hlt
push
iret
xchg
filds
mov
add
popa
mov
mov
ljmp
and
movsl
push
jl
push
das
sub
imul
xchg
cmpsl
mov
cmp
je
jo
int
push
xor
dec
sbb
lds
push
leave
dec
in
cli
inc
lret
pusha
cli
and
pop
push
inc
sbb
adc
clc
adc
icebp
lods
movsb
dec
or
aam
inc
je
add
cmp
fldcw
inc
cmc
pop
insb
insb
mov
jge
add
out
notb
sbb
cmp
push
mov
inc
mov
lea
push
xor
imul
scas
ret
and
les
loopne
push
mov
pop
cmp
xrelease
outsl
and
ljmp
movsl
xchg
lds
in
stos
cmpsl
lcall
push
jecxz
stos
lret
lods
scas
fisubrl
sahf
inc
iret
or
dec
sub
cmp
dec
test
inc
ja
mov
jecxz
jae
repnz
add
pop
mov
insb
std
pop
into
das
nop
movsl
rclb
repz
jns
lods
mov
cmp
scas
sub
sub
inc
sub
jnp
mov
dec
push
xor
mov
lods
mov
adc
shrl
mov
fwait
bnd
xlat
aam
cmpsl
roll
mov
mov
scas
repnz
dec
xchg
cmp
dec
lods
in
cmpsb
sbb
cltd
jge
mov
xchg
outsl
popl
pop
adc
rol
or
data16
mov
add
jp
sbb
frstor
mov
jbe
jge
cmp
je
leave
mov
xor
jp
mov
lock
jbe
iret
pop
ja
fwait
ret
mov
hlt
roll
jbe
xor
inc
cltd
mov
or
pop
jne
outsb
call
mov
dec
and
pop
sub
not
inc
xchg
dec
pop
pop
fsubrp
mov
jecxz
push
jge
rcrb
loope
sbb
xchg
loop
sahf
cmpps
ljmp
aaa
pop
subb
aas
cltd
lea
dec
mov
mov
popa
stos
loope
adc
hlt
arpl
mov
orl
jecxz
mov
xchg
insb
sub
cmp
fists
daa
add
sarl
leave
popf
clc
imul
ja
lcall
mov
xor
fstpt
aaa
pop
add
fbld
mov
sub
jg
push
in
xchg
inc
fisubl
cmp
stos
lcall
sbb
pop
lods
xor
jge
cmp
mov
or
sarb
jb
outsb
in
lods
scas
jne
push
xchg
lods
in
insl
in
mov
jnp
daa
dec
and
popa
dec
lret
push
push
rcrl
loop
in
mov
jne
lods
push
mov
mov
fstp
adcb
xchg
sbb
fdivrs
in
das
adc
int3
js
or
outsb
jne
cmp
aad
push
out
out
xor
dec
sub
stos
jmp
dec
jp
inc
mov
aad
fldcw
add
mov
mov
pop
sub
sbb
push
gs
testl
lock
xor
sbb
fadds
imul
jg
push
cmp
mov
enter
mov
les
xchg
mov
daa
sbb
mov
pop
outsb
jmp
mov
out
dec
jb
lret
mov
jae
jbe
cli
daa
dec
and
jno
cwtl
mov
popa
sbb
inc
or
das
mov
cmpsb
testb
mov
rcrb
gs
push
hlt
cli
lock
pop
scas
mov
mov
jo
sub
stos
lds
stos
push
pusha
movsb
scas
fnsave
xchg
add
pop
insb
xchg
and
jo
inc
movsl
mov
or
sbb
add
inc
and
adc
xchg
adc
loope
rclb
cli
push
ret
xor
mov
inc
push
sbb
dec
xchg
lahf
add
push
mov
inc
lahf
in
xchg
dec
dec
out
sbb
cmp
mov
call
jae
outsb
andb
mov
loop
push
xor
adc
pop
negb
hlt
push
or
mov
jle
xchg
dec
fdivrs
mov
mov
mov
lods
xchg
jge
dec
mov
xor
lock
mov
iret
dec
pop
lock
int
mov
pop
imul
cli
out
arpl
lods
test
mov
jo,pt
filds
je
jmp
xor
mov
leave
adc
xchg
and
cltd
lret
mov
in
sub
cmpsl
repz
pop
mov
cmp
repz
mov
cmp
mov
mov
mov
jo
pop
cli
pop
mov
dec
dec
xor
outsb
pop
add
into
cmp
fistpl
incl
mov
push
or
dec
adc
data16
add
enter
mov
ret
insb
ljmp
or
daa
or
scas
daa
call
fists
movsl
cli
sub
ficoml
mov
push
adc
push
adc
jo
sub
fsubrl
sub
add
inc
int3
add
arpl
push
shrb
xor
lods
add
jno
jb
fs
push
movl
mov
pusha
aaa
hlt
push
jmp
shrb
lcall
sahf
sub
sbb
jge
adc
ret
movsl
push
jecxz
push
mov
bound
popf
cli
cs
ljmp
clc
and
cmp
mov
xchg
and
sahf
aad
ret
adc
jecxz
mov
nop
cmc
jp
jnp
or
mov
mov
enter
fisubl
bound
push
lahf
shll
icebp
add
pop
cwtl
inc
cmpsl
insl
push
daa
ret
and
loope
push
mov
test
ljmp
sbbb
gs
call
cwtl
add
jmp
orl
mov
test
jne
pop
xor
mov
push
jge
adc
push
jnp
mov
jns
adc
mov
aaa
fs
in
push
mov
or
jae
adc
decb
cmp
pop
inc
mov
ret
pop
je
into
push
mulb
icebp
es
and
add
add
int
bound
xchg
leave
inc
adc
negl
dec
fisttps
xor
ss
pushf
repnz
dec
jle
aaa
mov
popa
test
arpl
cmp
outsb
sub
adc
mov
jns
adc
pop
aas
nop
mov
adc
push
mov
fcomps
mov
test
jnp
aas
mov
xlat
in
test
mov
jg
pop
mov
adcb
jmp
jnp
imul
or
mov
lods
daa
pop
xchg
add
out
ds
dec
pusha
jbe
int3
js
fwait
sub
jmp
mov
adc
divl
enter
mov
dec
out
mov
stc
adc
imul
mov
lret
cmp
adc
jp
jp
movsl
cltd
add
pop
mov
and
push
inc
lods
icebp
sbb
adc
jne
mov
pop
fidivrl
lret
popa
mov
pop
mov
nop
ljmp
les
push
mov
lret
repnz
loop
add
dec
push
fsubrl
adc
fs
adc
int3
xchg
pop
pop
or
and
addr16
sub
push
sahf
push
sbb
daa
cli
push
jo
pop
sti
clc
xor
test
cli
pop
popf
lcall
test
dec
jno
jmp
push
and
arpl
ds
test
cwtl
outsb
xchg
mov
cs
inc
jle
or
push
dec
cltd
out
out
inc
push
cmc
sbb
inc
pop
aaa
cli
sti
pop
stos
mov
jnp
xchg
das
dec
dec
pop
sub
loop
inc
hlt
jb
aaa
cmc
jno
mov
dec
adc
loopne
mov
mov
xor
test
fcmovu
ret
shrl
es
stos
pop
pop
push
jmp
shll
dec
xor
jl
stc
jns
pop
add
jnp
sub
sti
pop
rcll
mov
sbb
and
dec
xor
pop
out
sub
jecxz
mov
sbb
loope
clc
jbe
scas
daa
mov
ret
addr16
pop
or
dec
inc
dec
cli
cmp
cmpsb
fmuls
add
out
fdivs
sbb
mov
xor
aaa
aas
daa
je
jp
pop
int
lret
and
cmp
es
fdivrs
and
inc
lret
int
and
in
jp
dec
jg
lods
sbb
jb
insl
cmp
testb
jecxz
seto
and
mov
pop
les
lods
mov
movzwl
cltd
rorb
inc
scas
cmp
sbb
mov
xor
xchg
lea
lahf
lock
jle
movb
leave
pop
xchg
das
in
mov
mov
js
cmp
inc
insb
sub
lds
ja
xor
lock
movsb
pushf
stos
mov
popa
fstpt
roll
nop
or
loopne
cmp
fadds
outsl
push
adc
mov
add
icebp
cli
cmp
insl
and
addb
and
dec
pop
dec
cmc
imul
dec
sub
inc
cmp
stos
add
jno
int
imul
jmp
movsl
in
jnp
ret
es
mov
mov
mov
lods
xorb
loope
inc
pop
mov
pop
adc
stos
xchg
pop
mov
mov
dec
sub
or
nop
pop
js
iret
push
xor
mov
fwait
and
jmp
inc
or
and
add
pop
adc
jne
mov
loopne
sub
dec
loop
mov
mov
xchg
xor
out
xchg
rcrb
hlt
adc
inc
lret
dec
jecxz
sahf
sbb
push
cmpb
in
jo
out
fists
lret
adcb
pop
mov
loope
ret
inc
sbb
pop
subb
sar
cld
mov
dec
stc
inc
add
sub
xchg
push
call
dec
shr
mov
cmp
pop
inc
adc
repz
lcall
fsubs
jle
xor
sbb
pop
insb
fucomip
ss
testb
sub
adc
rolb
mov
xchg
sbb
movsl
lret
movsb
adc
js
add
cwtl
icebp
push
hlt
xor
adc
cmpsb
and
rcr
sbb
jecxz
stos
and
test
notl
fcomi
jmp
out
mov
outsb
adcb
fcomp
sti
xor
or
and
test
mov
imul
jmp
lahf
stos
cmp
jns
sub
test
ret
dec
push
jb
fs
aaa
adc
xchg
divl
in
js
sahf
out
in
js
add
sbb
push
adc
hlt
push
jmp
cmp
ret
in
mov
push
stos
icebp
cmp
inc
and
mov
mov
nop
jl
neg
stc
add
xor
xor
shrl
lock
dec
jne
xchg
ljmp
inc
sub
jno
movsl
sub
push
ja
addr16
fisttps
cmovs
cmp
sbb
or
ficoms
push
cmp
add
ficompl
cmp
pop
push
xor
mov
ljmp
aas
push
leave
mov
or
scas
mov
push
cmp
jno
lahf
mov
cltd
add
xchg
inc
ds
int
stos
shlb
imulb
jmp
mov
sbb
jmp
outsl
and
nop
mov
inc
sub
xchg
mov
movsl
inc
ss
leave
sti
lcall
cmp
call
paddq
mov
or
clc
aas
push
xor
jmp
add
xchg
inc
push
mov
gs
std
push
shrl
mov
cmpl
push
dec
inc
jno
mov
dec
mov
pusha
mov
outsb
lret
rorl
jbe
cmp
inc
popa
bound
loopne
pusha
dec
add
in
mov
mov
cmp
push
scas
inc
mov
test
in
fildll
loopne
into
out
sbb
lahf
add
jae
movsl
outsl
out
fldcw
test
sbb
leave
pop
leave
jg
add
xor
dec
pop
fisubrl
xchg
stos
sub
cli
jecxz
aas
and
xlat
or
mov
xor
imul
fidivrs
mov
dec
mov
and
adc
jg
sti
xor
push
repnz
push
sbb
xchg
cld
push
lock
imul
incl
or
sbb
shll
sub
repnz
lsl
lods
ds
sbb
leave
inc
imul
in
testl
mov
jnp
loopne
test
jbe
or
fdivrp
imul
loope
shll
pmaxub
mov
pop
fbld
fsubl
test
mov
push
test
js
xchg
jmp
dec
pop
lea
repz
mov
dec
push
sbb
mov
dec
mov
out
fbld
xlat
sbb
shrb
icebp
cmpsl
mov
jecxz
sub
sub
mov
xchg
cmp
ret
push
jecxz
jmp
or
cld
mov
mov
icebp
add
gs
cmp
int3
scas
arpl
jbe
push
sub
decl
sarl
cmp
iret
fucomi
mov
jno
cld
jp
pop
mov
mov
push
dec
mov
fimull
inc
scas
and
out
push
shl
xchg
pusha
xchg
test
fmul
cld
mov
mov
add
xor
lahf
adc
and
cmpsl
out
jg
fbstp
sub
nop
aas
arpl
cmp
repnz
mov
cmp
xchg
jmp
rorb
adc
sbb
add
orb
push
pop
arpl
sbbl
in
pop
and
xchg
pop
cmp
jl
clc
fstps
loop
int
orl
push
cmp
into
scas
js
addr16
lret
int
andb
sbb
data16
lcall
cmp
loop
mov
sbb
leave
jno
cs
fbstp
pop
sbb
sti
xor
dec
lods
aaa
pop
lcall
ret
mov
and
in
sub
pop
int3
mov
push
bound
jno
in
fldenv
pop
popf
push
outsb
test
js
loop
xcrypt-ofb
cmpsl
out
cmpsl
jmp
sub
pusha
inc
push
imul
pop
arpl
je
add
sub
or
or
adc
stos
out
loope
call
repnz
movsb
in
mov
les
jl
and
pop
or
rorb
lea
pop
mov
aad
jge
loope
mov
pop
lock
and
add
pop
leave
sub
push
imul
mov
jnp
xor
or
pop
jne
mov
and
dec
int
add
lret
pop
mov
dec
jge
sub
stos
push
rcrb
std
decl
ret
fcoms
scas
push
in
fstl
mov
dec
inc
cmp
ret
fldt
cwtl
jbe
imul
xchg
mov
mov
jp
xor
push
pop
sti
inc
jns
dec
outsb
dec
and
xchg
popf
ja
fcomps
ljmp
mov
loope
jge
pusha
test
adc
mov
xlat
idivb
stos
add
and
sbb
fwait
push
cmc
or
jl
lods
mov
out
add
pop
rcrb
push
xchg
lods
test
inc
inc
sbb
and
inc
loopne
mov
sub
mov
inc
sub
jecxz
push
shlb
or
outsb
ss
and
inc
out
cltd
add
cld
jae
cltd
icebp
inc
or
cli
test
addl
pushw
push
mov
jg,pn
shlb
and
inc
xchg
xchg
push
mov
xor
repz
push
fidivrs
fsts
xchg
test
fbstp
inc
movsl
mov
cmpsb
jo
sbb
mov
and
mov
xor
push
cmp
fdivp
loope
mov
stos
sub
mov
cltd
and
mov
pop
xor
test
inc
gs
xchg
and
out
test
adc
xchg
ss
xor
and
aaa
bound
rcl
mov
icebp
mov
or
arpl
jg
xchg
push
arpl
xchg
sub
loop
loop
pushf
test
mov
fcomps
add
dec
adc
out
or
mov
xor
mov
mov
xchg
in
es
lahf
xor
aas
dec
jge
lcall
lea
inc
and
jp
adc
xchg
mov
lahf
add
in
mov
jb
cltd
dec
adc
cmpsb
pop
lcall
out
xchg
jno
sbb
ret
js
movsl
xor
or
lock
dec
sarb
sbb
xchg
fs
lcall
cwtl
shll
pop
sub
in
fldcw
lods
aas
ljmp
jb
popa
mov
mov
insb
inc
bound
js
sbb
stos
je
arpl
mov
xor
dec
cs
push
push
fchs
aam
jb
test
jnp
jmp
pusha
mov
mov
inc
sub
sub
add
fs
push
fcoms
sbb
je
frstor
and
xchg
mov
int
push
cmp
call
pushf
movups
popf
xchg
or
mov
in
sbb
stos
fidivrs
push
gs
jp
sbb
sbb
xchg
lods
jne
sub
jmp
dec
lock
jnp
and
jmp
mov
dec
shrl
push
mov
pop
scas
sub
rcr
cmp
mov
xchg
enter
outsb
popf
cs
pause
xor
xlat
mov
outsb
xor
sub
jb
out
jbe
xchg
push
sub
ds
and
mov
mov
leave
bound
push
mov
mov
ljmp
xchg
jbe
jmp
scas
push
divl
add
out
mov
xchg
out
cli
inc
ret
fstl
cmc
adc
jg
mov
scas
add
ret
inc
dec
mov
int
or
inc
xchg
mov
setl
fnsave
sub
push
jmp
xchg
mov
push
pop
mov
or
mov
in
sub
mov
std
sti
xor
adc
xchg
xchg
add
and
dec
loope
nop
pop
roll
das
mov
jbe
int
pop
xlat
cmp
lahf
dec
movsb
jo
das
push
xor
pop
aam
ljmp
cmp
sbb
idivb
pop
mov
push
inc
or
enter
ja
outsl
inc
or
rcrl
mov
cmp
rcrl
adc
or
popf
nop
xchg
pop
jecxz
fnstcw
ret
inc
out
pop
out
jne
inc
cmp
pop
jg
pop
jecxz
repnz
pop
rep
sbb
and
jae
ja
mov
dec
in
xchg
cld
icebp
iret
jmp
bnd
mov
loope
mov
jle
cmpsl
lcall
adc
dec
fwait
xlat
mov
dec
dec
icebp
push
shrl
jg
sub
dec
add
arpl
cld
fwait
mov
jnp
addl
leave
pop
mov
sbb
in
xchg
xor
jo
insl
lds
cld
lea
jmp
xorb
fisubs
shrl
mov
mov
push
nop
rolb
fcmovbe
rolb
jp
scas
in
aas
pushf
dec
jg
das
adc
sahf
sub
xchg
out
decl
sub
sbb
insb
fidivl
push
mov
test
sbb
ds
push
xchg
leave
pop
pop
xlat
adc
cmp
jns
mov
loop
lea
out
out
sub
imul
and
imul
movsl
mov
push
aaa
fs
sbb
adc
pop
stos
push
andb
push
mov
inc
xor
test
jno
mov
in
jbe
sti
sbb
cmc
cmp
into
add
xor
loopne
outsb
in
jns
shl
imulb
out
dec
sub
mov
lret
out
in
cld
cld
lock
incl
ret
xchg
int3
sbb
in
push
mov
push
fs
mov
mov
jmp
cmp
mov
stos
mov
data16
lret
jmp
and
fldenv
out
imul
adc
sti
add
mov
test
repz
icebp
push
jo
cmp
dec
out
cmp
fistl
mov
lcall
cmpsl
push
ljmp
mov
lds
adc
pop
jle
mov
negl
fwait
mov
ja
insb
loopne
fsubs
cmp
sbb
cld
inc
sbb
jecxz
xor
or
pop
cmovnp
mov
and
sti
mov
or
add
cwtl
or
imul
mov
js
rclb
xchg
mov
sub
push
leave
shlb
pop
cmpsb
jae
fsub
hlt
mov
sahf
or
jg
ss
add
sub
dec
push
pop
mov
addr16
pop
fldcw
cmp
fcomps
pop
movsl
and
movsl
test
mov
fadds
mov
add
lret
dec
fwait
cmpsb
ret
xor
sbbb
or
inc
sub
mov
dec
repnz
xchg
movsl
sbb
pusha
jbe
sub
and
mov
movsb
xchg
inc
sbb
sub
jl
push
jb
into
and
rorb
xorb
mov
fwait
pop
xor
cmp
pop
push
cmp
jl
jge
les
push
cmp
pop
inc
mov
mov
int
imul
jo
jge
pop
jno
ret
aam
mov
push
mov
xchg
ja
jnp
pop
rorb
jg
loope
pusha
lods
inc
lahf
mov
mov
dec
mov
dec
sbb
je
in
sub
jo
subb
lea
lock
mov
call
mov
leave
jmp
and
sti
push
xchg
mov
sbb
push
out
mov
or
je
sti
lret
push
imul
ja
loop
cmc
jge
mov
xor
test
cmp
in
js
cmp
test
jge
pushf
repnz
adc
lahf
ja
jle
push
inc
sub
ds
fstl
mov
dec
out
xchg
loop
dec
pop
mov
imul
inc
scas
jb
xchg
push
ja
add
jo
daa
insl
mov
inc
stc
cltd
jmp
movb
dec
sarb
int
jno
pop
jl
dec
xchg
adc
push
inc
cmp
mov
add
mov
and
lret
pushf
rcll
push
addr16
shrb
stos
fs
xchg
xchg
xor
mov
jecxz
icebp
sub
out
add
xchg
xor
or
into
sahf
adc
aaa
add
jg
xchg
xchg
mov
mov
mov
fistpll
insb
mov
fsubrs
in
adc
jle
and
cmp
mov
adc
test
xor
scas
in
sub
cmp
xor
rclb
dec
int
adc
cmc
cmp
stos
aaa
insb
cs
sti
or
inc
lods
mov
mov
pop
sti
inc
add
or
mov
lock
clc
sub
arpl
aad
mov
inc
iret
or
jb
aaa
xor
xlat
pop
sub
clc
cmpsb
and
ss
pop
rorl
xchg
std
std
cmp
inc
sbb
mov
in
mov
dec
into
test
inc
dec
and
adc
sub
lcall
inc
bound
sbb
or
jge
push
pop
out
popa
xchg
addr16
fadds
cld
out
cmp
ss
xor
out
pop
sbb
out
adc
sub
idivl
faddl
mov
out
rorl
xlat
fimuls
inc
lds
out
aas
fbstp
aas
or
mov
inc
data16
int3
xchg
mov
inc
popa
jmp
mov
orb
in
stos
out
jno
je
cltd
ret
dec
add
push
dec
and
sbb
push
lahf
cmpsb
pushf
lock
gs
xchg
adc
fisubs
ljmp
dec
inc
cmp
jmp
movsb
xor
jae
xchg
nop
lahf
xchg
inc
push
popa
jno
jp
test
out
fsubrl
fstp
lret
jo
pop
add
xor
test
adc
sbb
mov
movsb
mov
iret
adc
pop
sbb
xor
push
jmp
mov
cmc
xchg
or
lea
sbb
and
push
xchg
or
out
sub
jbe
mov
jnp
jp
nop
mov
sbb
xor
outsl
addr16
mov
ss
sbb
cmp
lahf
adc
ret
mov
xchg
push
cmp
mov
adc
lea
pusha
mov
shlb
inc
aas
sarl
test
rclb
fmull
and
xchg
cli
in
push
xchg
dec
enter
inc
xchg
dec
lods
icebp
fwait
xchg
test
cmpsl
loope
dec
and
jbe
mov
dec
repnz
ljmp
and
and
xchg
push
aas
inc
xor
mov
mov
push
incl
stos
pop
hlt
jnp
mov
and
rorl
je
cmc
pop
imul
dec
aad
shll
cld
xor
or
out
leave
js
push
xchg
fcompl
sub
ss
ret
or
mov
bswap
je
push
imull
les
lods
sbb
add
call
xchg
ret
mov
mov
mov
lahf
or
out
daa
jmp
dec
fdivrl
pop
mov
sbb
dec
pop
push
in
popf
ret
mov
xchg
jmp
or
push
jp
iret
cmp
push
jne
push
pop
xor
out
addr16
cltd
in
fidivs
jl
push
outsl
fisttpl
inc
inc
dec
aad
fstpl
repnz
dec
popa
rcr
sub
adc
or
aaa
ficoms
fwait
pop
fs
inc
test
test
ficoml
dec
push
mov
inc
mov
in
fistps
and
sub
pop
pop
mov
das
inc
jp
cwtl
fisubrs
int
mov
ret
sbb
add
insb
fisubl
lds
cs
test
outsl
or
inc
sub
xor
jbe
popa
xor
stos
ja
sarl
insb
pop
pop
and
push
pop
inc
imul
outsb
xor
ss
daa
call
xorb
xor
nop
adc
mov
in
test
mov
xchg
adc
push
jb
fwait
xlat
mov
mov
test
mov
lods
fmulp
lock
inc
fstl
stos
test
into
xchg
push
push
cmp
push
jl
inc
inc
jmp
rcrl
mov
and
mov
bound
loop
dec
and
push
xchg
out
dec
push
sbb
cltd
push
xchg
sahf
jno
push
ret
inc
test
cmc
sarb
add
push
mov
mov
sbb
movsl
notl
mov
adc
jle
cwtl
dec
jge
or
pop
or
dec
or
and
and
inc
mov
and
xor
mov
shrl
cmp
sbb
les
jg
push
jl
in
fsqrt
pop
shr
add
mov
pop
xchg
add
jne
shrb
repz
inc
or
push
pusha
push
pop
inc
ds
out
ja
mov
iret
scas
or
xorl
movsl
fisubl
cmp
jo
scas
hlt
jns
push
sbb
push
mov
mov
rcrl
rolb
enter
jb
pop
in
ret
push
cmpsl
inc
negl
out
pop
xchg
dec
sub
dec
arpl
adc
ror
push
dec
movsb
out
je
and
ret
adc
or
ret
std
scas
insb
push
dec
subl
orl
mov
sub
dec
xor
mov
lret
xchg
mov
rcll
jecxz
jbe,pn
pop
xchg
sarl
mov
mov
das
and
lcall
mov
inc
clc
cmpsb
mov
cmp
xor
popf
push
imul
lods
negl
xor
push
push
sbb
push
cmpsb
lods
sub
mov
je
fcoms
cmp
es
sahf
in
and
xor
orb
or
adc
or
jp
test
dec
xchg
aas
and
popa
cmp
xchg
bound
sub
loop
call
outsl
test
pop
mov
jnp
cltd
mov
pop
pop
xchg
xchg
add
imulb
lret
mov
dec
fstpt
test
lret
je
push
mov
or
mov
outsl
cmp
stos
jae
adcb
fidivs
mov
cmp
mov
aad
jge
xor
outsb
insb
in
and
xor
vmwrite
and
cmp
mov
stos
int3
mov
outsl
jle
add
jle
clc
clc
sub
lret
cmpsl
das
imul
mov
and
ret
sbb
pop
bnd
cld
inc
or
shll
jnp
push
leave
in
shlb
ret
xor
cmp
xor
mov
stos
sbb
mov
js
adc
and
ja
aas
cld
jne
negb
idivb
shll
inc
add
or
and
and
loop
push
xchg
jb
push
clc
scas
stc
cmpsb
rclb
roll
adc
pop
lahf
xchg
lfs
insl
ret
scas
ror
fidivl
je
mov
hlt
sub
xchg
pop
les
pop
into
cmc
push
aaa
bound
xchg
sub
push
push
mov
xor
sbb
jge
jl
outsb
mov
scas
test
sbbb
out
imul
sub
or
xchg
sbb
ret
xchg
mov
notl
and
rcrl
data16
adc
add
mov
dec
inc
xchg
sbb
add
push
fldt
cmpl
jo
fcomps
sbb
out
stos
xor
gs
leave
adc
leave
loopne
push
ret
das
pop
jg
nop
pop
mov
in
data16
roll
shr
add
addr16
push
ds
addr16
jae
flds
cmp
pop
jne
jae
push
mov
shll
jmp
popw
mov
iret
mov
and
fsincos
lcall
jle
mov
lods
sub
iret
push
mov
sbb
fsubl
jle
iret
sbb
hlt
popa
andb
in
leave
sub
push
in
jmp
ficoml
push
sbb
and
incb
sahf
add
or
dec
ds
outsl
pop
and
outsb
adc
ja
int3
jge
mull
les
in
mov
adc
cltd
cmpsl
ljmp
fisubl
notb
cmpsb
imull
test
pop
adc
testl
mov
inc
mov
dec
vphaddbd
jns
ljmp
adc
jg
xor
call
sbb
hlt
sub
add
loope
push
xchg
jge
arpl
jecxz
test
push
cld
push
clc
stc
xorl
loop
cs
push
loop
es
in
cld
stc
jecxz
xchg
popf
add
lcall
inc
pop
cmp
nop
inc
xor
das
add
or
aas
adc
inc
sbb
jge
inc
cmp
inc
sub
or
cltd
xchg
iret
ss
jmp
outsb
or
cmp
jge
and
insb
mov
test
sub
pop
lock
lods
outsl
lods
cltd
mull
cs
inc
scas
jb
xchg
add
lcall
fimull
pop
das
shrl
jecxz
repz
pusha
or
orb
xchg
mov
lahf
jno
jp
jo
mov
xor
aas
push
sub
xchg
dec
or
push
popa
out
mov
sub
xchg
ss
jo
and
outsb
and
out
mov
leave
dec
out
xchg
testb
mov
mov
jb
cmp
jno
dec
inc
out
hlt
mov
mov
sub
mov
push
sbb
mov
ljmp
sub
push
jle
ja
add
jns
scas
xlat
adc
testl
mov
or
or
popf
xchg
add
shl
inc
mov
sbb
stos
sbb
sub
nop
xor
bts
jg
inc
fistl
lock
jl
lods
mov
and
or
push
mov
fsts
imul
cmp
cltd
xchg
xchg
and
sub
dec
mov
inc
pop
push
mov
movsb
scas
push
adc
mov
mov
push
adc
sub
lea
insb
into
lea
mov
mov
add
bound
xor
call
mov
mov
xchg
clc
xor
inc
jmp
cmp
inc
movsl
push
mov
les
push
jbe
sub
insb
sub
test
mov
and
xchg
enter
fwait
inc
lcall
adc
cs
cmpsl
test
or
adc
jecxz
outsb
or
xor
subl
xor
test
mov
lea
sar
insl
pop
jp
mov
pop
enter
adc
cmp
out
lods
insl
jnp
loopne
mov
ffreep
jle
cmp
adc
xor
fxch
in
fucomi
xchg
nop
inc
xchg
sub
pop
push
daa
add
fdivrl
dec
test
sbb
xor
movsb
mov
inc
mov
inc
cli
xchg
jl
sbb
repnz
fiaddl
jmp
xchg
and
sub
ja
adc
dec
icebp
mov
push
aas
cmp
or
mov
insb
jns
dec
mov
mov
js
repnz
dec
pop
dec
cmp
aas
add
mov
aam
insb
push
xor
lea
inc
testl
fcmove
cwtl
xor
addb
mov
mov
pop
fwait
loop
cmp
pusha
dec
mov
push
mov
push
sub
and
popf
clc
sub
fisubrl
jecxz
xor
and
sbb
test
stos
mov
jbe
xor
add
add
test
cmc
movups
mov
sahf
test
fwait
comiss
pop
subl
and
mov
sub
dec
push
jecxz
adc
sbb
mov
push
mov
sbb
stc
push
or
imul
insb
cltd
jecxz
fldl
inc
sub
call
ja
or
sub
stc
aaa
in
xchg
mov
push
adc
push
cs
add
test
push
pop
ret
stc
test
sub
fcoms
xor
repnz
lds
pop
divb
or
loopne
aaa
gs
push
ds
std
add
mov
sbb
hlt
jb
pop
dec
fildll
push
dec
aam
inc
jmp
xchg
adc
push
ret
into
loopne
jne
jle
pop
loopne
fiaddl
orb
imul
scas
or
enter
pop
add
imul
in
pop
lahf
cltd
push
test
test
mov
sti
mov
test
sbb
js
inc
call
jecxz
dec
pop
data16
int
adc
outsl
push
add
jecxz
adc
mov
int3
push
jbe
mov
nop
mov
and
outsb
and
cmp
shll
jle
mov
pop
or
push
das
int3
pushf
jl
js
jo
movsw
leave
aaa
add
lret
jle
push
mov
pop
insl
inc
or
inc
cmp
pop
out
lods
sar
adc
aas
fiadds
cmpsl
clc
or
les
or
repnz
jae
add
in
pop
inc
dec
adc
cmc
sbb
adc
or
pop
enter
dec
dec
push
int3
je
rorb
mov
loopne
or
or
fs
dec
lcall
fisubrl
inc
movsl
jmp
int
or
outsb
cmpsb
or
int3
xor
adc
in
add
outsb
jno
jo
bound
mov
arpl
adc
mov
xchg
jg
push
fdivrl
jge
ss
sbbb
jae
mov
es
and
orl
add
ficoml
lret
pop
inc
pop
mov
jno
pushf
andl
movsb
pop
dec
pop
sbb
loopne
or
dec
pushf
cltd
and
out
xlat
fisttpl
inc
mov
lods
movsb
cmc
jb
mov
ffree
aam
sub
pop
sub
dec
push
sub
adc
out
sbb
mov
in
in
in
xchg
aas
cs
movsb
stos
and
and
ja
mov
mov
inc
imul
adc
adc
mov
cld
mov
jns
sbb
pushf
adc
aas
dec
lahf
mov
aaa
inc
aaa
in
adc
pop
in
jp
filds
out
jl
test
shl
push
daa
jo
xchg
in
lea
jge
xchg
xlat
add
imul
cmp
inc
dec
in
cmp
add
ljmp
out
dec
iret
sahf
push
ja
push
xchg
mov
fdivl
mov
xor
add
and
enter
insb
adc
movsb
jle
pop
decb
dec
ds
jae
loopne
hlt
xchg
aad
inc
idiv
mov
sahf
sbb
jmp
inc
mov
push
mov
xchg
mov
in
fildll
daa
fs
sarl
out
mov
loop
push
out
clc
dec
mov
xor
or
sbb
push
cmp
lods
adc
into
jle
push
arpl
adc
jecxz
sub
es
xchg
fcmovnbe
loop
inc
adc
lahf
pushf
cmpsb
jae
adc
fistl
addl
fs
dec
mov
jne
inc
jecxz
adc
add
inc
jae
out
push
imul
xsha256
cmpsb
xchg
int3
sub
scas
xchg
shll
int
ficomps
adc
pop
pop
and
int3
loop,pn
mov
xor
cmc
test
adc
mov
or
aad
dec
pushf
sbb
movsb
hlt
adc
mov
out
repnz
and
pushf
mov
fistpl
push
nop
popa
jl
jp
imul
addr16
fidivl
adc
lret
or
nop
jns
or
loopne
jl
sub
sbb
fstl
mov
jno
dec
mov
jle
pop
das
mov
jne
xchg
out
dec
mov
andl
mov
push
lcall
lcall
xchg
xchg
movsl
and
pop
adc
push
jl
or
mov
dec
xchg
or
std
xchg
sbb
or
inc
xchg
sbb
mov
cmp
sub
lret
jp
sti
mov
add
or
stos
adc
int
push
pop
pop
imul
xchg
mov
fiadds
fcmovu
aaa
jne,pt
mov
fcompl
jb
addr16
les
add
stc
jle
xchg
scas
movsb
pop
sti
cmc
sbb
mov
shll
pop
cli
fbld
out
mov
shrb
xchg
imul
lds
jne
jle
imul
bound
or
mov
insl
jge
dec
inc
stos
test
push
insb
add
push
pop
jno
stos
sbb
sti
sbb
js
pop
inc
mov
dec
mov
test
xchg
into
push
adc
sub
out
jae
fiaddl
push
or
rcrb
insb
mov
push
pop
lcall
mov
movsb
add
adc
lahf
out
mov
stos
in
ljmp
push
test
mov
enter
addr16
cmp
jae
xor
pop
ljmp
outsl
xchg
lret
data16
mov
jmp
mull
sub
pop
xchg
pop
mov
cmc
cltd
inc
pop
and
mov
push
ljmp
insl
jle
mov
cltd
xor
insb
inc
aad
xchg
sbb
mov
enter
rcll
mov
insb
negb
sub
push
pop
aad
add
cmpsl
sbb
addr16
rcrl
jae
add
xchg
mov
push
loop
or
pop
mov
lcall
cltd
xor
sub
leave
jns
inc
es
mov
orl
mov
gs
out
sti
or
add
dec
sub
jno
fs
int
hlt
sub
leave
rcl
cltd
sbb
pop
xchg
jl
mov
test
in
lock
push
repnz
fldt
sub
cmp
andb
adc
mov
lds
aad
notb
mov
mov
sbb
add
adc
nop
lret
jp
cmc
dec
negl
xchg
mov
jmp
mov
shlb
and
pop
cs
sbb
xchg
in
mov
lds
and
jp
add
loope
add
in
enter
stos
loop
cs
aas
stc
jo
or
dec
imul
push
mov
pop
stos
xor
or
cmp
mov
andl
dec
rcll
adc
pushf
inc
popa
not
lret
dec
sub
jb
or
inc
loop
adc
outsl
pop
push
pop
fsubs
movsl
mov
mov
mov
pop
jnp
and
mov
add
and
or
int3
sub
ret
dec
shrl
adc
stos
sbb
and
enter
subb
in
loop
in
out
leave
sahf
xor
orb
add
mov
dec
fcmovb
jge
push
stos
pop
inc
or
inc
jmp
cmc
ret
jmp
cs
fcmovnb
outsb
adc
loope
jp
xchg
enter
inc
mov
cli
mov
mov
popf
insb
sub
in
mov
popf
fnstcw
pop
orl
sub
icebp
dec
pop
ret
cmc
pop
mov
jge
add
lahf
adc
lods
arpl
dec
pop
xor
mov
cmp
mov
jne
adc
mov
pop
jle
jmp
mov
test
inc
fwait
je
movsb
cmp
inc
jl
mov
or
add
in
sub
lahf
idivb
pop
popf
stos
inc
jnp
sub
cs
mov
test
mov
icebp
cli
negb
or
adc
out
push
das
inc
aaa
inc
and
sbb
jmp
mov
xchg
pushf
pop
add
push
mov
rclb
pop
mov
aas
negl
gs
test
dec
xchg
loope
outsl
cmp
mov
mov
addr16
jnp
add
adc
lods
push
pop
fidivrl
sbbl
repz
sub
mov
jns
push
mov
clc
out
testl
mov
inc
lret
jl
cld
mov
fstpt
aaa
in
jo
les
jle
mov
inc
popf
dec
cli
shlb
pop
dec
mov
icebp
sub
and
pusha
mov
adc
sbb
in
lds
pop
dec
push
imul
subb
inc
add
rorb
rcl
pop
adc
into
mov
or
insl
push
add
xchg
cmc
ret
cs
ror
pop
cld
pop
xchg
mov
ja
ret
mov
stc
xchg
cli
jno
xchg
sub
and
test
add
or
inc
test
fnstsw
pop
push
push
lods
incl
lret
or
and
xchg
mov
mov
inc
pop
or
mov
sbb
leave
jae
push
aas
jle
nop
test
pop
test
add
fstps
mov
xor
xor
loope
mov
xchg
sti
pop
add
dec
pop
xor
jge
lods
inc
inc
aas
push
pop
mov
fwait
dec
in
jbe
or
test
mov
add
lret
imul
rcll
xchg
mov
dec
sub
mov
cld
jbe
adc
pop
sub
mov
inc
xchg
mov
mov
sbb
pop
pop
jno
or
xchg
fmulp
arpl
idivb
cli
inc
cs
sub
ret
repnz
lret
shlb
jae
test
inc
xlat
pop
int
jno
fsubrl
gs
mov
mov
ja
inc
nop
gs
inc
jge
cmp
shll
add
gs
shll
inc
sahf
pop
ljmp
fbld
jae
leave
xchg
cmp
and
bound
inc
jle
or
das
adc
mov
adc
xchg
scas
test
cmp
addr16
xchg
adc
push
xchg
cmp
int
pop
std
mov
repz
mov
jno
dec
inc
loopne
lret
mov
xchg
dec
fisubs
rorb
inc
loop
shll
jo
gs
push
push
inc
loope
ret
adc
xor
pop
notl
sbb
outsb
mov
stc
mov
fs
xchg
fdivl
lret
push
xchg
adc
sbb
pop
cmpsl
mov
mov
inc
fdivs
roll
stc
icebp
shrb
adcb
fistps
out
mov
movsl
pop
mov
out
stos
lea
jns
mov
pop
mov
cmpsl
pushf
pop
jae
push
mov
push
push
dec
push
xchg
mov
lea
repz
jge
ret
sbb
jbe
fsubr
lahf
pusha
xor
mov
add
adc
xorl
loop
lcall
and
xchg
cmp
jg
arpl
mov
mov
fmuls
shll
dec
cmp
insb
test
jae
in
sub
dec
jne
sbb
adc
movsb
cmp
cmp
addl
cmp
sbb
inc
and
call
dec
mov
iret
jl
cld
dec
sti
mov
fldenv
inc
test
pop
outsb
add
lcall
mov
sub
sbb
rcr
inc
push
repz
cmc
sahf
mov
lds
mov
mov
mov
lods
sbb
ficoms
xchg
rcrl
lds
roll
or
outsb
sub
imul
mull
xor
add
lahf
rorb
test
pop
mov
dec
inc
inc
cmp
mov
daa
fsub
js
xchg
or
dec
fwait
jb
add
fmull
sbb
jle
dec
mov
lods
pop
push
cmpsb
inc
arpl
sub
xchg
jns
clc
in
repz
aam
arpl
xchg
cmp
xchg
cmp
pop
and
mov
sub
mov
mov
mov
add
xchg
shlb
jp
test
mov
cmpsl
mov
jo
out
mov
fdivl
push
pop
fstpt
mov
cmp
cwtl
and
shrb
add
dec
movl
push
mov
xchg
cmp
sub
mov
add
xchg
jg
mov
ficoms
push
and
push
lods
or
imul
in
clc
lret
or
sub
push
sbb
push
in
fisttps
xor
jge
test
add
adc
outsl
nop
push
push
add
out
roll
rclb
or
scas
cld
enter
adc
sub
jae
neg
mov
mov
div
jp
in
repz
push
fstpl
mov
popa
rolb
fs
pop
repnz
xchg
mull
xor
imul
xchg
jmp
mov
and
shlb
adc
xchg
fdivr
imul
or
push
jecxz
and
mov
add
loop
pusha
xchg
and
push
dec
pop
xlat
stos
xor
xchg
push
push
xor
mov
data16
mov
out
push
frstor
or
mov
dec
or
popa
shrb
sub
push
xchg
dec
xchg
add
jbe
insl
testl
in
add
adc
mov
int
or
inc
jg
mov
ds
and
mov
pop
and
jb
adc
sar
and
cmc
bound
cmp
lds
cmpsl
xor
sbb
jno
mov
dec
imul
pop
out
cmp
and
mov
add
jne
fdiv
data16
addr16
test
jne
aad
cmpl
jns
cmp
ljmp
hlt
ljmp
rclb
mov
and
cmp
stos
rep
sbb
push
fsubrs
pop
sub
pop
repnz
mov
mov
mov
lret
cs
movsl
pop
stos
je
test
scas
jecxz
mov
xchg
xor
pop
cmpsl
mov
dec
add
push
xor
push
ds
adc
pop
push
dec
jno
shll
dec
sbb
push
mov
mov
adcl
add
mov
movsb
pop
mov
inc
mov
push
scas
nop
push
sub
testl
mov
icebp
sub
hlt
adc
nop
aad
dec
sub
lret
sbb
xor
push
jmp
or
mov
or
daa
in
inc
push
lahf
ja
hlt
cmp
in
int
mov
sahf
aaa
xlat
lea
jne
mov
int
in
cmp
dec
int
push
jae
mov
or
push
add
std
cmp
mov
cmpsl
mov
mov
pop
hlt
jae
lods
insb
int3
lcall
stc
popa
nop
push
punpcklbw
xor
xor
in
pop
lds
push
aas
arpl
les
and
xchg
cs
or
cltd
daa
mov
test
jno
lods
pop
push
fisubs
mov
lds
out
and
fsin
inc
sub
fnstcw
mov
mov
lock
scas
push
adc
xchg
jnp
mov
push
sub
mov
xchg
or
xor
test
out
inc
ljmp
test
jp
loope
push
mov
and
lds
pop
xchg
and
push
sub
sub
or
push
mov
xorb
repz
mov
es
imul
test
jp
mov
cld
cmp
mov
loop
out
movsl
call
add
push
inc
sub
adc
lcall
wbinvd
mov
jnp
jmp
loop
stos
add
imull
les
sbbb
insl
fbld
pop
mov
xchg
xchg
add
addr16
je
gs
fstl
jge
insb
les
lods
rorl
mov
inc
or
xchg
xor
test
sti
cwtl
mov
inc
insl
dec
stc
lea
ss
and
dec
xchg
lcall
sbb
dec
mov
mov
adc
push
loope
adc
sub
cmpsb
shl
adc
out
cltd
js
add
cmp
and
jmp
fmuls
xchg
add
pop
fwait
cmc
outsl
mov
out
sahf
cwtl
jl
std
jbe
jnp
in
or
ja
jno
in
adc
fs
aad
jmp
mov
fwait
loopne
shrl
decl
fists
outsl
insb
cmp
and
fimull
cmp
test
bound
cmp
popa
mov
or
jp
cld
or
add
iret
pop
icebp
les
mov
mov
out
outsl
lods
in
jbe
rcrl
push
arpl
mov
jg
mov
ret
fnstenv
ds
ret
loop,pt
ljmp
sub
xor
push
insb
nop
mov
insb
test
gs
lret
or
es
xchg
inc
push
stos
sbb
int3
das
cmp
sbb
mov
insl
cmp
cmpsl
popf
lock
mov
inc
rolb
and
addr16
das
pop
mov
outsl
pushw
sub
aam
or
xchg
pop
mov
or
mov
cmp
or
push
xchg
sub
imul
test
mov
jb
dec
adc
dec
je
xor
nop
cmp
adc
mov
dec
ja
sub
mov
mov
out
mov
fsubrl
ljmp
push
ja
cmp
ror
popa
jnp
inc
dec
inc
inc
lock
dec
mov
or
jmp
pusha
pop
jmp
and
add
inc
gs
or
fstl
cmpsb
xchg
add
add
sbb
repz
nop
test
mov
add
xchg
add
mov
pop
repnz
out
push
insl
test
cmp
outsl
hlt
iret
shlb
inc
dec
insl
sbb
clc
sub
push
cli
in
jl
fimull
jae
cmp
js
loope
push
mov
xchg
lds
mov
gs
imul
mov
insb
je
and
jg
idivl
cmp
pop
pusha
sub
sub
or
in
js
xchg
push
push
and
push
add
push
test
lds
movl
iret
push
mov
xchg
imull
stc
arpl
lret
sbb
lea
inc
int
xor
out
test
fmuls
adc
sub
pop
mov
aaa
mov
lahf
rcr
sub
pushf
xor
xor
pop
cmp
adc
pop
sub
jecxz
xlat
mov
mov
ret
or
out
stos
rolb
gs
cmp
dec
js
inc
stos
mov
outsb
mov
mov
sub
or
and
mov
jmp
or
fmull
adc
cmpsb
sti
ret
adc
jle
shll
add
in
jbe
fbstp
lods
mov
scas
add
sbb
fincstp
aaa
ss
lock
rol
mov
mov
or
lds
xchg
aas
sbb
xchg
rorl
push
int
fwait
mov
and
es
call
bound
daa
repnz
sub
iret
cmpsl
in
cmpsb
or
cmp
insb
stos
div
pop
data16
or
mov
and
cmp
test
in
and
cld
mov
scas
or
sub
cmp
inc
scas
sbb
ds
jl
xchg
add
xor
pop
lret
sbb
mov
cmc
or
sahf
jl
pop
mov
pop
mov
push
cli
jp
push
movsb
cmp
sbb
inc
mov
scas
aas
pop
pop
repz
and
hlt
out
movsb
pop
je,pn
inc
add
jne
fidivrl
inc
push
call
int
outsb
mov
push
test
div
aam
sub
out
mov
jp
jnp
pop
jo
aaa
std
xchg
addr16
ja
ljmp
gs
push
mov
iret
ds
sbb
fcmovne
jbe
push
push
push
add
adc
pop
ljmp
sbb
lock
xor
loopne
push
push
dec
rcrb
or
je
xchg
in
lcall
lods
stos
inc
cmp
mov
js
jnp
aas
pop
aaa
sarl
xor
fwait
push
mov
mov
dec
cli
lahf
hlt
rolb
out
add
pop
xor
or
cmp
aas
and
clc
and
mov
xlat
stc
jno
pop
sbb
push
or
test
xchg
jae
sbb
pop
incl
lock
dec
xchg
arpl
scas
fmul
mov
push
scas
rcrl
dec
xchg
mov
xchg
pop
pop
mov
xor
movsb
sbb
in
scas
pop
popf
lds
sub
jle
xchg
xchg
xchg
cli
in
mov
in
mov
daa
sub
sub
nop
mov
std
inc
push
rcll
out
cmpsb
jne
mov
pop
loop
pop
icebp
inc
fwait
sub
nop
scas
jl
sub
movsl
and
fidivrl
mov
cltd
inc
stos
mov
in
je
fcompl
inc
lret
sbb
leave
cld
clc
mov
cltd
imul
int
in
and
push
or
rcll
aas
sub
push
and
sbb
imul
jbe
and
or
push
push
jle
sub
xchg
js
in
aaa
flds
ljmp
add
lods
jge
push
js
cwtl
lret
shr
mov
sbb
mov
js
cli
lds
mov
and
imul
inc
pushf
movsl
jbe
jae
pop
bound
dec
jb
cmpsb
xor
fwait
stos
sub
add
mov
xchg
mov
sbb
fyl2x
jne
cltd
fwait
lret
dec
mov
rorl
sbb
cmp
jnp
pop
sub
call
xor
inc
imul
dec
adc
testl
xlat
xchg
mov
and
es
bound
pop
cmp
lret
sbb
loop
jle
enter
pushf
and
cmp
and
bound
or
mov
pop
lods
leave
mov
push
xor
es
pop
std
pop
or
cwtl
pop
xor
sub
add
or
nop
loop
sbb
cltd
das
imul
stc
pop
jl
pop
test
sub
jecxz
add
pop
xchg
inc
cmp
jmp
xchg
or
xor
jle
xchg
nop
cmc
popa
mov
mov
xor
jecxz
xorl
push
xchg
sbb
pop
mov
sbb
pop
push
addr16
js
mov
or
xor
sbb
push
jne
aas
loope
xor
dec
cmp
sbb
jmp
adc
jb
sub
or
mov
mov
mov
mov
lret
sub
out
shr
mov
inc
mov
lods
adc
iret
or
jecxz
xchg
ret
das
inc
in
xor
enter
test
scas
outsl
aas
in
cmp
pop
xor
lods
jg
jl
cltd
pusha
dec
cli
inc
fcmovnbe
mov
mov
scas
pop
xor
movsl
bound
jecxz
int3
sti
jne
xlat
cmp
je
inc
jns
popf
loopne
and
mov
int3
test
sub
fimull
sbb
add
das
mov
dec
mov
push
adc
add
push
inc
imul
pop
lcall
call
outsb
fwait
cmp
and
pop
mov
jp
aad
jae
xchg
inc
dec
push
movsb
and
gs
mov
lahf
pop
loope
shll
sbbb
or
mov
sarl
iret
jl
scas
xor
daa
movsl
insb
sub
call
push
or
cmp
popf
loop
sub
lods
sbb
push
pop
jbe
fisubrl
push
stc
inc
int3
test
shl
add
arpl
leave
daa
test
push
or
cmc
shl
xchg
lret
out
inc
add
mov
test
subb
pop
int
jge
or
rcl
lds
cmpsb
sub
adc
sahf
xor
jge
shrb
jnp
cmp
jae
call
and
jge
push
shrd
mov
mov
mov
add
or
jns
cmc
loope
inc
cld
js
lods
mov
mov
imul
fstl
lcall
xchg
xchg
shlb
dec
ljmp
test
cltd
or
jo
popa
scas
clc
adcl
cltd
jg
popa
adc
mov
dec
inc
mov
dec
pop
insb
leave
cmc
pop
cltd
clc
or
jecxz
fs
addr16
mov
mov
ds
mov
scas
and
xchg
xchg
outsl
or
lea
out
rclb
fdivrs
mov
int3
xor
cs
pop
leave
jo
inc
push
xlat
dec
out
jp
jp
mov
and
mov
sbb
inc
dec
or
or
and
inc
xor
pop
es
cmp
sub
repnz
mov
mov
dec
bound
jbe
push
mov
and
loop
sbb
push
fildl
jecxz
loopne
add
ret
mov
adc
sahf
sbb
push
movsb
enter
push
imul
push
cwtl
jle
xor
fsubr
mov
adc
cmpsb
xor
inc
scas
add
push
or
push
jns
inc
lods
scas
std
outsb
mov
aam
dec
popf
xchg
call
test
lea
stc
cmpsb
mov
test
or
cmp
adc
cmpsl
cmpb
sbb
or
ds
and
sbb
cwtl
inc
dec
insb
cmp
adc
or
jp
push
mov
and
push
addl
and
shrl
js
loopne
inc
lret
inc
xor
pop
les
cs
shll
fwait
pushf
lret
mov
icebp
std
dec
loope
int3
imul
popa
test
sbb
push
test
cmp
or
repnz
or
lds
loop
je
mov
adc
sub
or
stos
and
lahf
sub
pop
cmp
lahf
xchg
or
jbe
scas
fs
out
dec
ja
mov
push
je
in
aam
xchg
cmp
gs
cli
insb
testb
cmp
shll
mov
movsb
out
aas
stc
shll
cmp
and
out
xorl
jns
xor
push
loopne
rcll
sbb
dec
push
ret
aad
ja
shll
out
fcmovnbe
popf
lds
jecxz
dec
fcomi
xlat
xchg
pop
orl
mov
in
xchg
decb
fucom
into
pop
lahf
ja
in
ljmp
pop
lods
dec
call
lods
test
jb
inc
pushl
and
test
loopne
ds
outsl
adc
xchg
lret
push
ret
out
mov
adc
mov
fstps
pop
xchg
xor
mov
push
push
scas
push
movsb
jg
mov
mov
into
movsl
xchg
mov
inc
jbe
sub
ret
mov
pop
shl
or
sub
fisubrl
jnp
stos
ret
sbb
ficoms
out
inc
dec
xor
mov
xor
pop
cmp
sbb
jmp
sar
out
lea
pop
pop
add
cmp
rcrl
mov
jnp
fnsave
repnz
inc
mov
pop
mov
sbb
sbb
dec
adc
dec
push
inc
aam
xor
mov
bound
mov
xchg
xchg
movsl
xlat
pop
sti
adc
mov
test
popf
inc
aam
xchg
jmp
bound
sub
shlb
je
in
jmp
int3
nop
jg
std
jg
outsl
xchg
pop
xor
and
sbb
ret
aaa
sub
sub
popf
mov
jmp
push
cltd
cmc
roll
inc
xor
arpl
sbb
xor
pop
mov
adc
pop
and
pop
int
mov
push
add
cmpsl
js
inc
sub
mov
call
sbb
je
aam
jno
mov
sahf
cltd
mov
aas
cmp
mov
insl
arpl
insb
orl
push
mov
mov
call
aas
cmp
mov
adc
pop
das
subl
leave
aam
mov
inc
or
arpl
aad
pop
or
sub
pop
test
mov
or
in
scas
inc
xchg
mov
ds
movsl
data16
pop
scas
jmp
xor
sub
hlt
mov
add
xchg
cli
repz
cmpsb
inc
sub
push
into
adc
dec
sub
add
rcrl
xchg
addr16
xor
pop
pop
js
mov
fcmovnu
xor
jno
loop
inc
adc
leave
pushf
call
xchg
push
or
aad
cmp
xchg
dec
push
fs
cli
ret
mov
xchg
stos
rcr
inc
mov
or
in
xorb
sbb
fdivs
pushf
inc
push
sub
adc
frndint
clc
xchg
ljmp
sbb
mov
and
push
dec
xchg
aam
das
hlt
lds
in
daa
js
and
ficomps
dec
lcall
inc
pop
jge
mov
sub
and
and
mov
jmp
inc
pusha
lods
inc
enter
xor
push
popf
cwtl
cltd
cmpsb
dec
aas
imul
inc
sbb
ficomps
dec
scas
and
cmp
sub
rcr
loop
std
jg
imul
cli
sub
dec
out
dec
xor
mov
repz
adc
push
dec
fildl
mov
mov
lods
pop
mov
jnp
xchg
xchg
sbb
test
add
data16
popa
add
jo
jle
in
dec
xor
aas
mov
cmp
addr16
sub
mov
in
sbb
jl
xchg
ja
out
ss
out
jno
mov
sub
dec
add
aam
dec
sarl
dec
push
pushf
pop
push
stc
jle
nop
add
add
sbb
aas
push
jle
cmp
pop
pop
cltd
push
les
or
dec
enter
sahf
inc
fdivrl
sbb
sub
jnp
inc
mov
arpl
push
mov
pushf
fdivl
adc
jo
cs
push
mov
xorb
xor
mov
sbb
xor
and
jl
in
popf
add
mov
push
mov
sahf
out
mov
cmp
xor
jge
jne
add
jmp
xchg
lahf
lds
push
add
cmpsl
sbb
lcall
sub
lods
mov
cmp
call
into
data16
dec
je
mov
gs
sbbb
adc
std
add
mov
xchg
lea
push
add
mov
and
sbb
cmp
call
cmp
or
movsl
das
popa
mov
scas
clc
imul
jle
xchg
stos
cmp
sbb
jns
lds
sbb
mull
mov
add
ret
iret
adc
fbld
xor
leave
mov
ret
or
inc
rcll
stos
mov
mov
and
imul
in
das
movsb
iret
imul
sub
aam
addr16
mov
push
jg
ds
ret
emms
adc
mov
add
dec
imul
cmp
popf
cmp
mov
add
push
cltd
cmpsl
push
sbb
sbb
divl
subl
pop
jbe
jg
test
test
and
push
sbb
lcall
movsl
cmp
pushf
test
shr
dec
mov
imul
jmp
dec
push
shl
inc
add
sub
push
cltd
pop
flds
inc
lods
stos
out
push
mov
mov
or
fildll
cmpsl
mov
test
in
mov
push
insl
repz
dec
rorb
out
les
les
cld
sti
scas
dec
inc
or
insb
out
mov
push
pop
add
and
aad
lea
xor
pop
jne
les
mov
sub
fs
xorl
repnz
int3
xchg
jae
mov
cmpl
adc
cld
cwtl
das
cmpsl
insb
or
sti
lea
popa
ja
insb
gs
mov
lret
and
rcl
jns
xor
cmp
cmpb
outsl
xchg
and
addr16
dec
mov
gs
aaa
sti
rolb
pop
out
adc
jmp
adc
xor
call
and
mov
sbb
orb
lret
popf
sarl
cmp
xor
add
and
fninit
inc
pop
adc
test
mov
clc
xchg
sahf
cld
cs
xchg
dec
or
sub
push
repz
adc
xchg
adc
xor
sbb
sbbl
xchg
cmp
ja
dec
stc
sti
mov
mov
repz
mov
lcall
mov
cwtl
out
addb
push
and
fstl
daa
pop
dec
bound
loop
and
jecxz,pn
or
cmpl
sbb
btrl
rcrb
push
loop
push
mov
in
mov
adc
jnp
jp
popa
jp
subb
and
jg
sub
push
push
xchg
mov
call
pop
data16
call
into
add
adc
insb
sbb
mov
sub
jns
shl
push
xchg
hlt
in
imul
push
mov
fwait
add
pop
repnz
mov
loop
lock
mov
aaa
mov
mov
and
out
or
pusha
cmc
push
or
cmp
icebp
jno
scas
insl
mov
movsb
cmp
xor
push
xchg
add
jnp
flds
fisttps
shlb
push
fdivr
mov
sub
pop
inc
subps
push
mov
jecxz
movsb
ja
leave
fs
adc
jb
xchg
sub
test
push
lea
dec
inc
jp
rclb
popf
stos
adc
fistpll
push
int
inc
pop
ss
out
arpl
setnp
sti
fbld
jb
dec
icebp
mov
push
arpl
lahf
jmp
or
pop
and
dec
push
add
cmp
into
inc
push
movsl
sarl
mov
dec
outsb
pop
ss
bound
in
and
or
xor
mov
ds
dec
ja
inc
inc
push
mov
or
nop
and
test
and
daa
add
dec
movsb
iret
mov
iret
mov
test
mov
cmp
inc
mov
dec
or
mull
test
stos
push
pop
push
aad
das
call
lret
paddd
push
adcl
xchg
outsb
dec
add
sarb
sbb
or
lret
dec
aas
mov
pop
fisubrl
push
jnp
call
jae
pop
cld
jno
and
jne
les
dec
es
ss
jl
inc
stc
inc
push
jb
pop
scas
push
push
cmpsb
testl
push
and
shl
mov
sti
mov
pop
mov
add
fstpl
pop
mov
dec
mov
leave
cmp
mov
lds
flds
pop
leave
jmp
in
jmp
psubsb
adc
jnp
jg
dec
inc
or
lret
pop
outsl
inc
subl
jne
dec
testl
out
xchg
mov
push
inc
inc
or
stos
jl
imul
ljmp
cltd
jl
scas
dec
sbb
mov
rcrb
adc
ficoms
xchg
push
mov
push
or
enter
int
rcrl
mov
je
sbb
dec
xchg
push
in
inc
pop
in
mov
xchg
sub
dec
push
popf
cmp
jns
stos
insb
sub
jo
imul
lret
add
jo
push
ret
fs
shlb
loope
sub
dec
dec
nop
out
out
popf
jns
push
pop
scas
cmpsb
or
out
daa
aad
test
aaa
in
xchg
xchg
or
out
xchg
push
filds
not
into
mov
mov
mov
and
and
and
push
stos
sarl
add
xchg
ja
push
imul
mov
ss
push
sub
jns
loop
mov
pop
inc
cwtl
aaa
in
icebp
or
dec
dec
subl
sub
add
xchg
jl
mov
xor
jno
mov
push
sbb
pop
sti
pop
add
jns
mov
xor
mov
into
mov
cmc
jne
push
xor
push
daa
xchg
cwtl
mov
je
inc
adcl
pop
xor
int3
add
repz
mov
popf
sbb
scas
jp
iret
in
leave
bound
div
mov
dec
dec
add
mov
test
mov
out
fdivrs
mov
cmp
jnp
loop
add
fdivs
adc
or
out
loop
notl
mov
or
hlt
outsl
cmp
popa
test
push
ljmp
aaa
pop
dec
mov
aaa
fsubrl
pop
pcmpeqb
mov
fsubr
bound
cmp
adcb
ljmp
outsl
xor
data16
outsb
dec
std
sbb
jnp
aaa
sub
mov
int3
sarb
and
push
je
xorb
xor
stos
out
movsb
sbb
sbb
pusha
xchg
dec
push
aas
add
cli
pop
xor
imul
insb
sahf
decl
rorl
mov
imul
insl
mov
cmp
in
add
js
mov
cmp
fsubrs
imul
pop
inc
stc
int
dec
xor
lret
inc
dec
addr16
out
pop
mov
jns
mov
sahf
cmp
adc
loop
sub
push
ror
mov
xchg
cli
ret
inc
jmp
iret
and
outsb
in
scas
cmpsl
jge
adc
xchg
incb
and
icebp
in
mov
jo,pt
cs
inc
push
inc
adc
xor
shlb
fnop
adc
add
pop
mov
mov
sbb
mov
popf
pop
ja
in
sub
pop
cltd
sbb
add
je
mov
mov
fistpll
or
or
aas
sub
jae
mov
lahf
sahf
xchg
js
pop
mov
lret
stc
pop
push
rolb
adcb
add
leave
ret
outsb
cmp
stos
loop
jns
push
mov
mov
add
je
cs
mov
mov
inc
push
fisttpl
mov
popa
adc
dec
push
faddl
popf
inc
movsl
in
mov
test
mov
inc
sub
test
cmp
aaa
outsl
imul
sub
adc
out
sub
rorb
cmpsl
sub
xor
xor
in
pop
in
sub
test
fisttpll
jne
xchg
jne
sub
popa
push
push
ret
inc
sbb
pop
cs
and
xlat
lods
mov
data16
mov
lods
inc
pushf
sub
rclb
loope
out
dec
xor
outsb
ljmp
into
jnp
in
jo
lock
daa
mov
jp
jecxz
cltd
jo
in
roll
test
add
test
mov
sub
mov
dec
mov
mov
call
push
imul
pop
lds
or
in
cmp
pop
fistpll
and
sub
jo
into
sub
fistps
outsl
lret
sub
cmpsb
xor
mov
les
inc
lods
mov
into
lea
mov
loopne
andl
ds
or
hlt
jg
mov
and
xchg
in
dec
inc
adc
in
std
push
fdivrp
push
push
push
out
sub
xchg
mov
sub
cld
cs
cmpsb
jne
or
add
xlat
inc
push
sbb
sub
mov
mov
cmc
or
cli
shl
jp
stos
aad
into
inc
test
fstps
cmp
push
mov
out
dec
add
test
lock
jbe
jns
call
xchg
lock
push
cmc
fsubs
jge
das
xchg
push
cmp
rolb
int3
ljmp
js
adc
int
xchg
stos
pop
xchg
gs
mov
sbb
sbb
lret
icebp
add
mov
mov
xor
add
push
orb
cli
stos
pusha
out
xor
inc
sub
xor
jo
mov
aad
hlt
aaa
add
addr16
mov
add
lahf
ss
sub
inc
fwait
leave
inc
cmp
jne
sar
mov
cmp
lahf
xchg
lret
fimull
cmpsl
in
out
pop
fwait
cmpsb
aam
cmc
adc
imull
dec
movsl
ds
or
lahf
rcr
lcall
sarl
loopne
cmp
add
les
adc
jecxz
jge
inc
xchg
in
fdivs
dec
xchg
call
adc
lods
and
push
ret
addr16
addl
movsb
hlt
scas
out
loopne
cmp
nop
repnz
fildll
xlat
test
lahf
daa
and
dec
test
xchg
mov
rcrb
inc
cmp
jb
int3
rorb
xchg
lods
fists
mov
mov
aam
add
push
in
mov
rclb
push
jnp
lea
iret
sbb
xlat
js
and
shll
mov
or
repz
xchg
pop
and
fs
movsb
inc
sbb
dec
loop
pusha
rcrl
popa
popa
pop
and
sub
inc
int3
mov
push
or
cmc
sub
push
mov
ds
mov
mov
test
xor
cmp
push
xlat
jmp
dec
push
ficoml
xchg
ret
mov
fidivrs
mov
call
xchg
gs
fildll
push
mov
cmp
inc
stos
insl
xchg
icebp
xor
sbb
repz
push
andps
add
inc
stos
pushf
mov
mov
ss
das
xor
xor
outsb
adc
jnp
adc
sub
jl
cmp
pop
daa
sbb
inc
push
cmp
ss
mov
and
rcrb
jge
les
imul
mov
cmp
vmovdqa
mov
popa
push
jnp
and
push
cmp
sbb
push
roll
stos
test
cmp
popa
jne
xchg
push
les
test
jmp
push
orb
scas
jno
sbb
roll
ja
cmp
ljmp
mov
mov
sub
es
cmpsl
add
cs
mov
push
aam
mov
pop
fisubrs
loopne
dec
jmp
rorb
dec
imull
dec
fsub
enter
cmp
inc
push
lds
and
pop
lcall
lock
mov
sarb
int3
push
mov
push
scas
or
jnp
pop
mov
pop
lahf
push
sbb
aas
int
out
imul
xchg
fdiv
ja
pushf
fisubrs
adc
jnp
jecxz
lods
rorl
add
mov
pushf
decb
cmp
das
add
push
sahf
test
scas
cwtl
jb
sar
jno
subb
mov
idivl
jne
sub
fldl
add
stc
push
or
mov
pusha
jno
push
test
mov
pop
loop
inc
in
or
test
rcrl
sahf
and
lock
jl
sbb
cmpsl
mov
repz
stos
dec
add
inc
xor
es
lret
pop
push
faddl
pop
ror
xchg
jne
out
arpl
scas
shlb
movsb
rcrb
in
pusha
add
out
imul
inc
fmul
sub
mov
jbe
inc
jecxz
aad
icebp
xlat
mov
and
push
cwtl
fucom
jne
fidivs
into
and
mov
ds
sub
pusha
test
push
mov
roll
mov
inc
negb
daa
inc
jbe
fisttpll
jnp
push
mov
lods
pop
pop
popf
xor
mov
test
inc
cmp
lcall
jle
sbb
orb
inc
cltd
pop
je
shl
loop
inc
cltd
mov
xchg
fildll
mov
xlat
loope
xor
inc
icebp
mov
into
xor
add
mov
xlat
iret
sbb
add
xchg
lods
dec
xorl
int
and
pop
cmp
ret
cmp
dec
mov
ds
mov
insl
mov
ss
ja
add
repnz
mov
shll
jo
ret
call
fsubrs
adc
or
mov
roll
imul
adc
pop
lcall
sbb
jne
push
mov
mov
pop
add
addl
and
dec
in
pop
xchg
sbb
sti
lahf
test
aas
or
es
call
push
cmp
daa
add
out
sub
mov
es
mov
jno
fimuls
pop
mov
sbb
sahf
lock
mov
gs
sbb
imul
cmc
lahf
arpl
jl
mov
sub
nop
sbb
lahf
mov
pop
jnp
sar
lcall
sub
adc
dec
jb
jmp
out
in
sub
jle
adc
je
inc
jp
jnp
cmp
xchg
pop
arpl
xor
fistpl
test
repnz
cmp
jo
je
or
cs
loopne
adc
push
lods
sub
inc
sub
enter
push
cmp
push
jl,pt
lret
jle
out
in
aad
fwait
ret
xchg
lea
sarl
xor
mov
mov
inc
repz
pop
jb
popa
sbb
clc
mov
push
and
jo
pop
loop
and
inc
inc
or
mov
int3
scas
stc
mov
sbb
inc
andnps
out
jae
xlat
add
aas
in
sub
inc
xor
aad
shrb
arpl
and
mov
xchg
xchg
sub
or
mov
jmp
sub
inc
pushf
inc
inc
scas
enter
dec
push
es
sbb
fcoms
add
cmc
push
in
inc
shrl
push
test
jne
movsb
mov
push
mov
fimull
mov
movsb
int
call
dec
jne
aam
and
mov
out
sub
and
into
jmp
jmp
and
fnstcw
mov
cmpsb
daa
sbb
push
movb
and
dec
inc
outsb
xchg
outsb
sub
dec
xorl
inc
sbb
out
dec
push
dec
popa
dec
leave
daa
movsl
add
mov
aaa
in
fsubrl
push
sub
and
std
adc
or
fwait
jno
mov
mov
sbb
jno
popf
mov
dec
mov
push
and
adc
int3
sbb
xchg
cmp
les
dec
test
xchg
mov
push
add
mov
mov
jle
mov
pop
call
andb
xor
jge
lea
test
fists
aam
adcb
mov
and
hlt
std
pop
sub
add
jne
add
mov
mov
pop
or
add
rcrl
test
xchg
mov
xchg
imul
mov
lea
cmc
ds
in
out
sbb
jp
mov
fcompl
stc
imul
movsb
fidivs
cmp
pop
fildll
daa
cltd
mov
and
adc
orb
xlat
rolb
mov
lds
sbb
shr
lahf
aas
sbb
insb
sbb
inc
inc
jbe
repnz
rep
jb
push
mov
sti
nop
sar
add
cmpsb
mov
data16
sbb
add
jg
xor
scas
pop
lds
inc
push
jle
mov
movsl
jbe
nop
sub
xchg
xor
out
fcoms
dec
jmp
sub
and
mov
clc
jle
jmp
push
and
cmp
xorb
pop
mov
pop
add
sbb
ljmp
test
ds
cmpsl
jne
mov
lods
leave
mov
ja
mov
fcompl
lock
dec
xchg
mov
divl
leave
out
arpl
ljmp
sub
gs
lods
lret
mov
mov
push
fiaddl
leave
push
or
adc
cmp
sbb
cltd
es
cmpsl
divl
cltd
ljmp
shr
addr16
mov
mov
xlat
pop
push
lahf
push
adc
outsl
add
and
addr16
mov
jns
sub
loope
sub
in
add
inc
out
in
adc
xchg
or
mov
xor
jns
iret
out
out
dec
test
jle
pushf
sub
aam
data16
test
sub
aad
insb
push
cmp
xor
mov
leave
dec
cmp
icebp
fnstenv
cmc
jp
fsubs
outsb
inc
mov
cltd
mov
jp
sub
push
jmp
add
push
xor
pop
pushf
scas
mov
jle
adc
xchg
adc
or
mov
popa
inc
test
loopne
orb
adc
pushf
pop
mov
add
pop
mov
lahf
in
lcall
loopne
pop
add
sahf
decb
jne
xchg
sahf
insl
insb
jp
aad
mov
adc
push
sbb
das
das
lods
pop
out
lock
test
int
jl
push
pop
pusha
rcll
shll
rclb
pop
mov
adc
jle
inc
fwait
dec
pop
lahf
xor
jle
mov
jne
ljmp
jnp
test
dec
fldcw
fcmovnb
daa
cwtl
in
loopne
outsb
repz
jo
xor
scas
mov
and
jns
ficoml
add
push
shlb
orb
jp
lea
inc
call
sarb
inc
cmp
cmp
insl
ret
inc
jne
push
xchg
in
push
mov
leave
stos
stos
inc
or
enter
mov
mov
in
arpl
fstps
lock
cmp
jno
sbb
dec
loop
inc
mov
cmp
scas
or
mov
test
inc
jmp
sahf
leave
or
fisttps
mov
adc
and
std
nop
adc
call
imul
dec
pop
test
pop
and
outsl
mov
mull
out
movsb
cmp
data16
sti
pop
imul
xor
loope
or
scas
sbb
mov
inc
loop
xchg
cld
sbb
mov
xor
rcrb
lods
sbb
movsb
inc
scas
shl
inc
lret
daa
imul
inc
insl
adc
lcall
lds
lock
in
inc
int3
mov
sti
out
mov
leave
or
movsl
mov
daa
int3
lret
sub
decl
pcmpeqb
dec
sbb
call
outsl
inc
jns
shll
lods
stos
add
pusha
push
aad
inc
push
std
jecxz
push
fadds
mov
lret
out
or
fisubl
sbb
sub
sbb
daa
test
dec
sahf
add
mov
mov
sbb
scas
push
sub
xchg
push
sub
cwtl
jmp
int3
stc
into
mov
push
xchg
ljmp
andl
andl
adc
jo
adc
mov
dec
mov
mov
xchg
ja
into
shr
mov
mov
pop
icebp
mov
andl
in
add
repz
jbe
push
sub
fdivrl
xor
fdiv
icebp
pop
iret
outsb
iret
jnp
adc
pop
pop
mov
gs
arpl
sbb
sbb
sbb
pop
imul
pop
push
cmp
jecxz
dec
or
fistpll
fisttps
les
fdivs
jmp
iret
outsb
or
push
test
dec
inc
loope
xchg
out
fnstenv
ds
sub
fisubrs
sbb
ja
shll
dec
sbb
jb
ljmp
adcl
les
pop
shll
enter
pop
add
pop
clc
enter
fisubrl
ss
hlt
loopne
sar
xor
int
mov
or
ror
jecxz
je
iret
shll
stc
bound
mov
sub
outsl
lods
cltd
push
les
mulb
xor
and
movsl
stos
pop
pop
and
sub
in
popa
outsl
add
push
js
xor
lods
cmp
test
outsb
sahf
jmp
pop
popf
imul
xchg
dec
aad
ss
mov
jl
adc
mov
xor
roll
push
cmp
sub
pop
loope
fcompl
pop
mov
lock
fstps
inc
leave
repnz
push
push
mov
je
mov
in
xor
in
mov
gs
loopew
xlat
xor
mov
adc
push
mov
adc
xor
sbb
jg
sbb
testb
jns
mov
lret
jle
cmc
sub
jl
dec
imul
push
add
push
arpl
mov
orb
adc
mov
das
push
pop
testl
fisubrs
lea
cld
imul
push
sub
into
lods
loopne
jb
inc
fsub
mov
outsb
aad
fidivl
mov
xchg
add
mov
cld
cmp
shll
ret
iret
xlat
ss
ds
jg
lods
cld
addb
sub
movsb
lea
arpl
bound
ffree
or
iret
or
call
push
mov
mov
mov
and
push
pop
and
popa
pop
sub
xchg
or
push
adc
jmp
rol
pop
sbb
popf
inc
cvttps2pi
negb
jne
outsl
or
popf
xor
cltd
and
push
add
insb
loop
out
hlt
jg
push
inc
push
jp
pop
testl
sbb
or
jae
lcall
mov
lret
in
out
mov
vpshlq
shlb
sub
pop
sbb
mov
xchg
inc
cmc
inc
lods
js
mul
jbe
in
sbb
stc
imul
pop
push
into
lods
jp
cli
emms
loope
push
xor
fmull
mov
outsb
cmc
cli
push
pop
xchg
dec
negb
call
sti
addr16
and
xor
jno
mov
jmp
call
in
lock
pop
xor
mov
test
ret
inc
mov
or
mov
pop
repz
call
jmp
lea
cmp
cmp
or
jl
test
pop
mov
mov
mov
mov
repz
sbb
or
scas
test
mov
adc
lds
adc
dec
iret
sbb
adc
je
xchg
or
mov
mov
mov
stos
sbb
push
je
mov
adc
mov
dec
arpl
ret
call
mov
daa
fiaddl
mov
insl
out
add
and
cmpl
rolb
mov
daa
out
mov
mov
mov
ret
stc
fidivl
fs
xor
push
push
or
shll
xor
or
lods
imull
push
adc
je
stos
popf
xchg
push
mov
mov
inc
add
inc
sub
in
sub
jno
hlt
rol
lods
adc
mov
ret
or
rolb
push
popf
jecxz
ljmp
push
mov
pop
lcall
das
out
xor
movsb
lods
shld
or
sti
ja
and
pop
aam
xor
lcall
les
jae
push
adc
nopl
ret
pusha
cmpsl
sbb
out
jmp
lock
aad
push
cmp
jae
sbb
cmp
jmp
fdivs
inc
adc
mov
mov
cmp
dec
adc
aaa
add
push
iret
icebp
mov
out
and
xor
jp
popl
mov
sub
fsubrs
add
jo
or
xor
adc
or
and
test
dec
sub
adc
xchg
mov
test
cmp
fwait
imul
gs
and
jb
fcompl
pop
lds
leave
stc
jbe
mov
lods
add
rclb
push
es
dec
jecxz
test
scas
mov
add
mov
push
pushf
pop
js
les
lds
push
into
push
mov
and
adc
je
push
fmuls
leave
mov
and
push
aad
incb
mov
rclb
mov
pop
rcl
pusha
jl
jne
test
cmp
aaa
push
mov
ljmp
adc
cmp
cmp
cmp
jne
lret
jg
dec
mov
loop
jns
pop
jne
jno
or
sub
mov
mov
sbb
jl
and
pop
xor
cmp
outsl
fnsave
mov
cmp
ljmp
rorb
insl
stc
pop
ss
cwtl
fcmovne
out
pop
mov
push
addr16
fucom
dec
sbb
mov
repz
ljmp
fidivl
dec
cmpsb
das
ljmp
adc
mov
js
xor
push
gs
idiv
ret
or
out
fwait
popf
cmpsl
mov
sahf
inc
xlat
mov
stc
in
outsl
push
mov
adc
push
sbb
inc
pusha
ret
and
pop
jo
stos
adc
cmc
pop
out
jnp
dec
adc
test
cmc
in
sbb
int3
in
cmc
push
inc
dec
or
dec
jno
shlb
nop
mov
divb
or
popf
or
ds
rol
test
sbb
out
enter
sub
sbb
push
mov
outsb
popf
idivl
xorb
nop
fiadds
pop
jnp
lds
fcoms
lcall
lods
jno
sbbl
sub
pushf
fldt
or
mov
imul
cli
insb
test
icebp
in
cmp
push
pop
fadds
cmp
or
sub
fstl
and
in
sub
inc
loope
adcb
aas
xchg
cli
ss
push
mov
out
mov
and
push
inc
pop
xlat
add
push
and
jne
repz
cmp
pop
sub
dec
mov
mov
repnz
mov
jno
mov
fs
ret
insl
cmc
or
jp
addb
adc
pop
aaa
lcall
bound
lock
addl
nop
dec
setp
cmp
xchg
bound
lcall
mul
mov
xchg
and
aad
lds
adc
aam
sarl
cmp
push
add
cmp
pop
out
clc
ret
std
xchg
ficoms
mov
xor
not
pop
rcr
dec
leave
das
sbb
popa
xor
add
mov
xchg
hlt
lret
cltd
cmp
test
cmp
mov
jns
mov
pushw
cmp
cpuid
mov
aaa
inc
xchg
and
push
sub
pop
lret
iret
orl
lods
mov
mov
jge
shrl
mov
mov
fcmovb
mov
cmpsl
mov
dec
ja
cmc
test
bound
jecxz
stos
movsb
and
aam
lods
int
cmpsb
cmp
sub
cmc
out
push
push
decl
push
popl
and
inc
xor
push
pop
gs
rolb
xchg
sarb
movsl
inc
jns
frstor
iret
ret
jecxz
mulb
sub
add
inc
je
ds
aaa
pop
enter
pop
in
or
les
mov
fs
stos
idivl
adcb
mov
jl
rolb
arpl
cwtl
mov
dec
or
repz
addr16
notl
addr16
mov
push
mov
les
mov
sub
lcall
sbb
xchg
and
aaa
adc
cs
xlat
test
dec
sbb
jl
push
and
out
test
sub
cmp
shl
fstl
add
dec
cmp
aad
push
hlt
mov
fldcw
addb
lret
mov
dec
in
jo
das
mov
pop
pop
push
push
ds
rclb
cmp
push
mov
loop
jne
add
mov
sarl
sarl
pop
push
push
xchg
sbb
inc
jle
xchg
push
jae
popa
xorl
jne
enter
or
dec
jge
lods
stos
dec
lock
ljmp
jp
xor
int
sub
mov
int
inc
xorb
inc
cmp
mov
dec
cmp
outsb
sbb
shlb
ss
aaa
push
dec
scas
xchg
xchg
lcall
xchg
aad
push
test
insl
shll
push
or
arpl
jmp
mov
sti
insl
test
add
cld
inc
push
push
rcrb
insl
jno
push
fs
pop
pusha
jbe
pusha
jecxz
jbe
sbbb
and
rcrl
popf
lds
leave
fnsave
mov
lea
dec
pop
xchg
ret
repnz
dec
adc
mov
mov
jmp
or
daa
mov
icebp
insl
inc
dec
dec
sub
push
call
insb
int3
xor
xor
rcrb
mov
mov
popf
mull
fcoms
pop
ds
jp
aad
test
and
push
faddl
pop
ja
sarl
cmp
dec
aaa
bound
inc
add
dec
push
jg
mov
xchg
lock
pusha
sub
inc
xchg
jns
mov
push
icebp
fstl
cli
pusha
sub
pop
push
sub
iret
in
rcl
movsb
inc
mov
add
mov
push
sbb
aad
popa
ret
jae
mov
arpl
cwtl
out
out
das
pop
add
push
insb
jbe
add
cmpsl
sub
test
sbb
inc
test
stc
int3
add
mov
pop
stos
std
cmp
cmc
add
and
mov
out
out
pop
scas
test
mov
sbb
dec
cld
xchg
xlat
mov
dec
push
cmp
int3
stc
scas
hlt
adc
adc
aam
sbb
pusha
pop
fsub
loopne
aad
loope
add
lcall
xlat
mov
jmp
adc
jp
lcall
push
sbb
pusha
jle
inc
push
dec
fstpt
ljmp
les
daa
adcl
int3
lea
push
popf
xchg
mov
lahf
cmpb
sub
push
mov
rorb
jns
pusha
xchg
lods
add
mov
inc
mov
nop
test
adc
ret
and
mov
mov
loop
and
sub
outsl
sahf
add
dec
in
stos
jae
fnsave
push
test
out
ss
sub
mov
mov
dec
xor
lcall
lds
mov
push
inc
and
push
pop
mov
inc
push
jb
xchg
push
decl
lds
into
inc
inc
es
icebp
push
jmp
fsubrs
sti
pop
cmp
bound
lock
imul
rclb
dec
aaa
add
call
scas
out
jmp
cmp
aad
xor
loopne
fsubrl
jno
int3
xchg
jb
bound
es
shl
xadd
mov
sub
mov
test
cs
fsubrl
lcall
fs
push
xorb
and
aad
lret
gs
inc
test
cmp
movl
ret
jl
insl
dec
rcrb
hlt
mov
sbb
xchg
test
mov
fisubrl
dec
pop
push
test
xchg
jp
dec
pop
incl
test
dec
mov
mov
sbb
insb
mov
pop
push
rcpps
fs
sub
loopne
fbld
ret
push
mov
test
inc
insb
add
cld
dec
aad
cmc
inc
xlat
dec
jp
cltd
movsl
dec
movsb
out
fidivrl
dec
jl
outsb
insb
adc
pop
jg
fisubrs
pop
test
lods
push
sbbl
sub
pop
xchg
push
movsl
daa
pop
mov
cs
xor
xchg
and
mov
call
mov
pop
inc
sbb
inc
lcall
test
loop
sub
cli
lahf
add
add
add
dec
adc
test
push
pop
and
sbb
rcll
dec
lcall
clc
incb
xchg
sahf
lea
jns
popa
out
icebp
repz
das
sbb
call
jge
stc
into
add
cmc
test
loopne
test
lret
ret
gs
or
iret
jl
inc
js
pop
jnp
das
pop
push
mov
xor
dec
push
or
sbb
arpl
mov
fwait
jnp
mov
int3
or
fwait
mov
cmp
pushf
inc
adc
sahf
imul
out
sbb
dec
fwait
or
popa
scas
pop
popf
sub
mov
fmulp
cmpsl
fbld
cmp
mov
mov
outsl
xchg
push
xor
xchg
cmp
pop
pop
fdivr
or
fsubs
js
lods
cmovb
cmpl
mov
pop
cmc
sbbb
movsb
daa
dec
mov
lods
addr16
mov
iret
cs
das
cwtl
out
xor
and
or
xor
les
sub
mov
xchg
jo
repnz
mov
mov
jo
enter
pop
cmc
jle
stos
lock
add
or
pop
pop
jb
sti
call
sub
xchg
add
jmp
lea
outsb
cmp
inc
jbe
dec
rcll
add
jl
scas
pop
pushf
adc
rorl
push
test
lahf
ret
popf
mov
stc
imul
shlb
test
shlb
cmp
out
or
aam
jb
sbb
scas
jl
xchg
cmp
test
jo
mov
pusha
arpl
jecxz
testb
cmpsb
fsubl
cmp
or
daa
add
fnsave
out
jl
int3
cmp
adc
mov
mov
pop
mov
lock
mov
pop
jg
nop
inc
sahf
dec
sbb
inc
adc
pop
movsb
pushf
sbb
mov
cwtl
movsb
test
xchg
mov
fsubrl
dec
out
lcallw
xchg
and
sbb
xchg
dec
sub
out
daa
cmp
iret
xchg
scas
shrl
pop
add
push
xor
ljmp
mov
sahf
add
xor
ljmp
call
fcoml
pop
popa
nop
push
and
xor
or
xor
idivb
cwtl
pushf
add
jmp
rdtsc
or
sar
addl
outsb
or
daa
dec
out
pop
sub
fs
in
or
sub
lds
mov
shrl
fwait
pop
movb
in
pop
das
lock
sbb
or
push
xor
jecxz
xor
push
icebp
adc
in
into
int3
icebp
or
xor
scas
mov
mov
test
clc
or
imul
jp
xorl
xchg
outsl
mov
mov
mov
push
add
sbb
xor
mov
cs
jbe
jne
and
push
pop
shl
pop
inc
xor
popf
cwtl
push
and
dec
mov
in
and
mov
cld
sub
dec
aas
mov
and
pushf
push
pushf
mov
ret
cs
dec
bound
pop
pop
pushf
mov
mov
add
pop
inc
cmp
dec
loop
pop
push
stc
or
mov
sbb
sahf
xlat
sti
fwait
add
cld
sbb
jae
popa
jg
adc
pop
jg
inc
push
push
je
mov
fstps
jg
lds
mov
or
sub
imul
pushf
scas
les
mov
adc
or
cmp
cld
cmc
xlat
add
js
push
or
xchg
out
imul
and
mov
cmp
out
leave
leave
andb
aam
push
nop
adc
div
push
aam
out
sbb
mov
or
mov
sub
arpl
cwtl
xchg
sub
fcmovnb
es
mov
xchg
pop
push
fwait
sub
loop
add
push
mov
aaa
jle
adc
hlt
jno
xor
sar
cmp
xchg
scas
cli
sbb
jae
pop
packsswb
aam
int
fcomps
std
xor
pop
test
int3
add
sbb
mov
xor
lea
cmpsb
lret
shrl
inc
xchg
or
mov
repz
pop
mov
aas
cld
enter
adc
popf
push
mov
dec
and
xchg
fld1
ficoml
and
sbb
out
stc
mov
sub
shll
or
add
mov
push
in
jecxz
in
prefetch
ret
push
cltd
mov
ljmp
scas
jp
adc
insb
xchg
add
jle
inc
cmp
test
push
shrl
scas
inc
in
and
cltd
cld
loope
xor
pushf
insb
insl
or
movsl
ds
pop
add
nop
aaa
jbe
xor
enter
and
inc
lods
sbb
mov
orb
add
push
sti
sbb
sti
cld
sbb
push
sbb
testl
gs
mov
mov
aad
lret
repnz
push
rcr
arpl
mov
les
das
dec
insb
jmp
add
lret
mov
mov
call
jg
jmp
lods
or
xchg
mov
mov
xchg
cmpl
adc
popa
sub
addb
sahf
sub
stc
mov
and
std
test
cmp
test
mov
sub
xchg
mov
icebp
mov
pop
pop
dec
std
xor
ds
fwait
sti
insb
xor
dec
sti
aam
pop
fstl
or
mov
test
add
fisubrl
fs
pop
int3
cmp
loope
and
test
adc
rorb
aas
rol
arpl
adc
xor
shl
arpl
rep
mov
nop
and
popf
push
ljmp
jns
dec
fistl
adc
sub
negb
pop
push
sub
test
sar
push
cs
push
jne
mov
cmp
and
fldt
ja
ss
aaa
xchg
out
pop
jb
filds
or
fdiv
sub
add
xchg
sub
inc
cmc
cmp
out
rorb
fwait
xchg
gs
scas
mov
and
ficoml
push
push
cmpsl
subb
imul
movsl
cmpsb
jl
scas
or
gs
mov
aas
imul
dec
out
les
nop
mov
add
push
call
popa
xor
mov
ds
jmp
bsr
shlb
cmp
or
xchg
leave
mov
dec
mov
shl
mov
sub
or
add
xchg
mov
or
push
mov
xchg
cmp
unpckhps
jo
f2xm1
movl
sbb
out
mov
xlat
iret
mov
push
inc
flds
xchg
cmp
push
and
out
mov
inc
cmp
and
push
aas
mov
imul
test
add
je
xchg
xor
imul
sub
stc
xchg
jmp
ds
fnsave
adc
rcrl
into
xor
xchg
popa
gs
adc
fs
xchg
insb
popf
push
mov
add
jmp
adc
adc
addl
add
and
jae
jmp
cmp
sub
jmp
sahf
clc
or
add
xor
xor
xchg
push
in
xchg
dec
movsb
stos
sub
pop
int3
jnp
dec
gs
jnp
mov
sahf
test
pushf
add
xchg
push
add
popa
xor
ss
fidivrs
and
push
and
mov
loope
push
add
inc
rcll
mov
scas
jo
sti
push
rclb
out
add
popf
xor
jb
jl
xor
out
dec
rorb
pop
cmp
pop
lea
dec
shrb
insl
jbe
mov
fldcw
ret
out
jg
cs
hlt
pop
jle
fs
xor
adc
ljmp
stc
das
cmp
aaa
outsb
sbb
adc
cwtl
add
shr
fiaddl
add
sahf
adc
jne
mov
cld
inc
cld
clc
shlb
or
movl
inc
mov
out
or
lods
mov
lods
mov
sahf
dec
xor
lcall
imulb
sbb
dec
dec
shlb
mov
xor
repz
jb
mov
daa
inc
cwtl
jne
sub
dec
mov
xchg
int3
mov
test
cmc
fwait
adc
test
mov
stc
or
xchg
or
and
sbb
mov
rep
mov
fmuls
sarb
movsb
icebp
dec
adc
push
xchg
xchg
dec
jmp
andl
xchg
push
mov
jl
fwait
cmp
mov
ficoml
movsl
in
pop
nop
push
adc
fucomp
scas
sub
pop
lret
loopne
aas
sub
incb
shlb
in
orl
mov
popa
in
sub
cmp
ds
test
mov
loope
mov
sub
add
jns
stos
jp
jl
xchg
mov
outsb
jecxz
cmp
dec
scas
cmp
inc
adc
sub
fmuls
stc
jl
mov
hlt
aas
popf
dec
leave
mov
push
lcall
xchg
and
cmp
lahf
sarb
adc
push
push
leave
jae
test
xor
xor
inc
and
mov
xor
jb
add
mov
jns
daa
push
out
mov
and
loope
add
scas
mov
jmp
insl
adc
adc
nop
push
lcall
adc
dec
cld
sub
mov
sbb
mov
decb
js
and
mov
xchg
popa
lcall
cmp
cmp
push
mov
add
and
xor
push
pop
cmovp
sub
pop
movsb
mov
inc
shrb
cld
lds
call
loopne
push
outsl
out
mov
and
push
mov
lret
xchg
mov
in
daa
cmpsl
jge
cltd
incl
cmp
push
push
xchg
mov
ret
push
jb
stos
pop
pop
das
mov
and
fisubl
add
pop
jg
lods
in
call
andb
xor
out
mov
mov
out
dec
lock
sbb
in
dec
lret
imul
mov
out
add
mov
call
out
add
xchg
mov
test
adc
pop
sbb
add
pextrw
sub
sub
imul
stos
dec
in
add
jg
iret
or
adc
push
rcrb
sub
or
pop
loope
std
sahf
in
ja
arpl
insl
sahf
xchg
cld
push
cmp
adc
js
aaa
sbb
xor
das
in
outsl
fildl
sub
rcl
aam
and
mov
jns
mov
insb
arpl
pop
scas
adc
imul
adc
inc
jle
sbb
mov
jmp
lock
in
cwtl
addl
pop
lcall
ds
push
je
or
leave
and
or
daa
xchg
adc
test
std
mov
jge
aas
pop
into
mov
scas
je
jnp
mov
insb
mov
rcrb
mov
xchg
scas
fsubrs
pop
fildll
dec
stos
ficoms
and
add
push
iret
sub
mov
sbb
arpl
pop
scas
push
sub
daa
fsubrs
gs
pusha
and
pop
lea
stos
jbe
mov
fsubl
cmpsb
add
xor
arpl
xor
int
jno
dec
jb
scas
pop
addr16
push
aad
shrb
mov
popf
xor
out
testb
sarb
lock
cmpl
pop
jge
inc
mov
in
sahf
add
in
repz
hlt
sub
mov
cmp
dec
or
mov
push
xchg
cld
in
pop
inc
pushf
lock
in
cli
ss
xorl
nop
fcom
inc
adcl
dec
or
pop
in
rcrl
lea
and
mov
cli
adc
sti
push
jo
ja
ss
jge
jno
fdivl
lock
or
gs
mov
cmp
push
stc
inc
pushf
notb
pop
xlat
mov
shlb
syscall
cmc
pop
test
hlt
pop
adc
add
mov
inc
outsb
mov
jo
jbe
pop
mov
call
int
adc
mov
clc
sahf
sbb
shrl
sahf
add
sbb
xchg
sbb
push
xchg
addl
shll
add
les
xor
pop
call
fcoms
mov
or
fistps
pop
jp
sub
or
inc
mov
call
adc
jo
or
insb
andl
inc
loop
andb
push
imul
popf
inc
cmp
and
andb
or
pop
call
mov
sbb
jns
add
cmc
or
add
sahf
add
movsb
pop
and
or
xor
mov
cmp
fisttpll
adc
dec
mov
ss
add
addb
jb
fists
lods
stc
lcall
jg
jns
push
adc
lds
xchg
push
cli
call
and
push
mov
mov
cwtl
lret
shll
cmp
mov
and
cmpxchg
inc
sahf
pandn
popf
loopne
push
add
sarb
pop
sub
test
xchg
std
sub
mov
jae
push
jle
push
lods
js
aas
xchg
sbb
movsb
mov
test
mov
gs
out
mov
sbb
adc
sub
and
scas
subl
popa
sub
lret
pop
decl
xor
xchg
pop
pop
out
push
or
cld
xor
xchg
aad
or
in
sbb
lock
je
sti
or
adc
imul
adc
jmp
jp
stos
mov
pop
ja
push
jle
xchg
stos
sub
loope
jle
pop
sub
hlt
lret
jb
fisttps
je
xor
stos
das
daa
adc
jl
sub
jnp
test
mov
stos
test
mov
pop
xlat
push
mov
push
lcall
mov
mov
aaa
xchg
sti
lcall
out
lds
sahf
mov
push
push
mov
das
xorl
das
mov
sahf
je
xor
add
pop
imul
je
roll
into
fidivrs
mov
mov
xor
lods
clc
nop
push
pop
sbb
inc
loopne
pop
pop
cmp
or
jns
xorl
sub
xor
clc
push
loopne
pop
pop
iret
int
out
adc
jg
cmp
shll
cld
mov
xchg
out
shrb
das
loopne
imul
sub
push
pop
dec
mov
jb
stos
dec
xchg
ds
outsl
jmp
xchg
fs
xlat
clc
js
rorb
mov
data16
push
test
mov
mov
popf
sbb
pop
xchg
icebp
sub
mov
movsl
insb
mov
jle
mov
sbb
adc
insb
aaa
sub
daa
fildll
dec
or
inc
xor
ja
lods
xor
lret
outsl
loop
sbb
pop
cmp
dec
cmc
mov
cmp
cmp
jecxz
push
xchg
push
sarb
out
cld
fidivs
orb
insb
scas
das
pop
mov
cmovp
dec
jno
ja
lods
xchg
jnp
push
dec
incb
cld
outsb
jb
je
mov
shrb
stc
jl
shr
call
imul
mov
addr16
dec
pop
push
fadd
rorb
dec
xor
rcl
inc
dec
or
popf
shlb
xor
popf
xchg
rcrb
add
jge
cmc
aas
or
jno
lods
dec
lahf
cmp
sarb
mulb
cltd
ret
mov
cmp
cmp
sti
ja
bound
pop
cmp
adc
push
cmp
cmp
std
add
add
sbb
lock
cmp
fnstcw
add
mov
and
das
aaa
ret
dec
pop
xchg
xchg
mov
jecxz
xchg
mov
mov
je
push
clc
loopne
ret
add
jb
imulb
push
adc
mov
bound
xor
pusha
push
cltd
sub
xor
add
pop
jle
fldenv
xchg
insl
sahf
icebp
ljmp
test
jno
push
mov
test
test
lods
dec
xchg
or
add
ljmp
arpl
mov
lods
sbb
push
mov
ljmp
xor
mov
adcb
outsb
filds
scas
xchg
icebp
mov
fwait
mov
sbbl
rcr
pop
shlb
pop
jmp
scas
enter
jge
daa
xchg
push
dec
pop
push
mov
aam
mov
inc
and
mov
push
mov
push
push
sub
lret
cmpsb
cmp
push
or
clc
mov
cmp
mov
push
mov
je
inc
dec
dec
mov
ss
or
and
jbe
rorb
jb
mov
outsl
cltd
jne
mov
idivb
fdivrl
aam
cmp
sub
xchg
das
fmull
test
pop
cmc
inc
outsl
arpl
jmp
imul
out
push
xchg
xor
sbb
or
movsl
outsl
ds
adc
xor
sbb
andl
ret
insl
test
imul
popf
add
mov
push
or
test
inc
mov
and
mov
cmp
sbb
cmp
aam
movsb
stc
adc
into
push
scas
fisttpll
inc
add
loope
mov
fld
xor
mov
fldt
mov
fsubs
mov
cmp
mov
movsl
jae
xlat
sub
adc
adc
pop
pop
scas
adc
andl
fisubs
ss
pop
sub
lods
pop
sti
xchg
shr
cs
mov
pop
mov
ss
dec
dec
test
imul
iret
xchg
lea
in
sbb
decl
mov
lods
mov
pusha
rolb
es
rorl
push
je
xor
pop
sbb
add
jmp
leave
xor
push
xchg
out
jecxz
loopne
dec
mov
sti
ja
sbb
mov
or
jecxz
and
mov
pinsrw
aaa
sbb
pop
lea
and
adc
rcrb
jle
dec
xorb
adc
adc
mov
mull
or
mov
outsb
and
enter
bnd
mov
insl
insl
sub
jecxz
inc
repz
xchg
icebp
pop
mov
lock
jbe
jb
push
rolb
jmp
test
push
lods
jmp
sti
push
jns
out
test
ja
cmc
sbb
sub
subl
lahf
and
das
push
daa
negb
jmp
pop
dec
pop
dec
jbe
pop
lods
scas
cmp
dec
dec
repz
jle
pusha
push
cmpsb
std
das
fwait
or
inc
jge
gs
fsts
pushl
inc
pop
test
imul
pop
xchg
stc
ret
int
mov
call
cmpb
stos
inc
clc
aaa
add
daa
jl
sub
sti
push
out
neg
dec
mov
xor
xchg
cmp
pop
mov
in
inc
dec
ljmp
repnz
fwait
cmp
push
xor
jb
inc
inc
jae
insl
mov
sub
fldcw
inc
test
xchg
dec
sti
sub
mov
cs
je
fwait
mov
mov
mov
cmpsl
lahf
hlt
fmull
sub
sti
testl
cmp
ror
add
inc
lahf
enter
or
mov
push
arpl
adc
add
ret
dec
mov
cs
rcll
loop
movsb
clc
out
xor
aas
jno
sar
adc
mov
add
lret
push
xor
fadds
les
or
mov
arpl
adc
sbb
test
add
lds
imul
test
jmp
rorl
cmp
pop
sub
sub
dec
mov
es
inc
and
mov
arpl
fnstcw
int3
sahf
and
dec
push
push
out
or
lahf
movsb
aad
movsl
sahf
jns
es
rol
mov
push
xchg
stos
or
sub
jge
sbb
jo
imul
sbb
dec
cmp
insb
int3
call
in
mov
data16
dec
adc
ret
out
inc
test
fsts
adc
loop
call
rol
es
fbld
add
mov
xor
mov
fwait
inc
testb
jno
sub
icebp
cli
inc
jno
cltd
pop
ret
jg
dec
out
ret
sub
mov
inc
int
arpl
loopne
or
push
cld
cwtl
xor
sub
jbe
xor
sarl
ss
hlt
loop
lret
add
sahf
ja
xchg
mov
sbbl
bound
xor
push
std
aaa
and
ffreep
add
ret
call
in
loopne
out
icebp
rcrb
leave
adc
mov
inc
push
mov
lret
enter
loopne
add
xor
imul
xchg
mov
dec
add
test
cmp
into
inc
add
xchg
mov
cmpl
ljmp
cmp
jmp
or
mov
pop
aad
icebp
lds
insl
iret
mov
and
xchg
dec
mov
fildl
xor
sbb
push
inc
sub
xchg
and
int
cmc
jmp
pop
jmp
jb
xchg
call
dec
enter
inc
cwtl
pop
pop
pop
xor
add
popa
push
xor
in
xor
lock
mov
cld
dec
jmp
btr
xchg
pop
popf
mov
lods
enter
loop
jg
mov
xchg
je
push
dec
xchg
fiaddl
lock
loopne
pop
hlt
imul
pop
lock
jmp
ja
push
sbbb
stc
stos
cmp
xchg
push
ret
fwait
push
adc
sub
push
jae
pop
pop
jge
push
repnz
xchg
es
aam
add
sub
sub
inc
inc
push
lret
and
mov
push
xchg
mov
out
mov
cmp
mov
lret
xchg
dec
jecxz
out
xor
cs
sarb
or
add
je
orl
jle
je
rorb
mov
inc
inc
mov
xchg
insb
mov
dec
hlt
pop
jg
cltd
and
jge
xor
xchg
das
and
push
in
into
testl
into
adc
inc
in
jge
pop
fs
cwtl
jle
dec
jle
iret
into
mov
test
fwait
sbb
enter
into
inc
movsb
mov
cmp
and
and
ljmp
sub
lcall
cld
push
mov
lea
cmp
mov
mov
add
or
mov
rcr
cmp
ret
int
mull
mov
mov
mov
subb
mov
pop
jmp
fistpll
mov
pop
nop
shll
rcrl
xchg
ss
sbb
repz
fidivs
inc
jo
or
popf
xchg
and
mov
js
jo
add
and
cmp
xchg
test
aad
xchg
dec
lock
and
sar
xlat
movsl
clc
shrb
lock
cwtl
andb
lods
int3
jne
xor
pop
cwtl
ret
add
shrb
stc
shrl
and
dec
shl
lahf
ss
out
andl
adc
sub
add
hlt
cmpsl
lret
jno
subb
cmc
inc
xchg
cmp
xchg
mov
sbb
ret
out
into
jb
incb
mov
xchg
out
jge
xlat
pop
pop
fistpl
ss
fcoms
mov
out
clc
add
loop
jns
xchg
jp
push
out
add
in
sbbl
jbe
xchg
shrl
sub
movsb
repz
mov
sub
sub
rorl
repz
xchg
ds
mov
lret
mov
enter
and
shlb
pop
ror
clc
pusha
add
loope
inc
push
cmp
jno
pop
xchg
imul
add
and
in
dec
in
iret
or
jo
jmp
mov
in
sti
pop
cwtl
cwtl
mov
ljmp
aas
inc
pushf
jge
fwait
pop
neg
inc
data16
aad
pop
in
nop
mov
test
dec
xlat
lods
fiadds
xor
jge
test
or
xor
mov
xchg
fcoml
imul
or
jmp
js
test
push
orl
pop
testb
dec
xor
rolb
subl
or
loopne
out
movsb
bound
sub
call
push
cmp
push
mov
lods
stos
jnp
pushf
fmull
adc
dec
movsl
stos
push
rolb
and
inc
cmc
cld
xchg
xor
pop
fs
mov
inc
cwtl
orl
cmp
mov
xor
pop
dec
xlat
xchg
jmp
fiadds
inc
cmc
lods
xor
addr16
notb
sbb
dec
push
sbb
sub
in
stos
test
pusha
nop
jo
sub
inc
sub
xchg
lods
popa
repz
out
nop
ss
decl
dec
cld
mov
subb
add
jge
sbb
clc
gs
jb
aas
out
or
jae
mov
aaa
adc
mov
test
pop
mov
hlt
add
stc
bound
mov
scas
add
push
frstor
in
movsl
jb
inc
dec
cmp
mov
mov
jge
sub
loopne
lods
je
xlat
inc
dec
movsl
rolb
mov
xchg
insl
lret
out
pop
lahf
mov
pop
imul
dec
shl
cmp
loop
icebp
iret
lcall
inc
adc
push
insb
mov
aaa
mov
stos
bound
ucomiss
jae
mov
aam
pop
outsl
inc
pop
fs
cwtl
inc
xchg
test
cli
jle
or
roll
sub
scas
insb
inc
leave
imul
add
int
xorb
pop
stos
mov
sbb
pop
bnd
sbb
push
push
xor
enter
loopne
gs
jns
mov
shl
dec
loop
loop
fstl
cmp
xchg
enter
jo
call
xchg
adc
insb
cltd
push
dec
pop
out
xchg
and
mov
sub
dec
lods
js
sub
in
add
adc
shr
imul
cli
cmp
pop
sar
repnz
sub
cs
testl
leave
sbbb
inc
mov
dec
mov
mov
or
repz
movsl
xchg
ljmp
cmp
neg
or
cltd
xlat
outsl
sbb
fidivl
mov
sbb
out
out
push
les
mov
fptan
scas
andl
scas
sbb
sbb
xor
sbb
sub
popf
cmp
add
mov
lahf
sarb
adc
repz
int3
call
pop
push
dec
fistpl
pop
mov
punpckhwd
int3
js
add
dec
popf
nop
movsb
cs
dec
xor
cli
xor
xchg
inc
test
aad
mov
arpl
xchg
pop
sub
dec
xor
arpl
xor
fbstp
outsl
xchg
inc
jae
mov
roll
pop
cmpsl
pop
mov
cmc
xor
not
cltd
in
cmp
jbe
sub
outsl
mov
adc
inc
pop
push
jl
fs
subb
nop
xor
loop
adc
or
scas
push
sbb
enter
ljmp
fcmovb
pop
add
mov
xor
loopne
pop
inc
dec
xor
hlt
in
inc
icebp
pop
daa
and
mov
movsb
mov
call
jne
push
dec
in
sbb
or
mov
xchg
loope
jnp
xorl
aad
addb
aam
pop
mov
repnz
sti
jle
xchg
mov
add
mov
and
lret
xchg
jbe
fwait
loope
xchg
enter
xlat
add
dec
mov
add
and
decl
loope
mov
ja
ljmp
dec
cs
adc
shrb
scas
mov
dec
xchg
or
pop
pop
fsubs
rclb
jno
pop
cltd
fcmovu
sbbl
mov
fisubl
ds
sbb
sbb
lret
dec
push
rcll
mull
push
loop
add
bound
mov
jl
bound
push
jp
adc
xorl
test
pop
imul
pusha
pop
addr16
das
test
pushf
mov
out
xchg
lcall
mov
jmp
cmc
fadds
xchg
imul
adc
movsb
cmc
aad
fwait
subl
push
ljmp
sti
and
iret
xchg
imul
and
mov
fcomps
mov
adc
add
cmp
sbb
xor
fistps
stos
loop
or
daa
or
dec
fs
ret
jle
adc
jl
add
and
jp
and
cmp
cmp
push
movsb
xchg
shl
mov
fidivl
lods
inc
xchg
mov
shll
sbb
loop
xor
xor
bound
int
mov
mov
sbb
dec
or
sub
push
out
mov
cmp
pushf
lock
xchg
mov
pusha
sti
push
dec
xchg
lret
dec
jnp
mov
mov
inc
mov
push
inc
shlb
mov
adc
pop
ljmp
mov
popa
cmpsb
std
push
pop
cmp
repnz
les
ret
mov
lea
iret
jmp
gs
inc
push
push
mov
jno
cli
ss
out
jecxz
xchg
cli
cmp
iret
cmpl
iret
lcall
fisubrl
divl
add
dec
add
mov
leave
ds
out
add
shlb
xchg
push
jge
ss
out
clc
nop
inc
adc
pop
fsubrl
les
je
enter
lret
cmp
cli
dec
cltd
inc
cmp
jmp
pop
adc
and
pop
cld
or
ss
aas
sub
xchg
fcoml
ds
add
pushf
jp
pushf
jno
mov
xchg
addr16
stos
pop
lock
xchg
pop
xchg
roll
or
xchg
cld
add
xchg
aam
xchg
add
and
adc
outsl
cmp
scas
and
sub
mov
mov
cmpsl
push
in
jle
mov
enter
xor
push
imul
daa
push
or
and
mov
cld
std
pushf
pop
cld
push
mov
pop
lods
fsubrp
pop
shrl
fstps
clc
sbb
sub
mov
mov
in
sbb
pop
jae
xorl
ljmp
adc
mov
adc
jmp
add
ror
cli
dec
push
stc
int3
aam
jno
subl
dec
push
movsl
mov
shlb
xchg
fildll
xchg
into
sbb
sahf
lock
and
cwtl
push
lds
repnz
push
xor
ljmp
rorl
push
ret
add
shlb
lret
and
sbb
pop
repz
scas
xchg
aam
xor
idiv
jecxz
icebp
mov
xor
jne
jecxz
sbb
mov
mov
aam
pop
add
cld
scas
enter
mov
rcrl
dec
and
push
cmpsl
and
cmp
adc
stos
ljmp
mov
push
das
cmp
and
fcmovnu
int
aaa
jmp
pusha
cs
ficoml
xchg
xchg
xor
iret
sbb
ret
out
mov
push
sahf
or
stos
or
stos
mov
inc
adc
and
shlb
cmp
dec
out
inc
and
jbe
push
pop
aam
gs
fwait
xlat
mov
sub
sbb
lret
es
call
aam
or
mov
movsl
movb
pop
or
inc
in
jmp
inc
cmpsb
ficomps
out
dec
in
mov
xchg
inc
or
cmp
push
mov
jmp
xchg
inc
inc
jmp
mov
idivb
int
xchg
lods
in
sbb
rcl
pushf
dec
stos
add
out
push
pusha
jae
outsl
or
mov
cmpsl
imul
dec
popf
sub
inc
adc
aaa
xchg
jb
sub
add
adc
cmpsb
pop
sbb
std
sbb
and
pop
jg
jns
stos
rolb
mov
mov
add
sbb
push
sub
fldenv
out
int
add
test
mov
jbe
mov
ja
rcll
jns
loop
ljmp
mov
mov
test
cmp
pop
lds
pop
mov
or
scas
movsb
inc
or
repnz
pop
jl
sti
jb
aaa
dec
repz
testl
in
popw
or
mov
mov
xchg
dec
mov
sub
popf
shr
loop
lock
dec
sub
jne
xchg
test
adc
repz
cmp
mov
cmp
push
les
fstps
jnp
fs
sbb
add
fdivrs
fidivrs
mov
bound
sbb
jmp
pop
jnp
jmp
mov
mov
sub
out
mov
sub
movsb
push
js
lods
pop
xchg
jno
jnp
leave
push
mov
imulb
push
js
fstpt
scas
nop
nop/reserved
rorl
test
sbb
jns
adc
xor
sub
mov
out
or
or
or
fdivl
sahf
push
xor
pop
or
push
repz
imul
xor
out
stos
mov
mov
sbb
loopne
rcll
add
test
xor
mov
dec
or
jp
popa
pusha
int
adc
lret
mov
xchg
lock
mov
xchg
push
push
cli
mov
stos
ljmp
inc
pop
mov
addr16
mov
rorb
adc
mov
nop
loope
in
iret
sar
ss
fisttpll
push
dec
push
mov
cwtl
jmp
dec
cmp
aaa
cmc
mov
mov
aad
or
mov
mov
imul
rorb
mov
and
adc
push
xchg
fstpl
mov
outsb
add
mov
lret
fwait
loop
clc
in
addr16
aad
cs
xor
loope
test
push
xor
or
outsb
fsubrl
shll
stc
cld
ret
cli
jno
xchg
pop
lret
sbb
cwtl
mov
and
test
ds
and
push
jmp
dec
fildl
dec
push
ds
sahf
inc
into
movsl
or
and
daa
imul
jb
popa
hlt
adc
adc
adc
scas
in
xchg
call
or
mov
mov
jnp
ss
in
fadds
in
pushf
std
das
add
mov
stos
cmp
and
adc
fdivrp
popf
fcomps
lcall
pop
inc
lock
aad
rcr
xchg
stos
les
loope
fldenv
adc
out
sub
push
sub
fldt
loop
add
ss
out
rolb
mov
int
mov
xor
int
lods
mov
inc
and
mov
push
sbb
scas
mov
ljmp
faddl
dec
cli
cvtps2pi
jle
xchg
cmpsl
mov
loop
mov
imul
test
fnsave
ljmp
aam
push
xorl
ja
or
or
mov
push
outsb
fisubl
out
sub
mov
popa
dec
lock
leave
ret
xchg
lods
lahf
pop
dec
dec
mov
push
sbb
in
push
repz
dec
test
outsb
mov
in
aam
cwtl
loope
adc
jl
mov
aaa
ds
fs
mov
pushaw
insl
sub
sahf
popa
add
sub
cmp
and
xor
add
inc
jo
in
xor
mov
mov
pop
jg
inc
add
push
inc
or
mov
sbb
loop
add
fwait
lock
adcl
jae
and
dec
jnp
cmp
xchg
fsubr
cli
in
inc
iret
xchg
lcall
in
dec
das
inc
inc
lds
mov
ret
fs
mov
lahf
mov
xchg
jp
xor
mov
jmp
stc
xlat
and
sub
push
lds
js
pushf
mov
arpl
mov
mov
popa
adc
out
shrb
jl
add
mov
inc
adc
addr16
pop
les
int
mov
popa
fimull
sub
pop
and
insb
cmp
imull
fnsave
lods
ret
popf
repnz
testb
xor
jge
and
xor
jge
shll
pop
int
push
pusha
daa
dec
les
ja
int3
sbbl
sub
push
dec
iret
cwtl
shll
inc
arpl
add
daa
int3
arpl
into
pop
jge
aad
push
mov
addr16
mov
sbb
push
orl
in
jbe
mov
cmpsb
mov
data16
pop
es
gs
mov
adc
xchg
mov
ret
sub
bound
jnp
inc
jp
lret
cs
adc
xchg
inc
pop
scas
and
xchg
stos
and
loopne
jecxz
dec
jnp
push
rcrb
pop
mov
sbb
push
dec
aaa
push
mov
fstpl
out
mov
jp
shrb
jecxz
rcrl
or
dec
push
jns
call
test
mov
es
lret
sbb
push
fdivp
mov
insb
insb
and
inc
and
dec
mov
sub
daa
jle
sbb
sahf
imul
xchg
and
or
sbb
hlt
cmp
or
scas
or
in
mov
mov
ja
int3
popf
inc
xor
jno
rol
dec
je
ret
mov
mov
nop
gs
scas
push
loopne
pop
popa
xchg
or
sub
int3
incb
pop
cmc
sbb
test
out
mov
std
xchg
push
lds
lock
lds
outsl
cmpsb
inc
mov
decb
add
aam
ret
mov
icebp
test
mov
ret
outsl
or
lret
cmp
jmp
int3
mov
aam
lea
mov
jne
dec
sbb
xchg
and
scas
cld
jb
jge
cmp
push
push
cmp
ds
jo
xchg
mov
sbb
leave
sub
xchg
ret
sti
mov
int3
cwtl
nop
lea
inc
inc
outsb
std
and
and
cltd
jo
fsubs
pop
loope
dec
sbb
add
dec
push
shll
stc
push
shrl
adc
push
daa
sub
ret
aam
scas
test
orl
test
lahf
lods
jo
push
int3
and
int
jbe
or
movsb
and
sbb
aam
fildl
mov
xor
aam
pop
adc
fwait
and
adc
jge
mov
aam
inc
icebp
pushw
mov
outsl
mov
sti
push
gs
inc
outsl
rcrb
sahf
sti
xor
gs
sti
pushf
into
jnp
xchg
adc
cmp
mov
cmc
mov
add
movsl
lock
mov
push
and
mov
jmp
in
sub
mov
in
adc
sbb
mov
hlt
mov
or
movsb
jmp
and
outsl
leave
decb
add
jl
mov
jnp
cmp
cmp
dec
pop
lcall
imul
mov
xchg
roll
ds
jnp
gs
test
fdivl
movsl
push
leave
scas
push
push
insb
fistl
adc
hlt
mov
jl
add
add
add
or
scas
lret
filds
mov
mov
cmp
mov
mov
das
in
fadds
lods
stos
push
dec
mov
dec
jmp
arpl
xor
int
iret
sub
jp
iret
jp
into
jno
jle
lcall
stc
lock
imul
vcvtdq2pd
and
mov
dec
push
xor
or
add
sub
pop
scas
jns
je
push
test
pushw
sub
test
and
dec
fs
cwtl
adc
pop
ret
and
or
imul
out
cmp
test
aad
insl
or
push
fsubs
test
dec
fiadds
push
jne
clc
inc
movsl
pop
ret
fsts
mov
das
inc
les
arpl
loop,pt
stos
or
inc
js
stos
jp
clc
rolb
fstpt
daa
cmp
inc
bswap
popl
push
lock
das
push
or
and
lods
jns
push
pop
or
mov
or
rcll
and
lcall
push
lods
mov
jg
fdivl
cltd
ret
dec
scas
dec
and
mov
xor
dec
sub
scas
pop
dec
gs
adc
and
pop
arpl
rclb
test
xchg
xchg
pushf
pop
cltd
pop
xchg
lret
push
mov
or
out
mov
jo
xor
clc
cmpsb
pusha
inc
adc
push
aas
shrb
aam
pop
cmp
xchg
repnz
hlt
add
push
mov
dec
cli
lods
inc
test
and
filds
fsubl
sbbb
sahf
inc
repz
or
dec
inc
sarl
pop
roll
insb
fwait
lcall
das
mov
in
push
ret
pusha
jns
ror
jecxz
repnz
sbb
aam
push
cmp
xor
or
dec
xchg
je
jp
hlt
test
arpl
mov
out
test
lods
or
les
push
sbb
cmpsl
enter
adc
jg
ds
and
shr
dec
push
xchg
push
sarb
test
sbb
pop
mov
and
aas
jge
mov
enter
hlt
xor
clc
xchg
out
mov
adc
dec
incl
xchg
push
loope
dec
psubusw
mov
in
addr16
fdiv
out
adc
jnp
cmc
pushl
dec
mov
or
aam
in
int3
jne
cmp
out
cmp
dec
jo
scas
cmpb
mov
fidivs
mov
rol
inc
ss
lret
cmp
cmc
call
jp
dec
lea
or
out
rclb
fiadds
rcrb
push
sahf
jo
jo
sbb
jl
popa
and
aad
mov
mov
inc
dec
sub
stc
inc
cmp
lods
decb
add
lds
mov
push
mov
pop
xadd
sbb
imul
sub
jo
inc
gs
xor
movl
inc
push
xchg
sahf
out
cli
nop
lds
sbb
fucomip
inc
cmp
popf
std
jns
pusha
jp
mov
cmp
ljmp
push
mov
pop
das
popf
shl
xor
mov
sbb
ljmp
mov
inc
in
cmp
adc
add
hlt
jl
xchg
add
dec
movzbl
fs
dec
fstpt
jns
fwait
cli
pop
mov
pop
push
mov
xlat
dec
or
lcall
mov
mov
sbb
mov
stos
or
stos
sbb
dec
jbe
nop
aaa
stos
dec
out
mov
std
jg
pop
pop
das
cmpsb
jbe
stos
inc
in
jg
fsub
mov
xchg
mov
test
sbb
push
mov
add
fisubrl
add
arpl
lods
arpl
mov
cmp
push
pop
jl
outsl
loopne
pop
and
pop
movsb
mov
leave
inc
or
pop
push
jge
pop
pop
shrl
das
dec
call
cwtl
push
rolb
leave
out
and
jle
and
mov
aad
push
pop
adc
or
push
fnstsw
outsb
push
mov
leave
push
loopne
nop
sbb
int3
sbb
in
cmp
or
or
mov
jne
fwait
leave
adc
icebp
movsl
adc
hlt
dec
pop
cmc
ficoml
and
cs
cmp
loope
arpl
add
inc
jns
popa
cmpb
pop
enter
loope
mov
push
mov
inc
add
inc
jp
imul
mov
mov
add
fildl
leave
mov
mov
and
test
add
adc
jge
mov
xchg
xor
or
mov
ja
or
and
daa
mov
sbb
cli
xchg
jl
mov
push
loopne
xor
fidivs
out
mov
popf
inc
jp
inc
outsb
and
inc
cmp
fwait
iret
insl
fdivl
sti
fwait
test
pop
iret
ss
dec
and
mov
jbe
jmp
fmul
int
decl
scas
ss
and
or
in
andl
mov
mov
inc
mov
sub
mov
mov
xchg
pop
fcompl
movsb
pop
arpl
insl
adc
out
ficompl
daa
popf
push
cs
xchg
hlt
pushf
mov
or
rcrl
push
jecxz
js
ret
or
ss
cmp
hlt
jae
mov
das
mov
movsl
ljmp
mov
add
jge
add
in
insb
mov
pop
inc
popa
fldl2t
xor
fldl
in
lock
mov
sbb
ficoms
aad
hlt
cmp
pop
ljmp
nop
push
ja
hlt
pop
inc
push
cltd
and
sbb
rcl
fwait
jb
stc
inc
sti
sub
mov
imul
add
aas
ljmp
into
fdivrs
and
push
sbb
cmp
pop
out
dec
and
cmp
loop
push
fnstsw
xor
jg
inc
mov
out
and
mov
js
mov
mov
xchg
test
adc
imull
mov
fiaddl
xor
shl
enter
push
push
push
roll
push
mov
dec
aad
divl
jmp
cmpsb
lret
pop
iret
or
xor
mov
pop
leave
sbb
je
inc
mov
outsl
lds
clc
pop
test
je
xor
mov
pop
sub
dec
insb
pop
mov
roll
stc
mov
outsl
nop
add
sub
xchg
mov
test
lods
test
jg
and
xor
das
rolb
lret
sbb
stos
inc
fs
jns
mov
xchg
std
test
jg
push
shl
adc
add
or
jl
mov
int3
std
stos
mov
mov
pop
inc
xchg
fwait
sub
jo
jnp
push
mov
mov
lcall
cwtl
dec
sbb
call
mov
dec
pop
imul
jo
sbb
jnp
enter
sti
xchg
add
lahf
dec
and
inc
enter
jmp
fnstenv
xlat
sbb
xorl
lcall
out
lret
std
insl
add
movsb
cmpsl
mov
adc
pop
mov
adc
cltd
mov
and
push
nop
leave
jle
adc
sti
or
aam
jmp
fidivs
shrb
cmpsl
out
mov
mov
push
iret
cs
xor
add
or
loop
sbb
cmp
pop
sbbb
rclb
jne
inc
lds
test
push
dec
sub
sti
push
cmp
dec
stos
outsb
and
stos
jbe
inc
cmp
repnz
shl
movb
stos
in
cli
je
jno
js
iret
push
push
sbb
or
sbb
cs
movsl
sbb
fisubs
add
jb
sbb
inc
jge
cmp
cmpl
push
xchg
adcb
and
cmp
iret
leave
into
daa
xchg
mov
sbb
stos
jle
enter
incb
push
shlb
push
and
mov
not
xor
mov
or
xchg
fwait
dec
mov
cmpsl
adc
xor
fadds
je
inc
out
aaa
cmpsl
sub
sbb
mov
mov
adc
mov
push
insl
in
out
aaa
out
mov
pop
stc
inc
mov
outsb
lea
daa
sbb
daa
lahf
push
xlat
mov
add
push
ss
mov
fwait
cmpsl
sub
test
scas
into
mov
xor
sbb
sbb
xor
jno
stos
sub
popf
loop
or
dec
lahf
lods
add
scas
jl
pop
sbb
lods
push
ss
movsb
mov
mov
pop
in
lods
jle
push
enter
or
or
andl
mov
dec
nop
xchg
mov
pop
push
xchg
cmp
shll
cltd
add
or
fdivs
cld
sub
push
fs
repnz
cmp
cmp
dec
mov
lret
mov
mov
notb
cmp
fcmovbe
jp
xor
in
xchg
inc
fs
into
outsl
and
imulb
lret
xchg
mov
pusha
jno
mov
sbb
xchg
hlt
rcrb
shrb
mov
outsl
hlt
in
js
aas
das
rcrb
push
xor
rcrb
pop
jge
scas
push
aas
push
aad
adc
sahf
mov
lock
mov
hlt
das
fidivrl
repz
add
aam
fistpll
fmulp
cmp
in
leave
pop
sbb
ret
mov
jg
mov
mov
xor
std
hlt
cmp
and
addl
ljmp
jns
addr16
cmp
or
inc
adc
jne
lock
jns
adc
cltd
and
push
xchg
jne
mov
std
repz
out
add
lock
mov
mov
stos
pop
adc
xor
adc
cmpsl
sub
nop
scas
dec
adc
xor
loop
mov
hlt
sbb
cmp
sbb
bound
cmp
mov
dec
jns
xchg
jmp
add
subl
jecxz
pop
fs
outsl
pop
xchg
fwait
push
adc
pop
mov
or
cwtl
mov
mov
cli
pop
test
sub
xchg
jge
mov
pop
int
dec
bound
test
fnstenv
jne
jnp
loop
mov
cmc
xor
loopne
jae
add
adc
out
cld
sub
inc
aam
dec
pop
mov
push
sbb
or
dec
cwtl
xlat
mov
stos
loope
ud2
sub
sub
xchg
mov
aaa
insb
jle
jle
inc
mov
jns
mov
sbb
int
stos
jb
pop
push
fdivr
adc
test
mov
push
loope
push
mov
sti
cli
std
stc
jo
jbe
and
nop
mov
dec
or
call
xchg
mov
cmpsb
add
jg
lea
inc
sub
out
xchg
sbb
hlt
mov
mov
xor
in
mov
sub
and
lea
mov
adc
movl
inc
lcall
nop
dec
loop
push
sub
mov
cltd
xor
inc
test
push
mov
cmc
rolb
mov
cmp
stc
cmp
lock
and
add
outsl
adc
ret
aaa
into
dec
mov
cltd
jg
pusha
or
bound
repz
inc
mov
mov
sbb
or
outsl
std
mov
adc
mov
pop
xchg
or
xlat
fdivp
fwait
leave
sub
adcb
sub
sub
cld
xchg
ret
shlb
mov
mov
cmpsl
mov
push
fistpl
mov
fnstenv
jecxz
out
mov
xor
push
cli
add
xor
cmpsl
stc
mov
sub
add
aam
orl
and
mov
inc
or
xor
add
jae
mov
jge
add
scas
dec
or
add
pusha
aad
aas
mov
dec
push
js
ret
xchg
out
xor
popa
cli
sub
nop
mov
clc
repnz
or
inc
dec
in
lcall
aas
mov
add
xor
gs
push
push
xchg
pop
xor
jge
jl
ret
test
jae
jl
loope
cmp
xor
or
inc
mov
push
inc
mov
fucomi
xchg
and
dec
cmpsl
jl
fsubl
sub
fisubrs
pop
xor
and
and
xchg
test
prefetch
push
outsb
dec
jnp
iret
pop
pop
jg
scas
mov
xor
sub
pusha
adc
test
das
test
mov
aas
dec
push
mov
lods
sahf
push
dec
daa
lock
or
jg
fxch
in
fldl
mov
orl
ret
add
lds
cwtl
mov
jg
fsincos
add
cmpsl
in
xor
sbb
mov
add
inc
jmp
push
pop
inc
gs
cmp
dec
lods
adc
jge
dec
in
inc
sub
dec
pushf
jns
loopne
inc
xchg
mov
push
fwait
aam
pushf
xchg
push
cli
aad
pop
mov
aaa
mov
les
aam
cmp
lock
subb
int
clc
and
movsb
jp
pop
push
pop
lret
test
xchg
inc
xchg
lahf
scas
test
xchg
add
mov
fisttpll
rcll
mov
push
mov
jecxz
xchg
inc
mov
scas
lea
xchg
addl
fisttpll
std
xchg
icebp
cld
dec
sbb
cmpsl
sbb
movl
jb
nop
dec
sub
mov
mov
repnz
mov
xchg
mov
pop
adc
lret
or
mov
jb
dec
ss
push
pop
mov
hlt
add
lock
push
ret
fidivl
lds
gs
sbb
popf
arpl
sbb
pop
mov
mov
imul
adc
xor
shlb
into
mov
fbstp
out
shll
pop
xchg
pop
scas
mov
cmpsb
mov
fidivrs
dec
btl
out
stos
ret
aam
dec
lahf
cmpsl
adc
xchg
xchg
pop
stos
dec
jl
ja
dec
push
aad
mov
add
test
push
fidivrl
push
mov
push
sbb
mov
xchg
cld
repz
call
inc
sbb
fimuls
mov
cli
orb
pop
xchg
lock
push
clc
outsb
mov
add
mov
adc
mov
mov
mov
shrb
sub
mov
iret
aad
xchg
xor
test
dec
mov
loope,pt
xor
enter
movsb
fdivr
and
cmp
clc
out
and
add
sbb
out
hlt
push
cmp
cmovg
in
shll
test
das
sbb
inc
mov
and
xchg
in
mov
xchg
dec
inc
rcl
or
cmp
dec
dec
jae
mov
pop
xchg
ficomps
test
mov
adc
jne
mov
sub
xor
ret
add
lahf
repz
shl
push
pop
mov
pop
mov
clc
cmp
cmp
movsb
out
push
call
or
cs
aam
or
imul
cmp
and
in
xlat
inc
dec
jno
jne
push
jg
loope
mov
test
sarb
mov
dec
fidivrs
je
pop
cs
mov
and
jp
ss
call
lods
mov
shll
mov
and
int3
fcmovnu
cmpsl
xlat
popa
imul
sbb
add
movsb
xor
lods
and
sub
xorl
dec
pop
add
out
add
mov
jne
repz
hlt
stos
das
inc
icebp
data16
xor
or
rclb
sbb
inc
in
cmc
push
mov
fimull
pushf
aad
divb
or
or
xchg
add
cmp
or
jns
mov
and
aaa
call
add
and
cmp
pop
fisubl
jp
lahf
xchg
push
pop
cmp
popa
xor
es
fidivl
call
rorb
clc
mov
mov
pop
ss
jbe
and
jno
jno
clc
cwtl
pop
stc
and
rclb
ds
pop
sti
loop
or
rorl
loop
add
xchg
dec
mov
pop
inc
lds
pushf
mov
dec
xor
test
mov
jmp
mov
sar
xor
push
and
js
movsl
cmp
sub
fdivr
lea
outsl
jne
das
fbstp
into
call
cmp
jae
dec
mov
push
jl
or
xchg
mov
stos
dec
sbb
push
xchg
iret
sbb
adcl
dec
pop
mov
inc
or
xchg
xlat
mov
addr16
sbb
fcompl
fs
vmwrite
sahf
dec
loopne
fistpl
pop
insl
jge
mov
dec
int3
in
jl
push
jns
clc
push
cmp
jae
and
adc
or
movsl
aaa
aam
push
dec
daa
or
mov
fsts
xchg
fnstenv
fwait
or
or
push
push
xchg
jg
in
push
jno
testl
cltd
repnz
mov
sub
test
jp
pop
adc
sub
sahf
mov
ds
ficompl
mull
std
outsb
pop
rorl
int
jae
cmp
aad
dec
dec
lods
sbb
inc
pop
or
pusha
lods
jnp
in
and
xchg
popf
sub
pop
sahf
xchg
push
xchg
aad
jle
cmpsl
aad
cld
fisubrs
call
dec
xor
insb
aam
pop
mov
sbb
jp
adc
push
movsb
xor
mov
mov
add
insl
xor
imul
mov
inc
fwait
inc
insb
cmpb
cmpsb
xchg
hlt
xchg
and
test
add
add
insb
push
cwtl
sub
out
and
or
inc
test
mov
mov
icebp
repz
lods
decl
inc
and
lret
es
je
lret
pop
push
or
mov
cmpsl
xor
push
lock
shrl
mov
cmp
inc
pop
shl
in
sbb
jo
push
pop
std
int3
aas
insl
or
ret
sbb
add
enter
ja
jnp
push
and
in
push
inc
mov
xorb
cli
push
sbb
loope
pop
or
push
and
fwait
bound
icebp
loop
xor
sub
add
pop
insb
iret
cs
clc
enter
movsb
addr16
in
pop
dec
mov
aam
sbb
arpl
mov
jb
jg
ret
cld
cmc
inc
or
fstl
jae
imul
test
stos
int3
mov
incl
loope
mov
cmp
pop
push
pop
imul
sbb
mov
pop
mov
into
xor
mov
movq
or
leave
imul
sub
pop
cmpsb
jnp
int
dec
pop
test
and
xchg
xor
xchg
in
sti
or
nop
loopne
or
jnp
inc
aaa
mov
push
dec
add
repnz
data16
cmpsl
cmp
jb
out
inc
rolb
and
sbb
shl
jno
xor
test
pop
out
mov
sub
daa
add
jno
pop
movsb
pop
sbb
inc
fstpt
jle
das
xor
inc
out
cltd
and
popf
dec
and
add
sub
aam
sub
mov
xchg
push
mov
xchg
scas
jns
xor
add
inc
mov
movaps
mov
cmpsb
push
testb
jae
xor
mov
xchg
pop
cmpsl
sbb
xor
inc
in
scas
pop
ja
jno
inc
rcl
stos
lret
xor
loopne
nop
sbb
loop
fwait
or
inc
call
add
inc
daa
repnz
adc
js
fstpl
xor
aad
sub
cmp
pop
or
adc
inc
dec
outsb
add
mov
lret
xorl
addr16
js
loopne
cmp
inc
cmp
push
dec
cmp
add
mov
aaa
ret
into
sub
cmp
sbb
int3
dec
cltd
gs
cmp
xchg
cmp
lds
inc
mov
xchg
mov
xchg
lock
loopne
out
jl
adc
mov
jbe
negb
xchg
mov
dec
mov
dec
xchg
repnz
les
dec
lcall
cld
ja
or
cmp
pusha
scas
jmp
addr16
flds
mul
sub
xor
or
iret
mov
imul
sbb
cmp
sbb
cmp
sar
sub
pop
out
jno
cmp
addr16
push
cs
pop
dec
ja
sbb
in
mov
divl
mov
add
lahf
push
or
sub
pop
into
dec
aad
inc
jge
push
inc
mov
or
xor
xchg
mov
add
mov
dec
adc
push
inc
pusha
ljmp
xor
and
mov
mov
jnp
sahf
xchg
pop
arpl
stos
adc
push
cmp
ss
hlt
push
scas
cwtl
sbb
data16
push
push
shll
int3
mov
test
push
imul
mov
cld
imul
ud0
fisubrl
push
scas
lcall
test
clc
mov
dec
xchg
jle
cld
aam
pop
sbb
jecxz
mov
adc
inc
scas
pop
mov
sub
outsb
fldcw
clc
inc
mov
cwtl
mov
inc
xchg
inc
call
fnstenv
pop
sbb
cld
mov
adc
mov
clc
es
pop
push
jmp
fsubrs
aad
jmp
mov
inc
rol
add
out
in
inc
add
ja
sub
jae
inc
out
sbb
cmpsl
jnp
cmpsl
jo
push
push
push
cmovb
inc
xchg
iret
adc
and
aas
jl
or
loopne
repz
in
mov
mov
xchg
pop
repnz
iret
lret
push
fdivrl
imul
cld
fidivrs
and
mov
jo
xchg
dec
rorl
sub
lds
outsl
orl
xor
jbe
out
push
pop
lods
add
aas
mov
xor
push
repnz
enter
xchg
dec
sarb
fs
adc
ljmp
cs
adc
and
fwait
adcb
imull
imul
and
pop
imul
daa
dec
xchg
loop
ja
cmp
aam
sbb
dec
add
fcmove
ds
stos
jbe
cmp
push
mov
dec
jb
dec
add
sbb
and
imul
or
adc
mov
insl
les
negl
out
daa
push
jne
mov
outsl
movsl
sub
push
push
and
stos
mov
aaa
mov
icebp
sbb
xor
inc
fiadds
lahf
out
adcb
daa
call
mov
repz
pushf
imul
mov
or
lret
xchg
mov
lds
mov
jl
push
dec
fiadds
outsl
insl
shr
mov
inc
inc
jmp
adc
sbb
pop
ret
pusha
xchg
pop
cmp
nop
bound
into
icebp
std
das
out
pop
pop
pop
mov
or
sub
pusha
push
mov
push
pusha
sbb
scas
hlt
imul
xchg
push
adc
fisttpll
add
jno
fwait
iret
test
loopne
icebp
gs
aad
pusha
ds
sbb
rcrl
xchg
dec
das
mov
aad
mov
bound
ret
outsb
jnp
loop
fidivrs
out
das
gs
push
dec
roll
xchg
mov
jmp
stos
movsb
outsl
mov
into
mov
jecxz
dec
xchg
js
push
lahf
ret
pop
mov
dec
add
insb
outsb
nop
scas
mov
push
addl
mov
sub
xor
adc
xor
mov
mov
or
sub
add
mov
sbb
pop
dec
mov
dec
jp
adc
pop
mov
mov
sub
sub
pop
aaa
leave
mov
andl
test
sbb
mov
add
xchg
imul
xor
xor
and
inc
std
jle
add
mov
mov
xor
and
out
add
xlat
in
lods
cmpsb
inc
xor
sbb
loopne
push
pop
fwait
adc
cmp
sbb
sbb
leave
in
orb
fstps
xchg
xor
imul
test
sbb
fisttpl
fldl
and
sbb
aad
in
lock
adc
int
mov
jmp
idiv
xchg
sub
sti
sub
ficomps
dec
or
sub
cmp
adc
mov
add
lret
fnstenv
scas
es
lods
outsb
dec
inc
mov
add
arpl
hlt
fistl
dec
jmp
jno
enter
inc
add
inc
in
lcall
shr
push
adc
cmp
mov
lds
add
jno
jle
pop
push
scas
test
and
loopne
xlat
xorb
rolb
and
stc
jne
testl
lret
rolb
push
popa
daa
add
pop
add
loopne
adc
pop
test
fstpt
push
dec
pop
add
addl
mov
mov
jp
stos
mov
in
dec
cmc
mov
leave
pop
out
lea
test
adc
dec
loopne
mov
js
pushf
cmpsb
lods
mov
add
std
mov
dec
pop
mov
xor
adc
fdivs
hlt
rcrb
cmp
loopne
dec
lea
sub
popf
fdivs
arpl
xor
xor
jle
pusha
scas
adc
or
xor
xchg
mov
mov
push
les
scas
sbb
fst
pop
xor
xor
xchg
add
mov
fsubr
leave
lods
xor
icebp
into
push
jg
mov
adc
mov
std
mov
popf
jns
fsubl
into
test
mov
dec
and
mov
xchg
xor
call
jo
ret
loop
mov
test
xor
adc
jmp
testl
add
push
mov
std
leave
or
push
scas
fstps
lahf
sbb
ret
jbe
ds
jmp
inc
or
mov
pop
adc
mov
cld
cld
pusha
aaa
rorl
cmp
mov
sub
jns
jne
fimull
test
xchg
dec
fsubp
ret
xor
adc
sub
add
lea
gs
mov
dec
add
jo
jnp
ds
pop
aad
pushf
les
repz
iret
ret
hlt
nop
mov
scas
movsb
cmp
mov
arpl
js
lods
inc
aaa
jg
mov
mov
push
mov
fbld
sub
mov
mov
test
aaa
xchg
dec
les
or
push
ds
mov
and
loopne
gs
jmp
rcll
mov
mov
sub
jle
aas
add
pushf
cmp
mov
es
divl
push
add
jbe
xor
fmuls
cmp
fbld
add
hlt
aam
loope
clc
adc
pop
js
jbe
sub
addr16
sub
mov
mov
jmp
xchg
adc
pop
lret
cli
fsubs
cmp
arpl
jbe
xchg
and
adc
mov
sub
sub
mov
and
pop
in
sub
out
lret
div
inc
lods
mov
mov
fistps
jne
pop
jbe
pop
xchg
cmp
mov
sub
pop
inc
xor
div
popa
rorl
mov
push
xlat
xor
popa
inc
sbb
lahf
inc
pushl
andb
into
sub
and
aam
push
push
mov
pop
insb
in
push
inc
movb
rclb
mov
sarb
int
pop
gs
out
out
mov
jb
mov
adc
jno
push
pop
push
sub
mov
or
sub
jbe
add
js
dec
pop
aas
rcll
iret
push
and
inc
mov
out
inc
adc
data16
ret
in
or
frstor
mov
rcrb
pop
or
addl
xchg
test
adc
sbb
ficoml
sahf
or
arpl
ret
jmp
jge
call
lret
movsl
or
jns
xor
xchg
pop
fistpl
dec
in
scas
hlt
pop
popf
push
jl
jns
test
clc
and
clc
adc
sub
pop
dec
lods
xor
aam
and
inc
add
or
cmp
push
int
aaa
rclb
insb
addr16
lret
out
jmp
in
outsl
loope
cmc
aas
jno
pop
mov
into
in
push
rol
xchg
outsl
testb
and
in
mov
push
dec
mov
add
and
and
lods
xchg
push
testl
xor
dec
loopne
dec
mov
xor
cld
pop
mov
leave
mov
adc
sbbl
xor
shll
pop
aas
ss
leave
test
scas
es
or
lods
push
jnp
mov
or
push
pop
lret
or
mov
es
xchg
jo
adc
aam
nop
aad
cmp
fisubrl
adc
lcall
cmc
adc
jmp
mov
add
imul
call
gs
push
in
xchg
or
mov
repnz
mov
mov
sbbl
fwait
loop
mov
jecxz
mov
aaa
and
fisttpl
adc
push
pop
scas
push
movsb
outsl
pop
aas
pop
and
mov
shrb
xchg
xchg
sbb
jns
callw
mov
xchg
aas
arpl
movsl
mov
gs
xor
mov
stos
dec
pop
adc
aas
gs
in
mov
or
mov
rorb
or
into
mov
cmp
cmp
jle
pop
sti
xor
jmp
mov
pushf
lods
pop
neg
ja
pop
sbb
sbb
in
or
xchg
cmpsl
push
testb
aas
rcll
push
hlt
popa
pop
aas
shlb
lret
xchg
out
mov
fs
xor
fdecstp
lret
insl
jbe
push
fwait
sub
insb
pusha
rclb
adc
sbb
jle
dec
mov
jo
loope
outsl
scas
je
movsb
cs
gs
mov
comiss
xor
inc
xor
imul
orb
xor
sahf
mov
sub
out
dec
mov
scas
rolb
sbb
push
dec
push
inc
adc
xchg
mov
or
pop
aam
sbb
shl
push
gs
push
mov
xor
stos
fidivrl
scas
mov
and
lods
inc
and
imul
out
mov
mov
mov
mov
and
dec
notb
mov
insl
xor
cmpsb
adc
dec
xchg
xor
add
mov
jle
lret
adc
xchg
jne
cmpsl
mov
push
test
int
insb
mov
push
popf
push
fsubrl
xorl
loopne
push
adc
and
cmp
push
xchg
add
das
cmpsl
add
stc
mov
jl
sbbl
dec
loop
jmp
sbb
jne
movsl
cld
sbb
pop
pop
imul
xchg
rolb
jbe
xlat
adc
push
dec
jp
mov
cmpsb
adc
lret
xchg
push
fwait
fs
mov
push
or
fwait
int
cmpsl
mov
cmpsl
dec
clc
mov
push
lret
shll
cmp
ss
outsl
enter
lock
lock
in
sahf
cmp
ja
mov
and
mov
and
add
or
ja
arpl
inc
sar
sub
arpl
fdivl
inc
mov
leave
jecxz
xor
cltd
in
cmpsb
rcrb
push
out
ja
pop
call
js
mov
mov
cld
bound
out
cmp
lcall
fisubl
cs
cld
adc
xor
scas
add
jmp
shl
scas
xchg
in
and
sub
aas
jmp
mov
lea
push
sub
jb
jl
sub
pop
aaa
mov
lret
sub
push
leave
jae
inc
xorl
pop
ljmp
sub
int
js
aaa
xchg
movsb
lea
mov
push
sub
pop
push
push
cmp
xor
dec
iret
aad
add
jl
fimuls
or
push
neg
adc
insl
xchg
cld
inc
insb
cs
sbb
test
xor
adc
pop
out
pop
dec
fsubrs
imul
outsb
add
call
je
pop
cmp
das
lds
incl
fistl
ret
testl
imul
sbb
xchg
adc
jbe
pop
jnp
cmp
movsb
test
lea
daa
xor
push
data16
xor
cli
inc
popf
sub
mov
jae
xchg
popf
jnp
les
inc
lods
loopne
cmp
inc
stos
mov
adc
add
push
rclb
ja
cmc
fwait
sub
js
jp
ret
inc
cwtl
repnz
push
adc
push
std
mov
mov
pop
sti
aas
cld
xchg
stos
cmp
cmp
push
out
in
shl
push
or
data16
mov
movsl
pop
dec
pop
xor
cmp
add
jns
call
icebp
cs
mov
out
jmp
lcall
or
lret
in
repz
xor
cld
and
pop
cld
leave
adc
scas
in
outsb
add
stos
add
xor
inc
cmp
aad
lds
push
aad
jecxz
clc
jae
negl
lret
cmpsl
jle
loopne
xor
imul
and
add
pop
out
test
jo
test
or
jmp
aas
dec
mov
inc
cld
push
xor
cltd
xchg
mov
shl
pop
cmp
mov
inc
rolb
cmc
push
and
out
inc
jbe
mov
jecxz
pop
je
ds
insb
cld
fstpl
pushf
lea
rol
out
rcrl
test
mov
pop
mov
loopne
ret
shlb
sbb
xor
mov
jno
lock
fldenv
adc
sbb
test
shrb
jnp,pt
pop
out
fdivrs
lcall
adc
pop
rep
dec
pushf
les
sbb
inc
mov
aad
in
inc
mov
mov
test
xor
xchg
mov
jp
shll
clc
push
mov
sbb
cmpsl
adc
mov
pop
scas
in
out
xchg
mov
mov
leave
mov
adc
notl
mov
lret
push
scas
mov
stc
or
mov
int3
loopne
int3
cmp
cltd
pop
push
cld
aas
sti
dec
bound
call
sub
jno
jg
xor
cmpsl
xor
add
push
imul
sub
js
mov
jp
pop
sti
jae
adc
and
ss
call
lock
add
add
rorb
jbe,pt
cli
ljmp
movsb
cmp
push
pop
lea
aam
push
xlat
sub
ja
jnp
sub
jmp
lret
cmpsl
mov
iret
loopne
fsubr
rorb
fmuls
test
cs
scas
movsb
push
imul
cmpsb
mov
stos
cmpsl
inc
ds
stos
and
jnp
sbb
push
mov
pusha
cmpsb
mov
cmp
sub
add
test
into
mov
push
popf
outsl
out
inc
fwait
lods
sub
cmp
aad
addl
add
xchg
mov
xchg
mov
mov
scas
int3
lock
rorb
inc
loope
mov
aad
faddp
stos
jle
enter
cwtl
lock
clc
test
mov
jbe
leave
arpl
jge
sub
push
test
push
fldt
xor
das
imul
fldt
sub
lcall
imul
pop
bound
pop
xor
js
frstor
jle
dec
push
int3
mov
test
jp
or
ds
out
xchg
lock
mov
inc
push
xlat
xor
lods
inc
int3
loopne
out
xchg
or
mov
push
jo
sbbb
add
cli
movl
outsl
mov
push
sbb
adc
pusha
mov
jge
dec
call
rol
jmp
add
out
lock
movsl
xor
or
daa
fisttpl
and
pop
inc
add
call
int3
adc
popa
and
std
or
pop
insl
lcall
xchg
fiadds
xchg
popa
jp
pop
xor
push
outsb
adc
adc
dec
iret
push
lds
enter
sqrtps
and
inc
fmuls
mov
add
xor
das
or
subl
arpl
jo
xchg
jl
dec
push
add
lcall
push
xor
mov
mov
rorl
pop
loop
jmp
jo
xchg
mov
rorb
mov
push
dec
xor
inc
lcall
mov
inc
pop
lods
xor
cltd
sti
mov
add
out
sbb
mov
fmuls
jb
mov
jl
inc
xchg
sub
jecxz
ss
jns
clc
rcl
ret
lret
loope
cmp
es
repz
aas
clc
mov
xchg
pop
cmp
imul
add
test
ds
pop
dec
jae
mov
push
shl
push
xor
test
loope
out
jno
lea
movsl
bound
and
jmp
repnz
out
mov
push
jae
cli
lcall
lea
pop
in
mov
rcpps
pop
jae,pn
out
out
adc
dec
sbb
into
jp
xor
in
lahf
xchg
cmp
aaa
scas
arpl
sub
ret
pop
sbb
outsl
sub
pop
push
enter
cli
pop
test
mov
xchg
cmp
ljmp
cmovno
inc
pop
leave
repnz
repz
xor
aas
lret
pop
mov
xchg
jno
lret
adc
in
out
mov
mov
nop
stos
ror
xor
xor
xchg
or
loope
stos
sbb
sbb
or
aad
cmp
and
or
shrl
ret
sarb
arpl
adc
aaa
imul
clc
add
pop
add
adc
or
mov
jo
sub
cs
mov
daa
aas
jbe
repz
mov
in
cltd
pop
das
mov
xchg
iret
adc
insb
jecxz
and
lea
arpl
scas
dec
jmp
mov
js
xlat
sbb
xorl
lret
pop
adc
and
fldcw
mov
bound
dec
jg
xchg
pop
in
stos
notb
jno
sub
and
fsubrs
scas
mov
decb
adc
or
dec
insb
dec
sub
push
std
arpl
lahf
scas
push
jg
xchg
or
mov
jecxz
add
xor
lea
in
ljmp
push
les
and
adc
mov
je
scas
lret
inc
jecxz
mov
ret
xchg
out
cmp
ss
push
imul
cmp
mov
sbb
adc
aam
in
sbb
mov
xor
movsl
cmpsb
in
leave
nopl
push
shl
shll
jl
xor
mov
adc
insb
aaa
cmp
pop
ret
push
mov
xor
sub
cmp
jge
aaa
xchg
sahf
cs
add
cli
cld
popa
xchg
movsl
arpl
cmp
repz
fs
fldt
pushl
out
dec
sahf
es
pop
xchg
add
and
mov
fcomps
xchg
call
jge
movb
daa
pop
stc
negb
rcrb
leave
aam
movsb
cwtl
mov
push
cmp
mov
add
xchg
mov
xchg
fistps
int3
fcoms
push
test
jbe
stos
shlb
xchg
cltd
call
lahf
add
loope
fld
mov
test
out
mov
aas
jge
jmp
xor
iret
sbb
jg
inc
testl
push
sub
fdivrp
flds
pop
mov
aam
lock
pop
push
imul
mov
sub
cmpsb
call
push
fidivrs
aad
mov
rclb
mov
stos
xchg
or
push
call
add
pop
push
es
and
dec
leave
add
orl
inc
repz
fisttps
xchg
add
popa
lds
rol
out
mov
and
divb
sub
pop
jle
das
cmp
mov
cmp
cmp
clc
shll
jge
repz
div
icebp
mov
into
fcomi
scas
fiaddl
pusha
xchg
out
shlb
or
pop
jle
dec
jp
mov
inc
push
bound
jb
daa
out
lods
sahf
sub
ret
xchg
lahf
and
lock
and
test
in
dec
loopne
sub
cmp
or
dec
push
in
pop
in
and
sbb
sbb
mov
in
cmp
inc
fcomps
push
lods
cli
cmp
andb
jb
mov
adc
std
shlb
imul
lret
bound
pop
mov
test
mov
std
sbb
push
sbb
data16
jne
cmp
ss
mov
fs
sbb
enter
lock
outsb
push
cmp
fcmovb
orb
loopne
mov
xchg
outsb
data16
div
inc
insl
popa
add
xchg
add
jecxz
arpl
divb
jmp
int3
inc
in
outsb
pop
push
xor
adc
inc
push
and
push
jl
mov
xor
ss
push
or
and
mov
fisttpl
fisttpl
and
sub
xor
sbb
pushf
shll
inc
mov
data16
fcoms
pop
popf
fdivr
xor
dec
into
mov
lock
cmp
adc
pop
daa
cltd
jge
fimull
sbb
jge
mov
pop
test
movsb
gs
daa
mov
ds
aas
mov
sub
sub
adc
pop
cwtl
pusha
push
icebp
or
pop
mov
jne
jno
push
push
out
test
mov
xchg
adc
ja
aam
sub
ljmp
lea
pop
lods
jl
mov
daa
xchg
fcomip
les
jecxz
push
inc
xor
mov
sub
mov
push
mov
push
push
lahf
mov
lahf
jl
cltd
dec
adc
ss
mov
xchg
or
pop
or
loop
movl
adc
xchg
cmp
fwait
imul
xlat
cmpsl
jl
mov
fadd
pushf
dec
push
jns
mov
xchg
sbb
lds
gs
mov
xchg
and
lds
movsl
fbstp
iret
or
fistps
andl
xor
loope
jle,pn
or
outsl
sub
pushf
jbe
mov
icebp
insl
or
movsb
fwait
sub
aad
dec
ja
jns
mov
cmp
jb
jne
jo
mov
hlt
push
bound
jno
adc
enter
or
inc
je
push
jnp
pop
pop
loopne
adc
mov
pop
mull
pop
ret
mov
xor
mov
roll
xor
lahf
jecxz
push
gs
icebp
or
js
stos
cli
nop
xor
or
mov
mov
adc
lods
fcoml
mov
cli
out
movsb
outsl
add
vrcpps
pop
dec
sbb
fsts
aam
mov
mov
int3
or
push
fstpt
adc
sub
xchg
xchg
mov
adc
mov
cmp
loopne
lods
mov
sub
sub
mov
xchg
nop
dec
mov
pop
fwait
mov
or
cli
and
mov
fisubrs
decl
and
ret
negb
push
clc
jecxz
js
js
test
lahf
and
mov
mov
and
mov
adc
rclb
jl
fdivrl
pop
pusha
lods
out
movsb
mov
push
fwait
jmp
shlb
cld
leave
into
notl
inc
outsb
inc
das
mov
imul
push
cmp
add
pop
cmp
add
rolb
inc
sub
cmpsb
out
cli
gs
pop
out
loop
mov
fwait
mulb
out
test
inc
jnp
nop
and
movsl
daa
pop
lea
mov
cmp
mov
cmp
dec
mov
adc
in
jns
stos
mov
fmul
pop
mov
and
insb
lods
add
push
push
ds
addr16
sbb
icebp
mov
jno
push
ja
sbb
stc
cmpsb
daa
shlb
jae
pop
das
adc
dec
or
data16
gs
xlat
fdivp
in
and
aad
jns
mov
add
xchg
jns
lret
rcl
lds
inc
mov
jnp
rcl
aaa
xchg
mov
movsl
and
dec
mov
cmp
out
hlt
add
cmpsl
adc
pop
jp
loop
push
sub
mov
out
mov
pop
xchg
stc
xchg
pop
pop
mov
xlat
fcmovu
sti
xchg
sbb
leave
std
cmp
insl
icebp
dec
pusha
test
cmc
aad
add
sub
push
iret
lock
add
sbb
mov
xor
fnstenv
dec
cli
fidivrl
add
add
popf
adcl
ja
add
rol
adc
mov
dec
les
xchg
arpl
cmp
or
test
insb
add
insb
or
roll
les
xor
jnp
pop
dec
xor
mov
in
iret
xor
insb
sbb
add
jp
cmp
sub
scas
shl
sub
sbb
cs
mov
fimull
adc
push
mov
add
add
ljmp
in
aas
shlb
dec
add
mov
inc
xorb
repnz
cli
add
adc
xlat
or
mov
jno
movsb
std
mov
enter
jp
mov
sub
sub
xor
xchg
mov
in
pop
and
call
lcall
test
pop
jmp
add
push
jmp
sbbl
add
jno
lcall
pop
dec
pop
pop
lea
aas
dec
sub
mov
cmpsl
sbb
fmull
jle
lcall
arpl
ror
cwtl
adc
call
loope
fmul
cmp
mov
mov
push
fcmovbe
stos
xor
gs
xor
dec
bound
cmp
push
xor
andb
cmp
imul
cmc
mov
cs
bound
repz
pop
das
adcl
cmp
pop
cld
push
and
jecxz
popa
pushf
inc
push
inc
aad
es
or
addl
mov
push
inc
outsb
mov
fisttpl
outsl
inc
inc
or
inc
outsb
cli
sub
test
add
xchg
mov
ret
mull
pop
mov
cmc
int3
pop
popf
jle
jge
loop
and
lods
test
jmp
mov
outsl
sti
or
imul
fs
pop
hlt
scas
xchg
xor
divl
dec
cmp
das
jnp
cmp
mov
daa
addl
and
loope
xchg
push
mov
jmp
int
xor
imul
inc
cmc
jo
push
clc
inc
sub
jmp
repnz
cmp
jge
fidivl
and
xor
push
xor
adc
mov
cmpsb
cmp
and
push
push
xor
insb
and
add
mov
mov
mov
jp
repz
push
fnstsw
sti
push
sti
dec
vaddsubpd
sub
cmp
mov
ds
adc
and
mov
add
sahf
sub
subl
pop
fisubrl
xor
cli
adc
popf
inc
subl
movsb
mov
jo
mov
dec
test
mov
lret
sahf
inc
fsub
addl
sub
and
int3
inc
jmp
mov
loop
sub
scas
call
es
and
adc
pop
jmp
inc
test
lret
mul
inc
mov
ja
aaa
push
inc
nop
test
in
or
sti
push
jns
or
xor
in
push
in
aaa
mov
cmc
nop
lret
add
sbb
jp
xchg
repnz
out
idiv
mov
ja
mov
unpckhps
out
mov
dec
enter
jle
push
sbb
outsl
sub
scas
dec
jecxz
pop
int
call
fxch
gs
push
leave
fistps
push
fsubrl
mov
xor
stos
loope
mov
imul
fwait
push
mov
xor
test
jb
pop
and
inc
je
insl
ljmp
push
inc
stc
or
mov
or
or
jmp
je
fsts
and
ljmp
mov
cmpsb
xor
push
pop
incl
ljmp
mov
stos
movsl
mov
imul
in
test
and
subb
aam
and
dec
les
mov
sbb
mov
add
mov
test
mov
daa
mov
jb
shr
push
fwait
inc
divps
mov
cmpsl
repz
in
jnp
adcb
push
adc
call
hlt
sar
in
inc
in
fldcw
pop
in
sub
ja
iret
addr16
scas
das
inc
ds
pop
lock
mov
scas
cmp
and
jb
mov
stos
mov
addr16
jl
cmpsl
pop
xchg
loope
call
into
mov
mov
movlps
dec
ljmp
cmc
jns
mov
mov
lds
movsb
jnp
lea
loope
mov
push
std
jecxz
push
ljmp
sbb
loope
or
lea
hlt
cmp
pushf
test
xchg
jnp
cli
xlat
inc
loopne
mov
xchg
push
push
sahf
fs
adc
pop
lret
repnz
lods
inc
fs
pop
mov
push
xchg
cmpsl
cli
insb
mov
mov
shl
mov
popf
pop
mov
mov
or
outsb
hlt
and
or
xcrypt-ofb
cmpsl
lods
insb
mov
lods
pop
jb
test
mov
and
sbbl
clc
test
jnp
call
movsl
notl
sub
cmp
lock
jns
lock
test
inc
ss
mov
rcll
in
sub
addr16
or
jg,pn
mov
cmpb
inc
mov
mov
movsb
into
shrl
adc
xorb
lcall
mov
cmpsb
cld
push
outsb
adc
movsb
out
popf
fwait
adc
arpl
les
into
push
inc
cmp
arpl
movsb
sti
sbb
mov
adc
es
subb
fidivrl
sahf
cwtl
jg
std
mov
push
aam
aad
xor
or
push
int3
jle
gs
cmpsl
mov
out
xor
xor
sub
ss
out
sub
out
mov
cltd
repz
jb
xchg
sub
mov
mov
adc
jns
int
sbb
dec
jnp
xor
stc
pop
xchg
mov
sbb
shrl
xor
mov
and
or
fnstcw
inc
jmp
je,pt
nop
mov
jl
outsb
mov
and
cld
data16
mov
mov
enter
out
pop
xor
loope
sbb
push
mov
push
stos
data16
cmp
test
ret
dec
bound
clc
cmc
bound
xchg
xor
cmpsb
lcall
add
and
dec
push
push
pop
lcall
testb
lahf
xchg
sub
ficompl
out
pop
out
mov
call
xchg
xchg
pop
mov
cltd
in
cs
xlat
mov
addr16
mov
shll
out
pop
xchg
dec
adc
rol
mov
std
std
cwtl
sbb
mov
leave
int3
sbb
imul
nop
test
xchg
push
push
mov
loopne
xchg
je
lret
pop
fnstenv
fidivrl
shlb
inc
ret
pop
sbb
std
inc
out
adc
or
mov
xchg
lahf
imul
das
push
pop
push
loope
imul
mov
cli
jo
lret
je
sub
shr
xchg
and
add
jnp
pushf
je
mov
jne
mov
outsb
and
int
inc
mov
aaa
mov
add
cmp
in
pop
loopne
int
nop
jle
out
lods
stos
lods
xor
mov
inc
or
jbe
inc
adc
or
lcall
cmp
or
in
aaa
cmp
sbb
jle
cwtl
jbe
push
repz
xor
xchg
add
mov
mov
es
ljmp
adc
out
fsub
mov
pop
xchg
add
cmc
dec
sub
enter
mov
push
cld
mov
fidivrl
testl
xorb
jnp
int
jbe
flds
jnp
into
jmp
mov
lret
mov
mov
pusha
imul
xor
adc
lock
or
addr16
or
testl
addb
lcall
cmp
aam
andb
pushf
mov
and
inc
push
push
cli
xchg
fisttpll
or
mov
mov
jmp
lods
js
cmp
in
jb
cmp
lahf
nop
add
jns
pushf
lds
add
inc
std
inc
scas
add
xchg
jne
lret
sub
mov
fsubs
ret
jo
pushf
mov
xchg
dec
loop
adc
xchg
fs
jg
aaa
sti
xor
ret
and
adc
cli
adc
lret
adc
shll
sbb
rolb
arpl
jo
sbb
je
movl
add
xchg
pop
dec
dec
mov
jle
lcall
jg
pop
pop
push
andb
dec
adc
xchg
lret
aas
mov
clc
mov
inc
sahf
xchg
test
sti
or
mov
mov
add
lahf
sahf
pusha
sub
stos
mov
aad
sub
jle
loope
nop
sbb
xor
jo
add
mov
dec
push
je
movb
scas
das
insl
into
xor
xor
mov
xor
jns
jns
data16
pushf
ljmp
inc
cwtl
cmpsl
pop
push
or
addb
xchg
sbb
pop
imul
nop
dec
jbe
adc
insb
shlb
push
nop
dec
mov
aas
push
push
ds
or
loopne
sbb
cmp
or
mov
mov
pop
adc
rcrb
push
cmp
in
movsb
mov
cmc
aad
scas
fnstenv
repnz
xchg
fildll
pop
push
push
mov
cwtl
xor
ljmp
lcall
das
xchg
mov
pop
sbb
frstor
out
sub
mov
or
fistpl
jo
mov
insb
mov
cmp
and
push
jo
test
movsb
jecxz
clc
dec
outsb
lret
xor
loope
in
adc
push
test
shll
lea
mov
dec
daa
lea
fnstenv
mov
clc
cmp
pop
sbbl
jecxz
sbb
rolb
push
aaa
or
jl
imul
test
lods
add
aaa
bndldx
mov
hlt
iret
push
sti
out
leave
xchg
lcall
aam
mov
js
ficoml
adc
or
sahf
cld
cs
bound
popa
test
cli
xor
or
xchg
jmp
jmp
hlt
int3
fisttpl
icebp
mov
ficoms
mov
add
cmp
add
lods
data16
shl
sarl
pusha
cmp
jecxz
call
fisttps
push
aaa
icebp
incl
fistpl
adc
ds
jecxz
sbbb
aaa
movsl
mov
cmp
add
add
push
dec
sub
or
jmp
sbb
and
rorl
add
sub
scas
mov
cld
aas
lcall
ljmp
add
leave
jo
cld
in
ljmp
mov
xchg
jbe
bound
in
das
loope
cmp
fwait
xor
jne
mov
fldenv
xor
imul
mov
adc
add
dec
fsubs
out
ret
mov
mov
mov
push
and
xchg
aaa
pop
test
orl
xchg
test
pop
lahf
jno
out
or
push
cmpsb
jo
inc
adc
and
sarb
mulb
js
add
pop
loop
movsb
insb
pop
test
lret
dec
jle
in
xchg
add
push
sub
mov
mov
jp
ds
jg
iret
xchg
ss
add
dec
jo
test
jecxz
pop
pop
int
test
xor
mov
mov
fs
fstpl
cs
ret
or
jo
jle
xchg
dec
in
aaa
pushf
test
xchg
or
cmp
pop
out
stc
out
out
sub
xchg
and
push
jmp
and
xchg
and
movl
mov
nop
push
sarl
lock
movsl
pop
inc
les
sub
inc
push
cmp
push
lea
mov
xlat
jl
das
sub
ja
ret
sbbl
inc
lcall
or
andb
jecxz
jmp
adc
cmp
jo
fcoms
lea
addb
cmp
adc
inc
xor
or
cmp
popa
int
xlat
inc
mov
movsl
mov
cmpsb
push
push
cmp
jg
cmp
dec
cli
pop
and
cmp
scas
cmp
sub
xor
ret
fildl
mov
lcall
inc
adc
pop
cmpsb
dec
cmpsb
lahf
mov
add
lds
stos
pop
adc
mov
aas
jae
adc
cli
push
mov
xor
mov
outsl
lock
mov
inc
xchg
jg
adc
add
mov
lds
leave
aam
stc
mov
rep
mov
pop
imul
add
cmpsl
inc
inc
out
scas
pop
enter
pushf
loopne
jbe
jno
dec
test
dec
stos
xchg
pop
cmp
test
insb
in
mov
cmc
out
ds
test
inc
fcoms
cmp
imul
lods
shrb
andb
lahf
cmp
std
fildll
fistpll
scas
push
and
fidivs
lahf
dec
andb
mov
jne
sbb
push
inc
leave
sbb
ret
mov
dec
push
jmp
xor
stc
aas
call
xchg
int
mov
jns
inc
lea
js
pushf
or
int
loope
cmp
notb
addl
and
add
and
xchg
or
stc
movsl
in
fcmove
int
adc
sub
mov
cmpsl
xlat
lds
adc
cwtl
push
xor
xchg
sarb
ds
iret
nop
and
out
sbb
sbbb
je
out
mov
mov
pusha
rol
frstor
test
add
jmp
adc
push
ret
dec
clc
mov
rorl
mov
add
sti
arpl
pop
popa
ret
stos
out
push
sti
fcompp
inc
add
stos
int3
insl
faddp
stc
in
mov
inc
enter
dec
jl
sbb
sbb
xlat
inc
aas
push
gs
lret
ds
enter
jne
sbb
jg
jle
dec
pop
cmpsl
adcb
xchg
pop
stc
fsubrp
inc
mov
ret
cmc
mov
xlat
push
jmp
jle
push
mov
fisttpl
mov
movsw
xor
ss
pushf
or
sti
outsl
faddp
pop
sbb
clc
cmpsl
or
mov
lret
repz
jns
mov
in
lods
daa
andl
and
mov
xlat
xor
jg
ljmp
mov
sub
sbb
jecxz
cwtl
orl
jne
hlt
adc
fs
mov
mov
mov
push
cmc
fbstp
jbe
jl
mov
stc
xchg
mov
ljmp
add
mov
or
in
xor
cmpl
sti
pop
pop
rcr
cmp
cld
ss
test
cmp
out
in
or
movq
pusha
cmp
fcmovbe
fisttps
mov
outsb
cmp
imulb
pusha
dec
push
mov
or
js
in
lret
inc
jae
mov
cmp
aad
hlt
ret
daa
sti
insb
test
dec
inc
fnstcw
xchg
dec
mov
outsl
dec
icebp
cmp
jmp
test
cmc
push
cmp
xchg
mov
adc
shrl
jo
and
cmp
dec
aad
mov
mov
push
jmp
mov
loopne
push
hlt
push
jp
sub
inc
mov
movsl
popf
int3
sbb
and
inc
xlat
xor
push
mov
sti
sahf
es
jnp
jnp
xchg
aas
inc
mov
outsl
xor
inc
inc
fdivrl
adc
popf
dec
jle
sub
adc
dec
mulb
ja
aas
sahf
cmovge
cmpsl
pusha
sbbb
push
jae
into
jno
push
adc
xor
inc
rcrb
or
into
insb
fmuls
jo
leave
xchg
pop
rol
test
mov
in
inc
jns
mov
mov
subb
inc
je
subb
ret
leave
frstor
xchg
mov
push
leave
ret
lret
mov
or
jns
loope
add
sarb
mov
int
scas
xchg
stc
xchg
cmp
scas
mov
paddsw
arpl
popa
jae
mov
out
cmp
push
push
fcoml
inc
mov
push
xchg
push
iret
add
mov
dec
adc
pop
ret
push
in
mov
pop
adc
test
jmp
xor
imul
or
sub
mov
mov
cld
dec
xchg
iret
cld
mov
push
pop
inc
sub
push
sub
pop
sub
add
inc
push
xor
and
orl
mov
fidivrs
outsb
adc
out
scas
stc
or
in
gs
addr16
add
add
es
or
sbb
inc
fdivr
cs
cmp
outsb
adc
in
sbb
outsl
pushf
bound
cltd
imul
sti
iret
jo
mov
orb
adc
sbb
cmp
jge
mov
addr16
pop
sbb
adc
out
aad
sahf
addb
adc
mov
jo
out
mov
sbb
jg
adc
xor
push
sarb
sbb
cmp
and
sub
int3
shll
xchg
or
bound
test
cli
jl
and
bound
insl
dec
lea
lods
mov
xchg
pop
pop
sbbl
lea
jle
fidivrs
psrld
lods
addr16
pop
mov
cld
mov
cmpl
adc
loope
or
adc
lahf
add
cmpsb
push
insl
ja
lcall
xchg
pop
push
movhps
repz
dec
jae
mov
add
mov
xchg
mov
mov
jb
xor
int
pop
adc
adc
xor
cmpsb
mov
and
idivl
sub
push
and
loop
pop
das
add
sbb
inc
dec
das
mov
arpl
ret
aad
push
testb
out
jg
lret
mov
cli
xchg
push
and
sub
pop
adc
xchg
std
add
in
inc
jae
popf
adc
dec
xchg
lret
pop
popa
lods
mov
xor
mov
inc
or
aad
cmpl
in
arpl
es
push
push
pop
fdivrs
push
aas
dec
inc
int3
jmp
sub
push
aad
jecxz
jmp
jmp
cli
arpl
jae
adc
push
enter
cmc
and
adc
pop
pop
dec
xchg
xchg
mov
mov
and
adc
mov
cmp
ljmp
mov
cmp
mulps
shl
ja
sbb
mov
pushf
adc
sarl
shlb
xchg
inc
jnp
mov
mov
and
jb,pt
es
icebp
inc
in
pop
subl
adc
sub
cmp
or
call
lcall
out
pop
jg
roll
pop
popa
cmpsl
and
jnp
jl
and
popf
add
jns
cmp
push
mov
sbb
lret
xor
outsl
dec
stos
lahf
cwtl
xchg
inc
out
pop
call
push
lahf
and
out
sarl
jle
and
lods
stos
ficoms
pop
xor
icebp
lcall
je
inc
xor
addr16
in
xchg
inc
jb
inc
sub
mov
cmp
ffreep
push
cmp
lock
adc
std
insb
adc
adc
stc
cmp
xchg
jnp
push
jo
adc
fidivl
or
inc
gs
adc
out
pop
xabort
xor
xor
movsb
ds
jb
add
inc
lret
scas
mov
push
pop
push
push
rcr
data16
ret
int
add
pop
jmp
xlat
xlat
add
ficoml
pop
daa
mov
pop
ljmp
test
jle
ljmp
test
jno
adc
xchg
push
std
pushf
xchg
jmp
out
and
call
push
cmp
jle
mov
out
dec
pusha
shrb
push
stos
xor
adc
fwait
jl
jae
cmp
adc
cmpsl
xchg
jg
push
nop
lret
jnp
iret
shl
jg
mov
or
xchg
jmp
xchg
data16
dec
dec
xchg
sbb
mov
iret
push
push
cmp
inc
push
hlt
sbb
pop
mov
fnstsw
adc
push
pop
add
std
je
jmp
jbe
fdivs
test
lods
ja
fmuls
mov
jge
sub
cmp
mov
push
push
out
insl
add
xor
adc
xor
xchg
jmp
pop
jno
and
push
add
les
push
idiv
mov
and
scas
and
jl
push
mov
xor
or
es
push
lret
adc
lods
mov
push
pop
scas
lahf
jbe
jge
mov
in
aam
rcr
icebp
jl
aad
aad
jecxz
sbb
lahf
jns
add
add
icebp
aas
insb
pop
mov
aad
or
pop
notl
hlt
or
adc
jae
push
mov
or
repz
xchg
inc
data16
iret
test
clc
test
push
loopne
clc
dec
cltd
into
sarl
xchg
popf
sbb
add
stc
ss
ret
adc
addr16
lcall
dec
test
mov
lahf
jle
add
jns
push
test
cltd
adc
fstpt
cmpsl
shlw
cmc
loopne
jge
xor
and
push
jae
pop
xlat
sti
loope
or
pop
out
adc
mov
cwtl
xor
mov
mov
mov
xorl
aam
sbb
cmp
xor
int
dec
fwait
pop
push
push
ja
cmp
xor
adc
jo
mov
inc
pop
inc
or
out
insb
pop
and
pop
push
xchg
or
lret
mov
jmp
jbe
into
sbb
dec
sub
push
bnd
mov
inc
mov
cmc
mov
xor
repnz
push
xor
inc
mov
push
leave
fildll
sti
xor
nop
ljmp
mov
out
jecxz
clc
ret
push
sub
arpl
fisttpl
mov
hlt
inc
in
push
lods
icebp
and
jb
inc
addl
push
sbb
daa
xchg
shrb
mov
sti
ss
je
enter
nop
inc
or
out
mov
dec
aaa
out
jno
push
mov
mov
cmp
test
cmp
mov
inc
xchg
or
mov
inc
add
mov
imul
inc
or
and
cltd
mov
mov
adc
insb
xchg
jbe
pop
sahf
and
adc
push
stc
popa
rorl
add
add
and
sti
imul
adc
sub
aam
je
push
mov
sbb
cmp
test
add
push
jg
int
fildll
and
pushf
das
mov
mov
and
inc
mov
lcall
jae
addb
lock
fstp
add
cs
outsl
mov
xor
cmpsl
mov
add
adc
push
fwait
nop
rcrb
mov
xor
dec
mov
inc
push
imul
or
push
xlat
adc
push
mov
cmpl
push
and
pushf
xchg
cmp
lret
call
mov
fstp
pop
mov
sahf
jns
fidivrl
add
xor
test
cmc
jle
jmp
dec
divl
and
cmp
sub
or
out
cmp
negl
outsl
inc
sbb
sub
cltd
inc
shlb
and
push
or
lcall
push
cmpsb
pop
xchg
mov
pop
ror
mov
mov
aam
xchg
fnstcw
aad
adc
mov
add
movsl
cmp
pop
stos
mov
pushf
out
sahf
aad
out
ja
js
xor
mov
fnstcw
enter
xchg
lods
sbb
sbb
arpl
cmp
pop
adc
push
xor
es
adc
jge
push
mov
jne
insb
lret
mov
bound
popa
lock
and
repz
pop
inc
push
lock
adc
test
je
lcall
add
xchg
pop
cmp
sub
or
jmp
fmull
out
jecxz
imul
mov
orl
mov
mov
inc
stos
sbb
or
bound
lds
aaa
dec
and
push
jae
fxam
sub
push
movsl
aaa
inc
inc
push
cltd
sbbb
or
xor
mov
addr16
and
jg
xor
jno
inc
aaa
orb
dec
mov
cmp
mov
fdivr
mov
stos
divl
in
xchg
shll
mov
add
dec
push
add
ret
ljmp
pop
sub
cltd
imul
cmpsb
test
dec
xchg
iret
aad
xor
insb
cld
cli
call
dec
daa
sti
loopne
push
bound
pop
cli
xchg
xor
and
int3
movsl
stc
jns
shlb
jnp
rcr
gs
lock
ficoms
fsubrs
pop
aaa
mov
lcall
or
lea
das
shr
imulb
jns
insl
push
lock
add
fdiv
mov
mov
sbb
sub
bound
adc
in
lea
ds
lahf
stos
test
dec
jp
lahf
push
das
testb
adc
bound
inc
dec
icebp
sbb
jbe
sbb
rcrl
xlat
adcb
or
pop
mov
rcrl
push
mov
stos
scas
cmp
and
rcrb
clc
ficoms
addr16
jno
push
loope
mov
out
push
addr16
xchg
div
jge
push
repnz
aam
mov
addr16
push
mov
pop
add
popf
inc
sahf
dec
add
dec
cmp
iret
clc
in
inc
cmp
aam
mov
inc
inc
push
shrb
in
pusha
pop
rolb
fdecstp
iret
pop
sub
arpl
cmp
out
pop
sub
ss
out
into
dec
mov
popf
and
int
icebp
out
je
popf
dec
test
repnz
aaa
xlat
jecxz
sub
repz
das
shll
dec
xchg
and
hlt
jp
shll
mov
insb
fnstsw
movsl
cmc
dec
mov
leave
sub
imul
inc
adc
movsb
repz
into
sub
shr
and
inc
addr16
fistl
adc
test
imul
negb
sbb
or
xor
call
cmp
in
idivl
inc
test
sub
mov
mov
popa
insl
leave
xchg
call
mov
and
sub
lahf
sub
stc
pusha
dec
and
fmull
out
xor
sub
mov
sbb
sbb
xchg
and
inc
adc
mov
fldenv
add
fildl
dec
iret
pop
jno
mov
out
in
shrb
test
push
shrl
cmpsl
enter
and
in
pop
cmp
stos
pminsw
pusha
stos
jbe
imul
movsl
sub
js
bound
cmpsb
pop
aam
incl
xlat
lcall
dec
mov
dec
dec
mov
mov
dec
pop
sahf
lods
xor
shlb
and
inc
clc
stos
xchg
push
pop
fwait
bound
mov
xor
sahf
daa
mov
pushf
xchg
lods
daa
push
in
sub
fdivr
sarl
sub
cmp
adc
inc
jg
sbb
js
jmp
and
dec
xlat
mov
jg
je
in
xchg
sbb
cld
jnp
js
dec
popf
mov
cmp
jp
add
bound
inc
cmp
xchg
xchg
xor
cmp
jb
adc
and
push
mov
dec
or
imul
sbb
pusha
mov
out
lahf
std
xor
ret
sub
sbb
mov
scas
pop
sbb
ljmp
push
sbb
add
loope
push
cmp
lods
cmp
push
push
jne
insb
nop
pop
mov
jle
shrl
shrl
sbb
les
jmp
test
jmp
inc
es
aam
jl
dec
out
enter
outsl
dec
add
ret
repz
jne
in
sbb
pop
cmc
adc
cltd
fwait
push
je
movsl
pop
pop
into
cmp
push
insb
inc
jae
and
cmp
dec
jecxz
push
dec
sbb
or
cmp
jecxz
push
into
cmpsb
stc
jnp
aaa
mov
pop
adc
and
adc
xor
iret
rolb
mov
xlat
push
dec
mov
out
je
jp
ret
and
in
mov
pushf
xchg
fwait
and
pop
and
hlt
in
insb
ret
inc
xchg
out
test
stos
aad
pop
je
and
fsts
das
stos
pop
movsb
lds
cmc
adcb
int
xor
inc
add
outsb
adc
fidivrs
cmpsl
in
int3
sbbb
int
adc
test
pop
insl
cwtl
cmp
addr16
cltd
push
cmp
rcll
fisttpll
inc
push
in
lret
cmpb
inc
mov
pop
or
pushl
pop
pop
popa
mov
dec
or
mov
icebp
stos
add
idivb
mov
fidivrs
xor
std
jo
mov
dec
push
jmp
xchg
gs
jle
iret
mov
fidivrs
mov
cmp
rorb
loopne
dec
test
or
pop
xchg
and
adc
cmc
fistpll
sub
fdivrl
cmpsb
icebp
in
leave
imul
std
mov
aas
aaa
stos
lret
add
movl
xchg
cmp
mov
sub
sub
in
arpl
add
or
and
mul
cmp
in
xor
inc
xor
add
outsl
scas
push
jno
jle
out
push
jb
std
sbb
cmpsl
dec
xor
push
movsl
and
xor
mov
pop
fwait
jnp
aas
dec
jno
in
mov
aaa
dec
mov
push
push
inc
sahf
clc
xchg
cld
imul
xor
xchg
out
jae
imul
inc
xchg
aas
xlat
and
push
mov
push
mov
movsb
inc
ljmp
shlb
xor
sti
jge
xchg
outsl
pop
inc
gs
popf
xchg
sbbl
xor
mov
sub
jge
mov
hlt
jae
dec
sub
sbb
int3
mov
mov
sub
push
inc
adc
and
inc
add
out
cld
out
call
mov
jno
and
shlb
loope
mov
mov
dec
sub
icebp
sub
rcrb
lret
insl
movsl
cmc
jecxz
lock
jb
cmp
push
std
cmc
xchg
inc
mov
adc
fwait
je
push
pusha
jmp
lahf
faddl
push
jge
sbb
pop
dec
movsl
ja
jb
push
out
xchg
subb
xchg
jmp
adcb
in
subl
fwait
lods
out
data16
stos
fmuls
mov
cmpsl
mov
push
nop
lcall
pusha
das
mov
out
mov
shll
addr16
lret
jnp
or
xchg
cmp
mov
jge
outsb
fld
mov
jmp
loop
data16
xor
mov
and
out
ja
ds
adc
pop
es
mov
jmp
ss
xor
std
push
jge
mov
xlat
les
adc
sbb
adc
xchg
cmp
mov
add
cmp
nop
sub
aad
mov
fmuls
mov
push
cmp
inc
test
mov
or
sub
adc
push
push
enter
or
mov
xchg
js
js
pop
push
fwait
jp
pop
jecxz
sub
push
xchg
rcrb
stc
inc
push
add
cmp
jge
adc
mov
je
adc
repz
cmc
inc
xor
popa
pop
mov
mov
das
mov
ret
adc
rcll
repz
add
dec
cmpl
ret
aad
and
jmp
je
dec
and
sbb
std
mov
movsb
sub
pop
mov
dec
addb
imull
mov
mov
pop
jae
or
and
mov
cmp
insb
mov
add
xchg
mov
sbb
xchg
sub
push
cmp
shl
js
mov
icebp
push
sbb
faddp
sar
das
inc
xorl
xor
test
jecxz
sub
pop
cmpsl
mov
jb
sbb
cmp
add
inc
pop
mov
cmp
daa
ret
test
dec
fldl
adc
mov
out
add
pop
roll
mov
jbe
pop
push
scas
jle
push
test
out
push
test
call
mov
shll
adc
fidivrl
pop
or
jb
imulb
push
adc
sbb
inc
in
stos
pop
push
pop
nop
push
inc
inc
test
jae
ret
mov
or
jnp
or
sbb
pop
adc
push
mov
mov
mov
push
push
daa
sub
mov
xchg
testl
or
pop
int3
iret
push
jno
sub
inc
ss
movsb
or
push
imulb
mov
sbb
jnp
stos
sub
pop
popa
sub
fstps
push
fildll
cmpb
pop
fwait
sub
mov
cwtl
inc
push
es
or
push
cmp
and
or
pop
lret
aaa
xor
lds
rcr
pop
andb
sbb
pop
incl
imul
mov
push
or
or
add
jnp
lcall
or
pushl
aaa
addr16
into
movb
adc
jo
jb
mov
adc
insl
sub
out
push
leave
adc
lret
pop
insl
jno
dec
ret
xor
push
stc
push
jle
int
movsl
inc
int
xchg
jns
cmp
gs
leave
mov
in
cs
mov
stos
push
pop
push
scas
clc
subl
lods
repz
cs
aas
sbb
sbb
sbb
push
leave
lea
inc
xchg
sbb
rorl
dec
je
imul
data16
imul
sub
loope,pn
sarl
xchg
xchg
push
test
xchg
sbb
add
cmpsl
xchg
inc
push
pop
push
mov
int3
mov
insl
in
das
shll
insb
lods
movsl
imull
call
dec
jg
cwtl
nop
pop
repz
push
outsl
sbb
cmc
faddp
stc
pop
jne
notl
sti
pop
or
cli
shlb
and
cmpsb
pop
adc
sbb
lret
lret
getsec
xchg
inc
test
mov
adc
in
movsl
imul
dec
cmpsl
xor
xchg
inc
clc
test
fwait
xchg
lret
lods
nop
js
adc
push
sbb
pop
xor
mov
push
or
mov
lret
sarl
sti
out
push
lock
bnd
or
cmp
sbb
push
dec
ljmp
or
test
addr16
rcrb
sar
jns
dec
xor
push
mov
mov
into
hlt
pop
cmpsl
mov
jnp
outsl
into
lds
hlt
push
iret
outsb
loop
mov
pop
cmovle
dec
mov
aaa
stos
mov
mov
inc
mov
mov
mov
adc
or
bound
in
mov
sub
cmpb
leave
cmc
jecxz
out
add
cmp
leave
jo
adc
push
loopne
push
jbe
add
mov
subb
out
repz
mov
jns
mov
out
add
mov
mov
popa
cltd
adc
jb
jno
lea
ret
xor
mov
xchg
outsb
ret
sub
mov
fcmove
sub
xor
dec
xor
jp
je
out
push
sbb
push
sub
jo
int3
mov
pop
push
clc
andl
sub
sub
gs
xor
test
mov
jecxz
mov
enter
xor
sbb
aad
call
jg
adc
sub
cmp
or
gs
jae
xchg
inc
sub
inc
cmp
movsl
and
int
mov
sub
subl
push
popf
out
push
lds
fwait
test
fisttpl
mov
out
xchg
jbe
pop
mov
enter
testb
xchg
cwtl
pop
xor
mov
xor
mov
scas
cmp
add
aam
popa
mov
sti
cmp
es
pop
call
dec
dec
xchg
pop
inc
push
push
hlt
adc
or
icebp
xor
lret
pop
add
jge
jne
mov
pop
sbb
lahf
andb
outsb
cmp
sbb
daa
out
test
mov
fldt
lahf
mov
jno
lret
add
sahf
rol
imull
roll
jmp
dec
enter
mov
xchg
shl
dec
or
mov
sub
roll
cmp
popa
dec
je
push
adc
lahf
dec
orb
add
sbb
lods
sub
push
cmp
dec
sahf
mov
enter
cld
mov
push
pop
cmp
push
push
cltd
mov
lret
adc
or
clc
bound
pushl
bound
pop
pushl
in
int
mov
cmp
mov
lret
std
aas
or
jb
fs
js
xchg
lret
jmp
mov
cli
jae
jmp
pop
in
jno
call
mov
push
xor
lret
mov
cmp
std
inc
jmp
test
addr16
icebp
mov
xchg
pop
loopne
pop
jb
adc
in
out
sbb
js
xor
mov
pop
adc
add
sbb
stos
cwtl
lret
inc
mov
sub
xor
add
mov
sbb
or
es
outsb
push
inc
and
sub
lods
jnp
arpl
adc
sub
push
ljmp
push
jno
and
leave
shrb
cwtl
icebp
jl
fdivrs
add
and
and
lds
call
push
pusha
popa
sti
mov
jnp
pop
xor
cld
stos
mov
sbb
or
push
dec
testb
imul
jecxz
xchg
add
or
in
push
sti
fisubl
scas
les
push
aas
dec
iret
pop
mov
jno
inc
and
shlb
ret
mov
mov
jne
adc
push
jl
pop
sbb
insl
mov
leave
aaa
pop
xchg
inc
pop
sub
pop
fs
xchg
push
xor
sbb
jecxz
and
inc
mov
cmc
std
jg
mov
outsb
movsb
test
iret
ror
mov
enter
addr16
in
movsb
shr
dec
dec
roll
mov
inc
repnz
pop
jle
or
and
stos
push
test
dec
dec
jne
mov
cmpsl
in
sub
adc
in
push
repz
leave
push
pop
pop
xchg
jge
mov
add
mov
dec
push
lock
mov
dec
sbb
jb
fstl
or
les
roll
add
inc
jle
push
mov
out
outsb
push
sbb
pop
mov
mov
add
pop
mov
mov
pop
out
mov
outsl
pop
add
pop
add
adc
das
incl
pop
int
jbe
xchg
std
jmp
imul
add
pushf
xchg
and
push
or
cmp
pop
daa
xor
adc
scas
jg
inc
hlt
nopl
or
loopne
int3
test
in
xchg
push
dec
and
lahf
push
push
jnp
push
je
mov
sbb
jp
xchg
sti
int3
imull
inc
call
lea
pop
testl
into
popf
loopne
sub
cmpsl
add
rcrb
mov
add
mov
dec
xchg
adc
and
fmull
enter
fs
xchg
and
sub
clc
fistl
scas
or
mov
xor
inc
loop
dec
addl
xchg
or
mov
sbb
lods
aaa
dec
xchg
daa
jne
and
mov
jae
jmp
jge
cmpsl
movsb
mov
dec
jo
pop
sub
pop
mov
push
or
mov
add
stos
dec
inc
add
test
adc
clc
leave
xor
cmc
xor
stos
lods
push
push
daa
cmp
mov
mov
test
xchg
mov
jle
cmp
data16
dec
test
push
sub
add
inc
insl
xchg
lods
xor
or
push
pop
scas
jp
push
stc
gs
pop
rol
cltd
pop
gs
mov
xor
scas
into
divb
aad
cmp
cltd
cwtl
xor
sbb
lcall
cltd
loop
jae
sub
fmull
movsb
dec
test
mov
adc
push
jg
in
and
jo
je
or
pop
aad
cmp
rolb
insl
mov
jns
rorl
mov
mov
push
and
aad
add
push
int3
or
popa
pop
add
fdivs
test
leave
jl
pop
test
pop
mov
pop
mov
imul
mov
adcl
sub
mov
mov
pushf
test
jmp
cwtl
loopne
loop
inc
xchg
inc
and
xor
push
jg
in
aam
pop
fidivrs
cwtl
test
ja
xchg
jl
ja
jmp
jns
cmpsb
mov
jl
popa
jmp
fimuls
jecxz
mov
lods
stc
sarl
sbb
cmp
clc
add
dec
inc
mov
fisttpl
leave
inc
movsb
sub
ds
rcrb
jmp
aad
pop
push
aam
or
mov
in
test
push
orb
and
sub
movb
jns
sbb
adc
lock
popl
xor
add
mov
aad
repz
stc
movsl
pop
pop
mov
sbb
scas
cwtl
mov
mov
testl
cmpsb
call
rclb
roll
shl
mov
and
xlat
mov
inc
mov
std
loop
rcl
add
mov
xor
inc
push
cmp
fs
xor
enter
and
jl
xor
js
sbb
push
mov
xchg
out
push
cltd
lods
mov
jl
fists
push
jle
dec
push
pop
loope
sbb
rolb
pop
inc
xchg
push
je
mov
ficomps
dec
filds
pop
jb
cmp
aad
add
outsb
jg
xchg
ljmp
push
fwait
xchg
or
sahf
les
or
mov
push
sub
ret
inc
inc
rorb
sub
push
das
out
fcomps
xchg
sub
int3
sar
or
cmp
mov
sbb
test
cmc
movsb
and
or
mov
push
mov
dec
fwait
adc
pusha
stos
dec
xor
fldcw
jmp
and
in
pop
push
repnz
and
in
stos
jne
xchg
mov
sbb
sub
mov
pop
std
cmp
jbe
cwtl
mov
and
lock
push
pop
push
mov
fnstcw
loopne
ror
jb
push
pop
push
xor
jge
push
pop
aaa
mov
xchg
roll
xor
sbb
aas
sub
mov
outsb
sbb
test
out
lds
inc
ret
pop
xchg
cmp
dec
xor
add
fists
cmp
in
imul
test
jo
or
jno
mov
cmpsl
lahf
idivb
push
call
mov
pushf
and
xchg
jo
jg
scas
cmp
push
or
ss
fmull
inc
aad
in
xchg
shrl
jbe
faddl
fsubrl
data16
adc
mov
aas
or
add
imul
add
test
je
data16
sub
lds
inc
in
sti
sub
jmp
lock
sti
mov
mov
xchg
fwait
inc
jbe
inc
mov
out
lahf
test
sub
nop
nop
push
cmp
mov
in
js
sbb
mov
xor
mov
fdivl
sub
int3
cmpb
pop
sbb
sbb
stc
cmp
xchg
and
std
sub
dec
xor
sbb
xchg
xchg
sbbb
push
test
sub
cli
hlt
add
xchg
leave
push
or
pop
pop
dec
in
lea
ficoml
mov
xchg
push
aas
jnp
int3
ljmp
xor
imul
jle
subb
mov
subb
inc
xchg
ficomps
sbb
and
jno
mov
sub
fisubs
inc
push
inc
mov
xor
cmpsl
xor
out
push
xchg
push
lahf
repz
out
mov
ror
sahf
ret
sbb
std
sub
cmc
inc
adc
dec
cltd
push
inc
clc
sbb
xchg
mov
out
dec
lds
add
out
mov
inc
jne
loopne
add
add
setb
jmp
test
mov
push
mov
jmp
sub
or
out
dec
adc
mov
stc
mov
clc
cli
pop
test
mov
leave
push
dec
fs
push
test
cmp
insl
pushf
adc
out
mov
mov
sbb
addl
rolb
dec
mov
jne
icebp
popf
push
sbb
sbb
lahf
add
ss
out
adc
leave
test
sbb
mov
push
sbb
setb
imul
fucomi
scas
dec
pop
mov
adc
sub
cmp
jg
push
mov
arpl
mov
repz
lods
jg
pop
popf
adc
into
ret
fildl
mov
push
mov
cmpsl
ret
outsb
movsl
add
pop
sbb
lods
pop
cmp
int
js
out
cmc
pop
cmpsb
outsl
pusha
sub
in
les
adc
mov
stos
enter
loope
cmp
jg
clc
clc
xor
xchg
dec
and
push
sahf
dec
cmp
outsl
add
or
sahf
sbb
ret
mov
popf
das
add
std
stos
xchg
mov
dec
pop
jg
les
std
inc
pop
inc
xchg
xchg
adc
sbb
mov
imul
mov
xchg
scas
ss
test
pop
ljmp
push
push
mov
pop
add
in
adc
or
and
mov
add
cltd
subl
jb
dec
fsubl
out
inc
dec
dec
repz
clc
repnz
xor
pusha
sbb
int
xchg
sar
rcll
mov
push
mov
ret
push
and
dec
mov
adc
lods
or
enter
loopne
mov
jle
xchg
cs
ds
lcall
popa
jnp
fistl
add
sub
mov
mov
in
gs
imul
mov
cmp
cmpsb
cmc
repnz
js
inc
jg
push
into
in
or
sbb
f2xm1
inc
jno
cmp
mov
jb
pop
push
push
cmpsb
enter
fcoml
dec
ret
vandps
xor
sti
lods
shlb
dec
in
jbe
int3
lds
insb
add
xchg
push
stos
mov
rorb
hlt
daa
mov
cmpb
pop
jecxz
mov
aas
aaa
fadds
xor
adc
pop
inc
andl
add
sarb
cmp
push
out
shll
xor
popf
dec
inc
test
imul
mov
ds
imul
jae
sub
adc
pop
xchg
insb
mov
ds
enter
cmpb
shrb
mulb
jns
push
mov
stos
push
mov
pusha
popa
inc
cmp
jle
push
sbb
and
ret
lds
mov
fiadds
bound
repnz
in
xorb
pop
add
popf
sbb
cmp
push
lcall
std
cmc
outsl
fcomp
fdivs
sbb
xchg
xchg
mov
sbb
mov
push
mov
mov
xor
adc
loope
fidivl
mov
ljmp
and
xor
cmp
cmp
sub
cmp
leave
movsl
shll
push
add
jno
shll
rolb
clc
dec
shll
idiv
js
pop
and
and
xor
jecxz
fidivs
insl
cmpsl
cmp
inc
test
insb
insl
lret
out
jmp
ja
popa
jo
les
inc
mov
out
mov
scas
mov
mov
lahf
sub
jo
xchg
mull
sub
aad
push
cmp
out
add
leave
test
pop
push
mov
orl
mov
xor
movsl
jo
dec
and
insb
pop
sub
ret
and
and
push
loopne
setbe
mov
mov
repnz
and
js
ss
popa
xor
fnsave
in
pop
fs
ljmp
test
in
cmpsb
mov
add
hlt
leave
dec
aam
mov
pop
mov
inc
xor
adc
and
stc
mov
es
cmp
dec
out
adc
pushf
js
scas
and
xor
in
pushf
into
push
mov
int
cmpsl
stos
xchg
popa
push
mov
rclb
daa
std
call
cmpsl
lock
les
lahf
aam
ret
call
pusha
das
ja
insl
xchg
mov
shll
repnz
or
mov
imul
push
lods
jbe
test
add
mov
xor
cmc
imull
cmp
jno
fimull
push
xor
mov
inc
aad
xchg
cmp
and
jmp
sbb
lods
jecxz
or
rcll
scas
jbe
add
int3
push
jp
jns
or
sbb
stc
aas
and
enter
jo
loop
cmp
clc
xor
data16
mov
lds
add
loop
gs
add
mov
popa
adc
imul
nop
add
adc
aam
push
add
adc
mov
data16
add
fisubl
mov
dec
fstpl
xor
aas
jg
sahf
adc
scas
jae
push
adc
scas
adc
rcl
dec
and
rorb
out
cmp
sub
and
loope
push
loopne
cli
xor
fadds
outsl
mov
xor
addb
mov
inc
dec
pop
mov
mov
fwait
xlat
push
scas
shlb
xchg
sbb
inc
xchg
aad
mov
clc
jo
mov
sub
dec
sbbl
push
jnp
push
mov
test
ss
mov
int
shrl
lret
pushf
push
or
mov
inc
push
sti
nop
ljmp
pushf
sub
xorb
outsb
in
and
int3
sarl
scas
push
xor
daa
ficoml
or
sub
and
loop
dec
insb
inc
xchg
fdivrl
and
jge
sahf
stc
inc
cmp
mov
jb
xchg
push
outsl
lea
dec
push
lahf
shrb
fisubs
jle
xor
mov
xchg
mov
stos
xor
testl
mov
insb
rol
jge
inc
inc
orb
mov
outsl
push
outsb
cmp
jns
jecxz
mov
js
lcall
mov
and
xchg
ficoms
cli
insb
in
pop
mov
dec
int3
or
lods
jae
cmpsb
push
daa
lods
loopne
jp
daa
sub
and
adc
cmpsl
and
insb
in
outsb
xlat
cmp
fcmovu
repz
cmp
into
mov
add
aaa
xchg
push
pop
fwait
loop
ss
test
lock
std
sbb
mov
rorl
lea
rcrl
dec
movb
pop
jp
mov
popa
andl
addr16
cmpsl
popa
push
and
sbb
out
cli
das
ret
push
lds
mov
sub
jb
cmc
add
cld
or
jp
test
call
and
xor
cli
ljmp
idiv
add
fucomip
add
or
mov
inc
cmpsb
jmp
jo
fwait
push
or
outsl
mov
cwtl
adc
dec
cmp
pop
dec
dec
xchg
aad
jmp
mov
scas
sbb
sbb
sahf
out
xor
es
push
push
xor
push
cli
ret
push
push
push
pushf
add
push
xchg
mov
pop
fcmovbe
je
jge
add
rorb
mov
arpl
push
xchg
shll
fistl
push
jmp
lret
popf
mov
popf
push
adc
rcr
adcb
in
decb
stc
jg
ficompl
adc
dec
fwait
out
mov
jle
je
inc
ja
mov
and
pop
mov
sub
dec
or
test
bswap
mov
and
or
jno
sub
jmp
jo
cmpsl
aam
ljmp
shll
lds
xor
xchg
cmp
frstor
imul
fnstenv
loopne
std
xor
fadd
mov
jns
ja
xrelease
mov
sub
sbb
push
bnd
int3
aaa
cmpsl
xor
push
pop
cmp
mov
cmpsl
ds
ret
inc
pop
dec
fs
gs
fldln2
scas
fimuls
push
jmp
and
test
pop
pop
lods
mov
fs
lcall
pop
sahf
push
leave
push
pandn
mov
jecxz
inc
mul
rolb
sbb
es
ret
fimull
enter
jl
adc
jg
push
rol
pop
lahf
arpl
sub
cmp
cmp
jmp
inc
je
gs
cmovb
mov
mov
push
fistpl
test
pop
dec
arpl
shl
dec
insb
add
xadd
and
sub
jo
adc
push
arpl
arpl
mov
ja
aam
aaa
xor
nop
ja
test
push
mov
in
out
jmp
sahf
dec
das
lea
pop
xchg
test
sahf
jmpw
roll
sbb
xor
mov
mov
mov
cmpsb
jae
shrb
mov
or
aaa
jp
cwtl
add
mov
pushf
adc
pop
pop
cmp
leave
mov
adc
nop
or
push
xchg
and
and
leave
jge
fdivrp
pusha
ret
and
mov
adc
xlat
sbb
sti
and
or
sahf
loope
fstl
and
outsl
xchg
daa
pop
into
movl
lods
dec
or
loop
jae
pop
sbb
lea
dec
test
shrb
sub
test
stos
cwtl
out
mov
fwait
add
dec
dec
cmpl
scas
mov
cs
jecxz
push
popa
es
pusha
ljmp
xor
sahf
popf
xchg
sbb
lods
jp
test
push
pop
inc
mov
je
outsb
sbb
sbb
xor
aad
mov
jnp
rorb
dec
jb
out
fnstenv
jecxz
inc
jge
jo
add
ret
lret
add
mov
nop
das
loopne
repz
or
out
arpl
shr
push
loopne
push
pusha
pop
push
jo
out
call
push
jecxz
lret
subl
cmp
push
cld
add
in
dec
inc
mov
fsubrs
xor
pop
ss
daa
les
movsb
and
sbb
ret
testl
mov
sub
inc
mov
xchg
and
jns
lods
mov
sbb
in
scas
push
sbb
ds
mov
add
inc
xchg
mov
ds
jp
jno
xchg
cmp
pop
cmp
mov
mov
sbb
mov
in
add
imul
adc
push
into
dec
mov
addb
adc
sbb
bound
insl
sub
daa
xchg
or
dec
aaa
scas
sub
inc
lods
iret
inc
pop
mov
jmp
hlt
cmpsb
js
imul
test
adc
fwait
orb
inc
fnstcw
and
pop
loope
and
cmp
and
lea
hlt
jmp
imul
aam
cmp
roll
insl
stos
sbb
sbb
pop
movsl
aam
jecxz
mov
inc
xor
add
aas
mov
sub
loopne
into
lahf
sub
xor
jmp
jo
mov
mov
pop
fs
and
sahf
or
cli
mov
and
mov
enter
sub
push
dec
or
dec
push
scas
int
or
dec
cmp
in
test
aad
sub
push
adc
pmaxub
cmp
inc
iret
dec
and
in
xchg
pop
push
push
in
scas
sbb
test
inc
pop
cs
mulb
inc
push
enter
jp
xor
xchg
into
mov
rcl
inc
add
frstor
adc
out
in
xchg
addr16
rorb
sbbl
xchg
ss
shlb
mov
sbb
ss
loopnew
xlat
leave
fldl
and
arpl
addr16
mov
enter
cli
arpl
sbb
div
mov
ljmp
sub
fsub
bnd
ljmp
cmpsl
jmp
adc
into
add
mov
jp
scas
pop
jne
push
cmp
lock
bound
aaa
inc
add
test
dec
push
adc
out
std
or
insb
and
mov
dec
inc
push
xchg
in
or
jae
aad
add
adc
ret
cli
or
cmp
mov
lods
sbb
pushf
je
jecxz
xchg
ret
movsl
out
call
ret
mov
fdiv
add
add
xchg
inc
and
mov
cmpsl
mov
enter
icebp
xor
icebp
add
jae
push
inc
add
jne
popa
loop
jge
sbb
test
dec
mov
mov
mov
mov
inc
cmp
stos
shlb
pusha
xor
addl
mov
xchg
or
add
or
lahf
mov
cmpsb
mov
stc
dec
lods
stos
add
mov
into
xor
pop
icebp
addr16
or
push
sbb
inc
dec
xchg
jbe
push
fs
adc
sbb
in
mov
jmp
push
mov
mov
ficomps
mov
repz
jno
mov
daa
xor
sahf
mov
sbb
jecxz
xchg
pop
stos
testl
mov
cmp
scas
push
dec
fwait
jns
jne
ret
pop
xchg
pop
cwtl
in
push
insb
out
and
in
in
int
insl
xchg
cltd
add
sbb
add
sti
adc
cvtpi2ps
rclb
xchg
add
cltd
shlb
push
cli
iret
push
fistl
mov
test
lahf
pop
xchg
cmc
je
pop
mov
mov
sub
out
sub
dec
jp
xor
std
clc
sbb
clc
shl
push
out
mov
mov
inc
pop
xchg
ss
push
inc
inc
out
sub
shl
mov
pop
cmpl
sbb
inc
jl
xchg
inc
lds
jo
stos
clc
sub
lcall
mov
jecxz
test
jge
xor
fdiv
dec
loope
adc
mov
rorl
sbb
out
cltd
int3
mov
mov
add
dec
in
jb
mov
aaa
punpckldq
jno
leave
jnp
add
xchg
repnz
sub
dec
or
movsl
lods
stc
xor
mov
jne
jbe
rcrb
xchg
stos
es
xor
mov
int3
mov
jg
fnstcw
mov
imul
add
insl
dec
cli
sub
les
dec
and
mov
aad
jg
and
lret
add
push
test
int
cmp
pop
test
daa
sub
xchg
lds
xchg
push
cltd
mov
andb
aad
and
sbb
sbb
mov
cmp
fadds
lds
mov
dec
xadd
or
inc
lahf
ret
lods
push
movb
daa
lret
jl
ljmp
repz
lahf
js
pop
enter
inc
push
jp
cmp
jecxz
jecxz
xor
cwtl
jno
fisttpl
sahf
icebp
lahf
arpl
rcll
rcl
data16
jg
push
inc
jb
pop
sub
les
push
imull
pusha
incl
push
xor
xchg
jno
push
daa
imul
inc
data16
aam
or
push
enter
sub
std
sbb
test
push
rol
or
xchg
jb
in
div
cli
adc
int3
popf
js
setne
and
icebp
xchg
repz
sub
xor
push
data16
les
pusha
movsl
dec
insl
inc
popf
dec
adc
sbb
icebp
mov
dec
lahf
call
jns
push
or
lahf
dec
sti
sub
out
add
mov
sub
or
xchg
pop
and
push
add
js
add
fxch
out
cmp
and
out
out
xchg
sbb
sub
movsl
fistl
test
in
shll
aam
fwait
clc
mov
jo
adc
rcrl
aas
push
cmp
xchg
lock
aas
lods
mov
cs
cs
scas
xor
iret
mov
add
cltd
movb
xchg
inc
or
dec
aad
xor
lods
pushf
ret
pop
sbb
or
push
or
xlat
adc
mov
aas
mov
ret
mov
and
mov
mov
stos
or
xchg
sbb
add
clc
or
loopne
mov
mov
cltd
jge
add
pop
hlt
test
jle
insb
aaa
mov
xchg
cmpb
and
sti
imul
xor
lods
cld
cmp
lods
pop
sub
or
pusha
movsb
sbb
cmp
jg
sbb
lret
lds
clc
mov
mov
mov
mov
push
dec
lods
js
pop
outsb
pop
xchg
xor
je
sbb
lcall
outsb
ret
push
or
push
ret
leave
push
outsl
xchg
xchg
and
lret
nop
xchg
adc
andl
enter
and
sbb
lds
cmpsl
hlt
and
rorl
jmp
mov
xor
lods
xor
retw
and
push
xchg
pushf
inc
mov
mov
in
mov
mov
fildll
push
sarl
xchg
scas
imul
cwtl
shll
arpl
nop
rcrl
cmpsl
rcll
or
addl
scas
ljmp
or
mov
adc
movsb
scas
adc
inc
add
xchg
mov
or
adc
fmul
repz
add
imul
or
cmpsl
cmovno
ret
cmc
push
and
sub
fistps
arpl
je
fsub
and
mov
xchg
push
sub
pop
in
lcall
ret
xor
les
push
mov
xchg
or
out
push
jge
insb
daa
push
cld
outsb
cs
imul
sub
or
mov
cmp
in
jno
inc
fs
outsl
imul
sbbb
out
xor
and
jg
or
lret
xor
xchg
repnz
into
outsb
enter
push
mov
insb
call
imul
loope
in
or
adc
fisubs
adc
lahf
adc
dec
mov
mov
cmp
outsl
push
stos
jne
push
mov
adc
lods
es
arpl
mov
dec
and
insb
test
repnz
and
sbb
ds
and
pop
jb,pn
push
addl
sbb
sbb
rclb
sub
sbb
pop
mov
push
cwtl
scas
mov
jns
scas
jmp
rolb
pop
js
leave
sahf
and
pop
mov
xchg
adc
fdivs
mov
sti
and
mov
cmpsl
dec
xchg
adc
ljmp
mov
pop
gs
xor
cwtl
dec
xchg
scas
xor
data16
js
xor
xchg
sub
jbe
out
shll
nop
iret
dec
inc
mov
inc
imul
adc
pop
test
fwait
arpl
sbb
fstl
or
push
jnp
lahf
pop
gs
adc
adc
das
mov
inc
aaa
shl
fisubs
mov
mov
ja
negb
push
cmc
push
mov
xchg
sbb
jo
leave
shlb
lret
lret
or
or
incl
mov
das
mov
xchg
sub
xor
and
xchg
inc
dec
ljmp
mov
daa
pop
xchg
sbb
add
loopw
push
ss
and
dec
insl
pop
adc
push
mov
mov
inc
mov
out
xor
mov
clc
js
aas
mov
dec
cmp
xor
and
in
aad
mov
popf
xchg
lods
add
fs
filds
push
scas
stos
pop
jb
in
rcll
fdivrl
in
mov
pop
mov
shll
pop
inc
add
bound
xlat
shlb
dec
lret
ret
stos
or
xor
mov
loopne
mov
in
fsubrp
jmp
es
sbb
add
notl
jg
cmp
and
loopne
test
xlat
or
sub
push
cwtl
out
or
and
pusha
shlb
out
pop
fdiv
xor
dec
jae
push
aas
outsb
aaa
mov
mov
je
jne
mov
out
mov
xchg
dec
fstp
and
sbbb
lds
sbb
cmp
sti
add
outsb
mov
jmp
inc
cmpsl
mov
push
add
sbb
sbb
cld
fcomps
fadd
add
dec
mov
bound
adc
xor
lods
addr16
cmpsl
xchg
add
lea
and
loopne
je
or
rorb
jge
pushf
mov
or
xchg
clc
arpl
pop
lahf
jae
mov
cmpsl
scas
call
int
mov
xor
xchg
xlat
mov
add
sti
push
xchg
shld
arpl
jnp
adc
xor
push
lock
add
je
xchg
das
mov
insb
mov
xchg
pop
divb
loopne
add
adc
push
push
fwait
cmp
cmovg
sbb
pushf
mov
ror
mov
fdivrl
xchg
xor
and
je
dec
test
adc
mov
pop
push
cmp
and
mov
mov
cltd
cmp
aad
push
jmp
mov
pop
pop
je
pop
add
lret
dec
mov
pop
adc
insl
and
js
and
js
jne
jb
adc
or
push
icebp
fisttps
add
mov
or
xor
cmp
loope
outsl
data16
or
jmp
xor
sti
clc
xor
push
inc
hlt
dec
loope
lret
mov
clc
pop
imul
popa
push
aaa
imul
dec
mov
inc
sbbb
pop
aas
sbb
jno
movb
pusha
pop
cmp
insl
int3
or
push
call
orb
sbb
add
test
inc
add
sub
mov
fstl
pop
jo
adc
mov
scas
mov
cwtl
enter
hlt
outsl
jne
xor
add
push
shlb
xor
dec
dec
mov
lea
pop
mov
jle
xchg
xor
test
or
ja
mov
adc
ljmp
adc
test
adc
dec
clc
shrb
xor
sbb
mov
cmp
sbb
jbe
scas
push
cltd
out
repnz
mov
mov
aas
ret
pusha
adc
and
fcmove
repnz
mov
push
mov
addr16
add
pop
jno
imul
mov
aam
decb
std
and
in
in
sub
pop
rcrl
or
add
test
sub
mov
and
cmc
daa
mov
cmc
ljmp
mov
adc
mov
xchg
sbb
xchg
or
stos
jb
xchg
inc
lahf
inc
rcrl
leave
push
mov
xchg
ficoml
mov
negl
int
shll
sbb
dec
xorb
icebp
stos
push
movb
insl
aaa
add
pop
push
jmp
fs
in
aad
xor
sbb
into
mov
and
enter
sub
push
flds
cmpsb
clc
pop
fcomps
hlt
mov
xchg
adc
cmp
sub
shlb
lret
sbb
and
pop
mov
mov
adc
add
nop
fldcw
jne
mov
inc
es
ss
inc
mov
xlat
adc
mov
jno
xchg
dec
mov
xor
scas
inc
and
lcall
sbb
xchg
aaa
dec
xor
mov
xchg
mov
arpl
adc
or
or
mov
mov
sar
pushf
or
jae
shrb
pop
sub
adc
jns
cmp
lock
hlt
fidivl
cmp
lret
push
ficoml
loope
push
ret
jnp
leave
fdivr
int
popa
add
adc
sub
stc
sbb
mov
adc
es
add
daa
push
lcall
frstor
mov
cmp
push
fs
inc
fcoms
jg
shr
test
or
leave
xchg
sub
fdivs
dec
sub
icebp
in
push
mov
sbb
sbb
bound
scas
nop
mov
and
outsl
pop
cli
call
lods
aas
sbb
loop
mov
jp
movsb
mov
int
push
fucomi
mov
pop
daa
adc
xchg
nop
cmp
sub
inc
cmp
lahf
pop
add
adc
popa
cmp
or
rolb
pop
fwait
out
repz
push
xor
sbb
in
lods
or
dec
pop
xchg
adc
dec
outsl
sbb
rclb
ja
leave
jecxz
jge
pop
outsl
aaa
jmp
xchg
sti
mov
shlb
call
xor
leave
out
or
test
push
or
ret
fldl
xor
push
pop
ljmp
std
add
nop
mov
mov
jno
push
aam
adcl
adc
mov
mov
pusha
aas
adc
addr16
xchg
ja
and
or
int
imull
loop
mov
mov
int
nop
mov
cli
cmp
rolb
fidivrs
lcall
or
imul
out
jb
mov
mov
xor
lds
les
add
add
push
add
add
leave
pop
xchg
jecxz
sub
mov
lods
sub
lods
add
push
xchg
lods
xchg
rep
pop
lods
push
xchg
add
lods
loop
lods
lea
add
lea
mov
rep
pop
lods
push
push
push
xchg
pop
lea
call
jb
sub
jae
mov
cmp
jb
sub
push
movzbl
shl
mov
lea
lea
mov
jecxz
mov
sub
mov
xor
test
setne
push
inc
mov
lea
call
pop
lahf
adc
shr
je
sahf
sbb
je
mov
xor
mov
call
xor
jmp
mov
mov
add
call
jae
add
call
jb
add
call
jb
cmp
mov
jb
mov
push
mov
sub
mov
jmp
add
call
xchg
jae
add
call
xchg
jae
xchg
cmp
mov
jb
mov
push
push
mov
add
call
pop
xchg
jmp
cmp
mov
jb
mov
push
xchg
xchg
mov
mov
add
call
push
pop
push
dec
cmp
jb
mov
shl
mov
lea
call
cmp
mov
jb
xor
shr
adc
dec
inc
xchg
inc
shl
cmp
lea
jbe
sub
xor
mov
shrl
mov
bswap
sub
add
cmp
jb
mov
inc
add
call
loop
mov
shl
add
lea
xor
push
inc
push
shl
mov
xchg
call
xor
pop
shr
adc
loop
pop
add
inc
pop
mov
push
mov
sub
rep
lods
pop
mov
stos
cmp
jae
jmp
pop
mov
pop
pop
push
jecxz
mov
inc
add
cmp
jae
mov
cmp
jne
mov
bswap
add
sub
stos
loop
mov
push
push
mov
inc
lods
test
pop
je
add
push
push
xchg
call
xchg
lods
test
jne
cmp
je
mov
jns
inc
xor
lods
push
push
call
stos
jmp
pop
pop
mov
jecxz
xor
lods
cmp
jb
add
add
loop
popa
jmp
sub
jb
je
shl
lods
jmp
lods
jmp
lods
jmp
push
mov
push
shr
mull
mov
mov
bswap
sub
cmp
pop
jbe
mov
xor
mov
sub
shr
add
jmp
add
sub
mov
shr
sub
stc
pop
pushf
cmpb
jne
incl
shll
shll
popf
ret
xor
inc
lea
call
adc
cmp
jb
sub
ret
mov
call
lea
mov
jae
call
mov
jae
shl
mov
push
lea
call
pop
add
ret
add
inc
add
add
nop
inc
add
add
add
add
add
add
add
xlat
pop
