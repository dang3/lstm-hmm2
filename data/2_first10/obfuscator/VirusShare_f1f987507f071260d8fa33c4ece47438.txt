jg
nop
add
addl
decl
add
cld
add
cli
inc
sub
repz
jmp
fs
jns
jl
mov
cmp
btr
mov
pop
mov
mov
cld
sub
call
int3
faddp
pop
add
sbb
xchg
add
mov
ja
inc
pop
incb
push
imul
and
push
sub
mov
stos
outsl
jmp
in
add
mov
mov
push
stos
or
fldl
inc
and
add
outsl
insb
jmp
dec
daa
push
inc
mov
pusha
clc
push
sbb
enter
mov
or
fwait
jmp
scas
add
mov
add
stos
pop
inc
xchg
and
and
pop
sti
mov
jae
out
outsb
cmp
add
sarl
pop
add
fstpt
test
xor
and
cmp
rorl
or
das
out
inc
clc
sub
xor
lcall
in
mov
div
idiv
popf
pusha
xchg
stos
mov
nop
and
push
rolb
ret
jmp
incl
push
jb
loop
or
sub
add
add
mov
call
or
fcoms
loop,pn
hlt
sbbb
push
push
adc
cmp
insl
lods
mov
rcll
insl
aad
outsl
adc
jns
add
dec
pop
xchg
push
gs
das
lea
sbb
pop
inc
fnstenv
inc
add
mov
add
inc
pop
out
mov
mov
inc
add
ret
mov
dec
push
xchg
addb
movsl
clc
xchg
ret
push
in
add
fwait
outsl
add
mov
stc
add
add
add
add
add
add
sub
in
bound
jg
rclb
xchg
adc
or
fldl
and
shr
xchg
add
lret
lret
add
add
mov
dec
ja
mov
push
in
testl
cmp
imul
sbb
push
cld
sbb
add
and
jne
jle
mov
sub
les
inc
outsl
pushf
xchg
sbb
scas
icebp
xchg
aas
cs
mov
add
ja
cmp
div
adc
inc
mov
pop
lcall
xchg
adc
inc
ljmp
adc
icebp
or
sbb
dec
movsb
mov
jnp
jmp
jb
loop
std
test
cmpsb
mov
lods
jnp
dec
add
cmp
pop
ret
cmp
pop
push
cmp
loope
push
loopne
xor
mov
jne
sahf
shll
outsl
or
iret
add
xchg
flds
das
dec
popf
mov
mov
fs
mov
or
rorb
shufps
adc
int3
fbld
out
inc
xchg
push
int
dec
mov
inc
shlb
jecxz
xchg
faddl
enter
dec
repz
mov
push
and
hlt
out
nop
in
ss
loop
dec
push
scas
push
add
shl
mov
jl
pop
xor
sbbl
cmp
mov
mov
mov
or
fs
inc
mov
out
dec
nop
mov
cltd
loope
sti
decl
and
add
test
mov
sbb
sub
aas
popf
loope
push
or
xor
pushl
mov
push
add
push
fdivs
enter
mov
jp
sbb
inc
std
out
pop
push
cwtl
inc
add
and
cmp
push
test
imul
rcll
jmp
loopne
and
add
gs
das
dec
into
sub
outsl
cltd
cs
sub
add
adc
cli
lea
adc
add
add
adc
cmp
popa
je
adc
cmp
xchg
outsl
fwait
ret
jo
lods
cmp
outsb
hlt
adc
adcb
in
cmp
or
dec
xor
xor
sub
add
stc
xchg
xor
pop
dec
mov
adc
mov
mov
pop
add
daa
sub
add
in
or
js
sub
xchg
or
ds
mov
dec
xor
pop
jns
pop
add
sbbb
or
outsl
xchg
dec
pop
pop
clc
pop
add
pusha
popa
xor
fstl
clc
xchg
inc
ret
or
add
in
fiaddl
adc
rolb
not
fstl
mov
add
lahf
jmp
mov
xchg
push
lcall
adc
out
lods
mov
pop
push
cwtl
je
decl
das
mov
sti
mov
push
mov
mov
scas
in
jne
or
in
pushf
add
outsl
les
orl
test
hlt
out
jg
addb
xor
pop
xor
dec
pop
pop
ret
xchg
or
in
leave
shl
stos
gs
stos
push
jg
insl
mov
jbe
ljmp
lret
xor
and
mov
mov
in
shll
imul
pop
das
std
data16
orl
mov
jae
insb
add
dec
mov
popa
stc
and
insl
inc
pop
loopne
pop
js
sbb
aad
xchg
fcomi
push
mov
add
dec
push
lock
push
and
and
sbb
orl
jmp
decb
clc
dec
inc
int3
je
lods
insl
jge
sub
add
pop
and
rol
add
add
push
loopne
sbb
out
ljmp
mov
out
fstps
mov
cmp
jmp
pop
test
dec
mov
into
mov
xlat
sbb
sbb
clc
jl,pn
jmp
call
lret
adc
mov
mov
and
aam
xchg
scas
or
add
jae
rorl
hlt
pop
mov
mov
inc
mov
or
test
lret
sbb
aaa
lock
cmp
cs
xchg
movhps
stc
lods
subb
or
test
sarb
xchg
test
mov
in
push
xchg
and
es
cbtw
fldl
mov
mov
lds
test
fsubrs
jecxz
arpl
push
xchg
jb
push
mov
outsl
outsl
mov
test
repnz
inc
pop
xchg
fistpl
pop
js
decb
mov
sbb
outsl
sbb
jbe
in
arpl
pop
subb
cmpsw
shll
mov
mov
fs
jnp
rclb
or
leave
cmp
adc
je
xchg
lcall
cmp
dec
mov
mov
mov
shrl
mov
push
jbe
add
fnstsw
xor
adc
cli
pusha
push
mov
fcmovu
adc
mov
dec
push
ss
adc
and
ret
pop
clc
fsubrp
xor
add
jecxz
cld
mov
jecxz
lret
cmpsl
in
jg
loope
imul
mov
adc
adc
aaa
sbb
notb
and
xor
jmp
jge
xchg
cmpsl
or
setp
mov
es
sbb
test
mov
hlt
and
int3
out
in
cmp
fstpt
movsl
mov
scas
sar
mov
and
mov
mov
ror
mov
out
inc
mov
mov
test
lahf
or
mov
insb
add
adc
pusha
in
cmp
cmp
pop
xor
icebp
dec
arpl
push
adc
dec
add
aas
fisubl
cmc
jb
insb
sahf
popa
ja
shl
lcall
adc
pop
mov
je
fs
inc
inc
jmp
aas
mov
dec
inc
test
pop
mov
mull
iret
scas
add
fsubrs
adc
xchg
pop
mov
sbbl
test
push
add
cwtl
jae
dec
fbstp
jle
dec
aaa
mov
test
bound
jo
or
mov
loope
jo
mov
pop
push
mov
mov
cmpb
dec
inc
xor
add
mov
jo
xchg
scas
pop
push
push
cmovo
or
sbb
fadd
sbb
loop
mov
sbb
clc
pop
pop
add
mov
jns
jmp
xchg
pop
scas
jns
mov
mov
cmp
push
mov
clc
sub
enter
jo
dec
sub
fisttpl
pop
inc
mov
ss
dec
xchg
sti
lret
lret
out
adc
mov
mulb
pop
inc
xor
arpl
jnp
xlat
std
inc
inc
jae
sub
cmp
test
or
in
dec
cld
roll
ret
jnp
jg
sbbl
push
mov
or
jo
loop
in
xlat
lock
ret
push
insl
int
popf
pushw
inc
popf
lahf
loop
jl
ss
adc
lods
or
pop
test
cmpsb
sbb
adcl
cltd
mov
jmp
dec
mov
outsb
int
inc
movsb
out
push
fnstsw
jmp
in
or
push
movsb
sub
mov
in
or
push
push
mov
insl
imul
cs
movsb
and
fidivs
pop
gs
pop
adc
add
fdiv
jp
mov
cmp
popf
push
repz
push
out
gs
xor
dec
lods
xchg
add
sti
mov
mov
mov
sub
cli
xchg
lods
mov
mov
out
mov
cli
ror
negb
sbb
fnsave
dec
cwtl
inc
insb
lea
push
insb
xchg
xor
jnp
jp
xchg
in
sub
fcmovne
inc
sbb
lret
sbbb
sub
orl
pusha
jp
stc
lods
xor
cwtl
inc
mov
jmp
mov
imul
mov
mov
pop
push
mov
pop
dec
test
imul
or
sbb
loopne
mov
outsb
mov
push
mov
push
sbb
stos
add
push
jns
sbb
imul
inc
std
movsl
fildl
pop
or
push
jne
stc
add
in
inc
dec
out
out
idiv
lret
cmpsb
hlt
or
cld
fwait
xchg
mov
add
add
mov
pop
adc
inc
pop
xor
adc
jecxz
pop
jae
ret
adcb
sbb
cmp
xchg
lahf
xchg
sbb
sbb
stc
ret
add
add
arpl
push
jb
adc
push
pop
test
scas
fisttpll
inc
add
or
jle
stos
push
mov
cmc
push
in
fadds
pop
push
loop
pop
outsb
cmpsb
or
ljmp
push
adc
clc
lahf
das
insl
imul
aad
mov
test
cmp
outsb
adc
je
or
clc
mov
push
push
ss
push
js
out
fs
jb
sar
jg
cmp
faddp
xchg
sar
dec
add
popa
movsl
jo
mov
cmp
in
mov
cmp
xchg
sbb
or
mov
and
sub
add
mov
sub
sbb
testl
js
pop
in
mov
aam
in
xor
sbb
xchg
sbb
pop
cmp
stos
sub
add
jb
mov
in
daa
movb
test
sbb
mov
pop
inc
sub
loopne
jmp
adc
mov
xchg
hlt
mov
xor
cmp
imul
lea
insb
fwait
add
jge
push
and
neg
insl
fsubrl
jg
xor
xor
xor
mov
leave
clc
lea
lods
insb
jecxz
rolb
or
pusha
mov
js
jbe
and
mov
jg
pop
pop
xor
push
cmpb
xchg
push
inc
outsb
mov
mov
mov
pop
gs
mov
sub
adc
test
aaa
je
inc
stos
sub
jp
dec
sub
mov
fisubrl
cmc
into
sbb
ret
test
xor
jmp
outsl
mov
int
test
pop
rcrl
or
rorb
ret
jns
inc
cli
test
fwait
pop
ret
int
dec
rorb
pop
xor
inc
cmp
jne
adc
mov
mov
jae
add
call
pop
lods
mov
push
mov
jo
adc
xor
sbb
rcrl
pop
and
mov
out
nop
mov
or
ret
lock
addr16
out
mov
mov
cmp
push
lcall
cmp
jbe
bound
and
or
dec
mov
sub
je
sbb
sbb
jno
sub
iret
mov
icebp
mov
add
and
push
jp
rclb
data16
xchg
rol
andl
cli
mov
adc
jp
rorb
or
lret
test
scas
push
stos
dec
sbb
pop
out
fidivl
das
fidivrs
cmp
divps
cmp
jg
inc
popa
test
dec
add
dec
adc
stc
sbb
divl
aad
cmp
dec
fdivl
cwtl
outsl
sbb
jbe
and
xadd
aad
mov
mov
cmp
fsubs
stc
fadds
mov
xchg
pop
inc
fildll
pop
add
mov
lcall
xchg
sub
mov
push
aas
rolb
lock
fwait
xchg
int
cmpb
outsl
sbb
jl
adc
sub
pop
mov
fimull
sbb
or
jo
mov
or
add
ds
ss
mov
adc
xchg
push
leave
je
pop
loopne
test
push
mov
push
jp
inc
push
mov
out
or
dec
movsb
mov
stos
outsl
mov
mov
jg
cli
addr16
pop
pop
sbb
add
rorb
imul
pop
jns
mov
gs
insb
jne
sub
rorl
lock
jl
aaa
stos
neg
cmp
ljmp
jae
push
or
cmc
loopne
fst
out
dec
cltd
xor
add
andb
push
and
xchg
call
cmpl
aas
inc
mov
mov
das
inc
xchg
jne
shl
iret
or
scas
xor
adc
pop
fisubl
pop
sbb
and
inc
adc
sahf
call
push
mov
sahf
ret
ss
lret
into
outsl
add
jge
insb
hlt
clc
insl
adc
jp
mov
jg
and
inc
jns
add
sub
xchg
dec
bt
popa
fs
or
pushf
pop
mov
xor
divl
out
add
fildll
inc
mov
lods
lods
adc
fsubs
shr
lds
sbb
rcl
sbbl
sbb
and
test
cmp
jmp
pop
jo
in
push
or
xchg
xchg
mov
fs
aaa
or
shrb
or
cmp
clc
lret
and
fimuls
mov
or
insb
fists
or
cmp
leave
incl
aam
or
or
mov
ja
enter
das
mov
push
rclb
rorb
je
jne
test
push
jl
inc
pop
and
mov
fcomps
in
sbb
or
ljmp
sub
outsb
add
push
fwait
lods
movl
push
into
pop
ds
loope
sbb
ret
cmp
ficompl
sbbb
mov
int3
loopne
and
cmp
push
fdiv
test
lret
push
mov
stos
lods
imul
test
xchg
xchg
xlat
pusha
sub
mov
rep
sub
popa
icebp
std
bound
imul
scas
inc
xchg
sub
sub
jnp
dec
data16
test
mov
ficoml
loop
or
pop
mov
icebp
outsl
ss
pop
enter
push
xor
cmp
and
js
fdivrs
mov
inc
mov
jecxz
hlt
add
pop
sti
sbb
add
int3
scas
add
xchg
js
cmpl
testl
aas
hlt
scas
add
jmp
outsl
adc
popf
lea
ret
pop
jmp
das
push
mov
lahf
mov
fdivrl
roll
mov
xor
mov
pop
dec
pop
or
mull
pop
adc
icebp
fildll
pusha
lcall
push
call
std
loopne
mov
push
cmc
push
jg
das
xchg
shl
or
mov
ret
mov
js,pn
lds
popf
repz
push
xchg
lods
jle
lea
cld
call
arpl
pushf
adc
call
lcall
xlat
aaa
jbe
pop
dec
pop
cmpsb
pop
movsb
push
inc
in
repnz
ss
loopne
int3
ret
add
je
pop
pop
movsl
and
xchg
mov
pop
arpl
inc
inc
dec
sbb
inc
shll
push
fistpl
in
or
loop
dec
movsl
mov
je
das
push
xchg
inc
and
das
xor
call
jne
xchg
jns
push
shrb
pop
in
lods
dec
jbe
popa
jnp
mov
test
sbb
dec
jo
movsl
or
sahf
ret
ss
int3
push
push
and
lock
push
out
sbbl
cmp
jbe
loop
dec
mov
xor
mov
sub
insl
push
jge
fdivs
jnp
xchg
movsb
insb
ja
push
xor
std
xchg
sub
and
jbe
sbb
int
outsb
cmp
xor
gs
repnz
add
lret
rol
cmp
cmp
aam
jne
daa
push
add
mov
call
cmp
ret
jl
pop
mov
mov
and
test
loopne
rorl
imul
or
aaa
jne
orl
pop
sbb
push
in
fisubl
adc
sbb
sbb
cli
mov
or
sub
ficoms
jno
sub
mov
pop
push
add
leave
int
or
jb
andb
gs
pop
mulb
dec
fbstp
cmpsl
pushf
stc
sbb
pop
pop
add
insl
data16
lock
in
or
mov
fstpl
cmp
push
push
xchg
aas
xor
out
jle
insl
mov
in
subb
mov
push
and
je
dec
imul
imul
js
push
mov
insl
call
push
mov
daa
mov
mov
sbb
fisubrl
jge
imul
dec
pop
add
mov
xor
inc
mov
pop
imul
adcb
int
pop
push
inc
and
push
ss
jg
inc
dec
lock
xchg
in
and
push
dec
mov
mov
xchg
in
scas
pop
mov
push
jb
movsl
mov
rol
fnsave
sub
lods
ja
cld
jg
sub
push
aaa
les
sub
loop
and
xor
sbb
xor
add
sbb
push
cli
push
lahf
js
flds
mov
cmp
das
push
add
aaa
jge
out
out
push
or
daa
cmp
loopne
lds
sbb
push
jle
jno
xchg
or
pop
cld
mov
add
popa
xor
fsubrp
mov
and
cmp
les
mov
or
hlt
or
cmpb
aaa
ficoms
loope
aas
pop
sub
call
xchg
js
cmp
ljmp
adc
push
ljmp
int3
jbe
ret
xchg
stos
mov
ja
add
jb
mov
xchg
mov
outsb
cmp
scas
inc
xor
or
inc
inc
adc
xor
mov
cmc
push
lret
xor
std
sub
jp
sbb
xor
pop
dec
xor
push
jg
sbb
push
mov
mov
in
mov
mov
clc
in
mov
or
out
xor
mov
call
fiaddl
add
out
inc
mov
inc
xor
jg
xchg
stos
repnz
icebp
mov
lret
outsl
lods
movsl
inc
sbb
jne
pop
sarb
pop
mov
or
hlt
andb
das
pop
sub
ss
icebp
push
loop
cld
ret
sub
shlb
inc
inc
test
mov
mov
fildl
mov
mov
dec
out
jnp
jo
xor
inc
xchg
inc
adc
push
pusha
sub
pop
out
test
sub
mov
imulb
ret
or
stos
inc
xchg
cmp
mov
in
in
pop
lock
mov
fisttpll
mov
sub
and
and
add
das
es
mov
inc
je
mov
cmp
aaa
mov
mov
mov
sahf
insb
cmp
negb
inc
sahf
fcoms
add
pop
inc
and
or
je
sarb
int3
out
aam
icebp
ficompl
fimull
pop
add
inc
negl
and
add
enter
jne
subb
xorb
roll
mov
dec
lock
mov
cld
cmp
hlt
in
cmc
sub
bound
call
mov
adc
scas
jge
lods
test
xor
js
pop
mov
push
test
add
adc
es
pop
inc
cmp
rorb
insl
mov
cmp
pop
bound
out
sub
int
pop
insl
mov
lahf
or
push
mov
fldenv
cs
loop
ljmp
addr16
add
mov
arpl
fwait
test
test
cld
jp
xlat
mov
out
imul
mov
sub
stos
push
cwtl
inc
lcall
jbe
cmpsb
adc
mov
mov
push
adc
ljmp
jae
je
aas
cmpb
or
notb
push
add
sbb
jne
adc
adc
stc
xchg
fs
push
popf
dec
xchg
xchg
jb
dec
add
inc
cmpsl
mov
jle
push
sub
lock
or
in
add
out
cmp
pop
test
push
fwait
je
fldt
cmp
push
and
mov
shlb
sbb
je
aad
shlb
xchg
mov
mov
addb
add
sub
jo
jmp
sbb
andl
sahf
pop
pop
jle
sar
aas
xchg
loopne
inc
adc
pop
icebp
lods
dec
lret
jp
or
and
push
mov
jae
xchg
or
in
fldl
and
xchg
roll
mov
sbb
xlat
imul
fadd
mov
popa
push
or
rolb
sbb
shlb
mov
inc
call
push
inc
mov
mov
into
add
int
cwtl
mov
pop
imul
daa
sarl
insl
adc
fstps
cmp
fdivrs
les
adc
ds
cmp
ret
test
stos
mov
xchg
mov
and
in
jo
js
add
jns
cs
or
push
mov
adc
ret
dec
cmova
ret
cmpsl
push
sbb
cmp
dec
xchg
xchg
fwait
lock
jnp
es
add
daa
lahf
sbb
sti
xchg
mov
push
mov
mov
push
mov
add
outsl
push
jno
jp
scas
pop
jmp
mov
cmp
and
adc
push
sbb
insb
or
inc
mov
les
xchg
adc
inc
call
ljmp
sub
adc
dec
jp
mov
xchg
enter
dec
decl
cld
mov
fdivs
pop
mov
xor
iret
es
fidivs
sub
xor
add
aas
jge
cs
les
pop
clc
sub
jl
ja
push
push
or
addb
xchg
popa
movsl
stos
mov
mov
loope
or
xchg
mov
add
xorl
mov
repz
push
mov
jbe
daa
jg
divb
or
filds
shlb
sub
pop
xchg
aaa
movl
iret
andl
inc
mov
or
dec
mov
mov
push
movsl
mov
movsb
andb
jns
aam
mov
popa
fcmovnu
jno
ds
int
adc
pop
xor
inc
jae
ja
pop
xor
adc
cwtl
inc
iret
ss
jo
adcl
xlat
shrb
mov
sub
adc
ret
ljmp
movsl
jbe
pusha
loope
pusha
cmpsl
push
mov
shrl
xchg
pop
cmpsl
daa
pop
in
lahf
or
mov
xchg
jmp
jbe
push
cmpsl
cs
das
in
xlat
inc
jb
dec
int
lcall
and
jb
mov
fwait
cs
and
push
dec
cli
cmpsl
mov
pop
xchg
imul
cmp
xlat
jbe
mov
in
jb
mov
mov
mov
xchg
xchg
test
ret
push
inc
jnp
mov
sbb
cmp
pop
dec
mov
add
push
add
test
je
outsb
sti
cltd
mov
popf
pusha
mov
and
xor
jb
xor
mov
mov
outsl
sbb
push
addr16
mov
mov
or
int
sub
sub
jae
iret
rcl
testb
hlt
mov
jmp
jle
ja
stc
shll
mov
dec
out
out
mov
in
dec
cmp
pop
mov
push
add
ljmp
fildl
outsl
rcrl
movl
imul
rol
fldl
imul
sahf
test
mov
data16
subb
sbb
fsubrp
push
mov
xchg
jae
out
inc
pop
cmp
dec
push
imul
cmc
out
add
mov
xchg
cmp
fisubrs
out
repz
push
pop
test
lock
add
fisubrl
inc
cmpsl
inc
xor
xor
pusha
shrb
shll
pop
add
mov
mov
out
mov
sub
add
dec
nop
cmp
push
bound
mov
xchg
lret
loope
cld
pop
inc
inc
sub
fimull
mov
inc
sbb
cmc
xor
bound
aam
fisubrl
cld
test
test
xor
shrb
inc
cmpsl
daa
jge
ficoms
add
xchg
adc
inc
mov
hlt
cmp
or
insl
arpl
inc
fldt
xor
ss
iret
ror
popl
rcl
and
mov
in
push
lods
and
std
pop
mov
sub
cltd
pop
xor
cmc
cs
ss
mov
jmp
fidivrs
mov
mov
adc
outsl
jle
sbb
sub
mov
hlt
pop
int
test
cmp
jbe
fdivrp
imul
adc
into
push
inc
lret
cmp
aaa
ja
les
mov
jle
test
inc
clc
mov
jge
add
jge
dec
mov
mov
xlat
cmp
pop
popf
mov
mov
stos
jbe
lea
insl
cmpb
mov
mov
in
push
bound
and
dec
divb
mov
arpl
lods
in
cmpb
test
or
sub
jl
ds
add
mov
xchg
inc
sub
dec
inc
es
cmc
jle
cld
stos
inc
es
inc
or
aad
subl
movsb
int3
push
push
mov
or
out
adc
int3
xchg
sbb
insl
push
lods
lock
lock
sub
jmp
sbb
fildl
shlb
das
mov
fldt
shr
jo
and
mov
ret
mov
mov
idivb
xor
incb
repnz
jne
pusha
ds
outsl
inc
sbb
sbb
mov
xor
lock
add
dec
call
adc
xor
sar
or
hlt
inc
dec
push
or
lds
test
in
cld
data16
negb
push
mov
sbb
and
fldl
pop
lcall
pop
out
mov
jecxz
imul
ss
jo
out
nop
and
inc
pop
pop
ljmp
jle
and
inc
sahf
adc
lds
jno
cmp
mov
je
insl
push
mov
shrb
push
mov
fstpt
in
xor
call
pop
out
das
mov
aam
sub
out
jmp
mov
push
cld
pop
fdivrs
mov
jle
imul
pop
xchg
jle
sti
or
ficoml
mov
test
call
and
mov
ret
insb
push
lock
push
inc
and
call
xchg
fcoms
fnstsw
jo
rorb
jo
pop
sbb
mov
or
stos
out
add
je
mov
aad
call
sti
cmp
add
sub
fnstcw
hlt
jb
dec
or
icebp
ret
movsl
push
daa
cli
sub
mov
fs
mov
fisttps
fs
cmp
outsb
rorb
jmp
repnz
mov
cwtl
lret
outsl
pop
in
pop
dec
sbb
call
mov
aas
in
mov
cld
or
adc
pop
sub
call
mov
mov
das
inc
sub
and
xchg
add
cmp
push
xor
dec
lods
dec
cmp
sub
and
sub
sub
jno
cmpsb
mov
mov
fstpt
aad
jecxz
and
inc
insb
shr
xor
pop
mov
adc
aam
pop
mov
fwait
or
pop
insb
mov
mov
jge
testl
xlat
clc
cmpsb
pop
test
roll
daa
adc
jle
sbb
jno
xchg
nop
fimull
aaa
or
test
jns
fmuls
mov
jae
dec
aad
pop
imul
inc
inc
inc
rcll
je
push
xchg
mov
mov
mov
test
clc
pop
insl
xchg
outsl
inc
sub
test
enter
mov
lods
jne
mov
push
inc
rol
sti
or
sub
sbbl
push
cmc
mov
in
mov
inc
stos
add
or
dec
mov
sbb
lods
and
xchg
jl
mov
stos
sbb
adc
in
fisubl
fwait
adc
call
inc
fisttpl
out
cmpl
pop
mov
push
outsb
mov
pop
or
sbb
js
push
and
cmp
jg
test
cwtl
dec
jae
xor
roll
mov
jne
mov
int
scas
mov
in
arpl
jle
add
ja
cmc
sti
mov
rorb
sub
mov
dec
inc
lods
in
movsb
movsb
and
pop
adcl
push
fadds
sub
call
xor
jo
icebp
mov
sysret
push
fwait
pop
daa
movsb
movb
icebp
mov
leave
das
js
std
xlat
cmpsb
jp
ljmp
cmc
call
enter
jb
mull
cmp
inc
push
fwait
xchg
dec
xchg
mov
lds
fs
mov
adc
jbe
jp
jns
push
or
das
lret
ja
insl
fildll
rolb
movsl
push
insb
xchg
sub
xor
lret
cmpsb
fsubrl
bound
scas
cmp
cli
daa
ss
xchg
aam
dec
cwtl
mov
push
jbe
rclb
in
outsl
test
or
ret
in
dec
sbb
fdivp
rolb
xor
push
and
mov
cld
xchg
das
andl
jg
push
mov
mov
jmp
fs
add
xor
adc
xor
and
sub
jne
outsb
popl
xchg
call
ja
sub
inc
mov
pusha
inc
popf
lret
mov
cmc
sub
nop
shlb
push
test
cli
dec
rorl
push
push
popl
jle
cmpsl
or
lret
xor
lds
mov
sbb
mov
add
in
sub
cwtl
insl
sti
mov
test
test
xchg
lds
mov
sahf
mov
mov
fidivrl
insl
dec
and
xchg
xchg
leave
in
and
sahf
mov
sbb
cmp
mov
fwait
dec
mov
xchg
cmpb
roll
xor
fildll
fildll
enter
loop
jns
inc
shrl
jecxz
lds
jnp
movsl
arpl
movsb
inc
add
inc
mov
stc
xorl
cmc
loop
xor
xor
pop
pushf
popa
lret
mov
aam
insl
test
pop
shr
mov
add
outsb
mov
or
movsl
jb
ljmp
mov
scas
jg
subl
ljmp
adc
ljmp
or
fwait
mov
arpl
push
fsubrs
push
loop
mov
stos
pop
ffree
movsb
lahf
xchg
js
shlb
ficoml
rorb
pusha
mov
cli
mov
add
mov
pusha
jmp
push
ret
call
fstps
mov
push
sub
inc
aas
add
jnp
and
or
clc
cmpsb
lahf
mov
jecxz
sbb
out
je
inc
mov
test
xor
icebp
push
aas
jl
xor
sar
xor
or
xchg
sub
mov
js
cmpsb
imul
cwtl
hlt
pop
mov
sub
in
cmp
movsb
dec
loopne
xchg
inc
pop
xlat
pop
mov
sti
push
fistps
insb
dec
nop
std
dec
scas
xor
cmp
xchg
pushf
mov
fwait
jecxz
lcall
stos
mov
fcoms
fs
xchg
arpl
pop
aam
push
mov
imul
cwtl
jle
xor
pop
adc
pop
out
pop
popa
imul
fsts
outsl
add
xchg
scas
ss
mov
loopne
pop
fbstp
xchg
je
pop
sub
pop
add
adc
in
fstpt
test
fsubrl
push
mov
or
icebp
adc
pop
inc
sub
imul
xchg
xor
mov
xchg
mov
xchg
sbb
testl
mov
push
rcr
or
out
push
mov
cmp
shll
fisubrl
shl
hlt
lds
test
mov
sahf
ret
punpckldq
adc
pop
mov
pushf
mov
dec
jne
add
dec
ss
cmp
lock
or
stos
data16
push
lods
mov
ret
adcl
and
add
xchg
adc
pop
aam
icebp
fcomi
stc
repz
fdivl
dec
lahf
enter
xlat
cmp
push
addl
xor
ljmp
aas
xchg
jbe
mov
or
inc
ds
mov
adc
insl
and
xchg
je
data16
mov
inc
pop
xchg
fdivs
xor
insl
jnp
pushf
fdivr
lea
xchg
pushf
pop
mov
mov
adc
stc
test
cmovge
scas
dec
ret
mov
cmp
insl
mov
ljmp
div
jnp
mov
imul
ret
pop
inc
jl
mov
rolb
cmp
xor
ja
cmp
jp
mov
add
in
mov
or
jmp
xchg
into
cmc
adc
shrb
push
sub
xchg
mov
bound
dec
jl
mov
xchg
addr16
add
repnz
xorb
clc
notb
sub
or
dec
mov
pusha
fdivl
or
test
cmp
cmp
push
pop
rorl
mov
roll
xchg
push
fwait
push
jo
fwait
js
fisubrl
andl
mov
jne
outsb
insb
mov
rorl
sbb
lret
js
and
and
sbb
push
mov
push
cmc
roll
sub
mov
in
xchg
jg
cmp
jge
push
scas
imul
lret
adc
jl
inc
mov
mov
ret
iret
rcr
lea
fwait
test
test
lcall
stc
pop
loopne
out
xchg
daa
add
and
mov
ret
xor
imul
mov
repnz
into
mov
xchg
aaa
dec
dec
mov
add
or
bound
lret
dec
adc
mov
xor
adcl
cmp
fwait
shll
xlat
js
mov
out
jmp
scas
cmc
or
mov
fs
sbb
xor
aaa
dec
iret
add
mov
lods
push
loopne
cmc
aam
sarl
icebp
insb
rcrl
push
dec
iret
stc
in
fistps
push
mov
adc
push
push
dec
js
pop
cmc
lea
clc
fsubs
jge
xor
add
rcrl
pop
xchg
jno
orb
sub
sbbb
imul
jb
push
mov
fistpll
daa
mov
scas
notb
xchg
daa
push
js
jns
mov
mov
and
mov
dec
jns
es
push
xor
mov
in
lea
loopne
add
in
push
mov
mov
mov
enter
sbb
mov
shll
popf
and
das
pop
jne
xor
mov
mov
xchg
mov
dec
rcrb
out
test
mov
mov
cmp
int
or
in
lods
and
dec
push
dec
mov
or
mov
lret
iret
ljmp
rcl
push
dec
dec
adc
push
es
jp
sub
dec
pusha
mov
clc
add
mov
mov
add
jb
cmpsl
enter
pop
out
mov
ffree
adc
push
adc
pop
sub
imul
int3
popa
mov
cmp
xchg
inc
sbb
shlb
xchg
xchg
and
cli
scas
mov
mov
xchg
mov
notb
insl
dec
sbb
mov
add
lods
pop
clc
jmp
daa
lock
pop
mov
sub
andl
fstpl
icebp
fwait
pop
mov
lds
je
movsl
es
dec
in
and
cmp
fstpl
pop
dec
xor
add
insl
mov
and
stos
inc
sbb
fcoml
mov
test
bound
nop
dec
sbb
xlat
pop
out
cmp
push
loopne
es
mov
dec
lahf
cli
out
ljmp
aad
pop
mov
pop
nop
pop
push
lret
insb
fstp
test
popa
and
sbb
or
push
mov
pushaw
loope
loop
adc
and
mov
sub
add
sub
repz
xlat
scas
pop
fisubs
jecxz
adcb
in
cmpsl
jbe
adc
xor
outsb
sub
sbb
je
jle
sbb
dec
inc
push
faddl
out
mov
xchg
pop
inc
mov
sahf
ja
cld
iret
mov
adc
sub
negl
sbb
or
xchg
aaa
rcl
fnstsw
shrl
jae
mov
cltd
fimull
loop
ret
sti
sub
mov
dec
inc
data16
cmp
jb
es
jne
scas
or
inc
xchg
mov
add
adc
push
cltd
cli
ret
roll
mov
pusha
inc
mov
dec
mov
pushf
je
mov
xchg
imul
or
addl
insl
shlb
push
std
jecxz
cmc
shll
inc
pop
shl
jle
popf
lods
nop
mov
mov
fsubp
das
sub
test
dec
mov
pop
dec
andb
fnstsw
dec
cmp
mov
cmovg
add
out
push
sub
test
jecxz
jle
inc
jmp
mov
pop
mov
divb
imul
or
lods
movsl
pop
mov
adc
sub
shrl
inc
and
loopne
push
jecxz
fidivrs
out
jae
push
dec
or
push
fnsave
mov
das
fdivrl
test
ss
jno
roll
js
imul
shll
xchg
stos
cmp
pop
or
daa
mov
mov
ret
mov
sbb
dec
data16
shlb
mov
adc
sub
paddusb
push
rcrl
sbb
cmp
jge,pt
mov
not
loop
sbb
add
mov
or
pop
mov
xchg
jg
lahf
or
movsb
sub
ljmp
addr16
pop
je
loopne
fistl
adc
addr16
pop
cld
ljmp
pop
pushf
les
add
add
outsl
stos
rorb
jne
inc
mov
stos
xchg
mov
pop
call
add
cmpb
xor
in
rorl
xchg
out
out
mov
fdivr
dec
es
cmp
sbb
xor
push
js
push
and
dec
popf
jmp
pop
and
jns
or
mov
out
movsl
lcall
xchg
decb
or
and
mov
inc
push
mov
pop
rcll
rol
out
jg
insb
sub
call
mov
cltd
pusha
or
mov
negb
std
push
mov
adc
sbb
add
test
in
loop
aad
cmpsb
sbb
in
mov
and
jle
mov
rorl
lods
and
jbe
xor
inc
std
ljmp
mov
stc
dec
xor
or
sbb
call
jo
cwtl
test
das
mov
scas
add
mov
adc
adc
mov
addr16
fisttpl
movsl
fildl
rcl
mov
mov
mov
sub
mov
fistps
mov
js
mov
adc
jp
add
in
pop
mov
xor
pop
inc
fcomip
pop
jl
jmp
pop
cmp
scas
xchg
jno
or
imul
cmp
pusha
mov
jg
hlt
in
stc
imul
adc
jge
in
clc
sbb
imul
das
stos
cmp
lods
mov
outsl
pop
ud0
clc
push
xchg
cmp
pop
dec
test
inc
lea
bound
gs
xchg
jne
xchg
sbb
dec
jnp
pop
push
je
fists
hlt
ja
sbb
cmp
fcomps
push
mov
mov
mov
int
or
add
cmp
ljmp
pop
cmc
out
outsb
mov
pusha
pop
fildl
shrl
mov
mov
xchg
cmp
call
xor
ds
xchg
ds
push
mov
jno
cmpsl
cmpsb
pop
push
jbe
shrl
outsb
cmova
pop
ret
loop
mov
hlt
test
aad
xor
ret
or
loop
out
stos
inc
inc
stos
push
iret
in
rcrl
add
or
imul
decl
push
fidivs
xchg
mov
sub
inc
fistps
mov
in
xor
stc
push
mov
in
mov
pusha
pop
cmp
jmp
push
loop,pt
xchg
xchg
iret
push
movsl
clc
je
call
sub
test
enter
lcall
pmaxsw
xor
mov
pop
mov
push
mov
jle
ror
mov
add
cmp
cmpb
les
jmp
cmp
jg
mov
xchg
xor
jo
jbe
xor
cs
inc
js
ret
iret
iret
pop
ret
cmp
pop
mov
dec
mov
add
mov
fucomip
pusha
aaa
mov
ss
sub
mov
dec
cmp
dec
jl
ljmp
test
pop
mov
sub
jp
jp
jmp
inc
push
mov
fildll
xor
aam
mov
xchg
rorl
jo
mov
sbb
sqrtps
xchg
dec
adc
dec
dec
xchg
mov
es
jge
outsl
scas
or
dec
test
and
jns
mov
jo
sub
das
das
jge
arpl
or
pop
jecxz
jecxz
lods
loope
sbb
pop
ret
cmp
and
or
adc
push
or
es
or
les
loope
xor
pop
jo
cmpsl
push
mov
jmp
sub
sbb
jge
jmp
push
cli
sub
icebp
aas
add
aam
cmpsl
aam
mov
inc
push
hlt
add
pushf
lcall
jg
sub
jns
mov
sbb
out
pop
dec
pop
out
imul
sahf
mov
pop
adc
sub
ss
cltd
jmp
popa
mov
icebp
mov
sbb
je
jae
es
or
mov
scas
sbb
scas
cwtl
jns
int
shrb
out
mov
and
xchg
mov
push
or
decb
incb
mov
dec
scas
iret
and
add
jo
xor
mov
test
xlat
repnz
rol
adc
sub
fnstenv
adc
and
cmpl
add
or
aam
xchg
mov
ficoml
xchg
inc
inc
arpl
push
and
mov
loopne
and
dec
dec
add
xor
jb
movsl
push
bound
repnz
or
cmp
jbe
jns
lods
and
jmp
add
push
cltd
dec
clc
out
gs
push
roll
cld
ljmp
xchg
fcompl
hlt
aam
add
jo
cwtl
pop
and
aam
outsb
cld
adc
or
dec
cmp
dec
dec
pop
add
fdivl
xchg
jge
fwait
outsb
sahf
adc
js
inc
leave
mov
mov
pop
or
je
mov
pop
clc
fists
or
nop
ljmp
arpl
addb
mov
cmpsb
sbb
paddsb
sub
adc
ljmp
scas
fdivr
lcall
fwait
xchg
orb
jns
int
movsb
cmp
push
jb
std
je
int
mov
mov
outsb
loop
and
xor
or
dec
js
xchg
pushl
fs
cmpsb
cltd
sub
dec
scas
daa
sbb
xor
push
push
arpl
push
jle
ret
inc
jg
jb
ror
or
mov
add
enter
push
lock
pop
or
xchg
pusha
xor
fidivl
fstpt
les
lods
jae
mov
inc
lret
push
shl
inc
jb
stos
ja
inc
xor
xor
and
aam
push
aam
dec
mov
pop
sbb
dec
in
mov
lret
pusha
mov
inc
sbb
imulb
mov
inc
cli
mov
loop
push
pop
cltd
mov
incb
cmp
in
notl
xlat
lds
repnz
inc
das
mov
mov
rcl
xorb
cmp
push
pop
jnp
push
test
cli
push
fsubr
cmpsl
add
adc
addl
mov
sub
mov
subb
clc
cwtl
xchg
int3
dec
bound
out
loop
inc
sub
jb
decl
scas
pop
aam
push
jl
imul
ljmp
ljmp
loope
pop
dec
hlt
sub
lea
dec
inc
rclb
xchg
mov
hlt
xchg
jl
lahf
jmp
call
xor
mov
cmc
mov
jp
push
in
loop
and
jle
lcall
cmpsl
jge
nop
insl
pop
push
cli
inc
cmp
arpl
jl
sub
push
add
sbb
in
das
inc
pop
scas
sbb
icebp
pop
scas
mov
dec
ja
jb
dec
lret
push
std
in
or
dec
lds
in
mov
pop
mov
adc
sbb
test
movsl
sbb
inc
push
xor
inc
xchg
test
daa
js
push
mov
testb
xchg
pushf
pop
mov
loopne
lods
pop
decb
inc
and
mov
inc
and
push
sahf
sahf
jp
cmpsb
insb
daa
repz
cmc
cmpsl
mov
andb
mov
stos
or
andl
adc
lods
push
add
and
push
roll
or
andb
cmp
scas
or
adc
sbb
push
andb
jg
sub
imulb
out
or
rolw
push
das
out
fisttpl
push
stos
xchg
mov
loopne
aaa
inc
xor
add
ret
rol
jae
shrl
add
jg
outsb
pop
pop
add
push
jns
imul
bound
into
or
ret
scas
out
inc
aam
dec
push
pop
mov
xchg
push
push
or
xchg
jl
mov
mov
mov
mov
jp
add
cmp
mov
jl
and
inc
push
lea
add
mov
inc
cmpsl
xchg
pop
pop
cmp
add
pushf
loop
sbb
pushf
loop
xchg
ret
push
jbe
jg
je
fadds
loopne
push
xchg
loopne
mov
iret
add
insb
test
sbb
dec
sbb
in
xor
xor
or
scas
roll
stos
insb
movsl
or
mov
ljmp
sbb
dec
hlt
je
sbb
or
divb
jno
sbb
in
xor
sbb
in
and
ja
popa
add
adc
loopne
shlb
enter
fdivrp
or
cmc
xorl
mov
and
mov
pop
iret
dec
sti
ret
jbe
or
xor
out
mov
jle
mov
das
outsl
scas
mov
fildll
inc
outsb
mov
dec
test
inc
nop
xor
dec
fildl
adc
inc
xor
in
push
icebp
and
dec
call
out
sarl
scas
cltd
sbb
sub
idivb
fistl
out
shl
dec
or
js
or
jns
add
inc
ljmp
jle
orl
adc
or
dec
pusha
jmp
fidivrs
lock
mov
xchg
es
into
cltd
rclb
pop
or
in
stos
pop
xchg
push
rcrb
scas
cmp
shlb
ret
sub
xor
jmp
jmp
fsubrl
rcll
data16
cmp
cmp
add
push
sbb
fdivrs
add
fbld
xor
cmp
mov
cmpsl
jp
xor
movsl
rorl
sub
imul
aaa
xchg
mov
xchg
xchg
pushf
mov
test
push
jmp
aam
mov
into
adc
mov
sbb
ret
jae
add
inc
ja
aam
sbb
or
ja
jo
mov
pop
not
enter
push
mov
adc
sbbl
ret
int3
cmpsl
push
into
out
mov
mov
mov
adc
fisubs
pop
aaa
xchg
xchg
stc
and
sub
mov
xchg
fiaddl
shl
push
and
cwtl
outsb
mov
and
dec
inc
data16
ljmp
and
jns
cmpsb
xor
add
sub
cli
insl
jmp
aas
test
rcl
pop
mov
outsb
les
xchg
add
cltd
cs
pop
xchg
mov
push
int
inc
stos
and
mov
pop
nop
or
addl
mov
scas
pop
sub
pop
pop
sub
iret
call
pop
and
repnz
pop
dec
inc
add
js
insl
in
movsl
enter
jo
and
dec
inc
jmp
add
test
flds
lds
jecxz
push
pop
inc
adc
and
mov
mov
dec
in
jp
jne
sbb
xchg
ss
jno
mov
cld
stos
mov
jne
add
movsl
rolb
loop
aas
jne
add
in
mov
dec
add
jmp
daa
ljmp
lret
fimull
std
cmp
or
add
or
dec
mov
mul
pop
fistps
mov
push
mov
lock
inc
adc
mov
cmpsl
fwait
xor
xor
pop
add
orl
xor
insl
sbb
ss
lcall
js
int3
sub
ss
rcll
xor
ljmp
inc
and
jbe
sbb
icebp
scas
jge
inc
mov
push
ljmp
out
push
add
mov
mov
pop
jae
add
sahf
push
jne
mov
pushf
loopne
decb
jp
in
xchg
pop
daa
mov
dec
test
scas
xorb
adc
lds
xchg
mov
lcall
daa
and
adc
mull
orl
sbb
inc
xchg
fldt
mov
aaa
loopne
add
lcall
push
fists
sub
shlb
push
into
ljmp
fisttpl
push
icebp
pop
and
dec
adc
push
sarb
push
testb
dec
test
in
mov
loopne
xlat
cmpb
xor
sbb
mov
mov
adc
pusha
jp
sbb
mov
pushf
ficompl
bound
jle
imul
xor
fidivl
lock
push
xor
sbb
adc
xchg
sbb
leave
rolb
insl
inc
cmp
cmc
aad
js
or
cmp
cld
shrb
xchg
rcll
out
or
add
outsb
fistpll
xchg
xchg
sub
shr
pop
jne
rclb
es
in
fbstp
and
xor
or
mov
pushl
jle
inc
mov
or
and
in
sub
rorl
repz
and
cmp
divb
jns
sub
aad
sub
aam
outsl
shrl
pop
cmpsb
daa
xchg
jge
fstpt
mov
cmc
data16
in
add
cmp
dec
jb
xor
test
out
pop
add
sub
stos
in
adcl
add
mov
std
and
out
stos
lret
sarl
ds
das
out
jge
fwait
clc
mov
sub
mov
pop
pop
sub
push
inc
cmpsl
retw
sbbb
ror
inc
in
jmp
sub
ret
or
pushl
or
pusha
xor
test
mov
jbe
cmp
imul
cmpsl
or
leave
xchg
xor
inc
or
repz
jbe
aam
mov
cmp
pop
xlat
push
ljmp
add
cmp
xlat
out
add
popa
inc
cmp
popf
and
push
aas
out
nop
outsb
ffreep
mov
fdivs
pop
push
outsb
je
popf
pop
jmp
xor
adc
out
dec
xorb
sbb
in
push
mov
in
push
arpl
push
or
popf
inc
lcall
mov
xor
mov
mov
fimuls
daa
sub
mov
sar
movsl
or
sbb
sbb
adc
and
iret
inc
lds
fadds
fcoms
or
dec
insb
aaa
lcall
movsl
cmpsl
mov
stos
jmp
mov
cmpsb
cmp
das
lret
ss
sub
or
pushf
lods
insl
jnp
xchg
repz
shll
cltd
pop
add
bound
inc
mov
xchg
dec
notb
addb
pop
call
push
pop
mov
sbb
sub
mov
adc
je
and
or
fldl
push
sbb
rcl
dec
loopne
cmp
imul
pop
sbb
mov
mov
push
fisttpl
shr
popfw
fwait
xor
outsb
mov
pop
insl
sub
push
lahf
popa
and
les
mov
inc
cmp
stc
lds
hlt
mov
sub
andl
dec
insl
cli
adc
in
mov
xchg
das
jle
adc
insb
loopne
sbb
push
stos
pop
mov
loope
inc
imul
nop
js
push
inc
mov
aad
jecxz
dec
pop
push
push
fsub
repnz
mov
roll
and
adc
enter
cld
inc
in
adc
iret
fcoms
in
inc
adc
and
ret
mulb
push
faddp
add
xor
fcoml
in
orb
dec
icebp
hlt
shll
and
imul
cmp
add
lods
pop
xchg
movsl
lods
test
addl
into
push
dec
ret
push
icebp
rol
or
popa
adc
cli
sbb
and
jg
push
and
rolb
inc
pushf
sahf
add
dec
mov
and
adc
xlat
mov
sar
mov
or
add
mov
cmp
loope
lret
movsb
inc
ret
mov
mov
and
dec
lock
dec
xor
cld
stos
in
sbb
sysenter
aad
stos
or
sbb
jle
not
addb
in
xlat
bound
cmpsb
fiadds
inc
call
sti
sbbb
mov
mov
push
xor
xor
jg
and
dec
mov
xor
in
cwtl
adc
arpl
mov
rcr
mov
push
pop
adc
xor
rcr
ret
sbb
xchg
lock
test
fisttpl
lea
xor
pop
movsb
add
jo
mov
fistpll
test
ds
xor
icebp
aas
fwait
sub
sbbb
in
add
cld
lods
jne
mov
push
or
in
pop
push
outsl
mov
enter
push
pop
ret
jne
aas
outsb
push
add
jns
sub
jp
push
xchg
inc
sub
outsl
call
ds
or
cld
pop
sahf
ds
cs
out
or
test
sub
mov
int
in
loopne
mov
cmp
ret
pop
pushf
dec
adc
adc
stos
divb
inc
in
jne
sbb
pop
out
les
push
add
test
add
popf
lods
and
outsl
xor
outsb
mov
pusha
inc
fcoms
std
loop
push
adc
adcb
hlt
inc
mov
xor
dec
mov
mov
rorb
add
cmc
rcrb
inc
xchg
xchg
stc
cmp
inc
ss
sub
imul
inc
popa
arpl
pop
pop
sti
push
daa
lock
mov
sub
loopne
sub
sbb
popf
adc
loopne
adc
outsl
or
lahf
aad
and
lods
xchg
sahf
call
push
pop
sbb
pushf
pop
adc
xchg
inc
js
stos
in
push
xchg
adcb
leave
loope
xor
testl
cltd
pop
and
mov
pop
add
or
pop
cmp
fnstsw
or
xor
gs
rcl
pop
cmpb
cs
js
test
sahf
jnp
pop
mov
shll
rclb
inc
rclb
incl
jbe
add
cmc
cmpl
repz
roll
jp
cmc
add
dec
xor
pop
call
lahf
int
xchg
dec
repz
pusha
test
shrl
insb
xchg
jno
rol
and
jne
dec
dec
stc
add
and
fistpl
mov
aad
inc
mov
push
inc
aad
push
dec
test
sti
loope
xor
out
and
inc
jge
fimull
cld
xor
icebp
ret
clc
mov
aam
in
mov
mov
mov
cli
inc
sbb
sbb
lock
aaa
mov
mov
insb
push
loop
imul
xchg
dec
fwait
ds
xor
push
out
stc
lea
or
lds
pusha
add
push
es
iret
lcall
cwtl
push
xchg
outsl
and
cmp
or
sbb
push
xchg
xchg
addr16
iret
cmp
dec
andb
aaa
cmp
pop
adc
ljmp
jge
lock
xor
fisubrl
aaa
stos
jge
pusha
scas
arpl
xchg
test
pop
adc
pop
das
jl
je
cmp
jbe
pop
out
nop
jmp
cmpb
subb
insb
rorl
mov
or
xor
clc
pop
cld
xchg
and
inc
ja
cmovo
out
insb
cmp
xor
insl
into
fadds
or
sbb
test
rcrb
aam
and
gs
jp
jecxz
cmp
flds
sbb
bound
xor
push
les
mov
adc
pop
aad
jnp
xlat
bnd
adc
rolb
or
jno
xchg
xchg
xchg
mov
insl
mov
mov
sbb
mov
fmuls
lods
and
test
and
movaps
cwtl
mov
int3
addl
imul
imul
mov
scas
xlat
pop
inc
orl
mov
nop
pop
ja
sarl
out
lea
call
pop
filds
xchg
in
loop
sbb
or
dec
mov
mov
leave
mov
xchg
pop
sbb
aad
int3
ror
iret
jg
in
pop
cmp
or
outsl
cld
outsl
std
test
and
addr16
lock
dec
dec
sbb
shr
das
nop
push
inc
mov
jne
es
jge
pop
es
repz
cmp
and
arpl
mov
sbb
mov
xor
orb
jae
xchg
mov
das
insb
or
push
add
sub
out
repz
sahf
ss
out
inc
clc
sbb
std
pop
scas
fdivrl
pushf
icebp
aam
mov
clc
inc
pop
testl
sub
sbb
push
rcrb
push
mov
lahf
test
mov
inc
mov
adc
jge
outsl
ja
add
adc
lods
xchg
mov
sub
pop
loop
jecxz
scas
xor
out
dec
jno
mov
add
int3
sarb
jp
push
add
xchg
ss
pop
ret
vmovsd
dec
and
pop
enter
pop
push
in
dec
mov
shl
jecxz
mov
sub
cmp
sbb
add
mov
cmpsb
xor
push
sbb
add
cmp
imul
popf
fs
jl
pusha
push
jne
sub
mov
aam
or
mov
test
jge
and
and
or
sti
add
push
lret
dec
es
and
orl
shl
mov
loopne
int3
enter
cmc
in
filds
out
addr16
cs
or
sbb
es
or
mov
in
js
mov
push
push
into
loopne
sarl
das
loop
jnp
xchg
push
dec
aam
adc
les
mov
mov
mov
sysenter
mov
enter
lahf
sbb
ret
in
es
cmpsb
addr16
std
add
cmpsb
mov
mov
dec
xchg
data16
sbb
fmull
sbb
ljmp
aas
jl
fldenv
jp
inc
std
out
lds
mov
push
inc
jns
mov
inc
rorb
mov
and
test
es
xchg
or
sar
jg
cmc
inc
xor
inc
mov
in
and
push
orl
xchg
pop
aad
stos
sbb
xor
adc
jnp
xor
jge
push
dec
add
loopne
mov
sub
fcomps
push
adc
sbb
sub
ret
scas
aaa
cmp
enter
pushf
or
incl
mov
mov
ret
loope
ret
lcall
or
adc
jge
push
pop
rorb
cmp
fxch
cmc
inc
jne
enter
xchg
push
pushaw
stc
dec
push
push
out
mov
jno
dec
dec
fdivrs
mov
scas
addr16
mov
ret
inc
in
xchg
push
fwait
nop
and
push
mov
in
insl
pop
dec
mov
test
add
pop
sbb
rcr
clc
push
cmp
xchg
xchg
add
into
imul
out
dec
jl
push
and
stc
add
sbb
incb
or
clc
adc
jmp
add
nop
ljmp
loopne
stc
sub
test
or
push
jg
data16
movsb
sti
sub
mov
outsb
lods
cmovle
inc
fisubrs
mov
insb
test
push
fidivrl
adc
pop
push
cmp
mov
or
test
xchg
fistl
por
fucomi
idivl
inc
mov
mov
fists
js
test
mov
xor
inc
sahf
jns
mov
xchg
cmp
push
lea
in
jae
jl
push
push
jmp
sbb
out
cmp
aaa
push
fcoms
and
inc
or
cmc
je
mov
stos
mov
icebp
testl
aad
mov
jbe
stos
cli
mov
xor
mov
mov
jl
jmp
scas
ds
hlt
insb
mov
mov
fisubs
sub
insl
sub
or
cmp
dec
aam
movsl
cmp
mov
test
inc
xlat
mov
or
cmp
fistpl
sbb
sub
xchg
jae
cmp
or
loop
rcrl
das
mov
sbbb
sar
and
mov
push
add
inc
mov
mov
lcall
test
push
cmpl
push
xchg
push
in
jg
loop
arpl
sub
sahf
lock
stos
jecxz
push
scas
mov
fldl
mov
sbb
adc
mov
mov
andl
xor
cmpsb
nop
aaa
jl
add
nop
seto
dec
mov
outsl
je
jecxz
pop
jmp
push
inc
fmuls
loopne
idivl
shlb
and
idivb
pop
xor
insb
sub
inc
push
scas
adc
mov
movsl
sub
popa
push
lods
or
push
hlt
jl
pop
mov
pop
addr16
loop
jl
pop
jo
in
in
fdivr
out
cli
es
test
aad
fildl
inc
jns
pop
insl
fsubr
sub
xchg
and
movsl
stos
and
in
stc
mov
cmpsb
loop
movsb
xor
lcall
mov
inc
dec
ljmp
mov
test
test
pop
enter
jg
push
xchg
and
xor
cmpsl
es
mov
flds
xchg
sub
push
sub
daa
adc
mov
in
not
xor
insl
shll
mov
je
ds
ja
jae
xlat
rcrl
icebp
arpl
sub
lea
inc
sbb
jne
insb
and
sar
icebp
shrb
aad
mov
int3
or
inc
fcomi
iret
pop
add
xor
jecxz
add
mov
mov
xorb
jmp
enter
push
ja
sbb
mov
fistpll
xchg
add
push
mov
incb
out
fdivr
pop
hlt
push
mov
dec
sbb
push
frstor
and
mov
inc
pushl
into
mov
mov
adc
out
push
cwtl
inc
jno
lock
test
test
icebp
or
adc
fadds
sbb
adc
push
mov
mov
loopne
mov
call
sub
mov
and
adc
mov
lock
push
cmp
scas
ljmp
loope
cmp
mov
in
xor
lahf
or
jbe
mov
sbb
or
test
aas
sbb
punpckhbw
inc
fstps
hlt
adc
aad
pop
pop
sbb
aaa
pop
jle
inc
jb
orl
add
in
mov
add
add
pop
js
sarw
sbb
leave
jle
inc
out
sub
and
jecxz
cmc
dec
pop
dec
ss
fs
cmp
or
jge
iret
leave
mov
insl
inc
jb
jno
xor
inc
mov
inc
jmp
cwtl
cmp
cs
scas
jno
sti
inc
mov
aad
jbe
das
scas
pop
clc
fbstp
cmpsb
popa
adc
fwait
xlat
xor
bound
lock
bound
jbe
nop
ss
jg
pusha
mov
inc
push
inc
xor
xor
test
xchg
and
and
sti
and
cmp
pop
inc
inc
clc
push
mov
mov
push
cmc
cli
nop
sti
es
lcall
xchg
iret
scas
mov
sbb
adc
ljmp
lods
out
jp
xchg
dec
adc
int3
ret
lock
pushf
inc
dec
dec
push
das
cmp
xchg
dec
addr16
inc
pop
fstpl
repz
sbb
push
push
lret
outsb
clc
cltd
push
inc
icebp
lret
leave
xchg
pop
in
fwait
loope
mov
roll
xor
out
in
aas
mov
pop
and
data16
nop
cmp
mov
xchg
mov
ja
insl
das
jg
cmp
fwait
jl
scas
in
ljmp
cld
jb
sti
add
test
cmpsl
xchg
adc
mov
out
call
ret
pushl
inc
mov
sbb
inc
or
clc
loop
lret
ja
nop
cmp
xchg
pop
jge
int
ret
dec
sub
in
mov
or
adc
xlat
outsb
mov
andb
gs
lock
or
fisttpl
push
pop
cmp
fiaddl
into
push
lret
mov
add
mov
lods
outsl
xchg
xchg
and
pop
xchg
dec
mov
inc
sub
rcrb
fstps
cmp
inc
and
xchg
les
rclb
icebp
cmp
dec
xchg
mov
popa
mov
das
fdivrp
dec
push
mov
mov
inc
daa
mov
mov
sar
mov
call
jno
andl
jmp
add
sub
iret
sbb
int
or
inc
ljmp
jge
jp
std
adc
jbe
adc
mov
cmp
mov
sbb
sbb
das
inc
insb
pop
filds
leave
pop
sbb
xchg
rorl
std
cltd
push
xor
cmp
in
pop
mov
mov
sub
xchg
stc
pop
clc
shr
scas
jnp
sub
and
js
mov
cmp
sbb
push
test
cmp
dec
pop
idivl
push
adc
popf
leave
or
push
add
mov
mov
cld
mov
mov
clc
jmp
cld
dec
aas
fisubl
insb
mov
mov
ds
out
test
rol
pop
cmp
out
fisubrl
fldt
outsl
jnp
add
lcall
mov
clc
mov
mov
rep
insl
or
jl
imul
dec
pop
cli
frstor
jno
nop
pushf
sti
jbe
data16
or
add
dec
lahf
out
xor
push
pop
insl
fldl
fwait
push
ljmp
test
lret
pusha
test
and
shr
adc
ret
js
mov
cwtl
in
daa
pop
mov
int
push
fistpl
fstpl
gs
fcmovnb
pop
xor
movsb
daa
adc
fucom
dec
or
pop
push
jmp
lret
jmp
aam
fdivp
jle
out
mov
dec
xchg
add
cmp
syscall
repnz
scas
inc
scas
clc
sbb
push
fistps
jmp
mov
fs
out
je
aaa
mov
or
and
sub
mov
mov
int
stc
rorl
inc
inc
xchg
xchg
jb
add
mov
jecxz
mov
incl
ret
mov
mov
mov
and
and
xchg
push
xchg
cmp
mov
sub
or
test
lcall
adc
or
fwait
out
pop
and
mov
dec
add
lcall
sbbl
inc
push
jp
ret
imul
mov
sub
pop
ret
fmul
dec
and
jecxz
inc
cmpsb
jg
insb
push
ss
gs
push
loopne
and
lcall
stc
jl
mov
inc
mov
xchg
loop
hlt
in
inc
adc
dec
adc
aam
outsb
or
dec
aad
mov
cmp
mov
addr16
testl
jno
loopne
pop
mov
add
pop
inc
std
mov
or
fdivrl
ret
roll
fsubrl
in
fdivrs
mov
mov
out
push
mov
clc
push
mov
mov
lods
push
movsl
out
jbe
mov
jmp
mul
in
jae
and
push
push
push
fimull
loop
imul
mov
lods
sub
aas
jb
push
enter
mov
mov
mov
clc
les
mov
mov
sub
mov
mov
stos
sbb
andl
arpl
dec
adc
add
or
cli
mov
xlat
lds
lcall
out
subb
sbb
fstps
cmpsl
xchg
mov
jmp
mov
das
lea
icebp
popf
out
mov
hlt
insl
mov
shlb
sub
xchg
ljmp
mov
mov
jmp
fidivrs
gs
sarb
movsl
sbb
inc
adc
pop
dec
dec
xor
insl
loope
jbe
adc
dec
push
xchg
lock
dec
lret
mov
pusha
add
adc
mov
mov
stc
mov
push
mov
dec
lock
xchg
dec
mov
daa
lock
ret
sti
inc
mov
outsl
jae
out
jo
sbb
push
pop
stos
add
add
cmp
nop
in
in
push
icebp
ja
shlb
add
outsb
or
jnp
mov
mov
jbe
jo
mov
or
inc
cmpb
ret
filds
mov
in
cltd
inc
out
pop
push
push
push
and
xor
ja
rcr
cmp
gs
movsb
hlt
je
pop
daa
mov
sarb
shlb
loopne
mov
cmp
jnp
arpl
or
imul
sbb
mov
pop
sahf
iret
leave
mov
jnp
add
xor
xor
in
sbb
sbb
dec
popa
jg
add
mov
std
jo
adc
aas
out
loop
adc
fstpt
inc
not
test
cmpl
sub
mov
mov
ficoml
aas
jmp
push
sbb
xor
sarl
in
and
push
insl
call
stos
movl
scas
mov
push
std
adc
mov
ss
mov
mov
or
sbb
les
dec
sub
sbb
ljmp
sbb
jp
rcrb
out
adc
mov
insb
push
andb
inc
call
fidivl
and
sbb
sub
add
jne
fidivs
data16
addl
pop
pop
or
call
pop
xor
cmp
jmp
popf
sbb
das
popf
adc
and
jecxz
xor
sub
mov
push
pop
bound
cmp
push
rclb
das
cmp
and
dec
jno
jb
int3
ret
and
mov
add
dec
xor
fistpl
pop
mov
push
movsb
jge
jecxz
sbb
lods
jg
cli
xor
push
fisttpl
xchg
aaa
mov
aad
sbb
adc
lahf
cld
rolb
int
rolb
icebp
xor
cmp
loopne
sub
push
push
mov
test
stos
push
decl
push
cmc
ja
iret
dec
aaa
and
lret
mov
mov
lock
fs
sti
aad
mov
mov
inc
inc
xor
sub
cld
xchg
pop
mov
mov
fnstsw
movsb
jbe
mov
lret
inc
lahf
pop
repnz
cmp
lahf
filds
and
push
test
imul
pop
jp
imulb
xchg
mov
dec
loope
popf
shr
out
jb
aaa
push
mov
mov
push
jb
mov
or
ret
pop
sbb
xchg
inc
stos
push
fcoms
sti
push
jp
ret
add
pop
stos
cs
sarl
hlt
dec
xchg
jne,pn
mov
sub
gs
add
call
hlt
pop
in
fdivrs
xchg
push
sbb
lds
jne
push
adc
sub
movsl
leave
jmp
push
pop
pop
sbb
lcall
int3
xchg
adcb
dec
mov
insb
cmc
xchg
jb
in
inc
cmpsb
movsl
in
and
stos
fstpt
xor
lea
ja
dec
inc
or
shl
in
add
push
loope
ret
ror
int
pop
sahf
mov
or
lcall
scas
mov
bound
push
or
ret
pusha
adc
dec
jne
popl
call
nop
cmc
sub
loope
jp
mov
cltd
insl
aaa
ds
int
xchg
mov
cmp
xlat
orl
test
mov
sbb
and
repnz
test
cmp
lcall
insl
cmpsb
aas
add
movb
shrl
mov
add
xchg
scas
cs
inc
mov
xlat
ss
push
ret
pop
xor
push
imul
sub
lea
stos
test
inc
pushf
pop
addl
mov
push
nop
gs
rol
loope
or
movsb
xchg
lret
fdiv
or
lret
xor
stos
sti
test
and
jno
pop
data16
or
adc
jno
sbb
data16
mov
or
cli
in
enter
or
ljmp
into
mov
rolb
and
push
insl
add
jno
and
cmp
add
ds
mov
jp
dec
in
mov
cmp
scas
stos
add
mov
icebp
aas
cmp
movntps
cwtl
jmp
add
jl
mov
or
dec
inc
adc
inc
out
sub
insb
dec
mov
jg
ret
xchg
js
lret
or
leave
imul
dec
adc
pop
xor
rolb
ffree
cmp
std
or
xor
cmpsb
cli
cmpsb
jbe
and
xor
and
ss
lds
out
lret
idivb
inc
leave
es
mov
pop
daa
jo
ret
jnp
and
mov
jb
inc
jbe
cmp
loope
hlt
or
fwait
jl
faddl
sub
add
hlt
or
mov
aam
mov
rclb
mov
or
fstpt
cmp
sub
push
fildl
lcall
mov
ja
fdivrs
repz
xchg
shrb
aaa
in
clc
js
add
mov
mov
lahf
inc
imul
aaa
mov
push
dec
push
jp
pop
hlt
cmp
fnstsw
aas
and
sub
sbb
xor
loope
adc
push
xchg
inc
clc
aam
sarl
cwtl
jb
fadds
fadd
inc
daa
mov
and
leave
ss
daa
jae
adc
rcrl
es
fcmovne
cmpsb
movsb
jno
and
and
xchg
pushf
fisubl
sub
push
ds
mov
cs
xchg
mov
adc
mov
xchg
sub
xchg
xchg
mov
lcall
and
rorl
adc
push
pop
adc
sbb
cmc
mov
xchg
fucomi
xor
lahf
pop
adc
sub
push
cmp
insl
jbe
or
fs
sbb
cmp
cmp
in
hlt
sbb
je
rorb
aas
xor
ljmp
in
js
mov
inc
jg
fisubrl
jge
xorb
adc
jl
cmp
mov
fldl
push
mov
movsl
shlb
insb
dec
lds
mov
sbb
icebp
rcr
add
push
xor
adc
mov
mov
jnp
clc
mov
rcr
andl
and
jae
cmp
xchg
in
add
into
out
mov
push
xchg
in
pop
jp
push
xor
mov
mov
pop
loopne
outsb
mov
aad
push
filds
xchg
call
test
subb
jl
inc
mov
or
pop
xor
jmp
push
imul
fcmovnbe
or
mov
sbb
sbb
jg
mov
mov
and
fwait
nop
rclb
mov
mov
dec
shll
enter
ja
dec
aam
outsb
pusha
and
in
shrl
mov
xchg
jle
andb
or
jns
mov
fidivrl
and
or
sbb
push
frstor
mov
jge
jbe
popa
or
and
es
aas
or
je
cmp
inc
and
and
insb
pop
mov
mov
leave
push
aam
add
adc
loop
mov
hlt
out
pop
je
add
mov
and
and
add
cmp
enter
pop
insb
call
cmp
dec
xlat
jns
shrl
or
jnp
int3
scas
ds
ljmp
testl
push
int
sarl
lahf
arpl
and
jbe
ja
mov
and
dec
mov
pop
bound
sbb
outsb
push
sahf
dec
mov
decl
mov
and
inc
adc
loope
movl
icebp
cmpb
iret
loopne
push
cmp
and
scas
xchg
repnz
daa
mov
sbb
lods
pop
add
jl
vpunpckhqdq
mov
xlat
test
sub
imul
push
mov
lods
mov
cs
pop
test
enter
lods
shlb
mov
push
push
rcrl
popf
pop
das
pop
pop
jmp
mov
push
mov
and
scas
imul
inc
xlat
lock
jnp
cli
inc
leave
fdivrs
jmp
rcr
adcb
pop
jo
lods
push
xchg
fs
jp
add
pop
push
xchg
sbb
mov
insl
pop
cmp
ss
mov
stc
sbb
insl
mov
enter
sbb
stos
xor
cmp
movsb
jecxz
add
jb
or
jp
xor
dec
neg
sbb
aas
push
rcrl
mov
inc
notl
js
lret
mov
mov
push
sub
dec
jecxz
sbb
fcmovnu
lret
cwtl
sbb
xor
xchg
pusha
xchg
cmp
push
ret
jmp
jmp
fisttpl
cmp
or
mov
sahf
ljmp
insl
loope
scas
test
sbb
sbb
cs
cmp
push
data16
mov
mov
jecxz
sub
insl
mov
imul
xchg
cmp
std
leave
mov
jmp
icebp
and
xor
stos
aas
pusha
inc
pop
daa
jb,pn
add
pop
addb
inc
push
sub
cmpsb
or
cmpb
mov
mov
scas
pop
aam
adc
push
mov
lret
cltd
or
mov
sti
lds
jp
mov
mov
ret
neg
test
jns
gs
xchg
and
mov
cwtl
push
xchg
jecxz
sub
xor
repnz
ror
or
aad
xchg
jno
xor
jbe
jecxz
adc
test
push
ret
in
and
jbe
fisubrl
jl
clc
xchg
add
lock
lods
dec
mov
cmp
fistl
insl
pop
push
subl
rol
adc
addr16
xchg
dec
data16
fidivl
movsb
dec
adc
popa
mov
sub
sbb
add
jo
mov
push
jne
xor
push
cmp
shll
mov
inc
lcall
xchg
push
std
insl
push
ja
cmp
das
xor
notl
xchg
push
pop
sub
mov
pop
shrl
and
and
xor
fldl2e
subl
leave
and
jae
jg
testl
mov
mov
xor
push
popl
sub
add
jecxz
pop
jb
hlt
lock
mov
mov
push
xor
adc
adc
lea
rclb
loop
cli
mov
rorl
xchg
cld
mov
sbbl
enter
push
cmpsb
lods
aas
mov
xor
sub
sub
mov
inc
mov
add
lret
mov
test
and
push
mov
in
fsubrl
adc
inc
jmp
call
js
enter
sbb
cld
xchg
loope
pop
outsl
lods
cmp
adc
mov
dec
mov
pop
enter
out
sti
pop
in
lcall
test
xlat
mov
fildl
mov
xlat
or
mov
adc
test
xchg
adcb
xor
out
pop
fucomip
adc
xchg
mov
cld
add
add
cmp
xchg
push
sub
leave
ljmp
add
mov
xchg
sub
js
lret
jg
lcall
ret
inc
repz
sahf
xchg
mov
add
jg
das
mov
pop
fimuls
pop
mov
loop
mov
mov
mov
xor
test
sbbl
dec
enter
xchg
repz
loop
fistpl
flds
add
mov
aam
push
cmp
mov
fisttpl
add
adc
ret
mov
and
sbb
xchg
lahf
mov
icebp
popf
or
andl
push
sbb
jp
lds
mov
or
std
xchg
mov
out
cmp
popa
lock
pop
imul
cwtl
stos
inc
in
daa
mov
mov
aam
repz
inc
std
lods
mulps
or
jg
mov
inc
out
jecxz
ret
fwait
jbe
ljmp
outsb
inc
jns
add
push
xchg
ret
aas
add
cwtl
lret
stos
mov
adc
xor
xchg
leave
negl
cli
mov
mov
inc
js
inc
sarl
insb
iret
repz
mov
loop
bound
push
arpl
loopne
outsl
push
ss
pop
mov
sbb
cmp
out
xchg
mov
or
imul
jg
fstl
mov
in
pusha
mov
fdivrp
inc
test
xchg
and
and
movsb
mov
sub
jbe
add
push
mulb
jns
sbb
loope
lret
imul
xlat
test
xor
aam
add
mov
sbb
scas
sub
pusha
xor
ret
xorb
mov
xchg
pop
jae
or
popf
add
sti
jmp
aad
mov
pop
xchg
stos
outsb
int
pop
xchg
pop
xchg
faddl
push
lahf
insl
clc
imul
mov
pop
add
fldt
je
or
rorl
addr16
xchg
mov
dec
sbb
mov
sbb
data16
cld
adcb
push
pop
pop
mov
sbb
data16
cltd
mov
sbbb
xchg
sahf
mov
mov
enter
fwait
sbb
arpl
add
sub
pop
adc
sub
inc
mov
fadd
mov
pop
shr
dec
mov
xor
jle
push
sti
mov
jb
and
mov
add
xlat
xchg
jle
pop
push
leave
push
enter
inc
ds
push
imul
sub
push
xchg
das
xor
push
lea
inc
lcall
int
pusha
mov
out
xchg
adc
les
mov
jle
xchg
pop
mov
cmpl
inc
sub
xor
aaa
mov
lds
mov
inc
ficomps
fbstp
lahf
xor
lret
jg
cmp
mov
outsl
pop
sub
imul
leave
sbb
stos
sbb
pop
aad
mov
xchg
decb
jmp
mov
fcomi
xchg
aaa
scas
les
insl
addl
adc
int
add
lret
shll
sub
fnstcw
das
stos
addr16
ljmp
mov
mov
cmp
push
cld
test
in
or
sbb
outsl
or
jne
in
dec
ret
enter
mov
lods
xchg
out
and
pop
push
jle
rolb
fildl
pop
xchg
dec
xor
and
fldl
movsb
jo
adc
add
popa
or
fadd
je
dec
and
outsl
or
lock
mov
repnz
fdivrp
out
scas
pop
es
out
push
sub
and
shl
pop
sbb
subb
mov
lcall
addb
cmp
inc
loopne
inc
pop
repz
adc
cs
aam
push
pop
insl
jl
mov
mov
mov
dec
jns
orb
cmc
es
rolb
in
or
mov
add
adc
jp
push
ja
pandn
push
push
pop
in
inc
sbb
test
xlat
xlat
cmp
push
aam
mov
push
push
incb
addl
mov
outsb
fisubs
in
fwait
mov
mov
or
in
mov
adc
adc
out
shlb
incb
loop
push
sbb
dec
push
jl
mov
jle
jmp
adc
jb
popa
xor
aad
push
aam
adc
sub
add
addr16
lret
dec
xor
adc
add
test
mov
jmp
mov
pop
mov
in
lock
outsl
jmp
dec
in
sbb
push
add
jp
roll
pop
add
rorl
sub
pop
add
cli
in
and
sbb
jnp
into
aad
fwait
ss
insb
dec
icebp
mov
cs
pop
hlt
pop
mov
pop
movsl
test
outsl
call
xchg
js
rcr
loopne
jmp
outsl
loopne
stc
jg
sbb
sbb
sub
pop
sbb
fs
xor
repz
add
loopne
outsb
loopne
push
iret
pop
jne
stc
pop
in
adc
pop
cwtl
push
lock
hlt
dec
push
ret
jp
push
mov
outsb
xor
aaa
data16
pop
in
mov
push
pop
xlat
cmc
push
in
xor
int
pop
pusha
add
ds
es
pop
xchg
push
push
dec
outsb
cmp
mov
lea
movsl
aas
aam
jl
cmc
dec
lahf
movsb
clc
in
xchg
clc
fdivrs
xchg
subl
inc
sti
push
add
repz
sbb
mov
pop
cmpsb
mov
jo
rcll
cs
fisttpl
cltd
lods
sub
fistpl
mov
mov
xor
xor
mov
insb
das
sbb
and
rcrl
xor
aam
jl
stc
cwtl
push
loope
fwait
inc
loopne
insl
fstpt
in
jmp
sub
xchg
mov
mov
test
pop
push
aad
mov
rcll
das
xor
mov
mov
jp
ds
into
daa
push
mov
ss
mov
sbb
insl
mov
mov
stos
and
sub
sub
pop
inc
and
repnz
or
mov
mov
ret
arpl
mov
xchg
stos
pop
cmp
std
loop
xchg
loop
sbb
fucomp
mov
mov
jbe
xchg
mov
cld
test
scas
add
pop
cli
ret
addr16
xor
into
jbe
ja
test
ljmp
sbb
fs
sbb
sub
scas
xchg
dec
xor
pop
imul
or
adc
out
adc
hlt
lahf
addr16
or
sbb
cmc
add
aaa
mov
icebp
movsl
aaa
loopne
in
sub
jb
test
icebp
mov
pusha
xor
leave
rol
inc
out
jg
push
fwait
dec
cmpsb
sub
rolb
mov
vmovaps
out
daa
mov
adc
sub
mov
aam
push
sub
cmp
dec
rcll
aad
movsb
and
lods
mov
fisubrl
lahf
cmp
pop
repz
sbb
test
lods
cmc
in
sub
cwtl
cmp
test
repnz
push
loope
adc
imul
in
sub
decl
insl
pop
adc
sbb
ja
and
outsb
fsubs
jmp
push
pop
je
dec
mov
leave
inc
imul
mov
sub
xor
lock
adc
jne
out
iret
push
jbe
arpl
fwait
mov
popa
test
mov
repz
xchg
hlt
xchg
cmp
lahf
fnsave
xchg
mov
pop
cmp
out
or
orl
add
pop
shrb
cld
cmpsb
add
push
add
mov
dec
pop
xchg
or
call
xchg
mov
sbb
or
sbb
dec
mov
jnp
xchg
std
rclb
fdiv
pop
fimull
add
nop
add
sbb
insl
das
jnp
fldl2e
jb
jle
shrb
aaa
ds
or
jp
and
mov
shlb
int
daa
popa
aaa
mov
rolb
pop
adc
or
mov
pop
jmp
daa
popf
and
pop
es
test
jle
pop
scas
stos
cmp
push
and
cmp
mov
xchg
pop
inc
mov
les
adc
subb
insb
int3
popf
sbb
inc
pop
add
xchg
in
jo
pop
imul
mov
mov
adc
xchg
sub
jle
mov
adc
subb
pop
sub
xchg
or
out
paddusw
out
add
fistpll
lds
sub
adc
mov
pop
sbb
mov
xchg
jmp
test
aam
mov
loop
push
les
std
mov
jnp
pushl
outsl
add
insb
lds
in
pop
test
icebp
sbbl
jp
fwait
dec
mov
mov
aam
clc
lods
out
test
sbb
call
cmp
aad
jbe
jle
adc
in
enter
or
and
xchg
fstp
pop
cld
xchg
jecxz
xor
mov
xor
or
andb
mov
lea
push
inc
or
add
outsl
loop
out
push
subb
mov
sbb
inc
lret
push
xchg
test
cmc
adc
sbb
jp
adc
inc
mov
xchg
mov
or
sbb
inc
and
add
mov
pushf
mov
mov
xor
jl
popf
add
xchg
ss
std
inc
inc
xchg
nop
jae
dec
pop
subb
cli
cmp
cmp
lcall
subb
xor
stos
pusha
repnz
outsb
lods
jnp
adc
outsb
mov
bound
popf
fnclex
shlb
mov
test
repnz
cmpl
aad
xchg
push
push
xor
or
stos
lock
pop
and
pop
pop
js
mov
into
dec
mov
fdivr
mov
fldt
cwtl
xchg
adc
add
inc
jo
outsb
jbe
xor
mov
ss
insl
xor
pop
idivl
mov
inc
dec
cmpb
jb
stos
stc
rolb
imul
push
xorb
lock
sub
mov
ret
popa
dec
adc
xor
sub
xchg
mov
mov
mov
aam
mov
insb
shlb
call
inc
or
add
jmp
cmp
jns
mov
push
inc
fldln2
adc
lods
jo
push
or
fidivrs
inc
inc
out
dec
loopne
adc
mov
push
pop
push
push
mov
sub
pop
es
sbb
cmc
repz
aas
or
test
aaa
mov
es
jbe
push
xchg
mov
loopne
fs
stos
test
xchg
pop
lods
adc
das
add
mov
ljmp
cltd
sbb
in
inc
and
in
jg
cld
shl
add
xchg
mov
add
sub
outsb
fisttps
xor
adc
cmp
cmp
and
pop
das
insb
sahf
add
cmp
jecxz
push
or
mov
std
pop
sbb
push
inc
xor
xchg
sub
or
cmp
jecxz
lahf
mov
sbb
sbb
and
aas
sti
or
sbb
daa
add
sbb
sub
cld
sbbb
inc
pop
fs
fnstcw
or
das
mov
fstl
lods
mov
adc
jo
pop
mov
js
mov
das
and
cmpsl
mov
jg
sbb
dec
and
call
scas
outsl
add
add
in
outsl
push
insl
and
sub
sub
aaa
inc
cmpsl
popa
inc
cmpsl
int
xor
sbb
cmpsb
repz
pusha
sbbl
inc
and
mov
movsl
push
lods
and
std
mov
xchg
dec
aas
mov
jecxz
jp
inc
push
addr16
lock
fldt
mov
inc
aam
push
or
clc
push
jecxz
pop
pusha
mov
lcall
sahf
push
and
push
push
and
add
fildl
shlb
add
lods
sbb
jnp
nop
dec
out
jecxz
aad
ficoml
in
jae
fldenv
adc
jmp
pushf
or
mov
xchg
and
xlat
push
inc
dec
std
mov
sahf
jg
and
dec
mov
orb
push
test
adcb
mov
das
sub
push
inc
mov
in
and
movsb
or
mov
mov
inc
mov
scas
add
test
outsb
xchg
jge
test
scas
jb
fidivrl
mov
adc
pop
inc
mov
add
cmpsb
mov
jno
ljmp
popf
sahf
js
scas
mov
repnz
sbb
jns
xchg
pop
mov
movsl
adc
inc
out
or
add
test
sbb
les
cmpsb
loop
sbb
add
testl
mov
in
sbbb
lods
xchg
repnz
dec
bound
movsb
popf
arpl
mov
mov
xor
add
sub
mov
je
repnz
mov
pop
jp
inc
xchg
outsb
cmpsb
cmpsl
pop
mov
jmp
or
jae
out
fsubrp
mov
mov
loop
aaa
jmp
clc
mov
incl
cwtl
addl
adc
and
add
mov
sarb
mov
pop
pop
shl
adc
roll
push
xlat
aad
out
push
xor
movsl
pop
mov
dec
mov
or
scas
outsb
insb
pusha
sbb
mov
addr16
outsl
mov
fdivs
jecxz
mov
iret
jmp
mov
dec
dec
inc
jp
incb
sbb
or
mov
sbb
es
inc
outsl
ret
add
xchg
rcrl
fidivl
jb
push
xorb
aad
jge
or
mov
jmp
mov
push
push
inc
sbb
mov
ficoms
jbe
sti
and
mov
mov
jecxz
lret
popf
xchg
lds
and
mov
sbb
cld
cmp
cli
iret
pop
mov
pop
jmp
hlt
cmpsl
and
rorb
push
iret
fistpl
xor
xchg
pushf
xchg
loopne
cli
data16
sahf
js
push
xchg
sub
insb
rcll
adcb
dec
pop
cli
mov
mov
dec
lock
sysenter
int
subb
inc
call
movsl
or
insl
mov
push
and
outsl
fidivl
orl
push
sbb
push
adc
push
test
decl
pop
push
jge
rcr
push
in
icebp
scas
add
and
push
stos
int
mov
out
cmc
negb
mov
adc
mov
pop
into
xor
vmovss
filds
imul
int
negl
xchg
das
xor
insl
outsl
fistps
sbbl
outsb
sahf
sub
outsb
ljmp
add
aas
sub
jnp
adc
push
xor
orl
add
mov
jne
jp
lods
mov
test
mov
arpl
push
push
test
cwtl
cltd
cmovb
lret
add
jnp
push
xor
stos
fst
dec
inc
imul
in
mov
in
hlt
pop
and
lock
insb
and
fwait
pop
or
in
sti
outsb
fmull
rcl
dec
int
xor
sbb
push
or
xorb
out
and
cmp
lock
sbb
xchg
mov
int
lret
not
pusha
aas
je
mov
aas
xorl
mov
inc
push
stc
dec
or
inc
dec
adc
fcomip
cmpsb
and
shr
ss
adc
push
ljmp
jnp
loop
or
aaa
mov
inc
mov
cmp
sbb
dec
mov
pop
hlt
fwait
or
loop
adc
xor
in
ret
adc
pop
or
sbb
xchg
cmpsl
jmp
or
xchg
inc
add
cs
loopne
sub
inc
ret
xchg
and
mov
jb
mov
out
xchg
test
push
and
fsubr
imul
or
add
pop
mov
js
femms
mov
dec
rclb
jb
jle
in
pushf
mov
cmpsb
mov
rcr
pop
clc
stos
and
jae
dec
xchg
xchg
cmp
pop
mov
push
pop
mov
rcrb
insb
ljmp
xchg
mov
mov
test
fwait
sbb
and
nop
inc
dec
sbb
aas
insl
cld
xor
sbb
mov
cmpb
call
mov
std
orb
lret
sub
sub
jp
faddl
xor
mov
jl
or
mov
leave
daa
push
out
daa
add
add
fnstcw
in
adc
lock
faddl
out
cltd
pop
outsl
mov
jnp
or
sbb
xor
xor
push
les
xor
lret
add
ljmp
pop
clc
jbe
aad
fwait
mov
mov
iret
pop
jo
rcl
xchg
orb
addl
aas
movb
or
push
xchg
push
ss
sbb
pop
xchg
imul
cmpsl
inc
xchg
mov
cli
push
inc
jne
ds
push
add
fldt
or
rorb
daa
popf
lret
daa
mov
mov
push
push
mov
in
aam
test
mov
clc
push
or
daa
xchg
mov
dec
outsl
sub
push
sub
mov
dec
and
xchg
or
inc
cmpsb
cmp
ds
xor
sub
inc
add
cmp
mov
sbb
jge
fsubs
jg
bound
data16
jne
or
and
mov
in
xchg
push
mov
sbb
outsb
and
aam
leave
ss
jns
das
mov
sbb
pop
inc
push
shlb
jecxz
or
push
bound
jae
jae
fistps
fnstenv
dec
call
rcrb
pop
pop
inc
in
test
inc
dec
out
mov
lahf
and
iret
jg
or
lahf
pop
pop
pusha
ret
inc
sbb
test
add
ror
pop
xchg
ss
and
in
rcll
fs
add
outsl
mov
jp
jmp
cld
and
popa
nop
popa
popf
loop
stos
jle
sub
cld
jecxz
xor
mov
fidivl
inc
ss
push
notl
stc
inc
add
pop
in
outsb
lods
shll
push
push
push
cmp
inc
bound
clc
mov
test
inc
mov
sub
mov
push
sbbl
test
mov
leave
decl
inc
mov
pushf
loop
sbb
aas
shrl
out
sbb
out
inc
rorb
out
dec
faddl
mov
push
fisttps
and
xor
call
sbb
idiv
cmp
and
cld
and
out
incb
pusha
imul
and
sbb
push
mov
mov
sbb
jo
roll
jno
and
insl
xorl
sbb
xor
pushf
fadd
pushf
inc
mov
xchg
in
in
lcall
mov
xor
data16
cmp
into
das
push
daa
add
mov
orl
xchg
ss
movsb
enter
popa
jmp
cmp
movq
imul
or
ret
cs
inc
rcll
divps
orl
scas
jecxz
cmp
cs
and
add
cmp
mov
inc
mov
inc
adc
fisttpl
jge
jns
jb
test
das
ljmp
xlat
or
dec
jmp
cmp
pop
push
loopne
pop
mov
pop
inc
xchg
jbe
inc
sbb
bound
or
imul
lods
mov
lcall
mov
xor
fsubr
shrb
les
outsl
mov
lea
xchg
js
aaa
je
inc
andl
push
adc
outsl
push
sbb
arpl
mov
popa
mov
xchg
adc
ret
popa
cwtl
mov
cmp
in
subb
aaa
adcl
mov
rcr
aaa
mov
xor
inc
les
cmp
jbe
push
popa
leave
push
jle
shlb
shlb
adc
jge
cwtl
inc
pusha
mov
out
aad
les
mov
lahf
dec
jbe
dec
jne
lock
jns
std
fwait
call
jno
out
loop
mov
sarl
mov
in
fmuls
jmp
movsb
and
pusha
xchg
mov
jle
cmpb
cli
xchg
adc
pop
test
stc
mov
jg
call
xchg
mov
nop
and
pusha
push
jne,pt
mov
cltd
dec
add
test
and
xor
sbb
inc
lahf
out
or
jp
mov
mov
mov
xor
mov
mov
add
cltd
adc
cwtl
fs
or
repz
xchg
rorb
stos
aam
or
jb
mov
jge
push
cmp
sub
je
lods
xchg
enter
std
mov
out
std
push
shrl
sbb
mov
jge
es
sbb
divb
insl
dec
ret
fs
and
sarl
xor
pop
aas
lods
cli
fstpl
mov
jl
or
and
mov
cmp
xor
and
clc
jbe
lock
out
bound
sub
jmp
fnstsw
mov
nop
cmp
lds
push
xchg
dec
and
movsl
adc
pop
js
das
call
cli
and
call
sarb
rolb
xor
rolb
fistpll
ja
adc
cmpsb
mov
into
lea
outsl
aaa
jo
cmp
loope
push
xorl
hlt
in
mov
inc
xchg
xor
push
inc
xchg
mov
and
sub
or
and
inc
mov
mov
sub
insl
rorb
or
lcall
push
adc
aaa
ret
lea
xchg
mov
inc
lea
push
jp
mov
xchg
inc
cmp
mov
cmpb
mov
hlt
mov
xchg
sbb
dec
insl
jp
jl
mov
mov
cmp
adc
je
fwait
cmc
sarl
outsl
fmul
push
mov
pop
enter
xorb
mov
adc
dec
enter
xor
push
sbb
adc
das
mov
and
xor
dec
mov
mov
in
cwtl
arpl
shrl
lea
cld
or
add
call
data16
push
inc
lret
fistpl
dec
aad
int
dec
cwtl
push
arpl
add
ret
mov
lock
jo
clc
pop
inc
bnd
xchg
lcall
pop
or
mov
pop
jnp
and
jae
pushf
lods
mov
dec
mov
std
adcl
fwait
adc
push
or
mov
flds
scas
dec
das
lds
push
jae
inc
test
push
xchg
imul
sbbl
js
outsb
pop
pusha
insb
pop
iret
and
add
dec
xor
push
out
sbb
lods
sar
cmpsl
cwtl
or
imul
adc
subl
das
dec
inc
dec
mov
ss
xchg
std
xchg
rcl
jbe
or
fdiv
pop
cvttps2pi
shl
lods
sub
rcrb
loope
shll
or
shl
sbb
sbb
mov
cmpsb
push
sub
shll
adcb
sbb
push
jo
cmp
jge
aad
jg
mov
push
mov
add
es
stos
cs
int
jo
clc
shlb
add
lock
pop
push
mov
cmpsb
sbb
sub
je
insl
sub
dec
test
jle
lock
test
das
fnstsw
out
add
jp
and
mov
fs
fisttpll
inc
pop
pushf
mov
pop
fcoms
xchg
and
xor
hlt
add
mov
dec
mov
imul
dec
xor
dec
jecxz
xor
call
push
cltd
lret
cmpps
sbb
jne
dec
mov
je
cmpsb
mov
inc
je
fisubs
xor
mov
movsl
mov
loopne
adc
inc
sub
xor
movsb
and
arpl
or
and
loop
adc
pop
imul
push
mov
fcmovnbe
leave
cmp
cmp
dec
aad
xchg
sub
mov
outsl
inc
sub
or
sub
push
decl
or
hlt
bnd
xor
add
stos
dec
sbb
in
rcrb
call
inc
jno
je
push
shrl
and
gs
cmp
movsl
pop
ja
jl
push
xlat
xor
call
aas
adc
clc
in
test
int
pop
push
sbb
daa
je
insb
rcl
call
sahf
fcmovb
outsl
mov
or
mov
fildl
adc
inc
or
lock
aam
jne
cltd
shrb
dec
lcall
xchg
or
icebp
mov
sub
int
cltd
sbbb
mov
inc
dec
sbb
fwait
adc
sbb
mov
xor
jmp
insl
pop
mov
inc
sbb
cmpsb
movsb
ss
push
loopne
fistpll
xchg
repz
xchg
fsubp
jbe
insl
adc
mov
fisttpll
cmp
jp
fldenv
rcll
fsts
aaa
leave
cmpsb
push
dec
testb
js
and
sub
mov
mov
jmp
ficoms
stos
clc
cmp
orb
aaa
mov
sbb
add
ds
inc
out
cmp
mov
sbb
inc
cmc
xchg
cmp
sub
or
fdivrs
sbb
xchg
mov
sub
insl
pop
call
fstl
jg
xlat
pop
mov
shlb
das
mov
sub
mov
rolb
subl
pop
ljmp
adc
cmp
fwait
mov
es
or
pop
sbb
scas
call
out
out
xchg
xor
fcmovbe
jo
sub
xlat
add
scas
adc
jge
aaa
mov
nop
mov
jb
mov
xor
out
mov
push
lret
cmpsl
lea
into
fsubl
inc
cmp
jnp
push
push
mov
outsb
sbb
test
or
clc
in
mov
or
pop
inc
dec
ja
or
call
mov
repz
outsl
push
pop
push
pushf
mov
pop
jae
mov
bound
std
dec
idivl
std
bound
sub
add
test
mov
je
or
scas
cwtl
insb
inc
xchg
loope
xorl
or
push
mov
leave
dec
push
push
stos
jg
mov
push
aaa
fwait
dec
xor
adc
cmp
ret
and
stc
addb
pop
push
adc
inc
add
adc
xchg
subb
cmp
popa
jecxz
jns
daa
call
sub
pop
addr16
xchg
cmpsb
pushf
enter
fnstenv
and
es
call
fisubs
mov
iret
adc
pop
mov
lret
lods
add
clc
out
add
push
or
and
inc
mov
ja
jp
push
mov
xchg
pop
inc
dec
cmc
and
xlat
push
ss
and
mov
or
mov
dec
mov
sbb
divb
xor
in
fisubrl
inc
adc
lods
stos
pop
je
lret
jge
push
cmc
outsl
jl
xor
and
clc
mov
or
loop
ds
popf
jne,pn
clc
mov
adc
mov
aam
mov
push
data16
add
pop
xchg
stc
je
mov
pop
in
es
aas
insb
jmp
je
out
mov
test
adc
jp
ret
cmpsl
lahf
lret
xor
sbb
loopne
push
icebp
arpl
sti
jo
iret
dec
test
lea
out
mov
inc
sub
sub
push
jnp
stc
inc
leave
daa
mov
ljmp
sbb
inc
and
jmp
jo
imul
add
mov
mov
test
push
das
out
add
incl
lock
mov
jmp
push
mov
fisttpl
sub
jne
push
push
or
outsl
outsl
out
outsl
add
push
pop
add
push
call
xchg
fdiv
test
pusha
inc
mov
std
mov
negl
push
inc
lea
push
push
mov
inc
loopne
hlt
push
push
cmp
mov
sbb
add
mov
fs
sbb
inc
or
jne
dec
jae
sbb
xor
cmp
push
push
jg
jbe
push
add
push
inc
lcall
sti
dec
in
push
push
dec
add
daa
xor
pop
ja
inc
inc
jnp
push
push
xlat
outsb
out
dec
hlt
push
xor
cmp
movsl
test
adc
je
push
fsubrl
js
fnsave
clc
cld
repz
mov
cmp
and
push
in
insl
push
xor
push
outsl
inc
pop
pusha
addr16
popa
add
test
inc
inc
cwtl
or
test
daa
push
jae
nop
mov
fistpll
inc
dec
dec
jns
push
js
pop
xor
das
add
mov
xor
jmp
mov
mov
mov
push
add
cld
call
sbb
dec
pop
add
sub
in
push
insl
outsl
push
orl
loope
mov
in
mov
clc
jbe
mov
stos
outsb
bound
gs
or
sub
fbstp
inc
jae
pop
out
imul
mov
cmc
sbb
cmp
cld
fidivrl
pop
mov
xchg
repnz
in
data16
xor
in
xchg
das
icebp
movsl
sub
lret
jg
dec
js
dec
sub
inc
mov
jne
dec
fld
rolb
ret
push
pusha
sub
push
in
push
cmp
lods
push
outsb
dec
or
mov
sbb
adc
push
and
add
xchg
xor
push
hlt
scas
xchg
dec
test
insb
and
pop
ficoms
mov
lock
icebp
jmp
mov
jno
mov
dec
add
mov
hlt
aam
ds
insb
xor
ss
pop
add
sti
xchg
sbb
notl
ss
add
lock
or
inc
gs
push
daa
push
xchg
push
int3
jge
ss
loope
roll
xlat
orl
ja
into
mulb
or
push
cmp
pop
pop
popa
jb
repnz
push
fs
rcl
mov
mov
ret
sub
add
rcrl
push
mov
push
mov
dec
cld
clc
mov
dec
mov
jg
ret
popa
xor
dec
adc
mov
inc
dec
inc
mov
jle
ja
in
mov
jne
mov
jge
popa
mov
in
ficomps
jns
in
dec
mov
repz
insb
mov
push
jbe
jne
mov
xor
clc
dec
movb
jno
cs
outsl
int
daa
pop
je
pop
and
mov
ja
bound
dec
call
add
and
fwait
pop
xchg
js
jbe
add
arpl
pop
pop
xor
insl
ja
push
dec
call
inc
cmpsb
sub
rorb
test
xor
lret
mov
jge
xlat
jbe
mov
xchg
cli
adc
mov
incb
sub
adc
mov
inc
add
clc
or
rol
das
inc
sub
add
gs
pop
sub
mov
loope
dec
push
outsl
pushf
sbb
jl
inc
ljmp
mov
adc
mov
jo
arpl
fcomps
add
xor
loopne
in
mov
inc
pop
cmpsb
jno
dec
mov
jge
sbb
gs
push
push
scas
dec
les
xchg
addr16
inc
jg
dec
inc
mov
icebp
pop
mov
vmread
push
fldt
outsl
cs
push
aaa
jae
adc
xchg
mov
ret
dec
adc
rolb
fldpi
scas
out
je
bound
inc
mov
or
ja
dec
lods
repz
pop
jnp
test
add
dec
int3
push
sub
cli
pop
dec
inc
insb
dec
jns
clc
orl
enter
xchg
les
cmp
mov
hlt
push
fstl
loope
sbb
mov
or
push
dec
movsb
divl
loop
fisubrl
test
dec
mov
dec
xchg
or
sbb
push
lods
out
mov
mov
push
mov
insb
xchg
inc
scas
out
movsl
add
dec
xor
or
shll
pusha
rol
mov
lds
xor
std
mov
bound
shrl
ss
sti
movsl
faddp
into
sti
xor
imul
dec
cmp
push
inc
fs
lods
inc
jbe
push
jge
xlat
inc
pusha
sub
hlt
inc
inc
pop
outsb
inc
shrb
lock
push
adc
je
insl
mov
pop
push
jbe
ret
mov
ljmp
xor
add
inc
inc
sarl
jl
clc
stos
popf
dec
jb
dec
and
dec
pop
add
lock
test
imul
ret
fwait
out
push
cmp
inc
sbb
hlt
sub
call
js
into
mov
push
dec
xor
cli
push
mov
ss
sbb
push
adcl
gs
add
mov
rorb
inc
mov
push
shll
cld
les
cld
mov
setb
cmp
lcall
add
sarb
xorl
rolb
pop
adc
test
sub
lods
incb
mov
mov
ss
icebp
push
jno
je
xlat
leave
pop
or
xor
addr16
out
push
scas
push
lea
push
jmp
pop
dec
inc
add
add
neg
lret
inc
add
add
xor
sbb
add
inc
or
xor
std
in
std
rclb
push
add
jmp
jmp
xlat
jle
xchg
dec
and
adc
inc
repz
mov
fnstsw
aas
push
add
clc
and
lods
xor
lcall
and
jb
cmp
aas
xor
jnp
push
in
aaa
decl
jns
mov
or
fistps
jb
es
push
mov
pop
jecxz
xchg
sbb
iret
jae
ljmp
out
roll
sub
dec
out
add
mov
sbb
and
nop
inc
ret
out
mov
pop
add
addr16
jecxz
jb
ret
pop
jae
jg
jmp
loope
dec
inc
sti
adc
sbb
int
jg
test
xchg
lret
jmp
push
ja
sub
xor
out
mov
add
mov
test
pusha
xor
scas
mov
jnp
aas
jg
adc
adc
jbe
fimuls
xlat
aaa
rorb
inc
sti
mov
sbb
dec
sub
out
lcall
imul
pushf
fs
pop
pop
xchg
mov
jnp
inc
jae
mov
pop
xchg
sub
popf
inc
jge
sahf
jne
shl
or
and
inc
sub
dec
ja
fistpll
mov
js
jo
pop
loop
or
negl
xchg
sbb
fwait
outsb
dec
arpl
sbb
add
clc
fistps
cmp
or
push
fldl
cmp
mull
outsb
adc
ss
sub
out
enter
jg
cvtpi2ps
movsb
cmc
mov
scas
jbe
add
or
mov
xchg
sbb
mov
repnz
clc
idivl
or
sub
inc
push
or
jg
arpl
icebp
decb
dec
adc
mov
cmpsb
sub
mov
jp
pushf
das
aaa
dec
add
cmp
cmpsl
decl
sub
sbb
xor
les
cwtl
push
repz
incl
pop
repz
insl
jne
sbb
es
cmp
mov
ja
fistpl
xchg
pop
xor
insb
data16
fstpt
xchg
jg
fiaddl
call
std
inc
sbb
jmp
mov
loope
psllw
out
ja
fstps
insl
stc
or
and
sbb
xlat
jp
push
decl
outsl
cmp
ja
jno
sub
clc
mov
cld
in
mov
fst
enter
jp
or
jnp
loop
ds
or
fistpll
idivl
addr16
cs
pushf
loopne
outsb
cli
mov
test
sarl
cmp
bound
shlb
mov
fdiv
inc
xchg
jmp
ficomps
sub
mov
or
popa
daa
into
cli
jae
push
jo
enter
or
mov
jmp
rcll
sub
inc
mov
sbb
xor
pop
cli
ret
fiaddl
mov
push
inc
jge
xor
aas
fildll
das
stos
lods
cmp
dec
push
jg
or
aas
mov
imul
out
push
pushl
fisttpll
add
cld
dec
xchg
ja
mov
cs
mov
scas
cmp
lret
sti
ja
jl
push
js
cmp
bound
dec
inc
jns
aas
jae
ret
or
lcall
pushf
jo
popf
cwtl
jae
mov
xor
fnstsw
mov
adc
testb
xchg
jae
inc
mov
fdivrs
arpl
rolb
les
add
int
sub
cwtl
sbb
jno
ja
shrl
sub
jg
jno
lcall
ds
out
jp
cmp
sti
ljmp
push
adc
inc
pushf
scas
fmul
add
or
inc
bound
idiv
sahf
test
adc
cli
dec
mov
lcall
push
dec
xorl
fldenv
cli
ret
xchg
jbe
adc
incl
into
inc
out
mov
ret
fs
mov
inc
and
pop
xor
outsb
clc
and
push
or
div
jle
xchg
mov
in
inc
push
jnp
and
cmp
sbb
mov
roll
add
cmc
mov
mov
js
cmp
fistps
mov
xchg
pop
dec
pop
es
dec
push
push
mov
add
xor
rorl
or
popf
mov
leave
addr16
xlat
lahf
xor
ja
lcall
push
add
sbb
xchg
out
xor
inc
cli
lahf
fmul
ret
inc
sahf
out
pop
cld
lods
add
lret
clc
arpl
jne
jns
cli
mov
add
les
adc
pop
inc
les
push
jne
sub
cmc
pushl
popf
jb
mov
out
sbb
mov
pop
cmp
mov
addr16
or
mov
cwtl
and
lret
add
decl
xor
cltd
xchg
dec
dec
es
mov
loope
sub
les
std
out
icebp
pop
inc
or
fnsave
push
inc
jmp
push
lods
ss
into
push
xchg
push
mov
adc
add
xlat
sti
xor
mov
stos
mov
in
sub
shl
out
ds
data16
lods
mov
xchg
es
xor
dec
pop
jmp
jle
sbb
enter
cmpsl
mov
pop
push
jp
aas
clc
movsb
shrl
inc
cli
or
lret
xchg
sbb
mov
mov
sbb
xor
pop
push
push
cmp
sbb
outsb
fwait
mov
push
mov
arpl
dec
dec
jg
gs
ret
mov
addr16
dec
or
jp
or
ficomps
or
cs
inc
test
sahf
inc
lret
jecxz
mov
mov
insl
lcall
mov
xchg
cmpsl
and
dec
xor
test
sbb
pop
into
sysexit
dec
mov
jno
loopne
pop
push
fistpll
jmp
dec
stos
dec
inc
xchg
movsl
std
out
sti
insl
push
push
adc
adc
dec
cwtl
pop
push
cmpsb
mov
pop
mov
lods
add
pmaxsw
mov
sbb
fwait
pop
pop
dec
aas
push
out
jmp
jns
push
xchg
sub
sub
xchg
pop
push
jl
push
add
incl
out
mov
adc
push
xchg
adc
fisttps
jg
and
push
call
addb
out
push
jnp
cli
cld
outsb
mov
scas
inc
add
imul
shrl
lcall
jmp
jo
call
out
fistpll
into
ds
adcb
fdivp
cli
pop
fs
jmp
ljmp
sub
call
xchg
mov
lahf
icebp
aas
cmp
lret
pusha
add
ret
out
push
aas
divb
pop
mov
and
cmpsl
mov
jg
arpl
pop
inc
fs
pop
lods
jae
sti
jmp
or
rclb
movsb
in
jmp
int3
in
ja
addr16
fisubrs
mov
shl
jp
repz
gs
or
fcoml
adc
lds
jnp
in
mov
subl
mov
bound
mov
mov
push
mov
add
mov
dec
mov
jne
mov
ds
test
pop
jo
pop
mov
xchg
push
call
ja
jo
xchg
dec
divb
add
rcpps
xchg
cmp
cmp
adc
std
mov
in
cltd
mov
push
push
pop
sti
sti
cmp
mov
ret
push
cmp
gs
xchg
cvtps2pd
jmp
dec
popf
add
adc
cwtl
xchg
ljmp
divb
repnz
or
test
jae
incl
sub
insl
pop
in
cmp
adc
cmpsl
loope
sahf
data16
pop
test
dec
xchg
mov
add
lahf
or
arpl
pushf
add
nop
inc
loop
mov
fisttpll
out
ss
jns
das
out
fdivrp
sub
mov
jl
or
pop
push
mov
mov
jmp
insb
jae
shl
orl
popa
pop
stos
add
cli
cmp
imul
dec
test
ret
cmp
pop
adc
pop
repnz
xchg
mov
fisubs
mov
imul
addr16
daa
mov
cld
cwtl
fwait
imul
loope
mov
call
mov
mov
push
inc
pop
inc
insl
jno
leave
popa
call
pop
adc
sahf
out
push
std
in
scas
repz
fwait
push
jno
push
cmp
sbb
frstor
in
xchg
nop
xorl
pop
jmp
dec
pop
mov
outsl
adc
je
lcall
pcmpeqw
cmp
lock
jb
inc
sahf
mov
push
mov
jg
adc
pusha
cwtl
arpl
fidivrl
fistpll
divl
inc
inc
add
rcl
push
out
ljmp
xchg
jbe
iret
std
fsubr
and
add
mov
outsb
popa
loopne
ret
je
lea
outsb
cs
jne
in
fnstsw
mov
add
push
lahf
orl
loope
pop
minps
test
mov
ja
lahf
shlb
out
pop
add
jne
pop
lahf
lock
imul
adc
adc
sub
pop
repz
pop
jb
ss
adc
mov
pusha
cwtl
test
pop
pop
stc
mov
loopne
stos
loope
popf
push
mov
or
mov
out
and
ret
jmp
out
repnz
mov
push
adc
cmp
or
cmp
cmp
jl
xor
aam
int
sbb
cld
loope
ret
dec
rcll
decl
sub
rcll
dec
in
mov
jecxz
daa
or
popf
inc
andb
jg
int3
push
inc
adc
jl
and
xor
sub
jnp
imul
das
pusha
and
pop
jp
push
pop
cmpsb
test
dec
mov
std
mov
jmp
inc
and
or
xor
jmp
mov
in
out
cmc
dec
cmc
xchg
imul
cmp
les
aas
fsubp
movsl
fs
rcrl
jmp
ret
imul
xchg
sbb
lods
add
mov
adcb
mov
cmp
mov
pop
idiv
fildl
mov
fists
repz
lods
push
popl
or
stos
mov
mov
pop
fnstcw
fstl
mov
mov
aam
sbb
scas
rolb
aam
jmp
push
hlt
setle
ss
pop
pusha
add
call
inc
mov
lea
xor
sbb
add
add
jae
jecxz
mov
push
push
jecxz
push
insb
mov
mov
rcl
mov
jmp
mov
sbb
std
inc
popf
ret
mov
mov
cmp
pop
scas
sbb
scas
rorl
outsl
scas
out
fdivrl
sub
fcoml
adc
pop
idivl
shrl
add
pop
fs
mov
decl
imul
dec
rcl
jno
dec
insb
leave
fxch
sbb
imulb
and
push
inc
out
lock
mov
fldenv
jle
jp
daa
in
jnp
inc
cli
push
or
inc
rorl
enter
mov
decl
clc
push
lea
int3
clc
xor
cli
and
sbb
dec
shll
lret
das
push
in
enter
stos
lock
adc
jg
xor
or
and
daa
cmp
jl
lret
xlat
xchg
inc
lds
in
arpl
jno
mov
push
mov
sti
fistps
lret
push
shlb
sub
pop
imul
jle
idiv
sbb
out
add
das
cltd
mov
or
das
loopne
addb
icebp
fisttpl
test
inc
inc
adc
ljmp
add
fnclex
shll
pop
out
movsb
outsl
mov
mov
inc
cmpsb
adc
test
mov
ja
or
and
andb
mov
mov
mov
mov
dec
cli
fdivl
iret
sub
sub
pop
popl
out
out
sub
les
leave
jg
iret
outsl
vpmacsdqh
pop
and
iret
repz
mov
fxch
pop
clc
aad
jmp
int3
cmc
xchg
bound
lcall
clc
cmpsl
sbb
push
pusha
pop
cmp
mov
incl
loopne
lret
sbb
out
std
popf
mov
push
mov
loope
mov
mov
sub
rcrb
sahf
and
stos
jno
xchg
dec
mov
aaa
push
cmp
sub
push
cmp
adc
pop
iret
mov
push
call
mov
inc
popf
movsl
push
pusha
xor
push
je
aaa
jl
das
mov
data16
fstps
dec
mov
leave
inc
mov
das
std
mov
jge
std
pop
push
mov
and
ja
jg
sti
lods
lcall
sub
xor
fs
pop
arpl
dec
or
inc
leave
lahf
sub
cltd
mov
fdivrp
fbld
out
mov
push
filds
popf
sub
jo
lds
scas
mov
mov
push
sbb
xor
aad
and
popf
sub
pop
fistps
test
and
adc
adc
lock
imulb
fdivrp
jnp
aas
xchg
loope
stc
mov
mov
push
jmp
loop
daa
into
dec
fidivl
movsb
or
ss
cmp
das
xchg
lahf
inc
stos
and
test
inc
hlt
mov
or
add
or
cmp
idiv
add
xchg
pushf
cmp
or
fdivrl
cmp
testl
nop
shll
lret
cmp
mov
aas
or
push
cmp
out
fcompl
popa
dec
jmp
dec
cmp
xchg
scas
ja
mov
push
pop
and
lcall
test
adc
jge
cld
loope
pushl
out
int
mov
mov
loopne
push
fdivrs
push
mov
push
adc
jnp
in
sub
xlat
add
pop
daa
in
add
out
sar
fidivl
sbb
int3
test
hlt
lahf
jae
sub
addr16
movb
lds
cmp
daa
pop
nop
stos
adc
pusha
addl
dec
cli
jg
test
push
loopne
xor
xchg
inc
pusha
scas
clc
mov
mov
sbb
xchg
out
cmp
and
mov
rcr
and
ss
hlt
lcall
cmp
decl
pop
xchg
shlb
xor
jge
xchg
incl
cmp
std
adc
ja
dec
add
sbbl
jle
jo
lcall
mov
jg
cmp
ret
inc
dec
std
insl
adc
jge,pt
or
fidivs
in
ja
mov
jne
rcrl
adcb
jg
sbb
cmc
js,pt
xor
or
lock
test
mov
lret
into
je
test
int
or
fstps
fidivs
xor
fidivrs
lret
lcall
inc
lods
incl
jp
or
inc
imul
cmpsl
mov
out
out
aas
pop
adc
push
and
jnp
lcall
sub
sbb
repz
in
sbb
out
andl
cli
pop
xorb
stos
idiv
pop
insb
hlt
cli
jo
in
and
jle
adc
and
jg
mov
fnstcw
and
inc
je
dec
mov
clc
dec
xchg
testl
ja
stos
add
xor
add
cmc
jmp
xor
in
loop
mov
sahf
jb
repnz
cmp
mov
movsb
mov
xlat
aas
sbb
js
pop
lret
popa
cltd
cld
mov
sti
ljmp
mov
add
aam
mov
xchg
push
pusha
movsb
mov
orl
lods
mov
int
xchg
push
pop
stc
cmp
xchg
aas
jge
lahf
loopne
rcr
adc
rclb
test
xchg
xchg
cmp
xor
stos
push
fiaddl
or
clc
adc
icebp
mov
and
lock
pop
or
pop
mov
xorl
dec
xchg
mov
dec
dec
xor
push
aaa
movsb
fidivrl
or
notl
pushl
fistps
aaa
int
mov
push
sbb
int
cmpsl
add
idiv
add
mov
or
push
and
sub
lahf
hlt
fistps
xor
xor
or
mov
jle
or
cs
pop
pushl
movsb
jns
cmc
or
fnstsw
jbe
jg
fistps
cmpsb
xor
out
out
ljmp
xlat
mov
repnz
daa
icebp
test
scas
testb
loope
inc
sub
cli
js
mov
ja
sbb
add
mov
loopne
inc
jno
cmp
jns
stos
idiv
mov
dec
and
or
and
xor
and
call
jg
loop
jo
int
in
repz
fcos
lret
push
add
ja
jo
xchg
pop
arpl
cld
adc
add
xor
push
adc
xor
negl
out
dec
push
in
dec
pop
insb
inc
and
push
insl
hlt
ret
cmc
fucomp
mov
xorl
std
sbb
mov
lahf
lahf
inc
inc
mov
adc
jecxz
lcall
pop
lock
mov
xlat
or
out
enter
push
push
call
cmp
xchg
lcall
dec
mov
pop
xor
les
xor
jmp
in
sbb
testl
ret
imul
pop
shll
fs
or
sbb
mov
sub
sahf
mov
inc
mov
test
ret
cld
inc
cmp
and
pop
pushf
and
adc
lret
xchg
lret
dec
das
stos
and
mov
lds
mov
out
dec
aaa
cli
out
lods
rorl
mov
and
pop
js
add
repnz
repz
mov
rcrl
movsb
and
mov
push
mov
mov
mov
dec
jl
xchg
and
add
and
bsf
xor
or
cmc
or
pop
gs
cs
das
cmp
hlt
add
bound
dec
daa
jbe
mov
mov
add
in
adc
pop
mov
xchg
push
cmpsl
jnp
fwait
cmc
inc
jp
scas
lock
bound
cmp
fnstcw
aam
push
paddsw
cmpsl
hlt
loopne
and
mov
loop
mov
xchg
sbb
mov
out
cmp
std
arpl
dec
sub
sbb
xor
and
push
stos
mov
sub
gs
rorb
jl
lds
or
cmp
cmp
jb
arpl
shrl
insl
jmp
adc
pop
std
cli
fwait
int3
pop
and
push
cmp
or
sbb
xor
leave
add
aaa
lahf
loopne
sub
jecxz
xchg
aad
adc
adc
cmp
roll
add
jb
shr
insl
std
fcoml
jbe
inc
fmulp
inc
jle
testl
aas
jne
divb
fdivl
testb
mov
lods
lcall
pop
fprem1
xor
jo
and
daa
div
jmpw
or
movsb
mov
and
jnp
or
cmp
and
dec
cmpl
in
or
insb
cmp
fistpll
ds
js
shlb
adc
insb
in
inc
shlb
mov
or
stos
es
add
imul
sarb
xor
negl
test
dec
enter
ret
jg
clc
cmpsl
outsl
pop
cltd
and
add
lret
cmpl
mov
dec
into
pop
mov
movsb
in
push
std
cmpsb
inc
aas
adc
rsm
push
cld
jg
lahf
aam
dec
nop
jo
or
pop
sahf
std
inc
aas
xor
cwtl
into
sub
adc
std
out
fimuls
mov
ja
cmp
adc
sarb
dec
aaa
xchg
pushl
in
cs
inc
cs
rol
jnp
cmp
jnp
xchg
adc
addr16
add
std
ja
pmulhuw
int
or
shll
fisttpll
cmp
ficoml
cmc
xchg
xor
push
rorl
dec
sub
mov
push
jnp
jmp
cld
pop
js
das
mov
xorb
setno
xor
mov
inc
push
fdivl
push
cs
xchg
into
cltd
repnz
dec
sti
mov
jmp
popf
jnp
pop
mov
and
cmp
or
jo
or
xor
ret
js
mov
lods
cmc
or
push
loopne
cmp
sub
fsubs
outsb
push
push
cmp
divl
dec
leave
mov
leave
lock
inc
loopne
out
into
mov
scas
mov
inc
pop
pop
cli
cmp
xor
or
mov
cmpsl
sbb
lahf
xchg
xorl
mov
jmp
sub
ret
xchg
ret
push
lods
push
pop
inc
testl
aad
aad
lsl
pop
roll
fstpt
sti
ss
sbb
aad
movb
mov
pop
mul
rcrb
subl
outsl
push
sub
jmp
or
jp
addr16
shrb
dec
or
fmul
mov
sbb
sarb
inc
pusha
out
xchg
push
test
ffreep
cli
inc
jns
xchg
xchg
ret
cmpsl
pop
cmp
mov
push
imul
push
es
lcall
shrl
stc
pop
mov
ret
sti
lock
pop
mov
out
fmull
jle
imul
mov
pop
lcall
mov
and
dec
popa
fildl
dec
xchg
insl
adc
inc
pushf
arpl
clc
pop
in
outsl
mov
xor
pop
pop
add
xor
gs
pop
mov
rcrb
adc
int
lods
cld
out
shlb
xchg
or
dec
cmpsl
mov
jecxz
movsl
mov
sub
in
cmp
mov
test
xor
int
out
bound
push
push
lds
cli
jne
imul
ja
mov
movsl
outsb
sbb
dec
scas
sbb
adc
inc
iret
subl
das
les
fwait
mov
stos
pop
jmp
push
dec
sbb
mov
mov
fsts
sar
loop
rcrb
pusha
jmp
pop
jb
sbb
jno
mov
aas
callw
bound
sbb
add
ffreep
stos
xchg
and
xchg
mov
jg
sarl
dec
test
jle
mov
mov
sbb
add
es
repnz
ret
aas
xor
pop
ljmp
fsubrl
ja
pop
std
pop
out
push
pop
in
outsl
xor
in
js
cltd
adc
leave
vpmacssdql
or
ret
jmp
dec
sub
cld
pushf
inc
sbb
dec
jmp
ror
imul
andl
nop
cmp
movsl
loop
negb
fidivs
test
jae
nop
in
ja
clc
insl
and
pusha
stc
sub
ljmp
mov
pop
in
les
into
lcall
out
ficoms
addr16
adc
jecxz
fdivr
loope
mov
mov
ds
and
pop
mov
cmp
jb
push
dec
mov
mov
fildll
andl
movsl
test
lods
cmpb
mov
loop
je
lock
je
mov
xchg
bound
out
sub
jae
and
ja
mov
mov
inc
in
add
push
mov
test
push
sub
popf
mov
mov
inc
insl
jl
jg
outsb
aad
mov
xchg
and
loope
sarl
jmp
subb
push
lds
call
arpl
add
addb
jp
inc
xchg
mov
clc
xchg
clc
pop
out
dec
out
mov
fdivrs
stos
jg
xor
fs
ret
cmp
nop
xor
inc
test
xor
cld
aas
xchg
mov
inc
push
cmp
mov
imul
out
dec
xchg
mov
jns
mov
testb
fldpi
xchg
popf
push
adc
inc
push
out
add
fdivrp
pop
jle
fcompl
mov
clc
in
jnp
fbld
scas
inc
lea
adc
ja
jae
rcrb
jne
add
into
or
mov
jg
xchg
ret
xchg
ljmp
cmp
mov
xchg
lods
out
push
push
test
fs
cli
xor
fstps
xchg
jecxz
cs
pop
pop
dec
pop
cmpsb
mov
jge
lods
dec
mov
cli
mov
add
mov
jecxz
sbb
arpl
outsb
aaa
pop
loopne
push
push
and
xchg
push
jg
aam
xor
loope
das
stc
hlt
mov
xchg
pusha
fndisi(8087
mov
and
mov
mov
pop
and
jmp
add
pop
pop
cmpb
aas
loopne
sub
fwait
mov
jne
pop
int3
lds
inc
add
xor
add
mov
add
je
xchg
mov
in
xchg
lods
and
sbb
mov
inc
mov
mov
jg
stos
ljmp
adc
adc
xor
mov
std
pop
add
arpl
popa
insb
pop
cmp
loope
and
xor
gs
xchg
and
jns
jmp
fsubp
out
scas
pop
insb
xor
lea
pushl
mov
das
dec
fld
cmpb
aas
mov
and
jp
inc
js
cli
cmp
jge
mov
cld
decl
imul
ja
clc
and
adc
pop
fmulp
clc
mov
pop
mov
loop
xlat
test
sti
maskmovq
jne
mov
out
mov
mov
popf
mov
gs
pop
push
loope
sbb
cmp
sbb
js
stos
mov
and
mov
jns
jo
inc
pop
shrb
aad
scas
fnstsw
inc
imul
je
cmpb
mov
aas
aas
testb
or
lds
jl
lret
aad
test
in
or
and
xchg
pop
rorl
sbb
xchg
inc
jbe
add
mov
ja
push
xor
lods
out
jo
inc
lret
imul
or
xchg
out
xor
cs
mov
loop
js
fbstp
jae
mov
mov
movsl
inc
call
popf
and
inc
rclb
imul
xor
fcomi
jae
lds
call
mov
add
cmc
negb
aam
subl
cmp
cmpb
gs
popa
mov
lock
aas
cwtl
shl
insl
jb
ror
jp
pop
xchg
ss
adc
mov
hlt
lcall
sub
movsb
aad
cli
xchg
fucomp
pop
gs
mov
shll
jmp
cmp
out
mov
fsub
mov
or
out
and
pop
mov
pop
and
adc
pop
bnd
jg
clc
out
mov
pop
push
lret
or
xchg
fisubrs
xchg
in
pop
ss
loope
outsl
sbb
xor
test
incl
adc
ror
les
dec
dec
sub
ljmp
cmc
and
das
xor
lock
outsb
dec
dec
and
test
loop
out
mov
xorl
lret
fwait
xchg
and
jg
lahf
aad
mov
dec
mov
jmp
mov
and
lods
xor
or
pop
cmp
xor
cmpsb
mov
push
xchg
sub
into
inc
std
out
push
sub
mov
test
and
fdivrl
jl,pn
lcall
xchg
clc
cmp
dec
push
inc
adc
sar
rcrb
xchg
test
pop
push
cmpb
out
add
mov
je
mov
std
push
sbb
cmp
jg
xorl
test
loop
mov
pop
dec
test
hlt
xchg
ret
add
or
cmp
loop
jno
arpl
cmp
cmp
adc
dec
int
and
pop
int3
xchg
xor
sti
add
pop
cmp
inc
xchg
rep
js
jle
clc
incl
dec
mov
adc
das
fisubrs
add
vandpd
fs
sbb
insl
dec
jbe
outsb
inc
mov
xchg
mov
dec
ffreep
lcall
pop
stos
data16
lret
pop
mov
sub
mov
or
stc
cwtl
jnp
add
inc
jmp
ret
stos
mov
adc
or
mov
daa
call
mov
mov
cmp
pushf
in
mov
jg
jecxz
xor
movsl
mov
mov
notl
mov
mov
pop
movsb
jg
aas
and
mov
lock
add
add
pop
popl
push
jae
fisubrs
jo
shrl
xlat
mov
outsl
jns
cmp
jg
test
loopne
push
cmp
add
cltd
mov
cmp
aad
jge
xor
jg
imul
inc
pushl
cmc
xchg
lret
xchg
push
and
rcl
fstl
incl
add
mov
sub
imul
adc
in
mov
mov
andb
and
and
test
xchg
push
inc
sbb
enter
mov
hlt
rcrl
outsl
mov
in
ret
dec
or
arpl
loope
cmc
call
stc
dec
insl
jno
gs
mov
and
hlt
pop
subb
addr16
or
or
loope
dec
cmp
clc
pop
fdivr
arpl
loope
mov
xorb
sub
arpl
mov
add
and
aas
mov
sub
sbb
and
les
add
fmull
loop
sbb
mov
and
jnp
ja
pmuludq
jne
pop
cld
out
jnp
push
aaa
jno
repz
les
jmp
out
lock
pop
inc
xchg
pop
or
outsl
sub
xor
fdivrs
loop
ret
shlb
rcll
lcall
in
daa
es
xchg
cmp
addb
cli
xor
scas
enter
add
adc
incl
pushf
jle
aam
fidivrs
sub
inc
pop
xor
lcall
lcall
in
fucom
mov
int
push
in
sti
mov
sbb
ret
stos
jnp
sub
stos
imul
pop
test
decb
dec
test
sbb
mov
sbb
les
orb
cli
xor
dec
pop
mov
or
out
sbb
jmp
mov
jle
adc
xor
mov
cmp
aad
out
ja
jle
and
scas
jge
xor
mov
out
icebp
mov
sub
cltd
mov
xchg
sub
clc
ja
mov
aas
pop
pop
cs
sbb
cmpl
push
sbb
js
scas
cld
sbb
pop
inc
jno
and
in
aad
data16
pop
aas
push
sti
cld
jp
xchg
or
push
inc
sti
pop
int
in
test
cmp
xlat
iret
cld
decl
lods
daa
leave
adc
xchg
arpl
call
hlt
sbbl
inc
test
lods
or
rcrl
mul
stc
push
sbbb
adc
int3
js
test
js
hlt
dec
arpl
popf
sti
daa
negl
or
sub
pusha
insb
stc
mov
clc
pop
cmc
cld
rorl
jmp
adc
in
push
clc
mov
cld
jg
data16
arpl
dec
repnz
inc
mov
lret
ja
mov
adc
jnp
lock
loope
fimull
daa
mov
and
pop
fidivrs
cmp
sbb
iret
and
sbb
mov
sbb
loope
outsl
std
fbld
ds
sbb
mov
addr16
pusha
pushl
iret
cmpsb
cmp
and
add
mov
ja
repz
scas
jns
out
loope
xor
scas
jecxz
lcall
dec
jmp
ja
mov
xor
or
loope
pop
std
shll
sbb
out
leave
icebp
int
sbb
dec
or
shl
and
or
or
inc
jae
dec
les
add
adc
jb
add
pop
stos
adc
aam
popf
stos
testb
loop
scas
pop
cmp
mov
loopne
lret
loopne
mov
cld
jmp
aad
icebp
and
shll
pop
psrad
mov
scas
std
dec
ljmp
in
fmull
outsb
add
fwait
and
cltd
test
mov
rcrb
adc
xor
jae
xchg
adc
inc
mov
mov
mov
incb
and
fcomi
out
adcb
idivl
in
mov
imul
pop
and
int3
push
push
fistpl
repnz
lock
xor
movb
mov
mov
mov
ljmp
push
aas
out
ljmp
cmp
sub
loop
sti
icebp
incl
or
imulb
out
rolb
jl
clc
out
outsb
cltd
push
pusha
lret
sbb
bound
insb
sub
test
sbb
shl
inc
test
adc
stc
pop
popf
in
lcall
nop
in
jb
adc
lret
xor
loop
fbld
cld
or
sub
push
call
cs
or
lock
ljmp
jg
movsl
or
in
or
into
add
divl
rcr
mov
mov
scas
xor
out
aas
dec
lret
or
sbb
out
std
decl
ret
fisttpl
fcomps
es
mov
icebp
call
stos
or
cli
xor
enter
sbb
adc
adc
add
and
sub
loopne
rcll
leave
cmp
pop
adc
add
imul
sbb
inc
dec
cmp
in
inc
pop
bound
sub
mov
cmp
cmp
pop
fldt
push
add
push
iret
cli
cmpsl
rcrl
lcall
sbb
dec
xchg
cli
outsl
out
js
mov
add
loop
mov
es
rolb
sub
roll
ds
and
fstl
ret
push
shrb
test
and
and
sbb
mov
in
leave
and
jle
loop
imul
adc
or
xor
sub
loopne
out
in
xchg
dec
mov
inc
clc
or
mov
aas
inc
mov
fimuls
pushf
push
cmp
add
mov
cli
invd
mov
repz
dec
rcl
test
sbb
loop
or
mov
cs
out
mov
pop
out
sub
mov
cmp
pop
test
and
pop
aaa
dec
jb
xor
aas
push
cld
xor
xor
mov
mov
cmpsb
mov
mov
jecxz
adc
ja
sarb
sub
popa
jb
aas
inc
fisubs
and
scas
shl
xor
dec
ret
adc
dec
adc
ss
push
adc
cmp
push
divl
ret
cmp
sbb
xor
paddd
pop
add
adc
xor
shlb
js
ss
ja
addr16
mov
and
dec
pop
xor
and
les
aam
arpl
mov
mov
or
cld
ret
xchg
ret
loope
xor
cmp
add
jne
sahf
movsb
jmp
loop
jecxz
pop
stos
out
dec
paddd
fdivr
adcb
and
orl
cli
in
in
sbb
xchg
add
mov
comiss
cmp
inc
lcall
cmp
loope
dec
jns
sbb
jg
jmp
insl
scas
imul
mov
cmc
cmp
imul
in
ficompl
adcb
pop
fists
and
inc
inc
fsub
inc
vcmpss
fadds
xlat
movsb
xor
jg
pusha
jmp
aaa
dec
dec
xchg
jb
inc
call
sbb
and
mov
jg
cmp
test
cmp
mov
std
xor
notb
mov
mov
notl
lahf
jns
lds
sub
or
xchg
add
cld
outsl
andb
or
push
mov
fucom
aaa
pop
mov
lea
sti
loopne
jg
or
out
in
xchg
fdivr
inc
mov
adc
mov
incl
rol
xor
call
cmpsl
add
test
and
mov
cmp
fisttps
sub
cli
mov
int
arpl
add
fisttpll
mov
sub
insl
pushl
sbb
add
sub
jl
jecxz
adc
shll
mov
add
fwait
push
out
sbb
pop
add
ss
lock
loopne
lock
jne
mov
pop
stc
sbb
aad
jo
jl
ds
sub
subb
adc
inc
xchg
scas
mov
test
mov
inc
loop
pop
imul
ja
cmp
frstor
xchg
adc
add
ljmp
outsb
clc
dec
sub
lahf
pop
xchg
test
cmp
and
add
mov
faddp
push
xlat
stc
cmp
rolb
push
or
outsl
jnp
decl
adc
inc
push
push
repz
outsb
movsl
sbbl
mov
dec
add
pop
adc
sub
or
decl
test
imul
jo
sbb
and
xor
out
push
jno
sbb
or
test
mov
cmp
lret
inc
sub
mov
mov
clc
mov
in
repz
jbe
pusha
push
xchg
pop
icebp
loopne
mov
pusha
push
test
ja
pop
std
fwait
or
pop
shlb
call
dec
jle
inc
push
dec
cmpsl
aad
lret
mov
pop
push
into
add
pop
movsb
decl
aam
mov
pop
xchg
or
icebp
cmpb
bound
test
sbb
mov
mov
icebp
aas
pop
cmc
push
mov
push
icebp
sti
popa
shrl
cmpsl
sti
pop
cmpb
shrl
jmp
hlt
cltd
inc
loopne
push
mull
jb
push
jnp
inc
inc
hlt
lock
jl
shlb
cmp
pop
mov
mov
pop
gs
into
aas
add
adc
cmpb
jmp
inc
fnstcw
mov
dec
dec
outsl
loopne
outsl
jg
imul
arpl
fsubrl
sar
out
std
push
pop
pop
lea
adc
dec
sbb
xchg
adc
ja
push
clc
inc
repnz
dec
cltd
lods
enter
jmp
mov
mov
inc
aaa
and
pop
rorl
fstpl
adc
inc
mov
sub
loope
and
jmp
enter
fidivrs
loope
in
rorb
idivb
insb
xchg
aas
pushf
xor
aas
outsl
sbb
pop
lret
dec
mov
push
push
xor
jne
mov
jge
out
shll
outsb
arpl
mov
or
push
outsb
cmpsl
icebp
fucomip
fmul
addr16
in
loopne
or
lcall
mov
pop
pop
test
hlt
pop
ret
cmp
mov
sub
int
or
mov
push
repnz
xchg
lods
sbb
lock
loopne
xchg
cmpl
xchg
xchg
lahf
sub
mov
pop
mov
mov
mov
pop
inc
insl
ret
loopne
cmc
je
ljmp
push
sub
fists
jp
xor
push
mov
jo
lods
mov
lret
loope
mov
iret
addl
sets
jno
movsb
lcall
lcall
lock
sub
incl
js
jbe
inc
mov
imul
inc
sbb
pop
sbb
pop
lods
out
dec
enter
push
cmc
mov
mov
cmp
add
jns
addl
mov
push
ret
popf
decb
pop
movsb
push
jb
cmp
inc
rep
mov
fisttpl
fistl
aas
mov
push
movsl
out
xchg
or
jp
sub
ljmp
or
mov
inc
adc
mov
cld
out
lock
sbb
jbe
lcall
or
mov
dec
inc
jo
mov
jne
pop
sbb
aas
pop
dec
and
int3
outsl
jp
ret
leave
adc
in
testl
mov
jp
jae
mov
addr16
adc
pop
jns
push
imul
and
call
add
jle
inc
push
insb
mov
or
jp
push
sub
mov
mov
cmc
dec
mov
jl
in
push
mov
cld
adc
and
xchg
lahf
lret
iret
dec
jg
pop
add
jns
adc
insl
jno
popl
imul
pushf
jle
jge
loope
jb
add
lahf
sub
insl
jp
cmp
in
je
ja
scas
fs
ja
jg
mov
ficomps
ret
or
bound
cli
pop
hlt
cmp
jb
mov
call
insb
stos
push
adc
fucom
clc
gs
lds
jg
sub
push
popa
jno
push
pushw
sub
xchg
adc
fwait
int
into
jg
add
fldcw
xchg
add
or
out
sbb
pop
xor
push
sti
mov
out
aas
cmp
mov
cmp
js
inc
sub
out
cld
ja
jg
rorb
inc
sbb
testl
inc
sbb
pop
movsb
jmp
data16
mov
inc
pushf
dec
pop
dec
inc
maskmovq
idivl
icebp
sub
cs
sub
push
hlt
and
jg
clc
fsubrs
addr16
lock
inc
aas
push
jbe
arpl
sub
fdivrl
fiadds
push
mov
cld
mov
mov
decl
sbb
lret
cld
nop
sub
hlt
es
cwtl
ljmp
rolb
nop
pusha
std
mov
aas
mov
jge
push
aad
xchg
dec
movsl
out
loop
push
das
gs
push
in
jmp
xchg
data16
pop
imul
das
jg
add
punpckhbw
push
fs
clc
ss
xor
mov
push
adc
xlat
mov
jmp
jmp
mov
lds
mov
sub
aad
and
stos
scas
pop
xor
lret
xor
mov
jg
pop
sbb
inc
or
pop
sbb
jno
out
mov
lret
nop
xchg
and
enter
mov
lods
mov
cmp
das
mov
dec
in
add
std
mov
cli
ret
jo
pushf
or
ficoms
inc
scas
jg
clc
iret
lret
xor
pop
and
mov
into
incb
jp
mov
outsl
mov
adc
aas
cmp
gs
ret
xor
std
pop
sbb
jbe
iret
shlb
inc
and
sti
fbstp
adc
aaa
push
dec
and
lods
push
mov
loope
mov
neg
sbb
mov
xor
jle
mov
and
xorb
push
cmp
pop
ret
push
xchg
pusha
jg
jecxz
shr
aas
icebp
enter
mov
pop
addr16
cld
dec
cltd
ss
push
sub
mov
call
roll
mov
icebp
shl
mov
mov
repnz
loopne
aas
jmp
mov
sahf
jg
cmp
jl
daa
jb
inc
mov
std
stos
push
dec
jb
or
or
lahf
or
cmp
lcall
and
sub
xor
jnp
sub
pop
stos
loop
jmp
loopne
fwait
les
jb
add
fildl
fcomp
inc
pop
push
movsl
dec
lret
cmp
sahf
arpl
pop
cld
and
mov
mov
fisttpl
fwait
stos
dec
mov
fwait
test
adc
pop
lock
outsl
xor
cmp
jg
or
jbe
cmp
xor
mov
mov
pop
in
arpl
scas
stc
cmpb
jmp
pushl
push
test
jmp
mov
out
push
in
push
mov
dec
mov
hlt
push
fmull
inc
xchg
lea
loop
cld
fdivr
sub
sub
push
jecxz
call
adc
jnp
sbb
or
das
into
sbb
fadds
in
xor
push
stos
aad
iret
inc
pushf
xchg
enter
ljmp
int
insl
stos
cltd
pop
or
aaa
mov
ljmp
lea
xchg
popf
fwait
sub
mov
add
cld
dec
lret
imul
das
stc
mov
sub
sub
sti
rcr
js
mov
mov
push
roll
add
mov
or
popa
mov
dec
jg
push
sbb
xchg
jle
adc
and
push
and
mov
scas
call
xor
xchg
cwtl
test
stos
mov
or
lea
test
hlt
pop
add
cmp
fdiv
ja
adc
enter
push
sub
sub
pushl
and
nop
mov
sub
push
icebp
jg
xor
dec
mov
and
dec
adc
aad
iret
repz
das
mov
hlt
mov
ds
pop
js
das
sub
movsl
testl
or
ret
lods
mov
call
xor
adc
add
enter
lock
sub
jne
jecxz
mov
mov
decl
xchg
pop
sub
ror
push
loop
out
bound
jae
mov
dec
popl
cmc
pop
or
seta
push
fistps
mov
icebp
xor
xor
or
hlt
std
pushf
inc
jmp
sbb
mov
sbb
or
call
mov
ja
mov
andb
pop
or
sahf
cld
out
mov
mulb
pop
int3
std
push
lcall
push
data16
cwtl
push
sbb
ljmp
or
cmpsb
loope
ja
mov
aaa
mov
fs
fyl2xp1
mov
loop
test
lret
aas
cmp
xlat
and
into
fidivs
mov
push
pop
scas
push
inc
cs
fcomip
std
sbb
add
mov
push
push
arpl
cmc
lcall
jmp
xor
mov
and
jmp
jmp
loope
or
jg
sahf
fnstenv
mov
pop
incl
std
push
fmuls
cmpsb
adc
ljmp
testl
fcompp
iret
dec
negl
decl
test
out
testb
push
std
outsb
imul
xor
or
dec
mov
sub
jg
loop
hlt
test
cmp
nop
pop
outsb
cmp
addr16
xchg
push
testl
pop
lcall
cmp
cmc
fiadds
repnz
repz
in
cmp
xchg
xor
in
stos
mov
in
xchg
mov
push
pop
mov
mov
js
mov
inc
les
jb
or
in
cmc
aas
gs
icebp
or
jmp
and
or
mov
pop
aas
int3
scas
fdivrp
lock
aam
aam
cltd
dec
aas
inc
xor
mov
cltd
cmpsl
xor
repnz
jecxz
mov
push
inc
out
hlt
cmp
jmp
sub
xchg
and
adc
inc
loop
inc
notl
adc
mov
sbb
xchg
pop
sar
xchg
xchg
in
call
jmp
or
fsubrl
adc
lods
fcomip
pusha
sbb
mov
icebp
jle
inc
pop
int3
push
mov
test
fdivrs
clc
sbb
clc
mov
push
jge
mov
add
popa
or
push
loopne
add
mov
pop
in
std
outsl
lds
leave
out
vpmuludq
push
sbb
pop
mov
sbb
dec
lock
jne
xchg
dec
dec
call
adc
xlat
jmp
repz
pop
and
into
cmpb
pop
jecxz
bound
push
mov
iret
jge
fsubp
mov
aas
xchg
mov
mov
std
mov
jg
std
neg
mov
xchg
icebp
mov
fcomps
jecxz
inc
mov
xor
lret
mov
js,pt
in
das
pop
movsl
iret
std
fistpl
icebp
jo
aad
mov
push
dec
mov
call
aam
fs
dec
std
jge
dec
fimuls
add
push
lds
das
push
lcall
or
enter
jle
and
call
mov
mov
int3
dec
andl
out
push
adc
mov
jnp
dec
aad
aam
clc
xor
inc
lahf
cmc
pop
mov
pop
cmpl
sub
das
xor
cmc
jne
ljmp
cld
sarb
leave
cli
dec
in
pop
xor
mov
sub
mov
cmc
enter
adc
cmpsl
lret
mov
repz
paddw
or
sub
push
lock
sbb
loopne
sbb
jmp
aas
scas
fs
aam
sub
add
addl
das
xor
or
aas
push
inc
scas
sub
js
lock
pushl
jo
jle
jmp
mov
mov
popa
test
push
push
inc
clc
stc
mov
std
jae
sti
sbb
adc
outsl
out
outsl
hlt
scas
in
dec
shrb
scas
test
ljmp
out
dec
pushf
stos
lods
repnz
clc
adc
daa
enter
addr16
sbb
add
sbb
adc
pop
aad
setae
cwtl
cmp
aad
daa
mov
add
xor
iret
popf
cmp
sub
inc
xor
jg
fdivrs
fcompl
sti
push
lahf
adc
aas
filds
outsl
sub
shlb
negb
xor
ljmp
adc
cmp
int3
fdivrp
loopne
ret
sbb
inc
imul
lods
xor
cmc
jp
jae
iret
mov
mov
push
lds
js
jecxz
jg
sti
pop
in
lret
or
repnz
adc
mov
lcall
pusha
sahf
lds
repnz
add
icebp
jg
jmp
push
fsub
mov
mov
lret
jns
cmp
mov
sbbl
ja
aas
xchg
repnz
out
rorb
jbe
mov
subl
and
outsl
sbb
jp
jg
incb
xor
call
mov
jle
into
jecxz
xchg
int
fwait
mov
jle
jp
inc
mov
and
loope
rcrl
sub
fscale
lahf
es
into
xor
xor
jmp
mov
fisubrs
add
fiaddl
push
daa
mov
outsl
test
and
inc
sti
or
subb
mov
decb
rolb
int3
hlt
pop
add
in
repnz
sti
adc
fnstcw
pop
push
cmp
add
out
or
clc
cmp
dec
jo
xchg
sub
mov
inc
xchg
cmp
jge
and
mov
jl
inc
dec
mov
pusha
jmp
dec
lods
xor
out
pop
clc
cmpxchg
adc
dec
mov
xor
addr16
mov
add
clc
push
sub
mov
adc
pop
movsb
cltd
xchg
xor
lds
shrl
pusha
lods
popf
call
test
stc
and
or
jno
adc
pop
aad
cld
scas
ret
aas
mov
mov
shrl
fildll
cmp
cmpsl
int3
nop
inc
adc
mov
sub
mov
push
sbb
or
dec
in
out
dec
addb
sub
dec
aas
push
scas
test
aaa
mov
loopne
enter
cmp
leave
fisttpl
aas
pop
int3
cwtl
shlb
mov
icebp
jle
sub
movb
aas
sbb
testl
divb
popf
popf
push
ret
sti
jg
out
sub
and
lds
pop
sub
popa
xor
inc
stos
cmpsb
mov
mov
cmovb
push
movsb
jbe
outsl
ret
pop
leave
push
dec
push
push
rcrb
icebp
ret
mov
mov
push
icebp
mov
xor
mov
inc
mov
psubd
mov
into
pop
in
jbe
xlat
pop
mov
xlat
in
push
loope
lea
fwait
cmpb
mov
dec
loopne
dec
loopne
jae
imul
pop
pop
hlt
adc
push
call
mov
cs
test
pushf
std
sbb
fucomip
mov
sub
int3
divl
scas
and
inc
lcall
or
fcompl
call
leave
mov
or
push
mov
add
inc
xchg
and
or
xchg
dec
sbbb
pop
aam
pusha
lds
dec
insb
jb
push
test
outsl
js
lcall
pxor
mov
out
sbb
data16
cmpsl
testl
cmp
mov
mov
movsl
push
cmp
imul
mov
or
add
out
sahf
xorl
loopne
loop
sub
rorb
call
icebp
arpl
ss
lahf
add
lock
mov
out
mov
sbb
mull
push
sub
out
xchg
sbb
shlb
xchg
sub
les
bound
into
add
arpl
inc
stos
lock
ja
std
mov
mov
jg
std
pushf
arpl
and
xor
jmp
dec
inc
push
or
inc
and
clc
into
std
imul
and
pop
cmc
inc
and
gs
mov
cmc
jle
icebp
xlat
std
jne
add
and
sbb
inc
pop
in
add
xchg
pop
or
inc
bound
leave
jo
sbb
pop
mov
out
push
mul
cmpb
mov
mov
sbb
push
ffree
decl
push
out
add
arpl
mov
jmp
dec
loope
sub
xor
ja
jmp
inc
lods
arpl
cmc
or
adc
and
mov
fwait
and
dec
xchg
mov
xchg
in
mov
sbb
pusha
cwtl
or
adc
dec
insl
push
loop
fs
out
adc
jg
stc
or
fisttps
mov
adc
outsb
push
aas
rcrl
movsl
lcall
cld
or
leave
xor
mul
cmp
pushf
addr16
pop
imul
lods
test
sti
jg
ret
xor
stc
sar
jne
pop
jns
inc
or
cmc
lahf
jae
jg
mov
mov
push
mov
loope
sub
mov
sub
jo
lcall
xor
shll
inc
sahf
fs
fs
mov
lock
adc
outsb
idivl
lds
inc
push
mov
ljmp
cmp
es
data16
lcall
xchg
jns
pop
adc
xchg
cli
out
icebp
fimuls
dec
adc
sti
ret
jg
jge
jmp
xchg
jne
mov
std
mov
xchg
daa
cmc
outsl
sub
inc
or
push
xor
lods
pop
int3
pop
add
sti
push
adc
inc
je
cmp
out
jo
sbb
mov
arpl
dec
out
sub
jmp
cli
lcall
add
icebp
mov
cld
je
lea
iret
xor
pop
ds
lea
jp
mov
inc
sub
hlt
popa
icebp
pop
cmp
ljmp
inc
fwait
mov
mov
mov
mov
jl
xor
call
push
inc
add
ds
pushf
mov
sysret
push
gs
cld
push
ds
fmuls
lea
inc
sbb
dec
adc
arpl
jb
push
divb
pop
push
sbb
pop
lods
adc
js
and
lahf
lock
push
mov
inc
push
iretw
je
outsl
cmp
jnp
cmpsb
jmp
push
out
leave
pop
mov
jo
pushl
inc
lea
sti
inc
in
mov
cli
inc
add
lfs
push
cld
add
and
mov
inc
or
push
outsb
jne
mov
ja
ss
push
nop
pop
stos
sbb
pop
cld
call
push
test
adc
adc
xchg
cli
xchg
jo
push
push
out
jp
and
icebp
jno
fldl
push
enter
jge
xchg
and
lret
mov
test
cs
lcall
imul
and
or
push
loopne
test
add
mov
fucomp
adc
insl
sbb
ss
mov
jo
adc
xchg
jbe
mov
sbb
pop
fdivr
mov
jg
mov
out
push
mov
jl
test
pop
das
fsubl
xchg
adc
repz
ja
xor
daa
out
pop
mov
movd
jmp
outsl
jne
cld
mov
jg
sti
iret
daa
movsl
mov
insb
add
ss
add
les
xchg
out
lock
adc
sbb
push
sub
xlat
sub
in
lret
xor
mov
jecxz
dec
aas
shl
pop
test
pop
pop
enter
rcrb
mov
inc
cmc
mov
mov
push
das
mov
push
push
popl
adc
test
inc
inc
pop
xchg
pop
or
mov
aaa
push
fistpll
adc
pop
pop
push
pushf
loope
xor
jo
out
jecxz
cs
out
insb
cmpsb
sub
hlt
pop
mov
pop
and
in
inc
stos
jle
cmp
dec
hlt
inc
and
loopne
pop
xorb
pop
icebp
cmpsb
pop
lret
leave
outsb
xchg
add
mov
sar
js
insl
pop
fcoml
cmp
jmp
pop
sbb
cmp
fucomip
test
pop
sub
push
or
fdivr
ret
sub
sahf
sub
pop
add
jg
in
mov
lret
pop
dec
outsl
fstps
xchg
decb
jg
mov
aad
dec
mov
jb
push
and
fstps
idiv
push
dec
inc
or
out
movsb
cmpsl
adc
push
fsubl
and
and
incb
mov
and
push
outsb
sbb
mov
or
inc
add
repnz
sar
dec
lock
fldl
imul
cs
je
adc
mov
mov
aas
loope
out
push
hlt
push
push
jp
mov
inc
test
dec
mov
mov
incl
cmpsl
ds
aas
cld
push
push
sub
mov
je
mov
jle
imul
cmp
xor
jne
pop
mov
mov
cmp
xchg
push
sahf
cmc
adcl
std
jecxz
mov
loope
pushf
inc
int
fwait
sbb
pushl
shl
pop
mull
xchg
cmp
incl
inc
loop
js
lret
daa
outsl
cmp
xor
pop
cmp
test
cmp
les
adc
scas
or
mov
test
insb
lock
clc
add
hlt
cmpsb
xchg
stc
push
insl
inc
lea
cmc
mov
sub
icebp
push
std
shr
repnz
lods
mov
pop
cmp
pop
inc
std
dec
stos
or
in
pop
inc
pop
loopne
add
push
ljmp
xor
xlat
mov
popf
push
xor
xchg
ja
mov
lret
jae
mov
mov
fwait
mov
imul
aas
sub
dec
std
dec
jbe
test
ret
cld
vpaddd
popf
ret
imul
mov
inc
icebp
push
into
gs
or
or
adc
mov
mov
stos
mov
mov
mov
mov
aas
push
cld
add
outsb
xchg
outsb
imul
fnsave
mov
jo
xchg
cmpl
sti
lahf
fmull
jb
aam
sub
fildl
loopne
mov
sbb
jg
pushf
repz
lcall
aas
stos
aam
and
jns
jne
addr16
mov
jns
sub
cmp
sbb
test
lcall
xchg
or
fldt
jmp
mov
xor
rol
ret
stc
xchg
adc
loopne
add
loopne
aam
and
jg
clc
inc
xchg
mov
pop
pushl
cmpxchg
mov
push
jbe
push
and
mov
std
or
cli
test
xchg
jg
push
inc
mov
xchg
jl
call
push
shr
pop
and
push
mov
aas
ret
add
mov
and
mov
faddp
or
ss
popf
lcall
fcom
out
sti
pop
out
rcrl
loop
aam
inc
or
lds
fistpll
xchg
dec
and
mov
sbb
fiadds
push
push
test
push
push
jg
out
or
and
out
dec
add
inc
cmp
lahf
fsubrp
and
pushl
pop
ret
cltd
jnp
xor
arpl
fstpl
cmp
xor
ror
mov
jge
adc
xchg
arpl
cmc
decb
pop
test
pop
aaa
cmp
xor
enter
movsl
inc
roll
mov
outsb
movl
stos
mov
inc
jg
pop
sub
pop
xchg
add
movsl
adc
call
aas
or
lret
adc
xchg
movsl
neg
stos
xchg
inc
add
jge
mov
push
incl
mov
xlat
inc
jb
jne
daa
popa
punpcklbw
add
sarl
jle
jecxz
add
js
into
mov
dec
mov
cmc
lret
pusha
sub
sahf
mov
mov
inc
call
sbbb
xlat
imul
xor
add
mov
decl
pop
push
aaa
jnp
clc
sub
out
add
or
adc
shrb
scas
cmp
fcmovnb
in
sbb
fldcw
decl
sbb
out
test
les
pop
fistpll
xor
pop
fcoms
jg
clc
xor
ja
pop
in
sub
and
arpl
mov
mov
pop
dec
mov
mov
popf
xchg
out
ja
pop
icebp
mov
jecxz
mov
push
in
pop
stos
aaa
inc
pop
outsl
jge
lcall
aad
daa
sbb
xor
inc
orl
cli
out
adc
mov
add
jg
call
out
shll
pop
mov
dec
in
jge
mov
movsl
out
cli
mov
mov
loopne
pop
dec
or
cmp
push
or
std
idiv
dec
or
std
pop
int
mov
sbb
outsl
adc
nop
int
push
out
gs
mov
stos
jg
clc
xor
jge
loop
mov
xchg
in
cld
sbb
add
test
adc
clc
mov
js
add
popa
imul
pusha
and
adc
pop
xchg
pop
fbstp
test
mov
push
sub
incl
cwtl
iret
in
push
jle
mov
push
ret
loope
sub
fucomi
jecxz
or
ljmp
fsubr
inc
mov
ret
pop
push
sbb
hlt
push
das
sub
sarl
inc
sar
ss
aam
mov
shrl
add
aas
loop
cmpsl
out
or
ljmp
lahf
pop
test
loope
fldl
cld
xor
add
add
orb
andb
jnp
sarb
push
jbe
sbb
data16
psraw
xor
or
adc
xchg
mov
out
sub
sbb
jns
aad
xchg
cmp
fdivs
inc
adc
ljmp
insl
cli
cli
in
add
daa
adc
clc
std
pop
inc
cld
std
push
sti
sbb
cli
aaa
icebp
sahf
sbb
push
dec
xor
jmp
enter
xchg
setne
fdivr
cli
sub
stc
jnp
jg
js
fcom
jg
push
mov
jmp
sub
fcomps
mov
out
lock
xor
jp
or
mov
subb
enter
shl
rolb
push
mov
out
jecxz
jl
push
setno
mov
cmp
jmp
push
sti
xchg
dec
sbb
fdivrs
lock
lock
aaa
bound
invd
pop
iret
pop
lods
bound
jo
loopne
incb
lcall
fwait
mov
loopne
dec
loopne
pop
xchg
ljmp
push
fbstp
std
inc
sar
xchg
fnstenv
hlt
sti
mov
stc
ret
mov
popf
jb
jnp
popf
mov
movsb
sub
loope
ret
nop
jecxz
mov
adc
in
sbb
jo
mov
pop
ljmp
mov
icebp
push
mov
inc
cmpsl
dec
cmpsl
push
xchg
mov
add
or
cmp
jae
ja
adc
insl
push
xchg
pop
rcpps
jg
mov
out
rcrl
pop
mov
clc
xlat
das
fst
add
sti
mov
xlat
jne
outsl
out
pop
add
jno
cmpsb
repz
mov
into
cmpsl
int3
cmp
movsb
mov
add
mov
cmp
and
movsb
ficompl
mov
lock
sub
fisttpl
adc
or
aaa
aad
mov
mull
dec
sar
adcb
stos
mov
jo
and
repnz
xchg
and
aas
mov
xchg
cmpsb
xorb
mov
and
lret
rolb
iret
sti
maskmovq
idivl
nop
sub
out
pop
in
or
pop
pop
xchg
repnz
lock
testl
mov
clc
out
jge
xchg
out
mov
push
loope
popf
loopne
test
ret
nop
adc
pop
mov
arpl
mov
dec
call
adc
hlt
dec
inc
cli
aaa
popf
outsb
dec
pushf
test
fxch
popf
sti
out
cmc
xlat
iret
fstps
pop
lods
cmp
jns
ret
push
clc
bound
mov
sbb
lahf
mov
inc
cld
add
lea
cld
sbb
xchg
cmp
xchg
cmp
jmp
inc
js
ret
imul
into
sbb
jecxz
fsubs
and
loope
addl
fildll
adc
popa
cmp
aaa
sub
pusha
xchg
lret
aad
fcoml
into
inc
into
ja
fxch
dec
fs
pop
cmp
mov
push
decb
sbbl
hlt
out
sub
clc
daa
cld
jae
xchg
cmc
insb
bound
or
sar
sbb
aas
sbb
sbb
pop
cwtl
inc
dec
push
sarl
outsl
xor
sub
sbb
sbbb
and
mov
mov
adc
les
mov
jnp
mov
jne
loop
jg
aad
mov
mov
add
mov
mov
test
ret
out
rcrb
ja
or
mov
adc
mov
push
mov
imul
loopne
mov
fnstcw
pop
cwtl
int3
roll
jo
jg
or
cmpsl
ret
aas
adc
mov
adc
cmpsb
adc
and
mov
pop
jge
aad
adcl
xor
ud0
int
popf
fstps
test
jmp
xchg
lods
jbe
sbb
nop
subl
cmp
mov
push
inc
mov
and
setle
cmpsl
and
mov
addl
clc
sbb
lea
sub
je
js
scas
aas
mov
xor
int
shll
add
std
sbb
ss
pop
mov
sub
cld
xchg
ficomps
test
and
lods
mov
stc
into
jno
cld
mov
jge
inc
push
jp
leave
mov
xor
arpl
dec
nop
push
pusha
cmp
ja
add
sub
inc
sub
push
push
hlt
jg
fimull
lahf
mov
lods
mov
in
jle
and
cld
out
aaa
xor
xor
xchg
and
xor
inc
xchg
add
adc
fsubrs
mov
jle
loop
dec
js
sti
jp
sarl
insl
repz
fsubrl
dec
pop
iret
leave
lcall
cmp
test
sbb
xor
into
ficompl
aaa
xchg
pusha
fdivrs
jnp
dec
sbb
cmp
jne
test
es
sarb
test
in
mov
sub
jg
cli
aad
cs
mov
cs
sbb
push
cs
into
jb
hlt
aaa
add
push
cmp
mull
fs
shlb
add
xor
mov
frstor
push
cmp
popl
push
sarl
scas
adc
in
cld
mov
out
xchg
cmp
inc
rorb
repnz
fsts
xor
fcoml
mov
bound
xchg
jae
cmp
pop
inc
stc
mov
insl
nop
mov
cmpsb
pop
jmp
cmp
pop
mov
lahf
mov
push
loop
push
mov
jecxz
add
into
sub
pushl
sbb
jmp
ss
outsb
mov
std
lods
mov
mov
adcb
icebp
sub
inc
adc
adc
push
dec
and
and
negl
lock
jle
push
push
aam
or
push
jg
lods
shll
or
push
push
mov
adc
cs
mov
push
js
cmpsl
sub
dec
outsb
fs
xchg
out
jno
inc
test
push
push
sub
inc
popf
mov
inc
mov
jg
xor
mov
jae
jge
cli
pop
inc
ljmp
loopne
test
sbbl
in
sbb
jb
filds
mov
xor
data16
push
inc
cs
mov
sub
out
or
arpl
int3
adc
xor
sub
jbe
push
or
and
xor
mov
aam
pop
lcall
jnp
in
jno
data16
cmc
pop
ret
and
mov
dec
pop
push
pop
push
outsl
sub
push
and
inc
cmc
push
aad
dec
cmpb
jg
fdivs
cmp
imul
addr16
push
add
xor
mov
je
dec
insb
enter
rcrb
stos
adc
call
outsl
stc
inc
push
aas
mov
imul
dec
insb
pushaw
or
mov
adc
cmp
sub
jae
mov
inc
lock
bound
push
call
outsb
xor
jbe
insl
mov
inc
aad
inc
adc
rol
cmc
hlt
push
push
andl
gs
mov
or
bound
clc
loopne
outsl
je
fists
mov
inc
inc
jo
mov
cs
icebp
aaa
mov
sub
mov
push
pop
add
sub
sub
fbstp
testb
inc
adc
xchg
inc
jne
cmpsb
es
ds
push
add
sub
sub
sbb
jno
dec
push
sbb
add
stos
xchg
stos
sub
insl
inc
leave
ret
sub
pop
cmpl
fisubrs
fs
xor
sub
or
insl
data16
inc
add
shl
jne
add
adc
push
arpl
out
push
hlt
cmp
out
lcall
inc
popa
push
push
adc
push
lods
mov
sub
mov
push
popa
pusha
push
movsb
push
jge
fsubl
lret
outsb
dec
loopne
sbb
cmp
cmp
or
loope
push
pop
ret
inc
ds
inc
dec
inc
xor
sbb
adc
sub
dec
adc
lods
ss
cmp
sbb
add
push
jne
imul
push
sub
inc
arpl
incl
mov
test
sahf
shrb
adc
add
dec
push
xchg
ja
popa
xchg
push
push
cmc
adc
popa
dec
jecxz
mov
dec
and
call
xor
sub
je
dec
addb
out
sbbb
ficompl
xchg
js
mov
dec
dec
add
icebp
fcmovnu
inc
or
je
adc
add
xor
sahf
sahf
push
pop
aas
sahf
inc
mov
xchg
xor
and
icebp
out
cld
outsl
leave
inc
xchg
insb
loopne
mov
xchg
adc
dec
add
xchg
push
aas
inc
js
push
loop
pop
push
xchg
imul
jae
aaa
sub
dec
dec
jno
sti
outsl
push
incl
clc
add
adc
sub
std
addps
jmp
addr16
push
sbb
mov
dec
push
push
dec
mov
jne
popa
mov
pop
inc
dec
insl
cmpsl
jb
addr16
mov
jecxz
push
inc
jno
jle
in
or
outsb
push
das
sub
inc
movl
pop
pop
sub
aaa
cwtl
adc
mov
dec
jbe
shr
lods
xchg
push
add
jb
push
push
cwtl
mov
jp
mov
add
js
sub
cmp
jg
bound
bound
sbb
outsb
inc
sub
add
cwtl
jb
pusha
push
mov
js
lahf
or
inc
data16
addr16
push
sti
hlt
movsb
add
out
mov
stos
roll
rorl
std
inc
cli
mov
adc
mov
in
out
sar
sbb
and
push
mov
inc
call
dec
lock
mov
insb
and
in
add
xor
js
add
push
cmc
mov
mov
sbb
dec
dec
inc
push
pop
push
xchg
mov
bound
cmp
push
into
push
leave
and
mov
fdiv
test
mov
outsl
inc
std
mov
dec
push
cmpsl
cld
xor
xchg
or
mov
inc
fs
mov
cmp
jg
je
add
lret
push
cmpsl
lcall
mov
ret
or
and
pop
leave
pop
push
ror
lret
test
pop
xchg
pop
push
imul
nop
adc
nop
add
or
shll
dec
cmc
jg
sub
jne
jo
arpl
inc
xchg
push
stc
push
sti
push
mov
scas
jle
je
inc
jne
push
xchg
hlt
inc
insb
sub
push
add
loope
addr16
add
lret
hlt
loop
fwait
mov
xor
bound
scas
or
sbb
mov
sbb
ficomps
fiaddl
mov
pop
inc
cs
fwait
test
inc
xchg
fs
add
ja
adc
pop
lods
out
insb
inc
stc
add
and
cli
add
ficoms
or
sub
push
mov
dec
fistpll
add
jo
ret
movsl
in
aaa
jb
ja
arpl
push
ds
imul
pop
mov
xchg
jnp
sbb
sbb
mov
pop
fdivr
loope
test
stc
imul
ja
aam
dec
xor
dec
push
jmp
aas
mov
add
add
jae
xchg
repz
pop
mov
jns
adc
cli
in
add
sub
push
push
pop
repz
mov
dec
jg
jno
dec
jns
ss
or
or
pop
pop
daa
xor
js
enter
into
pop
or
add
iret
sbb
pop
and
jl
mov
clc
inc
jbe
pop
push
pop
jmp
push
pop
dec
lods
bound
adc
push
in
incl
gs
push
pop
jns
xchg
push
lods
xchg
je
fldl
and
add
cmp
cld
inc
mov
xor
jo
sub
dec
xor
fidivl
pushf
push
mov
cmp
in
inc
je
orl
cmp
je
jno
test
jno
arpl
jae
cltd
sub
pop
lods
sub
popl
mov
sub
dec
xor
sbb
dec
jb
jno
fneni(8087
dec
je
ss
dec
sbb
jmp
adc
cli
pop
in
shll
inc
inc
imul
jo
lods
inc
mov
xchg
sbb
rclb
out
movb
aas
adc
bound
ret
dec
aam
lds
xor
dec
push
pop
inc
mov
imul
or
movsl
jmp
incl
push
mov
inc
push
dec
adc
push
adc
jbe
jo
dec
sub
pop
mov
jne
test
sbb
lock
push
inc
outsb
push
sub
clc
std
push
push
ds
adcl
mov
mov
mov
das
push
inc
popa
clc
rolb
xorl
mov
loope
mov
adc
pop
push
mov
xchg
sub
add
dec
xor
add
sub
push
inc
movsb
lea
xor
test
push
out
pop
std
lds
jb
add
lock
pop
jle
cld
or
mov
sub
int
dec
push
inc
sbb
push
xchg
dec
jl
jg
mov
dec
sub
outsb
dec
jbe
sarb
xchg
popa
ss
inc
ljmp
xchg
push
int
inc
xor
ja
std
inc
add
mov
cs
rcll
pop
pop
ret
imul
cmpsl
pop
add
add
lods
push
pop
adc
clc
push
mov
loope
or
push
inc
loopne
and
loope
mov
mov
xchg
adc
inc
push
push
pop
sub
pop
add
nop
mov
inc
movsb
ds
cmpsl
jae
push
pop
cmpsb
fld
mov
mov
add
mov
mov
inc
inc
cld
dec
imul
add
in
out
stc
add
loop
pop
imul
push
or
out
bound
sub
push
call
push
push
dec
adc
cmp
jne
mov
pop
dec
xor
sub
rclb
inc
test
stc
call
lret
outsl
add
jmp
add
ja
inc
jns
inc
push
sarl
ja
dec
lods
aam
pop
call
pop
mov
inc
pop
pop
mov
incl
inc
aaa
jle
inc
xor
rorl
sti
aaa
inc
ret
icebp
cmpsl
pop
add
push
fimull
jecxz
dec
imul
add
push
push
mov
mov
insb
aam
inc
scas
add
decl
test
movsl
jns
dec
sub
dec
cmp
jne
push
andb
push
mov
adc
adc
sub
insb
loop
dec
push
jmp
or
mov
call
repnz
sub
push
dec
dec
jo
mov
js
push
scas
dec
data16
test
jno
ss
jbe
lods
adc
scas
out
jmp
aaa
popa
popa
rol
int3
mov
pop
orb
pop
shll
jae
fistl
iret
push
jmp
lock
lods
out
outsl
dec
cmc
adc
bound
arpl
add
test
and
mov
add
pop
loope
jg
popa
push
inc
lods
inc
js
jbe
dec
icebp
inc
jns
jno
push
je
andb
sbb
ret
jne
fwait
push
je
test
insl
insb
ret
push
inc
push
sub
test
outsl
loopne
and
xorb
sub
xchg
add
mov
pop
push
dec
push
push
xor
jns
inc
ljmp
push
mov
adc
push
or
lock
inc
cmp
pop
jbe
cmpsb
sbb
xor
xchg
inc
or
rcll
cmpsb
jecxz
jmp
call
add
stc
lret
mov
je
pop
daa
mov
pop
hlt
dec
jbe
roll
xchg
sti
pop
outsb
or
sub
mov
pop
mov
nop
jbe
icebp
push
inc
inc
dec
insw
leave
xchg
jle
mov
popa
lahf
pushf
add
fstpl
roll
push
int3
rcrb
mov
fildl
push
enter
pusha
push
adc
fsubr
lea
mov
orl
dec
inc
std
sub
subb
pop
sti
out
add
pop
popf
add
mov
popf
push
mov
stos
adc
xlat
adc
cmpsl
sub
aas
or
sbb
mov
jbe
xchg
pop
and
inc
cmc
push
fiaddl
in
or
mov
add
shlb
inc
sahf
or
hlt
mov
leave
push
and
lods
mov
cwtl
shll
outsl
lret
jmp
jmp
pop
lret
andl
in
mov
sub
loope
jge
shr
jle
mov
mov
pop
pop
in
mov
and
mov
fimull
adc
std
test
std
cmp
aaa
or
outsb
xchg
cmp
test
ret
daa
mov
and
subb
mov
add
and
jl,pn
push
sar
dec
imul
gs
rcrl
adc
ljmp
xchg
mov
jmp
or
stos
or
jg
cmp
push
mov
push
push
filds
loopne
cld
sbb
aam
cmpsl
add
jne
lock
shll
pop
lahf
jo
add
or
pop
adc
test
sbb
lahf
jnp
xor
int3
je
pop
cmp
push
cwtl
cmp
std
pop
pop
dec
arpl
add
repnz
adc
ss
cld
pop
in
dec
daa
dec
pusha
xor
cltd
test
aad
xor
icebp
jo
jne
add
xchg
sarl
mulb
adc
movsb
in
fistl
sub
scas
or
lret
add
cmc
sti
push
inc
mov
mov
or
pop
int3
xchg
dec
sub
mov
imul
addr16
sbb
pusha
ds
fdivs
mov
popf
mov
in
push
add
add
cmp
cld
mov
jne
adc
push
cmp
test
aam
inc
test
pop
je
add
clc
cltd
pop
loope
inc
pop
inc
pop
sbb
add
test
and
stc
push
mov
sbb
and
loope
sbbb
add
ss
inc
faddl
add
push
mov
jg
sbb
inc
add
sbb
out
cmpsb
jne
lret
shrl
arpl
sahf
add
jecxz
fs
mov
jecxz
add
jl
outsl
fcoml
xchg
dec
cmpl
mov
add
testb
into
cwtl
inc
or
cmp
mov
dec
std
sbb
add
sbb
nop
sub
sbb
jb
xor
ja
icebp
adc
iret
lds
sub
std
es
xor
or
out
rol
adcl
cld
mov
insb
mov
jg
and
xchg
popa
cmp
mov
inc
push
popf
aas
push
add
cmp
sub
xchg
ds
mov
fbstp
mov
add
clc
sbbl
data16
lret
es
xchg
xchg
xor
hlt
xchg
sbb
fcomps
mov
mov
int3
gs
jno
leave
pop
lret
pop
outsb
fdivr
lea
addr16
lret
outsb
nop
jbe
mov
cmp
js
mov
or
int
fldenv
mov
xchg
mov
repz
inc
sbb
stc
ret
xor
ret
pop
mov
and
add
jle
shll
scas
mov
push
mov
jb
ljmp
fcompl
clc
int
fmul
es
lret
or
add
lods
xchg
sbb
ret
mov
jp
incb
dec
cmp
jbe
jbe
cmp
scas
sbb
push
xchg
xor
push
xor
mov
daa
rcrl
dec
add
dec
cmp
push
rcll
pop
inc
sub
idivl
xchg
sbb
fistpl
fisubrs
mov
xor
pop
test
mov
push
or
jnp
jbe
les
icebp
adc
mov
dec
pop
sahf
mov
enter
push
push
lret
out
jo
mov
aaa
and
push
xor
xchg
and
xchg
push
aam
pop
in
xor
jg
repnz
jns
sbb
scas
outsb
insb
pop
outsb
testb
movsb
jbe
mull
filds
mov
adc
in
jne
jecxz
add
jns
lods
je
iret
mov
in
xlat
xchg
loop
push
cmc
inc
loope
sub
mov
inc
inc
insb
clc
rolb
fcomip
add
push
cmp
and
dec
and
aas
inc
addb
push
aad
jo
and
jp
and
pop
xchg
adc
or
sbb
pop
mov
jle
rolb
pushf
jmp
rorb
jg
repnz
inc
stos
sbb
pop
fcoml
and
repz
fcmovne
dec
dec
push
es
jecxz
mov
pop
jl
das
mov
jno
cmp
lcall
adc
orb
rcll
in
scas
lcall
jb
ffree
add
jp
jne
inc
ficomps
or
dec
pop
test
xchg
andl
mov
pop
sbb
mov
leave
cmp
dec
mov
idivb
push
jne
lcall
jmp
add
adc
pusha
inc
aaa
push
pop
fsubl
adc
and
fimull
je
fisubl
aas
icebp
addl
out
dec
adc
jbe
mov
sub
and
mov
pushf
mov
jbe
pop
decl
outsl
mov
mov
iret
inc
cmp
xchg
xor
das
or
cmp
mov
stc
int3
std
adc
and
mov
addr16
mov
sbb
pop
sbb
sbb
sub
fbstp
fisttpl
mov
int
or
xchg
jg
fnsave
pushf
out
mov
inc
loope
idivb
jmp
nop
ret
push
inc
popa
jnp
cmp
ja
sub
test
mov
jge
ja
cmpsb
iret
xchg
cmp
add
and
add
dec
push
or
inc
mov
xlat
sub
push
lea
push
sti
jmp
or
lret
aam
add
dec
movsb
jmp
inc
pop
lahf
in
fistpl
inc
fsubl
test
and
pop
ja
fildll
test
jbe
clc
cld
dec
movsl
or
into
mov
incb
fisttps
pop
lock
or
gs
out
fwait
loope
xor
xchg
xchg
mov
arpl
stos
loope
std
push
mov
lock
fs
gs
cmpsl
iret
mov
jg
cmp
and
aam
mov
in
add
iret
fists
cmp
repnz
divl
inc
and
mov
fiadds
or
jmp
mov
nop
inc
ret
cwtl
jp
pop
sbb
adc
jo
in
inc
and
jp
daa
es
or
add
sbb
out
fstpt
jae
cmpsl
out
repz
or
loop
push
test
ja
das
cld
push
jo
jle
xchg
adc
aaa
jnp
push
xchg
stos
addb
pop
inc
pop
imul
ja
int3
xor
idivl
sbb
pop
jle
pop
cld
lock
lcall
shll
sub
sbb
aad
sub
cmp
or
subl
and
daa
dec
xchg
add
fidivrs
test
lock
lds
jg
incb
cltd
or
mov
fidivl
js
mov
mov
lcall
push
cltd
ret
jle
ss
mov
mov
mov
or
rclb
cmp
mov
pop
movsl
stos
loopne
pop
jg,pn
mov
jg
sub
inc
xor
outsl
fsubl
hlt
sbbb
lret
insl
insb
inc
pop
test
inc
xorl
pop
das
movsb
aaa
clc
sbb
jge
inc
push
in
adc
pop
mov
fstpl
ja
ret
cmc
int3
or
xlat
jge
and
mov
mov
std
inc
mov
outsl
jecxz
ja
dec
mov
outsl
movl
ja
pop
cmp
push
inc
xor
jo
subb
in
jae
shlb
decb
lea
push
xchg
push
mov
stos
cmpb
jg
and
mov
add
mov
call
xchg
sahf
and
mov
push
pop
add
insb
dec
inc
jne
add
mov
dec
mov
scas
movsl
ret
sbb
js
fistps
test
stos
fsubrl
xchg
push
mov
movsl
outsl
fadd
in
xchg
jmp
pop
aas
sarb
mov
push
or
fisttps
addps
dec
aaa
sbb
cltd
add
outsb
pop
sbb
xor
pusha
ficoms
test
fisttps
adc
pusha
clc
insb
cmp
hlt
mov
or
dec
jle
cmp
insl
xchg
out
int3
mov
jne
sahf
pop
test
inc
add
sbb
lods
jg
mov
aam
pop
loopne
cmc
sbb
scas
push
insb
xchg
xor
into
adc
fistps
aas
dec
insl
test
cltd
lcall
es
clc
inc
jl
je
ss
int3
in
push
inc
inc
sbb
mov
scas
pop
inc
mov
ljmp
jp
sbb
out
and
jle
or
mov
cs
mov
pop
adc
push
ja,pt
cmp
movsl
popa
mov
mov
lods
jl
sbbb
lea
xchg
frstor
mov
mov
fbstp
fstpt
jno
mov
insb
andl
xor
out
xor
pop
int3
loop
mov
xchg
orl
mov
clc
pusha
loop
stc
lahf
pop
inc
idiv
pop
adc
xchg
ljmp
pop
inc
adc
push
divl
fdivrp
or
mov
insl
and
inc
movsl
or
sub
adc
lea
hlt
push
fistpl
push
mov
mov
movsl
or
out
cmp
jle
pusha
fcomp
sbb
and
and
jbe
ja
sbb
popa
pop
ret
aas
jb
fldl
ss
jnp
xchg
add
jno
xchg
mov
dec
push
fsubs
jo
push
adc
xor
sbb
adc
xchg
mov
loopne
addb
lock
cwtl
dec
sub
xchg
call
adc
fnstcw
hlt
call
arpl
adc
mov
mov
fucomip
sub
outsl
jb
sahf
add
into
movsb
sub
movsl
add
push
cmpsb
lahf
lock
xor
std
test
push
outsl
lods
cltd
lods
pop
lret
dec
ret
mov
outsb
test
pusha
adc
jae
dec
jns
sbb
push
add
outsl
jb
daa
xchg
adc
cmc
sub
jno
mov
jbe
test
insb
sbb
push
cld
roll
dec
int3
or
rcr
adc
fwait
neg
inc
outsl
mov
mov
mov
sti
cmp
pushf
add
mov
call
pop
dec
add
push
ljmp
and
daa
rcrb
sbb
cmp
cmc
fs
sub
add
inc
mov
rep
cmp
sub
das
sub
enter
add
adc
sbb
je
ljmp
xchg
scas
mov
sarl
push
nop
add
pop
pop
pop
add
out
xor
aad
les
inc
pushf
inc
sahf
insl
sbb
int3
aad
sub
inc
xchg
cs
dec
push
inc
arpl
sub
in
sbb
inc
cli
in
jle
shlb
adc
and
dec
movl
inc
enter
and
adc
jo
jmp
xor
mov
pop
dec
inc
cmp
mov
inc
mov
add
hlt
xrelease
std
jmp
enter
decb
insl
imul
loope
pop
loopne
fwait
mov
lea
add
popa
push
xchg
dec
cli
test
test
les
mov
mov
mov
push
jo
ja
add
push
sbb
inc
iret
push
jbe
mov
xor
mov
arpl
mov
mov
sub
dec
lret
push
and
jecxz
jmp
adc
loope
cld
mov
xlat
lahf
cmp
xorb
rcr
pop
sar
dec
push
inc
daa
xchg
shrl
les
pop
and
in
jmp
test
add
rcr
adc
fdivl
movsl
add
xor
mov
lcall
cmp
negl
xchg
push
frndint
adc
sbb
test
dec
add
xchg
or
or
cmp
and
mov
orl
jo
xor
lea
lret
push
sarl
decb
js
jmp
and
jns
and
pop
jge
mov
xor
push
xchg
jae
mov
call
xchg
out
dec
push
add
out
int
mov
cld
shll
add
pop
dec
mov
inc
in
xlat
jge
fadds
loop
enter
cmp
cmp
lds
jae
es
mov
mov
and
inc
pushf
add
sbb
movsl
imulb
mov
dec
sbb
xchg
push
dec
inc
push
push
ja
ror
je
xchg
xchg
push
lods
mov
mov
imul
std
bound
ret
mov
or
sbbb
mov
loope
fst
dec
inc
xchg
pushl
push
add
cmp
fcmovnu
mov
testb
adc
push
jmp
pop
stc
ret
pop
pop
stc
and
ret
std
or
sbb
or
icebp
push
fwait
loop
dec
inc
cs
or
push
add
sbb
cmp
inc
push
outsb
orb
jo
outsl
ret
and
adc
loope
outsl
dec
test
out
jp
loope
inc
outsb
mov
xchg
mov
jp
xchg
jnp
xlat
push
and
jnp
inc
fldt
cmp
add
pop
test
fnsave
std
lock
jmp
pop
js
mov
icebp
ret
xchg
test
fs
inc
fsubrs
jnp
fs
mov
out
mov
rolb
jmp
ja
fnstsw
dec
mov
es
pop
sbb
dec
add
xor
insl
es
cwtl
cmc
sub
and
stos
mov
rolb
negl
sbb
mov
bound
ss
fcomi
popf
sti
cltd
mov
ret
fisubrl
mov
loop
jge
mov
ficoml
and
sbb
out
adc
ljmp
loope
fldenv
cwtl
pop
loopne
add
ss
loop
out
test
incl
push
ret
insb
mov
enter
cld
mov
int
fcomp
sahf
and
and
cmc
mov
xorb
ret
inc
adc
mov
sub
mov
movsb
cltd
push
das
pop
mov
xchg
lret
push
sbb
fiaddl
sbb
mov
mov
or
inc
jns
pop
leave
push
fistpll
sarl
cmp
enter
ja
sub
bound
jp
in
sub
out
aad
mov
cmp
outsl
pusha
cld
js
and
or
push
sahf
les
sti
add
sbbl
mov
add
jl
pop
int3
lea
stos
imul
xor
mov
nop
pop
rcr
sub
pushf
sbb
mov
mov
icebp
outsl
pop
fildll
jb
aad
nop
movsl
das
lcall
push
xchg
popf
lods
cmp
shl
and
hlt
jnp
pop
jno
lods
fadd
mov
jp
sbb
cmp
syscall
imul
in
add
mov
jb
and
iret
adc
xchg
dec
lock
testl
fwait
scas
cmpsb
cmp
push
in
addr16
cli
mov
je
pop
mov
pop
lock
addr16
mov
ss
fisttpll
or
call
clc
or
call
or
in
jl
mov
or
mov
ss
decl
mov
jns
dec
mov
aam
js
cmp
js
out
orl
popa
adc
ds
xchg
add
sbb
cmpsl
outsb
adc
and
dec
push
jecxz
loope
inc
jo
push
mov
adc
pop
int
mov
gs
shll
xor
test
mov
sbb
out
ja
stos
pop
repz
popf
aad
enter
lahf
loop
fldt
and
movsl
mov
arpl
jbe
adc
inc
push
cmpsb
ds
cmpsb
dec
or
fiaddl
mov
pusha
xlat
mov
loope
lahf
rcrb
and
mov
jg
mov
xchg
lea
fsubrs
out
loopne
ja
in
int
hlt
rcrb
test
sbb
pop
ds
add
and
movsb
mov
sbbl
out
and
push
dec
outsl
aas
jno
add
or
push
ja
push
aas
shll
pop
xchg
mov
pusha
xchg
cmp
dec
add
pusha
and
xchg
sub
lcall
jge
mov
add
cs
movsl
pusha
xchg
mov
pop
sbb
xlat
nop
sbb
push
add
das
mov
mov
insl
sub
and
mov
sub
jl
ret
push
pusha
lcall
add
or
aas
call
and
imul
sub
aam
push
insb
icebp
push
or
jl
fistl
pop
scas
jmp
shrb
push
mov
push
jo
jecxz
jl
mov
push
mov
psubusb
add
xchg
push
jecxz
imull
int
adc
add
mov
and
cmc
cld
scas
inc
mov
imul
or
cmc
mov
mov
aaa
sbb
stos
fwait
mov
sbb
ss
xor
push
sub
and
sbb
fsubp
loope
or
iret
clc
pop
dec
insb
lock
dec
lea
and
addl
cmpsb
jo
jecxz
jmp
jne
inc
lret
inc
fs
jo
mov
stos
xchg
jno
adc
xchg
and
js
int3
add
insl
mov
das
fcmove
in
inc
fcomip
pop
outsl
pop
and
fnstcw
movsl
sub
inc
pop
loopne
mov
or
push
das
xor
pop
jno
aas
adc
pop
xchg
xchg
lods
cmpsl
add
add
push
pop
or
or
shll
inc
in
mov
push
hlt
xchg
add
push
jp
adc
subl
icebp
in
jl
roll
lods
scas
inc
jns
sbb
frstor
outsl
repz
cmpsb
adc
jne
inc
mov
sbb
jb
sub
adc
test
jp
sbbl
lcall
pop
and
loopne
in
andl
addr16
movsb
xchg
ret
inc
jb
mov
lods
or
mov
rcl
orb
test
ss
add
pop
cld
lea
shr
pop
xchg
push
inc
test
mov
ret
mov
and
xchg
ret
xchg
outsl
addb
adc
clc
sbb
pop
jge
lar
cli
push
das
mov
dec
push
lds
cmp
or
mov
pop
push
aas
aad
roll
sarl
mov
cmp
pop
sbb
or
je
and
into
mov
inc
popa
jmp
pop
mov
push
sub
je
pusha
shll
push
fcoms
xlat
mov
arpl
jl
nop
outsl
repnz
cld
lods
mov
mov
xchg
repnz
jno
xor
jmp
sar
outsl
gs
push
push
xchg
sub
mov
arpl
hlt
sub
pop
ljmp
rcrb
cld
cli
repnz
fistps
xor
aad
adc
pusha
push
lds
out
mov
dec
pop
push
addr16
pop
mov
lret
xchg
aam
ret
div
jl
inc
adc
aaa
push
cmp
push
sub
inc
add
mov
fcmovnbe
imul
or
jg
outsb
add
dec
adc
mov
ja
je
xlat
mov
arpl
pop
xchg
std
rorb
fiaddl
push
pop
push
mov
lds
test
push
js
pop
loop
fidivrl
shrb
push
mov
lock
arpl
adc
add
mov
xorb
scas
or
mov
out
fwait
sub
mov
cmpsl
clc
jno
lods
dec
aas
lds
stc
mov
pop
sub
push
mov
mov
mov
daa
inc
mov
inc
cmp
pop
mov
sbb
fistpl
jns
enter
jno
mov
mov
and
sub
xor
shlb
or
sub
pop
dec
fbstp
stc
into
jecxz
and
jae
leave
mov
cli
push
fxch
es
lret
imul
sbb
pop
xchg
lea
into
loope
mov
out
xchg
stc
imull
icebp
dec
loop
out
clc
mov
cmpsl
mov
movsl
mov
push
mov
push
in
jmp
aad
mov
mov
mov
ss
ret
clc
adc
mov
out
das
fwait
std
in
sbb
fnsave
idivl
scas
xchg
push
orb
loope
sub
pop
imull
push
bound
loopne
jne
mov
add
pusha
or
mov
unpcklps
jg
popa
or
or
popa
push
ja
test
test
xor
es
adc
jge
jg
or
push
movsl
push
add
shrl
outsl
jns
mov
clc
and
imul
shrb
cli
test
mov
fwait
sbb
mov
mov
pop
xor
ret
in
icebp
ret
or
psubq
insb
mov
pop
mov
inc
cmp
std
test
rcr
out
sbb
aam
xchg
inc
and
and
jns
mov
lahf
push
lock
and
sti
sbbl
mov
lock
push
leave
pop
out
mov
incl
jns
mov
fcomp
out
dec
or
sbb
scas
lret
or
mov
xchg
xchg
jns
cli
pop
ret
and
push
imul
pop
fcomps
pop
adc
cmp
push
idivb
mov
add
sahf
imul
jg
add
push
cld
mov
or
mov
popf
test
jle
cmpsb
addr16
insl
popa
jae
out
lock
mov
jb
pop
pop
xor
and
push
sbb
xchg
inc
sahf
imul
popf
mov
aad
mov
jmp
mov
jle
xchg
push
arpl
fimuls
mov
jns
and
and
pop
push
sbb
add
js
in
xor
sahf
lds
sbb
add
pop
push
xchg
out
cmp
jo
test
xchg
mov
in
xor
xor
movsl
mov
jg
fs
outsb
mov
mov
sti
arpl
mov
fdivs
push
xchg
jb
into
fbstp
lahf
sahf
mov
incb
call
push
mov
add
sbb
cmp
data16
fistps
xchg
xor
and
out
mov
sub
pusha
scas
sbb
das
cmp
xchg
xchg
jp
in
dec
test
call
fs
call
das
pop
add
pop
inc
lods
rorb
in
out
push
xor
cwtl
cltd
jns
mov
jno
mov
xor
lret
test
pop
xchg
pop
call
cmp
xor
inc
add
sti
jnp
sbb
or
rcll
and
adc
xchg
or
int
push
mov
mov
cmp
aaa
sbb
lcall
jp
ds
jne
popa
jmp
pop
dec
daa
push
mov
mov
aaa
sbb
sub
jo
call
dec
xor
mov
xor
int3
and
push
ljmp
add
adc
outsl
lcall
loop
pop
pop
mov
stos
push
insb
sub
adc
xlat
fidivrl
or
mov
cmp
lods
push
mov
xchg
popa
ja
adc
sub
and
or
add
jp
and
pop
test
push
loope
pop
std
mov
pop
ds
das
xor
or
inc
mov
dec
cmpsb
jp
and
add
and
inc
aam
sbb
pop
les
pop
lock
jp
or
mov
mov
cmp
imul
cld
int
lahf
pop
orb
hlt
mov
lcall
bound
and
xchg
xchg
pop
test
movsb
ja
fwait
jb
mov
sti
pop
mov
fidivs
rorl
fwait
xor
aas
sahf
push
mov
xchg
dec
outsl
mov
add
insb
xor
shl
in
lea
shrb
or
push
mov
scas
imul
mov
dec
out
xchg
fnstcw
and
fldt
inc
adc
xchg
pop
jle
rorb
or
sub
stos
in
mov
test
or
movsl
mov
mull
insl
pop
aam
xchg
out
add
adc
add
or
and
push
sub
lea
sbb
add
lret
aaa
pop
jo
lds
js
sub
pusha
xlat
and
subl
or
inc
push
pop
or
lret
adc
jecxz
test
and
in
push
xor
sub
adcb
stos
fcmove
mov
fisttps
mov
mov
fists
mov
arpl
add
fdivrs
loope
push
sahf
mov
dec
addl
mov
ds
aas
lcall
pop
popa
stos
cmp
pusha
andl
push
push
dec
push
sub
push
jns
ja
sbb
arpl
push
and
outsb
jbe
mov
in
push
add
dec
pushl
mov
outsl
add
or
cld
test
sbb
mov
push
mov
push
cmp
ljmp
xor
iret
adc
testl
jnp
shr
pusha
pop
daa
call
mov
icebp
lods
jge
and
jg
dec
loope
add
nop
inc
sub
loope
imull
aad
inc
mov
push
lods
adc
test
and
push
in
jg
pusha
cmp
xchg
xor
pop
push
mov
push
shlb
and
sbb
test
cmp
mov
push
movsb
js
jg
test
les
cs
ljmp
pop
cmpsl
filds
mov
pusha
les
je
dec
aaa
call
mov
adc
xchg
mov
iret
lea
sbb
lret
daa
sahf
mov
cmp
repz
fisttpl
pop
stos
rol
jmp
cmpsl
testb
loope
in
xchg
pusha
push
cmp
inc
lea
fadd
sti
xchg
fstl
mov
sub
jbe
xchg
dec
xlat
mov
add
dec
push
xor
ret
inc
adc
sahf
ss
adc
or
insl
dec
mov
enter
adc
inc
lock
dec
push
cmc
cs
in
push
jne
dec
rorl
mov
or
divb
jmp
lea
je
sti
loopne
push
dec
jne
jns
filds
cmp
rolb
add
mov
cltd
sub
or
mov
or
xor
xor
lret
rcl
pusha
xor
xor
scas
jge
push
insb
jb
xchg
jg
or
loopne
sbb
push
and
shrb
outsl
mov
sub
pop
call
adc
jb
sub
adc
fdivl
sub
ss
out
mov
and
xchg
fstenv
sarl
lock
lds
test
ret
cmp
in
push
sub
cmovns
movsb
std
add
test
mov
imul
push
inc
jmp
stos
outsb
pop
lcall
nop
sbb
insl
mov
push
psubq
dec
mov
mov
xchg
push
stos
outsl
cli
dec
fs
dec
xchg
in
mov
or
jnp
pop
scas
frstor
in
mov
aad
dec
cmc
or
orb
fcoms
add
cwtl
in
pop
out
stc
scas
mov
in
sub
mov
xchg
roll
test
popa
xor
mov
sbb
rorl
sub
int
pop
cmp
test
mov
in
negb
lods
outsl
xchg
xor
or
aaa
insb
xor
push
ret
mov
inc
dec
test
call
mov
jmp
and
pop
jecxz
xchg
add
lock
fneni(8087
out
mov
popf
mov
dec
mov
xor
push
mov
dec
js
jmp
call
sti
inc
shll
sbb
fidivrl
xlat
rclb
fists
cli
mov
arpl
jae
mov
and
loopne
icebp
leave
and
shrl
pop
jg
lods
fistps
fs
cmc
pop
push
inc
jb
inc
test
inc
mov
sahf
shll
rorb
mov
sub
imul
inc
in
dec
imul
loopne
or
mov
sbb
sub
fisubl
cmc
sub
repz
clc
popl
rcll
cmp
pop
push
shl
je
shrl
push
fstps
mov
mov
cmp
sub
les
mov
in
xchg
xor
jl
adc
push
dec
aad
cli
jmp
lea
jmp
xor
jle
stos
xor
mov
mov
stos
and
and
mov
mov
mov
cmp
mov
sbb
cmp
push
inc
das
clc
dec
outsl
push
push
and
pop
mov
sbb
mov
jnp
pop
and
lcall
lock
mov
mov
je
cli
or
add
xchg
jae
or
sbb
add
push
xor
fs
push
mov
fsubs
je
pop
sti
sub
popa
and
icebp
inc
xlat
xor
mov
addb
arpl
and
dec
insl
inc
ljmp
je
push
arpl
lret
jl
ja
sti
cli
outsl
sbb
push
pusha
pop
jbe
adc
nop
cltd
xorl
arpl
adc
cmp
xchg
mov
or
inc
jbe
inc
jmp
jne
add
push
mov
xchg
lock
pop
or
sub
add
or
out
jbe
std
inc
xorb
outsb
rcrl
stc
xor
mov
repnz
push
imul
les
push
mov
inc
add
mov
lock
dec
rcl
mov
xchg
ljmp
lock
cmp
push
add
mov
inc
ds
mov
ret
aam
rcll
ffreep
lds
inc
icebp
out
shlb
xchg
sub
dec
leave
xchg
in
jmp
jge
outsb
je
mov
in
jo
mov
mov
add
test
inc
cmpsb
jecxz
pop
adc
cmc
push
aam
push
push
jle
pusha
arpl
cmp
arpl
sub
stos
lcall
adc
xchg
ss
adc
lock
popf
test
enter
std
int
call
push
mov
inc
add
jecxz
jmp
std
adc
adc
jae
mov
movsb
adc
call
inc
push
inc
inc
add
lea
and
mov
ljmp
rclb
out
mov
push
in
or
lcall
sti
jo
adc
in
xchg
push
mov
mov
or
mov
jge
lock
inc
pop
or
cmp
test
sub
cli
addr16
or
mov
push
into
xor
sbb
mulb
scas
mov
in
cmp
add
jp
addr16
jp
mov
sub
cld
cmp
incl
inc
pop
xor
leave
sub
insl
dec
adc
pop
loop
mov
lods
pop
add
insl
lods
rcrb
sbb
stc
add
mov
clc
push
and
adc
push
mov
fcoml
repnz
jae
aad
mov
sub
aam
cli
sub
push
adc
push
insl
mov
pop
aas
inc
shrb
push
inc
mov
rorl
filds
xor
or
push
rolb
mov
push
cmp
push
lock
sub
dec
fmuls
mov
daa
and
aam
imul
es
into
orl
mov
aaa
or
xor
or
int
mov
sbb
out
add
jecxz
scas
scas
shlb
repz
loop
dec
and
xchg
loop
aad
add
rclb
ficoml
jmp
inc
data16
cmp
repnz
lods
push
mov
push
rcrl
push
lcall
xlat
loop
mov
mov
mov
dec
call
or
xor
popf
sbb
pop
outsl
jl
inc
cmp
mov
jae
movsl
push
xor
stc
fnstcw
mov
push
mov
andl
fstl
adc
inc
cmp
push
icebp
add
mov
les
pop
je
scas
call
push
incb
mov
test
pop
jle
jle
mov
adc
cltd
imull
shl
das
sub
sbb
fisttps
cmp
aaa
or
loopne
adc
in
adc
call
xor
push
jge
xor
adc
mov
pop
sub
aas
xlat
iret
fsts
in
mov
push
lea
mov
cli
inc
scas
repz
adc
adc
mov
and
adc
mov
sbb
and
add
cmpsl
lea
test
jmp
ds
or
std
mov
and
xchg
rcr
push
xchg
movsb
xchg
xor
lock
hlt
out
mov
incb
xchg
cld
imul
pop
lret
add
je
test
sub
ror
push
test
inc
adc
mov
push
or
jnp
and
fucomip
jae
call
loope
add
and
inc
pop
inc
movsl
push
aam
bsr
je
xchg
push
xor
mov
mov
lret
xchg
mov
push
xor
mov
test
jnp
and
clc
fisttps
movsl
ret
add
fs
ljmp
nop
insl
and
inc
pop
aad
je
push
dec
and
outsb
jle
inc
mov
sub
out
scas
inc
lret
push
xor
enter
mov
sub
lods
out
imul
push
fists
pop
inc
adc
and
cmpsl
lods
pusha
inc
pop
pop
lock
mov
mov
or
xchg
jecxz
push
stc
call
pop
scas
and
mov
fwait
mov
mov
shl
out
insb
adc
jl
outsl
decl
xlat
aam
bound
sub
in
js
fiaddl
mov
clc
push
pop
jb
push
inc
data16
xchg
jl
pusha
jmp
push
mov
mov
jp
adc
push
out
cmp
add
addb
outsb
inc
adc
stc
pop
jbe
pop
enter
outsl
add
sbb
pop
aad
jmp
mov
call
or
fdivs
or
mov
mov
filds
addr16
cmp
and
push
mov
nop
test
dec
add
xchg
xor
stos
loope
sbb
push
cmp
stos
mov
cli
add
int3
pop
and
mov
insb
adc
stos
lcall
adc
addr16
aam
fidivrs
jp
mov
push
adc
push
cld
pop
mov
sub
push
or
xchg
daa
sarb
pop
sbb
aam
aam
push
repz
add
adc
scas
mov
push
arpl
xchg
cmp
push
or
jno
rcrl
movb
sbb
sahf
das
fs
enter
jns
subb
imul
scas
lret
std
cmpsl
mov
mov
jecxz
mov
add
jl
and
inc
sub
sbb
dec
dec
aad
sbb
jnp
repz
and
sbb
inc
cltd
or
cld
mov
jns
xor
dec
adc
cmp
push
xor
push
popf
xchg
pop
or
rcrb
mov
pop
jbe
or
lock
ja
les
popa
push
test
add
hlt
int
mov
and
adcb
daa
incl
cmpsb
push
jle
aas
in
push
add
cmpsb
inc
inc
test
jb
test
aad
lods
leave
fstp
bound
pop
fstpl
fcoml
inc
xchg
xchg
pop
fdivrs
pop
mov
add
idivb
cmc
test
jg
in
or
das
jp
iret
jnp
pop
jp
fmuls
sbb
aad
popa
ja
out
jno
lret
sub
pusha
test
mov
fucomi
mov
dec
xor
xchg
add
shrb
call
xchg
jb
add
aad
mov
sbb
out
jg
adc
sbb
mov
push
decb
popf
lds
aam
imul
dec
sbb
adc
pop
xchg
jno
data16
test
imul
mov
lahf
test
std
inc
and
xlat
xchg
pop
mov
pop
lds
imul
inc
loope
stc
into
stos
pop
ficompl
sub
stos
fildl
mov
pop
xchg
and
in
dec
sbb
loopne
push
xor
jmp
push
sub
das
add
int
push
push
scas
or
out
adc
cmpsl
add
icebp
xchg
ffreep
and
jne
xchg
cli
in
mov
or
inc
test
outsb
adc
jbe
jg
dec
jmp
lods
or
xchg
add
jg
jmp
pop
rol
or
in
cmpsl
pusha
jge
fmul
aaa
pushf
inc
xor
jns
push
lcall
inc
stos
loopne
aam
mov
xor
arpl
xor
cmp
and
jl
imul
popf
push
sar
lods
mov
push
pop
cwtl
inc
ret
pop
adc
in
outsl
rorb
push
fwait
cltd
or
bnd
cmp
mov
dec
test
test
mov
xor
xchg
std
add
xchg
mov
add
cmc
out
das
sub
and
pop
test
or
fwait
and
pop
int3
xchg
add
insb
lret
mov
icebp
mov
cld
rcrb
fldl
jne
leave
test
adc
insl
fwait
adcl
inc
je
add
das
lret
scas
incl
in
inc
or
xorl
movsl
cmp
lods
sbb
jecxz
sub
lret
mov
xor
push
cmpsb
scas
mov
mov
push
jecxz
xor
cmp
loopne
adc
repz
xchg
and
es
mov
fwait
sarl
adc
fbstp
rcrl
sti
outsl
xlat
xor
push
pop
add
lea
test
hlt
add
es
dec
jno
rcrb
dec
or
and
aam
imul
push
cmp
and
rcrb
adc
popa
aad
sbb
ret
das
mov
cmp
ds
mov
dec
sub
movsb
mov
push
hlt
subb
inc
sbb
push
nop
int
inc
addr16
sub
fimull
jp
mov
push
mov
inc
stos
aaa
rcr
jbe
push
out
lret
ret
sti
xor
mov
insb
dec
dec
cmp
sbb
data16
mov
loopne
aaa
mov
mov
xlat
mov
mov
or
jb
xor
cs
gs
insl
add
rcll
inc
adc
std
push
push
rcrb
xor
gs
adc
js
xor
push
leave
.byte
.byte
jg
nop
add
addl
decl
add
cld
add
cli
inc
sub
repz
jmp
fs
jns
jl
mov
cmp
btr
mov
pop
mov
mov
cld
sub
call
int3
faddp
pop
add
sbb
xchg
add
mov
ja
inc
pop
incb
push
imul
and
push
sub
mov
stos
outsl
jmp
in
add
mov
mov
push
stos
or
fldl
inc
and
add
outsl
insb
jmp
dec
daa
push
inc
mov
pusha
clc
push
sbb
enter
mov
or
fwait
jmp
scas
add
mov
add
stos
pop
inc
xchg
and
and
pop
sti
mov
jae
out
outsb
cmp
add
sarl
pop
add
fstpt
test
xor
and
cmp
rorl
or
das
out
inc
clc
sub
xor
lcall
in
mov
div
idiv
popf
pusha
xchg
stos
mov
nop
and
push
rolb
ret
jmp
incl
push
jb
loop
or
sub
add
add
mov
call
or
fcoms
loop,pn
hlt
sbbb
push
push
adc
cmp
insl
lods
mov
rcll
insl
aad
outsl
adc
jns
add
dec
pop
xchg
push
gs
das
lea
sbb
pop
inc
fnstenv
inc
add
mov
add
inc
pop
out
mov
mov
inc
add
ret
mov
dec
push
xchg
addb
movsl
clc
xchg
ret
push
in
add
fwait
outsl
add
mov
stc
add
add
add
add
add
add
sub
in
bound
jg
rclb
xchg
adc
or
fldl
and
shr
xchg
add
lret
lret
add
add
mov
dec
ja
mov
push
in
testl
cmp
imul
sbb
push
cld
sbb
add
and
jne
jle
mov
sub
les
inc
outsl
pushf
xchg
sbb
scas
icebp
xchg
aas
cs
mov
add
ja
cmp
div
adc
inc
mov
pop
lcall
xchg
adc
inc
ljmp
adc
icebp
or
sbb
dec
movsb
mov
jnp
jmp
jb
loop
std
test
cmpsb
mov
lods
jnp
dec
add
cmp
pop
ret
cmp
pop
push
cmp
loope
push
loopne
xor
mov
jne
sahf
shll
outsl
or
iret
add
xchg
flds
das
dec
popf
mov
mov
fs
mov
or
rorb
shufps
adc
int3
fbld
out
inc
xchg
push
int
dec
mov
inc
shlb
jecxz
xchg
faddl
enter
dec
repz
mov
push
and
hlt
out
nop
in
ss
loop
dec
push
scas
push
add
shl
mov
jl
pop
xor
sbbl
cmp
mov
mov
mov
or
fs
inc
mov
out
dec
nop
mov
cltd
loope
sti
decl
and
add
test
mov
sbb
sub
aas
popf
loope
push
or
xor
pushl
mov
push
add
push
fdivs
enter
mov
jp
sbb
inc
std
out
pop
push
cwtl
inc
add
and
cmp
push
test
imul
rcll
jmp
loopne
and
add
gs
das
dec
into
sub
outsl
cltd
cs
sub
add
adc
cli
lea
adc
add
add
adc
cmp
popa
je
adc
cmp
xchg
outsl
fwait
ret
jo
lods
cmp
outsb
hlt
adc
adcb
in
cmp
or
dec
xor
xor
sub
add
stc
xchg
xor
pop
dec
mov
adc
mov
mov
pop
add
daa
sub
add
in
or
js
sub
xchg
or
ds
mov
dec
xor
pop
jns
pop
add
sbbb
or
outsl
xchg
dec
pop
pop
clc
pop
add
pusha
popa
xor
fstl
clc
xchg
inc
ret
or
add
in
fiaddl
adc
rolb
not
fstl
mov
add
lahf
jmp
mov
xchg
push
lcall
adc
out
lods
mov
pop
push
cwtl
je
decl
das
mov
sti
mov
push
mov
mov
scas
in
jne
or
in
pushf
add
outsl
les
orl
test
hlt
out
jg
addb
xor
pop
xor
dec
pop
pop
ret
xchg
or
in
leave
shl
stos
gs
stos
push
jg
insl
mov
jbe
ljmp
lret
xor
and
mov
mov
in
shll
imul
pop
das
std
data16
orl
mov
jae
insb
add
dec
mov
popa
stc
and
insl
inc
pop
loopne
pop
js
sbb
aad
xchg
fcomi
push
mov
add
dec
push
lock
push
and
and
sbb
orl
jmp
decb
clc
dec
inc
int3
je
lods
insl
jge
sub
add
pop
and
rol
add
add
push
loopne
sbb
out
ljmp
mov
out
fstps
mov
cmp
jmp
pop
test
dec
mov
into
mov
xlat
sbb
sbb
clc
jl,pn
jmp
call
lret
adc
mov
mov
and
aam
xchg
scas
or
add
jae
rorl
hlt
pop
mov
mov
inc
mov
or
test
lret
sbb
aaa
lock
cmp
cs
xchg
movhps
stc
lods
subb
or
test
sarb
xchg
test
mov
in
push
xchg
and
es
cbtw
fldl
mov
mov
lds
test
fsubrs
jecxz
arpl
push
xchg
jb
push
mov
outsl
outsl
mov
test
repnz
inc
pop
xchg
fistpl
pop
js
decb
mov
sbb
outsl
sbb
jbe
in
arpl
pop
subb
cmpsw
shll
mov
mov
fs
jnp
rclb
or
leave
cmp
adc
je
xchg
lcall
cmp
dec
mov
mov
mov
shrl
mov
push
jbe
add
fnstsw
xor
adc
cli
pusha
push
mov
fcmovu
adc
mov
dec
push
ss
adc
and
ret
pop
clc
fsubrp
xor
add
jecxz
cld
mov
jecxz
lret
cmpsl
in
jg
loope
imul
mov
adc
adc
aaa
sbb
notb
and
xor
jmp
jge
xchg
cmpsl
or
setp
mov
es
sbb
test
mov
hlt
and
int3
out
in
cmp
fstpt
movsl
mov
scas
sar
mov
and
mov
mov
ror
mov
out
inc
mov
mov
test
lahf
or
mov
insb
add
adc
pusha
in
cmp
cmp
pop
xor
icebp
dec
arpl
push
adc
dec
add
aas
fisubl
cmc
jb
insb
sahf
popa
ja
shl
lcall
adc
pop
mov
je
fs
inc
inc
jmp
aas
mov
dec
inc
test
pop
mov
mull
iret
scas
add
fsubrs
adc
xchg
pop
mov
sbbl
test
push
add
cwtl
jae
dec
fbstp
jle
dec
aaa
mov
test
bound
jo
or
mov
loope
jo
mov
pop
push
mov
mov
cmpb
dec
inc
xor
add
mov
jo
xchg
scas
pop
push
push
cmovo
or
sbb
fadd
sbb
loop
mov
sbb
clc
pop
pop
add
mov
jns
jmp
xchg
pop
scas
jns
mov
mov
cmp
push
mov
clc
sub
enter
jo
dec
sub
fisttpl
pop
inc
mov
ss
dec
xchg
sti
lret
lret
out
adc
mov
mulb
pop
inc
xor
arpl
jnp
xlat
std
inc
inc
jae
sub
cmp
test
or
in
dec
cld
roll
ret
jnp
jg
sbbl
push
mov
or
jo
loop
in
xlat
lock
ret
push
insl
int
popf
pushw
inc
popf
lahf
loop
jl
ss
adc
lods
or
pop
test
cmpsb
sbb
adcl
cltd
mov
jmp
dec
mov
outsb
int
inc
movsb
out
push
fnstsw
jmp
in
or
push
movsb
sub
mov
in
or
push
push
mov
insl
imul
cs
movsb
and
fidivs
pop
gs
pop
adc
add
fdiv
jp
mov
cmp
popf
push
repz
push
out
gs
xor
dec
lods
xchg
add
sti
mov
mov
mov
sub
cli
xchg
lods
mov
mov
out
mov
cli
ror
negb
sbb
fnsave
dec
cwtl
inc
insb
lea
push
insb
xchg
xor
jnp
jp
xchg
in
sub
fcmovne
inc
sbb
lret
sbbb
sub
orl
pusha
jp
stc
lods
xor
cwtl
inc
mov
jmp
mov
imul
mov
mov
pop
push
mov
pop
dec
test
imul
or
sbb
loopne
mov
outsb
mov
push
mov
push
sbb
stos
add
push
jns
sbb
imul
inc
std
movsl
fildl
pop
or
push
jne
stc
add
in
inc
dec
out
out
idiv
lret
cmpsb
hlt
or
cld
fwait
xchg
mov
add
add
mov
pop
adc
inc
pop
xor
adc
jecxz
pop
jae
ret
adcb
sbb
cmp
xchg
lahf
xchg
sbb
sbb
stc
ret
add
add
arpl
push
jb
adc
push
pop
test
scas
fisttpll
inc
add
or
jle
stos
push
mov
cmc
push
in
fadds
pop
push
loop
pop
outsb
cmpsb
or
ljmp
push
adc
clc
lahf
das
insl
imul
aad
mov
test
cmp
outsb
adc
je
or
clc
mov
push
push
ss
push
js
out
fs
jb
sar
jg
cmp
faddp
xchg
sar
dec
add
popa
movsl
jo
mov
cmp
in
mov
cmp
xchg
sbb
or
mov
and
sub
add
mov
sub
sbb
testl
js
pop
in
mov
aam
in
xor
sbb
xchg
sbb
pop
cmp
stos
sub
add
jb
mov
in
daa
movb
test
sbb
mov
pop
inc
sub
loopne
jmp
adc
mov
xchg
hlt
mov
xor
cmp
imul
lea
insb
fwait
add
jge
push
and
neg
insl
fsubrl
jg
xor
xor
xor
mov
leave
clc
lea
lods
insb
jecxz
rolb
or
pusha
mov
js
jbe
and
mov
jg
pop
pop
xor
push
cmpb
xchg
push
inc
outsb
mov
mov
mov
pop
gs
mov
sub
adc
test
aaa
je
inc
stos
sub
jp
dec
sub
mov
fisubrl
cmc
into
sbb
ret
test
xor
jmp
outsl
mov
int
test
pop
rcrl
or
rorb
ret
jns
inc
cli
test
fwait
pop
ret
int
dec
rorb
pop
xor
inc
cmp
jne
adc
mov
mov
jae
add
call
pop
lods
mov
push
mov
jo
adc
xor
sbb
rcrl
pop
and
mov
out
nop
mov
or
ret
lock
addr16
out
mov
mov
cmp
push
lcall
cmp
jbe
bound
and
or
dec
mov
sub
je
sbb
sbb
jno
sub
iret
mov
icebp
mov
add
and
push
jp
rclb
data16
xchg
rol
andl
cli
mov
adc
jp
rorb
or
lret
test
scas
push
stos
dec
sbb
pop
out
fidivl
das
fidivrs
cmp
divps
cmp
jg
inc
popa
test
dec
add
dec
adc
stc
sbb
divl
aad
cmp
dec
fdivl
cwtl
outsl
sbb
jbe
and
xadd
aad
mov
mov
cmp
fsubs
stc
fadds
mov
xchg
pop
inc
fildll
pop
add
mov
lcall
xchg
sub
mov
push
aas
rolb
lock
fwait
xchg
int
cmpb
outsl
sbb
jl
adc
sub
pop
mov
fimull
sbb
or
jo
mov
or
add
ds
ss
mov
adc
xchg
push
leave
je
pop
loopne
test
push
mov
push
jp
inc
push
mov
out
or
dec
movsb
mov
stos
outsl
mov
mov
jg
cli
addr16
pop
pop
sbb
add
rorb
imul
pop
jns
mov
gs
insb
jne
sub
rorl
lock
jl
aaa
stos
neg
cmp
ljmp
jae
push
or
cmc
loopne
fst
out
dec
cltd
xor
add
andb
push
and
xchg
call
cmpl
aas
inc
mov
mov
das
inc
xchg
jne
shl
iret
or
scas
xor
adc
pop
fisubl
pop
sbb
and
inc
adc
sahf
call
push
mov
sahf
ret
ss
lret
into
outsl
add
jge
insb
hlt
clc
insl
adc
jp
mov
jg
and
inc
jns
add
sub
xchg
dec
bt
popa
fs
or
pushf
pop
mov
xor
divl
out
add
fildll
inc
mov
lods
lods
adc
fsubs
shr
lds
sbb
rcl
sbbl
sbb
and
test
cmp
jmp
pop
jo
in
push
or
xchg
xchg
mov
fs
aaa
or
shrb
or
cmp
clc
lret
and
fimuls
mov
or
insb
fists
or
cmp
leave
incl
aam
or
or
mov
ja
enter
das
mov
push
rclb
rorb
je
jne
test
push
jl
inc
pop
and
mov
fcomps
in
sbb
or
ljmp
sub
outsb
add
push
fwait
lods
movl
push
into
pop
ds
loope
sbb
ret
cmp
ficompl
sbbb
mov
int3
loopne
and
cmp
push
fdiv
test
lret
push
mov
stos
lods
imul
test
xchg
xchg
xlat
pusha
sub
mov
rep
sub
popa
icebp
std
bound
imul
scas
inc
xchg
sub
sub
jnp
dec
data16
test
mov
ficoml
loop
or
pop
mov
icebp
outsl
ss
pop
enter
push
xor
cmp
and
js
fdivrs
mov
inc
mov
jecxz
hlt
add
pop
sti
sbb
add
int3
scas
add
xchg
js
cmpl
testl
aas
hlt
scas
add
jmp
outsl
adc
popf
lea
ret
pop
jmp
das
push
mov
lahf
mov
fdivrl
roll
mov
xor
mov
pop
dec
pop
or
mull
pop
adc
icebp
fildll
pusha
lcall
push
call
std
loopne
mov
push
cmc
push
jg
das
xchg
shl
or
mov
ret
mov
js,pn
lds
popf
repz
push
xchg
lods
jle
lea
cld
call
arpl
pushf
adc
call
lcall
xlat
aaa
jbe
pop
dec
pop
cmpsb
pop
movsb
push
inc
in
repnz
ss
loopne
int3
ret
add
je
pop
pop
movsl
and
xchg
mov
pop
arpl
inc
inc
dec
sbb
inc
shll
push
fistpl
in
or
loop
dec
movsl
mov
je
das
push
xchg
inc
and
das
xor
call
jne
xchg
jns
push
shrb
pop
in
lods
dec
jbe
popa
jnp
mov
test
sbb
dec
jo
movsl
or
sahf
ret
ss
int3
push
push
and
lock
push
out
sbbl
cmp
jbe
loop
dec
mov
xor
mov
sub
insl
push
jge
fdivs
jnp
xchg
movsb
insb
ja
push
xor
std
xchg
sub
and
jbe
sbb
int
outsb
cmp
xor
gs
repnz
add
lret
rol
cmp
cmp
aam
jne
daa
push
add
mov
call
cmp
ret
jl
pop
mov
mov
and
test
loopne
rorl
imul
or
aaa
jne
orl
pop
sbb
push
in
fisubl
adc
sbb
sbb
cli
mov
or
sub
ficoms
jno
sub
mov
pop
push
add
leave
int
or
jb
andb
gs
pop
mulb
dec
fbstp
cmpsl
pushf
stc
sbb
pop
pop
add
insl
data16
lock
in
or
mov
fstpl
cmp
push
push
xchg
aas
xor
out
jle
insl
mov
in
subb
mov
push
and
je
dec
imul
imul
js
push
mov
insl
call
push
mov
daa
mov
mov
sbb
fisubrl
jge
imul
dec
pop
add
mov
xor
inc
mov
pop
imul
adcb
int
pop
push
inc
and
push
ss
jg
inc
dec
lock
xchg
in
and
push
dec
mov
mov
xchg
in
scas
pop
mov
push
jb
movsl
mov
rol
fnsave
sub
lods
ja
cld
jg
sub
push
aaa
les
sub
loop
and
xor
sbb
xor
add
sbb
push
cli
push
lahf
js
flds
mov
cmp
das
push
add
aaa
jge
out
out
push
or
daa
cmp
loopne
lds
sbb
push
jle
jno
xchg
or
pop
cld
mov
add
popa
xor
fsubrp
mov
and
cmp
les
mov
or
hlt
or
cmpb
aaa
ficoms
loope
aas
pop
sub
call
xchg
js
cmp
ljmp
adc
push
ljmp
int3
jbe
ret
xchg
stos
mov
ja
add
jb
mov
xchg
mov
outsb
cmp
scas
inc
xor
or
inc
inc
adc
xor
mov
cmc
push
lret
xor
std
sub
jp
sbb
xor
pop
dec
xor
push
jg
sbb
push
mov
mov
in
mov
mov
clc
in
mov
or
out
xor
mov
call
fiaddl
add
out
inc
mov
inc
xor
jg
xchg
stos
repnz
icebp
mov
lret
outsl
lods
movsl
inc
sbb
jne
pop
sarb
pop
mov
or
hlt
andb
das
pop
sub
ss
icebp
push
loop
cld
ret
sub
shlb
inc
inc
test
mov
mov
fildl
mov
mov
dec
out
jnp
jo
xor
inc
xchg
inc
adc
push
pusha
sub
pop
out
test
sub
mov
imulb
ret
or
stos
inc
xchg
cmp
mov
in
in
pop
lock
mov
fisttpll
mov
sub
and
and
add
das
es
mov
inc
je
mov
cmp
aaa
mov
mov
mov
sahf
insb
cmp
negb
inc
sahf
fcoms
add
pop
inc
and
or
je
sarb
int3
out
aam
icebp
ficompl
fimull
pop
add
inc
negl
and
add
enter
jne
subb
xorb
roll
mov
dec
lock
mov
cld
cmp
hlt
in
cmc
sub
bound
call
mov
adc
scas
jge
lods
test
xor
js
pop
mov
push
test
add
adc
es
pop
inc
cmp
rorb
insl
mov
cmp
pop
bound
out
sub
int
pop
insl
mov
lahf
or
push
mov
fldenv
cs
loop
ljmp
addr16
add
mov
arpl
fwait
test
test
cld
jp
xlat
mov
out
imul
mov
sub
stos
push
cwtl
inc
lcall
jbe
cmpsb
adc
mov
mov
push
adc
ljmp
jae
je
aas
cmpb
or
notb
push
add
sbb
jne
adc
adc
stc
xchg
fs
push
popf
dec
xchg
xchg
jb
dec
add
inc
cmpsl
mov
jle
push
sub
lock
or
in
add
out
cmp
pop
test
push
fwait
je
fldt
cmp
push
and
mov
shlb
sbb
je
aad
shlb
xchg
mov
mov
addb
add
sub
jo
jmp
sbb
andl
sahf
pop
pop
jle
sar
aas
xchg
loopne
inc
adc
pop
icebp
lods
dec
lret
jp
or
and
push
mov
jae
xchg
or
in
fldl
and
xchg
roll
mov
sbb
xlat
imul
fadd
mov
popa
push
or
rolb
sbb
shlb
mov
inc
call
push
inc
mov
mov
into
add
int
cwtl
mov
pop
imul
daa
sarl
insl
adc
fstps
cmp
fdivrs
les
adc
ds
cmp
ret
test
stos
mov
xchg
mov
and
in
jo
js
add
jns
cs
or
push
mov
adc
ret
dec
cmova
ret
cmpsl
push
sbb
cmp
dec
xchg
xchg
fwait
lock
jnp
es
add
daa
lahf
sbb
sti
xchg
mov
push
mov
mov
push
mov
add
outsl
push
jno
jp
scas
pop
jmp
mov
cmp
and
adc
push
sbb
insb
or
inc
mov
les
xchg
adc
inc
call
ljmp
sub
adc
dec
jp
mov
xchg
enter
dec
decl
cld
mov
fdivs
pop
mov
xor
iret
es
fidivs
sub
xor
add
aas
jge
cs
les
pop
clc
sub
jl
ja
push
push
or
addb
xchg
popa
movsl
stos
mov
mov
loope
or
xchg
mov
add
xorl
mov
repz
push
mov
jbe
daa
jg
divb
or
filds
shlb
sub
pop
xchg
aaa
movl
iret
andl
inc
mov
or
dec
mov
mov
push
movsl
mov
movsb
andb
jns
aam
mov
popa
fcmovnu
jno
ds
int
adc
pop
xor
inc
jae
ja
pop
xor
adc
cwtl
inc
iret
ss
jo
adcl
xlat
shrb
mov
sub
adc
ret
ljmp
movsl
jbe
pusha
loope
pusha
cmpsl
push
mov
shrl
xchg
pop
cmpsl
daa
pop
in
lahf
or
mov
xchg
jmp
jbe
push
cmpsl
cs
das
in
xlat
inc
jb
dec
int
lcall
and
jb
mov
fwait
cs
and
push
dec
cli
cmpsl
mov
pop
xchg
imul
cmp
xlat
jbe
mov
in
jb
mov
mov
mov
xchg
xchg
test
ret
push
inc
jnp
mov
sbb
cmp
pop
dec
mov
add
push
add
test
je
outsb
sti
cltd
mov
popf
pusha
mov
and
xor
jb
xor
mov
mov
outsl
sbb
push
addr16
mov
mov
or
int
sub
sub
jae
iret
rcl
testb
hlt
mov
jmp
jle
ja
stc
shll
mov
dec
out
out
mov
in
dec
cmp
pop
mov
push
add
ljmp
fildl
outsl
rcrl
movl
imul
rol
fldl
imul
sahf
test
mov
data16
subb
sbb
fsubrp
push
mov
xchg
jae
out
inc
pop
cmp
dec
push
imul
cmc
out
add
mov
xchg
cmp
fisubrs
out
repz
push
pop
test
lock
add
fisubrl
inc
cmpsl
inc
xor
xor
pusha
shrb
shll
pop
add
mov
mov
out
mov
sub
add
dec
nop
cmp
push
bound
mov
xchg
lret
loope
cld
pop
inc
inc
sub
fimull
mov
inc
sbb
cmc
xor
bound
aam
fisubrl
cld
test
test
xor
shrb
inc
cmpsl
daa
jge
ficoms
add
xchg
adc
inc
mov
hlt
cmp
or
insl
arpl
inc
fldt
xor
ss
iret
ror
popl
rcl
and
mov
in
push
lods
and
std
pop
mov
sub
cltd
pop
xor
cmc
cs
ss
mov
jmp
fidivrs
mov
mov
adc
outsl
jle
sbb
sub
mov
hlt
pop
int
test
cmp
jbe
fdivrp
imul
adc
into
push
inc
lret
cmp
aaa
ja
les
mov
jle
test
inc
clc
mov
jge
add
jge
dec
mov
mov
xlat
cmp
pop
popf
mov
mov
stos
jbe
lea
insl
cmpb
mov
mov
in
push
bound
and
dec
divb
mov
arpl
lods
in
cmpb
test
or
sub
jl
ds
add
mov
xchg
inc
sub
dec
inc
es
cmc
jle
cld
stos
inc
es
inc
or
aad
subl
movsb
int3
push
push
mov
or
out
adc
int3
xchg
sbb
insl
push
lods
lock
lock
sub
jmp
sbb
fildl
shlb
das
mov
fldt
shr
jo
and
mov
ret
mov
mov
idivb
xor
incb
repnz
jne
pusha
ds
outsl
inc
sbb
sbb
mov
xor
lock
add
dec
call
adc
xor
sar
or
hlt
inc
dec
push
or
lds
test
in
cld
data16
negb
push
mov
sbb
and
fldl
pop
lcall
pop
out
mov
jecxz
imul
ss
jo
out
nop
and
inc
pop
pop
ljmp
jle
and
inc
sahf
adc
lds
jno
cmp
mov
je
insl
push
mov
shrb
push
mov
fstpt
in
xor
call
pop
out
das
mov
aam
sub
out
jmp
mov
push
cld
pop
fdivrs
mov
jle
imul
pop
xchg
jle
sti
or
ficoml
mov
test
call
and
mov
ret
insb
push
lock
push
inc
and
call
xchg
fcoms
fnstsw
jo
rorb
jo
pop
sbb
mov
or
stos
out
add
je
mov
aad
call
sti
cmp
add
sub
fnstcw
hlt
jb
dec
or
icebp
ret
movsl
push
daa
cli
sub
mov
fs
mov
fisttps
fs
cmp
outsb
rorb
jmp
repnz
mov
cwtl
lret
outsl
pop
in
pop
dec
sbb
call
mov
aas
in
mov
cld
or
adc
pop
sub
call
mov
mov
das
inc
sub
and
xchg
add
cmp
push
xor
dec
lods
dec
cmp
sub
and
sub
sub
jno
cmpsb
mov
mov
fstpt
aad
jecxz
and
inc
insb
shr
xor
pop
mov
adc
aam
pop
mov
fwait
or
pop
insb
mov
mov
jge
testl
xlat
clc
cmpsb
pop
test
roll
daa
adc
jle
sbb
jno
xchg
nop
fimull
aaa
or
test
jns
fmuls
mov
jae
dec
aad
pop
imul
inc
inc
inc
rcll
je
push
xchg
mov
mov
mov
test
clc
pop
insl
xchg
outsl
inc
sub
test
enter
mov
lods
jne
mov
push
inc
rol
sti
or
sub
sbbl
push
cmc
mov
in
mov
inc
stos
add
or
dec
mov
sbb
lods
and
xchg
jl
mov
stos
sbb
adc
in
fisubl
fwait
adc
call
inc
fisttpl
out
cmpl
pop
mov
push
outsb
mov
pop
or
sbb
js
push
and
cmp
jg
test
cwtl
dec
jae
xor
roll
mov
jne
mov
int
scas
mov
in
arpl
jle
add
ja
cmc
sti
mov
rorb
sub
mov
dec
inc
lods
in
movsb
movsb
and
pop
adcl
push
fadds
sub
call
xor
jo
icebp
mov
sysret
push
fwait
pop
daa
movsb
movb
icebp
mov
leave
das
js
std
xlat
cmpsb
jp
ljmp
cmc
call
enter
jb
mull
cmp
inc
push
fwait
xchg
dec
xchg
mov
lds
fs
mov
adc
jbe
jp
jns
push
or
das
lret
ja
insl
fildll
rolb
movsl
push
insb
xchg
sub
xor
lret
cmpsb
fsubrl
bound
scas
cmp
cli
daa
ss
xchg
aam
dec
cwtl
mov
push
jbe
rclb
in
outsl
test
or
ret
in
dec
sbb
fdivp
rolb
xor
push
and
mov
cld
xchg
das
andl
jg
push
mov
mov
jmp
fs
add
xor
adc
xor
and
sub
jne
outsb
popl
xchg
call
ja
sub
inc
mov
pusha
inc
popf
lret
mov
cmc
sub
nop
shlb
push
test
cli
dec
rorl
push
push
popl
jle
cmpsl
or
lret
xor
lds
mov
sbb
mov
add
in
sub
cwtl
insl
sti
mov
test
test
xchg
lds
mov
sahf
mov
mov
fidivrl
insl
dec
and
xchg
xchg
leave
in
and
sahf
mov
sbb
cmp
mov
fwait
dec
mov
xchg
cmpb
roll
xor
fildll
fildll
enter
loop
jns
inc
shrl
jecxz
lds
jnp
movsl
arpl
movsb
inc
add
inc
mov
stc
xorl
cmc
loop
xor
xor
pop
pushf
popa
lret
mov
aam
insl
test
pop
shr
mov
add
outsb
mov
or
movsl
jb
ljmp
mov
scas
jg
subl
ljmp
adc
ljmp
or
fwait
mov
arpl
push
fsubrs
push
loop
mov
stos
pop
ffree
movsb
lahf
xchg
js
shlb
ficoml
rorb
pusha
mov
cli
mov
add
mov
pusha
jmp
push
ret
call
fstps
mov
push
sub
inc
aas
add
jnp
and
or
clc
cmpsb
lahf
mov
jecxz
sbb
out
je
inc
mov
test
xor
icebp
push
aas
jl
xor
sar
xor
or
xchg
sub
mov
js
cmpsb
imul
cwtl
hlt
pop
mov
sub
in
cmp
movsb
dec
loopne
xchg
inc
pop
xlat
pop
mov
sti
push
fistps
insb
dec
nop
std
dec
scas
xor
cmp
xchg
pushf
mov
fwait
jecxz
lcall
stos
mov
fcoms
fs
xchg
arpl
pop
aam
push
mov
imul
cwtl
jle
xor
pop
adc
pop
out
pop
popa
imul
fsts
outsl
add
xchg
scas
ss
mov
loopne
pop
fbstp
xchg
je
pop
sub
pop
add
adc
in
fstpt
test
fsubrl
push
mov
or
icebp
adc
pop
inc
sub
imul
xchg
xor
mov
xchg
mov
xchg
sbb
testl
mov
push
rcr
or
out
push
mov
cmp
shll
fisubrl
shl
hlt
lds
test
mov
sahf
ret
punpckldq
adc
pop
mov
pushf
mov
dec
jne
add
dec
ss
cmp
lock
or
stos
data16
push
lods
mov
ret
adcl
and
add
xchg
adc
pop
aam
icebp
fcomi
stc
repz
fdivl
dec
lahf
enter
xlat
cmp
push
addl
xor
ljmp
aas
xchg
jbe
mov
or
inc
ds
mov
adc
insl
and
xchg
je
data16
mov
inc
pop
xchg
fdivs
xor
insl
jnp
pushf
fdivr
lea
xchg
pushf
pop
mov
mov
adc
stc
test
cmovge
scas
dec
ret
mov
cmp
insl
mov
ljmp
div
jnp
mov
imul
ret
pop
inc
jl
mov
rolb
cmp
xor
ja
cmp
jp
mov
add
in
mov
or
jmp
xchg
into
cmc
adc
shrb
push
sub
xchg
mov
bound
dec
jl
mov
xchg
addr16
add
repnz
xorb
clc
notb
sub
or
dec
mov
pusha
fdivl
or
test
cmp
cmp
push
pop
rorl
mov
roll
xchg
push
fwait
push
jo
fwait
js
fisubrl
andl
mov
jne
outsb
insb
mov
rorl
sbb
lret
js
and
and
sbb
push
mov
push
cmc
roll
sub
mov
in
xchg
jg
cmp
jge
push
scas
imul
lret
adc
jl
inc
mov
mov
ret
iret
rcr
lea
fwait
test
test
lcall
stc
pop
loopne
out
xchg
daa
add
and
mov
ret
xor
imul
mov
repnz
into
mov
xchg
aaa
dec
dec
mov
add
or
bound
lret
dec
adc
mov
xor
adcl
cmp
fwait
shll
xlat
js
mov
out
jmp
scas
cmc
or
mov
fs
sbb
xor
aaa
dec
iret
add
mov
lods
push
loopne
cmc
aam
sarl
icebp
insb
rcrl
push
dec
iret
stc
in
fistps
push
mov
adc
push
push
dec
js
pop
cmc
lea
clc
fsubs
jge
xor
add
rcrl
pop
xchg
jno
orb
sub
sbbb
imul
jb
push
mov
fistpll
daa
mov
scas
notb
xchg
daa
push
js
jns
mov
mov
and
mov
dec
jns
es
push
xor
mov
in
lea
loopne
add
in
push
mov
mov
mov
enter
sbb
mov
shll
popf
and
das
pop
jne
xor
mov
mov
xchg
mov
dec
rcrb
out
test
mov
mov
cmp
int
or
in
lods
and
dec
push
dec
mov
or
mov
lret
iret
ljmp
rcl
push
dec
dec
adc
push
es
jp
sub
dec
pusha
mov
clc
add
mov
mov
add
jb
cmpsl
enter
pop
out
mov
ffree
adc
push
adc
pop
sub
imul
int3
popa
mov
cmp
xchg
inc
sbb
shlb
xchg
xchg
and
cli
scas
mov
mov
xchg
mov
notb
insl
dec
sbb
mov
add
lods
pop
clc
jmp
daa
lock
pop
mov
sub
andl
fstpl
icebp
fwait
pop
mov
lds
je
movsl
es
dec
in
and
cmp
fstpl
pop
dec
xor
add
insl
mov
and
stos
inc
sbb
fcoml
mov
test
bound
nop
dec
sbb
xlat
pop
out
cmp
push
loopne
es
mov
dec
lahf
cli
out
ljmp
aad
pop
mov
pop
nop
pop
push
lret
insb
fstp
test
popa
and
sbb
or
push
mov
pushaw
loope
loop
adc
and
mov
sub
add
sub
repz
xlat
scas
pop
fisubs
jecxz
adcb
in
cmpsl
jbe
adc
xor
outsb
sub
sbb
je
jle
sbb
dec
inc
push
faddl
out
mov
xchg
pop
inc
mov
sahf
ja
cld
iret
mov
adc
sub
negl
sbb
or
xchg
aaa
rcl
fnstsw
shrl
jae
mov
cltd
fimull
loop
ret
sti
sub
mov
dec
inc
data16
cmp
jb
es
jne
scas
or
inc
xchg
mov
add
adc
push
cltd
cli
ret
roll
mov
pusha
inc
mov
dec
mov
pushf
je
mov
xchg
imul
or
addl
insl
shlb
push
std
jecxz
cmc
shll
inc
pop
shl
jle
popf
lods
nop
mov
mov
fsubp
das
sub
test
dec
mov
pop
dec
andb
fnstsw
dec
cmp
mov
cmovg
add
out
push
sub
test
jecxz
jle
inc
jmp
mov
pop
mov
divb
imul
or
lods
movsl
pop
mov
adc
sub
shrl
inc
and
loopne
push
jecxz
fidivrs
out
jae
push
dec
or
push
fnsave
mov
das
fdivrl
test
ss
jno
roll
js
imul
shll
xchg
stos
cmp
pop
or
daa
mov
mov
ret
mov
sbb
dec
data16
shlb
mov
adc
sub
paddusb
push
rcrl
sbb
cmp
jge,pt
mov
not
loop
sbb
add
mov
or
pop
mov
xchg
jg
lahf
or
movsb
sub
ljmp
addr16
pop
je
loopne
fistl
adc
addr16
pop
cld
ljmp
pop
pushf
les
add
add
outsl
stos
rorb
jne
inc
mov
stos
xchg
mov
pop
call
add
cmpb
xor
in
rorl
xchg
out
out
mov
fdivr
dec
es
cmp
sbb
xor
push
js
push
and
dec
popf
jmp
pop
and
jns
or
mov
out
movsl
lcall
xchg
decb
or
and
mov
inc
push
mov
pop
rcll
rol
out
jg
insb
sub
call
mov
cltd
pusha
or
mov
negb
std
push
mov
adc
sbb
add
test
in
loop
aad
cmpsb
sbb
in
mov
and
jle
mov
rorl
lods
and
jbe
xor
inc
std
ljmp
mov
stc
dec
xor
or
sbb
call
jo
cwtl
test
das
mov
scas
add
mov
adc
adc
mov
addr16
fisttpl
movsl
fildl
rcl
mov
mov
mov
sub
mov
fistps
mov
js
mov
adc
jp
add
in
pop
mov
xor
pop
inc
fcomip
pop
jl
jmp
pop
cmp
scas
xchg
jno
or
imul
cmp
pusha
mov
jg
hlt
in
stc
imul
adc
jge
in
clc
sbb
imul
das
stos
cmp
lods
mov
outsl
pop
ud0
clc
push
xchg
cmp
pop
dec
test
inc
lea
bound
gs
xchg
jne
xchg
sbb
dec
jnp
pop
push
je
fists
hlt
ja
sbb
cmp
fcomps
push
mov
mov
mov
int
or
add
cmp
ljmp
pop
cmc
out
outsb
mov
pusha
pop
fildl
shrl
mov
mov
xchg
cmp
call
xor
ds
xchg
ds
push
mov
jno
cmpsl
cmpsb
pop
push
jbe
shrl
outsb
cmova
pop
ret
loop
mov
hlt
test
aad
xor
ret
or
loop
out
stos
inc
inc
stos
push
iret
in
rcrl
add
or
imul
decl
push
fidivs
xchg
mov
sub
inc
fistps
mov
in
xor
stc
push
mov
in
mov
pusha
pop
cmp
jmp
push
loop,pt
xchg
xchg
iret
push
movsl
clc
je
call
sub
test
enter
lcall
pmaxsw
xor
mov
pop
mov
push
mov
jle
ror
mov
add
cmp
cmpb
les
jmp
cmp
jg
mov
xchg
xor
jo
jbe
xor
cs
inc
js
ret
iret
iret
pop
ret
cmp
pop
mov
dec
mov
add
mov
fucomip
pusha
aaa
mov
ss
sub
mov
dec
cmp
dec
jl
ljmp
test
pop
mov
sub
jp
jp
jmp
inc
push
mov
fildll
xor
aam
mov
xchg
rorl
jo
mov
sbb
sqrtps
xchg
dec
adc
dec
dec
xchg
mov
es
jge
outsl
scas
or
dec
test
and
jns
mov
jo
sub
das
das
jge
arpl
or
pop
jecxz
jecxz
lods
loope
sbb
pop
ret
cmp
and
or
adc
push
or
es
or
les
loope
xor
pop
jo
cmpsl
push
mov
jmp
sub
sbb
jge
jmp
push
cli
sub
icebp
aas
add
aam
cmpsl
aam
mov
inc
push
hlt
add
pushf
lcall
jg
sub
jns
mov
sbb
out
pop
dec
pop
out
imul
sahf
mov
pop
adc
sub
ss
cltd
jmp
popa
mov
icebp
mov
sbb
je
jae
es
or
mov
scas
sbb
scas
cwtl
jns
int
shrb
out
mov
and
xchg
mov
push
or
decb
incb
mov
dec
scas
iret
and
add
jo
xor
mov
test
xlat
repnz
rol
adc
sub
fnstenv
adc
and
cmpl
add
or
aam
xchg
mov
ficoml
xchg
inc
inc
arpl
push
and
mov
loopne
and
dec
dec
add
xor
jb
movsl
push
bound
repnz
or
cmp
jbe
jns
lods
and
jmp
add
push
cltd
dec
clc
out
gs
push
roll
cld
ljmp
xchg
fcompl
hlt
aam
add
jo
cwtl
pop
and
aam
outsb
cld
adc
or
dec
cmp
dec
dec
pop
add
fdivl
xchg
jge
fwait
outsb
sahf
adc
js
inc
leave
mov
mov
pop
or
je
mov
pop
clc
fists
or
nop
ljmp
arpl
addb
mov
cmpsb
sbb
paddsb
sub
adc
ljmp
scas
fdivr
lcall
fwait
xchg
orb
jns
int
movsb
cmp
push
jb
std
je
int
mov
mov
outsb
loop
and
xor
or
dec
js
xchg
pushl
fs
cmpsb
cltd
sub
dec
scas
daa
sbb
xor
push
push
arpl
push
jle
ret
inc
jg
jb
ror
or
mov
add
enter
push
lock
pop
or
xchg
pusha
xor
fidivl
fstpt
les
lods
jae
mov
inc
lret
push
shl
inc
jb
stos
ja
inc
xor
xor
and
aam
push
aam
dec
mov
pop
sbb
dec
in
mov
lret
pusha
mov
inc
sbb
imulb
mov
inc
cli
mov
loop
push
pop
cltd
mov
incb
cmp
in
notl
xlat
lds
repnz
inc
das
mov
mov
rcl
xorb
cmp
push
pop
jnp
push
test
cli
push
fsubr
cmpsl
add
adc
addl
mov
sub
mov
subb
clc
cwtl
xchg
int3
dec
bound
out
loop
inc
sub
jb
decl
scas
pop
aam
push
jl
imul
ljmp
ljmp
loope
pop
dec
hlt
sub
lea
dec
inc
rclb
xchg
mov
hlt
xchg
jl
lahf
jmp
call
xor
mov
cmc
mov
jp
push
in
loop
and
jle
lcall
cmpsl
jge
nop
insl
pop
push
cli
inc
cmp
arpl
jl
sub
push
add
sbb
in
das
inc
pop
scas
sbb
icebp
pop
scas
mov
dec
ja
jb
dec
lret
push
std
in
or
dec
lds
in
mov
pop
mov
adc
sbb
test
movsl
sbb
inc
push
xor
inc
xchg
test
daa
js
push
mov
testb
xchg
pushf
pop
mov
loopne
lods
pop
decb
inc
and
mov
inc
and
push
sahf
sahf
jp
cmpsb
insb
daa
repz
cmc
cmpsl
mov
andb
mov
stos
or
andl
adc
lods
push
add
and
push
roll
or
andb
cmp
scas
or
adc
sbb
push
andb
jg
sub
imulb
out
or
rolw
push
das
out
fisttpl
push
stos
xchg
mov
loopne
aaa
inc
xor
add
ret
rol
jae
shrl
add
jg
outsb
pop
pop
add
push
jns
imul
bound
into
or
ret
scas
out
inc
aam
dec
push
pop
mov
xchg
push
push
or
xchg
jl
mov
mov
mov
mov
jp
add
cmp
mov
jl
and
inc
push
lea
add
mov
inc
cmpsl
xchg
pop
pop
cmp
add
pushf
loop
sbb
pushf
loop
xchg
ret
push
jbe
jg
je
fadds
loopne
push
xchg
loopne
mov
iret
add
insb
test
sbb
dec
sbb
in
xor
xor
or
scas
roll
stos
insb
movsl
or
mov
ljmp
sbb
dec
hlt
je
sbb
or
divb
jno
sbb
in
xor
sbb
in
and
ja
popa
add
adc
loopne
shlb
enter
fdivrp
or
cmc
xorl
mov
and
mov
pop
iret
dec
sti
ret
jbe
or
xor
out
mov
jle
mov
das
outsl
scas
mov
fildll
inc
outsb
mov
dec
test
inc
nop
xor
dec
fildl
adc
inc
xor
in
push
icebp
and
dec
call
out
sarl
scas
cltd
sbb
sub
idivb
fistl
out
shl
dec
or
js
or
jns
add
inc
ljmp
jle
orl
adc
or
dec
pusha
jmp
fidivrs
lock
mov
xchg
es
into
cltd
rclb
pop
or
in
stos
pop
xchg
push
rcrb
scas
cmp
shlb
ret
sub
xor
jmp
jmp
fsubrl
rcll
data16
cmp
cmp
add
push
sbb
fdivrs
add
fbld
xor
cmp
mov
cmpsl
jp
xor
movsl
rorl
sub
imul
aaa
xchg
mov
xchg
xchg
pushf
mov
test
push
jmp
aam
mov
into
adc
mov
sbb
ret
jae
add
inc
ja
aam
sbb
or
ja
jo
mov
pop
not
enter
push
mov
adc
sbbl
ret
int3
cmpsl
push
into
out
mov
mov
mov
adc
fisubs
pop
aaa
xchg
xchg
stc
and
sub
mov
xchg
fiaddl
shl
push
and
cwtl
outsb
mov
and
dec
inc
data16
ljmp
and
jns
cmpsb
xor
add
sub
cli
insl
jmp
aas
test
rcl
pop
mov
outsb
les
xchg
add
cltd
cs
pop
xchg
mov
push
int
inc
stos
and
mov
pop
nop
or
addl
mov
scas
pop
sub
pop
pop
sub
iret
call
pop
and
repnz
pop
dec
inc
add
js
insl
in
movsl
enter
jo
and
dec
inc
jmp
add
test
flds
lds
jecxz
push
pop
inc
adc
and
mov
mov
dec
in
jp
jne
sbb
xchg
ss
jno
mov
cld
stos
mov
jne
add
movsl
rolb
loop
aas
jne
add
in
mov
dec
add
jmp
daa
ljmp
lret
fimull
std
cmp
or
add
or
dec
mov
mul
pop
fistps
mov
push
mov
lock
inc
adc
mov
cmpsl
fwait
xor
xor
pop
add
orl
xor
insl
sbb
ss
lcall
js
int3
sub
ss
rcll
xor
ljmp
inc
and
jbe
sbb
icebp
scas
jge
inc
mov
push
ljmp
out
push
add
mov
mov
pop
jae
add
sahf
push
jne
mov
pushf
loopne
decb
jp
in
xchg
pop
daa
mov
dec
test
scas
xorb
adc
lds
xchg
mov
lcall
daa
and
adc
mull
orl
sbb
inc
xchg
fldt
mov
aaa
loopne
add
lcall
push
fists
sub
shlb
push
into
ljmp
fisttpl
push
icebp
pop
and
dec
adc
push
sarb
push
testb
dec
test
in
mov
loopne
xlat
cmpb
xor
sbb
mov
mov
adc
pusha
jp
sbb
mov
pushf
ficompl
bound
jle
imul
xor
fidivl
lock
push
xor
sbb
adc
xchg
sbb
leave
rolb
insl
inc
cmp
cmc
aad
js
or
cmp
cld
shrb
xchg
rcll
out
or
add
outsb
fistpll
xchg
xchg
sub
shr
pop
jne
rclb
es
in
fbstp
and
xor
or
mov
pushl
jle
inc
mov
or
and
in
sub
rorl
repz
and
cmp
divb
jns
sub
aad
sub
aam
outsl
shrl
pop
cmpsb
daa
xchg
jge
fstpt
mov
cmc
data16
in
add
cmp
dec
jb
xor
test
out
pop
add
sub
stos
in
adcl
add
mov
std
and
out
stos
lret
sarl
ds
das
out
jge
fwait
clc
mov
sub
mov
pop
pop
sub
push
inc
cmpsl
retw
sbbb
ror
inc
in
jmp
sub
ret
or
pushl
or
pusha
xor
test
mov
jbe
cmp
imul
cmpsl
or
leave
xchg
xor
inc
or
repz
jbe
aam
mov
cmp
pop
xlat
push
ljmp
add
cmp
xlat
out
add
popa
inc
cmp
popf
and
push
aas
out
nop
outsb
ffreep
mov
fdivs
pop
push
outsb
je
popf
pop
jmp
xor
adc
out
dec
xorb
sbb
in
push
mov
in
push
arpl
push
or
popf
inc
lcall
mov
xor
mov
mov
fimuls
daa
sub
mov
sar
movsl
or
sbb
sbb
adc
and
iret
inc
lds
fadds
fcoms
or
dec
insb
aaa
lcall
movsl
cmpsl
mov
stos
jmp
mov
cmpsb
cmp
das
lret
ss
sub
or
pushf
lods
insl
jnp
xchg
repz
shll
cltd
pop
add
bound
inc
mov
xchg
dec
notb
addb
pop
call
push
pop
mov
sbb
sub
mov
adc
je
and
or
fldl
push
sbb
rcl
dec
loopne
cmp
imul
pop
sbb
mov
mov
push
fisttpl
shr
popfw
fwait
xor
outsb
mov
pop
insl
sub
push
lahf
popa
and
les
mov
inc
cmp
stc
lds
hlt
mov
sub
andl
dec
insl
cli
adc
in
mov
xchg
das
jle
adc
insb
loopne
sbb
push
stos
pop
mov
loope
inc
imul
nop
js
push
inc
mov
aad
jecxz
dec
pop
push
push
fsub
repnz
mov
roll
and
adc
enter
cld
inc
in
adc
iret
fcoms
in
inc
adc
and
ret
mulb
push
faddp
add
xor
fcoml
in
orb
dec
icebp
hlt
shll
and
imul
cmp
add
lods
pop
xchg
movsl
lods
test
addl
into
push
dec
ret
push
icebp
rol
or
popa
adc
cli
sbb
and
jg
push
and
rolb
inc
pushf
sahf
add
dec
mov
and
adc
xlat
mov
sar
mov
or
add
mov
cmp
loope
lret
movsb
inc
ret
mov
mov
and
dec
lock
dec
xor
cld
stos
in
sbb
sysenter
aad
stos
or
sbb
jle
not
addb
in
xlat
bound
cmpsb
fiadds
inc
call
sti
sbbb
mov
mov
push
xor
xor
jg
and
dec
mov
xor
in
cwtl
adc
arpl
mov
rcr
mov
push
pop
adc
xor
rcr
ret
sbb
xchg
lock
test
fisttpl
lea
xor
pop
movsb
add
jo
mov
fistpll
test
ds
xor
icebp
aas
fwait
sub
sbbb
in
add
cld
lods
jne
mov
push
or
in
pop
push
outsl
mov
enter
push
pop
ret
jne
aas
outsb
push
add
jns
sub
jp
push
xchg
inc
sub
outsl
call
ds
or
cld
pop
sahf
ds
cs
out
or
test
sub
mov
int
in
loopne
mov
cmp
ret
pop
pushf
dec
adc
adc
stos
divb
inc
in
jne
sbb
pop
out
les
push
add
test
add
popf
lods
and
outsl
xor
outsb
mov
pusha
inc
fcoms
std
loop
push
adc
adcb
hlt
inc
mov
xor
dec
mov
mov
rorb
add
cmc
rcrb
inc
xchg
xchg
stc
cmp
inc
ss
sub
imul
inc
popa
arpl
pop
pop
sti
push
daa
lock
mov
sub
loopne
sub
sbb
popf
adc
loopne
adc
outsl
or
lahf
aad
and
lods
xchg
sahf
call
push
pop
sbb
pushf
pop
adc
xchg
inc
js
stos
in
push
xchg
adcb
leave
loope
xor
testl
cltd
pop
and
mov
pop
add
or
pop
cmp
fnstsw
or
xor
gs
rcl
pop
cmpb
cs
js
test
sahf
jnp
pop
mov
shll
rclb
inc
rclb
incl
jbe
add
cmc
cmpl
repz
roll
jp
cmc
add
dec
xor
pop
call
lahf
int
xchg
dec
repz
pusha
test
shrl
insb
xchg
jno
rol
and
jne
dec
dec
stc
add
and
fistpl
mov
aad
inc
mov
push
inc
aad
push
dec
test
sti
loope
xor
out
and
inc
jge
fimull
cld
xor
icebp
ret
clc
mov
aam
in
mov
mov
mov
cli
inc
sbb
sbb
lock
aaa
mov
mov
insb
push
loop
imul
xchg
dec
fwait
ds
xor
push
out
stc
lea
or
lds
pusha
add
push
es
iret
lcall
cwtl
push
xchg
outsl
and
cmp
or
sbb
push
xchg
xchg
addr16
iret
cmp
dec
andb
aaa
cmp
pop
adc
ljmp
jge
lock
xor
fisubrl
aaa
stos
jge
pusha
scas
arpl
xchg
test
pop
adc
pop
das
jl
je
cmp
jbe
pop
out
nop
jmp
cmpb
subb
insb
rorl
mov
or
xor
clc
pop
cld
xchg
and
inc
ja
cmovo
out
insb
cmp
xor
insl
into
fadds
or
sbb
test
rcrb
aam
and
gs
jp
jecxz
cmp
flds
sbb
bound
xor
push
les
mov
adc
pop
aad
jnp
xlat
bnd
adc
rolb
or
jno
xchg
xchg
xchg
mov
insl
mov
mov
sbb
mov
fmuls
lods
and
test
and
movaps
cwtl
mov
int3
addl
imul
imul
mov
scas
xlat
pop
inc
orl
mov
nop
pop
ja
sarl
out
lea
call
pop
filds
xchg
in
loop
sbb
or
dec
mov
mov
leave
mov
xchg
pop
sbb
aad
int3
ror
iret
jg
in
pop
cmp
or
outsl
cld
outsl
std
test
and
addr16
lock
dec
dec
sbb
shr
das
nop
push
inc
mov
jne
es
jge
pop
es
repz
cmp
and
arpl
mov
sbb
mov
xor
orb
jae
xchg
mov
das
insb
or
push
add
sub
out
repz
sahf
ss
out
inc
clc
sbb
std
pop
scas
fdivrl
pushf
icebp
aam
mov
clc
inc
pop
testl
sub
sbb
push
rcrb
push
mov
lahf
test
mov
inc
mov
adc
jge
outsl
ja
add
adc
lods
xchg
mov
sub
pop
loop
jecxz
scas
xor
out
dec
jno
mov
add
int3
sarb
jp
push
add
xchg
ss
pop
ret
vmovsd
dec
and
pop
enter
pop
push
in
dec
mov
shl
jecxz
mov
sub
cmp
sbb
add
mov
cmpsb
xor
push
sbb
add
cmp
imul
popf
fs
jl
pusha
push
jne
sub
mov
aam
or
mov
test
jge
and
and
or
sti
add
push
lret
dec
es
and
orl
shl
mov
loopne
int3
enter
cmc
in
filds
out
addr16
cs
or
sbb
es
or
mov
in
js
mov
push
push
into
loopne
sarl
das
loop
jnp
xchg
push
dec
aam
adc
les
mov
mov
mov
sysenter
mov
enter
lahf
sbb
ret
in
es
cmpsb
addr16
std
add
cmpsb
mov
mov
dec
xchg
data16
sbb
fmull
sbb
ljmp
aas
jl
fldenv
jp
inc
std
out
lds
mov
push
inc
jns
mov
inc
rorb
mov
and
test
es
xchg
or
sar
jg
cmc
inc
xor
inc
mov
in
and
push
orl
xchg
pop
aad
stos
sbb
xor
adc
jnp
xor
jge
push
dec
add
loopne
mov
sub
fcomps
push
adc
sbb
sub
ret
scas
aaa
cmp
enter
pushf
or
incl
mov
mov
ret
loope
ret
lcall
or
adc
jge
push
pop
rorb
cmp
fxch
cmc
inc
jne
enter
xchg
push
pushaw
stc
dec
push
push
out
mov
jno
dec
dec
fdivrs
mov
scas
addr16
mov
ret
inc
in
xchg
push
fwait
nop
and
push
mov
in
insl
pop
dec
mov
test
add
pop
sbb
rcr
clc
push
cmp
xchg
xchg
add
into
imul
out
dec
jl
push
and
stc
add
sbb
incb
or
clc
adc
jmp
add
nop
ljmp
loopne
stc
sub
test
or
push
jg
data16
movsb
sti
sub
mov
outsb
lods
cmovle
inc
fisubrs
mov
insb
test
push
fidivrl
adc
pop
push
cmp
mov
or
test
xchg
fistl
por
fucomi
idivl
inc
mov
mov
fists
js
test
mov
xor
inc
sahf
jns
mov
xchg
cmp
push
lea
in
jae
jl
push
push
jmp
sbb
out
cmp
aaa
push
fcoms
and
inc
or
cmc
je
mov
stos
mov
icebp
testl
aad
mov
jbe
stos
cli
mov
xor
mov
mov
jl
jmp
scas
ds
hlt
insb
mov
mov
fisubs
sub
insl
sub
or
cmp
dec
aam
movsl
cmp
mov
test
inc
xlat
mov
or
cmp
fistpl
sbb
sub
xchg
jae
cmp
or
loop
rcrl
das
mov
sbbb
sar
and
mov
push
add
inc
mov
mov
lcall
test
push
cmpl
push
xchg
push
in
jg
loop
arpl
sub
sahf
lock
stos
jecxz
push
scas
mov
fldl
mov
sbb
adc
mov
mov
andl
xor
cmpsb
nop
aaa
jl
add
nop
seto
dec
mov
outsl
je
jecxz
pop
jmp
push
inc
fmuls
loopne
idivl
shlb
and
idivb
pop
xor
insb
sub
inc
push
scas
adc
mov
movsl
sub
popa
push
lods
or
push
hlt
jl
pop
mov
pop
addr16
loop
jl
pop
jo
in
in
fdivr
out
cli
es
test
aad
fildl
inc
jns
pop
insl
fsubr
sub
xchg
and
movsl
stos
and
in
stc
mov
cmpsb
loop
movsb
xor
lcall
mov
inc
dec
ljmp
mov
test
test
pop
enter
jg
push
xchg
and
xor
cmpsl
es
mov
flds
xchg
sub
push
sub
daa
adc
mov
in
not
xor
insl
shll
mov
je
ds
ja
jae
xlat
rcrl
icebp
arpl
sub
lea
inc
sbb
jne
insb
and
sar
icebp
shrb
aad
mov
int3
or
inc
fcomi
iret
pop
add
xor
jecxz
add
mov
mov
xorb
jmp
enter
push
ja
sbb
mov
fistpll
xchg
add
push
mov
incb
out
fdivr
pop
hlt
push
mov
dec
sbb
push
frstor
and
mov
inc
pushl
into
mov
mov
adc
out
push
cwtl
inc
jno
lock
test
test
icebp
or
adc
fadds
sbb
adc
push
mov
mov
loopne
mov
call
sub
mov
and
adc
mov
lock
push
cmp
scas
ljmp
loope
cmp
mov
in
xor
lahf
or
jbe
mov
sbb
or
test
aas
sbb
punpckhbw
inc
fstps
hlt
adc
aad
pop
pop
sbb
aaa
pop
jle
inc
jb
orl
add
in
mov
add
add
pop
js
sarw
sbb
leave
jle
inc
out
sub
and
jecxz
cmc
dec
pop
dec
ss
fs
cmp
or
jge
iret
leave
mov
insl
inc
jb
jno
xor
inc
mov
inc
jmp
cwtl
cmp
cs
scas
jno
sti
inc
mov
aad
jbe
das
scas
pop
clc
fbstp
cmpsb
popa
adc
fwait
xlat
xor
bound
lock
bound
jbe
nop
ss
jg
pusha
mov
inc
push
inc
xor
xor
test
xchg
and
and
sti
and
cmp
pop
inc
inc
clc
push
mov
mov
push
cmc
cli
nop
sti
es
lcall
xchg
iret
scas
mov
sbb
adc
ljmp
lods
out
jp
xchg
dec
adc
int3
ret
lock
pushf
inc
dec
dec
push
das
cmp
xchg
dec
addr16
inc
pop
fstpl
repz
sbb
push
push
lret
outsb
clc
cltd
push
inc
icebp
lret
leave
xchg
pop
in
fwait
loope
mov
roll
xor
out
in
aas
mov
pop
and
data16
nop
cmp
mov
xchg
mov
ja
insl
das
jg
cmp
fwait
jl
scas
in
ljmp
cld
jb
sti
add
test
cmpsl
xchg
adc
mov
out
call
ret
pushl
inc
mov
sbb
inc
or
clc
loop
lret
ja
nop
cmp
xchg
pop
jge
int
ret
dec
sub
in
mov
or
adc
xlat
outsb
mov
andb
gs
lock
or
fisttpl
push
pop
cmp
fiaddl
into
push
lret
mov
add
mov
lods
outsl
xchg
xchg
and
pop
xchg
dec
mov
inc
sub
rcrb
fstps
cmp
inc
and
xchg
les
rclb
icebp
cmp
dec
xchg
mov
popa
mov
das
fdivrp
dec
push
mov
mov
inc
daa
mov
mov
sar
mov
call
jno
andl
jmp
add
sub
iret
sbb
int
or
inc
ljmp
jge
jp
std
adc
jbe
adc
mov
cmp
mov
sbb
sbb
das
inc
insb
pop
filds
leave
pop
sbb
xchg
rorl
std
cltd
push
xor
cmp
in
pop
mov
mov
sub
xchg
stc
pop
clc
shr
scas
jnp
sub
and
js
mov
cmp
sbb
push
test
cmp
dec
pop
idivl
push
adc
popf
leave
or
push
add
mov
mov
cld
mov
mov
clc
jmp
cld
dec
aas
fisubl
insb
mov
mov
ds
out
test
rol
pop
cmp
out
fisubrl
fldt
outsl
jnp
add
lcall
mov
clc
mov
mov
rep
insl
or
jl
imul
dec
pop
cli
frstor
jno
nop
pushf
sti
jbe
data16
or
add
dec
lahf
out
xor
push
pop
insl
fldl
fwait
push
ljmp
test
lret
pusha
test
and
shr
adc
ret
js
mov
cwtl
in
daa
pop
mov
int
push
fistpl
fstpl
gs
fcmovnb
pop
xor
movsb
daa
adc
fucom
dec
or
pop
push
jmp
lret
jmp
aam
fdivp
jle
out
mov
dec
xchg
add
cmp
syscall
repnz
scas
inc
scas
clc
sbb
push
fistps
jmp
mov
fs
out
je
aaa
mov
or
and
sub
mov
mov
int
stc
rorl
inc
inc
xchg
xchg
jb
add
mov
jecxz
mov
incl
ret
mov
mov
mov
and
and
xchg
push
xchg
cmp
mov
sub
or
test
lcall
adc
or
fwait
out
pop
and
mov
dec
add
lcall
sbbl
inc
push
jp
ret
imul
mov
sub
pop
ret
fmul
dec
and
jecxz
inc
cmpsb
jg
insb
push
ss
gs
push
loopne
and
lcall
stc
jl
mov
inc
mov
xchg
loop
hlt
in
inc
adc
dec
adc
aam
outsb
or
dec
aad
mov
cmp
mov
addr16
testl
jno
loopne
pop
mov
add
pop
inc
std
mov
or
fdivrl
ret
roll
fsubrl
in
fdivrs
mov
mov
out
push
mov
clc
push
mov
mov
lods
push
movsl
out
jbe
mov
jmp
mul
in
jae
and
push
push
push
fimull
loop
imul
mov
lods
sub
aas
jb
push
enter
mov
mov
mov
clc
les
mov
mov
sub
mov
mov
stos
sbb
andl
arpl
dec
adc
add
or
cli
mov
xlat
lds
lcall
out
subb
sbb
fstps
cmpsl
xchg
mov
jmp
mov
das
lea
icebp
popf
out
mov
hlt
insl
mov
shlb
sub
xchg
ljmp
mov
mov
jmp
fidivrs
gs
sarb
movsl
sbb
inc
adc
pop
dec
dec
xor
insl
loope
jbe
adc
dec
push
xchg
lock
dec
lret
mov
pusha
add
adc
mov
mov
stc
mov
push
mov
dec
lock
xchg
dec
mov
daa
lock
ret
sti
inc
mov
outsl
jae
out
jo
sbb
push
pop
stos
add
add
cmp
nop
in
in
push
icebp
ja
shlb
add
outsb
or
jnp
mov
mov
jbe
jo
mov
or
inc
cmpb
ret
filds
mov
in
cltd
inc
out
pop
push
push
push
and
xor
ja
rcr
cmp
gs
movsb
hlt
je
pop
daa
mov
sarb
shlb
loopne
mov
cmp
jnp
arpl
or
imul
sbb
mov
pop
sahf
iret
leave
mov
jnp
add
xor
xor
in
sbb
sbb
dec
popa
jg
add
mov
std
jo
adc
aas
out
loop
adc
fstpt
inc
not
test
cmpl
sub
mov
mov
ficoml
aas
jmp
push
sbb
xor
sarl
in
and
push
insl
call
stos
movl
scas
mov
push
std
adc
mov
ss
mov
mov
or
sbb
les
dec
sub
sbb
ljmp
sbb
jp
rcrb
out
adc
mov
insb
push
andb
inc
call
fidivl
and
sbb
sub
add
jne
fidivs
data16
addl
pop
pop
or
call
pop
xor
cmp
jmp
popf
sbb
das
popf
adc
and
jecxz
xor
sub
mov
push
pop
bound
cmp
push
rclb
das
cmp
and
dec
jno
jb
int3
ret
and
mov
add
dec
xor
fistpl
pop
mov
push
movsb
jge
jecxz
sbb
lods
jg
cli
xor
push
fisttpl
xchg
aaa
mov
aad
sbb
adc
lahf
cld
rolb
int
rolb
icebp
xor
cmp
loopne
sub
push
push
mov
test
stos
push
decl
push
cmc
ja
iret
dec
aaa
and
lret
mov
mov
lock
fs
sti
aad
mov
mov
inc
inc
xor
sub
cld
xchg
pop
mov
mov
fnstsw
movsb
jbe
mov
lret
inc
lahf
pop
repnz
cmp
lahf
filds
and
push
test
imul
pop
jp
imulb
xchg
mov
dec
loope
popf
shr
out
jb
aaa
push
mov
mov
push
jb
mov
or
ret
pop
sbb
xchg
inc
stos
push
fcoms
sti
push
jp
ret
add
pop
stos
cs
sarl
hlt
dec
xchg
jne,pn
mov
sub
gs
add
call
hlt
pop
in
fdivrs
xchg
push
sbb
lds
jne
push
adc
sub
movsl
leave
jmp
push
pop
pop
sbb
lcall
int3
xchg
adcb
dec
mov
insb
cmc
xchg
jb
in
inc
cmpsb
movsl
in
and
stos
fstpt
xor
lea
ja
dec
inc
or
shl
in
add
push
loope
ret
ror
int
pop
sahf
mov
or
lcall
scas
mov
bound
push
or
ret
pusha
adc
dec
jne
popl
call
nop
cmc
sub
loope
jp
mov
cltd
insl
aaa
ds
int
xchg
mov
cmp
xlat
orl
test
mov
sbb
and
repnz
test
cmp
lcall
insl
cmpsb
aas
add
movb
shrl
mov
add
xchg
scas
cs
inc
mov
xlat
ss
push
ret
pop
xor
push
imul
sub
lea
stos
test
inc
pushf
pop
addl
mov
push
nop
gs
rol
loope
or
movsb
xchg
lret
fdiv
or
lret
xor
stos
sti
test
and
jno
pop
data16
or
adc
jno
sbb
data16
mov
or
cli
in
enter
or
ljmp
into
mov
rolb
and
push
insl
add
jno
and
cmp
add
ds
mov
jp
dec
in
mov
cmp
scas
stos
add
mov
icebp
aas
cmp
movntps
cwtl
jmp
add
jl
mov
or
dec
inc
adc
inc
out
sub
insb
dec
mov
jg
ret
xchg
js
lret
or
leave
imul
dec
adc
pop
xor
rolb
ffree
cmp
std
or
xor
cmpsb
cli
cmpsb
jbe
and
xor
and
ss
lds
out
lret
idivb
inc
leave
es
mov
pop
daa
jo
ret
jnp
and
mov
jb
inc
jbe
cmp
loope
hlt
or
fwait
jl
faddl
sub
add
hlt
or
mov
aam
mov
rclb
mov
or
fstpt
cmp
sub
push
fildl
lcall
mov
ja
fdivrs
repz
xchg
shrb
aaa
in
clc
js
add
mov
mov
lahf
inc
imul
aaa
mov
push
dec
push
jp
pop
hlt
cmp
fnstsw
aas
and
sub
sbb
xor
loope
adc
push
xchg
inc
clc
aam
sarl
cwtl
jb
fadds
fadd
inc
daa
mov
and
leave
ss
daa
jae
adc
rcrl
es
fcmovne
cmpsb
movsb
jno
and
and
xchg
pushf
fisubl
sub
push
ds
mov
cs
xchg
mov
adc
mov
xchg
sub
xchg
xchg
mov
lcall
and
rorl
adc
push
pop
adc
sbb
cmc
mov
xchg
fucomi
xor
lahf
pop
adc
sub
push
cmp
insl
jbe
or
fs
sbb
cmp
cmp
in
hlt
sbb
je
rorb
aas
xor
ljmp
in
js
mov
inc
jg
fisubrl
jge
xorb
adc
jl
cmp
mov
fldl
push
mov
movsl
shlb
insb
dec
lds
mov
sbb
icebp
rcr
add
push
xor
adc
mov
mov
jnp
clc
mov
rcr
andl
and
jae
cmp
xchg
in
add
into
out
mov
push
xchg
in
pop
jp
push
xor
mov
mov
pop
loopne
outsb
mov
aad
push
filds
xchg
call
test
subb
jl
inc
mov
or
pop
xor
jmp
push
imul
fcmovnbe
or
mov
sbb
sbb
jg
mov
mov
and
fwait
nop
rclb
mov
mov
dec
shll
enter
ja
dec
aam
outsb
pusha
and
in
shrl
mov
xchg
jle
andb
or
jns
mov
fidivrl
and
or
sbb
push
frstor
mov
jge
jbe
popa
or
and
es
aas
or
je
cmp
inc
and
and
insb
pop
mov
mov
leave
push
aam
add
adc
loop
mov
hlt
out
pop
je
add
mov
and
and
add
cmp
enter
pop
insb
call
cmp
dec
xlat
jns
shrl
or
jnp
int3
scas
ds
ljmp
testl
push
int
sarl
lahf
arpl
and
jbe
ja
mov
and
dec
mov
pop
bound
sbb
outsb
push
sahf
dec
mov
decl
mov
and
inc
adc
loope
movl
icebp
cmpb
iret
loopne
push
cmp
and
scas
xchg
repnz
daa
mov
sbb
lods
pop
add
jl
vpunpckhqdq
mov
xlat
test
sub
imul
push
mov
lods
mov
cs
pop
test
enter
lods
shlb
mov
push
push
rcrl
popf
pop
das
pop
pop
jmp
mov
push
mov
and
scas
imul
inc
xlat
lock
jnp
cli
inc
leave
fdivrs
jmp
rcr
adcb
pop
jo
lods
push
xchg
fs
jp
add
pop
push
xchg
sbb
mov
insl
pop
cmp
ss
mov
stc
sbb
insl
mov
enter
sbb
stos
xor
cmp
movsb
jecxz
add
jb
or
jp
xor
dec
neg
sbb
aas
push
rcrl
mov
inc
notl
js
lret
mov
mov
push
sub
dec
jecxz
sbb
fcmovnu
lret
cwtl
sbb
xor
xchg
pusha
xchg
cmp
push
ret
jmp
jmp
fisttpl
cmp
or
mov
sahf
ljmp
insl
loope
scas
test
sbb
sbb
cs
cmp
push
data16
mov
mov
jecxz
sub
insl
mov
imul
xchg
cmp
std
leave
mov
jmp
icebp
and
xor
stos
aas
pusha
inc
pop
daa
jb,pn
add
pop
addb
inc
push
sub
cmpsb
or
cmpb
mov
mov
scas
pop
aam
adc
push
mov
lret
cltd
or
mov
sti
lds
jp
mov
mov
ret
neg
test
jns
gs
xchg
and
mov
cwtl
push
xchg
jecxz
sub
xor
repnz
ror
or
aad
xchg
jno
xor
jbe
jecxz
adc
test
push
ret
in
and
jbe
fisubrl
jl
clc
xchg
add
lock
lods
dec
mov
cmp
fistl
insl
pop
push
subl
rol
adc
addr16
xchg
dec
data16
fidivl
movsb
dec
adc
popa
mov
sub
sbb
add
jo
mov
push
jne
xor
push
cmp
shll
mov
inc
lcall
xchg
push
std
insl
push
ja
cmp
das
xor
notl
xchg
push
pop
sub
mov
pop
shrl
and
and
xor
fldl2e
subl
leave
and
jae
jg
testl
mov
mov
xor
push
popl
sub
add
jecxz
pop
jb
hlt
lock
mov
mov
push
xor
adc
adc
lea
rclb
loop
cli
mov
rorl
xchg
cld
mov
sbbl
enter
push
cmpsb
lods
aas
mov
xor
sub
sub
mov
inc
mov
add
lret
mov
test
and
push
mov
in
fsubrl
adc
inc
jmp
call
js
enter
sbb
cld
xchg
loope
pop
outsl
lods
cmp
adc
mov
dec
mov
pop
enter
out
sti
pop
in
lcall
test
xlat
mov
fildl
mov
xlat
or
mov
adc
test
xchg
adcb
xor
out
pop
fucomip
adc
xchg
mov
cld
add
add
cmp
xchg
push
sub
leave
ljmp
add
mov
xchg
sub
js
lret
jg
lcall
ret
inc
repz
sahf
xchg
mov
add
jg
das
mov
pop
fimuls
pop
mov
loop
mov
mov
mov
xor
test
sbbl
dec
enter
xchg
repz
loop
fistpl
flds
add
mov
aam
push
cmp
mov
fisttpl
add
adc
ret
mov
and
sbb
xchg
lahf
mov
icebp
popf
or
andl
push
sbb
jp
lds
mov
or
std
xchg
mov
out
cmp
popa
lock
pop
imul
cwtl
stos
inc
in
daa
mov
mov
aam
repz
inc
std
lods
mulps
or
jg
mov
inc
out
jecxz
ret
fwait
jbe
ljmp
outsb
inc
jns
add
push
xchg
ret
aas
add
cwtl
lret
stos
mov
adc
xor
xchg
leave
negl
cli
mov
mov
inc
js
inc
sarl
insb
iret
repz
mov
loop
bound
push
arpl
loopne
outsl
push
ss
pop
mov
sbb
cmp
out
xchg
mov
or
imul
jg
fstl
mov
in
pusha
mov
fdivrp
inc
test
xchg
and
and
movsb
mov
sub
jbe
add
push
mulb
jns
sbb
loope
lret
imul
xlat
test
xor
aam
add
mov
sbb
scas
sub
pusha
xor
ret
xorb
mov
xchg
pop
jae
or
popf
add
sti
jmp
aad
mov
pop
xchg
stos
outsb
int
pop
xchg
pop
xchg
faddl
push
lahf
insl
clc
imul
mov
pop
add
fldt
je
or
rorl
addr16
xchg
mov
dec
sbb
mov
sbb
data16
cld
adcb
push
pop
pop
mov
sbb
data16
cltd
mov
sbbb
xchg
sahf
mov
mov
enter
fwait
sbb
arpl
add
sub
pop
adc
sub
inc
mov
fadd
mov
pop
shr
dec
mov
xor
jle
push
sti
mov
jb
and
mov
add
xlat
xchg
jle
pop
push
leave
push
enter
inc
ds
push
imul
sub
push
xchg
das
xor
push
lea
inc
lcall
int
pusha
mov
out
xchg
adc
les
mov
jle
xchg
pop
mov
cmpl
inc
sub
xor
aaa
mov
lds
mov
inc
ficomps
fbstp
lahf
xor
lret
jg
cmp
mov
outsl
pop
sub
imul
leave
sbb
stos
sbb
pop
aad
mov
xchg
decb
jmp
mov
fcomi
xchg
aaa
scas
les
insl
addl
adc
int
add
lret
shll
sub
fnstcw
das
stos
addr16
ljmp
mov
mov
cmp
push
cld
test
in
or
sbb
outsl
or
jne
in
dec
ret
enter
mov
lods
xchg
out
and
pop
push
jle
rolb
fildl
pop
xchg
dec
xor
and
fldl
movsb
jo
adc
add
popa
or
fadd
je
dec
and
outsl
or
lock
mov
repnz
fdivrp
out
scas
pop
es
out
push
sub
and
shl
pop
sbb
subb
mov
lcall
addb
cmp
inc
loopne
inc
pop
repz
adc
cs
aam
push
pop
insl
jl
mov
mov
mov
dec
jns
orb
cmc
es
rolb
in
or
mov
add
adc
jp
push
ja
pandn
push
push
pop
in
inc
sbb
test
xlat
xlat
cmp
push
aam
mov
push
push
incb
addl
mov
outsb
fisubs
in
fwait
mov
mov
or
in
mov
adc
adc
out
shlb
incb
loop
push
sbb
dec
push
jl
mov
jle
jmp
adc
jb
popa
xor
aad
push
aam
adc
sub
add
addr16
lret
dec
xor
adc
add
test
mov
jmp
mov
pop
mov
in
lock
outsl
jmp
dec
in
sbb
push
add
jp
roll
pop
add
rorl
sub
pop
add
cli
in
and
sbb
jnp
into
aad
fwait
ss
insb
dec
icebp
mov
cs
pop
hlt
pop
mov
pop
movsl
test
outsl
call
xchg
js
rcr
loopne
jmp
outsl
loopne
stc
jg
sbb
sbb
sub
pop
sbb
fs
xor
repz
add
loopne
outsb
loopne
push
iret
pop
jne
stc
pop
in
adc
pop
cwtl
push
lock
hlt
dec
push
ret
jp
push
mov
outsb
xor
aaa
data16
pop
in
mov
push
pop
xlat
cmc
push
in
xor
int
pop
pusha
add
ds
es
pop
xchg
push
push
dec
outsb
cmp
mov
lea
movsl
aas
aam
jl
cmc
dec
lahf
movsb
clc
in
xchg
clc
fdivrs
xchg
subl
inc
sti
push
add
repz
sbb
mov
pop
cmpsb
mov
jo
rcll
cs
fisttpl
cltd
lods
sub
fistpl
mov
mov
xor
xor
mov
insb
das
sbb
and
rcrl
xor
aam
jl
stc
cwtl
push
loope
fwait
inc
loopne
insl
fstpt
in
jmp
sub
xchg
mov
mov
test
pop
push
aad
mov
rcll
das
xor
mov
mov
jp
ds
into
daa
push
mov
ss
mov
sbb
insl
mov
mov
stos
and
sub
sub
pop
inc
and
repnz
or
mov
mov
ret
arpl
mov
xchg
stos
pop
cmp
std
loop
xchg
loop
sbb
fucomp
mov
mov
jbe
xchg
mov
cld
test
scas
add
pop
cli
ret
addr16
xor
into
jbe
ja
test
ljmp
sbb
fs
sbb
sub
scas
xchg
dec
xor
pop
imul
or
adc
out
adc
hlt
lahf
addr16
or
sbb
cmc
add
aaa
mov
icebp
movsl
aaa
loopne
in
sub
jb
test
icebp
mov
pusha
xor
leave
rol
inc
out
jg
push
fwait
dec
cmpsb
sub
rolb
mov
vmovaps
out
daa
mov
adc
sub
mov
aam
push
sub
cmp
dec
rcll
aad
movsb
and
lods
mov
fisubrl
lahf
cmp
pop
repz
sbb
test
lods
cmc
in
sub
cwtl
cmp
test
repnz
push
loope
adc
imul
in
sub
decl
insl
pop
adc
sbb
ja
and
outsb
fsubs
jmp
push
pop
je
dec
mov
leave
inc
imul
mov
sub
xor
lock
adc
jne
out
iret
push
jbe
arpl
fwait
mov
popa
test
mov
repz
xchg
hlt
xchg
cmp
lahf
fnsave
xchg
mov
pop
cmp
out
or
orl
add
pop
shrb
cld
cmpsb
add
push
add
mov
dec
pop
xchg
or
call
xchg
mov
sbb
or
sbb
dec
mov
jnp
xchg
std
rclb
fdiv
pop
fimull
add
nop
add
sbb
insl
das
jnp
fldl2e
jb
jle
shrb
aaa
ds
or
jp
and
mov
shlb
int
daa
popa
aaa
mov
rolb
pop
adc
or
mov
pop
jmp
daa
popf
and
pop
es
test
jle
pop
scas
stos
cmp
push
and
cmp
mov
xchg
pop
inc
mov
les
adc
subb
insb
int3
popf
sbb
inc
pop
add
xchg
in
jo
pop
imul
mov
mov
adc
xchg
sub
jle
mov
adc
subb
pop
sub
xchg
or
out
paddusw
out
add
fistpll
lds
sub
adc
mov
pop
sbb
mov
xchg
jmp
test
aam
mov
loop
push
les
std
mov
jnp
pushl
outsl
add
insb
lds
in
pop
test
icebp
sbbl
jp
fwait
dec
mov
mov
aam
clc
lods
out
test
sbb
call
cmp
aad
jbe
jle
adc
in
enter
or
and
xchg
fstp
pop
cld
xchg
jecxz
xor
mov
xor
or
andb
mov
lea
push
inc
or
add
outsl
loop
out
push
subb
mov
sbb
inc
lret
push
xchg
test
cmc
adc
sbb
jp
adc
inc
mov
xchg
mov
or
sbb
inc
and
add
mov
pushf
mov
mov
xor
jl
popf
add
xchg
ss
std
inc
inc
xchg
nop
jae
dec
pop
subb
cli
cmp
cmp
lcall
subb
xor
stos
pusha
repnz
outsb
lods
jnp
adc
outsb
mov
bound
popf
fnclex
shlb
mov
test
repnz
cmpl
aad
xchg
push
push
xor
or
stos
lock
pop
and
pop
pop
js
mov
into
dec
mov
fdivr
mov
fldt
cwtl
xchg
adc
add
inc
jo
outsb
jbe
xor
mov
ss
insl
xor
pop
idivl
mov
inc
dec
cmpb
jb
stos
stc
rolb
imul
push
xorb
lock
sub
mov
ret
popa
dec
adc
xor
sub
xchg
mov
mov
mov
aam
mov
insb
shlb
call
inc
or
add
jmp
cmp
jns
mov
push
inc
fldln2
adc
lods
jo
push
or
fidivrs
inc
inc
out
dec
loopne
adc
mov
push
pop
push
push
mov
sub
pop
es
sbb
cmc
repz
aas
or
test
aaa
mov
es
jbe
push
xchg
mov
loopne
fs
stos
test
xchg
pop
lods
adc
das
add
mov
ljmp
cltd
sbb
in
inc
and
in
jg
cld
shl
add
xchg
mov
add
sub
outsb
fisttps
xor
adc
cmp
cmp
and
pop
das
insb
sahf
add
cmp
jecxz
push
or
mov
std
pop
sbb
push
inc
xor
xchg
sub
or
cmp
jecxz
lahf
mov
sbb
sbb
and
aas
sti
or
sbb
daa
add
sbb
sub
cld
sbbb
inc
pop
fs
fnstcw
or
das
mov
fstl
lods
mov
adc
jo
pop
mov
js
mov
das
and
cmpsl
mov
jg
sbb
dec
and
call
scas
outsl
add
add
in
outsl
push
insl
and
sub
sub
aaa
inc
cmpsl
popa
inc
cmpsl
int
xor
sbb
cmpsb
repz
pusha
sbbl
inc
and
mov
movsl
push
lods
and
std
mov
xchg
dec
aas
mov
jecxz
jp
inc
push
addr16
lock
fldt
mov
inc
aam
push
or
clc
push
jecxz
pop
pusha
mov
lcall
sahf
push
and
push
push
and
add
fildl
shlb
add
lods
sbb
jnp
nop
dec
out
jecxz
aad
ficoml
in
jae
fldenv
adc
jmp
pushf
or
mov
xchg
and
xlat
push
inc
dec
std
mov
sahf
jg
and
dec
mov
orb
push
test
adcb
mov
das
sub
push
inc
mov
in
and
movsb
or
mov
mov
inc
mov
scas
add
test
outsb
xchg
jge
test
scas
jb
fidivrl
mov
adc
pop
inc
mov
add
cmpsb
mov
jno
ljmp
popf
sahf
js
scas
mov
repnz
sbb
jns
xchg
pop
mov
movsl
adc
inc
out
or
add
test
sbb
les
cmpsb
loop
sbb
add
testl
mov
in
sbbb
lods
xchg
repnz
dec
bound
movsb
popf
arpl
mov
mov
xor
add
sub
mov
je
repnz
mov
pop
jp
inc
xchg
outsb
cmpsb
cmpsl
pop
mov
jmp
or
jae
out
fsubrp
mov
mov
loop
aaa
jmp
clc
mov
incl
cwtl
addl
adc
and
add
mov
sarb
mov
pop
pop
shl
adc
roll
push
xlat
aad
out
push
xor
movsl
pop
mov
dec
mov
or
scas
outsb
insb
pusha
sbb
mov
addr16
outsl
mov
fdivs
jecxz
mov
iret
jmp
mov
dec
dec
inc
jp
incb
sbb
or
mov
sbb
es
inc
outsl
ret
add
xchg
rcrl
fidivl
jb
push
xorb
aad
jge
or
mov
jmp
mov
push
push
inc
sbb
mov
ficoms
jbe
sti
and
mov
mov
jecxz
lret
popf
xchg
lds
and
mov
sbb
cld
cmp
cli
iret
pop
mov
pop
jmp
hlt
cmpsl
and
rorb
push
iret
fistpl
xor
xchg
pushf
xchg
loopne
cli
data16
sahf
js
push
xchg
sub
insb
rcll
adcb
dec
pop
cli
mov
mov
dec
lock
sysenter
int
subb
inc
call
movsl
or
insl
mov
push
and
outsl
fidivl
orl
push
sbb
push
adc
push
test
decl
pop
push
jge
rcr
push
in
icebp
scas
add
and
push
stos
int
mov
out
cmc
negb
mov
adc
mov
pop
into
xor
vmovss
filds
imul
int
negl
xchg
das
xor
insl
outsl
fistps
sbbl
outsb
sahf
sub
outsb
ljmp
add
aas
sub
jnp
adc
push
xor
orl
add
mov
jne
jp
lods
mov
test
mov
arpl
push
push
test
cwtl
cltd
cmovb
lret
add
jnp
push
xor
stos
fst
dec
inc
imul
in
mov
in
hlt
pop
and
lock
insb
and
fwait
pop
or
in
sti
outsb
fmull
rcl
dec
int
xor
sbb
push
or
xorb
out
and
cmp
lock
sbb
xchg
mov
int
lret
not
pusha
aas
je
mov
aas
xorl
mov
inc
push
stc
dec
or
inc
dec
adc
fcomip
cmpsb
and
shr
ss
adc
push
ljmp
jnp
loop
or
aaa
mov
inc
mov
cmp
sbb
dec
mov
pop
hlt
fwait
or
loop
adc
xor
in
ret
adc
pop
or
sbb
xchg
cmpsl
jmp
or
xchg
inc
add
cs
loopne
sub
inc
ret
xchg
and
mov
jb
mov
out
xchg
test
push
and
fsubr
imul
or
add
pop
mov
js
femms
mov
dec
rclb
jb
jle
in
pushf
mov
cmpsb
mov
rcr
pop
clc
stos
and
jae
dec
xchg
xchg
cmp
pop
mov
push
pop
mov
rcrb
insb
ljmp
xchg
mov
mov
test
fwait
sbb
and
nop
inc
dec
sbb
aas
insl
cld
xor
sbb
mov
cmpb
call
mov
std
orb
lret
sub
sub
jp
faddl
xor
mov
jl
or
mov
leave
daa
push
out
daa
add
add
fnstcw
in
adc
lock
faddl
out
cltd
pop
outsl
mov
jnp
or
sbb
xor
xor
push
les
xor
lret
add
ljmp
pop
clc
jbe
aad
fwait
mov
mov
iret
pop
jo
rcl
xchg
orb
addl
aas
movb
or
push
xchg
push
ss
sbb
pop
xchg
imul
cmpsl
inc
xchg
mov
cli
push
inc
jne
ds
push
add
fldt
or
rorb
daa
popf
lret
daa
mov
mov
push
push
mov
in
aam
test
mov
clc
push
or
daa
xchg
mov
dec
outsl
sub
push
sub
mov
dec
and
xchg
or
inc
cmpsb
cmp
ds
xor
sub
inc
add
cmp
mov
sbb
jge
fsubs
jg
bound
data16
jne
or
and
mov
in
xchg
push
mov
sbb
outsb
and
aam
leave
ss
jns
das
mov
sbb
pop
inc
push
shlb
jecxz
or
push
bound
jae
jae
fistps
fnstenv
dec
call
rcrb
pop
pop
inc
in
test
inc
dec
out
mov
lahf
and
iret
jg
or
lahf
pop
pop
pusha
ret
inc
sbb
test
add
ror
pop
xchg
ss
and
in
rcll
fs
add
outsl
mov
jp
jmp
cld
and
popa
nop
popa
popf
loop
stos
jle
sub
cld
jecxz
xor
mov
fidivl
inc
ss
push
notl
stc
inc
add
pop
in
outsb
lods
shll
push
push
push
cmp
inc
bound
clc
mov
test
inc
mov
sub
mov
push
sbbl
test
mov
leave
decl
inc
mov
pushf
loop
sbb
aas
shrl
out
sbb
out
inc
rorb
out
dec
faddl
mov
push
fisttps
and
xor
call
sbb
idiv
cmp
and
cld
and
out
incb
pusha
imul
and
sbb
push
mov
mov
sbb
jo
roll
jno
and
insl
xorl
sbb
xor
pushf
fadd
pushf
inc
mov
xchg
in
in
lcall
mov
xor
data16
cmp
into
das
push
daa
add
mov
orl
xchg
ss
movsb
enter
popa
jmp
cmp
movq
imul
or
ret
cs
inc
rcll
divps
orl
scas
jecxz
cmp
cs
and
add
cmp
mov
inc
mov
inc
adc
fisttpl
jge
jns
jb
test
das
ljmp
xlat
or
dec
jmp
cmp
pop
push
loopne
pop
mov
pop
inc
xchg
jbe
inc
sbb
bound
or
imul
lods
mov
lcall
mov
xor
fsubr
shrb
les
outsl
mov
lea
xchg
js
aaa
je
inc
andl
push
adc
outsl
push
sbb
arpl
mov
popa
mov
xchg
adc
ret
popa
cwtl
mov
cmp
in
subb
aaa
adcl
mov
rcr
aaa
mov
xor
inc
les
cmp
jbe
push
popa
leave
push
jle
shlb
shlb
adc
jge
cwtl
inc
pusha
mov
out
aad
les
mov
lahf
dec
jbe
dec
jne
lock
jns
std
fwait
call
jno
out
loop
mov
sarl
mov
in
fmuls
jmp
movsb
and
pusha
xchg
mov
jle
cmpb
cli
xchg
adc
pop
test
stc
mov
jg
call
xchg
mov
nop
and
pusha
push
jne,pt
mov
cltd
dec
add
test
and
xor
sbb
inc
lahf
out
or
jp
mov
mov
mov
xor
mov
mov
add
cltd
adc
cwtl
fs
or
repz
xchg
rorb
stos
aam
or
jb
mov
jge
push
cmp
sub
je
lods
xchg
enter
std
mov
out
std
push
shrl
sbb
mov
jge
es
sbb
divb
insl
dec
ret
fs
and
sarl
xor
pop
aas
lods
cli
fstpl
mov
jl
or
and
mov
cmp
xor
and
clc
jbe
lock
out
bound
sub
jmp
fnstsw
mov
nop
cmp
lds
push
xchg
dec
and
movsl
adc
pop
js
das
call
cli
and
call
sarb
rolb
xor
rolb
fistpll
ja
adc
cmpsb
mov
into
lea
outsl
aaa
jo
cmp
loope
push
xorl
hlt
in
mov
inc
xchg
xor
push
inc
xchg
mov
and
sub
or
and
inc
mov
mov
sub
insl
rorb
or
lcall
push
adc
aaa
ret
lea
xchg
mov
inc
lea
push
jp
mov
xchg
inc
cmp
mov
cmpb
mov
hlt
mov
xchg
sbb
dec
insl
jp
jl
mov
mov
cmp
adc
je
fwait
cmc
sarl
outsl
fmul
push
mov
pop
enter
xorb
mov
adc
dec
enter
xor
push
sbb
adc
das
mov
and
xor
dec
mov
mov
in
cwtl
arpl
shrl
lea
cld
or
add
call
data16
push
inc
lret
fistpl
dec
aad
int
dec
cwtl
push
arpl
add
ret
mov
lock
jo
clc
pop
inc
bnd
xchg
lcall
pop
or
mov
pop
jnp
and
jae
pushf
lods
mov
dec
mov
std
adcl
fwait
adc
push
or
mov
flds
scas
dec
das
lds
push
jae
inc
test
push
xchg
imul
sbbl
js
outsb
pop
pusha
insb
pop
iret
and
add
dec
xor
push
out
sbb
lods
sar
cmpsl
cwtl
or
imul
adc
subl
das
dec
inc
dec
mov
ss
xchg
std
xchg
rcl
jbe
or
fdiv
pop
cvttps2pi
shl
lods
sub
rcrb
loope
shll
or
shl
sbb
sbb
mov
cmpsb
push
sub
shll
adcb
sbb
push
jo
cmp
jge
aad
jg
mov
push
mov
add
es
stos
cs
int
jo
clc
shlb
add
lock
pop
push
mov
cmpsb
sbb
sub
je
insl
sub
dec
test
jle
lock
test
das
fnstsw
out
add
jp
and
mov
fs
fisttpll
inc
pop
pushf
mov
pop
fcoms
xchg
and
xor
hlt
add
mov
dec
mov
imul
dec
xor
dec
jecxz
xor
call
push
cltd
lret
cmpps
sbb
jne
dec
mov
je
cmpsb
mov
inc
je
fisubs
xor
mov
movsl
mov
loopne
adc
inc
sub
xor
movsb
and
arpl
or
and
loop
adc
pop
imul
push
mov
fcmovnbe
leave
cmp
cmp
dec
aad
xchg
sub
mov
outsl
inc
sub
or
sub
push
decl
or
hlt
bnd
xor
add
stos
dec
sbb
in
rcrb
call
inc
jno
je
push
shrl
and
gs
cmp
movsl
pop
ja
jl
push
xlat
xor
call
aas
adc
clc
in
test
int
pop
push
sbb
daa
je
insb
rcl
call
sahf
fcmovb
outsl
mov
or
mov
fildl
adc
inc
or
lock
aam
jne
cltd
shrb
dec
lcall
xchg
or
icebp
mov
sub
int
cltd
sbbb
mov
inc
dec
sbb
fwait
adc
sbb
mov
xor
jmp
insl
pop
mov
inc
sbb
cmpsb
movsb
ss
push
loopne
fistpll
xchg
repz
xchg
fsubp
jbe
insl
adc
mov
fisttpll
cmp
jp
fldenv
rcll
fsts
aaa
leave
cmpsb
push
dec
testb
js
and
sub
mov
mov
jmp
ficoms
stos
clc
cmp
orb
aaa
mov
sbb
add
ds
inc
out
cmp
mov
sbb
inc
cmc
xchg
cmp
sub
or
fdivrs
sbb
xchg
mov
sub
insl
pop
call
fstl
jg
xlat
pop
mov
shlb
das
mov
sub
mov
rolb
subl
pop
ljmp
adc
cmp
fwait
mov
es
or
pop
sbb
scas
call
out
out
xchg
xor
fcmovbe
jo
sub
xlat
add
scas
adc
jge
aaa
mov
nop
mov
jb
mov
xor
out
mov
push
lret
cmpsl
lea
into
fsubl
inc
cmp
jnp
push
push
mov
outsb
sbb
test
or
clc
in
mov
or
pop
inc
dec
ja
or
call
mov
repz
outsl
push
pop
push
pushf
mov
pop
jae
mov
bound
std
dec
idivl
std
bound
sub
add
test
mov
je
or
scas
cwtl
insb
inc
xchg
loope
xorl
or
push
mov
leave
dec
push
push
stos
jg
mov
push
aaa
fwait
dec
xor
adc
cmp
ret
and
stc
addb
pop
push
adc
inc
add
adc
xchg
subb
cmp
popa
jecxz
jns
daa
call
sub
pop
addr16
xchg
cmpsb
pushf
enter
fnstenv
and
es
call
fisubs
mov
iret
adc
pop
mov
lret
lods
add
clc
out
add
push
or
and
inc
mov
ja
jp
push
mov
xchg
pop
inc
dec
cmc
and
xlat
push
ss
and
mov
or
mov
dec
mov
sbb
divb
xor
in
fisubrl
inc
adc
lods
stos
pop
je
lret
jge
push
cmc
outsl
jl
xor
and
clc
mov
or
loop
ds
popf
jne,pn
clc
mov
adc
mov
aam
mov
push
data16
add
pop
xchg
stc
je
mov
pop
in
es
aas
insb
jmp
je
out
mov
test
adc
jp
ret
cmpsl
lahf
lret
xor
sbb
loopne
push
icebp
arpl
sti
jo
iret
dec
test
lea
out
mov
inc
sub
sub
push
jnp
stc
inc
leave
daa
mov
ljmp
sbb
inc
and
jmp
jo
imul
add
mov
mov
test
push
das
out
add
incl
lock
mov
jmp
push
mov
fisttpl
sub
jne
push
push
or
outsl
outsl
out
outsl
add
push
pop
add
push
call
xchg
fdiv
test
pusha
inc
mov
std
mov
negl
push
inc
lea
push
push
mov
inc
loopne
hlt
push
push
cmp
mov
sbb
add
mov
fs
sbb
inc
or
jne
dec
jae
sbb
xor
cmp
push
push
jg
jbe
push
add
push
inc
lcall
sti
dec
in
push
push
dec
add
daa
xor
pop
ja
inc
inc
jnp
push
push
xlat
outsb
out
dec
hlt
push
xor
cmp
movsl
test
adc
je
push
fsubrl
js
fnsave
clc
cld
repz
mov
cmp
and
push
in
insl
push
xor
push
outsl
inc
pop
pusha
addr16
popa
add
test
inc
inc
cwtl
or
test
daa
push
jae
nop
mov
fistpll
inc
dec
dec
jns
push
js
pop
xor
das
add
mov
xor
jmp
mov
mov
mov
push
add
cld
call
sbb
dec
pop
add
sub
in
push
insl
outsl
push
orl
loope
mov
in
mov
clc
jbe
mov
stos
outsb
bound
gs
or
sub
fbstp
inc
jae
pop
out
imul
mov
cmc
sbb
cmp
cld
fidivrl
pop
mov
xchg
repnz
in
data16
xor
in
xchg
das
icebp
movsl
sub
lret
jg
dec
js
dec
sub
inc
mov
jne
dec
fld
rolb
ret
push
pusha
sub
push
in
push
cmp
lods
push
outsb
dec
or
mov
sbb
adc
push
and
add
xchg
xor
push
hlt
scas
xchg
dec
test
insb
and
pop
ficoms
mov
lock
icebp
jmp
mov
jno
mov
dec
add
mov
hlt
aam
ds
insb
xor
ss
pop
add
sti
xchg
sbb
notl
ss
add
lock
or
inc
gs
push
daa
push
xchg
push
int3
jge
ss
loope
roll
xlat
orl
ja
into
mulb
or
push
cmp
pop
pop
popa
jb
repnz
push
fs
rcl
mov
mov
ret
sub
add
rcrl
push
mov
push
mov
dec
cld
clc
mov
dec
mov
jg
ret
popa
xor
dec
adc
mov
inc
dec
inc
mov
jle
ja
in
mov
jne
mov
jge
popa
mov
in
ficomps
jns
in
dec
mov
repz
insb
mov
push
jbe
jne
mov
xor
clc
dec
movb
jno
cs
outsl
int
daa
pop
je
pop
and
mov
ja
bound
dec
call
add
and
fwait
pop
xchg
js
jbe
add
arpl
pop
pop
xor
insl
ja
push
dec
call
inc
cmpsb
sub
rorb
test
xor
lret
mov
jge
xlat
jbe
mov
xchg
cli
adc
mov
incb
sub
adc
mov
inc
add
clc
or
rol
das
inc
sub
add
gs
pop
sub
mov
loope
dec
push
outsl
pushf
sbb
jl
inc
ljmp
mov
adc
mov
jo
arpl
fcomps
add
xor
loopne
in
mov
inc
pop
cmpsb
jno
dec
mov
jge
sbb
gs
push
push
scas
dec
les
xchg
addr16
inc
jg
dec
inc
mov
icebp
pop
mov
vmread
push
fldt
outsl
cs
push
aaa
jae
adc
xchg
mov
ret
dec
adc
rolb
fldpi
scas
out
je
bound
inc
mov
or
ja
dec
lods
repz
pop
jnp
test
add
dec
int3
push
sub
cli
pop
dec
inc
insb
dec
jns
clc
orl
enter
xchg
les
cmp
mov
hlt
push
fstl
loope
sbb
mov
or
push
dec
movsb
divl
loop
fisubrl
test
dec
mov
dec
xchg
or
sbb
push
lods
out
mov
mov
push
mov
insb
xchg
inc
scas
out
movsl
add
dec
xor
or
shll
pusha
rol
mov
lds
xor
std
mov
bound
shrl
ss
sti
movsl
faddp
into
sti
xor
imul
dec
cmp
push
inc
fs
lods
inc
jbe
push
jge
xlat
inc
pusha
sub
hlt
inc
inc
pop
outsb
inc
shrb
lock
push
adc
je
insl
mov
pop
push
jbe
ret
mov
ljmp
xor
add
inc
inc
sarl
jl
clc
stos
popf
dec
jb
dec
and
dec
pop
add
lock
test
imul
ret
fwait
out
push
cmp
inc
sbb
hlt
sub
call
js
into
mov
push
dec
xor
cli
push
mov
ss
sbb
push
adcl
gs
add
mov
rorb
inc
mov
push
shll
cld
les
cld
mov
setb
cmp
lcall
add
sarb
xorl
rolb
pop
adc
test
sub
lods
incb
mov
mov
ss
icebp
push
jno
je
xlat
leave
pop
or
xor
addr16
out
push
scas
push
lea
push
jmp
pop
dec
inc
add
add
neg
lret
inc
add
add
xor
sbb
add
inc
or
xor
std
in
std
rclb
push
add
jmp
jmp
xlat
jle
xchg
dec
and
adc
inc
repz
mov
fnstsw
aas
push
add
clc
and
lods
xor
lcall
and
jb
cmp
aas
xor
jnp
push
in
aaa
decl
jns
mov
or
fistps
jb
es
push
mov
pop
jecxz
xchg
sbb
iret
jae
ljmp
out
roll
sub
dec
out
add
mov
sbb
and
nop
inc
ret
out
mov
pop
add
addr16
jecxz
jb
ret
pop
jae
jg
jmp
loope
dec
inc
sti
adc
sbb
int
jg
test
xchg
lret
jmp
push
ja
sub
xor
out
mov
add
mov
test
pusha
xor
scas
mov
jnp
aas
jg
adc
adc
jbe
fimuls
xlat
aaa
rorb
inc
sti
mov
sbb
dec
sub
out
lcall
imul
pushf
fs
pop
pop
xchg
mov
jnp
inc
jae
mov
pop
xchg
sub
popf
inc
jge
sahf
jne
shl
or
and
inc
sub
dec
ja
fistpll
mov
js
jo
pop
loop
or
negl
xchg
sbb
fwait
outsb
dec
arpl
sbb
add
clc
fistps
cmp
or
push
fldl
cmp
mull
outsb
adc
ss
sub
out
enter
jg
cvtpi2ps
movsb
cmc
mov
scas
jbe
add
or
mov
xchg
sbb
mov
repnz
clc
idivl
or
sub
inc
push
or
jg
arpl
icebp
decb
dec
adc
mov
cmpsb
sub
mov
jp
pushf
das
aaa
dec
add
cmp
cmpsl
decl
sub
sbb
xor
les
cwtl
push
repz
incl
pop
repz
insl
jne
sbb
es
cmp
mov
ja
fistpl
xchg
pop
xor
insb
data16
fstpt
xchg
jg
fiaddl
call
std
inc
sbb
jmp
mov
loope
psllw
out
ja
fstps
insl
stc
or
and
sbb
xlat
jp
push
decl
outsl
cmp
ja
jno
sub
clc
mov
cld
in
mov
fst
enter
jp
or
jnp
loop
ds
or
fistpll
idivl
addr16
cs
pushf
loopne
outsb
cli
mov
test
sarl
cmp
bound
shlb
mov
fdiv
inc
xchg
jmp
ficomps
sub
mov
or
popa
daa
into
cli
jae
push
jo
enter
or
mov
jmp
rcll
sub
inc
mov
sbb
xor
pop
cli
ret
fiaddl
mov
push
inc
jge
xor
aas
fildll
das
stos
lods
cmp
dec
push
jg
or
aas
mov
imul
out
push
pushl
fisttpll
add
cld
dec
xchg
ja
mov
cs
mov
scas
cmp
lret
sti
ja
jl
push
js
cmp
bound
dec
inc
jns
aas
jae
ret
or
lcall
pushf
jo
popf
cwtl
jae
mov
xor
fnstsw
mov
adc
testb
xchg
jae
inc
mov
fdivrs
arpl
rolb
les
add
int
sub
cwtl
sbb
jno
ja
shrl
sub
jg
jno
lcall
ds
out
jp
cmp
sti
ljmp
push
adc
inc
pushf
scas
fmul
add
or
inc
bound
idiv
sahf
test
adc
cli
dec
mov
lcall
push
dec
xorl
fldenv
cli
ret
xchg
jbe
adc
incl
into
inc
out
mov
ret
fs
mov
inc
and
pop
xor
outsb
clc
and
push
or
div
jle
xchg
mov
in
inc
push
jnp
and
cmp
sbb
mov
roll
add
cmc
mov
mov
js
cmp
fistps
mov
xchg
pop
dec
pop
es
dec
push
push
mov
add
xor
rorl
or
popf
mov
leave
addr16
xlat
lahf
xor
ja
lcall
push
add
sbb
xchg
out
xor
inc
cli
lahf
fmul
ret
inc
sahf
out
pop
cld
lods
add
lret
clc
arpl
jne
jns
cli
mov
add
les
adc
pop
inc
les
push
jne
sub
cmc
pushl
popf
jb
mov
out
sbb
mov
pop
cmp
mov
addr16
or
mov
cwtl
and
lret
add
decl
xor
cltd
xchg
dec
dec
es
mov
loope
sub
les
std
out
icebp
pop
inc
or
fnsave
push
inc
jmp
push
lods
ss
into
push
xchg
push
mov
adc
add
xlat
sti
xor
mov
stos
mov
in
sub
shl
out
ds
data16
lods
mov
xchg
es
xor
dec
pop
jmp
jle
sbb
enter
cmpsl
mov
pop
push
jp
aas
clc
movsb
shrl
inc
cli
or
lret
xchg
sbb
mov
mov
sbb
xor
pop
push
push
cmp
sbb
outsb
fwait
mov
push
mov
arpl
dec
dec
jg
gs
ret
mov
addr16
dec
or
jp
or
ficomps
or
cs
inc
test
sahf
inc
lret
jecxz
mov
mov
insl
lcall
mov
xchg
cmpsl
and
dec
xor
test
sbb
pop
into
sysexit
dec
mov
jno
loopne
pop
push
fistpll
jmp
dec
stos
dec
inc
xchg
movsl
std
out
sti
insl
push
push
adc
adc
dec
cwtl
pop
push
cmpsb
mov
pop
mov
lods
add
pmaxsw
mov
sbb
fwait
pop
pop
dec
aas
push
out
jmp
jns
push
xchg
sub
sub
xchg
pop
push
jl
push
add
incl
out
mov
adc
push
xchg
adc
fisttps
jg
and
push
call
addb
out
push
jnp
cli
cld
outsb
mov
scas
inc
add
imul
shrl
lcall
jmp
jo
call
out
fistpll
into
ds
adcb
fdivp
cli
pop
fs
jmp
ljmp
sub
call
xchg
mov
lahf
icebp
aas
cmp
lret
pusha
add
ret
out
push
aas
divb
pop
mov
and
cmpsl
mov
jg
arpl
pop
inc
fs
pop
lods
jae
sti
jmp
or
rclb
movsb
in
jmp
int3
in
ja
addr16
fisubrs
mov
shl
jp
repz
gs
or
fcoml
adc
lds
jnp
in
mov
subl
mov
bound
mov
mov
push
mov
add
mov
dec
mov
jne
mov
ds
test
pop
jo
pop
mov
xchg
push
call
ja
jo
xchg
dec
divb
add
rcpps
xchg
cmp
cmp
adc
std
mov
in
cltd
mov
push
push
pop
sti
sti
cmp
mov
ret
push
cmp
gs
xchg
cvtps2pd
jmp
dec
popf
add
adc
cwtl
xchg
ljmp
divb
repnz
or
test
jae
incl
sub
insl
pop
in
cmp
adc
cmpsl
loope
sahf
data16
pop
test
dec
xchg
mov
add
lahf
or
arpl
pushf
add
nop
inc
loop
mov
fisttpll
out
ss
jns
das
out
fdivrp
sub
mov
jl
or
pop
push
mov
mov
jmp
insb
jae
shl
orl
popa
pop
stos
add
cli
cmp
imul
dec
test
ret
cmp
pop
adc
pop
repnz
xchg
mov
fisubs
mov
imul
addr16
daa
mov
cld
cwtl
fwait
imul
loope
mov
call
mov
mov
push
inc
pop
inc
insl
jno
leave
popa
call
pop
adc
sahf
out
push
std
in
scas
repz
fwait
push
jno
push
cmp
sbb
frstor
in
xchg
nop
xorl
pop
jmp
dec
pop
mov
outsl
adc
je
lcall
pcmpeqw
cmp
lock
jb
inc
sahf
mov
push
mov
jg
adc
pusha
cwtl
arpl
fidivrl
fistpll
divl
inc
inc
add
rcl
push
out
ljmp
xchg
jbe
iret
std
fsubr
and
add
mov
outsb
popa
loopne
ret
je
lea
outsb
cs
jne
in
fnstsw
mov
add
push
lahf
orl
loope
pop
minps
test
mov
ja
lahf
shlb
out
pop
add
jne
pop
lahf
lock
imul
adc
adc
sub
pop
repz
pop
jb
ss
adc
mov
pusha
cwtl
test
pop
pop
stc
mov
loopne
stos
loope
popf
push
mov
or
mov
out
and
ret
jmp
out
repnz
mov
push
adc
cmp
or
cmp
cmp
jl
xor
aam
int
sbb
cld
loope
ret
dec
rcll
decl
sub
rcll
dec
in
mov
jecxz
daa
or
popf
inc
andb
jg
int3
push
inc
adc
jl
and
xor
sub
jnp
imul
das
pusha
and
pop
jp
push
pop
cmpsb
test
dec
mov
std
mov
jmp
inc
and
or
xor
jmp
mov
in
out
cmc
dec
cmc
xchg
imul
cmp
les
aas
fsubp
movsl
fs
rcrl
jmp
ret
imul
xchg
sbb
lods
add
mov
adcb
mov
cmp
mov
pop
idiv
fildl
mov
fists
repz
lods
push
popl
or
stos
mov
mov
pop
fnstcw
fstl
mov
mov
aam
sbb
scas
rolb
aam
jmp
push
hlt
setle
ss
pop
pusha
add
call
inc
mov
lea
xor
sbb
add
add
jae
jecxz
mov
push
push
jecxz
push
insb
mov
mov
rcl
mov
jmp
mov
sbb
std
inc
popf
ret
mov
mov
cmp
pop
scas
sbb
scas
rorl
outsl
scas
out
fdivrl
sub
fcoml
adc
pop
idivl
shrl
add
pop
fs
mov
decl
imul
dec
rcl
jno
dec
insb
leave
fxch
sbb
imulb
and
push
inc
out
lock
mov
fldenv
jle
jp
daa
in
jnp
inc
cli
push
or
inc
rorl
enter
mov
decl
clc
push
lea
int3
clc
xor
cli
and
sbb
dec
shll
lret
das
push
in
enter
stos
lock
adc
jg
xor
or
and
daa
cmp
jl
lret
xlat
xchg
inc
lds
in
arpl
jno
mov
push
mov
sti
fistps
lret
push
shlb
sub
pop
imul
jle
idiv
sbb
out
add
das
cltd
mov
or
das
loopne
addb
icebp
fisttpl
test
inc
inc
adc
ljmp
add
fnclex
shll
pop
out
movsb
outsl
mov
mov
inc
cmpsb
adc
test
mov
ja
or
and
andb
mov
mov
mov
mov
dec
cli
fdivl
iret
sub
sub
pop
popl
out
out
sub
les
leave
jg
iret
outsl
vpmacsdqh
pop
and
iret
repz
mov
fxch
pop
clc
aad
jmp
int3
cmc
xchg
bound
lcall
clc
cmpsl
sbb
push
pusha
pop
cmp
mov
incl
loopne
lret
sbb
out
std
popf
mov
push
mov
loope
mov
mov
sub
rcrb
sahf
and
stos
jno
xchg
dec
mov
aaa
push
cmp
sub
push
cmp
adc
pop
iret
mov
push
call
mov
inc
popf
movsl
push
pusha
xor
push
je
aaa
jl
das
mov
data16
fstps
dec
mov
leave
inc
mov
das
std
mov
jge
std
pop
push
mov
and
ja
jg
sti
lods
lcall
sub
xor
fs
pop
arpl
dec
or
inc
leave
lahf
sub
cltd
mov
fdivrp
fbld
out
mov
push
filds
popf
sub
jo
lds
scas
mov
mov
push
sbb
xor
aad
and
popf
sub
pop
fistps
test
and
adc
adc
lock
imulb
fdivrp
jnp
aas
xchg
loope
stc
mov
mov
push
jmp
loop
daa
into
dec
fidivl
movsb
or
ss
cmp
das
xchg
lahf
inc
stos
and
test
inc
hlt
mov
or
add
or
cmp
idiv
add
xchg
pushf
cmp
or
fdivrl
cmp
testl
nop
shll
lret
cmp
mov
aas
or
push
cmp
out
fcompl
popa
dec
jmp
dec
cmp
xchg
scas
ja
mov
push
pop
and
lcall
test
adc
jge
cld
loope
pushl
out
int
mov
mov
loopne
push
fdivrs
push
mov
push
adc
jnp
in
sub
xlat
add
pop
daa
in
add
out
sar
fidivl
sbb
int3
test
hlt
lahf
jae
sub
addr16
movb
lds
cmp
daa
pop
nop
stos
adc
pusha
addl
dec
cli
jg
test
push
loopne
xor
xchg
inc
pusha
scas
clc
mov
mov
sbb
xchg
out
cmp
and
mov
rcr
and
ss
hlt
lcall
cmp
decl
pop
xchg
shlb
xor
jge
xchg
incl
cmp
std
adc
ja
dec
add
sbbl
jle
jo
lcall
mov
jg
cmp
ret
inc
dec
std
insl
adc
jge,pt
or
fidivs
in
ja
mov
jne
rcrl
adcb
jg
sbb
cmc
js,pt
xor
or
lock
test
mov
lret
into
je
test
int
or
fstps
fidivs
xor
fidivrs
lret
lcall
inc
lods
incl
jp
or
inc
imul
cmpsl
mov
out
out
aas
pop
adc
push
and
jnp
lcall
sub
sbb
repz
in
sbb
out
andl
cli
pop
xorb
stos
idiv
pop
insb
hlt
cli
jo
in
and
jle
adc
and
jg
mov
fnstcw
and
inc
je
dec
mov
clc
dec
xchg
testl
ja
stos
add
xor
add
cmc
jmp
xor
in
loop
mov
sahf
jb
repnz
cmp
mov
movsb
mov
xlat
aas
sbb
js
pop
lret
popa
cltd
cld
mov
sti
ljmp
mov
add
aam
mov
xchg
push
pusha
movsb
mov
orl
lods
mov
int
xchg
push
pop
stc
cmp
xchg
aas
jge
lahf
loopne
rcr
adc
rclb
test
xchg
xchg
cmp
xor
stos
push
fiaddl
or
clc
adc
icebp
mov
and
lock
pop
or
pop
mov
xorl
dec
xchg
mov
dec
dec
xor
push
aaa
movsb
fidivrl
or
notl
pushl
fistps
aaa
int
mov
push
sbb
int
cmpsl
add
idiv
add
mov
or
push
and
sub
lahf
hlt
fistps
xor
xor
or
mov
jle
or
cs
pop
pushl
movsb
jns
cmc
or
fnstsw
jbe
jg
fistps
cmpsb
xor
out
out
ljmp
xlat
mov
repnz
daa
icebp
test
scas
testb
loope
inc
sub
cli
js
mov
ja
sbb
add
mov
loopne
inc
jno
cmp
jns
stos
idiv
mov
dec
and
or
and
xor
and
call
jg
loop
jo
int
in
repz
fcos
lret
push
add
ja
jo
xchg
pop
arpl
cld
adc
add
xor
push
adc
xor
negl
out
dec
push
in
dec
pop
insb
inc
and
push
insl
hlt
ret
cmc
fucomp
mov
xorl
std
sbb
mov
lahf
lahf
inc
inc
mov
adc
jecxz
lcall
pop
lock
mov
xlat
or
out
enter
push
push
call
cmp
xchg
lcall
dec
mov
pop
xor
les
xor
jmp
in
sbb
testl
ret
imul
pop
shll
fs
or
sbb
mov
sub
sahf
mov
inc
mov
test
ret
cld
inc
cmp
and
pop
pushf
and
adc
lret
xchg
lret
dec
das
stos
and
mov
lds
mov
out
dec
aaa
cli
out
lods
rorl
mov
and
pop
js
add
repnz
repz
mov
rcrl
movsb
and
mov
push
mov
mov
mov
dec
jl
xchg
and
add
and
bsf
xor
or
cmc
or
pop
gs
cs
das
cmp
hlt
add
bound
dec
daa
jbe
mov
mov
add
in
adc
pop
mov
xchg
push
cmpsl
jnp
fwait
cmc
inc
jp
scas
lock
bound
cmp
fnstcw
aam
push
paddsw
cmpsl
hlt
loopne
and
mov
loop
mov
xchg
sbb
mov
out
cmp
std
arpl
dec
sub
sbb
xor
and
push
stos
mov
sub
gs
rorb
jl
lds
or
cmp
cmp
jb
arpl
shrl
insl
jmp
adc
pop
std
cli
fwait
int3
pop
and
push
cmp
or
sbb
xor
leave
add
aaa
lahf
loopne
sub
jecxz
xchg
aad
adc
adc
cmp
roll
add
jb
shr
insl
std
fcoml
jbe
inc
fmulp
inc
jle
testl
aas
jne
divb
fdivl
testb
mov
lods
lcall
pop
fprem1
xor
jo
and
daa
div
jmpw
or
movsb
mov
and
jnp
or
cmp
and
dec
cmpl
in
or
insb
cmp
fistpll
ds
js
shlb
adc
insb
in
inc
shlb
mov
or
stos
es
add
imul
sarb
xor
negl
test
dec
enter
ret
jg
clc
cmpsl
outsl
pop
cltd
and
add
lret
cmpl
mov
dec
into
pop
mov
movsb
in
push
std
cmpsb
inc
aas
adc
rsm
push
cld
jg
lahf
aam
dec
nop
jo
or
pop
sahf
std
inc
aas
xor
cwtl
into
sub
adc
std
out
fimuls
mov
ja
cmp
adc
sarb
dec
aaa
xchg
pushl
in
cs
inc
cs
rol
jnp
cmp
jnp
xchg
adc
addr16
add
std
ja
pmulhuw
int
or
shll
fisttpll
cmp
ficoml
cmc
xchg
xor
push
rorl
dec
sub
mov
push
jnp
jmp
cld
pop
js
das
mov
xorb
setno
xor
mov
inc
push
fdivl
push
cs
xchg
into
cltd
repnz
dec
sti
mov
jmp
popf
jnp
pop
mov
and
cmp
or
jo
or
xor
ret
js
mov
lods
cmc
or
push
loopne
cmp
sub
fsubs
outsb
push
push
cmp
divl
dec
leave
mov
leave
lock
inc
loopne
out
into
mov
scas
mov
inc
pop
pop
cli
cmp
xor
or
mov
cmpsl
sbb
lahf
xchg
xorl
mov
jmp
sub
ret
xchg
ret
push
lods
push
pop
inc
testl
aad
aad
lsl
pop
roll
fstpt
sti
ss
sbb
aad
movb
mov
pop
mul
rcrb
subl
outsl
push
sub
jmp
or
jp
addr16
shrb
dec
or
fmul
mov
sbb
sarb
inc
pusha
out
xchg
push
test
ffreep
cli
inc
jns
xchg
xchg
ret
cmpsl
pop
cmp
mov
push
imul
push
es
lcall
shrl
stc
pop
mov
ret
sti
lock
pop
mov
out
fmull
jle
imul
mov
pop
lcall
mov
and
dec
popa
fildl
dec
xchg
insl
adc
inc
pushf
arpl
clc
pop
in
outsl
mov
xor
pop
pop
add
xor
gs
pop
mov
rcrb
adc
int
lods
cld
out
shlb
xchg
or
dec
cmpsl
mov
jecxz
movsl
mov
sub
in
cmp
mov
test
xor
int
out
bound
push
push
lds
cli
jne
imul
ja
mov
movsl
outsb
sbb
dec
scas
sbb
adc
inc
iret
subl
das
les
fwait
mov
stos
pop
jmp
push
dec
sbb
mov
mov
fsts
sar
loop
rcrb
pusha
jmp
pop
jb
sbb
jno
mov
aas
callw
bound
sbb
add
ffreep
stos
xchg
and
xchg
mov
jg
sarl
dec
test
jle
mov
mov
sbb
add
es
repnz
ret
aas
xor
pop
ljmp
fsubrl
ja
pop
std
pop
out
push
pop
in
outsl
xor
in
js
cltd
adc
leave
vpmacssdql
or
ret
jmp
dec
sub
cld
pushf
inc
sbb
dec
jmp
ror
imul
andl
nop
cmp
movsl
loop
negb
fidivs
test
jae
nop
in
ja
clc
insl
and
pusha
stc
sub
ljmp
mov
pop
in
les
into
lcall
out
ficoms
addr16
adc
jecxz
fdivr
loope
mov
mov
ds
and
pop
mov
cmp
jb
push
dec
mov
mov
fildll
andl
movsl
test
lods
cmpb
mov
loop
je
lock
je
mov
xchg
bound
out
sub
jae
and
ja
mov
mov
inc
in
add
push
mov
test
push
sub
popf
mov
mov
inc
insl
jl
jg
outsb
aad
mov
xchg
and
loope
sarl
jmp
subb
push
lds
call
arpl
add
addb
jp
inc
xchg
mov
clc
xchg
clc
pop
out
dec
out
mov
fdivrs
stos
jg
xor
fs
ret
cmp
nop
xor
inc
test
xor
cld
aas
xchg
mov
inc
push
cmp
mov
imul
out
dec
xchg
mov
jns
mov
testb
fldpi
xchg
popf
push
adc
inc
push
out
add
fdivrp
pop
jle
fcompl
mov
clc
in
jnp
fbld
scas
inc
lea
adc
ja
jae
rcrb
jne
add
into
or
mov
jg
xchg
ret
xchg
ljmp
cmp
mov
xchg
lods
out
push
push
test
fs
cli
xor
fstps
xchg
jecxz
cs
pop
pop
dec
pop
cmpsb
mov
jge
lods
dec
mov
cli
mov
add
mov
jecxz
sbb
arpl
outsb
aaa
pop
loopne
push
push
and
xchg
push
jg
aam
xor
loope
das
stc
hlt
mov
xchg
pusha
fndisi(8087
mov
and
mov
mov
pop
and
jmp
add
pop
pop
cmpb
aas
loopne
sub
fwait
mov
jne
pop
int3
lds
inc
add
xor
add
mov
add
je
xchg
mov
in
xchg
lods
and
sbb
mov
inc
mov
mov
jg
stos
ljmp
adc
adc
xor
mov
std
pop
add
arpl
popa
insb
pop
cmp
loope
and
xor
gs
xchg
and
jns
jmp
fsubp
out
scas
pop
insb
xor
lea
pushl
mov
das
dec
fld
cmpb
aas
mov
and
jp
inc
js
cli
cmp
jge
mov
cld
decl
imul
ja
clc
and
adc
pop
fmulp
clc
mov
pop
mov
loop
xlat
test
sti
maskmovq
jne
mov
out
mov
mov
popf
mov
gs
pop
push
loope
sbb
cmp
sbb
js
stos
mov
and
mov
jns
jo
inc
pop
shrb
aad
scas
fnstsw
inc
imul
je
cmpb
mov
aas
aas
testb
or
lds
jl
lret
aad
test
in
or
and
xchg
pop
rorl
sbb
xchg
inc
jbe
add
mov
ja
push
xor
lods
out
jo
inc
lret
imul
or
xchg
out
xor
cs
mov
loop
js
fbstp
jae
mov
mov
movsl
inc
call
popf
and
inc
rclb
imul
xor
fcomi
jae
lds
call
mov
add
cmc
negb
aam
subl
cmp
cmpb
gs
popa
mov
lock
aas
cwtl
shl
insl
jb
ror
jp
pop
xchg
ss
adc
mov
hlt
lcall
sub
movsb
aad
cli
xchg
fucomp
pop
gs
mov
shll
jmp
cmp
out
mov
fsub
mov
or
out
and
pop
mov
pop
and
adc
pop
bnd
jg
clc
out
mov
pop
push
lret
or
xchg
fisubrs
xchg
in
pop
ss
loope
outsl
sbb
xor
test
incl
adc
ror
les
dec
dec
sub
ljmp
cmc
and
das
xor
lock
outsb
dec
dec
and
test
loop
out
mov
xorl
lret
fwait
xchg
and
jg
lahf
aad
mov
dec
mov
jmp
mov
and
lods
xor
or
pop
cmp
xor
cmpsb
mov
push
xchg
sub
into
inc
std
out
push
sub
mov
test
and
fdivrl
jl,pn
lcall
xchg
clc
cmp
dec
push
inc
adc
sar
rcrb
xchg
test
pop
push
cmpb
out
add
mov
je
mov
std
push
sbb
cmp
jg
xorl
test
loop
mov
pop
dec
test
hlt
xchg
ret
add
or
cmp
loop
jno
arpl
cmp
cmp
adc
dec
int
and
pop
int3
xchg
xor
sti
add
pop
cmp
inc
xchg
rep
js
jle
clc
incl
dec
mov
adc
das
fisubrs
add
vandpd
fs
sbb
insl
dec
jbe
outsb
inc
mov
xchg
mov
dec
ffreep
lcall
pop
stos
data16
lret
pop
mov
sub
mov
or
stc
cwtl
jnp
add
inc
jmp
ret
stos
mov
adc
or
mov
daa
call
mov
mov
cmp
pushf
in
mov
jg
jecxz
xor
movsl
mov
mov
notl
mov
mov
pop
movsb
jg
aas
and
mov
lock
add
add
pop
popl
push
jae
fisubrs
jo
shrl
xlat
mov
outsl
jns
cmp
jg
test
loopne
push
cmp
add
cltd
mov
cmp
aad
jge
xor
jg
imul
inc
pushl
cmc
xchg
lret
xchg
push
and
rcl
fstl
incl
add
mov
sub
imul
adc
in
mov
mov
andb
and
and
test
xchg
push
inc
sbb
enter
mov
hlt
rcrl
outsl
mov
in
ret
dec
or
arpl
loope
cmc
call
stc
dec
insl
jno
gs
mov
and
hlt
pop
subb
addr16
or
or
loope
dec
cmp
clc
pop
fdivr
arpl
loope
mov
xorb
sub
arpl
mov
add
and
aas
mov
sub
sbb
and
les
add
fmull
loop
sbb
mov
and
jnp
ja
pmuludq
jne
pop
cld
out
jnp
push
aaa
jno
repz
les
jmp
out
lock
pop
inc
xchg
pop
or
outsl
sub
xor
fdivrs
loop
ret
shlb
rcll
lcall
in
daa
es
xchg
cmp
addb
cli
xor
scas
enter
add
adc
incl
pushf
jle
aam
fidivrs
sub
inc
pop
xor
lcall
lcall
in
fucom
mov
int
push
in
sti
mov
sbb
ret
stos
jnp
sub
stos
imul
pop
test
decb
dec
test
sbb
mov
sbb
les
orb
cli
xor
dec
pop
mov
or
out
sbb
jmp
mov
jle
adc
xor
mov
cmp
aad
out
ja
jle
and
scas
jge
xor
mov
out
icebp
mov
sub
cltd
mov
xchg
sub
clc
ja
mov
aas
pop
pop
cs
sbb
cmpl
push
sbb
js
scas
cld
sbb
pop
inc
jno
and
in
aad
data16
pop
aas
push
sti
cld
jp
xchg
or
push
inc
sti
pop
int
in
test
cmp
xlat
iret
cld
decl
lods
daa
leave
adc
xchg
arpl
call
hlt
sbbl
inc
test
lods
or
rcrl
mul
stc
push
sbbb
adc
int3
js
test
js
hlt
dec
arpl
popf
sti
daa
negl
or
sub
pusha
insb
stc
mov
clc
pop
cmc
cld
rorl
jmp
adc
in
push
clc
mov
cld
jg
data16
arpl
dec
repnz
inc
mov
lret
ja
mov
adc
jnp
lock
loope
fimull
daa
mov
and
pop
fidivrs
cmp
sbb
iret
and
sbb
mov
sbb
loope
outsl
std
fbld
ds
sbb
mov
addr16
pusha
pushl
iret
cmpsb
cmp
and
add
mov
ja
repz
scas
jns
out
loope
xor
scas
jecxz
lcall
dec
jmp
ja
mov
xor
or
loope
pop
std
shll
sbb
out
leave
icebp
int
sbb
dec
or
shl
and
or
or
inc
jae
dec
les
add
adc
jb
add
pop
stos
adc
aam
popf
stos
testb
loop
scas
pop
cmp
mov
loopne
lret
loopne
mov
cld
jmp
aad
icebp
and
shll
pop
psrad
mov
scas
std
dec
ljmp
in
fmull
outsb
add
fwait
and
cltd
test
mov
rcrb
adc
xor
jae
xchg
adc
inc
mov
mov
mov
incb
and
fcomi
out
adcb
idivl
in
mov
imul
pop
and
int3
push
push
fistpl
repnz
lock
xor
movb
mov
mov
mov
ljmp
push
aas
out
ljmp
cmp
sub
loop
sti
icebp
incl
or
imulb
out
rolb
jl
clc
out
outsb
cltd
push
pusha
lret
sbb
bound
insb
sub
test
sbb
shl
inc
test
adc
stc
pop
popf
in
lcall
nop
in
jb
adc
lret
xor
loop
fbld
cld
or
sub
push
call
cs
or
lock
ljmp
jg
movsl
or
in
or
into
add
divl
rcr
mov
mov
scas
xor
out
aas
dec
lret
or
sbb
out
std
decl
ret
fisttpl
fcomps
es
mov
icebp
call
stos
or
cli
xor
enter
sbb
adc
adc
add
and
sub
loopne
rcll
leave
cmp
pop
adc
add
imul
sbb
inc
dec
cmp
in
inc
pop
bound
sub
mov
cmp
cmp
pop
fldt
push
add
push
iret
cli
cmpsl
rcrl
lcall
sbb
dec
xchg
cli
outsl
out
js
mov
add
loop
mov
es
rolb
sub
roll
ds
and
fstl
ret
push
shrb
test
and
and
sbb
mov
in
leave
and
jle
loop
imul
adc
or
xor
sub
loopne
out
in
xchg
dec
mov
inc
clc
or
mov
aas
inc
mov
fimuls
pushf
push
cmp
add
mov
cli
invd
mov
repz
dec
rcl
test
sbb
loop
or
mov
cs
out
mov
pop
out
sub
mov
cmp
pop
test
and
pop
aaa
dec
jb
xor
aas
push
cld
xor
xor
mov
mov
cmpsb
mov
mov
jecxz
adc
ja
sarb
sub
popa
jb
aas
inc
fisubs
and
scas
shl
xor
dec
ret
adc
dec
adc
ss
push
adc
cmp
push
divl
ret
cmp
sbb
xor
paddd
pop
add
adc
xor
shlb
js
ss
ja
addr16
mov
and
dec
pop
xor
and
les
aam
arpl
mov
mov
or
cld
ret
xchg
ret
loope
xor
cmp
add
jne
sahf
movsb
jmp
loop
jecxz
pop
stos
out
dec
paddd
fdivr
adcb
and
orl
cli
in
in
sbb
xchg
add
mov
comiss
cmp
inc
lcall
cmp
loope
dec
jns
sbb
jg
jmp
insl
scas
imul
mov
cmc
cmp
imul
in
ficompl
adcb
pop
fists
and
inc
inc
fsub
inc
vcmpss
fadds
xlat
movsb
xor
jg
pusha
jmp
aaa
dec
dec
xchg
jb
inc
call
sbb
and
mov
jg
cmp
test
cmp
mov
std
xor
notb
mov
mov
notl
lahf
jns
lds
sub
or
xchg
add
cld
outsl
andb
or
push
mov
fucom
aaa
pop
mov
lea
sti
loopne
jg
or
out
in
xchg
fdivr
inc
mov
adc
mov
incl
rol
xor
call
cmpsl
add
test
and
mov
cmp
fisttps
sub
cli
mov
int
arpl
add
fisttpll
mov
sub
insl
pushl
sbb
add
sub
jl
jecxz
adc
shll
mov
add
fwait
push
out
sbb
pop
add
ss
lock
loopne
lock
jne
mov
pop
stc
sbb
aad
jo
jl
ds
sub
subb
adc
inc
xchg
scas
mov
test
mov
inc
loop
pop
imul
ja
cmp
frstor
xchg
adc
add
ljmp
outsb
clc
dec
sub
lahf
pop
xchg
test
cmp
and
add
mov
faddp
push
xlat
stc
cmp
rolb
push
or
outsl
jnp
decl
adc
inc
push
push
repz
outsb
movsl
sbbl
mov
dec
add
pop
adc
sub
or
decl
test
imul
jo
sbb
and
xor
out
push
jno
sbb
or
test
mov
cmp
lret
inc
sub
mov
mov
clc
mov
in
repz
jbe
pusha
push
xchg
pop
icebp
loopne
mov
pusha
push
test
ja
pop
std
fwait
or
pop
shlb
call
dec
jle
inc
push
dec
cmpsl
aad
lret
mov
pop
push
into
add
pop
movsb
decl
aam
mov
pop
xchg
or
icebp
cmpb
bound
test
sbb
mov
mov
icebp
aas
pop
cmc
push
mov
push
icebp
sti
popa
shrl
cmpsl
sti
pop
cmpb
shrl
jmp
hlt
cltd
inc
loopne
push
mull
jb
push
jnp
inc
inc
hlt
lock
jl
shlb
cmp
pop
mov
mov
pop
gs
into
aas
add
adc
cmpb
jmp
inc
fnstcw
mov
dec
dec
outsl
loopne
outsl
jg
imul
arpl
fsubrl
sar
out
std
push
pop
pop
lea
adc
dec
sbb
xchg
adc
ja
push
clc
inc
repnz
dec
cltd
lods
enter
jmp
mov
mov
inc
aaa
and
pop
rorl
fstpl
adc
inc
mov
sub
loope
and
jmp
enter
fidivrs
loope
in
rorb
idivb
insb
xchg
aas
pushf
xor
aas
outsl
sbb
pop
lret
dec
mov
push
push
xor
jne
mov
jge
out
shll
outsb
arpl
mov
or
push
outsb
cmpsl
icebp
fucomip
fmul
addr16
in
loopne
or
lcall
mov
pop
pop
test
hlt
pop
ret
cmp
mov
sub
int
or
mov
push
repnz
xchg
lods
sbb
lock
loopne
xchg
cmpl
xchg
xchg
lahf
sub
mov
pop
mov
mov
mov
pop
inc
insl
ret
loopne
cmc
je
ljmp
push
sub
fists
jp
xor
push
mov
jo
lods
mov
lret
loope
mov
iret
addl
sets
jno
movsb
lcall
lcall
lock
sub
incl
js
jbe
inc
mov
imul
inc
sbb
pop
sbb
pop
lods
out
dec
enter
push
cmc
mov
mov
cmp
add
jns
addl
mov
push
ret
popf
decb
pop
movsb
push
jb
cmp
inc
rep
mov
fisttpl
fistl
aas
mov
push
movsl
out
xchg
or
jp
sub
ljmp
or
mov
inc
adc
mov
cld
out
lock
sbb
jbe
lcall
or
mov
dec
inc
jo
mov
jne
pop
sbb
aas
pop
dec
and
int3
outsl
jp
ret
leave
adc
in
testl
mov
jp
jae
mov
addr16
adc
pop
jns
push
imul
and
call
add
jle
inc
push
insb
mov
or
jp
push
sub
mov
mov
cmc
dec
mov
jl
in
push
mov
cld
adc
and
xchg
lahf
lret
iret
dec
jg
pop
add
jns
adc
insl
jno
popl
imul
pushf
jle
jge
loope
jb
add
lahf
sub
insl
jp
cmp
in
je
ja
scas
fs
ja
jg
mov
ficomps
ret
or
bound
cli
pop
hlt
cmp
jb
mov
call
insb
stos
push
adc
fucom
clc
gs
lds
jg
sub
push
popa
jno
push
pushw
sub
xchg
adc
fwait
int
into
jg
add
fldcw
xchg
add
or
out
sbb
pop
xor
push
sti
mov
out
aas
cmp
mov
cmp
js
inc
sub
out
cld
ja
jg
rorb
inc
sbb
testl
inc
sbb
pop
movsb
jmp
data16
mov
inc
pushf
dec
pop
dec
inc
maskmovq
idivl
icebp
sub
cs
sub
push
hlt
and
jg
clc
fsubrs
addr16
lock
inc
aas
push
jbe
arpl
sub
fdivrl
fiadds
push
mov
cld
mov
mov
decl
sbb
lret
cld
nop
sub
hlt
es
cwtl
ljmp
rolb
nop
pusha
std
mov
aas
mov
jge
push
aad
xchg
dec
movsl
out
loop
push
das
gs
push
in
jmp
xchg
data16
pop
imul
das
jg
add
punpckhbw
push
fs
clc
ss
xor
mov
push
adc
xlat
mov
jmp
jmp
mov
lds
mov
sub
aad
and
stos
scas
pop
xor
lret
xor
mov
jg
pop
sbb
inc
or
pop
sbb
jno
out
mov
lret
nop
xchg
and
enter
mov
lods
mov
cmp
das
mov
dec
in
add
std
mov
cli
ret
jo
pushf
or
ficoms
inc
scas
jg
clc
iret
lret
xor
pop
and
mov
into
incb
jp
mov
outsl
mov
adc
aas
cmp
gs
ret
xor
std
pop
sbb
jbe
iret
shlb
inc
and
sti
fbstp
adc
aaa
push
dec
and
lods
push
mov
loope
mov
neg
sbb
mov
xor
jle
mov
and
xorb
push
cmp
pop
ret
push
xchg
pusha
jg
jecxz
shr
aas
icebp
enter
mov
pop
addr16
cld
dec
cltd
ss
push
sub
mov
call
roll
mov
icebp
shl
mov
mov
repnz
loopne
aas
jmp
mov
sahf
jg
cmp
jl
daa
jb
inc
mov
std
stos
push
dec
jb
or
or
lahf
or
cmp
lcall
and
sub
xor
jnp
sub
pop
stos
loop
jmp
loopne
fwait
les
jb
add
fildl
fcomp
inc
pop
push
movsl
dec
lret
cmp
sahf
arpl
pop
cld
and
mov
mov
fisttpl
fwait
stos
dec
mov
fwait
test
adc
pop
lock
outsl
xor
cmp
jg
or
jbe
cmp
xor
mov
mov
pop
in
arpl
scas
stc
cmpb
jmp
pushl
push
test
jmp
mov
out
push
in
push
mov
dec
mov
hlt
push
fmull
inc
xchg
lea
loop
cld
fdivr
sub
sub
push
jecxz
call
adc
jnp
sbb
or
das
into
sbb
fadds
in
xor
push
stos
aad
iret
inc
pushf
xchg
enter
ljmp
int
insl
stos
cltd
pop
or
aaa
mov
ljmp
lea
xchg
popf
fwait
sub
mov
add
cld
dec
lret
imul
das
stc
mov
sub
sub
sti
rcr
js
mov
mov
push
roll
add
mov
or
popa
mov
dec
jg
push
sbb
xchg
jle
adc
and
push
and
mov
scas
call
xor
xchg
cwtl
test
stos
mov
or
lea
test
hlt
pop
add
cmp
fdiv
ja
adc
enter
push
sub
sub
pushl
and
nop
mov
sub
push
icebp
jg
xor
dec
mov
and
dec
adc
aad
iret
repz
das
mov
hlt
mov
ds
pop
js
das
sub
movsl
testl
or
ret
lods
mov
call
xor
adc
add
enter
lock
sub
jne
jecxz
mov
mov
decl
xchg
pop
sub
ror
push
loop
out
bound
jae
mov
dec
popl
cmc
pop
or
seta
push
fistps
mov
icebp
xor
xor
or
hlt
std
pushf
inc
jmp
sbb
mov
sbb
or
call
mov
ja
mov
andb
pop
or
sahf
cld
out
mov
mulb
pop
int3
std
push
lcall
push
data16
cwtl
push
sbb
ljmp
or
cmpsb
loope
ja
mov
aaa
mov
fs
fyl2xp1
mov
loop
test
lret
aas
cmp
xlat
and
into
fidivs
mov
push
pop
scas
push
inc
cs
fcomip
std
sbb
add
mov
push
push
arpl
cmc
lcall
jmp
xor
mov
and
jmp
jmp
loope
or
jg
sahf
fnstenv
mov
pop
incl
std
push
fmuls
cmpsb
adc
ljmp
testl
fcompp
iret
dec
negl
decl
test
out
testb
push
std
outsb
imul
xor
or
dec
mov
sub
jg
loop
hlt
test
cmp
nop
pop
outsb
cmp
addr16
xchg
push
testl
pop
lcall
cmp
cmc
fiadds
repnz
repz
in
cmp
xchg
xor
in
stos
mov
in
xchg
mov
push
pop
mov
mov
js
mov
inc
les
jb
or
in
cmc
aas
gs
icebp
or
jmp
and
or
mov
pop
aas
int3
scas
fdivrp
lock
aam
aam
cltd
dec
aas
inc
xor
mov
cltd
cmpsl
xor
repnz
jecxz
mov
push
inc
out
hlt
cmp
jmp
sub
xchg
and
adc
inc
loop
inc
notl
adc
mov
sbb
xchg
pop
sar
xchg
xchg
in
call
jmp
or
fsubrl
adc
lods
fcomip
pusha
sbb
mov
icebp
jle
inc
pop
int3
push
mov
test
fdivrs
clc
sbb
clc
mov
push
jge
mov
add
popa
or
push
loopne
add
mov
pop
in
std
outsl
lds
leave
out
vpmuludq
push
sbb
pop
mov
sbb
dec
lock
jne
xchg
dec
dec
call
adc
xlat
jmp
repz
pop
and
into
cmpb
pop
jecxz
bound
push
mov
iret
jge
fsubp
mov
aas
xchg
mov
mov
std
mov
jg
std
neg
mov
xchg
icebp
mov
fcomps
jecxz
inc
mov
xor
lret
mov
js,pt
in
das
pop
movsl
iret
std
fistpl
icebp
jo
aad
mov
push
dec
mov
call
aam
fs
dec
std
jge
dec
fimuls
add
push
lds
das
push
lcall
or
enter
jle
and
call
mov
mov
int3
dec
andl
out
push
adc
mov
jnp
dec
aad
aam
clc
xor
inc
lahf
cmc
pop
mov
pop
cmpl
sub
das
xor
cmc
jne
ljmp
cld
sarb
leave
cli
dec
in
pop
xor
mov
sub
mov
cmc
enter
adc
cmpsl
lret
mov
repz
paddw
or
sub
push
lock
sbb
loopne
sbb
jmp
aas
scas
fs
aam
sub
add
addl
das
xor
or
aas
push
inc
scas
sub
js
lock
pushl
jo
jle
jmp
mov
mov
popa
test
push
push
inc
clc
stc
mov
std
jae
sti
sbb
adc
outsl
out
outsl
hlt
scas
in
dec
shrb
scas
test
ljmp
out
dec
pushf
stos
lods
repnz
clc
adc
daa
enter
addr16
sbb
add
sbb
adc
pop
aad
setae
cwtl
cmp
aad
daa
mov
add
xor
iret
popf
cmp
sub
inc
xor
jg
fdivrs
fcompl
sti
push
lahf
adc
aas
filds
outsl
sub
shlb
negb
xor
ljmp
adc
cmp
int3
fdivrp
loopne
ret
sbb
inc
imul
lods
xor
cmc
jp
jae
iret
mov
mov
push
lds
js
jecxz
jg
sti
pop
in
lret
or
repnz
adc
mov
lcall
pusha
sahf
lds
repnz
add
icebp
jg
jmp
push
fsub
mov
mov
lret
jns
cmp
mov
sbbl
ja
aas
xchg
repnz
out
rorb
jbe
mov
subl
and
outsl
sbb
jp
jg
incb
xor
call
mov
jle
into
jecxz
xchg
int
fwait
mov
jle
jp
inc
mov
and
loope
rcrl
sub
fscale
lahf
es
into
xor
xor
jmp
mov
fisubrs
add
fiaddl
push
daa
mov
outsl
test
and
inc
sti
or
subb
mov
decb
rolb
int3
hlt
pop
add
in
repnz
sti
adc
fnstcw
pop
push
cmp
add
out
or
clc
cmp
dec
jo
xchg
sub
mov
inc
xchg
cmp
jge
and
mov
jl
inc
dec
mov
pusha
jmp
dec
lods
xor
out
pop
clc
cmpxchg
adc
dec
mov
xor
addr16
mov
add
clc
push
sub
mov
adc
pop
movsb
cltd
xchg
xor
lds
shrl
pusha
lods
popf
call
test
stc
and
or
jno
adc
pop
aad
cld
scas
ret
aas
mov
mov
shrl
fildll
cmp
cmpsl
int3
nop
inc
adc
mov
sub
mov
push
sbb
or
dec
in
out
dec
addb
sub
dec
aas
push
scas
test
aaa
mov
loopne
enter
cmp
leave
fisttpl
aas
pop
int3
cwtl
shlb
mov
icebp
jle
sub
movb
aas
sbb
testl
divb
popf
popf
push
ret
sti
jg
out
sub
and
lds
pop
sub
popa
xor
inc
stos
cmpsb
mov
mov
cmovb
push
movsb
jbe
outsl
ret
pop
leave
push
dec
push
push
rcrb
icebp
ret
mov
mov
push
icebp
mov
xor
mov
inc
mov
psubd
mov
into
pop
in
jbe
xlat
pop
mov
xlat
in
push
loope
lea
fwait
cmpb
mov
dec
loopne
dec
loopne
jae
imul
pop
pop
hlt
adc
push
call
mov
cs
test
pushf
std
sbb
fucomip
mov
sub
int3
divl
scas
and
inc
lcall
or
fcompl
call
leave
mov
or
push
mov
add
inc
xchg
and
or
xchg
dec
sbbb
pop
aam
pusha
lds
dec
insb
jb
push
test
outsl
js
lcall
pxor
mov
out
sbb
data16
cmpsl
testl
cmp
mov
mov
movsl
push
cmp
imul
mov
or
add
out
sahf
xorl
loopne
loop
sub
rorb
call
icebp
arpl
ss
lahf
add
lock
mov
out
mov
sbb
mull
push
sub
out
xchg
sbb
shlb
xchg
sub
les
bound
into
add
arpl
inc
stos
lock
ja
std
mov
mov
jg
std
pushf
arpl
and
xor
jmp
dec
inc
push
or
inc
and
clc
into
std
imul
and
pop
cmc
inc
and
gs
mov
cmc
jle
icebp
xlat
std
jne
add
and
sbb
inc
pop
in
add
xchg
pop
or
inc
bound
leave
jo
sbb
pop
mov
out
push
mul
cmpb
mov
mov
sbb
push
ffree
decl
push
out
add
arpl
mov
jmp
dec
loope
sub
xor
ja
jmp
inc
lods
arpl
cmc
or
adc
and
mov
fwait
and
dec
xchg
mov
xchg
in
mov
sbb
pusha
cwtl
or
adc
dec
insl
push
loop
fs
out
adc
jg
stc
or
fisttps
mov
adc
outsb
push
aas
rcrl
movsl
lcall
cld
or
leave
xor
mul
cmp
pushf
addr16
pop
imul
lods
test
sti
jg
ret
xor
stc
sar
jne
pop
jns
inc
or
cmc
lahf
jae
jg
mov
mov
push
mov
loope
sub
mov
sub
jo
lcall
xor
shll
inc
sahf
fs
fs
mov
lock
adc
outsb
idivl
lds
inc
push
mov
ljmp
cmp
es
data16
lcall
xchg
jns
pop
adc
xchg
cli
out
icebp
fimuls
dec
adc
sti
ret
jg
jge
jmp
xchg
jne
mov
std
mov
xchg
daa
cmc
outsl
sub
inc
or
push
xor
lods
pop
int3
pop
add
sti
push
adc
inc
je
cmp
out
jo
sbb
mov
arpl
dec
out
sub
jmp
cli
lcall
add
icebp
mov
cld
je
lea
iret
xor
pop
ds
lea
jp
mov
inc
sub
hlt
popa
icebp
pop
cmp
ljmp
inc
fwait
mov
mov
mov
mov
jl
xor
call
push
inc
add
ds
pushf
mov
sysret
push
gs
cld
push
ds
fmuls
lea
inc
sbb
dec
adc
arpl
jb
push
divb
pop
push
sbb
pop
lods
adc
js
and
lahf
lock
push
mov
inc
push
iretw
je
outsl
cmp
jnp
cmpsb
jmp
push
out
leave
pop
mov
jo
pushl
inc
lea
sti
inc
in
mov
cli
inc
add
lfs
push
cld
add
and
mov
inc
or
push
outsb
jne
mov
ja
ss
push
nop
pop
stos
sbb
pop
cld
call
push
test
adc
adc
xchg
cli
xchg
jo
push
push
out
jp
and
icebp
jno
fldl
push
enter
jge
xchg
and
lret
mov
test
cs
lcall
imul
and
or
push
loopne
test
add
mov
fucomp
adc
insl
sbb
ss
mov
jo
adc
xchg
jbe
mov
sbb
pop
fdivr
mov
jg
mov
out
push
mov
jl
test
pop
das
fsubl
xchg
adc
repz
ja
xor
daa
out
pop
mov
movd
jmp
outsl
jne
cld
mov
jg
sti
iret
daa
movsl
mov
insb
add
ss
add
les
xchg
out
lock
adc
sbb
push
sub
xlat
sub
in
lret
xor
mov
jecxz
dec
aas
shl
pop
test
pop
pop
enter
rcrb
mov
inc
cmc
mov
mov
push
das
mov
push
push
popl
adc
test
inc
inc
pop
xchg
pop
or
mov
aaa
push
fistpll
adc
pop
pop
push
pushf
loope
xor
jo
out
jecxz
cs
out
insb
cmpsb
sub
hlt
pop
mov
pop
and
in
inc
stos
jle
cmp
dec
hlt
inc
and
loopne
pop
xorb
pop
icebp
cmpsb
pop
lret
leave
outsb
xchg
add
mov
sar
js
insl
pop
fcoml
cmp
jmp
pop
sbb
cmp
fucomip
test
pop
sub
push
or
fdivr
ret
sub
sahf
sub
pop
add
jg
in
mov
lret
pop
dec
outsl
fstps
xchg
decb
jg
mov
aad
dec
mov
jb
push
and
fstps
idiv
push
dec
inc
or
out
movsb
cmpsl
adc
push
fsubl
and
and
incb
mov
and
push
outsb
sbb
mov
or
inc
add
repnz
sar
dec
lock
fldl
imul
cs
je
adc
mov
mov
aas
loope
out
push
hlt
push
push
jp
mov
inc
test
dec
mov
mov
incl
cmpsl
ds
aas
cld
push
push
sub
mov
je
mov
jle
imul
cmp
xor
jne
pop
mov
mov
cmp
xchg
push
sahf
cmc
adcl
std
jecxz
mov
loope
pushf
inc
int
fwait
sbb
pushl
shl
pop
mull
xchg
cmp
incl
inc
loop
js
lret
daa
outsl
cmp
xor
pop
cmp
test
cmp
les
adc
scas
or
mov
test
insb
lock
clc
add
hlt
cmpsb
xchg
stc
push
insl
inc
lea
cmc
mov
sub
icebp
push
std
shr
repnz
lods
mov
pop
cmp
pop
inc
std
dec
stos
or
in
pop
inc
pop
loopne
add
push
ljmp
xor
xlat
mov
popf
push
xor
xchg
ja
mov
lret
jae
mov
mov
fwait
mov
imul
aas
sub
dec
std
dec
jbe
test
ret
cld
vpaddd
popf
ret
imul
mov
inc
icebp
push
into
gs
or
or
adc
mov
mov
stos
mov
mov
mov
mov
aas
push
cld
add
outsb
xchg
outsb
imul
fnsave
mov
jo
xchg
cmpl
sti
lahf
fmull
jb
aam
sub
fildl
loopne
mov
sbb
jg
pushf
repz
lcall
aas
stos
aam
and
jns
jne
addr16
mov
jns
sub
cmp
sbb
test
lcall
xchg
or
fldt
jmp
mov
xor
rol
ret
stc
xchg
adc
loopne
add
loopne
aam
and
jg
clc
inc
xchg
mov
pop
pushl
cmpxchg
mov
push
jbe
push
and
mov
std
or
cli
test
xchg
jg
push
inc
mov
xchg
jl
call
push
shr
pop
and
push
mov
aas
ret
add
mov
and
mov
faddp
or
ss
popf
lcall
fcom
out
sti
pop
out
rcrl
loop
aam
inc
or
lds
fistpll
xchg
dec
and
mov
sbb
fiadds
push
push
test
push
push
jg
out
or
and
out
dec
add
inc
cmp
lahf
fsubrp
and
pushl
pop
ret
cltd
jnp
xor
arpl
fstpl
cmp
xor
ror
mov
jge
adc
xchg
arpl
cmc
decb
pop
test
pop
aaa
cmp
xor
enter
movsl
inc
roll
mov
outsb
movl
stos
mov
inc
jg
pop
sub
pop
xchg
add
movsl
adc
call
aas
or
lret
adc
xchg
movsl
neg
stos
xchg
inc
add
jge
mov
push
incl
mov
xlat
inc
jb
jne
daa
popa
punpcklbw
add
sarl
jle
jecxz
add
js
into
mov
dec
mov
cmc
lret
pusha
sub
sahf
mov
mov
inc
call
sbbb
xlat
imul
xor
add
mov
decl
pop
push
aaa
jnp
clc
sub
out
add
or
adc
shrb
scas
cmp
fcmovnb
in
sbb
fldcw
decl
sbb
out
test
les
pop
fistpll
xor
pop
fcoms
jg
clc
xor
ja
pop
in
sub
and
arpl
mov
mov
pop
dec
mov
mov
popf
xchg
out
ja
pop
icebp
mov
jecxz
mov
push
in
pop
stos
aaa
inc
pop
outsl
jge
lcall
aad
daa
sbb
xor
inc
orl
cli
out
adc
mov
add
jg
call
out
shll
pop
mov
dec
in
jge
mov
movsl
out
cli
mov
mov
loopne
pop
dec
or
cmp
push
or
std
idiv
dec
or
std
pop
int
mov
sbb
outsl
adc
nop
int
push
out
gs
mov
stos
jg
clc
xor
jge
loop
mov
xchg
in
cld
sbb
add
test
adc
clc
mov
js
add
popa
imul
pusha
and
adc
pop
xchg
pop
fbstp
test
mov
push
sub
incl
cwtl
iret
in
push
jle
mov
push
ret
loope
sub
fucomi
jecxz
or
ljmp
fsubr
inc
mov
ret
pop
push
sbb
hlt
push
das
sub
sarl
inc
sar
ss
aam
mov
shrl
add
aas
loop
cmpsl
out
or
ljmp
lahf
pop
test
loope
fldl
cld
xor
add
add
orb
andb
jnp
sarb
push
jbe
sbb
data16
psraw
xor
or
adc
xchg
mov
out
sub
sbb
jns
aad
xchg
cmp
fdivs
inc
adc
ljmp
insl
cli
cli
in
add
daa
adc
clc
std
pop
inc
cld
std
push
sti
sbb
cli
aaa
icebp
sahf
sbb
push
dec
xor
jmp
enter
xchg
setne
fdivr
cli
sub
stc
jnp
jg
js
fcom
jg
push
mov
jmp
sub
fcomps
mov
out
lock
xor
jp
or
mov
subb
enter
shl
rolb
push
mov
out
jecxz
jl
push
setno
mov
cmp
jmp
push
sti
xchg
dec
sbb
fdivrs
lock
lock
aaa
bound
invd
pop
iret
pop
lods
bound
jo
loopne
incb
lcall
fwait
mov
loopne
dec
loopne
pop
xchg
ljmp
push
fbstp
std
inc
sar
xchg
fnstenv
hlt
sti
mov
stc
ret
mov
popf
jb
jnp
popf
mov
movsb
sub
loope
ret
nop
jecxz
mov
adc
in
sbb
jo
mov
pop
ljmp
mov
icebp
push
mov
inc
cmpsl
dec
cmpsl
push
xchg
mov
add
or
cmp
jae
ja
adc
insl
push
xchg
pop
rcpps
jg
mov
out
rcrl
pop
mov
clc
xlat
das
fst
add
sti
mov
xlat
jne
outsl
out
pop
add
jno
cmpsb
repz
mov
into
cmpsl
int3
cmp
movsb
mov
add
mov
cmp
and
movsb
ficompl
mov
lock
sub
fisttpl
adc
or
aaa
aad
mov
mull
dec
sar
adcb
stos
mov
jo
and
repnz
xchg
and
aas
mov
xchg
cmpsb
xorb
mov
and
lret
rolb
iret
sti
maskmovq
idivl
nop
sub
out
pop
in
or
pop
pop
xchg
repnz
lock
testl
mov
clc
out
jge
xchg
out
mov
push
loope
popf
loopne
test
ret
nop
adc
pop
mov
arpl
mov
dec
call
adc
hlt
dec
inc
cli
aaa
popf
outsb
dec
pushf
test
fxch
popf
sti
out
cmc
xlat
iret
fstps
pop
lods
cmp
jns
ret
push
clc
bound
mov
sbb
lahf
mov
inc
cld
add
lea
cld
sbb
xchg
cmp
xchg
cmp
jmp
inc
js
ret
imul
into
sbb
jecxz
fsubs
and
loope
addl
fildll
adc
popa
cmp
aaa
sub
pusha
xchg
lret
aad
fcoml
into
inc
into
ja
fxch
dec
fs
pop
cmp
mov
push
decb
sbbl
hlt
out
sub
clc
daa
cld
jae
xchg
cmc
insb
bound
or
sar
sbb
aas
sbb
sbb
pop
cwtl
inc
dec
push
sarl
outsl
xor
sub
sbb
sbbb
and
mov
mov
adc
les
mov
jnp
mov
jne
loop
jg
aad
mov
mov
add
mov
mov
test
ret
out
rcrb
ja
or
mov
adc
mov
push
mov
imul
loopne
mov
fnstcw
pop
cwtl
int3
roll
jo
jg
or
cmpsl
ret
aas
adc
mov
adc
cmpsb
adc
and
mov
pop
jge
aad
adcl
xor
ud0
int
popf
fstps
test
jmp
xchg
lods
jbe
sbb
nop
subl
cmp
mov
push
inc
mov
and
setle
cmpsl
and
mov
addl
clc
sbb
lea
sub
je
js
scas
aas
mov
xor
int
shll
add
std
sbb
ss
pop
mov
sub
cld
xchg
ficomps
test
and
lods
mov
stc
into
jno
cld
mov
jge
inc
push
jp
leave
mov
xor
arpl
dec
nop
push
pusha
cmp
ja
add
sub
inc
sub
push
push
hlt
jg
fimull
lahf
mov
lods
mov
in
jle
and
cld
out
aaa
xor
xor
xchg
and
xor
inc
xchg
add
adc
fsubrs
mov
jle
loop
dec
js
sti
jp
sarl
insl
repz
fsubrl
dec
pop
iret
leave
lcall
cmp
test
sbb
xor
into
ficompl
aaa
xchg
pusha
fdivrs
jnp
dec
sbb
cmp
jne
test
es
sarb
test
in
mov
sub
jg
cli
aad
cs
mov
cs
sbb
push
cs
into
jb
hlt
aaa
add
push
cmp
mull
fs
shlb
add
xor
mov
frstor
push
cmp
popl
push
sarl
scas
adc
in
cld
mov
out
xchg
cmp
inc
rorb
repnz
fsts
xor
fcoml
mov
bound
xchg
jae
cmp
pop
inc
stc
mov
insl
nop
mov
cmpsb
pop
jmp
cmp
pop
mov
lahf
mov
push
loop
push
mov
jecxz
add
into
sub
pushl
sbb
jmp
ss
outsb
mov
std
lods
mov
mov
adcb
icebp
sub
inc
adc
adc
push
dec
and
and
negl
lock
jle
push
push
aam
or
push
jg
lods
shll
or
push
push
mov
adc
cs
mov
push
js
cmpsl
sub
dec
outsb
fs
xchg
out
jno
inc
test
push
push
sub
inc
popf
mov
inc
mov
jg
xor
mov
jae
jge
cli
pop
inc
ljmp
loopne
test
sbbl
in
sbb
jb
filds
mov
xor
data16
push
inc
cs
mov
sub
out
or
arpl
int3
adc
xor
sub
jbe
push
or
and
xor
mov
aam
pop
lcall
jnp
in
jno
data16
cmc
pop
ret
and
mov
dec
pop
push
pop
push
outsl
sub
push
and
inc
cmc
push
aad
dec
cmpb
jg
fdivs
cmp
imul
addr16
push
add
xor
mov
je
dec
insb
enter
rcrb
stos
adc
call
outsl
stc
inc
push
aas
mov
imul
dec
insb
pushaw
or
mov
adc
cmp
sub
jae
mov
inc
lock
bound
push
call
outsb
xor
jbe
insl
mov
inc
aad
inc
adc
rol
cmc
hlt
push
push
andl
gs
mov
or
bound
clc
loopne
outsl
je
fists
mov
inc
inc
jo
mov
cs
icebp
aaa
mov
sub
mov
push
pop
add
sub
sub
fbstp
testb
inc
adc
xchg
inc
jne
cmpsb
es
ds
push
add
sub
sub
sbb
jno
dec
push
sbb
add
stos
xchg
stos
sub
insl
inc
leave
ret
sub
pop
cmpl
fisubrs
fs
xor
sub
or
insl
data16
inc
add
shl
jne
add
adc
push
arpl
out
push
hlt
cmp
out
lcall
inc
popa
push
push
adc
push
lods
mov
sub
mov
push
popa
pusha
push
movsb
push
jge
fsubl
lret
outsb
dec
loopne
sbb
cmp
cmp
or
loope
push
pop
ret
inc
ds
inc
dec
inc
xor
sbb
adc
sub
dec
adc
lods
ss
cmp
sbb
add
push
jne
imul
push
sub
inc
arpl
incl
mov
test
sahf
shrb
adc
add
dec
push
xchg
ja
popa
xchg
push
push
cmc
adc
popa
dec
jecxz
mov
dec
and
call
xor
sub
je
dec
addb
out
sbbb
ficompl
xchg
js
mov
dec
dec
add
icebp
fcmovnu
inc
or
je
adc
add
xor
sahf
sahf
push
pop
aas
sahf
inc
mov
xchg
xor
and
icebp
out
cld
outsl
leave
inc
xchg
insb
loopne
mov
xchg
adc
dec
add
xchg
push
aas
inc
js
push
loop
pop
push
xchg
imul
jae
aaa
sub
dec
dec
jno
sti
outsl
push
incl
clc
add
adc
sub
std
addps
jmp
addr16
push
sbb
mov
dec
push
push
dec
mov
jne
popa
mov
pop
inc
dec
insl
cmpsl
jb
addr16
mov
jecxz
push
inc
jno
jle
in
or
outsb
push
das
sub
inc
movl
pop
pop
sub
aaa
cwtl
adc
mov
dec
jbe
shr
lods
xchg
push
add
jb
push
push
cwtl
mov
jp
mov
add
js
sub
cmp
jg
bound
bound
sbb
outsb
inc
sub
add
cwtl
jb
pusha
push
mov
js
lahf
or
inc
data16
addr16
push
sti
hlt
movsb
add
out
mov
stos
roll
rorl
std
inc
cli
mov
adc
mov
in
out
sar
sbb
and
push
mov
inc
call
dec
lock
mov
insb
and
in
add
xor
js
add
push
cmc
mov
mov
sbb
dec
dec
inc
push
pop
push
xchg
mov
bound
cmp
push
into
push
leave
and
mov
fdiv
test
mov
outsl
inc
std
mov
dec
push
cmpsl
cld
xor
xchg
or
mov
inc
fs
mov
cmp
jg
je
add
lret
push
cmpsl
lcall
mov
ret
or
and
pop
leave
pop
push
ror
lret
test
pop
xchg
pop
push
imul
nop
adc
nop
add
or
shll
dec
cmc
jg
sub
jne
jo
arpl
inc
xchg
push
stc
push
sti
push
mov
scas
jle
je
inc
jne
push
xchg
hlt
inc
insb
sub
push
add
loope
addr16
add
lret
hlt
loop
fwait
mov
xor
bound
scas
or
sbb
mov
sbb
ficomps
fiaddl
mov
pop
inc
cs
fwait
test
inc
xchg
fs
add
ja
adc
pop
lods
out
insb
inc
stc
add
and
cli
add
ficoms
or
sub
push
mov
dec
fistpll
add
jo
ret
movsl
in
aaa
jb
ja
arpl
push
ds
imul
pop
mov
xchg
jnp
sbb
sbb
mov
pop
fdivr
loope
test
stc
imul
ja
aam
dec
xor
dec
push
jmp
aas
mov
add
add
jae
xchg
repz
pop
mov
jns
adc
cli
in
add
sub
push
push
pop
repz
mov
dec
jg
jno
dec
jns
ss
or
or
pop
pop
daa
xor
js
enter
into
pop
or
add
iret
sbb
pop
and
jl
mov
clc
inc
jbe
pop
push
pop
jmp
push
pop
dec
lods
bound
adc
push
in
incl
gs
push
pop
jns
xchg
push
lods
xchg
je
fldl
and
add
cmp
cld
inc
mov
xor
jo
sub
dec
xor
fidivl
pushf
push
mov
cmp
in
inc
je
orl
cmp
je
jno
test
jno
arpl
jae
cltd
sub
pop
lods
sub
popl
mov
sub
dec
xor
sbb
dec
jb
jno
fneni(8087
dec
je
ss
dec
sbb
jmp
adc
cli
pop
in
shll
inc
inc
imul
jo
lods
inc
mov
xchg
sbb
rclb
out
movb
aas
adc
bound
ret
dec
aam
lds
xor
dec
push
pop
inc
mov
imul
or
movsl
jmp
incl
push
mov
inc
push
dec
adc
push
adc
jbe
jo
dec
sub
pop
mov
jne
test
sbb
lock
push
inc
outsb
push
sub
clc
std
push
push
ds
adcl
mov
mov
mov
das
push
inc
popa
clc
rolb
xorl
mov
loope
mov
adc
pop
push
mov
xchg
sub
add
dec
xor
add
sub
push
inc
movsb
lea
xor
test
push
out
pop
std
lds
jb
add
lock
pop
jle
cld
or
mov
sub
int
dec
push
inc
sbb
push
xchg
dec
jl
jg
mov
dec
sub
outsb
dec
jbe
sarb
xchg
popa
ss
inc
ljmp
xchg
push
int
inc
xor
ja
std
inc
add
mov
cs
rcll
pop
pop
ret
imul
cmpsl
pop
add
add
lods
push
pop
adc
clc
push
mov
loope
or
push
inc
loopne
and
loope
mov
mov
xchg
adc
inc
push
push
pop
sub
pop
add
nop
mov
inc
movsb
ds
cmpsl
jae
push
pop
cmpsb
fld
mov
mov
add
mov
mov
inc
inc
cld
dec
imul
add
in
out
stc
add
loop
pop
imul
push
or
out
bound
sub
push
call
push
push
dec
adc
cmp
jne
mov
pop
dec
xor
sub
rclb
inc
test
stc
call
lret
outsl
add
jmp
add
ja
inc
jns
inc
push
sarl
ja
dec
lods
aam
pop
call
pop
mov
inc
pop
pop
mov
incl
inc
aaa
jle
inc
xor
rorl
sti
aaa
inc
ret
icebp
cmpsl
pop
add
push
fimull
jecxz
dec
imul
add
push
push
mov
mov
insb
aam
inc
scas
add
decl
test
movsl
jns
dec
sub
dec
cmp
jne
push
andb
push
mov
adc
adc
sub
insb
loop
dec
push
jmp
or
mov
call
repnz
sub
push
dec
dec
jo
mov
js
push
scas
dec
data16
test
jno
ss
jbe
lods
adc
scas
out
jmp
aaa
popa
popa
rol
int3
mov
pop
orb
pop
shll
jae
fistl
iret
push
jmp
lock
lods
out
outsl
dec
cmc
adc
bound
arpl
add
test
and
mov
add
pop
loope
jg
popa
push
inc
lods
inc
js
jbe
dec
icebp
inc
jns
jno
push
je
andb
sbb
ret
jne
fwait
push
je
test
insl
insb
ret
push
inc
push
sub
test
outsl
loopne
and
xorb
sub
xchg
add
mov
pop
push
dec
push
push
xor
jns
inc
ljmp
push
mov
adc
push
or
lock
inc
cmp
pop
jbe
cmpsb
sbb
xor
xchg
inc
or
rcll
cmpsb
jecxz
jmp
call
add
stc
lret
mov
je
pop
daa
mov
pop
hlt
dec
jbe
roll
xchg
sti
pop
outsb
or
sub
mov
pop
mov
nop
jbe
icebp
push
inc
inc
dec
insw
leave
xchg
jle
mov
popa
lahf
pushf
add
fstpl
roll
push
int3
rcrb
mov
fildl
push
enter
pusha
push
adc
fsubr
lea
mov
orl
dec
inc
std
sub
subb
pop
sti
out
add
pop
popf
add
mov
popf
push
mov
stos
adc
xlat
adc
cmpsl
sub
aas
or
sbb
mov
jbe
xchg
pop
and
inc
cmc
push
fiaddl
in
or
mov
add
shlb
inc
sahf
or
hlt
mov
leave
push
and
lods
mov
cwtl
shll
outsl
lret
jmp
jmp
pop
lret
andl
in
mov
sub
loope
jge
shr
jle
mov
mov
pop
pop
in
mov
and
mov
fimull
adc
std
test
std
cmp
aaa
or
outsb
xchg
cmp
test
ret
daa
mov
and
subb
mov
add
and
jl,pn
push
sar
dec
imul
gs
rcrl
adc
ljmp
xchg
mov
jmp
or
stos
or
jg
cmp
push
mov
push
push
filds
loopne
cld
sbb
aam
cmpsl
add
jne
lock
shll
pop
lahf
jo
add
or
pop
adc
test
sbb
lahf
jnp
xor
int3
je
pop
cmp
push
cwtl
cmp
std
pop
pop
dec
arpl
add
repnz
adc
ss
cld
pop
in
dec
daa
dec
pusha
xor
cltd
test
aad
xor
icebp
jo
jne
add
xchg
sarl
mulb
adc
movsb
in
fistl
sub
scas
or
lret
add
cmc
sti
push
inc
mov
mov
or
pop
int3
xchg
dec
sub
mov
imul
addr16
sbb
pusha
ds
fdivs
mov
popf
mov
in
push
add
add
cmp
cld
mov
jne
adc
push
cmp
test
aam
inc
test
pop
je
add
clc
cltd
pop
loope
inc
pop
inc
pop
sbb
add
test
and
stc
push
mov
sbb
and
loope
sbbb
add
ss
inc
faddl
add
push
mov
jg
sbb
inc
add
sbb
out
cmpsb
jne
lret
shrl
arpl
sahf
add
jecxz
fs
mov
jecxz
add
jl
outsl
fcoml
xchg
dec
cmpl
mov
add
testb
into
cwtl
inc
or
cmp
mov
dec
std
sbb
add
sbb
nop
sub
sbb
jb
xor
ja
icebp
adc
iret
lds
sub
std
es
xor
or
out
rol
adcl
cld
mov
insb
mov
jg
and
xchg
popa
cmp
mov
inc
push
popf
aas
push
add
cmp
sub
xchg
ds
mov
fbstp
mov
add
clc
sbbl
data16
lret
es
xchg
xchg
xor
hlt
xchg
sbb
fcomps
mov
mov
int3
gs
jno
leave
pop
lret
pop
outsb
fdivr
lea
addr16
lret
outsb
nop
jbe
mov
cmp
js
mov
or
int
fldenv
mov
xchg
mov
repz
inc
sbb
stc
ret
xor
ret
pop
mov
and
add
jle
shll
scas
mov
push
mov
jb
ljmp
fcompl
clc
int
fmul
es
lret
or
add
lods
xchg
sbb
ret
mov
jp
incb
dec
cmp
jbe
jbe
cmp
scas
sbb
push
xchg
xor
push
xor
mov
daa
rcrl
dec
add
dec
cmp
push
rcll
pop
inc
sub
idivl
xchg
sbb
fistpl
fisubrs
mov
xor
pop
test
mov
push
or
jnp
jbe
les
icebp
adc
mov
dec
pop
sahf
mov
enter
push
push
lret
out
jo
mov
aaa
and
push
xor
xchg
and
xchg
push
aam
pop
in
xor
jg
repnz
jns
sbb
scas
outsb
insb
pop
outsb
testb
movsb
jbe
mull
filds
mov
adc
in
jne
jecxz
add
jns
lods
je
iret
mov
in
xlat
xchg
loop
push
cmc
inc
loope
sub
mov
inc
inc
insb
clc
rolb
fcomip
add
push
cmp
and
dec
and
aas
inc
addb
push
aad
jo
and
jp
and
pop
xchg
adc
or
sbb
pop
mov
jle
rolb
pushf
jmp
rorb
jg
repnz
inc
stos
sbb
pop
fcoml
and
repz
fcmovne
dec
dec
push
es
jecxz
mov
pop
jl
das
mov
jno
cmp
lcall
adc
orb
rcll
in
scas
lcall
jb
ffree
add
jp
jne
inc
ficomps
or
dec
pop
test
xchg
andl
mov
pop
sbb
mov
leave
cmp
dec
mov
idivb
push
jne
lcall
jmp
add
adc
pusha
inc
aaa
push
pop
fsubl
adc
and
fimull
je
fisubl
aas
icebp
addl
out
dec
adc
jbe
mov
sub
and
mov
pushf
mov
jbe
pop
decl
outsl
mov
mov
iret
inc
cmp
xchg
xor
das
or
cmp
mov
stc
int3
std
adc
and
mov
addr16
mov
sbb
pop
sbb
sbb
sub
fbstp
fisttpl
mov
int
or
xchg
jg
fnsave
pushf
out
mov
inc
loope
idivb
jmp
nop
ret
push
inc
popa
jnp
cmp
ja
sub
test
mov
jge
ja
cmpsb
iret
xchg
cmp
add
and
add
dec
push
or
inc
mov
xlat
sub
push
lea
push
sti
jmp
or
lret
aam
add
dec
movsb
jmp
inc
pop
lahf
in
fistpl
inc
fsubl
test
and
pop
ja
fildll
test
jbe
clc
cld
dec
movsl
or
into
mov
incb
fisttps
pop
lock
or
gs
out
fwait
loope
xor
xchg
xchg
mov
arpl
stos
loope
std
push
mov
lock
fs
gs
cmpsl
iret
mov
jg
cmp
and
aam
mov
in
add
iret
fists
cmp
repnz
divl
inc
and
mov
fiadds
or
jmp
mov
nop
inc
ret
cwtl
jp
pop
sbb
adc
jo
in
inc
and
jp
daa
es
or
add
sbb
out
fstpt
jae
cmpsl
out
repz
or
loop
push
test
ja
das
cld
push
jo
jle
xchg
adc
aaa
jnp
push
xchg
stos
addb
pop
inc
pop
imul
ja
int3
xor
idivl
sbb
pop
jle
pop
cld
lock
lcall
shll
sub
sbb
aad
sub
cmp
or
subl
and
daa
dec
xchg
add
fidivrs
test
lock
lds
jg
incb
cltd
or
mov
fidivl
js
mov
mov
lcall
push
cltd
ret
jle
ss
mov
mov
mov
or
rclb
cmp
mov
pop
movsl
stos
loopne
pop
jg,pn
mov
jg
sub
inc
xor
outsl
fsubl
hlt
sbbb
lret
insl
insb
inc
pop
test
inc
xorl
pop
das
movsb
aaa
clc
sbb
jge
inc
push
in
adc
pop
mov
fstpl
ja
ret
cmc
int3
or
xlat
jge
and
mov
mov
std
inc
mov
outsl
jecxz
ja
dec
mov
outsl
movl
ja
pop
cmp
push
inc
xor
jo
subb
in
jae
shlb
decb
lea
push
xchg
push
mov
stos
cmpb
jg
and
mov
add
mov
call
xchg
sahf
and
mov
push
pop
add
insb
dec
inc
jne
add
mov
dec
mov
scas
movsl
ret
sbb
js
fistps
test
stos
fsubrl
xchg
push
mov
movsl
outsl
fadd
in
xchg
jmp
pop
aas
sarb
mov
push
or
fisttps
addps
dec
aaa
sbb
cltd
add
outsb
pop
sbb
xor
pusha
ficoms
test
fisttps
adc
pusha
clc
insb
cmp
hlt
mov
or
dec
jle
cmp
insl
xchg
out
int3
mov
jne
sahf
pop
test
inc
add
sbb
lods
jg
mov
aam
pop
loopne
cmc
sbb
scas
push
insb
xchg
xor
into
adc
fistps
aas
dec
insl
test
cltd
lcall
es
clc
inc
jl
je
ss
int3
in
push
inc
inc
sbb
mov
scas
pop
inc
mov
ljmp
jp
sbb
out
and
jle
or
mov
cs
mov
pop
adc
push
ja,pt
cmp
movsl
popa
mov
mov
lods
jl
sbbb
lea
xchg
frstor
mov
mov
fbstp
fstpt
jno
mov
insb
andl
xor
out
xor
pop
int3
loop
mov
xchg
orl
mov
clc
pusha
loop
stc
lahf
pop
inc
idiv
pop
adc
xchg
ljmp
pop
inc
adc
push
divl
fdivrp
or
mov
insl
and
inc
movsl
or
sub
adc
lea
hlt
push
fistpl
push
mov
mov
movsl
or
out
cmp
jle
pusha
fcomp
sbb
and
and
jbe
ja
sbb
popa
pop
ret
aas
jb
fldl
ss
jnp
xchg
add
jno
xchg
mov
dec
push
fsubs
jo
push
adc
xor
sbb
adc
xchg
mov
loopne
addb
lock
cwtl
dec
sub
xchg
call
adc
fnstcw
hlt
call
arpl
adc
mov
mov
fucomip
sub
outsl
jb
sahf
add
into
movsb
sub
movsl
add
push
cmpsb
lahf
lock
xor
std
test
push
outsl
lods
cltd
lods
pop
lret
dec
ret
mov
outsb
test
pusha
adc
jae
dec
jns
sbb
push
add
outsl
jb
daa
xchg
adc
cmc
sub
jno
mov
jbe
test
insb
sbb
push
cld
roll
dec
int3
or
rcr
adc
fwait
neg
inc
outsl
mov
mov
mov
sti
cmp
pushf
add
mov
call
pop
dec
add
push
ljmp
and
daa
rcrb
sbb
cmp
cmc
fs
sub
add
inc
mov
rep
cmp
sub
das
sub
enter
add
adc
sbb
je
ljmp
xchg
scas
mov
sarl
push
nop
add
pop
pop
pop
add
out
xor
aad
les
inc
pushf
inc
sahf
insl
sbb
int3
aad
sub
inc
xchg
cs
dec
push
inc
arpl
sub
in
sbb
inc
cli
in
jle
shlb
adc
and
dec
movl
inc
enter
and
adc
jo
jmp
xor
mov
pop
dec
inc
cmp
mov
inc
mov
add
hlt
xrelease
std
jmp
enter
decb
insl
imul
loope
pop
loopne
fwait
mov
lea
add
popa
push
xchg
dec
cli
test
test
les
mov
mov
mov
push
jo
ja
add
push
sbb
inc
iret
push
jbe
mov
xor
mov
arpl
mov
mov
sub
dec
lret
push
and
jecxz
jmp
adc
loope
cld
mov
xlat
lahf
cmp
xorb
rcr
pop
sar
dec
push
inc
daa
xchg
shrl
les
pop
and
in
jmp
test
add
rcr
adc
fdivl
movsl
add
xor
mov
lcall
cmp
negl
xchg
push
frndint
adc
sbb
test
dec
add
xchg
or
or
cmp
and
mov
orl
jo
xor
lea
lret
push
sarl
decb
js
jmp
and
jns
and
pop
jge
mov
xor
push
xchg
jae
mov
call
xchg
out
dec
push
add
out
int
mov
cld
shll
add
pop
dec
mov
inc
in
xlat
jge
fadds
loop
enter
cmp
cmp
lds
jae
es
mov
mov
and
inc
pushf
add
sbb
movsl
imulb
mov
dec
sbb
xchg
push
dec
inc
push
push
ja
ror
je
xchg
xchg
push
lods
mov
mov
imul
std
bound
ret
mov
or
sbbb
mov
loope
fst
dec
inc
xchg
pushl
push
add
cmp
fcmovnu
mov
testb
adc
push
jmp
pop
stc
ret
pop
pop
stc
and
ret
std
or
sbb
or
icebp
push
fwait
loop
dec
inc
cs
or
push
add
sbb
cmp
inc
push
outsb
orb
jo
outsl
ret
and
adc
loope
outsl
dec
test
out
jp
loope
inc
outsb
mov
xchg
mov
jp
xchg
jnp
xlat
push
and
jnp
inc
fldt
cmp
add
pop
test
fnsave
std
lock
jmp
pop
js
mov
icebp
ret
xchg
test
fs
inc
fsubrs
jnp
fs
mov
out
mov
rolb
jmp
ja
fnstsw
dec
mov
es
pop
sbb
dec
add
xor
insl
es
cwtl
cmc
sub
and
stos
mov
rolb
negl
sbb
mov
bound
ss
fcomi
popf
sti
cltd
mov
ret
fisubrl
mov
loop
jge
mov
ficoml
and
sbb
out
adc
ljmp
loope
fldenv
cwtl
pop
loopne
add
ss
loop
out
test
incl
push
ret
insb
mov
enter
cld
mov
int
fcomp
sahf
and
and
cmc
mov
xorb
ret
inc
adc
mov
sub
mov
movsb
cltd
push
das
pop
mov
xchg
lret
push
sbb
fiaddl
sbb
mov
mov
or
inc
jns
pop
leave
push
fistpll
sarl
cmp
enter
ja
sub
bound
jp
in
sub
out
aad
mov
cmp
outsl
pusha
cld
js
and
or
push
sahf
les
sti
add
sbbl
mov
add
jl
pop
int3
lea
stos
imul
xor
mov
nop
pop
rcr
sub
pushf
sbb
mov
mov
icebp
outsl
pop
fildll
jb
aad
nop
movsl
das
lcall
push
xchg
popf
lods
cmp
shl
and
hlt
jnp
pop
jno
lods
fadd
mov
jp
sbb
cmp
syscall
imul
in
add
mov
jb
and
iret
adc
xchg
dec
lock
testl
fwait
scas
cmpsb
cmp
push
in
addr16
cli
mov
je
pop
mov
pop
lock
addr16
mov
ss
fisttpll
or
call
clc
or
call
or
in
jl
mov
or
mov
ss
decl
mov
jns
dec
mov
aam
js
cmp
js
out
orl
popa
adc
ds
xchg
add
sbb
cmpsl
outsb
adc
and
dec
push
jecxz
loope
inc
jo
push
mov
adc
pop
int
mov
gs
shll
xor
test
mov
sbb
out
ja
stos
pop
repz
popf
aad
enter
lahf
loop
fldt
and
movsl
mov
arpl
jbe
adc
inc
push
cmpsb
ds
cmpsb
dec
or
fiaddl
mov
pusha
xlat
mov
loope
lahf
rcrb
and
mov
jg
mov
xchg
lea
fsubrs
out
loopne
ja
in
int
hlt
rcrb
test
sbb
pop
ds
add
and
movsb
mov
sbbl
out
and
push
dec
outsl
aas
jno
add
or
push
ja
push
aas
shll
pop
xchg
mov
pusha
xchg
cmp
dec
add
pusha
and
xchg
sub
lcall
jge
mov
add
cs
movsl
pusha
xchg
mov
pop
sbb
xlat
nop
sbb
push
add
das
mov
mov
insl
sub
and
mov
sub
jl
ret
push
pusha
lcall
add
or
aas
call
and
imul
sub
aam
push
insb
icebp
push
or
jl
fistl
pop
scas
jmp
shrb
push
mov
push
jo
jecxz
jl
mov
push
mov
psubusb
add
xchg
push
jecxz
imull
int
adc
add
mov
and
cmc
cld
scas
inc
mov
imul
or
cmc
mov
mov
aaa
sbb
stos
fwait
mov
sbb
ss
xor
push
sub
and
sbb
fsubp
loope
or
iret
clc
pop
dec
insb
lock
dec
lea
and
addl
cmpsb
jo
jecxz
jmp
jne
inc
lret
inc
fs
jo
mov
stos
xchg
jno
adc
xchg
and
js
int3
add
insl
mov
das
fcmove
in
inc
fcomip
pop
outsl
pop
and
fnstcw
movsl
sub
inc
pop
loopne
mov
or
push
das
xor
pop
jno
aas
adc
pop
xchg
xchg
lods
cmpsl
add
add
push
pop
or
or
shll
inc
in
mov
push
hlt
xchg
add
push
jp
adc
subl
icebp
in
jl
roll
lods
scas
inc
jns
sbb
frstor
outsl
repz
cmpsb
adc
jne
inc
mov
sbb
jb
sub
adc
test
jp
sbbl
lcall
pop
and
loopne
in
andl
addr16
movsb
xchg
ret
inc
jb
mov
lods
or
mov
rcl
orb
test
ss
add
pop
cld
lea
shr
pop
xchg
push
inc
test
mov
ret
mov
and
xchg
ret
xchg
outsl
addb
adc
clc
sbb
pop
jge
lar
cli
push
das
mov
dec
push
lds
cmp
or
mov
pop
push
aas
aad
roll
sarl
mov
cmp
pop
sbb
or
je
and
into
mov
inc
popa
jmp
pop
mov
push
sub
je
pusha
shll
push
fcoms
xlat
mov
arpl
jl
nop
outsl
repnz
cld
lods
mov
mov
xchg
repnz
jno
xor
jmp
sar
outsl
gs
push
push
xchg
sub
mov
arpl
hlt
sub
pop
ljmp
rcrb
cld
cli
repnz
fistps
xor
aad
adc
pusha
push
lds
out
mov
dec
pop
push
addr16
pop
mov
lret
xchg
aam
ret
div
jl
inc
adc
aaa
push
cmp
push
sub
inc
add
mov
fcmovnbe
imul
or
jg
outsb
add
dec
adc
mov
ja
je
xlat
mov
arpl
pop
xchg
std
rorb
fiaddl
push
pop
push
mov
lds
test
push
js
pop
loop
fidivrl
shrb
push
mov
lock
arpl
adc
add
mov
xorb
scas
or
mov
out
fwait
sub
mov
cmpsl
clc
jno
lods
dec
aas
lds
stc
mov
pop
sub
push
mov
mov
mov
daa
inc
mov
inc
cmp
pop
mov
sbb
fistpl
jns
enter
jno
mov
mov
and
sub
xor
shlb
or
sub
pop
dec
fbstp
stc
into
jecxz
and
jae
leave
mov
cli
push
fxch
es
lret
imul
sbb
pop
xchg
lea
into
loope
mov
out
xchg
stc
imull
icebp
dec
loop
out
clc
mov
cmpsl
mov
movsl
mov
push
mov
push
in
jmp
aad
mov
mov
mov
ss
ret
clc
adc
mov
out
das
fwait
std
in
sbb
fnsave
idivl
scas
xchg
push
orb
loope
sub
pop
imull
push
bound
loopne
jne
mov
add
pusha
or
mov
unpcklps
jg
popa
or
or
popa
push
ja
test
test
xor
es
adc
jge
jg
or
push
movsl
push
add
shrl
outsl
jns
mov
clc
and
imul
shrb
cli
test
mov
fwait
sbb
mov
mov
pop
xor
ret
in
icebp
ret
or
psubq
insb
mov
pop
mov
inc
cmp
std
test
rcr
out
sbb
aam
xchg
inc
and
and
jns
mov
lahf
push
lock
and
sti
sbbl
mov
lock
push
leave
pop
out
mov
incl
jns
mov
fcomp
out
dec
or
sbb
scas
lret
or
mov
xchg
xchg
jns
cli
pop
ret
and
push
imul
pop
fcomps
pop
adc
cmp
push
idivb
mov
add
sahf
imul
jg
add
push
cld
mov
or
mov
popf
test
jle
cmpsb
addr16
insl
popa
jae
out
lock
mov
jb
pop
pop
xor
and
push
sbb
xchg
inc
sahf
imul
popf
mov
aad
mov
jmp
mov
jle
xchg
push
arpl
fimuls
mov
jns
and
and
pop
push
sbb
add
js
in
xor
sahf
lds
sbb
add
pop
push
xchg
out
cmp
jo
test
xchg
mov
in
xor
xor
movsl
mov
jg
fs
outsb
mov
mov
sti
arpl
mov
fdivs
push
xchg
jb
into
fbstp
lahf
sahf
mov
incb
call
push
mov
add
sbb
cmp
data16
fistps
xchg
xor
and
out
mov
sub
pusha
scas
sbb
das
cmp
xchg
xchg
jp
in
dec
test
call
fs
call
das
pop
add
pop
inc
lods
rorb
in
out
push
xor
cwtl
cltd
jns
mov
jno
mov
xor
lret
test
pop
xchg
pop
call
cmp
xor
inc
add
sti
jnp
sbb
or
rcll
and
adc
xchg
or
int
push
mov
mov
cmp
aaa
sbb
lcall
jp
ds
jne
popa
jmp
pop
dec
daa
push
mov
mov
aaa
sbb
sub
jo
call
dec
xor
mov
xor
int3
and
push
ljmp
add
adc
outsl
lcall
loop
pop
pop
mov
stos
push
insb
sub
adc
xlat
fidivrl
or
mov
cmp
lods
push
mov
xchg
popa
ja
adc
sub
and
or
add
jp
and
pop
test
push
loope
pop
std
mov
pop
ds
das
xor
or
inc
mov
dec
cmpsb
jp
and
add
and
inc
aam
sbb
pop
les
pop
lock
jp
or
mov
mov
cmp
imul
cld
int
lahf
pop
orb
hlt
mov
lcall
bound
and
xchg
xchg
pop
test
movsb
ja
fwait
jb
mov
sti
pop
mov
fidivs
rorl
fwait
xor
aas
sahf
push
mov
xchg
dec
outsl
mov
add
insb
xor
shl
in
lea
shrb
or
push
mov
scas
imul
mov
dec
out
xchg
fnstcw
and
fldt
inc
adc
xchg
pop
jle
rorb
or
sub
stos
in
mov
test
or
movsl
mov
mull
insl
pop
aam
xchg
out
add
adc
add
or
and
push
sub
lea
sbb
add
lret
aaa
pop
jo
lds
js
sub
pusha
xlat
and
subl
or
inc
push
pop
or
lret
adc
jecxz
test
and
in
push
xor
sub
adcb
stos
fcmove
mov
fisttps
mov
mov
fists
mov
arpl
add
fdivrs
loope
push
sahf
mov
dec
addl
mov
ds
aas
lcall
pop
popa
stos
cmp
pusha
andl
push
push
dec
push
sub
push
jns
ja
sbb
arpl
push
and
outsb
jbe
mov
in
push
add
dec
pushl
mov
outsl
add
or
cld
test
sbb
mov
push
mov
push
cmp
ljmp
xor
iret
adc
testl
jnp
shr
pusha
pop
daa
call
mov
icebp
lods
jge
and
jg
dec
loope
add
nop
inc
sub
loope
imull
aad
inc
mov
push
lods
adc
test
and
push
in
jg
pusha
cmp
xchg
xor
pop
push
mov
push
shlb
and
sbb
test
cmp
mov
push
movsb
js
jg
test
les
cs
ljmp
pop
cmpsl
filds
mov
pusha
les
je
dec
aaa
call
mov
adc
xchg
mov
iret
lea
sbb
lret
daa
sahf
mov
cmp
repz
fisttpl
pop
stos
rol
jmp
cmpsl
testb
loope
in
xchg
pusha
push
cmp
inc
lea
fadd
sti
xchg
fstl
mov
sub
jbe
xchg
dec
xlat
mov
add
dec
push
xor
ret
inc
adc
sahf
ss
adc
or
insl
dec
mov
enter
adc
inc
lock
dec
push
cmc
cs
in
push
jne
dec
rorl
mov
or
divb
jmp
lea
je
sti
loopne
push
dec
jne
jns
filds
cmp
rolb
add
mov
cltd
sub
or
mov
or
xor
xor
lret
rcl
pusha
xor
xor
scas
jge
push
insb
jb
xchg
jg
or
loopne
sbb
push
and
shrb
outsl
mov
sub
pop
call
adc
jb
sub
adc
fdivl
sub
ss
out
mov
and
xchg
fstenv
sarl
lock
lds
test
ret
cmp
in
push
sub
cmovns
movsb
std
add
test
mov
imul
push
inc
jmp
stos
outsb
pop
lcall
nop
sbb
insl
mov
push
psubq
dec
mov
mov
xchg
push
stos
outsl
cli
dec
fs
dec
xchg
in
mov
or
jnp
pop
scas
frstor
in
mov
aad
dec
cmc
or
orb
fcoms
add
cwtl
in
pop
out
stc
scas
mov
in
sub
mov
xchg
roll
test
popa
xor
mov
sbb
rorl
sub
int
pop
cmp
test
mov
in
negb
lods
outsl
xchg
xor
or
aaa
insb
xor
push
ret
mov
inc
dec
test
call
mov
jmp
and
pop
jecxz
xchg
add
lock
fneni(8087
out
mov
popf
mov
dec
mov
xor
push
mov
dec
js
jmp
call
sti
inc
shll
sbb
fidivrl
xlat
rclb
fists
cli
mov
arpl
jae
mov
and
loopne
icebp
leave
and
shrl
pop
jg
lods
fistps
fs
cmc
pop
push
inc
jb
inc
test
inc
mov
sahf
shll
rorb
mov
sub
imul
inc
in
dec
imul
loopne
or
mov
sbb
sub
fisubl
cmc
sub
repz
clc
popl
rcll
cmp
pop
push
shl
je
shrl
push
fstps
mov
mov
cmp
sub
les
mov
in
xchg
xor
jl
adc
push
dec
aad
cli
jmp
lea
jmp
xor
jle
stos
xor
mov
mov
stos
and
and
mov
mov
mov
cmp
mov
sbb
cmp
push
inc
das
clc
dec
outsl
push
push
and
pop
mov
sbb
mov
jnp
pop
and
lcall
lock
mov
mov
je
cli
or
add
xchg
jae
or
sbb
add
push
xor
fs
push
mov
fsubs
je
pop
sti
sub
popa
and
icebp
inc
xlat
xor
mov
addb
arpl
and
dec
insl
inc
ljmp
je
push
arpl
lret
jl
ja
sti
cli
outsl
sbb
push
pusha
pop
jbe
adc
nop
cltd
xorl
arpl
adc
cmp
xchg
mov
or
inc
jbe
inc
jmp
jne
add
push
mov
xchg
lock
pop
or
sub
add
or
out
jbe
std
inc
xorb
outsb
rcrl
stc
xor
mov
repnz
push
imul
les
push
mov
inc
add
mov
lock
dec
rcl
mov
xchg
ljmp
lock
cmp
push
add
mov
inc
ds
mov
ret
aam
rcll
ffreep
lds
inc
icebp
out
shlb
xchg
sub
dec
leave
xchg
in
jmp
jge
outsb
je
mov
in
jo
mov
mov
add
test
inc
cmpsb
jecxz
pop
adc
cmc
push
aam
push
push
jle
pusha
arpl
cmp
arpl
sub
stos
lcall
adc
xchg
ss
adc
lock
popf
test
enter
std
int
call
push
mov
inc
add
jecxz
jmp
std
adc
adc
jae
mov
movsb
adc
call
inc
push
inc
inc
add
lea
and
mov
ljmp
rclb
out
mov
push
in
or
lcall
sti
jo
adc
in
xchg
push
mov
mov
or
mov
jge
lock
inc
pop
or
cmp
test
sub
cli
addr16
or
mov
push
into
xor
sbb
mulb
scas
mov
in
cmp
add
jp
addr16
jp
mov
sub
cld
cmp
incl
inc
pop
xor
leave
sub
insl
dec
adc
pop
loop
mov
lods
pop
add
insl
lods
rcrb
sbb
stc
add
mov
clc
push
and
adc
push
mov
fcoml
repnz
jae
aad
mov
sub
aam
cli
sub
push
adc
push
insl
mov
pop
aas
inc
shrb
push
inc
mov
rorl
filds
xor
or
push
rolb
mov
push
cmp
push
lock
sub
dec
fmuls
mov
daa
and
aam
imul
es
into
orl
mov
aaa
or
xor
or
int
mov
sbb
out
add
jecxz
scas
scas
shlb
repz
loop
dec
and
xchg
loop
aad
add
rclb
ficoml
jmp
inc
data16
cmp
repnz
lods
push
mov
push
rcrl
push
lcall
xlat
loop
mov
mov
mov
dec
call
or
xor
popf
sbb
pop
outsl
jl
inc
cmp
mov
jae
movsl
push
xor
stc
fnstcw
mov
push
mov
andl
fstl
adc
inc
cmp
push
icebp
add
mov
les
pop
je
scas
call
push
incb
mov
test
pop
jle
jle
mov
adc
cltd
imull
shl
das
sub
sbb
fisttps
cmp
aaa
or
loopne
adc
in
adc
call
xor
push
jge
xor
adc
mov
pop
sub
aas
xlat
iret
fsts
in
mov
push
lea
mov
cli
inc
scas
repz
adc
adc
mov
and
adc
mov
sbb
and
add
cmpsl
lea
test
jmp
ds
or
std
mov
and
xchg
rcr
push
xchg
movsb
xchg
xor
lock
hlt
out
mov
incb
xchg
cld
imul
pop
lret
add
je
test
sub
ror
push
test
inc
adc
mov
push
or
jnp
and
fucomip
jae
call
loope
add
and
inc
pop
inc
movsl
push
aam
bsr
je
xchg
push
xor
mov
mov
lret
xchg
mov
push
xor
mov
test
jnp
and
clc
fisttps
movsl
ret
add
fs
ljmp
nop
insl
and
inc
pop
aad
je
push
dec
and
outsb
jle
inc
mov
sub
out
scas
inc
lret
push
xor
enter
mov
sub
lods
out
imul
push
fists
pop
inc
adc
and
cmpsl
lods
pusha
inc
pop
pop
lock
mov
mov
or
xchg
jecxz
push
stc
call
pop
scas
and
mov
fwait
mov
mov
shl
out
insb
adc
jl
outsl
decl
xlat
aam
bound
sub
in
js
fiaddl
mov
clc
push
pop
jb
push
inc
data16
xchg
jl
pusha
jmp
push
mov
mov
jp
adc
push
out
cmp
add
addb
outsb
inc
adc
stc
pop
jbe
pop
enter
outsl
add
sbb
pop
aad
jmp
mov
call
or
fdivs
or
mov
mov
filds
addr16
cmp
and
push
mov
nop
test
dec
add
xchg
xor
stos
loope
sbb
push
cmp
stos
mov
cli
add
int3
pop
and
mov
insb
adc
stos
lcall
adc
addr16
aam
fidivrs
jp
mov
push
adc
push
cld
pop
mov
sub
push
or
xchg
daa
sarb
pop
sbb
aam
aam
push
repz
add
adc
scas
mov
push
arpl
xchg
cmp
push
or
jno
rcrl
movb
sbb
sahf
das
fs
enter
jns
subb
imul
scas
lret
std
cmpsl
mov
mov
jecxz
mov
add
jl
and
inc
sub
sbb
dec
dec
aad
sbb
jnp
repz
and
sbb
inc
cltd
or
cld
mov
jns
xor
dec
adc
cmp
push
xor
push
popf
xchg
pop
or
rcrb
mov
pop
jbe
or
lock
ja
les
popa
push
test
add
hlt
int
mov
and
adcb
daa
incl
cmpsb
push
jle
aas
in
push
add
cmpsb
inc
inc
test
jb
test
aad
lods
leave
fstp
bound
pop
fstpl
fcoml
inc
xchg
xchg
pop
fdivrs
pop
mov
add
idivb
cmc
test
jg
in
or
das
jp
iret
jnp
pop
jp
fmuls
sbb
aad
popa
ja
out
jno
lret
sub
pusha
test
mov
fucomi
mov
dec
xor
xchg
add
shrb
call
xchg
jb
add
aad
mov
sbb
out
jg
adc
sbb
mov
push
decb
popf
lds
aam
imul
dec
sbb
adc
pop
xchg
jno
data16
test
imul
mov
lahf
test
std
inc
and
xlat
xchg
pop
mov
pop
lds
imul
inc
loope
stc
into
stos
pop
ficompl
sub
stos
fildl
mov
pop
xchg
and
in
dec
sbb
loopne
push
xor
jmp
push
sub
das
add
int
push
push
scas
or
out
adc
cmpsl
add
icebp
xchg
ffreep
and
jne
xchg
cli
in
mov
or
inc
test
outsb
adc
jbe
jg
dec
jmp
lods
or
xchg
add
jg
jmp
pop
rol
or
in
cmpsl
pusha
jge
fmul
aaa
pushf
inc
xor
jns
push
lcall
inc
stos
loopne
aam
mov
xor
arpl
xor
cmp
and
jl
imul
popf
push
sar
lods
mov
push
pop
cwtl
inc
ret
pop
adc
in
outsl
rorb
push
fwait
cltd
or
bnd
cmp
mov
dec
test
test
mov
xor
xchg
std
add
xchg
mov
add
cmc
out
das
sub
and
pop
test
or
fwait
and
pop
int3
xchg
add
insb
lret
mov
icebp
mov
cld
rcrb
fldl
jne
leave
test
adc
insl
fwait
adcl
inc
je
add
das
lret
scas
incl
in
inc
or
xorl
movsl
cmp
lods
sbb
jecxz
sub
lret
mov
xor
push
cmpsb
scas
mov
mov
push
jecxz
xor
cmp
loopne
adc
repz
xchg
and
es
mov
fwait
sarl
adc
fbstp
rcrl
sti
outsl
xlat
xor
push
pop
add
lea
test
hlt
add
es
dec
jno
rcrb
dec
or
and
aam
imul
push
cmp
and
rcrb
adc
popa
aad
sbb
ret
das
mov
cmp
ds
mov
dec
sub
movsb
mov
push
hlt
subb
inc
sbb
push
nop
int
inc
addr16
sub
fimull
jp
mov
push
mov
inc
stos
aaa
rcr
jbe
push
out
lret
ret
sti
xor
mov
insb
dec
dec
cmp
sbb
data16
mov
loopne
aaa
mov
mov
xlat
mov
mov
or
jb
xor
cs
gs
insl
add
rcll
inc
adc
std
push
push
rcrb
xor
gs
adc
js
xor
push
leave
bound
mov
loop
xchg
cmc
outsb
cmp
rcr
aad
xchg
lea
add
or
cmpsb
pop
jge
push
in
lds
fnstenv
jns
xor
ja
aam
aad
sub
filds
jmp
mov
jg
rolb
or
imul
cs
sti
adc
pusha
add
fcmovnbe
mov
jne
xor
inc
add
cmp
fcomps
mov
mov
push
fwait
call
inc
and
outsl
jmp
aam
sub
pop
nop
fnstcw
xor
and
repnz
fsubr
stos
scas
push
xchg
stos
jno
icebp
adc
aaa
pop
lock
pop
loop
inc
mov
push
repz
pop
in
pop
jle
mov
shlb
xor
dec
and
jmp
dec
aam
enter
inc
scas
mov
sub
inc
mov
testb
lret
mov
xorb
cmpsb
or
cmpb
jbe
lods
jbe
sbb
xchg
inc
out
popf
pop
pop
mov
jno
pop
dec
repnz
test
sbb
incb
and
push
pop
adc
dec
xor
data16
mov
lahf
mov
cmp
int3
rolb
xorb
and
sub
inc
dec
bound
add
clc
call
mov
lcall
ret
clts
imull
cmp
jg
or
mov
dec
push
ss
add
scas
ljmp
repnz
mov
or
cmpsb
stos
outsb
xor
fcmovbe
insb
lret
mov
movsl
mov
sarb
fistl
push
cmp
repz
or
cltd
int3
sbb
adc
mov
cmp
je
arpl
shrl
pop
xlat
dec
sbb
jnp
cmpb
loop
lea
shrl
or
fnstenv
out
or
jo
push
jmp
fisttpl
or
aas
and
jl
pop
pop
mov
stos
or
or
fidivs
mov
sub
icebp
rcl
jno
ss
insl
test
xchg
mov
mov
xchg
insl
addb
inc
push
adc
fcoml
fisubl
dec
sub
inc
push
aaa
ja
push
idivb
or
xor
testl
repz
and
mov
lods
or
and
mov
out
bound
jg
fldt
fucomip
mov
inc
pushf
mov
fdivrl
inc
testl
arpl
aam
dec
stos
mov
fadds
pop
push
xchg
stc
push
inc
adc
mov
mov
cmp
lods
shlb
in
das
insl
call
xlat
xor
push
int3
ret
mov
adc
push
das
ljmp
fcoml
mov
pop
mov
dec
sbb
int
jg
leave
ljmp
sti
fwait
sarb
test
rolb
ja
mov
or
movsb
jle,pn
int3
inc
mov
bound
test
ss
iret
aaa
xor
mov
lock
stos
ljmp
sbb
lcall
pop
or
push
scas
call
jecxz
adc
push
pop
mov
cmpl
test
call
add
clc
je
daa
and
out
mov
xchg
inc
gs
mov
ret
cli
lahf
bound
bndldx
insl
mov
shl
ret
aam
ljmp
jmp
in
ja
xor
mov
aam
ss
xor
jl
push
std
inc
jg
push
ja
dec
push
lret
mov
push
push
and
lcall
cmp
add
xor
adc
out
jge
out
incl
incl
data16
ror
fwait
popa
jg
xor
mov
mov
loop
outsl
inc
and
pop
cltd
es
pop
data16
lods
lods
mov
jnp
mov
insl
push
mov
mov
nop
mov
adc
andb
xchg
repnz
hlt
add
xchg
push
popf
ret
sbb
dec
mov
cmp
cltd
sahf
push
enter
add
test
sbb
inc
mov
adc
jb
sbb
push
cmpsl
dec
aaa
jbe
inc
sbb
push
inc
inc
push
push
repnz
decl
sbb
and
popf
cltd
lods
test
jo
jne
or
xchg
inc
or
insl
lods
js
jno
mov
mov
jnp
shrl
jnp
push
sbb
movsl
daa
shr
das
pop
mov
es
or
fadd
xchg
inc
loop
mov
xchg
xchg
dec
sbb
aaa
sbb
jns
or
push
cld
fwait
pushf
jns
mov
xchg
xchg
lret
sub
xor
mov
mov
outsb
sbb
sub
addr16
or
je
std
or
lcall
fs
adc
jecxz
mov
call
xor
cs
push
jb
int3
xor
mov
sbb
mov
mov
sub
into
das
aaa
fiadds
and
jo
mov
pop
cld
inc
mov
fstpl
addr16
leave
jo
add
fimuls
sub
push
or
nop
cmp
cmp
inc
rol
daa
dec
pop
jecxz
hlt
sbb
mov
fcompp
push
mov
add
xor
or
sti
cltd
mov
popf
leave
cmp
mov
scas
sarb
mov
pop
push
mov
pop
mov
inc
and
or
pop
insl
aad
imul
shll
div
outsl
scas
mov
pop
or
arpl
shll
test
insl
sub
addl
nop
jg
test
aaa
mov
xor
pop
popf
jge
je
mov
ret
xchg
inc
push
jg
pusha
pushf
sub
movsl
lea
add
xor
mov
nop
pop
sub
mov
dec
inc
pop
inc
mov
popa
shll
shrb
daa
xor
mov
clc
push
mov
mov
mov
loop
mov
fstl
sbb
jno,pn
das
sub
mov
push
pop
push
dec
mov
jmp
repz
cmp
mov
fistl
je
enter
insl
dec
test
mov
xchg
pcmpgtd
test
dec
sbb
roll
pop
in
jp
jo
aaa
sbb
pop
mov
cld
xchg
lahf
adc
sti
and
lock
pop
mov
in
subb
mov
repz
and
js
dec
pop
fwait
dec
adc
test
xchg
mov
in
sub
or
inc
test
push
jecxz
hlt
pop
mov
cld
out
dec
aad
ja
sub
sbb
lock
dec
decl
xchg
fdivrp
pop
xchg
ja
inc
les
movsbl
mov
push
loopne
jb
xchg
insl
test
aaa
incb
mov
xor
test
sub
ss
jne
and
cmp
sti
jne
jge
mull
inc
fnstsw
inc
sti
out
or
fsubs
sub
sahf
jae
sbb
rorl
pminsw
xorl
mov
or
test
push
aas
fsubrl
mov
and
lods
mov
outsb
outsl
pop
js
dec
jae
push
test
nop
mov
mov
push
inc
shl
jae
movl
imul
insl
xor
decb
lods
rcrl
scas
sbb
jae
pop
jno
xlat
jae
std
sub
pop
xchg
loopne
cwtl
fs
cmpb
push
sub
scas
adc
js
sbb
or
es
adc
das
call
or
xchg
xchg
xchg
jp
adc
mov
je
mov
mov
int
lcall
mov
push
fdivr
sub
and
in
lea
dec
xor
nop
aad
pextrw
sbb
enter
imull
pop
xchg
adc
push
out
subb
in
push
icebp
aam
addr16
imul
jp
and
xchg
jg
test
stos
jle
mov
or
shll
aad
subl
adcl
dec
lock
rcl
insl
cmp
popa
adc
outsb
incl
inc
pop
jo
push
ficoml
inc
lods
and
je
aad
adc
testl
mov
jecxz
cmp
fisubl
and
dec
gs
sub
or
jbe
mov
lret
pushf
int
adcb
push
dec
mov
lock
bound
orl
ret
jmp
sub
jge
pop
jle
push
pop
mov
add
sti
jne
adc
stos
hlt
jle
pop
inc
fs
or
lcall
rolb
adc
ljmp
std
rclb
sbb
mov
mov
mov
mov
mov
mov
clc
fisttps
enter
xchg
dec
or
lret
add
cltd
stc
stc
jge
xchg
jne
mov
xor
mov
mov
mov
add
faddl
scas
stos
testl
dec
push
mov
pusha
mov
pop
adc
inc
subl
imul
in
sbbl
adc
jp
mov
test
ret
jl
mov
jecxz
lds
mov
addb
pop
gs
push
jl
or
lahf
pop
dec
ret
cmp
out
stos
int
mov
repnz
insl
pop
mov
in
ret
ja
popa
jnp
shll
sub
outsl
jl
cmp
mov
sbb
mov
mov
lret
repnz
or
mov
nop
mov
push
iret
push
mov
mov
pop
sbb
cmp
mov
jle
repz
mov
aad
lods
inc
or
les
lcall
rol
fnstsw
jo
lock
dec
and
fstpt
xor
jnp
lret
or
jbe
andb
lds
insl
aas
aad
jbe
adc
inc
ja
inc
dec
pop
inc
fdivl
insb
mull
ljmp
and
int
pop
cltd
adc
xor
push
adc
fs
cmc
mov
jbe
aam
xorb
jb
sub
pop
rolb
pop
mov
out
jb
fisubrl
dec
mov
dec
mov
lret
rolb
adc
sub
ds
pusha
or
jns
scas
push
add
sbb
dec
add
pop
stos
nop
aam
test
push
repnz
mov
sbb
mov
and
mov
std
lds
fsubl
in
inc
fidivrs
test
inc
in
mov
xor
dec
mov
aam
push
cli
repz
lret
dec
dec
shlb
loop
ret
outsb
adc
cmc
nop
mov
loopne
sbb
jno
and
lret
fcoml
mov
aad
sbb
ja
cwtl
sub
mov
mov
jns
cmp
xchg
iret
nop
jg
hlt
mov
mov
js
out
mov
sub
inc
pop
jl
ret
lods
fsubl
std
cmpsb
xchg
popf
sbb
fcmovnu
notb
test
cmp
cli
xchg
mov
out
in
push
or
sbb
sbb
jbe
xor
pop
lock
pop
cmp
loopne
ds
or
sbb
xor
inc
adc
out
pusha
ljmp
scas
mov
aaa
mov
or
pushl
xchg
sub
sbb
jbe
or
push
cmp
in
movsl
push
pop
mov
call
jge
and
mov
faddl
lea
mov
fsubrl
fdivp
test
cmc
xchg
xchg
sub
mov
loopne
stc
mov
sub
push
shl
outsl
cli
divl
and
sbb
pop
mov
pushl
inc
clc
nop
sub
js
sub
rol
dec
les
fs
mov
sahf
pop
call
fst
mov
jge
or
mov
dec
outsl
insb
dec
dec
pop
mov
pop
outsl
cmp
inc
or
jne
mov
cli
jo
ljmp
rcl
loop
int
sub
lret
sub
dec
popf
call
aas
jbe
mov
fcompp
cmpsl
sahf
add
imul
fdivrp
jnp
pop
out
adc
aaa
inc
in
sahf
clc
in
dec
mov
or
dec
mov
sbb
cmp
push
std
pop
insb
sahf
dec
add
or
push
cwtl
ret
pop
push
insl
jnp
jbe
ret
lret
adc
pop
xchg
fisubs
or
enter
inc
mov
cmp
lret
add
and
add
fsubrs
push
add
pop
push
jne
sub
add
icebp
dec
jns
xor
ss
push
or
rorb
xor
xor
into
jne
mov
cli
adc
push
aas
daa
pusha
arpl
jno
sub
mov
loopne
pop
daa
add
in
popw
enter
mov
xlat
xor
inc
scas
adc
dec
inc
dec
add
xchg
test
lods
test
push
lods
pop
fdiv
inc
or
icebp
jg
nop
lock
sbb
push
and
inc
cltd
sbb
les
gs
or
enter
or
loope
adc
and
jae
mov
lds
cmp
xchg
mov
mov
push
xor
pop
lods
mov
cmp
ficomps
not
cmpl
js
jbe
push
push
cld
adc
push
jne
lcall
mov
push
jp
clc
and
add
out
jnp
mov
mov
xchg
mov
sbb
imul
xor
cmc
adc
cs
push
adc
fwait
cmp
daa
daa
out
pushf
addr16
push
cmp
lahf
enter
cs
mov
jle
push
push
xor
sbb
outsb
fistpll
pop
aad
pusha
xor
or
adc
ret
or
mov
rorb
fidivl
les
rcll
rcrl
mov
mov
cmp
cwtl
icebp
xor
fcmove
sbbb
fsubs
jg
lret
mov
lds
push
jne
stos
or
movsb
cmc
xchg
je
jg
mov
add
cld
inc
sub
lods
repnz
ljmp
loop
jge
sbb
mov
ds
test
jnp
inc
aam
mov
push
rolb
adc
mov
fistpll
mov
dec
mov
mov
sbb
lret
ret
jbe
mov
push
test
sar
add
or
fstpt
dec
cmp
push
xor
push
shl
imul
je
sub
packsswb
cwtl
lahf
aam
push
jmp
out
gs
xchg
cltd
sub
hlt
push
xrelease
xor
xlat
lods
pusha
hlt
rcrb
mov
mov
add
xlat
mov
pop
gs
aad
ficomps
outsl
imul
xor
inc
and
loopne
cmp
je
sbb
call
test
sahf
mov
inc
adc
movsl
cmpsl
stos
xor
sarb
je
and
in
dec
sti
mov
stos
rcrb
jo
insl
cwtl
mov
fsubs
ljmp
fisttpll
aaa
jge
sub
pusha
std
cli
and
out
shr
sahf
lock
add
add
jno
je
imul
lds
outsl
lea
inc
das
cmp
push
jbe
fisttpl
xor
faddl
rcrl
lods
inc
lods
inc
and
jge
das
rorb
and
xchg
shrl
add
push
lahf
mov
inc
in
ss
popf
nop
aad
pop
sbbb
loop
stc
xlat
lods
pop
stos
rclb
repz
lods
mov
lahf
in
push
or
add
loope
rcll
jbe
mov
inc
push
jmp
jnp
cmc
jle
out
lea
shlb
je
pop
stos
mov
and
mov
jg
xor
mov
orb
in
adcb
lcall
popf
mov
sub
in
xor
lcall
sbb
mov
pop
popa
mov
or
xor
lock
cltd
push
loope
pop
mov
out
aad
sub
push
cmc
aam
mov
lret
call
and
jno
fidivs
aaa
cmp
pop
pop
push
jg
mov
pop
jg
hlt
sarb
adc
mov
imul
xchg
jg
jg
lods
popf
jp
pop
jp
push
mov
sub
repz
jne
mov
or
add
and
iret
xor
in
or
pop
xchg
jb
clc
pop
xchg
cmp
cwtl
nop
out
outsl
inc
xchg
xchg
pop
faddl
sbb
aaa
hlt
mov
repz
and
outsl
loope
int3
dec
out
mov
mov
fs
adc
xchg
call
or
pop
dec
push
fcomps
pop
sti
dec
cli
adc
imul
xor
daa
orl
push
push
rcr
cmp
jecxz
push
and
psrlw
jl
test
fstp
stc
mov
sahf
pusha
inc
imull
addr16
pop
and
mov
movl
lods
lcall
rorw
jl
jbe
adc
inc
jo
mov
scas
pop
adc
std
push
add
fcomip
mov
in
xor
aam
xor
pop
push
adc
add
sbb
sub
xchg
and
push
out
fistps
adc
xor
mov
jno
fwait
push
pop
add
lods
xchg
xchg
fsubrs
outsb
call
mov
jnp
test
and
sbb
pop
fisttpl
and
cld
or
and
push
mov
sbb
lea
rcrl
loop
mov
mov
dec
add
fmuls
imul
xor
mov
fidivrs
cs
aaa
and
mov
mov
orl
fnclex
gs
je
gs
dec
rcrl
push
mov
pop
inc
pop
xchg
mov
pop
aaa
sub
xor
cmp
cld
int
js
push
mov
xor
pop
mov
add
mov
out
popf
sbb
int3
mov
outsl
insl
mov
inc
cmc
lcall
js
ret
push
xchg
sbb
dec
cld
movsl
stos
arpl
bswap
push
cmp
adc
xor
or
mov
jmp
xor
jge
and
movsl
and
inc
js
mov
popa
stos
hlt
cwtl
std
repnz
daa
jb
mov
jne,pn
add
outsl
aas
test
mov
cld
adc
scas
mov
sbb
push
mov
ja
sbb
outsb
mov
call
add
mov
mov
push
push
bound
stos
adc
inc
sub
mov
push
lods
shlb
mov
adc
fists
test
ret
jg
aad
test
xchg
ja
iret
das
dec
add
fisubl
stos
lock
sahf
scas
mov
jle
enter
jle
push
fldt
inc
insb
mov
mov
stos
dec
pop
mov
out
push
int
adc
xchg
cs
push
negl
jge
jmp
push
nop
xchg
sti
and
push
or
inc
ds
pop
mov
ljmp
inc
jns,pn
pop
jo
lcall
push
sbb
scas
pusha
aaa
fidivs
inc
mov
xchg
pop
mov
sahf
jne
movsl
mov
add
dec
xorl
imulb
andb
repnz
jl
mov
cs
cld
mov
mov
cld
fstpl
cs
lcall
pop
je
shll
cmp
pop
sbbb
jmp
jbe
adc
imul
jno
loope
add
and
insl
pop
je
fwait
repnz
rcrb
push
es
jne
repz
aas
mov
inc
enter
xchg
or
loop
outsl
mov
cli
mul
inc
clc
outsb
cltd
push
and
sar
outsl
test
push
sti
dec
idivb
cltd
jnp
xchg
inc
cmc
mov
out
sub
inc
mov
pop
mov
or
pop
xchg
add
pusha
or
pushf
cs
push
inc
adc
and
mov
fmull
hlt
in
outsl
sbb
dec
add
xor
or
sbb
je
xor
cs
mov
mov
or
popf
jno
lcall
lahf
shlb
test
mov
xchg
leave
outsb
pop
stos
mov
mov
fcomip
pop
mov
inc
pop
dec
mov
int
pop
in
jge
push
dec
ja
lods
mov
inc
cmp
lcall
fdivrl
hlt
cmp
mov
dec
mov
add
cmp
sub
sbb
lahf
outsb
and
mov
test
cld
push
into
out
imulb
xchg
pop
inc
cli
add
stos
loope
cmp
ja,pt
out
xor
scas
mov
sbb
add
lds
addb
imul
mov
mov
jl
orl
je
push
or
mov
jmp
mov
pop
sbb
mov
lods
sarl
test
loopne
lock
popl
or
sbbb
dec
dec
push
jecxz
add
rcr
xchg
loop
push
stc
pop
lret
inc
sbb
int3
pop
in
loopne
int
jae
repnz
out
mov
ss
cwtl
fidivl
inc
mov
stos
idivl
sahf
xchg
jp
outsb
test
dec
shrl
mov
adc
mov
mov
pop
ja
mov
shll
add
mov
div
aas
mov
jl
add
call
insb
scas
inc
sbb
mov
aam
loope
jg
mov
sbb
mov
mov
pushf
inc
xor
cmp
xor
mov
repz
cmove
js
jge
adc
scas
inc
dec
aad
scas
addl
push
mov
flds
das
aaa
sub
mov
subb
imul
dec
jae,pn
add
cmp
jmp
xchg
or
cmp
adc
sub
loope
stos
sahf
movsb
lcall
ds
stos
add
out
mov
rolb
and
inc
aaa
sbb
aas
in
rcr
enter
sbb
cmp
ret
pop
or
fstpl
loope
mov
mov
jg
jecxz,pt
ljmp
xlat
mov
call
push
in
dec
lea
loope
outsb
ja
cmp
cmpsl
push
xchg
mov
or
call
jbe
adc
lock
into
negb
and
test
lods
cmpsb
xchg
add
jp
and
pushf
daa
das
loop
test
inc
jmp
mov
or
loopne
imul
adc
sbb
add
test
int
fbstp
addb
mov
mov
test
sub
in
xchg
shrl
xchg
out
inc
mov
nop
cmc
cs
filds
fmuls
xor
adc
push
inc
in
mov
sbb
push
dec
jge
add
stos
int3
in
xor
jbe
cmp
push
cmc
shll
push
pop
jo
popa
loopne
mov
adc
popa
xchg
call
clc
pop
mov
mov
fs
and
gs
fwait
push
aam
jae
pop
lret
sbb
sbb
sub
mov
jle
xchg
push
or
iret
outsl
pop
fidivrl
add
mov
insb
loopne
xchg
push
clc
mov
xchg
sti
xor
test
test
inc
add
or
cld
lock
xor
shll
pop
addl
inc
and
jle
loope
mov
pop
int3
adc
scas
pop
xchg
mov
subl
inc
incl
cmpsl
outsb
xorb
scas
cmp
sbb
rcrb
xchg
fstps
push
cld
mov
lea
rcrl
aas
jp
aas
gs
mov
fidivs
je
les
xor
fcomps
bound
and
arpl
aam
jle
push
mov
imul
ficompl
inc
and
mov
dec
enter
sbb
mov
xchg
lods
cmc
cmp
test
mov
insb
stos
add
add
pop
fistpl
popa
add
call
popf
mov
outsb
shr
push
out
or
jmp
loopne
dec
outsb
mov
imul
add
mov
in
mov
js
sbb
aad
xchg
outsb
mov
cmc
mov
jecxz
add
jg
test
aaa
cld
xchg
or
xchg
pop
add
adc
pushf
adc
pusha
imul
data16
mov
xchg
cwtl
sbb
iret
pushf
lock
ss
push
and
roll
out
ret
fsub
jbe
xchg
sbb
sbb
jg
dec
icebp
dec
mov
clc
xchg
movsb
inc
sbb
cmc
leave
in
mov
mov
fildll
movsl
sbb
dec
cs
xor
sbb
test
cli
in
lock
mov
cmp
cmpsb
dec
cmp
pop
out
cmp
aaa
bound
jne
out
xchg
add
lds
dec
lahf
xchg
cmc
mov
in
test
mov
popl
adc
pop
or
pop
mov
add
adc
std
jg
adc
jns
adc
outsl
les
pop
lahf
pop
repnz
cld
dec
and
pushf
in
mov
mov
fldl
clc
adc
and
push
daa
loopne
insb
sub
mov
cld
pop
les
rcrb
mov
inc
fs
stos
out
ret
out
xchg
shlb
inc
lcall
lock
fisttps
aam
subb
fdiv
pop
adc
dec
call
clc
mov
xor
jle
push
push
and
inc
mov
leave
aaa
push
inc
or
stos
jne
rorb
or
pop
jle
jne
adc
mov
insl
add
add
cmpsb
mov
data16
mov
mov
and
in
scas
mov
or
mov
pop
outsl
inc
sub
or
popa
push
or
out
jno
jb
and
mov
movsl
neg
cmc
jnp
inc
fldcw
xchg
mov
and
dec
addr16
clc
movsl
movsl
pop
xchg
cmp
pusha
loopne
mov
test
push
cwtl
xchg
inc
xor
fistpl
add
inc
push
lcall
ss
stos
hlt
loope
or
cs
xchg
fs
loope
lea
pusha
and
jns
sbb
outsb
push
in
xchg
data16
call
push
addb
mov
icebp
fwait
mov
dec
sub
sub
mov
mov
jns
mov
pop
dec
jl
sarb
pop
stc
test
xlat
and
je
jne
popa
cld
daa
sub
xchg
sbb
mov
outsl
das
sub
jg
aad
push
aad
sbb
cmp
les
faddp
push
ss
adc
add
mov
stos
imul
and
mov
add
cwtl
adc
xchg
ds
loopne
pop
xchg
mov
adc
unpckhps
pusha
imul
test
xor
xor
je
pop
jle
push
cmp
xchg
add
data16
cs
sub
call
es
fstpl
loope
and
nop
aas
aad
sub
int3
add
add
jge
outsb
sbb
int3
sbb
ret
jl
cmp
rcll
daa
sbb
clc
mov
mov
loop
jbe
xchg
mov
subl
sbbl
fistpl
xor
or
sahf
add
psubusw
sbbl
std
cmp
sub
adc
aas
fdivl
sub
fimull
sbb
std
sbb
cmpsb
xchg
sbb
rolb
test
scas
sub
clc
outsl
dec
or
dec
test
ljmp
loop
add
mov
aam
add
xchg
call
decb
jl
clc
stos
and
pop
icebp
daa
cmpsl
xor
xchg
pushf
loopne
ljmp
rclb
mov
add
shlb
notb
lds
out
pop
js
lods
sbb
xor
out
pop
mov
icebp
mov
pusha
cmp
scas
test
lock
rclb
cli
pop
ret
cmp
imul
ss
and
sub
push
sbb
test
outsb
enter
mov
inc
mov
outsl
mov
mov
stos
mov
xor
lds
mov
rcrl
mov
mov
xor
fs
mov
dec
mov
lods
sub
outsl
mov
pop
or
push
loope
jne
subl
pop
pop
stos
scas
shl
insb
xchg
stos
or
jg
jg
adc
cmp
inc
push
sbb
fistpll
mov
aaa
cltd
rolb
frstor
inc
mov
xlat
and
xor
fstpt
clc
mov
fisubl
jge
insb
xchg
mov
xor
or
loopne
xchg
cs
addl
dec
cmp
add
dec
std
mov
sbb
mov
sub
mov
stos
sub
push
and
mov
mov
sub
shrl
popa
or
cmp
rclb
mov
sub
pop
jae
mov
sbb
call
mov
dec
push
fadds
xor
iret
add
imul
or
xor
jbe
rorl
rcll
mov
aam
sub
or
shrb
pop
repz
add
pop
stos
xchg
and
push
inc
xchg
push
lock
ret
es
sbb
pop
xor
inc
xor
loopne
pushf
fnstsw
addl
mov
testl
loope
jmp
mov
xchg
inc
mov
add
gs
int3
push
adcb
mov
in
pop
cli
mov
gs
sub
and
sti
arpl
lret
and
fistl
ret
mov
push
xor
sub
pop
jg
and
mov
xor
cmpl
hlt
das
mov
xor
out
jbe
jo
sbb
fnstenv
mov
xchg
jmp
in
sub
jnp
pop
or
sub
push
sub
loopne
cmp
ds
mov
add
ljmp
lock
ljmp
cmc
ss
sbb
push
ror
lcall
addr16
xlat
cmpb
mov
ficompl
or
inc
cmc
popf
scas
dec
fwait
data16
xor
insl
add
mov
and
and
add
outsl
adc
enter
std
jecxz
pop
mov
add
negl
and
cmp
xchg
cs
inc
jnp
dec
or
aam
andl
pop
xchg
or
mov
dec
mov
jle
mov
jo
pop
dec
inc
mov
aaa
sbb
fmul
fldt
testb
pop
adc
fwait
mov
loope
cs
adc
mov
stos
shll
pop
adc
in
push
or
popa
ljmp
xor
aad
mov
add
mov
pop
push
std
in
add
aad
mov
jo
test
mov
loope
test
inc
sbb
ret
bound
movsl
scas
fbld
in
bound
mov
outsl
test
roll
mov
rcl
xor
adc
jne
jno
int3
pop
or
movsb
and
or
add
lock
adcb
ljmp
repnz
pop
addr16
fistps
cld
or
dec
pop
pushf
js
subb
pop
ficoml
int3
cmpsb
sbb
pop
es
xchg
push
xlat
adc
test
enter
inc
or
test
or
jmp
movsb
lahf
push
test
adc
aas
leave
push
sbb
idiv
cmpl
notb
sub
xor
adc
jge
addr16
push
jno
pop
inc
clc
cmp
mov
xor
aas
cltd
sbbb
data16
xor
pusha
pusha
pushf
jb
push
mov
in
and
push
sbb
shlb
pop
movsl
lret
inc
cld
add
mov
and
or
stos
scas
cmp
mov
fsubr
loop
enter
xlat
xor
push
mov
sub
loopne
jne
aad
fnstenv
pop
mov
dec
or
iret
add
icebp
ret
test
mov
jae
repnz
and
xor
sbb
test
and
jno
xchg
inc
and
incl
pop
imul
add
xor
add
cli
sub
cltd
cmp
sub
std
cmc
shll
cmpsl
push
inc
inc
mov
adc
clc
or
ds
addps
lahf
or
or
adc
insb
and
sbb
leave
shl
xchg
mov
js
pushw
aad
mov
mov
lea
sbb
pop
fsubl
lock
daa
push
pusha
loope
pop
clc
jo
cltd
pop
ds
pop
in
out
cmpb
cmp
movb
in
cmp
push
fisubrs
add
jl
aam
mov
or
xlat
xlat
into
cmp
dec
js
and
cld
push
dec
call
sub
fildl
test
push
fdivs
xor
scas
pushf
aaa
sub
flds
sbb
sbb
add
jae
pop
pusha
jmp
movsb
mov
fwait
jle
pop
cmp
int
push
in
incl
dec
out
add
bound
popa
sti
cmp
nop
mov
call
jp
repnz
inc
push
test
sbb
and
and
nop
cmp
or
mov
imul
adc
lret
sub
push
adc
test
ret
aam
loope
adc
mov
jp
pop
mov
dec
xor
jl
xor
inc
jmp
lcall
fidivl
mov
mov
lret
dec
xchg
add
std
sub
int
push
or
push
cmpsb
sbb
push
push
dec
inc
inc
lods
loope
pop
sarb
test
push
inc
aaa
xlat
or
sub
pop
lock
fdivrs
daa
lret
or
adc
or
cwtl
mov
sbb
xchg
cwtl
xchg
clc
aad
aad
lods
jg
push
jg
and
add
outsl
mov
inc
push
jno
imul
xlat
stc
incb
push
shrb
rorb
xchg
or
and
jle
sbb
cmp
das
fdivrl
stos
mov
adc
lcall
call
xor
mov
cli
inc
cmc
xor
cmp
and
adc
pop
and
pushf
fcmove
or
cmp
mov
popf
adc
test
adc
cmp
jmp
jmp
dec
dec
and
and
test
scas
pop
je
inc
push
enter
push
xchg
inc
in
gs
inc
mov
xchg
pop
aad
or
xlat
push
sub
loop
mov
frstor
fs
sbb
incb
test
push
fcmovnbe
fdivrp
dec
cld
test
lods
sub
push
arpl
mov
mov
fidivl
repz
dec
inc
scas
movsb
mov
dec
iret
and
fsubrl
sub
imul
and
pop
jnp
outsb
pop
lret
mov
in
popa
test
mov
or
and
fmull
adc
pop
cld
ss
add
mov
mov
in
lcall
bound
bnd
jb
test
and
decl
inc
jae
clc
pop
adc
pop
pushl
je
les
shlb
bound
xor
or
test
popf
mov
xchg
stos
out
sbb
adcl
idivl
rorb
mov
cmc
jp
cmp
lret
leave
pop
sahf
push
inc
pop
pop
cltd
pop
adc
lock
mov
xchg
pop
fcmovnu
jo
bound
pop
push
daa
scas
dec
faddl
faddp
movsl
inc
adcb
pop
jae
pop
add
adc
push
fnstenv
mov
jne
inc
bound
mov
pop
pop
js
repz
dec
popf
scas
aad
lahf
std
out
jl
testb
scas
ficompl
fsubrl
jge
xchg
mov
xchg
inc
jns
xchg
gs
fistpl
inc
cmp
dec
aam
or
in
mov
dec
xor
popa
sbb
in
lock
fisubrs
mov
clc
sub
and
icebp
xchg
cmc
and
cmp
jo
and
dec
fdivs
mov
push
mov
push
orb
and
mov
xor
test
fisubrl
adc
push
mov
fwait
stc
push
xchg
sbb
dec
sbb
inc
mov
pusha
xorl
fwait
or
add
mov
mov
outsb
add
mov
rcll
dec
sbb
adc
mov
or
addb
xchg
xor
xorb
outsl
cmc
mov
ret
orb
inc
in
fistps
push
adc
mov
or
pop
or
scas
imul
addb
in
sbb
test
or
push
jnp
and
iret
subb
pop
fsub
cmp
iret
rolb
das
hlt
mov
xor
rol
ss
and
lods
fadd
insl
stc
push
xchg
sbb
mov
xor
js
lea
outsb
in
ds
mov
movsb
repz
scas
mov
fsubrs
repz
imul
incl
add
and
mov
push
ss
filds
lods
in
or
inc
les
out
dec
ss
dec
aad
cmp
cmp
mov
loope
push
xor
dec
test
xor
into
arpl
push
push
int
inc
jg
mov
push
fmuls
mov
andb
ja
adc
in
sbb
jnp
xlat
pop
dec
sbb
xor
popa
pop
in
jno
fldt
sub
mov
push
add
mov
push
sbb
jge
ret
inc
ljmp
jg
xchg
mov
pusha
data16
mov
roll
test
push
cmp
inc
mov
fwait
mov
inc
inc
cli
lods
fstpt
lcall
cmp
int
push
stos
sbb
sub
cltd
or
arpl
jo
insl
sbb
outsl
loopne
pop
clc
xchg
in
sub
outsb
aam
xor
loopne
hlt
loope
in
cs
push
xchg
ret
insl
jbe
xor
mov
leave
jb
insl
arpl
xchg
fldcw
adc
dec
cmpsb
ret
stos
cmp
pushf
ror
test
inc
dec
mov
adc
sub
lods
mov
lea
stos
aas
cmp
popf
dec
add
shr
js
sbb
mov
sub
mov
stos
or
jbe
enter
push
data16
js
fldt
mov
jl
imul
aam
xor
in
enter
and
push
lds
fprem1
and
xchg
repnz
nop
mov
lea
cs
dec
dec
xchg
mov
or
push
ret
sub
push
icebp
adc
mov
push
mov
or
mov
adc
pop
mov
hlt
jg
popa
add
rol
sbb
ljmp
jp
xor
dec
mov
adc
or
cs
mov
les
lret
and
fidivrs
jl
lods
repz
test
in
aaa
fbld
mov
test
jecxz
cmc
test
sti
push
je
pop
in
sysret
sbb
add
sahf
xor
popa
loope
and
js
push
sbb
scas
lds
cmp
mov
lahf
pushw
dec
or
pop
jo
xlat
sub
pop
sub
and
cmpsb
add
cmp
insb
adc
sub
mov
or
ds
adc
push
xchg
push
fcomi
pop
jl
mov
shlb
adc
lret
popa
cli
sbb
movsb
sbb
icebp
cli
pop
pop
nop
or
imul
pop
enter
hlt
inc
lock
mov
leave
xchg
inc
lcall
jmp
loop
cmpsl
stos
andl
push
push
jmp
inc
aam
hlt
in
rcrl
das
mov
testb
sub
nop
stc
cs
fldenv
call
cli
cmpsb
loopne
aaa
popf
inc
xchg
test
push
ja
cmp
test
filds
xor
cmp
shrl
jle
lods
xchg
xchg
arpl
lods
cltd
jo
aas
mov
jmp
insl
repz
rolb
call
cmp
add
in
cmp
mov
push
xchg
in
rorb
mov
rolb
daa
andb
mov
adc
cld
dec
pusha
jne
xchg
pop
sbb
push
lock
gs
bsr
push
test
scas
test
sbbl
mov
stc
inc
add
xor
adc
imul
nop
incb
sbb
dec
iret
bound
mov
inc
leave
inc
in
mov
stos
shll
std
mov
fimuls
mov
shl
clc
adc
loopne
js
lret
xor
sbb
pusha
ljmp
cmpsl
lds
cmp
jbe
clc
stos
mov
and
cmp
loope
mov
or
ds
orb
sub
ffreep
ljmp
aad
movsl
dec
cmp
popa
adc
mov
mov
mov
adc
sarb
pop
xchg
ds
mov
retw
insl
add
icebp
xor
testb
sub
pop
lds
popl
xchg
add
or
outsb
mov
lahf
pop
sub
mov
in
add
int
mov
jle
adc
push
mov
sbb
out
ffree
sti
dec
mov
push
inc
cmp
inc
or
pop
mov
jge
cmp
in
sbb
popf
das
rcrb
lock
mov
mov
mov
or
mov
adc
fs
sbb
jg
frstor
es
pop
in
sub
sbb
push
mov
cmc
dec
cmp
mov
ss
inc
or
add
inc
fsubrp
imul
or
cmpsl
mov
xchg
or
ja
fdiv
cmpsl
push
pop
mov
je
add
xchg
mov
addb
pop
cmp
adc
scas
mov
sbb
dec
cli
jle
sbb
push
stc
xor
testl
dec
or
pop
movsl
ds
inc
fs
mov
addr16
cmp
test
pop
int3
std
jo,pn
addl
adc
push
mov
fisubs
subl
mov
stos
clc
testb
rcrl
xchg
adc
mov
xor
sbb
sub
repz
inc
jecxz
mov
sub
in
ljmp
inc
pop
mov
rcrl
pop
mov
adc
or
or
ret
test
movsb
xchg
jmp
shlb
inc
push
sub
testb
insl
cmp
js
mov
add
lret
push
xchg
mov
cs
mov
xor
loope
sbbl
ja
mov
jle
xor
xor
aad
scas
mov
fsubr
cltd
jo
jecxz
sbb
pop
aad
leave
shrb
pop
xchg
adc
lock
add
adc
divb
repnz
push
sbb
cld
xchg
rorb
xor
sbb
push
or
pop
or
cmp
push
jne
fimuls
bound
sub
xchg
mov
iret
cmc
fdiv
pushf
lds
add
pop
cmp
ret
out
add
push
mov
jo
rcr
stos
mov
fcomip
movsl
mov
ret
lret
adc
ds
xor
mov
stos
mov
mov
arpl
sbb
orb
dec
lods
sbb
ja
fisttps
jo
out
lcall
icebp
or
jg
push
cld
jb
xchg
outsl
mov
mov
add
jo
push
sub
sub
mov
insl
or
push
inc
js
and
addr16
mov
cld
sub
or
xchg
cmpsl
dec
sbb
shr
jmp
adc
movsl
or
xchg
cli
loope
fidivs
push
lock
cld
adc
sbb
out
nop
add
push
push
mov
push
mov
xor
mov
adc
ds
mov
inc
mov
out
pop
popf
pop
rclb
adcb
int
test
dec
repz
jns
test
or
pushf
fbld
pop
sbb
mov
jge
or
das
or
lock
je
negl
shrb
or
mov
jnp
xchg
pusha
inc
lock
lock
ljmp
lods
orb
push
or
out
or
fstpl
pop
lea
call
mov
sbb
pusha
adc
nop
loope
shlb
and
out
xchg
scas
test
loop
pop
mov
jg
push
or
sbb
lahf
stos
rcrl
xchg
jp
mov
xor
enter
rclb
pop
fildll
xchg
test
inc
jno
sub
jecxz
sbb
inc
mov
and
push
jg
loop
dec
xlat
xlat
cwtl
mov
out
add
lock
push
fs
and
dec
mov
mov
int3
pop
push
ljmp
pop
sbbb
insb
cld
mul
dec
cmpsb
inc
imul
ja
jg
push
mov
pop
pop
ret
cmp
adc
xchg
mov
xchg
sahf
dec
inc
sub
jne
or
in
outsl
insl
clc
test
cmp
dec
or
pushf
popa
lds
dec
icebp
sahf
subb
ret
frstor
in
cmp
and
and
dec
jp
push
push
pop
lahf
das
fdivrl
xor
lahf
sbb
ret
xchg
pop
loopne
ljmp
push
jnp
fnstsw
pop
lahf
mov
jne
in
fdivrp
gs
push
inc
call
pop
imul
fimull
sbb
xor
je
aam
fwait
test
aam
and
adc
lret
mov
xchg
inc
xor
in
mov
or
add
movsb
jnp
cmpsl
adc
cmp
cmpsl
sbb
push
das
cmc
inc
stc
sub
sub
orb
insl
xorl
fwait
pop
popa
outsb
pop
lods
jns
div
mov
repz
add
rolb
int3
int
cmc
call
and
cmp
stos
cmp
pop
mov
sahf
call
andb
mov
push
jno
jecxz
mov
and
cli
fnsave
push
cwtl
es
push
push
jo
cmp
mov
cld
das
push
hlt
push
add
xchg
aam
mov
ret
popa
repnz
xchg
adc
push
jbe
mov
fnstcw
cmp
adc
jecxz
push
jo
cli
call
or
dec
xor
iret
push
mov
or
out
or
mov
push
xchg
jns
cmc
pop
inc
jg
out
dec
push
cwtl
push
jno
mov
dec
in
jns,pt
das
std
ja
jbe
adc
pop
push
inc
popa
or
mov
in
sbbb
std
or
push
out
fildl
push
ss
arpl
pop
push
outsb
jl
pop
inc
jg
aam
stc
inc
push
mov
adc
icebp
inc
mov
xor
inc
test
inc
cmp
les
push
fcoml
lods
lahf
adc
iret
ror
test
add
add
inc
mov
add
ret
bound
jg
sub
push
push
push
stos
flds
aad
add
mov
das
icebp
fcomip
outsl
add
jae
xchg
int
mov
fidivrl
add
mov
mov
fcmovne
aaa
mov
in
cmp
out
stos
aad
mov
lret
mov
mov
aas
xchg
dec
inc
sub
nop
adc
cmp
test
ss
push
add
cmp
inc
inc
mov
cmp
pop
xchg
fisubrl
jo
sub
xchg
minps
js
jo
sbb
add
mov
das
jge
pop
sbb
ljmp
neg
arpl
inc
mov
mov
ljmp
mov
and
sbb
ror
pop
sub
jae
add
data16
xorb
mov
push
sbb
and
aas
inc
lret
lock
stos
sbb
into
pop
sub
dec
push
scas
mov
pop
out
cld
mov
decl
sti
cmp
push
push
jo
push
test
cltd
cltd
xchg
sbb
sub
push
andl
jns
loopne
sbb
push
loope
and
mul
adc
rorl
stos
call
in
push
leave
ss
lock
fsubrp
mov
jb
jno
jb
dec
in
int3
pop
mov
loopne
sahf
jl,pt
cmpsb
mov
xchg
cmp
mov
sbb
mov
pop
xchg
or
sub
mov
push
call
jae
movsb
dec
repnz
loop
outsl
rep
jns
mov
jle
sub
dec
filds
and
loope
das
repz
add
ja
gs
loope
add
pushf
mov
test
mov
mov
lods
notb
sarb
ja
and
push
loopne
movsl
cmc
fadd
push
incb
loop
rolb
cs
aaa
cmp
pop
jmp
sbb
mov
cmp
dec
cwtl
push
cmc
inc
outsl
cmpsb
adc
jl
shlb
sbb
in
ret
dec
push
mov
std
lea
stc
sbb
cld
xchg
les
mov
xor
or
jns
jnp
pop
fstpl
stos
test
loop
pshufw
sbb
adcb
ss
cmc
outsl
inc
mov
mov
and
mov
xor
std
push
mov
cli
mov
pop
fsubrp
lea
sub
push
cmp
dec
int
xchg
pop
adc
ret
nop
nop
push
xor
or
mov
add
jb
xor
sbb
lahf
aam
dec
decb
add
lcall
or
dec
inc
adc
pop
pop
call
neg
sbbb
mov
cld
into
and
lds
hlt
pop
adc
clc
or
clc
ret
aas
enter
jp
pusha
inc
cltd
addb
xor
mov
push
mov
pushl
adc
cli
incb
dec
inc
movsl
popf
ljmp
cli
or
shlb
jbe
daa
mov
xchg
call
inc
int3
sub
sbb
adc
cmpsb
mov
pop
jo
ss
jo
subl
inc
mov
xor
mov
dec
sub
cli
xor
mov
mov
pop
rorb
add
pushf
movsl
cmp
andl
imul
pop
xor
xor
jne
andl
ja
imul
andb
pop
lods
and
faddp
pop
or
std
in
push
xchg
sar
notb
fstp
pop
mov
adc
dec
inc
idivb
push
push
mov
sarb
mov
push
rorb
in
cmp
ja
adc
jo
out
testb
or
lret
sbb
sbb
xchg
pushf
shrl
rcll
stos
mov
ss
out
js
mov
std
pushf
iret
sbb
pop
mov
add
ret
cltd
daa
in
adc
or
sbb
add
or
inc
daa
sahf
dec
call
xchg
adc
cwtl
jns
cli
xchg
nop
jo
push
enter
adcb
dec
js
adc
pop
xor
jne
mov
xor
cwtl
inc
mov
add
pop
icebp
jp
ss
jmp
jbe
cmp
xchg
mov
cmp
dec
push
shrl
add
imul
fsubl
sti
or
divb
addl
pop
jmp
pop
push
pop
xchg
lret
nop
pop
and
xor
das
inc
rcr
pop
pop
adc
or
sbb
push
cli
test
mov
adc
lret
jle
lcall
inc
loop
aaa
cmpsb
or
jp
mov
fldcw
aas
xor
push
mov
sbb
or
inc
repz
jmp
test
xchg
cmp
ljmp
insl
xor
push
xchg
int3
sub
sbb
or
popf
mov
lahf
sahf
jle
jge
sti
dec
add
mov
lock
inc
lods
inc
fwait
js
shrb
lock
fstps
sub
push
adc
inc
inc
cmp
inc
cmp
loopne
push
xchg
addr16
dec
inc
test
mov
hlt
dec
cmp
fisubrs
test
ja
sub
call
dec
popf
mov
cmp
xorl
ljmp
jno
fcmovnu
dec
insb
lds
dec
scas
dec
fldt
xchg
pop
jbe
ret
lds
rcl
push
and
repnz
decl
rcll
fwait
xor
cmp
jnp
push
test
mov
shlb
cmp
mov
add
inc
sub
fcmovnbe
sbb
jge
inc
sub
adc
lcall
fcmovu
mov
and
push
cmpb
hlt
jns
rclb
or
adc
add
movsl
push
pop
xor
jg
sbb
ss
adc
lret
ret
dec
lods
popa
out
test
jmp
pop
bnd
daa
or
fsubs
cmp
shrl
inc
lods
dec
stos
psrld
inc
sub
pop
in
add
lcall
in
or
mov
mul
add
mov
outsl
rclb
lods
pop
sbb
mov
jne
pop
rcrl
push
das
rcl
bound
daa
dec
adc
sbb
sbb
outsb
aas
add
xchg
cmpb
mov
dec
dec
sti
test
push
add
inc
call
add
sub
cmp
sub
xor
and
inc
inc
jb
sub
sti
adc
std
lods
add
mov
push
imul
mov
nop
xchg
aam
popf
repz
bound
sbbl
loopne
mov
adc
cmpl
les
push
and
or
aaa
loop
inc
aad
lods
jecxz
fucompp
notb
jp
xlat
dec
lahf
divl
dec
shrl
add
xchg
or
jge
loopne
les
inc
pop
mov
stos
sbb
sub
bound
js
xor
push
push
outsb
jp
mov
sbb
ret
add
clc
stos
xchg
xchg
inc
xchg
or
sub
lret
cwtl
cmp
push
jae
sahf
lock
inc
cld
stc
push
xorb
outsb
shll
pop
int3
push
mov
jne
jp
imul
ljmp
sub
das
pop
xorb
pop
js
hlt
scas
or
fdivrs
and
or
push
sub
mov
sbb
jmp
add
inc
test
test
and
xchg
or
imul
add
push
lds
dec
xchg
mov
mov
stos
repnz
in
dec
or
incl
clc
pop
insb
lods
mov
dec
inc
sahf
imul
xor
insl
int3
jno
popa
push
push
in
xor
je
xchg
add
enter
leave
shrb
mov
or
xor
mov
or
adc
lret
pop
cmp
mov
outsl
nop
dec
fsubrl
inc
jl
pushf
inc
add
sub
pusha
stos
push
jl
imul
inc
sahf
inc
jno
mov
iret
rolb
cmpsb
fistpl
aaa
out
ss
inc
lods
divl
outsb
int
sbb
jp
inc
dec
scas
loop
icebp
mov
aad
cmp
mov
mov
subl
xchg
cmp
ret
sub
adc
ljmp
jae
jb
fwait
aaa
dec
mov
iret
outsl
shll
dec
xchg
in
mov
mov
mov
nop
loop
lea
int3
push
call
adc
in
clc
lock
outsb
ffree
ja
adcl
jecxz
cs
push
fcmovnb
inc
dec
xchg
cmp
sub
fcompl
repnz
and
inc
mov
movsb
nop
mov
jg
aaa
xor
cmpsb
in
das
rcrb
xor
dec
mov
or
js
out
mov
ja
pop
test
dec
psubb
and
jnp
fisttps
aad
popf
push
xor
ljmp
adc
cmp
sti
clc
mov
gs
xchg
jge
inc
pop
xor
dec
mov
subl
add
outsl
les
sti
nop
bound
enter
mov
and
test
imul
shlb
aam
ljmp
and
lret
sbbl
sbb
outsb
pop
les
mov
outsb
cmp
shr
stc
jo
jge
loopne
mov
out
andb
jns
sub
push
xor
or
sbb
out
lret
outsl
outsl
cwtl
mov
loopne
insl
mov
imul
mov
mov
cmp
outsl
incl
movsb
mov
les
pop
xor
dec
xor
cmpsb
out
xor
orl
inc
push
stos
mov
mov
lods
roll
or
cmp
jmp
mov
push
jns
nop
push
push
inc
lcall
jp
jecxz
data16
sbb
push
pushf
aam
das
cmc
mov
dec
add
cmpsb
push
aam
sub
stc
adc
insb
adc
pop
in
add
sahf
adc
test
inc
adc
fisubrl
xchg
testl
sbb
arpl
scas
mov
enter
xor
and
fmull
or
pop
xor
ljmp
adc
nop
sarb
add
jmp
sbb
dec
nop
scas
insb
mov
lock
loope
cmc
or
pop
cmp
mov
test
push
jecxz
cli
xchg
pop
adc
jnp
je
fistpll
add
lahf
adc
pusha
jb
push
aam
in
fwait
mov
ja
adc
dec
mov
push
jg
aam
pop
dec
popf
stc
cmp
outsl
adc
test
hlt
sbb
aam
aaa
je
inc
cld
and
xor
clc
mov
cmpsl
xor
or
xor
adc
add
or
mov
mov
stos
jb
inc
mov
loop
jp
pop
and
sbb
fs
in
dec
mov
sarb
cld
sub
mov
inc
hlt
mov
pop
cmp
repnz
fstl
or
cli
lea
mov
pop
aad
xor
fs
lods
idiv
aaa
cmpsb
leave
icebp
pop
inc
pushw
jbe
orb
stc
mov
and
xor
nop
fdivl
imull
push
in
push
push
adc
pop
add
and
fstpt
lea
and
ja
push
outsb
nop
js
loop
push
or
divb
fsubrs
fdivr
jmp
xchg
leave
fadds
add
rcrl
adc
pop
stc
int
call
fidivrl
jnp
fsubrs
pop
imull
les
adcl
inc
cmpsb
aaa
jle
mov
pop
mov
pop
jb
adc
sub
repz
jg
mov
jns,pn
jg
mov
stc
sub
enter
mov
sahf
enter
sbb
pusha
repz
and
mov
add
ss
jg
sbb
push
test
or
rclb
sbb
repz
or
mov
fildl
xchg
adc
or
ljmp
xchg
sti
and
pop
cmpsl
or
push
js
mov
mov
sbb
sbb
sbb
dec
aas
les
sbb
adc
out
fwait
cli
inc
data16
inc
or
popa
fists
xor
and
mov
or
test
xor
mov
testl
adc
ja
jmp
movsl
inc
mov
loop
sbb
adc
movsl
sbb
jle
call
in
lret
xchg
gs
sbb
lcallw
or
adc
cs
and
jo
sarb
cmp
repnz
ret
jbe
sti
adc
and
pop
mov
adc
loop
add
and
in
jmp
mov
bound
mov
shrb
int
lahf
mov
jp
push
cmpl
mov
mov
xchg
sub
outsb
ss
xor
imul
xor
mov
outsb
scas
aas
sub
test
push
frstor
dec
sub
or
pop
clc
lcall
test
add
sub
fdiv
into
inc
pop
mov
jae
lods
ss
pop
sub
arpl
out
je
fsubl
jne
nop
sub
aaa
dec
mov
jbe
mov
fidivrs
xor
lret
mov
loope
scas
pop
inc
outsb
cmp
dec
out
mov
xchg
mov
jne
cmp
jl
imul
vcvtss2sd
or
pop
jo
leave
adc
mov
mov
sbb
outsb
les
cld
cmpsl
outsl
gs
and
test
addl
decl
cmpb
aaa
fcoms
sub
xor
ret
out
fadds
sbb
mov
push
adc
pop
sbb
cld
adc
lods
pop
xchg
shll
or
cmp
ljmp
nop
sar
inc
mov
hlt
mov
enter
in
dec
mov
lcall
stos
xchg
inc
ss
pop
add
adc
and
push
pop
inc
adc
mov
jg
push
stos
sbb
ret
or
lahf
inc
dec
loopne
xchg
mov
loopne
sahf
lahf
ficomps
in
jb
mov
jge
cmpsb
mov
in
test
mov
jne
mov
rcrb
fwait
lods
mov
mov
sar
cmpsl
mov
mov
int3
mov
aaa
pop
je
jmp
dec
in
out
neg
mov
int
sahf
sub
mov
aam
stos
ffreep
jmp
inc
xchg
push
sub
push
inc
aaa
out
pop
das
ffree
mov
sub
pop
js
arpl
push
xchg
push
pop
inc
sub
rcl
test
scas
arpl
jg
add
mov
xorl
stc
das
jl
push
push
aad
adc
push
adc
lods
movsl
lods
incl
bound
shl
out
stos
jl
rorl
shr
mov
outsb
lcall
iret
aas
cmpsb
mov
sub
jge
adc
dec
mov
dec
sub
mov
push
xor
add
call
jb
pop
xchg
notb
xor
mov
adc
iret
adc
pop
sub
pop
cmp
je
inc
jb
das
add
pop
add
insb
xchg
leave
dec
jo
mov
out
inc
lahf
dec
add
fcompl
lret
fidivrl
lods
mov
mov
jno
and
in
outsl
aaa
adc
sub
sub
push
or
leave
inc
add
pop
mov
dec
jo
adc
pop
outsl
sbb
bound
sbb
push
mov
push
lods
popf
mov
adcb
dec
popa
sub
inc
pop
lock
jmp
in
incl
sub
and
addl
test
js
or
cli
jnp
dec
fcoms
adc
daa
push
lcall
mov
mov
ret
and
xchg
mov
call
clc
fcomip
and
or
mov
and
test
pop
cmp
pop
icebp
dec
xor
fcoms
lret
pop
push
sub
xchg
cmpsb
test
jecxz
inc
push
aas
call
cmp
adc
sbb
sbbb
xor
pop
pop
popa
jge
mov
mov
sar
push
lret
jg
mov
aas
sarb
in
aaa
movsb
int3
sbb
dec
lock
add
sarl
add
push
xchg
add
sub
mov
push
out
addr16
push
xlat
sub
push
pop
mov
leave
jg
xor
jnp
or
cmp
push
adc
push
in
pop
push
pop
push
out
into
xchg
or
cmp
mov
add
inc
mov
xchg
sti
cli
mov
push
wrmsr
sti
scas
out
mov
insl
loop
movsl
pop
notb
push
sbb
sbb
or
or
pop
jg
jg
jecxz
xor
and
inc
out
jecxz
loop
fwait
and
mov
inc
ljmp
ret
push
mov
add
adc
mov
fildl
pop
mov
stos
jbe
add
movsl
cwtl
inc
fnstsw
aas
je
rorl
adc
fdivs
mov
out
lds
repz
outsl
pop
test
jb
cmp
orb
lcall
sub
sbb
out
mov
stos
mov
gs
mov
pushf
xor
cltd
add
pop
mov
adc
mov
mov
pushl
xor
orl
in
insb
stos
mov
fnstsw
sub
insb
mov
inc
cmp
insl
psubw
das
insb
inc
mov
outsb
sub
sbb
daa
pop
jmp
outsl
std
jg
dec
cmp
xchg
je
mov
lret
pop
cltd
mov
js
add
pushf
sub
outsb
call
leave
sub
push
shl
rcrb
sbb
fwait
movsl
jecxz
push
mov
push
mov
mov
loopne
outsb
push
pop
cmp
fsub
shlb
add
mov
cmp
ret
or
fs
xchg
sbb
inc
jns
jnp
adc
int3
adc
mov
adc
mov
sbbb
mov
cmp
sti
loopne
xchg
cvttps2pi
jp
mov
xor
insl
push
enter
das
cld
lods
aam
loopne
push
xor
addr16
pop
cmpsl
sbb
cmc
dec
adc
aaa
cmpsl
inc
push
mov
enter
inc
inc
frstor
and
cmp
dec
aas
and
fldt
ret
push
aad
cmpsl
sbb
mov
aaa
xchg
cmpb
rclb
push
mov
and
icebp
dec
cld
decl
pop
adc
mov
adc
lretw
jns
cmp
mov
jmp
sbb
mov
pop
mov
roll
cmp
jns
dec
les
mov
sub
or
call
out
lret
fwait
xor
aaa
aaa
pop
call
insl
cmpsl
jb
add
xchg
shlb
dec
frstor
lods
push
int3
sahf
hlt
inc
in
or
inc
cmp
sbbl
roll
daa
out
cli
push
jne
ja
loope
adc
iret
dec
inc
push
pop
pop
sbb
imul
stc
push
dec
mov
and
leave
in
das
outsl
dec
and
push
rorl
sarl
outsl
pop
shlb
adc
mov
lcall
push
xchg
loope
sahf
or
sub
inc
push
rcrb
das
orb
sub
dec
or
sub
icebp
fldl
xchg
push
scas
mov
std
add
divl
pcmpgtb
mov
xchg
movsb
add
xchg
outsl
mov
add
fmuls
sbb
adc
mov
test
cmp
loopne
add
sub
or
sar
enter
sub
ret
pmaddwd
jo
sub
add
fidivrs
pusha
fcoml
std
lods
das
mov
sub
jo
and
mov
xor
jne
xchg
cmpsl
gs
dec
jp
or
in
fcomip
jge
inc
andl
jno
js
mov
push
and
lcall
roll
push
cmp
sub
dec
test
lret
jae
fwait
push
cs
lds
xchg
adc
mov
jge
movsl
sub
lret
ds
mov
add
cmc
sub
pop
jge
mov
shrb
jne
outsb
xchg
pop
lcall
sbb
mov
fdivl
outsl
rorl
rcll
shlb
dec
adc
mov
test
or
inc
xor
sbb
incl
pop
adc
nop
xchg
mov
stos
and
call
pop
ja
mov
sub
mov
mov
mov
pop
mov
in
insl
leave
pusha
xor
ret
icebp
and
pop
in
or
insb
mov
ss
or
mov
mov
gs
mov
sub
sub
xor
loopne
es
xchg
leave
out
addl
insl
pop
push
ljmp
scas
dec
dec
inc
mov
inc
and
sahf
cmpsl
arpl
ret
faddp
fidivrl
cmc
inc
xor
rol
adc
pcmpeqw
aam
add
mov
push
jg
stc
mov
cld
in
adc
inc
xchg
inc
ja
adc
mov
lods
call
orb
inc
pop
call
testb
push
xor
jne
shll
fistpll
pop
inc
stos
xchg
add
test
jmp
das
adc
sbb
popa
xchg
int3
xor
les
mov
push
lods
das
xor
dec
jnp
pop
orb
jmp
xchg
aas
pop
imul
outsb
mov
mov
out
mov
js
xchg
pop
dec
test
sbb
jmp
jns
sbb
cmp
push
mov
add
sub
add
sbb
add
mov
mov
hlt
xchg
push
mov
or
inc
cmp
std
add
int3
jl
sub
adc
add
jbe
jecxz
mov
cmp
add
mov
cmc
std
adc
sbb
testb
dec
loop
subl
mov
mov
push
repnz
in
mov
mov
in
and
mov
into
mov
pop
nop
mov
movsl
ja
pop
add
push
lahf
ja
enter
aaa
clc
leave
icebp
arpl
inc
bound
js
clc
decl
mov
movsb
jno
xchg
xor
pop
or
cmp
dec
sbb
sub
push
subb
hlt
or
nop
shll
aaa
in
xor
insl
push
fcomps
and
in
call
sbb
lea
jnp
mov
push
outsl
mov
rolb
push
fwait
movsl
cmp
mov
test
add
test
adc
test
adc
lret
pop
ljmp
push
repnz
cmp
sbb
dec
cs
ret
sbb
mov
es
jae
xor
ss
fstps
pop
fcomps
push
or
or
push
dec
or
sahf
fmulp
ret
pop
xchg
decb
cmp
pop
jbe
jns
add
sbb
ljmp
inc
daa
sub
mov
cmp
mov
cmp
test
mov
mov
hlt
insl
test
aam
popf
mov
jne
lcall
scas
mov
test
pop
pop
pop
mov
xchg
mov
mov
movsl
les
and
sub
sub
jne
fdivrp
test
inc
insb
clc
pop
inc
dec
mov
and
mov
cs
or
ljmp
pop
and
pop
and
int
test
mov
pop
fisttpl
addb
jp
incb
dec
jg
aam
jmp
insb
mov
jle
pop
lods
call
js
xchg
mov
je
pop
je
add
pop
aam
fwait
adc
mov
cmp
mov
xor
loop
outsl
sbb
jp
enter
mov
aas
loope
xchg
mov
mull
inc
fs
dec
mov
adc
addr16
mov
repz
lock
xchg
lock
mov
mov
cmp
leave
xchg
leave
mov
rorb
lret
movsl
in
adc
mov
movsl
pop
mov
das
mov
push
hlt
cmp
dec
xorb
sbb
mov
dec
mov
into
ljmp
dec
or
movlps
stos
xchg
ljmp
or
ret
ret
fiadds
mov
cmp
ss
mov
pop
rcl
and
and
shlb
jmp
push
xlat
sbbl
leave
ljmp
inc
les
outsb
mov
shrl
dec
rcll
mov
fbld
mov
xor
lods
push
ss
fcom
pop
and
add
pop
js
loopne
add
jmp
adc
cld
aaa
mov
sbb
decl
pop
dec
adc
inc
adc
xor
mov
sti
ret
xlat
inc
push
mov
sub
push
push
in
adc
mov
aaa
aad
outsl
addl
aam
push
mov
das
or
jbe
addr16
push
add
xor
mov
mov
pop
mov
cs
mov
adc
clc
jg
add
outsb
jecxz
ret
adc
sbb
jno
pop
insl
push
fstpt
das
mov
bound
fcoms
mov
push
testb
sbb
jbe
sarb
sbbb
push
mov
shll
push
je
loop
add
add
jp
insb
mov
cmp
adc
sbb
lcall
and
loopne
mov
mov
mov
popa
imul
mov
rol
jecxz
mov
pushf
or
pop
das
lret
jne
xor
jo
roll
and
pop
inc
mov
dec
jp
inc
mov
pop
lds
dec
aam
cli
pop
ss
sub
cltd
daa
push
mov
pop
cs
xlat
into
jge
imull
adc
mov
in
push
rol
fwait
xor
jb
sbb
mov
cmovne
pop
icebp
mov
rorb
nop
or
cwtl
jecxz
adc
outsl
and
addl
mov
fwait
xchg
add
outsl
xchg
lcall
leave
lret
fdivs
ja
pushf
mov
enter
std
inc
push
adc
mov
rorb
dec
cmc
mov
and
popa
popa
test
mov
cld
mov
cld
inc
cmp
xchg
enter
push
inc
push
or
in
fs
or
add
imul
imull
pop
and
jbe
imul
cmpsb
test
push
loopne
dec
lock
pop
fstl
jg
es
mov
mov
push
inc
in
arpl
xchg
pop
mov
pop
cli
lods
out
xchg
pop
int3
inc
mov
sbb
lahf
sub
or
push
jnp
sub
mov
add
jbe
out
or
add
call
mov
push
and
sub
add
and
lock
inc
into
ror
xchg
xchg
and
and
inc
lret
or
inc
aaa
push
xor
stc
test
incl
paddsb
aam
filds
stos
xor
or
mov
inc
testl
subb
xchg
fiadds
ret
cltd
jo
dec
mov
xor
pop
js
dec
mov
pop
das
les
rcrb
rcr
insb
dec
xchg
pop
mov
or
fiaddl
adc
js
out
or
mov
adc
daa
cmp
pop
shlb
pushf
or
add
or
imul
cltd
xchg
pop
sub
cmp
ss
xchg
loop
inc
add
mov
rcrl
bound
and
xchg
push
xor
mov
ja
je
push
adc
cmc
xor
daa
pop
loope
mov
iret
jl
filds
lods
pop
or
jmp
and
addb
mov
jne
xchg
rcrb
out
add
adc
subl
jmp
dec
out
int3
stc
es
clc
dec
dec
fistpll
xor
les
dec
adc
rorb
xchg
xchg
push
mov
test
fstl
pop
pop
in
push
sbb
sbb
call
aad
decl
mov
mov
push
sub
dec
inc
popa
insl
sbb
test
dec
std
imulb
cmpsb
lds
mull
pop
mov
xlat
mov
fnstsw
cmp
repz
nop
adc
rcll
push
xorl
insb
aaa
cmp
jle
into
mov
pop
sbb
adc
push
dec
aaa
outsl
std
sbb
test
pop
mov
xor
push
neg
jae
xlat
ljmp
inc
sub
jb
cmp
push
lret
dec
sarl
outsl
add
jecxz
mov
test
scas
pop
cmp
mov
or
fwait
ss
loopne
rcrl
sbb
jg
mov
cmp
scas
sbb
movsb
cld
test
out
pop
mov
xchg
mov
cld
xchg
jae
into
lock
push
rorb
adcb
mov
add
int3
cmp
jmp
scas
fwait
add
lds
pop
lret
in
pop
mov
jnp
jb
ret
pushf
xor
xchg
mov
jg
cmp
fisubl
and
mov
movsl
sbb
xchg
or
popa
dec
mov
lea
lock
xchg
divb
xorb
xchg
inc
mov
pop
mov
push
fisubrs
sub
sbb
add
adc
jne
aam
fucomp
or
fldl
ficoms
or
mov
sub
push
stos
je
dec
adc
rcll
pushl
aas
orl
xchg
int3
and
cmp
push
sbb
stos
adc
add
cwtl
xor
xchg
mov
mov
push
mov
test
add
loope
mov
mov
ljmp
fiadds
mov
push
and
and
sub
lcall
adc
nop
push
addr16
push
jbe
and
xchg
xchg
roll
arpl
pop
stos
outsl
dec
xor
jle
xchg
ja
ret
inc
inc
int
pop
sub
sbb
std
in
sbb
xor
mov
mov
ret
popf
jne
and
daa
pop
lods
xlat
bound
imul
mov
fwait
notb
push
add
xlat
pop
xchg
push
sbb
adc
mov
sbb
add
lretw
push
loopne
lock
out
or
adc
clc
mov
mov
cmp
adc
jmp
or
xor
aad
jg
mov
sbb
push
dec
stos
lock
sbbl
mov
movsb
lock
and
loop
push
mov
es
push
rorb
lcall
jbe
in
jg
mov
jle
xor
pusha
cmpsb
jb
add
bound
add
add
dec
mov
ljmp
mov
or
or
inc
push
or
cmpsl
call
je
xchg
or
or
sbbl
sbb
in
pusha
mov
repz
js
inc
push
and
hlt
clc
xor
dec
push
movb
adc
adc
pop
cli
mov
mov
pop
les
mov
test
std
add
jns,pn
sahf
mov
mov
lods
pop
fidivrl
mov
mov
lret
fsubrl
xchg
cltd
mov
inc
aas
jbe
aam
das
lds
mov
pop
filds
and
mov
stos
cmc
adc
adc
add
aaa
jecxz
cli
loope
nop
outsb
rcrl
icebp
in
xchg
popa
stos
scas
pusha
sbb
test
or
sbb
xchg
nop
into
dec
fbld
pop
mov
push
mov
cmc
in
idivl
sub
jp
lods
add
inc
shll
rclb
jge
sbb
sub
loop
popa
incb
xchg
jg
push
pop
imul
xlat
push
shrl
add
mov
in
add
mov
ljmp
dec
cmp
dec
mov
sbb
jecxz
dec
inc
adcl
xor
mov
ja
cmpsl
pop
lret
sarb
test
add
mov
xchg
mov
outsl
mov
inc
mulb
clc
xorl
aaa
les
imul
out
ret
mov
mov
adc
xor
dec
sub
push
sar
fiadds
out
cmp
shrb
xor
jle
test
adc
adc
pop
ret
mov
scas
xchg
ret
mov
enter
dec
fmul
mov
mov
repz
sahf
js
lock
inc
and
insb
inc
jmp
push
jbe
dec
arpl
popa
mov
stos
pushf
cmp
out
out
pop
pop
jecxz
cmp
pop
fwait
jnp
push
in
popa
sbb
in
mov
adc
mov
lds
insb
add
and
lret
hlt
fsubrl
clc
dec
repz
push
cmpsl
inc
or
dec
jno
sub
fimull
push
mov
jb
add
add
insb
dec
mov
repnz
int
fcoml
xor
xorl
pop
aaa
insl
sub
inc
inc
add
scas
jg
jge
push
ss
mov
mov
mov
xor
or
jecxz
aaa
pop
call
add
jmp
repz
adc
mov
inc
lock
imul
pop
mov
packssdw
jno
jns
and
pop
outsl
rorl
shl
sbb
dec
push
add
dec
sti
movsl
sub
aaa
jp
int
pop
mov
cmp
add
push
add
or
xchg
aad
and
or
cmpsb
fwait
lret
sub
popf
or
and
add
push
jnp
sub
mov
insb
daa
xor
hlt
clc
popa
int3
mov
cmc
jns
rcr
xchg
inc
sbb
cld
outsl
std
cmpsb
subb
lock
test
lods
pusha
ret
out
jecxz
mov
imul
inc
xchg
movsb
inc
ret
clc
ret
or
jg
hlt
int
int3
cmp
push
dec
rolb
mov
rcrb
add
add
test
stos
addl
pop
inc
xchg
into
in
iret
jecxz
repnz
shrl
sbb
adc
dec
mov
popa
jmp
push
ja
add
negl
or
test
mov
rcr
jbe
push
fdivr
imul
aaa
adc
hlt
inc
xchg
mov
adc
test
in
mov
mov
out
addb
inc
iret
inc
ljmp
mov
sub
mov
and
int
ss
mov
push
xchg
test
aam
xor
inc
cmp
in
adc
mov
sbb
pop
add
mov
mov
les
out
inc
les
mov
jne
cmp
lods
pop
adcl
sub
pushf
inc
adc
aad
and
cmpsl
frstor
sarb
in
jmp
mov
sub
mov
inc
call
jg
add
mov
sbb
ljmp
lret
sub
mov
cmp
rcl
and
xchg
lret
lahf
xor
xor
loopne
in
push
cmp
sahf
insb
popa
or
aad
sbb
jnp
cmpsb
shl
inc
jmp
jp
call
mov
sbb
sub
pushl
dec
lea
lock
mov
in
sbb
or
sbb
test
mov
push
fisubrl
fwait
xor
and
int3
jecxz
lock
dec
clc
rcrb
push
pop
mov
cmc
xchg
jmp
inc
stos
movl
jae
lret
popa
jp
mov
loop
adc
gs
sbb
cs
outsb
imul
dec
inc
fimuls
adc
pop
mov
nop
xchg
mov
leave
cmc
fucomip
jg
push
sub
and
or
mov
adcb
call
imul
and
sbb
ds
rorl
xchg
fldt
pop
fcomi
les
aam
add
dec
daa
xor
push
push
in
outsb
gs
sahf
sbb
mov
mov
rcrb
ficomps
jg
jl
adc
add
and
nop
aaa
clc
in
decl
lret
js
push
outsl
test
jno
sbb
std
movsl
loopne
rolb
sub
push
fsts
iret
adc
dec
popf
mov
mov
in
xchg
rclb
jecxz
sbb
inc
adc
test
jl
rcr
in
dec
fimuls
dec
mov
cs
lcall
sub
xchg
xor
jo
mov
sub
std
push
stos
jge
loop
inc
cmpsl
cmp
test
or
mov
subb
in
push
mov
dec
rcrl
lahf
aam
test
and
jg
lock
sahf
dec
add
push
icebp
cmpsb
xchg
and
in
movsl
or
not
or
adc
fnstsw
xor
cmp
daa
push
jmp
sbb
orb
lods
dec
push
mov
insl
jne
push
pop
out
pop
mul
scas
sub
subb
adc
fldl
jbe
pand
and
cmp
lods
je
lock
cld
lods
push
test
or
rorb
mov
and
xor
cmp
mov
add
je
sahf
sbb
pushf
in
adc
mov
adc
add
loope
or
jg
mov
pop
stc
push
pop
rolb
inc
mov
pop
enter
rorl
mov
out
fs
mov
leave
xlat
xchg
ja
sbb
jmp
push
in
test
xchg
mov
mov
and
hlt
bound
jg
jl
jp
xchg
adc
mov
mov
daa
pop
adc
test
cmp
out
push
in
outsb
test
dec
fstpt
outsl
les
fmulp
cmpsl
bound
les
pop
mov
jb
in
add
pop
lea
pushl
push
das
cld
outsl
out
das
and
lcall
clc
push
cmp
outsl
mul
and
push
mov
ret
sub
jo
mov
inc
aam
push
add
mov
lret
push
or
cli
mov
pop
mov
inc
shlb
dec
push
add
bound
fidivs
xor
xor
cmp
shrb
mov
inc
aas
aam
mov
addr16
cmp
orl
icebp
test
mov
dec
dec
xor
fisttpll
jbe
jns
push
inc
in
arpl
pop
cli
mov
ljmp
fwait
sub
push
or
ja
xchg
outsb
add
fdiv
mov
inc
pop
push
popa
inc
sbb
in
add
mov
pop
filds
mov
lcall
push
pop
clc
dec
jg
movsb
pop
and
andb
lret
mov
sub
cmp
mov
and
and
and
sub
add
jo
test
mov
push
mov
sbb
pushl
mov
ret
xchg
push
adc
pop
add
subl
cld
fildl
dec
das
mov
sbb
addr16
push
lret
inc
or
lret
push
data16
iret
filds
bound
fs
leave
adc
call
lret
cwtl
push
out
push
mov
add
push
repnz
xor
in
sbb
xor
sbb
add
jno
mov
movnti
cmp
add
inc
mov
pop
mov
mov
les
sar
int
mov
in
sub
incl
outsl
or
pop
call
or
and
push
jecxz
outsl
xor
outsl
mov
call
or
jg
xchg
push
push
imul
push
repz
add
das
fiaddl
aas
fs
out
xchg
push
mov
mulb
and
jb
inc
cwtl
loope
mov
cmp
je
inc
add
insb
xchg
insb
push
add
push
pushl
pop
lret
sbb
jae
dec
pop
push
addl
pop
jns
enter
pop
daa
imul
loopne
dec
ljmp
xchg
mov
sub
shrl
cs
pop
mov
xchg
jb
adc
sbb
call
mov
adc
mov
icebp
fdivr
test
inc
aam
mov
sbb
mov
or
inc
jne
jnp
pop
add
xchg
ffreep
or
ror
aam
sub
cmp
cwtl
or
push
clc
aaa
jmp
mov
or
xchg
pop
fadds
testl
orl
outsb
jne,pn
dec
add
or
das
pushf
icebp
pop
das
xchg
pop
call
cmp
pop
sub
loopne
repnz
sub
xchg
push
in
ss
adc
sbb
fcoml
scas
insb
or
inc
inc
jns
mov
aas
xor
and
jl
push
out
ret
cli
xor
cmc
aaa
mov
mov
lcall
out
ds
mov
mov
inc
jl
or
push
add
or
mov
decl
adc
mov
aaa
or
mov
jge
jecxz
pop
dec
inc
cmp
out
sbb
mov
out
xchg
dec
and
add
push
popa
mov
xchg
pop
add
stos
iret
adc
or
mov
fistpll
add
lds
adc
or
out
dec
push
and
xchg
repz
mov
cmp
mov
lret
popa
push
arpl
mov
icebp
roll
inc
ret
mov
jne
sarl
shlb
ja
dec
pop
pop
stos
pop
out
mov
icebp
adc
jo
xor
sbb
push
aaa
mov
mov
fistl
pop
xchg
fwait
inc
sarb
dec
inc
in
pop
mov
mov
in
pop
sbb
xor
mov
not
adc
or
cmpsl
push
rol
pop
sub
cmpsb
int3
add
and
andb
jg
pop
add
adc
sub
repz
js
mov
std
mov
mov
mov
cmp
dec
pop
pop
and
inc
adc
fidivrs
movsb
xor
add
addl
pop
cwtl
mov
mov
mov
and
sub
call
pop
jns
jl
sub
decl
pusha
rcl
cmp
jmp
pop
decl
loope
add
in
mull
pop
inc
sbb
movsl
add
xchg
call
pop
mov
fadd
mov
ret
leave
fiadds
lods
test
inc
lock
xor
mov
push
stos
cmp
aaa
dec
bound
ljmp
mov
hlt
mov
dec
test
shll
or
mov
jb
mov
and
push
push
sti
sub
jl
loop
cmp
xchg
lahf
and
mov
mov
push
pop
jmp
int
lock
inc
lea
testb
xor
add
mov
int
lcall
movsb
popa
fstl
mov
addb
stc
fisttpl
or
sbb
mov
rolb
adc
nop
rorb
lock
lods
out
dec
jb
movsl
jbe
xchg
mov
pop
mov
pop
push
add
mov
xchg
into
insb
push
fsubl
ficoml
mov
ds
mov
sub
or
ds
loop
fists
out
sbb
or
pand
scas
lds
jo
jno
subb
out
in
cmp
xorl
push
and
sbb
cmc
faddp
or
mov
pop
adc
push
outsl
add
dec
scas
push
dec
notb
out
mov
or
pop
sahf
pop
in
add
pop
jo
adc
sti
test
or
ljmp
adc
cmc
ret
mov
xchg
mov
or
orb
sub
lcall
xchg
movb
dec
jmp
mov
mov
sbb
loopne
popf
rcll
push
call
addb
mov
mov
add
mov
dec
repz
push
out
mov
xor
mov
incb
inc
call
daa
out
pop
adc
movsb
sub
jl,pn
call
jle
xorl
aam
xchg
es
and
or
mov
add
pop
dec
or
inc
test
ret
test
inc
insl
loope
pop
mov
sub
push
mov
pop
jmp
adc
and
cltd
xchg
sar
push
adc
dec
ret
fistps
fwait
inc
scas
adc
inc
add
addr16
test
testb
cmpsb
adc
subl
outsl
orb
jnp
sub
mov
or
pop
je
imul
mov
in
out
addr16
and
add
sar
aam
pop
ja
jl,pn
dec
add
or
mov
dec
cmp
xchg
shrl
or
testl
xchg
frndint
add
xor
inc
xchg
adc
sbb
inc
xor
sub
push
pop
push
push
xor
lds
xchg
jnp
mov
inc
mov
std
pop
sbb
inc
inc
mov
push
push
pop
aad
jbe
cmp
jo
xor
cwtl
mov
insb
std
mov
jno
loope
cld
ljmp
fiadds
dec
mov
jno
xor
cmp
xchg
sbb
enter
xchg
mov
mov
das
cmp
cmpb
sbb
xchg
cmpsl
xlat
or
test
or
test
bound
xchg
scas
push
pop
inc
stos
inc
push
into
nop
pusha
addb
ljmp
mov
clc
daa
push
pop
jo
adc
data16
jns
push
mov
ss
sbb
iret
jmp
dec
pop
repz
ja
test
movsb
enter
inc
popa
jp
loopne
cli
pop
jle
popf
rcrl
int3
cltd
call
sbb
loopne
xchg
vcvttps2dq
notl
cmp
sub
mov
popf
cmc
add
mov
pop
fstpt
push
hlt
push
mov
mov
test
push
pop
pop
cmp
lods
mov
adc
adc
out
inc
sub
push
mov
ljmp
faddl
pop
leave
mov
mov
push
rcrl
clc
cltd
rol
and
outsb
sar
lods
push
call
in
std
add
rclb
lret
mov
mov
stos
mov
cmc
pop
incl
test
jo
les
inc
lea
mov
add
stos
fisubl
movsl
sbb
mov
std
pop
mov
outsb
adc
pop
inc
pop
cld
test
xchg
hlt
or
or
and
cmpsb
jbe
in
and
ret
in
push
xchg
iret
out
sub
inc
mov
inc
push
adc
out
ja
add
imul
popf
mov
lea
out
jecxz
sarl
shl
sbb
pop
xchg
sbb
addb
aaa
sbb
or
push
test
into
sbb
loope
cli
or
lock
lods
xchg
dec
into
sub
push
aam
loop
jne
and
test
pop
pop
push
pop
or
int
and
add
dec
orb
cmc
fcoml
mov
or
push
rol
pop
pop
push
fsubp
dec
imul
dec
mov
dec
outsb
outsl
push
jb
stos
jecxz
or
pop
jno
inc
push
and
sahf
jns
and
mov
jle
mov
or
decl
and
ret
lret
mov
outsl
ljmp
cmc
fidivrl
es
test
adc
and
mov
mov
rorb
imul
xchg
ret
fimull
mov
imul
jmp
adc
dec
loop
dec
push
mov
xor
sbb
and
fistpl
mov
inc
mov
fdivrs
push
mov
mov
or
or
jo
add
mov
ss
in
inc
ss
pop
mov
sahf
int
pop
and
cmp
push
hlt
testb
aam
fldt
push
mov
cld
outsl
clc
or
inc
dec
sbb
aaa
sbb
outsl
insb
inc
inc
scas
jecxz
loopne
outsl
or
lods
mov
jae
and
setg
mov
mov
mov
jo
out
popa
shlb
adc
fdivl
int3
jl
ds
dec
and
outsl
fnsave
mov
dec
enter
jne
dec
pop
lret
clc
in
pop
inc
ss
lcall
in
xchg
pop
xchg
in
icebp
pusha
mov
add
ret
push
push
fnstsw
inc
loopne
fsubp
cwtl
fwait
mov
movb
lcall
test
xchg
jne
push
mov
xchg
test
popa
mov
sub
ljmp
mov
sbb
js
jne
cmp
in
scas
jbe
push
inc
aam
daa
sub
loop
jmp
jbe
and
jbe
pop
in
pop
cld
lods
inc
mov
pusha
shlb
lret
mov
push
adc
mov
je
aas
push
jmp
and
pop
shll
jg
jg
or
cmc
lret
adc
mull
sar
popf
loope
add
mov
and
adc
jecxz
fdivrs
dec
push
mov
xchg
pop
aad
jg
adc
jle
fbld
push
xchg
push
jg
lods
jle
fdivrl
in
dec
mov
adc
mov
inc
adc
push
sbb
push
push
mov
sbb
je
push
ficoms
jns
aad
sbb
rolb
mov
jnp
jl
outsl
xchg
mov
movsb
aad
rol
or
xor
pop
mov
mov
popa
adc
add
mov
outsb
or
or
dec
dec
cli
pusha
mov
xchg
ss
sub
iret
dec
mov
scas
xor
mov
stc
je
push
sbb
pop
push
idivl
push
mov
fidivrs
shl
int3
pop
push
mov
inc
add
rcr
adc
mov
fists
pop
rolb
inc
lock
ds
add
out
ljmp
dec
mov
lods
int3
adc
or
sar
mov
or
mov
jl
xor
sub
jo
in
fistps
mov
test
cmpsb
xchg
dec
or
push
stos
movsl
jecxz
aam
shlb
pop
push
lods
dec
lret
xchg
dec
dec
add
rcrl
fidivrl
lds
pop
imul
ret
rolb
mov
mov
sbb
std
xchg
sub
jbe
je
aas
lcall
rcrb
push
mul
pop
pop
add
mov
fmull
pop
shl
cmc
mov
mov
dec
cld
xlat
lods
mov
rorl
loop
imul
mov
mov
mov
fstl
dec
fadd
jb
das
add
cmp
js
mov
inc
mov
fdivs
adc
mov
inc
jge
nop
dec
sub
or
jno
cli
test
sbbb
push
push
jge
xor
es
xchg
and
pop
scas
ljmp
enter
add
sbb
dec
cmp
cmc
cmpsl
fistps
push
jne
mov
jb
popa
jo
inc
inc
lds
cmc
cmp
outsl
mov
aam
sbb
mov
addr16
cli
inc
andb
add
add
div
into
dec
and
xchg
add
adc
enter
popa
ret
jg
loope
mov
fs
push
int3
aam
add
cmp
std
mov
xor
rol
and
movsl
add
pop
mov
or
jl
mov
push
xorl
pop
push
fs
test
popf
or
loop
lds
sbb
and
sub
jnp
ljmp
dec
sub
cmp
roll
movsl
lods
outsb
mov
lcall
sahf
xchg
sti
out
sub
sub
imul
mov
push
sbb
lahf
shl
sub
or
mov
sub
mov
fdiv
mov
adc
cmpsl
jmp
or
arpl
outsb
fwait
lea
dec
pop
mov
icebp
inc
xor
mov
mov
pop
aas
push
push
cmp
pop
fisubrl
mov
stos
inc
jge
jecxz
das
aad
out
pop
cwtl
ds
in
repz
sbb
rcll
fstl
stc
int
dec
shr
call
cmp
shll
inc
rcl
mov
in
jo
cmpsb
mov
scas
test
addb
lock
rorb
sbb
adc
xchg
add
xor
clc
push
fisubrs
jl
inc
mov
outsl
inc
and
or
push
jle
xor
test
dec
movsb
leave
scas
mov
in
call
fst
mov
ret
lcall
mov
icebp
mov
xor
sbb
icebp
and
mov
scas
in
mov
fisttpl
or
xchg
mov
stos
mov
fbstp
je
push
out
test
add
push
fidivl
jne
subb
sub
mov
shl
push
cli
outsl
mov
push
jne
faddl
mov
push
mov
xor
adc
repz
push
mov
scas
bound
popa
and
cltd
shll
dec
lock
fadds
or
loope
mov
sub
mov
add
jl
inc
mov
call
pushf
jle
adc
idivl
sbb
inc
mov
cmpsb
and
cmpb
outsl
test
inc
scas
pop
scas
mov
rolb
xor
ficomps
push
mov
mov
xchg
inc
rol
mov
inc
and
inc
and
dec
cmpb
adc
loope
cmp
test
lds
mov
dec
test
pop
test
mov
sub
cmp
out
xchg
adc
cmpsb
mov
mov
js
std
ja
loope
sub
fistl
imul
jmp
repz
daa
add
cli
mov
push
mov
imul
push
outsl
cld
mov
mov
pop
mov
lahf
in
mov
test
popf
adc
aaa
jbe
insl
mov
jb
aas
add
out
loopne
int
pop
scas
fs
pop
jo
xor
or
mov
cmp
adc
adc
push
cli
mov
adc
pop
inc
test
or
mov
inc
rolb
pop
icebp
pop
mov
xor
mov
cmp
adc
stc
xor
outsl
ljmp
js
push
and
add
outsl
and
jbe
sub
xchg
scas
dec
sub
jmp
bound
ds
test
mov
push
js
sbb
ret
lea
xchg
pop
gs
pop
mov
inc
cmp
sarl
test
mov
jg
lods
and
ds
std
out
mov
aaa
je
mov
mov
jg
xor
ret
cs
std
call
pop
or
add
enter
popf
test
xchg
mov
sub
mov
sti
les
adc
in
call
aaa
or
adc
shrb
notl
pop
outsb
lock
aam
sub
out
data16
cmp
sbbl
sub
lahf
cmc
or
aas
ret
and
loope
aaa
jp
adc
es
ret
lods
ja
loop
mov
sahf
sbb
and
jo
dec
into
or
lods
or
mov
les
fdivr
pop
insl
decl
mulb
pop
xor
lcall
sub
mov
in
sti
xchg
xchg
mov
or
push
imul
sahf
adc
lods
mov
das
rcrb
pop
or
ss
insb
sub
shll
cmc
mov
mov
popa
cld
fmuls
mov
ss
dec
outsb
nop
jmp
push
lret
push
not
cmp
repz
cmpsl
es
lds
iret
mov
jo
cmp
ljmp
sbb
mov
and
add
push
or
add
test
outsl
aad
xchg
mov
jmp
mov
stos
xchg
mov
adc
adc
dec
fisttps
add
stos
pop
push
leave
adc
mov
ret
pop
xchg
insl
adcl
stos
lret
push
or
jo
cmp
pushf
mov
mov
orb
push
stc
mov
addr16
lea
push
scas
aad
in
cmp
outsl
fstl
xchg
add
jbe
sbb
mov
and
cmpsl
adc
outsb
pop
rol
mov
pushf
xchg
xor
mov
fisubl
out
jle
dec
push
xchg
sbb
mov
loope
cld
fcmovb
mov
cmpsl
enter
pushl
adc
sub
lods
dec
jno
sarl
mov
daa
cltd
push
lods
test
or
and
add
jle
imul
sub
int3
test
pushf
mov
outsl
cmp
xchg
xchg
fldcw
cmp
jbe
orl
mov
aaa
hlt
dec
mov
fsubrl
mov
out
mov
xchg
das
sbb
sbbl
not
call
dec
insl
xor
cli
ljmp
jb
inc
call
sub
xchg
sbb
incb
add
cmp
add
mov
xchg
ret
outsb
adcl
lods
mov
mov
arpl
push
jae
add
lds
aaa
push
pop
subb
scas
cmpsl
jmp
mov
das
push
daa
dec
add
add
xor
add
not
in
push
movups
aas
pop
cmp
fs
cmp
xor
je
test
dec
and
or
xchg
jecxz
out
mov
xchg
aas
sti
cmp
mov
mov
xchg
sub
hlt
cmp
cli
lret
inc
ret
jae
das
mull
push
inc
std
ljmp
dec
mov
cwtl
jno
mov
xchg
aad
fcmovu
or
ret
sub
ja
or
lret
sbb
arpl
adc
popf
rcrb
cmpl
cmp
loop
mov
mov
xor
xor
jne
ja
sti
xchg
push
mov
dec
rcl
test
test
dec
fisttpll
pop
xor
or
adc
xchg
and
jo
pushf
popa
push
or
adc
loop
outsl
sbb
lcall
rolb
xchg
sub
lcall
aad
loope
pop
mov
add
js
add
movups
loopne,pn
sbb
push
mov
and
addl
incl
and
inc
push
sbb
out
mov
std
ljmp
jno
js
xchg
loop
inc
rorl
mov
fistpl
call
or
add
lea
add
outsb
lahf
scas
inc
popf
std
or
dec
fst
or
pop
stos
xor
ja
sti
movsl
incl
sub
sub
ficoml
es
xor
popf
testl
popa
inc
jg
push
mov
adc
outsl
es
idiv
in
sbb
xor
dec
mov
jnp
mov
mov
inc
jne
add
sub
xchg
fucom
movsb
jge
jmp
incl
cmp
dec
sbb
sbb
inc
out
repz
ret
outsl
mov
cmp
xlat
pop
imul
scas
and
aaa
mov
mov
jns
add
sub
sub
cmp
pop
pop
test
stos
fiaddl
enter
pop
cmp
or
push
filds
aaa
fsubrp
movsl
aaa
mov
mov
outsl
pop
cmp
push
and
lock
daa
out
mov
jecxz
lea
and
mov
cli
and
loopne
outsb
movsl
std
cmpsl
les
or
call
xchg
or
movq
push
je
mov
and
stos
mov
pushl
jecxz
scas
inc
xchg
js
sub
iret
sub
stc
repz
pop
mov
xchg
popa
imull
push
fldenv
xchg
and
scas
and
sahf
icebp
pop
mov
nop
cmp
inc
je
inc
pop
push
outsl
push
jmp
outsb
mov
dec
popa
sbb
mov
cmp
mov
sar
rcrb
adcl
stc
cmp
decl
jge
cmp
xchg
jg
xchg
bound
das
or
int
mov
xor
cltd
mov
pop
dec
movb
add
cmp
aaa
mov
lea
or
aas
int3
xchg
jne
ljmp
mov
imul
jae
jns
nop
mov
jb
stos
mov
xchg
push
je
xor
sub
cmp
inc
in
push
rclb
fisttps
movsb
addl
ss
rolb
cli
in
pop
push
enter
adc
fistpll
xchg
or
aas
pop
adc
imul
push
rorb
push
lret
ljmp
mov
add
clc
push
and
mov
xchg
add
lahf
in
mov
sbb
mov
popf
stos
or
arpl
mov
or
idivb
out
ficomps
push
sbb
jecxz
jmp
test
stos
hlt
mov
mov
ss
mov
sbb
add
push
movsl
mov
sarl
sti
fidivl
jno
int
adc
test
mov
mov
cmp
popa
repz
mov
sub
sbb
fst
jp
stos
pop
mov
xchg
mov
mov
push
cld
fucomip
or
sbb
cmc
xchg
cs
insl
pop
in
pushf
inc
sti
aam
pop
cmp
pop
sti
adc
dec
outsl
lcall
ficompl
mov
or
inc
sbb
loopne
clc
inc
int
push
pop
lea
dec
sti
or
outsl
pop
sahf
and
jb
and
sbb
rcrb
fcom
inc
pop
les
fiaddl
in
outsl
jns
shr
fidivl
rcl
gs
push
outsl
mov
sbb
inc
add
cwtl
js
sti
xor
in
adc
or
orl
data16
pop
fbstp
lods
inc
sbbl
and
xor
lcall
push
mov
mov
and
ss
imul
rorl
daa
outsl
cli
mov
icebp
rolb
test
add
sbb
fwait
sub
fstl
popf
clc
test
xor
loop
sti
ss
dec
lods
pop
loop
pop
cmp
leave
sbb
or
jmp
data16
pop
mov
add
clc
test
mov
pop
jb
sarl
js
notl
outsb
mov
mov
cmc
adc
insl
mov
aad
sub
mov
fmuls
andb
leave
mov
push
movsb
popa
cmp
cmp
jbe
and
das
loopne
mov
call
jge
mov
push
add
xor
or
push
mov
cmp
mov
mov
lods
mov
mov
fmuls
movsl
in
rcl
ljmp
mov
mov
icebp
outsb
repz
adc
push
sub
lea
mov
push
fnstsw
add
leave
mov
jp
movsl
xchg
insl
ss
mov
aas
popf
subb
cmp
aam
push
inc
std
ficoml
jns
stos
pop
test
add
jmp
lds
sub
jg
outsl
mov
xchg
xchg
sub
popf
jne
jb
cmp
loop
xor
xchg
adc
xchg
lahf
or
filds
or
jge
adc
fldt
test
fistps
cmpsl
mov
arpl
rclb
add
cmp
mov
mov
xlat
adc
call
or
loop
pop
fcoms
hlt
dec
mov
jecxz
mov
cld
dec
push
sbb
outsb
insl
jmp
repnz
xor
aas
cmp
pop
scas
add
scas
mov
inc
add
inc
decl
adc
dec
add
stos
pop
mov
shr
fcomip
jmp
es
ds
or
outsl
lcall
data16
ja
push
sbb
mov
mov
arpl
push
pusha
cwtl
mov
dec
cld
dec
jae
mov
shll
test
out
push
inc
cs
jmp
int
idivl
jb
mov
mov
int3
push
or
inc
or
pusha
or
hlt
add
inc
daa
fisttpl
and
mov
int3
inc
outsl
sub
pushf
pop
pop
sub
das
add
shlb
and
out
fcoms
or
lods
nop
jns
ret
arpl
jge
insl
pop
arpl
sbb
and
incl
test
sbb
xor
stc
cltd
pushf
or
das
adc
push
mov
jg
movsb
fisubrl
movsb
cmp
or
aas
push
pop
inc
inc
push
push
adcb
dec
sub
or
insb
xchg
jmp
or
sbb
sbb
or
sarb
sub
ljmp
icebp
mov
xchg
add
loop
lahf
pop
cs
xor
inc
fs
outsl
incl
mov
add
les
stos
ljmp
mov
mov
sub
pop
adc
mov
insl
fidivrs
fucomi
sub
xor
into
lea
mov
das
cld
lods
pop
inc
or
in
lret
adc
mov
test
fisubl
rorl
inc
adc
dec
decl
lcall
cmp
sbb
pop
mov
add
pop
and
mov
ljmp
sbb
pushf
xor
test
xor
iret
not
ja
and
cmp
insl
insl
add
adc
inc
add
sbb
addr16
sti
xchg
enter
cmpb
xchg
push
shl
fcmovnb
adc
rolb
jle
lea
fbstp
icebp
mov
lcall
aad
pop
call
stos
push
sahf
aam
movb
and
sub
pop
jbe
xchg
fisubrs
fldenv
incl
push
push
pop
jne
or
mov
or
cld
xchg
cmp
inc
jecxz
outsl
add
mov
push
and
pop
adc
das
mov
cmpb
mov
cli
and
pop
jns
std
and
sbb
xchg
or
imulb
mov
lods
inc
pop
jle
js
cmpl
push
iret
fsts
jecxz
fisttps
adc
lods
lock
xor
popa
rclb
stos
loope
aad
rep
adc
enter
dec
test
inc
lret
aas
std
outsl
clc
dec
fwait
cmp
lods
test
jns
out
add
aam
adc
mov
ss
sub
mov
pop
aam
or
and
shlb
jmp
addr16
sub
or
cmpsb
stc
ljmp
outsl
insb
jg
in
jecxz
fcompl
js
sub
xchg
push
lock
fimull
mov
adc
es
rorb
mov
hlt
adc
sub
pop
mov
mov
icebp
or
call
les
arpl
adc
cs
lock
call
incl
add
iret
cli
aad
or
dec
in
insb
rcll
add
push
push
or
fisubrs
pop
mov
outsl
jmp
cltd
cmp
aad
pop
dec
test
aas
and
dec
jg
jg
lods
inc
push
rcrb
dec
cmpsb
cli
outsl
ljmp
and
push
popa
or
sbb
cmp
jae
sarl
dec
fisttpll
rcll
lea
imul
cmp
xor
stc
bound
das
jo
sub
data16
movsl
mov
sub
mov
adc
cltd
xchg
mov
into
inc
sti
sar
pop
adc
in
sub
mov
push
aad
mov
rcl
lods
inc
les
gs
xchg
js
mov
outsl
pop
lods
sub
mov
loopne
lcall
outsb
std
adc
loope
mov
outsb
mov
jne
push
cld
or
aam
add
incb
test
or
adc
add
mov
in
mov
jno
mov
sub
jp
ja
orw
jns
test
sbb
outsl
rcr
sub
shlb
js
pusha
or
cmp
push
std
insb
ss
rorl
gs
in
loope
push
test
pop
mov
pop
sbb
out
jp
inc
jno
cltd
mov
lock
mov
cmp
call
dec
int3
adc
inc
jg
movsl
lock
out
mov
je
jl
push
aas
test
dec
test
shr
pop
xor
aad
aad
mov
data16
adcl
rcr
xchg
mov
outsl
mov
mov
fucomp
xchg
rcll
stos
outsb
sbb
add
or
add
push
je
ss
sub
xlat
pop
fsubrs
es
gs
outsl
or
dec
ljmp
push
stos
mov
or
ret
sarb
ljmp
mov
test
sti
pusha
and
xchg
orl
das
aam
loop
or
call
fmul
dec
xor
aaa
or
mov
and
and
and
inc
pop
jno
cs
xchg
daa
or
loop
ljmp
xor
lahf
xchg
aas
cmpsl
bound
xor
repz
xchg
push
and
ss
aaa
testb
aad
dec
sbbl
mov
out
mov
in
sti
cmpsb
mov
mov
call
push
dec
xor
insl
push
cmp
fwait
xor
and
xchg
cmp
dec
jo
pop
fwait
andl
dec
out
adc
movsl
mov
imulb
jbe
or
pop
mov
scas
and
sbb
test
sbb
inc
push
push
in
adc
lret
ret
jmp
adc
cltd
and
and
mov
fistps
xchg
or
loop
xchg
out
push
mov
pushf
jno
push
lds
pavgb
repz
xor
add
in
lock
jp
shr
test
das
xchg
test
ret
mov
mov
data16
mov
call
lahf
mov
pop
jg
inc
mov
lcall
pushf
adc
in
mov
dec
or
jb
jle
and
aaa
xorb
lcall
inc
stos
add
test
sub
sbb
sub
mov
adc
or
stc
insb
ss
fisubs
mov
jecxz
fdivs
dec
adc
mov
jmp
iret
test
ret
inc
dec
push
lock
inc
cmp
enter
jo
jb
adc
mov
mov
and
call
sub
mov
std
add
pop
sub
fs
outsl
movb
lcall
dec
add
cmp
and
sbb
inc
test
jb
fnstenv
add
pop
call
add
bnd
ds
jp
lock
fs
push
scas
cli
aaa
lock
clc
adc
mov
int3
andb
sbb
decl
repz
sub
in
fistpl
shr
mov
mov
pop
and
xchg
xchg
ss
jo
push
daa
stos
loopne
movsb
xchg
int
mov
insb
mov
nop
idivb
out
adc
cld
fistps
mov
shl
add
mov
mov
sbb
inc
xor
pop
roll
sbb
fidivs
icebp
imul
in
mov
mov
stos
sub
das
loopne
aaa
pop
cld
push
add
or
mov
xor
pop
sbb
xchg
sti
pop
jp
ja
dec
addb
jns
inc
test
loop
cmc
jg
xchg
pusha
call
sub
push
sahf
sub
test
sub
ret
mov
push
fbstp
ficoml
pop
cmp
das
in
and
inc
adc
inc
outsl
pop
loop
jmp
adc
lock
sti
arpl
mov
add
or
pushl
shl
mov
pop
adc
mov
mov
lret
sarl
push
mov
pop
ds
add
xor
rolb
mov
ficompl
ds
adc
sub
sub
sbb
xor
pop
pop
movb
push
sarl
ljmp
mov
sarl
inc
adc
push
loopne
and
outsb
aaa
add
push
dec
mov
pop
push
inc
dec
sar
xchg
sbbl
mov
ror
les
sahf
inc
adc
je
leave
mov
decl
and
sbb
cmp
pop
cmpsl
jnp
hlt
inc
cmp
inc
mov
mov
add
push
jle
and
outsb
xor
pop
outsb
sti
test
iret
ljmp
push
out
cld
push
sub
dec
mov
mov
andl
imulb
add
jne
mov
shr
inc
sti
xlat
inc
pop
adc
mov
pushl
ret
pop
cld
mov
push
sub
mov
jb
iret
fstpt
insl
pop
mov
addb
aas
pop
dec
mov
movsb
lret
xchg
pop
pushl
lods
xor
jl
cmp
and
jo
jbe
adc
insl
cld
aaa
scas
jno
je
pop
scas
inc
dec
insl
nop
movsl
or
stos
mov
ret
jns
dec
shlb
bound
test
das
shrb
and
dec
add
loopne
ss
cmp
sub
xor
lods
xchg
cmp
cwtl
pop
fwait
dec
aaa
adc
icebp
mov
cli
enter
shrl
pop
mov
fdivrl
xor
decl
adc
and
dec
mov
cld
push
push
pop
mov
test
stos
inc
lahf
add
adc
inc
mov
leave
and
ljmp
add
xor
add
loop
add
sub
lods
clc
lcall
repnz
or
enter
cltd
inc
pop
movb
imul
out
jb
jo
sbb
cwtl
call
fsubs
test
test
mov
ds
xchg
adc
pop
push
adc
jnp
pop
and
xchg
stos
stos
push
or
push
outsl
pop
jne
jg
jp
push
add
out
push
jmp
jbe
dec
xchg
into
push
out
jmp
xchg
les
jl
add
jno
outsb
scas
pop
scas
movsl
dec
daa
imul
das
insl
aaa
xchg
pop
mov
es
mov
pushl
sbb
jle
dec
out
shll
cs
and
sarb
stos
xchg
cld
sbb
inc
in
pop
xchg
repnz
add
xchg
sub
adc
cmpsl
mov
call
ss
push
aas
cli
imul
dec
mov
sarl
gs
std
loop
adc
ljmp
je
inc
das
nop
mov
int3
cmp
sbb
push
dec
jl
adc
mov
sub
push
jno
ljmp
adc
outsl
mov
jge
pop
or
inc
and
mov
jge
test
xor
andl
hlt
dec
addr16
pop
pop
push
jns
lahf
jge
adc
jecxz
lea
mov
fcmovb
in
outsb
hlt
sub
insl
lahf
fcompl
cmp
dec
cmp
stos
add
add
xor
dec
xchg
icebp
inc
out
lea
inc
inc
popa
jo
or
add
push
out
mov
mov
cs
sub
stos
jle
loopne
xchg
push
outsb
sub
jmp
les
add
shlb
lcall
mov
popf
pop
repz
mov
les
pop
jmp
enter
xchg
or
add
cltd
and
sti
mov
sub
xchg
add
mov
sbb
ljmp
xchg
and
hlt
incl
mov
in
lods
cmpl
and
sub
push
mov
mov
ja
cmp
dec
leave
sarb
imul
pusha
xor
or
fisttpl
push
fdivs
sub
mov
insl
xor
std
push
sub
insb
into
mov
dec
or
jmp
mov
mov
fisttpl
sub
mov
fistps
loopne
or
inc
fwait
lods
adc
jbe
inc
hlt
pop
arpl
push
ds
adc
js
int
sub
sub
pushf
xor
mov
mov
push
sub
or
sbb
fucomp
decb
xchg
mov
push
ret
ja
iret
pushf
cmc
arpl
test
xchg
push
popw
outsl
lock
shrl
and
pop
xor
clc
dec
xchg
incb
dec
mov
mov
mov
mov
and
pop
ljmp
sbb
push
push
xchg
mov
loope
pop
enter
jae
mov
pushf
mov
sbb
mov
es
pop
add
sbb
jno
add
in
mulb
add
push
jne
jnp
popa
mov
jge
testb
mov
mov
shlb
arpl
in
push
sbb
das
je
pushl
xor
push
xchg
mov
lea
xchg
mov
sbb
or
adc
dec
popf
cmp
mov
jo
inc
sarl
xchg
push
test
or
mov
mov
insb
lods
sbb
scas
insl
shll
pop
sub
icebp
sbb
add
ljmp
cwtl
push
loopne
or
loop
jbe
lods
dec
stos
scas
rcrl
ret
inc
popf
lods
cmp
arpl
pushf
shl
sbb
call
sub
leave
pop
in
pop
mov
add
enter
xchg
jmp
push
repz
dec
bnd
pop
fsubr
das
inc
pop
mov
jb
and
jno
or
repnz
push
jecxz
cmpsl
jae
loope
mov
mov
les
out
movsl
xor
mov
add
or
or
fists
add
pop
mov
inc
int
dec
popl
and
pop
jge
clc
aaa
icebp
in
test
cwtl
inc
nop
mov
cld
inc
push
ja
movsl
aas
sbb
pop
xchg
push
not
iret
rorb
push
push
dec
push
outsb
jae
or
add
stos
outsb
jmp
rclb
rcl
xor
and
imul
outsb
mov
dec
pop
xchg
pop
sbb
rorl
imul
or
out
stc
mov
outsl
std
jg
fsubl
ljmp
rcll
sbb
mov
jbe
test
bound
cltd
lcall
jo,pn
in
adc
xlat
andb
int3
les
dec
stos
jecxz
fdivrl
cmp
push
mov
js
push
icebp
jmp
sbb
and
pusha
in
leave
push
rorl
shll
add
pop
sub
lods
push
jmp
jnp
into
daa
xchg
je
loope
shlb
sbb
shll
pop
insb
jne
mov
andl
outsl
or
jno
inc
cmp
and
and
clc
dec
mov
imul
mov
add
xor
xchg
insb
mov
filds
mov
les
cwtl
mov
xor
orb
pusha
hlt
rcrl
stc
adc
pop
mov
fdivl
or
xchg
mov
mov
push
push
sbb
lcall
mov
xor
rcrl
xchg
add
mov
test
mov
rcll
pop
push
sti
int3
jmp
ret
sbb
xor
rorl
nop
adc
xor
shr
mov
fdivrl
ja
and
das
cld
test
mov
lock
xchg
inc
loope
outsb
mov
add
stos
ret
mov
cwtl
les
inc
inc
outsb
inc
jo
jne
ret
mov
das
je
xchg
cmp
mov
fisubrs
movsl
jno
inc
cmp
jmp
push
outsb
xor
aad
test
ljmp
out
call
ret
dec
or
insl
das
mov
cmp
int
lret
mov
adc
pop
add
xor
dec
ret
xor
pop
pusha
mov
repnz
orb
cmp
sbbb
inc
ljmp
mov
jg
xchg
jl
dec
jbe
jp
xchg
sub
pop
adc
lock
mov
cmp
xchg
jns
and
xchg
xor
xchg
add
add
stc
fisubl
pop
cld
pop
outsb
jecxz
test
xor
add
fwait
lcall
and
outsb
mov
sbb
fs
popa
pop
je
imul
les
mov
or
mov
mov
daa
push
dec
mov
in
mov
je
push
clc
mov
adc
ja
adc
divb
call
pop
jne
in
cmc
mov
aaa
sub
lret
aad
loopnew
aaa
mov
mov
psrlq
mov
jns
dec
sarb
or
inc
sahf
nop
or
sub
and
fs
mov
or
mov
pop
ja
mov
dec
mov
add
repnz
mov
push
cmc
xchg
add
insl
out
push
mov
mov
or
mov
ficoms
out
stos
fnstsw
pop
or
ret
xchg
ficompl
cli
movsl
inc
pop
dec
sbb
jg
xor
ret
sub
cli
and
dec
sbb
push
sti
xchg
sahf
test
iret
lret
mov
add
pop
roll
xlat
aaa
xchg
mov
mov
inc
aas
mov
aaa
clc
lods
adc
jl
jns
lods
rorb
mov
pop
mov
daa
sub
sti
mov
inc
mov
test
rcll
jl
adc
sbb
adc
xchg
mov
repnz
rcll
outsl
and
mov
das
outsl
adc
add
mov
pop
loopne
loopne
sbb
data16
mov
dec
xor
pop
div
sarl
pop
pushf
mov
dec
sub
add
ret
cwtl
scas
sub
push
divl
das
push
std
push
and
jmp
adc
subb
insl
push
pop
inc
push
adc
daa
je
or
dec
push
scas
outsl
ret
add
imul
pop
add
movsb
fwait
mov
scas
and
mov
mov
mov
imul
or
icebp
xor
pop
ss
mov
dec
push
incl
adc
or
jecxz
aaa
cli
jg
push
or
push
jp
or
dec
push
add
xor
movsl
jmp
les
inc
mov
loope
cwtl
push
fiaddl
add
pop
and
push
std
xchg
push
cmp
inc
cmpsl
into
test
cmp
mov
adc
cmp
mov
inc
jnp
mov
xor
adc
outsl
cld
in
mov
iret
sti
and
jge
hlt
sbb
or
stos
mov
mov
jo
push
mov
arpl
xor
push
mov
xorl
mov
hlt
inc
mov
orl
std
lcall
mov
loop
fcmove
xor
repz
stos
mov
and
sbb
fstpt
cmpsl
scas
movsb
aad
pop
add
lock
xor
push
xorb
fdivrl
lock
mulb
or
sub
cmp
jo
lods
push
add
pop
cli
lcall
mov
jnp
std
push
sub
das
sbb
ljmp
adc
enter
cmp
call
mov
stos
clc
pop
fisttps
jle
js
cltd
xor
dec
movsl
loop
ds
jo
mov
jo
in
ret
xchg
out
bnd
mov
lea
mov
push
sub
lcall
push
mov
daa
adc
fistps
push
jl
inc
pop
call
pushf
add
mov
imull
mov
rorb
dec
das
sbb
in
das
adc
jl
jmp
jno
add
jbe
mov
rolb
cmc
insl
cmp
sti
shl
inc
daa
pop
lds
xor
jg
sbb
or
gs
pop
lret
or
or
pop
adc
rclb
daa
mov
add
adcb
push
int3
imulb
insb
mov
adc
mov
jne
adc
or
testb
mov
jbe
nop
xor
fldcw
test
aaa
shrb
sub
shll
xchg
or
and
ret
leave
inc
int
test
mov
sub
xchg
mov
cmpsl
ljmp
daa
jbe
ss
push
or
fistpl
adc
ljmp
test
xchg
mov
std
fwait
repz
jns
in
adc
push
jne
xor
pop
xchg
adc
rsm
aad
pop
sub
xchg
inc
sub
inc
out
xchg
enter
inc
cmpl
cwtl
mov
mov
addr16
mov
adc
inc
inc
fcompl
jl
pop
lods
iret
shlb
dec
and
stc
cmp
adc
fsts
loop
cmp
int3
sbb
xor
cs
cmc
stc
repz
fisubl
cmp
das
aaa
loopne
out
cmp
sbb
outsl
rorl
jmp
dec
push
xchg
cli
xchg
fidivrl
sbb
jg
mov
or
movsb
dec
sarl
aaa
test
adc
fcom
es
scas
dec
insl
or
xchg
push
sbb
sub
imul
or
jne
add
sti
sub
sub
inc
pop
decl
sub
int3
push
mov
push
inc
cmpsb
movsb
add
outsl
push
ficompl
les
xor
pop
jno
cld
hlt
adc
jl
xor
cmpsb
test
adc
sbbl
test
mov
sbb
out
xor
or
add
or
fsubrs
add
dec
jp
imul
or
cmp
arpl
sub
iret
jp
push
mov
mov
pop
jl
loopne
jge
mov
add
js
cli
xchg
cld
xchg
add
sbb
out
ret
cld
lods
add
fistpl
mov
mov
lcall
or
int3
nop
and
dec
mov
and
in
jmp
sti
add
test
mov
ret
mov
pop
lock
inc
stc
adc
sub
cmpxchg
cmp
sbb
jne
push
pop
mov
xchg
mov
lret
call
mov
in
jge
mov
jl
push
roll
add
rorb
jg
loop
pop
and
or
dec
fwait
mov
jmp
jle
pop
push
jns
add
les
mov
mov
push
or
xor
jle
jo
inc
add
or
test
arpl
outsl
les
aam
inc
mov
popa
dec
fcoml
inc
jne
repnz
loopne
pop
and
ror
stos
mov
insl
sbb
in
adc
and
test
shrb
pop
out
mov
lret
enter
jg
popf
sub
mov
rorb
in
pop
add
cld
shll
test
cmp
or
test
jbe
adc
dec
mov
jle
cld
pop
notb
shlb
pop
mov
push
ljmp
and
jg
fidivrs
mov
mov
aam
enter
xor
mov
psraw
cmp
mov
mov
fs
roll
xor
push
pushf
lahf
mov
gs
jo
clc
fldt
ret
mov
inc
outsl
inc
aaa
add
into
outsb
ljmp
rcrb
insb
xchg
jo,pn
bound
and
insl
mov
orb
pop
orb
mov
stos
dec
mov
adc
pushf
sbb
outsb
outsl
pop
loope
jp
repnz
push
mov
ficompl
in
aaa
xor
fmul
gs
push
xchg
fwait
into
add
fmuls
ljmp
push
mov
mov
or
add
cmc
push
out
pop
mov
pop
push
sbbl
cmp
scas
add
adcb
and
lret
mov
push
iret
add
push
adc
repz
in
sbb
mov
push
push
pop
lret
xchg
xorb
xor
cs
test
shll
stos
adc
add
mov
call
and
icebp
aam
cmp
fcmovnb
push
sbb
addr16
insl
notb
sbb
lods
mov
mov
mov
fs
popa
fnstsw
push
cld
push
out
es
cmp
and
cli
adc
push
mov
mov
jo
stos
sub
cmp
std
xchg
xchg
mov
jb
js
arpl
fdivr
das
add
xchg
pop
mov
stos
jnp
fwait
and
or
das
std
sti
push
cmpsb
ljmp
cmp
push
mov
fadds
ffreep
inc
or
push
dec
jb
or
xchg
push
je
pop
jg
mov
pushl
dec
cmpsl
push
orl
pop
nop
daa
mov
cmpsb
js
call
xchg
dec
mov
insb
inc
dec
pop
es
sub
das
push
sub
cld
pop
iret
mov
xor
push
cmp
mov
mov
movsb
and
mov
xor
add
inc
jne
arpl
call
inc
outsl
roll
inc
mov
mov
add
mov
mov
sbb
inc
push
inc
punpcklbw
jge
and
or
adc
mov
mov
outsl
cld
adc
pop
jmp
stos
jo
mov
mov
mov
call
in
icebp
mov
push
outsb
mov
icebp
fwait
sti
xor
mov
jmp
mov
arpl
jo
xchg
mov
adc
pop
dec
xor
sbb
and
or
mov
out
xchg
andl
cld
jmp
cwtl
sub
dec
push
dec
lds
orl
mov
cs
int3
or
addb
jno
or
and
test
jle
stos
inc
push
es
dec
push
push
enter
mov
repz
xor
sub
fisubl
std
jmp
xor
aad
adc
cli
ss
sbb
lret
rcrb
in
xor
aam
loope
add
hlt
push
loope
fstpl
fstpt
and
lds
insl
loop
mov
dec
dec
or
outsl
insl
jg
jg
inc
adc
xor
inc
and
mov
sub
xchg
pushl
enter
mov
movsl
sahf
dec
repnz
push
in
pop
jecxz
fiaddl
pop
dec
rorb
add
push
dec
int
adc
cli
push
ljmp
es
or
movsb
cmpsb
imul
pop
sub
jp
adc
popf
movsl
mov
push
xchg
imul
push
mov
enter
subb
sbb
inc
mov
int3
popl
int3
test
push
mov
add
loop
cmpsb
insb
std
pushl
xor
test
insl
inc
jecxz
pusha
inc
je
loope
pop
mov
lcall
cmp
cmpl
in
loopne
add
sbb
int3
pop
fstpl
mov
inc
jmp
dec
mov
adc
adc
and
or
aaa
mov
pop
dec
pop
inc
jge
push
add
ljmp
lret
xchg
repz
dec
popa
fsubp
outsl
fsubrl
push
and
mov
popa
inc
or
push
mov
xlat
xchg
cmp
adc
pop
insb
stos
xchg
mov
mov
loopne
or
test
mov
inc
ss
sbb
arpl
cld
fadds
filds
lods
mov
mov
push
outsb
outsb
sbb
ret
sti
jg
jbe
insl
fmull
ja
cmp
int3
sub
push
insl
jg
jge
xor
fcomp
sub
insb
in
mov
or
mov
popa
enter
and
xor
sub
mov
lods
xor
or
lret
mov
xor
out
and
push
loope
imul
out
inc
lods
sbb
add
jae
xchg
xchg
stc
movsl
cmp
dec
and
jmp
xchg
jl
ja
aad
mov
mov
or
mov
aam
fdivrs
or
dec
jae
pushl
divb
rclb
imul
mov
adc
incb
push
mov
sbb
iret
fwait
push
in
fadd
out
hlt
add
dec
mov
mov
mov
test
fildl
sbb
mov
push
sub
pusha
push
daa
int3
jg
xchg
pop
fldl
fisttpll
or
push
out
clc
neg
cwtl
cltd
or
out
loope
out
orb
mov
lock
aam
push
jmp
push
mov
pop
adc
xchg
adc
adc
je
imul
outsb
and
cmpsb
adc
mov
call
mov
adc
push
pop
insb
hlt
add
xor
imul
arpl
dec
aad
jbe
arpl
push
fistpl
out
test
outsb
pushl
call
mov
js
fildll
or
sahf
jge
and
xor
ret
jmp
add
repnz
fcmovnbe
pushf
dec
or
jp
dec
out
lcall
popf
test
jno
mov
add
mov
ds
push
jp
imul
outsb
stos
pop
pop
sbbb
clc
lods
fadd
fdiv
out
sub
cs
repz
dec
cmp
pop
stc
shll
inc
insb
enter
js
rcrl
jge
aaa
push
push
nop
xchg
and
js
ljmp
push
ret
adc
xchg
pop
fbld
in
sub
les
in
movsl
shrd
fisttpll
pop
or
mov
pusha
ret
pop
test
dec
dec
mov
mov
imul
fdivrl
cmp
pusha
pop
and
xor
push
les
fucom
and
in
rcl
mov
lret
lcall
aad
xchg
jg
mov
xor
mov
aad
cld
sarb
and
push
lock
jmp
outsl
pop
cli
filds
lods
adc
out
cmpsl
inc
decl
mov
ss
aaa
imul
pop
adc
jne
jp
xor
dec
pop
push
test
out
xlat
xchg
fcom
pop
fbld
movsl
jecxz
and
add
loop
jmp
std
mov
and
mov
les
jae
or
mov
loop
ja
pop
hlt
nop
imul
icebp
mov
pusha
hlt
push
xlat
xchg
in
mov
test
fucom
test
or
nop
mov
mov
das
inc
dec
push
pop
or
das
popf
repz
lock
dec
and
mov
arpl
imul
test
faddl
roll
inc
in
loop
push
push
stos
mov
sub
xor
mov
adc
clc
loope
xor
mov
jnp
mov
jl
fisttps
call
mov
mov
mov
pop
int3
fiaddl
cmp
popf
je
ror
dec
push
inc
push
xchg
mov
pop
cmpsl
and
cmp
fildl
xor
sar
pop
outsb
mov
or
or
dec
cmp
adc
aas
jg
das
outsl
ds
inc
xchg
repnz
xchg
sbb
in
mov
dec
xlat
rol
add
loopne
or
andl
mov
fwait
jle
mov
inc
fmuls
mov
adc
int
or
or
shl
fildll
push
dec
add
jmp
sbb
mov
inc
ret
or
push
sub
xchg
pop
fdivrs
xchg
add
mov
iret
or
inc
mov
sub
mov
xor
insl
insl
addb
popl
push
divb
ret
popf
xchg
cmc
adc
jp
fbstp
ret
mov
cmp
gs
xchg
out
loope
ss
fisttps
or
in
or
iret
mov
insl
push
popa
sub
cld
aas
ja
cmpsl
mov
sbb
add
or
retw
fcompl
xchg
jb
sarl
and
add
sub
call
fisttpl
jg
or
push
gs
les
fisubs
cltd
inc
gs
sbbl
inc
idivb
xor
pop
jne
mov
insb
je
test
inc
xchg
arpl
test
sub
dec
das
cmp
test
mov
movsb
outsl
and
sbb
sbb
push
dec
mov
adc
inc
inc
cmpsb
fwait
insl
jmp
add
mov
insb
sub
pop
stc
pop
into
mov
pop
pusha
out
cs
orb
loope
mov
test
or
push
mov
dec
imul
adc
adc
stc
adc
les
repnz
ja
aam
ljmp
xor
inc
mov
stos
pop
scas
pop
jle
jg
pop
push
mov
aaa
aam
cmp
test
add
inc
insl
fadds
sarb
lock
rolb
test
imul
mov
arpl
cli
insl
add
or
lcall
outsl
enter
lcall
imul
pop
repnz
mov
out
and
subb
out
mov
and
test
pop
cwtl
gs
xchg
shll
sbb
sbb
inc
pop
jp
mov
inc
lods
mov
mov
jne
jns
orb
jno
mov
std
decl
subb
iret
pop
mov
mov
mov
cwtl
mov
sbb
xor
mov
lret
jae
icebp
mov
out
push
sbb
sti
push
adc
pop
fisubs
fisttpll
cmpsl
repz
test
sub
dec
mov
ljmp
adc
sub
cmp
push
pop
fsubl
loope
popa
inc
mov
stos
jae
int
aaa
push
mov
in
repz
mov
xor
pop
mov
push
and
mov
ja
lock
fs
fwait
repnz
lea
popf
bound
iret
sub
aaa
lods
sarl
loopne
call
xor
jle
dec
outsl
mov
test
pop
cmp
nop
add
mov
xorb
lret
mov
rcr
mov
jg
jg
lret
stc
sahf
inc
push
fwait
xor
push
les
push
push
xchg
xor
test
outsl
push
adc
jae
mov
inc
jmp
jo
jmp
rcrb
cld
xchg
enter
xor
jge
out
cli
adc
mov
dec
stos
iret
clc
push
push
lret
push
in
pop
push
pop
mov
movswl
jmp
inc
push
repnz
cmpsb
cmc
pop
fdivrs
jno
push
mov
dec
jno
adc
out
mov
repnz
mov
mov
jge
ret
daa
ret
mov
sbb
xchg
movsl
int
xor
push
sti
xor
mov
sahf
cwtl
or
movb
xchg
lea
test
xchg
mov
and
jns
jo
push
cli
lea
mov
mov
push
jbe
cli
jne
or
inc
inc
adc
and
shrb
int
filds
xchg
inc
test
xor
mov
sbb
jne
pop
lahf
dec
daa
fldenv
clc
or
test
add
cwtl
cmp
xor
scas
sbbl
out
outsl
jecxz
das
hlt
push
je
std
xchg
xchg
mov
and
scas
sti
lea
dec
cmp
add
int
sub
movsl
mov
inc
hlt
jbe
sbb
or
aas
inc
pop
sbb
or
adc
pushf
pop
movsb
mov
in
andl
and
push
icebp
test
sub
push
sbb
test
push
push
adc
cmpl
lahf
shl
jae
fdivs
hlt
mov
insl
orb
pusha
or
mov
pop
mov
xor
clc
jnp
adc
outsl
hlt
incl
xor
dec
add
subl
inc
push
sbb
lea
cltd
cmp
xor
sbb
xchg
fistl
aam
imul
divb
xor
dec
outsl
std
mov
push
test
or
ffreep
or
je
jmp
jmp
ret
aad
jp
out
and
and
jae
subl
xor
jg
rol
dec
out
cld
mov
cld
mov
jp
out
ljmp
pop
dec
xchg
rclb
pushf
les
or
push
nop
jo
icebp
test
ds
stos
incl
sub
aad
cmp
hlt
mov
xchg
cwtl
mov
pushf
jo
add
push
and
leave
xchg
sbb
mov
sub
mov
mov
adc
aam
or
mov
jp
adc
jmp
inc
add
cmpl
add
popa
cmp
jnp
lea
pop
repz
ficompl
loopne
cmp
shr
aad
loopne
push
add
clc
mov
loopne
cmpsl
push
fsubrs
jge
xchg
xchg
cmp
je
mov
mov
adc
and
mov
fdivrl
push
loop
jl
orb
or
das
pop
test
sub
xor
add
jl
unpckhps
pushl
or
mov
fwait
xor
adc
dec
sub
cmpsb
ljmp
mov
rcll
dec
cmc
adc
cmpsl
mov
and
mov
clc
decl
xor
inc
sbb
jnp
pop
push
xor
push
inc
sti
test
rorb
push
icebp
mov
inc
stos
push
aad
inc
cmc
loopne
das
insl
sub
ja
sub
add
test
inc
add
pop
test
insb
or
mov
mov
jp
ja
movl
lds
push
mov
sub
lret
aas
bound
xchg
mov
xchg
push
aad
mov
sbbb
jmp
std
mov
int3
scas
adc
pop
fstpt
push
fnstcw
or
sarb
mov
push
dec
add
cmp
or
dec
jnp
mov
inc
inc
fsts
add
cmp
push
outsl
jbe
mov
mov
call
or
xchg
pop
clc
mov
shll
shl
cmp
or
xor
xor
cmpsb
mov
mov
test
insb
jns
into
adc
gs
stos
out
mov
mov
and
rolb
ja
add
sbb
dec
pop
xchg
push
fists
mov
bound
inc
decl
in
add
and
sub
dec
je
xor
addb
mov
add
fldl
and
push
and
cmp
mov
and
xchg
shll
rolb
js
cmpsb
fs
cwtl
fs
stos
inc
sub
rcll
push
lock
push
sbb
mov
jae
hlt
add
cmp
in
pop
sbb
pop
out
pop
jecxz
data16
adc
mov
fwait
xchg
hlt
outsl
mov
xor
and
repnz
sub
mov
jno
xchg
jno
add
push
or
inc
movsb
xchg
lods
outsl
pop
aaa
fcomps
push
lret
rolb
cmpsl
and
cmp
insl
xchg
mov
inc
iret
out
lcall
fiaddl
push
mov
jns
icebp
pop
jae
pop
pop
pop
mov
sti
inc
xorb
pop
and
cmpsb
call
mov
add
frstor
xor
jns
xor
cmp
push
test
cmp
out
lds
inc
mov
adc
push
mov
les
out
or
xchg
shrl
push
jno
jnp
stc
or
int
loope
and
xor
ss
push
inc
ljmp
loope
mov
push
xlat
je
mov
cwtl
xor
pop
arpl
out
insl
mov
loopne
cmc
pop
inc
xor
stos
aas
cmc
insb
out
or
pop
js
fisubl
push
pop
loop
rorl
pop
ljmp
xlat
mov
filds
pop
shll
ds
or
rclb
ret
mov
outsl
lods
pop
jno
inc
sub
sub
sarl
xchg
bound
push
iret
pop
pop
jbe
xlat
fadds
rorb
xor
jno
subb
xchg
add
jle
in
mov
push
or
xchg
xor
jnp
mov
push
mov
jno
sub
cmpsb
add
jge
mov
jae
aam
in
aas
nop
inc
in
idivb
fbstp
pop
cld
mov
and
push
or
push
imul
jb
dec
or
sub
cmpsl
inc
aas
clc
sbb
incl
sub
cmpsb
dec
sub
push
and
ss
and
pop
dec
and
add
jb
mov
cmp
xor
xchg
jne
inc
mov
fisttpl
jmp
int
pop
push
imul
xlat
pop
or
in
xchg
and
dec
jne
clc
adc
jecxz
jle
outsl
push
push
jl
imul
xchg
stos
cmpsw
pop
mov
iret
mov
int
mov
mov
mov
lea
adc
rorl
jbe
cmpb
push
cld
das
cltd
jae
and
test
lret
pop
inc
jbe
xchg
inc
ljmp
inc
in
inc
shrl
mov
push
std
decl
mov
ret
adc
jo
lahf
aas
xchg
pusha
dec
push
into
mov
push
shrb
cld
imul
xor
stos
push
cmp
add
imul
or
xchg
add
mov
pop
push
lods
ret
mov
or
inc
xchg
dec
sub
mov
enter
addb
jmp
push
mov
mov
pushf
pop
sahf
push
push
jge
inc
cmc
push
add
inc
sub
adc
ret
lock
data16
pop
jmp
add
les
jo
xor
hlt
or
insb
sub
scas
in
das
dec
enter
xchg
pop
test
mov
jbe
jnp
and
les
dec
and
pop
outsl
scas
mov
cmp
stos
cmp
das
ljmp
loop
jge
in
scas
or
push
call
repz
push
mov
sbb
aas
inc
sarl
fstp
dec
jb
cmc
popa
xor
test
stos
mov
arpl
dec
push
das
jno
and
scas
or
xchg
pop
cld
push
pop
add
pushf
mov
xchg
sub
lock
scas
add
jb
mov
lcall
adc
adc
mov
xor
or
xchg
shrl
repnz
test
popf
push
mov
adc
incb
in
jp
cmp
jle
clc
outsl
fdivl
or
or
and
fidivl
cmp
repnz
xor
pusha
popa
dec
mov
jecxz
jg
rolb
or
inc
add
movl
pushf
add
inc
mov
call
js
sbb
push
js
xchg
mov
mov
push
lock
xchg
or
out
add
inc
pop
mov
push
inc
icebp
lock
push
xlat
lock
imul
add
jne
add
das
in
and
mov
and
arpl
lea
xor
jle
decb
mov
jp
popf
loope
xlat
lods
add
idivb
adc
in
push
push
mov
pop
ljmp
inc
dec
test
fisttps
mov
sbb
sarl
outsb
das
jne
mov
imul
mov
sbb
mov
int
les
fldl
push
lock
loopne
push
scas
adc
sbb
jbe
into
ret
mov
xchg
push
clc
add
xchg
adc
cli
pop
adc
rorb
dec
xchg
lods
lcall
lret
lods
popa
call
xor
fldt
jno
xor
jno
pusha
adc
lds
push
data16
aaa
jmp
addb
loope
dec
sub
jb
call
addl
dec
insb
lock
push
sti
xorl
movsl
sub
mov
lds
in
mov
inc
push
pop
ret
das
inc
aaa
mov
pop
mov
vunpcklps
sysexit
mov
lods
int3
and
cmp
push
push
popf
jb
dec
lods
xchg
stos
xchg
sti
and
lea
xchg
lret
loope
dec
pop
test
ja
repnz
sbb
jle
mov
jae
mov
add
movsl
mov
push
scas
lret
add
ss
pop
les
test
sti
push
xlat
mov
mov
scas
adc
add
mov
mov
cld
xchg
push
push
pop
or
sahf
mov
scas
and
sbb
mov
rcrb
aas
sti
inc
fcomip
lock
inc
mov
push
mov
lret
or
jmp
jmp
or
mov
jle
jb
pop
jmp
add
insl
ja
popa
sub
lea
imul
sbb
cmp
inc
or
or
sbb
addr16
sub
addr16
jb,pt
pop
adc
adc
subb
inc
loop
push
xor
repz
dec
lock
out
rorb
adc
notb
sub
das
pop
mov
fstl
and
dec
inc
in
mov
sbb
sub
shlb
pop
out
fistl
shlb
cld
add
in
outsb
test
and
mov
add
mov
mov
imul
ljmp
call
scas
inc
pop
imul
ja
out
push
faddl
aad
push
fnsave
inc
arpl
shlb
ja
and
dec
fstpl
pop
adc
cs
push
sbb
mov
loope
jmp
mov
ficoms
repz
xchg
popa
dec
daa
pop
jecxz
sbb
pop
push
fnstsw
xlat
sbb
push
stos
pop
and
pop
addr16
mov
mov
in
shrb
push
je
push
and
adc
shlb
mov
mov
sbb
js
negl
mov
sahf
enter
inc
mov
stos
cmp
mov
jmp
mov
pop
clc
cmc
lods
jnp
or
xor
out
jae
movsl
xchg
fisubrs
mov
jb
jo
push
data16
sbb
push
or
lret
popf
ja
sub
cmpps
mov
jnp
mov
adc
sahf
cmp
and
int3
xor
jp
movb
pushf
jmp
mov
jle
xchg
call
mov
or
mov
adc
adcb
pop
mov
xor
jl
sbb
xchg
cmp
or
lock
addl
pop
add
adc
outsb
test
xchg
cs
aam
loop
fstp
lock
xchg
out
push
sti
cwtl
popf
adc
add
pop
std
fcoms
call
insl
adc
push
push
cmp
and
inc
jecxz
bound
push
test
xchg
add
mov
add
mov
mov
fists
ucomiss
push
dec
cmp
xchg
or
out
or
outsl
ffree
fbstp
pop
xor
mov
inc
inc
cs
out
or
or
push
mov
shl
cmp
push
and
movsl
in
add
pop
jg
jne
fnsave
add
repnz
jne
in
jmp
int
js
mov
mov
shl
leave
push
sar
adc
into
movsl
cmp
dec
cmp
andb
test
mov
sbb
cli
inc
sbb
inc
mov
cli
inc
push
jg
xchg
adc
or
dec
jae
sbb
mov
cli
sbb
adc
ja
add
inc
cmp
loope
mov
out
scas
mov
ljmp
hlt
lret
divl
and
fnsave
imul
xchg
rolb
out
inc
hlt
add
sbb
or
adc
ja
dec
xchg
and
aas
sub
movsb
das
dec
in
cmp
cltd
scas
cmp
xchg
mov
iret
dec
fstps
outsb
sbb
push
push
adc
push
push
sub
insl
in
inc
sub
jl
std
mov
or
xchg
inc
and
xchg
pop
jg
loopne
imul
inc
or
cmp
arpl
mov
push
add
or
sbb
pop
test
mov
dec
ds
in
lds
mov
je
loope
sub
xchg
gs
dec
mov
aaa
pop
fidivrl
adc
and
fsubl
sbb
mov
jae
mov
imul
dec
loop
adcb
mov
or
in
scas
or
in
push
xchg
subl
pop
fmul
ret
fwait
sub
inc
push
add
sub
in
lahf
mov
imul
push
fimuls
clc
sbb
scas
mov
fwait
lret
int
int3
aas
jns
push
xor
mov
pop
mov
outsb
mov
and
sbb
fcmovnbe
mov
outsl
in
shll
popl
ja
mov
mov
adc
jmp
dec
ds
scas
lds
dec
test
rolb
dec
push
data16
push
idivl
aaa
imul
mov
std
adc
xor
pop
dec
and
call
jae
sub
outsl
xchg
xchg
jbe
lcall
in
add
inc
ret
outsl
aad
div
xor
js
imul
mov
lock
leave
incl
fistl
or
icebp
adc
add
dec
push
shll
movsb
clc
sub
mov
insl
add
or
shll
subl
cmpsl
sub
notl
pop
sub
inc
pop
ljmp
and
loope
fistps
ds
sbb
adcl
inc
out
xor
jbe
adc
andb
test
pop
rorb
daa
xchg
imul
daa
outsl
sbb
inc
mov
daa
pop
loope
add
mov
jmp
cmp
je
loopne
shl
adc
dec
gs
orl
push
jle
test
push
pop
adc
fstpt
sbb
rcr
mov
cmp
sbb
movsl
out
xchg
xor
mov
fidivs
cmp
out
in
jg
mov
test
xchg
or
jge
fwait
hlt
sub
and
jge
mov
inc
ja
scas
mov
in
mov
mov
je
mov
shll
mov
dec
lahf
mov
div
mov
nop
lcall
das
adc
js
sub
and
lea
arpl
dec
and
mov
sbb
cmp
sarl
pop
xchg
std
xor
sbb
fwait
jge
cmc
fildl
sbb
stos
clc
outsb
pusha
loop
xor
orb
pop
jge
and
shrb
pop
pop
fwait
push
dec
ss
clc
adc
or
lea
enter
into
mov
mov
mov
loopne
jno
adc
mov
shll
sub
add
lods
inc
pop
test
xchg
sub
mov
pop
cs
scas
lods
mov
pop
push
rcr
sbb
lods
imul
js
rcrl
jp
or
adc
popf
je
xchg
les
push
shr
sbb
fistps
mov
xor
add
pop
cli
mov
movsb
dec
fdivrs
or
cmp
filds
movsl
test
scas
jge
sub
pop
cmpsl
adc
xchg
scas
sahf
cli
jg
ret
inc
jl
fisubrl
sbb
pop
add
fisubrl
loop
push
add
nop
adc
int3
jo,pn
jp
mov
mov
insb
fs
sti
xor
jno
pop
push
and
mov
mov
testb
das
inc
insb
sbb
aad
jg
mov
cs
sahf
imul
mov
and
popf
mov
cmp
and
cmp
mov
shrb
in
test
les
movsb
adc
mov
inc
pop
call
test
or
inc
into
cld
mov
dec
shll
or
mov
aas
adc
push
push
mov
pop
loope
or
push
fdivl
popa
lods
stos
shrb
pushl
loop
jae
jmp
ljmp
and
add
adc
mov
jmp
dec
sbb
dec
jae
imul
inc
movsl
mov
cwtl
jnp
and
adc
in
vpmacsdql
pop
pop
cmp
jbe,pn
xchg
sbb
lcall
fsts
cmp
push
sbb
jae
pop
sti
call
test
in
testb
fs
outsb
mov
add
mov
xor
pop
mov
repnz
int
adc
ffreep
shlb
cld
inc
lea
xor
inc
roll
or
lds
add
mov
sub
push
pop
cli
add
insl
pop
add
sbb
mov
aad
popa
xchg
push
faddp
stc
ss
push
push
scas
fs
xchg
and
jge
nop
xor
inc
pop
lea
sbb
mov
pop
xor
or
pop
test
gs
fiadds
loop
cmc
stos
adc
arpl
mov
in
push
mov
sbb
jle
inc
out
ret
dec
sub
scas
cmc
inc
pop
mov
jno
stos
mov
xor
xchg
cmp
lret
mov
inc
mov
add
call
xchg
fcoml
and
addl
push
call
mov
sbb
sti
jo
aaa
or
movsl
jb
rcll
mov
mov
loope
push
outsb
push
jmp
jg
push
xchg
xchg
jge
js
fidivs
xchg
out
jno
subb
arpl
sar
push
jb
xor
xchg
sub
cmp
add
pop
sub
inc
or
mov
or
sbb
rolb
jge
outsb
sbb
sub
adc
fwait
mov
jae
js
popa
pop
std
shlb
les
add
or
dec
aaa
adc
in
mov
xchg
fidivs
jmp
outsl
mov
clc
adc
xchg
jo
push
mov
and
xchg
lea
push
mov
mov
jg
rcl
mov
lea
cmc
or
add
mul
int
mov
add
adc
push
dec
clc
sbb
sbb
fnstsw
pop
jecxz
push
push
stc
fsubs
pop
dec
add
cmpsl
dec
inc
or
pop
cmpsb
int3
cmpl
test
dec
fcmovne
test
hlt
pop
adc
xchg
ss
sub
add
test
lret
xor
and
faddl
fwait
sbb
push
imul
ds
aas
dec
pushf
les
adc
cmp
adcl
jb
outsl
lea
inc
and
outsl
addb
pop
idivl
push
ds
pop
cli
movsl
lea
ljmp
imul
mov
pop
shlb
pop
or
pop
xchg
pop
adc
fsubs
in
decb
or
sub
bound
xor
vphsubbw
cld
add
mov
fs
fldt
inc
in
cli
jecxz
outsl
jo
sbb
add
out
or
popa
out
mov
pop
fwait
pop
xchg
mov
mov
xchg
iret
mov
stc
movsb
dec
sub
mov
nop
filds
out
or
cmp
jne
push
mov
ficompl
scas
in
mov
mov
cmp
pop
jno
test
ret
mov
xor
hlt
cmp
mov
push
out
and
xchg
push
pop
out
test
stos
mov
jno
dec
lcall
and
cli
fbstp
mov
aas
roll
mov
push
scas
adcb
mov
xchg
sub
scas
jnp
sub
rol
xor
ds
or
push
sbb
cli
shrl
and
cmp
inc
loop
aad
mov
dec
lock
sahf
aaa
mov
add
imul
adc
fnstenv
jo
in
fistpll
push
cmp
fists
shrb
or
sarl
lock
dec
xor
rorl
push
scas
ja
popa
push
icebp
mov
sub
sbbb
je
push
inc
leave
or
mov
shlb
push
sbb
subb
lea
adc
mov
out
into
inc
add
sarl
insb
mov
cmp
clc
pop
cmp
sbb
sbb
pop
cld
inc
or
je
enter
or
pusha
dec
adc
repnz
mov
push
aaa
js
push
into
addb
jb
pop
and
pop
jbe
push
test
pushf
or
test
jne
dec
adc
in
mov
pop
repz
push
jg
lea
aam
sbb
dec
and
fstp
xchg
mov
sbb
jbe
push
ret
inc
push
adc
sub
pop
movsl
or
fnstsw
sub
sub
sti
std
inc
cmp
inc
push
repnz
repz
jle
stc
push
ljmp
in
in
fistpll
test
out
dec
mulb
mov
sub
fisttpl
clc
enter
mov
and
in
das
lret
inc
adc
ja,pn
jcxz
dec
xchg
mov
xor
mov
jp
cs
pop
pushf
and
movzwl
mov
aas
pop
call
cmpsb
jg
or
das
out
lret
mov
or
dec
mov
out
movsl
mov
jmp
lds
into
add
add
rcrl
roll
cs
lea
mov
call
std
orb
and
jmp
divl
inc
push
pop
pop
addr16
cmpsb
cwtl
add
call
add
lods
jne
cmp
inc
push
pop
jl
mov
frstor
xor
xchg
jecxz
test
int3
add
std
jg
cld
sub
dec
jp
lods
or
popa
mov
pop
fs
sbb
lret
cmpsl
repnz
mov
inc
dec
push
sbb
push
popf
orl
cmp
outsb
sbb
insl
push
fsubr
sub
inc
sub
adc
mov
mov
mov
stos
decb
dec
xchg
sbb
adc
pushf
lret
pop
jl
mov
xchg
jecxz
mov
pop
lods
sub
sbb
pop
call
jmp
jge
or
shlb
add
ret
mov
in
popa
sbb
roll
mov
cs
arpl
push
jmp
mov
and
rolb
pop
ss
mov
mov
out
or
cmp
cs
shrb
pop
ret
stc
adc
jb
enter
nop
push
mov
mov
shrb
and
mov
fisttpl
sarb
arpl
jbe
xchg
rorl
sbb
outsl
mov
jmp
es
mov
adc
hlt
inc
mov
adc
mov
sub
bound
mov
shll
xchg
push
push
outsb
pop
cmc
sub
cmp
js
ljmp
aaa
and
lret
das
dec
mov
roll
jmp
pop
scas
cmp
addr16
ds
xlat
cli
ret
insb
es
scas
loope
das
insb
or
adc
push
xchg
mov
mov
ret
mov
push
dec
je
push
les
inc
cmp
jo
test
push
xor
cmp
sbb
fs
ficoms
jge
mov
push
pop
pop
repnz
lods
in
xchg
mov
inc
stos
call
fistl
cmp
gs
mov
or
addr16
popf
fstpt
mov
cltd
push
jo
dec
out
movsl
cld
mov
jg
negl
pop
xchg
mov
and
inc
dec
rcl
in
cltd
fmull
push
and
daa
test
jmp
fdiv
mov
jl
ljmp
ret
loope
addr16
adc
clc
push
arpl
aad
imulb
sub
jg
fs
stc
test
test
stc
or
and
aam
pop
pop
clc
adc
insb
data16
scas
mov
xor
aad
sub
xchg
jns
mov
outsb
mov
arpl
fildll
int
fistps
int
inc
inc
adc
es
fistpl
lods
push
push
adc
push
jle
mov
sarl
enter
js
bnd
mov
xchg
test
sub
insl
pop
inc
mov
add
xor
or
push
scas
xchg
inc
pop
inc
cmc
insb
test
push
ja
out
int3
mov
test
dec
jecxz
clc
lock
add
adc
pop
jge
sbb
fs
xor
aad
lea
mov
insl
sub
xor
iret
mov
and
mov
push
js
dec
cmc
pop
imul
fwait
scas
mov
push
clc
cmp
sbb
xchg
add
movsb
adc
xor
negl
jge
ja
sub
xor
mov
mov
push
mov
push
push
jo
mov
pop
outsl
pop
sbbl
insl
loopne
jne
divb
push
mov
inc
mov
sub
adcl
mov
call
mov
sbb
inc
add
push
pop
adc
ret
inc
lock
jo
add
lret
and
jae
mov
sub
xchg
andps
mov
push
xchg
xor
add
faddp
mov
cmp
mov
or
cs
shll
inc
add
bswap
sub
ja
add
jae
mov
xor
pop
and
add
fsubs
dec
in
orl
hlt
add
sub
fwait
jae
and
daa
pusha
push
xor
addb
mov
add
in
pop
pop
sbb
mov
push
ss
adc
ljmp
sarb
adc
sub
sbb
push
add
adc
mov
push
jbe
and
jbe
dec
inc
aam
outsb
push
popf
scas
and
push
mov
xor
and
sahf
mov
dec
cmc
popa
xchg
sub
sbb
push
or
pop
jl
mov
jge
add
mov
outsb
cmp
inc
mov
shrb
xor
or
sub
lock
adc
movsb
and
adc
fsubr
jp
push
pop
add
mov
sahf
push
dec
sbb
hlt
ja
in
lock
mov
popf
add
sub
daa
push
hlt
ficoml
add
loope
hlt
dec
push
push
outsl
and
sbb
popa
sti
sub
es
dec
outsb
xor
imul
or
lahf
cld
je
adc
jmp
push
push
pop
and
or
lahf
inc
inc
lret
jno
js
outsb
loopne
scas
dec
jne
in
inc
daa
inc
test
test
inc
push
mov
mov
push
xlat
adc
add
dec
dec
inc
sub
add
jle
fiadds
cld
xor
mov
mov
sbb
push
scas
mov
fwait
jp
inc
in
xchg
bound
jne
mov
dec
lock
shrl
sub
and
mov
push
inc
xchg
loope
mov
imul
xchg
dec
pop
adc
shll
lret
les
pop
int
push
leave
lahf
push
push
mov
inc
mov
push
mov
rclb
sub
adc
sbb
roll
outsl
cld
inc
push
jns
insb
sub
add
inc
adc
insb
pop
sub
add
inc
and
dec
xor
adc
jb
sbbb
cmp
jne
aaa
dec
pop
dec
jmp
outsb
data16
outsb
loope
inc
loopne
jns
std
sbb
adc
dec
add
pop
mov
dec
sbb
mov
push
fidivrs
jae
inc
js
dec
je
jg
adc
mov
push
rorb
test
arpl
fistl
je
dec
dec
pop
cmpsb
ret
int
jo
rolb
sbb
sub
push
adc
jo
jnp
mov
pop
inc
mov
int3
loop
lock
hlt
pop
fldcw
outsb
cld
and
out
jbe
inc
mov
xor
data16
cld
and
sarb
pop
pop
push
add
push
adc
popf
xchg
clc
clc
aaa
mov
dec
loopne
sbb
pop
xorl
out
xor
cmp
xchg
lret
xor
cmpsb
test
int
sub
orl
push
sub
test
sbb
lea
xchg
aas
mov
clc
inc
sub
add
enter
and
sbb
sbb
add
les
or
or
adc
je
data16
sbb
cmpsl
jno
std
xor
jmp
popa
data16
loope
push
fistps
push
pop
dec
insb
push
stos
pusha
mov
lds
jmp
cmp
jg
lods
call
inc
mov
add
lea
jo
sbb
push
sub
xor
ja
inc
sbb
cld
push
jmp
xor
jne
bound
jmp
inc
or
dec
sub
in
mov
or
insb
xor
sbb
mov
push
insl
add
add
push
pusha
test
inc
adc
cmc
inc
data16
sti
mov
insl
push
repnz
outsb
cltd
scas
sub
add
fcoms
and
sub
add
popa
bswap
push
dec
pop
jge
or
cmp
bound
pop
xor
and
mov
imul
and
movsl
xchg
test
mov
add
test
imul
push
pop
in
add
mov
testb
pop
push
mov
dec
push
and
xor
movsl
push
ror
movsl
mov
aas
mov
in
jae
jae
and
js
in
dec
add
sbb
insl
out
push
or
gs
push
push
or
push
xchg
add
outsl
sbb
add
dec
mov
or
arpl
xor
pop
call
cld
ja
dec
push
jb
mov
cmpsl
mov
hlt
ret
sub
jne
inc
outsl
loop
cmpsb
aaa
gs
or
pop
sub
sub
push
outsb
adcl
fisubs
mov
add
add
or
cmp
pop
aas
add
stos
lods
pop
mov
cvtps2pi
xor
adc
jg
movsl
roll
ffreep
fmul
add
dec
mov
sbb
inc
add
sub
outsb
pop
jns
fnstsw
rorl
sub
scas
sub
jnp
mov
rolb
add
dec
popa
arpl
sub
jle
fwait
ss
dec
pop
inc
data16
cmpsl
call
jg
adc
sbb
push
mov
sbb
adc
gs
popf
dec
sbbb
pushf
pop
xchg
xor
inc
sub
roll
rolb
add
test
scas
aam
in
mov
adc
cmc
lahf
imul
jae
mov
push
push
sbb
movsb
int
ss
fisttps
movsl
jb
push
outsl
jnp
push
xor
sarb
pusha
add
push
addr16
push
adc
cs
es
pushw
aaa
fsubl
movsb
push
sbb
sbb
in
and
repnz
jmp
jle
pusha
cmpb
dec
jg
pop
mov
mov
xor
fs
xchg
hlt
cmc
mov
bound
pop
popa
push
inc
jo
ficoml
push
shr
cmp
dec
mov
push
sahf
sub
inc
orl
inc
fidivrl
cld
cli
dec
and
dec
call
jo
cli
dec
add
outsl
push
imul
pusha
test
rorl
pop
outsl
test
sbb
repnz
dec
push
and
addr16
jg
call
cli
mov
and
pop
imul
sub
push
mov
cmp
test
je
jo
mov
dec
lock
push
inc
push
add
js
push
jne
dec
push
dec
hlt
push
sub
or
pop
in
decl
inc
mov
add
sub
add
mov
roll
push
cld
sbb
outsb
sub
movl
sbb
jns
je
shll
fsubr
data16
inc
jo
xchg
ror
xor
fdivrp
inc
fstps
cmp
addr16
inc
cli
repnz
jns
dec
add
add
icebp
sbb
lods
xchg
dec
gs
fistps
push
pop
push
fs
bound
pop
add
inc
or
sub
testb
xor
sub
repnz
inc
add
fbstp
outsl
addr16
sub
adc
call
daa
xor
popl
arpl
add
cmpsb
dec
ja
notl
outsl
mov
inc
outsl
and
push
mov
inc
pusha
jbe
push
je
cmp
js
pop
push
cmp
inc
xor
add
and
icebp
xor
push
sqrtps
jb
dec
xor
fs
push
ficomps
cmp
and
ret
xor
cmp
sbb
jo
shll
clc
adc
inc
fsubl
addr16
loop
pop
xor
mov
aas
test
enter
pandn
imul
mov
mov
pop
movsb
add
in
andnps
lds
inc
arpl
sbb
cmc
mov
jae
imul
out
xor
push
adc
imul
dec
push
cmp
pop
sub
push
lahf
jae
mov
mov
push
jo
addl
jmp
push
push
or
int3
ljmp
insl
aam
dec
ljmp
bound
jnp
mov
adc
andb
jno
mov
add
xor
rcr
mov
fwait
gs
addb
pusha
es
adc
pop
in
push
fs
or
aam
and
mov
push
lock
imul
mov
test
inc
sbb
jmp
fld1
cmp
out
pop
xchg
shl
pop
inc
loopne
in
fucomip
mov
pushf
adc
mov
lods
out
cli
jmp
push
test
adc
pushl
jne
mov
sub
pop
xchg
js
fisttpll
dec
rsm
in
push
pushl
dec
xor
ret
scas
sub
inc
jmp
leave
das
mov
xor
mov
push
jae
jbe
nop
call
aaa
sbb
or
push
inc
push
adc
scas
in
dec
ss
pop
clc
ja
fdiv
movaps
xchg
and
adc
lods
sub
in
test
mov
sub
dec
inc
pop
or
imul
adc
push
test
outsb
outsb
inc
mov
sbb
jb
gs
pop
fcoms
test
cmp
pop
imul
in
cmp
push
or
inc
jecxz
push
pop
dec
popa
fisubs
mov
adc
sub
or
add
push
and
mov
icebp
loope
js
jns
xor
xchg
arpl
push
and
dec
insl
in
jecxz
aaa
pop
inc
ss
jb
jle
adc
xor
inc
lcall
mov
rcrb
mov
inc
insl
push
imul
lret
xor
xor
lods
jle
push
test
mov
daa
mov
xor
mov
add
movsl
and
iret
dec
sub
xchg
and
push
jne
cmpsb
pop
orb
push
push
dec
jno
jne
gs
sub
or
pop
push
xor
xor
adc
pushf
jb
inc
or
rcll
mov
sbbb
loopne
cmp
mov
test
mov
sti
add
shrb
lea
inc
rolb
into
ret
cld
jg
mov
test
aad
lret
inc
add
mov
or
jb
push
gs
mov
dec
sbb
rcll
xor
loope
dec
mov
dec
ficomps
add
movsb
enter
sub
fdivl
cmp
pop
and
add
inc
pop
int3
dec
inc
ja
add
dec
jo
push
and
dec
jg
jnp
or
sub
add
fbstp
incb
fistl
adc
imul
pop
je
shl
inc
dec
inc
dec
xor
add
sbb
and
dec
sbb
inc
ljmp
jg
xor
js
or
imull
rorl
fiadds
sti
ja
enter
fs
icebp
insl
mov
push
xor
mov
push
push
cld
arpl
sub
xor
add
jne
shll
ds
add
and
lods
mov
inc
inc
jne
aaa
inc
mov
pop
adc
inc
jle
mov
dec
dec
add
cmp
imul
fists
push
adc
sarb
adc
fst
adc
inc
cmp
push
pop
pusha
jne
aam
push
inc
push
roll
inc
inc
sbb
mov
popa
mov
dec
push
lret
push
and
pop
adc
inc
mov
mov
push
out
sbb
dec
inc
inc
arpl
pop
dec
sub
mov
or
adc
pop
and
mov
outsb
dec
add
jg
and
push
dec
dec
xor
mov
add
addb
adc
add
adc
adc
add
adc
jg
lods
fstpl
and
or
adc
pop
jae
pop
or
addb
push
adc
inc
add
pop
imul
sub
or
adc
adc
sub
outsb
fbld
adc
push
add
sbb
jae
notl
add
or
or
inc
or
inc
je
inc
inc
inc
add
mov
pop
dec
inc
xor
sub
pop
add
idiv
imul
gs
xor
cs
insb
mov
add
and
mov
into
ss
xor
add
ja
pop
jae
dec
js
inc
dec
es
xlat
fcmovu
lcall
insl
fwait
imul
aaa
pop
and
lcall
stos
or
mov
mov
adc
jae
cmp
inc
mov
pop
imul
add
dec
add
jae
ja
adc
add
adc
inc
shll
mov
xor
add
sbb
and
fstps
iret
mov
inc
add
lcall
mov
out
or
aaa
or
mov
jo
xor
arpl
lcall
or
lods
mov
xorb
add
adc
mov
adc
and
pop
mov
mov
jle
jo
popa
imul
aas
jae
mov
sub
push
adc
loope
fwait
roll
addl
pop
xor
stos
aaa
data16
xor
xlat
loopne
int
add
add
scas
jp
jp
sub
xchg
rorb
in
shlb
mov
pop
sbb
or
rolb
outsb
pop
jmp
lcall
sbb
and
loopne
mov
add
and
adc
lret
roll
jb
sti
fbld
jae
insb
gs
jne
jo
out
ljmp
adc
gs
popa
outsb
addr16
addr16
popa
insl
adc
gs
mov
jmp
xor
dec
gs
or
das
jne
and
bound
push
adc
jae
inc
jb
outsl
jb
ret
pop
push
push
pop
add
adc
inc
je
jne
imul
fldt
cmp
or
bound
and
jnp
jbe
xor
xchg
push
outsl
pop
push
jne
add
outsl
mov
sbb
pop
je
pop
push
je
je
jae
pop
jae
addr16
push
pop
mov
outsb
out
jo
outsb
dec
pop
jo
adc
arpl
jne
in
fldt
or
push
jns
gs
addr16
inc
jle
outsb
lods
cmp
imul
outsl
arpl
fcmovbe
data16
sbb
adc
inc
js
push
pop
fildll
popa
insb
imul
mov
mov
arpl
push
push
imul
dec
dec
sbb
mov
insl
outsb
xor
sub
mov
push
jae
les
jne
je
dec
inc
fdivl
adc
jae
cmp
mov
push
outsl
sbb
mov
jbe
sbb
lea
or
fs
gs
fs
adc
pusha
outsw
jg
cmp
pop
insb
push
cmp
dec
mov
out
xorb
sub
inc
pop
jne
jae,pt
inc
test
dec
sahf
outsb
aaa
push
outsl
sahf
xor
pusha
inc
shrb
rcl
sub
inc
inc
je
sbb
jnp,pn
jb
or
dec
and
sarl
jb
or
imul
adc
jo
inc
adc
or
inc
daa
insb
imul
fnstcw
ja
dec
test
ret
mov
scas
insl
mov
inc
sbb
sbb
jae
adc
inc
cmp
xchg
inc
inc
push
popa
ret
sub
popf
cmp
dec
outsb
lea
inc
mov
xor
xchg
cmp
sbb
ret
mov
or
sbb
movsb
insb
or
ret
sbb
push
jb
int
gs
jbe
sahf
data16
ljmp
mov
popa
jo
dec
aaa
je
inc
pop
fcmovnu
mov
xchg
jo
adc
fmul
dec
inc
pop
repz
adcl
lock
sbb
adc
dec
addr16
subb
jb
ds
inc
insb
insl
fs
xor
mov
dec
lods
mov
inc
pusha
push
push
mov
sbb
insl
xor
inc
sub
in
jo
or
sub
cmpsl
aam
stos
hlt
xchg
cmp
jle
sbb
in
aad
gs
adc
gs
mov
insb
test
xor
mov
les
sub
pushf
cltd
scas
shrl
push
cwtl
loopne
pop
add
insb
pop
or
lds
add
sub
test
sbb
sbb
sub
push
inc
movsb
mov
sub
sbb
scas
sbb
mov
sbb
inc
jbe
adc
xlat
imul
or
push
dec
fs
adc
fs
mov
lret
popa
push
lcall
fnstenv
push
or
mov
push
fwait
pop
adcl
inc
push
mov
jb
subl
jns
je
ds
push
cmc
push
pop
xchg
jae
mov
or
or
push
mov
shl
add
cs
outsb
xchg
cmpsb
dec
jae
mov
xchg
enter
pusha
fistps
inc
jne
data16
or
sub
adc
push
movsb
dec
cmpsb
push
test
xchg
imul
mov
add
inc
pop
icebp
xlat
in
aas
int
push
sahf
mov
dec
dec
push
inc
push
fsubl
inc
adc
out
outsl
pop
fisubrl
aam
inc
inc
or
outsl
imul
jg
pop
inc
loope
inc
jae
imul
sub
ss
icebp
cmp
inc
rsqrtps
inc
mov
insb
dec
sub
sub
imul
dec
int
gs
push
stos
rcr
mov
xchg
dec
addl
sbb
nop
sub
jnp
jne
nop
jns
je
jae
pop
jnp
roll
es
fs
jae
pusha
sti
inc
insb
addr16
jb
adc
xor
inc
outsl
pop
inc
and
jae
xor
arpl
fistpl
gs
inc
xorl
dec
xor
push
pop
or
call
icebp
jo
sbb
add
adc
dec
outsl
mov
push
in
notb
data16
std
pop
call
roll
scas
es
push
or
lretw
pop
jbe
mov
xor
addr16
jnp
daa
subb
inc
jmp
add
push
ja
cmpl
add
and
mov
into
add
inc
inc
inc
cltd
mov
lods
lods
in
adc
mov
xor
inc
aam
and
fdecstp
jbe
out
mov
loopne
xor
mov
mov
add
roll
sbb
std
rclb
add
push
jo
add
mov
loope
aam
sbb
dec
pop
mov
in
dec
fdivs
add
in
jb
dec
int3
inc
mov
idiv
aas
inc
aam
sub
dec
add
inc
jno
inc
std
add
lret
add
loop
jnp
jl
adc
pop
add
or
jnp
cmp
adc
dec
add
sub
fldenv
insb
mov
inc
andb
add
add
out
jne
push
cs
or
pop
into
xchg
mov
pusha
jns,pn
pop
sub
adc
adc
jmp
lods
je
inc
add
add
insl
lret
dec
mov
push
sbb
jae
or
loopne
mov
mov
js
pop
je
add
add
add
add
and
incl
pusha
mov
lea
push
or
jmp
nop
nop
nop
nop
nop
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
xor
sub
jb
shl
mov
inc
xor
je
mov
add
jne
mov
sub
adc
adc
add
jne
mov
sub
adc
adc
jne
inc
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
nop
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
