mov
and
lcall
stc
inc
jmp
push
cmp
imul
cs
outsb
push
xchg
js
pop
and
arpl
testl
or
test
inc
dec
ds
ja
pushf
cmpsl
test
or
jne
mov
or
mov
incl
stos
lret
and
mov
rclb
in
pop
out
jmp
inc
dec
outsb
or
xchg
fadd
ror
out
loop
and
push
mov
add
rcr
dec
xorl
das
lcall
jp
pop
xor
dec
pop
cld
lret
inc
cwtl
gs
or
shll
mov
in
daa
into
sub
sub
lea
int
fxtract
hlt
lret
shll
sub
mov
outsb
enter
call
mov
mov
pushf
inc
ja
je
mov
fimull
ficompl
mov
sarl
int
mov
add
inc
cmpl
inc
adc
out
shrl
pop
rol
stc
out
inc
lea
insl
dec
repz
leave
aas
in
xchg
pop
mov
nop
es
outsl
mull
js
xor
in
adcb
pushf
lret
push
sbb
cmp
pop
adc
cld
xor
mov
or
or
jo
mov
daa
aad
lcall
pop
scas
enter
xchg
lods
or
inc
pop
push
lds
cli
push
jecxz
jbe
enter
dec
mov
push
fnstenv
outsl
scas
movsb
jnp
pop
xchg
fstps
les
sbb
adc
mov
repz
cli
push
pop
hlt
sbb
xchg
into
out
fwait
pop
retw
mov
es
imull
dec
mov
insl
adc
imul
xabort
sub
pop
rcll
push
xchg
lret
and
push
movsb
mov
cmp
xchg
adc
addl
cltd
outsb
inc
pop
and
notb
mov
ss
mov
fidivl
loope
xchg
sti
xorb
lds
cld
sub
and
pop
fdivrs
ja
rcr
loope
sahf
push
fidivrl
cmp
test
pop
inc
out
xchg
and
push
dec
insl
stos
xorl
outsl
add
leave
push
inc
jo
pop
jmp
movsb
adc
icebp
cmpsl
cld
dec
xlat
adc
insb
imulb
jp
sub
add
movsl
test
ret
nop
pop
popf
xlat
jle
stc
jp
arpl
push
cmp
std
sub
outsb
aas
jle
and
inc
add
fistl
sub
mov
jne
loope
jmp
cmp
lahf
add
call
push
inc
mov
dec
outsb
and
fistpl
pushl
pushl
push
lea
jmp
dec
inc
call
sahf
js
jg
jmp
mov
sub
pop
enter
add
aaa
lock
xchg
in
pop
cmc
cmpsl
inc
arpl
insb
outsb
fbld
scas
pop
inc
jb
imul
push
xchg
negl
push
ljmp
sub
out
andl
add
into
xchg
mov
popa
inc
or
pushf
xor
bt
sub
clc
bt
cmc
movb
rol
mov
cmp
stc
clc
not
test
pushf
pusha
cmp
shr
pushf
lea
je
pusha
pusha
pushf
adc
pushl
pushf
lea
jmp
lea
ja
pusha
lea
jb
pusha
cmpb
jmp
test
cmp
call
push
push
push
mov
push
pushf
lea
jmp
pushf
movb
mov
jmp
lea
je
cmp
sub
cmp
cmp
pushf
call
sub
movw
clc
pushl
popl
push
bt
cmp
call
insl
xor
jmp
movl
jl
sub
aad
bswap
mov
bswap
mov
not
jmp
call
jns
xor
push
add
pushf
lret
test
movsb
repz
lret
pop
repz
nop
mov
icebp
clc
rclb
mov
sbb
dec
pusha
hlt
scas
out
out
adc
cmp
jg
outsl
iret
daa
cmp
push
insl
in
jnp
inc
lcall
cmp
xchg
lea
loope
mov
call
fsubrl
insb
inc
dec
jmp
pop
fisubs
push
dec
rcrl
adc
add
push
push
xor
cmp
push
sbb
add
or
inc
stos
lcall
std
in
mov
adc
xlat
or
negl
adc
jb
bound
cmp
cmovo
and
movsl
xchg
faddl
adc
les
add
int
xchg
or
fists
mov
jecxz
push
add
inc
gs
je
jb
jne
dec
outsb
outsw
inc
add
in
adc
mov
test
shll
xchg
jne
rol
cmp
into
popf
sub
insb
and
xchg
xchg
or
fisubl
adc
cmp
fisubl
push
mov
mov
add
cld
sbb
xchg
sub
mov
jle
fs
cli
jo
test
in
lret
mov
addr16
stos
xchg
sub
xchg
fistpll
cmpsl
pop
mov
scas
jbe
adc
xlat
dec
adc
jo
push
cmp
fdivr
ss
and
add
xchg
push
fs
xchg
fidivs
fmull
mov
fwait
xor
mov
cmp
int
add
jmp
jbe
mov
ret
mov
pop
inc
mov
test
xlat
negb
adc
push
out
sbb
outsb
mov
fmuls
je
lret
jne
fstp
lret
hlt
mov
sbb
and
push
data16
dec
rolb
push
push
orb
test
loopne
out
dec
sbb
call
pop
jnp
icebp
xor
dec
jle
arpl
or
mov
jo
add
mov
iret
arpl
inc
adc
jge
pushf
outsl
sub
push
sarb
fistpl
in
xchg
sub
pop
adc
mov
push
pop
loopne
clts
or
lcall
pop
je
or
push
mov
mov
cltd
insl
adc
xor
sahf
push
fistps
nop
bt
ror
pushl
dec
jmp
cmp
pusha
lea
ja
pusha
pusha
imul
lea
jp
cmc
clc
add
pusha
mov
pushf
pushf
lea
jmp
rcl
fistl
pop
xchg
fistps
subb
pop
sti
cmpsb
in
xor
lds
jmp
shld
mov
jnp
outsl
sub
fnstcw
sub
push
jae
sub
adc
sahf
push
fbstp
cmc
mov
mov
lret
ret
lret
jmp
or
pusha
pusha
pushf
push
lea
je
clc
bt
or
jmp
repnz
jmp
pushl
popl
call
pusha
dec
pushf
cmp
mov
xor
pushf
clc
call
stos
mov
insb
sub
sbb
mov
xor
sbb
xor
in
ret
mov
aad
cmp
jmp
xchg
cmp
mov
bound
jl
cmc
pushf
out
shrb
mov
loop
pop
dec
pop
faddl
sub
movsb
cmp
cltd
pop
ret
icebp
and
rorb
xor
xor
jecxz
xchg
jne
or
push
es
adc
fdivl
call
sbb
les
push
call
jp
pop
mov
data16
push
shrb
and
jae
jmp
dec
add
lds
insb
jmp
mov
mov
lcall
adc
hlt
sub
cwtl
mov
arpl
ds
lea
jno
pop
mov
dec
hlt
adc
ret
cmp
and
call
gs
cmpb
jecxz
popa
stc
leave
jnp
lret
aas
mov
cmp
sbb
sbb
mov
in
cmpl
in
jno
jne
pop
pop
adc
mov
notl
rcrb
pop
and
pop
icebp
ret
pop
inc
inc
das
dec
sahf
push
rorl
push
aas
hlt
pop
cmp
and
jae
insl
arpl
inc
cli
mov
ret
repz
sarl
mov
add
sahf
and
mov
aaa
and
test
mov
xchg
into
std
push
jns
fdiv
add
lret
mov
add
sbb
push
sbb
call
into
dec
cmp
imul
mov
push
pop
push
pop
out
and
and
outsb
dec
call
jae
adc
xchg
out
and
fldz
hlt
out
sahf
push
shrb
mov
movb
push
lea
jne
pusha
test
mov
jmp
pushf
push
pusha
lea
je
push
movb
pushf
adc
push
pusha
push
movb
lea
jmp
lea
jg
je
xor
rcl
shrd
add
jmp
pushf
call
inc
sub
xchg
sub
setg
neg
bts
mov
rcl
rcr
pushf
movb
mov
cmp
xchg
not
mov
clc
sub
push
rep
call
pop
xchg
jmp
add
bt
test
clc
cmc
movzwl
clc
shr
or
btc
mov
bt
add
pushf
mov
movl
clc
test
jmp
jmp
movsb
das
int3
mov
ds
push
mov
shrl
or
xchg
les
and
jge
fidivs
inc
pop
sbb
jg
jbe
dec
test
rorl
inc
pop
int
icebp
dec
mov
jno
xor
sarb
mov
or
cmc
je
mov
sahf
push
rcrl
call
pushf
inc
jmp
cmp
lods
lret
andl
scas
pop
popf
fidivrl
mov
and
add
sbb
stc
lock
lret
aaa
mov
fsubs
xor
jns
sbb
mov
fidivl
and
jne
push
dec
addr16
not
adcl
lahf
xchg
mov
mov
sbb
sbb
cmpsl
xor
xor
pop
cld
mov
aas
mov
inc
dec
pop
movsl
test
mov
lretw
loop
out
push
mov
aam
xchg
cwtl
pusha
mov
lea
jl
pusha
pusha
dec
cmp
call
pop
and
in
dec
cmp
rcr
sbb
clc
pop
jae
loope
out
dec
push
cmp
push
jg
adc
cmp
call
jne
xor
xor
jne
or
ss
jmp
ficoml
jo
testl
mov
add
push
aaa
repnz
push
aam
das
xchg
call
pushl
adc
movw
mov
lea
jae
pusha
pushl
mov
call
xchg
insl
mov
lds
and
sub
mov
xor
mov
lahf
ficoms
adc
ss
jecxz
lock
mov
adc
icebp
rcll
pop
cmp
je
mov
les
lret
fiadds
sbb
adc
cltd
nop
out
repnz
subb
pop
leave
pop
adc
and
in
cmp
push
lea
jae
pushf
lea
jmp
adc
lea
pusha
pushl
jno
pushf
pushl
ret
lea
jne
lahf
push
movb
cwtl
mov
pushf
pop
bswap
pusha
lea
pusha
movl
pushf
mov
mov
mov
pushl
pushl
ret
jmp
mov
not
pushf
movzbw
mov
pushf
pusha
pushf
pushl
ret
pushf
lea
je
lahf
shld
sar
sbb
sub
or
bts
mov
cwtl
push
btr
sub
mov
cmp
cmc
shr
dec
ror
or
mov
test
pusha
stc
cmc
or
call
test
or
pushf
push
lea
je
ror
add
bt
shr
rcl
sub
xadd
bt
sar
btc
shr
bt
sub
jmp
lea
jne
neg
xor
xor
mov
rol
pushf
add
adc
add
adc
rcl
mov
pusha
call
daa
ds
pop
xchg
scas
and
cwtl
push
jae
and
push
xchg
leave
loop
mov
icebp
push
repz
mov
add
jecxz
lds
and
adc
xor
cmpsb
lret
out
cmpsl
adc
enter
in
stos
test
mov
cmpsb
mov
mov
sub
lea
mov
jae
jmp
pusha
movb
pushl
not
not
pushf
stos
mov
mov
mov
lea
call
pusha
lea
jae
call
pusha
pushl
lea
call
pusha
pushf
pushl
mov
lea
jmp
mov
not
pushf
mov
movsbw
mov
pushl
mov
pushf
mov
lea
jmp
lea
setge
mov
push
mov
not
mov
call
dec
mov
fbstp
pop
mov
and
jg
in
fimull
imul
jge
inc
mov
adc
pop
pop
pop
and
dec
jae
push
inc
mov
lcall
in
lea
xlat
aas
jo
jmp
jecxz
xchg
test
push
in
xlat
inc
js
insb
jbe
pushf
or
jecxz
imul
std
add
pop
jnp
lret
mov
push
add
jmp
pop
fcmove
dec
loop
jbe
cld
movsb
stc
inc
mov
test
aas
mov
stos
inc
xchg
pop
xchg
enter
orb
rolb
pop
and
mov
pop
int
es
push
mov
sub
xchg
jno
shl
mov
lcall
mov
mov
pop
xchg
sahf
clc
mov
xchg
push
pop
sahf
push
enter
out
xchg
cltd
push
aas
mov
pop
test
push
rorl
pop
jp
daa
fwait
xor
push
movsb
or
mov
dec
mov
hlt
scas
fstpt
inc
pop
cmp
orb
xorl
repz
inc
les
out
cmpsb
mov
xchg
cli
dec
ljmp
push
cwtl
or
pop
add
fisubl
shlb
add
push
leave
inc
fisubs
mov
ret
stc
cmc
call
fwait
fidivl
sub
popf
mov
mov
ret
mov
icebp
sub
pop
cwtl
repnz
lods
stos
stc
stos
or
loope
xor
ja
lahf
pop
or
ja
aaa
jmp
inc
mov
sub
das
scas
ja
jae
nop
pop
adc
in
inc
jge
icebp
adc
adc
jmp
fldt
mov
jle
pop
ror
sahf
add
out
jae
movsb
shlb
jmp
jge
and
add
push
imul
jnp
bound
rcl
pop
jle
lock
pop
jecxz
and
dec
fs
add
mov
add
xor
mov
add
fwait
stos
xor
sbb
sbb
mov
mov
setge
popa
ss
orb
push
xchg
cmc
cwtl
in
cli
mov
xlat
or
sbb
mov
sbb
aam
popa
add
pop
addr16
push
rolb
and
pusha
sub
inc
shlb
test
add
std
xor
test
mov
cld
or
call
xor
mov
adc
outsl
pop
rcl
dec
out
ret
add
shrl
divb
mov
cmc
repnz
sub
jne
jbe
pop
or
mov
pop
outsl
shlb
push
popa
jno
into
ljmp
pushf
pushf
lea
jmp
fwait
lds
add
add
add
jo
add
add
add
add
add
add
lock
add
add
add
push
sub
add
push
add
cmpsl
push
add
loop
add
int
add
scas
xor
mov
xchg
lea
jae
pop
pusha
setg
movzbw
mov
mov
pushf
jmp
js
mov
mov
jnp
push
jb
mov
daa
fmull
and
mov
test
sub
dec
and
pop
mulb
add
repz
xchg
xchg
mov
je
repnz
inc
xorl
insl
andb
mov
decb
mov
cs
les
out
or
mov
iret
adc
pushf
adc
push
lret
sar
push
mov
mov
jl
movsl
pusha
mov
movl
pushf
push
lea
jmp
pusha
test
push
push
movb
pushf
lea
je
movzbl
rol
seta
ror
mov
xor
add
neg
bsr
sbb
mov
pushf
pusha
test
test
push
call
pushf
pushl
movb
lea
jne
mov
pusha
pushf
pusha
pushfw
popw
shl
sub
xor
mov
push
xor
clc
test
sub
push
stc
stc
call
imul
pusha
cmc
test
add
movb
lea
jmp
jmp
inc
lret
sub
movsb
mov
adc
adc
js
ss
xor
mov
ficoml
imul
pop
lea
ret
cmp
mov
jne
push
repnz
ja
loop
ret
out
stc
pop
push
fisubrl
pop
test
jb
push
loopne
into
lcall
pop
cli
sbb
in
jbe
lods
dec
ficoml
call
lea
push
int3
loop
sahf
lea
ja
clc
call
pusha
bt
xor
pusha
call
int
push
stos
fs
dec
xchg
and
loop
das
mov
inc
xor
dec
sub
js
fbstp
es
pop
or
outsl
cmp
add
or
cli
xchg
cmpl
in
enter
negl
sub
mov
pushl
jecxz
push
ret
jg
xrelease
es
ss
lret
sarl
xor
xlat
sahf
push
int
xor
call
movb
bt
cmp
pushl
jmp
in
push
push
mov
testb
dec
mov
ss
add
test
out
jns
sub
pop
add
pop
out
jmp
in
jg
push
or
ret
add
add
sbb
inc
or
int
mov
push
xor
cs
insb
add
movb
pushw
popfw
jmp
mov
cmp
push
add
sub
shl
and
test
mov
mov
ljmp
divb
test
popf
add
cmp
lahf
xor
xor
push
xchg
rclb
pop
mov
fs
and
gs
loop
push
inc
mov
and
cmp
mov
hlt
cli
ljmp
aaa
xchg
xchg
sub
sbb
cmp
push
into
pop
push
test
inc
and
cwtl
ss
add
inc
and
adc
add
xor
je
cmp
inc
add
lds
add
lea
jle
push
lea
jne
mov
pusha
call
jmp
pusha
movw
pushl
and
clc
bt
cmp
add
lea
clc
call
test
clc
shrd
mov
clc
clc
cmc
bt
and
test
cmp
clc
add
push
pusha
movb
mov
lea
jmp
call
xor
or
or
dec
sub
mov
push
inc
bound
pop
adc
pop
repz
jmp
push
pop
fmulp
adc
lahf
negb
or
mov
fisttps
sub
lock
scas
les
popf
dec
into
dec
push
mov
icebp
insl
and
aad
lock
and
outsb
subb
push
jg
movsl
mov
dec
xor
aad
pop
int3
cmpsb
sbb
call
popa
ds
mov
shll
daa
loop
cli
icebp
push
sub
fisubrl
push
out
xchg
or
and
pop
das
outsb
and
pop
sub
mov
rcl
adc
gs
mov
movl
repz
call
leave
pushf
pushf
pushf
lea
jmp
push
mov
push
dec
movsb
insl
gs
pusha
nop
push
pop
lret
cwtl
lock
fsubrs
loopne
push
cmc
rorb
dec
repnz
adc
adc
sub
ljmp
nop
lods
cmp
adc
test
testl
lods
add
mov
and
mov
adcl
addr16
cwtl
xor
mov
mov
aam
sub
nop
ficomps
hlt
jae
fsts
xchg
sbbb
xor
pop
adc
cltd
mov
das
mov
and
into
or
push
jmp
test
xor
test
jg
rcrb
lret
into
ja
cli
fdivrl
xor
fisubrl
arpl
jmp
scas
into
xor
sbb
das
mov
and
decl
or
inc
bound
pop
jge
adcl
scas
mov
loope
dec
loopne
aaa
out
int
jp
clc
mov
adc
xchg
cwtl
xor
clc
in
mov
outsb
out
insl
subl
pop
and
inc
push
jp
fldcw
sahf
push
shll
add
call
mov
jmp
pusha
movb
push
lea
call
call
lea
jne
jmp
je
fists
sub
iret
hlt
adc
scas
lahf
iret
popf
or
push
popf
mov
pop
mov
cmpsl
sbb
mov
sub
ja
xor
adc
sbbl
mov
dec
test
pop
fadds
cmp
es
push
xchg
jbe
and
iret
into
cmpl
cli
test
fildl
cmp
mov
push
shrl
and
jae
cmc
test
cmp
add
pushf
mov
pushl
pusha
lea
jmp
pushl
jmp
lea
jbe
cmc
sub
lea
xor
dec
mov
sbb
add
mov
bswap
add
mov
xchg
not
rcr
shr
pusha
xadd
mov
bsf
bswap
bt
sbb
add
push
pusha
mov
mov
lea
pushf
call
pushf
jmp
call
sub
pusha
cmp
jmp
movl
movl
pushf
pusha
movl
pushf
lea
jmp
cwtl
lea
not
cwtl
not
bswap
mov
jmp
add
jp
js
iret
inc
cltd
dec
cmp
inc
mov
mov
xchg
paddq
inc
mov
jge
mov
ljmp
xchg
jns
cmp
popa
sub
scas
jbe
es
hlt
fsubl
add
int3
pop
cmp
jecxz
enter
pop
dec
in
sahf
push
ret
pop
and
clc
test
push
cmp
cmpb
pusha
jmp
push
lret
pop
inc
fdivr
sti
mov
or
imul
adc
mov
hlt
and
jg
pop
movsb
cmp
inc
xorl
push
lods
cmp
add
loopne
cltd
cli
or
and
cmp
xor
and
fld
pop
ljmp
pop
push
pop
cmp
sub
push
dec
mov
dec
aam
js
sarb
sub
stos
stos
cld
mov
fdiv
aad
push
xlat
push
pop
std
add
les
pushf
pop
mov
adcl
mov
xchg
js
fdivr
pop
push
mov
into
fadd
aas
lcall
leave
sti
add
popa
cmp
mov
mov
dec
pop
add
cmp
cmp
clc
push
sbb
mov
iret
push
and
lahf
jne
xchg
insl
imul
push
push
scas
sahf
out
and
stc
xchg
pop
and
rolb
pop
scas
mov
dec
push
int
sbb
jne
sub
les
fdivs
stc
mov
or
jo
clc
mov
xor
rolb
sbb
sahf
push
les
push
call
jmp
pushf
lea
jne
pushf
call
xor
pushf
pushl
jmp
bt
or
pusha
lea
je
aad
clc
neg
xor
test
xor
stc
bsf
mov
bsr
stc
neg
xadd
mov
dec
shr
movzbl
mov
jmp
pushf
mov
not
jmp
movsl
mov
mov
mov
ret
mov
inc
js
ljmp
test
mov
cs
jge
xorb
shll
jne
jmp
dec
lea
outsl
mov
pusha
pop
in
cs
sahf
in
es
xor
stos
xchg
psadbw
lock
mov
insb
pop
dec
sbb
daa
fisttpll
add
pop
sub
daa
popa
push
or
xlat
cmp
mov
bound
jl
movsb
push
in
cs
lret
and
push
lds
and
mov
lea
jmp
clc
rcr
stc
push
btc
aam
mov
or
sub
sar
aad
rcr
push
not
push
call
cmp
call
cltd
adc
inc
dec
xchg
push
or
push
lret
out
test
clc
jge
dec
notl
pop
mov
sbb
and
inc
inc
xchg
andl
sbb
jne
das
pop
pop
mov
fwait
pop
cwtl
mov
shll
cld
jns
ljmp
mulb
cmp
pushf
inc
loopne
loopne
stos
add
push
dec
aaa
sti
adc
pop
adc
xchg
pushl
pusha
lea
call
call
push
push
sub
mov
jg
int
imul
add
pop
push
and
and
insl
mov
or
and
test
mov
xor
pop
loope
cmp
daa
xchg
dec
cmp
inc
rcr
rclb
pop
stc
pop
xor
insl
sub
roll
mov
push
push
or
cmp
push
xchg
xchg
dec
call
lea
jne
adc
pusha
shl
mov
pushf
call
lret
lods
sub
and
adcb
and
mov
push
mov
or
loope
cs
ret
fdivrp
sbb
arpl
aam
mov
test
aaa
inc
or
push
jmp
lret
out
mov
sbb
cwtl
xchg
push
and
xlat
dec
fcmovu
mov
mov
call
mov
cmpsl
xchg
fsubl
sar
scas
sbb
push
jg
movsbl
inc
rclb
repnz
movb
inc
imul
cmpl
jle
roll
lret
or
pop
sbb
sbb
and
jmp
dec
pop
or
popf
outsb
cmc
mov
and
push
js
xor
push
dec
popa
push
cld
and
loopne
sbb
cmp
mov
xchg
jge
popa
pop
push
mov
fsubrs
arpl
loop
das
push
inc
notl
xchg
and
cld
and
inc
imul
test
cmp
adc
ss
and
push
mov
xchg
out
pop
loope
in
sbb
lret
dec
inc
cmpl
movsb
sti
fstpl
and
pop
xchg
clc
xor
mov
dec
pop
arpl
xchg
lods
add
push
xor
shr
jge
sub
js
xchg
ret
mov
and
xor
xchg
outsb
adc
rorl
arpl
pop
gs
outsb
test
mov
xchg
cli
imul
mov
mov
or
rcll
sahf
push
clc
popa
push
lock
mov
insl
cld
mov
or
push
aam
mov
fisubs
fwait
rep
cwtl
push
pop
stc
mov
call
fs
fcmovnb
test
sahf
mov
dec
test
push
xchg
lret
mov
and
push
dec
dec
das
outsl
shlb
test
enter
mov
inc
clc
leave
or
stos
pop
push
cmp
mov
cmp
push
cmp
jb
mov
sub
movl
fs
push
inc
pusha
pop
cmp
and
lret
mov
sahf
push
stc
push
push
popf
clc
cmp
push
stc
dec
rcr
neg
mov
push
cmc
sub
jmp
mov
or
push
mov
test
xchg
aad
or
scas
dec
adc
pusha
cli
imul
pop
jb
cmpsl
cs
jg
mov
movsl
aad
or
outsl
insl
jecxz
mov
jbe
icebp
xchg
cmp
mov
fwait
mov
and
cmp
js
push
add
dec
sbb
clc
jecxz
add
mov
cmpsb
pop
xor
or
imul
loope
popa
cmc
and
lahf
add
adcl
mov
inc
mov
push
stc
or
and
fsts
push
mov
mul
mov
add
shll
stc
sbb
les
ret
mov
aam
pusha
aaa
jge
imul
mov
testl
daa
iret
xchg
or
cld
add
sahf
push
cli
sahf
xchg
pushl
lea
je
call
push
cmp
movw
pushf
pushf
lea
jb
push
jmp
push
lock
std
std
xchg
pusha
ret
jne
cli
into
into
das
or
mov
pop
push
ss
jecxz
pop
std
jge
fxam
popa
pop
dec
dec
xchg
and
aam
pop
ret
add
loopne
daa
adc
test
push
sbb
and
sub
mov
inc
push
xchg
in
xchg
push
push
mov
inc
push
test
dec
mov
jmp
sbb
and
lea
jb
push
mov
mov
pushl
ret
cmp
rcl
push
call
sar
lea
stc
mov
bt
push
bsf
das
aas
mov
clc
cmc
call
fdivr
push
insb
ret
push
xlat
cld
jp
call
xchg
sahf
jg
insb
push
cmp
les
dec
xor
cwtl
adc
xorl
mov
mov
repnz
cmpsl
pop
and
sahf
test
mov
lds
lcall
int3
add
sub
ss
iret
adc
push
rcrl
xor
in
gs
xchg
sbb
cld
test
xchg
sbb
xor
sub
xchg
inc
les
lods
and
rcrb
ret
inc
sbb
scas
xchg
adc
adc
rorb
fidivrs
fwait
dec
adc
pop
xor
pop
cwtl
out
pop
sub
movsb
inc
lods
rolb
and
push
negb
lds
cwtl
mov
int3
icebp
insb
sbb
test
outsb
les
adc
sub
pop
and
rcrl
test
jg
enter
gs
jns
xchg
adc
rorl
cld
mov
jg
gs
jg
xchg
cld
or
xchg
and
pop
ja
loopne
test
mov
mov
sub
fs
repnz
sbb
pop
in
insl
mov
cmp
dec
addr16
leave
jbe
test
pop
mov
push
loop
outsl
imul
aas
pop
lret
and
repnz
sub
addr16
or
cmp
pop
int3
or
cmp
mov
repz
aas
or
fwait
sbb
xchg
jne
mov
push
inc
int
mov
jecxz
in
push
lcall
pop
mov
dec
cmc
pop
ret
mov
xchg
pop
push
sbb
shrb
add
cmp
push
mov
jns
cmpsb
jae
lock
ds
pop
lea
cmpl
mov
into
dec
inc
movsb
xor
mov
mov
jl
inc
pop
int
inc
fidivl
push
push
clc
imul
adc
loopne
and
mov
test
ret
lret
int
mov
pushf
pushf
mov
pop
aas
mov
int
enter
push
push
pop
jp
xchg
push
mov
arpl
pop
in
push
or
mov
outsb
push
out
test
sub
stos
xchg
fistpll
adc
lock
ss
rorb
or
jge
out
xchg
stc
loopne
jo
sahf
push
std
jmp
mov
mov
nop
mov
add
call
mov
fnstenv
or
cs
clc
sub
nop
jecxz
test
iret
mov
lret
mov
push
test
mov
sub
fldenv
pop
dec
inc
and
and
cmpsl
jae
mov
sarl
dec
xor
xchg
ja
push
std
shrb
dec
inc
dec
xor
cs
insb
add
mov
notb
out
iret
xor
shrb
dec
cli
dec
out
and
cmp
jmp
jae
in
adc
cld
repnz
ljmp
sbb
cltd
xchg
dec
dec
test
imul
test
mov
les
xlat
into
mov
test
mov
loopne
fldl
lcall
sbb
mov
fldenv
fs
jne
jmp
clc
clc
mov
btc
pushf
sub
movzbw
lea
call
push
call
pop
movsbw
pushf
mov
call
mov
jmp
fwait
push
mov
mov
xor
xchg
scas
fsubrl
or
insl
mov
test
dec
or
insb
sbb
jecxz
sbb
fistpll
push
xor
mov
aad
or
mov
out
sahf
mov
adc
jns
movsb
inc
or
and
mov
jmp
jae
inc
xor
lahf
pusha
pop
in
jge
je
dec
xor
inc
mov
fwait
xchg
lds
push
cmp
push
aad
adc
test
test
cmpb
addr16
mov
mov
incl
xor
dec
and
ljmp
fiaddl
fistpll
sub
push
pusha
mulb
ss
xor
jmp
sbb
call
dec
addb
cmp
subb
outsb
in
jle
gs
scas
test
xor
sahf
push
mov
les
xchg
pushl
cld
push
push
cmp
cmp
jle
jl
sahf
mov
decl
xor
ret
mov
adc
add
inc
mov
pop
ss
addr16
push
adcl
scas
dec
fnstenv
add
lock
jecxz
or
sbb
cmc
xchg
shr
add
and
mov
sub
jmp
mov
dec
stc
bt
mov
movb
clc
add
cmp
test
jmp
and
mov
and
lock
out
fwait
pop
dec
test
push
xchg
std
dec
dec
pop
xchg
jmp
sti
mov
pop
add
arpl
xchg
pop
pop
ljmp
xchg
sti
push
lret
leave
scas
or
rorl
nop
xchg
jae
dec
rcr
inc
jno
imul
cmpsl
lret
cmp
test
or
xchg
and
fstps
fiadds
rorl
mov
jg
cmp
and
scas
or
das
rol
mov
pop
push
int3
xor
outsb
jmp
dec
jp
push
lret
pop
xchg
lock
jnp
and
jmp
mov
leave
pop
xor
das
roll
mov
and
aad
clc
test
movsb
repnz
outsl
fwait
ret
mov
movsb
clc
inc
or
dec
xchg
icebp
xchg
xor
push
push
test
xor
jnp
int
cmp
mov
cmpsl
pop
scas
daa
jle
lret
mov
fimuls
aas
or
outsl
cli
jae
and
in
cmpsl
mov
push
push
cs
inc
sbb
iret
mov
push
out
jo
push
and
cmp
sbb
sbb
jl
mov
ds
sub
or
pusha
ljmp
mov
loop
cmp
and
cwtl
and
push
aas
jg
ja
fsubrs
sbb
out
jp
and
jg
cwtl
popf
lahf
sub
mov
cmp
pushf
mov
lcall
push
xchg
lahf
push
cmp
dec
outsl
pop
ja
scas
icebp
dec
xchg
mov
lahf
sub
dec
aaa
jecxz
add
imul
std
push
or
iret
lahf
pop
cld
jg
das
mov
mov
sub
adc
dec
mov
dec
and
mov
mov
movsb
jl
pop
out
mov
lods
cmp
xchg
sub
fcomps
mov
xor
out
mov
sbbb
mov
dec
add
mov
xor
mov
pop
cmp
fisubs
jl
sub
pop
repnz
inc
clc
pop
sub
mov
pop
js
gs
jle
dec
cmp
nop
dec
cmpsl
dec
mov
jl
mov
mov
adc
inc
lcall
daa
popf
movsl
imul
jg
ja
sub
pop
push
mov
dec
pop
pop
cmp
mov
xchg
xor
mov
jns
outsl
scas
sti
loop
xchg
scas
adc
cmp
movsl
cmp
outsl
cmp
xor
jmp
adc
rolb
cltd
int
push
jp
pusha
stos
cmp
imul
dec
addr16
movsl
pop
push
and
movsl
jo
xchg
das
inc
cwtl
outsl
cltd
mov
add
cmp
xor
pop
jge
push
push
fmulp
out
pop
or
loopne
xor
clc
pop
mov
and
sarb
adc
lahf
add
clc
test
das
xlat
pop
mov
orl
and
sbb
hlt
dec
jl
xchg
xor
rcl
movd
scas
popf
mov
leave
popa
daa
fdivrs
out
pop
out
sub
dec
aaa
cmp
or
pop
jl
sbb
mov
adc
pop
outsl
fldenv
sbb
push
xor
clc
das
ds
push
and
cmp
cmc
jl
xor
decb
repnz
xor
mov
pop
out
das
push
push
sbb
cltd
mov
jmp
icebp
not
in
push
mov
fcompl
sbb
fsubrs
xchg
pop
mov
cmp
mov
sbb
xchg
loope
mov
pop
js
jp
push
cmpsl
arpl
and
pop
sub
sbb
mov
push
addr16
mov
pop
fistps
xchg
gs
scas
cmp
fsubs
mov
pop
ja
dec
sub
xorl
push
enter
aaa
repz
fsubrl
cmp
lahf
sti
mov
pop
jo
stos
jmp
xchg
push
imul
imul
mov
adc
jae
cmp
cwtl
out
cmp
stc
jle
jl
outsl
pop
mov
loope
enter
adc
pop
sub
add
das
and
inc
mov
pop
sub
dec
jne
inc
incl
xor
cmp
int
rorl
cltd
pop
cld
fldenv
mov
sub
mov
addr16
into
iret
cmpl
pop
sti
and
dec
adc
das
adc
inc
loope
jecxz
xchg
lahf
mov
aas
fistl
sbb
inc
cmp
mov
pop
ljmp
test
pop
mov
and
dec
fisubs
jne
js
sbb
pushf
sbbb
mov
data16
adc
sarb
mov
cmpsl
scas
cmp
xchg
mov
cmp
lea
dec
xchg
dec
inc
rclb
cs
fsts
int3
comiss
push
xchg
test
inc
aas
add
and
ljmp
lret
cmp
dec
mov
dec
mov
outsl
outsl
pop
sub
out
and
int
and
pop
sarl
adc
push
cmp
cwtl
xchg
std
sbb
out
pop
jns
cmp
push
push
ret
fs
xor
push
pop
mov
push
pusha
cltd
aas
ret
jmp
arpl
cmp
mov
cmp
cmp
js
cmp
mov
pop
pop
push
clc
das
lods
cmp
cltd
movl
mov
cmpsl
js
cmp
popa
jg
pusha
mov
mov
and
daa
cmp
cmp
cmp
pop
daa
cmp
inc
repz
scas
cmp
push
das
mov
fs
inc
and
scas
daa
inc
pop
cmp
xchg
adc
gs
daa
addr16
mov
xchg
cmp
mov
adc
scas
and
xlat
sub
mov
mov
pop
mov
cltd
pusha
daa
sub
movsl
addr16
cltd
sub
inc
cmp
cmpsb
popa
mov
sub
daa
sub
and
mov
inc
push
pop
daa
mov
sub
push
jecxz
cmp
daa
jnp
and
sarb
mov
push
leave
push
pusha
daa
inc
fildl
push
sub
loope
daa
mov
fidivs
sub
lods
shrb
test
mov
mov
and
stos
loope
inc
stos
pop
cmpsb
dec
daa
daa
pop
scas
jns
lods
cmpsb
pop
cmp
sub
lret
mov
add
cmp
lods
andl
cmp
imul
push
dec
pop
inc
pop
stos
sahf
add
lock
mov
push
das
nop
ficomps
and
test
push
sub
imul
jecxz
das
scas
mov
lret
sub
xlat
repz
scas
inc
sbb
add
cmpsl
stos
repnz
dec
sub
pop
sub
lods
stc
and
add
in
or
in
pop
push
pop
pop
popa
jae
inc
mov
mov
jmp
jge
shl
sbb
mov
loopne
xor
lahf
and
enter
test
jmp
jno
xchg
stos
inc
jns
pop
scas
xor
in
das
sbb
push
mov
outsl
sub
ror
lods
bound
pop
push
push
sub
fwait
push
sub
subb
jl
cli
inc
mov
cmc
xlat
movsl
fbld
test
cmpsb
das
scas
pop
mov
out
mov
xchg
ljmp
push
adc
stos
sbb
xor
jnp
inc
popa
cmpsb
cmpsl
mov
orl
push
popf
daa
pop
aaa
lret
add
stos
sbb
mov
lea
adc
xor
subb
push
loope
clc
ja
xorl
pop
cmp
xchg
pop
dec
pop
adc
mov
pop
push
or
fucomi
daa
mov
push
fdivs
adc
cmc
fcomps
and
dec
pop
pop
jo
jecxz
pop
repz
sub
mov
out
cld
add
pop
or
cmp
repz
xor
scas
push
dec
fcoml
cmp
inc
mov
cwtl
js
dec
xor
mov
das
mov
popf
mov
pop
arpl
inc
jge
mov
outsb
das
adc
adc
xchg
ficoms
cmp
jno
push
imul
cld
nop
jbe
inc
adc
bound
pushf
cmpsb
mov
das
xchg
rcl
dec
adc
mov
pop
ret
daa
idivl
cwtl
pop
jl
cltd
cmpsl
iret
in
nop
mov
leave
xchg
lods
imul
add
lods
std
dec
jns
sahf
mov
xchg
jle
es
jnp
das
loop
std
dec
popf
mov
cli
xor
in
ss
rcl
imul
cltd
mov
leave
cmpsb
or
in
mov
push
fsts
lods
lock
dec
and
pop
int3
mov
stos
sub
test
enter
cmp
xchg
cmp
and
pop
add
push
js
xchg
cmp
push
mov
dec
mov
dec
cmpsl
jecxz
pushf
cmpsb
js
pop
nop
lcall
jg
mov
push
loopne
sbb
aas
pushf
xchg
stos
jl
and
push
fildll
ficomps
pop
cmpsl
jp
xchg
jle
daa
mov
cmp
aam
pop
or
rcrl
mov
icebp
cmp
das
dec
repz
pop
ds
jo
and
fdivrs
ror
loopne
mov
mov
fstp
inc
push
jle
sti
es
inc
sub
arpl
lahf
dec
stos
fiadds
xchg
jl
cmp
sahf
and
sbb
pop
nop
rcl
sahf
xlat
lcall
stos
adc
cmp
jl
mov
mov
stos
mov
pop
sub
dec
filds
push
xor
sub
dec
xchg
push
lods
jmp
sbb
subl
sbb
inc
imulb
sub
pop
notrack
pop
and
shrb
lcall
popf
stos
notb
repz
js
mov
jo
and
xor
lret
fadds
fisttpll
jb
mov
push
ja
push
xchg
dec
jle
jo
sub
pop
dec
fcomip
in
sti
cmp
or
sbb
dec
push
cmp
jl
out
pop
inc
aas
adc
cmpsb
ret
fs
fstpl
sbb
and
movsb
sub
call
pop
dec
dec
jecxz
mov
xchg
cmp
pop
and
and
test
dec
mov
aad
ja
stos
push
jg
std
movsl
cmpsl
adc
das
or
xor
pop
mov
sarb
push
stos
scas
sbb
mov
leave
lcall
jg
jge
pop
adc
jne
bound
and
or
mov
std
outsb
sbb
lods
mov
pop
stos
shl
stos
stos
loope
adc
jp
sbb
test
icebp
sub
imulb
xchg
push
dec
or
sahf
and
xchg
sub
mov
jnp
xor
push
shl
icebp
sti
movsl
push
and
test
gs
inc
int
sub
pop
xor
cmp
jecxz
push
cmp
int3
rolb
xchg
test
dec
sub
ds
dec
popa
inc
nop
insl
pop
gs
int3
in
lretw
int3
sarb
or
jmp
jo
jns
pop
sbb
push
lds
lods
cmp
mov
jge
or
adc
push
imul
test
int3
das
cmp
rcrb
cmp
shll
sub
xor
mov
jle
rcll
xchg
sub
and
pushf
pop
fistpl
pop
mov
sub
shrl
in
pop
sti
sub
mov
lods
int3
loope
pop
jnp
cmp
inc
cmp
dec
call
lret
iret
jg
sbb
mov
xchg
push
inc
sub
fstps
jl
lods
mov
aam
jns
hlt
rclb
divb
jg
push
dec
xchg
jl
subb
sub
add
pop
push
xlat
or
sahf
cmp
sahf
inc
insb
and
imul
fnstsw
and
mov
dec
sub
mov
and
mov
jecxz
mov
push
mov
loopne
add
push
pop
sbb
xchg
sarb
xor
push
das
aad
js
inc
cltd
push
pop
and
dec
cmp
sti
sbb
fildl
and
sbb
sub
and
push
cmp
sub
popf
sbb
sti
mov
inc
dec
jg
fcoms
pop
dec
mov
dec
xchg
pop
insb
jmp
lret
pop
mov
pop
pop
mov
mov
inc
fs
dec
pusha
lods
cmp
xchg
outsl
adcb
inc
xor
push
shlb
sarl
adc
or
jae
std
movsb
cli
jg
sub
lret
mov
lahf
gs
int
shl
in
jp
popa
xchg
inc
inc
pop
xor
pop
sub
sbb
pop
mov
mov
sbb
push
mov
fdivs
pop
dec
adc
cmp
ss
icebp
pop
pop
ucomiss
arpl
cmpsb
add
add
inc
pop
xchg
cmp
xchg
jbe
mov
mov
fistpll
adc
rcrl
push
popa
mov
mov
cmpsl
je
xchg
xor
mov
dec
and
lahf
idivl
sub
and
lret
dec
mov
push
int
shll
adc
push
pop
push
xlat
dec
pop
pop
inc
outsl
jl
mov
or
dec
mov
sub
stos
fs
cmp
jle
inc
pop
dec
scas
mov
pop
pop
ja
jmp
mov
cmp
xor
push
mov
sub
mov
xchg
sbb
pop
xchg
inc
aam
in
add
mov
les
pop
sub
cmpsl
adc
jns
push
cmc
push
dec
lods
in
cmp
js
sbb
mov
addl
xacquire
lret
mov
xchg
movsb
and
jno
rcrl
std
dec
in
push
shlb
sub
or
inc
sub
cmovae
cmp
push
mov
jno
pop
pop
fmul
das
sarl
jb
sub
enter
mov
lcall
xchg
movsb
leave
popa
xchg
cs
js
lahf
add
fcomi
inc
mov
or
xchg
push
std
jnp,pt
mov
mov
push
aad
xlat
adc
fnstsw
mov
sub
fsubr
push
push
and
jl
push
dec
mov
inc
andl
popa
aam
lret
or
in
mov
and
mov
repz
xchg
cmp
push
stos
mov
fisubrs
add
in
pushf
lahf
iret
jno
dec
in
jge
fcoml
data16
pop
outsl
int3
and
enter
push
push
outsb
sub
mov
jg
and
aaa
aas
es
rcrb
test
and
mov
jns
cmpl
jae
jmp
sub
clc
ret
xchg
push
mov
out
std
and
cwtl
into
jmp
ljmp
and
loopne
inc
pop
add
mov
out
lds
pushf
jmp
jne
and
or
inc
mov
imul
mov
jl
xlat
dec
shl
pop
gs
dec
adc
icebp
cmp
jp
pop
and
jl
cld
rorl
into
pushf
push
sbb
adc
push
push
arpl
inc
pop
mov
jns
push
jl
cmp
rdmsr
xchg
push
sbb
xchg
lock
push
push
jmp
jle
adc
mov
pop
dec
pop
adc
sub
gs
in
scas
xchg
pop
jb
jns
ja
pop
dec
movsl
loop
aas
adc
push
xor
pop
insb
sti
lcall
fwait
mov
into
hlt
adc
lret
push
es
pop
ja
mov
sbb
js
mov
test
dec
fadd
out
jle
and
enter
mov
movsl
in
ret
push
in
pop
xchg
pop
push
std
mov
out
mov
adc
mov
jge
repz
add
repnz
mov
ds
pop
aas
sub
lcall
cli
loopne
pop
xchg
xchg
sub
pushf
addb
rcr
es
aaa
or
stos
push
repnz
dec
xlat
jo
or
pushf
das
sbb
out
int3
jge
loopne
mov
mov
mov
xchg
xor
jle
inc
push
adc
pop
out
adc
cmp
dec
out
outsl
sar
jl
dec
aas
dec
push
push
lret
leave
push
stos
sti
dec
xchg
pop
push
push
pop
dec
and
push
stos
inc
fildl
rorb
jge
aad
sbb
pop
shr
inc
xchg
or
pop
fwait
pop
jl
inc
iret
jecxz
nop
push
das
jg
cmp
mov
jns
iret
cmp
inc
mov
sub
icebp
or
jmp
mov
subb
lret
and
test
lahf
dec
xor
jl
sub
dec
fsts
rcrl
movsb
mov
jl
stos
pushf
jg
mov
push
sub
and
jge
push
ja
imul
xor
adc
je
and
fcompl
push
push
add
sub
pop
shll
test
pop
sub
or
or
fcomp
lds
pop
mov
lds
sub
mov
mov
mov
and
dec
outsl
loope
jp
jmp
aaa
jle
mov
mov
es
mov
mov
popa
fistps
gs
das
jge
hlt
mov
jo
dec
push
jb
lcall
mov
xchg
jo
jecxz
xor
cmp
jno
lea
popf
sti
bound
pop
cmpsl
xchg
jp
sub
addr16
test
addr16
neg
test
jle
lds
scas
cmp
fcomip
or
inc
insb
inc
xor
jge
xor
fdiv
inc
sub
test
dec
rolb
dec
aaa
cmp
jecxz
lods
movsb
mov
mov
ss
gs
sub
mov
add
leave
jnp,pn
jmp
sbb
outsl
lahf
fidivl
fbld
mov
insl
je
cmc
jnp
pusha
idivl
clc
fisubs
iret
sbb
jl
xor
cwtl
test
mov
loop
in
bound
mov
pop
sbb
pop
sub
sub
aam
shll
and
and
pop
sub
pop
pop
clc
dec
pop
mov
xchg
mov
inc
pop
mov
rcrl
nopl
cmpsb
lret
mov
mov
xlat
lret
adc
shlb
dec
dec
inc
nop
jnp
pop
jmp
ucomiss
pop
mov
mov
push
adc
pushf
pop
addr16
pusha
stc
sub
mov
mov
popf
fistps
sbb
ja
addr16
push
test
je
mov
mov
daa
cmp
inc
sub
cmpb
jge
stos
push
test
mov
pop
fcom
or
push
ja
popf
cwtl
repz
and
out
jl
mov
stos
xchg
jp
lahf
dec
cwtl
pushf
xlat
push
sub
popa
sbbl
fbstp
xlat
fwait
icebp
sub
cwtl
mov
dec
mov
ret
sbb
or
ficoms
jno
pop
adc
and
test
or
push
pop
outsb
testl
push
and
stos
xchg
ljmp
xchg
push
and
gs
push
or
mov
insl
mov
in
hlt
sub
dec
sub
push
cmp
movsb
mov
or
push
push
jne
inc
rcrb
add
iret
outsb
cmp
stos
jno
dec
sub
loop
jns
inc
adc
jg
xor
cmp
stos
mov
cld
sbb
mov
sbb
loopne
cmp
dec
xchg
jl
dec
stos
or
push
sbb
mov
xchg
pop
test
mov
lret
jg
pop
rorl
cmp
dec
cmp
ja
dec
mov
and
ficomps
imul
sub
sub
stc
xor
xor
test
data16
mov
jnp
mov
ret
pop
pop
xchg
inc
daa
jbe
cmp
mov
cmp
sub
lret
ja
shlb
and
cmp
push
and
fcomps
int3
in
add
sub
push
in
push
add
mov
and
pop
jg
sub
fisubrs
or
push
cmp
test
xchg
cmp
push
sbb
and
data16
rclb
mov
sbb
in
cld
pushf
jns
jge
inc
push
in
pop
and
outsl
mov
xcrypt-ecb
inc
pop
mov
pop
insl
jle
aaa
and
sub
xchg
jnp
inc
iret
pop
or
fwait
sub
in
mov
push
test
int3
popf
push
jl
push
js
push
out
aaa
cli
inc
incb
pop
mov
inc
push
fnstenv
pop
xor
cmpsl
jge
push
std
pop
fdivrl
cltd
cmpsl
adc
pop
sar
jne
cltd
add
filds
add
imul
pop
cltd
inc
lock
mov
adc
inc
das
movsl
cmp
and
add
aad
daa
push
sub
cmc
jns
jne
mov
dec
jb
mov
mov
gs
xchg
or
push
xchg
xchg
adc
popa
cltd
xchg
jg
sbb
xor
and
pop
add
lds
xchg
jns
mov
pop
and
xlat
rcr
jnp
cmp
popf
aas
sbb
sub
es
xor
lods
inc
test
pop
inc
dec
mov
test
enter
out
cmp
adcb
mov
idiv
outsb
lret
dec
mov
int3
ljmp
outsl
lods
adc
push
jae
sbb
xchg
ljmp
bnd
out
dec
jae
xchg
mov
out
outsl
hlt
fcmovne
inc
and
insl
inc
divl
dec
pinsrw
dec
dec
les
rorl
add
lea
cwtl
cmp
xchg
sub
add
jle
jmp
lods
or
mov
pop
mov
stos
pop
mov
out
mov
and
pop
push
jne
lahf
dec
jle
dec
popf
lods
inc
jp
and
cwtl
cmp
pop
dec
jo
daa
push
movsl
jbe
mov
and
xor
inc
bswap
and
xlat
pop
xlat
lock
push
add
inc
mov
sub
push
jl
mov
sbb
push
imul
scas
xchg
cld
insb
je
mov
pop
ljmp
js
xchg
cmp
pop
add
testl
jge
ljmp
and
and
test
popa
dec
and
xchg
imulb
mov
push
pop
pop
jne
fwait
pop
pop
pop
enter
ja
incl
push
lahf
inc
idiv
lahf
jp
pop
enter
sub
cmp
pop
aaa
inc
aaa
ljmp
adc
and
pop
lea
cmp
or
aad
adc
sub
sbb
or
and
xchg
jle
pop
aaa
popa
cmp
pop
pushf
mov
mov
jns
stc
daa
jnp
fs
repnz
lea
mov
cmp
into
jbe
xor
and
and
jmp
xchg
jmp
mov
sbb
and
in
out
and
je
cli
or
sub
xchg
push
push
pop
into
and
pop
inc
or
addr16
sub
cmp
xchg
pusha
scas
sub
xchg
mov
das
adcb
inc
fdivrl
insl
dec
adc
shlb
je
xor
jo
sbbl
int
dec
cld
cmp
jp
inc
mov
in
pop
dec
inc
imul
sub
jo
test
jg
iret
ljmp
jg
repnz
jno
clc
pop
add
xchg
rcll
adcl
into
lahf
inc
jb
jl
xchg
jnp
fidivrl
dec
and
dec
ja
loop
fstps
jp
inc
pusha
sarb
loopne
xchg
inc
decl
or
inc
dec
mov
mov
jg
mov
sti
pop
sbb
neg
pop
pop
int3
pop
icebp
cmp
dec
jbe
lret
jns
fsub
jge
jnp
inc
mov
ret
cmp
xor
mov
cmp
scas
xchg
and
pushf
inc
xor
inc
cmp
mov
pop
into
add
mov
push
cld
dec
dec
inc
pop
sub
scas
mov
out
clc
mov
popa
xchg
lds
mov
out
loopne
daa
ret
test
das
and
ret
cltd
pop
mov
popl
clc
adcl
mov
cmpsb
mov
xor
imul
pop
push
jb
dec
icebp
cmp
je
push
dec
hlt
dec
cli
data16
mov
cs
mov
pop
js
test
js
daa
lret
push
movsb
jnp
clc
inc
outsl
repz
and
pop
mov
mov
pop
cmp
mov
fistpll
fisttpl
xchg
aaa
inc
inc
rcrl
shr
or
andnps
shlb
les
pusha
inc
loopne
rorl
cmpsl
jecxz
cmp
or
sub
stos
cmpl
xor
add
call
mov
int3
scas
mov
hlt
imul
adc
shrl
sub
cmp
movsb
push
rcrb
int
add
cmp
dec
lds
or
cmp
xor
pop
xchg
mov
adc
jl
mov
lcall
pop
sub
jns
cld
pop
sahf
in
cld
jg
xchg
xchg
add
pop
jl
aad
das
js
fs
or
or
and
mov
or
cmp
fidivrl
fsts
xchg
sahf
jb
movsl
add
jo
and
and
xor
xchg
sub
clc
jnp
jo
jns
mov
int
xchg
es
push
movsb
jl
jmp
das
xchg
stos
sub
bound
dec
test
xchg
aas
mov
pop
sub
ret
jns
dec
sbb
xor
divb
lds
mov
outsb
sub
inc
mov
xchg
subl
gs
xor
pop
cmpsb
les
scas
mov
stos
pop
adc
and
cmp
imul
in
cs
cltd
inc
sarb
pop
or
mov
aas
fisttps
nop
in
aas
nop
push
fmul
xchg
push
mov
loopne
fnstsw
and
in
fldcw
or
pop
scas
out
aas
jmp
lahf
mov
jmp
mov
test
scas
ret
or
mov
and
jnp
and
mov
mov
xor
jl
sbb
cwtl
push
lahf
gs
mov
xor
dec
fisubrl
pop
mov
movsl
aas
sub
rep
sub
aad
adc
mov
cld
mov
clc
out
jge
ljmp
mov
addr16
aam
inc
mull
fsubs
push
xchg
cmpsb
inc
pop
icebp
repnz
jmp
inc
cmpsb
push
pop
dec
and
pop
jns
xchg
xchg
mov
mov
ss
and
sub
pop
sbb
cmp
add
xor
inc
enter
jl
outsb
notl
dec
mov
sub
scas
push
xchg
ret
mov
outsb
add
push
mov
sub
out
cwtl
fists
pop
jns
jo
fists
sbb
ss
mov
roll
movd
push
and
jle
cli
fbld
aas
add
push
lea
jle
rclb
sbb
movsb
cmp
daa
mov
xchg
and
into
out
cmp
pop
and
inc
mov
sbb
jnp
sub
aas
adc
shrb
pop
jno
mov
pop
cmp
out
enter
aas
dec
cmpsl
ret
add
jg
sub
stc
xor
cmp
addr16
xor
daa
fcoms
fistps
add
jl
daa
mov
push
repnz
sbb
enter
sub
pop
movsb
int
sub
pop
sbb
mov
sbb
xchg
lds
push
mov
mov
insl
xchg
cmpsb
and
mov
mov
xchg
cwtl
sub
sub
mov
add
push
fs
cmp
sbb
cmp
jbe
fwait
daa
das
push
cmp
loopne
imul
pop
push
add
mov
xor
mov
cmpl
pop
cmp
sub
outsl
pop
and
ficoml
cmp
in
xchg
mov
imulb
sub
icebp
sub
adc
and
sub
sbb
cmp
fbld
nop
pop
mov
leave
push
cmp
mov
imul
lret
mov
xchg
push
addl
sbb
ja
xchg
loop
and
rorb
sub
cltd
fisttps
push
and
lret
xor
push
mov
sti
xlat
daa
dec
in
sbb
or
pop
je
jb
mov
pop
sub
mov
and
inc
mov
xchg
xchg
push
fidivrl
cmp
fs
int
cmp
cli
out
xor
jns
inc
lods
loope
and
mov
mov
cmp
repz
mov
jl
sub
inc
xor
rolb
pop
push
pop
mov
mov
push
mov
daa
dec
pop
fisubl
cltd
cli
push
sarb
xchg
into
js
xchg
movsl
mov
mov
bound
scas
jle
mov
lea
js
test
push
cltd
test
cmp
pop
mov
popa
mov
and
cmp
xchg
mov
stos
shlb
xchg
or
cmpl
xchg
stos
jno
and
cwtl
cmp
sbb
pop
jl
adc
push
stc
cmpsb
das
imul
mov
push
inc
lock
rcrb
es
inc
daa
dec
leave
adc
test
cmp
sub
cmpsb
rcrb
push
or
aam
pop
fistps
pop
mov
nop
mov
sub
bound
test
or
hlt
mov
jl
pop
shl
adc
outsl
sbb
sub
cmpsl
pop
pop
gs
dec
jl
cmp
mov
fwait
push
push
popf
and
or
push
sbb
mov
xorl
cmp
cmp
stc
sbb
cmpsl
xchg
adc
arpl
popf
push
daa
mov
mov
addr16
cwtl
out
movsl
movsb
stos
adc
and
ficompl
shrb
sub
stos
sub
orl
lods
mov
pop
mov
cmp
das
call
sti
cwtl
fdivrl
pop
cli
sbb
stos
rcr
outsl
inc
mov
dec
pop
popf
push
je
sub
xchg
pop
movb
lret
scas
out
jbe
fisttps
mov
and
call
sub
fstps
jmp
pushf
inc
dec
popa
js
add
stos
cmp
jns
or
ja
sbb
fimuls
in
push
dec
mov
sub
inc
ljmp
scas
out
subl
mov
fcomps
xchg
and
and
push
or
add
cltd
pop
daa
and
fldt
xchg
add
sbb
jae
movsb
or
xchg
cwtl
push
sbbl
add
iret
mov
nop
jb
call
imul
and
mov
jl
sbb
or
xor
mov
scas
xchg
pusha
aas
sub
pop
inc
ja
xor
lock
jno
mov
daa
pop
and
scas
cmp
jne
pusha
adc
sub
add
and
stc
sbb
sub
push
dec
lahf
pop
std
cmp
out
and
pop
jmp
push
fstpt
pushl
push
sbb
aaa
mov
push
mov
inc
pop
cmp
mov
scas
mov
push
jbe
cltd
fistl
pop
mov
cmp
movsl
mov
sbb
loope
popa
fistps
jecxz
test
push
push
data16
addr16
daa
push
cmp
xchg
out
rorl
mov
int
xchg
cmpb
in
out
lock
pop
dec
sbb
lret
mov
aas
aaa
imul
jbe
or
ja
push
into
inc
sub
mov
xor
add
jg
add
fmul
dec
aas
pop
push
loopne
pop
push
mov
push
pop
sbb
fcmovnu
sub
das
or
jmp
pop
lahf
pusha
loopne
out
pushf
frstor
adc
ds
pop
push
addr16
and
and
jl
das
enter
or
mov
daa
sarl
sub
sub
or
mov
and
jp
ljmp
stos
out
push
sub
popa
cmp
fcmovbe
mov
mov
mov
add
pusha
pop
pop
push
mov
dec
dec
lahf
pop
pop
lods
bound
mov
daa
push
gs
or
inc
sbb
inc
adc
insb
mov
mov
sbb
pop
lea
pop
int3
dec
in
mov
cmpsb
cmpsb
inc
cmpsb
push
mov
jl
sbb
jge
test
add
mov
cwtl
push
jmp
icebp
add
xor
ret
fdivrs
jecxz
sbb
jmp
data16
stc
dec
mov
push
cmpsl
fcoml
dec
repz
insl
enter
mov
jecxz
ret
les
cmpsl
mov
outsb
in
cmpsb
test
and
lahf
adc
push
ret
sti
lock
aaa
inc
mov
mov
dec
pop
xor
mov
outsl
push
inc
dec
add
out
or
jns
pop
das
sbb
jns
jbe
and
pop
add
stos
and
xchg
jl
cli
jno
movsb
pop
ret
in
sub
sub
mov
inc
dec
sub
pop
sbb
mov
mov
jnp
jl
cmpsl
js
fmuls
sbb
fwait
ljmp
mov
mov
mov
shrl
bound
fstps
lret
iret
sbb
test
ja
sbb
xor
jle
repz
shrl
pop
mov
adc
jne
and
add
dec
sbb
mov
and
dec
repz
dec
call
sbb
push
xor
adc
lods
and
and
movsb
sub
mov
enter
out
xor
cli
daa
jl
shrl
jno
push
cltd
je
icebp
cmpb
xor
inc
pop
lds
negl
dec
mov
mov
pop
pop
mov
cmp
aas
sub
sub
mov
leave
or
mov
cmp
adc
outsl
mov
push
push
mov
push
xchg
xchg
addr16
sub
lods
jae
cmp
and
mov
fcmove
cmp
or
cmp
stc
pop
jne
adc
std
push
and
inc
clc
repnz
or
cmp
test
mov
mov
leave
inc
psubusw
mov
ret
loope
mov
mov
test
repz
loope
inc
dec
xchg
or
jns,pt
or
daa
pop
out
aam
push
xlat
sub
call
es
mov
or
scas
js
divb
mov
pop
ret
or
push
jb
jnp
sub
addb
add
jecxz
mov
sub
rcrl
mov
sbb
mov
lret
test
popf
cli
inc
int
sub
hlt
cmp
mov
push
mov
or
cmp
and
jp
addr16
negl
and
leave
sub
imul
jae
cmpl
pop
cmp
aaa
dec
scas
cmp
push
add
push
dec
jle
and
popa
pop
cmp
push
repz
iret
pop
repnz
and
mov
xor
sub
leave
inc
aam
fs
mov
inc
xor
mov
cmp
in
pop
andb
sub
inc
inc
adcl
sub
jno
movsl
scas
jl
movsb
stos
push
arpl
rorb
jmp
and
cwtl
push
add
test
incl
dec
or
pop
mov
sub
stc
stos
push
cmp
or
jns
pop
das
out
in
or
xchg
aam
push
pop
out
lods
xchg
pop
mov
cmpsb
aam
je
jl
or
mov
fsubrs
sub
xlat
scas
adc
in
cmp
negl
jl
mov
je
cmp
dec
pop
lods
xor
pop
sbb
movsb
or
mov
and
mov
fcmovne
ja
pop
es
jg
sbb
out
push
test
in
mov
adc
jl
popa
test
push
pop
cwtl
or
roll
test
jl
dec
pop
aas
sub
cmc
sti
sub
mov
jl
filds
sub
stc
pop
mov
mov
repz
jge
les
loopne
negl
push
mov
int
pop
imul
bound
xor
insl
fs
cli
test
and
js
ret
push
outsl
shl
adc
dec
xchg
cmp
mov
dec
push
sub
jle
imull
dec
jg
push
or
cmp
cwtl
jl
inc
filds
in
mov
inc
adc
xlat
orl
sbb
mov
or
mov
jecxz
xchg
push
mov
cmp
dec
pop
inc
repz
sarb
mov
clc
mov
jle
or
stos
je
bound
and
insb
aam
les
fwait
adc
xor
das
sub
jecxz
cmc
dec
pop
loop
sub
xchg
leave
sbb
lea
add
xchg
out
adc
inc
jl
shrl
add
mov
fwait
test
pop
popa
lahf
enter
pop
sub
sub
mov
xor
scas
jecxz
push
mov
mov
and
fimuls
cmp
movsl
arpl
leave
cmpsl
leave
gs
pop
pop
and
and
ud1
sbb
into
sbb
and
mov
repnz
push
push
mov
jo
sub
loop
fidivl
sub
xlat
out
mov
and
cmp
lret
cmpsl
dec
jl
push
push
loope
and
jmp
push
sbb
popf
data16
add
and
in
in
push
sub
fxrstor
dec
sbb
clc
lahf
movsb
add
mov
xchg
aas
out
mov
nop
loopne
sar
cmp
inc
and
aaa
pop
mov
sbb
movsb
adc
shl
testl
pop
pusha
inc
adc
or
jo
push
es
leave
sbb
xchg
pop
jge
cmp
std
pop
je
inc
frstor
fldt
dec
fildl
into
adc
sub
pop
fwait
mov
inc
and
jno
sbb
xor
movsb
fmuls
add
jle
mov
cltd
fnstcw
jo
in
dec
sub
jle
sub
xor
pop
test
xor
adc
jns
shl
adc
in
aas
push
insl
hlt
lcall
aas
nop
or
into
jnp
decb
sub
cmc
mov
icebp
cmp
ss
aas
sbb
fcmove
outsl
sub
aas
push
push
fstpl
and
aas
shll
xor
add
cmpl
out
or
test
daa
jg
mov
dec
push
sbb
mov
aas
xchg
pop
pop
in
or
mov
adc
in
mov
aas
aad
inc
nop
sub
mov
cs
sbb
sbb
push
jns
inc
and
sarb
dec
rcl
mov
and
adc
insb
stos
das
aam
cmp
aas
mov
int3
std
jns
xchg
push
add
aas
fincstp
in
adc
adc
in
lods
sbb
pushf
clc
xlat
mov
mov
push
jecxz
mov
pop
cmp
sub
cmpsl
imul
mov
mov
jns
mov
add
outsb
sti
ja
mov
sti
test
test
xchg
xchg
push
sbb
xchg
sub
sub
data16
sub
pusha
jns
das
or
movhps
movsl
fmull
ljmp
mov
pop
call
add
inc
cmp
fs
add
aad
or
fucom
sub
leave
dec
aad
iret
cmp
clc
mov
int3
mov
xor
cmp
in
popa
rorb
jns
insb
jnp
mov
pop
cmp
inc
cmp
leave
das
dec
mov
xor
cmpb
js
je
mov
dec
cmp
push
sbb
jle
push
sbb
xchg
mov
arpl
jb
sar
in
dec
test
fists
out
aas
jbe
push
pushf
mov
imul
out
mov
adc
mov
dec
inc
fwait
jecxz
lret
or
add
es
push
mov
sti
jnp
xor
dec
sbbb
nop
xchg
daa
decb
cli
add
mov
push
xor
or
cld
aas
divl
push
out
movl
cmpsb
sbb
or
mov
clc
xor
jmp
jno
into
adc
mov
sbb
xchg
push
jns
sub
inc
ja
and
mov
das
loopne
loop
fcompl
push
lret
pop
les
mov
push
push
pop
test
sahf
sarl
pop
flds
mull
lret
adc
roll
jbe
inc
mov
ret
fsubrs
xchg
or
fs
add
fs
add
out
hlt
aad
sub
ret
inc
pop
daa
pop
mov
addr16
daa
jo
sub
stc
cmp
pop
xor
dec
mov
dec
sub
imul
xchg
push
inc
mov
cltd
insl
inc
xchg
mov
dec
mov
jno
pop
adc
or
sub
sbb
dec
dec
adc
into
out
imul
push
fistps
push
imul
sub
ja
jl
ljmp
inc
cs
loop
adc
jns
and
std
inc
dec
mov
adc
adc
pop
and
push
mov
xchg
dec
scas
call
popa
pop
pop
arpl
lahf
inc
mov
dec
pop
mov
js
icebp
sub
scas
jnp
or
xor
scas
ljmp
out
scas
jp
fidivrl
mov
jnp
xor
out
sub
loopne
cmp
enter
out
and
cs
cld
mov
adc
outsl
xor
or
gs
sarl
inc
arpl
movsb
dec
dec
repnz
adc
insl
add
jae
daa
std
sub
mov
cmp
out
fildll
fwait
enter
push
push
sbb
aaa
popa
mov
shrl
pop
adc
sub
and
ja
jns
or
and
sarb
aas
mov
and
cmp
xchg
or
or
cmp
xorl
sub
clc
push
mov
pop
imul
xchg
sub
cmpsl
inc
mov
aaa
push
or
movsb
mov
scas
sbb
cmp
mov
repz
pop
loopne
pop
sbb
roll
and
fstcw
sbb
sbb
fsubrs
sbb
in
mov
pop
xor
lret
aas
movsl
cpuid
loopne
xor
xchg
bound
cli
mov
incb
pusha
or
std
fistps
pop
loopne
imul
xor
lahf
jns
sub
sub
aam
or
sbb
mov
ret
jns
xchg
imul
inc
mov
test
xchg
sub
sub
lahf
popf
clc
and
ret
stc
xor
push
cmp
push
adc
sarl
xchg
push
mov
fisubl
push
mov
jbe
enter
mov
push
cmp
dec
cmp
scas
mov
mov
mov
dec
mov
jge
pop
call
test
mov
jg
dec
sarl
push
sub
mov
jmp
mov
pushf
fwait
mov
pushf
jne
cmp
pop
jae
fs
cmpsb
mov
mov
aas
sbb
icebp
mov
clc
jecxz
iret
dec
int3
out
mov
add
and
aas
movsl
adc
rcll
aaa
mov
sub
rol
jae
loope
or
cmpsb
cmc
add
loope
pop
cmc
test
sub
sahf
push
test
xchg
and
sub
add
pop
sub
cwtl
fistps
out
mov
sub
addr16
cmp
dec
push
dec
arpl
sarl
fidivl
jnp
ret
or
cmpl
jne
push
fnstsw
into
in
inc
stos
add
dec
xor
pop
and
inc
inc
inc
jbe
jns
adc
jl
xchg
sub
scas
lods
mov
cmp
loop
and
lcall
cmp
cmp
dec
in
jg
pop
ja
push
aaa
pop
jbe
insb
clc
data16
hlt
rep
cmp
fiadds
ljmp
out
push
push
mov
imul
dec
push
lods
sub
pusha
roll
mov
inc
aas
cmp
testb
addl
cltd
or
js
fwait
xchg
repz
sbb
and
add
daa
sbb
jg
add
fsubrl
cmp
cld
push
jge
aas
jns
pop
repnz
aas
stos
rcrb
gs
subl
das
and
mov
fwait
pop
jecxz
stos
xor
and
dec
adc
add
cmpl
mov
rcll
sbb
mov
scas
jl
xor
stos
mov
lahf
pop
sbb
pushf
add
movsl
jbe
imul
mulb
mov
mov
imul
inc
push
mov
enter
leave
shrl
inc
push
mov
subl
addr16
sbb
and
mov
and
enter
cltd
pop
in
gs
push
pop
cld
jne
adc
sub
jne
outsb
movsl
in
in
pop
sbb
in
sub
jg
adc
sub
loopne
test
add
mov
dec
jae
dec
and
daa
lret
pushf
pop
imul
cmp
andl
loopne
imul
jl
mov
sub
mov
and
daa
pop
or
jnp
hlt
or
cli
popf
fwait
pusha
movsl
aam
sbb
jg
push
ljmp
pop
mov
in
aas
js
arpl
cmp
fnstcw
popf
mov
mov
in
inc
cmp
aas
ljmp
out
mov
push
and
das
aas
ss
imul
inc
cmp
push
ret
das
lods
adc
popa
sub
pop
add
inc
test
xlat
pop
push
mov
cmp
int
es
rorb
push
les
notl
movb
pop
inc
dec
bound
aas
lods
or
xchg
sbb
fnstsw
cmpsl
sub
cmpsb
and
sbb
cld
std
xchg
pushf
xchg
daa
insl
pop
dec
jl
jg
aas
adcl
inc
xchg
js
cmp
pop
add
sub
jmp
xor
stos
cmc
mov
fcomps
and
aas
pop
aad
xchg
stc
das
sub
aaa
push
push
repnz
jno
das
xor
addr16
pop
add
pushf
or
mulb
mov
aas
repz
loopne
sarl
adcl
aas
loope
scas
inc
cmpsl
les
aas
inc
ljmp
push
sbb
or
int
mov
aaa
es
cmpsb
sbb
repnz
cwtl
or
imul
cmp
shl
jl
ljmp
sub
jns
lods
pop
aam
xchg
xor
cmp
cld
je
dec
mov
or
dec
xchg
dec
loope
hlt
rclb
cwtl
xchg
pushf
inc
inc
inc
mov
mov
sub
imul
pop
addr16
das
jl
xchg
jmp
pop
adcl
ja
xor
imul
mov
imul
adc
sbb
jge
popf
in
push
xchg
es
cmpsl
mov
inc
inc
jp
hlt
lock
push
pop
inc
sbb
inc
sbb
and
fisubrs
call
verr
addr16
mov
nop
push
jnp
in
sub
mov
push
arpl
aaa
sbb
lds
lret
cwtl
out
stos
sbb
mov
jmp
inc
or
or
test
inc
aas
cmp
cmc
pop
pusha
push
int3
adc
xchg
movsb
sub
jmp
popf
jo
xchg
mov
push
loop
mov
cmp
add
push
jns
popf
dec
dec
dec
mov
ljmp
push
jno
out
iret
in
fildl
dec
fdivl
sbb
sbb
inc
mov
xor
inc
push
bound
sbbb
and
sbb
jl
adc
popa
xchg
pusha
sbbb
lret
mov
sbb
jle
xchg
test
rcrb
outsl
pop
xchg
das
sub
cld
scas
loope
jg
inc
mov
inc
mov
mov
lahf
push
inc
pop
ficomps
sub
cmp
sbb
add
adc
adc
stos
aas
sbb
or
mul
push
jns
add
imul
mov
insb
icebp
sbb
int3
jle
jge
call
cmp
pop
ret
jg
sbb
sub
cmp
jo
inc
test
repz
lcall
dec
sbb
outsl
mov
xchg
lock
mov
arpl
push
fistpll
push
sub
pop
ss
imul
call
dec
pop
out
jns
shll
sub
xlat
decb
jnp
cmp
aas
test
push
pop
rcrl
inc
push
scas
sbb
aas
push
into
lret
test
lahf
insb
cmp
fnstsw
iret
sbb
jns
popa
and
imul
pop
out
sub
sub
sub
std
xchg
outsl
data16
into
pop
pop
lods
cmp
aas
add
imul
and
fistps
xchg
lcall
mov
pop
les
mov
stos
popf
fidivl
pop
mov
das
xor
sbb
xchg
push
sub
jg
push
lock
pop
sbb
add
stos
cwtl
lea
dec
das
cmp
lret
mov
mov
clc
push
dec
push
pop
scas
cli
and
cmpsb
leave
jne
in
jge
mov
adc
xchg
scas
iret
mov
call
in
and
adcb
mov
xor
ret
fcmovbe
inc
xchg
or
or
mov
push
fdivrs
pop
sbb
aas
aaa
push
push
or
inc
repz
sub
rorb
fcom
ret
jg
push
ficoms
jge
sub
out
mov
out
jmp
imul
aas
mov
push
cmp
mov
push
data16
xlat
pop
ja
jl
jle
sti
push
call
mov
dec
mov
ret
fadd
push
out
pop
fsubs
sbb
pop
inc
xor
cmc
pushf
inc
aas
sub
mov
repnz
hlt
cwtl
pop
xor
outsl
mov
mov
je
mov
dec
add
pop
lret
rolb
jg
mov
stos
lret
xchg
jp
ficoml
daa
stos
mov
jne
mov
test
pop
pop
or
imul
sti
sub
mov
xlat
sbb
pushf
sub
cmpsl
es
xchg
je
aas
mov
hlt
popf
testb
mov
mov
cltd
and
mov
add
xor
add
bound
cmp
mov
jge
shll
adc
frstor
push
shl
pop
and
mov
push
push
sub
test
pop
dec
fstl
das
push
in
mov
sbb
xchg
iret
xchg
test
lods
add
jl
jl
test
call
mov
stc
movsl
cmp
ror
stc
stos
xor
cmp
pop
mov
cmp
xchg
repz
inc
imul
lret
and
arpl
xor
pop
xchg
cmp
dec
pop
and
and
inc
adc
cmp
int
outsb
cld
cmp
mov
push
jmp
ljmp
ficoms
xchg
outsb
int3
pop
repz
lahf
jl,pt
gs
mov
inc
mov
dec
sub
and
pop
sub
icebp
in
cwtl
push
dec
jge
pop
or
fstl
push
ret
push
out
adc
lods
das
mov
push
jle
pop
mov
pushf
jnp
stos
mov
push
das
mov
jg
hlt
scas
outsl
test
mov
cmp
pushf
daa
out
shrl
repz
out
push
fwait
ret
das
xchg
xchg
popa
hlt
lcall
inc
push
sbb
ljmp
or
jg
out
sbb
mov
sbb
jmp
jnp
push
cmpsb
jbe
fidivrl
insb
into
das
int
jp
mov
sub
mov
idivb
fs
xchg
leave
sub
hlt
pop
and
outsb
xchg
in
daa
flds
incl
popf
xchg
cmpxchg
dec
notl
sarb
pop
mov
gs
push
sahf
stc
pop
int3
xor
jp
xor
hlt
std
arpl
fsubs
jnp
out
pop
or
das
and
rolb
sbb
inc
pop
nop
mov
mov
cmpsl
test
sbb
sub
pop
nop
or
pop
add
into
dec
iret
fs
popf
mov
sbb
fsubr
xchg
cmp
jg
mov
sub
pop
jl
push
stos
or
cmpsl
es
pop
popf
push
scas
jns
push
out
dec
sub
lahf
xchg
mov
cmpsb
cld
push
jnp
loop
movsl
push
pop
jl
and
inc
jl
pushf
in
jg
jg
addb
pop
rcl
lea
test
cltd
xchg
sbb
and
cmp
jne
je
xchg
sub
addr16
mov
cmp
cmpl
mov
loop
shrl
aas
js
out
fcmovb
and
mov
imul
das
and
hlt
aas
pop
out
out
push
shll
movsb
lods
xor
ret
add
scas
push
aas
fisttpl
mov
xchg
stos
push
push
sti
lret
push
inc
dec
or
pop
xchg
push
dec
roll
mov
aas
xchg
xor
mov
out
dec
lock
cli
pop
aas
mov
cmp
arpl
cmpsl
std
loopne
sub
and
pop
scas
jl
cmp
aas
int3
xchg
adc
fisubrs
aaa
mov
mov
add
out
stc
and
outsb
sbb
sbb
popf
or
cmp
out
inc
sbb
ret
sub
mov
clc
xchg
cmpsb
pop
in
sub
enter
ljmp
cmp
daa
pop
xor
movsl
rol
sub
xor
lret
adc
mov
mov
inc
fisubl
jo
mov
scas
fwait
cmpsb
push
loopne
call
test
push
shl
sahf
lea
push
jl
sub
and
rorb
pop
gs
mov
ljmp
lds
aas
rolb
out
cwtl
push
or
push
test
sbb
mov
mov
leave
daa
cmp
hlt
es
inc
inc
xor
mov
incl
xchg
ss
int
push
aas
cmp
not
push
xor
mov
push
sub
push
xchg
sub
not
shrd
push
sub
mov
mov
shl
mov
setno
adc
xchg
mov
mov
push
shr
xor
lea
pusha
pushf
lods
movb
sub
add
xor
rcr
sub
pusha
bt
rol
lea
jge
push
not
movb
not
jmp
movb
call
lea
jne
jmp
pushf
pushl
pusha
movl
mov
mov
movl
pushf
pusha
lea
jmp
shl
mov
cmp
pusha
pusha
cmpb
call
fwait
lds
add
add
add
jo
add
add
add
add
add
add
lock
add
add
add
push
sub
add
push
add
cmpsl
push
add
loop
add
int
add
scas
xor
add
add
add
xchg
xchg
xchg
inc
movsb
xor
xor
imul
ds
dec
dec
pop
sbb
std
out
push
add
sub
pusha
pop
fbld
pop
jae
adc
xchg
adc
pop
in
mov
dec
and
add
aad
or
sub
sub
loop
aas
mov
mov
xor
xchg
xchg
jo
xor
sbb
sbb
xlat
or
daa
fwait
popa
call
dec
cmp
popf
cmp
xchg
or
inc
mov
dec
ss
push
push
imul
and
jne
and
je
bound
insb
outsl
arpl
gs
and
and
popa
insl
imul
and
jb
jb
and
and
jne
pusha
pusha
jmp
cmp
cli
cmc
jmp
fwait
imul
xchg
mov
nop
fimuls
aaa
sub
ret
fidivrs
in
std
data16
mov
lret
pop
mov
jecxz
mov
mul
int3
and
sbb
dec
lret
imull
lods
lret
addr16
mulb
and
or
cwtl
sub
repz
pop
mov
int
cld
mov
pop
xchg
xor
xchg
int
std
pop
outsb
adc
mov
add
in
add
push
inc
lds
xlat
lock
sbb
pushf
mov
pushf
mov
push
inc
in
dec
in
sub
pop
call
cwtl
jge
cwtl
sbb
sub
cmp
lret
testl
jl
mov
push
out
push
sub
add
push
mov
mov
xor
mov
dec
jbe
rcll
out
out
insl
mov
fwait
test
mov
mov
fdivrs
clc
test
rclb
xor
cmp
test
dec
fstpl
js
insb
cmp
and
push
call
cmp
mov
rclb
std
xchg
stos
mov
mov
inc
mov
add
test
enter
jae
leave
sahf
push
xor
sub
lea
je
call
mov
mov
push
push
pushl
ret
lea
je
call
adc
nop
pop
xchg
xor
and
aas
pop
out
into
push
sub
cmpsl
es
sub
dec
je
inc
pop
lret
movsb
push
cmp
loopne
decb
movsb
push
mov
out
adc
mov
mov
pop
jne
push
mov
pusha
push
push
pushl
mov
call
add
inc
gs
outsl
fs
gs
popa
outsb
fs
gs
add
pop
xor
icebp
imul
cmp
fidivrl
aas
arpl
cli
pop
out
or
mov
cld
push
ret
push
leave
enter
and
adc
orl
pop
pop
std
xchg
sub
mov
push
xor
xor
jmp
ror
call
push
call
add
inc
gs
outsl
fs
gs
imul
add
add
popa
insb
inc
jb
add
or
jmp
add
cmp
pusha
push
shrd
sub
ror
movb
shl
shr
sbb
bsr
mov
cmc
add
shrd
inc
add
sar
mov
clc
call
adc
push
push
push
pushf
lea
jae
call
fs
cs
jp
adc
mov
and
popa
sbb
dec
mov
pop
xchg
sbb
and
mov
or
dec
sbb
mov
dec
repnz
aam
call
cltd
fstl
fisubl
mov
in
adc
mov
xor
mov
sub
lods
add
mov
inc
lods
xchg
shll
sub
add
test
mov
shll
dec
ljmp
pop
fsubrl
notb
push
ss
sub
das
xchg
jl
push
or
sub
pop
data16
push
popa
jno
into
lret
imul
call
clc
pushf
push
sub
lea
jmp
movl
jmp
test
sub
pusha
rep
lea
pusha
pushf
mov
push
mov
movb
mov
lea
jmp
outsl
aas
or
pop
and
cmp
aas
clc
leave
mov
sub
mov
jecxz
in
xchg
sbb
inc
aas
mov
jg
std
mov
pop
lahf
arpl
cmp
insl
loopne
push
in
add
xchg
jge
sbb
add
bound
jg
addr16
mov
sbb
push
push
cs
rorl
aas
scas
cmp
push
aas
fwait
lods
mov
or
sub
cmp
inc
adc
or
stos
dec
sub
mov
fisubrs
dec
pop
push
xchg
jg
xor
and
cmp
rclb
fs
jns
jg
cmpsb
movsl
movsb
mov
aas
out
in
cli
stc
clc
aas
daa
es
cmp
inc
inc
inc
pop
pop
pop
pop
pop
aas
xchg
cwtl
lahf
aas
mov
fcmovnu
fistpll
push
add
sbb
aas
and
and
cmp
sbb
push
sbb
jmp
clc
in
aas
out
fcmovnu
fadd
fnstcw
fidivrl
mov
lahf
test
lcall
aas
data16
pop
inc
pop
inc
pop
cli
inc
pop
cmp
mov
pop
pop
js
mov
cmp
pop
jns
cltd
mov
cmp
jp
mov
enter
and
mov
sbb
fistpll
jbe
cmp
clc
cmp
fdivr
stc
cwtl
mov
push
stos
inc
push
pop
push
js
shrl
shrb
cwtl
cmp
lahf
sbb
js
cltd
cmp
mov
movsl
sbb
add
cli
aas
and
les
movsb
inc
sbb
jnp
in
gs
push
and
pop
ja
mov
cwtl
cmp
fistps
pop
in
push
lods
jg
sbb
or
jg
sbb
test
and
cs
std
mov
mov
clc
pop
cli
fcomps
sarl
dec
lods
cmp
pop
adc
fistpll
adc
and
repnz
clc
cmp
pop
or
arpl
sahf
jle
jo
cmp
out
jle
mov
inc
imul
clc
pop
sub
or
jnp
pop
scas
adc
outsl
loopne,pn
cmp
outsl
in
pop
adc
imul
sub
lock
fsubrl
mov
lahf
and
push
cmp
iret
mov
in
jp
sbb
mov
in
ja
lcall
loop
in
mov
mov
movsl
sub
lock
scas
movsl
mov
and
fistpl
xchg
push
cmp
sbb
push
leave
cmp
xor
mov
jo
push
sub
out
fdivrs
rcl
xchg
pop
or
push
movsl
lahf
push
out
fnstcw
mov
cmp
sbb
push
xor
and
mov
cmpsl
jecxz
imul
pop
rclb
mov
lock
jecxz,pt
jo
icebp
adc
add
dec
sub
xor
leave
arpl
sub
and
and
inc
pop
mov
mov
push
cmp
popf
clc
sbb
call
pop
aas
pop
cmp
mov
pop
pop
cmp
mov
fstl
jecxz
push
arpl
sbb
gs
add
sub
pop
mulb
imul
lcall
mov
xor
cmp
xor
cmp
add
in
add
xchg
or
icebp
in
pop
mov
movsl
mov
arpl
cmp
in
jns
cwtl
int3
shl
testl
pop
sarl
mov
js
and
in
cmpsl
jns
mov
lods
jnp
cmpsl
sub
mov
pop
lahf
loopne
lahf
int
lahf
dec
leave
push
and
mov
inc
jp
stos
aas
cltd
loopne
popf
repnz
and
jbe
sbb
xor
das
sarl
in
mov
adc
cmp
arpl
hlt
sar
cmpl
cmp
into
sarl
repz
aas
jg
sub
das
shld
scas
jmp
pop
lahf
je
sub
xor
aas
inc
stos
jl
pop
arpl
mov
aas
xchg
push
je
popa
movsl
and
outsb
movl
xlat
push
push
movsb
dec
psrad
cltd
clc
shrb
stc
lcall
pop
adc
lahf
adc
xchg
mov
ss
or
sbb
sub
cli
iret
stos
pop
xor
loope
test
pop
das
lods
subb
mov
lcall
xor
dec
pusha
inc
data16
das
pop
repz
ret
mov
jge
jp
imul
jo
fdivrl
xor
xor
fisubrs
jne
lret
pop
cmc
lret
cmp
mov
punpckldq
mov
fwait
push
mov
and
jle
mov
push
mov
ds
pop
imul
push
bound
es
push
addr16
mov
adc
and
mov
cwtl
inc
cmp
das
jge
and
fimull
xchg
pop
adc
ss
ljmp
and
aas
loope
fisubrl
sbb
lds
addr16
adc
dec
add
sbb
and
mov
inc
movq
mov
das
xchg
pop
out
rcl
push
mov
cld
sbbb
ffree
aas
mov
inc
mov
mov
daa
dec
mov
cmp
das
arpl
orl
cmp
mov
push
cmp
ja
mov
and
or
jno
aas
mov
dec
cmp
in
inc
aas
das
adc
or
mov
ret
aas
imul
ret
and
dec
xchg
in
imul
test
negb
in
lds
push
lahf
inc
fstp
mov
xor
in
xor
cmp
inc
js
je
jb
arpl
jae
mov
test
pusha
test
mov
mov
lea
je
bt
stc
pushf
cmc
add
cmp
add
jne
clc
pusha
cmp
jmp
outsl
push
sbb
sbb
mov
rolb
xchg
pop
xchg
fwait
clc
sub
mov
lods
mov
pusha
jp
hlt
inc
and
mov
xor
call
rcll
imul
mov
mov
sub
iret
imul
push
mov
pushf
jle
in
mov
mov
inc
pop
push
es
call
dec
fbstp
inc
mov
jl
sbb
jg
jge
sub
and
cli
push
add
push
mov
mov
lea
je
push
cmp
push
sub
call
out
cmp
dec
fs
hlt
in
ret
add
fdiv
lods
lds
add
push
inc
enter
and
or
leavew
mov
xchg
mov
stos
leave
insl
sub
push
mov
jne
mov
mov
nop
sub
or
rcrb
mov
mov
xchg
and
fcompl
cmp
cld
pop
add
call
movsl
inc
aas
xor
out
sbb
sahf
fdivrp
cmp
pop
lahf
packuswb
sub
daa
pop
in
adc
lock
jge
push
inc
or
fsubl
aad
scas
sbb
addr16
mov
sahf
jl
add
ds
sub
mov
lret
cmp
lods
in
sahf
push
sub
dec
call
pushf
jmp
rol
stc
push
not
test
push
bt
shr
push
mov
lea
jle
pushf
lea
je
call
pushf
pop
pushf
mov
pushf
pushf
mov
bswap
push
call
stc
cmc
cmp
pusha
pusha
call
jmp
stc
xor
pushl
test
repnz
pushf
pushl
push
lea
jne
add
not
xchg
mov
shrd
sub
pusha
bsr
btr
lea
stc
pusha
sub
bt
pushl
popl
clc
cmp
movw
lea
ja
rcl
push
shr
rcr
sub
jmp
add
mov
cmp
clc
test
movb
pushf
pushf
call
cmp
sub
data16
in
sub
dec
dec
ljmp
mov
and
ljmp
cli
test
les
in
xor
and
jae
pushf
shl
mov
pushf
bt
mov
pop
push
bt
pushl
mov
call
call
pushl
movb
pushl
lea
jne
shld
sub
btc
rol
bsf
aad
mov
cmc
dec
add
cmc
pushf
adc
xor
mov
pusha
cmc
pusha
clc
test
movb
call
pushf
call
pushf
push
jmp
mov
stos
adc
fsubl
lods
mov
aad
add
fisttps
jns
or
and
inc
rorl
adc
inc
ret
xor
mov
sti
dec
xor
lock
inc
xor
icebp
cmp
lds
pop
fists
lods
jb
out
sub
mov
ja
mov
cmc
std
cmp
jmp
or
add
sahf
push
sub
add
mov
adc
enter
insl
lods
inc
push
adc
push
adcb
cmp
pop
push
iret
and
mov
mov
outsb
add
cmp
icebp
dec
adc
jno
lods
xchg
ror
out
mov
pop
cmp
push
je
xor
push
std
and
xor
fdiv
stc
loop
mov
lcall
mov
adc
lea
jp
sti
sahf
push
cs
idiv
cmc
xor
movb
mov
mov
push
inc
cmp
stc
pushf
cmp
lea
pushl
pushl
pushl
lea
movzbw
movsbw
cwtl
mov
jmp
add
inc
outsl
inc
jb
popa
je
inc
jne
add
and
ja
call
or
bsf
inc
jmp
lea
jne
lea
movzbw
jmp
es
mov
xchg
scas
scas
mov
lds
and
xlat
mov
mov
pop
mov
xchg
mov
lcall
daa
lahf
test
out
pop
mov
mov
xor
mov
push
das
dec
popa
test
xchg
loope
ret
rcl
cld
pop
mov
xchg
sar
sbb
shll
orl
testb
adc
push
scas
xchg
mov
sbb
pop
or
cltd
iret
int
mull
jb
push
inc
mov
icebp
lret
arpl
adc
add
cmp
rorb
aam
sbb
xchg
cmp
add
inc
aaa
pop
hlt
insb
jno
inc
inc
mov
lock
mov
mov
push
sahf
cwtl
push
mov
imul
fbstp
pop
xchg
das
xorb
xchg
adc
cmc
pop
js
sti
lock
rolb
jns
mov
aas
cld
xchg
ret
movsb
rol
clc
cmpsb
dec
and
ficoms
xor
imul
push
xlat
or
xchg
repz
pop
loopne
int3
dec
or
das
aam
push
sahf
push
and
mov
call
cmp
pushf
pushf
lea
je
pushf
pushf
cmp
pushf
pushf
call
lea
jae
push
push
sub
call
lea
call
push
jmp
mov
repz
and
add
xor
mov
sub
mov
mov
fstl
push
imul
push
pop
addb
cmp
pusha
inc
xchg
jnp
lea
jmp
cmpsl
or
insb
push
xchg
jmp
or
add
xorl
imulw
mov
movsl
cmp
mov
fidivl
push
add
inc
adc
push
adc
mov
pop
pop
adc
lret
popa
add
outsb
sub
test
insb
xor
pop
ss
mov
addr16
outsb
push
aam
popf
fsubrl
or
out
xchg
fucom
loopne
jecxz
sub
push
call
sbb
xchg
sub
xchg
cmp
outsb
sahf
enter
fimull
arpl
cmp
add
mov
aas
mov
cmpsl
cmp
jbe
decb
lods
int
sbb
into
xchg
xor
push
iret
mov
scas
sbb
lcall
call
adc
and
sbb
outsb
mov
seta
ljmp
xor
fnstsw
mov
sbb
inc
in
inc
sbb
sarl
int3
adc
inc
pop
dec
mov
or
fistpll
dec
mov
shlb
mov
or
add
jbe
int
push
cmp
or
out
dec
lcall
push
fdivs
or
push
mov
int
sti
mov
aad
mov
xchg
adc
stos
adc
mov
add
mov
xlat
jecxz
cmp
frstor
push
cmp
and
mov
mov
call
jmp
push
xor
pusha
lea
call
pushf
lea
jae
xchg
inc
push
mov
setno
jmp
pusha
inc
lea
inc
inc
or
pushf
sub
jns
adc
xchg
adc
mov
sub
cmc
mov
jmp
pusha
stos
pushf
mov
pusha
push
lea
jmp
movb
lea
ja
bt
pushf
jmp
pushfw
popw
test
inc
not
mov
stc
mov
jmp
cmpsl
xchg
int3
icebp
xchg
jp
or
xchg
scas
pop
pop
in
inc
cmp
imul
stc
je
test
aam
aaa
outsb
fldcw
aad
dec
xchg
mov
mov
aas
jbe
and
dec
and
add
jp
xchg
mov
pushf
and
sbb
mov
sahf
push
and
sbb
aas
mov
inc
and
fisubs
test
and
scas
sub
pop
and
ds
push
xchg
jecxz
inc
lahf
xchg
inc
pop
adc
pop
inc
mov
and
jg
mov
and
pop
popf
rcrl
cmpsb
andb
xchg
sbb
adc
daa
push
adc
mov
dec
sahf
dec
push
int
sbb
pop
arpl
jl
jmp
jo
mov
cmp
test
jge
clc
lea
incl
push
inc
cmpsb
sub
pushl
pop
fisttps
and
dec
test
call
lcall
outsl
aas
jo
test
mov
jns
outsl
and
fstps
and
cmp
dec
jae
lcall
icebp
inc
addr16
sbb
ret
mov
sub
insl
fwait
xlat
mov
das
sbb
stc
js
xlat
fdivrs
xor
push
adc
cli
into
popf
mov
fistpll
enter
popa
jl
inc
fistpll
xchg
cmp
out
aaa
mov
cmp
push
jnp
sti
mov
pop
icebp
mov
jo
jecxz
mov
mov
sub
mov
pop
lret
stos
dec
cmp
mov
ja
filds
popa
es
popf
push
test
das
out
push
ja
jb
push
mov
and
iret
inc
int
sysexit
call
mov
mov
and
xor
pop
mov
jbe
cmp
sahf
push
ds
sbb
mov
test
and
mov
fbstp
or
sub
mov
movsl
addr16
fists
pop
inc
stc
inc
out
mov
and
fildll
mul
dec
cmp
and
sub
push
jnp
jns
hlt
fwait
rcrb
scas
cmp
movsb
xchg
fwait
lahf
push
inc
sub
pop
mov
cmp
inc
cmp
mov
inc
sub
fldcw
loope
in
jno
push
add
cmp
cmp
jg
fs
call
jae
cmp
shll
lahf
sbb
mov
inc
das
jbe
cmpsl
loop
jge
sub
cmp
imul
fwait
xchg
sarb
mov
nop
mov
mov
jecxz
lret
test
xchg
jnp
popa
mov
insb
cmp
cmp
iret
int3
and
pop
push
call
sub
mov
ror
cmpsl
push
mov
and
data16
push
shl
xchg
dec
mov
test
and
dec
push
push
scas
insb
push
int3
dec
loopne
aam
test
sbb
inc
cmp
xchg
imul
xchg
and
rcl
mov
int3
or
iret
mov
fs
inc
fimuls
shll
fwait
xorl
and
sbb
insl
sub
gs
mov
push
push
or
pop
test
adc
outsl
jg
inc
stc
stos
push
jb
sti
inc
sbb
fs
pop
sbb
lods
out
inc
or
nop
sub
jle
test
popf
mov
xchg
fildl
ja
leave
fwait
gs
pop
jnp
gs
jnp
out
sub
cmp
clc
stos
inc
adc
inc
push
jl
dec
add
shll
shlb
insl
inc
cltd
mov
push
jae
sarb
xchg
fcos
and
inc
imul
fldt
outsl
mov
push
jmp
push
xchg
enter
in
dec
jg
stc
shrl
ljmp
or
and
or
cmp
js
cmpl
ficompl
and
cmp
sub
pop
int
mov
mov
or
mov
push
pop
sti
jl
popa
dec
icebp
stos
ja
pop
lea
pop
clc
cmp
mov
out
pop
push
push
lods
cmp
sub
and
sbb
fsubrs
lock
and
sub
std
pop
sbb
mov
movsl
arpl
xchg
lahf
mov
mov
sub
stos
push
into
pop
cmc
cmpl
mov
cmp
inc
and
pop
sahf
or
out
leave
in
cmp
mov
push
clc
dec
out
and
xor
sub
mov
inc
mov
movsb
or
rcrb
cmpsl
adc
lea
cmp
out
fstpl
cmp
and
lods
push
cmp
mov
mov
and
mov
out
jmp
add
fcomp
popa
sub
js
pop
cmp
xlat
cwtl
pop
int
jns
cmpsl
cltd
mov
fldcw
pop
sti
or
mov
fs
sbb
push
pop
mov
aas
popf
enter
jo
rolb
cmp
inc
pop
sub
ja
shlb
clc
inc
daa
cli
lahf
jl
mov
jae
lahf
mov
jnp
mov
iret
push
ja
add
sbb
dec
inc
mov
xchg
clc
mov
sarl
adc
pop
jbe
jae
xchg
imul
dec
inc
loope
lret
mov
pop
cwtl
fcmovnb
pop
sti
insl
fstps
in
mov
and
inc
andl
cmp
les
in
pop
pop
add
movsb
daa
scas
lods
jg
out
loope
xchg
out
jp
add
int3
imul
pop
mov
mov
push
pop
cmp
sub
int
loop
mov
add
cmp
xor
pop
mov
cs
shlb
sbb
orl
lods
inc
or
sub
lods
mov
aas
dec
es
subb
and
test
call
mov
mov
insl
clc
mov
stos
mov
out
pop
push
mov
outsb
stc
mov
xlat
add
gs
jae
js
pop
adc
std
sub
mov
loope
dec
icebp
cmp
cmp
mov
imul
aas
inc
push
jp
je
mov
cmp
call
mov
ds
pop
inc
outsb
mov
insl
dec
fisttpl
cmp
mov
clc
pop
fsubrs
and
je
stos
inc
fmul
cmp
mov
ficoms
outsb
fsubr
inc
xlat
and
loopne
mov
mov
dec
test
mov
stos
mov
jp
sub
test
scas
mov
adcl
or
js
leave
xchg
and
cmp
sub
and
sub
cltd
mov
sub
andb
lods
mov
push
and
lods
popa
pop
add
test
test
lcall
sahf
pop
and
nop
mov
pop
add
inc
lds
cmpsb
sub
mov
lea
roll
out
xchg
scas
nop
lods
js
push
dec
lahf
pop
adc
test
sub
cmp
or
push
cmp
in
lret
cmp
xchg
test
ss
les
inc
data16
mov
jb
add
mov
lds
mov
push
cmc
cmpsb
sarl
cmp
push
jg
loope
pop
push
fildl
push
push
popa
inc
and
xor
ret
cmpsl
and
loope
lcall
and
in
pop
addr16
int
mov
cmpsb
xor
outsb
sub
dec
inc
loope
lcall
es
pop
sarb
cmpsl
insl
add
in
pop
lods
push
push
xor
sub
and
mov
and
cmpsl
int3
andl
pusha
mov
mov
jbe
loope
xchg
mov
fldt
mov
and
add
mov
out
xor
pop
cmpsl
dec
jmp
jnp
lods
jnp
or
test
in
movsl
pop
sti
push
pop
rclb
sub
lea
sbb
fbstp
andl
xchg
ret
add
mov
mov
cmp
fistl
xor
ljmp
das
popa
add
movsl
movsl
ret
pop
mov
jmp
pop
and
in
jl
xor
mov
xlat
jmp
dec
add
and
lods
cmp
lea
mov
mov
xchg
fwait
pusha
inc
ljmp
mov
jmp
adcb
lcall
push
decb
add
push
rcll
sub
xor
pusha
mov
cmp
stc
stos
sbb
cmp
add
pop
aaa
sahf
test
jbe
in
jl
dec
cld
mov
fmul
je
cmpsb
push
fwait
push
push
push
xor
daa
pop
and
andb
sub
lcall
jo
lock
dec
inc
push
cmp
les
xchg
mov
cmp
pop
mov
into
pop
int
fstpt
sbb
cmp
pop
jecxz
sarl
sub
inc
fcmovnb
arpl
loope
ja
jle
cmpsb
pop
orb
fisubrs
mov
ficoml
jns
adc
lcall
cmp
xor
and
mov
lret
fcoms
mov
pop
rcr
pop
pop
int3
ret
ja
xchg
movl
das
pop
into
and
mov
mov
mov
push
and
addr16
loopne
sub
xor
adc
push
pop
adc
mov
cmp
dec
and
ret
pop
fistps
cmp
and
out
inc
pop
sbb
sub
xchg
pop
int
mov
mov
dec
or
cltd
out
dec
mov
dec
fsubrp
cmp
cmp
pop
mov
ja
imul
or
or
jp
aad
leave
pop
cs
mov
and
inc
pop
sbb
mov
imul
mov
cmp
xor
lds
test
mov
push
mov
fldenv
push
cmp
ret
sbb
and
je
mov
out
test
sub
pop
sbb
pop
cmpsb
pop
scas
sub
out
test
xlat
and
push
movsl
pushf
cmp
jae
jg
imul
stos
leave
stos
xchg
imul
cmp
in
xlat
mov
es
jne
cmp
inc
ja
inc
bound
outsl
push
dec
and
aaa
es
out
out
push
cmpsb
or
dec
insb
and
scas
inc
mov
xchg
sub
leave
or
stos
and
testb
sub
xlat
cmp
and
pop
xorl
jp
inc
jnp
loopne
stc
sub
inc
cmpsb
xorb
and
test
push
sub
lds
jmp
dec
mov
and
jae
ret
adc
clc
push
inc
cltd
mov
clc
xchg
jge
lret
cmp
jg
lea
enter
gs
stc
inc
inc
mov
gs
fdivs
clc
mov
ss
scas
pop
push
and
and
lock
adc
imull
int3
fldl
pop
test
push
pop
xlat
jle
movsb
dec
pop
mov
lret
jg
fwait
iret
cmpsb
push
dec
mov
mov
ja
cmp
sub
in
jp
jae
fadds
mov
pop
imul
ja
pop
aas
dec
mov
jns
pop
lret
pop
leave
je
mov
xor
mov
cmpsb
sti
jg
push
fidivrs
outsl
je
lahf
pusha
push
ja
jmp
xchg
pop
mov
iret
adc
dec
xchg
clc
and
imul
mov
dec
sub
xor
add
mov
pop
js
pusha
add
fisubrl
sahf
inc
inc
fisubl
mov
xchg
pop
cmp
int
rcrb
cmpl
push
or
jns
shrl
ficompl
xchg
fisubrs
push
push
inc
mov
loope
push
clc
mov
cmp
mov
xlat
and
ja
cmp
dec
lods
xor
decl
cmp
or
add
or
mov
sub
or
xchg
xor
repnz
cmpb
mov
push
daa
and
lds
dec
cmp
cmpsb
sub
sub
add
mov
test
mov
pop
dec
pop
int
das
out
andl
mov
lods
mov
cltd
mov
popf
icebp
cmp
stos
and
sub
dec
sbb
pop
sbb
xor
and
std
insb
js
and
subl
rolb
mov
scas
jge
out
push
iret
pop
sub
pop
sbb
divl
int
mov
cli
mov
test
sub
cmp
stos
sub
xor
and
and
push
rclb
cs
push
xchg
pop
orb
loope
xchg
cmp
aas
push
pop
cmp
cmc
je
outsb
sbb
push
loop
and
pop
aaa
sub
cld
orb
aaa
lds
xchg
and
mov
sub
jns
push
and
jo
inc
mov
test
fmuls
ljmp
lahf
pushf
mov
fisubrs
sub
in
cs
pop
fs
sahf
push
push
cmp
ret
lret
loopne
roll
xorb
std
cmp
pop
mov
icebp
test
imul
mov
inc
pop
cmp
and
push
push
cmp
xchg
lret
mov
adc
dec
fs
inc
mov
aad
cltd
or
cwtl
xchg
push
pop
inc
pop
es
hlt
stos
cmpl
iret
mov
mov
bswap
lea
dec
pushf
mov
lea
push
jmp
push
lods
pushf
or
sub
mov
cwtl
out
inc
icebp
nopl
mov
negl
cmp
adc
inc
jne
mov
cltd
cmp
or
and
ds
popf
ds
pop
push
or
popf
insl
inc
mov
out
jno
shll
popf
jmp
mov
pop
xor
jno
pop
mov
cmpl
fiaddl
push
pop
push
clc
call
mov
cmc
movsl
stos
ret
test
data16
fisubrs
repz
adc
xchg
fnsave
sub
les
addl
mov
ljmp
and
push
in
mov
or
lcall
cli
fcmovnbe
out
out
mov
ss
cmp
mov
push
jmp
jae
imul
xchg
or
pop
mov
lahf
inc
jl
and
xchg
dec
adc
lea
ja
movsbw
movsbw
call
movl
pushf
pushf
push
lea
jmp
adc
aad
mov
movsl
jmp
shlb
or
rcr
repz
stos
or
jge
xchg
jg
dec
dec
les
push
rcl
push
xchg
pop
xchg
jbe
and
adc
fldl
mov
pop
imul
out
movsb
push
sbb
add
xor
cmc
ffree
cltd
mov
push
cmpsl
pusha
pushf
jmp
mov
clc
test
push
clc
add
pushf
mov
pushl
mov
cmc
clc
cmp
pushf
jmp
call
inc
cmc
stc
cmc
bt
rol
call
xor
cmpsb
fwait
sbb
negl
in
and
shrb
dec
mov
pop
lds
lock
movsl
add
aaa
cmpsb
dec
push
inc
or
mov
xchg
shrb
jo
fwait
ds
jl
mov
mov
aas
sbbl
and
or
mull
ja
popa
fdiv
cmp
mov
notl
cltd
jle
xchg
mov
pop
xchg
cwtl
xor
or
push
push
es
pushf
pushf
call
lea
je
clc
pusha
jmp
pushf
movl
xchg
push
movb
dec
pusha
shl
pushl
pushf
lods
cmp
pushf
xor
push
sub
stc
rol
lea
jb
push
pusha
not
push
lea
call
pusha
cmp
bt
pushf
cmp
jmp
movb
pusha
lahf
lea
mov
pusha
movzbw
call
lea
jmp
push
push
outsl
arpl
jne
and
je
jns
jo
imul
arpl
insb
and
je
bound
insb
outsl
arpl
gs
and
and
popa
insl
imul
and
jb
jb
and
fs
jne
call
pusha
mov
jmp
jp
popa
clc
add
clc
pushf
sarl
nop
add
mov
data16
test
daa
lret
adc
dec
pusha
fs
xor
adc
shlb
and
sub
mov
fisubrs
xchg
jp
jge
mov
push
fdiv
jo
pop
adc
shlb
or
ret
je
insb
adc
popa
leave
push
mov
loop
mov
or
aas
xor
call
cltd
scas
aad
ljmp
inc
addr16
shl
mov
test
fcmove
add
mov
push
push
mov
data16
xchg
ret
xor
dec
sub
xlat
adc
push
and
push
push
aam
mov
in
sub
xorl
push
js
daa
loop
in
int3
pop
ss
inc
mov
pop
adc
mov
lds
aad
lods
mov
adc
pop
pop
inc
jnp
sti
adc
mov
cld
add
and
cmpl
jmp
std
and
cmp
pushf
pusha
lea
ja
call
in
sbb
stos
push
jle
in
test
shll
cmp
push
xchg
repz
mov
lea
cmp
pop
test
mov
or
add
stos
dec
or
popa
or
in
cltd
pop
adc
pop
je
sbb
in
xor
pop
ficompl
mov
push
dec
or
xor
push
or
outsb
sarb
scas
imul
or
push
in
subb
pop
ret
inc
push
ret
jg
push
push
sbb
pop
arpl
je
outsl
insb
data16
call
lea
je
push
mov
lea
jmp
rol
call
pusha
sub
bt
jmp
sbb
and
lods
or
rolb
lahf
dec
mov
je
or
aaa
stos
or
ffree
ds
call
xchg
and
jne
in
aaa
data16
cmp
pop
xor
in
push
sbb
cmp
jmp
jnp
fldt
xchg
in
sar
inc
dec
rol
pop
dec
test
shlb
pop
sahf
push
dec
cmp
xchg
lea
ja
push
pusha
imul
mov
cmc
pusha
add
push
pushf
lea
jmp
jo
movsb
lods
es
dec
ljmp
pusha
mov
push
sti
aam
movsb
and
pushf
adc
leave
cmp
rcrl
out
movsb
sub
push
or
push
mov
xchg
or
xlat
ds
shlb
cmp
mov
inc
xchg
sbb
push
cmpsb
push
leave
ret
pop
dec
xor
data16
lahf
cmp
imul
or
and
hlt
sbb
lret
mov
out
stos
or
enter
arpl
imul
push
dec
pop
dec
mov
xchg
dec
cmp
stos
cmp
hlt
sbb
and
push
push
stos
or
cmp
push
xor
xchg
insl
cmp
out
cli
jnp
lret
xor
xor
repnz
jns
mov
mov
jg
jo
add
xchg
mov
clc
mov
push
push
adc
push
rcl
push
push
das
insl
mov
roll
arpl
dec
xchg
mov
push
dec
xor
mov
xchg
dec
sub
gs
shll
cmp
pop
xchg
pop
sub
lock
xchg
inc
push
mov
pop
int
inc
sub
popa
mov
jbe
loope
ljmp
cmp
xlat
jp
test
pop
or
lock
sbb
outsb
pop
xchg
jg
ds
movsl
inc
pop
push
xchg
iret
outsb
and
mov
or
fisttpl
pop
lahf
add
sub
jmp
add
mov
repnz
insl
dec
xor
pop
xchg
dec
iret
leave
mov
mov
scas
or
lahf
or
pop
js
repz
cwtl
mov
xor
inc
xor
add
pop
ds
gs
lcall
cmp
cmp
movl
scas
rorb
lds
leave
jns
addr16
js
or
add
arpl
sahf
sti
sbb
sub
mov
pop
mov
cmp
sub
movsl
pop
mov
lock
pop
fdivrp
xor
jmp
pushl
mov
pusha
lea
call
jmp
sub
int
push
pushf
dec
add
ftst
inc
xchg
repz
jle
dec
popa
mov
shlb
or
out
push
and
mov
jecxz
xlat
insl
in
ss
stos
bound
or
jae
fbld
mov
imul
frstor
pop
dec
xor
mov
sbb
cmp
stc
enter
mov
xchg
cli
push
push
std
add
pushf
xchg
sahf
push
dec
push
sub
add
dec
outsl
arpl
inc
insb
insb
outsl
arpl
outsl
insb
xor
cs
insb
add
jmp
lea
call
pushf
lea
jae
pusha
xor
pushf
lea
call
pusha
pusha
lea
jae
call
add
dec
outsl
popa
fs
imul
add
and
lea
call
push
pusha
mov
lea
jae
dec
pushf
xchg
mov
dec
dec
inc
pusha
call
call
pushf
lea
jb
cmc
pushf
test
cmpb
movw
mov
call
sar
std
pop
jmp
dec
push
mov
cmpsl
test
das
jg
mov
dec
outsb
cmpsl
cwtl
shr
cltd
sbb
pop
jb
jae
sub
xchg
jl
dec
xchg
dec
or
bnd
push
mov
data16
out
scas
xchg
je
xchg
pop
push
pushf
mov
push
leave
ljmp
xchg
test
cmc
push
pop
cmp
addb
test
mov
push
mov
mov
cmp
or
lock
test
inc
mov
xchg
dec
sbb
into
add
fcoml
jge
mov
movq
sub
pop
lahf
sahf
push
dec
icebp
mov
jmp
and
mov
cmp
fsubs
inc
pop
leave
mov
mov
out
dec
stc
sbb
sub
sbb
pop
add
mov
xchg
leave
lods
or
xchg
xchg
cltd
call
ret
pop
dec
cmp
and
lock
cld
lret
xor
mov
out
xchg
mov
mov
push
je
into
xchg
test
into
dec
sbb
sti
jne
mov
jne
jge
lds
sahf
shr
jle
inc
fistps
or
xchg
sbb
in
mov
mov
jecxz
cmp
sbb
pop
inc
jle
nop
push
sbb
and
in
jae
aas
xchg
inc
cmp
xlat
jle
stos
inc
jle
push
dec
push
dec
cmp
cmc
jl
mov
pop
ss
cmpb
dec
imul
daa
sbb
adc
std
imul
shrl
daa
push
cmpsb
jne
ret
and
movsl
cmp
imul
outsb
repz
int
ret
sbb
sub
test
imul
adc
push
je
add
add
add
xor
adc
jbe
data16
imul
xchg
lcall
andl
add
iret
lds
jle
or
js
dec
cmp
push
jle
cli
inc
cmp
push
sbb
jg
imul
fimull
sbb
xor
aad
xor
jg
push
dec
xchg
push
lea
je
call
push
pushf
pushl
lea
jae
bt
jb
test
clc
xor
push
pusha
lea
call
pushf
lea
jae
not
mov
not
push
call
rorl
sbb
sbb
jbe
mov
xchg
jg
push
pop
mov
test
cmp
pop
push
loop
loope
ds
or
push
into
push
sub
mov
and
dec
xor
jle
xchg
gs
push
dec
xchg
gs
pushf
lea
ja
sub
cmc
shl
sub
adc
cmp
add
pusha
cmc
rcr
shld
mov
rol
stc
and
pusha
mov
pushl
cmc
mov
clc
repnz
jmp
test
sub
cmp
dec
not
stc
mov
sar
xor
not
inc
add
adc
clc
sets
mov
pushf
push
test
pushf
test
pusha
movb
lea
je
stc
pusha
push
pushf
sub
mov
cmp
call
js
inc
fistl
mov
cmp
gs
push
inc
inc
loopne
popf
fstpt
ss
push
fsubl
std
xor
inc
add
jne
push
pop
xchg
xor
call
fimuls
movsb
dec
enter
int3
loope
test
sub
fdivs
stc
sahf
jbe
xor
insl
shr
iret
movsb
sbb
outsb
in
cmp
push
inc
mov
mov
mov
pusha
movb
mov
cwtl
mov
mov
setbe
pushf
lea
push
pusha
mov
movl
movb
call
mov
pushf
mov
pushl
ret
jbe
xor
adc
fsubrp
dec
push
push
lds
hlt
nop
push
out
das
in
jne
jmp
ficompl
adc
push
insl
out
pop
shlb
mov
imul
sbb
sarb
dec
adc
in
aam
mov
daa
push
mov
mov
cmp
mov
icebp
or
out
push
repz
jns
lods
xchg
mov
adc
cmp
inc
mov
lds
notb
or
mov
es
call
xchg
xchg
scas
sahf
fsub
lcall
scas
sahf
int
rcr
xchg
repnz
std
add
inc
pop
arpl
jp
mov
jg
or
inc
cmc
cltd
out
jno
jo
out
add
inc
jns
mov
and
jle
call
pusha
pusha
mov
stos
pushl
mov
lea
jmp
shrd
btc
ror
sub
add
shr
sub
add
mov
pusha
bt
mov
call
jmp
movzwl
lea
lea
mov
test
test
pushf
push
add
call
lea
jb
push
push
clc
cmp
mov
movl
lea
jae
pusha
clc
mov
bsr
xor
shl
mov
stc
and
mov
add
test
sub
stc
repnz
pusha
push
lea
jne
seto
jb
mov
rcl
neg
sub
shld
mov
clc
test
sub
pusha
bt
stc
jmp
dec
btc
inc
mov
pushf
and
bt
cmc
add
pusha
pusha
pushl
lea
jmp
movsb
lods
dec
and
in
sahf
adc
out
xor
scas
scas
lods
imul
add
rorl
ss
clc
rol
sbb
out
dec
int
imull
sub
aaa
enter
xor
sahf
mov
dec
cmp
and
data16
in
and
push
sbb
mov
les
dec
clc
cld
sahf
or
jb
icebp
inc
jbe
movsl
jnp
pop
rclb
shrl
inc
rorl
cs
pushl
lea
jae
push
bt
pusha
bt
cmp
jmp
mov
pushf
xchg
shr
mov
cmp
pushf
jmp
std
addr16
lret
ja
in
pop
cmp
push
xor
in
push
imul
add
insl
pop
sub
cmpsb
addr16
sub
add
inc
outsl
into
movl
mov
cmp
bound
in
idivl
sbb
push
fsts
mov
int
mov
pop
jno
std
adc
push
inc
loopne
stc
mov
push
pushf
pusha
movb
lea
jmp
clc
cmc
stc
mov
jmp
xchg
pusha
movl
pusha
call
stc
sub
call
fsubp
jecxz
adc
int3
inc
into
outsl
pop
lods
or
push
mov
push
out
dec
jb
sbb
or
add
inc
scas
jp
mov
es
test
cmp
mov
mov
pop
in
and
js
aad
stc
xchg
or
push
dec
or
call
negb
pop
nop
loopne
push
mov
sarb
aas
ds
add
push
xchg
popf
xchg
test
enter
sahf
push
inc
and
push
adc
pushf
push
push
mov
lea
jae
call
movw
lea
je
cmc
pushf
push
add
clc
cmc
cmp
cmp
pusha
call
push
mov
movl
not
mov
pusha
lea
call
push
cmp
pusha
call
pop
pushf
pushl
ret
jb
xchg
inc
inc
jns
mov
repz
jg
addr16
mov
sbb
mov
cmc
sub
cmp
sarl
ficompl
fs
gs
mov
dec
add
hlt
lret
push
sahf
or
and
mov
sub
enter
pop
out
xchg
or
call
leave
sahf
push
inc
iret
mov
bt
clc
clc
jmp
and
xchg
fistps
cmp
cmpb
jp
sub
not
push
dec
push
stos
add
jmp
push
cs
test
adc
mov
dec
push
mov
xor
int
repnz
pop
rcrl
jge
xchg
dec
ds
outsl
push
mov
lods
jno
les
jo
xchg
mov
push
call
pop
shlb
faddl
mov
add
sahf
push
inc
test
adc
bt
mov
push
cmp
test
test
jmp
call
test
pusha
movb
sub
stc
bt
test
cmp
pushf
push
pushf
push
lea
ja
cmc
cmc
jmp
cmp
jmp
leave
inc
push
inc
lds
sbb
out
push
icebp
mov
xor
fisubs
sbb
pushf
out
cmp
jmp
iret
jg
mov
mov
cwtl
or
cmpsb
cmp
in
push
xor
cmc
xchg
fistpll
fcom
pop
xor
out
fldcw
sbb
leave
sahf
cmpsl
mov
cmpsb
outsb
data16
inc
pop
sahf
push
inc
mov
shlb
fs
push
clc
push
xor
jmp
lea
jne
adc
btr
dec
bt
mov
call
push
insb
leave
outsb
pop
mov
pop
leave
test
mov
xor
imul
mov
dec
push
shl
clc
sbb
mov
pop
mov
mov
mov
or
dec
add
icebp
xchg
jb
ret
outsb
dec
call
or
loop
mov
push
gs
lret
push
mov
adc
or
mov
insl
or
mov
test
mov
ror
mov
std
mov
nop
stos
cmpsb
scas
inc
popa
outsb
cmp
xor
xchg
int
dec
outsl
sahf
jne
push
inc
fwait
fs
sub
xchg
inc
cmp
mov
xor
test
mov
rcrl
sbb
inc
add
mov
mov
or
cmp
push
pop
aam
lock
lods
or
push
cmp
mov
cmpsl
sahf
jmp
cwtl
pop
data16
inc
xchg
jmp
out
insl
mov
or
adc
sbbb
inc
xchg
lods
and
pop
shlb
ljmp
add
xor
sub
icebp
and
daa
dec
aas
cmp
cltd
es
test
push
lcall
ja
or
sbb
int3
push
test
ficoms
lds
xchg
and
in
mov
mov
test
jae
into
jnp
inc
popf
push
cmp
arpl
push
xchg
shr
xchg
lahf
pop
cmpsl
ret
push
scas
es
adc
dec
jmp
les
cmp
adc
gs
mov
repz
jnp
cmp
mull
in
cmpl
push
mov
jnp
fwait
mov
and
leave
jp
xor
popf
out
lcall
sbb
jp
mov
ja
faddl
hlt
cmp
adc
jg
aaa
xlat
aas
loopne
jb
adc
cld
xchg
sub
jno
fistl
mov
xor
stos
icebp
lret
hlt
aaa
cmp
dec
sbb
adc
scas
stos
rol
cmpsb
sti
jno
pop
push
xor
mov
cwtl
sarb
fbld
pop
ret
stc
jmp
shll
call
adc
mov
mov
add
idivl
push
ss
sahf
push
jns
pop
dec
loope
leave
mov
xor
fldt
hlt
repz
pop
xor
push
push
arpl
sub
mov
aaa
popa
pusha
cld
dec
imul
sbbl
xchg
outsl
loope
sub
dec
and
lea
push
lods
mov
mov
int
jg
cs
sub
mov
push
xchg
and
mov
jge
pop
lahf
pop
jle
jp
mov
sbb
inc
pushf
mov
lea
call
call
dec
xchg
test
and
nop
inc
shll
mov
mov
push
mov
psubusb
pop
ljmp
mov
push
push
in
sub
xchg
xor
inc
pmuludq
in
popa
es
rclb
jecxz,pt
and
cs
dec
or
push
push
pop
sahf
and
xchg
or
aas
addr16
movsb
pop
jge
xchg
dec
push
mov
lods
xor
pop
cmpsb
adc
inc
push
cs
cmc
iret
gs
insl
aad
subl
and
xchg
and
mov
sub
push
jecxz
mov
mov
sub
adc
hlt
jecxz
shrl
shll
sub
out
mov
pop
push
lret
sbb
aam
sub
mov
int
icebp
sbb
mov
dec
insb
jge
push
in
push
stc
das
mov
shll
mov
jno
adc
aaa
dec
cmpsb
and
xor
pop
js
in
jmp
jae
scas
mov
jle
shrb
push
pop
jge
jo
and
mov
mov
dec
cmpsl
jne
dec
repz
jmp
add
fistpll
lcall
shl
jb
leave
sub
leave
push
retw
ffreep
mov
mov
fidivl
inc
push
iret
sbb
ja
leave
sbb
loope
scas
add
mov
outsb
frstor
mov
dec
mov
and
std
mov
or
cmp
cmp
sub
hlt
out
insl
cltd
lds
pushaw
aaa
lret
push
dec
arpl
inc
jae
cltd
add
cli
outsb
add
xchg
dec
sub
or
sub
lcall
ds
push
gs
jmp
mov
pushf
and
ja
push
jno
push
sub
lcall
sahf
push
jl
popf
pushf
pushf
movl
pusha
push
pushf
pushf
lea
jmp
pusha
mov
pushf
pusha
lea
jmp
sub
in
lock
shll
std
sbb
clc
aaa
je
add
repz
cmp
in
and
adc
sahf
add
out
mov
cmp
stos
shll
scas
test
jno
push
sub
stc
out
sbbb
push
mov
inc
xor
fldenv
mov
lods
mov
mov
sahf
mov
out
ja
push
bound
inc
or
mov
in
sti
mov
rol
int3
lcall
cmp
outsl
cmp
hlt
xor
xchg
add
or
mov
sahf
daa
pop
pusha
test
or
jbe
adc
sub
jl
in
in
idivb
lock
inc
or
ret
xlat
xchg
inc
pushf
std
adc
cmp
dec
xor
pushw
jb
shll
es
int3
and
pop
pop
xchg
jge
fcoms
add
inc
pop
not
cmp
call
add
and
sbb
or
add
stos
mov
gs
gs
sub
stc
mov
pushf
pop
inc
and
mov
cwtl
sub
jecxz
icebp
xlat
push
dec
and
imul
inc
pop
addr16
in
sbb
cmpsb
xor
xor
icebp
and
adc
cmc
sti
mov
mov
icebp
pusha
les
test
hlt
fisubs
xor
mov
push
jl
scas
push
lods
jno
xor
dec
cmp
jnp
mov
in
ror
xor
push
mov
lds
cmpsl
push
lret
jle
xor
pusha
or
repnz
cli
test
pop
pop
nop
mov
adc
cmp
fcompl
fs
mov
test
fidivl
pop
fiaddl
loopne
cmp
add
ret
jbe
xor
outsb
nop
mov
mov
push
andl
mov
gs
dec
mov
fwait
negb
lret
int3
or
testb
out
test
mov
shl
sub
jle
xor
pushf
inc
lea
pushf
lea
call
pusha
pusha
adc
movb
push
lea
call
push
jmp
jmp
sub
fiadds
add
cmp
icebp
push
cmp
aaa
sbb
movsb
mov
or
and
dec
add
rcrb
push
dec
mov
jnp
xchg
sub
lods
push
mov
sbb
imul
sti
test
xor
shrl
adc
jns
mov
sub
mov
add
out
dec
and
and
out
mov
mull
outsb
mov
xor
push
outsl
adc
cmpsb
cld
out
jbe
pop
push
add
pop
inc
pop
jb
fnstcw
daa
fimuls
fildl
repnz
sub
cmp
jp
cmpsl
aad
push
in
mov
mov
jne
push
lods
push
mov
cmpb
jg
adc
pop
xchg
jg
popf
add
xor
adc
aad
andb
mov
mov
mov
pushl
movsl
in
mov
pop
insb
pop
in
stos
fwait
xlat
or
mov
loop
stos
std
sub
lcall
loopne
mov
or
mov
imul
mov
mov
scas
fistpll
fimull
mov
jg
lahf
in
cld
adc
jg
jae
sbb
xor
insl
clc
and
aaa
pop
push
lea
int
cltd
sbb
sbb
or
jecxz
sbb
adc
mov
jge
push
ds
ret
add
or
mov
mov
insb
ds
push
xchg
mov
mov
jne
adc
mov
aam
in
pop
jecxz
jbe
test
cltd
out
push
or
cltd
push
xchg
enter
inc
xor
mov
fists
or
shrb
cmp
lods
xchg
pop
inc
sub
movsb
xchg
lods
aad
js
mov
fst
shll
inc
add
pop
sbb
cmp
xorl
in
loopne
inc
repnz
aaa
addr16
loope
imul
cmpb
les
jp
and
out
and
test
sahf
ja
aam
out
bound
jecxz
push
je
mov
inc
inc
sbb
push
mov
ljmp
daa
fsubrs
or
pop
fs
push
xchg
jb
sub
mov
call
dec
fisttpll
into
cltd
popf
dec
fwait
gs
fwait
jns
xor
xchg
push
push
icebp
dec
dec
daa
aad
inc
test
mov
mov
icebp
jmp
pop
xlat
sbb
cmp
or
outsl
mov
popf
mov
mov
pop
es
mov
dec
mov
mov
mov
fucompp
dec
je
fneni(8087
and
andb
sahf
push
fldl
cmp
xchg
push
bound
xor
nop
xor
cmp
cmc
sbb
and
and
popa
adc
mov
push
ret
clc
out
push
ficoms
ret
add
orl
iret
lods
cmp
push
std
je
outsl
lock
xlat
faddl
mov
jmp
jae
cmpb
mov
cmp
and
lahf
jno
je
addr16
loope
popf
sub
dec
inc
std
push
push
fdivl
fidivs
dec
and
ret
pop
pushf
cltd
data16
dec
push
loope
mov
out
push
dec
lds
sti
in
cmpsb
add
into
xor
out
inc
pop
and
cwtl
test
imul
out
mov
jo
nop
addr16
ss
and
push
aas
or
push
pop
xchg
dec
aad
cwtl
mov
leave
hlt
es
xchg
stc
push
lea
imul
arpl
imul
jns
xchg
nop
or
scas
mov
push
sbb
cmpb
jb
pop
or
mov
jb
inc
pop
xor
adc
mov
pop
mov
aam
xlat
shlb
sahf
out
jnp
mov
mov
stos
sahf
js
jns
dec
loope
stc
ror
jbe
mov
ficoml
push
push
mov
nop
test
pop
pop
sar
sub
xchg
shll
testl
insl
adc
sti
sbb
arpl
push
add
pop
dec
mov
push
ret
jle
mov
cmp
adc
push
adc
insb
and
scas
xchg
stos
cmp
xchg
sahf
adc
adc
aad
mov
iret
xchg
xor
stos
push
dec
sbb
iret
int
mov
cwtl
in
mov
jle
pop
ficoms
mov
je
es
sub
mov
xchg
popf
fidivs
fldenv
xchg
sbb
movsb
mov
jmp
mov
clc
popf
arpl
add
ss
test
push
cmp
xchg
fbld
out
stc
cmp
cli
cmp
cmp
jmp
and
jp
fisttpll
aam
cmpl
mov
lods
dec
ficompl
enter
sub
ret
jle
sub
sbb
mov
add
scas
fbstp
lret
mov
clc
push
inc
sbb
leave
clc
mov
xchg
dec
rclb
mov
add
jecxz
sti
out
enter
push
mov
imul
out
mov
jnp
pusha
ss
jp
add
movl
xchg
movsl
lcall
ja
fsubl
rol
mov
sub
das
jnp
xchg
je
add
mov
pusha
cwtl
ss
mov
iret
mov
cmp
aam
mov
push
out
sbb
cli
mov
clc
xor
in
add
push
mov
pop
mov
cmp
mov
sub
xchg
test
push
mov
int3
mov
push
adc
ljmp
jno
xor
out
sbb
mov
icebp
icebp
mov
insb
pop
addr16
daa
in
jmp
ret
cld
xor
ja
xchg
in
jne
rorb
xchg
jl
fisubs
mov
shrl
std
neg
add
pop
lock
fs
adc
inc
in
push
enter
cld
insl
mov
mov
sub
or
mov
mov
cmpsl
cs
xor
mov
xchg
or
jg
mov
pop
aad
fisttpll
xchg
jno
and
fsubl
rorb
push
jne
aad
pusha
lods
mov
push
jmp
lea
jbe
shr
pusha
mov
or
call
lea
jae
pusha
cmp
movb
lea
ja
call
jp
icebp
sub
hlt
mov
rol
sub
add
inc
sbb
add
or
push
pop
sbb
sbb
add
mov
repz
ljmp
add
enter
stos
xor
stos
push
pop
sbb
fwait
cmp
aaa
push
pop
add
scas
daa
and
fisttpl
jp
imul
rolb
pushf
pop
xchg
and
or
push
dec
subl
faddl
subl
jo
fsubs
fs
jbe
pushf
pushf
movl
call
shr
pushf
stc
cmp
pushf
call
mov
pushf
pushf
pushl
pushf
pushl
ret
movsbw
mov
clc
push
btc
clc
add
bsr
sbb
bsr
add
add
not
inc
btc
adc
mov
clc
pusha
push
shr
clc
cmp
mov
pusha
push
pushf
lea
je
jmp
adc
dec
ret
cltd
pop
aam
dec
mov
inc
and
jno
mov
cltd
cmp
dec
frstor
mov
cmc
gs
cmp
js
dec
and
sbb
ljmp
fwait
inc
cmp
cltd
inc
fdiv
cs
rcll
dec
pushf
jg
inc
test
mov
cmp
mov
add
hlt
dec
out
inc
push
inc
mov
jnp
dec
stos
shrl
aam
cmp
sbb
repnz
data16
push
fisubl
sub
clc
jbe
jns
pushf
lds
push
das
and
dec
cmp
fidivl
shrl
popf
jae
insl
adc
into
dec
imul
and
inc
push
mov
jle
loopne
adc
in
jo
dec
inc
pop
subl
sbb
movd
jl
enter
lcall
jno
outsb
cmc
or
push
push
add
rolb
xchg
fdivrl
fidivrl
add
jmp
cmp
adc
jnp
xor
lds
sub
cmp
mov
outsl
or
out
lret
xor
jnp
stc
lret
inc
pop
cmpb
mov
mov
dec
or
xchg
cmp
inc
pop
xor
loop
je
add
mov
jmp
lods
push
call
lea
adc
cmp
sbb
mov
cmc
rcl
add
push
jbe
movzbw
push
shld
adc
bsf
push
pusha
bswap
shl
not
mov
call
add
ja
jo
imul
add
inc
mov
mov
push
push
lea
call
call
pushf
not
inc
not
mov
mov
pushf
call
push
lea
ja
dec
or
sub
cmc
sub
add
cmp
cmc
shr
cmc
mov
xor
push
neg
rcr
mov
bt
test
repnz
pushf
lea
jne
jmp
or
and
scas
das
lods
cmp
mov
ret
mov
jo
add
mov
jno
cwtl
in
jno
push
xlat
xor
sub
pop
lret
sti
pop
mov
out
cli
icebp
sub
push
jbe
sahf
push
imul
cwtl
dec
sub
not
jbe
mov
outsb
mov
mov
push
out
pop
mov
cmpsb
das
cmpsb
xchg
adc
inc
addl
or
sub
mov
push
test
mov
in
cmp
into
test
lahf
pop
aaa
cmp
ljmp
or
mov
jecxz
ficomps
mov
adc
jecxz
lods
lods
adcb
dec
inc
pushf
out
into
aam
or
testl
cmp
cmp
ret
lcall
push
mov
fcmovu
popf
mull
jle
divl
inc
pop
stc
inc
xor
jnp
insb
xchg
sub
aaa
shl
push
sub
mov
cmp
and
adc
push
mov
push
call
imul
iret
movsb
pop
stos
xchg
push
sub
cmp
hlt
out
mov
xchg
ret
je
xchg
xor
loopne
mov
les
xchg
aam
les
in
pusha
sbb
and
fistpll
and
sar
in
rcr
mov
es
push
scas
jl
dec
mov
sahf
push
push
scas
xchg
mov
add
mov
rcll
mov
mov
stc
mov
xchg
xchg
into
inc
push
jg
jl
mov
or
std
adc
mov
pop
repnz
pop
jge
bound
jno
pop
add
cmp
mov
xor
lret
mov
mov
dec
sarb
inc
insl
xchg
test
imul
push
les
sub
sub
or
call
jns
sahf
push
imul
pop
ss
int3
test
sahf
pop
cli
cltd
test
add
sub
stc
dec
mov
xchg
outsl
xchg
xchg
std
mov
fs
xor
addr16
jl
pop
cmp
inc
in
mov
loop
mov
jb
cmc
fidivl
cwtl
xchg
cld
dec
cmp
jg
sub
adcb
push
imul
das
sub
ljmp
pop
push
cmc
and
mov
sbb
cmpsb
cmpsl
and
jle
mov
test
lea
push
seta
push
xchg
sbb
push
add
repnz
mov
mov
es
jp
popl
jle
or
xchg
mov
jo
lcall
js
mov
pop
fsubr
ss
repz
hlt
sahf
push
insb
mov
pop
and
call
xor
pushf
pushf
sub
cmc
stc
rol
push
bt
not
movw
pushw
popfw
pushf
call
or
mov
test
mov
cmp
mov
clc
or
movb
lea
je
jmp
imul
push
add
movb
pushl
pusha
lea
jmp
test
cmp
test
push
push
call
add
sbb
add
jmp
add
mov
add
and
add
aad
add
add
mov
add
pushf
rolb
add
add
cmp
add
movsb
rolb
add
add
jmp
add
lods
rolb
add
out
cltd
mov
xor
fidivrl
xchg
mov
mov
imul
out
and
test
add
lea
mov
sub
in
xchg
dec
mov
sbb
movsl
dec
ljmp
push
and
and
push
aas
cmp
mov
les
ja
mov
adcb
sbb
outsl
lock
and
out
mov
in
mov
add
sub
xor
sahf
push
insl
out
fbstp
pop
pop
xchg
insl
sub
ret
and
shlb
stos
in
outsl
lock
and
out
out
mov
sbb
ja
inc
and
cmp
data16
mov
pop
xchg
lcall
mov
outsl
repz
xchg
push
mov
hlt
es
cs
lock
adc
nop
xchg
xchg
sahf
push
outsb
add
popf
clc
imul
push
stc
stc
pushf
add
movb
pushf
pushf
pushf
lea
jmp
lcall
jmp
lcall
imul
push
test
call
push
cmp
push
dec
imul
mov
in
sbb
cwtl
push
cmc
in
push
shr
cltd
rolb
in
push
push
jmp
lcall
imul
in
call
repz
in
sbb
imul
aad
call
rcl
inc
cwtl
mov
das
imul
sbb
data16
push
iret
imul
in
sbb
jmp
cwtl
xlat
popf
in
and
repnz
jmp
cwtl
push
xor
jmp
cwtl
dec
jmp
jmp
lcall
jmp
cwtl
addl
pop
add
or
call
and
xchg
cwtl
cltd
lcall
idivl
in
sbb
call
in
sub
iret
cwtl
push
or
jmp
cwtl
adc
and
and
cwtl
mov
aam
xor
and
in
push
shr
mov
jbe
cwtl
inc
inc
in
sbb
fistpl
push
shr
inc
and
in
push
fldl2t
add
sahf
setp
jnp
mov
jo
mov
idivl
in
orb
negb
jbe
imul
push
lret
or
jb
sub
push
in
cmp
outsl
mov
add
pop
stc
in
sti
loop
pop
mov
rcll
xor
in
cmc
ja
into
das
outsl
test
stos
dec
loope
xchg
lahf
xor
leave
push
cli
inc
negl
mov
lods
or
movb
or
mov
adc
mov
ss
cmp
jmp
call
push
lock
std
std
mov
test
notb
inc
test
std
and
loope
mov
pop
mov
xor
popa
mov
in
cmp
inc
and
aam
push
ret
in
daa
adc
test
cwtl
pop
xchg
loope
addl
push
adcl
mov
and
enter
inc
ror
cld
sbb
dec
add
lea
test
or
mov
pusha
ror
add
add
adc
movl
btc
bts
mov
sub
clc
pusha
cmp
cmp
movw
mov
jmp
sub
loope
outsl
sti
jecxz
xchg
out
jge
cli
cltd
call
inc
pushf
repnz
mov
cld
shll
cmpsb
sbb
imul
mov
sbb
sbb
data16
shlb
loope
xor
mov
daa
movsb
sub
cmp
inc
sub
das
xchg
pop
inc
imul
mov
and
pop
cmp
das
into
movsl
loope
dec
pop
add
inc
cmp
aas
fdivp
dec
xor
push
test
mov
sahf
push
popa
in
rcrb
clc
jl
pop
push
jle
pop
mov
movsb
inc
xor
xor
enter
test
xorb
jns
lods
dec
xchg
lock
das
mov
or
and
push
imul
lret
jne
push
push
dec
sbbl
inc
pop
lds
aam
jmp
sub
repz
add
jne
js
je
cld
xchg
pop
cmc
int3
lea
shr
aas
jns
xchg
clc
daa
std
adcl
dec
cmp
mov
push
idiv
push
stos
push
sbb
pop
and
pushf
movb
lea
je
cmc
shrd
btr
add
shr
rcr
shld
adc
mov
test
add
pushf
pushf
clc
movb
mov
stc
shrd
mov
cmp
mov
mov
cmc
cmp
pushf
mov
lea
jbe
cmp
btr
shr
and
mov
xchg
inc
add
test
lea
movsbw
xchg
mov
test
add
sar
add
neg
sbb
movl
stc
neg
bt
mov
bt
cmp
pushf
mov
pushf
lea
jbe
not
sub
cmc
btc
mov
sub
push
mov
sar
rcl
test
dec
add
dec
lea
bsr
rol
shr
movsbw
rcl
mov
lea
btr
rcl
xor
add
mov
push
mov
push
pusha
movb
pushf
mov
jmp
stc
cmp
mov
lea
je
pushf
pusha
pushf
lea
jmp
inc
imul
jne
je
and
and
jae
jo
outsl
addr16
insl
and
jae
bound
outsb
and
outsb
imul
and
and
jns
gs
and
data16
and
and
push
imul
and
popa
arpl
fs
jae
imul
outsb
daa
je
ja
jb
and
jns
outsl
jb
add
push
inc
push
push
cs
insb
add
dec
mov
incl
add
add
imul
movb
push
lea
jmp
mov
shlb
pop
xor
mov
repz
dec
aas
arpl
jns
fnstsw
push
mov
pushf
push
mov
enter
fildll
mov
cmpsb
stos
xchg
lret
pop
xor
xchg
testl
gs
pop
lret
ss
call
mov
rcll
ss
jno
jb
mov
mov
ja
sbbl
in
mov
inc
je
xor
jmp
fcoms
shlb
outsb
push
out
push
push
sbb
push
test
fisubrl
aam
aas
adc
clc
pop
je
xchg
sbb
mov
push
gs
adc
into
mov
xchg
out
int
cli
imul
lea
cld
xor
push
xchg
lds
dec
and
jb
push
mov
stos
out
mov
popl
xor
mov
mov
ret
xchg
push
push
xchg
jge
scas
pusha
inc
in
or
sti
roll
and
and
jno
mov
mov
test
jbe
adc
das
lds
cmpsl
iret
pop
outsl
push
xchg
inc
mov
nop
test
push
ds
sahf
push
gs
push
call
je
into
es
in
movsb
mov
repz
lea
mov
push
das
mov
pop
ja
jg
ds
or
andl
or
mov
lds
sbb
fstpl
dec
xor
mov
jns
cs
popf
lcall
jno
dec
rcrl
sub
mov
data16
xchg
and
je
stc
push
cmp
mov
jmp
lea
call
pushf
pusha
adc
mov
push
pushf
pushf
lea
jae
pusha
lea
jne
push
pushl
pushf
stos
movb
lea
jmp
dec
setns
mov
mov
inc
not
pusha
mov
lea
pusha
lea
call
pusha
pushf
jmp
rep
bswap
call
jns
pop
xor
cmpsl
push
mov
andb
int
mov
jg
cmp
sbbl
outsl
mov
out
add
inc
mov
fwait
mov
mov
xchg
sub
inc
mov
sti
sbb
xor
xchg
out
sarb
call
imul
and
sbb
cmp
jle
xorb
xchg
test
push
sub
arpl
pushl
lea
call
push
pushf
jmp
movb
pushf
bt
sub
pusha
movb
call
call
call
movb
adc
movb
mov
pushl
ret
add
sub
jmp
lret
cmp
out
std
sbb
mov
add
adc
cltd
mov
rclb
pop
std
ret
xorb
shrl
daa
nop
fwait
not
ret
insb
not
sbb
popf
push
insl
lea
gs
mov
mov
xchg
xchg
or
sub
imul
mov
ljmp
and
pop
push
push
rorl
pusha
mov
clc
call
imul
and
loopne
mov
jmp
pushf
push
pushl
ret
lea
jb
clc
cmc
bt
cmp
jmp
mov
jne
cmpb
pushf
lea
jne
sub
bswap
adc
sub
lea
clc
shrd
mov
js
neg
add
ror
not
shl
mov
cmp
push
test
pushf
jmp
push
jmp
call
sub
test
mov
shl
push
shl
push
btc
cmp
push
rcl
bsf
or
mov
inc
adc
btc
mov
btc
sbb
adc
bt
mov
bt
cmp
jmp
pushf
inc
stc
movl
clc
jmp
stos
mov
pusha
pushf
lea
jmp
rol
pushf
movb
jmp
clc
cmp
pusha
jmp
lea
jae
clc
jmp
jmp
pushf
add
push
pushf
pushl
lea
jmp
cmc
cmp
pusha
push
mov
pusha
lea
jne
ror
lea
xorb
movsbw
not
lea
movzbw
pop
push
pushf
movw
lea
jmp
clc
not
bt
bt
cmc
jmp
pushf
jmp
call
adc
btr
mov
bt
pusha
sub
pusha
push
mov
pushl
mov
push
lea
jmp
call
mov
pushf
mov
jmp
mov
push
pushl
popl
pushf
lea
jmp
mov
clc
ror
cmc
cmp
pusha
cmc
not
pushl
cmc
sub
call
not
movb
lea
jle
dec
cmc
test
test
jmp
mov
pusha
lea
jge
push
pushl
mov
pushf
pushf
lea
jmp
mov
pushf
push
mov
mov
lea
jmp
movzbw
shrd
rol
mov
clc
sub
jmp
xor
sub
sbb
movzbl
mov
shl
add
rcl
sar
push
xor
lea
add
bswap
bsf
adc
mov
bt
jmp
lea
ja
sbb
mov
jmp
add
bsr
mov
bsr
lea
sbb
mov
stc
push
stc
add
mov
mov
pusha
movb
lea
jmp
mov
cmc
sub
mov
pusha
pushf
stc
shl
pushf
pushf
call
pushf
popl
push
pushl
call
pushf
pushf
mov
pusha
mov
lea
jmp
mov
pusha
mov
call
bt
push
add
call
mov
movb
lea
jmp
btc
ror
setne
dec
setb
not
inc
rcl
add
cmc
movzbl
cmp
shr
neg
stc
mov
push
pushf
cmc
xor
pusha
cmc
pushf
add
pushf
pushf
push
pushf
mov
movb
push
movb
mov
pushl
ret
pushf
mov
push
mov
mov
mov
lea
jmp
call
jmp
pushf
add
pusha
neg
pushf
bt
add
call
call
call
lahf
jmp
pushf
pushf
mov
pushf
call
mov
pusha
jmp
push
mov
push
pusha
lea
jmp
xor
jmp
pusha
mov
pushf
mov
pushl
jmp
jmp
push
pusha
mov
jmp
pushf
popl
mov
pushl
popl
pushf
lea
jmp
cmc
bt
test
add
jmp
dec
shr
movsbw
sub
call
mov
lea
lea
pusha
jmp
setle
rdtsc
pusha
sub
pushf
pusha
call
push
jmp
call
sub
clc
stc
bt
ror
call
pusha
inc
sar
mov
shld
add
call
push
mov
push
lea
jmp
ror
rcl
clc
not
movzbl
call
pushl
popl
pusha
mov
pushf
pushf
lea
jmp
call
movsbw
pushf
mov
mov
mov
mov
mov
pusha
pusha
mov
movb
lea
jmp
pushf
call
clc
mov
inc
rcl
shrd
mov
test
add
pusha
call
shl
cmc
or
mov
rcl
jmp
sub
jmp
push
mov
push
jmp
mov
pushf
jmp
jmp
inc
stc
cmc
add
cmc
cbtw
test
movb
cmc
bt
cwtl
clc
jmp
mov
pusha
pushf
push
lea
jmp
setl
not
cmc
xor
movzbl
jo
test
bt
add
pushf
test
jmp
pushl
popl
push
pushl
lea
jmp
dec
adc
mov
ror
clc
or
mov
call
push
call
pushf
mov
movb
pushf
push
mov
lea
jmp
cmp
not
pushf
movb
clc
test
sub
clc
sub
jbe
and
push
mov
lea
jl
push
mov
mov
pushf
popl
pushf
pushl
popl
push
pusha
mov
mov
lea
jmp
and
pushl
mov
pushf
pushf
popl
mov
pushf
jmp
cmp
stc
add
cmp
bt
bt
not
clc
pushf
jmp
mov
movl
pusha
mov
pushf
pushl
pushl
ret
adc
cmc
not
mov
test
not
and
mov
stc
pusha
mov
sub
cmc
cmc
cmc
cmp
shl
call
pushl
popl
pushf
movb
movb
lea
jmp
mov
jmp
ror
mov
setno
adc
clc
shr
sub
add
add
sub
ror
bt
not
ror
dec
pusha
pusha
movzbw
dec
sete
pushf
jmp
pushf
pusha
adc
or
mov
sub
cmp
sete
bsf
mov
clc
mov
jmp
push
mov
pusha
movb
lea
jmp
jge
lea
mov
pushf
pusha
mov
mov
pusha
pushf
mov
mov
push
lea
jmp
pusha
bt
shr
pushf
push
mov
pushf
call
std
mov
pushf
rcr
mov
cwtl
aam
mov
rcr
call
mov
stc
sub
movb
jmp
cmc
mov
xchg
rol
daa
inc
pushl
popf
not
bswap
setbe
movsbl
mov
movzbl
movzbl
cltd
mov
cwtl
bswap
bswap
mov
lea
jae
cltd
not
pop
not
pushf
lea
mov
pushf
movb
pushf
pushl
pushl
ret
movb
pushl
popl
pushf
lea
jmp
sbb
rcl
mov
push
push
test
push
add
pushl
pusha
pushl
push
lea
jmp
decl
jmp
call
sar
rcl
mov
bt
jmp
pushf
cmc
bswap
jmp
mov
push
mov
pushf
popl
pushf
pushl
popl
push
movb
pushf
pushf
lea
jmp
call
mov
jmp
mov
movsbl
call
jg
mov
jmp
movzbw
mov
pusha
stc
stc
pushf
add
call
divl
movb
pushf
movb
push
mov
call
movsbw
jmp
lea
je
clc
push
jmp
stc
bt
sub
stc
pushf
stc
shr
call
movl
mov
mov
shr
pushf
mov
pushl
mov
movl
pushf
popl
jmp
ror
pushf
jmp
pushf
popl
jmp
push
dec
movw
push
sub
mov
bt
call
pushf
pushf
mov
movb
pushf
mov
pusha
lea
jmp
neg
test
add
clc
push
ror
call
clc
movzbl
clc
sub
push
inc
stc
jmp
pusha
lahf
pusha
mov
call
pusha
pusha
mov
movl
pushl
ret
add
cmc
sub
lea
js
pusha
mov
pushf
pusha
pushf
lea
jmp
shr
mov
rcl
mov
clc
mov
pushf
add
push
shrd
call
mov
mov
movb
movw
mov
lea
jmp
pushf
movl
movb
mov
movw
movb
pushf
lea
jmp
call
pushf
add
movl
movw
dec
movb
mov
test
xor
pusha
cwtl
clc
mov
cmp
stc
sub
pushf
mov
pushf
pushf
push
lea
jmp
movb
lea
jne
jmp
xor
stc
cmp
clc
sub
mov
jmp
pusha
mov
mov
pushf
lea
jmp
call
movb
jmp
call
shld
aas
clc
mov
jmp
cmp
jmp
inc
jmp
movw
pushf
popl
lea
movzbl
mov
push
xchg
mov
pushf
call
movb
jmp
push
mov
pusha
pusha
mov
jmp
push
mov
push
lea
jmp
mov
jmp
setae
shl
mov
pusha
mov
sub
shl
inc
dec
mov
pusha
sub
jmp
mov
call
pushf
inc
test
call
jnp
pusha
pusha
mov
mov
push
pushl
lea
jmp
pushf
pushf
push
mov
pushl
push
call
mov
movb
push
movw
lea
jmp
movzbw
mov
movzbw
mov
pushf
call
mov
pushl
pusha
lea
jmp
call
mov
push
lea
jmp
stc
btr
shrd
movzbl
sbb
clc
not
add
and
rol
call
pushl
pusha
jmp
jmp
jmp
movzbw
ror
stc
dec
add
shld
btc
pushl
not
bsr
and
bt
xor
and
not
mov
test
jmp
dec
push
neg
cmc
ror
call
call
push
push
push
mov
mov
call
std
std
pushl
popf
pushf
movb
lea
jmp
mov
pusha
lea
jmp
pushf
popl
call
das
rol
clc
cbtw
notl
cmc
mov
clc
test
sub
stc
cmp
and
call
mov
push
lea
jmp
push
movb
mov
movl
jmp
mov
mov
call
pushf
and
pushf
jmp
dec
call
jmp
jmp
mov
call
pusha
mov
lea
jge
pusha
mov
pusha
lea
jmp
mov
call
pushf
popl
pushf
push
pushl
pushl
popl
push
pusha
lea
jmp
not
cmp
call
mov
movb
lea
jmp
pushl
bt
add
test
clc
jmp
stc
pushf
call
call
push
out
pop
repnz
jnp
push
out
push
in
mov
repz
mov
lret
mov
out
mov
in
push
repnz
nop
jmp
stc
cld
jle
push
in
fsub
test
in
fsub
mov
lret
nop
jmp
mov
std
push
test
mov
test
xchg
out
pusha
std
xchg
out
das
std
push
out
cmp
mov
hlt
test
lret
ja
mov
inc
lret
lods
test
jle
pusha
std
in
and
fsub
test
lret
iret
clc
xor
jnp
jle
push
in
pop
repnz
lods
test
in
jae
or
jnp
stc
cld
fdivr
mov
out
or
pusha
std
xor
mov
cld
or
lods
test
loop
pusha
std
pop
loope
fdivr
push
test
pop
out
mov
out
push
in
stc
cld
out
lret
push
test
sbb
fdivr
lods
test
and
pop
loope
hlt
out
mov
lret
or
mov
out
pop
repnz
pop
out
mov
or
fdivr
out
jmp
or
xor
out
lret
mov
out
in
push
repnz
mov
jecxz
lret
nop
jmp
or
or
mov
test
lahf
repz
push
in
ljmp
test
lret
nop
jmp
mov
and
loop
fsub
fsub
lods
test
pusha
std
iret
clc
out
jmp
lret
mov
loopne
loop
or
mov
hlt
fsub
lods
test
sbb
ss
repz
mov
loop
mov
out
in
nop
jmp
push
test
or
jae
lods
test
push
out
pop
out
push
test
push
in
fsub
push
in
mov
out
push
repnz
jae
cmp
sbb
push
out
fdivr
lods
test
ljmp
mov
loopne
das
std
mov
mov
loope
or
nop
jmp
push
repnz
xchg
out
ljmp
nop
jmp
in
ss
out
lret
fdivr
mov
jmp
stc
cld
ljmp
cmp
nop
jmp
push
in
and
mov
pop
loope
mov
lock
jnp
mov
call
pop
loope
repz
push
test
pusha
std
out
jmp
test
out
or
mov
iret
clc
mov
repnz
mov
inc
or
stc
cld
ss
out
lret
mov
test
pushf
mov
pushl
pusha
mov
mov
lea
jmp
add
mov
movb
jmp
jmp
xor
bt
pusha
bt
pushl
xchg
bt
pushf
mov
call
push
mov
divl
movw
call
sete
lea
push
test
pusha
cmp
pusha
movw
call
add
add
call
mov
movw
movb
pushl
lea
jmp
pushl
mov
pushf
pushl
lea
jmp
pushf
call
movb
mov
test
sub
mov
mov
jmp
movb
pushf
mov
pushf
lea
jmp
mov
call
movb
movb
mov
mov
pushf
lea
jmp
mov
movb
mov
call
mov
mov
mov
jmp
pushf
not
lea
mov
push
movsbw
lea
pushf
mov
pushf
pushf
movb
push
lea
cpuid
push
pushf
call
call
push
pushf
mov
pushf
movb
pushf
lea
jmp
movl
jmp
pushf
mov
mov
pushf
popl
call
mov
mov
pushf
mov
movl
mov
movl
lea
jmp
push
pushl
popl
pushf
movw
pushl
pushf
lea
jmp
pusha
pusha
xchg
xchg
jmp
pusha
pushl
call
pushf
mov
push
lea
jmp
movb
push
mov
movb
pusha
lea
jmp
call
jmp
movb
pushf
mov
mov
mov
pushf
lea
jmp
setns
mov
movsbl
pusha
movzbl
lea
mov
jmp
or
xadd
mov
cmp
sar
stc
ror
mov
call
pusha
movl
inc
call
pushl
popl
push
lea
jmp
call
call
mov
pushf
popl
pushl
jmp
pushf
mov
jmp
pushf
popl
push
lea
js
pushf
pushl
popl
push
pushf
movb
movb
lea
jmp
pushf
pusha
push
mov
call
mov
pushf
call
add
pushf
mov
call
jmp
pushf
mov
push
pushl
mov
lea
jmp
push
pushf
popl
pushf
jmp
bts
mov
or
shr
mov
cmc
stc
push
add
call
push
test
sub
pushf
mov
push
mov
pushf
lea
jmp
jmp
pusha
pusha
call
pushf
jmp
jmp
call
call
mov
push
call
call
test
push
shl
cmc
shr
mov
pusha
movb
or
mov
push
xor
jmp
pusha
add
stc
shld
lea
je
mov
jmp
mov
jmp
clc
clc
sub
push
call
pusha
jmp
jmp
jmp
call
jmp
movw
mov
call
pusha
call
lahf
cmc
dec
mov
pushf
cmc
test
sub
call
mov
pushl
movb
push
pushf
lea
jmp
pusha
lea
pushf
xor
push
add
mov
pushl
jmp
mov
push
call
shl
cmp
sbb
add
call
xor
add
push
pusha
mov
pushl
mov
push
mov
movb
mov
lea
jmp
pushf
cld
push
rep
call
lea
mov
jmp
mov
push
pushf
lea
jmp
mov
movb
mov
push
pushf
lea
jmp
lahf
mov
sar
mov
cmp
sub
jmp
shld
aaa
mov
sub
jmp
test
xchg
mov
pusha
jmp
jmp
pusha
mov
mov
movb
movw
lea
jmp
movsbw
jmp
call
mov
movl
movb
pushf
lea
jmp
call
btr
lea
rcr
sub
sar
bsr
inc
mov
lea
cmp
shl
and
adc
sub
not
bswap
movzbw
mov
pushf
movsbw
jmp
xor
mov
rcr
mov
call
sub
mov
cmc
shl
pushf
mov
jmp
sub
pusha
bt
jmp
call
movsbw
lahf
btr
bsr
mov
push
cmp
push
test
xchg
cmc
xor
jmp
pushf
pusha
jmp
call
pushl
popl
mov
mov
movb
lea
jmp
pusha
pusha
push
pushf
mov
pushf
pushf
call
not
inc
pushf
mov
call
aad
bsr
mov
adc
daa
mov
or
pop
mov
call
jmp
movw
pushl
popl
mov
movl
movb
lea
jmp
pusha
xor
pusha
stc
pushf
stc
ror
jmp
btr
mov
mov
test
bt
stc
clc
add
pushf
movb
lea
jmp
pusha
pushf
movl
mov
call
call
lea
jnp
mov
call
pushf
mov
pushl
jmp
xchg
call
call
btr
mov
test
stc
add
call
pushf
pushl
popl
pushl
lea
jmp
call
call
call
jmp
mov
call
call
bt
cmc
sub
mov
lea
ja
mov
pusha
pushf
push
movl
lea
jmp
mov
add
pushl
cmp
mov
pushf
pushl
popf
pushl
mov
movb
lea
jmp
sub
bt
mov
push
cmpl
movb
push
call
add
pusha
pushf
call
jmp
movb
call
movw
push
mov
mov
movb
push
lea
jmp
push
mov
mov
dec
test
bt
xor
bt
sub
push
mov
pushf
pusha
lea
jmp
pushl
popl
push
pushf
push
lea
jmp
pushl
push
movb
pusha
add
pusha
call
dec
not
add
cmc
mov
or
cmc
pusha
add
mov
cmc
jmp
mov
pushf
push
lea
jmp
call
mov
call
pushl
push
call
pushl
jmp
rol
shl
bt
bt
mov
rcr
neg
not
rcl
mov
cmp
jmp
mov
pushf
pushf
popl
movb
pushf
pushl
popl
pushf
pushf
pushf
pushf
lea
jmp
cwtl
lea
pop
mov
lahf
movzbw
pop
pusha
pushf
pushl
ret
test
add
mov
jmp
clc
add
push
pusha
pushf
pushf
popl
push
call
pushf
jmp
push
pushf
call
not
call
pushf
lea
jne
cmp
bt
cmp
sub
pusha
push
jmp
btc
neg
bt
rol
pop
btr
ror
setge
mov
dec
pusha
sets
call
mov
pushf
lea
jmp
pusha
pusha
mov
mov
jmp
pusha
clc
ror
rcl
sub
add
shr
bt
btr
rol
not
btc
and
or
ror
shr
mov
jmp
mov
pushf
pushf
popl
mov
call
jae
pushf
sbb
mov
pushf
bts
btc
ror
mov
rol
xor
stc
rol
mov
jmp
pushf
popl
push
pushl
call
pusha
pusha
mov
movw
call
push
pushf
popl
pusha
pushl
pushl
popl
mov
movb
mov
lea
jmp
shl
das
and
mov
xor
btc
clc
mov
sub
mov
push
add
cmc
push
shld
pusha
mov
jmp
test
mov
dec
push
mov
jmp
add
call
pushf
jmp
pushl
popl
movb
mov
movl
lea
jmp
call
mov
jmp
call
mov
push
pushf
pushf
lea
jmp
jmp
pushl
popl
push
pushl
push
push
lea
jmp
pushf
popl
jmp
pushf
mov
mov
lea
jmp
inc
call
pusha
call
sub
mov
jmp
pusha
push
call
movw
mov
push
pushf
popl
pushl
pushl
call
movzbl
stc
mov
stc
cmp
clc
bt
or
pushf
push
mov
jmp
xchg
lea
mov
push
pushf
movsbl
sete
mov
mov
xchg
pushf
pop
pushf
bsr
inc
push
xadd
shl
push
movsbw
shrd
adc
push
mov
xor
not
bsr
pushl
btc
not
push
btc
mov
rol
add
or
not
rol
xchg
sub
sub
bts
ror
clc
mov
movzbl
mov
test
sub
or
bts
bt
bswap
mov
bt
adc
mov
inc
push
add
add
inc
inc
or
mov
and
add
pusha
adc
dec
neg
lea
ja
movsbw
ror
mov
pushf
dec
bswap
dec
dec
inc
pop
stc
shr
add
adc
movzbl
pushf
shld
shl
mov
test
stc
clc
jmp
neg
lea
mov
bt
mov
pusha
add
pushf
pushl
call
jmp
sub
movzbw
inc
cmc
adc
pushl
push
add
rcl
movsbw
ror
neg
not
cmp
cmp
sub
pushf
mov
bt
pushf
add
pushf
jmp
aas
pushf
cmc
stc
mov
stc
stc
stc
clc
add
pushl
mov
pushf
lea
jns
pushf
pusha
mov
movb
lea
jmp
push
or
not
movzbl
bt
add
call
pusha
mov
call
pushl
popl
pushf
push
pushf
pushf
lea
jmp
aam
movzww
call
mov
mov
mov
jmp
push
push
mov
pusha
call
mov
lea
jne
bts
shl
neg
neg
mov
clc
and
stc
jmp
mov
pushl
call
call
jmp
add
daa
mov
cmc
bt
call
jmp
dec
mov
cmp
test
call
bts
test
sbb
rcr
mov
jge
bt
push
add
pushf
mov
mov
push
pushf
pushf
mov
push
mov
push
movb
lea
jmp
jmp
jmp
jmp
mov
call
pushf
popl
push
movb
mov
jmp
jmp
movl
mov
mov
pushl
push
lea
jmp
bt
test
sub
pushf
jmp
call
push
mov
call
pusha
pusha
pushf
mov
call
bt
stc
test
bswap
jmp
xor
stc
pushf
cmp
pushf
sub
call
pushl
popl
pushf
movl
lea
jmp
mov
pushf
pusha
lea
jmp
mov
jl
pusha
mov
jmp
mov
mov
pushf
mov
pusha
pushf
movb
lea
jmp
