outsl
sbb
jbe
jl
cmp
mov
and
xorl
sbb
pusha
inc
pop
pop
adc
or
pop
int3
or
mov
jbe
mov
xchg
insb
es
ljmp
sbb
push
mov
sub
and
rorb
adc
out
add
dec
adc
xchg
scas
rcrb
ljmp
xchg
cmp
gs
xor
pushf
mulb
jb
cmp
dec
lods
ss
add
cmp
test
int
mov
sarb
jmp
cmp
xor
fbstp
testl
test
lret
fadds
dec
xchg
mov
dec
mov
sub
popa
test
test
xchg
into
in
js
push
jle
lock
sbb
mov
repnz
mov
mov
sbb
mov
push
shl
mov
cmc
stc
and
cmc
stc
add
pusha
add
mov
pushf
dec
pushf
call
insl
ficompl
in
add
popf
cs
xor
and
aam
js
out
cmp
sahf
jne
lds
cwtl
mov
xor
je
jae
jp
adc
fwait
pop
lret
sub
jno
test
xor
cmp
cmp
cmp
mov
insb
add
stc
and
sub
fisubrs
shll
dec
sub
ljmp
mov
dec
and
and
jmp
mov
icebp
xor
call
int
dec
dec
ds
cmpsl
cmp
inc
movsb
out
iret
cmp
jp
movsl
add
ja
lcall
xor
xchg
dec
stc
outsb
test
js
das
subl
movsb
in
int3
mov
jne
inc
mov
and
int3
adc
xchg
mov
outsb
subl
ljmp
faddl
add
mov
pop
dec
xchg
in
mov
andl
mov
add
cmpb
call
and
push
in
xchg
mov
dec
fidivrs
subl
mov
inc
sbbl
push
lret
jg
lea
stc
mov
scas
fidivl
gs
hlt
out
arpl
lahf
mov
call
sbb
or
sbb
rclb
dec
cmp
jb
pushl
call
jmp
adc
pushf
lea
jmp
lea
call
pusha
lea
jae
bt
xor
push
call
je
lahf
loop
mov
daa
cwtl
mov
mov
cmp
jp
adc
lret
jle
insl
push
jo
cmc
mov
jne
xchg
icebp
cmp
icebp
imul
mov
scas
sub
movsl
pop
lods
stc
dec
test
fcoms
ja
mov
data16
clts
mov
mov
int3
test
into
xor
xchg
mov
gs
cmp
lea
call
push
push
lea
jmp
clc
add
call
mov
xor
sahf
mov
xchg
outsl
mov
incl
inc
daa
sbb
mov
lock
ds
rorl
jno
test
xchg
mov
lret
out
lret
outsl
cld
mov
cmp
or
loop
sbb
and
mov
push
add
add
mov
mov
js
mov
lods
insb
sbbl
sub
js
mov
fldenv
mov
fmul
arpl
gs
lods
test
jbe
sbb
cmc
nop
pop
fbstp
dec
cltd
sti
or
pop
push
mov
insl
jbe
mov
mov
divb
jmp
inc
push
dec
push
adc
in
or
nop
push
test
mov
cmpsb
pop
ds
add
pop
adc
insl
lahf
fistl
les
jecxz
stc
jno
into
inc
fmuls
mov
push
in
sub
iret
xchg
mov
jl
inc
push
nop
or
int3
dec
fadds
dec
mov
aad
test
cmpb
insb
data16
rcll
repnz
push
push
test
mov
das
rclb
mov
into
into
call
jno
inc
leave
insb
hlt
xchg
shrb
adc
out
enter
sub
es
inc
arpl
jne
jo
mov
hlt
in
in
xor
mov
add
cmp
inc
pop
or
rolb
gs
data16
jge
cmp
mov
lods
fsub
sub
cmc
test
loopne
adc
add
dec
xor
push
mov
mov
ss
mov
sbb
inc
nop
outsl
aam
iret
jbe
jecxz
adc
sbb
mov
hlt
sub
sub
sahf
imul
add
sub
mov
out
ret
or
jbe
mov
dec
or
inc
mov
add
fstps
pop
bound
pop
scas
ljmp
popl
loop
mov
mov
inc
loopne
push
mov
pop
or
pop
test
adc
mov
stos
add
jbe
mov
enter
sahf
popa
aas
mov
and
jne
int3
jmp
adc
ret
es
out
mov
jno
fbstp
cwtl
xchg
add
pop
aad
test
xchg
test
addr16
xor
inc
mov
mov
fs
dec
xchg
lods
inc
mov
out
add
mov
mov
mov
stos
sbb
xor
jae
mov
mov
cmp
in
push
cltd
push
sub
cmovb
rcll
mov
int3
xchg
cmp
adc
sub
stos
bound
es
mov
and
ss
cmp
sbb
push
adc
xor
mov
lds
insb
inc
pop
sbb
xlat
lcall
lea
lret
ds
fcmovb
not
xor
mov
lods
sbb
sub
mov
testl
out
lahf
aaa
dec
orb
mov
sbb
or
mov
push
test
data16
xor
mov
add
mov
cmp
inc
fmull
add
dec
aad
and
mov
sub
or
xor
sbb
add
cs
xchg
mov
leave
mov
ja
mov
popf
sub
popa
inc
aaa
xor
mov
or
mov
test
adc
xor
mov
adc
gs
shll
mov
test
or
xor
mov
cmp
shll
mov
xchg
orb
or
fcmovne
test
add
lahf
rol
mov
pop
ja
xor
pop
mov
fildll
test
outsl
in
cwtl
movsl
adcb
mov
xorl
add
mov
das
pop
imul
jno
je
push
pop
ljmp
es
xor
mov
cmp
enter
cltd
mov
enter
rcrl
aam
inc
inc
mov
and
and
dec
test
out
and
ss
push
sbb
jae
test
and
shrl
fwait
repz
and
jge
sbb
test
xchg
mov
push
arpl
ffreep
mov
es
pop
enter
adcb
icebp
call
scas
sti
mov
adc
sbb
mov
inc
cmp
sub
cmp
inc
call
sbb
out
xchg
andl
push
inc
inc
dec
mov
xchg
in
leave
je
gs
into
sub
fadd
push
xor
std
or
clc
std
icebp
inc
test
pop
hlt
mov
aaa
shrl
dec
xchg
loopne
cltd
mov
nop
inc
mov
add
mov
xchg
fs
dec
ss
nop
inc
scas
leave
add
xor
repz
cmc
mov
xor
idivl
jno
or
or
sti
jl,pt
jae
sbb
mov
pop
xor
mov
push
or
inc
aad
add
gs
xor
push
ficomps
scas
in
iret
pop
rorl
jp
test
inc
xor
fidivl
aam
pop
scas
mov
test
adc
mov
cmp
inc
adc
jae
mov
and
shll
ja
leave
cmp
adc
aad
scas
adc
dec
cmp
ret
xor
add
xchg
and
les
xor
loopne
outsl
mov
mov
inc
jne
push
inc
inc
xor
pop
jg
gs
icebp
adc
xor
hlt
dec
nop
ret
mov
push
sti
and
xchg
das
mov
cltd
xchg
sub
outsl
xchg
mov
jno
push
xor
inc
cmp
shlb
aad
xchg
bound
fistpl
imul
mov
xchg
jb
scas
mov
sub
loope
sahf
xor
lock
inc
mov
mov
cmpsb
test
sub
mov
mov
pop
pop
mov
adc
arpl
mov
outsb
ljmp
mov
pop
lods
dec
std
sub
hlt
or
xor
ss
jo
xorl
pop
rclb
iret
mov
fucomi
popa
add
xchg
mov
das
xor
movsb
movl
xchg
mov
lret
repz
mov
xor
mov
jno
inc
rolb
cld
mov
es
call
pop
mov
pusha
cmp
xor
in
es
adc
add
rcll
xchg
rol
mov
cmp
adcl
scas
jno
dec
aam
mov
clc
mov
mov
into
in
adc
and
lret
adcl
jno
cmp
stos
push
jns
inc
jge
sbb
mov
in
fbstp
lret
gs
add
cld
push
pop
pop
cltd
sbb
ljmp
mov
les
mov
mov
push
mov
pop
lock
aad
lahf
xor
jecxz
mov
sbb
adc
sbb
push
fcoml
fidivs
loopne
jno
adc
dec
cmpsb
mov
jl
imul
add
dec
jno
test
lcall
rcrl
mov
cmc
cltd
inc
call
push
inc
mov
push
repnz
lock
je
mov
test
jno
shll
push
jmp
out
fldt
mov
adc
nop
rol
or
scas
jno
jnp
out
je
jne
mov
mov
out
iret
mov
movsb
mov
inc
clc
into
inc
notl
mov
enter
inc
push
jl
lods
cmp
push
shl
cmp
mov
lcall
push
mov
aad
adc
xor
inc
jb
jmp
mov
popa
in
push
inc
pop
leave
mov
lcall
gs
mov
stos
data16
push
daa
mov
mov
pop
mov
cmc
je
mov
inc
add
scas
lahf
dec
dec
mov
xor
mov
xchg
inc
mov
add
imul
ret
xchg
mov
inc
andl
sub
jns
inc
mov
mov
push
push
int3
iret
dec
inc
jecxz
icebp
or
out
dec
icebp
mov
or
jmp
pop
aad
push
push
jb
fwait
push
scas
out
icebp
iret
inc
xor
mov
or
inc
and
xchg
or
mov
sub
adc
shlb
and
mov
les
cmp
adc
cmpsl
sub
mov
push
stos
jbe
fcoms
scas
icebp
ret
xlat
roll
mov
int
imul
iret
dec
xchg
add
cs
fbstp
aam
mov
mov
cmp
inc
jp
rorl
xchg
sahf
rcrb
pop
into
ret
gs
mov
cld
push
pop
lcall
leave
ja
imul
leave
jbe
les
mov
mov
lods
mov
icebp
testb
xor
dec
mov
enter
aaa
xor
mov
enter
add
ret
push
pop
add
xor
add
sahf
or
xor
mov
xchg
hlt
xchg
lahf
add
ret
mov
repz
jbe
stc
jg
or
add
push
js
add
dec
mov
fisubrl
pop
xor
aad
inc
adc
insb
sbb
and
adc
arpl
rorb
mov
hlt
outsb
xor
pop
and
inc
xchg
gs
adc
out
lss
xchg
int
mov
pop
out
adc
and
int3
insb
fstpt
xchg
adc
mov
fbld
cmp
imul
jns
js
xor
ret
cmp
push
dec
add
add
inc
pop
mov
lcall
leave
jae
or
cmpsb
mov
mov
xchg
or
adc
inc
mov
out
clc
loope
lock
xor
inc
aas
xchg
mov
add
xorb
insl
pop
arpl
rcll
xor
repnz
ret
push
mov
stc
pop
mov
push
loop
imul
or
jmp
testb
pop
push
cltd
or
sbb
or
scas
ljmp
test
jne
das
btr
push
fisubs
aad
in
das
adc
xor
out
rcrb
xor
inc
adc
frstor
notb
jne
cld
rcl
xor
lret
shll
bound
daa
sbb
mov
pop
test
fwait
rol
mov
inc
addr16
xor
shlb
cli
aad
xchg
cld
or
mov
and
ret
jne
mov
stos
lret
mov
xor
adc
stc
stos
jae
push
and
jno
mov
pushf
rcl
adc
xchg
pop
shll
lds
cmp
xor
aad
test
xchg
mov
xchg
xorl
mov
cld
pop
pusha
xor
xorb
bound
in
mov
mov
xor
rcrb
adc
fstpl
icebp
and
cmpsb
nop
jno
mov
sub
adc
sar
inc
jae
mulb
pop
int
mov
popf
mov
prefetchwt1
add
ja
aad
popf
or
xor
pop
loopne
iret
inc
mov
outsb
mov
loop
pop
push
call
jno
inc
jae
insl
mov
fiaddl
inc
inc
sub
gs
jae
mov
and
dec
sahf
pushf
jmp
sub
icebp
into
not
cmp
dec
pushf
and
test
nop
or
sbb
mov
or
mov
xor
shlb
shll
rorl
adc
enter
leave
aas
or
popf
lods
fstpl
add
sbb
aaa
bound
push
push
xchg
movsl
js
mov
out
jb
jo
adc
xchg
rcrl
into
mov
loope
mov
push
fucomi
adc
adc
out
fbld
push
and
jp
and
popf
data16
test
mov
fisubs
mov
arpl
mov
mov
in
sahf
mov
or
leave
jbe
mov
mov
cmc
imul
jno
add
lock
mov
ret
inc
mov
lods
lds
sbb
outsl
es
cmpsb
loopne
sub
fnsave
xchg
scas
das
xor
lcall
xchg
mov
mov
in
dec
sar
jp
mov
dec
lock
or
ds
fs
loop
rorl
gs
scas
xchg
pop
hlt
je
jae
mov
adc
rol
mov
mov
push
rcrl
aad
xchg
ret
icebp
lods
hlt
and
xor
scas
adc
cltd
divl
lods
or
fs
pop
mov
insl
inc
and
test
and
icebp
xchg
das
inc
es
fbld
xchg
and
push
in
cmp
popf
rcrb
mov
movsl
ficomps
xor
mov
sbb
lods
mov
pop
pop
mov
lcall
jne
or
nop
ret
stos
mov
xor
push
dec
pop
mov
js
adc
cmc
inc
ret
mov
xchg
adc
jno
mov
scas
dec
fimuls
jmp
mov
out
push
sbb
mov
imul
jbe
test
xchg
imulb
addr16
cwtl
dec
inc
mov
cmc
scas
stos
add
dec
mov
dec
clc
mov
add
mov
shll
imul
dec
jge
push
mov
add
out
lret
pop
inc
popf
out
icebp
ret
inc
icebp
mov
cmp
in
sub
push
call
scas
adc
inc
sub
jae
mov
repz
mov
sbb
out
rcrb
xchg
rcrb
test
roll
jo
lods
lahf
jmp
idivb
xor
lock
pop
dec
mov
clc
adcl
outsl
cmc
inc
xor
iret
aaa
lea
jns
inc
movsb
icebp
mov
lds
and
jae
mov
and
fcoms
lea
rcr
ss
rep
mov
xor
enter
xor
mov
mov
rol
jns
inc
mov
xor
mov
orb
mov
dec
mov
dec
xor
sti
arpl
jo
jno
ret
popf
ffree
fwait
push
xor
mov
jl
mov
and
flds
mov
ss
mov
push
insb
sub
and
xor
xor
push
out
cmpsb
mov
aad
orl
sbb
sbb
xchg
ja
xchg
adc
outsl
das
sahf
enter
add
inc
adc
popa
aad
mov
std
mov
cmc
clc
sub
fiadds
jle
jb
jecxz
icebp
adc
movsb
and
testl
repz
mov
push
inc
dec
mov
aaa
mov
flds
mov
inc
mov
push
daa
dec
jmp
dec
psubw
fldcw
dec
lods
lahf
cmpb
pop
pop
pop
cltd
cwtl
leave
push
imul
leave
push
and
mov
sbbb
fsubs
or
dec
mov
test
or
or
mov
mov
mov
loope
jle
jns
fimull
push
adc
mov
shll
filds
js
outsb
shll
cmc
ja
aaa
lret
aaa
and
pusha
call
adc
test
add
test
xchg
imul
sbb
mov
icebp
outsb
incl
dec
jne
jmp
dec
cmp
repnz
pop
into
cmp
out
aam
cmp
mov
fisubl
add
sbb
int3
adc
mov
mov
mov
jns
or
push
mov
cmp
test
mov
mov
cmp
pushf
cmp
in
adc
sbb
xor
mov
ljmp
cmp
pushf
inc
jmp
add
inc
gs
jne
jb
outsb
je
bound
arpl
aam
fadds
mov
in
inc
mov
xchg
jmp
in
insb
push
out
push
or
ret
add
pop
std
push
and
xor
pop
sub
jb
push
shll
aam
lahf
mov
xchg
xchg
in
adc
cltd
jnp
mov
cld
xor
xor
mov
roll
jl
xchg
fildl
js
cmp
sbb
mov
rcll
mov
and
dec
out
jno
xlat
mov
and
jnp
jbe
inc
in
fidivl
add
pop
fisttpl
call
add
sub
xchg
inc
andb
mov
sub
pushw
int
jp
adc
pop
adc
and
cwtl
push
in
mov
jl
jbe
push
out
adcl
add
imul
push
push
imul
add
add
fldcw
mov
push
cmpsb
stc
sbb
push
push
sbb
pop
push
mov
sahf
das
xchg
jne
pusha
lea
jae
cmp
cmp
cmp
jmp
call
pusha
pushf
pushf
lea
jb
clc
cmp
call
pushl
stc
push
cmp
pushf
push
call
loop
jno
inc
dec
add
or
int3
shll
and
and
mov
jb
and
sahf
rcrl
sti
movsl
cmpsb
jae
mov
mov
out
mov
mov
jno
aad
adc
rcll
test
fadd
ljmp
jo
das
jae
out
cmp
fiaddl
xchg
shll
mov
xor
stos
lock
insb
pop
imul
mov
mov
jne
dec
mov
inc
add
lods
xor
mov
loope
sub
dec
mov
or
iret
jp
stos
cmc
mov
mov
jne
dec
hlt
mov
dec
jb
xor
and
jns
inc
sbb
out
mov
xor
icebp
add
popa
xor
lcall
ret
mov
lds
test
movsl
inc
mov
fsubrl
aad
lcall
jecxz
mov
fadds
mov
cmp
add
test
push
jne
bound
fldenv
ret
inc
push
jp
add
outsl
mov
xchg
mov
into
xor
ljmp
pop
push
dec
push
pop
inc
dec
scas
cmp
sbb
fdivrs
ds
int3
test
inc
inc
fisubs
inc
inc
test
lret
in
test
sub
dec
add
push
pop
jae
dec
adc
sbb
dec
dec
sbb
notb
inc
mov
jbe
jmp
stc
ss
xchg
xor
dec
adc
adc
aam
jb
leave
mov
push
jl
mov
or
es
mov
and
into
mov
xor
pusha
call
lret
call
nop
loopne
jb
xchg
test
orl
sbb
cmpsb
jo
adc
dec
mov
sbb
enter
sbb
mov
xorl
arpl
push
int
dec
lock
inc
fldl
into
jle
sbb
mov
ljmp
mov
jo
xchg
xchg
cmp
std
aad
jbe
sub
adc
dec
fbstp
mov
mov
test
sbb
jbe
or
and
mov
scas
mov
mov
push
test
lods
jb
jecxz
test
push
or
ja
ret
sbb
pop
rorl
insb
pop
dec
dec
sub
stos
lea
lcall
jle
in
imul
jne
js
les
stos
ja
pop
xchg
push
jg
cmp
sub
sarl
or
or
shll
adc
jecxz
xchg
mov
stc
repz
mov
push
and
movsl
fdivrs
mov
mov
inc
jo
fldcw
sbb
xchg
sbb
mov
pop
mov
clc
outsl
mov
rep
dec
or
sub
inc
divb
push
push
lods
call
test
icebp
sub
testl
aad
lret
addr16
adc
jecxz
sbb
lods
rcl
or
xchg
mov
cwtl
shr
cmpsl
mov
iret
in
int
out
mov
rol
nop
sub
add
shll
cli
mov
xchg
dec
jecxz
das
inc
lds
xchg
cwtl
pop
xchg
push
mov
sub
mov
mul
loope
dec
or
push
jo
push
mov
js,pt
or
mov
adc
xor
cmp
sbb
imul
sbb
gs
mov
in
push
mov
rcr
ja
clc
insl
jmp
add
in
add
repz
movl
dec
inc
imul
mov
or
fidivl
jnp
or
push
mov
sbb
mov
leave
push
insb
push
rorb
insb
loopne
cmp
xlat
push
or
shlb
push
sbb
clc
dec
in
clc
nop
sub
nop
mov
outsb
xchg
stos
movsb
mov
and
aas
outsl
cmp
into
mov
cwtl
push
pop
mov
mov
mov
mov
jns
leave
fimuls
dec
out
or
lds
lret
add
ss
xchg
and
rcrl
add
dec
das
push
sub
sub
cltd
mov
jge
dec
rolb
std
lret
xchg
loope
stc
adc
pop
pop
mov
mov
pop
lret
fldenv
push
out
icebp
pop
mov
sarb
fmull
js
fidivrs
inc
xlat
push
dec
sbb
pop
add
or
dec
lcall
sbb
mov
inc
adc
pop
sbb
xchg
repnz
fcmovbe
cmc
cmc
movsl
cld
push
adc
sbb
leave
push
xchg
xor
cmc
rorl
cmp
iret
rcr
repnz
in
stos
mov
jp
leave
adc
dec
jns
mov
jmp
xchg
sbb
dec
ss
or
and
in
xchg
aam
sbb
in
stos
imul
add
mov
dec
xor
xor
xor
add
lcall
mov
add
or
ret
fldl
out
mov
sbb
jo
int3
jmp
or
out
cltd
inc
js
dec
icebp
ret
pop
dec
or
cmc
push
dec
dec
shlb
xchg
add
ljmp
dec
dec
daa
jno
xchg
test
cltd
mov
adc
add
dec
rcrl
add
mov
fisubrs
lret
and
fidivl
clc
lea
shlb
sbb
nop
sub
mov
int
shrl
push
mov
das
sarb
pop
popf
mov
cwtl
mov
sbb
int
xchg
push
pop
xlat
inc
jge
bound
ret
cmp
fnstenv
ss
lea
add
fwait
add
rol
push
sbb
cmc
lret
js
hlt
das
lea
pop
rol
mov
xchg
mov
orl
xchg
insb
shll
or
or
in
lock
fnsave
mov
rolb
add
lret
fwait
pop
repz
mov
les
cs
mov
rol
lods
xlat
repz
aam
mov
push
leave
pop
add
or
xchg
ds
iret
sbb
and
test
push
sub
pop
repz
mov
stc
flds
pop
das
js
inc
aad
jmp
imul
sarb
aad
sub
and
dec
repnz
dec
icebp
push
daa
cwtl
pop
std
or
xor
or
iret
leave
dec
or
in
enter
or
test
dec
jns
lods
loop
add
or
and
arpl
cmpl
stos
jne
shll
inc
xchg
int
mov
insb
rcl
xchg
push
std
xchg
xchg
hlt
repnz
inc
lret
jle
dec
mov
mov
push
push
sbb
mov
inc
movsl
mov
out
popf
shll
jne
sbb
and
movsl
iret
es
cmp
mov
mov
mov
shr
mov
mov
je
out
jge
mov
leave
lret
add
lds
pop
out
push
sub
sbb
rorb
clc
xchg
and
jmp
daa
test
xor
mov
sbb
sub
jle
push
or
push
hlt
add
pop
test
fmul
stos
inc
pop
sub
inc
scas
stos
inc
loop
aaa
cmp
jbe
jae
sarl
cmp
mov
in
jle
xchg
xor
jb
call
mov
or
mov
lret
push
add
add
sbb
std
imul
rorl
xor
push
push
mov
das
mov
push
lods
pmaxub
push
cli
rorb
xlat
ret
or
xor
mov
or
aas
or
lods
pusha
and
shll
xor
movsl
std
sbb
fiadds
add
jo
mov
mov
movsl
or
mov
jo
mov
out
sub
pop
ret
add
xchg
add
fcmovb
les
imul
or
test
sbb
or
les
push
mov
xchg
fisubrs
repz
mov
call
imul
cld
pop
in
cmp
dec
repz
adc
mov
xchg
mov
pop
or
or
inc
xchg
xor
rorl
sub
or
not
shl
test
xchg
inc
fldt
in
adc
pop
orl
popf
dec
lcall
orl
mov
shl
mov
repnz
xchg
dec
rcrb
cmc
lods
push
scas
clc
cmp
xor
test
imul
mov
stos
imull
je
lret
inc
jb
mov
mul
sbb
push
jp
inc
movsl
jmp
ret
xor
cmpsb
pop
adc
rcr
adc
bound
or
mulb
sbb
or
lds
mov
push
sbb
mov
hlt
mov
leave
fildll
adc
lods
fwait
cmp
adc
hlt
call
dec
loope
shrl
dec
orb
cmp
inc
out
jecxz
lods
add
or
lods
dec
adc
jmp
sbb
loope
xor
mov
add
ret
xor
out
mov
inc
mov
or
int
rclb
mov
push
sbbl
fwait
int
pop
div
mov
mov
in
repz
rclb
jne
cld
std
inc
jmp
enter
and
call
loope
pop
inc
ljmp
imul
inc
push
mov
test
xor
adc
dec
movsl
xchg
test
shlb
repnz
in
aaa
pop
and
jae
dec
adc
jbe
adc
rcr
cmc
in
insl
sub
mov
inc
mov
jge
fdivrs
sti
ret
mov
cmp
jae
xrelease
loopne
jbe
fimull
fmulp
xchg
xchg
adc
pop
fistl
repz
repz
cmp
dec
leave
mov
mov
sbb
test
sbb
data16
jns
cmp
sbb
jge
repz
test
jne
clc
pushf
mov
lahf
jb
jae
xorl
and
lock
aam
sub
and
mov
xor
icebp
mov
lods
mov
sub
dec
pop
push
clc
sbb
mov
mov
arpl
repz
jnp
ret
sub
mov
xchg
stos
cmc
mov
bswap
rcr
icebp
lahf
call
sub
lds
inc
mov
mov
mov
test
xchg
repz
sarb
or
jb
push
out
lahf
inc
adc
jmp
adc
out
inc
inc
jmp
sarb
in
adc
adc
push
outsb
lods
and
cmp
testl
mov
int
popf
popl
bound
subl
inc
pop
xchg
movsl
pushf
in
psubw
xchg
idiv
or
scas
mov
cmp
pop
idiv
shll
jae
iret
xor
dec
or
mov
inc
repnz
iret
jmp
or
push
xchg
xchg
in
inc
jp
mov
mov
aaa
inc
dec
cltd
call
sbb
shl
adc
xor
mov
inc
push
rcll
dec
dec
push
sarb
or
add
dec
in
cmp
aaa
mov
orl
ljmp
and
sub
aaa
or
pop
push
add
ds
shlb
push
xchg
xor
dec
and
lods
mov
push
mov
jmp
mov
in
jb
inc
cmpsb
test
js
xor
dec
movsl
aaa
fadds
aaa
hlt
outsl
orb
scas
sbb
inc
xchg
inc
inc
sbb
enter
push
cwtl
leave
lds
inc
mov
repz
pop
sub
test
rcll
jne
std
mov
std
dec
enter
mov
mov
in
mov
sub
or
dec
lret
sti
add
ret
andb
or
nop
test
add
repnz
xor
add
mov
les
enter
sub
push
adc
push
add
cmp
clc
adc
xchg
add
iret
shll
clc
jge
rorb
clc
jne
outsl
push
dec
mov
shl
arpl
inc
in
shlb
inc
pop
aaa
xchg
lret
clc
les
aaa
imul
es
out
add
test
add
insb
inc
leave
insl
out
inc
mov
les
sub
xchg
adc
cwtl
jle
pop
lds
daa
push
ds
clc
in
xchg
cmpsl
mov
cmpsl
dec
clc
movsl
push
push
aad
jne
std
push
dec
sbb
les
push
in
push
mov
outsl
push
add
inc
dec
test
mov
sti
repz
fldcw
arpl
and
lgs
jbe
lock
and
sahf
cmp
pop
mov
mov
push
cmp
stc
inc
pop
pusha
in
xor
loop
aad
in
adc
push
or
cld
lret
icebp
idivb
jns
dec
test
rcrb
pop
dec
jns
repz
sarb
out
rol
aas
adc
xor
aam
pop
insl
enter
cmc
cmp
cmp
sub
push
std
dec
inc
in
pop
cli
sbb
jge
test
enter
ja
enter
cmc
sub
inc
adc
and
dec
out
xor
roll
push
sbb
ret
in
in
jecxz
jns
ja
int3
mov
call
lods
lcall
mov
cmp
outsl
aad
test
push
adc
in
test
mov
cwtl
sbb
jmp
adc
jge
or
push
or
int3
int3
out
jne
and
in
xchg
xorb
jns
push
sub
push
loopne
loope
rorb
lcall
leave
jmp
adc
dec
adc
cmp
inc
xor
insl
sbb
or
les
test
pop
xchg
scas
fildll
sahf
leave
xor
mov
fdivs
outsb
loop
xor
pop
adc
xchg
mov
mov
xchg
lods
or
fld
cmp
rclb
sbb
addr16
sub
xlat
mov
loop
out
dec
stos
mov
in
fwait
xchg
inc
add
or
dec
xchg
jecxz
test
nop
add
mov
sbb
fmuls
test
jecxz
bound
sub
lcall
rclb
dec
inc
in
call
loopne
xorl
sbb
dec
in
rclb
mov
inc
jbe
or
cmp
popf
rcrb
xorl
xor
nop
loopne
inc
or
in
mov
jno
add
cmc
pop
rcrb
pop
dec
stos
xchg
aad
ret
and
mov
xor
jecxz
fadd
bndstx
cmp
incl
adc
iret
sub
dec
adc
sarb
mov
cmpsl
cmp
and
and
mov
mov
add
push
mov
pushl
and
dec
or
insl
or
and
push
cwtl
sbb
lret
adc
jns
push
mov
and
out
repz
inc
dec
cmpsb
stos
xor
mov
cmp
pushf
out
xchg
sbb
pushf
ret
outsl
out
call
shl
lcall
xchg
lods
push
inc
test
ror
dec
out
lcall
dec
cmc
test
out
dec
les
iret
aad
fwait
sarb
movsl
out
pop
test
xchg
leave
je
add
mov
dec
repz
jne
lcall
aam
adc
mov
jge
cltd
dec
sarl
sbb
add
cli
lret
dec
lds
and
pushf
mov
cltd
xchg
mov
inc
dec
sbb
movsl
shr
out
sbb
or
mov
cltd
dec
sbb
pop
mov
aam
inc
loopne
test
test
inc
lret
sarl
test
in
ljmp
xchg
test
aas
push
jl
mov
cmc
dec
in
in
dec
insl
xor
jo
into
in
dec
push
clc
xchg
outsl
cmpsl
in
add
pop
fstps
mov
xor
out
repnz
sub
jae
in
les
in
cwtl
mov
into
jge
cmc
and
in
xchg
test
adc
into
cwtl
mov
sbb
lock
mov
fdiv
std
in
out
dec
je
sub
mov
adc
lcall
into
shlb
ljmp
lods
or
movsb
je
xor
sti
mov
pop
sub
loopne
popa
shll
test
mov
sbb
dec
test
out
xchg
and
mov
loopne
rclb
rorb
xlat
repnz
lret
or
in
or
mov
in
test
dec
rorl
mov
sbb
pushf
inc
cmp
js
out
cmpsb
aas
icebp
add
shrb
jmp
sbb
push
mov
mov
jne
test
sub
jbe
dec
pop
cli
and
mov
es
sbb
mov
test
movb
ret
adc
inc
imul
dec
cmc
aad
push
fs
add
add
xor
or
test
into
and
div
or
cmp
cmp
cld
cmpxchg
xchg
cli
xor
xchg
ja
mov
lahf
adcb
out
xchg
mov
dec
and
fisttpll
mov
rcll
int
out
xchg
stos
movsb
inc
fdivl
jno
xor
shl
xchg
into
int
andb
fldcw
iret
shlb
sahf
out
add
in
or
pusha
lcall
mov
inc
push
fwait
jne
mov
xor
je
add
jmp
mov
jmp
cmp
mov
xor
sarl
lret
lahf
adc
ror
shl
jae
and
sub
add
ret
popf
out
add
sbb
mov
out
mov
dec
or
mov
into
push
call
enter
sub
mov
imul
push
iret
rclb
xchg
xchg
aaa
dec
adc
das
mov
test
sarl
out
or
sbb
pop
in
loop
or
adc
mov
cmc
pop
jae
mov
sbb
cli
sbb
or
test
push
hlt
sub
add
and
addr16
push
inc
cmc
mov
cmp
insl
movsb
jg
jle
pop
xlat
pushf
sbb
pop
xor
ffreep
or
lret
sub
push
dec
pop
xlat
sub
inc
add
pop
jns
lret
call
xor
int3
dec
shll
xchg
roll
fbld
mov
ror
test
or
testb
std
cmpb
je
mov
adcb
out
jmp
or
ret
int
jecxz
shlb
insl
add
int
push
je
leave
scas
sub
fstl
or
or
cmpsl
pop
testl
data16
jne
mov
fdivp
int
iret
popf
adc
add
lea
jecxz
jne
mov
mov
lcall
adc
push
sbb
dec
test
repnz
jmp
call
adc
push
ljmp
xchg
cmp
dec
ret
push
jae
shl
xor
stc
adc
repnz
mov
fiadds
nop
xchg
repz
sbb
in
lock
rol
mov
loope
dec
sar
lods
in
xchg
mov
lret
mov
push
repz
mov
and
sbb
jbe
xchg
dec
pop
test
ja
fs
or
and
and
inc
rcr
out
fnstsw
loopne
sti
xchg
rclb
ret
sub
shll
or
mov
fs
jp
aad
sbb
repz
ret
aad
in
subl
loopne,pt
jne
cs
xor
mov
mov
pop
xchg
rorb
xchg
testb
pop
lock
push
add
inc
test
rcrb
and
mov
roll
ret
loop
mov
xchg
dec
mov
inc
xchg
test
outsl
xorl
pop
push
or
mov
jmp
int3
les
mov
repz
and
push
je
mov
rclb
int3
or
ret
cli
shr
out
insl
pop
ret
test
fs
lret
ror
ret
pop
in
lea
aam
pop
cmp
or
js
pop
rorb
lods
pop
jae
fdivrp
repnz
dec
test
inc
inc
xor
or
push
jmp
mov
inc
mov
ss
ret
arpl
lds
ret
test
aas
mov
ret
xor
mov
in
movsl
pop
out
pop
fsts
int3
addr16
movsl
test
mov
add
adc
cli
dec
test
adcb
dec
stc
mov
inc
arpl
les
faddl
rorb
sub
rorb
fsubl
in
jg
mov
in
push
mov
popf
push
mov
fstpl
add
jnp
push
in
imul
movsl
fstps
push
stc
cmp
cmp
stos
ljmp
insb
js
sbb
push
inc
add
sbb
adc
xor
rcr
cmp
or
xchg
shrb
int3
in
pop
sbb
in
ljmp
in
jbe
mov
int
or
repz
callw
xchg
fxch
jp
dec
inc
mov
in
icebp
lea
dec
ret
subb
lods
popf
adc
rcll
jl
fcompl
cmpsl
jne
popa
pop
testb
push
and
pop
xor
add
adc
lret
jg
jns
and
mov
push
dec
pop
cmp
sahf
test
cmpb
aam
adc
aad
fidivrl
aas
sub
push
push
js
jb
dec
add
mov
dec
fldt
das
call
mov
jns
repz
clc
add
or
sbb
mov
out
std
mov
jbe
sbb
and
repz
mov
pop
add
leave
mov
inc
push
out
insl
xchg
cmc
jae
dec
inc
and
mov
push
add
and
call
ret
test
rcll
inc
hlt
and
cs
mov
fiadds
mov
mov
fldcw
push
adc
xor
andb
test
ja
fldl
leave
rcl
adc
ss
mov
test
xchg
cli
ljmp
nop
xchg
fsubl
inc
fldl
sub
aam
lds
jae
filds
int
or
dec
aad
mov
push
pusha
adc
sbb
sub
xlat
imul
dec
leave
adc
cwtl
or
jno
ljmp
add
dec
dec
movsb
mov
add
sbb
pop
adc
pusha
out
pop
sub
mov
rclb
dec
pop
add
add
ss
sub
insb
test
call
dec
mov
mov
xchg
les
pop
xchg
popa
ror
jmp
mov
outsb
adc
xchg
cmc
pop
int3
wbinvd
jecxz
lret
cmp
jae
daa
shrb
mov
sbb
aam
aad
jge
pop
dec
or
insb
enter
jg
hlt
mov
loope
mov
push
movsl
mov
push
lds
xchg
imulb
dec
aaa
jb
pop
sbb
popa
shll
leave
scas
movsb
lcall
mov
dec
and
jne
sarl
rcl
sbb
shll
pop
xchg
xlat
mov
mov
ret
mov
push
dec
and
mov
sub
or
leave
sbb
mov
or
jmp
mov
xchg
sbb
mov
negb
subl
cmc
push
mov
hlt
or
push
xor
and
push
sbb
pop
pop
cmp
add
cld
aam
ret
repz
jbe
inc
lods
adc
ret
daa
inc
mov
mov
arpl
fcomi
sub
mov
sbb
in
lods
push
xor
lock
sbb
das
push
in
dec
sbb
shr
fisubs
lret
jecxz
inc
add
test
sbb
mov
push
lock
xor
insl
rol
pop
rcrb
std
adc
sub
mov
dec
out
shlb
out
or
inc
nop
outsl
and
and
sbb
xlat
mov
mov
cs
adc
lret
xor
icebp
shlb
xchg
pop
mov
lahf
xchg
sbb
in
xor
push
shlb
aad
shl
cmc
add
cld
xor
dec
inc
frstor
rcl
aas
dec
bound
mov
mov
orl
bound
shl
aad
xlat
mov
into
les
into
andb
addb
cmp
sbb
stos
in
leave
and
or
lock
shl
lret
std
mov
sub
mov
shl
shlb
loop
or
loopne
sahf
mov
roll
js
lock
in
and
sub
aaa
cwtl
pop
mov
mov
mov
jns
push
aam
sbb
shl
pop
pop
push
leave
mov
lret
bswap
xchg
or
add
pop
lahf
add
test
addb
xchg
cmp
jns
movsl
sahf
imul
int3
ljmp
pop
int3
xchg
jg
mulb
sbb
out
in
fsubp
push
xchg
rcrl
rcrb
sbb
insb
repz
add
loope
les
int
pop
pop
xchg
push
aaa
mov
add
or
dec
shrl
insb
test
shlb
lret
into
rol
push
pop
out
mov
push
xchg
sti
xchg
push
lret
rcll
test
lret
cmp
cmp
outsl
fstps
nop
lret
aam
push
mov
pop
xor
aad
push
xlat
aam
sbb
jmp
sti
filds
ffreep
stos
lret
roll
inc
lds
jecxz
jns
fsts
mov
lret
ljmp
inc
push
jl
fbstp
aam
fwait
xor
add
or
dec
repnz
xchg
cs
out
xor
push
fwait
mov
adcb
arpl
test
sbb
xor
or
clc
xchg
inc
fbld
pop
notl
mov
roll
jge
repz
clc
jno
aam
mov
jg
test
inc
mov
leave
dec
lods
sahf
leave
jb
cwtl
outsl
mov
hlt
mov
ss
cwtl
into
adc
mov
fstl
mov
add
mov
out
cltd
xchg
adc
scas
push
addr16
rcrb
rorl
jne
mov
push
push
xchg
movsb
filds
loope
jp
pop
aam
adc
test
mov
adc
enter
iret
ds
pop
and
gs
std
cmp
cmp
pusha
adc
rolb
test
dec
jae
mov
dec
pusha
mov
dec
xor
negl
add
jne,pt
mov
pushf
mov
shlb
or
push
data16
mov
add
mov
inc
icebp
inc
out
negb
dec
or
rorl
mov
jle
lds
shlb
sub
inc
test
adc
dec
dec
and
popf
sub
sahf
dec
divb
push
xchg
push
cmpsb
repz
mov
in
ds
inc
mov
fbld
mov
xchg
inc
sub
enter
cmpsb
notb
push
daa
jbe
test
cmpsb
push
sbb
imull
cs
mov
push
leave
jle
lods
mov
cli
dec
mul
xchg
mov
cltd
test
roll
and
adc
jp
rolb
aaa
rcl
mov
xchg
adc
mov
jne
mov
cli
jmp
popa
out
fldt
add
ja
aam
out
push
push
adc
jg
les
dec
test
adc
mov
mov
mov
cli
xor
cld
nop
adc
adc
jge
mov
out
pop
mov
jge
fiadds
xchg
hlt
jp
adc
jne
dec
jbe
cwtl
sbb
filds
sbb
inc
fwait
push
int
mov
outsl
xchg
fwait
pusha
rcll
testb
mov
jno
xor
divb
fdivr
cmp
mull
adc
jb
mov
jge
hlt
lret
lcall
ljmp
mov
loope
mov
push
push
in
jg
mov
xor
jno,pt
mov
adc
fsubs
add
mov
adc
sbb
sbb
repz
cld
daa
nop
xor
pop
and
ds
mov
cmp
dec
and
sbb
jbe
rcrl
xor
outsl
mov
orb
mov
mov
inc
mov
dec
lret
movsb
jecxz
adc
jnp
shl
and
es
int
clc
ds
and
pmulhw
ret
pop
sbb
leave
mov
insl
pop
mov
inc
or
movsb
inc
repnz
rcr
int
xor
or
pop
ljmp
pop
dec
popf
int3
clc
stos
mov
out
int
repnz
sarl
clc
pop
xchg
or
mov
sbb
pop
rcrl
fdivrs
bnd
and
cmp
xor
lock
push
sbb
int3
outsb
fmulp
fucomp
mov
push
cltd
add
lds
push
mov
add
sub
filds
or
mov
add
in
cli
sub
mov
pop
sbb
mov
testb
jecxz
lds
roll
out
lods
or
enter
cmc
es
dec
jbe
dec
lret
ds
and
clc
ret
push
shll
push
ss
iret
rclb
ret
and
fimull
xchg
jns
pop
add
adc
bnd
sahf
and
and
dec
ret
mov
xor
ljmp
inc
xor
int3
loopne
shlb
jb
mov
mov
in
sub
xor
inc
movsl
xor
push
into
lret
aas
out
pop
dec
and
xchg
mov
jmp
into
xchg
iret
or
mov
and
loop
stos
mov
lret
rolb
jo
loope
jb
cmp
jp
shll
or
repz
xor
shll
push
xlat
cmp
jb
loopne
icebp
lds
add
sbb
in
dec
std
popf
roll
inc
es
icebp
or
sti
ja
fbstp
jo
addl
jno
dec
or
les
sbb
jo
nop
mov
add
xchg
sbb
enter
or
adc
or
adc
add
test
jmp
sub
leave
imul
lods
mov
xorl
into
pop
jae
rolb
lds
stos
repnz
stos
int3
lret
loop
fdivl
cli
mov
push
cs
aas
int
fsubl
dec
sbb
mov
jb
ja
cld
jne
add
lcall
xor
jae
inc
mulb
mov
xchg
dec
adc
adc
xor
test
adc
leave
pop
jbe
xor
mov
popa
fs
sub
cli
mov
xchg
fwait
dec
adc
dec
jg
add
add
ret
rol
mov
push
cwtl
test
inc
mov
xor
add
add
jmp
xchg
mov
inc
lahf
repz
jbe
jo
int
loope
in
test
pop
and
xor
cmpsb
cltd
fidivl
shlb
xor
lcall
or
fs
aad
pop
fnstenv
loope
xchg
fucomip
aas
jmp
ja
mov
pop
daa
mov
fucomp
mov
or
lds
leave
out
test
cmp
dec
loopne
mov
mov
movsl
rorl
fidivl
jae
stos
push
fcmovnbe
jae
mov
sbb
cmp
nop
inc
xlat
imul
inc
int
data16
lds
mov
repnz
insb
mov
lea
push
and
pop
shr
out
dec
pusha
stos
cmpsl
hlt
adc
loop
xor
sub
inc
pop
xor
xor
iret
fneni(8087
cmc
aaa
pop
adc
sub
adc
push
sub
jno
push
pop
mov
xor
aam
leave
inc
repz
lret
dec
out
and
loope
sbb
jbe
leave
rcr
mov
mov
mov
pop
dec
push
cmp
xchg
aaa
test
add
out
aaa
add
push
xor
adc
adc
lret
cmp
mov
test
xlat
dec
leave
test
cmpsl
jo
cli
inc
dec
or
mov
icebp
rclb
and
stos
and
push
add
or
lock
dec
jo
dec
ljmp
xchg
push
mov
mov
shl
roll
aad
pop
dec
int
xorl
xchg
inc
in
xor
cmpsb
or
pop
rclb
test
fstps
stos
lcall
jne
inc
xor
mov
enter
or
xor
rcll
repz
or
repz
mov
add
dec
pusha
xor
sahf
lock
ret
mov
xor
loop
test
fyl2x
ja
mov
or
leave
dec
lea
enter
aas
sar
shl
dec
adcl
mov
lds
sbb
leave
jae
sahf
xorl
dec
sbb
subl
ja
dec
shll
mov
pop
mov
iret
sbb
ret
icebp
mov
dec
add
in
and
mov
std
stos
test
and
negl
cmp
mov
dec
scas
dec
add
stc
and
in
dec
and
insl
lock
pop
dec
repnz
jb
mov
jecxz
mov
sti
mov
pop
dec
mov
mov
mov
stos
ret
push
or
cmpsl
xchg
lds
inc
ljmp
ret
push
out
roll
fldenv
shlb
adc
icebp
ret
lods
dec
mov
mov
dec
xchg
xor
jae
push
lea
fucomp
jmp
inc
stc
loopne
hlt
mov
js
in
cs
cmp
pop
enter
add
dec
inc
add
ktestw
xor
mov
xchg
jo
sahf
xor
dec
jno
pop
pusha
jb
fdivrl
repnz
dec
out
mov
mov
into
outsb
idivl
stos
hlt
cli
and
es
push
out
sbb
mov
xchg
fdivl
jo
loopne
dec
push
int3
xor
dec
mov
repnz
rclb
test
mov
inc
lahf
mov
sbb
cmpb
jbe
mov
repnz
jno
or
dec
add
bound
fisttps
sti
or
lods
mov
out
push
mov
nop
mov
imul
fistps
dec
enter
loope
cmc
shl
jmp
int
xchg
mov
lcall
fxch
aas
int3
enter
add
push
adc
and
mov
insl
or
shll
xor
mov
sbb
shlb
test
mov
rcr
cmc
leave
mov
xor
mov
mov
mov
test
sbb
iret
jb
aaa
lock
fiaddl
loope
fucomi
test
shr
lret
mov
xchg
jmp
push
add
jmp
es
sub
lcall
ljmp
pop
inc
addb
cli
cltd
cmp
iret
ret
and
je
fnstcw
jo
mov
daa
or
mov
push
dec
and
aam
lock
notrack
sbb
out
out
aas
leave
cmp
sti
pusha
dec
push
mov
dec
int3
cmp
into
xor
fstps
sub
dec
hlt
sub
aam
aam
jmp
aas
ret
stc
dec
pop
lahf
cmp
aad
sbbl
enter
sti
dec
cmp
add
rorb
mov
lea
push
nop
daa
xlat
leave
inc
xorl
adc
and
repnz
into
xor
push
mov
repnz
sti
dec
dec
jb
std
into
jle
or
in
mov
loop
dec
rolb
sub
les
int
adc
add
out
hlt
mov
shll
fisttpll
aam
test
mov
push
jge
xor
aad
pop
movb
lahf
jnp
mul
mov
add
cmp
mov
pop
stos
gs
inc
ret
or
mov
push
mov
int
je
pop
pop
cltd
jns
sbb
inc
lds
ljmp
mov
add
orb
xor
rcll
dec
sbb
lret
shrl
push
daa
adc
push
out
leave
jecxz
repz
mov
and
sbb
out
mov
cmp
call
dec
leave
fisttpll
mov
add
bnd
pop
mov
and
leave
fdivs
inc
sub
test
insb
push
addr16
push
rcll
jge
cli
ffree
cmp
sub
fiadds
insl
mov
dec
and
cmp
fldcw
mov
aad
lock
ror
popa
ja
mov
pop
not
inc
inc
icebp
add
ret
shl
jo
stc
pusha
dec
jae
addb
xor
pop
sub
inc
mov
orl
push
lcall
out
leave
xor
pushl
xor
dec
or
jne
testl
fistps
test
shl
pop
push
test
inc
out
js
mov
mov
daa
jb
dec
mov
xor
lret
add
sbbl
imull
or
dec
add
js
in
sbb
shl
xchg
rorl
push
sub
dec
jns
popf
fucomi
add
test
push
add
dec
mov
fmull
inc
xor
cmpsl
push
mov
or
mov
pop
enter
sub
add
sub
adc
sbb
sub
fldt
inc
xchg
pop
dec
dec
mov
pop
xchg
inc
lret
mov
sbb
mov
lea
or
and
jae
xlat
inc
fnstenv
aam
clc
pop
iret
mov
jne
aam
fildll
or
and
pop
dec
or
mov
fcmovnbe
push
icebp
into
sar
xor
dec
loope
stos
or
loopne
push
repnz
scas
rcll
mov
test
roll
mov
lds
sub
decb
xlat
pop
fadd
sti
loopne
add
rclb
rorl
lahf
xor
push
sub
push
roll
sbb
add
sti
add
push
dec
sahf
dec
insl
xorb
add
jnp
or
dec
shl
jmp
filds
dec
jge
xor
mov
in
jb
sbb
iret
pushf
fadd
lret
rcll
sub
push
call
in
xor
stos
lret
aad
dec
inc
or
adc
pop
mov
jmp
or
adc
sub
loopne
pop
push
inc
mov
pop
enter
mov
xor
clc
aaa
ljmp
xchg
mov
mov
pop
pusha
dec
in
fnstsw
push
sahf
ret
jmp
out
mov
cmpsb
and
pop
leave
outsl
mov
fimull
inc
repz
jne
arpl
imul
xor
stc
cmp
fimull
sub
rcll
pop
rol
test
mov
out
psubsw
jmp
shr
jne
mov
push
cld
ret
xchg
sti
mov
and
lds
jecxz
fisubrl
add
lret
test
mov
cmc
push
jl
idivl
dec
mov
sahf
sbb
push
rolb
pusha
icebp
push
std
dec
or
jecxz
fildl
inc
popa
sub
add
mov
xor
and
and
cmp
jg
add
dec
sbb
mov
in
loope
and
insl
popa
push
roll
aam
mov
out
pop
clc
adc
or
add
call
fmul
inc
and
sbb
cmp
lods
xor
push
sub
or
out
inc
sti
push
or
fbstp
cmpsb
sub
mov
add
jg
repnz
lock
cmp
or
and
dec
xchg
xchg
adc
mov
mov
fldt
in
lret
std
mov
sub
adc
or
cmc
repnz
mov
adc
icebp
adc
or
dec
and
ret
pop
adc
loop
aam
mov
loope
jmp
pop
rcll
mov
inc
mov
movsb
cmc
in
lds
push
sbb
mov
loope
fstpl
hlt
mov
cmp
bnd
mov
push
adc
or
pop
adc
rorl
add
add
sti
cmc
js
pop
leave
lock
je
cld
leave
inc
xor
and
scas
xor
pop
sub
lret
ficoml
mov
inc
inc
cmpsl
in
stc
dec
dec
test
xorl
cmp
jmp
loope
addb
xor
pop
push
adc
enter
xor
loopne
call
in
jmp
xor
add
lret
pop
aam
jnp
les
aam
fisttpl
aad
ffree
jle
mov
rcrl
test
jno
insl
repz
mov
adc
testl
int3
mov
test
leave
test
out
xchg
inc
jne
movsb
sub
lahf
rcrb
fnstcw
out
ret
cmp
cmpsl
dec
clc
out
mov
xor
pop
repnz
rcr
dec
vpaddsw
lods
fcmovne
ja
ret
pushf
mov
not
jnp
pop
loopne
sahf
mov
push
fsts
mov
cmpsb
xchg
xchg
nop
std
out
or
add
push
cmpsb
test
ret
push
xor
mov
sub
dec
xor
ss
jmp
fnstenv
mov
mov
mov
loop
rcrb
inc
jae
stos
xchg
inc
cli
sub
scas
xorl
lcall
test
flds
rcpps
mov
pop
rol
or
leave
lds
dec
mov
clc
mov
roll
rcll
xor
xor
out
mov
shl
sub
sbb
cli
add
pop
sbb
in
jne
push
lock
ljmp
enter
cmp
icebp
mov
js
addr16
mov
mov
loope
lret
dec
repz
lahf
test
in
sbb
sarb
inc
adc
or
xchg
into
loop
popf
in
jge
leave
popf
xchg
call
jge
or
and
dec
mov
jbe
mov
je
inc
mov
adc
cmpl
jbe
inc
push
sub
iret
mov
fcmovne
sbb
loope
adc
or
inc
mov
js
pop
leave
inc
aaa
loope
es
int
mov
out
test
mul
test
sar
test
cli
cwtl
xchg
xor
dec
rolb
dec
shll
shl
sub
adc
test
ss
or
jb
push
sbb
add
addb
mov
mov
xor
mov
fildl
leave
test
repnz
in
xlat
or
jl
shrb
inc
loope
push
add
xchg
inc
aad
cmp
in
cmp
pop
int
xor
into
xor
divb
les
sbb
aas
fsts
popf
cli
incb
aad
ret
pop
fcmove
adc
xor
mov
mov
lret
shll
push
inc
ret
inc
inc
adc
dec
or
add
cli
xor
fsub
add
dec
xchg
mov
lahf
cmp
rolb
inc
inc
out
dec
add
sbb
xor
int
pop
mov
xor
dec
fildl
mov
test
subb
jno
fstl
int
jo
add
xor
cmp
pop
and
xlat
movsl
sbb
add
add
icebp
je
cmp
and
dec
out
cld
mov
sub
hlt
out
xchg
lret
rcll
mov
xor
vcvtpd2ps
xor
je
leave
addr16
pop
incb
sub
mov
scas
mov
ret
mov
ljmp
add
sub
push
fstps
xchg
stos
mov
xor
out
mov
das
mov
mov
insl
jbe
pop
or
repnz
cmp
fs
add
mov
sbb
rolb
add
and
push
rclb
addl
mov
or
into
cmp
jl
stc
xchg
out
lds
xchg
enter
mov
jb
push
out
xor
mov
mov
dec
inc
or
mov
jb
icebp
push
rcr
fwait
test
jno
ficoms
fisttpll
leave
mov
imul
cwtl
imul
dec
sub
inc
cmpl
inc
stos
mov
stc
rol
sbb
cmp
sbb
mov
arpl
mov
icebp
dec
lock
lret
mov
mov
aam
in
fld
std
xor
jecxz
xor
test
xchg
jb
mov
add
cmp
pop
ss
dec
shl
jb
xor
pop
mov
mov
icebp
sub
pcmpeqb
xchg
mov
call
mov
shrb
scas
adc
shrl
stos
push
subl
icebp
lds
mov
cmpb
pop
leave
push
mov
xor
add
jecxz
pop
pop
pop
popf
xor
cs
ficoml
push
call
adc
out
sub
cmp
lret
loop
test
xor
xor
subb
and
pushf
or
pop
sarb
pop
mov
pop
xchg
mov
arpl
sub
stos
or
jno
and
sub
test
push
lock
add
and
inc
sbb
int
lret
dec
stc
add
mov
cli
add
pop
cmp
lds
ret
push
in
sub
jnp
ss
xchg
mov
adc
mov
aam
mov
shl
rorb
leave
div
xchg
mov
std
loope
mov
shll
push
leave
dec
mov
jns
rcr
lods
rol
jecxz
mov
mov
mov
push
and
rorl
push
or
lds
pop
jg
xchg
aam
shl
fldenv
jmp
cmp
jg
aad
nop
leave
inc
nop
enter
dec
pop
jmp
lahf
dec
pop
add
aad
loop
mov
clc
or
inc
mov
inc
jo
dec
leave
test
jne
and
test
js
fiaddl
rorl
mov
pop
sub
pusha
sbb
jno
leave
mov
inc
outsb
sbb
jbe
mov
or
push
jne
xor
cmc
or
sbb
shrb
shr
rcll
stc
add
inc
movsb
int
mov
mov
shr
xchg
insb
shll
and
aam
pop
into
loope
jecxz
ja
dec
dec
iret
loopne
adc
xor
int
jge
mov
mov
mov
mov
movsbl
faddp
add
inc
jle
andb
iret
xor
push
nop
shlw
dec
lret
imul
adc
pop
call
and
enter
dec
jmp
lret
stos
adc
add
dec
or
or
sub
bound
cwtl
iretw
ficoms
fcoms
cltd
fsubl
rcl
out
cmp
sarl
pushf
push
mov
adc
inc
pop
add
xor
xchg
push
aad
int
cmp
xor
je
insl
cmp
aad
dec
test
pop
cli
clc
pop
mov
jb
push
jle
xor
les
cld
cmpxchg
hlt
adc
out
jmp
ret
dec
push
sbb
jo
ret
in
int
push
pop
push
test
adc
push
lahf
or
iret
add
pop
lock
jb
add
mov
cmpsl
xchg
mov
imul
dec
and
lods
mov
stc
mov
test
dec
xchg
lea
xor
loope
test
inc
xor
jbe
scas
mov
ja
xchg
pop
ja
push
lods
jno
test
leave
aad
jo
lods
add
cld
mov
sbb
pop
fisttps
cltd
inc
pop
lods
ud1
adc
pop
add
out
shrl
mov
xchg
int3
push
jecxz
les
adc
int
and
mov
xor
and
stos
push
stc
int
sbb
lds
pop
imul
roll
cmp
add
rclb
xor
sbbb
lds
mov
jmp
fldt
dec
imul
and
xor
xchg
pop
in
jne
lret
hlt
shlb
std
enter
les
int
ret
outsl
lock
mov
jne
aad
or
ret
imul
sub
add
into
jle
fldcw
movsl
addr16
mov
test
push
xchg
mov
adc
inc
jbe
imull
sbb
xor
xor
orb
inc
icebp
mov
xor
int
jbe
lret
lds
aam
mov
adc
sub
int3
push
dec
inc
int
push
mov
movsl
mov
rcl
leave
sti
cmpb
inc
test
dec
jg
nop
aas
jge
icebp
dec
or
fmul
or
out
mov
jb
dec
pushf
arpl
sbb
subl
fstpt
popl
xchg
xchg
mov
sbb
inc
mov
test
lea
repz
movsb
push
shrl
xchg
mov
test
ljmp
jae
or
fisttps
je
xor
push
daa
xor
ret
xor
and
push
test
xor
jge
add
pop
test
jae
mov
lret
mov
inc
jo
xchg
inc
sbb
xor
cmpsl
jae
and
inc
lret
sbb
std
pop
vsqrtps
mov
loop
arpl
mov
mov
push
les
dec
lds
incl
inc
movsl
or
push
popa
mov
test
mov
loopne
inc
inc
adc
sub
sub
rcrl
in
ljmp
leave
imul
and
adc
bound
and
enter
xchg
cmp
aam
js
inc
sti
adc
jmp
mov
add
xor
jns
jecxz
xor
and
mov
dec
in
stos
mov
push
cmpsb
sub
leave
dec
mov
xor
jecxz
call
push
mov
nop
fstps
cmp
addr16
push
test
or
dec
mov
mov
dec
out
mov
mov
lods
mov
cld
test
addl
pop
fisubl
push
or
add
and
pop
xor
push
mov
mov
popf
add
dec
sti
mov
jmp
or
jns
roll
add
ljmp
add
shlb
xor
mov
rol
mov
mov
test
or
cmp
fadd
mov
pop
call
pop
pop
add
shll
xor
mov
aad
sub
or
push
or
fnstenv
pop
dec
sub
sbb
xchg
lahf
jecxz
ffree
or
ret
xorl
test
push
xchg
mov
lret
jno
and
mov
mov
xor
push
cld
dec
or
jne
insl
in
add
mov
xor
or
xor
hlt
call
loop
in
iret
out
stc
push
fiaddl
loop
dec
outsl
xor
stos
cmp
aas
dec
lret
sti
mov
out
out
and
lds
out
xchg
cmp
stos
hlt
and
jae
inc
out
es
adc
filds
cmpsb
mov
lret
adc
adc
vpunpcklwd
bound
mov
cmp
lahf
lcall
and
gs
xlat
xor
adc
inc
mov
push
or
xchg
aaa
enter
mov
push
and
adc
pop
sub
sbb
in
or
pop
aad
sar
sbb
xor
mov
rolb
daa
std
mov
incb
mov
rorl
xchg
lret
dec
pop
push
pop
or
add
add
sahf
and
pop
addl
lahf
scas
push
xor
dec
cli
mov
adc
adc
test
jnp
arpl
mov
mov
dec
movsl
xor
sbb
mov
xor
dec
loop
inc
rolb
mov
movsl
pop
leave
int3
insl
enter
flds
movsl
pop
add
test
lea
imul
add
jno
repnz
jae
ds
push
loope
aam
inc
sahf
add
shll
push
stos
xor
push
dec
ja
and
sub
pushf
andl
dec
push
add
push
loope
loopne
pop
mov
flds
cld
iret
inc
pop
pop
div
cmpsb
jnp
ror
enter
stos
and
and
dec
movsb
lock
mov
shlb
jmp
cld
lret
push
mov
mov
mov
lret
shlb
into
and
xor
lret
sub
gs
add
cmp
jno
mov
jmp
ret
lret
mov
repz
cmpsb
pop
andl
repz
sub
jne
push
dec
xor
add
popf
adc
test
pop
div
jg
addb
xchg
enter
sti
inc
icebp
xchg
xchg
leave
popa
mov
xor
inc
jmp
pop
in
and
mov
test
sub
lret
icebp
loope
mov
inc
add
mov
dec
or
xor
ret
test
pop
fbstp
fstps
push
cmp
and
bound
jl
push
jmp
dec
xor
mov
test
xchg
mov
outsl
sbb
push
out
imul
xchg
outsb
subl
sub
jb
mov
scas
jb
aas
jecxz
jnp
mov
push
or
fwait
mov
push
xchg
jns
psrlw
ljmp
lahf
inc
xor
adc
jnp
jne
fmul
je
jo
dec
sbb
clc
repz
lahf
mov
jo
enter
jbe
jecxz
clc
dec
cmc
movsl
adc
sub
mov
push
xchg
and
lret
dec
or
dec
pop
inc
dec
add
push
xchg
add
jne
sbbl
sbb
mov
sbb
pop
mov
cmpsl
inc
add
int
xor
and
jo
test
sbb
mov
ror
pop
icebp
mov
sub
ret
les
icebp
cmp
adc
shlb
stos
jno
movsb
and
loope
sti
int
mov
cmp
sbb
ljmp
jb
roll
sbb
and
dec
dec
sarl
rorl
or
or
jnp
sbb
and
scas
imul
leave
sbb
clc
xor
sti
leave
add
sub
repz
push
and
shlb
add
pop
add
enter
loope
dec
movsl
adc
lret
dec
and
out
adc
sahf
sbb
loop
repz
repnz
mov
or
ds
inc
or
lret
fdivrl
jae
and
xchg
test
sarl
cmpl
test
mov
add
and
jecxz
pop
fisttpll
repz
popf
inc
mov
add
ljmp
fld
leave
xchg
push
loopne
push
jnp
iret
adc
sti
push
je
dec
sub
mov
mov
jmp
icebp
mov
cmpl
dec
sbb
cli
icebp
sbb
mov
movsl
mov
push
add
adcl
lds
fstps
int
lcall
jo
int3
ret
cmpsl
or
cltd
pusha
mov
cmpsb
subl
aad
fldl2t
imul
cli
mov
mov
adc
inc
adc
dec
fcmovne
xor
cs
div
popa
aas
sub
add
leave
or
out
in
mov
testl
cli
andb
ljmp
add
pop
in
fdivl
adc
aas
add
push
mov
pop
push
ud2
dec
xor
lock
inc
adc
leave
jno
sbb
enter
xchg
cmp
dec
and
cmp
jg
mov
xchg
ljmp
popa
into
loopne
pop
push
dec
and
inc
cmpsl
pop
lret
lock
test
sbb
aas
push
mov
mov
add
rcll
mov
cli
mov
xlat
add
xor
data16
push
and
pop
push
sbb
mov
xchg
cmp
sarl
cmp
in
jge
stos
into
repz
icebp
xor
scas
pushl
sbb
fdivl
adc
dec
inc
mov
xchg
out
rcl
inc
mov
jmp
cmpsb
aam
mov
fisubs
xor
dec
sbb
and
xchg
lds
je
mov
cmpsb
cwtl
dec
sarl
mov
adc
or
shll
mov
es
add
jmp
jne
push
mov
or
cmp
stos
mov
cmp
leave
leave
leave
clc
aad
mov
jb
rcl
mov
pop
pop
int
shr
xchg
push
aam
les
push
sbb
jmp
out
repz
das
pop
push
hlt
lds
jecxz
push
sbb
jg
push
ljmp
cli
lahf
and
and
and
jb
mov
ja
je
jmp
and
push
fsts
push
sbb
fadd
ljmp
xor
pusha
mov
addr16
flds
or
popf
nop
lds
inc
sub
push
out
test
push
push
pop
std
rol
aas
cld
xor
mov
jne
imul
pop
rolb
mov
mov
mov
test
incb
xor
js
inc
out
shr
test
add
lods
add
xchg
ja
or
xchg
idiv
xchg
dec
jns
rcll
add
test
jae
push
ljmp
std
std
jb
stos
dec
add
xor
mov
lret
xorl
leave
jnp
sbb
shrl
and
mov
inc
aam
out
jbe
inc
mov
arpl
mov
icebp
inc
cmp
in
lods
mov
filds
xchg
movsb
outsl
mov
sub
pop
leave
push
and
cltd
inc
aad
mov
mov
aaa
test
mov
popf
sbb
cld
shll
scas
test
outsb
aam
xchg
jns
nop
cmp
pop
and
in
add
test
rorl
push
stos
or
add
pusha
mov
mov
ja
fwait
shl
add
sub
xor
stos
rorl
cwtl
mov
push
xlat
in
ret
jle
mov
add
imul
loop
sbb
mov
push
or
inc
add
cmp
daa
mov
jl
mov
or
arpl
or
pop
pop
int3
fcmovnb
or
pop
in
insl
lret
inc
lds
push
xlat
in
scas
out
mov
xchg
les
add
in
repz
lcall
pop
dec
ror
insl
lret
add
ret
mov
dec
pop
cmp
mov
fistpl
xchg
jns
mov
shrl
inc
sarl
rclb
aas
out
add
sti
mov
das
push
addr16
rorb
leave
mov
movsb
lock
dec
cld
adc
andl
dec
sahf
push
cli
dec
jp
mov
jns
shlb
or
sub
shll
push
cmpsl
pop
or
fwait
movsb
cmpsb
decb
or
inc
lds
or
push
ja
stc
mov
ja
cmc
dec
mov
mov
sub
sbb
jns
jmp
leave
call
dec
mov
inc
icebp
enter
fcmovb
and
mov
rol
icebp
mov
repz
mov
stc
dec
cld
add
std
jbe
rorb
fcomps
stos
stc
cs
fnstenv
stc
emms
bound
mov
add
call
cmp
jne
adcb
sbb
mov
lock
or
adc
test
jge
ds
sub
and
dec
aaa
push
add
fnstcw
rolb
inc
pop
mov
cmc
add
dec
mov
enter
mov
cmp
int
xor
ret
mov
lret
or
cmp
pushf
movsl
loope
inc
sbb
fsubrs
add
or
add
lcall
inc
cmc
scas
lret
sbbl
mov
in
xor
stos
popa
movsb
js
into
cmp
rcl
ret
jl
fcom
mov
jmp
jmp
ret
ljmp
xchg
cs
pusha
xor
inc
sbb
dec
std
jb
icebp
or
fadd
xchg
dec
repz
and
pusha
call
jmp
mov
test
dec
divl
jo
dec
mov
ja
push
add
ds
mov
or
aaa
loopne
leave
mov
ds
out
mov
xor
scas
lock
ret
mov
jl
mov
inc
test
fwait
rorb
rol
pop
cmp
popa
jge
pandn
mov
shl
or
sbb
testl
sar
cmc
addr16
mov
loop
and
jp
sub
add
out
mov
in
xchg
rorl
int
daa
sub
loop
push
stc
fmuls
xor
test
fiadds
or
and
cmp
leave
sbb
lret
hlt
les
lret
cmp
int3
jne
mov
loopne
icebp
mov
rorl
call
cmp
mov
sbb
vprotd
dec
mov
test
mov
icebp
mov
adc
mov
dec
or
jnp
pop
sub
iret
add
xor
ret
inc
xorl
adc
sub
andnps
out
leave
rcll
ds
jne
mov
imulb
dec
xchg
mov
push
mov
jbe
dec
push
shll
test
mov
push
adc
fnstsw
aaa
neg
and
adc
jo
test
and
xor
imul
push
subl
cltd
shl
cmc
jmp
push
mov
ljmp
paddusw
lds
sub
incl
mov
mov
testl
dec
push
sbb
adcl
nop
jecxz
fdivs
mov
dec
int
data16
xor
cmc
push
pop
sbb
xor
mov
push
out
subl
mov
dec
stos
mov
insl
xchg
adc
xchg
mov
cmp
std
scas
cmc
pop
xor
adc
arpl
cs
sub
loopne
js
bound
into
shl
rorb
inc
nop
push
mov
in
aam
cltd
mov
cmp
mov
add
or
movsb
fs
and
aad
fcmovne
lds
jno
cmpl
dec
dec
or
into
int
ret
ret
ds
inc
mov
loopne
or
mov
sbb
mov
and
mov
jmp
pop
inc
lods
and
push
pusha
push
mov
lahf
push
xchg
int
mov
das
test
pop
rcrl
int3
inc
mov
push
sbb
loopne
std
js
lock
outsb
int3
add
roll
ret
ret
add
adc
and
mov
add
sub
add
in
test
rorl
cmp
add
shlb
loopne
pop
pop
mov
iret
cmp
movsb
and
jbe
lret
jb
lock
jmp
inc
and
test
dec
popa
inc
gs
jmp
sti
inc
push
arpl
inc
repz
cmp
push
adc
test
mov
loope
inc
outsb
and
scas
testl
iret
xor
mov
mov
ficomps
bswap
jne
jbe
cld
in
test
cmp
push
jae
popa
xor
mov
mov
int3
inc
je
push
in
in
test
xor
jne
and
gs
mov
fstpl
mov
imul
pushf
push
stos
in
jno
cld
fstl
mov
aad
iret
call
idivl
mov
and
xor
mov
daa
icebp
mov
push
frstor
aad
sti
inc
or
xor
jecxz
fnstsw
sub
sub
add
cld
gs
fisttpl
in
xor
push
push
xor
into
in
call
sarl
xchg
call
push
sub
ficoml
hlt
lcall
pop
in
icebp
cmc
adc
daa
fwait
cmp
xchg
icebp
push
or
scas
mov
dec
fiaddl
and
lods
jne
fstps
jp
andl
push
adc
fldl
mov
xchg
cmc
inc
pop
and
xor
shll
sub
getsec
iret
outsb
and
pop
arpl
sub
lock
push
daa
inc
inc
in
dec
jmp
loopne
pop
xchg
sub
lock
and
lds
pop
out
dec
jnp
adc
pop
mov
hlt
fidivl
mov
push
lds
adc
mov
push
mov
xchg
pop
push
jae
push
cmpb
ret
scas
ja
adc
cwtl
adc
in
add
movl
adc
mov
dec
dec
jge
lock
fldl
inc
in
inc
pop
mov
xor
aam
jo
xchg
cmpsb
add
aam
push
push
pusha
xchg
shl
pushf
adc
dec
sub
or
sub
ret
mov
sbb
ss
xor
js
adc
xchg
pop
cmp
mov
xor
pop
je
jns
mov
test
repnz
movaps
movsb
in
add
cltd
data16
jns
add
push
pop
add
lock
or
inc
jae
pushf
mov
gs
jno
dec
adc
bound
aad
les
repz
pop
xor
leave
in
mov
fs
aaa
lea
roll
or
aad
ret
cld
pushf
add
or
enter
push
hlt
or
in
or
enter
xor
leave
aad
mov
adc
test
enter
mov
in
cli
andl
cld
inc
mov
aad
or
enter
mov
loope
in
in
cwtl
xor
icebp
mov
shll
dec
jg
orl
aad
push
ss
ret
mov
pop
test
ret
pop
sub
js
aam
inc
xchg
outsb
testl
or
xor
adc
pusha
sbb
mov
pop
sbb
mov
cmp
inc
or
mov
lock
push
dec
divl
and
icebp
loope
cmp
icebp
xlat
mov
lret
xor
xchg
fdivp
and
ds
sub
lret
aaa
sbb
lret
shl
and
clc
daa
ret
nop
xorl
test
mov
dec
and
hlt
aad
push
scas
ja
jno
jb
into
ss
mov
sub
dec
mov
inc
sti
pop
cld
stos
push
testl
test
mov
xor
lds
lret
jns
adc
test
jecxz
add
in
ds
push
cld
mov
pop
sbb
lock
aad
fsubr
inc
ljmp
lret
rolb
pop
fnsave
sub
aam
mov
loopne,pt
sub
cmp
fsts
sub
loop
xor
and
jns
mov
add
jg
icebp
cmp
daa
movnti
ror
repz
or
and
mov
pop
jmp
iret
test
mov
rol
aas
push
icebp
sub
or
lds
jle
add
mov
stos
pop
cmp
or
pushf
fisttpll
repnz
xor
jmp
lock
fsubl
enter
das
pop
xor
add
mov
inc
cmp
ds
jmp
sub
dec
push
or
and
dec
repnz
pop
flds
test
call
movsl
dec
mov
push
js
std
lds
int3
lret
cmp
test
ror
jl
idivl
adc
dec
inc
rcrb
cmp
jl
cs
imul
sub
push
mov
rcrb
or
aam
push
lods
pop
neg
roll
mov
pop
add
and
pushf
inc
xlat
in
out
lds
loope
sub
dec
repz
sahf
enter
test
adc
sti
imul
push
push
shl
adc
in
dec
xor
lock
hlt
rcrb
shll
stos
lock
inc
test
fidivl
sbb
fidivrs
cmc
lds
mov
mov
push
cmp
push
inc
mov
rcrl
dec
sbb
dec
arpl
adc
shrb
push
dec
outsl
orl
dec
out
xchg
fdiv
xchg
notb
ficompl
and
lock
push
pop
cli
mov
lods
inc
imul
mov
adc
hlt
icebp
stc
scas
mov
arpl
fimull
jne
stc
sub
test
fmulp
ret
ljmp
jo
pop
dec
pop
or
add
push
popf
mov
ljmp
rcr
inc
push
movsb
sbb
pop
dec
lahf
sbb
imul
jae
pop
adc
mov
lcall
cmpsb
add
stc
pop
lret
stos
add
scas
fdivrs
or
shll
inc
adc
icebp
sahf
fcoms
add
mov
pop
mov
xor
xor
imul
and
inc
cmp
push
push
repz
xor
push
jnp
jmp
ja
sarb
roll
imul
test
sahf
or
cmp
xlat
and
inc
mov
inc
push
jmp
sbb
cmp
sub
add
in
adc
jecxz
movsb
pop
add
add
mov
fldt
mov
adc
and
and
push
jecxz
lret
dec
or
and
sahf
xchg
pop
jae
andl
adc
arpl
or
xor
test
sti
incb
loope
cmp
add
movsb
dec
nop
jle
test
lea
out
mov
sbb
cmp
jmp
sbbb
in
dec
imul
dec
inc
into
xor
and
lds
pop
icebp
dec
mov
sbb
outsb
dec
or
jne
or
adc
inc
xor
or
dec
addl
pop
shll
cmp
loope
aas
aad
pop
jl
and
xor
or
popf
lock
sub
lods
ja
in
je
call
or
dec
inc
aas
out
dec
fld
fnsave
stc
sar
dec
inc
mov
push
mov
scas
inc
cmp
std
ret
shll
sbb
sub
sti
pop
pop
std
rcl
jno
jo
mov
inc
lret
dec
rcrb
pop
shrl
pushf
nop
ficomps
pop
fmull
pop
subl
and
jns
aad
loope
les
or
std
dec
in
add
push
shll
push
shr
mov
mov
push
sub
sbbb
jmp
inc
loopne
mov
insl
stc
gs
shlb
shlb
cltd
stos
scas
inc
jne
and
insb
repz
jo
fld
xchg
xor
in
sub
into
lret
xor
mov
dec
mov
div
out
sub
imul
xchg
rolb
aas
add
push
pop
fcompl
lds
push
mov
push
xchg
sbb
sbb
sub
psubd
enter
rorl
pusha
xor
add
sbb
insb
mov
mov
xchg
mov
bound
adc
pop
hlt
mov
or
ljmp
out
dec
sbb
leave
inc
pop
rcrb
or
rorb
into
xor
xchg
jnp
push
sub
pop
icebp
leave
jns
pop
aaa
and
adc
je
incl
aam
lds
std
cmp
pop
ds
fidivl
lock
into
dec
out
mov
int
ds
lea
fdivrs
adc
cmp
cltd
mov
std
shlb
popf
daa
rcrl
fistpl
fstpt
mov
fdivr
fcmovu
pop
dec
jmp
fisubl
mov
pop
orl
jo
dec
mov
lret
add
sbb
bound
inc
jg
fwait
xor
mov
dec
pop
add
mov
pop
xchg
cmp
hlt
sub
cmp
fisttpll
or
xchg
sbb
stos
sbb
ret
je
iret
in
out
xchg
setns
sub
mov
mov
addb
outsb
pop
fstpt
vpsubd
sbb
ja
push
enter
sbb
in
xor
sbb
inc
sbb
roll
cmpsb
cmp
inc
into
loope
add
stc
push
test
sbbl
les
jmp
hlt
push
shlb
cmp
shl
mov
mov
xchg
cmpsb
out
dec
jae
les
int3
repz
enter
sbb
ret
cltd
and
add
add
call
pop
int
add
mov
in
adc
xlat
or
pop
shlb
pop
sbb
mov
sbb
sbb
movsl
mov
and
inc
lods
adc
mov
lods
icebp
push
insb
fistpl
and
test
jl
loop
mov
lcall
xchg
jno
add
add
repz
cmp
dec
cmp
lcall
or
cmpsl
inc
popa
out
adc
xchg
dec
xchg
inc
hlt
icebp
add
mov
insl
enter
push
adc
add
jge
testb
in
cltd
push
hlt
popa
dec
jle
push
or
test
pop
sbb
pop
push
jnp
add
sbb
add
cmp
test
ja
jmp
sahf
loopne
sub
sub
and
dec
ret
adc
cwtl
inc
jno
add
fimull
adc
mov
inc
and
xor
jmp
shll
jbe
cltd
cwtl
mov
leave
and
cmp
lds
shl
call
push
adc
inc
sbb
sub
lock
data16
aad
adc
adc
add
inc
sar
sbb
dec
dec
dec
lcall
outsl
fwait
inc
add
aaa
push
ret
dec
aas
jns
or
xor
dec
add
aaa
add
push
gs
daa
in
xor
dec
inc
jge
inc
sub
xchg
lods
int
push
jp
std
fldcw
inc
iret
xchg
test
out
aaa
jmp
jge
pop
inc
mov
pop
inc
movl
hlt
aaa
inc
dec
pop
hlt
inc
pushf
push
and
aad
xlat
cmc
std
dec
jo
dec
aad
lea
and
pop
fxch
pusha
xor
adc
push
filds
fiaddl
jp
out
pushw
or
addr16
inc
iret
cmp
pop
mov
xchg
clc
xchg
cmc
mov
adc
sbb
lods
cmc
dec
imul
shlb
ret
pop
enter
iret
xor
fldcw
mov
sub
daa
orb
or
ja
mov
sub
fnsave
mov
xchg
lds
das
mov
aad
icebp
dec
std
cmp
adc
lock
jae
push
push
cmpsl
xchg
jmp
in
xor
popf
shl
adc
cs
jmp
jns
dec
inc
lea
pop
stos
ret
shl
sub
cmc
aaa
push
movd
mov
ret
mov
aas
and
sti
add
jg
push
repnz
mov
pop
imul
stos
int3
pop
jmp
lret
shll
pusha
outsl
out
push
shl
repz
mov
add
in
mov
sbb
imull
sub
loope
int
hlt
gs
test
jecxz
or
testl
in
push
mov
faddl
add
div
and
loopne
sahf
stos
or
inc
jp
sub
or
ret
adc
cmc
mov
mov
mov
dec
dec
or
jl
xor
push
pop
xchg
push
add
aad
cmp
scas
or
xchg
rcrl
mov
test
rcr
arpl
ja
or
or
std
data16
jb
xchg
inc
movsb
hlt
add
mov
or
roll
incl
add
push
jle
int
mov
in
adcb
movsl
adc
cmc
xor
int
ljmp
inc
mov
lret
lret
cltd
inc
push
push
mov
stc
rcrl
or
xchg
lods
adc
pop
je
ror
dec
dec
mov
push
pop
shll
fucomp
test
mov
repnz
xchg
rcl
or
arpl
adc
mov
mov
mov
mov
mov
in
mov
in
fstps
aaa
es
negb
je
rorl
stc
popa
jge
call
loop
sub
mov
lds
enter
leave
lds
dec
dec
notl
ficomps
mov
ja
loope
cltd
imul
jg
adc
mov
loope
gs
leave
xor
loope
adc
std
fmull
xchg
imul
add
mov
inc
shr
in
and
das
mov
leave
mov
shrb
in
je
shlb
shrb
addr16
outsb
repz
jae
shll
mov
leave
add
sbbb
jmp
mov
sbb
pop
out
inc
add
push
jb
inc
popa
repz
push
xor
sti
add
inc
sbb
jmp
not
sbb
mov
or
cmc
add
push
les
stos
xchg
sub
ljmp
and
sub
mov
in
mov
sbb
les
aam
xchg
xchg
jg
mov
sub
xchg
scas
mov
dec
ret
adc
lahf
mov
dec
repnz
jg
es
loopne
sub
dec
mov
call
mov
mov
fcoms
fdivs
mov
add
mov
xchg
out
and
xor
add
cmp
inc
mov
shl
in
sbb
stc
cmp
test
fdiv
or
mov
or
cmpsb
cwtl
mov
out
add
fisttps
imul
leave
call
inc
aad
ss
rcl
jmp
jae
fildl
nop
xor
push
ljmp
test
mov
lret
mov
xchg
mov
leave
mov
enter
icebp
dec
bound
cltd
es
push
push
and
enter
icebp
mov
loop
ret
out
mov
stc
sub
stc
mov
pop
pop
mov
stos
lods
data16
mov
shr
adc
adc
push
sbb
mov
mov
in
mov
ljmp
push
dec
jno
stos
pop
lods
mov
jbe
ja
hlt
test
mov
push
sbb
dec
sub
pop
nop
dec
push
shlb
dec
in
in
rcrl
mov
push
inc
dec
adc
in
mov
push
pop
shll
cmp
icebp
loopne
cmp
cmpsl
jbe
loop
stc
orb
pop
or
dec
adc
jg
mov
ret
inc
sbb
mov
fisubl
pop
enter
cmovp
mov
fdivs
adc
sub
mov
fadd
sub
lret
jae
in
rorl
lods
dec
fucomip
mov
pop
xor
dec
jae
jo
les
mov
rorb
roll
push
mov
lret
adc
repz
ret
stos
pop
outsb
dec
je
dec
hlt
sarb
jp
test
flds
fdivl
adc
mov
pop
cli
roll
mov
jns
push
out
add
les
jg
shl
call
dec
aam
mov
or
out
push
shl
fdivrl
insl
pop
insb
iret
orl
mov
mov
cs
dec
inc
sbbl
and
in
dec
push
and
sbb
insl
stc
mov
rol
jno
mov
test
xchg
mov
loopne
ret
aaa
call
adc
inc
test
loop
jbe
lock
outsl
inc
add
push
add
test
cmpb
jno
test
cmpsb
xor
push
jp
jg
pushf
inc
test
mov
push
scas
dec
push
in
das
pop
mov
ja
int3
repnz
xor
pop
cmp
ret
jne
mov
gs
sbb
mov
mov
jecxz
leave
aas
insl
in
add
enter
or
out
pop
mov
pop
push
jmp
dec
push
addl
in
push
fcmovbe
shlb
jne
das
rorb
dec
push
dec
lock
decl
push
sbb
xor
ret
push
dec
cmp
push
sbb
dec
es
sbb
dec
fcom
xchg
int
mov
into
aad
rorl
imul
add
push
aam
mov
inc
cwtl
imul
popf
inc
fisubl
lds
xchg
leave
jns
cwtl
jle
test
popf
lods
jno
push
sbb
lret
inc
xor
add
sub
dec
sahf
sub
out
push
dec
and
adc
mov
xor
outsl
and
fsubrp
dec
xor
lret
cmp
sub
mov
jne
mov
jae
inc
fimull
add
xlat
out
dec
enter
mulb
sbb
or
and
cmp
pop
mov
roll
int
or
mov
inc
push
in
repz
call
icebp
movsb
lret
std
int3
sbb
scas
repnz
sub
push
add
sub
pop
sti
mov
pusha
adc
jg
negl
sub
andb
mov
or
xchg
push
push
outsl
add
and
push
and
in
cmp
int
mov
dec
and
lock
leave
add
test
lahf
dec
repz
pop
outsb
xchg
mov
idivb
int3
dec
pop
cmp
jmp
outsb
xor
pop
aas
sbb
pop
mov
sub
mov
mov
dec
sub
btc
cmp
add
hlt
add
add
or
test
push
fists
es
or
idivl
jne
xchg
sbbl
aaa
sbb
orb
sub
sub
add
cmp
test
dec
mov
fcoml
inc
and
enter
popf
rolb
lods
andl
sub
out
dec
lds
dec
mov
stos
push
inc
inc
add
jge
les
rorb
into
dec
lret
push
shl
jnp
jo
adc
out
and
repz
adc
inc
imul
rcrl
or
jmp
or
add
jae
mov
mov
icebp
lretw
cmp
shrl
outsl
or
in
mov
stc
pop
stos
std
push
pop
mov
pop
loope
and
add
fnstsw
les
mov
inc
stc
xchg
push
cmp
mov
ret
xor
loope
ja
pop
and
rolb
push
jne
inc
scas
dec
push
test
mov
mov
cmpsl
aaa
test
inc
sbb
ljmp
call
lods
lcall
cmc
mov
repnz
sbb
in
enter
nop
loope
into
mov
loope
cmpsb
stos
jbe
jns
adc
cmp
aam
shll
pop
xor
jno
test
loop
loop
and
lds
lret
cmpsl
in
les
jae
adc
mov
subl
leave
and
inc
repnz
or
push
or
xor
mov
mov
in
shll
dec
cmp
lds
xor
mov
ret
mov
mov
call
dec
inc
mov
jns
fiaddl
addr16
movsb
int
data16
int
mov
pop
int
leave
add
cmp
in
sar
adc
enter
int
in
adc
test
cmpsl
lret
mov
icebp
adc
in
insb
and
cld
push
lcall
and
push
jmp
xor
test
fcmovnu
in
mov
outsb
test
pop
sti
fisubs
add
aam
xor
outsl
push
decb
hlt
dec
aad
test
sub
push
testl
insl
test
sub
jmp
inc
inc
dec
lock
mov
dec
mov
jns
push
icebp
mov
dec
add
mov
rcrb
add
xlat
cmc
shrl
ror
addr16
icebp
jne
add
rcr
jae
add
inc
rcll
push
jae
add
sti
repz
adc
fsubr
sbb
ret
sbb
mov
inc
mov
loop
ffreep
push
xchg
test
add
fsts
sub
test
jae
loop
and
in
dec
add
repz
cli
movsb
mov
sar
mul
rcrl
mov
sbb
scas
sbb
aam
xor
std
test
xor
pop
mov
mov
mov
mov
les
mov
adc
mov
ror
ror
add
into
xor
or
cs
outsl
dec
xchg
push
cmovns
xchg
xlat
test
cwtl
movl
adc
dec
mov
inc
fdivr
aam
mov
popf
and
and
sbb
sahf
jmp
mov
out
fdivs
mov
leave
mov
inc
mov
test
fldcw
int
addb
cwtl
jae
shl
rorl
push
stc
in
int
push
lds
rorb
add
fld
negl
xchg
dec
int3
push
lret
mov
mov
mov
shr
push
sbb
mov
inc
mov
daa
data16
add
xor
mov
icebp
and
pop
mov
cmpsb
mov
sbb
pop
xchg
pop
xor
mov
add
inc
hlt
xchg
in
outsb
sbb
data16
sti
lcall
inc
mov
fnstcw
mov
mov
lds
push
cmp
sbb
loopne
stos
push
jge
sbb
sarb
mov
cmp
mov
dec
pop
cmp
jmp
mov
add
test
add
into
aam
stc
insl
or
push
dec
aas
sbb
xchg
push
fsubr
xlat
in
out
sar
jb
adc
jae
data16
mov
jae
ret
dec
fildl
gs
inc
mov
insl
adc
pop
pop
pop
cltd
mov
scas
rorl
das
lds
sbb
or
mov
mov
dec
rcl
mov
xchg
sahf
leave
shl
xor
or
jnp
jb
or
jae
dec
loope
test
in
push
pop
loop
sub
cld
sub
lcall
sbb
scas
push
je
inc
sub
test
mov
test
shll
shll
or
sbb
in
ds
fidivl
mov
add
push
inc
ja
fnstenv
or
fldt
lret
xor
push
stos
pop
sub
test
xchg
sub
xor
mov
adcl
adc
jecxz
adc
adc
sub
loop
cmp
mov
shll
test
cmpsl
jecxz
add
int
mov
sbb
mov
aas
pop
jns
sti
jmp
out
ja
lds
jmp
sub
inc
jmp
jns
data16
int3
lcall
dec
mov
sub
dec
adc
push
imul
test
jae
test
sub
insb
popa
inc
test
push
rdtsc
pop
negl
test
pop
add
pop
or
ret
int
inc
pop
mov
inc
jecxz
fmuls
sbbl
mov
faddp
and
loope
push
imull
lds
add
loop
xchg
std
fucomp
clc
pop
adc
and
or
aam
inc
dec
mov
test
mov
in
xchg
shlb
xor
push
add
call
dec
xor
jle
repnz
nop
ret
mov
sub
shll
xchg
test
push
pop
pop
mov
decb
mov
mov
cltd
mov
mov
push
inc
lock
cmp
test
push
push
hlt
and
xchg
gs
movsl
nopl
and
jge
jae
xchg
shlb
pop
fstps
mov
cmc
in
loop
adc
push
mov
ss
mov
push
loope
sar
jle
dec
adc
into
xor
jl
push
es
movb
into
negb
jmp
add
push
pop
xchg
test
and
fucomip
fsubl
or
push
ret
movsl
iret
fxch
enter
add
cwtl
cmc
clc
ja
mov
outsl
mov
mov
sarl
frstor
xchg
mulb
lcall
fcmove
push
sbb
sbb
add
dec
fucompp
mov
in
inc
cmc
mov
test
test
loope
jmp
inc
enter
cmc
daa
and
ret
sbb
cmpsl
ljmp
inc
aad
mov
scas
iret
mov
fisttpl
push
push
std
hlt
scas
sub
cmp
mov
add
stos
cmc
sbb
sbb
push
out
xchg
stos
add
fsubr
jno
imul
and
loop
mov
sub
push
xchg
addl
and
mov
push
add
sub
leave
rorl
stc
aaa
std
test
les
push
jecxz
and
push
out
test
mov
jge
inc
mov
into
sub
sahf
out
jmp
dec
bnd
or
mov
push
pop
leave
dec
jp
add
dec
rorb
jg
fnsave
rcrb
ror
cmp
pop
hlt
into
sbb
icebp
or
or
rorb
loop
outsb
cmp
mov
mov
ljmp
sub
mov
sub
ds
popa
inc
xor
fnstcw
dec
pop
dec
bnd
mov
xor
xchg
mov
xor
add
ret
aad
inc
fisttpl
cmpsb
repz
sahf
js
mov
mov
fldl
fisubrl
xchg
mov
dec
fisttps
mov
movsl
cld
sbb
int
rorb
pop
and
and
push
mov
mov
and
daa
add
or
enter
addb
sbb
add
push
addr16
push
and
repz
ret
icebp
test
cld
std
dec
jne
push
or
aam
xor
xor
pop
dec
dec
inc
cltd
mov
in
sbb
popa
pop
out
dec
dec
data16
mov
xchg
stc
pop
mov
ljmp
repz
pop
incb
mov
push
and
aaa
pop
test
jne
or
or
sbb
scas
and
dec
aam
daa
lods
pop
pop
popa
repz
test
push
mov
jae
out
and
push
cmc
push
pop
pop
into
repz
imul
lcall
mov
mov
mov
xchg
test
xor
lret
dec
pop
icebp
stos
xchg
dec
fldl
cmp
dec
div
fisubrl
aad
add
and
add
sbb
aad
add
int
insl
popa
js
jno
xor
negl
out
adc
insb
shlb
xor
fs
inc
sub
loope
xor
xor
dec
sbb
hlt
hlt
push
gs
enter
movb
arpl
mov
icebp
mov
loopne
fs
outsb
or
mov
pop
xorb
xor
inc
jb
mov
lcall
test
scas
mov
lock
mov
scas
inc
scas
inc
in
enter
dec
movsb
or
adc
test
jne
int3
dec
gs
aam
pop
add
rorb
add
shll
adc
push
jb
enter
in
hlt
adc
cld
cmp
push
test
pusha
inc
cmp
icebp
push
rolb
stos
out
xor
pop
aas
push
shlb
fldt
jne
jp
ljmp
sbb
jecxz
cmp
mov
fcmovbe
leave
xlat
cwtl
or
sub
sbb
negb
clc
rcll
movsl
dec
push
aam
adc
inc
call
rclb
inc
icebp
inc
xchg
hlt
shll
pushf
or
add
or
sbb
insl
xor
inc
inc
mov
bound
add
enter
mov
pusha
or
or
jne
xchg
sbb
push
sbb
inc
lret
or
int3
or
mov
adc
add
fcompp
pop
outsb
loope
adc
hlt
cld
jae
mov
out
fcomp
faddl
iret
fldl
add
pop
repnz
ljmp
mov
and
sbb
jp
scas
cmp
xor
subb
pop
push
test
cmc
and
and
jl
movsb
je
inc
in
pop
dec
inc
enter
popf
pop
daa
jns
add
push
or
mov
js
repz
and
sbb
inc
or
je
mov
push
loope
or
repz
out
jecxz
or
adc
inc
add
aam
adc
dec
add
icebp
in
xchg
push
repz
push
fs
and
out
fisttpll
ret
pop
js
add
mov
mov
jg
inc
mov
cmp
pop
loopne
xor
sub
cmp
cmp
movsl
sarl
push
imul
push
adc
mov
add
dec
out
bound
push
leave
xchg
pop
lea
mov
dec
add
xor
xchg
push
leave
imul
stos
or
test
dec
mov
jecxz
shll
fsts
dec
dec
roll
adc
mov
mov
or
imul
jns
imul
enter
lret
xor
sub
jecxz
imul
sbb
cs
out
dec
adc
outsl
sarb
dec
gs
add
xchg
inc
lods
stc
icebp
xchg
sbb
inc
cmp
outsl
outsb
fisttpl
dec
jb
imull
inc
out
aam
pop
adc
pop
or
dec
das
jae
ljmp
shlb
test
lret
into
dec
je
enter
shlb
outsb
in
outsl
insb
stos
into
imul
ss
test
sub
inc
fwait
enter
push
int
mov
imul
pushl
or
cli
mov
pushf
push
inc
add
dec
stos
sbb
lods
pop
jnp
sbb
rcl
cmpsl
xor
std
enter
es
aas
pop
flds
mov
or
inc
or
sub
dec
inc
icebp
jg
xor
leave
loopne
push
inc
sbb
mov
mov
mov
fnstenv
lret
jne
inc
inc
ret
pusha
ret
ljmp
outsb
fsubs
insb
ds
cltd
xchg
pop
pop
inc
adc
out
jbe
add
fsub
pop
sub
push
lea
and
iret
jl
xor
test
cmp
lds
aaa
and
inc
addb
pop
test
addl
stos
dec
push
dec
jmp
mov
outsb
loope
xchg
flds
inc
xchg
rcr
daa
fstpl
cli
ja
pop
jecxz
mov
sub
fwait
xor
xchg
notb
pop
mov
sub
mov
mov
xor
pop
movsb
test
add
outsl
test
arpl
and
shrl
clc
test
int
bound
cmc
icebp
adc
fists
pop
cli
test
mov
loopne
and
add
lds
addl
arpl
jg
fnsave
test
clc
dec
es
add
fidivrl
mov
sbb
int
test
xchg
sbb
test
mov
push
lret
les
lahf
insb
mov
insl
aaa
fisubrl
mov
in
pop
out
xchg
inc
shrl
into
ss
jg
fwait
xor
and
mov
xor
dec
dec
xchg
dec
cmc
ja
aas
enter
xchg
push
add
enter
sar
sub
leave
push
loope
inc
cmpsl
add
cmp
mov
jne
xchg
jmp
cmp
mov
orl
pushf
lea
cmpsl
and
out
push
or
mov
inc
jnp
mov
jg
stos
shl
mov
and
adc
add
ja
cltd
jmp
xchg
fwait
loop
inc
scas
pop
jae
in
int3
inc
mov
cmpl
lds
mov
jl
adc
cmpl
notb
xchg
call
mov
aam
loop
out
cmp
shr
fidivl
jmp
aam
adc
jmp
or
pop
xchg
add
inc
mov
sbb
pop
push
xor
ljmp
push
dec
mov
shll
pop
js
push
aas
mov
mov
jae
ficompl
icebp
add
xlat
andb
push
xchg
fsub
cmpsl
jle
in
jmp
pop
aas
mov
test
mov
movsl
testb
mov
lret
or
jbe
push
jle
lcall
pop
clc
jg
shl
sbb
xor
in
lds
xor
dec
jmp
call
xchg
cmp
dec
pop
ret
mov
jge
or
imul
fiadds
push
arpl
inc
sbb
and
ret
aam
ss
add
or
lret
pop
mov
jmp
test
inc
int
test
lret
xor
xlat
rcr
dec
shlb
loopne
call
inc
xor
mov
mov
add
lahf
inc
and
out
shrl
sbb
jae
push
xor
xchg
mov
adc
movsb
add
mov
test
mov
jbe
insl
xchg
stc
lock
cmpl
xor
and
jle
aas
shlb
push
xor
xchg
jbe
push
test
push
adc
push
fcomps
loop
in
addr16
inc
pop
scas
sarb
mov
int
mov
jg
push
jp
pop
test
das
mov
add
mov
lock
leave
cmpb
icebp
cmc
jnp
push
mov
dec
imul
dec
mov
mov
lret
adc
pop
iret
mov
rol
wbinvd
fsubrs
xor
dec
ret
fwait
push
mov
add
repz
orl
or
aam
cmp
dec
insl
dec
fstp
out
xchg
mov
add
jecxz
cltd
lds
es
mov
push
pusha
adc
and
mov
sbb
push
lcall
and
dec
pop
es
mov
mov
jns
shufps
test
int
inc
stc
icebp
xor
fidivrs
imul
pop
fistpll
mov
bound
int3
leave
sbb
out
addr16
int
sbb
jg
mov
loope
loope
lock
mov
mov
shlb
sbb
loope
cmp
inc
out
push
data16
jno
adc
gs
jbe
xor
test
xchg
adc
repz
jge
add
inc
jne
dec
ds
dec
cmc
rorl
cmp
inc
dec
cmp
lret
xor
mov
mov
jno
fs
outsl
inc
dec
testb
add
or
dec
cmp
shrb
dec
jo
xchg
hlt
or
sbb
fdivl
mov
js
add
push
mov
rcrb
add
in
pop
enter
repz
movsl
outsb
adc
mov
repz
loopne
jb
mov
dec
mov
mov
ljmp
fld
mov
push
int3
je
fisttpll
pop
aaa
dec
out
inc
dec
push
inc
leave
mov
cmp
pop
inc
ret
mov
sarb
jmp
jl
dec
testb
mov
arpl
popf
cmc
pusha
add
mov
ja
mov
or
testl
and
sbb
ret
jg
mov
out
pop
nop
inc
jno
xchg
xchg
mov
push
out
jne
xor
out
enter
sahf
jns
sub
icebp
mov
push
xchg
push
sbb
aaa
aad
jmp
leave
xchg
lock
adcb
int3
cld
jne
rorl
insb
add
inc
gs
and
cmpsl
sarb
xchg
xor
push
jne
adc
lret
push
push
loopne
int
notb
xchg
dec
sbb
add
dec
inc
rorb
push
mov
outsb
aas
shlb
lcall
aaa
xchg
imul
jne
outsb
adc
loope
mov
and
in
test
cmp
push
repz
sbb
pop
cmp
mov
push
imul
syscall
loopne
cltd
push
mov
push
adc
sbb
andl
jmp
xorb
repz
xor
xor
dec
mov
popa
xchg
loop
add
add
repz
inc
inc
mov
fucomip
sbb
cmp
nop
pop
mov
inc
aam
push
stc
cmp
push
xor
lret
mov
fiadds
movsb
dec
jno
sbb
pop
fcmovbe
jns
pushf
loop
mov
cli
dec
data16
xlat
test
test
popa
test
cmc
popa
and
ja
lods
shll
lret
inc
leave
mov
and
pop
xor
pop
fnstcw
cvtps2pd
push
sbb
jmp
inc
xor
fiadds
insl
stc
xor
jne
shlb
jne
jmp
and
and
testl
add
test
ret
push
mov
aaa
mov
mov
xchg
imul
or
mov
rcl
arpl
inc
mov
lea
cmp
cld
shll
insl
and
cmp
mov
adc
pusha
cmpb
cmpsl
jno
cmpsl
jno
push
push
mov
pop
jns
outsb
shll
aaa
imull
ljmp
push
aam
mov
cmp
sbb
jne
mov
out
sub
aad
sub
xchg
sbbl
rcl
and
adc
mov
push
aam
cli
ret
scas
lock
jb
data16
inc
sbb
xchg
xor
sbb
es
push
mov
clc
repnz
mov
dec
loop
popa
push
aam
fstps
adc
movaps
mov
mov
sbb
jge
or
mov
mov
mov
sbb
pop
ljmp
pop
loopne
and
ljmp
sarl
add
cmc
hlt
and
xor
cmp
xor
sub
pop
call
out
scas
or
dec
and
inc
sbb
fdiv
push
movb
hlt
adc
xchg
test
jo
and
cli
mov
loopne
popf
sahf
lea
jge
jmp
push
ja
fwait
lcall
or
dec
hlt
xlat
xor
mov
cli
cltd
and
jo
add
shll
push
xor
lods
loopne
mov
add
and
jmp
mov
jae
mov
hlt
fldt
jno
ss
adcb
loope
sbb
fldl
lods
lcall
out
cli
out
cmp
ljmp
sbb
inc
xchg
out
adc
dec
xchg
sarl
xchg
inc
push
push
fwait
inc
push
jecxz
cmp
sti
and
inc
mov
sub
push
jae
fisttps
movsb
leave
sbb
aas
rcrb
xor
rclb
and
xor
xchg
jns
dec
jb
icebp
repz
jecxz
fbstp
ljmp
into
jne
xor
cs
jnp
test
sub
push
jne
pop
icebp
or
jg
jnp
sub
dec
lret
fmul
cmp
mov
cmc
decl
mov
push
mov
ret
lret
or
shl
rcrb
das
jne
lock
testl
mov
mov
dec
push
int
rol
vpsubusw
pop
jbe
fisttpll
test
imul
stos
jmp
or
loope
cmpsl
ret
in
stc
leave
std
dec
xor
mov
roll
push
out
add
leave
adc
dec
imulb
dec
cmp
cmpsb
or
fadds
inc
dec
movsb
mov
ret
mov
loope
dec
push
pop
push
mov
leave
push
push
add
add
insl
rclb
mov
sarb
jge
sarl
dec
sbb
sub
test
xchg
jge
and
xlat
push
jnp
dec
pop
and
clc
dec
pop
and
lcall
inc
add
jmp
dec
mov
lds
jmp
ss
mov
rorb
jmp
ss
inc
fsubrs
dec
push
or
inc
repz
add
add
mov
dec
loop
xor
int
cmp
fdiv
lods
lods
aam
xor
xchg
jae
add
jp
lret
into
ficompl
adc
movsl
int
movb
pop
cmpsb
loopne
add
mov
rolb
jbe
adc
fcmovnu
inc
or
sbb
pop
jne
inc
push
outsl
lret
push
dec
pop
and
xchg
data16
aaa
and
and
mov
int3
int3
in
xchg
mov
inc
int
repnz
test
push
jmp
xor
mov
push
push
ret
cli
jecxz
fdivl
or
in
insl
ljmp
mov
cmp
mov
sub
movl
leave
ljmp
icebp
mov
into
lods
fdivs
std
cwtl
sbb
lds
pop
test
lock
ret
in
push
gs
leave
add
xchg
inc
arpl
leave
and
loop
leave
and
movsb
and
bound
scas
aam
and
dec
mov
test
ds
or
mov
inc
outsl
dec
xchg
lds
dec
lea
mov
call
or
lods
ss
cld
insl
fcmovne
pop
adc
test
fstl
ret
mov
daa
push
sub
sub
mov
mov
adc
repnz
aad
sub
shlb
xor
jbe
and
mov
pusha
mov
and
mov
push
lock
nop
xchg
jmp
test
pop
mov
test
pusha
test
test
xchg
cmp
loopne
mov
xor
xchg
and
ss
aad
mov
pop
pop
rcl
in
xchg
pop
pop
loope
add
jecxz
aas
cli
stos
add
aad
dec
fidivl
gs
mov
fwait
dec
pop
push
mov
test
xchg
sub
movsl
outsb
inc
inc
roll
adc
push
stc
jne
pushf
add
popa
add
push
int
jmp
jge
and
or
test
aas
adc
push
add
xchg
xor
add
push
dec
jb
incl
neg
add
sbb
aad
orl
loope
adc
sbb
test
ds
dec
imul
jge
fnstcw
cld
cvtps2pi
fbld
out
dec
test
cwtl
inc
push
out
jb
mov
gs
add
fidivs
or
fwait
shrl
js
lcall
mov
out
aas
dec
and
sub
mov
pop
mov
dec
ss
leave
or
and
enter
leave
adcl
sub
std
or
cmc
xlat
jle
sub
pop
inc
mov
ror
mov
in
les
or
cmpsl
jo
pop
and
jo
cmp
fmul
xor
jle
popf
mov
cmpsb
jg
xor
adc
sub
jb
mov
shrb
sti
inc
inc
xor
add
ret
or
xchg
xlat
mov
bound
lds
and
or
inc
mov
aas
adc
cmp
ror
js
dec
test
inc
or
jae
xchg
das
je
mov
jno
es
test
mov
jl
sbb
mov
test
out
dec
sub
mov
aas
dec
inc
and
add
aam
ja
lahf
pop
mov
mov
bound
sahf
lret
fmul
in
ret
mov
lods
push
test
inc
loope
addr16
aaa
cmp
stos
mov
ffree
imull
icebp
std
fs
mov
adc
xor
xchg
popa
shlb
xchg
aas
or
orl
sti
xor
int
fwait
mov
je
scas
jnp
push
push
mov
fisttpl
aas
jbe
mov
sub
push
inc
pop
mov
xchg
iret
push
push
stos
in
pop
insl
or
xchg
mov
push
call
or
xor
icebp
add
jg
cwtl
mov
or
sub
jbe
in
adc
pusha
xor
mov
jle
cmp
xor
jbe
add
push
pop
pop
adc
xchg
mov
sbb
fadd
mov
jp
or
pusha
addr16
aam
pop
mov
filds
sahf
or
pop
adc
jge
lds
pop
rolb
rcl
cmp
adc
push
mov
xchg
mov
ror
mov
clc
divb
int3
mov
in
fldt
lret
adc
inc
or
lds
enter
rcll
flds
loopne
mulb
jp
dec
gs
and
sbb
xor
pop
mov
pop
aam
xor
test
sbb
mov
data16
sbb
shr
xlat
sbb
mov
divl
test
sub
inc
dec
int
sbb
or
ficoml
jg
adc
pop
insb
adc
enter
mov
sub
mov
adc
pushf
xchg
sti
xor
loope
cwtl
mov
mov
jbe
rcrb
in
add
jle
test
and
mov
enter
outsb
popf
and
add
cmp
mov
inc
pop
push
xor
push
mov
rcrb
jmp
push
pop
push
cld
jne
sti
popf
push
int3
add
cmp
inc
pop
push
je
jp
sarb
cmp
cmc
les
add
mov
push
dec
imul
popa
cmc
mov
arpl
gs
test
shll
ja
mov
movsl
test
hlt
fwait
mov
push
xlat
test
int3
mov
mov
roll
xor
gs
mov
int
rol
jge
fadd
into
cmpsb
cmp
jmp
cmc
fsts
fnsave
xlat
jmp
jmp
in
xor
movsl
stc
push
aam
std
lods
dec
pushl
repz
shl
rorl
or
rolb
rolb
cmc
adc
cld
adc
leave
sub
and
cmp
mov
loopne
fldenv
negl
xor
push
ds
imul
dec
push
and
roll
pop
leave
pop
dec
add
repz
gs
jno
jne
add
mov
lea
rcrb
dec
xchg
cmc
test
int
xor
stc
shlb
push
mov
cmpsl
aam
leave
mov
hlt
shll
ret
in
adc
out
push
shl
shl
sar
std
dec
div
shl
inc
cmc
dec
or
or
flds
aaa
repz
sbb
jne
adc
fsubrs
and
cmp
push
lods
mov
mov
std
xchg
lods
rorb
pop
pop
dec
aaa
sbb
xchg
out
into
jne
cmc
sbb
icebp
ror
dec
imul
loop
jl
and
jo
jmp
in
push
mov
jbe
mov
scas
cmc
in
frstor
cmp
in
xchg
add
stos
shlb
mov
xor
dec
jl
push
mov
in
test
fildl
mov
push
out
aaa
in
loope
push
add
sbb
cmc
inc
pop
clc
jo
add
add
mov
pop
sub
mov
pop
scas
push
mov
and
fmuls
mov
add
or
test
dec
xchg
rorb
pop
test
sarb
mov
ror
dec
test
addr16
popf
jno
test
add
jp
inc
lock
sbbl
jge
xchg
stos
lcall
mov
out
lock
shll
mov
mov
js
push
int
xor
dec
lret
lock
xor
xchg
roll
fstpl
lahf
adc
roll
ret
mov
sbb
pop
jge
and
jg
mov
and
mov
imul
push
add
inc
pop
xor
and
mov
inc
mov
inc
ror
xor
mov
add
mov
jo
dec
testb
jmp
jbe
hlt
add
or
dec
repnz
popf
leave
mov
loop
in
sub
aaa
pop
mov
call
daa
push
jmp
xor
cmp
sbb
add
jns
lret
fmull
mov
xor
adc
inc
add
dec
add
int3
push
jo
js
add
cltd
icebp
inc
mov
fcomp
pop
adc
jae
and
stos
cmc
jecxz
add
std
ret
sub
shr
roll
mov
adc
dec
lock
sub
ret
in
imulb
dec
popf
push
xlat
je
jo
int
or
inc
xchg
sub
mov
cli
jns
sbb
jmp
add
cld
enter
mov
pop
xchg
jae
or
mov
pop
dec
pusha
xlat
scas
or
jae
aad
mov
rol
pop
mov
inc
sub
bound
in
cmp
and
mov
sub
jae
sbb
pusha
sub
test
mov
sub
inc
lahf
mov
mov
dec
sbb
es
mov
icebp
cmp
dec
mov
sbb
fnstsw
jle
and
cmp
int
xor
sbb
sar
inc
cmp
icebp
mov
sbb
imul
dec
push
inc
jnp
and
insb
or
or
adc
movsl
mov
leave
pop
jo
push
shlb
and
sub
mov
jbe
mov
cltd
das
inc
add
int
movsl
mov
jle
fs
sti
sbb
and
mov
sbbl
lret
outsb
inc
ret
mov
xchg
insl
sub
lds
pop
enter
cmp
cmc
int
dec
rol
mov
outsb
xor
icebp
in
fldt
test
xorb
cmp
or
jae
mov
add
dec
adc
sbb
scas
ret
mov
dec
sub
push
arpl
sbb
pushf
and
rcrl
pop
fldenv
popa
cmc
mov
aaa
or
ss
add
xchg
or
dec
test
sbb
pop
add
add
int3
cmpsl
cmc
rclb
testl
fnsave
aam
push
sti
and
cmp
add
mov
mov
adc
push
xchg
les
leave
rorb
push
pop
call
stc
jle
lods
push
adc
outsl
inc
adc
add
inc
out
add
add
xor
sbb
leave
negl
gs
rol
movsl
roll
cltd
pop
inc
divb
aas
pop
or
fisttpll
xchg
adc
test
in
sub
add
subl
mov
scas
push
mov
mov
xor
sub
or
push
dec
test
pop
enter
je
mov
sbb
push
lods
test
jns
stos
push
sahf
inc
bound
rorl
add
scas
notb
ds
roll
in
cmp
fs
scas
rcr
test
mov
sub
inc
roll
mov
data16
aam
inc
aam
cwtl
loop
shrl
push
mov
push
out
mov
je
xchg
add
shr
aaa
pop
mov
mov
hlt
and
leave
pop
cmpsb
jg
lods
jg
xor
mov
fwait
push
seto
js
mov
inc
pop
mov
scas
mov
mov
or
push
adc
icebp
inc
in
mov
jle
movsb
mov
xchg
adc
fmul
cmpsb
inc
adc
ja
test
mov
mov
jge
stc
leave
inc
dec
pop
add
out
mov
mov
sub
mov
cli
in
lret
js
add
mov
bound
push
xchg
bound
lods
add
mov
push
rolb
daa
jbe
leave
jns
cmc
std
or
xchg
mov
clc
or
dec
fxch
shrb
dec
fs
std
test
cmc
inc
push
add
add
leave
outsl
mov
cmp
clc
sbb
cmc
adc
sbb
shl
cs
rolb
adc
mov
dec
shll
sti
and
xor
int
mov
push
stos
out
shll
mov
xchg
xchg
or
popa
aaa
shll
ds
test
ljmp
pop
push
or
std
mov
lret
adc
pop
aaa
int
and
jb
jno
aaa
sarb
and
leave
shrl
pop
mov
jle
sarb
sub
cmc
mov
pop
sbb
push
push
pop
cmc
fidivrs
ja
push
or
fisubrl
ret
idivb
lret
cld
cmp
leave
push
mov
outsb
mov
push
test
or
jnp
out
in
and
mul
aad
test
inc
or
lods
dec
sub
jb
pop
adc
into
int
add
icebp
lret
out
dec
mov
jg
sub
jecxz
call
shrb
sub
push
pop
jge
add
ficoml
repz
popl
cmpsb
std
dec
push
adc
sub
lret
fmul
dec
pop
push
xchg
hlt
xor
inc
call
mov
pop
sub
pushf
scas
rcll
jmp
mov
dec
push
mov
sub
mov
into
push
inc
xchg
jb
testb
ja
xchg
jle
pop
lds
jmp
mov
dec
test
cltd
pop
mov
sti
cltd
aam
mov
adc
leave
mov
cmovg
in
mov
add
xor
and
int
add
or
ja
push
and
loop
aas
and
jno
int
and
mov
add
cs
push
adc
push
sbb
cli
mov
fldpi
dec
push
adc
and
mov
mov
mov
pop
popa
jg
dec
rcrb
mov
stc
xor
jae
cmp
iret
shrl
loop
mov
xor
or
inc
enter
or
inc
leave
inc
lods
mov
pusha
mov
xor
notl
cld
xchg
cmp
out
mov
int3
cli
xor
mov
cli
andb
and
fimuls
add
adc
mov
add
rclb
orb
stc
mov
mov
shlb
std
dec
lock
sbb
iret
push
sub
sub
fmuls
mov
fadds
fst
xlat
mov
xor
cwtl
dec
dec
jg
cmpsb
inc
mov
mov
mov
mov
mov
sarl
mov
mov
add
std
aam
sbb
jl
lcall
sbb
iret
fistpl
enter
xchg
jge
lahf
aam
lds
ret
add
pushl
ror
lret
dec
cmp
jecxz
aas
leave
sub
fldl
je
mov
ljmp
mov
adc
xchg
fld
pushl
jb
add
dec
fnstsw
cmp
jp
inc
int3
ret
add
cli
cs
adc
shll
test
mov
in
dec
mov
cmp
ror
and
repz
adc
sbb
daa
and
jmp
lods
cmp
outsb
and
xor
cmp
sub
mov
sbb
add
or
insl
hlt
push
fmulp
insb
ret
sbb
xchg
int
adc
shll
pop
es
inc
vmovd
xor
xor
mov
in
or
mov
mov
add
push
enter
shll
faddp
adc
notl
xchg
cmpsl
aad
fstpt
cmp
sbb
cmp
mov
or
cli
ljmp
out
pop
mov
mov
mov
push
stos
vpsubw
shrl
hlt
adc
aam
cmc
out
xchg
mov
cmpsb
inc
mov
xchg
call
add
mov
mov
pop
int
dec
cltd
fld
test
jl
test
outsb
and
fadds
mov
fld
adc
cs
leave
in
add
add
pop
in
int
adc
fidivs
mov
outsl
push
jp
cld
dec
lds
cmpsb
push
jmp
push
je
push
fdivr
gs
into
mov
mov
mov
mov
cmp
lret
mov
cmpsl
pop
cmpsl
xchg
jmp
mov
mov
loopne
aas
cmc
mov
push
lret
clc
fsubrp
xlat
repz
mov
xchg
dec
leave
mov
mov
push
test
pop
adc
adc
imul
nop
ss
aad
icebp
add
lcall
into
xor
xor
and
xlat
inc
mov
mov
ds
std
jmp
mov
and
adc
sbbl
sarb
mov
int3
xbegin
sbb
jo
leave
dec
cmp
out
mov
pop
decl
pop
xchg
adc
xchg
hlt
inc
or
mov
mov
stos
jl
push
add
arpl
mov
ja
or
ljmp
mov
sub
scas
dec
sbb
mov
scas
mov
jnp
xor
push
sbb
out
icebp
or
and
int3
sub
mov
mov
hlt
and
and
daa
cmp
add
ret
pop
push
jle
out
push
pop
roll
ret
mov
xor
inc
shll
push
clc
mov
pop
sti
push
rorb
pop
lods
mov
jmp
je
notl
dec
roll
aam
rcr
int
inc
scas
subb
fsubrs
xchg
movl
xchg
xlat
mov
adc
ror
lds
loop
push
xchg
mov
inc
dec
inc
push
adc
dec
mov
imul
icebp
stos
push
out
inc
mov
sbb
cmpsb
ds
mov
pop
push
ja
add
fs
rorb
mov
into
pop
dec
add
rorb
adc
jecxz
dec
or
pop
sti
add
test
push
adc
push
xchg
pop
or
jge
mov
shll
dec
push
or
mov
push
mov
adc
mov
insl
pop
sahf
dec
sub
test
xchg
adc
mov
push
repz
push
lret
int
pusha
pop
dec
insb
add
or
xchg
fstl
mov
xorl
loope
cmpsb
jp
dec
dec
in
les
je
inc
shl
out
mov
mov
xor
or
lea
mov
lds
push
add
mov
cli
adc
jmp
lock
dec
inc
xchg
xchg
ret
mov
into
sbb
lock
sarb
in
lock
mov
shr
shlb
dec
or
push
mov
lods
adc
mov
mov
or
cmp
aas
sbb
mov
cli
jo
cwtl
dec
outsl
shll
lret
stc
inc
decl
or
leave
pushf
mov
xchg
dec
cmpsb
ret
and
or
fldcw
jnp
repnz
or
jge
sahf
push
cmp
jmp
add
or
mov
or
fisubrs
cmp
inc
pop
or
in
or
dec
test
dec
fwait
add
enter
repz
push
add
jns
mov
cmpsl
dec
cwtl
xor
mov
frstor
in
mov
lret
daa
ror
dec
mov
lret
mov
cmpb
les
add
or
inc
xor
jne
pop
out
int
jp
cmp
sub
lods
add
push
jmp
mov
fwait
sub
inc
dec
test
jbe
roll
xor
pop
fsubrl
ret
les
pop
jno
repnz
cwtl
dec
or
ror
adc
mov
cld
std
loope
ja
insb
aas
cmp
mov
cmp
ss
mov
and
add
outsb
cmc
shlb
sbb
inc
out
loope
inc
adc
add
inc
and
clc
inc
dec
lahf
mov
mov
sbb
lods
hlt
je
dec
mov
cltd
test
ds
dec
mov
push
orb
jns
dec
popa
jo
mov
roll
das
add
sahf
add
enter
insb
fwait
insb
ret
fnstenv
icebp
sub
mov
jbe
sub
and
lock
mov
test
cmp
dec
push
pop
sbb
add
aas
and
mov
pop
aam
xchg
cmp
mov
and
add
add
test
stos
shrb
cmpsl
movsl
add
jle
mov
inc
jnp
popa
jno
push
js
jae
mov
jne
jle
mov
sub
jne
and
pop
fucomi
or
adc
iret
frstor
add
cld
mov
inc
rcrb
lea
sub
cld
jmp
test
inc
les
int
icebp
je
sbb
mov
sub
mov
dec
mov
add
sbb
xchg
xchg
jle
stos
std
icebp
adc
mov
xchg
and
push
pop
orl
jb
sti
mov
push
jnp
jo
lock
mov
push
inc
push
es
add
fcoms
in
stos
or
dec
and
lods
in
seta
and
int
fsubs
shll
mov
push
lret
in
add
mov
jns
inc
xchg
sbb
or
sarl
or
aaa
shrl
xchg
sahf
fadds
push
aam
ret
push
test
push
and
hlt
push
mov
lds
jle
cmp
int
shll
xchg
cs
push
cmp
inc
xchg
add
push
cmp
pcmpeqd
aam
imulb
sbb
stos
sbb
push
test
xor
stos
orl
repz
cwtl
enter
push
mov
push
pop
and
roll
dec
mov
test
rol
ja
mov
push
xlat
in
and
push
test
push
and
inc
test
repnz
fwait
negl
mov
dec
in
adc
mov
push
mov
fstpt
xchg
mov
scas
push
inc
scas
mov
xor
mov
mov
or
xor
int
pop
mov
xor
push
add
cmp
out
aas
loope
adc
mov
loop
pop
jp
xchg
or
cmp
fxch
mov
xor
cli
rcrl
mov
and
jae
outsl
or
cmp
push
lea
imul
and
icebp
mov
push
and
adc
pop
loope
add
cmc
add
mov
outsb
leave
ret
lods
aas
adc
scas
fdivrs
rcrl
sbb
sub
cmp
adc
mov
push
pushl
mov
push
clc
add
push
mov
xor
cwtl
dec
repnz
mov
xor
or
lock
mov
mov
push
sbb
inc
nop
mov
mov
xor
repz
popf
rorl
mull
push
cmc
idivb
pop
daa
shll
add
aas
add
repz
xor
lods
cmp
and
mov
stos
sarb
push
lret
rclb
jns
in
add
enter
mov
dec
aaa
cltd
push
jo
push
test
inc
adc
scas
das
lret
rcll
pop
push
aaa
adc
mov
mov
jnp
loop
inc
icebp
pop
in
imul
jnp
and
pop
das
pop
mov
mov
clc
out
and
jmp
je
dec
cmp
inc
dec
inc
xor
popf
lock
int
sbb
shll
fisttps
jg
jbe
aaa
mov
popf
loopne
popa
fistpl
les
cmpsl
adc
cli
jbe
vmovmskps
in
push
ss
or
xchg
sbb
and
out
xchg
xor
pop
ror
xchg
insl
adc
repz
iret
test
inc
cmp
mov
and
jo
and
pop
jmp
mov
repnz
dec
dec
and
test
adc
pop
mov
rolb
popa
dec
rcrl
fnstenv
mov
adc
test
cltd
jmp
sub
pop
cmp
jecxz
push
ret
inc
jecxz
fcomps
fstps
dec
push
dec
lret
fsubrl
popa
mov
mov
sbb
mov
test
shrl
push
xor
xor
xor
mov
mov
rcr
xchg
add
xchg
push
mov
jecxz
fsubs
dec
mov
sub
rolb
cld
je
inc
add
dec
push
xor
sbb
add
jne
leave
mov
repnz
jmp
std
add
xchg
xchg
cli
aam
jg
sub
rcrl
cmpsl
xor
xchg
adc
mov
xor
jle
dec
ds
les
or
xor
divl
xor
dec
and
nop
frndint
ss
jmp
cmp
xchg
dec
and
dec
repz
mov
mov
cmp
cmp
enter
push
pop
mov
inc
test
not
cmp
jge
addl
inc
mov
cwtl
fwait
rol
test
dec
sub
pushl
js
scas
cmp
shll
adc
out
mov
xlat
adc
mov
lret
leave
cmp
aaa
lret
test
and
shlb
xchg
or
push
in
push
mov
push
adc
push
roll
jmp
in
inc
fnstenv
rorb
dec
inc
adc
mov
adc
rcrl
rorl
int
or
push
leave
mov
cmp
test
xchg
inc
or
jecxz
clc
vpcmpgtw
not
rol
inc
pop
mov
xchg
ret
and
mov
and
negb
sub
rcll
test
je
pop
leave
shrl
jecxz
in
fcomps
int
repnz
shlb
inc
and
rcrb
and
test
jg
in
mov
imul
inc
xor
add
dec
popf
loopne
dec
mov
ret
ror
xor
xor
in
adc
xor
repnz
push
or
sar
add
inc
xor
add
test
adc
fwait
push
mov
mov
enter
loope
test
movsl
aam
mov
add
lods
adc
xor
push
stos
xor
xor
mov
mov
cmp
add
xchg
add
aad
repnz
sbb
out
loop
lahf
div
jbe
and
mov
imulb
sbb
and
aas
testb
ja
out
and
cmc
stos
rorb
fbstp
in
pop
adc
jns
das
frstor
push
ljmp
imul
push
xchg
pop
in
shll
pop
xor
dec
loop
xor
sbbb
aam
mov
int
shr
push
repz
fwait
loop
mov
loope
dec
or
loop
shrl
mov
add
roll
cld
xchg
in
shrb
xchg
test
test
sbb
scas
pop
fimuls
lret
or
xor
in
push
inc
and
int3
stc
ja
inc
test
xor
out
dec
inc
shlb
stc
mov
insb
add
aad
or
stc
call
add
jle
adc
xchg
loope
inc
adc
hlt
insb
and
inc
hlt
sub
mov
rcrb
cld
in
jae
mov
mov
std
test
fxam
xlat
cli
ja
pop
jmp
test
cmpsl
xchg
out
push
jns
push
aas
jo
ja
nop
lret
sub
jmp
mov
int
sub
cltd
call
adc
adc
test
or
inc
movsl
adc
fucomp
test
leave
adc
inc
push
or
call
xor
sar
shlb
test
push
sbb
mov
repz
mov
enter
idiv
outsl
dec
jg
inc
js
shr
aaa
xor
cmc
sbb
add
sub
imul
inc
call
es
sub
mov
mov
xchg
daa
adc
rorl
jbe
dec
cmp
loopne
xchg
cmp
int3
call
jnp
cld
icebp
jmp
dec
hlt
out
or
mov
mov
test
enter
add
add
or
mov
clc
pop
orl
mov
jo
repnz
xor
ja
mov
in
adc
add
div
ret
inc
test
stc
push
mov
mov
or
stc
jl
pshufw
shr
js
sbb
enter
fwait
sub
ret
pop
dec
cltd
sahf
mov
cli
xchg
sub
mov
xchg
imul
xchg
loopne
jbe
push
loope
or
testb
cli
add
push
cmp
test
leave
pop
lods
cld
mov
fcomps
add
mov
imul
cld
imul
repz
or
test
pusha
mov
or
push
or
shlb
in
shl
pop
sbb
hlt
data16
add
xor
inc
xchg
lods
or
or
fnstenv
or
xor
fldlg2
adc
or
loope
in
or
rcrb
out
ret
pop
leave
aam
fld
fnstcw
mov
ret
shrb
ljmp
inc
ja
push
cmc
sbb
push
shl
xor
test
dec
icebp
lret
cld
mov
lock
mov
mov
repz
into
jp
dec
int
xor
xor
addr16
sbb
adc
sbb
stc
jg
stc
push
out
fistpll
cmpsb
lea
mov
in
addr16
jbe
pop
lock
or
dec
push
cs
repz
dec
pop
or
sub
lds
xor
or
cmp
bound
xor
or
cmp
rolb
xor
push
or
loopne
out
divl
jmp
mov
lret
cli
pop
mov
aam
test
lea
jmp
aaa
mov
test
mov
or
add
cmpl
jne
mov
es
sbbl
popf
in
stos
int3
add
movsl
mov
out
insl
repz
inc
mov
ret
sbb
aaa
and
mov
lea
ja
inc
dec
cmc
psubsw
dec
and
ss
adc
or
filds
jo
cli
mov
rorl
jb
jmp
lcall
repnz
xor
or
inc
shlb
test
aad
neg
int
fidivs
push
push
mov
mov
push
insl
and
fsub
fxch
stc
mov
sbb
push
ror
aam
repnz
mov
aas
push
iret
sub
icebp
cmpsl
and
add
xor
add
and
stc
sub
mov
js
repz
sbb
iret
dec
in
fisubrs
push
test
cld
inc
fidivl
pop
mov
aam
and
enter
mov
dec
or
cmpsb
xor
jmp
or
lret
scas
xor
cld
ror
test
mov
ja
add
adc
test
jo
add
test
ret
inc
outsb
in
dec
in
mov
pop
mov
test
add
lret
leave
test
call
and
dec
shl
adc
sbb
imul
mov
pop
ret
jmp
jne
repnz
fucomp
mov
pop
or
mov
sub
hlt
cmc
movsl
xlat
aad
mov
fdivs
popf
repz
mov
dec
in
push
inc
lcall
push
mov
les
in
dec
dec
ljmp
push
mov
es
dec
icebp
std
sahf
jo
aad
pop
outsl
idivl
faddl
or
mov
mov
shll
loope
sub
dec
pop
int
pop
int3
mov
cltd
into
dec
add
rcll
pop
push
jns
std
cli
jecxz
add
stc
add
add
test
sbb
lahf
sub
aam
mov
repz
inc
cmc
loopne
outsl
shlb
xor
enter
mov
stc
sbb
cwtl
and
dec
test
je
sub
das
or
es
addr16
dec
sbb
test
stos
rorl
push
ror
add
test
mov
inc
sbb
lahf
pop
inc
and
or
scas
repnz
mov
in
mov
rclb
cmpsl
fadd
dec
inc
int
or
pop
dec
xor
rorl
adc
adc
vcmpss
in
test
mov
pop
push
stc
mov
std
mov
jecxz
add
mov
mov
into
dec
mov
enter
mov
mov
pop
adc
leave
dec
cmpsb
je
lret
or
fst
inc
push
rcr
lahf
je
call
bound
fdivr
and
rcll
xchg
stos
pop
mov
fmuls
int
sahf
out
add
cld
repz
cli
leave
jae
cmp
je
mov
lock
enter
sarb
cmp
inc
aad
or
xchg
fstps
cli
adc
lock
mov
push
shr
push
adc
sbb
adc
adc
enter
dec
enter
adc
aaa
ror
rol
cmc
pop
test
std
adc
pop
enter
aad
or
pop
enter
pop
rolb
insl
cmc
add
je
mov
sti
or
ljmp
movsb
adc
mov
sub
fwait
out
rorb
int
aaa
ret
in
xor
div
lock
shll
mov
sbb
aam
fnstsw
sbb
lds
in
sub
and
xchg
sar
enter
sbb
sub
mov
test
lods
mov
add
add
add
adc
pop
xor
movsb
push
and
sub
inc
add
inc
inc
jg
rorb
inc
call
pop
lds
cwtl
adc
push
mov
test
xor
clc
rcr
ljmp
popa
mov
test
movsl
mov
and
fs
shll
cmpsb
pop
sbb
push
ret
jmp
xchg
shrb
jle
or
fisubs
pop
bound
stos
sub
lret
test
and
add
adcl
out
jmp
push
outsb
aaa
fs
dec
push
mov
jecxz
rcrl
jb
adc
leave
pop
sbb
lret
jp
clc
mov
mov
aad
sbb
into
cmp
xchg
hlt
lods
outsb
xor
dec
inc
or
in
xor
dec
and
and
sbb
jae
sahf
mov
ret
mov
mov
or
popf
sub
sub
cmp
insb
sbb
sub
xor
sub
and
inc
sbb
inc
aaa
cltd
mov
jns
sub
fyl2x
imul
push
mov
inc
adc
lret
and
cmpsb
adcb
inc
mov
movsl
popa
cmc
push
idivb
add
jle
jmp
mov
push
pop
pop
inc
pop
fadd
inc
call
sbb
fstpt
inc
add
pop
add
mov
cmp
xor
dec
aas
dec
retw
jb
fcom
cli
mov
pop
insl
in
mov
incb
add
mov
jmp
pop
and
mov
icebp
ljmp
movups
or
fistpl
sbbl
popf
cld
loopne
dec
rorb
dec
mov
or
push
mov
cmp
and
inc
movsl
leave
imul
dec
sub
push
add
mov
push
jmp
test
insl
cltd
jb
cli
cmpsb
push
pop
sahf
and
lds
sbb
fwait
aas
mov
in
je
cmp
sbb
jne
shll
sbb
jbe
jmp
mov
xlat
inc
lea
jns
xor
les
jno
xor
imul
mov
and
jge
pop
pop
xchg
lods
cmp
inc
jno
sbb
xor
mov
lahf
dec
mov
leave
add
and
add
loop
dec
adc
loope
imul
mov
mov
xor
jne
inc
nop
fs
inc
imul
rcl
jo
sbb
sub
jmp
out
mov
call
jae
dec
cmp
test
push
roll
popf
add
add
idivb
dec
mov
mov
test
or
cli
xchg
outsb
push
insl
mov
jo
roll
test
push
pop
or
mov
imul
inc
sub
fwait
xlat
adc
jmp
inc
shr
mov
adc
push
push
pop
aam
popf
mov
push
mov
test
jg
sub
cmp
mov
sub
or
fldt
imul
rolb
push
lret
jg
hlt
mov
mov
pop
shlb
push
test
and
mov
vpminsw
push
sti
test
and
pop
xchg
int
rcl
cltd
sbb
fdivp
repnz
dec
fildll
add
dec
psraw
and
dec
and
xchg
outsl
idiv
std
push
push
push
mov
dec
xchg
or
fstl
jno
mov
scas
sub
movsb
ss
leave
inc
pop
xor
kmovb
leave
fdivs
xchg
mov
popa
les
movzwl
fadds
leave
ljmp
cmp
addr16
push
repz
dec
iret
call
and
add
enter
repz
dec
or
adc
cmpsl
je
rcll
pop
inc
adc
dec
fnstcw
stos
out
dec
dec
outsl
sub
add
mov
inc
pop
dec
int3
pop
int
inc
fsubl
and
push
into
adc
inc
xchg
leave
iret
push
sub
js
add
aam
in
int
rorl
cmp
push
aad
pop
ds
pop
fcomp
add
sbb
mov
and
add
rep
adc
test
in
testb
f2xm1
xor
push
adc
mov
aad
or
push
xchg
jle
sub
stos
pop
inc
inc
popa
push
movntps
sbb
test
cmc
mov
add
std
xor
add
xchg
add
or
jmp
mov
mov
in
or
ret
loopne
rorl
sub
stos
cmpsb
mov
ficoml
inc
hlt
jp
dec
ret
enter
repz
and
cli
jae
sbb
mov
mov
lcall
imul
dec
shll
cmc
push
ret
rcl
cmp
sub
mov
jmp
mov
fiaddl
jmp
stos
test
mov
ja
and
fisttps
jbe
iret
pop
mov
xor
lds
jno
test
insl
stos
cwtl
stos
mov
test
push
call
jg
adcb
in
out
xchg
push
xchg
cltd
adc
dec
xchg
ret
sbb
das
in
dec
jns
vaddsd
xor
mov
push
pop
inc
dec
in
rcll
add
inc
mov
in
inc
and
mov
push
in
test
mov
rclb
mov
sbb
mov
stos
pop
outsl
adc
add
pop
mov
cltd
mov
sub
or
std
pop
mov
hlt
scas
xchg
xchg
mov
pop
cld
aas
stc
loopne
aad
or
int3
mov
aam
cs
dec
das
inc
ret
rcll
outsl
or
and
push
lock
or
imul
in
scas
dec
mov
decl
dec
ror
out
cmp
xor
popf
mov
mov
out
rcl
dec
lret
sbb
jmp
out
mov
jo
in
js
pop
dec
clc
aad
fxam
fisttps
repz
push
ret
sub
lods
dec
shr
repz
jle
or
push
sub
jno
sar
dec
adc
sbb
pop
inc
lods
jo
push
jae
into
sbb
add
stos
push
out
loop
ror
jge
inc
mov
lret
sbb
mov
dec
pop
ret
jle
lcall
cwtl
dec
push
push
mov
push
ret
mov
sub
add
aaa
dec
cmp
popfw
and
rolb
imul
stos
dec
jbe
or
test
mov
sub
jne
dec
and
adc
push
mov
dec
mov
add
mov
adc
loop
and
inc
add
xchg
psubw
sarb
add
sbb
std
pop
xor
cmp
stos
mov
pop
jle
hlt
mov
repz
adc
test
mov
cli
cmpsb
aas
in
pusha
lret
insl
mov
mov
lret
mov
xchg
inc
xchg
inc
dec
lret
add
cmp
test
add
stos
shll
fisubl
xlat
adc
mov
xor
test
add
fldcw
mov
jns
ret
or
pop
cmp
ret
insl
mov
fldcw
push
insl
pop
lahf
out
js
add
jne
mov
dec
dec
push
push
add
add
repnz
rol
add
add
mov
jne
fisubrl
inc
push
ss
movsl
xor
stc
xchg
pop
pop
orb
xor
js
mov
cmp
adc
cld
add
aam
popf
pop
xchg
cli
mov
xor
popa
push
dec
xor
cmp
in
add
mov
loop
dec
xor
push
nop
sub
cmc
xor
cs
xlat
jecxz
fbld
sub
push
cltd
adc
dec
jl
lcall
cwtl
out
pop
bound
lahf
cwtl
jmp
mov
sbb
int3
fiadds
shlb
ljmp
aad
cmpsl
insl
ljmp
mov
or
fs
cmp
fbld
shlb
fldl
into
rolb
shlb
add
sahf
pop
jno
fldl
push
jmp
mov
mov
jne
loop
scas
mov
fld
jbe
jns
loopne
sub
mov
mov
mov
push
icebp
push
jge
or
push
imul
sar
xor
int
or
inc
cmp
and
add
push
mov
fs
in
xor
and
jbe
int
add
cmpsl
aam
push
add
jmp
mov
xor
fcmovbe
and
or
fistl
movsb
loope
sbb
adc
mov
push
rorb
inc
imul
or
jo
mov
fwait
inc
minps
jns
addl
push
loope
or
push
daa
fwait
syscall
jle
fdivrl
popa
outsb
fiaddl
out
insb
std
shrl
arpl
add
dec
aaa
cmc
adc
in
imul
leave
cmp
scas
cmp
jo
sbb
lahf
inc
lock
mov
aad
idiv
test
and
mov
in
aad
scas
add
mov
popf
sub
mov
repnz
jb
outsl
add
out
dec
cmp
inc
fists
bnd
test
gs
inc
adc
jb
pop
or
insb
jmp
and
es
movl
orl
lea
aas
lock
adc
out
lret
inc
mov
dec
xorl
mov
cmp
aas
ret
jae
out
in
mov
pop
cmp
loope
dec
sub
es
mov
add
xchg
scas
sahf
mov
arpl
jo
and
and
or
jecxz
repz
and
cmp
stc
in
in
fdiv
es
iret
repz
ffree
pop
push
sbb
movsl
jg
ljmp
cmpsl
mulb
std
scas
push
mov
lock
loop
aam
sti
pushf
xor
inc
dec
clc
pop
leave
push
jnp
nop
shrl
add
inc
xor
imul
or
cmp
insl
jp
sbb
out
loope
sbb
push
dec
loopne
and
sbb
call
insl
iret
aaa
inc
adc
stos
shlb
jmp
mov
jecxz
cmc
and
push
sbb
lock
adc
jb
ljmp
clc
pop
xchg
or
out
xor
sbbb
out
test
in
ret
notb
mov
add
lret
loopne
out
outsl
dec
es
pop
add
lret
xor
test
outsb
test
mov
int3
mov
icebp
ret
aam
cmpsb
imul
das
pushf
jmp
rol
and
mov
fisubrs
loope
mov
push
mov
inc
add
dec
xor
mov
icebp
dec
mov
in
test
icebp
cwtl
mov
adcl
mov
ja
push
stos
and
lds
hlt
pusha
out
jmp
jle
sbb
ret
popf
jp
fsub
jno
or
mov
xchg
stc
inc
enter
sbb
jae
lds
in
mov
xor
xchg
or
or
ljmp
and
jle
or
xlat
repz
rcrl
jns
add
ljmp
xchg
cli
cmpb
dec
push
cli
std
xlat
mov
and
adc
ss
push
mov
jns
dec
std
add
rcll
dec
ja
sbb
fists
xor
imul
ret
test
add
leave
pop
shlb
push
cmp
arpl
sub
insl
jle
dec
and
push
mov
fsubrl
mov
int
jnp
mov
pop
stos
lock
mov
aad
imul
stos
orb
inc
test
mov
add
adc
andb
cwtl
aad
enter
cmpsl
repz
mov
and
xchg
push
and
stos
repz
pop
sub
xlat
mov
push
lcall
add
lret
pop
mov
int
xor
mov
adc
and
jmp
add
int
and
sub
outsl
cs
sbb
sbb
bound
cmp
push
and
dec
cmp
jecxz
jg
mov
addl
jae
mov
rcr
fisttps
sbb
dec
lahf
inc
in
mov
mov
movsl
mov
cmp
cmp
mov
sub
andb
imul
sbb
je
jecxz
movd
push
and
add
push
loope
xchg
out
test
data16
or
roll
data16
sbb
or
jbe
cmpsl
cmpsl
out
adc
enter
loopne
lods
cmpsl
mov
xchg
ss
fbstp
ret
inc
push
sbb
inc
mov
xchg
shlb
sbb
or
bound
or
andl
jecxz
sbb
inc
push
mov
hlt
add
inc
jge
movsl
leave
sti
jmp
cltd
sub
sbb
lret
outsb
das
or
add
out
push
push
dec
or
dec
adc
push
in
fisubrl
and
test
imul
jge
call
xorb
stc
ljmp
mov
shll
push
push
in
xchg
jp
sbb
dec
dec
jne
add
pop
orl
into
cmp
dec
or
xor
dec
jae
call
aam
cs
rorl
mov
push
lds
xchg
xchg
and
xor
cltd
ret
les
test
pop
dec
sarl
test
push
pop
in
jne
cltd
mov
int3
out
out
dec
xchg
in
movsl
in
dec
xor
shlb
dec
pop
sbb
dec
xchg
cmp
dec
call
inc
fcos
sbb
sbb
loop
xchg
cltd
sub
pop
ret
or
out
mov
mov
je
sahf
push
enter
std
movsl
xor
loop
inc
mov
cwtl
jae
xchg
dec
cs
inc
mov
mov
push
mov
aaa
push
aam
pop
rcl
xor
xor
icebp
xor
fmuls
add
add
fidivs
ret
outsb
pop
arpl
ret
sti
adc
divl
jno
dec
jns
cmpl
adc
fidivs
cmpsb
stos
xor
test
fs
test
push
ja
jae
loope
dec
es
xor
dec
adc
jmp
mov
not
cmp
test
jmp
push
and
or
adcl
add
sub
loope
add
add
or
dec
rorb
outsb
xchg
xchg
aam
pop
jb,pt
pop
ret
pop
jno
lcall
jo
mov
cli
fwait
cmp
mov
sbb
mov
pop
stos
sbb
xor
lds
or
jp
mov
or
movl
add
pop
leave
inc
enter
xor
and
lret
frstor
popf
mov
mov
mov
imul
sbb
pop
ds
dec
jo
data16
add
fcmovb
sti
in
dec
jae
sar
pop
and
inc
mov
pop
sub
or
jne
pop
loop
jbe
out
ss
dec
ss
aam
loope
negb
pop
popf
mov
lock
jae
out
testb
mov
pop
dec
rcrl
fildl
shrl
cmp
xor
bound
movsl
mov
xchg
jae
jno
in
es
push
out
insb
ret
xchg
sbb
decb
jb
xor
mov
sbb
movsb
aam
cmp
test
aam
outsb
dec
jmp
into
xor
mov
xchg
jbe
int
pop
inc
push
xlat
pop
nop
push
jle
fcmovne
stos
xchg
mov
sub
xor
sbb
dec
mov
jg
test
lods
add
sbb
loopne
cwtl
fsubrs
xchg
or
add
lret
shrb
cltd
fistl
push
out
fiaddl
mov
leave
mov
call
stc
pop
insl
divb
and
lea
and
rol
jbe
aaa
fnsave
lcall
sbb
loope
mov
mov
lahf
add
xor
dec
fcmovb
imul
adc
in
inc
jmp
imul
xor
sbbl
sbb
push
pminsw
mov
mov
mov
cmp
fdivs
int
insl
scas
pop
in
andl
and
stos
lret
dec
push
insl
mov
out
jae
add
xor
sti
mov
lret
mov
pop
inc
adc
loope
adc
pop
or
daa
dec
xchg
adc
push
lret
stos
out
fistl
xor
dec
ffreep
add
xor
cmpsl
lods
imul
insl
pop
xor
shlb
dec
push
jge
inc
xor
stos
inc
xor
cmpsb
cmp
lea
test
mov
fcmovne
outsl
stc
pop
xor
loope
insb
pop
xlat
push
or
xor
pop
aam
scas
rol
xchg
inc
jns,pn
pop
inc
loop
mov
rcrl
cmpsl
add
lret
xor
into
outsb
jbe
or
int
dec
ljmp
fcoml
dec
aas
jle
push
lahf
ss
cs
scas
push
mov
jns
cmc
sub
push
mov
shll
mov
into
addl
mov
cmpsl
and
mov
out
ret
ret
into
rcr
sti
andl
movsl
xor
clc
jge
ja
mov
jb
pop
xchg
aam
cmp
sbb
jbe
ljmp
pop
cmp
jg
cmp
repz
push
sbb
mov
mov
and
push
cmp
mov
add
sbb
adc
sti
cmp
cmpsb
js
add
jle
sub
into
fucomp
xor
aad
rcrl
push
mov
std
cmp
xchg
pop
shll
cld
adc
add
rcl
jnp
aaa
xchg
cmp
xchg
popf
sahf
insl
mov
stc
xlat
xchg
test
jmp
xchg
test
test
in
lds
or
mov
xchg
jns
fisttpll
ss
into
loopne
pop
outsl
movsl
imul
xchg
insw
jno
out
add
mov
sub
int
ret
and
xor
pop
xor
and
adc
loopne
lds
shll
mov
mov
mov
mov
push
adc
jne
add
or
mov
sub
pop
adc
out
jne
mov
mov
mov
fdivs
stos
incb
cmpsl
xor
add
cltd
pop
adc
lock
clc
call
test
cltd
fdivrs
leave
leave
lahf
in
mov
push
shll
roll
mov
jb
out
and
stc
push
or
mov
lods
dec
incl
xchg
cld
adc
cli
mov
idivl
dec
out
jecxz
sub
add
outsb
mov
rcrb
adc
cmp
xchg
mov
cmp
fsubl
xor
test
cmc
fs
cmp
mov
inc
stos
mov
daa
fistl
adc
ret
sbb
jmp
in
inc
sub
xchg
sbb
mov
mov
in
aaa
inc
push
data16
lcall
dec
dec
xor
cmp
pop
push
xor
dec
mov
mov
sub
or
dec
aam
test
xor
cmp
mov
aas
sbbb
cmc
mov
pop
insl
dec
aaa
aad
add
push
sub
add
icebp
xor
nop
dec
mov
xchg
andb
lret
dec
lret
pop
inc
ljmp
lcall
xchg
in
in
sbb
cli
push
xchg
or
in
mov
ret
jl
or
mov
movsb
inc
cs
sbb
ret
mov
fidivrl
pop
les
leave
test
inc
mov
push
sarb
push
popf
aas
lods
mov
mov
ret
int
push
cmc
lret
push
cltd
pop
adc
aam
jno
jbe
and
push
pop
rclb
loop
jo
pop
sti
push
jbe
mov
jp
mov
xchg
lret
std
ficompl
dec
inc
xchg
cmp
lods
arpl
lcall
movb
leave
testl
inc
mov
add
mov
shl
pop
xchg
xchg
sbb
and
cmpsl
cmpsb
cmp
xor
cmp
jge
in
push
repz
out
jne
in
mov
mov
push
add
test
mov
loop
mov
add
scas
pop
cmp
aad
ja
pop
in
jle
sarb
sahf
and
gs
aad
add
xlat
mov
sbb
adc
orb
outsb
or
hlt
test
dec
loope
or
mov
xor
sets
jns
xchg
enter
aas
fiaddl
js
mov
jae
rcrb
ret
pushf
loope
lods
ret
jmp
shll
in
in
fucomp
clc
pop
sbb
inc
cmp
mov
sub
movsb
in
jb
cmp
or
arpl
popf
clc
icebp
iret
and
scas
leave
xchg
push
call
dec
pop
ret
jae
or
and
inc
sbb
leave
lods
into
mov
jg
add
sbb
xchg
mov
xor
sti
into
mov
add
rorl
movsl
fdivs
cltd
int
in
cmp
pop
push
mov
loopne
popf
jae
movsl
into
cmc
mov
rcrl
mov
push
jle
les
mov
jne
cmp
ret
popa
les
inc
xor
xchg
cmp
test
lret
inc
je
mov
add
ds
adc
inc
aam
repz
sbb
mov
or
and
and
sbb
js
enter
fstps
inc
push
fldcw
inc
or
jne
mov
xor
cwtl
loopne
push
push
pop
sbb
xchg
and
add
test
call
push
push
inc
inc
jg
rorl
nop
es
xchg
jno
mov
in
mov
xor
jae
xor
mov
adc
ja
les
out
add
dec
jecxz
sbb
sub
imull
mov
push
xlat
xor
lock
and
sbb
stc
pop
jns
shl
push
add
xor
enter
inc
add
push
pop
cmc
cmp
jg
push
add
inc
adc
xchg
sarb
xlat
xchg
cmpsl
inc
pop
xor
jno
inc
enter
cmc
xchg
int3
push
and
mov
xor
push
orl
mov
out
mov
sbb
adc
lds
test
scas
jmp
dec
inc
movsl
movsl
out
jnp
inc
cmp
mov
push
sbb
or
mov
std
test
or
rorl
mov
push
or
add
insb
movsl
fisttpl
popa
js
mov
mov
jbe
dec
adc
mov
fdivl
shrl
jno
xor
std
inc
inc
int
stc
clc
dec
pusha
test
dec
xchg
inc
je
test
cmpsb
xorl
mov
shrl
sbb
std
aas
fstps
dec
int
scas
cmpsb
adc
sbb
inc
and
mov
ret
cmpsb
popf
lds
mov
or
pop
xchg
rcrl
jo
sub
orb
aas
icebp
add
inc
fcomi
mov
sbb
jns
xor
enter
sub
in
sbb
mov
rcl
pop
repz
ss
pop
fdivrs
leave
mov
and
or
leave
mov
xor
sti
add
pop
cmc
insl
jmp
jo
or
sar
lcall
push
push
pusha
leave
int
pop
and
jmp
xor
stos
pop
mov
adc
repz
int
les
mov
inc
outsl
aad
mov
out
fisttpl
inc
jo
cmp
pop
adc
inc
add
and
call
or
adcb
add
enter
and
leave
sarb
mov
or
lea
adc
sbb
push
fists
aad
cli
jp
lcall
add
fs
sub
cwtl
cmp
std
mov
dec
mov
xor
icebp
pop
xor
jns
rorl
adc
gs
or
leave
adc
inc
ss
xchg
add
add
icebp
add
jno
into
sub
in
inc
in
xor
xor
jl,pn
fadds
pop
int3
in
cmp
pop
in
sbb
fldl
jnp
push
fxch
iret
xchg
stos
test
and
movsb
jge
xor
popl
and
xchg
mov
clc
inc
jb
psrlq
push
cmc
cs
dec
shrb
mov
rcll
hlt
jnp
aad
jne
outsl
test
sub
add
push
test
cmp
dec
mov
xor
fisttpll
adc
lea
add
adc
imul
xor
sbb
cmp
imul
sbb
push
fsubs
out
sub
cwtl
addr16
movsb
ret
lcall
lods
lea
scas
xor
mov
into
jle
int
jmp
pusha
daa
xor
mov
add
add
aam
scas
mov
dec
decb
shll
jb
jge
inc
mov
in
mov
inc
scas
dec
lahf
leave
inc
aaa
jle
mov
test
repz
aam
call
int3
mov
in
pop
loopne
insb
inc
inc
jmp
repz
lock
xor
and
dec
lea
lea
xchg
rol
test
jmp
cmp
and
in
adc
dec
jmp
xor
or
dec
ret
xchg
push
add
push
scas
inc
sahf
rcll
mov
mov
push
xor
test
loope
jbe
mov
mov
pop
or
jb
and
scas
jne
sarl
pop
cmpsb
mov
aad
adc
in
stc
test
dec
mov
sbb
xchg
jge
mov
jo
test
mov
ljmp
pop
test
sub
jo
icebp
imul
fbstp
aas
lock
ss
jecxz
or
in
rorb
xor
inc
cmp
inc
and
or
inc
mov
mov
sarl
add
dec
lock
or
push
xchg
sbb
xchg
fnstsw
sub
fldl
push
call
ds
aad
mov
sbb
aas
inc
xor
fidivl
fisttps
sub
icebp
mov
repz
cli
xor
add
call
rcrb
insb
mov
xchg
jne
push
mov
inc
add
movsb
or
stos
enter
add
hlt
jo
sub
out
sbb
inc
outsb
pop
xchg
inc
add
subl
cmp
jecxz
mov
fldenv
add
xor
cmc
adc
mov
mov
mov
xchg
mov
mov
mov
out
pop
icebp
add
roll
push
mov
pop
jne
loope
icebp
dec
sbb
mov
pop
mov
cmp
addr16
xor
sub
jge
and
adc
or
mov
arpl
lret
inc
mov
leave
jmp
jecxz
dec
or
jmp
xchg
or
inc
sub
out
fldenv
stos
push
mov
mov
and
leave
test
pop
xor
mov
add
sub
in
sahf
leave
in
mov
and
iret
leave
add
fldl
sbb
idivl
int
adc
leave
inc
add
aaa
shll
lock
lret
and
test
leave
cs
adc
sub
mov
adc
push
mov
lods
pop
push
insb
psubusb
lret
fildl
fisttpll
sub
cld
flds
dec
cmp
sub
loopne
push
int
nop
push
shl
xor
pop
jno
jg
push
lds
xchg
xor
pop
xchg
jle
ret
pop
pop
mov
mov
ja
fldcw
jbe
cld
fildl
inc
test
and
fmul
test
xor
add
fldl
xor
test
in
mov
push
cmp
roll
add
or
repz
icebp
insb
lret
push
shrb
popa
shrb
out
push
iret
movsb
and
jle
stc
lret
push
dec
mov
add
imul
lods
int3
sbb
les
rcrb
leave
pop
out
int
xorl
rep
in
gs
jmp
rcl
jecxz
enter
or
aam
testb
cwtl
insl
ds
xor
dec
inc
ljmp
add
push
push
shrl
popa
mov
test
adc
mov
xor
jne
and
xchg
push
push
icebp
pop
stos
jle
inc
push
cmp
aas
ret
jle
imulb
ds
decl
ja
adc
and
shr
pop
cmp
and
lret
xor
cmp
xchg
decl
test
icebp
jecxz
cmc
lds
jmp
into
aas
jge
xor
sbb
mov
incl
out
jmp
dec
out
sbb
aad
mov
fisttpl
leave
cmp
add
mov
sub
fs
loope
ret
mov
leave
repz
cmpb
mov
aam
add
inc
mov
or
movsl
arpl
xchg
loopne
push
or
dec
in
cmp
in
add
inc
jne
xchg
lock
pop
mov
and
mov
jge
push
hlt
dec
mov
jmp
push
test
mov
xor
mov
je
pop
leave
insb
sub
mov
enterw
out
and
add
xor
sarl
xor
inc
rcll
sarl
add
jae
lock
lret
out
sbb
xor
lock
aaa
cli
add
pop
fcmovnu
pusha
mov
test
sbb
test
scas
xchg
dec
aam
push
fcmovnu
push
cwtl
add
cmp
inc
add
inc
push
test
lea
xlat
xor
leave
add
xchg
xor
xor
pop
cmpsb
xchg
test
pop
cmc
push
roll
mov
js
jne
cmp
dec
and
lcall
outsb
in
and
mov
into
ss
jmp
mov
jge
fistl
mov
jle
inc
or
daa
movb
xor
inc
mov
adc
clc
ss
xchg
mov
mov
aas
dec
sahf
inc
push
outsb
inc
mov
and
or
jp
mov
cld
dec
xorl
in
mov
gs
sub
mov
xchg
pushf
jecxz
and
test
add
push
mov
mov
inc
mov
sub
dec
lret
out
loope
pop
roll
leave
montmul
cmpsb
inc
ficoml
pop
fs
adc
aas
pop
ss
pop
cmc
mov
ss
lret
jns
test
hlt
push
add
jb
icebp
jmp
daa
in
in
inc
adc
mov
mov
inc
jbe
mov
and
rcrl
inc
pop
hlt
push
js
mov
pop
add
add
mov
adc
popf
enter
nop
inc
adc
insl
int
fidivrl
fld
dec
xor
mov
es
xor
cmp
jp
imul
mov
xor
shll
dec
in
dec
out
sbb
gs
les
push
jns
jne
in
mov
andl
adcl
or
cmp
jl
pop
push
inc
in
mov
xor
add
jge
nop
mov
into
dec
pushf
int3
dec
int
dec
out
fimuls
stos
int3
test
stos
sbb
pushf
ljmp
push
aam
fnstsw
fstps
sbb
test
or
mov
lcall
stos
leave
mov
and
aam
imul
inc
push
or
scas
dec
mov
dec
movsb
clc
push
xor
jle
or
pop
fwait
ss
add
add
dec
test
push
in
mov
fisttpl
adc
sbb
jg
xor
sbb
mov
and
add
or
mov
leave
outsl
in
xlat
dec
idivb
aaa
mov
sti
xor
cmp
lock
inc
das
sahf
or
xor
xor
iret
and
test
jl
xchg
clc
adc
or
loopne
mov
stos
in
dec
out
aaa
cli
ror
imulb
leave
rorl
push
lods
xchg
pop
ret
add
std
shlb
lahf
and
ljmp
inc
mov
mov
mov
fidivl
fcomps
mov
pop
fwait
lret
lods
fcomps
jl
adc
in
pushl
adc
fldenv
jp
filds
cmpsb
hlt
ret
les
xchg
and
frstor
push
inc
push
pop
sub
or
daa
lcall
lds
push
loopne
stos
aaa
loope
shl
or
push
mov
imul
mov
hlt
cmp
xchg
mov
ficoms
lcall
sbb
aas
jmp
rolb
cli
and
add
fbld
pop
jne
into
or
aad
test
stos
jge
andl
inc
mov
fdivs
add
setns
ds
out
test
jae
pop
fldl
cs
stos
mov
bound
inc
aaa
add
jle
int
add
leave
mov
loopne
rcrl
xor
push
sub
pop
xor
enter
out
cmp
ror
rclb
mov
icebp
xorps
repnz
aad
cmp
mov
mov
lds
test
mov
mov
xor
leave
lret
dec
cmp
out
push
mov
sub
push
adcb
sub
rcrb
sub
aam
dec
mov
push
mov
pop
in
xchg
hlt
inc
mov
dec
lret
outsl
cmp
and
pop
dec
sahf
repz
sub
push
xchg
in
imul
stc
test
loope
add
stos
sub
push
inc
xor
inc
stc
fldcw
in
lods
xchg
fnclex
fadd
shr
push
mov
out
movsb
inc
fildll
nop
fistpll
lods
mov
test
sub
negl
jl
jmp
pop
outsl
sub
in
mov
jle
xor
inc
dec
mov
dec
inc
push
popa
xor
xor
mov
inc
daa
faddl
mov
test
mov
fistpl
add
xchg
xor
insl
lods
inc
mov
xor
imul
or
inc
jbe
sti
roll
repnz
and
xchg
and
test
mov
and
or
out
je
push
loop
test
xchg
ret
psllw
pop
movsl
inc
sub
pop
mov
push
sarb
inc
lock
dec
das
jecxz
inc
std
in
mov
pop
aaa
pop
sub
pop
jmp
sub
jmp
xor
add
pop
leave
cs
add
inc
fs
jge
adc
clc
cmc
sbb
test
shrl
shrb
adc
or
pop
or
inc
push
pop
adc
mov
fs
or
and
into
cmp
push
pop
test
dec
testl
pop
push
or
idivl
inc
add
lret
rclb
adc
sti
icebp
into
repz
mov
lahf
rcrb
movsl
ljmp
xor
mov
es
jmp
inc
xchg
or
sbb
out
mov
aas
hlt
inc
push
mov
mov
xchg
adc
rorl
push
iret
fwait
mov
lea
xlat
jecxz
stc
cmpb
or
cmpsl
orb
cld
mov
add
popa
fisttpl
mov
dec
enter
push
shl
xor
shl
imul
mov
or
test
cmp
lods
sbb
insb
jne
cmp
ror
outsl
rcr
cmc
loopne
dec
sub
jg
xchg
xor
jg
shr
les
fcom
int
and
sbb
jmp
rorb
mov
mov
test
dec
pushf
mov
fiaddl
les
je
dec
dec
mov
and
sub
dec
cmp
mov
xor
add
shl
jbe
jmp
mov
aad
xor
test
pusha
add
inc
leave
mov
lret
lea
jne
dec
inc
jle
mov
jae
movsb
clc
adc
lret
mov
aas
les
and
and
lock
mov
icebp
push
cmp
shr
jge
sbb
mov
push
sub
sbb
sbb
ret
or
test
or
fcmovnb
jbe
loope
mov
dec
pop
aad
int
ret
adc
adc
loop
bound
jecxz
loope
in
stc
test
add
sub
dec
inc
mov
aas
and
imul
into
inc
xor
dec
sub
test
scas
and
stc
push
lret
sahf
lods
mov
ret
push
xchg
movsl
popw
xor
jns
ret
lods
stos
inc
mov
lret
loopne
test
lret
cmc
mov
movsb
nop
pop
clc
outsb
cltd
rolb
jp
mov
dec
push
in
jmp
pop
mov
mov
add
mov
cmpl
xor
push
in
xchg
jecxz
rolb
shrb
shll
cmc
jcxz
shrb
xor
cmp
mov
roll
loop
add
mov
es
and
ss
repz
dec
cmc
inc
xor
adc
clc
sbb
pop
les
shrb
arpl
add
call
xor
mov
aas
inc
dec
pop
add
sub
mov
cmp
lret
ds
pop
lds
mov
rorb
arpl
in
mov
les
or
ret
idiv
repz
aas
dec
push
jmp
jnp
push
in
mov
in
pushf
fldt
popa
aas
jl
jecxz
sarb
sarl
jae
jb
mov
in
add
js
rolb
mov
in
rcrb
cwtl
stc
lret
daa
repz
sub
repnz
sub
and
and
iret
mov
dec
pop
and
inc
ret
adc
lods
jp
adc
sub
xor
push
cmpb
and
movb
repz
out
cmpsl
jae
adc
adc
stos
fistps
std
add
ret
mov
dec
lds
jbe
ljmp
pop
pop
sar
into
subl
leave
into
in
cmp
mov
jp
pop
jl
notb
pop
call
inc
testb
lea
mov
or
mov
ja
inc
inc
test
rclb
inc
mov
and
lcall
push
frstor
mov
stos
adc
icebp
lds
outsl
cs
outsl
jecxz
lahf
out
push
pop
inc
stos
add
hlt
mov
mov
fiadds
stc
pop
ljmp
cmp
and
pop
xchg
inc
jo
dec
in
sahf
xchg
sbbb
mov
ds
jmp
xor
arpl
sub
notl
pop
pop
in
pop
notl
popa
xchg
int
inc
hlt
and
std
fisttpll
sub
add
js
ret
cmpsl
orb
hlt
push
and
jp
mov
push
sbb
dec
test
stos
sbb
stos
sbb
push
iret
or
xchg
sub
dec
mov
and
add
adc
push
test
mov
clc
test
mov
dec
in
cli
ret
outsl
call
in
fdivs
out
jbe
jg
lods
jmp
push
sbb
push
leave
sahf
dec
dec
push
mov
fbld
jg
aam
add
inc
mov
enter
xchg
sbb
mov
add
fmuls
pop
jge
cld
mov
ss
int3
loope
xchg
testb
jmp
sbb
mov
rcrb
pop
sub
fcomps
mov
out
popf
push
and
push
jmp
sbb
lock
scas
add
mov
js
shrl
xor
push
and
adc
xchg
xchg
sub
jmp
mov
adc
sbb
jns
out
cmc
xor
loopne
xchg
dec
xchg
ljmp
and
outsb
mov
cli
test
clc
iret
mov
pop
sub
jecxz
mov
jno
movsb
xor
sub
xor
xlat
cmpsb
inc
xchg
sub
mov
and
rcr
int
into
pop
stc
lods
enter
hlt
popf
ds
es
mov
xor
insl
lret
xor
sub
mov
dec
into
mov
inc
fldt
lret
in
mov
pop
test
xchg
ret
sbb
mov
fcomps
dec
std
push
divl
jecxz
pop
inc
jmp
fadds
shl
pop
stos
jae
mov
addb
sahf
inc
jge
addb
shlb
mov
cmp
insb
adc
icebp
adc
imul
aad
imulb
jg
rol
mov
add
test
mov
fisubrs
and
xor
or
dec
out
enter
insl
inc
pop
lret
mov
and
mov
adc
cmc
xor
sti
repnz
or
aaa
inc
add
frstor
ljmp
cmc
push
leave
out
or
in
lea
jge
ret
jl
mov
rcrl
dec
xsaves
stc
nop
loope
xchg
pop
fbld
pushf
dec
ret
repz
mov
and
inc
add
lds
xor
ljmp
lret
repnz
adc
jae
loope
dec
movsb
ret
mov
sbb
dec
cli
rolb
int
test
call
ds
loope
call
mov
push
pop
jno
call
inc
add
pop
and
inc
popf
inc
push
add
jle
pop
flds
int3
mov
or
mov
dec
mov
push
int3
lods
test
push
or
stc
xor
jp
icebp
jge
mov
mov
int3
enter
and
aam
inc
mov
pop
iret
out
repz
imull
jle
mov
mov
mov
mov
movsl
call
mov
sub
cli
test
pop
cmp
adc
out
outsb
inc
call
movmskps
jmp
mov
jecxz
pop
idivl
mov
adc
roll
jo
out
xor
mov
cmp
xchg
je
jp
rcrl
popf
jnp
mov
mov
and
mov
sbb
adc
aaa
mov
sub
push
cmp
dec
mov
shll
popa
jle
cwtl
icebp
pop
insl
rcl
shrl
sbb
or
sub
lret
jmp
push
mov
hlt
mov
push
into
lcall
xchg
cmc
lret
sbb
into
repz
roll
mov
xchg
ds
jg
scas
jnp
and
sahf
mov
or
fnstsw
shrl
bound
mov
pop
lock
push
inc
mov
cltd
jnp
repz
sahf
mov
push
negb
andb
loope
rorb
jl
shll
cmp
add
movsb
cmpsl
lret
sarb
sarl
shrb
test
mov
rcl
and
sbb
ret
test
add
rcll
pop
pop
stos
mov
sub
icebp
add
sub
sub
outsl
enter
ss
js
in
in
ja
hlt
inc
outsb
cmp
sub
jmp
lds
xlat
xchg
popa
sti
and
sbb
in
inc
int
nop
lock
cmc
enter
mov
rol
sub
repnz
ljmp
test
jbe
aam
xchg
test
jb
sarl
cli
sbb
pop
cmc
jne
les
lods
pop
push
mov
push
repz
aaa
sub
arpl
nop
filds
or
in
mov
jmp
push
dec
cmp
or
dec
sbb
push
popa
out
push
xlat
fcoml
lret
dec
cmpsl
jo
shl
int3
jns
ss
adcl
int3
fldl
fists
loope
out
jae
inc
aas
addr16
pop
sbb
adc
in
dec
insl
psubusw
inc
and
xor
mov
pop
gs
jns
flds
xor
roll
mov
outsb
or
ljmp
mov
aam
add
sarb
or
lret
sub
pushf
leave
sub
cmp
lods
mov
cmp
dec
les
cmc
dec
inc
movsl
call
xor
lods
js
push
add
mov
hlt
test
mov
xchg
mov
jle
mov
xchg
mov
dec
jge
jns
aaa
test
jle
movsl
outsl
sbb
jnp
push
dec
ss
adc
and
test
in
scas
push
or
mov
mov
dec
shlb
stos
mov
cltd
clc
jle
adc
mov
ds
jg
movsb
cmc
push
jo
sub
rcll
jnp
rcr
jb
hlt
sbb
and
dec
aad
push
xchg
cmc
lcall
je
ret
pusha
mov
push
inc
insb
shll
jnp
lea
enter
push
enter
add
pop
repnz
int
js
enter
xor
imul
icebp
pop
add
fcoml
cmc
aam
sbb
xrelease
inc
pop
imul
sbb
cmp
push
mov
fisubs
xor
call
aad
adc
cmp
mov
or
ds
add
fldl
aaa
xor
sub
inc
sub
les
mov
in
shr
pop
jbe
mov
loop
jne
xor
xchg
mov
pop
mov
shlb
xchg
leave
inc
dec
cmc
add
shlb
rcr
fwait
ja
dec
sub
mov
lret
dec
aaa
popa
sbb
and
fadd
jne
mov
cmc
lea
cs
insb
mov
mov
jecxz
enter
or
inc
pusha
ds
cltd
ret
stos
aad
cmc
cld
jbe
push
inc
inc
rcll
jp
dec
xchg
ret
mov
aad
clc
inc
psrlq
fs
clc
push
xor
mov
daa
xchg
adc
jbe
pop
cmp
cmpsl
jns
loop
les
mov
test
imul
push
xchg
dec
push
hlt
xor
in
xorl
les
outsl
xchg
xor
shrl
mov
hlt
imul
add
out
lret
out
push
es
out
inc
sbb
xor
aaa
and
and
xchg
shlb
inc
lret
and
ret
push
adc
mov
lret
fcmovnbe
ss
in
in
adc
sbb
inc
dec
lret
out
sbb
add
cmp
test
xor
cmpsl
into
orl
inc
movsl
jb
dec
cmp
test
test
enter
aam
dec
jl
lret
test
inc
push
inc
loopne
inc
dec
ja
stos
out
jg
hlt
sub
sarl
inc
mov
out
push
and
mov
dec
inc
lds
sbb
leave
mov
ret
stos
repz
leave
shrb
mov
pop
jne
sarb
shlb
mov
leave
add
jp
mov
push
sub
inc
nop
jae
pushf
rcrl
sub
inc
leave
mov
int3
pop
mov
and
cmp
paddw
shlb
rorb
test
sahf
xchg
inc
into
movsl
inc
jl
push
cmpsb
je
xchg
inc
cld
cmp
fnstsw
xor
mov
pusha
lcall
cmp
or
push
dec
pop
rcll
inc
cmpb
dec
inc
adc
jne
pop
lcall
jp
bound
sahf
mov
mov
inc
mov
js
int
sub
adc
movsb
mov
mov
pop
adc
leave
shrl
xchg
sub
arpl
fnstcw
repz
daa
cmp
lret
test
mov
ljmp
mov
in
in
leave
shll
adc
mov
cmpsb
fists
xor
pop
imul
push
out
rclb
lahf
jg
push
lds
dec
xchg
mov
pop
in
and
lock
ret
lret
leave
lea
add
and
out
add
aad
aad
pop
out
jns
aas
movsb
aad
mov
and
jle
pusha
ss
sti
mov
pop
std
loop
inc
clc
aam
push
sub
sbb
aad
or
roll
int3
lret
pop
int3
inc
add
ljmp
or
ja
or
and
mov
sbb
xor
mov
fnsave
pop
int
jg
call
int3
dec
pop
in
jg
xorl
xchg
mov
fsts
xor
aaa
add
add
repnz
shrb
xchg
mov
jns
gs
jbe
or
ret
inc
arpl
adc
repz
mov
push
jnp
rol
xor
push
sarw
insl
sbb
lcall
aaa
jbe
pop
in
cmp
sti
imul
shrb
push
mov
in
pop
call
add
dec
fxch
dec
dec
hlt
test
js
pop
jg
stos
shl
and
or
mov
inc
pushf
shl
orb
imul
xor
push
rcl
leave
adc
test
scas
imul
decl
and
mov
test
jmp
xchg
mov
mov
adc
shrl
leave
loope
add
add
int
xor
pop
push
xor
lods
adc
dec
push
sub
add
loop
and
loope
repz
adc
aas
divl
pop
inc
mov
xor
push
xor
dec
xor
aam
aaa
cmc
mov
mov
xlat
adc
or
mov
rclb
mov
out
pusha
imul
xchg
in
jae
push
stc
fldcw
jle
movsl
mov
ljmp
jbe
jbe
aaa
movsl
lret
mov
add
sbb
cld
and
xchg
jbe
xchg
mov
iret
sub
test
cmp
std
cmp
and
jns
fmuls
orb
pop
adc
push
fcoml
enter
sbb
dec
mov
lods
rcll
out
popf
sub
mov
jmp
jecxz
cmp
sub
loope
adc
pop
cmpsl
mov
mov
dec
mov
movsl
invd
xchg
xchg
inc
mov
stos
cld
xor
pop
mov
cmpsl
add
test
shl
cmp
std
inc
xchg
outsl
fsubr
mov
jne
inc
add
in
inc
and
das
push
fidivl
pop
xchg
and
js
dec
stc
push
sbb
mov
int
jno
and
call
adc
lods
sbb
inc
test
mov
icebp
sahf
ret
cmp
fadds
cwtl
shl
in
loopne
nop
cli
or
or
ljmp
dec
lds
insb
fcompl
orl
adc
and
xor
fcoml
dec
iret
mov
and
and
mov
xchg
xchg
mov
push
mov
pop
mov
mov
xor
rclb
mov
xor
subl
ds
add
push
addb
jbe
shll
ret
jnp
shll
test
jge
mov
mov
sar
insb
mov
cmp
push
ds
movsl
dec
or
in
mov
cmp
add
aad
jno
lea
mov
xchg
xchg
mov
or
leave
push
xchg
adc
fdivl
cs
and
jo
sub
inc
dec
dec
je
pop
xor
out
or
lock
mov
mov
xchg
adc
add
inc
lods
stc
jmp
sbb
sub
xor
mov
ja
movl
es
push
xor
add
push
ret
stos
or
lods
cmp
test
add
bound
lret
or
xor
rolb
mov
cmpsl
sbb
test
xlat
xor
or
lds
adcl
ds
jbe
test
enter
jbe
rorl
xchg
fs
mov
xor
int3
add
mov
push
rolb
daa
dec
adc
popf
decl
leave
pop
mov
sti
aam
daa
movsl
adc
loope
jnp
cmp
rcr
sub
push
fs
cld
mov
lods
push
xor
sub
cmpl
imul
push
adc
pop
int3
cmp
mov
xor
push
push
jns
cld
sub
enter
lret
and
xor
or
sar
mov
add
lock
jo
push
mov
push
push
xchg
andl
ret
dec
imul
or
jp
loop
add
jbe
test
add
add
enter
mov
cmp
xchg
adcl
sub
add
inc
test
jle
leave
adc
sbb
stos
dec
sti
movsl
lea
mov
xchg
or
popf
push
jae
dec
repnz
mov
bound
cli
or
sub
or
imul
fisttpll
mov
ds
sbb
loope
icebp
aad
or
pop
std
inc
js
loope
inc
loopne
add
loope
pop
jle
dec
xlat
repnz
or
push
xor
sub
mov
add
mov
adc
xor
xor
roll
mov
inc
push
popf
aam
je
bound
cmc
outsl
jg
fwait
pop
inc
outsl
dec
or
std
jne
les
dec
or
sub
jl
inc
mov
add
push
adc
jbe
or
jno
lds
inc
test
xor
int3
les
decb
lret
rcrb
inc
addr16
fs
xor
aam
xor
icebp
enter
sti
sbb
mov
push
enter
push
cmp
int3
push
add
dec
mov
xchg
sbb
push
arpl
push
rcrb
fsubs
hlt
test
cmc
testb
fnsave
sbb
jo
inc
lahf
pop
push
jge
in
add
pop
xor
test
mov
cltd
sub
add
cli
add
ds
fucomp
je
mov
subb
push
or
outsl
mov
aaa
sbb
cmpb
les
adc
fstpl
pushf
or
shrl
adcb
faddl
dec
or
pop
stc
cmpsb
outsl
lods
xchg
xchg
sarl
sub
mov
lahf
pop
xor
jmp
adc
mov
mov
dec
and
leave
outsl
or
fisttpl
mov
icebp
imul
mov
adc
fisttpll
ljmp
inc
sbb
add
pop
in
sbb
stos
xorb
adc
cwtl
add
pop
aad
mov
push
enter
shll
cmp
icebp
out
pop
cmp
adcl
xorb
lea
bound
fdivs
and
inc
xchg
push
sahf
add
fstpt
or
lock
mov
fwait
mov
lcall
mov
pop
xor
and
test
xor
jb
in
rorl
into
xor
repnz
loop
pop
or
scas
rol
testb
add
pop
adc
jne
dec
xchg
icebp
cli
mov
test
pusha
dec
sub
sub
lock
popf
or
mov
das
dec
pop
out
mov
sbb
ljmp
pop
xchg
out
mov
in
jp
mov
outsb
std
mov
fisttpll
lock
in
lret
pop
popa
inc
shl
daa
mov
mov
ret
fs
mov
sbbb
sbb
mov
mov
xor
repz
lret
test
test
jae
and
out
imul
sar
add
fstps
adc
cmpsb
mov
jmp
popf
or
add
cmp
xor
ret
pop
pop
sub
rclb
faddp
in
divl
sarb
arpl
xchg
insl
xor
ja
icebp
and
dec
xor
add
aad
mov
mov
fldpi
push
sarb
in
rcl
and
cltd
inc
lret
into
jmp
ret
jo
mov
iret
cmp
lret
mov
or
push
cmpsl
lret
jp
test
cmc
bnd
inc
and
add
cltd
jl
repnz
add
push
adc
mov
jmp
sbb
mov
xor
cli
imul
pop
and
repnz
mov
cwtl
je
pushf
nop
sub
xor
repnz
insb
aad
lret
pop
inc
add
add
and
inc
lods
outsb
xchg
lret
aaa
dec
pusha
arpl
or
jle
arpl
lds
add
fadd
out
outsb
sbb
sbb
fwait
mov
jmp
sbb
push
inc
mov
mov
mov
loope
loopne
and
or
int
fildl
pop
mov
add
add
data16
pop
fwait
aas
jmp
push
push
mov
inc
add
clc
sbb
and
test
xchg
loope
push
ret
pop
push
testl
iret
sbb
jne
or
mov
mov
leave
jle
pop
lret
lret
ljmp
jl
sub
mov
movsb
outsb
jecxz
mov
sbbl
mov
pop
push
icebp
cmp
mov
cmc
aaa
push
cwtl
imul
or
test
mov
pushf
and
pusha
dec
dec
and
stc
adc
repz
xchg
adc
mov
nop
mov
add
popa
ret
mov
add
xor
cwtl
mov
loop
rolb
push
dec
fistps
or
cmc
test
cli
lahf
or
sub
push
mov
or
dec
into
cltd
jnp
fisttps
mov
cmpsl
mov
ljmp
jmp
into
dec
lods
mov
pop
dec
repz
mov
lds
cli
jg
adc
arpl
add
xchg
dec
pop
mov
mov
adcb
push
or
push
fimuls
es
stc
shll
aaa
inc
dec
in
div
jg
les
cmp
hlt
adc
nop
mov
sub
xor
and
fsubrp
pop
test
mov
movsl
add
and
mov
mov
mov
dec
repnz
pop
adc
xchg
push
aam
shl
shrl
add
in
stos
mov
flds
out
xchg
test
fcmovnb
mov
dec
add
stc
dec
ret
xchg
es
outsl
cmp
rol
outsb
out
inc
out
int
push
pop
das
push
mov
inc
xlat
scas
push
lret
jne
mov
mov
sbb
leave
leave
xchg
lcall
mov
cmp
sub
mulb
inc
fistpll
mov
imul
cmp
dec
cmpsb
jge
ret
jns
mov
jmp
jne
mov
test
pop
xlat
inc
pop
out
jae
mov
mov
lcall
xor
mov
in
adc
xchg
cmpsl
insb
add
addr16
add
lods
pop
loope
xchg
xchg
adc
jl
mov
leave
add
mov
xor
inc
fdivl
icebp
and
stos
clc
inc
and
push
inc
sbb
sahf
imul
cmc
loope
xchg
das
sbb
adc
repz
aas
bound
sbb
test
sbb
mov
lds
add
push
int
mov
and
cli
cmpsb
in
popf
into
dec
or
pop
pop
aam
sub
pop
push
mov
lods
and
push
xchg
xor
out
test
iret
in
or
jle
repz
sub
pushf
aam
cltd
mov
mov
fwait
rclb
dec
mov
out
loope
ds
test
sar
add
sbbl
imul
mov
fldl
mov
hlt
fsubrs
pushf
stc
hlt
shl
outsb
call
repz
lds
mov
cwtl
and
nop
les
fadd
cmpsl
jbe
stos
iret
pop
inc
cmp
pop
cli
add
inc
pop
push
jmp
and
aam
mov
dec
inc
shr
jnp
test
lret
sbb
jnp
mov
outsb
stc
dec
int
xor
fdivrs
pushf
and
mov
sbb
sbb
xor
cmpsl
outsb
or
aaa
mov
dec
inc
shrb
inc
pop
shrl
lds
add
shr
popf
pop
xchg
loopne
or
enter
sbb
mov
fimuls
xor
jo
mov
xchg
jmp
push
movsl
adc
in
stc
scas
adc
stos
dec
sbb
mov
xor
or
mov
subl
testl
out
es
lret
popa
cmpsl
and
sarl
push
rdmsr
add
scas
test
mov
add
sbb
shlb
pushf
add
push
inc
repz
pop
mov
test
ret
jmp
call
iret
iret
clc
in
bound
notl
std
dec
test
insb
or
loopne
in
arpl
xchg
or
add
pop
or
adc
int
in
or
mov
fstl
mov
js
pop
mov
adc
popf
push
add
rcll
repz
xchg
cmp
sbb
inc
stos
out
imul
xor
fnsave
mov
aad
jns
adc
out
leave
jg
test
adc
cltd
push
loopne
fsubrs
loopne
cmp
jae
shl
xor
or
sbb
jne
mov
mov
push
rcrl
roll
cwtl
addr16
in
or
dec
in
cmp
sbb
roll
imul
push
call
mov
aaa
push
jl
push
add
jnp
inc
sarb
xlat
leave
faddp
push
cmp
add
dec
lea
loop,pt
pop
lods
outsb
and
icebp
jae
inc
cmpsl
add
enter
testb
push
pop
ret
int3
sbb
or
test
ds
cmp
ret
push
cli
mov
in
or
inc
add
mov
inc
imul
outsb
push
jbe
shrl
add
insb
rorb
shrl
xchg
movsb
pop
nop
aaa
jle
outsb
jmp
leave
in
mov
dec
int
ljmp
and
inc
or
xor
push
cmp
push
sub
fcmovnb
mov
sbb
mov
xor
cmpsb
repnz
push
cmp
mull
jns
aam
jg
popf
pop
jl
pop
daa
dec
add
aaa
push
leave
add
cltd
jmp
fld
rorl
push
dec
scas
adc
xchg
ret
sub
adc
fmuls
fnsave
inc
add
mov
in
scas
outsb
push
sahf
mov
lret
sarl
rcll
push
cmp
popf
lods
inc
aam
pushf
or
insb
inc
sarl
xabort
test
int
jecxz
call
jbe
das
cmpl
or
xchg
push
fnstenv
sub
xchg
add
lds
ds
inc
cwtl
jp,pn
dec
das
add
jns
sub
pop
adc
inc
adc
flds
xorl
leave
std
jl
push
in
adc
out
mov
arpl
lcall
xor
pop
dec
inc
add
mov
pop
mov
xchg
imul
into
test
lock
inc
sub
loope
adc
xor
push
test
call
sarl
add
icebp
cmc
test
dec
jecxz
inc
rorb
jecxz
jbe
fidivrs
jnp
jmp
ror
fdivrs
in
or
mov
inc
ret
and
cmp
mov
xor
cmc
sbb
cmp
jbe
mov
sbb
push
xor
and
and
js
jno
test
fistl
roll
outsl
stc
in
sbb
xor
cmpsb
out
shl
pushl
mov
stos
lcall
inc
jecxz
pop
push
and
lock
aas
ret
cmp
aad
insl
jae
mov
dec
stos
pusha
mov
ja
stos
loope
pop
enter
enter
out
push
movsl
rorb
jp
icebp
shlb
and
jo
repz
push
adc
lret
es
or
dec
or
loopne
or
jo
or
push
dec
fstps
insb
cmp
adc
andb
jmp
jg
stos
clc
enter
aas
xchg
xchg
repz
jge
cmpsb
mov
jle
add
and
xor
mov
sarb
and
lahf
jne
in
sarb
cli
fadd
and
test
push
and
jns
into
add
pushf
mov
mov
fldt
ljmp
jle
add
push
or
jo
ret
lret
pop
jns
mov
test
sbb
fnsave
dec
cmc
ltr
out
lret
jge
xchg
dec
jae
dec
dec
shlb
into
in
cs
mov
out
adc
mov
pop
inc
sbb
jb
icebp
xor
test
or
dec
lcall
in
shrl
bound
imul
xchg
xchg
add
push
inc
dec
adc
jmp
dec
or
hlt
xchg
jl
dec
sub
inc
sti
incl
fs
fcom
sub
imul
add
and
jb
sub
add
imul
test
dec
std
add
pop
aas
xor
add
imul
adc
fldenv
iret
mov
mov
push
pop
enter
lret
ret
pop
pop
dec
js
test
mov
push
cmp
insl
movsb
pop
adc
stc
xor
sarb
in
or
lds
mul
int3
test
xchg
enter
dec
call
mov
fistpl
xor
mov
lock
inc
inc
test
pushf
shll
mov
aam
lods
out
push
adc
cmp
cmpsb
or
outsl
cmc
mov
add
jle
inc
fld
test
aad
mov
inc
pop
test
in
pop
push
add
xlat
adc
cmp
mov
xor
jnp
jae
jp
xor
inc
sbb
jl
jmp
inc
ret
mov
dec
leave
mov
enter
xorb
enter
ljmp
pushf
lods
xlat
shl
lret
xor
jl
fsubrs
mov
cmp
mov
cmpsl
out
mov
cmc
mov
out
push
inc
orb
mov
jnp
mov
xchg
repnz
inc
pushf
lods
jmp
es
roll
adc
aas
pop
push
ret
sbb
mov
pop
flds
fs
push
aad
pop
call
push
inc
push
xchg
push
dec
movsl
add
cwtl
mov
and
dec
out
dec
add
test
and
jecxz
inc
mov
sbb
lret
cli
lahf
aas
shl
lds
ja
push
mov
dec
mov
cmpsl
adc
xchg
call
and
out
mov
mov
mov
xchg
fcomps
daa
lret
out
adc
orb
test
dec
pop
call
orl
stos
jo
fcmovnb
mov
pop
sbb
imull
push
add
or
xchg
add
pop
jmp
lret
int
test
jmp
fistl
add
ffreep
lret
sahf
out
xor
and
xor
icebp
push
push
fdivp
rcrl
pop
xchg
leave
hlt
xor
jns
or
or
cwtl
xor
lret
clc
aas
fidivl
test
outsb
xchg
sbb
xchg
mov
dec
mov
jo
sbb
mov
stos
mul
ja
cmp
leave
mov
xor
push
fs
xchg
xchg
out
lds
xlat
cmpb
mov
test
mov
push
mov
lds
sbb
aam
jecxz
dec
cli
dec
mov
dec
cmpsl
enter
inc
ret
repnz
jae
test
and
mov
popf
ret
dec
or
mov
popa
fldenv
es
xlat
pop
xchg
pop
leave
ljmp
ret
pop
lcall
fcoml
ret
xor
and
into
js
inc
mov
notl
mov
cmp
sbb
addl
cmpsb
sbb
ret
test
inc
mov
jecxz
loopne
subb
shr
fcmovne
lds
stc
fisttpll
imul
rol
stc
outsl
pop
repnz
out
inc
addr16
decl
stos
add
jnp
adc
add
fsubp
xor
jmp
sbb
pop
and
scas
adc
jp
scas
loopne
mov
mov
jo
mov
into
sbb
jge
dec
fs
lret
sarb
xor
and
sub
push
ficompl
ror
dec
fsubrs
or
ror
jns
stos
enter
add
xchg
cmp
ja
or
fstps
mov
negl
or
jmp
aas
in
aad
and
imul
dec
test
jnp
inc
mov
je
fcmovnb
mov
xchg
outsb
lret
loopne
and
mov
iret
pop
dec
and
xlat
into
ret
pop
je
hlt
lds
mov
mov
out
std
or
pop
mov
cmc
pusha
cmc
jecxz
mov
rcrb
sub
insb
inc
ret
dec
adc
mov
jmp
and
idivl
xchg
cmp
inc
iret
mov
inc
sub
add
adc
inc
jecxz
pop
popf
std
leave
popa
ss
insl
in
es
xor
or
add
jge
cmc
and
aam
stos
push
adc
cmc
mov
ljmp
ja
sbb
add
lret
pop
out
inc
lds
bound
mov
mov
dec
cmc
jnp
pop
popa
or
mov
cli
pop
xchg
jmp
jp
pushf
sub
and
mov
xor
dec
jmp
loope
mov
test
mov
dec
stc
test
subl
xor
xchg
ficoms
adc
push
int
rol
enter
xor
mov
pop
in
adc
test
pop
addr16
inc
into
ror
pop
pop
push
les
enter
jb
sub
movsb
test
or
and
add
dec
push
dec
dec
idivb
leave
add
xchg
sarl
push
inc
or
mov
iret
test
bound
mov
int
jno
rclb
ja
xchg
paddw
shll
testl
adc
lcall
rcrl
mov
ret
cmc
mov
std
mov
mov
clc
popa
push
jae
leave
fstps
test
pop
cmp
leave
mov
cmp
fisubrl
in
dec
dec
aad
jl
cmc
cmpsb
xor
xor
mov
imul
movsl
lea
iret
dec
std
dec
add
aaa
pop
test
jp
inc
push
cs
push
into
push
rcl
dec
and
mov
pop
jle
push
jmp
dec
push
jns,pn
cmpl
push
aad
mov
sub
shll
mov
orl
fnsave
lret
shl
fldt
lret
sbb
jae
paddsb
test
xchg
out
push
test
ja
xchg
fsqrt
add
stos
inc
leave
aaa
hlt
mov
xchg
aas
frstor
repnz
je
and
sub
inc
dec
sub
ret
fmuls
call
mov
mov
or
cmp
xchg
xchg
jne
inc
lods
nop
xchg
fidivrl
sub
and
insb
rorb
popf
and
push
shld
add
out
mov
push
insl
fistps
hlt
daa
scas
xchg
lods
insb
push
jl
mov
sub
dec
popf
andb
out
fiaddl
jo
xor
sbb
push
push
rcll
out
icebp
nop
pop
test
ret
push
mov
leave
clc
pop
dec
repz
leave
shlb
test
orb
aam
test
lods
mov
adc
inc
dec
or
in
cmc
call
jg
lcall
jnp
cmp
daa
mov
xor
dec
and
jne
push
loop
insl
hlt
mov
xchg
cld
mov
roll
cmp
repz
pop
icebp
test
repnz
add
mov
and
mov
in
test
lea
mov
movsb
and
jmp
pop
dec
in
je
rcr
mov
mov
mov
mov
out
or
xchg
sbb
andl
add
cmpsb
or
push
add
cmp
mov
sbb
ficoml
movsb
stc
rorb
jecxz
inc
loope
fistpll
call
sbb
or
mov
push
mov
jmp
lahf
mov
stos
out
mov
in
add
outsb
cmc
cwtl
add
mov
jmp
subl
aam
cmpsl
inc
leave
mov
insb
sbb
cmp
push
inc
jno
xchg
xchg
ret
xchg
add
in
inc
mov
cmp
mov
mov
clc
dec
lods
shlb
ss
test
int
loope
dec
xor
into
sbb
or
push
cmp
cmpsl
jle
movsl
xchg
inc
test
push
add
ret
pop
pop
lret
sub
jle
rcrl
or
push
lret
into
sub
cmp
adc
adc
xor
jmp
xor
add
test
mov
pop
fldl
push
lahf
push
add
xlat
adcb
sub
insb
mov
imul
and
sub
pop
ret
pop
flds
jmp
adcl
fstps
xor
push
adc
fcomps
ret
popa
rcrl
sub
jmp
cmp
mov
add
aaa
push
push
jecxz
sbb
dec
push
pop
dec
ret
scas
add
adc
lods
sti
jo
jo
loope
imul
xor
mov
testl
repz
xchg
xchg
addl
aam
mov
inc
sbb
push
mov
push
ret
ret
or
shlb
int
push
rcrl
mov
std
xor
enter
stc
pop
xor
mov
push
pusha
repz
cmp
inc
das
clc
or
push
xchg
mov
lret
test
sarb
aas
push
rdpmc
rol
icebp
shll
sbb
adc
fbstp
add
add
mov
jns
das
or
clc
adc
jbe
dec
int
out
fdivrs
jecxz
enter
stos
mov
iret
ret
sub
iret
sbb
or
mov
fcoml
adc
int3
ss
shll
add
sti
loop
xor
insl
into
call
iret
jb
xor
lret
shrb
repz
or
xchg
jno
or
pusha
jecxz
jno
or
inc
andl
add
aad
inc
and
lock
mov
adc
add
lods
or
cmc
fmulp
add
hlt
mov
leave
adc
insl
add
lods
out
subl
jmp
enter
mov
out
sbbl
js
sub
mov
add
xchg
aad
mov
push
les
mov
xor
jae
jnp
push
sub
ljmp
lods
add
or
test
mov
cmp
int3
cmp
cld
or
mov
sahf
insl
xor
sbb
loope
mov
sbb
movsl
mov
ret
jbe
mov
add
dec
add
jns
sti
push
jp
popa
arpl
fidivrl
lock
pop
bound
and
pop
lret
daa
div
mov
dec
jae
rcll
jbe
test
push
stc
xchg
cli
xchg
or
dec
cmp
jmp
hlt
imul
or
xor
sbb
mov
lahf
ret
cltd
movsl
pop
xchg
int3
jl
mov
lret
ror
test
aad
test
mov
leave
jb
mov
cmp
mov
or
arpl
or
leave
sar
mov
aaa
mov
jmp
fisubrs
jle
scas
push
add
sbbl
mov
stos
add
pop
pop
xchg
xor
add
cli
and
popa
cld
mov
sub
cmp
repnz
or
shrl
sub
les
mov
cmp
and
xor
aad
movsl
xor
mov
lds
rcl
mov
in
lds
add
and
mov
pop
es
lret
aad
xchg
mov
pop
ret
outsl
clc
fildll
mov
cmp
int3
jae
ret
adcl
jg
xor
insl
shl
sar
xchg
push
cs
rol
dec
xchg
add
stos
jecxz,pt
shll
rcrl
inc
xlat
lea
and
popa
or
cmc
fmul
inc
leave
or
xor
jbe
sub
cmpsl
sub
repz
aas
dec
adc
sub
or
cltd
jle
xor
shrl
xchg
int3
pop
sub
divl
cmp
xor
inc
add
cmpsb
jecxz
xchg
add
xor
push
xor
push
adc
in
add
sti
sti
stos
out
fsubr
push
shr
outsb
test
leave
in
pop
scas
lret
popa
nop
test
bound
imul
lret
push
lahf
jmp
or
lock
leave
stos
stos
sbb
rcrl
pushl
or
ljmp
push
push
movsl
movsl
adc
pop
jns
add
push
cmp
sub
inc
icebp
mov
icebp
and
mov
rorl
ret
aad
aad
dec
adc
sbb
dec
jbe
aam
icebp
mov
js
mov
sbb
push
mov
ficoml
push
fisubs
add
jmp
outsb
dec
cmp
jb
mov
cmp
sahf
mov
aas
mov
fucom
push
and
dec
lret
mov
mov
inc
stos
push
test
cli
into
xchg
jae
es
push
adcb
adc
faddl
sub
jge
pop
mov
fnstcw
adc
rorl
aas
aad
stos
xchg
aaa
std
js
mov
test
addr16
loopne
fs
shll
sub
add
idiv
pop
mov
div
ret
leave
push
mov
or
push
lret
and
jb
push
int3
cld
lret
mov
repnz
cld
mov
into
icebp
push
popf
mov
jmp
lock
ja
sbb
dec
inc
mov
or
dec
inc
aam
out
mov
lret
data16
jne
dec
or
insl
xorb
pop
xor
int3
sub
int3
or
ja
ljmp
sub
xor
shrl
and
outsb
sbb
out
and
mov
jl
stos
gs
das
jle
repz
cs
repz
pop
push
les
ret
mov
and
into
adc
aas
mov
lock
lret
dec
cmp
pop
out
lea
dec
mov
dec
repnz
testb
dec
mov
repz
insb
mov
shl
fiadds
dec
mov
mov
mov
test
push
sbb
fs
cli
in
or
rcr
inc
pop
icebp
xor
in
xor
enter
adc
xor
aam
arpl
mov
roll
pop
jp
cmpsb
in
mov
jg
inc
inc
pop
mov
js
inc
push
mov
add
or
push
cltd
leave
ret
int
cli
shll
stc
add
and
dec
cmp
add
xorb
or
rep
enter
lret
dec
icebp
int
or
pop
stos
addr16
lods
pushf
and
mov
aam
std
fidivrs
xchg
fdiv
lret
mov
xchg
xor
into
dec
sbb
lcall
test
dec
leave
les
clc
jae
sbb
loope
push
loopne
mov
xor
push
nop
into
popf
and
stos
mov
or
lret
in
in
cwtl
or
hlt
ror
leave
negl
dec
stos
outsl
cmc
cmpsl
lds
and
shlb
shll
dec
hlt
mov
adc
or
subb
sub
adc
push
dec
int3
cltd
fadd
sub
dec
pop
sbb
bound
adc
lahf
mov
fbstp
mov
sbb
data16
icebp
lahf
lock
inc
jl
lcall
aas
sub
xor
movsl
mov
outsl
fnstcw
insl
das
insb
pop
mov
pop
test
mov
mov
test
orb
inc
mov
add
int
mov
popf
push
test
mov
bound
inc
repnz
gs
mov
lret
test
or
rol
movsl
xor
loope
mov
int
roll
stos
push
ja
frstor
xor
inc
div
into
shlb
inc
orb
dec
lret
push
adc
pop
lock
mov
cmc
or
loop
add
xchg
xor
leave
shr
enter
mov
int
jl
pop
add
enter
dec
in
or
push
add
movsb
mov
sub
xor
mov
xor
pop
sbb
stos
push
outsb
mov
xchg
popf
sar
and
flds
jae
aas
and
add
stos
cs
call
sub
fcmovb
shrl
rorl
mov
ljmp
mov
jnp
add
inc
aam
xchg
rorl
test
scas
movsb
into
cmc
jae
mov
faddp
add
jno
and
dec
into
notb
cmpsl
xor
std
out
push
mov
popa
addr16
loope
dec
mov
pop
mov
cmp
dec
repnz
lods
and
jmp
or
loope
inc
mov
stos
cmp
faddl
cltd
iret
cli
mov
sub
stos
mov
inc
dec
xor
mov
pop
stos
dec
inc
xor
push
incl
dec
std
jne
fdivr
test
sbb
mov
movups
rolb
mov
out
jecxz
xor
addb
inc
lcall
rcrl
lcall
loope
ror
clc
das
jo
int
aad
sbb
cld
icebp
repz
leave
sahf
stc
fistpll
sub
loop
jmp
cld
lret
in
rcr
or
cltd
push
lret
out
cmpsl
ret
mov
cmp
stos
jne
aaa
xor
stos
mov
pop
dec
sbb
or
mov
inc
jecxz
jmp
movsl
rcr
rcr
les
mov
test
in
shrl
stc
hlt
sar
out
out
notb
hlt
push
in
add
cmc
aam
outsb
mov
ret
mov
fldt
xchg
movsb
mov
iret
int3
cmp
cmp
lds
mov
pop
rcl
fcoml
stc
insb
push
push
shrb
or
nop
xchg
testl
outsl
add
add
stos
jb
xor
inc
cmp
insl
in
sbb
out
jmp
pop
fstps
out
in
mov
xchg
scas
lea
in
fsqrt
fdivrl
jp
daa
dec
jmp
mov
sti
jl
sub
je
pop
push
dec
nop
stos
nop
pop
jge
mov
sahf
icebp
ret
add
push
inc
cmp
push
imul
push
adc
mov
push
pushf
fldcw
arpl
cwtl
dec
std
jmp
or
xor
xchg
sti
mov
sbb
jp
push
test
push
loop
sbb
dec
les
cmp
in
jp
nop
insl
xchg
dec
mov
cld
push
lock
ja
mov
mov
push
sub
jb
fmulp
aam
or
add
out
movsl
loopne
jg
mov
xor
ret
repnz
cltd
jb
or
sbb
cmpsb
lds
pop
jge
test
push
dec
je
fdivr
push
mov
popa
aas
jb
xchg
into
ror
scas
push
outsl
scas
lds
jge
push
mov
daa
leave
mov
and
clc
jecxz
xorb
shl
adc
push
rcll
mov
ja
sbb
xor
xor
aas
add
lock
mov
aas
mov
dec
lock
mov
dec
sbb
scas
xchg
cmp
jle
inc
mov
mov
ret
mov
or
clc
lcall
push
out
adcb
inc
test
xchg
dec
cmc
iret
mov
subb
fwait
mov
stos
xor
leave
pop
and
lea
in
mov
push
jle
xchg
pop
pop
fisttpll
mov
push
or
dec
jp
shl
xchg
imul
jne
loope
mov
insb
dec
mov
cli
mov
sbb
ret
pop
xor
test
cwtl
paddw
mov
sahf
jp
push
xorl
sub
add
test
ret
add
fnstcw
insb
adc
jb
ja
jg
and
xor
int
aas
pop
stos
test
test
push
repz
jae
shrb
ret
std
arpl
in
mov
dec
shr
adc
jb
aam
jmp
sub
push
or
rcrl
insl
pop
mov
cmp
pop
ret
adc
aam
or
jne
test
jp
enter
jl
mov
test
or
push
add
cmpsb
lds
pop
dec
push
xchg
add
mov
cmp
lret
mov
out
in
in
mov
mov
stos
pop
cmp
or
push
repnz
dec
and
in
js
std
jle
fsubs
jecxz
or
fstpt
bound
popf
icebp
nopl
int
fildl
loop
movsl
add
popa
cmc
ljmp
or
mov
lods
sbb
jo
add
loop
stos
loop
rorl
adc
test
mov
pop
movsl
jp
xlat
sahf
fsubs
mov
inc
aaa
push
cltd
push
shll
aad
enter
dec
lret
xchg
cmpsb
lods
lods
in
ljmp
mov
jmp
into
call
mov
mov
rolb
pop
test
sar
in
cwtl
icebp
mov
int3
inc
shl
pop
adc
mov
test
lret
cmpsb
or
repnz
aad
repz
xor
mov
jl
out
and
outsb
and
cmpsb
xor
jns
and
jne
in
and
jbe
dec
sub
sarb
sub
lds
ja
lds
shrl
sahf
adc
and
xlat
ds
popa
stc
lds
cmc
or
bound
frstor
cli
int3
cmpsb
icebp
mov
fstpt
rcl
mov
mov
lods
cs
aaa
or
dec
mov
enter
push
repnz
les
or
jmp
mov
aas
sarb
clc
sbb
mov
icebp
icebp
jge
jae
cmp
aam
sti
sbbl
mov
ds
stos
mov
cmp
ret
lret
daa
iret
jle
mov
xor
sbb
das
jbe
in
stos
mov
cmp
jae
repz
and
dec
sbb
sub
lods
leave
sub
repz
push
fcomi
add
jmp
test
cli
mov
call
and
push
adc
test
xor
int3
mov
jg
rorl
mov
repz
insl
movsl
xor
mov
xchg
add
sub
sbb
faddp
inc
mov
cmpsl
mov
insb
cmp
lods
fistpl
inc
into
shlb
add
call
xchg
add
test
push
push
or
xor
pop
aas
sub
jge
cwtl
mov
add
ljmp
mov
nop
ja
push
inc
xor
daa
xchg
add
and
mov
addr16
jae
out
xor
dec
test
jo
cltd
fdivrl
fmuls
scas
ret
mov
lods
insb
xchg
dec
repnz
and
mov
aas
jno
int
iret
sub
jns
pop
push
and
stos
add
rorl
loope
pop
icebp
jmp
std
mov
and
int
jge
sti
test
loop
repz
adc
les
neg
icebp
mov
pop
mov
sub
testl
sbb
repnz
cmc
lds
sub
rorl
fs
outsl
push
mov
inc
js
jecxz
mov
adc
mov
sub
mov
rorl
add
inc
mov
push
adc
and
xlat
mov
icebp
xlat
push
and
mov
loop
js
push
enter
sbbb
popf
xchg
imul
ja
push
lods
test
subl
mov
inc
popa
sbb
inc
sub
scas
mov
ret
mov
cltd
and
mov
test
mov
xorb
lret
lret
leave
cltd
fidivrs
fadds
and
ret
mov
loop
test
push
and
sub
fidivrl
or
repnz
sbb
push
arpl
pop
sbb
add
mov
shll
inc
lret
shlb
lret
std
jecxz
std
mov
ror
out
in
jmp
and
sbb
jecxz
ret
fmul
ret
lret
fsubr
ret
loope
loopne
fcomp
ret
fadd
cld
jno
mov
out
cmc
or
jmp
mov
pop
shrl
mov
call
jge
inc
ficoms
sti
leave
out
ja
inc
cmp
ret
push
adcb
add
xchg
pop
mov
rorb
pop
sub
or
js
adc
mov
pop
icebp
dec
and
js
push
shl
imul
rcrl
fs
aad
jae
xchg
lret
ret
fldl2e
jne
jnp
xor
mov
and
push
std
dec
mov
mov
movsb
mov
inc
push
in
rcl
pop
sar
mov
jmp
aaa
shll
pop
inc
pop
lret
or
lds
les
sub
add
sahf
xchg
scas
into
fcoms
jle
ss
mov
xchg
arpl
fs
daa
jmp
mov
push
mov
cwtl
jbe
mov
fildl
add
lods
testl
and
lods
inc
pop
sbb
jecxz
push
mov
aad
mov
daa
and
jbe
test
cmp
add
in
inc
xor
mov
jno
mov
dec
add
add
push
inc
clc
fstl
or
or
call
js
loope
push
mov
sarb
xchg
or
pop
icebp
xor
push
stc
int3
push
jnp
enter
int
xchg
push
lret
cmp
cld
mov
inc
lds
inc
jmp
int
das
dec
add
jnp
jne
into
sub
cmpsl
add
jbe
and
cs
divb
lds
out
fwait
movsb
xchg
lock
mov
mov
leave
cmp
push
mov
and
add
rcr
nop
dec
sbb
dec
das
fildll
mov
dec
divb
xor
push
sbb
and
imul
inc
dec
loopne
dec
ss
adc
rorl
hlt
into
xchg
or
into
mov
add
sbb
jle
or
mov
sti
xorl
or
lcall
out
cs
inc
push
inc
repz
add
je
dec
dec
or
or
mov
add
leave
inc
mov
int
stos
fsubs
int
fnsave
mov
push
dec
xor
sahf
stos
imul
int3
lret
xor
clc
xor
in
loop
xlat
lock
and
into
add
stos
int
pusha
inc
inc
mov
or
out
repnz
jo
jb
cmc
aas
fnsave
rol
sub
dec
pop
fs
or
js
and
cmp
repz
sub
jl
mov
pop
rcrl
mov
mov
xor
cltd
dec
xor
ret
cld
int
and
inc
test
add
pop
pop
jmp
jo
ss
add
jg
mov
sbb
and
incl
dec
iret
cmp
fstpt
lods
push
hlt
lret
fsub
pop
int
loopne
pop
fcmovnu
push
sbb
divb
cltd
and
repz
dec
push
xor
add
sub
add
aam
es
out
repz
pop
lods
cmc
or
or
mov
ljmp
loope
add
inc
mov
dec
inc
lock
adc
in
add
mov
lahf
jae
into
xor
and
jmp
scas
mov
scas
sub
or
idivb
push
bswap
sub
mov
stos
pop
nop
xor
aad
in
cmpsb
push
std
lret
add
rcl
hlt
jo
jmp
cmp
push
ret
arpl
stos
pop
imul
mov
rcl
push
mov
or
test
out
add
fwait
push
out
arpl
add
imul
jnp
test
cli
pop
mov
sbb
dec
pmaxub
dec
fcoms
call
icebp
or
sarl
in
add
std
and
pop
add
mov
mov
ret
mov
and
and
daa
add
cmp
out
mov
iret
out
imul
sti
jne
ret
mov
loopne
ret
xor
adc
lock
pop
dec
xor
hlt
dec
and
add
mov
lahf
test
fldt
xchg
pusha
or
aam
push
jno
mov
sbb
aad
stos
or
pop
mov
rorl
imul
and
pop
pushf
mov
testl
add
xlat
icebp
add
mov
mov
test
mov
icebp
imul
cmpsb
fistpl
addr16
fs
cwtl
mov
fsts
dec
cli
ja
mov
leave
rorb
cli
lods
icebp
jmp
movsb
sar
fs
mov
test
and
insl
xchg
movsl
dec
push
icebp
fmull
cmc
mov
lods
mov
inc
addr16
xchg
xor
sub
dec
sbb
out
out
and
xor
mov
mov
enter
xchg
hlt
aas
iret
push
sub
dec
pop
push
push
imull
popa
xchg
cltd
arpl
mov
push
pop
shrl
mov
push
or
mov
jle
lock
dec
aad
pop
ljmp
add
jne
rcrl
fwait
test
popa
jae
shrl
fldcw
add
push
xor
pop
insb
in
xor
pushf
flds
lret
add
shll
xchg
loop
lcall
out
mov
dec
sub
aaa
push
mov
ja
cmp
ret
add
cwtl
fisttpl
or
push
clc
jle
jae
pop
lods
mov
in
jb
pushf
loope
and
push
inc
pop
mov
mov
pop
cwtl
and
cmp
xchg
aaa
test
pop
inc
mov
or
icebp
xadd
fwait
xor
nop
enter
popa
push
mov
add
inc
leave
dec
or
and
xchg
ja
dec
dec
or
cli
mov
cmp
pop
incl
xor
loope
and
pop
cli
mov
stos
sahf
sbb
mov
adc
mov
jae
cmc
imul
sub
xchg
mov
jb
loope
sbb
popf
and
pop
push
push
mov
or
push
cmc
aam
gs
mov
or
mov
nop
inc
shrl
sub
push
ss
jl
adc
xchg
dec
stc
and
mov
adc
loope
ds
mov
mov
lret
test
jo
cli
cmpl
rcl
cmpl
scas
dec
roll
xorb
dec
repz
jne
jmp
dec
mov
lods
test
adc
in
mov
cmp
stc
jp
adc
cmp
fcomi
cmpsb
ljmp
je
sub
jecxz
shll
jecxz
or
add
lcall
out
test
mov
lds
subb
pop
xchg
lahf
push
add
xchg
xor
std
orl
lret
iret
lret
mov
push
inc
or
inc
lcall
ror
inc
pushf
aaa
or
imul
shll
sbb
xor
mov
iret
sub
loopne
test
sub
cmp
push
xchg
pop
jo
icebp
sbb
xchg
lret
fwait
mov
sahf
aam
ret
push
cmp
fwait
scas
xchg
movb
daa
xor
jecxz
or
lods
fdivrs
jne
push
js
xor
jge
movd
das
arpl
add
negb
push
mov
mov
add
adc
adc
mov
rolb
iret
adc
loope
test
je
pop
jge
movsb
mov
push
push
xor
addr16
pop
cmp
cmpsl
jmp
and
jno
cmp
sbb
push
cmpsl
adc
ljmp
cmp
jmp
and
cli
lret
or
mov
or
rcl
shrl
int
mov
test
stos
enter
mov
or
movsl
int3
shlb
stos
rcll
fwait
inc
push
pushf
or
loope
test
inc
aas
mov
cltd
push
and
stos
loopne
cli
jae
dec
cmp
repz
flds
mov
cwtl
jno
cmp
test
test
or
jne
out
jge
hlt
lods
iret
in
cmpb
fmuls
leave
aad
jnp
insb
enter
test
adc
push
mov
scas
dec
jmp
jns
mov
inc
or
lds
enter
pusha
jecxz
inc
jl
hlt
shrb
or
mov
pop
dec
pop
pop
or
call
icebp
xor
add
jecxz
pop
adc
xor
ds
mov
fldpi
es
or
or
pop
mov
pusha
xor
jmp
jbe
addl
pop
sbb
sbb
cmp
daa
sbb
mov
mov
int
push
xor
cli
ja
in
repz
icebp
cs
fwait
in
mov
flds
jecxz
cmp
cwtl
dec
iret
dec
fcmovbe
stos
add
rcrb
sub
nop
adcl
sbb
adc
pop
out
lods
pop
xchg
mov
or
inc
jmp
mov
adc
aam
insb
mov
lret
arpl
aad
ja
pop
xlat
stos
loope
inc
lret
mov
in
test
stos
fnstsw
pop
xchg
dec
jp
iret
out
push
mov
cmpsl
mov
divb
jnp
int
xchg
dec
test
test
xor
mov
das
mov
xchg
icebp
cwtl
inc
aam
adc
into
in
dec
and
inc
daa
cmc
cmp
or
sti
enter
icebp
and
sbb
or
dec
shll
stos
mov
mov
jno
inc
jo
aad
dec
in
or
jmp
lods
test
pop
sbb
iret
test
xor
sti
push
inc
adc
push
and
lds
xchg
cmovne
mov
popf
mov
cmp
push
test
imulb
sub
movsl
popa
push
cli
sbb
into
into
outsb
and
push
dec
jne
cmp
imul
sbb
pop
mov
test
enter
dec
mov
add
and
rorb
sbb
mov
mov
movsl
add
shl
scas
fstl
jno
stc
into
dec
mov
inc
jmp
ja
int
and
das
mov
add
mov
in
imul
or
xor
add
cmpsb
dec
sbb
sbb
loope
xchg
daa
mov
cmc
mov
icebp
push
push
jae
push
insb
add
imul
fisttps
xchg
xor
lock
hlt
lods
inc
adc
xchg
jnp
push
fistps
or
test
cs
mov
pop
lahf
imul
jne
or
sub
mov
dec
call
cmc
sbb
lret
adc
pop
push
fwait
stc
cmpsb
loop
or
dec
iret
nop
and
mov
dec
inc
mov
test
enter
jo
sub
or
scas
cmp
int
mov
push
dec
push
cli
dec
ret
push
aaa
decl
sub
xchg
mov
lods
dec
adc
pop
lock
mov
loope
jmp
add
jne
push
sbb
pop
cmc
dec
fst
sub
sbb
adcb
fmull
incl
push
mov
mov
rorl
sub
addb
jge
mov
inc
add
xor
add
ja
in
lock
mov
add
pop
int3
test
sbb
or
in
inc
call
or
enter
ret
decb
cmp
orb
loop
and
sarl
imul
es
dec
jne
push
xchg
mov
out
aad
aaa
mov
sbb
xorl
mov
test
mov
inc
xor
rol
rcll
xchg
dec
insl
cmp
sub
inc
insl
aam
lds
stos
ljmp
jbe
shll
xchg
inc
ljmp
sub
jecxz
icebp
fmuls
sbb
loope
add
aad
mov
jnp
jecxz
dec
adc
imul
or
pop
add
iret
dec
and
mov
and
inc
test
jbe
xchg
xor
out
inc
and
mov
push
or
inc
cs
lret
stc
enter
nop
ret
movsl
shll
lds
pop
rol
inc
enter
dec
pop
or
call
in
mov
in
test
call
in
rcll
sub
repnz
xor
lods
gs
dec
jae
aad
cmp
jp
iret
cwtl
into
dec
cmp
cli
jp
lock
int3
dec
xor
fisttpll
pop
test
ret
je
aaa
sti
enter
test
jb
lds
and
insb
mov
cltd
loope
inc
mov
lret
xchg
outsb
fsubs
dec
out
mov
pusha
jmp
outsb
into
mov
dec
or
jns
or
fnsave
aas
dec
xlat
daa
adc
dec
dec
mov
sbb
stos
mov
imull
stos
shr
dec
inc
xor
mov
dec
dec
pop
wrmsr
cli
jo
lret
add
test
arpl
and
sahf
mov
es
add
push
xchg
or
jle
cmp
mov
mov
leave
arpl
cmp
sub
out
xor
jae
leave
ja
loope
inc
mov
aad
repnz
push
cmc
mov
or
repz
pop
leave
add
push
jbe
inc
mov
dec
mov
jl
push
je
and
and
test
repz
outsb
sub
push
xorb
out
push
xor
stos
fwait
mov
shll
dec
jge
mov
repz
xor
jae
test
jl
mov
sub
sbb
mov
pop
inc
and
mov
popf
leave
mov
cwtl
add
leave
xor
pmaddwd
outsb
shl
cwtl
test
sub
or
jae
div
lods
add
jns
out
push
lret
xchg
test
imul
icebp
jmp
xor
and
cld
add
call
cmp
les
das
mov
cmpsb
cltd
mov
ds
mov
cwtl
fucomp
or
fbstp
jbe
ret
mov
sub
sbb
jne
loopne
inc
sbb
dec
aas
imul
cli
add
popf
xchg
push
add
and
or
lcall
push
ljmp
xor
lret
add
shrb
rorl
and
pushfw
sub
mov
ret
popa
jecxz
add
ljmp
test
in
mov
sub
jae
xorb
int
adc
sub
sbb
mov
fdiv
fs
stos
sub
out
scas
adc
pushf
xor
popf
fsubl
and
inc
daa
jno
dec
testl
icebp
in
cmpsl
adc
lock
icebp
leave
and
or
das
ds
and
sarl
dec
xor
xor
fnstsw
sub
push
push
pop
sub
int
test
roll
sbb
outsl
in
mov
mov
mov
adc
fstps
pop
sub
std
pop
mov
add
insl
data16
xor
sbb
loopne
add
or
les
nop
cmp
in
cmp
enter
jp
lahf
jns
std
cmc
mov
notb
nop
and
int3
loope
lret
fs
repz
in
popa
fldt
mov
std
jle
pop
lods
dec
inc
xchg
rolb
rorb
sbb
sub
outsb
test
es
std
cmpsl
xor
and
lcall
int3
loop
fldenv
add
sbb
mov
xchg
or
hlt
ja
or
mov
js
pusha
leave
push
and
xchg
add
leave
test
cmpsl
add
fnstenv
sbb
fldt
mov
pop
xchg
xchg
psllw
inc
wrmsr
nop
add
popf
lock
and
inc
rcr
cmp
cmp
mov
sbb
insb
rcl
dec
xchg
cmp
cmc
adc
inc
scas
int
ss
adc
jno
push
popa
adc
movsb
pop
rcll
fbld
adc
mov
nopl
jo,pn
test
aam
loope
lds
inc
adc
mov
adc
jecxz
mov
sbb
dec
xchg
mov
lret
test
fcomps
mov
dec
aaa
mov
imull
idiv
loop
test
imul
pop
mov
pop
inc
cmp
mov
xor
ja
lret
pop
sub
cltd
jbe
mov
sub
jnp
jno
push
push
mov
add
adc
and
sub
lods
aas
in
out
dec
je
das
lret
jne
push
stos
bound
test
pop
adc
sub
xor
sub
rcl
rol
add
loop
ljmp
xlat
push
cmpl
fbld
add
stc
or
icebp
mov
sbb
movsl
rcll
sbb
and
lret
les
adc
push
cli
jb
imul
sub
mov
mov
cli
mov
xchg
repnz
or
imul
fbstp
in
popf
add
std
test
sub
loope
aam
lret
adc
pushf
and
rcl
mov
lea
cmp
cmp
lods
cmp
sub
cmp
push
stc
out
or
sarb
sub
pop
enter
or
jmp
fsubl
sub
mov
insl
dec
mov
sub
stos
push
xchg
or
fstpt
mov
scas
pop
arpl
sub
xor
popf
repnz
sub
sbb
das
ret
call
pop
outsl
mov
cmp
imul
in
push
mov
lret
or
jno
cmp
or
jg
lcall
dec
or
test
add
jne
test
popa
negl
sbb
sbb
push
xchg
xor
outsb
aad
or
jae
imul
push
ss
fbstp
outsb
dec
dec
scas
call
or
mov
cmc
adc
pop
or
ret
ljmp
jmp
mov
aad
inc
into
repz
mov
vpmaxsw
pop
cmp
or
outsb
rolb
pop
lcall
out
rcl
sub
lds
hlt
mov
fucomi
andl
aas
cmp
sbb
sub
lcall
mov
mov
in
push
into
test
in
inc
push
test
mov
test
call
sbbb
pop
push
cmc
outsb
lret
jbe
or
dec
jl
cmp
in
sub
add
int
movsl
daa
sbb
mov
fists
ljmp
jge
cmp
dec
fadds
or
in
dec
scas
jbe
xor
setns
out
dec
lahf
push
jbe
mov
inc
jmp
adc
add
clc
pop
add
xor
mov
mov
call
frstor
insl
std
inc
ds
push
add
arpl
sbb
insl
jp
push
adc
jns
ret
jnp
xchg
mov
xor
cs
orl
push
frstor
movd
inc
shrl
stc
mov
add
cmp
inc
movsl
adc
repnz
imul
jbe
sbb
push
in
xor
test
out
jo
mov
bound
int3
jmp
dec
int
lahf
inc
mov
jle
cmpsb
sahf
jns
cwtl
add
std
mov
loop
icebp
aas
fcomps
mov
dec
lds
mov
xor
mov
add
in
adc
fimuls
push
nop
sbb
mov
and
xor
ds
js
out
repz
cs
jge
add
xchg
dec
arpl
fwait
scas
loopne
imul
mov
and
or
loopne
jle
lret
push
stos
loop
fcmovnbe
test
cmpsl
sbb
aam
lods
dec
cmp
call
and
lods
inc
loope
pop
loope
or
stc
adc
je
cli
je
int
push
sub
sbbb
xor
inc
inc
ror
inc
mov
fcom
in
mov
xor
pusha
out
sbb
xchg
xor
iret
pop
cmp
insl
dec
ret
dec
pop
lods
xchg
lret
cmpsb
fwait
sahf
push
jge
xchg
mov
inc
xor
pop
enter
cltd
sbb
cmpsl
or
or
cmp
int
pop
cltd
fs
pop
std
mov
inc
push
mov
loop
les
mov
aaa
mov
adc
sahf
dec
mov
loope
xor
imul
mov
sbb
js
add
setno
and
jmp
mov
test
stos
es
js
mov
adc
cmp
leave
in
sbb
outsb
pop
es
stos
cmp
adc
mov
shrl
clc
das
lds
and
rcrl
add
jne
stc
mov
or
mov
shrl
add
mov
push
push
sub
mov
cmpsl
cmp
xchg
xor
test
xor
out
add
int
fsubs
mov
int
push
fldcw
rcrl
divb
cmp
mov
and
inc
aam
shrl
inc
pop
icebp
jl
outsb
clc
adc
outsl
mov
adc
jnp
sbb
lds
adc
and
xor
jb
and
sbb
sub
jne
mov
shlb
push
fstl
inc
js
call
out
js
ss
leave
add
mov
popf
shl
int
xor
rcr
movnti
repnz
lds
or
leave
outsl
cmp
and
int
imul
mov
and
push
push
jge
call
fimuls
int
cmp
or
lret
shrl
jl
cmpsl
test
jns
xor
pop
push
test
repnz
and
push
hlt
xlat
push
add
and
andl
test
ret
cld
mov
pop
mov
inc
xchg
mov
mov
or
mov
int
add
leave
stos
cmpsl
or
popl
in
xchg
sti
pop
fdivrs
cmp
xor
push
ja
in
test
push
sub
or
mov
lret
mov
fs
xchg
mov
sub
stc
add
imul
std
xor
push
test
movsb
insb
sub
pop
in
stc
lret
int3
push
pushf
frstpm(287
cmp
lcall
in
dec
enter
lahf
into
fwait
repz
inc
and
clc
imul
adc
cmc
mov
ja
test
ret
xchg
mov
mov
stc
fcmovnu
in
cmpl
dec
nop
call
stos
dec
push
mov
add
sub
movsl
pusha
push
sbb
add
or
lods
ret
xchg
scas
mov
fistpll
rorl
pushf
test
cltd
das
je
add
outsb
push
fcomps
out
or
jnp
add
xor
xor
pushf
jmp
xor
mov
dec
shlb
cmp
fs
hlt
scas
mov
push
and
mov
add
pop
rcrl
dec
mov
popa
dec
sub
push
and
sbb
adc
orl
andb
lret
int3
icebp
cmp
and
mov
in
enter
mov
inc
inc
and
stos
lea
jae
fsts
lock
test
mov
fidivs
adc
mov
cs
mov
mov
cmc
push
sbb
js
dec
ror
and
out
icebp
out
imul
inc
sti
lret
add
and
push
in
clc
ret
xchg
cmp
pop
jb
test
movsb
std
ret
mov
xchg
push
cmc
push
dec
mov
cmp
aaa
stos
adc
xor
xchg
aas
ret
out
sarb
sbb
js
punpckhwd
clc
pop
mov
loop
dec
rcrb
jmp
push
xchg
sbb
mov
lret
xor
mov
stos
jmp
dec
pop
and
sti
xor
mov
dec
dec
in
jb
push
rcr
and
inc
lock
leave
repz
add
inc
mov
or
push
push
mov
dec
cmpsb
jmp
sbb
jae
aam
scas
mov
sub
inc
and
jmp
sbb
sub
dec
lret
ret
push
or
cmp
push
or
push
and
cli
lret
hlt
ja
sbb
sbb
add
call
mov
out
adc
movsb
stos
jmp
int3
adc
xor
lods
das
stos
xchg
aas
fisubrs
pop
add
repz
sbb
sub
fdivrs
adc
cli
jae
mov
ljmp
daa
and
mov
add
movsb
out
sub
aas
cwtl
ret
jb
fldcw
mov
jle
imul
push
mov
push
stos
xor
shrb
cmp
xor
rolb
xor
and
leave
in
sbb
mov
cmp
push
pop
imul
das
add
and
dec
xlat
insb
mov
inc
stos
add
add
push
xchg
ss
andb
pop
sbb
jmp
sub
xor
dec
std
mov
mov
inc
jg
into
cmp
jge
insl
inc
adc
lods
push
xchg
sub
lock
movsl
lret
push
shl
mov
fistl
and
inc
sub
pop
pop
fcmovb
jg
inc
fstl
out
cmpsl
mov
outsb
lcall
jb
pop
inc
push
icebp
into
add
inc
insl
inc
jmp
and
lret
or
inc
hlt
dec
or
loop
or
cwtl
roll
es
mov
call
ds
add
sub
or
add
and
inc
fimull
cmp
pop
and
rorl
loope
mov
lret
inc
test
stc
push
imul
sub
lahf
dec
aaa
or
ret
cmpsb
jle
dec
cmp
fldt
pop
mov
cmp
scas
mov
je
into
ljmp
scas
gs
sub
add
dec
xor
pop
push
clc
gs
jp
pop
cmp
add
in
out
mov
sbb
icebp
sub
jne
inc
add
shr
fldl
mov
mov
lret
and
mov
adc
movsb
mov
cli
scas
and
pop
cmp
add
or
add
lods
sbb
mov
lds
lock
imul
adcl
das
loope
outsb
mov
call
fists
cmpsl
and
or
into
outsb
imul
mov
inc
push
cmp
jecxz
cmp
fbstp
mov
scas
outsl
fcmovne
add
dec
imull
jp
sbb
inc
outsb
add
test
ljmp
add
inc
dec
hlt
inc
rorb
pop
aas
ret
test
adcb
test
scas
sti
mov
xchg
movsb
and
adc
xor
xor
pop
shll
test
ja
repz
add
jp
or
xor
call
jns
or
pop
adc
jno
dec
out
jmp
lods
sub
xchg
lods
adc
mov
stos
mov
aam
fsubs
cmp
mov
mov
push
iret
adcb
mov
flds
pop
add
mov
sbb
add
fwait
int
pop
int
jno
xchg
dec
mov
iret
pop
lock
xchg
xchg
push
xchg
addl
xor
in
aaa
rcl
mov
test
orl
sbb
inc
xchg
jb
mov
jns
or
pop
dec
push
and
mov
push
popa
ljmp
test
cmp
je
add
loopne
xchg
in
in
repz
cli
pushf
and
inc
and
stos
ffree
cmp
cmpsb
iret
lcall
or
cmp
sbb
lods
inc
cltd
daa
ret
sbb
aam
fstpt
cmpsb
fcomps
enter
pop
adc
fimull
test
pop
sar
inc
sub
test
adc
roll
and
xlat
add
mov
mov
stos
ror
pop
jmp
push
sbb
scas
rolb
arpl
cmp
cltd
pop
sub
in
lret
jge
pop
jnp
popa
mov
adc
and
mov
add
mov
push
cltd
xchg
mov
cwtl
dec
xor
add
rcrl
xorb
and
andb
cmp
pop
lret
movsl
inc
xor
pop
mov
fldenv
dec
xor
insl
ja
or
xchg
jecxz
frstor
xor
pusha
icebp
jle
into
jno
and
sub
adc
ret
test
and
push
push
mov
cld
inc
shll
push
int3
xor
add
xchg
nop
test
lock
shlb
fsubrl
lea
es
and
pop
fmull
loope
popf
inc
add
adc
and
pop
push
mov
cmp
or
daa
push
insb
test
aam
int
add
adcl
cmp
mov
jno
push
scas
ret
test
in
fsub
add
out
out
leave
mov
and
jbe
stc
out
out
inc
xor
pop
scas
mov
fisttpll
jb
sbb
test
xorl
mov
add
mov
mov
rclb
pop
sub
dec
mov
test
and
jne
imul
jno
loope
ss
cmc
add
pop
jne
stos
cmp
fs
mov
lds
out
rcrb
and
xchg
sub
ja
dec
mov
test
shr
cli
cmpsb
call
jmp
inc
xor
jnp
mov
mov
fdivs
push
sbb
scas
and
jp
lods
dec
enter
or
jmp
add
test
in
dec
out
lds
pop
cmpsl
fmuls
in
push
cmp
sub
mov
frstor
jb
cmc
dec
inc
pop
repz
stc
mov
xchg
jno
pop
push
test
enter
xor
cmpb
mov
aas
mov
jmp
lret
jbe
loope
leave
lds
loope
dec
imul
popa
mov
jbe
push
into
and
mov
mov
ror
lret
leave
cli
dec
cmc
push
cmpps
aas
xchg
jl
adc
jae
les
push
sbb
shll
aaa
mov
sub
loope
stos
arpl
add
es
jae
cmpsb
subl
mov
jmp
mov
jl
push
les
jae
dec
dec
shl
sub
adc
ret
pop
mov
lds
dec
xor
mov
stos
int3
or
out
call
cmp
and
mov
pop
test
rorb
cli
jle
jmp
loope
and
add
iret
jge
adc
inc
add
mov
fdiv
out
inc
dec
je
leave
mov
jbe
dec
rolb
test
jae
jecxz
jmp
cmp
lock
rcrb
jne
call
or
fistps
sbb
aad
push
rcrb
aad
add
sbb
mov
and
mov
dec
je
jns
mov
and
cld
cltd
mov
pop
cmpsl
leave
fisubrs
add
mov
cwtl
xor
jle
sarl
inc
and
dec
outsb
sahf
pmullw
pop
popf
test
je
xchg
xchg
push
insl
lds
and
pop
in
mull
mov
dec
rolb
sbb
jg
mov
sahf
enter
inc
mov
ss
dec
roll
jp
sub
call
inc
cwtl
in
rcrb
stc
pop
dec
xchg
xlat
lret
shl
rolb
shll
mov
test
ja
cmp
jle
cwtl
imul
xor
cmpsb
or
mov
jae
shlb
xor
and
mov
and
rcrb
ja
mov
and
push
cmp
test
xchg
xor
test
call
popa
loop
jle
adc
ds
xchg
adc
popa
rcrl
cmp
lock
mov
aas
add
mov
xor
xor
bound
leave
fidivrl
mov
lret
jo
int
ror
sbb
aaa
mov
ljmp
stos
dec
stc
aas
push
ds
lds
mov
push
dec
or
jo
mov
testb
pop
sbb
mov
mov
enter
lock
loope
sub
sbb
push
sbb
std
test
les
dec
mov
jo
mov
cli
stc
test
inc
adc
xor
dec
mov
pop
sub
repnz
dec
or
mov
int3
push
sti
insb
clc
add
aaa
inc
xchg
jae
lret
push
in
test
lcall
cmp
test
mov
dec
cld
test
pop
stos
mov
or
dec
adc
xchg
push
inc
mov
ljmp
enter
scas
mov
or
push
inc
adc
loop
or
jp
loop
negl
pop
dec
push
stos
in
call
or
into
cwtl
mov
xor
mov
inc
outsb
enter
cmc
cmp
add
jle
gs
mov
lods
aas
lret
mov
push
cmp
divb
adc
movsb
xchg
mov
dec
dec
xor
sbb
dec
test
stos
and
inc
out
mov
shrl
ja
hlt
stc
jecxz
jg
xchg
mov
mov
add
mov
sub
or
mov
push
sahf
and
add
call
into
cmp
jno
lret
or
and
cmc
lahf
lret
icebp
cli
int
les
push
rorb
cmp
mov
jae
icebp
mov
movsb
jne
nopl
jno
inc
lds
sub
jo
fdivl
les
add
aam
mov
adc
lock
push
cmp
lds
mov
pop
dec
jae
mov
pshufw
scas
aas
call
xchg
xlat
inc
stc
sbb
stos
aas
enter
mov
in
add
or
mov
jae
add
shlb
mov
shl
je
mov
mov
mov
shlb
mov
xlat
lock
sbb
loope
stc
and
jge
call
dec
mov
mov
inc
vpunpcklbw
mov
loopne
lcall
idivb
cmc
lret
push
dec
xchg
mov
pusha
aad
repnz
jne
mov
mov
dec
jmp
stc
jle
and
push
cltd
dec
sbb
loopne
dec
dec
xor
jl
cmc
cli
dec
sbb
xor
mov
mov
pop
imul
inc
stc
nop
add
cmp
mul
xchg
fadd
gs
loopne
mov
mov
repz
lock
cmp
sub
xor
mov
jle
cmp
dec
or
adc
push
xchg
xchg
sub
inc
xchg
loopne
xchg
je
gs
in
push
push
pusha
and
jbe
addr16
xor
cwtl
pop
lret
xor
inc
adc
dec
adc
fadd
dec
pop
adc
adcb
add
mov
pop
aas
insl
jl
dec
and
add
mov
mov
je
pop
mov
aam
clc
inc
xor
rorl
pop
mov
lds
dec
mov
into
dec
test
loop
cmp
sbbw
mov
dec
loope
pop
cmpsl
and
cwtl
mov
pop
dec
stos
xlat
add
or
adc
stc
pop
divl
lods
add
andb
mov
jne
push
fidivl
ficomps
enter
loopne
ljmp
mov
mov
lock
or
frstor
mov
push
mov
pop
mov
leave
dec
xchg
xchg
jecxz
ljmp
ret
xor
dec
mov
jae
lahf
cld
roll
inc
xor
out
ret
lea
jo
pop
sub
push
xchg
ret
sub
adc
sub
cs
test
shr
ja
mov
mov
or
lret
pop
imul
cmpl
leave
insb
in
loop
in
mov
dec
inc
in
insl
xor
add
jne
mov
test
inc
movsb
inc
sbb
rorl
dec
outsl
arpl
or
out
lds
push
fistpll
icebp
jp
setp
sbb
mov
jmp
out
push
movsl
push
adc
pop
mov
mov
out
xchg
cmp
fsubrl
pop
aam
pushf
dec
loop
cmp
in
sarb
xor
ljmp
sub
push
je
fnstenv
std
pop
inc
cmp
mov
sbb
xchg
xorl
loopne
lds
pop
das
mov
push
mov
subb
ret
pusha
jecxz
sbb
cmp
mov
je
add
sub
lds
jo
dec
mov
inc
jge
mov
inc
out
mov
loope
mov
pop
lret
ljmp
cmp
and
dec
je
ljmp
fnsave
mov
xlat
fisubl
aad
imul
pop
or
imul
add
xchg
add
add
stos
bound
in
jecxz
ljmp
adc
int3
and
cltd
mov
jno
xor
js
dec
fucom
xchg
add
movsb
and
sti
jae
sbbb
testl
lods
outsl
push
pop
rol
inc
les
add
fldl
lret
sbb
pop
fmuls
pusha
xchg
in
clc
mov
xor
std
call
or
add
pushf
jle
jno
std
test
sub
mov
in
adc
gs
das
call
call
lock
mov
fldl2e
mov
mov
add
adc
or
lods
push
pop
mov
pop
inc
push
push
and
icebp
xchg
jb
leave
rcll
mov
sar
rcll
cmp
mov
sbbl
stos
out
scas
test
or
xchg
inc
sub
out
repz
jno
xor
movsl
rcll
mov
mov
xor
sti
sub
xor
xor
insb
xor
lock
mov
aam
sbb
cmpsl
add
imul
mov
pop
sbb
jmp
enter
hlt
sarl
inc
jecxz
jmp
imul
xchg
ja
inc
dec
icebp
fucomi
stos
cmp
call
xchg
sbb
or
add
and
xchg
sub
pop
outsb
int
inc
cmpb
inc
je
dec
popf
mov
shl
into
adc
rorl
mov
xchg
icebp
shrb
repz
sub
push
mov
hlt
xor
lret
xchg
fimuls
pop
xchg
jns
in
or
nop
stos
outsl
aam
stos
mov
movsb
shrb
mov
xchg
mov
je
and
fildll
inc
nop
add
stos
add
lret
mov
js
sarl
scas
mov
sbb
ret
or
rcrb
ret
test
repz
or
inc
arpl
or
cmp
push
roll
and
push
rcll
mov
hlt
mov
push
sbbb
aad
jg
ret
mov
movsb
pop
fsubs
dec
add
aad
jge
mov
dec
mov
repz
test
fwait
mov
and
stos
je
fnstsw
mov
add
cmc
sbb
popf
popf
rcrb
push
idiv
aas
ret
sbb
mov
and
imul
pop
or
jge
lods
loopne
test
adc
pop
or
sbb
das
es
jle
dec
push
or
ret
push
mov
sub
dec
jae
arpl
pop
fs
or
pop
imul
out
sbb
or
add
jb
in
call
add
scas
pop
mov
push
mov
xor
pop
enter
aaa
and
insl
lret
je
pop
fsubs
in
push
lods
inc
jnp
dec
test
jne
or
ss
cmpsl
test
or
notl
sbb
sub
mov
ja
divl
dec
in
in
ja
rorl
jno
add
sbb
fcompl
jl
scas
pop
aad
popl
lahf
push
push
imull
xor
clc
add
add
pop
pop
add
jae
xor
fists
pop
bound
in
xchg
test
mov
stos
out
pop
mov
mov
mov
testb
ror
cmp
mov
vunpcklpd
enter
popf
fimull
stos
js
sub
jns
jecxz
iret
icebp
inc
int3
push
ficoml
jle
cmp
std
dec
jmp
fisubl
mov
icebp
jne
add
mov
test
mov
rorl
adc
clc
push
test
mov
fsubr
lret
or
test
fs
enter
loope
test
addl
push
stos
xor
adc
cmp
out
daa
add
cmp
push
mov
adc
movsb
sbb
mov
pushf
notb
lods
dec
pop
inc
out
in
jbe
enter
xchg
mov
popa
push
sbb
into
sbb
mov
in
mov
or
je
cmpsb
dec
sbb
fldenv
or
enter
mov
pop
xchg
sub
insl
inc
xchg
mov
cmpsl
push
and
daa
in
xchg
int
sbb
or
aam
repnz
sub
mov
adc
scas
or
cwtl
lret
ret
in
scas
mov
inc
pop
xor
push
cli
and
enter
sbb
mov
mov
lahf
sbb
test
adc
mov
roll
and
int3
out
mov
fstpt
adc
movsb
rcr
mov
jle
loopne
outsb
loop
icebp
cli
adcl
push
les
or
in
int3
pop
mov
jbe
arpl
mov
xchg
jmp
imul
lds
repnz
xchg
fucom
je
push
jo
mov
xchg
sub
fucom
add
outsb
pop
xchg
fstps
dec
int
popf
gs
scas
in
mov
inc
mov
push
mov
imul
jnp
add
fstpl
stos
out
scas
or
fcomps
push
movswl
inc
push
mov
mov
cmp
pop
pop
xorl
hlt
rcrb
enter
test
lret
mov
fstl
adc
push
call
sbb
mov
adc
addr16
and
push
jge
push
lahf
adc
mov
fadds
arpl
je
je
xor
push
add
out
ja
or
sbb
push
je
popa
and
lds
stos
loope
cmp
fldcw
xchg
pop
loopne
cmp
shll
push
xlat
sarl
aam
fdivrs
dec
test
push
inc
stos
jmp
lret
aaa
dec
mov
enter
aad
and
rcrl
icebp
push
fcomps
jecxz
clc
out
inc
shr
xchg
std
and
mov
pushf
pop
push
ret
repnz
push
cmc
dec
das
mov
int
fisttps
mov
divl
inc
flds
xlat
pop
int
sarl
mov
fistps
ret
jne
mov
pop
dec
repz
ds
jno
ss
sbb
mov
cltd
dec
adc
xor
xor
mov
mov
aam
add
push
pop
or
movsb
rol
mov
out
pop
add
or
mov
xlat
pop
mov
dec
ljmp
ret
mov
pop
cmp
mov
cmpsb
jne
add
pop
aad
lds
int
test
roll
or
aad
fildl
xor
cli
mov
into
inc
inc
sbb
int
inc
icebp
in
ss
shl
mov
mov
repnz
in
or
loopne
push
jecxz
sbb
adc
mov
mov
fldenv
push
xor
pavgw
aas
inc
xlat
repz
cmc
icebp
imul
push
cld
leave
jle
scas
pop
dec
out
xchg
push
mov
ja
pop
fimull
in
leave
shl
pop
stc
enter
push
add
jecxz
or
xchg
inc
push
dec
pop
sbb
pop
sub
fnstsw
enter
dec
sub
out
sbb
push
add
adc
packssdw
dec
addr16
mov
or
lcall
lea
xor
cmpsb
jb
pusha
xor
sub
xor
add
xor
or
mov
pop
data16
pop
jl
mov
pop
push
js
in
push
jne
pop
repz
scas
xlat
repnz
ret
test
idiv
inc
dec
ret
inc
sarb
cmpsb
and
inc
pop
in
dec
shrb
cmp
fscale
adc
aad
sub
loope
jmp
add
mov
gs
jmp
add
sti
sub
fisttps
mov
mov
inc
dec
lods
or
mov
mov
xchg
movsl
scas
jns
push
icebp
into
pop
test
pushf
lret
lds
pop
pop
ja
pop
sub
out
jmp
xchg
je
stos
rolb
lret
aaa
rcrb
gs
pop
mov
sub
test
lret
fldl
movsb
dec
mov
sub
rol
out
inc
dec
xor
aam
and
sub
lock
jecxz
lret
repz
fldcw
sub
dec
sti
pop
or
jmp
cltd
out
jo
out
sti
mov
add
in
popa
dec
aas
incl
xchg
sub
sub
imul
xchg
inc
push
sti
js
sub
and
xchg
iret
pushf
mov
cmp
subb
dec
std
mov
mov
fnstenv
fucomp
ror
sti
push
fs
shr
imul
jmp
mov
mov
adc
jecxz
push
sub
add
jp
inc
or
xor
int
and
mov
pusha
sbb
pop
jg
ret
xchg
push
arpl
in
inc
jns
xor
add
push
cmp
and
cmp
sub
sub
mov
imul
jmp
sub
clc
incb
sbb
push
cmp
cmp
cli
jp
stc
mov
sbb
jl
loop
lret
rcl
int
scas
or
js,pt
sarl
push
out
shll
cmc
leave
int
and
mov
scas
in
jns
inc
in
aam
jg
and
incl
out
dec
cmp
adc
fnstsw
jns
mov
cmc
and
sbb
aad
sub
mov
mov
arpl
mov
jae
dec
fcompl
mov
fadds
jbe
enter
ret
add
loop
test
std
push
jmp
call
xor
andb
pusha
and
jns
jmp
sti
test
cmp
xlat
ret
and
mov
ror
or
cwtl
push
or
nop
jae
shlb
and
dec
dec
fbld
adc
mov
nop/reserved
adc
je
jg
ss
lock
mov
xchg
fldt
sti
int
stos
inc
sbb
int3
ret
add
cli
push
sahf
pushf
add
sbb
sbb
call
jnp
add
scas
arpl
jae
push
or
jmp
add
push
adc
mov
fsubrs
addr16
xor
mov
iret
popa
inc
test
fucompp
loopne
cltd
mov
push
jo
stos
jecxz
int
cwtl
or
shll
fidivrl
jle
dec
xor
push
pop
out
pop
cmp
movsl
mov
jle
outsl
movsl
add
or
and
mov
sub
lret
test
jl
icebp
xchg
emms
or
lods
or
cli
je
les
inc
sub
int
mov
xor
mov
test
and
pop
mov
adc
add
mov
imulb
mov
movsb
and
pop
shr
pop
out
ret
das
push
fists
mov
lock
sarb
leave
jno
sbb
paddd
fmull
mov
adc
ficoml
fidivs
movsl
icebp
ja
lds
pop
lock
mov
and
inc
icebp
fidivl
imul
push
xor
icebp
ja
imul
jno
loop
jge
repnz
or
sarb
jae
or
rclb
leave
orb
rolb
rorl
jae
adc
loope
test
outsl
lock
mov
jle
in
cmpsb
imul
ret
test
stos
in
rol
jbe
mov
inc
movsb
into
mov
in
insb
aam
aas
mov
roll
dec
int
xlat
test
shlb
lret
or
loope
push
test
push
or
xchg
xor
into
mov
in
jns
add
cmp
dec
lcall
xor
cltd
or
or
enter
sbb
bnd
insl
and
int
or
loope
clc
out
mov
int
inc
daa
inc
cmc
mov
in
xchg
xchg
lret
fisubl
and
cli
or
jmp
shll
dec
sahf
or
or
adc
loop
lret
cmc
stc
mov
lds
mov
rcr
daa
mov
ret
lret
insl
cld
mov
jle
mov
push
imul
mov
lahf
rcrb
and
fstl
cmp
xor
sbb
xor
push
sub
xchg
fsubl
adc
repz
sbb
fcoml
add
rol
mov
inc
idiv
mov
dec
shr
jne
jl
or
push
push
repz
mov
stos
shll
out
shl
aad
lcall
sbb
test
popf
aaa
mov
mov
into
xor
add
movsl
sti
cmp
lret
mov
lahf
stos
daa
lcall
hlt
mov
xchg
lods
imul
sub
loop
cmc
fildll
call
test
mov
leave
dec
dec
pand
or
jne
mov
nop
mov
call
xchg
lds
jne
sbb
fildl
jge
jno
dec
xor
ja
and
cmpsl
cmp
dec
or
jle
fwait
shrl
or
xchg
and
insl
dec
in
rcr
ljmp
dec
cmp
mov
ffreep
add
pop
ja
lea
flds
fldenv
into
sbb
enter
cmpsb
pop
push
popa
pop
mov
cli
lock
into
inc
push
push
mov
mov
push
movsl
mov
add
or
data16
adc
loope
jne
mov
ds
shl
inc
int
add
cmpsl
fwait
and
sub
xchg
and
scas
xor
xchg
pop
sub
fcmove
dec
cmpsb
jbe
sti
sar
je
aad
dec
cmp
in
fisubrl
cmp
cmp
xchg
dec
test
addr16
xchg
mov
jns
xor
ljmp
jecxz
xchg
mov
daa
ja
inc
mov
repz
dec
repnz
repz
insl
xor
lods
leave
add
or
pop
jb
and
mov
lock
enter
sbb
pop
rclb
clc
dec
sbb
add
mov
call
mov
push
pop
push
sub
lock
fcmovnbe
sbb
idiv
mov
dec
ret
fcmovbe
les
repz
pop
xorb
inc
shlb
dec
mov
inc
pop
mov
push
stc
mov
cltd
and
stc
fnstenv
ret
loope
and
mov
jo
movsb
adc
stos
out
cmc
adc
int
in
popf
push
or
lds
mov
and
les
jbe
sub
mov
add
loope
push
shrl
scas
xor
stos
mov
ret
std
mov
mul
push
mov
jns
nop
add
test
jns
stc
out
rcrw
icebp
inc
stos
arpl
add
in
xchg
in
mov
je
jle
mov
mov
add
clc
jmp
sbb
mov
cld
mov
stos
and
add
add
pop
inc
leave
mov
std
lahf
mov
push
xor
adc
outsl
add
jne
mov
test
stos
shl
sbb
ljmp
mov
mov
cmp
ret
popa
jmp
add
jns
sub
lcall
jl
ds
push
lcall
push
fwait
adc
dec
int3
push
test
dec
rorb
mov
loope
orl
mov
data16
outsb
add
and
jbe
mov
in
pop
push
xor
cli
mov
cmp
or
jo
out
jne
mov
ds
aas
cmp
fsts
push
mov
dec
mov
fnstsw
in
int3
fwait
call
scas
mov
mov
mov
fisttps
cs
inc
fsubrs
mov
fwait
mov
popf
shl
lds
or
test
pop
push
mov
fs
push
mov
and
movsl
mov
fnstcw
mov
or
add
and
repnz
or
sarb
mov
xchg
xor
pushf
in
and
leave
in
or
jb
sahf
aad
leave
pop
into
enter
or
rol
dec
int
fst
cmp
mov
icebp
adcl
out
int
iret
sbb
movsb
and
out
dec
jnp
fisttpl
add
hlt
or
sub
push
addl
xchg
or
addr16
inc
imul
lock
xchg
bound
movsl
jmp
cmpsb
dec
inc
xchg
mov
inc
xchg
clc
push
mov
jmp
int
jp
and
inc
insb
pop
adc
cmp
push
pop
xor
fidivl
cmp
pusha
dec
imul
orl
imul
cmp
or
adc
test
out
inc
shll
fstp
sbb
outsl
jns
adcl
roll
jo
jl
or
js
or
or
into
sahf
sub
repz
mov
push
out
jp
jmp
rorl
sahf
inc
scas
mov
mov
push
ror
loope
lods
add
xor
aaa
inc
test
push
jns
ss
cwtl
test
mov
push
jecxz
sub
enter
dec
lret
adc
int
xor
or
mov
cmc
loop
std
shl
cmp
lods
out
insl
stos
adc
test
leave
loop
or
or
pop
movsl
mov
and
mov
push
pop
add
dec
xchg
or
xchg
mov
icebp
dec
mov
int
aam
enter
mov
xor
jae
mov
dec
lock
inc
enter
dec
sbb
sub
dec
imul
loope
mov
std
mov
sbb
mov
mov
test
pop
cmpsb
jp
sbb
aad
pusha
push
xchg
and
gs
xor
push
loope
popa
and
rclb
lds
popa
sub
sbb
mov
lods
add
pop
jns
push
dec
insb
jecxz
xor
fidivl
lods
imul
and
push
into
aaa
outsl
sub
cmp
in
js
shll
sar
adc
int3
lret
into
xor
cltd
cli
sti
mov
aaa
fprem
cmp
inc
pmulhuw
insb
inc
cmp
sbb
lods
ret
dec
cwtl
icebp
repnz
shrl
cmp
shl
jbe
jp
xor
stc
cli
sarl
frstor
ret
mov
push
inc
push
sbb
and
cmp
mov
sub
in
test
out
fdivr
test
scas
mov
mov
call
xchg
fisubs
mov
pop
jb
and
jmp
ds
mov
ds
pop
dec
aaa
test
mov
or
mov
pop
aam
out
movsb
pop
ja
pop
push
ss
cmp
lcall
rcll
pop
fwait
push
es
push
testl
data16
fsts
and
shrl
jb
pop
jle
mov
inc
mov
push
jge
insl
js
dec
cmp
jge
inc
out
dec
dec
testl
mulb
jno
adc
daa
sbb
imul
test
fcmovne
notrack
or
std
ljmp
cltd
fsubrl
jo
rcll
int
movsb
fsubs
mov
stos
test
adc
inc
inc
mov
les
ds
dec
repz
icebp
pop
inc
bnd
ret
outsl
push
mov
aam
mov
dec
and
orb
fisttps
mov
add
lahf
aam
push
jae
sbb
je
dec
sbb
cmp
xlat
mov
xor
sbb
shl
pop
mov
jmp
mov
mov
or
test
mov
adcl
push
and
adc
leave
push
out
cmpsl
out
shrl
xor
add
idivl
mov
cs
mov
xor
das
mov
ss
push
sbb
ja
icebp
and
jo
xor
or
rorb
jnp
push
push
dec
jbe
sbb
xor
mov
shlb
sub
or
or
cmp
pop
punpckhwd
inc
xor
insl
arpl
xchg
sub
dec
test
cmpsl
aas
mov
dec
mov
jno
sbb
mov
repz
mov
aas
sti
test
gs
ja
ret
mov
rol
ret
xchg
dec
ret
inc
hlt
in
int
mov
sub
into
sub
lret
cli
and
cmp
xchg
pop
aad
mov
or
loop
xor
pop
fsts
out
xchg
stos
dec
push
inc
int3
rorb
cltd
std
or
xor
mov
pop
or
push
mov
mov
addr16
in
shll
push
dec
or
and
lcall
aad
into
jle
jne
cli
mov
sarb
stos
mov
xor
mov
add
push
jne
iret
or
xchg
xchg
jle
insl
jo
rcrl
or
lret
jns
mov
dec
cli
dec
cmp
roll
inc
add
in
push
xchg
add
add
jbe
test
aam
rcrl
aas
daa
jne
test
imul
xor
add
xchg
xchg
nop
imul
leave
xor
mov
aad
loop
mov
cli
negl
dec
movsb
dec
mov
nopl
mov
in
add
loope
cmp
sbb
mov
insb
mov
test
pop
mov
xor
fcmovbe
mov
cmc
push
jle
mov
jo
ds
loope
shrb
push
imul
in
jns
leave
test
jg
mov
into
dec
aaa
insl
icebp
std
test
xor
ja
xchg
sub
movsl
push
adc
inc
test
popf
add
mov
test
inc
in
adc
sbb
push
fdivr
gs
repnz
cmp
into
aam
xchg
xchg
fs
test
movsl
mov
hlt
xchg
in
pop
cmpsl
jo
or
ljmp
fst
shl
aad
xor
mov
jbe
call
arpl
mov
into
cwtl
shl
clc
xchg
lds
mov
or
pop
mov
cli
addl
rol
and
push
sbb
jno
mov
jae
mov
icebp
jae
ja
and
dec
into
inc
dec
iret
push
fwait
push
mov
frstor
add
inc
xor
out
add
int
les
add
dec
dec
imul
lods
jecxz
ljmp
dec
dec
leave
push
sbb
jmp
sbb
ret
rcll
add
gs
dec
aad
lcall
xor
cmp
insb
sbb
movsl
pmulhw
jge
mov
lds
fs
cmp
pop
imul
push
xor
jo
ror
jp
jp
data16
into
pop
lds
jmp
and
das
fcomps
jmp
movsb
sub
mov
mov
jnp
push
rorl
or
push
mov
xchg
imul
sub
mov
roll
and
and
repz
push
mov
mov
in
xor
mov
ret
insb
cltd
jae
xchg
shl
add
in
pop
sarl
fld
and
ljmp
jmp
test
inc
ror
cli
andb
in
push
add
add
test
repz
add
stos
roll
fnsave
mov
stos
add
int
loopne
loop
adc
aad
sub
xchg
aaa
dec
inc
shl
incb
and
ret
xor
add
add
xchg
ret
repnz
nop
add
sub
leave
shrl
jmp
cmp
dec
into
jmp
cli
shl
dec
jmp
mov
xor
xor
rol
xor
xchg
aad
out
mov
repnz
xor
pop
or
out
aad
jns
addl
aas
or
add
pop
add
clc
jae
or
fstps
push
fstpl
neg
sub
cli
arpl
ret
jae
jbe
mov
and
pop
jno
leave
adc
ds
mov
jnp
push
cmpsl
sub
push
push
shlb
sub
push
sub
shlb
mov
cltd
loope
jno
iret
pop
paddd
rorl
mov
jnp
popf
sbb
xor
fldl2e
sbb
stos
or
or
aad
xchg
add
je
stc
mov
fnstsw
jmp
dec
ds
int3
dec
lock
and
psubusw
dec
cmp
sbb
pop
in
fstpt
rclb
loopne
and
mov
aas
xchg
daa
addl
add
inc
cld
outsl
test
movsb
mov
cli
inc
fsubs
pop
inc
ja
cwtl
je
xor
sti
fucomip
add
loope
jge
pop
sbb
dec
xchg
lahf
stos
fisubrl
pop
adc
mov
add
and
loope
and
cli
or
lret
mov
push
aas
leave
lret
inc
jo
aad
rcrl
push
xchg
mov
adc
in
and
cmp
stos
and
lahf
popa
pop
xor
shlb
ja
iret
cmc
leave
les
test
iret
pop
xor
push
sbb
fwait
idivl
pushf
push
ds
jl
add
push
leave
rolb
jmp
add
fwait
xchg
daa
xchg
cmp
adc
cs
adc
mov
mov
push
ja
clc
mov
mov
adc
inc
out
lds
hlt
xlat
xor
mov
and
push
jmp
jb
popa
xchg
sbb
or
gs
sub
add
inc
mov
jecxz
roll
fs
fsubrl
and
cmc
ljmp
push
pop
in
cmp
shrl
push
iret
les
rorl
cmpb
xor
pushf
mov
mov
xor
out
and
dec
btcl
lods
in
inc
test
cmp
sti
cmp
das
stc
inc
mov
in
pop
pop
sbb
mov
test
or
or
jns
js
xor
adc
or
lret
loop
pusha
lcall
sbb
xchg
xor
unpckhps
fnstcw
andb
and
call
mov
pop
add
cli
fidivs
ret
add
jo
add
inc
sbb
idivb
dec
stos
push
mov
jg
enter
cmpsb
xchg
rolb
add
push
dec
xor
jbe
popa
push
flds
inc
cmp
jmp
imul
pop
mov
cmpsl
and
or
mov
rol
shll
add
mov
into
pusha
test
fcmovbe
clc
sbb
pop
pop
cmp
test
add
mov
mov
mov
dec
mov
ficomps
lret
mov
jns
cmp
outsb
fbstp
cli
sub
mov
imul
push
outsl
push
lds
dec
mov
mov
jo
mov
pushl
ret
leave
mov
cltd
xchg
out
mov
inc
or
pop
out
sbb
jmp
dec
dec
rcr
push
mov
icebp
dec
lcall
arpl
mov
popa
mov
daa
jno
divl
pop
shr
js
popa
scas
or
push
mov
ja
outsl
repz
repz
lock
cmp
adc
into
xor
imul
lds
fidivrl
cmpsb
and
cmp
nop
jecxz
jmp
int
jns
orb
and
mov
lock
leave
mov
outsb
aas
and
std
je
int
filds
xor
repz
push
enter
mov
loope
das
incl
pop
in
mov
ret
push
lret
push
or
sti
arpl
cld
hlt
dec
arpl
lret
and
ds
and
test
in
subl
test
ret
cld
push
dec
sbb
faddp
and
xor
movb
movsl
inc
mov
pop
out
ds
fmuls
fwait
dec
bswap
outsb
dec
and
outsl
movsb
mov
cmpsl
mov
ds
aad
lret
std
cmp
sub
nop
repz
sub
or
cmp
xor
lret
movsl
xor
and
mov
push
repz
pop
mov
outsl
icebp
filds
or
cmpsb
sbb
mov
inc
xor
mov
jmp
popa
jmp
aas
in
ljmp
clc
add
leave
and
push
sbb
jbe
hlt
test
add
ljmp
stc
xchg
fidivs
ja
cmc
ljmp
call
loope
and
add
sbb
xor
dec
xor
daa
in
int3
shlb
loopne
add
jae
jg
adc
dec
bnd
mov
cs
ljmp
add
dec
and
shrl
push
or
shll
jno
mov
cmp
leave
jbe
imul
jp
push
sbb
mov
sbb
mov
in
clc
inc
pop
add
repnz
je
and
stc
in
or
xor
mov
gs
jl
inc
into
lret
cmp
shrl
mov
divb
jae
arpl
cmp
insb
shl
out
pop
aam
pop
adc
in
icebp
clc
daa
mov
icebp
mov
mov
in
add
jge
ds
call
rorb
push
insl
xor
lods
adc
test
imull
cmpsl
cmp
out
and
imul
pop
cmpl
mov
rolb
iret
pop
loope
adc
sbb
and
dec
and
sbb
cmc
sub
jne
or
inc
pop
dec
aas
cmp
push
push
pop
mov
incl
mov
push
jb
pandn
fisttpl
loopne
loope
mov
scas
adc
outsb
jo
and
mov
outsl
pop
in
dec
push
inc
or
sbb
add
insb
shrb
xorl
mov
pop
int
aad
mov
inc
cld
xor
loope
in
inc
pop
loopne
test
mov
xchg
dec
dec
hlt
or
inc
xchg
icebp
jl
insb
lea
add
jp
popf
aam
ljmp
sub
fcmovnbe
xor
fcmove
test
rorb
lock
mov
push
and
data16
and
jmp
xor
and
hlt
sub
or
ja
sbb
sub
and
or
inc
add
pop
mov
dec
mov
sub
shr
pop
out
into
xor
enter
mov
and
adc
add
std
das
and
outsl
sbb
hlt
fwait
int
mov
fldl
jo
cs
insl
cwtl
outsl
lock
jnp
in
xchg
sti
and
out
lods
inc
adcl
inc
int
into
dec
mov
push
ljmp
add
fisubrl
xchg
jmp
jnp
pop
psubb
imul
test
sbb
in
dec
xor
jbe
lahf
adc
sub
hlt
sbb
jecxz
stc
popa
add
test
or
dec
clc
xlat
sar
cmc
cmpl
inc
js
movsl
out
push
out
js
lods
push
xor
cli
jo
cmpb
jg
testl
call
lmsw
cs
mov
ss
jbe
pop
push
pop
ja
lret
mov
inc
adc
out
add
xor
rorl
aas
shl
lahf
mov
push
xor
jne
xor
mov
hlt
ficoms
pop
jg
dec
cmp
or
xor
dec
cmp
ret
or
test
cmp
loopne
dec
pop
outsl
or
jge
jbe
and
sbb
sbb
adc
and
push
push
dec
das
xor
arpl
and
icebp
pop
aam
leave
sbb
mov
movsb
scas
aas
iret
data16
sub
mov
xor
ja
mov
dec
mov
nop
stos
sbb
xor
shll
xchg
movsb
ljmp
mov
adc
leave
jae
push
lock
test
mov
jge
and
arpl
mov
push
sub
outsb
adc
cmp
jle
repnz
repnz
loop
into
or
or
daa
imul
pop
cmpsl
pop
mov
cmp
inc
clc
push
fisubs
push
push
adc
jmp
fadd
arpl
push
mov
or
pop
cmp
int
add
call
add
stos
sbb
ljmp
jnp
out
test
fisubs
fstpl
stc
out
mov
cmpsl
add
cli
inc
in
inc
lock
les
mov
push
lods
leave
test
push
mov
popa
int
sbb
dec
dec
lock
mov
gs
jmp
sbb
jae
shll
push
int
ljmp
xor
jne
push
jl
push
jecxz
popl
add
cli
stos
ret
and
icebp
subl
cmp
jmp
rcrb
mov
icebp
or
enter
lds
cwtl
push
outsb
cmp
adc
fdivrl
aad
mov
movsl
dec
xor
jno
repnz
mov
and
xor
push
sti
daa
fsubr
pushf
ds
mov
xchg
insl
leave
jp
jo
sub
jl
adc
shlb
pop
gs
adcb
mov
scas
xor
fdivs
mov
and
lds
jo
test
jns
flds
inc
lds
and
and
gs
mov
dec
add
push
sub
mov
clc
inc
fs
jae
fimuls
or
nop
mov
adc
mov
loopne
aam
mov
add
mov
test
add
mov
cli
orb
js
push
or
je
mov
xchg
movsb
fninit
repnz
lret
cmp
pop
sahf
xor
cli
mov
push
int
cli
icebp
jae
pop
scas
pushf
sar
popf
add
fimull
aaa
xor
sub
mov
mov
or
addb
nop
mov
adc
jmp
and
pushf
xor
xchg
or
mov
pop
fistpl
cmc
pop
ss
shll
pop
sub
mov
and
and
mov
shlb
and
outsb
dec
sbb
es
lahf
and
in
jle
and
and
inc
push
pop
cmovae
push
pop
stc
or
adc
mov
cmc
aas
leave
mov
mov
ficoms
sbb
movsb
iret
and
mov
or
cld
xor
movsl
lret
stos
sarl
neg
aad
pop
adcl
inc
inc
sarl
aas
mov
je
add
test
sbb
mov
ljmp
leave
sbb
xor
outsb
bound
xor
inc
pop
dec
fs
leave
cmp
js
cs
xor
stc
push
mov
leave
fnstsw
repnz
dec
or
xchg
sbb
cld
push
cmc
in
cli
mov
call
adcl
sahf
inc
scas
pop
mov
jg
repnz
inc
int
xor
mov
cli
mov
dec
shlb
inc
xor
jp
aas
cmc
jl
sbb
dec
dec
mov
dec
sbb
addr16
pop
adc
rolb
and
in
mov
push
gs
cmc
and
lahf
andb
dec
movsl
inc
jae
push
mov
inc
jae
int
push
shrl
adc
xor
jb
fisubs
and
leave
icebp
lahf
inc
outsb
sub
or
fdivrs
pop
xor
lahf
lret
jo
pop
jbe
movsb
ja
add
mov
int
fdivs
imul
cmpsb
and
sub
mov
add
subl
fnstsw
inc
imul
jbe
xor
in
mov
dec
push
cmp
in
aas
cmc
ret
xor
sub
pop
cs
movsb
cmp
sbb
pop
jecxz
aaa
xor
mov
outsb
cmp
add
test
mov
add
cmp
push
or
xor
fwait
pop
pushf
xchg
pusha
fsts
mov
imul
sub
jno
xor
cmp
mov
xor
fisubl
mov
xchg
movsb
mov
jmp
icebp
push
jb
aam
sbb
gs
mov
pop
mov
push
mov
mov
jne
call
or
lret
test
out
xor
cmc
mov
aam
insb
and
pop
add
pop
cmp
test
mov
sub
testl
pop
and
gs
inc
jne
into
and
push
sbb
movsb
loop
aad
jmp
jns
daa
loopne
xor
inc
mov
roll
pusha
incb
ljmp
std
inc
add
mov
ds
loop
ljmp
ret
lock
xor
add
or
xor
jne
push
repnz
js
and
lods
das
mov
add
shr
sbb
inc
adc
add
shrb
cmp
mov
mov
pop
je
fstpt
cmpb
adc
push
dec
icebp
sbb
cmp
pop
data16
mov
push
pop
ja
adc
and
mov
stc
xchg
and
mov
daa
adc
roll
and
ja
mov
jg
shll
sbb
and
sub
add
outsl
pop
dec
cmp
push
add
clc
push
fdiv
and
xor
loop
popa
cmc
roll
pop
mov
outsb
cmpl
push
pop
and
push
add
call
daa
enter
movsl
subl
add
fs
lock
mov
mov
mov
repnz
jnp
push
adc
or
or
xor
pop
cli
ret
ror
mov
or
lock
cmpb
pop
hlt
push
cltd
xchg
add
test
dec
inc
xchg
xchg
dec
adc
pop
mov
and
inc
stos
lea
rorl
cmp
mov
test
enter
xchg
cmc
rcr
ss
test
jb
jecxz
loop
aam
mov
sar
and
aad
shlb
sbb
int
xor
pop
adc
int
dec
aad
add
mov
shrl
sbb
enter
clc
stc
pop
or
inc
cmp
xchg
jbe
sar
or
mov
jno
mov
xor
mov
jns,pt
aaa
mov
xor
mov
pop
jle
lods
mov
and
rorl
jb
std
add
or
movsb
enter
bound
js
jmp
jae
xchg
insl
rcr
call
fnstenv
push
mov
pop
jno
dec
jb
cmpsb
mov
enter
int
int
mov
test
pop
adc
popf
sbbb
ja
mov
adc
jae
aas
add
lds
adc
mov
cmp
lds
sub
and
mov
flds
lds
mov
repnz
enter
push
xor
int
out
cli
adc
lcall
cld
das
fsts
xor
ret
xor
lret
into
ss
push
test
jp
repz
jb
shrb
mov
arpl
leave
pop
shlb
stos
and
add
popa
adc
mov
xor
std
shrb
lret
nop
jmp
mov
loop
rcll
lds
inc
fisttpl
jge
mov
mov
mov
test
sbb
lahf
dec
call
mov
and
rorb
sarl
inc
or
pop
aad
data16
fsubrs
cltd
ret
mov
rorb
sbb
loop
call
icebp
lea
pop
pop
push
sbb
xchg
cwtl
test
push
and
int3
idivl
pop
repnz
and
adc
das
mov
lret
sbb
loopne
repnz
sbb
fnstenv
or
in
mov
and
in
insb
es
adc
movl
out
xchg
sub
fxch
cli
test
movb
fbld
ror
pop
lahf
jbe
jo
lret
mov
mov
push
inc
lock
int
and
aas
mov
cli
mov
cli
inc
cmp
sarl
punpckhbw
jae
movsl
mov
sarl
sarb
dec
cmpsl
mov
sub
rolb
rcll
jmp
repnz
jl
and
out
jae
mull
ljmp
and
push
xor
cld
test
xor
mov
and
sub
dec
add
out
movsl
xchg
or
ss
clc
loopne
lret
mov
jne
mov
lret
mov
mov
loopne
mov
sub
dec
dec
xlat
mov
insl
int
mov
and
cmp
xor
jp
xor
icebp
xor
adc
push
icebp
mov
inc
test
cwtl
sbb
add
idiv
ror
gs
mov
sub
cmp
fs
add
cmpl
je
dec
mov
icebp
sbb
call
add
rcrl
fldl
fistps
inc
xor
shll
inc
andl
into
dec
mov
push
mov
pop
insl
push
and
jno
dec
adc
pop
jae
sahf
and
mov
btc
adc
lahf
repz
xchg
sar
jecxz
lds
xor
shlb
pop
in
adc
shrl
jmp
repnz
or
sbb
enter
mov
fnstcw
pop
arpl
mov
clc
cltd
shll
cmp
xor
adc
mov
and
sbb
les
push
jo
sbb
int3
dec
cmp
in
jle
lahf
inc
sub
cmp
mov
cli
jl
push
ret
xchg
stos
fwait
push
fldl
ss
push
rcrb
mov
rcrb
rcr
adc
dec
test
jl
push
xor
popf
push
push
insl
push
jp
adc
popf
and
fstpt
insb
popa
xchg
xor
mov
sarl
or
inc
inc
mov
out
jmp
aas
shrl
ret
add
or
lahf
add
sbb
leave
scas
adc
xor
add
dec
test
pop
aam
andl
add
pop
rcrb
jl
adc
in
add
jae
hlt
mov
xor
pop
rcl
mov
fld
add
or
inc
sub
cmp
adc
int
rorl
fldcw
mov
mov
jmp
or
mov
adc
inc
push
stos
je
mov
cmp
jg
inc
loopne
stc
leave
test
pop
mov
mov
add
cmc
into
jecxz
or
inc
xchg
xor
mov
es
add
aam
mov
push
ret
dec
mov
out
cmp
jg
cmc
pop
cmp
xor
mov
xor
addr16
push
xchg
jmp
cmp
sub
sbb
fidivrl
cld
call
rcl
enter
cld
leave
push
mov
repz
mov
xchg
ret
adc
push
out
sub
inc
mov
xchg
fwait
push
cmp
mov
sbb
mov
inc
rcr
aas
add
sbb
stos
xor
inc
mov
rol
scas
cli
xchg
add
sub
shll
sub
mov
dec
jl
xor
jle
jg
and
fmulp
mov
xor
loopne
and
pop
das
arpl
addr16
sti
mov
roll
rol
or
add
mov
inc
lods
add
add
jae
into
test
testl
fnsave
mov
leave
dec
jg
jmp
int
add
ljmp
cmc
cmpsl
push
cltd
ja
or
cmp
fldcw
pop
cmpsb
mov
mov
cltd
dec
and
xlat
cmp
rcrl
mov
shr
ljmp
shll
sub
jle
inc
lcall
fimull
hlt
test
fidivs
movsl
push
mov
stos
mov
les
in
push
add
ja
pop
pusha
test
dec
enter
in
cwtl
jae
add
xor
jp
aam
mov
daa
leave
cli
lds
mov
cmc
fwait
ret
dec
sbb
mov
add
popa
push
mov
add
xor
or
inc
lret
mov
mov
cmp
jns
je
jmp
loope
pop
or
js
arpl
sbbl
std
inc
inc
pop
push
pusha
addl
iret
mov
inc
push
ffreep
pop
inc
push
and
push
outsl
add
divl
sbb
sbb
mov
jle
int
mov
jmp
pushf
in
test
loop
mov
cwtl
pop
xlat
add
iret
icebp
sbb
sbb
mov
jmp
ret
into
dec
and
xor
jp
outsl
xor
lods
in
call
les
mov
push
push
sbb
mov
movsb
mov
jbe
add
cmpsb
loopne
and
mov
sub
push
clc
inc
add
adc
xor
cli
sbb
sub
cmc
fsubrs
jne
sub
icebp
fldcw
dec
or
mov
test
or
xchg
jne
stc
cmp
test
xor
test
leave
ret
test
rcl
iret
leave
xchg
mov
shrl
test
mov
test
ror
out
xor
pop
ficoml
bnd
lret
loop
stc
lret
ljmp
dec
enter
punpcklwd
int3
lea
test
mov
push
xchg
mov
fcomip
cmp
lds
test
cltd
xor
mov
sub
dec
pop
and
rcrl
or
add
imul
mov
pop
push
push
xor
cld
adc
fneni(8087
loop
jnp
int
imul
mov
xor
loopne
xchg
xor
loope
jb
xor
out
test
out
test
in
test
in
test
ljmp
test
call
in
jmp
icebp
test
xlat
test
aam
xchg
cmp
xor
ror
stc
cmp
or
std
jae
push
adc
lock
test
xor
pop
in
fisubrs
fildll
fsubrl
fisubrl
fldt
lods
mov
push
int3
pop
dec
aas
adc
pop
push
xor
shlb
out
push
les
in
push
push
icebp
ret
aam
scas
pop
push
inc
fstl
aad
sarl
sub
adc
aaa
and
int
xor
adc
call
aas
les
rcl
insl
cmp
andl
rcrl
jmp
shl
sbb
jmp
shl
sbb
rorb
lds
roll
xchg
mov
mov
mov
sub
stos
mov
orb
in
stos
mov
jo
shll
push
shll
add
sarl
xor
mov
in
xor
xor
mov
les
mov
lret
repz
inc
dec
roll
or
and
pop
stos
mov
dec
xadd
cmp
inc
pop
xchg
scas
pop
pushf
inc
mov
jl
and
cmp
xlat
inc
push
xor
sub
aad
add
jns
repz
xchg
mov
cmpsb
mov
sub
xchg
add
out
cmp
shll
loope
cltd
inc
sbb
xchg
hlt
cmp
fmull
testb
mov
je
cwtl
pop
add
push
xor
mov
jns
fldl
test
mov
or
scas
add
icebp
ja
or
imul
xor
jne
pop
mov
dec
gs
cmp
repnz
test
xor
ja
inc
enter
int3
outsb
hlt
add
ror
jb
cmc
std
and
adc
mov
mov
into
xor
inc
jecxz
sub
mov
ss
jp
ja
pop
jge
xchg
icebp
gs
shrl
inc
xchg
fs
push
mov
aam
in
lock
test
sbb
cs
jle
mov
out
add
cs
inc
ret
in
add
adc
hlt
and
hlt
fnstcw
jns
subb
mov
stc
fwait
add
jno
mov
test
sbb
fnsave
mov
test
cltd
repnz
xchg
dec
lahf
mov
cwtl
aas
push
pop
jmp
jp
cmp
add
dec
pop
shl
and
cmc
sarb
adc
leave
sub
test
mov
notl
loope
mov
sar
push
add
cmpsl
in
lds
icebp
int
sbb
mov
xchg
negb
and
lahf
cmp
add
xchg
sbb
xor
rolb
fsubrs
mov
loopne
aam
push
imul
jno
or
cmp
sbb
fists
dec
sub
jg
cmp
dec
hlt
int
int
dec
lret
pop
mov
outsb
movsl
pop
pop
out
fcomi
cltd
andl
or
out
push
mov
sbb
mov
add
xor
push
outsb
mov
push
out
push
sub
xchg
pop
pusha
repz
add
mov
mov
xor
imul
aad
sti
sbb
add
pop
dec
andb
inc
sbb
rcrb
xor
movsb
lea
push
or
and
cmpsl
pop
movsb
sub
lods
in
pop
inc
add
loope
mov
adc
push
inc
mov
lret
mov
and
push
sub
mov
mov
js
mov
sti
add
sub
push
andl
sbb
fwait
inc
mov
lds
sub
ljmp
sub
cmp
mov
hlt
mov
in
and
cmpsb
fsin
xor
lret
rorl
inc
lds
push
jp
lret
mov
jo
cmc
lret
pop
mov
xor
sub
add
lods
pop
call
test
in
mov
mov
sbb
fnstenv
mov
mov
inc
mov
ret
ja
sub
mov
test
jns
cmp
stos
xchg
xor
jo
jge
jle
jmp
div
cli
imul
lds
std
hlt
sbb
loopne
xor
lock
dec
les
jge
cmp
shl
stc
test
lds
gs
shrl
loope
cmp
mov
scas
inc
iret
loopne
test
push
daa
ret
jle
and
cmc
sub
lds
or
cmp
stc
and
mov
in
mov
jp
aaa
popf
mov
aas
int3
mov
cmpb
lods
sub
add
daa
fnstcw
fidivs
mov
pushf
add
js
add
test
mov
fidivrs
xchg
filds
in
mov
or
sbb
loope
lret
out
leave
movsb
xchg
cmc
loop
or
in
xor
xor
xor
inc
mov
ljmp
mov
mov
mov
dec
icebp
pop
mov
lcall
and
stos
inc
or
aas
xorb
pop
shlb
jae
orb
push
pop
lock
test
pop
popa
or
popf
or
or
cli
cwtl
fistps
mov
shl
enter
mov
repz
stos
dec
cmc
sub
add
cmp
sub
mov
dec
int
lods
mov
pop
sub
ret
dec
cmpsb
enter
insb
pushf
dec
adc
and
stc
in
fbstp
aad
enter
icebp
jbe
inc
sbb
gs
stc
aad
leave
jle
sbb
adc
mov
in
xchg
cmp
xchg
ret
in
std
ss
jae
mov
imul
cwtl
pop
jle
ror
xchg
pop
roll
jge
popf
aas
jecxz
fstps
xor
push
in
cmpsl
icebp
xor
std
loope
das
fistpll
ret
add
sbb
xchg
mov
mov
andl
jno
cs
and
lods
dec
cmpsb
fs
sub
es
push
rcll
adc
dec
rcl
sti
and
fnsave
add
push
iret
test
lahf
jmp
int
cmpsb
test
push
rcll
outsb
mov
test
clc
test
or
cmp
hlt
push
call
lret
add
int3
add
mov
repnz
xchg
pop
ds
ss
push
popf
repz
sbbl
leave
mov
pop
push
sub
insb
or
mov
xchg
jg
add
lock
ds
jge
sub
movsb
cli
push
mov
push
inc
add
hlt
jecxz
scas
ds
leave
es
mov
mov
push
or
movaps
adcb
insb
and
jecxz
mov
in
mov
and
or
rorl
mov
cmp
mov
mov
mov
mov
je
cmp
jb
fiaddl
outsb
fwait
mov
popa
outsb
push
not
out
jl
pop
cmc
std
xor
sub
orl
stc
push
stos
jmp
or
pusha
jg
test
imul
aam
mov
fldt
pop
mov
pop
mov
push
sub
xor
mov
test
mov
push
sbb
dec
rcrl
adc
std
aam
aad
or
int
test
les
dec
loop
roll
pop
pop
jbe
negl
jecxz
dec
lock
mov
cmp
mov
mov
aaa
mov
aam
cmp
outsl
popf
pop
xchg
cmp
movsb
idiv
push
aas
lret
into
out
lds
jl
movsl
jecxz
xorb
push
push
or
roll
sub
int
shr
mov
mov
xchg
mov
pop
jg
ret
aad
or
gs
int3
test
inc
loope
and
mov
push
std
add
in
jno
xor
mov
push
xchg
adc
jbe
pushf
mov
stos
and
mov
adc
mov
inc
mov
out
idivb
shll
out
sbb
rcrl
inc
mov
sbb
mov
sub
jmp
je
ja
mov
xchg
addl
stos
dec
mov
stc
in
jmp
lock
dec
jae
stc
jb
mov
mov
test
nop
xchg
mov
cmpsl
int
stc
int
jns
and
jle
neg
jae
xchg
mov
pop
pop
hlt
aad
mov
icebp
outsb
and
xor
jne
inc
mov
jo
sarb
out
enter
push
es
sbb
cmc
sub
icebp
icebp
test
pop
inc
cltd
into
jle
lock
jb
push
out
in
lahf
insb
inc
push
xchg
pop
mov
lcall
insl
subb
xorb
pop
stc
test
cmpsb
and
scas
scas
inc
sbb
cmp
and
add
push
jecxz
out
xchg
or
rclb
js
push
push
xchg
xor
mov
fldenv
shr
pop
inc
xchg
mov
push
xor
and
cmp
push
jl
dec
decb
das
shlb
aaa
movb
jmp
mov
mov
loopne
flds
jmp
add
cwtl
xchg
mov
clc
xchg
ror
adc
cmpsl
mov
jae
in
push
test
dec
rorl
xchg
imul
fs
ret
jnp
mov
dec
or
idivb
xor
ret
into
jne
jnp
xor
js,pt
dec
add
roll
push
fsub
dec
mov
jp
and
cwtl
cmpsl
test
shlb
test
sbb
jne
jle
jbe
push
push
cmc
jle
dec
dec
lret
std
jmp
push
arpl
fildl
stc
dec
or
pop
loope
add
add
jmp
test
cmp
jbe
mov
out
jmp
int
loope
mov
inc
and
shr
pop
pop
and
outsl
cmpl
out
test
rcr
xor
into
dec
add
or
adc
pop
jecxz
mov
cli
ret
cli
jl
je
movsl
mov
add
xchg
jecxz
jp
add
lds
pop
idiv
mov
and
enter
mov
divb
sbb
lret
clc
cmp
out
push
inc
inc
fsubl
xor
jno
add
repz
mov
je
xor
mov
pop
pmullw
jo
or
push
add
icebp
enter
ja
in
push
ja
call
pop
leave
xor
push
xor
leave
inc
clc
mov
mov
scas
push
out
ret
and
sbb
fwait
push
inc
and
push
inc
push
fidivrs
mov
out
mov
repz
sbb
jmp
push
xlat
loopne
sbb
shr
arpl
lret
push
shl
rolb
xor
lds
lcall
dec
aas
adc
stos
push
xchg
or
gs
pop
jnp
cmp
fisubrs
and
movsb
ds
cltd
aas
or
jg
sbb
aas
fidivrl
daa
ljmp
mov
add
cli
xor
adc
daa
rolb
add
cmp
cmp
xchg
and
sar
jo
sbb
push
ja
or
dec
imul
and
mov
ret
push
mov
inc
inc
insl
loopne
sub
lret
jb
mov
lret
out
nop
xchg
mov
and
cltd
and
push
inc
movsb
cmp
add
inc
mov
hlt
sub
dec
icebp
repnz
inc
inc
nop
cmp
jb
shl
cli
sub
pop
enter
xchg
stos
enter
push
add
int
or
adc
mov
mov
std
inc
add
fcompl
push
xchg
dec
ja
pop
push
shll
lock
add
dec
call
xchg
jmp
dec
sub
ficompl
mov
sahf
pop
nop
imul
idivb
aaa
in
leave
sub
adc
int
inc
rcrb
pop
push
lret
dec
and
shrl
xor
ret
jmp
jecxz
sub
mov
pop
sbb
mov
add
jle
jbe
pusha
enter
cmp
mov
jae
mov
aam
mov
add
pop
vcvtss2si
cmpsl
cli
scas
inc
ja
fwait
je
mov
push
dec
out
fbld
sarl
das
and
mov
test
aad
lcall
or
lds
push
push
push
pushf
xor
inc
jge
mov
sub
lahf
lcall
ret
sahf
ljmp
mov
mov
mov
pop
push
fisttpll
push
in
mov
in
imul
shlb
outsb
arpl
in
fucomp
es
cmp
pop
push
mov
clc
loop
lahf
xchg
sub
sarl
fisttpll
mov
or
dec
dec
dec
dec
test
push
or
sahf
notl
sub
adc
cmp
mov
outsb
and
mov
cmp
push
ljmp
popa
push
sbb
gs
jmp
sbb
leave
ljmp
jns
xor
lcall
dec
jle
xor
xchg
ror
xchg
adc
fistpll
dec
cmc
jmp
div
dec
fiadds
loopne
cltd
xor
cmpsl
div
mov
js
loope
jae
xorl
inc
jmp
int3
jo
notl
js,pt
bnd
popa
shlb
inc
fistpll
dec
repz
shlb
call
fdiv
data16
rcll
pop
inc
add
cwtl
in
adc
mov
xchg
hlt
out
sbb
pop
cmp
adc
add
add
xor
sbb
mov
add
xlat
inc
aad
cmc
in
icebp
jl
in
xor
lret
shr
test
lret
mov
or
or
xor
test
roll
fistpl
mov
rcll
rcr
fcmovnb
test
dec
test
xchg
add
cmpsl
xchg
inc
pop
push
loope
fldenv
mov
repz
cmp
push
pushl
inc
loope
shlb
loope
repz
ret
lds
mov
add
lock
pop
xchg
lock
loopne
loope
push
jge
out
lock
dec
jmp
mov
jo
clc
ljmp
push
push
push
and
cli
fnsave
cmpsb
arpl
cmp
mov
sub
roll
or
xor
mov
pop
sbb
xor
dec
mov
test
rcll
push
inc
pop
in
mov
push
mov
imul
lcall
js
ret
mov
sbb
je
das
in
imul
je
shll
rcrl
adc
add
or
rorl
popa
in
imul
sbb
cmpsl
jge
sahf
outsl
add
imul
mov
sbb
pop
test
popf
adc
mov
aaa
or
pop
jge
lock
or
cmp
les
lret
sbb
jbe
fdiv
aas
scas
mov
rcll
negl
add
in
leave
xchg
jae
loopne
aas
add
mov
imull
bound
repz
mov
push
xchg
loop
push
popa
test
xor
outsl
shlb
fistl
imul
cwtl
xorl
lret
cld
mov
fistpl
cmp
push
push
pop
cltd
fs
inc
psllq
insb
sar
push
scas
adc
sbb
roll
dec
shl
adc
pop
jb
inc
pop
repnz
js
aam
jne
push
inc
jp
movsl
jmp
andb
lcall
jl
popl
ja
sbb
sbb
cltd
inc
jbe
mov
mov
add
test
cmp
movsl
adc
aad
aas
pusha
fcoms
pusha
daa
daa
ljmp
push
fsts
mov
mov
mov
sbb
testb
rcll
int
arpl
shr
inc
adc
jmp
jmp
clc
aam
nop
pushf
xchg
jae
fstpt
mov
out
and
jb
pop
xchg
dec
dec
or
roll
std
rorl
mov
rcll
mov
or
out
jne
fistpll
mov
xchg
push
pusha
cs
lret
xor
lods
sub
jle
sbb
test
lock
popa
shl
add
cli
dec
insl
popa
xor
pusha
adc
andl
or
or
jecxz
pop
inc
into
or
inc
dec
clc
outsl
pusha
fldz
test
mov
jecxz
add
popf
mov
test
mov
xchg
clc
or
stc
mov
shrb
and
movsl
out
mov
mov
bound
dec
cmp
fdivrs
xor
and
or
sub
lahf
into
or
cwtl
lods
in
push
push
pop
daa
adc
xchg
sub
adc
xor
lea
jp
push
orb
into
jmp
jle
add
in
or
jmp
xlat
mov
in
stc
pop
int3
jg
pop
stos
inc
shlb
mov
sbb
ds
jle
imul
cmp
lds
test
jp,pt
idivl
push
rorb
add
jecxz
push
ret
cmp
in
add
test
inc
mov
sbb
shll
sbb
add
cmc
pop
stos
or
dec
xlat
jg
sahf
cld
add
mov
jmp
add
fnsave
insb
push
sti
push
shl
fs
outsl
jl
inc
outsb
xchg
cmp
fsubrp
lret
clc
rcrb
dec
add
mov
push
push
dec
or
jmp
jecxz
in
in
pusha
mov
addb
cmp
gs
leave
lds
loope
outsl
repz
in
or
call
inc
sbb
or
pop
fsubrp
test
les
rcll
add
cmp
cmp
xor
add
pop
adc
push
std
xor
jle
out
sub
or
jbe
out
jne
add
lahf
fldt
inc
ficomps
testl
mov
clc
ja
dec
pop
lock
pop
sub
adc
pop
vpsubusb
or
xor
test
div
sbb
invlpg
in
leave
negb
cld
adc
cltd
fisubl
and
int3
std
jns
sub
push
imul
aas
sbb
addl
les
adc
sub
test
pusha
pop
icebp
sti
jp
ss
lret
add
test
test
cli
into
inc
or
enter
hlt
cmp
mov
add
repz
bound
jo
test
xor
fidivl
test
movb
jns
mov
xor
mov
mov
je
pop
fwait
and
add
xor
dec
dec
pusha
scas
lods
sarb
iret
test
push
bound
in
repz
xor
mov
leave
call
jecxz
mov
sub
je
dec
xchg
or
inc
sub
dec
add
fdivs
pushf
es
jno
fbstp
cmp
push
in
das
xor
daa
enter
repz
adc
test
clc
push
jge
cs
inc
jno
mov
rorl
sub
loop
inc
or
shll
fst
scas
mov
push
mov
ret
xor
xchg
popf
mov
fnstcw
inc
ja
mov
mov
shl
mov
and
sub
rcr
inc
cwtl
jl
jmp
fs
mov
outsb
dec
popa
sub
jae
andl
fistl
movsl
rcll
out
dec
or
inc
cmpsb
inc
bound
out
imul
push
std
or
adc
mov
pop
and
jg
sbb
shll
call
in
add
mov
jae
mov
mov
jle
ret
xor
cmp
sbb
leave
mov
dec
cmp
cmp
adc
imulb
cli
enter
xor
shlb
jmp
cli
sub
mov
icebp
stc
ljmp
gs
test
inc
add
mov
repnz
pop
sbb
xor
add
arpl
sbb
add
imul
or
fstpl
iret
or
cmpsb
jb
and
sub
xor
nop
push
and
ja
mov
dec
dec
cmpl
mov
into
movsl
bnd
add
adc
add
or
and
sub
leave
jl
stos
pop
add
mov
sub
inc
fadd
sub
push
in
mov
inc
out
xor
fsubr
inc
das
and
and
pop
orb
outsl
je
std
enter
leave
lods
test
inc
lea
push
gs
add
aam
add
mov
lcall
dec
test
je
ret
dec
dec
cmp
inc
in
add
fld
cld
dec
les
lods
in
roll
cmc
std
add
inc
jbe
fidivrs
mov
lret
std
add
xchg
mov
add
and
aas
adcb
std
test
jl
mov
sbb
ljmp
ss
pop
call
xchg
and
pop
add
loope
mov
dec
inc
inc
in
push
ficomps
pop
jg
or
std
jo
in
push
enter
sti
stos
std
hlt
cld
hlt
int3
ret
sahf
push
xor
pop
cmp
cmc
mov
xchg
add
add
jbe
fildl
iret
roll
arpl
loope
icebp
adc
pop
xchg
div
icebp
add
lret
jmp
mov
sti
sub
pop
dec
insl
mov
jae
std
cli
xorl
stos
dec
sbb
jae
icebp
ljmp
shll
cs
outsl
ret
xchg
push
adc
lret
leave
outsl
mov
hlt
lret
jns
subl
xchg
add
dec
std
mov
ret
pop
adc
ja
je
mov
in
leave
mov
adc
insb
jmp
cmp
lea
adc
pop
jg
cs
movsb
jmp
xchg
mov
ret
pusha
dec
jmp
repz
test
bnd
ljmp
push
or
clc
imul
xchg
shl
stos
icebp
mov
test
jmp
push
icebp
pop
test
stc
dec
aam
movsl
inc
push
lock
pushf
stc
in
sub
add
sar
xor
out
dec
adc
dec
call
add
addr16
leave
xor
jne
or
and
repnz
rolb
lcall
mov
cmpsb
gs
sub
jne
inc
pop
out
sbb
repz
test
out
test
dec
dec
ret
ret
xchg
test
std
sub
jne
cmp
pmuludq
add
lahf
add
imul
repnz
nop
sbb
dec
enter
mov
jnp
pop
in
sub
ror
jmp
arpl
mov
sub
clc
adc
cmp
sbb
mov
test
xor
xchg
inc
lret
pop
lock
movb
mov
sub
add
cmp
es
jle
add
pop
shlb
sbb
jno
in
insb
dec
in
scas
les
sar
rol
sub
imul
jmp
add
pop
sbb
inc
or
aas
jno
mov
leave
in
incb
add
icebp
xor
jecxz
xchg
shrl
rcl
repz
loop
sub
pop
inc
cmpsb
imulb
hlt
xor
arpl
jl
jp
xor
daa
mov
cs
sub
adc
mov
sub
out
add
lods
xlat
adc
xchg
pop
jle
cmc
stos
mov
and
sbb
int3
cmp
jne
inc
in
stc
pop
scas
mov
repz
jb
and
in
xchg
aam
mov
mov
jo
fwait
add
stos
int
jae
jmp
stos
cmp
xchg
gs
cli
stos
fimull
dec
cmpsl
xchg
ret
jl
mov
cmp
rol
daa
add
add
pushf
leave
sbbb
add
enter
sub
movsl
aam
insb
dec
jecxz
cmp
jg
xchg
adc
nop
lcall
xor
test
cmpsl
and
notl
xor
dec
or
lock
jmp
cmpsl
xchg
adcl
scas
xchg
pop
subl
pinsrw
dec
sub
lret
lcall
or
inc
sub
out
xorl
outsl
pop
fs
ret
ljmp
ret
sub
in
icebp
fstpt
aad
cmp
add
les
jno
in
mov
leave
stos
adc
ror
out
push
pop
lock
call
cwtl
lods
mov
neg
and
sub
add
ds
call
in
in
dec
xchg
dec
jnp
ja
add
inc
xor
ds
std
xor
cmp
sti
test
mov
int
loop
mov
or
mov
jo
fidivs
mov
push
lock
pop
ret
testb
ret
add
loope
jmp
nop
push
adc
popa
dec
inc
xor
cwtl
loopne
inc
sub
adc
add
mov
aaa
filds
daa
and
xor
add
pop
jns
mov
mov
fsubr
shrb
test
sbb
and
dec
adc
push
imul
add
jmp
cmc
pop
xor
add
jecxz
adc
icebp
xchg
mov
test
adc
adc
add
sbb
repnz
loope
cmc
or
xor
xchg
pop
jl
sbb
in
xchg
orb
push
in
icebp
arpl
es
mov
jp
loopne
adc
adc
dec
push
rol
dec
mov
cmp
rcl
add
mov
mov
cli
je
jne
mov
loope
push
loopne
sbb
fs
lds
js
imul
dec
ljmp
dec
pop
push
and
aam
test
icebp
into
test
cmc
jae
js
iret
rol
xchg
inc
cmp
inc
enter
jp
mov
rol
out
and
icebp
pushf
dec
loopne
movsl
or
test
int
ss
repz
in
jb
les
and
cmp
test
repnz
lret
test
imul
fldcw
sahf
jecxz
mov
fdivs
jmp
hlt
mov
sbb
test
mov
dec
div
es
test
jae
xchg
sbb
adc
out
in
mov
cltd
jmp
pop
dec
jno
icebp
add
insl
jle
popa
orl
in
lcall
mov
test
call
movsb
jmp
mov
inc
int
test
xlat
cmc
jno
mov
jl
mov
push
mov
divl
push
add
arpl
fcoms
nop
sbb
sti
ret
inc
sub
sti
cltd
loop
xor
aas
fists
ss
sahf
sub
hlt
or
idivb
pop
xor
mov
call
fnop
stc
xchg
mov
add
pusha
dec
fstpt
adc
sbb
push
aaa
or
xor
imul
pop
xchg
or
out
das
pop
pop
inc
dec
add
mov
aas
and
scas
mov
pop
test
xchg
or
or
out
fmuls
sahf
dec
in
dec
add
xchg
add
jmp
movsb
lret
outsb
je
mov
pop
inc
das
xchg
mov
inc
pop
pop
lock
mov
loopne
sbb
jge
sbb
cmp
aad
cmpsl
xchg
cltd
sbb
inc
rcrb
add
inc
ret
test
and
shrb
aam
lods
inc
mov
add
lds
mov
das
std
and
mov
iret
or
add
sbb
lea
hlt
jno
xchg
push
jmp
filds
les
gs
adc
xchg
cmc
subb
lock
push
xorl
test
pop
xchg
pop
add
jo
xchg
push
add
xor
test
sub
adc
shll
scas
cmp
add
out
and
push
test
fisttpll
lea
sub
lret
dec
shlb
cmpsb
lcall
test
sub
clc
inc
sbb
xchg
adc
scas
mov
or
jne
ret
stc
push
add
and
dec
jb
fnstenv
add
imul
cli
jl
je
ljmp
xor
aam
in
ret
pop
mov
jo
mov
ja
or
push
sbb
cmpsb
add
ret
xor
inc
mov
lock
add
mov
jl
jp
push
in
ja
adc
jbe
or
rolb
inc
pop
aad
mov
jnp
push
test
push
add
dec
fwait
andb
add
int
inc
jne
repz
xchg
jae
lcall
lret
or
shll
out
and
jl
sbb
and
test
sbb
fstps
inc
ror
clc
fildl
pop
pop
mov
inc
loop
jge
mov
push
jp
data16
mov
and
scas
dec
xchg
call
in
inc
and
sbb
imull
jno
push
icebp
pop
fcmovb
adc
stc
mov
xor
les
mov
jb
lret
push
daa
das
stos
cmpl
or
sar
cmp
jb
add
in
cld
stos
ret
out
negb
cltd
ret
pusha
adc
fldenv
repz
push
jbe
inc
xor
dec
cmc
sbb
and
xlat
dec
ficompl
insl
push
insl
fcompl
jp
cltd
fwait
sbb
pop
adc
test
lock
scas
cmp
dec
sub
orl
add
cmc
push
inc
adc
aam
in
hlt
mov
mov
inc
icebp
pop
ds
xchg
test
test
jae
inc
fldl
movsl
adc
xlat
lcall
mov
popa
in
jne
push
xor
test
testl
scas
loop
shr
clc
sbb
test
push
btc
jnp
xor
addb
stos
push
pushf
jp
hlt
cs
mov
adc
and
fwait
outsl
jbe
iret
clc
das
add
into
xor
adc
cs
dec
pop
sbb
hlt
outsb
fildll
pop
mov
mov
fcmovnu
ret
mov
push
aam
sarl
fnsave
mov
mov
xlat
sti
mov
pop
or
pop
jp
mov
inc
lods
add
dec
lods
and
xchg
add
mov
add
push
loope
jnp
mov
jns
loope
cld
shrl
push
ret
sbb
imul
pushf
add
dec
xor
jle
inc
aad
daa
push
pusha
andb
and
fists
movsl
and
add
les
adc
push
int3
push
mov
loope
in
mov
pusha
push
mov
orb
int3
push
nop
jns
outsb
repz
popa
cmp
add
je
or
shrb
ret
xlat
adc
sbb
shll
cmc
cmc
or
in
xor
lea
push
inc
mov
push
stos
shl
mov
outsl
sub
add
lret
add
inc
push
jp
sub
arpl
mov
rorl
adc
add
inc
and
daa
aam
iret
in
fisttps
lods
fldl
xor
cmpsb
sbb
xchg
inc
mov
add
xchg
ret
lahf
lcall
sahf
push
sub
inc
shrl
inc
jo
pop
sbb
jmp
rorl
jecxz
and
mov
sbb
pop
xor
outsl
push
adc
xor
cmpsl
in
jmp
xorl
or
add
jnp
jbe
call
ret
dec
or
fldcw
inc
add
mov
test
roll
insb
call
cmp
sub
rcrb
ds
xchg
cltd
jb
adc
mov
dec
add
add
lock
mov
js
stos
lret
out
push
push
scas
sub
pop
in
inc
or
ret
or
lds
adc
call
mov
into
cmp
or
leave
and
push
mov
pushf
mov
push
cmp
sti
nop
jae
pop
inc
pop
push
adc
sub
inc
ds
test
sbb
lods
stc
call
add
test
adc
lds
ffreep
xor
rorl
lea
in
insb
add
cli
pop
icebp
in
popa
jecxz
inc
jmp
pusha
sbb
pop
outsb
aad
jle
in
int3
mov
cmp
add
jne
pop
dec
xchg
mov
rcr
pop
stos
in
psubd
rcl
push
mov
xor
push
dec
in
or
xor
leave
ror
jge
cwtl
jmp
push
mov
insl
inc
ret
and
dec
pop
mov
mov
mov
rcl
add
mov
mov
xchg
inc
into
flds
orb
sahf
add
in
lret
int3
mov
jmp
mov
test
test
xchg
xchg
push
cmp
movsb
mov
xor
inc
test
mov
inc
loope
loope
repz
fsubrl
rcll
xor
mov
test
push
das
xchg
pop
or
inc
cmpsb
or
insl
stos
int
ret
push
or
lahf
adc
ljmp
or
xor
ret
decb
xor
fst
inc
adc
mov
xor
fidivs
stc
test
je
xor
ror
jnp
push
imul
cmp
push
aad
xchg
ljmp
fucomi
jecxz
stos
inc
jmp
icebp
movsl
sub
lcall
subb
jmp
mov
pop
test
repz
adcb
and
mov
shrb
cmp
ljmp
fistpll
test
jns
mov
sti
aas
cmc
je
pop
stos
and
cmp
pushf
ljmp
pop
dec
enter
sbb
adc
jecxz
cmp
and
je
xchg
imul
sbb
cwtl
dec
lods
pop
mov
xor
pop
push
repz
stos
mov
dec
inc
or
xchg
fdivr
lds
les
inc
xor
ffreep
clc
imul
xcrypt-cbc
cmpsl
xchg
aam
cmp
fcomi
insb
adc
and
pop
std
push
repz
mov
lret
enter
test
test
xor
test
push
cli
sub
or
stos
sarl
mov
rorb
xchg
and
in
dec
stc
cmp
add
js
and
mov
cmpl
sbb
jbe
js
jbe
cmpl
stc
hlt
notl
sub
std
shrl
or
test
sbb
pop
mov
mov
mov
and
xor
or
mov
dec
stc
lock
cwtl
leave
stos
mov
icebp
lds
mov
dec
or
test
rorl
xor
pop
ds
push
mov
rcr
icebp
repz
sbb
rcr
rorb
jbe
or
mov
mov
and
dec
cmc
loope
xor
mov
ror
mov
or
scas
push
xor
mov
cmpsl
leave
jp
xchg
icebp
jge
das
pop
fcmovnb
sbb
roll
shl
pop
notl
stc
stc
and
mov
outsl
push
inc
in
push
adc
shrl
roll
shr
inc
popa
ret
mov
in
inc
xchg
jb
sub
dec
lea
leave
add
mov
shlb
pop
loope
and
push
xlat
nop
out
in
insl
push
cltd
fnstsw
or
sub
shlb
lods
pop
push
xchg
dec
test
cmp
test
cmp
or
icebp
ja
dec
jp
jnp
xor
test
inc
in
nop
into
inc
jb
jne
scas
test
pushf
dec
iret
dec
mov
fucompp
shll
push
fxch
test
fsubr
pop
cmpsl
test
xor
sbb
jle
test
add
mov
jo
mov
mov
pusha
push
lahf
push
jge
inc
mov
mull
movsl
stos
inc
push
push
lret
push
pop
or
insl
in
shr
pop
push
jne
sarl
mov
xchg
into
test
pop
sub
xor
jmp
lahf
hlt
xchg
pushf
test
push
mov
arpl
xchg
xchg
lretw
jne
push
fildll
pop
int
rol
daa
out
mov
mov
pop
dec
or
lods
jnp
jae
push
mov
xor
rol
lods
lock
sub
shr
aaa
lock
inc
ret
je
cltd
es
ret
dec
in
xor
ja
mov
in
and
outsb
jns
pushf
imul
mov
stc
shr
jo
lds
and
lods
jge
push
fadds
xlat
dec
xchg
mov
xchg
stos
xor
movsb
cmpsl
aam
mov
dec
jg
bnd
fwait
and
jbe
fs
add
lret
loop
mov
outsb
cmpsl
xchg
pop
add
inc
cld
jae
inc
xchg
mov
or
loope
or
jo
mov
mov
stc
lock
xchg
pop
add
icebp
cmp
stos
fldcw
sbb
test
adc
mov
add
stos
push
cmp
fs
mov
test
add
jmp
add
cmp
lds
jb
add
cli
adc
insl
jae
jb
fcmovne
pop
adc
jp
or
push
mov
adc
and
in
sub
mov
or
xlat
ds
or
cmove
mov
in
mov
adc
xchg
lods
lock
fisubrl
ret
push
in
add
push
mov
pusha
ficoml
lock
inc
add
jae
mov
pop
xchg
int
mov
cmpps
subl
mov
std
jg
fsin
xor
sbb
fsubs
fidivrl
cmp
mov
lret
xor
enter
mov
lock
rcrl
fcom
icebp
lds
sahf
mov
xor
mov
int3
xchg
pop
fsubrs
xor
or
mov
push
fstps
ljmp
shll
repz
lds
ja
inc
adc
xor
sub
or
mov
loope
jb
gs
movl
push
add
xchg
in
mov
inc
mov
fadds
jmp
jge
mov
test
or
inc
push
push
jg
push
test
movsl
push
stos
enter
dec
test
test
stos
jg
int
and
push
scas
xor
leave
inc
jo
repz
test
nop
cmc
pop
roll
sbb
push
in
dec
cmpl
mov
cltd
add
dec
jge
sub
shlb
add
jecxz
ret
cld
xor
and
shrb
mov
repz
in
enter
add
rcl
push
jp
mov
dec
mov
adc
cmp
int3
push
sub
cmp
cmp
sub
xchg
movsl
pop
test
adc
cld
jle
out
in
shlb
sbb
stc
ljmp
scas
xchg
sbb
inc
add
and
mov
add
push
mov
add
test
jnp
pop
int3
repz
add
bound
lret
jae
and
rorl
fisubl
sub
or
and
sbb
xorb
or
orl
mov
and
sub
outsb
int3
pop
sbb
loope
daa
jns
addr16
pushf
inc
sbb
push
data16
bound
fmuls
xor
and
pushf
jl
ret
mov
fxch
jmp
cmp
lods
cmp
movb
cltd
cwtl
push
lock
jmp
fldcw
xor
mov
movsb
aam
mov
and
pop
sub
mov
dec
dec
jp
fsts
in
out
repz
cmp
clc
inc
sbb
push
mov
add
mov
push
sti
aad
or
push
lret
nop
sbbb
in
and
cmp
ret
cwtl
enter
sub
mov
lods
adc
aas
je
aad
std
cli
jge
dec
sub
mov
test
cmc
dec
aad
outsl
xor
inc
nop
enter
shlb
js
mov
jae
sahf
ljmp
leave
leave
test
pop
adc
out
or
inc
gs
arpl
arpl
dec
lret
add
sub
aas
in
pop
cmpsl
inc
push
fcmovne
test
jecxz
test
lret
jmp
in
stos
fwait
add
mov
jae
test
pusha
xchg
gs
dec
or
andb
imul
lock
xor
lods
js
decl
lret
push
or
lahf
subb
and
int
push
cmc
xor
cmpsl
jae
xchg
ret
fisttpl
push
std
dec
inc
add
adc
mov
add
loope
lock
push
fdiv
adc
fcomps
loop
lds
cli
mov
mov
out
mov
add
adc
out
js
in
outsl
shlb
test
adc
iret
fstp
ficompl
sub
or
inc
push
mov
fdiv
mov
add
into
jbe
pop
leave
push
fst
sub
ret
xchg
leave
jmp
fistpl
jle
pop
shl
icebp
gs
mov
dec
dec
sbb
in
mov
mov
or
add
sbb
cs
mov
jbe
ds
or
fcmove
add
dec
aaa
push
int3
paddsw
aaa
xorl
aam
mov
pop
xchg
jp
push
cmpsb
or
dec
sub
add
sarl
and
outsl
lea
sbb
jno
push
cmp
fcmovbe
icebp
cwtl
add
mov
jecxz
mov
dec
fldl
es
lock
pop
push
push
adc
mov
shl
sar
cltd
mov
add
xchg
mov
imul
mov
add
adc
inc
les
sbb
ljmp
xor
push
add
insb
lcall
adc
je
out
lock
add
int
dec
push
jbe
aam
mov
cmp
jmp
out
xchg
lds
adcb
inc
push
aad
pop
inc
push
in
mov
inc
lds
inc
push
rcll
mov
ud2
jo
fnstcw
negl
pop
jo
adc
sbb
push
lds
xor
xor
inc
jmp
xlat
dec
addr16
sbb
inc
int
mov
loope
test
dec
loopne
sub
xor
jo,pt
mov
ds
or
fs
stos
aam
add
jmp
push
sub
or
jge
sub
mov
add
or
int
dec
add
aas
hlt
mov
lea
or
push
push
adc
outsl
xor
sahf
or
pop
ja
adc
psrlq
les
pop
adc
mov
imul
fwait
jmp
inc
stc
std
shrl
rcl
sub
adc
sbb
aaa
pop
mov
ljmp
xor
lea
loop
inc
sub
and
mov
icebp
mov
gs
iret
sbb
mov
int3
mov
jo
jb
mov
add
xchg
aad
icebp
imul
sbb
shrb
mov
fidivrl
bnd
stos
clc
shl
iret
xor
jbe
or
fadds
lahf
mov
jno
aad
pcmpgtb
xchg
test
jbe
jmp
push
mov
out
sbb
in
sarb
mov
or
enter
inc
cld
adcl
mov
iret
ror
sti
jb
push
jae
push
out
rcll
pop
inc
lods
jle
test
mov
cltd
pushf
push
mov
scas
inc
sarl
mov
mov
push
xchg
mov
fisttpll
jae
xor
xor
ret
arpl
sbb
inc
mov
jge
dec
mov
mov
pop
mov
push
inc
lahf
inc
mov
xchg
add
fimuls
insl
insl
mov
cmc
adcb
add
sub
in
or
ljmp
push
sti
mov
test
rolb
call
arpl
ljmp
mov
fstl
cli
andb
std
cmp
out
mov
stos
jp
push
shlb
jl
mov
js
inc
lds
mov
add
in
repnz
xlat
icebp
pop
in
hlt
std
ret
push
mov
mov
dec
sti
mov
sub
sbb
jnp
sarb
mov
incb
shrl
scas
dec
fldcw
mov
addr16
stos
xor
add
jp
sbb
pop
sti
lock
jp
and
fdivrp
sub
jbe
loop
adc
pop
cmp
adc
psrlw
push
ret
jae
sarb
ret
and
push
add
xlat
push
add
jmp
xor
ds
std
sarl
das
iret
and
mov
adc
in
lock
xor
mov
fildll
pop
inc
jl
pop
cmp
mov
or
xchg
addr16
prefetchw
mov
or
dec
dec
icebp
mov
mov
push
enter
rcl
adc
imul
test
cmp
pop
push
xor
imulb
dec
in
out
xchg
in
popa
ret
in
pop
into
popa
dec
roll
in
or
mov
fnstsw
aam
cmp
dec
shl
mov
lcall
in
test
fucomip
and
mov
inc
cltd
add
aaa
inc
sbb
and
or
rcr
test
cltd
mov
fdivs
repz
and
hlt
scas
shrb
sub
jg
xor
jmp
test
dec
gs
icebp
in
and
cmpb
mov
add
cli
sbb
stos
adc
fldenv
mov
ret
cltd
sub
sti
cltd
js
xor
mov
fcom
fcom
mov
shr
lret
adc
jnp
testb
xchg
sahf
mov
pusha
ret
xor
and
cmpsl
sub
popa
cwtl
and
inc
cmc
push
rolb
cli
or
xor
mov
mov
push
inc
jns
cli
jae
mov
inc
jge
cwtl
push
add
sub
insl
pop
rorb
jmp
inc
shlb
enter
add
mov
ret
mov
lret
leave
mov
lret
lahf
xchg
cmp
or
cltd
mov
adc
lds
std
or
inc
in
cwtl
dec
jecxz
ret
push
and
lds
or
mov
jae
repnz
mov
mov
movl
or
push
roll
dec
lret
sub
mov
pop
jle
sbb
in
xchg
mov
stos
test
cltd
sbb
xchg
outsb
mov
shlb
addr16
sbb
cmp
add
insl
ja
sub
cld
inc
insb
imul
data16
pop
mov
and
mov
jle
jne
dec
sub
iret
mov
test
pop
sbb
loop
inc
pushf
pushf
rcrb
std
push
dec
mov
ljmp
push
ret
js
subb
dec
pop
adc
roll
push
or
pop
fs
push
lds
movsl
dec
je
xchg
sbb
xor
or
pop
add
xchg
dec
add
lods
mov
jecxz
push
int
stc
int3
test
ret
inc
xor
cltd
push
xor
ja
sbb
mov
jne
pop
loopne
jno
push
sbb
inc
jmp
nop
fisttpl
push
scas
inc
dec
or
shlb
sbb
mov
or
loope
add
mov
pop
sbb
ja
push
jne
inc
es
push
mov
inc
gs
jmp
push
cmp
popf
dec
pop
or
jmp
sbb
lret
jbe
stc
cld
xchg
inc
jne
leave
mov
pop
sahf
xor
jb
dec
pop
ret
mov
sbb
shrl
cmp
jns
ljmp
sbb
or
andl
cli
ja
xor
sbb
fsts
jg
jg
cmp
push
pop
lret
dec
rcll
inc
ret
jge
dec
leave
inc
dec
push
pop
jmp
out
cli
aad
cmpsl
mov
mov
lret
jb
xchg
cld
lcall
xchg
sub
outsl
testl
pop
mov
push
dec
or
push
add
subb
adc
cmc
jge
pop
adcb
xchg
xor
sti
or
push
shl
xor
mov
xor
pusha
arpl
adc
cmp
cmp
add
aaa
lds
mov
cli
xor
test
mov
test
lods
dec
or
sub
lods
xchg
ret
jmp
shlb
loope
in
test
and
dec
les
sti
roll
push
push
add
shlb
movsb
mov
mov
imul
fwait
ret
jb
cltd
nop
sahf
and
jae
adc
push
push
stc
pop
int
xchg
cmpsl
orl
pop
jp
rorl
ss
jmp
xor
arpl
shrd
dec
push
xchg
test
mov
lahf
inc
loope
cmp
mov
cltd
rcrl
mov
pop
sub
mov
cmp
jecxz
sub
rorl
lret
or
pop
push
mov
mov
inc
mov
sub
jae
pusha
loopne
leave
je
inc
loope
sub
or
jl
and
xchg
jp
xor
rcl
inc
loope
sahf
pop
orb
scas
cmpsl
mov
cmp
xorl
cmpsb
cmp
add
je
movsl
mov
pop
pop
push
fistpl
and
pop
xorl
jne
mov
es
xchg
roll
add
pop
shr
icebp
inc
mov
and
sar
lcall
jbe
pop
iret
sub
subb
imul
mov
sbb
jmp
outsl
repnz
add
add
cli
addr16
sbb
cbtw
sbb
push
push
outsl
xor
testl
add
adc
les
push
inc
cmpsb
inc
iret
movsl
rolb
or
xchg
xchg
pop
or
push
cli
stos
mov
sub
movsl
lea
test
iret
dec
repz
jbe
rorb
jb
aas
iret
cltd
jmp
fxch
mov
and
pusha
lcall
and
xor
add
stc
xchg
jbe
ret
inc
and
mov
call
int
sbb
sar
inc
push
dec
lea
xchg
gs
cltd
repnz
or
mov
stos
or
rcll
cs
pushf
outsb
push
bound
scas
shl
fiadds
xchg
or
sbb
add
hlt
jo
pop
sub
je
add
int
insb
insl
jns
mov
dec
cmc
cmp
aad
or
adc
mov
popa
movsl
loopne
sub
ljmp
shl
in
sub
shlb
outsb
lds
mov
in
loope
jno,pt
shll
pop
xchg
fistpl
and
sub
test
test
add
insb
pop
bound
jne
shl
pusha
inc
stc
jle
or
int3
jmp
cmp
mov
sbb
scas
jecxz
lds
cmp
jns
dec
adc
and
mov
xor
aas
and
dec
icebp
and
clc
jno
cmp
sbb
dec
ljmp
xchg
insb
push
das
in
push
stos
inc
lcall
aaa
bswap
xchg
sub
dec
dec
jns
stos
sarl
mull
lods
sti
pop
inc
fists
fists
daa
movl
rcll
xor
jmp
jbe
sub
pop
dec
sbb
int
and
data16
jne
jns
pop
dec
hlt
push
sbb
dec
fs
lds
xchg
in
and
xor
jmp
not
mulb
mov
repz
mov
cmp
mov
cmp
pushf
push
addb
jge
mov
mov
inc
pop
mov
nop
and
ja
push
std
cmp
test
sub
fdivr
ret
inc
inc
or
or
mov
int3
jnp
out
or
ja
int3
stos
lret
inc
cli
scas
in
stos
pop
or
insl
xchg
jg
lahf
sbbb
xor
in
jo
and
push
loopne
icebp
jnp
repz
ss
inc
push
or
mov
mov
and
xchg
xchg
cs
scas
mov
dec
ja
push
inc
cmc
mov
ss
pop
cmpsl
outsb
rcl
mov
adc
out
sahf
jecxz
ret
xor
jmp
roll
cmp
in
adc
mov
pop
jp
ret
add
xchg
cmpsb
rclb
push
mov
or
pop
add
inc
xchg
je
jecxz
push
lds
in
loope
test
cmc
in
or
aam
in
in
add
and
mov
sub
cmp
jge
loopne
mov
mov
or
cmpsb
pushf
push
inc
popa
and
sub
ficompl
fsubrs
add
push
adc
xor
insl
gs
and
cmp
imul
pop
pusha
testb
add
and
lret
test
movsb
or
cmp
pop
mov
push
in
and
imul
inc
lcall
push
lods
sub
popf
lds
mov
xlat
sbb
repz
sub
sti
sbb
mov
add
stos
loope
and
out
gs
mov
jp
icebp
inc
dec
jo
or
mov
pop
cli
lock
and
cmp
dec
in
jb
movsl
mov
out
dec
pop
mov
shrl
rcll
sbb
mov
inc
lret
int3
push
mov
ret
and
icebp
inc
cmc
sbb
adc
stc
jp
push
mov
in
call
cwtl
sub
mov
mov
cmp
lods
sub
jnp
rorl
xchg
and
out
and
cmp
loope
add
in
add
jbe
ds
jmp
sbb
je
out
test
in
fs
pop
adc
out
arpl
adc
fmull
sahf
int3
scas
cs
inc
fbstp
test
jns
jmp
adcl
push
sar
scas
cmp
xor
ret
mov
push
or
fcomps
pop
dec
stos
push
das
loope
outsl
imul
sub
fstp
cmp
jmp
jmp
jmp
xchg
sbb
mov
mov
fdivr
add
mov
ret
push
fiadds
out
jbe
cli
mov
xor
cmp
idivb
je
jb
cmp
xor
test
sbb
dec
mov
xor
mov
mov
test
and
dec
sbb
ja
add
mov
inc
roll
and
lahf
push
jp
xor
push
les
inc
inc
pop
mov
push
sbb
imul
addr16
mov
mov
pushf
xor
sbb
xor
nop
add
stos
repz
push
sbb
mov
push
push
filds
repz
add
loop
pop
xor
xor
add
jb
and
adcl
pop
sbb
xor
repnz
cltd
ror
jmp
out
movaps
call
mov
pop
mov
imul
mov
call
xor
mov
jbe
mov
push
pop
mov
push
mov
push
or
iret
jo
rorl
stos
fidivl
or
sbb
aam
and
fld
test
repz
movsl
roll
ffree
cmc
dec
cmpsb
cmp
mov
sub
cli
cmp
in
lock
sbb
adc
pop
movsl
aaa
roll
loop
fstl
cmp
or
sbb
add
sub
scas
popaw
xchg
pop
jge
loop
mov
jl
mov
stc
aam
cmc
pusha
jl
cmpsb
sbb
xor
std
rclb
push
imul
xor
fstps
aad
cmp
fdiv
ss
mov
jnp
outsl
sub
test
lahf
push
add
cmpsl
rcrb
mov
ret
push
pop
dec
fwait
adc
std
adc
iret
pop
xchg
mov
inc
fcomp
arpl
and
enter
inc
inc
daa
or
fisttps
sbb
dec
xlat
add
sub
out
cmp
gs
popf
je
push
fldt
arpl
pop
jp
scas
roll
or
cli
mov
mov
add
fadds
pop
jg
mov
xor
test
sbb
in
inc
mov
jb
xchg
pop
adc
gs
bound
daa
inc
fistl
add
roll
iret
push
fnstcw
cltd
push
mov
inc
scas
sbb
cmc
loop
aam
mov
or
or
dec
jmp
xchg
add
fisubl
inc
jle
push
or
xor
xor
in
cltd
test
jmp
imul
push
cltd
push
jmp
cmpb
sbb
lods
aaa
xor
sub
sub
jno
call
add
dec
inc
sub
push
and
mov
inc
push
mov
loopne
shl
aas
lock
mov
sub
stos
fwait
mov
dec
pop
add
loope
push
sahf
pusha
mov
mov
inc
test
xorb
mov
and
ss
inc
aad
or
movsl
xor
icebp
pop
push
lds
in
mov
cli
xchg
or
lahf
and
mov
sbb
rorb
pop
dec
imul
fsubr
push
cwtl
wrmsr
jo
cwtl
dec
add
cwtl
xchg
inc
sub
push
call
aad
mov
and
stos
push
jnp
add
push
pusha
in
cmpb
jb
andb
mov
out
sbb
pop
clc
jns
push
movsl
ret
mov
pop
icebp
test
jns
cmp
inc
ss
out
add
bound
paddsw
add
push
xchg
ffree
xchg
jo
and
cmc
test
je
push
out
lcall
sbb
or
lahf
popa
pop
ja
sbb
mov
sub
inc
bts
loope
test
test
add
ljmp
js
enter
scas
cmp
cmp
mov
push
inc
fldenv
inc
roll
mov
lods
xor
movb
push
pushl
sub
daa
mov
mov
or
int3
imulb
or
cltd
push
lds
leave
sarl
call
xor
mov
enter
push
insb
add
std
pop
jne
push
xchg
outsb
jl
xchg
arpl
imul
mov
fstps
push
mov
mov
loopne
aad
mov
icebp
jmp
aas
mov
jae
lds
and
sub
xchg
mov
es
push
aas
sub
mov
add
stos
in
push
sub
jp
negb
jno
and
imul
mov
ret
sbb
push
sub
pop
jmp
clc
outsl
add
addr16
mov
cmpb
fsubrp
fmuls
add
or
xor
cmp
int
je
mov
cmp
ljmp
rorl
push
insb
push
loope
xor
pop
sub
xchg
outsb
cltd
and
aad
xchg
and
test
push
jmp
nop
lods
enter
xchg
in
mov
rcll
pop
insb
push
xor
inc
jmp
lahf
push
pushf
shlb
test
and
fs
or
or
inc
sbb
mov
pop
rcl
or
es
stc
std
mov
aas
sarb
hlt
xchg
loop
add
cmp
push
pushf
inc
and
test
sbb
fmuls
fdivr
push
sub
mov
push
fadds
scas
or
js
jno
lahf
jle
lods
aam
add
cmpsl
cmp
xor
mov
add
addr16
or
jecxz
add
adcl
or
cmc
ljmp
cmpsl
idivl
lock
xor
aaa
sub
sbb
mov
pop
sbb
jle
popf
lcall
std
mov
xor
xchg
mov
lret
arpl
add
inc
and
push
cld
pop
and
mov
jle
mov
je
and
lods
movsl
subl
test
pop
mov
and
add
cwtl
test
jmp
or
roll
jmp
loope
pop
adc
enter
flds
movsl
pop
aam
add
push
push
bound
pop
dec
and
mov
inc
add
add
in
mov
inc
fincstp
jmp
leave
int
outsl
imull
les
pop
push
roll
pop
and
mov
jmp
loopne
or
jo
lret
flds
sbb
rclb
cmpsb
and
and
xchg
rcrl
xchg
js
xor
or
pop
fcomip
add
lret
mov
mov
and
sarb
xor
sbb
in
dec
dec
dec
daa
outsl
das
cmpsl
jge
jo
add
lret
inc
ds
push
xor
jmp
ror
add
xchg
mov
clc
mov
and
mov
sub
shlb
clc
inc
dec
push
jno
xor
negl
arpl
adc
dec
shlb
mov
xchg
leave
jne
shrb
and
dec
xchg
test
push
add
push
jp
mov
nop
mov
enter
int3
clc
shll
lock
stc
adc
lods
xor
jb
mov
gs
sbb
mov
stos
xchg
and
xchg
mov
ret
inc
mov
mov
mov
shlb
hlt
mov
loopne
ret
cmpsb
loopne
ret
cmpsl
loopne
ret
movsb
loopne
ret
movsl
loopne
ret
mov
fldcw
jp
jl
jne
cmpb
enter
jno
and
push
push
jbe
jle
sbb
mov
cmp
aad
stos
jge
or
push
mov
push
inc
ljmp
fldt
leave
dec
xor
stos
add
dec
push
loop
jl
lds
push
fldenv
repz
sbb
dec
test
adc
sbb
cmc
mov
aas
stos
dec
push
call
test
mov
mov
mov
push
mov
mov
and
or
imul
sub
daa
es
mov
repz
or
out
movsb
shll
xor
sarl
jb
mov
mov
xor
hlt
lods
jns
jae
mov
into
dec
or
jno
xchg
repnz
push
sti
add
add
into
outsb
xorl
inc
inc
icebp
xchg
dec
ret
mov
repz
lret
ficompl
filds
popf
jg
add
dec
or
or
aas
dec
sbb
jge
dec
lds
lret
jne
or
lea
adc
jo
scas
mov
or
xor
loop
ror
xor
cmpsl
jl
xorl
sar
lret
push
sahf
leave
icebp
mov
ja
mov
gs
or
dec
adcl
hlt
jbe
xor
add
aaa
pop
mov
and
mov
int
push
cs
daa
test
leave
int3
pop
insb
or
out
sti
mov
add
add
lds
int
loope
mov
leave
jo
mov
xchg
loope
test
test
add
sub
mov
add
in
leave
test
test
sub
shrl
lret
fisubl
repz
sarb
mov
mov
sahf
mov
inc
out
pop
jae
add
mov
mov
and
test
mov
sub
push
add
xchg
xchg
rolb
fstl
jns
xchg
add
shll
sub
es
fnstcw
fsubl
inc
cmp
xchg
push
lret
je
and
sbb
aaa
jg
rorl
mov
mov
std
and
inc
xchg
leave
mov
pushf
rcrl
cmc
mov
xor
dec
adc
cs
cli
jne
push
add
stos
loope
sub
inc
xlat
test
xchg
xor
xchg
in
add
packsswb
mov
dec
sbb
mov
or
lods
xor
xchg
outsl
push
je
int
pop
push
inc
mov
dec
add
and
out
mov
jae
fidivl
lods
add
std
stos
aad
mov
ss
xchg
mull
shl
mov
mov
clc
and
mov
lret
shrb
lods
mov
and
aad
jb
push
and
aaa
jmp
in
fldt
mov
fidivl
mov
jns
add
jmp
fisubrl
lock
into
jns
xchg
stos
dec
jae
jmp
imul
dec
nop
popf
sbb
shlb
lret
add
iret
mov
popf
cli
mov
add
subl
insl
dec
inc
add
movb
cltd
iret
mov
mov
push
bound
lods
movsb
aam
sub
aam
inc
dec
push
cmp
sub
adc
in
xor
mov
mov
ljmp
jb
inc
dec
add
push
jl
fimuls
sbb
iret
ret
push
fdivrp
inc
ret
aad
in
adc
arpl
jmp
jmp
vmovd
pop
add
loope
jge
or
imul
inc
xor
mov
dec
inc
daa
sbb
fstpl
lods
lods
sahf
add
sbb
jb
into
dec
mov
imul
and
pop
aas
xchg
or
jge
pop
in
adc
repz
int3
add
jo
sbb
cli
inc
cmp
imul
mov
pop
repnz
mov
out
push
push
or
mov
addr16
out
popf
or
test
test
addl
pop
add
sub
sti
jb
cmp
mov
lods
sub
cwtl
inc
cmp
sbb
and
lahf
repnz
sub
lahf
jb
cmp
les
inc
push
popw
xchg
or
test
popf
mov
dec
cmp
adc
arpl
inc
pop
cmp
push
jecxz
add
gs
data16
je
std
rorl
dec
movsb
insl
jbe
dec
shll
push
imul
xchg
xlat
cld
or
jecxz
int
mov
mov
or
xchg
mov
ret
shlb
rorb
sub
lret
mov
je
cli
and
loope
mov
loop
cmc
iret
lea
add
mov
jo
enter
cltd
sub
xor
jb
clc
adc
or
test
jne
sub
cmp
xchg
mov
aam
stc
jno
mov
xchg
lds
jo
enter
les
movsl
mov
cwtl
rcrl
push
scas
dec
add
and
test
lea
xor
loopne
enter
fisubs
test
dec
movl
mov
push
repnz
dec
call
add
dec
inc
dec
repz
sbb
mov
mov
jnp
mov
dec
jg
scas
mov
dec
jl
ds
sbb
aas
mov
js
xlat
dec
jge
dec
fistpl
push
push
cmpsb
leave
enter
cmp
mov
jne
or
inc
cwtl
jne
leave
push
inc
push
outsl
xor
pop
jbe
or
add
or
push
lock
rcl
enter
enter
mov
xor
fsts
or
push
sub
mov
push
xor
xor
orl
adc
lret
insl
leave
imul
mov
and
mov
aaa
scas
mov
add
or
jp
js
or
mov
pop
lock
xchg
xorb
push
and
cmp
jno
ret
jl
icebp
cli
jbe
mov
or
repnz
sbb
push
sbb
cmp
test
dec
xor
xchg
mov
mov
sub
sub
aad
mov
cwtl
hlt
and
push
loope
stc
lods
adc
dec
fwait
push
fsubrs
pop
out
into
push
ret
leave
test
bound
sbb
cmp
pop
push
add
add
lea
neg
cmp
adc
outsl
cmp
or
adc
lods
jge
dec
adc
scas
bound
xor
adc
fxsave
jo
and
rorl
cli
add
gs
testl
xchg
mov
aad
push
or
pop
adc
or
lret
mov
testl
out
call
stc
or
dec
or
test
lret
or
repz
push
aas
pop
or
xchg
in
mov
xlat
testb
into
sbb
and
mov
push
xchg
xor
out
or
xchg
adc
mov
add
sbbl
cmc
lods
movsl
addl
inc
loope
and
sbb
gs
jno
icebp
sub
sti
icebp
in
cmpsl
dec
sub
jo
push
sbb
jmp
mov
aas
ds
add
jnp
xlat
jne
sarl
lock
stc
lods
xchg
loopne
loopne
js
hlt
sbb
and
mov
fldl
mov
gs
gs
xchg
aaa
jge
xor
mov
mov
repz
push
inc
lret
mov
adc
jg
push
aad
adc
push
sub
or
inc
xor
push
ret
or
push
test
movq
sub
stos
or
pop
jge
jo
adc
inc
ljmp
sahf
xchg
sbbl
je
xchg
add
pop
sub
adc
xor
xchg
pop
mov
sub
aaa
or
aam
mov
mov
andl
mov
dec
fidivl
jle
cmpsb
pop
push
xchg
pop
jg
popf
pop
or
pushf
mov
outsb
sbb
and
mov
jmp
adc
add
or
jmp
lret
aad
or
mov
testb
sahf
test
inc
push
std
or
adc
and
sub
sti
push
in
mov
jle
addl
repz
pop
mov
or
xor
aaa
push
jbe
cmp
sub
inc
jmp
test
shll
mov
push
ret
dec
leave
jns
push
inc
mov
clc
jge
cmp
test
incl
jb
xchg
or
or
inc
adc
inc
add
popl
gs
icebp
movsb
or
test
enter
add
ljmp
mov
test
or
maskmovq
notl
mov
xchg
sub
std
sbb
adc
xor
jns
or
sub
jns
fcmovnbe
jge
sub
outsl
jg
hlt
add
leave
dec
inc
idivl
imulb
dec
shlb
cmc
leave
test
ror
leave
pusha
push
repz
into
mov
ret
push
inc
rcl
outsb
pop
mov
mov
test
push
sbb
lret
or
ja
add
imul
lret
bound
mov
aam
pop
andb
icebp
out
cmpsb
push
sub
pop
add
ja
inc
and
xchg
push
or
push
pop
into
enter
dec
jbe
pop
imul
aaa
rorb
test
lret
fists
adc
add
lock
fdivrl
std
adc
cli
fwait
test
aad
in
data16
popf
inc
sub
rcll
and
push
jecxz
paddsw
sarl
stc
and
adc
or
ret
or
addr16
lods
pop
int3
cmp
jl
mov
decl
xor
or
into
in
popl
add
mov
test
pop
adc
stc
icebp
test
iret
jecxz
fimuls
push
adc
adc
xchg
test
pop
mov
adc
mov
or
push
cltd
inc
xor
xchg
xor
hlt
lods
pop
jno
stc
stos
in
xor
loopne
cli
sbb
xlat
lods
fmull
leave
test
and
sahf
and
shl
repz
jmp
xlat
test
out
aad
shlb
les
mov
jo
pushf
cmovno
into
dec
add
add
push
lahf
mov
cmp
pop
pop
push
addr16
popa
cmp
shr
jecxz
or
lock
ljmp
add
mov
out
outsb
sbb
sub
jp
loope
jbe
jecxz
jae
or
sbb
push
xor
dec
cmp
test
sub
inc
in
mov
repnz
loope
lcall
mov
jb
and
test
and
jg
mov
in
adc
in
test
mov
add
addl
jp
leave
arpl
ds
sub
lods
popf
ljmp
lock
jle
out
call
int3
cmp
js
xor
mov
clc
xchg
test
jbe
pop
out
jne
nopl
loopne
lret
pop
mov
mov
dec
and
sub
call
lret
adc
adc
in
cld
xor
shr
shrb
pushf
xchg
daa
roll
mov
addb
fldt
push
xchg
add
sub
and
ret
aad
adc
shr
xchg
mov
xchg
inc
mov
mov
int
and
icebp
adc
rcl
mov
daa
pop
shll
and
ret
test
xchg
cwtl
loopne
jb
fcoms
or
mov
jmp
add
test
nop
mov
aas
les
dec
mov
pop
subl
lahf
lods
ret
adc
pop
mov
shll
cmpsl
cli
bound
cld
mov
dec
xor
repnz
jge
adc
ja
mov
lret
pop
or
or
mov
add
or
and
xor
dec
rcl
xchg
stc
adc
gs
call
xchg
lds
xor
mov
mov
out
mov
mov
mov
jmp
repz
aam
cmpsl
ja
cs
mov
push
daa
cmp
fld
inc
and
mov
pop
repz
fldl
dec
add
aam
loope
push
lods
jl
xor
pop
jb
lds
add
fbld
aaa
xchg
or
xor
int3
insl
pop
sbbl
push
push
inc
mov
or
push
push
xchg
pop
pop
int
dec
arpl
inc
sahf
mov
cmp
shll
daa
sbb
btc
repz
mov
mov
movsl
aad
imul
mov
iret
sti
jo
hlt
dec
cltd
xor
int3
div
test
aaa
into
pop
dec
mov
daa
iret
adc
stc
dec
sub
dec
and
jbe
daa
xor
test
push
jecxz
fdivs
shl
cmp
cmp
add
shr
dec
cmp
shlb
dec
ret
shll
push
popf
fimuls
pushf
shll
mov
cmpsb
into
sbb
adc
pushf
mov
popf
call
mov
ds
dec
xor
add
push
nop
push
fs
sarl
stos
stos
sub
and
inc
mov
push
in
fsubrl
xchg
push
out
enter
mov
dec
in
add
jmp
add
adc
stos
ljmp
pop
pop
mov
fsubs
inc
call
pop
fnstsw
mov
or
mov
or
aam
nop
cmpps
push
pop
iret
mov
or
ret
leave
loop
add
dec
cmc
arpl
or
call
inc
fldl2t
jbe
repnz
sbb
mov
shlb
bound
push
in
sub
xor
packssdw
stc
test
cmp
sti
mov
ret
jb
jo
mov
jmp
insb
mov
inc
pop
aaa
push
sub
inc
sub
push
icebp
jl
std
enter
scas
test
jg
insl
idivl
rolb
loopne
lds
or
add
hlt
jg
adc
std
loopne
les
cmc
ret
cmc
xor
and
imul
shl
sub
dec
fucomp
xchg
mov
ja
or
dec
hlt
iret
add
jmp
lret
in
icebp
out
mov
cmpsl
jo
and
stos
ljmp
and
stc
sbb
or
test
and
xor
es
xchg
push
decl
jecxz
mov
sub
movsb
cmp
cmp
loope
popf
std
popa
dec
cltd
mov
push
jmp
mov
enter
inc
pop
sub
jmp
bound
jo
mov
adc
int
adc
fimull
pop
je
xor
dec
mov
in
jno
and
sarb
sbb
add
xor
inc
and
aas
leave
xor
test
shlb
loop
jmp
dec
ret
dec
mov
jns
ljmp
mov
popa
mov
hlt
sbb
stos
fisttpll
dec
mov
xor
std
and
out
jmp
mov
hlt
pushf
dec
xor
ja
sbb
mov
fimuls
mov
imul
jecxz
aam
call
push
imul
cmp
ret
dec
inc
leave
add
mov
cs
movsbl
sarl
adc
ret
into
outsb
mov
adc
xor
in
outsb
stc
jge,pt
aaa
shl
pusha
mov
sahf
mov
int
lret
jb
mov
mov
sbb
into
jle
mov
dec
xor
mov
inc
mov
mov
sub
jae
scas
stc
icebp
dec
or
pop
adc
or
push
inc
fwait
jmp
mov
sbb
mov
push
cmp
in
ja
add
mov
ret
icebp
mov
and
sahf
lret
and
fiadds
shrl
mov
pop
adc
mov
cmpsl
xchg
js
add
and
rol
in
cmp
cmp
pop
outsb
in
mov
pop
dec
es
mov
cld
stc
hlt
push
push
or
loop
jb
in
aam
and
dec
aam
push
mov
testb
pop
lea
rcll
adc
inc
nop
and
lods
ret
add
adc
subb
mov
leave
aas
ds
jns
mov
test
lds
out
pop
rcrl
xor
mov
test
in
lds
add
push
jmp
xchg
aam
mov
aad
lret
sub
ret
scas
xor
lock
leave
or
jmp
inc
out
jg
or
and
and
loope
mov
icebp
cltd
scas
cmp
fsubrp
jnp
push
ret
xchg
or
stc
stos
push
jb
adc
push
adc
mov
xor
aad
out
jnp
add
push
or
mov
add
dec
add
dec
out
out
into
and
mov
xor
sub
ret
test
insb
sbb
imul
push
xor
stos
cmp
js
xor
cmp
add
and
mov
pop
add
dec
andl
jnp
orb
sub
push
mov
ret
les
add
dec
shll
dec
stc
mov
ljmp
dec
icebp
dec
add
lods
lock
cmc
stc
mov
btr
out
loop
std
cld
cmp
dec
dec
and
ds
arpl
icebp
or
lea
dec
dec
lret
push
enter
repnz
dec
mov
push
scas
push
idivl
xor
jmp
cmp
imul
divb
mov
sti
out
fdiv
lods
fbstp
out
cmp
add
or
es
dec
test
pusha
aas
or
out
insb
and
nop
int
dec
daa
lods
dec
adc
out
ficoms
fs
aas
out
sub
subl
hlt
out
sbb
psubw
dec
lret
xchg
scas
push
sbb
or
shrl
sub
fsub
dec
testl
out
add
adc
inc
iret
out
hlt
mov
inc
add
rcl
arpl
in
inc
aam
ja
or
ret
in
jae
dec
test
pop
repz
add
add
sbb
push
pop
sub
or
pop
in
jg
shr
dec
cmp
inc
mov
icebp
test
jge
sti
iret
in
icebp
adc
icebp
lds
or
fld
jp
pop
inc
inc
or
mov
dec
mov
jbe
add
mov
pop
icebp
out
divl
cmp
int
add
pushf
mov
test
cmp
mov
arpl
mov
movsl
or
add
jmp
xchg
roll
pop
movups
test
jns
cmpsb
stos
lret
xchg
movsl
repz
pop
mov
push
or
jl
inc
and
dec
je
cmpsl
adc
cmp
mov
or
or
in
inc
mov
push
jne
repz
and
subl
add
xchg
cmpsl
or
inc
fdivr
sub
icebp
loopne
pop
cmpsb
inc
jo
stc
enter
jle
ret
or
imul
aaa
lea
jo
xchg
inc
and
fimuls
in
jmp
add
jp
dec
dec
mov
lock
hlt
inc
adcb
jne
leave
stos
dec
push
sbb
lret
mov
and
jae
sar
leave
js
xor
pop
xor
pop
lcall
push
daa
addr16
out
lds
in
pop
call
jg
jne
jle
xor
and
dec
dec
cmc
jmp
out
pop
std
test
ret
mov
roll
pushf
shll
inc
addr16
xor
imul
jle
or
jnp
cmpsl
cmp
mov
shl
cld
dec
dec
jnp
push
pop
ljmp
jmp
ja
push
dec
push
inc
hlt
xlat
wbinvd
mov
test
adc
and
lret
ret
push
push
mov
sahf
mov
jae
jmp
into
je
sbb
push
jecxz
cmc
fistpl
jo
pop
dec
jle
int
mov
pop
adc
stos
lret
and
or
mov
sbb
or
aaa
jmp
aad
popa
shl
sbb
lods
sub
pusha
fnstsw
dec
scas
nop
cmpsb
jae
lods
sti
xor
mov
test
cmpsb
fmuls
rol
lods
xlat
in
ret
gs
in
in
sbb
daa
sub
out
andb
push
mov
jne
out
mov
xor
popf
out
sub
outsb
push
and
and
cld
insl
test
lods
mov
lods
push
fsubr
pop
mov
xor
and
pop
xchg
cmc
std
repz
and
dec
mov
and
add
sbb
sub
cli
pop
cmp
jbe
add
dec
loopne
nop
imul
mov
and
cld
cmp
mov
push
inc
rcl
dec
arpl
dec
dec
mov
push
frstor
mov
ja
loop
dec
shl
test
ja
pop
pop
and
in
inc
fidivs
in
or
out
js
add
stc
aam
add
add
cli
fs
or
loop
xor
fidivl
mov
and
xchg
add
sbb
fs
add
fdiv
fistpll
lock
ret
push
jge
push
xor
loopne
stc
or
fisttps
dec
bound
into
cmp
lds
mov
into
fadd
cmp
pop
imul
xchg
add
push
shl
mov
loopne
in
push
adc
jg
push
stos
leave
push
push
pop
gs
testl
mov
cmp
xor
adc
xor
int
cmp
mov
aam
push
add
scas
cmp
or
jg
inc
mov
and
test
mov
inc
add
into
dec
hlt
std
ljmp
mull
xlat
aad
mov
xor
sub
loop
sub
loop
dec
mov
inc
movsl
dec
shll
push
ljmp
icebp
mov
sbb
or
inc
sub
fidivl
out
and
test
stc
adc
cmpsl
add
jbe
in
and
lds
iret
mov
jae
or
and
insb
aam
scas
stc
xor
mov
test
outsb
int3
xchg
inc
pushl
enter
push
add
adc
push
into
cwtl
daa
add
adc
pop
sub
daa
dec
sub
stos
ficompl
je
jmp
leave
xor
and
jmp
jp
inc
dec
mov
in
aaa
xor
imulb
xor
push
shl
clc
push
xor
mov
dec
sub
test
mov
mov
push
lock
std
and
stos
ret
in
xor
mov
inc
int
leave
pop
ret
mov
rolb
jge
subb
adc
in
push
xchg
test
mov
push
cmp
test
cli
adc
paddw
nop
push
jmp
xor
inc
inc
out
inc
test
imul
ljmp
mov
cwtl
xchg
lea
int3
mov
incb
popa
stos
hlt
rolb
dec
aam
adc
fsubs
popa
in
test
add
jno
or
out
sbb
push
ja
popf
xchg
repz
shrb
cmpsl
jg
or
xchg
dec
add
fs
test
and
ficompl
cwtl
mov
bnd
xor
cltd
cmpsb
inc
ljmp
mov
aas
shlw
mov
mov
add
dec
or
scas
idivl
push
push
sub
imul
shll
xor
push
rorl
jae
push
ret
xlat
iret
aas
mov
inc
xor
xorl
or
push
pusha
mov
mov
xchg
ds
cmp
push
insl
test
and
test
stos
es
sbb
inc
out
scas
or
and
cli
rcl
repz
inc
stc
into
adc
or
xor
lds
addr16
dec
les
and
mov
xor
setbe
push
movsb
je
sub
movsb
or
ret
in
cmc
mov
mov
inc
xchg
or
xor
repnz
aad
lret
stc
xchg
push
je
mov
lahf
adc
push
pop
adc
xchg
xor
push
lahf
pop
and
cwtl
sub
icebp
xor
int3
or
dec
das
test
add
out
or
lcall
fstpl
sbb
dec
in
icebp
inc
rcll
les
fdivr
and
test
or
test
cmp
fs
aas
test
out
jmp
mov
mov
xchg
cmc
repz
dec
mov
rcrb
nop
adc
stc
cmp
and
inc
ret
inc
pop
mov
test
ja
addl
pusha
adc
lods
sbb
hlt
mov
repz
rorl
test
loope
pushf
mov
stos
rolb
negl
lcall
adc
and
push
jmp
mov
ret
mov
outsl
sbb
sub
xlat
lock
idiv
test
adc
inc
sbb
leave
pushl
mov
sbb
std
inc
push
lret
dec
stos
jecxz
int
pop
mov
push
ret
stos
push
xchg
rcrl
out
push
cmp
in
je
sqrtps
cmp
std
test
stos
xchg
lock
jnp
out
pop
push
mov
cmp
xor
dec
xorl
insb
icebp
add
ss
inc
or
adc
jne
mov
cld
cmc
inc
aas
imul
out
cmp
inc
insb
lods
fildl
shlb
xlat
dec
push
sbb
or
inc
pop
inc
add
shrb
lcall
flds
xchg
shlb
stos
mov
icebp
fwait
test
xchg
notb
add
xchg
dec
rolb
mov
or
cmpsl
and
decb
ljmp
adc
mov
xor
loope
xchg
arpl
out
xor
dec
mov
and
mov
dec
jae
lea
mov
in
xchg
jbe
dec
adc
leave
ds
ficoms
mov
lds
mov
or
cmc
in
fnstsw
pop
push
fisttpll
dec
jmp
jno
loope
mov
add
inc
adc
or
or
das
dec
bound
vminsd
adc
test
xchg
mov
loop
leave
mov
jecxz
das
lcall
shl
in
mov
push
in
cmc
in
cmpsb
fisubrs
jbe
xchg
je
mov
xor
cmp
sub
adc
xor
pop
mov
cltd
pop
clc
test
xchg
or
ret
add
clc
push
insb
push
inc
push
or
js
pop
insb
out
inc
pushf
or
popf
and
inc
aaa
add
xor
icebp
int
xchg
or
aam
enter
sti
mov
leave
in
xchg
ret
add
sti
aam
leave
xor
aas
fwait
adc
or
and
mov
dec
adc
xor
test
lds
xor
pop
jmp
ret
dec
mov
adc
aad
cmc
hlt
jp
shl
sbb
push
adc
push
ret
pop
xchg
insb
cmc
push
push
xchg
pop
fisubrs
jmp
jmp
xchg
add
outsb
mov
push
std
jb
jns
sub
cmp
out
fstpl
aam
test
xchg
cmp
fdivr
and
scas
or
inc
pop
jne
sub
sbb
add
push
add
sbb
int3
pop
mov
iret
leave
xchg
arpl
sub
jecxz
negb
enter
push
mov
pop
sbb
shll
shlb
icebp
mov
or
mov
mov
jb
cwtl
jmp
cli
jb
sub
aam
pop
sub
inc
xchg
pop
daa
hlt
add
loop
pop
dec
sub
sbb
test
pusha
cmc
add
mov
inc
cmp
cmp
scas
pop
pop
dec
inc
mov
xlat
dec
adc
das
xor
xchg
adc
rolb
and
jecxz
neg
repz
je
xor
fdivrp
shl
dec
cmc
pop
push
shrl
sarb
out
clc
dec
fucomi
and
into
dec
outsb
pop
cmc
jb
movsl
mov
shlb
scas
popf
hlt
cmp
stc
mov
out
inc
in
inc
fsubs
cmc
loope
outsb
arpl
testl
mov
out
and
es
xor
mov
and
add
rcr
xchg
lret
add
xor
lds
mov
jns
or
mov
hlt
ss
out
jnp
or
pop
out
adc
fisttpl
andb
pop
ljmp
imul
inc
push
mov
popa
adc
aaa
mov
shr
jmp
or
loop
mov
sub
in
sbb
loope
sbb
mov
ds
rcr
rcr
es
movsl
leave
leave
mov
fsubrs
inc
or
fdivs
jmp
push
sub
sub
into
test
push
or
outsb
xor
and
shll
imul
add
cmp
shll
cmp
cltd
xor
cmp
std
jnp
jge
in
pop
mov
aam
jae
and
dec
cmp
sub
pop
sub
sahf
or
add
push
outsl
dec
div
jle
andl
sarb
sbb
imul
xor
or
pop
imul
mov
pop
fstpt
push
shll
lret
rcr
push
or
mov
mov
out
repz
lods
cmpsb
mov
arpl
or
jmp
sub
fbld
mov
jecxz
push
pop
pop
pop
je
mov
push
sbb
mov
shl
f2xm1
jbe
adc
nop
je
adc
rolb
and
inc
jecxz
mov
addr16
daa
cmp
fxch
push
inc
ror
jnp
dec
pop
sahf
inc
addl
jmp
loop
lock
dec
pop
ljmp
xchg
arpl
xchg
lock
pop
int
ljmp
jp
jmp
add
cmp
pop
shlb
test
cmpsl
inc
inc
pop
jmp
xor
sbb
mov
jae
jbe
jmp
fabs
popa
loop
aaa
inc
or
outsb
popf
test
js
ret
outsb
loopne
sub
pop
test
push
add
fs
decl
sub
sbb
arpl
ret
mov
loopne
sbb
movl
cmpb
outsb
js
mov
pusha
sbb
add
into
pop
shll
jnp
push
xor
jle
gs
outsl
mov
inc
std
stos
and
sub
jns
mov
shll
inc
inc
enter
rcll
xor
fcmovnbe
lock
push
inc
mov
loop
or
dec
mov
pop
mov
cwtl
sti
jmp
out
mov
mov
adc
loope
dec
mov
stos
iret
mov
or
sahf
pop
mov
daa
pop
mov
sbb
xchg
mov
test
mov
loope
mov
jp
add
in
stos
xchg
shll
dec
insb
lret
pop
sbb
inc
push
and
add
jb
or
inc
incl
jl
adc
pop
repz
stos
aad
or
xor
lahf
shl
aas
adc
data16
dec
mov
int3
or
inc
push
fcom
mov
aad
shll
dec
insb
or
mov
int
fbstp
sub
testb
dec
or
popf
sbb
in
lods
and
repz
inc
jecxz
lds
jle
mov
out
push
xor
adc
sub
repz
enter
mov
or
mov
adc
ja
or
lret
cmp
xor
sub
jp
xchg
xchg
das
xor
pusha
aam
xchg
mov
addb
mov
imul
out
loope
outsl
cmp
adc
pushf
idivb
or
call
clc
jmp
loope
push
testl
jle
adc
push
shrb
inc
aas
loope
fldcw
and
hlt
test
lret
or
rcrb
rorb
add
push
pop
hlt
dec
fcoms
inc
shll
push
lods
loope
push
push
pop
sub
cmpsb
jbe
or
and
daa
notl
in
cmp
push
or
fnstenv
fsubl
dec
enter
and
dec
sbb
icebp
inc
jae
pop
cmp
aaa
push
pop
xor
xchg
popa
test
push
adc
int3
lock
sub
xor
in
push
ss
jge
xor
mov
xchg
inc
mov
sarl
pop
fcoms
cld
push
les
fstpl
add
cmc
mull
sbb
mov
or
or
bound
stos
ret
pop
xor
dec
testl
pop
or
mov
fsts
mov
or
push
jle
push
mov
add
in
dec
stc
cmp
repnz
dec
sbb
pop
repz
outsl
push
pop
add
pop
and
mov
xor
in
mov
test
and
inc
xchg
sbb
lds
out
ja
or
aad
test
pop
shl
lds
add
mov
sub
inc
ljmp
cmpl
xchg
xor
dec
xlat
adc
mov
lret
mov
mov
inc
std
cmc
sbb
std
push
cmp
sub
mov
jae
sahf
dec
insb
and
mov
lds
dec
jo
push
or
jg
movntq
and
xor
loope
mov
jae
mov
xchg
fs
inc
dec
dec
mov
cmc
or
mov
jge
or
and
pop
stc
push
test
inc
aam
out
xchg
push
mov
lahf
gs
mov
push
shlb
out
imul
testl
int
push
cs
ds
adc
movsb
sbb
pop
sbb
in
int
push
sub
sahf
decl
stos
dec
enter
repnz
enter
aad
mov
cmpsl
dec
mov
cld
gs
idivb
cmpb
out
push
add
loope
test
dec
cltd
push
out
sub
lahf
xchg
rolb
in
xchg
sbb
stos
shl
loope
orl
test
pop
push
popf
or
insl
or
cmp
gs
and
pop
test
cmp
sub
add
add
mov
adc
mov
rorb
aam
cmp
mov
mov
lret
aaa
or
adc
cld
mov
inc
push
xor
out
cmp
es
dec
int3
fadds
icebp
data16
add
mov
in
inc
mov
imull
ret
sub
jmp
stc
aad
stc
loope
dec
or
dec
subl
test
add
loope
mov
test
xchg
dec
int
jo
cmpsl
fcmovnb
inc
adc
sahf
pop
enter
aaa
in
mov
stos
cbtw
pop
xor
cli
mov
and
hlt
sub
dec
xchg
in
sub
ja
add
mov
test
notb
jns
movb
cmovb
adc
sub
insl
sub
mov
add
add
inc
mov
dec
pop
mov
mov
dec
jb
loope,pn
cmp
cli
mov
mov
sub
aas
mov
leave
jns
mov
sbb
and
repz
lret
aas
pop
loopne
sahf
shrl
aas
cltd
mov
int3
pop
push
fdiv
aam
mov
lock
mov
out
cmpsb
push
mov
es
imul
shll
add
mov
ret
fdivrs
sbb
pusha
loopne
sub
fimuls
sbb
mov
add
xorl
std
ja
add
aad
mov
jne
imul
or
test
jnp
dec
loop
hlt
repz
pop
sbb
ret
cmpsl
scas
xchg
aas
xor
jb
adc
xchg
cmp
mov
aam
int
imull
loop
fdiv
cmp
xchg
leave
leave
mov
add
dec
add
push
pop
dec
lods
insl
test
dec
mov
in
cmp
pusha
mov
push
test
mov
div
cmc
xchg
inc
cltd
sub
jle
jb
and
dec
dec
js
ror
lds
test
fsts
repnz
sbb
insb
loopne
stos
jg
les
and
movsl
rorb
enter
pop
cmp
scas
xchg
repz
pop
push
jmp
and
inc
outsl
xchg
out
icebp
mov
add
not
jge
in
mov
add
clc
or
jo
pop
ljmp
sbb
jae
xor
xchg
aad
inc
test
or
sti
call
cmp
in
cwtl
rcrl
rolb
cltd
pop
and
in
sbb
subl
std
das
js
pop
repnz
sti
arpl
outsb
loope
jbe
add
incl
popl
shrl
mov
sub
inc
push
adc
sub
repz
leave
leave
jp
xor
push
xchg
icebp
fdivp
mov
push
sarl
and
adc
enter
inc
sbb
divb
in
xchg
shrb
not
add
adc
popa
lret
cltd
mov
adcl
shrb
and
nop
and
test
enter
lock
sbb
mov
inc
adc
test
imul
and
dec
push
les
fidivrl
addr16
aam
or
jno
inc
jne
mov
fcos
ljmp
imul
test
popl
or
adc
mov
test
mov
inc
mov
or
shrl
es
mov
pop
test
lds
add
movsl
xchg
mov
call
mov
fwait
pop
repz
movsl
xchg
or
pop
aas
enter
hlt
test
mov
inc
out
push
shll
mov
jbe
aad
in
outsb
imul
in
dec
mov
cltd
testb
mov
pop
xor
xor
ret
adc
cmp
ds
adc
xor
fdivl
loope
mov
and
popf
enterw
add
mov
mov
aaa
iret
in
xchg
lcall
xchg
outsb
sub
mov
ljmp
mov
dec
repz
clc
mov
jbe
out
push
pop
mov
inc
lret
xor
mov
popa
mov
dec
pop
dec
sub
dec
inc
test
lret
lahf
push
rolb
roll
dec
adc
jp
loope
hlt
cmc
inc
cltd
es
pushf
jg
divb
mov
add
int3
mov
cmpsb
mov
mov
or
jecxz
in
jle
and
mov
xor
clc
jg
std
fsubs
movsb
rcr
and
dec
js
gs
test
or
cli
jns
jb
imul
inc
pop
iret
dec
dec
or
out
xchg
jle
addl
insb
sub
les
clc
outsl
and
add
shll
in
loopne
sub
out
shrl
sub
pop
jns
pop
push
jno
xor
and
inc
imul
and
cmpsl
cmc
sahf
ror
pop
rorb
repnz
test
jmp
mov
and
add
lret
and
dec
daa
out
xor
test
jae
pushf
jecxz
aas
push
inc
dec
pusha
jb
decb
jmp
or
xor
inc
xchg
cmp
pop
xchg
or
aam
fstps
fcmovb
cmp
gs
or
pop
push
repz
xor
and
test
imul
adc
out
je
out
cmc
movl
xor
mov
icebp
popa
jmp
push
or
repz
fsubrs
aas
xchg
mov
add
js
sbb
mov
pop
jp
lret
es
and
hlt
pop
jnp
lret
inc
stos
cli
mov
lret
pop
movsb
inc
or
fisubrl
pop
push
jle
sub
push
repnz
mov
adc
fildl
xchg
xor
inc
jg
xor
jbe
lret
jns
repz
adc
lods
cmp
inc
mov
shr
popa
mov
pop
xor
frstor
pop
fiaddl
pop
pop
sbb
aas
jmp
int3
enter
add
fs
ret
lock
test
or
xchg
iret
cmpsb
xchg
or
mov
xor
sti
push
add
push
pop
cmp
dec
leave
mov
loopne
dec
ljmp
mov
xchg
aas
in
push
dec
ret
dec
cli
inc
cmpsb
mov
sbb
jmp
sbb
movsl
cli
js
add
xchg
mov
out
jmp
jl
adc
jmp
call
aam
aaa
nop
fwait
fs
mov
stos
mov
pop
not
jecxz
xor
adc
jns
rclb
test
insl
dec
push
ret
addr16
jne
add
das
out
xchg
sub
add
and
or
push
pop
movsb
ret
cmpsb
jmp
pop
mov
imul
ret
lock
pop
cmp
xor
xorb
enter
dec
cmp
mov
sbb
push
pushl
mov
add
mov
adc
or
lds
sbb
push
dec
xor
inc
test
dec
ss
and
cmc
jecxz
dec
cltd
mov
sbb
repnz
test
sub
std
cmp
ds
repz
xchg
mov
sub
add
sarb
in
in
fstps
xchg
jg
jne
add
fdivrs
add
pusha
rol
aam
cld
push
aaa
sbb
jnp
mov
insl
andl
add
popf
out
add
sbb
aam
flds
or
ss
sbb
int3
in
ljmp
test
les
push
inc
or
xchg
pop
xor
dec
adc
js
bound
roll
jp
add
push
add
stc
aaa
ljmp
aad
dec
and
xor
incl
mov
add
mov
loop
pop
js
ror
ret
mov
adc
fldcw
aam
xor
jg
adc
cmpsl
jmp
pop
sub
lds
xor
jp
aaa
in
aaa
pop
mov
es
andb
in
and
mov
cwtl
mov
xor
imul
test
stos
jmp
or
pop
pop
push
iret
mov
sub
or
dec
movsl
inc
bound
mov
dec
int
adcb
sub
pop
mov
mov
and
push
call
jmp
jge
lret
xchg
sbb
mov
adc
adcb
xor
mov
dec
add
add
push
loope
xorl
cmp
xor
into
mov
push
mov
mov
mov
addl
aas
cmp
out
int
test
jge
outsb
and
loop
popa
xor
add
int3
inc
aad
pop
inc
mov
dec
jp
idivl
mov
mov
mov
inc
adc
into
dec
insb
sbbb
test
pop
fmull
mov
roll
leave
dec
adc
dec
hlt
mov
out
and
dec
jmp
adc
loop
push
lahf
aam
hlt
mov
orl
insb
jbe
or
outsl
dec
cltd
ljmp
cs
lret
cmpsl
jo
and
push
mov
lock
fldcw
jle
mov
iret
or
add
cli
mov
test
fdiv
jge
or
daa
incl
inc
mov
in
daa
cmpsb
dec
and
mov
lock
stos
mov
je
inc
mov
mov
dec
repnz
or
int
or
add
das
dec
bound
sub
cmp
xor
incl
or
jno
repnz
inc
pop
adc
fimull
in
dec
or
gs
adcb
cld
into
pop
xchg
pop
xor
call
pop
adc
insl
cmc
or
inc
push
pop
mov
pop
push
push
mov
jo
popa
cld
cmc
gs
add
lods
rorl
loop
lcall
add
out
lods
sub
and
rcr
dec
and
pusha
icebp
fisttpll
icebp
call
xor
mov
fisttpll
test
push
mov
inc
jne
add
in
pop
pop
icebp
push
push
in
stos
mov
ss
jne
insl
loop
call
sbb
inc
add
je
aad
add
int
rcl
dec
add
add
mov
ja
out
dec
or
lret
mov
sti
jb
dec
mov
fwait
mov
js
adcl
aam
lret
mov
mov
lea
ja
xchg
fidivl
bnd
sti
orb
and
mov
jns
int3
popf
lahf
test
mov
xor
adc
nop
orl
cmp
ds
sbb
inc
lock
repz
jne
sbb
add
int
xlat
stos
ret
int
dec
pop
inc
rorl
adcl
sti
sarl
out
mov
jb
and
dec
aad
cmp
dec
mov
mov
outsb
enter
mov
jg
mov
mov
popf
int
imul
lea
shlb
jnp
mov
cmc
sarb
mov
aaa
mull
outsl
or
ret
jp
clc
iret
dec
movups
aaa
cli
cli
fiadds
je
sbb
pop
or
mov
dec
in
or
icebp
add
test
aam
jo
cmc
mov
loopne
dec
incb
cld
test
aam
ror
xchg
lock
jmp
lcall
insl
loopne
mov
addl
inc
cmp
leave
adc
shll
sahf
inc
sti
cmp
jl
aas
pop
dec
mov
fwait
js
cmpsl
out
xchg
enter
notb
xchg
fistps
rcl
vpsubusw
lea
shll
cld
jne
jle
cs
xchg
clc
pop
dec
call
dec
xchg
in
or
in
rcl
iret
dec
sub
sub
enter
and
xor
push
mov
cmp
dec
repz
into
aaa
insb
jnp
es
dec
lret
dec
or
mov
sub
dec
add
dec
mov
dec
enter
dec
mov
hlt
jne
hlt
leave
ja
xor
jns
adc
dec
jg
rcrl
out
jecxz
or
dec
lds
mov
sbb
xor
xor
cmpb
stos
negb
enter
sbb
mov
jle
arpl
scas
rolb
dec
leave
shll
push
hlt
ror
adc
cmc
ret
pop
or
mov
iret
add
cmp
xchg
nop
ret
lds
lock
imul
iret
mov
adc
outsb
jno
jo
loopne
dec
pop
std
bound
ljmp
push
mov
rcrb
stos
or
stos
cmp
pop
ljmp
ja
aas
add
add
es
stos
and
pop
inc
push
or
test
sub
dec
add
pop
mov
cwtl
imul
aas
ret
ljmp
rcl
sbb
cmp
inc
ficoml
lock
mov
sub
ljmp
mov
lret
es
fs
into
orb
push
ret
xchg
repnz
xor
addb
push
lcall
jae
stc
leave
test
adcl
lods
lret
dec
sbbb
and
cmp
xchg
mov
mov
xchg
sub
inc
adc
sti
cmpsl
std
xchg
enter
ja
mov
or
xor
les
mov
jmp
in
add
mov
lgs
stos
mov
push
jecxz
test
dec
or
push
sub
and
mov
in
mov
inc
ret
aad
xor
cmp
ret
ret
xlat
pop
ret
ret
jmp
xor
sahf
pop
int3
jae
test
mov
cld
or
loope
mov
adc
lds
sub
pop
inc
enter
shll
mov
out
movb
inc
icebp
inc
ficompl
repz
dec
or
or
inc
scas
cmp
bswap
leave
xorl
mov
xchg
xchg
frstor
mov
fadds
fwait
or
fnsave
stos
push
sbb
lret
lea
leave
inc
and
mov
std
inc
ret
popa
mov
cmp
shlb
dec
mov
adc
lds
mov
adc
subl
jbe
dec
xor
push
adc
mov
sub
test
push
ds
cmpsl
idiv
icebp
and
cmp
hlt
daa
push
out
push
adc
mov
sub
ret
mov
repnz
xor
mov
sub
in
cmc
inc
shll
cmc
mov
pop
in
imul
add
jae
dec
fnsave
aad
sti
xor
leave
cmp
gs
mov
sub
test
in
imul
divl
test
fmull
cli
mov
mov
decb
lds
cld
dec
dec
jecxz
mov
daa
iret
dec
lds
sub
jge
das
and
cli
cltd
into
pushl
push
jecxz
xlat
adc
shrl
pop
jbe
and
iret
or
push
pop
add
icebp
mov
cmp
mov
jno
aaa
icebp
mov
cmpsl
pop
xor
add
iret
lds
jle
jecxz
and
lds
repz
loopne
or
xchg
adc
hlt
pop
iret
cmp
rcrb
jmp
sbb
fistpl
shlb
jns
mov
test
xor
lds
vandpd
leave
jne
stos
dec
lret
divb
sbb
iret
sbb
push
movsb
rcll
add
movsl
mov
dec
xlat
or
inc
icebp
xchg
push
inc
addb
mov
movsl
ret
ror
inc
aaa
sbb
pop
lret
pop
mov
jne
mov
or
add
cli
jp
int
mov
pop
int3
popfw
jge
jb
and
xchg
inc
xor
or
adc
testl
std
and
fidivrs
sub
push
mov
ret
pop
sbb
les
shrl
mov
jmp
aam
mov
push
sbb
shl
jecxz
mov
into
and
and
adc
fdivs
jnp
push
flds
push
lret
mov
call
cmc
repz
mov
scas
xchg
mov
cmc
scas
imul
mov
gs
inc
push
fisttps
mov
jp
into
aaa
cmc
mov
aad
aad
adc
add
test
and
inc
ljmp
test
jg
pop
xor
dec
aaa
pop
pop
sbb
out
loop,pn
mov
jbe
inc
insb
inc
div
rcrl
hlt
push
lcall
fdivl
dec
aas
pop
lret
adc
mov
repz
xchg
test
test
rcrl
jns
jno
outsl
cli
sahf
cmp
push
rcrb
pop
xor
jbe
cmp
mov
insl
cwtl
into
pop
push
inc
lret
mov
sbb
cld
mov
fstpt
dec
cmp
push
sub
stos
inc
add
adc
pop
push
je
hlt
shrl
mov
cld
sbb
fwait
adc
xor
dec
aaa
shll
leave
mov
imul
mov
sahf
pusha
mov
mov
xor
or
lret
inc
data16
andl
mov
mov
test
test
ljmp
pop
ret
cmp
pop
xor
test
cmp
xor
cmpsb
inc
sarl
pop
xor
jecxz
and
sub
sbb
push
jbe
dec
shl
lcall
and
int3
add
adc
outsl
loope
int
jb
ret
pandn
dec
or
cmc
or
icebp
fdivrs
in
iret
jecxz
adc
into
test
daa
out
scas
push
push
aam
ret
fwait
adc
push
int
add
leave
mov
outsb
cmc
cmp
sub
movsb
iret
hlt
into
inc
adc
or
aam
mov
out
cmp
xchg
loope
icebp
xor
test
sub
test
test
xchg
in
sbb
pop
mov
jo
ss
xor
aas
into
add
fidivs
rorl
and
push
add
cmp
dec
add
xor
xchg
mov
jbe
test
test
sub
sbb
cmp
lret
in
je
sbb
lea
shr
je
or
inc
mov
and
and
cli
jb
les
outsl
or
and
sub
pop
push
fldcw
mov
mov
lcall
dec
and
add
add
mov
popa
pushf
cwtl
hlt
xor
jg
xor
fidivrs
shl
mov
push
cmp
xchg
or
shll
and
div
lret
add
loop
xchg
xor
xor
arpl
call
add
shlb
test
es
lds
scas
mov
int
repz
add
adc
cmpsb
sub
fldl
mov
into
dec
enter
add
dec
out
fstpl
sbb
cmc
lds
es
stos
and
setle
ja
or
inc
jmp
call
jne
movsl
in
outsb
xor
xor
lods
dec
cmp
testl
sub
sbb
and
loope
enter
cli
push
leave
dec
clc
stos
fdivp
stc
xor
inc
lret
mov
lcall
add
data16
int
mov
push
stc
and
mov
sub
mov
stc
movsl
sbb
and
inc
test
aad
mov
roll
ret
bndstx
aad
js
mov
arpl
inc
mov
push
dec
or
push
jbe
jmp
inc
dec
inc
cmp
sbb
pop
mov
adc
mov
pop
lds
xor
mov
sbb
cmc
jmp
lds
rcll
sbb
mov
loop
loopne
and
lret
or
loope
cmpb
insl
pop
aam
push
jmp
mov
sub
repnz
popf
fcomip
in
sub
out
mov
les
rcr
ljmp
xchg
mov
into
inc
mov
cmpl
movsl
mov
inc
or
lret
daa
enter
jnp
xchg
inc
add
mov
cmpl
mov
or
hlt
sbb
mov
mov
jmp
push
mov
lahf
test
daa
daa
jb
in
and
dec
mov
adc
or
xor
cmpsb
or
clc
js
jmp
xchg
scas
mov
rclb
hlt
add
jae
rorl
xchg
test
pushf
xor
mov
inc
roll
test
push
mov
xchg
and
cmovl
mov
push
test
loope
out
shrl
ljmp
orb
mov
and
dec
out
mov
mov
movsl
stos
cld
add
add
ljmp
ljmp
loope
mov
arpl
dec
jae
enter
iret
mov
cmpsb
mov
int3
push
scas
jae
jne
aam
cmc
sbb
mov
cmp
or
jmp
jmp
fcmovbe
lcall
ljmp
hlt
jmp
test
xor
or
xor
or
inc
mov
stos
test
jo
outsl
cmp
dec
data16
dec
pushf
test
jns
sbb
or
mov
xchg
mov
cwtl
xchg
repnz
jae
add
ret
xorb
adc
ror
ljmp
mov
mov
stos
mov
cmp
mov
sub
pop
js
add
cmc
int
repnz
frstor
pop
ret
test
inc
adc
jmp
loope
pop
movsl
stc
sbb
mov
cmp
push
push
dec
icebp
lret
mov
mov
lds
shl
cmpsb
sbb
fnstcw
and
cwtl
decl
xchg
imul
xchg
lcall
dec
dec
push
rorl
lds
loope
and
ja
or
sti
or
pop
popa
shrl
imul
out
adc
pop
movsl
sub
ss
dec
or
sarl
jno
mov
aad
push
adc
mov
fstps
mov
ja
icebp
jecxz
or
daa
mov
js
popa
rcl
cmc
pushf
pop
xchg
or
loop
in
dec
in
int3
int
decl
loopne
in
cli
mov
and
clc
in
xor
test
xor
loopne
mov
dec
in
jno
sar
aad
ret
mov
loop
das
add
push
jle
cmpsl
mov
mov
add
int
notb
hlt
rcrl
pop
out
ret
fadds
mov
add
add
add
mov
loope
loop
jmp
jecxz
xor
out
jp
aaa
lret
jl
or
push
cmp
in
dec
and
xchg
jbe
sbb
jae
jmp
lret
insl
and
ss
push
aaa
add
mov
jge
push
rcll
sub
negb
mov
mov
mov
ret
dec
gs
inc
cli
test
cmpsb
push
movb
pusha
lahf
mov
pop
pop
dec
push
ds
cmp
jmp
xchg
jo
aam
scas
xor
dec
mov
and
cli
out
incl
insl
rorl
hlt
or
mov
in
add
iret
and
insl
inc
jo
aaa
mov
lret
dec
jae
jbe
bound
mov
test
and
fldenv
sbb
fs
and
hlt
push
fyl2xp1
cmp
adc
xor
loopne
jns
test
fsubl
icebp
mov
das
dec
mov
pop
ret
aas
xor
dec
repnz
fwait
and
out
enter
add
test
iret
xchg
mov
leave
push
jns
and
shrb
inc
push
xchg
mov
sahf
aam
or
xor
add
or
or
cmpsl
xor
dec
fbld
sub
je
inc
mov
ja
loope
test
lret
dec
loopne
mov
aad
into
adc
dec
loope
push
ljmp
jb
mov
addr16
inc
pop
outsl
mov
sub
sbbl
arpl
and
in
sbb
daa
fistl
mov
adc
sub
andb
sub
cmp
ror
mov
lods
insl
mov
cmp
popa
ljmp
xor
mov
push
popa
xchg
testb
pushf
fdivrs
shr
dec
inc
adc
repz
dec
fisubs
mov
jecxz
pop
jae
in
aam
loope
xor
or
sub
fadds
std
fldcw
dec
xchg
test
sbb
les
dec
jmp
inc
or
mov
pop
cld
adc
lds
jg
push
cmp
add
outsb
test
out
inc
add
fidivrs
iret
shl
cmp
mov
idivl
adc
fcmovnbe
inc
leave
mov
rcrb
rclb
mov
test
cmpsb
mov
xlat
jno
add
cmp
pop
mov
pop
int
pusha
cli
pop
dec
mov
shl
ret
push
jne
jecxz
sbb
aaa
and
mov
gs
dec
out
cwtl
mov
jmp
jae
imul
test
xchg
xchg
in
cmp
aam
stos
ficompl
cmp
mov
xor
jbe
or
test
xor
repz
mov
mov
rcrb
lcall
cmp
sbb
stos
icebp
imul
aad
and
cmp
push
insl
xchg
or
fcomps
or
shlb
testl
pop
cmpsl
int3
jmp
dec
mov
out
jb
js
cmp
into
roll
xor
add
mov
cli
mov
rolb
in
aas
lods
aam
add
rorl
sub
mov
in
mov
lea
mov
dec
or
test
mov
jbe
jno
popf
loopne
pop
movsl
jne
jmp
xor
add
add
mov
test
push
fdivr
mov
loopne
add
dec
sbb
sbb
cs
jle
cwtl
xor
add
rcll
inc
fwait
rcr
test
cmp
lret
mov
xchg
xor
inc
push
jmp
push
jle
leave
xor
dec
rcrl
mov
orl
test
pop
push
ret
loop
dec
mov
rcll
fcmovb
stc
xchg
dec
lods
sub
or
shl
js
dec
cmp
daa
and
shlb
pop
push
stc
jae
fnstenv
iret
sahf
push
mov
mov
dec
and
lahf
cmc
ret
outsb
xchg
bts
ss
dec
jae
adc
xchg
mov
xchg
mov
mov
mov
leave
mov
dec
mov
ror
mov
in
gs
sub
pop
das
shll
or
xchg
mov
xchg
insl
cli
pop
sarl
hlt
test
push
or
jp
adc
xchg
and
lcall
inc
ret
dec
enter
inc
mov
test
jo
mov
lds
adc
dec
rcl
enter
lea
sbb
jge
popa
jnp
or
lea
stc
and
mov
fistpl
xor
mov
aaa
sub
in
push
jl
insb
cmp
jge
xor
add
and
dec
sub
out
add
int
push
add
or
dec
sbb
mov
dec
and
add
jo
mov
faddp
adc
outsl
xchg
outsb
ret
shll
mov
or
mov
add
in
aam
mov
dec
nopl
mov
mov
xor
lods
add
ja
es
add
adc
adc
add
jmp
cmpl
cmpsb
mov
mov
jae
adc
lret
and
mov
mov
dec
dec
mov
cmp
xchg
fsubrs
out
jbe
rcl
cmpsb
adcb
mov
movsb
adc
inc
lret
ret
pop
data16
xchg
mov
int
push
adc
cmpb
xchg
lea
test
pop
ret
and
outsl
cmpb
xchg
ror
mov
lcall
cmp
daa
mov
neg
scas
jl
mov
jb
lret
lret
mov
sub
pop
mov
loopne
leave
sbb
stc
outsb
into
cmp
jo
pop
lock
xchg
mov
push
mov
mov
jecxz
push
in
jae
jo
ja
ss
ror
repnz
jb
stc
fcmovnbe
shll
loope
xor
repnz
jb
std
dec
jo
inc
shl
mov
movsl
cwtl
push
jb
adc
add
cwtl
test
mov
cltd
pop
xor
stos
xchg
pop
rcll
shll
cmc
jbe
jo
cmpsb
mov
ret
mov
add
jb
xor
shll
sbb
shlb
mov
or
xchg
icebp
pop
filds
scas
inc
pop
pop
pop
add
mov
add
pop
push
add
repz
fdiv
mov
dec
cwtl
ret
subl
cmc
jo
shll
mov
add
mov
fdiv
je
sbb
dec
repnz
into
mov
jecxz
push
stos
in
adc
push
mov
sbb
dec
insl
jmp
or
lods
inc
out
stos
mov
mov
mov
xor
scas
fcoms
ret
aam
cmpsl
rcrl
ficoml
dec
adc
mov
idivb
aad
rol
mov
fbstp
mov
fdivrl
ret
and
add
pop
xlat
rol
iret
leave
js
jo
cmpsb
push
or
pop
mov
imul
aam
leave
xchg
test
jo
repnz
dec
hlt
sti
pop
mov
shr
test
inc
rcll
vpshrdd
or
mov
in
pop
sbb
cmc
repz
lock
or
daa
mov
fs
lret
xor
mov
ret
or
cmp
fwait
adc
mov
or
lock
adc
push
mov
and
pop
cli
xchg
mov
push
push
mov
cwtl
fcomi
jecxz
sub
mov
js
mov
out
rol
enter
inc
cmp
mov
push
push
roll
movsl
leave
jg
cmc
ret
enter
mov
mov
inc
fldt
push
jbe
leave
push
stos
std
cmp
push
mov
mov
xchg
push
inc
jmp
in
adc
fsubr
inc
cs
shll
push
scas
mov
xlat
mov
mov
push
push
or
mov
push
leave
movb
dec
shlb
inc
cltd
push
or
iret
dec
or
xchg
mov
daa
add
addr16
mov
and
push
mov
repz
mov
fstl
mov
or
xor
cltd
xchg
cmc
test
lods
xor
inc
push
or
inc
aad
push
push
push
mov
loop
orb
sbb
inc
rcll
pop
sub
lods
mov
shll
add
xor
ret
loop
xchg
add
ror
stc
xchg
sub
shrl
xchg
loop
and
stos
jg
push
sub
loope
jae
mov
pop
test
or
xlat
cli
jecxz
xchg
into
les
mov
lods
mov
mov
in
into
adc
jp
std
sahf
jecxz
xchg
into
les
mov
inc
enter
sub
jge
jg
push
rol
enter
ret
mov
int
mov
aas
pop
jmp
leave
cmp
dec
gs
mov
xor
fisttps
jecxz
xchg
adc
or
aad
dec
sahf
loop
jae
imulb
call
mov
sarl
lock
xchg
xchg
mov
add
clc
addl
aaa
or
into
loope
pushl
xchg
test
leave
lret
or
mov
cmp
xor
xchg
jecxz
aad
test
sub
clc
push
inc
mov
hlt
jmp
pop
insl
jne
xchg
xor
test
sbb
aas
testb
stos
or
mov
test
push
jbe
aad
sbbb
sub
test
xor
jmp
rol
lret
jmp
lds
outsl
add
push
xchg
inc
loop
lock
push
rolb
or
xor
mov
dec
sbb
jmp
mov
inc
add
repz
adc
pushf
mov
and
scas
sti
push
pop
out
scas
cwtl
inc
xor
sub
int
aam
lret
pop
pop
stos
adcl
sub
loope
mov
mov
scas
mov
stos
dec
and
fistl
sbb
repz
shll
and
jecxz
fdivrs
fyl2x
inc
mov
lds
imul
aaa
scas
int
dec
cmc
sbb
lret
xchg
xchg
in
mov
xchg
arpl
inc
and
out
mov
shl
push
sbb
decl
add
mov
rdpmc
sahf
pop
xchg
add
xchg
pushw
setg
and
loope
jge
pop
mov
aas
add
jp
stc
repnz
movsl
out
jno
in
sti
add
and
fsub
int
nop
int
cmpsl
jnp
sub
xchg
jmp
sub
mov
popl
addr16
pop
inc
roll
fsubr
int
dec
je
pop
or
xor
fnstenv
fidivl
pop
roll
into
negl
cmp
mov
push
nop
xchg
push
fstpt
xchg
pop
inc
mov
sub
sbb
mov
cmp
rcrb
lret
and
add
cmp
fmul
fcompl
pop
xchg
icebp
mov
pop
dec
fistpl
inc
mov
push
out
stos
adc
mov
inc
mov
mov
mov
hlt
push
pop
iret
add
push
scas
mov
mov
sbb
mov
push
bound
inc
daa
adc
test
arpl
mov
ljmp
dec
add
iret
std
leave
imul
lods
inc
shll
sub
test
pop
push
movzwl
popa
jl
mov
fidivrs
sub
and
mov
mov
cmp
fnsave
xchg
sahf
mov
cmp
sub
push
or
xor
pusha
jg
int
sub
ds
mov
add
or
in
adc
ja
inc
xchg
lcall
push
mov
jns
pop
stos
jmp
into
es
push
inc
lret
add
gs
int3
mov
test
test
movsb
movsl
mov
fstps
jp
ljmp
lods
mov
mov
insl
add
mov
dec
fcmove
mov
js
mov
push
leave
ss
ds
mov
mov
xchg
lret
fmuls
push
dec
jecxz
mov
mov
jmp
stos
fsubr
repz
xlat
and
ds
fdivrs
push
dec
fnstenv
dec
or
add
mov
and
jnp
mov
cli
movsb
and
stos
in
mov
jecxz
xor
sahf
ja
clc
jbe
in
xchg
ds
lds
dec
push
push
or
xchg
int
or
mov
add
es
mov
xor
inc
push
lds
or
dec
inc
cmp
loop
insl
sub
test
dec
xor
cmp
mov
jbe
jmp
std
mov
mov
dec
dec
mov
add
mov
xchg
test
sub
sub
lret
add
leave
out
inc
xchg
int
push
push
mov
jns
imul
add
push
dec
fmul
outsb
stos
push
xor
int
adc
add
pop
push
adc
and
xlat
out
pop
and
pushf
clc
addl
dec
das
lret
mov
insl
push
in
add
out
pop
dec
add
loopne
aam
lock
andl
movb
or
int
mov
push
dec
jecxz
ret
test
dec
stos
fadds
loopne
cmp
arpl
rol
push
adc
es
jmp
movsb
xor
sbb
ljmp
ret
incl
xor
xor
test
and
add
popa
push
mov
jb
or
pop
inc
leave
sbb
or
fsts
push
dec
and
xchg
sbb
push
cmp
stos
ret
imul
pop
jb
nop
loop
sbb
mov
shr
or
mov
pop
xor
repz
or
dec
sahf
imul
mov
cli
outsb
sti
add
jns
push
lods
pop
sti
stos
movsb
sub
test
popf
inc
cmpsb
bound
scas
mov
xor
push
stos
mov
mov
pusha
popf
aas
xchg
xchg
xor
stos
mov
cmpsb
adc
rclb
add
enter
icebp
es
fistpl
das
lds
dec
gs
cmp
sub
cwtl
xlat
rorb
into
test
mov
jo
xor
repz
pop
or
cmpxchg8b
dec
push
aaa
pop
jp
enter
mov
insl
lods
insb
and
pop
pop
pop
pop
daa
push
shl
mov
xchg
xchg
ljmp
je
mov
fisttpl
add
loop
test
scas
mov
fmulp
mov
inc
movsl
sbb
into
inc
push
xchg
pop
cwtl
mov
xchg
sbb
insl
aad
and
fdivrs
sbb
fistpl
mov
test
lcall
aas
scas
dec
ret
jg
icebp
popf
inc
mov
test
shl
in
mov
cltd
mov
lock
rcrl
jmp
aas
fsubr
iret
test
dec
test
lret
addl
cmp
xor
jge
in
imul
mov
pusha
shll
jo
fadds
jle
clc
call
xlat
xchg
out
push
dec
pop
rcrl
loope
cmpsb
jbe
inc
push
jo
mov
sbb
jne
cmp
shll
aad
in
mov
push
test
popf
jae
cltd
adc
sbb
pop
adc
pushf
bound
fnstenv
les
fldt
jp
ret
xor
lea
cmc
xchg
enter
lock
jae
mov
dec
and
xlat
add
adc
cmp
xchg
scas
jg
jb
pop
test
into
mov
xchg
pop
aas
pop
enter
xchg
dec
dec
jmp
dec
cli
dec
lods
dec
dec
or
xchg
adc
into
mov
mov
cmpb
mov
xor
mov
arpl
test
test
sbbl
imul
push
sub
jnp
cmp
mov
jns
xchg
sahf
out
scas
xchg
xor
mov
jnp
cmpsl
pushf
ret
sub
adc
cld
stos
cmp
mov
andb
call
cmp
lret
popa
shll
call
jmp
jl
xor
jae
mov
js
add
dec
into
dec
pusha
arpl
loopne
je
bound
leave
jb
push
shll
inc
in
add
dec
dec
ret
ss
out
adc
inc
scas
xchg
inc
call
fcmovnu
leave
stos
add
stos
hlt
cmpl
lds
mov
iret
xor
push
movsb
xchg
pop
sbb
lret
mov
mov
jno
jne
mov
or
and
mov
lods
mov
mov
xchg
xor
lea
jmp
repnz
jle
lret
lret
adc
push
stos
xchg
mov
dec
jno
xor
test
or
adc
scas
daa
popf
shll
cld
xchg
repz
imul
push
mov
shl
call
sarl
jb
loopne
imul
dec
leave
push
xchg
stc
or
popl
fnsave
lahf
push
shll
jge
push
push
push
subl
cmpsl
mov
cltd
dec
jb
push
adc
sbb
sbb
mov
cmc
stos
dec
jg
in
lds
test
shl
dec
mov
loopne
ret
fcomp
testb
call
shrl
jne
mov
cmpb
jns
mov
adc
std
and
aam
in
loope
dec
cmc
enter
gs
inc
and
sbb
shr
mov
int
lock
sub
int3
aad
std
push
dec
cmc
iret
shlb
xchg
mov
dec
mov
dec
cmc
rcll
shl
divl
inc
flds
call
and
aam
in
fxch
divl
or
call
jecxz
aad
stc
dec
divb
test
outsb
jge
inc
rcl
xchg
mov
mov
lock
scas
ret
rcr
or
mov
cwtl
mov
out
cmpsb
or
pop
inc
aas
ret
test
data16
sub
sbb
test
jmp
call
add
jecxz
cld
fstps
mov
add
jmp
out
dec
mov
add
add
push
int3
jo
leave
or
repnz
sar
pop
push
inc
xor
mov
pop
fsubrs
int
aaa
repnz
sbb
adc
shrb
scas
mov
test
ret
xlat
out
push
rol
repnz
adc
ret
mov
out
inc
dec
lock
dec
mov
arpl
xor
xadd
push
jecxz
fxch
mov
repnz
imul
inc
dec
xor
mov
sub
ret
mov
add
rcrl
imul
int
and
mov
mov
imul
dec
aad
idivl
fistl
add
test
stos
popa
mov
movb
add
push
stc
inc
ret
hlt
imul
pop
sub
shrl
popa
or
jl
sbb
jmp
mov
sbb
test
push
jb
sbb
push
xor
inc
xor
mov
mov
stc
mov
pop
insb
fdivp
iret
xor
imul
mov
jle
fs
fdivrl
sub
mov
pop
inc
jle
popa
mov
ljmp
lds
sub
xchg
test
out
dec
pusha
repnz
cli
pop
idivl
adc
scas
jp
sub
inc
xlat
or
or
scas
das
add
stc
jmp
filds
dec
shl
or
jae
addr16
inc
xchg
nop
jg
mov
in
adc
cltd
mov
sbb
jecxz
shlb
test
shll
jg
mov
pop
mov
pop
add
daa
pop
mov
movsl
test
fisubs
cli
adc
xor
and
xchg
adc
mov
xchg
add
pop
and
shrl
adc
xchg
pop
daa
scas
pop
shll
lock
je
sbb
in
ret
push
xchg
es
shll
fstpl
jle
shrb
dec
test
pop
test
mov
mov
shr
imul
mov
jb
rol
insb
roll
cmc
pop
outsb
test
sbb
sbb
mov
inc
jo
iret
xorb
mov
repnz
xor
into
ret
or
imul
out
add
xlat
ja
jno
sbb
cmc
push
jmp
jnp
sub
inc
xor
mov
or
cs
popf
pmaddwd
jnp
and
mov
das
add
daa
cmc
nop
test
cmpsw
test
stos
jb
rcrl
sbbb
pop
mov
or
dec
insb
out
rcl
push
sub
nop
mov
add
in
arpl
les
mov
insl
gs
dec
cltd
mov
or
jne
cmc
cmp
mov
or
pusha
xor
inc
sub
push
fabs
mov
xchg
mov
ret
in
mov
cltd
loope
xchg
add
push
xchg
cmp
rcll
sub
scas
adc
loopne
cmp
shll
rcl
sub
dec
rcrl
sub
dec
cwtl
xchg
add
push
enter
mov
out
xchg
xor
fistl
test
inc
inc
xchg
filds
lds
jbe
inc
mov
nop
fcmovnbe
add
les
dec
xor
or
mov
add
in
adc
ror
fimull
icebp
xchg
xor
sbb
mov
and
jmp
xor
push
test
and
aam
and
and
aaa
mov
out
fsub
xor
mov
dec
test
add
xor
and
add
mov
test
sbb
mov
mov
shll
int3
arpl
jo
mov
repz
sub
xrelease
add
ss
jno
push
push
stos
lea
test
aaa
jne
rol
rcll
mov
shrl
fmuls
in
jns
repz
add
int
dec
dec
test
fcoml
in
popf
nop
cmpb
jmp
cltd
lock
ss
fnstenv
xlat
shrb
lcall
test
hlt
popf
sti
mov
shrb
inc
cli
ss
sub
rorb
int
test
jg
jbe
aaa
gs
and
jb
test
cmp
lock
mov
hlt
mov
mov
mov
dec
stos
shll
into
dec
int
stos
into
pop
popa
add
sbb
mov
and
sbb
add
add
dec
mov
test
push
sub
push
daa
xchg
in
out
mov
sbb
xor
lds
mov
mov
pop
mov
sahf
or
jmp
aad
push
andl
rclb
and
fwait
out
xor
hlt
jb
jo
in
xchg
mov
iret
inc
ja
pop
sbb
repnz
jmp
femms
outsb
lret
mov
int
pop
mov
cmc
mov
pextrw
or
mov
mul
sti
aad
jg
mov
das
sbb
fsubrs
jns
push
push
or
ret
add
movsb
rcll
inc
repnz
outsb
jae
fxtract
sti
rclb
cmp
adc
or
pop
push
jmp
sub
mov
adc
add
imul
dec
test
sarl
sub
sub
cld
dec
icebp
lret
inc
mov
mov
cmc
adc
int3
pusha
pop
js
jmp
add
xchg
xchg
stc
jns
pop
mov
imul
cmp
jo
mov
scas
rorl
in
or
test
out
push
cmpsb
frstor
mov
sbb
cmp
cmpsb
lcall
xchg
daa
inc
pop
out
push
leave
cltd
icebp
lds
in
sbb
aad
ja
into
popf
int3
out
les
mov
fsubl
lods
int3
add
dec
outsl
shll
xchg
jl
mov
sub
es
mov
inc
fidivrl
mov
mov
outsl
mov
jg
pop
adc
js
les
pop
mov
push
inc
mulb
jle
push
repz
ret
xor
shl
mov
xchg
sbbl
testl
adc
insl
and
test
pop
add
enter
cmp
dec
mov
pop
int3
push
call
test
cmp
dec
gs
ss
aaa
cmp
stc
repz
cmc
mov
xor
push
and
cltd
sbb
inc
sub
mov
scas
jae
dec
sbb
sub
mov
sbb
jecxz
rcrl
xchg
jle
pusha
push
push
push
fcoml
out
add
pop
fildl
in
jbe
cmc
xchg
mov
in
xchg
sub
dec
int
sub
inc
test
call
scas
hlt
call
scas
jne
repnz
sbb
cmc
dec
dec
repnz
test
repz
int3
int
inc
dec
rep
fisubrs
sbb
repz
cmp
jno
frstor
pop
mov
adc
dec
or
xchg
xor
xor
lret
test
mov
sub
dec
sub
add
fstpl
pop
adc
in
repz
add
sub
jecxz
dec
pusha
mov
movsl
jae
in
rorb
jns
adc
mov
les
or
test
int
mov
jae
test
es
aaa
inc
sub
les
dec
lock
sbb
call
iret
out
rcll
inc
test
mov
daa
mov
or
mov
into
ss
mov
or
rcl
lds
lea
cltd
out
in
rcl
push
pop
jb
rorl
mov
lret
xor
negb
rolb
mov
loope
jmp
inc
inc
stc
lods
into
rcr
cmc
shrl
fnstenv
adc
jo
iret
call
clc
int3
jae
in
ret
mov
and
mov
pop
pop
push
enter
jecxz
push
or
lret
lock
adc
jmp
xor
daa
or
ret
imul
sbb
pushf
xor
cmc
test
push
push
test
sbb
test
xchg
sarl
add
push
shrb
out
lds
popf
and
lods
rcr
lock
flds
loope
shlb
or
lds
les
dec
rolb
mov
jle
stc
sub
or
pop
aas
mov
push
test
ret
scas
ja
fadds
stc
in
in
in
fmuls
xor
dec
sbb
aad
rcr
rclb
daa
adc
add
mov
jmp
sbb
daa
dec
xchg
push
inc
aas
push
in
in
aad
dec
push
icebp
lock
add
rcll
inc
shr
jl
scas
dec
mov
pushf
fisttpll
test
add
xchg
repz
push
xchg
pop
jmp
pop
shlb
jne
rorl
pusha
js
stos
mov
into
aad
repnz
iret
rcrl
push
sahf
loope
stc
or
ljmp
ljmp
xchg
xchg
mov
or
adc
ret
paddq
lock
in
mov
clc
movsl
int3
cmpsb
cltd
add
lahf
pushf
ja
sub
sub
add
and
mov
dec
inc
add
cli
or
dec
in
mov
ror
loope
or
push
mov
adc
mov
xor
in
add
mov
cmp
ficompl
sarl
test
into
in
out
cmp
and
mov
mov
xor
mov
addb
jg
push
mov
mov
jae
pop
push
aam
ljmp
pop
in
dec
jbe
lods
mov
mov
repnz
jbe
push
sbb
push
and
sarl
jb
xchg
mov
ja
out
loop
fnsave
scas
and
sbb
sbb
and
cmc
dec
mov
inc
test
cltd
shlb
jo
xorl
lahf
rorl
push
dec
mov
mov
xchg
adc
xchg
scas
sahf
shlb
xlat
inc
imul
test
fnsave
jnp
ja
add
jne
cmc
data16
lret
push
lret
sar
xor
dec
pusha
fxch
jbe
lds
mov
les
and
jb
dec
popa
add
pushf
pop
dec
xchg
or
xor
loope
outsb
jmp
lds
dec
add
je
repz
mov
roll
ror
mov
xchg
push
ljmp
sbb
cli
call
mov
pop
ficompl
push
lret
in
mov
jmp
test
ja
inc
aad
xor
or
lret
jle
xor
dec
mov
add
arpl
inc
mov
test
push
mov
inc
repnz
mov
xchg
add
sub
mov
subl
int3
int
dec
push
lock
icebp
xor
cld
mov
mov
mov
dec
jg
pop
mov
rclb
xchg
xchg
sbb
jmp
fld
paddw
test
pop
in
cs
test
mov
out
or
shr
pop
idivl
xchg
push
mov
push
add
pop
push
jg
jl
out
bound
mov
xor
imul
mov
xor
and
int
xchg
stos
adc
push
decl
in
mov
mov
add
leave
inc
out
or
mov
int3
mov
int
fsubs
adc
rorb
mov
aad
add
sbb
push
or
jmp
stos
mov
sbb
mov
jle
mov
fsubl
push
sbb
adc
fidivs
pop
sub
dec
sbb
mov
fiadds
aaa
aam
xor
dec
imul
fldl
loope
mov
sbb
push
dec
orb
aam
jno
in
outsb
jecxz
int
xchg
mov
test
negl
mov
mov
xor
cmc
jo
js
je
mov
or
or
pop
stc
add
cmp
decb
fdivrl
movsl
mov
mov
in
lock
cli
jg
xchg
sub
lret
imul
push
in
outsb
inc
stos
pop
sarl
leave
pop
cld
shl
mov
jae
test
movsb
scas
loop
cld
loope
add
cmp
lods
scas
int3
das
inc
rcrl
add
out
dec
jmp
stc
or
add
mov
cld
cmc
and
cmp
push
pop
icebp
cli
cmpsb
dec
int
les
mov
ljmp
fildl
xlat
rcr
and
inc
push
push
xor
add
mov
inc
add
jne
cmpsb
add
sub
and
sub
test
aas
push
and
mov
and
pop
push
insl
std
aad
repnz
shr
jg
mov
in
pop
cmpsb
int
leave
imul
lds
lods
xor
cmc
sbb
iret
mov
mov
repnz
lock
scas
aad
adc
cmp
jmp
scas
dec
cmp
mov
mov
jg
mov
mov
cmp
dec
mov
jmp
xor
xchg
fisttps
cmpsl
sarb
iret
xor
ret
jae
lcall
mov
mov
lahf
jmp
ja
or
push
xor
ljmp
xchg
loop
mov
ror
std
cmc
lock
jg
cmp
and
jg
repnz
mov
mov
and
into
cmp
cli
repnz
xchg
cmpsl
aad
or
loop
stos
rolb
bnd
xor
clc
xchg
or
mov
into
xor
mov
not
jmp
aam
xor
dec
test
jecxz
mov
movsb
popf
jo,pt
movb
aam
inc
ror
xor
cmp
loop
adc
xor
lret
mov
fstpt
in
ficoml
dec
iret
or
mov
lea
mov
into
outsb
dec
push
sub
mov
jns
xor
add
pop
mov
test
push
lds
mov
mov
mov
adc
stos
mov
repz
movl
in
adc
rorl
cmp
add
mov
pushf
push
xor
mov
pop
adc
or
jg
sti
ror
jecxz
repz
inc
out
adc
dec
fldl
in
jecxz
adc
aam
inc
xchg
sub
inc
ljmp
mov
push
mov
iret
dec
shrb
add
and
in
cmp
fildll
dec
sbb
xor
adc
das
xor
xor
dec
loope
sub
scas
mov
hlt
dec
mov
mov
push
test
jp
fst
loope
mov
fldenv
or
in
push
sbb
lods
inc
pop
push
jmp
dec
jae
inc
add
xor
test
xor
dec
fidivl
push
or
in
fidivrs
aam
inc
rcr
sbb
cmp
scas
lock
jbe
jp
jmp
hlt
repz
mov
das
and
insb
adc
test
push
pop
sbb
mov
and
adc
in
pushf
sub
or
cs
mov
mov
cmc
lods
movsl
adc
sub
popa
and
loop
pop
fldcw
loop
arpl
std
add
rclw
or
fadd
inc
xlat
icebp
cmp
imul
fdivs
outsl
fists
aas
lea
xor
mov
mov
stos
add
push
stc
nop
pop
jo
mov
sub
ljmp
cmp
jbe
rcrb
je
mov
inc
popf
outsb
mov
outsb
mov
fdivs
jg
adc
cmp
ds
daa
adc
lods
cmpsb
sbb
rol
testb
sahf
pop
and
adc
cld
mov
loope
mov
lds
add
fs
rorl
loopne
repz
lahf
pop
aas
insb
jecxz
shl
mov
das
or
dec
stos
in
mov
test
fadd
xchg
push
fcom
inc
out
sbb
ret
jnp
pushf
out
test
sarl
dec
push
int3
push
shl
adc
or
cmc
icebp
leave
mov
add
jno
mov
add
jp
jmp
jmp
cmp
inc
adc
out
pop
dec
add
test
and
add
in
adc
test
ror
test
notb
sbb
xchg
cmpsl
sahf
mov
test
mov
es
pushf
orb
repnz
sub
idivl
std
mov
jbe
leave
hlt
out
cmpsb
imulb
mov
repz
ja
es
sti
cmp
and
mov
leave
aam
adc
sub
movlps
mov
test
test
dec
mov
outsb
sbb
xor
and
fldt
es
cmp
aad
mov
movsb
loope
mov
rolb
push
stc
leave
adc
adc
cmpsb
mov
shr
pop
sbb
mov
add
jmp
mov
pusha
cmc
pop
mov
add
addr16
in
ja
pop
push
mov
aas
and
xor
adcl
ljmp
test
mov
cmp
roll
inc
popw
sub
xchg
sbb
mov
mov
repnz
nop
ror
icebp
sub
adc
adc
ficompl
or
aaa
add
and
sub
xchg
jmp
pop
sub
push
dec
cmc
dec
ret
jmp
lea
jge
rolb
mov
mov
fwait
out
adc
out
and
jmp
in
call
in
loop
repz
push
popa
dec
push
roll
imul
rcrl
fistl
and
inc
push
mov
mov
stc
xlat
xchg
inc
sbb
mov
mov
add
rcrb
adc
movsl
and
sbb
xor
cltd
sbb
ljmp
xor
jl
ja
aam
xor
jo
dec
std
shrl
add
jl
dec
xor
dec
mov
cmpsb
cmc
outsl
push
icebp
outsb
or
stc
int
test
je
andl
pushf
and
fnstsw
and
mov
push
data16
or
lds
xor
imulb
es
cli
jo
cmp
mov
shl
mov
xorb
shll
dec
idivb
mov
mov
jae
jge
push
lock
mov
or
cli
mov
cmpsl
mov
stos
int
xor
fnstcw
or
hlt
adc
mov
push
lods
cli
test
mov
ljmp
mov
sub
dec
mov
std
xor
mov
sub
enter
test
fwait
add
mov
fldenv
pop
sahf
inc
xor
fidivrs
adc
mov
mov
fwait
pop
jo
cmpsb
mov
aas
xor
imul
cmp
mov
pop
ret
leave
into
loope
sbb
xchg
imul
aas
xor
ret
inc
mov
mov
imul
addl
cmpl
pop
jno
rolb
dec
rcr
out
fs
xchg
fsubl
ljmp
aad
jo
in
out
es
lods
sahf
xorl
push
call
add
in
adc
adc
hlt
out
lds
push
lret
outsb
test
lcall
inc
stc
xor
xor
shlb
int
test
mov
mov
mov
lahf
addr16
fldenv
mov
iret
xor
stos
xorb
fmul
cltd
mov
and
or
jnp
leave
out
mov
push
jns
push
cltd
xor
push
xchg
lret
and
pop
push
das
mov
in
cmc
imul
cmp
ret
pushf
adc
xor
mov
fidivrs
insl
pop
adc
adcb
dec
cs
push
and
push
pop
xor
mov
xor
push
dec
ret
add
sub
call
loope
jb
mov
je
ret
sarl
push
jno
sbb
adc
scas
jo
add
inc
and
into
add
dec
adc
push
lret
enter
pop
icebp
mov
int3
divb
jnp
paddw
xchg
xor
pop
rcrl
das
lret
rcll
lock
cltd
xchg
mov
sub
add
mov
sub
cmp
mov
imull
fsts
mov
roll
add
ds
push
jns
sbb
push
push
pusha
jecxz
iret
xor
pusha
movsb
icebp
jle
mov
dec
in
or
stos
movsb
jecxz
cmp
mov
js
mov
mov
iret
add
mov
imul
sub
adc
dec
push
or
popf
lods
aam
jne
gs
leave
inc
jae
mov
ja
pushf
mov
dec
xchg
cmp
push
imul
pop
popaw
aas
addr16
sti
int3
push
and
adc
sbb
sub
sub
mov
lahf
xchg
divb
adc
jns
add
xchg
loope
clc
sub
cmp
dec
movb
lcall
add
xor
jle
test
cwtl
ret
rcrb
dec
adc
fld
and
pop
or
xchg
sarw
repnz
xor
cmp
test
add
pop
cmp
add
inc
sub
xor
insl
push
and
sub
repnz
add
add
cmc
test
mov
mov
xchg
test
dec
mov
inc
scas
shl
inc
cmpsl
mov
in
jnp
push
inc
icebp
scas
pop
jecxz
ds
mov
and
fistpl
mov
aad
std
lock
dec
jnp
imul
sbb
shr
xor
scas
adc
fnstcw
dec
mov
add
lds
rorl
shl
mov
cmpsl
jae
lods
jo
push
xchg
lret
clc
in
test
lcall
std
and
mov
fimull
jne
insl
hlt
inc
scas
or
push
and
sbb
pop
xor
add
imul
mov
out
in
sti
dec
cmp
iret
add
cmp
icebp
aam
xchg
inc
js
sti
lea
inc
dec
fwait
push
movsb
sub
ret
lea
push
ret
test
lea
and
xorb
ret
int
add
movsb
fldcw
push
aaa
jle
xor
shl
cmp
push
jbe
inc
push
imul
jno
jbe
cmp
xor
cmpsl
pop
inc
mov
andb
out
or
fucomp
adc
dec
test
dec
sarb
outsb
adc
stos
mov
mov
arpl
int
push
jns
or
mov
popa
jmp
sbb
mov
outsb
mov
or
xor
mov
cltd
mov
push
pop
outsb
and
push
outsl
popa
cs
lods
dec
cltd
sar
icebp
mov
dec
cs
pop
pop
add
movsb
lock
mov
std
or
add
adc
fldl
cmp
fsubrl
bnd
jp
sbb
cmpsl
fdecstp
dec
ret
dec
mov
mov
add
jnp
and
xor
push
fxch
cli
jb
into
xor
in
lods
lock
out
or
mov
xchg
insl
testb
stc
ret
fsubr
sbbl
movsl
jl
pop
cld
or
push
jmp
aam
xchg
shlb
xchg
sahf
outsb
test
aaa
test
mov
ja
pop
cld
std
mov
ffree
popf
mov
jg
cwtl
std
daa
in
out
xor
repz
cli
mov
insb
popa
inc
or
enter
lock
enter
sub
add
jle
jb
lret
sbb
fcomi
mov
out
aam
xor
push
rclb
and
in
pop
dec
mov
and
cld
outsl
lea
out
mov
mov
jo
sub
ret
or
lock
push
pop
xor
xchg
and
int
inc
xchg
add
and
pop
lds
ds
fsts
xlat
cmp
push
jl
fisttpl
adc
int3
adc
xlat
fadds
mov
movq
xchg
icebp
mov
int
mov
std
adc
sub
loope
inc
xor
push
mov
fs
jmp
xchg
pusha
push
inc
ljmp
xchg
mov
repz
mov
mov
stc
pop
out
sahf
in
pop
pushf
repnz
mov
add
jns
je
push
xchg
or
inc
mov
add
rcr
push
pop
push
lret
push
cli
rcr
jns
add
and
adc
shlb
jae
inc
pop
xor
cmp
push
jne
mov
pop
aad
sbb
sub
ds
icebp
pop
jo
arpl
test
je
scas
fnstcw
nop
and
sar
cmc
nop
jl
out
sar
lods
cld
icebp
jp
ret
fdivrl
mov
inc
loop
test
je
shll
call
jmp
push
test
add
loope
add
inc
pop
inc
popf
ret
jp
mov
cltd
dec
sbb
loop
xor
dec
pop
adc
rorl
aaa
es
rolb
idivl
fucomp
out
dec
jmp
jbe
lods
je
test
push
dec
jge
pop
int
or
loope
dec
popfw
stos
xlat
or
jecxz
mov
out
mov
xchg
mov
cmc
xchg
cmp
inc
mov
xor
outsb
imul
add
into
mov
dec
stos
dec
stos
cmpb
xor
lods
ss
add
mov
jbe
std
add
pop
in
pop
xor
ja
icebp
mov
cmc
xlat
xor
test
push
dec
push
dec
cs
orb
lret
push
stc
cld
mov
negl
sbbb
bnd
xchg
xor
cmp
jbe
iret
pop
or
sbb
lods
sub
push
mov
add
in
add
sarb
add
pop
pop
mov
push
into
mov
aas
std
pop
cmp
push
test
push
and
enter
jne
jb
mov
sbb
xchg
sbb
sahf
out
or
arpl
scas
cli
inc
mov
cmp
or
and
repz
gs
inc
roll
insb
cs
test
inc
mov
dec
jg
test
push
add
dec
pop
sbb
fildl
sub
xchg
inc
lret
leave
movsl
popf
hlt
mov
mov
test
mov
jl
fistpl
or
mov
cmp
pusha
mov
mov
imul
inc
xor
add
gs
pop
cli
inc
push
inc
negb
or
xchg
leave
ret
adc
sub
in
fnsave
jno
test
movsb
daa
xchg
push
and
mov
sub
jmp
gs
in
lock
mov
shll
add
xor
cmp
loop
xchg
jge
sub
sahf
pop
inc
xlat
lret
cmc
push
mov
inc
push
daa
pop
repnz
test
and
xor
dec
rcrb
testl
mov
aam
repnz
scas
and
movsl
shll
jns
idivl
sbbl
push
add
clc
ret
stc
dec
jnp
dec
loope
or
fnsave
or
lea
or
ret
cmp
mov
add
inc
lods
mov
jecxz
rorl
sub
push
sahf
je
subl
mov
jmp
ret
gs
push
mov
add
cltd
data16
fsubr
and
lock
adc
movsb
das
xchg
push
ja
jp
or
mov
testl
inc
addr16
jp
inc
jmp
sbb
sub
ss
xlat
and
jmp
mov
call
and
mov
xchg
or
test
mov
dec
jmp
movd
adc
cmpsl
loopne
xlat
outsb
nop
iret
jmp
cmp
and
dec
mov
push
shrb
jmp
hlt
cmp
iret
cltd
icebp
or
sahf
cld
add
mov
mov
jecxz
sbb
and
dec
sub
into
sub
dec
aam
xor
add
dec
ret
negb
lds
xchg
gs
shrb
or
stos
push
js
jl
or
or
int
icebp
rdrand
outsl
sub
out
add
xor
shrl
add
rcrl
inc
pop
lods
and
js
dec
inc
addr16
cmc
sbb
int
ficompl
scas
ss
lea
cmp
push
fmull
ja
sub
and
cmp
add
push
call
cmc
outsb
mov
shll
or
jecxz
dec
mov
mov
pusha
popa
and
fldenv
mov
enter
std
push
loop
inc
cltd
and
cmpsb
cwtl
adc
mov
push
stc
jne
shlb
adc
xor
fisttpl
outsb
str
mov
fcmovne
xor
adc
leave
cmp
mov
sub
push
mov
int
and
fstpl
fwait
adc
enter
imul
bound
adc
aas
sbb
ret
mov
aad
xchg
lods
cli
test
mov
out
out
prefetch
or
xorb
pusha
push
pop
and
inc
pusha
loope
cmp
cmp
jne
add
and
daa
loopne
push
or
dec
clc
jbe
aaa
pop
ds
mov
sub
bnd
and
call
test
jns
jo
shrl
xor
jns
int3
sub
sbb
popa
shrl
sbb
push
shl
and
scas
add
cli
mov
hlt
call
scas
push
inc
fildll
mov
mov
sbb
mov
fnsave
icebp
fsqrt
add
loop
ret
jb
jns
into
outsb
cmp
std
pushl
jle
cmp
cmp
aam
dec
out
push
out
mov
fnstcw
movb
int
lock
icebp
push
pop
pop
sbbl
iret
ror
lret
dec
jae
fwait
sahf
xchg
adc
xor
cmp
call
add
andl
pop
imul
popf
and
out
jg
cltd
xor
jmp
in
ret
sbb
lds
loope
cwtl
sbb
call
push
jae
mov
shr
sbb
gs
add
stos
jb
xchg
dec
or
shr
and
arpl
rcrb
aam
add
mov
cmp
cli
sbbl
xor
mov
jo
xchg
dec
mov
repz
or
dec
repz
lahf
push
sti
lcall
cmpsb
pop
or
enter
dec
dec
mov
adc
rcll
fxch
jne
mov
jl
rcl
push
add
idiv
in
adc
bnd
mov
xor
icebp
jno
and
add
into
xor
sub
test
inc
inc
sti
mov
outsl
jmp
and
dec
push
fsubrs
movsb
dec
jns
pop
mov
dec
and
sbb
jae
sbb
adc
icebp
jmp
roll
mov
jb
mov
inc
pop
jbe
mov
dec
and
and
mov
inc
divb
add
mov
cwtl
dec
iret
paddw
xchg
or
lock
icebp
mov
pusha
stos
cmp
aas
cmc
div
mov
rcrb
mov
dec
jmp
imul
cmp
je
jg
aaa
adcb
out
rcll
je
cmpsb
xor
in
xchg
inc
iret
push
lret
xor
fwait
aas
lret
xchg
cmp
jo
dec
das
and
jno
fwait
cmpsl
outsl
addr16
mov
dec
xchg
mov
iret
mov
add
mov
or
or
jbe
int
xchg
cli
mov
aaa
dec
and
dec
push
lret
jmp
addl
pop
xchg
sub
mov
pop
adc
gs
rorb
mov
ljmp
add
add
sbb
xlat
sbb
fs
out
xchg
xchg
int
lea
sbb
ljmp
inc
jno
pop
sbb
mov
xchg
divb
mov
ljmp
mov
fcmovne
fldt
xor
ret
aad
in
or
sbbl
xchg
sbb
sbb
movsb
or
aad
ret
imul
jmp
mov
and
rcll
pop
mov
sti
scas
or
test
cltd
sbb
mov
sbbl
pop
cmp
cld
xor
jb
jno
mov
cmpl
cmp
xor
adc
imul
test
cli
mov
aas
mov
mov
add
add
lds
and
cmp
pop
ja
sbb
rcr
sub
mov
jge
lgdtl
lret
push
push
dec
dec
adc
jmp
xor
imul
sub
int
and
fildl
sbb
dec
mov
push
and
sub
push
stc
test
push
rcrb
jae
lods
adc
in
or
aad
iret
push
jge
mov
outsl
and
push
shrl
aaa
dec
pop
ffree
mov
or
and
jmp
dec
movsl
xchg
negb
out
and
repz
and
pop
and
pusha
pop
push
push
in
add
in
jmp
js
push
mov
daa
das
insl
shlb
test
out
push
stos
lods
mov
dec
pop
add
xor
sub
lret
push
push
add
inc
sbb
jne
push
add
push
mov
xchg
jo
pop
sbbl
sub
xor
fstps
dec
aas
aam
sub
aam
std
mov
mov
stc
shlb
pusha
mov
push
bound
jg
or
repz
pop
mov
test
cs
test
xor
sub
ljmp
fisttpl
dec
in
sub
movsl
jne
stos
pop
xor
sbb
or
lock
out
jne
pop
stc
pop
pop
addr16
lds
sbb
xor
add
clc
and
cmpsb
push
push
loope
jnp
enter
add
rcl
clc
xorl
loope
push
xor
iret
pushf
mov
mov
fidivl
mov
hlt
sarl
and
nop
gs
sti
or
pop
add
jmp
repnz
ret
ret
xchg
pop
movsl
cmp
push
stos
jmp
mov
hlt
cmpsl
orb
popa
clc
xor
sub
pop
lods
adc
aaa
pop
int
sub
push
imul
aam
mov
and
xor
gs
cmp
sbbb
and
sub
stos
pop
pop
cmpsl
push
xlat
loop
repnz
loope
add
ret
lods
cmp
jge
mov
and
sub
femms
add
loop
clc
popa
int
mov
loope
stos
lret
jnp
fldcw
gs
dec
or
scas
pop
cs
dec
add
and
test
mov
cmpsb
cwtl
jns
sub
xchg
mov
jne
test
enter
out
test
jl
push
incb
sub
push
test
sub
mov
scas
jl
inc
mov
push
cmp
push
xor
rcl
shlb
sub
loope
loopne
fidivrl
into
mov
add
not
push
rorb
fdiv
mov
xchg
xchg
cltd
test
enter
or
dec
in
repnz
jmp
xor
sahf
bound
mov
test
xchg
nop
call
add
lea
add
sub
and
xor
lret
inc
int3
pop
cmp
push
mov
scas
mov
and
or
push
jmp
lret
dec
fcmovb
adc
adc
xchg
xor
push
add
lock
fbstp
mov
mov
notb
push
out
adc
fldenv
mov
call
orl
aad
imul
xor
jo
leave
lret
inc
lds
mov
mov
push
ret
rol
add
mov
and
jae
scas
add
mov
test
cmp
test
gs
xor
daa
or
std
or
dec
xlat
mov
sub
cs
mov
icebp
mov
shl
fidivl
xor
lret
jns
lahf
or
mov
ret
and
fiaddl
xor
movb
lret
jns
pop
sub
call
lds
test
fst
test
xor
sbb
jmp
dec
pop
dec
leave
cmp
orl
jns
jb
ja
icebp
push
pop
mov
sarb
fucomi
and
or
jae
daa
clc
mov
sarl
sbb
mov
arpl
dec
mov
cmp
jg
xchg
and
fs
inc
ljmp
inc
jmp
cli
sbb
mov
xchg
fmulp
mov
lcall
cmpsl
leave
mov
movsl
and
lds
iret
rol
mov
insb
or
mov
test
aam
dec
icebp
loop
xor
mov
jb
jne
fldcw
js
lret
adc
push
sbb
mov
loope
je
roll
leave
aas
imul
jmp
daa
cmp
aas
sbb
and
pop
into
xchg
movsb
leave
pop
arpl
in
std
shrb
arpl
loop
shlb
push
ds
repz
push
imul
mov
push
jb
pop
push
repz
aaa
int3
jbe
mov
mov
sub
psraw
cmc
leave
fisttpll
cs
push
add
cmp
iret
add
leave
rorl
ret
sarb
outsl
add
stc
xchg
sbb
fmuls
or
mov
loopne
ret
gs
call
inc
gs
cltd
mov
cmpsb
dec
mov
or
jge
jge
mov
int3
sarl
jae
jo
mov
mov
mov
roll
jae
jmp
cld
jne
sbb
rorl
rcrb
ficoms
lret
adc
aad
testl
mov
clc
pop
sub
iret
shr
mov
test
aad
jmp
adc
add
add
in
stos
pop
and
lds
push
lret
mov
iret
mov
and
icebp
cmp
jmp
mov
imulb
lock
repz
inc
inc
mov
xor
repz
inc
adc
mov
das
and
mov
int
mov
pop
test
mov
mov
or
jg
xchg
inc
jecxz
loopne
fistpl
pop
dec
xor
sub
push
xor
mov
mov
dec
and
imul
mov
in
inc
push
jp
or
mov
or
fdivrp
mov
enter
mov
mov
adc
outsb
aad
inc
jbe
inc
mov
cmp
test
cltd
in
push
mov
xor
pop
cmp
loopne
lods
loope
xor
icebp
add
iret
mov
push
jb
fmull
leave
ljmp
sbb
leave
repz
push
inc
call
scas
mov
leave
lea
xchg
mov
mov
mov
ficoml
leave
sub
popf
jg
cli
cmpb
sbb
leave
stos
insl
insl
inc
stos
mov
inc
cmpsl
adc
test
out
cld
lret
xor
sbb
cli
sub
cs
out
clc
push
xchg
pop
add
aaa
adc
xchg
dec
mov
leave
fcom
inc
xor
jg
imul
les
icebp
pop
mull
outsl
jno
push
mov
adc
sti
or
add
je
and
mov
mov
enter
xchg
and
gs
or
into
inc
mov
mov
push
xchg
ds
jb
outsl
xor
pop
into
jne
insl
addb
fisttps
icebp
push
pop
xor
iret
inc
nop
and
jno
push
lret
push
push
mov
sub
push
add
icebp
pop
arpl
or
or
mov
ficomps
lret
push
mov
pop
jbe
leave
sar
outsb
jl
push
sarl
inc
xor
fldenv
fstl
mov
and
test
pushf
mov
ret
subl
sbb
popf
aad
lahf
repz
or
cmp
or
ja
mov
ja
enter
cmc
lods
sahf
cmp
and
mov
movsl
push
cmc
xor
push
jmp
sfence
and
test
icebp
cmpsl
cmpsl
aas
addr16
iret
cli
mov
imul
ds
test
mov
in
cmp
aam
jno
loop
or
cli
test
es
int3
mov
clc
outsb
sub
fdivp
and
fadds
fistpll
aas
push
jmp
rclb
out
test
into
or
jg
push
ret
jl
jns
xor
inc
inc
add
stc
sbb
ffreep
fcomps
ret
jo
mov
push
or
lcall
cli
mov
mov
lods
iret
and
mov
xor
sub
loope
test
lods
rolb
xlat
dec
add
mov
roll
mov
jbe
outsl
xchg
out
ret
adc
xor
es
jno
mov
es
jo
cmp
xchg
ss
mov
int3
inc
add
pop
inc
jnp
mov
xor
test
inc
push
fdivrs
in
setae
test
call
push
xor
fstl
std
int
dec
aad
inc
inc
icebp
flds
aaa
rclb
jns
aaa
pop
xor
call
sub
les
lret
and
outsb
mov
repz
adc
add
mov
leave
sbb
add
sarl
push
or
lds
cmp
pusha
lock
pop
sbb
stos
add
ret
mov
cmp
bound
ret
shl
stc
andl
stc
mov
ret
and
mov
xchg
adc
xorl
sti
adc
fdivrl
mov
xchg
cmp
add
xchg
mov
xchg
fld
out
fimull
push
ret
nop
sti
ljmp
mov
ds
push
je
pop
dec
add
sti
xchg
jno
in
dec
pusha
inc
mov
arpl
outsb
and
movsb
add
ja
icebp
imulb
sub
dec
pusha
outsb
pushf
aaa
cmp
jmp
sahf
mov
repz
cmc
cmpsb
add
jb
sbbl
jle
mov
or
repz
aad
repnz
daa
dec
fsubrp
add
filds
xchg
rorl
mov
mov
lds
dec
dec
rol
dec
sbb
jmp
fcmovnb
push
addl
mov
dec
out
mov
dec
test
aad
shl
inc
cmpb
call
and
cmpsb
pop
mov
mov
mov
bound
xchg
xor
sarb
sub
sarl
rclb
andl
inc
lcall
fnstcw
filds
mov
or
jb
mov
sub
or
test
scas
out
push
jecxz
cmp
mov
add
sub
and
or
jbe
cmpsb
and
xor
push
add
pop
popa
jb
sbb
dec
push
lock
xor
pusha
adc
test
jb
jmp
adc
mov
xchg
cltd
test
rolb
push
jno
jns
inc
mov
clc
neg
adc
pop
imul
adc
in
push
bsr
js
dec
loop
pop
aad
or
aam
push
cmpsb
out
push
test
pop
dec
cmp
xor
pop
xor
pop
call
loope
push
mov
mov
loopne
sbb
ror
shl
mov
jbe
cli
cltd
cmp
add
leave
adc
lahf
and
mov
push
lods
ror
leave
push
lock
add
push
sbb
shr
int
mov
add
pop
push
mov
inc
loop
aad
insb
lods
test
mov
pop
inc
or
loope
push
fdiv
int
fstl
pop
adc
and
shll
iret
rclb
mov
cmp
jbe
test
adc
jno
leave
test
std
mov
cli
sbbl
popf
sub
dec
pop
js
jb
dec
or
lock
mov
ficomps
cmp
gs
push
testl
mov
ja
fs
adc
add
in
ret
push
xor
mov
mov
add
xchg
mov
nop
aas
mov
jo
cli
mov
and
xor
mov
inc
xchg
jmp
mov
mov
sub
jle
pop
in
mov
sbb
mov
jb
and
out
test
sub
add
or
xchg
inc
or
adc
inc
mov
xor
push
push
dec
sbb
popa
xor
test
nop
dec
cli
lods
and
cmpsl
and
popl
int
mov
fnstenv
inc
cmovnp
and
inc
adc
sbb
das
cli
sub
out
adc
lret
and
ja
inc
ss
sar
imul
sbb
into
xor
and
xchg
popf
xor
loope
xor
push
lds
scas
shll
sbb
aad
sub
call
jp
xor
add
aad
imul
fwait
sbb
cmc
adc
rorb
lock
sbb
jae
out
mov
xor
mov
or
fnsave
fidivl
xor
fucomi
mov
jno
ficomps
leave
sub
in
pop
sub
xchg
or
mov
rol
ljmp
sub
sub
lds
and
sbb
mov
or
push
imul
dec
add
rolb
data16
out
mov
into
lss
inc
dec
jecxz
or
insb
aas
cmp
and
and
xor
dec
cmovns
icebp
in
sarl
shll
xor
test
push
fimuls
popa
idiv
mov
pushf
dec
xor
movl
sub
xor
rcl
fdivs
mov
sub
sbb
loope
jb
mov
jecxz
loop
addr16
fstl
mov
jg
inc
ficompl
jecxz
mov
dec
inc
fstl
rcrl
or
sarb
add
fldenv
hlt
rcll
pop
add
or
outsb
lret
std
mov
les
les
in
shl
loope
inc
in
jo
jo
nop
in
sti
scas
shlb
ficoms
dec
stos
ret
sbb
test
push
push
icebp
dec
inc
push
push
push
xor
aas
mov
add
add
sbb
loop
mov
sbb
and
sbb
mov
cli
jne
repnz
addl
ljmp
aad
pop
sbb
inc
lcall
sub
loop
lods
pop
jns
xchg
les
enter
mov
hlt
adc
cmp
cmpl
add
cli
les
cs
mov
mov
sub
pop
insl
iret
and
jns
test
push
cld
dec
ja
mov
push
shll
sub
lret
imul
faddp
into
les
arpl
add
out
or
sbb
jle
sbb
pop
lahf
jno
fbstp
js
rolb
sbb
popa
in
mov
repnz
mov
sbb
xchg
xor
nop
mov
stos
aam
mov
test
lret
xor
mov
or
lds
and
push
pop
jns
mov
sub
xor
mov
clc
jg
sub
bound
add
ret
test
inc
arpl
push
fnstsw
mov
sub
mov
mov
ss
and
cmp
shrl
jns
add
dec
test
jle
lock
mov
cld
mov
int
add
ret
dec
pop
aaa
test
aad
xchg
add
ret
je
dec
in
inc
fsts
icebp
ffree
and
bound
shlb
lret
stc
leave
aaa
rcrb
int3
das
adcl
inc
mov
aad
mov
jne
mov
imul
nop
repnz
roll
lods
movsl
mov
or
pop
push
ret
ljmp
mov
sbb
mov
aad
and
inc
cmp
mov
cmc
cltd
xor
aad
or
enter
dec
rol
ror
add
pop
push
shll
jle
mov
mov
int3
mov
jae
mov
enter
int
icebp
iret
insb
mov
push
into
insl
mov
xor
and
clc
sbb
js
jmp
ljmpw
dec
sbb
jno
icebp
dec
es
jns
scas
cmp
dec
pop
lds
sbb
mov
ret
gs
pop
jbe
dec
ret
adc
cwtl
lock
add
pop
mov
pop
ret
icebp
sbb
push
fiadds
and
dec
xor
mov
push
aaa
mov
sbb
out
xor
xor
gs
adc
mov
mov
mov
push
call
insl
inc
jecxz
into
ret
jge
mov
std
shll
or
cs
orb
or
addr16
xor
inc
push
das
mov
xchg
into
ret
pushf
sbb
cld
lar
repnz
or
adc
add
add
repnz
daa
iret
iret
cmc
fnstenv
sar
lret
ds
dec
push
cli
jae
loop
cltd
cmp
ret
jbe
ljmp
ret
icebp
jns
add
dec
ret
test
hlt
jmp
loopne
cmp
outsb
fxch
dec
arpl
stos
mov
and
push
cltd
xor
push
cltd
pop
push
mov
push
or
aam
aaa
out
cmp
xorl
nop
or
add
sbb
gs
cmp
psraw
lds
push
adc
roll
jge
fstpl
decl
mov
rol
hlt
add
or
jp
dec
or
enter
add
ds
insl
push
loop
adc
fstps
add
jg
out
imul
inc
push
xchg
lret
mov
lret
aad
iret
or
dec
repnz
ret
xor
pop
rcl
test
movsb
dec
mov
dec
pop
jmp
adc
dec
data16
shlb
cli
aam
cmp
cli
lods
xchg
mov
dec
dec
pop
ret
cwtl
cmp
sub
jns
jae
popa
push
mov
mov
mov
ret
arpl
pop
shll
xor
pop
mov
lods
andl
cli
and
push
mov
inc
inc
dec
aaa
mov
push
test
clc
inc
push
icebp
push
neg
push
jns
xchg
sahf
mov
inc
mov
inc
jmp
jns
pop
leave
add
dec
sarl
dec
cmp
push
rcl
and
push
sbb
or
dec
mov
mov
dec
dec
inc
jge
dec
pop
push
out
sahf
out
dec
jbe
sbb
pop
mov
or
sbb
pop
fsubp
dec
mov
push
jo
lds
push
jl
and
loop
pop
flds
cwtl
push
adc
mov
imul
or
idivl
out
lds
mov
mov
iret
mov
imull
mov
jg
mov
cmp
sbb
inc
xchg
lods
cmp
or
push
mov
cmp
repz
clc
fscale
sbb
shrl
in
push
and
ret
dec
pop
out
orl
xor
inc
out
sub
cmp
inc
daa
mov
rorl
aaa
mov
dec
repz
ss
aam
inc
sbb
ret
jns
jmp
gs
stc
les
dec
popa
loope
push
out
xor
pop
loope
xchg
mov
out
aad
repnz
xor
or
push
inc
cmp
rcrb
jecxz
or
ret
hlt
push
mov
add
mov
std
lds
fs
hlt
mov
sub
push
aad
into
adc
sbb
jg
add
xor
dec
icebp
add
mov
ss
dec
or
jae
jno
lds
mov
xor
pop
add
jns
or
jbe
test
push
shll
test
ds
arpl
das
int
jecxz
and
imul
aas
jecxz
dec
test
mov
fstpl
lds
xchg
or
stc
hlt
add
loope
fnstsw
shr
sbbb
push
pop
fsubs
jge
cmc
mov
shr
ret
pop
insl
imul
mov
lret
ss
arpl
pop
popa
mov
adc
dec
movsb
adc
dec
rorb
ret
loope
mov
popa
jecxz
rol
dec
cmpsl
popf
sbb
js
outsb
mov
fldcw
dec
and
inc
push
stc
cmp
or
jecxz
inc
mov
icebp
add
sub
push
cmp
and
test
pop
cmc
mov
xor
stc
scas
mov
dec
push
decb
fmuls
rorl
stos
lcall
push
in
lcall
lcall
jb
jo
bound
xor
xchg
into
aam
ja
cmpsb
adc
cmp
nop
in
ret
fisttpll
sbb
mov
stos
iret
xor
ret
mov
xor
jp
inc
rcl
adc
xor
add
test
and
jle
adc
sbb
xchg
sub
mov
mov
ljmp
push
xorl
push
inc
enter
xor
or
mov
pop
mov
and
popa
stc
cmp
mov
cmp
or
xchg
adc
add
ror
or
sahf
jp
mov
and
lret
and
icebp
outsb
mov
mov
xlat
movsb
lods
xchg
push
mov
jecxz
je
test
mov
je
or
movsl
add
push
hlt
in
inc
sti
mov
shl
test
add
inc
dec
pop
ljmp
cmp
loope
repnz
dec
shll
fbstp
adc
stos
xchg
orb
dec
shl
inc
stos
mov
push
repnz
leave
xor
xor
rol
insl
sbb
inc
jbe
inc
aaa
sbb
jo
mov
mov
jb
inc
inc
fidivrs
dec
add
andb
jbe
add
dec
dec
addr16
data16
cltd
scas
sbb
jb
dec
adc
dec
pextrw
add
xchg
pop
xchg
pop
xor
inc
ja
int
aaa
jnp
or
ficoml
std
imul
ret
or
pop
inc
stos
cli
lcall
imull
pop
add
fadds
test
and
aas
sub
or
dec
pop
jge
gs
sbb
sti
divl
leave
push
fxch
icebp
repz
shll
rcr
popa
xor
rol
adc
xor
xchg
adc
dec
paddsw
js
inc
js
mov
enter
roll
int
mov
push
push
lret
negl
or
or
add
adc
cmp
test
cli
ret
gs
fsubrl
or
int
pop
sbb
test
xchg
inc
lret
mov
jl
push
adc
test
xor
fnsave
mov
adc
mov
int3
pusha
jno
das
into
jns
push
ret
cmpsb
cmp
xchg
mov
cmp
or
sarb
pop
pop
pop
lcall
clc
cmp
leave
and
test
mov
jmp
shll
sub
and
fs
inc
ret
cmp
jns
mov
push
daa
imul
add
ds
subb
mov
es
add
pop
jnp
ret
and
scas
cmp
or
mov
pop
outsb
sub
jge
dec
and
and
lret
mov
stos
mov
mov
mov
fidivs
inc
cmp
fsubs
sbb
jae
outsb
push
outsl
in
jae
shl
and
orl
std
loopne
aas
insl
loope
std
push
enter
mov
and
mov
mov
dec
test
pop
adc
mov
mov
loope
repnz
push
jae
dec
shll
call
pop
and
rorl
mov
out
nop
jno
inc
dec
leave
subl
xchg
mov
mov
sar
or
mov
insb
or
es
mov
int
loop
arpl
lcall
dec
and
loop
into
outsb
mov
icebp
in
mov
daa
les
js
mov
dec
mov
jo
jns
or
cmpsl
cli
mov
or
lds
mov
imul
or
lds
mov
loopne
imul
shl
fdivp
inc
mov
inc
adc
push
sahf
push
xchg
or
push
or
pop
loope
aaa
js
mov
int
cmp
rol
xchg
sbb
cs
mov
sbb
mov
leave
push
or
fldl
loop
arpl
push
sub
lock
or
adc
in
in
adc
cmc
inc
aam
fcomps
jo
mov
call
lcall
mov
pop
add
test
xor
pop
xchg
stos
iret
ret
pop
cmpsb
mov
test
push
fwait
and
xor
call
mov
or
pop
mov
jne
stos
aam
or
pop
xchg
sahf
enter
nopl
test
jmp
rcl
add
lret
ret
or
addl
mov
dec
daa
in
adc
cmc
inc
and
mov
jmp
test
inc
jbe
loopne
pop
loope
in
scas
not
dec
int3
das
mov
es
add
pop
jmp
stos
stc
sti
icebp
out
roll
jmp
es
outsl
mov
or
add
shll
iret
stos
fstps
cli
ja
mov
cwtl
daa
or
shr
sbb
add
push
add
xchg
push
icebp
imulb
aad
sar
daa
mov
lret
dec
xor
les
mov
push
pop
sub
push
push
dec
mov
aas
mov
das
pop
popf
mov
sub
inc
cltd
call
push
daa
push
loope
dec
xor
leave
ljmp
push
mov
int
aaa
div
jmp
mov
leave
inc
loope
stos
cmp
inc
out
lock
ljmpw
lods
imul
loopne
bound
mov
lret
fistpl
dec
lds
lock
int3
push
stos
gs
or
pop
mov
adc
fldl
mov
mov
ljmp
mov
pop
sub
testb
push
sub
imul
int
jns
adc
jl
sbb
mul
mov
lds
mov
dec
jnp
repz
stos
sbb
jg
xchg
fldcw
aad
mov
shrl
rcrb
pushf
jne
sbb
mov
and
idivb
movb
das
inc
loop
pop
cmc
test
xor
shl
mov
repnz
rcrl
out
rclb
inc
fidivrl
stos
pushf
or
das
aad
inc
cmp
xchg
roll
ret
mov
mov
shl
scas
imul
xor
hlt
dec
shrl
out
inc
es
in
push
or
jns
fimull
loope
je
icebp
roll
icebp
test
adc
in
xchg
push
repz
push
rolb
mov
jg
int3
mov
sub
mov
dec
sbb
test
or
test
mov
jbe
ret
and
stc
push
and
loope
cs
aam
dec
push
and
stos
int
aad
inc
add
leave
sahf
push
inc
add
aad
pushf
inc
push
lahf
push
mov
icebp
mov
jb
add
mov
add
ds
adc
popw
ds
icebp
adc
cli
jbe
mov
sub
aas
push
mov
imul
jno
mov
or
jne
iret
xor
cmpsb
addr16
fnstenv
or
mov
pop
add
in
push
pop
loope
push
dec
lds
je
jae
es
sub
pushl
lret
out
dec
push
push
popf
mov
fsubrl
outsl
daa
push
xor
or
mov
dec
cmpsb
int
xor
mov
stos
or
in
popf
jecxz
push
mov
stos
or
add
js
leave
out
mov
sub
xor
test
jne
sbb
scas
shl
or
leave
cmp
mov
int
xchg
sbb
xchg
cli
sahf
fisubl
in
pop
in
adc
cli
mov
ds
jno
lret
dec
lock
adc
test
add
cmp
push
adc
xor
cltd
push
add
pop
or
pop
push
adc
jmp
repnz
xor
jp
jnp
jmp
mov
push
push
jno
das
cmp
hlt
mov
into
inc
ret
mov
inc
dec
scas
inc
mov
mov
mov
test
vcvtss2si
adc
xor
enter
adc
das
and
ret
inc
enter
or
enter
cmpsb
pop
sub
aad
aam
stos
mov
sbb
repz
jmp
cmp
cltd
daa
loop
leave
shl
xchg
adc
fsubp
enter
stos
cmp
in
mov
int
ds
xchg
lock
mov
dec
inc
dec
pop
cmp
aad
pop
int
clc
add
stos
inc
cmc
lea
out
rorl
shll
stc
jbe
mov
add
push
mov
sbb
push
mov
pop
sti
iret
test
loop
loop
rorl
sub
add
repnz
inc
call
clc
xchg
jno
enter
adc
aad
mov
cmc
dec
in
mov
rclb
aam
jg
mov
stos
dec
or
sub
aas
sbb
mov
add
insl
ret
mov
out
mov
dec
dec
or
out
sub
into
fstpl
rolb
add
add
pop
add
dec
add
iret
stos
pop
mov
dec
imull
in
int3
ret
sbb
jecxz
sbb
negl
mov
div
or
fsubrl
push
cmp
shll
mov
sbb
push
cmc
cwtl
outsb
sub
shrl
and
dec
dec
add
daa
notb
lret
mov
add
inc
daa
or
xchg
jno
icebp
mov
jg
lret
fsubr
mov
negl
xor
jmp
inc
jo
shll
int
jg
js
mov
sub
pusha
sbb
xor
addl
push
mov
inc
dec
fimull
inc
popf
mov
push
mov
mov
movsb
or
call
mov
repz
rcll
addr16
xor
js
xor
lcall
rclb
cmc
loope
repz
repz
inc
lds
lret
addr16
sub
fnstcw
imul
js
aaa
and
shl
sbb
into
ret
insl
flds
or
or
ret
lret
repz
mul
push
stos
dec
jmp
mov
outsl
pop
outsb
sbb
mov
inc
push
mov
jno
xor
push
or
dec
dec
add
mov
jle
dec
push
adc
hlt
sbb
and
add
loop
add
aam
shl
jns
repz
div
icebp
rcrb
incl
lds
inc
ficoml
dec
mov
cmp
add
or
adc
insl
jns
call
lcall
xor
in
sbb
sub
sbb
jb
icebp
add
mov
stos
pop
ljmp
bound
jb
xor
shlb
inc
lds
aam
lret
lcall
jnp
sub
or
pop
or
and
lahf
aam
push
xchg
mov
jmp
lahf
pshufb
ljmp
jmp
mov
mov
test
mov
popa
roll
cmp
pop
out
out
dec
adc
jo
sub
call
roll
lds
add
cs
mov
jno
cmp
xor
pusha
hlt
cmp
stc
out
cmp
inc
stc
push
loop
jno
sahf
and
ret
sub
xchg
mov
jle
int
dec
int3
cmp
xor
das
jne
pusha
adc
aaa
push
repnz
jg
leave
mov
add
mov
ret
test
push
xor
push
repz
jne
enter
cwtl
ja
inc
adc
in
ljmp
lds
fdivs
pop
cmc
inc
sbb
xor
test
jno
inc
add
aaa
mov
ud1
inc
lds
mov
hlt
rclb
pop
push
dec
fadd
addl
mov
sarl
pop
leave
jge
mov
stos
pop
rorl
popa
push
adc
and
jmp
cwtl
call
xchg
sub
and
inc
jno
clc
ds
jmp
and
dec
repnz
mov
or
sbb
and
fcomp
in
sarb
ret
xchg
leave
or
dec
hlt
aas
outsl
aam
in
add
test
in
dec
daa
add
push
dec
popf
ret
stos
mov
arpl
out
repz
lock
imul
mov
pop
in
ljmp
mov
andl
popf
iret
ljmp
pop
dec
fstpl
arpl
psubusw
inc
push
jmp
idivb
cmc
loope
sahf
jo
orl
repnz
std
mov
in
fbstp
ja
mov
mov
jmp
das
mov
lods
lock
mov
cmc
dec
fs
sbb
aaa
ret
popa
mov
mov
std
fldenv
jp
aaa
and
hlt
sbb
testl
lds
mov
jg
or
push
sub
push
cwtl
jnp
data16
mov
xorb
sub
bswap
leave
add
mov
inc
test
loope
frstor
mov
aam
cmc
add
outsb
stc
cmpsb
loopne
fnstsw
xchg
pmulhw
cs
mov
fnsave
int3
and
les
int
jno
insl
jno
xor
cmp
sbbl
add
jg
icebp
testl
adc
xchg
add
pop
cmp
into
xor
insl
nop
or
push
adc
push
or
adc
icebp
pop
push
mov
dec
add
ret
or
into
xor
xchg
sub
jmp
ret
cwtl
in
jl
dec
test
or
inc
imul
push
test
jg
mov
daa
je
icebp
add
iret
or
rcrl
sub
fstps
cmp
or
and
xchg
orb
jne
aam
and
outsb
ja
jl
jo
shrl
les
inc
mov
dec
xorl
in
shrl
mov
loopne
in
jle
pop
lods
fisttpll
int
inc
scas
stos
in
inc
ss
pop
lea
js
dec
sbb
aam
mov
jg
xchg
mov
dec
sub
arpl
in
xor
xchg
push
sti
jne
inc
stos
fldcw
les
mov
fcoml
mov
in
and
pop
or
fstpt
xor
arpl
jl
xor
and
sbb
and
cli
aad
lret
push
ds
fisttpll
jb
test
xor
add
flds
leave
rcrb
int
into
int3
aas
and
fwait
scas
pop
mov
mov
in
mov
mov
push
mov
cwtl
ret
dec
negl
clc
lahf
jns
dec
rcrl
stc
push
stos
xorb
or
ret
xor
mov
sbb
mov
andb
ljmp
lret
movsb
ret
jecxz
movsb
mov
sub
cmp
aam
pop
lret
mov
enter
clc
add
mov
lods
mov
push
sub
mov
mov
psubq
and
std
repnz
shll
jae
dec
sub
jo
dec
jae
mov
or
mov
aas
adc
or
addr16
mov
dec
das
mov
repz
mov
xchg
movl
mov
pop
scas
fistl
inc
push
adc
lds
aas
loopne
fyl2x
in
fwait
inc
imul
push
or
dec
lds
int
cmp
rol
sbb
and
addr16
addb
pop
sarl
lret
pop
inc
gs
mov
jl
std
add
sbb
jg
ret
add
mov
std
sbb
fwait
xor
jnp
pop
pusha
pusha
push
cli
aad
rclb
mov
std
push
shll
mov
mov
or
wbinvd
test
fldl
fxch
pusha
add
shll
rcl
cmpsl
in
stos
shlb
xor
jno
jbe
int
add
pop
push
xor
lcall
inc
jg
mov
add
jae
leave
or
movsb
call
std
jge
push
mov
stc
nop
addr16
mov
dec
js
in
lds
daa
mov
adc
ja
dec
lea
or
flds
in
pop
add
inc
roll
ret
movsb
inc
cmp
stos
push
rorb
in
xchg
pop
mov
inc
or
sbb
frstor
stos
sub
leave
or
loope
int
std
out
or
xor
jge
stos
and
cli
test
lea
in
jmp
pop
shll
cwtl
icebp
sarl
test
xor
daa
imul
adc
aas
adc
sbb
and
pop
push
adc
pop
or
or
jmp
mov
mov
in
dec
sbb
rorb
out
mov
cld
icebp
mov
lock
in
jne
mov
pushf
push
jp
pop
in
adc
or
movsl
inc
inc
shl
cmp
dec
add
jnp
pop
xchg
movl
int3
test
xchg
ljmp
stc
inc
sarl
hlt
mov
and
pop
in
jno
jl
out
cwtl
aaa
mov
dec
xchg
enter
mov
out
mov
mov
lds
and
jmp
test
jns
xchg
push
vpsubw
ret
js
or
test
lret
outsb
int
clc
xacquire
loope
add
pusha
mov
mov
outsb
inc
pop
ret
aas
sbb
or
push
dec
das
mov
mov
imul
arpl
or
icebp
cltd
add
test
xchg
ss
add
jo
sub
repnz
cltd
cli
cltd
std
pop
inc
sub
cmp
pop
fstpl
push
in
mov
ss
lret
fwait
sub
dec
jge
pop
cli
loope
mov
push
scas
xchg
in
cmp
xor
lret
dec
jo
ret
aam
mov
mov
add
push
jae
adc
inc
and
lahf
les
mov
push
dec
and
xor
repnz
xor
inc
cltd
les
lods
mov
push
icebp
ja
mov
nop
jmp
orb
loop
clc
mov
jo
in
xorb
sbb
adc
not
or
push
cmc
sbb
or
inc
mov
and
fcmovnbe
inc
or
inc
cltd
xor
sub
outsb
aam
push
xor
enter
push
loope
or
loope
popf
push
add
aam
loope
inc
out
roll
jmp
push
fst
and
xor
outsl
pop
add
cmp
aad
jecxz
fldenv
pop
aaa
cmc
sarb
sbb
fsubrl
and
xor
loopne
dec
fisubl
xchg
or
repnz
add
outsl
xchg
dec
sub
sub
int
adc
push
inc
add
mov
mov
jg
and
mov
cmp
into
mov
sbb
stos
imul
inc
add
mov
push
lods
sbb
aad
int
pop
mov
lahf
xor
mov
mov
sub
and
je
in
stos
aaa
mov
enter
xor
or
jae
mov
cltd
es
mov
lds
push
or
ffree
jae
lds
dec
lods
fadds
aas
sar
or
add
mov
divb
scas
mov
mov
mov
sbb
sahf
push
ja
fnsave
ss
fidivl
sbb
adc
stos
lods
arpl
jno
add
jg
xchg
xchg
stos
retw
mov
adc
push
int3
mov
nop
repz
and
cmp
add
cld
sbb
jmp
loope
int
cmp
enter
ret
push
mov
or
sub
xor
xor
jmp
inc
lret
jecxz
mov
aaa
loopne
jno
ds
sar
jne
xor
ret
mov
sub
or
ljmp
in
cmp
lock
mov
dec
in
mov
jle
pop
push
shrb
add
xchg
mov
mov
fptan
repnz
cwtl
and
lea
pop
add
push
sbb
inc
nop
xor
sub
adc
dec
aad
xlat
sbb
push
loope
ss
pop
cwtl
jle
lea
inc
sti
sarl
lock
loope
aad
dec
push
rcrb
jmp
fs
into
movsb
mov
jb
mov
fistpll
mov
or
or
jne
push
subl
in
adcb
aad
adc
pop
movsl
lret
dec
movsl
roll
adc
dec
pop
adc
ja
add
and
shl
push
out
data16
frstor
lret
int
mov
or
adc
enter
in
movsl
and
fisubrs
and
add
in
mov
xor
mov
ljmp
push
fisubrl
and
jnp
and
dec
in
xor
or
or
sub
mov
outsb
pusha
stos
in
leave
icebp
jge
lock
orb
or
hlt
jnp
aam
insb
dec
ret
or
sarl
cmp
jl
adc
int3
and
xor
jo
mov
xchg
shlb
pop
ss
sbb
xchg
cmc
add
loope
sbb
leave
mov
das
pushf
fsubr
js
push
cmp
lds
cli
cwtl
divl
cs
cmp
sbb
mov
push
sub
call
std
aaa
into
into
jle
sub
mov
mov
or
repz
mov
out
ffree
sbb
inc
xchg
jb
add
in
data16
movsl
add
rcll
aas
push
jmp
and
test
pop
movb
outsl
test
gs
inc
arpl
inc
or
movsl
dec
das
popa
sbb
add
ds
js
in
or
fxch
xchg
add
cmp
xor
mov
pop
cmpsl
xchg
fxch
cmpsb
mov
repnz
repz
jne
stc
mov
cmpsb
cltd
jne
in
pop
xor
or
or
mov
push
push
jl
dec
rorl
sbb
loop
sarb
jns
and
dec
mov
cmp
rcl
pop
add
mov
rol
cmc
imul
shl
ljmp
mov
xlat
jge
sub
xchg
xor
mov
xor
imul
js
cmp
jle
rolb
into
repz
je
sbb
insb
cmpsl
jne
arpl
dec
inc
push
movb
add
adc
push
adc
gs
and
incb
loopne
stc
hlt
xor
pop
fisubrs
shlb
adc
mov
dec
cmp
data16
icebp
ret
xor
add
xchg
into
aaa
outsl
and
hlt
add
ss
mov
fistl
mov
xchg
lock
mov
mov
mov
jae
pop
jb
mov
pop
inc
pop
sub
and
stos
push
shlb
mov
pop
mov
stc
pop
inc
adc
xchg
nop
lods
fnsave
lds
in
xlat
out
loope
sti
sub
cwtl
xchg
dec
call
jns
into
aam
and
mov
int
sahf
mov
clc
in
pop
mov
pop
jae
inc
fsubrl
mov
rcll
aaa
std
fs
ss
in
out
pop
inc
fwait
ja
div
xor
stos
and
sbb
sbb
or
mov
add
or
jb
xor
aad
aam
ret
pop
lock
scas
and
adcb
loop
js
xor
xor
push
jno
push
incl
gs
or
outsl
movb
jns
mov
fdivs
push
scas
or
push
daa
mov
sbb
into
add
jg
push
xor
jbe
pop
addr16
mov
sarb
xchg
inc
ljmp
xor
sbb
jp
inc
xchg
inc
mov
rol
xor
xchg
cltd
leave
mov
sbb
cmp
leave
test
adc
jmp
lret
dec
ret
and
pop
push
push
xchg
cmp
jmp
divl
leave
cli
mov
sub
pop
dec
into
push
imul
xor
pop
lret
dec
bound
sub
lds
mov
pop
je
xor
mov
mov
or
fisttpll
and
and
mov
stos
jmp
xchg
cli
jo
cmp
enter
stos
pop
dec
sub
pop
xlat
ds
popl
mov
push
jne
in
dec
or
fiaddl
mov
cmc
aad
lret
pop
stos
pop
pop
sbb
insb
call
jbe
cmp
lcall
stos
jle
sbb
pop
leave
push
sub
push
das
pop
mov
stos
mov
jmp
mov
dec
cmpb
jns
xchg
or
movsb
sti
out
cli
mov
icebp
adcb
adc
and
or
popa
or
icebp
xchg
mov
movsb
lock
add
mov
mov
mov
xchg
movsb
nop
ljmp
and
pusha
pop
inc
add
add
cltd
and
xchg
out
dec
cmc
jecxz
out
push
andl
jns
adc
xor
enter
fcmovbe
inc
pop
mov
lea
jb
push
mov
ret
sbb
sub
mov
fdivs
jg
mov
sar
inc
ret
mov
pop
push
daa
mov
pop
fisubrl
adc
dec
adc
or
mov
or
add
cmpsl
insb
es
mov
mov
fnstenv
cmp
cli
sarl
scas
and
lcall
or
mov
cmc
jl
mov
adc
add
movsl
sarl
sarb
sub
mov
rcr
lds
das
lret
in
shr
mov
adc
mov
int
leave
mov
rorl
or
or
jb
lods
div
out
add
ret
pop
jns
pop
push
mov
and
push
pop
mov
aas
jge
push
cmc
jb
xchg
sub
dec
aam
inc
push
xchg
stc
inc
std
icebp
jmp
je
push
adc
or
mov
rolb
mov
add
mov
push
mov
outsb
sbb
or
int
push
lret
sahf
ret
lds
mov
pop
add
repz
and
inc
stc
jae
enter
push
or
adc
test
stos
mov
clc
mov
imul
cmp
dec
adc
repz
xchg
push
inc
inc
test
mov
cld
dec
movsb
jecxz
lcall
enter
arpl
sbb
lret
pop
and
lahf
bound
push
jno
and
call
psubw
jmp
and
mov
push
sti
mov
aas
in
clc
jle
inc
cli
orb
in
fnsave
jl
sbb
shlb
mov
dec
out
repz
lock
loopne
sub
mov
mov
imull
ret
negb
jmp
int
je
xor
in
mov
repz
repnz
or
mov
pop
dec
jae
mov
insb
jl
xchg
and
mov
in
stos
int
into
sysenter
lahf
sarl
je
mov
mov
nop
rol
nop
bound
jg
or
mov
dec
dec
inc
loope
xor
stos
leave
push
test
inc
addb
sub
push
mov
fwait
sub
lock
aad
mov
add
popl
out
mov
paddq
scas
rcll
inc
ret
inc
jp
mov
out
aam
mov
stos
add
fsub
fstp
and
cmpsl
jo
or
repz
fstpl
in
jbe
mov
rolb
jmp
es
test
je,pn
outsb
jno
add
sbbl
inc
scas
repz
mov
jb
jbe
mov
push
lds
popf
dec
jo
jae
lods
cwtl
jne
aaa
shll
push
aad
jbe
push
test
adc
icebp
cmp
loop
in
out
jne
dec
iret
xor
and
mov
int3
pop
call
and
ret
cmpsb
not
in
sub
xor
push
js
icebp
xchg
lods
ret
dec
mov
push
pop
movsb
xor
sub
lods
int
icebp
adc
loop
push
pop
fcoms
push
sbb
inc
jb
and
xor
and
sbb
rorl
mov
adc
and
inc
hlt
ds
or
andl
ds
pop
jecxz
cmc
cmp
push
mov
dec
outsl
push
lds
mov
loopne
popf
out
mov
mov
cmp
repz
sub
pop
jne
add
inc
mov
ds
dec
std
pop
movsb
mov
mov
mov
pop
lret
repnz
mov
or
cmp
aaa
jb
aad
mov
lods
sub
and
pop
or
jmp
and
inc
fcmovnbe
and
loope
pop
jmp
inc
call
inc
inc
mov
inc
inc
negb
arpl
popf
sbb
dec
pop
sub
lds
stc
inc
or
dec
sbb
jnp
shlb
das
mov
fldcw
in
insl
imul
sbb
xor
and
add
arpl
mov
push
mov
repz
cs
xchg
leave
lahf
mov
or
xchg
inc
enter
add
loopew
cmc
adc
mov
inc
jns
dec
cltd
mov
sub
repz
test
jl
mov
fmull
inc
in
dec
xchg
or
je
cmpsb
pop
inc
ret
mov
mov
int
or
je
js
mov
insb
sbb
fstps
adc
aam
inc
insb
enter
add
lret
lock
dec
loop
jmp
dec
in
dec
xor
shrl
and
push
addr16
hlt
ja
xor
sbb
dec
add
insl
mov
or
dec
mov
repz
xchg
xchg
jp
mov
sbb
inc
lock
loopne
adcb
push
call
movsb
cmove
cld
adc
sub
insb
sarl
lds
stc
dec
cmp
std
inc
and
es
push
push
jecxz
je
fsubl
inc
repnz
fldl
sbbb
and
jbe
imul
and
or
add
cmp
adc
jne
outsb
rolb
frstor
fwait
mov
mov
dec
add
sti
fsts
shll
mov
test
inc
sub
movl
xchg
pop
in
jmp
or
sub
ret
fcmovbe
inc
pop
dec
lea
or
enter
mov
out
in
cmp
mov
push
inc
mov
inc
dec
shr
add
loope
lds
cmp
outsb
push
enter
xchg
out
and
ret
sarl
add
push
stos
mov
sub
inc
jae
jecxz
lret
fstl
pop
mov
stos
enter
jns
mov
imul
imul
dec
xor
or
cmp
and
cmp
ror
dec
pop
add
shl
push
jne
push
inc
mov
mov
or
pop
stos
adc
push
mov
lds
enter
sub
jo
call
mov
push
or
inc
mov
fyl2xp1
mov
mov
loope
rolb
cwtl
sub
into
movb
fcomi
mov
mov
mov
fucomp
mov
inc
push
fnstsw
call
xchg
dec
inc
cmc
ljmp
sub
nop
push
mov
sub
add
xor
scas
frstor
pop
pop
or
xorl
push
shll
in
ret
adc
outsb
ret
fistpl
sbb
enter
rcl
fadd
dec
ret
dec
int
lds
push
mov
popa
repnz
inc
aam
pop
jmp
jmp
dec
outsb
enter
sbb
subl
flds
test
lret
jne
mov
dec
or
jnp
add
rdpmc
cmp
sbb
jg
lock
hlt
add
mov
mov
dec
cmp
ds
or
in
dec
fadds
sub
mov
inc
icebp
mov
add
shl
aam
pusha
sub
out
in
add
iret
jb
dec
aam
jl
lret
adc
stc
pusha
jl
stos
mov
jns
enter
sbb
adc
hlt
mov
jo
xor
pop
mov
dec
xchg
into
mov
mov
dec
dec
xor
pop
cmp
mov
dec
inc
or
dec
or
sete
out
fcomps
fdivr
jmp
mov
ret
addr16
jl
stos
out
adc
cmc
rcrb
mov
sub
mov
mov
test
ror
and
repnz
add
gs
pop
xchg
jg
xor
andb
pop
cmp
or
stos
ret
out
in
inc
lret
nop
fst
cmp
fcmovne
test
dec
sub
orl
ljmp
dec
push
es
fiaddl
fnstcw
in
lock
testb
mov
lock
jmp
and
aad
mov
lea
inc
mov
fldenv
cmp
add
lods
xor
test
rclb
fwait
mov
shlb
std
sbbl
in
aaa
push
scas
insb
jg
inc
jo
aaa
cmp
int
xor
cmpl
dec
mov
sbb
sbb
and
xlat
iret
stc
inc
or
push
jecxz
imul
iret
aad
mov
sbb
adc
out
aas
outsl
push
mov
in
dec
xlat
sbb
std
mov
pop
mov
xor
sbb
stos
pop
mov
sbb
add
jne
sbb
cmc
dec
sbb
push
dec
outsl
inc
pop
pop
jbe
pop
dec
std
and
add
mov
jge
and
js
cmpsl
dec
push
mov
or
lock
sub
sub
mov
popl
mov
outsb
xchg
sti
adc
mov
mov
je
push
dec
cltd
inc
mov
ja
push
sbb
push
cs
into
mov
pop
push
cli
xchg
imul
fldenv
add
ljmp
mov
ss
fisubrl
rcll
pop
xchg
je
icebp
stos
test
and
leave
shrl
cli
in
repnz
mov
fdivl
lret
jle
loop
cwtl
jno
or
aaa
ret
dec
add
or
popa
test
out
lds
pop
xchg
ds
sar
cmp
ret
addl
jbe
lcall
mov
and
inc
test
std
pushl
jg
or
mov
jbe
sarl
mov
inc
jno
lret
cmp
inc
add
int
xor
popf
clc
or
mov
cld
xor
mov
dec
subl
stos
jno
iret
jns
pop
sbb
ljmp
push
fildl
mov
cmp
mov
jo
shll
sbb
mov
in
mov
sub
mov
cmpb
rcrl
or
push
popf
aad
dec
gs
sbb
call
sub
aas
int3
add
dec
jbe
mov
pop
inc
pushf
shrb
cmp
xchg
or
cmc
mulb
in
adc
cmp
addb
mov
jnp
testl
xchg
popf
and
xlat
add
arpl
push
pop
sbb
repnz
jmp
add
fwait
jae
test
jecxz
test
popa
inc
ss
lock
inc
mov
lds
stos
dec
rorl
push
cmc
jmp
xchg
roll
push
xlat
pusha
or
sbb
repnz
in
enter
roll
dec
xor
fnstsw
and
xchg
inc
jnp
mov
or
xor
leave
inc
push
jge
add
push
shll
cmc
test
add
pop
cmp
lret
sub
jecxz
jo
ret
clc
mov
xor
stos
dec
cmc
clc
cmc
sbb
sti
xor
dec
jl
call
shrb
and
xor
notb
xchg
mov
inc
or
add
and
fwait
xchg
dec
out
dec
pop
rorl
cmp
inc
and
cld
enter
push
or
cmpsl
xor
mov
add
lret
sbb
iret
inc
jns
jns
xorl
fs
and
roll
popa
icebp
jp
insb
outsl
shl
dec
repnz
int
fstps
inc
into
or
sbb
and
mov
jbe
inc
shrl
dec
int
dec
bound
outsl
xor
add
mov
nop
add
xchg
loopne
roll
insb
fwait
sahf
xchg
ret
scas
lds
shll
sbb
pop
loope
aas
pop
lods
mov
sub
add
ret
or
dec
pop
sbb
mov
mov
push
mov
into
sub
dec
cli
jbe
ret
call
aas
cmp
cmpsb
movsl
aaa
stc
addr16
and
outsl
cltd
lret
loope
fildll
pop
push
mov
jg
call
hlt
xchg
sbb
or
jg
sbb
sub
cld
sub
push
cmp
mov
jl
cmp
xor
mov
and
mov
mov
imul
and
dec
mov
rcll
ljmp
iret
mov
cmp
mov
jne
rcll
pusha
rcll
aaa
mov
lock
enter
call
pop
ret
fs
cs
icebp
jns
lea
fbstp
lahf
lds
cmp
outsb
sti
jb
cli
jecxz
rol
aad
or
push
out
push
cmp
sbb
dec
xor
scas
or
dec
movsb
pop
test
adc
mov
pop
aam
cmpsb
push
pop
rorl
push
xor
adc
sysexit
sbb
or
push
xor
lods
adc
dec
cmpsl
mov
cld
icebp
and
jb
add
or
dec
or
cmp
dec
imul
aas
or
pause
dec
and
add
or
sub
jmp
xchg
add
movsl
jmp
rorl
jns
outsl
ja
mov
push
sbb
or
add
repnz
mov
shll
test
mov
dec
jne
pop
adc
jp
dec
or
adc
ja
add
xchg
or
mov
add
or
cli
cltd
ret
sbb
xchg
rcrb
shll
leave
jb
sarl
or
jle,pt
mov
adc
loopne
xor
inc
or
push
loop
addl
inc
dec
push
inc
sub
dec
mov
jae
xor
stos
xor
mov
jmp
xchg
pushf
ror
and
mov
cli
mov
and
dec
mov
sub
loope
mov
mov
xorb
fnsave
sbb
mov
cmpsb
aas
sbb
cmp
mov
shl
enter
add
dec
add
ja
push
scas
sub
sub
push
popf
ret
inc
jae
inc
lret
pop
stc
dec
sub
scas
mov
jmp
add
popa
inc
mov
or
outsl
popf
imul
aas
cli
sub
scas
xor
out
and
imul
dec
pop
lds
pop
jmp
lahf
mov
mov
pop
cltd
leave
adc
lds
pop
sbb
loop
popw
sub
xchg
push
dec
sub
xchg
add
je
daa
call
idivb
lret
pop
mov
inc
add
mov
push
imul
add
enter
ret
xor
or
sub
push
cmpsb
adc
cs
pop
pop
dec
xor
scas
repz
pop
ljmp
int3
movsl
int
pushl
imul
fdivs
xor
mov
and
fyl2x
add
into
insb
stos
push
and
orl
dec
in
rolb
jne
jecxz
in
icebp
fsubrl
cltd
push
pop
ret
sbb
push
or
push
test
movsb
pop
xchg
dec
gs
in
mov
dec
and
mov
test
fisttpl
pop
sbb
jg
out
repz
setae
mov
lahf
enter
daa
in
mov
sbb
repz
dec
clc
stos
mov
in
sbb
and
std
daa
mov
leave
loop
pushl
divl
cmp
popa
mov
add
mov
dec
icebp
dec
xor
fs
mov
xchg
mov
shrl
and
shll
fisttps
jmp
stos
and
sbb
mov
repnz
frstor
pusha
sbb
cmp
loopne
xor
cmp
mov
sub
cmp
mov
and
or
mov
in
leave
push
mov
iret
pop
repz
mov
xor
lock
adc
sbb
mov
enter
repnz
inc
negl
ja
cli
jae
shrl
sbb
mov
fnstcw
jno
fldenv
aad
aad
call
and
stos
js
mov
shr
rcrb
mov
les
or
jmp
jo
outsl
mov
popf
and
enter
aad
mov
or
push
shll
cmp
outsl
cwtl
adc
stos
mov
push
dec
clc
xor
xchg
sarl
and
insl
in
inc
repnz
shlb
xor
jb
adc
enter
pop
das
xchg
movsl
or
mov
and
lret
mov
adc
or
cli
jns
mov
aas
fistpll
ret
inc
sub
jno
shl
cmp
shrb
xchg
cmp
fwait
test
cmp
push
adc
or
scas
and
jmp
inc
out
scas
mov
lock
idiv
faddp
push
shll
rorl
jg
test
in
xlat
inc
dec
dec
lret
sub
sbb
jle
outsb
fdivrl
test
dec
in
push
insb
das
aaa
pop
fwait
jo
outsl
out
jmp
xor
pop
orl
xor
je
mov
sarl
int
test
fistpl
add
mov
bound
sub
mov
lods
lret
imul
ja
inc
icebp
les
ds
inc
mov
mov
rolb
inc
outsl
inc
in
jmp
in
cltd
imul
std
pop
lea
xchg
rorb
imul
xor
in
xchg
xchg
jmp
clc
sub
jo
or
mov
xor
into
aaa
fisttpl
ret
mov
test
pop
mov
in
addl
mov
mov
insl
cli
pop
imulb
lahf
xchg
add
jnp
into
mov
mov
cs
inc
ficompl
mov
jp
andb
jmp
cmp
pop
sti
aam
aam
inc
test
inc
je
mov
nop
shll
push
loopne
pop
add
cmp
mov
gs
xor
jo
mov
dec
sub
mov
push
mov
aas
loope
jge
hlt
arpl
ret
int
dec
fidivl
ja
xor
daa
iret
dec
fdiv
dec
sbb
and
sahf
adc
in
test
xor
xchg
jo
push
pop
mov
push
aam
rclb
dec
rcrl
add
push
loopne
mov
lret
jle
movsb
fsincos
in
rcl
and
sub
pop
mov
insb
ds
stc
shll
ret
icebp
adc
shll
repz
fistpll
mov
ja
stc
jl
test
mov
add
icebp
sarb
mov
inc
arpl
inc
stc
pop
mov
repnz
and
lds
xchg
leave
leave
mov
jecxz
stos
sub
ljmp
aad
pop
in
enter
fwait
ljmp
jb
or
call
std
pop
sbb
sub
cmovs
add
addr16
inc
or
aad
shll
movsl
shll
out
sub
ljmp
dec
pmullw
mov
popa
sbb
jb
into
outsb
push
and
xorl
and
and
sbb
int
arpl
outsb
inc
cmp
test
push
jno
push
icebp
pusha
int
scas
icebp
add
fmull
mov
jno
stc
mov
and
fimull
dec
fnstcw
std
xor
int3
mov
or
push
sbb
or
push
movsb
jp
mov
push
arpl
jno
push
mov
xchg
loope
push
jne,pt
pop
pop
sub
fldl
mov
sarl
add
sub
fsubrs
sarl
jbe
inc
leave
add
insl
jne
mov
add
dec
push
fmull
in
mov
jl
jmp
lret
adc
lea
and
mov
mov
dec
adc
cmc
add
add
scas
aam
mov
ret
dec
sub
in
push
in
ljmp
mov
hlt
enter
gs
or
cmp
outsb
ret
cmp
aad
jae
jne
psubusw
in
add
push
lock
mov
add
ljmp
mov
ror
vpaddusw
dec
cli
icebp
das
les
test
stos
lock
aaa
xchg
and
add
adc
ret
fnsave
lahf
loop
add
or
sbb
sub
in
loop
mov
mov
inc
sub
dec
ret
jne
shl
push
jb
push
daa
sub
mov
inc
into
jno
je
imul
mov
pushf
jo
shll
lret
fcompl
mov
stos
fsub
mov
lret
jmp
jmp
adc
popa
mov
call
mov
or
push
adc
cli
adc
cmpsl
hlt
and
mov
negb
xor
push
pop
rorb
lock
pop
dec
mov
icebp
inc
inc
inc
inc
jne
lret
dec
jns
cld
out
mov
fmul
into
dec
or
and
and
mov
xor
adc
ret
pop
or
jp
pushf
mov
andl
mov
daa
mov
and
push
inc
inc
cli
rcll
add
and
fdivl
sarb
pop
add
div
dec
ret
ret
sar
sbb
or
mov
ja
call
fisubrl
sahf
hlt
das
dec
dec
lds
in
push
inc
ret
push
ds
pop
mov
mov
enter
jmp
mov
adc
ljmp
stc
inc
mov
call
xor
mov
lret
mov
cmp
mov
xchg
mov
xchg
push
rol
mov
xor
es
sbb
in
imul
xlat
adc
movl
iret
push
test
add
mov
movsb
stos
or
jmp
mov
cwtl
cltd
push
add
and
dec
fnsave
popa
imul
mov
add
aas
popa
push
mov
sub
es
addr16
sbb
add
mov
icebp
ret
negb
lods
push
mov
cmp
pop
pop
stc
xor
fdivrs
fnsave
out
pop
mov
xor
push
add
std
and
lock
mov
sub
push
inc
mov
enter
lea
pop
mov
dec
jb
stos
clc
sbb
pop
mov
xchg
out
xchg
inc
aas
test
and
test
cmc
mov
dec
mov
inc
ljmp
lds
mov
push
mov
cmp
sti
or
mov
leave
adc
xchg
je
fiadds
lock
mov
cmp
jno
cwtl
out
cmpsb
lcall
test
test
mov
xor
aad
lds
cwtl
add
ljmp
mov
clc
test
sub
arpl
push
add
and
mov
jge
adcl
popa
data16
adc
dec
test
fdivrs
cmp
stos
adc
mov
rcl
mov
sub
icebp
inc
testl
cmp
adcb
cli
sahf
popl
jle
add
mov
fs
jmp
lods
xor
pop
mov
pop
into
leave
pop
insb
inc
xlat
inc
sarb
rol
in
add
leave
repz
or
push
push
imul
sub
mov
push
aas
sbb
inc
fmul
xor
lods
daa
sti
xchg
jno
lock
jo
mov
mov
test
adc
pop
and
cmp
jl
into
xor
es
or
dec
out
xor
and
aam
lds
jle
push
add
sub
pop
cwtl
adc
cmpsl
repz
sub
jo
leave
into
dec
pop
out
xchg
or
add
mov
inc
jmp
xchg
daa
lret
jne
daa
adc
pop
mov
cmovae
sub
and
xor
dec
addr16
mov
xchg
mov
decb
push
xor
sti
in
jnp
mov
into
mov
hlt
jmp
mov
pop
jmp
imul
addr16
ja
repz
xor
or
pop
sbb
push
insl
mov
nop
outsb
rorl
ret
mov
jo
lock
add
adc
xchg
add
bound
ret
jbe
add
mov
push
pop
add
sbb
outsb
xlat
rol
psubsw
popa
add
sub
mov
inc
mov
dec
in
adc
call
lds
xchg
nop
inc
enter
dec
xor
dec
imul
addr16
mov
dec
in
imul
aad
xor
jle
pop
out
outsb
xor
jg
aam
rcrb
fcomi
xchg
mov
mov
nop
push
rorl
fiadds
lods
rorl
aaa
shr
cmp
loop
stc
lea
or
pop
xor
dec
fstl
repz
add
mov
loope
clc
dec
and
ret
test
xor
daa
cmp
adc
repz
rclb
std
call
inc
sbb
icebp
leave
jl
mov
outsb
and
or
in
xorl
out
sub
outsb
add
pop
clc
or
out
add
adcb
cmp
dec
mov
pop
lcall
mov
jnp
mov
cmp
aas
into
cli
ja
jg
jb
jge
mov
or
adc
xchg
mov
cld
fiaddl
out
and
out
ja
mov
jge
pop
xchg
xor
mov
jmp
mov
lds
sub
aam
cli
mov
jl
jp
icebp
and
das
fistpl
jecxz
inc
push
int
in
les
xchg
rol
pop
mov
lcall
jb
xor
mov
mov
shlb
or
sub
add
cli
scas
jno
dec
int
icebp
lock
in
cmp
in
inc
stos
sub
shll
or
je
fisubrl
pop
ss
and
jno
das
cmpsl
cmpsl
adc
xchg
rcrl
insb
adc
popf
jns
jl
xor
into
pusha
out
lret
lock
cmp
inc
push
fmuls
sarb
cmp
and
in
add
imul
pushf
mov
mov
dec
cltd
iret
lea
daa
ret
movsb
xlat
movsb
leave
shrb
in
or
dec
jbe
out
mov
dec
sub
stc
push
mov
dec
jbe
call
or
ret
cli
mov
bswap
dec
ret
dec
pushf
in
bnd
or
test
testl
fidivl
or
xchg
and
lahf
divb
mov
cwtl
aas
lds
pop
or
outsb
in
jl
mov
sub
repnz
xor
pop
out
arpl
cwtl
testl
mov
or
and
pop
out
inc
sbb
fmull
jne
arpl
sub
rorl
mov
mov
and
ljmp
test
jp
mov
mov
fwait
iret
xor
stos
in
add
cmp
mov
xor
or
dec
aas
inc
icebp
fldenv
or
xchg
and
shr
xlat
inc
ss
out
push
int
mov
dec
xchg
mov
dec
cmpsl
in
cli
mov
leave
rcll
or
dec
in
pop
ret
and
jle
or
mov
push
dec
push
int
test
xor
mov
xlat
movsb
mov
sti
xor
ffree
std
dec
jecxz
mov
mov
add
xchg
inc
leave
addr16
sbb
xor
inc
movsl
ja
adc
xlat
ret
jnp
dec
mov
dec
add
aad
mov
sbb
lahf
ds
aas
or
int
ret
incb
loop
ret
jno
dec
cmp
dec
adc
adcl
sub
push
and
dec
xor
into
fistpl
lret
mov
out
ret
mov
xchg
xchg
pop
dec
add
test
test
test
jne
jbe
xlat
xchg
mov
mov
jmp
aam
sub
mov
cltd
andl
stos
mov
cwtl
nop
and
ret
leave
and
in
sub
cmpsb
iret
sub
mov
orb
and
lret
into
xor
mov
push
jmp
out
scas
loop
std
sub
int3
fcomp
ret
fisttpll
cmp
sub
sub
mov
jb
roll
movups
mov
sbb
add
leave
insl
cmp
xchg
inc
xchg
test
xor
cmp
lcall
jo
notl
mov
jne
int
sbb
cmp
lds
dec
add
inc
pop
ss
shll
jno
aad
stos
aas
ret
and
or
enter
pushf
and
scas
push
aam
outsb
push
hlt
and
xor
mov
adcb
add
aad
and
sub
dec
sbb
pop
in
push
aam
subb
or
jle
dec
ret
cmp
daa
dec
gs
sub
cli
cmpsb
ds
icebp
dec
push
push
lahf
mov
mov
dec
lds
dec
imul
sub
inc
cmpsb
xor
mov
xor
cmp
add
lds
pop
leave
insl
in
pop
nop
cmpsb
arpl
or
test
sub
aam
push
in
xorl
inc
aad
outsl
fstpt
iret
fiaddl
pop
testl
jne
push
dec
adc
or
or
insl
dec
xor
jnp
adc
fidivrl
ds
call
orb
mov
int3
cli
mov
xchg
jbe
xor
aam
mov
inc
ret
sarl
and
lock
mov
push
xor
imul
jg
mov
ds
inc
aas
lds
ret
outsb
mov
mov
lock
or
cli
mov
mov
lret
test
jo
dec
clc
sbb
in
iret
scas
and
mov
jmp
mov
les
and
hlt
imul
aam
rorl
daa
inc
repnz
fs
sbb
iret
xchg
xor
lock
dec
icebp
ss
mov
ret
fwait
xchg
std
sub
push
add
push
adc
aas
and
dec
sub
aas
out
inc
cltd
push
or
xchg
or
sbb
pusha
shll
ljmp
aaa
mov
push
je
jns
fmul
outsb
jge
mov
mov
iret
push
inc
stc
call
std
mov
setnp
test
inc
xor
repz
enter
das
int
in
aam
cld
pop
shr
adc
shl
aas
or
idivb
lcall
xor
andl
icebp
hlt
mov
or
mov
xlat
out
cltd
mov
mov
and
push
mov
fnstsw
adcl
lds
adc
shlb
bound
xor
xor
xor
cli
addl
mov
adc
fs
xor
lahf
xor
pop
movsl
nop
mov
xchg
ffree
fs
push
sarb
mov
mov
dec
jl
repnz
and
int
test
leave
dec
mov
sbb
or
jbe
aas
add
mov
out
push
or
and
fsub
and
icebp
dec
pop
sub
lds
pop
icebp
jge
mov
jmp
jg
mov
dec
sub
inc
popf
mov
push
test
add
hlt
push
ljmp
xor
loope
jb
mov
dec
adc
xor
jbe
lcall
js
test
push
xchg
pushf
pop
repz
frstor
lcall
lret
adc
andl
push
sbb
mov
or
and
subl
mov
inc
test
ret
or
jg
pop
in
cmp
sbb
lret
xchg
cwtl
das
add
fnclex
or
sub
in
mov
je
adc
ljmp
and
lds
xchg
adc
gs
mov
push
aam
pop
fidivl
mov
fisttpll
jl
sub
nop
dec
ds
int3
lock
add
div
lcall
cmc
loop
stc
and
add
xor
mov
movsb
fwait
push
into
dec
pop
pop
xor
ficomps
fldl
fld
sbbl
mov
pusha
out
aad
add
inc
sbb
aas
jae
xor
pop
je
fcmovnbe
sub
adc
call
mov
rolb
cmovb
mov
and
dec
jo
mov
dec
cmp
ret
mov
add
push
push
in
mov
mov
lock
push
mov
sbb
loope
mov
stc
ret
icebp
mov
sbb
mov
add
xor
int
cwtl
jns
xor
lods
mov
adc
cs
cmp
cmp
sub
outsb
pop
mov
andl
lret
roll
int3
adc
cli
mov
repnz
icebp
fs
daa
xor
hlt
inc
add
mov
in
sub
aam
lds
jb
aad
mov
ds
filds
daa
scas
dec
jmp
idivl
stos
aas
adc
lcall
hlt
lahf
mov
stos
or
aas
mov
cwtl
xchg
cmpb
mov
xor
mov
lock
xor
pusha
sbb
in
int3
push
jge
popf
cmp
js
push
xchg
cmp
sbb
add
adc
insb
mov
sbb
xchg
ret
cmp
js
mov
loop
push
enter
mov
lock
inc
xchg
push
lods
call
es
fisttps
aad
mov
enter
pop
cwtl
mov
xchg
subl
add
sbb
ss
mov
or
ret
xchg
add
jle
mov
adc
xor
or
loopne
xor
sub
cmc
jecxz
lret
fld
std
popa
mov
dec
push
mov
mov
outsb
jo
lahf
ds
xchg
pusha
in
lock
xor
int
inc
cmp
jp
mov
pushf
mov
fnstenv
loopne
and
sti
mov
inc
inc
add
in
jns
jo
leave
jge
daa
inc
hlt
lock
pop
dec
cmpl
dec
and
nopl
stos
add
and
dec
int
sahf
rcrb
or
mov
xchg
push
add
out
mov
sub
out
in
lds
mov
or
and
sbb
or
xchg
dec
xor
sbb
and
xor
popf
inc
shr
or
mov
add
dec
je
mov
push
fs
xor
and
repnz
add
test
shll
jns
cmpsl
stos
mov
divl
mov
or
xchg
pop
scas
dec
and
mov
movl
mov
clc
dec
paddb
inc
xchg
notl
push
cmp
nop
jne
pusha
inc
sti
dec
mov
or
push
mov
add
lock
mov
xlat
pop
and
add
xchg
dec
mov
mov
dec
sub
pop
fwait
jecxz
add
sbb
mov
inc
imul
cmp
pop
scas
enter
out
xor
jle
push
loop
sub
push
mov
push
lds
aaa
dec
cmp
or
imul
and
pop
or
pop
dec
div
pop
ret
or
xorl
push
pop
push
sbb
and
pop
inc
and
aas
and
rolb
test
fsubs
dec
test
or
shlb
dec
xor
push
loope
mov
pusha
mov
mov
pop
aas
sub
add
shlb
sbb
fdivs
inc
cmc
push
push
scas
and
dec
sbb
lods
ficoms
mov
mov
and
ja
lock
xchg
jge
push
sbb
mov
xor
rcl
mov
movw
mov
add
mov
add
sub
push
subb
clc
dec
aad
xchg
xchg
jns
aad
movsb
xchg
jae
xchg
mov
fld
mov
mov
adc
push
cmpsb
loope
mov
stc
cmp
addr16
mov
leave
test
jb
mov
enter
pop
mov
sub
in
jl
jl
fsubs
or
loope
or
mov
nop
cmp
rol
mov
mov
push
and
xchg
fsts
sbb
leave
icebp
cli
adc
loope
push
jecxz
in
es
out
or
xor
cli
sarl
add
jle
aaa
out
cmp
sbb
xor
stos
das
in
test
pop
aam
sar
mov
cmp
ljmp
sbb
inc
loopne
lret
add
ret
or
test
icebp
out
nop
dec
out
add
xchg
jmp
or
shll
dec
iret
add
mov
sub
shl
jg
test
push
sub
jno
xchg
add
jno
aaa
pop
mov
idiv
cmp
jle
in
cmp
sbb
xor
mov
jns
mov
jge
lret
rcrl
sbb
es
nop
fs
adc
inc
xor
xchg
mov
cmp
xlat
std
adc
inc
jmp
ds
xchg
push
mov
inc
mov
fcomps
mov
inc
mov
mul
daa
stc
sbb
addr16
rcl
leavew
repz
or
fdivs
dec
aad
lock
lock
xchg
jmp
and
pop
test
shrl
cmp
inc
shr
cmc
out
repz
or
insl
jecxz
clc
rcll
loope
or
aam
leave
adc
xor
xchg
stos
loope
rclb
push
aam
xchg
xchg
xor
pushf
jo
jb
inc
xchg
imul
jne
xor
loop
cmp
jns
stc
or
int3
ja
std
jo
mov
mov
xor
in
push
sti
daa
sub
add
add
jg
mov
xchg
fs
shl
jecxz
mov
jmp
fsubrs
cwtl
das
ret
or
mov
or
ret
dec
outsl
out
xchg
and
pop
add
testl
xchg
xchg
into
scas
repz
in
mov
clc
add
aas
bound
xor
pop
mul
and
jnp
sbb
test
shl
aam
sub
inc
in
aas
repnz
icebp
mov
mov
inc
rorb
sbb
movsl
pop
sbbl
adc
sub
repnz
pop
or
cmp
stos
es
mov
jle
rorl
in
cli
fmull
or
mov
sti
cmc
xor
jae
add
mov
mov
into
pop
shl
fnstsw
adc
sub
int
sarb
pop
ja
lret
aaa
xor
cmp
lds
mov
mov
push
dec
lahf
loop
in
cmpsb
mov
push
out
lret
orl
in
int
fldl
mov
dec
lret
mov
lds
or
pop
movsb
cmp
pusha
out
xchg
cltd
cmp
fld
mov
and
pop
arpl
or
lds
and
stc
push
jne
stos
cltd
aaa
lds
shl
ret
mov
into
dec
or
out
mov
fcomip
outsb
inc
pcmpeqd
mov
sub
testb
xor
xchg
mov
xor
std
pop
xchg
fdivrl
adc
out
xchg
add
add
imul
in
push
ja
pop
fwait
movsl
pop
out
dec
and
adc
adc
icebp
push
repz
jmp
push
or
in
lret
or
inc
loop
adc
movsb
cwtl
mov
call
cs
xchg
mov
push
mov
lock
mov
mov
jno
xchg
jns
xor
adc
out
test
add
jp
or
adc
test
sbb
mov
mov
popa
push
jb
in
aas
je
in
icebp
ljmp
mov
dec
scas
cwtl
jbe
std
pop
adc
mov
jnp
icebp
mov
xor
and
sti
jns
insb
enter
jbe
push
mov
js
mov
test
popa
in
xchg
call
and
std
add
sub
int
filds
outsb
mov
lret
aaa
fistpl
int
arpl
movsl
adc
fstps
fbstp
ret
mov
shll
pushf
sub
lods
mov
cmpsl
pop
repnz
and
jmp
fucom
xchg
mov
fimull
insl
lret
mov
leave
mov
mov
dec
stos
dec
mov
ret
into
mov
pop
push
push
lock
mov
dec
or
jmp
sub
enter
adc
inc
mov
mov
lcall
out
lret
and
sub
cmp
jne
icebp
mov
inc
arpl
lds
or
sbb
jne
cmpsb
test
push
aas
mov
lret
lret
pop
std
sbb
rcl
jno
stc
fmull
fimuls
rcrl
mov
push
jmp
ljmp
xor
dec
jge
or
ja
xor
mov
inc
ds
sub
lds
pop
sbb
mov
sbb
ret
adcb
in
lods
cmc
mov
adc
int
mov
inc
gs
pop
mov
ss
leave
fadd
in
mov
int
push
xchg
mov
in
nop
and
mov
jno
jmp
and
leave
mov
jno
xor
inc
rcrl
mov
jbe
dec
kmovb
addl
xor
mov
cli
ret
jl
lcall
loope
mov
dec
pop
fistpll
clc
bound
out
roll
out
cmc
popf
push
sub
xlat
lds
out
aas
mov
dec
jge
dec
sbb
je
cltd
pop
insl
orl
hlt
push
sub
push
in
or
xchg
lcall
aad
xchg
std
jecxz
lds
cltd
in
and
das
orb
push
jg
leave
dec
test
cmc
sbb
push
mov
pop
jle
mov
adc
push
lds
jae
into
adc
add
fisttpll
ljmp
xor
inc
push
xor
inc
xchg
pushf
adc
or
adc
mov
jb
jbe
out
add
add
aam
stc
jmp
std
shlb
adc
dec
stos
mov
test
jge
adc
sarl
mov
mov
mov
adc
loopne
xchg
inc
arpl
incb
inc
or
jae
popa
sbb
andl
xchg
xchg
push
ljmp
and
dec
cltd
into
mov
add
shr
icebp
rcl
loope
hlt
cmpsl
add
push
or
test
sbb
mov
int3
loope
stos
xchg
xchg
and
inc
insl
and
in
outsb
clc
or
mov
test
icebp
mov
xchg
jns
cwtl
push
add
scas
hlt
pop
cmp
enter
or
icebp
or
cmpsb
fwait
js
lds
fnstcw
and
cmp
xor
ljmp
loope
xorl
pop
int
adcb
cmpsb
arpl
shl
push
shl
movsl
xchg
jmp
mov
dec
jmp
ffree
fadds
or
inc
fdivrl
pop
mov
lcall
fucomi
ret
aam
rcrb
test
or
ljmp
lds
jmp
lret
or
sbb
ficompl
fwait
inc
fbstp
fsubrs
mov
repnz
stc
lds
clc
mov
jne
scas
decl
cmp
inc
out
leave
mov
stos
xor
dec
jmp
pop
xchg
imul
imul
in
xlat
jno
sub
ffree
xchg
inc
push
jbe
sbbl
jmp
ljmp
rolb
xor
fstpl
scas
or
sbb
pop
lret
xchg
lds
add
sbb
jl
xor
cld
inc
addl
sarl
mov
or
fstpl
mov
subb
pop
dec
push
outsb
shr
stos
sbb
cmp
shll
aam
and
push
shl
mov
icebp
mov
xor
cwtl
stos
iret
shr
mov
idivb
mov
mov
or
cmp
adcb
dec
insb
popa
or
cld
add
inc
mov
fisubrl
fxch
arpl
int3
fstpl
loope
sbb
dec
sahf
xchg
test
mov
test
xor
or
inc
cwtl
xor
leave
in
push
add
xchg
inc
inc
aad
mov
xchg
inc
mov
lds
gs
aaa
xlat
inc
dec
fldt
push
pop
adc
insl
mov
jp
jns
pop
dec
push
xlat
mov
loopne
decl
jg
xor
xchg
and
mov
out
or
add
cmc
sarl
int
jg
add
stos
lds
jl
mov
xchg
pop
push
push
out
aam
cs
or
push
jae
sti
jl
sbbl
cbtw
push
push
repnz
popa
rcl
jmp
fcomps
xchg
inc
shll
xor
pop
in
imul
sbb
sbb
mov
je
and
or
add
scas
cmp
gs
lcall
dec
testl
adc
int
inc
jno
loopne
test
and
xlat
jmp
shl
loopne
sub
dec
and
icebp
rcrb
lahf
mov
iret
cwtl
mov
aad
ret
ficoml
cli
push
fincstp
cmp
jno
cltd
jae
shl
push
push
adc
nop
pop
leave
pushf
aas
sbb
cmp
jmp
adc
scas
in
sbb
movsb
data16
dec
lds
inc
in
mov
shrl
lea
mov
dec
push
sbb
fsts
iret
adc
inc
inc
pop
shlb
sub
sbb
sub
repz
inc
imul
hlt
test
jmp
fld
daa
jb
add
je
test
add
cs
adc
pop
les
cmp
ret
sbb
daa
shll
jne
movsl
insl
jns
mov
neg
sbb
pop
addr16
push
sbb
cmp
adc
adc
fdivl
xor
out
std
jbe
leave
repnz
bound
lods
pop
jns
or
pop
mov
push
movsb
push
in
mov
mov
jp
mov
jae
inc
push
jle
lds
mov
pop
sbb
int
insl
mov
rcll
sahf
incl
cmpsl
insb
sbb
ret
neg
push
out
pop
add
sbb
nop
cmp
daa
js
pop
imul
add
sbb
mov
fcmovnb
test
movsb
mov
mov
cmp
jo
mov
lds
stc
ror
xor
mov
test
lods
shrl
push
mov
mov
sbb
insl
fistpll
repz
jge
mov
in
leave
mov
dec
add
inc
mov
sbb
fwait
lea
and
and
adc
pop
pop
in
lds
lods
add
and
ljmp
xchg
and
dec
or
mov
xor
enter
cmp
fdivs
enter
test
fimull
fxch
test
or
lret
fstl
int
add
inc
lcall
outsb
movb
xchg
pop
ror
mov
icebp
test
pop
dec
dec
xchg
sbb
icebp
push
dec
fisttpll
mov
mov
cmp
push
icebp
repz
out
sub
lret
adcb
mov
dec
cs
xchg
iret
ljmp
fnstenv
ja
dec
mov
daa
cmp
int
fcmove
rcrl
add
and
ljmp
out
fisubrs
cmp
stos
ljmp
lods
adc
xchg
jecxz
mov
mov
xor
adc
fcomi
sub
adc
sbb
xor
in
pop
mov
sub
jno
jb
aam
test
loop
dec
pop
stos
or
int
xor
mov
ret
pop
xchg
sbb
xchg
cs
mov
dec
inc
loope
dec
ja
es
iret
pop
mov
inc
jmp
leave
push
mov
clc
push
or
mov
xlat
mov
bound
in
fs
push
mov
pushf
jne
push
push
icebp
sbb
sahf
xor
lds
int
fnstenv
push
mov
sarl
mov
and
test
insb
call
mov
aad
fstl
inc
adc
or
enter
call
mov
or
mov
push
div
scas
test
mov
jae
cmp
vpaddq
pop
and
or
movsl
roll
push
aam
mov
push
lcall
pop
ret
pushf
jmp
pushf
jnp
mov
stos
dec
sbb
aad
in
test
aad
push
cmpl
and
sarb
inc
jae
add
jmp
and
jmp
fucomip
in
mov
jmp
aam
int
push
cmc
sbb
rorl
mov
sub
adc
stos
jecxz
rcll
push
repz
stos
ret
mov
stos
xor
add
add
leave
pop
jns
scas
dec
mov
pop
ficomps
add
mov
cwtl
xor
insb
ret
icebp
mov
aaa
icebp
mov
dec
adc
std
sub
push
xor
movsb
repnz
inc
mov
fidivrs
scas
ret
out
cmp
icebp
mov
lods
push
int3
test
sbb
cli
lea
pop
or
mov
lret
xchg
cmpsl
dec
test
sahf
mov
inc
mov
orl
popa
add
stos
dec
sub
test
lds
test
fcomps
adc
jnp
jmp
lret
push
xchg
les
sub
sahf
jecxz
imul
leave
dec
rol
push
gs
shr
jae
lret
ret
push
sbb
ficompl
jae
sbb
wbinvd
jge
pop
sub
jae
dec
fsubrs
adc
cmp
mov
and
mov
pushf
jb
ja
mov
fadd
or
xchg
mov
sahf
mov
add
mov
rclb
sbb
mov
inc
inc
pop
xor
into
add
cwtl
add
sub
dec
aad
jge
jne
sbb
leave
ja
and
decl
jne
jns
repz
divb
inc
stos
xchg
jno
pop
jmp
popf
mov
cmp
sbb
add
push
xor
sti
inc
popa
xor
out
insb
int3
inc
push
cmp
pop
mov
mov
dec
xor
lds
mov
jb
mov
xor
or
leave
dec
xor
test
rcrl
add
mov
dec
sbb
test
rcrl
jge
mov
movsl
adc
sub
and
roll
lret
rolb
adc
jnp
mov
test
fcmove
int3
js
inc
pop
sbb
icebp
mov
push
dec
imul
mov
js
fisubs
aam
fcompl
jecxz
add
fucomip
sarb
jb
dec
pop
inc
stos
mov
pop
icebp
jae
fimull
xchg
mov
sub
mov
cmpsb
or
stos
mov
lds
icebp
or
mov
xor
shll
jmp
add
xchg
sbb
pushf
cmp
mov
cmp
jb
xor
nop
push
dec
aas
std
popa
mov
iret
aam
lds
cmp
xchg
enter
add
pop
add
scas
inc
push
rorl
test
add
dec
sbb
int
xor
int
roll
dec
repz
mov
inc
mov
sbb
inc
pop
pop
sti
push
xlat
test
adc
inc
js
pop
test
mov
sub
lods
cmc
push
pop
and
jle
inc
push
rol
push
gs
mov
mov
sbb
or
fadds
push
xchg
jmp
decl
scas
lea
rolb
cltd
mov
xlat
xlat
ret
in
out
inc
fs
push
sbb
cmc
outsl
aad
jb
imull
mov
loopne
push
dec
xor
roll
dec
cmp
fucomi
inc
lret
jg
popa
movsb
scas
sti
rcl
jecxz
push
std
dec
frstor
pop
popa
and
ret
xor
mov
xchg
adc
leave
pusha
ret
int
vmovsd
push
and
int
ss
orb
leave
dec
xchg
inc
mov
aas
xchg
xorb
jg
inc
push
lods
ret
push
mov
inc
mov
rorb
xor
mov
mov
enter
int3
push
outsl
cmpsb
mov
aam
int3
jo
mov
cmp
nop
xchg
adc
lock
jmp
push
pop
cmpsb
les
push
jle
sbb
insl
divb
clc
or
int
shrl
cmp
call
mov
xor
sub
add
xlat
add
ret
mov
ljmp
bnd
mov
loop
mov
std
popa
testl
arpl
push
scas
mov
jb
jmp
jp
adc
or
add
outsb
mov
adc
mov
into
xor
rolb
inc
ret
xchg
cmp
inc
mov
mov
test
sbb
jg
mov
leave
leave
xchg
in
add
or
mov
xor
xorl
les
lahf
int
mov
add
sub
add
loop
add
leave
add
dec
int
fistps
adc
aad
jbe
jmp
pop
mov
xor
jecxz
iret
fstpl
xor
mov
and
cmp
pop
mov
mov
ret
int
mov
xor
leave
mov
daa
jecxz
out
faddp
sub
stos
cltd
pop
push
cmp
outsb
cmp
adc
test
in
add
jne
add
outsl
inc
ret
es
loop
jmp
test
or
cmc
ss
jbe
mov
xchg
mov
jp
sub
add
jno
or
or
push
std
in
dec
mov
xchg
sbb
loop
push
icebp
ss
adcl
popa
pop
daa
jmp
and
popa
sub
test
fisttpl
cltd
cli
sahf
or
fiadds
shlb
std
ss
loop
sub
ret
jle
mov
repz
sub
add
scas
mov
push
cs
xchg
stc
popf
mov
dec
jne
nop
mov
test
pusha
xchg
lcall
and
mov
negl
sub
xchg
dec
arpl
sti
call
mov
dec
aas
hlt
icebp
cld
aaa
stc
daa
in
enter
int3
dec
dec
ret
test
add
movsl
add
arpl
mov
out
mov
and
add
push
rcr
repnz
mov
cmp
fsubrs
rcr
cmp
dec
mov
mov
shrl
mov
movsb
inc
or
stc
test
test
jns
cmp
jb
lds
push
stos
xorl
sahf
and
lock
and
icebp
in
xlat
arpl
test
imul
sub
sahf
leave
test
push
jecxz
jae
aaa
icebp
push
call
rol
fidivrl
stos
rcl
int
mov
call
inc
mov
xor
mov
leave
sub
enter
sarb
jg
and
xor
jno
mov
stc
adc
std
sub
pop
fs
pop
dec
sbb
test
dec
cli
and
sbb
xchg
aas
shll
mov
dec
cmc
adcb
push
xor
lret
mov
lret
inc
push
into
lret
inc
xchg
add
mov
cmp
cwtl
lret
mov
sbb
pop
mov
int
pop
and
xor
jne
and
ja
xor
pop
sbb
lret
dec
repnz
insl
xor
icebp
jae
mov
fisttpl
add
shlb
xchg
rolb
int
loop
sti
int
cli
mov
and
imul
xor
roll
lods
popa
inc
add
sub
out
mov
jnp
add
fucomp
popf
fcmovnbe
sbb
fnsave
mov
test
data16
and
lods
movsb
mov
sti
pop
rcrl
sub
inc
or
and
add
dec
bound
arpl
fadds
add
je
data16
cwtl
jne
and
push
out
or
pextrw
cmpsl
fldt
add
inc
stos
in
mov
and
lret
mov
int
in
and
and
test
mov
mov
jo
mov
sysenter
lock
mov
add
fiaddl
mov
push
pushf
scas
loope
and
sarl
cld
popf
dec
mov
incl
or
sbb
cld
ljmp
push
and
push
arpl
call
cwtl
xlat
insl
int3
stos
movsl
stos
push
xor
dec
mov
adc
lods
cmp
lock
jge
jmp
out
inc
add
icebp
xchg
xchg
jmp
jns
sbb
into
jb
rcrl
jns
add
mov
inc
mov
mov
sbb
cwtl
mov
cmpb
jnp
jo
fadds
pop
das
std
lahf
mov
movsl
cmpb
jns
cmp
jmp
mov
push
mov
push
and
jmp
sbb
out
shrl
mov
add
cmp
ror
and
push
neg
jbe
movsl
dec
dec
test
mov
pusha
dec
cwtl
je
mov
sub
std
sub
push
movsb
mov
ljmp
repz
push
cmp
dec
sub
cmp
mov
add
lahf
adc
cmp
in
lods
or
sbb
jmp
pop
enter
je
or
dec
out
loope
inc
loop
push
in
jle
lock
cli
mov
dec
lods
mov
mov
jmp
mov
mov
mov
cmp
lret
add
mov
cmp
push
dec
mov
sbb
lods
daa
mov
sbb
xchg
adc
inc
xchg
dec
sbb
add
and
popa
std
mov
push
xchg
mov
and
testb
out
pushf
in
cltd
mov
lock
xchg
gs
jecxz
mov
loopne
mov
je
xchg
addr16
in
fstps
outsl
cmp
loopne
dec
sub
inc
mov
dec
aam
xor
or
rolb
lahf
fisubl
jno
jge
xor
xor
sbb
sbb
adc
jl
mov
jbe
xor
fmuls
and
jmp
jno
xor
mov
lea
icebp
mov
push
inc
xor
cmp
shrl
test
scas
test
lds
cmpsb
stos
jmp
or
mov
jecxz
ja
cld
inc
cltd
out
enter
loop
les
shrl
pop
xchg
jmp
sub
xor
cmpsl
sbb
sbb
enter
aam
cmpb
ror
sbb
cwtl
popa
out
push
xor
lcall
rcrb
scas
mov
inc
jo
pop
cmpl
insb
or
mov
or
mov
xor
dec
sub
inc
lahf
and
mov
int
sahf
jle
pop
mov
push
fwait
inc
push
xor
icebp
push
es
stos
push
in
xchg
mov
push
movsb
dec
add
popa
push
and
leave
add
adc
adc
repz
jmp
mov
and
popl
movsb
adc
cmc
xchg
mov
aaa
aad
aaa
outsb
aas
mov
cmp
dec
addl
rorl
jg
sub
testl
scas
pop
ds
fdivs
adc
jns
mov
xchg
sbb
pop
cmp
mov
mov
mov
sbb
ljmp
insb
mov
and
les
dec
leave
adc
jmp
mov
flds
ljmp
mov
mov
inc
gs
testl
ljmp
repz
fwait
fs
xlat
test
mov
lds
jns
add
fst
xor
inc
mov
jecxz
mov
leave
icebp
sar
stc
icebp
cmc
or
add
mov
sbb
jle
or
sbb
lcall
mov
and
and
sub
cmp
adc
adc
inc
cmpsl
shr
mov
mov
jmp
cmp
push
int
lret
and
mov
orb
mov
and
or
xor
sub
repz
loope
adc
or
mov
mov
lret
pop
dec
xor
ret
push
clc
int
repnz
dec
add
dec
xor
rcr
aas
push
jmp
int
call
inc
andl
shrl
mov
fldcw
mov
mov
xor
cmp
pop
adc
mov
fcoml
test
add
lea
push
rol
mov
add
stos
cmc
int3
fists
int3
jno
js
push
fcomp
jb
shlb
cmp
xor
mov
movsb
mov
scas
dec
aas
test
cmp
test
imul
repz
jbe
dec
mov
mov
aam
pop
leave
fadds
sbb
hlt
jge
sbb
sub
int
or
or
outsb
xchg
xor
or
mov
aad
pop
push
aad
mov
call
push
and
divb
mov
and
adc
pop
nop
outsb
add
push
push
shl
and
pop
fiadds
into
stc
mov
aaa
mov
fsub
mov
addb
stos
pop
mov
fldl
or
pop
dec
std
clc
and
or
clc
rol
pop
mov
clc
hlt
fnstsw
push
add
clc
and
mov
or
jmp
adc
fs
mov
dec
mov
mov
test
push
icebp
mov
shlb
in
stos
sbb
xchg
loope
addb
sbb
aad
sbb
mov
fsub
inc
push
xor
std
add
xor
add
pop
std
aas
dec
insb
in
add
xchg
or
add
lods
mov
sbb
mov
jbe
aad
fimuls
inc
add
cmpsb
test
cmpb
mov
sub
movsl
and
mov
lea
push
add
sub
icebp
sub
rclb
loop
loope
add
mov
push
pushf
pop
outsb
loope
inc
xor
test
dec
out
sub
push
mov
into
es
bound
push
sbb
push
out
hlt
stc
in
mov
aas
mov
dec
pop
jnp
test
sub
jns
shl
mov
pop
fucomi
cltd
call
shr
jno
sub
add
fldl
cmp
sbb
cli
push
mov
popa
mov
fs
leave
fdivl
popf
mov
dec
sub
jmp
test
dec
mov
test
ret
pop
push
mov
mov
jle
cmpsb
adc
stc
lret
xchg
jle
aaa
jg
jp
push
stos
jae
int
mov
stos
jo
sti
mov
pop
sbb
and
jle
shl
or
movsl
popa
mov
mov
lret
aas
into
int
mov
jmp
sub
ja
test
rcr
in
rcrb
cmc
sbb
inc
or
fstpl
sarl
xor
add
ror
test
test
ljmp
mov
cmp
jnp
lds
push
add
and
insb
add
mov
shrb
adc
inc
bound
push
and
adc
sbb
sbb
pop
stos
call
inc
shr
std
daa
std
pop
inc
lret
mov
aaa
pop
sub
hlt
mov
mov
jl
stos
test
and
cmc
dec
mul
jmp
pop
hlt
mov
jecxz
fstps
xor
sahf
rol
vlddqu
or
loope
rol
jl
in
stos
mov
insl
js
rolb
loop
pop
or
mov
mov
js
gs
sarb
decl
xchg
jg
and
jnp
mov
rclb
pop
mov
xor
pusha
push
jb
shrl
loop
lods
js
inc
push
scas
shrl
mov
andl
nop
fdivs
and
mov
adc
push
addr16
stc
aad
scas
insb
jns
cmp
dec
cltd
fidivs
gs
js
mov
mov
cwtl
cmp
loope
mov
adc
movsl
jbe
enter
sub
push
mov
sti
aad
insl
gs
push
mov
push
cmp
ja
sub
lret
add
into
leave
sub
add
sub
rcr
xor
inc
dec
lret
dec
push
shl
gs
fs
or
lcall
or
jbe
add
xchg
ret
xchg
pop
rorl
push
dec
gs
or
jl
lret
movsl
sub
jmp
xor
jo
and
mov
jo
ss
dec
xchg
movsw
xor
xchg
adc
ret
pop
scas
lock
and
sub
mov
cmpsb
insb
mov
cmp
roll
mov
ret
and
mov
sub
iret
cmpsl
nop
pinsrw
and
dec
cli
scas
fnsave
lret
pop
outsb
jmp
add
in
or
aad
jne
movsb
shlb
nop/reserved
xlat
dec
cs
cmp
or
mov
push
dec
fwait
cmp
mov
push
test
jns
shrl
xor
jb
dec
pop
push
rolb
ss
int
inc
xchg
mov
cli
mov
lcall
jne
and
into
lcall
and
pop
in
lds
pop
repz
test
cs
fcmovnbe
pop
shll
arpl
fdivrs
rclb
add
repnz
dec
dec
cmc
cmc
shll
mov
enter
ss
outsb
mov
jecxz
xlat
mov
pop
mov
inc
and
or
inc
jne
xor
test
add
and
cmp
push
and
pushf
and
mov
lret
mov
or
push
movsb
dec
aaa
sbb
subl
jmp
leave
mov
mov
js
jle
ljmp
lea
cmp
and
or
aad
in
lret
loope
insb
jg
jmp
mov
dec
pop
xor
mov
or
add
lock
mov
jne
push
mov
testl
daa
add
popf
ljmp
sub
inc
and
into
xor
in
mov
lds
cmc
dec
imul
mov
jmp
mov
mov
lahf
inc
call
push
imul
and
add
add
mov
into
pop
int
fisubrl
ret
sbb
in
or
data16
push
sub
mov
sub
rorl
ret
stos
rorl
lret
xchg
sbb
popa
shrb
pop
cmp
ss
dec
push
test
inc
adc
lret
inc
xchg
push
push
cmp
aas
adc
xchg
aad
and
ret
rolb
sbb
sti
sbb
mov
mov
in
into
cmpsl
lock
lcall
addr16
xchg
test
inc
sbb
and
mov
fstl
mov
repz
jo
test
adc
aam
rcll
inc
sti
ljmp
stos
repz
push
dec
cmp
xchg
lock
mov
xchg
stos
or
jl
leave
push
sbb
and
pushf
push
push
sub
popa
inc
xlat
das
push
mov
mov
xor
cmpsb
cmpl
in
insl
mov
mov
test
fs
inc
fabs
lods
sub
lods
lock
repnz
std
cli
test
insl
mov
jmp
outsb
cmp
aam
das
mov
lret
mov
test
psubusw
xor
aam
inc
pop
test
dec
aad
lcall
iret
stos
sar
popf
xchg
negb
mov
pop
mov
gs
or
aas
shr
fbstp
xchg
fbstp
push
cmp
dec
mov
push
les
inc
add
adc
shrl
outsb
pop
cmpsl
add
movsl
cmpsl
add
jle
add
or
aam
push
ret
test
out
in
adc
fs
and
ror
bsr
sbb
std
lret
decl
cmp
ljmp
mov
movsb
int3
stos
bound
jl
inc
imul
jge
stos
pop
imul
repz
inc
add
mov
jo
ret
dec
imul
data16
insb
into
inc
xchg
xchg
cmp
stos
xchg
call
inc
in
adc
xor
add
jno
mov
rcrl
mov
sti
repz
in
enter
push
rorl
push
inc
or
shl
or
scas
aad
rcr
xlat
rcl
or
fld
scas
and
sbb
xorl
jb
insb
out
mov
jmp
mov
lds
das
filds
test
mov
lret
jnp
and
out
and
fcmovnbe
imul
rorw
into
aad
fcmovnbe
je
xor
mov
dec
xor
ja
sbb
nop
sub
imul
xchg
insl
nop
and
mov
mov
ljmp
mov
inc
mov
sub
mov
mov
rorl
xor
cmc
popf
not
pop
push
push
pcmpgtd
inc
lcall
mov
adc
jae
mov
icebp
pop
in
pop
adcb
cmpl
cmp
icebp
and
pop
filds
cwtl
adc
addb
push
test
xchg
and
xchg
mov
mov
jae
lods
aam
pop
push
cmp
repnz
or
push
inc
push
inc
push
xlat
je
fisttpll
rol
leave
ljmp
xorb
aaa
lods
shrl
pusha
lods
imul
loope
and
xchg
pop
movsb
cmc
mov
dec
inc
mov
in
mov
outsb
add
outsl
loopne
mov
mov
sub
cmp
mov
sub
push
mov
push
jne
stos
rol
dec
sbbb
xor
inc
andb
mov
inc
push
mov
mov
sar
adc
sub
les
daa
push
or
je
fldl
stc
or
out
xchg
sbb
push
sbb
test
sha1msg1
cs
add
adc
mov
mov
fdivs
sub
iret
enter
or
jl
rolb
adc
or
jne
and
cltd
psrlq
dec
sub
xchg
jb
stc
inc
test
sub
pop
loopne
stc
js
repnz
es
inc
adc
loope
and
in
ljmp
jns
jno
dec
sub
pop
mov
xor
scas
out
movsb
jge
ds
stos
ret
xchg
addr16
rcl
incb
add
fcmovu
mov
jae
dec
push
adc
lds
cmc
test
in
mov
aad
in
jecxz
xor
js
pop
or
xor
cmp
or
subb
iret
pushf
scas
test
inc
sbb
fmuls
add
cmpsl
sarl
sub
xadd
push
sbb
leave
xor
jbe
std
ret
insl
add
sbb
push
les
mov
sub
xchg
mov
dec
mov
inc
xor
enter
jp
fdivrs
adc
add
mov
ret
jb
add
push
in
and
xor
jo
fldt
jno
push
gs
aas
inc
push
aaa
insl
mov
or
test
rcl
mov
sub
push
movsb
call
movsb
or
lds
nop
lahf
mov
pushl
inc
mov
in
ret
shl
add
mov
mov
mov
inc
pop
jb
movsl
and
add
out
sub
repz
inc
mov
jecxz
fstpl
popa
test
test
cmpsb
xorb
lods
inc
jo
sbb
jo
ljmp
sub
dec
sub
mov
xchg
lret
and
mov
adc
mov
jnp
push
sub
leave
leave
repz
loope
xchg
int
push
test
inc
xchg
sbb
mov
out
add
xor
out
pop
add
push
sub
mov
imul
repz
stos
lea
inc
mov
mov
mov
pop
scas
dec
ljmp
mov
in
shll
add
push
test
or
inc
repnz
and
mov
sbb
ret
xchg
stc
add
sbb
cli
fldcw
dec
je
in
sbb
fcmovnu
dec
std
mov
jle
fcmovne
cli
or
or
xor
push
push
fs
adc
out
push
dec
or
aad
bound
jbe
add
movl
jmp
fbstp
push
ljmp
cmp
sbb
rorb
xlat
mov
loope
mov
lock
xor
dec
les
jb
lods
lods
dec
mov
adc
loop
add
jmp
mov
mov
add
aad
cwtl
test
fstps
mov
push
pop
testb
das
lahf
fsub
lcall
scas
out
mov
dec
mov
adc
xor
adc
fdivl
cmp
pop
xor
jne
mov
fdivl
inc
rolb
pop
test
das
dec
pop
and
adc
mov
jl
xchg
lds
popa
aam
push
shrb
mov
cmp
sub
rcrb
arpl
fisubs
mov
add
add
push
in
test
idivb
cmc
shl
xchg
roll
into
fcomps
repnz
cltd
adc
sub
je
and
sbb
inc
jb
test
cmp
leave
mov
sub
stos
push
fmuls
leave
add
in
jge
mov
int
cmc
fs
cmp
inc
or
loope
int
es
push
aaa
or
sbb
ret
mov
enter
ret
insb
lds
pop
mov
mov
jne
and
fcoms
scas
mov
test
in
ja
mov
popl
cmp
pusha
loope
test
in
rcll
aaa
pop
dec
pop
outsb
inc
mov
jecxz
mov
test
dec
or
push
ljmp
int
mov
push
loop
ret
hlt
or
sub
mov
push
pop
jecxz
jo
add
dec
les
inc
cld
inc
adc
fldcw
push
lahf
outsl
test
push
imul
push
dec
xchg
aas
xor
or
or
aam
xchg
push
xchg
lods
ja
pop
push
adc
push
jmp
mov
fs
dec
or
sti
nop
push
leave
mov
xchg
sub
leave
leave
jmp
and
rclb
or
jnp
inc
insb
inc
stos
ss
inc
inc
cltd
inc
sbb
imul
sbb
mov
pop
add
xor
es
mov
lahf
loopne
in
inc
inc
jmp
fstps
hlt
leave
dec
icebp
jno
adc
fnstenv
call
xchg
mov
xchg
add
out
push
dec
vmovshdup
or
lods
shl
jb
icebp
or
mov
adc
inc
rolb
pushf
pop
sbbb
loop
shll
fnstsw
lahf
jb
mov
sub
dec
enter
jb
stc
fwait
push
lret
pop
pop
mov
loopne
in
fcomi
jno
mov
xrelease
adc
jecxz
ds
sub
cwtl
pop
sarb
sub
jp
jb
jle
enter
outsl
cmpsl
dec
movd
imulb
and
ret
mov
fldcw
jg
adcl
in
mov
stos
or
rcll
pop
jno
jecxz
sbb
int
xor
mov
nop
mov
sub
in
ret
clc
jmp
roll
stos
mov
imul
pop
rcrl
fldenv
lds
pop
add
loop
add
testl
int3
inc
adc
jne
mov
movsl
fisttpll
sar
test
mov
les
aam
aad
inc
and
mov
inc
loopne
mov
mov
jl
popf
pop
iret
fwait
mov
jle
lock
adc
lahf
jae
int
outsb
pop
iret
sbb
aam
inc
adc
lcall
xor
xchg
mov
std
and
mov
mov
push
xchg
in
mov
sti
jle
or
sub
out
xor
movsl
jb
cwtl
mov
dec
add
ljmp
mov
sbb
stos
sub
fs
adc
dec
into
ss
addr16
pop
adc
call
mov
push
fwait
in
push
out
test
and
into
hlt
int
xlat
test
dec
cmc
pop
ficoms
aas
xchg
xor
int3
es
xlat
inc
xchg
aaa
fdiv
dec
mov
push
les
cli
jo
rol
ret
pop
fcom
mov
iret
roll
repz
mov
imull
lret
push
in
pop
add
and
mov
gs
in
ja
fs
faddl
mov
jns
aam
pushf
mov
lods
jb
loope
les
in
out
rol
arpl
sub
test
push
test
inc
and
test
test
loope
xor
insb
out
xchg
call
xchg
out
test
dec
faddl
xchg
dec
fcomps
cld
lds
test
movsb
push
add
mov
sets
or
jmp
mov
cmc
ret
or
stos
xor
adc
sbb
cmpsb
nop
push
sub
fbld
jno
xor
push
or
dec
mov
in
inc
xchg
lret
dec
fidivrl
mov
or
mov
add
scas
addr16
and
cmpps
loope
shrl
lret
push
popf
orb
add
or
push
je
leave
add
lds
mov
mov
nop
pavgw
sbb
loopne
fsubr
inc
test
cmpsb
iret
rorl
hlt
ret
out
lret
andb
out
lret
bound
nop
leave
jb
mov
jns
imul
dec
fnsave
adc
dec
jle
addr16
add
dec
pop
mov
loopne
add
imul
popf
test
ror
jmp
adc
add
or
or
lds
cld
nop
inc
not
ror
insl
mov
pushf
dec
iret
jmp
insb
cmp
adc
repz
loopne
shl
mov
push
cmp
aaa
rcrl
jmp
sub
dec
out
sub
lea
lret
fmul
sar
mov
mov
push
jns
mov
xor
in
push
or
and
or
mov
and
fs
mov
mov
stos
fdivrl
dec
mov
mov
icebp
add
dec
cmpsl
jb
jl
je
enter
mov
dec
xchg
cmc
repnz
sub
adc
inc
out
add
jae
subb
nop
test
jb
cmp
sub
shld
inc
les
in
jle
enter
sbb
mov
ret
and
xor
or
pop
test
ljmp
out
rcrl
arpl
mov
add
repnz
test
popf
lret
test
sub
xor
stos
addr16
repnz
mov
sbb
test
mov
loopne
inc
int
inc
pop
lcall
shll
leave
jns
pause
call
jo
fnsave
mov
bnd
dec
or
loop
inc
decb
es
inc
mov
push
popf
mov
sub
rclb
mov
test
lods
cmp
mov
mov
mov
mov
xchg
mov
mov
clc
or
data16
cmpsb
outsl
xor
jo
jb
mov
cmpsl
push
stc
insl
incl
out
mov
mov
xor
cmp
divl
pop
ja
pop
sbb
xchg
sub
inc
jno
add
jl
sub
sahf
jbe
xor
das
mov
jbe
push
lret
xchg
iret
pop
and
pop
fmul
add
daa
mov
arpl
stos
loop
aad
imull
dec
mov
test
popf
pop
out
sub
inc
xor
jmp
sbb
cmpsb
cmp
cmp
jo
and
mov
adc
pop
pushf
shlb
jae
cwtl
fadd
inc
lret
and
int3
lret
mov
jb
lret
jae
fistl
fdivr
stos
iret
or
incb
rcll
pusha
xor
mov
mov
dec
jecxz
int
gs
test
cmp
xorl
mov
cli
lods
repnz
pop
imul
and
mov
dec
push
imul
stc
sahf
xor
dec
repz
ret
add
cli
stos
push
sbb
add
xor
xor
cmp
add
rcrb
cmc
xor
nop
pop
xor
into
xor
xor
xor
mov
hlt
leave
mov
jecxz
data16
inc
mov
sub
mov
js
cli
inc
cmpsl
cli
hlt
rcr
jb
sub
and
sbb
rcll
jl
push
jle
loope
mov
in
dec
movsl
stos
lds
add
ljmp
cli
or
daa
rcr
mov
cli
mov
adc
cwtl
es
push
das
sbb
jp
out
mov
xor
mov
int3
xlat
sub
call
cmpsb
std
mov
push
mov
int3
int
es
mov
and
hlt
lds
std
xor
test
inc
add
aaa
jmp
into
das
dec
pop
and
xor
popf
in
int3
dec
icebp
push
cmp
in
xchg
fistpll
sbb
ret
cltd
iret
jo
fstps
cmp
mov
jno
int3
mov
inc
cld
mov
pushf
pop
int
fsubrl
xchg
pop
push
jge
push
ret
mov
dec
mov
fidivs
mov
jmp
rcll
xchg
jno
test
ja
outsl
pushf
ffree
aad
ja
xor
add
rcrb
popf
sub
sbb
push
loopne
cmp
push
repz
pusha
sti
jno
pop
sbb
sahf
dec
or
push
jno
repz
add
adc
xor
movsb
cmp
mul
jmp
cmp
mov
mov
jg
mov
fidivs
jb
jae
pop
fidivs
mov
rorb
hlt
jle
sbb
pop
sbb
loopne
add
push
mov
shll
ret
xor
xorl
cli
fwait
push
fnsave
xor
lds
clc
add
cld
and
jg
jbe
test
fmull
pop
orb
push
mov
jb
andb
popf
xchg
push
inc
xchg
fisubrs
mov
divl
lea
mov
mov
xchg
in
mov
aas
popa
out
stos
pop
scas
lret
cmc
movsl
dec
out
int
jecxz
lret
push
test
mov
leave
stos
rcrl
sbb
lret
lret
mov
in
lea
inc
nop
or
xchg
lahf
add
not
sti
icebp
cli
jmp
mov
cli
aam
aaa
add
adc
aad
jecxz
mov
adc
mov
pushf
mov
les
iret
dec
and
cltd
imul
rorl
inc
mov
inc
mov
mov
iret
pop
jge
outsl
pop
loopne
in
mov
sbb
out
clc
and
pop
pushf
mov
popf
add
mov
lock
mov
enter
xor
shll
fdivs
mov
xchg
vpmullw
ror
add
inc
cwtl
inc
vpsllq
push
shl
aas
insl
xchg
xor
mov
pop
test
in
pop
mov
hlt
mov
repnz
mov
pop
sub
jmp
repz
mov
xchg
mov
mov
mov
push
sbb
sbb
imul
pop
addb
add
ds
jns
int
rcr
icebp
lds
lock
sub
and
ret
jle
cmp
imull
jbe
std
xor
sbb
shrl
xchg
dec
fstps
mov
popf
xchg
roll
mov
jb
jno
out
cmp
xor
and
and
mov
mov
leave
rol
icebp
mov
pop
sbb
fyl2xp1
push
mov
stos
lock
jl
popa
daa
add
rol
cbtw
ret
mov
inc
ret
rorl
test
popa
push
add
dec
mov
dec
iret
shll
xorb
rolb
adc
sbb
outsb
jbe
bound
inc
xor
addb
push
push
jecxz
add
imul
jb
mov
icebp
outsb
out
jne
test
popl
xchg
leave
ret
push
mov
addr16
mov
push
into
loope
xlat
jmp
xor
xor
lds
test
outsl
adc
int
pushl
pop
in
jmp
push
jmp
aam
lret
mov
aam
or
push
lds
sub
cmpsl
stc
imul
stos
les
fsts
imul
dec
push
sbb
jmp
leave
mov
dec
aaa
inc
or
add
test
shll
dec
jbe
insb
add
or
into
mov
cmp
shll
loope
sbb
in
loope
inc
and
or
sub
xor
fldl
daa
jl
rcrl
push
mov
stc
test
or
sbb
lret
mov
or
jae
fldl
aad
jmp
inc
mov
into
jle
jo
rcll
iret
lock
rorb
rcll
add
jge
and
dec
pop
data16
push
mov
or
pop
mov
push
enter
das
ds
or
stos
or
mov
inc
adc
xchg
ljmp
addr16
adc
or
add
lcall
test
int3
and
icebp
sbb
sub
push
adc
mov
mov
adc
out
push
mov
loope
sbb
je
int
shl
movaps
dec
shl
leave
cld
sub
shrb
test
jne
inc
icebp
dec
lret
outsb
push
add
dec
fdiv
push
int
in
stc
inc
std
mov
sub
lret
jbe
in
pushf
ret
mov
insl
jb
bnd
sarb
jmp
out
jg
mov
not
das
push
mov
fcmove
outsl
push
mov
jecxz
fnstenv
cmp
enter
divl
cmp
jno
ret
subl
sub
push
sbb
popf
vandnps
stos
or
dec
in
jg
cld
loopne
in
int3
movsl
fdiv
xor
xchg
rolb
test
add
fcomip
mov
int3
or
arpl
pop
jecxz
rcll
inc
icebp
dec
das
jae
mov
and
dec
sbb
ja
cli
iret
lahf
and
and
dec
pop
cmpsl
faddp
loope
mov
aaa
xor
adc
test
jmp
repnz
fisttpll
ja
mov
or
nop
pop
pop
jmp
or
jge
mov
sub
scas
repnz
pop
repz
sbb
mov
sub
enter
inc
es
xor
pusha
xchg
sar
aad
or
dec
jbe
and
into
test
int
stos
enter
mov
mov
test
jmp
or
in
jecxz
loop
je
adc
xor
cmp
test
rorb
xchg
mov
xorl
lods
idivb
pusha
mov
out
stos
aad
xorl
and
push
rorb
into
pop
sub
push
ljmp
lret
fbstp
sarl
xchg
rcrb
shrb
jge
inc
jge
imul
lret
xchg
aaa
mov
fnstsw
add
jmp
lret
jno
or
sbb
shrl
rcrb
out
xchg
ret
add
sbb
ret
sarb
pop
inc
out
ss
addr16
insl
imul
mov
fsubr
mov
mov
add
xor
lods
xchg
mov
add
cld
popa
pop
loop
inc
in
lea
inc
jo
cpuid
in
in
orb
fistl
and
mov
mov
jmp
shr
cs
rcl
add
inc
iretw
mov
ds
and
ret
fcomip
stc
dec
stc
inc
xor
add
cltd
mov
stos
rorb
aas
push
mov
pop
lds
loopne
std
xor
daa
cmpsb
in
clc
jp
push
adc
aad
out
mov
rol
sarl
jns
sub
lret
push
push
mov
aad
lea
mov
or
rcrl
and
adc
aad
shlb
sti
cwtl
fchs
shlb
hlt
leave
shlb
lret
cmp
adc
pop
cmp
xor
icebp
pop
cmc
rorl
or
std
and
xor
jle
xchg
rcrb
jmp
inc
sub
mov
in
lahf
cmp
mov
xchg
ret
fidivl
jo
icebp
dec
aas
sar
mov
dec
mov
mov
cmp
jns
lds
pop
dec
test
mov
mov
mov
xor
std
jb
push
cmc
jmp
call
pusha
add
sahf
cmp
clts
in
jb
in
fucomp
cmpsl
dec
inc
insl
or
iret
lea
cs
aad
xchg
flds
mov
xchg
add
std
fs
rol
neg
xlat
lds
inc
cs
sar
pop
and
dec
repnz
sub
lods
jecxz
dec
xlat
mov
ret
ss
loope
xor
add
rcll
xlat
pop
stos
psubsw
xchg
adc
jne
pop
jo
xor
aas
xor
iret
or
les
dec
loope
sbbb
jle
adc
jbe
fsubs
push
in
inc
stos
sub
lock
pop
jmp
arpl
and
pop
jecxz
movsl
enter
cmp
add
mov
cli
loopne
push
popa
mov
data16
mov
inc
mov
rolb
cmp
and
pop
ss
mov
mov
popf
aas
adc
out
sub
cwtl
and
cmc
dec
in
and
aam
nop
or
stos
loop
repnz
clc
cld
or
ret
ljmp
pop
dec
aas
leave
test
decl
out
js
loop
xor
mov
and
mov
pushf
test
je
cs
xor
xchg
sub
movsl
test
or
loop
sar
mov
ret
std
xor
adc
fdivs
push
xor
dec
out
fbstp
into
repnz
stos
mov
dec
daa
std
stos
fxch
icebp
dec
push
and
xchg
fadd
dec
lret
xchg
xor
sbb
in
pusha
lock
mov
sub
cli
mov
test
lret
subb
ret
jmp
inc
fists
add
in
push
xchg
dec
fnsave
fldl2t
ret
bound
sub
or
dec
push
clc
push
mov
lcall
jo
sub
jb
or
insb
ss
in
sar
add
sbb
jg
mov
jge
adc
jne
lock
out
inc
xchg
leave
lds
sub
int
in
loop
rolb
jns
leave
repz
inc
sarb
femms
mov
mov
cmp
inc
fstpt
clc
sbb
aam
mov
mov
xchg
mov
int3
adc
push
pop
sbb
cltd
dec
test
add
jmp
mov
movsb
and
loopne
inc
or
lds
xor
fdivrs
in
add
ljmp
push
mov
sub
xor
imul
jns
pop
out
xlat
divb
into
mov
ret
dec
ror
mov
dec
lea
mov
dec
xor
xor
push
jno
cmp
jl
mov
test
bndstx
or
popf
lds
dec
mov
mov
xor
iret
sbb
ljmp
rolb
inc
cmp
cmc
xor
int3
jae
ja
push
mov
dec
filds
dec
rcr
test
hlt
mov
adcb
fbld
push
sub
sub
pop
mov
xchg
pop
dec
mov
mov
popl
popf
pop
lock
mov
sub
imul
adc
jmp
jo
jns
rcrl
or
shll
bswap
dec
xchg
or
sti
in
icebp
add
sub
or
aas
das
das
lods
cli
fst
lret
adc
imul
cmp
out
or
add
es
loop
stos
rcrb
lock
mov
hlt
xor
sub
push
ljmp
push
les
scas
inc
jo
add
or
xchg
jo
int
push
daa
daa
movsb
movl
int3
sbb
out
xor
jg
das
movsl
cmp
movsb
out
or
js
mov
mov
ret
fcmovnbe
insl
inc
aam
push
cli
stc
xchg
push
clc
xor
inc
subb
js
jmp
or
mov
mov
xor
scas
repnz
into
jg
ret
aam
dec
sbb
fs
inc
jl
and
int3
push
sbb
in
ret
aad
in
jns
ret
push
xchg
into
and
dec
push
std
ljmp
lret
cli
aad
push
xor
int
jae
lock
es
movsb
popf
stc
out
adc
xor
mov
aam
push
push
sarl
or
sub
push
mov
ds
and
dec
fiadds
push
test
xor
dec
fwait
pushf
or
ret
or
rcrl
mul
xchg
inc
jle
popf
add
lret
enter
sti
dec
adc
lret
mov
std
fnstsw
or
sub
pop
cmc
mov
unpcklps
mov
xorb
ret
adc
sub
add
dec
adc
sbb
hlt
cld
mov
mov
movsb
lahf
mov
mov
sub
xor
dec
maskmovq
dec
lret
and
data16
gs
sarl
jns
cs
stos
addr16
add
rol
mov
repz
push
dec
insb
icebp
or
clc
add
mov
add
sbb
add
jmp
mov
xor
mov
fsubs
dec
and
push
mov
push
sub
mov
jo
repz
rcrl
sbb
xchg
movsl
push
mov
inc
sarl
fnstcw
dec
iret
pop
aad
shrb
adc
scas
push
fxch
mov
push
fcomps
cmp
mov
add
daa
jg
and
sbb
xor
insb
aam
subl
popa
test
into
aad
ljmp
clc
lods
mov
test
mov
inc
mov
sbb
psrlw
and
pop
ja
mov
push
fldcw
test
lods
lock
adc
popf
mov
xchg
mov
cmp
mov
fldt
aad
sbb
push
or
jbe
paddsb
leave
xchg
add
and
mov
or
or
fimuls
js
shr
stos
mov
sub
test
or
add
cltd
cli
mov
fdiv
in
mov
mov
dec
mov
imul
xchg
or
xchg
push
bound
clc
lock
cmp
ja
andl
pop
loopne
iret
xchg
mov
xchg
xor
mov
and
or
xlat
add
cmc
or
test
sahf
jb
repnz
test
jae
sbb
xlat
test
mov
inc
xor
shrb
sub
or
addr16
xor
nop
rorb
popa
sub
pop
jb
cmc
pop
or
cmp
mov
sbb
stos
mov
lret
ret
adc
sub
pop
jae
xchg
in
sbb
gs
stos
fnstenv
stos
in
mov
mov
lret
and
shll
and
xorl
add
lahf
xor
xor
mov
lret
addr16
fldcw
sbb
cmp
int3
dec
cmc
mov
cmp
loopne
test
and
fcmovnb
int
int3
adc
or
test
movsb
enter
or
dec
xor
sub
add
hlt
mov
scas
clc
mov
leave
aad
pop
jnp
push
aam
rorb
addl
aaa
sub
sti
repnz
enter
es
jno
aad
dec
int
shll
xor
or
add
mov
sub
ret
ret
xchg
xchg
mov
mov
pop
out
stos
sahf
add
test
test
sub
inc
aaa
cmpsl
rorb
cmp
and
inc
out
fsubrl
aad
ror
mov
mov
mov
inc
lahf
shll
cmpsb
dec
testl
movsl
cmp
aas
stc
mov
xor
into
in
fnstcw
mov
cmp
mov
mov
cmp
mov
and
setl
inc
int3
pop
stc
adc
test
repnz
jmp
sub
cwtl
and
test
adc
shlb
push
shll
xor
arpl
aaa
adc
sub
pop
xor
jae
movsl
dec
repnz
dec
insl
or
mov
fidivs
jecxz
ljmp
ret
mov
push
jle
pop
jl
dec
fidivrl
xchg
int
mov
arpl
sbb
and
fistl
mov
add
and
or
test
and
mov
sub
dec
jge
add
xchg
mov
jne
or
dec
leave
mov
mov
mov
mov
jmp
sbb
dec
inc
or
mov
stos
mov
xor
lods
xchg
test
stos
movsb
inc
adc
mov
add
repz
pop
mov
cmp
pop
and
in
int3
xor
adc
sub
push
sarb
rcll
fiadds
mov
idivb
sbb
je
xor
std
cld
daa
mov
sub
ret
cmp
leave
rol
ror
cmp
aaa
pmullw
mov
inc
repz
cmp
inc
mov
jmp
adc
sub
mov
add
int
xor
xlat
test
jbe
xor
test
shr
push
xor
push
add
lds
cmp
adc
mov
push
faddl
iret
ret
mov
mov
jnp
cmp
mov
inc
aam
dec
sub
and
jo
cli
mov
movsb
rcrb
dec
lret
jl
out
addr16
in
imul
push
mov
mov
and
aad
test
adc
lret
inc
gs
insb
cmp
sub
popa
dec
and
push
pop
test
or
xlat
mov
aaa
pop
mov
lods
or
mov
push
jae
xchg
xor
inc
out
out
lea
push
les
jge
lds
add
movsl
mov
add
lea
icebp
mov
mov
je
add
jno
arpl
fadd
lock
hlt
int
and
push
and
loopne
add
clc
std
add
lds
mov
test
push
jns
or
out
push
fnstcw
int
rcll
divl
cmc
push
shll
imul
imul
pop
push
cmp
jne
test
push
mov
jae
fmul
es
stc
cmc
pop
add
popa
sub
sub
sbb
out
lret
repz
std
and
sub
push
stos
rcr
daa
sbb
cmp
xchg
sbb
sbb
lret
call
mull
and
or
fstps
fnstcw
lock
and
sub
leave
mov
inc
int
test
dec
or
into
jmp
xor
xor
pop
jne
cmpsb
cld
daa
idiv
and
and
xor
out
shll
sar
jg
mov
test
int3
mov
icebp
cmp
mov
dec
jbe
adc
loop
sub
jecxz
or
roll
mov
lods
test
push
pop
in
push
repz
cmp
fucom
es
test
jo
xchg
shll
jno
mov
test
add
mov
sbb
std
add
stos
mov
mov
hlt
fldl
and
data16
flds
adc
xchg
mov
cmpsb
lahf
fisubl
mov
dec
push
out
int3
test
push
lds
ss
or
loope
mov
mov
leave
popa
mov
icebp
jnp
lret
in
lds
aas
jbe
xchg
movsb
rolb
mov
out
and
add
sti
add
das
sarb
fucompp
and
jle
push
shr
rcll
rcrl
das
sbb
mov
xchg
sbb
cmp
popa
arpl
sbb
loopne
mov
jmp
inc
push
inc
enter
data16
inc
jb
mov
pop
xchg
mov
rcll
jbe
mov
aam
inc
cli
mov
imull
pop
stos
imul
mov
and
ret
test
outsb
mov
int
sarl
or
pop
push
push
push
xor
test
pop
xlat
rol
pmuludq
pop
mov
testb
push
loope
test
pop
lahf
rcr
sub
xchg
ljmp
dec
pop
pop
test
scas
aas
adc
and
cmpsl
aam
pop
std
test
andl
icebp
or
popa
fimuls
mov
cmp
ret
cmc
push
ljmp
push
adc
repz
stc
leave
jb
aam
jno
mov
mov
adc
aam
enter
leave
daa
xchg
inc
add
lea
dec
jle
out
pop
push
ds
ljmp
xchg
jne
sub
jbe
sbb
xchg
jae
sub
sar
sub
xor
mov
mov
sbb
mov
push
ss
lcall
lcall
adc
rolb
xchg
sub
dec
mov
ljmp
fcmovne
inc
in
dec
cmpsl
loop
xlat
out
push
call
in
icebp
movsl
mov
push
lock
push
add
xor
clc
into
mov
in
psubsw
mov
mov
dec
aas
aad
or
add
call
insl
std
and
aaa
mov
dec
adc
pop
les
aaa
add
mov
shll
dec
sarl
add
cmp
jno
push
jecxz
aad
jecxz
aad
jecxz
aad
jecxz
aad
repz
pop
imul
test
int
mov
cltd
dec
mov
in
into
test
aas
and
dec
inc
sbb
iret
rorb
inc
add
push
jmp
cmc
mov
inc
aad
fistpll
aas
aam
iret
or
adc
rcrb
fsts
push
inc
dec
into
ret
xlat
cld
aam
mov
mov
test
ret
jmp
cli
inc
stos
out
pop
shll
repnz
rorl
ror
xor
pop
ret
dec
in
out
stos
aam
scas
adc
sub
hlt
jno
movl
inc
or
or
sbb
aad
dec
outsl
or
test
enter
jmp
scas
bound
add
in
mov
fstpl
mov
ljmp
xchg
jo
cltd
in
arpl
test
in
jb
add
test
data16
add
add
adc
loopne
les
xor
fistl
sub
testl
fnstenv
cmp
cwtl
popa
ret
stc
and
pop
xchg
pop
push
roll
ja
push
imul
cwtl
imul
and
stos
mov
stc
test
ret
pop
jmp
fdivrs
dec
lret
jns
and
aad
or
or
popa
popa
xor
dec
cwtl
imul
inc
jmp
and
pop
mov
mov
repnz
pop
xchg
sub
orb
fnstcw
std
mov
popf
mov
hlt
in
mov
imul
lods
xchg
popf
sub
mov
lcall
out
stos
fisttpl
and
in
addl
xlat
add
and
jbe
sub
pop
mov
xor
fdiv
mov
mov
jns
loope
scas
ljmp
shl
ret
cmp
mov
ljmp
pop
jmp
push
sub
mov
pop
jl
out
adc
test
inc
adc
mov
orl
xchg
lods
shlb
sub
je
shrb
xlat
push
cmp
icebp
dec
into
dec
mov
pop
sub
out
cmp
ljmp
add
sub
shrb
test
inc
mov
imul
mov
clc
and
or
gs
lahf
roll
sbb
out
and
add
mov
inc
mov
test
sbb
mov
sbb
adc
mull
aad
cmp
enter
lcall
inc
xor
rcll
sbbb
cmp
dec
cmp
enter
push
xor
lock
frstor
sarl
jne
sahf
gs
pop
ljmp
pop
cmp
frstor
rorl
sub
dec
jmp
push
sub
das
mov
xchg
push
cmc
add
inc
xor
int
out
ja
stos
sti
and
mov
sbb
int3
mov
stc
shlb
icebp
mov
push
std
pushl
mov
jge
pop
jns
test
lahf
gs
mov
mov
add
and
jl
adc
lock
pop
mov
dec
sbb
dec
add
inc
ret
inc
rorb
jbe
xor
adc
gs
test
andb
adc
int3
pop
jp
in
lea
cmp
sbb
inc
mov
mov
mov
hlt
pop
mov
je
and
pop
pop
push
mov
ljmp
cwtl
sti
in
iret
dec
push
cmc
in
into
add
shrb
in
popa
xor
add
xor
mov
leave
push
or
xchg
push
shl
mov
xor
pop
sbb
fmuls
cmc
mov
loop
and
adc
adc
ret
or
test
test
xlat
lods
inc
push
cmp
test
cmp
mov
adc
push
shrl
add
push
push
push
inc
inc
imul
or
test
dec
inc
jge
mov
xchg
and
aad
bswap
and
sub
cmpsl
mull
mov
adc
jmp
add
push
in
dec
and
mov
mov
xor
inc
mov
sub
hlt
fimull
ja
and
inc
das
and
cli
pop
shll
add
leave
rorl
in
loop
mov
mov
pop
sbb
push
mov
pop
and
sub
mov
lds
xor
and
jmp
stos
std
add
cmp
loope
inc
test
or
cmp
movsl
cmovb
imul
pop
inc
sbb
sbb
sbb
test
xchg
inc
mov
pop
pop
pop
int
pop
test
sub
enter
cmp
inc
add
rol
pop
adc
movl
enter
aaa
xchg
mov
loope
test
jg
sub
add
int3
add
pop
xor
int
xor
add
sub
test
sub
jbe
jmp
push
in
test
rcr
stos
lret
jbe
aas
pop
push
dec
cltd
pop
int
and
shll
add
inc
ljmp
std
xchg
imul
xchg
mov
subb
xchg
std
test
cmovb
lret
sub
push
pusha
cld
sbb
sub
lret
lock
mov
cmpsl
lock
inc
ret
or
add
xchg
fiaddl
int
jecxz
cmp
mov
fcoml
xor
fisubs
push
xchg
lods
int
add
mov
imul
sar
lock
in
rorl
das
ds
or
fidivrs
outsb
mov
movsb
dec
mov
jmp
or
inc
int
inc
and
mov
sub
add
into
aas
aas
cld
aad
lahf
faddl
mov
cmp
or
repnz
aas
cmp
xchg
mov
jbe
test
test
cmp
call
ret
cs
shr
and
outsb
jno
out
and
sbb
jo
sbb
cmovp
lea
mov
addr16
loopne
hlt
mov
ficoml
jbe
mov
sar
mov
int
push
test
dec
push
mov
insl
stc
add
push
push
sub
or
sti
std
sub
fsts
xor
xchg
add
mov
dec
les
mov
inc
or
dec
cmp
dec
push
sub
movsl
jb
stos
roll
sub
cltd
out
lods
test
mov
sarl
sbb
lds
sub
shl
pushf
inc
jae
add
xchg
add
push
icebp
loopne
repz
shr
mov
pop
jno
loop
pop
clc
cmp
inc
aaa
xor
xor
aad
xchg
push
mov
std
mov
inc
std
test
scas
mov
cltd
stos
sbb
xchg
cmc
mov
inc
cmc
les
aad
les
loope
mov
test
aaa
test
fxch
or
cmc
shr
inc
push
stos
push
inc
mov
lods
dec
ret
pop
daa
test
fs
imul
mov
dec
es
test
ds
es
jbe
rorl
pop
inc
inc
push
mov
andb
mulb
adc
jb
xlat
inc
fwait
sub
daa
popa
and
xor
pop
cmp
push
jle
lcall
mov
jns
daa
cmp
mov
aas
testl
mov
xor
stc
ror
dec
mov
call
into
xchg
mov
lret
mov
sbb
mov
loope
clc
int
mov
mov
test
fistpl
push
scas
and
push
cmpsl
mull
icebp
in
mov
mov
xlat
or
clc
sub
out
ror
inc
shll
test
out
out
out
flds
xor
in
xor
mov
fbstp
and
push
shll
xchg
or
cmp
adc
and
or
cmp
rcr
cli
call
loopne
jmp
addr16
add
in
lds
leave
dec
adc
leave
fsub
pop
push
ss
adc
mov
out
inc
sub
dec
add
mov
jmp
sbb
neg
fisttpl
in
or
mov
pop
mov
cmp
xor
and
jmp
adc
xor
leave
mov
int
xchg
ret
mov
cmp
xlat
stos
cmp
dec
rclb
arpl
mov
mov
sub
sbb
xchg
jae
add
iret
sbb
xor
shll
cld
enter
jae
xor
xchg
scas
lret
sub
loopne
dec
hlt
iret
dec
cmp
into
stos
or
add
into
popf
js
pop
mov
stos
xor
int
add
shlb
jb
hlt
mov
mov
lds
jb
adc
adc
sti
jle
int
repnz
mov
sbb
out
aam
cs
in
dec
jg
mov
daa
mov
xchg
les
sbb
sbb
push
inc
das
test
daa
adc
shll
add
fwait
das
add
pop
sub
ret
ljmp
lds
xor
or
sub
sub
cmpsb
inc
lahf
test
mov
xor
mov
push
xchg
test
pop
fcoms
or
mov
add
mov
add
mov
or
cwtl
jmp
jge
push
pop
xor
repnz
shrl
mov
dec
and
mov
bound
cmp
xchg
lds
mov
rep
mov
mov
test
sbb
pop
sub
sub
sub
gs
leave
out
cltd
inc
cmc
mov
mov
addl
adc
enter
frstor
adc
out
loopne
enter
pop
mov
out
dec
addl
sub
repz
pop
add
dec
mov
pop
xor
pop
sti
mov
psrld
mov
pop
rcl
sbb
bound
add
mov
aad
insb
mov
xor
mov
leave
imul
mov
or
imul
add
mov
in
add
jge
jns
pushf
push
mov
sbb
sub
xor
cltd
adc
jmp
jecxz
das
paddsb
iret
adc
leave
cs
insb
mov
xchg
out
pop
xor
or
mov
clc
push
cmp
pop
pop
fbld
add
or
test
inc
insl
shlb
jae
sbb
sahf
sub
lret
and
jb
insb
jae
lock
xorb
in
rcrl
jns
mov
sub
iret
add
leave
popa
adc
lahf
mov
add
mov
and
add
test
mov
mov
pop
mov
gs
aam
cli
es
unpckhps
ret
pusha
lods
sbb
sub
xchg
cmpsl
jb
addr16
out
add
push
cmp
fucom
add
negl
in
push
rcrb
int
in
shl
jecxz
ret
fisttpll
andl
pop
sub
or
xor
scas
mov
xchg
mov
jnp
jae
cmp
jecxz
mov
inc
fs
push
outsb
or
inc
jnp
aam
xor
sti
pop
adc
data16
push
cmp
sahf
lret
cmc
insb
or
mov
test
aad
jg
mov
lods
lret
mov
aas
lret
ds
popf
stos
mov
mov
xrelease
dec
shlb
leave
fisubrs
sub
push
mov
dec
inc
push
push
or
stos
test
sub
mov
dec
xor
shll
insb
jo
or
decl
add
jecxz
push
xchg
repz
sub
fisubrl
sub
imul
hlt
lods
iret
roll
mov
and
jns
sub
or
iret
xor
out
mov
add
inc
inc
pop
jb
push
inc
mov
push
test
test
add
xor
leave
out
dec
and
in
xor
inc
xor
sub
scas
xchg
xor
leave
inc
in
cmpsl
stos
sub
mov
das
sub
inc
inc
push
push
and
jg
pop
mov
mov
xchg
mov
dec
rcr
jns
data16
adc
mulb
jecxz
sbb
xchg
adc
gs
add
ficompl
adc
lds
xlat
push
or
adc
paddd
push
and
icebp
shll
clc
jae
add
lcall
xchg
fsubr
test
add
ret
int
mov
pop
addr16
lock
xlat
mov
outsl
dec
adc
int
shl
loope
int
dec
or
push
xchg
mov
cmp
loopne,pn
sbb
inc
mov
xchg
out
leave
and
push
into
xchg
and
orl
pop
mov
sbb
fmull
add
sub
not
or
arpl
jb
jle
push
mov
push
mov
mov
je
lock
dec
xor
scas
mov
out
out
lea
mov
or
cld
xchg
les
int
or
test
out
sahf
mov
fcmovnb
cmp
leave
icebp
dec
adc
inc
or
xor
leave
stc
divb
movsb
lret
cli
out
lret
dec
and
or
test
data16
repz
mov
push
fcmovnbe
enter
getsec
xor
aam
icebp
pop
rdmsr
pop
sbbb
mov
mov
mov
fsubrs
add
mov
adc
add
sbb
roll
test
dec
lock
mov
rorl
pop
push
push
icebp
lods
lods
icebp
rsm
push
std
mov
jbe
cli
push
push
xchg
pop
xor
leave
mov
push
daa
mov
int3
imul
mov
in
and
cwtl
and
sbb
inc
sbb
and
repnz
icebp
inc
mov
outsb
subb
push
aas
in
enter
add
sahf
jns
les
xchg
jo
test
or
je
inc
mov
inc
das
notb
add
cs
add
push
mov
aam
test
lret
dec
sbb
leave
or
mov
andl
sub
repnz
and
cs
lret
out
popa
push
or
fst
and
pop
fcompl
rclb
mov
mov
aam
adc
push
lds
mov
ret
add
sbb
push
sub
lods
add
lcall
cmp
mov
jecxz
jecxz
cmc
int
jb
data16
adc
stos
idivb
and
push
ret
mov
pop
mov
leave
and
aad
test
loop
js
cltd
repz
adc
inc
mov
adc
cmc
popf
adc
jno
dec
leave
imull
xorl
or
dec
push
mov
repz
add
mov
out
mov
sarl
ljmp
cs
aad
cmp
std
leave
lods
repz
cmc
fcmovnu
mov
sbb
in
fnsave
movsl
or
out
inc
inc
mov
popl
iret
mov
aad
in
sub
jns
add
or
cwtl
cmc
movsb
fisttps
icebp
dec
xchg
add
rcrl
dec
or
xor
ret
jne
jge
stc
loope
dec
jns
int
pcmpgtd
pop
into
xor
adc
ret
dec
mov
mov
cwtl
mov
lea
adc
cltd
rcll
or
ja
arpl
pop
inc
add
push
rorl
mov
jae
and
cmp
cmp
inc
inc
inc
fdivrs
sub
mov
adc
xchg
js
fsubr
ljmp
push
mov
dec
fimuls
pop
rcr
cmp
pop
xchg
jle
negl
dec
fcompl
out
mov
add
enter
push
or
lret
jbe
pusha
lea
mov
mov
inc
cmpsb
and
and
cmpsl
pusha
inc
int3
std
xlat
out
jmp
mov
lods
fs
xchg
mov
xor
mov
daa
sub
pop
add
dec
pop
lds
mov
or
adc
cmp
testl
fimuls
sahf
stc
add
fnstcw
xor
cltd
inc
int3
aad
push
pop
out
stos
fsubr
test
mov
call
mov
xchg
sbb
lds
dec
aad
test
inc
mov
movsl
mov
sub
add
enter
lods
jae
insl
insb
or
stos
or
and
aas
leave
mov
mov
mov
test
jecxz
in
stc
mov
imul
aam
sbb
lea
aam
adc
xchg
or
out
xor
aam
sbb
pop
or
sahf
sbb
lea
in
dec
sbb
dec
setl
cmp
cwtl
jecxz
addr16
fbstp
cmp
fmul
mov
jns
mov
pop
pop
sub
pushf
popf
or
aad
icebp
insl
out
repnz
aas
fcmovne
dec
jb
testl
cmp
and
test
shl
mov
ja
test
loop
lds
bound
stc
mov
jmp
jp
cld
dec
aad
pop
lds
mov
mov
repnz
cli
mov
push
clc
daa
lock
adc
fcmovnb
cmp
pop
cmpsb
fsubs
stc
pop
add
inc
mov
add
imul
fimull
add
mov
test
ror
xor
mov
test
dec
insl
les
jb
cmc
ljmp
dec
daa
or
pop
mov
test
mov
adc
das
ss
mov
sbb
jle
push
lret
xchg
leave
xchg
dec
sub
mov
cmp
repz
or
mov
ret
divb
mov
test
xor
sub
push
push
pop
outsb
push
not
push
cmc
mov
mov
out
jne
shll
lods
out
ja
ss
in
addr16
clc
aam
shl
cli
mov
sub
xor
ret
jmp
lret
daa
mov
rclb
push
dec
ret
loop
lock
in
and
mov
mov
pop
pop
into
dec
decl
push
mov
jmp
ss
push
inc
mov
xchg
sbb
pop
add
leave
test
sbb
push
and
adc
pushl
in
inc
mov
push
test
or
enter
add
adc
repnz
test
lods
pop
dec
sub
es
add
cltd
sti
add
aam
adc
mov
mov
test
lea
test
lock
out
sub
cwtl
scas
fwait
jno
push
sub
xor
adc
jl
add
test
lds
scas
clc
fsubrp
xchg
xchg
in
adc
mov
push
add
dec
sbb
mov
xlat
inc
inc
xchg
es
add
xchg
xor
dec
lret
or
cwtl
icebp
in
data16
enter
push
adc
js
lds
inc
and
dec
hlt
adc
sub
faddp
lds
inc
aad
repz
mov
clc
jno
data16
inc
mov
dec
mov
int
dec
inc
mov
test
push
insb
cmp
clc
enter
push
lods
movsb
sbb
inc
or
out
push
gs
push
iret
mov
mov
jne
add
dec
andl
pop
arpl
dec
iret
xor
fiadds
lods
pop
add
push
push
cmc
inc
clc
xor
ret
sbbb
int
into
jmp
vmwrite
sub
adc
xrelease
adc
repz
cmp
rorl
pop
das
sbb
dec
mov
xor
jae
mov
and
push
repnz
and
mov
ret
mov
test
cmpb
xchg
rolb
pop
insl
cltd
in
stc
mov
sub
and
push
mov
leave
jecxz
mov
mov
add
and
lcall
adc
dec
add
mov
jnp
mov
and
sub
jmp
bnd
loope
pusha
or
lret
inc
sbb
push
dec
push
mov
mov
lret
xchg
test
leave
scas
shl
jle
jmp
popf
jmp
lods
xchg
hlt
xor
and
int
inc
out
out
xor
push
sbb
in
push
mov
xor
popa
push
fisttps
imul
cmp
xor
push
or
xor
stos
sub
repz
or
mov
push
sub
dec
stc
push
fst
inc
imul
gs
fbld
sub
mov
mov
cmp
and
out
jb
mov
or
cmpsb
dec
sub
add
jno
add
jne
mov
sbb
std
cmpsl
cs
iret
call
or
repnz
inc
in
ds
pmulhw
sbb
jmp
lcall
mov
xchg
sub
lret
dec
fcmovnu
cli
add
and
pop
enter
aad
xchg
dec
jb
sub
jb
mov
and
aas
or
jo
inc
outsb
mov
xor
sbb
push
add
and
addl
mov
lret
sub
add
rorb
test
daa
aad
les
fcomps
cmc
xchg
sti
pop
test
incb
mov
inc
jl
ret
mov
test
rol
cmp
mov
icebp
test
repz
jge
pop
sub
in
xor
shrl
adc
mov
mov
pop
lea
in
dec
xchg
test
dec
mov
adc
mov
xor
sub
in
cmp
push
fisubl
aaa
out
xchg
xor
arpl
incb
enter
push
pop
adc
mov
int3
pop
aad
outsb
mov
call
rorb
mov
pop
mov
xchg
push
rorl
rcll
adc
mov
dec
or
clc
rcrb
xchg
iret
or
sbb
mov
sbb
imul
leave
add
or
pop
fstpl
add
mov
cmp
in
pusha
and
and
mov
aaa
adc
sub
fldt
sbb
fs
fs
test
pop
sahf
mov
dec
add
add
xor
mov
cmp
adc
lret
fnstenv
scas
sub
mov
mov
jp
enter
aas
sub
lret
push
add
xchg
add
test
push
nop
mov
and
test
mov
add
xor
push
stc
ja
xor
sbb
es
jo
int3
and
sbb
test
mov
inc
dec
subl
test
test
das
cmp
mov
pop
dec
aaa
rclb
dec
lea
pop
jbe
loope
push
sub
ret
cmp
xchg
jg
add
int
mov
xor
mov
add
lods
testb
test
add
push
add
add
or
mov
sub
pop
movaps
jmp
add
outsl
xchg
or
in
pop
xorb
in
jne
xor
ss
dec
test
push
aaa
xor
jne
mov
mov
pop
pop
out
mov
int
and
icebp
cmp
inc
stos
or
cld
outsb
loop
data16
ror
xor
xchg
sub
cmp
and
xor
xchg
rclb
orb
out
stos
loop
aas
jp
shrl
jp
cmp
ret
push
inc
in
je
repz
adc
jne
hlt
hlt
adc
mov
rol
out
pop
push
push
imul
sti
mov
mov
mov
mov
inc
iret
sbb
or
cmp
sbb
aad
push
sub
adc
and
xchg
mov
clc
icebp
push
push
lods
inc
movl
cltd
aas
shlb
ja
mov
test
xor
push
sbb
push
jns
pop
dec
sbb
sub
add
pop
mov
mov
aad
or
pop
mov
stos
mov
or
outsl
jb
add
fstps
xchg
jbe
rorl
jecxz
icebp
fst
cwtl
test
loop
and
rol
int
and
fstpl
cli
addb
scas
dec
mov
mov
lret
jbe
or
jnp
stos
mull
loop
xor
fnsave
mov
sbb
mov
mov
xor
stos
dec
mov
cwtl
mov
lea
pop
test
imul
mov
test
xor
pop
fcmovne
push
jb
adc
jmp
es
push
push
sti
xchg
xchg
adc
jmp
xor
clc
sbb
pop
mov
xchg
mov
xor
out
xchg
cmp
stos
sarl
dec
mov
xchg
sub
popf
xchg
pop
mov
shlb
icebp
sarl
lods
dec
jmp
push
mov
xor
adc
fstpl
cmpsb
lcall
test
mov
mov
cmp
push
mov
inc
lahf
jle
cmp
stos
push
xor
mov
jne
inc
xchg
pop
mov
test
jmp
and
icebp
icebp
xchg
jg
dec
jle
mov
jmp
das
sbb
xor
jge
ss
cld
jbe
cmpsb
dec
adc
push
imul
ret
scas
add
xor
adc
enter
lock
or
int
fwait
stos
int3
pop
jecxz
add
mov
add
fnstcw
rcl
call
cmp
daa
inc
movsl
fildl
xor
mov
mov
mov
xchg
into
inc
icebp
loope
mov
jno
rorb
push
fimull
mov
test
shlb
jae
test
popa
mov
scas
and
and
or
iret
xor
sbb
mov
shlb
xor
je
or
sub
js
sahf
ss
test
or
push
mov
inc
mov
and
test
cltd
fsubr
icebp
add
enter
xorb
nop
ret
out
cmc
in
mov
ret
gs
jb
rcr
push
sbb
shll
pop
loopne
jno
in
pop
and
scas
mov
int
pop
stc
or
adc
out
aas
das
ret
push
cmpsl
adc
stc
jae
std
inc
dec
sar
and
movsl
into
dec
pop
xchg
cmpsl
sub
pushf
mov
nopl
outsl
stos
cmp
xor
leave
aas
add
lds
std
mov
mov
btrl
loopne
xor
fstl
aas
mov
mov
xchg
xchg
es
jb
loope
popf
and
dec
mov
hlt
movsl
scas
jne
jmp
into
dec
sub
psubw
sbb
pop
loope
rorl
pop
inc
jg
cltd
cmc
in
inc
in
int3
pop
xchg
cmp
ljmp
pop
mov
ret
aad
in
add
dec
adc
mov
cmp
sbb
xor
or
cli
or
repz
icebp
xor
stc
and
movsb
hlt
sar
mull
arpl
sub
xchg
ret
add
add
in
mov
out
push
out
fs
sub
outsl
arpl
xchg
jns
or
movsb
cmp
push
jne
stos
ret
xor
fcoms
movsl
push
stos
sbb
jns
mov
xor
cmp
mov
ja
pop
movsl
pop
out
push
cmp
int3
mov
mov
das
mov
inc
loopne
xchg
pop
aad
xor
mov
shll
insb
mov
push
mov
sahf
clc
xchg
rcl
mov
iret
xorb
fdivs
int
sub
dec
imul
mov
aas
sete
into
cmc
leave
ret
daa
enter
shr
mov
push
cmp
test
dec
repz
pushf
sbb
inc
xor
add
inc
es
push
and
mov
lods
testl
cmp
shll
adc
insl
iret
fwait
dec
or
aas
fidivrl
pushf
loope
int3
test
test
sub
sbb
jns
or
bnd
sub
mov
sbb
rcrb
cwtl
dec
hlt
pop
push
lods
jo
push
jge
add
mov
test
aad
sarb
xor
repnz
out
out
mov
movsl
mov
enter
stos
pop
ret
ret
and
xor
mov
les
mov
mov
loope
lcall
ror
stos
cli
inc
aaa
add
test
dec
mov
das
and
ss
addr16
test
movsb
xchg
cmpsl
lds
dec
aad
or
dec
or
roll
xor
xorl
ret
cmp
repz
mov
and
int
lret
mov
lret
lods
call
sbb
or
test
jb
leave
xchg
imul
lds
jg
mov
pop
mov
fstpl
add
das
dec
sub
in
xor
int
xlat
rcrb
dec
pop
adc
hlt
pop
repz
lods
dec
shlb
roll
cmp
pop
das
stos
mov
hlt
xorl
xorl
loope
add
mov
pop
jns
xor
mov
mov
xor
lret
in
js
in
mov
outsl
push
add
vpcmpeqd
lods
cmpsb
adc
mov
out
popf
dec
and
cwtl
scas
outsl
pop
les
push
rclb
add
sub
int3
int
sub
cmp
inc
hlt
dec
inc
inc
sbb
xchg
shrl
test
lret
sbb
repz
pop
mov
dec
ss
xor
cmpsl
pop
hlt
mov
les
test
push
xor
sbb
popa
xchg
pop
cmp
test
jmp
rclb
in
mov
inc
jno
push
sahf
sub
dec
clc
hlt
mov
mov
int
jno
int3
xchg
lock
xor
xchg
and
mov
sub
fldl
xor
mov
xchg
iret
test
cmp
xlat
adc
ret
sbb
test
stos
int
push
xchg
xor
jno
push
sub
sub
pop
clc
subb
or
out
pop
dec
dec
dec
dec
je
outsl
aad
jmp
js
icebp
inc
cmp
xchg
cmp
jae
inc
push
push
imul
pop
push
xlat
hlt
add
jo
mov
leave
add
rcll
inc
cmp
push
shll
cmc
mov
or
mov
aad
add
push
mov
push
dec
xor
jo
sub
mov
fiaddl
jo
in
popa
lods
stos
mov
jmp
scas
mov
jmp
mov
repz
mulb
ss
cmp
or
xor
imul
mov
fs
fisubl
mov
div
mov
lods
stc
test
leave
jno
jne
push
pop
mov
or
pop
xor
mov
pop
enter
pop
pop
fwait
mov
fcoms
ds
adcb
xchg
lret
xor
mov
dec
lret
lods
jmp
enter
out
add
fwait
jecxz
pushf
into
push
push
shll
in
rorb
push
mov
adc
sbb
dec
popa
shl
test
cmc
mov
shrb
rorl
ret
jle
jmp
cmp
adc
lods
cmp
xor
filds
mov
mov
dec
dec
test
lock
xchg
jmp
jne
adc
mov
adc
mov
clc
js
or
dec
inc
mov
stc
and
sub
clc
shll
mov
cmc
dec
xor
ror
mov
bound
gs
rcll
jecxz
fsubrs
adc
or
test
mov
mov
insb
pop
xlat
lods
inc
add
mov
mov
and
sub
loopne
je
lret
int
int
pop
ss
or
mov
dec
icebp
roll
fstpl
stos
fiadds
test
add
lret
loope
mov
mov
rorb
gs
jb
lds
cmp
or
lea
and
fnstenv
mov
aas
add
test
pop
int
or
push
push
sub
adc
divb
xor
in
or
and
into
pushf
test
cli
std
sbb
mov
fidivl
ret
or
test
rcrl
repz
repz
push
fwait
inc
xchg
mov
sbb
les
mov
and
adc
jne
jmp
inc
out
mov
out
sbb
pop
xor
push
hlt
xor
mov
pop
out
jbe
leave
adc
pop
lds
adc
mov
inc
test
test
jae
test
dec
les
mov
das
pop
dec
pop
dec
dec
int
xor
scas
fldcw
xor
lahf
add
dec
stos
xor
insl
out
dec
lods
mov
daa
mov
lahf
jmp
int
xor
loopne
lahf
icebp
mov
clc
and
push
jl
pushl
mov
movsb
fs
pusha
lds
lret
insl
lahf
imull
dec
xchg
in
repnz
inc
adc
imul
adc
mov
test
jae
mov
cwtl
pop
or
xlat
test
mov
push
sarl
inc
or
icebp
enter
lahf
sbb
cltd
pop
sbb
sub
jno
imul
jmp
fisubrl
pop
dec
outsl
ret
pop
aad
or
arpl
push
cmc
gs
imul
sbb
dec
push
xchg
test
and
pop
adc
xor
mov
loop
mov
mov
lret
xor
test
shlb
loope
stc
push
aaa
dec
or
shr
out
or
out
push
fsub
add
jg
mov
aam
cmpl
adc
popa
jo
xchg
loope
cli
in
lea
repz
xchg
cmp
dec
aaa
cmp
sub
lea
mov
ds
cmp
cmp
insb
sub
cli
cmc
aad
cmp
dec
add
mov
lds
jo
jp
cld
xchg
and
inc
jne
mov
xor
stc
jle
xchg
setle
lret
dec
fbld
xlat
out
inc
jne
add
imul
inc
dec
out
push
push
call
int
cmc
cwtl
out
add
dec
and
pop
fcmove
imul
mov
mov
inc
nop
add
xchg
xchg
aas
fidivs
leave
and
out
movl
or
clc
stc
and
or
jle
shrl
or
repnz
jno
mov
push
cwtl
xor
xor
iret
and
pop
push
dec
not
int
xor
push
mov
mov
jmp
jle
sbb
jne
fildll
mov
xor
test
adc
mov
jmp
lods
jle
jo
cmp
pop
int3
and
cltd
lods
aam
inc
shll
adc
jnp
test
sub
cmc
leave
in
or
sti
jecxz
pop
lock
call
push
mov
mov
xchg
and
in
lock
repz
adc
movsb
mov
pushf
enter
ljmp
pop
fcompl
cmp
stc
out
repnz
cli
sahf
and
andl
dec
hlt
xchg
sub
sti
jne
mov
imul
push
inc
xchg
iret
adc
int
lret
aam
ja
xchg
fnstsw
inc
cmp
dec
adc
add
pop
sbb
dec
sbb
cmp
hlt
rorl
hlt
lods
fsincos
mov
jb
sub
mov
icebp
popa
jo
push
or
push
pop
pop
daa
fbld
push
ror
gs
fiadds
and
repz
pop
mov
inc
and
lds
lcall
pop
add
mov
push
leave
sbb
std
pop
cmc
xchg
call
cmp
xor
dec
xor
xchg
push
add
cmp
iret
repz
or
jle
ret
jmp
shrb
test
lds
cmp
inc
cmp
stos
loopne
jl
repz
rcr
out
or
testb
int3
icebp
in
pop
lds
or
dec
pop
and
lds
sbb
sbb
mov
sbb
andb
push
mov
push
mov
lock
sub
lret
lret
fcomi
xor
xor
or
lods
add
stos
sub
adc
aad
pop
jl
daa
add
filds
and
push
mov
cld
lds
loop
bswap
sub
sbb
js
dec
inc
ds
jnp
push
add
std
in
clc
lock
cmp
pop
addr16
int
push
test
cmp
gs
es
xchg
cmpsl
dec
sbb
out
fsubl
cli
test
aam
test
stos
stos
pop
xor
enter
push
jge
lahf
dec
loope
xlat
mov
stc
ret
push
dec
pop
or
push
fcmovnbe
push
cwtl
mov
fdivs
shlb
insl
repz
in
mov
and
adc
lds
sub
mov
push
push
mov
lret
mov
call
adc
and
fstpt
test
rolb
sub
inc
fs
push
push
movsb
cli
addr16
lds
or
push
icebp
cmp
dec
repz
scas
lret
aad
sub
mov
sub
pop
xchg
rclb
divl
dec
push
mov
add
push
outsb
int
cmpsl
cmpsl
into
and
iret
daa
loop
mov
ffreep
jg
fcmovnbe
lock
push
cmpsb
adc
inc
jp
es
stos
inc
popf
das
fs
retw
xlat
lds
sub
arpl
test
dec
daa
push
adc
or
repz
push
dec
pop
sub
pop
push
loop
jno
test
xor
push
dec
js
push
test
int
daa
adc
in
mov
push
xor
iret
into
xor
pop
hlt
pop
rcrb
into
repz
jb
cli
mov
and
stos
sahf
mov
cmp
add
mov
fidivs
aam
daa
push
lds
lret
mov
mov
test
add
rcrl
add
cmc
sbb
aad
or
push
lods
iret
mov
in
mov
lcall
jle
fidivs
mov
cmpsl
or
shlb
xchg
fmull
ret
cmp
test
jb
jmp
or
lock
test
xor
mov
les
stos
add
xor
test
inc
fdivrs
jl
xchg
sub
test
fsubrs
xor
shlb
sarl
inc
jmp
popa
inc
dec
fnsave
inc
insl
add
jmp
std
mov
jo
stos
fistpll
mov
les
dec
add
out
mov
mov
xor
jae
and
adc
enter
and
into
dec
cwtl
stos
lret
sbb
jbe
movsb
sahf
mov
xchg
jge
jno
cwtl
and
clc
pushf
dec
push
ret
or
sahf
gs
ror
lret
mov
and
mov
jp
movzwl
enter
dec
cltd
rclb
mov
jecxz
and
and
into
lds
jne
faddl
rol
dec
sbb
test
xor
mov
mov
andl
pop
leave
int3
out
test
jge
fcomi
xchg
stc
les
and
mov
in
xor
dec
adc
testl
mov
mov
test
stos
or
or
test
mov
cld
in
sti
test
stos
ret
les
jb
arpl
ds
push
inc
rclb
cmp
loopne
faddp
ret
jo
mov
mov
mov
adc
mov
scas
adc
ljmp
xchg
mov
xor
test
mov
cli
mov
shl
mov
mov
mov
dec
jae
mov
lret
imul
mov
clc
dec
push
pushf
sub
cmp
arpl
xchg
mov
push
popf
xor
sbb
add
call
ds
mov
dec
sbb
cli
inc
leave
xor
stos
mov
mov
pusha
shrl
sub
pop
fistps
test
push
fwait
neg
or
invd
xchg
das
ja
mov
lahf
pop
xchg
aaa
enter
cmp
cmpl
mov
dec
add
mov
push
imul
mov
or
into
loope
adc
add
push
xchg
jecxz
std
adc
shl
adcl
leave
mov
sbb
push
sub
sarl
inc
xorl
jle
stos
add
pop
les
subl
mov
rorl
xchg
inc
xor
inc
out
das
jno
jns
push
fldt
xchg
mov
shrb
inc
or
dec
scas
sarb
neg
aam
out
lahf
in
sbb
call
outsb
std
inc
inc
inc
sbbl
inc
xor
ss
and
mov
flds
push
fidivrs
mov
jge
or
mov
iret
rcl
lret
adc
cmpl
es
mov
mov
cli
and
dec
ret
jp
in
adc
sbb
aas
xchg
shrb
mov
fcomi
and
mov
sbb
lahf
call
test
inc
ret
push
mov
sub
xlat
daa
and
adc
in
dec
add
cmc
push
test
pop
mov
ja
jno
lret
and
cli
or
es
jbe
out
jmp
lods
in
lock
dec
ret
jae
outsb
or
cmc
sbb
js
rcrb
adc
push
cmp
adc
and
dec
sub
ss
ja
out
lods
add
popf
cmp
popf
aad
sub
movsb
adcb
jne
ja
aam
pop
shrl
add
dec
or
xchg
pop
dec
and
mov
pextrw
push
or
clc
in
sarl
add
or
sarl
aaa
fidivrs
mov
jmp
push
add
push
iret
add
hlt
out
out
movsb
ja
mov
sub
sbb
pop
jge
inc
sub
or
leave
imul
mov
jns
enter
test
inc
stos
in
sub
cli
sbb
std
ds
dec
sbb
divb
dec
or
xor
mov
inc
sub
xor
ret
leave
scas
mov
xchg
stos
lea
mov
stos
xchg
pop
xor
xor
lret
and
ljmp
xchg
and
add
imul
push
cmp
arpl
xor
testl
fldt
in
fdivrs
or
fcom
cmpb
rclb
enter
jmp
mov
xchg
sbb
ljmp
xchg
mov
push
or
push
xchg
imul
cmpsb
pop
lods
fisttpl
ret
in
int3
popl
jns
inc
hlt
sarb
add
mov
insl
cs
xor
mov
mov
daa
outsb
dec
or
sbb
dec
in
push
aaa
subb
and
shlb
xchg
stos
test
loopne
cmp
add
aam
aad
mov
pop
test
sbb
and
lds
sub
sbb
orl
xchg
push
addr16
mov
push
ljmp
cmpsb
pop
mov
cmc
sahf
jbe
cltd
enter
sti
cli
cmpsb
or
lahf
inc
ja
adc
or
outsb
nop
adc
mov
inc
inc
leave
stos
mov
mov
popa
jo
rclb
and
jge,pt
dec
popa
sbb
shll
jns
mov
rorl
pop
or
aad
loope
adc
or
int3
rcr
pop
gs
testl
and
or
in
das
jmp
ds
and
je
rcr
mov
and
push
push
pop
clc
out
insl
imul
ret
shrl
dec
into
test
adc
test
testb
sbb
lea
rolb
xor
jns
aaa
inc
shll
pop
or
loope
fld
data16
xor
adc
shll
fs
add
and
subl
stc
pusha
push
push
jecxz
dec
in
movsb
cmp
loop
fildl
lret
jnp
loopne
and
insb
lcall
and
loope
add
rol
or
nop
mov
dec
rol
cmc
rolb
gs
gs
test
out
or
jne
mov
jmp
flds
out
jne
arpl
sub
pushf
sub
jle
addr16
or
data16
sub
dec
jne
int
sbb
inc
push
das
leave
and
daa
mov
into
xor
mov
fxch
shlb
push
or
mov
and
lds
push
pop
loopne
and
mov
adc
cwtl
or
fisubs
idiv
fstps
add
es
dec
dec
test
pop
mov
adc
loop
je
aaa
mov
and
es
mov
inc
dec
pop
sti
aas
leave
frndint
int3
loope
cmpsl
pop
cwtl
push
mov
loope
and
mov
adc
ja
inc
and
mov
in
xchg
jae
xchg
sbb
xchg
or
out
xor
test
ret
clc
and
shrb
add
mov
xchg
lahf
jmp
xchg
inc
inc
hlt
mov
cli
xor
push
mov
loope
mov
xor
cmpxchg
mov
jb
sub
shrl
bound
fwait
hlt
cld
mov
lods
or
mulb
mov
js
xor
mov
or
leave
aas
fisubl
dec
mov
jp
or
xchg
mov
enter
pop
ret
int3
mov
inc
sti
es
cmp
adc
jno
sbb
pop
hlt
addr16
lock
icebp
inc
lods
and
int3
dec
dec
sbb
lret
stc
pop
xchg
dec
out
out
jmp
ja
roll
aad
std
lods
add
popf
or
orl
push
imul
hlt
jns
push
loop
rorb
pop
jo
inc
dec
push
popa
ja
popa
jle,pt
mov
mov
push
adc
jg
lcall
inc
xor
aam
push
jne
mov
xlat
aam
pop
or
aaa
adc
mov
pop
add
inc
jp
out
push
mov
leave
or
loop
dec
cltd
cmpsl
ret
into
scas
repz
and
hlt
movsb
adc
add
gs
test
out
dec
lcall
imul
xor
call
lods
stc
adc
push
test
mov
out
jns
sbb
mov
int
xor
mov
push
add
es
mov
jnp
push
fldlg2
mov
pop
inc
call
ficoms
loope
xor
stos
inc
and
pop
insb
repz
lret
sbb
ret
dec
jg
shl
jecxz
ret
movl
arpl
scas
lods
mov
shrl
add
sub
stos
fwait
push
inc
sub
adc
or
push
ss
scas
jge
bound
test
mov
mov
pop
adc
aad
xchg
pop
int
ror
test
repnz
lods
aam
loope
add
pop
mov
push
lret
das
jg
fnsave
mov
adc
dec
xchg
divb
lret
loope
jmp
icebp
inc
adc
hlt
or
or
or
jnp
xorb
or
fisubrl
loop
push
outsl
pop
fcmovnu
adc
cli
dec
inc
lods
or
test
add
addb
into
mov
and
sub
push
adc
ss
dec
aaa
test
push
out
mov
sub
cmpsl
pop
mov
pushf
or
fcom
fisttpl
cmp
mov
pop
repz
mov
cwtl
mov
dec
aas
push
adc
mov
pop
inc
and
shll
sub
push
pop
xchg
or
test
arpl
mov
add
sbb
repnz
outsl
mov
inc
nop
lods
ret
lcall
sbb
les
xabort
imull
adc
xchg
mov
push
mov
mov
test
loopne
les
enter
call
jb
add
cwtl
mov
outsb
dec
mov
or
scas
loopne
dec
add
in
in
add
std
test
xor
shrl
pop
leave
mov
mov
insl
in
lds
imul
mov
mov
je
cwtl
mov
jmp
add
pop
xor
and
cmp
jnp
ja
test
rorb
test
test
push
add
mov
cmpsl
addr16
xor
lock
loop
out
jns
into
in
je
iret
xor
fs
ret
dec
leave
aam
iret
or
out
add
rcll
xor
aam
lds
xchg
shr
cld
lret
mov
repnz
or
mov
dec
lea
inc
rcl
sbb
daa
aad
adc
push
sbb
mov
repnz
pop
fnstenv
test
pop
movsl
adc
int
and
xor
cmpsb
inc
pop
pushf
cltd
inc
ljmp
adc
add
sub
jecxz
cmpsb
out
sbb
pop
add
lcall
push
or
scas
adc
in
test
mov
mov
adc
movsb
pop
out
mov
and
dec
xchg
xor
out
mov
push
pop
lds
jno
mov
pop
sahf
xchg
pop
and
ret
popf
int3
and
sbb
lahf
fs
fnsave
das
insb
sbb
push
or
test
xchg
insb
xlat
pop
fnstcw
enter
lret
pop
aam
test
shll
mov
flds
cmpsl
fidivrs
dec
jbe
sbb
aas
sti
push
shl
and
out
inc
shll
jl
and
test
hlt
sub
incb
lock
dec
loop
mov
push
ljmp
mov
lds
lcall
jne
repz
sbb
inc
jnp
aam
negb
cli
bnd
jl
cmp
stos
fcoml
test
push
in
fcmovnu
dec
popf
adc
es
stc
addr16
pop
icebp
aad
xor
dec
test
push
lret
fistpl
adc
lock
shll
dec
test
sub
mov
cmp
mov
adc
push
outsl
sbb
cld
xchg
xlat
in
cwtl
test
inc
cmpsb
jle
fsubs
mov
mov
jo
sti
testb
out
push
jo
pop
push
sti
mov
dec
rolb
out
out
gs
iret
lods
add
sti
mov
out
and
fcomip
xchg
xor
ror
or
or
cmp
xchg
add
das
incb
sub
push
add
ja
mov
lods
push
xor
int
dec
shll
lods
fcomp
dec
shrl
adcb
and
imul
cmpsb
and
sahf
cmp
int
jp
and
add
cmpsb
pusha
fcmovne
dec
rcrl
loop
adc
scas
sub
mov
or
mov
rolb
mull
mov
adc
sbb
cltd
sub
pop
sbb
test
ss
mov
test
sbb
or
lret
xorl
and
cmpsb
push
jg
or
lret
mov
mov
or
movsb
out
lret
jb
push
icebp
hlt
out
dec
repnz
mov
jecxz
outsb
xchg
leave
pop
aaa
addr16
aam
ret
sub
sbb
pop
fstpl
out
xor
xadd
xor
sub
adc
daa
in
mov
ret
shll
popa
aas
mov
push
movsb
dec
sbb
sbb
int
in
adc
inc
and
clc
movsb
push
jg
fcompl
test
add
inc
push
std
aad
inc
leave
ficomps
cmpb
jge
fisubs
daa
adc
shll
std
stc
cld
ret
push
jbe
cmpsl
lods
cli
mov
ja
flds
stc
mov
test
pusha
xor
cmp
dec
jno
push
and
into
xorl
wrmsr
add
mov
xchg
sub
sbb
ss
fnsave
mov
add
imul
movsl
xchg
jp
or
lcall
adc
push
out
mov
pop
test
ror
mov
mov
in
stos
fwait
lods
lds
orb
lds
inc
inc
inc
add
jne
push
movsl
push
dec
shll
insb
push
lods
dec
xor
sub
nop
fsts
add
add
xor
xchg
jo
cmp
pop
movsl
xchg
and
pop
rcr
mov
int3
cmp
sbb
cltd
jb
xchg
popf
movsb
adc
jle
aaa
repnz
sarl
dec
leave
movsl
dec
mov
mov
mov
pop
add
cmc
lea
cmpl
shll
or
sub
inc
pop
pop
aam
ret
jg
stos
lds
fldt
insb
test
push
inc
xor
and
jbe
aad
pop
mul
stos
or
shlb
scas
lds
mov
push
mov
mov
lcall
lret
inc
xor
pop
fisttpll
sarl
fldcw
mov
sub
mov
cmc
loope
es
push
pop
jl
jo
popf
mov
mov
xor
xor
cmovl
xor
iret
pop
mov
cli
or
aas
mov
or
push
subl
xchg
cmpsb
or
loopne
repz
cmp
inc
loop
sub
mov
insl
mov
js
mov
jo
pushf
enter
je
adc
stc
mov
adc
ret
dec
mov
and
jns
mov
jb
push
mov
leave
xor
ret
stos
mov
in
sub
adc
shrl
and
adc
mov
bound
push
xchg
xor
ret
stc
sub
mov
xor
stos
jb
dec
mov
lods
pop
adc
xor
leave
jbe
lock
mov
sub
and
clc
add
aas
cmpsl
mov
pop
xor
jp
in
rol
stos
lret
enter
or
mov
inc
mov
int
sbb
btc
flds
repz
mov
jns
shrl
dec
lea
mov
mov
leave
mov
imull
fldt
sub
pushf
jmp
lds
jmp
adc
xor
add
mov
daa
out
mov
cmp
ljmp
cmc
mov
adc
vmovmskps
dec
and
hlt
cmp
pop
pop
sbb
stos
mov
xor
cmpsb
cltd
ds
adc
sbb
cmc
mov
inc
xor
shll
lods
insb
pop
pop
jl
sub
ljmp
xor
add
in
fnstenv
fnstenv
mov
bound
pop
rorl
lret
test
stos
mov
ret
sahf
ret
xchg
loopne
iret
cmc
outsl
mov
push
adc
fists
pop
test
ror
mov
int
enter
nop
jmp
cli
add
mov
lret
dec
nop
mov
sbb
lcall
xor
or
push
sub
dec
jne
aas
fcom
cltd
cs
insl
pop
pop
jmp
loop
negb
int
xor
mov
dec
mov
jno
stc
xlat
adc
and
loop
mulb
ja
add
fbstp
not
leave
ret
jge
cmc
push
outsl
into
dec
idivl
push
cwtl
les
clc
sbb
daa
pusha
popa
loopne
stos
push
inc
xchg
sbb
dec
xor
cwtl
push
call
mov
shlb
adc
aaa
shrb
sbb
jp
lods
ljmp
int3
mov
sbb
pop
sub
clc
lret
pop
xor
stos
sub
xor
insb
je
pushf
adc
fists
cmp
xchg
movsl
cs
jb
stos
fnstenv
jp
jp
ror
hlt
mov
jnp
xchg
jb
fdivrl
sti
lret
dec
dec
pop
mov
nop
shl
loop
lret
fcomi
jns
js
stos
dec
cmc
mov
mov
mov
cmpsl
xor
xchg
rorl
stos
adc
sti
jno
dec
xchg
repnz
mov
push
ss
dec
aaa
enter
push
xor
sub
mov
sub
xchg
add
jecxz
shl
sbb
fdivs
stc
movl
aam
lret
xlat
mov
sbb
mov
ret
testb
cltd
xor
lcall
jle
loope
or
pop
inc
lds
dec
shlb
rol
stos
lock
roll
xchg
cwtl
test
lret
jecxz
mov
mov
push
mov
mov
and
cli
filds
es
fbstp
pop
dec
ja
repnz
fwait
xchg
xor
xor
popa
add
or
mov
sarl
dec
ret
jmp
xchg
push
mov
or
dec
cmp
int
cmp
rsm
add
int
xchg
mov
flds
dec
fldcw
dec
jne
int
xor
or
mov
js
push
aam
xchg
add
jo,pt
xorb
mov
enter
push
shll
pusha
stc
mov
push
mov
jno
dec
jbe
xor
xor
sub
dec
ror
mov
rol
lret
adc
rolb
mov
divl
mov
cwtl
ret
gs
jbe
sbb
in
dec
add
in
inc
xlat
daa
xor
adc
push
arpl
aad
inc
hlt
neg
call
into
adc
jge
shrl
push
pop
dec
xor
dec
xchg
lock
dec
adc
test
inc
shll
inc
sarl
xor
mov
pop
and
xchg
mov
mov
int
shr
jae
mov
repnz
mov
pop
iret
test
imul
int
and
clc
inc
xor
nop
int3
mov
mov
cwtl
inc
pop
loope
in
jmp
ljmp
or
enter
mov
cli
and
adc
bound
leave
push
addr16
pop
roll
push
dec
scas
mov
inc
aas
inc
dec
jmp
inc
inc
jmp
scas
xor
scas
aad
xor
sbb
in
std
enter
dec
add
or
imul
fldl
ret
rol
test
int
inc
ror
test
mov
inc
cmp
roll
int3
pop
enter
in
dec
mov
add
shll
or
repz
dec
and
mov
in
lock
lahf
and
xor
xchg
mov
mov
fidivl
jb
repz
loope
fdiv
xor
es
and
fisttpll
dec
arpl
adc
aam
mov
ja
ror
cs
popf
fs
insl
shlb
push
ret
jns
adc
cmp
pop
fprem
loopne
lds
js
mov
pop
and
pop
pop
flds
stc
mov
ret
aam
lock
mov
mull
test
in
dec
sub
arpl
out
icebp
fbld
cmp
inc
fld
jne
cmp
mov
mov
scas
mov
scas
mov
divl
mov
and
xor
loopne
nop
dec
iret
mov
mov
mov
mov
out
jae
pop
icebp
xor
lret
roll
mov
insb
add
into
mov
cltd
jns
lds
sub
jbe
icebp
xor
push
js
sub
jle
jmp
stc
aaa
sub
fwait
mov
mov
ret
stos
mov
xor
xor
mov
and
lods
hlt
fimull
fistl
movsl
mov
jg
or
daa
pop
cs
test
add
aas
pop
dec
test
xchg
mov
mov
in
pop
and
ret
dec
je
lds
repz
dec
mov
cld
ret
inc
pop
jp
enter
cmp
cwtl
aam
cmp
decb
test
pop
push
repz
pop
sub
dec
pop
fisttpll
imul
cmp
cmc
fnsave
mov
or
mov
testb
iret
xor
shl
and
icebp
sbb
xchg
inc
and
out
or
mov
xchg
repz
fwait
lret
and
hlt
dec
push
lods
call
loop
pop
mov
pop
dec
mov
outsb
jnp
mov
mov
mov
jae
jb
push
and
sti
in
or
jae
and
push
leave
fld
and
and
insb
in
outsl
xor
add
lret
lret
mov
mov
call
dec
or
push
insl
mov
push
mov
pop
mov
jl
push
std
mov
cli
mov
enter
inc
idivb
cmp
test
mov
out
shr
mov
cwtd
xchg
loopne
add
adc
jb
xor
fcoml
icebp
mov
mov
and
push
inc
les
adc
popf
aad
stos
lea
roll
repnz
test
add
adcb
add
in
stc
push
test
shrb
out
jne
adc
nop
int
icebp
cmp
cmc
leave
sub
add
rorl
rcll
dec
loope
loop
rclb
add
in
inc
loopne
cli
in
fmul
sub
push
dec
jge
ljmp
int
pop
shl
sub
aaa
push
ljmp
xchg
push
dec
and
mov
sbb
jmp
dec
sbb
cld
pop
fsubs
out
push
pop
enter
mov
popa
and
xor
and
or
outsl
sbb
inc
add
inc
shlb
jns
aad
or
sti
popa
add
xchg
push
dec
push
push
cltd
and
lds
sbb
push
dec
les
cmp
xchg
push
int
sub
xor
rcl
pop
jmp
test
mov
test
mov
mov
dec
jns
jmp
mov
sti
jle
sbb
loop
stos
sti
jnp
shll
mov
ficoms
fs
add
jno
mov
movsb
sbb
inc
jl
lret
mov
shl
xor
mov
pop
int3
jb
aad
fwait
movsl
cld
popa
lock
sub
cmp
enter
cli
mov
and
cld
and
es
jno
mov
sub
ss
int
mov
sbb
jae
cmp
lret
aaa
mov
leave
shlb
sbb
add
fidivl
shrb
add
aad
fidivrs
rcll
and
inc
gs
lret
int3
sub
into
mov
ljmp
fiaddl
test
roll
popf
add
cmpsl
pop
push
ror
in
inc
loopne
fwait
xor
push
mov
jo
mov
lahf
push
rorb
out
push
mov
mov
int
test
fcmovne
test
in
inc
fdivs
loopne
lret
or
stos
cmc
pop
test
sbb
and
ret
test
or
enter
mov
dec
repz
aad
mov
dec
xchg
sti
pop
mov
icebp
ret
repz
stc
cwtl
dec
xorb
and
lret
sbb
jb
xchg
fimull
jo
jle
cmpsb
aas
data16
mov
mov
mov
xor
nop
repz
fst
add
lds
movsl
xchg
mov
jne
jbe
inc
push
dec
repz
out
xor
nop
xchg
mov
mov
test
and
mov
dec
mov
xor
ret
mov
add
ds
std
pop
jg
sub
inc
ds
push
add
pop
faddl
ja
adc
and
sub
rcll
sbb
outsb
out
or
xor
mov
lret
cli
fsts
dec
adc
add
shrl
cld
frstor
movb
popl
dec
outsb
and
jne
je
test
imul
sbb
mov
repz
sub
sbb
sbb
mov
into
das
xor
sub
test
adc
leave
and
mov
cmc
or
adc
int3
dec
orl
pop
fnstsw
gs
push
repnz
bswap
xor
imul
sub
rcll
xor
leave
shll
and
sbb
and
stos
int3
int3
mov
pop
lret
sahf
aam
add
push
add
dec
shr
lock
test
sahf
push
cwtl
cmpsb
in
movsl
mov
aad
addl
lret
and
mov
push
inc
jae
shlb
test
sub
rcll
xchg
mov
fldenv
cmp
ficompl
sub
test
jle
imulb
jbe
and
ret
addr16
adc
xchg
repnz
add
fimuls
xlat
enter
pop
ljmp
mov
xor
fbld
sub
shl
iret
push
push
xchg
orl
aas
stc
add
or
sbb
fcomip
mov
repnz
scas
add
inc
and
in
push
insl
lock
cwtl
push
dec
push
mov
mov
jle
push
jbe
cmp
cmpb
xor
shlb
xchg
push
dec
pop
pop
enter
or
fnstenv
mov
rcr
add
mov
sbb
jmp
jbe
mov
rorl
mov
xor
lds
hlt
scas
je
dec
push
sub
leave
pop
cmpsb
sub
insb
stos
jbe
mov
cmpl
lock
ret
add
loop
cmp
pusha
pop
scas
sub
jne
mov
cli
int
mov
rcrb
mov
mov
adcl
fincstp
aaa
sahf
xchg
dec
add
push
ljmp
mov
add
loope
sbb
adcb
or
mov
mov
stos
out
fwait
cmc
movb
popa
pop
or
adcb
shll
rcll
dec
sbbl
ljmp
sub
xchg
incb
jns
add
or
xor
and
jo
or
and
ret
inc
pop
sbb
mov
mov
shll
lock
or
inc
or
rcrl
test
in
dec
in
inc
sub
dec
jae
je
inc
and
sbb
subb
hlt
int
add
sbb
inc
pop
iret
mov
jmp
sbb
cmp
cld
and
dec
adc
dec
cs
repz
shl
jecxz
repnz
iret
mov
das
push
ja
xchg
adc
ror
jmp
pusha
mov
cli
adc
lods
cs
dec
or
xor
icebp
ret
rcrb
rol
and
xchg
sarb
js
cmp
jno
andl
cli
jne
pop
push
iret
test
mov
mov
repnz
dec
mov
lret
iret
push
inc
pop
call
jnp
incl
gs
clc
in
aaa
mov
data16
cmp
sarl
pop
mov
cmp
lods
lds
push
das
push
mov
add
pop
xchg
xchg
repz
mov
sbb
lret
outsb
cmpsb
jg
or
adc
sub
jno
jne
cmp
jno
jne
adcl
aaa
leave
sub
cwtl
xorb
imul
pop
into
dec
enter
aad
or
inc
inc
jno
imul
xchg
push
lods
jno
shl
test
mov
adcb
test
sbb
adc
cmpsl
jno
icebp
test
push
icebp
test
push
jecxz
movsl
outsb
xor
int
aad
or
push
xchg
jno
insl
rcll
add
sbb
cmc
sub
or
lock
gs
jbe
icebp
fiadds
jo
cmpb
cmp
aam
xchg
jbe
pop
sub
add
scas
push
lds
aad
inc
daa
xor
lods
pop
sub
or
lcall
outsb
fildl
dec
call
fimull
shlb
fsubrs
dec
pop
neg
mull
dec
sub
jle
sbb
pop
sbb
ds
mov
xor
pop
adc
test
xchg
andl
pop
add
iret
and
and
mov
fxch
mov
inc
mov
mov
push
lods
inc
or
or
mov
pusha
mov
dec
xchg
icebp
cltd
imul
jb
or
std
pop
enter
inc
pop
and
shlb
or
in
lds
mov
stc
fisubs
loopne
xor
movsl
cli
mov
sti
iret
and
or
ret
aaa
dec
pop
xor
stos
mov
loope
mov
cltd
mov
and
mov
mov
cmc
lret
mov
stc
fbstp
ja
ljmp
scas
push
ftst
or
lock
repz
jl
push
mov
cmp
push
arpl
push
mov
xchg
xor
test
lds
lods
lds
pop
mov
lcall
xor
icebp
mov
jo
add
dec
pop
cmp
lcall
mov
mov
mov
pusha
or
outsb
sti
push
jo
insb
popa
insl
jecxz
mov
aam
push
into
shr
out
mov
adc
pop
lahf
fdivs
mov
mov
stos
ljmp
and
sub
outsb
push
and
adc
daa
pop
pop
xchg
inc
push
pop
pushf
pop
mov
dec
or
push
test
ret
push
jp
test
xor
push
adc
lret
lods
sub
cmp
hlt
xchg
dec
cmpsl
pop
int
mov
sbb
add
jmp
push
and
inc
inc
movb
leave
xor
lret
mov
addr16
add
xor
out
mov
mov
xor
movsb
dec
mov
sti
into
and
div
or
sahf
test
addb
push
cmp
cli
clc
mov
iret
mov
lahf
adcl
arpl
daa
ljmp
inc
fwait
and
or
dec
movsb
int3
jl
sahf
pop
stos
xchg
icebp
mov
popf
in
stos
mov
xor
jne
xor
into
stc
mov
and
mov
jp
jp
iret
rolb
aaa
mov
sub
mov
jg
rorb
jg
push
push
sub
mov
bound
ror
xchg
into
mov
pop
test
test
jge
push
stos
loop
push
jns
inc
nop
mov
lock
and
sbb
repz
and
add
repz
loopne
mov
cmp
cmp
bound
les
test
sbb
mov
dec
push
mov
lock
loopne
cwtl
xchg
cmp
rcl
mov
push
bound
stos
sarl
push
test
lock
dec
xchg
xor
icebp
cmp
adc
test
mov
psubw
jne
icebp
jmp
int
fmull
icebp
add
int
cmc
stc
gs
repz
sub
inc
call
ret
fld
pop
imul
inc
add
fisubrl
inc
xchg
shrb
rcl
xchg
repz
sub
into
stos
hlt
dec
xor
cmp
add
test
mov
out
sbb
push
sbb
inc
mov
push
pop
jge
sbb
test
push
mov
push
push
negl
add
into
inc
shll
cmpsl
dec
mov
mov
fs
inc
mov
xor
fs
repnz
test
mov
xor
popf
ds
mov
add
mov
incl
cmp
ror
xchg
dec
inc
pop
xlat
push
fistl
add
enter
xchg
scas
aam
jnp
dec
fcoms
cld
call
add
fidivl
shll
test
add
add
shrl
fwait
xchg
repnz
xor
ret
sub
ljmp
mov
imul
int
dec
jle
dec
mov
mov
bnd
incb
mov
enter
push
rcl
sub
int3
mov
test
rcrl
dec
shrb
sbb
dec
mov
aas
das
jo
fldcw
dec
jae
sbb
jl
nop
lock
int
mov
add
sbb
cmp
shrb
sti
test
shrb
mov
mov
xchg
lock
imul
roll
jmp
icebp
xorl
ret
test
inc
sarl
pop
or
sbb
mov
lret
test
insb
sbb
inc
outsb
jp
cmp
mov
hlt
push
outsb
or
mov
cmp
test
mov
daa
es
out
test
std
aam
jecxz
sbb
add
ret
pusha
std
pushf
daa
ljmp
xor
lods
fcomps
stos
enter
cmp
call
and
jbe
push
int3
int3
cs
mov
mov
gs
mov
ja
jns
fsubs
dec
int
jae
cld
repz
mov
daa
iret
or
xor
gs
ljmp
jg
mov
fisttpl
jbe
in
mov
push
mov
xor
aam
ret
dec
adc
movl
nop
push
push
inc
sbb
inc
mov
push
cmp
dec
icebp
loope
and
out
add
ja
cmp
movl
aas
imul
ljmp
popa
fmull
sti
aaa
pop
in
xchg
popa
add
lret
sub
repz
outsb
jno
aam
lcall
adc
pusha
push
add
pop
mov
jecxz
sub
mov
repz
subb
inc
sbb
cmpsb
mov
fyl2x
imul
sub
cmpsl
in
mov
out
lret
add
inc
mov
arpl
wbinvd
popa
cli
aaa
test
jle
inc
arpl
movsb
rorl
les
shll
and
repz
out
imul
sbb
int
mov
enter
test
filds
test
mov
test
push
push
mov
lds
adc
shll
lock
mov
xor
mov
add
and
mov
adc
or
cs
in
push
jae
gs
movnti
push
iret
shll
xor
push
shrb
scas
je
mov
fidivs
shll
int
or
pop
cltd
stc
test
mov
in
sarb
shlb
rcr
fsubrs
shll
push
mov
in
call
dec
or
sub
sarl
sub
add
stc
test
add
test
adc
mov
pop
rol
push
lret
test
stos
sbb
or
dec
push
dec
stos
nop
fsubl
shll
cmp
lret
aas
mov
mov
pop
dec
test
cmp
in
sbb
and
xorl
lock
dec
mov
and
fcom
add
mov
and
inc
mov
test
not
jae
inc
fcmovu
cli
into
and
dec
lock
pop
aam
push
or
mov
dec
lds
mov
mov
mov
xlat
xor
mov
push
mov
mov
pop
mov
mov
fcomip
push
ret
xor
shl
cmc
iret
ljmp
fdivl
or
inc
rorb
out
mov
inc
scas
jl
rol
push
xor
outsl
push
mov
push
dec
cmp
int3
roll
hlt
lret
hlt
popf
imul
out
mov
and
xchg
cmp
clc
lock
out
test
ret
lock
jmp
and
and
icebp
cld
adc
push
and
push
xchg
aas
cmpsl
cmc
inc
into
or
push
jmp
push
mov
dec
mov
repz
pop
pop
arpl
pop
mov
loopne
ljmp
and
ja
mov
test
mov
std
ret
rorb
jbe
sbb
pop
sub
hlt
iret
mov
mov
adc
test
jae
sub
xorl
dec
mov
sub
and
stos
lds
jge
inc
inc
push
mov
mov
sbb
jae
and
cmc
or
js
in
sbb
hlt
decb
ret
and
rcll
cli
enter
pusha
adc
adc
cs
daa
push
mov
mov
lock
mov
pop
adc
divl
test
call
out
ret
icebp
mov
nop
leave
mov
jge
push
jmp
inc
mov
or
sbb
ljmp
pop
jg
xor
mov
clc
imul
xorb
xor
shl
or
or
lock
jmp
sub
jmp
cld
insl
rcrl
lret
inc
iret
ror
jns
pop
jnp
cmpsb
xor
stos
stc
and
les
pop
xor
or
and
in
mov
and
or
xor
add
in
scas
xor
iret
pop
ds
icebp
xchg
outsb
push
ja
cmpsb
leave
xor
rcll
insl
stos
sub
clc
mov
mov
mov
hlt
jmp
sbb
mov
push
cmp
xchg
or
ficoml
movl
les
xor
out
repnz
xor
and
jno
mov
in
mov
nop
cwtl
push
xor
je
and
or
xchg
push
enter
lods
gs
push
les
arpl
ror
jne
test
js
jmp
add
xor
jmp
insb
jae
cltd
and
aad
add
push
add
inc
stos
xor
ret
dec
dec
sbb
sarb
jl
icebp
stos
pusha
sbb
out
out
pushf
ror
test
mov
lahf
sub
or
dec
or
push
test
fldenv
ret
cltd
daa
leave
addl
sbb
mov
std
mov
jne
aad
addr16
loope
sbb
mov
xor
dec
aad
dec
and
mov
ret
push
mov
arpl
or
daa
aas
xor
sbb
out
jmp
xor
outsl
xchg
lea
dec
add
sarb
shl
int3
das
inc
add
mov
or
cld
push
jecxz
and
shlb
dec
stos
ret
lock
daa
push
les
xor
dec
popa
add
and
xlat
push
ret
and
push
and
add
mov
lret
jne
cmc
fstpl
add
add
push
xor
fldenv
ja
sbb
leave
insb
add
fists
loope
inc
mov
pushf
outsb
pop
pop
lret
fisttpl
scas
mov
push
sbb
pop
cmp
sarl
add
sbb
push
cmp
and
lock
shlb
out
jmp
push
arpl
movsl
cwtl
repz
mov
xor
scas
les
cmp
stc
lds
gs
dec
fsubl
call
or
sbb
and
mov
xor
shlb
lods
pop
sub
mov
repnz
shl
xor
lcall
push
add
call
setbe
int
aad
pop
int3
out
push
xor
and
or
and
outsl
and
mov
rcll
test
movsb
rorb
inc
or
test
mov
mov
add
jnp
xchg
adc
jmp
mov
in
dec
mov
jl
mov
in
mov
aam
popl
push
mov
test
cmp
adc
and
sbb
cld
or
dec
cmp
adc
cwtl
je
inc
inc
test
xor
lods
push
ret
adc
test
repz
add
out
mov
inc
jne
mov
stos
fsubs
ljmp
lods
xlat
rorl
das
data16
pop
sahf
jnp
adc
add
notl
repz
pop
jg
xchg
cmp
pop
hlt
dec
mov
dec
daa
mov
and
pop
or
out
test
dec
xchg
add
mov
xor
or
les
push
xlat
xor
push
mov
jo
xchg
iret
push
aad
mov
sbbl
dec
out
xor
cmp
aaa
pop
scas
xchg
mov
sbb
movsb
xchg
or
sub
dec
dec
es
mov
jb
adc
jb
push
dec
mov
fcomip
stos
xorl
mov
mov
mov
ljmp
sbb
dec
sbb
int
les
enter
dec
es
clc
sbb
mov
loope
enter
lret
icebp
sub
dec
mov
cmp
test
leave
fdivrp
dec
or
clc
mov
jnp
imul
lock
mov
pop
mov
dec
adc
jle
push
adcl
push
or
mov
test
xchg
xor
int
push
pop
cmp
dec
sbb
adc
jb
mov
mov
out
xor
lock
mov
and
call
inc
mov
ja
enter
aam
mov
mov
dec
fldcw
lds
data16
imul
mov
adc
mov
or
jg
ds
and
jnp
jmp
mov
xor
fbstp
cmp
clc
mov
daa
test
dec
mov
xor
jecxz
and
loope
aad
cmpsl
jl
je
mov
push
pop
mov
cmpsb
aam
mov
mov
je
pushf
outsl
dec
out
mov
stc
or
sti
inc
push
push
iret
daa
jle
jmp
push
jns
ret
dec
cltd
and
sbb
mov
jnp
xor
fsubrl
cmp
in
int3
int
add
jb
mov
mov
mov
fistpll
es
lock
arpl
fistl
or
outsb
or
lea
lds
mov
hlt
roll
jl
andl
add
aad
aas
in
out
ror
int
int3
mov
lds
sarl
or
aad
ss
cmp
xor
mov
or
incb
mov
and
sub
jbe
mov
xchg
xor
stos
push
or
xchg
in
cmp
sub
dec
stos
jle
add
fmull
mov
adc
and
xor
inc
mov
cmp
out
test
and
inc
adc
mov
xchg
fmull
or
movsl
sub
xor
imul
or
roll
sbb
xchg
sub
outsl
dec
pop
mov
mov
mov
mov
fisubs
or
mov
shll
ds
add
cmp
xchg
aas
sub
arpl
call
int
cmpsl
mov
and
jl
mov
pusha
stc
add
xchg
loope
lcall
lods
mov
sub
in
ds
adc
sub
fldcw
idivb
ds
inc
mov
jle
fidivs
mov
cwtl
xor
sub
mov
xor
and
loop
mov
cli
mov
repz
lds
jns
xchg
mov
int
push
xchg
ja
aas
int3
dec
add
pop
aaa
out
fimull
xor
dec
lock
into
jno
outsl
mov
add
jle
lds
icebp
jbe
mov
ret
mov
xor
stos
cmpsl
adc
pop
shrl
ljmp
repnz
int
jae
popf
dec
sub
daa
cmpsl
rolb
pop
stc
ror
loopne
fadd
adc
dec
addr16
sbb
lcall
dec
fdivs
adc
mul
rcrb
jmp
mov
rorb
jge
xor
add
imul
fcmovu
cmpsl
test
in
lret
int3
cmp
jno
pop
clc
stc
fldenv
cld
popa
sbb
push
scas
jo
add
push
xchg
ja
out
sbb
mov
adc
jle
movl
imul
into
aaa
sbb
scas
enter
dec
or
dec
shrb
mov
lret
ss
xlat
out
add
mov
icebp
stos
scas
and
subb
int3
dec
add
ja
imul
or
dec
mov
jp
outsb
aam
mov
lds
add
dec
inc
inc
add
icebp
ss
popf
mov
test
adc
hlt
adc
xchg
mov
mov
push
push
push
call
addr16
jle
add
push
ret
sbb
xor
add
cmp
es
lods
adc
roll
or
shr
dec
in
out
stos
fld
aam
push
sbb
or
mov
mov
cld
xchg
movsl
int3
and
test
test
mov
movsb
outsl
push
movsb
sbb
enter
adc
and
shrl
adc
test
ljmp
adc
ljmp
rcll
push
repnz
push
mov
lods
roll
fisubrs
push
push
in
mov
jb
mov
outsb
mov
leave
test
inc
push
clc
and
rcrl
orb
sub
rol
pop
or
add
outsl
mov
dec
call
dec
xor
icebp
mov
hlt
mov
shll
out
enter
mov
jl
in
into
es
mov
jns
mov
dec
cwtl
sbb
lock
and
mov
sbb
xor
pop
imul
repz
rcr
push
pop
fidivrs
push
in
test
mov
dec
jmp
sbb
xor
pop
dec
sar
enter
mov
dec
jmp
inc
cmc
adc
and
jo
stos
xchg
xor
fdivl
mov
stos
or
pop
into
jbe
fmul
sbb
dec
or
sarl
jecxz
and
lret
les
es
push
pop
std
test
stos
xchg
insl
or
inc
jg
push
shrb
int
mov
inc
mov
or
icebp
js
fisubs
sbb
mov
push
push
xlat
add
jno
mov
mov
ja
icebp
mov
and
stc
and
pop
jo
or
push
jmp
mov
mov
stos
mov
lcall
popf
adc
jo
stos
test
jbe
xchg
inc
pop
jae
xchg
aas
inc
cmp
into
and
dec
mov
push
ror
xor
cmpsl
cmc
xor
fistps
repz
mov
test
or
in
adc
jae
in
sti
imul
icebp
std
jno
xchg
push
jl
out
mov
sub
int3
sbb
jle
pop
push
repnz
push
leave
out
add
sbb
inc
cltd
mov
loope
sarl
push
shlb
adc
pop
test
cmp
in
adc
inc
push
cltd
aad
testl
mov
test
cmpsb
cltd
sbb
fidivl
dec
hlt
add
out
outsb
xlat
xchg
xor
pop
push
xlat
popf
mov
ljmp
add
iret
cmp
frstor
aad
nop
in
sti
bsr
test
or
mov
dec
mov
jne
pop
jge
cmpsl
pusha
negl
mov
movsb
js
iret
mov
adc
addr16
and
dec
in
mov
mov
push
xor
add
cmpl
int
adc
inc
pop
enter
lret
fnstsw
inc
mov
and
push
mov
jb
out
dec
aas
and
lret
mov
nop
adc
cli
push
and
test
and
mov
jae
and
rolb
xor
mov
jge
daa
pop
orb
imulb
int
mov
push
fdivl
push
push
adc
or
ss
adc
repz
aas
cld
sub
frstor
shl
mov
rcll
add
dec
and
cmp
xor
and
testl
ss
inc
pop
mov
lods
xchg
jbe,pt
mov
fimull
sbb
loope
scas
test
lret
test
into
aaa
ret
push
dec
ja
es
jae
test
mov
xlat
mov
loopne
into
xor
les
xchg
adc
shrb
shrb
pop
cmp
dec
cmpb
addr16
push
pop
mov
sbbb
jmp
int3
in
int3
mov
mov
cli
cmpb
int
add
mov
aas
add
jg
aam
clc
adc
cld
add
fadd
repz
sahf
cli
cmpb
add
imul
notl
pop
lret
stos
pop
cld
inc
shll
paddb
shll
repz
out
cld
dec
add
leave
cld
dec
cmc
aaa
ror
cld
inc
xor
dec
mov
outsl
mov
sbbb
and
repz
add
xchg
jecxz
sbb
lods
in
xor
nop
xor
lods
push
int3
in
add
ss
mov
std
or
mov
and
movsb
mov
jmp
push
arpl
lods
popa
mov
mov
jecxz
in
pop
outsb
xor
and
aas
jl
cmp
or
fimull
aam
divl
int3
ror
shll
ds
fisttpl
mov
rcrb
test
push
sti
dec
out
mov
pop
pop
js
imul
fcoms
ret
sti
std
cld
ret
mov
mov
push
fwait
test
nop
out
jl
test
sbb
dec
jnp
push
sub
pop
shl
pop
icebp
sbb
add
dec
push
sub
dec
adc
hlt
xor
jbe
roll
aam
aad
jb
les
push
or
cmp
pushl
pop
mov
and
call
call
fcoml
arpl
icebp
mov
mov
sub
xchg
sbb
sbb
mov
sub
insl
xchg
aad
push
jmp
push
shrb
mov
mov
add
push
push
or
mov
lret
cwtl
dec
test
xor
or
push
into
popf
mov
push
loope
xchg
test
add
lds
addr16
jmp
into
out
out
pop
adc
iret
xchg
addr16
jbe
mov
pop
ficompl
mov
es
jmp
stc
mov
cmc
dec
add
jle
call
xor
in
push
mov
inc
testl
push
mov
js
dec
lock
stos
add
fsubp
lret
icebp
dec
fwait
mov
negl
roll
mov
shlb
pop
mov
int3
pop
sub
xchg
orl
mov
mov
jl
mov
add
add
negl
repnz
cmpsb
inc
inc
in
push
enter
mov
pushl
cmp
rorl
std
xchg
fsubl
inc
sub
fcomp
into
inc
aas
jae
int
stos
dec
orb
push
call
ja
sbb
inc
shll
dec
imul
lret
rorl
out
push
out
inc
add
xchg
mov
fisttpll
into
lock
push
test
loopne
roll
into
mov
mov
inc
mov
arpl
or
adc
popa
out
pop
cmovne
cmpsl
xlat
push
loopne
ror
cmc
or
cmp
or
mov
push
pushf
ret
ffreep
fnsave
and
or
cmc
call
jae
pop
clc
fists
and
ret
mov
ja
push
cmpb
pop
in
jle
xchg
mov
cli
stos
and
jbe
das
sbbb
sti
add
nop
mov
repz
int
sbb
mov
das
jbe
pop
mov
cs
imul
and
jbe
lret
icebp
mov
cmpsl
ljmp
pop
mov
pop
lret
ja
addb
pop
mov
lods
pushl
sbb
xor
or
sub
xchg
xlat
test
stos
push
mov
je
outsl
rorl
cmp
sbb
mov
mov
cli
fbld
popf
xor
js
mov
lret
push
dec
jmp
shr
stos
lahf
sub
jns
mov
int
imulb
ljmp
ja
stc
dec
sbb
pop
cli
sti
enter
mov
add
cld
sub
pop
dec
inc
aam
ja
pminsw
xor
dec
xor
jo
fstl
mov
iret
mov
xor
test
rorb
cmp
lret
add
stc
jl
or
push
or
dec
mov
or
lret
aad
rcr
ret
xor
cmpsb
xor
mov
dec
faddl
xor
sbb
leave
leave
mov
xor
cmpsb
xlat
cmp
int3
aad
shlb
std
xor
or
xor
into
adcl
pop
lret
cmpsl
sbb
mov
movsb
inc
cmp
mov
dec
fcom
cwtl
fucomp
dec
xchg
int
mov
xchg
mov
xor
adc
into
sub
cmpsb
mov
xor
in
jb
test
jmp
adc
call
xor
or
mov
inc
iret
pop
sub
sub
jae
mov
dec
andl
nop
dec
cli
mov
xchg
xchg
sbb
dec
sahf
lds
adc
call
js
adc
lds
mov
idiv
cmp
lods
xor
jmp
imul
push
jne
mov
aad
lret
sbb
fadd
aaa
mov
outsl
pop
adc
insl
cltd
in
gs
mov
enter
add
inc
xlat
cmpsl
inc
adc
xor
or
sbb
or
std
mov
int3
mov
dec
xchg
fisttpl
iret
sti
icebp
fiaddl
mov
jle
xlat
in
ret
fmull
jo
dec
xor
jbe
and
test
inc
push
adc
cmp
sbb
ret
cmc
sub
pop
dec
mov
adc
inc
sarl
jmp
add
jne
pop
rolb
sar
pop
hlt
mov
mov
mov
adc
ds
rorl
lock
fdivs
inc
aas
shll
dec
pop
in
leave
push
fneni(8087
stos
or
adc
mov
jno
mov
push
ret
int
pop
icebp
fiaddl
push
bnd
aam
outsl
adc
and
ffree
jbe
mov
mov
stc
mov
iret
xor
xchg
push
std
mov
shrb
and
mov
mov
xor
mov
adc
std
loop
and
xchg
cmp
push
jo
sbb
adc
testb
out
inc
adc
dec
lods
mov
lds
lds
jb
fnstcw
push
pop
into
xchg
cmp
fnstenv
insl
enter
xchg
dec
repnz
fdivr
movsl
js
inc
leave
cmp
adc
cmpsb
icebp
inc
mov
pop
add
insb
adc
pushf
and
jmp
repnz
and
adc
dec
cld
into
hlt
pop
add
sub
mov
pop
xor
xor
loop
std
orl
pushf
cld
pop
fcmovnb
gs
leave
subl
dec
adc
cmp
cmp
mov
in
stos
push
sub
add
les
sub
sub
ds
adc
add
dec
call
mov
fnstenv
xor
in
push
rclb
mov
pop
cmp
ds
xor
sbb
cmpsl
mov
dec
cmp
mov
push
xchg
inc
sub
cli
push
shll
mov
fisubl
mov
xchg
lds
frstor
mov
sub
push
hlt
test
outsb
loopne
xor
push
cld
ret
cmp
je
push
adc
push
fld
shll
lret
call
ds
mov
aaa
jg
int
sbb
fnclex
add
or
xor
cli
sub
fwait
add
aam
jle
fistpl
push
sbb
fs
cmp
push
jns
les
mov
add
test
in
push
aam
ljmp
sbb
push
in
stos
xlat
repnz
sub
sub
xchg
mov
mov
mov
aaa
dec
push
cmpsl
sti
popa
add
aaa
jne
mov
inc
test
popf
fstps
mov
mov
push
enter
loop
and
out
mov
sub
lods
test
mov
and
add
mov
scas
scas
popa
ficompl
xorl
mov
test
roll
adc
pop
out
in
notl
gs
inc
imul
out
cmpsl
subl
fldl
test
scas
daa
push
sbb
mov
cmp
enter
mov
imul
shr
int
mov
cld
sub
aad
mov
xor
hlt
data16
stc
cmp
and
mov
dec
shl
int
dec
cmpsl
push
je
and
cmp
xchg
sub
mov
mov
adc
dec
lret
xor
dec
pushf
jne
sbb
mov
test
xor
out
pop
add
stos
or
jnp
cmp
push
test
int
divl
push
in
pop
push
pop
mov
mov
inc
mov
jbe
push
or
aam
lds
mov
pop
push
adc
fdivrp
sbb
data16
inc
jp
xor
incl
lret
mov
pop
enter
adc
rorb
and
ja
and
dec
or
ret
jae
pushf
lret
cmpsb
mov
dec
jo
sub
adc
mov
or
mov
mov
add
mov
hlt
jae
lock
mull
mov
mov
cmp
mov
mov
push
jb
lea
pushf
jge
cs
lods
fwait
out
lret
aaa
lods
dec
inc
lds
in
psrld
es
andb
mov
daa
fistl
in
dec
sub
cmp
loope
push
insb
mov
mov
and
les
imul
cmpsl
ja
loope
adc
cmp
shll
mov
loopne
out
cmp
lock
loope
imulb
inc
cmpl
repz
aad
dec
loope
jl
push
daa
xchg
idiv
sahf
les
adc
inc
and
mov
clc
mov
cmp
loopne
sbb
sub
loope
test
mov
mov
repz
push
mov
jae
mov
pop
mov
jmp
mov
sub
movsl
mov
fisttpll
cli
mov
rcr
cmp
roll
movsl
mov
in
sbb
test
rcl
xchg
lods
lea
add
lds
add
popw
mov
adc
shll
jecxz
int3
jecxz
in
int3
pop
and
lea
xor
dec
jp
ret
rol
or
mov
rol
mov
add
cltd
fcomp
pop
ret
test
scas
test
cmpsb
js
imul
mov
xor
dec
mov
or
int3
push
sar
lods
dec
stos
lahf
mov
mov
xor
adc
push
and
jge
lahf
mov
cmpsl
jae
xchg
outsl
mov
xchg
xlat
test
mov
in
into
in
dec
mov
jp
stos
pop
test
cmp
mov
shr
icebp
mov
cwtl
lods
jae
xchg
pop
pushf
mov
and
jmp
jb
icebp
loopne
dec
jb
jns
adc
fcmovnu
loop
outsl
dec
or
call
cwtl
scas
inc
and
inc
shl
shlb
rcr
cmc
lods
test
stos
xchg
pushf
sbb
rcrb
xor
add
or
jbe
mov
pop
pop
outsb
vandpd
cmpsl
rol
out
cmp
cli
add
aad
test
test
repnz
fsubs
fstps
cwtl
dec
adc
pop
clc
push
mov
pop
movsl
inc
movsl
or
add
mov
push
daa
loope
lcall
pop
aad
rcl
pop
push
jecxz
jb
xor
jno
cmp
mov
mov
pop
dec
pop
sbb
mov
xchg
mov
mov
jp
ret
pop
pop
roll
xor
xchg
dec
sbb
popa
test
dec
fldl
lahf
clc
iret
aad
xchg
jg
xor
mov
xor
mov
push
ljmp
shrl
xchg
inc
mov
jnp
xchg
aaa
scas
sub
jne
nop
test
cmp
inc
dec
les
jmp
jl
daa
push
insb
mov
jge
shl
and
pop
int
mov
mov
imull
enter
fucomi
adc
movb
fs
xor
ljmp
push
push
sub
mov
mov
enter
xor
dec
lods
outsb
lcall
std
scas
dec
int
jnp
push
dec
jnp
xor
cs
aad
repz
nop
mov
loopne
adc
sbb
push
movsb
imul
aaa
sbb
leave
jb
adc
adc
shl
and
aad
mov
lret
inc
adc
divl
inc
jns
lret
int3
sarl
mov
mov
lret
cmpsb
rcrb
in
jo
jne
imul
repz
leave
cmc
adc
sbb
sub
inc
mov
sbb
or
jns
and
push
xor
icebp
ror
jns
jne
test
or
pop
loop
in
add
stos
add
and
outsl
sbb
jmp
and
push
cmpb
outsl
pop
stos
sub
add
or
popf
fmull
sarb
pop
cmp
int
insl
shrb
cmp
cli
daa
jno
xor
imul
pop
loop
or
rcll
jns
loope
lret
hlt
fadd
and
shrl
pushf
hlt
push
lret
es
and
sub
and
clc
aam
dec
mov
jecxz
or
rol
shl
or
stos
fnsave
shll
fs
shrl
push
stos
push
dec
cmp
es
and
push
and
stos
adc
and
dec
push
pop
clc
xchg
sub
sbb
mov
adc
xchg
xlat
xor
add
neg
xchg
pop
adc
add
xorl
xchg
push
mov
imul
icebp
nop
cmp
dec
in
cli
movsb
in
inc
scas
xlat
stos
jmp
and
add
shlb
adc
rclb
rorb
aam
stos
cld
popa
loopne
pop
pop
and
stc
jns
jmp
jb
into
mov
aaa
mov
xor
push
popf
ss
stc
jbe
rcrb
mov
movsb
movlps
jg
fsts
ret
out
mov
enter
add
push
sarl
push
xchg
or
push
sbb
xlat
jmp
mov
inc
push
mov
dec
and
std
pop
test
mov
stos
mov
pop
fadds
jbe
sbbl
stos
in
adc
or
test
repnz
jbe
int
cmp
int3
jg
shlb
jno
sbb
ret
inc
ljmp
sbb
inc
dec
pushf
or
cmc
dec
push
jl
mov
insl
xor
fsub
add
mov
xchg
scas
jno
mov
mov
push
push
pop
in
sub
xlat
mov
ffreep
test
mov
mov
mov
adc
les
xor
test
or
shr
mov
mov
cmpl
hlt
xor
mulb
into
push
mov
and
jp
ror
leave
mov
cli
jo
jmp
mov
rol
pushf
sbb
mov
dec
mov
movsb
fdivp
leave
sarl
lds
rcll
xchg
decl
jge
xchg
lock
loopne
das
push
jns
xor
lods
xchg
ficoms
add
pop
cmc
cmp
lods
pop
pop
xchg
movsl
int3
xchg
fsub
or
jmp
rcr
add
aaa
cmpsl
cmp
ror
mov
icebp
aam
ret
aad
movl
cmc
xor
jo
dec
cli
cmpsl
icebp
ds
in
xlat
mov
mov
shlb
or
sahf
push
lret
mov
fldt
cwtl
mov
fwait
xchg
dec
xor
fdivs
xchg
xchg
mov
xchg
repz
cmpsb
mov
dec
je
xor
push
sub
mov
rol
mov
jmp
mov
iret
rorb
mov
fnstenv
mov
out
inc
pop
movl
or
sbb
and
lock
add
or
jnp
cltd
or
cs
test
test
dec
ss
shll
mov
lahf
scas
aad
xchg
or
push
jecxz
mov
dec
shll
mov
shrl
xor
adc
int
mov
mov
dec
je
mov
adc
add
roll
in
clc
jmp
xchg
cmp
fists
inc
cmp
fdiv
fwait
mov
imul
push
lahf
js
mov
mov
pushf
add
mulb
adc
daa
stos
outsl
pop
adc
mov
lahf
ja
sbb
dec
mov
xor
mov
pop
out
ljmp
jae
sbbb
mov
movhps
dec
ret
jns
mov
cmp
ljmp
dec
cmpsl
xor
sub
fnstsw
dec
mov
xchg
or
xchg
outsl
push
out
stos
add
sub
jecxz
mov
inc
mov
rolb
jae
inc
dec
scas
popf
cs
push
sbb
sbb
xor
xlat
push
and
sbb
inc
sarb
inc
int3
push
jmp
mov
aad
jb
push
jp
fwait
ret
xor
xchg
popa
aad
lds
pop
addb
and
push
inc
dec
repnz
movsl
cli
aas
adc
iret
mov
test
push
push
pop
pushl
adc
repz
jo
push
mov
mov
orl
cmp
cmp
mov
push
cli
mov
cmp
cmpsl
adc
sbb
mov
iret
xchg
movsl
add
fidivl
sbb
mov
mov
scas
or
ret
iret
jo
mov
and
aam
xor
pop
lret
inc
mov
xor
enter
inc
std
ret
dec
mov
inc
jns
sbb
imul
pop
fisttpl
pop
push
mov
sbb
mov
mov
addl
or
das
int
in
xor
push
sbb
mov
iret
xor
pop
pop
inc
xor
push
loop
jg
stc
scas
push
dec
dec
cmpsl
pop
shll
adc
xor
mov
leave
psubsw
or
wbinvd
xchg
ret
ret
cmp
xchg
cmc
xchg
or
inc
rolb
pop
add
jg
mov
mov
in
or
dec
lcall
mov
iret
xchg
into
push
jnp
xchg
outsb
inc
xlat
push
mov
sbb
stos
or
lret
js
cwtl
sub
notb
subb
lret
lcall
xchg
pop
gs
ret
shll
mov
or
ret
inc
in
adc
mov
and
addl
jne
push
jae
enter
jge
cmpsl
les
mov
stc
cli
mov
pop
pop
and
inc
cmp
jo
xor
ljmp
push
mov
push
mov
call
repz
mov
mov
pop
lods
sti
pop
out
adcb
inc
iret
rcrb
push
or
in
fidivl
mov
add
push
mov
and
jno
add
add
lret
push
cmp
mov
xchg
jg
or
jno
dec
xor
ja
test
cmp
pop
dec
add
add
jbe
ror
xor
stos
cmp
jb
out
ljmp
leave
lods
adc
inc
in
mov
jae
mov
loope
in
int3
adc
stos
in
inc
out
mov
xor
and
mov
inc
push
cltd
add
repnz
pushf
daa
shlb
fstpt
jl
push
jne
cmp
xor
rol
pop
cmp
fnsave
popf
dec
jnp
jle
dec
pop
add
add
lret
dec
repnz
cmpsl
insb
lock
adc
pop
dec
jl
adc
xor
fbstp
and
dec
fwait
scas
jle
cmc
bound
jne
xlat
add
mov
xchg
in
and
cld
int
mov
imul
lods
insb
enter
repnz
sub
enter
xchg
push
lcall
outsb
mov
jno
xor
loopne
in
iret
push
lahf
in
mov
xor
fnstcw
loope
into
mov
and
adc
in
leave
int3
mov
out
enter
shll
or
test
int3
orl
arpl
test
jne
insl
cmp
call
and
aam
icebp
xchg
jmp
add
lret
in
add
and
lcall
jmp
lods
in
cmp
xor
mov
aam
cltd
cltd
jecxz
jb
enter
mov
lahf
imul
pop
insb
int
lods
std
lods
aaa
ret
pop
push
clc
rcr
test
gs
sub
pop
dec
dec
sbb
out
lds
sub
call
lds
aad
imul
fadds
fcomi
cmp
test
and
mov
popa
int3
lret
cmp
dec
ljmp
sub
mov
sub
jnp
int
insl
fisubs
mov
repz
and
xor
rorb
mov
adcb
pop
lds
call
arpl
scas
filds
xor
sar
shrl
cmp
dec
add
xchg
sbb
call
rorl
push
repnz
ljmp
std
not
popf
mov
stos
mov
dec
pop
popa
in
ljmp
mov
aas
dec
mov
mov
push
ficomps
jne
in
lret
push
repz
ds
xor
rorb
xchg
neg
xor
mov
pop
lds
inc
mov
fdivrs
fisubrs
xchg
inc
xor
sar
sti
repnz
dec
sub
test
in
adc
adc
xor
pop
mov
add
sbb
cs
xlat
int3
cwtl
loop
test
call
fyl2xp1
ljmp
lcall
shll
or
xor
rcrl
rolb
adc
popf
pop
or
leave
out
outsb
dec
inc
sahf
dec
fstpt
sarb
mov
mov
mov
mov
cmp
mov
cmpsl
repnz
push
mov
mov
pop
les
xchg
mov
add
in
cli
lret
sti
push
xor
imul
repz
mov
mov
sbb
or
fistl
pop
call
lds
mov
push
icebp
jno
xchg
push
int3
ljmp
lret
sub
pop
dec
push
scas
in
jmp
fcmovu
mov
clc
mov
cmp
xchg
xor
pop
dec
fimull
hlt
jmp
mov
pushf
cltd
stos
push
cmpsb
jae
cmc
push
and
mov
mov
out
psubw
mov
adc
pop
jge
jb
xchg
cmp
aam
and
cwtl
nop
push
pop
int
addb
stos
out
and
adc
mov
sbbl
inc
mov
in
mov
ljmp
fistps
lret
pop
push
loope
mov
pushf
and
rcr
inc
jno
into
adc
std
test
dec
repnz
bound
xchg
mov
mov
repz
fstpl
sbb
add
sti
pop
xlat
dec
loop
cmp
and
roll
pop
sbbl
and
cmp
mov
mov
dec
cltd
jg
rcpps
out
inc
rcl
dec
cld
jg
es
add
aas
mov
stos
sar
scas
shll
sbb
mov
adc
dec
xchg
movsb
arpl
or
fwait
ljmp
repnz
int
jne
adc
mov
insb
push
xor
das
lods
xchg
and
fcomps
sub
cmp
rcl
cmp
incl
xchg
fsts
xor
in
sbb
jle
mov
loop
mov
mov
jmp
add
mov
ficoms
stos
mov
lds
inc
mov
push
notb
add
xor
add
mov
scas
stc
xor
aam
adc
mov
enter
insb
xchg
test
out
mov
pop
iret
loopne
rcl
mov
jns
scas
sbb
cmp
inc
mov
mov
pop
in
sbb
fnstcw
lods
xorb
sbbb
jne
sbb
ds
out
dec
incl
repz
sbb
outsl
and
dec
test
mov
ret
jns
jl
popf
xchg
movsb
mov
push
leave
and
roll
bound
fdivs
mov
stos
mov
jg
or
mov
inc
jb
mov
pop
fdivrl
sbb
pop
xor
push
push
fstp
jns
add
imul
jl
xor
jecxz
mov
sbb
sti
cli
sahf
jns
hlt
int
lret
xor
xor
in
ret
lret
test
ljmp
test
add
repnz
pop
or
pop
lcall
std
ret
test
out
lret
sbb
jns
dec
stos
mov
inc
daa
mov
jle
repz
stos
in
js
dec
mov
cmp
jg
and
cld
rsm
sarl
es
inc
pop
int
xor
adc
jle
jns
testl
ja
mov
pop
fs
loopne
test
sbb
mov
cmpsb
lcall
inc
sub
aaa
int
stc
insl
push
nop
dec
cli
push
inc
scas
and
in
pop
add
add
dec
outsb
mov
stc
mov
mov
std
cld
xor
orb
mov
std
jo
scas
mov
jb
rcll
push
inc
mov
repz
jb
fisttpl
loope
dec
cld
shl
cmpb
cmpsl
sub
inc
push
pop
ja
sbb
xor
inc
ret
xor
pop
sub
dec
mov
mov
jbe
stos
test
xlat
enter
or
xorb
push
add
jmp
cli
push
mov
inc
fisttpl
and
mov
mov
icebp
mov
mov
adc
fmuls
mov
jns
dec
movb
adc
scas
stos
mov
ret
cmc
in
sub
sbb
in
cmpsl
lret
loopne
ret
fcomps
jbe
negl
add
enter
mov
int3
cwtl
ret
dec
or
cli
xchg
jmp
flds
jle
mov
loope
jmp
and
outsb
cmc
in
mov
sbb
imul
cmp
xor
sub
inc
pop
push
pop
cmpsb
test
jns
pop
lcall
adc
sub
xchg
test
sbb
dec
or
enter
xor
aad
jle
pop
hlt
pop
outsl
arpl
out
stos
ficomps
sarl
inc
push
fcom
fldz
int
cmpsl
les
outsb
xor
insl
lods
out
cmp
std
lock
imul
add
jg
jp
xor
jb
jo
or
mov
shll
push
hlt
jg
int3
cli
lock
ds
fimuls
mov
icebp
sti
test
jb
lods
mov
leave
add
push
adc
add
lret
std
dec
mov
or
imul
mov
lds
scas
mov
push
jns
stos
aad
mov
pop
stc
into
cld
add
test
and
cmp
out
repnz
xchg
shll
sbb
dec
cmp
aas
inc
out
daa
loop
out
repz
mov
mov
sub
clc
dec
ds
movsl
cmpsb
inc
xor
outsb
jbe
xorl
dec
out
idivl
add
sub
xchg
jbe
in
lret
repz
push
push
add
sbb
mov
xchg
adc
and
lds
sub
sub
inc
bound
test
add
ss
mov
sub
mov
xor
xor
in
jle
jnp
inc
ljmp
int
sti
and
dec
cmp
cmpsb
lods
dec
ret
jnp
das
movsl
pop
adc
mov
cmpsb
mov
xlat
arpl
leave
mov
lret
add
mov
xor
stos
push
imull
sbb
cmp
cmp
dec
add
or
jp
inc
lgs
ret
jne
jp
inc
mov
cmp
adc
or
rolb
into
lret
cmp
pushf
loope
stos
ljmp
cltd
hlt
push
sbb
mov
test
mov
cli
outsb
in
and
aas
mov
es
pop
divb
mov
mov
ja
ss
sub
stos
fistl
jp
test
ret
add
push
out
in
data16
push
xchg
ja
pop
js
jno
fs
icebp
cld
test
in
scas
dec
shll
xor
scas
test
mov
clc
push
aad
in
nop
js
lds
xor
push
and
cmpsl
mov
adc
divl
jmp
scas
and
or
jae
push
aam
mov
int3
icebp
xor
pop
mov
out
popa
in
fstl
data16
mov
lret
idiv
push
sub
fldcw
sub
sbb
sub
cmc
cmp
sbb
fs
or
push
punpckhdq
add
jno
xor
sub
rolb
test
rcrl
out
sub
das
das
das
test
mov
aam
mov
lds
test
xchg
icebp
xor
mov
xor
inc
call
and
lds
arpl
pop
out
imul
push
in
jp
mov
sbb
add
and
scas
orb
pop
decb
pop
and
lock
hlt
and
mov
dec
lock
adc
movsl
push
cmp
fisubs
dec
cmc
lods
sbb
inc
lds
shl
pop
mov
mov
dec
inc
push
fdivs
add
inc
push
jo
shrl
loopne
loope
add
mov
and
adc
xchg
lds
in
jl
lods
ja
aas
nop
mov
xor
dec
loop
mov
shlb
mov
pop
stos
inc
in
fldcw
lret
and
test
jecxz
pop
stc
and
icebp
ds
sbb
adc
jmp
xor
or
cli
push
je
bnd
mov
dec
test
mov
pop
adc
ficomps
fistpl
inc
dec
inc
mov
push
mov
jns
sbb
test
xchg
stos
pusha
jne
into
dec
add
and
stos
mov
pop
sub
mov
rol
add
xorb
mov
stc
hlt
int
pusha
sub
lods
jl
sbb
add
mov
pop
sar
int
js
out
jo
out
jbe
push
push
xor
adc
add
orl
jecxz
xor
cmpl
call
mov
mov
aaa
test
sbb
aas
sbb
mov
and
cmp
ror
fsts
clc
stos
or
loop
in
pusha
mov
test
or
dec
cmpsl
xor
push
mov
dec
movl
pop
jge
subl
pop
mov
sbb
mov
xchg
repz
dec
cltd
popa
lea
int3
jle
movsb
fs
test
stos
out
test
rcl
divl
sbb
mov
div
mov
xor
roll
pop
popa
lods
xor
mov
ljmp
push
inc
jo
pop
das
xor
imul
ljmp
cs
lock
add
mov
mov
mov
add
pop
adc
mov
leave
gs
mov
leave
idivb
nop
out
movd
aad
shrb
add
mov
mov
repz
add
mov
aaa
adc
cmp
cmp
cmp
mov
rcl
aad
pop
pop
jae
out
sub
mov
xor
inc
loope
lds
mov
dec
test
inc
adc
imul
add
rorb
dec
inc
xchg
sarl
mov
cld
aam
adc
mov
fildl
sub
adc
jne
jae
test
add
mov
aad
stos
rorl
int3
mov
xchg
scas
js
sbb
push
rol
inc
clc
cmp
lds
sarl
mov
lea
inc
fdivrl
push
dec
inc
test
mov
hlt
shl
out
push
mov
cmp
test
pop
movsl
int3
lock
leave
icebp
std
push
sarl
sbb
cli
sahf
cmp
mov
mov
ds
push
inc
cmpsb
jne
addr16
ret
and
out
ret
pop
and
adc
push
adc
cmc
and
mov
xor
imul
fidivrs
cmpsb
and
or
xchg
jb
cli
xchg
fistps
enter
aam
mov
testb
adc
negb
scas
and
repz
and
lcall
pop
mov
xor
sub
pusha
pop
imul
stos
pop
mov
sub
mov
mov
loopne
lcall
leave
jl
ret
and
sub
jno
rorl
mov
inc
outsl
aam
xchg
xchg
cli
popa
add
out
cmp
cld
stc
jne
mov
dec
mov
nop
andl
mov
xchg
into
cmp
push
mov
cmp
inc
out
jnp,pt
popa
stos
les
int3
inc
push
ficompl
scas
mov
mov
xchg
inc
mov
cltd
aas
adc
out
cld
aam
mov
cmp
mov
stc
jb
fwait
xorl
lret
enter
lret
mov
pusha
testb
lods
sbb
enter
cmp
add
subb
add
mov
test
lcall
enter
aas
or
aaa
inc
pop
cmp
pop
imul
add
shrb
push
add
aam
leave
push
sar
add
rol
aad
cmp
mov
shrl
daa
aaa
cmc
rol
movsl
or
add
lods
mov
pop
cmp
mov
cmp
sarl
fmul
in
enter
sub
shlb
sub
int3
dec
push
mov
lds
into
dec
int
lret
loope
inc
dec
push
fstp
xor
mov
rcll
in
stos
test
sarl
shr
cld
lock
mov
xor
ljmp
enter
mov
out
dec
mov
pop
pop
outsl
jo
iret
or
ja
ret
sbb
mov
xchg
mov
push
mov
cmpsl
sub
mov
mov
mov
daa
mov
cmc
sbb
and
fxch
and
rcl
and
fistpll
ret
xor
mov
dec
or
shlb
enter
xor
stos
mov
sar
ficomps
sub
xor
mov
enter
sbb
xchg
movsl
dec
adc
out
add
outsb
inc
mov
inc
loopne
xor
lret
out
inc
inc
movsl
fs
pop
ljmp
mov
jno,pn
or
cli
iret
lahf
daa
mov
pop
inc
in
orb
cli
xchg
test
fwait
and
lds
jg
xor
xor
mov
mov
and
lds
loopne
movsl
or
gs
jns
dec
jnp
and
mov
pop
jo
aad
mov
es
xchg
inc
add
mov
xorb
adc
add
and
enter
dec
jmp
add
dec
or
mov
and
xor
sub
adc
das
jmp
scas
call
push
inc
xlat
add
inc
sarb
stos
or
pop
repnz
or
jmp
push
jecxz
or
rcrl
mov
test
jecxz
nop
into
andb
adc
lret
add
mov
loop
sbb
into
enter
jecxz
in
dec
fwait
pop
sbb
lds
cld
pop
xor
test
adc
jl
movsl
sub
addr16
pusha
jns
repz
pop
cmpsl
xlat
dec
les
aad
ss
es
or
lds
and
ljmp
cli
mov
shlb
mov
sub
lds
out
or
cld
push
push
mov
jmp
or
lret
std
xor
aam
imul
mov
mov
outsl
xor
cmp
and
mov
lret
xor
enter
int3
xchg
sahf
push
mov
subb
add
lret
fsubr
rcrb
rcrb
pop
imul
mov
loopne
mov
shlb
fwait
mov
sub
lahf
in
sbb
and
fs
lods
js
call
stc
xlat
xor
int3
loope
dec
iret
test
adc
xor
lds
mov
jns
mov
push
xor
into
ljmp
xchg
out
mov
sbb
gs
pushf
cmp
out
rol
and
aad
xor
stos
lret
aas
fldenv
in
xor
cli
xchg
ret
jb
jno
lret
and
pop
loop
scas
adc
int3
push
fsubrs
rorl
mov
adcb
repnz
arpl
sub
orb
push
aas
adc
pop
int3
dec
dec
or
xchg
mov
xor
mov
mov
into
xor
stc
stos
add
dec
es
jo
mov
icebp
call
stos
jns
sbb
les
pop
xchg
fadds
in
push
aaa
pop
arpl
pushf
sub
dec
cmp
and
fs
movsl
push
imul
mov
idiv
add
mov
jno
mov
dec
lret
call
nop
scas
adc
ja
loope
popl
lret
mov
out
push
call
xchg
insl
rolb
inc
dec
dec
jge
sub
adc
aaa
enter
add
sbb
dec
lret
mov
mov
and
mov
mov
jecxz
inc
push
out
cmc
loop
cmp
lcall
lods
std
out
pop
jp
push
repz
and
aam
leave
dec
in
repz
sub
int3
fisttpll
sub
sbb
add
lar
mov
mov
orl
pushl
sub
test
icebp
dec
ret
sub
shll
shll
dec
in
aaa
je
push
fwait
daa
add
adc
imul
daa
or
shll
lahf
pop
les
inc
cwtl
pushf
or
cmpsl
mov
inc
add
stc
sub
mov
shlb
pop
jno
or
add
pushf
iret
cmp
sub
shl
rorb
or
fisttpl
das
adc
fldl
and
push
mulb
ret
into
push
movsb
jp
mov
mov
scas
sub
jbe
test
push
push
adc
popf
mov
push
mov
mov
push
mov
dec
pop
or
ret
fwait
leave
inc
mov
pop
cmc
aaa
and
inc
xchg
mov
div
in
jo
xor
cmp
enter
sbb
stos
cmpsb
adc
loope
jb
fs
add
cmp
dec
and
ljmp
insl
stos
into
popa
xor
xor
push
mov
imul
sbb
int3
dec
push
cli
cmp
push
ret
out
xchg
mov
fisubrl
je
inc
dec
daa
mov
push
sbb
dec
push
jbe
stc
in
shll
sbb
add
cmpxchg
mov
aad
rcll
jbe
sub
in
mov
adc
loope
fucomi
mov
mov
imul
jo
mov
pop
dec
loopne
jne
mov
rcr
mov
icebp
ret
fwait
int
xchg
imull
fxch
loopne
cli
fbld
mov
mov
arpl
js
jo
stos
aam
rol
xchg
loop
or
jnp
inc
push
test
or
jecxz
repnz
mov
ss
mov
jmp
cld
test
push
sbb
cltd
repnz
into
dec
sub
int3
jo
call
or
sbb
sub
sbb
pop
cltd
pop
cmp
mov
mov
fcoms
cli
xor
and
push
roll
cmc
and
iret
subb
es
and
xor
xchg
pop
int
daa
sbb
fidivrl
gs
and
mov
xchg
outsl
sub
adc
fldt
xchg
imul
pop
into
enter
rcl
cmp
sbb
into
or
or
push
shrd
rcrl
add
mov
pop
fsubrs
dec
sbb
test
imul
icebp
mov
iret
test
stc
and
push
jmp
sti
insl
icebp
push
mov
call
push
lret
mov
outsb
jmp
mov
lret
popa
adc
leave
rcr
lds
imul
mov
enter
in
enter
dec
ss
sub
lds
in
jg
lea
sub
mov
or
rolb
or
inc
xor
xor
push
test
and
cli
mov
dec
and
xor
div
xor
mov
rep
popf
push
adc
and
mov
addl
les
jmp
push
out
xchg
xor
loopne
cs
inc
lods
les
cld
pop
jae
xlat
jo
les
das
rcl
sub
in
sub
imul
addb
insl
xchg
aad
inc
sub
pop
push
jae
mov
loopne
push
mov
repz
xchg
je
or
mov
add
add
icebp
xor
or
mov
int3
sbb
int
mov
jbe
ss
xchg
dec
adc
test
stos
loope
xor
arpl
cmp
pushf
cmp
mov
lock
sar
int
roll
mov
shl
add
test
push
push
ja
lret
aas
fs
dec
mov
in
push
cmpsl
xor
cli
cmp
loopne
mov
lds
repnz
enter
out
scas
enter
loopne
push
jnp
sub
xor
mov
lret
addb
mov
das
jo
ss
adc
ja
adc
or
ljmp
out
mov
cmp
into
shlb
mov
rol
icebp
or
mov
pop
mov
stos
mov
push
mov
and
pop
or
subb
ret
mov
ret
mov
mov
xchg
and
mov
dec
push
into
fimuls
clc
push
mov
daa
les
xor
js
sbb
dec
movsb
enter
jbe
push
ret
pusha
sar
and
in
punpckhwd
aas
mov
lret
movsb
adc
cmp
add
push
sub
loop
pop
xor
cmp
push
cli
cmp
and
xor
out
data16
les
push
int3
call
test
mov
sub
data16
mov
int
insb
mov
lods
adc
imul
ljmp
leave
xchg
ret
es
cli
mov
jmp
mov
stc
inc
xor
mov
push
dec
pop
js
mov
xchg
push
mov
sub
ss
leave
add
dec
xor
mov
aas
xor
xor
loop
add
fstpt
pop
xor
pop
and
insl
mov
and
dec
cld
inc
je
test
out
mov
and
lea
mov
loope
testb
add
cltd
call
dec
movsl
or
neg
in
inc
mov
les
sbb
add
push
fwait
daa
in
ljmp
call
push
in
pop
js
mov
inc
enter
clc
dec
pop
and
or
imul
dec
mov
dec
or
and
dec
stos
enter
xlat
rorl
and
sbb
dec
add
mov
in
cli
mov
fnstenv
std
sbb
xor
jl
and
imull
js
repnz
add
fs
xor
dec
jb
add
and
test
mov
and
cmpsl
cs
sub
adc
clc
push
pop
push
sbb
aam
popa
cmp
fstpl
jno
enter
fcoms
pop
push
loope
loopne
rcl
stos
jno
jae
ret
hlt
sub
and
mov
jno
mov
arpl
loopne
ret
lock
xchg
dec
sub
loopne
pop
aad
shr
xchg
jecxz
aaa
lret
sbb
or
repz
icebp
sbb
xor
lds
jbe
daa
ret
popf
adc
mov
mov
stos
adc
adc
call
inc
add
and
shlb
repz
aaa
jb
fldcw
sub
lods
andl
popa
in
and
mov
jno
icebp
xor
lods
rcrb
loope
repnz
push
adc
lods
sbbl
adc
loop
mov
sbbl
fnsave
dec
or
int
mov
inc
dec
aas
sbb
sbb
shrl
xor
movzbl
flds
stos
int3
pop
fldcw
jne
lds
xor
ljmp
ret
ds
mov
jb
mov
xchg
scas
cmc
out
jb
xor
outsl
icebp
je
fs
adc
ss
and
sbb
dec
jnp
nop
fdiv
mov
lret
lock
or
sub
lret
mov
in
lret
dec
fs
pop
ret
fcoml
pop
push
arpl
and
or
mov
inc
dec
cmp
pop
inc
xor
ret
mov
cmp
mov
movsl
and
repz
loope
cltd
into
call
cmpsb
movsb
mov
dec
out
jg
jg
clc
xor
lock
mov
sarl
test
cli
mov
mov
stc
or
jge
sub
jge
cmp
jl
mov
enter
nop
xchg
push
aas
roll
rorl
out
lds
stc
iret
testl
rcll
jne
mov
out
mov
in
fadds
insb
cmp
push
jb
and
push
sub
jne
sbb
test
mov
push
inc
dec
xchg
ja
ret
adc
stc
inc
hlt
xchg
sbb
lods
ret
xor
test
roll
rcl
iret
xor
fbstp
ret
loope
jg
jae
lret
push
inc
add
mov
push
shll
pop
movsl
dec
fldt
daa
sbb
enter
cld
sub
mov
test
jo
xchg
das
mov
pop
xor
lea
mov
xchg
scas
loope
xor
inc
sub
mov
pop
orl
jne
mov
mov
fwait
ret
cmp
dec
icebp
in
es
jbe
xor
stc
inc
pushf
out
adc
cmp
xlat
je
mov
sbb
je
or
std
mov
lret
test
aaa
mov
mov
movsl
in
loopne
mov
xor
mov
xor
les
xchg
xchg
test
add
sub
cld
imull
lret
or
cmp
test
jle
jge
in
pop
or
mov
iret
add
mov
aad
sbb
popf
aad
adc
sub
push
in
jge
out
jno
inc
dec
enter
jbe
or
adc
inc
or
arpl
xchg
int3
sub
xchg
xor
and
rolb
dec
out
mov
dec
xor
xor
push
sarb
fcomi
xor
negb
xor
sub
mov
jecxz
or
sbb
push
pop
ret
xchg
push
loope
call
bound
xor
adc
mov
jecxz
ret
xchg
enter
cmp
por
leave
add
jge
xor
rcr
sbb
stos
loope
mov
aad
mov
dec
stos
stos
dec
negb
leave
leave
sti
dec
add
add
mov
aad
gs
enter
int3
leave
stos
mov
push
iret
rcll
jecxz
cmp
push
int
cli
fcomi
sbb
rcl
int3
icebp
adc
int
movsb
inc
adc
mov
jno
stos
aam
test
int
xchg
mov
test
leave
jmp
and
fdivrs
ret
mov
fwait
rcll
movsb
xchg
out
mov
shlb
and
data16
lea
xchg
enter
add
inc
jle
hlt
jecxz
pop
lret
dec
adc
lret
in
popf
pop
pop
or
js
ret
inc
mov
leave
and
pop
aas
mov
imul
test
push
cmp
jmp
lcall
das
arpl
sbb
int3
movsl
dec
lea
loop
outsb
outsb
ljmp
pop
lcall
jae
out
jne
int3
or
jb
ja
loope
out
mov
lods
mov
lds
xlat
pop
jbe
add
lret
push
enter
lret
aas
push
sub
pop
mov
jecxz
lods
ret
es
pop
pop
add
mov
leave
stos
stos
dec
int
inc
stos
or
mov
mov
adc
test
ror
inc
int
leave
repz
cli
or
cmp
popl
pop
xor
push
add
cmpsw
int3
in
hlt
fldcw
jbe
push
or
out
mov
call
push
jmp
sbb
jmp
mov
ret
sbb
ud1
push
stc
add
fsubs
add
inc
ret
xchg
xlat
rclb
lods
push
cmp
or
rorb
mov
mov
insb
call
jns
mov
mov
lock
ss
aas
int
aas
push
ror
loop
int3
xchg
lret
lds
pop
fldl
xchg
jnp
out
mov
adc
cmp
xchg
mov
mov
idivl
inc
roll
out
out
sbb
fnstsw
int3
inc
das
mov
mov
cmp
inc
mov
cs
repz
outsb
lock
mov
movsb
test
lcall
or
xor
xchg
enter
imul
dec
cmp
cli
cld
adc
fsubl
cmp
adcl
mov
lret
hlt
mov
into
loopne
aas
and
sub
inc
ds
nop
or
in
jle
sti
lock
in
clc
in
addb
xchg
mov
aam
add
scas
mov
data16
pushl
leave
pop
jge
filds
adc
imul
xchg
lods
icebp
fisubrs
xor
loope
ret
dec
push
jo
enter
push
ret
dec
add
popf
test
mov
xchg
xor
and
ss
add
lock
nop
int3
lock
jo
mov
mov
call
push
add
adc
test
sub
lretw
aad
idiv
sbb
xchg
test
ret
mov
mov
test
mov
into
xor
icebp
jp
jle
pop
jno
lret
int
push
push
test
pusha
fdiv
mov
push
enter
loope
movsl
adc
lcall
mov
outsb
inc
sub
outsl
push
push
sub
mov
xor
gs
mov
mov
jl
xchg
cmp
mov
stc
popa
dec
dec
mov
mov
xor
adc
ret
xor
flds
cmpsl
lds
addl
or
je
cmp
dec
iret
or
lock
jmp
enter
mull
es
popa
lret
lret
test
inc
mov
mov
bound
rorl
push
dec
xlat
lret
and
shrb
mov
div
stc
mov
and
les
and
or
ret
pop
pop
dec
js
lahf
mov
xor
cmpsb
sets
sub
dec
aam
cwtl
sbb
push
mov
shl
mov
cmp
test
cmp
add
rcl
fcomip
xchg
cmpsb
lret
xor
movsl
test
ret
and
mov
xchg
sbb
hlt
iret
or
add
jns
lahf
cmp
and
mov
mov
insb
and
xor
xchg
sbb
ret
in
xchg
pop
inc
jne
cmpsb
sti
dec
lock
xor
adc
stos
adc
lcall
jno
lret
lea
or
pop
lret
pop
out
jmp
out
pusha
or
jno
stos
inc
out
loopne
out
hlt
leave
or
aam
sbb
std
out
shl
xorl
iret
or
inc
scas
xor
aam
cwtl
leave
or
mov
test
cmc
mov
pop
int
aam
or
hlt
mov
dec
pop
outsl
sub
mov
or
inc
or
es
repnz
test
mov
dec
iret
jmp
xor
cld
mul
add
mov
xor
mov
into
mov
sub
in
idiv
arpl
cmp
pop
xchg
fsubs
test
inc
sbb
fsub
lret
sub
leave
mov
aaa
fwait
cmp
jge
lock
xor
mov
inc
or
dec
jae
jge
int3
lods
int
cwtl
ffreep
test
divl
test
sbb
pop
jmp
inc
dec
sahf
mov
loop
iret
cs
mov
and
lds
cmp
mov
pop
aam
cmpsb
das
lret
aas
add
iret
inc
outsl
lods
stos
roll
xor
lret
jno
popf
mov
std
pop
cs
dec
pop
mov
push
lret
mov
push
dec
ret
in
mov
mov
jmp
sub
fsts
aas
stc
lret
sub
leave
push
mov
jge
int3
iret
or
ror
sub
push
cmpsl
in
inc
repz
icebp
imul
fs
mov
iret
jmp
sar
push
add
xlat
ljmp
insb
push
aaa
push
test
inc
jmp
out
jl
inc
jl
rcrl
or
aas
jae
call
push
sub
out
lods
push
push
rcrl
in
popa
xchg
daa
add
pop
repnz
jp
fdivl
call
nop
inc
push
ffree
dec
mov
call
cli
mov
cmp
push
mov
lret
hlt
aam
stos
and
daa
ja
add
std
mov
in
dec
and
mov
ret
notl
fbld
xlat
jmp
in
rcrb
add
push
push
repnz
push
ret
test
pop
pop
and
adcl
adc
les
lea
gs
jg
mov
add
rol
inc
jns
call
mov
dec
addr16
pop
push
cmp
fnstcw
decl
dec
mov
mov
cmp
cmp
daa
sbb
inc
adc
jb
inc
jne
and
cli
ja
mov
stos
insl
dec
in
mov
jne
sbb
jns
pop
adc
int
dec
leave
xor
pop
or
repz
cmp
and
rclb
add
shrl
adc
div
gs
mov
mov
rorb
sbb
mov
fisttpl
ja
and
or
aas
scas
sub
mov
cs
test
or
hlt
cli
int3
sti
stc
adc
out
loope
les
enter
mov
sub
stos
mov
roll
pop
je
test
pop
pop
jp
and
ja
cmpb
mov
sbb
enter
ret
shll
pop
mov
mov
popa
out
sub
cld
mov
shl
idiv
cmp
mov
jo
leave
jae
xchg
es
loop
jno
mov
and
ret
bound
xor
and
jecxz
stos
gs
mov
ljmp
or
repz
mov
push
mov
subl
or
bound
cld
mov
aas
dec
mov
mov
mov
xor
sbb
adcb
mov
or
xor
aad
adc
int
inc
lock
dec
hlt
mov
out
jecxz
int3
lea
mov
dec
icebp
jo
jae
jns
mov
insb
ret
nop
jnp
jb
vhsubpd
test
push
adc
and
or
sub
xor
push
jmp
ds
xchg
sbb
mov
sbb
xor
push
lds
ret
adc
sbb
mov
mov
ja
xor
punpcklbw
mov
scas
inc
inc
sub
sbb
xchg
ret
aad
xor
and
in
inc
push
jg
mov
test
int3
add
hlt
aad
jns
cltd
adc
popf
xor
test
lcall
xor
nop
cmp
and
mov
out
sarb
sbbb
cs
mov
stc
cmp
pop
add
clc
sbb
inc
cltd
into
scas
pop
ljmp
in
shlb
repnz
xchg
jmp
mov
push
out
ret
test
add
jmp
icebp
lods
test
xor
or
mov
sbbb
sti
cwtl
xchg
fldt
shlb
and
sti
insb
je
cmpsl
andb
sub
dec
dec
std
jle
fdivrl
repnz
sub
mov
or
cmp
rcrb
mov
sbb
xor
dec
negl
and
pop
pop
push
repz
mov
mov
stc
pop
outsl
push
pop
lret
mov
sti
sbb
pop
stos
and
icebp
mov
jb
mov
imul
xchg
jmp
lret
aam
pop
gs
filds
scas
inc
insb
cmc
sbb
insb
mov
pop
mov
jbe
jne
or
incb
adc
cmp
aam
xlat
lea
lea
stc
ret
insl
jge
inc
js
push
inc
es
jecxz
sarl
lock
push
sarb
jbe
and
mov
xor
mov
enter
cmpsl
popa
jb
test
sahf
adc
pop
xchg
jo
or
push
adc
aam
repz
aas
jbe
dec
mov
push
divl
xchg
insl
cli
sbb
jo
loop
add
jmp
xor
mov
repz
push
aad
stos
mov
shl
test
dec
mov
add
jge
and
cmp
add
mov
push
data16
mov
pop
mov
idivl
mov
les
and
mov
and
in
jne
in
sub
out
int
jmp
xor
outsl
lods
mov
lods
push
pop
cmc
fadd
loope
rorl
enter
iret
add
adc
mov
scas
mov
shll
mov
pop
leave
rol
add
and
lret
rolb
cmpsl
mov
rorl
pop
cmpsb
add
mov
push
and
dec
or
iret
arpl
or
mov
out
push
xor
mov
js
nop
jl
das
mov
jns
loopne
cmp
mov
and
sarl
int
cli
jp
push
xor
stos
stos
or
jnp
lds
pop
rolb
mov
fistpll
mov
std
popf
or
sbb
adc
xchg
adc
cmpsl
mov
cmpsl
add
ljmp
test
pop
outsl
aam
mov
jp
or
repz
xchg
cld
lock
adc
adc
sbb
fs
rcrb
mov
push
xor
xor
and
inc
inc
xor
dec
fucomi
or
jmp
mov
repz
and
inc
sbb
cmp
sbb
sub
dec
xchg
pop
ljmp
int
and
pop
adc
sti
pop
lods
push
dec
aam
add
leave
mov
test
pop
xor
pop
xchg
stos
adc
fmul
lret
and
mov
js
pop
test
pop
enter
dec
add
sub
sub
icebp
add
add
push
mov
test
addb
push
push
and
or
mov
mov
int3
rorl
inc
ja
into
in
cmc
sbb
add
shll
mov
test
dec
aas
or
in
sub
test
mov
mov
fstpl
inc
cmp
mov
fxch
mov
mov
ret
mov
jo
jno
dec
dec
mov
xor
add
mov
ljmp
movsl
jne
mov
imul
cmp
pop
xor
subb
lock
lret
xor
sbb
xchg
adc
into
mov
xor
xchg
ja
je
outsb
xchg
lret
int3
leave
push
ds
cmc
decl
fsubrl
push
jb
dec
push
or
pushf
sar
mov
adc
popa
or
push
cmp
inc
inc
rcl
mov
push
lds
int3
mov
mov
fdivrl
sbb
lret
dec
les
ret
and
dec
mov
ja
xor
and
into
fxch
ret
ljmp
push
test
ror
add
add
test
lret
inc
sub
mov
gs
xchg
inc
ror
mov
fbstp
adc
mov
lret
cmc
fdivr
pop
mov
cmpsb
xchg
mov
cmp
mov
jnp
mov
movb
popa
xlat
shlb
lea
mov
fidivl
jne
push
ret
or
sbb
shr
adc
popl
mov
mov
lods
jl
int
mov
mov
pop
test
fdivs
ja
pop
fnstcw
sub
lcall
bound
mov
or
icebp
leave
sti
jb
cmp
mov
dec
insl
sub
daa
imul
mov
xor
shll
jmp
repz
cwtl
inc
fidivrl
mov
pop
inc
insl
push
lock
push
test
in
add
pop
lock
mov
sbb
jge
nop
push
aam
pop
test
negl
pop
mov
mov
les
data16
popf
test
fsub
int
dec
jns
outsb
xlat
or
inc
adc
int3
pop
imull
add
jmp
or
filds
add
and
fadd
or
pminub
or
ror
stos
movsl
les
adc
mov
icebp
insl
in
lea
add
mov
leave
and
mov
mov
push
fisubrl
outsb
jae
jle
fsts
rep
ficoms
rclb
pushf
insl
mov
adc
and
int3
ret
xorb
enter
mov
or
cltd
paddusw
faddl
mov
jle
mov
data16
mov
cmp
cmpb
lds
mov
roll
aad
imul
xor
stc
and
mov
mov
and
pop
mov
scas
mov
rol
pop
jo
dec
cmp
dec
lds
mov
xchg
fs
aaa
mov
stos
enter
jp
xorb
mov
jo
loope
sub
pop
ss
push
pop
cmpsb
js
fstps
ds
dec
mov
ljmp
lret
mov
int
stos
fld
mov
stc
stos
sar
leave
dec
addr16
adc
cli
aas
shll
test
mov
fimull
outsl
enter
xor
jecxz
ret
mov
mov
cmp
mov
ljmp
pop
and
jmp
in
mov
push
mov
cmp
xor
mov
aas
sub
test
mov
sbb
int3
xor
jnp
int3
cli
jae
and
dec
lock
negl
cmc
jge
loopne
fsubrs
sti
and
push
movsb
fisubs
shrb
outsl
cmpsl
insb
and
loope
sub
cli
cmp
lds
clc
scas
lds
pop
stos
adc
loopne
test
xor
xor
ds
adc
divl
cwtl
stos
lret
add
jp
addr16
inc
movsl
int3
mov
mov
lret
jns
mov
xchg
mov
dec
add
cmc
loope
lret
mov
clc
mov
mov
loope
or
cmp
cmpsb
mov
daa
jg
cmp
dec
loope
jno
mov
push
test
add
inc
rcrb
adc
mov
mov
ja
imul
xor
or
lret
frstor
aad
dec
mov
daa
or
push
pop
rcr
cli
es
mov
mov
mov
outsl
jge
int3
and
loopne
test
dec
fimuls
clc
jne
and
hlt
icebp
loopne
stc
inc
mov
xor
mov
pop
ja
int3
cs
jmp
mov
mov
icebp
addl
sar
dec
test
int
testb
in
incl
pop
lock
dec
imul
into
repnz
mov
loopne
stos
call
lret
xor
inc
jg
scas
out
push
stos
fstps
jmp
lcall
push
inc
aam
xor
sbb
push
movsl
mov
icebp
add
dec
xor
jg
adc
jge
repnz
xor
sarl
xchg
cli
jle
ljmp
mov
pop
pop
pop
repz
jb
cld
lret
fnsave
jmp
shll
xor
inc
add
jo
mov
add
sarl
stos
aam
xor
sbb
pop
push
or
push
out
mov
icebp
mov
ja
int3
icebp
dec
leave
push
mov
jmp
sbb
roll
jge
iret
push
ja
inc
dec
enter
jnp
mov
ret
or
jbe
lret
mov
xchg
and
fwait
fwait
push
sub
aad
adc
mov
test
cld
xchg
lea
xor
popa
ror
cmpsl
jbe
dec
or
push
add
lret
jne
mov
andl
push
push
test
or
xor
mov
shl
and
stc
adcb
dec
out
daa
cs
fisttpll
lock
stos
xor
mov
xor
repz
xor
add
cltd
dec
lret
or
xor
ljmp
cmp
jb
in
fstl
sub
push
sbb
iret
ret
nop
jecxz
popa
add
pop
popl
fisttpll
ret
fistpll
mov
cmp
sbb
repnz
mov
sbb
pop
cli
cltd
xor
jmp
cmp
cmp
mov
add
test
aad
rol
fidivl
lcall
push
pop
mov
aad
lcall
test
js
fisttpl
das
in
xor
sub
inc
mov
stc
dec
jne
or
mov
or
push
cmp
or
cld
imul
std
cs
dec
add
test
aad
pop
lods
ret
xor
and
loopne
pop
ljmp
xor
mov
mov
pop
mov
sub
sti
roll
dec
int
lock
dec
mov
jo
insl
daa
inc
sbb
xchg
mov
mov
xchg
clc
pop
xor
int
mov
add
mov
out
imul
into
pop
addr16
jecxz
aad
add
sub
and
movsb
ljmp
hlt
mov
jmp
ljmp
sub
mov
jno
test
test
dec
int3
inc
sub
fsubl
pop
inc
jmp
ljmp
ret
int
pop
mov
xor
push
and
shlb
mov
rol
bndstx
loope
mov
push
ljmp
cmpsb
adc
int3
or
fdivp
sti
sbb
adc
and
out
movsl
cmp
xchg
out
adc
cmpsl
test
mov
sub
sbb
cmp
mov
hlt
rcll
add
lahf
leave
adc
mov
cmp
in
jle
mov
xchg
mov
fisubs
cmp
mov
xchg
dec
jbe
mov
je
mov
xor
xchg
add
mov
sahf
dec
sub
das
push
sbb
jbe
add
sbb
inc
hlt
pop
ret
cmp
es
mov
shll
dec
repz
lret
dec
mov
adc
mov
cli
pop
enter
int3
mov
popl
mov
sbb
adc
lret
mov
mov
mov
jae
dec
add
rorl
or
movsb
je
cmc
lock
aad
cld
rorl
push
outsl
rcll
push
mov
fld
mov
ss
mov
pop
sbb
dec
imul
sbb
icebp
jno
dec
add
adc
sahf
pop
cmp
aam
jne
sti
aas
lret
ret
mov
jl
shlb
fcoms
adc
pop
adc
insl
test
sbb
js
add
jns
enter
movsb
lea
push
push
outsl
jecxz
push
aas
icebp
test
outsl
cli
push
ja
out
sbb
mov
out
out
test
add
imul
ss
xor
popa
popa
and
cmp
dec
and
fnsave
sarb
push
sbb
sub
pop
or
out
ficomps
cltd
add
adcb
sbb
flds
clc
push
pop
icebp
mov
out
negl
cmp
inc
mov
bound
jnp
mov
push
mov
mov
pop
jecxz
mov
pop
push
dec
dec
xor
dec
icebp
or
mov
jge
shll
sbb
outsb
or
lds
fisttpl
pushf
mov
xchg
push
in
data16
shrb
mov
icebp
cli
jo
nop
out
mov
mov
mov
ljmp
stc
jg
dec
in
inc
mov
or
mov
sbb
push
repnz
mov
mov
xlat
ror
lock
push
clc
loope
cmp
or
enter
xchg
sbbb
pop
adc
incl
popa
mov
fwait
dec
xchg
inc
mov
add
lcall
mov
push
sub
ficoml
test
scas
jecxz
popf
pop
movsl
adc
sbb
inc
addr16
lret
cmp
cli
ljmp
shrb
fmull
push
test
cmp
cmp
inc
mov
or
movsb
cwtl
inc
sub
cmpsb
in
loope
mov
pop
mov
nop
inc
sarl
push
stos
adc
fistpll
push
aad
mov
jno
mov
loop
ljmp
mov
aad
mov
test
or
ljmp
es
push
rcr
add
repnz
sbb
cmp
fdiv
push
cli
cltd
ds
ljmp
loopne
sub
push
mov
or
int
aad
inc
or
rcrl
test
idiv
daa
fiadds
loopne
das
fs
shrl
es
mov
out
fisubrs
aam
sbb
mov
ja
jge
jo
pop
stc
ds
inc
pcmpeqb
jg
adc
pop
add
lret
jle
fidivrs
out
or
mov
loope,pn
aad
and
dec
mov
sub
adc
xor
jecxz
pop
in
sub
jmp
imul
mov
pop
or
push
sbb
dec
aad
in
aas
repnz
inc
cmp
or
aas
mov
mov
loope
cmp
ficoms
loop
ljmp
jg
lock
sub
sbb
sbb
mov
cmp
jbe
cmp
push
cmpsb
dec
xor
stos
movsb
mov
mov
push
test
xor
sub
stos
stc
fiadds
jnp
pop
push
pop
stc
div
sbb
xchg
popa
inc
shlb
mov
xchg
into
jle
loopne
and
lds
mov
hlt
fwait
cmp
add
pop
ret
jae
outsl
loopne
dec
aas
outsb
adc
pop
add
pop
xor
mov
mov
scas
rol
jo
test
mov
lahf
out
clc
push
ret
mov
cwtl
jg
xor
mov
inc
and
sti
or
stc
js
std
out
stos
jmp
insb
shlb
and
iret
mov
sbb
mov
mov
push
pop
loopne
inc
outsl
iret
mov
in
mov
fwait
add
cmp
jb
in
mov
sti
mov
mov
jo
fmulp
cwtl
dec
dec
icebp
xor
inc
ja
stos
sahf
pop
lret
mov
leave
loop
push
mov
push
in
push
sbb
push
sub
xor
gs
mov
fadd
xor
and
sub
aas
stos
jbe
mov
ret
lds
pop
dec
xlat
movsl
sbb
xchg
inc
cli
xchg
dec
aam
inc
inc
and
lret
imul
cmp
cmc
push
fmull
pushf
imul
nop
daa
xchg
cli
sbb
fimull
pop
call
push
mov
inc
inc
mov
xor
test
fstpl
or
lret
ret
pop
cmpsl
cwtl
adc
bound
and
and
dec
mov
shll
and
scas
jns
push
dec
add
enter
mov
test
ret
sti
pop
mov
jl
jge
pop
shll
ret
aas
call
mov
mov
fucomp
inc
add
test
ljmp
in
aam
fcmovbe
fildl
lahf
jg
fnstcw
push
xchg
inc
pop
jne
sbb
fstl
push
mov
pop
fimull
sbb
pushf
dec
cmp
fstpt
cmp
jo
sub
lock
hlt
jne
dec
roll
les
add
rcll
and
jne
and
decl
and
sti
andb
enter
mov
mov
insb
icebp
inc
cmp
lret
jle
jg
loopne
loopne
inc
pop
dec
inc
rcr
push
out
into
aaa
dec
testl
cmc
aam
subb
out
mov
fwait
mov
mov
jno
pop
push
adc
lret
in
or
pop
mov
cwtl
add
hlt
aam
mov
sbb
in
sarb
and
xchg
or
adc
xor
rolb
sbb
in
lcall
in
loopne
int3
or
out
out
xchg
or
pop
xorb
mov
add
popa
cs
and
adc
or
mov
imul
inc
add
les
add
test
push
sub
imul
test
movsl
or
fldenv
lret
test
es
es
cmp
cmc
adc
sbb
mov
in
xchg
icebp
jnp
inc
xchg
cmp
test
mov
mov
leave
xchg
sarl
movsb
dec
shll
xor
mov
int3
and
imulb
pop
lahf
xor
mov
mov
mov
icebp
dec
xor
mov
clc
loopne
mov
test
inc
loopne
imul
jge
and
iret
mov
jp
leave
rorl
in
stos
orps
pop
icebp
pop
push
mov
aas
outsl
or
out
lods
pop
shl
dec
loopne
in
imul
loope
add
mov
fxtract
aas
icebp
ret
adc
inc
dec
and
ret
outsb
cmpb
shl
mov
fs
sbb
sub
pop
inc
pop
jle
sarb
shr
ret
mov
arpl
out
mov
mov
movb
xor
xor
mov
iret
mov
clc
lret
push
dec
jl
jle
popf
and
subl
insb
and
sbb
rcrb
test
xor
ret
mov
test
scas
enter
adc
mov
popa
or
jmp
push
dec
push
mov
pusha
dec
cmc
mov
dec
adc
sub
stos
adc
arpl
xor
sbb
sub
ja
stos
lret
call
ds
enter
mov
stos
jo
rorl
fs
fwait
mov
lds
mov
xor
stos
dec
pop
ret
leave
xor
lret
push
mov
push
inc
imull
mov
lret
inc
ret
dec
cmpsb
xor
sbb
addr16
jb,pt
jg
add
test
or
stc
dec
orl
cltd
fdivrs
aas
stc
cli
mov
sbb
shrl
mov
xor
mov
mov
cmpsb
fwait
and
mov
pop
stos
movsl
ret
into
in
push
add
popf
jae
pop
call
out
mov
aaa
jl
or
stos
mov
sbb
les
or
xchg
adc
popf
cmp
call
aas
loope
add
mov
mov
jns
sub
dec
pop
flds
stos
pop
sti
cld
popa
pop
test
adc
xorl
xor
dec
add
inc
inc
jae
ja
mov
or
cs
or
lea
xor
call
adc
lret
push
fisttpll
mov
sbb
fadds
pop
rol
loop
loope
int
ds
ss
or
add
loopne
addr16
dec
sub
aaa
and
jmp
rorl
jl
or
sbb
fwait
out
cmp
jae
push
jmp
xor
cmp
ds
ljmp
inc
aas
sti
push
xor
jmp
add
jnp
sub
lods
ret
pop
gs
add
int3
xchg
mov
leave
sbb
pushf
jo
add
or
int
fwait
and
das
jle
xor
sbb
xlat
call
es
mov
cld
jmp
inc
xor
sbb
xor
js
stos
enter
incb
inc
movsb
xor
fnstenv
pushl
ret
inc
outsb
lds
mov
enter
cmp
out
mov
enter
mov
lcall
shll
lret
shl
xchg
rol
or
clc
sbb
mov
and
xor
shr
inc
inc
fcoml
or
mov
jno
mov
sbb
jle
and
push
shr
or
jmp
lea
outsl
leave
into
inc
jo
mov
jns
inc
or
in
dec
and
add
sbb
test
and
daa
hlt
add
icebp
xchg
into
clc
test
lea
jae
xchg
in
cmp
jno
dec
pop
ret
sub
mov
or
jecxz
mov
out
jg
adc
sub
enter
into
subl
je
stc
fnstenv
fcmovbe
inc
adc
dec
flds
jne
aad
jle
flds
nop
mov
and
rclb
push
dec
leave
xor
xor
fwait
outsl
add
lret
jmp
mov
fstps
leave
push
test
inc
jp
fcoml
mov
repz
fistl
shrb
inc
dec
and
inc
ret
ljmp
jnp
fisubrs
lock
jecxz
popf
aam
sub
adc
inc
or
adc
ficompl
mov
xor
cwtl
pusha
movsb
adc
inc
sub
push
enter
jno
inc
mov
gs
lret
lret
xor
pop
add
dec
paddd
fstpl
jbe
imull
jne
and
jo
jmp
dec
lret
add
aam
mov
test
clc
jge
push
mov
leave
lock
mov
stos
mov
dec
into
pop
shlb
jge
pop
pop
push
mov
lea
scas
dec
and
mov
dec
in
mov
jae
dec
subl
or
jns
std
jae
ret
sahf
fnsave
xor
or
cmp
adc
jecxz
mov
in
ds
je
cli
mov
shll
jb
lods
das
pop
inc
movb
add
js
mov
ror
push
mov
pop
popf
xchg
scas
ret
ss
and
push
mov
adc
mov
test
lret
or
test
stos
out
adcb
add
mov
and
xchg
sti
test
push
dec
fmul
ja
fdivrs
pop
icebp
pop
sbb
insl
mov
sbb
jae
cmc
rorb
icebp
mov
ret
mov
mov
daa
add
jnp
or
xchg
mov
sahf
bound
or
jle
and
sbb
popfw
movsb
jb
jg
xor
shl
nop
jge
dec
fnstsw
mov
mov
sub
insl
and
adc
mov
mov
imul
nop
fwait
adc
int3
into
xor
mov
in
cmpb
xor
adc
data16
sbb
xchg
pop
lahf
xchg
xchg
xor
lret
daa
cmp
ffree
xchg
dec
lahf
mov
jg
adc
xorb
shrb
lret
push
stos
hlt
jecxz
leave
xchg
aad
or
cmc
stos
stos
dec
lods
ret
lods
shrl
cmpsb
clc
fldl
mov
in
mov
lods
adc
int
andl
cmpsl
or
adc
mov
mov
fmul
mov
mov
fsub
test
sub
sub
cmp
das
jbe
fiadds
mov
inc
ljmp
pop
stos
testl
sarl
aam
in
es
sub
fmul
push
ror
cltd
fsubrl
pop
dec
rorb
repz
adc
mov
subb
xor
shlb
inc
mov
nop
into
data16
or
sub
or
or
adc
mov
pmaxsw
or
cmp
mov
lods
jge
mov
mov
into
jle
cmpsb
cltd
or
bound
push
mov
xor
mov
lret
xchg
neg
cmc
call
cs
inc
loop
xadd
pop
sub
mov
mov
ds
test
lods
mov
pop
sbb
test
mov
jl
sbb
xchg
lock
mov
sbb
test
cmpsb
lahf
xor
int3
sub
out
cs
mov
fwait
rcl
adc
aas
add
pop
push
inc
xchg
cltd
aam
xor
stos
mov
push
enter
es
ret
mov
popf
jle
out
mov
add
scas
fbld
or
in
jo
cmp
bswap
xorl
rorb
stos
mov
icebp
pop
mov
jb
cwtl
dec
rolb
lods
fnstenv
adc
mov
and
rcrl
movsl
or
mov
shl
xor
mov
clc
enter
pop
or
or
dec
cld
push
or
xlat
negl
lret
pop
xlat
jnp
icebp
loop
shlb
mov
xor
ret
aad
lds
jmp
xor
stc
aaa
jecxz
insb
fnstcw
ss
cld
out
loopne
stos
sti
loopne
xchg
dec
mov
and
adc
mov
in
clc
ficomps
pushf
lret
test
rcrl
roll
fadd
clc
repnz
rolb
adc
sub
shrl
cmc
mov
xor
pop
or
ja
jmp
mov
movsl
mov
ret
xchg
cli
mov
fldcw
fnstcw
and
test
and
mov
pop
mov
sub
addb
fstpt
int
sbb
pop
adc
pop
lods
xor
xchg
xor
je
shl
lret
mov
push
fucomip
ds
mov
clc
movl
data16
and
mov
lods
or
cmpsb
dec
inc
or
or
fs
mov
dec
ljmp
cltd
fcmovne
and
mov
lahf
pushf
inc
in
fcoml
imul
and
sub
jb
mov
mov
lods
jg
jl
xchg
jbe
dec
add
fcmovu
or
jbe
iret
iret
rcll
mov
int
out
cmpsb
sahf
mov
push
aas
xor
jbe
jne
xor
xor
aas
leave
sti
bound
xor
jp
ret
pop
and
outsb
mov
adc
sub
pop
arpl
or
sbb
loop
push
lret
jb
cmp
es
xchg
mov
mov
dec
andb
cmpsb
cmp
in
pop
pop
jmp
adc
scas
shl
and
ds
ret
and
jge
repnz
add
add
xchg
or
push
movl
lods
fldenv
int
cmc
xchg
mul
into
mov
pop
cli
push
aaa
xchg
add
mov
int
cmc
loopne
fxch
in
xor
mov
add
mov
js
lods
icebp
mov
lds
mov
test
ret
sbb
cmc
jp
lret
test
stos
out
fdivs
in
imul
mov
inc
test
push
shrl
xchg
cwtl
sti
shl
xchg
mul
mov
inc
fnstcw
lcall
fcoms
incl
fstpt
jne
xchg
xchg
test
pop
rcrb
and
je
cwtl
stos
mov
inc
xchg
push
leave
negl
jmp
mov
mov
xchg
push
jecxz
negl
sbb
xchg
or
addl
call
cmp
stc
or
mov
test
or
data16
jp
daa
call
adc
mov
mov
sub
add
mov
cmpl
push
push
mov
add
or
adc
push
sbb
fists
cltd
in
cmp
push
loope
mov
stos
jmp
jmp
aam
jmp
mov
lods
sbb
out
mov
pop
es
jns
xor
fnstenv
push
add
repz
shl
pop
cld
add
dec
push
sub
scas
enter
jbe
iret
shlb
scas
pushf
cmp
inc
sbb
pop
or
dec
push
push
lea
in
ljmp
mov
adc
add
in
in
ret
mov
jg
ljmp
xchg
mov
xor
dec
idivl
cltd
jp
fwait
ret
leave
insb
mov
loopne
xor
pushf
jno
repz
lock
shlb
cld
jmp
into
outsb
push
cmpb
in
and
ret
aaa
mov
cli
daa
aas
mov
insl
call
mov
les
ret
cmp
mov
std
dec
cli
sbb
stos
nop
pop
cwtl
xor
and
rcl
cmp
cmc
fisttpll
enter
push
adc
jmp
mov
mov
sub
add
jl
xchg
hlt
out
adc
sbb
xlat
shll
inc
jle
fmuls
ret
mull
shrl
fcmovne
and
fmuls
enter
xchg
sti
out
sub
fcmovnbe
js
call
xor
out
xchg
mov
rcrl
in
ss
inc
xchg
inc
repz
cmpl
fnstcw
xor
mulb
adc
ret
inc
int
lock
dec
inc
mov
mov
test
iret
in
and
les
xlat
adc
frstor
pop
jns
scas
push
stc
and
rol
sub
mov
push
adc
pop
or
je
jg
pop
pop
pop
subl
cmc
ret
mov
mov
gs
sahf
fdivs
dec
xor
lahf
push
imul
xor
int
leave
loop
movsl
jb
dec
pusha
jb
pushf
adc
fst
data16
mov
pop
jns
lock
dec
int
sti
jne
jmp
jg
pop
fbstp
lock
rcrb
int
mov
repz
stos
aad
jns
pop
orb
jae
mov
inc
mov
xchg
push
std
xchg
xchg
xor
mov
jae
lret
lock
jle
cltd
sbb
aad
inc
jle
test
jecxz
pop
mov
xlat
cli
in
loop
ja,pt
popa
insb
shrb
into
sub
or
dec
adc
xchg
or
jg
xorb
push
xor
inc
dec
stos
roll
jbe
int
pop
sti
addr16
int3
test
insb
outsb
push
xor
mov
int3
push
pop
jmp
add
push
or
lcall
add
test
or
and
sub
test
cli
push
pop
xchg
cmpsl
cmp
sbb
sti
xchg
test
nop
adc
fcom
mov
xor
out
mov
es
lcall
lcall
xchg
pop
adcl
add
add
jno
icebp
inc
nop
out
mov
sarl
sbb
les
ficomps
aaa
pop
mov
cltd
push
enter
aaa
inc
pop
dec
pop
shll
or
mov
aad
in
push
dec
enter
add
in
pop
loope
dec
push
inc
or
mov
jbe
leave
test
icebp
cltd
notl
push
rcrb
push
scas
repz
push
xchg
test
push
into
hlt
add
dec
mov
add
call
add
aaa
mov
inc
test
mov
arpl
add
es
repnz
in
fsubl
fidivs
mov
xchg
minps
ljmp
lahf
push
mov
in
les
mov
mov
pop
add
shl
sub
adc
rorl
push
les
ret
mov
mov
xor
mov
cmpsl
or
mov
mov
and
jmp
or
jae
jp
add
in
xchg
into
jmp
pushf
lds
sbb
sbbb
dec
fidivrl
js
dec
lret
pop
jb
orb
loopne
dec
xchg
xlat
in
sbb
ror
mov
and
js
icebp
adc
xchg
clc
lret
add
and
cli
xor
int3
pop
cmovp
mov
out
mov
stc
jg
pop
fisttpl
jmp
test
mov
xlat
mov
in
sbb
gs
cmp
lret
repnz
or
xchg
fbstp
cmp
xor
loopne
ret
pop
lds
fldl
shll
sub
lock
adc
fstl
out
pop
xor
enter
jbe
mov
lods
xor
and
xor
cmc
add
cmc
dec
jb
lock
jno
add
push
pushf
hlt
dec
dec
mov
mov
jb
lods
dec
rcrl
js
iret
test
jecxz
test
mov
push
cmp
or
lret
rclb
add
push
mov
mov
repz
inc
push
push
out
push
xor
mov
adc
int
rcrb
xor
shll
icebp
mov
mov
nop
and
sbb
call
test
aad
jmp
add
testb
ja
int
call
es
xorb
add
jbe
push
and
cmp
or
jnp
jl
xor
adc
int
subl
push
mov
cltd
daa
lahf
out
xchg
aas
jb
aad
roll
cmp
insl
and
loop
stc
jno
std
mov
mov
imul
push
sub
xor
and
cld
mov
out
xor
aas
loopne
in
mov
mov
aam
inc
sub
pop
out
stos
cmp
aaa
in
add
cmpb
fidivl
jo
sti
aas
out
dec
push
jecxz
cmp
leave
popl
inc
dec
mov
pop
push
push
sar
sub
sub
lcall
jg
jno
cmp
or
ret
imul
inc
out
cmp
ja
int
aaa
aad
or
jle
inc
fbstp
mov
mov
or
mov
cmpsb
loop
movups
mov
mov
xchg
stos
enter
add
lods
add
lret
mov
leave
fnstenv
mov
dec
cmpsl
inc
and
pop
sbb
les
mov
leave
add
repnz
ret
jle
popa
mov
in
and
cmp
add
test
sbb
aam
xchg
enter
inc
sbb
loop
frstor
gs
cmp
in
loop
pop
idiv
pop
or
xor
aas
sub
pusha
sti
jge
cmp
inc
mov
stc
and
pop
mov
add
out
mov
sub
add
mov
lock
aas
fldenv
dec
out
jl
iret
fmuls
popa
xor
jge
xor
adc
cli
mov
ret
mov
xor
jb
add
leave
int
xadd
repz
mov
movsl
bound
andl
cmp
jmp
inc
mov
shr
jns
push
add
adc
and
mov
arpl
inc
jno
clc
xor
sti
test
in
ret
xor
jo
jmp
loop
aam
loope
and
adcl
nop
xchg
adc
int3
stos
cmp
leave
push
and
aam
fwait
adc
adc
aaa
add
stc
mov
add
inc
sbb
xchg
or
stos
mov
mov
test
stos
fimull
xor
cltd
sbb
pop
in
or
xchg
imul
jnp
test
mov
lcall
xchg
jo
mov
sbb
rcll
adc
test
cmpb
in
fcmovnu
test
into
xchg
icebp
push
lret
cmp
xor
add
sub
xchg
aaa
fistps
dec
cwtl
lea
mov
mov
cmpsl
repz
adc
fbstp
aam
cltd
daa
add
rcr
mov
and
adc
ja
aam
mov
mov
int
pop
or
mov
adc
mov
mov
das
rclb
out
jbe
and
push
and
and
dec
nop
sar
loope
out
rol
shll
cltd
stc
xchg
sbb
rep
hlt
leave
fmull
inc
repz
es
icebp
out
repz
rclb
cltd
jmp
inc
fldcw
adc
int3
out
imul
or
sub
fisubrl
and
mov
leave
shlb
iret
gs
lods
mov
fisttpll
enter
mov
jl
scas
mov
scas
sub
ret
lret
in
pop
add
mov
pop
mov
jge
mov
xor
jle
dec
lret
and
jno
jmp
in
aas
es
lret
test
pushf
loopne
aam
arpl
pop
test
dec
sub
shll
aaa
mov
dec
sbb
insb
jmp
into
rcrl
mov
arpl
xor
aad
test
or
repz
sub
mov
cmp
into
ret
cmp
sti
imul
scas
sbb
pop
or
popa
push
mov
jns
add
not
test
sbb
pop
fstps
std
push
xchg
scas
mov
scas
imul
xchg
inc
int3
test
inc
add
inc
xor
movl
test
or
sub
push
add
and
lods
ret
test
add
lcall
dec
jne
add
xor
and
shrl
das
inc
insb
and
pop
sub
adc
lret
jo
std
mov
push
popa
sub
pop
subl
cmp
pushf
fildl
movsl
jne
loop
cli
mov
icebp
fcmovb
pop
xchg
add
andb
lret
mov
jo
mov
ja
das
lret
adc
es
and
shrl
add
add
sar
mov
mov
xorb
fs
pop
add
and
out
add
and
insb
stos
ljmp
out
lret
cmp
test
and
pop
and
and
out
outsl
sub
and
test
aam
pop
sbb
stc
adc
fadds
leave
jl
mov
lret
test
cwtl
loope
leave
sub
push
and
popf
xor
push
ret
mov
fcoms
imul
push
leave
add
repz
xchg
mov
add
aas
xor
pop
cwtl
popa
push
add
dec
xchg
dec
dec
jecxz
mov
in
jmp
imul
mov
fninit
dec
call
mov
sbb
push
je
dec
in
pop
and
lock
imul
sub
ret
add
xchg
or
insl
dec
mov
scas
daa
outsl
jle
pop
adc
jmp
cmpsl
in
call
sti
rorb
pop
add
lds
movl
add
mov
add
int
lret
inc
movsb
sbb
xor
mov
jle
int3
loope
and
inc
test
jle
mov
fmulp
push
push
xchg
mov
icebp
push
leave
in
sahf
jne
scas
lds
jns
or
cmp
je
and
imul
cmp
stc
xlat
xlat
xor
hlt
lds
mov
xchg
loope
fldt
mov
insb
testl
fadd
stc
xchg
repz
pop
push
mov
popf
cmc
hlt
leave
jno
loope
jae
ret
xor
inc
mov
pop
add
push
outsb
shlb
jb
das
nop
xchg
sar
cmpsb
and
cmpsb
mov
stc
in
mov
lret
sub
ret
fsqrt
mov
adc
lret
cwtl
mov
test
outsl
mov
push
repz
leave
inc
arpl
adc
int3
jmp
or
ret
leave
dec
loop
push
into
stc
and
lock
inc
cld
or
test
xchg
rclb
xchg
push
lret
push
repnz
pop
mov
nop
aam
cmp
icebp
test
adc
sahf
repz
leave
iret
into
xchg
add
aaa
and
int
mov
or
and
ror
loopne
ret
scas
outsb
dec
hlt
sti
jg
or
hlt
push
fwait
pop
enter
insl
sbbl
sbb
inc
ja
cmp
cwtl
mov
leave
out
js
pop
push
ror
pop
es
mov
push
lods
dec
sbb
mov
insl
xlat
sub
ds
jno
xchg
addl
mov
aas
cltd
ljmp
or
mov
adc
ljmp
cmp
sbbl
leave
push
aam
int3
sbb
scas
mov
xor
shl
xchg
pop
xchg
cltd
cmp
iret
jg
add
in
mov
ljmp
clc
jmp
pusha
scas
lds
imul
ror
inc
xchg
jne
cltd
pop
mov
mov
xchg
xor
xchg
scas
es
mov
lret
negl
push
lods
pop
inc
xchg
dec
divb
popa
mov
and
in
ds
cmc
xchg
pop
mov
imul
jmp
test
and
mov
mov
int
cwtl
in
pop
ret
xor
iret
mov
gs
cmp
jp
repnz
cmpsb
sbbl
jmp
mov
icebp
inc
cmpsb
dec
jge
jns
insl
aas
out
ja
idiv
xlat
int
lods
stos
ljmp
cltd
movsl
xchg
inc
leave
lods
in
cmc
ret
xor
test
repz
imul
mov
in
das
xor
pop
mov
fnstsw
rorb
sbb
sahf
xchg
jo
mov
pusha
test
xor
xor
test
xchg
pop
dec
bound
aam
mov
dec
sub
cmp
xchg
mov
je
test
stos
lea
dec
mov
jg
jecxz
jae
aad
mov
arpl
pop
das
decb
inc
mov
add
inc
xor
sbb
aam
fbld
inc
adcb
int3
rcl
dec
inc
fistpl
push
sbb
mov
adc
jae
dec
and
pop
mov
sti
inc
sub
inc
rcrl
add
dec
rorb
inc
pop
vcvtsi2sd
rorl
sub
dec
test
shl
push
lds
fildll
or
push
sub
sbb
add
repnz
xor
shr
add
dec
cmpsb
enter
enter
mov
dec
xor
enter
mov
sub
inc
aad
lock
mov
xchg
loop
aas
not
rorb
mov
or
add
xor
loopne
adc
fldcw
fisttpll
ja
push
adc
test
shl
hlt
lcall
dec
addr16
and
sbb
leave
insl
orl
add
and
leave
loopne
jns,pt
dec
inc
jl
fiadds
test
adc
mov
jmp
loopne
fcomp
flds
sub
mov
bound
fucomi
inc
push
fbstp
mov
cmc
fcoms
fnstsw
or
stos
out
push
lock
in
push
pop
push
dec
rcl
ret
cmp
push
aas
push
jne
dec
push
lds
adc
rcr
out
dec
insb
popa
leave
imul
cmp
mov
iret
inc
lds
cmp
adc
faddl
mov
sarb
out
sub
add
push
aad
lret
fidivl
xor
lds
ja
aas
xorl
rcl
mov
aas
xchg
lret
fs
dec
mov
add
push
pop
cltd
adc
lock
mov
test
cld
cmc
shrl
or
mov
or
insb
or
shl
inc
loop
and
out
movsl
pop
cmp
push
adc
stos
dec
lea
jns
inc
mov
cltd
xor
xchg
popa
or
xchg
popa
out
add
xlat
leave
and
fsubr
jb
test
hlt
lds
cmpsb
shrl
push
dec
sbb
mov
and
test
cli
xor
sar
scas
adc
imul
xor
inc
cmp
lock
rolb
jae
inc
outsb
iret
and
test
cmpsl
fldt
jne
dec
cwtl
push
add
das
daa
psllw
fwait
decb
mov
and
repnz
fimull
stos
sarb
pop
ret
dec
adc
gs
dec
repz
adc
xchg
hlt
xchg
mov
mov
popf
jb
fwait
movsl
push
jmp
and
add
roll
iret
cwtl
inc
incb
mov
fisubrs
jne
and
dec
sbb
call
inc
mov
mov
test
dec
fwait
mov
dec
pop
mov
cmc
jge
mov
sti
test
mov
outsl
xchg
dec
cmp
jbe
int
gs
dec
add
mov
jae
xor
cmpsb
add
imul
cmp
subl
jns
test
or
inc
sub
aad
fcmovnu
leave
roll
daa
rcrb
xlat
or
aad
adc
mov
lods
icebp
jmp
aad
leave
aad
mov
and
add
xchg
inc
stc
repz
roll
and
stc
jnp
sahf
sbb
add
push
push
lds
pushf
notb
jae
movb
sub
addb
test
out
and
xchg
jge
out
clc
mov
inc
push
xor
xor
inc
shrb
daa
out
push
push
std
pop
cli
mov
push
dec
decl
dec
stos
mov
aam
push
lret
adcb
sub
movsb
aas
xor
int3
sarl
orb
xor
adc
xlat
push
adcb
sub
or
mov
xchg
loopne
shll
pop
or
mov
popf
sub
ds
sub
ds
nop
sub
jg
mov
dec
xor
sarb
pop
mov
mov
stos
scas
enter
rol
jne
cmp
in
lock
aad
push
jbe
pushf
mov
xor
stos
mov
dec
aas
sarl
xchg
iret
sets
or
icebp
imul
sbb
cmpb
ds
lret
push
ret
or
aaa
add
clc
negb
mov
mov
fidivrs
or
jmp
dec
ds
pop
outsl
mov
mov
lret
fwait
dec
sbb
inc
sahf
insb
sub
push
popf
add
arpl
imul
rcl
push
lret
inc
ret
pop
dec
aam
pop
not
popa
leave
cmp
inc
xchg
insl
xor
mov
stc
cmp
dec
push
enter
jb
fsts
add
mov
loopne
popa
xchg
mov
in
mov
dec
lret
repz
push
push
mov
sub
testl
mov
lret
out
rol
dec
sub
js
mov
pop
leave
dec
cltd
out
adc
inc
dec
dec
shll
shlb
push
arpl
ficoml
cmp
shll
sbb
arpl
enter
stos
sub
cmp
into
insl
test
dec
adc
xor
inc
loopne
push
jne
xchg
outsb
xor
rolb
ja
push
mov
push
dec
and
add
jno
adc
stos
sahf
dec
pop
mov
lock
into
icebp
inc
dec
test
cmc
push
jb
sub
enter
cmp
into
push
sub
push
jo
test
xor
jmp
xchg
jbe
lods
push
jo
test
jno
imul
int
inc
in
sbb
ret
or
int
fld
ljmp
mov
roll
mov
hlt
popa
sub
rcll
push
mov
adc
test
mov
loopne
mov
scas
jb
out
movsl
shrl
data16
pop
test
ds
cltd
mov
cmc
or
cs
jnp
mov
icebp
add
mov
out
adc
test
add
mov
jne
jp
xlat
loopne
ljmp
call
les
or
mov
xadd
out
pop
push
jne
push
into
inc
fcmovnb
rcll
lcall
fs
dec
pop
ss
lret
js
jb
sbb
sti
push
andl
inc
pusha
jo
xor
rclb
xlat
ljmp
enter
ret
mov
jmp
mov
ds
or
lret
call
cmp
push
jecxz
addl
mov
and
mov
stc
ret
addr16
mov
lods
mov
mov
addr16
mov
jo
mov
cmp
and
push
test
inc
les
shll
adc
mov
push
orb
lret
mov
xlat
mov
mov
test
or
stos
leave
out
test
js
push
xchg
leave
aam
and
xchg
inc
jp
aaa
dec
mov
aam
stos
xor
mov
outsl
iret
leave
add
in
mov
out
cmc
xchg
fcos
mov
repnz
xchg
rcrb
lods
sahf
cwtl
mov
es
mov
sub
mov
and
push
ljmp
mov
fscale
push
lods
mov
out
mov
jbe
dec
jns
pop
sarl
sub
movsbl
mov
imul
fsubs
fildll
mov
push
int
repz
xchg
fisubl
adc
adcl
dec
inc
mov
arpl
push
and
popa
or
clc
cli
cld
add
mov
inc
add
shlb
outsl
mov
cli
or
mov
rolb
xor
ret
adc
repnz
cmp
in
ja
jne
lahf
nop
add
stos
push
pop
std
xchg
nop
lcall
sub
xchg
dec
mov
mov
add
add
repnz
jge
add
jle
mov
push
cld
inc
xor
mov
pop
jns
inc
sbb
iret
dec
lock
inc
sub
or
in
xor
sbb
xor
iret
push
add
ret
mov
cli
mov
sbb
mov
fnstsw
fldt
mov
mov
sbb
sar
bound
or
jae
test
out
fldenv
add
adc
fs
int
fidivs
and
inc
shl
subl
jp
jo
icebp
cmpb
push
insl
sbb
lret
sti
mov
add
push
outsl
mov
sbb
repnz
std
mov
shlb
mov
mov
jbe
stos
ss
pusha
push
test
stos
inc
or
es
mov
jbe
aas
loope
adc
push
fisttpll
mov
pop
gs
mov
cmp
and
test
pushf
sti
xchg
cs
cmp
loopne
mov
cld
mov
jo
int
hlt
test
mov
enter
mov
test
inc
repz
iret
inc
out
adc
jns
mov
in
pop
int3
xchg
dec
rcr
in
aas
jae
lods
cmp
push
mov
sarb
push
push
std
add
mov
test
inc
cmp
mov
rcll
aas
test
push
pop
mov
lret
push
xchg
mov
mov
int3
test
shrb
ret
pop
and
jno
enter
sub
push
jecxz
add
out
jbe
popf
out
hlt
dec
popa
add
das
leave
int
xor
scas
xchg
xchg
ret
push
jp
and
pop
leave
loopne
push
dec
pop
lods
xor
mov
packssdw
ja
int
stc
fisttpll
jl
ret
mov
jo
mov
js
xor
int
mov
jnp
shlb
or
or
sbb
fnsave
shrl
push
repz
and
test
sbb
nop
cmpsl
jmp
jp
add
xorl
rolb
aas
xor
add
pop
rcr
fcmovnbe
rcrb
ret
mov
add
movsl
push
add
add
fldln2
lahf
hlt
jmp
mov
insb
mov
push
les
add
xchg
or
cmp
add
stos
movsb
ror
jmp
movl
dec
ljmp
lods
adc
lcall
inc
pop
shrb
pop
ret
leave
lretw
je
out
cli
push
dec
clc
adcl
in
adc
clc
pop
and
xchg
int3
in
fwait
rol
aaa
or
js
in
int
pop
cmp
scas
test
test
mov
lahf
mov
xor
push
test
mov
ja
xor
and
movsl
mov
idivl
jb
fstpl
lods
les
mov
or
jb
mov
not
adc
jmp
cmpsl
decb
ret
roll
dec
mov
test
and
sbb
xor
and
or
xlat
arpl
sbb
jmp
mov
sub
lods
push
mov
cltd
gs
ret
test
call
sub
mov
and
stos
or
push
cmc
jo
mov
out
mov
lcall
adc
or
sbb
dec
icebp
out
xor
cmp
popa
push
push
jg
int3
hlt
cltd
mov
pop
int
dec
aaa
out
mov
dec
test
lock
dec
sbb
mov
enter
sbb
rorl
mov
mov
pop
hlt
adc
loop
loopne
das
inc
inc
cmp
out
xor
mov
out
test
or
int3
int
ja
and
mov
mov
dec
sub
jns
mov
in
adc
imul
lds
mov
push
sbb
test
lods
data16
adc
ljmp
movsl
push
jecxz
sub
in
sbb
aam
je
jl
test
lcall
hlt
enter
cmp
vcvttpd2dqy
jno
sti
mov
sbb
icebp
add
add
nop
sub
sub
dec
leave
stos
fwait
jmp
rorl
icebp
cwtl
lds
leave
iret
dec
jae
or
jecxz
mov
cli
inc
out
ljmp
mov
nopl
sub
and
mov
xchg
rcrb
leave
inc
cs
in
xor
dec
mov
nop
jae
lock
dec
fs
pop
lret
lret
pop
cmp
mov
pop
mov
jae
pop
mov
mov
pop
stos
adc
inc
lret
test
out
dec
and
and
ret
xchg
in
sub
sbb
jo
lock
insl
push
xor
inc
and
dec
mov
daa
aad
divl
or
jb
xchg
out
mov
ja
dec
jmp
mov
rcrb
pop
enter
nop
daa
xchg
or
mov
pop
mov
pop
imul
int
into
add
push
inc
push
xor
add
popa
test
aad
insb
shrb
mov
outsb
clc
jne
inc
leave
jg
inc
mov
aad
sbb
jmp
clc
sbb
iret
inc
mov
push
cld
jecxz
sbb
lods
add
push
stc
xor
idivb
out
push
int
aaa
ret
imul
jbe
push
fstp
ljmp
inc
stos
and
ja
roll
mov
sub
sub
inc
xchg
in
leave
push
ret
mov
jae
enter
inc
sbbb
mov
mov
add
or
adc
mov
xor
jns
mov
int
cmp
xchg
mov
test
loope
xchg
jno
mov
mov
inc
and
add
or
gs
cli
jb
mov
push
dec
pop
jg
add
in
sub
dec
dec
fwait
popf
lea
xchg
cmp
pusha
sub
sbb
aam
cmc
int3
jl
js
xor
pop
add
jmp
test
sub
add
ret
lods
addr16
xlat
sub
ret
jmp
inc
int
xchg
mov
inc
ret
jno
and
dec
mov
pop
and
nop
repz
cmpsb
in
shlb
lock
test
xor
mov
paddsw
test
shrl
or
add
call
cs
xchg
add
cwtl
jecxz
fstps
into
or
jmp
mov
jne
test
mov
or
aas
push
adcl
add
add
je
enter
mov
out
into
lret
cwtl
test
ret
jmp
xor
in
inc
lret
movsb
arpl
rol
shll
ret
pop
sbb
sbb
sbb
push
mov
xchg
fstpl
sub
cmovns
mov
aas
std
sub
jmp
test
test
dec
testl
mov
xchg
ja
and
and
pop
rorl
inc
adc
xchg
into
sub
outsb
adc
cmp
jecxz
cli
sbb
mov
pop
mov
aad
lret
shrb
dec
cmpsb
sbb
cmc
into
insl
dec
xor
inc
xchg
pop
dec
add
pop
push
adc
xchg
sarb
and
dec
pushf
cmp
fcoms
cmc
inc
ss
push
andb
in
icebp
cmp
fmulp
and
adc
sub
std
xlat
les
sbb
enter
xchg
mov
jmp
or
lock
lods
popa
pop
xchg
dec
push
lds
add
jmp
idivb
fistl
push
add
insl
push
pop
rolb
pusha
imul
or
int3
pop
inc
roll
ljmp
jbe
or
je
aaa
fldt
mov
sbb
jne
mov
dec
pop
insl
add
push
or
stos
or
sub
mov
xchg
jle
shl
stos
fisttpl
mov
xor
cmp
add
repz
test
js
neg
and
or
in
imul
and
aad
push
dec
push
fnop
and
or
cld
add
and
add
movsl
popa
pop
fcmovbe
mov
test
cmp
jae
mov
arpl
inc
adc
inc
cld
dec
aam
xchg
inc
loop
stos
sbb
cli
mov
xorl
add
xor
push
fldcw
and
pop
in
movb
mov
aam
loop
cmc
test
inc
adc
pop
pop
cwtl
dec
lret
mov
inc
sub
jmp
jge
sub
test
shlb
cmp
mov
inc
jg
cli
push
jns
in
rorl
add
sub
ret
mov
mov
test
fmull
aaa
fiadds
popa
ret
testl
jl
jnp
std
add
in
int3
out
or
rorb
adc
stc
fsubr
push
push
mov
push
sbb
test
in
xor
loope
fwait
or
cmp
sub
or
rorl
stos
or
cmc
ret
pop
insl
mov
es
popf
inc
xor
mov
sbb
icebp
in
cltd
xor
mov
out
xor
inc
or
bswap
sub
lds
popa
aad
jo
ret
into
movsb
rclw
push
outsl
and
mov
sbb
lcall
pushf
jmp
push
call
sub
mov
inc
jl
inc
fildl
mov
mov
in
lea
push
xor
add
push
in
inc
xor
jb
mov
add
scas
incb
insl
lods
leave
xchg
lods
loopne
mov
xor
enter
jb
xor
incl
popa
call
shlb
test
jmp
js
xor
rcrl
mov
mov
lret
insb
pushl
pop
fcoms
ss
leave
push
pop
xor
jnp
mov
loop
rcrl
dec
sbbb
add
fldt
and
push
rcl
dec
lret
pop
sbb
iret
xchg
sub
sub
dec
adc
push
es
sbb
jmp
push
mov
mov
rorb
jo
jmp
add
enter
mov
lea
xchg
jno
jo
sarb
add
mov
in
sub
cmp
jae
lds
push
int3
movsl
rcrb
xchg
dec
lods
adc
cwtl
daa
ljmp
mov
jae
js
and
sbb
push
ret
pop
cmp
test
push
nop
add
add
or
xlat
and
xor
cmp
movsl
cli
out
test
int
xchg
cmc
cltd
mov
fsubr
pusha
fs
mov
xchg
dec
jnp
rol
pop
xchg
xchg
cli
stos
out
out
add
and
fmull
mov
xchg
sbb
lock
cli
gs
or
mov
cmpsl
scas
dec
jp
mov
sub
nop
out
das
dec
out
fwait
cmp
adc
inc
mov
pop
and
ror
mov
and
fwait
pushf
call
jge
add
xchg
or
xchg
call
fnstenv
cli
mov
scas
in
push
shll
sbb
lods
jns
mov
dec
mov
push
daa
sub
adc
and
push
int
sub
pop
repnz
inc
sub
jle
mov
ljmp
clc
mov
repnz
or
cld
iret
inc
push
in
stc
and
sbb
mov
mov
aaa
pushf
mov
or
addb
sub
call
stos
in
sub
lea
cmpsl
lods
sahf
mov
ret
add
mov
imulb
cwtl
add
imul
dec
cmp
jno
and
gs
mov
dec
vsubps
insl
dec
div
mov
xor
jl
shll
jmp
popa
xor
in
and
mov
dec
jl
jecxz
mov
nop
xchg
push
pmullw
sbb
loopne
enter
xor
jmp
lahf
dec
loopne
sub
lds
cmc
loope
mov
lahf
mov
test
pop
movsb
pop
call
xchg
or
jmp
dec
sub
mov
or
and
loopne
mov
dec
push
dec
add
cld
loope
dec
jmp
dec
push
jg
mov
aas
andb
sub
lret
inc
fisttpll
sub
cmp
gs
stc
mov
jmp
jne
lods
adc
mov
bound
out
in
jmp
xlat
xabort
push
ret
cmp
testl
jg
ret
inc
mov
loope
ret
mov
inc
lcall
cmpb
pop
jg
pop
add
test
sbb
pop
xchg
stos
cs
pop
jo
sbb
xor
std
fstpt
and
and
sub
and
mov
orl
mov
inc
imul
xchg
jmp
rol
aam
push
insb
jne
sbb
sub
jae
rclb
iret
std
das
adc
pop
cmp
sub
push
and
cmpsb
rol
out
nop
push
loop
add
stos
fcmovnu
mov
in
enter
pop
pushf
negl
push
gs
pop
test
gs
das
push
cmp
mov
inc
loope
movsl
xor
iret
gs
hlt
xchg
jp
adc
mov
popf
divl
add
iret
sub
or
or
jbe
mov
mov
roll
out
fld
stc
dec
rol
dec
leave
shl
and
mov
jg
inc
inc
xchg
jmp
or
sti
outsl
call
pop
mov
pop
testb
ret
add
ljmp
inc
mov
xor
xchg
and
test
addr16
pop
test
mov
not
mov
add
adc
xor
lods
scas
shll
sub
pop
enter
inc
cmc
or
imul
mov
mov
rorl
into
loopne
mov
mov
sbb
into
stc
adc
test
add
int
or
xchg
push
mov
jecxz
push
xor
arpl
test
arpl
aam
testl
dec
sbb
xchg
aas
fsubrs
mov
pop
lods
mov
xlat
and
push
or
xor
inc
jo
mov
dec
ljmp
cmpsl
or
xchg
or
push
or
fildll
inc
ror
push
enter
call
mov
xor
stos
pop
mov
lahf
xchg
lret
es
fmul
mov
pop
push
pop
or
push
xor
cltd
push
ret
int
cli
or
es
es
cmp
jno
negb
mov
imul
mov
je
imull
repnz
xor
and
ds
xor
into
in
cld
mov
sti
icebp
adc
aas
lds
add
test
mov
ja
jb
jle
pushf
dec
rcll
jnp
in
cmp
pop
pop
mov
mov
je
enter
lahf
iret
dec
cmp
jb
scas
pop
pop
ret
pop
mov
pop
pop
arpl
inc
ret
fwait
jl
xchg
cmp
outsl
mov
sarl
scas
ret
lods
scas
push
int3
xchg
lea
fisttps
in
push
jo
test
sbb
int
adc
pop
pop
dec
add
mov
dec
push
mov
scas
or
xchg
mov
mov
js
mov
xor
aam
jae
push
cmp
gs
xor
xchg
in
adcb
lahf
psubsw
ss
pushl
push
sub
xorb
push
jle
test
jge
xchg
cs
jge
inc
nop
sub
cmpb
lds
repz
pop
lahf
aam
xor
test
fstpl
shll
repz
ffreep
aam
mov
shl
rol
repz
int3
repz
jae
pop
cmc
mov
aas
idiv
and
aad
fdivl
adc
pop
out
push
jmp
clc
push
lea
adc
jecxz
in
es
add
frstor
aad
cld
sbb
aad
or
cli
pop
std
dec
das
pop
push
mov
rcrb
fdivl
fldl
psrlw
dec
jns
loope
or
mov
jg
sub
lahf
pop
scas
sbb
xor
pop
aad
add
pop
daa
mov
lcall
jl
lods
test
inc
scas
mov
cmc
cmp
loop
jbe
mov
jae
pushf
jecxz
mov
sbb
mov
enter
push
adc
mov
mov
and
xchg
imul
add
jge
dec
mov
dec
mov
call
pop
inc
cmp
arpl
push
notb
and
add
cli
mov
jl
leave
xor
add
or
mov
loope
jmp
roll
stc
mov
stos
mov
sub
dec
or
repnz
cli
jmp
movsl
pop
inc
scas
clc
movsb
push
dec
pop
subb
jp
mov
mov
lock
es
in
roll
cwtl
in
sti
out
sbbl
aaa
lea
pop
dec
inc
mov
jne
pop
cmc
cs
mov
push
pop
fcoml
je
dec
in
mov
fidivrs
jp
fwait
push
dec
cwtl
inc
hlt
and
inc
dec
or
mov
loopne
int
data16
inc
mov
jmp
repnz
aad
push
aas
ss
clts
jl
les
int
xor
mov
cltd
inc
xor
add
cmpsb
adc
or
stc
enter
push
pop
fcomip
mov
sarl
mov
add
mov
fwait
xor
cmp
leave
lahf
cli
fucomi
ljmp
xor
dec
and
xchg
loope
pop
sbb
mov
dec
sarl
stos
shll
inc
jns
mov
fistps
out
push
mulb
or
pop
imul
rclb
movsb
clc
filds
push
inc
xlat
int
or
or
adc
int
and
test
insb
or
imul
xor
jge
xlat
xchg
popa
dec
cltd
loop
xchg
clc
push
ret
test
push
cmp
cmp
push
or
lds
mov
mov
aad
mov
mov
int3
divb
push
add
stos
mov
push
fmul
insl
cmp
mov
or
and
lock
sbb
xchg
adc
cmpsb
ja
and
js
sbb
jecxz
call
nop
aad
outsl
jae
sub
xchg
bswap
mov
int
add
inc
rcl
sub
aam
pop
or
mov
adc
arpl
out
rcrl
stc
xor
mov
xor
test
adc
inc
adc
sbb
int3
and
pop
es
or
aad
in
flds
mov
add
sbb
scas
jns
pop
adc
iret
push
sbb
pop
adc
push
xor
add
cmp
ja
push
into
mov
incl
leave
jae
ficomps
lret
lds
sub
jmp
xor
int3
in
fcmovnu
jg
push
fucomp
outsb
or
add
ret
fwait
sbb
sbb
inc
add
dec
xchg
fidivrs
rorl
cmp
pop
adc
shll
mov
sub
sti
pop
add
outsb
mov
bound
sbbl
pop
xchg
cmp
icebp
stc
adc
jecxz
lods
add
jg
mov
push
adc
add
repz
cmc
pop
shll
adc
and
icebp
mov
sbb
movsb
jecxz
aad
mov
out
ret
repz
inc
sub
add
mov
or
push
fnsave
int3
xor
mov
add
mov
enter
fistps
mov
add
repz
popa
dec
je
add
shr
dec
push
mov
mov
sub
pop
add
and
push
mov
pop
push
or
jb
cs
divb
xor
sub
mov
sti
mov
mov
and
cmpsl
fimull
leave
and
push
fmull
mov
pop
cmp
pop
sbb
sbbl
icebp
push
cltd
jp
enter
lds
jmp
in
nop
ds
jmp
add
cmp
jbe
inc
jmp
mov
add
cmp
or
cmp
xchg
xor
and
cmp
add
je
mov
mov
mov
add
mov
push
fstl
dec
adc
xchg
mov
int3
sti
scas
lds
shll
incl
test
add
aaa
jmp
sub
push
dec
mov
mov
rclb
loop
test
jbe
mov
cli
dec
mov
ljmp
cli
repnz
cmp
in
mov
mov
shrl
mov
cmp
test
adc
mov
dec
lret
and
cmp
push
sar
mov
and
imul
ret
and
or
lock
cld
mov
in
jnp
cs
leave
clc
pop
rolb
jno
fldcw
jnp
xchg
pop
jmp
xor
adc
rorb
pop
insb
add
ret
in
inc
cli
ret
inc
jae
adc
cmp
cmp
adc
dec
ret
xor
cmp
mov
fidivl
mov
cltd
mov
into
ss
loopne
scas
mov
testl
aam
jae
pop
das
xor
push
ds
test
out
add
iret
or
mov
add
jo
inc
jns
and
stos
inc
push
cmp
test
jo
dec
mul
adc
out
mov
jge
or
adc
popl
cmc
mov
dec
pop
push
inc
test
popf
rorb
xchg
sub
xor
xlat
cmp
aam
popf
stos
out
xor
xchg
mov
and
icebp
sub
push
and
add
xchg
sti
enter
dec
icebp
scas
stos
add
into
fmul
shrw
testb
lea
add
add
enter
dec
enter
sub
fwait
cli
xchg
mov
jmp
mov
mov
inc
adc
mov
jl
pop
add
push
ds
vcvtsd2ss
mov
mov
sub
mov
popl
add
push
rcll
push
movsb
and
inc
enter
mov
xor
sbb
aam
clc
dec
fmull
and
push
cli
xlat
and
icebp
adc
pop
shrb
in
mov
arpl
and
stos
es
lods
and
pop
mov
lahf
push
push
push
sbb
push
cmpsb
pop
mov
inc
or
mov
sbb
inc
mov
and
repz
add
out
ret
aad
xchg
insb
xor
rclb
je
xchg
inc
popa
add
cmp
sub
cmp
xor
push
dec
fsubrl
xor
and
sarb
pop
enter
lods
mov
rolb
mov
rorl
mov
enter
ret
repz
or
inc
sub
sbb
lds
or
or
in
neg
enter
mov
cmp
sbbl
mov
mov
adc
add
stos
and
outsl
jne
iret
into
dec
test
es
sub
cmpsb
mov
fcmovnb
and
out
xchg
aam
lock
adc
xlat
inc
loope
add
sub
lret
cmp
pop
xchg
mov
call
loop
in
mov
mov
repnz
pop
and
and
jns
xchg
xchg
push
and
movsl
push
lcall
and
jg
stos
mov
ret
and
testl
aaa
scas
and
xchg
testb
ss
aad
out
jae
xchg
adc
xor
int
mov
sysexit
and
pop
pop
mov
and
jle
pusha
lock
pop
and
sbb
and
ja
and
shll
in
daa
fnstsw
popa
pop
ja
and
mov
inc
stos
xchg
inc
sbb
mov
mov
mov
dec
stos
sub
lds
push
mov
and
dec
stos
sub
push
xor
xchg
or
inc
sub
cmp
call
jo
jmp
inc
or
enter
out
outsl
fs
fcmovbe
shl
mov
inc
enter
mov
cli
mov
sub
rcrl
inc
mov
adc
fnstsw
add
les
jmp
in
sbb
mov
shll
out
lret
jne
fs
pop
in
sbb
mov
sbb
cmp
adc
clc
fisubl
pop
fxch
aad
mov
stos
sbb
es
dec
cmp
imul
pop
or
fbld
xlat
add
mov
ret
and
mov
fists
fwait
inc
jecxz
fldcw
frstor
insb
imul
add
fnstcw
mov
push
daa
sbb
push
add
stos
mov
outsl
jae
pop
out
xor
pop
add
out
in
push
jmp
push
test
pushf
sbb
sbb
sbb
or
mov
dec
add
and
push
dec
roll
mov
add
fwait
dec
pop
call
loopne
fists
shrl
enter
add
dec
sub
out
mov
aaa
sar
mov
xor
andl
fdivl
sub
mov
jl
shrb
adc
lds
ror
dec
std
mov
xchg
or
sub
mov
rcll
pop
sarb
add
and
mov
push
cld
mov
ja
xchg
loopne
fisttps
mov
or
mov
mov
test
cmc
jns
sbb
in
push
jae
iret
iret
dec
lret
sbb
push
scas
cmp
adc
lds
stc
cltd
and
sarb
aaa
incb
add
cmpsl
lret
test
sar
es
subl
push
pop
movsl
mov
inc
jnp
mov
sub
mov
scas
jb
out
daa
and
lret
clc
int3
loope
cmp
scas
fs
inc
imul
and
out
popa
mov
jge
ss
add
std
nop
popw
dec
in
jl
out
lds
inc
and
sbb
pop
into
stos
adc
aad
into
daa
aas
mov
sub
fwait
jge
lds
je
push
and
shld
lock
cld
loop
loope
jecxz
call
inc
xor
stos
adc
and
fldcw
out
push
and
adc
in
mov
inc
dec
and
mov
into
sub
std
sub
je
in
rclb
in
icebp
dec
fldcw
xor
sahf
mov
rcrl
in
pop
adc
sbb
into
sub
fwait
mov
sbb
adc
cwtl
and
lods
call
sarl
ret
fldcw
test
jae
mov
add
leave
repnz
les
push
push
mov
sarl
xor
mov
jmp
arpl
or
shlb
fldenv
adc
cmp
pop
add
aam
xchg
xchg
imul
movsl
call
push
add
in
inc
mov
inc
inc
stc
jge
push
pop
or
push
and
nop
xchg
fcomps
je
ljmp
cmp
fnstenv
ja
imul
inc
enter
fdivrs
ret
sub
cli
mov
rsm
ss
scas
cmp
test
cli
ja
add
jmp
push
repnz
jne
xchg
out
sar
xor
adc
sub
jne
xchg
jecxz
pushf
pusha
add
jnp
xlat
pop
mov
xor
fnstsw
rcrl
inc
push
outsl
push
pop
mov
sub
dec
fdivr
mov
cli
mov
fnsave
stos
sbb
lods
push
test
mov
mov
call
ljmp
xor
xor
mov
cmp
sbb
dec
mov
xor
push
nop
or
and
cmpsb
jo
sbb
test
inc
adc
sbb
add
add
ret
mov
or
mov
pop
daa
sti
adc
jle
rcrl
in
pop
stos
xchg
fbld
scas
fnstcw
lcall
roll
xor
stos
adc
push
call
fldcw
adc
xchg
nop
shr
pop
shll
aam
or
and
test
add
sbb
pop
add
dec
dec
ss
inc
or
jbe
adc
arpl
push
push
not
xor
stos
jns
mov
aad
mov
add
dec
repnz
push
cmp
jle
cmp
or
xor
xchg
in
adc
test
ret
leave
in
jno
stos
stc
cmpsl
mov
lret
dec
stos
and
inc
arpl
sub
jae
push
es
fidivl
push
fmuls
inc
mov
xorb
adcl
add
loope
shll
sub
movsb
push
jmp
and
ret
call
repz
icebp
adc
cltd
xlat
int
xor
mov
jle
mov
xchg
cmc
test
ret
dec
loop
iret
push
mov
push
in
int3
dec
aam
stos
cmp
test
xor
aaa
faddl
pop
xor
xor
mov
pop
dec
fisttpll
mov
cmp
mov
and
aas
cltd
fcompl
std
popf
xchg
in
jbe
scas
add
test
lea
xorb
cmpb
cmp
ret
jmp
movsl
mov
inc
add
std
leave
ljmp
and
cltd
out
stos
sarl
aas
aaa
mov
cmp
lods
sub
xchg
mov
and
mov
imul
cmp
pop
sbb
out
sub
psubusw
test
loope
fdivs
mov
fnstcw
leave
push
add
lret
icebp
mov
add
ja
sub
adc
inc
mov
dec
clc
rcr
pop
aam
iret
add
mull
fnsave
mov
in
ljmp
mov
adc
jns
and
in
icebp
mov
mov
fidivl
or
movsbl
aad
sub
lahf
push
repnz
ret
sub
and
mov
push
iret
jo
cmp
xor
inc
iret
out
leave
pop
aas
lock
mov
push
outsb
ret
adc
adc
iret
pop
xchg
or
mov
addr16
dec
fisubs
es
test
iret
add
fbld
into
es
add
push
adc
into
push
cmpsl
add
mov
inc
jno
jb
push
cmp
iret
push
lock
mov
in
or
gs
pop
enter
rolb
sbb
popa
not
je
pop
xor
and
add
mov
cmp
mov
xor
pop
xchg
push
aam
mov
in
testl
frstor
lds
sub
mov
sub
loop
sbb
or
enter
sub
dec
xor
stos
xor
sub
lock
es
fdiv
rcr
add
dec
and
dec
jmp
pop
and
std
test
push
hlt
adc
xchg
idivl
rorb
cmc
dec
inc
aad
into
inc
push
daa
fildll
cs
pop
aad
jmp
aam
enter
xchg
dec
repnz
xchg
lea
dec
dec
sub
inc
ret
jge
mov
fsubrs
or
in
scas
addb
mov
iret
or
int
filds
arpl
stc
mov
lret
ds
mov
mov
sarb
iret
addr16
cmpsb
mov
mov
mov
or
cltd
loop
test
inc
fcomps
lds
shlb
mov
lret
test
lods
dec
cmpsb
stos
fdivr
dec
and
inc
cmp
mov
mov
mov
add
push
or
add
xor
fldenv
mov
inc
mov
mov
mov
lea
add
in
adc
subl
cmpsl
sub
jns
popf
push
jno
call
enter
sub
mov
shll
ja
cs
cwtl
push
rcll
lea
mov
popa
sarl
xor
shlb
cmp
sarl
gs
jnp
inc
test
mov
mov
rcll
inc
cmp
cmp
pop
dec
or
mov
pop
mov
sub
sub
negb
push
fiaddl
mov
sub
add
jmp
adc
repnz
notl
loope
jno
icebp
and
xor
rcll
icebp
jae
xor
mov
jecxz
jne
adc
repz
mov
mov
ret
sub
repz
mov
lds
push
fdivl
jle
leave
cmp
repz
shl
shrl
rcr
mov
dec
fmull
and
icebp
imul
xor
add
fdiv
pushf
fisttpl
repz
test
xchg
mov
mov
push
mov
jnp
sub
in
and
adc
mov
sarb
aad
shll
in
xor
or
outsl
in
lret
mov
call
adc
out
mov
fwait
ss
mov
into
stos
pushf
fsubr
adc
cwtl
scas
xchg
aad
jg
inc
sbb
jo
clc
jmp
jecxz
mov
mov
xor
xchg
sbb
dec
pop
and
sbb
sbb
mov
out
imul
mov
out
add
shlb
mov
mov
xor
dec
or
add
add
jne
sbb
or
fadd
clc
arpl
enter
mov
pop
stos
lret
xor
jne
add
xor
iret
lret
xchg
cmp
rcr
sub
mov
aam
mov
push
sahf
cli
add
test
or
add
cltd
sub
xor
mov
lret
scas
hlt
shrl
cld
jbe
cltd
sub
enter
push
mov
lea
xchg
mov
std
sarl
xchg
xchg
ret
mov
and
pop
push
adc
insl
fcomi
lods
test
pop
pop
outsl
clc
rorl
addb
movb
cmp
dec
cmpb
imull
fstpl
stos
iret
shrl
mov
xchg
jl
ret
adc
push
inc
mov
ret
or
dec
inc
xor
lret
cmp
dec
or
in
iret
push
in
fstpt
fdivs
in
loope
and
inc
stos
fdiv
in
repz
add
lock
aam
andl
shrb
cmp
dec
mov
in
rcr
inc
sub
inc
pop
add
mov
test
cs
notl
lret
fnstcw
insb
test
push
cltd
dec
rep
xorb
jne
sub
dec
jo
repz
inc
icebp
lock
fcomi
cmp
sar
loope
add
push
xor
jb
dec
inc
cmp
inc
movsl
mov
int3
lds
imul
pusha
sti
in
imul
jne
xchg
mov
inc
jnp
adc
or
xchg
jbe
inc
dec
addr16
icebp
push
and
sbb
mov
add
popl
fnstenv
jo
outsb
test
dec
sbb
aad
dec
enter
aaa
cwtl
adc
std
dec
mull
fnstcw
mov
jmp
push
pop
repz
xor
fsubl
xchg
mov
add
push
sub
inc
adc
movsb
out
jnp
int3
out
data16
xchg
push
bound
inc
xor
mov
inc
jae
dec
inc
jl
dec
je
int
xor
mull
loopne
jle
push
dec
xchg
add
xor
imul
das
outsl
jmp
fistpl
sub
pop
popa
jge
mov
stc
push
lret
ret
cmp
pop
es
rorl
sbb
insl
aad
and
mov
inc
add
or
hlt
dec
pop
enter
ret
std
lods
xor
sub
mov
repz
sti
xor
dec
mov
pop
mov
imul
xor
jle
xor
mov
leave
adc
jmp
aad
mov
test
lock
mov
mov
xlat
jle
repz
dec
pop
stc
or
jecxz
xchg
mov
fldcw
outsl
ret
aas
mov
add
mov
dec
cld
scas
xchg
ret
ret
push
bound
or
rol
dec
ss
xor
fldcw
sub
dec
sub
insl
mov
mov
mov
and
imul
jb
push
cld
and
adc
push
add
mov
dec
adc
sub
push
stos
push
jnp
aaa
loope,pn
cli
stos
les
fcmovnbe
cld
inc
and
sub
cwtl
add
mov
stos
lret
add
jp
add
mov
lock
cmc
fidivs
lcall
fsincos
mov
or
pushf
sub
out
cwtl
out
dec
inc
dec
in
sarl
nop
stos
int3
dec
stos
mov
sbb
mov
into
pop
xor
or
js
inc
mov
out
stos
aam
mov
pop
pop
xorb
sbbb
sub
jmp
jg
and
sbb
repnz
cmp
shll
cmpsb
ret
mov
mov
sub
stc
xlat
cmp
shlb
sbb
in
pop
ds
shrb
mov
add
push
cld
lods
ret
dec
jo
sub
loop
and
lds
leave
mov
lds
cmp
cmpsl
fisttps
pop
cli
mov
jo
call
scas
mov
sti
sbb
mov
jecxz
imul
push
dec
jmp
aam
sahf
test
lret
xchg
testl
out
add
sub
adc
sub
loope
cmp
add
test
dec
fcmovb
in
inc
dec
mov
lds
jae
stos
hlt
inc
shll
int3
in
clc
loope
rcr
adc
jge
and
jecxz
shll
nop
outsl
sub
inc
clc
or
popa
outsl
jb
test
fcos
ljmp
add
and
push
cmp
pop
scas
ret
mov
test
mov
es
test
mov
xchg
mov
inc
sbb
mov
sbb
in
and
mov
dec
or
cli
jmp
out
std
clc
xor
pop
mov
mov
and
or
adc
xor
add
jle
mov
mov
pusha
outsb
enter
mov
icebp
cltd
jns
pushl
shll
in
mov
ss
sbb
and
add
test
add
sub
pop
or
loop,pn
push
and
jge
aam
mull
test
lret
pop
mov
push
jl
and
sub
out
sbb
xchg
push
push
lret
jb
sbb
adc
sub
mov
jecxz
ret
cmpsb
shrl
test
pop
lret
inc
inc
sbb
stos
sbb
loop
les
xor
cmp
inc
xchg
sub
sub
popf
rcl
cmp
repz
aad
lods
orl
idiv
cmc
int
pop
sub
cmp
adc
mov
xor
shll
and
popl
rclb
jno
aas
lds
jmp
lret
fwait
push
enter
test
test
sbb
fucomp
dec
cli
cltd
test
aam
es
in
dec
mov
cmpsb
pop
pop
popa
or
mov
jbe
jns
inc
mov
inc
or
leave
dec
and
rcll
adc
add
cli
cwtl
mov
push
xchg
clc
jnp
pop
mov
sbb
lds
clc
cmp
lret
mov
ja
in
ffreep
and
dec
cld
addl
jle
lret
leave
pop
cmp
and
fnstenv
pop
test
pop
out
fsubs
int
push
popf
lock
add
fldt
jg
int
aam
cmpsl
lret
pop
add
loopne
sti
int3
push
cmp
inc
addr16
ret
or
pop
into
ret
sbb
fsts
inc
data16
or
ljmp
inc
pop
inc
ret
inc
iret
ds
pop
movsl
enter
lret
cmpsl
add
mov
lea
rol
push
mov
push
inc
or
pushf
or
aad
cmc
lahf
adc
cwtl
jp
xor
daa
push
push
and
mov
dec
das
loope
mov
dec
dec
or
mov
and
cmp
add
mov
add
call
cwtl
xchg
mov
sbb
add
into
adc
push
lds
inc
or
mov
or
sub
or
xor
fadd
push
leave
dec
shlb
into
insb
leave
fcmovnbe
icebp
and
test
aam
ss
mov
lret
test
adc
mov
and
and
dec
iret
ds
adc
lock
lea
loop
lods
pop
clc
sub
dec
jne
insb
dec
cmp
jp
and
iret
sahf
stos
je
mov
sbb
enter
daa
pop
pop
add
fistpll
mov
and
das
mov
xchg
jmp
imulb
xor
cli
movsb
mov
das
frstor
sbb
outsl
mov
dec
test
xor
enter
ja
rorb
sub
fdiv
cmp
inc
adc
jnp
shrb
aam
pop
aas
pop
cmp
push
mov
jno
daa
add
or
inc
adc
clc
insb
rcll
inc
sub
into
jecxz
mov
into
pop
mov
loope
mov
test
dec
push
cwtl
and
add
mov
insb
imul
jae
mov
mov
jbe
movb
xchg
btc
and
or
stos
in
jle
in
jmp
fnstcw
and
xchg
or
insl
mov
stos
xchg
mov
lds
iret
ss
pop
push
add
lds
aam
enter
icebp
pop
or
nop
xor
inc
js
mov
aam
fiadds
xchg
inc
pop
mov
dec
sbb
scas
ja
test
mov
sbb
arpl
xchg
xchg
xchg
stos
pop
rol
andl
xchg
les
jne
adc
or
cmp
and
jg
in
mov
xor
les
iret
ret
mov
jno
and
movnti
pop
sti
and
and
jge
enter
loope
pop
xor
cmp
mov
mov
loopne
aaa
jle
push
xlat
pop
mov
lods
les
cmc
enter
dec
or
push
sub
jmp
sbb
jmp
ret
and
cmp
in
jmp
ja
test
ljmp
cltd
repz
or
fcmovnbe
sub
add
mov
jg
push
sbb
jecxz
jnp
ja,pt
addr16
inc
int3
push
pop
pop
mov
pop
fsubrs
shll
test
cld
test
pusha
mov
push
test
and
jmp
jne
clc
sbb
daa
nop
or
das
in
testl
outsl
adc
jge
mov
cmp
lds
jbe
into
das
push
mov
push
jle
jno
mov
test
ficompl
add
fdivp
or
add
shl
enter
mulb
push
int
cmp
aam
push
sbb
fisubrl
cvtps2pi
dec
aas
loope
push
inc
mov
xor
aas
in
mov
fcoms
and
push
out
and
sub
cmp
jb
jnp
add
dec
notl
out
fstps
clc
lea
push
sub
outsb
mov
leave
fldcw
sub
sbb
xlat
lahf
push
sub
add
and
imul
gs
data16
enter
std
into
dec
jnp
push
rol
pop
lds
jecxz
push
and
orl
out
xchg
sbb
jbe
jle
sbb
fiadds
mov
mov
sbb
test
xchg
push
int3
push
incl
mov
sub
mov
es
pop
negl
and
push
jbe
rcll
ljmp
leave
nop
push
cmp
jo
ljmp
lcall
imul
outsb
daa
nop
cmpl
and
pop
sub
inc
lock
mov
dec
sub
sbb
stos
adc
mov
hlt
push
jae,pt
test
outsb
push
xor
mov
div
mov
dec
cmpsl
and
leave
mov
add
adcb
mov
lret
add
sub
pop
shlb
pop
fistps
roll
es
and
in
js
or
mov
cld
repnz
jnp
ss
xchg
outsb
repz
es
lret
aam
fidivrs
dec
loopne
dec
jb
jbe
inc
push
dec
adc
xor
mov
sub
stos
aas
test
cmp
icebp
shlb
test
add
xor
lea
mov
fmuls
mov
leave
adc
loope
mull
fdivrl
clc
dec
icebp
mov
mov
mov
or
xchg
sub
mov
or
iret
adc
mov
jp
mov
mov
mov
add
or
fisubrs
inc
insl
jp
les
js,pn
mov
jbe
int3
divl
adc
and
shll
ret
add
cmp
in
or
stc
int3
and
pushf
jmp
push
inc
jecxz
lret
jae
and
test
push
sub
jnp
ljmp
or
mov
jmp
dec
cmc
cmp
int3
dec
ret
mov
xlat
cmp
jae
in
xchg
mov
jmp
dec
dec
fidivs
hlt
shrl
test
lret
lock
nop
aad
cld
shrb
dec
cmpsb
ret
cld
pop
mov
jmp
loope
dec
leave
call
mov
and
push
mov
jns
and
lods
mov
test
jae
mov
pop
les
jne
and
lods
rorb
repz
jns
orb
inc
cmpsl
into
aad
clc
lock
mov
sub
lock
mov
out
push
jp
fildll
pop
jns
xchg
xchg
pop
sbbl
daa
stc
or
int
add
jb
outsl
div
push
les
cmpsb
pop
in
shll
stos
mov
jecxz
inc
sbb
inc
push
jg
mov
or
or
mov
mov
and
fs
sbb
pop
mov
stos
stc
add
sti
out
xchg
aas
mul
sbb
shl
xchg
shl
lcall
jne
aas
pushf
pop
jo
imul
lcall
jb
icebp
stc
sahf
mov
xor
pop
jge
xchg
push
sub
push
xlat
sti
out
roll
pop
sbb
aas
add
lcall
ret
dec
fnsave
sahf
je
clc
ret
xor
sti
adc
jg
loopne
add
jae
jae
shrl
frstor
nop
jo
inc
pop
js
std
aad
pusha
mov
cmp
hlt
sbb
nop
adc
mov
cmpl
xor
enter
pop
ret
test
incb
sbb
movsl
data16
mov
xor
es
not
inc
add
clc
xorb
xor
ret
push
push
mov
adc
cmpsb
sub
mov
mov
sub
pop
je
and
pop
push
ret
addr16
xor
imul
sub
mul
lods
icebp
jle
adcb
jns
adc
sub
pop
push
sub
push
lret
add
in
bound
xchg
inc
lret
pop
push
int3
push
repnz
icebp
dec
std
mov
mov
xor
cmc
mov
pop
jbe
insb
ret
dec
pop
aam
push
inc
sti
std
outsb
in
iret
lods
movsl
mov
mov
push
push
pop
inc
imul
jne
adc
negl
jb
scas
sub
xchg
pop
jae
test
gs
push
pusha
fincstp
in
aas
push
jmp
xchg
xchg
addr16
shll
shr
jl
cmp
pop
sbb
mov
xor
jae
sbb
inc
push
cld
or
aam
pop
pushf
pop
mov
push
in
add
cli
or
mov
stos
rcll
jecxz
add
push
sbb
fldenv
icebp
add
mov
sbb
push
mov
vfrczss
mov
cmpb
pop
xor
mov
xchg
ss
idivb
outsl
cmp
das
int3
mov
xchg
mov
repz
jo
mov
std
or
mov
rorb
shlb
cmp
aaa
lods
fldt
cmpsb
fmul
sub
sbb
shll
cmp
stos
rcrl
jae
add
movsl
int
mov
lret
and
stos
xchg
jnp
das
cmp
xor
inc
cmp
rcrb
outsl
or
lret
sbb
mov
popl
jge
jno
lock
std
or
cmpsl
xor
test
or
outsl
or
xor
daa
sbb
jbe
xchg
icebp
xchg
ja
into
aam
sbbb
aas
test
sub
vpandn
test
icebp
in
repnz
shlb
test
and
cli
insb
aam
mov
div
mov
icebp
sub
sbb
add
sbb
idiv
xor
lret
loop
aad
inc
pop
rorl
mov
mov
pop
jne
or
in
loope
popf
push
add
and
jo
inc
out
int
popf
pop
loop
arpl
mov
cmp
cmp
idivb
loopne
scas
mov
mov
gs
test
imul
jo
mov
mov
mov
push
push
xchg
icebp
cmc
ret
xor
or
cmp
pop
mov
mov
lret
jmp
daa
in
mov
testl
pushf
push
lea
sbb
popa
fsubs
and
or
aaa
or
leave
fadd
clc
push
push
movb
std
inc
cmc
add
pop
leave
sub
jae
jl
mov
mov
mov
xchg
insb
repnz
cmc
mov
ljmp
dec
mov
outsl
jb
aad
dec
pop
cmp
or
insb
mov
add
push
inc
insl
cmc
sbb
aas
jp
push
jb
mov
mov
jb
cmpsl
sbb
jne
push
add
push
nop
int3
repz
and
add
negl
adc
clc
cmpsb
xor
mov
cmp
xor
sub
adc
sub
lock
ds
or
shll
sub
test
cmp
jns
inc
lods
cli
sbb
fs
push
xchg
mov
sbb
cli
xor
ret
push
or
je
jb
jmp
in
ret
xor
ret
mov
in
test
cwtl
or
aad
in
roll
push
leave
xor
rolb
int
leave
popa
push
sbb
add
test
stos
sahf
fsub
into
sub
jl
push
add
xor
stos
mov
add
shll
jecxz
dec
jmp
pop
xor
lahf
mov
inc
cli
and
and
ret
fnsave
shlb
aam
cli
mov
es
cmp
scas
inc
insb
cli
seto
sbbl
mov
enter
dec
sub
shll
leave
pop
pop
xchg
leave
add
fdivs
pop
loope
jns
call
inc
inc
cmpsb
stc
xor
loope
clc
clc
xchg
les
rcrb
fstpl
lcall
das
in
sub
dec
test
push
dec
imul
inc
arpl
add
mov
int
push
stos
lods
insl
inc
loope
sbb
ljmp
jne
aad
movsl
out
lahf
ret
ret
cmp
mov
pusha
mov
pop
pop
mov
mov
int
inc
add
mov
aam
add
leave
outsl
pop
mov
mov
mov
jl
xchg
mov
cmp
sbbb
out
test
mov
push
lret
xchg
xchg
xlat
mov
imul
aam
dec
comiss
aam
push
leave
sbb
pop
sub
xor
idiv
adc
orb
dec
sub
sbb
aam
enter
adc
pop
push
shr
jae
jno
and
addr16
outsb
and
pop
mov
xchg
add
in
xor
adc
mov
add
aam
movsl
ds
push
div
push
gs
in
decb
sub
test
repz
pushf
adc
cmp
movb
lods
movsl
mov
icebp
cmc
pop
adc
imul
mov
push
adc
popa
add
out
mov
sti
mov
xor
mov
dec
mov
loop
or
push
and
adc
dec
jge
or
scas
dec
dec
aad
test
add
int3
jmp
push
outsb
and
and
push
or
aaa
imul
add
or
adc
or
xor
add
or
negb
add
inc
fistl
sbb
lds
push
imul
jae
out
mov
lock
mov
sbb
pop
pusha
inc
and
mov
lret
nop
in
repz
fwait
xchg
aad
jbe
push
repz
and
repz
out
xchg
ret
pop
addr16
or
mov
xchg
out
aaa
orb
test
xchg
push
shlb
loope
dec
lcall
dec
stos
rolb
insb
xor
lods
mov
xchg
out
xor
movsb
lret
test
fbstp
lock
dec
push
leave
add
enter
cmp
scas
or
int
and
in
dec
into
cmpsl
outsb
inc
sbb
sub
and
mov
idiv
xchg
sub
inc
jge
push
pop
push
or
ljmp
fbstp
fldt
cmpsl
ss
mov
mov
je
cmc
subl
mov
dec
sbb
icebp
mov
or
out
test
cmc
fnsave
movsl
inc
ds
inc
imul
pusha
test
sub
stc
test
popf
inc
cwtl
fildl
mov
xor
repnz
add
lret
cmp
pop
fisttpl
push
pop
or
mov
mov
mov
push
add
add
mov
aaa
les
adc
mov
pop
cmp
ror
inc
je
iret
and
gs
mov
test
les
test
dec
ljmp
leave
repz
and
rorb
aad
add
and
lret
inc
stc
mov
dec
jmp
mov
jl
gs
jmp
popf
leave
arpl
loop
das
pop
leave
sbb
add
mov
shlb
mov
dec
push
inc
and
rcrb
out
pop
shlb
out
mov
lret
mov
inc
or
xorl
mov
mov
data16
dec
roll
mov
and
ja
leave
shrl
das
lret
icebp
mov
mov
xlat
pop
loope
out
sti
jae
dec
lahf
xchg
popf
rcrl
mov
hlt
cli
push
loope
mov
lds
cmp
fcoms
mov
push
lock
lock
ror
rorb
push
fmull
nop
cmc
shr
mov
stc
xchg
pop
mov
rcl
mov
mov
add
int3
aas
leave
dec
add
jns
mov
stos
lock
xor
loopne
push
dec
mov
pop
adc
and
cli
fisubrs
movl
cmpsl
mov
inc
mov
mov
mov
xor
scas
pop
and
loop
add
jg
dec
rdtsc
cmp
and
mov
shrl
fnstcw
pop
mov
cmp
push
jecxz,pt
fmull
inc
jmp
rorb
mov
mov
adcw
jp
inc
sbb
ret
sub
test
leave
ret
rorb
into
outsb
mov
mov
popf
inc
mov
pmaxsw
jl
out
rorb
inc
loop
adc
enter
test
mov
fstpt
xor
pop
xor
ja
sub
test
inc
test
dec
imul
stos
push
call
mov
mov
sub
test
jne
xor
mov
mov
loop
cmpsb
sbbb
iret
lock
movsl
pop
rcrl
push
stc
mov
jne
push
cmp
shrl
adc
dec
test
int
fsts
in
jb
sarl
shl
icebp
test
leave
popa
sub
adc
repz
clc
or
push
mov
mov
xlat
cli
jbe
pop
andl
enter
or
fsts
cmp
xor
orb
jmp
imul
xchg
cltd
jns
push
popf
repz
or
outsl
rcr
shll
inc
rclb
fmull
pop
mov
dec
sahf
loopne
bound
lock
mov
and
in
test
jo
psubw
mov
mov
lds
rclb
mov
xchg
cs
push
movsb
jmp
shll
shll
xchg
xlat
jmp
and
jne
pop
int3
mov
repz
xchg
enter
cwtl
mov
lret
inc
fchs
or
mov
dec
mov
js
dec
in
hlt
cltd
mov
call
xlat
daa
mov
icebp
es
ljmp
into
xor
inc
and
lret
xor
es
cwtl
mov
negb
push
cmc
cmp
mov
cli
mov
mov
dec
int
aad
stos
fistl
jge
inc
lret
push
rolb
jb
add
mov
ljmp
es
aad
jb
ret
add
movsb
ja
aas
cmp
and
or
pop
pop
mov
and
enter
add
push
mov
stc
add
sbb
rclb
mov
jmp
popa
les
cmpsb
jmp
movsb
jne
push
mov
jmp
adc
cmp
dec
ljmp
push
popf
call
shrb
in
cmp
pop
adc
je
ret
cli
jae
and
add
fdivrs
inc
aam
incl
jmp
pop
sbb
adc
add
dec
pop
xlat
ret
xlat
push
push
fiaddl
adc
cwtl
push
lret
aad
pop
int3
mov
mov
aam
cmc
push
and
inc
xor
daa
cmp
out
aas
movl
dec
insb
sub
les
inc
lret
fucom
ret
repz
cmc
mov
mov
mov
cltd
aad
int
pop
jle
aad
mov
or
imul
stos
push
inc
das
cmpsb
out
push
lds
jmp
add
repnz
mov
jle
iret
loope
dec
mov
aas
das
ret
mov
sbb
test
stos
roll
rol
xchg
dec
dec
mov
dec
hlt
mov
repz
push
add
mov
out
stos
iret
inc
cmpsl
hlt
repnz
sbb
enter
orb
ljmp
int
testl
ffreep
push
mov
xchg
add
insb
dec
and
fmulp
in
mov
pop
lea
jp
ss
aaa
dec
ljmp
jmp
xor
repz
scas
lea
out
cmp
push
lock
mov
out
mov
jb
lea
ret
jnp
jnp
and
ret
xor
mov
or
lret
sbb
lds
lock
fldcw
push
lahf
adc
adc
sahf
jecxz
mov
xchg
sub
adc
rol
sub
add
enter
fs
nop
xor
test
dec
cld
mov
stos
in
cmp
push
pop
dec
mov
sub
and
je
sbb
fdivp
and
pop
jns
test
sub
adc
ret
in
jecxz
stos
data16
dec
ja
negl
clc
stos
xor
mov
insl
cmp
cli
scas
es
mov
adc
mov
add
add
aaa
test
repz
push
ljmp
mov
stos
decl
cmp
mov
xlat
nop
jmp
mov
sbb
xor
lahf
rcrl
or
aaa
push
mov
cmc
mov
inc
adcb
hlt
gs
loop
add
cmc
mov
rcll
pop
into
arpl
mov
lds
push
or
sub
sub
pop
call
inc
add
js
ror
in
adc
mov
cmpsl
pop
lock
inc
shll
imul
dec
out
out
imul
sti
and
inc
pop
es
pop
push
dec
push
cmpsl
pop
ffree
sbb
filds
push
fsubl
add
cmc
add
sbb
cmp
repz
inc
sahf
or
repnz
out
test
data16
dec
dec
jo
nop
xor
dec
or
sarl
push
pop
add
scas
xor
fstl
cmp
seto
sti
pop
cmp
xchg
adc
push
in
int
mov
ret
adc
fldl2e
int
sbbl
lds
out
mov
mov
add
mov
or
sub
lret
xchg
mov
jno
mov
adc
xor
and
dec
and
arpl
stos
xor
mov
insl
and
jl
mov
int
adc
gs
jo
xchg
cmp
in
jae
mov
and
dec
lock
mov
mov
scas
cli
sahf
daa
repnz
mov
mov
and
jle
sub
mov
shrl
pop
out
rorb
stos
cld
in
es
add
imul
mov
adc
pop
fstps
aas
cmpsl
cmpsb
dec
cli
shll
sub
jae
lds
mov
xchg
fnstsw
mov
and
cmp
cmpb
sub
inc
int
sarl
add
sbb
pop
int3
adc
cmp
stos
repz
adc
and
push
sub
lods
lds
or
daa
aaa
sub
movsb
sti
lret
test
or
mov
inc
pop
pop
in
ret
aam
lock
jne
xchg
mov
jmp
out
push
adc
int3
lcall
jp
push
outsb
dec
pop
push
sbb
mov
je
and
fs
dec
adc
cmp
repz
push
or
dec
and
lock
xor
dec
sbb
fldcw
pusha
test
jns
or
and
call
leave
add
lods
add
fs
lock
xor
ret
rcr
or
loopne
shll
movsl
and
inc
movsb
or
les
clc
scas
insb
push
aam
test
sub
sarl
stos
xchg
or
decl
dec
scas
shrl
jl
in
cmp
push
push
stos
pop
out
popf
and
dec
mov
ds
test
mov
loop
cli
jb
pop
into
and
popf
push
imul
loopne
mov
stos
lret
nop
mov
pop
mov
dec
sbb
subb
sbb
sahf
sub
mov
insl
pusha
and
xor
push
loop
mov
rorl
es
xchg
into
cmp
ds
mov
ss
lock
pop
in
movsl
movsl
lret
jae
enter
push
inc
cs
cmp
dec
rcr
mov
mov
faddl
xchg
inc
les
adc
call
sbb
and
xchg
pusha
lods
hlt
inc
clc
sti
adcl
arpl
rcrl
jmp
mov
jne
lret
inc
xchg
call
sbb
add
in
fadds
sbbb
aad
xor
out
add
mov
or
test
mov
dec
int3
and
dec
nop
jnp
xorb
push
enter
repnz
push
sti
daa
jns
dec
mov
ljmp
loope
rorb
and
and
sub
imul
aam
inc
inc
stos
xchg
aam
rolb
inc
mov
sbb
bnd
pushf
pushf
xchg
mov
bnd
jg
cmp
daa
aaa
push
imul
or
xchg
andl
aad
add
mov
fimull
push
push
ret
lds
lds
push
sbb
lret
add
call
push
adc
sarl
ljmp
call
add
push
aam
and
aad
fldcw
in
leave
sbb
lret
loope
adc
dec
pusha
repnz
jns
mov
shr
icebp
push
fidivs
scas
rcrb
mov
dec
sub
mov
cmpsb
jae
xchg
jmp
mov
fwait
pusha
loopne
pop
pop
or
out
test
sub
movsb
sub
fstpt
adc
push
inc
xor
jo
xchg
cmc
mov
fdivrs
mov
cld
and
lahf
mov
pop
rcrl
out
jle
out
jecxz
adc
leave
inc
push
lret
sbb
sub
jl
sub
out
stc
les
aas
inc
mov
ljmp
jne
mov
aam
roll
add
test
in
out
pop
fstl
sub
and
insl
and
cmc
dec
fs
dec
mov
pop
sahf
lds
ret
sbb
xor
divb
mov
sbb
repz
ds
fmul
mov
jg
xor
leave
loopne
xchg
cli
enter
aad
sarb
fisubl
and
into
addr16
xor
repnz
push
push
inc
ljmp
mov
das
dec
iret
fmull
xor
icebp
out
mov
cmp
imulb
mov
sbb
fistpll
ret
xor
mov
div
cli
dec
mov
mov
stos
dec
ljmp
mov
jne
imul
mov
shll
xchg
pop
leave
mov
push
jmp
push
pop
xor
notb
roll
inc
in
ljmp
outsl
pusha
pop
cs
inc
sbb
loopne
shl
push
mov
in
lods
mov
mov
es
inc
sbb
lret
imul
fadds
adc
xor
push
dec
insl
lea
inc
push
repnz
pop
sbbb
push
dec
push
mov
bound
or
mov
jmp
int
jg
mov
jno
idivl
call
jne
add
int3
sarb
lret
adc
push
jnp
fstl
jmp
cmp
je
jns
rorb
cmc
adc
pop
dec
cmp
fwait
and
insb
aad
clc
push
andb
ljmp
and
and
test
sbb
jo
mov
sub
stos
es
or
mov
fstcw
shll
cmp
dec
sar
test
mov
int3
test
decb
dec
mov
mov
pop
sbb
xor
subb
xor
add
pop
mov
out
lds
xor
and
mov
adc
insl
inc
or
xor
adc
repnz
inc
xchg
or
imul
shll
jbe
dec
rolb
pushf
jnp
les
dec
fsqrt
jecxz
cmp
inc
enter
in
test
adc
insb
adc
paddusw
aam
ja
aam
enter
test
mov
pusha
outsb
mov
dec
dec
or
sbb
sarl
gs
mov
test
ret
cwtl
jl
fwait
xchg
add
inc
and
and
sbb
je
inc
andb
jge
lahf
out
push
test
mov
xor
inc
fld
push
pop
mov
sbb
std
cli
je
jmp
in
std
mov
mov
enter
roll
bound
roll
leave
mov
movsl
sub
and
lods
jge
pop
pushf
insl
adc
hlt
aad
aas
paddsb
js
push
or
fldl
mov
sbb
and
push
xchg
jge
inc
aam
inc
daa
add
out
repz
cmpsb
pop
push
sub
and
xchg
scas
dec
inc
pcmpeqw
ret
cmp
dec
dec
sub
jmp
pop
cmpsb
cmp
mov
push
mov
lds
add
add
into
clc
mov
imulb
lret
xchg
xchg
test
and
addr16
or
adc
mov
xor
stos
mov
test
add
push
mov
sbb
lds
aas
enter
mov
jne
cmpxchg
dec
icebp
xchg
add
shl
lock
add
test
repnz
aad
lods
out
pushf
cmc
fdiv
mov
pop
lret
mov
pop
pop
test
cld
push
test
cltd
roll
orl
add
in
dec
mov
bound
inc
mov
mov
test
push
mov
inc
inc
mov
aas
icebp
cmpsb
call
pop
push
xchg
mov
aad
xor
mov
add
stos
ja
ljmp
into
mov
add
iret
pop
push
xor
leave
xor
add
je
push
stos
dec
adc
push
mov
fucom
les
mov
jmp
xchg
into
lret
xchg
ljmp
movd
jmp
movsl
sub
sub
fstl
pusha
loopne
clc
lds
inc
pop
rcll
or
loop
add
sub
les
dec
inc
cmp
inc
hlt
shlb
fnstcw
mov
mov
mov
mov
leave
cmc
loope
es
pop
shrl
cli
je
inc
shll
sarl
mov
enter
push
ljmp
dec
fistpl
jnp
add
xor
neg
sarl
jne
pop
add
fwait
lret
sub
or
sub
dec
sti
imul
mov
cmpsl
or
pop
mov
jmp
orb
sub
es
xchg
jle
jge
xor
sub
nop
jns
mov
mov
inc
push
sub
mov
jl
je
dec
jecxz
imul
pop
mov
test
xchg
aam
xor
jne
loope
shlb
stc
aam
leave
pop
fcompl
push
cwtl
and
dec
sub
hlt
xchg
aam
inc
push
lret
mov
push
test
jge,pt
int3
push
ds
pop
int
dec
popf
leave
ljmp
stos
pop
cmpsl
sbb
gs
cltd
ljmp
ret
pushf
jne
pop
xlat
add
xor
mov
jecxz
loopne
stos
cltd
push
inc
lea
ljmp
aad
sub
int3
gs
arpl
xchg
mov
fsubrs
leave
rorb
sbb
mov
negb
aam
mov
mov
data16
addr16
int3
mull
insl
xor
jae
and
jnp
sbb
rclb
test
in
leave
shlb
xor
hlt
test
sbb
and
or
or
cmp
sahf
xchg
test
pop
iret
dec
cltd
rorl
add
mov
test
notl
mov
xchg
test
sbb
pop
pop
inc
aad
jne
lret
aas
enter
fwait
push
idivl
ljmp
push
loop
cld
jne
add
jb
data16
push
lods
mov
mov
jb
inc
jnp
mov
or
or
mov
adc
lret
mov
fsubrl
mov
mov
cmp
in
test
enter
in
pop
aam
jns
xchg
sbb
xor
sbb
lcall
push
xchg
push
sub
daa
xor
lods
mov
jp
dec
cmpsl
push
cmp
add
xor
cmp
mov
outsl
dec
cmc
cmpb
dec
ss
xchg
pop
out
repz
jmp
pop
mov
out
cltd
pusha
add
test
xchg
cld
jge
pop
mov
rol
leave
dec
in
lahf
pop
xchg
mov
and
xor
test
xchg
and
aam
xlat
ja
jne
mov
movsl
inc
pop
lds
or
or
test
xchg
fsubl
mov
pop
in
out
mov
jmp
fs
loope
lods
and
sub
add
xor
aam
jo
mov
iret
stos
mov
decl
jle
xchg
jmp
test
in
in
pop
cwtl
gs
cmp
push
addb
loope
faddl
cmc
repnz
ss
push
sbb
test
gs
mov
push
cmp
shlb
hlt
insl
in
cmpsb
cmc
lret
pop
push
ret
fsubrs
aas
lcall
fnstenv
in
out
sbb
lods
clc
or
aas
mov
shlb
or
mov
dec
cli
jno
call
and
fnstcw
add
xor
fnstenv
daa
test
inc
es
enter
pop
add
test
and
cmp
jne
or
outsl
testb
xchg
adc
dec
fidivrs
dec
pop
add
dec
jl
add
jbe
int3
pop
shrb
and
out
push
inc
mov
mov
or
stc
mov
leave
fstp
iret
mov
sbb
mov
in
inc
mov
jmp
lret
fdivs
mov
enter
mov
test
push
movsl
mov
std
lods
dec
or
jbe
mov
or
mov
std
scas
jne
pop
insb
lret
enter
daa
mov
sti
and
insl
std
icebp
imull
test
lret
and
leave
mov
in
jne
icebp
fnsave
ja
jle
xor
lods
lea
jecxz
ficoms
ficoms
aad
test
inc
add
in
cltd
or
sahf
adcl
int3
adc
mov
ret
mov
out
push
push
lock
add
sbb
in
sub
sub
adc
lea
inc
popf
push
aaa
incl
scas
and
and
push
mov
gs
inc
push
shll
nop
int
ret
iret
bound
repz
sub
call
adc
mov
mov
dec
adc
mov
cltd
push
movsb
sub
sbb
xor
insb
pop
mov
nop
mov
adc
sbb
dec
jns
stc
cwtl
rcr
or
shlb
or
leave
xchg
inc
enter
hlt
xor
xchg
outsb
cmp
stc
leave
stos
mov
lret
lret
hlt
cmpsl
jns
mov
in
or
mov
cmp
xchg
repz
mov
mov
stc
adc
ret
jp
mov
dec
jno
arpl
and
mov
ja
add
rorb
dec
push
cmpsb
lds
rolb
lret
call
jbe
jl
pop
xchg
int
jecxz
outsb
xlat
test
jmp
jecxz
sar
jae
lcall
mov
js
or
xor
push
lret
cltd
fldt
or
rcl
mov
in
dec
aad
jmp
cmc
push
mov
js
mov
xchg
mov
mov
movl
repnz
sbb
arpl
jo
push
cltd
out
test
push
jns
outsl
incb
roll
mov
rcll
and
cmp
dec
test
or
cmp
sbb
mov
rorl
test
aam
adc
cmc
in
inc
stos
cmp
mov
scas
nop
sbb
adc
cmp
cwtl
or
stc
arpl
pop
cli
mov
inc
popa
cmp
cli
jge
into
cmp
dec
adcl
or
cmc
aas
xor
dec
aad
sbb
add
fwait
mov
sar
pop
ret
xchg
shrl
aam
in
xor
mov
hlt
pusha
sub
fbstp
or
jecxz
mov
jp
mov
stc
adc
pop
sub
mov
inc
mov
or
mov
pusha
sar
rorl
mov
add
loopne
mov
adc
jae
stos
push
ss
pop
pop
xor
xor
pop
sarb
mov
popa
push
push
out
dec
lret
insb
and
ljmp
lea
jg
dec
sbb
jl
jno
into
js
push
mov
cli
clc
xor
and
imul
insl
lret
inc
jo
cmpsl
call
mov
pop
mov
push
mov
ret
sbb
and
int
xor
xchg
orl
add
adc
aad
jmp
mov
leave
or
roll
inc
jne
rorl
push
jns
shr
dec
ror
lds
sub
fildl
jp
ja
or
jle
or
sarb
xrelease
in
jns
cmc
xor
mov
adc
out
movsb
int
xor
cltd
bound
mov
out
or
mov
aad
mov
ja
leave
sbb
and
jno
jl
aaa
enter
test
xchg
dec
rcl
add
test
push
mov
jecxz
mov
push
psubusw
clc
int
into
rcl
xchg
aad
stc
dec
xor
cmp
shrb
out
into
adc
or
lret
loope
mov
pop
xchg
mov
movsb
scas
dec
in
pop
mov
cmp
jecxz
shlb
cmp
mov
loop
into
sub
push
add
lds
jmp
imul
sar
jnp
sahf
lret
jl
lret
jb
lods
scas
adc
mov
inc
ja
inc
jns
and
jl
scas
xor
dec
dec
ret
mov
mov
push
sub
push
push
outsb
leave
add
mov
bound
xchg
lahf
addb
push
mov
lret
xor
test
dec
ret
nop
mov
dec
in
lahf
in
inc
sbb
xor
adc
clc
push
inc
push
mov
xchg
xchg
loope
rep
sar
in
and
mov
mov
mov
enter
push
shrb
test
add
pop
mov
insl
mov
lret
outsb
xor
addl
or
in
mov
mov
leave
mov
lret
daa
jnp
push
test
in
mov
pop
or
cmp
mov
push
sbb
push
inc
or
iret
outsb
mov
insb
cmp
or
je
jno
jbe
lods
pop
xchg
add
dec
mov
aas
fsubrl
add
mov
fldl
lds
pop
xor
insb
outsl
add
xor
test
sti
jmp
ret
pop
dec
das
mov
aas
leave
cli
mov
cmpsl
mov
mov
push
int
scas
aas
xor
jno
cmpsl
mov
ret
mov
inc
test
out
adc
mov
mov
xchg
jo
sub
loop
aaa
xchg
stos
psrlq
inc
cltd
cmp
loop
cs
neg
mov
add
mov
cmpsl
rorb
test
inc
fiaddl
push
aas
in
movsl
mov
and
loopne
mov
mov
cld
xor
jb
nop
jge
xchg
inc
rorl
arpl
dec
pop
shll
lock
jl
hlt
push
cmpsl
dec
xor
pop
dec
lds
add
cmp
mov
jb
mov
push
mov
mov
nop
loopne
jae
sbb
push
mov
cli
pop
popf
cmp
mov
data16
shll
aad
or
pushf
in
div
cwtl
mov
mov
dec
fwait
sbb
fwait
lock
cli
arpl
dec
push
rorl
mov
div
arpl
test
and
stos
repz
das
jecxz
lret
nop
mov
cld
xor
aas
xor
sub
lds
sbb
test
enter
cld
out
mov
or
add
or
lock
out
stos
orb
mov
mov
sahf
sbb
arpl
dec
add
mov
mov
mov
aad
push
sbb
mov
cmp
jmp
add
fdivrp
cmpsb
mov
add
cs
push
xchg
dec
test
incb
xchg
stos
dec
add
push
scas
sub
arpl
sub
push
fwait
hlt
push
mov
clc
cmc
std
mov
aam
jns
sbb
ds
inc
jns
mov
clc
dec
ds
pop
popf
jnp
iret
iret
or
push
sti
je
fst
mov
cmpsl
clc
inc
leave
jg
aad
xchg
push
loop
jmp
pop
mov
push
pop
cmp
orl
push
push
test
push
xchg
fs
in
mov
shl
stos
fists
xor
xchg
xlat
pop
ss
rol
lea
adc
dec
jo
and
inc
mov
xorb
int3
sub
es
fnstsw
sub
enter
sub
aad
mov
shl
outsb
jnp
mov
xor
dec
out
loope
inc
loop
lods
push
int3
cli
and
xor
out
xchg
movsl
add
lcall
jle
bound
outsl
sbb
rcrl
jmp
fiaddl
ret
cli
inc
lods
cli
and
push
out
push
xor
clc
inc
bound
flds
mov
inc
lcall
out
ror
mov
jle
pop
sbb
in
xorb
or
and
add
clc
test
mov
push
pop
enter
jle
add
lahf
and
inc
divb
cld
sub
in
inc
jmp
enter
ljmp
jle
dec
into
stos
arpl
les
adcb
in
cmp
push
or
push
std
pop
orl
push
loop
cwtl
cmp
cmp
aas
enter
aaa
aam
xchg
jnp
fidivrl
jle
jle
dec
cltd
pop
ret
dec
xchg
sub
jmp
fwait
dec
mov
in
jle
loopne
in
lea
mov
sub
jp
inc
mov
cmp
inc
imul
iret
arpl
popa
push
shlb
leave
insl
adc
mov
pop
mov
jge
xor
lds
sbb
sbb
jle
pusha
sbb
jne
push
dec
lock
xor
roll
popa
mov
inc
or
push
or
pop
sub
mov
cmp
lds
ret
jns
rorb
lret
frstor
dec
sti
xchg
dec
lahf
call
adc
cmpsb
mov
mov
hlt
imul
push
rcl
push
add
push
lret
shlb
loopne
mov
rcl
pop
shl
popa
ds
xorl
repnz
arpl
adc
inc
push
dec
xchg
mov
xchg
adc
ud2
cmp
jmp
jb
cmp
adc
call
pop
test
lret
rol
inc
cmc
leave
add
fldt
dec
pop
jmp
addl
jnp
mov
sub
cmp
jnp
inc
lret
test
jae
insl
inc
rclb
daa
cmp
sub
aas
fwait
in
and
cmpsb
push
cmc
idivl
insb
rol
stc
cmc
lea
sbb
sub
push
rcll
jge
je
sbb
jne
repnz
xor
pop
js
sbb
mov
and
repnz
sub
xchg
outsl
adc
push
jns
sub
cmp
rcll
lods
xor
leave
ja
adc
mov
cmc
test
sub
sub
xor
cmp
and
into
jle
mov
xchg
out
test
mov
mov
and
dec
repnz
mov
jo
or
mov
ljmp
dec
push
or
jecxz
mov
dec
pushf
or
inc
sahf
jg
icebp
add
sbb
lret
pop
jno
cmp
mov
cmpsl
fstpl
gs
mov
pop
into
addr16
adcb
cmpsb
orl
lret
mov
xchg
pop
dec
add
add
ret
test
add
push
pop
cmp
add
stos
sub
xchg
ds
jo
jp
cmc
jbe
lds
movsb
sub
pop
jle
cld
mov
inc
orb
push
mov
mov
sub
dec
or
add
xchg
xchg
xor
in
rorl
mul
mov
adc
clc
xchg
ret
sbb
push
fs
aad
jae
leave
mov
dec
pop
sub
out
ss
mov
pop
je
rcll
int
daa
dec
add
inc
js
shlb
subb
sub
call
lea
lods
imulb
sub
sub
aas
xchg
push
or
lea
dec
cmp
rorb
dec
xchg
add
cmc
scas
inc
mov
jbe
leave
jge
xchg
inc
mov
and
aas
xchg
shr
pusha
popf
sbb
xchg
or
popf
clc
scas
shlb
daa
add
in
icebp
and
sub
adc
rcr
mov
sub
test
push
adc
push
stc
inc
out
add
xor
shrl
and
dec
lret
dec
js
call
sub
imul
hlt
xchg
sarb
and
jecxz
leave
mov
xchg
fxch
cmpsb
scas
rcr
popa
shl
dec
mov
jae
add
mov
add
iret
test
adc
scas
sarl
out
icebp
test
sbb
pop
or
and
lds
and
ljmp
imul
push
inc
pop
cmp
insl
leave
int
sub
mov
add
xchg
int
icebp
jnp
mov
daa
push
pop
fmuls
xchg
or
sub
out
popa
xchg
adc
xor
jl
loope
mov
fisttps
repz
pop
sbb
loopne
mov
aaa
les
jecxz
push
mov
xchg
mov
sahf
outsb
imull
enter
stos
mov
or
cmp
shll
dec
pop
out
and
dec
sbb
mov
outsb
enter
sti
xor
fnstenv
xor
push
push
xor
sbb
sub
add
loopne
push
fcoms
adc
push
sbbl
dec
fidivs
cmp
cmp
mov
add
sbb
rol
or
stos
cwtl
bound
cltd
and
pop
sbb
test
aam
popf
and
lahf
push
leave
add
loope
mov
sub
inc
subl
outsl
jl
imul
jl
mov
push
mov
enter
cwtl
nop
loop
xchg
je
jnp
inc
cmpsl
adc
sub
and
mov
xlat
and
ret
int3
loop
mov
imull
les
fadd
cmp
out
insb
mov
and
fbstp
mov
sbb
les
inc
ret
push
xor
and
push
stc
xlat
xor
orb
and
imul
orl
mov
jo
leave
mov
dec
aam
add
std
mov
lds
fidivl
ljmp
rcll
int
pop
sub
or
fsubs
jecxz
icebp
out
sub
decb
bound
test
push
xor
sub
mov
and
mov
add
add
adc
pop
adc
mov
push
into
inc
push
icebp
shrl
mov
loope
hlt
lods
out
mov
push
dec
mov
adc
inc
sbb
and
cli
jmp
mov
movsl
test
push
lods
mov
jb
cli
push
mov
or
int3
fcomps
push
ds
test
aam
leave
sub
stc
mov
mov
xor
pop
adc
and
enter
out
and
sbb
mov
push
vpsrad
in
add
outsl
inc
mov
outsl
lcall
jo
xor
push
push
cmpsb
sub
lods
mov
dec
jp
jae
add
fnstsw
test
cmc
dec
in
int3
and
add
notb
adc
fnstenv
push
push
rcrl
mov
inc
mov
adcl
push
jnp
lds
les
cli
ret
push
sbb
rclb
add
pop
mov
aaa
xor
int3
loop
push
mov
pop
ss
dec
leave
add
add
cmpsb
or
mov
xor
push
add
adc
nop
sub
pop
cmpsb
push
idivl
sarl
push
cmc
xor
sti
or
push
leave
jle
movsb
jl
mov
out
sub
mov
loop
cmp
les
and
test
xor
ss
mov
mov
jmp
sti
popf
and
pop
roll
popa
sbb
sbb
mov
loopne
cmc
mov
xchg
pop
mov
mov
cltd
or
shr
adc
sarl
sbb
adc
xchg
inc
sbb
mov
aam
push
sub
pop
sub
outsb
dec
push
push
test
cmc
add
dec
std
ljmp
mov
mov
hlt
sarb
js
movsl
jnp
lret
pop
stc
lds
in
sbb
sub
lcall
adc
into
dec
mov
ret
divl
leave
xchg
fmul
ret
or
rol
fadd
ret
fstp
fld
rcr
ret
mov
rol
mov
test
jmp
scas
cmpb
push
jb
test
stos
iret
push
cmc
add
enter
test
scas
out
lock
lret
lds
add
mov
jmp
cltd
mov
jbe
add
and
mov
pushf
inc
cmp
inc
frstor
mov
sbb
ret
rcr
jg
aaa
cmp
ja
mov
std
dec
mov
outsl
add
sub
and
insl
mov
xchg
xor
pop
dec
add
and
into
pusha
aad
inc
jp
pop
mov
cmpsl
fadds
aas
loop
pop
and
inc
lods
mov
stc
adc
leave
cmc
movsl
pop
popa
arpl
jnp
sub
mov
push
and
ljmp
cmc
daa
int3
test
hlt
jmp
out
pop
int3
rorl
pop
add
mov
mov
sbb
dec
sti
mov
shl
in
mov
or
loope
xor
loope
in
mov
jle
imul
or
push
stc
adc
sbb
mov
pop
jno
xchg
add
cmp
xchg
inc
fstps
xor
ss
test
fnstenv
mov
cmc
cmp
repnz
shl
shr
int
mov
add
mov
imul
or
xor
test
push
xor
adc
sub
mov
fs
or
ret
fldenv
mov
dec
fldenv
ficoml
and
lds
jns
mov
fsts
ficompl
out
clc
add
xor
jmp
push
lret
mov
ret
jne
push
xlat
jbe
lock
loopne
aaa
mov
lods
popf
test
mov
add
sahf
pop
subb
in
inc
mov
filds
and
or
dec
inc
repnz
push
jno
pop
lret
mov
xchg
pop
dec
xchg
cmpsl
outsl
dec
cmpsb
stc
cltd
aaa
aas
clc
mov
jns
add
cli
fwait
jge
lret
leave
shll
ror
jne
ficomps
or
mov
inc
shll
push
leave
stos
scas
mov
cmp
mov
lret
pushf
pop
in
push
mov
adc
or
or
inc
sar
ret
ror
data16
or
cmp
enter
cmp
jne
or
jp
mov
insl
pop
in
mov
xor
insl
divl
fistpl
pushl
cmp
fidivrl
shl
add
add
sub
dec
hlt
lcall
sarb
mov
cmpsb
out
mov
push
sarl
dec
int3
mov
mov
fistpll
and
push
in
mov
ds
jne
mov
das
push
and
pop
cmp
pop
push
pop
test
sarl
push
enter
out
inc
cmc
jne
pop
push
lret
stos
call
fsubrl
pushf
das
jge
js
sbb
jmp
cmp
test
xor
sbb
xchg
mov
dec
pop
jge
jae
cmp
mov
test
sbb
dec
aas
adc
in
sti
js
rorb
shrl
jbe
pop
in
dec
adc
int
into
clc
mov
push
and
ret
scas
and
data16
imul
loopne
mov
test
sbb
aad
jecxz
push
add
sub
and
stc
pop
mov
out
mov
xor
fiadds
jp
in
sub
adc
adc
cmp
inc
mov
push
fldt
sbb
sbb
jle
stos
aad
fsubs
and
mov
loopne
push
dec
xchg
mov
hlt
push
sbb
test
insb
add
cmp
mov
leave
jmp
jnp
cmc
lds
loope
call
repnz
pusha
aas
test
push
fstpl
xchg
mov
dec
psrlw
jle
test
and
mov
repz
sbb
leave
jl
sbb
jecxz
and
jge
fdivl
add
outsb
jmp
movsl
repz
movsl
pusha
push
xor
jmp
dec
js
add
cli
push
stos
inc
and
in
dec
rcll
sbb
mov
pop
leave
xor
pop
hlt
out
pop
sub
in
out
test
in
frstor
or
or
dec
or
aas
xchg
fxch
inc
dec
pop
in
outsb
push
fisttpl
xchg
mov
repz
mov
cmp
cli
mov
das
inc
or
xchg
jbe
sbb
punpcklwd
push
adc
cmp
test
popa
jae
xchg
xor
test
dec
cmp
rorl
push
sbb
outsb
and
mov
clc
jno
inc
cld
sub
xchg
outsb
xchg
inc
jne
xchg
aas
inc
dec
inc
cs
lret
jns
dec
dec
int
adc
and
inc
insb
ret
stos
leave
orb
mov
outsb
insb
nop
stos
enter
sahf
xchg
inc
cmp
mov
and
sub
stos
fisubs
ret
mov
jbe
cmpb
rorl
lea
mulb
mov
fisttpll
dec
jbe
mov
xor
out
cmpb
pop
xchg
push
lret
sbb
enter
push
cmp
in
faddl
adc
mov
sub
mov
jns
in
sub
inc
push
pop
and
or
or
dec
sbb
cmp
pop
mov
mov
and
mov
dec
fadds
jp
add
aad
fcompl
xor
mov
sbb
mov
fscale
les
aas
icebp
fildll
std
jmp
cmp
sbb
pop
jg
mov
test
lds
ret
fdivl
cmp
mov
xchg
enter
in
and
lret
es
mov
jae
and
jns
sahf
repz
pop
sub
shl
cmpsl
aam
sub
sbb
jl
dec
enter
aad
scas
gs
mov
xchg
dec
cmp
push
loope
cmpsb
lret
dec
push
sbb
add
cmp
lods
xorl
mov
xor
shl
imul
push
xor
ficompl
cld
push
cmp
and
adc
out
pop
out
jmp
dec
fwait
jo
mov
inc
sub
pop
sub
into
mov
jg
test
push
jmp
cmp
lods
mov
fs
xchg
xlat
cmp
aam
cmp
dec
and
cli
stos
cmp
fwait
es
enter
mov
in
jno
jne
jmp
mul
daa
fidivl
cmp
pusha
pop
outsb
ja
inc
arpl
adc
and
ds
sahf
pop
dec
sbb
inc
shrl
jne
xor
lret
aaa
dec
mov
in
cmpsb
xchg
lock
dec
or
add
pop
loope
or
gs
sub
enter
pshufw
mov
imul
pop
add
loopne
and
xor
sarb
sbb
test
fwait
enter
arpl
or
adc
sarb
daa
mov
loopne
and
dec
lret
sbb
addb
and
fs
fbstp
mov
mov
mov
pop
cli
stos
add
out
pop
xor
jns
inc
imul
jp
bound
stos
icebp
repz
or
mov
adc
mov
clc
out
roll
rclb
repz
mov
hlt
inc
mov
adc
jnp
stos
cwtl
lods
or
adc
out
jmp
adc
sbb
int3
cltd
into
xor
add
xor
xor
inc
cmp
enter
stc
dec
addr16
mov
lret
cmpsl
ss
jbe
repnz
inc
cli
jp
dec
xchg
imul
dec
mov
in
jb
dec
push
out
adc
iret
in
imul
mov
test
loopne
shr
xor
cmp
dec
and
and
addr16
int
mov
test
int
mov
imul
imul
xor
jle
xor
mov
cmp
cmc
sbb
imul
ret
in
jo
cmp
mov
mov
mov
dec
mov
scas
shll
dec
shl
dec
xor
shlb
jb
xor
faddp
das
add
int
shl
pop
lahf
sbb
pop
inc
imul
or
gs
outsb
lret
mov
lods
jl
outsl
cmp
in
jg
clc
inc
andl
shrb
push
push
out
dec
lods
mov
mov
cmc
xlat
jmp
out
xchg
jo
hlt
popf
sub
stc
leave
add
xchg
add
mov
ja
pop
fldl
in
jbe
ljmp
or
xorb
mov
mov
imul
push
stos
loop
mov
jle
mov
loope
sub
cli
cmp
sbb
inc
mov
xchg
xor
roll
add
add
jmp
ret
test
imul
ret
daa
mov
mov
pop
clc
and
jb
jne
sub
in
inc
adc
movsl
aaa
adc
stos
mov
enter
adc
mov
sub
imul
dec
add
movsb
idivb
inc
ljmp
clc
dec
sbb
fistpl
in
scas
sub
call
cmc
pop
xor
stos
shl
mulb
xchg
cmp
pop
xor
clc
sbb
into
dec
sbb
jne
inc
add
hlt
xor
push
enter
test
pmaddwd
insl
movsb
mov
pop
icebp
cmp
push
test
jle
ss
mov
inc
dec
mov
enter
cli
inc
mov
cmp
in
cltd
pop
lea
jmp
jecxz
out
dec
les
int
ret
dec
push
punpcklwd
jns
fwait
push
sub
das
movsb
push
pop
popa
int
repz
sbb
push
adc
mov
pop
cli
mov
out
fisubl
call
test
in
xor
mov
mov
jle
pop
mov
es
or
ret
or
dec
int3
jo
sarb
out
fadd
cwtl
push
fnstcw
adc
push
pop
mov
les
mov
sbb
subl
pop
inc
lea
mov
movsl
push
ret
dec
scas
push
jbe
fnstcw
cmp
fwait
shrb
gs
mov
sti
fdivs
aas
dec
int
inc
mov
ds
aad
mov
stos
or
call
leave
jb
lret
shlb
testb
shll
mov
js
in
add
es
mov
stc
mov
jge
jb
add
movsl
outsl
xor
jno
cltd
cli
pushf
arpl
icebp
fadds
mov
xlat
cmp
add
leave
outsl
xchg
and
mov
lret
cltd
adc
xor
xor
mov
jg
out
dec
pushf
jno
into
adc
xor
dec
dec
or
lcall
out
push
insb
mov
dec
into
mov
ljmp
enter
and
rorl
xchg
add
mov
aas
dec
enter
jle
int
aas
adc
pop
xor
xor
jnp
xchg
addr16
xlat
adc
sbb
adc
cld
xor
xor
into
dec
sub
or
xchg
xor
imul
mov
roll
jae
mov
jbe
cltd
leave
aam
adc
cld
iret
aaa
movsl
dec
mov
insl
flds
jnp
pop
movl
in
mov
and
xor
mov
and
test
imul
pop
xor
insb
sbb
addr16
mov
mov
sub
sti
inc
mov
jo
lods
daa
rorb
cmc
sub
mov
mov
insb
jle
repz
ja
and
pop
lds
sbb
mov
sub
adc
out
lea
sub
sbb
xlat
jmp
pop
pushf
aaa
pop
fidivrs
mov
lret
add
int
jbe
in
pusha
xlat
xchg
pusha
fisttps
mov
test
mov
push
push
leave
shll
dec
popa
aaa
push
out
push
mov
test
mov
int3
aas
into
jns
jb
mov
dec
je
dec
shrb
and
mov
movsb
push
and
test
jae
adc
mov
mov
sub
ffreep
shll
enter
pushf
shll
inc
aaa
enter
scas
test
adc
xchg
nop
bnd
jbe
hlt
inc
and
jb
scas
sbb
mov
shrl
shrl
inc
lahf
adc
cld
out
cmpsl
xchg
rcr
or
lret
push
inc
cld
imul
xor
mov
ss
xor
xor
lock
rcrb
lock
pop
stos
cmc
cwtl
ja
jns
mov
jo
cmp
cmp
movsl
shll
shlb
or
sub
or
fistl
lea
pop
xor
hlt
aas
ficoms
enter
xchg
incl
iret
mov
or
xchg
sub
mov
fstpl
insb
sar
dec
cli
test
lods
into
cmc
outsl
or
clc
jmp
in
scas
mov
sbb
push
subb
push
ja
fld
scas
repz
lods
dec
dec
aas
sahf
add
xor
lret
popa
in
or
rcl
xor
dec
scas
mov
fstps
inc
enter
xchg
xor
jb
push
sbb
add
sub
adc
int
pop
pushf
dec
push
cmp
psubd
mov
dec
and
dec
mov
dec
into
cmp
in
mov
test
aam
bound
repz
aas
cmpsb
fdivs
lret
stos
lea
cmc
jge
loope
mov
enter
dec
lahf
or
inc
movsl
call
dec
mov
push
dec
call
iret
or
jecxz
popa
or
pop
mov
out
mov
test
mov
push
or
inc
lret
insb
jmp
enter
and
mov
sub
add
jae
mov
dec
inc
fwait
inc
jecxz
dec
data16
mov
push
push
ret
xor
ffreep
adc
cmpsl
dec
mov
fstps
and
mov
xchg
stc
mov
loop
cmpsl
or
xchg
push
fidivrs
mov
jmp
mov
insl
mov
test
adc
outsb
dec
lock
sub
xor
mov
ja
add
add
mov
and
repnz
mov
repnz
push
push
push
cmpsb
test
repz
and
inc
sub
jle
mov
sub
jae
clc
and
pop
aaa
in
jge
xchg
stc
and
int
xor
roll
test
jmp
fucomp
xchg
mov
icebp
int3
xchg
iret
cltd
fwait
push
cld
cltd
mov
lock
iret
mov
add
shll
adc
mov
call
testb
push
inc
aaa
add
add
data16
jg
jno
int3
xor
dec
push
aam
mov
pop
pop
push
lret
daa
sub
test
clc
jmp
xlat
xor
mov
iret
cltd
push
aaa
leave
add
enter
repz
icebp
andl
dec
mov
mov
int3
dec
pop
sarl
dec
fidivrl
push
mov
sbb
cmpsl
xor
xchg
inc
or
jg
movsl
xor
add
rclb
and
push
jge
out
fmul
hlt
sbb
pop
pop
adc
lret
dec
nop
cltd
mov
jge
jo
test
pop
ret
push
dec
or
fs
mov
sbb
sbb
xor
dec
sub
test
mov
fnstcw
test
rcrl
fs
addr16
loope
jae
mov
cmc
and
negl
lock
sub
data16
mov
adc
rclb
push
mov
jb
repnz
mov
jle
push
ret
mov
jbe
int
dec
outsb
pop
mov
out
sub
mov
mov
loope
ret
sub
fldt
mov
or
out
pop
scas
inc
adc
sub
and
ret
jle
test
enter
push
dec
jno
in
stc
and
dec
inc
mov
jo
loop
pop
stc
xor
add
xchg
jmp
hlt
ds
arpl
movsl
outsl
mov
push
cmp
inc
jne
mov
pop
mov
xchg
hlt
cmpl
xor
add
cmc
lcall
push
jge
or
mov
xlat
sti
in
push
xorl
sub
push
ss
add
imul
call
cmp
xchg
push
repz
ljmp
test
jle
sub
scas
lock
repz
jecxz
push
xlat
lret
mov
movsl
repnz
arpl
jl
insl
int
lahf
insb
daa
push
aad
cmp
jae
iret
mov
stos
mov
fwait
jno
add
dec
xor
mov
mov
je
pop
std
mov
or
xor
inc
test
push
inc
and
fisubrs
leave
pop
add
dec
clc
aas
jo
es
fsubrs
jnp
inc
decb
test
ret
into
mov
rcll
inc
mov
pop
adc
ret
les
sub
sub
rcll
mov
mov
xor
sbb
ljmp
xor
mov
scas
clc
mov
mov
icebp
popf
test
jle
jmp
xrelease
mov
iret
xor
outsb
shlb
mov
bound
icebp
leave
int
sarb
roll
pop
push
inc
inc
mov
popa
xchg
mov
leave
leave
push
pop
jns
loope
pop
mov
test
insb
out
roll
popa
ret
out
inc
roll
pop
adc
iret
test
and
jmp
adc
stos
not
adcl
jo
in
mov
leave
aam
sbb
loope
jmp
sarl
test
and
xchg
lds
jg
mov
pop
negb
pusha
ret
xor
cld
jmp
inc
dec
push
fmull
push
mov
adc
loopne
rorb
aad
mov
cmpsb
rcll
adcl
add
shll
shrl
add
fs
rorl
jb
xor
test
add
icebp
mov
cmpsl
mov
xor
adc
xor
cltd
shrl
shl
or
out
mov
and
ret
leave
stc
pop
rcll
jb
shlb
out
shl
leave
fyl2x
hlt
fucomip
add
nop
roll
sahf
pop
cmp
push
nop
lahf
rorb
in
ffreep
jge
mov
test
lret
mov
mov
xchg
rcrl
mov
movsb
add
arpl
mov
inc
inc
dec
shll
ret
xchg
mov
inc
xor
pop
jmp
loope
fldenv
psrlq
sbb
mov
cmp
adc
shl
inc
and
sub
lret
ror
ret
rol
fcmovnbe
out
dec
or
or
push
cmp
test
fnstcw
fldl
shl
stc
lods
lock
push
xlat
out
repnz
adc
fs
hlt
cmp
in
or
aam
lret
xlat
pop
xor
add
repz
ljmp
insl
mov
cmpsl
pop
addl
leave
jg
push
leave
not
icebp
btr
shl
andl
cmc
shr
rcrl
adc
shrb
jno
dec
add
adc
jno
jp
leave
inc
jmp
dec
out
aas
sar
inc
icebp
inc
inc
push
lahf
pop
cld
out
repz
add
adc
add
add
push
mov
cli
push
jmp
test
les
test
ret
stc
data16
mov
notb
dec
lcall
mov
sbb
jp
cmp
bound
adc
adc
sarb
sbb
add
mov
cmp
pushf
mov
cld
call
fdivrl
repz
dec
loopne
jns
sbb
iret
add
and
scas
popa
pusha
es
adcl
lret
jmp
outsl
ffreep
icebp
dec
push
jmp
dec
sarl
xor
cwtl
adc
and
rcrl
mov
shr
icebp
pop
xor
jno
iret
cli
shr
shrl
leave
leave
sarl
jl
popa
imul
andl
mov
shlb
mov
dec
ljmp
in
leave
add
dec
add
out
rcll
mov
mov
mov
imul
inc
loope
pop
bound
roll
leave
inc
mov
add
repz
shlb
mov
push
push
xor
jmp
jp
xchg
fstp
xchg
fdivrs
fnstcw
xor
push
repz
aam
leave
shrl
mov
xchg
popa
scas
bound
leave
loope
cmc
aas
cli
shl
pop
dec
lds
jmp
shll
xchg
mov
bound
jge
loop
fnop
add
stc
dec
fisubrl
add
addr16
mov
lds
adc
rclb
mov
ret
cmpl
mov
xor
repz
ret
rorl
rclb
push
cwtl
mov
pop
dec
or
dec
jmp
dec
and
das
jmp
dec
pop
cmc
add
insl
xor
hlt
jmp
mov
or
mov
inc
mov
mov
ret
stc
xor
cmc
test
adc
cmc
jns
pop
xor
lock
cmpsl
mov
das
shlb
sarl
inc
iret
jae
rcll
fsub
jmp
ret
lods
adc
pop
les
sarl
iret
fistl
adc
dec
fcompl
xchg
fadds
cmc
mov
ja
pop
shll
iret
rolb
rcrb
popf
leave
js
xchg
mov
rorl
pushw
xorb
test
or
sub
rcrb
cmc
psubsw
pop
cmc
jecxz
insl
xor
hlt
fsubrp
dec
cltd
xor
or
roll
adc
iret
repz
xor
repz
rcll
repz
rorl
repz
leave
lea
movd
in
fcom
push
sbb
push
xor
inc
popa
ss
into
cltd
jne
sarl
jmp
iret
inc
shlb
adc
rorl
dec
cmp
sarb
sbb
push
call
jnp
adc
sarb
fbstp
and
test
shl
jno
or
ljmp
aad
inc
sbb
arpl
add
test
or
stc
out
add
add
in
ffreep
inc
push
inc
ret
lret
jne
push
leave
cltd
mov
shll
repz
les
shlb
push
fldcw
dec
outsl
iret
mov
faddl
dec
sub
das
out
icebp
xor
rorl
ljmp
jmp
in
xchg
sub
sti
test
sub
sarl
mov
xchg
jg
ror
imul
sbb
jmp
leave
cmp
stos
add
bound
and
fldl
shll
clc
inc
fisttpll
hlt
adc
adc
imul
icebp
ficoms
mov
cmpb
lret
cmc
lret
cld
and
jb
popf
cmp
loope
xor
or
lret
xor
pop
std
mov
dec
aad
inc
call
jbe
nop
adcl
push
leave
popa
xor
lret
jns
and
dec
and
hlt
mov
shrb
pop
mov
or
push
popf
aam
ror
jmp
pop
fnsave
test
xchg
icebp
lds
mov
rolb
xlat
lods
out
stos
xchg
inc
sub
mov
dec
adc
and
mov
pop
fmull
jne
dec
ret
rolb
sub
mov
dec
cmp
xor
xchg
cmp
dec
push
jns
ret
dec
dec
mov
cmc
xor
in
lret
sub
inc
lret
aam
ror
in
adc
lret
leave
je
nop
ret
push
push
dec
leave
addb
xchg
xor
leave
xchg
mov
sarl
cmpsl
adc
fstp
mov
jae
clc
pop
sarb
stc
aaa
js
ret
mov
sbb
xchg
mov
ror
movnti
shl
out
daa
repz
sbb
iret
jl
xor
sarl
xor
scas
rol
loope
xchg
ficoml
mov
xchg
mov
cmp
leave
roll
mov
mov
imul
mov
mov
shlb
mov
xchg
mov
and
repz
mov
pop
dec
add
aas
mov
rcrb
popa
jbe
loopne
sub
push
lods
inc
mov
adc
sar
sar
jmp
rol
inc
lods
test
fisttpl
test
lret
and
jb
mov
push
sarb
jbe
mov
jmp
lcall
popf
pop
push
imul
cli
pop
test
sarl
leave
add
leave
leave
mov
es
cmp
dec
les
mov
jmp
sti
fcmovnb
imul
rcrb
dec
out
imul
fmull
loope
sbb
mov
jecxz
adc
pop
dec
xor
fisubs
rcll
mov
popa
mov
lods
mov
pop
into
dec
popa
aaa
adc
lock
aas
sbb
inc
cmp
xor
sub
adc
push
roll
add
cmp
adc
hlt
mov
push
in
push
test
mov
push
iret
mov
enter
cwtl
or
mov
iret
outsb
add
movsl
mov
lds
mov
movl
repz
out
add
inc
push
jns
push
fnstsw
iret
pop
push
sbbb
push
leave
rcrl
pop
add
rorb
lea
repz
rcr
mov
mov
sub
xor
ss
hlt
mov
mov
cmp
std
imul
xchg
pop
outsb
adc
jecxz
sub
push
test
cltd
dec
dec
and
or
mov
push
mov
loop
dec
pushf
ror
xor
xor
add
xchg
and
sub
sub
push
or
sbb
and
fists
xchg
jae
cmp
dec
xor
mov
xor
test
add
mov
lret
sarb
or
stc
xchg
call
adc
popf
mov
shrl
cmc
aas
out
in
test
push
cs
rcrl
pop
xor
lods
mov
mov
pop
loop
divl
popl
insb
adc
dec
lock
mov
cmp
hlt
xchg
leave
rcrl
je
mov
loopne
cmp
dec
mov
and
loope
inc
dec
dec
and
leave
cmp
mov
shll
ror
mov
cmp
jmp
sbb
pop
jno
add
rorb
leave
leave
addl
test
jle
xchg
movsb
cmc
enter
xchg
lret
popf
jno
jne
out
mov
lret
jecxz
jmp
ss
dec
lret
sti
dec
push
mov
sarl
sub
sysenter
test
pop
cld
jecxz
xor
stc
rcl
or
inc
push
sarl
xchg
ret
jno
sub
adc
push
push
fxch
mov
mov
sbb
shl
xor
ret
adc
or
mov
inc
shlb
hlt
stos
or
mov
xchg
or
inc
repz
jmp
lret
sarb
and
push
rcrb
popf
xor
fnstcw
add
inc
xor
xor
jne
push
iret
rorl
mov
jmp
pusha
lods
ror
sarl
bound
lret
jae
add
pusha
js
lret
jae
lcall
je
in
xor
inc
mov
and
popf
in
adc
mov
and
inc
lret
inc
pusha
js
lret
jae
push
and
inc
lret
inc
xor
orl
pop
jg
mov
fidivs
sbb
lods
repz
decb
push
mov
ljmp
mov
aam
fisttpll
test
jne
pop
cmp
and
mov
insl
jmp
std
iret
pop
insl
cmp
dec
cmc
gs
lds
shr
mov
xlat
dec
sub
fldl2t
push
xor
hlt
mov
sarb
sbb
fstps
fldl
repz
hlt
add
iret
int
ret
hlt
ljmp
pop
cmc
jno
push
mov
orb
dec
push
dec
lods
or
in
add
movsl
lock
ja
shrb
inc
leave
dec
adc
aas
or
dec
lds
pop
aam
mov
icebp
into
jns
roll
aaa
shrl
xchg
je
lret
xor
bound
clc
rclb
adc
jns
push
aam
pop
mov
xor
icebp
dec
mov
inc
cltd
rcl
sets
jo
ret
out
faddl
pop
rol
iret
jl
jae
cmp
add
dec
or
cmp
faddl
dec
push
cmc
outsl
cli
ror
rorl
cmp
mov
in
pop
shr
cmp
shll
fninit
mov
mov
aad
test
fsub
xchg
mov
leave
mov
ror
mov
lods
ss
xchg
and
lds
shlb
mov
and
movsl
lret
or
mov
ds
dec
in
repz
push
roll
outsb
sub
dec
push
and
mov
mov
mov
jp
and
sbb
mov
mov
ret
xor
shl
nop
testb
mov
add
cmp
lea
dec
leave
repz
rcl
ret
lahf
mov
popa
sar
jmp
arpl
push
adc
and
sub
inc
repz
dec
mov
add
mov
std
rcl
pop
mov
icebp
inc
adc
int
push
mov
test
xorb
test
sub
stc
rcr
add
dec
movsl
stos
mov
out
repz
icebp
test
loope
xor
sub
test
xchg
leave
inc
cltd
mov
inc
loope
ljmp
mov
aam
xchg
cwtl
mov
mov
daa
sbb
dec
icebp
out
add
cmc
fwait
pop
push
icebp
arpl
mov
imul
icebp
das
rorl
xlat
sub
popa
std
imul
sub
add
adcl
jb
hlt
adc
mov
stc
nop
sub
mov
push
imul
fyl2x
xor
subl
lds
adc
repz
dec
rcrl
inc
ror
mov
sub
cmp
pop
push
dec
inc
repz
mov
cmp
xlat
rcrb
xchg
aad
in
cmp
popf
push
scas
lret
xor
loopne
inc
mov
imul
leave
add
shrb
rcl
push
push
mov
sbb
stc
and
and
sbb
inc
cmc
jl
push
fistpl
mov
and
cmp
adc
sbb
cld
nop
insl
cltd
jg
adc
pushf
mov
rcl
mov
mov
lods
mov
cld
fstps
sar
vpand
pop
adc
xchg
mov
xchg
icebp
sarl
xor
test
push
fs
jns
mov
rolb
sub
lds
mov
fs
out
lock
inc
icebp
pop
mov
jge
jno
aad
icebp
and
xor
jp
rcll
dec
stc
cmc
pop
cli
sarb
adc
sbb
fiaddl
loope
dec
lds
out
roll
xor
cmp
ja
decl
adc
add
ds
xorl
and
rol
jmp
adc
rcl
mov
addr16
shl
xor
and
xor
push
sub
push
test
pop
lock
cmp
adc
mov
pop
stos
push
mov
mov
sbb
jne
leave
in
cmp
hlt
stc
mov
xchg
aad
adc
adc
xor
int
and
shl
inc
push
shrl
shrb
xor
cmp
inc
mov
notl
out
lret
roll
push
icebp
fstps
daa
xchg
sbb
xor
shlb
xchg
rcrb
cmp
shrl
or
inc
rcll
popf
leave
mov
loope
pop
or
xor
add
repnz
xor
mov
adc
inc
xor
or
jmp
sarb
mov
pushf
jns
shll
mov
ror
rolb
adc
stc
inc
xchg
lds
mov
jmp
mov
xchg
inc
add
out
adc
xor
mov
mov
dec
inc
adcb
stos
testl
sub
aaa
sub
inc
testl
sub
xor
rolb
fs
push
lret
movsl
sub
xchg
adc
mov
mov
adc
mov
and
jno
mov
les
push
mov
jle
or
xor
sbb
mov
das
ret
jl
shll
jl
mov
lods
and
mov
jmp
pop
add
sarl
lock
sarl
movsb
cli
or
adc
enter
inc
jg
stos
into
in
add
shll
mov
mov
icebp
shll
mov
add
lods
rcll
cmp
scas
add
lret
mov
mov
jns
mov
push
sbb
icebp
ficoms
xor
mov
loope
faddl
mov
cmpsb
std
subl
mov
leave
xchg
cmpsl
and
xchg
leave
fldenv
sub
xor
fprem1
stos
push
dec
pshufw
popf
ret
mov
push
and
lds
push
repz
rol
sub
or
push
xchg
shll
shl
rolb
xlat
xchg
inc
leave
xor
movsl
mov
inc
mov
inc
jns
je
pop
lret
movsb
sbbl
jno
or
push
lret
aam
mov
shlb
xor
imul
ret
test
pop
or
xor
stos
shrl
movsb
push
shl
jecxz
enter
rorl
cmp
shr
mov
jno
iret
ljmp
test
fs
mov
les
mov
std
sub
push
call
add
dec
push
in
sub
outsl
xor
repz
into
rolb
mov
xlat
movsl
adc
dec
std
mov
out
in
lock
clc
in
mov
or
idivl
ljmp
mov
and
shlb
lret
hlt
stos
adc
lods
dec
test
sbbl
pushf
fnstcw
mov
jb
std
xchg
sarb
test
or
push
add
push
leave
std
inc
fdiv
loopne
adc
push
aaa
lds
popa
pop
xor
icebp
dec
cmp
mov
add
dec
pop
xor
scas
out
xor
icebp
je
jmp
adc
mov
inc
pushf
pusha
loope
std
mov
movsb
mov
les
mov
jbe
arpl
pop
lret
aas
lret
cld
cmc
push
and
xor
mov
pushf
pop
mov
dec
aaa
leave
mulb
imul
or
test
scas
dec
bswap
test
dec
sub
xchg
shrl
movsl
jmp
movsl
jmp
add
leave
ret
ret
popa
loope
rol
or
adc
orl
jns
push
aad
mov
add
popa
mov
lret
pop
fdivr
leave
gs
sti
mov
lret
or
and
xrstors
adc
in
add
shl
inc
aad
out
in
inc
rolb
ror
dec
and
or
and
in
icebp
cmp
mov
fdivrs
inc
mov
repnz
rclb
xor
ja
mov
jbe
fs
sbb
add
rcll
mov
xchg
cmc
add
jns
mov
adc
jb
mov
stc
rcl
push
loopne
lock
repnz
lods
push
mov
cmp
xchg
xor
mov
xchg
sbb
lods
and
fcompl
dec
aaa
adc
push
fcomi
pushf
mov
add
xchg
mov
sub
jbe
gs
pop
shll
shlb
push
icebp
repnz
rcll
push
pusha
lret
jmp
cs
cmc
mov
loopne
loop
and
push
fdivrl
mov
shlb
xchg
leave
xchg
scas
cwtl
in
lds
mov
leave
jge
push
dec
leave
insl
rolb
sarb
rcrl
stc
jno
jb
jns
mov
mov
rol
jno
mov
arpl
push
mov
add
icebp
sbb
out
adc
loop
push
dec
fistps
xor
mov
sarb
repz
rcr
adc
jmp
jmp
cmp
sbb
jg
icebp
sub
orb
pop
lea
xor
shll
scas
xchg
or
das
or
dec
aas
mov
sbb
add
in
popf
cli
shr
jle
movsb
repnz
pop
nop
lcall
nop
inc
lret
mov
mov
loopne
mov
jle
shll
rcrb
dec
inc
mov
shll
cmpsl
cmp
adc
mov
in
cmpsb
aad
adc
cld
jnp
shl
or
in
mov
mov
xor
int
test
mov
mov
jle
imul
repz
leave
mov
jae
sarl
xor
adc
imul
aaa
rcrl
sub
mov
jno
xor
aad
mov
idiv
jmp
mov
cmc
stc
shl
jecxz
mov
dec
push
loop
movsb
loopne
xor
or
sarl
mov
icebp
int
add
out
pushl
mov
cmp
mov
xorl
cltd
mov
sub
xor
push
lea
push
mov
les
shlb
or
aad
lahf
pop
adc
dec
or
cmc
icebp
int
outsl
pop
inc
in
mov
les
xor
mov
or
push
vmovntps
hlt
jmp
gs
icebp
push
leave
add
or
cmp
repz
nop
cmc
push
shrb
repz
fwait
adc
ja
push
cmp
mov
cmc
mov
inc
push
mov
dec
add
fistpll
adc
cmp
cmp
lods
andl
dec
sub
js
rcl
cmc
sbb
sbb
roll
lds
sbb
and
negl
dec
movsl
add
fsubrs
mov
push
jns
cmp
stos
aaa
andl
stc
and
mov
in
cmpsb
iret
mov
mov
leave
mov
jmp
cmc
xchg
add
and
push
mov
pop
or
inc
jno
scas
repz
repz
ljmp
mov
or
xor
cmc
ret
and
add
scas
aaa
add
xchg
dec
and
lock
xchg
or
sub
cmp
mov
data16
fldenv
pushf
mov
pop
jecxz
lds
inc
stc
lds
and
arpl
mov
jo
dec
andl
cs
xchg
in
mov
dec
test
lds
pop
inc
dec
shll
jmp
dec
add
add
push
jmp
dec
shlb
rclb
scas
adc
leave
lea
out
js
mov
or
xchg
or
in
jge
repz
inc
adc
aas
int
dec
ds
or
push
lock
xchg
rcl
xor
js
inc
add
xor
sbb
xlat
cs
ret
mov
mov
imul
mov
sbb
mov
lahf
sub
sub
sub
lds
adc
enter
cmovb
sub
push
push
push
add
and
sbb
dec
and
sbb
lds
sarl
ficoml
push
mov
or
in
xchg
add
lds
fstl
rcrb
fsubrp
fcmovbe
xor
roll
test
jns,pt
inc
clc
mov
mov
lods
xchg
test
insl
add
roll
cmc
icebp
in
fwait
repz
add
mov
fistpl
fld
push
jmp
icebp
mov
outsb
pop
jmp
test
sbb
inc
inc
push
jmp
xor
adc
subl
and
mov
jmp
lret
xor
in
icebp
aas
jl
je
in
jnp
lret
rcl
pop
mov
jmp
int3
lret
xorb
sbb
xor
or
ret
mov
int3
leave
jne
rep
sarb
jmp
xor
outsl
or
mov
add
int
aaa
inc
arpl
testl
shll
sub
in
out
shr
loope
or
push
inc
mov
ret
ljmp
repz
rcl
adc
addr16
lea
xor
xchg
push
lods
out
iret
leave
iret
inc
xchg
arpl
bound
lods
icebp
mov
enter
rcrl
or
ret
xchg
pusha
adc
dec
rolb
popf
dec
jns
add
popa
sarb
inc
divl
sbb
repz
shrb
push
dec
cmc
into
pop
aaa
inc
xor
add
xchg
xor
sar
sbb
inc
jno
repz
shrb
arpl
fdivs
or
push
pop
icebp
xchg
dec
cmpsb
sbb
mov
mov
mov
mov
outsb
rol
ret
aam
nop
lds
stc
repz
xchg
dec
sub
cmp
mov
ss
fstpl
lds
ret
insl
mov
inc
push
rcll
fdivs
mov
leave
imulb
cmp
jne
xchg
fsubl
add
or
sub
into
cmc
adc
lods
aaa
mov
and
in
xlat
imul
xlat
push
ret
adc
inc
in
mov
cs
cltd
xchg
mov
cmp
stos
sbb
push
mov
mov
jle
sub
call
ret
push
jno
lret
push
jne
pop
jns
lds
ret
or
cmp
repz
insl
fidivs
rcl
add
mov
movsl
loope
mov
iret
jmp
repnz
mov
mov
loop
popa
lds
leave
les
ja
sub
fldenv
imull
leave
rclb
adc
add
shll
cmp
and
das
jmp
pop
out
leave
fld
push
fneni(8087
flds
leave
sub
mov
rorl
add
ja
adc
and
mov
test
jg,pn
into
loope
mov
inc
icebp
out
and
sub
int
outsb
and
mov
popw
jb,pt
test
sub
jp
inc
mov
ja
pop
jo
jge
xorl
repz
repz
movsb
lock
jno
xchg
fucom
cmp
cmp
ljmp
iret
xor
mov
mov
shrb
decl
push
idivl
fldcw
lahf
cld
dec
loope
xchg
mov
movsl
out
mov
push
mov
xor
jnp
sub
cmp
mov
imul
or
pop
mov
mov
leave
out
sbb
sub
push
adc
push
nop
push
shr
rcrl
cwtl
aam
pop
push
popf
fcoms
sarb
test
adc
xchg
cmp
fbstp
cmc
cmp
push
inc
out
xchg
inc
push
addr16
mov
dec
test
mov
call
rep
pushl
lea
jmp
pushf
pushfw
popw
shr
mov
cmp
cmp
xor
pushf
cmc
call
call
call
mov
jmp
lret
inc
leave
decl
fstpt
scas
shlb
jecxz
mov
mov
fiadds
loop
jbe
mov
ja
mov
push
je
mov
insb
jg
scas
inc
sbb
popa
ret
daa
xor
movsl
push
addr16
cltd
push
push
aad
cmp
mov
mov
dec
int
inc
ss
dec
outsl
mov
adc
push
aaa
cli
jge
mov
cmp
pushf
push
test
pushl
lea
je
cmc
push
call
xchg
sti
mov
mov
neg
call
mov
push
cmp
into
jp
xorb
rcll
addr16
pop
loopne
push
fs
cmp
mov
lds
fwait
pop
cli
add
jecxz
jmp
aad
xchg
aam
xchg
pop
sahf
insb
or
add
fs
sbb
cmpsl
sbb
sahf
xchg
add
inc
sub
jb
jmp
mov
and
inc
movsl
or
push
lods
std
mov
push
daa
sbb
jge
mov
shrb
push
xchg
dec
inc
fs
sbb
jecxz
incb
gs
clc
mov
lods
test
jbe
cmc
push
psubusb
cmpsb
gs
iret
jnp
out
and
jmp
xorl
imul
add
test
cmpl
jmp
roll
movb
mov
pushl
mov
lea
jmp
push
lea
jae
bsr
mov
rcl
inc
mov
pusha
mov
lea
cmp
clc
bt
cmc
xor
cmc
call
pusha
pushf
pushf
adc
mov
call
or
mov
mov
xlat
pop
imul
dec
loopne
and
cmpsb
jmp
imul
push
nop
les
mov
repz
inc
push
enter
push
jge
sarb
rclb
leave
pop
sbb
scas
pop
or
in
or
outsb
lahf
or
xchg
mov
jmp
add
push
cwtl
dec
mov
xor
sub
fiadds
fdivr
rorb
in
neg
pushl
inc
stc
pusha
xor
movw
cmp
cmp
pushf
lea
pushf
lea
not
mov
pushf
lea
ja
pusha
mov
pusha
call
push
setne
mov
inc
inc
call
mov
fmull
fisttpll
add
loop
les
pop
cmc
and
out
add
in
decb
enter
xor
lret
and
pop
cwtl
pop
mov
pop
test
mov
dec
dec
jns
ja
inc
sar
dec
cltd
sbb
enter
repnz
add
add
or
aaa
mov
mov
push
testl
shrb
daa
or
test
sti
mov
mov
mov
push
mov
mov
icebp
mov
pop
aam
out
and
incl
cmc
xor
add
sub
mov
sar
rcll
inc
xchg
aad
rcr
mov
dec
daa
sbb
les
adc
cwtl
inc
ja
jns
mov
ljmp
mov
mov
xor
leave
dec
scas
add
and
clc
sbb
lea
jae
cmp
clc
cmp
call
push
les
mov
loopne
fsqrt
outsl
scas
cltd
shll
push
cli
cmpsb
or
mov
into
out
shlb
xor
mov
loop
mov
aam
pop
lret
mov
xchg
pop
cmpsl
jne
push
sub
imul
pop
and
xchg
out
sbbb
adc
movb
jmp
pop
mov
jmp
out
data16
push
or
inc
js
adc
cmpsb
mov
in
fsts
inc
daa
dec
xchg
adc
inc
or
mov
and
lret
dec
or
movsb
push
mov
pop
or
popf
pop
fstpl
es
cmp
sarl
adcl
test
repz
dec
aaa
mov
ljmp
sahf
pop
pop
fimuls
pminsw
clc
pop
popl
push
push
jns
inc
mov
jle
loop
into
shll
cmp
pop
shl
addr16
cli
jge
push
jmp
sub
jl
mov
fisubl
sub
cli
inc
xchg
dec
leave
dec
xorb
lcall
rcrl
add
mov
repnz
lods
pop
sbb
je
aaa
jl,pn
mov
xchg
popa
arpl
adc
mov
mov
sub
outsl
filds
dec
int
hlt
xchg
jl
imul
out
mov
sti
inc
and
pop
sbb
and
cltd
insl
nop
js
sub
mov
mov
cld
xchg
sarl
adc
and
mov
mov
shrb
inc
mov
inc
pop
inc
mov
decl
inc
xchg
fstpl
ficoml
and
incl
cmpsb
fcompl
inc
add
dec
mov
jbe
xchg
push
push
xchg
aad
mov
mov
xlat
dec
xchg
mov
les
insl
or
cmpsb
int3
outsl
xor
negl
xchg
in
or
mov
push
stos
test
lea
je
cmc
bt
pushf
cmc
add
jmp
call
call
add
add
xor
mov
loop
xor
div
dec
leave
fimull
int
mov
fldenv
pop
push
jne
push
add
roll
cmp
out
popl
les
ror
inc
mov
adc
dec
scas
sbb
fcoml
sbb
ret
out
shlb
cs
loop
jnp
sub
add
and
lcall
in
cmp
adc
adc
cmc
fcoml
stos
cmpsl
mov
lret
shlb
in
ds
adc
inc
push
push
push
or
xor
adc
test
lea
xor
aad
push
shrl
dec
sub
popf
sub
inc
pushf
push
jmp
push
pusha
movb
pushf
lea
call
call
leave
ss
xchg
mov
and
pop
pop
lods
dec
outsb
dec
add
mov
fwait
jb
inc
xchg
sbb
xor
hlt
rcll
std
pop
push
lea
ss
int3
fsub
push
xor
push
push
fcoml
fnstenv
ret
test
pop
xor
inc
push
inc
fbld
fdivl
mov
mov
add
out
mov
out
jnp
roll
or
jbe
mov
xchg
dec
push
pusha
movl
xor
inc
movsb
gs
lods
ljmp
jg
jecxz
xor
sub
pop
sbb
insl
dec
ret
out
sahf
out
mov
loope
mov
jmp
ljmp
push
sahf
add
add
test
out
in
mov
popf
adc
repnz
imul
mov
sarb
fwait
lods
insl
push
jecxz
pop
mov
mov
pop
and
rcrb
test
add
add
xlat
adc
bsf
mov
pushf
stc
stc
add
cmp
stc
pusha
movzwl
rcr
mov
pushf
bt
add
call
mov
movb
pushf
mov
push
pushf
push
pushl
ret
and
cmp
push
pushl
sub
into
mov
in
mov
popl
loope
std
xor
std
outsb
mov
mov
daa
adc
mov
xor
les
dec
loop
cltd
pop
nop
jne
xchg
mov
jb
out
mov
mov
stos
mov
xchg
mov
or
aas
inc
inc
loopne
outsb
jle
int
cwtl
jnp
jmp
jle
mov
js
mov
or
and
fidivs
andb
cmpsb
test
mov
xchg
mov
call
fnsave
aad
mov
fsubrl
push
and
jbe
fiaddl
and
mov
xchg
out
inc
inc
add
js
adc
adc
test
adc
push
es
xor
mov
rclb
jmp
push
movsb
push
loopne
jns
mov
mov
lahf
in
adc
pop
push
push
les
pop
rolb
out
or
test
mov
sub
shl
clc
mov
jno
cmp
mov
adc
inc
test
mov
push
pusha
test
pushl
jmp
pop
pushf
pop
test
mov
jl
pop
pop
adcb
inc
push
jbe
push
jmp
push
push
jbe
orb
test
jnp
inc
and
ds
movsl
ss
mov
adc
xor
jns
add
and
pop
imul
pop
std
shlb
pop
mov
ds
pop
shlb
mov
sbb
cmp
push
inc
aam
cmpsb
neg
or
jl
sahf
dec
mov
lock
imul
stos
int3
cmp
mov
clc
inc
ret
pop
nop
xchg
pop
cmpsb
insb
frstor
loop
lods
mov
dec
ret
push
push
fidivl
fldenv
test
sbb
xor
xor
ss
push
jmp
or
ss
xor
sub
sub
xor
mov
inc
lret
add
mov
clc
mov
adc
cmp
rclb
mov
std
out
lahf
loopne
adc
inc
push
ja
stc
lds
aam
mov
mov
cwtl
int3
lcall
xor
jg
addl
adc
rcrl
pushf
insl
loop
negl
inc
cmpsb
je
jae
inc
sti
sbb
out
pop
xchg
ljmp
jp
push
or
test
pop
xchg
and
pushf
call
pusha
ljmp
dec
and
inc
add
add
or
lock
sbb
push
std
sahf
or
hlt
ret
adc
movsb
and
addl
into
loope
lcall
jmp
sub
into
xor
or
movl
lea
ja
pusha
lea
jb
clc
test
cmp
call
jmp
add
ljmp
add
and
add
sub
add
add
add
add
add
adc
add
sub
out
add
add
add
add
add
add
sub
out
ljmp
add
sub
js
sub
idiv
add
add
add
add
add
sub
sub
add
ljmp
add
cmpsl
das
add
add
add
ljmp
pop
and
add
add
add
add
add
add
xchg
das
add
add
add
sub
add
add
add
sub
mov
add
add
test
add
ljmp
fisttpll
add
ljmp
mov
ljmp
jp
cs
ljmp
xor
das
add
ljmp
add
sub
xchg
add
jae
loopne
adcl
insl
jb
fists
adc
ja
fisubrl
xlat
adc
jmp
cld
std
cmp
stos
imul
adc
rcr
or
jns
fadd
fsubs
shrl
fsubs
cwtl
stos
sbb
into
out
mov
dec
add
rcl
daa
pop
cmp
push
movsl
push
or
pop
rclb
mov
push
aam
add
mov
imul
mov
stc
movsb
push
mov
pusha
std
stos
fnstcw
or
jb
inc
test
enter
aam
mov
sbb
push
or
cmp
fs
jne
pusha
push
jmp
loope
stos
jg
mov
pop
pop
scas
xorb
aam
out
or
pop
shll
dec
inc
adc
or
jl
and
jmp
fiaddl
icebp
les
mov
pushaw
rcll
pop
shrb
sub
int3
push
pop
mov
inc
lea
sub
fnstcw
mov
ljmp
insb
inc
out
pop
inc
addb
in
imul
out
ret
jmp
xor
or
test
add
jle
mov
aam
xchg
xlat
mov
mov
add
and
mov
push
mov
mov
sbb
dec
pop
fisubl
movsl
sbbl
dec
or
cmc
stos
adc
or
push
lret
push
fimuls
dec
add
cmp
inc
out
mov
jb
shl
push
jno
cmp
les
xchg
pop
out
inc
mov
cmp
push
repnz
and
or
in
jo
jmp
clc
ror
rol
xchg
bt
cmc
pushf
add
mov
ror
pushf
bt
mov
call
xor
dec
in
out
iret
add
mov
pop
insl
in
in
rcrb
jb
dec
and
pop
sahf
push
inc
sbb
outsb
outsl
pusha
mov
scas
sub
push
add
movsb
mov
add
push
imul
push
jae
ja
in
push
repz
mov
xchg
xor
mov
mov
pushl
push
pushl
mov
lea
jmp
sbb
xor
stos
lret
cmp
jle
xor
push
cmp
into
mov
cmpsb
nop
add
or
mov
out
sti
jbe
or
adc
and
inc
jne
sbb
mov
sti
out
les
pop
es
idivb
pop
popf
jmp
stos
xor
fstpl
fisubs
cmp
movb
pop
cld
sbb
out
out
dec
jae
add
outsb
in
jle
jb
push
adc
add
aam
dec
fcmovbe
inc
fcoms
sbb
add
in
cli
sub
mov
sarl
dec
mov
push
insl
push
mov
mov
jns
jp
ljmp
mov
mov
data16
sti
mov
fstl
push
mov
jnp
icebp
xchg
rol
bound
filds
aas
int3
jp
push
test
jg
lds
lret
outsb
and
out
mov
and
sub
jg
or
pop
jl
sahf
lahf
lock
dec
in
jp
lret
jp
cmp
pop
hlt
jne
adc
ljmp
dec
or
lea
push
dec
sbb
insl
scas
add
pop
push
fsts
repnz
sub
lods
push
dec
into
mov
add
lock
lea
data16
pop
cmp
cmc
ss
daa
cmpsb
ja
cli
ss
xor
cmp
test
rcl
jae
sbb
cmc
cmp
ds
aam
cmovno
pop
cld
xlat
daa
xchg
gs
mov
mov
xchg
test
sub
in
lea
das
loop
mov
pop
adc
push
aad
push
sahf
sub
insl
addr16
mov
movsl
sbb
xchg
loop
sti
dec
fldenv
test
lcall
sub
out
mov
sbb
push
push
fisubs
in
test
jle
or
mov
test
arpl
repnz
and
xor
fs
cmp
xor
xchg
shll
int
jae
and
add
dec
cmc
mov
cmc
test
jmp
add
pushf
pushf
pushl
lea
jmp
add
pusha
lea
jmp
inc
jg
jl
mov
adc
xchg
sbb
dec
out
and
es
rorb
push
mov
out
xchg
jbe
cmp
jb
loopne
mov
dec
adc
loope
mov
mov
addr16
pop
pop
jp
cmpsb
adc
pop
lods
mov
gs
shll
push
cli
pop
nop
and
cltd
jb
xchg
sub
mov
in
push
lea
je
bt
pushf
pushf
stc
add
stc
jmp
push
mov
mov
bound
lds
daa
js
sub
ss
sahf
pop
push
pop
mov
push
nop
roll
jae
cld
sbb
insb
mov
fdivrs
mov
fistl
mov
inc
pusha
in
into
xor
in
xchg
das
xadd
or
jl
mov
adc
mov
popa
cmpsb
sub
cmpsb
xchg
push
lret
popa
inc
push
idivb
in
and
lret
mov
sbb
repz
xor
xorl
ficoms
in
ljmp
aad
pop
jg
aaa
stos
cmp
jns
mov
ds
andb
arpl
sbb
add
sbb
out
outsl
lock
and
inc
inc
mov
je
push
int3
lea
adc
sahf
loope
mov
inc
dec
xlat
repz
or
push
pop
xchg
mov
test
and
mov
ja
jnp
icebp
xor
lcall
ljmp
add
rolb
idiv
cmp
jns
mov
xchg
pop
stc
cli
dec
mov
das
push
cmp
ljmp
rorl
adc
cmp
cmp
dec
iret
ret
sub
ret
addr16
iret
adc
mov
jge
mov
push
pop
pushf
pop
out
imul
int
cwtl
leave
cmp
mov
push
mov
mov
outsl
rcrb
aad
add
xor
inc
es
rcrb
inc
push
inc
mov
shll
jbe
or
rolb
adc
cmp
cwtl
cltd
xchg
out
fmull
inc
jae
or
push
mov
mov
shl
mov
shl
xor
cmpsl
in
in
pusha
mov
ficoms
outsb
mov
jge
iret
dec
mov
mov
loopne
in
test
adc
idiv
cmp
mov
jge
pop
fadds
shlb
arpl
xor
mov
jo
push
aad
push
inc
test
mov
or
mov
idivl
xchg
sub
cwtl
cltd
pop
push
pop
mov
lret
sbb
icebp
sbb
sub
jno
mov
aam
fdecstp
jge
ss
pop
cmpsb
mov
repnz
int
sahf
cmpsl
push
inc
jns
inc
clc
movsb
daa
push
rcll
add
lret
cmp
mov
cmc
dec
aas
rclb
push
in
mov
push
rcl
mov
cmp
push
push
or
dec
sub
adc
stos
pop
loope
mov
in
imulb
xor
add
add
pushl
jmp
cmp
pusha
push
jmp
ds
js
mov
sti
mov
add
hlt
dec
xor
int3
std
dec
push
cmc
mov
or
dec
popa
addr16
pop
outsb
in
cmp
inc
roll
xlat
pop
xchg
adc
or
jno
rorl
sub
movb
aaa
sbb
lods
xor
sti
inc
fmuls
loope
jg
fcomps
mov
xchg
das
subb
and
stc
pop
setb
imul
inc
mov
push
cmp
ja
mov
testl
cmp
xor
js
mov
mov
shlb
fs
ss
rcrl
mov
pushf
xchg
push
mov
lcall
cmp
iret
inc
cmp
inc
loop
addb
push
fsubrs
sahf
roll
and
imull
push
mov
insl
outsb
aas
mov
test
adc
enter
push
pushf
xor
sub
lods
fs
xchg
cltd
sbb
js
dec
aam
push
push
sub
std
fs
push
and
inc
pop
out
insl
sub
int
scas
push
xchg
xchg
mov
loope
xchg
dec
leave
lcall
jo
pusha
fs
adc
les
xor
and
lcall
inc
popf
gs
popa
call
sbb
mov
cmp
outsb
dec
lock
cmc
pop
inc
jno
repnz
outsb
rolb
mov
push
aam
mov
es
cmpsb
movl
push
xlat
and
sahf
pop
jmp
aaa
mull
arpl
aam
jg
jnp
outsb
in
pop
insb
addr16
aam
pop
notb
xor
repnz
xchg
stc
outsb
data16
ljmp
leave
cmp
loop
mov
stc
pop
mov
sub
rcrl
call
call
pushl
call
jmp
jbe
push
jbe
mov
inc
repnz
push
addr16
jmp
add
xor
cld
jns
into
out
movsl
es
sahf
or
loope
jae
mov
data16
mov
push
adc
jle
or
and
scas
lds
jp
jmp
jmp
shrb
mov
mov
jo
and
or
mov
lret
and
jo
inc
out
dec
lret
and
cs
mov
pop
std
mov
mov
xchg
push
sbb
sarb
bound
movsb
sbb
push
arpl
jl
hlt
or
fs
jne
shl
dec
rcl
mov
jmp
sub
je
mov
lret
or
push
add
gs
dec
adc
xor
add
inc
mull
icebp
aam
lock
int3
sbb
sub
daa
int3
mov
imul
addl
push
jl
xchg
dec
xlat
push
iret
sbb
push
push
xchg
icebp
jae
loope
rolb
or
mov
movsb
adc
rcll
sbb
test
cltd
push
js
daa
mov
cmp
ljmp
lods
pop
mov
jmp
in
add
ret
pop
xchg
ljmp
sub
inc
push
cwtl
leave
sbb
or
jle
and
push
enter
cltd
sahf
mov
jne
pop
push
adc
faddl
jnp
xor
mov
sub
mov
xor
jp
jl
push
mov
mov
xchg
jo
xchg
jg
fmuls
push
inc
xor
xchg
aas
repnz
cltd
int3
pop
jb
mov
add
stos
ljmp
or
mov
add
ja
leave
sbb
int3
fstpl
pushl
mov
fcompl
test
int3
int
aaa
imul
jns
in
fs
js
inc
outsb
scas
cmp
xor
pushf
pop
mov
in
jno
xor
cli
adc
sti
loop
subl
ss
out
ret
cmpsb
mov
cmp
ret
rorl
sbbl
add
stc
jmp
lock
lea
andb
daa
sbb
adc
push
leave
mov
int3
rorb
call
push
mov
sub
adc
jno
cmpsb
mov
mov
and
and
sub
jbe
xlat
and
in
aaa
or
xchg
mov
insb
mov
lret
jnp
dec
movsl
xchg
das
scas
pop
adc
out
insb
das
push
xor
cs
mov
ljmp
shll
jae
mov
ss
cwtl
stc
sub
mov
cs
lea
sub
mov
jo
ja
sahf
xlat
movsb
push
pop
inc
add
push
jg
es
inc
adc
mov
in
mov
aas
dec
jge
xor
gs
les
inc
mov
cs
mov
push
sti
mov
sub
sbbb
xor
arpl
fucomip
aam
add
loopne
cmp
inc
mov
mov
dec
insb
inc
mov
jmp
push
xchg
addr16
mov
push
jae
test
sbb
sbb
je
push
mov
xor
sub
xchg
imul
daa
fmuls
cmp
cmp
sbb
fstpt
incb
rcrb
adc
das
mulb
fnsave
or
cmpb
leave
push
jae
or
fwait
imul
pop
inc
std
negl
pop
fsubs
out
hlt
mov
cmp
lods
mov
stc
lock
sub
loope
inc
loop
fdivr
out
jno
daa
push
xor
sbb
fs
mov
jle
movsbw
mov
cmc
jmp
sub
dec
bsf
aas
push
btc
daa
push
rcr
push
sub
lahf
push
movsbl
das
jmp
sub
jle
mov
je
pop
cld
cmc
mov
lcall
ja
mov
push
aaa
cwtl
mov
out
jb
cli
adc
or
push
push
lret
repz
mov
in
pop
sbb
lcall
pushf
mov
mov
cmpsb
inc
and
add
xlat
adc
jo
mov
sub
cltd
insb
sbb
and
pushf
mov
into
dec
andb
xor
test
inc
lods
in
fstl
xchg
sbb
jl
shrl
jb
ds
jb
inc
push
ds
lods
out
sub
daa
leave
mov
jp
xchg
push
repz
repz
mov
add
jle
mov
pop
lcall
sub
pop
mov
lea
add
mov
and
inc
adc
push
popa
push
dec
pop
jno
stos
call
movsbw
pop
movsbw
xchg
not
pop
movsbw
push
mov
push
movzbw
pop
pusha
mov
pushf
movb
push
pushl
ret
dec
ret
decl
cmp
adc
xchg
push
mov
xchg
shll
mov
ds
sub
mov
or
pop
xchg
inc
mov
jbe
and
lret
or
bnd
sbb
inc
xchg
not
pushf
pop
xor
icebp
cs
push
xchg
add
cmpsl
cwtl
sti
cmpsl
or
into
jno
addr16
jg
fs
stos
jns
push
or
jb
mov
decl
jo
add
stos
jbe
lret
adc
and
push
or
aaa
ret
call
cli
add
mov
jmp
outsl
fdivl
mov
out
stos
std
pusha
mov
pop
in
outsl
mov
xorb
push
adc
mov
pushf
stc
push
cmpb
mov
lea
jne
dec
btr
sbb
sub
adc
add
not
mov
ror
setge
shl
add
jmp
lea
jne
cwtl
movzbw
call
test
in
decl
push
ja
sub
mov
iret
inc
ret
xchg
gs
mov
test
xlat
adc
push
daa
jmp
inc
inc
test
mov
jecxz
ss
inc
xor
movsb
push
in
jg
dec
daa
jmp
imul
fldl
inc
leave
mov
mov
adc
pop
sub
add
mov
dec
mov
jno
leave
mov
in
add
xchg
clc
inc
pushf
sub
bts
lea
add
ror
lea
sub
not
mov
sar
jl
or
sbb
mov
cmc
cmc
pusha
repnz
call
xchg
add
repz
imulw
mov
mov
shll
pop
jbe
xchg
mov
fildll
mov
pop
cld
add
adc
cs
sub
repnz
and
inc
adc
fwait
mov
adc
adc
mov
shll
imul
mov
sub
mov
and
pusha
mov
xchg
inc
movsl
cmpsb
cltd
cld
das
inc
movsl
sbb
lcall
cmp
mov
je
cmp
mov
sub
cmpsb
or
stc
pushf
clc
sub
jmp
stc
xchg
cmc
mov
cmc
call
mov
mov
test
imull
or
mov
cmpsb
mov
mov
ret
xchg
jmp
sub
mov
push
addr16
or
inc
std
cmp
xchg
loop
dec
mov
daa
dec
add
fsubs
xor
jecxz
inc
fistl
cs
inc
sub
out
call
xlat
mov
lods
outsl
sub
jle
ret
sub
add
ljmp
or
mov
mov
pop
push
jg
adc
xchg
dec
cmp
jecxz
fisttpl
mov
lds
xchg
fcomp
push
out
insl
adc
or
outsl
cmp
movsb
out
lods
mov
or
bound
mov
cmp
pusha
and
or
test
popa
fs
xchg
push
nop
add
imul
mov
outsb
add
cmc
ret
dec
imull
jle
aam
stos
lods
xor
das
loope
add
mov
and
jb
pusha
pusha
pushl
pushl
ret
adc
js
decl
jae
movsl
xchg
sbb
leave
outsb
ret
das
mov
jnp
jp
cli
loopne
mov
dec
mov
jnp
data16
and
xor
mov
pop
lods
jmp
outsb
cmc
shr
or
push
or
leave
lds
push
cmp
inc
push
aam
test
xorb
adc
jl
cmp
cmpsl
lods
push
das
mov
push
je
xor
mov
lods
add
xchg
mov
mov
sbb
repnz
sub
jo
cmp
push
lea
jbe
test
mov
inc
bt
add
xchg
xadd
stc
mov
rcr
cmp
movzbw
setle
add
ror
sar
movl
bsf
sub
mov
clc
bt
stc
cmp
jmp
adc
pusha
pusha
push
lea
jmp
jae
and
xchg
push
cmp
ret
fnstenv
mov
lahf
adc
push
enter
jmp
mov
mov
or
mov
and
dec
jmp
andb
mov
xchg
clc
fistl
icebp
lahf
ret
dec
mov
mov
mov
cmp
mov
out
test
inc
repz
pop
xor
xor
or
cmc
mov
dec
sub
mov
bsf
mov
test
cmp
xor
pusha
repnz
call
mov
mov
push
pushf
pushf
push
pushl
ret
cmp
jmp
ret
push
mov
das
push
shll
aam
push
out
sbb
lods
push
or
xchg
cmpsb
cmc
push
arpl
pop
stc
stos
sbb
xchg
mov
and
ja
inc
nop
pop
lcall
popa
bound
push
cmp
sub
jge
fcompl
xchg
mov
out
lea
pop
dec
pop
ds
sbb
jg
sbb
lret
mov
push
popa
aam
ljmp
ss
mov
dec
push
adc
push
movw
mov
lea
jmp
setge
sets
stos
not
pushl
setb
mov
lea
jbe
pushf
pusha
lea
call
push
jmp
cmp
pusha
jmp
icebp
pop
fwait
imul
das
adc
jecxz
adc
ds
mov
push
mov
xor
xor
pop
addr16
push
aam
mov
fsubrl
repz
int
pop
ljmp
sbb
jecxz
push
repnz
nop
int
sub
jns
fcompp
mov
pop
stc
fidivl
pop
sub
push
add
cltd
cmp
xor
xchg
dec
xchg
dec
imul
decl
lret
or
rclb
push
stc
nop
movsl
mov
gs
xchg
push
pop
test
dec
test
movsl
in
test
in
adc
je
int3
leave
xchg
clc
stos
and
sub
arpl
addr16
in
iret
rcrl
or
les
jle
lret
dec
push
xor
jmp
pop
in
mov
or
or
adc
push
call
scas
call
loopne
mov
decl
daa
js
push
or
mov
add
mov
pop
mov
or
test
jb
sub
hlt
adc
pop
aad
adc
or
int3
or
rclb
cmc
orl
jge
sub
mov
jbe
js
dec
popa
push
out
popf
pusha
mov
cmp
jmp
push
les
repz
xlat
sbb
ljmp
jne
add
or
ljmp
daa
jmp
pop
movsb
jmp
dec
or
push
int3
adc
add
icebp
bound
loop
loope
cmp
es
int
dec
mov
sahf
outsl
push
mov
xlat
jb
mov
dec
pusha
repz
lret
mov
gs
sbb
ds
push
cld
int
outsl
rcl
jae
and
pop
mov
pusha
jp
jb
sub
mov
mov
stos
in
xor
fsubl
insl
cmp
dec
leave
mov
mov
cmp
xor
add
jne
inc
jmp
mov
xchg
add
enter
idivb
pop
das
push
push
test
push
shl
insb
in
imul
repz
lea
jne
pushf
jmp
mov
or
mov
push
cmpsl
sub
cmp
cld
lods
into
fbstp
mov
add
adc
sbb
hlt
out
inc
and
stos
pop
enter
inc
int3
xor
or
popa
push
addr16
mov
lcall
mov
jge
ds
es
rorb
xlat
and
sbb
arpl
out
mov
fs
mov
rcll
adc
mov
stc
stos
push
subb
pop
adc
adc
inc
cmp
jb
cli
xor
mov
ljmp
out
adc
enter
lods
idiv
in
lods
out
bound
decl
add
push
push
pop
dec
mov
int
mov
mov
idivb
xor
sbb
int3
sbb
iret
mov
mov
push
out
inc
xchg
addl
es
lret
stos
cltd
jl
jecxz
adc
les
hlt
mov
jnp
xchg
je
jp
rolb
jae
dec
imull
insl
dec
movzbw
call
repnz
mov
mov
pushf
pop
dec
outsl
jo
bound
push
sbb
sub
jmp
bswap
jmp
insb
mov
sbb
or
or
xorb
ficoml
mov
es
ja
sbb
lods
and
test
or
mov
sbb
shlb
sub
and
xor
stos
mulb
popf
jno
ret
jmp
jmp
call
aam
mov
scas
mov
and
or
push
inc
sub
inc
xchg
and
mov
mov
negl
movb
in
shlb
ljmp
imul
lret
dec
cwtl
pop
pop
ds
inc
xchg
mov
icebp
push
cmp
and
hlt
xchg
fwait
sbb
cld
add
pop
mov
dec
add
xchg
pop
test
popf
add
mov
pushl
call
lea
jne
sub
mov
bsf
bsr
mov
pusha
call
out
cmpsb
decl
mov
mov
aad
negl
out
mov
sbb
push
dec
mov
mov
push
and
add
and
lds
testb
or
addr16
call
sbb
cli
imul
adc
in
out
xor
fildll
sub
mov
mov
inc
xchg
out
les
jbe
cld
aas
mov
rcl
xor
imulb
push
daa
xchg
mov
mov
shlb
popf
cmp
out
lea
jbe
call
stc
test
jmp
pusha
lea
jae
sar
mov
clc
mov
cmc
not
cmc
mov
pushf
pushf
test
sub
test
pusha
pushf
cmp
repnz
pushf
jmp
xchg
or
decl
and
xlat
push
dec
jns
sbb
addr16
rorl
bnd
mov
push
leave
mov
popl
sub
push
pushl
das
bound
fwait
out
popa
test
push
nop
jno
int
ds
cmp
mov
pop
fmull
insl
and
jg
dec
sub
sarl
scas
aad
rcll
and
jno
lahf
dec
cmp
cmpsb
cmpsl
pop
and
cmpb
mov
dec
in
mov
es
adc
push
in
jae
inc
lcall
mov
mov
cmp
pop
push
in
add
add
mov
xchg
cs
dec
pop
stc
out
add
xor
lcall
jbe
cwtl
inc
in
add
lcall
clc
xor
ss
int
fs
mov
repnz
lds
mov
pop
sub
lret
dec
mov
out
les
cmp
mov
push
das
push
push
xchg
xchg
icebp
mov
mov
jno
inc
pop
mov
test
xchg
inc
imul
sub
shlb
sbb
test
jo
push
in
jge
icebp
neg
jns
imul
jae
xor
jecxz
sub
mov
cmp
cmpsl
ret
mov
adc
shrl
rorb
xchg
fists
std
jns
nop
add
bound
sbb
repnz
js
rol
mov
stos
inc
ljmp
xchg
lret
leave
iret
jb
lods
aas
push
cmp
popa
mov
addr16
push
push
mov
xchg
int
sub
clc
test
sbb
scas
jnp
push
mov
lea
mov
mov
dec
leave
xor
rcll
sbb
fisttpll
pop
daa
shlb
mov
inc
mov
adc
pop
jne
jae
and
xor
jp
xor
cltd
loope
xor
mov
dec
jb
cs
push
mov
ljmp
and
and
imul
lds
test
mov
mov
cmp
add
jp
loope
stc
jns
test
enter
pop
mov
std
jmp
dec
stos
pop
cmpsl
mov
aaa
cltd
sub
mov
mov
dec
xchg
cld
sahf
sbb
add
js
int3
jp
out
repnz
aas
ss
pop
mov
rcrl
pop
mov
cmp
sti
push
mov
call
decl
mov
inc
push
int
xor
xchg
pop
fnstenv
scas
faddp
add
rorl
mov
inc
xchg
daa
or
stos
aad
cs
push
in
sub
clc
add
mov
xchg
ror
dec
rorb
icebp
jge
push
xchg
addr16
mov
mulb
fldl
out
xlat
fistpl
lret
test
insb
mov
ret
add
xchg
loope
lahf
adc
les
dec
mov
cmp
push
mov
mov
cmp
iret
mov
mov
fwait
stos
push
inc
jg
pop
test
mov
add
fcos
push
ret
mov
adc
mov
insb
insl
dec
iret
fnstcw
pop
dec
mov
idivb
test
mov
outsl
popa
adc
jb
inc
mov
les
hlt
mov
flds
push
adcl
movsb
mov
xor
xchg
sti
js
int
idivl
mov
mov
dec
jns
jnp
imul
mov
out
roll
movsl
lods
sarb
push
pushf
add
jne
cmp
mov
mov
fisubrs
inc
xchg
divb
cltd
mov
push
and
mov
add
repz
addr16
aad
call
in
sub
icebp
inc
mov
inc
mov
mov
aaa
mov
mov
xchg
popf
dec
in
mov
enter
dec
adc
sub
test
cmp
xor
aas
movsb
ja
xchg
mov
adc
lret
gs
fidivs
jle
out
cmpsl
cmp
stos
push
push
jno
into
shrl
scas
xchg
jnp
inc
shlb
adc
dec
xchg
repz
test
bound
js
jg
test
ficoml
fdivs
in
ja
stos
xor
jno
gs
cmp
ror
or
pop
xor
aam
fdivrl
es
inc
mov
mov
xchg
dec
mov
jo
data16
aaa
jns
enter
sub
test
or
and
fmuls
xor
pop
in
and
mov
jecxz
sahf
fcmovne
adc
clc
es
xlat
jo
shlb
icebp
lea
loopne
mov
aas
sub
dec
jns
sbb
add
popf
flds
adc
loope
mov
shll
mov
mov
inc
mov
mov
test
cmpsb
cwtl
and
rclb
inc
out
jae
sti
add
cmp
cmp
mov
out
iret
int
fdivr
dec
mov
sub
bound
mov
push
pushf
outsl
xchg
jb
xorl
loop
repnz
fcoml
les
push
sub
adc
je
iret
mov
dec
outsl
mov
xor
xor
lcall
mov
ss
and
mov
pop
sbb
xor
pusha
ds
test
jae
cmpsl
add
divb
inc
xor
test
sbb
and
mov
movsb
cmpsl
inc
mov
rep
sbb
mov
push
pop
sub
cmpsl
mov
fldcw
fwait
mov
mulb
lods
dec
sahf
mov
lret
or
xor
jge
in
popf
mov
mov
jb
adc
cs
mov
mov
shrb
loope
xchg
iret
hlt
into
and
fistl
in
mov
mov
fisttpll
stc
or
pusha
lock
iret
mov
hlt
rol
jno
mov
jecxz
stos
or
xor
cmp
rcl
mov
or
neg
iret
pop
fdivl
push
sbb
into
mov
cmp
or
push
mov
push
loopne
fcompl
xorl
inc
pop
aas
jle
mov
pushf
cs
xor
pop
rcrl
mov
inc
scas
jg
mov
sbb
out
orb
and
leave
ss
xchg
int
popf
sti
inc
or
scas
cmp
lea
inc
and
mov
ljmp
andb
cmpsl
shll
cwtl
jmp
aad
pop
pop
or
daa
lret
movsl
xchg
and
mov
sbb
sbb
xlat
pusha
dec
fnstenv
out
xchg
pop
and
jno
adc
fbld
lret
mov
inc
in
pop
and
pushf
xchg
push
mov
ret
lods
sub
add
cmp
daa
mov
pop
cmp
lds
push
jp
ror
mov
ficoml
stc
add
mov
sub
movb
clc
mov
and
out
icebp
or
dec
leave
xchg
movsl
int3
push
mov
cmp
mov
std
add
jns
rolb
test
and
mov
and
adc
js
mov
imul
pop
cmp
mov
ret
rcrl
repnz
rcrb
stc
fistpl
cmp
adc
push
aam
scas
sar
out
mov
push
mov
leave
pop
mov
or
sbb
pop
in
in
xor
mov
subb
loopne
mov
movaps
push
inc
adc
jg
scas
xchg
and
mov
test
data16
push
mov
loopne
outsl
dec
scas
mov
push
cmp
lea
pushf
repnz
out
xor
iret
subb
mov
dec
test
in
inc
or
leave
mov
mov
and
mov
xor
icebp
xchg
test
xchg
int3
int
and
xchg
sub
sbb
rclb
leave
push
test
push
or
push
shrl
push
insl
aad
or
outsb
shll
pusha
arpl
ret
gs
or
sarw
js
dec
jp
jge
jl
jg
jle
jno
jo
dec
jb
jne
je
ja
jbe
mov
mov
aad
or
cmc
addb
test
xchg
rcrl
lcall
pop
ret
adc
icebp
dec
push
ret
sbb
sub
es
dec
roll
push
pusha
dec
jle
cltd
aad
or
inc
enter
hlt
stc
mov
inc
cmp
push
dec
or
lods
rol
cmc
shr
dec
cli
ret
or
adc
daa
inc
dec
rcrl
lea
ret
xchg
aad
sbb
cmc
fucompp
dec
out
imul
mov
mov
sub
adc
and
bound
cmp
adc
fildl
or
mov
sub
andb
mov
mov
mov
mull
mov
or
repnz
adc
aad
add
and
jecxz
das
mov
and
adc
scas
imull
jp
into
jge
sub
std
das
adc
cwtl
and
iret
jmp
add
aaa
and
sub
lods
es
rcr
or
push
enter
int3
adc
lret
frstpm(287
add
push
adc
imulb
test
arpl
outsb
push
lds
mov
jecxz
mov
aas
add
stos
out
push
add
es
pop
ffree
iret
add
std
fadd
dec
and
lahf
add
repnz
cmp
fmuls
cmp
mov
int
and
pop
das
stos
imul
sbb
int3
shl
xchg
clc
stos
add
insl
cmp
adc
push
repz
dec
cmp
mov
and
pop
mov
add
push
sub
add
shrl
fcomip
or
adc
sub
or
rcl
push
lcall
mov
adc
fnstenv
sub
shll
mov
cmp
iret
and
pop
mov
sub
roll
or
fimull
icebp
lods
shll
lds
cs
push
inc
daa
add
int3
inc
cmpsb
or
ret
mov
iret
push
xchg
lret
fninit
add
stos
leave
jmp
pop
test
pop
adc
hlt
das
and
imul
pop
aaa
roll
mov
sub
jge
enter
mov
in
loopne
fldcw
or
adc
clc
lock
rcrb
xchg
imul
enter
rorl
xchg
or
inc
lock
jl
inc
mov
or
ljmp
lret
sbb
call
scas
cmc
fisttpl
jne
mov
mov
test
pop
jecxz
in
stc
loopne
in
push
scas
push
pop
out
stc
adc
sbb
ja
in
mov
jnp
sbb
pop
jle
enter
and
daa
leave
mov
add
cmpl
shll
pop
call
jno
dec
add
and
xor
cmp
aad
fdivs
mov
js
loop
push
pusha
inc
fadd
mov
xchg
cmp
shl
mov
adc
loop
pop
dec
in
jmp
in
iret
imul
loope
fidivrs
outsl
mov
push
jo
mov
mov
mov
in
loopne
cltd
stc
idiv
lock
repnz
jecxz
mov
hlt
repz
insl
mov
jne
jg
outsb
jno
jle
push
stc
mov
pop
add
xor
dec
pop
iret
or
lock
mov
dec
xor
mov
in
int3
in
jae
and
loope
mov
or
jne
or
test
mov
xchg
mov
mov
leave
bound
xor
enter
or
pop
lock
xor
flds
mov
xor
rcrl
mov
or
shr
hlt
popa
gs
jle
fwait
or
mov
iret
mov
test
fstl
shrl
add
add
mov
jge
xor
movsl
out
jmp
stos
arpl
sbb
lret
mov
pop
mov
mov
inc
lea
jle
xor
daa
gs
and
dec
cmp
daa
or
movsb
xor
je
xor
and
xchg
or
shrl
and
scas
cs
mov
xorb
and
scas
arpl
mov
push
adc
adc
adc
or
repnz
sub
push
inc
mov
lds
jno
repz
popf
leave
add
ret
shl
leave
push
jne
ror
sbbl
adc
rorl
jno
and
and
adc
mov
das
adc
or
xor
mov
cwtl
and
add
pop
mov
mov
xchg
pop
mov
push
int3
lret
mov
mov
mov
add
jns
flds
jns
clc
cmp
xchg
and
adc
sub
rcrl
out
sbb
movsl
adc
loope
lret
sbb
imul
jns
movsl
cmp
iret
clc
fidivrs
mov
enter
xchg
sub
shll
and
sbb
shlb
pop
inc
pop
and
pop
and
loope
mov
push
add
dec
add
mov
add
adc
in
loop
xor
std
shl
mov
pop
fidivs
mov
ljmp
push
in
mov
sbb
call
insb
enter
enter
or
lret
lds
adc
jb
add
jb
or
test
ss
rol
lret
fildl
enter
shlb
shr
mov
movsb
pop
int
inc
std
or
sbb
loope
jmp
pop
ficompl
leave
mov
out
leave
mov
or
xor
in
jge
in
mov
jne
fiadds
xor
push
dec
mov
inc
lods
dec
aad
aas
shll
pop
jns
int
mov
jbe
dec
lds
out
inc
xor
xchg
dec
lock
leave
shlb
pop
push
and
lods
in
movsl
jne
leave
enter
fs
loopne
pop
mov
lahf
lret
jmp
mov
lods
loop
jno
inc
add
lods
sbb
mov
xchg
sbb
lock
or
int3
repz
mov
and
mov
jb
and
sahf
rcrl
sti
movsl
cmpsb
jae
rcr
and
dec
mov
sti
lods
ljmp
adc
shll
jo
ror
mov
ljmp
jo
out
cld
out
sbbl
mov
mov
lds
repz
stos
lock
insb
pop
imul
mov
mov
xor
mov
inc
movq
or
hlt
mov
adc
shll
xorl
lods
fidivs
test
xor
dec
hlt
mov
fisubrs
iret
mov
fcoms
dec
in
xor
and
mov
xchg
je
roll
icebp
and
scas
mov
call
dec
sbb
cmc
lcall
or
clc
movsl
ss
mov
loope
cmc
mov
jno
dec
rolb
mov
push
leave
pop
mov
inc
jno
sbb
push
pop
lea
imul
shrb
leave
ss
mov
fwait
pop
mov
pop
fsubrs
in
int3
lds
mov
inc
clc
ret
loop
mov
mov
stc
adc
jns
and
mov
movsl
and
add
push
bnd
xor
add
shrb
cltd
xchg
in
leave
sbb
add
sub
movsb
jb
les
mov
xchg
je
or
inc
lret
fwait
ret
push
push
hlt
mov
and
lock
into
and
ds
fnstsw
mov
xor
dec
push
and
mov
sbb
add
cmpsl
addr16
sarl
pop
ljmp
int
dec
mov
jo
inc
xchg
mov
pop
dec
std
aad
add
shll
dec
fbstp
ja
add
sbb
jbe
or
and
mov
adc
mov
aad
fadds
lret
inc
repz
mov
sbb
lock
aad
sub
test
mov
mov
daa
aas
repnz
mov
aad
mov
jle,pn
in
inc
les
icebp
sub
or
mov
repnz
mov
leave
cmc
test
les
div
roll
inc
int3
testb
lds
push
cmpsb
les
xor
aas
sub
test
sbb
xchg
roll
lods
rorl
fldenv
sub
fstl
test
sub
subl
divb
sub
mov
inc
mov
sbb
clc
mov
sbb
cmp
add
fdivl
loope
mov
add
xor
mov
out
jmp
pop
jge
mov
les
or
mov
jo
xor
lea
sbb
add
jbe
test
cmpsb
dec
ss
inc
mov
shlb
sahf
aad
mov
jb
push
or
ds
sbb
icebp
xor
push
mov
aad
shll
mov
and
test
dec
mov
jb
jle
jecxz
mov
dec
movsl
int
insb
pop
add
fists
orl
scas
sbb
fwait
inc
xchg
or
movsb
outsl
out
add
insl
test
pop
lret
mov
lret
aad
jmp
xchg
repz
imul
lea
dec
ret
add
jns
shr
mov
lock
jmp
aad
adc
addb
pushf
inc
orl
sub
xor
sti
jmp
inc
lret
sbb
sahf
cmpb
cwtl
push
inc
in
les
int
sub
push
mov
jo
sub
sbb
xorl
lret
filds
fldcw
push
sub
push
dec
dec
cs
sbb
lret
or
xorl
xchg
inc
jb
addb
cmp
cmp
test
or
lods
adc
inc
in
pop
ss
sarb
dec
xchg
hlt
in
mov
mov
rorb
dec
cmc
imul
dec
ss
neg
arpl
in
lret
mov
mov
das
sub
push
sbb
inc
hlt
arpl
je
fcompl
rclb
jae
je
xchg
xchg
out
mov
or
xchg
imul
mov
mov
mov
xlat
dec
fwait
lods
out
jl
movsb
inc
mov
pusha
mov
sarb
imul
sub
rolb
roll
lret
jbe
into
mov
xchg
out
xchg
int
clc
aas
lret
das
shll
mov
out
fbld
mov
roll
inc
shl
mov
ljmp
jbe
insb
sub
cmc
sarl
or
or
sub
mov
mov
mov
jg
fsubrl
dec
inc
dec
test
mov
dec
pop
sub
addr16
sbb
xor
dec
movsb
fwait
or
cmp
mov
pop
and
xorl
repnz
aad
aam
cs
enter
inc
hlt
inc
jmp
mov
pop
mov
mov
dec
sbb
xor
jbe
xchg
repz
jnp
test
repnz
test
cld
cli
lret
test
mov
xchg
adc
adc
testl
stos
movsb
push
mov
inc
aaa
adc
inc
jnp
push
sub
jno
or
dec
sarb
jmp
aad
sti
jae
shrd
or
ret
lahf
mov
fcmovb
aam
shrb
push
mov
out
lret
cli
jo
int3
mov
test
mov
dec
sbb
aam
inc
out
or
mov
dec
js
daa
ja
add
mov
testb
ljmp
lcall
fwait
leave
mov
hlt
or
xor
ss
lahf
add
jg
das
inc
je
gs
or
lods
cmp
lcall
scas
jbe
js
mov
jbe
jge
mov
adc
xchg
or
mov
add
jmp
jbe
in
jbe
mov
ja
mov
cwtl
pop
iret
sahf
nop
and
mov
sub
add
dec
shl
into
sub
and
rcll
dec
imul
mov
test
loopne
xor
mov
arpl
add
sub
cmp
pop
dec
mov
xor
xchg
sub
sahf
cmp
jmp
mov
cmp
adc
into
cwtl
iret
leave
fxch
xor
sbb
pop
pcmpeqb
decb
pushf
mov
adc
aaa
lahf
lea
loope
inc
rolb
ficoml
mov
or
add
int3
inc
cmp
lods
and
popf
adc
and
lahf
ror
test
fisttpll
push
int
divb
nop
cmpb
loop
inc
mov
rol
add
xchg
ror
leave
cmp
pop
mov
cmc
int
sbb
jg
xlat
or
jae
nop
adc
mov
jb
lods
mov
enter
pusha
push
shll
push
rclb
adc
fbstp
dec
jns
push
cmpl
jne
sub
xor
rcr
xorb
je
repz
push
dec
inc
test
rorb
andl
jne
das
ror
call
mov
mov
orl
dec
mov
lret
rol
push
pushf
inc
fcompl
idivb
pop
pop
shr
xchg
adc
pop
mov
jns
pop
mov
xorl
movsl
pushf
fldt
cmp
jo
lods
outsl
out
jae
jo
add
rcll
mov
add
jns
pop
dec
loopne
movsb
jno
jns
mov
shrb
nop
xorb
dec
movsl
setae
repz
andb
mov
fcoml
mov
mov
int3
fsubl
sbb
rdmsr
dec
jmp
dec
mov
sub
mov
xor
push
stos
inc
mov
cmovs
and
pop
arpl
loopne
mov
stos
negl
xor
test
inc
insb
daa
imul
iret
pop
in
mov
das
cmc
int3
shrb
xchg
mov
test
mov
mov
dec
and
iret
or
xchg
dec
fsubrl
movsl
ss
lods
lods
iret
lods
dec
add
or
push
inc
mov
cld
ficoml
dec
movsb
xchg
and
iret
rcr
repnz
mov
mov
loop
mov
pop
adc
arpl
fistl
mov
mov
cltd
sbb
add
dec
lret
mov
into
dec
xor
cmp
in
lcall
jnp
xorb
movsl
pop
add
xor
mov
lock
in
sbb
inc
sti
shr
jg
dec
ficompl
xchg
xchg
mov
cmp
mov
xchg
mov
inc
ljmp
vprotw
sbb
in
dec
jl
xchg
popf
adc
cltd
inc
inc
cltd
push
popl
mov
lret
jne
jl
stos
mov
adc
inc
or
jmp
xor
sbb
test
lea
rol
or
sbb
jae
popf
movsb
hlt
int
xchg
xor
push
mov
das
dec
ss
sbb
pop
mov
jge
cmp
ror
xchg
push
pop
jbe
pop
out
ss
cmp
ljmp
clc
cmp
mov
sbb
shl
fiadds
out
js
scas
or
or
sbb
test
sbb
or
shlb
jmp
cmp
adc
ffree
popf
mov
lea
repz
inc
loop
out
stc
enter
jg
mov
lds
fisubrs
xlat
or
cld
loop
cmc
ficompl
into
dec
push
sarb
pop
sbb
lds
xchg
pop
or
iret
sbb
and
test
test
arpl
movb
in
not
push
rclb
xor
sub
das
cmp
jmp
test
and
repnz
add
leave
mov
repnz
sbb
mov
xchg
pop
les
jmp
xchg
ljmp
inc
jecxz
and
in
lods
jmp
test
hlt
jns
leave
jmp
add
or
dec
mov
lret
sti
jmp
hlt
xchg
mov
movsb
jg
or
aad
mov
add
xchg
jle
jg
sub
jmp
cmp
push
xchg
lcall
cmc
insb
inc
imul
sub
jecxz
adc
cmp
pop
inc
cmp
sub
mov
xchg
les
sbb
dec
xchg
into
cmp
push
mov
jg
aas
xorl
lock
mov
test
pop
outsl
negl
ror
mov
mov
sbb
ljmp
inc
out
call
lret
pop
fisttpll
sbb
push
test
jae
pop
pop
and
in
dec
lock
int3
adc
out
dec
into
push
test
shlb
addr16
push
ret
sbb
out
hlt
imul
or
leave
jnp
inc
imul
addl
lods
adc
or
aaa
cmp
rclb
cmp
cmp
mov
fistl
push
adc
mov
or
mov
shrl
push
adc
pop
in
icebp
add
sysexit
pop
push
push
jns
sahf
int
repz
push
test
xchg
push
loopne
sbb
dec
out
jne
fs
int
cmp
fs
mov
lret
imul
and
sub
sbb
lods
cmc
insl
rorl
fiadds
add
jo
into
mov
gs
cmpsl
cmp
jo
mov
out
push
call
xchg
add
push
xchg
pushf
loopne
gs
dec
dec
fdivp
movsl
fistpll
sbb
or
xor
mov
mov
ficoms
pop
leave
dec
bound
bound
or
mov
and
test
xor
jb
div
dec
cld
mov
daa
cmp
lret
add
jae
arpl
leave
js
xchg
popa
pop
mov
sbb
jae
xchg
add
arpl
dec
rcll
xchg
jmp
inc
test
aam
cli
xchg
stc
or
arpl
sub
jb
xchg
or
test
shl
cmc
mov
or
mov
rcl
sarl
scas
es
jg
in
xchg
pop
repnz
shl
pusha
addr16
sarb
cmc
lods
push
scas
clc
cmp
push
popa
test
imul
mov
outsb
inc
gs
inc
jns
fwait
outsb
js
sub
inc
jg
lcall
jg
movsl
add
cwtl
int
rep
inc
sub
aaa
in
outsb
jb
jge
lahf
and
sti
sbb
cmp
or
dec
fisubrl
or
rorl
into
cmp
ss
cmp
jns
xor
cmpl
ror
mov
dec
lock
int
out
dec
lods
inc
mov
outsl
lcall
sub
stos
lds
xor
xor
mulb
fdivs
dec
push
jl
icebp
outsl
mov
subl
mov
int
xor
test
dec
cmpsl
push
outsb
cltd
adc
rcrb
insb
sub
insl
cmpsb
xor
jne
rorl
repnz
outsb
enter
ret
lock
test
inc
arpl
arpl
ljmp
push
xchg
dec
cmp
imul
test
push
test
insl
adc
clc
test
leave
push
rep
andl
aaa
push
and
fildl
inc
cltd
mov
insl
les
jge
mov
adc
enter
jge
decl
mov
in
mov
cmp
cld
seto
insl
lret
and
jno
push
xchg
sbb
push
jae
push
jno
cli
jae
push
add
pop
fistl
push
out
dec
cmp
dec
leave
fildll
pop
aas
ret
push
repz
sahf
imul
pop
push
sbb
pop
pusha
ret
sub
imul
dec
mov
pusha
aad
jmp
sbb
sbb
mov
hlt
push
aas
push
cmpl
loopne
jmp
fisttpll
xchg
push
inc
fistps
inc
fldenv
xchg
movsl
inc
mov
fnstcw
mov
jns
repz
mov
inc
test
inc
mov
leave
jns
cwtl
and
shrl
cmp
xchg
mov
mov
gs
hlt
dec
movsl
adc
lea
insb
aam
roll
pop
lds
jno
lds
jl
rcll
cwtl
in
aam
jle
add
call
std
rcrb
xchg
inc
cwtl
daa
out
repz
mov
jecxz
xchg
fs
std
neg
dec
push
dec
inc
mov
rorb
in
xor
pop
push
mov
imul
sarb
or
std
test
mov
ret
leave
and
mov
hlt
push
mov
mov
mov
ffree
jb
bound
loopne
icebp
push
hlt
dec
mov
sub
mov
push
mov
jae
dec
leave
arpl
or
fmul
cli
mov
in
mov
jae
fwait
std
shrb
pop
out
repz
push
inc
xor
int
jl
adc
test
test
inc
int
jbe
and
les
sbb
mov
mov
mov
add
icebp
jmp
dec
jg
rcrb
add
iret
pop
pop
add
lock
mov
and
cld
dec
js
xchg
mov
outsb
mov
bound
jae
push
movd
leave
cwtl
cmpsb
das
test
push
jl
push
add
call
sbb
cmp
push
js
leave
fsubrs
clc
test
negb
or
push
or
mov
adc
fisubrs
add
rcr
jmp
xchg
push
dec
push
mov
aad
jp
push
aam
test
out
cmpsb
les
adc
mov
dec
fs
adc
xchg
mov
rorb
mov
mov
ret
and
mov
cli
sbb
sub
pop
cmp
movsl
enter
mov
inc
int3
out
inc
lret
lcall
sbb
enter
lods
push
fnstsw
xor
jl
notb
ret
and
mov
add
movsb
ret
push
sub
lods
sub
in
subl
int
xor
mov
test
stc
mov
push
int
or
repnz
dec
push
pop
cli
ret
rolb
xor
icebp
mov
mov
dec
nop
inc
inc
mov
outsl
or
dec
xchg
push
sub
add
cs
jmp
push
daa
aaa
xlat
fisttpll
int3
xor
mov
insl
sub
pop
dec
jns
fisubrl
cwtl
inc
mov
icebp
cmp
shlb
fidivrl
push
mov
sbb
jns
out
je
push
cmpsl
mov
xchg
enter
in
pop
jne
insb
jb
rol
shl
rclb
mov
dec
addr16
sub
xlat
mov
pop
xor
scas
push
in
mov
stc
pop
push
or
ret
xlat
cli
sahf
rcrl
cmpsb
lret
daa
inc
mov
sbb
xchg
aad
test
pop
sub
int3
repz
rorl
dec
inc
in
xor
inc
push
loopne
mov
jns
jge
or
xorb
cwtl
mov
push
sbb
popf
fstps
xor
aad
add
mov
fwait
addr16
imul
xor
mov
insl
stc
lret
xor
cmc
add
jecxz
cli
in
pop
pushf
lock
sbb
jo
mov
pop
sbb
jmp
mov
inc
lods
clc
lock
pop
jge
dec
push
mov
repz
mov
cmpsl
lahf
ret
jl
jne
ret
icebp
mov
and
jg
xchg
gs
xchg
fdiv
jbe
subb
in
inc
mov
adcb
push
mov
mov
mov
repz
shrb
incb
jl
out
imull
mov
inc
es
and
cmc
and
pop
roll
add
cld
mov
xlat
rol
ds
pushf
psrlw
inc
jecxz
mov
in
shl
jge
neg
imull
scas
pop
mov
jle
xchg
insb
mov
iret
aad
fwait
shlb
pop
pop
test
xchg
leave
sub
xchg
rcl
dec
shll
popf
shl
popf
lcall
aam
cwtl
stos
fnstenv
clc
dec
or
inc
dec
jge
dec
xchg
js
xor
add
inc
add
dec
lds
and
sbb
std
fisttpll
lds
rolb
ret
push
jno
mov
aam
inc
loopne
test
test
int3
xor
adc
jge
shrl
rcrl
jns
xchg
test
pop
rcrb
sar
test
stc
shll
xor
insl
dec
xor
daa
xor
test
pop
lds
push
xor
lret
jns
dec
mov
sarb
cmp
cmp
adc
and
cwtl
mov
xchg
and
je
stc
shll
into
cli
cwtl
mov
sbb
lock
mov
fdiv
xchg
pop
out
orb
sub
push
dec
pop
adc
pop
xchg
jns
test
adc
popl
mov
sbb
sti
arpl
dec
inc
adc
ret
push
dec
repz
push
lret
loope
mov
inc
xchg
les
lds
test
rclb
loopne
fsubrs
std
push
shll
adc
inc
int
dec
ret
aad
inc
mov
insl
jge
icebp
movsl
adc
push
jno
cmp
jge
adc
jnp
xlat
insl
in
out
cmpsb
mov
sub
mov
leave
fincstp
inc
mov
pop
mov
shlb
aam
fmull
push
add
js
push
stc
pop
xchg
pushf
les
pop
sub
inc
inc
push
xor
movsb
lret
ljmp
negl
bt
mov
push
es
lock
cmp
imul
data16
push
jecxz
push
jp
dec
scas
in
jg
push
jno
push
or
je
aam
test
add
push
mov
jbe
shll
lret
pop
in
or
push
mov
inc
sub
push
add
hlt
jne
ret
into
mov
pop
cli
out
dec
xlat
stos
and
movsl
sub
out
ror
in
mov
mov
xlat
lcall
movsl
sbb
imul
dec
xor
mov
jns
jns
push
xor
xor
dec
shrb
in
dec
mov
sbb
testl
lahf
inc
xchg
inc
lret
pusha
fnstcw
fldcw
or
loopne
lcall
lods
movsl
into
ret
mov
xor
inc
gs
cmp
mov
lret
popf
mov
cwtl
mov
and
sub
fwait
pusha
add
int
xor
call
ret
and
ja
fst
mov
adc
add
inc
jno
adc
add
adc
lret
stos
cli
out
xchg
aas
sbb
orb
inc
inc
or
xor
xor
jge
leave
cmp
inc
dec
pop
or
test
popf
lahf
sbb
push
or
je
insb
aaa
mov
mov
rcrb
mov
ror
lret
push
fsubrs
xor
add
jns
fucomp
sub
loop
fcom
pop
sti
adc
fisttpl
mov
leave
lret
jb
or
enter
rorl
stos
inc
fcomps
mov
or
into
gs
xchg
and
arpl
dec
int
inc
cltd
inc
and
in
inc
or
loope
lahf
mov
fucomi
mov
test
or
xlat
shl
lret
addr16
inc
mov
add
jbe
rorb
ret
movsl
lods
int
aam
mov
out
sub
pop
icebp
xchg
test
mov
and
jns
adc
pop
mov
data16
dec
xchg
iret
push
pop
push
xor
xor
test
push
popf
mov
lods
xorl
cmpsb
call
aas
ss
cmovno
lret
sbb
ss
push
jle
dec
scas
xchg
push
inc
pusha
aam
jl
cltd
dec
nop
into
inc
pop
fnstsw
mov
mov
dec
mov
test
ljmp
inc
js
xor
loope
popf
int3
test
mov
jbe
inc
mov
gs
pusha
mov
and
neg
ficomps
movsl
sti
xchg
or
in
test
faddl
mov
repnz
out
jmp
ds
pushf
and
popl
lds
lret
mov
pop
jne
fisubrs
cmp
jp
repnz
dec
and
sub
sti
xor
arpl
je
add
mov
pop
inc
mov
cld
mov
pusha
adc
lret
scas
out
rorb
dec
add
sbb
arpl
int
xchg
popf
or
mov
mov
enter
dec
jae
dec
out
test
cmp
rcrb
dec
add
adc
dec
cmp
sbb
rcr
xlat
das
fsubrp
mov
inc
shr
sub
aam
dec
jge
repnz
sub
xchg
cli
sub
in
fucomp
leave
int
mov
dec
dec
addl
lds
sbb
push
lahf
inc
and
les
fdivrp
test
cmp
mov
mov
xchg
leave
loopne
or
mov
push
mov
jp
sub
push
std
gs
dec
arpl
rolb
dec
sbb
dec
leave
mov
icebp
mov
les
mov
out
fld1
enter
fidivrs
cmp
roll
dec
or
repz
dec
add
dec
xor
rorb
ss
mov
and
sahf
ss
push
jne
sub
dec
add
out
pop
das
adc
shl
rcr
fnstenv
jl
xchg
in
arpl
xor
or
sub
push
fsts
out
leave
xor
xchg
pop
clc
je
mov
adc
adc
cli
xchg
jae
or
adc
inc
add
loop
clc
leave
imul
test
in
mov
arpl
addr16
cvtps2pi
mov
gs
jns
std
pop
sbb
dec
or
outsb
cmpsl
pop
data16
dec
mov
inc
into
ret
movsl
dec
inc
fstpt
mov
cmp
clc
mov
pushf
or
lret
cmp
outsl
add
pushf
sbb
int
and
xchg
lahf
mov
inc
test
cs
int3
mov
icebp
xor
sti
jp
add
xor
or
ds
add
dec
and
or
fwait
loop
pushf
jp
sbb
xor
mov
mov
imul
dec
or
stos
jecxz
fcom
push
add
std
mov
and
pop
and
sbb
jecxz
xor
rorb
add
cltd
push
pop
xor
popf
fstps
sbb
and
xchg
xchg
xor
lret
stos
test
or
push
pop
mov
stc
sub
xor
lods
jb
mov
in
xor
enter
sub
add
bound
cmp
xor
and
jl
fbstp
div
adcl
xor
sub
or
adc
sarb
lcall
sbb
xor
push
mov
js
js
push
jns
loop
or
fiaddl
jne
xor
das
xor
in
pop
movsl
push
push
pop
inc
rcrl
lret
out
loopne,pt
mov
mov
sbb
fisttpl
xor
int3
mov
leave
inc
push
adc
pop
sub
xor
or
dec
add
int3
add
jne
pop
mov
and
ljmp
mov
out
in
pop
xchg
adc
ljmp
mov
sub
gs
or
test
push
lret
xor
adc
dec
cmpsb
mov
sarl
mov
push
shll
shrb
mov
jmp
adc
push
sub
icebp
lret
xor
sbb
out
sub
lods
mov
and
shlb
mov
sarl
repz
pusha
or
rolb
lods
dec
fcmove
sti
or
fwait
lahf
aam
icebp
adc
enterw
mov
xor
mov
xor
mov
sbb
sbbl
repz
int
pop
cmp
aaa
inc
pop
jb
or
lea
movsl
push
push
cld
xor
mov
or
sub
xchg
xchg
nop
cmc
mov
movsl
es
andl
cmpsb
adc
int
popf
fbstp
jnp
inc
rcrl
nop
xor
pop
xchg
push
addr16
add
or
testl
ds
jge
mov
xchg
jle
inc
push
arpl
cmp
lds
push
push
push
ds
negl
push
push
pop
fwait
or
idivb
push
push
inc
push
fucomp
sbb
jge
xlat
aas
or
test
aas
mov
push
adc
xchg
gs
sub
or
ss
push
inc
cmp
test
enter
cmp
lds
data16
test
aas
in
dec
cmp
xor
xor
shlw
mov
jne
cmp
imul
daa
cmp
lods
dec
sbb
cmp
test
jg
loop
popf
outsw
and
cmp
mov
cmp
das
dec
cmpsb
mov
inc
ret
leave
rorb
cltd
cmp
cmp
dec
xchg
bound
pop
dec
notb
pop
mov
stos
rcll
outsb
push
in
je
adc
cmp
mov
arpl
leave
xchg
in
movsl
or
push
jns
addr16
adc
cmpsl
pop
xchg
unpcklps
inc
ret
scas
and
cmp
bound
mov
arpl
mov
inc
inc
and
jg
outsb
jle
mov
xrelease
test
scas
push
pop
xchg
mov
fwait
adc
push
mov
stos
popa
lret
xor
and
push
mov
mov
int
popf
in
mov
jno
aad
gs
add
out
sub
push
out
pop
dec
adc
cmp
mov
sbb
add
xchg
xlat
dec
cwtl
mov
mov
and
fnstsw
and
jae
addr16
daa
rclb
cmp
xor
hlt
insl
xor
mov
add
stos
xlat
fidivs
ficompl
sbb
shlb
xchg
sahf
sub
stos
jmp
out
mov
rcl
loopne
test
pop
mov
das
rcrl
test
push
ret
sbb
xchg
leave
cmp
cmp
cmp
mov
movsl
sarb
das
sahf
nop
add
idivl
mov
sahf
das
icebp
mov
inc
loope
and
loopne
push
lea
addb
and
sbb
ror
lret
jge
mull
mov
jmp
jmp
shll
popa
or
out
sbb
popa
sbb
subb
rcr
loop
add
lods
test
in
sbb
aaa
cmc
movsl
xor
adcb
rcr
add
orl
mov
filds
mov
loop
stos
loope
xor
test
in
mov
jmp
fsubs
xlat
ja
mov
hlt
push
inc
in
lret
dec
jbe
jnp
mov
cltd
jbe
adc
or
repz
push
outsl
ficompl
push
xchg
leave
cmpl
ret
pop
mov
sbb
int
mov
mov
rcll
rclb
cmp
mov
dec
mov
or
repz
test
inc
mov
dec
and
or
vmovshdup
into
jne
jns
cmpsb
lds
sub
repz
jne
and
xor
insl
push
push
push
kandw
lods
shll
icebp
xor
mov
sbb
pusha
mov
leave
rorl
data16
rclb
and
add
push
les
leave
loop
pop
rcl
and
add
ljmp
cli
pusha
jnp
call
mov
and
aad
pop
shll
pop
pop
and
add
xlat
push
mov
mov
sar
and
xchg
inc
out
imul
aaa
inc
repz
call
cs
pop
addb
les
inc
lahf
push
hlt
sbb
aad
jp
sbb
pop
mov
lret
xchg
mov
and
mov
into
and
idiv
testb
fadd
xchg
xchg
mov
push
pop
iret
cli
xor
sub
lods
xchg
sub
out
xchg
mov
jle
and
mov
sbb
std
or
test
out
xchg
stos
movsb
inc
fdivl
jno
xor
jne
xchg
into
int
andb
fldcw
iret
shlb
mov
ss
int
cli
in
sub
jg
sbb
enter
jne
das
and
mov
fucom
in
pop
inc
inc
or
cmc
fst
lds
std
add
ret
test
iret
sub
push
mov
cmc
adc
inc
dec
or
mov
jp
and
push
ret
cmp
cwtl
jns
xor
or
das
jmp
xchg
rorb
pop
aad
lahf
dec
pop
hlt
wbinvd
sub
push
int3
xor
or
movsb
jle
sub
cltd
clc
cmp
mov
mov
rorb
push
arpl
dec
mov
xlat
iret
loope
and
mov
inc
or
mov
inc
pop
aad
add
movsl
insb
ds
in
mov
dec
mov
out
mov
icebp
rcrl
xchg
repz
sub
int
xchg
lock
subl
inc
mov
push
xchg
pop
shrl
jle
mov
shr
mov
xchg
jmp
movsb
push
les
and
add
mov
shrl
add
mov
ret
mov
jle
repz
imul
pop
mov
fistps
inc
or
lock
repz
dec
inc
add
mov
xor
pop
cmp
push
mov
fldenv
je
leave
ret
xor
int
in
repz
xor
rcll
xor
mov
outsl
call
add
aad
fmuls
add
adc
int
pop
or
sub
cltd
mov
or
adc
fs
jge
sbb
test
push
sbb
sub
jge
shlb
xchg
cwtl
add
adc
repz
lds
outsl
in
lret
mov
imul
clc
jno
arpl
pop
sub
rorl
jno
test
rorb
stos
cmp
lcall
in
or
add
push
outsl
sarb
jno
jnp
call
mov
inc
test
movsl
cmp
fistl
in
lock
mov
ret
fisttpll
and
xor
lock
pop
dec
push
dec
and
mov
ret
xchg
xchg
int3
lret
sbb
dec
test
cmp
in
adc
lds
dec
fcompl
hlt
outsb
mov
dec
dec
adc
leave
cmp
add
lods
cmp
inc
xor
call
scas
movsb
movl
subl
lock
test
clc
or
arpl
cmp
inc
jmp
inc
fdivl
adc
jp
push
pop
push
in
test
fldcw
push
xchg
jnp
mov
cmpsb
inc
jg
es
mov
xor
idivl
push
mov
add
jns
push
push
cmpb
and
pop
jle
pop
push
adc
out
cmpb
xchg
lods
enter
lret
jb
subl
pop
lea
mov
addr16
popf
sbbl
jge
jge
sarl
insb
xor
mov
sub
cmp
fwait
outsb
shlb
call
sbb
mov
xchg
xchg
mov
or
push
cltd
insl
fdivl
sbb
repz
inc
jecxz
ret
in
mov
out
mov
inc
dec
repz
cmp
clc
daa
mov
inc
lods
and
shll
das
test
iret
and
push
iret
cmp
mov
pop
jg
mov
addl
in
xor
lret
mov
jp
xor
or
sbb
mov
xor
push
icebp
mov
test
fisubrl
leave
mov
lret
jl
dec
inc
xchg
xchg
mov
dec
popf
lods
mov
sahf
pop
mov
mov
dec
sub
xchg
adc
lds
scas
sub
jmp
ljmp
jbe
repz
dec
stos
andb
mov
or
cmp
jecxz
pop
rolb
inc
adc
dec
xor
leave
shll
fldenv
hlt
mov
xchg
add
jge
aaa
xchg
adc
cmpsl
pop
shlb
popa
int
pop
rorb
insl
jnp
inc
aaa
popf
repnz
pop
adc
add
dec
pusha
lds
mov
sarb
push
aad
lret
test
jne
push
scas
jge
repnz
outsl
rcrb
jne
adc
dec
push
out
repnz
push
push
scas
bound
adc
mov
adc
lret
inc
insl
xor
adc
push
div
sti
ljmp
insl
mov
mov
jne
inc
sub
movsl
inc
jnp
repz
xchg
adc
mov
add
popf
inc
cld
imul
ja
test
aas
rol
push
xchg
xchg
pop
mov
push
pop
xor
lret
ss
adc
fmull
pop
cmp
jmp
std
out
leave
pop
popl
push
xchg
pop
mov
inc
jae
sbb
sbb
shrb
push
inc
dec
leave
gs
test
clc
sbb
push
mov
test
xchg
lea
sbb
xchg
icebp
push
xlat
mov
mov
test
cmc
mov
imul
cli
push
adc
out
add
pop
sub
jg
nop
inc
nop
pop
sbb
decb
jnp
push
imulb
repz
jne
inc
cmp
testl
cmp
add
test
pop
pop
push
mov
sbb
adc
push
mov
xor
inc
fsubl
leave
add
cmpb
insl
pop
testb
xchg
fwait
shl
mov
inc
push
test
subb
inc
ljmp
ds
jge
xchg
xchg
dec
cmpsb
std
dec
cmp
insb
add
cmpb
mov
dec
adcb
inc
push
dec
pop
shrb
xchg
std
cmp
push
add
dec
or
pop
jl
adc
add
leave
xor
and
or
xchg
fucomp
aam
jge
mov
cwtl
imul
add
iret
push
sbb
add
mov
cmpsb
add
rcll
jne
add
shr
pusha
and
sarb
imul
add
mov
ja
or
rcr
add
lret
mov
jbe
push
mov
xchg
imulb
je
dec
fimuls
add
mov
xor
rorb
and
cld
or
rol
or
sbb
std
rclb
add
rcrb
or
rcr
or
dec
lds
and
lret
or
jg
les
or
lds
out
fidivs
or
or
or
in
sahf
or
dec
or
out
xor
mov
les
or
xor
sub
adc
xor
dec
lahf
or
inc
or
movsl
ds
adc
or
adc
shlb
in
rorb
test
out
sub
fdiv
pop
dec
xchg
out
aam
addl
mov
push
andl
sub
add
adc
pop
ja
testb
test
mov
mov
stos
fwait
push
andb
outsl
in
sbb
neg
test
cltd
mov
iret
and
push
push
imul
lock
dec
xorl
div
sub
test
xor
gs
dec
lcall
mov
iret
in
icebp
cmp
loope
lea
mov
ret
fdivs
cwtl
ja
stos
mov
inc
dec
mov
inc
jne
aad
mov
or
stos
lahf
inc
add
cld
mov
pop
pop
pop
mov
movsl
mov
sub
sbbl
adc
cmp
xor
add
pop
shl
testl
xchg
xchg
sbb
fisttps
imull
test
mov
popf
bswap
mov
hlt
or
inc
push
lods
call
xchg
out
loop
jns
out
pushf
fisttps
xchg
mov
mov
mov
nop
or
shll
adc
nop
and
inc
imul
and
rolb
pop
adc
add
sbb
xchg
mov
add
dec
push
mov
rep
and
sbb
ret
inc
jge
fldt
pop
and
jb
cmp
xor
mov
xchg
jl
dec
mov
aam
xchg
adc
gs
xchg
out
scas
adc
sahf
bnd
push
dec
popf
repz
lds
je
push
dec
imul
lods
xchg
mov
xchg
jae
repnz
xchg
fldt
cli
repnz
jne
repnz
pop
aam
inc
mov
in
xchg
mov
cmp
imul
sbb
mov
roll
jne
cmpsl
leave
loopne
xchg
fstl
loop
shll
mov
fistpll
bndldx
jl
int
mov
enter
inc
inc
popa
aad
lock
lret
rol
cmp
insb
lock
pop
lock
sub
cmp
shl
lock
xchg
xor
mov
xlat
fnsave
mov
mov
daa
add
cmp
fmulp
mov
cmpsl
shlb
cmpsl
mul
xchg
xchg
cmp
sub
xor
out
sar
sbb
into
mov
fisubl
mov
add
in
imul
add
and
pop
and
dec
out
xchg
cli
es
jmp
sbb
xchg
cmp
and
add
xor
mov
jp
call
std
mov
push
mov
dec
lea
push
rclb
inc
xchg
and
imull
repnz
and
sub
mov
nop
pushf
ljmp
mov
sbb
idivb
push
inc
addl
mov
rcl
and
xor
sti
mov
fistpll
shll
out
add
add
aam
pop
sti
push
loope
push
mov
push
jl
mov
pop
dec
gs
pop
daa
jmp
movsl
xchg
mov
pop
add
sar
fidivrl
jmp
out
push
mov
xor
jae
mov
mov
gs
xchg
enter
dec
repnz
dec
cli
repz
out
popa
inc
lds
pop
shll
dec
inc
movsl
clc
add
adc
sbb
outsl
push
mov
imul
idiv
shld
aam
dec
daa
negb
lds
mov
xor
xchg
mov
dec
inc
mov
ljmp
xorl
cs
or
mov
add
mov
or
xchg
fadds
add
and
movsl
stc
or
mov
clc
add
das
dec
icebp
xor
pop
cmp
imull
out
ljmp
mul
xor
repz
idiv
imul
rcll
ljmp
dec
cmc
and
cwtl
inc
lcall
mov
sub
pop
jns
aas
adcl
inc
outsb
push
icebp
inc
stos
sbb
xchg
cld
popf
fldcw
stc
or
out
repz
and
mov
push
mov
sbb
pop
xchg
in
out
inc
xor
add
int3
call
hlt
jno
dec
pop
aad
cmp
aas
sbb
mov
jl
imul
in
shrl
jecxz
movsl
jp
nop
push
adc
jae
mov
jmp
test
adc
aam
rcll
test
daa
je
sub
in
sbb
pop
sub
add
jp
jns
push
or
stc
adcl
xchg
cltd
add
xchg
mov
sbb
inc
stc
clc
push
in
aad
push
jecxz
push
adc
loop
movsl
pop
not
das
fsts
into
test
mov
jge
xor
test
movsl
stos
xchg
daa
mov
jmp
push
pop
in
mov
xor
adc
inc
ret
into
loop
and
xchg
cmp
inc
jne
jecxz
push
and
call
jecxz
outsl
divb
rorl
sub
in
push
das
dec
mov
xor
mov
mov
mov
addr16
test
adc
pop
xor
cmc
icebp
shlb
and
mov
pop
xchg
rcr
jge
lea
or
shrl
inc
repz
jae
cmp
loopne
inc
jns
repz
mov
push
shlb
inc
stc
ret
fsubrp
xchg
in
jns
in
shl
test
and
mov
or
scas
loope
dec
or
daa
inc
push
stos
push
imul
sbb
ss
shrb
dec
and
push
add
xlat
cmp
add
xor
rcll
pop
mov
push
cmp
cmp
xchg
out
cmp
notl
iret
adc
dec
dec
mov
cmc
shr
sarl
push
scas
adc
call
iret
or
and
sub
popf
shll
jecxz
xchg
push
inc
cmpl
scas
inc
rorl
jge
mov
not
loope
lock
jns
gs
xchg
clc
insl
mov
cmc
fidivrl
adc
daa
push
cmp
inc
pop
push
inc
mov
fdivl
or
cwtl
adc
pusha
push
out
mov
ds
les
jns
ss
sub
pop
ljmp
xor
mov
push
lods
push
sub
mov
xor
sbb
dec
push
push
cmp
push
pop
repz
in
lds
js
mov
imul
fmuls
rcrl
rcll
repz
cld
cmp
imul
pop
rolb
ljmp
ljmp
adc
in
ljmp
pop
jmp
leave
dec
jmp
xchg
adc
cmp
les
movsl
pushf
xchg
dec
jecxz
lahf
sarb
adc
cmp
adc
sarb
xor
jecxz
inc
test
int
daa
sbb
cltd
mov
leave
mov
adc
mov
ss
in
jmp
subb
adc
rcl
je
mov
cmp
outsb
std
push
or
jmp
lods
xchg
mov
jle
jg
xchg
pop
add
loope
jmp
rcrb
jmp
sar
test
mov
scas
mov
decb
jae
add
mov
out
divl
addr16
xchg
xchg
scas
cmpsb
push
movl
xchg
pop
std
rorb
push
push
or
shll
into
jne
xlat
and
test
fstpl
cmp
push
rclb
xlat
out
pusha
pop
or
aam
xchg
cmpsl
fbstp
add
shll
sbb
xchg
aam
insb
loope
test
movsl
insl
lcall
test
fwait
aam
lahf
jge
sub
cmp
and
dec
aam
out
js
jl
addl
imul
sbbb
adc
cmp
mov
clc
jae
dec
dec
movsb
aad
mov
fimuls
aad
xchg
addr16
xor
movntps
push
dec
mov
mov
sbb
std
inc
xor
and
lcall
rcrb
cmp
dec
jb
pop
push
shl
sbb
mov
xchg
pop
push
rclb
sbb
dec
clc
jo
popf
lcall
sbb
add
leave
mov
add
sbb
or
mov
xchg
mov
mov
sbb
clc
sub
nop
cltd
rcr
test
lods
aam
sub
dec
dec
aas
aad
mov
sub
dec
lret
sub
inc
or
dec
lods
f2xm1
dec
data16
add
adc
inc
mov
cmc
into
jmp
movsl
jae
inc
ds
rclb
xchg
test
jmp
pop
and
push
adc
pop
inc
mov
stos
rclb
roll
dec
cli
lods
cmp
mov
lret
sar
xchg
lret
hlt
cli
imul
xchg
mov
popa
rorb
and
pop
sbb
dec
lods
stc
adc
arpl
pusha
cli
cltd
aas
xchg
xor
rcrb
jae
fsubp
aam
adc
stos
inc
shll
data16
mov
fcompp
dec
flds
add
iret
insb
faddp
test
mov
inc
inc
mov
add
imul
cmc
or
push
mov
leave
jae
add
leave
cmc
fiadds
shl
ficoms
lret
add
lret
fists
dec
mov
andl
mov
xchg
and
imul
shll
shrl
dec
fists
std
insl
jecxz
leave
cli
fbld
and
rorb
addr16
rorl
mov
cmc
int
repz
mov
xchg
out
adc
je
and
fmull
orl
sub
rorb
and
dec
xor
adc
mov
insb
loop
xor
lock
test
ffreep
adc
inc
mov
sub
les
fidivs
add
ljmp
notb
inc
jae
push
cmp
fs
xchg
in
xor
xchg
lods
imul
or
js
xor
jl
and
enter
shrl
popf
arpl
xor
adcb
mov
arpl
sub
lcall
arpl
lret
mov
leave
neg
shll
xor
insl
cmc
outsb
rolb
lods
pop
ret
pop
jecxz
mov
je
mov
sti
je
aaa
fcmovne
popl
es
xor
repnz
popl
mov
inc
push
inc
adc
iret
and
xor
sbb
in
cli
and
cs
add
cmc
cmp
sub
test
mov
adc
rcl
fadds
cwtl
imul
std
jne
ftst
jg
nop
call
pushf
leave
imul
jl
jbe
iret
fucomp
sub
jne
cmc
pop
fxam
add
cmp
mov
or
xchg
fnstsw
xchg
pusha
dec
cltd
in
xchg
dec
enter
fsubrl
out
out
sub
dec
out
iret
cmove
leave
push
movb
nop
mov
adcl
jmp
addr16
cli
cmp
lea
ss
xor
shrl
int
sbb
adc
popf
popf
mov
and
jge
popf
mov
test
mov
lahf
repnz
adc
jne
and
jge
dec
xchg
daa
rcrb
movl
rclb
fld
repz
dec
cltd
push
or
hlt
sub
jns
addb
flds
cltd
jnp
inc
mov
shll
push
insb
in
dec
mov
jno
add
push
les
dec
mov
int3
xchg
inc
fisttps
sbb
xor
out
ljmp
rcl
xchg
add
mov
rclb
add
das
xchg
ret
lds
shrl
push
ljmp
lret
push
pop
in
sarl
push
aam
cmp
mov
dec
mov
shrb
frstor
push
xchg
jl
addr16
xchg
shr
lds
push
jmp
sub
cmp
xchg
dec
ret
mov
insl
and
ret
nop
pusha
adc
test
push
or
lds
cmp
jmp
fnstsw
pop
or
mov
lret
xchg
jecxz
xchg
and
repz
pushf
mov
rolb
pop
int3
inc
mov
adc
popa
std
fsubrl
in
std
pop
sbb
rcrl
ret
inc
leave
hlt
movsl
dec
mov
rolb
sub
lret
mov
push
inc
loope
dec
movl
mov
cs
push
mov
movsb
rcrb
rorb
push
test
mov
test
or
dec
mov
stc
and
into
sar
stos
mov
mov
shll
add
jbe
cmc
mov
mov
xchg
imul
add
mov
mov
mov
add
scas
es
or
mov
call
and
dec
shrb
dec
inc
mov
js
out
push
dec
fnsave
sarb
repnz
pusha
push
into
fsubrl
ds
dec
aam
pop
clc
and
or
sub
ds
mov
rcr
xchg
shr
fnstenv
orl
xchg
mov
sbb
cmc
xor
pop
iret
jmp
xor
out
sti
push
xchg
mov
inc
add
punpckhwd
fwait
cmpsb
mov
adc
loope
mov
pushf
bnd
and
mov
jne
out
cmp
mov
add
int
cwtl
mov
add
int
ret
int
xlat
inc
rorl
pop
inc
lea
ljmp
and
lcall
sub
push
cmc
int
les
ds
dec
or
and
aas
addb
pop
push
orb
scas
mov
mov
or
sub
push
cli
jnp
ljmp
xchg
dec
in
push
push
adc
mov
icebp
insb
fisttps
sbb
jg
pop
cmp
mov
scas
hlt
rorb
enter
icebp
movsb
scas
jns
dec
lret
shrl
lret
pop
ljmp
push
pop
mov
add
dec
push
lret
sbb
je
repz
popf
into
xor
mulb
in
repnz
roll
inc
mov
dec
shrl
cs
call
jne
enter
enter
out
add
xor
dec
test
push
lret
lcall
test
mov
in
enter
rorb
shlb
jecxz
test
rcll
je
leave
mov
adc
gs
push
repnz
jo
repnz
jae
mov
inc
vmread
xor
popa
mov
sar
push
jnp
daa
jo
or
mov
cmp
stc
shl
inc
iret
and
push
push
jecxz
loop
orb
xor
jne
rclb
inc
sar
lcall
test
iret
sbb
shrl
or
jge
lea
test
adc
mov
push
je
dec
pop
xchg
dec
dec
xor
cld
sub
repnz
shl
gs
pop
and
cld
push
lret
leave
mov
mov
imul
sti
mov
inc
cmc
call
popa
jmp
pop
push
popf
out
mul
aad
mov
and
divb
mov
test
into
and
ss
out
jecxz
arpl
imul
mov
in
xchg
sub
jb
mov
sbb
sahf
pop
mov
inc
cli
xchg
push
cmp
pop
test
xor
cmc
sti
nopl
dec
movsb
pop
mov
mov
mov
mov
inc
fistpl
mov
in
or
mov
mov
arpl
dec
lds
mov
cmc
popf
jge
stc
xchg
outsb
mov
shll
aas
call
mov
mov
inc
popf
lods
lods
or
add
pop
test
cmp
je
mov
sbb
call
mov
pop
mov
mov
mov
or
or
loopne
lcall
push
xchg
mov
dec
sarl
push
push
push
out
mov
in
and
or
mov
lods
rcrl
mov
call
or
push
jne
pslld
icebp
mov
dec
les
in
inc
xchg
repz
test
scas
push
das
fnstsw
mov
or
jne
aas
mov
cli
add
dec
push
test
adc
mov
shlb
shll
call
or
xchg
lock
jge
bts
mov
jl
vpmovsdb
jp
push
inc
int3
movsb
ds
sub
dec
xor
cmovge
dec
push
repz
add
sub
pop
dec
adc
popa
fcoml
sti
fistpll
ret
mov
dec
inc
fldcw
enter
sbb
mov
fbstp
sti
outsl
dec
rolb
int
sub
sub
push
rol
orb
push
sbb
mov
push
sarb
cmp
repnz
shrb
mov
sbb
aaa
mov
mov
cmc
sub
sbb
out
lret
lcall
iret
pop
mov
std
fnstcw
jne
xchg
xlat
stos
adc
jb
aam
adc
inc
int
mov
jns
insl
fsubs
mov
bnd
jno
lea
leave
paddb
aam
mov
ret
xor
inc
mov
in
icebp
mov
jae
jbe
subl
xor
outsl
stos
xorl
cs
jecxz
aas
je
jb
lret
mov
jnp
dec
out
adc
pushf
lds
fnstsw
leave
jbe
pop
or
fucom
mov
xor
sbb
mov
xchg
out
sbb
lcall
dec
imul
pop
movsb
rolb
or
lret
xchg
mov
popf
int3
dec
stos
icebp
mov
repnz
push
stos
pushf
loope
push
xor
jg
divl
ret
loope
xor
jecxz
fstp
jmp
int3
out
sbb
pop
ss
push
enter
jecxz
xor
lret
popa
lds
push
or
pop
sub
xchg
test
mov
and
hlt
fidivl
inc
ficomps
sbb
repz
pop
pop
ror
add
or
jmp
dec
cmpsl
fcos
dec
lret
jae
and
clc
push
inc
ss
shll
cmp
and
decb
mov
fisubrl
js
lret
adc
jle
mov
fdivrs
aad
xor
stos
rcrb
xor
mov
xor
aad
xor
ror
xlat
sahf
inc
lods
jb
mov
mov
fcomi
sub
repnz
or
dec
xor
xchg
mov
inc
and
into
cltd
mov
cmovb
out
jg
hlt
in
into
mov
aas
aas
mov
cmp
stc
xchg
mov
ja
dec
dec
icebp
xor
pop
aam
leave
mov
out
pushf
push
divb
scas
sub
push
and
pop
dec
adc
fistpl
pop
and
hlt
mov
ja
add
inc
out
mov
aas
out
enter
push
xchg
movsl
ja
sub
dec
insl
xchg
iret
or
mov
and
loop
stos
mov
lret
rolb
mov
mov
jb
stos
pushf
lret
or
cmp
idivl
mov
mov
test
shll
add
add
test
sbb
jns
icebp
mov
inc
mov
fcmovnb
int
ljmp
fnstenv
inc
repz
sbb
dec
pop
sub
sbb
dec
and
fadds
dec
add
test
idiv
lds
fnsave
hlt
xlat
and
bound
jae
inc
fisubrl
repnz
out
push
rcll
out
stc
or
xchg
xchg
xorb
cmp
jne
add
icebp
stos
int
fxch
add
stos
jne
in
fdiv
or
mov
mov
int3
popa
add
add
xchg
mov
rclb
or
push
insb
lret
jo
lret
mov
sbb
ret
test
push
pop
scas
xchg
jno
add
ja
jne
sub
jmp
jg
adc
or
movsb
out
xor
xchg
or
leave
xchg
pop
fcom
cmpsl
stos
push
fdivl
pop
into
jae
rolb
dec
mov
inc
mov
stos
int3
test
pop
jmp
or
mov
mov
pushf
cs
aas
int
fsubl
fsub
mov
jb
ja
cld
xchg
pop
add
lcall
cmpsl
iret
pop
loop
ljmp
daa
ret
ret
push
vmovss
push
add
andl
dec
mov
lds
loope
aam
jecxz
push
inc
cli
cld
mov
rcrb
rol
inc
popf
push
adc
cltd
icebp
pop
sbb
mov
repz
lock
push
cli
mov
adc
hlt
repz
inc
push
pop
out
inc
je
push
fadd
jecxz
daa
xor
add
je
or
jno
jo
aad
imul
fisttps
pushf
mov
mov
mov
or
mov
jbe
dec
sub
xchg
fld
cld
fldl
add
jmp
push
mov
shrl
cmp
mov
imul
xchg
loope
cltd
fidivl
shlb
xor
lcall
or
addl
fsts
cli
xchg
dec
out
aas
jmp
ja
mov
mov
mov
push
loope
ds
push
cli
movsl
arpl
movsl
dec
pushf
loopne
mov
mov
sub
xor
xor
into
dec
push
pusha
daa
out
movsb
push
lea
sbb
mov
cmpsb
cmp
stos
dec
cmpsb
stos
icebp
adc
add
xlat
jp
adc
int
sti
call
mov
ljmp
mov
mov
push
and
jge
add
dec
adc
cli
enter
xor
gs
sarb
inc
or
inc
mov
iret
fcmovnu
cmc
dec
repnz
inc
jl
shr
dec
mov
shlb
dec
sub
pop
mov
adc
inc
dec
aam
add
in
out
pop
dec
mov
pop
ret
aaa
add
jecxz
jbe
rcll
mov
mov
cs
ret
lret
mov
add
loope
lds
dec
leave
xor
xor
mov
cmp
es
test
dec
leave
xor
jo
lret
popf
dec
or
jno
cmp
pushf
shl
and
stos
adc
dec
inc
std
add
or
push
add
ret
jo
shr
shll
nop
xchg
es
fndisi(8087
or
int
sbb
ret
in
mov
aad
dec
in
rcrb
enter
pop
loop
jmp
adc
icebp
push
mov
or
imul
mov
push
pop
loop
ret
dec
push
repz
jmp
shlb
mov
shl
and
fisubrl
leave
xor
push
ja
int
popf
pop
iret
movsl
mov
pop
mov
push
jmp
lret
cs
in
in
fsubp
fs
mov
fldt
mov
fnsave
mov
sub
pop
sbb
mov
xchg
sahf
sub
xor
and
dec
mov
dec
lcall
jle
dec
or
in
ljmp
and
loopne
shr
mov
or
outsl
xor
add
dec
fildl
sbb
pusha
icebp
mov
pusha
in
fldl
ret
pop
mov
add
dec
jno
vmovss
dec
stc
dec
dec
and
adc
sbb
rcl
mov
aaa
shl
sbbl
push
dec
movsb
inc
jecxz
in
loop
mov
mov
mov
bnd
jecxz
push
or
mov
iret
pop
dec
lret
rol
adc
push
xor
xchg
xlat
arpl
aam
ret
test
stc
fsub
or
int
push
pop
ja
jno
ret
mov
aam
mov
push
pop
adc
dec
xor
and
sbb
adc
mov
in
xorb
je
inc
dec
sar
addl
stc
rclb
aad
mov
inc
dec
or
mov
cs
std
pop
loop
loop
mov
add
enter
dec
mov
sub
lcall
test
loope
inc
mov
sarl
cwtl
mov
xlat
std
negb
cwtl
lods
cwtl
xor
cwtl
fcomi
adc
fstps
cmpsl
negb
jns
mov
push
arpl
repz
mov
pop
adc
leave
or
mov
mov
stos
jle
int3
xchg
inc
in
xor
lods
test
repnz
ja
mov
scas
leave
dec
ror
mov
std
rcr
enter
fdivr
divl
sbb
ret
lahf
jecxz
leave
and
or
lds
ss
inc
orl
fisttpll
dec
shll
mov
pop
mov
iret
sbb
mov
stos
rorl
add
icebp
mov
gs
cmp
rol
std
and
pop
push
cmpsl
aas
add
add
stc
and
mov
lds
insl
mov
pop
lds
or
sahf
jecxz
data16
push
or
repz
pop
in
imul
stos
ret
addb
lahf
cmc
fcmovu
lds
jle
nop
add
data16
inc
roll
hlt
mov
lahf
fisubl
and
int
roll
stc
mov
int
mov
xchg
hlt
loopne
inc
stc
or
cmp
cmc
push
mov
mov
adc
data16
cld
js
mov
aas
dec
push
xor
lock
xor
or
fisttps
lds
sbb
nop
loop
lret
add
push
iret
stos
adc
out
int
lods
inc
iret
rcr
mov
xor
stos
rorb
fldln2
jbe
inc
aad
mov
jnp
lods
in
shll
stc
mov
xchg
mov
dec
sub
imul
inc
xor
and
add
test
loope
movsb
dec
lds
sub
sub
dec
mov
mov
xor
inc
add
fisttpl
xor
pop
mov
ljmp
into
jb
and
jne
xor
cmpsl
mov
in
aad
or
fildl
jmp
or
sar
into
cmp
xor
aam
enter
lret
mov
int3
mov
jo
mov
xchg
adc
icebp
hlt
in
icebp
jbe
in
pop
ja
mov
dec
or
movsb
and
xchg
add
stos
xchg
adc
aas
pop
push
rorb
push
inc
sbb
aad
xchg
cltd
inc
mov
sbb
movb
pop
push
and
sarl
enter
xchg
shll
sahf
xor
jne
cmpsb
insb
xchg
ss
jb
dec
out
mov
js
loopne
mov
outsb
mul
mov
xor
and
jne
jne
xor
divl
mov
pop
xchg
cmp
jo
dec
lds
movsl
fld
lods
inc
dec
mov
je
loope
push
inc
jecxz
fcompl
test
ret
dec
xchg
cmp
shl
jmp
fimuls
jmp
iret
jo
xor
jno
push
mov
jecxz
add
aad
mov
into
ret
imul
mov
dec
xor
jb
loope
adc
add
mov
jg
sbb
aaa
dec
fbstp
jb
lret
ja
add
daa
pop
notb
dec
jmp
or
ljmp
push
mov
into
cltd
or
xchg
cmp
mov
scas
xor
call
sub
hlt
push
or
adcb
jno
or
xchg
stc
sbb
sub
mov
cwtl
jbe
xchg
fsubrp
test
popa
shl
shl
cmp
sbb
aad
mov
sbb
fnstenv
insl
test
sti
mov
loopne
testl
stos
ret
sbb
or
icebp
xor
mov
pusha
shr
movsb
ret
or
ror
mov
dec
aas
jbe
test
mov
imul
repnz
popa
or
push
xchg
icebp
movsb
or
fimuls
dec
nop
mov
das
mov
mov
dec
jmp
mov
sub
lcall
in
ljmp
lret
inc
mov
cltd
cmp
inc
mov
enter
stos
ret
mov
cmc
and
aam
adc
xlat
in
inc
mov
stos
mov
int
out
aas
or
mull
test
sti
cmp
xor
add
mov
dec
mov
lea
dec
hlt
sub
aam
add
mov
cli
loopne
or
ret
cli
push
out
mov
xorb
ljmp
test
inc
jecxz
rcl
mov
push
push
test
rol
repz
mov
pop
xor
mov
xor
adc
adc
sahf
mov
daa
fmuls
jb
shll
sti
xor
mov
xchg
mov
mov
dec
xchg
jecxz
cmpsl
aad
or
cmc
and
mov
cli
sbbl
cmpsb
jmp
sub
jl
xchg
pop
adc
or
cld
mov
pop
xor
dec
ret
sbb
loope
mov
repnz
cli
aad
xchg
or
mov
and
or
jge
ljmp
addl
dec
aam
jne
sbb
mov
inc
sub
jmp
push
dec
popf
cli
mov
adc
sbb
mov
fldl
lret
test
cmp
xlat
add
xchg
inc
cmp
dec
mov
shll
ljmp
loopne
repnz
add
xor
mov
lcall
sbb
jne
aas
jmp
jle
jmp
arpl
aas
stc
dec
jno
or
xor
lock
push
icebp
pop
dec
cmp
pop
push
and
test
dec
and
lea
push
mov
sti
daa
cld
leave
rcl
sti
mov
clc
push
lea
shl
fstl
into
xor
stc
enter
enter
jl
nop
in
into
int
mov
cltd
ret
lock
mov
lret
sub
les
enter
xor
adc
add
in
jae
inc
shll
fisttpll
aam
test
mov
sti
lahf
mov
shl
adc
fiaddl
fadds
rclb
int3
mov
or
inc
enter
mov
or
in
xchg
lcall
and
in
pop
dec
cltd
mov
add
mov
inc
jo
jb
dec
rorl
pop
addr16
adc
daa
dec
sbb
cs
int
mov
push
outsb
leave
stos
adc
and
fsub
fnstenv
jge
push
xchg
rorl
ret
lock
inc
add
repnz
cmpsb
adc
mov
xor
cmp
or
sub
ret
orl
xchg
mov
xchg
shl
adc
scas
scas
movd
add
out
mov
dec
in
fldenv
outsb
sbb
or
xor
mov
mov
sbb
cld
or
outsb
mov
mov
out
arpl
ja
sahf
sbb
fwait
ret
mov
mov
and
add
sub
push
adc
into
sub
pop
add
stos
cs
call
pusha
dec
mov
adc
repnz
rolb
gs
loop
jns
scas
xchg
push
inc
loopew
add
add
lods
outsl
add
and
inc
jmp
ret
lret
jo
lret
pusha
shl
mov
inc
dec
mov
xor
arpl
rclb
xor
outsb
xchg
imul
xor
jbe
lret
leave
clc
jle
int
lds
data16
and
jecxz
xor
out
mov
xchg
pop
xchg
push
addr16
mov
mov
std
sti
sbb
pushf
dec
nop
in
pop
pop
shrl
pop
inc
int
xor
cmp
test
jne
sub
mov
sbb
pop
gs
or
int3
xor
cmp
push
int
hlt
push
addr16
and
into
dec
enter
stos
or
jne
jb
and
xor
push
cmp
in
jb
dec
fs
inc
adcl
add
aad
adc
lret
mul
out
push
rcll
and
push
loopne
mov
sbb
mov
xor
rcll
dec
sbb
xchg
loop
out
adc
sub
mov
jl
out
pop
js
sub
ljmp
das
roll
inc
cmp
add
dec
push
sub
jge
shrb
repz
insb
jo
rolb
mov
shll
fcmovb
enter
arpl
mov
movsb
lods
inc
and
pushl
rolb
add
cmpsl
add
or
jnp
rol
jbe
add
test
sub
add
cmc
jl
rolb
push
imul
inc
mov
nop
fiaddl
add
nop
mov
mov
dec
pop
int
jnp
je
cli
cmp
xor
test
dec
clc
sbb
mov
inc
mov
xor
aas
es
aad
dec
les
sub
mov
xor
aad
mov
cmc
jne
or
leave
xor
dec
or
or
inc
shll
adc
lcall
push
loopne
mov
shlb
and
fisttps
add
add
aaa
and
daa
hlt
dec
sti
xchg
lock
in
mov
or
sbb
ror
mov
je
cmp
and
test
aad
out
xchg
shlb
mov
roll
leave
and
ret
call
enter
das
data16
ret
mov
test
icebp
pop
and
insl
push
jnp
lds
int
popf
pop
add
mov
mov
and
pop
sbb
fsub
mov
add
cs
add
jbe
popf
popa
xlat
jno
fs
xorl
pop
data16
mov
push
cwtl
dec
sub
add
or
jmp
std
push
pop
ret
jae
into
or
xchg
jo
jp
stc
xchg
in
int
mov
in
mov
jb
push
pop
ja
xor
ret
and
dec
dec
daa
in
fs
push
movsb
inc
nop
lret
xor
fiaddl
in
nop
jo
pop
fidivs
sar
ffree
leave
push
jnp
fidivs
sbb
add
sbb
cmpl
sbb
stc
mov
sbb
sub
lds
roll
pop
add
mov
cmc
icebp
lock
lret
mov
fbstp
mov
add
loopne
leave
std
inc
xor
ljmp
jg
jp
push
or
xchg
inc
jb
mov
add
cmp
pop
iret
or
dec
shl
ss
xor
loope
es
aad
ret
fbstp
push
pop
ljmp
repz
mov
leave
push
leave
add
mov
dec
push
or
stos
xorl
icebp
out
lds
in
leave
loop
insl
jo
ja
sbb
hlt
adc
mov
mov
mov
xor
mov
rorl
xchg
dec
test
filds
and
stc
jg
mov
dec
adc
dec
push
jecxz
cmp
push
add
inc
add
mov
lcall
loopne
and
andb
and
mov
add
jecxz
cmpsl
sbb
test
inc
sbb
je
in
sub
sub
rcll
or
add
int
inc
fnstsw
sub
sub
or
cs
int3
mov
into
sub
dec
sub
int3
push
mov
mov
jl
aam
cmc
rol
jns
aam
sbbb
mov
mov
les
movsl
mov
rcr
sub
fwait
xchg
inc
mov
mov
and
inc
inc
cmc
mov
inc
in
inc
aam
rcl
dec
addr16
into
cmp
pop
aad
jae
inc
jae
fdivs
fsub
jmp
mov
or
loop
into
pop
clc
or
loop
jae
leave
test
pop
stc
push
icebp
ret
test
out
pop
fcmove
jb
or
je
loopne
sub
clc
inc
sbb
fisubrs
leave
dec
lods
outsl
fsubrl
sbb
cmp
jmp
inc
inc
dec
jmp
mov
test
pop
add
cmc
or
xchg
in
adc
push
sub
aad
mov
mov
test
in
insb
xchg
stos
mov
outsb
xchg
and
push
xor
popf
or
dec
fbld
roll
int
cmpsl
in
mov
shll
adc
repz
xlat
mov
push
jle
test
loope
fs
xor
xor
push
nop
shlw
dec
enter
mov
lock
dec
pop
call
and
enter
dec
jmp
lret
stos
adc
add
dec
or
or
sub
bound
cwtl
iretw
ficoms
fcoms
cltd
fsubl
rcl
out
cmp
sarl
pushf
lock
jnp
fsts
aad
insl
xor
xchg
test
loope
mov
dec
jecxz
xor
mov
pop
jbe
and
ret
dec
test
pop
lods
cld
push
adc
stos
xor
mov
adc
pop
hlt
pusha
cwtl
lds
lds
push
aad
jns
roll
int
push
pop
repz
adc
in
push
lahf
stos
inc
jle
out
push
shl
int
xchg
xor
jb
add
add
cmpsl
je
mov
cmp
dec
and
xorl
sbb
xchg
ficoms
rol
in
xor
repz
mov
mov
xor
jbe
int3
mov
ja
mov
ja
xor
mov
movsl
leave
pop
or
adc
ror
cld
mov
repnz
cltd
lea
ud1
jns
imul
push
sub
and
lds
adc
fbld
mov
icebp
jecxz
push
loop
stc
int
insw
mov
inc
jne
or
or
rcr
jg
cmp
int
imul
rcll
imul
push
mov
jns
sub
fisttpll
cmpsl
fisttpll
xchg
and
mov
xchg
pop
iret
sub
hlt
push
test
mov
add
cmc
xchg
fcomip
jg
pop
mov
jge
repz
cmc
cmpsb
mov
mov
xchg
lods
imul
cmpl
into
jle
flds
outsb
movsl
das
fadd
lds
xor
mov
lret
stos
loop
mov
fcmovne
lret
mov
enter
shlb
arpl
adc
cli
or
invlpg
aam
add
mov
lds
aam
movsl
testl
sub
int3
add
int
xor
mov
rolb
pop
sub
fwait
inc
test
cmc
jg
aas
sbb
pop
push
sbb
mov
leave
or
mov
into
dec
scas
cwtl
adc
xor
cmpl
roll
mov
int
xchg
mov
add
orb
mov
popf
mov
cmp
movzwl
mov
jecxz
and
das
mov
jae
or
pop
popa
sbb
push
xor
xchg
daa
adc
cmc
push
or
mov
jmp
test
mov
and
cltd
dec
push
jb
lds
xchg
lds
pop
faddp
dec
mov
cmpsl
jae
and
ss
sbb
std
pop
lds
in
or
and
mov
loop
in
mov
add
les
ds
or
inc
movsl
dec
bound
pushl
or
cltd
int3
inc
rcl
sub
sub
aam
mov
ljmp
sbb
lea
sbb
ja
lret
pop
xor
xor
test
cld
mov
or
and
test
loop
test
pmullw
iret
in
test
add
xor
jns
mov
and
test
mov
push
cmpsb
mov
pop
rorl
xor
mov
es
adc
scas
in
nop
dec
fldenv
mov
pop
mov
cmp
and
int3
test
or
mov
mov
dec
out
ja
mov
lcall
test
cmp
mov
and
push
hlt
or
leave
icebp
pop
mov
mov
hlt
popf
and
inc
icebp
gs
sbb
dec
jne
test
jae
outsb
rorl
xor
or
cmpsl
fisubl
rorb
or
mov
dec
mov
add
fmuls
and
aaa
fadd
pop
fsubrs
inc
pop
rorb
pop
js
icebp
mov
mov
ds
pop
mov
repz
test
add
push
rorb
pop
dec
mov
cmp
dec
sub
fisttps
lahf
rorb
ffree
dec
ret
or
ss
fidivs
pop
cmp
and
lret
aad
xor
cmpsl
jae
lds
add
sbb
fadds
lds
and
mov
dec
add
xor
xor
leave
adc
sbb
loop
les
shrl
lret
sti
jne
pop
cmp
shlb
out
add
cmp
mov
out
fstpt
unpcklps
fistps
jae
and
movups
cmp
mov
adc
adc
ror
xor
mov
inc
nop
ret
in
sub
jp
adc
loopne
jo
mov
mov
add
sarl
xor
lea
lahf
stos
ret
push
and
inc
adc
mov
int3
sbb
fdiv
dec
and
or
aad
rorb
add
iret
pop
out
sbb
lret
mov
rol
in
xor
lret
dec
loop
clc
or
add
add
push
pop
cmpl
pop
scas
mov
mov
inc
add
xor
cmp
test
stos
dec
mov
leave
sbb
mov
xor
dec
mov
add
lods
add
int3
inc
rolb
mov
movsl
pop
leave
int3
insl
enter
mov
popa
mov
add
test
hlt
das
imul
divl
jno
inc
outsl
mov
push
ret
jbe
aam
sahf
add
lret
jb
xchg
mov
ja
push
dec
dec
fwait
pop
popf
push
je
or
xor
fcom
loope
xchg
pop
inc
pop
mov
jne
cld
iret
inc
pop
xchg
not
cmpsb
cld
add
cmpsl
dec
stos
and
cld
insl
shl
leave
adc
mov
movsl
leave
add
cld
mov
mov
xor
mov
leave
sar
mov
mov
cld
into
aam
inc
jo
xchg
scas
inc
sub
mov
sub
cmp
and
ret
mov
scas
and
cmpsb
mov
leave
mov
sub
sahf
inc
push
dec
inc
nop
imul
mov
idivl
addb
jo
int
cli
jecxz
icebp
outsl
dec
loope
popa
add
xor
xchg
push
add
dec
push
pop
lock
mov
arpl
mov
in
mov
pop
rcrb
rolb
inc
xor
lods
push
int3
ror
inc
test
flds
mov
lods
push
push
xor
pop
jno
bound
inc
push
and
cmp
jnp
test
add
decb
jle
and
xor
jae
jge
cmpsb
mov
int3
push
jmp
lahf
jb
ret
jnp
dec
jnp
mov
add
sub
and
and
inc
ljmp
cmp
cmp
dec
and
jae
cmp
lret
xchg
fmull
jns
test
dec
scas
mov
jo
enter
dec
xor
cmc
push
adc
sub
xor
fs
lret
xor
into
dec
pop
adc
mov
ljmp
and
insl
push
sahf
pop
mov
jns
arpl
pushf
rcrl
pop
xor
scas
cwtl
jns
loopne
mov
jg
or
icebp
mov
out
aad
cmp
and
xor
jno
movsb
xor
adc
mov
int
mov
sbb
lret
ljmp
jb
shl
fs
sbb
and
dec
sub
add
int3
inc
and
test
std
mov
leave
push
divb
or
add
pop
sub
push
and
dec
bound
adc
fs
pop
add
adc
dec
and
or
imul
adc
loop
inc
cld
add
call
mov
and
lret
mov
int
in
and
cltd
addr16
ljmp
test
jo
jl
scas
loope
xor
xor
mov
push
jecxz
cmp
mov
and
push
add
ljmp
fcmovne
pop
sbb
and
lock
loopne
into
data16
sub
icebp
mov
cmp
add
cmp
push
cli
icebp
sbb
mov
in
and
push
and
aad
cs
dec
mov
lods
mov
mov
sti
out
das
xchg
mov
nop
mov
jp
or
adc
int
jp,pn
loope
sarl
cmpsl
cmp
ljmp
cmpsb
xlat
subl
aad
jmp
jo
into
cli
mov
mov
andl
lret
mov
add
aas
sub
shll
inc
xchg
mov
div
psubsw
cli
or
int3
ljmp
mov
int
xor
dec
lds
out
add
movsl
mov
pop
movsl
xadd
push
test
xor
into
or
leave
mov
pop
fs
hlt
mov
cwtl
push
dec
or
dec
sbb
push
inc
mov
or
xorl
ja
insb
cs
sbb
lods
pop
test
je
dec
and
sbb
sbb
lock
sbb
cmpsl
and
add
fldl
mov
jmp
jae
adc
xchg
cmp
mov
and
or
adc
incl
mov
insl
mov
dec
loop
pop
dec
in
cmc
ds
cs
repz
shll
jb
shrb
aaa
sbb
fcompl
cltd
or
notl
add
xchg
movb
adc
test
lds
mov
dec
sbb
and
and
dec
dec
jmp
cmpsb
cwtl
mov
mov
xor
xor
jmp
push
cmp
or
jg
int3
ds
stos
mov
outsb
pop
mov
leave
sub
mov
dec
enter
ljmp
mov
lret
lret
push
sbb
stos
shr
repz
das
pop
push
hlt
lds
jecxz
push
sbb
jg
push
ljmp
cli
lahf
and
and
and
jb
mov
ja
je
jmp
and
push
fsts
push
sbb
fadd
ljmp
add
mov
movl
ret
push
out
test
sub
pop
mov
rol
sarl
cld
scas
dec
loopne
ljmp
inc
ds
mov
dec
mov
and
push
lods
incb
dec
lahf
insb
lcall
orl
lods
add
xchg
dec
dec
or
xchg
dec
cli
xchg
dec
and
fs
rolb
jns
sbb
shrl
mov
mov
mov
mov
sub
push
pop
or
and
in
stos
daa
pusha
hlt
mov
and
mov
inc
aam
out
xchg
xchg
mov
arpl
stos
lock
add
aad
icebp
inc
cmp
push
or
inc
movsb
test
rclb
xor
add
push
dec
adc
mov
push
mov
jecxz
xor
leave
inc
jmp
mov
popf
mov
or
movsb
test
pusha
or
test
aam
sbbl
nop
cmp
mov
and
test
sbb
or
lret
sti
or
filds
gs
cmp
loope
std
or
mov
mov
fwait
shl
add
sub
xor
stos
rorl
cwtl
mov
push
xlat
in
ret
jle
mov
add
imul
loop
pop
rcll
sbb
lods
lock
or
leave
movsl
sbbl
aas
aad
es
inc
inc
or
int3
sbb
dec
lret
jnp
iret
in
insl
lret
inc
lds
push
xlat
in
mov
hlt
push
pushf
inc
pop
sahf
lret
mov
repz
fidivl
adc
addr16
ret
rol
insl
add
add
cwtl
or
dec
cli
dec
dec
or
fldt
mov
push
jb
rcll
icebp
out
aas
out
mov
xchg
shll
mov
push
sub
jmp
mov
int
cmp
mov
movsb
lock
dec
cld
adc
andl
dec
sahf
push
cli
dec
jp
mov
jle
xor
add
mov
fsubrs
jb
mov
jns
mov
popa
add
xchg
mov
sbb
mov
mov
jns
gs
lahf
decl
push
mov
outsl
adc
pusha
rol
fs
jbe
lcall
mov
pop
psubw
push
ja
dec
dec
mov
push
add
sbb
and
mov
mov
ret
fistpl
adc
mov
sub
push
adc
repz
dec
stc
dec
cld
add
add
sbb
dec
int
push
stos
stc
cs
dec
or
stc
es
loopne
mov
jmp
mov
cmp
jne
sti
adc
adc
or
shrl
jae
add
cmp
mov
push
mov
aad
shrl
stos
jge
idivb
sub
mov
jb
test
push
pop
add
fnstcw
xor
sbb
add
cmc
test
mov
popl
cwtl
cli
in
in
inc
shlb
ljmp
testb
subb
mov
jb
sbb
cmpb
sub
mov
hlt
push
es
call
mov
jp
ret
mov
mov
jg
mov
out
sub
xchg
sub
push
filds
mov
in
mov
loop
pop
enter
loop
andb
aad
jo
sub
loope
mov
sub
imul
pop
mov
std
mov
cmp
dec
mov
mov
movsl
data16
adc
add
jp
add
fsts
iret
mov
lret
shr
leave
jmp
pop
ljmp
decb
es
std
test
sbb
mov
in
sti
dec
mov
jmp
mov
aaa
insb
mov
jg
dec
loop
in
repnz
add
add
hlt
jecxz
push
mov
lods
aaa
add
daa
call
stc
incb
in
fistl
lds
xchg
mov
push
pop
mov
andl
mov
test
adc
test
mov
mov
xor
divl
pop
jbe
rcll
or
pushf
inc
mov
inc
clc
loopne
push
mov
std
and
inc
lea
inc
int
loop
and
jp
iret
mov
loope,pn
add
jge
roll
int
daa
mov
loop
stc
lret
fdivrs
push
int3
in
movsb
lds
or
add
pop
psraw
xor
nop
negl
adc
dec
mov
repz
shll
pop
ss
add
add
aad
ss
cltd
adc
dec
inc
paddusw
sub
fiadds
mov
test
popf
adc
add
sbb
popa
popa
jbe
and
cli
and
push
mov
push
frstor
roll
push
push
cs
push
jmp
leave
dec
xchg
dec
out
dec
nopl
mov
mov
imul
lcall
hlt
and
cmc
arpl
pop
mov
je
push
pusha
cwtl
fcmove
lds
fst
dec
repnz
fldl
push
adc
jo
pop
outsl
into
addr16
jnp
or
cmp
inc
mov
inc
je
leave
cmp
adc
jmp
inc
mov
jo
out
mov
paddusw
jae
sbbb
clc
or
add
out
enter
pop
mov
and
shl
ja
sbb
sub
fcmovnu
call
int
mov
dec
int
cs
mov
cmc
pop
pop
bt
inc
decl
insb
dec
pminub
or
xchg
dec
xchg
add
xor
mov
xchg
or
mov
inc
fmuls
push
popa
dec
stc
mov
jl
int
imul
lret
mov
fisttpll
test
icebp
js
mov
leave
out
xor
xlat
scas
mov
jle
cmp
out
xor
ret
adc
push
mov
pcmpgtw
js
leave
dec
das
cli
adc
xchg
xor
add
cmp
pusha
imul
popa
int
int
ret
ret
mov
sbb
sahf
mov
sub
loope
stos
add
outsl
add
aas
data16
jnp
lods
xor
pusha
mov
mov
in
test
pop
add
enter
ja
xlat
adc
dec
push
sbb
ja
std
js
aaa
gs
inc
popa
int3
outsb
adc
sarl
mov
mov
push
stc
aam
ja
pop
jno
jle
lds
mov
mov
xchg
mov
in
test
bound
pop
fidivs
loopne
jl
xor
cmp
movsb
and
data16
lret
xchg
dec
lock
jmp
xor
cmpsl
andl
cmp
add
aas
pop
je
cmc
push
out
xor
lods
mov
rcll
shrl
fimull
inc
adc
scas
imull
or
lods
and
loop
mov
fcomip
cmp
and
cmp
movl
or
iret
mov
jl
popf
pop
insl
pop
fidivrl
cltd
mov
xor
mov
fucomi
add
cld
pop
bound
mov
sbb
mov
nop
add
mov
inc
fstl
pop
aad
mov
cltd
icebp
cmpsb
mov
xor
iret
pop
xor
adc
and
pop
cmc
mov
mov
scas
test
mov
sti
or
push
loop
fst
mov
push
or
push
popf
jb
out
push
in
xchg
cld
inc
cwtl
rdpmc
nop
push
jmp
call
xadd
push
xchg
push
push
push
sub
fisttpll
adcb
xor
hlt
lcall
pop
icebp
adc
jmp
popa
push
aad
in
sbb
jecxz
adc
mov
mov
test
push
icebp
pusha
lods
mov
pop
xchg
mov
les
leave
xor
xchg
js
xor
shrl
hlt
inc
int3
iret
pop
and
pop
adc
sub
push
sbb
xlat
inc
add
push
loopne
std
mov
xlat
rorb
mov
inc
mov
test
lret
shll
inc
xchg
lea
ficoml
dec
mov
repz
and
cmpl
push
pop
ljmp
xchg
jae
mov
cmpb
ret
jnp
es
shr
popa
xchg
lcall
xor
ret
lods
xchg
dec
dec
jge
repz
cmpb
icebp
inc
in
inc
pop
sbb
jmp
dec
add
mov
dec
pop
cmc
jmp
xchg
or
out
cmp
cmpsl
ljmp
aad
mov
cmc
ret
cltd
mov
nop
jae
and
and
mov
out
mov
pop
dec
jnp
inc
mov
test
repnz
jne
xor
das
sub
mov
jns
sbb
jb
jl
repz
fnstenv
jno
lds
fbld
pop
xchg
sahf
push
rol
push
sub
aad
leave
std
call
lea
ret
inc
add
ret
inc
and
cld
and
xlat
xchg
or
in
in
out
xor
inc
jp
int
jle
mov
push
out
adc
fadds
adc
sbb
jns
dec
enter
aad
or
enter
test
je
jb
xchg
movsl
xor
jg
inc
inc
sub
fstpl
iret
aad
ret
mov
pop
test
ret
in
int3
js
aam
ljmp
cmpsl
stos
out
or
or
and
push
mov
pop
sbb
xor
in
rorb
or
and
lods
dec
xor
mov
loope
mov
mov
xor
outsl
fisubs
mov
test
xor
jno
lret
push
ret
insl
icebp
es
jnp
push
insl
cmp
pop
dec
lock
test
testb
ss
mov
push
jb
lods
clc
mov
decb
inc
test
cld
mov
xor
push
test
mov
call
lret
jns
mov
test
fldcw
in
fdivrs
push
and
or
fists
jns
mov
aad
fsubrs
and
fcom
sub
pop
xchg
sbb
sbb
mov
ljmp
inc
scas
mov
loopne
mov
cmp
fsts
shl
fprem1
loop
xor
and
jns
or
add
shrb
xor
push
movzbl
xchg
stos
mov
or
mov
pop
in
mov
pop
push
scas
test
les
lret
shrl
xor
xchg
jnp
sbb
lds
inc
jne
shrb
pop
mov
add
repnz
mov
inc
dec
mov
and
jmp
lods
push
mov
ljmp
or
mov
insb
fistpll
mov
cmp
and
in
iret
test
jl
nop
dec
push
repnz
aaa
inc
ljmp
xchg
sub
movsl
cmc
cmp
das
push
hlt
std
in
mov
dec
data16
lret
sub
enter
clc
cmc
in
dec
jbe
inc
cltd
insb
roll
inc
dec
add
test
xchg
cmpsl
or
test
mov
sahf
out
push
push
mov
lret
arpl
mov
push
jnp
stc
roll
jns
pusha
daa
xchg
add
inc
and
adc
mov
dec
push
lds
jp
sti
sub
dec
jmp
in
enter
test
out
sti
mov
sbb
lret
push
repz
sbb
dec
xor
inc
cmc
xor
incl
jbe
inc
loopne
pop
shlb
movsl
push
push
jne
dec
mov
dec
mov
addr16
rcll
mov
enter
sub
bound
xor
lock
in
lock
push
test
arpl
loopne
enter
pop
rorb
ret
adcl
dec
pop
xlat
mov
mov
adc
sarl
dec
lods
mov
inc
jmp
push
out
pop
and
jmp
mov
rcrl
fisubrl
int3
sarl
pop
mov
gs
inc
fstps
xchg
cmp
mov
ret
ljmp
enter
dec
mov
add
mov
cmp
in
mov
xlat
test
lea
sbb
mov
xchg
xchg
dec
pop
adc
leave
lret
shlb
test
ret
fldl
push
test
testl
pop
cmp
mov
test
sahf
or
inc
add
mov
mov
push
lcall
cs
and
ret
pop
addr16
stos
lret
mov
scas
xor
push
pusha
adc
sbb
and
and
or
sbb
pusha
mov
frstor
ds
cmp
cmpsl
in
add
or
enter
dec
stc
test
push
pop
push
push
in
fwait
and
mulb
mov
out
mov
lods
out
loope
shl
int3
test
fidivs
cmp
movsl
pop
inc
jmp
in
pop
fld
and
rcr
or
cwtl
mov
popf
call
push
ljmp
push
lods
ret
push
push
jne
enter
adc
add
mov
jnp
add
inc
inc
inc
inc
inc
pop
loopne
add
hlt
push
sub
loope
aas
or
loope
and
insb
dec
int
sti
or
sub
lcall
add
or
aaa
idiv
repz
cmp
cmp
ret
fnsave
dec
repnz
jmp
js
push
mov
scas
mov
enter
insb
stc
in
ljmp
jno
jo
shlw
imul
pop
imul
test
pushf
dec
insl
jno
push
inc
mov
ljmp
inc
jns
push
loope
call
jge
in
jmp
or
inc
roll
add
rcr
lea
fldl
mov
xor
push
aam
loopne
jmp
or
inc
xor
insl
rcll
imul
shll
stos
or
or
fdivs
jnp
fnstcw
cmpsl
divl
int
popa
lret
rorb
sbb
fldcw
loop
dec
div
js
lods
ret
dec
jnp
xor
out
fwait
lock
push
pop
outsb
push
pop
movsl
add
js
in
out
fbstp
add
fbld
sub
psubd
enter
cmc
or
pusha
mov
dec
push
stc
loop
add
sub
or
mov
bound
sarb
mov
or
ljmp
dec
sbb
int
inc
rorb
repz
xor
cld
push
insl
cmp
sub
aam
leave
and
lea
and
jae,pt
jb
lock
ss
in
cmpb
cli
std
ds
out
rcl
xor
shr
dec
pop
jns
cmp
lea
aas
loop
lcall
mov
std
fld
cs
daa
popf
rcrl
or
dec
push
cwtl
mov
aaa
ficoml
fld
dec
mov
pushf
mov
mov
movntq
dec
movsl
jo
dec
adc
mov
inc
inc
inc
sbb
insl
cld
pop
insb
xor
push
xchg
cltd
ror
in
add
scas
in
sarb
cmp
aam
push
enter
leave
ds
pop
sub
push
sub
daa
int3
frstor
mov
test
xor
mov
sahf
int3
test
andb
outsb
ja
push
cmpl
ret
add
dec
enter
inc
test
push
cli
lret
loope
stc
add
or
cmc
shrb
stos
ret
push
pop
jmp
or
fsub
add
stc
stc
adc
dec
mov
leave
xchg
ret
hlt
pop
ss
dec
aam
cmp
mov
and
mov
xchg
cli
lahf
out
sar
or
dec
mov
les
test
lret
cmc
pop
lret
aad
xchg
sbb
or
and
add
jnp
call
loopne
int
les
iret
xchg
mov
test
or
inc
test
jmp
sbb
and
rcrb
add
lock
cltd
mov
mov
add
push
sub
test
adc
lods
loop
push
mov
cltd
sbb
adc
ljmp
jno
push
dec
outsl
in
xor
jp
sbb
jb
das
or
shl
add
mov
popf
pop
inc
fstl
ret
mov
fcomip
sbb
lds
push
popa
shrl
or
push
insl
sbb
add
jns
add
xchg
add
sarb
add
test
ja
adc
js
dec
test
and
orl
xor
add
or
lret
jbe
sub
adc
mov
sbb
mov
pop
imul
mov
jae
mov
sub
or
dec
in
inc
jecxz
add
add
adc
mov
inc
sub
dec
pop
pop
enter
xchg
lds
inc
inc
dec
out
ret
dec
scas
rcr
cli
mov
gs
and
jl
lock
dec
aas
and
inc
sbb
mov
dec
imulb
push
xchg
adc
dec
aaa
push
test
cmpsl
imul
add
jge
inc
loope
xchg
arpl
or
dec
inc
in
lods
insl
xor
test
adc
xchg
stc
test
aaa
jge
push
or
and
repnz
jne
ja
aaa
inc
dec
pop
hlt
inc
pushf
push
and
aad
xlat
cmc
std
dec
jo
dec
aad
lea
and
test
enter
mov
mov
shrl
mov
lds
adc
jp
out
out
push
clc
sbb
push
iret
filds
push
adc
xchg
mov
fstpt
ret
imul
xor
shlb
data16
shrl
jmp
aaa
mov
sbb
jl
or
adc
or
dec
xchg
lret
sub
dec
leave
mov
icebp
sub
pop
lds
pushf
pop
jp
pop
icebp
sar
mov
adc
lock
enter
cmp
das
test
mov
in
xlat
xor
rclb
icebp
lret
inc
das
sbb
sar
sbb
stos
lret
rclb
push
stc
jle
mov
ret
pop
aam
lret
mov
lock
jg
repnz
rorb
pop
imul
stos
int3
sbb
vpacksswb
jne
jmp
hlt
div
lret
mov
xor
cmc
cmc
dec
fsubr
pop
mov
sbb
fisubrl
sub
loope
arpl
push
lock
mov
inc
inc
rclb
fmull
call
and
sahf
stos
or
xchg
sub
dec
cmpsl
out
pusha
shl
mov
mov
dec
dec
arpl
pop
into
hlt
or
jl
jae
sub
xchg
hlt
add
aad
mov
std
inc
lea
test
shr
pop
adc
dec
mov
inc
inc
adc
leavew
jle
push
movsb
rolb
add
sbb
cmc
and
adc
sbb
mov
dec
cwtl
pop
push
mov
int
mov
mov
bound
movsl
scas
jne
cmpsb
mov
sarl
mov
mov
leave
mov
and
push
pop
fxch
stc
lods
pop
in
xchg
or
mov
xlat
mov
rorb
mov
rcrl
mov
inc
test
out
jmp
jle
test
ljmp
inc
rorl
or
mov
loope
in
mov
mov
push
xchg
jle
loope
mov
dec
xchg
xor
in
dec
negb
push
in
repz
call
stc
popa
xor
add
mov
sbb
loope
enter
adc
sub
neg
sbb
inc
mov
cltd
ss
ljmp
jmp
inc
insl
insb
mov
fbld
gs
lock
push
xlat
sarl
aas
prefetchw
or
lahf
hlt
mov
push
aam
push
mov
sub
sub
pop
call
rorb
out
mov
das
mov
lock
rcl
sahf
nop
inc
je
adcl
int
outsb
repz
or
adc
jp
mov
leave
add
andl
or
repz
add
add
inc
sbb
xor
xor
and
mov
mov
sbb
sarb
je
adc
cmc
inc
lahf
jecxz
ljmp
clc
adc
mov
inc
aaa
pop
sbb
jge
push
aam
xor
push
ljmp
sbb
mov
and
dec
aam
or
cmpsl
es
loopne
sub
mov
inc
mov
fsubrs
fdivs
mov
cmp
lret
sub
lret
and
cmp
stos
jl
sub
adc
mov
shl
in
sbb
stc
lods
mov
repnz
inc
adc
cwtl
fimull
jno
cmpsl
cmp
jmp
stos
adc
lret
cmp
xlat
jle
stos
fcmovnu
pop
sub
cmc
iret
add
mov
mov
mov
lret
cli
mov
push
mov
dec
mov
rcrl
add
icebp
add
ret
and
push
stos
sbb
js
enter
leave
jne
or
add
and
inc
mov
sub
stc
mov
or
jl
push
inc
xchg
inc
and
arpl
push
mov
or
movups
or
xor
jno
stos
mov
or
test
mov
movsb
cmpsb
shl
out
cmc
sbb
dec
sub
inc
nop
sub
mov
lock
out
ret
rorl
cwtl
sar
movsl
or
pop
aam
dec
cltd
call
test
mov
xor
loopne
adc
inc
stc
enter
inc
in
or
shlb
dec
jg
and
ret
jp
and
mov
ss
jns
jbe
add
add
add
push
or
sbb
mov
test
arpl
loope
pop
mov
scas
xorb
fidivs
mov
aas
or
ret
fbstp
push
les
movsl
add
cmc
roll
stos
pop
scas
jmp
hlt
jge
jp
sub
loopne
flds
sub
int
test
stos
jecxz
adc
sti
add
ja
lds
mov
add
inc
rolb
icebp
call
dec
aam
mov
or
out
push
shl
fdivrl
insl
pop
insb
iret
orl
mov
mov
cs
dec
inc
sbbl
test
test
mov
test
stc
leave
test
stc
mov
rol
jno
mov
add
add
jecxz
xor
addr16
das
sbb
shrl
test
lock
sub
mov
mov
xor
out
mov
sbbl
or
jne
adc
clc
out
ja
repnz
xor
fnstsw
mov
sub
mov
xchg
push
rcl
inc
leave
mov
mov
or
addr16
pop
adc
inc
shr
push
popl
sub
push
xlat
cwtl
cs
ror
and
iret
rol
adc
inc
ret
lret
subb
mov
fmull
xor
push
leave
push
es
and
cmp
int
rcrl
push
rcr
out
dec
fsts
mov
dec
push
test
jbe
cmp
out
clc
test
cmpsl
sahf
lds
pop
mov
pop
mov
leave
jns
fildl
add
ljmp
xchg
loope
sbb
xchg
lret
adc
mov
pop
sub
in
outsb
aad
jg
mov
sub
mov
mov
xor
jl
jne
fidivrs
mov
js
xor
subb
ja
lret
dec
sub
pop
inc
aad
mov
adc
inc
add
dec
insl
sub
inc
jmp
test
jne
mov
dec
inc
stos
push
int
inc
jb
out
mov
adc
sub
push
in
push
mov
fiadds
daa
icebp
mov
int3
insl
adc
push
pop
sub
inc
lock
sub
pop
mov
adc
dec
testl
dec
les
mov
outsl
mov
mov
sbbl
xchg
jae
sbb
xchg
ret
leave
add
push
xchg
clc
ds
fstpl
testb
repnz
mov
int3
push
pop
jns
inc
subb
out
arpl
push
gs
cmc
push
mov
mov
mov
sub
jne
push
sub
paddsb
lret
hlt
add
add
mov
and
out
test
add
orb
icebp
test
sub
test
sqrtps
sti
ret
test
faddl
push
inc
mov
ja
rcrb
mov
or
insb
sbb
stos
lock
daa
mov
jo
dec
cmc
sbb
ror
xor
out
dec
add
add
jge
les
rorb
into
dec
lret
push
shl
sti
jb
or
xor
out
and
repz
adc
inc
cltd
push
mov
test
xor
mov
sarb
loope
cmp
mov
clc
inc
in
loope
adc
lods
jmp
push
in
addb
or
cmpl
push
nop
cli
stos
push
inc
icebp
lods
jmp
ret
leave
sarl
cld
push
sbb
aam
sbb
lret
cmp
pop
xchg
or
loope
and
push
mov
frstor
adc
xchg
clc
rcrl
push
daa
out
stc
lea
cli
mov
stc
test
pop
push
loope
ja
jns
in
fs
nop
or
cli
mov
lds
jae
lgs
aaa
test
inc
sbb
mov
or
jns
les
sbb
fisubl
push
dec
cmc
mov
negb
shll
push
or
lock
nop
xor
dec
and
pop
sub
stc
loopne
fcomip
std
cmc
cmp
inc
push
inc
xchg
icebp
test
or
or
pop
shll
lds
cmp
and
imul
pop
jb
rorl
push
add
pusha
outsl
add
dec
pop
inc
rcrl
and
aam
xchg
inc
das
mov
test
sbb
xchg
inc
pop
sub
mov
test
dec
cmp
lds
push
add
add
leave
fistps
call
sub
or
dec
movsb
loopew
sub
adc
ret
cmp
dec
icebp
leave
add
mov
push
push
aam
push
int
icebp
test
int
sarb
ret
leave
inc
mov
xor
rclb
sub
jae
test
and
jecxz
or
aaa
adc
push
or
pop
adc
cmpb
xor
dec
outsl
call
sub
int
clc
test
push
in
and
xor
adcl
hlt
aad
add
rclb
test
sub
es
jbe
jmp
ret
in
mov
jo
mov
adc
pop
cli
fidivs
adc
push
loopne
test
lds
cmp
cmp
insl
popa
imul
mov
dec
mov
xor
and
mov
in
stc
test
pop
sbb
add
add
loope
inc
and
and
ret
mov
into
xor
frstor
pop
inc
movsl
add
cmc
jle
jne
jae
xorl
es
loope
enter
jne
xchg
std
jl
ljmp
or
ret
or
jno
enter
and
dec
movsl
mov
sbb
mov
xchg
inc
in
neg
mov
arpl
cltd
rorl
push
dec
sbb
add
fwait
inc
mov
jecxz
enter
repnz
lret
leave
cld
inc
jecxz
enter
or
inc
add
loopne
clc
mov
ljmp
ret
sbb
add
push
sub
mov
test
xchg
aas
popa
jne
adc
mov
lods
adc
mov
ret
mov
push
cwtl
enter
test
inc
xchg
imul
and
push
loop
mov
mov
lret
imull
dec
rol
sbb
inc
jg
cmc
sar
dec
std
test
inc
push
test
jno
clc
sub
and
and
xchg
out
test
add
faddl
popa
out
in
sub
push
sub
test
jle
dec
rcrl
xor
loopne,pn
jae
stos
mov
pop
xor
push
dec
leave
jne
jmp
xor
mov
sub
rorb
sbb
mov
imul
inc
inc
jg
ret
mov
sub
sub
xchg
add
mov
shr
pop
dec
andb
pop
inc
jmp
or
subl
mov
fwait
sbb
popf
lods
out
adc
jmp
xor
sti
int
sbb
loop
nop
stos
lret
shrl
mov
dec
into
inc
or
test
push
cmp
aaa
rcl
or
shll
loope
fsubrl
aad
xor
or
xchg
mov
adc
insb
les
jbe
push
or
sbbb
lds
mov
cmp
mov
inc
push
and
pop
hlt
repz
adc
enter
adc
cli
cld
fscale
jne
push
xor
inc
sub
add
mov
pop
xor
inc
xchg
inc
cltd
dec
mov
sub
push
out
jne
dec
scas
das
add
push
mov
sub
sbb
mov
jns
jge
xchg
adc
out
nop
into
xchg
xchg
mov
lret
shlb
dec
or
icebp
scas
ljmp
cmp
nop
pop
or
sbb
popa
jl
and
push
gs
or
mov
jb
loop
push
clc
jno
and
data16
je
mov
mov
mov
dec
pop
icebp
stos
lock
fldl
add
mov
out
add
dec
div
test
add
add
and
add
sbb
inc
std
or
les
xchg
mov
mov
lcall
adc
mov
add
mov
not
ficomps
cld
aad
movsb
cwtl
sub
inc
leave
loope
pop
ret
xor
imul
leave
push
hlt
sub
testl
mov
arpl
mov
inc
icebp
sub
pop
ljmp
es
ds
test
mov
sub
inc
jb
call
lcall
test
jae
fmul
inc
iret
js
ret
adc
jo
push
mov
scas
shr
int
jmp
adc
dec
gs
aam
sub
pop
sub
add
and
sub
add
mov
icebp
push
pop
push
out
lret
hlt
stos
clc
push
jle
jno
test
inc
iret
push
mov
lea
push
mov
adc
mov
cmc
and
cmp
imul
xlat
pop
push
cld
inc
or
xor
sub
sahf
jnp
sbb
xor
jecxz
mov
inc
popa
xlat
dec
xchg
aad
dec
mov
jge
mov
sbb
add
xchg
mov
dec
pop
push
mov
popf
loope
arpl
aad
in
or
mov
mov
lret
add
dec
icebp
mov
insb
add
inc
pusha
jne
gs
push
adc
dec
insb
icebp
ficomps
mov
daa
idivb
pop
sbb
mov
and
push
mov
pusha
add
fcompp
aas
loopne,pn
adc
hlt
cmpsb
leave
mov
loopne
pop
add
fldl
call
pop
fcomps
sbb
mov
sbb
jp
or
cmpsl
dec
icebp
or
hlt
aaa
mov
xchg
hlt
lret
cmc
and
jl
bnd
roll
mov
in
in
cli
dec
ror
add
dec
popf
scas
mov
add
push
loope
adc
gs
jne
sbb
inc
or
je
mov
push
loopne
shrb
stc
fsubrp
dec
xlat
jecxz
pop
jecxz
add
aam
pop
xor
mov
aam
adc
dec
add
push
addl
jecxz
enter
mov
imul
inc
insb
packsswb
aam
and
add
mov
mov
cmp
addl
cli
fsub
loopne
xor
das
pop
add
loop
subb
fucompp
out
movsl
lret
imul
dec
adc
mov
add
dec
jmp
xchg
int
dec
push
scas
sub
add
adc
mov
fdivp
fldl
xor
leave
test
pop
and
sub
fistps
mov
int3
ror
popf
ret
roll
jb
mov
mov
or
aaa
push
push
inc
dec
adc
xor
int3
mov
and
mov
test
xor
sbb
mov
int3
incb
insl
loop
fwait
sti
notb
mov
push
sarl
adc
add
and
inc
jg
or
out
jnp
aam
or
fdiv
in
popa
cwtl
stc
lret
cmp
push
xchg
lods
jge
jle
outsl
repz
push
mov
cli
jbe
rolb
dec
je
in
or
adc
fs
push
imul
shlb
mov
test
mov
jb
pusha
int
jae
lret
adc
sub
aaa
fwait
lcall
cmpsb
repnz
mov
cli
mov
fcomps
inc
mov
stos
fimull
inc
jnp
dec
inc
inc
ror
xchg
arpl
std
sbb
mov
inc
fldenv
sahf
shl
jmp
or
or
sub
arpl
sahf
hlt
popa
je
push
mov
push
sbb
push
cmc
xor
push
xchg
loop
push
nop
fxch
dec
aam
popf
aam
ret
pop
in
cmp
mov
mov
les
sbb
loopne
out
sti
shll
xchg
les
xor
mov
sub
loope
test
int
jbe
cmpsl
lods
adc
push
into
ror
shrb
int3
in
fmul
imul
dec
xor
xlat
rorl
iret
aad
out
push
xchg
pop
jb
dec
shll
mov
cmp
lds
xchg
push
sahf
mov
test
repnz
leave
aad
xor
jge
or
jecxz
mov
stos
cmc
pusha
repnz
hlt
test
icebp
mov
out
leave
cmc
out
inc
jp
pop
or
fsubrl
outsb
pusha
mov
sahf
inc
xor
ss
push
ss
out
clc
dec
push
imul
mov
xor
add
loope
dec
adc
or
push
cmpb
add
fmuls
adcb
jae
dec
add
cs
push
rolb
pop
in
rcrb
jbe
mov
xchg
xlat
xlat
clc
adc
fnsave
mov
jns
ss
jns
dec
in
mov
push
jmp
mov
loopne
loope
fs
adc
inc
jo
pop
or
mov
add
inc
dec
mov
loopne
jge
sbb
ja
mov
jb
loope
call
and
cmp
sbb
test
bound
mov
xor
push
or
jne
jo
shll
dec
test
fiaddl
sub
in
push
loope
add
stos
aad
add
jno
xor
cwtl
xchg
es
mov
or
lret
adc
add
dec
push
icebp
sbb
jle
fisubs
jns
adc
add
xchg
sbb
mov
imul
push
nop
mov
jmp
pop
inc
gs
or
cmp
arpl
and
aas
dec
mov
das
and
add
lcall
rol
jns
ja
loope
add
testl
sub
xor
mov
rolb
or
xor
icebp
ret
and
lods
xlat
or
js
dec
add
cmp
push
inc
ds
in
int
xor
mov
fbld
fldenv
neg
mov
test
xor
aad
pop
xor
pusha
fiadds
inc
repz
loopne
ficoms
unpckhps
push
jne
nop
sbb
sub
mov
and
cmc
js
dec
shlb
xor
ret
sbb
cmp
inc
inc
cltd
or
or
add
shlb
dec
sarl
je
cmp
popa
imul
adc
jg
and
jmp
addb
inc
dec
push
ret
addr16
or
mov
inc
sub
fistpl
popf
lock
mov
mov
cmc
scas
dec
mov
pop
outsl
test
mov
pop
adc
add
push
int3
movsb
call
sbb
inc
adc
sar
pop
in
jae
bound
ljmp
loope
shlb
push
adcl
and
bound
inc
iret
int
mov
pushf
mov
sti
push
rcll
jmp
push
xor
test
ljmp
int3
data16
or
xchg
lret
jne
out
or
cld
test
icebp
cmp
dec
add
mov
sbb
jo
ljmp
test
int
aad
fs
test
int
enter
mov
xchg
add
fcoms
adc
or
cli
and
or
int
ja
mov
hlt
rorl
mov
inc
hlt
push
arpl
push
lea
sub
ss
mov
popa
popa
mov
mull
int
pushf
aam
iret
out
inc
and
jp
xor
dec
and
es
mov
pop
dec
ret
add
stos
rcl
lock
pop
in
push
mov
dec
loop
fst
jge
sbb
sub
stc
pop
jno
add
int3
shrb
jne
mov
sbb
jbe
push
inc
lret
lods
int
jbe
pop
add
mov
cmpsb
leave
push
ds
or
not
clc
pop
push
insl
int
bound
add
mov
adc
xor
cld
or
dec
xlat
and
pop
mov
test
lock
xor
sbb
daa
mov
mov
lods
imulb
rol
or
pop
mov
lret
arpl
ret
mov
lret
in
negl
or
in
jecxz
add
lock
jo
insl
mov
rcr
sub
jl
add
mov
into
ss
push
lea
inc
out
fiaddl
sub
outsl
rorb
xor
ja
fsubrl
imul
bnd
mov
add
out
daa
call
inc
xchg
loop
sub
push
mov
jge
inc
sbb
sbb
loope
sbb
add
or
js
pop
jo
mov
stos
out
push
or
test
push
adc
jmp
mov
loop
stos
bnd
leave
add
adc
cmpsl
insl
push
or
loop
shrb
frstor
jg
ret
sbb
jnp
test
aad
mov
push
or
lcall
dec
mov
mov
mov
dec
pop
adc
int
push
pop
dec
lods
sub
shr
push
jmp
mov
outsl
std
and
enter
push
mov
jnp
xchg
clc
fnstenv
loope
mov
push
les
mov
inc
mov
pop
pop
outsb
mov
mov
jns
popa
icebp
add
adc
dec
and
add
popl
inc
mov
sub
push
dec
adc
dec
imul
or
sub
inc
jle
mov
jmp
jg
rcrb
jecxz
rcr
clc
add
dec
hlt
daa
js
loope
stc
sub
shrb
mov
mov
add
mov
cmp
xchg
imul
inc
insl
lods
push
fcomi
cmp
dec
pop
aas
dec
jl
stos
int
sub
aam
and
shl
dec
popa
sarl
inc
fs
push
adc
enter
pop
ja
aaa
rclb
loope
adc
pop
les
loope
inc
lods
mov
repz
push
scas
out
notb
cmc
cmp
adc
xchg
ja
roll
or
jmp
decl
mov
in
pop
jmp
or
mov
xchg
mov
pop
sbb
hlt
cmc
mov
test
pop
jbe
movsl
push
add
call
lret
pop
sarl
dec
mov
add
mov
outsl
push
sti
test
shlb
ss
ljmp
pop
push
adc
test
sub
repz
addr16
pop
xchg
sarb
mov
jns
mov
imul
push
insb
jge
add
leave
jns
xor
sub
pop
jge
bound
inc
mov
and
push
mov
lds
mov
iret
jmp
addb
pop
test
jbe
shll
xlat
lahf
jecxz
xor
notl
jmp
lret
push
or
push
pusha
jmp
jbe
xchg
ds
push
rclb
int3
pushf
out
cmc
ret
add
shll
or
jmp
movl
popa
pop
fimull
cmp
adc
roll
mov
or
repnz
aas
add
sub
lods
push
xor
stc
icebp
out
aas
fidivrs
cmp
mov
and
and
xor
mov
test
cmp
xchg
cli
popa
jb
xchg
xor
mov
and
push
insb
sub
sub
stos
lahf
cmp
ret
mov
xchg
mov
lds
clc
ret
test
add
lret
mov
mov
dec
sti
sub
cmc
cmp
mov
jae
jl
loop
cmc
enter
imul
mov
lret
push
sub
mov
lret
ljmp
enter
imul
cmp
shrb
dec
jo
or
hlt
in
or
outsb
icebp
xchg
js
xor
rcrb
jbe
fistpl
imul
ret
jmp
dec
pop
nop
inc
xchg
movsb
jns
inc
push
shlb
cmc
loop
sbb
leave
lods
dec
int
fnstenv
ljmp
mov
xor
in
stos
xchg
in
xor
mov
mov
call
lock
mov
leave
sbb
shll
cmp
mov
sub
dec
ret
repz
ds
cmp
push
fldl
or
sbb
jmp
leave
add
aas
shlb
pop
adc
jmp
repz
in
scas
cmp
dec
pop
loopne
mov
adc
scas
add
dec
adc
sarl
pop
mov
repz
mov
sbb
loope
leave
cltd
pop
daa
repz
outsl
faddp
or
not
aad
leave
cmp
in
jb
and
insl
in
sarl
add
ljmp
int3
cs
mov
shlb
mov
add
add
rol
jbe
popa
hlt
or
cs
into
lods
jns
and
sbb
dec
test
mov
cmp
loope
test
test
test
dec
lret
mov
ret
enter
movsb
inc
loope
repnz
std
inc
stc
xor
fs
arpl
fldenv
lods
inc
and
adc
adc
dec
aaa
push
and
cmc
cwtl
das
out
jae
cmpsl
cmp
and
xor
sbb
cld
icebp
adc
xor
filds
mov
mov
sub
add
fbstp
sub
cmc
mov
lahf
ret
xor
jno
sbb
add
cmp
jmp
das
jnp
cld
mov
mov
pop
adc
pop
inc
mov
mov
enter
xchg
out
mov
inc
lret
je
je
fisttpll
jecxz
mov
mov
imul
jmp
icebp
lds
jg
mov
mov
int
out
ja
cs
lock
jmp
sub
div
rclb
shll
pop
int
outsb
xor
inc
enter
dec
cmc
repz
or
dec
add
dec
add
push
sbb
or
mov
mov
lret
mov
mov
mov
sbb
adcb
repz
add
shr
or
cmpsl
jb
jmp
jno
je
movsl
jmp
jae
xor
aad
lret
sub
flds
jge
pop
jge
jmp
stos
push
pop
mov
jae
sub
push
repnz
xchg
fisttpll
outsb
add
mov
cmpsb
mov
mov
mov
fs
inc
divl
mov
inc
push
sub
mov
sbb
test
jne
je
jb
adc
sub
imull
add
in
or
movsl
rorl
mov
test
je
stos
and
clc
mov
sbb
xor
xchg
popf
or
push
or
ret
rolb
mov
or
shl
pop
ss
jb
shll
adc
aad
mov
roll
sub
imul
add
sub
fstpt
addr16
pop
adc
adc
mov
arpl
shlb
mov
bnd
scas
adc
sbb
sub
adc
std
dec
mov
and
test
icebp
jecxz
pop
jl
xor
dec
jae
lock
add
fwait
inc
dec
cmpsb
shll
mov
push
rclb
shll
jns
push
fisttpll
pop
jo
aaa
pop
addb
dec
or
lds
stos
int3
into
dec
inc
mov
or
sbb
and
or
les
add
mov
shl
rcrl
jl
icebp
inc
aad
add
adc
push
xchg
in
adc
push
js
adc
jae
sbb
cmp
pushf
fimuls
lock
loopne
int
adc
inc
fld
add
les
jmp
sbb
and
lock
sub
insl
adc
shrb
mov
ret
mov
movl
or
pop
pop
ret
nop
sub
inc
inc
ret
icebp
pop
sbbl
add
cmc
jge
push
nop
inc
dec
jecxz
inc
leave
call
inc
push
shll
cmc
xor
ret
xchg
rol
inc
and
xchg
adc
jne
stos
ret
sbb
dec
ret
dec
xabort
adcl
in
test
aad
stos
fwait
jecxz
sbb
add
loopne
movsl
and
test
or
leave
push
pushf
iret
sbb
add
inc
sbb
insb
xchg
add
pusha
inc
jecxz
adc
fbld
lds
sub
jle
push
shlb
ret
addl
dec
shll
ss
mov
add
mov
cmpsl
add
ja
jbe
jle
ljmp
adc
test
sidtl
cmc
int3
stc
xor
inc
repz
out
shl
sub
mov
sub
adc
or
cld
loope
je
dec
mov
sbb
cmc
subl
iret
push
loop
dec
cmp
icebp
aad
fnstcw
test
push
jnp
pop
negl
lods
imul
cmp
sub
je
pop
ret
int3
mov
adc
pop
ljmp
les
sbb
gs
repnz
shlb
jne
jns
jge
test
cmp
adc
mov
sub
jae
shrl
jne
mov
inc
dec
fsubs
jne
pop
out
out
add
dec
mov
fisubrs
cmc
mov
lret
cmovl
popa
in
test
scas
lea
stos
mov
jno
leave
pop
sbb
jb
enter
add
inc
mov
dec
cli
xchg
std
pop
jle
decb
jge
imul
leave
mov
loop
es
test
or
jae
mov
test
jg
jg
jae
add
fnstsw
mov
sbb
rorl
push
adc
mov
pop
mov
ret
jns
cmpsb
jno
mov
repz
mov
dec
cs
jne
jne
jmp
dec
jne
adc
icebp
lahf
or
dec
lock
mov
ficoml
xchg
add
inc
mov
push
inc
and
fnstenv
pop
mov
ret
rcrl
push
add
mov
sub
mov
mov
rcll
test
sub
cmp
cmpsl
sahf
mov
lds
fmulp
es
jb
dec
inc
xchg
adc
sub
dec
cmp
or
cmp
mov
inc
jae
cmc
pop
and
pop
out
pop
adc
enter
mov
inc
sarl
mov
mov
into
mov
push
push
loopne
inc
fisttpll
pop
repz
and
pushf
mov
jge
sbb
and
testl
rolb
mov
cmp
call
push
imul
inc
push
movsb
gs
rorb
aad
push
jle
cltd
push
outsl
xor
mov
jl
pop
aad
and
mov
sbb
sub
inc
sbb
dec
fcmovbe
pop
fwait
daa
mov
xor
pop
dec
cli
notb
cwtl
mov
add
fisttpll
inc
stos
dec
test
inc
lods
and
pop
rclb
cmp
cmp
dec
leave
sbb
shll
insb
ss
mov
pop
push
xchg
shll
or
daa
repz
out
int
cmpsl
aaa
sti
xor
push
aaa
sti
xor
and
lea
ret
jbe
adc
ret
fistpl
dec
and
or
xchg
mov
xchg
rcr
add
push
leave
pop
dec
pushf
rcrb
cltd
cmp
inc
inc
xor
hlt
dec
dec
push
mov
push
shrb
xchg
dec
vandnps
into
fnstsw
jne
cmp
fsubp
dec
inc
dec
adcl
idivl
ror
negl
shl
test
sbb
add
repz
repnz
jne
add
jne
add
pusha
sub
into
test
inc
ss
leave
cmp
leave
inc
cmp
dec
jne
cmp
and
enter
sub
inc
ja
rclb
ds
pop
aad
cmc
mov
ret
dec
negb
lret
mov
loope
push
xor
sub
adc
enter
aad
or
rcl
in
divb
dec
add
pop
jg
shlb
aam
ret
leave
mov
adc
adc
xor
aad
mov
cmp
or
sub
sbb
mov
dec
loope
xrelease
loope
lret
mov
push
fimull
cmc
mov
in
inc
cmp
es
sarl
sbb
es
jg
inc
jne
pop
std
push
xchg
fistpl
push
imul
out
and
jb
xchg
dec
leave
and
lods
dec
pop
cli
test
leave
repz
hlt
mov
jge
popa
aaa
repnz
jno
mov
andl
addb
movsb
xor
pop
push
pop
imul
jg
ret
mov
inc
adc
push
mov
leave
xor
mov
mov
mov
int
enter
sbb
dec
dec
hlt
pop
jae
daa
push
scas
lret
stc
dec
fnsave
ret
push
shrb
pop
fists
add
jne
dec
sub
mov
jns
mov
inc
jno
loope
pop
int
xor
lods
pop
inc
cwtl
xor
popf
stos
push
cmc
rorl
pop
inc
enter
inc
mov
xchg
dec
add
shr
out
xchg
jecxz
xchg
aam
arpl
sbb
sub
dec
mov
dec
ljmp
sbb
clc
loope
pop
into
pusha
push
ds
inc
sbb
push
aas
int
shll
fst
jl
fucomip
push
int
sahf
push
pop
xor
mov
mul
std
shrl
ret
loopne
jb
sub
and
xor
add
jns
ss
cmp
or
inc
mov
push
xor
int
cmc
scas
rol
clc
push
aaa
repz
rolb
dec
fsts
xchg
in
not
push
push
cmp
std
fimull
repnz
push
cmp
mov
inc
es
inc
ret
adc
jbe
jp
icebp
xchg
sarl
rclb
es
inc
test
sub
push
std
mov
push
scas
sub
out
and
rcrl
mov
mov
in
in
xor
lahf
and
sbb
rolb
xchg
lds
sbb
jg
dec
sub
popa
pushl
inc
cmp
jecxz
dec
push
xchg
stos
adc
je
int3
cmp
pop
repz
insl
mov
jmp
cmpsl
adc
cli
mov
xchg
daa
cmp
orb
inc
xor
lret
jge
imul
insb
mov
popa
je
push
test
movsl
add
lret
mov
sti
mov
push
adc
lcall
jns
shll
filds
movsl
rcrb
or
aaa
or
dec
push
jno
pop
mov
pop
pop
in
jne
jmp
and
int3
clc
imul
rol
mov
mov
stos
into
rorb
mov
xor
pop
mov
mov
inc
xchg
test
xor
shll
cmc
test
hlt
in
dec
loope
or
imul
lret
aaa
icebp
xor
cmc
mov
call
mov
lock
adc
insb
int
lock
into
push
push
jae
dec
ljmp
fucom
xor
add
wbinvd
lods
popf
xor
sub
rcl
add
dec
outsl
xor
or
loop
lcall
stos
sbb
jle
out
ds
rcl
mov
daa
pop
je
loopne
inc
pop
lock
int
out
fidivrs
stos
lret
pop
call
movsl
cli
ret
js
push
sti
mov
test
xor
mov
rcll
add
maxps
dec
das
cmp
pop
or
nop
and
push
pop
or
jle
add
nop
inc
lcall
scas
mov
daa
popa
add
mov
call
sbb
int
push
push
movsb
inc
cmpsl
lret
push
mov
jbe
aad
fsubr
mov
mov
jmp
jns
mov
into
ss
divb
sti
push
sti
cld
add
clc
push
fwait
movsb
repnz
out
dec
ret
std
inc
call
mov
jbe
lock
test
mov
arpl
aaa
out
aad
fcmove
rorl
push
sub
out
rorb
aas
cwtl
ja
stos
mov
or
mov
popf
mov
mov
pop
jmp
into
dec
pop
enter
rcrl
or
xor
aam
jg
ret
pop
ret
aad
xor
pop
and
add
mov
lods
lahf
adc
xor
mov
cmpsl
jmp
xchg
adc
mov
mov
add
leave
sub
mov
mov
sbb
mov
rclb
mov
push
add
cmc
data16
sti
or
clc
rolb
dec
lock
xor
out
push
cltd
or
pop
les
mov
or
cld
fsts
mov
invd
mov
lds
nop
push
inc
outsl
mov
imul
testl
cmp
or
jl
in
or
pop
push
xor
sub
rcrb
roll
and
ljmp
test
jg
movl
xor
test
pusha
hlt
add
mov
negl
pop
push
push
out
jmp
test
data16
xor
and
int
mov
test
push
arpl
fnsave
dec
cli
test
mov
mov
test
test
rolb
add
decl
test
mov
inc
jae
add
lock
test
adc
dec
cltd
mov
jmp
add
hlt
aam
pop
sbb
inc
sti
dec
ljmp
fadd
sar
aad
stos
rol
xlat
ffreep
js
mov
inc
nop
test
add
in
pminsw
hlt
push
or
shl
sbb
sbb
ffreep
dec
jns
inc
mov
repz
xor
and
sti
dec
jo
adc
mov
dec
adc
add
jo
push
loopne
add
popa
ret
in
roll
pop
mov
fwait
ss
icebp
inc
jo
jg
add
andb
add
cmp
inc
mov
xchg
mul
or
or
jo
roll
cmc
add
mov
xlat
pop
dec
fnsave
and
bswap
rolb
insl
cmp
shll
xor
ja
sub
out
jge
clc
sbb
mov
mov
cmp
mov
and
addr16
into
dec
jp
incb
in
in
in
js
int
xchg
cli
add
add
push
xchg
fcoms
adc
out
or
mov
pop
imul
addr16
shl
pop
xor
sub
dec
popf
adc
add
sub
clc
xlat
or
dec
loope
imull
rep
jmp
fisubrl
rcrb
into
cltd
jmp
inc
imul
lret
push
not
out
sbb
jmp
xor
xor
xor
pusha
mov
adc
outsl
rorl
shll
sub
fs
shr
addr16
or
in
icebp
test
inc
push
cmp
sub
in
rorl
ljmp
xlat
inc
jl
imul
adc
stos
lahf
clc
ror
aaa
mov
lret
pop
cmc
push
stos
test
sti
xchg
cmc
cmp
xor
inc
rcrl
repnz
daa
and
ljmp
pop
add
pop
mov
ret
inc
or
fildll
ljmp
test
inc
and
scas
notb
xchg
xchg
sbb
add
pushf
vcvtss2sd
movsl
xor
mov
in
xchg
push
rcrb
leave
mov
outsl
enter
rcl
scas
fcmovb
mov
test
and
inc
pop
xchg
sub
xlat
aaa
out
inc
movsl
mov
dec
cmpsb
mov
push
popl
test
insl
imul
jle
xchg
dec
add
sbb
dec
sbb
test
call
xchg
xchg
lock
push
sub
or
out
loop
and
lret
mov
loope
aas
sub
scas
dec
fldenv
aaa
push
jne
adc
iret
in
xor
cmp
fdivl
push
jmp
fnstcw
pop
hlt
jg
inc
popf
push
push
arpl
outsl
dec
popa
xchg
cld
cld
ds
daa
ficomps
sub
cltd
add
or
pop
xchg
popa
aaa
lret
ss
sbb
sbb
xor
mov
stc
dec
addr16
lahf
ret
mov
adc
mov
fs
pop
stc
dec
push
jne
pop
inc
jns
or
jae
loopne
push
or
das
jne
push
stos
rcll
and
mov
sbb
or
addb
enter
shll
js
repz
push
dec
dec
pusha
ret
xchg
jecxz
mov
cmc
sub
addl
sarl
or
and
test
jmp
jp
test
in
movl
js
std
jo
test
dec
adc
or
and
in
popa
mov
inc
sbb
add
cs
mov
adc
mov
push
les
push
cmc
loop
in
xchg
sub
loop
sub
or
loope
int3
pop
ret
push
std
sub
pop
and
outsl
xor
mov
call
and
mov
mov
adc
pop
xlat
mov
mov
mov
or
xor
mov
or
lds
dec
lds
and
imul
inc
fists
jl
xchg
push
mov
rcr
sbb
ja
mov
push
int3
repz
or
jnp
ret
sbb
cmp
outsb
lahf
shll
insb
std
and
popa
push
popa
lretw
xor
popa
and
sub
nop
rcrl
sbb
aas
sbb
jnp
mov
aam
test
sbb
fwait
cmp
add
mov
xchg
push
xchg
push
add
sbb
jbe
mov
inc
push
lcall
push
sub
outsl
and
nop
aaa
popa
cmp
sahf
outsl
jge
jns
rorb
test
dec
aaa
pop
xchg
shll
sar
test
xor
fld
push
mov
icebp
popa
std
push
repz
test
lahf
mov
movsl
mov
shrb
cld
popa
shrl
xor
jmp
add
mov
mov
xchg
pop
mov
xor
or
xchg
xchg
dec
nop
sbb
mov
sub
inc
adc
mov
fs
mov
xchg
scas
jl
sub
lret
int
xor
cmp
fxch
mov
jmp
rcrl
int3
mov
xor
rclb
jns
movsl
mov
and
mov
rclb
repnz
dec
jno
ss
sub
fsubr
rorb
inc
std
aas
push
test
xchg
shll
stos
hlt
inc
xchg
lods
fstps
jne
shrl
or
push
mov
ret
push
je
cltd
shlb
mov
and
push
xlat
add
xchg
pop
pusha
cmp
mov
fadds
mov
sti
mov
les
mov
roll
add
shl
les
lock
frstor
dec
jge
leave
dec
es
dec
aaa
or
dec
xor
sarl
lea
or
fs
jl
xchg
pop
jb
cmp
imul
mov
dec
xor
sub
jno
jns
fstl
pop
repz
roll
inc
pusha
mov
adc
les
push
incb
xor
dec
mov
push
loopne
addr16
push
xorl
popa
mov
mov
mov
sbb
xchg
push
dec
int
mov
fisttpll
sub
arpl
ret
jne
ljmp
cld
add
or
rcrb
sub
out
insl
cmpsb
mov
stos
mov
scas
shrl
jne
jne
mov
push
shlb
fiaddl
push
mov
cwtl
mov
cmpsb
rorl
imul
xor
sahf
aam
and
ja
fbstp
lret
cmpsb
fwait
sbb
mov
mov
daa
fwait
xchg
rclb
jb
dec
in
inc
and
dec
outsl
jno
addr16
enter
shll
ds
adc
daa
inc
dec
inc
jns
add
icebp
loop
dec
push
xlat
sahf
sub
mov
fbld
cld
testb
jns
adc
sarl
adc
popa
jne
xor
xor
adc
ljmp
sarb
inc
jo
rolb
roll
dec
js
in
nop
ret
xchg
pop
repnz
mov
mov
xlat
jp
mov
dec
push
xchg
mov
stc
add
adc
xchg
mov
inc
sbb
pushf
cmp
xchg
push
outsl
inc
and
inc
cmp
mov
in
inc
pop
stc
mov
inc
sbb
push
pop
repz
push
dec
les
rcrl
pop
add
pop
mov
add
mov
jbe
jne
sub
pop
sbb
lea
roll
lcall
imul
pop
or
scas
in
jb
dec
data16
add
jge
lret
sbb
jg
insb
add
cmp
loop,pt
adc
call
repnz
sahf
mov
mov
int3
out
fildl
lcall
cmp
push
xor
inc
adc
mov
inc
pop
jmp
and
pop
ror
xchg
shl
sarl
add
cmc
stc
and
icebp
shrb
xchg
in
pop
icebp
mov
loop
push
sub
and
aad
push
dec
movb
add
cmp
idiv
mov
loopne
mov
mov
insb
adc
add
inc
iret
dec
xlat
sbb
repnz
add
cltd
and
and
sbb
aam
sub
sahf
mov
mov
lds
xchg
xchg
jae
sti
mov
dec
stos
cmp
test
or
jecxz
addr16
and
or
in
aas
dec
lods
scas
mov
stos
out
cli
outsl
pushl
add
adc
add
or
mov
cmp
xlat
jbe
inc
lahf
ret
insb
cli
popf
push
insb
pushf
clc
dec
sbb
add
fmuls
xor
mov
inc
xchg
fmuls
ficoms
jb
or
jae
cld
inc
and
rorl
mov
fildll
xor
mov
mov
or
adc
adc
and
dec
adc
sub
adc
dec
or
and
jae
or
aam
jae
cmp
nop
push
insl
lret
jns
scas
mov
cld
pop
dec
fcmovu
mov
in
int3
decl
popa
push
lods
add
les
int3
rcr
shr
repz
adc
sarb
jo
lret
loop
jnp
adc
push
movsl
xor
enter
jbe
mov
test
repz
ror
fidivs
cmc
cmpsl
inc
fisttpll
cmc
aad
inc
jmp
stc
out
sar
shl
cmc
cmc
or
or
add
xor
shrb
cmpsb
repz
mov
jne
mull
das
xor
and
push
xor
dec
dec
inc
subb
inc
inc
cld
roll
push
pop
mov
pop
call
push
push
fsubrs
push
add
sbbb
pop
cmc
jnp
cld
into
fs
shll
fstpl
out
pop
pop
fcoms
fldl2t
and
dec
mov
stos
mov
cmpsl
pop
push
cmp
add
cmpsb
pop
mov
jecxz
or
adc
jge
adc
adc
cmpsb
aam
fstl
mov
add
push
dec
das
test
cmp
popa
and
movb
mov
adcb
add
addr16
ficoml
imul
leave
or
std
out
mov
mov
mov
test
dec
imul
fisttpll
dec
loop
xor
ror
test
cli
mull
int
fildll
inc
repz
pop
repnz
dec
xor
or
hlt
pop
mov
lock
fstpl
cltd
mov
adc
in
sub
pop
inc
lret
cmp
stos
mov
xchg
jb
cmp
fldl
test
xchg
test
cmc
ror
dec
repnz
sub
ds
push
icebp
std
fidivl
aam
jbe
mov
xor
add
das
in
dec
add
sbb
fmuls
push
rcrl
movsl
std
loop
setg
imul
ljmp
mov
mov
mov
mov
test
mov
arpl
test
mov
leave
jmp
hlt
pop
call
pushf
and
cltd
lds
rorl
lods
movsl
xor
pop
dec
scas
push
jne
push
and
jle
mov
pop
cwtl
loop
xchg
and
sbb
mov
add
push
xor
leave
inc
daa
pop
adc
jg
fiaddl
cli
mov
push
mov
pop
jae
lods
dec
push
mov
ret
and
clc
outsl
or
inc
push
in
nop
mov
xchg
xlat
jp
scas
shrl
ds
or
dec
shr
cld
dec
push
test
cltd
leave
test
pop
and
sub
push
fwait
sbb
adcb
inc
sti
inc
in
push
sbb
adc
ljmp
repz
fadds
rcl
in
ljmp
add
cld
test
stos
inc
inc
lods
aad
fimull
call
sti
and
rorb
mov
test
xchg
dec
arpl
push
and
test
fiaddl
or
add
fmul
gs
fdivrs
mov
sub
push
ret
push
test
mov
shll
add
or
jb
incl
neg
add
pop
mov
cwtl
dec
and
jnp
push
sbb
jecxz
sub
test
dec
popa
imul
flds
adc
sub
enter
fildl
leave
push
sbb
or
ud2
jb
shr
or
and
data16
xlat
mov
les
aam
shrl
clc
push
stos
inc
mov
imul
pop
js
jae
rcrl
jg
and
icebp
out
xor
das
and
jp
rcrb
sarl
cmp
jecxz
mov
in
movsb
ret
pop
inc
mov
and
rorb
loope
mov
pop
and
lock
sub
pop
movsb
or
or
or
sub
or
xor
dec
jnp
jbe
cli
notb
push
mov
popl
jbe
fs
xchg
add
add
push
pop
xchg
xlat
cs
orl
dec
inc
and
lret
clc
sbb
mov
mov
aas
adc
stos
test
push
js
int3
add
xchg
mov
fisttpl
jae
xchg
je
mov
jno
push
mov
test
cmp
jl
out
ror
sbb
jge
dec
sub
aas
and
sbb
in
add
out
pop
mov
sbb
or
dec
movsl
fisubrs
mov
cmc
jmp
test
jae
test
out
rcl
repz
jp
cwtl
std
icebp
fdiv
out
cmpsb
outsb
sbbb
aad
cmp
popa
lds
xchg
insl
aas
or
mov
or
aaa
fdiv
in
jae
adcl
adc
clc
jae
sbb
inc
mov
dec
mov
mov
out
shr
fs
movsl
lcall
cld
add
adc
xor
icebp
add
test
or
push
mov
jbe
rdpmc
adc
or
xchg
mov
lock
jle
jle
and
stc
adc
add
jae
add
sbb
jns
sti
jge
lahf
adc
hlt
repz
sbb
sub
adc
sarb
adc
ja
jge
or
push
imul
ret
ljmp
lds
mov
cmc
enter
mov
xlat
test
mov
xchg
mov
leave
leave
mov
clc
notb
int3
mov
scas
adc
and
out
or
enter
icebp
adc
add
pop
dec
aam
jp
gs
xchg
addb
int
ljmp
testl
testl
lods
ret
testb
add
mov
xlat
fistps
pop
test
jle
jae
ror
shlb
call
scas
sbb
gs
xchg
mov
mov
cmp
jp
rcrl
sbb
imul
or
fisttpl
aas
in
pop
add
rorb
xchg
mov
and
jnp
mov
enter
push
mov
push
jp
mov
hlt
dec
cmp
data16
pop
push
xchg
cmpsl
xor
jno
add
je
push
xor
cld
insl
sbb
jne
int3
test
hlt
test
mov
je
jp
sarb
cmp
cmc
les
rclb
mov
rolb
imul
les
mov
pop
leave
fcoms
imul
imul
dec
gs
jns
inc
jge
dec
jae
jmp
xlat
adcl
dec
push
popf
push
mov
add
xchg
inc
fsubrl
mov
xor
mov
mov
jmp
leave
inc
ror
cs
into
movsb
dec
or
ret
movl
rcr
vpaddq
inc
lods
rol
mov
cmc
in
shl
shl
repnz
xchg
jecxz
push
sar
shl
shl
or
sar
or
cmc
add
int
notl
call
dec
dec
jne
adc
fldcw
add
xor
sub
les
cmp
adc
fisttpll
inc
rolb
dec
repnz
rclb
push
dec
imul
mov
arpl
sarl
jge
jno
add
repz
rolb
adc
xchg
leave
test
mov
cmc
mov
mov
jmp
aas
dec
jmp
lds
repz
ffree
rorl
jne
adc
fsubr
leave
loope
repz
stc
sar
call
or
or
add
dec
sbb
sbb
adc
dec
test
cmpl
popa
mov
or
ljmp
aam
cmpsb
jp
pusha
jg
mov
into
xor
imul
test
dec
pop
bound
push
mov
jbe
mov
add
jne
cmp
pop
xchg
repnz
stos
xchg
jo
mov
mov
fwait
or
sti
add
in
test
inc
or
push
int
mov
in
sub
fsts
popa
loop
adc
inc
pop
jo
dec
push
jb
inc
push
cmp
out
sub
inc
push
lock
cltd
jecxz
add
jecxz
icebp
mov
test
fadd
cmp
sbb
sbb
int
cmp
mov
ror
xor
and
mov
sub
lock
pop
xor
test
ljmp
mov
mov
shll
ror
popa
aaa
aas
lds
mov
js
test
lods
and
xchg
mov
dec
lock
xor
sahf
nop
jp
xor
rorl
in
sarb
in
mov
adc
dec
push
xchg
lcall
xor
jb
fimuls
push
std
xor
fdivrl
push
inc
int3
xor
mov
sub
out
dec
mulb
xlat
out
sub
add
repz
inc
into
and
mov
loop
in
push
aaa
fdivs
std
fadds
daa
jmp
es
lds
dec
aas
das
sbb
ret
jo
ljmp
out
xor
sbb
int
repz
add
sarb
jo
js
lds
or
call
jae
sbb
add
repz
repz
rolb
out
add
and
cmc
ret
in
notb
or
int
or
test
cli
xchg
push
sbb
and
add
xchg
dec
insl
cmovnp
fs
xor
lds
or
sbb
xor
sub
ret
loopne
cmp
mov
or
pop
sbb
inc
int
cmp
ret
shll
test
mov
jmp
lret
vmovq
xor
mov
sbb
es
add
and
xchg
push
cmp
roll
sbb
or
stc
adc
clc
mov
xor
aaa
repz
imul
xor
inc
sti
mov
icebp
idivb
push
push
jecxz
imul
sub
sbb
xchg
mov
mov
test
pushf
leave
cli
mov
jle
lret
decb
cltd
lcall
negl
sar
jge
xchg
inc
nop
sub
inc
js
fisubl
push
std
aas
aaa
sub
cmpsl
pop
loopne
jb
and
mov
in
xor
dec
sbb
mov
test
mov
pop
dec
addr16
int3
in
test
jge
out
daa
xchg
iret
int
repz
mov
inc
mov
ret
jg
into
mov
adc
popf
sub
push
xchg
jae
lock
enter
jne
mov
inc
popa
shll
ljmp
leave
cmp
loope
inc
add
aaa
mov
popa
inc
cmc
aad
loopne
and
add
add
hlt
je
mov
negb
sbb
pop
add
sbb
inc
pusha
cmc
push
leave
testl
rcrb
push
pop
and
std
cli
add
jge
cli
mov
mov
imul
fcmove
leave
jne
roll
test
in
stc
add
mov
xchg
test
push
arpl
fnstsw
stos
xchg
mov
sub
cs
lock
fcomps
jns
pop
jl
xor
stos
test
test
arpl
repnz
or
scas
adc
test
repz
cmpsb
ja
in
das
push
adc
sub
ljmp
out
sub
add
mov
mov
push
jnp
add
pop
and
testl
and
jns
push
pop
push
insl
mov
sarl
sbb
mov
sarl
mov
shlb
adc
xor
jno
ficompl
fadd
pop
add
mov
push
inc
cmc
push
repz
int3
add
dec
cmp
aad
js
in
loop
jae
pushf
movb
xchg
insl
and
xchg
mov
mov
out
and
add
xor
mov
mov
mov
sub
xor
adc
test
nop
sub
hlt
out
cmpsb
hlt
xchg
call
pop
icebp
mov
mov
test
sbbb
xor
ja
adc
push
sub
fmuls
mov
pop
add
out
mov
add
mov
in
xor
bound
and
addb
pop
rol
mov
fs
add
lods
addb
mov
movsb
sbb
in
and
xor
shlb
icebp
inc
fldenv
mov
fs
repnz
cmc
hlt
inc
movsb
lcall
sub
mov
sbb
and
xor
adc
in
or
shlb
and
rorb
mov
fnsave
add
adc
mov
push
xchg
in
ljmp
xchg
xor
repnz
fwait
cmpsb
arpl
inc
push
leave
scas
nop
in
movsl
sub
std
popa
je
pop
sti
jl
xor
and
int
xor
mov
dec
ror
fwait
jne
rol
insl
sarl
shrl
xor
xchg
mov
popa
lcall
sti
dec
ja
jmp
test
mov
mov
sti
aaa
lret
dec
test
hlt
leave
subl
int3
lret
sbbl
add
mov
jg
insb
mov
mov
or
or
inc
push
xor
sub
faddp
pop
cltd
stc
into
int
mov
add
pop
test
and
xchg
pop
adc
mov
push
jnp
adc
add
sbb
pop
inc
jle
inc
jmp
add
shll
and
loopne
rcr
leave
fists
push
shlb
repz
push
dec
cmp
shr
dec
das
push
icebp
and
in
dec
inc
imul
or
xchg
cwtl
mov
mov
into
andb
pop
jb
and
cmp
xor
mov
mov
dec
sbb
insl
mov
and
cmc
mov
iret
jecxz
inc
cwtl
adc
cmpsb
xchg
mov
stos
pop
test
mov
add
sub
pop
jmp
mov
sbb
rorw
dec
add
imul
daa
jno
dec
and
inc
int
cmp
jbe
mov
pop
loope
sbb
cli
mov
flds
int
dec
and
mov
mov
mov
pop
adc
dec
sarb
add
dec
mov
mov
scas
fpatan
iret
outsl
int
loop
xor
push
imul
ror
sub
inc
jno
leave
push
lods
lock
out
ret
xor
inc
inc
xchg
jge
jp
lods
cmp
xor
mov
lret
xchg
and
sbb
add
sbb
loopne
adc
mov
add
rclb
orb
stc
mov
mov
mov
lock
pop
sbb
jmp
sub
dec
hlt
cmpl
cwtl
inc
inc
fnsave
cwtl
fimull
shrb
jne
jle
pop
or
cmp
mov
sarl
mov
leave
aas
mov
aam
dec
inc
lcall
mov
pop
nop
icebp
jbe
incb
sub
or
stc
test
rcr
fldz
lret
dec
add
negl
fnstcw
leave
sub
fnsave
mov
ljmp
mov
in
arpl
jb
add
mov
int
dec
fnstsw
mov
daa
cmpsl
ret
int3
rcll
adc
imul
leave
push
cmp
ror
add
out
lds
dec
dec
call
cmp
orl
mov
sbb
daa
and
jmp
lods
cmp
outsb
and
xor
cmp
sbb
jmp
test
xor
add
mov
hlt
imul
and
hlt
mov
dec
cmp
shll
and
inc
arpl
jl
iret
int
jmp
or
stos
xor
mov
add
dec
jno
popf
mov
xor
xor
or
xor
cmp
mov
or
popa
cli
ljmp
cmc
int
daa
and
push
dec
stos
dec
mov
cmp
mov
lret
jle
pop
jmp
rcll
lods
sarl
add
jne
cmc
add
jle
pushf
jne
in
jecxz
mov
daa
fld
fisubrl
jl
daa
mov
sti
mov
in
ljmp
in
push
push
lahf
add
pop
int
and
jbe
jo
pop
xchg
fistpll
popa
and
aaa
push
in
jo
fmull
push
dec
jmp
and
xchg
and
pusha
sbb
icebp
pop
dec
cmpxchg
loopne
mov
lret
daa
push
scas
sbb
pusha
clc
fisubs
mov
dec
leave
xchg
sub
repz
outsb
jecxz
pop
sahf
and
push
repz
lock
in
and
or
pop
mov
hlt
lds
ss
rcrb
std
rcll
mov
loop
add
xchg
xchg
push
into
jecxz
pop
in
clc
sbb
dec
sub
fldcw
lods
mov
mov
cmp
dec
std
es
mov
pop
lret
int3
movb
sysexit
outsl
int
mov
mov
mov
mov
cmp
cmp
adc
push
pop
xlat
add
repz
jmp
inc
or
mov
mov
stos
jl
push
add
arpl
mov
ja
or
ljmp
mov
sub
scas
push
sbb
aam
popa
mov
push
stos
or
push
adc
icebp
js
and
repnz
mov
rcl
hlt
jae
and
daa
stos
add
or
aaa
int
stc
pop
fwait
push
adc
or
add
ljmp
pop
clc
xor
into
pop
mov
rolb
or
je
inc
jmp
dec
xchg
aad
and
mov
and
ror
fs
cwtl
loope
lods
aad
push
jmp
push
push
or
rcl
cmc
adc
dec
repz
lahf
and
sahf
stos
ljmp
mov
mov
mov
leave
icebp
cld
push
cmpsb
ds
inc
out
add
mov
cmp
imul
xor
rorb
test
xor
xor
into
dec
jge
push
mov
dec
mov
adc
ret
adc
jg
lock
mov
call
or
cmpsb
dec
shl
int
and
push
dec
movsl
jecxz
xchg
push
xchg
mov
mov
outsb
je
mov
sbb
cmpsl
or
fnstsw
inc
push
adc
stos
mov
repz
jmp
mov
pop
mov
or
pusha
dec
sub
imul
xor
mov
push
xchg
push
idiv
mov
adc
xor
pusha
je
push
rorb
pop
int3
hlt
jae
and
aam
incb
push
or
test
outsb
std
cmp
cmpsl
jne
xor
push
lds
mov
shrl
cmp
pop
shll
in
inc
dec
or
into
sub
sub
out
jmp
mov
or
sar
adc
inc
loopne
cmpsb
insb
orl
mov
hlt
mov
cmp
jle
stc
leave
scas
in
mov
mov
add
push
sbb
mov
stc
aad
or
lock
mov
xchg
or
jne
cmp
ret
push
cmpsl
in
stos
inc
not
std
dec
divl
xor
loope
ficomps
lret
test
push
push
test
ret
aas
lock
or
xchg
sbb
dec
cmp
add
xlat
in
or
jle
adc
jns
mov
cmpsl
dec
cwtl
xor
mov
frstor
in
mov
lret
daa
ror
dec
mov
lret
mov
cmpb
les
or
dec
test
mov
out
and
xor
sub
sbb
shrb
aad
add
xor
test
dec
fwait
push
leave
dec
or
pop
mov
mov
cmp
ret
add
mov
stos
cwtl
xlat
dec
pop
dec
shll
cmc
std
cmp
or
sbb
enter
sbb
mov
adc
and
rorb
shlb
sbb
inc
out
loope
inc
adc
test
out
clc
inc
dec
lahf
mov
sarb
cs
jp
dec
push
fs
icebp
dec
enter
add
orb
mov
popa
mov
mov
repz
push
and
imull
push
int3
xor
rcrb
add
mov
mov
sub
and
xor
jl
sahf
sbb
sub
imul
xchg
mov
inc
outsb
aam
stos
cld
inc
sub
jg
loope
imull
mov
mov
mov
pop
adc
sarb
jae
inc
add
cwtl
test
add
inc
in
fnstcw
xor
mov
sub
mov
mov
push
popf
nop
dec
or
push
mov
inc
adc
out
fldl
mov
inc
rclb
cmpsb
je
lea
scas
push
mov
jmp
ret
notl
rol
leave
mov
ret
jae
fld
cmp
shll
dec
pop
pop
adcb
add
sbb
insb
push
outsb
testb
dec
sbb
mov
sahf
flds
xor
loope
scas
rorl
sbb
aas
adc
gs
add
aam
rolb
fbld
sbb
add
add
stos
or
pop
sarb
movsb
or
adc
sbb
and
int
inc
lahf
rcll
rorl
push
jb
push
add
jae
push
pushf
mov
stos
clc
sub
xchg
lds
dec
sub
scas
in
mov
or
mov
mov
aaa
push
test
push
stc
shl
push
xor
lds
xchg
loop
lods
addb
shlb
scas
rcr
and
sarb
into
inc
out
add
or
jae
and
test
dec
fistpl
jae
popf
push
xchg
test
shrl
dec
stos
sbb
or
or
fadd
cwtl
sbb
or
mov
or
inc
movsl
mov
pcmpeqw
lds
mov
jg
mov
add
test
or
rcrl
xor
mov
mov
lret
sub
and
dec
mov
xor
or
mov
mov
mov
and
cmpsl
push
adc
enter
imul
ljmp
in
int
add
sbb
rcll
sahf
adc
aam
test
pop
loope
or
xchg
fldcw
dec
xor
and
and
rep
or
or
add
lock
mov
mov
mov
and
arpl
mov
roll
add
mov
outsb
leave
dec
lods
cmc
adc
scas
dec
jl
addr16
iret
shl
mov
mov
adc
sbb
sub
sar
pushl
and
mov
dec
repnz
cmp
mov
xor
mov
in
gs
cmpl
popl
ret
mov
ja
push
xor
push
fdiv
lock
dec
adcb
je
ret
imulb
xor
addr16
add
push
add
mov
popl
cmp
ror
xor
jne
or
and
shrb
fcmovbe
ret
jns
stos
icebp
mov
loope
sub
cltd
jo
aad
out
lods
sbb
inc
sub
lret
mov
test
pushl
xor
hlt
mov
scas
xchg
ret
push
das
movsl
xor
pop
xor
loope
fs
daa
sub
jae
scas
cmp
pushf
lds
dec
xor
popf
out
les
shl
mov
ror
xor
fnstcw
jbe
push
mov
inc
sbb
cmpsl
enter
cli
push
rcl
in
mov
daa
dec
repnz
xor
pop
jne
std
insl
dec
repnz
xor
test
lret
enter
mov
jo
and
xor
pop
int
or
mov
rcr
fs
stc
dec
push
and
dec
test
adc
aaa
aaa
repz
dec
and
fsubrs
adc
mov
mov
test
inc
inc
sbb
adc
dec
mov
xor
inc
adc
fstps
dec
push
fstp
push
adcl
fildll
and
mov
int
xor
roll
mov
cltd
jp
jg
addr16
mov
jg
mov
xchg
push
lods
fsubrs
mov
sub
dec
lret
push
jbe
and
add
repnz
call
mov
rcrl
lds
stc
jne
rorb
std
inc
jmp
xor
adc
lods
js
shll
jmp
sub
mov
in
loope
push
mov
sti
xor
mov
add
adc
jae
ret
fsubl
stos
insb
mov
dec
and
xor
or
jmp
rorb
jg
out
sarl
xchg
xor
sbb
xchg
pop
inc
fmulp
or
int
pop
mov
sub
add
cli
jne
outsl
add
or
push
loope
out
and
rcll
fisubrs
adc
push
jmp
test
mov
sub
dec
shl
test
test
filds
sarb
test
aaa
jne
pop
jle
icebp
pop
and
int
int
orl
arpl
push
shll
sbb
sarl
xchg
repnz
fnstenv
push
shl
fcmovbe
cmp
mov
mov
leave
repz
hlt
pop
out
fdivrs
loopne
in
xchg
sbb
test
movl
rorb
into
sar
clc
aaa
not
rol
inc
jg
int
ret
and
mov
inc
aaa
negb
cmc
jecxz
cltd
ror
test
or
adc
jecxz
or
push
repnz
xor
adc
jne
sbb
repz
rorb
inc
leave
mov
clc
mov
rorl
mov
arpl
jg
outsb
lahf
mov
inc
jns
mov
mov
test
sbb
pushf
mov
in
xor
xor
repnz
cs
push
pop
adc
xchg
inc
xor
adc
fsubr
xor
test
lods
sub
or
leave
mov
mov
mov
repz
xor
lods
jo
into
xor
hlt
stos
lret
lret
data16
loop
and
push
ret
jb
add
xlat
add
icebp
clc
sbb
out
loop
lahf
div
jbe
and
mov
imulb
cld
fldenv
aas
testb
ja
out
and
cmc
stos
shrb
fists
pop
adc
jns
das
frstor
push
cmp
imul
push
push
shl
ret
and
cmpsb
or
xor
dec
loop
leave
adc
imul
ss
adc
add
mov
jnp
xchg
test
mov
loopne
ret
dec
or
loop
shrl
mov
imul
aaa
add
roll
jmp
test
push
filds
in
mov
jg
add
add
xor
shr
inc
repnz
dec
jmp
test
rorb
jg
inc
mov
stc
aas
mov
add
dec
cmc
mov
xchg
xchg
push
mov
mov
test
sub
cli
push
hlt
jp
mov
lods
pop
dec
rol
cld
pmulhw
mov
fsubrl
std
test
mov
ja
call
jnp
inc
fs
mov
and
movsl
js
aam
test
lret
test
hlt
in
or
add
test
jbe
mov
test
bound
test
push
icebp
int
mov
cmpsl
rolb
out
push
hlt
xchg
xor
repz
shll
inc
adcl
aam
call
push
add
add
stos
jmp
sub
or
idiv
sbb
cmp
jmp
in
aaa
leave
enter
dec
sbb
add
push
mov
in
ret
adc
icebp
mov
xor
and
sub
loope
mov
mov
mov
or
nop
icebp
dec
jbe
push
dec
cmp
xor
jne
sub
sub
jmp
pop
cmp
or
mov
popl
xchg
xor
pop
or
jl
shrl
mov
aaa
inc
jg
and
xor
mov
in
in
jecxz
fnstsw
dec
add
shl
dec
inc
cmpsb
jecxz
enter
mov
mov
aas
shl
stc
out
push
rcrl
in
mov
test
sub
xchg
faddl
cltd
cmp
into
adc
mov
sub
jbe
flds
test
mov
leave
push
les
and
dec
ret
leave
imulb
fdivs
in
ret
cmc
iret
pushf
or
mov
add
inc
test
or
or
add
cltd
mov
sub
repnz
bound
aaa
andb
sub
cmpb
mov
cltd
xor
ja
rcr
test
fstps
jae
cmp
inc
ror
adc
in
or
pop
shrl
sbb
cmp
pop
shl
mov
xchg
push
test
dec
ret
shrl
and
or
dec
rcl
push
ljmp
mov
xchg
add
divb
push
pop
or
icebp
insb
mov
lock
jnp
out
aas
shrl
sbb
into
xchg
cltd
dec
int
mov
lds
add
jo
fisttps
xlat
stc
adc
inc
push
fistpll
ja
mov
nop
sub
addr16
jbe
jmp
out
and
ret
fwait
icebp
mov
outsl
push
call
sub
lds
xor
into
fidivrl
bound
xor
or
cmp
rolb
xor
push
or
jmp
fadd
call
dec
movsl
fstpl
lret
xchg
mov
jb
test
mov
scas
loopne
into
add
scas
sbb
aaa
mov
sbb
push
inc
je
scas
dec
pop
test
out
cmpl
jne
mov
es
sbbl
popf
sbb
icebp
dec
sbb
and
mov
or
sbb
aaa
and
ja
rorl
sldt
rolb
loop
adc
ret
ds
mov
cmp
arpl
mov
or
mov
pop
addr16
hlt
mov
int
fwait
out
dec
cmpsl
xor
xor
xor
movsb
lret
jns
jnp
mov
sbb
int
ds
push
xor
iret
shll
cmpsl
shll
jmp
add
xor
add
and
jbe
enter
rorb
jo
iret
in
or
dec
sahf
cld
fidivl
jns
scas
push
mov
aam
out
jne
icebp
idivb
enter
pop
mov
or
dec
pop
ret
xor
push
nop
leave
push
out
and
add
int
test
mov
ja
add
dec
xor
call
jo
pusha
or
outsb
in
dec
in
cs
ret
test
mov
test
add
leave
test
in
pop
push
cli
out
and
rcll
icebp
ret
lds
mov
jns
dec
mov
shl
icebp
jecxz
jmp
je
mov
aaa
jne
lret
fucomp
pop
dec
aam
rcrl
loop
mov
inc
cmp
xor
rcl
xchg
shrb
mov
lods
lods
sarb
dec
jmp
jp
fdivr
or
sbbb
and
in
and
fs
mov
push
sahf
repz
dec
xor
sahf
jo
rorl
outsl
dec
aas
fucom
and
jle
jmp
jecxz
loope
xor
push
int3
cli
cltd
into
dec
add
rclb
pop
jns
std
repnz
cmp
mov
add
sub
test
mov
pop
leave
lahf
push
sub
sub
inc
movsl
add
sub
mov
mov
enter
mov
stc
push
cmpsl
in
fstpl
imul
stc
dec
lcall
fdivrs
sbb
jbe
lds
stos
rorl
lret
cmp
scas
add
dec
sub
mov
and
mov
push
pop
inc
and
cltd
inc
hlt
xor
into
lret
je
rorb
mov
in
in
mov
fisttpll
jmp
xchg
xchg
pop
dec
xor
push
dec
sbb
dec
pop
inc
sbb
mov
xor
sub
cmp
sub
test
pop
lret
loopne
adc
stc
mov
jns
popfw
xchg
in
outsl
lret
push
das
dec
dec
add
dec
into
mov
out
adc
mov
xchg
dec
leave
push
movsb
jns
cld
inc
gs
jae
and
fnstsw
push
add
fsubl
arpl
shll
jl
fsubr
cld
add
inc
repz
aad
xchg
dec
stos
pop
mov
or
pop
mov
sar
cli
xor
and
out
jbe
fstl
mov
xchg
enter
cmc
pop
fnsave
cmc
mov
aad
or
inc
jns
lcall
call
pop
mov
leave
cmp
rorl
cmp
mov
aad
or
cmpsl
rorl
add
popf
sar
fdivs
mov
rcrl
rclb
enter
sti
or
push
jne
lods
enter
inc
jne
pushw
mov
ljmp
fwait
pusha
gs
fxch
data16
je
pop
xor
dec
mov
xor
andl
jge
dec
lds
inc
lret
and
ss
push
jecxz
mov
dec
sub
mov
mov
dec
roll
jge
add
add
sub
rcl
cwtl
movsb
adc
pop
sub
call
jg
or
jb
shr
movsb
dec
loop
sarl
adc
test
cmc
mov
test
push
jne
mov
scas
and
fldl
mov
push
jg
dec
pop
inc
shrb
in
cmp
lahf
inc
mov
fs
nop
in
push
dec
lds
ret
js
mov
shrb
or
fisubrs
bound
sub
lret
fisubrl
add
loope
pop
jg
in
mov
push
movb
cwtl
dec
add
pop
jb
push
lret
ret
jp
mov
adc
jo
nop
push
dec
push
xchg
mov
fmull
push
adcb
xor
dec
and
jns
lock
adc
ja
ret
mov
mov
filds
test
sbb
into
cmp
outsb
sbb
sub
insl
pop
call
jne
inc
mov
pop
sbb
sti
lea
or
div
out
and
jmp
icebp
pop
in
adc
xor
push
adc
mov
dec
cmpsb
adc
mov
push
in
cltd
shll
jle
jb
test
mov
daa
call
push
sbb
jl
jle
bound
imul
rol
add
aas
dec
pop
ds
rcll
testl
lret
xor
lret
jbe
add
mov
in
fsts
mov
dec
aad
ljmp
mov
std
inc
pop
pop
dec
in
sti
out
jecxz
test
or
rorb
dec
mov
mov
adc
push
gs
push
inc
cmp
cmp
lock
jp
cmp
pop
aam
stos
insb
js
mov
outsb
push
add
and
xchg
cmp
cltd
sub
cmpsb
test
cli
sti
xchg
sbb
push
fwait
mov
fnstsw
subb
out
icebp
push
shll
dec
jne
in
jo
mov
jae
loopne
in
lds
scas
xorl
xor
imul
mov
and
jge
inc
pop
dec
lods
xchg
push
mov
sbb
xor
sarl
roll
mov
clc
gs
and
add
leave
fs
insb
dec
adc
loope
imul
mov
mov
xor
jne
inc
nop
fs
inc
imul
loope
sub
mov
rorl
xor
or
jns
push
popa
mov
out
imul
mov
and
dec
mov
mov
sbb
in
outsb
nopl
insl
mov
add
inc
xor
pop
or
inc
dec
gs
add
push
out
cltd
adc
jno
jmp
imul
xchg
rcll
sub
or
mov
add
push
lret
and
ds
arpl
sub
cmp
sub
fstps
aad
loope
aam
push
into
dec
jg
hlt
mov
inc
or
aas
rcr
push
test
and
mov
jne
ljmp
sti
test
psrad
inc
push
jecxz
rcrb
faddp
repnz
aam
insb
xchg
rdpmc
sbbl
jne
dec
and
xchg
xor
in
jp
or
add
adc
push
push
cld
test
push
dec
jl
das
push
xorl
adc
loop
lret
add
mov
notl
leave
ljmp
pop
and
jmp
mov
daa
sbb
dec
ja
enter
add
dec
dec
or
or
cmpsl
je
mov
pop
push
cltd
push
pop
dec
hlt
pop
lods
out
sbb
xlat
dec
outsl
sub
add
mov
inc
ds
int3
pop
int
and
cmpsl
push
cld
ret
mov
mov
icebp
leave
push
into
adc
inc
cmpl
mov
bound
ret
push
inc
int
inc
mov
jns
out
mov
in
out
aas
pop
jne
jle
pop
dec
fadds
mov
insb
loop
into
out
pop
loope
fld
mov
add
add
ret
mov
push
xchg
dec
in
dec
testb
int3
xor
adc
cld
pop
scas
sbb
dec
testb
xchg
jp
or
stos
pop
inc
ljmp
sub
sbb
loope
pop
push
cmc
loope
fwait
or
stos
mov
inc
add
xor
push
push
mov
xchg
or
or
or
lods
dec
dec
sbb
pop
push
pop
mov
cvttps2pi
push
inc
aad
or
dec
enter
dec
repz
and
popa
xor
sub
call
push
xchg
sahf
sbb
mov
fdiv
roll
cmc
ret
shr
mov
stos
dec
sub
mov
ret
leave
fs
ret
aam
subb
mov
stos
test
mov
lods
ret
mov
add
int
dec
adc
shlb
lock
jno
vmread
pop
xor
pop
pop
jl
add
movsb
pusha
xchg
pop
push
icebp
adc
jecxz
loop
int3
add
fidivrl
xchg
jns
cs
jecxz
dec
jmp
shll
lods
repz
jno
gs
in
repz
js
mov
pop
inc
in
dec
test
mov
rclb
sub
fldl
cs
mov
stos
popl
inc
add
cmp
mov
sbb
xor
pop
enter
add
add
dec
pop
aas
stc
or
or
fsubs
in
ja
dec
aam
ret
sarl
into
movl
adc
jne
mov
imul
push
lock
mov
subb
lock
mov
int
and
pushf
xchg
jmp
xor
aad
in
dec
sbb
jmp
dec
mov
rclb
and
flds
cmp
mov
push
pop
ret
dec
jg
addr16
jb
jle
or
subb
jno
xchg
stc
int
dec
cmp
repz
lods
cli
jo
pop
cmp
or
stos
push
loop
xchg
lret
faddl
imull
notb
loope
pop
ret
mov
test
adc
mov
push
rcr
pop
je
out
and
leave
frstor
dec
dec
cmp
outsl
add
push
rolb
jl
ja
push
nop
ror
mov
stos
dec
add
jno
mov
sbb
dec
and
ds
jb
dec
add
test
cmpsl
sub
adc
jns
notl
flds
or
xchg
dec
fucomi
rorb
xor
jmp
pop
stos
mov
mov
in
cmp
repz
sbb
cli
cmpsb
in
aas
in
lret
sub
mov
dec
lds
out
mov
mov
xorl
xchg
xchg
test
mov
push
testb
nop
rcrl
xor
mov
sbb
cmp
aas
fwait
xor
push
rcll
icebp
fstpl
add
fldcw
mov
jns
or
jl
jp
jge
fisubs
mov
fldcw
push
inc
pop
dec
stos
jecxz
add
bound
add
push
add
add
shlb
inc
mov
mov
repz
inc
rolb
mov
adc
out
pusha
mov
add
pop
movsl
or
je
fistl
es
js
ret
xor
rol
imul
shl
movsl
jp
pop
aas
xchg
cmpsb
xor
popa
push
dec
xor
ljmp
add
adc
bnd
sub
xchg
pop
gs
xor
ja
cs
notl
pop
call
sub
push
pop
adc
imull
and
cwtl
fsts
mov
stos
loopne
insl
mov
test
jbe
sbb
lods
pop
fiadds
shlb
add
lock
sbb
clc
xchg
in
sbb
je
or
fs
std
pop
mull
push
fldl
fcomip
push
shll
repnz
xor
pop
or
testl
jno
fnstenv
jns
loopne
or
dec
scas
cmp
fistpll
insb
jge
inc
pop
icebp
cld
push
in
push
enter
imul
int
cmpl
jmp
test
loope
mov
lds
pop
mov
inc
test
aad
cld
add
outsl
mov
and
jbe
movsl
fildl
push
jno
jmp
pop
jecxz
cld
cmc
fisubl
push
xor
dec
rcrb
mov
push
rclb
dec
in
dec
jg
imul
or
jo
mov
or
fnstcw
or
inc
shlb
pop
insb
or
push
daa
lods
por
xchg
test
out
xchg
xor
aad
imul
adc
fucom
scas
xor
aaa
or
stos
leave
pop
add
scas
cmp
mov
inc
mov
dec
cli
test
fs
mov
inc
mov
xchg
xchg
shll
mov
mov
push
cmpsb
sub
sbb
mov
fwait
adc
jb
inc
outsl
rorl
mov
push
xchg
jg
test
gs
arpl
arpl
sbb
shrl
pop
shrb
push
es
leave
xor
test
iret
je
sub
mov
imul
jge
inc
xchg
enter
cmp
enter
mov
out
ret
aad
movsb
and
in
cs
addr16
jmp
out
xor
shlb
dec
aaa
xor
rolb
xchg
dec
arpl
xor
sbb
and
mov
aam
push
movsl
adc
and
in
pop
inc
rorb
sbb
fsubl
inc
or
dec
shl
std
repz
push
sbb
ljmp
or
push
loope
sbb
cmp
out
or
call
popf
dec
pop
clc
leave
movsb
mov
jg
aaa
loope,pn
mov
icebp
inc
jns
xor
push
sarl
or
sub
mov
mov
jae
push
loope
stc
cmc
call
push
pop
inc
inc
mov
pop
xor
repnz
loopne
fsubrl
xor
lds
testl
or
adc
mov
adc
jb
push
cmp
jae
fnsave
hlt
or
xor
test
popa
aaa
xor
mov
in
mov
add
jmp
dec
es
repnz
add
pop
lret
mov
outsb
test
push
mov
jae
xor
and
add
sar
and
and
lods
test
loope
mov
push
mov
pop
push
fbstp
mov
dec
insb
mov
cmp
out
mov
push
push
sub
push
jecxz
cmp
sub
jmp
jle
sbb
ret
nop
jp
out
mov
or
inc
inc
stos
or
push
push
repz
sbb
ffree
repnz
in
mov
or
addr16
or
push
xor
add
fnsave
and
pop
icebp
mov
add
into
cli
sbb
adc
std
mov
push
and
inc
in
adc
mov
xchg
in
std
or
fisubrl
ja
inc
mov
or
push
mov
rcrb
dec
mov
pop
xchg
sub
sahf
je
and
out
shll
ljmp
add
mov
mov
sbb
pop
insl
in
aad
sbb
leave
repz
mov
adc
or
lds
cld
les
jns
icebp
frstor
jle
dec
negl
xchg
test
hlt
pop
scas
mov
stc
sub
pusha
movsl
inc
xlat
lods
cmc
test
cmp
fadds
sbb
mov
or
add
les
dec
in
test
ja
cmp
add
push
pop
adc
cs
loop
movsl
loopne
xchg
cmp
and
dec
cmp
in
jecxz
or
xor
inc
and
xor
mov
outsb
mov
std
dec
das
icebp
inc
dec
scas
or
stos
sti
into
pushf
stos
mov
out
and
xor
sub
andl
ja
in
in
jl
sbb
jecxz
packsswb
dec
add
loope
xchg
movsb
add
dec
jne
cmp
ret
jle
xchg
aam
mov
stc
jbe
lcall
jne
loopne
mov
ss
fistps
js
push
mov
adc
aad
outsl
insl
jo
into
lods
mov
jecxz
sbb
inc
push
add
push
lds
nop
mov
add
scas
dec
sub
rorb
std
push
and
out
outsb
das
or
orb
cmc
push
add
cmc
adc
shrl
in
fiaddl
pop
xchg
and
fmull
sti
andps
push
adcb
popa
jne
outsl
mov
dec
sbb
jp
add
lods
in
shlb
sqrtps
cmp
js
rclb
bnd
and
push
sub
jb,pn
jle
rclb
ja
xchg
xchg
and
xor
cltd
mov
test
cmp
inc
xor
bound
push
pop
in
je
cltd
scas
cmpsl
fsubs
out
out
dec
xchg
in
movsl
in
dec
xor
shlb
dec
pop
sbb
xor
jmp
adc
stos
mov
call
sbb
pop
shl
sub
jecxz
add
or
push
add
ja
mov
add
pusha
add
or
stos
add
imul
push
inc
mov
mov
push
mov
aaa
push
aam
pop
rcl
xor
xor
icebp
mov
pop
dec
jecxz
add
add
fidivs
pop
pop
jne
ret
stos
mov
adc
cli
sub
lahf
mov
inc
pop
dec
in
or
push
sbb
pop
jecxz
mov
dec
ss
or
push
push
add
test
ret
mov
mov
mov
cmpsl
jle
int
mov
dec
dec
cli
mov
popf
cmp
in
xchg
add
dec
cs
xchg
pop
push
lds
ja
cltd
adc
dec
imul
test
dec
loope
add
lcall
shl
rolb
das
js
dec
xor
add
inc
push
jmp
xchg
cmc
inc
jo
stos
mov
fwait
cmp
add
pop
stos
sbb
xor
dec
add
xor
ret
mov
frndint
movl
add
pop
leave
inc
enter
xor
and
in
inc
ds
popf
mov
mov
mov
cmp
repz
ds
dec
jo
data16
call
push
test
pop
aam
add
in
jno
add
sub
adc
inc
out
jne
lret
jbe
out
ss
jne
daa
ret
jle
pop
testb
pop
imul
add
ror
andb
int
repz
test
cmp
or
mov
out
hlt
mov
xchg
popa
in
jge
or
andb
insb
nop
out
aam
gs
mov
adc
adc
add
sbb
add
cmp
dec
add
dec
lock
into
and
test
push
jbe
int
pop
inc
push
xlat
pop
nop
push
vpmuludq
enter
sbb
sub
jne
sti
inc
mov
mov
cmp
xor
xor
dec
mov
add
out
mov
loopne
ljmp
pop
fiaddl
dec
jle
lds
fistpl
mov
leave
aaa
sub
mov
and
mov
push
push
mov
mov
lea
and
mov
jbe
fnsave
or
push
mov
inc
adc
mov
loopne
daa
lahf
sub
lahf
icebp
cmp
xor
add
and
dec
sub
xchg
rorl
xchg
jo
in
inc
jmp
xor
stos
mov
xchg
xchg
adc
cli
and
add
dec
int
xor
ljmp
inc
out
lahf
mov
pop
push
xor
ror
mov
aad
and
out
dec
insl
pushf
outsb
popa
xor
out
jae
add
xor
fcoml
popf
xor
jns
mov
push
or
or
daa
dec
xchg
scas
pop
roll
mov
push
sub
lret
cmp
ret
ret
mov
sbb
xchg
fsubr
add
inc
pop
lods
and
fcoms
aam
je
dec
sub
stos
inc
jecxz
mov
cmpsb
outsb
xor
mov
lea
stos
lea
enter
pop
jbe
mov
in
insb
lock
jecxz
mov
test
scas
xor
scas
rol
xchg
mov
adc
inc
sub
dec
out
popa
addl
jo
into
outsb
jbe
and
or
mov
ja
jo
mov
mov
scas
sbb
xchg
pop
xchg
and
shll
jl
add
sub
stc
add
and
mov
sub
jmp
loope
mov
cmpsl
jmp
inc
out
enter
ss
rorl
cmp
mov
shll
inc
ja
cmp
dec
into
ljmp
jl
insb
mov
faddl
sbb
std
and
pop
lods
dec
fldenv
and
stos
mov
mov
mov
adc
fnstsw
inc
mov
xor
adc
inc
test
add
repnz
fstl
rorl
into
rcr
xor
aad
rcrl
inc
leavew
std
cmp
and
pop
xor
cld
inc
loope
cmc
push
sbb
jnp
add
xchg
test
pop
push
xchg
cs
xchg
and
cs
inc
dec
xlat
ret
xor
dec
jmp
pop
lret
adc
inc
cld
orb
lds
or
mov
mov
faddp
add
ret
iret
add
mov
int
adc
fwait
sbbl
and
xor
push
addr16
test
in
repnz
setb
ljmp
lahf
dec
adc
mov
aad
add
push
iret
lods
leave
push
cmp
iret
sub
in
xor
clc
add
aas
sbb
dec
movsl
cmc
popf
test
ds
lea
or
fdivs
stos
decb
cmpsl
or
pop
enter
jo
lock
clc
aas
jmp
aaa
repnz
rcr
fcmove
in
push
cs
aas
ret
mov
sub
clc
pop
xchg
xor
or
adc
mov
mov
mov
dec
out
mov
push
das
mov
popa
mov
movsl
dec
adc
jnp
sbb
cmpl
fdivrl
xor
lods
jl
push
mov
cmp
cmp
enter
cmp
shlb
adc
ret
test
mov
cmp
inc
sub
aam
arpl
dec
fs
in
scas
iret
xor
sub
fcomi
push
popf
or
lcall
fwait
stc
test
inc
jne
push
mov
jge
shll
in
cltd
sub
or
dec
aam
test
inc
xor
test
inc
pop
lcall
jmp
stos
insl
xorb
xor
add
sub
fisubrs
insl
or
jne
xor
sbbb
xor
inc
ret
stos
mov
out
lods
and
bsr
xchg
mov
in
push
or
or
mov
inc
stos
sub
gs
fyl2x
mov
insl
mov
jmp
ret
test
fst
add
jbe
rol
nop
test
push
inc
mov
aam
sbb
and
mov
and
int
push
lret
int
or
adc
aam
jno
mov
mov
loop
jo
pop
test
jmp
ror
std
sbb
stc
lds
pushf
out
cmp
push
arpl
mov
mov
add
dec
or
int3
fdivrs
and
les
icebp
repz
jl
sbb
repz
or
push
inc
sbb
jge
in
xor
jle
addl
push
sub
in
pop
inc
cli
inc
push
mov
fldcw
aad
dec
leave
lods
clc
push
jle
mov
das
mov
pop
ret
repnz
mov
adc
xorb
add
aas
into
inc
incl
loope
subl
mov
xor
cwtl
fdivr
jns
adc
leave
aas
add
ja
js
sbb
lock
ret
cmpsb
sbb
stos
lret
jae
jo
add
sbb
adc
pop
test
sbb
cld
mov
cmp
insb
shll
leave
test
clc
push
movb
push
mov
call
dec
pop
ret
jae
or
and
inc
sbb
lret
adc
mov
int
inc
push
mov
into
jmp
pop
add
dec
movsl
sbb
repnz
pop
cltd
adc
jns
or
add
inc
lahf
adc
xor
into
dec
mov
shl
mov
push
cmpsl
rol
pusha
mov
insl
push
xor
test
in
int
cmp
sbb
jge
inc
lahf
out
mov
lret
imul
leave
mov
out
and
repz
xchg
or
cmp
lret
inc
xor
mov
iret
add
sub
push
pop
mov
roll
inc
mov
cli
jge
push
or
sbbb
jle
push
inc
ds
fsts
mov
repz
add
imul
insl
cmpl
mov
stos
arpl
or
jno
mov
xor
or
mov
or
jb
nop
or
adc
dec
les
pop
jae
jae
cmp
inc
sbb
inc
arpl
les
or
outsl
test
outsl
adc
stc
pop
dec
movd
push
xor
and
pop
stc
push
jns
jp
ret
add
les
test
je
pop
and
mov
mov
addb
xchg
add
inc
pop
roll
jno
ror
hlt
cmc
and
dec
insb
ret
sub
and
mov
out
push
orl
mov
cmp
aas
jl
sbb
adc
lds
test
icebp
jmp
enter
out
and
out
cmpsl
lock
sbb
loope
call
cmp
mov
add
and
cmp
lret
mov
push
mov
movsl
xorl
movsl
fisttpl
popa
js
mov
mov
jbe
dec
adc
mov
fdivl
shrl
adc
xor
std
inc
inc
int
stc
clc
dec
pusha
test
dec
xchg
inc
je
test
cmpsb
xorl
mov
in
xchg
repnz
aas
pop
mov
dec
pop
add
inc
std
inc
pop
mov
les
mov
enter
loopne
ret
mov
cmp
rcrb
jo
add
pop
inc
icebp
shr
xor
fistl
imul
loope
push
inc
in
in
sbb
and
rcrl
rep
jo
enter
cmp
loope
mov
mov
aad
mov
push
mov
shll
sti
and
pop
test
adc
mov
ret
cmpsl
jae
ljmp
clc
jmp
lcall
lds
les
rclb
inc
push
or
mov
adc
adc
xor
hlt
in
mov
pop
push
xor
push
dec
cmp
pop
jecxz
clc
lret
or
and
cltd
in
pushf
ret
hlt
inc
xchg
add
sbb
je
scas
aad
lret
fcmovne
add
jl
jbe
dec
and
aad
and
and
filds
dec
icebp
inc
scas
and
stos
push
add
mov
jmp
aaa
jg
inc
jp
scas
aas
vmptrld
xorl
test
rcll
stos
adc
test
jecxz
mov
into
and
add
std
call
ret
add
jecxz
add
xor
jb
or
pop
mov
in
addl
pusha
or
mov
addb
iret
bound
pop
mov
pop
mov
adc
shrb
arpl
icebp
stos
and
sbb
xchg
out
xor
scas
jge
jne
icebp
or
ror
or
shll
aad
jae
push
sahf
add
push
cmc
push
movsb
andb
xor
dec
mov
xor
fisttpll
adc
lea
enter
arpl
add
mov
test
push
mov
mov
out
sub
mov
in
mov
sub
out
sub
jge
sbb
mov
cwtl
sti
in
lea
sbb
cmp
lods
jle
int
add
pusha
gs
mov
add
movsl
add
daa
mov
dec
dec
test
decb
xor
jb
xchg
test
movsb
mov
xor
cmc
inc
in
mov
push
inc
cmp
test
fcmovb
dec
sub
push
int3
test
mov
insb
std
push
mov
repz
cwtl
enter
lock
out
pop
xor
int
mov
aad
ret
jecxz
ret
lea
aaa
or
jg
xor
and
adc
mov
or
mov
inc
rorl
cmp
add
inc
jnp
sahf
vpunpckhwd
jp
in
mov
repz
add
std
sbb
lahf
stos
xchg
aad
mov
xchg
repnz
mov
js
js
pop
jae
pop
cmpsb
mov
mov
orb
test
mov
std
cmpsb
pop
icebp
cmc
xor
adc
test
mov
ljmp
pop
test
les
jo
imul
dec
jae
aas
lock
jecxz
outsl
pop
outsl
aad
in
inc
mov
leave
sbb
or
inc
and
mov
dec
or
lods
pop
xor
aas
mov
ret
sarl
arpl
or
push
xchg
sbb
xchg
fnstsw
sub
fldl
push
call
push
iret
aad
mov
sbb
aas
inc
xor
fidivl
fisttps
sub
icebp
mov
repz
cli
xor
add
dec
shll
inc
inc
loope
adcl
clc
clc
xchg
jmp
imul
sarl
imul
jbe
and
jo
lods
push
push
add
out
std
ret
rcr
or
sbbl
jp
xchg
loopne
mov
sub
mov
and
lret
fsubs
pop
ret
sahf
aad
add
popf
leave
sub
mov
into
mov
dec
mov
sbb
mov
scas
lock
dec
enter
fiadds
rorl
hlt
sub
cmpsl
mov
and
lock
add
in
pop
mov
pop
mov
cmp
addr16
xor
pop
mov
adc
and
jmp
sub
dec
cli
mov
sbb
inc
adc
cmc
dec
repnz
fdiv
mov
lock
add
enter
lahf
add
mov
jne
mov
leave
ret
test
pop
daa
mov
add
lods
into
add
icebp
test
sub
mov
aam
pop
push
imul
sbb
rep
sbb
push
and
mulps
leave
mov
mov
pop
pop
shlb
int3
test
cs
or
sub
std
cwtl
fldt
mov
ljmp
sub
scas
cld
jne
inc
sbb
mov
cmp
mov
fmul
push
enter
imul
adc
jno
int3
dec
push
pop
xor
iret
inc
test
xchg
mov
rorl
les
iret
sbb
test
jbe
fstp
push
arpl
rolb
popf
jg
lret
dec
lret
fldl
xor
test
in
mov
push
cmp
roll
add
or
repz
icebp
insb
lret
push
shrb
popa
shrb
out
push
pop
and
es
mov
push
cmp
cwtl
cli
and
sbb
aam
sub
inc
dec
leave
mov
jne
add
xor
addr16
mov
enter
adc
ret
inc
aad
or
or
insl
cwtl
pop
ds
or
mov
dec
inc
inc
notl
fldenv
out
add
dec
xor
add
movb
insl
rorl
jge
add
imul
sub
lods
leave
movsb
add
flds
push
push
pop
mov
int
sbb
adc
push
adc
std
and
sbb
packsswb
or
sbb
push
sbb
and
and
xor
dec
cmp
xchg
movsl
sahf
adc
lds
add
into
aad
jnp
and
jb
int
lds
inc
push
jo
dec
out
sbb
cmc
les
leave
and
or
imul
clc
and
adc
ror
repz
sub
movsl
mov
mov
dec
inc
mov
mov
xor
cwtl
lods
pcmpgtd
rcr
push
fildll
xlat
pop
inc
xchg
push
mov
inc
outsl
aam
stos
rorb
pop
mov
and
mov
jge
pop
adc
pop
adcb
ret
or
or
test
and
test
add
leave
sub
jp
inc
sbb
and
cmp
cmpsl
sub
mov
dec
shrl
or
push
push
aas
or
jle
or
int3
add
add
jae
leave
pop
ror
lods
adc
fxch
sahf
aaa
fwait
andl
js
dec
fildl
gs
aad
sbb
xchg
popa
out
cmp
lcall
cmp
or
jne
jnp
add
sbb
add
lea
mov
pop
addl
test
loopne
xchg
xor
mov
roll
and
pop
push
xor
cltd
js
and
rorb
dec
and
shlb
pop
sub
cs
outsb
sub
mov
into
ss
cmc
icebp
shll
mov
cmp
mov
adc
imul
and
push
cmp
roll
ljmp
jmp
inc
aaa
outsb
or
shlb
jmp
push
scas
mov
cmpsl
sub
sbb
xchg
aad
mov
mov
xchg
dec
pushf
lds
push
add
rcl
push
je
stos
jecxz
mov
repnz
sub
jmp
pop
repz
aam
in
rorl
cmpsb
sbb
aaa
movaps
sbb
pop
sarl
lret
aad
test
rcll
or
jb
jmp
mov
in
inc
ret
test
cmp
jp
pushf
xor
and
pop
das
inc
pop
hlt
push
test
mov
adc
xchg
mov
cmc
popf
enter
nop
inc
xchg
pop
dec
insl
int
mov
rorl
cmp
int
mov
stos
mov
lock
mov
sarb
push
daa
jns
mov
xor
shll
dec
in
dec
out
sbb
gs
pusha
testb
add
cmp
mov
mov
cltd
inc
mov
out
push
jbe
aam
mov
subb
fmuls
loopne
mov
add
xor
sub
dec
int
das
dec
out
push
stos
int3
mov
mov
ljmp
mov
add
nop
or
mov
lcall
stos
stc
push
mov
xchg
shrb
xor
int
les
pop
lds
push
or
jge
subl
and
mov
xorb
add
dec
sbb
xchg
push
push
in
aaa
ljmp
test
aad
cmp
inc
or
repz
mov
fadds
aaa
inc
jmp
mov
jmp
rorb
pushf
jle
orl
add
mov
jg
lock
inc
out
xlat
xor
or
adc
out
test
pushf
rcll
aaa
or
loopne
mov
stos
in
outsl
out
push
cli
ror
testb
xchg
dec
leave
dec
or
lods
inc
pop
pop
add
or
mov
loop
pop
adc
addb
sbb
sarl
cli
mov
inc
and
mov
fcomps
mov
ds
xor
lods
fdivrs
adc
in
pushl
adc
fldenv
jp
filds
cmpsb
hlt
ret
les
xchg
and
lret
cli
mov
add
fisttps
daa
inc
cmp
or
cwtl
mov
inc
push
jae
push
aaa
loope
shl
or
push
ds
inc
repnz
cld
idivl
repnz
sub
mov
fsubp
sbb
or
pusha
clc
aas
jmp
shr
pop
cli
subb
jb
fbld
jl
inc
into
out
or
xchg
in
jmp
dec
shlb
int
mov
cli
lods
pop
add
sub
ficoml
data16
movsb
mov
cwtl
scas
xchg
test
jmp
inc
dec
adc
lea
mov
loopne
sarl
adc
sub
aas
cli
ret
icebp
push
je
pop
jne
enter
cmp
das
out
pop
lods
mov
lods
cmp
mov
mov
jle
push
sarb
mov
jno
lock
jb
lret
dec
cmp
out
push
ds
icebp
sbb
shrl
pop
gs
fiaddl
pushf
loopne
rcrl
scas
mov
cmpsb
cmpsb
test
jo
mov
leave
xchg
repz
lds
mov
lods
and
cmp
out
loopne
pop
dec
jg
std
dec
pop
xchg
sub
sar
sub
insb
add
push
stos
loope
add
add
push
xchg
or
ret
xchg
mov
cli
insl
les
icebp
add
nop
ds
fs
les
stos
mov
xor
push
std
sbbb
fwait
lret
stos
mov
lds
outsl
in
int
fimull
mov
in
into
jle
xor
roll
in
orl
icebp
pop
iret
inc
shll
loopne
test
push
inc
push
pushf
inc
cmp
or
inc
rolb
rclb
lea
dec
push
ret
pop
in
test
cmpsb
in
repz
ljmp
jbe
nop
push
inc
call
mov
xchg
shll
push
fisttpl
mov
pop
cld
mov
cli
test
inc
out
mov
icebp
or
jns
jle
aam
mov
inc
adc
sub
mov
pop
jne
lods
inc
mov
jl
lcall
inc
or
xchg
add
inc
bound
jecxz
mov
lock
add
jmp
jge
add
pop
mov
adc
pop
push
jmp
adc
mov
test
adc
les
test
les
pop
lret
adc
pop
inc
adc
gs
or
and
cmp
and
arpl
or
and
rorl
in
lods
pop
arpl
sbb
ss
push
or
scas
and
sub
dec
push
inc
cmp
repz
sub
aad
mov
mov
stc
jmp
js
in
adc
mov
out
cmp
aas
hlt
adc
jmp
xchg
ret
push
orb
repz
sub
test
push
ljmp
mov
push
xlat
mov
bound
dec
mov
pop
mov
push
dec
pop
xlat
sbb
adc
pusha
cltd
dec
xchg
sbb
sbb
xchg
rcl
mov
ror
adc
and
mov
or
sahf
ror
push
cmc
jge
dec
xchg
ror
mov
cld
xchg
xor
jle
xchg
call
fcom
int
and
sbb
jmp
rcrb
pushf
shr
shll
test
cmp
cmp
daa
icebp
cwtl
nop
dec
inc
sbb
xor
popf
sub
loopne
cmp
mov
lds
inc
lea
add
jmp
mov
cmpsb
add
jne
imul
rolb
jecxz
leave
adc
test
mov
out
mov
inc
mov
in
mov
ja
shl
push
loope
pop
popa
push
out
aas
les
mov
and
mov
inc
mov
lock
sti
icebp
divb
jns
mov
xchg
xchg
stc
testl
xchg
popa
cmc
mov
push
enter
movsb
and
shlb
or
leave
test
cwtl
int
leave
mov
dec
rcrl
aad
int
mov
dec
jbe
fsubrs
in
inc
mov
int3
stc
test
vunpckhps
test
dec
aas
and
add
mov
mov
dec
rorl
test
dec
inc
js
popf
add
jns
jl
roll
jae
aas
loope
cmp
pop
shlb
mov
out
or
and
shrl
leave
call
push
aad
xor
call
scas
ljmp
rorl
add
xchg
in
cmp
push
pop
mov
repz
ret
lret
jle
cmp
adc
adc
sub
pusha
inc
sub
rcrl
cmp
inc
dec
xor
lods
mov
shr
cmp
fisubrl
sbb
adc
repz
dec
cmc
inc
xor
add
clc
sbb
pop
les
rclb
repz
mov
call
out
xchg
add
pop
and
cmpsb
jle
push
xchg
mov
insl
ljmp
lds
mov
rclb
out
add
neg
cmp
imul
aad
xor
shl
inc
and
jmp
or
push
in
sub
mov
mov
pop
std
js
xor
shlb
xchg
js
lods
jbe
js
jne
in
call
jns
repz
xchg
sub
repz
sub
ss
cwtl
and
dec
fsubl
repz
cmp
dec
pop
and
inc
pop
lods
xor
rorb
test
dec
daa
repz
push
jp
inc
xchg
fsubr
add
mov
test
mov
sub
sarl
mov
sub
lds
ret
jbe
popa
lret
enter
jae
or
sub
mov
xchg
sbb
or
mov
scas
pop
xor
pop
test
shll
jp
sub
jle
call
mov
add
sbbl
movsb
ja
jle
inc
dec
or
sbbb
inc
pop
es
jno
xchg
aaa
xlat
mov
pop
and
lcall
lds
mov
add
dec
sarb
add
ljmp
shl
or
sti
inc
popa
add
adc
mov
sbb
cvtps2pd
ljmp
mov
cld
popf
sbb
inc
inc
push
inc
jns
inc
jo
add
xchg
lahf
cmp
loope
or
mov
or
lcall
xor
adc
ret
test
das
popa
sub
adc
std
fnstsw
xor
pushf
mov
adc
fstpt
fstps
and
inc
loope
test
stos
push
test
add
or
push
xchg
add
jle
mov
arpl
stc
xor
aaa
out
push
cmpsb
add
popf
push
inc
out
mov
ret
int3
int3
sub
fucompp
mov
dec
in
lods
inc
punpckhwd
push
xor
adc
pop
cmp
add
mov
jb
mov
ja
mov
sub
stos
ss
and
jg
xlat
or
scas
add
seto
ds
push
sbb
push
mov
jne
pop
cmp
push
mov
insl
popf
sbb
imul
lret
inc
fldcw
or
sarb
push
jmp
fsubrs
stos
lret
push
mov
pop
push
popf
cmpb
push
shr
xchg
int3
dec
sub
icebp
and
pushl
repz
in
enter
shlb
test
imul
jmp
mov
adc
rcrl
adcl
cmc
ds
dec
xchg
ljmp
and
outsb
mov
cli
test
clc
iret
mov
pop
sub
jecxz
mov
jno
movsb
xor
sub
xor
xlat
cmpsb
inc
xchg
sub
mov
and
rcr
int
into
pop
stc
lods
enter
hlt
popf
ds
es
inc
rol
repz
shll
fcmovne
xor
out
dec
into
mov
inc
fldt
xor
mov
pop
stos
es
sbb
out
enter
sbb
and
and
or
fimuls
inc
cld
sarb
mov
inc
std
stos
jecxz
bswap
shl
jmp
dec
xchg
mov
iret
loop
push
mov
add
sbb
push
pop
in
lock
cmpb
lds
ret
sub
icebp
pop
aaa
ja
rclb
aad
incb
push
jg
rol
mov
or
enter
push
leave
mov
fisubrs
and
lds
in
dec
jns
les
inc
pop
sbb
mov
adc
cmc
xor
inc
lea
push
inc
add
les
ljmp
cmc
push
dec
leave
or
int3
aaa
lea
out
jo
scas
mov
mov
jne
stc
pop
cwtl
dec
ret
in
jge
push
inc
fistps
inc
sbb
lds
inc
vpminsw
cmp
mov
cmp
and
fiaddl
mov
jae
xor
insl
pop
mov
xor
loope
ret
je
mov
pushf
and
cli
js
push
loope
arpl
movsb
ror
add
mov
test
es
adc
inc
sub
mov
push
out
dec
int3
mov
xchg
shll
movsb
jno
inc
and
adc
push
inc
insb
shll
and
mov
iret
aam
out
testl
jle
mov
cli
mov
inc
or
sti
adc
sub
add
outsl
in
mov
sub
repnz
shr
sahf
data16
pop
repz
lret
and
nopl
or
sub
lock
andl
iret
test
imul
out
dec
test
shlb
out
dec
sbb
sub
mov
aaa
mov
out
dec
or
xor
into
les
insl
jne
pop
add
in
mov
leave
outsb
fs
movsb
lret
les
sub
push
mov
cmc
into
lds
mov
cmp
cli
lock
xchg
lret
add
cltd
pop
mov
push
scas
xchg
mov
clc
mov
pop
lock
icebp
repz
xchg
int3
add
pop
adc
aaa
cmp
push
xchg
icebp
dec
aad
enter
icebp
adc
mov
vhaddpd
dec
shl
cmp
mulb
out
movsb
cmpsl
fs
adc
push
dec
rorb
hlt
or
inc
outsb
mov
and
sbb
ret
test
add
rcll
pop
data16
movsl
xor
test
xor
xchg
and
sbb
sub
adc
hlt
xor
xchg
loopne
cmp
lds
inc
pause
es
and
mov
ret
jle
in
cmp
pop
push
shll
cmc
dec
in
jno
pop
imul
ljmp
nop
jbe
aam
xchg
test
jb
sarl
cli
sbb
pop
cmc
jne
les
lods
pop
push
mov
push
cmp
aaa
sub
sar
nop
filds
or
in
mov
add
repz
out
insl
xchg
add
fcomip
jnp
pop
add
rorl
int3
and
into
shll
movsb
out
cmpsl
roll
jp
mov
xchg
loope
fildll
cmpb
adc
jae
dec
dec
insl
pop
flds
push
pop
inc
rolb
gs
mov
loopne
jge
adc
fdivrl
xchg
xlat
ficoml
outsb
inc
push
test
pop
or
push
push
aad
shr
incl
insb
mov
fmull
lret
adc
stos
outsb
lods
cmpsl
js
mov
cmp
mov
mov
dec
aas
xor
loop
and
nop
je
sub
fldt
xchg
pop
fcomi
in
ds
mov
jle
mov
dec
cmp
jns
aaa
fs
xchg
movsl
outsl
inc
hlt
jnp
lret
jne
adc
and
test
in
scas
push
or
mov
mov
dec
sarb
cld
stc
std
pop
inc
cltd
leave
cwtl
and
inc
enter
daa
mov
aad
or
shl
rcrl
cmp
jnp
dec
mov
in
aad
or
inc
cmp
inc
cmc
xchg
outsb
icebp
cmp
pop
push
or
add
push
pop
pop
enter
or
pop
cmp
xor
xor
sbb
mov
div
cmpsb
incl
lret
mov
xor
cmpb
sahf
and
add
add
ja
fcomip
add
scas
cmp
adc
sub
mov
dec
in
ss
jbe
mov
loop
dec
in
xor
mov
mull
xchg
roll
add
fs
or
sub
repnz
andb
popa
jns
ss
subl
mov
dec
lea
inc
jb
push
ror
fs
jbe
dec
into
cmp
aad
or
pop
rcrl
testl
or
outsb
shll
cwtl
scas
dec
mov
xor
cmpsl
mov
add
xchg
jbe
and
outsb
test
lcall
sub
nop
test
imul
push
int
push
mov
insb
push
hlt
xor
icebp
hlt
sub
int
add
repnz
mov
shrl
mov
hlt
push
lret
or
add
ret
jg
popf
cmp
lahf
jle
subb
push
lods
jo
and
shlb
xor
add
in
mov
std
add
rcrl
mov
repz
bound
mov
jmp
push
add
into
orl
int
iret
cli
dec
cmp
test
das
int3
fistpll
cltd
aam
dec
add
add
les
or
and
loopne
ja
sbb
sub
sarb
xor
xor
jmp
inc
dec
repz
loopne
cmp
inc
lds
sbb
leave
ret
dec
es
stos
repz
ror
negl
mov
sti
mov
pushf
pop
add
insl
pushf
dec
cwtl
sarb
add
leave
lods
mov
data16
ss
cs
repnz
ja
rolb
mov
push
bound
icebp
pop
mov
pop
dec
in
xlat
ds
test
ret
sub
add
lods
scas
mov
and
cld
sub
fisttpll
mov
pop
cltd
lcall
add
rcrb
pop
add
mov
pusha
xlat
adc
lods
in
inc
sbb
mov
dec
ljmp
insl
add
cwtl
mov
int3
jp
adc
pop
mov
mov
pop
adc
leave
lock
lea
arpl
rcl
out
or
cmp
mov
ljmp
mov
xor
jbe
or
sti
mov
xchg
push
push
ss
sbb
mov
ficoms
adc
cmc
mov
cmp
fs
mov
pop
mov
jmp
lret
sub
lret
or
jae
pop
push
int
xor
lock
shrb
popa
mov
leave
adc
frstor
test
pop
std
loop
sar
or
je
loopne
dec
or
scas
adc
dec
int3
mov
in
int3
add
in
jl
aas
insb
pop
xor
and
pusha
sbb
aam
scas
mov
rcr
stc
cld
jb
insl
and
fnsave
inc
pop
dec
jg
jb
jbe
test
int3
int
notb
leave
jecxz
test
xchg
int
aaa
repnz
rcrb
xchg
or
jge
imul
or
popa
adc
xchg
add
jbe
loopne
push
xchg
ret
cltd
outsb
lahf
roll
and
test
psrlw
rol
inc
js
in
sbb
rcrl
inc
out
enter
inc
icebp
mov
jle
inc
and
call
int
push
inc
popa
xchg
sbb
add
lods
sub
sub
imul
test
and
fs
and
dec
inc
xor
adc
inc
dec
inc
imul
scas
add
movsb
ja
or
rcl
jo
test
sahf
add
aad
imul
aas
rorl
enter
mov
cmpsl
inc
aaa
sbb
sbb
loop
inc
xorb
push
jne
or
pusha
and
lds
rcll
jns
and
push
xor
repz
mov
inc
add
aaa
imul
call
test
js
hlt
xor
mov
cmpsb
fwait
fwait
mov
sub
iret
pusha
imul
adc
mov
jae
add
stos
fldcw
out
movl
out
jbe
lds
movsl
lret
mov
dec
add
es
push
xchg
inc
icebp
and
add
fimuls
dec
rorb
and
testb
dec
rorl
aam
xor
add
fsub
aam
in
shrd
frstor
mov
movl
push
out
inc
sbb
jecxz
mov
sub
iret
cmpsl
sar
ret
jg
adc
test
jle
mov
add
jo
enter
mov
mov
fimull
leave
dec
mov
add
mov
outsb
dec
outsl
les
pop
addl
xchg
pusha
push
or
movl
out
int3
xor
aad
aad
icebp
sub
and
icebp
ret
mov
sub
call
adcl
test
out
movsl
clc
icebp
xor
aam
stos
lods
ljmp
inc
dec
in
push
in
jae
and
jae
mov
aad
dec
inc
lds
push
fcompl
push
mov
into
xor
mov
push
jno
jg
rcrl
enter
fcoml
dec
iret
mov
das
xchg
xlat
and
jecxz
mov
mov
cmp
sahf
inc
dec
jmp
sbb
into
dec
fsubl
divl
pop
mov
mov
ret
addb
jbe
mov
into
push
xchg
sarl
xchg
dec
or
dec
invd
ja
jge
pop
xchg
das
jmp
sbb
push
mov
movsb
repz
je
or
sub
inc
repz
enter
shll
inc
test
aad
leave
mov
push
add
push
add
xchg
outsl
rorl
fnsave
xchg
mov
jae
out
inc
jbe
xor
mov
mov
outsl
adc
add
in
in
std
lret
xor
jge
pop
and
xor
ljmp
ja
sub
add
and
ret
cmp
pop
xor
mov
pop
inc
cld
rorl
mov
push
cmp
stc
roll
andl
and
int
inc
mov
sub
andb
stos
adc
repz
out
aad
shll
inc
lods
adc
dec
cmp
dec
pop
pop
out
test
enter
push
push
rorl
mov
stos
adc
mov
push
jp
push
ja
mov
dec
inc
popf
decl
leave
pop
mov
enter
pop
adc
test
inc
repz
and
mov
dec
adc
ret
nop
das
mov
mov
lahf
flds
test
sbb
sarl
xchg
mov
adc
push
or
sub
or
dec
dec
mov
or
mov
enter
inc
fisubrs
xchg
xor
and
icebp
arpl
in
sahf
fcmovnbe
pushf
inc
test
inc
and
ljmp
push
ljmp
add
out
out
jg
lret
xchg
xor
hlt
inc
pop
into
cmp
and
popf
jb
or
outsb
ja
hlt
adc
mov
inc
mov
dec
in
repnz
mov
bound
cli
outsl
cmpsl
lods
loope
daa
test
xor
icebp
inc
mov
xchg
icebp
shl
cmc
stc
std
mov
bound
push
inc
mov
lret
movsb
arpl
pop
cmc
sub
outsb
andb
mov
xchg
mov
mov
enter
pop
mov
xor
mov
jge
addr16
and
je
or
mov
mov
std
stc
jne
insb
ja
jl
mov
movsb
jne
hlt
dec
jl
cmp
adc
shll
dec
inc
test
push
xor
xor
test
add
inc
dec
lret
lcall
in
cltd
sbb
xor
outsb
in
fnstenv
sti
push
adc
jo
subb
add
repnz
aas
add
mov
stos
push
test
pop
cwtl
jmp
pop
cmp
mov
ret
pop
insl
adc
mov
jo
or
push
sbb
push
jne
or
sbb
fnstenv
leave
jmp
test
ficomps
fucomp
cmp
dec
andb
or
and
mov
roll
loope
aas
adc
fstpl
pushf
or
ja
out
subb
repnz
xchg
imul
roll
popf
add
mov
pop
mov
pop
dec
mov
mov
pop
scas
hlt
push
mov
sub
lods
ja
and
lock
fldl
xchg
stc
jp
or
sbb
xchg
aas
push
jne
pop
pop
xlat
sbb
pop
rcll
sbb
mov
add
pop
adc
mov
push
rorb
ds
push
and
cmp
push
out
pop
jg
shr
or
xchg
icebp
mov
in
push
fadd
mov
out
stos
jmp
loope
dec
dec
sbb
cli
inc
xor
pop
or
inc
add
push
xchg
enter
aas
xchg
mov
sbb
mov
and
cli
mov
in
lret
into
xor
js
add
lcall
ret
inc
stc
std
add
shlb
insl
or
pushf
outsb
testb
dec
sub
sub
lock
jle
mov
xchg
sti
sbb
cmp
cmp
sbb
pop
std
add
xor
xchg
loop
in
sbb
and
xchg
ffree
sub
aam
loop
inc
cmp
sbb
sub
or
test
aas
mov
aam
lods
movsb
fbstp
xor
or
inc
std
leave
mov
lock
mov
data16
push
and
out
imul
sar
jle
push
dec
jp
fcmovb
icebp
loope
or
stos
loope
mov
sub
dec
test
jl
mov
sbbl
pop
cmpsb
fs
mov
mov
sbb
mov
cli
mov
jl
dec
adc
outsl
int
add
lods
icebp
push
xor
ja
icebp
and
dec
xor
add
aad
mov
mov
fldpi
push
sarb
in
rcl
and
and
stos
sbbl
ret
xor
mov
push
iret
lret
add
mov
mov
loope
ljmp
ss
repnz
add
adc
into
rol
jne
adc
dec
por
dec
rcrb
mov
cs
jne
add
mov
pop
and
ror
jbe
inc
mov
adc
es
cs
lret
or
stos
insb
das
or
xchg
jge
push
lds
push
and
push
lods
or
pop
mov
lock
sbb
aam
xchg
adc
fucomi
sub
add
add
das
bound
test
jmp
es
jl
pop
sbb
push
lret
add
das
mov
loopne
add
mov
sub
push
add
pushf
pop
pop
into
xor
rcll
mov
btc
or
push
push
mov
das
sub
push
ret
pop
push
idivl
mov
mov
sbb
add
xor
cmp
and
aas
xchg
iret
dec
out
ljmp
cmp
pushf
add
lock
enter
mov
into
pop
jae
sbb
pop
adc
cwtl
pushf
shlb
cwtl
outsl
fcmovb
jne
and
xor
xor
pop
xchg
in
mov
dec
stos
fldcw
dec
repz
xchg
sbb
std
scas
xor
lds
sbb
add
repz
dec
adc
fistpll
and
cmp
call
pop
mov
pop
jo
int3
cmpsl
pop
mov
sbb
mov
push
shll
mov
lods
pop
test
jg
repz
mov
lds
pop
cli
jg
add
aas
imul
imul
test
mov
mov
mov
sbbb
inc
sbb
les
aad
lods
inc
adc
testl
xor
mov
add
xorb
nop
scas
inc
mov
aad
mov
shlb
mov
iret
fsubrp
pop
stos
add
leave
and
mov
mov
mov
push
xchg
pop
pusha
cwtl
xor
jge
loop
mov
ret
add
mov
jmp
jae
stos
call
add
int3
ret
adcl
les
and
bound
inc
popf
out
pop
movsl
leave
adc
in
mov
aas
sub
mov
sti
cltd
sbb
out
shrl
mov
cmp
inc
sbb
jl
inc
ret
mov
fistpll
pushf
push
lods
loope
jle
ficomps
or
pop
hlt
dec
adc
xor
int3
xorb
add
repz
outsl
inc
xchg
cwtl
pop
ss
mov
push
push
mov
add
mov
xchg
leave
mov
inc
pop
xlat
ja
add
add
aad
jns
cmp
or
cmpl
cmc
mov
xor
mov
push
testl
and
adc
aam
sub
sbb
jle
xchg
out
stc
fdiv
loope
leave
mov
mov
mov
ret
push
ret
arpl
call
sub
mov
xchg
les
push
rol
pop
mov
and
psubd
dec
jb
xor
jne
insb
pop
call
jg
test
lret
popa
xchg
lret
sqrtps
test
push
in
or
es
push
push
cltd
push
imul
cwtl
ficoml
sbb
mov
inc
out
and
sub
mov
push
orl
cli
aam
scas
loop
fmull
shrl
lret
imul
dec
stc
hlt
shl
loopne
sbb
sbb
stc
cmpsb
jb
xor
fistps
cwtl
lea
lds
mov
and
rorl
cmpsl
jbe
add
pop
push
dec
cli
lea
jmp
mull
ret
notl
inc
jnp
push
add
mov
stc
xchg
insb
mov
or
mov
or
add
stc
dec
int
clc
fdivrs
leave
mov
jno
cmp
or
jmp
std
xor
mov
test
addr16
and
or
push
pushl
add
int
ljmp
fimull
dec
dec
enter
lock
movsl
sub
add
cmp
scas
mov
loopne
stc
aas
and
insl
mov
dec
push
jmp
fisttpll
push
xor
idivl
shlb
in
out
dec
es
lret
pop
cmc
xchg
push
loop
cmp
test
scas
test
cmp
js
add
fiadds
shlb
xor
test
push
xchg
push
dec
shll
xchg
fldt
ret
xor
out
pop
jge
dec
mov
iret
clc
in
bound
enter
mov
cmp
insb
es
mov
arpl
cltd
scas
mov
inc
xor
cmp
pop
pop
jecxz
cmp
push
orl
add
andb
sub
std
pop
xor
arpl
cmp
mov
jne
repz
arpl
jle
pushl
test
mov
mov
movb
outsl
call
shll
idivl
inc
mov
les
leave
pop
sbb
inc
loopne
jle
xchg
rcrb
pusha
jae
shl
or
xchg
movsb
sbb
sub
icebp
scas
mov
ss
sub
imul
sbb
jmp
shl
repnz
add
push
imul
popf
inc
xchg
aaa
pop
push
dec
add
les
push
and
les
es
leave
dec
pop
mov
add
cmp
inc
xor
jne
imul
dec
out
or
imul
push
aad
mov
in
inc
add
inc
add
mov
inc
test
mov
adc
sbb
test
sarl
insb
leave
fwait
imul
mov
jp
cld
test
dec
mov
test
or
outsl
dec
aad
jbe
mov
les
and
cmp
mov
sbb
push
test
insb
mov
lds
xlat
mull
incb
jnp
cli
adc
dec
mov
ret
and
push
pop
cld
and
sarl
movswl
iret
xchg
or
xor
push
scas
xor
cmp
loope
sub
cs
ljmp
push
sarl
xor
push
push
gs
popf
pop
xor
sub
inc
outsb
rcll
clc
outsb
mov
aaa
hlt
leave
out
pop
mov
sub
mov
rclb
repnz
in
insb
mov
jge
xchg
mov
inc
mov
dec
sahf
pushf
dec
ret
shlb
mov
jp
enter
sub
add
cwtl
pop
or
arpl
push
or
in
pop
aam
jg
dec
call
push
shll
insb
sbb
lahf
test
jg
scas
into
add
imul
push
enter
push
ja
testl
hlt
mov
mov
and
xor
dec
dec
testl
xor
ss
fidivrs
add
leave
push
cmp
in
or
adc
packsswb
arpl
or
ret
rolb
mov
mov
pop
sbb
cmp
cmp
adc
add
sbb
and
jecxz
js
in
aas
push
pop
add
insl
push
nop
push
fnstsw
mov
stos
lcall
inc
jecxz
pop
push
and
lock
cmp
xor
push
add
shll
xor
xchg
stos
sub
loopne
cli
stos
mov
shl
lds
pop
or
pop
dec
and
sub
jo
add
cltd
sbb
lret
pop
xorl
jnp
mov
sbb
popf
adc
add
dec
fldl2e
test
pop
jmp
rorb
test
mov
movq
cmp
add
sbb
mov
sub
test
shlb
and
lods
or
rorb
jnp
cld
jp
sbb
sbb
es
and
xchg
sbb
in
xor
cltd
out
repnz
mov
jecxz
fisttpll
dec
lret
xor
sahf
stc
jne
fisttpll
push
inc
jbe
or
int
mov
test
jo
xor
dec
sub
dec
cltd
cli
xor
jae
mov
into
xlat
mov
lock
adc
mov
sbb
mov
inc
pop
inc
sbb
imul
add
fbld
loope
dec
jmp
mov
in
and
cltd
add
imul
lods
pop
inc
test
imul
lods
or
cmp
xchg
mov
test
dec
sub
inc
sti
popl
fs
cmp
push
inc
stos
jb
shll
sub
mov
imul
dec
in
jecxz
add
xor
or
jecxz
iret
fnsave
into
aam
sbb
mov
mov
mov
mov
sbb
imul
push
and
into
add
adcl
pop
mov
fcmovnbe
pop
ret
mov
lock
inc
test
pushf
inc
movsl
fsubl
mov
sub
adc
xchg
imul
and
jbe
add
inc
sbb
sub
cmc
xchg
ret
or
mov
ret
or
jecxz
mov
mov
adc
or
test
cs
loopne
cmp
add
sbb
mov
jl
jmp
in
xor
leave
mov
std
aam
dec
xorb
enter
mov
fiaddl
rcrb
xor
sub
fdivrs
repz
mov
out
fldl
stc
mov
jnp
add
ljmp
lods
test
es
pop
movsb
add
sbb
mov
pop
flds
fs
push
aad
pop
call
push
inc
push
xchg
push
dec
movsl
add
cwtl
mov
and
dec
out
mov
test
jecxz
and
push
lahf
icebp
sbb
cli
lahf
aas
rcll
pop
or
sbb
mov
ds
xchg
adc
inc
and
and
sahf
out
inc
mov
shlb
or
pop
dec
mov
daa
lret
pop
out
in
xorl
in
test
call
push
inc
xchg
aaa
mov
sub
mov
loope
or
scas
add
loopne
xchg
scas
push
movsl
fnstcw
cmp
cld
add
xor
mov
jmp
mov
repz
cmc
fucomip
lret
xchg
out
in
add
mov
mov
xor
leave
icebp
push
jg
hlt
cmc
cmpl
dec
xor
sbb
icebp
out
mov
mov
cwtl
xor
lret
clc
aas
fidivl
mov
int
xchg
ret
mov
jo
and
sub
pusha
xor
ja
in
movsl
sarb
je
mov
std
popf
inc
push
stos
dec
sahf
mov
xlat
cmp
jp
shll
push
add
ret
push
mov
add
jp
dec
fcoms
sbb
cltd
xor
cwtl
jb
loopne
repnz
pop
jae
or
adc
xor
pop
fnstenv
push
sbb
dec
addr16
mov
loopne
xchg
in
push
pop
addr16
xor
inc
or
hlt
and
cmc
cli
mov
inc
ret
cmp
rcll
cmpsb
enter
pmulhw
jo
fcoms
and
pop
xchg
pop
hlt
loopne
and
xchg
sbb
out
fcmovne
ds
inc
pop
cmpsb
jbe
fst
mov
xchg
inc
fadd
and
rorl
out
inc
addr16
decl
stos
aas
repnz
jnp
ljmp
mov
jmp
mov
sbb
add
dec
sub
pop
out
sub
push
aaa
adc
mov
and
ljmp
rcrb
mov
pop
lret
push
mov
sbb
and
cmc
sub
ja
mov
dec
dec
test
or
xor
outsl
jns
stos
enter
add
xchg
cmp
ja
or
loope
mov
enter
or
cmp
cwtl
out
mov
cmc
xchg
xchg
and
test
and
sarl
dec
mov
in
jne
mov
out
dec
outsb
movl
mov
iret
lea
dec
xchg
popa
dec
or
hlt
adc
in
ret
mov
push
inc
and
out
rorb
test
in
inc
pusha
cmc
jecxz
push
test
sbb
sub
mov
jnp
and
gs
xchg
loopne
add
push
ror
ja
and
mov
fs
pop
cmp
out
mov
sub
add
test
inc
loop
cli
pop
aas
pop
xor
jns
data16
mov
ss
enter
inc
movsb
sbb
sbb
fcmovnb
mov
mov
or
out
adc
sub
insb
mov
inc
out
inc
push
hlt
inc
jmp
or
sub
dec
or
xchg
popa
inc
mov
mov
gs
mov
mov
inc
aam
mov
mov
xor
jne
ret
pop
mov
cmp
mov
mov
push
xor
test
subl
popf
add
ret
mov
and
shll
enter
mov
int
pusha
mov
leave
xor
pop
addr16
add
lret
repz
cmp
push
les
inc
push
push
insb
jb
sti
mov
ret
push
sarb
jae
or
lret
xchg
loop
add
dec
push
rorb
leave
nop
push
or
enter
repz
mov
aad
inc
xchg
in
mov
loop
sub
pop
mov
pop
test
push
inc
icebp
outsl
push
popa
or
adc
lcall
sar
mov
test
cmp
in
fs
adc
add
rcll
dec
leave
loopne
les
leave
pop
mov
jns
dec
inc
mov
shll
cmpsb
lock
xor
jo
mov
dec
mov
stc
movsl
lea
imul
jmp
add
aaa
mov
push
out
fwait
push
addl
push
dec
bound
and
and
pop
out
xchg
push
or
pop
fldt
xchg
rcrl
in
nop
jnp
jl
arpl
sub
leave
lds
rol
jecxz
enter
or
ds
xor
fcomp
mov
jae
add
je
lret
and
data16
into
pop
mov
rcrl
inc
mov
cli
mov
mov
fstp
and
dec
je
sti
cmpsl
pop
in
pop
mov
jl
push
inc
or
pop
test
jp
sbb
mov
call
inc
cli
clc
nop
ja
sub
and
insb
jmp
mov
jecxz
cmp
pushf
insl
and
in
gs
pushf
add
and
or
dec
daa
sahf
out
movsb
inc
movsb
scas
out
lret
cmpb
cmpsl
mov
mov
jb
sub
leave
xor
xchg
mov
sub
push
leave
add
sbb
test
push
aad
mov
clc
pop
rol
in
pop
adc
sub
push
aam
jno
in
shrb
mov
or
in
hlt
call
or
mov
add
or
scas
mov
cwtl
sub
addb
aad
jecxz
mov
loope
and
pop
hlt
sbb
scas
std
xchg
cld
jle
imul
pop
pusha
sbb
push
imul
repnz
dec
adc
shr
cld
mov
aas
mov
adc
cmp
xchg
push
rcr
lock
pop
cmp
xchg
fnstenv
pop
mull
mov
mov
out
or
jne
and
andl
add
cmpsb
or
push
add
stos
ds
psubusw
pop
movsl
stc
cmc
prefetch
mov
push
push
jge
xchg
or
or
adc
ljmp
out
mov
mov
ja
push
out
in
add
sbbb
add
shr
mov
or
adc
aam
cmpsl
inc
leave
mov
insb
sbb
cmp
push
inc
jno
js
hlt
jno
pop
cmpl
adc
dec
repz
or
leave
dec
add
mov
in
xor
or
leave
ret
inc
and
dec
xor
into
sub
or
clc
ud2
inc
push
scas
xchg
jb
push
cmp
pusha
xor
xor
ret
popl
mov
or
push
inc
stos
aad
cmc
mov
loope
into
sub
add
arpl
jb
movsb
add
cmpsl
pushl
repz
push
add
jo
dec
xchg
add
lcall
enter
or
les
add
pop
dec
fcomi
ljmp
adc
in
xor
popa
sarl
movsl
ja
aas
push
add
cmpsl
push
pushf
arpl
pop
test
sbb
shlb
push
imul
popa
pusha
mov
shl
cld
ja
push
repz
mov
pop
adcl
daa
adc
mov
cmc
xchg
jl
stos
cmpsl
in
lds
ret
or
pop
inc
arpl
add
test
adc
add
add
test
mov
outsl
mov
enter
cmpsl
sbb
clc
rcl
push
inc
test
cmp
lret
jb
sarb
mov
shrl
jns
mov
pop
ret
pop
fbstp
add
add
mov
jns
lahf
or
clc
adc
jbe
dec
int
out
fdivrs
jecxz
enter
stos
mov
iret
ret
sub
iret
cmc
adcb
jne
adc
int3
mov
sti
mov
xorl
insl
ret
ret
jmp
xor
jo
shrb
jo
pop
adc
mov
or
sbb
xchg
xchg
leave
add
fnstsw
and
pop
fwait
fs
pop
jnp
or
add
push
decl
int
rol
rcl
adc
sahf
maxps
sar
or
cmc
jno
icebp
add
and
and
sbbl
js
mov
or
out
add
inc
jg
mov
les
jmp
or
ret
push
subb
mov
xor
xor
out
test
int3
aas
cmp
cmp
cld
int
inc
rcl
clc
mov
adc
pop
sbb
sbb
jbe
mov
adc
jbe
pop
cmpsl
loopne
cmpsb
add
mov
test
fucomip
xor
inc
cmc
sahf
xchg
cltd
lea
mov
test
pop
dec
bound
pop
adc
adc
dec
daa
lcall
orb
sarl
jbe
test
xor
icebp
int3
adc
fcmovnb
dec
add
test
push
loopne
cmpsl
push
xor
push
xor
leave
sub
cmp
pop
cltd
movsl
pop
pop
out
cmpsb
jmp
sbb
shrb
test
mov
leave
iret
jmp
jle
nop
es
imul
pop
mov
fcmovnu
test
xor
enter
fisubrs
mov
imulb
je
mov
mov
adc
cli
and
cld
jb
jne
sti
fsubrs
xor
jmp
pop
xor
push
movsl
lea
add
fstl
jno
mov
aad
mov
int3
mov
adc
xchg
mov
xor
test
add
lods
mov
pop
es
lret
inc
fiaddl
pop
lcall
or
xchg
imul
inc
je
out
test
sbb
sbbl
adc
jae
pusha
rcrb
push
jge
lds
push
shrl
push
shl
vcvtps2dq
pop
inc
pop
lea
dec
xchg
popa
in
push
icebp
ret
fmul
add
or
ficompl
movsl
xor
jbe
cltd
xor
repz
int
pop
rcrb
cltd
push
and
shrl
cmp
ss
push
sub
rcrl
add
rolb
push
out
add
mov
push
int
es
inc
shrl
add
outsb
push
insl
outsb
test
inc
leave
in
pop
scas
lret
popa
nop
test
bound
push
call
xor
xor
js
nop
cmpsb
and
adc
int
mov
cmp
movsl
inc
mov
ljmp
jl
addr16
or
test
and
sbb
or
jge
push
inc
les
lds
push
rcl
cmpsb
mov
imul
mov
add
inc
mov
sub
xchg
mov
fwait
loopne
popf
enter
sub
cmpsb
popa
add
mov
add
lds
mov
sub
add
jb
fwait
push
ret
icebp
push
cmp
ret
and
rclb
packsswb
loope
push
fstpl
jb
xchg
movsl
mov
mov
mov
aas
mov
sbb
xor
xor
mov
xor
stos
push
test
cli
into
xchg
jns
cwtl
popa
psraw
sub
scas
call
out
aad
subb
adc
cli
jbe
mov
dec
xchg
and
mov
shrb
mov
gs
jmp
adc
jae
enter
fsubs
leave
push
jle
in
sbb
lods
xor
call
in
lret
mov
repnz
mov
into
icebp
mov
and
jb
data16
cli
and
aas
or
call
mov
dec
push
jnp
and
cmp
dec
or
xchg
repnz
pop
xor
int3
sub
or
ja
cwtl
ljmp
xchg
xor
xor
shr
xchg
icebp
fadd
or
xor
imul
jg
dec
mov
movsl
rcll
xchg
jle
pop
test
add
mov
and
cld
into
inc
aas
mov
mov
stos
lret
cmp
mov
dec
mov
adc
lret
int
notb
aam
test
adc
push
pusha
dec
mov
test
int3
jnp
push
mov
mov
fdivrp
sub
cld
rcrl
xor
xor
and
lock
rcl
sarl
mov
or
mov
roll
pop
jp
cmpsb
mov
ja
inc
push
xor
mov
push
mov
mov
dec
into
inc
or
push
cltd
leave
int
and
jbe
xor
add
jecxz
cmp
add
xorb
stc
or
repz
ret
lret
pop
fldenv
lret
notb
jno
xchg
adc
mov
lret
dec
sbb
or
lret
push
adcb
jg
dec
sbb
lcall
test
cmp
xchg
lock
loop
ljmp
inc
lods
xor
sbb
cwtl
jo
xor
test
and
stos
mov
or
add
in
das
mov
pushf
hlt
mov
int3
div
push
mov
xchg
dec
dec
stos
jmp
and
leave
mov
roll
daa
add
dec
hlt
lahf
stos
mov
cld
scas
xchg
ficompl
sub
adc
cmc
dec
cltd
in
mov
dec
pop
sbb
in
bound
pop
jno
lahf
mov
push
jne
sarl
in
dec
daa
cmpsb
rolw
sbb
push
jae
jl
or
fisubrs
push
fistl
mov
out
fsts
pop
sbbb
cmpsb
fucomp
xrelease
leave
test
orb
inc
mov
add
cmp
add
pop
ret
test
lcall
push
dec
repnz
loope
popf
sbb
mov
jmp
pop
and
shll
push
and
push
insl
ret
xlat
nop
lret
je
aad
icebp
inc
div
ss
xor
rcll
lret
adcb
divl
inc
xchg
xchg
mov
and
cltd
pop
lea
or
push
sbb
xchg
sub
adc
leave
shr
aad
aam
mov
cmp
in
push
sahf
push
inc
enter
jle
lret
popf
inc
int3
cmp
idivb
fsts
out
xchg
sarl
inc
push
js
sub
popf
mov
flds
popa
sbb
xchg
sub
stos
jg
pop
out
inc
sub
or
mov
ret
fcmovne
push
mov
inc
in
adc
pushf
fidivrl
fs
and
cmc
and
scas
pop
scas
push
jecxz
or
repz
and
dec
into
notb
cmpsl
xor
std
out
push
mov
xchg
xlat
mov
dec
mov
pop
mov
cmp
dec
repnz
lods
and
jmp
or
shrl
imul
mov
mov
inc
sbb
std
inc
stc
xor
and
outsl
shlb
xor
fcompl
fs
out
jno
std
pop
shrl
cmp
xor
jb
loop
out
les
jg
test
cmc
add
mov
icebp
int
ljmp
loop
mov
dec
fldenv
shrl
xor
mov
and
lret
clc
jg
jecxz
jle
sbb
dec
icebp
repz
push
sar
cmp
push
loope
jmp
ror
in
movsl
fdivl
sti
rcrb
ret
mov
mov
sbb
xor
stos
xchg
icebp
pop
adc
xchg
scas
dec
or
inc
inc
adc
fdivp
fcmovnbe
jae
and
pusha
shrl
imul
cwtl
out
xchg
fisttpll
les
lea
shl
clc
repz
ret
aam
outsb
jmp
rcr
test
sub
popf
into
xchg
lods
iret
mov
sbb
push
cmpsl
test
lock
lods
cwtl
outsl
shlb
rcr
dec
adc
nop
sbb
push
aas
mov
push
xor
xorb
push
inc
pop
sbb
outsl
ret
or
mov
jb
xor
sbb
adc
ret
sbb
jmp
int
fsts
inc
fisubs
test
inc
in
fsqrt
mov
lret
adc
dec
je
cmc
decl
cmp
sub
in
test
pop
rcrb
mov
ret
iret
add
mov
popf
mov
mov
in
pop
push
adc
stc
ljmp
sbb
xor
aam
mov
std
hlt
xchg
or
sbb
out
call
sbb
lahf
divb
test
fcoms
incl
push
cmp
dec
cmpsb
mov
pop
ljmp
jmp
ja
mov
mov
ljmp
aam
test
add
rolb
das
adc
clc
ret
imul
sbb
pop
sbb
pop
sbb
js
dec
je
std
push
mov
aas
jb
popf
into
shll
scas
and
cmpsl
jmp
pop
icebp
push
fmulp
mov
daa
leave
icebp
mov
xchg
jb,pt
jno
xor
ror
dec
add
xor
in
scas
std
icebp
jns
jne
xor
sbb
push
aam
lock
adc
cmp
clc
mov
adc
dec
cmp
dec
sbb
bound
jle
ja
mov
ret
jo
shrl
clc
sbb
call
out
and
add
pop
jnp
cmp
sub
dec
cmc
iret
mov
or
jb
fwait
mov
outsl
inc
clc
repz
js
dec
mov
movsl
ret
or
daa
dec
adc
lods
push
xor
sub
sbb
nop
xor
out
add
test
adc
cmpsl
imul
into
cli
aam
xchg
xor
jb
push
fcmovnbe
jmp
push
xchg
cli
int3
sahf
into
xor
or
insb
aam
hlt
xchg
sbb
push
jecxz
add
fstps
jne
xlat
xchg
sbb
movsl
jb
negl
sub
adc
pop
int
add
pop
testl
leave
popf
jo
iret
fstpl
test
pop
xlat
dec
rorl
int
ret
test
mov
sbb
sub
jmp
aam
pop
jle
mov
or
inc
inc
insl
icebp
mov
push
cmpsl
movsb
push
inc
dec
in
xchg
or
push
cs
fisubl
pop
add
cmp
lret
push
cmp
mov
pop
sub
xchg
je
push
push
lock
fnstenv
arpl
call
inc
out
stc
ljmp
fcompl
mov
push
mov
dec
loopne
cmc
sub
fldl
std
imul
sub
pop
dec
jg
test
pop
cmp
int
bound
adc
push
mov
lldt
sahf
ror
test
mov
mov
xor
cld
ljmp
xchg
dec
cs
les
add
repz
add
stos
mov
and
adc
enter
aaa
mov
dec
shlb
aad
repnz
cmc
lret
lahf
out
aas
lea
jo
loop
or
insl
xchg
inc
outsl
ret
ds
mov
mov
popa
dec
in
sbbl
dec
ljmp
icebp
inc
mov
cwtl
shl
pop
aam
test
add
and
cld
repnz
sub
add
push
mov
sub
or
scas
dec
pop
add
jbe
sarb
dec
aam
jns
xchg
mov
and
jbe
sub
mov
sarb
jno
mov
ja
pop
les
popa
xchg
jg
cmc
es
mov
out
or
in
cmc
xchg
jbe
or
sarl
aam
mov
and
frstor
pop
int3
mov
fstpt
rolb
dec
mov
lods
data16
dec
mov
cmpb
mov
push
xor
xlat
or
pop
add
js
push
in
clc
loopne
icebp
popa
in
cli
ret
movsl
outsb
cmpsl
and
scas
pop
popa
cs
and
xchg
in
xor
stos
mov
std
cmp
xchg
insb
and
daa
iret
movsb
mov
fdivrs
scas
dec
cmp
push
das
jns
xchg
scas
jl
push
lret
mov
or
xor
and
pushl
shrl
push
jmp
test
cli
ror
out
xor
xchg
test
out
pop
xor
test
xor
in
ret
mov
mov
repz
test
clc
fildl
in
sbb
sti
xchg
mov
pop
out
mov
lods
cmp
push
fcmovnbe
mov
into
or
add
cmp
inc
jae
test
sbb
adc
dec
xor
add
negl
sbb
add
push
push
xor
pop
jns
add
pop
jae
mov
adc
out
repz
xchg
hlt
add
aaa
cltd
sub
cmc
das
cmp
ret
dec
ljmp
sbb
mov
dec
mov
aas
mov
iret
sub
outsb
cli
adc
mov
rol
xchg
int
xor
std
ds
int
xor
test
cmp
imul
nop
icebp
popf
rcll
push
mov
sub
testl
sbb
repnz
cmc
lds
sub
rorl
fs
push
xor
aas
mov
inc
data16
xlat
shll
subb
js
add
dec
test
aam
mov
jb
adc
icebp
aad
lret
lret
movb
add
orl
adcl
xor
gs
stc
inc
xor
lods
test
subl
mov
mov
pop
or
sbb
mov
cltd
aad
mov
icebp
mov
in
test
mov
fidivs
shrl
faddp
scas
hlt
mov
sbb
sub
xor
int3
test
shrl
xchg
sbb
and
sbb
mov
mov
and
in
es
popf
or
int
lods
jno
mov
xor
inc
xor
push
add
mov
sbb
shrb
and
std
jecxz
std
icebp
out
into
out
in
shr
pop
mov
jns
dec
sbb
mov
lds
cmc
mov
aaa
cmc
lret
cmc
out
loope
cmc
loopne
aaa
cmc
xor
bound
mov
ret
cld
jmp
aam
mov
xor
push
xchg
mov
jg
repz
xor
fimuls
leave
test
pop
xor
mov
dec
cmp
rorb
adc
shl
icebp
adc
push
mov
and
js
inc
sarl
aam
int3
sarl
test
sbb
ljmp
xor
imul
dec
std
dec
mov
cmp
push
pop
rcl
and
push
push
fsubr
push
adc
imul
add
stos
jl
addl
jecxz
test
xchg
sub
mov
fsubrl
xchg
jge
in
bnd
daa
add
sub
add
or
cwtl
jbe
mov
jns
or
dec
add
lods
in
mov
rcrb
loope
in
ljmp
push
jecxz
leave
fistpl
and
jbe
movsl
loope
repz
cmp
in
inc
jae
aam
shlb
xchg
mov
dec
add
add
push
inc
clc
fstl
jle
or
in
in
out
cmpsl
and
loope
fs
aam
movsl
aaa
sbb
icebp
icebp
add
dec
sbb
shll
ss
xor
mov
cmp
fnstsw
inc
pop
mov
cmp
rol
push
inc
add
cmc
fstps
dec
inc
push
in
and
dec
aas
sub
loop
add
dec
leave
test
mov
jmp
sub
lods
vrsqrtss
mov
inc
mov
leave
or
lock
es
jbe
fmuls
mov
dec
divb
xor
in
push
sbb
sti
test
popa
cmc
leave
ret
mov
mov
arpl
dec
dec
hlt
and
mov
add
sbb
and
jns
jle
aas
shr
jb
fdivl
jae
or
lods
jge
lods
icebp
negl
inc
or
ss
push
push
dec
push
sub
aam
les
and
imul
or
mov
jo
mov
mov
inc
mov
push
dec
xor
cs
test
daa
aaa
xor
or
pop
xor
loop
xlat
push
xor
dec
and
add
stos
int
pusha
mov
inc
sbb
or
inc
shr
jo
jb
cmc
aas
fcmovbe
fnsave
rol
in
jp
dec
into
dec
pop
fs
or
mov
popf
rorb
jl
xor
push
rcll
jno
cltd
dec
add
jo
mov
pop
xor
xor
xor
jmpw
pop
jmp
jo
ss
std
xor
xlat
or
pop
push
and
fisttps
and
pop
scas
in
scas
movsb
test
push
inc
fildl
ret
xor
add
inc
pop
int
loopne
inc
fisttpl
xchg
mov
mov
cmp
dec
in
aam
xorl
jmp
repnz
and
in
mov
jne
jl
push
sarb
shrl
ljmp
loope
mov
inc
pop
lds
ret
add
imul
mov
jae
sbb
in
stos
lods
and
scas
add
mov
scas
add
mov
aad
and
cmp
or
cmpsb
repz
or
jo
jmp
sub
pushf
fadd
inc
scas
mov
gs
stos
pop
add
mov
xchg
loope
or
push
hlt
mov
pop
icebp
roll
mov
test
mov
add
sbb
and
jnp
test
cli
pop
mov
sbb
dec
pmaxub
dec
fcoms
call
icebp
or
sarl
in
loope
std
and
pop
add
mov
mov
ret
mov
and
and
daa
add
sbb
out
mov
iret
out
imul
sti
jne
mov
test
mov
xlat
inc
adc
shll
pop
dec
jo
and
js
sbb
jmp
lahf
cmpsl
fcmovnb
call
push
rcl
test
inc
addr16
xchg
jo
test
lret
ret
mov
mov
mov
xor
std
and
ja
mov
testl
add
xlat
icebp
add
sbb
int
mov
cmp
pop
xor
push
jne
mov
adc
push
sbb
dec
rorl
sar
jmp
cld
adc
add
jl
cmp
mov
sub
or
iret
lds
movsb
roll
lock
in
add
add
push
cmc
icebp
jns
inc
jge
or
fmull
cmc
movsl
cld
xchg
lahf
push
orb
inc
cltd
outsb
mov
mov
dec
cltd
sahf
lods
cmc
cltd
fwait
jnp
xchg
enter
call
pop
add
enter
fs
push
iret
push
sub
dec
fs
and
add
addr16
sbb
mov
or
xor
insl
xchg
fcomi
cmp
inc
cmp
jl
loopne
icebp
fincstp
aad
pop
ljmp
add
xchg
and
and
jle
add
adc
sub
xlat
rcr
stos
cld
cmp
lods
xor
ja
mov
adc
and
xchg
jl
xchg
loop
lcall
out
mov
dec
sub
aaa
push
mov
pop
xchg
cmp
in
cltd
sub
outsl
iret
ss
push
pop
dec
nop
ljmp
adc
std
xchg
enter
adc
lea
inc
rcrl
add
jno
test
pop
xor
xor
fdivrp
or
add
mov
aam
cmpsl
movsb
cwtl
jmp
mov
adc
stos
push
adcl
xchg
pop
jnp
sub
into
or
lods
ljmp
sbb
and
rcrl
cmp
sbb
mov
aas
mov
jae
cmc
add
adc
mov
push
in
js
fcos
pop
dec
sti
jge
mov
insb
or
jle
add
aam
mov
jecxz
sbb
ret
fst
pop
sbb
call
ss
test
stc
sbb
and
adc
cmp
mov
mov
dec
mov
jl
xor
in
xor
jecxz
sbbl
adc
adc
cwtl
pushl
pushf
dec
sbb
in
repz
dec
scas
dec
jle
popa
or
or
rorl
in
and
pop
jo
stc
jl
adc
xchg
stc
or
enter
outsb
dec
jecxz
sbb
jecxz
or
sub
lcall
test
mov
pusha
mov
add
pop
cmpb
or
sub
push
js
add
add
push
or
notl
ret
mov
sub
stos
jl
pop
insb
inc
shrl
jae
aam
adc
dec
push
xor
mov
iret
sub
pop
loop
icebp
push
ljmp
imul
add
sbb
xchg
lret
lret
and
add
or
sub
cmpsb
push
nop
data16
and
jg
adc
fstps
jbe
push
lret
mov
test
add
add
mov
xchg
mov
mov
addr16
push
xchg
fistl
mov
test
les
or
mov
aam
movsb
loope
test
je
pop
jge
movsb
mov
cmp
mov
add
pop
cmp
cmpsl
jmp
and
jno
cmp
sbb
push
cmpsl
adc
ljmp
cmp
jmp
and
cli
lret
or
mov
or
rcl
shr
call
clc
data16
mov
test
stos
enter
cli
xchg
cli
jae
gs
movsl
aaa
int3
shlb
stos
rcll
fwait
inc
push
xchg
jmp
aas
fwait
dec
dec
fucom
cltd
push
and
stos
loopne
cli
jae
dec
cmp
arpl
flds
mov
cwtl
jno
cmp
test
test
or
shl
popf
inc
lods
das
cltd
bound
divb
fdivrs
or
dec
mov
cmp
xchg
dec
lds
push
push
lret
sahf
xchg
add
int
jns
inc
incb
or
jno
jecxz
cmp
mov
insb
adc
ds
shl
negb
outsb
xor
cmp
jns
mov
dec
mov
or
je
in
loop
xor
insl
add
sbb
vandps
add
xor
ds
pop
mov
hlt
mov
stc
sub
in
mov
and
jns
mov
hlt
andl
add
ljmp
adc
lock
inc
sbb
lret
sub
ret
mov
mov
adc
stos
cmp
mov
stos
sub
js
rcrb
sub
nop
jg
cmp
sbb
xchg
pop
fimull
ficoml
xchg
mov
lahf
inc
jns
mov
enter
cwtl
bndstx
add
in
addr16
cmpsl
aad
loopne
dec
pop
stos
loope
mov
scas
dec
orb
dec
stos
fstpl
jne
mov
cmp
sbb
mov
add
dec
test
mov
and
or
icebp
sub
rol
into
dec
and
inc
shll
cmp
or
sti
xor
and
rcrl
or
shll
test
cmp
jo
aad
dec
or
popa
jmp
lods
test
pop
das
push
xchg
cs
pop
mov
adc
jb
dec
inc
adc
out
push
mov
cmp
cmp
ds
mov
and
cmpsb
sub
sbb
popa
mov
cmp
ja
test
imulb
sub
push
popa
ret
cli
jno
into
outsb
and
or
inc
mov
jne
mov
imul
sub
mov
and
xor
test
xor
dec
mov
add
lea
ss
or
shl
ficompl
rcl
pop
mov
or
xchg
mov
icebp
jno
xor
ja
int
mov
lret
lret
popf
daa
xor
mov
add
xchg
out
leave
sbb
jo
cld
js
or
mov
icebp
enter
aaa
faddl
icebp
xor
rorl
dec
sbb
xor
icebp
lods
in
adc
repz
xchg
push
addl
repnz
cmp
cmp
mov
lahf
fwait
push
popf
vunpckhpd
mov
iret
imul
xor
dec
movsl
mov
loop
xorl
xchg
js
or
icebp
push
dec
or
rolb
cmp
jo
loopne
or
scas
cmp
int
mov
push
dec
push
cli
dec
ret
push
aaa
decl
sub
xchg
mov
lods
dec
adc
pop
lock
mov
loope
jmp
add
in
push
sbb
mov
xchg
repnz
cmc
dec
fst
sub
sbb
adcb
fmull
incl
push
cmp
mov
rorl
sub
addb
jge
sti
stc
lret
inc
add
xor
add
ja
jmp
push
add
les
sbb
add
lock
inc
in
lret
push
mov
cmpsb
jae
sub
ret
into
or
mov
inc
adc
add
sub
inc
or
sub
xrstors
dec
jne
jmp
lahf
push
test
clc
mov
pushf
add
cmpsb
in
xor
or
adc
rol
mov
mov
pop
mov
jecxz
inc
sub
mov
fs
jmp
ljmp
call
dec
mov
repz
inc
sub
inc
inc
fsubr
jp
xor
or
add
inc
push
sbb
jbe
adc
add
or
orl
pop
stos
fs
iret
xor
sub
cmp
xchg
test
mov
hlt
push
test
xchg
mov
sbb
and
mov
add
int3
lds
rcll
xchg
cmc
and
inc
jmp
icebp
xchg
mov
call
fwait
rcrl
or
mov
bts
sbb
shr
leave
jg
jmp
inc
shll
xor
dec
jge
sbbl
into
dec
pop
out
cli
jp
push
aaa
dec
mov
rorb
push
and
lock
mov
lret
lret
arpl
sub
lds
and
cltd
insb
sbb
mov
lret
ret
or
shlb
sbb
es
into
mov
jl
mov
cmpsl
rorl
cmp
rorl
sbb
es
rorl
in
lret
ljmp
mull
push
scas
stos
push
rorl
js
ret
movsl
xchg
arpl
dec
pop
sti
mov
cli
jo
push
in
or
dec
xchg
dec
enter
fimull
mov
and
add
push
xchg
or
jle
cmp
mov
out
mov
leave
sbb
cmp
mov
inc
xor
jne
jae
xor
mov
ret
mov
test
test
je
rol
mov
aas
and
iret
or
xorl
xchg
lea
add
je
and
js
test
rol
in
shrl
xor
xorb
pop
push
sarl
and
jmp
mov
and
mov
xor
cmc
jg
jge
dec
push
jne
rorl
pop
shll
adc
repz
rcrb
dec
jl
faddl
mov
inc
cwtl
movsb
adc
mov
jle
adcb
mov
cmc
test
outsb
shl
fwait
test
push
lret
pop
jb
and
cmp
pop
sbb
insl
popa
pushf
imul
jns
test
sbb
sbb
rcll
leave
into
xor
adc
xlat
add
fmuls
dec
cmp
and
sbb
test
lahf
mov
mov
and
int
pop
mov
mov
les
mov
dec
fistps
mov
inc
sbb
fwait
inc
jecxz
aas
imul
idivl
mov
cmpb
xchg
jmp
rclb
inc
xchg
push
addr16
dec
out
jo
lds
fldenv
sbb
aam
repz
lds
notl
xchg
push
xchg
adc
sub
jecxz
mov
ljmp
test
mov
mov
cwtl
pop
mov
addr16
fisttpll
mov
push
or
stos
add
sub
sbb
mov
cmp
in
cmc
push
pop
mov
xchg
or
popf
in
fdivr
add
push
push
repz
loopne
sbb
test
icebp
cs
fldenv
and
in
imul
pop
mov
and
cmp
inc
imul
sub
lds
push
pop
leave
sub
mov
shr
repnz
pop
mov
xor
test
mov
mov
adc
fstps
pop
sub
std
pop
mov
add
insl
data16
xor
sbb
loopne
add
jle
push
push
les
nop
sbb
outsl
cmc
cli
mov
sarl
lcall
or
and
sub
lret
push
cltd
inc
shlb
icebp
aam
std
cmpsb
xchg
pop
lods
pusha
inc
std
jae
add
sarl
cmp
cld
pop
xor
or
cmpsl
xor
inc
xor
jnp
cmc
mov
jae
xchg
andl
add
mov
jnp
jmp
add
outsl
sub
cmp
jge
sub
and
imul
sub
test
mov
rorb
repz
or
push
sbb
inc
cmc
cmc
shll
pop
outsb
arpl
push
add
mov
add
dec
rolb
in
inc
pop
add
aaa
cld
call
adc
add
jae
mov
fistps
pop
nop
test
mov
aam
sbb
test
cmp
pop
in
lds
push
mov
mov
jecxz
roll
mov
xor
add
pop
int
jmp
or
lods
aaa
and
inc
and
xlat
xchg
loop
mov
nop
test
push
pusha
mov
mov
cmp
inc
subb
push
test
xor
xor
sub
push
mov
ror
cmp
jne
cmp
add
sbb
stos
das
push
and
stos
cmp
mov
lods
aas
in
dec
je
inc
lahf
dec
mov
int
mov
hlt
adc
sub
xchg
rorb
rol
ret
sub
mov
out
xor
and
xor
or
mov
loop
jb
loopne
add
or
jae
mov
sbb
movsl
push
mov
sbb
jnp
lret
dec
push
enter
jb
add
ret
sub
aam
mov
mov
aas
or
sbb
sub
dec
mov
std
dec
pop
or
add
inc
vpaddw
push
lret
xor
and
rcl
mov
mov
into
cli
cltd
cmp
push
test
cmp
sub
xchg
jb
or
out
repnz
rol
sub
mov
hlt
cmc
jmp
push
test
insl
mov
jns
push
stos
xchg
dec
shl
fisttpl
adc
mov
aas
test
jo
sub
xor
push
popf
sti
adc
sub
cs
fisttpll
pop
mov
pop
sbb
dec
jne
mov
xchg
pushf
mov
lret
push
jo
xor
push
pop
jp
test
dec
push
hlt
adcl
aaa
test
dec
mov
sbb
sub
fwait
cmp
in
adc
cmp
mov
out
icebp
ss
mov
dec
aas
inc
stos
or
dec
fildll
aam
xchg
add
lods
mov
std
dec
adc
pop
or
ljmp
test
into
inc
add
xor
mov
xor
jmp
cmp
sub
bnd
cli
lcall
mov
dec
xlat
pop
add
negl
les
inc
sub
sarl
cmp
cli
mov
xchg
mov
inc
out
pop
lcall
mov
mov
in
push
into
stos
push
push
repnz
fs
pop
mov
cltd
test
xor
stc
jmp
jae
pop
xor
ss
or
aam
sub
push
mov
adc
mov
stos
or
pop
es
or
cmp
jg
sub
dec
push
scas
adc
popf
xlat
push
adc
inc
cltd
and
inc
dec
movsb
push
hlt
shl
inc
or
cli
sub
popf
add
clc
pop
add
sbb
ret
mov
mov
ljmp
out
jmp
mov
std
inc
ds
push
add
arpl
sbb
subb
mov
mov
adc
es
ret
sti
xor
inc
aam
cs
adcl
frstor
and
cmc
imul
test
add
movl
movsb
pslld
jbe
or
cltd
jae
push
lret
sbb
cmpb
cmpsb
ljmp
dec
movsb
sbb
mov
sahf
jns
add
std
sbb
xchg
mov
loopne
or
mov
add
xor
icebp
adc
test
add
cmp
ds
js
out
les
loop
cs
loopne
pop
add
dec
fs
in
ja
mov
fstcw
mov
jbe
pop
mov
inc
and
adc
push
loopne
push
aam
int3
subl
int
daa
push
cmp
ret
mov
pop
call
add
fnstsw
add
lods
xchg
mov
lcall
fxch
adc
cli
je
int
lds
add
xchg
xchg
sarl
mov
daa
push
push
fdiv
sahf
jecxz
in
mov
mov
pop
adc
mov
mov
iret
jae
js
sbb
fnsave
pop
or
add
xor
lahf
xor
cltd
outsl
mov
mov
inc
jno
aam
mov
add
int
inc
lods
fs
ja
mov
test
pop
sbb
sti
xchg
clc
leave
hlt
pop
mov
test
popf
xchg
sbb
sahf
leave
inc
mov
pop
cmp
dec
aas
or
push
lock
sarl
js
in
cld
out
movd
shl
ret
test
push
test
xor
jbe
ret
jge
xor
pop
jp
dec
stos
cmp
loopne
cli
fiadds
ret
add
das
adc
shr
add
and
xchg
push
and
push
subb
int
add
xor
xchg
sbb
ret
sub
in
in
ffreep
sub
and
adc
lds
js
lcall
divl
mov
int
sub
mulb
xor
mov
mov
mov
lea
push
xor
scas
sbb
inc
push
outsb
icebp
add
xor
adc
out
jge
pop
lds
add
and
repz
jb
hlt
stc
enter
nop
es
mov
dec
shl
es
ffree
andb
pop
loopne
and
lods
jae
stc
int
repnz
pop
pusha
fnstsw
mov
js
loopne
or
popa
dec
add
adc
repz
jne
jbe
hlt
leave
mov
sub
jb
push
ror
mov
dec
stos
fisttpl
cmp
dec
sbb
dec
repz
lret
test
jl
mov
loope
inc
cmpsl
xor
push
subl
psrld
and
push
in
xlat
stc
add
jp
dec
les
cld
inc
sarl
mov
jge
push
adc
inc
outsl
jmp
lcall
cmpsl
nop
int
add
leave
stos
cmpsl
or
popl
push
test
shll
jl
lods
push
cmp
xor
push
ja
in
test
push
or
or
insb
or
lret
mov
fs
xchg
cld
je
sub
stc
add
cmp
out
in
xor
push
sbb
lcall
mov
icebp
or
lcall
gs
jne
fstps
cmp
sub
loopne
inc
and
mov
pop
imul
add
xor
xchg
popf
les
sub
out
jne
inc
or
jmp
ja
mov
add
xor
add
movsl
sbb
mov
or
pop
out
cmpsl
xor
gs
scas
push
mov
aas
rorb
push
or
aas
insb
xor
adc
mov
or
out
or
jnp
add
xor
xor
sub
or
imul
add
dec
shlb
cmp
fs
hlt
mov
mov
add
sub
pop
decl
mov
lock
or
fisubrl
dec
jmp
shl
subl
aas
or
cmp
mov
js
in
adc
sub
push
adc
je
add
add
pusha
add
rol
test
mov
jb
mov
and
into
xchg
mov
or
and
push
dec
push
pop
and
rol
and
jmp
mov
adc
sti
mov
mov
sbb
fldenv
sbb
mov
mov
jbe
pop
loop
mov
push
test
or
sbb
in
or
dec
cmc
dec
out
cmpsb
lods
stos
pop
gs
push
out
data16
aad
mov
xor
mov
add
out
leave
jge
ja
rolb
adc
mov
loop
icebp
int
dec
lock
mov
push
sti
aaa
mov
xor
mov
xlat
insl
ljmp
lcall
mov
xchg
in
jb
push
rorl
into
roll
and
lds
mov
or
or
leave
mov
mov
lret
fnsave
stc
mov
pop
pop
mov
mov
jmp
sbb
outsb
cmc
dec
test
push
lods
jl
mov
repz
cli
or
stc
pusha
sbb
loop
jmp
dec
sub
adc
lods
jno
or
stos
add
insl
inc
lret
je
insb
lods
stos
popf
aas
fidivrs
dec
rcrb
push
shl
add
daa
mov
fsubrs
xchg
and
jae
rcrl
fs
shlb
cli
add
arpl
add
jb
out
xchg
xorb
jmp
cs
outsl
sub
and
hlt
loopne
sti
out
inc
andb
lods
add
nop
xor
add
cmp
rcrl
push
adc
mov
and
mov
and
leave
dec
insb
pop
mov
lock
les
xor
pop
add
stc
sbb
and
sbb
cld
adc
and
je
push
jge
les
xor
mov
mov
mov
jmp
loope
dec
out
push
lret
and
out
icebp
mov
fcomi
push
or
sub
icebp
pop
fcmovb
mov
cmp
loop
lods
dec
lret
add
clc
add
ljmp
insl
jmp
push
lret
xlat
or
dec
add
or
in
or
dec
or
sub
or
inc
sub
lret
sbb
movsl
pop
shlb
or
outsb
mov
lret
inc
test
xchg
leave
pop
cmp
sub
lahf
push
aaa
sbbl
cmpsb
cmp
mov
inc
scas
in
scas
jne
jo
cmp
lret
sub
mov
or
mov
add
arpl
loope
pop
addr16
cmp
jmp
or
mov
fldenv
mov
enter
cmc
adc
lds
aam
or
xchg
adc
mov
shrb
jmp
jns
sahf
test
shrb
add
test
in
add
inc
clc
dec
inc
mov
js
xor
imul
andl
les
inc
call
fists
cmpsl
and
or
into
outsb
imul
pop
lods
xchg
mov
jae
push
xor
or
lds
lret
dec
mov
and
add
dec
imull
jp
cmp
pop
outsl
xor
pop
mov
mov
incb
lret
inc
imul
xlat
or
movsb
and
inc
dec
sbb
pop
and
mov
sbb
mov
or
fdivrl
inc
jmp
sub
cmp
xchg
cmp
xor
cmp
rcr
int
jno
adc
pop
in
fs
dec
stos
inc
mov
inc
outsb
push
add
add
imul
dec
push
iret
in
adcb
xor
add
lret
repz
jne
push
sbb
sub
out
hlt
fwait
push
xor
pop
int
enter
mov
iret
imul
mov
or
add
aad
outsl
xchg
insl
jmp
xor
sub
jns
enter
mov
mov
sarl
nopl
popa
ljmp
test
cmp
fs
mov
pop
lea
or
popf
inc
js
stos
ffree
cmp
mov
lcall
push
push
cmp
scas
or
push
sbb
stos
fstpt
int
cltd
xor
mov
jnp
add
mov
arpl
clc
call
rol
mov
adc
rorl
mov
push
mov
sbb
popf
test
sbb
push
sbb
inc
dec
rclb
pop
xorl
lret
jge
out
daa
rol
mov
icebp
add
push
pop
aaa
or
imul
sbb
mov
loopne
dec
xor
mulb
shrl
xchg
jp
xor
push
test
pop
lret
movsl
inc
xor
pop
and
fldenv
dec
xor
insl
or
loope
ret
mov
push
jecxz
pusha
icebp
mov
and
shrl
test
into
in
dec
pop
or
cmp
xchg
ret
jge
push
jmp
dec
mov
sar
jg
test
fnstenv
push
bound
dec
scas
and
es
ror
mov
add
mov
and
push
scas
sub
xchg
or
in
scas
lret
in
rcll
test
aam
int
add
add
lahf
fsts
add
test
mov
jno
push
scas
ret
test
into
iret
mov
fisubrl
dec
dec
sbb
mov
mov
fadd
mov
lret
mov
jbe
out
roll
or
icebp
push
xorb
mov
or
jb
sbb
test
leave
repnz
test
ret
bound
push
jbe
sbb
xchg
sub
rclb
xchg
jmp
shlb
ss
cmc
add
pop
jne
stos
cmp
fs
mov
lds
test
stc
test
gs
dec
sub
fldt
test
enter
in
cli
cmpsb
call
jmp
inc
xor
jnp
gs
scas
and
jp
sahf
adc
adc
ds
jbe
insl
lcall
out
repz
into
dec
dec
mov
in
push
jmp
or
mov
call
or
jne
rcll
cmp
outsb
dec
loope
aaa
cmp
loope
push
or
pop
mov
addb
jmp
aas
mov
jmp
test
aas
add
in
imul
mov
jbe
push
into
and
mov
mov
ror
lret
leave
cli
mov
les
ret
mov
ds
jns
add
and
pop
loope
ja
inc
not
dec
xor
jge
lods
rcrb
xlat
pop
shll
jmp
dec
loope
outsl
cwtl
mov
ss
or
aad
jmp
sbb
and
pop
jmp
repz
les
jae
dec
shl
sub
aaa
adc
pop
xchg
mov
inc
mov
das
push
jp
sub
das
push
jo
and
loop
test
dec
dec
stc
ror
psubsw
jmp
rorb
dec
ret
clc
fidivl
cmpl
inc
inc
repz
pop
mul
push
dec
add
sub
sti
push
pusha
xlat
in
rclb
leave
push
inc
hlt
jae
lea
sbb
mov
and
xor
pop
mov
mov
shlb
add
sub
mov
mov
pop
aad
scas
xchg
sbb
mov
adc
cld
jno
rol
mov
pop
lcall
push
add
and
test
jbe
pop
sarl
inc
mov
cmp
mov
inc
and
lret
inc
push
or
and
out
bound
sub
mov
and
jg
mov
xlat
inc
repz
dec
mov
loop
not
dec
adc
lods
rcr
ror
jne
cmp
nop
shlb
inc
jns
pop
loop
in
lret
test
dec
dec
cmp
inc
jo
mov
xcrypt-ctr
cmpsl
fwait
das
out
cmp
dec
dec
mov
ret
add
aad
jne
xchg
icebp
add
jne
loope
push
rcrl
in
sbb
mov
mov
shlb
mov
and
loopne
sub
stc
rcr
lret
repz
stos
xchg
popa
inc
ret
popa
pop
lea
cmp
ds
mov
pop
sbb
ds
mov
aas
add
push
jo
jmp
negb
ret
iret
xor
clc
cs
leave
aas
mov
lret
xchg
push
int
ror
insb
jb
mov
push
mov
stos
aad
lods
cmpsl
xor
stc
aas
push
out
lds
fnstenv
fisttpl
insb
or
dec
into
outsb
jo
mov
out
rorb
aaa
xor
aas
pop
sub
add
mov
rorb
les
dec
mov
jo
mov
cli
stc
repz
cli
inc
cli
aam
imul
and
pop
sub
bnd
testb
adc
fstps
insl
cmp
sar
aaa
push
inc
dec
jae
inc
push
das
xchg
pop
mov
add
addr16
mov
inc
mov
dec
stos
mov
adc
jne
jg
addr16
cmp
jbe
movsl
cwtl
in
mov
outsb
mov
test
ret
imul
leave
jns
loop
or
jp
loop
idiv
pop
dec
push
stos
in
call
or
into
cwtl
mov
xor
mov
inc
outsb
enter
cmc
cmp
in
mov
jbe
dec
gs
mov
lods
aas
lret
mov
mov
cmp
divb
adc
cmpsb
idiv
call
cli
pop
jbe
jnp
cmp
lret
mov
test
stc
or
pop
mov
xchg
cmp
jns
xchg
xchg
and
sahf
sbb
add
push
add
cmp
mov
push
mov
iret
loope
dec
lret
cltd
or
add
cli
jb
les
xor
mov
daa
sbbb
jl
dec
ret
pop
mov
mov
sub
xor
and
mov
mov
jno
push
pop
mov
out
inc
inc
xchg
sbb
in
aad
loope
xor
xor
dec
data16
xchg
lds
movnti
ficoms
lahf
shl
inc
stc
pop
sbb
sarl
stos
aas
out
jb
inc
in
in
mov
or
repz
adc
fnstenv
aaa
mov
divb
je
sbb
fidivrs
jecxz
jmp
fwait
lock
push
xlat
sbb
mov
stc
and
lea
ja
xor
dec
mov
jb
rolb
pusha
add
dec
add
inc
or
loopne
sti
add
jmp
jno
push
mov
jns
jle
mov
pop
pusha
adc
repnz
xchg
push
aad
lcall
cmp
jmp
stc
dec
mov
xchg
icebp
negl
cmc
arpl
rorl
or
mov
sahf
or
jl
cli
hlt
dec
lds
mov
xchg
cltd
mov
imul
mov
nop
fstpl
cmp
rcr
cmp
xor
rorb
push
in
push
add
and
sbb
dec
mov
aaa
jle
pusha
shl
or
adc
push
pop
add
cwtl
xchg
loopne
and
push
or
push
pusha
push
sub
jbe
sub
xor
imul
lret
mov
fnstenv
cmc
xchg
lock
push
sbbl
add
movsb
insl
lods
dec
and
mov
rolb
js
test
pop
out
mov
aam
mov
mov
dec
fprem1
pop
push
mov
push
dec
mov
enter
pop
pop
or
mov
lret
mov
adc
xor
cmpsl
and
cwtl
mov
gs
stos
add
add
jae
or
push
fwait
enter
inc
cmp
pop
mov
sub
into
in
cmpsl
dec
pop
push
inc
inc
lds
aam
gs
cltd
sbb
mov
mov
rcr
jbe
cltd
mov
test
dec
fstpl
xor
icebp
pop
leave
dec
xchg
shl
ljmp
and
ds
xchg
xchg
roll
inc
xor
out
ret
lea
jo
roll
in
or
jnp
cmp
adc
cs
inc
dec
ljmp
pop
rolb
or
or
mov
gs
shl
mov
daa
dec
sbb
popa
xor
push
add
jge
mov
inc
mov
test
sbb
lods
add
or
or
push
mov
lds
jl
mov
inc
test
mov
xchg
push
sbb
mov
mov
cmp
out
adc
jecxz
int
cmp
popf
cmpsl
mov
cmp
fcompl
add
aad
addb
daa
mov
ljmp
fwait
cs
mov
aam
pop
push
loopne
icebp
shll
xchg
lds
xor
cwtl
rol
out
mov
out
sbb
xchg
div
inc
dec
sti
sbb
push
jecxz
out
jle
popa
fldcw
je
add
pop
mov
xor
mov
xchg
jge
mov
cltd
pop
cmp
mov
lret
aas
jecxz
int
cmp
and
loopne
cmp
jno
mov
or
fisubrl
arpl
or
leave
or
imul
fildl
and
add
dec
sub
inc
cmc
jb
in
jecxz
add
xchg
ds
adc
and
test
cltd
je
fwait
ret
cld
xor
js
dec
sbb
xchg
add
test
dec
or
in
lahf
cmc
ret
shl
inc
les
or
add
fldl
xor
jmp
insb
cltd
xchg
in
pop
mov
xor
inc
xor
inc
push
dec
std
add
pushf
push
xchg
jno
std
or
ret
sbb
sbb
out
sub
push
adc
lock
pop
loope
sbb
ljmp
lret
cmpsb
bound
adc
or
cmpsl
xchg
push
mov
pop
mov
insb
mov
fcmovb
jb
leave
rclb
aad
cli
addb
cmp
aas
hlt
or
arpl
scas
xlat
xchg
push
or
stc
sbb
pop
lcall
mov
cmpsl
sarl
dec
insl
add
and
or
mov
push
sub
clc
sub
jmp
mov
mov
mov
add
jge
mov
call
sbb
leave
push
add
int
hlt
inc
rorl
or
jmp
push
jg
or
or
loop
jp
mov
sbb
dec
and
leave
add
pop
icebp
xchg
sub
sub
mov
jae
movsb
push
dec
je
mov
fidivrs
add
outsl
mov
in
add
dec
dec
aas
dec
mov
xchg
or
lods
and
fwait
cmpsl
iret
repz
cmpsl
push
xchg
jae
ficomps
jnp
dec
pop
sti
mov
or
xor
jl
lfs
xchg
mov
push
psrlw
jb
mov
cli
jle
and
test
mov
jns
xor
add
cmc
mov
or
inc
test
xchg
mov
mov
or
inc
xor
test
rcr
inc
outsl
mov
arpl
call
and
and
shrl
add
jb
mov
add
pop
push
push
push
pop
jbe
aad
cmp
xor
mov
stos
loop
cmpsl
jl
dec
rorb
mov
test
mov
inc
repz
fnstenv
test
fwait
or
and
stos
call
xchg
push
cmc
add
aam
mov
sbb
lahf
or
aas
ret
sbb
mov
and
imul
pop
or
jge
lods
loopne
test
adc
pop
or
sbb
das
es
jle
dec
push
or
ret
push
mov
sub
jecxz
arpl
pop
fs
or
pop
imul
out
sbb
or
add
test
imul
enter
dec
xor
fisttpll
jns
inc
add
sbb
enter
or
stos
adc
test
test
shll
add
fisubl
movsb
jecxz
xchg
sub
mov
ja
idivl
in
loope
mov
sub
test
mov
fsubrl
push
cmpsb
mov
lcall
push
or
cmpsb
xlat
dec
jecxz
clc
add
add
push
adc
xor
mov
jae
shlb
or
push
mov
mov
xchg
test
mov
xchg
cs
jns
les
mov
mov
dec
inc
stos
dec
into
lock
inc
rol
in
leave
xchg
in
stos
enter
inc
movsl
mov
loop
adc
mov
movsl
mov
sar
cmc
jmp
mov
mov
loopne
sub
pop
mov
leave
fisubl
test
or
testl
aad
add
mov
push
dec
sub
repz
mov
pop
push
sbbb
sbb
cmp
push
xchg
sbb
cmc
inc
add
int
ret
iret
leave
xorl
outsb
stos
push
mov
mov
mov
fs
mov
inc
jle
ret
pop
leave
jns
addr16
dec
sbb
add
std
daa
in
cmp
xorl
je
cmpsb
dec
sbb
fsqrt
or
and
jle
jns
or
out
daa
pop
xchg
and
inc
mov
cmpsl
push
and
cli
and
int
in
popf
mov
test
test
inc
fs
mov
arpl
insl
sarb
and
int3
das
jae
cli
mov
inc
xchg
xor
test
ds
xchg
cmc
enter
sbb
icebp
in
or
sbb
push
ljmp
hlt
mov
dec
leave
and
loope
or
sbb
movsb
or
mov
push
lahf
icebp
jmp
and
mov
rolb
lret
ficoml
cmp
and
jns
cmpsl
xor
mov
jmp
imul
dec
fptan
frstor
ja
je
push
fnsave
mov
xchg
mov
mov
mov
test
push
xchg
out
dec
loope
dec
int
cmpsb
in
out
lds
mov
push
mov
push
mov
pop
imul
inc
aad
sbb
aam
jp
push
fcomps
pop
dec
push
cmpb
push
arpl
ds
inc
jle
sbb
push
inc
andl
cmc
hlt
sbb
pop
test
sbb
adc
ror
mov
dec
adc
push
call
cs
fistps
adc
out
repnz
push
jge
push
lahf
icebp
or
fadds
arpl
mov
jge
sbb
mov
adc
cmpsl
add
sbb
je
loope
xor
hlt
int
lds
push
mov
fstps
mov
xor
xlat
xor
insl
xchg
in
jle
repnz
mov
jo
jo
inc
stos
or
outsl
aad
loope
dec
mov
inc
enter
dec
mov
mov
icebp
outsl
jecxz
jecxz
clc
out
shr
xchg
std
xchg
adc
mov
pushf
sti
jg
shl
push
cmc
dec
das
mov
xor
mov
mov
testl
cmova
push
xlat
pop
int
sarl
sub
adc
ret
jne
mov
insl
sub
xchg
dec
ss
dec
adcb
inc
add
roll
xchg
test
sub
xor
test
pop
mov
icebp
stos
mov
add
add
gs
loopne
add
pop
leave
inc
cmpsl
or
out
shr
icebp
fcoml
inc
loop
jecxz
add
xor
lods
aas
xor
add
shll
pop
lds
add
imul
fildl
xor
cli
mov
into
inc
inc
sbb
int
inc
shr
dec
scas
inc
mov
imul
test
and
dec
push
jecxz
sbb
loopne
mov
jecxz
dec
rolb
repnz
xlat
sbb
xlat
repz
icebp
jmp
loop
push
out
cld
leave
subb
aaa
jg
jns
loopne
loope
inc
mov
stc
enter
inc
test
dec
loop
icebp
ret
fwait
cltd
xor
addl
aad
sahf
ret
dec
add
and
inc
cmc
add
lds
gs
jmp
dec
rolb
jmp
pop
cmp
shrl
dec
nop
lcall
ret
xchg
xor
pop
mov
push
jl
mov
pop
inc
scas
or
in
test
add
repnz
mov
xchg
xchg
fscale
stc
gs
push
mov
pop
jnp
adc
test
fnstenv
cltd
xchg
test
fs
xchg
add
mov
xor
jp
sub
add
jno
xor
test
or
xchg
cli
pop
inc
xorl
shl
xor
lds
pop
and
aam
sti
push
adc
ret
popa
shlb
rolb
push
xchg
mov
das
out
sub
lock
pop
push
out
fldl
outsb
dec
fwait
xor
or
negl
xor
fdivs
loop
out
in
mov
movb
or
sub
dec
jae
loope
and
inc
arpl
jecxz
lret
cld
ret
popa
and
jmp
aad
sub
cld
sti
mov
pop
sbb
and
in
mov
add
in
stos
imul
insb
in
xor
fisttpll
int
shrl
cmp
dec
sbb
or
roll
aas
add
add
jo
add
pop
movb
and
or
xor
int
sbb
push
leave
out
notb
pop
push
jecxz
pop
es
mov
push
sti
mov
push
ror
lea
lods
sub
cmp
jle
jne
cmp
fsubs
add
and
cmpsb
enter
es
sub
sbb
in
rol
pop
cmc
int
scas
or
mov
movsb
rcrb
pusha
jp
pop
leave
aam
stos
dec
lcall
lock
jge,pt
adcl
inc
mov
jne
mov
adc
jb
inc
lret
pmaddwd
loope
cmc
xor
ret
mov
mov
arpl
cmc
cmc
pusha
insl
dec
out
mov
sbb
jecxz
mov
cmp
mov
add
add
lret
push
stos
fmuls
std
dec
push
jmp
call
mov
and
mov
mov
mov
sbb
xchg
fucomp
fdivrs
jbe
xlat
dec
es
adc
xchg
aam
push
lods
push
or
nop
or
mov
imul
jo
mov
jae
adc
ss
sarl
test
xor
int
stos
out
arpl
add
loopne
sahf
jle
add
add
dec
and
lret
xor
out
pop
add
out
pop
lods
popa
cmpl
inc
ret
xlat
in
pushf
push
add
push
push
test
lcall
enter
es
adc
xor
aaa
lea
push
jo
cmp
jae
ss
cmpsb
hlt
rorb
pop
pop
loop
mov
pop
out
xlat
cmp
mov
mov
mov
loope
loope
dec
jb
icebp
leave
das
aad
push
cmc
sub
cmp
insl
mov
int
or
lods
or
je
and
sub
jecxz
int
ror
push
cmc
sub
dec
mov
xchg
int
mov
push
mov
sbb
sbb
pmulhw
iret
mov
and
shr
mov
enter
mov
mov
int
push
add
add
push
mov
paddd
movd
fildl
ret
in
fcmovb
xor
outsb
fidivs
decl
ja
dec
lds
lock
add
rorb
cmp
lret
and
dec
sbb
dec
imul
jno
push
xor
cmp
stc
jnp
xor
fadd
repz
cmp
leave
dec
int3
sbb
into
adcl
test
sbb
jl
scas
add
mov
cmpb
je
cld
or
mov
jmp
push
rcrl
je
test
fsubs
push
sbb
pop
sbb
loope
les
ret
xor
insl
into
repz
jmp
pop
add
popa
cmp
aam
lcall
mov
jp
or
enter
sbb
repnz
mov
inc
adc
and
clc
sbb
mov
shl
mov
in
mov
add
shll
daa
or
jmp
shll
dec
jle
inc
mov
clc
and
rcll
mov
stc
dec
mov
lds
jecxz
leave
mov
cmc
fdivs
iret
lret
sbb
mov
ds
lcall
fnstenv
leave
or
fstl
cmp
xor
sbb
enter
xor
push
or
xor
sub
rol
xchg
stc
and
fdiv
xchg
jns
out
push
mov
pop
shlb
lds
leave
dec
dec
cmp
sbb
push
nop
les
lret
push
rcrl
loope
loop
inc
lds
test
and
sbb
test
popf
fcmovbe
xlat
mov
cld
xor
lock
movsl
stos
cmpl
dec
lret
test
lcall
xchg
arpl
push
aaa
sub
loop
ret
fistpll
call
pop
stc
jmp
dec
pand
mov
push
jne
mov
mov
adc
add
jge
inc
jmp
sub
pop
fildl
xchg
mov
cmp
test
int
and
dec
or
mov
leave
pop
lret
cli
or
xchg
and
imulb
popa
rcl
test
or
dec
cmp
mov
dec
movl
lea
loopne
fldenv
pop
into
or
outsb
and
ficomps
js
sbb
mov
add
in
lret
mov
add
nop
cmp
or
popa
mov
aaa
loope
adc
xchg
pop
dec
inc
fcom
add
add
cld
test
add
ret
scas
xor
xchg
pop
ljmp
mov
inc
xlat
int
jmp
stos
sbb
repnz
sbb
insb
xor
cmp
cmp
cltd
sarl
mov
or
enter
and
lcall
sti
sarb
cmc
aas
ljmp
inc
jno
xor
lods
leave
add
or
pop
jb
and
adc
lock
enter
sbb
adc
xor
andl
stos
push
and
adc
push
pop
push
sub
lock
fcmovnbe
sbb
stos
fucompp
or
pusha
in
dec
or
sub
pop
adc
int3
pop
xorb
out
aad
dec
cmp
pop
jne,pt
lret
and
stc
adc
xlat
mov
nop
cltd
and
lods
fnstenv
ret
loope
and
mov
jo
movsb
adc
stos
out
cmc
adc
int
in
popf
push
or
lds
mov
and
push
cmpsl
xchg
push
test
add
stos
jmp
cli
pop
stos
mov
mov
mull
push
mov
jns
and
jp
lock
lret
shll
cmp
mov
test
aaa
xchg
push
in
xor
dec
aad
cmovs
sub
pop
ret
or
imul
and
xor
stc
mov
cld
in
ja
scas
lahf
and
jle
aas
dec
push
rcrb
fnstenv
inc
leave
mov
std
lahf
mov
push
xor
adc
outsl
add
ds
mov
aam
adc
mov
aaa
mov
dec
push
jno
mov
sbb
fisttpll
cli
stos
mov
out
loopne
les
insb
mov
fs
mov
shrl
imul
dec
clc
test
leave
shrb
je
test
test
loope
orl
mov
data16
jnp
cli
imul
sarl
and
jbe
mov
in
pop
push
xor
cli
mov
cmp
or
jo
out
jne
mov
ds
aas
cmp
fsts
push
and
dec
mov
fnstsw
cmp
jns
fisubrl
mov
pop
mov
fists
rcr
subl
cmp
mov
push
outsl
xchg
xchg
rcr
lds
imul
mov
movsb
or
out
push
mov
push
mov
pop
mov
and
test
mov
mov
inc
add
mov
clc
and
test
imul
jle
mov
mov
mov
jno
aas
pop
in
ret
leave
jg
jno
std
aad
inc
loopne
sub
ljmp
rol
xlat
int
movsl
cmp
stos
out
jb
icebp
or
jge
andl
cltd
scas
movl
adc
loopne
fmull
add
stos
push
ss
daa
roll
add
fcmove
cwtl
test
bound
inc
push
out
mov
cmpsl
pop
int
insb
dec
xchg
cmp
repz
cmp
push
movsl
add
adc
std
push
mov
jnp
mov
das
inc
idivl
aas
or
adc
test
out
aas
test
js
adc
aam
mov
dec
add
mov
jo
test
or
test
lret
xchg
or
test
jp
adc
lcall
mov
push
push
int3
xlat
sbb
lods
cmpsl
roll
jg
inc
lret
roll
jecxz
shll
add
inc
das
xchg
lock
jo
fimuls
adc
mov
rol
lds
dec
stos
cmc
loop
push
roll
adc
stos
fadds
popa
leave
call
xor
mov
mov
lret
pop
movsl
adc
movsb
sub
mov
dec
inc
sub
das
hlt
mov
xchg
xlat
dec
imul
stc
add
in
leave
mov
icebp
shl
jmp
enter
or
cltd
mov
cmp
mov
movzbl
xchg
or
es
cltd
inc
push
mov
test
pop
scas
daa
push
sbb
or
push
jo
jmp
test
mov
popa
xchg
adc
sub
add
or
sub
sbb
xchg
mov
add
int
pop
jns
in
jb
or
leave
xor
xor
adc
into
aaa
outsl
fs
cmp
int
js
cwtl
inc
inc
stc
loope
int3
lret
into
xor
inc
cli
sti
icebp
mov
dec
cld
clc
mov
dec
cmp
or
bswap
xchg
or
lret
loop
ret
hlt
cwtl
icebp
bnd
dec
shll
ffreep
push
jl
dec
notb
pushf
outsb
jo
sar
pop
sarl
fnstsw
or
repnz
adc
push
leave
mov
std
popf
xchg
les
cld
pop
cmp
scas
cmp
dec
mov
in
shlb
mov
cli
test
scas
jbe
mov
call
xchg
fisubs
mov
pop
jb
and
jmp
ds
mov
ds
pop
dec
aaa
test
mov
or
mov
pop
sub
lahf
pop
repz
cmp
cmpsb
lcall
adc
sub
pushf
idiv
or
aas
pmaxub
cmp
popf
xor
inc
mov
adc
push
rcll
jb
pop
jle
xchg
pop
loope
sbb
jge
pusha
js
sar
cmp
imul
inc
dec
out
dec
dec
fildl
or
into
testb
jno
cld
xor
sbb
stos
push
into
dec
or
shl
dec
rcr
aam
lcall
fldl2t
mov
cltd
and
jb
xchg
rcll
mov
push
mov
stos
add
jg
lds
mov
stos
into
add
leave
dec
lret
ret
icebp
inc
sub
int
dec
cvtpi2ps
subl
dec
mov
andb
mov
into
or
jae
test
or
enter
jo
dec
or
add
xlat
mov
xor
js
cs
shl
pop
ja
add
mov
mov
jecxz
xchg
dec
jmp
lea
cmp
inc
rcrb
outsl
inc
add
leave
leave
popa
push
jle
out
shrl
leave
iret
add
mull
jl
mov
mov
or
push
imul
mov
xchg
mov
and
and
mov
xor
or
mov
ret
cmp
push
out
ret
dec
jbe
sbb
adc
mov
cmc
and
sub
repnz
jecxz
idivl
cmp
or
and
xor
dec
inc
hlt
xor
bound
or
sub
test
mulb
mov
jno
sbb
in
pop
fadd
repz
adc
sbb
or
mov
lds
mov
fcomi
hlt
int
mov
stos
iret
subl
outsb
xor
and
mov
mov
or
loop
leave
lods
adc
sti
daa
fstps
out
push
ret
imul
or
xor
fnsave
mov
cld
ficoml
aam
push
ja
inc
inc
pop
rol
fnstenv
push
dec
or
mov
ror
or
lcall
aad
lahf
into
mov
mov
aas
into
ss
jns
jae
mov
mov
add
shrb
out
mov
sarl
loopne
push
jmp
mov
dec
ret
cmp
jmp
inc
add
xchg
ja
loopne
add
ljmp
movsl
sub
inc
push
aas
daa
jne
test
imul
xor
add
xchg
xchg
sarb
leave
xor
mov
aad
loop
mov
cli
negl
dec
test
movsl
lret
dec
nopl
mov
in
add
loope
cmp
sbb
mov
insb
xchg
jg
enter
stos
loop
mov
popa
pop
add
cwtl
jo
add
subl
lock
sub
cmp
push
imul
cmpsb
test
jg
popf
out
mov
test
jg
icebp
iret
into
dec
aaa
add
test
inc
adc
cwtl
sbb
xor
rolb
repnz
repnz
jmp
adc
and
ficomps
addr16
repz
mov
fimuls
or
test
push
inc
dec
lcall
jb
jbe
push
mov
call
jo
or
add
cmpsl
mov
xor
mov
mov
leave
in
mov
jbe
in
or
stc
inc
mov
aas
mov
cmc
mov
or
pop
out
jno
adc
cli
addl
shll
sbb
sbb
jno
dec
mov
out
sbb
adc
out
and
sbb
jg
cmpsl
sti
sbb
or
enter
inc
xor
out
add
sbb
std
jb
loopne
add
dec
rolb
inc
sahf
adc
sbb
mov
lea
adc
push
sbb
adc
ret
pusha
xchg
mov
stc
or
dec
gs
inc
push
popf
dec
sub
test
or
insl
imul
cmp
gs
andl
test
jecxz
cmpsl
lds
sahf
sub
add
cld
jbe
add
push
cmpl
stos
ror
xchg
das
aam
fsubp
lds
jmp
push
sti
popa
cs
das
sbb
mov
fwait
movsb
xchg
int3
jle
int3
and
pop
jno
add
add
dec
out
orl
dec
jmp
add
dec
jmp
xchg
xor
jnp
add
add
mov
test
ret
insb
cltd
jo
add
gs
add
in
pop
sarl
fld
and
ljmp
jmp
test
inc
ror
cli
andb
in
push
add
add
test
repz
rorl
cltd
and
mov
add
loop
daa
shr
shl
enter
dec
and
enter
inc
and
mov
sbb
mov
mov
xchg
inc
add
fcmovb
repnz
nop
pop
add
sub
shll
test
mov
bsf
pop
into
jmp
cmp
hlt
jmp
mov
xor
test
dec
rol
dec
xor
outsb
sbbl
out
sub
negb
or
stc
mov
scas
jl
sub
aaa
int3
add
cmp
fstcw
mov
sbb
or
fsubl
subb
xchg
adc
loop
ljmp
loopne
jmp
leave
adc
push
mov
ds
sub
in
mov
shlb
shrb
pop
repz
subb
rcll
or
iret
jb
int
test
outsl
in
gs
adc
ljmp
push
dec
aad
das
add
lods
lods
lea
les
push
sahf
fstps
push
js
dec
addr16
ja
psllq
in
cmp
sbb
in
in
mov
jno
fldenv
stos
aas
popa
xchg
lods
push
inc
sub
push
or
inc
cld
in
sbb
mov
push
iret
inc
inc
adc
je
in
add
rcll
aaa
and
dec
xchg
lahf
stos
fisubrl
pop
add
jg
lahf
aas
sbb
or
loope
and
cli
or
fstl
cmc
leave
jmp
jo
jecxz
rcrl
inc
xchg
xchg
xor
pop
xchg
adc
in
push
add
xor
xlat
and
leave
aad
fists
iret
push
mov
insb
cmp
cmp
in
jmp
leave
movl
movsb
add
daa
sbb
jbe
pusha
adc
cmpsl
push
cmpsl
dec
ficompl
and
int
push
iret
fstl
mov
mov
adc
inc
pop
add
mov
insb
jae
hlt
xor
lods
test
push
jmp
ds
popa
daa
mov
hlt
add
imul
jmp
xchg
push
std
jl
pop
repz
leave
mov
rcl
inc
cli
push
mov
jne
and
imul
mov
test
fsts
pop
xchg
push
shrl
mov
iret
jns
sbb
mov
pushf
rcrl
mov
dec
sahf
aam
std
xor
enter
push
out
and
push
dec
scas
jge
mov
int
xor
call
test
and
pop
dec
jns
mov
cmc
add
or
pop
adc
add
or
ljmp
pop
addr16
adc
imul
and
repz
dec
mov
mov
jnp
cmp
mov
dec
mov
cli
jo
ret
movsb
inc
in
jo
add
mov
cmp
andl
push
inc
mov
rclb
int3
dec
xor
daa
push
ret
flds
scas
hlt
mov
mov
sti
jmp
les
enter
cmpsl
enter
sbb
jge
mov
xchg
adc
mov
aad
pop
xor
leave
add
test
clc
xchg
icebp
add
mov
sub
or
pop
mov
leave
mov
dec
mov
fmulp
mov
pop
jb
scas
cmp
cmp
jmp
mov
imul
push
outsl
push
lds
dec
mov
mov
jo
mov
pushl
ret
leave
mov
cltd
xchg
out
mov
inc
or
pop
out
sbb
jmp
dec
dec
rcr
push
mov
icebp
dec
lcall
arpl
mov
popa
mov
daa
jno
divl
pop
shr
js
popa
scas
or
push
mov
ja
outsl
repz
repz
lock
cmp
adc
into
xor
imul
lds
fidivrl
cmpsb
and
test
jmp
int
jns
orb
and
mov
lock
leave
mov
outsb
pop
and
aas
pop
pop
std
test
filds
loope
jno
dec
push
mov
daa
loope
das
sbbl
ljmp
fiaddl
lock
or
dec
pop
sar
hlt
arpl
lret
and
ds
cld
and
xlat
mov
jnp
stos
daa
inc
sub
dec
shll
test
ret
mov
in
mov
dec
cltd
or
rorl
pop
hlt
lret
push
or
add
pop
test
pop
or
fisttpl
and
add
push
outsl
outsb
test
icebp
or
mov
jae
mov
cmp
jl
repz
icebp
xor
and
cmp
xchg
and
lret
push
xor
mov
lds
sbb
dec
loopne
xchg
and
stos
in
jb
orl
mov
mov
ret
and
mov
dec
hlt
or
mov
in
ljmp
clc
add
and
or
stc
xor
mov
mov
mov
sub
pop
sbb
lret
popa
cmc
ljmp
aam
in
in
jmp
and
add
rep
int3
mov
adc
xchg
daa
in
rclb
xor
ja
dec
add
out
int
lea
dec
sbb
or
mov
and
ljmp
stos
clc
fisttpll
mov
add
out
out
sbb
jl
cltd
std
mov
mov
data16
or
inc
jbe
mov
int
dec
stos
and
das
lods
hlt
movsb
xor
add
dec
daa
mov
repnz
mov
mov
mov
imul
jo
daa
xor
inc
clc
ror
cmp
cmc
ss
testb
add
mov
int3
mov
jae
addb
rclb
insl
aam
in
insl
jge
in
icebp
clc
dec
mov
cmc
mov
loope
in
jmp
dec
fnstcw
xor
mov
dec
inc
lret
mov
xor
scas
popa
sbb
ret
cli
mov
mov
jns
dec
pop
je
sbb
sub
insb
test
in
push
ret
iret
pop
loope
adc
sbb
and
dec
and
sbb
cmc
sub
jne
or
inc
pop
dec
aas
cmp
and
push
inc
fbstp
mov
xor
aam
mov
fildll
xor
loope
mov
mov
rcrb
out
fisubs
rol
cs
stos
xchg
aaa
sub
dec
out
or
rorb
rol
hlt
add
lds
mov
stc
and
cmp
adc
jnp
or
xor
incl
leave
pop
loopne
in
shl
sbb
or
inc
jge
icebp
jl
lea
aad
jp
mov
xor
jo
xchg
add
arpl
sbb
xor
fcmove
test
stos
jne
rcl
dec
mov
andb
loope
jns
pushf
dec
int
jmp
lock
hlt
in
aad
adc
int
dec
or
daa
ljmp
pop
je
inc
add
or
push
test
mov
pop
into
xor
xor
subl
nop
jnp
ret
or
push
in
sbb
rcrl
fnstsw
xadd
mov
fldenv
inc
cwtl
inc
push
adc
scas
fildl
push
into
dec
movsb
jl
test
or
fisubrl
push
imul
sbb
xchg
pop
add
jnp
pop
clc
cmp
out
stc
sahf
outsl
cmp
mov
mov
pop
jl
das
in
arpl
xor
mov
cltd
xchg
xor
fidivl
test
jecxz
popf
lahf
js
clc
xlat
xor
ret
subl
nop
js
add
jo
jo
shll
test
ret
and
shll
add
ret
test
add
push
pop
pop
xchg
lret
mov
inc
adc
lds
cmp
rcl
xchg
inc
inc
jno
mov
mov
mov
and
xor
fisubs
push
mov
cmp
sub
xchg
mov
cmp
cmp
jecxz
or
enter
insl
aad
sub
dec
xlat
jg
insl
inc
jbe
and
imul
enter
outsl
dec
dec
popa
repnz
gs
cmp
int3
dec
mov
icebp
sbb
mov
insb
pop
dec
mov
je
push
lods
loope
and
mov
aam
data16
std
popa
lods
in
pop
adc
or
inc
jmp
xchg
test
sub
int
jns
ror
mov
je
cmpsb
scas
shll
ss
and
arpl
jns
pop
sbb
sbb
lret
call
dec
push
out
mov
into
dec
ljmp
fs
pop
mov
sbb
sub
dec
push
fldl
mov
jmp
xor
lods
test
in
hlt
jno
leave
mov
mov
or
dec
lods
sbb
dec
ret
int
push
iret
ljmp
in
int
and
aam
cli
xor
push
loopne
cmpsb
mov
cmp
cli
inc
push
inc
pusha
inc
enter
dec
and
sti
imul
call
or
jp
in
cmp
sbb
mov
or
push
xor
jne
inc
cmp
aad
loopne
cli
stos
pop
ret
and
mov
mov
or
ret
xor
lret
mov
mov
mov
pushf
cs
add
cli
in
scas
ret
ja
xor
mov
sbb
xchg
into
mov
mov
xor
lods
sbb
push
daa
and
pop
fisubl
leave
call
or
insl
in
leave
shll
bound
cli
ja
scas
shrb
and
jbe
mov
sahf
mov
ret
mov
shll
and
inc
inc
add
test
push
stos
aam
fsts
inc
xacquire
fimull
fnsave
hlt
popf
fnstcw
cwtl
in
lahf
aas
inc
pop
push
and
sub
sbb
iret
out
fwait
jae
scas
mov
xor
nop
mov
adc
mov
loopne
aam
mov
add
mov
test
add
mov
cli
orb
js
push
or
je
mov
xchg
movsb
fninit
repnz
lret
cmp
dec
sahf
xor
ja
mov
push
int
cli
icebp
jae
pop
scas
pop
xchg
stc
pop
add
fimull
aaa
xor
sub
mov
mov
or
addb
nop
mov
adc
jmp
and
pushf
mov
xchg
or
mov
pop
fistpl
cmc
sbb
pop
shll
pop
sub
dec
mov
and
loope
fcoms
repz
mov
shlb
pop
test
dec
sbb
es
enter
sub
sahf
mov
or
mov
mov
mov
sbb
mov
mov
test
jecxz
xchg
jnp
mov
push
xor
push
jle
mov
add
add
xor
ret
test
mov
sbb
aam
in
xchg
daa
fnstcw
test
pop
xor
dec
stc
or
int3
xor
leave
dec
in
lock
iret
add
iret
lret
mov
inc
gs
lret
xchg
lret
or
jae
jbe
mov
mov
or
sarb
cmpsb
pop
mov
mov
daa
dec
aam
shll
dec
jne
test
imul
pop
or
mov
mov
das
popa
inc
dec
inc
popa
shr
in
inc
sbb
icebp
jp
rorb
push
fwait
xchg
ja
inc
mov
stos
inc
add
fwait
xor
iret
push
daa
mov
sbb
inc
push
sub
cli
addb
dec
mov
sub
sahf
incl
add
aaa
mov
mull
outsl
sub
scas
or
mov
and
test
ret
and
das
int
or
into
fxch
jecxz
add
push
or
test
inc
xchg
rolb
fstpl
cmp
push
pop
stc
mov
das
sarb
mov
mov
idivb
repnz
inc
mov
aam
ret
mov
stos
test
cmc
imull
sub
pusha
jmp
pop
push
lds
aas
leave
cltd
lods
fdivs
jbe
nop
imul
push
inc
les
add
sahf
das
push
leave
shrl
sarb
flds
sub
bswap
imul
jne
in
pop
leave
stc
push
pop
addr16
pop
sti
mov
stc
xor
call
cmc
push
rol
clc
pop
sub
lea
fisttpll
inc
sahf
add
mov
out
push
mov
add
and
cli
idivl
andb
jnp
add
xor
xor
in
icebp
push
insl
mov
xchg
imul
cwtl
pop
jmp
add
adc
out
push
xchg
imul
cmp
push
and
sub
mov
and
jmp
sar
mov
sbb
add
push
int
inc
sub
pop
aaa
aas
lock
icebp
xchg
jbe
jge
or
imul
inc
dec
xor
movsl
lcall
jbe
scas
dec
jge
push
mov
int
fmul
add
inc
bound
mov
cmp
adc
in
cmpsl
jmp
je
ret
imulb
xor
ret
insb
or
movsl
divl
adc
inc
cmp
add
push
add
fs
ds
push
push
mov
jecxz
loope
cli
mov
out
jns,pt
leave
test
mov
add
or
in
in
ret
loope
cmpsb
out
outsl
in
push
insb
gs
add
rep
jno
fadds
in
mov
lock
xor
arpl
outsl
xor
fldl
jnp
je
in
xchg
xor
mov
out
mov
mov
pop
push
push
icebp
roll
cmpsl
dec
jecxz
mov
in
or
cmc
loopne
push
iret
sarl
sub
mov
inc
push
popf
xchg
jns
pop
add
push
lods
pusha
cmc
pop
jle
js
mov
lcall
push
fs
or
jge
add
scas
aad
xchg
dec
and
outsl
cmpsl
sbb
jmp
jo
out
xchg
push
stos
jae
mov
enter
shl
add
mov
int
std
enter
ljmp
cwtl
icebp
push
or
inc
adc
cltd
mov
lods
jl
mov
out
adc
or
xor
vsubss
insb
adc
cwtl
pushf
repnz
insl
cmp
scas
leave
cmp
loope
lock
fldl
sub
sub
cmp
xor
xlat
dec
ret
cmp
mov
sub
jnp
mov
push
add
jmp
cmpps
xor
pop
ret
aam
and
aam
and
sti
xchg
daa
adc
sbb
aas
and
jo
and
lds
cmpsl
fdivs
sbb
inc
push
add
movl
adc
cmp
clc
push
icebp
jecxz
les
sbb
adc
pop
jl
sub
negb
and
dec
jo
mov
mov
push
add
call
xchg
xor
jp
jecxz
out
test
sbb
popa
imul
push
inc
imul
or
pop
in
inc
ljmp
mov
sub
nop
xchg
rcr
mov
decb
hlt
rcll
cmpb
jnp
or
dec
add
xchg
dec
loop
fs
and
mov
lea
rorl
sahf
xchg
shl
jo
test
mov
jb
xchg
inc
rcl
fsts
dec
jb
lea
loop
aam
mov
mov
dec
push
mov
jmp
lret
lock
mov
shlb
push
adc
jo
int
adc
and
repz
mov
adc
sbb
popa
push
mov
jge
or
pop
sbb
push
jo
xchg
jbe
cltd
int
shrl
outsl
lock
cmp
in
xor
push
cmp
xor
mov
pop
mov
xor
cld
idiv
mov
push
iret
out
xor
push
fmuls
rep
shll
pop
in
push
mov
sbb
lcall
mov
cmp
add
push
int
fnsave
mov
sbb
data16
or
dec
ja
mov
push
jmp
add
inc
dec
jmp
add
xor
push
js
mov
mov
flds
lds
mov
repnz
enter
push
xor
int
out
cli
adc
mov
or
loopne
add
das
fsts
xor
ret
xor
lret
into
ss
push
test
lret
insl
pop
repz
loopne
jb
sub
ror
pop
shlb
nop
stos
and
add
ret
leave
adc
mov
divb
inc
jmp
mov
fabs
rcll
call
jge
pop
mov
and
stos
mov
addl
xor
inc
dec
pop
inc
stos
out
mov
movsl
add
jae
jge
fsubrs
test
adc
dec
enter
push
rcll
cmc
and
inc
ret
ret
or
lea
int
outsb
mov
dec
shr
popa
imulb
and
sub
adc
and
out
xor
dec
das
mov
nop
push
jae
jmp
mov
out
mov
fnstenv
or
adc
dec
add
not
adc
jg
hlt
mov
out
pop
sub
adc
inc
fsqrt
test
movb
fbstp
fucomp
push
rcrb
cwtl
inc
dec
jo
inc
push
xlat
mov
out
cwtl
pop
mov
int
mov
aas
sbb
jo
push
sub
sarl
movsb
sti
xchg
enter
mov
mov
mov
std
cltd
mov
cld
insl
pop
rolb
rcll
inc
repz
jl
popa
mov
out
jae
mull
ljmp
and
push
xor
dec
or
fmul
xor
dec
add
in
stos
andl
inc
ss
clc
loopne
lret
test
ret
mov
test
mov
sbb
addr16
dec
pop
mov
insl
int
mov
dec
cmp
cli
ret
mov
push
mov
loope
shrl
inc
pop
insb
jl
push
sbb
push
shl
ror
addr16
mov
ss
out
mov
cmp
fs
sbb
cmpl
je
dec
mov
icebp
sbb
call
add
rcrl
xor
ja
fistpll
sbb
rcr
int
shrl
fldcw
aam
dec
mov
push
inc
mov
cmp
jno
dec
adc
movsl
ret
jp
jns
repz
movsbl
lock
rol
jne
cmp
add
mov
lds
pushf
shrl
cld
ret
movsl
std
xor
xor
inc
xchg
rcll
lea
aad
add
pop
mov
mov
sbb
aam
notl
fsubr
lods
shrb
mov
in
fisttpll
add
and
dec
sahf
jne
inc
aas
test
sbb
cmp
in
rcrl
pop
or
scas
push
movsb
inc
xchg
or
and
std
dec
push
mov
fcmovu
repz
popf
mov
rcl
adc
test
lock
cmc
and
rol
push
add
insl
sbbl
loope
jmp
fstpt
stc
xchg
idiv
jne
fstpt
or
mov
push
add
mov
sarl
or
inc
inc
mov
or
aas
shrl
ret
add
or
lahf
add
sbb
leave
scas
adc
push
sub
testb
jmp
jle
mov
je
sbb
add
pop
rcrb
jl
adc
in
add
jae
hlt
mov
loope
adc
pop
rcl
mov
fld
add
or
inc
sub
test
jmp
pop
je
int
rorl
or
xor
pushf
xchg
mov
jno
push
mov
mov
inc
nop
mov
pop
lods
rcrb
test
cmp
cs
jg
xlat
and
stc
xor
pop
inc
lahf
inc
lds
repnz
xchg
sti
aas
add
sub
mov
push
xor
mov
test
mov
dec
and
push
pop
popf
jno
aas
jmp
and
push
jg
mov
pop
scas
jge
mov
sbb
xchg
movsb
jecxz
mov
cmp
repnz
fiaddl
push
into
xlat
shl
rcl
jnp
ror
cmpsl
mov
shl
loope
in
xor
add
popa
decb
test
adc
or
pop
dec
cmp
mov
adc
dec
xor
icebp
sarl
loopne
ds
jnp
adc
cld
mov
lods
shll
scas
popf
push
add
xchg
push
xchg
test
popa
nop
sub
mov
jecxz
ror
out
push
das
call
sbb
jmp
loopne
and
sbb
aaa
mov
pop
hlt
sarl
adc
mov
mov
mov
add
lds
push
jns
int
adc
dec
lea
cmp
fs
out
dec
cmp
int
lods
je
adc
cmc
in
cmpsl
cltd
mov
add
dec
out
in
sbb
popf
lahf
pop
mov
imul
add
mov
cmpsb
fsts
mov
not
shll
rcll
nop
adc
ljmp
cld
stos
sarb
jns
cmp
stos
jne
mov
pushf
pop
jno
mov
cmpsb
jmp
imul
xor
fsubl
lcall
inc
cwtl
das
rorb
mov
sbb
sahf
adc
test
mov
mov
pop
ret
lret
adc
add
fcmovnu
push
testb
xor
or
and
and
cmp
xchg
imul
cmp
lods
jb
shl
jge
js
mov
cwtl
add
popf
hlt
inc
std
inc
inc
pop
push
mov
cld
inc
iret
mov
inc
push
ffreep
pop
inc
push
and
push
outsl
add
divl
sbb
sbb
mov
jle
int
mov
fnstcw
aad
pushf
in
jp
js
cmpsb
or
mov
out
xlat
icebp
add
icebp
ror
sbb
mov
stos
mov
mov
ror
int
dec
and
sbb
jmp
shrl
push
mov
out
shrb
push
mov
sbb
mov
adc
mov
jbe
mov
int3
xor
dec
mov
dec
sbb
clc
pop
or
push
dec
xor
ljmp
fadd
test
jne
sub
icebp
fldcw
dec
or
aad
xchg
les
or
rol
rcr
les
mov
rol
stos
dec
pop
and
test
jno
test
shll
shrb
mov
dec
imul
sti
shrb
fabs
ss
test
lret
call
lds
dec
gs
stc
lret
ljmp
xor
test
iret
add
lock
int
mov
clc
mov
jmp
leave
xor
mov
icebp
add
mov
test
in
mov
test
mov
xor
push
sub
leave
mov
mov
jae
xor
xor
adc
bound
int
dec
cmpl
jecxz
shlb
sub
pop
in
loope
rclb
add
test
out
test
in
test
in
test
ljmp
test
call
add
test
test
xlat
test
aam
arpl
add
pop
in
shrb
sbb
out
enter
inc
in
shrb
push
lds
shrl
icebp
fisubrs
fildll
fsubrl
fnsave
cltd
popa
adc
hlt
fidivl
or
fldt
dec
cld
or
aas
xor
xor
shlb
mov
sar
les
in
push
push
icebp
ret
add
scas
pop
and
shll
les
dec
jno
in
popa
aaa
stc
inc
int
shlb
pusha
hlt
dec
or
shll
in
ror
xor
and
dec
xorl
dec
popa
and
popa
das
add
popa
sub
fcoms
pop
test
popa
dec
add
sbb
jmp
shl
sbb
jmp
shl
sbb
jmp
rcl
mov
pop
les
shlb
add
xor
pinsrw
call
leave
adc
and
dec
test
mov
popa
rep
add
dec
pop
shll
add
or
outsl
dec
dec
xchg
pop
shll
add
test
push
rcrl
loopne
outsl
lds
insb
jmp
ja
dec
cli
out
or
cmpsl
aam
xor
sub
push
xchg
lret
flds
test
arpl
test
insb
ds
cs
cmp
jbe
loope
nop
sub
dec
sbb
lock
cmp
fcompl
push
insl
or
mov
pop
add
push
xor
mov
fistps
imul
mov
sbb
scas
or
pavgw
pop
scas
les
in
outsb
aad
test
aad
mov
lea
jmp
in
jae
ficoms
in
lret
repnz
shl
and
adc
mov
add
lods
inc
jne
xor
inc
jecxz
sub
mov
ss
jp
test
cmpsw
and
insl
rcr
sub
push
mov
and
es
in
and
lcall
pop
jl
cltd
test
sbb
push
xchg
dec
into
aam
out
int3
add
ficomps
pop
or
pop
enter
mov
mov
roll
insl
pop
inc
and
iret
es
test
fnsave
mov
test
sti
scas
push
arpl
cli
cwtl
aas
or
jmp
push
pop
fsub
stc
das
ss
scas
and
jmp
ljmp
adc
leave
xchg
sub
test
mov
in
fsub
enter
dec
jnp
cs
loop
hlt
lds
imul
setbe
gs
and
jge
in
cmc
mov
test
fcomps
adc
inc
mov
inc
mov
push
aam
gs
xlat
cld
imul
pop
mov
push
sbb
sub
add
imul
fmul
mov
lret
pop
inc
pop
lea
mov
xor
or
push
sub
mov
call
cmp
mov
xchg
shrb
call
add
pusha
fwait
inc
push
push
addr16
icebp
fstl
xchg
sahf
call
lret
dec
ja
dec
jmp
rcl
lds
xorb
out
stc
jmp
pop
test
or
rcrl
sbb
jg
or
xor
mov
aas
mov
add
mov
xchg
int
mov
adc
mov
adc
enter
fstpt
and
mov
mov
adc
cwtl
lret
lock
cmpsb
mov
mov
sub
push
fwait
sbb
pop
dec
ljmp
sub
cmp
sbb
in
and
mov
fldcw
cmp
rorl
sbb
jnp
daa
lods
adc
call
lret
adc
gs
mov
mov
stc
jo
aad
call
pop
mov
dec
jae
in
sbb
repz
cmp
push
inc
fadds
ja
movsl
icebp
mov
jnp
dec
fnstenv
jns
cmp
stos
xchg
lcall
jge
jle
dec
es
icebp
div
add
sbb
insl
or
lds
fprem
int
aas
lock
je
stos
mov
sar
dec
cmp
inc
in
rcl
sarl
stos
shll
loope
push
shll
add
mov
sub
rclb
cmc
sub
je
mov
mul
or
and
jo
in
mov
out
scas
out
decb
aas
int3
jno
cmpb
jp
sub
dec
and
and
fidivs
arpl
ret
jnp
and
xor
push
jmp
jns
lea
in
push
mov
or
sbb
aad
lret
add
leave
stos
jne
loop
or
in
mov
shr
lods
repz
xor
push
xorb
push
mov
inc
enter
mov
lods
dec
xor
mov
lcall
and
aad
or
xor
jbe
mov
shlb
push
inc
nop
pop
sbb
movsb
or
lock
jl
ficompl
js
jno
dec
dec
or
fistps
mov
shl
and
jl
cs
cltd
mov
cmc
sub
jne
inc
out
cmp
xchg
adc
lret
mov
inc
mov
dec
int
cmpsl
mov
push
sub
ret
dec
sarb
jecxz
sub
cmp
and
jae
xor
dec
mov
mov
adc
dec
fnsave
xor
xchg
enter
xchg
sub
pop
add
ret
sbb
dec
es
sub
mov
cmp
mov
jae
js
cltd
mov
cwtl
pop
movsb
rcl
xchg
sub
aam
ja
fprem1
pop
xor
cmp
mov
pop
les
xor
loope
inc
das
cmp
mov
add
cmp
mov
and
out
cs
and
adcl
or
push
js
ret
adc
dec
shll
xor
fadds
mov
pop
xchg
pop
ja
jmp
lock
pop
jecxz
roll
cmp
inc
fnsave
nop
clc
cmp
and
out
jns
movsl
std
call
xchg
dec
addl
mov
and
pop
adc
push
and
fidivrl
jge
imul
scas
idivl
leave
mov
sub
call
or
cmpsb
int
rorb
mov
ds
inc
dec
sub
sub
imull
scas
mov
or
and
sbb
jnp
adc
hlt
shrl
mov
xchg
mov
mov
add
mov
sub
xor
mov
jbe
test
push
pushf
jl
scas
testl
xchg
or
jb
mov
orl
xchg
in
cmp
jb
xchg
mov
fwait
mov
sarl
iret
rcl
pop
icebp
loopne
pop
dec
and
push
xor
ret
jg
jl
cmpsl
nop
repz
xchg
subl
test
ret
cld
dec
mov
popa
inc
pop
rorl
and
je
leave
sub
sbb
sub
lret
int
pop
pop
adcb
and
fistpl
dec
test
ror
fxch
std
aad
scas
or
fxam
int
test
mov
pop
loop
add
pop
pop
jbe
sbb
roll
dec
lock
ret
cld
test
mov
mov
jb
cmp
mov
in
sti
cld
fnstcw
lret
out
lds
mov
out
xchg
roll
lea
jo
push
inc
icebp
add
xor
pop
int
fimull
add
pop
je
iret
jo
ds
clc
negb
push
aad
jmp
add
jecxz
in
roll
aad
xor
loope
pop
leave
in
jno
xor
mov
push
xchg
adc
add
negb
scas
and
mov
adc
mov
xchg
inc
sbb
add
jns
stos
shll
out
sbb
rcrl
inc
imul
ret
cmp
add
dec
mov
lret
ficoml
mov
ja
cld
shr
xchg
mov
cmp
icebp
or
dec
test
in
jmp
enter
xorb
jb
pop
loope
or
add
enter
test
fdivr
mov
and
out
int
frstor
leave
daa
fsubl
sub
hlt
stc
inc
mov
mov
and
mov
cmpsl
jne
repz
jo
mov
xchg
mov
jmp
test
push
out
push
fistpl
or
mov
sub
shll
into
jle
in
jb
rol
push
jle
int3
push
pop
add
mov
lcall
pop
sub
mov
mov
mov
sub
sti
pop
stc
dec
sbb
push
scas
loopne
add
stos
mov
shrl
stc
jecxz
pop
add
sar
frstor
stos
mov
and
and
mov
fldenv
shr
outsb
sub
pop
add
fbld
dec
cmp
push
pushf
and
dec
das
inc
mov
aaa
enter
cmpsb
adc
jne
flds
push
hlt
ret
stos
pop
and
aaa
or
or
push
add
xor
test
mov
pusha
fdivrl
mov
scas
jmp
lds
enter
inc
ret
scas
popa
or
or
shr
push
insb
idiv
mov
loope
into
push
cmp
jns
orl
push
inc
adc
das
mov
imul
lds
aam
and
addr16
bnd
jbe
mov
rcl
adc
inc
in
or
jnp
inc
jbe
xchg
or
dec
lds
in
add
and
aam
mov
mov
dec
ror
sub
add
std
les
mov
and
push
push
imul
stc
dec
repnz
mov
push
ja
fadds
lahf
dec
ret
mov
pop
scas
sbb
roll
aad
jl
adc
fildll
gs
repnz
or
roll
sti
xchg
leave
stc
xlat
xor
pop
inc
or
shlb
jle
sub
popf
clc
jmp
out
or
cwtl
dec
and
loop
pop
xchg
add
mov
repz
and
int3
into
imul
lds
addl
jo
aas
enter
out
dec
insb
daa
sub
in
push
add
dec
test
repz
adc
aas
je
fdivr
jecxz
jne
clc
out
test
xor
lcall
pop
ret
mov
cmp
add
in
inc
out
xor
fidivrs
mov
mov
es
shll
jmp
idivb
add
shr
mov
mov
shl
rolb
mov
xchg
leave
jmp
lcall
ds
adc
stos
xchg
or
iret
gs
jnp
adc
and
fisubrs
and
movsb
ds
cltd
aas
or
stos
hlt
mov
mov
aas
ficompl
dec
pop
add
add
and
add
cmpsb
dec
cwtl
adc
jp
roll
dec
cmp
rcrb
mov
test
jecxz
enter
push
mov
mov
fdivrp
aas
and
mov
sub
mov
adc
inc
insl
pop
pop
sub
lret
jb
imul
std
mov
jo
les
mov
leave
cmpsb
ja
js
and
inc
out
sbb
mov
shll
icebp
repnz
mov
inc
inc
repz
shll
xor
sub
aad
enter
and
or
fadds
mov
xor
loopne
sbb
mov
jmp
push
adc
dec
popf
leave
push
jmp
std
dec
call
xchg
sbb
cmp
sub
fimull
not
test
cli
dec
add
push
mov
cmp
in
push
leave
sub
fs
mov
mov
rol
xchg
test
lret
inc
push
pop
leave
loop
lds
aam
xchg
sub
sbb
cmp
roll
dec
sbb
enter
loope
mov
ret
mov
inc
in
mov
outsb
inc
rol
add
pop
cmc
sub
dec
ja
pop
test
pop
sbb
faddp
out
fildll
shll
sub
scas
shl
test
aad
addr16
jg
push
push
mov
pop
hlt
mov
call
lret
test
push
shll
jne
inc
add
lcall
pop
rol
inc
gs
pop
push
mov
out
adc
xchg
jb
jb
les
shrb
repnz
ljmp
xchg
fstl
mov
rolb
push
xchg
aam
loope
loop
xchg
sub
rorl
jns
xor
and
mov
sar
je
dec
mov
mov
add
data16
cltd
sub
add
scas
stos
outsl
popf
dec
push
loop
mov
int
or
add
in
inc
movb
insb
xchg
jp
inc
sub
xor
cmpl
push
sbb
repz
pop
and
dec
leave
sarb
cmp
in
push
lds
lcall
cmpsl
div
mov
js
loope
clc
xlat
or
test
add
xlat
test
sub
fstpt
popa
mov
sarb
ljmp
cmpsb
ret
popa
cmp
jmp
xchg
inc
mov
xor
add
pushf
or
jmp
fsubrs
push
mov
sub
mov
xchg
add
add
je
shrl
cmc
cmp
leave
mov
add
jbe
inc
sti
adc
fdiv
in
icebp
xchg
fldl
lock
imul
push
sub
push
or
test
cmp
roll
pop
fstpt
xlat
adc
pop
add
rcr
fcmovnb
test
sbb
lahf
mov
inc
cmp
mov
pop
push
loope
or
cmp
xor
cmp
cmp
imul
add
jne
pop
loope
and
sti
shll
lds
mov
add
add
lds
add
push
hlt
cmp
loope
push
cmp
xor
lock
dec
jmp
std
xor
clc
push
xchg
mov
out
mov
inc
and
popf
cli
cmp
adc
outsb
cwtl
ret
movsb
add
lds
push
xor
adc
add
pop
test
sub
test
lret
add
fs
dec
repz
push
add
inc
push
imul
mov
out
mov
fs
das
mov
mov
shll
shll
dec
lcall
dec
adc
mov
mov
std
in
rorl
sbb
jo
sbb
insl
jle,pt
pop
push
add
jo
mov
dec
cmp
pop
test
cmpsl
pop
arpl
sbbl
popa
lods
jbe
prefetch
mov
testl
jecxz
jle
outsb
jbe
adc
aas
mov
stos
rol
hlt
mov
jae
repnz
movl
or
mov
lock
and
add
pop
popa
test
mov
dec
push
push
dec
sub
mov
xorl
xchg
lods
xor
xor
sbb
inc
xor
test
repz
ret
insl
shrl
lods
js
setl
shll
adc
or
add
pop
jb
mov
push
and
xchg
aam
mov
ret
cmpsb
mov
and
or
adc
scas
add
fcomps
xor
add
mov
inc
in
shrb
out
xchg
es
add
mov
cmp
xchg
aad
pop
insl
fdiv
je
jae
mov
pop
push
push
push
out
loop
dec
xor
out
pusha
or
mov
cmp
cmp
cmpb
adc
leave
and
push
in
pushl
xor
into
rol
pop
fcom
mov
pushf
std
cltd
int3
repnz
icebp
gs
sarb
enter
jmp
shr
repnz
xlat
ds
dec
xchg
in
xor
dec
rcr
cmp
inc
adc
les
jp
outsb
sub
es
xor
shl
lods
add
adc
adc
out
dec
push
mov
aad
xchg
leave
outsl
les
mov
mov
testl
mov
gs
ret
add
popf
jge
aam
xchg
roll
fisubs
jp
outsb
push
popa
sbb
adc
in
shll
movsb
orl
xchg
cmp
mov
inc
mov
jns
inc
dec
inc
cmp
movsl
cmp
and
jecxz
jno
sub
stos
jo
dec
ljmp
ljmp
pushf
xor
pop
sub
mov
lods
punpckhdq
jmp
mov
arpl
jmp
xchg
lods
add
in
call
xor
jge
xlat
fsub
fyl2xp1
dec
test
sbb
mov
dec
sbb
dec
fldt
aas
fcoms
xor
sbb
enter
mov
push
jne
adc
in
sahf
or
in
jne
test
pop
movsl
sbb
mov
mov
mov
jne
call
test
mov
jbe
add
inc
mov
mov
dec
sbb
cmp
rcll
fs
sbb
xchg
call
shll
scas
inc
dec
add
mov
push
repz
test
push
in
sbb
push
and
cmp
in
sub
leave
or
dec
loope
outsl
xor
ret
xlat
ffree
add
jmp
push
adc
or
pop
mov
inc
mov
pop
dec
adc
pusha
dec
sub
rol
or
jbe
out
mov
xor
in
sbb
icebp
mov
push
add
test
push
cmp
adcl
push
inc
negb
fadds
fs
leave
cs
jne
sub
or
add
or
jl
in
mov
lahf
or
fistpl
pop
push
fldenv
cmpsl
test
push
int3
std
xchg
inc
clc
pop
inc
push
pop
cwtl
jmp
fwait
pop
fmull
pop
int
fucomp
les
aaa
mov
std
cmp
outsl
insl
test
pusha
pop
icebp
sti
jle
push
pop
mov
inc
adc
and
mov
jo
cmp
cltd
mov
pop
add
aad
popf
lcall
xor
fcmove
lret
test
rolb
sarb
lods
les
sub
fwait
and
cmp
add
fst
dec
scas
jne
dec
jle
iret
test
xchg
in
nop
lret
mov
jns
lahf
enter
ljmp
test
adc
clc
xor
and
push
je
jecxz
or
sbb
cmp
mov
mov
jle
mov
cmp
inc
pop
xor
mov
test
test
dec
mov
sub
notb
push
dec
cmp
cmc
cld
ret
into
dec
jbe
jae
insb
loop
sub
or
lahf
stc
mov
aas
fstl
scas
lock
push
mov
stc
ds
cmp
mov
ja
mov
add
mov
pushf
sub
push
test
add
rolb
xchg
vpaddsw
mov
sub
gs
mov
stos
and
cmpsb
cmpsb
inc
bound
out
imul
shlb
inc
sbb
lods
inc
sbb
add
xchg
push
pop
pop
mov
fisttpll
inc
mov
cld
push
imul
jae
cmp
pop
je
sbb
add
sub
in
dec
cmp
pop
into
pop
pop
imulb
cli
xor
cmp
rcrb
mov
pop
fldenv
mov
cmp
inc
test
ljmp
insb
adc
sbb
add
mov
repnz
pop
sbb
xor
add
arpl
sbb
add
imul
or
fstpl
iret
or
cmpsb
mov
and
imul
jmp
xor
ja
lret
fildl
adc
into
mov
imul
in
sub
mov
cwtl
sbb
insb
mov
jns
ret
insb
xchg
jmp
xlat
mov
or
dec
push
sbb
jmp
iret
jne
mov
fsubr
inc
dec
and
and
pop
push
dec
inc
movsl
sahf
outsl
je
std
enter
adc
roll
mov
add
ret
loope
and
ret
cmp
cwtl
sub
std
mov
cmp
test
in
cmp
sub
ja
sbb
repz
add
xor
jle
stc
call
add
xchg
outsb
sbb
aam
and
dec
rcrb
inc
jbe
sbb
cmp
ljmp
dec
out
js
scas
ja
dec
or
sub
loope
sub
in
icebp
pop
sbb
test
cmc
lock
mov
in
enter
cld
jo
adc
dec
loope
cmp
mov
xor
lret
pop
sub
dec
loope
jbe
xchg
iret
add
cmc
xor
test
pusha
shll
dec
test
adc
pop
push
push
test
inc
rorl
mov
mov
dec
insl
mov
ljmp
xorl
insb
or
mov
arpl
orl
rclb
pop
shl
test
leave
aas
jp
sbb
sbb
pushf
jne
scas
outsb
imul
std
mov
add
fstps
out
out
and
adc
mov
xor
and
es
outsb
call
push
cltd
sbb
add
sub
adc
push
inc
clc
xor
and
cld
in
clc
pop
dec
icebp
mov
adc
stc
and
inc
in
pushf
jae
fsub
inc
shl
mov
jmp
adc
notb
add
lds
and
xor
cmc
adc
rolb
mov
sub
fdivrl
test
lea
cmp
aam
int3
or
sbb
frstor
pop
nop
or
dec
dec
inc
ret
out
test
std
mov
test
cmc
or
adc
inc
add
lahf
add
imul
sub
xor
cmp
pop
clc
sub
leave
lret
jmp
in
push
inc
stos
out
call
in
dec
popf
sbb
cmp
inc
push
idivl
test
xor
dec
ljmp
xor
add
inc
leave
add
in
cmc
repnz
roll
scas
inc
push
add
add
pop
rol
jp
jl
test
insb
push
in
and
ss
fs
shll
repnz
jmp
adc
fadds
vcvtsd2ss
out
pop
jno
sub
sbb
bound
leave
into
incl
test
icebp
or
mul
xchg
shrl
xor
xchg
push
rcll
add
push
cli
aam
inc
cmpsb
jo
xchg
push
or
shlb
into
jl
mov
cmp
inc
pop
jne
mov
imull
test
lods
adc
stos
xchg
call
or
dec
ja
inc
int
int3
cmp
aam
sub
out
jb
and
in
xchg
test
stos
int
rcrl
inc
and
fidivl
add
stos
xchg
mov
shr
adc
cli
stos
cmp
loopne
bnd
stos
fisubl
cmpsl
lahf
sbb
xlat
popf
imul
and
loopne
add
pop
or
pushf
leave
fimull
lock
xchg
movsl
adc
cmpb
gs
adc
clc
lds
push
adc
lcall
xor
test
cmpsl
and
inc
xchg
fmuls
sub
out
int3
push
clc
dec
or
lock
ljmp
mov
subl
pinsrw
dec
sub
lret
lcall
or
inc
sub
out
xorl
outsl
pop
fs
jecxz
sbb
and
movsl
in
sub
in
icebp
cmp
stos
push
nop
stc
cld
aad
cmp
add
in
jno
in
mov
leave
stos
adc
ror
out
push
pop
lock
repz
fidivrs
and
and
sub
add
ds
call
in
in
dec
xchg
dec
jnp
ja
add
inc
xor
ds
std
xor
cmp
sti
mov
mov
jb
loop
fsubl
insb
loope
shlb
fidivs
sti
mov
inc
call
sbb
mov
push
int3
shrl
nop
jmp
popa
push
inc
aam
lea
inc
sub
shll
in
xor
add
rcr
push
jle
pop
mov
inc
rclb
shlb
pop
mov
and
jns
call
push
pop
outsl
pop
sub
cmp
insl
nop
push
cmc
testl
or
adc
fcoms
xchg
nop
flds
in
or
lcall
cld
add
loope
test
sub
xor
xor
adc
in
and
adc
mov
lahf
mov
mov
lods
ret
adc
xor
shlb
mov
or
adc
add
mov
mov
cli
je
jne
mov
loope
push
loopne
sbb
xchg
lds
js
imul
dec
ljmp
dec
pop
push
and
aam
test
lock
test
mov
enter
cltd
cmp
or
sbb
adc
lahf
dec
jl
loope
daa
add
dec
cli
orl
ret
cltd
add
out
mov
in
cmp
icebp
idivb
lahf
ffree
test
pushf
mov
jbe
and
in
mov
fldcw
pop
and
push
hlt
pop
fists
xor
fldt
cli
jb
fisubrl
lahf
ffree
push
enter
adc
stc
mov
icebp
dec
jge
test
ret
inc
adc
icebp
repz
jge
jle
adc
or
inc
popa
mov
jno
test
xchg
push
jbe
lds
in
out
cmp
fwait
enter
adc
int
inc
mov
adc
or
xchg
add
mov
movsl
push
adc
mov
push
nop
inc
sbb
push
mov
pop
inc
push
adc
cltd
mov
fwait
dec
ss
insb
xor
add
or
push
testb
xchg
hlt
lahf
test
xor
add
scas
pusha
loopne
sahf
cmp
jge
or
sbb
aaa
call
mov
cltd
xor
cwtl
addl
imul
lahf
out
mov
or
or
inc
nop
add
mov
aas
add
jae
mov
push
xchg
and
or
ja
fsubrs
test
inc
movsl
icebp
hlt
jmp
push
in
xor
inc
pop
mov
lock
mov
jbe
nopl
jge
sbb
cmp
mov
jp
mov
inc
outsl
stc
mov
add
inc
pop
mov
enter
push
push
loope
inc
dec
std
or
jne
jmp
mov
pop
push
sbb
in
mov
addb
mov
ljmp
jb
cmp
mov
leave
push
fstpl
mov
or
out
shlb
sti
jns
jb
repz
jle
mov
ret
sbb
ljmp
cltd
int3
push
add
xor
sub
fdivl
aaa
test
loope
fiaddl
push
adc
xchg
stos
mov
add
lret
or
mov
cmpsl
adc
jnp
mov
mov
adc
stos
popf
jp
leave
test
sbb
push
rcrb
push
xchg
outsb
cmp
popa
loope
into
pop
imul
stc
push
add
repz
aad
dec
xchg
add
int
shlb
mov
xchg
xor
mov
js
mov
repz
aam
test
rcll
dec
jo
mov
in
mov
addr16
jl
mov
xor
sub
sarb
or
cmpsl
ja
inc
dec
xlat
push
and
out
jbe
sub
sbb
or
fstp
jecxz
sub
movsb
notl
rcl
pusha
rcpps
cltd
fwait
hlt
cmpsl
jnp
js
repz
int
push
rcrb
jb
sbb
lret
fwait
adc
jmp
fisttpl
out
push
jne
aam
sbb
mov
test
xchg
sbb
ljmp
inc
aad
xchg
push
jle
push
lods
mov
and
scas
dec
xchg
call
in
inc
inc
imul
or
or
or
loope
fcmovb
adc
stc
mov
xor
les
mov
jb
lret
xor
das
stos
cmpl
or
sar
cmp
xchg
push
cld
stos
ret
out
negb
cltd
ret
pusha
adc
flds
repz
push
push
mov
cmc
sbb
and
xlat
dec
ficompl
aad
push
insl
fcompl
jp
mov
pop
pop
pop
adc
jmp
cmc
sub
adcl
add
cmc
add
ljmp
aam
in
or
inc
rcrl
ds
test
cmp
jae
mov
subl
clc
ds
cmp
add
pop
fldcw
popa
inc
xchg
sub
xorl
iret
jnp
loope
or
sub
cmp
sbb
push
add
inc
bts
stos
cli
fadd
adc
push
insb
or
inc
adc
and
sub
mov
clc
das
add
add
add
dec
pop
adc
rolb
mov
pop
aam
or
mov
pop
call
pop
ficompl
ret
js
imul
xlat
fnsave
mov
lds
dec
sti
sbb
pop
mov
mov
mov
cmpsl
and
dec
pushl
outsl
clc
add
lods
scas
inc
mov
aas
mov
sbb
or
nop
cmp
and
pop
ret
dec
sbb
shl
push
shll
push
mov
enter
jle
dec
inc
or
daa
pop
adc
std
popf
and
pop
repnz
icebp
mov
add
test
jmp
enter
push
ret
lea
in
stos
mov
push
cltd
sbb
insl
or
mov
sarb
popa
push
and
cmp
lds
cs
sub
jg
rorl
cmc
sub
ret
ret
rorb
rolb
add
mov
repz
lcall
mov
fdivl
jb
imul
sub
insl
xchg
test
sbbb
mov
mov
roll
or
bound
stos
aam
jnp
rcrb
ret
mov
std
pop
pop
das
leave
or
je
inc
dec
add
add
pop
mov
add
cmpsb
xor
and
pop
xchg
cltd
shll
xor
xchg
enter
xchg
lahf
lcall
out
insb
mov
sub
rcrl
dec
ret
mov
pop
sbb
mov
push
test
inc
and
pop
cmc
pop
in
lea
or
jle
push
mov
xor
push
and
mov
cmp
sti
mov
add
jnp
lods
mov
stc
enter
loopne
or
fld
test
add
pusha
pop
ja
mov
addb
insb
jecxz
jbe
stc
cmp
gs
xchg
rcrb
ds
xchg
lods
jb
stos
lret
shlb
or
jmp
js
stos
sub
out
orb
mov
lock
jb
adc
cmpsl
cmp
xor
call
mov
into
into
aas
add
aas
fmul
dec
add
or
lcall
inc
push
push
inc
lret
sti
mov
add
insl
bswap
test
test
test
sub
jp
leave
or
dec
addl
jmp
add
leave
xchg
xchg
mov
mov
pusha
ficompl
xchg
fidivl
in
sbb
sbb
int
jmp
adc
cmp
aas
in
in
mov
cmp
add
mov
inc
cli
fldl
dec
ss
sarb
sbb
fldl
rolb
aaa
push
cmpsb
and
lret
push
ftst
sbb
faddp
add
push
arpl
adc
lcall
and
ficomps
or
mov
shlb
add
mov
mov
int
orb
sahf
add
in
lret
int3
mov
jmp
add
loope
testb
in
add
test
add
mov
fnstenv
insl
adcl
cmc
sbb
aaa
xor
sbb
ljmp
lea
push
cmpsb
fwait
add
mov
mov
inc
cmpsb
cltd
pop
mov
stos
cmp
or
jmp
cmpsb
xchg
or
inc
push
decb
xor
cmc
fisttpll
mov
fucomip
push
lods
xor
loope
stc
test
clc
xor
adc
add
and
or
cmp
push
push
pop
push
ljmp
aam
pavgw
dec
inc
sub
mov
subb
jmp
mov
mov
add
xor
xchg
mov
jle
fpatan
insl
mov
dec
icebp
xchg
leave
ljmp
fistpll
test
lret
cmp
jne
ss
push
mov
aad
scas
shll
mov
push
inc
adc
xor
test
rclb
push
pop
cmp
cmpsb
and
dec
cli
stc
lcall
leave
mov
test
sbb
dec
insb
mov
mov
cwtl
dec
jp
pop
rcll
mov
mov
ret
clc
aaa
xchg
stc
adc
dec
aas
push
fisttps
lds
imul
jl
xor
jo
mov
push
ret
insb
test
scas
mov
jbe
ret
mov
not
testl
icebp
orl
insl
dec
aad
or
fldl
sub
in
ret
stc
cmp
stc
push
hlt
das
mov
dec
dec
andl
jmp
shlb
cmpl
jae
hlt
dec
xchg
js
pusha
lods
sub
std
cmc
test
mov
adc
arpl
push
jnp
movsb
mov
arpl
imul
icebp
xor
mov
stc
xor
leave
stos
mov
icebp
lds
dec
rorb
fisttpl
jno
mov
xor
mov
jne
arpl
fstpl
and
mov
fcomi
cwtl
dec
dec
mov
cmp
mov
cmp
movsl
cmpsl
dec
sbb
ret
or
mov
mov
or
mov
or
mov
test
cmpsl
dec
leave
push
or
sbb
fisubrl
hlt
shl
pop
notl
stc
jmp
outsl
push
inc
in
push
adc
shrl
roll
shr
inc
popa
ret
mov
in
repnz
jb
sub
dec
lea
leave
add
lret
test
fldcw
inc
loope
add
dec
cltd
mov
dec
push
mov
lods
orl
mov
sub
jae
jmp
repz
pusha
xor
ret
push
movsl
jle
ja
or
push
pop
sub
ja
es
enter
adc
lret
out
in
jae
inc
jb
dec
je
imul
inc
adc
out
xor
push
mov
pop
push
fsubs
cmpsl
mov
add
insb
in
fldenv
sahf
sbb
and
push
int
mov
pusha
push
cli
cmp
push
mov
jns
fisubl
subl
adc
push
lret
xor
shll
push
push
rorl
mov
xchg
int
test
imul
mov
dec
mov
test
xchg
and
and
scas
xor
or
add
mov
inc
pop
push
sahf
lret
ret
and
iret
sub
sbb
mov
mov
mov
and
sub
dec
adc
sub
mov
push
xor
jmp
lret
pop
jge
add
pop
jns
dec
in
xor
ja
mov
in
and
outsb
lods
std
pushf
imul
mov
stc
shr
jo
lds
and
lods
jge
push
fadds
xlat
dec
xchg
mov
xchg
call
or
and
jo
ret
jbe
fs
sar
mov
xor
add
cmpsb
xor
mov
inc
cld
jae
inc
xchg
mov
cmc
inc
lods
or
or
cltd
inc
mov
jle
pop
lock
xchg
or
xor
inc
call
test
xor
mov
add
mov
les
add
outsb
shl
roll
pushf
je
or
dec
lds
aaa
es
cli
cld
mov
popl
iret
in
jb
repz
pop
pop
fcoml
and
dec
cmc
ret
sub
or
clc
inc
mov
lret
stos
push
mov
pop
sbb
cld
or
ret
cwtl
dec
sti
mov
pop
xor
inc
rclb
mov
jae
add
in
mov
cmp
add
int
test
mov
adc
jne
and
loop
rcr
mov
fidivrl
mov
lret
mov
xchg
popf
mov
enter
mov
lock
rcrl
fcom
lds
mov
jmp
loop
cmpsb
mov
mov
lret
mov
int3
jne
sbb
cmp
movsl
xor
jl
add
mull
call
sub
mov
dec
dec
mov
repz
aam
cmpsl
and
mov
fcmovnbe
icebp
adc
mov
push
pop
cmp
loope
jb
sbb
mov
movsl
loopne
add
push
add
inc
pushl
cmc
aam
inc
mov
sbb
addr16
lock
adc
mov
movsl
push
stos
enter
dec
test
test
stos
jg
int
and
add
bswap
fs
sub
aam
movsb
loopne
in
test
pusha
lgs
dec
fisttpl
cmp
inc
test
mov
ret
cmp
lods
hlt
sub
std
aad
and
cmpsl
repz
in
enter
add
add
xchg
add
cmc
sbb
add
not
xor
sub
sub
cmp
sub
xchg
movsl
push
nop
dec
add
cld
test
jb
xchg
sbb
stc
ljmp
sahf
or
aad
jmp
and
addl
add
test
and
jmp
add
iret
cmp
shrb
lret
xor
push
rcrl
rcr
fsubrp
aaa
jae
mov
mov
or
xchg
bound
push
xor
rcl
shlb
jl
mov
mov
or
pop
pop
fistpl
loope
push
pushf
sbb
sbb
movb
and
fadds
push
mov
sbb
loopne
cmp
push
dec
and
dec
leave
jmp
cmp
lods
cmpsl
cmpsb
ljmp
lock
sahf
cwtl
test
fnstenv
test
and
adc
mov
enter
nop
dec
insl
out
repz
mov
cmpsb
pop
call
addr16
add
jo
mov
sti
inc
sti
stos
nop
xor
sbbb
mov
and
cmp
cmc
arpl
push
cmp
mov
cmp
adc
shll
std
out
cli
into
dec
fldcw
test
test
cmc
dec
aad
outsl
xor
push
add
dec
rorl
icebp
repz
or
cmp
js
and
sbb
push
add
rorl
inc
rorl
push
lds
scas
sub
test
push
xchg
pop
sahf
sub
lock
ja
add
or
jns
mov
bound
insb
and
ret
sarl
ss
in
lds
in
imul
mov
or
cltd
orb
insl
loop
lods
js
test
jne
dec
pop
lods
subb
jno
and
dec
push
cmc
dec
lds
cli
mov
dec
push
std
test
add
outsl
shll
cmc
add
dec
test
cld
cmc
inc
push
pop
sbb
fcomps
cmp
fimull
mov
fimull
jp
fstpt
mov
test
xchg
fldenv
jnp
jecxz
mov
hlt
out
pop
pop
jg
rcrb
js
mov
test
hlt
mov
cli
add
jbe
pop
leave
jae
mov
inc
fstpl
out
jle
adc
fs
lock
or
fwait
push
and
mov
push
pop
arpl
xor
adc
jae
mov
sbb
inc
jg
xor
mov
fsubl
jmp
add
fcomps
int3
in
clc
aaa
rorb
pusha
add
lahf
das
or
mov
mov
out
aam
mov
jo
sub
and
jle
pop
sbb
rcrb
mov
shrl
mov
or
repnz
fldl
shr
test
push
adc
shl
shl
adc
sti
repnz
out
add
les
inc
jp
fiaddl
and
add
aam
fcoms
add
push
sbb
push
lock
or
fstpl
pop
sub
sar
jle
mov
iret
mov
int
mov
jnp
jbe
lods
mov
ret
jle
out
loope
and
adc
inc
ljmp
inc
xchg
lods
inc
add
bound
in
mov
cmp
leave
xchg
push
out
push
lcall
dec
pop
adc
pop
jo
xorl
fldcw
mov
jne
mov
jno
xchg
sbb
jne
fucomp
in
outsl
xor
sbb
loope
fisttpl
test
subl
sub
mov
mov
mov
jecxz
enter
orb
movsl
stos
sub
mov
test
popa
pop
cld
sub
and
or
xor
dec
mov
lea
or
int
incl
call
lds
mov
or
testb
and
rcl
fmul
adc
leave
add
lds
cmp
sub
ret
mov
push
mov
xchg
and
adc
add
hlt
insl
rorb
rcl
in
xchg
adc
adc
fsubrs
lds
adcl
add
mov
rcll
and
enter
out
lods
mov
jb
int3
xchg
pop
inc
cmp
es
jb
mov
push
inc
das
icebp
jmp
cmp
cmp
jnp
xor
insb
adc
fidivrl
jl
aaa
xor
jbe
lret
mov
or
inc
add
sbb
scas
lahf
int
jno
xor
sti
xchg
dec
push
shlb
pop
add
aam
adc
jo
jg
dec
call
pop
pushf
xchg
enter
shrb
adc
push
cmp
enter
push
jae
push
shll
push
fstpl
jle
dec
push
lret
push
mov
daa
pop
cld
xchg
enter
dec
or
cmp
mov
sub
cmp
dec
inc
add
cmpsb
sub
xchg
adc
in
or
adc
xor
dec
jge
cwtl
push
in
test
vmovups
jge
dec
adc
mov
out
mov
or
daa
out
in
add
push
fiadds
jbe
mov
insl
in
push
xor
sbb
or
jge
sub
or
xchg
xor
sub
push
mov
fcoms
std
popf
cmpsl
mov
fnstsw
ljmp
add
movsl
jo
jb
ss
out
orl
xchg
arpl
jl
out
mov
jecxz
sub
icebp
add
aam
cmpsl
cs
cli
and
gs
xlat
icebp
or
sar
push
mov
push
dec
sti
inc
cmp
jl
sub
sbb
jnp
sarb
mov
int3
pop
add
fsts
ret
scas
dec
fldcw
fs
xchg
inc
jno
pop
sar
mov
faddl
jb
out
xchg
and
pusha
rclb
arpl
or
shll
add
jae
shr
aam
dec
and
bound
xlat
addl
jmp
test
lock
rclb
ds
out
out
iret
and
out
mov
arpl
pop
fcomp
mov
fistps
outsb
dec
xlat
out
inc
xchg
pop
cld
icebp
inc
sub
loopne
or
loopne
rcll
or
dec
dec
icebp
mov
sub
add
aad
xchg
aad
or
imul
sub
dec
outsb
and
hlt
sahf
adc
into
xchg
std
sbb
dec
int
sbb
int3
sbb
jmp
sub
inc
fstp
inc
ret
test
das
inc
rcl
mov
lcall
adc
test
ffreep
and
mov
or
frstor
aaa
or
pop
and
int3
test
cltd
into
jecxz
dec
mov
rorl
fcmovnbe
icebp
stc
negb
pop
mov
out
xor
lret
adc
jge
cmc
jmp
sub
icebp
and
test
dec
lds
add
cli
sbb
stos
adc
and
xor
enter
sub
pop
sub
jno
cmp
sbb
xlat
dec
sarl
jmp
pushf
or
xchg
sahf
xor
ret
jno
and
mov
or
mov
inc
cmc
add
add
xorb
add
movd
jns
xor
jns
into
nop
shlb
and
and
mov
inc
rcll
mov
pop
or
push
mov
add
mov
leave
mov
lret
movsl
mov
sbb
cmp
pop
movsb
out
shlb
push
std
fldl
in
arpl
ret
jecxz
bound
sti
pop
mov
and
mov
and
shl
sbb
call
rol
add
sub
dec
dec
cmp
call
fldl
aas
mov
sbb
in
insb
out
mov
stos
imul
ret
cltd
jns
sahf
xchg
add
adc
test
sti
adc
js
adc
add
insl
ja
sub
jbe
aam
xchg
xor
mov
mov
xor
or
jne
in
mov
iret
mov
test
out
out
fcomps
pushf
das
inc
pop
cmp
xorb
sub
das
dec
dec
fwait
add
cmc
ret
js
andb
lret
dec
pop
loopne
shr
push
aam
inc
pop
fs
mov
in
jecxz
lds
mov
sbb
xor
or
pop
add
xchg
dec
add
lods
mov
jecxz
push
int3
jg
int3
mov
test
mov
push
xor
ja
sbb
mov
jne
pop
loopne
jno
push
sbb
inc
jmp
sbb
aaa
cs
ljmp
mov
xor
mov
mov
int3
inc
loope
add
push
sbb
xchg
dec
roll
jne
test
es
adc
call
xchg
in
stos
adc
sub
popf
dec
pop
or
jb
insl
and
or
lret
ret
stc
cwtl
xchg
std
mov
mov
mov
mov
cli
ret
dec
insl
mov
push
mov
jns
push
data16
ror
push
ret
xchg
mov
ss
leave
aam
jne
jmp
jg
jmp
and
adc
fmul
aad
imul
dec
cli
cmpsw
fisttpl
jae
jne
aaa
xchg
sar
lcall
pop
shrb
pop
or
dec
aaa
icebp
pop
mov
push
or
fadds
gs
inc
sbb
push
add
and
aaa
call
xor
mov
xor
nop
xchg
dec
sarl
rcrl
or
test
repnz
into
cli
scas
or
jno
test
mov
test
mov
insl
out
sub
lods
xchg
ret
jmp
shlb
loope
in
test
lret
dec
cs
hlt
insl
insb
sti
pop
inc
lds
mov
mov
mov
imul
fwait
ret
jb
cltd
nop
sahf
and
jae
adc
push
push
stc
pop
int
xrelease
sub
dec
fnstenv
mov
jmp
xor
arpl
shrd
dec
push
xchg
test
mov
lahf
inc
loope
cmp
mov
cltd
rcrl
mov
pop
mov
pop
jne
sub
roll
or
cmc
lret
int
loopne
mov
and
push
dec
xchg
dec
dec
inc
sub
shlb
sub
xchg
daa
add
jmp
pop
jl
cmp
aam
lcall
loope
sahf
andb
add
dec
imul
mov
xorl
cmpsb
cmp
add
xor
push
lahf
adc
and
psllq
repnz
pop
fdivl
mov
pop
and
shl
add
mov
iret
leave
mov
inc
lret
loop
repnz
stc
dec
lcall
jbe
iret
pop
sbb
mov
mov
out
inc
cmp
jmp
push
sarb
sbb
sub
arpl
lret
jo
push
push
pop
and
pusha
sub
dec
dec
dec
lds
cli
lcall
das
jle
rcrl
js
int
pop
aam
add
pop
cmpsb
xor
sub
cwtl
jge
xorb
clc
arpl
or
jecxz
sbb
and
xchg
sbb
and
popa
aad
icebp
loop
dec
jbe
inc
not
adc
jmp
call
int
sbb
repz
jne
movsb
add
gs
cld
repnz
lds
lret
xor
mov
xchg
cwtl
xchg
pmaxub
mov
fbstp
xchg
sbb
jle
inc
fsubr
or
pop
xor
negl
add
ret
les
sub
dec
sbb
and
jns
adc
cmpsl
lcall
mov
das
sub
xchg
repnz
sub
shr
dec
jne
in
cmp
leave
ss
outsb
stc
pop
or
or
aas
mov
cmp
dec
push
lds
shrl
push
rol
aas
insb
pop
bound
sbb
stc
jnp
cmp
jb
jmp
in
mov
mov
std
lds
xor
lret
and
mov
adc
aas
and
icebp
and
clc
push
jno
pop
pop
sub
ljmp
fldl
xchg
insb
push
dec
inc
cmpsl
imul
sub
dec
lret
jns
sarl
cli
mull
sti
adc
fistpll
daa
hlt
add
rorl
cmp
jns
add
rorb
dec
mov
lds
push
and
aam
arpl
repz
cwtl
add
jae
lds
sub
es
in
add
mov
mov
mov
test
pop
mov
dec
data16
data16
cmpsl
cmp
adc
dec
insb
jne
pop
and
movb
jecxz
fnstcw
xchg
pop
jle
add
lcall
test
push
xchg
std
push
divl
mov
cld
pop
push
dec
and
push
out
fidivrl
cld
mov
inc
jle
andps
adc
jg
enter
xor
int
and
mov
add
pop
mov
push
mov
and
ds
ror
dec
push
mov
and
xchg
and
adc
es
sbb
inc
lret
cmc
mov
adc
ror
stc
addr16
inc
repnz
xor
xor
mov
cmp
aam
shlb
ja
jae
adc
push
jp
test
cmpsb
rcll
mov
adc
dec
sub
or
popa
push
xchg
sarl
cmc
loope
test
shr
and
aam
aas
xor
add
mov
sarb
cmp
adc
test
ds
xlat
repz
adc
pushf
jge
dec
and
push
sbb
test
shlb
cmp
push
bound
cwtl
xor
call
add
test
fldl
push
dec
mov
sbb
add
test
movsb
out
subl
aam
mov
mov
push
and
mov
aam
loopne
lcall
push
pusha
fstps
and
dec
add
mov
pusha
xor
xlat
and
test
aad
push
cmpsl
enter
lahf
shr
jl
mov
cli
jle
push
jmp
popa
jne
and
in
xor
and
aad
mov
movsl
mov
pop
out
pop
mov
insb
leave
repz
sub
push
arpl
lds
sub
sti
inc
jno
int
insb
mov
aam
in
jmp
call
mul
lock
sub
inc
sti
jg
jns
scas
xlat
inc
mov
and
jae
lds
inc
cmp
sbb
or
dec
dec
rolb
mov
movl
cmp
mov
sbb
dec
dec
add
cmp
inc
arpl
cld
roll
xchg
add
fistl
ficompl
mov
pop
jne
scas
mov
mov
adc
dec
mov
int3
scas
cs
pusha
fbstp
test
jns
jmp
adcl
push
sar
scas
cmp
xor
ret
mov
push
or
fcomps
pop
dec
stos
push
das
loope
outsl
imul
sub
fstp
cmp
jmp
jmp
jmp
xchg
sbb
mov
mov
gs
add
mov
test
fimuls
xchg
scas
jmp
mov
or
mov
scas
movsl
push
negb
aam
jb
xchg
das
int3
int
dec
pop
push
rcr
sbb
ret
in
ret
push
pop
mov
mov
test
and
rcrl
test
cmc
mov
shl
xor
testl
jp
push
stc
push
les
inc
inc
pop
mov
push
sbb
imul
addr16
mov
mov
pushf
fnsave
sbb
add
add
movsb
shrb
cmc
push
sbb
xchg
out
push
and
dec
add
jmp
add
pop
xor
xor
testb
jb
and
test
fmuls
lret
pop
sbb
in
xchg
xor
push
mov
lods
ror
cltd
jbe
call
test
outsb
fildl
clc
jae
add
ret
xchg
sbb
int3
cmpsb
ret
testb
cmp
pushf
lcall
mov
dec
xorl
push
scas
out
xchg
jle
dec
pop
xor
rol
inc
loop
and
mov
scas
mov
sbb
inc
cld
js
fxch
test
push
inc
xchg
push
add
fstl
aad
push
jp
mov
mov
repnz
cli
xchg
popa
lock
mov
dec
movsl
roll
out
mov
aam
fistpll
add
or
sbb
sub
paddq
or
pop
scas
pop
push
lods
mov
imul
sbb
in
pusha
inc
jns
or
and
std
push
adc
rcl
pop
ds
xor
fnstenv
loop
cmpsb
cwtl
pop
push
ds
sub
movsb
lahf
mov
add
cmpsl
shlb
mov
cmp
dec
dec
mov
testl
enter
loop
fists
call
add
or
hlt
gs
int
push
test
arpl
pop
jle
sahf
roll
or
cli
mov
mov
add
fadds
pop
test
in
pushf
inc
and
les
cwtl
pusha
in
mov
or
mov
xchg
add
bound
and
push
adc
and
jp
mov
mov
inc
scas
sbb
cmc
loop
aam
mov
or
or
dec
jmp
xchg
add
inc
stos
dec
fs
or
ret
loope
aas
xor
enter
das
outsl
cmpsl
add
out
sti
cltd
aam
ss
lret
outsl
mov
inc
or
cmp
xlat
cltd
jno
and
inc
inc
xchg
dec
add
cwtl
sub
push
call
add
cmp
cmp
mov
aas
lock
mov
sub
stos
fwait
mov
dec
pop
add
loope
push
sahf
pusha
mov
mov
inc
test
xorb
mov
and
push
cmp
inc
aad
or
movsl
xor
icebp
pop
push
lds
in
mov
cli
xchg
or
lahf
and
mov
sbb
ret
addr16
loopne
dec
imul
cmp
push
cwtl
wrmsr
jo
cwtl
dec
add
cwtl
xchg
inc
sub
push
call
aad
mov
and
stos
push
jnp
add
push
pusha
in
cmpb
jb
and
sti
and
arpl
outsl
movsl
dec
cmp
sbb
outsl
stc
imul
inc
ss
out
add
mov
inc
addl
scas
add
xchg
ffree
xchg
jo
and
cmc
test
je
push
out
lcall
sbb
or
push
sub
ss
xchg
pop
icebp
xchg
push
sub
xor
pushf
xor
pop
enter
rolb
movsl
js
inc
jae
gs
jbe
arpl
not
cmp
xchg
add
cmp
push
sbb
sbb
sbb
add
movsl
or
push
jle
xor
inc
pop
add
sub
daa
mov
lods
popa
sbb
or
aam
fildll
ljmp
mov
jle
inc
push
mov
popa
lret
inc
mov
xlat
stos
push
shrb
inc
jae
std
cmp
sub
jle
daa
sbb
sbb
push
pushl
xor
repnz
addr16
inc
mov
icebp
or
rolb
mov
and
int
or
ds
sub
mov
sbb
cmc
inc
movsb
pop
sbb
add
sti
dec
cmp
push
mov
andb
cli
mov
xor
ljmp
stos
jmp
clc
cmp
inc
pop
xchg
addr16
mov
stos
enter
xor
cmp
movsl
je
pop
dec
sub
mov
cmp
test
lods
mov
and
insb
ret
add
nop
lcall
aad
sbb
adc
stos
add
push
jmp
jp
lret
hlt
fimuls
xor
mov
ljmp
cmc
cwtl
rcrb
test
xchg
out
jno
mov
je
cmp
inc
fwait
cmp
rorl
mov
mov
jns
rorl
enter
scas
ljmp
jecxz
std
sahf
pop
mov
or
adc
aas
shlb
or
inc
out
jmp
push
push
pushf
xlat
and
test
cmc
stc
dec
loop
call
int
add
mov
clc
repz
add
int3
lahf
arpl
out
cmpsb
lahf
aas
xchg
int
or
enter
movsb
mov
ja
push
cmp
add
or
or
cmc
ljmp
cmpsl
mull
jge
cmp
fsubrs
sar
mov
sbb
jle
jle
mov
pop
std
ds
xor
jae
lret
fldenv
jl
adc
test
push
pop
push
jno
jnp
out
cltd
lahf
xlat
inc
je
orb
movsl
imul
dec
out
pop
mov
fldlg2
add
jmp
pop
ljmp
popf
roll
mov
push
push
cltd
sub
je
call
sbb
add
test
lock
sub
ret
mov
push
xorb
mov
dec
ja
call
leave
int
add
xor
pop
or
add
sbb
rorb
rorl
jo
lret
pop
add
call
and
notl
xor
xchg
addr16
xor
xor
cmp
inc
inc
filds
hlt
lret
movb
xchg
jne
push
dec
sahf
inc
xchg
adc
xor
adc
pushf
pop
outsl
jl
out
das
in
jle
xchg
lret
inc
ds
push
loope
pop
pop
xor
inc
lock
test
xchg
int3
jbe
ja
add
mov
and
mov
orl
rorl
sbb
push
js
aam
clc
jmp
add
pop
inc
lods
mov
ret
push
cwtl
adc
lock
add
roll
xchg
jae
mov
clc
push
aaa
add
jno
add
iret
sar
popa
mov
ss
outsl
pop
jmp
int3
clc
shll
leave
lock
stc
and
fidivrs
iret
jb
fidivl
sbb
push
xor
mov
ret
aaa
std
mov
ret
mov
loopne
ret
mov
jne
sbb
ror
cmpsb
ror
cmpsl
ror
movsb
ror
movsl
ror
mov
dec
test
jp
xorl
mov
cmp
jae
push
lret
mov
dec
iret
leave
dec
int
mov
jo
push
adc
push
sbb
sbb
imul
inc
push
rcrb
sbb
sbb
lret
leave
lds
sti
push
lods
rorb
cmp
mov
psubusw
test
int
data16
shlb
ret
popa
cmc
mov
aas
stos
dec
push
popa
add
jo
test
arpl
pop
rorb
jmp
stc
and
mov
inc
inc
mov
fsubr
sub
daa
es
repz
cmpsb
ret
ror
lret
je
mov
push
ljmp
dec
jns
jnp
pushf
sarb
shlb
cmp
into
outsb
xorl
out
in
icebp
pop
testl
aad
hlt
push
pop
lret
int3
insb
fildll
push
adc
into
dec
add
lret
icebp
dec
in
loope
mov
loop
xchg
lods
xlat
enter
mov
mov
scas
mov
pop
loop
inc
iret
in
xor
lahf
xchg
test
aas
lds
clc
inc
incb
lret
sahf
leave
mov
cli
ja
mov
mov
in
ret
andl
hlt
jbe
shrb
jg
aaa
push
xor
dec
int
test
cs
inc
daa
imul
rcrb
cmp
es
xor
fldl
add
jmp
jne
sbb
pop
mov
mov
xchg
pop
mov
mov
adc
add
inc
in
xor
scas
dec
insl
add
sub
cmpsb
sahf
fisubl
repz
mov
mov
neg
fisttpll
add
or
call
in
imul
sub
xor
xchg
inc
sbb
lret
shr
outsl
adc
mov
jns
and
inc
jo
in
cmc
and
mov
cmp
or
lds
and
or
add
push
shr
in
loop
mov
dec
roll
and
or
add
jbe
rcll
mov
xor
fcomps
ja
lds
stos
or
sub
inc
aam
pop
pop
test
jecxz
cmp
dec
movsb
mov
sbb
das
test
pusha
jns
lret
jg
adc
push
xor
lods
xor
je
je
enter
push
push
mov
dec
add
and
jle
cmpsl
dec
push
jae
inc
mov
ds
std
stos
sbb
fiadds
icebp
pop
test
add
mov
lret
sub
test
inc
cmc
inc
jb
ret
and
fldl2t
negl
lods
add
jbe
inc
cmpsb
pusha
cld
fisubl
lret
enter
push
push
not
mov
add
jnp
or
das
jge
push
imul
or
xor
dec
les
lret
add
popa
mov
popf
bound
lsl
sbb
pop
push
add
pop
or
and
jle
mov
and
jb
pusha
sbb
adc
movsb
mov
push
jne
xor
adc
mov
pusha
ret
jbe
mov
rclb
sbb
sbb
jb
push
popf
adc
sub
aam
and
push
movsl
or
aas
jb
dec
gs
xchg
decb
cmc
inc
mov
adc
arpl
popa
mov
mov
in
and
lds
fnsave
pop
test
loope
cmp
pop
pop
add
lods
push
mov
mov
adc
bound
push
push
cli
out
test
leave
push
rolb
push
jb
inc
into
dec
mov
imul
jo
and
sbb
fisubs
test
pop
test
and
hlt
push
test
ja
es
cmp
jmp
int
xor
dec
out
sbb
out
inc
mov
daa
mov
mov
iret
sti
insb
mov
pop
mov
push
mov
jbe
mov
jb
and
loop
sub
cmc
lds
inc
mov
mov
cwtl
int
repnz
add
into
xor
es
cmp
in
push
pushf
xor
iret
dec
test
sbb
fbld
inc
ficomps
cmc
add
push
shll
and
enter
repz
jbe
insb
dec
mov
sub
hlt
xchg
or
or
xor
int
mov
mov
or
mov
xchg
push
xchg
mov
in
shrb
rorb
sub
pop
es
mov
ljmp
and
mov
cmc
iret
lea
sub
mov
jo
enter
cltd
shrb
int
loope
clc
fstps
or
fsubrs
xor
cmp
fnstsw
aam
and
and
movsb
mov
rol
jo
enter
add
movsl
mov
xchg
push
sbb
scas
xor
cmc
and
add
dec
loopne
enter
cmpsl
and
test
dec
inc
inc
sbb
pop
pop
repnz
vprotq
or
dec
hlt
dec
leave
xor
dec
popf
cmp
andb
jnp
mov
dec
sarb
jp
mov
sub
push
arpl
dec
jne
mov
js
lret
dec
jge
fcmovnbe
adc
mov
xor
leave
stos
into
aad
cmp
mov
out
ret
mov
add
inc
dec
outsl
leave
mov
xor
xor
gs
add
add
mov
pop
mov
rorl
jo
xchg
enter
mov
cld
push
fsts
or
pop
jno
je
inc
sbb
fsubs
push
xor
xorl
push
mov
leave
imul
cli
lds
mov
scas
loopne
popf
repz
add
or
aam
sub
pop
pop
leave
xchg
pop
ret
pop
pop
adc
ret
and
cmp
jno
pop
cmp
mov
jbe
mov
pop
push
clc
sub
repnz
fcmovnb
or
push
push
sbb
and
xor
xchg
test
cmc
sub
cmpsl
xchg
repnz
cmp
hlt
mov
pop
loope
stc
sub
adc
sub
or
int3
loope
fdiv
sub
into
aaa
push
ret
leave
test
sbb
jne
cmp
cwtl
push
add
lock
mov
aad
lret
mov
inc
jg
mov
or
and
push
adc
cmpb
mov
inc
and
xchg
shrl
mov
xchg
push
movsl
enter
or
mov
push
mov
cmp
or
xchg
fadd
std
push
rorb
push
and
pop
popf
call
dec
lret
mov
push
div
xchg
pop
push
cmc
xchg
out
cmp
movd
dec
or
ret
push
lret
or
pop
ret
test
mov
add
inc
jo
jge
imul
loope
and
je
call
xor
out
or
pop
ljmp
add
inc
jo
pop
test
lods
push
xorl
and
sbb
push
pop
mov
jae
mov
sbb
in
cmpsl
adc
hlt
jo
jmp
and
mov
scas
cmp
shl
mov
dec
jae
cmp
mov
mov
jmp
jno
inc
hlt
nopl
or
clc
flds
sub
cmpsl
push
testb
popa
test
cmp
leave
mov
xor
xorb
rorl
mov
mov
jg
cmc
aad
jae
ja
and
add
xchg
inc
lods
push
or
xor
outsl
aam
mov
test
pop
sbb
or
pop
jge
xor
mov
mov
stos
push
aam
lret
enter
and
dec
jge
and
mov
dec
loope
adc
xor
mov
pop
fisttpl
test
aaa
or
out
sbb
mov
lock
mov
pop
icebp
repz
mov
repnz
xor
pop
add
int3
pop
jg
pop
test
icebp
pushf
into
outsb
sbb
leave
imul
jmp
adc
aam
lret
mov
or
cwtl
test
stos
jns
sbb
fildll
std
lds
or
test
stos
aaa
cmpsl
and
sub
sti
mov
push
cld
jle
ljmp
mov
icebp
sub
iret
lds
aaa
jbe
out
stc
mov
push
dec
enter
sub
arpl
xchg
sub
test
jae
repz
repz
add
stc
pop
repnz
clc
xchg
imul
inc
sbb
mov
mov
divb
aad
imul
incl
pop
push
repz
cmp
movsb
or
dec
push
jmp
push
cld
test
sbb
ljmp
icebp
push
add
or
aaa
push
xchg
lods
and
in
pusha
xchg
xchg
stos
test
dec
xor
add
inc
dec
jns
inc
adc
scas
pop
mov
push
imul
or
adcb
jg
xor
leave
inc
dec
xlat
jns
or
rorb
leave
dec
test
repz
rol
xor
adc
sbb
or
push
push
mov
movsb
mov
and
cmp
and
repz
jo
ja
loope
imul
mov
add
sahf
jne
jle
sbb
dec
pop
add
pop
jecxz
test
push
rorb
push
sbb
test
add
pop
cmpsl
imul
mov
hlt
test
jl
arpl
dec
xor
pop
loope
add
test
aad
loope
mov
or
fwait
test
aad
in
data16
popf
inc
adc
mov
and
test
pop
and
jg
frstor
adc
int
pop
push
ret
or
lret
add
cmpsl
shufps
sbbb
xlat
mov
xor
popf
mov
add
adc
mov
pop
dec
pop
stc
and
fimuls
out
pusha
enter
arpl
test
mov
hlt
inc
cmpsl
mov
lret
or
cltd
or
nop
pop
sarb
push
xchg
xor
hlt
lods
outsb
adc
jae
loopne
cli
sbb
xlat
dec
mov
lods
iret
dec
push
leave
test
stc
or
sahf
and
shl
push
mov
in
ret
daa
mov
leave
mov
lret
ret
aas
mov
jo
pushf
push
or
into
jmp
into
push
or
lahf
mov
cmp
ltr
jmp
pop
imul
push
aas
sarl
inc
inc
push
jl
mov
push
and
aam
pushf
lahf
and
fwait
add
push
adc
add
push
jbe
or
ret
aaa
pop
sbb
mov
push
cmc
cmp
dec
push
dec
rcrb
in
cmp
fcmovb
and
sbb
popa
mov
inc
mov
jb
mov
lea
shrl
int3
mov
or
test
adc
dec
xor
out
xchg
dec
cmp
adc
sbb
jp
leave
mov
aas
ret
sub
out
and
clc
pop
sbb
pop
ret
mov
out
cmp
out
stc
xor
mov
xchg
xchg
jbe
sbb
sbb
and
pop
lret
add
mov
mov
dec
and
sub
in
push
lret
dec
test
test
xor
stc
pusha
dec
test
xor
xchg
cwtl
shl
fstp
dec
pop
testb
rcrl
jb
sub
push
lret
loope
or
inc
mov
mov
or
adc
inc
jno
push
and
jae
rol
mov
daa
push
rcrl
sbb
sti
test
or
test
xchg
sub
int
dec
int
push
ret
lds
ljmp
adc
dec
mov
pop
adc
or
adc
pop
mov
mov
mov
jp
cmp
dec
cmpsl
cli
dec
xor
repnz
aaa
repz
jge
sub
sub
or
outsb
or
mov
fs
xchg
lret
or
popf
inc
fcmovnb
std
xchg
jnp
sbb
mov
xchg
inc
xorl
dec
lods
and
mov
or
enter
push
mov
aam
mov
inc
mov
inc
lret
ret
and
xchg
xchg
out
add
daa
jge
push
cmovno
scas
mov
pop
rcl
ja
jbe
and
mov
jecxz
inc
movsb
mov
leave
pop
jb
lds
add
cmp
ds
out
aaa
and
or
xchg
xchg
sub
mov
xchg
mov
or
or
add
mov
into
dec
arpl
cs
cmp
shll
jle
or
repz
sbb
aas
aad
fnop
adc
xchg
clc
int
sti
jo
dec
dec
pusha
xor
int3
div
test
int
pop
dec
mov
iret
lods
cli
jne
dec
sub
dec
and
xor
lods
push
lds
std
leave
faddl
adc
adc
popf
movsl
out
mov
sarb
rclb
aam
aad
shlb
faddl
clc
jns
mov
filds
add
cmpsb
into
imul
gs
pushf
mov
insl
call
mov
ds
add
dec
mov
inc
imul
call
jb
sub
fstpt
push
xor
mov
mov
in
cmp
test
loope,pn
jo
lds
mov
inc
xchg
das
fnsetpm(287
flds
lret
lcall
stos
ljmp
pop
popa
pop
stos
fcomp
cmpsb
cltd
dec
push
test
xor
push
mov
fnsave
cli
ds
mov
mov
fsubrs
lret
push
arpl
int
aam
ret
sbb
cmovno
mov
push
xchg
nop
lods
out
xlat
or
mov
or
or
sub
push
icebp
test
inc
mov
fldl2t
aam
repnz
sbb
mov
shlb
cmpb
inc
sub
enter
lret
xchg
std
sti
xchg
mov
ret
nop
pop
jo
mov
jmp
insb
ret
or
aaa
push
sub
mov
mov
push
repz
stos
mov
add
lret
jg
les
adc
sarb
cmc
ret
push
dec
cmc
push
rorb
inc
sbb
jne
repz
and
lret
inc
dec
mov
insb
loopne
sub
fucomp
scas
mov
addr16
xor
adc
hlt
xchg
loope
dec
push
lahf
jmp
icebp
mov
cmpsl
jo
mov
fdivr
shrl
ljmp
and
sub
sbb
icebp
and
lret
test
mov
pushl
out
jmp
sbb
dec
mov
inc
adc
popf
jo
movl
mov
xor
in
cmpsb
jmp
mov
enter
dec
daa
sub
jle
dec
icebp
bound
mov
xchg
mov
cwtl
aam
rol
int
mov
fisttpll
push
leave
jle
push
lcall
notl
and
ds
and
push
rol
sbb
cmc
inc
and
mov
ret
aas
pusha
enter
push
pop
dec
dec
mov
mov
pop
push
into
loop
mov
stc
jb
jns
dec
pop
dec
fistps
in
mov
stos
fstpl
sub
and
pop
out
ror
pushf
xor
fs
shl
push
in
xchg
or
or
sub
repz
fwait
jecxz
dec
sbb
inc
or
add
cs
inc
pop
add
xlat
shll
shl
enter
mov
popf
or
inc
adc
andb
dec
mov
insl
rcll
stc
jle
add
mov
ds
xchg
and
xor
shrl
dec
sbb
mov
xor
aam
and
cmp
and
fs
stos
mov
mov
icebp
nop
jns
ljmp
loope
shrl
push
icebp
fwait
jbe
push
add
mov
cli
push
loope
dec
ja
ret
cmpb
mov
mov
mov
and
cs
nop
and
fiadds
inc
shll
mov
lods
cmp
xlat
mov
cmpsl
xchg
js
add
clc
gs
ja
subl
or
in
mov
push
adc
jecxz
into
pop
pmuludq
test
inc
jp
sbb
jl
cwtl
or
in
out
cwtl
cmp
incb
xchg
pop
lea
jo
sar
loope
cltd
test
orl
inc
cmp
and
sbb
cmp
adc
subb
std
out
leave
push
xor
lret
jns
dec
mov
dec
pop
rcrl
xchg
into
mov
clc
test
lds
add
jmp
leave
dec
divl
out
subb
cmpsb
mov
nop
mov
stos
add
roll
jnp
clc
add
or
roll
stos
push
icebp
enter
loope
stc
and
inc
ja
cmpsl
push
ja
stos
push
jb
add
push
adc
mov
xor
xchg
mov
clc
inc
and
sarb
add
or
mov
add
jecxz
repz
xor
into
jae
mov
mov
adcl
mov
cmp
jae
loope
movsl
movsb
mov
ja
cmp
js
xor
mov
imul
dec
hlt
ja
andl
jnp
orb
sub
push
mov
ret
les
add
dec
shll
dec
stc
mov
ljmp
dec
icebp
dec
add
lods
lock
cmc
stc
mov
stos
xor
mov
aaa
std
cmp
lods
dec
and
leave
mov
icebp
add
cmc
cmp
pop
out
mov
add
push
or
add
pusha
mov
or
decl
sbb
cld
icebp
dec
dec
mov
dec
mov
sar
mov
mov
and
lahf
adc
cmp
dec
push
int
inc
pop
jne
or
jnp
and
xor
lods
in
pop
mov
sbb
in
aas
out
outsb
push
ljmp
cmc
and
out
outsl
xor
pop
scas
aam
push
jmp
or
jnp
mov
loope
imull
mov
stos
in
add
and
lds
adc
ror
hlt
mov
repnz
push
shlb
jne
push
dec
or
mov
ja
add
jae
dec
insb
add
or
ret
xor
dec
insl
or
or
sbb
sbb
sbb
jecxz
push
dec
les
insl
hlt
popa
jecxz
jg
icebp
out
dec
cmp
add
test
in
jns
in
clc
icebp
inc
ljmp
jmp
or
add
test
pop
push
inc
hlt
inc
xchg
mov
dec
mov
push
inc
inc
arpl
icebp
mov
mul
cmc
cmpsb
xchg
cmp
or
gs
in
mov
jmp
xor
dec
cmp
sub
inc
cmp
outsb
xchg
stc
add
push
ja
roll
mov
verw
and
mov
pop
jle
sbb
xchg
test
iret
out
sub
jle
loopne
cmp
or
jp
andl
cmpsl
sbb
stc
ljmp
add
xchg
inc
jne
jg
in
mov
fsub
jne
les
pop
ja
insl
xor
hlt
add
jnp
adc
cmpsb
sbb
dec
out
push
inc
std
mov
lock
test
imul
mov
jg
bound
mov
aaa
adc
inc
push
popa
imul
mov
mov
into
aad
jp
mov
mov
lock
push
inc
push
adc
or
leave
stos
push
hlt
sbb
lret
mov
mov
jae
clc
sti
out
stc
xor
sbb
mov
js
icebp
jmp
cmp
jns
or
xchg
lds
pop
pop
cmc
or
mov
pop
fldcw
dec
cmc
xor
pop
std
mov
out
incb
cltd
sbb
in
add
andb
sub
cmp
dec
cmp
mov
jle
or
pop
cmpsb
std
leave
pushf
add
cld
cli
dec
dec
imul
inc
shrb
dec
shll
dec
mov
or
push
adc
cli
test
xchg
fsubrs
loope
push
push
mov
xchg
push
mov
xchg
stos
sbb
jecxz
cmc
int3
das
bound
mov
int
cmp
stos
lret
and
or
push
int3
xor
inc
aaa
jmp
aad
popa
inc
pop
insl
xor
lods
test
jle
loope
lods
push
inc
hlt
stos
ss
lret
sti
shrb
punpcklbw
mov
gs
scas
jns
mov
push
xchg
pop
out
pushf
push
push
sub
cmc
out
add
bound
test
mov
divl
xor
movsl
fisubrs
outsb
push
and
and
cld
insl
test
lods
mov
lods
push
fsubr
pop
mov
xor
and
pop
xchg
cmc
std
repz
and
dec
mov
and
add
push
push
sbb
cli
pop
cmp
jbe
add
dec
loopne
nop
imul
mov
and
cld
cmp
mov
push
inc
rcl
dec
arpl
dec
dec
mov
push
frstor
mov
ja
loop
dec
shl
test
ja
pop
pop
and
in
nop
fidivs
in
or
out
js
add
stc
aam
add
add
cli
fs
or
inc
test
cmpsl
loopne
stos
sub
xor
dec
and
xchg
inc
push
data16
or
add
fdivl
mov
xor
or
jge
push
enter
mov
inc
ffreep
test
pop
orb
lds
mov
into
jecxz
cmp
imul
notl
push
not
fstpt
adc
sbb
adc
leave
jle
pop
gs
add
cmpsl
mov
cmp
lret
inc
mov
stos
mov
in
dec
cmp
xchg
mov
roll
add
xor
jle
mov
sarb
or
pop
mov
int3
stos
adc
dec
hlt
std
inc
aam
xchg
aam
pop
adc
or
repnz
subl
loop
dec
mov
inc
movsl
dec
shll
push
ljmp
icebp
mov
sbb
or
inc
sub
fidivl
out
and
test
stc
adc
notl
and
test
lret
ret
cmp
xorl
xchg
call
je
test
scas
xor
cmp
pop
test
jge
in
mov
dec
and
add
shrb
add
rcrb
xchg
jmp
sub
stos
fimull
hlt
and
xor
push
dec
sub
aaa
xor
jp
inc
dec
mov
in
aaa
xor
idivb
add
sub
jae
push
shl
clc
push
xor
mov
dec
sub
test
mov
mov
push
lock
std
and
stos
ret
in
xor
mov
inc
int
leave
pop
ret
mov
rolb
jge
subb
adc
mov
mov
or
cmp
test
cli
adc
paddw
nop
push
jmp
xor
inc
inc
out
inc
test
imul
ljmp
mov
cwtl
xchg
lea
sti
in
pop
mov
popa
cli
xchg
imul
icebp
inc
inc
dec
adc
fs
test
add
jne
adc
xchg
sub
ja
pop
and
fwait
mov
xchg
popf
ljmp
mov
cmp
ficompl
xchg
push
iret
jnp
ret
cmc
cltd
push
lahf
ljmp
daa
mov
aas
popf
jno
dec
mov
mov
add
or
fisubrs
imul
push
jmp
xor
push
rorl
jae
ret
pop
xlat
cli
aas
mov
inc
pop
rorl
repnz
enter
lret
loopne
iret
scas
rcll
mov
mov
xchg
mov
push
lret
sub
arpl
dec
test
pushf
adc
scas
shl
and
jmp
inc
stc
into
jle
xchg
or
adc
xor
out
lds
fwait
hlt
les
mov
push
out
mov
setbe
sub
movsb
or
ret
loop
push
roll
or
add
dec
repnz
xor
jmp
push
scas
inc
repz
cmp
pop
pop
inc
or
xor
push
lahf
adc
pop
sub
icebp
faddp
dec
xor
das
aam
scas
adc
xchg
push
out
or
lret
loop
or
loopne
and
test
icebp
push
rorl
jecxz
push
pop
mov
sbb
mov
or
sub
test
stos
std
xchg
xor
call
mov
jo
mov
push
aad
insl
pop
mov
leave
test
mov
rcrb
xor
cmp
data16
dec
enter
aad
ja
orl
adc
lods
adc
mov
mov
or
lahf
add
push
loope
pushf
movsl
test
dec
add
mov
test
jmp
mov
sti
and
jmp
cmc
mov
sbb
push
stos
sbb
ja
sbb
inc
dec
lock
lods
cli
mov
icebp
testl
popf
jae
mov
or
lock
inc
sbb
std
adc
jae
stos
inc
jecxz
int
jmp
or
xchg
stos
stos
mov
xchg
je
or
test
lret
in
je
inc
imul
test
stos
inc
call
pop
pop
xor
ret
pop
push
mov
cmp
xor
cmp
mov
insb
icebp
add
ss
inc
or
adc
jne
mov
cld
cmc
inc
aas
imul
out
cmp
inc
insb
lods
fildl
shlb
xlat
dec
push
sbb
or
inc
pop
inc
add
shrb
lcall
flds
xchg
shlb
stos
mov
icebp
fwait
test
xchg
notb
add
xchg
dec
rolb
mov
or
cmpsl
and
decb
ljmp
adc
mov
xor
loope
xchg
arpl
out
xor
dec
mov
addl
sub
mov
in
xchg
jbe
dec
adc
leave
ds
ficoms
mov
lds
mov
or
cmc
in
fnstsw
pop
push
fisttpll
dec
jmp
jno
loope
mov
add
test
or
insb
daa
push
ret
nop
and
mov
es
bound
dec
rclb
xor
mov
loop
leave
icebp
movsb
jecxz
das
cmpsl
or
imul
or
mov
pop
mov
shl
cmpsb
mov
enter
jbe
fs
mov
and
push
and
adc
jecxz
lahf
js
jne
cwtl
adc
adc
xchg
rcll
pop
bound
daa
pop
iret
test
jns
inc
aam
test
xor
stc
dec
add
stos
adc
inc
or
js
ljmp
or
add
xchg
fcomip
or
xor
cmp
or
mov
jge
xor
clc
cmc
add
jmp
movhps
repz
aas
fsts
ret
repnz
mov
test
dec
iret
fnstenv
test
lds
xor
std
wrmsr
xor
out
xchg
cltd
pop
daa
cmpsb
ret
cmc
hlt
jp
rcl
push
sbb
add
or
xchg
fisubs
aaa
jmp
xchg
imul
mov
movsb
xor
jns
out
sbb
add
dec
inc
ja
xor
mov
jl
inc
ret
ret
loope
push
sbb
loope
lret
add
nop
lret
sbb
std
int3
mov
xor
xchg
in
iret
sub
cld
aam
dec
jecxz
pop
sbbl
mov
push
fldl
dec
jmp
jno
negl
add
mov
test
sbb
sub
jle
popa
add
jbe
xchg
out
shll
add
popf
push
pop
inc
shrl
sbb
xchg
dec
lds
inc
jmp
add
and
inc
clc
pop
dec
ljmp
or
sub
adc
enter
leave
xchg
jae
cli
testl
xchg
dec
fstps
xor
and
shlb
loopne
pop
adc
cmp
stos
insb
inc
mov
and
jle
inc
clc
mov
mov
lret
jmp
cmc
xor
cmpsb
stos
adc
je
iret
aad
popf
cmp
mov
ret
sarl
shl
fwait
mov
lea
dec
sub
and
and
mov
xchg
dec
dec
mov
loop
outsl
xchg
cmpl
pop
jecxz
add
mov
stos
pop
stos
sub
sbb
aas
fcmovne
dec
mov
add
rcrl
stos
or
mov
test
dec
or
insl
dec
and
and
cmp
es
or
out
movsl
add
retw
pushf
dec
stos
popf
cwtl
insl
lds
push
inc
imul
push
in
sub
aaa
mov
rorb
stos
mov
mov
or
add
xchg
jge
repnz
mov
add
orb
pop
add
inc
movsl
leave
int
xchg
lock
out
xor
ljmp
inc
les
sub
daa
mov
int3
sysret
test
jne
dec
ret
outsl
pusha
push
fsubl
jmp
aad
stos
cwtl
xchg
out
push
rcrl
pop
mulb
arpl
sarl
jg
insl
shr
pop
mov
aam
jae
and
dec
cmp
sub
pop
sub
sahf
icebp
dec
fcmovnbe
add
push
outsl
dec
div
jle
andl
sarb
sbb
imul
xor
repnz
sbb
stos
inc
outsl
adc
lds
jle
pusha
inc
roll
pusha
fwait
cmp
sar
adc
jmp
push
jmp
cmpsl
or
movsl
loopne
pop
mov
push
jp
mov
jbe
push
repz
dec
leave
stc
dec
and
or
or
sbb
sbb
iret
cmp
sbb
push
push
jg
mov
lret
loope
lcall
clc
cmpsl
and
int
in
mov
push
cmp
pop
out
mov
dec
sub
f2xm1
arpl
pop
add
inc
xlat
xor
cmc
gs
sahf
out
jmp
mov
or
jnp
cwtl
jae
jae
shll
lahf
hlt
fdiv
test
je
sub
rcll
repz
sbb
arpl
enter
push
and
arpl
sbb
add
scas
loopne
mov
or
push
ret
sbb
add
xchg
ret
cltd
push
loopne
in
add
mov
aad
jle
push
xorl
jo
inc
inc
movsb
pop
xor
add
imul
imul
push
ljmp
lock
and
les
dec
mov
cltd
mov
cwtl
sti
jmp
out
mov
mov
adc
loope
dec
mov
stos
iret
mov
or
sahf
pop
mov
dec
and
jge
sbb
xchg
addr16
mov
pop
xchg
div
mov
jp
imul
xchg
mov
notl
lret
jge
gs
pop
icebp
int3
test
call
pop
jl
adc
xchg
jecxz
stos
aad
xor
xor
stos
dec
int3
dec
aas
adc
jge
dec
mov
int3
push
or
fdivrl
gs
or
mov
shll
insb
aam
push
add
int
iret
mov
loop
sub
jbe
imul
in
cmp
xor
jl
lea
lds
adc
mov
sub
cmpsb
xor
dec
outsl
pop
xor
adc
test
movups
xchg
ret
mov
pop
mov
sbb
int3
dec
mov
jp
push
sbb
mov
test
xchg
xchg
inc
into
add
das
dec
xchg
or
leave
or
adc
mov
pop
stos
cmpsb
mov
mov
xchg
jg
xor
fdivrs
cmpb
les
stos
xor
mov
push
xor
sub
inc
sahf
aaa
rcr
cs
xor
fst
imull
cmpsb
push
outsl
call
fwait
mov
data16
rorb
add
push
call
rolb
gs
lret
sbb
pop
sub
imul
scas
test
jno
add
out
fld
mov
insl
jmp
les
repnz
inc
test
push
fstl
cs
push
rorb
jnp
sbb
adc
add
add
add
jno
push
mov
int
fsubrs
inc
jl
hlt
enter
scas
stos
movsl
xlat
jbe
xor
mov
sarl
pop
xchg
jecxz
mov
add
inc
jmp
dec
mov
pop
testl
xor
jp
int
or
add
lret
sub
and
out
hlt
popa
push
mov
andl
aam
fldenv
jg
rorl
push
mov
addr16
pushf
mov
dec
add
lret
sbb
push
jns
adc
add
mov
out
test
xor
add
stos
mov
mov
dec
sub
xor
out
ja
repz
fildll
pop
rcl
lds
add
mov
sbb
xor
cs
into
add
and
andb
push
dec
adc
mov
lret
mov
mov
inc
std
cmc
sbb
std
push
cmp
sub
sarb
lret
test
loope
push
call
jo
mov
jmp
add
divb
pop
mov
ljmp
fs
inc
dec
dec
mov
cmc
or
mov
cmc
call
andb
push
mov
call
mov
movsl
push
mov
inc
mov
in
add
xchg
mov
subb
test
test
ds
adc
cmp
sbb
stos
int
mov
mov
dec
xchg
mov
inc
sub
ret
aad
js
orb
or
cld
or
das
cltd
test
arpl
mov
pushl
sub
aas
mov
cmp
sbb
add
xor
cli
or
repnz
and
call
clc
push
fsubl
fwait
rcll
pop
inc
mov
inc
sub
in
and
sub
xor
out
push
cli
adc
rorl
out
cmc
jnp
xchg
stc
ljmp
push
adc
inc
push
in
and
xor
or
push
call
cmc
adc
int3
sbb
imull
or
add
mov
mov
mov
cmp
mov
jb
mov
mov
pop
jae
push
and
loope
or
xchg
sub
mov
mov
mov
xchg
jecxz
int3
lret
mov
xchg
dec
int
jo
cmpsl
fcmovnb
inc
adc
sahf
pop
enter
aaa
in
mov
stos
cbtw
pop
xor
cli
mov
and
movsb
sub
or
sub
sub
out
mov
out
test
cmpsl
or
xchg
or
mov
xor
test
scas
xchg
and
ja
mov
add
sarb
pop
inc
xchg
jle
lds
ljmp
mov
jae
cmpsb
add
ret
ja
dec
jnp
mov
adc
or
jle
inc
ror
or
sahf
and
cmp
cli
mov
imul
mov
in
sbb
cltd
sbb
rcr
xchg
or
test
jp
repz
mov
leave
jle
lods
adc
sub
sbb
jmp
mov
in
fisubrs
faddp
aam
xor
out
popa
popf
sub
leave
push
paddusw
lock
loop
cmp
sbb
shlb
maxps
add
mov
cmp
aam
mov
xor
sbb
dec
and
int
dec
leave
out
pop
shr
mov
and
fidivl
mov
push
sbb
or
stos
cltd
adc
adc
lds
in
jb
les
stos
push
mov
mov
gs
mov
fsub
adc
dec
in
leave
mov
add
pop
add
sbbb
fwait
insl
lock
xor
outsb
push
adc
test
decb
sbb
shrl
push
icebp
cmpsl
js
cmc
into
mov
jb
rorb
js
popf
shlb
dec
les
mov
sub
add
mov
cli
int3
add
cli
jg
les
and
movsl
rolb
lods
xlat
pop
pushf
adc
push
nop
push
sarb
push
sbb
std
adc
std
xchg
and
loope
test
inc
mov
add
testl
xchg
add
mov
or
jo
pop
ljmp
lods
shll
xor
jns
push
inc
mul
das
test
push
mov
sti
and
imul
fistl
pop
fsubs
je
push
and
addl
dec
stc
sub
and
inc
addl
mov
xchg
adc
sbb
int
call
dec
lock
cwtl
outsb
inc
shrl
mov
ret
insb
inc
sbb
cs
roll
outsl
sbb
dec
cmp
sti
push
inc
dec
icebp
mov
in
or
inc
shrl
enter
loopne
aaa
popa
sbb
out
add
adc
sub
les
repz
sbb
test
jb
mov
add
jbe
xor
add
sbb
lcall
ror
inc
inc
push
mov
fsubs
lock
ret
xor
into
dec
les
sarl
addr16
inc
jecxz
jmp
mov
jne
mov
mov
jns
shrl
nop
sbb
das
add
scas
mov
push
aad
adc
cmp
mov
std
mov
mov
outsl
insb
add
add
popf
aam
lds
bound
push
lahf
loopne
rorl
fsts
aad
adc
mov
pop
cmp
cwtl
out
fcmovnb
jae
and
sbb
testl
out
arpl
dec
dec
lds
jbe
inc
and
push
popf
imul
rorb
fnstsw
pop
xor
repz
lock
adc
jl
int
ds
adc
test
cltd
mov
and
sbb
push
pop
adc
mov
aaa
xor
dec
mov
aaa
push
sbb
mov
pop
lret
imul
mov
dec
push
push
clc
xchg
mov
mov
pop
pop
ret
mov
nop
bound
xor
rcll
addr16
stc
dec
mov
fcmovnb
movl
pop
push
orb
add
dec
sub
inc
hlt
inc
cmc
mov
pushf
es
lret
jge
stos
cmp
adc
push
xlat
dec
or
jle
jno
mov
mov
negl
repnz
shr
jns
dec
push
ffree
and
dec
out
inc
pop
mov
inc
mov
ds
mov
add
pop
ret
mov
or
stos
and
fdivrl
sbb
outsl
and
add
shll
in
loopne
sub
ret
inc
ljmp
leave
xor
and
imul
and
and
sahf
xor
loop
ljmp
outsb
jbe
shr
jge
popf
loopne
and
cmp
and
dec
inc
dec
daa
aaa
xor
test
ret
mov
dec
nop
ret
or
decb
dec
fdivrs
mov
inc
jmp
arpl
flds
adc
aaa
jp
mov
loope
loope
or
jg
dec
stos
sbb
adc
push
rorl
push
in
cmc
xor
inc
jbe
aam
pop
push
xchg
mov
popf
or
lcall
sbb
mov
pop
pushf
inc
sbb
jnp
add
hlt
pop
jnp
xor
pusha
mov
and
lea
inc
fisubl
push
push
es
sbb
les
sbb
roll
adc
ret
clc
mov
cmc
xchg
jns
sub
inc
aad
lods
ror
jmp
orl
and
aam
popa
imul
sahf
add
aam
cltd
stc
push
xor
movsb
sub
xchg
dec
push
dec
aad
cltd
or
in
xor
push
call
loop
adc
mov
xor
inc
movd
std
xchg
in
add
sub
pop
or
mov
add
into
je
aam
cmc
pop
stos
testb
lods
inc
sub
popf
cwtl
imul
push
dec
aam
test
pushf
xchg
push
cmp
sbb
jne
fs
add
stos
mov
pop
not
jecxz
xor
adc
jns
rcll
add
dec
inc
ret
addr16
scas
jmp
or
aas
jg
popf
jge
or
outsl
pop
comiss
push
fnstenv
xor
adc
mov
or
movsb
notb
jl
es
xor
mov
or
cmp
jbe
mov
cli
dec
cmp
mov
sbb
add
push
ja
sub
cmpsl
inc
mov
lds
in
ljmp
dec
aaa
dec
popa
mov
push
addr16
sub
add
or
sbb
cmc
pop
add
in
cmp
daa
mov
mov
les
and
push
aam
pop
push
aaa
sbb
les
cmpl
int
sbb
dec
mov
in
sub
jge
addb
inc
push
movsb
adc
xor
js
bound
inc
repz
fisttps
inc
repz
jo
sbb
add
pop
pop
stos
lahf
sbb
loope
jnp
cmp
jne
add
pop
ret
hlt
in
insb
mov
bound
dec
stos
aam
lea
push
mov
and
lds
add
adc
negl
xchg
or
jge
pop
and
jg
and
repz
inc
adc
xchg
aam
std
and
jl
and
dec
je
or
jmp
punpckhdq
in
out
mov
push
inc
add
fnstsw
ss
dec
in
inc
adc
dec
int
out
adcb
rorb
int
pop
jo
icebp
stos
mov
imul
mov
mov
fsubr
mov
les
sub
gs
loopne
and
jbe
mov
jmp
add
es
sbbb
iret
mov
jbe
aad
mov
pushf
ljmp
jb
and
cwtl
test
xor
cltd
inc
and
dec
test
ret
divl
int3
dec
dec
dec
jp
idivl
xor
ror
inc
inc
xor
cmp
pop
jmp
out
fadd
shll
mov
rorb
mov
shlb
dec
hlt
mov
out
aaa
leave
clc
and
jmp
mov
enter
push
cltd
adc
hlt
mov
orl
insb
or
jnp
cltd
ljmp
jle
lret
cmpsl
jo
and
dec
mov
jecxz
xchg
add
call
or
jmp
mov
mov
scas
test
or
add
cli
mov
add
fdivs
scas
and
dec
and
push
in
andb
dec
jmp
int3
stos
mov
je
push
nop
vpminsw
add
and
scas
or
mov
cwtl
int
lds
adc
hlt
test
punpckldq
test
sub
rorl
cmp
cld
inc
test
jno
ret
repnz
daa
mov
inc
or
cli
orb
into
pop
lahf
pop
repnz
call
bound
add
cmp
add
push
mov
pop
cmc
fwait
and
addr16
call
loop
jno
cli
jb
inc
cmpsb
fistpl
and
mov
dec
and
inc
pusha
fnsave
mov
xor
lds
movsl
mov
mov
inc
inc
adc
adc
inc
xor
add
pop
icebp
push
in
pop
or
jne
loope
flds
ss
inc
xor
out
call
inc
lock
insl
push
test
mov
out
dec
xchg
sbb
cmp
mov
jb
stos
mov
fwait
mov
js
add
aam
xor
dec
add
mov
inc
xchg
repz
ret
sti
orb
and
mov
push
cmp
lahf
xchg
movaps
adc
data16
stos
push
shll
xchg
iret
inc
inc
repnz
ds
pop
sbb
je
or
inc
fxch
div
mov
add
adc
stos
ret
out
enter
or
aad
dec
dec
mov
or
sbb
test
dec
mov
pop
adc
shrb
enter
cmpsl
xor
mov
mov
adc
jnp
push
rol
mov
movsb
mov
push
mov
add
shl
out
dec
mov
aaa
bound
je
cli
jg
cmp
adc
fiadds
mov
pop
nop
scas
pop
or
add
les
dec
or
ja
add
adc
enter
into
outsb
jo
aas
loop
mov
and
pop
cld
mov
imul
jns
xchg
imul
mov
popf
fimuls
pop
mov
in
rorl
pop
mov
fcom
mov
and
mov
ljmp
cmpsb
fwait
js
cmpsl
inc
mov
mulb
mov
mov
rcr
pop
fldl
shll
cld
adc
push
ja
inc
or
jle
xchg
clc
pop
dec
lds
imul
in
aam
popa
in
rolb
dec
sub
in
mov
or
outsb
test
add
mov
mov
cli
mov
aaa
insb
sbb
cli
jno
dec
lret
dec
call
repz
icebp
enter
add
dec
mov
dec
enter
dec
mov
hlt
xchg
mov
jno
and
jecxz
adc
dec
out
jbe
imul
rorb
dec
lds
mov
insb
inc
hlt
xor
sar
cmpb
stos
imul
fwait
mov
dec
enter
sbb
div
and
mov
out
sub
rcll
inc
jne
fisttpl
push
ror
popa
mov
sub
jg
dec
pop
or
call
pop
or
loopne
cmp
or
test
or
movsl
push
ljmp
add
mov
mov
dec
pop
std
bound
inc
mov
xchg
dec
icebp
out
stos
or
stos
jg
scas
ljmp
add
in
or
subb
jge
pop
inc
add
ljmp
push
dec
add
pop
std
mov
add
cli
aas
ret
ljmp
leave
rol
in
sahf
xor
stos
in
mov
or
in
or
sbb
xchg
mov
xchg
imul
pop
ljmp
sbb
jmp
xor
jae
ret
out
cwtl
jo
mov
lahf
add
imul
jae
stc
leave
in
test
cmp
pop
jmp
testb
lods
and
aad
adc
lock
rorb
xchg
in
mov
fsubl
ljmp
mov
loop
icebp
daa
les
mov
vpsubd
xor
xor
push
shl
imul
subl
dec
or
inc
xchg
cmpsl
adc
mov
mov
xor
inc
popa
repz
rorb
pop
enter
jmp
xor
sahf
loop
adc
stc
mov
cld
or
fsqrt
mov
adc
jae
push
and
pop
or
dec
mov
shll
mov
mov
inc
jmp
ficompl
sahf
sub
loope
dec
or
push
loop
scas
jg
bswap
mov
xor
arpl
mov
test
mov
aad
fnsave
test
lahf
out
stos
sbb
sub
pop
popl
ret
test
in
mov
std
inc
dec
popa
mov
cmp
inc
jbe
je
aam
adc
mov
mov
loope
subl
jbe
dec
jo
dec
outsb
adc
andb
stos
push
push
test
test
and
xor
jp
cmpsb
add
mov
pop
sub
ret
mov
shlb
mov
sub
shll
mov
insb
sarl
repz
imul
push
dec
fnsave
aad
sti
jae
andl
mov
fdiv
mov
sub
stos
push
cmpsl
and
test
dec
test
fdivr
ds
dec
mov
adc
lds
dec
cmc
dec
jecxz
mov
mov
lds
loop
add
pop
sbb
int
lcall
into
xor
jecxz
xlat
pop
adc
xor
andb
iret
mov
mov
lds
inc
mov
xchg
lods
mov
out
popa
rolb
mov
lret
push
pop
rcrl
iret
lds
dec
mov
jecxz
xlat
mov
sub
lds
adc
ds
xor
mov
mov
aam
xchg
mov
fadds
leave
dec
jne
bndstx
pop
pop
fisttpl
sbb
jns
mov
in
inc
xor
loope
jne
xor
icebp
xor
mov
mov
push
sbb
fldcw
add
mov
lods
or
inc
icebp
mov
ljmp
int
adc
mov
cltd
lcall
mov
dec
cmp
fxsave
xlat
or
scas
loop
jb
in
addb
enter
sbb
or
leave
dec
shlb
aas
sub
ret
inc
cli
mov
cmp
stos
mov
sub
dec
and
mov
stos
cmc
or
inc
sbb
jle
or
aad
adc
gs
and
or
jae
outsl
mov
movsl
repnz
ficompl
icebp
lret
cmp
ffree
repz
ret
fs
jge
xor
dec
shrb
push
ret
add
jmp
rep
pop
inc
imul
fwait
and
aaa
xlat
cmc
mov
enter
sahf
cmpsl
pusha
leave
jl
add
cmpsl
iret
and
enter
pop
mov
aaa
xor
push
rcl
dec
aaa
pop
pop
sbb
ret
loop
insl
ss
jbe
inc
push
inc
testb
rclb
shl
mov
pushf
mov
hlt
nop
mov
repz
xchg
test
push
cmp
add
hlt
jns
ret
sarl
sbb
jae
lods
shlb
test
pusha
lea
jg
push
out
bound
inc
mov
clc
into
and
movsl
lret
out
mov
sbb
test
jmp
add
lcall
xchg
xchg
jne
insb
xchg
enter
int
clc
jg
int3
aam
fbld
shr
mov
jp
cld
js
push
imul
sbb
mov
ljmp
leave
mov
and
data16
and
daa
jb
mov
roll
jno
ljmp
ret
sub
dec
test
cmpsb
adc
outsb
lahf
adc
cmpsb
xor
pop
and
jecxz
addb
nop
inc
dec
push
stc
pop
jbe
repz
rol
lcall
and
int3
add
cmp
mov
ret
pandn
inc
adc
in
roll
icebp
mov
dec
adc
lret
test
lcall
mov
cmp
mov
das
cmp
shlb
and
mov
push
push
aam
cltd
fxch
mov
push
cli
lcall
sub
test
shrl
imul
xor
into
add
xorl
stc
aas
into
inc
enter
sub
xorb
rorl
and
mov
js
push
add
mov
aad
add
pop
cmp
test
add
out
add
pop
adc
and
mov
mov
sub
dec
ljmp
cli
jb
and
test
scas
arpl
push
dec
xor
dec
or
enter
leave
jecxz
fsubr
xchg
fldl
mov
cmpsl
rcrb
adc
call
aam
adc
in
int3
lds
test
jae
shrl
test
mov
repnz
cmc
shrl
cld
adc
xorb
stos
test
adc
lret
in
repz
xchg
clc
sahf
cwtl
in
call
jmp
adc
xorps
mov
int
add
call
push
hlt
test
xor
mov
pop
mov
into
dec
enter
add
dec
scas
out
jp
mov
xchg
pop
ret
ljmp
sahf
and
es
or
push
mov
aaa
repnz
dec
outsb
or
test
lret
cmp
inc
dec
push
popa
jnp
sub
icebp
sbb
mov
loope
and
icebp
cmpsl
dec
push
leave
scas
clc
jecxz
fdivp
stc
shrl
mov
leave
cs
cmpl
cli
mov
and
jnp
cmp
sub
xchg
dec
sub
je
shlb
or
arpl
inc
cmc
mov
rorl
stc
jb
ret
sbb
stos
mov
mov
inc
arpl
push
xchg
mov
jg
les
xchg
jl
inc
jbe
push
xchg
inc
dec
pop
sbb
fsubs
mov
leave
cmpsl
ret
int
bound
sub
mov
negl
rcl
mov
jmp
mov
icebp
rcl
mov
out
add
sbb
nop
push
add
push
movsl
lret
addb
mov
mov
mov
xlat
popf
std
lock
dec
push
inc
call
std
ljmp
xor
into
sbbl
ret
push
andl
xchg
mov
enter
stos
jnp
shr
stos
out
push
rcr
adc
lea
mov
mov
and
call
cld
jb
in
and
dec
rolb
inc
arpl
adc
fcmovnbe
fisubl
xor
aad
mov
mov
js
jmp
and
jl
pop
out
hlt
dec
and
pop
xchg
test
pushf
xor
mov
in
jmp
mov
xchg
mov
cmovl
mov
loop
mov
sub
test
ljmp
push
or
ja
and
mov
lods
movsl
stos
cld
add
push
mov
add
cmc
jo
cli
mov
xor
adc
dec
xor
leave
iret
mov
cwtl
mov
int3
or
fbld
stos
pushf
jnp
cmc
or
inc
push
push
push
int3
inc
push
addl
hlt
jmp
adc
in
lds
adc
sub
mov
stos
test
loope
and
and
pop
lahf
adc
xlat
lss
jns
sbb
xchg
or
jo
mov
cwtl
mov
aad
sbb
jae
roll
inc
rorb
or
mov
leave
ljmp
mov
mov
stos
add
cmp
sub
fistps
repnz
cmc
jb
repnz
push
frstor
inc
add
push
in
roll
cmc
add
loope
inc
mov
dec
push
dec
jg
loopne
lds
shlb
jno
test
mov
push
int3
jbe
movb
mov
mov
mov
jbe
lds
fstps
and
aad
pushl
add
and
mov
add
in
aas
rol
addb
dec
iret
iret
dec
or
mov
add
push
mov
mov
cwtl
loope
shrb
int
ja
cmpsl
icebp
fists
cmp
pushf
inc
je
in
mov
inc
fisubs
xchg
adc
inc
cli
jae
in
mov
xor
aas
jns
sti
popl
mov
sbb
in
jno
repz
ret
lock
mov
loop
dec
jle
js
mov
mov
movl
out
inc
xorl
xchg
xchg
jmp
in
add
movsb
adc
mov
fucom
inc
pushf
pop
cmpsl
pop
cld
or
mov
inc
cmp
dec
aas
in
in
pop
xor
daa
jmp
xchg
mov
pop
pushf
push
xchg
mov
std
mov
mov
push
sbbl
adc
test
mov
dec
or
xchg
xor
loop
enter
or
outsl
loopne
jns
es
rol
mov
into
stos
dec
xor
or
out
imul
daa
fildl
mov
mov
jecxz
pop
or
pop
test
cwtl
hlt
repnz
pusha
or
dec
das
mov
lret
xor
lods
insl
mov
int
sub
cs
dec
shll
lds
push
lret
add
mov
mov
xchg
ds
cltd
aam
stos
mov
ret
call
jbe
aam
loope
xor
or
sub
fcoms
xchg
test
sbb
push
mov
dec
bound
jmp
and
mov
adc
lret
testb
jmp
repnz
add
in
imulb
push
mov
xchg
fcmove
xor
mov
xor
inc
shrl
jne
repz
and
xor
test
ss
jge
mov
xchg
xor
call
pop
rorl
fsubs
mov
add
add
in
xchg
dec
push
push
les
out
dec
lahf
pop
add
push
lret
fists
int3
mov
jmp
fdivrl
popf
mov
cmp
dec
in
lret
sahf
testl
push
or
je
xor
scas
push
or
dec
xor
call
sarb
lcall
jno
xor
jo
testl
adc
lahf
push
jmp
push
jmp
jo
lods
cwtl
jae
or
ja
add
loop
pop
mov
push
int
jmp
mov
popa
mov
sub
into
xor
daa
loope
mov
idiv
mov
loopne
push
in
mov
dec
dec
rorl
mov
dec
int
insb
fadds
push
jecxz
leave
sahf
dec
clc
cld
adc
mov
dec
or
mov
pop
jbe
jno
mov
jg
adc
jmp
jle
ljmp
jnp
xchg
or
inc
push
imul
mov
bound
jne
fildll
push
inc
enter
inc
push
lock
lahf
add
inc
test
inc
lret
jno
fisttps
test
fbstp
push
add
lock
neg
sub
int
shll
repnz
fwait
popf
dec
movsb
or
or
mov
jo
mov
cmp
dec
mov
xor
dec
stc
xchg
sbb
dec
or
and
dec
dec
cmp
ret
add
mov
and
jns
push
lds
flds
adc
push
mov
xchg
lock
and
popf
ret
or
push
jno
add
pop
pop
cmp
mov
stc
inc
mov
sti
ret
mov
scas
insl
leave
and
dec
mov
dec
enter
in
int
lock
leave
pop
imul
shll
sub
pop
cli
popa
pop
xor
cmc
mov
or
sbb
xor
xor
dec
mov
dec
xor
adc
shrl
jo
les
sbb
lds
aad
mov
enter
fldt
cmp
ss
jge
pop
jnp
or
xor
lret
lods
cmp
insl
push
or
fcmovnbe
mov
daa
adc
cli
push
add
fs
jno
add
outsl
movsl
bound
and
dec
sub
push
stos
mov
cmc
jb
and
pop
lret
sbb
cmp
jo
scas
insl
popa
pusha
rcr
shr
mov
test
sarl
add
repz
adc
ljmp
add
add
imul
dec
bsr
adc
and
xor
movntps
js
and
movl
insl
mov
sahf
cmp
mov
test
cltd
test
lcall
shlb
xor
lret
and
mov
jmp
cmp
xchg
mov
jbe
rcl
cmpsb
subb
cmpsb
mov
pop
data16
xchg
mov
lds
cmp
aas
cmpb
add
mov
test
mov
ret
rorl
into
loopne
ror
mov
or
ficomps
mov
neg
scas
push
jl
mov
stos
lret
lret
call
sub
pop
mov
loopne
jae
shrl
outsb
into
cmp
scas
xor
mov
mov
shr
mov
mov
mov
jo
jmp
ss
mov
stc
mov
dec
je
not
loope
ror
rol
xorl
mov
idivl
jmp
loop
call
icebp
cwtl
ljmp
pop
xor
mov
pop
xchg
mov
mov
jne
or
jbe
jo
cmpsb
push
rol
cmc
int
xor
jb
or
sbb
sar
mov
cmc
or
xchg
ficompl
push
cltd
mov
inc
add
push
mov
sub
shlb
imul
jo
inc
and
rol
mov
add
loopne
sti
mov
rcr
mov
adc
cmp
icebp
into
rorb
or
sub
adc
mov
mov
jmp
or
test
adc
stos
rorl
xor
aam
cmpsl
xor
cltd
loopne
lret
lret
adc
ret
stos
call
bound
enter
mov
idivb
jne
sbbb
add
pop
xlat
xor
leave
js
fisubs
add
pop
xor
jbe
addr16
xchg
repz
test
jo
bnd
hlt
pop
xor
out
xchg
cmp
push
pusha
cmp
leave
jae
ret
jbe
pop
or
mov
sbb
shl
mov
ror
movsl
mov
mov
aaa
cli
aas
pop
daa
adc
jp
fstpl
xlat
iret
cmp
fwait
arpl
mov
fimuls
cltd
push
mov
jb
adc
loop
sahf
cmc
cmpsb
sub
pop
cli
xchg
mov
scas
push
adc
cwtl
dec
lock
cld
jecxz
cs
js
shll
enter
inc
cmp
xchg
in
add
xorb
jg
add
iret
popf
xor
cwtl
push
mov
fldt
add
xor
or
adc
push
mov
mov
xchg
push
mov
cltd
fcomi
loopne
or
in
shl
mov
cmp
enter
inc
jbe
mov
push
addl
add
iret
cltd
dec
rorb
push
push
sbb
je
xchg
sarl
daa
jmp
clc
loop
xlat
mov
rclb
lret
mov
add
push
mov
or
sahf
loop
cltd
push
test
lods
xor
or
les
lret
mov
and
inc
xorb
sbb
rcll
pop
sub
lods
xor
lret
ret
loop
xchg
call
push
xchg
addr16
icebp
leave
test
xchg
ret
xchg
jae
and
or
cmc
stos
aad
push
sub
pop
jae
add
push
pop
fdivr
mov
imul
lret
or
std
sahf
fdivrs
ss
or
and
jg
push
icebp
enter
pop
mov
loop
loope
out
ja
in
pop
jmp
cmp
xchg
mov
rcrl
jmp
fcmovnbe
push
stos
pop
int
mov
jecxz
push
ret
scas
test
ret
cmp
aad
loop
fsubrl
popa
cmp
dec
mov
xor
lods
mov
pop
mov
add
clc
addl
fimull
outsl
lods
pop
into
sbb
pop
lcall
lret
in
mov
cmp
mov
xchg
mov
jmp
jb
clc
push
loopne
mov
hlt
jmp
shrl
add
cs
or
out
push
call
xor
adcb
push
test
leave
inc
mov
leave
lret
imul
in
pop
xchg
pop
loop
movl
shrl
mov
ret
mov
bound
lds
ja
invlpg
arpl
sub
sbb
adc
sub
ss
mov
scas
jl
bound
int
sub
inc
add
insb
mov
mov
mov
loope
movsl
insb
xchg
sub
into
insb
lret
dec
dec
lods
xor
push
mov
mov
sbbb
cmpsl
fsubr
int
dec
or
mov
push
aas
imul
shll
aaa
testl
lds
lret
push
add
add
and
inc
and
leave
repnz
in
sbb
out
cmp
outsl
call
add
pop
push
ror
ucomiss
add
loop
lahf
xor
and
and
xor
add
pushf
nop
pop
data16
scas
adc
in
jmp
and
int
aaa
and
sbb
mov
sub
jmp
fs
adc
sub
pop
leave
inc
xorb
shll
int
aaa
div
adc
pop
or
jae
fnstenv
dec
xchg
jmp
or
mov
negl
jl
mov
push
mov
mov
xor
push
cmp
fs
fwait
movb
loop
cmp
sar
aad
lret
nop
xchg
addb
cltd
ljmp
push
insl
xchg
mov
lahf
pop
dec
fistpl
ljmp
push
test
cmp
xor
pop
mov
jp
or
dec
add
mov
jnp
mov
daa
xchg
jecxz
jge
push
pop
test
cmp
in
test
inc
gs
adc
movsl
jl
ljmp
dec
add
add
roll
sub
fldenv
vmwrite
test
push
sti
and
jle
rcrb
mov
xchg
sub
mov
ret
or
xchg
mov
js
shr
mov
add
and
pusha
lahf
cmp
push
dec
mov
in
js
inc
pop
jo
sub
in
jge
mov
ja
xchg
dec
cmpsb
int
test
ret
mov
jns
pop
stos
jmp
into
es
inc
jne
lds
sub
call
movswl
xchg
test
fnstcw
ljmp
popf
mov
mov
mov
jge
icebp
in
addb
push
cmp
hlt
mov
stos
rcrb
add
mov
xor
nop
sbb
cli
xchg
dec
mov
and
xor
mov
jl
fbstp
int
cli
mov
and
add
pop
test
daa
lea
mov
mov
out
and
jae
fsqrt
movsb
and
out
dec
adc
sbb
iret
pop
jbe
in
xchg
pop
mov
sarl
dec
call
mov
int
push
leave
mov
mov
popa
xor
inc
imul
lret
inc
es
push
push
insl
sub
test
dec
xor
cmp
mov
jbe
jmp
aas
mov
and
aam
test
jnp
mov
inc
push
fdivl
add
leave
shr
add
pop
inc
push
fisttps
movsb
add
push
std
sbb
xchg
push
into
outsb
test
xor
add
cli
or
out
sub
clc
addl
dec
das
lret
mov
insl
push
in
add
out
pop
dec
add
loopne
aam
lock
andl
lds
dec
sub
hlt
imul
pop
dec
jecxz
xor
or
cmp
stos
fdivrs
loopne
fimull
jecxz
fcmovnb
ljmp
xor
sbb
movsb
mov
lea
dec
push
enter
test
xor
mov
jo
push
push
sti
mov
mov
xchg
adc
cmp
jecxz
ret
aas
jecxz
inc
leave
push
add
aam
fsts
push
dec
and
xchg
sbb
push
cmp
stos
ret
imul
pop
jb
nop
loop
sbb
mov
shr
or
mov
pop
xor
repz
or
dec
sahf
imul
mov
push
and
popa
jle
inc
pop
mov
enter
sub
iret
popf
ljmp
mov
ds
xchg
rcll
mov
jb
mov
inc
inc
jle
add
aam
movsb
xchg
inc
inc
in
rclb
xor
enter
icebp
es
fistpl
das
lds
dec
gs
cmp
sub
cwtl
xlat
rorb
into
test
mov
mov
xor
repz
pop
or
cmpxchg8b
dec
push
aaa
pop
jp
enter
mov
insl
lods
insb
and
pop
pop
pop
pop
daa
push
shl
mov
xchg
xchg
ljmp
je
mov
fisttpl
mov
xor
mov
fmulp
mov
inc
test
inc
push
test
mov
inc
push
xchg
pop
cwtl
test
hlt
xchg
inc
call
call
aaa
aas
sbb
fildl
xor
addr16
dec
aas
cmp
aad
mov
test
in
in
mov
addr16
lock
or
mov
xchg
fstpt
fmuls
push
test
add
lods
cmpl
cmp
adc
jge
aam
sarb
xlat
dec
inc
lds
ljmp
push
push
in
xchg
test
loop
shll
loope
cmpsb
sbb
mov
xor
mov
stos
mov
sbb
pop
aad
repz
aad
in
mov
push
test
popf
jae
cltd
adc
add
pop
adc
pushf
bound
fnstenv
les
push
fldt
jp
ret
xor
lea
cmc
xchg
enter
jo
movsl
jae
mov
dec
and
xlat
add
adc
cmp
xchg
scas
inc
stos
stos
push
and
roll
sarb
pop
jecxz
jnp
dec
xor
dec
mov
loope
push
dec
lods
and
mov
ja
push
stos
scas
cmp
insb
dec
mov
xorb
jecxz
jb
aas
xor
movswl
inc
or
mov
fdiv
mov
mov
dec
push
in
jne
ret
jnp
aad
xor
jns
inc
jbe
jns
sarl
pop
xor
adc
push
ja
ss
stos
cmp
mov
andb
call
cmp
lret
mov
cmpsl
insl
aas
or
add
lret
add
repnz
cld
scas
clc
adc
jae
mov
sbb
jl
push
or
push
pusha
lods
xor
add
loopne
je
bound
repz
jae
shlb
adc
cmp
dec
dec
dec
divb
mov
ss
jb
mov
add
int3
inc
xor
ret
sbb
fxch
stos
add
stos
hlt
subl
lds
mov
iret
xor
push
movsb
xchg
pop
sbb
lret
mov
mov
jno
jne
mov
or
and
mov
lods
mov
mov
daa
shll
add
xchg
and
test
push
cmp
je
stos
xchg
inc
inc
mov
jno
mov
jns
lods
jmp
xchg
mov
mov
scas
jae
hlt
pusha
xchg
push
shll
aam
inc
loopne
push
adc
out
inc
push
sarl
test
inc
dec
imul
leave
xor
js
xorl
mov
xor
push
add
dec
push
out
mov
add
dec
sub
mov
roll
xor
sbb
push
ret
loop
or
mov
push
pop
dec
jg
mov
loopne
ss
test
cmp
adc
testb
or
dec
flds
sarb
jne
jo
cmpsb
into
and
xchg
int
push
mov
cmp
enter
gs
inc
repnz
ljmp
int
ret
and
sarl
ror
repnz
mov
cmp
mov
cmpsb
ret
sbb
int3
fnstenv
push
fprem1
ret
xor
orl
ja
add
or
cli
push
inc
inc
xor
rclb
test
jg
stc
icebp
rcr
test
xor
jbe
cltd
ret
mov
push
inc
jno
cmp
pop
lds
xchg
loope
dec
negl
ret
test
push
add
sub
leave
inc
test
sub
or
jge
aaa
mov
inc
sub
or
ret
pop
push
out
mov
add
aaa
aaa
bnd
add
popf
sti
jae
or
adc
inc
add
adc
or
in
aaa
repnz
jne
mov
stos
gs
fisubrl
ret
cmpsl
inc
cmc
inc
push
sbb
inc
rclb
or
fldl
jmp
ret
add
leave
aaa
repnz
incl
rorb
inc
pop
mov
fxch
mov
repnz
cmp
mov
sbb
pop
shll
ja
mov
pop
sub
ret
roll
je
cltd
lcall
sbb
push
cmp
int
and
mov
call
rcrb
ret
add
jge
pop
inc
sub
lock
ret
loop
packssdw
add
in
mov
rcll
pop
sub
aam
jge
dec
lock
outsb
or
popa
push
lds
sub
jb
ret
dec
add
xor
inc
test
sub
lods
aaa
lret
push
add
mov
mov
std
xchg
push
sysenter
add
jbe
fildll
sub
fsubl
inc
pusha
stos
jl
xor
mov
sbb
dec
repnz
sbb
push
inc
mov
movsl
add
jne
xor
sbb
repnz
pop
bound
iret
mov
gs
sahf
in
mov
sbb
or
out
push
add
inc
filds
jp
mov
test
mov
add
ret
xor
pop
ds
iret
in
into
dec
inc
ret
sbb
les
rolb
nop
das
jl
loopne
out
fnstsw
mov
cmp
mov
sub
test
fisubs
stos
ret
mov
push
adc
sbb
sti
js
cs
add
in
stos
push
pop
roll
mov
or
xchg
setne
test
mov
cmc
repnz
dec
fistps
fisttps
in
pushf
pop
enter
call
icebp
cmp
divb
es
decl
scas
mov
add
outsb
addr16
stos
in
add
rorl
push
jge
cmc
mov
or
jo
adc
mov
sbb
push
and
push
out
rolb
dec
inc
jno
imul
cmc
jmp
lret
mov
fcmovbe
push
inc
lcall
loope
jle
incb
sbb
pusha
adc
xlat
imul
pop
movsl
nop
test
movsw
xor
stos
jb
adc
sbbb
pop
movsl
jo
flds
out
rclb
push
sub
nop
mov
add
in
arpl
les
mov
insl
gs
dec
cltd
mov
or
jne
cmc
cmp
mov
or
pusha
xor
add
fabs
mov
xchg
mov
ret
in
addr16
loope
ja
cmp
inc
pop
jns
xor
shr
aas
enter
jmp
loopne
cmp
mov
or
icebp
sub
out
push
push
jb
movsl
and
test
inc
xchg
xor
xor
inc
jg
sbb
test
or
adc
xchg
fucomip
push
lds
mov
rcr
and
jae
testl
dec
xor
mov
push
es
rcll
fcmovbe
dec
rclb
dec
jno
cmp
scas
pop
cli
add
test
movb
ds
add
ret
and
jns
xor
mov
mov
jmp
mov
mov
sub
call
inc
and
add
mov
roll
test
aaa
test
sbb
mov
mov
adcl
lret
es
mov
cld
repz
shll
push
test
jae
mov
mul
or
outsl
dec
adc
aaa
jne
rcl
shll
aad
jecxz
in
lods
mov
gs
jmp
mov
fucomip
xchg
repz
inc
subl
push
add
add
test
fcoml
in
popf
nop
cmpb
jmp
test
add
test
scas
test
mov
test
lds
and
sub
idiv
fldl
sub
cmc
dec
gs
adc
jg
dec
fldl
aaa
rorb
ret
movsb
xor
cmp
lock
push
mov
mov
jmp
and
movsl
mov
std
dec
add
stos
into
pop
popa
mov
and
movsl
sub
add
lds
jnp
sbb
flds
test
test
sub
out
test
or
sbb
xor
jmp
enter
adc
pop
inc
mov
or
sub
dec
cmp
insl
mov
test
and
cmp
jne
dec
ret
jb
mov
adcl
sbb
cmp
pop
adcb
inc
push
sti
insl
sub
xor
addr16
and
sub
int3
sti
enter
add
inc
sbb
das
mov
jmp
lret
test
dec
inc
jne
or
xchg
push
mov
jae
fxtract
sti
rclb
ds
xchg
inc
push
push
adc
test
add
or
ret
jns
xor
and
into
add
add
jns
jns
add
test
cmc
sbb
add
sub
lahf
or
icebp
inc
ljmp
pop
rclb
leave
outsl
or
xchg
sbb
es
fstpt
pop
mov
mov
andl
jo
adc
cmp
ja
in
icebp
inc
cmp
push
push
stos
clc
adc
mov
push
cmp
into
or
cmpsl
sbbl
mov
lds
and
dec
add
jno
popf
int3
add
xchg
sbb
stc
ret
jl
mov
stos
in
dec
dec
xor
xchg
int
int3
subb
rcrb
je
ljmp
sub
adc
in
xor
pop
xchg
lods
imul
and
jle
lret
out
lret
mov
addl
divb
xchg
inc
fisttpl
aam
movb
bound
int3
add
clc
rolb
mov
arpl
fsts
stos
int3
insl
push
hlt
mov
fnstsw
or
lret
rcl
cmp
inc
jae
fnstenv
shr
adc
shlb
cmc
cltd
pop
aad
lcall
cmp
lock
dec
popf
fwait
ljmp
and
xchg
ljmp
fdiv
test
out
add
aaa
fldt
je
cmc
xchg
and
mov
in
movb
fmulp
jbe
cwtl
push
test
call
mov
into
ss
sbb
clc
movsl
int3
push
xchg
subl
repnz
test
aas
push
int3
fmuls
dec
xor
mov
sbb
mov
and
and
ds
mov
xchg
adc
dec
out
add
xor
cmp
je
stos
lret
andl
lods
or
and
sub
add
fstpl
sub
push
in
repz
add
sub
jecxz
dec
pusha
mov
jecxz
cmc
iret
int3
in
rorb
leave
xchg
adc
pop
jge
push
mov
std
int
jle
test
add
cmp
xchg
xchg
call
xlat
leave
jns
add
sub
adc
sbb
loope
pop
jge
and
xor
push
lods
jnp
cmp
mov
mov
lods
mov
or
mov
jnp
xadd
jle
rol
adc
out
leave
roll
les
pop
inc
les
xor
push
mov
testb
and
mov
inc
stc
int
rclb
test
adc
repnz
int3
mov
cmc
in
in
inc
jno
jns
repz
int
mov
subl
jns
mov
enter
mov
clc
jmp
mov
ret
adc
or
dec
inc
cmp
adc
mov
sahf
rorl
inc
jnp
loope
fs
pop
mov
mov
cmpsl
adc
sbb
rclb
int3
inc
sbb
inc
loope
out
lds
popf
sub
mov
inc
mov
leave
inc
loope
mov
add
pop
jmp
stc
ror
cmc
add
test
mov
add
pop
jge
adc
and
ret
pop
adc
push
fadds
in
out
dec
mov
push
stc
xor
xor
inc
stos
fadds
mov
dec
mov
jmp
push
sbb
clc
dec
sub
dec
outsb
jno
aad
mov
icebp
add
dec
add
sarl
cltd
fwait
into
dec
mov
fstl
test
add
inc
xchg
in
inc
test
dec
pusha
mov
jle
fdivrs
jle
dec
push
adc
orb
sub
push
mov
or
ljmp
sbb
mov
mov
mov
adc
ret
push
jmp
cmpsl
rcrb
cmp
repnz
cmpsb
cltd
add
cli
data16
pop
or
xchg
addb
mov
xchg
or
adc
and
jbe
add
shrl
dec
or
mov
mov
add
sub
pop
push
add
mov
repz
aaa
cmp
ficompl
sarl
test
lds
ret
sub
cmp
adc
mov
adc
flds
or
mov
or
sbb
push
rclb
add
jbe
lods
mov
mov
push
add
jbe
push
rcr
mov
jp
cmp
push
push
mov
ja
out
loopne
fnsave
test
fwait
psrlq
add
js
inc
test
stc
shlb
popa
mov
cmc
mov
icebp
lock
data16
inc
andb
ds
pop
lock
lods
mov
mov
out
pushf
jg
hlt
fstpl
out
lock
out
mov
xadd
rorl
lods
fadd
ret
adc
clc
xchg
push
lret
xor
push
xor
dec
pusha
fxch
jbe
lds
mov
ljmp
shr
jb
rcl
sbb
xchg
inc
out
mov
sbb
call
jb
je
repz
mov
roll
shlb
mov
xchg
sub
xor
cltd
or
ja
pop
xor
sub
sbb
push
lret
in
mov
jmp
jp
mov
out
or
out
or
jle
or
jmp
in
jecxz
mov
test
aas
or
lds
push
shlb
enter
mov
andl
repnz
scas
mov
repz
leave
fsubrp
popf
sub
push
dec
jg
pop
mov
test
rclb
das
sbb
jmp
add
paddw
or
mov
lds
xchg
out
add
stos
negl
push
repnz
jg
jle
mov
xchg
movb
int
into
xor
imul
jmp
and
pop
adc
ret
push
sar
cmp
icebp
and
dec
pop
push
cmpl
mov
testl
and
mov
jmp
adc
in
sbb
rorb
scas
cs
xchg
aad
pop
rcrl
cmpsb
jle
loopne
fisttps
gs
inc
push
rclb
ss
lcall
and
test
and
push
jb
pop
sub
add
xor
add
outsl
dec
mov
mov
test
stos
pop
xor
push
icebp
mov
rcr
push
scas
loope
sbb
push
inc
sbbb
roll
cmp
push
outsl
stos
dec
jns
shrl
sub
ret
lds
mov
or
mov
cmc
push
gs
jmp
xlat
cmpsl
adc
cs
cmc
xchg
xlat
or
ret
mov
jg
lahf
ljmp
cwtl
push
inc
sub
jg
test
mov
mov
cmp
sarl
xchg
mov
ds
xchg
mov
cmc
cld
jb
xlat
sub
iret
mov
call
dec
push
sbb
pop
push
loope
inc
adc
mov
pushf
nop
stc
jb
add
enter
shll
les
sbb
lahf
aam
test
mov
imul
add
inc
dec
dec
pop
adc
or
jmp
mov
sub
mov
inc
push
and
cmpsb
imul
and
sub
xorl
test
out
xchg
push
fnstcw
cwtl
ljmp
pop
cmpsb
xor
leave
add
mov
mov
mov
sub
icebp
jle
or
jne
mov
adc
adc
repz
xchg
push
scas
test
scas
or
or
add
mov
test
adc
mov
es
mov
insl
jp
dec
mov
jp
xor
sets
idivl
imul
ja
leave
pushf
fstpl
sub
push
mov
mov
mov
imul
push
pop
in
pop
cmpsb
loopne
pop
pop
mov
enter
aad
and
aad
add
jno
mov
dec
cmp
adc
sub
lds
mov
ror
rcl
dec
cmc
lret
iret
dec
add
xchg
shlb
cmc
lcall
sub
scas
into
xor
mov
add
xchg
fmul
dec
jge
xchg
sbb
pushl
pushf
jecxz
cmp
mov
data16
jns
movb
xor
push
imulb
adc
cmp
loop
xor
xor
and
and
in
dec
test
pop
fxch
add
pop
inc
enter
roll
fstpl
into
outsb
dec
push
test
mov
jns
xor
add
or
cmp
push
jl
push
lds
mov
mov
mov
mov
mov
aaa
sbb
add
cmpsb
cwtl
sbb
mov
xor
inc
mov
pop
mov
mov
or
add
je
scas
xchg
stos
or
in
jecxz
jnp
adc
adc
add
loop
sbb
pop
test
notl
clc
sub
mov
iret
dec
fsubrl
push
add
and
in
cmp
dec
xchg
insl
pop
adc
jae
adc
ljmp
fcomip
stc
xor
jne
loope
gs
jo
mov
push
dec
mov
shlb
cld
popf
cli
insb
xchg
loope
xchg
in
dec
in
sbb
push
cwtl
inc
push
jmp
dec
rcl
mov
adc
ss
test
xchg
xchg
rorb
in
dec
aad
or
fisubrs
mov
pop
aam
mov
inc
mov
sub
jbe
and
mov
hlt
repz
or
and
cmp
xchg
dec
ljmp
jns
mov
call
mov
and
call
out
pushf
int3
pop
lea
sbb
fstpt
push
and
sahf
fisubl
stos
xor
scas
cmpsb
mov
lcall
call
jle
in
ja
mov
fsubl
test
out
cmp
xorb
jmpw
cmc
dec
outsl
pop
sahf
scas
xchg
out
ds
dec
inc
jecxz
sbb
mov
fsubr
shll
inc
mov
adc
cltd
mov
popf
sub
inc
stos
xor
jg
adc
fwait
inc
ds
daa
adc
add
shl
dec
xlat
data16
push
lahf
test
add
mov
std
adc
and
jo
xchg
push
or
leave
sbb
cmp
push
pop
xor
mov
xchg
add
mov
test
dec
in
push
mov
xor
icebp
sbb
xchg
add
dec
cmp
movsb
in
int3
ret
rcrl
add
repz
divb
loop
mov
arpl
adc
cmp
and
dec
lret
add
ror
in
ficoml
test
sbb
xchg
ds
xor
mov
sar
mov
dec
aas
adc
mov
leave
push
push
add
pop
mov
jbe
subl
cmp
addr16
ja
es
cmp
inc
int
or
mov
lahf
and
mov
addl
mov
add
pop
xor
cmc
enter
sbb
imulb
adc
loope
inc
dec
sbb
icebp
cmp
push
je
push
mov
ret
stc
mov
push
fiaddl
xchg
and
xlat
sbb
pop
inc
sub
add
sub
clc
add
sarl
inc
adc
popa
popa
leave
jnp
ret
xor
and
outsl
cwtl
enter
dec
or
jl
add
xchg
jecxz
leave
push
sbb
adc
pop
xor
int3
xchg
add
rolb
stos
xor
int3
and
sub
cmp
mov
test
sahf
dec
outsl
push
icebp
loopne
popfw
inc
or
mov
add
adc
out
and
mov
dec
adc
call
shl
mov
stos
arpl
push
xor
pop
xchg
mov
cmp
fisttpll
add
push
push
xor
sbb
xchg
pop
cmc
stc
xchg
incl
xor
mov
imulb
dec
add
stos
xchg
xchg
push
mov
mov
loopne
sbb
xor
xchg
sbb
push
pop
dec
adc
sarl
fsubrl
xchg
out
xor
add
xchg
or
mov
pop
iret
hlt
icebp
mov
int
idiv
je
test
in
flds
cltd
adc
mov
ret
cmp
sahf
pop
out
pop
roll
ret
xor
stos
cmpsl
pop
ror
es
xor
div
cli
jo
cmp
mov
call
int
andl
mov
divb
mov
sbb
mov
out
cmpsl
mov
outsb
int
adc
cmp
aaa
mov
lods
ficompl
inc
xchg
cltd
ljmp
scas
xor
xor
std
xor
mov
dec
sub
fsubrl
popa
ds
mov
mov
mov
lret
sbb
mov
out
dec
fwait
test
cmpsb
inc
mov
test
in
cmp
imul
pop
into
loope
sbb
lret
in
xor
stos
mov
clc
mov
mov
mov
and
push
negl
ljmp
into
pop
jno
rolb
pusha
out
jp
into
xchg
fmul
sbb
dec
sub
dec
push
aam
jo
inc
movsb
ds
fdivp
jg
jne
jecxz
rolb
in
adcb
outsl
xchg
dec
imul
mov
cmpsl
jl
pop
add
and
mov
mov
fiaddl
test
adc
imul
js,pn
cmp
fldcw
push
mov
jl
mov
cmc
cmp
sarl
into
icebp
push
xchg
out
sar
push
andl
cmp
push
pop
jmp
into
clc
fwait
pop
inc
jl
pop
rclb
int3
in
mov
and
mov
loop
mov
xchg
add
rorl
in
pop
and
sbb
jecxz
std
popf
lea
test
push
or
inc
inc
repnz
cmp
jae
mov
testl
add
sub
call
loope
jo
lret
lds
xchg
ret
pop
sbb
xchg
out
movsl
xor
adc
fadds
in
and
ljmp
push
pop
pop
popa
and
icebp
mov
test
scas
add
mov
das
xor
add
mov
mov
mov
lcall
bound
addr16
jno
jl
xor
clc
mov
fists
adc
xor
pop
sub
ds
ja
dec
or
sub
outsb
and
mov
adc
xor
nop
xchg
inc
mov
dec
in
jns
mov
aaa
popf
pop
mov
mov
mov
sub
je
mov
call
adc
cmp
mov
dec
mov
pop
xchg
sbb
xor
icebp
and
jb
mov
insl
cmp
pushf
ja
js
popa
shll
mov
imul
xchg
insl
outsl
in
insb
out
push
lds
gs
push
sub
mov
jns
dec
ja
adc
push
jns
add
sub
cmp
dec
in
ds
jp
ds
test
rol
xor
mov
test
shrl
jmp
lcall
mov
inc
mov
xchg
call
data16
fisttpl
add
aam
out
and
sub
jp
negl
cmp
stos
sbb
or
lods
jl
shll
insl
xor
ja
inc
push
add
rclb
ret
test
mov
dec
dec
mov
scas
loop
dec
cltd
mov
sbb
icebp
jnp
jae
mov
push
sti
icebp
aad
pop
adc
add
add
jb
xchg
std
lock
dec
jp
imul
sbb
shr
popa
repz
adc
fnstcw
dec
mov
add
lds
rorl
shl
mov
cmpsl
jae
int
sbb
sar
stc
fld
aas
les
insl
jb
add
dec
std
and
mov
fidivrl
jne
insl
and
scas
or
jmp
push
hlt
adc
add
imul
test
arpl
in
and
insb
aad
add
icebp
mov
test
and
lahf
sbb
or
subl
lea
arpl
dec
das
cmpsl
loop
push
adc
ret
das
in
dec
icebp
xchg
adc
nop
mov
ds
cmp
jbe
in
lcall
test
out
cmpsl
and
sub
xorb
sub
dec
adc
ja
xor
pop
in
mov
and
rcrb
jnp
xor
pushf
pop
push
mov
test
and
cmc
jns
outsl
push
or
imul
into
outsb
mov
xor
pop
dec
xor
dec
cltd
or
mov
dec
push
mov
aam
std
jl
icebp
add
sbb
pop
mov
add
jg
xor
aad
std
cmc
xor
call
dec
fstpl
mov
pop
repnz
ret
mov
fstps
or
loop
pushf
shll
jle
mov
push
or
adc
jb
les
in
test
sarl
dec
ds
fdivrl
js
ljmp
pop
insl
mov
mov
pop
into
mov
test
and
mov
push
movsb
ret
add
je
sub
add
push
sbb
cld
std
mov
shrb
out
paddw
fistl
or
cmc
xchg
cli
mov
adc
xor
or
mov
cmp
jle
and
jo
ret
inc
outsb
dec
bound
sub
notb
xor
leave
ret
and
in
push
xchg
mov
aam
add
mov
mov
or
jne
lock
jns
jp
or
mov
lds
jne
add
xchg
jecxz
add
and
sbb
add
add
mov
bound
adc
adc
add
push
in
std
xchg
ret
mov
repz
cli
mov
xlat
std
dec
movl
sub
clc
inc
test
call
pop
sub
cmp
addl
cli
sbbb
push
out
sub
pop
repnz
add
jae
inc
pop
dec
ret
out
sbb
lock
cmp
xor
iret
xchg
lods
push
jl
mov
jae
and
not
rolb
jb
xorb
and
pop
stos
sbb
rorb
mov
shlb
mov
outsl
rcl
sbbl
nop
pusha
push
lret
sahf
cli
rcrl
mov
mov
mov
int3
imul
aad
sub
xchg
leave
mov
lcall
jle
mov
popf
xchg
xor
inc
jnp
and
cltd
adc
loop
lcall
pushl
arpl
jbe
scas
push
adc
mov
lret
pop
imul
mov
int
jbe
mov
test
in
dec
cmpsb
ret
int
rol
dec
mov
in
jecxz
scas
xor
mov
xor
sahf
pop
inc
mov
xor
mov
mov
xor
push
pusha
jmp
into
mov
stc
push
mov
and
lods
jecxz
out
add
in
jbe
std
rcll
sbb
pop
dec
pop
icebp
mov
jne
or
add
dec
add
adcl
jg
adcb
mul
ljmp
mov
aaa
xchg
dec
cmp
dec
loope
jecxz
or
movsl
clc
sub
into
sub
or
shl
cmpsb
jge
aaa
test
dec
dec
adc
lret
pop
xchg
call
push
and
aas
jmp
or
shr
or
dec
jb
addb
out
xchg
or
and
int3
push
and
dec
cs
fwait
inc
sbb
call
add
rcll
jmp
push
add
mov
inc
negl
fwait
adcb
dec
pop
push
sbb
leave
rcrl
or
push
fnsave
pop
mov
xor
in
outsb
mov
cmpsb
lcall
stos
imul
pusha
sub
js
inc
lds
cmpsb
test
inc
xor
add
adc
inc
negb
or
xchg
leave
ret
adc
sub
aam
mov
movsl
cmp
sub
movsb
daa
cmp
and
xchg
mov
push
das
jmp
adc
mov
inc
cmp
mov
jno
inc
sbb
pop
rcrb
sbbl
test
inc
pop
lret
imul
sbb
mov
lret
sub
rcrb
fisubl
inc
jo
cs
fwait
mov
rcl
push
addr16
and
inc
stos
dec
push
aam
in
sbb
xchg
inc
clc
stc
dec
inc
aas
fisttpll
and
popf
rol
icebp
div
pop
ficompl
sub
pop
mov
mov
roll
scas
xchg
icebp
cli
aaa
pop
in
rcr
sub
icebp
sahf
je
and
fstl
add
push
cltd
mov
mov
dec
in
ficompl
jmp
mov
xor
movsb
das
popa
clc
push
inc
mov
jp
or
test
mov
testl
inc
addr16
jp
inc
jmp
sbb
or
ss
xlat
and
jmp
mov
call
and
mov
xchg
or
test
mov
dec
jmp
movd
adc
cmpsl
loopne
xlat
outsb
nop
iret
jmp
cmp
and
dec
mov
push
bound
jmp
hlt
cmp
iret
cltd
icebp
or
sahf
cld
add
mov
mov
mov
test
xchg
dec
or
push
mov
sub
jns
add
aam
into
xor
repz
ret
sbb
stos
add
dec
jmp
xchg
sbbl
add
stos
outsl
ficomps
cmpsb
add
mov
icebp
rdrand
js
enter
out
add
enter
or
lods
xor
pop
testl
cltd
push
xchg
and
mov
adc
mov
icebp
sysexit
sbb
repnz
loopne
outsl
leave
jae
ror
and
pop
mov
lret
sub
call
add
rcll
leave
fldcw
jno
subb
lds
bsf
ljmp
pop
pop
sarb
inc
push
mov
sbb
mov
aam
mov
xor
sar
leave
shlb
mov
cmc
sub
jno
add
test
nop
out
js
or
test
inc
mov
cmp
aas
sub
xor
aad
jb
cli
test
mov
out
out
prefetch
or
xorb
pusha
xor
and
inc
pusha
loope
cmp
cmp
jne
add
and
mov
test
push
clc
jbe
clc
push
sbb
icebp
in
shlb
int
add
call
lock
popa
inc
test
out
add
or
mov
mov
inc
sbb
stos
cmp
inc
push
cwtl
mov
mov
mov
call
ret
push
in
jp
adc
mov
sbb
mov
frstor
test
cmc
cmp
repz
mov
jae
jbe
mov
scas
cmp
addr16
bts
inc
mov
inc
dec
mov
adc
mov
in
jnp
repz
cli
lock
xor
cmp
not
pop
pop
and
sub
cwtl
loopne
dec
fstpt
iret
leave
enter
jae
sub
xorl
xor
inc
mov
in
and
jbe
add
mov
test
and
leave
lods
in
in
mov
fmull
leave
inc
call
and
out
mov
mov
movsb
adc
repnz
add
jl
mov
and
sub
mov
sub
inc
into
cmp
in
and
push
xchg
xchg
scas
push
xor
fcmovb
mov
jmp
dec
mov
loop
push
pop
or
dec
repz
lahf
sbb
cmpsl
movsb
jne
scas
cmpsl
xchg
xchg
or
mov
mov
dec
or
xchg
sbb
leave
or
out
mov
aas
movsb
jmp
inc
xchg
icebp
jne
inc
clc
aas
cmpsb
xchg
in
push
xor
icebp
mov
and
je
mov
xor
mov
test
inc
inc
stos
lea
sbb
mov
pop
dec
nop
ja
sbb
xchg
aad
lods
mov
dec
sub
ret
popf
jne
mov
jmp
roll
mov
jb
mov
and
fstpl
les
dec
jmp
inc
add
mov
ret
inc
divb
push
stos
mov
jmp
sti
jns
popf
or
sub
jbe
jmp
mov
jl
lahf
shlb
cmc
mov
add
mov
shlb
lds
aad
pop
inc
icebp
scas
rol
jg
mov
adcb
test
adc
jecxz
push
or
iret
push
lock
into
and
fstps
jb
dec
aaa
xchg
bound
jno
push
mov
dec
das
and
jno
fwait
fwait
addr16
cwtl
mov
xchg
aad
mov
push
dec
hlt
icebp
jbe
int
setae
aaa
dec
pusha
and
mov
cld
sub
push
inc
xor
jge
cmp
pop
inc
adc
adc
pushl
imul
testb
out
xor
add
out
sub
xchg
xchg
jmp
dec
iret
inc
test
mov
push
push
das
cltd
lods
fwait
mov
xchg
and
sub
loopne
mov
in
in
sbb
xlat
ret
or
scas
pop
sbbl
jne
ret
outsl
cmp
mov
imul
inc
outsl
add
mov
sbb
movsb
and
xchg
xor
add
imul
sbb
outsl
xchg
sarb
enter
sbbl
mov
jne
xchg
jle
and
xor
jb
mov
mov
or
jmp
pop
xor
xor
push
clc
cmp
test
cli
mov
aas
mov
mov
add
add
lds
loope
aaa
sbb
inc
out
pop
mov
add
leave
jns
xor
add
in
stos
xchg
pop
bndstx
inc
pop
lret
push
call
sub
daa
jmp
aaa
push
cltd
sub
push
mov
sarl
sbb
dec
insb
fcmovnbe
test
xor
and
and
push
sub
fstl
cmpsb
adc
or
push
stos
push
sbb
jge
lahf
aas
xor
dec
and
push
sub
dec
aaa
filds
stc
in
mov
inc
pop
xor
shlb
add
clc
aaa
mov
outsb
cld
mov
and
mov
in
add
sar
push
js
ret
out
das
insl
shlb
test
out
push
stos
test
pop
add
xor
es
push
add
pop
je
mov
int
mov
push
movsl
pop
adc
fcoml
roll
push
out
adc
adc
xor
jmp
dec
sbb
dec
ret
aas
adc
mov
in
in
aas
xchg
push
add
stc
dec
orl
orl
dec
sbb
push
add
or
xchg
mov
sbb
mov
sbb
shr
and
and
or
cmp
movsl
jne
stos
pop
xchg
ljmp
or
lock
cltd
test
pop
or
sbb
add
clc
adc
mov
popf
xor
nop
testl
enter
pop
aad
adc
iret
das
pushf
int
aad
mov
inc
sbb
add
das
lods
xor
pop
add
jmp
repnz
je
push
sti
enter
addb
pop
aam
or
loopne
imul
in
sub
aaa
pop
aaa
shrb
xlat
add
xor
inc
pushf
ret
imul
sbbb
sbb
dec
sub
out
push
repnz
xor
test
jae
push
lret
icebp
fsubrl
arpl
inc
pop
cmp
femms
add
add
clc
popa
int
mov
loope
stos
lret
cmpsb
cmp
push
ret
scas
cwtl
incb
add
addl
mov
sbb
add
fildl
or
test
pop
gs
mov
or
enter
mov
sbb
fcom
mov
cli
outsl
adc
xlat
mov
sub
leave
ljmp
and
push
xor
roll
rorb
pop
fstpt
or
insl
or
dec
or
mov
pop
repnz
add
mov
mov
rcrl
cltd
and
dec
jge
or
lea
inc
fsubrs
xlat
sub
xor
add
loope
pop
pop
or
mov
and
xchg
add
clc
pop
aaa
jno
lret
cmpsl
and
add
mov
ror
sub
shlb
add
push
bound
jmp
mov
pushf
inc
sti
push
cmp
pusha
mov
xor
mov
icebp
leave
jo
leave
jecxz
addb
enter
ret
mov
inc
pop
jae
lds
cli
cmc
sbb
mov
xchg
inc
mov
jmp
ror
out
movsb
xchg
push
icebp
mov
add
push
push
lds
iret
ret
daa
or
push
div
dec
mov
in
scas
pop
jne
ret
dec
and
pop
mov
ja
add
xor
lret
inc
mul
mov
lds
and
jae
fimull
es
xor
xor
shrl
push
inc
test
cmc
xor
mov
add
test
xor
push
jmp
out
sub
leave
movsb
fistl
mov
push
aam
xchg
xchg
mov
pop
jb
loope
mov
xor
imul
pop
sets
push
and
and
push
fbld
jle
push
aaa
sbb
call
mov
int
or
jge
or
gs
loop
xor
mov
leave
enter
push
ljmp
mov
aad
leave
sarb
push
js
insb
daa
dec
mov
xchg
jbe
int
jl
test
rcll
loop
jecxz
leave
mov
sbb
push
jb
jne
fldcw
js
or
insl
pop
push
iret
popa
movb
cmc
adc
je
shll
enter
imul
stos
xchg
popa
fadd
loopne
sbb
sar
shll
into
inc
aas
arpl
jg
jecxz
and
ds
push
pop
iret
jo
repz
loope
imul
adc
mov
out
fcomp
jbe
sub
sub
mov
sbb
cwtl
cs
add
add
sbb
dec
dec
dec
push
fimull
shrb
in
sbb
or
jns
or
lock
fiaddl
stos
loop
into
nop
out
enter
jo
ljmp
dec
icebp
jmp
sarl
into
out
and
mov
or
inc
aad
jmp
fcomps
xor
and
aaa
jmp
fsubrp
les
mov
aad
dec
dec
aas
and
leave
lret
clc
pop
fldcw
jecxz
ret
in
iret
jmp
pop
fcmovbe
xor
sbb
imul
lret
stos
pop
test
cld
mov
add
stos
fdivrl
and
xor
pop
jmp
cmp
push
fucomi
testb
rcl
mov
mov
xor
roll
adc
jbe
ja
cmp
pop
int
mov
sti
mov
mov
xlat
inc
es
addr16
fistpl
dec
dec
enter
adc
mov
stos
mov
mov
mov
pop
stos
jge
lret
icebp
xor
insb
in
pop
cwtl
mov
and
in
inc
push
daa
out
fiaddl
cmc
subl
ljmp
cltd
inc
popa
mov
or
mov
ret
jbe
in
movsb
test
cmpl
mov
in
jle
xchg
movsl
loopne
xor
loop
or
loope
xor
icebp
add
mov
divl
or
icebp
leave
and
cmp
sbb
leave
push
xor
aad
add
or
popf
mov
leave
pop
add
or
push
out
and
dec
popf
cmp
cli
cmpb
gs
aam
rcl
ljmp
in
dec
out
cld
sub
mov
ret
arpl
daa
icebp
fwait
sahf
sub
cmc
xchg
insl
adc
aaa
mov
jbe
dec
xchg
sub
dec
out
fdiv
inc
leave
ja
aad
jg
adc
pusha
jnp
or
xor
stos
ss
repz
sbb
ficomps
mov
jle
jp
or
je
and
sub
mov
inc
enter
ja
and
pmaddwd
into
inc
mov
cmc
imull
mov
mov
mov
sub
into
pusha
or
icebp
sub
jge
or
inc
test
mov
inc
and
push
jmp
xchg
xchg
xchg
jae
mov
mov
mov
dec
mov
imul
mov
fdivp
sbb
ss
fnstenv
not
push
lods
xor
pop
jbe
leave
out
add
adc
push
and
es
adc
or
mov
andps
inc
xchg
cli
jbe
imul
sub
cmp
push
inc
es
inc
popf
aad
lahf
mov
push
dec
into
into
fildl
sub
fmull
mov
ja
adc
mov
jmp
scas
test
inc
movsl
imul
pushf
jbe
out
add
cmpsl
cmpsl
aas
jo
cli
mov
ljmp
dec
mov
ds
pop
addl
dec
cmpb
jno
loop
sub
mov
lret
int
movsl
and
mov
leave
stos
fdivp
mov
and
inc
dec
insb
sbb
test
pusha
mov
adc
mov
push
and
inc
cli
lcall
xor
xchg
test
jne
xor
mov
das
jae
sub
es
and
out
test
adc
cld
iret
rorb
fs
stos
jb
jae
sbb
repnz
out
add
mov
cltd
xor
push
loope
hlt
ds
ret
out
mov
scas
xchg
jne
adc
or
sbb
xor
xchg
sbbl
add
xor
js
or
imul
fistpl
test
push
inc
add
imul
ret
test
sarb
cmp
popa
in
sub
push
and
dec
aad
inc
inc
cmpsl
flds
aas
mov
push
xor
lds
fsts
fadds
add
cwtl
int
sti
rorl
add
push
fwait
sbb
flds
hlt
dec
mov
pusha
sbb
xchg
movsl
jecxz
or
call
cmp
adc
fnsave
add
lret
pop
cmp
loope
ret
shl
andl
movsl
sbb
std
jno
and
decb
pop
add
mov
xor
adc
cmp
aas
stos
inc
aas
jb
mov
xchg
cmp
imul
mov
loop
loopne
fimull
repz
jae
push
adc
in
jmp
xor
ds
divl
dec
jg
adc
rclb
mov
dec
add
and
enter
add
outsb
xchg
jmp
outsl
inc
sub
pusha
cmp
pushf
loop
in
sahf
data16
or
lea
cmc
mov
movsb
push
roll
mov
fiaddl
dec
repnz
daa
add
cmp
inc
cmpsb
or
repz
sahf
xorb
add
push
ret
insl
push
daa
pop
adc
into
dec
sbb
or
test
pop
inc
adc
xor
push
xor
cmp
dec
cmpsb
or
outsl
dec
pop
call
in
repz
movsb
enter
mov
xor
aad
mov
ret
ret
leave
repnz
sub
xor
sarl
rol
sbb
push
sub
sahf
pop
and
adc
inc
push
cmp
dec
pop
push
jnp
sbb
ret
dec
testb
or
adc
ljmp
or
or
and
xchg
sub
pop
pop
add
pop
insl
jb
jb
push
and
or
xor
pop
cld
adc
or
or
sub
add
dec
push
ss
jns
sbb
fnstsw
mov
lret
fnstcw
sti
scas
daa
push
pop
mov
aas
roll
into
push
bound
mov
loop
pop
inc
mov
int
jl
cmpsb
push
jle
fmulp
pop
dec
cmp
dec
sarl
ds
or
dec
loope
push
mov
xor
je
adc
shl
xor
add
mov
adc
push
lahf
test
xchg
push
lods
xor
leave
dec
les
mov
lea
test
fldenv
fstl
jle
cmp
pop
lahf
loop
aad
insb
sub
mov
leave
loope
int
int
frstor
jecxz
sbb
mov
cli
mov
iret
shll
xor
test
adc
jno
leave
test
std
xor
cli
sbbl
popf
out
out
into
push
je
popf
movsl
jb
dec
push
into
ds
cs
mov
out
fimuls
push
sub
andb
mov
imul
fsubrs
sub
or
xor
mov
xchg
insl
adc
cmp
ds
dec
or
jo
cli
mov
add
jae
mov
movsb
xchg
mov
push
inc
pop
mov
fs
cmc
mov
pusha
add
arpl
push
and
out
or
test
mov
adc
icebp
mov
add
popa
inc
xchg
jl
jns
cld
cli
pusha
and
and
popl
int
adc
inc
jmp
dec
mov
idiv
mov
xor
inc
or
sbb
cli
sub
out
and
mov
mov
xchg
sti
filds
pop
sbb
cltd
xor
and
mov
xor
les
jo
sub
subb
and
push
sbb
leave
add
inc
fwait
jp
xor
repnz
sbb
imul
sub
rcll
xor
push
into
mov
out
inc
insl
int
das
mov
out
add
repz
rcr
shr
mov
int
mov
out
out
mov
out
xchg
leave
fwait
mov
inc
in
jg
leave
push
mov
icebp
mov
shrl
ss
sub
push
lds
in
cmp
fcmovnbe
les
mov
xlat
in
test
or
testb
repnz
inc
xor
into
lss
divb
lret
pop
iret
in
xlat
inc
aam
sbb
lret
cli
les
dec
cmovns
add
in
mov
test
mov
test
std
or
scas
adc
les
sti
adc
xor
movl
sub
xor
shlb
mov
sbb
stos
mov
xor
jne
outsb
jae
add
addr16
daa
in
mov
cmpsl
cmpsb
fcmovnu
jecxz
dec
dec
inc
fucomp
dec
sbb
out
rcrl
push
shr
push
shlb
mov
add
jbe
fsts
adc
inc
shr
pop
jmp
xorb
lret
andb
add
dec
mov
mov
jo
enter
inc
into
and
xlat
dec
lret
stos
ret
out
or
push
cmp
lds
clc
jmp
lds
sbb
push
loop
inc
xor
or
mov
pop
push
xchg
cli
adc
rolb
jne
sub
lahf
loope
and
mov
cmc
pop
in
xorl
mov
stos
lcall
sub
jmp
lcall
push
lret
or
fcoms
cmp
cmpl
lock
fadd
adc
cs
mov
mov
stc
add
pop
pop
iret
and
push
pop
dec
push
sub
jmp
fnstcw
add
adc
sub
xor
add
fimuls
les
xchg
adc
fsts
add
or
push
sbb
sahf
xchg
in
jno
ljmp
mov
sbb
cltd
in
mov
repnz
sar
insl
cmc
sub
shll
std
dec
lret
push
stos
fnstsw
sbb
fcomi
push
and
mov
or
lds
dec
and
shll
es
mov
jg
sub
and
xchg
jbe
mov
test
push
stos
popa
mov
sub
inc
inc
sub
mov
mov
ss
and
mov
mov
in
into
lret
pop
test
call
int
mov
js
mov
cld
mov
int
add
inc
dec
aaa
mov
add
ret
pop
call
fldl2t
out
icebp
imul
mov
aaa
lret
xchg
jne
loopne
int3
lret
leave
lods
mov
xor
inc
mov
aad
xor
lcall
out
and
movl
add
add
adc
int
push
push
jle
out
add
mov
inc
sub
cwtl
scas
out
shrb
popa
jae
aas
jl
mov
xlat
fnop
cmc
jne
dec
mov
int
pop
mov
ja
add
sub
into
test
jle
mov
mov
aaa
mov
nop
or
lret
lret
icebp
pop
iret
mov
call
xchg
xor
and
clc
sbb
js
dec
aaa
dec
aaa
movsl
data16
arpl
mov
adc
icebp
sbb
push
sbb
pop
insl
sarl
add
dec
mov
jbe
fistps
rol
shll
aad
jmp
pusha
por
xchg
push
sub
pop
and
dec
xor
mov
mov
out
ds
out
xor
inc
fwait
xor
adc
xor
mov
mov
mov
mov
fadds
into
enter
and
pop
shr
mov
sbb
das
repz
ret
lcall
dec
movb
cmp
clc
xchg
xor
into
enter
fisttps
add
scas
inc
cmp
fs
add
add
repnz
fbld
iret
ror
fyl2x
mov
xor
inc
sti
lret
jle
dec
lds
add
jae
loop
cltd
jg
adc
enter
repnz
shr
jo
ret
icebp
popf
outsl
ret
dec
ret
and
dec
mov
ds
dec
arpl
stos
sbb
icebp
push
and
fcomps
push
push
or
aam
aaa
jg
xorl
and
lock
sbb
std
push
pop
push
loope
lret
cmp
or
sub
dec
fstpl
ds
ffree
insl
or
inc
dec
ret
sub
jns
sbb
pop
push
push
loop
aas
lds
or
dec
enter
jle
adc
popf
inc
lds
xchg
mov
fmull
fcomi
std
aam
jmp
mov
add
movsb
ret
rcll
aas
dec
js
mov
das
xor
and
or
ljmp
cmp
dec
dec
sti
aad
mov
jae
adc
mov
mov
jmp
fcomip
ret
adc
rorl
inc
pop
out
mov
cwtl
push
push
nop
je
shll
iret
cli
and
repz
in
inc
dec
int3
mov
imulb
xor
neg
push
jns
je
mov
mov
mov
aad
mov
or
jns
pop
rcll
cmc
jns
dec
movsl
hlt
shrl
and
cmp
lock
movsb
mov
xor
mov
dec
dec
inc
cmp
rcrb
sahf
sub
sbb
cmp
ud0
repnz
enter
sub
das
lret
pshufw
test
push
cmp
lods
repnz
jnp
hlt
pop
flds
arpl
mov
add
dec
out
imul
mov
aad
mov
mov
iret
mov
negl
mov
dec
jg
mov
movsl
jmp
rolb
fwait
cmp
or
or
dec
fildll
repz
clc
fnstcw
sbb
inc
dec
mov
push
and
enter
out
push
dec
stos
dec
orb
movsb
mov
mov
xchg
adc
iret
in
daa
xchg
mov
adc
ffree
into
dec
repz
mov
inc
leave
or
cltd
out
test
add
mov
andl
push
lds
push
push
out
xor
out
jne
mov
out
or
or
mov
incl
jmp
repz
dec
inc
fists
aam
repz
add
mov
std
jmp
or
or
hlt
xchg
loop
pop
mov
pop
dec
aad
ficoms
stc
sbb
rolb
or
notb
lds
inc
mov
orb
test
notl
xor
xor
stos
ret
das
inc
xchg
mov
push
shll
mov
sub
jecxz
popf
in
sub
fnstsw
jecxz
dec
fs
mov
shlb
stc
dec
add
or
stc
hlt
inc
sbb
xor
cmp
rol
ljmp
cmp
test
mov
rorl
sub
imul
aas
lret
es
test
into
push
fsts
push
loop
rcr
arpl
xor
jmp
popa
in
int
rorl
popf
mov
sarb
outsb
mov
push
push
xchg
out
aam
dec
cmp
xor
rcrl
inc
jle
add
push
sub
push
shll
ret
les
mov
bound
mov
push
dec
push
inc
fsubs
not
rolb
mov
leave
es
shrl
adc
add
in
sbb
push
bnd
jo
lods
mov
add
xchg
into
enter
jl
in
les
nop
ret
loop
scas
arpl
xchg
mov
add
test
fidivrl
xor
mov
shl
adc
or
leave
rcr
insl
test
and
jle
add
rcrl
sub
mov
les
dec
sub
xor
jae
mull
cmp
xor
or
mov
mov
mov
dec
and
dec
stc
cmp
jp
xchg
or
sbb
shlb
or
es
out
mov
popf
dec
repz
sbb
push
mov
push
dec
movsb
js
test
add
mov
and
ret
add
hlt
mov
mov
rcl
test
and
rcrb
lcall
orl
xor
jp
add
fbld
cmp
andb
shl
call
push
repnz
aad
push
int
xor
fnstenv
jg
jne
ljmp
popa
xchg
aaa
push
loope,pt
mov
stos
cwtl
sub
inc
mov
sbb
jp
andb
jbe
test
xchg
dec
andb
mov
dec
cltd
iret
dec
pextrw
sbb
xchg
and
mov
les
xchg
dec
dec
push
ja
int
push
jnp
or
fisubrl
jecxz
cmp
enter
jb
mov
es
imull
add
xchg
xor
fsubrs
lcall
dec
fnstsw
adc
jge
gs
shrb
divl
leave
or
cld
rcl
pop
add
jne
xchg
loope
and
xor
dec
aad
fcomi
jmp
scas
dec
fimuls
in
dec
dec
std
js
push
repz
aam
jmp
mov
xor
push
add
sbb
lods
ljmp
push
sub
add
add
in
aas
pslld
and
shll
int
cmp
loope
int
or
out
in
mov
leave
aad
fwait
cmpsl
push
or
push
roll
and
daa
jno
add
insb
push
cmp
jno
popf
jns
daa
int3
js
cmpsb
call
out
and
sarb
or
popa
jle
pop
xabort
cmp
and
daa
mov
or
inc
inc
inc
inc
repz
sbb
sub
fs
test
ret
jns
mov
push
daa
test
dec
int
add
xor
subb
mov
fdivs
fldt
xor
jp
xor
or
mov
push
pop
outsb
push
popa
jge
and
leave
and
jg
in
inc
loope
ds
mov
ret
or
jne
jp
inc
into
leave
ljmp
sbb
push
out
inc
loope
in
inc
mov
in
mov
movsl
xchg
adc
mov
mov
lahf
adc
sarl
and
inc
test
divb
or
inc
jae
imul
insl
mov
push
pop
push
jb
and
jmp
mov
movsl
jge
push
xor
aaa
popa
mov
pop
cmp
mov
mov
mov
sar
movsb
out
mov
or
or
or
cmpsl
mov
int
loop
push
rorl
je
dec
and
loop
into
outsb
mov
icebp
in
mov
daa
les
js
mov
dec
mov
jo
jns
or
cmpsl
cli
mov
or
lds
mov
imul
or
lds
mov
loopne
imul
shl
icebp
inc
mov
inc
adc
push
sahf
push
xchg
movd
shl
adc
loope
fidivrl
mov
int
shll
testb
and
or
jge
mov
fidivs
call
inc
cld
mov
loop
cmpsl
mov
sbb
adc
ret
out
jo
adcb
inc
shll
inc
sbb
aam
fsubrs
mov
mov
call
lcall
mov
pop
add
xor
cmp
pop
xor
mov
add
xor
pushl
push
mov
cmpsb
daa
int
imul
aas
mov
ret
aam
cs
xchg
cmp
dec
movb
imul
int
pop
jmp
add
test
rcll
dec
out
or
icebp
jne
lds
flds
fnsave
or
test
adc
sub
pushf
test
or
loopne
dec
pop
loope
in
divl
dec
int3
dec
jp
push
pop
inc
xor
loopne
rolb
pop
push
loope
in
pop
pop
mov
ffree
jmp
es
sbb
test
push
rol
loop
stos
inc
fxch
stos
fsqrt
fs
dec
mov
cwtl
daa
or
shr
jns
xor
rcpps
sbb
xor
test
aad
sar
das
fldenv
in
dec
lret
jmp
mov
pop
sub
push
push
aas
mov
popf
lea
lds
ret
ret
inc
sbb
pop
insl
pop
lahf
inc
loope
cmp
das
leave
ljmp
xor
int
push
adc
jmp
cmp
les
out
repnz
rorb
jmp
insl
adc
adc
pop
test
pop
cmc
mov
push
stos
andl
in
aas
es
ret
jle
nop
jno
pop
fnsave
imul
sub
mulb
jb
xchg
xor
pop
mov
outsb
test
ret
push
sarb
sub
add
test
or
aam
inc
dec
dec
mov
adc
arpl
cwtl
ljmp
in
mov
subl
imulb
pop
and
divb
and
repnz
ret
das
clc
loop
pop
xor
es
addb
lock
fnstsw
cmc
sbb
pop
rcrb
out
sbb
cmp
or
pop
fiaddl
stos
aam
iret
push
inc
or
xchg
roll
mov
ds
pop
scas
test
ret
lcall
xchg
cmc
hlt
shll
or
and
jmp
loope
xchg
mov
roll
xchg
push
repz
push
dec
add
mov
jg
aaa
mov
or
jo
sbb
fisubrs
or
jle
inc
jbe
mov
fldenv
ret
adc
loope
cs
aam
cmc
push
sti
sbb
int
int
inc
stc
in
leave
xorb
dec
aad
sbb
addr16
add
std
icebp
data16
divl
data16
jg,pt
or
inc
inc
pushw
pop
loope
adc
jbe
mov
push
sub
sbb
inc
lods
popa
pop
jo
or
sbb
jl
adc
inc
jecxz
int
arpl
fldl
imul
pop
jmp
dec
lds
andb
pop
imul
mov
pop
std
ffree
cmp
mov
mov
jl
and
stos
aas
lds
jecxz
ljmp
mov
sbb
fdivs
mov
stos
or
jecxz
mov
in
jb
xlat
xchg
mov
adc
ljmp
xchg
mov
or
ds
or
pop
pop
mov
mov
mov
jg
push
fcmove
fistpll
cltd
mov
xchg
cli
sahf
fisubl
mov
pop
in
test
xchg
cli
stos
ds
adc
cmp
adc
test
add
cmp
sbb
lcall
mov
push
xchg
shll
push
mov
cpuid
imul
repnz
testb
push
push
jns
mov
ds
fdivl
fnstenv
add
ret
mov
inc
dec
ljmp
and
sahf
ret
decb
enter
cmp
sub
or
enter
int
pusha
inc
push
mov
pop
or
inc
jmp
inc
shll
and
xchg
sub
xor
popa
cmp
clc
repz
sbb
cmp
mov
add
cmp
dec
dec
cltd
xor
cmp
call
lock
or
mov
lods
jge
in
in
mov
aas
cld
lock
xlat
gs
or
jne
aad
jno
int3
clc
add
lea
and
shll
dec
outsl
loop
jbe
rcl
sub
mov
rcll
cwtl
cmpsl
lret
test
add
int
push
sti
test
mov
rorl
cmpsl
lret
repnz
push
add
out
mov
jno
and
mov
adc
test
mov
sbb
in
arpl
inc
inc
rol
aam
or
jns
dec
leave
push
aaa
jecxz
fwait
lahf
lret
aas
sbb
mov
and
mov
push
ret
leave
out
mov
dec
or
ja
sub
fstpl
ret
inc
fsts
les
inc
mov
test
stos
iret
outsl
push
psubw
int
imull
in
jbe
sbb
enter
xchg
in
jge
xor
out
or
stos
mov
sbb
push
cs
fprem
jmp
mov
loopne
dec
push
sub
mov
mov
and
dec
add
jp
out
xchg
aam
mov
add
or
push
aas
xchg
push
sbb
mov
mov
dec
mov
dec
std
dec
in
mov
fdiv
outsb
repz
lret
mov
jo
inc
jo
inc
nop
or
lock
leave
pop
xchg
shrl
sbb
sbb
sbb
fnsave
jae
push
mov
inc
ja
stc
dec
jnp
popf
mov
push
mov
mov
movsb
or
lds
and
xor
hlt
repz
mov
into
dec
addr16
pushl
add
push
add
push
lahf
push
push
loope
cld
jecxz,pn
mov
rolb
dec
insl
lret
push
ds
push
in
xchg
mov
jl
sub
inc
addr16
jb
sti
rcl
sbb
into
ret
insl
jmp
dec
or
adc
rclb
out
stos
je
dec
aaa
jge
jl
dec
dec
outsl
lea
pop
pop
cltd
jns
mov
adc
xor
push
leave
dec
jne
scas
out
lea
notl
mov
pop
insb
cwtl
push
jnp
add
loop
jmp
sub
rclb
jae
data16
lret
shl
icebp
or
ficomps
lock
add
ds
cmp
add
xchg
dec
popa
inc
adc
insl
jp
add
pop
add
shrb
in
test
or
sbb
or
icebp
aam
xchg
dec
or
inc
out
sub
ds
push
bswap
stos
in
push
imul
sarb
cmp
lds
aam
cmp
loope
lock
test
imul
lret
push
and
cmpsb
aam
push
out
insl
and
data16
jnp
addl
and
jmp
movsb
mov
imul
push
outsb
lahf
loopne
push
jecxz
jb
shll
int
loope
andb
or
hlt
inc
xchg
sub
add
insb
ror
out
cmc
lds
push
lahf
mov
mov
aam
sarl
jno
sahf
rcll
pusha
cmp
dec
cmp
lea
xchg
lret
shrl
in
lods
inc
jle
int
push
dec
cmp
xor
xor
in
adc
push
push
insb
fildl
idivb
jg
leave
and
inc
int
hlt
adc
cmp
nop
adc
sbb
push
sub
jne
enter
stc
cmpsl
sub
aas
or
mov
idiv
jle
stc
xor
mov
mov
fldl
std
pop
addb
xor
jns
dec
or
test
aaa
std
and
psubsb
mov
pop
sarb
pop
pop
repnz
pop
add
stc
or
std
sarl
pop
xor
jge
and
aas
test
push
push
sbb
mov
mov
or
cwtl
and
call
inc
jmp
les
jno
clc
lret
leave
and
ret
test
inc
or
mov
rorl
enter
dec
or
rcr
aad
aas
rcll
push
fs
push
mov
imul
into
dec
int
in
dec
add
push
dec
jp
rol
push
stos
mov
sub
repz
or
sub
mov
pop
je
ljmp
psubq
scas
jo
ljmp
loop
fucomp
sbb
fstpt
or
fldlg2
dec
xchg
inc
sub
cmpl
negb
cmc
fstps
dec
out
pusha
dec
sti
or
cmp
std
cmpsl
in
fbstp
ja
mov
rorl
stos
das
adc
sbb
std
ss
fnclex
mov
sub
outsb
lret
mov
ljmp
std
fldenv
popw
cmpsl
inc
and
aaa
sbb
hlt
test
andb
lds
outsl
dec
push
sbb
push
xchg
loope
mov
xorb
sub
dec
bswap
es
int
xchg
sbb
loope
fstpl
cmc
pop
add
outsb
stc
popf
insb
je
stos
xor
in
add
sub
jge,pn
loope
and
cli
je
sbb
int3
and
push
scas
xor
jnp
mov
popa
divl
dec
ljmp
adc
add
xor
mov
or
mov
cmc
cmp
add
cmp
into
xor
xor
sub
pop
add
or
aam
icebp
push
adc
or
add
ret
or
into
xor
lcall
into
xor
ret
and
dec
orl
or
inc
imul
enter
cwtl
xlat
sub
and
mov
cmp
icebp
or
nop
int3
push
jecxz
loop
dec
flds
mov
xor
out
or
jg
sbb
or
push
sbb
outsb
sub
les
dec
pop
rol
dec
add
add
inc
sarl
loopne
in
sarl
popf
fisttpll
std
pop
scas
jl
or
push
jg
cwtl
cwtl
les
pop
push
jmp
cmp
mov
std
jg
dec
adc
inc
dec
sub
xchg
loop
or
sbb
fldcw
shlb
push
mov
ret
loopne
xchg
fimuls
mov
xchg
jp
sub
lret
jmp
and
lcall
mov
jnp
mov
fnsave
leave
test
add
out
adc
xor
xor
jecxz
pop
clc
int
ror
aas
and
lahf
fwait
test
push
dec
add
call
mov
lret
sahf
or
jne
cwtl
enter
jb
pop
stos
dec
outsl
shll
stos
push
pop
cmpsb
add
jne
inc
stc
xor
xor
sub
int
jl
ret
stos
inc
inc
or
pusha
jecxz
movsb
shrl
sub
cmp
add
dec
mov
push
hlt
lret
scas
xchg
jle
repnz
cmp
ja
xchg
cmc
mov
push
sti
mov
std
int
leave
add
iret
dec
in
sub
cld
fisttpll
roll
add
ret
aas
adc
dec
mov
jb
jg
dec
mov
jno
and
cmpsl
das
in
mov
lret
mov
movsl
movsl
push
sbb
scas
xor
cmp
ror
decl
jle
test
loope
aas
jmp
fyl2x
arpl
push
test
dec
mov
out
dec
lock
loopne
or
stc
sub
ret
aaa
int
rcl
jnp
pop
or
push
sbb
jge
sar
loope
in
xor
jbe
mov
in
sbb
fwait
xor
jnp
pop
pusha
pusha
push
cli
aad
rclb
mov
std
push
shll
mov
mov
or
iret
or
cwtl
and
fxch
pusha
add
shll
rcl
cmpsl
in
xchg
rolb
test
outsl
lds
test
in
dec
aaa
pop
push
jmp
movsb
cwtl
mov
add
add
jae
cmc
or
imul
cmc
loope
stc
inc
enter
out
into
jmp
cs
mov
adc
adc
mov
lea
cmpsl
dec
inc
jns
in
pop
add
insb
inc
add
cmp
sub
dec
in
xchg
loop
adc
dec
inc
or
sub
aam
fnstsw
fwait
push
leave
aam
fldenv
mov
paddw
aam
mov
loop
icebp
xor
jge
movsb
jns
pop
cli
test
enter
sbb
mov
sarl
test
rorl
sarl
outsb
test
xor
add
cmp
loope
aas
cmp
push
outsb
loope
cli
pop
or
cmp
jmp
mov
xor
dec
sbb
rorb
pop
add
inc
cld
icebp
xchg
xchg
mov
ret
cmp
negb
pop
in
add
scas
aam
xor
inc
and
cld
cmp
shll
in
jl
sub
pop
inc
mov
test
mov
mov
rcrl
dec
and
in
jno
cs
jae
aaa
xor
bound
xchg
cwtl
shll
sub
and
add
jns
sub
dec
fyl2xp1
jb
enter
dec
push
cmp
callw
pop
xchg
int
out
push
stos
cs
xor
lods
loope
add
pop
cltd
cmpl
push
sub
dec
aas
sbb
push
stc
orb
out
fld
mov
imul
inc
sbb
aad
mov
sub
xchg
ss
cmp
jo
sub
repnz
mov
or
inc
sub
or
dec
cmp
pop
ffree
popf
adc
loop
dec
adc
xor
mov
mov
dec
jge
jle
xchg
pop
xchg
jmp
clc
popa
in
sub
dec
jo
inc
je
aam
xchg
pop
in
push
add
mov
or
les
cmp
out
xor
xor
jae
repnz
xor
rep
mov
lods
mov
push
icebp
ja
mov
nop
and
sub
js
rcrb
pop
addb
dec
jo
in
sub
mov
data16
dec
not
roll
and
cmp
cwtl
pushf
aad
mov
jnp
dec
roll
jecxz
cltd
repz
inc
ret
sbb
aam
add
enter
add
mov
loopne
lret
test
mov
lods
inc
inc
rcl
inc
jmp
or
or
xor
outsl
pop
imul
xlat
aad
fcomps
es
push
loopne
sbb
stos
mov
lock
xor
arpl
js
push
cld
push
dec
imul
scas
pop
ficoml
sub
xor
or
out
or
add
clc
mov
push
add
lret
mov
inc
cmp
mov
enter
mov
push
out
mov
daa
push
sbb
aad
int
sub
in
sub
pop
addr16
sub
sbbl
push
in
movsb
jb
sbb
paddusw
mov
or
nop
shll
lods
es
in
mov
or
or
and
hlt
lods
dec
add
jle
cld
or
push
mov
mov
mov
xchg
shr
fisubrl
push
arpl
icebp
ss
fcmovbe
jno
xor
sbb
popa
movsb
imul
stos
ret
mov
popa
test
adc
pop
and
xor
cmp
call
adc
jmp
loope
int
std
lock
push
mov
or
sub
mov
xor
inc
push
inc
lret
fdivrs
mov
aaa
fld
xchg
and
fists
mov
sub
push
xor
fisttpll
mov
xchg
xchg
lret
js
mov
dec
in
mov
lret
xor
mov
daa
sbb
add
aam
movsb
fptan
shlb
jo
hlt
fcmove
cmc
cwtl
jnp
sub
push
pop
or
imul
and
lods
mov
jge
addr16
sub
pop
in
xlat
hlt
js
pop
push
ss
gs
test
inc
pop
sarb
xchg
popa
aad
add
pop
inc
insl
inc
dec
aam
test
cmp
mov
cli
mov
fistpll
scas
lods
xchg
xchg
aad
xlat
sub
jmp
arpl
push
sub
adc
sub
pop
test
dec
test
jmp
jge
mov
fidivs
push
fsubr
and
pop
shl
repz
pop
xor
addr16
and
jo
inc
adc
cmc
mov
jno
in
test
mov
or
out
sbb
and
push
xchg
or
cmc
mov
sbb
mov
mov
pop
push
out
and
subl
in
mov
or
push
lret
xlat
cwtl
imulb
call
jmp
icebp
sarl
sahf
push
cwtl
add
inc
push
cmp
and
fadd
or
dec
cmp
int
movsb
cmp
xchg
xlat
lret
adc
mov
fisttpl
xorl
cmc
xor
sub
rcrl
push
mov
das
jnp
add
pop
push
cmp
lds
cli
arpl
jae
lahf
cmp
mov
or
aas
adc
rorl
call
mov
jle
addb
jmp
in
loop
xor
mov
out
fst
sbb
icebp
enter
pop
xor
adc
push
fsts
icebp
push
pop
dec
mov
shrd
mov
das
add
jnp
leave
gs
stc
movl
fdiv
pop
addr16
or
sbb
sbbl
sbb
xchg
loopne
cld
das
in
flds
cwtl
mov
pmaxub
cltd
xchg
leave
cmpsb
adc
int3
adcb
mov
ss
mov
cmpsb
cltd
ret
push
in
pop
rolb
pop
dec
or
adc
imul
out
dec
sbb
cmp
stos
lea
xor
mov
dec
mov
scas
mov
shll
sub
test
cmp
inc
mov
rcrl
dec
icebp
ljmp
jbe
jge
popa
push
xor
xorl
repnz
xor
ds
xchg
ret
cmp
pop
int
aaa
mov
aad
mov
sbb
lret
xor
in
daa
cwtd
push
pusha
arpl
inc
xor
add
mov
inc
andb
mov
std
pop
loopne
clc
xor
jns
adc
sub
inc
hlt
stc
dec
mov
mov
cmpsb
inc
adc
loopne
std
icebp
xor
add
dec
into
aaa
outsl
test
inc
add
ss
mov
push
sub
mov
dec
lock
out
sub
push
pop
inc
iret
jae
sub
mov
and
sub
and
hlt
insl
push
aaa
ss
mov
cli
pop
mov
xchg
pop
sbb
pop
xor
fnsave
add
pop
loope
sub
push
cwtl
sbb
dec
decl
jmp
into
pop
addl
cmpsl
int
sahf
mov
in
xchg
mov
aad
jae
inc
daa
test
mov
rcll
xchg
adc
cs
sub
mov
xor
insb
daa
jo
and
popa
push
xor
mov
jo
cli
xchg
shll
jge
popa
shrl
push
lret
jno
lock
scas
fldenv
nop
adc
sbb
add
mov
testb
std
fdivs
adc
inc
gs
jecxz
and
out
add
repnz
fdivs
pop
movsl
lds
mov
cs
mov
ror
push
es
test
repz
xchg
cltd
ret
mov
jns
adcl
and
in
dec
sbb
xchg
fs
add
aam
mov
mov
mov
or
mov
dec
jmp
lret
dec
repz
cmp
testl
divl
rorl
adc
aas
push
xchg
pop
fmul
add
imul
mov
mov
stos
mov
mov
into
dec
bound
sub
sub
add
movsl
test
fs
leave
pop
mov
sbb
mov
adc
fstp
lds
xorb
mov
jmp
xchg
push
cli
xor
cmp
dec
ret
stos
loopne
dec
sub
pop
xlat
mov
orb
push
je,pt
cmpsl
mov
mov
dec
jmp
out
xchg
inc
stos
insl
cmc
or
das
shrl
sti
js
setb
xacquire
cmp
mov
add
test
xlat
pop
leave
sub
int3
push
das
xchg
insb
repnz
mov
add
shlb
mov
xchg
aam
mov
js
or
movsb
mov
aas
icebp
adcb
add
arpl
or
stos
aas
adc
cmpb
lret
dec
push
les
jne
or
repnz
test
stos
jae
sbb
mov
arpl
stos
pushf
push
aad
xor
xor
cmp
lret
dec
ds
fcomi
jecxz
push
hlt
jno
or
mov
jns
roll
aaa
popa
dec
inc
or
jmp
pop
jle
cld
cmp
test
into
jb
push
or
incb
outsl
icebp
stc
pop
mov
xor
les
std
sar
inc
ret
shl
cli
push
cmpsl
inc
fiaddl
into
dec
fs
mov
sub
add
sub
pop
popa
cmp
out
cmp
ljmp
pop
lcall
push
popf
dec
dec
imul
jmp
insl
adc
add
mov
push
mov
rorb
mov
cwtl
cmc
lds
mov
add
leave
push
adc
cmp
jecxz
int
leave
mov
or
or
aad
jae
jb
lods
cmc
dec
push
add
aam
jns
pop
pop
push
enter
mov
mov
mov
jb
xchg
addl
les
leave
aam
insl
xor
stc
sar
aas
icebp
add
xchg
repnz
dec
cmp
iret
push
push
repnz
in
mov
mov
pop
test
mov
mov
outsb
repnz
or
fcomps
push
lret
jg
xchg
rcr
lds
inc
insl
mov
repz
and
inc
stc
jae
out
cmp
mov
dec
add
shrl
popa
mov
clc
jecxz
or
imul
mov
adc
stos
in
dec
or
mov
leave
inc
test
into
ljmp
lcall
enter
arpl
push
test
addr16
add
and
dec
push
shll
cmp
pop
inc
xor
cmovnp
sbb
icebp
sub
adcb
int
dec
xchg
fmull
sarb
in
mov
mov
stos
sbb
push
loope
shlb
mov
dec
sub
repz
fucom
pop
and
jne
mov
test
add
int
je
lret
mov
fstpt
add
sbb
rcrl
into
enter
test
lds
sti
dec
xor
mov
cmpl
add
mov
in
stos
int
into
dec
xor
jae
out
je
jle
dec
icebp
dec
les
aad
cmp
fidivrl
dec
jno
pop
imul
mov
dec
and
loope
lret
leave
test
int3
addb
sbb
pop
pop
lock
mov
xchg
dec
pop
or
adc
sub
fsubs
pcmpeqw
jl
pop
ret
enter
inc
cmpsb
sub
dec
pop
sbb
mov
shl
out
fstp
ret
jg
sub
repz
fstpl
in
jns
mov
rcrb
popa
pop
int
jmp
bound
mov
iret
add
addl
jmp
mov
jb
inc
scas
cmpl
lds
popf
jo
jae
sbb
jne
aaa
ror
push
aad
jp
cmp
mov
sub
and
rcrl
aam
in
jae
jno
or
gs
xchg
pop
sbb
mov
ret
pushf
fnstenv
stos
movsb
cmp
icebp
out
dec
lods
dec
or
push
es
lcall
lods
int
icebp
aaa
fucom
lods
pop
inc
adc
adc
jb
xchg
je
dec
cmp
and
and
stos
faddl
ds
xor
adc
xchg
push
and
inc
hlt
mov
cld
or
jmp
ds
mov
lods
push
adc
dec
outsl
dec
lds
loopne
popf
jge
enter
xchg
stc
adc
sbb
lret
mov
pop
rcr
or
sti
dec
std
pop
test
dec
je
and
pop
bnd
sarb
cltd
aas
mov
aaa
pop
jb
inc
inc
mov
popa
sub
fcomps
jmp
and
icebp
adc
ret
or
push
rcll
cmc
mov
lock
pushf
roll
mov
pushf
pop
lods
hlt
adc
insl
push
lds
nop
inc
in
dec
jl
aad
data16
jnp
xor
mov
repz
daa
fsts
insl
push
cmc
outsb
cli
loope
sbb
xor
jne
adc
xor
std
mov
aad
bound
fimull
das
pop
leave
cmp
or
sbb
lcall
sub
xor
jns
dec
adc
push
fwait
and
mov
fiaddl
lret
mov
jnp
sarl
or
das
add
jg
test
je
dec
lahf
xor
pcmpgtd
enter
or
out
js
mov
insb
sbb
sbb
lods
cs
insb
enter
sbb
dec
dec
lea
push
test
dec
or
jecxz
add
out
rep
mov
add
call
bound
mov
pop
push
add
iret
roll
shrb
adc
in
jmp
fdivrs
xchg
or
sahf
inc
pushf
sbb
inc
push
ror
loopne
jecxz
xchg
int3
lds
or
test
lods
adc
sbb
mov
shrl
loope
lds
dec
cmp
std
std
push
and
insl
jge
push
or
stos
and
inc
xchg
cmpsb
lods
shrb
pop
imul
fstpl
xchg
push
add
or
in
jbe
imul
adc
xchg
inc
or
pop
cmp
and
sub
cmp
enter
test
popa
and
loope
mov
dec
dec
or
daa
mov
test
stos
inc
notl
andl
xchg
push
fmuls
pop
dec
add
ret
std
add
fcmovbe
pop
dec
addr16
or
loope
clc
ror
es
mov
out
dec
xchg
mov
or
mov
jne
cmp
dec
roll
dec
lds
scas
outsb
dec
push
lahf
jo
mov
popa
mov
pop
jg
push
inc
jae
inc
leave
stos
mov
push
out
add
leave
fists
jae
imul
fisttpll
aad
test
pop
add
jo
mov
mov
cli
mov
mov
xchg
repz
cmp
scas
and
xlat
sub
dec
in
jge
pop
inc
stc
dec
loope
sti
push
daa
jne
xchg
mov
stos
or
pop
pop
sbb
jmp
jle
faddl
lds
scas
dec
jmp
enter
call
cmp
lsl
push
or
aaa
mov
inc
mov
adc
pop
and
loope
xlat
push
sub
jl
adc
jmp
imul
fnstenv
mov
xchg
jmp
cmp
fnstsw
sbb
dec
popa
ds
stc
paddq
mov
sub
add
mov
out
scas
stc
and
sti
jge
push
add
mov
pop
push
and
scas
add
and
rclb
fwait
dec
ret
sarb
or
ret
sbb
rcr
sti
jmp
int3
int
lds
push
mov
icebp
or
aaa
testl
jmp
dec
outsb
enter
jmp
push
test
fimuls
hlt
icebp
flds
test
lret
dec
or
mov
and
lds
adc
sbb
jg
xor
or
cmp
xor
aam
cmc
mov
mov
mov
cli
gs
or
push
or
mov
inc
icebp
add
add
shl
mov
and
jns
out
sub
dec
sbb
jg
jb
aam
jl
push
jo
inc
stc
adc
xchg
iret
jns
ret
sbb
cmp
scas
mov
sub
jo
mov
mov
jl
pop
mov
cmpsb
ret
inc
les
ret
dec
xor
sti
mov
cmp
rol
inc
pop
inc
push
insb
lds
or
mov
pop
fdivrs
outsb
jmp
mov
aad
mov
fmuls
dec
shlb
pand
push
ljmp
enter
test
test
xor
add
gs
pop
xchg
jg
xor
andb
pop
cmp
or
stos
ret
out
in
inc
lret
nop
fst
cmp
fcmovnu
test
dec
sub
orl
ljmp
dec
push
es
fiaddl
fnstcw
in
lock
testb
mov
lock
jmp
and
aad
mov
lea
inc
mov
fldenv
cmp
add
lods
xor
test
rclb
fwait
mov
shlb
std
sbbl
in
aaa
push
scas
insb
jg
inc
jo
aaa
cmp
int
xor
cmpl
dec
mov
sbb
sbb
and
xlat
iret
stc
inc
or
push
jecxz
imul
iret
aad
mov
sbb
adc
cmc
aas
outsl
push
mov
in
dec
xlat
sbb
std
mov
pop
mov
xor
sbb
stos
pop
mov
sbb
hlt
push
jne
add
pop
mov
cmc
dec
sbb
push
dec
outsl
inc
dec
pop
jbe
pop
dec
std
and
add
mov
jge
push
add
js
cmpsl
dec
push
mov
or
test
in
daa
adc
mov
jecxz
sarb
stos
mov
jo
mov
aam
jle
into
je
rclb
mov
cmp
push
insb
mov
mov
cwtl
push
xchg
call
or
inc
and
ret
mov
cwtl
jns
icebp
inc
mov
inc
fidivrl
adc
fildl
je
xor
lds
lds
adc
adc
xorb
psrlw
adc
mov
stos
in
cli
jle
xlat
mov
ljmp
clc
or
andb
add
loope
clc
cmp
inc
ret
addl
mov
je
jbe
sub
dec
jecxz
pop
mov
and
mov
mov
fimuls
push
xchg
mov
jbe
jns
int
jb
pop
mov
call
call
adc
cld
or
adc
cwtl
sbb
cld
lds
mov
push
sbbl
stos
loope
iret
jns
xor
ljmp
push
ja
fnsave
pushf
xor
jb
xor
mov
cld
sub
dec
or
ret
jae
jecxz
lods
push
loopne
adc
and
sbb
addb
and
enter
rol
lods
mov
add
sub
ret
leave
sub
shrl
frstor
dec
jg
lock
icebp
add
repz
cmp
insl
rolb
cmc
notb
cmc
add
enter
sbb
jnp
dec
pop
cmp
push
xchg
jns
add
or
jmp
sbb
repnz
mov
cwtl
clc
add
mov
jae
push
mov
popa
shlb
and
lock
ljmp
enter
leave
xchg
es
jmp
ret
push
pop
push
pop
cmc
js
xlat
div
icebp
outsl
push
push
xlat
adc
add
sbb
repnz
dec
sub
add
xor
and
inc
idivw
push
fnsave
pcmpgtd
leave
push
es
add
push
rcl
daa
jle
inc
dec
hlt
cmc
jne
imul
addb
cmpl
movsb
cmpsl
ficompl
icebp
nop
xor
xchg
in
cmc
fs
and
xor
sbb
inc
repnz
iret
xchg
enter
ljmp
xchg
test
and
inc
inc
inc
xchg
call
das
jmp
outsl
stc
dec
daa
sub
cmc
mov
mov
ret
mov
test
ss
push
lods
and
mov
add
lret
sbb
iret
in
jns
and
int3
push
sub
xchg
bound
xor
sbb
repnz
flds
sarl
das
fstps
ror
or
sbb
test
adc
iret
out
jbe
inc
imul
dec
int
lcall
add
inc
mov
jae
push
mov
loopne
cmpsb
rcl
insb
fs
jbe
pushf
lds
xchg
cs
pusha
push
sbb
pop
adc
mov
adc
rolb
or
jo
pop
jno
mov
sbb
sbb
dec
jae
shr
cli
jbe
call
clc
aas
or
stc
lea
ds
xchg
mov
cltd
nop
pop
loope
adc
push
mov
data16
in
hlt
mov
xor
jg
out
paddsb
hlt
cs
sti
jae
in
push
mov
mov
int3
xchg
or
cmp
xor
shll
push
inc
imul
test
add
mov
leave
mov
lahf
pop
pop
mov
mov
iret
mov
cmp
mov
daa
div
sbb
inc
sbb
add
mov
negb
push
push
enter
call
loop
fadd
out
fs
cwtl
xor
pop
fbld
es
and
add
or
rol
or
pop
shl
jl
dec
mov
and
imul
xor
pushf
or
les
mov
and
aam
scas
hlt
sbb
mov
sub
repnz
push
adc
bswap
sbb
pop
sbb
enter
push
xorl
dec
cmpsl
sahf
xchg
sbb
mov
popa
lock
je
inc
push
imul
int
sbb
xchg
mov
pop
add
cmc
shll
aas
testl
imul
rcr
jmp
xchg
add
or
jmp
rorl
jns
outsl
ja
sub
or
mov
inc
add
repnz
mov
rorl
test
pushf
jmp
jecxz
jne
pop
jo
xor
jp
bnd
jnp
iret
ja
add
jo
sbb
cmpsb
and
xor
inc
fdivr
cltd
sbb
cmp
outsl
sarb
and
dec
leave
jb
stos
cmp
sahf
pop
loope
aas
imul
cli
loopne
xor
jmp
or
push
loop
int3
push
dec
inc
dec
push
jmp
dec
mov
xor
mov
mov
sub
or
loope
jne
sub
loop
out
enter
cli
movsb
and
dec
mov
in
xor
outsb
leave
mov
mov
xor
aad
outsl
in
mov
cmpsb
aas
out
xchg
cmp
mov
rcl
enter
add
dec
add
sahf
ja
add
sub
subl
mov
inc
mov
cmc
sub
cltd
cmpsb
mov
jmp
add
push
or
aam
push
psubusw
xor
cmp
cli
fs
loop
ljmp
out
jns
jno
and
dec
testl
jmp
lahf
mov
in
pop
cltd
xor
inc
jmp
cmpsl
out
sub
xchg
push
dec
sub
mov
daa
inc
mov
idiv
xor
dec
pop
mov
enter
mov
test
imul
mov
ret
add
xor
push
adc
data16
insl
scas
push
xchg
pop
les
xor
cmpsb
dec
cmp
in
int
jo
cmp
adc
add
dec
cwtl
fcoms
shl
dec
add
mov
icebp
test
shrl
and
adc
dec
rolb
or
repnz
icebp
lahf
fcoml
cltd
pop
rolb
clc
les
mov
push
or
leave
mov
test
sbb
in
lods
addr16
mov
and
push
dec
and
or
sbb
or
scas
aad
aad
scas
rcl
mov
rcrl
sahf
inc
sbb
sbb
sahf
aam
flds
stos
pop
dec
jo
adc
and
es
sub
ror
inc
leave
leave
loop
jno
testl
inc
popa
mov
into
mov
stos
daa
mov
notb
pop
xor
sub
ljmp
push
roll
dec
lcall
jmp
stos
cmc
fsubl
dec
mov
insl
test
sti
jb
frstor
sbb
cmp
pop
loopne
adc
push
or
andl
jb
dec
lret
in
leave
mov
iret
lea
repz
xor
xor
lock
adc
aam
mov
ret
jne
std
shl
inc
pop
sub
out
mov
jle
insl
lds
dec
shll
data16
rorb
adc
jecxz
cmp
mov
adc
es
mov
jmp
stos
pop
shlb
fstps
mov
les
cmp
lret
jl
jmp
sbb
lods
ret
and
pmullw
fcmovnb
push
cmc
mulb
push
mov
jne
or
lods
adc
stos
mov
fsts
adc
xchg
pop
fcmovne
and
in
inc
aad
sub
mov
pusha
and
leave
jno
adc
loope
adc
push
mov
or
mov
repz
cmp
jle
fildll
adc
dec
cli
xor
add
in
icebp
sub
sti
ljmp
test
outsl
dec
pop
cli
iret
scas
cmp
mov
push
push
add
shlb
cmp
stos
test
jle
push
dec
or
stos
push
divl
stos
fmuls
movsl
rcll
pop
push
or
loope
aam
adc
sbb
jle
outsb
fdivrl
or
js
dec
in
insb
adc
pop
fwait
jo
dec
outsl
fucomp
xor
xor
pop
push
add
xor
je
xlat
shll
stos
andl
int
dec
test
sbb
rorl
out
cmp
sbb
popa
cmp
xor
test
push
les
cmp
sahf
jmp
ds
push
outsl
in
jmp
in
daa
imul
std
push
mov
or
ficoms
std
in
jns
mov
lret
fs
ror
clc
insb
sub
or
mov
in
xor
into
aaa
fisttpl
ret
mov
test
pop
fwait
sub
or
mov
jmp
int3
aam
stos
insl
cli
pop
imulb
lahf
xchg
add
jnp
into
mov
mov
cs
inc
ficompl
mov
jp
andb
jmp
cmp
pop
icebp
aam
cmp
or
mov
aaa
shll
loopne
pop
filds
jge
cmp
movb
sub
aaa
lret
nop
mov
sub
mov
sbb
ret
cmpl
arpl
hlt
pop
mov
int
leave
fidivl
mov
iret
dec
fdiv
dec
fldenv
imul
xor
mov
testl
and
dec
sub
push
and
rorl
and
add
ds
test
movsb
fldcw
and
ret
int
mov
addr16
mov
loope
icebp
inc
mov
mov
enter
cmp
iret
or
stc
jmp
cmpsl
iret
adc
mov
xor
xor
xchg
gs
loopne
inc
stc
pop
mov
ret
fld
mov
pushf
jbe
lds
xchg
sarl
mov
stos
inc
scas
dec
pop
push
aad
pop
in
mov
ljmp
and
jmp
pop
incl
mov
aam
push
fimull
dec
or
int3
aam
add
std
in
fwait
pop
or
repz
push
sub
popa
in
out
adc
sub
daa
ljmp
data16
aad
xor
xor
fdivrl
into
outsb
fbld
dec
psubsw
inc
in
and
dec
inc
adcl
sbb
popf
sbb
in
inc
scas
out
sub
out
frstpm(287
mov
push
shlb
push
pop
popa
test
rcr
dec
sbb
jno
xchg
lds
cmp
iret
rol
add
fisubs
inc
mov
jno
lock
jg
outsb
or
es
push
adc
dec
in
push
enter
push
jg
and
inc
add
lods
sbb
cmpl
adc
pop
psrlw
mov
dec
stc
cli
jecxz
notl
stos
adc
sbb
cli
jbe
nop
add
icebp
dec
jne
jg
sarb
dec
mov
push
xor
daa
or
cmpb
mov
scas
sbbb
add
pop
or
mov
cmp
xor
rol
mov
xchg
sbb
hlt
push
ljmp
mov
hlt
nop
ljmp
mov
int
xchg
scas
daa
cmp
xchg
inc
pop
mov
flds
iret
fcoms
dec
movsl
mov
cli
or
sarl
add
jno
dec
mov
ror
cmc
ss
icebp
sub
lahf
add
ja
imul
cs
push
in
fstpl
xor
xchg
or
into
xor
in
loop
shrl
jge
in
shlb
sub
shl
inc
jb
push
jl
or
clc
insb
inc
inc
mov
jno
mov
xor
mov
jo
shll
lret
sbb
stos
pop
fadd
mov
push
jmp
sbb
mov
mov
popa
push
sub
scas
push
add
pop
or
adc
sti
dec
cli
jmp
mov
notb
in
in
adc
jmp
jecxz
fcmovbe
imul
popa
lret
dec
inc
mov
out
mov
adc
into
pusha
or
outsl
sbb
dec
mov
xor
adc
add
jns
test
pop
xchg
or
filds
pop
out
mov
loopne
adc
lods
fstps
daa
psubsw
scas
and
inc
inc
inc
adc
xor
fdiv
mov
shll
fiadds
xor
hlt
dec
push
ret
xchg
cld
adc
stc
scas
clc
mov
ja
push
pop
xlat
push
fidivrl
hlt
lods
orb
pop
in
cmpsl
inc
or
test
cld
jmp
sbb
sti
push
xor
aam
leave
adc
mov
adc
mov
jbe
pop
and
mov
cmp
mov
xchg
push
push
cmp
orl
mov
add
rcrb
dec
in
cmp
mov
rol
inc
cmp
or
sbb
inc
mov
push
int
mov
inc
push
ds
aam
cwtl
mov
add
pop
das
mov
xor
fcmovu
jb
popa
dec
in
mov
sub
aas
lret
sbb
inc
jmp
arpl
mov
in
xchg
lret
icebp
testb
push
mov
xchg
mov
je
xor
fdivrs
fnsave
out
pop
adc
mov
aam
add
in
dec
rsqrtps
mov
sbb
mov
jns
or
sbb
pop
or
inc
sbb
mov
push
sub
push
pop
lods
popf
in
adcb
and
test
mov
aas
jno
icebp
mov
jl
pop
popa
mov
push
sub
into
push
mov
jo
jl
add
inc
adc
mov
je
insb
int3
scas
loope
or
iret
mov
cmp
cwtl
aaa
out
cmpsb
lcall
pop
orb
mov
mov
push
shll
aad
push
inc
or
jo
mov
ja
or
arpl
rcrb
pop
outsb
ret
push
sbb
push
push
sbb
lret
mov
mov
out
sbb
cmp
mov
iret
jns
test
inc
jg
sbb
addr16
adc
call
xor
and
inc
dec
outsl
pop
dec
icebp
not
sbb
cmp
adcb
in
mov
movsl
add
mov
fwait
lock
imul
mov
and
mov
into
push
pop
dec
insb
xlat
call
rcl
in
add
leave
aad
or
and
jg
add
jnp
dec
outsb
cmp
add
shr
and
out
aas
sbb
fdivl
sti
mov
in
dec
add
stos
fdivl
mov
ret
mov
pop
mov
sahf
lcall
or
push
jecxz
mov
add
push
mov
cmpsl
add
mov
rcll
aaa
xor
jmp
lock
and
leave
into
aam
pop
popf
or
add
call
jmp
jbe
jns
daa
adc
inc
data16
cmovo
sub
mov
fidivrs
mov
mov
xchg
mov
and
and
imul
popa
orb
into
mov
aam
pop
mov
dec
jmp
xor
daa
test
jns
mov
sbb
lods
out
xor
into
into
repnz
lret
push
fildll
cmp
nop
inc
xchg
dec
repz
icebp
test
jecxz
mov
jb
roll
movsb
push
dec
push
mov
bound
xchg
sbb
mov
push
aam
add
test
xchg
adc
int3
xor
mov
sub
insl
dec
hlt
test
jno
push
lds
inc
xchg
nop
iret
enter
xor
test
push
andl
dec
in
imul
aad
adc
loop
leave
out
test
cmpsb
adc
cwtl
sub
jbe
xchg
shlb
dec
shrl
sbb
shll
shr
cmpb
push
mov
pop
or
stc
dec
xor
mov
ds
fnstsw
cmc
fstpl
sbb
add
inc
adc
dec
and
ret
int
mov
xchg
add
jl
or
dec
std
call
inc
mov
icebp
leave
push
insb
ds
or
in
xorl
out
sub
into
outsb
sbbl
clc
mov
stos
mov
filds
cli
mov
dec
mov
pop
jp
and
pushl
enter
lock
jle
jb
stos
jne
aas
cli
ja
jg
jb
jge
mov
adc
mov
cld
xor
das
out
rcll
mov
mov
loope
cli
mov
rclb
pop
out
add
lds
sub
mov
loope
jl
stos
jp
and
mov
pop
fwait
inc
jecxz
push
int
in
cmpsl
les
mov
mov
sti
mov
rol
imul
pop
dec
inc
lea
jb
xor
xchg
sbb
adc
push
rcl
mov
pop
in
cmc
add
jmp
scas
jns
int
loope
lock
mov
mov
mov
shll
je
shrb
pop
lock
mov
pop
mov
or
jno
jmp
xchg
loope
xor
add
pop
leave
adc
inc
jns
imul
lret
test
jle
cmp
rcl
std
xor
in
leave
vpsllw
cmpl
mov
xor
sub
hlt
leave
test
cmp
or
pusha
jbe
out
mov
dec
sub
stc
mov
call
jne
leave
test
dec
jl
repz
mov
dec
ret
mov
repnz
test
pusha
not
hlt
scas
pop
mov
or
jge
pop
and
negb
mov
lcall
dec
dec
pop
aam
inc
in
push
mov
popf
inc
jmp
sub
shll
dec
add
inc
sbb
jecxz
lds
shlb
std
dec
or
loop
or
andl
fsubl
inc
or
jp
jae
leave
xor
or
mov
imul
jle
iret
pushf
jnp
sbb
cmp
ds
mov
and
and
clc
pusha
cmp
fdivrs
or
inc
into
inc
dec
aas
shl
and
or
and
das
shl
inc
mov
loope
lds
push
xchg
and
rcrl
cmpsl
cli
mov
or
enter
add
and
ret
jle
or
mov
jecxz
adc
mov
mov
aaa
xor
fucompp
mov
mov
mov
xor
std
dec
imull
mov
stos
add
popf
inc
leave
jo
sbb
xor
lds
ja
adc
xchg
mov
fimull
dec
add
incb
xlat
sbb
lea
or
or
int
incb
outsb
loop
jno
dec
icebp
cmp
shlb
dec
or
fiadds
and
add
sbb
jb
sbb
lret
push
mov
jg
add
fisttpll
leave
pop
dec
and
ret
fadds
jnp
cmp
cwtl
leave
divb
notb
inc
inc
lret
mov
div
mov
mov
nop
and
lods
adc
in
sub
cmpsb
sub
in
orb
and
xor
mov
mov
roll
pop
mov
jns
mov
fnop
ret
fucomp
mov
sub
sub
dec
dec
pop
mov
jb
arpl
or
stc
dec
sahf
push
mov
icebp
mov
and
sub
out
stos
mov
push
add
lcall
jns
in
divl
decb
lds
lds
pop
aam
outsl
rcrl
stos
aas
ret
push
test
inc
outsb
mov
ja
cli
pushf
out
popa
scas
jne
dec
outsb
fs
mov
xor
cmc
sbb
call
dec
add
xchg
shlb
inc
jo
add
or
mov
xchg
cli
cmpb
out
outsb
dec
cmp
jle
dec
sbb
mov
cmovle
inc
cmp
cli
cmpsb
ds
mov
xor
add
imul
pop
mov
clc
je
ret
sbb
inc
inc
ret
mov
jae
fldenv
je
jge
inc
push
mov
pop
insl
ret
nop
mov
enter
inc
push
stc
mov
out
jp
push
mov
xor
cmp
inc
jb
repnz
inc
sub
ror
mov
dec
roll
loop
mov
jp
ret
or
test
out
stos
add
cmp
dec
xor
jnp
adc
fidivrl
ds
call
orb
mov
int3
cli
mov
xchg
jbe
xor
aam
mov
inc
ret
sarl
and
lock
mov
push
xor
imul
jg
mov
ds
inc
aas
lds
ret
outsb
mov
mov
lock
or
cli
mov
mov
lret
test
jo
dec
clc
sbb
in
iret
scas
and
mov
jmp
mov
les
and
hlt
imul
aam
rorl
daa
inc
repnz
fs
sbb
iret
xchg
xor
lock
dec
icebp
ss
mov
ret
fwait
xchg
std
sub
push
add
push
adc
aas
and
dec
sub
aas
out
inc
cltd
push
or
xchg
or
sbb
pusha
shll
ljmp
aaa
mov
push
je
jns
fmul
outsb
jge
mov
mov
iret
push
inc
stc
call
std
mov
setnp
test
inc
xor
repz
enter
das
int
in
aam
cld
pop
shr
adc
shl
aas
or
idivb
push
pop
and
test
push
andl
icebp
hlt
mov
or
mov
xlat
out
cltd
mov
mov
and
push
cmpsl
add
xor
fnstsw
adcl
lds
adc
shlb
bound
xor
xor
xor
cli
addl
mov
adc
fs
xor
lahf
xor
pop
movsl
nop
mov
inc
ffree
fs
push
sarb
mov
mov
dec
jl
repnz
and
int
test
leave
dec
mov
sbb
or
jbe
aas
add
mov
out
push
or
and
fsub
and
icebp
dec
pop
sub
lds
pop
icebp
jge
mov
jmp
jg
mov
dec
sub
inc
popf
mov
push
test
add
hlt
push
ljmp
inc
shl
jb
mov
dec
adc
xor
jbe
lcall
js
test
push
xchg
pushf
pop
repz
frstor
lcall
lret
adc
andl
push
sbb
mov
or
and
subl
mov
inc
test
ret
or
jg
pop
in
cmp
sbb
lret
xchg
cwtl
das
add
fnclex
or
sub
in
mov
je
adc
ljmp
and
lds
xchg
adc
gs
mov
push
aam
pop
fidivl
mov
fisttpll
jl
sub
nop
dec
ds
int3
lock
add
div
lcall
cmc
loop
stc
and
add
xor
mov
movsb
fwait
push
into
dec
pop
pop
xor
ficomps
fldl
fld
sbbl
mov
pusha
out
aad
add
inc
sbb
aas
jae
xor
pop
mov
in
fcmovnbe
sub
adc
call
mov
rolb
cmovb
mov
and
dec
jo
mov
dec
cmp
ret
mov
add
push
push
in
mov
mov
lock
push
mov
loope
mov
stc
ret
and
stos
dec
mov
dec
or
mov
addb
ljmp
xor
adc
aam
int
cs
cmp
push
pop
mov
sarl
jmp
xchg
xchg
stos
dec
add
jmp
or
add
adcl
repnz
icebp
sub
and
adc
or
scas
jne
inc
add
pop
shrb
pushf
mov
push
call
lds
stc
dec
into
dec
adc
dec
mov
data16
mov
mov
stos
aas
adc
push
lcall
sbbl
fistpll
or
xor
cmp
out
mov
lock
icebp
xor
cmp
jo
enter
popa
jge
sub
icebp
xchg
pop
test
cmc
or
mov
aaa
push
jbe
shrb
or
or
or
add
jmp
push
loop
add
lahf
es
xchg
mov
decl
es
fistpll
mov
repnz
enter
mov
and
cmp
mov
or
mov
daa
roll
fnstenv
mov
cmp
sbb
aam
jle
cli
mov
dec
cli
or
shll
jg
rclb
jae
mov
popa
push
je
aaa
dec
push
mov
xor
ds
jns
dec
test
int
arpl
shrl
or
stos
inc
sub
jg
pop
rcrl
int
or
mov
fcoml
ja
pop
cmpl
dec
and
nopl
test
shll
out
mov
stos
enter
mov
xchg
sub
sub
sbb
mov
jp
in
mov
push
ffreep
dec
or
pop
and
jae
pop
jb
push
cltd
lods
pop
or
adc
movsb
sub
fldl
aam
lret
sbb
add
je
mov
sub
fs
scas
mov
jmp
test
shll
test
cmc
cmp
jno
divl
add
push
and
mov
ret
mov
movl
paddb
xchg
rclb
cmp
stc
jne
insl
inc
rcpps
adc
test
dec
xor
or
add
ds
mov
enter
daa
jecxz
add
sbb
aas
push
add
jo
imul
test
jae
xchg
or
outsb
popf
push
loop
lods
pushf
push
mov
imul
lds
push
stos
mov
sbb
push
xchg
dec
xlat
div
ret
or
arpl
cs
out
dec
add
pop
mov
int3
ret
jno
and
mov
add
fs
leave
dec
mov
test
aaa
xor
jg
push
loope
jg
pusha
repnz
fucom
inc
pop
aas
xor
ror
mov
fsub
push
mov
ret
js
jo
push
dec
cmp
mov
lods
stc
pop
ds
mov
lret
lods
dec
dec
ja
lock
inc
jge
xor
dec
mov
sbb
cmp
inc
sbb
jmp
mov
data16
mov
add
outsb
cmc
stos
dec
movsb
jg
adcb
xchg
into
inc
xchg
inc
jns
aad
xchg
xor
add
sbb
xor
mov
adc
sahf
loope
shlb
cmp
addr16
lds
mov
add
dec
in
pusha
das
add
cwtl
mov
adc
popa
in
cmpsb
cmc
jl
daa
adc
or
jne
push
flds
xchg
xor
mov
idiv
push
and
dec
fnstenv
lods
sti
dec
loope
push
and
imul
mov
jle
loop
and
pushf
ret
push
stos
enter
jno
xor
cmp
jl
xchg
pop
icebp
aas
insb
jns
adcb
inc
lods
shll
sub
ljmp
jne
dec
mov
in
daa
repz
or
xor
movsl
xchg
pop
or
mov
mov
je
dec
iret
or
in
gs
dec
mov
push
ret
jno
xchg
shl
jno
fistl
mov
mov
mov
shlb
ljmp
shl
xor
gs
dec
jne
sub
mov
mov
xor
xchg
mov
mulb
std
dec
pop
daa
jmp
ds
dec
xchg
roll
lock
jg
iret
mov
or
andb
dec
rcr
inc
leave
enter
ja
fdivs
dec
inc
out
mov
jb
jno
xchg
into
or
and
inc
sti
or
add
sarl
in
std
cmp
add
out
repz
or
inc
dec
jge
rolb
loope
or
push
leave
inc
inc
adc
cmp
xor
dec
pushw
xchg
cmc
and
xor
pop
xor
pushf
mov
jb
xchg
icebp
imul
ret
or
hlt
loop
cmp
sub
ljmp
and
mov
nop
mov
mov
inc
push
mov
sti
daa
das
push
add
or
or
pop
ret
jb
out
jecxz
fstpt
jmp
icebp
push
fcoms
das
or
mov
repz
ret
or
dec
sahf
dec
and
pop
add
popa
fildl
jmp
into
xchg
xor
aam
std
in
adc
dec
es
pmulhw
cmc
pop
fchs
and
mov
push
arpl
shrl
sar
lock
mov
jne
mov
xchg
add
jmp
sbb
dec
into
push
sub
dec
cmpsl
pusha
push
out
aaa
sub
repnz
or
cmp
cli
xor
and
jmp
or
mov
mov
sti
cmc
xor
jne
pop
jae
push
ja
mov
and
repz
mov
cmc
ljmp
stc
lds
int
js
mov
pop
fxch
out
aaa
xor
cmp
aas
pop
fs
xchg
mov
push
dec
cmp
push
in
cmpsb
mov
mov
lret
or
and
mov
dec
lret
xlat
test
repz
adc
int
out
inc
cltd
scas
or
add
sub
dec
leave
mov
arpl
rorl
inc
addr16
in
aas
and
stc
inc
imull
aaa
lds
jmp
sti
mov
cmc
stos
add
inc
sarb
bnd
hlt
jbe
mov
sub
mul
inc
imulb
inc
stos
std
loope
out
lods
stc
ja
hlt
std
das
push
in
addr16
or
imul
xchg
add
sbb
xchg
push
stos
das
lock
dec
and
dec
leave
cmp
xlat
in
fiaddl
icebp
enter
shr
xlat
ror
or
repz
lret
gs
mov
out
pop
repnz
adc
sbb
mov
dec
ds
xchg
mov
fs
ret
pop
fldl
dec
lock
scas
adc
jecxz
ljmp
test
adc
dec
mov
imul
jecxz
int3
test
repz
ljmp
popa
movl
sub
add
mov
dec
scas
fstps
jbe
std
adc
mov
stos
push
dec
lret
jnp
pop
inc
and
push
jns
loope
mov
jbe
in
imul
pop
mov
xchg
fbld
jmp
bound
xor
std
adc
xchg
arpl
add
mov
in
lret
imul
inc
adc
int
out
sbb
and
push
pop
fbstp
ret
mov
into
shl
out
shll
pop
ficompl
mov
xor
and
fiadds
lock
xchg
mov
dec
ljmp
jb
lret
mov
leave
incb
jmp
xchg
ror
mov
mov
pop
push
stos
bound
lock
pop
hlt
xor
or
xor
sub
enter
adc
mov
shlb
decb
inc
mov
in
lds
lcall
out
adc
data16
cltd
flds
or
push
mov
push
jecxz
lds
shr
jae
cmp
aas
dec
insl
fldcw
jmp
dec
or
cmpsb
pop
std
movsb
mov
adc
rorb
dec
sub
movsb
mov
je
jmp
ljmp
inc
dec
jge
add
fisttpl
xor
add
jmp
jecxz
and
or
sub
sbb
pusha
repnz
shll
in
add
out
iret
sbb
xor
inc
mov
pop
divl
inc
adc
fadd
lret
mov
fisttpll
int
mov
in
aas
cmp
push
push
lahf
xor
inc
mov
dec
mov
dec
mov
lock
mov
xor
enter
and
mov
mov
mov
sbbl
lret
or
pushf
cs
pusha
mov
lcall
loope
sub
sub
fistpll
inc
jb
rcll
push
out
popf
cmc
sub
push
lds
xor
out
cmp
test
shl
cltd
pop
insl
pushf
aad
push
push
pop
inc
push
inc
pop
sbb
rcr
or
xlat
xchg
lcall
cmovno
std
lock
cltd
in
icebp
xlat
int
test
frndint
pop
jg
icebp
dec
test
cmp
cmc
sbb
push
cli
push
test
mov
dec
dec
mov
ret
push
jae
daa
or
ret
dec
fucomp
pop
xchg
fmuls
lds
inc
sti
loope
mov
in
xchg
int3
xchg
repz
push
ret
sub
pop
push
sub
jbe
aam
mov
rcr
imul
sbb
push
std
mov
fsubs
inc
mov
in
out
add
mov
in
dec
outsb
adc
xchg
dec
stc
mov
mov
loope
adc
in
stc
aas
or
das
add
aam
insb
adc
stc
incl
xchg
jnp
out
mov
adc
and
sub
fiaddl
push
enter
rcl
loope
test
adc
gs
jb
scas
lods
hlt
ret
sbb
or
shll
add
xor
mov
sti
jecxz
clc
jno
mov
mov
push
mov
sarl
push
mov
jno
xchg
mov
xor
test
mov
mov
icebp
inc
insb
inc
sar
cmpsb
push
js
vaddsd
mov
and
pop
mov
in
ljmp
int3
iret
addr16
jb
pop
enter
xchg
enter
cmpsb
push
add
ds
or
jnp
lcall
adc
rcr
pop
dec
or
cmp
mov
sbb
inc
lea
jecxz
ret
addl
fadds
movsl
fwait
jo
mov
inc
lret
mov
sub
lahf
xchg
in
gs
cmpsb
je
mov
fwait
shlb
dec
scas
mov
pop
sbb
xchg
and
fs
jns
inc
sahf
in
in
mov
inc
inc
imul
leave
mov
stos
mov
in
pop
sbb
in
or
push
popa
jecxz
xlat
jno
mov
mov
inc
js
pop
mov
ljmp
roll
popa
xor
or
xchg
mov
xchg
or
add
inc
xor
pushf
inc
mov
jg
xor
jne
int
sbb
add
dec
lds
mov
sub
inc
jg
enter
pop
mov
sbb
push
stos
mov
roll
lds
add
adc
jecxz
sub
and
mov
mov
mov
mov
inc
mov
ljmp
mov
and
jecxz
jle
mov
adcb
mov
fwait
or
sbb
or
fnstcw
lahf
ficoml
fstps
in
int3
frstor
and
andl
adc
lock
mov
test
sahf
mov
nop
test
dec
cwtl
leave
int
or
mov
add
inc
push
arpl
enter
ret
dec
xor
or
or
adcb
dec
das
fstpt
pop
pop
sahf
insl
sbb
jp
mov
loop
adc
mov
jmp
lahf
aaa
sbb
imul
sub
push
push
jp
sbb
int
repz
or
icebp
inc
pushl
fs
nop
fcmove
loopne
xchg
int
jmp
ljmp
sahf
out
les
push
ret
out
pop
pop
mov
sahf
pop
jae
or
bound
cmpsl
repnz
aad
jmp
loope
pop
mov
xor
pop
mov
sbb
inc
inc
or
add
mov
mov
scas
mov
or
lcall
xchg
add
adc
inc
push
jecxz
push
fdivs
loop
test
jecxz
jmp
popa
ret
sub
and
icebp
push
sarb
mov
adc
mov
mov
sbb
addr16
daa
cmp
int
cltd
jae
loope
and
inc
fcoms
inc
or
jmp
fcom
int3
adc
mov
adc
add
movsb
cmp
push
lds
dec
or
sarl
lea
je
lock
dec
push
xor
fsts
iret
or
aam
enter
and
fstps
rcr
inc
lds
push
repnz
repz
int3
test
inc
test
or
imul
fs
in
fld
outsl
jb
vpcmpeqb
test
int3
add
inc
adc
daa
les
pop
cmp
fsubr
int3
sub
sbb
insl
aaa
jne
movsl
stos
leave
jns
adc
inc
ret
sbb
xchg
xor
iret
insb
clc
dec
push
sbb
movsl
or
enter
fs
cmovs
shll
mov
push
cmc
sub
jp
leave
out
lods
cltd
xchg
mov
pop
jnp
cmp
dec
or
mov
push
jl
in
fbstp
cmp
push
adc
and
leave
mov
jmpw
shrl
cmc
sub
jo
add
cmp
sbb
or
xchg
pop
stos
and
or
add
dec
sbb
dec
mov
test
mov
ret
divb
jecxz
clc
pop
repnz
mov
mov
sbb
push
mov
mov
lds
popf
fistpll
lock
mov
in
pop
mov
imul
or
lock
mov
sub
adc
fcoms
fsubrs
into
add
add
mov
in
mov
jnp
inc
ret
movb
mov
mov
es
sbb
sbb
arpl
jno
enter
ffreep
out
es
fxch
add
loop
and
flds
mov
mov
and
ficomps
lret
push
mov
dec
add
shll
pop
dec
pop
or
mov
push
dec
fisttpll
aam
mov
cmp
push
icebp
leave
faddp
jl
test
inc
ljmp
dec
in
les
mov
xchg
iret
ljmp
adcl
bound
mov
movsl
fsubrs
repz
lds
aas
or
or
movsl
sub
lods
ss
sub
mov
pop
push
pop
mov
xchg
mov
mov
xor
dec
cmp
fcomi
sub
scas
dec
rcr
cmp
jecxz
jno
sub
rorl
jno
jle
mov
test
mov
cmp
xor
mov
ret
push
xor
mov
xchg
sarl
dec
jmp
loope
aam
mov
fisttps
rcl
or
jne
jnp
leave
jae
mov
jne
xchg
or
lret
lea
into
dec
xlat
mov
lea
loope
incb
shll
jne
jle
add
fnstsw
mov
lds
fyl2x
fnstenv
cs
sarl
mov
and
push
or
clc
jo
lock
out
in
adc
or
rol
gs
nop
inc
mov
js
adc
xchg
xchg
enter
cmp
mov
mov
mov
loope
xchg
inc
push
cli
scas
ljmp
aam
mov
repnz
std
mov
aad
push
add
mov
stos
dec
sbb
or
in
sbbl
push
push
mov
imul
repz
jmp
mov
and
add
sbb
sbb
ja
aam
fcmove
sbb
dec
sub
roll
inc
adc
add
ds
adc
test
add
and
xchg
inc
testb
test
cmpsl
add
add
leave
in
pop
jns
hlt
dec
inc
gs
std
ficomps
push
cmp
mov
pop
in
or
int
xor
cmp
push
push
enter
xor
ss
xlat
mov
cmp
popf
ret
pop
mov
mov
mov
inc
sbb
cli
pop
mov
mov
addr16
pop
lret
xchg
lods
shrb
lret
xchg
pop
adc
repz
lock
add
dec
sub
xorb
mov
pop
test
jnp
pushf
fs
xchg
les
xorb
adc
leave
ret
outsl
jnp
lahf
rorl
mov
lret
dec
in
sbb
adcb
into
or
rorb
pushf
ret
xor
stos
pop
xchg
adc
in
sbb
inc
mov
inc
and
ljmp
outsb
jmp
pushf
lret
ja
mov
in
sub
sub
xchg
or
stos
cmp
mov
push
daa
ljmp
frstor
addl
push
aad
into
stos
int
jecxz
pop
sub
mov
fwait
inc
mov
in
insl
decb
shll
pop
lds
mov
dec
movb
fs
aam
mov
pop
sbb
xchg
push
mov
adc
mov
imul
enter
xor
movsb
arpl
and
mov
lea
mov
adcl
push
mov
int
int
dec
mov
int
and
mov
lcall
push
sahf
pop
sub
push
mov
je
outsb
sbb
ret
stos
jecxz
push
push
insl
iret
sbb
pop
mov
rorb
add
lret
stos
cwtl
sub
dec
ss
xor
sbb
dec
adc
iret
aam
jbe
stos
add
sahf
fisubs
test
cs
xor
iret
sub
xchg
jp
cmp
fdivrs
stos
fldt
mov
shl
inc
mov
aad
icebp
xlat
sbb
push
int
rcrb
ljmp
repz
enter
push
sbb
adc
push
jge
cmp
add
pop
xor
into
ss
and
out
dec
es
mov
mov
shll
int
in
fsubs
mov
mov
sub
xor
cmp
fnstcw
or
jns
lds
dec
fidivrl
popf
ja
stos
dec
adc
xchg
inc
pop
aas
clc
movsb
pop
push
jle
jne
mov
je
cs
pop
pop
int
rol
movsb
jb
mov
mov
cli
xorl
inc
inc
lret
xor
frstor
sbb
jp
dec
mov
cltd
and
mov
xor
pop
into
pop
cmpsb
mov
push
mov
sub
mov
mov
int
and
hlt
lds
scas
fldcw
jno
mov
mov
test
inc
lret
push
inc
test
into
out
pop
sti
xchg
fstps
popf
int3
cld
sarb
int3
cmp
cwtl
xchg
fistpll
jns
add
cltd
iret
jo
fstps
cmp
stos
mov
fwait
sub
mov
xlat
in
test
fsub
scas
xorl
push
and
jmp
stc
call
loop
daa
leave
pushf
mov
aam
stos
mov
sbb
xor
ret
stc
icebp
add
aad
ja
pop
test
add
cmp
loopne
rol
sub
sbb
push
sub
in
cli
sbb
sub
pusha
sti
jno
pop
sbb
dec
sahf
dec
sti
add
add
adc
xor
xor
mul
jmp
cmp
mov
mov
jg
mov
fidivs
dec
cmp
mov
rcr
hlt
jle
sbb
pop
data16
add
mov
mov
fnsave
movsl
sub
xorb
mov
cli
fwait
pop
push
fnsave
jecxz
lds
clc
add
and
cli
mov
pop
loopne
int
shrb
imul
sahf
addr16
popa
push
push
test
stos
dec
cli
xchg
cmp
lea
mov
into
xchg
rcll
movsbl
pop
scas
lret
cmc
fisttpll
and
mov
pop
icebp
mov
in
stos
sarl
push
jge
sbb
lret
lret
mov
in
lea
arpl
pop
inc
jmp
sbb
and
icebp
cli
push
jmp
lret
push
fisttpll
xor
cmpsb
or
xchg
aas
aaa
and
dec
cwtl
xor
mov
aas
mov
adc
and
rcrb
in
loop
cltd
nop
xor
leave
or
sarl
in
mov
mov
dec
iret
add
mov
sub
aad
adc
clc
and
and
pushf
mov
call
or
add
leave
xor
ret
lods
mov
or
and
fcoms
mov
xchg
dec
mov
xchg
or
int
push
or
dec
cmpsb
mov
daa
int3
ljmp
dec
pop
ds
repz
es
pop
add
data16
pop
and
cmp
xor
mov
mov
mov
mov
mov
xchg
sbb
xchg
dec
xchg
loop
xchg
dec
xchg
enter
push
xchg
mov
pop
sbb
cld
cmc
mov
push
inc
xchg
add
sbb
loop
cmp
pop
add
sarl
cmp
es
lds
mov
icebp
sbb
xchg
mov
mov
lret
push
in
add
outsb
lock
sbb
mov
popf
sbb
add
push
out
cmp
mulb
xorb
mov
mov
mov
enter
test
sbb
flds
in
push
daa
int
pop
mov
leave
and
pop
push
inc
cmpsb
jbe
sbb
xor
sbb
gs
shll
sbb
bound
iret
faddp
jns
fs
jns
cmp
jne
sub
sub
popa
fcomip
in
mov
push
mov
leave
or
in
push
xchg
ret
cs
jmp
mov
jae
inc
pop
jmp
js
aad
jmp
vpaddq
jmp
push
lret
cmpsb
mov
jo
xchg
int
jno
idivl
sarl
and
call
push
pop
cmp
add
fldl2t
or
cld
test
and
push
mov
or
push
add
lcall
roll
and
sub
into
inc
or
data16
mov
push
les
push
add
and
fsubrs
push
jno
push
mov
sbb
and
rcrb
arpl
sar
xchg
lret
mov
sub
fisubrl
cmc
data16
daa
pop
in
push
dec
fmull
int
aaa
repnz
adc
lds
in
pop
imul
mov
sub
and
icebp
cli
stos
out
jle
int3
and
test
adc
ficompl
dec
cld
fs
add
xchg
mov
cmp
jns
repz
ret
imul
insl
in
in
cld
les
xchg
rcrl
or
dec
hlt
in
movsb
cld
add
jge
mov
test
test
rorb
int
int3
fbld
rorb
push
mulb
rcl
sub
add
sbb
das
rorl
pop
mov
mov
cli
lahf
and
and
dec
pop
mov
push
sbb
and
sbb
mov
dec
cmp
ja
mov
or
nop
pop
pop
jmp
or
mov
popa
fdivl
dec
aaa
shll
push
pop
pop
xor
inc
mov
and
lea
fisubs
fbstp
in
pop
arpl
or
fcompl
pop
ret
ret
into
data16
das
jge
jmp
dec
sbb
inc
and
jecxz
jmp
or
jb
xchg
dec
pop
je
test
dec
or
lds
push
jo
test
outsb
imul
pushf
ret
adc
sbb
fsts
sarl
add
adc
adc
clc
inc
xorb
jg
stc
in
pop
scas
repz
xor
outsb
sbb
shl
xchg
cmp
or
pop
push
and
shll
mov
mov
and
dec
lods
iret
mov
or
mov
xchg
mov
adc
js
inc
leave
out
sarb
divl
jle
jnp
jmp
mov
adc
pop
rcll
dec
aas
mov
bswap
test
divb
lea
add
add
clc
pushf
xchg
inc
mov
dec
adc
mulb
dec
pop
sarl
adc
push
movsl
pop
ret
jl
cs
imul
outsb
xor
mov
push
lock
dec
cmpl
inc
pop
das
add
mov
ret
sub
cwtl
and
sbb
pushf
hlt
mov
jno
mov
inc
shr
test
mov
add
adc
mov
stc
rsm
inc
jp
adc
mov
push
cld
test
loopne
push
cmc
into
jle
out
fadd
xchg
int3
push
aad
mov
jmp
push
add
stc
mov
cmp
pop
xor
fsubs
inc
mov
je
xor
into
push
xchg
insb
rcll
mov
sub
shll
mov
mov
dec
in
lcall
jmp
aas
jl
leave
pop
fldl
test
icebp
lahf
lret
jecxz
mov
mov
push
das
fisttpl
sbb
repz
sbb
xorb
into
cmp
mov
cld
or
aaa
das
mov
mov
and
push
jmp
enter
xlat
addl
in
jnp
push
sqrtps
and
xchg
loopne
push
add
jb
aad
div
movsl
add
aam
push
in
rolb
pop
rcrb
stos
and
lods
add
fsubs
pop
mov
lock
xor
push
icebp
ret
flds
dec
jns
and
push
jb
sbb
or
shlb
enter
jb
cmp
xchg
jne
or
push
jno
mov
mov
adc
mov
leave
rolb
orl
aad
jp
mov
test
jb
add
mov
mov
pop
cwtl
std
movsl
pop
xor
mov
mov
mov
test
mov
xchg
test
mov
shlb
nop
add
cwtl
mov
pop
xor
sub
hlt
movsl
dec
pop
xor
and
mov
test
push
rcr
inc
mov
test
or
inc
inc
sbb
add
lahf
jo
mov
iret
mov
rcl
mov
fcompl
ret
xchg
pop
into
xchg
lret
rorl
pop
push
mov
outsl
xor
xchg
lret
sar
lret
mov
repnz
jns
pop
movsl
jp
ror
and
pop
push
jb
ret
daa
adc
loop
sbb
ret
sbb
add
int
and
leave
jne
pop
aam
pushf
cltd
ljmp
test
sub
mov
out
shufps
in
xchg
push
dec
xor
jns
or
scas
aad
jno
mov
test
or
iret
lea
xchg
das
call
fidivs
fcoms
int3
pusha
mov
icebp
inc
mov
pop
push
add
mov
pop
mov
popf
int3
mov
iret
lahf
fs
fnsave
das
mov
lods
xor
adc
sbb
jg
add
cltd
pop
popf
in
ja
test
inc
fwait
test
test
xor
int3
pushf
mov
inc
jmp
aas
jl
jg
push
hlt
xchg
loope
sbb
push
aas
push
push
lret
test
adc
hlt
out
inc
shll
test
pop
dec
hlt
in
lret
sub
xchg
shl
inc
mov
enter
pop
sbb
ljmp
mov
insl
xchg
add
out
fildll
repz
push
imul
or
leave
lods
lret
inc
into
subb
loop
fcomi
add
sub
dec
xor
dec
popf
adc
es
jmp
push
orl
ror
push
lock
jge
mov
mov
adc
outsl
push
adc
xchg
pushf
cwtl
bound
stos
adc
push
xchg
xlat
xchg
xlat
movsl
cwtl
inc
jecxz
xor
and
scas
mov
dec
idivl
negb
mov
or
mov
push
mov
pop
or
add
mov
out
pop
fxch
adc
cmc
inc
dec
test
ret
test
in
rcr
shlb
push
ror
lret
add
cmp
repz
jbe
adc
push
stos
xor
push
hlt
in
fcompl
iret
shlb
mov
mov
shll
push
fdivr
test
cmp
or
inc
sub
push
pop
dec
jg
xor
and
sahf
cmp
int
out
cli
and
add
cmpsb
pusha
fcmovne
dec
rcrl
loop
adc
scas
sub
mov
or
mov
rolb
fsubs
mov
xor
or
int
mov
and
jb
mov
mov
jns
push
fbstp
xor
xor
jg
push
xor
xor
pop
adc
cmp
aad
xchg
mov
dec
movsb
out
lret
andb
leave
mov
mov
mov
sub
imul
jno
sub
xor
stc
pop
xlat
sub
xor
fs
sub
int
xchg
inc
into
out
roll
sub
fdivl
pop
jb
leave
leave
fs
push
mov
in
xchg
fildl
aam
adc
xchg
stos
icebp
cmp
add
sbb
or
dec
out
negl
inc
scas
fidivs
repz
int3
fdivp
mov
jno
cli
jbe
daa
jno
xor
stc
cld
and
into
push
add
adcb
sub
hlt
mov
ja
flds
stc
mov
sub
inc
adc
xchg
aad
adc
xorl
lds
and
js
xchg
pop
push
loope
sbb
ss
aad
in
dec
add
add
mov
ja
inc
jae
das
jo
push
test
or
icebp
adc
push
out
mov
pop
test
divl
mov
add
mov
and
rep
sub
rcrl
lds
or
pop
xchg
sbb
mov
push
insl
or
sbb
mov
mov
mov
push
add
adc
nop
ja
flds
retw
and
sub
lods
mov
mov
out
mov
shlb
notl
repnz
in
mov
push
js
xchg
sub
out
xchg
es
xchg
fnsave
test
adc
pushf
sub
movsl
enter
rcrb
out
dec
xlat
jecxz
mov
pop
jne
lea
sbbl
ret
add
mov
in
push
inc
loop
lea
jg
sbb
adc
xchg
sub
add
xchg
pop
inc
mov
andl
shrb
int3
sbb
adc
sub
cltd
cmp
popa
pop
sub
call
cltd
lds
pop
fisttpll
sarl
fldenv
test
add
call
push
lret
pop
ja
and
xor
mov
inc
cmpsl
rorl
mov
addr16
or
pop
mov
or
aas
xchg
int
mov
sub
and
mov
je
or
imull
mov
test
jl
inc
aas
in
inc
inc
sub
mov
insl
mov
sub
jnp
daa
jo
imul
cmpsb
pop
fnsave
rolb
mov
jle
xor
sub
adc
xchg
xchg
fs
enter
fcomi
imul
inc
jmp
bound
nop
mov
or
mov
out
cmp
mov
jb
dec
add
sbb
addr16
jbe
leave
xor
cmp
repnz
leave
sahf
stos
pop
sub
inc
jp
jo
stos
lret
or
shll
xchg
inc
sub
in
sbb
fs
imul
repz
into
jne
mov
sub
aam
and
fxch
lea
jae
dec
mov
adc
stos
or
pop
fiaddl
add
sub
jb
and
fstps
pop
ret
and
xor
mov
in
out
lret
scas
mov
and
mov
loop
lcall
jns
lock
cld
mov
mov
testl
jb
mov
cltd
scas
aam
arpl
in
sub
add
flds
inc
mov
sbb
fcompl
sub
iret
adc
jl
add
enter
cmp
pop
mov
int3
mov
xor
lods
jbe
and
sbb
iret
sub
cs
sub
push
xchg
adc
loope
mov
int
enter
nop
pop
aaa
mov
push
fbld
lret
notb
adc
test
push
adc
lods
or
dec
mov
jg
enter
sbb
dec
js
xor
testb
cmpsl
xor
and
xor
jae
icebp
and
cmpl
and
and
mov
mull
ret
mov
repz
mov
sahf
test
clc
sbb
jp
dec
or
jecxz
push
xchg
rclb
cli
lret
in
sbb
jno
int3
mov
push
inc
call
in
call
arpl
jno
aaa
shrb
sub
orl
pop
lods
mov
lock
mov
sbb
pop
sub
clc
jae
pop
mov
mov
mov
je
mov
mov
loopne
add
mov
mov
out
js,pn
insb
xchg
cmp
stos
fstps
rcll
hlt
mov
jnp
xchg
jb
fmul
lds
dec
pop
fdivs
nop
mov
adc
stc
idivb
add
mov
mov
cmpsl
xor
xor
or
shrb
rclb
sbb
lds
ss
xor
stos
ss
dec
aaa
aad
ror
xchg
enter
pop
fidivrs
aam
mov
test
mov
push
mov
and
ret
rcr
inc
mov
cmpsb
in
shlb
push
cmc
mov
lock
repnz
testb
inc
cltd
inc
andb
adc
ss
loope
inc
scas
adc
inc
pusha
pop
rol
stos
sub
fnstcw
sti
rol
clc
subb
cltd
lret
into
lock
hlt
mov
push
xchg
mov
and
cli
jbe
es
ss
sbb
loope
cvtdq2ps
push
inc
aam
fwait
xchg
xor
cmpsl
fldenv
add
outsb
ds
int
shr
rcr
add
cmp
fcmovbe
pushf
nop
jmp
sbb
outsl
xchg
pop
cmp
jae
mov
cmp
stos
add
pusha
sti
dec
mov
mov
inc
fisttpl
outsl
rol
dec
int
lret
ljmp
movsl
or
pop
lret
js
push
outsl
or
js
rcll
mov
and
outsb
jo
xor
ret
cmpsb
sahf
cmc
mov
push
cld
xor
call
aad
sbb
dec
jbe
push
fcompl
lcall
pop
xor
fxch
dec
sub
mov
insl
enter
xorb
mov
testl
int
outsb
adc
jbe
inc
lea
mov
lods
mov
cmc
push
in
inc
push
aad
div
test
dec
icebp
and
pop
into
std
enter
aad
or
inc
push
sbb
inc
dec
and
jnp
lods
dec
push
or
push
or
push
dec
mov
and
pop
fistl
lds
dec
inc
lds
push
pop
ss
mov
insb
iret
imul
in
cmpl
mov
shlb
pop
push
jnp
sub
mov
mov
pop
leave
lret
enter
mov
cli
xchg
stos
jnp
cmpsl
pop
dec
rcll
fsubrs
call
in
jmp
scas
lret
insl
scas
outsb
or
sbb
enter
ret
jne
lea
test
add
shl
adc
sbb
hlt
roll
leave
adc
sbb
pop
mov
jecxz
leave
enter
add
add
roll
inc
lds
ljmpw
into
iret
clc
hlt
int
xchg
cmp
and
or
mov
lds
inc
and
cmp
add
and
mov
in
mull
test
in
dec
sub
arpl
mov
add
ljmp
ljmp
mov
sti
stos
mov
loope
mov
xor
es
and
xor
loopne
nop
dec
iret
mov
mov
mov
xor
cmovp
fnstcw
and
lret
roll
addl
test
push
jbe
std
lock
int3
shrl
xor
xchg
and
and
in
arpl
sbb
rorb
in
add
sbb
out
push
lret
and
xor
les
fld
and
fldt
out
add
cmpsl
repnz
sbb
and
aad
xchg
jl
push
and
testb
scas
add
mov
jp
sbb
lcall
sbb
and
jmp
dec
mov
rorl
stos
push
repz
and
fnstsw
imul
fnstenv
inc
cmp
pop
jge
fimull
test
popf
xchg
mov
pop
sbb
stc
lea
pop
add
push
test
ja
daa
sbb
cltd
push
or
sarb
or
call
sbb
xchg
mov
jne
out
or
push
roll
jb
sti
and
or
scas
sar
sub
pop
lea
leave
pop
dec
push
pusha
outsl
xor
dec
aas
dec
mov
mov
jl
jae
xchg
test
mov
xor
and
in
inc
mov
fbld
arpl
leave
ja
and
and
xchg
sub
aad
add
add
lret
lret
je
mov
and
sbb
add
mov
das
push
gs
add
fldcw
add
ret
xor
pusha
popf
iret
popa
xor
sub
test
xchg
jge
ds
pusha
int3
sub
push
xor
rorb
fildll
cmp
int
add
cmc
push
jb
xchg
pop
add
push
hlt
icebp
test
dec
dec
stos
xchg
nop
dec
cltd
add
les
mov
pop
sbb
cmp
xchg
mov
test
add
int
inc
testb
add
inc
inc
jnp
mov
addl
outsb
call
out
popa
addr16
mov
dec
xor
mov
xchg
or
dec
dec
and
cmp
loop
pop
sbb
add
loopne
in
fmul
ss
push
push
aad
add
sbb
sub
int
test
xor
aaa
inc
ljmp
ja
test
dec
xchg
mov
pop
dec
icebp
sbb
adc
and
test
daa
pop
adc
in
pop
stos
fldl
sub
push
sbb
inc
out
xor
aad
or
sti
xchg
dec
lret
sbb
adc
and
mov
push
aaa
fldt
scas
shl
xor
loopne
rcl
pop
dec
add
xor
imul
push
fisttpl
push
rclb
xchg
dec
jmp
jnp
cmc
mov
mov
ficoms
sbb
mov
outsl
sub
lret
fistpl
jl
cmp
mov
xor
sbbb
test
xor
add
xor
mov
sahf
outsb
cmpsb
inc
sub
sub
xor
cld
jno
jo
sub
xchg
imul
out
jae
jmp
lret
mov
mov
fcmovnbe
testl
lret
mov
pop
lret
xor
lds
stos
or
lret
sahf
int3
movsb
into
mov
ljmp
cld
add
div
in
ret
xchg
mov
inc
loopne
fwait
xor
push
ret
ret
add
or
push
xor
mov
int
mov
xorb
jecxz
cmp
mov
or
xchg
clc
aam
lea
mov
int3
sub
test
push
pop
adc
shll
enter
jb
repz
aad
jb
adc
dec
xchg
jo
xchg
inc
pop
push
push
inc
mov
dec
iret
lret
repz
cwtl
xchg
xorb
and
out
lret
mov
jo
ja
ret
mov
sahf
insb
jo
mov
icebp
mov
xor
mov
xor
fst
push
leave
jmp
push
xchg
pop
dec
xor
jne
jbe
daa
enter
stc
cltd
and
scas
fistps
xchg
push
push
inc
rcrl
stos
inc
sbb
and
mov
fnstcw
rcl
popa
aam
ret
dec
adc
ds
ret
popa
or
push
pop
and
or
add
fmull
cmc
fsubs
sub
test
xchg
sbb
rolb
dec
mov
add
fidivl
in
js
minps
xor
and
hlt
push
and
dec
sub
and
mov
hlt
leave
push
movsb
cmp
jmp
add
sbb
push
stos
sub
test
adc
leave
sbb
cmpsl
cmc
or
adc
int3
dec
orl
pop
fnstsw
gs
dec
and
jmp
cmc
xor
leave
test
pop
leave
aad
jp
push
rcl
and
lods
mov
stos
int3
int3
sub
leave
sub
insl
xchg
gs
mov
add
dec
rclb
and
cwtl
jmp
lds
dec
inc
lret
push
lret
and
ror
push
inc
jae
shlb
mov
insb
jmp
stc
xchg
fists
fldcw
jo
repnz
stos
pusha
adc
sub
test
pop
dec
dec
movsl
inc
in
xor
jo
or
sbb
clc
adc
add
fimuls
inc
clc
roll
movsl
dec
jbe
sbb
and
es
sarl
mov
orl
stc
xchg
mov
movsb
icebp
mov
int
sbb
sbb
outsb
xorl
mov
mov
psraw
out
cmpsb
cwtl
loop
dec
push
mov
mov
mov
mov
inc
in
sbb
push
cmc
jno
push
cmp
xor
or
push
adc
mov
mov
sbb
loopne
inc
sbb
aad
mov
mov
or
mov
xor
lds
hlt
scas
je
dec
pop
sub
adc
pop
cmpsb
sub
insb
stos
movzwl
ljmp
sarl
jle
push
test
imul
cmp
pusha
mov
push
and
punpckldq
cmp
mov
mov
xchg
dec
cmc
add
xchg
dec
add
inc
ljmp
mov
pop
add
xorb
or
mov
fsubl
mov
cmc
inc
sub
adcb
stc
xor
daa
sbbl
ja
jae
push
std
rorb
or
mov
sub
mov
and
jo
or
and
and
lret
pop
dec
lret
mov
mov
shll
lock
or
inc
or
rcrl
test
in
dec
in
inc
sub
dec
jae
je
inc
and
sbb
subb
rol
call
sbb
sbb
xor
and
adc
add
int
adc
pop
lods
aad
repz
jbe
shl
jecxz
pop
iret
js
in
xlat
mov
in
jmp
gs
stos
sbb
add
lret
push
lods
pop
sti
xchg
or
ret
je
scas
fists
mov
sub
ret
mov
jno
jl
add
ret
and
adc
xchg
push
test
clc
mov
mov
sbb
lods
pusha
shll
push
lret
jo
cld
or
call
ret
test
push
pop
cwtl
imul
jmp
cmp
addb
cmpsl
into
rorl
push
and
cmp
arpl
das
push
inc
das
and
or
mov
xor
out
xchg
sub
rcrl
xchg
cmp
or
sahf
or
adcb
sub
leave
pop
push
call
out
out
shll
cmp
cs
sbb
or
in
in
add
addb
enter
call
roll
test
push
test
jmp
and
cmpsl
rcll
test
push
roll
xor
aad
or
test
jle
shl
ror
jmp
or
test
iret
pop
xor
mov
lock
in
mov
icebp
fiadds
jo
cmpb
add
lea
sub
add
jb
push
or
pop
aad
cmpsl
aam
xor
or
dec
inc
sbb
and
js
mov
dec
js
cwtl
popa
in
lahf
out
aam
push
jb
or
and
aad
pusha
pop
test
jne
mov
jns
pop
fdivrs
jmp
fisubrl
xor
ljmp
ja
adc
mov
and
jge
ret
enter
sub
pop
insb
and
stos
aad
leave
mov
inc
mov
mov
push
lods
inc
or
or
mov
pusha
mov
test
cmpsb
xchg
sbb
jg
adc
inc
xor
iret
xchg
ljmpw
sub
xor
or
outsl
mov
xchg
xor
xor
pop
test
jmp
sub
test
clc
jecxz
ja
sbb
cmpsb
jo
jo
ds
dec
add
icebp
inc
into
and
jle
hlt
dec
mov
inc
rcrb
cmp
in
lock
enter
ret
ror
mov
mov
repz
rcll
lods
lahf
imull
push
add
push
inc
daa
pop
pop
out
or
lods
push
iret
jo
or
pop
sbb
stos
push
pop
mov
mov
lcall
test
mov
imul
xor
in
sbb
lods
xchg
add
lock
xor
mov
xchg
imul
cmp
dec
iret
sti
into
and
div
or
push
stc
subb
push
mov
cli
ljmp
xchg
cmpsb
xlat
movsb
mov
pop
ss
xor
push
pop
or
mov
movsb
in
das
out
mov
mov
jns
nop
loope
push
fidivl
cltd
mov
and
mov
pop
mov
pushf
scas
cwtl
xchg
iret
sar
push
inc
xchg
mov
cli
sub
push
sub
jg
inc
dec
xor
inc
or
outsb
jmp
shlb
call
cmpsl
sub
sub
push
xchg
sub
ret
test
and
inc
test
sbb
test
mov
jne
int3
clc
ljmp
imul
pop
mov
les
test
mov
ljmp
nop
js
out
lea
sbb
shrb
jmp
fsubl
pop
xchg
mov
ja
jmp
dec
fisubs
shrb
cmc
dec
sub
loop
ret
xor
test
fsubp
push
int
mov
daa
mov
shlb
xchg
lea
mov
enter
lds
cmp
ljmp
out
dec
xchg
ret
iret
rcl
xchg
out
and
inc
xchg
ror
iret
mov
fxch
stos
hlt
ret
dec
xor
sbb
push
lds
fisubrl
std
ret
adc
pop
push
stos
mov
sub
push
repz
lock
repnz
lds
pop
add
jmp
sarb
or
test
addr16
sarb
and
dec
push
mov
jle
dec
cmp
test
ret
sti
int
inc
xor
mov
cld
xor
and
lret
cmp
mov
mov
js
mov
inc
dec
int
jb
in
aam
lock
dec
pop
ret
dec
xchg
sub
mov
cld
call
mov
sbb
shll
test
imul
push
ret
rcrl
xchg
push
out
sub
ljmp
mov
imul
int
or
push
dec
mov
pop
jmp
divl
pop
incb
mov
enter
push
rcl
sub
int3
mov
test
rcrl
dec
shrb
sbb
dec
mov
aas
sbb
outsb
fstps
jae
sbb
les
fnsave
mov
and
mov
jp
xchg
push
fidivrs
lock
jb
mov
lods
and
jns
mov
mov
mov
rorb
test
enter
sbb
or
popa
ret
pop
sti
pop
es
xlat
mov
fidivrs
mov
jmp
add
cli
jbe
dec
push
call
or
in
sbb
sbb
popf
stos
stc
mov
adc
push
out
shll
mov
inc
ja
jge
lds
add
popf
test
push
lods
sub
push
dec
xor
add
mov
mov
jno
int
push
ja
popf
ret
cmp
ror
jne
mov
mov
sbb
or
and
xor
dec
hlt
sbb
leave
jl
clc
cld
sbb
xor
xlat
mov
pushf
adc
out
dec
in
or
add
sbb
sub
inc
ljmp
mul
decb
ret
cltd
daa
cmp
sbb
pop
aad
sbb
mov
mov
jne
in
cmp
pop
mov
mov
test
sbb
stos
imul
test
sbb
daa
inc
aas
inc
in
sbb
or
popa
cmpsl
jo
xchg
mov
shrb
leave
mov
das
jmp
mov
lock
jae
sub
cld
call
pusha
xchg
int
or
add
xor
mov
loopne
and
xlat
push
ret
and
adc
or
enter
mov
fs
jg
lahf
push
rolb
rorb
and
and
jp
adc
push
dec
std
sahf
pop
icebp
cmpsl
jecxz
fucomip
pusha
xor
mov
fs
clc
cmpl
mov
push
insl
dec
enter
mov
subl
adc
test
push
into
jae
lcall
bt
mov
sub
loop
push
sbbb
jmp
mov
sbb
and
sbb
lahf
fnstcw
dec
xor
out
cmp
dec
cld
adc
repz
ss
rcll
mov
dec
and
ret
pop
into
xor
mov
lods
pop
sub
hlt
repnz
je
leave
rolb
sbb
and
push
scas
shl
dec
pop
dec
mov
add
sbb
mov
cld
push
leave
enter
adc
hlt
cltd
and
and
xchg
fisttpll
imul
daa
xorl
push
inc
xchg
jne
cs
fstl
xchg
pop
fucomip
xchg
and
inc
adcl
ja
hlt
ret
xchg
xchg
xchg
xor
push
jge
test
cwtl
cwtl
insb
mov
out
out
ljmp
or
popf
pop
cmp
xor
jp
sub
imul
ret
adc
aad
popf
mov
test
inc
dec
inc
mov
mov
mov
icebp
cltd
loope
stos
fadds
orb
out
shrl
movsl
in
clc
mov
adc
adc
call
dec
push
es
lret
mov
mov
xchg
dec
out
sbb
xchg
cmp
inc
pop
dec
sbb
jmp
sbb
sbb
jo
rolb
jne
dec
mov
ret
into
rcrl
ja
add
xchg
mov
jg
addr16
add
cli
dec
fimuls
mov
mov
jb
and
fwait
ljmp
fcomip
stos
xorl
jmp
mov
mov
ljmp
fadds
dec
test
jo
xor
xor
es
ret
pop
mov
enter
lret
sarl
jecxz
mov
sbb
sbb
leave
xor
loopne
mov
jnp
imul
lock
mov
pop
mov
cmc
adc
orl
sti
xor
push
mov
neg
mov
into
jg
subb
lret
pop
dec
repnz
dec
fcomps
shlb
or
xchg
pop
dec
jge
mov
out
mov
and
xor
mov
xchg
movsl
and
sub
xor
shll
adc
mov
dec
push
or
mov
fldenv
lds
mov
incl
jno
mov
adc
or
jg
idivb
and
inc
mov
jge
add
mov
cmp
inc
cmp
in
clc
pop
daa
fcom
test
dec
mov
int
les
stos
shll
arpl
mov
cmp
push
mov
ja
outsb
jecxz
jp
fistpl
fistpl
xor
leave
fsub
cmpsl
dec
mov
push
dec
mov
sarl
lods
inc
cmp
rcll
fsubrl
inc
adc
cmpsb
int3
int
push
adc
mov
jb
mov
es
imul
leave
pop
stos
int3
test
jb
cmp
jnp
inc
not
push
pop
push
inc
sub
icebp
hlt
mov
hlt
sar
jl
andb
imul
add
mov
xchg
inc
mov
cltd
cli
mov
sarl
jae
or
xchg
cmp
loope
cmpsl
jo
mov
inc
push
jnp
jl
js
jbe
shl
dec
add
cld
jo
mov
aas
jae
xor
aad
out
jg
in
cmp
scas
mov
pop
stos
jmp
fsts
dec
in
dec
outsb
xchg
daa
mov
and
enter
fxch
inc
jae
mov
leave
outsl
bound
call
dec
mov
xchg
fmull
lds
mov
or
cmc
mov
imul
fbld
jg
add
dec
lret
bound
jo
stos
mov
ret
pop
test
lock
push
inc
cltd
mov
lret
mov
mov
shll
out
ds
jo
cmp
add
aam
sbb
int
fldenv
pushf
inc
and
aad
mov
cs
clc
call
lcall
xchg
sub
ds
sbb
mov
aad
jle
pop
decb
adc
adc
rcll
aaa
mov
push
popl
cmp
mov
xor
and
loop
sbb
ljmp
lds
mov
sti
mov
loopew
loope
aas
dec
add
das
pop
aaa
jg
das
xor
push
xor
sub
outsl
aas
mov
mov
mov
mov
out
mov
push
mov
ret
mov
ja
stos
cmpsl
or
pop
shrl
ljmp
repnz
int
xor
subl
std
jne
aad
mov
ror
loopne
push
loopne
leave
addr16
call
shll
fdivs
adc
mul
rcrb
adc
lods
xor
leave
in
or
inc
inc
loopne
sbb
cli
fmull
aaa
xor
sbb
out
mov
cmpsl
test
icebp
in
push
into
in
pop
shlb
fldenv
repz
mov
dec
push
xor
push
hlt
out
mov
pop
cli
ja
loop
sbb
test
andb
or
imul
into
aaa
stos
and
mov
into
or
dec
rorb
sbb
add
int3
addr16
add
decl
stos
scas
inc
lret
add
sub
push
lock
imul
cli
push
jl
and
inc
scas
aam
xchg
loopne
mov
dec
add
out
dec
inc
add
icebp
iret
jmp
mov
aad
in
dec
in
jae
and
addr16
mov
arpl
xor
push
or
pop
fldenv
cmp
rclb
push
aad
xor
add
xor
mov
adc
ja
in
leave
cmp
xor
shlb
stos
jns
add
leave
jmp
out
or
push
shrl
frndint
xor
out
pop
push
pop
jl
out
test
mov
xor
loop
mov
out
or
cmp
mov
cmc
cltd
loope
and
mov
fldt
or
push
push
ss
lret
int3
jl
sub
mov
push
xchg
leave
rol
aad
dec
and
fdivl
roll
aad
push
test
inc
pop
add
mov
icebp
aam
push
rcll
dec
xor
icebp
cmp
hlt
mov
sarl
push
dec
add
lock
jg
xor
jo
fsubr
mov
roll
xor
xchg
out
js
stc
repz
popa
mov
out
sub
sub
ret
push
pop
aas
or
and
aad
mov
fisubs
lock
mov
shr
icebp
cld
mov
sbb
and
dec
rcrb
fwait
or
mov
hlt
dec
inc
mov
adc
inc
insl
loope
fucom
mov
and
js
xchg
xor
fdivl
icebp
adc
push
mov
stos
or
movl
mov
sbb
or
rcrl
jecxz
and
ret
es
sbb
pop
std
test
stos
xchg
or
inc
jg
pop
inc
int
and
mov
sbb
test
les
push
pusha
jg
and
rclb
push
and
pop
xchg
call
add
lea
in
sbb
lgs
dec
aam
sbb
add
test
loope
and
cltd
aam
int3
repz
mov
inc
jns
mov
lds
push
div
loope
adc
sahf
sub
fcoml
mov
dec
cltd
pop
xor
xlat
push
sahf
nop
test
cmp
fs
sbbb
jb
add
cwtl
aam
xlat
lds
add
push
and
pop
imul
mov
iret
cmc
xchg
loope
mov
stc
dec
idivl
icebp
shrb
pop
push
inc
cld
aad
leave
rorb
lds
mov
sub
mov
lods
aam
mov
sub
mov
or
sub
adc
sbb
or
leave
rorl
aaa
jmp
cli
mov
enter
mov
divl
adc
mov
stos
lahf
xor
jns
xchg
mov
mov
daa
jg
dec
inc
mov
lret
sbb
mov
or
sahf
adc
mov
clc
cld
xor
cmp
jg
sbbb
jns
xchg
cmp
std
xor
dec
xor
and
jae
aad
fcoml
mov
jno
xor
adc
cmpps
das
popa
push
mov
lahf
ret
mov
mov
adc
jecxz
inc
enter
inc
push
dec
popf
sarb
ret
mov
dec
daa
mov
xor
mov
dec
leave
dec
lret
dec
xor
mov
gs
and
inc
aad
xor
xor
mov
or
xchg
into
out
xor
inc
jb
or
aad
addl
mov
int
cmp
call
mov
xor
xor
loop
leave
sahf
lods
int3
xchg
repnz
mov
js
lea
push
insl
repz
out
or
icebp
mulb
rorb
int
cmp
outsl
mov
repz
jbe
mov
jb
repz
cmp
lret
xchg
leave
xor
lea
int
cmpl
jnp
in
inc
dec
loop
dec
mov
mov
and
mov
adc
mov
aaa
mov
push
rorl
out
add
mov
push
cmp
and
test
sbb
hlt
xor
inc
roll
lcall
add
add
loope
pop
mov
and
sbb
push
xor
test
fcoml
arpl
dec
outsb
mov
leave
popf
add
out
sarl
mov
in
sub
or
aad
cmp
or
dec
mov
and
sbb
leave
mov
xlat
or
adc
cwtl
dec
test
cli
xchg
xorl
add
xorl
sbb
aam
pop
or
mov
out
add
adc
pop
fistl
into
pop
sub
pop
inc
xor
popa
xor
or
and
mov
int
xor
adc
xor
lret
out
jge
adc
xor
shll
cmc
dec
add
dec
mov
cwtl
sub
xlat
mov
or
test
stos
popl
jmp
repnz
mov
lret
icebp
decb
shlb
or
fcomip
mov
lods
enter
popf
and
xor
or
jne
or
adc
adc
fstps
mov
push
jmp
mov
dec
add
xchg
mov
hlt
xchg
lods
jae
aaa
ret
and
mov
stos
cmpsb
inc
inc
in
cmpsl
jb
xlat
aam
enter
das
int3
xor
mov
ds
pop
rorb
xor
fxch
inc
jae
dec
int
stos
add
sbb
and
ja
sbb
rcrl
mov
xchg
lret
inc
dec
inc
add
out
mov
fcoms
pop
fst
into
lock
test
add
loopne
shll
mov
ljmp
sbb
or
pop
cmp
in
jns
imul
xlat
lret
test
aad
jmp
dec
outsb
enter
sbb
cwtl
cli
or
mov
mov
xor
inc
cmc
add
icebp
push
stos
shrl
sub
lods
icebp
jbe
ret
fldenv
mov
mov
scas
sbb
xlat
cmpb
pop
leave
ljmp
cli
stos
xchg
insb
adc
imul
add
jmp
xchg
iret
out
rclb
sbb
aam
jno
pop
jb
add
lds
arpl
and
jbe
faddl
mov
ljmp
loop
bt
rclb
sbb
dec
and
dec
cmpsb
enter
out
add
adc
xor
or
sbb
mov
fbstp
dec
iret
add
fisubrl
mov
and
jns
mov
mov
aad
sub
push
test
sub
mov
xor
gs
ret
sub
push
in
mov
daa
aaa
xor
lods
rol
sub
sbb
dec
fptan
ds
gs
push
aam
iret
popa
dec
in
vsubpd
iret
std
adc
mov
sarl
fdiv
repz
aas
xor
pop
popf
outsb
repnz
stos
or
sbb
add
lock
ret
int
pop
icebp
fiaddl
push
repnz
rcll
push
fbstp
outsl
and
fldl
test
aas
or
adc
mov
ss
xor
test
pop
dec
fsubrs
lret
xor
lods
pop
dec
push
imul
fldcw
mov
shrl
pop
jbe
xor
mov
sbb
sbb
sbb
aas
hlt
and
cli
jp
ljmp
push
mov
test
mov
and
sub
lods
shl
jb
fldenv
mov
into
xchg
push
shll
insl
jb
pop
pop
imul
and
jmp
in
sub
aas
icebp
push
sub
adc
dec
and
xor
icebp
or
ret
ret
push
xor
sub
lret
mov
xor
cli
idivb
rcr
or
inc
sarl
xchg
jne
scas
enter
mov
or
lds
jns
ljmp
sub
shr
shrb
mov
push
inc
or
and
add
aam
mov
sti
inc
leave
insl
fcmovb
loope
clc
cli
push
jb
jno
lock
addl
or
lret
cli
inc
fcmovbe
jae
lahf
push
push
sub
add
mov
adc
mov
mov
xor
inc
pushl
test
ret
enter
adc
movsl
ret
mov
test
icebp
sbb
fisttpl
leave
iret
xor
stc
sub
push
jbe
jb
mov
aam
xchg
out
dec
insb
xchg
repz
shr
xor
jecxz
je
xchg
or
sarb
addr16
repnz
aad
push
sub
adc
jns
xor
rcl
in
push
stos
or
jbe
sti
loopne
dec
aad
leave
sbbl
shr
push
cmpsl
aad
inc
mov
leave
inc
ret
das
data16
or
pushf
mov
imul
enter
hlt
popf
and
pop
or
sub
mov
push
fsubl
ficompl
dec
mov
push
cmc
idiv
xchg
sti
sbb
daa
fwait
jmp
xlat
roll
mov
bound
xor
jg
mov
clc
cs
mov
imull
in
mov
loope
imul
jns
fistpll
jns
xor
push
out
mov
fcomip
mov
jge
xor
mov
fists
leave
aad
int
mov
icebp
mov
movsl
aad
into
imul
int3
int3
xor
hlt
jo
stos
lods
adc
loope
mov
jle
insb
pop
adc
dec
inc
cmpsl
psubw
lods
dec
sub
lea
ret
enter
adc
inc
and
leave
lret
mov
or
repz
inc
mov
cltd
pop
sbb
xchg
test
fisttpl
ret
test
jmp
add
and
mov
sbb
in
jnp
jle
subb
xor
add
xchg
or
enter
mov
loope
adc
aam
sbb
mov
mov
inc
xchg
mov
xor
push
add
mov
dec
xor
dec
repnz
ja
jns
divb
mov
xor
movsb
adc
dec
pop
sub
in
andl
cmpsb
int
xor
xlat
int
shrl
shl
ja
mov
sbb
lock
cmp
icebp
pusha
mov
dec
fcoml
movsl
loope
sub
lds
fwait
inc
out
lret
pushf
push
sub
jbe
hlt
mov
and
sti
in
mov
mov
fildl
dec
in
xchg
pop
cmp
adc
enter
mov
je
and
les
mov
xor
fcmovb
xchg
mov
cmp
and
decb
aad
mov
loope
imulb
hlt
xor
cmc
leave
inc
push
shl
sbb
in
daa
mov
jmp
pop
cmp
push
adc
cmpsb
lahf
stos
mov
leave
clc
inc
ret
dec
js
cmp
ret
mov
cwtl
rol
lds
shlb
ret
mov
and
xor
jbe
sbb
cltd
rolb
rcll
pop
fisttpll
cli
mov
push
cmpl
lret
dec
stos
repnz
shll
lock
ds
popf
inc
je
aad
inc
add
mov
test
pop
xchg
adc
jecxz
int3
int
in
int3
pop
jl
cwtl
lds
repz
push
aam
and
stos
rol
mov
add
orb
mov
inc
lret
mov
test
shll
adc
aad
push
fists
pop
mov
or
int3
or
ret
stos
lahf
mov
pop
pop
lahf
bnd
xor
cmp
in
mov
lahf
mov
cmpsl
jae
ds
pop
mov
xchg
test
in
test
jno
pop
dec
sub
cmpsl
test
jp
stos
pop
test
jnp
inc
pushl
xchg
inc
shll
mov
cwtl
lods
xor
xchg
pop
pushf
jl
cmp
and
inc
add
icebp
loopne
dec
jb
jns
adc
aad
loop
outsl
dec
or
call
cwtl
scas
data16
loope
inc
dec
cmc
xor
ret
test
stos
xchg
es
aaa
pop
add
xor
add
imul
mov
xchg
mov
xchg
mov
pop
outsb
sbb
mov
jno
cmpsl
mov
fadds
or
rorl
stos
aad
pop
lds
mov
cltd
inc
mov
popf
int3
in
inc
pop
jle
cmp
and
sub
jno
mov
mov
sub
mov
push
daa
pop
xlat
or
lods
pop
aad
jne
and
sub
ffree
mov
cmp
mov
rclb
jmp
sbb
mov
xchg
mov
pop
jp
ret
call
insb
mov
jp
dec
xor
popa
insl
mov
repz
nop
xchg
mov
aad
and
push
stos
mov
mov
mov
jb
mov
shr
pop
std
inc
out
mov
insb
cmp
pop
mov
test
xchg
mov
jne
dec
out
adc
cmp
data16
stos
cmpsl
dec
test
mov
lcall
mov
jge
shl
leave
insl
xor
mov
mov
inc
inc
scas
lds
popa
push
xor
xchg
sar
incb
in
push
xor
jl
mov
fmull
fistl
inc
jno
stos
lods
jg
loope
xor
enter
dec
ja
xchg
out
jl
es
es
iret
leave
ds
xchg
outsl
xor
and
sub
call
mov
sub
xchg
inc
dec
lret
aad
xchg
je
dec
call
cli
test
mov
rolb
sub
shrl
cmp
mov
aam
dec
movsb
loope
dec
repz
dec
cld
mov
lea
lret
mov
add
xor
push
mov
jo
xchg
jg
movsl
and
fwait
int3
jne
push
cli
mov
repz
mov
xor
jns
sbb
push
cld
cld
iret
xor
icebp
enter
roll
and
jne
or
or
xchg
xchg
call
test
add
push
sbb
jmp
and
add
int3
test
ret
pop
and
jmp
dec
mov
push
mov
or
jmp
sarb
pop
data16
mov
and
lods
pop
shl
stos
jle
xor
mov
daa
xchg
repz
inc
mov
outsb
fldl
loop
pop
cmpsl
add
loopne
or
js
mov
and
pop
add
add
pop
pushf
dec
and
es
nop
and
cmpsl
inc
or
pop
testl
rol
shl
or
stos
fldl
and
mov
sub
roll
or
stos
es
jae
push
jno
stos
adc
jge
insl
sbb
adc
cmp
fcomps
paddd
add
repnz
ret
in
rcrb
push
xchg
jecxz
scas
cli
jmp
test
inc
ficoms
mov
inc
lea
outsl
ret
pop
adc
imul
cli
mov
or
jmp
insb
ja
add
jp
adc
dec
or
pop
movsl
jp
and
and
int
jmp
in
fmul
ljmp
lahf
idivl
jns
mov
pop
jbe
rclb
lea
pop
lcall
add
test
pop
out
push
adc
mov
push
shl
jecxz
or
push
lret
xlat
vpavgb
mov
mov
ja
and
fistps
shrl
mov
pop
int
sub
pop
out
movsb
in
pop
fxch
lcall
pop
xchg
movsb
in
les
xchg
push
sub
int
cmp
data16
cmpsl
dec
xor
in
mov
jae
iret
inc
ret
inc
shll
mov
mov
mov
loop
or
dec
pop
cmpsb
xlat
test
mov
std
push
loope
and
xor
lret
sub
dec
push
in
pop
jmp
xor
scas
mov
cmpsb
imull
mov
rorb
repz
movsb
mov
xor
test
or
shr
mov
mov
cmpl
hlt
xor
mulb
into
push
mov
and
jp
fmulp
leave
aad
mov
divb
dec
mov
rol
scas
insl
addr16
mov
dec
mov
mov
mov
lret
mov
adc
stos
neg
call
lret
adc
xchg
sbb
lock
mov
xchg
pop
ficoms
add
pop
cmc
cmp
lods
pop
pop
xchg
movsl
int3
xchg
fsub
or
jmp
rcr
add
aaa
cmpsl
cmp
ror
mov
icebp
out
test
and
add
xchg
pop
cli
cmpsl
icebp
xchg
cmpsl
aas
and
xlat
mov
ret
mov
cmpsb
ret
mov
scas
xor
push
push
jnp
fs
test
adc
mov
pop
mov
outsl
dec
mov
cmpxchg
stos
adc
mov
push
lret
cmpsb
mov
dec
xchg
jno
rol
xchg
mov
rol
mov
stos
ret
ja
rorb
mov
loopne
sbb
jbe
rcrl
add
xchg
push
xchg
ficomps
push
sbb
sti
xor
add
xor
jnp
cltd
cmpsl
pop
and
test
test
iret
mov
push
repnz
test
push
sarl
xchg
or
popa
rorb
xor
shrl
inc
dec
enter
mov
mov
mov
ja
sub
fsubrs
das
inc
sarl
scas
jmp
sbb
or
and
xor
mov
fwait
mov
test
hlt
pop
imul
jne
adc
or
jb
pushf
xor
loope
and
hlt
dec
push
aam
jnp
sub
lods
aad
int
dec
xor
mov
xor
enter
dec
ljmp
clc
in
xor
orl
mov
movhps
out
jns
repz
xor
cmp
ljmp
test
sub
fnstsw
mov
or
popf
repnz
pop
lds
push
out
stos
add
sub
jecxz
imul
jmp
test
out
lret
lds
scas
cmp
sbb
or
and
bound
and
cwtl
xor
lds
seto
std
pop
mov
test
sar
xor
aad
int
fsub
jp
pop
dec
or
adc
push
inc
add
and
dec
add
sub
xchg
jo
stos
mov
mov
mov
repnz
sbb
loope
mov
fldt
fmul
jb
imul
mov
and
mov
cli
xor
call
cmp
mov
mov
arpl
sbb
mov
iret
xchg
movsl
add
fidivl
sbb
mov
add
sbbb
pusha
push
or
in
add
pop
xor
into
xor
cltd
pop
jo
lret
pop
mov
enter
test
sbbl
mov
xor
jns
subb
rorb
push
mov
rorl
mov
mov
pop
mov
mov
sbb
or
xor
fnsave
xchg
das
int
in
xor
test
test
fmuls
xor
daa
dec
xor
or
outsl
loop
jg
inc
jle
cld
cmpsl
lea
rcrl
lret
mov
xor
leave
rsm
xchg
dec
dec
xchg
iret
scas
jae
jo
rdpmc
xchg
and
aad
sub
stos
or
rcll
test
xchg
mov
aam
jg
jle
xor
scas
xlat
inc
in
popa
lock
cmp
mov
loopne
lcall
bsf
cmp
mov
outsl
sbb
outsb
lret
inc
iret
cwtl
sub
notb
sbb
aad
and
pop
push
or
ret
ret
out
xor
sbb
sub
in
adc
cltd
fdiv
and
sub
in
mov
jmp
inc
pop
cmp
test
xor
mov
pop
sub
inc
cmp
pop
int3
add
pop
fdivrp
idiv
mov
test
scas
push
push
mov
test
repz
cld
or
cmp
pop
aam
add
mov
or
sub
icebp
mov
xor
mov
mov
mov
or
leave
push
mov
and
jno
add
add
or
std
movsl
and
inc
fsub
popa
iret
dec
loopne
and
test
dec
cmp
dec
inc
sbb
jbe
adc
lock
cmp
jb
out
dec
sub
test
adc
jg
in
mov
pushf
mov
pop
imulb
fisubs
in
int3
dec
fsubrs
mov
and
xor
lds
mov
repnz
push
daa
aad
xor
adc
mov
jl
stc
push
inc
xor
sarl
roll
ss
dec
jnp
jle
dec
pop
add
add
lret
dec
repnz
cmpsl
push
mov
or
test
loop
xor
sbb
mov
jle
jne
add
cmp
popf
test
data16
into
push
cltd
lret
jae
cmpsl
lcall
add
or
lcall
icebp
outsb
mov
into
xor
lea
push
lahf
mov
xor
pop
inc
add
into
sbb
xchg
out
push
cld
push
mov
cwtl
cmp
int3
incb
out
mov
sub
in
sbb
mov
cltd
int3
push
dec
push
adc
leave
out
fstl
add
cmp
xor
push
xchg
mov
rclb
jecxz
aam
xchg
and
stos
leave
lret
mull
add
jno
inc
xchg
lcall
pop
and
add
sub
mov
mov
or
dec
enter
mov
lahf
add
pop
jmp
mov
cwtl
std
lcall
mov
int
xor
into
sub
incl
jecxz
or
sub
div
lds
aad
repz
jecxz
mov
xor
mov
fcomip
rorl
popa
fcmovnb
cmp
neg
dec
xor
pop
shrb
rorl
mov
or
fisubrs
xchg
test
xchg
int3
lret
cmp
dec
les
push
xchg
lds
fildl
mov
lea
ficomps
jne
in
lret
push
repz
shrb
push
cmp
dec
hlt
add
gs
add
adc
sub
mov
cmp
gs
cmp
popf
repz
incb
leave
dec
popa
insl
in
pop
int
dec
pop
in
orb
pop
inc
push
sub
push
fidivrs
test
dec
stc
sbb
push
xor
cmp
dec
outsl
add
movsl
mov
pop
jmp
push
rorb
ficomps
jne
in
lret
push
repz
and
dec
les
add
in
mov
into
leave
cli
mov
dec
jmp
inc
dec
xor
popa
int
sahf
xchg
lahf
or
das
or
pushf
enter
lods
fyl2xp1
ljmp
lcall
roll
fstl
dec
sub
shll
pop
ficoml
popf
pop
or
leave
out
outsb
dec
inc
sahf
dec
fstpt
sarb
mov
mov
mov
mov
cmp
mov
cmpsl
repnz
push
mov
mov
pop
les
xchg
mov
add
in
cli
lret
sti
push
xor
xor
xor
mov
inc
dec
aad
mov
xor
sub
fcomi
fldln2
pop
pop
lret
xor
int
jecxz
fxch
jno
sbb
xchg
xor
call
lret
sub
sbb
push
popf
mov
fldt
lea
xchg
pushf
mov
xchg
imul
sbb
mov
push
xor
cmpsb
jae
push
and
pop
cmpsl
or
shl
aaa
mov
stc
jb
push
in
xor
xor
jge
mov
dec
xor
aam
leave
cltd
dec
sbb
push
ret
int
adc
cmc
stos
and
push
in
and
pop
popf
icebp
xor
cld
fadds
sbb
dec
in
xchg
fcmovb
mov
pop
in
and
gs
loope
inc
addb
mov
mov
fsubrp
jno
fisttps
std
test
dec
repnz
test
mov
std
pop
jge
enter
test
sbb
mov
sti
leave
pop
fstps
loopne
cmpl
push
lret
test
loope
jb
pop
icebp
pop
mov
and
cmp
mov
rorl
dec
jmp
loopne
jg
flds
mov
in
jne
aas
lods
out
xchg
ljmp
jp
shrl
ficoms
mov
dec
mov
jns
inc
jb
arpl
jnp
arpl
inc
fwait
outsl
push
add
in
test
icebp
stos
rcrb
jp
in
jge
xor
xchg
aad
lds
movsl
inc
fstps
add
dec
loopne
adc
mov
mov
xor
rcl
fidivl
vcmppd
in
lret
leave
aas
loopne
int3
push
popa
cld
cmp
xchg
cmp
mov
pop
pop
and
mov
xor
xor
sub
dec
in
leave
and
push
es
push
xor
mov
pop
rorb
pop
rorb
push
out
and
pop
jns
dec
subl
addr16
push
cmc
dec
scas
dec
add
arpl
test
cmp
popa
or
daa
sti
mov
das
mov
cmp
or
xchg
sbb
jg
push
scas
aam
imul
bsf
incl
mov
sbbb
rclb
incl
xor
sbb
lea
fadds
enter
jns
pop
cs
lret
stos
movsb
es
rcrb
leave
and
cmc
jge
fs
arpl
mov
xchg
cmp
into
inc
jb
mov
xchg
movsl
mov
mov
push
neg
jns
and
dec
jg
out
add
jl
mov
jecxz
lea
xor
sahf
jae
int
add
clc
and
in
and
out
fadd
hlt
jne
out
mov
jnp
test
pop
testb
repnz
nop
outsb
jno
insl
jo
in
dec
std
mov
adc
lret
xchg
idivl
stc
outsb
lods
xchg
adc
mov
cmp
mov
stos
in
idiv
mov
aaa
jecxz
in
cmp
xor
lahf
dec
mov
adc
into
xor
jae
popa
xor
pusha
cmp
notl
jecxz
addr16
icebp
sahf
mov
sbb
loop
loopne
out
loopne
test
mov
mov
push
adc
frstor
adc
enter
rcll
std
aam
scas
ret
mov
rorb
add
jl
mov
int3
stc
dec
mov
std
or
xchg
xor
out
xchg
jo
mov
rcrl
mov
and
dec
repz
jb
fisttpl
adc
dec
pop
shrl
shrl
mov
dec
xor
push
dec
stos
scas
fs
or
jp
mov
inc
ret
xor
leave
sbb
daa
pushf
mov
dec
stos
test
jne
jle
mov
das
stos
push
sub
adc
jnp
push
jle
ror
repz
inc
mov
neg
ror
jbe
mov
movsl
leave
xor
jb
adc
adcl
adc
cmc
or
gs
out
inc
shlb
nop
sti
adc
std
cmpsl
mov
xchg
jbe
fcomps
pop
or
ja
divb
dec
in
jnp
or
mov
jle
mov
jo
jmp
lock
pop
repnz
mov
inc
imul
out
fisttpll
sub
mov
test
cltd
out
lcall
adc
sub
xchg
imul
or
lret
aad
mov
push
cs
andb
dec
xchg
aad
fisubrl
shrl
push
sbbl
dec
fnstenv
int
mov
lahf
in
mov
mov
fsqrt
lock
xor
cmp
add
divb
fists
or
pop
aas
xchg
inc
adc
jg
rcl
mov
xlat
jle
pusha
mov
dec
and
shl
test
ja
lods
in
movsl
ret
push
mov
jne
mov
add
lret
std
dec
mov
or
test
mov
shl
push
loop
fldcw
mov
push
cli
stc
into
mov
cmp
es
scas
sbb
sub
lret
aas
adc
movsl
dec
cmp
mov
ret
enter
out
xor
out
addr16
cld
mov
cli
ds
or
rcrl
ds
mov
movsl
cmp
sub
aad
add
movsl
cmpsl
cmp
jp
mov
repz
push
push
test
jg
das
xor
test
in
ljmp
and
cmpsl
cld
xchg
mov
stos
ret
test
add
dec
daa
mov
push
mov
sub
out
mov
inc
icebp
idiv
add
xor
cltd
jecxz
dec
repnz
push
cmp
jge,pt
xchg
push
nop
xor
mov
jae
movsl
sub
xor
dec
add
arpl
int
push
sub
cs
shll
ja
stos
push
add
and
dec
dec
add
lock
inc
lgs
lds
mov
int
shll
insb
mov
cmp
mov
loop
enter
mov
test
mov
jp
push
stc
jge
mulb
and
mov
xchg
xchg
sbbl
mov
push
mov
daa
sub
lahf
add
mov
insb
and
aas
sub
ja
stos
fucomi
xchg
mov
push
pusha
test
ret
add
push
out
in
data16
and
xorl
outsl
lock
fs
arpl
cld
test
in
mov
xor
add
jae
rcll
push
push
push
pop
in
out
shll
mov
sti
add
jmp
sub
cmp
mov
shr
icebp
dec
dec
aaa
xchg
and
or
rorl
ret
cmp
mov
inc
xchg
sub
add
push
imul
jle
mov
dec
testl
icebp
sub
in
and
xchg
repz
lods
cld
imul
or
jl
ret
push
cmp
add
inc
loop
adc
test
shl
aaa
test
shl
mov
and
test
pop
sti
rolb
mov
cltd
and
test
xchg
xor
mov
xor
push
call
push
or
scas
mov
inc
arpl
jae
xchg
fdivrl
iret
test
jle
mov
mov
and
jb
and
daa
dec
sub
fildll
add
jns
and
lock
adc
jb
pop
lds
out
mov
adc
push
sarl
fisubs
dec
cmc
mov
fisttpl
inc
inc
shl
pop
mov
sbb
inc
push
fdivs
add
inc
push
jo
shrl
loopne
loope
add
mov
or
stc
xchg
imul
cltd
ret
inc
adcl
lds
je
sbb
jg
mov
mov
jg
dec
mov
shlb
mov
leave
pop
stos
inc
pop
in
ljmp
js
dec
or
and
ds
mov
add
pop
pop
std
jmp
or
mov
mov
cli
dec
je
int3
ret
icebp
ds
pop
add
fsubs
adc
stos
jne
std
in
xor
mov
mov
sbb
inc
add
test
rclb
jne
add
pop
sub
inc
rcl
add
dec
xorl
mov
stc
hlt
int
nop
xchg
ret
push
cmp
lods
xchg
inc
mov
add
mov
jecxz
dec
ror
iret
scas
mov
jo
jae
shrl
dec
jae
mov
or
xchg
roll
cmpl
call
mov
sbb
popa
sbb
les
sahf
mov
gs
leave
pop
jae
clc
and
and
test
adc
stos
lret
adc
push
inc
test
imul
icebp
mov
push
jno
jle
cmp
js
lock
pop
icebp
pop
push
test
mov
pop
mov
pushf
or
cltd
mov
cmpsl
jb
fcmove
jle
imul
int
icebp
mov
add
mov
xor
int
into
jle
stos
xor
cmp
mov
das
dec
stc
push
inc
nop
add
das
xor
xchg
jge
pop
sbb
es
adc
data16
sbb
cmp
ret
mov
andb
xor
pop
js
sarl
mov
shll
sub
das
rorl
fnstenv
loopne
and
adc
shrb
add
mov
mov
jns
out
insl
cli
std
xlat
loop
ret
aam
xchg
mov
test
mov
ljmp
pop
popf
jae
out
orl
pop
inc
and
icebp
movsl
fnstcw
xor
dec
mov
dec
dec
test
adc
imul
sbb
mov
inc
mov
dec
pop
xchg
or
cmp
push
mov
cld
mov
imull
mov
sbb
sub
or
jns
inc
push
push
les
dec
fdivl
aad
ror
repz
jmp
or
jbe
mov
cmp
aas
xchg
push
loope
movsl
cmc
js
pop
hlt
add
aam
push
inc
mov
out
test
subb
jecxz
dec
movsb
jl
sub
aam
lret
leave
icebp
add
dec
std
pop
push
hlt
mov
sbb
insl
push
mov
mov
scas
lret
mov
jnp
enter
sti
scas
ret
and
out
ret
pop
and
adc
push
adc
cmc
and
mov
sub
and
mov
cli
cmpsb
and
or
inc
mov
ljmp
sarl
dec
divb
scas
adc
test
mov
popf
lret
test
mov
sahf
and
xchg
sub
gs
mov
stos
pop
mov
adc
sub
mov
jnp
icebp
in
sarl
push
and
sub
mov
mov
inc
cmp
sbb
and
into
idiv
jne
mov
xchg
mov
xor
aaa
xchg
pop
into
cmp
sbb
mov
dec
inc
cld
insl
int3
jo
cmp
stos
les
int3
inc
jp
sbb
scas
mov
mov
xchg
inc
inc
adc
faddp
cltd
daa
adc
mov
ret
adc
sar
and
cltd
inc
mov
cmp
and
mov
or
cmc
outsb
call
mov
mov
mov
lcall
ret
cmc
mov
jne
in
dec
cwtl
pop
jl
xchg
add
push
add
pop
leave
loope
add
rol
aad
cmp
mov
shrl
fadd
ret
out
int
or
mov
and
jge
cmc
and
mov
aam
iret
jne
icebp
or
int3
xor
lcall
mov
dec
int
mov
ljmp
ljmp
lock
stos
test
movsb
push
sbb
sub
lock
jns
mov
cmp
xor
stos
repz
dec
mov
push
pop
dec
jno
dec
iret
or
and
ret
mov
mov
fnstsw
pop
mov
in
jae
jle
int3
aas
jo
fdivl
daa
mov
push
sbb
mov
and
rcl
and
add
dec
mov
dec
or
rcrb
enter
xor
fsubrs
add
jns
cwtl
shl
mov
sbb
mov
ds
jecxz
mov
leave
add
mov
movsl
cmpsb
add
jmp
int
mov
lcall
push
xchg
push
inc
ficomps
and
aam
mov
ljmp
mov
test
inc
in
xor
clc
cli
das
xchg
pop
aaa
fwait
and
and
jg
mov
xor
mov
shlb
mov
xlat
or
pop
movsl
lret
or
gs
lock
and
inc
lea
int
xor
mov
xchg
fisubl
mov
xor
sbb
jl
inc
pop
adc
add
cmp
cli
xor
inc
shl
add
into
mov
and
xor
xor
iret
adc
aad
fsubrs
and
imulb
fldenv
or
rcr
xor
dec
pop
sarb
cmp
fs
repnz
or
dec
in
push
in
jmp
repnz
jns
fcompl
in
dec
jo
nop
into
mov
int
inc
sub
mov
xchg
jmp
add
add
xor
sbb
sarb
mov
icebp
imul
mov
movsl
push
sub
addr16
cli
sub
pop
dec
xchg
movsl
adc
cmp
ljmp
add
or
iret
dec
dec
dec
and
or
test
int3
lock
mov
shlb
icebp
or
sbb
out
and
hlt
call
add
cmp
adc
push
cmp
imul
mov
or
cmpsl
loope
lret
inc
push
xor
xchg
pop
cmp
je
push
sub
leave
and
out
rcrb
rcrb
pop
imul
mov
loopne
mov
shlb
fwait
mov
sub
lahf
in
sbb
and
mov
lods
call
stc
xlat
xor
int3
loope
dec
iret
jp
stos
mov
lds
add
ficomps
jns
or
mov
cmp
stc
shrb
out
movsl
cmp
je
dec
fsub
push
jmp
inc
out
mov
sbb
gs
out
ret
aad
xor
lahf
or
dec
into
push
mov
cmp
and
into
push
mov
lret
test
push
pop
pop
lret
jg
popa
or
or
or
mov
stos
xor
adcb
repnz
ljmp
fidivrs
aas
inc
xchg
pop
and
sbb
mov
mov
adc
mov
mov
mov
or
cmp
mov
rcrb
enter
stc
jl
mov
lods
ror
stos
nop
mov
adc
inc
in
lock
rcrb
aaa
out
add
in
dec
aaa
pop
arpl
sti
cmp
bnd
jg
mov
leave
ret
and
cld
sub
cmp
out
cld
add
mov
jno
mov
dec
lret
call
nop
scas
adc
ja
loope
popl
lret
mov
out
push
call
xchg
insl
rolb
inc
dec
dec
jge
sub
adc
aaa
enter
movsb
xor
lret
mov
mov
and
mov
mov
jecxz
inc
push
out
cmc
loop
cmp
lcall
lods
std
out
pop
jp
push
repz
and
aam
leave
dec
in
repz
sub
int3
gs
popf
sub
loope
dec
add
inc
scas
cmp
and
sub
mov
pushl
lret
push
mov
loopne
jns
or
movsl
sub
dec
test
repz
test
pop
imul
in
int
fwait
daa
mov
or
daa
pop
cmp
psrlq
ja
aas
mov
mov
adc
xor
and
mov
mov
lock
pop
enter
xchg
repnz
jb
sub
mov
mull
test
ret
or
fidivrs
xor
mov
add
dec
push
dec
pop
das
pop
adc
inc
and
inc
mov
mov
mov
inc
mov
dec
lods
into
xchg
daa
icebp
hlt
mov
scas
mov
or
rol
jmp
cmpsb
cli
mov
mov
mov
and
adc
pop
or
daa
ret
xor
pop
aaa
jge
xchg
lock
div
mov
jno
fimuls
mov
mov
cmp
stos
cmpsb
adc
add
out
jb
and
pop
mov
ret
xchg
ljmp
insl
stos
sbb
xor
xor
mov
in
sbb
ss
jg
std
pop
xor
ret
inc
add
dec
hlt
les
mov
daa
mov
fstps
rorb
xchg
xchg
mov
lret
and
movl
inc
shr
ret
aad
fnstcw
cmp
enter
dec
adc
loope
ljmp
nop
cmc
pop
stos
imul
push
dec
loopne
loope
mov
xchg
fnstsw
icebp
lcall
fxch
xchg
xlat
cli
fucomip
and
dec
shll
or
testb
pop
mov
stos
aam
inc
bound
push
cmp
xor
pushf
push
in
or
add
rcrb
adc
loope
mov
ss
cmp
mov
shll
jmp
test
push
or
int3
into
into
dec
sti
int3
stc
sahf
in
adcb
das
sbb
lret
test
shlb
sbbb
dec
xchg
or
inc
fadds
in
not
mov
and
iret
in
sub
cli
sub
and
loope
xor
push
int
stos
daa
cmp
mov
inc
scas
pop
outsl
or
cmc
adc
enter
adc
ror
in
xchg
sbb
rorb
test
popf
dec
mov
or
mov
test
mov
add
mov
mov
stos
fsubrl
rcr
mov
push
add
mov
sub
and
icebp
jmp
dec
mov
in
call
push
lret
push
pusha
pop
jns
sbb
fists
push
fmul
fstl
leave
stos
les
mov
enter
rorl
loope
sub
jg
xchg
pop
in
xchg
nop
in
adc
push
lods
js
paddsb
into
pop
jae
rolb
jecxz
inc
inc
xor
gs
test
or
lods
mov
push
xchg
test
xchg
enter
xor
xor
fs
xor
cld
push
dec
call
and
inc
add
mov
sub
loop
clc
in
mov
jo
test
out
inc
adc
in
fs
mov
stc
add
inc
inc
repnz
sbb
jecxz
push
cmpsl
ljmp
dec
jg
add
and
out
and
je
rorb
sahf
jecxz
add
sbb
mov
mov
or
ret
ss
aas
js
adc
jnp
xchg
int3
xor
cltd
xor
cmp
arpl
inc
ret
add
out
outsb
mov
cmp
mov
lock
xchg
stc
mov
repz
add
mov
test
fstpt
jae
fsts
xchg
push
fisttpll
add
and
hlt
jnp
cmpsl
mov
mov
lock
daa
mov
lret
lds
cmpsb
fmulp
mov
out
scas
imul
jnp
sub
xchg
jl
cli
mov
imul
mov
ljmp
ret
iret
mov
outsb
push
cmovo
ljmp
mov
mov
shlb
rcrb
cmc
rol
icebp
mov
and
mov
pop
icebp
mov
mov
mov
js
notl
push
mov
pop
dec
nop
aas
leave
loope
fsts
rol
jbe
ja
cmp
xchg
int
jae
mov
sti
dec
into
mov
mov
clc
push
mov
les
cmp
out
js
sbb
sahf
sbb
out
stos
jbe
repz
stc
in
and
imul
dec
xor
repz
std
dec
mov
jb
fmuls
lds
sbb
push
xlat
in
xor
out
push
mov
cmp
and
loope
and
sub
call
test
mov
sub
data16
mov
int
aaa
insl
popf
inc
and
dec
stos
test
cli
push
mov
or
xchg
or
mov
cli
mov
mov
mov
add
mov
push
pop
imul
xchg
fnstsw
nop
dec
sub
mov
js
or
aas
enter
fbstp
in
dec
movsl
adc
add
xchg
movsb
jnp
pop
or
enter
jmp
fildll
mov
and
dec
cld
aad
je
shl
cli
mov
push
push
clc
pop
mov
xchg
outsb
ret
push
fwait
in
jo
icebp
test
call
dec
mov
pop
xchg
addr16
test
aam
icebp
into
dec
sbb
add
cmc
fwait
daa
ljmp
xor
add
dec
xor
in
push
cltd
mov
imul
dec
pop
inc
fdiv
dec
mov
sbb
rorb
dec
mov
push
and
dec
stos
enter
data16
mov
mov
mov
mov
xor
lret
mov
dec
in
fldenv
fnstenv
std
sbb
xor
repnz
setne
xor
sbb
clc
or
pop
pop
dec
jb
stos
mov
jmp
mov
push
and
jl
and
mov
and
out
sub
je
pop
push
pop
sbbl
jmp
xchg
arpl
add
insl
fadds
mov
dec
roll
adc
jae
hlt
sub
and
mov
stos
outsl
jne
jno
mov
fnstenv
lock
dec
sub
mov
add
pop
cmp
jmp
inc
xchg
fadds
aaa
lret
out
xchg
jne
repz
aam
subl
lds
fldz
daa
ret
and
mov
into
stos
div
nop
int3
stos
adc
adc
mov
mov
xor
add
es
lret
xor
lret
jne
jb
movsl
fnstcw
dec
imull
dec
cmpsb
pusha
andl
in
jb
dec
inc
stc
mov
pop
icebp
xor
gs
inc
push
pop
int3
mov
lods
outsb
andl
shlb
repnz
sbb
sbb
mov
mov
fdiv
push
or
lock
scas
rcrl
rcl
ret
cwtl
outsl
cmc
and
fsubs
jo
dec
jl
insl
in
sub
flds
xor
pusha
int
cmp
or
ret
daa
xchg
sub
cld
pop
fcomi
cmp
leave
cs
pop
into
pop
dec
xlat
test
mov
mov
pop
in
stos
push
push
pop
fstpl
sub
cmpsb
repz
cmp
xchg
adc
leave
fnstenv
les
ds
push
jecxz
lret
add
or
fnsave
dec
or
int
mov
inc
lret
enter
shrl
jno
movzbl
jle
inc
in
aaa
add
stos
int3
mov
lds
mov
adc
divb
mov
lret
cmp
sahf
xor
movsb
push
pop
rol
adc
xor
inc
jmp
mov
into
ss
sbb
daa
aam
inc
adc
pop
jne
hlt
cmp
mov
mov
test
or
and
loop
cli
lret
mov
in
mov
push
fimuls
dec
xchg
ret
fcoml
push
arpl
and
or
mov
inc
dec
cmp
pop
inc
xor
ret
mov
cmp
mov
cmpsl
xor
sbb
lcall
movsb
mov
dec
out
jg
pop
xchg
stos
test
movsb
loope
clc
or
mov
mov
les
loopne
test
add
or
lret
sub
cld
lret
sub
jl
icebp
mov
popa
jb
nop
mov
cltd
inc
enter
les
and
stos
aas
cli
mov
imull
mov
mov
addr16
adc
pop
dec
inc
jmp
fldt
and
inc
cmp
cmp
dec
jb
add
sub
fadd
outsl
adc
test
jne
sbb
xchg
add
inc
nop
movb
sub
fldcw
mov
and
enter
mov
xor
mov
pop
cmpsb
lock
loope
xor
pop
mov
add
fists
xchg
mov
rcrl
mov
xor
mov
jp
int
sub
xor
inc
xchg
aas
mov
outsl
lods
mov
icebp
popa
xchg
adc
xor
inc
sub
mov
jae
gs
push
push
mov
jne
mov
mov
fwait
ret
cmp
dec
icebp
in
es
jbe
xor
stc
inc
aad
jg
mov
sarb
mov
stos
call
lret
enter
inc
mov
std
mov
test
dec
fcmovbe
pop
mov
movsl
test
xor
mov
dec
xor
add
xor
les
xchg
xchg
test
add
sub
cld
imull
lret
or
scas
jmp
push
ud0
mov
add
aas
mov
mov
cmp
fidivl
xor
cmp
sahf
or
movsl
stos
scas
push
das
xlat
arpl
stos
jno
je
dec
enter
or
or
arpl
mov
arpl
sub
ret
test
or
xor
or
lea
push
dec
int
cmpsl
rcl
dec
in
fcmovnbe
xor
adc
lds
shrl
pop
cwtl
mov
add
and
xchg
inc
loope
inc
call
rcll
stos
pop
std
mov
mov
fcomi
leave
or
mov
push
fwait
mov
mul
mov
mov
enter
inc
shl
sbb
mov
loope
add
rcrl
stos
add
rcl
leave
mov
enter
add
push
cld
shll
gs
mov
stos
mov
or
shrl
icebp
cmp
add
int
cli
fcmovnbe
sbb
rolb
icebp
loope
int
movsb
mov
mov
jno
stos
aam
test
int
mov
leave
test
xchg
lds
fcmovnb
and
fdivrs
ret
mov
aad
adc
movsb
mov
stos
mov
add
scas
add
enter
orl
cmp
xchg
dec
repz
add
xchg
lret
in
ret
pop
bound
ret
int
inc
and
leave
rcr
and
pop
dec
mov
pushf
fdecstp
test
add
test
ret
sarl
aas
out
ret
sbb
mov
dec
xchg
dec
fcomp
stos
outsb
outsb
ljmp
push
enter
lret
xor
loope
jne
loop
or
int3
shlb
loope
mov
mov
loop
rorl
jmp
xlat
sti
jbe
push
mov
aaa
in
stos
lret
icebp
enter
dec
rcl
jns
dec
cmpsl
insl
fucomp
mov
cmp
sbb
jnp
pop
push
xor
ret
leave
stos
mov
enter
cltd
and
jecxz
push
mov
int
lock
popa
repz
fwait
pop
insb
inc
cmp
js
repnz
and
shr
sbb
dec
adc
call
dec
jbe
push
popf
orl
mov
fistpll
arpl
push
dec
xor
int3
jmp
cmp
jecxz
fstpl
and
inc
add
sbb
popf
rolb
mov
shr
leave
test
aad
or
push
enter
int
or
rorb
mov
mov
inc
call
jno
and
mov
insl
cmp
push
jbe
iret
pop
out
movsb
fistpl
pop
pop
pop
jmp
lds
xchg
adc
fnsave
enter
ljmp
xlat
inc
add
dec
shll
mov
push
imull
mov
and
out
ret
cs
enter
shll
mov
push
das
jecxz
lock
mov
gs
jle
cmp
push
add
or
dec
mov
jl
jecxz
mov
fwait
and
aaa
add
imul
cmp
cli
cld
lea
es
sbbb
mov
xchg
test
cs
adc
adc
aas
and
or
adc
cmp
loope
cs
jmp
clc
in
lods
add
mov
dec
or
sbb
shrb
aam
pushl
leave
stos
lcall
pop
fsubrl
dec
fidivs
push
int
loope
pop
mov
leave
fwait
orl
mov
mov
test
cmp
shl
je
ret
sbb
push
outsb
jno
dec
cmpsb
jo
xchg
mov
mov
int
pop
or
push
or
icebp
push
lea
nop
mov
sahf
popa
lds
or
dec
adc
ret
adc
mov
xchg
cmp
aad
jmp
cli
sbb
xchg
test
test
data16
addr16
mov
inc
icebp
out
imul
int3
icebp
xor
daa
shrl
je
pop
fidivl
ret
sub
out
push
mov
jg
or
push
pop
lea
ljmp
add
hlt
adc
outsl
imul
and
push
fsubrl
and
xor
aas
shl
mov
cmpsl
dec
mov
adc
cmp
or
push
dec
lret
repnz
xor
dec
and
rcl
dec
sbb
jnp
lret
add
int
jo
loope
mov
and
daa
dec
loope
repz
pop
loope
bnd
cltd
movsb
inc
cmp
jecxz
mov
and
lret
in
popa
push
int3
sbb
cli
imul
and
mov
jecxz
mov
out
xchg
into
jmp
jbe
mov
jle
inc
gs
pushf
cmc
xchg
test
pusha
fmull
mov
fcmove
dec
fsubl
arpl
or
or
mov
push
mov
mov
aam
in
adc
scas
or
dec
jnp
sub
jne
jae
cltd
fisttpl
rdmsr
test
movsb
daa
jo
pop
std
nop
faddp
std
jl
rcr
int
mov
leave
xor
push
mov
push
xor
mov
cltd
movsl
cmp
aas
or
push
icebp
fwait
lds
push
int
and
divl
rorl
or
sahf
test
imul
or
mov
lret
lahf
test
push
add
pcmpgtd
bound
addr16
sarl
xchg
xor
jg
div
stc
mov
popf
es
xchg
or
ja
jne
clc
int3
or
mov
ljmp
mov
xor
cmpsb
cwtl
inc
cmp
and
fisttpll
cwtl
mov
push
shll
test
xor
lret
fisubs
cwtl
mov
mov
repnz
lods
filds
cmp
test
ret
and
mov
ljmp
std
adc
xchg
test
jl
rorb
mov
or
push
pushl
arpl
popa
mov
inc
jo
jnp
popa
js
add
inc
xchg
repz
adc
add
xchg
lcall
in
rcll
je
lret
out
testb
jno
call
fisttps
divl
stos
out
mov
push
dec
hlt
pusha
leave
or
lret
cli
mov
nop
mov
shl
aaa
xchg
in
in
sub
ret
inc
fistl
inc
scas
xor
aam
jne
cwtl
leave
inc
fmuls
aad
or
mov
sbb
mov
hlt
mov
dec
pop
mov
pop
test
imul
adc
movsb
mov
jg
stos
adc
mov
and
insb
mov
lret
or
mov
mov
out
in
int
fsub
dec
idiv
arpl
cmp
pop
adc
mull
sub
lret
sub
leave
mov
aaa
fwait
cmp
jge
lock
xor
mov
push
or
ret
and
cs
dec
or
mov
std
add
repnz
fdivrl
mov
cwtl
mov
shll
adc
mov
and
cmp
ljmp
mov
cmpsb
lret
into
mov
iret
jecxz
lods
adc
xor
jg
leave
popf
mov
pop
mov
mov
rorl
mov
dec
pop
ret
in
nop
rcll
sub
push
aas
adc
lret
sub
roll
mov
jge
or
ror
sub
cmpsl
jecxz
repz
jmp
or
ret
dec
fs
mov
and
dec
pop
fmul
sar
lds
add
ret
movb
jne
repnz
push
test
or
pop
out
test
pop
insb
loop
movsl
push
inc
aas
mov
dec
pop
or
paddq
shl
add
adc
popa
xchg
outsl
jne
or
and
jp
loopne
test
pop
sbb
popf
jecxz
xor
dec
mov
jmp
std
das
pushl
cmp
movq
fcmove
mov
hlt
repz
dec
clc
lret
daa
ja
adc
testb
and
repz
testl
insl
into
push
in
pop
pop
add
push
jl
xchg
rcrl
push
loop
and
dec
push
sub
push
enter
popf
mov
or
mov
lea
sbb
std
mov
ret
mov
mov
or
xchg
call
pop
sti
mov
das
dec
or
addr16
in
stos
mov
or
dec
popa
outsl
and
push
mov
push
xchg
pop
movsl
bound
rorb
aaa
jne
xlat
and
cli
push
jecxz
call
dec
jb
push
ss
fmull
jns
adc
dec
leave
xor
pop
pop
or
ret
cmp
and
fistl
xor
roll
lods
ret
pop
in
xchg
int
mov
shlb
sub
and
fcomi
getsec
adc
loop
out
rcrl
jmp
mov
or
mov
cs
test
or
hlt
cli
int3
sti
stc
adc
out
loope
les
enter
mov
sub
stos
mov
rcl
pop
je
test
pop
test
aas
pop
mov
pop
fdivr
sbb
enter
pop
push
or
add
push
mov
nop
and
out
push
or
mov
shl
idiv
andb
mov
jae
push
mov
shlb
loop
mov
mov
mov
bound
mov
adc
and
jecxz
stos
gs
mov
dec
jo
fmulp
stos
pop
lods
aad
mov
mov
xor
inc
pcmpgtb
cmpsl
dec
xchg
ret
adc
add
xchg
call
repnz
mov
mov
leave
adc
dec
mov
mov
or
test
jo
mov
or
mov
and
and
int
inc
inc
lock
inc
dec
aam
mov
adcb
int3
adc
out
mov
xchg
jae
jae
or
xlat
insb
jl
out
sbb
or
mov
push
pop
pop
test
nop
sbb
sub
push
mov
clc
jnp
push
jmp
ds
pop
xchg
or
push
test
xor
adc
ret
rcrb
jnp
mov
mov
ja
xor
shrd
or
js
shlb
jecxz
or
ret
and
mov
movsb
or
push
repz
dec
aam
call
and
ret
dec
movsl
add
out
mov
sbb
pop
lods
jne
cmp
sbb
cs
push
jns
cmp
add
shll
clc
movsb
jb
lret
cmp
push
cltd
test
push
adc
mov
repnz
xchg
mov
mov
out
aas
test
movsl
mov
mov
xor
jp
mov
jl
and
jbe
test
enter
arpl
and
sti
sbb
subb
sub
decb
jle
cli
mov
xorb
test
scas
sub
mov
inc
xchg
repz
mov
cmp
sbb
mov
sbb
mov
mov
sahf
xor
xchg
lea
call
dec
rcrl
test
jmp
stc
jb
pop
dec
mov
lahf
call
nop
xor
es
mov
mov
jb
pop
lret
mov
lds
push
leavew
jmp
aam
lcall
xchg
andl
jo
das
mov
add
icebp
mov
pop
jne
mov
xchg
adc
ds
xlat
ja
fdivl
add
rcrb
or
stc
insl
aam
js
daa
mov
daa
xchg
pop
aas
push
movsb
and
gs
loopne
adcl
dec
or
test
mov
scas
mov
enter
cld
mov
enter
lods
adc
test
int
jne
and
ret
test
data16
push
aam
push
mov
sub
movsl
dec
mov
mov
cmp
jo
loop
add
ljmp
mov
mov
into
push
aad
stos
mov
shl
test
dec
mov
and
inc
cmpsl
shll
mov
insl
adc
lock
ja
xchg
mov
dec
xlat
aam
jbe
rcl
idivl
dec
dec
and
and
aaa
lret
and
icebp
xchg
and
pop
int
outsb
mov
and
mov
je
movsb
sti
nop
sarl
sti
jno
leave
aad
dec
push
iret
mov
adc
jno
scas
mov
shll
ret
mov
jecxz
rcll
lret
cld
fildl
push
or
pop
cmpsb
mov
leave
mov
and
dec
or
and
xor
stc
lods
mov
lret
ret
out
add
jg
jb
out
sub
ss
sub
mov
int3
sub
mov
jnp
mov
outsb
iret
mov
push
stos
lds
outsl
mov
fcmove
or
enter
and
sub
outsl
mov
pop
arpl
sahf
or
stos
xchg
aam
std
or
loope
int
decl
pop
pop
pushf
ret
add
xor
xor
mov
pop
das
dec
or
xor
popl
push
cmc
or
inc
mov
out
test
mov
in
test
pushf
clc
stc
inc
leave
sbb
flds
mov
jle
xchg
outsl
and
dec
xchg
dec
mov
jecxz
xor
popf
xor
mov
mull
stos
in
jg
cli
jg
jbe
cwtl
cs
jo
je
xchg
pop
xlat
adc
dec
pop
adcl
insl
scas
jl
loopne
adc
cli
cmp
cmpsb
loopne
xor
int
lret
mov
xchg
pop
pop
test
aad
repz
add
push
adc
mov
inc
mov
push
fldpi
mov
push
cmpsb
pop
cmpl
inc
ret
push
sub
xchg
dec
fs
int3
rorl
pop
notl
enter
aas
push
lret
mov
mov
test
into
dec
or
lods
mov
xchg
in
mov
fisttpll
call
jecxz
ret
mov
add
mov
jle
cmpsl
push
push
pusha
addl
xor
add
cmp
ljmp
ds
cmpsb
mov
stos
jecxz
cmp
call
test
add
mov
sub
test
push
rcrl
call
mov
clc
cmc
and
pop
pop
testl
or
test
sub
xor
add
xchg
sbb
or
fadds
arpl
cld
mov
pop
inc
cli
add
inc
test
mov
aam
into
inc
kaddw
push
int3
aas
xchg
xor
inc
les
mov
dec
les
and
sub
adc
ficoml
push
into
fnstenv
ret
ljmp
push
test
fmull
mov
dec
in
push
pop
inc
int3
sub
jle
xchg
repnz
loopne
loop
xor
or
xchg
xchg
jmp
lret
mov
fbstp
ror
shll
dec
xor
call
imul
dec
lock
jno
mov
and
insl
popa
push
shlb
out
ljmp
xor
test
out
and
jl
ja
mov
push
fst
ds
pop
adc
out
lods
jg
lahf
pop
fnstcw
sub
or
sbb
mov
pop
fldenv
dec
cmpsl
leave
loopne
imul
loope
mov
mov
mov
or
sbb
ljmp
xchg
clc
ds
mov
stos
scas
sub
mov
or
mov
insl
out
xor
shll
arpl
jmp
call
adc
mov
push
dec
pop
cmp
les
xor
dec
push
jb
loop
scas
sarb
rcl
jecxz
lds
or
lcall
mov
mov
pop
mov
and
mov
cmc
clc
sbb
lods
sbb
mov
fcomp
int
cltd
les
or
inc
lea
fldenv
cmpsl
fiaddl
pop
mov
test
mov
mov
faddl
lods
jmp
fcmovbe
stos
aad
lret
stos
vpcmpeqb
out
or
iret
mov
adc
je
xlat
add
add
rcrb
pop
aaa
and
cmc
pop
push
push
ret
fiaddl
jle
loop
adc
les
shrl
std
stos
pushf
adc
add
push
mov
das
dec
mov
lret
cmc
cmc
cmp
sbb
or
lret
faddl
mov
jle
mov
data16
mov
cmp
mov
cmp
mov
roll
aad
imul
xor
stc
and
mov
aam
jo
cmp
into
rcll
test
sub
hlt
roll
out
cmp
dec
lds
or
adc
insb
dec
aaa
sub
push
lret
inc
xorb
sub
repnz
jo
loope
sub
mov
mov
pop
ss
push
mov
and
add
ds
dec
mov
ljmp
mov
aad
loope
fnstenv
xor
dec
addr16
adc
cli
aas
shll
test
mov
outsl
enter
or
push
dec
mov
icebp
cmp
leave
mov
ljmp
and
mov
int
bound
xor
add
ljmp
pop
fucomip
cmc
xchg
cmp
int3
mov
sbb
or
ret
cmp
ret
mov
test
mov
mov
or
and
lock
push
cmp
push
mov
aaa
pop
and
call
jmp
lcall
push
int
sub
mov
xor
push
int
shlb
mov
rol
ret
dec
jnp
or
push
pop
imul
cmpsb
loop
ror
leave
outsl
lds
lret
sub
sbb
cmpl
out
and
popa
add
inc
and
sbb
adc
mov
sub
sbb
leave
mov
hlt
rcll
add
in
leave
sbb
mov
dec
cmpb
jbe
cmp
lret
push
inc
adc
decl
lds
leave
or
xchg
stc
push
jbe
sti
jnp
mov
xor
ds
out
lahf
lret
stos
or
das
push
sbb
les
sbb
sub
inc
add
cmc
cmp
or
dec
fcompl
aad
leave
mov
shll
xor
jnp
dec
mov
push
fsubl
adc
int3
mov
lret
test
in
adc
es
dec
push
and
and
mov
cmp
pop
add
xor
mov
rcrb
jno
cli
mull
adc
mov
aam
into
rorb
inc
sbb
push
shll
lds
pop
jg
sahf
enter
clc
cmp
jno
xorl
ret
lret
data16
shlb
lea
push
loope
ret
push
mov
mov
pop
sub
or
inc
mov
mov
cmp
enter
ds
ss
jmp
pop
sbb
mov
test
iret
ljmp
mov
popa
and
notl
mov
rorb
pop
out
fmulp
push
movsb
dec
sarb
mov
mov
rcll
push
pop
or
out
ficomps
cltd
add
adcb
cmp
jne
fisttpl
cmp
clc
xlat
push
icebp
adc
repz
mov
adc
xchg
shrl
pop
sub
jnp
sbb
mov
pop
or
in
mov
test
push
sbb
mov
mov
jge
xor
repnz
lds
push
xor
push
mov
sbb
ret
rclb
cli
jo
add
mov
xor
xchg
or
packssdw
jg
dec
in
push
cmc
out
xor
mov
orl
mov
je
int
shll
cmp
sbb
xlat
pop
xchg
fdivs
mov
or
and
cltd
test
ljmp
xchg
rorb
cs
mov
sub
hlt
ret
punpcklbw
inc
pop
movsl
iret
ficompl
cmpsb
push
leave
sbb
shrl
cmp
jle
and
mov
jb
stos
or
push
pop
xor
xchg
das
mov
dec
mov
or
movsb
cwtl
inc
sub
pushf
insb
sbb
mov
pop
mov
nop
inc
shrl
push
stos
adc
fildll
cld
aad
mov
jno
sbb
movsl
loop
movsl
cmpsl
aam
cmp
sbb
add
aad
mov
sbb
aad
fs
es
push
and
mov
out
pusha
fwait
mov
ljmp
dec
fsubrl
jno
std
cli
cltd
ret
ds
ljmp
hlt
daa
push
ret
outsl
in
or
int
aad
inc
or
rcrl
test
idiv
daa
fiadds
loopne
sub
shrl
es
mov
out
fisubrs
aam
sbb
mov
ja
jge
jo
pop
stc
ds
inc
pop
ret
pusha
dec
adc
loope
and
icebp
stos
int3
jle
in
add
pop
jb
pop
xor
lret
leave
aad
and
jle
loopne
adc
cltd
and
pop
pop
push
inc
pop
xor
mov
sub
in
push
jge
popa
test
fs
xor
int
xor
aad
pop
in
inc
xor
inc
fistps
or
pop
or
mov
aas
mov
mov
loope
cmp
fisubs
push
push
dec
adc
jg
lock
mov
loope
dec
shl
mov
and
sbb
fldenv
add
test
cmp
pushf
mov
stos
movsb
mov
fnstcw
lret
das
sub
add
cli
jg
cmp
pop
inc
push
pop
dec
test
sbb
cltd
in
and
mov
repnz
test
test
and
pushf
dec
mov
dec
es
push
dec
jle
add
pusha
jae
fisttpl
adc
inc
add
test
mov
arpl
jo
lret
in
fucomp
xchg
pop
ret
adc
xor
sbb
inc
and
xor
js
std
enter
jle
nop
jnp
pop
std
test
xor
mov
mov
pop
cmp
jecxz
or
mov
sbb
xor
lret
repnz
jmp
push
mov
mov
fdivl
stos
fmulp
cwtl
lret
dec
int
dec
icebp
enter
test
sahf
lret
mov
leave
pop
into
push
sbb
cli
jle
loopne
hlt
roll
pop
push
or
jo
ljmp
pop
xchg
cwtl
push
mov
and
sub
stos
mov
jp
adc
xchg
cmpsb
dec
mov
mov
movsl
sbb
or
mov
adc
lret
imul
fsubrl
add
dec
adc
dec
sbb
ja
mov
mov
or
cli
xor
mov
jg
test
test
pushl
ret
and
or
nop
ret
es
mov
cli
popa
fcomps
pop
and
dec
or
or
lods
mov
pusha
mov
mov
and
push
jns
xorps
cmpsb
xor
scas
enter
pusha
mov
sarb
sti
shll
jbe
not
ret
into
aas
mov
outsl
hlt
mov
lock
fstl
dec
adc
into
imul
test
fimull
fildl
inc
mov
push
movb
into
mov
xor
ja
enter
pop
sbb
cmp
in
dec
cmp
fstpt
push
dec
leave
dec
sub
lock
fsubr
mov
fdivs
mov
sar
mov
stc
sbb
and
sti
xorb
fistpll
and
icebp
jle
mov
xchg
imul
loopne
cmp
pop
roll
fldenv
xor
aaa
jle
sub
xchg
test
cmp
aam
or
enter
inc
dec
xlat
test
out
mov
dec
mov
cwtl
and
add
std
push
repz
dec
lcall
lock
sarl
inc
inc
andb
dec
in
sbb
insl
or
dec
xchg
aam
adc
jb
jmp
cmp
push
inc
adc
xor
das
sub
mov
or
movl
mulb
lods
sbb
xchg
and
push
jno
or
mov
mov
mov
sub
inc
mov
mov
mov
bound
out
imul
iret
inc
ss
lret
test
fcompl
lahf
int3
mov
mov
sbb
repnz
cmp
xchg
jnp
sbb
inc
sbb
sbb
xchg
adc
sarl
into
loop
and
iret
aas
inc
mov
int3
and
imulb
inc
mov
lret
es
shlb
mov
lret
clc
ds
cmpsl
test
loopne
sti
xchg
mov
fbstp
xor
and
decb
test
mov
in
xor
in
stos
push
ljmp
pop
mov
mov
aas
outsl
aad
outsb
push
sub
lret
in
imul
mov
into
dec
dec
mov
fxtract
aas
ret
mov
rcr
cmp
push
dec
xchg
aaa
sub
mov
mov
lret
push
fnstenv
ds
scas
loopne
sbb
pop
int3
inc
fs
pop
fidivrl
mov
sarb
mov
push
icebp
mov
lods
insb
imul
in
fsubs
enter
inc
xor
push
ret
subl
inc
jmp
pop
lret
push
push
sbb
jle
popf
and
insb
scas
stos
not
jmp
dec
xchg
fucom
shl
dec
test
ror
test
pop
in
ret
cmc
mov
sub
adc
dec
stos
sub
mov
pop
dec
aad
mov
mov
leave
jecxz
adc
xchg
inc
mov
stos
dec
insl
imul
stos
lret
fld1
cmp
popa
insb
mov
push
test
mov
cmc
stos
jo
testl
fwait
mov
lds
adc
or
pop
dec
leave
xor
lret
cmp
pop
xor
test
or
sahf
cmp
dec
ficompl
daa
push
mov
stos
addr16
pop
mov
mov
jb,pt
jg
add
es
je
mov
fldl
fwait
cltd
jecxz
mov
out
sub
sbb
lock
jp
cmp
mov
in
cmp
mov
mov
push
iret
popf
xchg
sbb
mov
or
jl
pop
int
push
adc
aam
aaa
mov
mov
xchg
int
rcr
popf
mov
jo
cld
or
sbb
cmpsb
pop
ret
xchg
xchg
negl
push
xorl
mov
stos
pop
cld
popa
andl
pop
in
mov
dec
cmp
inc
jae
ja
mov
aad
adc
inc
push
push
lret
inc
repz
les
xorl
jno
push
dec
clc
and
xchg
lock
inc
jecxz
pop
rol
loop
jmp
cli
fdivrs
enter
roll
mov
cmc
mov
leave
or
cmc
pop
pop
dec
test
cli
ljmp
and
sbbb
jo
dec
mov
stc
dec
cmc
cmp
cwtl
lea
aam
and
sub
cmp
es
je
push
inc
aas
mov
xchg
pop
add
insl
inc
dec
mov
ljmp
adc
dec
and
dec
leave
sbb
mov
mov
mov
add
jge
daa
sbb
mov
icebp
in
adc
fsubrs
jo
jecxz
cld
mov
sbb
push
fdiv
int
or
lcall
xchg
adc
aas
mov
adc
loopnew
addr16
cld
stc
test
test
iret
xor
and
or
dec
neg
inc
mov
dec
pop
mov
or
or
sub
pop
push
and
out
add
xor
adc
push
xchg
in
and
cmc
loope
sti
mov
jae
aad
sbb
shr
hlt
and
xchg
jne
lret
outsb
mov
xor
cmpsl
xor
and
pop
iret
dec
loope
aad
mov
enter
shrb
fwait
in
cmp
add
fmuls
add
or
or
mov
xor
aam
mov
push
dec
das
ret
mov
jmp
in
and
pop
sub
cmp
imul
sarl
ret
sbb
mov
mov
lods
roll
int
mov
arpl
enter
lret
fucom
push
fcmovne
shlb
sub
xchg
xchg
xchg
mov
cmp
inc
xor
leave
jo
or
iret
add
mov
lods
jle
adc
or
mov
aam
jns
dec
enter
dec
lds
dec
cmp
lds
ljmp
cmc
adc
ljmp
leave
iret
push
mov
loope
mov
add
xor
jbe
lret
mov
dec
ficomps
cli
push
mov
mov
je
addr16
fldcw
inc
push
enter
jp
addr16
jne
xor
mov
lret
xor
bound
in
aad
mov
subl
icebp
add
test
inc
ret
mov
adc
mov
test
rcl
sar
add
in
push
mov
repz
into
jge
push
jnp
fwait
mov
insb
repz
add
or
jcxz
je
inc
in
mov
mov
mov
mov
mov
out
ret
pop
cmp
std
lret
test
mov
dec
mov
mov
add
mov
push
add
push
inc
in
sahf
inc
clc
adc
add
popa
jmp
call
rolb
lret
loopne
inc
rcl
imul
sub
add
xchg
add
lahf
xchg
loope
or
sbb
imul
cmp
icebp
cli
mov
int
push
mov
mov
add
into
lods
cmp
xor
ret
std
or
outsl
ficoml
fs
fimuls
or
dec
jecxz
hlt
icebp
repnz
sbb
adc
mov
pop
ja
mov
repnz
mov
bound
add
testb
in
lock
mov
sbb
dec
dec
into
repnz
cmc
loopne
mov
call
lret
cs
stos
mov
stc
in
push
mov
sub
lret
and
dec
inc
into
xor
push
jge
sbb
and
icebp
xchg
fbstp
dec
push
cmp
das
jnp
add
jp
mov
pushf
jno
jno
or
popf
sbb
add
rcr
fwait
insb
ret
sub
mov
cmc
and
aaa
pop
add
repnz
inc
lods
pop
ret
shll
or
or
clc
sub
outsb
mov
add
mov
loope
and
loope
mov
sbb
aam
mov
push
sub
push
mov
aas
jmp
xor
sbb
movl
enter
std
sub
and
add
mov
and
pop
xor
stos
sub
sbbb
mov
mov
mov
jae
xchg
mov
dec
pop
cmpsl
loope
xchg
inc
dec
pop
ljmp
fs
sti
mov
mov
xor
mov
cli
pop
movsb
outsb
into
leave
idivl
mov
icebp
dec
mov
mov
into
rolb
inc
pop
jb
rorb
inc
mov
lods
cmp
jb
jb
nop
pop
lock
dec
lret
or
xchg
cmp
cmp
ss
and
sub
lret
jge
jbe
int3
add
jmp
in
dec
push
lds
sbb
add
outsl
add
mov
add
jmp
xchg
mov
mov
stc
push
mov
mov
dec
or
hlt
pop
jg
icebp
jae
divl
or
mov
leave
insb
test
shr
fdivl
inc
pop
jle
fsubrs
xchg
in
xor
test
fiadds
add
clc
mov
push
and
stos
faddl
cmp
or
push
push
adc
arpl
cwtl
mov
xor
mov
or
push
enter
pop
mov
or
and
data16
mov
pop
pop
stos
dec
pop
mov
lret
lret
mov
and
dec
pop
sub
jge
mov
jbe
mov
dec
aad
ret
out
movsb
adc
push
adc
nop
mov
pop
add
pop
add
xorb
cmc
shll
mov
lock
cli
mov
cmp
into
pop
or
adc
inc
pop
lret
sbb
add
inc
in
cmp
gs
hlt
mov
or
mov
dec
or
sbb
mov
pop
mov
lcall
jae
idiv
adc
mov
icebp
aaa
cli
jbe
mov
push
and
mov
into
and
jp
sbb
cltd
stc
jecxz
das
mov
dec
popl
iret
push
loop
ja
lret
add
ret
nop
mov
cltd
sbb
loope
repnz
dec
scas
es
loopne
fisubs
dec
jge
mov
shl
jge
cmp
adc
adc
mov
test
lret
or
test
stos
out
adcb
add
mov
pop
loope
sti
test
push
dec
fmul
ja
fdivrs
pop
icebp
pop
mov
int
push
or
rol
psllw
dec
ret
mov
leave
daa
add
jl
mov
dec
cmp
push
dec
mov
in
sub
int3
sbb
out
mov
rcrl
pop
lahf
jg
pop
into
sub
xor
leave
rclb
xchg
std
mov
and
mov
push
clc
insl
jp
push
mov
push
imul
stos
mov
xchg
ljmp
mov
inc
jns
pushl
adc
jnp
je
mov
cmp
cmpsb
pop
rcr
fs
insl
mov
xor
dec
pop
shlb
push
add
xchg
lea
xchg
rcll
test
stos
aad
or
mov
xor
mov
stos
sub
int
andl
adc
fldt
xor
aas
stc
xor
add
dec
leave
mov
mov
loope
mov
loop
jns
xor
mov
cmpsb
mov
sub
lods
stos
imull
and
dec
jno
xor
cli
lret
out
sub
fcmovnu
into
push
ror
cltd
fsubrl
pop
cmp
dec
gs
and
mov
xorb
sub
and
shr
inc
mov
nop
into
data16
or
sub
or
or
adc
mov
psllw
add
fsubrl
mov
cmp
push
gs
lods
jge
mov
enter
cltd
push
or
test
icebp
pop
xor
fstpt
cli
not
fsubr
mov
jb
cmpsl
lcall
rclb
add
ds
test
test
sarl
les
test
mov
jl
or
xchg
cli
mov
xchg
ror
ffree
sbb
xchg
gs
enter
xchg
shll
ret
out
les
mov
add
mov
aas
add
push
mov
and
push
iret
ret
push
in
or
stos
mov
or
leave
pop
je
adc
dec
inc
mov
mov
das
xchg
ffreep
dec
lret
scas
addr16
dec
or
in
xor
and
push
pop
mov
or
icebp
iret
pop
mov
jb
arpl
add
fnstenv
adc
xor
and
mov
movsl
or
fnsave
adc
call
xor
and
in
lods
pop
clc
jl
dec
xlat
test
imul
mov
xor
cld
aad
lds
dec
leave
and
lock
ds
insb
jb
mov
fsubrs
push
stos
sti
dec
or
xchg
add
adc
mov
in
clc
ficomps
pushf
lret
dec
int3
test
sbb
cmpsl
aas
inc
roll
fadd
clc
repnz
rolb
mov
adc
sub
shrl
cmc
mov
xor
pop
or
ja
jmp
movsb
ja
aam
movsl
add
iret
fldcw
adc
outsb
jo
mov
and
test
and
mov
pop
mov
sub
addb
fstpt
int
sbb
pop
adc
pop
lods
xor
xchg
xor
je
shrb
ror
push
fucomip
ds
mov
clc
movl
data16
and
mov
rclb
jmp
dec
or
shrd
inc
nop
stc
inc
mov
dec
xchg
mov
adc
lret
and
repz
daa
or
psubusb
fadds
xchg
push
test
sbbb
pushf
shll
xchg
jge
lahf
sub
push
dec
and
cmp
mov
in
shll
xchg
mov
fistps
sahf
cmpb
int
jbe
xchg
ret
stc
jae
out
jp
repz
dec
and
jp
sub
push
out
movb
inc
mov
mov
pop
push
xor
iret
and
jno
and
pushl
std
scas
jae
in
ret
jmp
out
cmpsl
jae
pushf
xchg
dec
out
and
mov
imul
insb
mov
test
sbb
nop
shlb
lods
pop
mov
cltd
mov
lret
out
mov
movsl
lods
dec
and
out
jecxz
sub
sar
sbb
push
cmp
jns
aaa
push
in
int
inc
rorl
cld
and
sbb
or
popa
mov
push
mov
mov
lret
xlat
clc
int
cmpsb
mov
inc
mov
push
cli
int3
ror
into
push
and
mov
in
inc
movsl
jns
inc
ja
out
pop
inc
jecxz
pop
cmp
jbe
ljmp
ds
add
movsl
adc
xlat
lret
movsb
shl
lret
cmpsl
xor
push
out
adc
int
cmp
or
in
bound
lods
fsubl
fdivrp
ljmp
iret
cltd
dec
ret
sbb
shl
push
repz
add
or
aad
jne
jno
xchg
xor
cmpsb
xchg
imul
dec
jg
cmp
sbb
movsb
dec
lret
xchg
mov
test
pop
mov
dec
cmc
stc
xor
and
xor
mov
mov
int
inc
push
rcrl
adc
jno
cwtl
iret
dec
hlt
cmp
mov
jle
jge
leave
mov
test
mov
cmp
xor
mov
mov
cmc
lods
gs
les
sbb
and
je
cwtl
stos
mov
inc
nop
push
sbb
popf
inc
pop
shll
mov
xchg
jne
gs
cs
sbb
out
xor
mov
adc
fsubl
stos
lret
orl
push
movl
mov
loopne
push
mov
pop
xchg
pushf
pop
pop
fnstcw
inc
lahf
test
add
xor
cmp
filds
ret
loopne
xchg
xchg
mov
daa
mov
outsl
ja
ljmp
and
into
jb
lret
or
int
rcll
add
jge
inc
dec
fs
pop
mov
add
mov
inc
call
add
js
decl
out
movsl
push
jecxz
stos
jns
sbb
daa
shlb
rolb
pushf
imul
mov
cli
add
dec
in
and
mov
push
in
lret
cmp
mov
shl
pop
pop
jnp
adc
jns
repz
jno
push
add
repz
ror
pop
cld
add
dec
add
mov
rcll
sbb
cmp
cmp
jae
or
cli
or
mov
inc
aam
mov
je
mov
mov
push
mov
or
mov
push
mov
mov
fwait
ret
test
cmpsl
jns
adc
xor
jnp
push
popa
and
push
int3
mov
lcall
mov
sar
and
fidivs
inc
add
clc
pushf
xor
call
xchg
mov
inc
pop
sbb
stos
xchg
movsl
jne
shl
sbb
stos
nop
popa
cmc
xor
and
rcl
rcl
fisttpll
enter
std
mov
sub
adc
sbb
mov
jbe
inc
hlt
push
out
in
stos
sbb
or
aaa
test
jle
outsl
hlt
pusha
jecxz
xor
xor
mov
sahf
subl
mov
mov
enter
cmp
loopne
lret
adc
repz
add
pop
mulb
cmp
cmp
sub
sbb
ljmp
inc
roll
in
cmpl
mov
mov
in
shl
sahf
fimull
ret
rolb
pop
push
or
pushf
leave
adc
test
cli
in
and
lret
and
xlat
adc
fst
and
jns
cmp
cmp
aad
adc
fildll
mov
add
imull
mov
xlat
fdivs
push
pop
rorl
and
or
mov
mov
dec
lcall
mov
retw
loopne
test
xor
dec
xor
push
dec
push
mov
arpl
jne
loop
jle
dec
push
movsl
jb
ficoms
jb
pushf
jb
pop
fst
add
mov
jg
leave
mov
loopne
push
cmc
jmp
stos
stos
jecxz
out
jg
jl
imul
jecxz
inc
shlb
sub
cmp
ja
pop
mov
cmp
repnz
inc
lret
xchg
std
jmp
insl
adc
ljmp
js
inc
jle
test
jecxz
jg
lahf
mov
mov
and
ret
leave
sbb
sbb
add
dec
sub
xchg
loop
adc
mov
dec
call
push
push
xor
xlat
mov
test
mov
sti
addr16
int3
fldt
mov
sar
xor
pop
and
jo
mov
movsb
jge
lcall
lock
sbb
xor
xor
fildl
jge
enter
daa
pop
aam
sbb
dec
cmp
and
rcr
sarb
xor
dec
pop
subb
les
jmp
stos
push
mov
stc
or
jmp
aaa
insl
jae
sbb
add
mov
mov
icebp
in
test
iret
arpl
imul
test
mov
and
dec
add
sahf
std
jge
dec
aaa
pop
pop
loope
xlat
mov
enter
dec
pop
movsl
icebp
mov
mov
int3
int
cmp
cmp
dec
in
add
sarb
fcoml
int3
sbb
jecxz
loope
ret
adc
lret
inc
inc
fnstcw
push
fdivp
inc
icebp
cltd
notl
push
int
pop
mov
into
add
pop
out
dec
jmp
mov
insb
leave
arpl
dec
mov
add
xchg
shll
sub
icebp
add
sbb
sarl
repz
aam
sub
ja
mov
add
pop
mov
fst
fcmovnbe
or
scas
daa
cmp
pshufw
mov
mov
movsl
mov
push
dec
xor
test
adc
cli
pop
pop
rcll
ret
arpl
sub
push
imul
jo
push
bound
insl
adc
icebp
insl
stos
outsb
xor
mov
fldcw
jb
xor
xor
pop
test
repnz
mov
xor
adc
pushf
lds
sbb
push
pop
or
sbb
popf
push
inc
lret
iret
pop
and
push
sbb
movsl
and
mov
pop
inc
and
xor
cmpsl
xor
xor
lods
outsb
adc
lock
jne
mov
sub
cld
sub
mov
or
dec
dec
out
jmp
test
sbb
aad
mov
inc
and
jle
je
cmp
repnz
xor
add
iret
lock
cmp
outsl
fneni(8087
ret
adc
fstl
cld
ret
lock
mov
shlb
fldl
mul
rclb
jae
fxch
fimull
popa
xor
sub
push
xor
rol
xchg
lret
neg
cmc
add
inc
mov
loop
add
pusha
in
push
pop
sbb
ret
jb
test
pop
cmp
ret
or
cmpl
ror
test
push
add
pop
add
jl
push
lret
rcll
and
mov
mov
repz
or
into
insl
aaa
inc
popf
adc
xchg
rcrb
xchg
dec
add
lret
into
orl
inc
push
pop
mov
nop
aad
rclb
aad
or
loopne
add
adc
or
not
test
ja
dec
test
mov
sbb
movsb
icebp
mov
mov
lret
aad
dec
aad
imul
test
icebp
mov
sbb
repnz
call
sbb
test
xchg
aas
jns
adc
roll
jo
in
inc
jge
adc
sbb
leave
std
mov
cli
movsb
cmc
aad
sbb
mov
shll
xor
fisttpll
mov
in
in
enter
leave
in
fwait
sub
aad
sti
test
cmpsb
or
in
pop
jo
in
in
push
sub
nop
aaa
mov
and
ljmp
pusha
aad
push
scas
repz
int3
pop
xor
and
mov
mov
std
fucom
xlat
jmp
jns
dec
mov
mov
mov
sub
adcb
adc
lock
mov
lock
dec
push
and
in
inc
fsts
or
std
or
pop
in
xor
cli
fidivrs
in
in
sub
jno
into
push
lea
cmc
mov
pop
shlb
xor
sarl
lds
icebp
cmp
xchg
mov
nop
jb
mov
rcl
jns
inc
dec
pushf
mov
mov
ror
es
jno
shll
dec
xor
and
jne
sub
in
or
dec
and
dec
enter
and
push
mov
xor
inc
pop
repnz
cmp
out
jne
aam
jbe
data16
aaa
in
out
or
nop
xor
rcrl
or
xor
xor
inc
lahf
lds
inc
cltd
xor
fucomip
or
and
jge
or
xor
sbb
cmp
pop
inc
lods
cld
push
inc
and
jnp
or
jmp
into
ja
lret
mov
xorl
int
or
mov
shlb
sbbl
fwait
pop
bsr
aam
mov
jns,pt
lcall
mov
sub
mov
stos
in
xor
inc
add
leave
dec
mov
icebp
aas
mov
pop
int
xchg
and
pop
pop
sbb
xchg
bound
ret
sub
in
jmp
adc
lds
inc
inc
add
jb
adc
inc
push
in
cwtl
test
inc
jmp
enter
rcr
push
dec
cwtl
lea
mov
mov
cmpsl
inc
mov
mov
adc
push
int
sbb
out
ret
and
pop
sub
dec
pxor
aam
rcll
int
outsb
fdivrs
sbb
cmpsl
mov
pop
push
lods
pop
jmp
shr
and
popf
stos
lds
subl
rol
mov
ret
push
iret
cltd
xchg
ret
jecxz
int
xchg
in
repz
outsb
leave
testb
repz
cmp
icebp
dec
repz
or
jne
mov
xlat
vunpcklpd
jnp
adc
rorl
outsb
rcll
shll
fs
mov
int3
sbb
push
add
mov
mov
insl
fistpl
push
scas
out
loope
test
aad
pop
gs
in
cwtl
stos
gs
pop
mov
dec
add
mov
jle
dec
lret
mov
jno
mov
dec
cltd
repnz
push
aas
outsl
and
gs
aas
jge
pushf
xchg
jg
push
arpl
icebp
in
outsb
sub
mov
pop
test
ret
shl
iret
or
mov
outsl
or
jns
and
leave
or
flds
push
aas
inc
and
mov
sub
clc
sub
jecxz
or
hlt
sub
ret
pop
mov
pop
cltd
cmp
mov
xor
sbb
push
mov
dec
not
test
sbb
and
pop
fcoms
int
jno
clc
xchg
stos
mov
ss
ror
xor
sub
or
mov
clc
imul
pop
xor
sbb
or
aaa
shr
dec
mov
dec
or
xchg
cwtl
int
out
popf
stos
out
inc
cmp
mov
fcomp
push
mov
sub
roll
xor
ss
mov
sbb
je
lret
xor
std
mov
repnz
lods
hlt
sbb
fistpl
sub
or
cwtl
sbb
in
add
cmpsl
cli
mov
neg
sub
lds
jns
jl
inc
addr16
lret
mov
jo
mov
ja
das
lret
adc
es
and
roll
out
cmc
cmc
xchg
pop
cmc
out
cld
mov
mov
loop
test
add
loopne
sub
icebp
sti
add
aam
cmpsl
dec
shl
push
movsb
popl
xchg
es
in
pushf
ret
mov
in
lret
cmp
mov
movsl
and
or
jnp
out
sub
dec
and
add
and
test
int
mov
sub
push
fbstp
lds
add
mov
mov
inc
push
and
xorb
idivl
mov
push
ret
shlb
mov
add
or
mov
repz
push
ljmp
bound
ja
mov
pop
loopne
pop
and
in
sbb
outsb
xor
shr
push
cmp
fwait
add
push
data16
pop
and
cmc
add
shrb
dec
jl
jno
or
mov
inc
dec
adc
pop
adc
jmp
xlat
in
jne
inc
inc
sub
jl
je
mov
add
push
mov
jbe
mov
shll
movsb
in
insl
call
je
es
adc
lock
cli
mov
mov
xor
lea
lods
jecxz
xor
xor
mov
xor
mov
or
sub
xadd
inc
jae
mov
adc
out
mov
add
pop
in
mov
xor
mov
test
push
jl
and
in
mov
lds
das
in
ds
xchg
jbe
aas
stos
xchg
cmpl
jne
mov
jo
loop
add
test
stos
lea
rolb
sar
sbb
pop
movsb
pop
mov
mov
ret
and
cmp
push
stos
leave
push
aam
add
sbb
cmp
sahf
sub
test
cltd
cmp
iret
jmp
out
add
xchg
loopne
and
nop
mov
sub
dec
stos
sahf
hlt
xor
out
sahf
jmp
or
lea
adc
out
repnz
pop
hlt
and
dec
jb
icebp
outsl
andl
aam
dec
iret
lret
jmp
dec
stos
mov
or
mov
xor
mov
adc
pop
xor
mov
ret
and
pop
cmp
aad
into
sbb
cltd
xor
sbb
js
xor
adc
jbe
lea
testb
data16
push
in
insl
rep
mov
hlt
jbe
faddp
xchg
sarb
movaps
ficomps
js
rorl
movsb
rcrb
enter
insb
aas
bnd
fbld
clc
test
popa
rcr
sbb
repz
sub
stc
rorb
pop
push
test
xchg
xchg
out
and
mov
lret
jecxz
mov
jmp
dec
int
cmp
cmp
mov
push
xchg
pop
mov
jge
imul
jmp
fcomi
cmp
xchg
das
shll
sub
loop
cwtl
inc
pop
sbb
dec
je,pn
and
xor
test
gs
inc
test
scas
repnz
jge
aad
jbe
mov
xchg
aas
lret
sahf
std
aad
mov
mov
mov
movsb
aad
cmp
cmp
mov
test
ljmp
jle
sub
std
xor
daa
lahf
fst
or
push
out
testl
push
xchg
stos
clc
mov
test
call
es
sbb
mov
push
dec
inc
aas
push
cmp
mov
mov
ljmp
jae
pop
xor
inc
daa
inc
fsubrs
call
mov
lds
fdivl
cmp
add
xor
mov
shl
push
pusha
jno
aad
xor
in
jmp
out
sbb
sbb
ds
sahf
mov
cwtl
lret
dec
xor
pusha
pusha
in
fcmovnbe
outsb
adc
icebp
orb
shlb
cmp
mov
xchg
pop
je
call
mov
adcb
dec
mov
push
jae
cmp
rcll
pop
test
stos
shl
xchg
jmp
jae
mov
cmp
stos
or
shl
mov
test
lds
fsincos
in
loope
imul
pop
inc
movsl
cmpsl
bound
dec
lods
test
inc
and
xor
das
mov
adc
jmp
leave
mov
jbe
mov
addb
in
mov
cmc
xchg
pop
or
rol
int
and
dec
loopne
add
icebp
push
call
loop
jmp
shl
cld
lods
icebp
jg
push
pop
ljmp
gs
mov
dec
push
pop
push
addr16
mov
aam
inc
pop
int
clc
sahf
sbb
and
mov
ljmp
iret
cmc
shlb
or
push
add
xchg
fisubrl
lds
cmp
pop
dec
or
insb
cwtl
sahf
sti
pop
stos
lahf
sahf
sbb
data16
dec
fcomp
addr16
pop
std
js
or
mov
cmp
jno
test
pop
xor
leave
aas
mov
jg
leavew
lahf
ret
sti
pop
cmp
ja
ja
subl
cmpsb
and
icebp
shrl
insl
iret
rcl
stos
sbb
add
mov
lea
std
cmpsl
ret
rcl
adc
mov
lds
xor
clc
cmp
push
repz
ljmp
lret
cmpsb
aam
cli
dec
in
out
inc
mov
jns
call
jle
popa
dec
cmp
pop
movzwl
dec
inc
and
lret
dec
push
dec
mov
or
shl
scas
push
inc
dec
add
leave
cmp
addl
mov
inc
sub
aad
fcmovnu
in
in
roll
andl
sbb
arpl
mov
lods
icebp
jmp
aad
leave
aad
mov
and
add
dec
inc
stc
repz
roll
dec
das
stc
adc
xchg
add
sub
lds
dec
inc
push
in
lock
pop
sub
repz
add
loop
clc
das
dec
popf
cmpl
mov
daa
filds
and
push
mov
push
xor
dec
sub
xlat
repnz
pop
mov
xchg
push
inc
jle
loop
dec
in
sub
js
mov
popa
mov
in
adc
mov
lock
or
sub
add
mov
fcoml
mov
das
loop
xorl
mulb
ret
push
mov
imul
in
sub
mov
mov
mov
stos
scas
repz
lock
sub
fimuls
in
nop
sbb
pop
into
jecxz
dec
xor
cmp
and
aad
pop
js
inc
movsl
addr16
pop
daa
push
inc
sbb
rol
cmp
addl
in
popa
pop
add
clc
or
jno
mov
out
sbb
addl
jmp
imul
shr
loop
inc
cwtl
pop
outsl
mov
mov
lret
cmpsl
dec
inc
outsl
push
mov
xor
or
push
lcall
daa
jbe
jecxz
add
push
mov
push
mov
and
add
repz
sbb
xor
cmp
std
in
add
sbb
outsb
ja
ds
loopne
pop
mov
out
mov
lret
icebp
faddl
js
mov
jb
fsts
mov
stos
ficoml
rol
test
jmp
sub
jecxz
jns
fld
push
lret
xor
dec
or
cs
out
rclb
sbb
mov
add
mov
sub
aam
enter
stos
sub
aam
push
pop
outsb
into
test
popa
sbb
xchg
in
add
scas
mov
mov
adc
fcmovnb
shll
xchg
jle
mov
rorb
jnp
ljmp
leave
jbe
xchg
xor
adc
scas
jbe
aas
mov
lret
adc
jb
cmc
sub
roll
sub
movsl
cmp
or
pop
popf
nop
ljmp
push
xor
mov
dec
or
jbe
lods
sbb
dec
xor
ds
or
add
mov
out
pop
ret
sub
insb
or
sub
mov
dec
les
mov
js
stc
sub
pop
aas
fnstsw
movsl
jge
fisubrs
mov
roll
xorl
test
pushf
sbbb
adcb
ds
popa
mov
cmc
pop
push
shlb
cs
loop
mov
fsts
push
sbb
pop
lds
cmp
mov
jne
jnp
pop
loopne
cmp
enter
inc
push
aad
shll
sarl
pop
push
and
call
rcll
lcall
fs
pop
ss
lret
js
pop
icebp
sbb
cld
aam
cltd
lds
pusha
jo
mov
push
inc
mov
pop
call
cmp
mov
cmp
mov
mov
stc
pop
sub
cli
mov
and
sub
mov
rcl
sub
and
les
push
inc
aas
repz
stos
mov
pusha
leave
fsubs
fidivs
test
jg
mov
movsl
test
adc
adcb
or
js
add
or
inc
mov
xchg
out
je
popa
movsl
mov
sbb
outsl
mov
dec
fisttps
fsubr
loop
jbe
cmp
fiadds
ret
push
and
jmp
ret
aaa
xchg
outsl
fnstsw
or
out
test
xstore-rng
cmpsl
add
inc
movsb
xchg
mov
jle
fdivr
std
lods
das
out
out
mov
xor
pop
pop
sbb
subl
test
inc
mov
add
daa
pushf
mov
sbb
mov
mov
xchg
rol
inc
int
int
adcl
push
adc
es
ss
add
xor
out
in
or
push
ds
cli
add
mov
mov
test
repz
hlt
into
dec
sbb
lds
or
xor
ret
lahf
add
mov
xor
sbb
test
jne
in
call
push
sbb
sbb
sub
fisubrs
xor
or
mov
add
mov
add
repnz
ror
sti
inc
jge
add
aas
add
push
sub
push
pusha
mov
push
sarb
or
iret
dec
lock
or
hlt
cmp
dec
sbb
int
xorps
cmp
mov
jo
fldl
aam
sbb
sbb
sbb
push
xor
mov
faddl
mov
fldl
sub
mov
aas
mov
lcall
dec
clc
bound
fcomip
dec
xchg
ret
test
flds
fcomps
push
sbb
lret
call
mov
dec
pop
jmp
leave
icebp
xor
fidivs
push
xchg
fwait
jge
aam
jne
mov
aas
lret
mov
cmp
imul
sub
mov
inc
pop
andb
sub
add
mov
mov
mov
fimull
hlt
lods
shl
mov
movsl
mov
mov
mov
pushf
ljmp
add
outsl
cmpsb
pop
or
subl
bound
mov
dec
negl
fisubrl
and
jge
xor
imul
xor
sbb
shll
movsl
sarb
loop
iret
shlb
fs
call
push
xor
in
fmull
sub
jae
mov
and
dec
in
push
mov
data16
mov
dec
pop
cmp
popf
jg
int3
testl
in
flds
push
addr16
push
xchg
mov
mov
frstor
enter
adc
dec
mov
bnd
stc
jns
push
or
add
adc
lods
dec
mov
fcom
push
sub
cmc
pop
push
push
pop
lods
xor
mov
add
inc
movsl
ja
int
stc
fisttpll
inc
xchg
ret
mov
jo
mov
and
js
xorl
mov
xor
xor
or
sbb
fnsave
loope
fisttpll
and
mov
sbb
xor
test
mov
xchg
mov
cmpb
int
stos
mov
xor
rcrb
insb
shlb
out
mov
mul
stos
mov
jg
or
jno
movsl
push
add
or
arpl
in
stc
ds
or
mov
adcl
mov
mov
out
enter
stos
jnp
xchg
pop
add
stc
outsb
lods
add
insb
pusha
gs
call
aam
je
out
mov
lds
rcr
or
push
and
push
clc
daa
ret
jmp
int
xor
pop
and
xchg
int3
in
inc
pop
shll
pop
push
and
pop
or
pushf
nop
push
or
add
shr
add
pop
test
fldpi
mov
add
or
cmp
lods
and
not
inc
add
jecxz
fistl
and
push
incl
and
push
in
xchg
movsb
in
cmp
push
dec
xrelease
leave
test
xchg
leave
jmp
push
out
or
lock
push
in
cmc
and
pusha
mov
loopne
adc
cmp
int3
cltd
dec
xor
push
fildl
rcrl
rorl
fcomps
hlt
or
add
dec
inc
inc
inc
pushf
packuswb
cmp
dec
hlt
cmp
loop
iret
mov
pop
outsl
jl
or
or
and
mov
clc
in
and
push
pop
fidivl
imul
and
push
int
test
lods
rol
and
aam
fwait
push
xchg
enter
out
das
push
fstp
pop
xchg
test
jl
sbb
ret
loop
outsl
xor
pop
inc
cmp
lds
into
xor
mov
sbb
xor
dec
or
test
loope
sub
dec
leave
out
stos
fwait
mov
sahf
push
pusha
ret
iret
dec
enter
stos
xchg
cs
inc
out
pop
or
sbb
mov
sbb
jo
repnz
pop
mov
inc
xchg
dec
lcall
int3
push
push
dec
int
jae
cmpsb
pop
dec
or
jo
sar
loope
mov
inc
pushf
ret
scas
push
add
leave
push
pop
ret
movsl
mov
inc
icebp
xchg
jno
mov
out
dec
and
sbb
add
xchg
jl
push
jmp
insl
push
daa
mov
dec
mov
adc
jmp
xchg
jmp
dec
ja
dec
add
lret
cmp
add
lock
ds
xor
pop
sbb
push
fisubl
lret
sub
movsl
push
imul
in
xlat
loopne
out
jne
xchg
decl
lret
or
jbe
rolb
leave
subl
ds
push
mov
clc
in
push
sub
icebp
add
sbb
outsb
lock
cmpsl
jbe
ss
xor
xor
int
add
aaa
jmp
out
pushl
add
cmp
fldcw
adc
aam
inc
insb
sub
ss
mov
dec
xchg
les
inc
jmp
aas
fst
imull
push
ret
xchg
jns
xor
fs
fmuls
mov
adc
ss
mov
mov
jns
jnp
sub
inc
cmp
insl
xor
shl
xor
mov
inc
mov
or
sti
inc
dec
inc
gs
mov
jb
shl
lds
imul
sub
pushf
out
jecxz
xchg
stos
icebp
xchg
xchg
pop
stos
sub
pushf
sahf
or
mov
push
add
out
add
or
jmp
push
pop
movsl
dec
into
xor
or
mov
loopne
pop
pop
push
xlat
sub
jne
rcrb
sub
dec
dec
cmpsl
or
ds
adc
sub
inc
xchg
push
fwait
dec
mov
or
rcll
rclb
pop
out
fidivs
jns
je
dec
cli
jno
rorb
sbb
mov
test
shrl
lods
call
sub
jg
sarl
outsb
mov
aad
int
xchg
xor
xor
jb
jae
movsb
and
xor
jns
jo
cmp
pop
add
movsb
or
fcmovu
cli
add
xor
add
adc
mov
xchg
lret
ret
cmpsl
testl
inc
scas
imul
push
mov
enter
jb
adc
sbb
add
mov
mov
aas
std
aam
ror
movsl
loope
test
mov
dec
testl
cld
mov
mov
cwtl
cmp
dec
and
xor
stos
mov
xor
pop
outsb
jns
xor
dec
syscall
cmp
into
jbe
iret
iret
ret
scas
pop
mov
add
int3
popl
pop
sbb
add
rolb
movsl
call
mov
enter
adc
mov
lock
xchg
cltd
xor
fldcw
cmpsl
or
jne
xor
jo
sbb
and
mov
sub
xchg
dec
lret
inc
xchg
ret
or
cmpsl
test
push
cmc
andl
movb
mov
int3
mov
adc
pop
adc
mov
outsb
or
pop
or
mov
or
loop
arpl
add
ljmp
cli
jbe
add
je
fldt
mov
xlat
sbb
jne
adc
pop
insl
add
add
jmp
or
sub
mov
xchg
jle
popa
loopne
stos
fisttpl
mov
je
jb
pop
cmp
repz
fs
push
cli
neg
and
aaa
xchg
push
xor
add
add
outsb
and
sub
in
lahf
aad
push
cmc
push
flds
pop
or
leave
fildll
jnp
sub
pusha
cmp
jle
and
mov
lcall
jecxz
stos
mov
xor
imull
aaa
inc
loop
test
and
pop
enter
and
mov
jl
xchg
clc
add
cmpl
push
fnstcw
xchg
imulb
lcall
mov
loopne
xlat
repz
aam
loop
popa
inc
push
stos
ret
sbbb
inc
jmp
jge
fs
and
dec
aad
xor
cmp
or
test
scas
xor
add
sub
mov
bound
test
push
faddl
aad
lahf
in
add
lret
imul
decb
or
cs
mov
mov
and
push
ffreep
sbb
xor
loope
inc
or
shrl
dec
jp
sub
adc
lock
or
cmc
adc
test
add
lret
dec
sbb
decl
cmpsl
sbb
aas
mov
mov
mov
addl
lret
adc
cmpsb
jo
and
mov
mov
add
enter
add
in
jge
loope
pushf
jmp
sbb
xchg
xor
std
xor
or
inc
sub
add
cld
shl
mov
dec
in
push
mov
test
jno
jge
mov
mov
add
bound
int3
in
adc
sbb
pushf
ja
push
gs
cmpsl
mov
loopne
push
dec
xor
imul
test
rorl
ss
out
cltd
push
leave
fidivl
daa
mov
test
sbb
leave
mov
jecxz
sar
cmp
mov
js
rcll
fadds
mov
add
xchg
add
test
dec
popa
cmpb
sub
sbb
mov
dec
lret
mov
in
and
ds
xchg
adc
les
ss
jmp
dec
push
adc
cmpsb
sbb
mov
je
cli
jo
jmp
add
sarb
xorb
ror
add
shlb
sbb
pop
lds
das
sub
mov
push
jae
fistl
fdivs
fsubr
and
mov
jne
dec
ljmp
mov
ret
es
adc
insb
pop
incb
push
sbb
push
mov
cli
or
and
pop
xor
movsb
movsl
xchg
out
scas
add
mov
and
bound
js
fsubs
cmp
sarl
aam
fiaddl
inc
and
pop
mov
icebp
pusha
lock
fnstenv
data16
cmc
fdivrs
cli
gs
or
mov
mov
mov
sub
nop
out
decb
jmp
xor
push
pop
and
ror
mov
and
fwait
lods
call
mov
xlat
enter
pop
call
icebp
mov
les
lcall
leave
or
lods
jns
inc
sbb
lret
dec
push
cwtl
sub
dec
pop
andb
test
sub
test
fs
insb
mov
mov
cmpsl
sbb
clc
movsb
mov
mov
repnz
test
into
and
add
iret
cmpsl
push
push
in
stc
jae
sbb
mov
mov
aas
es
jo
mov
js
out
inc
fstl
push
xor
repnz
ret
imulb
mov
cmpsl
sbb
jo
add
and
add
mov
notb
lods
sbb
mov
jmp
sbb
in
jmp
dec
arpl
sbb
inc
leave
push
mov
div
ret
roll
mov
or
or
and
adc
in
dec
test
std
inc
mov
leave
xchg
push
pusha
vmwrite
lret
or
mov
mov
mov
dec
mov
call
or
mov
test
test
sbb
cli
inc
inc
mov
jmp
dec
push
mov
adc
dec
sahf
sbb
dec
xchg
or
lcall
sarb
push
roll
pop
pop
mov
loope
xchg
sbb
mov
popf
cmpb
movsl
and
fs
fucom
sub
stc
inc
lcall
mov
pop
pop
adc
in
add
cmc
out
or
ret
scas
jmp
clc
stos
mov
insl
ret
pop
add
lea
adc
push
leave
adc
icebp
add
in
mov
or
sub
sub
lret
xor
fstpt
adc
jp
xor
in
or
sub
jecxz
inc
mov
pop
or
ret
jge
lds
jne
or
and
sbb
sub
inc
cmc
dec
out
mov
mov
repz
or
mov
mov
lcall
fcmovnu
mov
leave
std
jecxz
rolb
sarb
or
gs
pop
rolb
das
cwtl
fsubrl
jle
repz
icebp
lds
test
iret
gs
xchg
in
mov
mov
mov
push
jnp
dec
sub
mov
sub
push
sbb
mov
xor
rol
out
fnstenv
out
leave
mov
shll
sbb
xor
enter
push
imul
xchg
fistl
insl
xchg
ljmp
inc
std
and
divb
mov
inc
leave
enter
jl
adc
and
vmulps
or
sbb
sbb
push
mov
not
mov
cmpsb
fdivs
xor
xor
gs
outsb
or
fistpl
dec
xchg
sahf
adc
dec
imul
pushf
ret
add
inc
and
xlat
rorl
js
sub
adcb
sub
cs
and
push
jecxz
or
dec
jns
jecxz
xor
aas
aam
sbb
and
outsl
mov
cmc
aam
testl
dec
or
mov
adc
push
xor
mov
jp
shl
add
mov
dec
ljmp
cmpsl
or
xchg
or
sub
loopne
stos
cltd
test
into
dec
ret
ja
push
sbb
ret
nop
mov
out
push
mov
leave
mov
pop
or
mov
push
loope
loopne
mov
xchg
sbb
push
adc
dec
cmp
adc
lock
loopne
pushf
fwait
adc
xchg
mov
mov
andl
notb
pop
push
cs
mov
sti
icebp
adc
aas
lds
add
stos
arpl
sbb
xchg
sbb
sub
mov
insl
out
push
mov
insl
jmp
xchg
cmp
cmp
vunpcklps
xor
aam
fs
dec
inc
out
loope
ret
pop
test
je
jle
enter
inc
dec
data16
adc
int
jle
clc
in
movsb
push
setns
stos
inc
dec
dec
aaa
sub
loope
mov
pop
add
mov
ret
dec
roll
cltd
push
bound
mov
pop
mov
mov
sbb
adc
ret
xchg
cmc
fwait
inc
icebp
or
xchg
in
sub
sbbl
fdivrp
jbe
add
adc
xor
jecxz
shrl
xchg
and
in
out
mov
sbb
arpl
mov
jmp
xor
pop
jl
inc
lret
clc
addr16
mov
inc
inc
dec
into
mov
xchg
in
ffreep
aam
mov
rcl
push
icebp
int3
sbb
cmp
pmulhw
mov
xor
adc
lds
jp
sbb
aas
mov
push
adc
dec
adc
push
fucomp
fsubs
mov
imul
xlat
test
sbb
lds
fcoms
std
cld
enter
jecxz
mov
lock
dec
mov
push
fst
pop
rcll
daa
jbe
loope
cli
mov
cli
scas
mov
sahf
pop
out
lahf
mov
add
jae
pop
aad
add
pusha
and
sbbl
sub
mov
cmpsl
adc
push
mov
lcall
out
jbe
jmp
mov
dec
xchg
sbb
sbb
push
inc
shlb
pmaxub
shll
sub
movsb
or
add
fisttpll
inc
mov
add
mov
ret
arpl
in
ret
ret
cwtl
leave
jmp
cwtl
pop
in
mov
mov
adc
stc
xor
and
push
mov
mov
xor
push
cmc
mov
lods
adc
xchg
imul
ret
movsl
fstpl
test
and
dec
loopne
stos
ret
aam
pop
jae
imul
xchg
and
in
rcll
dec
in
addb
movb
call
mov
cltd
inc
jl
add
sub
inc
stos
sbb
add
sbb
fmul
out
push
xlat
les
mov
dec
jl
push
add
insb
sbb
lds
test
inc
or
ja
sub
in
jno
jne
jg
mov
jmp
repnz
aad
push
aas
ss
or
lods
sbb
aas
int
xor
adc
bt
pop
test
sbb
stos
shlb
stc
aad
out
fsts
mov
js
or
out
sub
adc
mov
leave
cmp
adc
ljmp
lret
inc
dec
js
sbb
mov
cli
nop
mov
lds
dec
dec
sarl
dec
stos
les
fldenv
xor
push
jns
fdivrl
xorb
mov
test
mov
stos
rcll
pushf
subl
out
xlat
int
jmp
or
fst
adc
int
and
ljmp
rolb
push
mov
sub
cmp
ret
and
shl
adcl
mov
lret
fsubrs
sub
cli
inc
lds
sbb
test
cmp
add
clc
test
mov
fsubs
push
daa
dec
push
adc
mov
mov
stos
leave
add
popa
and
out
clc
js
sbb
jecxz
call
cmp
subl
in
test
mov
mov
mov
mov
sarb
jmp
or
insb
arpl
aad
ret
sub
adc
and
dec
stos
push
loop
sbb
xor
insl
pop
push
in
inc
insl
in
mov
jb
inc
sarb
dec
in
pop
xor
in
mov
push
out
ja
testb
dec
sbb
outsl
fstp
pusha
adc
pop
mov
dec
xor
sbb
fsubrp
into
dec
mov
cli
jae
sub
popa
into
ja
or
mov
out
out
cmp
xor
fidivrs
and
fcmovne
lds
enter
and
addr16
jge
add
stos
fldt
jg
add
inc
inc
push
fldl
pop
push
inc
push
xchg
arpl
pushf
cmp
dec
movsl
adc
mov
outsb
dec
insl
xchg
xor
imul
aaa
pop
mov
sti
jl
add
xor
add
add
xor
xor
and
movsl
test
icebp
stc
dec
dec
dec
in
jecxz
lods
add
inc
dec
flds
and
ljmp
push
ljmp
div
mov
cmp
movsb
jl
rol
mov
out
aad
cmp
popa
lods
adc
jne
push
lods
roll
ret
sub
dec
dec
cmp
ret
enter
call
rcl
and
les
out
push
lret
dec
test
fildl
repz
sub
stc
popa
dec
pop
cltd
xchg
test
movsl
adc
cmp
adc
lods
faddl
jne
aad
mov
loope
inc
cmp
fs
mov
cmp
fdivr
mov
mov
jb
adc
cmpsl
int3
or
and
test
es
fdiv
stos
mov
pop
jl
out
sbb
dec
sbb
mov
add
cltd
sbb
xor
movsb
repz
std
in
xchg
cmc
or
jns
sub
mov
add
fs
mov
lds
jmp
cmp
or
test
outsl
hlt
stos
mov
roll
inc
cmp
push
add
cmp
cmp
or
fucom
dec
adc
mov
pop
test
incb
out
scas
vmovaps
jne
lcall
test
add
aaa
push
sti
in
mov
js
loopne
mov
sub
sarb
mov
mov
enter
cmp
pop
xchg
mov
sbb
inc
outsl
add
mov
mov
and
cli
repnz
stos
movsl
sbb
mov
in
pushf
sub
dec
out
push
fstpl
cmp
pop
mov
dec
mov
dec
lret
and
cmp
icebp
sar
mov
or
add
jae
add
das
ret
lock
pop
push
test
insl
in
and
cmpsl
or
rolb
xor
sub
sbb
outsl
repnz
push
mov
cmp
xlat
fcmovnb
in
pop
mov
packsswb
cmp
fildl
jne
stos
loope
std
mov
fnstenv
mov
adc
in
loopne
ret
mov
mov
fdivl
imul
push
xchg
mov
pop
iret
rorl
mov
dec
xor
xchg
sbb
push
repz
test
out
cmp
sub
aad
test
ffree
dec
mul
add
xchg
sarb
dec
or
test
ret
mov
shll
push
push
sbb
push
addb
leave
jge
xor
pop
cmpl
daa
rolb
ret
cmp
fwait
dec
inc
xor
icebp
sbb
popf
test
mov
fdiv
test
sbb
dec
scas
lds
rorw
cmpl
imul
test
add
cs
fst
dec
dec
enter
call
sub
fwait
stc
cli
mov
or
mov
shr
xchg
mov
inc
adc
in
push
rcr
jl
lret
cmpsb
stos
mov
sbb
test
ljmp
sarb
mov
popl
or
push
ret
push
loop
push
popf
or
leave
mov
add
push
xlat
sbb
jne
inc
loopne
dec
add
and
icebp
adc
adc
stos
or
arpl
mov
and
stos
es
je
pop
or
and
push
pop
fldenv
or
out
jns
addl
addr16
and
repz
mov
add
idivl
or
je
cmp
add
lahf
mov
out
xlat
pop
popf
xchg
sub
ror
pushf
mov
or
push
lds
pop
rol
mov
or
xor
xor
outsb
mov
rcl
cmc
lcall
call
shl
cmc
repz
fstl
inc
rcrb
xor
shll
enter
xchg
jmp
enter
xor
jbe,pt
jns
inc
jb
mov
stos
adc
mov
fxch
dec
scas
jmp
fcomi
in
scas
pop
mov
inc
clc
push
sti
adc
pop
xor
test
les
add
aas
int3
repz
cmp
mov
mov
out
add
push
ljmp
scas
sub
lods
xor
int3
cmp
outsb
das
xor
mov
je
xchg
mov
jns
mov
sub
add
leave
xchg
stos
cwtl
aaa
inc
or
shl
pop
dec
dec
test
jmp
ficoml
xor
xor
xchg
jo
inc
ja
pop
mov
out
push
cmp
gs
cmpl
pop
sbb
lods
ljmp
push
adc
lret
pop
inc
shrl
lret
jno
stos
shrl
mov
shl
enter
fildll
mov
push
jg
xor
test
sub
sbb
in
mov
sub
mov
outsb
negl
enter
out
outsl
fs
fcmovbe
shl
mov
inc
lret
lahf
shrb
enter
mov
mov
adc
push
add
mov
push
pop
push
ror
fldt
sar
xchg
push
inc
cmp
ret
pop
ds
pop
fs
cmpsb
and
out
es
es
xchg
adc
pop
loope
sub
mov
test
add
call
aad
in
lods
clc
or
fucomip
and
add
push
repz
es
xchg
insb
sti
mov
fxch
les
inc
mov
repz
mov
adc
sub
daa
sbb
adc
subb
insb
popa
cmpl
jmp
pop
rclb
jne
rol
inc
sbb
mov
test
jne
test
jg
mov
add
xchg
mov
jecxz
call
sub
xchg
out
sbb
or
enter
sub
out
mov
aaa
sar
mov
xor
andl
shll
sub
mov
jl
aad
ljmp
test
mov
sub
jne
and
sub
mov
sub
pop
pop
call
nop
int
or
mov
push
xorb
fisttps
inc
mov
pop
ucomiss
mov
test
mov
sbb
push
lret
or
push
cli
sahf
out
ss
stc
mov
and
mov
push
aaa
xchg
dec
add
repz
int
stc
aam
scas
loopne
or
jmp
aam
rcr
rcrb
jle
jnp
mov
sub
mov
mov
and
lret
clc
int3
loope
cmp
mov
dec
mov
push
cmc
jmp
imul
jge
dec
cmpsb
clc
pop
add
pop
dec
in
jl
out
lds
inc
and
sbb
pop
into
stos
adc
aad
into
daa
aas
mov
or
sti
je
push
inc
or
loop
loope
jecxz
call
inc
xor
xchg
sub
sbb
lods
stos
fldcw
out
push
and
pop
sbbl
pop
cmp
mov
addr16
and
mov
into
cmpsl
pushf
adc
out
rclb
shr
xor
lods
mov
sahf
and
push
cmpsl
push
or
adc
out
lret
js
or
jmp
xor
adc
cwtl
push
add
loope
sbb
jmp
repnz
fucom
stc
subl
test
pop
ja
mov
xor
mov
inc
and
repnz
fwait
adc
in
or
rolb
and
jne
xor
out
mov
out
aam
dec
loop
push
enter
push
loop
stos
into
inc
xor
sub
cli
repz
int
pop
add
mov
add
xchg
cltd
and
data16
mov
push
nop
lahf
fst
xchg
out
mull
mov
fwait
xchg
or
ret
xchg
in
mov
shl
ret
pop
jne
stos
pop
or
pop
int3
mov
stos
mov
cli
ja
es
add
push
rcll
sar
mov
js
sti
out
adc
mov
add
push
fnstenv
xchg
jecxz
pushf
pusha
push
rcll
pop
mov
xor
fnstsw
aam
add
movsl
push
mov
sub
stos
sbb
movsb
mov
add
xchg
mov
imul
inc
mov
and
call
ljmp
adc
insl
aad
ds
fcomip
hlt
outsl
aam
test
cmc
mov
xor
push
js
and
idivl
and
loopne
ror
lds
sbb
mov
pop
mov
ret
mov
or
int3
dec
insb
orl
dec
add
mov
out
pusha
cmp
rcl
leave
mov
push
shl
fnstenv
repnz
sub
sarb
cs
lds
call
imul
sbb
rep
in
aad
in
pop
int3
push
std
movsb
push
rol
fs
sbb
jle
pop
cmp
mov
dec
ss
inc
or
jbe
adc
arpl
push
push
or
xor
stos
jns
bts
enter
xlat
push
insb
or
lea
fcmovu
sbb
jge
hlt
add
jp
push
pushf
insb
pop
das
pushf
fs
mov
jo
pop
aas
jne
dec
pop
loope
stos
stc
cmpsl
pop
mov
xchg
push
stos
popf
jp
aad
insl
dec
xor
sub
push
pop
sbb
fsubrl
mov
sbbl
xor
into
xor
data16
push
movl
jg
movsb
leave
push
jmp
jns
mov
or
push
add
aad
int3
cmpsb
jle
dec
int
jno
dec
in
push
push
gs
xchg
dec
test
loop
cmp
push
mov
fst
les
stos
in
push
xchg
mov
faddl
pop
enter
xor
sub
pop
in
mov
jo
test
pop
cmp
popf
mov
jns
test
jb
hlt
lea
or
mov
xchg
cmp
ljmp
mov
push
jno
leave
ljmp
jb
lods
adc
lret
stos
sarl
adc
fstps
cs
sub
xlat
mov
and
inc
cmpsl
add
cmp
cwtl
and
sbb
out
pop
xchg
jo
pop
sti
lea
add
bound
ret
popf
je
push
inc
icebp
mov
push
add
jmp
ljmp
insl
sarl
push
es
or
push
mov
xor
notl
push
outsb
scas
repz
in
pop
jno
and
and
jns
xor
mov
repnz
xor
data16
or
stos
ret
sub
and
mov
iret
jo
mov
or
xchg
jmp
sbb
xor
mov
push
or
outsl
sarb
sub
push
iret
mov
mov
inc
xchg
mov
adc
daa
iret
mov
pop
enter
enter
mov
jmp
adc
lods
lods
aam
fwait
ret
mov
inc
add
pop
and
cmp
ret
clc
mov
push
out
in
push
setl
mov
xor
je
or
and
add
add
mov
pop
xchg
push
aam
mov
in
testl
frstor
lds
sub
mov
sub
loop
sbb
or
add
sub
dec
xor
fldcw
dec
jnp
inc
and
mov
adc
es
fdivl
mov
je
ss
sbb
pop
and
std
test
push
hlt
adc
xchg
idivl
movb
mov
sub
fdivr
mov
pop
aad
xchg
pusha
jmp
shl
std
lock
xchg
mov
dec
cmpsl
in
mov
imul
lea
fmuls
push
add
std
inc
and
push
sbb
mov
or
mov
int
aas
mov
stc
rcr
lret
xchg
mov
lea
lds
out
iret
js
cmpsb
mov
mov
jns
int3
add
mov
cltd
loop
jle
rorl
jle
incb
jbe
enter
out
adc
cmpsb
stos
fdivr
dec
sbbl
mov
pop
xor
inc
movl
mov
test
mov
fldenv
aam
inc
mov
gs
pop
jmp
add
sbb
jbe
subl
sub
jp
push
push
dec
lret
and
lea
mov
jle
xchg
shll
jge
pop
mov
push
pop
push
roll
xor
leave
loope
inc
jp
xor
sar
jmp
cmp
sub
xor
aas
arpl
and
inc
shll
inc
sarl
lahf
sbb
int
add
sub
xlat
mov
xor
sub
pop
fwait
push
ja
pop
out
xor
mov
add
jge
dec
mov
sbb
lret
notl
loope
jno
icebp
and
xor
rcll
icebp
jae
xor
mov
jecxz
jne
adc
repz
mov
mov
ret
sub
repz
mov
lds
pop
add
fdivrl
leave
inc
cmp
push
cmc
icebp
shrl
shrb
xchg
mov
dec
pop
xor
and
mov
pop
fdivs
or
icebp
fsubrs
pushf
rorb
or
fsubrl
int3
ljmp
enter
adc
iret
mov
enter
adc
ja
rolb
sub
and
cmp
xchg
inc
call
xor
mov
jle
dec
jp
push
into
imul
cwtl
fadds
inc
jb
imul
pusha
in
in
or
xor
mov
mov
mov
loop
and
js
push
push
jb
fimuls
inc
mov
dec
mov
in
dec
fsubr
and
cltd
ss
lret
in
dec
mull
push
xor
test
fwait
mov
mov
mov
jae
sbb
push
xor
rol
insl
jmp
jnp
enter
push
dec
and
mov
lret
scas
hlt
shrl
int
and
not
stc
enter
add
lea
mov
or
mov
dec
push
popa
cmc
stc
int
sub
jb
dec
adc
jmp
and
push
sahf
loope
test
pop
pop
add
xor
cmp
repz
jno
sarl
div
inc
stos
or
sub
cmc
popf
xor
inc
lret
rol
sub
sub
lds
pand
imul
in
cmp
fistps
push
test
nop
mov
push
daa
paddusw
and
add
fimull
pop
add
flds
xor
dec
dec
and
push
imul
push
leave
pusha
test
or
iret
pop
fcoms
in
scas
in
fisubrl
inc
xlat
jnp
rolb
dec
or
lret
filds
dec
pop
xchg
out
idiv
and
sbb
loope
jns
pop
jae
test
xor
cmp
xchg
cwtl
pop
xchg
cmpsb
ret
mov
adc
in
and
rol
pop
xchg
movsb
add
sub
lods
jg
cmp
rclb
outsl
adc
sbb
jns
lret
jnp
inc
xor
sbb
adc
inc
nop
fimull
shlb
xor
mull
add
add
xchg
add
xor
and
andb
add
pop
repnz
into
xchg
mov
jae
cmp
test
addb
scas
mov
xor
inc
lds
enter
bnd
movsl
adc
sub
adc
jmp
loopne
adc
sub
mov
pop
scas
mov
mov
stos
xor
clc
jmp
scas
dec
divl
mov
cmp
push
jb
shlb
idivl
rcr
aam
mov
or
dec
fwait
rorl
xchg
sbb
sahf
xor
aas
mov
dec
idivb
xchg
xchg
out
or
mov
xor
cwtl
push
pop
and
dec
aam
xor
mov
adc
push
es
mov
sub
scas
iret
stos
push
inc
cltd
xor
jle
dec
mov
enter
mov
jne
sub
shrb
mov
lods
lock
mov
les
mov
push
sub
xor
lods
int
imul
ret
pop
outsl
in
fstl
test
pushf
cmc
jmp
push
xor
cli
jl
dec
out
fcomi
dec
add
add
movsl
sbb
inc
dec
xor
nop
stos
int3
xchg
mov
push
push
inc
mov
into
pop
ret
fildl
add
addr16
mov
xor
mov
or
mov
add
and
push
inc
inc
push
push
inc
cmp
inc
mov
cmp
lcall
add
repz
mov
call
ljmp
rcrb
jg
jmp
outsl
lods
aad
jo
mov
loop
stos
inc
insl
add
inc
mov
jecxz
fld
mov
jb
popa
pop
mov
mov
mov
mov
fstpl
add
mov
jne
sbb
push
sbb
imul
mov
jmp
or
add
inc
sar
sub
popf
sub
push
and
notl
fldcw
loope
push
xor
vcmpss
dec
mov
lds
jae
stos
hlt
inc
shll
int3
in
clc
loope
rcr
adc
jge
and
jecxz
shll
icebp
fldenv
push
sti
add
lret
sub
inc
inc
aam
pop
add
stos
add
fstps
xchg
push
cmpsb
xchg
cltd
imul
xor
jle
js
scas
mov
test
xchg
pop
mov
inc
fdiv
xchg
mov
inc
sbb
mov
push
push
es
and
mov
decb
cli
jmp
out
std
clc
xor
test
fldt
fisubrs
pop
imul
mov
popf
mov
popf
movswl
mov
pusha
outsl
enter
rorl
adc
sar
jo
inc
jle
mov
popa
ss
xchg
xor
inc
add
inc
test
ret
mov
clc
out
shll
pushf
mov
in
xor
cltd
out
jle
cs
add
push
adc
pop
mov
inc
xor
outsl
xchg
test
or
xchg
lds
pop
les
sti
das
movsb
mov
test
inc
sub
jns
sbb
lods
mov
rorl
inc
dec
inc
loop
push
mov
cli
cmp
stc
daa
add
mov
cmpsl
push
xor
mov
aad
sti
imul
fnstcw
mov
inc
xlat
outsb
ror
cmp
sar
nop
mov
mov
roll
and
jge
dec
push
test
aas
lds
pop
inc
mov
es
push
scas
push
xchg
mov
mov
or
frstor
pop
mov
shll
mov
cmp
push
jbe
mov
testl
adc
leave
dec
push
pop
push
ret
add
popf
cmpsl
mov
ret
scas
sahf
pop
mov
mov
clc
cmp
je
out
cmpsb
aas
xchg
and
and
hlt
cld
pop
outsb
test
ror
xchg
loopne
push
leave
rcrl
sub
pop
or
jns
data16
jecxz
dec
popf
mov
jle
jmp
add
rcll
movsl
mov
aam
cmpsl
lret
pop
add
test
xor
addr16
test
xchg
dec
or
imul
or
mov
mov
ret
idivl
or
pop
lock
into
mov
dec
mull
push
ucomiss
sub
ss
aas
pop
fsubrs
ds
jo
subl
test
sbb
jno
cmc
lret
xor
gs
into
mov
and
cli
cmpsb
dec
lock
lea
mov
sbb
cmpb
or
inc
cs
out
enter
movsb
or
push
or
pop
and
icebp
mov
jmp
cmp
or
and
loop
fwait
sbb
in
dec
fldt
loope
mov
sbb
fs
int3
mov
call
adc
pop
pop
sbb
and
mov
or
jecxz
sub
iret
lea
push
jl
mov
fadd
push
jae
shlb
into
stos
leave
or
xorl
dec
jo
cmp
and
out
cmp
cmp
xchg
icebp
les
pop
xchg
adc
mov
jb
mov
sub
dec
jne
insb
dec
cmp
jp
pop
and
cli
mov
jnp
dec
gs
or
mov
pop
add
mov
sahf
je
push
iret
pop
std
nop
nop
test
in
mov
and
mov
jo
lahf
or
mov
cmpsl
adc
das
frstor
sbb
dec
add
leave
test
pusha
cmp
adc
fmul
cmp
loop
and
mov
test
aaa
cmc
aam
pop
aas
xchg
subl
xor
loope
daa
add
hlt
outsb
dec
inc
add
xor
stos
mov
inc
pushf
lods
std
adc
aad
adc
add
or
and
fdivs
nop
sbb
sti
xchg
inc
repnz
jbe
and
add
lahf
test
dec
xchg
test
das
out
jae
stos
in
push
and
lret
or
flds
sbb
mov
push
sub
jg
stos
xchg
mov
lds
iret
ss
sub
sbb
push
aad
inc
out
pop
mov
pop
or
push
lcall
js
add
jl
aam
fiadds
out
xchg
mov
scas
ja
cmp
loopne
imul
rorb
ds
push
rcrb
orl
mov
push
cmc
pop
test
testl
xor
test
iret
mov
add
and
movsl
or
gs
or
xchg
leave
aam
and
cmp
push
fucomp
out
stos
fsubl
inc
loopne
aaa
mov
mov
lea
xchg
dec
enter
fnstenv
out
jg
imul
mov
or
shll
mov
lret
in
mov
sub
mov
jne
jae
sbb
xor
mov
andl
push
add
decb
push
in
pop
inc
movsb
sbb
pop
jecxz
mov
sub
mov
adc
mov
jle
dec
in
and
aaa
test
cld
pop
or
mov
fisttpl
cmp
mov
xlat
jmp
stos
jne
sbb
pop
daa
sub
mov
das
jae
xchg
sbb
add
cltd
xor
jp
mov
sub
sbb
fcmove
push
xor
mov
shrl
fisubl
add
fiadds
add
clc
or
enter
rcrl
or
xchg
aaa
aam
and
inc
ja
pop
fiadds
aas
loope
test
loope
and
in
dec
cwtl
aad
push
adc
iret
lock
jl
cmp
iret
pop
xor
xor
mov
cli
repz
pop
push
inc
mov
addr16
leave
or
cmc
mov
fcomip
fldcw
testl
mov
arpl
jecxz
and
dec
xor
out
testb
nop
or
push
mov
push
mov
movsl
mov
cmc
push
xor
adc
stos
pop
mov
dec
jae
push
addr16
sub
iret
mov
dec
inc
xchg
cmp
mov
mull
imul
bsf
mov
int3
sub
jo
xchg
mov
add
cmpsb
out
lods
jmp
popa
sahf
inc
in
leave
out
in
insl
dec
cltd
sbb
or
loop
pop
jle
inc
adc
aam
push
rolb
lds
mov
dec
sbb
push
mov
jno
mov
sbb
mov
rcll
jbe
or
mov
push
cmpsl
imul
aam
fwait
pop
jecxz
xorb
mov
js
fwait
mov
jo
mov
aas
sbb
xor
es
and
in
js
push
aas
add
enter
jg
cld
ret
addr16
mov
outsb
in
out
es
cmp
aam
fisubrs
mov
and
loope
and
enter
and
shlb
iret
dec
insb
push
xor
add
iret
mov
pop
xor
inc
adc
movsl
call
push
leave
push
repnz
sub
mull
jge
clc
mov
dec
in
loopne
mov
fistpl
push
inc
inc
sbb
or
add
iret
adc
mov
daa
enter
js
inc
xor
pop
and
inc
xchg
ljmp
inc
ret
mov
js,pn
mov
and
jb
cmp
repnz
mov
adc
jmp
sbb
mov
inc
jp
arpl
icebp
enter
shll
and
add
hlt
adc
dec
into
in
data16
add
leave
and
cmp
loopne
ret
mov
and
test
ret
add
fimuls
mov
xor
sub
test
into
xchg
mov
mov
rolb
rcrl
fnstenv
mov
or
loope
out
mov
fmuls
fstpl
leave
xor
repz
loope
sbb
test
icebp
stos
pushf
test
insl
out
repnz
aam
mov
ret
dec
fnsave
and
pop
int3
push
adcl
lods
movsl
jne
int
dec
icebp
add
mov
shrl
fnsave
inc
jo
arpl
js
leave
aad
pusha
push
add
mov
pop
xor
in
dec
adc
sbb
jb
add
mov
sbb
and
xor
out
shl
jge
pop
test
inc
movsl
push
push
jnp
jge
sbb
mov
incl
jl
cmpl
cmc
cmp
cs
mov
sbb
inc
test
imul
mov
fwait
daa
sbb
addr16
aas
dec
aas
ror
adc
mov
inc
lret
pop
add
aaa
arpl
jle
in
out
icebp
fidivrs
jae
jmp
lea
xchg
mov
and
mov
push
xor
test
xchg
mov
shll
or
mov
mov
aas
cmc
mov
jbe
cmp
mov
jae
loop
lock
inc
sti
std
push
xchg
enter
das
mov
or
mov
dec
push
add
mov
pop
mov
pop
lds
inc
push
pop
scas
ss
lods
lea
fs
iret
fincstp
in
push
and
insb
pop
aas
sub
addr16
es
mov
inc
mov
push
lahf
fcom
sbb
mov
jge
movsb
mov
pop
and
pop
out
pusha
push
sti
push
sahf
xchg
jle
in
xor
cmc
dec
dec
dec
and
mov
jbe
mov
rorb
aas
dec
scas
pop
stos
stos
int
add
out
stos
pop
aas
mul
jo
loop
lock
shl
lcall
dec
aas
pushf
dec
mov
clc
cmc
lcall
xor
sti
jecxz
dec
call
dec
leave
les
gs
mov
mov
or
sub
pop
popl
jae
call
test
cmc
loope
aad
jns
mov
mov
or
lock
or
inc
incb
sub
and
jb
fildll
jns
int3
pop
sbb
addr16
clc
test
jge
add
fnstsw
mov
push
les
mov
pop
jg
xor
mov
mov
divb
cli
mov
mov
sub
aaa
stos
mov
test
add
xchg
pop
inc
hlt
jo
mov
icebp
add
xchg
ja
push
cmp
and
icebp
pop
jmp
dec
mov
mov
pop
xor
mov
repz
mov
sbb
out
jge
mov
xor
jnp
pop
adc
roll
xor
add
aaa
jb
fldt
push
int
sub
sbb
iret
dec
popf
fisubrl
push
call
fwait
lret
and
sbb
bound
cmp
fs
push
push
imul
outsl
or
lret
icebp
gs
popl
cmp
std
or
cwtl
aad
mov
xor
mov
outsl
or
add
xor
daa
sbb
shll
xor
into
or
adcl
arpl
rcr
lret
mov
dec
test
icebp
sub
divb
test
jae
adc
mov
ljmp
icebp
test
scas
cmp
push
mov
sub
cmp
loop
aad
cmpb
mov
push
or
in
pop
inc
leave
pop
add
mov
imul
sub
lods
mov
cmp
and
mov
xor
loopne
mov
test
repnz
add
divl
mov
pop
aad
repnz
icebp
inc
ret
rcrl
xorb
cmp
test
pop
ret
icebp
jp
popa
pop
shll
outsl
jge
mov
negl
and
out
mov
xbegin
jecxz
out
ret
imul
jnp
leave
mov
clc
inc
push
cmpb
cmp
iret
inc
inc
add
cwtl
leave
js
mov
andl
gs
ljmp
mov
outsl
push
mull
ljmp
dec
mov
ljmp
data16
cmp
or
insb
mov
or
push
inc
jle
movsl
inc
fmul
xor
xchg
aaa
sbb
jnp
sub
push
mov
sub
push
cmpsl
sbb
in
mov
add
pop
nop
int3
repz
and
add
xor
sar
jge
dec
cmp
stc
push
andl
mov
dec
ret
sub
pop
pop
out
mov
mov
fstps
lock
aas
orb
rol
push
in
pop
jne
xor
mov
mov
popf
mov
sahf
out
into
cmp
inc
and
jmp
aad
leave
loope
mov
in
add
or
rcl
mov
roll
mov
jno
int
dec
int
push
fnsave
aas
sub
ret
imul
test
nop
jae,pt
sub
inc
dec
jae
fsubl
push
sub
sbb
mov
sbb
mov
add
scas
leave
leave
inc
mov
int
shll
inc
cwtl
insb
jae
pop
and
jl
inc
xor
leave
pop
xchg
or
cmc
mov
cmc
shl
jns
xchg
jmp
int
pop
pop
lds
test
rorl
cmc
adc
add
or
lret
inc
mov
pushf
xlat
cmp
arpl
std
aam
pop
cmp
in
jo
rorl
mov
cltd
jo
das
addr16
out
out
and
lahf
mov
push
fmuls
sub
lds
jl
das
mov
jl
ret
loop
or
xlat
lret
dec
sbb
cli
fildll
mov
mov
push
dec
cwtl
and
cld
mov
out
setge
fdivr
test
and
add
xor
or
push
xchg
lods
scas
in
mov
mov
cmc
lods
pop
cmc
cmc
inc
xchg
add
lock
adc
and
arpl
pop
call
inc
mov
mov
xor
test
add
xchg
into
jp
js
or
push
pop
inc
dec
lahf
testb
dec
sbb
jmp
popf
mov
push
pop
call
push
movsl
inc
test
jecxz
mov
push
jmp
cmp
into
arpl
ficoms
jmp
sbb
into
arpl
jae
repz
push
push
cmp
push
out
int3
imul
jp
popf
xchg
sahf
fstpt
xchg
jae
pop
or
sbb
inc
add
aaa
add
ret
inc
sbb
dec
lds
push
jp
or
out
mov
jns
cmc
insb
je
xchg
in
cmpb
notl
into
mov
ffree
dec
repz
dec
fdivr
loop
mov
push
stos
xorl
mov
jae
orb
movsl
les
mov
std
lret
push
xbegin
sbb
pop
das
les
mov
stc
push
cmp
in
aas
mov
subl
fstpl
dec
push
jmp
add
sbb
icebp
fwait
push
and
dec
sbb
test
jmp
jl
std
cmp
jne
cwtl
sub
jl
push
add
jl
sbb
movsb
inc
ds
jo
add
je
push
jg
xor
dec
inc
mov
sbb
pop
dec
cmp
hlt
loope
mov
je
sbb
icebp
mov
push
loope
xor
out
inc
out
cmc
mov
test
add
lret
dec
jmp
push
jae
lds
mulb
jne
fisttps
xor
push
pop
js
mov
cmpsl
mov
mov
jbe
inc
mov
add
lahf
cmpsb
dec
in
cmpsb
push
loope
sub
ja
in
mov
inc
xchg
mov
enter
test
mov
adc
or
jl
push
jns
inc
mov
and
xlat
dec
inc
mov
cmp
push
sub
jmp
push
gs
leave
xlat
xchg
sbb
add
leave
pop
scas
iret
shl
lea
dec
dec
syscall
lds
insl
gs
shlb
jne
rclb
outsb
sbb
int
jecxz
inc
jmp
add
dec
jge
xchg
call
xor
mov
test
es
popf
add
inc
jge
scas
inc
jns
repnz
push
fcos
cmp
xor
xlat
pop
loope
out
sti
jbe
sbb
adc
stc
push
dec
jns
push
movsl
aad
addr16
sbb
loope
roll
mov
fsub
push
sbb
clc
sbb
push
adc
repz
ror
adc
les
mov
add
lret
push
popl
inc
xor
lods
pop
std
jns
out
mov
cmpl
jae
int
xor
stos
adc
fidivl
mov
cmp
test
mov
pop
and
jae
pushl
fcmovnb
jmp
shr
movsl
loope
enter
out
fisubs
pop
leave
leave
cmp
cmp
jns
loop
adc
xor
ja
xor
int
mov
shrl
fnstcw
sti
into
iret
cmp
push
mov
int3
roll
rol
xor
push
xchg
stos
mov
into
adc
test
mov
cmp
test
adc
leave
ret
rorb
into
outsb
mov
mov
push
inc
mov
pxor
js
out
rorb
ret
fiadds
jb
stos
movsl
xchg
mov
xor
pop
xor
ja
sub
int3
adc
lock
xchg
dec
adc
cltd
jg
or
push
in
hlt
gs
push
adc
mov
mov
test
add
add
adc
sbb
lret
xor
inc
pop
ror
push
stc
mov
mov
xor
in
std
shll
or
push
adc
fstps
in
ret
sarl
shl
icebp
mov
aas
leave
fsubrs
stc
fstl
pop
out
dec
sbb
clc
push
push
xor
movsb
xorl
scas
ret
stos
insb
push
shll
sbb
dec
or
aas
fsts
shll
leave
cmpsl
inc
inc
jmp
adc
out
push
push
popf
arpl
push
inc
push
push
shll
inc
rclb
fmull
pop
scas
into
mov
loopne
bound
lock
mov
and
in
jb
inc
aas
dec
ret
xchg
psubw
sarl
rolb
addr16
mov
mov
icebp
mov
test
inc
ss
jmp
and
mov
icebp
outsb
mov
lea
ljmp
jb
mov
or
mov
pop
mov
cltd
fs
hlt
lods
dec
mov
call
daa
mov
or
mov
xor
lret
dec
and
xor
xor
mov
or
inc
mov
cmc
fbstp
jno
cli
mov
xor
int
stc
cmp
stos
fistl
scas
ficoms
aad
ret
jno
out
mov
mov
lret
mov
outsl
in
mov
aas
mov
add
pop
jns
mov
test
push
and
or
pop
outsl
mov
and
xor
add
divl
sti
mov
push
dec
mov
add
in
daa
js
icebp
pusha
js
mov
scas
mov
inc
sbb
add
dec
popa
cmp
cmp
call
push
imul
in
add
je
mov
cli
jae
in
jmp
add
fdivrs
aam
add
jmp
test
cld
movsb
add
dec
pop
xlat
ret
xlat
push
push
fiaddl
adc
cwtl
push
lret
aad
pop
int3
mov
mov
aam
cmc
push
and
inc
xor
daa
cmp
out
aas
movl
pop
insb
sub
les
inc
lret
fucom
ret
repz
cmc
mov
mov
mov
cltd
aad
int
pop
jle
sbb
jae
sbb
mov
imul
stos
push
inc
das
cmpsb
out
push
lds
jmp
add
repnz
mov
jle
iret
loope
dec
mov
sbb
xchg
arpl
sbb
xor
adc
sbb
fisttps
mov
dec
hlt
mov
aaa
sub
push
divl
or
iret
push
xchg
pop
ret
test
das
mov
jns
dec
adcb
popa
popf
repnz
cmp
data16
mov
addr16
rclb
fisubs
mov
outsb
dec
jne
mov
cmp
ljmp
subl
clc
aad
ljmp
adc
arpl
lock
aam
rcrl
mov
ret
add
pop
ret
xor
mov
hlt
sub
add
fisubrl
fisubrs
pop
std
pop
and
cmp
jl
push
xchg
sub
xchg
adc
xchg
ljmp
ljmp
dec
int3
sub
pop
cwtl
repnz
or
xchg
cltd
adc
mov
dec
pop
mov
mov
cwtl
lock
mov
jecxz
stos
dec
ja
xorb
andb
fs
loop
cli
js
call
nop
push
dec
sbbl
int
scas
out
andb
push
cmp
gs
xor
xor
xor
adc
mov
enter
pop
je
js
cli
fsubrl
push
les
cmpb
gs
test
loop
add
mov
and
aad
insl
loopne
cli
addr16
push
subl
scas
jecxz
or
call
aam
leave
inc
outsl
add
rolb
loope
cmpsl
cmp
jl
ret
rolb
addr16
aam
sbb
inc
out
cli
jnp
sbb
data16
dec
add
push
mov
pop
dec
lret
pop
ljmp
les
and
inc
popf
repnz
inc
call
jp
mov
enter
lret
adc
jbe
aad
push
jl
and
shlb
push
adc
lds
out
fbld
jae
add
inc
in
sarl
sub
mov
fstp
xchg
lds
mov
or
cmp
testl
out
mov
jno
sahf
das
mov
sbb
and
dec
ljmp
dec
pop
add
test
mov
int
adc
gs
jo
xchg
jae
mov
add
push
arpl
cmc
cmc
adc
pop
lock
mov
mov
scas
cli
sahf
daa
repnz
mov
imull
jle
dec
mov
dec
mov
shrl
add
outsl
mov
sub
xchg
push
push
fnstcw
cli
fcmovbe
daa
mov
loope
adc
push
xchg
push
fnstsw
arpl
shlb
aam
aad
inc
out
aas
push
pop
add
int
sarl
add
sbb
fcmovne
adc
cmp
stos
repz
adc
add
insl
sub
sub
inc
lds
or
daa
aaa
sub
sahf
jnp
test
mov
lds
stos
ret
aam
mov
push
int3
xchg
jle
xchg
mov
jmp
mov
je
push
or
pop
stos
outsb
dec
sbb
add
jg
sbb
aad
inc
sub
sarl
inc
inc
cwtl
cld
fisttpll
and
pop
jp
pop
xor
xor
dec
or
xchg
and
mull
push
lcall
cmpsl
leave
dec
inc
dec
adc
rorl
lock
xor
push
rorl
or
gs
xor
movsl
and
or
fisttpll
clc
jl
push
cmp
enter
movsl
dec
jne
jg
dec
aas
adc
sub
inc
xchg
enter
push
stos
pop
cs
mov
jmp
movsl
test
mov
loop
cli
jb
xchg
into
and
popf
pop
mov
out
loopne
mov
stos
lret
nop
mov
pop
mov
dec
sbb
es
mov
add
sahf
sub
mov
insl
pusha
clc
cli
jne
mov
rorl
cmp
ds
cmp
cmp
insb
mov
cmpsb
jne
sbb
xchg
mov
movsl
mov
and
push
sbb
aaa
jp
xor
jecxz
pop
in
scas
xchg
dec
test
sub
fistpl
sahf
pop
les
inc
jns
xor
mov
ret
pop
cmp
jns
pop
and
lea
jnp
add
test
scas
jecxz
ror
lea
loope
ret
jecxz
fstl
add
mov
sub
mov
test
add
ret
cmp
repz
test
add
orb
test
mov
cmpsl
cmpsb
out
xor
sti
push
mov
cli
mov
into
jl
xor
dec
and
inc
and
cmp
stos
xchg
xor
inc
xchg
sub
repz
mov
jge
or
lahf
sbb
mov
push
in
movsl
aaa
lods
or
mov
and
lods
nop
xor
shll
mov
push
ret
or
leave
xor
call
call
xor
sbb
sarl
stos
mov
push
call
add
aam
jmp
lock
push
loopne
dec
in
leave
sbb
lret
loope
adc
dec
pusha
repnz
js
mov
arpl
sbb
push
mov
mov
cmp
fs
ljmp
sbb
lar
adc
aam
fnstcw
mov
xchg
pop
pop
inc
movsb
dec
adc
out
out
lds
stos
test
addr16
popa
sub
lahf
sbb
stos
fcomps
and
jbe
fsubr
clc
and
and
mov
lds
das
shll
out
push
cmp
jecxz
adc
leave
inc
push
int3
mov
mov
xor
push
jmp
push
in
ret
dec
inc
imul
adc
loope
enter
cmp
pop
int
xor
scas
shrb
push
pop
int3
pop
xchg
push
sub
and
popf
or
cmc
dec
fs
fcmovnbe
xchg
push
mov
stc
ret
sbb
jno
aam
lock
divb
mov
push
dec
icebp
fidivrs
ds
fmul
mov
jg
xor
leave
loopne
xchg
cli
enter
aad
push
mov
fiaddl
mov
popa
push
ret
jo
xchg
push
fidivl
pop
aaa
ret
push
inc
inc
outsb
xor
adc
popa
sti
das
jmp
push
div
dec
icebp
jle
xchg
testl
imulb
mov
push
aas
mov
movsl
cmp
mov
dec
mov
ja
int
stos
dec
ljmp
mov
push
ja
mov
popf
xchg
test
or
push
mov
fldcw
add
or
xchg
leave
stc
or
cltd
push
adc
in
ljmp
bound
cs
pop
cltd
xor
inc
jns
mull
inc
in
push
inc
lock
add
xor
es
sbb
aad
in
jne
orb
fsubs
sub
xchg
sbb
cmc
pop
push
add
mov
push
pop
movsl
jne
scas
dec
cmpsb
or
lret
dec
mov
jg
movsb
pusha
dec
sti
fnsave
lret
mov
jne
stos
fstps
jge
lret
cmp
ffreep
inc
xor
call
rdpmc
insl
sub
mov
jmp
daa
adc
lret
push
xchg
jne
stc
aad
xor
sbb
push
stc
pop
lds
aad
pop
and
fnstenv
adc
movsl
in
inc
jg
gs
test
xor
popa
push
mov
sub
cmp
mov
cmp
gs
sub
jo
jg
leave
into
adc
popa
push
lock
fcom
mov
jle
lock
arpl
data16
adc
je
repz
vpsubsb
push
aam
inc
push
mov
fs
cmpl
leave
jecxz
jge
mov
adc
mov
sub
out
mov
aam
mov
fildll
xor
cmp
movsb
jnp
nop
mov
repz
dec
fsts
cmp
pop
rolb
lahf
and
jl
ds
mov
adc
adc
enter
enterw
enter
in
stos
pop
mov
jbe
jns
rcrb
pop
leave
or
cmp
outsb
push
xchg
out
mov
repnz
xchg
add
inc
and
add
pop
mov
xchg
cwtl
jns
inc
jecxz
daa
daa
add
lds
cmp
ret
es
push
xor
repz
imul
and
jmp
in
mov
movsl
inc
stos
xor
int
roll
jbe
cmp
rolb
pop
out
sub
or
ljmp
push
sahf
xchg
outsb
cltd
aad
lret
mov
sbb
and
fmuls
jl
inc
aam
movsl
add
xor
es
xchg
dec
xchg
ret
ror
outsb
pop
ret
clc
fmul
dec
dec
ficoml
ljmp
out
pop
int
cmp
mov
movsl
sub
adc
xor
adc
add
jmp
into
clc
mov
idiv
arpl
std
and
xchg
mov
mov
adc
xchg
or
xchg
rcrb
add
das
xor
stos
mov
in
pusha
add
out
test
inc
leave
sbb
push
push
and
or
btr
rcrl
add
lock
inc
pop
mov
ja
test
fdiv
mov
xlat
mov
lret
pushf
hlt
test
pop
push
inc
mov
push
test
cltd
roll
orl
add
in
dec
hlt
fldenv
addr16
mov
mov
imul
mov
inc
xorl
icebp
movsb
push
pop
push
xchg
mov
aad
xor
mov
add
jb
imulb
ljmp
dec
jp
int3
ss
push
repz
xor
in
xchg
lcall
sbb
xchg
pop
ffree
rol
jge
jae
or
inc
sub
pop
adc
add
loop
and
call
aaa
movsl
lods
insb
mov
bound
fstpt
add
shll
xor
xorb
loop
add
jne
dec
les
lret
lock
popa
inc
push
shlb
cli
jns
inc
or
xchg
es
loopne
inc
jnp
imul
inc
fnsave
loopne
sub
cli
je
ret
shll
cmp
mov
add
cmc
fcmovnbe
mov
xor
rcr
inc
js
arpl
add
mov
sub
sub
sbb
stos
jg
test
add
ds
aaa
shll
aad
jne
out
and
push
shrb
sub
pop
sub
movb
jbe
pop
shl
mov
hlt
and
loopne
faddl
or
cmp
arpl
jb
incl
dec
stc
push
out
pop
cmp
ds
pop
test
and
call
fxch
clc
sar
ret
cmp
fmull
add
js
lock
push
xor
inc
push
push
lret
jecxz
push
test
hlt
out
mov
test
mov
fdivl
sub
stos
add
outsb
sub
arpl
xchg
movsb
sbb
ljmp
and
in
sbb
xlat
xchg
inc
jmp
inc
mov
add
xlat
fldt
jae
sbb
xor
fcmovnbe
repz
int3
push
dec
inc
ret
jns
mov
fisttpl
sbb
dec
clc
sbb
mov
adc
or
push
data16
fldenv
push
xor
xchg
les
xchg
adc
cmc
in
adc
hlt
dec
dec
and
aam
cmp
jbe
or
and
jo
sahf
mov
sub
in
cltd
dec
dec
lds
repnz
cmpsb
xor
repz
mov
xchg
movsl
and
cmp
push
ret
test
aas
enter
lcall
pop
pop
dec
cltd
push
gs
pop
cld
sub
pop
jecxz
sbb
jb
ja
aam
incl
in
cmp
out
dec
pop
sub
pop
push
movsl
pop
mov
aad
sarl
arpl
cltd
adc
outsl
out
inc
test
add
int
mov
xchg
and
ffreep
lcall
jnp
mov
or
fldenv
test
loopne
pop
in
out
mov
jmp
test
lods
cmp
leave
pop
pop
dec
int
cmp
sti
jecxz
insl
icebp
mov
xchg
stos
jge
add
adc
mov
in
pop
das
pop
call
jb
loope
inc
faddl
jp
add
pop
or
cmp
das
xchg
repz
add
ret
out
gs
jecxz
das
jecxz
pop
rorb
lods
insb
pop
and
inc
push
fnstenv
test
mov
or
mov
sub
loope
loope
cltd
hlt
shr
jns
push
sub
cmp
es
test
pop
clc
lret
and
mov
sbb
shrl
stc
mov
outsb
adc
int3
arpl
and
shlb
add
leave
lahf
in
mov
inc
iret
hlt
xchg
aad
lss
fs
subl
cmp
shll
adc
lock
pop
out
mov
stc
mov
pop
int
xor
and
insl
sub
pop
cmp
jne
sbbl
testb
cmp
mov
adc
test
and
ljmp
int
repz
push
aaa
repnz
stc
iret
pop
js
inc
inc
xor
sub
in
mov
push
inc
in
jb
movsb
or
pop
in
enter
test
adcb
push
mov
js
dec
fmull
and
inc
rolb
push
movl
push
or
inc
dec
ret
je
fldcw
gs
or
cs
sbb
les
jecxz
pop
jp
rolb
push
dec
mov
shrl
pusha
dec
ljmp
shlb
test
inc
adc
ret
inc
movsl
lods
pop
cmc
inc
sub
std
in
lods
sub
adc
dec
shr
jmp
pop
pop
pop
ret
sbb
leave
into
addr16
cmp
mov
cmc
pop
or
arpl
test
std
shr
repz
shrb
ss
or
or
test
repnz
jns
inc
call
shll
lret
fbstp
or
es
jae
lds
xor
jns
out
jecxz
loope
out
mov
je
out
in
jle
dec
mov
inc
cmc
sarl
fsubrl
ljmp
add
enter
xor
ftst
popa
pop
fdivs
dec
test
mov
push
push
loope
testb
out
mov
imul
ret
cmpsl
and
pop
rolb
add
ret
or
ss
xor
mov
mov
in
insl
lret
inc
jo
cmpsl
in
mov
shlb
mov
adcb
iret
rclb
scas
xor
xor
sub
dec
or
xor
add
mov
mov
into
jmp
mov
scas
or
leave
add
leave
mov
rorl
dec
scas
cmc
scas
stc
out
jmp
rol
mov
fcmovnbe
jge
xor
flds
bound
xor
xorl
sub
xor
add
fcomi
mov
out
sub
int
xor
sbb
insb
repz
and
int
and
test
call
and
sbb
and
icebp
mov
pop
jmp
xchg
outsb
xchg
xchg
rcrl
add
xor
cmp
shlb
int
fstl
inc
stc
lret
xor
inc
cli
mov
test
and
stos
adc
mov
pop
imul
ss
sar
jle
inc
or
lods
xor
xor
add
jnp
inc
cmp
jnp
insb
repnz
pop
mov
cmp
test
in
sbb
xor
rcrl
sbb
fbld
lret
inc
xor
cmpsb
xor
rol
xchg
jle
jg
mov
add
and
jl
jg
xchg
cmpsb
ret
repz
addr16
insb
pop
pop
outsb
rorb
int3
je
jmp
repz
in
repnz
leave
imul
mov
test
dec
ret
nop
scas
mov
loopne
dec
in
hlt
rcrl
push
adc
clc
push
inc
test
jle
add
sar
and
mov
xor
fadds
push
push
lea
stos
adc
addl
or
cli
mov
cmp
mov
gs
in
push
sti
sub
clc
fdivs
mov
sub
mov
or
ja
adc
cmp
lock
push
push
inc
push
mov
mov
pop
mov
cli
aam
repz
je
mov
jbe
lods
es
repz
aam
add
cmp
mov
ja
pop
mov
outsl
cmp
push
push
sub
imul
or
shlb
int3
pop
inc
cmpsl
es
js
shll
push
cli
scas
loope
xor
and
cltd
ret
mov
inc
and
adc
mov
mov
xchg
jo
sub
cmp
stos
roll
cltd
add
hlt
neg
mov
add
sub
jne
xlat
jecxz
sbb
fisubrl
cwtl
push
movb
and
fdivl
nop
xchg
sbb
and
dec
and
jnp
pop
sbbl
lock
lods
lret
cmpsl
dec
xor
pop
dec
lds
sbb
dec
sbb
je
jmp
mov
push
sbb
jmp
dec
sbb
push
loope
cli
pop
popf
cmp
mov
data16
shll
aad
nop
mov
int3
pushf
mov
loopne
cltd
mov
jg
out
mov
pusha
or
cmp
enter
mull
js
add
imul
dec
xchg
xor
lret
mov
and
jnp
test
push
and
or
or
pop
repz
adc
mov
pop
cld
or
or
enter
sub
addr16
dec
dec
push
mov
int
add
add
mov
mov
cmpsb
or
or
sbb
leave
std
dec
shrb
ja
test
pop
fs
xchg
dec
or
jp
mov
lea
push
icebp
sbb
sahf
lea
mov
xchg
push
cmc
mov
fcmovne
lea
lock
jae
cmp
call
in
or
push
mov
repz
inc
cmc
fldcw
push
clc
cmc
mov
imul
cmpl
fs
inc
cld
jne
shrl
dec
cmp
pop
mov
lds
mov
mov
leave
outsl
push
push
mov
psrad
lret
mov
add
sti
outsl
in
jp
xor
mov
lods
rcrl
in
dec
xchg
add
in
stos
fbstp
jge
add
fcom
rcrb
xor
push
add
cmp
iret
aam
cmpsl
addr16
in
imul
fbstp
js
ret
jae
enter
rolb
hlt
fisttpl
aad
das
arpl
out
loope
xor
int3
cli
and
in
scas
dec
cmp
les
repz
sbb
or
or
fadds
dec
mov
hlt
jl
add
vandnpd
cmpl
jb
mov
inc
aad
ss
repz
lcall
or
out
jecxz
insl
push
ret
mov
stos
xlat
cmp
hlt
dec
outsb
push
test
pop
mov
and
push
dec
inc
pop
dec
xchg
roll
push
clc
xorb
loop
enter
lods
lret
mov
sbb
out
mov
push
testb
inc
xchg
lods
stc
movsb
mov
dec
in
jb
cld
mov
inc
stc
int3
push
enter
jecxz
int
subb
jg
popa
push
in
shl
popa
in
int3
ss
mov
pop
sar
aaa
cmp
push
loop
sbb
mov
and
movsl
inc
aas
adc
xchg
jle
in
dec
cltd
pop
pop
testb
add
cmp
or
dec
cwtl
jmp
mov
and
add
jmp
mov
dec
into
inc
imul
iret
arpl
popa
push
shlb
leave
insl
adc
mov
pop
mov
jge
xor
lds
pop
sub
mov
cmp
gs
imul
xorl
js
ss
mov
pusha
and
aam
fiaddl
mov
int
or
ss
mov
jns
or
movsl
xor
out
dec
ret
sti
mov
jno
inc
das
add
sub
rorb
mov
popl
xor
shr
lret
dec
lea
movsb
fadds
xchg
inc
pop
and
pop
add
aas
xchg
xchg
into
mov
insl
aam
clc
dec
rorl
dec
xchg
or
xchg
outsl
enter
leave
cltd
ror
push
pushf
daa
sarl
nop
cmp
addr16
jb
mov
lret
mov
shlb
lds
test
je
push
test
or
mov
addb
push
stos
jbe
enter
addr16
test
fdivs
insl
inc
rclb
inc
cmp
adc
in
push
in
add
push
push
cmc
idivl
lods
mov
idiv
cmc
test
out
imul
jecxz
mov
pop
call
jle
dec
xchg
cmp
mov
jae
test
and
or
cmp
in
aam
jmp
add
jns
out
pushl
sbb
imul
jle
lret
xchg
fcoms
jns
cwtl
mov
dec
pop
inc
addb
xor
jle
mov
jge
push
xor
aas
mov
scas
sbb
dec
repnz
jge
into
insl
mov
and
cmp
std
dec
ljmp
push
aaa
or
cli
mov
sbb
cltd
dec
dec
test
sbb
mov
jne
jecxz
and
mov
mov
into
outsb
ja
cmpsl
jge
add
loope
rcr
mov
into
addr16
cmpb
jno
loop
cmpsb
orl
adc
mov
mov
push
pop
sbb
mov
jo
pop
push
in
jns
daa
push
pop
add
xchg
ds
loope
xchg
push
dec
lds
jbe
imul
and
sbb
jle
sbb
mov
dec
or
sub
jns
leave
dec
negl
shll
adc
mov
mov
jne
fadd
sbb
add
or
and
ljmp
jns
jne
std
stc
jae
mov
cmp
out
in
inc
sbb
sub
fnstsw
push
mov
mov
in
ret
arpl
rcrl
cs
sub
pusha
mov
xchg
cmc
or
sbb
jecxz
daa
ror
or
test
mov
mov
pop
sbb
mov
dec
lahf
mov
inc
sbb
imul
lds
push
pop
jnp
cld
mov
icebp
jno
cmp
dec
repnz
icebp
push
std
jle
sub
test
popa
lods
cmpsl
lock
mov
cltd
daa
sbb
enter
mov
dec
and
into
icebp
outsb
jecxz
or
sub
sub
jne
xor
push
in
pop
xor
imul
push
xorb
push
les
xlat
sbb
push
outsl
dec
test
int
mov
movsl
mov
mov
shrb
out
leave
jbe
lret
pushf
or
mov
xor
adc
shrl
ret
ret
dec
inc
inc
aaa
xor
clc
pop
cmp
daa
sbb
icebp
xchg
test
das
movsl
add
call
inc
and
roll
dec
rcrl
dec
sbb
sub
jnp
mov
adc
mov
xor
adc
leave
inc
sbb
cmp
dec
pop
rorb
arpl
push
psrlq
dec
mov
sbb
std
mov
sti
sbb
dec
test
test
in
adc
stos
cwtl
addr16
adc
push
push
addb
inc
lret
fnstcw
ja
aam
std
mov
in
xor
in
int3
mov
nop
popf
push
shr
stc
pop
jo
aam
leave
xor
dec
push
aam
aam
ret
je
jo
cmc
mov
dec
jmp
mov
xchg
jg
into
jp
inc
lret
fidivl
jb
out
mov
lret
cmp
inc
pop
std
mov
inc
fcomi
stc
in
add
fnstsw
pop
fdiv
dec
dec
in
int3
and
add
fcoml
dec
mov
mov
inc
mov
sub
add
mov
dec
daa
sbb
fcmovbe
pop
add
sbb
sti
icebp
or
out
shl
push
aam
and
cmp
out
into
sub
pop
fstps
jnp
les
data16
mov
lock
add
movsl
stos
shl
enter
lea
pusha
adc
inc
mov
sbb
xchg
fldcw
stos
leave
shlb
popf
leave
fs
repz
rcll
push
cltd
dec
js
vmovaps
push
mov
inc
add
inc
mov
xor
jno
shll
push
ror
les
popa
ret
push
or
adc
leave
out
popa
or
sub
or
sub
cmpl
mov
dec
ud2
add
dec
and
pushf
xlat
icebp
mov
ljmp
sub
int
mov
sub
or
test
icebp
out
sub
cld
frndint
aad
lret
xchg
or
sub
mov
mov
leave
mov
std
arpl
push
jno
xchg
and
add
push
icebp
add
sbb
fst
les
mov
jmp
mov
ret
or
push
xchg
into
fsub
add
mov
xor
loop
arpl
fwait
add
inc
fmuls
xor
lods
stc
daa
adc
sub
leave
aas
jb
push
adc
mov
and
in
push
decb
and
shl
popa
dec
mov
clc
outsl
inc
xor
sbb
int
xchg
mov
sbb
xor
cmpsl
sti
js
sbb
mov
aam
sub
insl
add
pop
mov
iret
cmp
dec
std
jmp
mov
lock
imul
push
xor
cmp
repz
mov
js
idivl
test
jne
sub
lods
arpl
pop
xor
xor
dec
and
cmpsl
leave
jge
lret
stos
icebp
repz
mov
dec
adc
imul
mov
cmpl
or
shl
add
mov
mov
test
cltd
test
jp
mov
add
push
orl
jns
subb
pop
cli
shr
clc
mov
test
scas
test
inc
push
push
adc
sub
jp
subl
out
xor
in
jae
movsb
xor
shrl
lret
pop
in
out
jbe
loop
fisubrs
push
mov
popa
push
mov
es
adc
pop
sub
cld
pusha
or
jg
into
mov
sarl
xchg
mov
mov
dec
jge
ror
push
cvttps2pi
dec
addr16
or
inc
inc
jge
or
pop
shr
imul
int3
outsb
add
std
adc
scas
mov
inc
sbb
lahf
test
inc
mov
filds
xor
lea
cltd
icebp
mov
adcl
rcrl
gs
fimuls
xor
rcl
dec
shrl
aas
and
jecxz
dec
testb
fcomip
cmp
push
pop
roll
dec
leave
aam
sbb
loope
jno
roll
pop
aad
clc
je
aad
test
and
je
testb
mov
adc
mov
fsubrl
dec
roll
add
in
fistl
rcrl
pop
sbb
icebp
icebp
jno
adc
xor
leave
sarl
daa
roll
repz
pop
cmp
jno
xor
dec
rcl
cmp
repz
popa
rcr
push
push
inc
jl
xchg
mov
lret
imul
clc
xchg
dec
jno
add
adc
push
sbb
xchg
xor
jno
loopne
or
loope
stc
push
lret
jmp
call
enter
jl
xchg
add
ss
mov
mov
add
dec
int
test
test
add
call
rclb
xchg
rorb
sbbl
rcrl
pop
clc
mov
lods
adc
mov
xchg
cmc
push
fprem1
adc
jns
stc
loope
xor
lock
rcl
xchg
inc
lock
jge
aaa
sbb
adc
and
and
jmp
push
adc
pop
and
mov
and
call
dec
negl
shrb
cltd
xor
test
lock
repz
arpl
push
lret
push
repnz
xchg
fdivs
sahf
xor
mov
push
add
ja
push
popa
adc
ficoml
les
push
roll
mov
cmp
lds
adc
jg
push
ror
and
mov
icebp
rcll
xor
fmulp
loope
inc
ljmp
add
inc
negb
dec
fisubl
cli
rorl
subb
nop
mov
jno
mov
cld
xor
lahf
or
push
dec
mov
jg
sbb
ror
lds
rcl
pop
sbb
cmpsb
pop
xor
add
pop
mov
xchg
loopne
mov
sarb
out
outsl
jecxz
iret
out
jbe
fs
lret
cmp
ja
lret
add
and
aad
add
scas
repz
xor
add
pop
push
shl
adc
jp
or
cmp
fcoml
sub
repz
lea
sarl
mov
add
jno
pop
dec
imul
add
pop
leave
leave
cmc
pop
in
insb
rcll
lock
mov
iret
add
dec
sbb
sti
adc
push
popf
mov
out
repz
hlt
popa
icebp
pop
test
out
xor
dec
mov
leave
test
and
rolb
xor
dec
add
and
idivl
or
dec
loop
add
push
inc
dec
or
xchg
sub
in
mov
mov
mov
inc
pop
and
xor
mov
or
dec
jmp
push
popf
and
fisubl
lret
mov
cmc
jo
sarb
dec
lret
or
fst
das
or
imul
inc
inc
add
rcr
shrb
mov
jns
aam
leave
rorl
pop
push
push
rclb
lds
shr
test
pop
mov
imul
add
enter
inc
dec
and
sbb
out
mov
or
mov
fisttpll
aad
mov
jae
pop
fidivl
jne
shr
aad
cmc
adc
loope
ds
repnz
dec
shl
pop
gs
mov
push
sar
fimuls
je
or
call
jecxz
rcrb
pusha
insl
adc
push
ret
jae
inc
dec
lret
divl
shrl
mov
popa
cmp
clc
and
cmp
jmp
rol
aaa
loope
mov
mov
sarl
cli
pop
or
call
sbb
testl
jmp
cld
icebp
inc
xlat
cli
mov
lods
xchg
or
hlt
sub
xor
mov
out
shlb
adc
movb
popa
xor
inc
jns
ljmp
xor
repz
jmp
shlb
and
add
push
dec
out
sbbb
xor
adc
aam
fdivl
ret
pop
xor
sti
jne
xor
ja
xchg
or
push
xchg
add
icebp
cmc
sub
je
leave
shrl
cmc
outsl
cli
shlb
roll
pop
cmc
dec
cmp
pop
mov
cmp
fsubrs
adc
ret
out
faddl
dec
loope
iret
out
xor
lds
test
adc
leave
cltd
add
data16
or
or
je
mov
or
out
and
sbb
ja
cli
popa
fnstenv
sbb
dec
dec
jmp
adc
loope
cmp
mov
and
and
adc
icebp
mov
or
xor
cmp
shl
das
ret
xlat
fists
xchg
push
mov
iret
or
hlt
add
scas
push
or
loope
das
adc
pop
pop
je
leave
loope
cmc
jg
sar
pop
dec
lds
jmp
shll
pop
repz
xor
jmp
fcmovnu
fldenv
dec
scas
push
xor
test
hlt
cmp
adc
lds
xor
and
add
ret
pop
iret
test
test
cltd
dec
jbe
popf
leave
xchg
mul
and
mov
add
leave
mull
sar
cmc
or
jmp
repz
ror
and
pop
xor
rclb
dec
dec
cltd
hlt
shr
mov
mov
repz
int
inc
pop
iret
dec
shl
inc
jmp
dec
or
xor
cmc
sbb
pop
xor
lock
fwait
mov
outsl
rolb
sarl
inc
iret
jecxz
rcll
inc
stc
mov
movsl
loop
adc
leave
les
shrl
rorl
or
adc
dec
jl
dec
xchg
and
or
and
lret
push
imul
je
repz
test
fs
rcrb
shll
repz
shrl
ror
leave
xlat
ds
ror
cmc
sbb
and
cmc
xchg
jmp
dec
insl
cmc
jne
jno
add
dec
dec
cltd
repz
iret
xchg
lret
sarb
out
fwait
iret
jne
shll
rclb
cmc
or
adc
div
and
pop
shr
cmc
popa
rcr
cltd
mov
dec
inc
push
orb
inc
ret
iret
dec
push
rep
mov
test
dec
repz
test
or
xor
rcrl
rclb
stc
and
int3
idivb
inc
lods
popa
mov
dec
jb
filds
jbe
rcl
cmp
xchg
idiv
mov
testl
xor
popa
mov
push
leave
icebp
and
div
rcll
test
icebp
xor
leave
shl
adc
test
sub
add
add
shrl
add
mov
rolb
adc
mov
leave
cltd
xor
lret
stc
xlat
push
cltd
imul
test
xor
hlt
iret
dec
sub
adc
faddl
dec
dec
cmc
outsl
out
icebp
xor
push
dec
roll
xchg
inc
xor
shrb
shr
xor
cmp
adcl
sbb
mov
inc
je
mov
dec
lea
xchg
pop
and
imulb
dec
add
out
mov
sub
adc
negb
pop
jne
stc
decb
out
out
inc
and
adc
mov
jae
lcall
xor
std
push
data16
add
inc
fxch
and
daa
ret
inc
call
mov
imul
push
push
ret
xor
inc
test
loopne
adc
leave
test
arpl
jmp
mov
sbb
sub
shrb
adc
pop
add
test
int3
sub
mov
orb
rolb
bound
mov
mov
pusha
cmp
mov
xorl
lock
or
cmp
popf
dec
and
jae,pn
insb
std
cmc
adc
cmc
mov
sub
repz
sub
lahf
push
daa
icebp
adc
sbb
rcll
mov
pop
rcrb
pop
loope
iret
imul
roll
lret
dec
jne
mov
lock
nop
shl
add
sub
cmc
cmp
xor
push
hlt
leave
pop
xchg
pop
rorb
lret
mov
adc
push
mov
xor
push
ja
sbb
mov
call
mov
leave
jmp
adc
xchg
add
roll
cmc
das
cli
shl
sarl
nopl
xor
rol
out
jl
loope
hlt
sti
shrb
nop
sub
push
push
xor
in
lds
rorb
fadd
lahf
xchg
xchg
add
ret
add
das
aad
dec
cmp
or
push
add
insl
lret
pop
mov
dec
jle
loop
insl
shl
aaa
dec
cmp
cmc
cmp
push
sub
push
or
mov
ret
push
dec
imul
jae
fildll
clc
test
into
sbb
jno
cmp
std
jge
mov
sarl
jno
jbe
repz
add
push
jmp
add
jl
mov
rclb
cmp
roll
xor
cmp
ss
dec
inc
mov
fcoml
mov
mulb
clc
cmc
imul
jne
lret
mov
dec
dec
bound
xor
negl
sbb
lret
data16
and
pop
xor
loopne
repz
stos
sarb
cmp
lcall
sar
adc
lahf
movsl
cltd
popa
pop
adc
jg
push
inc
sar
daa
stc
lret
adc
repz
shrb
and
rclb
inc
fldcw
mov
mov
enter
dec
or
cmp
fstpl
add
movsl
mov
jmp
int3
mov
push
jne
dec
int
sbb
lret
jge
xor
pop
ffree
jg
dec
push
sar
jmp
mov
icebp
test
adc
inc
push
dec
sarl
pop
cld
hlt
mov
imul
jmp
xor
dec
enter
mov
pop
pop
adc
imul
dec
fldcw
dec
push
leave
hlt
mov
xchg
std
insl
popa
mov
rorl
cltd
inc
jmp
icebp
and
leave
rclb
sarl
add
inc
xchg
xchg
les
and
sbb
lcall
and
loope
and
ret
call
loope
inc
dec
dec
leave
sar
pop
lret
jns
cwtl
or
mov
xor
mov
mov
or
adc
adc
call
in
xor
sarl
inc
test
and
shrb
xchg
test
mov
xor
xor
int3
shlb
xor
lret
icebp
xchg
repz
sar
cmp
leave
xor
insb
out
leave
adc
mov
adc
cmp
sar
rcll
xchg
jmp
repz
pop
shll
and
xor
and
icebp
shll
pop
ror
lock
adc
mov
shl
xor
pminsw
mov
test
jle
popf
add
jmp
test
mov
inc
repz
iret
inc
icebp
arpl
sub
jge
scas
clc
iret
dec
or
xchg
rorl
or
xor
in
leave
loope
repz
movsl
push
xorl
rcll
test
push
stc
rcl
repz
testl
push
int
jle
icebp
dec
fnstsw
repz
cmc
inc
inc
dec
mov
adc
cmc
mov
lock
leave
xor
jno
push
sarb
cmc
inc
push
or
popa
hlt
dec
or
lods
cmc
loopne,pt
mov
leave
sub
repz
rcrb
inc
popf
dec
pop
dec
adc
mov
xor
dec
or
inc
hlt
aas
or
cmc
and
leave
mov
cmc
lret
in
adc
hlt
into
inc
rcll
inc
movsl
arpl
in
adc
xor
ret
jge
xor
pusha
nop
adc
cmpsl
bound
xor
sbb
xor
cs
push
adc
cmp
xor
dec
pusha
sbb
arpl
cmp
das
scas
cmp
xor
int
sbb
pop
dec
inc
xor
lret
add
dec
jmp
popa
repz
rcrl
andb
shll
leave
xchg
xor
dec
pop
inc
arpl
jo
ret
adc
iret
adc
cmp
or
gs
hlt
add
out
iret
in
mov
call
ficoml
ror
rclb
fnsave
sbb
rcrl
rolb
mov
or
or
push
add
xor
jno
mov
mov
aaa
dec
push
in
push
dec
lods
or
in
add
movsl
lock
leave
fstl
cmp
lret
and
loope
out
scas
sub
add
mov
jmp
lds
rcl
fistps
cmpsl
xor
or
icebp
insl
rcrl
repz
xchg
in
mov
adc
push
dec
jns
push
aam
les
inc
ret
rolb
icebp
xchg
leave
iret
aam
leave
rorl
shrl
repnz
arpl
xor
ror
pop
xor
rcl
out
cwtl
test
mov
cmc
jno
scas
loop
dec
mov
test
xchg
inc
dec
rorl
js
or
test
je
mov
out
jo
dec
mov
lret
test
fdivs
rcll
jno
mov
leave
mov
icebp
xor
xor
lret
ret
mov
dec
leave
mov
ds
dec
mov
nop
rcll
xchg
inc
inc
mov
int
mov
in
mov
xchg
ds
in
dec
or
mov
adc
stos
cmp
test
push
outsl
jnp
sbb
inc
jp
pop
push
cmpb
xchg
pop
xor
cmc
jno
sub
adc
jns
cmc
push
rolb
jecxz
and
daa
inc
cwtl
xchg
xor
jecxz,pt
jmp
aad
clc
lret
out
jns
rcl
mov
adc
popa
in
xchg
add
leave
inc
les
mov
rclb
inc
lret
and
rcr
push
fstpt
lock
rcrl
jmp
mov
inc
inc
ljmp
sar
fucomi
inc
inc
les
clc
out
lahf
jg
inc
rcrb
fcmovb
jns
repz
ret
cmpsl
rorl
xchg
mov
mov
add
leave
ljmp
out
popf
cld
adc
mov
inc
cmp
rolb
jmp
icebp
bnd
imul
aaa
cwtl
push
or
dec
rclb
adc
rol
dec
shl
fisttps
shl
roll
adc
shl
loopne
mov
iret
loope
mov
enter
je
call
xchg
out
pop
xchg
roll
rclb
rorl
pop
jo
leave
shrl
mov
push
dec
xor
jns
xor
dec
hlt
inc
add
cmp
daa
gs
push
repz
aam
mov
sarl
insb
jno
push
jmp
xor
or
cmp
out
popa
add
inc
icebp
add
lods
out
les
test
out
shll
push
stc
inc
leave
fs
lea
shl
adc
mov
pop
push
out
jmp
fimull
cli
jge
aas
out
das
sti
loope
adc
pop
out
push
and
cmp
repz
sar
cmp
jns
xor
jmp
xchg
mov
cld
roll
mov
or
fcmovnb
lahf
movsb
stc
and
push
roll
test
mov
dec
inc
in
inc
sub
fidivrl
loopne
sarb
in
setno
cmp
mov
leave
jmp
in
out
adc
cmp
in
div
hlt
jns
ror
inc
or
daa
repz
shl
leave
mov
rcrb
rcrl
sarb
dec
fsts
loope
hlt
jmp
mov
icebp
rcr
cltd
hlt
aas
out
adc
mov
mov
pop
in
xlat
mov
fnop
loope
push
jge
dec
repz
rcrb
rol
pop
pop
roll
dec
xor
mov
aas
inc
cmp
jno
mov
mov
jbe
jo
clc
repz
std
xchg
cltd
sbb
adc
push
sub
dec
ss
mov
div
lcall
rcll
daa
xor
insb
and
icebp
add
imul
xchg
cltd
mov
and
sbb
jne
int3
leave
jae
leave
daa
out
cmpsl
jmp
mov
jns
fpatan
lahf
andb
xor
flds
jg
or
icebp
rcrb
mov
dec
xlat
shl
xlat
popf
and
cmc
sub
das
lret
dec
and
rcll
pop
pop
add
pop
scas
mov
out
mov
pop
mov
and
cmp
pop
pop
mov
or
jecxz
movsb
push
rorb
rcl
xchg
inc
sub
lret
sub
and
nop
jg
call
leave
imul
mov
jge
lea
pop
add
push
adc
mov
dec
push
idivb
test
inc
xchg
clc
test
aas
add
leave
mov
in
test
adcb
jns
repz
in
push
dec
ficomps
push
push
push
idivb
subb
in
insb
push
repz
rolb
divb
test
rcr
push
test
cmp
mov
shr
and
nop
cmp
dec
jno
inc
pop
xor
pop
dec
out
addb
mov
mov
shr
outsb
cmc
add
loopne
lret
add
fwait
mov
outsl
stos
sti
mov
rcl
cmc
pop
dec
xor
cltd
mov
cmp
and
sub
jmp
xchg
jns
rcl
mov
out
xchg
jae
ret
xor
aam
or
xor
das
push
hlt
loope
mov
xchg
mov
dec
test
sub
leave
rcrl
jl
jno
dec
cmp
shr
and
gs
and
ja
jmp
xor
push
rcrb
faddp
xor
sub
pop
lds
popa
enter
orl
enter
rcl
fists
mov
pop
iret
xor
sbb
dec
in
rcl
xchg
pop
add
ljmp
movsb
mov
push
fidivs
xor
pop
shlb
rorb
xor
inc
shll
cmp
roll
popa
shlb
pop
fidivrs
xchg
or
inc
jae
inc
pop
mov
cmp
das
int3
insb
loope
ljmp
push
adc
cmpsl
fistps
call
adc
sahf
push
inc
pop
sahf
push
inc
in
repz
fstps
pop
nop
aad
mov
in
inc
andl
mov
out
dec
shl
inc
rorl
mov
dec
adc
aaa
ret
shufps
lret
rcrl
pop
aam
sub
jecxz
mov
repz
gs
leave
add
jle
leave
call
or
jns
push
hlt
xchg
rolb
cmp
xor
pusha
rcl
xor
mov
fmull
pop
cmc
rcl
leave
lds
mov
xor
in
jge
icebp
ljmp
jge
aaa
mov
rcl
lcall
ds
dec
or
xchg
ret
into
in
leave
sarl
repz
addr16
pop
roll
dec
rorb
cmp
inc
push
ret
inc
shrl
xor
mov
repz
xor
and
jp
rcll
jmp
pop
icebp
in
movsb
inc
call
jns
test
mov
cmc
in
jmp
adc
ljmp
rcll
iret
vxorps
jmp
inc
xor
adc
or
sub
push
dec
jg
pop
leave
mov
rcll
inc
icebp
jmp
rcr
push
push
xor
jmp
cmp
adc
in
jp
cli
mov
mov
adc
ret
jmp
fnstsw
mov
fnstsw
jno
ret
push
pop
inc
or
sarl
mov
adc
pop
sub
int
sbbl
jne
fsts
jg
adc
mov
jne
shl
popa
xor
pop
fdivrl
call
cmc
ror
repnz
in
xor
rclb
mov
push
sbb
insl
loope
les
add
ret
roll
add
in
mov
jmp
sbb
imul
rolb
dec
mov
repz
rcl
rcrb
imul
jmp
sbb
fwait
xor
xor
rcll
xor
xor
xchg
or
push
fadds
mov
sub
dec
ret
leave
imul
and
shll
notl
and
rcrb
aad
rorl
push
ret
in
push
jns
imul
movsl
int
mov
fsincos
adc
jmp
in
inc
inc
push
in
xchg
jecxz,pt
rcrb
cmp
inc
dec
dec
repz
leave
popa
cmc
and
adc
inc
insl
call
cmp
shrb
jb
stc
jmp
fisttps
movsl
xor
dec
movl
lds
int
jae
ds
cmc
addb
fnop
add
mov
mov
test
sub
sub
mov
jmp
sbb
xchg
leave
lds
sbb
lds
in
add
mov
dec
les
shrl
jecxz
rolb
int
jns
jb
mov
push
hlt
ret
and
outsb
rorb
push
out
int
push
lods
add
lds
test
std
fs
vpmaddwd
jns
repz
outsl
adc
pop
int
dec
sub
inc
in
fists
rcll
shr
xor
sub
inc
std
clc
jmp
pop
sbb
icebp
dec
push
out
inc
xor
out
pusha
push
inc
rol
faddp
into
adc
xchg
divb
test
hlt
mov
iret
cld
shll
jns
pusha
mov
cltd
push
movsl
xor
paddsw
insb
jne
rcrl
insl
leave
mov
arpl
sbb
test
cmpsb
jmp
xor
das
adc
lds
sbb
fnsave
mov
fadds
enter
rolb
xchg
cmc
fsincos
mov
sar
int
mov
cmc
pop
testl
cmc
mov
popf
rorl
pop
ret
aaa
aad
or
inc
adc
or
fcmovnb
int
mov
scas
ja
mov
jae
rcll
inc
dec
dec
xor
daa
aad
or
inc
cmc
shr
cmc
dec
mov
mov
xchg
aad
or
cmc
push
inc
dec
dec
ret
cmp
sub
rcll
outsl
cmc
jnp
dec
cltd
ret
xchg
shr
test
mov
cmpsl
test
stos
cmc
xchg
jns
insl
aad
or
cmp
pop
cmc
add
loopne
push
push
mov
sbb
inc
jp
loope
leave
rol
rcl
mov
jge
imul
dec
dec
and
add
repz
cmc
xlat
int
mov
jno
push
or
aaa
shll
cmc
adc
sti
aad
or
jns
scas
icebp
mov
aad
or
pop
shll
sbb
mov
mov
popf
shll
imul
or
inc
or
rorl
shrb
aad
push
xchg
cmc
insl
push
dec
inc
ret
xor
and
sar
cmc
in
rorl
ret
mov
xchg
jp
xchg
ja
jg
popa
cmc
xor
daa
add
ror
sbb
or
dec
jecxz
rcl
push
push
sarl
dec
ja
gs
or
xor
pop
dec
cmc
ret
loope
fisttps
ret
inc
mov
pop
xor
enter
xor
ret
xor
sub
enter
jnp
lods
popf
dec
ja
cmp
mov
arpl
adc
push
inc
jnp
leave
cmc
lret
enter
popa
mov
push
add
aad
xor
ret
adc
cmpsl
fcmove
jle
ror
jmp
sbb
adc
inc
inc
rcrl
imul
stos
or
fst
jmp
in
dec
xadd
je
int
rol
jne
xchg
cmc
cmpl
dec
or
inc
add
fisttpl
sarb
or
jns
push
cmc
inc
cmp
aad
or
inc
jmp
jae
mov
jne
arpl
imul
daa
dec
adc
or
inc
int
mov
dec
ret
jno
or
icebp
add
cmp
dec
inc
ret
push
aad
or
rcrl
mov
aad
or
dec
sbb
das
shlb
cmc
addr16
cltd
ret
xchg
aad
cmc
mov
leave
fildl
sar
cmc
add
dec
sbb
and
dec
cmc
pop
popa
dec
jae
xchg
test
icebp
sbb
in
ret
or
sbb
das
inc
xor
inc
add
enter
roll
cmc
cmc
sti
dec
jmp
fst
rorl
inc
mov
adc
pop
rorl
cmp
mov
push
mov
mov
mov
inc
enter
cmc
add
inc
aad
or
jno
xorl
fisttpll
lret
in
rorl
lods
and
adc
and
test
or
pop
dec
and
inc
pop
rcll
fwait
inc
or
loopne
scas
popa
hlt
xor
cmc
int3
pop
mov
mov
cmp
loop
test
mov
fincstp
shlb
leave
in
leave
in
out
out
stc
clc
dec
sti
ret
cli
aad
or
inc
call
cmc
icebp
lock
repz
repnz
or
inc
not
div
or
dec
or
or
or
rorl
cmc
add
dec
add
add
add
roll
cmc
sbb
dec
sbb
sbb
sbb
rcrl
cmc
adc
dec
adc
adc
adc
rcll
cmc
sub
dec
sub
sub
sub
shrl
cmc
and
dec
and
and
and
shll
cmc
cmp
dec
cmp
dec
aad
or
jno
mov
ror
imul
rorl
cmc
adc
dec
ds
dec
aad
or
jns
jbe
test
push
aad
or
inc
repz
cmc
push
sub
ret
dec
aad
or
js
jg
adcb
jnp
hlt
inc
enter
cmc
sbb
dec
xor
or
mov
xchg
cmc
mov
dec
xlat
ret
in
cmc
or
inc
adc
cmp
dec
pop
dec
insl
ret
jle
addb
cmp
das
imull
sub
xchg
notb
lock
pop
mov
pop
loope
and
daa
std
push
sub
and
xor
scas
jbe
jno
adc
adc
cli
movsl
fisubrs
adc
loopew
into
notb
inc
adc
cmp
sub
cmp
das
enter
jle
push
jno
jmp
es
lea
push
arpl
lcall
or
jmp
jns
cmp
and
not
fildl
or
or
fimuls
sub
add
das
mov
cmpsb
mov
aad
cld
es
into
pop
cmovne
push
lds
pop
jp
stc
cmp
ljmp
and
enter
mov
add
rclb
sti
outsl
paddb
mov
in
and
jecxz
add
and
or
inc
iret
or
int
add
lcall
and
mov
pop
sub
sbb
jle
repz
imul
push
bnd
cmpsb
cltd
insl
cmp
push
mov
incl
sti
cmp
and
pop
xchg
cs
lcall
xor
aaa
fcmovnu
aam
lds
push
iret
imul
jl
pop
loop
leave
xor
pop
add
mov
dec
movsb
cld
in
repnz
adc
and
ret
daa
add
jmp
push
iret
scas
sub
test
sub
sub
das
add
insl
iret
add
mov
fldenv
lds
pop
rorl
jmp
es
mov
ret
inc
or
and
shrb
cmp
in
and
push
xlat
adc
mov
xor
and
xor
add
inc
jp
hlt
cmp
pop
nop
jg
xor
js
xor
cs
pop
fcom
idivl
nop
repnz
sub
push
adc
cld
dec
push
mov
or
pop
dec
add
cmp
mov
mov
and
imul
xchg
js
mov
loopne
xchg
outsl
lret
cmp
clc
jmp
inc
inc
lock
shlb
imul
push
int
ljmp
or
loope
pop
jecxz
in
stc
and
and
test
xchg
cld
jns
inc
adc
bswap
in
mov
jnp
mov
push
jle
mov
lods
xor
adc
leave
add
shll
leave
xor
xorl
rol
mov
cmpl
add
xchg
lods
rcl
mov
xor
adc
fcoms
jo
pop
cmp
sub
sub
ror
dec
icebp
shlb
andl
mov
test
aad
xorl
dec
xor
mov
add
mov
and
jno
mov
sub
dec
lds
pop
jno
flds
jg
fisubrs
pop
sub
cmc
jmp
and
inc
stc
arpl
je
add
stc
sbb
jo
test
shlb
or
and
aas
aam
jb
push
push
pop
or
divl
or
bound
cmpsb
lret
out
mov
rclb
enter
jmp
xor
dec
mov
cwtl
pop
cli
iret
jns
inc
mov
xchg
test
gs
jle
enter
push
mov
test
xor
xchg
lods
movb
call
lret
dec
scas
lds
repz
inc
mov
movsl
push
jmp
stos
daa
add
dec
mov
cmp
lret
jns
add
add
test
and
and
cmpb
inc
scas
mov
and
lds
sub
add
subl
inc
cmp
cmp
and
add
adc
add
jnp
pusha
icebp
mov
sub
stc
cmp
scas
rclb
out
lds
enter
test
push
ds
add
xor
cmp
loope
insl
jge
addr16
jl
or
adc
or
int
push
test
fmulp
lds
mov
mov
pusha
xchg
and
test
test
icebp
in
sub
jge
roll
js
adc
push
pop
mov
popa
enter
hlt
xchg
jae
icebp
rolb
and
jns
into
out
and
and
ds
hlt
bnd
mov
test
bound
out
lret
mov
mov
mov
mov
iret
xor
add
mov
sub
and
xchg
jb
lods
dec
adc
loop
mov
mov
test
sbb
xchg
sub
frstor
sti
out
sbb
mov
and
into
jno
pop
das
fiaddl
xor
loope
jecxz
in
out
in
cld
clc
movsl
mov
out
push
imul
xor
jo
inc
popa
pop
rcr
mulb
dec
adc
push
add
or
hlt
add
icebp
test
push
or
jbe
out
lret
hlt
lock
dec
in
scas
sarb
sub
inc
movsl
mov
and
cli
lock
dec
sbb
sahf
adc
mov
dec
lock
dec
add
test
sbb
inc
mov
cmpsb
and
negl
rcr
shll
xlat
or
pop
push
mov
loop
iret
xchg
shlb
jle
fadds
daa
fwait
pop
or
add
lods
je
test
sub
adc
pop
adc
sub
outsb
lret
repnz
in
mov
es
out
loop
push
push
mov
hlt
xchg
out
stc
sbbl
loop
insb
adc
push
repnz
push
push
sub
add
xchg
mov
add
dec
jecxz
clc
jne
icebp
push
mov
pop
xor
push
xor
adc
mov
xor
xchg
sub
int
leave
mov
and
and
icebp
es
cmp
icebp
dec
lock
push
in
icebp
insb
jne
outsb
cmp
jge
icebp
jno
adc
inc
popf
loopne
fwait
gs
arpl
jecxz
mov
xchg
add
cmc
icebp
pusha
jg
cltd
cmpb
push
in
jge
arpl
jne
jle
insl
add
cmpl
into
pusha
jp
jne
xchg
repnz
sbb
flds
cmp
mov
pop
jg
mov
imulb
inc
adc
or
in
ret
and
mov
sti
jmp
lds
je
iret
ds
inc
pop
cmp
out
mov
shl
in
xchg
fists
and
dec
iret
adc
and
mov
and
lret
inc
in
rcrb
push
addb
sbb
js
ret
xchg
jg
loope
add
int3
das
push
sub
push
ja
pop
xorl
jno
test
lea
jp
adc
sub
lret
xor
stos
adc
shll
xchg
lock
sahf
mov
jle
rcrb
mov
mov
mov
xlat
ja
mov
jp
push
xchg
subl
mov
imul
es
cmpsl
data16
jl
and
mov
mov
test
lret
into
pusha
xchg
xorl
lahf
push
sub
repz
push
xor
addr16
jp
and
xor
mov
xchg
mov
cmpl
jnp
xor
dec
aaa
jecxz
mov
xor
js
popa
popf
mov
mov
xchg
jae
mov
mov
or
xchg
cmpsl
inc
cli
mov
ret
adc
and
inc
push
rcll
xor
add
mov
or
aad
cli
jbe
or
lods
scas
and
mov
stos
leave
loope
or
push
or
add
xchg
in
ror
lahf
pop
mov
js
int
jg
lods
fs
fbstp
movsl
mov
mov
jmp
push
dec
mov
jns
inc
pop
jo
xor
popf
jg
dec
repz
repz
into
push
sub
in
mov
inc
flds
sub
xchg
and
ja
dec
pusha
aaa
jo
icebp
jmp
cmp
mov
test
insb
mov
movsl
jle
push
xor
insl
add
icebp
sahf
cmpl
dec
stos
jbe
lea
xlat
push
popa
stc
or
cld
enter
mov
mov
cmp
mov
jne
pusha
cltd
sbb
addl
in
and
imul
mov
shll
dec
rcr
fiadds
jne
push
jg
xchg
mov
shl
aam
std
adc
ljmp
adc
shl
inc
cld
roll
sub
iret
adc
es
cmp
and
mov
add
sbb
jnp
std
out
push
icebp
push
sub
dec
pop
jecxz
adc
and
pop
outsb
sbb
aas
aam
cltd
xorl
dec
cmp
mov
test
adc
mov
push
xchg
fwait
mov
es
fucomi
dec
out
or
mov
imulb
adc
cmc
xchg
in
fcoml
add
in
into
sahf
shll
mov
aaa
lds
xor
pusha
clc
sub
sbb
sub
fcomps
repnz
cld
call
fucomip
out
or
cmp
push
pop
and
mov
jecxz
ljmp
sub
test
sub
sub
adc
and
push
push
cld
int3
out
outsl
std
ljmp
sub
cmp
das
adc
push
dec
loopne
roll
imul
loop
in
sti
loope
iret
loopne
repnz
fcomi
sahf
lahf
mov
scas
hlt
mov
ds
xor
in
out
stc
mov
lock
hlt
idiv
push
xor
jecxz
icebp
lock
cmc
mov
and
push
xchg
and
lds
divb
xchg
xchg
mov
outsb
jge
mov
icebp
lret
outsb
int3
or
fildl
shr
jmp
hlt
jg
in
repz
lods
repz
dec
pop
pop
clc
mov
push
imul
dec
mov
mul
es
std
leave
call
cmp
in
xor
pop
ret
shl
aam
lret
movsl
and
notb
ljmp
mov
subb
push
insb
mov
stos
aas
xchg
movsl
stos
jmp
mov
stos
sub
mov
mov
roll
jbe
lret
fcomps
xchg
insl
pop
repz
shll
mov
push
icebp
xchg
push
dec
pop
ret
inc
aad
cmc
inc
cmp
inc
inc
xor
div
hlt
xor
jge
jns
fs
or
imul
cmc
pop
fdivp
add
int3
xor
ds
xor
sbb
xchg
push
mov
mov
dec
mov
shlb
rolb
add
enter
inc
lret
mov
lret
dec
pusha
int
sbb
rorb
shl
into
or
mov
jecxz
mov
aad
lods
and
lret
mov
adc
pop
add
mov
mov
hlt
mov
pop
pop
add
outsl
mov
int3
xlat
daa
fsubs
loopne
jae
xor
or
outsb
lahf
cmc
mov
jge
int3
xchg
mov
fimull
shll
jle
xchg
gs
and
fcom
arpl
ror
fldenv
mov
pusha
cmpb
loope
pusha
dec
addl
loop
jns
rcl
add
rorb
mov
dec
les
arpl
mov
loop
mov
in
cmc
or
xchg
adc
mov
or
and
aam
popa
add
add
or
adc
loopne
ds
loope
jno
cmp
cmp
jle
ja
jecxz
shrl
push
int
jns
imul
dec
inc
inc
enter
in
and
and
mov
cli
test
mov
inc
push
lds
jne
mov
and
inc
lret
jl
sbbb
subb
mov
aas
cmp
out
sub
stc
bound
cmp
jecxz
sarl
fsubl
or
inc
dec
mov
adc
cmp
or
xchg
dec
loop
dec
int3
push
xor
lret
lds
jge
and
cmc
clc
adc
aad
pop
in
inc
stc
movsl
aad
shlb
stc
cmp
clc
ror
push
pop
lret
sub
icebp
sbb
hlt
push
sbb
mov
js
int
and
pop
mov
fistps
pop
pop
xchg
outsl
mov
push
xchg
loopne
dec
mov
sbb
lret
jb
mov
push
jnp
imul
cltd
insl
or
and
fdivrp
int3
repz
leave
fnsave
add
das
in
ds
mov
jns
lock
das
aam
call
loop
into
ret
adc
repz
ret
les
push
xchg
pop
arpl
mov
loope
cmp
dec
shll
add
mov
push
jge
sbb
jecxz
in
pop
cmc
xchg
fsts
mov
push
iret
xor
jbe
sbb
jmp
fstpt
or
das
aad
pushl
int3
in
call
mov
arpl
fisttpll
call
cmc
inc
inc
inc
fstl
dec
test
sti
and
mov
add
cmp
aam
xor
dec
mov
inc
fldenv
outsl
testl
jnp
jecxz
sbb
push
std
sub
loope
mov
xchg
ficoml
iret
into
dec
pop
inc
xor
sub
shll
push
mov
jns
mov
icebp
lock
mov
in
aad
xor
xor
inc
div
sbb
push
popf
cmp
icebp
lahf
popa
and
test
mov
sbb
call
hlt
cltd
call
insl
sub
popa
into
mov
stos
icebp
outsl
xchg
mov
jnp
nop
inc
cmpsl
mov
cmpsb
mov
xlat
inc
loopne
mov
rorl
leave
push
clc
cmpb
ss
jne
or
enter
lock
jmp
mov
ficoml
adc
psllw
out
mov
enter
icebp
imul
and
pop
mov
lret
mov
xchg
mov
loope
loope
dec
mov
cli
loope
push
shlb
mov
ror
cmc
push
testb
pop
mov
popf
in
int
add
fnstenv
jp
dec
mov
int3
xlat
jno
divb
lret
xor
cwtl
aam
jno
mov
push
rcll
dec
xor
icebp
and
adc
ss
loopne
call
inc
inc
loopne
jge
or
jns
icebp
icebp
stc
test
cwtl
mov
fnstcw
cld
les
mov
hlt
rcll
pop
loop
loopne
xor
sbb
rcll
lea
fmuls
mov
roll
loope
les
flds
test
xchg
xor
inc
mov
shl
mov
inc
icebp
pop
popf
rcrl
hlt
imul
inc
jno
mov
scas
nop
push
stos
into
xor
psubd
cli
stc
xor
mov
jno
xchg
scas
nop
or
imul
mov
mov
hlt
push
fisubrl
dec
popa
inc
lds
shll
mov
adc
movups
mov
lods
add
xor
popa
dec
out
rolb
mov
pop
fsts
xorb
fmulp
add
push
mov
cmp
dec
call
ret
adc
dec
xor
adc
xchg
jmp
adc
adcl
dec
icebp
pop
mov
scas
dec
sbb
xchg
popa
push
enter
push
rcr
mov
mul
shlb
imul
sbb
idivb
pop
in
push
mov
shlb
loope
into
xor
xchg
mov
loop,pn
cmp
mov
icebp
das
dec
loope
inc
fsts
in
leave
adc
leave
stc
mov
shll
mov
xor
shll
pop
mov
xorb
cmp
add
and
inc
mov
xor
cmc
icebp
hlt
ret
stc
pusha
xor
mov
mov
push
push
xor
ss
jns
loope
aas
xor
jno
add
stc
sarl
pop
dec
nop
faddp
rcrl
jmp
lds
sbb
repnz
nop
inc
inc
mov
mov
push
mov
loope
cs
movsl
pushl
ret
cltd
je
mov
pop
leave
call
mov
icebp
jbe
adcl
nop
add
xor
ja
mov
inc
jbe
jno
xchg
jae
shll
mov
push
or
or
movsb
nop
add
mov
xor
loope
mov
test
les
icebp
loop
sbb
or
sub
addb
sub
sbbl
mov
mov
cmpsb
pushl
ret
rcrl
fwait
mov
addr16
leave
roll
lcall
mov
xchg
push
and
test
xor
fxch
mov
cli
sub
adc
inc
mov
dec
dec
icebp
into
mov
cmc
xchg
cmp
xchg
jno
pop
aad
cli
stc
rcll
stos
jbe
jae
stos
mov
out
roll
call
sbb
jmp
mov
lods
xor
mov
add
push
scas
test
mov
dec
lods
aas
ss
xchg
mov
mov
mov
inc
stc
mov
shll
iret
dec
hlt
jns
imul
movsl
inc
lds
and
mov
xchg
cmp
mov
icebp
out
or
xchg
je
xchg
push
mov
jns
jae
xor
aam
loopne
fnstenv
repnz
push
or
jb
test
leave
test
sbb
mov
mov
mov
ljmp
ret
shrl
jne
fiadds
xorb
inc
ffree
cwtl
xor
scas
xor
dec
enter
outsl
sarl
cmp
pop
enter
mov
leave
xor
rcl
pushl
xchg
aad
add
loopne
call
icebp
enter
mov
add
sbb
push
xor
jne
or
mov
jne
loop
shll
aad
and
adc
les
popa
popa
xor
imul
mov
int
xor
adc
xorl
cmc
push
repz
js
inc
push
mov
or
push
add
xor
and
nop
inc
push
jecxz
enter
jo
mov
mov
fsub
xor
mov
rolb
jne
jb
mov
jbe
leave
int3
jno
push
xor
xor
rorl
dec
roll
inc
mov
int
dec
cld
mov
mov
jns
push
mov
or
popf
dec
push
into
loopne
mov
loopne
dec
call
dec
repz
iret
dec
rorb
outsb
out
fldcw
fmuls
ror
push
push
push
mov
sub
jecxz
pusha
or
pop
leave
inc
shlb
and
adc
xlat
enter
insl
out
sbbb
sub
and
mov
jbe
adc
fmull
inc
loope
divb
inc
in
stc
dec
popa
pop
loope
dec
inc
ffree
rcll
dec
inc
mov
xor
push
cmp
rorb
cmpsl
mov
imul
jge
aam
mov
loope
fs
faddl
cmp
aaa
push
mov
icebp
aaa
mov
inc
pop
pop
popa
inc
adc
mov
jno
xlat
xchg
mov
adc
pop
jmp
adc
dec
mov
jae
inc
mov
pop
xorl
mov
fnsave
mov
sub
ljmp
sub
xor
dec
jb
pusha
ror
mov
cmp
pushf
addr16
popf
sub
sub
or
test
mov
rcr
xor
and
and
xchg
xorb
loopne
mov
dec
test
sahf
push
mov
dec
loope
inc
scas
mov
or
andl
orb
mov
mov
loope
sti
xchg
les
mov
sbb
mov
lret
xor
mov
cltd
popl
imul
mov
sub
shl
mov
mov
fyl2x
std
mov
mov
jns
mov
adc
das
pop
aam
xor
jg
jae
movsb
fisubs
add
das
shlb
movsb
jo
data16
loop
mov
add
inc
jp
jmp
shl
mov
imulb
jns
lret
cli
divl
stc
icebp
aam
shrl
icebp
or
mov
leave
sbb
xchg
push
sbb
pop
lcall
lock
mov
cmp
into
jne
sub
roll
cmp
add
xor
jns
sub
inc
fsts
test
stc
das
mov
mov
int3
xor
xchg
pop
loope
test
ret
popa
xchg
mov
jns
xor
mov
sub
sbb
adc
roll
test
icebp
lods
fs
cltd
ja
cmpsl
loope
mov
pusha
icebp
jae
add
out
fadd
push
adc
dec
rolb
mov
or
mov
xchg
shlb
pop
iret
orl
adc
sbb
mov
cwtl
push
push
loope
push
adc
mov
fmull
dec
repz
shll
insl
cmp
shrl
lea
adc
add
loope
pop
adc
into
leave
pop
and
pop
jmp
loope
and
loope
lret
adc
aam
sub
jno
stc
push
adc
mov
cltd
jno
repnz
or
les
jns
movntps
cmp
xchg
mov
sbb
add
mov
insl
add
and
jmp
pop
popf
test
or
sbb
inc
mov
and
pop
adc
pop
call
adc
mov
popa
pop
stc
lock
push
ljmp
push
flds
and
sbb
fstps
add
or
hlt
add
fbld
aam
mov
hlt
push
mov
xlat
xor
mulb
rorb
dec
repnz
or
rclb
xchg
or
mov
jno
add
or
push
and
push
iret
rcrl
test
xor
inc
adc
sarl
rcrb
pop
rcll
mov
out
popa
push
mov
icebp
cmp
dec
pop
pop
mov
js
fnsave
pop
mov
std
ss
dec
xor
xchg
into
pop
popf
mov
icebp
cmpsl
jbe
xor
mov
clc
fldl
js
jno
lods
cmp
std
mov
scas
push
ja
out
cwtl
lods
push
mov
jecxz
pusha
mov
pop
jle
pop
mov
in
push
js
push
jmp
mov
mov
cmp
mov
lds
nop
cmp
les
mov
jne
bound
pusha
jno
loop
inc
jno
int
shll
hlt
sbb
xlat
push
xorl
in
fstps
dec
push
call
push
leave
flds
add
mov
jnp
call
jecxz
int
popa
std
cltd
sbb
and
ljmp
xchg
adc
inc
jge
cmp
cmp
mov
sub
test
lods
icebp
icebp
data16
popa
cmp
mov
mov
fldcw
fsubl
lret
jne
mov
outsb
out
mov
xor
jmp
mov
add
inc
jb
push
shll
xchg
xchg
jbe
lret
jne
mov
gs
popa
inc
or
dec
imul
mov
adc
cs
pop
lahf
dec
xchg
jmp
fmuls
inc
rcrl
icebp
lcall
inc
mov
rcl
shrl
push
sbb
jecxz
loopne
push
iret
inc
dec
cmp
cmp
les
xchg
mov
cmpsl
jno
enter
add
xlat
imul
mov
jno
in
inc
icebp
mov
daa
dec
ret
add
jge
push
enter
mov
and
enter
rol
bswap
cwtl
in
and
enter
ret
loope
call
aam
or
aad
dec
out
adc
pop
xchg
pop
stc
enter
aad
or
sub
into
popf
push
fisttps
shl
cmc
sti
cli
dec
in
in
pop
popa
ja
enter
test
mov
std
inc
cld
shl
cmc
out
out
inc
inc
cmp
or
rcl
icebp
or
sarb
mov
enter
or
repz
mov
mov
or
shlb
add
icebp
je
pop
flds
repz
or
int
shrl
fst
mov
mov
mov
hlt
lret
fsts
stc
sub
adc
in
ret
movb
jno
sar
jnp
jb
vcvtpd2ps
sub
add
out
xchg
int3
lcall
xor
jle
dec
enter
dec
addr16
stc
mov
sahf
lcall
or
add
cmpsl
mov
cs
outsl
xchg
cmp
scas
adc
cli
jle
push
jno
aad
xor
jbe
fistpll
add
lahf
add
icebp
xorb
mov
mov
into
loop
into
mov
and
xor
bound
mov
push
jle
rcll
lods
fstpl
mov
scas
ficomps
mov
sub
inc
add
leave
mov
mov
movsl
lret
mov
cmpsb
dec
or
mov
cmc
gs
mov
mulb
jmp
aad
lds
mov
xchg
movb
push
adc
pop
sbb
mov
jecxz
mov
mov
mov
mov
mov
mov
movq
xor
pusha
and
rcll
scas
fistps
mov
lods
fcompl
outsl
das
pop
pop
push
adc
mov
sub
sbb
mov
mov
cmpsl
enter
mov
je
movsb
dec
or
mov
mull
dec
or
mov
hlt
fs
stos
fistpl
xchg
test
cwtl
mov
xchg
les
push
pop
inc
pop
push
push
adc
add
lret
xor
cld
mov
icebp
pop
xor
mov
shll
mov
rorl
imul
push
xor
jno
xchg
cmpsl
jg
cmc
imul
mov
add
scas
and
dec
arpl
gs
adc
icebp
in
mov
mov
fcmove
aam
out
or
xor
mov
or
cltd
ret
shlb
mov
rolb
adc
ucomiss
cwtl
and
cmp
cmp
lods
sub
adc
loope
mov
shlb
loope
fyl2x
test
mov
idivb
mov
add
movsl
data16
loopne
dec
cmp
icebp
icebp
test
push
xchg
cltd
pop
push
or
mov
mov
pop
fcomps
or
and
test
mov
cmp
cmp
loope
pop
inc
or
mov
cmp
call
repnz
arpl
pop
loope
enter
rolb
shlb
push
cmp
ret
jnp
xchg
push
adc
aad
in
enter
cmp
ljmp
add
sbb
push
dec
or
fwait
jo
push
psubsw
cmc
and
add
jno
stc
or
push
inc
xchg
inc
and
mov
and
lds
mov
sbb
shll
push
mov
icebp
mov
and
sub
pop
mov
imul
test
int
mov
call
push
in
adc
sub
scas
or
inc
jmp
call
and
sub
jns
rorb
push
push
sbb
cltd
aad
cmp
out
dec
aam
daa
mov
adc
cs
leave
in
sbb
or
xor
popa
inc
cltd
ret
inc
enter
cmc
cmpsl
icebp
lds
les
aad
or
shl
sarl
popa
jecxz
enter
or
adc
rcr
imul
xchg
adc
xchg
rorl
cs
dec
aad
repz
mov
rcl
jge
mov
cmc
popa
sarl
repz
or
ja
mov
mov
icebp
enter
fcoms
loopne
add
push
icebp
sbb
dec
cmc
sub
dec
cs
movsb
pop
mov
sbbl
int
ja
rcrb
in
pop
scas
mov
cmovg
dec
push
loopne
sbb
inc
pop
push
fsts
jns
icebp
jne
nop
lret
dec
cs
ret
shrb
hlt
xchg
jbe
jae
test
cmp
les
add
inc
in
cmpl
repnz
push
cmp
sub
add
rcr
adc
and
jno
sub
push
shrl
stc
cld
pop
cmc
ret
push
in
enter
das
leave
fiadds
or
call
cmc
sub
and
sar
or
jns
sbbb
ss
in
shl
mov
aas
inc
je
xchg
scas
inc
push
in
inc
xchg
leave
and
je
xchg
in
xchg
loope
mov
fimull
test
js
repnz
pop
jo
addr16
mov
dec
out
into
mov
cwtl
leave
and
leave
cmc
ret
cmp
inc
lret
loope
jbe
fimull
faddp
inc
xchg
rolb
xchg
jmp
xchg
inc
arpl
das
adc
aas
mov
xchg
jno
pushf
icebp
mov
test
pop
enter
adc
ja
jecxz
or
arpl
inc
int
or
iret
sti
sub
or
or
cmpsl
into
les
sub
int3
pop
push
push
movsl
ficoml
popaw
fwait
cli
sub
sub
andb
push
pushf
lock
mov
xor
and
repnz
cs
push
sub
jle
out
inc
sub
sbb
lea
mov
ja
sub
xor
adc
and
hlt
add
jecxz,pn
lcall
push
cmc
push
int3
push
or
fldenv
arpl
add
mov
mov
sti
aam
mov
push
popf
xchg
pop
iret
mov
or
repnz
jae
hlt
cmp
mov
or
cmc
cmpsl
jg
or
and
lds
add
hlt
cmc
lods
and
icebp
cmp
mov
cmp
pop
adc
movsb
push
aad
enter
pop
ret
roll
mov
xchg
repz
xchg
cmp
call
and
xchg
mov
and
jne
leave
sub
sti
jge
sub
inc
and
adcl
jge
mov
repnz
inc
lods
jne
decl
loop
fsubl
test
clc
mov
or
jg
mov
push
jmp
sti
add
mov
and
cli
mov
dec
pop
cmc
pop
push
xor
mov
out
rcrl
dec
mov
shrl
cld
mov
movb
push
cmp
jl
pop
adc
mov
lock
lea
jg
mov
rclb
loopne
hlt
loope
in
mov
xchg
mov
rcll
add
iret
inc
mov
jns
testb
repnz
xor
inc
dec
les
push
fmul
out
jmp
mov
dec
rol
rolb
jne
push
pop
lock
popf
sub
scas
int
loopne
dec
stos
push
ja
stc
push
leave
loopne
pop
shr
or
out
jno
rcll
jmp
sub
push
out
jno
lock
push
mov
icebp
xor
xlat
mov
fsts
sub
lret
or
mov
test
pop
pop
xlat
xor
rcrl
repnz
jl
jne
mov
pop
jmp
popa
rcl
std
push
sbb
rolb
sti
push
mov
add
jbe
mov
xchg
sub
mov
and
insl
mov
or
dec
ror
stc
jmp
stc
inc
aad
dec
pop
stc
pop
jno
addr16
push
scas
pop
sti
sub
cmp
jno
stc
inc
jbe
adc
pop
mov
lahf
mov
stc
lods
jns
pop
nop
sbb
mov
inc
xchg
xorl
add
shll
inc
sarb
inc
leave
mov
jns
push
dec
imul
push
jno
sbb
adc
cmp
pop
aam
in
mov
adc
dec
ret
add
adc
jle
and
ficoml
inc
hlt
add
jns
jg
insl
push
cmp
sti
frstor
pop
xchg
sub
adc
inc
cmp
mov
mov
std
mov
pop
sbb
dec
enter
aaa
pusha
rcl
mov
and
frstor
std
lds
leave
loopne
jmp
rcrl
aad
icebp
loope
cmp
add
popa
xchg
orl
in
mov
or
leave
test
adc
lret
arpl
adc
mov
lods
and
xchg
and
aam
xor
mov
sbb
pusha
and
clc
mov
loop
rol
mov
and
push
xor
pop
xor
std
loope
mov
or
and
or
das
and
lods
adc
hlt
outsb
or
push
sub
mov
sti
stos
add
cs
adc
cmc
cs
xor
sbb
adc
jns
add
leave
add
ficompl
pop
clc
jg
cmpsb
loopne
push
lds
subl
sub
enter
push
insb
lahf
jecxz
add
shrl
imul
and
adc
and
ja
mov
mov
fs
ja
loopne
mov
push
push
mov
out
push
leave
loope
mov
jecxz
sbb
pop
pop
lds
inc
pop
push
mov
or
push
mov
push
stos
dec
jecxz
add
cltd
xor
dec
imul
push
andl
cmc
inc
out
pop
pop
icebp
mov
call
or
icebp
outsb
pusha
mov
call
push
cltd
fs
lsl
add
popa
icebp
lret
fisttpll
jg
push
repnz
sti
out
sarb
icebp
mov
fnstcw
xlat
sbb
sub
add
div
insb
sub
stos
test
aad
rcr
push
or
adc
pop
or
inc
xchg
add
or
sti
cmp
scas
mov
pop
cmp
and
jge
es
lea
orb
jmp
stc
insb
ja
sar
or
mov
int
add
cmc
cmp
and
mov
into
xor
mov
adc
dec
or
jns
lea
in
rorl
sbb
fidivrl
mov
xchg
out
jg
into
cmp
leave
lock
cmc
lds
sti
adc
daa
int
push
ficoms
lret
pushf
test
pop
inc
popf
or
mov
adc
lock
xchg
adc
scas
nop
adc
pop
into
notl
in
and
enter
sbb
or
sbb
add
cmc
jecxz
cmp
icebp
sar
xor
add
xor
mov
idivl
lret
add
lds
aaa
int3
call
jae
rol
add
leave
lock
std
mov
shl
lock
shll
xor
lds
xchg
iret
rorb
scas
push
xchg
test
push
repz
iret
or
push
cmp
add
loope
jl
jg
testl
sbbl
mov
sbb
add
iret
int3
cmp
lods
jae
testb
std
push
or
lock
ret
add
out
loope
stc
ret
in
shll
adc
sub
sub
cmp
fnstsw
icebp
jmp
fs
lret
repnz
cltd
and
adc
adc
pop
mov
sub
sub
movsl
fildl
xchg
in
and
sbb
movsb
xchg
filds
sub
mov
in
mov
inc
pop
out
arpl
mov
sub
clc
mov
bound
adc
in
inc
stc
pop
dec
lock
shlb
icebp
aad
dec
inc
sub
pop
xlat
sub
hlt
push
rcll
sub
insb
arpl
cmc
and
sub
out
and
lahf
fs
cwtl
xchg
sbb
and
clc
add
pop
sub
mov
stc
xchg
lds
aad
adc
dec
adc
lds
jae
sahf
leave
ds
mov
in
cli
aam
jmp
jne
aaa
out
jae
mov
rcr
movsb
xchg
push
repnz
cmpsl
inc
pmovmskb
sbb
or
into
dec
rcl
add
pop
sti
adcl
pop
hlt
add
cmpl
pop
negl
add
rcrb
loope
and
xor
dec
xchg
inc
xchg
lahf
rcrl
iret
or
add
sub
ljmp
mov
mov
jae
rclb
lret
push
ja
scas
ds
push
mov
pop
jno
inc
icebp
xor
ds
push
cmp
mov
loopne
gs
aam
cmp
mov
cs
mov
push
aam
mov
push
rorl
xlat
mov
cld
dec
push
leave
mov
dec
scas
adc
adc
sarb
rorl
movsl
vmovsd
jecxz
leave
in
shl
std
lods
or
in
inc
pop
adc
sbb
out
in
leave
addr16
call
add
adc
xor
shr
mov
xlat
mov
xchg
jge
sbbl
clc
shl
pusha
jne
inc
jmp
inc
test
jmp
push
sub
cltd
imul
loop
rorb
in
or
fisttpl
push
jne
jnp
neg
cmp
sarl
mov
jae
jle
mov
mov
in
mov
jmp
leave
xor
lock
xchg
mov
sub
mov
ret
and
cmp
std
mov
ret
lods
add
and
decl
jmp
inc
out
call
ljmp
shr
mov
in
adc
push
aad
ljmp
icebp
jmp
dec
sub
aaa
pusha
int
cmp
jle
sub
test
test
mov
sbb
mov
cmpl
and
imul
out
test
cmp
pop
inc
pop
pop
out
icebp
pop
adc
sbb
dec
mov
loope
lcall
lock
notl
add
xor
mov
shrl
fucomi
out
jbe
ret
jns
rol
mov
sar
not
mov
mov
xor
rcrl
loopne
lret
inc
mov
fyl2x
xor
int
icebp
enter
sbb
and
gs
or
cli
sbb
popa
pop
testb
pop
adc
xchg
mov
cmc
mov
rorl
cmp
cmp
or
shlb
lds
lds
imul
lds
mov
icebp
cmc
rcll
add
lock
add
cmc
and
add
inc
popa
movsl
lret
cmc
jno
adc
cli
add
test
lds
cmc
dec
out
inc
xor
xor
and
push
sti
sub
sub
mov
add
notl
jns
xor
mov
mov
xor
loopne
push
dec
jne
cvtps2pd
xor
cmc
add
cmp
add
inc
sbb
icebp
cmc
push
push
lds
mov
xor
xchg
sbb
icebp
or
xor
sbb
rorl
les
push
std
xor
mov
xor
dec
adc
cmc
imul
add
icebp
or
std
mov
jns
add
cmp
cli
jmp
add
pop
cmp
cmc
call
mov
jns
insb
sbb
add
mov
add
mov
mov
vpextrw
lds
dec
sub
hlt
cmp
mov
dec
pop
and
jns
insb
sbb
add
cltd
leave
add
roll
dec
rorl
push
sbb
mov
lds
pop
sbb
outsb
rolb
lds
roll
mov
add
lds
dec
orl
cmc
dec
lds
cli
add
popa
cmp
push
lds
leave
cwtl
loopne
lret
add
cmp
dec
loope
mov
shrb
nop
cmp
fwait
mov
push
jecxz
stc
pop
add
jge
dec
push
cmc
add
cltd
flds
jae
add
xor
icebp
or
jns
sub
lock
push
mov
xor
mov
inc
pop
lds
push
mov
sbb
cmc
call
add
pop
sbb
mov
loope
lds
add
lahf
mulb
xor
rcl
icebp
cmp
cmp
or
les
mov
sbb
flds
ljmp
or
rcr
mov
xchg
dec
add
cmc
pop
or
xchg
neg
xchg
jno
xchg
shr
add
cmc
lds
daa
out
rcrl
jns
jmp
stc
jecxz
mov
lock
aas
inc
mov
out
xor
daa
cmc
mov
insb
loope
aam
jno
lds
test
lds
jmp
rcrl
das
mov
stc
sbb
adc
cli
add
and
sbb
add
cmc
pop
or
mov
sbb
inc
mov
test
push
mov
jmp
stc
pop
lds
add
xor
xchg
add
cmp
cmc
cltd
pusha
lds
push
xchg
mov
dec
test
icebp
or
roll
cmp
add
icebp
mov
sbb
and
adc
add
adc
daa
pop
leave
jne
mov
dec
rol
fwait
mov
jmp
mov
push
les
add
cmc
cmp
adc
dec
pop
pop
rcll
dec
push
std
add
pop
test
lods
add
pop
mov
repz
shl
pop
loope
adc
sbb
dec
xchg
add
jmp
std
popa
dec
xchg
inc
and
sarb
pop
roll
shll
leave
mov
fldcw
mov
dec
icebp
pop
jbe
dec
sbb
lahf
idivb
mov
jmp
popf
add
cmp
push
adc
jne
sbb
leave
notl
fimull
mov
cmp
fimull
mov
sbb
or
mov
jae
adc
cmp
add
insl
icebp
dec
mov
or
loope
stc
xchg
inc
sub
inc
mov
jns
inc
xor
int
push
leave
testb
cmc
mov
dec
mulb
jge
jbe
mov
leave
add
icebp
nop
stc
adc
xor
jne
sub
loope
jmp
call
icebp
add
inc
das
shll
flds
jmp
push
std
inc
mov
fisttps
stc
jne
in
popa
mov
icebp
leave
add
adc
in
pop
mov
and
ficompl
adc
and
jmp
std
jmp
loope
add
jmp
or
xchg
adc
xchg
sub
or
mov
roll
mov
sbb
sbb
mov
sbb
fimull
push
cmp
inc
xor
mov
pusha
mull
shrb
mov
jmp
inc
mov
mov
jnp
inc
mov
lret
pop
or
pop
jmp
les
mov
mov
imul
mov
mov
out
mov
mov
inc
cmp
xchg
push
mov
icebp
sbb
adc
sub
roll
pop
test
aaa
leave
add
sar
xor
adc
jns
mov
ljmp
daa
xor
jmp
or
shr
sbb
pop
dec
inc
sarl
lret
nop
imul
dec
stc
cltd
insb
dec
xchg
rcll
adc
rclb
and
adc
popa
mov
adc
jne
sbb
adc
or
dec
or
mov
sbb
mov
mov
cmp
dec
mov
popf
rclb
leave
rorb
dec
ror
adc
jecxz
out
jmp
or
push
cmc
add
dec
adc
jmp
nop
xor
shrb
cmp
rcll
roll
cwtl
repnz
dec
jno
lahf
bnd
test
mov
test
inc
cmp
jae
out
rcll
jbe
dec
loope
adc
cmp
dec
mov
repnz
loopne
add
cmc
adc
aad
sub
jbe
dec
sbb
rcrb
ss
leave
sub
push
pop
loope
arpl
mov
mov
mov
dec
cmp
push
jmp
call
sub
icebp
stc
inc
or
mov
add
leave
testl
xor
dec
ret
mov
sub
rcll
leave
fildll
loope
loope
dec
je
jecxz
mov
xchg
mov
adc
or
imull
std
fincstp
call
icebp
or
mov
flds
fsts
mov
fimull
jecxz
inc
aad
or
outsb
and
mov
cmc
lcall
mov
ror
mov
imull
imul
arpl
fcomip
popa
mov
mov
dec
jne
std
jmp
add
es
inc
cmp
call
mov
mov
xchg
roll
jmp
adc
arpl
mov
shrl
pop
insl
push
ret
cmp
fnstenv
push
roll
leave
rolb
pop
mov
adc
std
push
adc
das
xchg
jno
mov
mov
inc
sbb
mov
popf
sub
jmp
call
call
out
add
mov
cmp
fimull
cmp
and
loope
inc
jno
push
fs
jp
add
shl
cltd
mov
cmpsl
dec
shll
inc
test
jbe
dec
pusha
adc
xchg
loopne
xchg
add
or
mov
sbb
pop
dec
jbe
dec
ja
shl
inc
dec
int3
ret
pop
aad
or
into
sarl
ret
mov
rorb
inc
ret
rcll
das
leave
les
rol
cmc
ffree
dec
jmp
stc
or
inc
not
fcomi
add
fst
and
faddl
rcr
cmc
dec
fimuls
call
xor
jne
loope
loope
xchg
jecxz
aad
sbb
and
cs
lahf
aad
jbe
dec
jbe
dec
jbe
dec
jbe
dec
jbe
dec
jbe
dec
jbe
dec
jbe
dec
jbe
dec
jbe
dec
jbe
dec
jbe
dec
jbe
dec
jbe
dec
jbe
dec
jbe
dec
jbe
dec
jae
and
xchg
dec
jbe
dec
jbe
dec
jbe
dec
jbe
dec
jbe
dec
jbe
dec
jbe
dec
jbe
dec
jbe
dec
jbe
dec
jbe
dec
jbe
dec
arpl
mov
mov
xchg
pop
and
inc
gs
pop
std
lret
or
mov
lods
in
mov
shll
out
icebp
fldl2t
dec
mov
xchg
cmp
shll
adc
add
fdivs
rcrl
rorl
mov
dec
jae
and
push
adc
and
mov
inc
in
sub
jns
cmc
sub
sub
and
adc
and
lahf
repnz
shll
test
and
jmp
mov
xorl
rcrb
pop
add
jns
dec
cmp
adc
addr16
je
loopne
cli
and
mov
div
std
add
std
sbb
std
adc
dec
mov
enter
mov
test
mov
jne
movsb
jne
mov
xor
inc
xchg
int3
and
cmp
dec
cmp
dec
cmp
jp
shlb
and
jmp
aam
xor
daa
and
and
dec
inc
loop
jne
and
jne
daa
cs
lcall
leave
or
dec
into
rorb
dec
faddp
mov
out
icebp
and
jmp
icebp
jne
and
aas
pop
mov
inc
jecxz
lret
shlb
jns
jb
orb
inc
sahf
leave
mov
xor
jne
jmp
rcrb
in
xor
roll
add
sbb
or
test
icebp
cmp
call
pop
aad
jecxz
pop
clc
push
jle
std
mov
clc
mov
adc
mov
sub
or
push
sbb
neg
dec
loopne
rcll
das
shl
dec
or
clc
icebp
mov
jmp
xor
mov
andl
cmp
es
mov
jmp
int
ret
cmpsl
mov
flds
shll
pop
cmp
dec
jne
cs
shlb
mov
mov
fnstcw
js
cmp
jno
out
imul
xorl
jmp
push
mov
cmp
sbb
push
mov
je
sub
mov
add
ja
xchg
fsts
and
adc
adc
lahf
hlt
and
aaa
fldl
daa
adc
pop
push
pop
push
out
icebp
and
cmp
mov
lahf
push
add
lods
pop
mov
in
dec
sarl
mov
jmp
aad
roll
pusha
cmpl
je
pop
cmp
fnstcw
push
or
loope
push
adc
std
imul
cmp
insl
mov
lds
ret
xchg
mov
icebp
insl
loope
jmp
ss
leave
aas
popf
repnz
shll
and
cmp
pusha
dec
aas
std
adc
out
enter
jns
dec
mov
loopne
xchg
ret
mov
test
rcr
or
cmp
sarb
and
cmp
je
sub
call
add
repnz
std
sbb
icebp
inc
and
call
shlb
je
xor
or
cmp
inc
xchg
mov
mov
adc
and
cmp
fs
push
xor
aam
and
imul
push
inc
cltd
jge
repnz
leave
xor
shll
rolb
pop
sar
xor
cmc
push
clc
adc
movb
mov
cmp
push
xor
lret
xor
or
insl
popa
dec
xor
stc
xchg
mov
ljmp
xor
or
das
leave
sarb
pop
je
sub
rcl
dec
ljmp
mov
mov
xor
dec
and
adc
std
inc
or
inc
add
ljmp
xor
inc
jno
mov
popa
sbb
mov
popf
sarl
mov
das
rcl
xchg
jmp
add
rclb
inc
mov
cmp
mov
mov
aas
push
mov
dec
aas
pop
shll
cmp
cmp
xor
push
cmp
xor
xor
cmp
or
xor
jge
pop
mov
mov
filds
fcoml
in
pop
mov
ds
cmp
inc
fmuls
xchg
loopne
xchg
sbb
mov
fisttps
rcr
sbb
fists
fbld
rcr
cmp
fbstp
rcr
inc
rcr
pop
rcr
push
rcr
arpl
fistpll
mov
filds
jmp
mov
jne
mov
adc
jne
fdivl
jmp
loop
dec
inc
rcl
or
aad
add
xlat
dec
sub
aad
or
jle
call
aad
or
inc
push
shr
cmc
insl
in
dec
retw
out
aad
or
inc
mov
loope
cltd
loopne
xchg
jns
jns
and
xor
fscale
or
xlat
jns
out
idiv
cld
idiv
or
std
sbb
std
push
idiv
and
std
xor
std
inc
idiv
pop
idiv
insb
idiv
jp
std
mov
std
xchg
std
xchg
idiv
mov
dec
into
rorb
dec
ljmp
sarl
gs
sub
dec
daa
rorb
dec
dec
rorb
jge
xchg
dec
out
popa
jmp
addl
mov
jbe
sar
sbb
xor
ljmp
icebp
jmp
dec
adc
icebp
fimull
mov
inc
fimull
mov
repnz
rcl
xchg
loope
shl
inc
sbb
adc
mov
inc
xor
cmp
rcr
xor
fisttps
sbb
dec
jbe
dec
jbe
dec
jbe
dec
jbe
dec
jbe
dec
jbe
dec
jbe
dec
jbe
dec
jbe
dec
jae
xor
lods
jecxz
fucompp
stc
call
sbb
std
call
cmp
add
dec
fistps
pop
fildll
ljmp
aas
ljmp
rclb
dec
and
dec
cmp
loop
jne
loop
xorl
mov
insb
jmp
sbb
xchg
and
adc
or
mov
adc
ljmp
icebp
sub
rclb
pop
sub
sbb
adc
sub
shlb
inc
dec
or
pop
xchg
push
or
fsts
jecxz
sbbl
push
xchg
rclb
push
leave
xchg
ss
test
mov
dec
popf
rcl
ss
sub
shl
xor
or
loope
cmp
adc
sub
inc
imul
cltd
lahf
notb
imul
jno
mov
push
sbb
leave
inc
cmpl
push
push
inc
add
loope
rcll
imul
out
adc
mov
push
add
xchg
aaa
sarl
jg
and
xor
imul
jno
dec
inc
xchg
and
xchg
sbb
es
jne
xchg
jmp
rorl
sub
push
shrb
cmp
inc
xchg
and
idiv
mov
adc
mov
aas
icebp
icebp
inc
xchg
sub
enter
fnop
xchg
sar
lret
jecxz
pop
adc
in
mov
xor
lret
xchg
cltd
rcrb
mov
rorl
xchg
or
rorl
scas
ret
shl
out
sbb
lahf
push
rorl
inc
je
out
push
ret
rorl
icebp
mov
outsb
pop
inc
xchg
ret
inc
les
shrl
icebp
and
jne
ljmp
cmp
movb
adc
xor
and
les
je
ljmp
mov
dec
cltd
cmp
test
and
fisttpll
adc
jne
or
adc
or
inc
out
icebp
fstps
push
out
push
mov
push
inc
cmp
sub
movsl
testl
pop
mov
ror
rcrl
call
das
shll
sub
rolb
mov
rorl
out
loope
mov
mov
dec
mov
sbb
sbb
nop
inc
fimull
xchg
pop
std
add
popa
in
sbb
dec
xchg
andl
imul
xchg
insb
pop
leave
xchg
cmp
adc
dec
xorb
loope
sbb
mov
ret
idiv
arpl
clc
dec
xchg
cmp
push
jmp
jno
mov
andl
add
jns
cmovl
mov
jmp
fimull
dec
lahf
hlt
and
or
shlb
push
or
shrb
dec
mov
mov
dec
in
rorb
mov
ret
popa
add
leave
shlb
out
lahf
outsl
mov
mov
out
popf
xor
imul
pop
mov
pop
repz
add
mov
pop
aam
inc
test
adc
and
dec
ss
dec
and
sub
dec
pop
leave
pop
pop
and
push
mov
inc
jno
testb
mov
mov
les
mov
adc
rdtsc
push
pusha
pop
in
rorl
mov
bound
test
mov
jne
dec
jns
mov
ret
xchg
jmp
stc
out
mov
jne
or
sbb
push
jne
and
lods
mov
rorb
dec
insb
rorb
dec
mov
dec
xchg
stc
adc
pop
nop
mov
decb
roll
mov
jg
icebp
inc
ss
jmp
dec
sub
mov
dec
xchg
dec
out
mov
mov
xchg
jp
dec
dec
ja
bound
push
sub
test
das
add
clc
mov
jmp
rcrb
cmp
or
jns
add
adc
loop
sub
push
insb
or
loope
andl
jno
mov
mov
loope
xchg
push
sbb
jl
inc
fxch
mov
insb
loope
shll
ljmp
lock
push
or
rcrb
dec
cmc
xor
dec
imulb
leave
shr
pop
and
xchg
shrb
inc
rol
fnstenv
shll
mov
dec
xchg
inc
std
pop
dec
xchg
inc
std
pop
dec
xchg
inc
std
pop
dec
xchg
inc
std
pop
dec
xchg
inc
dec
cmp
add
sbb
xchg
mov
leave
xchg
inc
pop
bound
je
mov
add
inc
out
push
mov
fimull
fimull
loope
notl
dec
clc
xor
rcrb
cmp
insl
ss
dec
jge
dec
repnz
mov
shlb
jne
cs
inc
testb
jge
data16
adc
sub
cmpsl
inc
push
rcl
cmp
pop
icebp
mov
xchg
mov
pop
push
jno
enter
dec
mov
call
or
call
xchg
sbb
jmp
pop
cmp
pop
mov
loope
inc
in
jmp
std
orl
cld
nop
push
fimull
cmp
fimull
jne
inc
stc
pop
dec
xchg
jno
xchg
loope
test
xchg
push
fimull
cmp
fimull
mov
cmp
mov
and
push
fnstcw
popa
push
pop
xorl
arpl
lahf
push
adc
imul
jne
ss
and
xchg
sbb
test
sbb
jmp
pop
fisubrs
fwait
shlb
popf
shll
xchg
shlb
cmp
mov
xchg
push
out
mov
adc
and
dec
dec
mov
mov
and
jne
inc
stc
xchg
dec
repnz
dec
jne
int3
cltd
and
push
dec
jne
and
shl
xor
or
add
xchg
sub
xorl
mov
xor
insl
adc
rorl
pop
mov
dec
push
jns
add
sbb
sarb
cmp
rclb
jne
rorb
mov
fldcw
cmc
pop
imul
sub
jmp
leave
adc
in
adc
xchg
or
xchg
adc
mov
mov
inc
cmp
rolb
or
jmp
and
jmp
jne
push
out
popf
mov
cmpsb
mov
dec
push
shll
daa
flds
call
or
xor
fstps
jg
push
mov
loope
cmc
dec
cmc
mov
dec
xchg
sub
jmp
std
mov
imul
insb
loope
sub
xchg
std
push
dec
xchg
mov
int
mov
rcr
fimull
push
int
cmc
pop
mov
pop
sbb
inc
sbb
jmp
rcrb
inc
adc
sbb
mov
in
dec
jmp
imull
imul
testb
sub
leave
mov
cmp
sti
pop
clc
mov
xor
fimull
outsb
out
mov
and
fimull
mov
cmp
mov
cmp
mov
lahf
hlt
sub
or
ret
jmp
outsb
mov
add
xor
aad
mov
in
inc
insl
sub
in
dec
jmp
popf
inc
sbb
leave
pusha
and
sbb
pop
push
sbb
ret
and
xchg
ficoms
out
int
mov
cs
shl
inc
mov
mov
pop
lret
cmpsl
outsl
mov
xchg
icebp
arpl
add
js
dec
mov
arpl
sub
jmp
test
ljmp
fldenv
stc
push
mov
pop
lds
je
imul
arpl
bnd
mov
mov
push
leave
add
repz
sbb
hlt
inc
jb
cmp
pop
jne
das
pop
mov
pusha
rorl
inc
jmp
add
int
lea
call
std
sbb
in
lds
icebp
test
mov
es
movsb
sbb
test
dec
into
sub
idivb
add
cs
sar
fldcw
sub
xchg
mov
or
sub
cmp
jl
fcomps
jl
cmpsb
mov
mov
pop
mov
fs
inc
mov
sbb
add
mov
lods
mov
int3
repnz
daa
cmp
and
gs
inc
jb
xlat
push
jno
adc
push
jmp
dec
in
adc
add
iret
xor
rorl
or
and
lcall
and
loopne
fstps
daa
push
out
dec
or
mov
in
fisubrs
pop
cwtl
push
outsl
adc
and
xchg
xor
lea
test
stc
jg
arpl
stc
leave
int
add
jle
scas
or
jg
shll
lods
add
je
inc
ja
jg
adc
lock
pop
addr16
dec
pop
adc
lods
or
in
pop
mov
xor
and
jae
hlt
cmp
and
push
pop
add
rol
pop
iret
lock
mov
fdivr
cmp
cli
call
and
or
loop
or
inc
adc
imul
shrl
out
lods
add
add
or
inc
dec
daa
xorb
fnstsw
ja
call
lods
andb
or
and
mov
sub
jbe
sbb
popf
sub
mov
xchg
adc
stc
in
hlt
andb
mov
lods
aam
adc
out
xchg
mov
inc
xor
xlat
fstps
or
jo
mov
daa
int3
jns
pop
mov
fnstcw
xor
sub
and
inc
aaa
push
idivb
shrb
cmpsb
vhaddpd
es
data16
in
std
xchg
mov
mov
adc
fisubl
inc
xor
scas
fs
repz
xor
rol
dec
aad
xor
sub
mov
divl
mov
out
std
sarb
mov
xchg
mov
fwait
cmpsb
mov
rolb
jo
jae
mov
add
mov
inc
adc
lret
scas
cmpsl
inc
push
add
jns
or
pusha
shl
push
sar
inc
mov
add
and
nop
mov
push
in
cmp
or
mov
imul
shlb
pop
mov
shll
cmpsb
mov
xor
rcr
sbb
hlt
loope
outsl
stos
dec
lret
test
add
jne
xor
repnz
mov
lods
repnz
repnz
in
repnz
jo
in
sub
push
arpl
lds
xor
xchg
xor
push
and
fst
jle
adc
pop
imul
fnsave
pop
div
ret
ja
mov
mov
cmpsl
lock
and
rol
mov
pop
rcl
xor
pop
sub
inc
push
movsb
rcrb
leave
int
inc
mov
or
cmc
mov
repnz
and
pop
sub
fprem
mov
xchg
adc
xchg
movl
test
pusha
stc
fistl
mov
push
and
add
mov
mov
add
int3
dec
push
inc
movsl
or
and
leave
pop
fldt
and
hlt
jecxz
cmc
repnz
stc
xor
out
mov
in
mov
inc
jb
lods
jne
pop
sub
jae
imul
mov
sbb
test
frstor
push
push
cmp
mov
push
add
pushf
mov
inc
dec
fwait
aad
inc
push
fstps
sub
jmp
pop
fstl
lret
xor
dec
imul
xchg
outsb
and
aam
jecxz
call
lods
rolb
sbb
cmpsb
mov
dec
lret
add
xchg
add
jmp
mov
fisttps
add
scas
ja
or
sti
das
and
shr
sub
sub
daa
jmp
sub
adc
pop
sub
aam
movsb
pop
jmp
mov
nop
xlat
xor
dec
sbb
aad
and
add
cmp
xrelease
adc
sub
gs
inc
sub
fcomi
stc
ret
jne
jo
sub
adc
dec
and
or
or
sbb
jle
mov
sbb
add
out
dec
add
sub
aam
ret
jb
jge
add
lods
mov
cmpsl
mov
cmc
mov
in
test
dec
add
or
fstpl
adc
push
inc
pusha
fildll
out
add
push
and
dec
scas
push
imul
lds
pop
leave
sub
js
pop
jmp
adc
ja
dec
xchg
into
push
jae
mov
cli
aas
add
call
sbb
sarb
or
jo
push
enter
test
shll
pop
adc
sub
mov
filds
in
sbb
outsb
mov
push
mov
cs
inc
aas
les
stos
xor
adc
inc
hlt
out
sub
or
adc
aam
jne
jge
or
and
push
imul
mov
hlt
add
out
sbb
add
sbb
mov
and
cmp
sub
out
cmp
decb
ljmp
sub
xchg
cs
xor
test
pop
out
adc
adc
jmp
fwait
adc
adc
inc
mov
mov
add
mov
imul
fstpl
sbbl
mov
sbb
or
sub
test
xchg
adc
adcl
add
roll
push
add
jecxz
and
sub
sub
inc
aad
sub
adc
sub
push
mov
inc
xchg
sub
mov
cmpsl
std
jmp
and
or
outsl
cs
out
push
and
shr
cmp
and
or
or
sub
or
jmp
aad
stos
xchg
adc
mov
test
mov
repnz
adc
jmp
lds
xor
aad
sbb
add
or
push
dec
je
sub
shlb
ds
cmpsb
pop
push
jo
jns
scas
adc
xlat
mov
mov
std
pop
notb
das
cmp
in
sub
lret
inc
adc
push
lds
adc
add
push
and
sahf
imulb
mov
shrl
add
sbb
dec
add
and
inc
sub
out
sbb
push
dec
pop
jmp
and
outsl
ljmp
repz
jns
mov
ljmp
mov
idivl
jp
idivb
js
jmp
jo
mov
sarl
rorl
jno
ljmp
fcomp
add
cmp
mov
mov
lret
ficoms
pop
scas
xchg
sub
cmp
aam
icebp
incb
stc
push
xor
aam
sbb
xchg
notb
lret
and
shr
sbb
sbb
push
shrl
sub
iret
ror
ret
out
movsb
jmp
out
outsl
mov
lds
push
stos
mov
jge
cmp
or
mov
add
or
or
pop
icebp
dec
add
aaa
sbb
xor
adc
mov
mov
or
out
cmp
add
ljmp
ret
or
add
push
fstpl
lock
pop
add
jae
mov
mov
mov
push
add
int
cwtl
call
bound
sub
adc
insb
fstps
clc
flds
repnz
push
cwtl
repz
sahf
xchg
push
mov
sub
rorb
inc
loopne
dec
call
gs
mov
fpatan
out
repnz
or
xchg
push
xlat
dec
mov
imull
lods
jno
and
mov
push
sub
cmpsb
mov
xchg
and
xchg
imul
repz
or
push
aas
ret
outsl
mov
lahf
adc
xchg
push
pop
push
rorl
dec
arpl
and
xor
adc
pop
and
xchg
mov
pop
inc
inc
popf
adc
es
adc
ret
pushf
gs
cmp
fnstsw
inc
cmc
aam
sbb
out
int
pop
or
xor
call
repz
es
mov
leave
fcomip
add
cli
and
xor
mov
ss
xor
adc
mov
jb
test
jle
testl
loopne
mov
or
fistps
out
mov
cmpsb
cli
enter
in
int
fsts
pop
popa
inc
sbb
aad
aaa
in
mov
rclb
mov
lcall
rolb
cmp
js
cmpsl
shlb
or
cli
adc
and
adc
rcll
and
xor
arpl
call
dec
call
adc
and
leave
fsts
xchg
enter
jnp
in
out
push
cltd
pop
xchg
hlt
pop
pop
iret
pop
sbb
mov
push
lods
fdiv
inc
jle
shrl
call
jp
mov
clc
addr16
sarl
or
js
or
xchg
clc
jge
sbb
xlat
add
jmp
lods
sub
push
and
sub
push
inc
not
lret
mov
insb
ret
jecxz
fs
daa
and
cmp
sarl
add
jne
pusha
pop
mov
push
adc
sbb
decl
loopne
nop
and
and
out
or
sbb
dec
int
int
jb
in
jp
aad
int
mov
js
cmc
lea
outsb
jne
xor
fnstcw
push
mov
mov
mov
jecxz
dec
pop
pop
stos
lods
cmp
or
xchg
dec
iret
fidivl
mov
mov
popa
in
add
adc
outsb
xchg
sti
pop
fisubl
jge
imul
sbb
in
pop
test
fidivl
cmp
pop
imul
scas
mov
cli
ret
aaa
xor
rcl
and
insb
mov
repz
sbb
adc
add
nop
inc
in
popf
ret
adc
or
daa
and
or
pop
xor
push
rol
and
fwait
or
mov
rorl
and
push
hlt
ds
xor
js
jmp
testl
adc
mov
or
inc
mov
mov
and
push
or
inc
sbb
imul
sub
in
adc
mov
xchg
subb
xchg
or
movsb
jns
ffreep
sar
aad
sti
sub
sbb
inc
sbb
sbb
mov
add
sarl
dec
jne
cmc
push
mov
jmp
adc
daa
dec
gs
sub
sub
int3
fisttpl
stos
fnstcw
mov
xchg
add
or
cmpsl
fstl
ret
mov
andb
or
lret
rcll
mov
mov
jae
sti
ffreep
push
pop
nop
and
movsb
and
push
xchg
in
or
dec
fdivs
xorl
xor
fld
pop
inc
add
cmp
pop
push
imul
and
dec
iret
pop
das
pusha
pop
je
rorb
lea
push
push
add
mov
loope
stos
out
sbb
mov
shrl
xchg
inc
enter
pop
push
lds
repnz
outsb
and
adc
sub
xchg
in
clc
jmp
in
addr16
mov
gs
cmpl
mov
test
jo
mov
dec
cmp
ror
mov
mov
pop
sub
cmc
iret
or
mov
stc
adc
add
outsb
mov
popa
mov
xchg
pop
lds
fiadds
mov
xchg
jle
rorl
dec
test
add
sti
add
outsl
push
mov
aas
cmc
rcll
sbb
cmc
je
mov
and
jns
loope
jb
xor
mov
data16
ja
enter
pop
lock
adc
out
leave
and
pop
pop
or
inc
pusha
pop
jne
xchg
pusha
aam
sbb
ja
push
mov
shll
lods
les
fnstenv
mov
push
frstor
leave
mov
adc
xor
lahf
ffreep
pop
xor
mov
jge
mov
arpl
xchg
mov
aas
cmc
inc
xor
jecxz
enter
or
inc
jmp
push
sbb
lret
mov
imul
fs
leave
mov
popa
cwtl
jbe
mov
insl
shll
jo
mov
jp
mov
decl
sahf
popa
inc
jg
imul
leave
sub
rorl
mov
mov
jae
ja
popa
xchg
jg
leave
arpl
mov
mov
in
fsubrp
push
popa
iret
mov
mov
pushf
fs
ficoms
arpl
lahf
mov
and
rcll
lds
mov
leave
xchg
jb
rolb
and
xchg
jmp
fs
and
out
rcrl
outsl
out
movsl
sub
jmp
test
add
push
dec
mov
rorl
rcr
stc
and
mov
mov
icebp
orl
call
lods
ljmp
les
push
out
mov
imul
xchg
test
fwait
popa
loope
enter
pop
inc
adc
inc
inc
cmp
mov
cmp
jo
or
mov
mov
out
mov
push
scas
sub
rorl
mov
xorl
sti
dec
repz
mov
mov
push
popf
sbb
adc
gs
push
mov
push
leave
lds
push
pop
movsl
inc
or
stos
sarl
cmc
ret
rorl
pop
shll
roll
dec
inc
lds
add
push
jne
pusha
mov
xor
mov
gs
and
notb
xchg
add
dec
test
imul
push
mov
or
cmpsl
ljmp
jbe
andl
mov
mov
jl
stos
push
pop
mov
lds
jmp
subl
movsb
and
ljmp
inc
movsl
xor
aam
jbe
mov
add
jnp
lods
jmp
movsb
out
adc
or
and
lods
das
lds
inc
lds
pop
adc
sub
cmp
dec
push
mov
inc
lcall
ljmp
add
out
dec
dec
lods
adc
mov
adc
cmp
imul
sbb
lds
movsb
cmpsl
fldcw
jmp
test
mov
movsb
enter
xchg
add
cmc
dec
std
mov
mov
loope
stos
lds
fstps
sub
add
jl
out
lods
movsl
sub
sub
sbb
or
mov
lods
inc
jbe
add
inc
andl
xchg
movsb
jl
push
leave
inc
mov
test
adc
xchg
cmp
or
cmc
stos
pop
jge
push
jns
sbb
lods
or
mov
sahf
leave
mov
xrelease
scas
cmpsl
leave
movsb
imul
add
mov
mov
mov
cmc
or
leave
cmp
shll
daa
leave
mov
icebp
enter
jae
xor
xor
es
mov
leave
lea
jo
jo
into
cmp
xchg
mov
xchg
jbe
dec
xchg
ficoms
fsubl
aad
pushf
mov
jecxz
adc
imul
loopne
mov
and
aaa
or
jne
int
push
lds
enter
cmpsb
sti
xor
mov
jge
arpl
mov
jbe
mov
mov
mov
mov
mov
mov
int3
mov
leavew
xchg
mov
sbb
jl
adc
dec
jae
mov
mov
imul
cmp
nop
in
jmp
pop
jle
std
inc
icebp
add
mov
add
inc
es
dec
shrl
cmpsb
cmp
pop
and
iret
movsl
pop
int3
std
mov
rcrl
mov
sbb
nop
or
pushf
mov
leave
inc
ss
cmp
or
push
xchg
out
mov
nop
out
pop
std
paddd
jl
pop
mov
xor
cwtl
dec
pushf
stos
inc
cmpsb
add
mov
push
mov
stos
sbb
and
test
lods
outsl
out
dec
xchg
cmp
inc
inc
stos
push
mov
and
and
hlt
es
pop
jns
add
mov
or
or
test
push
lods
fwait
xor
mov
cmpsb
ret
loope
dec
mov
cmpb
jns
ja
or
enter
inc
fnstsw
and
pop
inc
mov
and
leave
lock
daa
adc
push
lahf
dec
add
hlt
lods
pop
imulb
or
mov
mov
jle
push
fs
or
outsb
arpl
mov
int
imul
push
mov
xchg
mov
test
pusha
jb
jo
scas
jmp
out
cmp
mov
mov
mov
iret
inc
mov
addr16
mov
repz
mov
adcl
cmp
pusha
lods
addr16
push
jge
cld
jp
mov
hlt
xchg
mov
sbb
xor
leave
psrlw
mov
xchg
scas
jg
jo
data16
mul
or
pushf
popa
dec
jbe
mov
bound
repz
sub
jae
shll
dec
insl
cmc
or
mov
addr16
jp
fs
mov
shl
insl
fcmovne
ja
je
fsts
aad
mov
cmp
mov
inc
loopne
lock
aad
xchg
aam
mov
loopne
cmpl
lock
jbe
cmc
mov
ret
and
jg
int
jl
orl
add
iret
imul
aaa
inc
jmp
mov
cmc
stc
or
leave
loope
repz
rorl
mov
fwait
enter
push
int
movsl
cmpsb
push
aad
cmc
jmp
xor
sbb
jge,pn
cmp
xchg
jbe,pt
sub
xor
or
mov
daa
sub
and
cmp
scas
inc
pop
repz
mov
sbb
mov
add
or
lret
jo
jl
jg
test
fisttpl
inc
test
scas
adc
pushf
inc
xor
shlb
das
cmp
adc
loopne
add
xor
test
pop
jle
mov
mov
addr16
xchg
mov
sub
adc
jle
shll
mov
mov
or
outsb
lock
sub
cmp
icebp
sbb
jae
push
and
bound
mov
ror
ret
into
loope
jmp
or
aad
inc
clc
jge
iret
jl
jne
dec
icebp
and
dec
es
mov
mov
add
imul
call
add
fsubrp
mov
lea
mov
xor
cmp
add
add
sysexit
dec
shl
pop
mov
lret
cmpb
xlat
or
or
arpl
fisttpll
sub
int3
mov
stc
loope
mov
mov
rcr
sbbl
pop
inc
jbe
popf
loope
add
mov
and
lods
cmp
or
cmpsb
out
sbbl
out
pop
xchg
mov
in
or
pop
cltd
ds
fisttpll
dec
xorb
fcmovnb
aas
adc
inc
rcrl
imul
jmp
add
shl
bswap
out
imul
add
jg
fimuls
fmul
fimuls
repz
out
dec
aad
ret
int3
stos
loopne
mov
insb
sbb
push
pop
fcom
mov
adc
shl
sbb
int
loope
bswap
xor
mov
stc
int
or
shl
int
xor
out
pop
xchg
les
jb
add
push
lds
aad
int3
jmp
mov
mov
into
lds
fld
adc
ror
push
shlb
push
sbb
decl
mov
stc
mov
push
mov
xor
mov
movsl
sub
cld
cs
adc
shll
fistpl
pop
sub
cld
jmp
addr16
aad
dec
repz
clc
xor
mov
xlat
dec
vshufps
jns
mov
hlt
std
pop
jno
xchg
sbb
std
sub
lods
inc
push
leave
subl
rcll
mov
divb
shll
inc
mov
jo
sbb
mov
cmc
jo
fcoml
out
sbb
sub
or
jae
xor
aad
adc
lcall
scas
lock
ljmp
pushf
jns
inc
jns
pop
int3
xchg
mov
fildll
dec
mov
out
gs
in
xchg
lods
add
sbb
pop
popf
aas
insl
fbstp
mov
and
and
in
in
dec
xor
pop
jecxz
xlat
lret
and
pushl
adc
mov
mov
mov
pop
mov
push
mov
lcall
mov
leave
aad
inc
aad
xlat
out
leave
xor
inc
aad
mov
sbb
mov
fldcw
in
sub
lcall
shll
sub
stc
leave
imul
sub
in
pop
das
sbb
ja
jae
scas
push
jns
movsl
jo
lods
jmp
sub
das
call
dec
mov
cs
jb
jne
fwait
mov
mov
sub
shll
dec
ret
aaa
aad
or
xor
xor
into
xor
aam
out
xor
leave
loopne
pop
or
dec
fld
leave
cltd
leave
xchg
test
pop
pop
les
sub
adc
cmc
sub
mov
adc
shll
sbb
imul
lret
ret
int
or
int3
inc
cmc
ror
cmc
icebp
into
dec
std
pop
inc
stc
rol
cmc
in
dec
loope
ret
or
inc
jmp
dec
rol
aad
or
jnp
fmuls
ret
fucomi
pusha
rcr
cmc
int
dec
leave
ret
mov
fistpll
fimuls
sub
rol
mov
inc
rcl
mov
aad
xchg
aad
or
cmc
orl
or
cmc
ljmp
in
or
out
shll
out
popa
dec
loope
insl
aad
or
jecxz
push
cmc
loop
dec
in
pop
aad
or
out
inc
cmc
out
dec
cmc
dec
adc
sub
sub
and
pop
and
cmp
add
movsl
lds
mov
int3
lret
lret
mov
pop
enter
rol
das
adc
jmp
loop
fsubrl
push
sub
loope
cli
popa
rcr
ljmp
shl
jecxz
mov
fucomip
xlat
loope
in
loop
cli
out
call
sub
sub
pop
cmp
cs
fdivs
rcl
clc
rcl
scas
cmp
fcmovne
mov
das
mov
mov
xor
push
fidivl
mov
cmpsl
neg
jmp
cmp
mov
mov
leave
add
ret
ljmp
fimuls
fmuls
jno
int
or
in
mov
int3
xchg
iret
sarl
inc
out
mov
cmp
lret
mov
and
cmc
rcl
sarb
mov
int3
fcmovnb
xor
fnsave
jmp
out
enter
mov
rol
xor
dec
pop
fxch
fiaddl
fldt
mov
fnstenv
fcmovb
hlt
fstp
mov
xor
aad
inc
mov
inc
mov
pop
fcomps
lret
ljmp
sarl
add
jmp
lret
aad
leave
cmc
aam
out
cmpsl
aas
call
xor
pop
pop
aad
jp
add
jecxz
in
sar
out
mov
jmp
dec
bnd
in
xchg
jecxz
in
xor
jmp
test
ljmp
mov
imul
std
mov
xchg
out
xor
fldenv
mov
fiadds
jecxz
add
out
loopne
iret
mov
mov
in
jge
call
ljmp
mov
out
rcl
mov
out
mov
xor
imul
fdivl
push
mov
sti
les
jmp
mov
std
aad
add
call
mov
jmp
repz
push
mov
repnz
fbld
shlb
cmc
xor
fidivs
into
mov
cmpsl
repz
out
testb
mov
sub
or
sbb
int
inc
fidivl
or
int3
add
mov
fld
inc
fstl
xor
leave
shlb
or
int
aaa
xor
fidivs
repz
fmulp
add
iret
sbb
or
lods
aad
add
dec
add
mov
jecxz
inc
in
iret
rorb
and
fpatan
fstl
jmp
pop
rolb
cmc
sbb
dec
fnsave
xchg
fsubp
mov
imul
dec
sbb
out
sbb
in
and
lret
push
rcll
adc
jmp
mov
ror
mov
lahf
imul
push
adc
or
rcll
pop
jecxz
jecxz
ftst
jge
ror
out
adc
xchg
mov
and
push
out
jns
mov
orl
sub
mov
pushl
leave
sub
pushl
stc
push
jno
xor
ljmp
leave
and
jecxz
and
and
cmp
pop
mov
daa
xor
xchg
fdivrs
cwtl
cmp
cmp
cmp
pop
mov
xchg
xlat
mov
out
insl
out
fidivrl
test
mov
xor
sarl
jecxz
fidivrl
fdivrs
aas
xor
mov
mov
fucomi
mov
xor
call
push
xor
aaa
xchg
push
ret
call
ss
push
mov
out
in
call
dec
inc
in
push
dec
xor
mov
mov
shlb
mov
lret
dec
pop
dec
imul
fidivl
mov
neg
mov
add
sub
jb
ljmp
ret
inc
int
mov
in
cs
cwtl
ljmp
iret
mov
mov
loopne
rcl
cwtl
out
lret
jns
outsb
mov
fsubl
xor
shll
push
fdivl
loope
jecxz
pop
xor
pop
in
xor
xor
mov
je
sarb
pop
std
fisttpl
mov
outsl
lret
icebp
pop
ljmp
leave
push
mov
inc
mov
push
fdivl
xor
mov
out
push
shll
push
aad
out
repnz
xor
xor
leave
ljmp
repnz
mov
mov
repz
mov
or
fidivl
push
xchg
out
mov
lret
shrb
outsb
inc
int
popa
hlt
pusha
mov
fstp
mov
mov
aad
pop
mov
pop
fadds
jns
mov
in
mov
aam
leave
xor
add
mov
loopne
cmp
fucomp
xor
jns
enter
loope
call
rol
fsubl
ror
rcr
bnd
mov
loop
in
cli
mov
in
rorb
roll
cmc
dec
xchg
out
les
mov
mov
ljmp
xor
sbb
mov
jle
shll
jno
jo
iret
fsubl
jae
jb
int
jne
je
ja
movsl
dec
in
stc
mov
mov
mov
xchg
mov
dec
mov
mov
lea
loop
mov
leave
mov
int
mov
mov
subl
outsb
mov
xorl
sbb
cmpb
loopne
test
lods
sbb
ret
out
jmp
out
xor
jmp
xchg
dec
int3
loope
sti
pop
mov
cwtl
shlb
rorb
lret
pop
out
jmp
out
jmp
in
jecxz
mov
xor
icebp
ficompl
mov
fsts
jnp
aas
aas
fdivrp
fcomps
push
int3
mov
fcmovbe
fldt
sahf
jmp
dec
mov
xor
in
les
mov
fiadds
imul
xor
xchg
push
int
out
xor
xor
mov
mov
les
stos
test
fcoml
out
les
xor
rorl
call
mov
ret
aad
in
fucom
dec
adc
icebp
in
mov
out
mov
mov
pop
jmp
out
les
repnz
arpl
fsub
leave
cmpsl
lahf
sbb
shlb
xor
mov
fstpt
mov
fnstenv
ljmp
leave
rclb
mov
arpl
push
ljmp
jmp
ss
mov
mov
mov
mov
movb
mov
fiaddl
test
xor
fnstenv
mov
shll
mov
ret
mov
mov
fcom
mov
icebp
shll
dec
mov
mov
out
lock
leave
mov
and
lret
enter
movsl
shlb
leave
in
pusha
mov
push
fdivs
into
xor
shll
int3
enter
ret
rorl
add
jle
in
enter
loopne
lret
xor
xor
iret
xlat
push
mov
out
insl
out
sbb
int3
mov
fyl2xp1
ret
jmp
mov
loope
fmuls
fcmovnu
dec
mov
sarb
leave
ffree
cs
flds
xor
mov
out
mov
fdivrp
mov
add
mov
loopne
rcrb
lret
mov
lret
shll
int
fsubr
mov
out
rorb
mov
ljmp
jmp
mov
xlat
xor
loope
sti
pop
mov
int3
dec
mov
jecxz
ret
fimull
xor
out
mov
inc
fs
mov
shr
in
mov
sarl
fdivp
fsubr
pushf
fstpl
out
dec
mov
mov
loope
fsub
rolb
mov
fcmovnb
jecxz
in
mov
frndint
inc
ja
shl
enter
fidivrs
shl
cmp
mov
mov
out
test
stc
cmc
mov
fdivl
sbb
xor
in
jmp
adc
int3
dec
lret
aad
and
inc
aad
mov
jecxz
in
icebp
xor
leave
lock
roll
repnz
mov
xor
fmull
jp
push
mov
jmp
in
shl
repz
div
dec
mov
les
out
test
in
shlb
divb
fstp
rol
mov
mov
out
mov
enter
dec
mov
adc
rcrb
std
pop
pop
and
or
cmp
jns
decl
enter
push
pop
mov
lds
inc
out
dec
loope
mov
int
mov
mov
cmp
sbb
imul
into
int3
out
fcmove
adc
scas
mov
adc
adc
cmc
fld
leave
leave
mov
lret
dec
or
mov
ret
add
aaa
push
pop
out
std
inc
nop
jae
int3
loopne
nop
lret
jle
sbb
imul
mov
jle
pop
fistl
std
loope
ljmp
jmp
aaa
lret
out
leave
xchg
jmp
mov
sbb
and
rorl
inc
jmp
jmp
enter
add
in
fnstenv
mov
pop
mov
mov
into
jg
jmp
fucomi
xchg
jecxz
lea
and
mov
iret
in
int
lret
mov
mov
inc
insb
leave
adc
mov
mov
jmp
fdivrl
loop
loope
ret
movsl
out
ror
jmp
push
int
lods
sub
rol
jmp
lock
imul
xor
fadds
jmp
xor
in
movsl
shll
insl
int3
cltd
stc
dec
mov
push
sbb
test
adc
inc
mov
mov
jae
xor
ja
icebp
popa
jecxz
cmp
xchg
in
das
pop
mov
mov
or
add
dec
lret
mov
int
out
gs
in
and
add
fcmovnb
xlat
xchg
mov
mov
mov
test
test
in
loop
inc
out
jg
out
add
cmpsl
jecxz
adc
stos
lods
mov
outsl
or
mov
into
jmp
inc
out
push
mov
mov
fwait
push
lret
cmp
sub
cltd
mov
iret
xchg
int
inc
fdivs
imul
fmull
or
lahf
mov
push
out
leave
mov
mov
mov
pop
push
arpl
sbb
int3
aas
adc
out
xor
push
add
popa
int
xchg
jmp
ret
rcrb
or
ret
inc
mov
leave
out
sbb
xchg
ror
mov
pop
jmp
ss
push
fildl
in
mov
fmul
pop
mov
leave
fidivl
adc
fdivrl
icebp
mov
jmp
jmp
icebp
icebp
fcmove
inc
fucomip
leave
inc
cmp
mov
aam
les
test
xor
pop
and
mov
jns
ret
jmp
or
pop
or
cmp
push
mov
lds
aad
cmc
fcmovbe
jns
xor
test
sbb
xchg
adc
adc
test
in
add
cmpsl
shl
jmp
ret
jge
rcll
stc
rolb
std
cmp
pusha
xor
in
adc
fwait
popf
xchg
mov
shll
mov
mov
int
pop
leave
fwait
inc
adc
dec
in
fxch
jbe
ficoms
push
push
fldenv
jecxz
test
jno
aad
and
jmp
mov
xor
test
jb
sub
adc
icebp
popa
loop
arpl
sub
aaa
fwait
sub
lahf
mov
mov
rclb
fnstsw
icebp
rclb
mov
mov
or
inc
adc
sub
pop
jno
stc
fmul
fsubl
je
loopne
mov
add
xchg
movsl
ret
jnp
cwtl
adc
mov
test
lret
call
ret
ret
test
inc
int3
pop
popa
push
or
push
fcmovu
and
cmp
fucomip
leave
shr
xorl
push
mov
mov
mov
enter
xorl
ret
out
in
jecxz
in
adc
jo
and
ror
mov
fwait
adc
jmp
jge
mov
xchg
sarb
imul
mov
lea
and
xor
mov
inc
and
xor
ret
mov
mov
in
cs
fwait
ret
test
lds
cld
sub
lds
inc
out
popa
fldt
fisttpll
outsl
ret
shr
and
mov
jno
shl
in
fcmovne
jmp
icebp
int
les
add
popa
cmc
fcmovnb
cltd
sbb
ljmp
aad
jmp
sub
in
insb
mov
adc
jmp
popf
lret
fsub
daa
inc
aad
dec
or
and
add
addr16
ljmp
fnstenv
mov
xchg
lret
dec
dec
and
jo
in
xor
mov
adc
into
jecxz
jmp
sub
out
push
inc
xchg
imul
pop
ljmp
cmp
mov
loop
fistpll
shrw
fsubrs
mov
enter
ret
ljmp
leave
jnp
mov
inc
jne
andb
inc
pop
push
inc
mov
in
xor
adc
fidivl
mov
dec
fsubp
in
push
push
jne
sub
xor
aas
mov
pusha
enter
bswap
and
rcrl
add
rclb
xchg
xor
fmulp
negb
or
dec
add
lock
int
sub
loopne
aaa
out
xor
mov
mov
lahf
jmp
jmp
add
pop
dec
xchg
int
fstp
jne
ret
stc
lds
cmp
push
arpl
xchg
add
sbb
icebp
fwait
dec
xlat
xor
xor
out
dec
lea
dec
adcl
xchg
repz
push
loop
xor
push
ret
mov
mov
in
mov
jmp
pop
lods
xchg
pop
jne
jne
xor
enter
dec
test
inc
jmp
mov
addr16
in
lock
mov
sub
ret
imul
sub
xchg
into
insl
cmc
iret
inc
daa
mov
arpl
movsl
aad
cmc
enter
fwait
movsl
repnz
mov
cmpsl
sub
aas
mov
lods
lds
mov
nop
nop
jmp
xor
aad
xor
adc
fcoms
push
mov
fstp
mov
sub
add
daa
push
fwait
repz
and
dec
xor
in
mov
imull
fmull
aad
mov
fdivs
xor
dec
mov
insl
cmpl
or
jns
mov
or
inc
inc
sbb
lock
frstor
push
rol
cltd
sub
mov
sub
xor
icebp
rcl
aam
imul
inc
add
in
cli
dec
xor
inc
jae
or
in
pop
or
inc
xor
in
loope
std
add
jmp
leave
shrl
xor
lea
js
jmp
popf
jo
inc
adc
adc
out
inc
or
ret
imul
or
or
or
and
jmp
lock
push
test
fucomi
popf
lret
mov
lds
in
inc
sarl
and
mov
inc
repz
mov
subl
stos
xlat
iret
lret
imul
mov
sub
push
jne
xor
outsl
pop
xor
jno
in
push
imul
out
fldl
mov
in
xor
pop
xor
in
sub
push
jmp
andl
loope
ficoms
mov
xlat
test
in
fcompl
icebp
in
or
xlat
mov
int
insl
movsb
inc
adc
std
jmp
push
jno
into
enter
dec
leave
jne
in
pop
imul
push
daa
pop
aad
loop
mov
in
pop
addr16
movl
std
ret
out
cmpl
mov
push
or
jmp
pop
sbb
int
mov
push
mov
xchg
dec
xor
pop
loopne
mov
test
add
ret
xchg
jecxz
mov
pop
mov
fwait
arpl
icebp
push
leave
ficompl
imul
inc
int
cmp
clc
jae
jmp
icebp
je
ja
repz
jb
daa
adc
or
aam
adc
sub
mov
rolb
lret
stos
into
cmp
aad
cmpsl
push
aaa
lcall
mov
xlat
iret
shrw
pop
xchg
outsl
iret
in
mov
movsl
xor
loope
lds
pop
loope
jno
adc
pop
xor
add
add
add
imul
pop
xor
sub
xchg
imul
call
roll
inc
jecxz
pop
mov
repnz
icebp
inc
stos
mov
flds
insl
adc
sub
inc
sti
lea
out
sub
test
xor
lds
jge
add
add
add
push
dec
out
mov
ret
push
insl
or
mov
popa
fildl
fdivs
leave
sub
push
xor
subb
mov
loop
jne
mov
push
xor
jmp
das
leave
mov
push
cmc
pop
jne
push
sbb
stc
xor
and
std
inc
adc
xlat
insl
xlat
pop
inc
lret
ret
fiadds
jbe
push
xor
dec
inc
mov
inc
shll
jge
in
enter
insl
ret
shll
ss
dec
push
arpl
addr16
insl
sub
loope
and
leave
iret
aad
xor
push
fcoml
adc
shrl
pop
jmp
int3
imul
fsubrs
ror
inc
jae
rolb
das
int
sahf
ret
loope
in
in
arpl
aad
sbb
cmp
lcall
fsubrl
ret
insl
in
mov
in
rcll
sub
cmc
xchg
aad
inc
rcrb
pop
in
das
pop
orl
repz
xchg
in
xor
jmp
inc
in
dec
xchg
daa
aad
iret
push
in
jmp
push
rorl
jecxz
jae
xlat
test
rcll
addl
popf
fnstenv
aad
lods
push
insl
leave
push
mov
xor
imul
lds
leave
xor
push
mov
push
pop
jmp
add
repz
das
clc
mov
fcmovne
fmul
fimull
roll
fsubl
aad
jmp
imul
outsl
push
dec
push
jb
push
push
enter
mov
jle
jnp
enter
imul
mov
in
sub
scas
adc
mov
rorl
outsb
xor
or
aaa
push
sub
mov
adc
not
test
testl
inc
or
sub
or
cmp
popa
xor
jmp
pusha
or
mov
stc
call
fildl
and
test
leave
jmp
jmp
test
fldlg2
push
popa
in
add
ret
jge
outsl
ret
pop
mov
lret
adc
addr16
push
xchg
lock
ficoms
repz
int
pop
sub
std
ja
pop
jg
ret
les
in
call
adcl
mov
ljmp
pop
or
add
shl
aas
gs
sub
xor
inc
enter
call
testl
fs
in
or
cmc
sub
in
into
stc
filds
pop
jne
add
outsl
push
orl
repz
mov
gs
or
adc
leave
jecxz
imul
decl
loope
jno
and
imul
xor
insl
mov
jmp
movhlps
pop
enter
mov
or
jae
les
and
in
pop
adc
add
sub
stc
inc
ffree
cmp
fcmovnb
sub
enter
jge
lds
in
ret
fnstenv
repz
mov
ret
pop
in
in
xchg
jl
dec
loope
dec
xor
loope
inc
repnz
ret
sbb
shlb
dec
xorl
lods
sub
pop
ror
popf
lret
mov
enter
mov
cltd
add
fnsave
ja
ret
pop
dec
or
or
arpl
sbb
xor
jne
insl
out
aam
sub
stc
pop
cmp
rorb
aam
stc
jns
lods
mov
enter
mov
xor
lret
inc
call
fmul
insl
or
or
inc
in
xor
jae
xlat
fsts
fnstenv
rolb
lea
dec
sub
xlat
mov
dec
cmpsl
call
jge
rcrl
jae
mov
cmp
repnz
cmpsl
cltd
xchg
fsubrs
fscale
in
mov
iret
in
mov
xlat
aaa
sbb
test
pop
xchg
add
jge
leave
outsl
xor
sbb
mov
cmc
cmp
leave
ljmp
dec
push
ljmp
jbe
pop
out
stc
jmp
ret
out
fildl
enter
lods
gs
loope
scas
int3
scas
jge
xlat
sbb
stc
rorb
in
push
aam
rorl
add
outsl
or
lock
and
les
or
inc
daa
mov
xchg
fcmovnbe
cmc
adc
cmc
sub
dec
ds
or
mov
test
mov
mov
jne
nop
filds
fcmovnb
shl
sbb
addr16
pop
lock
cmpb
out
adc
loope
fld
xchg
roll
popa
pop
dec
sbb
int
ret
loopne
aam
and
sub
cmc
push
idivl
in
jb
or
out
lret
push
lahf
mov
addr16
inc
enter
lahf
mov
leave
and
jmp
add
sbb
inc
insl
xchg
add
or
add
jge
mov
ret
popa
aad
into
popf
movl
cmc
xor
gs
in
mov
xor
bound
iret
fmull
dec
movsl
jmp
jge
pop
insl
loope
xchg
jg
cmc
fidivl
sub
pop
or
mov
out
hlt
stos
jmp
ret
or
out
leave
fdiv
cmp
mov
jecxz
arpl
inc
cmp
cmpsl
shll
int3
jns
popa
push
sub
leave
adc
ljmp
add
aad
int
loope
int3
jmp
jne
inc
xor
lahf
into
ds
or
rcll
ffree
pop
add
jge
enter
fists
mov
mov
push
gs
sbb
flds
xor
fstl
xlat
repz
imul
jne
js
in
jmp
xor
int
pop
mov
mov
sbb
out
sbb
nop
xlat
jecxz
aad
push
push
cmpsl
pop
enter
push
cmp
adc
xchg
in
test
test
clc
rcl
dec
arpl
inc
sbb
in
sub
and
lret
fdivs
ret
stos
out
mov
in
int
sub
jb
push
inc
add
cmp
sub
xor
mov
mov
inc
aam
movsl
loopne
call
ret
in
js
iret
sub
popa
imul
inc
inc
out
push
popf
mov
push
push
aad
leave
test
sub
push
jg
cmp
fadds
jne
or
xchg
xor
push
imul
or
or
aaa
in
inc
push
push
adc
or
jmp
jmp
in
dec
inc
cmp
xchg
notl
out
leave
jmp
xlat
filds
jo
in
ret
or
jae
mov
repz
ja
mov
xchg
xchg
aad
fistpl
test
notl
jmp
inc
push
and
pop
and
push
inc
fstpt
scas
lock
out
jns
jmp
cltd
mov
or
test
sub
ret
test
rcl
shll
xor
pop
mov
shrb
and
and
int
insl
jge
ret
in
out
add
mov
dec
sub
daa
lret
std
iret
loope
mov
sti
xor
xor
cli
or
sbb
fwait
repnz
out
fwait
xor
shlb
mov
add
aas
in
shll
int3
imul
sub
xchg
aas
out
xor
int
sub
inc
jmp
jns
and
xor
in
daa
hlt
mov
xchg
in
lock
aaa
mov
aam
ljmp
hlt
repz
cltd
or
cmp
addr16
in
mov
pop
lock
mov
stos
cltd
and
sub
or
ret
icebp
popa
and
push
push
out
je
test
test
push
inc
dec
movsb
cmp
scas
push
xchg
std
jae
adc
lds
nop
xor
jnp
xor
cmpl
push
or
aad
push
jg
xchg
dec
xlat
ret
cmc
add
out
jnp
mov
sbb
dec
sub
in
jne
xchg
out
ror
mov
lret
inc
pop
loope
mov
jmp
jecxz
cltd
jmp
test
das
jge
add
or
scas
imul
sub
mov
mov
adc
xchg
or
pop
fxch
sbb
mov
jb
ret
or
rcrl
rorb
in
mov
xlat
in
test
mov
cmp
mov
in
ret
pop
fmull
lret
iret
cmp
in
adc
fsubr
cmp
out
iret
frstor
test
das
push
cs
leave
vpmullw
test
int3
test
mov
fadd
frstor
rcrl
or
adc
roll
mov
addr16
or
test
loope
dec
mov
clc
aam
xor
fld
sbb
adc
xor
iret
imul
movsb
xchg
iret
aad
fcomps
int
mov
in
jp
ror
push
mov
leave
lds
push
int3
add
dec
ret
push
aas
in
xor
mov
les
mov
mov
mov
enter
shlb
rcll
leave
fstp
mov
aaa
xchg
or
popf
jecxz
mov
mov
fcoml
add
int3
inc
int
mov
fnsave
xor
push
int3
popa
aam
pop
loopne
or
add
mov
out
out
call
xor
and
rcr
into
cld
iret
stos
push
repnz
or
ja
aad
or
movsl
int3
scas
out
int3
inc
aam
mov
sub
sub
out
int
test
mov
std
push
or
jecxz
xchg
jns
sub
xchg
xor
rorb
dec
mov
ret
ret
add
jmp
in
int3
movsl
push
aaa
jecxz
mov
int
add
mov
fincstp
int3
loop
repz
xor
int3
sbb
fcoms
dec
mov
sbb
mov
enter
mov
sbb
xor
ffree
out
cmovnp
mov
cmpsl
inc
fcmovb
or
aam
int
in
mov
cmp
loope
push
int3
jne
fidivs
dec
int3
leave
push
lahf
push
dec
jge
cmc
cmp
mov
jns
mov
loop
fsubs
ljmp
push
in
xor
int
add
jge
shll
mov
loope
sbb
hlt
inc
pushl
sar
shl
test
shll
hlt
push
gs
imul
inc
pusha
int3
fcmovnb
mov
cltd
int
mov
fcom
fldl
dec
ror
pop
fadds
push
shrl
push
mov
in
in
push
or
bsf
push
mov
int
mov
in
fcmovnb
int3
rorb
leave
add
mov
push
lret
mov
out
imul
fsts
and
lods
or
loopne
mov
cwtl
rcl
mov
addr16
shll
es
incl
mov
adc
hlt
out
subl
leave
daa
cld
add
mov
add
int3
aas
dec
pop
sar
adc
ljmp
dec
out
shl
and
dec
push
dec
imul
ror
in
call
or
sbb
mov
mov
fsubr
adc
pop
fistl
repnz
bswap
pusha
jge
mov
ljmp
shl
cmp
insb
int3
jb
cmp
mov
icebp
ror
pop
out
fmull
shr
push
stos
fbstp
jle
pop
repz
and
mov
aaa
inc
out
int3
aas
in
adc
popf
frstpm(287
int3
stos
fstpt
out
inc
xchg
out
jge
stos
jmp
sbb
adc
leave
shr
daa
sbb
imul
mov
shlb
inc
out
lmsw
push
adc
dec
stc
adc
lcall
imul
and
aad
jne
add
iret
mov
rorl
push
jne
mov
rorb
or
or
push
xor
mov
out
push
popa
mov
push
xchg
pop
gs
mov
call
mov
movsl
push
loopne
fldt
lods
fwait
int3
inc
jmp
mov
ret
loope
iret
or
dec
outsl
lret
lods
shlb
fldl
out
rcrb
lds
sub
pop
sub
mov
inc
int
aad
sub
mov
cmp
shlb
xchg
arpl
mov
faddl
xchg
push
mov
add
xchg
ljmp
sub
insl
push
xor
sub
aad
and
imul
fcom
loopne
roll
sbb
pop
imul
addl
leave
fildll
mov
insl
dec
fxch
sbb
out
sub
adc
mov
out
out
ret
add
outsl
cmp
into
out
in
imul
ljmp
inc
icebp
jg
push
push
imul
adc
aam
jmp
ret
cmp
js
rclb
nop
pop
insl
int3
fucomip
stc
lock
out
fnsave
sub
jae
sbb
inc
adc
lods
call
out
cmp
fcoml
out
cmc
jae
or
into
add
xchg
shl
lea
fisttps
in
xlat
pop
stc
inc
sub
lret
sbb
mov
leave
in
ret
mov
xor
push
inc
repz
faddp
jmp
push
aad
push
iret
push
lock
xchg
push
inc
roll
dec
mov
dec
ffree
xchg
shr
or
jmp
gs
stos
xor
mov
inc
pop
sub
mov
inc
sub
arpl
xor
mov
mov
pop
add
lds
dec
dec
cwtl
jmp
leave
loope
cmpsl
inc
gs
mov
dec
call
xor
xor
xlat
fadds
lahf
loopne
in
rclb
push
in
fisubl
or
pop
outsl
push
dec
shrb
mov
outsb
add
outsl
push
cmc
fdivs
sub
lds
iret
in
aad
adc
data16
leave
cltd
gs
lods
test
fldenv
pop
mov
inc
mov
adc
dec
mov
push
cmp
jl
mov
adc
or
adc
dec
clc
jmp
jmp
fisttps
xchg
xchg
inc
mov
jp
xor
rcll
add
nop
mov
cwtl
dec
fsubs
enter
out
leave
cs
adc
push
or
rolb
or
stc
das
enter
fcmove
cmp
mov
mov
stc
add
ret
leave
and
and
popf
outsb
rcrl
mov
loopw
or
fsubs
add
inc
enter
cmc
cmp
dec
cmp
and
sub
sub
icebp
adc
and
sub
and
adc
and
adc
adc
inc
xchg
aad
ror
and
jae
mov
out
fnsave
mov
jbe
xchg
mov
inc
mov
fisttps
sbb
dec
mov
pusha
jp
jg
mov
push
leave
pusha
xchg
sarb
mov
test
gs
sarl
ljmp
jl
jge
inc
iret
enter
aas
bound
add
mov
ja
test
xchg
or
ret
andl
add
jge
jl
mov
and
fnsave
int3
int
or
or
int3
cmp
out
sub
mov
hlt
sbb
dec
out
pusha
jg
jb
cmp
into
lods
cmpl
and
adc
enter
enter
or
inc
stc
shl
cmc
jmp
cltd
inc
leave
and
and
mov
or
cmc
jno
dec
popa
ret
imul
inc
rorl
dec
xor
aad
or
sub
adc
inc
add
or
icebp
stc
dec
loope
jmp
inc
int
dec
movsl
xor
or
jns
insl
cmc
push
inc
dec
dec
ret
cmp
inc
add
aad
shll
test
shll
push
push
dec
pop
lds
stc
leave
jecxz
enter
or
inc
hlt
shl
cmc
testb
or
or
or
or
cmc
push
add
ret
add
add
add
cmc
push
sbb
ret
sbb
mov
clc
dec
and
pop
in
es
cmp
cmp
dec
and
and
and
shll
cmc
cmp
dec
cmp
adc
mov
out
sarb
mov
mov
int
or
mov
xchg
push
sarl
mov
enter
cmc
adc
add
or
sub
add
sub
fdivl
mul
jecxz
roll
clc
shlb
cmp
mov
mov
mov
ss
add
call
cmpsb
lret
push
xor
push
jae
push
nop
push
pop
and
jns
inc
popf
call
movsl
adc
cwtd
cmp
iret
call
mov
xchg
out
in
in
loop
mul
sub
rcrl
xor
ret
lahf
ret
xchg
pop
ja
jg
addr16
outsl
ret
dec
call
mov
xchg
push
and
clc
add
add
add
mov
xchg
push
and
clc
or
or
or
mov
xchg
mulb
idiv
hlt
dec
mov
lock
fsubrl
lahf
ret
xchg
sub
or
div
jbe
or
jl
rorb
pop
sbb
int3
push
add
call
cmp
mul
out
sub
fadd
gs
in
sbb
cmp
mov
jne
pusha
stos
xlat
push
loope
mov
sub
cwtl
cli
aam
sti
and
das
mov
call
insl
ret
mov
int3
rcrl
mov
inc
and
cmp
rolb
dec
xor
ret
in
jmp
les
or
or
subb
repnz
das
roll
sahf
cmc
out
mov
cmp
hlt
mov
mov
xchg
sarl
jno
mov
inc
pop
shll
and
or
cmc
in
dec
aad
mov
jns
scas
dec
xchg
cmp
lods
shrl
cmc
lods
add
aad
or
inc
test
movsl
cmp
test
xor
xchg
aad
or
or
aad
or
xchg
rcrl
lahf
ret
push
aad
or
popf
rcll
fwait
ret
aad
cwtl
or
inc
cltd
sarl
xchg
ret
test
pop
or
mov
or
cmc
cmc
mov
ret
aad
or
xor
or
mov
dec
cmc
mov
aad
or
inc
je
in
cmc
jne
dec
jb
gs
leave
mov
cmc
jo
mov
jno
movsl
daa
sarb
cmc
jg
dec
jl
jns
jge
push
inc
jp
inc
cmc
jnp
dec
js
sub
jns
cmc
inc
data16
shrb
aad
or
mov
cmc
inc
arpl
ret
pusha
aad
or
stc
bsf
fs
popf
jae
sub
push
mov
lahf
jns
movsb
jmp
pusha
fdivrl
jle
dec
mov
mov
xor
shr
lret
jp
mov
pushw
incl
cmp
aaa
stos
in
enter
mov
cltd
jle
mov
loopne
mov
sbb
xor
cmp
punpckhwd
mov
mov
test
pop
js
mov
pop
xchg
ss
popa
rclb
xchg
fbstp
andb
xorb
aad
adc
pusha
jbe
mov
adc
xor
in
mov
sarl
test
inc
daa
mov
rorl
mov
mov
adc
fcmovne
ret
aas
in
outsl
mov
leave
jmp
push
int
leave
push
add
fstpl
or
sbb
int
icebp
inc
cmp
or
jns
out
xchg
ljmp
loope
sub
xchg
jnp
lret
jp
cmpsl
lds
add
cmpsl
cmp
jno
xor
roll
add
xlat
sbb
rcr
sbb
push
add
push
roll
mov
cmc
sub
jge
orb
sbb
fists
mov
les
arpl
inc
lds
hlt
mov
cmpl
shll
cmp
and
ret
movsl
cmp
mov
mov
in
sti
push
imul
or
stc
rolb
and
xor
lea
xchg
pop
add
icebp
dec
jae
pusha
jp
pop
dec
fnstenv
xchg
and
xor
mov
in
cmpb
vandnps
aad
lods
push
add
dec
call
mov
cmc
fcomi
cmp
lock
or
lock
test
jno
out
jno
call
mov
adc
int
inc
or
inc
clc
dec
leave
pop
test
jl
jecxz
pop
add
stos
jmp
cmp
xchg
jb
push
add
imul
sbb
push
iret
mov
popa
in
jbe
jne
iret
imul
ja
mov
push
int
jge
xor
stos
out
sahf
dec
test
or
cld
mov
aas
sub
sbb
and
cli
cltd
jns
testl
push
ret
aad
shll
xchg
stos
repz
push
addr16
sbb
iret
shl
out
std
repnz
fisttps
adc
inc
sub
mov
sbbl
iret
mov
xlat
leave
inc
aad
lock
mov
xchg
mov
and
cmp
test
sub
jp
and
roll
inc
sbb
mov
push
xchg
jno
repz
inc
pop
mov
shlb
and
in
jae
jg
loope
cwtl
mov
lds
stos
push
add
adc
sub
add
test
cmpsb
leave
ljmp
in
jae
hlt
xor
add
divl
test
mov
test
xchg
push
adc
sub
cli
jmp
push
aam
pop
leave
loope
push
pop
fst
jp
adcb
test
jnp
js
lds
enter
sti
andl
lret
sbb
jns
mov
add
rcrb
addb
lahf
fisubl
or
arpl
xor
int3
ja
cmc
mov
int3
je
int3
dec
mov
nop
or
sti
pop
int
addr16
ja
xchg
jge
bound
rcr
mov
adc
sbb
aad
or
inc
push
rcll
cmc
adc
dec
mov
add
andl
shll
cltd
ret
adc
ja
sbb
jle
xor
movsb
xor
pop
xchg
dec
fsts
scas
ret
leave
dec
lret
movsl
ltr
int
xchg
in
inc
shrl
loope
test
push
pop
out
hlt
pushfw
push
enter
inc
and
inc
aad
jae
sbb
movsl
adc
adc
pop
sti
rorl
loope
mov
mov
mov
imul
mov
inc
pop
add
aad
push
push
out
pop
rcr
inc
push
jmp
shl
shlb
add
roll
stc
mov
adc
shlb
add
leave
inc
mov
leave
adc
icebp
sbb
ret
stc
pop
icebp
shl
sbb
shrl
shl
icebp
mov
adc
imul
push
pop
shrb
roll
push
rcrb
jl
push
and
push
cltd
sarb
add
ret
mov
popf
loope
sub
mov
mov
jp
rcrl
leave
lea
ja
jbe
jno
enter
roll
shll
xor
mov
jne
loope
callw
fnsave
aad
xlat
stc
icebp
xor
icebp
in
xlat
cmp
leave
pop
test
pop
int
roll
cmp
loope
dec
call
popf
aad
rcrb
xor
repz
lds
xor
sarl
icebp
repz
and
sub
adc
adc
xor
mov
mov
xor
jmp
call
cmp
add
mulb
or
xor
outsb
mov
fnsave
sub
jns
and
lds
or
mov
fs
shlb
sub
in
outsl
in
fstps
insb
roll
cmc
stc
icebp
xchg
xor
sub
sti
jl
gs
sar
outsb
sub
into
shr
sbb
lods
outsb
cmp
mov
xchg
cli
repz
fldenv
fdivr
into
fprem
cmc
sub
andl
scas
cwtl
and
fxch
add
sub
sub
sbbl
testl
insb
js
xrelease
push
fnstcw
sub
push
subb
subb
lret
or
andb
cwtl
push
rclb
psubusw
out
sbb
inc
loope
and
lcall
and
adc
faddl
lock
nop
negl
or
or
sahf
mov
sahf
add
aad
add
jno
es
movsl
xor
test
add
push
or
xor
pop
fisttpll
hlt
je
or
xchg
dec
adc
test
and
add
incl
mov
or
repz
mov
hlt
inc
loopne
shll
mov
or
cmc
add
or
rcll
sub
pop
cmp
ljmp
out
stc
rol
ret
outsb
xchg
adc
scas
jl
test
jge
push
repnz
or
mov
and
cmp
sub
out
pop
rsm
dec
in
xor
cmpsb
or
test
mov
xchg
dec
and
mov
ret
sbb
inc
mov
stc
mov
pop
test
in
pushl
ffree
push
std
stc
mov
repnz
stos
mov
jno
stc
inc
push
push
movsl
stos
mov
subb
fwait
icebp
push
leave
nop
repnz
or
movsl
stos
lods
and
mov
push
js
scas
in
and
mov
shll
and
nop
popa
fnstcw
cltd
xchg
pop
push
iret
cmp
push
rol
iret
mov
mov
gs
ja
mov
push
leave
aad
aad
adc
sbb
mov
or
dec
inc
ret
push
xorb
cmp
adc
jg
pop
cs
and
cmp
leave
jbe
sbb
pop
lcall
mov
push
push
adc
jne
xor
repz
insl
mov
imul
pop
dec
inc
ret
dec
aad
or
cmc
add
or
cmc
or
inc
std
sar
cmc
in
dec
in
ret
jmp
jg
mov
mov
test
aad
or
jns
gs
insl
pop
dec
inc
push
sbb
out
mov
enter
inc
int3
shll
int
leave
pop
leave
enter
lret
std
sub
mov
lds
sub
rcl
in
adc
add
add
leave
call
cmp
sub
shll
enter
sti
pop
mov
dec
xor
divb
call
shr
add
ljmp
push
xchg
and
pop
roll
int
mov
mov
jae
push
mov
adc
cmp
push
sahf
leave
xor
pop
xchg
repz
pop
imul
inc
sar
xor
xor
fs
loope
lock
repnz
inc
xchg
bound
inc
add
mov
fwait
pop
inc
jno
push
cmp
repz
sbbb
loopne
sti
out
add
jno
lret
or
ss
hlt
leave
jg
jecxz
ror
stc
add
out
rcrb
cmc
rol
jns
ret
inc
dec
ret
aad
or
inc
fdivrs
dec
fcmovnb
xor
or
inc
and
cmp
adc
dec
add
cmp
icebp
or
mov
cs
mov
jp
xor
mov
push
xchg
pop
and
int3
pop
push
aad
lds
mov
cmpsl
inc
mov
mov
push
jbe
mov
mov
mov
ret
enter
xor
sub
mov
xchg
divb
mov
jne
add
testb
loopne
or
rcr
std
cmc
ret
rol
in
aad
or
inc
int3
rcr
cmc
into
lds
or
inc
mov
mov
fbstp
ret
cmc
mov
mov
lret
ret
aad
or
inc
cltd
rcr
cmc
add
aad
or
inc
jns
cmc
popa
rorl
ret
rcl
imul
movsl
push
pop
ret
outsb
xchg
mov
xor
cmc
and
or
lret
bound
iret
jmp
sub
leave
sbb
xor
repnz
adc
or
shlb
jnp
enter
mov
ret
xchg
popf
or
ret
rcr
cmc
dec
or
pop
aad
or
inc
shrl
orl
mov
jecxz
out
add
dec
daa
ret
dec
aad
or
xchg
lcall
xor
ret
not
sbb
cmp
rcrl
pop
jg
add
aad
cmc
ffreep
leave
rolb
shl
cmc
adc
dec
dec
ret
push
aad
or
nop
rcll
enter
lret
pop
outsb
lret
mov
roll
xchg
rorl
ffree
sarl
enter
add
lret
mov
inc
xor
xor
icebp
xchg
xor
repz
fscale
shll
add
pusha
add
ret
rcr
sarb
mov
add
add
and
fnstenv
leave
pop
xor
or
aad
roll
ror
int3
sbb
push
jecxz
xor
mov
mov
or
add
cmc
icebp
mov
jge
or
mov
shll
int
fmull
mov
inc
std
dec
dec
leave
fisttpll
inc
dec
mov
mov
inc
into
packssdw
cmp
filds
jns
scas
mul
sar
cmc
sbb
insl
jns
gs
add
loop
roll
ror
or
sub
mov
dec
icebp
stos
dec
pop
xor
xor
leave
cmc
sarl
dec
inc
xlat
insl
popa
push
out
jns
sarl
pop
pusha
lret
jle
inc
ds
fnstcw
cmpsl
lea
mov
jns
mov
mov
lret
jb
sbb
movsl
repz
xor
inc
pop
lret
mov
jge
fcoms
mov
mov
fimull
xor
lea
cmpxchg
mov
imul
sbb
aam
xor
inc
xchg
iret
mov
call
jle
push
cmc
lods
xor
dec
pop
xor
cltd
std
test
mov
mov
dec
test
mov
jnp
inc
imul
mov
dec
cmpsb
and
dec
mov
mov
imul
repnz
xchg
daa
xchg
lea
xor
cmc
jmp
mov
jne
xchg
stos
push
test
mov
cmp
adc
lea
iret
push
outsl
push
fmul
xchg
push
test
xor
xchg
daa
mov
or
repz
push
inc
mov
cli
in
arpl
cld
and
into
pop
inc
sbb
shll
add
cmpb
sbb
mov
inc
mov
mov
or
dec
mov
add
jne
and
mov
mov
mov
xchg
push
and
cli
sahf
push
dec
inc
das
faddp
xor
fcoms
andb
clc
neg
mov
je
scas
jno
push
sub
mov
out
stos
mov
repz
xchg
stc
jae
xor
lea
xchg
mov
or
jg
fiadds
filds
add
and
mov
mov
lahf
push
jnp
clc
hlt
insb
pusha
mov
xchg
jge
cli
loopne
dec
cmp
sbb
pusha
add
mov
scas
out
dec
mov
inc
xor
les
test
xchg
into
stos
ds
xchg
jge
adc
add
adc
add
inc
xor
jno
sti
fdivrs
adc
mov
loopne
insl
std
rorb
mov
xor
inc
jns
mov
dec
sbb
fisubl
xchg
aaa
call
mov
xor
pop
mov
out
out
sti
loop
adc
jecxz
or
clc
push
mov
jg
push
fwait
push
xor
xchg
sub
push
add
cmc
sbb
in
aam
xchg
mov
out
push
add
sub
push
jno
jae
mov
pop
xchg
dec
sbb
mov
std
jle
xor
into
or
mov
inc
cmp
rcrb
mov
sarb
mov
push
xor
out
xor
mov
mov
divb
xchg
pop
mov
es
or
cld
mov
call
cmp
lds
or
lds
push
and
test
pop
mov
ljmp
daa
pop
gs
add
cmp
lds
jecxz
fisubrl
ss
mov
mov
cmp
dec
jnp
jns
and
add
sarl
in
aad
cmp
aam
leave
cmp
fbstp
jo
aas
stc
shr
iret
ds
lret
icebp
loope
call
jo
orb
shll
jb
dec
mov
into
aaa
mov
add
push
jo
and
inc
in
ret
and
add
mov
ret
add
jnp
adc
rol
lcall
iret
or
dec
cs
push
popf
inc
iret
fldenv
enter
dec
fcomps
push
rorb
out
and
mov
test
in
or
fiaddl
jnp
rcr
cmc
shlb
pop
jo
sub
imul
stc
ret
jp
mov
iret
aad
lret
adc
mov
cli
inc
bswap
std
rcl
movsb
adc
xor
call
rorb
cmp
das
loopne
iret
in
cmp
das
inc
stc
in
adc
call
movl
adc
rep
popf
fucom
das
punpckhdq
jo
push
arpl
shl
xchg
call
in
lds
mov
leave
stos
das
cmc
and
mov
cli
jmp
push
fsubrs
dec
add
xor
out
cld
icebp
xchg
push
sub
sub
inc
aad
sub
inc
jmp
lock
dec
jmp
push
xor
les
inc
fmulp
or
enter
repz
sbb
dec
or
adc
jae
ret
fmul
xchg
shl
or
mov
std
bound
out
or
or
push
icebp
loopne
dec
add
inc
orb
mov
leave
adc
rolb
sbb
inc
pop
icebp
dec
xor
ss
dec
mov
lret
push
dec
dec
dec
mov
insl
mov
mov
xchg
mov
mov
xor
mov
jp
mov
mov
jns
mov
stc
mov
jmp
ret
inc
aad
or
mov
iret
mov
add
xchg
mov
dec
sbb
jno
dec
cltd
rorb
mov
mov
xor
mov
mov
cs
pop
call
rcrb
or
and
xchg
dec
daa
ret
mov
inc
sarl
cmc
jmp
jbe
mov
rol
cmp
dec
rol
cmp
xor
mov
popa
jns
adc
pop
ljmp
cmp
outsb
stc
mov
cmp
ljmp
test
lea
shr
jb
ror
repnz
adc
inc
mov
mov
mov
cmc
shll
adc
lods
mov
mov
dec
rol
sub
cltd
inc
rcl
cmc
ret
popa
dec
ret
aad
or
cmc
fcmovb
icebp
mov
dec
jmp
add
ret
enter
dec
mov
les
arpl
xor
loopne
sarb
rclb
addl
test
xlat
ja
xor
jne
rcl
mov
aas
repnz
mov
rclb
popa
into
mov
repnz
dec
sarl
shll
mov
out
icebp
mov
push
fsts
adc
popa
aas
bnd
sbb
ss
leave
lret
cmp
fiadds
mov
rclb
mov
aas
repnz
mov
mov
rclb
ror
shll
sar
shl
cmp
add
cwtl
adc
mov
xor
lcall
dec
fst
ss
cltd
roll
nop
in
pushf
mov
adc
rorl
leave
cmp
and
xor
or
ror
call
sub
jns
xchg
xor
imulb
fdecstp
lods
xor
lock
mov
movsb
stc
jns
xor
mov
addl
mov
mov
aad
rcll
sbb
add
lret
add
iret
int
xchg
imul
icebp
lret
pop
push
rcrl
sarb
or
fdiv
int
mov
int3
repnz
jne
iret
mov
leave
stc
cltd
icebp
arpl
rorb
rcl
int
repnz
lea
dec
cmp
rcl
in
xchg
mov
fnsave
jne
icebp
shl
xlat
jmp
sbb
shl
mov
xor
into
rorl
rolb
lds
rcll
dec
inc
xor
or
cmp
shrl
aam
icebp
mov
out
fldl
int3
or
xchg
cmc
aam
int
notl
cld
push
cwtl
lock
push
arpl
mov
cmp
jbe
out
sub
mov
sub
push
aam
rcl
adc
cmp
loop
xlat
int3
lret
out
loop
rcl
pop
sub
out
xchg
femms
scas
add
add
add
add
repnz
and
or
add
push
add
sbbb
add
sub
pop
rcl
jmp
inc
jmp
cmc
or
dec
sti
fsubl
add
sbb
fwait
in
es
loop
jbe
or
push
loope
shl
in
xchg
rcl
and
adc
sub
cmpsl
movsb
negb
mov
test
clc
jmp
das
push
adc
mov
and
mov
and
ljmp
movsb
dec
lahf
and
and
or
add
adc
adc
adc
stc
sbb
push
jg
or
pushf
add
ja
or
leave
adc
cld
xchg
js
add
push
rcr
rcl
pop
mov
je
sub
enter
jecxz
enter
or
dec
jno,pt
xor
sar
lock
jecxz
enter
cli
xor
mov
xchg
mov
cs
jbe
mov
jne
gs
mov
and
mov
push
stc
cs
jge
xorb
dec
fcomp
mov
dec
mov
inc
and
jb
ds
mov
mov
cmc
mov
xor
into
aad
or
inc
cli
shl
shll
enter
cmp
mov
mov
mov
push
cmpsl
add
xor
dec
xor
enter
cmp
push
in
cmc
stc
loope
rclb
ror
xor
fmulp
mov
xor
dec
fld
rcrl
mov
mov
xor
mov
mov
cmc
mov
dec
jno
icebp
mov
lock
test
enter
push
mov
mov
mov
sub
ja
jo
adc
jb
jbe
or
sub
sar
out
pop
dec
mov
mov
mov
icebp
or
cmp
shlb
xor
xor
shl
clc
xor
pop
dec
roll
cmp
jae
gs
mov
cmp
sub
dec
or
mov
fucomp
cmc
mov
jne
into
xor
mov
imul
cmc
jmp
push
xor
jle
mov
mov
ret
mov
enter
mov
leave
stos
in
mov
push
mov
rcl
leave
inc
adcl
fdivs
lds
icebp
les
out
jns
aaa
jle
je
cltd
cmpsb
fadd
jecxz
mov
loope
and
loope
lods
rcr
jmp
out
sub
shr
push
icebp
mov
rorb
test
dec
sbb
into
xor
movsl
pop
adc
leave
sub
imul
cmp
outsl
leave
mov
mov
leave
pushf
sarl
leave
dec
pop
push
mov
arpl
das
sub
xor
addr16
dec
mov
mov
mov
xor
push
lds
leave
scas
and
add
lds
in
xchg
mov
dec
push
ja
in
xchg
xor
lds
test
lds
xchg
mov
add
mov
cmc
cmc
mov
inc
cmc
jnp
icebp
or
pop
cmc
dec
dec
mov
jne
cmp
xor
es
iret
repnz
movsl
call
sbb
scas
and
int
xor
inc
fldenv
sbb
ror
and
sub
fstps
cmpsb
or
test
imul
nop
lret
lret
fstps
ss
or
leave
jle
in
ret
pop
cld
int
or
mov
sub
sbb
ss
jge
sbb
int
ror
aam
adc
ror
add
or
cmpsb
or
add
sbb
sbb
not
ss
cmp
add
les
ljmp
dec
and
adc
sub
and
dec
iret
aaa
mov
adc
or
jp
jns
popf
sarl
mov
mov
mov
jl
or
mov
iret
xchg
into
lea
mov
mov
or
push
fisttpll
mov
or
adc
dec
and
fwait
ret
sbb
or
pusha
icebp
xchg
mov
jnp,pt
out
repz
inc
mov
call
push
rorl
xchg
xchg
call
xchg
into
or
xor
add
jnp
rorl
jb
push
imul
call
mov
inc
push
inc
es
insb
iret
shlb
mov
mov
and
in
shrl
mov
and
mov
ss
xor
cmpsb
cld
iret
sbb
subb
aad
data16
mov
cmp
mov
repnz
aaa
or
dec
or
lds
mov
cmpsb
mov
scas
mov
into
xor
fdivl
lret
mov
xor
dec
inc
dec
aad
inc
mov
test
or
xor
in
mov
aaa
stos
push
in
jnp
adc
iret
shlb
push
mov
jno
mov
push
mov
rcll
inc
mov
and
mov
xorb
mov
fsubl
xchg
cmp
xor
sub
into
ss
es
lret
xchg
int3
cmc
dec
fs
test
repz
add
inc
iret
inc
aad
dec
in
and
aaa
inc
icebp
mov
inc
or
incb
add
mov
or
sarl
dec
imul
mov
imul
data16
jae
and
nop
xchg
and
out
dec
cmp
mov
stc
mov
loope
mov
cmp
jmp
jns
gs
jns
push
mov
mov
lds
mov
pop
data16
cmp
gs
push
jmp
cmp
ss
or
mov
aas
pop
dec
mov
xor
in
in
lds
cmc
into
cmp
call
in
mov
add
push
jmp
nop
leave
cmp
mov
cmp
mov
lods
cmp
mov
sub
mov
add
and
in
std
ror
jle
cmc
adc
mov
mov
jmp
ret
insl
dec
popa
in
out
lock
mov
jns
and
cmp
mov
loope
or
rcrl
call
lds
mov
mov
lret
fbstp
mov
dec
mov
push
cltd
in
xchg
mov
dec
mov
arpl
sub
ret
xorb
mov
jno
in
jmp
mov
mov
jns
pop
and
leave
push
leave
cs
cmp
shll
jecxz
scas
cli
xchg
dec
push
jmp
or
leave
mov
mov
mov
jle
push
mov
mov
mov
into
ret
fsubrp
negl
jmp
jmp
pop
mov
adc
cli
and
fadd
push
mov
into
test
rol
leave
sub
inc
cmc
out
lret
xchg
sub
sbb
mov
rcll
jmp
xchg
das
stc
fs
gs
pop
pop
push
gs
scas
cmpsb
cwtl
jg
xchg
sarl
mov
mov
aaa
icebp
xor
add
repz
scas
dec
out
aaa
inc
xor
mov
push
push
in
fwait
mov
in
mov
mov
aaa
add
push
icebp
rorl
or
mov
push
mov
pop
push
adc
xor
lock
mov
dec
dec
fs
in
es
cli
or
sub
lock
push
pop
addl
cmpsl
seto
jno
rorl
xchg
shll
or
cs
lock
xor
sub
outsl
and
test
push
and
and
and
cmp
addb
hlt
inc
shrb
sbb
out
jns
xchg
jmp
push
test
stc
sbb
cmpxchg
mov
shrb
movsl
flds
add
fcoms
or
out
jecxz
fidivrs
gs
std
xor
ret
cld
fldcw
les
inc
sub
xor
pop
adcl
push
cs
pop
aam
daa
pop
dec
fwait
mov
sbb
loopne
out
sbb
sub
add
loopne
sti
aam
cs
loopne
xor
in
call
sub
loopne
push
in
addr16
push
push
arpl
shlb
sbb
mov
pop
int3
jno
loopne
fptan
out
repz
cmp
pop
mov
inc
and
pop
mov
dec
inc
stc
aaa
aaa
fnstcw
in
mov
test
xchg
popf
push
cmpl
add
cmpsl
hlt
push
rcr
shl
push
js
fsts
fidivrl
ds
push
xorb
adc
ds
imul
in
jmp
sub
inc
dec
dec
sbb
or
and
or
adc
fidivrl
pop
push
push
lret
mov
pop
dec
fldcw
fadds
mov
pop
loopne
lret
xlat
loope
fistl
mov
push
int
adc
lcall
jecxz
inc
push
subb
xlat
fidivrs
push
popa
in
shll
into
sbb
jmp
testl
mov
nop
fldt
xor
mov
loopne
dec
ror
iret
add
out
mov
dec
add
jae
int3
shl
mul
lds
inc
pop
cltd
xlat
and
pminsw
adc
push
xor
dec
pushl
adc
lcall
cs
es
sub
and
xchg
lret
xor
ror
shll
cmp
leave
dec
add
cmc
and
pop
enter
ret
cmc
pop
repz
mov
or
pop
sbb
xchg
testb
cmc
testl
xor
vpsraw
mov
sarb
xor
ret
inc
jmp
adc
leave
repz
stc
add
sub
sub
pop
sbb
add
lea
xor
xchg
aad
rcr
out
insl
or
xlat
enter
dec
push
or
test
cmc
inc
inc
inc
fbstp
pop
sbb
add
sti
into
shl
lock
cmp
jmp
xlat
pmulhw
mov
sti
clc
fsts
add
adc
mov
in
and
int
mov
dec
mov
cmc
icebp
mov
enter
ret
in
adc
sbb
dec
cltd
and
adc
ret
leave
mov
jbe
mov
lods
sahf
cmp
mov
das
push
add
aad
sar
jecxz
push
std
out
or
mov
mov
call
test
outsl
xor
jle
fucomi
mov
inc
clc
xor
push
mov
jmp
movsb
fldl
mov
jmp
aad
mov
sub
ret
icebp
pop
arpl
lds
sbb
testl
arpl
loop
ret
push
cmp
cs
insb
adc
inc
jmp
inc
mov
sbb
in
add
dec
int
sbb
jmp
xchg
mov
mov
rorb
sbb
fnsave
push
adc
lock
push
xor
shr
push
add
mov
xchg
dec
sub
shl
dec
add
lds
sub
mov
inc
dec
dec
insl
in
push
mov
or
jne
inc
fldl2t
cmpsb
dec
xlat
inc
adc
jle
scas
inc
stc
enter
ror
or
sbb
mov
loope
leave
ds
and
jo
sarb
rcr
and
and
or
adc
jno
pop
pop
or
mov
das
cmp
in
pop
rolb
jmp
mov
push
test
ja
mov
and
popa
xchg
jmp
and
inc
stc
mov
push
lea
or
mov
mov
cld
test
dec
aaa
in
sub
inc
mov
ss
adc
loope
dec
das
fdivrl
sub
dec
cltd
add
mov
push
pop
in
movsl
shrb
in
inc
and
xlat
push
mov
inc
sub
mov
icebp
clc
xor
enter
divb
std
addb
mov
loope
ss
sti
decl
add
add
sub
aam
sar
cmc
sbb
adc
stc
loopne
and
or
data16
push
pop
js
pushf
add
flds
or
lea
call
add
lret
dec
pop
pmulhw
jmp
push
cltd
inc
in
test
divb
adc
jge
sub
and
adc
jecxz
pop
jecxz
sub
loopne
cmp
pop
repnz
stos
cmp
jno
cmp
ss
xchg
adc
sbb
or
mov
adc
sbb
or
arpl
mov
or
pop
mov
jecxz
fisubrs
daa
xor
call
dec
push
pop
ret
pop
xor
sbb
mov
aad
mov
aas
jl
sbb
aad
xor
rorb
pop
xor
sbb
mov
fadds
dec
add
mov
or
adc
or
push
test
inc
rcrl
enter
daa
mov
add
dec
or
push
fnstcw
xchg
adc
notl
mov
ss
sub
pop
lret
mov
movsl
pop
imul
negb
daa
add
push
in
add
adc
movsb
or
in
add
dec
ret
adc
mov
gs
or
sti
inc
push
addr16
xor
rcl
rolb
stc
mov
arpl
jae
or
popa
cld
mov
leave
es
mov
ret
das
add
xor
aad
out
out
cmp
cs
inc
pushl
aas
push
push
iret
dec
adc
inc
add
or
inc
add
mov
lcall
inc
xchg
inc
mov
adc
push
ret
inc
jecxz
dec
repnz
push
stc
mov
cs
pop
lock
jmp
xor
shll
sti
sub
push
xor
push
inc
push
pop
fwait
cmp
shl
push
inc
mov
sub
add
rolb
cmp
inc
sub
and
and
xchg
rorl
inc
int3
sbb
sub
inc
sub
sbb
add
mov
cmp
cmp
xor
in
xchg
cmovns
mov
out
shl
sub
lea
insb
xchg
ret
enter
xchg
sbb
push
aad
popf
lret
psraw
pop
aad
insb
pop
call
ret
test
xchg
mov
test
shlb
or
hlt
pop
add
mov
add
leave
mov
adc
lret
dec
sti
lods
gs
mov
push
pop
push
and
int
xor
aas
clc
sub
sti
sub
adc
faddp
xor
andl
shrl
sub
push
rcrl
int
cmpsb
dec
int3
cmp
push
add
mov
jns
sub
in
movlps
dec
stc
adc
in
lret
mov
cs
inc
push
pop
push
int3
adc
xchg
insl
ljmp
lods
pop
iret
dec
push
pop
stc
push
xor
lret
fnsave
mov
in
mov
test
in
fistps
inc
mov
cmp
jne
jmp
pop
and
and
neg
popa
adc
pop
orl
sarb
mov
cmc
int3
add
adc
adc
add
stc
mov
punpckhwd
into
jo
aad
adc
mov
iret
push
or
aaa
jg
and
shl
ljmp
push
push
xchg
leave
leave
jno
lret
adcb
jo
jecxz
je
dec
xor
xchg
out
push
mov
inc
popf
push
xchg
mov
push
fisttpl
int3
add
or
fucom
ret
pop
daa
sub
iret
scas
daa
xor
repnz
jne
sbb
add
xchg
or
push
or
or
or
or
cli
popa
sbb
jg
andb
mov
std
inc
mov
repnz
and
mov
aaa
ret
sti
cmpps
xchg
roll
or
and
int
adc
stc
sub
cltd
sub
enter
add
je
lods
cmc
inc
ret
inc
mov
mov
mov
push
int3
psraw
mov
nop
push
adc
dec
mov
mov
mov
stc
out
adc
adc
xor
pop
fidivl
mov
cmc
dec
inc
das
mov
test
xor
xor
dec
jnp
bound
fsts
inc
popa
and
notl
add
dec
sti
cmp
mov
and
xor
and
adc
loopne
aam
push
roll
roll
sbb
sub
stc
fidivrs
cmp
decl
add
shll
sbb
loope
lret
int
out
add
adc
repz
jmp
mov
test
and
cmp
cmc
ret
xor
andnps
popa
cmp
push
sub
ficoms
ret
mov
lret
inc
in
icebp
test
cmp
ret
push
sti
jno
inc
daa
pop
lds
and
lcall
fwait
enter
leave
mov
sbb
push
mov
and
inc
sub
pop
mov
je
adc
decl
mov
adc
dec
in
pop
or
loope
sub
jnp
push
xor
sbb
inc
push
in
xor
pop
push
adc
in
shl
and
and
inc
dec
push
scas
loop
adc
sbb
sbb
inc
sub
add
xor
or
out
inc
adc
repnz
jl
xor
add
gs
rcl
sub
dec
xor
addr16
add
int
movsl
inc
inc
xor
jmp
sbb
ror
sub
fistpl
dec
or
out
icebp
je
xlat
cmp
roll
enter
enter
add
xchg
loope
pusha
insl
in
dec
xor
bound
mov
fld
out
xchg
jecxz
push
xor
xchg
push
adc
add
add
pop
in
xlat
add
sbb
pop
cmp
sub
push
xlat
fildl
jns
jecxz
cmc
xchg
jb
dec
pop
jo
cwtl
aas
rolb
add
popf
out
or
cld
xlat
add
add
aad
ret
jo
cltd
lods
and
shll
nop
adc
in
hlt
or
outsl
int
dec
mov
mov
sbb
mov
jno
daa
add
rorl
pop
rcrb
lret
dec
aaa
sub
pop
shrl
xor
mov
mov
add
and
mov
int
mov
and
dec
mov
out
or
and
or
cmp
jnp
xor
inc
ret
inc
dec
push
mov
je
shrl
add
jecxz
sbb
popf
adc
lahf
mov
push
sub
add
fbstp
adc
lret
jmp
and
jae
cltd
mov
les
cmpsl
xor
iret
pop
insl
mov
shl
rcrl
stc
pop
imul
add
add
aad
or
lahf
dec
sbb
pop
fsts
pusha
aaa
ljmp
cmp
int
add
add
pushf
aas
stc
rolb
and
jne
iret
movsb
adc
xor
add
insl
push
or
and
filds
push
dec
fadds
iret
jmp
dec
sbb
mov
mov
add
jo
push
or
fcomip
sub
jge
pop
adc
fyl2x
popa
push
rcll
add
cmc
icebp
and
push
ret
pushf
dec
dec
xor
iret
inc
rorl
inc
fcomip
int3
ljmp
sbb
dec
daa
jmp
or
inc
fcomi
or
hlt
flds
adc
jecxz
cmp
in
movsl
lds
movb
and
mov
jmp
or
xchg
xor
cmp
sub
xor
sub
inc
cmpsl
and
cmp
jg
or
int3
xorl
pop
mov
mov
add
cmc
jne
mov
sbb
add
rorl
test
dec
aad
jg
pushl
jo
int3
mov
loopne
or
mov
pop
jo
push
pop
int3
hlt
fadds
les
out
push
sub
push
shlb
jae
mov
mov
xadd
pop
mov
inc
add
push
push
pop
shrl
pop
mov
aad
xor
ror
in
repz
ret
leave
mov
and
pop
mov
or
push
push
out
loopne
jnp
mov
and
mov
mov
outsb
dec
xchg
inc
and
repz
jo
pop
lods
dec
jo
std
out
pop
in
in
loop
adc
or
push
clc
in
inc
jno
in
movsl
jmp
repz
push
cmc
sbb
sub
insb
pop
fcomi
add
sub
xor
rcrl
into
xor
and
cmpsl
inc
mov
and
inc
daa
pop
ds
int3
jmp
push
lock
mov
sti
sub
pop
das
pop
sub
and
push
imul
push
jbe
jp
mov
add
int
mov
aaa
sub
mov
adc
fstl
or
or
pop
cmpsl
mov
aad
mov
cmp
inc
or
adc
jne
psubw
sbb
jle
test
sbb
jne
loope
sti
mov
psllw
mov
push
inc
pop
push
js
lods
xchg
mov
sub
pop
cli
jl
mov
into
in
femms
dec
sbb
xor
out
inc
dec
push
mov
jno
out
xchg
push
test
stc
push
iret
iret
clc
cmp
sti
outsb
inc
scas
push
mov
xchg
jno
int
or
push
movsl
mov
clc
ljmp
cmovae
mov
xchg
push
mov
outsl
loope
into
loope
clc
loopne
sti
mov
enter
add
into
push
in
sub
in
xchg
and
sar
out
sti
cmp
pusha
std
xchg
iret
lret
out
andps
mov
iret
stc
ret
push
std
bound
jb
sbbb
mov
mov
xchg
jg
cwtl
lods
cmpsb
mov
sti
push
nopl
jb
std
mov
stos
inc
mov
cs
jbe
sub
fnstenv
mov
clc
out
mov
clc
sar
mov
or
clc
loope
sti
mov
mov
mov
push
push
inc
fcompl
and
lock
or
dec
pop
pop
filds
in
cmp
ja
cwtl
movsb
push
mov
cli
adc
iret
mov
aam
or
cli
std
popa
cld
jno
mov
cmpsl
iret
cmc
out
cvtps2pi
mov
into
outsl
push
jne
mov
iret
stc
pextrw
dec
or
pop
clc
sub
push
push
or
imul
lods
andb
fnsave
fcompl
push
mulb
iret
jmp
cwtl
xchg
mov
mov
repnz
jo
lea
loopne
xchg
popa
test
ret
clc
jecxz
sti
cmp
dec
or
mov
in
out
mov
inc
stc
or
cli
fwait
std
xchg
mov
cli
sub
xchg
sub
add
loop
in
out
clc
pop
pop
sti
lock
cli
fdivrp
jmp
repz
mov
sub
mov
push
enter
int
adc
cmp
inc
inc
icebp
and
and
cli
push
xchg
mov
std
aad
jae
pop
and
mov
cmp
loope
mull
mov
xor
aad
xchg
lods
xabort
out
sti
lods
iret
mov
int
dec
dec
arpl
mov
lahf
jge
jmp
clc
fdivr
add
push
xor
jb
test
inc
jl
dec
sarb
xor
in
xor
jge
mov
sbb
xchg
enter
out
ss
dec
divb
cwtl
dec
pop
addr16
inc
dec
cli
pop
inc
imul
je
addl
and
jg
and
add
sbb
pop
loope
mov
loopne
adc
and
xchg
cmpsl
xchg
pusha
loop
jnp
test
out
mov
out
add
pop
pop
mov
shlb
cld
dec
mov
pop
aam
xor
mov
and
iret
loope
pop
or
sbb
fists
addr16
adc
daa
inc
xor
jecxz
inc
jb
xchg
shll
sti
popf
cli
lods
es
in
sti
sbb
xor
dec
in
imul
xchg
pop
scas
ss
out
aam
fdivl
jo
lea
fisubs
push
cmpsl
data16
stc
sbb
xchg
ljmp
clc
sti
sbb
inc
push
iret
cli
push
punpckhdq
push
out
mov
rorl
mov
xabort
sar
jecxz
sub
xor
dec
iret
ljmp
mov
push
ret
xchg
aas
loope
xchg
jbe
mov
lods
fnsave
fcompl
inc
call
iret
loop
sbb
pushf
test
mov
and
xor
add
cltd
sbb
ret
out
sub
pop
adcl
stc
xchg
or
push
movsl
jno
cmpb
sub
xor
inc
inc
push
std
or
iret
out
mov
into
and
inc
jb
leave
fcoml
sbb
movsl
pop
mov
jecxz
cld
adcb
leave
and
int
dec
push
inc
ss
push
xchg
jbe
nop
mov
je
xor
mov
pop
dec
and
sbb
jmp
aas
in
pop
jle
cwtl
repnz
out
inc
mov
roll
cmpsb
popa
xlat
stc
loopne
push
and
xchg
nop
ffree
sti
pop
pop
jl
movsl
rdrand
cmovo
lahf
jge
loop
lock
in
mov
mov
lcall
aad
inc
nop
pavgb
mov
dec
loop
in
aam
test
pop
inc
mov
jno
fwait
xor
out
inc
pop
push
pop
bound
mov
add
or
dec
aas
pop
aas
imul
mov
call
pop
cli
fcomip
pop
neg
or
add
inc
xor
arpl
psrlw
mov
into
in
push
loope
sub
push
mov
jae
push
push
push
insl
mulb
gs
std
or
int3
inc
aad
hlt
inc
in
cmpl
aad
mov
mov
jo
in
xlat
daa
pop
dec
or
mov
int
shr
loop
sbb
andl
or
loopne
mov
and
sbb
jb
sahf
push
mov
inc
and
xor
inc
adc
bound
mov
xchg
movl
pop
sbb
adc
lcall
iret
jae
or
std
lds
push
adc
test
mov
in
stc
mov
cmc
decb
decb
sbb
xchg
pop
adc
fisubs
pop
mov
pop
in
pop
insl
jns
mov
loope
add
jg
out
loopne
aad
pop
ret
jecxz
sbb
mov
xchg
loope
popf
mov
cmpb
push
mov
inc
cltd
sbb
inc
pcmpgtw
testb
lods
cmpsl
push
mov
mov
dec
xlat
ja
icebp
rorl
dec
mov
mov
loopne
jecxz
out
and
ret
unpckhps
mov
dec
lret
sbb
adc
daa
push
bound
mov
jne
xor
jns
mov
jns
and
int
cmc
sbb
enter
jo
push
cwtl
jl
lock
cmp
mov
clc
or
std
or
sub
mov
push
mov
ret
adc
add
xlat
cld
and
and
jo
nop
pop
arpl
mov
adc
inc
aaa
lret
popa
inc
stc
mov
adc
jb
in
inc
add
pop
popa
sbb
lea
add
pop
fisttpl
sbb
mov
stc
mov
or
jbe
push
inc
lcall
sub
orb
mov
insl
ss
repnz
inc
testb
and
and
imul
or
jns
jno
in
out
xchg
fwait
inc
cmp
pop
inc
cmpsl
mov
stc
mov
push
jg
insl
pop
popa
inc
test
test
nop
xor
jns
aam
adc
dec
dec
mov
mov
inc
rclb
mov
push
cmovle
mov
mov
xchg
repnz
in
inc
ss
jne
mov
addb
popf
movsl
push
rcl
adc
dec
cmpsl
loopne
dec
cmp
push
dec
dec
dec
mov
jle
mov
xchg
jmp
push
cmc
mov
jne
jb
and
inc
push
push
bound
test
mov
sbb
cli
adc
shll
inc
and
and
ror
loope
loopne
xlat
jecxz
in
rolb
mov
add
push
sti
dec
cli
outsb
std
xchg
out
jecxz
in
and
mov
aad
xchg
xor
mov
aad
jmp
fwait
aad
adc
fldl
adc
aad
jmp
mov
push
xor
mov
add
cmp
mov
fisubl
notl
xor
push
jle
sar
comiss
std
inc
cld
push
jmp
jge
pushf
in
xchg
jecxz
cld
icebp
lar
mov
into
dec
push
xchg
push
jns
cmc
clc
popa
cmp
mov
repnz
stos
or
loope
fimuls
pop
mov
iret
loopne
inc
pop
jecxz
clc
loop
iret
inc
in
push
or
or
shll
int
xchg
clc
out
sti
mov
sahf
lret
test
dec
fucom
insl
inc
fisttpll
scas
or
out
fwait
lock
inc
mov
xchg
cwtl
cmpsb
stc
in
jns
shl
dec
xchg
dec
test
bound
pop
decb
imul
jns
dec
movsb
loopne
cmc
jecxz
inc
or
sbb
adc
aas
and
and
insb
jle
jbe
adc
movsl
sbb
mulb
add
fsin
push
addr16
sbbl
push
out
std
cmp
std
or
out
adc
xor
dec
cwtl
jne
mov
adc
mov
sti
movsb
ret
mov
pushf
cld
jno
int
imul
fucom
pop
mov
loopne
jnp
inc
xorb
xchg
aam
and
and
icebp
cmp
cmp
add
add
aas
cmp
inc
in
dec
in
jne
lea
jbe
xchg
cltd
xchg
adc
mov
in
ss
dec
or
dec
movsl
or
push
ret
and
jbe
xchg
gs
jg
push
xchg
mov
and
popa
inc
add
mov
pop
sti
addr16
xchg
xchg
sahf
arpl
add
inc
popa
insl
inc
out
loopne
inc
mul
adc
stos
test
xlat
das
jbe
xchg
adc
in
adc
jmp
mov
sub
and
fidivrs
cmp
dec
mov
inc
mov
push
mov
dec
stc
inc
dec
or
ss
adc
push
and
and
xchg
popa
xor
aas
inc
aas
inc
aas
pop
aas
pop
aas
push
aas
bound
mov
test
lret
rorb
jb
incb
gs
stos
cmc
fwait
in
jno
cmc
add
pop
shr
push
fistps
fildll
inc
pop
or
mov
enter
and
push
cld
jp
test
iret
jecxz
push
ret
sbb
pop
mov
xchg
sar
in
push
or
pop
std
push
cld
imul
gs
jns
dec
clc
push
out
xchg
dec
xor
adc
lods
ds
std
int
sti
iret
xor
lods
pop
fadds
loope
xchg
cmp
xchg
mov
jecxz
loop
inc
inc
sbb
out
push
adc
pop
jo
mov
pop
xchg
pop
test
inc
cmpsb
repnz
push
les
sbb
jmp
out
xorb
mov
mov
jo
sbb
adc
das
cs
es
cmp
decb
inc
jmp
pop
inc
sbb
jg
jb
inc
mov
test
adc
mov
mov
and
or
iret
out
vmread
rol
call
andb
dec
cli
jns
scas
out
les
mov
jnp
popf
xchg
mov
std
and
stos
jae
mov
out
jmp
inc
push
jb
bound
sbb
mov
imul
out
inc
mov
repz
adc
jp
jae
sub
xchg
in
test
fbld
std
int
inc
fnsave
sub
out
mov
jae
mov
pop
ret
add
sub
aas
mov
xchg
pop
inc
mov
push
imul
scas
inc
je
sbb
mov
scas
jns
push
mov
int3
dec
ret
mov
into
fisttpll
rorb
mov
dec
js
sti
mov
or
or
pop
sbb
inc
mov
dec
mov
test
aas
outsb
aas
gs
ja
mov
sub
xchg
lods
out
mov
mov
lret
test
fstl
jbe
xchg
ljmp
repz
icebp
lock
pop
mov
and
mov
mov
pop
xchg
pop
xchg
push
xchg
push
jp
jno
je
lea
jg
xchg
push
cltd
scas
mov
mov
cltd
ret
lods
fsubs
pop
enter
jmp
andb
or
mov
mov
sar
cmp
cli
scas
iret
leave
clc
xchg
repnz
add
push
inc
popa
xchg
cli
out
clc
std
adc
es
push
out
push
dec
cmp
push
popa
lods
fsubl
out
cli
lods
adc
mov
nop
or
adc
jge
loope
and
cmp
mov
mov
sti
sbb
xor
jno
mov
shrb
loop
mov
adcl
mov
and
and
stos
jns
mov
std
das
in
dec
dec
inc
push
xor
fbld
fdiv
pop
push
fildll
inc
cmp
dec
pop
gs
mov
pop
mov
xchg
cmp
outsl
sbb
push
xchg
lock
fs
cltd
xchg
sar
and
and
dec
cmp
fstpl
cld
and
sbb
sahf
dec
movsb
jb
incl
inc
push
push
cmp
inc
mov
test
incb
pop
loop
addr16
das
loopne
xchg
and
sbb
mov
stc
and
daa
sub
cs
std
in
cld
loope
sti
stc
lods
xchg
sbb
cmp
or
sbb
dec
push
nop
inc
insl
sub
adc
jno
jne
mov
repz
mov
xchg
mov
mov
inc
mov
ds
xchg
incb
inc
shll
loope
push
stos
enter
imulb
iret
aad
cmc
inc
push
repnz
sbb
out
cmp
push
imul
jae
inc
mov
in
sti
pop
cli
and
xchg
lahf
gs
push
inc
mov
mov
jo
lods
adc
push
dec
or
dec
inc
pminub
mov
into
lock
sub
pop
std
fucomip
test
xor
mov
lods
out
cli
mov
pop
mov
sub
fst
inc
and
mov
sbb
daa
push
pop
sub
mov
call
rcll
inc
orl
stc
mov
call
mov
mov
and
adc
xor
test
sub
daa
xor
fistpll
cmp
cld
call
pop
cs
jmp
fwait
mov
mov
popa
or
loope
iret
jmp
sbb
insl
push
jp
ja
push
rorb
in
mov
or
test
fwait
movsl
scas
mov
cld
jb
jb
out
inc
aad
inc
or
je
mov
adc
sub
sub
std
add
jmp
xchg
pop
xchg
test
in
test
pop
notb
std
arpl
and
and
fbld
push
and
mov
nop
jmp
mov
and
and
lods
push
shrl
jnp
mov
sbb
inc
inc
sbb
flds
cmp
mov
loop
or
lods
shll
aad
jmp
xor
cli
jle
int
clc
sti
std
sar
aad
jmp
or
icebp
cmc
decb
decb
sbb
mov
and
fidivrs
pop
cmp
pop
dec
pop
dec
pop
jae
mov
in
stc
data16
aaa
out
pop
add
fistpll
cli
jo
or
dec
inc
sbb
adc
and
aam
push
nop
inc
mov
testl
in
inc
xor
pop
in
cmp
pop
mov
mov
xchg
mov
daa
aad
adc
out
arpl
xor
and
loope
sti
aam
ljmp
sar
pop
aad
iret
pop
in
inc
xor
mov
sbb
fucom
lds
fstpl
pop
test
sub
lods
mov
push
fcoml
test
cmp
aam
adc
mov
cli
mov
leave
adcl
rcll
std
mov
xlat
in
push
push
xor
xchg
std
insl
add
pop
jmp
jge
ficomps
pop
sbb
popa
cmp
clc
std
jb
sar
aad
daa
in
cmp
cmp
cmp
dec
cmc
mov
orl
movsl
insl
aaa
jnp
aas
outsb
or
inc
daa
outsl
inc
xor
inc
out
loope
gs
cmc
sbb
jge
jbe
mov
jecxz
sti
jns
sti
mov
add
push
test
sub
sub
jbe
xchg
cmpsb
xor
inc
pop
sub
addb
shrl
adc
shr
imul
pop
xor
pop
bound
pusha
dec
cmpsl
cmp
sti
push
cli
fs
nop
add
and
clc
decl
das
inc
pop
js
jo
insl
mov
rcll
adc
clc
loope
sti
fs
jl
mov
jns
push
jno
iret
icebp
ja
test
out
and
dec
inc
pop
pop
xchg
testb
daa
imul
shlb
clc
jnp
or
and
cmp
dec
sbb
cld
ja
sar
loopne
xor
call
dec
mov
std
in
ffreep
icebp
push
inc
sub
jmpw
movsb
sbb
lds
out
in
loop
ss
adc
xchg
jp
clc
in
iret
push
out
repnz
inc
xor
jno
mov
ficoms
jmp
mov
imul
test
push
mov
sbb
ficoms
pop
adc
cmp
dec
lahf
adc
jecxz
xlat
and
aad
push
sub
pop
out
inc
jne
xchg
xlat
ret
ffree
arpl
adc
or
add
ffree
clc
sarb
or
hlt
orb
push
jmp
push
mov
jb
cmpsb
test
pop
adc
add
inc
dec
pop
mov
inc
mov
jno
stc
loopne
push
jecxz
jae
dec
and
jne
test
xor
in
sub
in
in
or
push
sub
mov
ret
xchg
pop
push
inc
jmp
xor
pushf
bound
out
xchg
mov
xor
jns
mov
cmpsb
jb
sti
mov
cli
pop
in
lret
ss
call
aas
ret
mov
mov
mov
adc
push
clc
enter
lea
stc
inc
cmp
inc
add
jno
test
sub
add
in
arpl
lret
lret
outsl
xlat
fldl
stos
lret
sub
stc
and
scas
clc
or
xor
arpl
xchg
repnz
lcall
mov
fistps
dec
adc
mov
pop
lea
cltd
lods
push
clc
loopne
iret
mov
jb
test
fnsave
push
adcb
outsl
mov
shl
xor
out
inc
or
incl
enter
push
stos
and
ss
xor
inc
mov
pop
mov
imul
lods
dec
in
call
cwtl
std
push
dec
mov
inc
ret
push
fsubrl
lds
insl
cwtl
popa
sub
int
jne
cmp
cmp
rcll
fs
mov
pop
and
adc
daa
mov
enter
jae
testl
jb
xorl
aad
insl
icebp
dec
or
dec
mov
cld
push
xchg
jecxz
inc
sarb
iret
inc
lahf
dec
scas
jo
inc
mov
je
mov
xor
sub
popa
dec
frstpm(287
xchg
ret
sti
or
sbb
mov
enter
sbb
push
sbb
aad
cmp
je
fst
or
push
push
push
insl
xor
push
lock
hlt
int
xor
and
sti
push
cli
js
mov
or
in
aad
movsb
test
push
ret
mov
testb
xorl
loop
or
xor
mov
inc
dec
cs
add
jmp
das
pop
pop
clc
mov
lea
pusha
lods
xchg
mov
iret
sar
sub
inc
push
movsl
bound
repnz
mov
mov
lahf
inc
hlt
sub
sarl
or
jns
clc
stc
sbb
sub
and
outsl
mov
ret
movsl
jg
mov
ret
mov
push
and
cltd
ja
loope
inc
inc
xchg
daa
jnp
flds
in
iret
aas
sub
push
xorl
jne
mov
sbb
adc
es
mov
cmp
in
pop
jo
ljmp
mov
mul
insb
stc
data16
mov
sti
test
in
jb
sub
push
clc
decl
jmp
std
dec
adc
push
pop
mov
jno
jecxz
out
popa
iret
xchg
mulb
fsubl
lods
aas
cld
inc
incl
mov
jecxz
roll
in
or
jne
enter
pop
pop
sti
sbb
jae
push
add
add
xor
or
push
or
jae
or
push
fidivl
test
bound
fmull
adc
pop
aad
mov
push
jae
mov
xchg
mov
cmc
in
clc
loope
jmp
ret
fisubs
pop
test
push
testl
addr16
inc
cli
push
sarl
std
sub
push
pop
mov
or
and
aad
mov
cmp
iret
adc
pop
or
mov
clc
inc
sub
sti
sbb
pop
dec
lods
jl
or
or
test
js
xor
loop
bound
out
test
mov
jns
jno
pop
test
aad
jae
repnz
cmp
pop
dec
jne
enter
icebp
mov
xor
xor
push
or
pop
out
inc
add
jns
inc
xor
std
jnp
pushf
in
jb
mov
cli
push
push
jecxz
adc
das
mov
fmul
lcall
xchg
xlat
cmpl
out
addr16
dec
inc
inc
xor
push
fsubl
fwait
ss
add
and
iret
sti
push
addr16
jns
cmc
xor
pop
mov
into
nop
push
and
lret
gs
add
jno
stc
fucom
loope
insl
test
dec
xor
lock
xlat
mov
and
inc
jecxz
add
pusha
cmp
adc
pop
adc
mov
sub
dec
dec
and
and
xorl
loop
inc
jae
lea
xchg
sbbb
mov
out
inc
sub
jnp
stos
pop
sti
or
xchg
nop
mov
rcrl
xor
imul
fwait
mov
mov
sub
mov
mov
mov
xor
in
in
xchg
jmp
xor
clc
out
aad
sbb
xchg
and
adc
imul
cmpl
sbb
ud2
dec
xlat
loope
cmc
cmp
sti
cli
mov
sub
iret
jnp
or
adc
in
insl
sti
sahf
iret
inc
out
pcmpeqd
jo
mov
mov
mov
xchg
enter
dec
jae
std
jmp
mov
test
jecxz
or
cs
movsl
int3
sbb
popl
add
aam
jo
or
adc
mov
and
lret
loop
or
mov
nop
pop
ret
cmp
outsl
adcl
pop
test
lret
clc
pushf
popa
lea
sub
sbb
inc
or
jl
mov
jne
stos
popa
mov
iret
sbb
aaa
repnz
in
inc
ja
xor
frstor
push
inc
adc
pop
xor
std
adc
rol
xor
mov
mov
pop
xchg
cmp
aad
jge
cmp
in
movsl
loope
in
ss
stos
mov
xor
sti
adc
fucomi
cmp
adc
push
adc
mov
enter
aam
ret
push
dec
jecxz
jno
inc
movsl
push
add
push
stc
xor
ret
enter
leave
sbb
xor
test
dec
mov
rcl
cmp
push
lock
aas
out
lret
aad
jne
jge
aam
nop
sti
mov
idiv
scas
out
shl
cmpsl
loopne,pn
sub
in
test
jecxz
cli
std
adc
and
dec
add
ss
push
mov
fildll
mov
mov
pop
push
mov
and
mov
mov
out
out
lret
push
xor
cmp
test
or
jae
push
or
out
sbb
lods
fdivr
add
dec
cli
loope
inc
enter
dec
enter
aas
xchg
aas
mov
inc
jmp
add
mov
xchg
hlt
mov
push
enter
push
or
iret
flds
push
inc
arpl
mov
cmp
ret
movsb
xor
enter
sub
dec
into
lds
dec
mulb
in
xchg
jns
inc
mov
lahf
xor
std
aam
in
notb
out
into
adc
lret
ss
sbb
push
out
pop
popa
faddl
or
rcll
dec
and
aaa
and
dec
push
aad
mov
popf
inc
push
mov
add
fnsave
jecxz
aad
inc
cmp
loop
xchg
and
inc
push
push
jns
insb
jecxz
add
sub
xor
sbb
pop
inc
or
push
add
clc
in
loop
pop
dec
xchg
lock
inc
mov
lret
sbb
faddl
daa
push
or
add
aaa
bound
arpl
lret
or
push
xchg
xor
pop
into
adc
je
test
btc
xor
mov
shll
andl
scas
or
xchg
stos
or
out
lret
sbb
enter
arpl
data16
mov
mov
in
stc
test
jg
add
aad
addb
pop
aas
mov
ret
jmp
inc
dec
push
and
sbb
pop
aam
mov
aad
mov
lock
jmp
xchg
out
mov
out
mov
fisubrs
in
inc
mov
mov
xchg
cmc
mov
jae
adc
lcall
fbld
imul
dec
leave
mov
rcl
dec
pop
xor
jae
and
mov
cmp
fdiv
xor
or
dec
and
dec
movsl
push
mov
lahf
aad
fstp
inc
loopne
xchg
mov
jp
push
jb
lahf
push
call
inc
mov
pop
xor
pop
ja
push
mov
add
cmp
lea
cmp
adc
cld
adc
mov
outsl
jl
in
in
in
jmp
adcl
inc
jl
mov
jne
test
or
test
push
orl
cmc
fisubrs
pushf
mov
out
sti
loop
rorl
sbb
dec
push
inc
into
push
pusha
mov
lahf
cmp
lds
mov
xor
jecxz
dec
xlat
aad
sbb
sub
popa
mov
insl
inc
jns
jecxz
movsl
adc
jnp
sbb
aas
mov
jge
inc
arpl
xchg
leave
inc
lock
rcll
or
mov
in
cmpsl
mov
sub
stc
or
xor
cmc
mov
pop
pop
mov
sbb
addb
in
mov
imull
mov
clc
mov
and
cli
pop
jle
imul
jne
mov
mov
pop
je
negb
or
lcall
ss
imul
dec
and
mov
jecxz
push
jno
addr16
shl
test
xchg
cmp
mov
pop
dec
or
inc
xor
gs
or
pop
sbb
xor
aas
jae
pop
out
jo
popf
sahf
add
imul
iret
lock
add
aas
dec
inc
pop
adc
xchg
aaa
inc
test
movsl
inc
in
inc
out
push
mulb
mov
mov
loope
inc
jb
bound
loopne
inc
adc
seto
loop
pop
cmp
cmp
sub
inc
mov
add
arpl
and
and
pusha
mov
fsub
inc
mov
dec
icebp
jl
and
sarl
std
bound
inc
xor
inc
aam
test
aad
push
daa
mov
icebp
mov
arpl
add
cmp
mov
addr16
popa
cltd
inc
aam
mov
dec
xor
nop
jne
out
xor
and
aad
mov
mov
add
inc
std
or
data16
push
roll
or
fiadds
push
in
sbb
pmaddwd
andb
inc
inc
push
xchg
xchg
imul
or
cli
out
jns
add
sub
cmp
aaa
push
and
xchg
mov
imul
sub
lret
in
sub
roll
in
fnstenv
in
cmc
in
addb
xor
or
xor
dec
add
fisttpll
pop
inc
dec
mov
outsb
cmp
lret
cmp
or
das
mov
xlat
js
jge
std
dec
imul
sbb
ror
loopne
push
fstpl
sub
mov
in
lods
sti
or
add
stos
xchg
ss
cli
jp
orl
add
icebp
sbb
sbb
inc
mov
stc
popa
test
lret
icebp
xor
mov
mov
les
inc
testb
jge
xchg
mov
das
dec
ljmp
jecxz
inc
xlat
ret
rep
or
dec
pop
subl
sbb
stc
in
add
xor
inc
lock
in
dec
pop
add
mov
xlat
data16
lahf
int
sub
dec
fdivr
and
push
dec
xchg
inc
rcr
add
jp
loop
jo
incl
fsub
mov
loope
ffree
addr16
fdivl
fwait
pop
stos
ret
dec
lds
xor
mov
cltd
enter
push
arpl
xlat
ret
stos
loope
rclb
pop
fbstp
loopne
loope
or
daa
inc
cmp
xchg
ret
loopne
pop
std
cs
inc
in
jns
out
ja
adc
mov
dec
jp
out
mov
aas
addr16
jno
jbe
fstps
aas
mov
lret
push
movb
or
ret
jge
jecxz
xchg
lret
xchg
cmp
inc
push
jne
sahf
nop
mov
cmp
and
jl
cmc
push
imul
fdivrp
sbb
cmp
inc
adc
lret
daa
mov
outsl
push
mov
test
addr16
xchg
rcrl
xlat
xorb
push
outsb
push
xor
mov
enter
and
fadds
push
sbb
gs
ret
outsl
popf
cltd
movsl
incb
jns
in
inc
xor
out
jmp
dec
ja
push
mov
ds
inc
mov
mov
push
stc
jle
sub
adc
push
loopne
add
xor
cltd
imul
push
pop
bound
faddl
popaw
cltd
add
pop
cmc
lahf
push
sub
xchg
jno
mov
test
push
ucomiss
ret
xchg
xchg
cmp
mov
mov
adc
ret
int
fs
imul
or
inc
inc
pop
jns
dec
stos
push
xchg
movsl
insl
cmc
mov
repnz
out
mov
icebp
sbb
aam
adc
cmc
cwtl
jno
lock
and
pop
xor
jae
or
mov
or
xor
in
mov
adc
xchg
cmp
jne
mov
xor
fsubs
pop
ss
inc
ds
outsb
aam
adc
or
out
mov
ljmp
sub
into
xchg
sbb
pop
dec
jecxz
or
jo
inc
cmp
or
cltd
or
and
or
pop
movsb
stc
in
arpl
push
sub
repz
mov
rorl
dec
cwtl
xchg
dec
lret
mov
mov
out
into
arpl
mov
clc
das
or
jne
mov
aad
push
pop
in
repz
pop
xor
mov
push
sbb
adc
mov
sarl
push
es
sbb
push
jb
stc
xchg
mov
mov
sarb
inc
arpl
push
aas
push
xchg
xor
cmpsl
mov
icebp
out
and
repnz
xor
mov
or
gs
jnp
daa
movsl
hlt
ret
fistps
das
jmp
and
sbb
movsl
stc
sbb
mov
xor
and
hlt
testb
pop
ss
dec
jbe
xchg
jns
jb
mov
mov
in
ret
sti
pop
or
push
inc
adc
pop
daa
push
ss
jae
cltd
cltd
mov
xchg
push
mov
daa
daa
pop
push
mov
jmp
adc
cmp
adc
and
inc
inc
mov
addr16
cmp
fiaddl
mov
sbb
idivl
xchg
inc
arpl
out
repz
cmp
xor
pusha
mov
sub
into
mov
jg
stc
adc
aaa
adc
or
adc
std
subb
mov
incb
mov
sbb
sub
popa
sbb
loopne
iret
inc
add
add
mov
sti
sub
xchg
inc
mov
out
test
cmp
add
loop
fwait
or
add
push
dec
aas
mov
inc
add
pop
imul
mov
sbbl
aam
dec
lods
fdivr
fmull
pop
sbb
xor
ret
mov
pop
ret
in
xor
sbb
xorl
dec
or
pop
jl
ja
mov
shlb
inc
dec
push
mov
jnp
cmc
lcall
dec
xor
mov
stc
xchg
add
sub
les
aam
adc
insl
sbb
dec
jecxz
ud2
insb
dec
fs
leave
in
xchg
out
test
add
xor
fwait
js
loope
xchg
xor
mul
dec
xchg
fidivs
clc
addr16
sbbl
xchg
mov
sti
lret
xlat
aas
into
sub
lods
jno
enter
mov
fldcw
ret
pop
lods
xor
cmp
cmpl
sub
jns
mov
add
adc
dec
adc
test
shr
pop
ss
std
aam
lods
movsl
sti
mov
lods
jo
aad
fsubrs
xchg
or
xor
pusha
ss
jnp
addr16
push
inc
jnp
out
scas
mov
ss
in
or
cmp
jae
mov
xchg
mov
loope
push
pop
add
cmp
cmp
lods
or
loope
sub
aad
push
popf
incl
xor
arpl
mov
ja
test
lahf
cmc
stos
and
sbb
shll
jg
lods
popa
add
xchg
pop
arpl
jl
std
jae
rorb
cmp
sbb
xchg
push
ret
jle
test
lds
xor
push
adc
mov
aaa
push
jo
mov
lret
cltd
lods
sbb
les
mov
nop
inc
stc
mov
shr
cltd
repz
ds
repz
daa
xor
inc
dec
jge
arpl
jb
jge
xchg
pushl
icebp
std
stos
in
mov
movb
lea
inc
inc
cs
add
test
xchg
push
loope
in
aas
mov
shrb
imul
nop
xchg
icebp
xlat
rorl
adc
mov
shlb
dec
int
sub
icebp
sbb
ror
mov
clc
fst
std
call
lea
cld
xchg
fadd
sbb
test
pushl
das
dec
jge
cmc
insl
jge
lret
cmp
and
test
xchg
dec
and
cmp
dec
ljmp
ja
xchg
inc
mov
lds
lret
mov
mov
cmp
pop
adc
jl
pop
enter
push
pop
int
lahf
sti
cmp
out
iret
xchg
and
dec
or
mov
push
dec
mov
in
popa
sbb
mov
and
cmove
lret
mov
jne
in
dec
addr16
les
aam
cmp
sbb
cmp
inc
jle
xor
adcl
jns
push
fidivs
jns
or
divb
push
test
and
cmp
xor
inc
ret
test
lea
rorl
mov
push
aad
mov
jge
mov
out
sub
iret
pop
mov
lods
fs
scas
ja
andl
xorl
and
adc
sti
lret
push
iret
mov
pop
lock
cmp
mov
mov
and
and
out
cmp
cmp
sbb
and
cmp
xor
and
aas
gs
jae
ss
sbb
pop
push
xorb
in
sti
jbe
cld
pushf
mov
mov
jns
dec
and
or
mov
iret
xor
add
jl
ret
xor
lds
das
ret
pusha
dec
test
or
xchg
fisttps
out
mov
xor
cmp
and
dec
cmp
ret
or
int
sbb
mov
out
aas
xchg
dec
adc
lods
jae
push
fdiv
fmull
fstpt
pop
add
xor
in
iret
cld
les
in
push
pop
jge
jmp
mov
popa
sti
jae
xchg
dec
shl
and
mov
popl
lcall
push
push
mov
pop
jge
jg
mov
imul
fldl
mov
hlt
inc
adc
andl
out
mov
inc
fsubr
ret
inc
aam
lock
loope
pop
adc
cld
and
and
inc
xor
mov
pop
dec
mov
xor
imul
jecxz
mov
loop
pop
and
test
mov
and
push
popf
jge
out
add
mov
cmp
lcall
jle
rcl
enter
mov
push
test
jecxz
lcall
addr16
imul
pop
dec
fiadds
xchg
pop
leave
jmp
mov
sbb
xor
arpl
leave
ret
lods
xor
outsb
push
stc
xlat
inc
ss
xor
xchg
adc
inc
mov
inc
xor
xlat
fdivrl
sbb
mov
hlt
mov
ret
adc
dec
daa
pop
mov
add
mov
fwait
loop
in
xchg
inc
in
in
cmp
and
arpl
inc
push
sti
lods
pop
sub
dec
sti
xor
inc
addr16
adc
sub
mov
inc
dec
mov
jno
or
nop
inc
loopne
cld
out
jae
adc
inc
pop
cmpl
fildl
xlat
or
lret
lock
xchg
out
xor
and
nop
ss
aad
inc
stc
rcrb
xor
add
jne
cmp
xor
jne
js
adc
std
data16
sbb
setno
lcall
xor
xchg
xchg
scas
mov
out
pop
mov
sub
lret
xchg
popf
xor
loope
ss
adc
cs
or
jg
pop
ficomps
push
filds
adcl
dec
mov
inc
inc
imul
add
popf
jg
loopne
inc
adc
jmp
sbb
addr16
sbb
push
test
add
xchg
pop
dec
imul
and
dec
fs
xorl
rcrl
rcl
xlat
in
mov
pcmpeqb
mov
xor
dec
xor
jne
mov
or
sbbl
addl
std
mov
std
test
xchg
in
lods
or
xchg
dec
jge
aam
xor
push
inc
mov
dec
cmc
inc
jg
leave
mov
ret
out
leave
in
fnstsw
or
sub
cmpsb
roll
movsl
jecxz
addr16
or
movsl
es
mov
mov
adc
sahf
jmp
jge
jns
aam
mov
or
call
xchg
ja
jae
push
in
or
inc
fmull
add
stos
addr16
jle
aaa
ret
out
push
pop
xor
pop
jns
jmp
add
xor
xor
fsts
lds
jne
sar
std
sbb
inc
sub
xor
mov
sbb
jge
push
sbb
addr16
jmp
aas
xor
dec
jae
inc
sub
ljmp
jmp
adc
je
pop
mov
andb
nop
xor
mov
shll
loope
jmp
xchg
add
xor
push
arpl
and
pusha
push
dec
mov
loop
adc
cwtl
jg
scas
aas
ret
or
mov
add
mov
enter
sbb
add
pop
out
lret
jo
in
orb
in
shll
loop
jge
in
pop
addb
inc
lret
ud0
add
rcl
and
or
or
imul
push
popa
test
icebp
icebp
push
inc
dec
rcll
aad
inc
mov
xor
loopne
je
mov
in
std
lods
mov
stos
in
inc
or
shll
dec
inc
sub
out
mov
inc
mov
push
ret
ss
clc
or
mov
inc
insl
ret
in
jge
stc
mov
cmp
mov
mov
jnp
lret
out
mov
lea
jmp
das
ljmp
dec
mov
nop
inc
in
mov
jge
fldenv
mov
loopne
nop
lret
mov
imul
xor
and
xor
or
pop
cmp
sub
dec
ret
lret
sub
mov
loope
loope
and
xchg
in
inc
mov
in
push
xor
imul
popf
jne
mov
inc
cltd
mov
xchg
leave
push
mov
pop
jae
cli
add
imul
xor
cld
xor
dec
dec
inc
jnp
mov
insl
jne
ret
mov
in
loopne
jo
and
push
ss
xchg
mov
out
dec
adc
sub
in
pop
lock
mov
jge
out
inc
add
rorl
mov
lahf
mov
or
or
sbb
lahf
adc
jge
clc
sti
shr
out
adc
lret
cli
aam
pop
add
cmpsl
pushf
inc
movsl
push
out
mov
mov
push
mov
fs
cmc
inc
sub
mov
inc
sbbl
mov
dec
and
jne
and
icebp
mov
pop
in
pop
jo
sti
mov
std
stos
std
inc
insl
lret
repz
repz
fmuls
lods
cld
cmp
and
imul
jns
xchg
cmc
in
pop
pop
unpcklps
and
mov
sub
mov
mov
adc
xor
andl
and
fdivr
into
aaa
sub
nop
jns
adc
inc
jl
imul
pop
pop
ret
fwait
mov
push
cmpsb
adc
mov
jl
aas
pop
std
insl
test
addr16
lea
mov
mov
insl
out
jmp
scas
push
and
aas
xor
xor
xchg
inc
lock
insb
xor
fisubs
jns
pop
popf
fs
mov
or
mov
or
or
jmp
add
or
cmp
mov
icebp
push
mov
pop
xchg
mov
inc
xor
pusha
cltd
pop
xor
sub
mov
rolb
in
cmp
enter
addr16
insl
aad
mov
inc
xchg
mov
inc
movb
mov
xor
xor
cltd
or
xchg
adc
movsl
cmp
ret
arpl
jns
sti
or
cmp
xor
push
xchg
loopne
lock
and
addr16
out
in
imul
mov
inc
roll
clc
mov
sub
jae
add
mov
xor
fisttpl
cltd
mov
loop
jg
push
pop
arpl
addl
xor
ret
inc
xor
dec
sbb
jnp
scas
lret
mov
xlat
aaa
push
jp
imul
or
jmp
out
inc
jne
mov
dec
cmc
aad
cmp
adcb
inc
cltd
mov
loopne
sahf
hlt
shlb
icebp
test
dec
mov
fs
mov
enter
ret
mov
lret
call
outsl
cld
jl
mov
inc
xchg
mov
and
mov
mov
enter
adc
test
mov
mov
sbb
xor
popf
mov
leave
cmp
cmp
insl
cmp
mov
push
popa
insl
adc
int
ljmp
bound
jnp
lret
test
scas
aas
mov
inc
fistpll
in
or
lods
xchg
or
jge
lds
sti
or
mov
sbb
pop
inc
sbb
xor
aam
nop
xchg
adc
into
sub
cmpsl
sbb
or
popa
push
push
pop
xor
sub
pop
xchg
push
xor
lret
cmp
adc
inc
mov
sbb
pop
sar
sub
ja
adc
in
and
js
mov
inc
or
sub
xor
pusha
pop
and
or
aad
fsubrs
pop
into
jns
enter
std
and
arpl
or
jb
sub
mov
dec
aam
insl
and
push
cmp
mov
popf
cmp
sbb
addr16
or
imul
movsl
jge
sti
pusha
cli
cmpb
test
xor
ret
cmc
lods
shlb
push
shrl
mov
dec
xor
repnz
enter
scas
dec
sub
popf
sub
lret
or
add
inc
mov
add
xchg
fcoms
nop
test
or
mov
dec
xor
jo
sti
scas
sub
cwtl
pop
nop
js
xor
dec
cli
xchg
mov
add
dec
movsl
popa
xchg
cwtl
mov
jo
xor
mov
xor
iret
pusha
push
enter
mov
mov
lods
ret
clc
loop
sti
or
sub
dec
in
push
enter
jno
in
push
push
xchg
arpl
mov
mov
jne
or
out
dec
adc
lea
mov
sub
push
aad
lods
fwait
enter
mov
push
push
nop
pop
mov
sti
aad
or
outsl
decl
jae
clc
push
push
dec
or
lods
xor
push
movsl
dec
cltd
jecxz
or
sub
enter
and
inc
or
jae
jecxz
push
jg
in
jnp
movsl
shlb
push
mov
in
sub
iret
xor
jb
mov
fstpt
clc
cmc
or
ja
inc
das
sbb
jmp
xchg
in
mov
aam
mov
sbb
cmp
mov
jnp
ja
nop
jno
enter
lock
or
xorb
loope
daa
and
mov
scas
mov
mov
or
and
out
pop
adc
out
enter
mov
jle
push
movsl
sbb
mov
pop
mov
test
pop
fmull
ret
jmp
dec
and
push
movsl
pop
icebp
mov
jnp
sbb
lret
mov
push
or
push
aam
add
aad
inc
gs
fsubp
pop
in
stc
popa
sbb
pop
jo
or
shr
mov
sbb
sbb
xchg
insl
inc
popa
xor
jns
jge
jno
jne
in
jbe
xchg
cltd
add
mov
stc
pop
in
movsl
sbb
sbb
mov
in
in
sbb
out
cmc
adc
xor
sbb
jge
aas
cmp
cmp
push
dec
jmp
cmp
mov
pop
imul
aas
jge
jno
mov
xor
test
xchg
movsl
inc
cmp
leave
test
aas
dec
pop
pop
xchg
xor
leave
add
sbb
push
xor
jne
out
pop
add
dec
ret
sti
in
xchg
mov
test
in
fidivrs
test
mov
inc
in
xchg
loope
in
sub
std
nop
pop
cmc
ljmp
add
pop
divb
dec
and
cmp
mov
jmp
jmp
aam
and
mov
outsl
adc
dec
insl
test
gs
cmc
jno
xor
cmpl
or
sbb
or
mov
inc
addl
dec
lock
out
xor
jo
xchg
ret
mov
cmpb
sub
sbb
xor
or
cmp
inc
push
inc
sqrtps
fldt
aaa
jns
mov
xor
jb
dec
xchg
push
cmp
aas
test
lods
enter
sub
sub
insl
mov
mov
cmc
or
jge
jno
imul
std
nop
subl
jge
imull
aam
nop
add
pop
sub
cmpsl
or
sti
cmc
xchg
jg
cmp
sbb
or
es
push
sbb
sbb
sbb
arpl
lret
pop
mov
sbb
ret
cltd
test
outsl
mov
ds
cmc
adc
pop
leave
or
xchg
in
testl
jo
lea
in
ret
dec
mov
int
frstor
rcrl
das
mov
shlb
nop
inc
pop
das
into
jmp
xchg
ret
mov
xor
adc
dec
lahf
fcmovnb
std
test
pop
jmp
imul
mov
adc
imul
in
mov
aad
and
inc
jne
xor
mov
and
xor
cltd
xor
divb
push
and
cmp
or
xchg
jecxz
fstpl
aaa
adc
dec
jne
pop
jne
mov
and
dec
and
or
pop
popf
test
rorb
sbb
orl
xor
mov
push
mov
xor
jl
icebp
test
addb
in
outsb
cmp
cmpl
fldl
movsl
jecxz
pop
or
sbb
enter
or
test
and
dec
mov
inc
mov
adc
adc
popa
sub
jns
jge
jno
movsl
add
std
inc
xchg
leave
xchg
loope
mov
or
aas
add
add
adc
popa
sub
jb
and
jnp
mov
dec
jge
jno
dec
or
fwait
aam
jo
cltd
ljmp
aas
mov
leave
jl
rol
xchg
push
inc
push
inc
std
insl
lds
push
mov
out
push
cmp
sbb
mov
aam
cmpl
cmc
std
push
test
mov
into
lds
inc
add
mov
mov
daa
sbb
xor
out
xor
push
mov
xor
cmpl
mov
add
loope
dec
pop
dec
adc
stos
and
mov
cmp
enter
cltd
jge
jo
lods
ds
mov
cmc
mov
mov
pop
sbb
fwait
adc
add
nop
stos
cmp
jae
xor
ljmp
sbb
inc
lret
ret
jge
cmpsl
lods
mov
add
xor
dec
popf
mov
pop
inc
mov
or
inc
icebp
hlt
cmp
idivb
orb
cmc
pop
out
enter
xor
mov
in
std
mov
push
pop
jb
jge
jno
jno
in
or
out
cltd
mov
inc
xchg
lods
imul
mov
xchg
ret
dec
mov
pop
xchg
pop
push
xor
aam
mov
mov
mov
int
sbb
dec
push
xlat
cltd
aam
adc
mov
out
in
cmp
insl
mov
gs
int
stos
std
test
sub
cs
and
adc
sbbl
in
lods
je
mov
sbb
in
roll
mov
or
cmp
sbb
add
sti
xchg
mov
xor
sbb
aad
pop
push
bound
mov
mov
cmpl
rcll
cmp
ret
sar
sti
push
cltd
cmp
std
or
jae
cmp
aas
popa
sbb
outsb
addb
xor
inc
xor
xor
and
insb
jno
mov
cld
jne
sarl
xor
push
lahf
or
sub
push
adcl
aam
pop
fldenv
aam
xor
xor
ret
push
jae
jno
add
xchg
lret
and
inc
jmp
xchg
cmp
xor
enter
mov
idivl
or
enter
popf
stc
imul
icebp
adc
or
xchg
add
mov
adc
mov
mov
ficoms
inc
lods
jge
stos
pop
mov
pop
ficomps
pop
inc
push
or
sub
mov
aad
jno
outsl
mov
dec
aas
cltd
inc
aad
xchg
jns
or
stc
mov
xchg
mov
fisttpll
sbb
mov
test
jle
sbb
cwtl
xchg
xchg
aad
adc
lea
call
in
imul
fidivrs
fisubrs
cwtl
pop
sub
mov
and
xor
in
cmp
stc
nop
jmp
ljmp
xor
loope
cmp
xchg
mov
push
cmp
pop
dec
ret
jge
sub
mov
mov
sti
leave
int
or
insb
pop
jnp
cmp
and
and
adc
fldz
jmp
add
inc
mov
cltd
mov
inc
lcall
std
jge
dec
or
add
dec
adc
mov
call
orb
mov
ret
mov
jle
movsl
xchg
popa
xchg
gs
leave
lea
ja
ret
xor
xor
ret
xor
lea
addl
shll
pop
pop
movsb
mov
pop
push
fnstcw
scas
rcrl
adc
jno
rcrl
or
imul
xchg
dec
int
pop
aad
adc
ret
outsl
dec
imul
rclb
icebp
or
and
jno
adc
pop
add
adc
jnp
addr16
jne
fildll
ret
inc
popf
in
xor
sarl
or
cltd
stos
cmp
mov
test
aad
imul
xchg
xchg
and
push
lcall
inc
ret
jg
popf
jmp
jae
cmp
insl
inc
xchg
cmc
mov
cltd
ret
shr
arpl
or
xor
xchg
and
ret
rcl
cmc
fwait
cmp
jne
inc
pop
cmc
push
arpl
popf
adc
dec
ret
cmc
mov
inc
arpl
aam
inc
in
lods
rcl
leave
sbb
cmc
cmc
arpl
aam
lds
jns
xchg
mulb
jmp
or
cltd
xchg
inc
inc
inc
cltd
popa
out
adc
mov
fldcw
push
sbb
imul
rcll
xor
or
push
ret
pop
dec
inc
jns
dec
cmc
lods
push
cmp
leave
shrb
add
in
mov
xchg
jno
lods
dec
mov
add
aam
shl
jmp
dec
fisubs
jmp
das
cmc
add
add
jne
push
jmp
jmp
sbb
pop
notl
mov
push
sub
dec
jno
fnstenv
stos
inc
lods
shll
out
cmc
adcl
cmp
or
lea
leave
and
dec
add
imul
push
mov
mov
in
dec
or
sbb
xlat
gs
inc
mov
jnp
mov
in
loope
add
pop
or
pop
shll
popf
inc
out
mov
or
push
loope
test
push
stc
test
mov
mov
xor
shrl
stc
cwtl
add
xor
cmp
cmp
test
xchg
xorl
cmp
lds
add
or
xor
pop
xor
jae
jge
jnp
lea
rcll
or
push
sbb
inc
push
daa
mov
pop
and
int
std
fstl
in
adc
or
sub
jge
std
incb
lds
ret
shll
sbb
adc
popf
or
lods
xchg
stos
push
xchg
in
nop
xchg
add
pop
cmovge
mov
adc
mov
sub
jns
sub
push
mov
out
popf
xor
mov
loope
jg
ret
pop
or
adc
pop
in
popa
jnp
or
add
xchg
mov
pop
mov
mov
add
ljmp
movsl
xor
leave
and
or
idiv
add
enter
std
inc
cmp
insl
enter
xchg
jg
pop
int
jmp
cmc
xlat
or
shrl
out
push
mov
jns
movsl
popf
sub
lods
in
adc
fprem1
in
div
sub
add
mov
dec
xchg
inc
orl
and
or
or
testl
mov
aad
mov
mov
mov
mov
test
mov
adc
fs
punpckhwd
lea
xorl
inc
ja
adc
inc
push
or
nop
mov
jns
aad
pop
or
cmp
dec
sub
adcl
movsl
jecxz
frstor
leave
ret
sbb
daa
jg
fldl
push
pop
in
std
adc
and
dec
in
pop
jge
fisubrs
gs
and
jae
icebp
mov
out
and
dec
out
and
popf
mov
lods
xchg
movsl
andl
mov
vandpd
mov
adc
mov
mov
das
xor
in
or
push
and
into
cmp
pop
push
dec
popa
andl
lret
insl
mov
movaps
inc
sub
jns
test
aas
mov
pop
out
fstps
sbb
or
xor
or
aaa
incb
movsl
in
mov
add
sub
cmc
and
mov
jge
xchg
lea
popf
subl
std
arpl
das
pop
aas
sub
xor
cmc
jne
dec
hlt
pop
fisttpll
mov
mov
daa
or
cmp
mov
scas
xchg
pop
push
xchg
clc
cmc
fucom
mov
xor
sbb
imul
outsl
xchg
ret
test
cmp
and
sbbl
jecxz
sbb
inc
mov
dec
jge
fwait
sbbl
xor
sbb
insl
or
pop
movsl
pop
dec
fstp
inc
aad
inc
push
mov
mov
fldcw
dec
icebp
ret
sbb
dec
mov
sti
aas
test
push
cmc
fisttpl
pop
dec
mov
dec
cmp
or
inc
dec
insl
mov
add
fisubs
scas
fwait
xchg
sbb
int
shrl
jns
test
push
lock
sub
dec
movsl
popf
xlat
add
mov
sub
pcmpgtw
jnp
aas
ja
or
stc
aas
pop
ret
or
and
rolb
loope
or
insl
lcall
cmp
adc
mov
pop
pop
xchg
xor
pop
pop
adc
in
sub
fisubs
aam
lret
ret
arpl
lret
add
out
jmp
mov
mov
mov
cmp
js
gs
les
in
add
fimuls
inc
adc
jns
idiv
popf
out
test
and
sbb
dec
and
or
stos
insl
add
daa
mov
rorl
add
popf
and
popf
mov
pop
add
sbb
jg
js
pop
sbb
or
push
jge
xchg
aas
sbbl
mov
add
fists
mov
sarl
aad
in
scas
xchg
sub
xor
cltd
in
ljmp
out
add
in
sbb
xchg
sbb
inc
or
pop
jbe
fimuls
cmp
popa
lods
out
test
xchg
add
pop
cmp
and
lea
sub
pop
test
jns
jns
lods
in
mov
cmc
or
std
mov
in
cmpsl
je
inc
and
push
xor
aam
adc
loopne
std
dec
inc
push
and
ret
repz
lock
popa
ljmp
insl
mov
lds
stc
add
sbb
pop
add
adc
jmp
repz
pop
testl
icebp
cmc
sbb
dec
inc
push
in
arpl
icebp
push
loop
icebp
jae
sti
sbb
or
and
ret
icebp
cmc
movsl
or
xor
mov
test
fwait
stc
jecxz
adc
call
push
adc
popf
mov
pop
xchg
in
icebp
loop
mov
adc
test
sbb
or
out
stc
in
jnp
and
dec
jns
mov
leave
jp
pop
sbb
and
cmpb
lds
or
dec
sarl
pop
lahf
jne
jmp
out
add
and
adc
nop
cltd
jae
inc
sbb
dec
out
or
jnp
sbb
daa
fst
pusha
sub
xor
shll
xchg
xchg
pop
inc
rcrl
mov
nop
adc
jae
popa
inc
sbb
sbb
pop
roll
lret
loope
mov
addr16
xchg
mov
test
cmc
insl
sti
add
shl
in
push
aad
mov
cltd
inc
pop
and
rdpmc
aas
sub
popa
or
dec
cmc
and
inc
sbb
pop
subl
or
xchg
aam
pop
inc
pop
sarl
popa
leave
imul
out
pop
fildl
cwtl
inc
std
mov
gs
add
push
dec
lahf
cmp
or
xchg
stos
push
jmp
lahf
cmc
imul
jp
mov
je
mov
aad
test
inc
mov
stc
and
sbb
mov
cmp
push
pop
mov
popa
js
inc
insl
out
mov
lods
xchg
or
in
lods
lahf
xchg
pop
je
lods
adcl
mov
lret
lods
xchg
sbb
pop
lahf
shrl
cmp
push
jae
cmp
pop
ret
cmc
cmp
pop
enter
jae
cmp
push
fstpl
jns
xchg
jns
inc
nop
gs
aam
jns
sbb
mov
add
jecxz
cmp
adc
and
pop
inc
stos
mov
push
mov
std
out
out
mov
or
test
pop
or
orl
js
arpl
sub
in
jns
xchg
xchg
xchg
xchg
jne
lods
mov
jne
aad
lods
jns
mov
mov
mov
jl
mov
mov
dec
test
sub
lahf
out
adc
cwtl
aam
mov
dec
jae
jg
adc
arpl
loope
lret
dec
sbb
xor
jge
jno
loopne
xchg
mov
mov
inc
shll
rorl
aad
or
nop
fwait
stos
ret
rcl
pop
mov
lds
push
mov
cli
aad
lods
jns
bound
mov
in
lods
imul
pop
arpl
pusha
insl
out
dec
sbb
xor
mov
test
or
inc
andb
aad
lods
xor
mov
and
xchg
iret
addr16
pop
jns
push
dec
pop
aaa
xlat
xor
test
daa
popf
pop
cmc
mov
lret
dec
in
mov
cmp
popf
sub
and
insb
jae
popf
sbb
repz
popf
jp
ret
and
data16
and
lretw
arpl
and
sub
sub
arpl
jmp
inc
test
popf
pop
aam
dec
mov
mov
and
adc
inc
jns
adc
inc
outsl
add
imul
sbb
adc
icebp
cmpl
shl
aad
retw
mov
mov
pop
stos
xchg
inc
popf
xchg
adc
lods
adc
and
and
pop
aas
in
mov
aas
movb
or
lea
ja
adc
insl
jge
bound
je
insl
outsl
inc
pusha
push
call
mov
leave
inc
fisttpll
std
xchg
dec
or
pop
loopne
inc
adc
pushl
mov
sub
imul
inc
pusha
inc
sub
dec
insl
xor
adc
lods
mov
mov
das
mov
mov
in
insl
xor
cmp
sbb
insl
jae
arpl
pusha
addr16
aad
push
imul
insl
pop
addps
mov
jne
jp
fldt
cmp
xor
sbb
pop
outsl
insb
adc
xchg
or
adc
adcb
and
pop
adc
movl
popa
addb
in
mov
jl
sub
inc
add
imul
or
je
insl
std
inc
xchg
das
cli
xor
aas
in
mov
sbb
testl
sub
sti
insl
out
pusha
jecxz
shr
xchg
test
enter
lea
ret
sets
in
cmc
orl
xor
imul
inc
std
pusha
in
aas
adc
insl
nopl
aas
in
mov
aas
in
mov
jecxz
test
mov
cmp
xchg
lods
xchg
pop
mov
pop
je
lods
jae
bound
or
mov
xchg
imul
inc
bound
jne
mov
inc
inc
insl
dec
cmp
mov
cwtl
adc
xchg
lods
sbb
rcrb
xor
neg
inc
das
inc
test
jge
aad
aad
icebp
insl
cltd
dec
adc
xchg
popa
pop
lea
pop
shr
aas
aam
lods
inc
or
sub
ljmp
frstpm(287
cmpsl
and
and
inc
jne
inc
jae
push
jecxz
test
in
sbb
mov
out
outsl
adc
cltd
cmp
popf
outsl
adc
jge
inc
insb
mov
adc
sbb
push
sbb
pop
sbb
pop
daa
inc
jbe
xchg
dec
inc
jno
mov
popa
je
sub
inc
jg
andb
imull
pop
mov
ret
popa
ja
pop
jne
and
cltd
cmc
pop
adc
test
mov
inc
push
lcall
push
push
roll
dec
or
cmp
dec
push
xchg
push
callw
jge
add
add
push
mov
stc
inc
repz
add
pop
add
inc
and
aam
aaa
jge
or
inc
repz
mov
sbb
icebp
lods
repz
div
callw
stc
aam
jecxz
add
inc
shl
xchg
add
lret
js
adc
mov
cli
mov
cli
mov
cli
mov
cli
pushf
jmp
pushf
stos
out
mov
mov
or
or
test
lahf
push
sbbb
pop
cltd
aam
inc
pop
cltd
or
xor
es
enter
xchg
xchg
inc
std
mov
imul
outsb
adc
popf
outsl
or
add
retw
popa
cmp
xchg
jle
lahf
mov
outsb
xchg
cmpl
mov
jle
jg
jns
inc
lods
cmp
xchg
cmp
xchg
or
xchg
stc
cltd
ss
mov
mov
pop
xchg
ret
test
subl
inc
scas
sub
xchg
adc
add
mov
or
cmovae
dec
in
dec
mov
mov
jmp
cmp
push
cmp
push
mov
xchg
aad
fldl
mov
inc
cmc
xor
inc
jge
jecxz
test
popf
dec
mov
enter
cmpsb
jle
xchg
insl
push
adcl
aam
sbb
lods
mov
mov
lds
jmp
cmc
pop
and
enter
test
loopne
test
mov
cmp
fsin
adc
cmp
push
jns
mov
and
cld
in
cmp
lret
inc
add
sub
xor
add
jne
aam
test
mov
sarl
jge
iret
pop
orl
xchg
shll
adc
or
ja
rcl
jmp
dec
jge
mov
and
cmp
inc
sti
push
in
popa
pop
mov
inc
jnp
rdtsc
lret
jo
mov
stc
push
or
pop
add
xchg
or
cli
dec
arpl
in
ficoms
or
ret
sbb
inc
popa
mov
test
imul
mov
add
sbb
imul
test
pop
and
sbb
mov
cmc
xchg
cmp
addr16
addr16
roll
or
scas
push
xchg
icebp
test
push
sub
decb
inc
jns
das
shrb
or
popf
inc
xchg
lret
inc
jmp
fdivrs
out
and
cmp
imulb
xchg
mov
cmp
iret
jb
sbb
fbld
jmp
out
xchg
shlb
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
pop
dec
pop
dec
inc
inc
mov
pop
push
push
imul
arpl
addr16
jnp
jg
jae
ja
mov
incb
lahf
xchg
xchg
xlat
stos
inc
inc
lds
aaa
pop
out
jl
sub
enter
push
aas
or
push
add
lods
je
test
sub
adc
mov
sub
adc
out
mov
in
sub
xchg
movsl
mov
popf
shlb
stos
js
pusha
test
mov
jge
jnp
loop
loope
jno
jle
xchg
ror
out
lods
test
mov
data16
mov
mov
out
and
and
adc
and
hlt
repnz
pusha
bound
push
int3
lret
mov
rorl
mov
iret
jno
add
and
push
inc
jnp
rcrl
loop
imul
push
jg
and
or
repnz
and
out
in
es
add
cmp
add
xor
cmpsb
add
int
add
insb
icebp
or
jo
mov
shrl
add
inc
push
mov
sbb
sbb
or
and
sarb
adc
das
adc
push
adc
loopne
ror
mov
xchg
mov
xchg
mov
js
and
fs
subb
arpl
pop
jnp
add
mov
pusha
jp
dec
jl
repnz
sti
sbb
cs
add
lds
or
mov
daa
pop
sarl
or
push
loopne
sub
cs
repnz
ret
and
test
jmp
lds
adc
and
mov
popa
in
loopne
sahf
mov
icebp
movsb
sub
mov
scas
inc
pop
pop
sub
adc
xor
dec
mov
and
inc
jmp
dec
subb
sbb
js
xchg
imul
jmp
add
out
ja
pop
sbb
mov
xor
cmpsb
js
jno
mov
pusha
mov
clc
jp
dec
xchg
data16
bound
addr16
es
stos
adc
test
imul
ds
and
call
mov
lret
jp
mov
scas
adc
xor
xchg
xchg
mov
pushf
jp
into
cmpsl
data16
popf
cmpb
stos
fs
mov
pusha
xchg
andl
sub
les
push
mull
xor
das
arpl
and
xor
mov
clc
xor
movsl
cmpsl
mov
jnp
adc
dec
aaa
jecxz
mov
xor
js
popa
popf
mov
mov
xchg
jae
mov
mov
or
xchg
cmpsl
inc
cli
mov
ret
adc
and
inc
push
rcll
xor
add
mov
or
aad
cli
jbe
or
lods
scas
jcxz
jg
stos
repz
dec
ret
xchg
mov
mov
leave
addr16
or
mov
out
push
mov
js
int
jg
lods
or
mov
sub
jge
gs
jmp
dec
shll
jns
pop
leave
jo
loopne
jg
cmc
dec
xlat
sbb
dec
rcll
insl
xor
ja
addr16
sub
out
sahf
leave
pusha
mov
jg
dec
cmpl
test
test
aad
xlat
fldenv
push
insl
xlat
insl
push
push
sti
xor
rclb
cld
fisubrl
jl
or
cmp
pusha
js
mov
mov
movsl
sar
xchg
pusha
cltd
subl
push
insb
pop
test
push
imul
mov
daa
roll
lcall
movsl
jbe
jne
fnstsw
inc
mov
rcl
in
pushf
std
jmp
adc
adc
rorl
sub
adc
es
loope,pn
mov
rcll
js
mov
adc
rcrl
jo
jnp
je
out
fldt
icebp
movsb
clc
sub
dec
mov
inc
add
cs
dec
cmp
pop
dec
inc
fsub
aas
into
das
adc
mov
in
daa
adc
adc
mov
cmp
mov
out
push
leave
rorb
cmp
test
adc
sbb
faddl
jmp
scas
mov
fcmovb
sahf
inc
cld
out
into
push
adc
cmp
jmp
sub
push
jns
in
cmp
pop
push
jecxz
adc
add
cld
ret
cmp
call
mov
push
adc
loop
push
sbb
lcall
das
test
sub
sub
adc
and
push
push
cld
int3
out
outsl
std
ljmp
sub
cmova
lds
test
iret
jae
add
les
loopne
push
out
clc
loope
lock
repnz
pop
jle
lock
mov
jecxz
mov
popf
into
syscall
scas
or
jecxz
in
out
mov
clc
lock
hlt
negl
jae
pop
enter
sbb
int
xchg
pop
mov
sbb
mov
ja
jns
out
xchg
push
jns
jb
iret
fidivrs
mov
enter
jns
or
test
and
and
or
icebp
add
fnstsw
push
dec
fmuls
push
add
out
int3
shl
aad
cmc
ds
mov
jo
shr
mov
fsubr
je
push
shr
sti
fstl
mov
ficoms
les
or
stos
fndisi(8087
fdivl
leave
adc
sub
lock
jmp
or
mov
mov
mov
ror
pop
call
vandps
jecxz
ror
insb
into
lds
in
inc
cld
nop
cli
scas
clc
test
sti
leave
and
mov
sub
pushf
repnz
push
pop
shll
mov
or
sub
mov
mov
fiadds
rcr
outsl
inc
dec
xor
movsl
in
mov
and
loope
iret
mov
icebp
mov
push
mov
loopne
and
mov
jno
sub
and
cmp
out
sbb
popa
add
push
sbb
adc
lds
cmp
xlat
inc
loopne
daa
int
in
cmc
jmp
lret
mov
es
push
dec
and
shll
push
sub
popa
jo
mov
into
aas
icebp
fstp
aaa
add
and
and
add
rol
dec
int3
das
leave
add
les
sar
mov
xorl
aad
leave
xor
and
fdivs
xor
jne
test
mov
int
pop
cmp
adc
dec
or
cmp
push
xlat
jecxz
shrb
repnz
cmp
adc
dec
lds
shrl
dec
int3
dec
loopne
int
mov
cmp
popf
jecxz
loope
mov
loop
jle
sahf
mov
mov
jg
je
mov
outsl
aas
fisubrl
xor
fwait
aam
repz
jae
jp
pop
sub
push
jns
adc
push
inc
jnp
inc
cmp
fidivl
mov
xchg
call
push
jmp
lods
loope
ja
pop
loop
cmpsl
sub
ds
adc
adc
rol
xor
add
jg
icebp
rcll
movsl
ret
dec
or
mov
add
stos
pop
enter
mov
add
jmp
mov
jno
lret
lret
adc
xor
loop
pop
mov
or
and
int3
sub
sub
add
adc
loope
inc
sub
jl
into
inc
adc
loop
jnp
xlat
pop
push
dec
leave
jbe
call
add
mov
or
test
insl
daa
adc
int
jle
xor
cmp
ljmp
cmp
mov
push
xchg
mov
push
std
push
pop
stc
int
push
xor
or
xor
push
mov
fmuls
mov
aas
sub
and
or
leave
in
ffreep
sub
int
leave
cmp
push
add
push
inc
iret
mov
idivb
mov
xor
and
xor
jb
mov
lahf
mov
fmull
out
push
js
or
add
xchg
stc
test
add
mov
add
inc
stc
mov
mov
pop
sub
xor
lock
jmp
imul
aad
arpl
and
mov
dec
int3
push
lret
jo
push
ret
popa
push
int3
aad
gs
jo
sti
leave
mov
push
insl
stc
shll
ss
pop
enter
stos
and
sbb
shll
test
dec
lret
dec
fnsave
in
pushl
cli
jo
in
clc
add
iret
aas
jmp
mov
xor
test
add
test
lds
stos
in
mov
nop
aam
repz
or
add
or
cli
jg
sbb
loop
xor
dec
or
mov
adc
mov
rcll
sbb
push
pop
add
fisubrs
jae
xor
add
shrl
mov
int
jb
out
add
jmp
testb
aam
arpl
loopne
or
xor
cmp
or
sbb
dec
push
pop
inc
push
es
pop
hlt
push
cmpsl
outsb
popf
add
in
mov
sub
and
sbb
jb
add
sub
lret
jle
imul
lds
mov
inc
int
ret
dec
scas
fiadds
or
les
jmp
clc
cld
xchg
fsubs
dec
xchg
adc
insl
hlt
loope
mov
push
dec
cmp
sbb
inc
cmp
lret
int
ss
xor
or
and
ret
pop
into
xor
mov
lods
pop
sub
or
xor
je
leave
rcr
jecxz
xor
sbb
and
sub
hlt
dec
in
leave
xor
popa
aad
int3
test
leave
enter
pop
cli
add
ja
mov
xchg
aad
test
repz
icebp
inc
jp
xchg
push
xor
sub
test
cltd
cmpsl
ds
pop
mov
in
std
in
fldenv
add
dec
adc
lgs
sbb
mov
push
push
adc
and
cmc
jmp
repz
xor
int3
and
inc
iret
vunpckhpd
xor
testl
jle
in
fmull
repnz
dec
xlat
add
xchg
dec
push
dec
ret
stos
leave
sub
mov
dec
ja
lock
inc
into
mov
cltd
je
add
and
push
mov
jecxz
fucomp
loope
int
mul
shrb
jne
adc
mov
shrb
arpl
mov
lret
mov
xor
or
icebp
iret
sub
pop
and
test
and
inc
mov
dec
in
push
aad
mov
in
shrl
dec
aaa
push
jmp
or
fbld
iret
ss
xor
ja
mov
add
cmpsb
adc
mov
stos
lahf
dec
hlt
jns
xchg
adc
pop
jae
repz
lret
pop
lods
push
jecxz
ja
stc
dec
clc
sbb
fnstsw
mov
or
pop
jg
pop
loope
cltd
int
lcall
dec
dec
xor
and
jae
aad
fcoml
pop
lret
jno
xor
adc
movsw
mov
imul
mov
mov
jno
stc
dec
mov
imul
sbb
dec
jnp
jo
xor
xchg
fiadds
mov
jno
mov
popa
or
enter
dec
lret
insb
xor
cli
cmpsb
cmp
sbb
std
xor
mov
or
jmp
shrl
cmpsl
sbb
clc
dec
icebp
pop
movsb
inc
iret
hlt
sbb
movb
and
int
push
dec
jmp
xlat
adc
enter
or
lret
pop
leave
mov
xor
js
icebp
push
dec
add
jb
addr16
cmp
popa
cmp
mulb
rorb
xchg
mov
hlt
adc
inc
mov
jb
repz
pop
lret
fmull
xor
mov
xor
fidivrs
xchg
xchg
icebp
rorb
icebp
mov
mov
jb
ret
std
cld
repz
adc
mov
aaa
mov
push
loope
lret
cli
mov
adc
mov
test
icebp
repz
lret
clc
add
std
and
dec
int
hlt
xor
inc
sarl
add
mov
adc
mov
repz
jmp
pop
stc
xlat
int
pop
cmp
mov
and
sbb
mov
enter
fmul
cwtl
fcomip
outsb
xor
mov
sbb
add
jg
aad
lods
inc
sbb
push
lock
push
inc
lcall
mov
and
push
add
mov
push
or
sbb
imul
xor
dec
xchg
leave
test
aad
bound
aaa
lahf
fwait
jmp
out
dec
add
or
dec
mov
push
jns
into
push
enter
fsincos
vmovd
adc
or
sbb
mov
popa
int3
inc
lret
or
pop
sti
mov
jmp
stc
shll
cmc
dec
add
xor
into
stos
cmpsl
shll
pop
xlat
mov
lret
push
in
mov
cwtl
dec
adc
stos
imul
aam
lea
adc
stos
repnz
ret
mov
fmulp
icebp
pop
dec
fwait
inc
xor
int
dec
fcomip
mov
cmpsl
enter
scas
and
lea
dec
or
loope
xor
adc
sub
addr16
sbb
in
mov
jmp
incb
enter
not
sbb
stos
cmpsb
roll
cmpsl
jb
mov
aam
ret
clc
cmp
das
int3
xor
nop
rorl
std
int
jae
mov
leave
inc
int3
xlat
loop
fdivs
cmpsl
int
subb
inc
iret
repnz
dec
ja
jmp
or
xor
imul
dec
jnp
sti
shll
addr16
add
fcoms
pusha
shl
mov
test
xor
call
into
xor
dec
in
lds
jb
mov
lods
pop
sub
add
in
cmp
or
jo
push
loopne
ror
cmc
or
cmp
or
cwtl
adc
mov
rcr
mov
test
push
lret
xor
aam
int
icebp
add
jae
out
clc
fildll
shrl
fldenv
inc
mov
ljmp
cmpb
fistpl
leave
cltd
mov
mov
cli
stos
jne
jo
mov
fldcw
add
cld
lods
or
clc
push
sub
xor
jge
rcrb
repz
and
jb
sbb
push
shll
ss
and
jbe
lret
icebp
cmp
cmpsl
xor
inc
adc
cmpsl
stos
lret
pop
cmpsl
mov
jp
dec
mov
stos
mov
jno
jecxz
sbb
sbb
sub
jecxz
xor
pop
xor
or
sbb
inc
into
int3
mov
dec
rcr
dec
iret
push
mov
and
jns
ret
aaa
pop
test
dec
xor
add
test
inc
shl
dec
add
xor
xor
call
sub
mov
sbb
test
cmp
adc
fnstenv
sbbl
stc
pop
xor
iret
std
adc
mov
sarl
fsubs
shl
sub
inc
aas
leave
lret
test
bnd
fcmovnu
stos
or
adc
mov
lods
push
mov
jns
int
mov
bnd
scas
ret
gs
imul
fst
xor
lock
xor
or
lret
dec
fsubrs
lret
add
or
dec
test
and
fldcw
out
ret
test
cmp
mov
sub
mov
sbb
aas
lret
nop
lds
jmp
in
mov
inc
ja
shr
push
test
adc
fisubs
sub
test
loopne
lret
jb
fldenv
lock
mov
hlt
dec
insb
insl
mov
sbb
push
int
pop
cmp
aam
pop
ret
pop
enter
lock
icebp
push
mov
fcompl
int
sub
lret
xlat
mov
xor
sub
daa
mov
fstps
xor
ja
repnz
testb
mov
call
add
inc
mov
jle
and
cmpsb
or
or
cwtl
push
sub
and
gs
pop
adc
gs
repz
shrb
mov
lret
mov
dec
dec
loopne
sbb
divb
aad
inc
pushf
dec
icebp
leave
loop
jns
gs
into
sbb
cld
icebp
and
and
xchg
mov
inc
push
ficoml
jae
movsb
jge
add
pop
test
adc
mov
lds
mov
adc
push
jae
jecxz
ret
xchg
adc
or
dec
push
mov
test
sbb
fistpl
mov
outsl
ror
xor
push
sub
xor
push
out
cmp
out
mov
jge
push
shl
test
add
fwait
out
je
roll
mov
shll
inc
ficoms
in
push
xlat
stos
xlat
aas
xlat
push
dec
inc
pop
add
fs
xchg
subl
rcrb
and
loop
and
int3
xchg
and
aaa
jge
ret
std
adc
pop
jno
jmp
sbbl
adc
fmul
lea
movhps
and
jne
adc
out
dec
cmp
lds
lahf
push
in
pusha
sub
mov
dec
mov
lret
xchg
in
xor
push
sub
cmp
mov
mov
ret
hlt
mov
in
incl
lcall
test
or
push
lahf
les
cmpsl
sbb
adc
imul
lock
lret
fistl
dec
call
lods
flds
into
outsb
push
int
icebp
mov
xor
push
lret
mov
pop
iret
xchg
into
pop
xchg
mov
lcall
imul
cmp
cli
cld
leave
mov
es
mov
shlb
pop
or
aaa
or
push
adc
aas
and
stos
or
xchg
int
sbb
jb
cs
in
gs
ss
roll
sub
test
fisttpl
orl
pop
ficomps
aam
or
sub
adc
insl
gs
xor
and
and
filds
pop
pop
loope
cmpsb
stos
rorb
mov
aad
mov
inc
fwait
and
icebp
decb
cmpsl
mov
insl
pop
push
iret
ret
jb
ljmp
xchg
stos
loop
lret
mov
stc
orb
jno
add
pop
add
aad
mov
xchg
sub
jae
pop
lods
rcrl
aad
add
mov
fsub
insl
leave
add
push
popf
mov
fsubrl
or
xchg
or
stos
xchg
or
add
test
out
and
std
in
insl
pop
inc
dec
cmp
shll
adc
and
call
fdivl
lahf
loop
clc
sbb
dec
int
fstl
lods
aad
xor
inc
jmp
ljmp
int
dec
out
sub
aaa
or
fmuls
mov
fs
jno
or
dec
insb
dec
mov
push
andb
out
rorl
dec
rcr
pop
sbb
lret
mov
in
pop
stos
fldl
pop
leave
fs
mov
jmp
mov
or
mov
pop
dec
in
mov
dec
push
sub
call
test
jo
inc
push
xor
lock
dec
mov
cmp
filds
jae
jo
push
and
mov
lods
stos
and
into
sarl
cmp
or
mov
inc
jb
adc
dec
shlb
notb
into
scas
stos
mov
xor
sub
js
nop
pop
adc
fbld
or
ret
ror
jbe
and
push
call
ja
mov
int3
lods
ret
dec
push
leave
xor
lds
dec
mov
xchg
mov
inc
aad
ret
shl
int
jo
lds
mov
cmp
push
mov
ret
icebp
cltd
sbb
xlat
fmul
sbb
xor
and
loop
test
and
xor
jo
pop
jle
dec
cmpl
push
fldenv
and
repz
dec
and
add
sar
out
rcrb
popa
icebp
xor
aad
mov
jae
pop
mov
and
mov
pop
into
aaa
stos
imul
adc
or
repz
fldt
arpl
je
movsl
cli
jae
lahf
cmc
inc
xor
dec
shll
in
adc
dec
in
xor
std
mov
inc
pop
imul
and
jmp
das
cmp
jbe
lds
mov
repnz
insb
int
icebp
jmp
inc
xor
mov
test
leave
fsubrl
andl
loopne
add
push
adc
leave
pop
addr16
pop
cmp
rclb
add
cmp
stos
add
xor
testb
fcoms
push
leave
icebp
cld
pop
inc
imul
shr
dec
in
add
jbe
push
jp
or
mov
mov
mov
test
jl
test
cmp
and
and
shll
out
mov
mov
fldcw
mov
cmp
mov
repz
in
push
repz
push
cld
lret
int3
sbb
mov
jb
mov
push
mov
leave
rol
xchg
or
frstor
imul
pop
shrl
in
or
lds
add
enter
xlat
xor
icebp
bnd
aaa
into
lret
dec
xor
dec
mov
and
xor
iret
roll
ret
dec
add
int3
js
mov
cli
jo
es
mov
jns
mov
dec
cwtl
test
push
xchg
das
testb
repz
dec
out
sub
sub
stos
aad
sarb
add
ret
mov
lock
aad
ret
mov
pop
fisubrs
lock
mov
add
jmp
jne
iret
mov
out
pop
shlb
out
and
dec
inc
mov
cmp
inc
shl
stos
fucom
mov
lahf
loopne
enter
xchg
xor
fmul
icebp
dec
hlt
mov
jle
or
xlat
lock
vpexpandd
rorb
sarl
jmp
adc
jecxz
and
xor
cmp
iret
pop
push
std
and
ljmp
andl
mov
ret
sub
mov
js
aad
push
out
pop
xchg
or
push
mov
mov
cli
mov
into
xor
je
cmpsb
jbe
cmp
inc
pop
cld
xor
and
mov
inc
dec
in
xor
fdivl
sbb
xchg
mov
push
in
mov
loop
pop
incb
rcr
popa
call
fcmovbe
orb
dec
mov
divl
mov
outsb
ret
gs
jbe
sbb
stc
dec
or
in
hlt
xlat
fwait
iret
cmpl
inc
aad
div
add
fisttpl
icebp
fdivrs
into
sub
sbb
cmc
ret
std
call
dec
movsb
dec
adc
test
inc
shll
inc
sarl
add
mov
inc
mov
mov
shll
std
aad
push
cmp
int
adc
push
iret
fs
in
xor
faddl
xchg
aad
int3
add
out
shlb
add
mov
jne
shr
out
int
cmc
out
stc
fcomps
enter
popf
mov
out
pop
punpckldq
push
push
addr16
adc
stc
push
scas
mov
or
call
jmp
outsb
or
in
sbb
push
sbb
popf
enter
ret
movsl
aad
or
rcrb
rol
test
shr
ror
dec
leave
or
and
ja
int3
adc
sbb
shll
dec
push
shrl
lds
or
shll
loopne
int
lods
adc
inc
repz
cmovnp
mov
es
and
jno
cmc
inc
xor
daa
leave
add
push
stos
jb
int3
stc
inc
adc
ljmp
es
mov
fcomip
stos
xorl
xor
mov
sub
mov
or
xor
pop
aad
dec
es
sub
sbb
call
enter
lret
sub
loope
std
repnz
sbb
leave
rcr
dec
adc
movb
ret
mov
mov
neg
or
xchg
sarl
push
jl
push
mov
mov
test
push
aad
leave
js
sti
hlt
lock
loope
xchg
lods
push
lret
lret
xchg
fsubr
sbb
dec
ja
shlb
icebp
or
mov
dec
fchs
dec
mov
out
lock
and
and
mov
js
and
mov
xor
inc
mov
pop
in
mov
enter
adc
lods
jns
sbb
nop
xchg
mov
lcall
and
icebp
stos
or
adc
ds
xchg
mov
push
push
mov
mov
cmp
loope
fbstp
es
ss
clc
mov
daa
test
cmpsl
dec
mov
jo
pop
out
pushf
icebp
cli
stos
shll
mov
popf
xchg
cmpsb
int
ja
mov
stos
scas
push
lea
mov
rcrb
stc
loop
sub
push
loope
dec
repz
jg
adc
push
test
jo
inc
add
push
lods
mov
dec
lret
repz
cwtl
popf
xorb
mov
lods
lret
hlt
jb
xchg
out
pop
ret
xor
jle
and
sbb
xlat
loop
xchg
xor
mov
mov
ja
jae
xor
sbb
ror
orb
inc
xchg
lods
pop
ret
pusha
sbb
mov
stc
add
scas
std
popf
in
xor
xchg
jo
rorl
mov
test
push
icebp
and
repz
add
dec
or
xchg
std
pop
cld
sub
and
pop
in
mov
addl
lret
and
movsb
jmp
xor
shlb
mov
jmp
stc
xchg
push
std
pop
lock
fstps
rcr
sahf
stos
pusha
adc
cmpb
jae
jbe
or
popa
add
outsl
cld
xchg
xlat
aam
push
arpl
mov
mov
mov
loopne
sti
pop
es
cltd
or
jmp
enter
or
dec
ja
sub
add
xor
imul
mov
fildl
icebp
mov
jb
xchg
daa
ds
mov
lret
jne
int3
xor
mov
rcrl
adc
dec
fimuls
add
jbe
mov
leave
das
fidivs
mov
leave
dec
cltd
pushf
or
mov
fnsave
mov
xor
jno
stos
test
inc
enter
adc
add
cmp
loop
mov
mov
mov
pusha
push
mov
mov
cmp
jo
mov
loop
xchg
add
inc
pop
mov
ret
jb
mov
jo
mov
daa
mov
sbbl
cli
popa
in
or
jp
jmp
xor
mov
cmpsb
mov
sbb
and
push
cwtl
fsubrs
xchg
rcr
ficomps
jns
shl
repz
sbb
mov
leave
add
out
mov
mov
add
push
inc
mov
ljmp
scas
xchg
push
inc
movsl
test
jo
mov
mov
pop
cli
lahf
daa
mov
test
inc
in
xor
clc
cli
das
xchg
pop
aaa
fwait
and
and
jg
mov
xor
mov
shlb
mov
xlat
or
jns
les
fdivp
fsubl
jns
lock
and
into
pop
or
dec
int
jo
aad
mov
nop
mov
jae
mov
js
sub
sub
xor
adc
add
and
enter
dec
jmp
add
dec
or
mov
and
xor
sub
das
xchg
cmc
dec
outsl
scas
fldcw
clc
push
mov
fadds
sarb
stos
movsl
xor
shll
mov
cmc
loope
mov
mov
cmpsb
cmp
sbb
popf
dec
dec
int3
das
movsl
fmull
jo
into
mov
int
push
jne
mov
mov
loop
sbb
into
fdivr
icebp
xchg
xor
dec
fwait
sbb
repnz
cld
xor
subl
mov
leave
mov
frstor
int
addr16
xchg
or
push
cmpsl
push
dec
js
movsl
imul
mov
call
lods
and
sti
or
iret
add
or
mov
mov
shlb
icebp
or
sbb
out
and
hlt
call
add
sti
and
inc
adc
push
xor
xor
lret
nop
mov
xchg
lret
xchg
sarl
jmp
test
add
shll
repnz
mov
push
sub
cltd
cli
sahf
popa
xchg
and
fcom
cmp
jb
lret
pop
xor
mov
and
dec
fwait
movsb
cltd
leave
les
jge
pusha
sbb
and
mov
cltd
call
stc
xlat
lret
jmp
fisttpll
scas
ror
stc
pusha
jge
pop
xor
cli
and
ficomps
jns
or
add
push
es
into
je
dec
fsub
push
jmp
inc
out
mov
sbb
gs
out
ret
aad
xor
lahf
sbb
push
into
stos
lret
aas
fldenv
in
xor
cli
jae
jb
jno
lret
and
pop
loop
scas
adc
int3
push
fldcw
rorl
cmp
stos
cmpsb
adc
add
ljmp
mov
in
aas
xchg
push
mov
cmpsb
mov
int3
mov
or
shll
enter
mov
ljmp
mov
stc
test
mov
lods
rcrb
enter
stc
mov
mov
lods
ror
stos
jae
push
jbe
shr
xor
pop
arpl
sub
add
in
ret
arpl
sti
adc
lods
fcmovne
or
inc
in
mov
cmp
push
negl
lods
add
cmp
outsl
pop
sbb
mov
jae
inc
cli
mov
jle
pusha
popl
lret
aas
add
call
xchg
pop
rolb
cmp
dec
jge
outsl
out
pusha
aaa
repnz
mov
and
popa
mov
mov
and
cwtl
xor
lock
aam
mov
dec
cmc
dec
cmp
jmp
lods
push
int3
ret
pop
scas
ja
cmpsl
mov
and
dec
repz
enter
int3
push
das
xchg
mov
and
sbb
and
adc
xor
dec
push
pop
or
mov
push
int3
xor
sbb
loopne
enter
jbe
dec
notl
and
pop
rcrl
jge
adc
and
movsb
daa
push
mov
xor
pcmpeqw
fnsave
aas
mov
mov
bound
ja
bound
inc
nop
testb
and
cmp
out
loop
jb
add
repnz
jb
stc
sub
xor
nop
mov
cmpsb
fdiv
leave
mov
cmp
jnp
aam
mov
jae
cmp
xor
dec
push
lods
pushf
or
in
test
mov
inc
jl
xchg
mov
mulb
dec
lods
into
pop
movsb
mov
jbe
mov
scas
mov
jbe
das
add
mov
rorb
scas
cltd
cmp
jbe
mov
ret
mov
push
xchg
icebp
insb
dec
or
pushf
ret
push
xor
pop
push
cmc
aaa
jge
rcll
mov
xor
and
enter
jnp
pop
stos
cmpsb
ret
add
pop
jb
insl
movsl
add
and
mov
mov
jg
int3
stos
fsubrl
and
pop
adc
push
call
mov
in
aam
stc
cmp
push
jmp
dec
pop
imulb
in
shrb
int3
dec
add
in
mov
jecxz
jns
mov
mov
lret
adc
rcr
inc
pop
mov
les
push
icebp
lcall
pushl
dec
sub
pop
inc
mov
lds
movsb
in
or
push
js
mov
mov
or
adcb
dec
pop
xor
mov
xchg
mov
push
test
inc
cmpsl
ret
mov
lods
fs
dec
mov
mov
mov
stos
mov
mov
rep
popf
add
sub
mov
xor
data16
pop
inc
testl
aaa
repz
loop
in
popa
inc
inc
mov
jo
push
vcvttps2dq
rclb
add
inc
dec
in
and
imul
inc
dec
aad
int3
inc
sub
inc
cmp
push
mov
push
xor
cli
jg
aad
jp
inc
dec
xor
and
rorb
sahf
call
jge
mov
xor
mov
sbb
fildl
mov
cmpsb
jmp
mov
loope
xor
arpl
xchg
daa
fbstp
fnstcw
dec
ret
lock
inc
mov
sarb
jl
and
cli
loopne
and
into
dec
add
jnp
or
mov
lock
mov
lret
lds
cmpsb
sbb
mov
out
scas
imul
addl
test
cli
mov
cwtl
fcmovne
int3
mov
mov
mov
jo
push
jae
cltd
mov
leave
pop
jne
xor
fwait
cmpsb
mov
or
jo
int
out
mov
fdivl
addr16
shll
pop
stc
inc
rcl
leave
cmc
mov
repz
sarl
mov
lds
sbb
adc
jg
rcrb
aas
add
dec
ret
ljmp
and
test
mov
into
add
push
mov
les
pop
loopne
js
sbb
ret
jbe
repz
jp
stc
aam
mov
divl
icebp
or
mov
jb
fmuls
lds
subl
xor
cli
cmp
mov
out
data16
les
imul
lret
jmp
xor
loop
int
xor
incb
loop
stos
test
cmc
jnp
adc
ljmp
mov
mov
xor
mov
mov
cmp
xor
xchg
lods
lahf
jmp
pop
js
sub
adc
jns
out
fldcw
xor
mov
adc
jns
xor
dec
movsl
adc
add
xchg
movsb
jnp
pop
or
into
shlb
mov
jo
test
cld
je
dec
test
lock
mov
repnz
clc
loopne
mov
stos
mov
shlb
test
mov
icebp
test
call
dec
or
decl
mov
stos
in
mov
call
sbb
add
sub
jae
repnz
add
jmp
or
cmp
push
jp
outsl
in
dec
and
and
or
arpl
mov
adc
dec
mov
dec
or
and
dec
stos
enter
mov
cld
sbb
xor
out
and
in
fldenv
fnstenv
std
sbb
popf
movsl
cld
xor
ficoms
pmullw
jbe
call
jae
xor
jb
or
and
cmp
mov
cmpsl
sub
adc
pop
push
pop
sbbl
jmp
sbb
insl
fadds
mov
dec
roll
adc
jae
hlt
sub
and
mov
stos
outsl
jne
jno
mov
fnstenv
lock
jns
sub
xor
aad
jge
xor
xchg
repz
adc
sub
fsubrs
inc
jae
push
mov
jmp
and
push
lret
and
ficoms
ljmp
int
insl
mov
mov
push
sub
shlb
fnstenv
getsec
push
mov
mov
bound
out
lret
push
jmp
addr16
add
lods
lods
and
cs
rclb
enter
xor
and
popf
pop
setb
xor
sar
pmaxsw
sub
jb
fwait
jmp
in
hlt
dec
call
lods
scas
inc
cli
sub
pop
pop
mov
cmp
cmp
mov
fadd
xorb
inc
in
rcr
inc
int
and
and
xchg
cli
xlat
aaa
hlt
iret
jae
mov
add
add
lret
lret
dec
mov
xlat
sbb
pusha
stos
xor
push
enter
jmp
jmp
pop
imul
sbb
mov
add
jae
int
leave
pop
xor
idiv
in
xor
and
in
cmpsb
cwtl
mov
add
sbb
rorl
rorb
push
addr16
or
out
sub
jmp
push
jmp
mov
dec
leave
aad
ret
sbb
pop
dec
xchg
sub
mov
stos
insb
mov
push
mov
add
xor
ds
mov
adc
push
jmp
and
and
mov
fisttpll
mov
dec
int
dec
push
gs
fmuls
loope
test
cs
sub
mov
add
jmp
cmp
dec
int3
mov
xor
mov
sub
test
mov
add
mov
leave
xor
dec
mov
push
fsubrl
mov
or
sub
sbb
sub
or
pop
mul
loope
aam
test
outsb
mov
sbb
xor
mov
and
xchg
xchg
inc
sub
xor
leave
push
jae
adc
arpl
dec
test
or
out
loopne
fstps
inc
xor
mov
loop
std
lret
test
jne
cld
pop
rcr
lahf
pop
leave
cs
sbbl
out
int
mov
cld
in
stos
push
inc
and
stos
fisttpll
int
mov
sbb
inc
and
cmp
call
leave
flds
dec
xchg
add
lea
dec
fnstsw
adc
test
mulb
and
scas
movsl
pop
mov
add
popa
adc
test
addl
shll
shl
insl
xor
int3
loope
shll
mov
shll
lds
adc
mov
push
into
push
imul
sbb
mov
adc
or
test
es
addb
out
movsb
push
test
aad
mov
mov
shll
cmc
mov
xor
aaa
pop
or
xorb
jb
aad
test
rcrl
popf
push
push
xlat
stos
ret
mov
ret
mov
and
add
sub
sbb
ret
push
add
cltd
cli
cmpsb
and
int3
mov
icebp
aas
adc
cli
xchg
fistps
xlat
push
dec
idivb
adc
push
jge
inc
pinsrw
out
leave
subl
fadd
lret
lcall
pop
mov
pop
imul
and
leave
stos
mov
pop
add
roll
aaa
xchg
and
and
out
test
push
mov
in
cmc
js
mov
dec
or
int3
xor
nop
xchg
push
dec
mov
mov
add
xor
addl
push
pop
jmp
cltd
sbb
loopne
xchg
xchg
cmpsl
pop
pop
pop
add
xor
cmpsl
stos
fdivl
add
test
in
sub
pop
das
out
or
mov
push
cmp
add
xlat
test
in
inc
leave
sbb
flds
mov
fldcw
icebp
mov
sbb
out
sbb
les
adc
fildll
or
or
stos
or
xor
xor
call
adc
pop
gs
aad
rcrb
push
cmpsl
rorb
dec
fs
ja
cmc
cmp
dec
call
popa
sbb
cmp
add
mov
jg
jns
aad
clc
inc
xchg
pop
add
popf
fsubs
sub
test
sbb
gs
ret
xor
fdivs
inc
cli
js
stos
mov
cmpl
cld
leave
lds
cld
and
sbb
dec
cmp
hlt
and
aad
outsb
repnz
cmp
push
in
mov
icebp
xor
mov
jmp
sbb
pop
pop
dec
rcrl
lock
jno
jb
sub
lds
leave
into
mov
or
adc
fimull
pop
sbb
pop
cmp
in
or
dec
lret
inc
lock
add
sarb
icebp
rcrl
or
pop
adc
stos
int3
mov
mov
or
jne
mov
mov
int
fwait
mov
mov
stos
add
cmpsl
mov
jo
add
mov
mov
mov
jns
mov
das
rorl
imul
xor
fnsave
imul
popf
addb
out
xchg
or
adc
or
and
adc
imul
rorb
push
into
in
enter
ret
or
jno
xchg
or
inc
enter
inc
or
pop
rclb
xchg
test
pop
mov
icebp
inc
sub
jae
or
repz
or
or
pop
enter
inc
sarl
jne
dec
add
jno
dec
enter
fisttpll
push
jno
push
dec
push
ret
dec
add
and
mov
out
lret
into
mov
aam
xchg
push
fsubl
mov
fbstp
fisubl
out
orl
lret
inc
fisubrl
mov
jns
mov
dec
loop
lock
imul
add
rorb
call
addl
xchg
leave
popf
mov
sub
ret
mov
pop
inc
or
not
into
push
mov
sbb
stos
icebp
sbb
cli
xchg
fldenv
std
sbb
arpl
xchg
add
lret
and
ds
mov
cmp
test
icebp
mov
xchg
mov
xor
xchg
aaa
xchg
cld
into
aas
into
je
jno
fnstsw
cli
cmp
xor
sbb
xchg
ds
stos
les
xorb
hlt
dec
sar
jns
pop
fsub
lcall
cltd
mov
lret
cmp
in
into
jge
rol
xor
stc
jb
fwait
and
add
jle
sahf
fmuls
stos
in
sub
out
dec
jb
mov
lret
xor
lcall
enter
rol
jmp
mov
add
idivl
popf
and
les
and
or
xchg
mov
pop
pop
sarb
or
jo
test
push
into
scas
cmp
fisttpll
cwtl
pop
call
mov
imul
sahf
test
lods
and
arpl
mov
cmp
aaa
push
sbb
cmp
movsl
test
std
ret
and
mov
mov
psubsw
mov
jns
int3
cmc
aad
cs
or
inc
nop
sub
into
rolb
sbb
lds
stos
arpl
or
out
cmp
xchg
mov
andb
cli
add
jns
cmp
lgs
ja
sbb
loop
and
ljmp
ror
jae
fldcw
ror
test
mov
inc
lret
sub
mov
lret
ljmp
shl
jg
inc
ss
lds
std
sbb
push
push
adc
lock
jecxz
mov
shll
pop
adc
insl
nop
xor
sahf
pop
cmp
clc
in
adc
lret
leave
aad
mov
lret
jmp
adc
std
jae
sub
adc
dec
sarl
push
push
cld
sbb
cli
ja
sbb
popl
adc
lods
rol
mov
nop
xchg
in
int
addr16
cmc
rolb
mov
std
nop
call
aam
push
pop
jae
mov
pop
jecxz
sub
and
mov
jae
leave
orl
or
dec
lock
inc
enter
cmc
lea
sub
jmp
stc
rorl
cmc
sbb
dec
cmp
dec
aad
or
adc
out
sub
enter
dec
adc
and
xor
dec
inc
pop
shrl
orl
int
shl
out
decl
ret
sbb
das
or
inc
dec
rcll
arpl
or
dec
lret
ret
cmpsl
push
cltd
or
mov
or
mov
hlt
push
add
repnz
or
pop
sahf
add
or
in
sbb
pop
sarl
cmp
int3
lret
leave
add
ret
inc
into
and
scas
mov
push
or
push
xlat
ret
icebp
add
loope
adc
ret
in
ror
pop
adc
sub
sub
cwtl
cmp
sub
mov
out
push
push
adc
lret
and
sub
and
adc
pop
or
mov
push
clc
insb
daa
cmp
sub
shlb
and
and
sbb
sub
push
cli
call
add
inc
in
mov
or
out
arpl
inc
adc
cmp
bound
mov
mov
mov
or
lods
adc
or
shl
sub
sub
jno
adc
xor
adc
jge
insb
test
je
and
movsl
jnp
cltd
fs
out
xchg
clc
incb
sub
repz
sub
sarl
fnstsw
and
push
rcll
jmp
das
push
fbstp
out
pop
cli
fs
push
ret
or
out
jae
sti
pop
in
cmp
scas
shrl
repnz
add
frstor
jmp
hlt
cmc
into
adc
aad
adc
mov
std
inc
xchg
xor
fwait
cmp
sub
stc
fwait
jecxz
cmc
int
xchg
shrl
inc
jne
aam
es
repnz
and
jnp
stc
or
pop
or
daa
or
cmpsb
clc
and
loope
int3
shrl
sbb
adcl
lock
push
mov
add
jge
adc
sub
inc
int
or
movsl
jp
inc
sti
sub
das
inc
int
mov
rcl
or
repnz
mov
jg
into
xor
cmc
pop
out
sub
adc
daa
and
push
dec
pop
test
incb
jge
xchg
aad
roll
and
rclb
cmp
leave
or
std
call
mov
adc
cmc
notl
cmp
cmp
lret
adc
sbb
add
cmc
jmp
icebp
leave
std
in
or
mov
cmc
in
jg
lret
add
mov
mov
or
or
das
dec
rolb
push
leave
orl
shr
sub
mov
aam
loop
sub
sbb
mov
push
dec
dec
inc
jmp
dec
insb
jmp
xor
pop
leave
sbb
adc
cmp
lds
pop
sub
mov
inc
jmp
aam
inc
inc
movsb
dec
pushl
adc
adc
inc
int
lret
mov
inc
mov
leave
mov
sub
jmp
fsubs
popf
cmp
xchg
push
mov
fistl
and
push
or
hlt
add
xchg
mov
adc
sub
lock
das
movsl
sub
pop
or
mov
cmp
push
aad
hlt
jg
pop
pop
dec
lahf
xchg
jle
fcmovb
into
cld
dec
mov
cmpsl
es
add
negl
or
in
xchg
or
rcl
out
or
jecxz
mov
stc
xor
push
test
leave
pop
repz
add
popl
mov
ret
pop
mov
pop
ss
imul
das
jmp
add
pop
add
add
dec
push
int
iret
cmp
data16
lds
add
and
and
insl
inc
xlat
ljmp
vminsd
fisttps
xchg
sub
adc
roll
inc
adc
les
jl
int
cmp
filds
push
fisttps
adc
sbb
cs
add
xor
aam
adc
vpor
sti
mov
movups
das
aad
cmpsl
adc
pop
aas
and
push
push
call
loope
mov
xchg
adc
add
shl
cmp
out
aad
rcr
andb
add
inc
inc
pushf
inc
inc
ljmp
fs
inc
out
cld
ja
sub
pop
mov
jae
enter
jae,pn
pop
push
iret
repnz
pop
sbb
pop
mov
pop
fisttpll
xor
mov
mov
push
out
or
push
xor
bound
lahf
pop
daa
outsb
out
jns
pop
adc
in
mov
ret
js
inc
out
cmc
add
jno
push
hlt
or
lds
push
pop
out
push
imul
or
movsl
and
arpl
lds
push
jne
aaa
jb
pop
adc
add
roll
test
hlt
pop
pop
ret
pop
or
xlat
xchg
xchg
sub
adc
and
popa
fldt
fldcw
mov
pop
fwait
or
les
arpl
enter
add
inc
rol
nop
loope
push
call
loope
icebp
hlt
and
out
enter
rorl
mov
loope
std
cmpsl
shll
jecxz
enter
or
push
shll
cmc
aaa
inc
dec
imul
addb
scas
shll
dec
loope
sar
enter
jo
loopne
push
std
arpl
aaa
stc
stc
lret
stc
lret
out
mov
mov
mov
xor
fs
adc
push
mov
aam
fxch
and
int
mov
hlt
je
filds
adc
cwtl
rcll
scas
imul
jae
or
sub
mov
sub
mov
daa
movsl
dec
or
lds
and
pop
xor
jns
add
lds
cli
add
cmp
and
sub
sbb
testb
add
leave
sahf
lret
or
ss
lds
adc
lock
lock
mov
push
int3
sbb
vmwrite
pop
cmp
inc
cld
int
lret
mov
cmc
lret
call
sbb
ret
subl
fmul
pusha
stos
xchg
loope
push
mov
loopne
loope
fwait
xor
js
sbbb
les
mov
dec
mov
pop
cmc
mov
pop
adc
adc
enter
cli
rcrl
adc
shlb
ret
push
aad
or
cmc
fadd
dec
fcmovnb
popf
adc
fldl
sarl
cmc
sub
cmp
or
sarl
mov
jmp
icebp
rcrl
mov
call
mov
inc
mov
dec
fcomip
dec
mov
inc
into
rolb
inc
std
mov
enter
pop
cmpsb
xor
push
repnz
xor
inc
rcr
je
sahf
ror
push
push
fnstenv
rcrl
xor
aas
xor
imul
aam
test
cmp
loope
lock
mov
mov
loope
cwtl
test
xor
push
test
fwait
pop
push
jno
push
sub
cltd
lahf
xchg
mov
and
icebp
mov
dec
pop
mov
mov
add
push
rcr
xchg
mov
ror
mov
fcom
and
mov
mov
leave
mov
mov
int3
shll
int
leave
clc
enter
lret
std
sub
mov
lds
sub
rcl
in
adc
add
add
leave
call
cmp
sub
roll
rcr
push
and
mov
inc
xor
xor
adc
jecxz
xor
xor
call
push
sbb
notb
push
inc
rorl
or
mov
mov
jmp
xchg
push
movsl
sub
xor
mov
repnz
dec
xor
adc
shll
test
and
push
mov
mov
and
xor
enter
popf
adc
enter
or
cmc
popf
test
ret
jno
or
push
rcrl
pop
inc
dec
inc
ret
dec
aad
or
cmc
cmp
aad
or
cmc
inc
std
shl
cmc
jmp
leave
aad
sbb
adc
aad
test
sbb
add
or
xchg
lea
and
jns
ret
add
cmc
aas
icebp
dec
sub
xchg
xchg
stc
dec
cli
ret
sbb
cmp
inc
pop
fs
aam
or
dec
sub
adc
sti
add
cmc
orb
shl
out
enter
shll
inc
loope
dec
mov
iret
shl
rol
jmp
roll
adc
dec
loope
push
lret
leave
mov
mov
xchg
cltd
cmc
or
test
adc
leave
vpor
mov
xchg
jecxz
in
pop
mov
hlt
xor
stc
les
stc
push
out
rorb
testl
lret
mov
sbb
leave
decb
in
mov
sbb
xlat
out
push
and
das
jo
arpl
or
or
pop
fsubrs
or
loope
stc
mov
in
adc
mov
or
mov
adc
dec
and
jmp
mov
fnstenv
and
loopne
cmp
imul
adc
int
or
cmc
cwtl
enter
dec
and
jmp
loope
es
mov
ja
add
adc
test
sbb
lret
aad
fwait
rorb
and
cmc
stc
loopne
in
jo
loope
mov
loopne
or
push
pushl
in
shrl
arpl
call
and
xor
or
call
or
enter
cmp
push
pop
sbb
or
movsb
repnz
icebp
adc
enter
call
icebp
test
jns
cmp
adc
mov
pop
jmp
outsl
push
xor
incb
insl
insl
out
test
xor
push
and
and
and
or
add
shl
cs
and
or
fstpt
sti
jo
push
cmc
add
sub
push
stc
add
and
and
sub
aad
shrl
outsl
jecxz
aad
inc
sti
pusha
or
xchg
icebp
dec
addr16
inc
cmp
push
push
in
lods
sbb
sub
jp
cli
mov
int
lret
mov
mov
or
mov
andb
sbb
lret
mov
es
rorl
mov
mov
mov
nop
sarb
or
mov
jg
cmp
xorb
sbb
mov
shl
das
vpunpcklqdq
rol
dec
dec
movsl
pop
xor
mov
mov
push
sahf
inc
mov
movsl
call
mov
dec
mov
sahf
shl
jecxz
mov
fnstenv
mov
push
mov
mov
loop
rorl
pop
xchg
inc
xor
jl
mov
std
jb
clc
loope
cmp
xlat
movsl
in
mov
repnz
pop
mov
mov
lods
mov
loopne
sti
rclb
mov
push
sbb
xchg
adc
and
xchg
xchg
mov
mov
xor
or
mov
and
lcall
fnsave
pop
jecxz
out
lock
pop
sub
pop
es
jnp
lea
jmp
imulb
push
daa
xor
jbe
xchg
inc
xchg
mov
cmpsl
mov
psubsw
mov
into
decl
sbb
mov
push
mov
mov
mov
inc
rcll
bound
jb
sbbb
daa
mov
mov
xchg
repnz
movsl
pusha
mov
mov
jmp
cli
adc
dec
cld
pop
decl
and
sti
aam
in
repnz
and
xor
mov
test
lahf
mov
sti
ret
cli
fscale
and
cmp
jae
mov
stos
repnz
stc
inc
icebp
push
sbb
jb
andb
fsts
stos
jb
subb
scas
test
mov
iret
mov
jmp
mov
into
add
sbb
mov
inc
mov
push
mov
sbb
fwait
aas
xchg
aas
mov
pop
out
cmc
pop
push
fists
pop
dec
ficomps
fwait
pop
scas
xor
fdiv
or
push
ss
push
and
xchg
aas
xchg
aaa
xor
push
or
push
bound
cwtl
mov
mov
and
sub
aas
xor
cmpl
sub
daa
cmp
jno
xchg
fnsave
dec
pop
push
fcoml
out
pop
sub
jle
je
stc
xor
inc
iret
cmp
ja
mov
pop
sti
fdiv
pop
adc
sub
fidivrs
pop
xor
pop
outsb
pop
fs
jl
je
sbbl
fdivp
call
cmp
mov
outsl
mov
cli
call
std
sub
xor
pop
insl
js
mov
stos
cmpsl
iret
leave
std
paddq
mov
into
inc
push
inc
dec
pop
sahf
subb
les
jp
xor
inc
mov
mov
scas
jns
mov
dec
cmp
push
adcl
mov
jg
push
in
pop
jle
adc
cmp
push
iret
sub
das
dec
xor
inc
dec
pop
mov
popa
test
sahf
mov
ljmp
inc
mov
push
mov
icebp
sahf
mov
mov
pop
or
and
and
and
out
cmp
or
or
sbb
adc
pop
push
ss
cli
arpl
jg
mov
xorb
push
aad
in
and
sti
nop
repnz
mov
xchg
mov
and
push
mov
cli
test
mov
inc
mov
and
pop
daa
pusha
and
xor
in
mov
dec
inc
cwtl
loopne
xchg
test
mov
xlat
ret
lret
pop
aad
in
add
aam
dec
mov
pusha
cltd
outsl
in
bound
lods
icebp
lahf
leave
xchg
test
sub
cmpsb
mov
test
mov
stc
loopne
mov
add
jbe
xchg
aaa
inc
mov
xlat
xchg
pop
sub
cmp
jg
mov
fstps
xchg
cli
and
and
adc
mov
xchg
scas
bound
ds
xchg
cmp
je
xchg
setbe
xchg
sub
and
test
mov
fwait
xchg
xchg
xchg
insl
test
add
xchg
aad
clc
loope
sti
inc
cli
pop
std
imul
add
adc
cmp
mov
aam
xor
std
inc
or
mov
cmpsb
add
jns
movsl
mov
int
loope
sti
gs
jge
jne
lea
pop
popf
inc
xchg
push
pop
movsl
mov
pextrw
dec
fisttpll
jle
data16
adc
loop
inc
push
mov
std
aam
and
in
pop
adc
subb
dec
cmpsb
dec
pop
add
mov
test
popa
test
test
enter
gs
sahf
test
loop
mov
insl
xchg
inc
stos
mov
pop
test
stc
push
std
imul
jns
mov
stos
jo
cs
jns
sbb
out
mov
out
sub
mov
mov
jge
pusha
jp
imul
mov
and
and
adc
mov
loopne
pusha
stos
xchg
addr16
mov
les
sub
mov
jmp
iret
jae
sbb
rclb
icebp
jle
or
pop
mov
jg
inc
cs
hlt
enter
and
mov
icebp
hlt
mov
dec
lock
rorl
mov
daa
or
mov
jnp
lds
and
sbb
rol
mov
mov
push
pop
sbb
add
shll
and
sahf
lock
das
xchg
jle
cli
mov
xchg
inc
adc
push
mov
mov
add
movsb
fsts
testb
push
sbb
inc
lock
xor
hlt
cmp
adc
mov
cltd
sub
add
adc
fildl
or
mov
adcl
cmp
fidivl
xor
cmc
outsb
xchg
adc
adc
pop
inc
push
das
mov
pop
xchg
sub
into
fs
clc
push
sub
xchg
and
mov
fildll
or
and
ror
cmp
mov
jge
sbb
repz
int3
jbe
push
add
jns
inc
fsubl
outsb
push
lds
mov
std
lds
popf
out
xchg
add
stos
pushf
jne
lcall
push
xor
xor
std
test
and
inc
lahf
dec
repnz
pushf
movsl
jae
xchg
push
or
lods
dec
add
shl
idivl
push
fldt
and
lahf
stos
cmp
movsl
cmp
movsl
and
dec
adc
pop
xchg
fadds
mov
add
shll
lds
out
or
jecxz
xor
rorl
mov
add
adc
cli
sub
push
ret
inc
mov
push
lcallw
in
nop
das
arpl
hlt
arpl
add
jp
aad
push
or
int
dec
jl
iret
sar
sub
int
mov
fucomi
cmpsl
daa
test
cltd
into
pop
test
and
fstl
sub
adc
ljmp
enter
ffree
shlb
cmc
sarb
and
movsl
outsl
dec
int3
or
into
lret
mov
stos
lock
dec
dec
dec
leave
mov
rorb
pop
enter
lahf
arpl
mov
lock
insl
push
ds
push
test
jecxz
mov
aam
sub
mov
arpl
inc
mov
cli
jecxz
mov
or
enter
jbe
mov
push
nop
insb
loope
in
test
je
mov
mov
pusha
xchg
hlt
cmp
mov
mov
mov
aad
cli
jg
bound
jne
insb
xchg
outsb
jno
jle
sbb
or
inc
cltd
xor
add
popa
gs
jecxz
ds
flds
leave
xorl
aas
push
mov
inc
movsl
lods
test
ss
ss
mov
and
fstl
mov
xorb
mov
ret
rorl
mov
jmp
dec
loopne
shll
in
insl
mov
mov
dec
ror
test
test
sub
inc
or
jecxz
dec
mov
in
jg
push
mov
aad
xor
xor
inc
div
push
xor
xchg
fucomp
xchg
leave
xor
icebp
and
mov
fldenv
push
mov
cltd
incl
sbb
mov
add
jno
leave
xchg
mov
imull
loop
sarl
loopne
loopne
mov
pop
jbe
bound
sahf
mov
ror
mov
push
shll
mov
leave
pop
dec
shlb
cmc
sub
dec
in
ret
lock
pop
and
add
leave
pop
call
xlat
enter
icebp
fmuls
shlb
sbb
jns
icebp
jnp
divb
loopne
jae
cmc
iret
inc
icebp
jg
dec
inc
rcl
divb
shl
xchg
aad
js
sarb
and
ret
push
pusha
fnstenv
mov
lret
sbb
ror
rol
jle
push
mov
shll
aam
loopne
dec
inc
rol
popa
shlb
test
loope
pop
xor
cs
add
and
pusha
sarl
nop
jno
mov
out
rcrb
fxch
mov
dec
pop
cltd
loope
shll
rcrl
inc
jno
daa
pop
mov
push
shlb
sbb
adc
ljmp
jl
jo
mov
fadd
sbb
push
xchg
movsl
rorl
jno
push
leave
jae
jne
imul
adc
jne
jne
jno
xchg
stc
mov
fadd
cli
dec
call
xorl
inc
ds
sbb
cmp
sahf
jae
fiaddl
stc
cltd
xor
xchg
push
xchg
ds
rcr
aad
jl
sbb
sub
loopne
pop
hlt
jno
sub
inc
lds
fmulp
shrl
dec
roll
mov
xor
test
sub
pop
shll
shll
add
fldenv
jns
mov
nop
leave
fists
popa
xchg
popa
jl
inc
icebp
or
and
mov
adc
mov
jmp
xor
adc
xchg
mov
sbb
movsl
mov
fdivrp
shll
push
movsb
jecxz
enter
fsts
divb
mov
jno
dec
mov
push
pop
ja
push
pop
mov
popa
cmp
push
cmpsl
inc
fldenv
icebp
mov
inc
flds
mov
xchg
push
pop
fnstenv
mov
imul
pop
cli
stc
shl
mov
xor
aas
rcrl
xlat
mov
mov
push
vpunpcklqdq
lock
xor
mov
jno
pop
jmp
movsl
cmc
mov
stc
icebp
pushf
lock
les
lret
pop
push
leave
inc
lret
xlat
jns
ljmp
js
mov
roll
cltd
int3
lock
mov
lods
mov
icebp
rcll
jae
lret
dec
mov
lret
ret
xchg
lret
call
iret
ss
int3
fmulp
or
mov
xor
cltd
xchg
inc
ret
leave
faddp
push
rcr
mov
mov
inc
ret
jne
cmp
cwtl
jmp
jmp
loope
mov
icebp
ret
pushl
loope
mov
add
adc
push
dec
sbb
add
cmp
cli
mov
daa
rcll
lock
popa
add
mov
pop
sub
lds
xchg
pop
rcll
xlat
lcall
push
sbb
dec
mov
loope
push
rorl
hlt
pop
mov
xlat
pop
xor
xor
aam
xchg
stos
cltd
jecxz
sar
cmc
leave
xor
popa
or
jmp
and
push
loop
divb
repz
fs
adc
rorl
pop
loop
push
pop
aad
rclb
fidivrs
in
jmp
ss
cs
aad
cli
stc
shl
inc
leave
in
daa
jecxz
in
and
dec
popa
out
and
dec
fidivs
inc
push
lcall
inc
out
mov
inc
sti
call
movsb
and
mov
popa
out
pop
vmulpd
mov
rcll
sti
add
loope
aas
stc
sar
mov
push
mov
imul
rorl
xchg
dec
std
ret
jns
cli
mov
cwtl
std
and
mov
in
pop
dec
xor
je
jae
arpl
stos
and
fldl
in
hlt
leave
mov
cmp
dec
jg
stc
xchg
neg
mov
rcrl
jne
outsb
into
adc
repz
call
inc
rol
cmc
push
sbb
dec
sub
nop
leave
out
mov
leave
cmc
xchg
rcr
rcl
test
sbb
in
scas
mov
cmc
mov
pusha
leave
xor
shl
ss
or
mov
loopne
xor
push
dec
dec
mov
outsl
inc
xor
xchg
rcll
sbb
push
sahf
jne
stc
rcll
loope
leave
jne
loope
add
repz
shl
leave
rorl
dec
and
stos
sbb
call
lods
jne
cmc
cmc
roll
push
jno
lock
lret
cmp
mov
or
jecxz
rolb
jmp
xor
push
dec
add
pop
fmul
repnz
adc
lret
fadds
dec
leave
rolb
lds
cmp
loopne
and
sbb
xchg
loopne
clc
ret
out
pop
pusha
xchg
dec
loopne
sbb
adc
jne
pop
std
mov
dec
cmp
insb
or
dec
dec
adc
and
arpl
add
push
leave
mov
rol
cmc
push
sbb
icebp
inc
mov
mov
out
jmp
sbb
jmp
xchg
mov
inc
sahf
rol
xchg
shll
fmulp
push
test
mov
arpl
rol
lods
mov
cmp
xor
sub
jge
xor
sbb
rcl
roll
dec
popa
mov
mov
mov
mov
leave
jge
adc
mov
addl
adc
adc
out
sbb
sbb
xchg
mov
mov
mov
jmp
adc
and
addl
andl
xchg
xchg
gs
jmp
xchg
dec
fs
ret
xchg
test
xor
jb
icebp
shll
stc
jge
aad
repz
sub
mull
shll
mov
jmp
mov
out
cli
pop
in
and
loope
pop
ljmp
jge
daa
ljmp
and
jno
sar
repz
dec
leave
je
sti
cmp
roll
push
dec
mov
repz
cld
jl
enter
andl
cltd
and
les
repz
shll
pop
mov
ret
jno
flds
mov
bnd
or
hlt
mov
mov
shll
or
ret
jnp
xchg
popa
repz
shlb
icebp
rep
xor
sub
mov
mov
loopne
je
push
repz
and
roll
test
and
shll
adc
repz
fcos
pop
mov
stc
popa
shlb
and
cmp
dec
cs
push
rolb
icebp
inc
add
push
adc
imul
or
out
fdiv
clc
sub
cmp
sbb
mov
rolb
cmp
dec
shll
and
gs
jo
addr16
inc
inc
xor
addr16
sti
xchg
fnstenv
repz
and
mov
call
rcl
cli
in
loope
sub
repnz
loope
jecxz
in
loope
dec
adc
stc
repz
popa
jae
in
xchg
cltd
adc
call
ror
or
or
mov
xadd
inc
iret
push
leave
lds
repnz
or
and
xchg
cli
sbb
stc
fwait
adc
pop
leave
leave
loope
aam
mov
dec
dec
shll
push
jge
pop
dec
jno
pop
dec
xor
jns
adc
pop
cmp
sti
pop
enter
pop
or
loope
jno
jecxz
inc
loope
movb
test
roll
add
mov
in
imul
jp
adc
stc
and
adc
in
and
sbb
jns
add
pop
mov
add
jns
repz
mov
inc
js
les
jnp
mov
fsin
xchg
imul
les
jnp
mov
mov
xchg
stc
lock
push
ljmp
push
flds
and
sbb
fstps
add
or
hlt
add
fbld
aam
or
hlt
mov
shlb
push
fld
mulb
or
rol
xchg
or
inc
mov
cmp
std
sbb
and
hlt
add
add
lret
sbb
hlt
cmp
lds
lret
popa
xor
xchg
repnz
roll
jbe
mov
push
mov
fcomp
jbe
mov
xchg
mov
dec
and
xchg
pop
loop
ljmp
xor
mov
xchg
out
cmpb
inc
mov
cmp
jno
scas
push
into
ja
out
pop
xor
mov
jne
mov
icebp
mov
lods
pop
std
in
push
js
sahf
push
jmp
jo
pop
into
arpl
shlb
mov
lds
nop
std
cmp
repz
pop
sub
mov
mov
inc
fld
mov
inc
jne
mov
adc
adc
mov
int
popa
mov
fldenv
out
inc
mov
adc
mov
mov
dec
inc
push
cltd
rcrl
test
icebp
movswl
pusha
pop
repnz
andl
push
fsts
mov
ss
cmc
notb
shll
std
push
mov
cmc
imul
cmc
fmul
mov
shl
xchg
push
or
and
push
rcll
ret
test
xor
xchg
ret
mov
frstor
and
int3
cmc
pop
xchg
iret
div
jp
rol
cmc
sbb
aad
cmc
jmp
or
popa
mov
jns
lods
xor
test
cmc
push
rol
mov
in
test
cmc
in
dec
inc
push
xchg
call
lcall
xchg
rcl
cmc
cltd
icebp
aad
cmc
pusha
rcl
jns
inc
rolb
mov
rcl
xchg
jecxz
shlb
xlat
loope
adc
iret
dec
add
cmpsb
and
cmc
lret
popa
mov
nop
rol
jns
jno
add
vpsubq
or
mov
into
jge
dec
mov
rorl
push
pop
pop
dec
add
leave
aam
or
xchg
pop
fcomp
enter
aad
or
lcall
fildl
rcl
jmp
rol
aas
test
movsl
lock
int
imul
ror
clc
cmc
jecxz
dec
aad
loope
mov
fisttps
shl
cmc
sti
cli
dec
in
in
pop
push
ja
enter
jne
mov
std
inc
cld
shl
cmc
out
out
inc
inc
cmp
jle
loopne
or
mov
rcrb
pop
mov
mov
jo
xor
mov
mov
shll
xor
mov
sbb
repz
shrl
xor
sarb
mov
sarl
loope
sub
fsubrs
jno
ret
lcall
rcl
lret
jnp
jb
icebp
mov
popa
stc
shll
out
ficoml
and
ret
dec
sub
cmc
imul
fstpl
scas
mov
or
loopne
jno
cs
inc
outsl
xchg
movsl
mov
shrb
pop
shll
sub
test
jp
shll
cmp
nop
jno
push
leave
lahf
add
xorb
std
mov
mov
loop
into
mov
popa
and
jge
xor
push
jle
shll
lods
fstpl
sub
ficomps
add
pop
sbb
add
pop
push
leave
mov
stc
mov
lret
cli
mov
and
cmc
gs
cmp
mulb
jmp
aad
lds
lcall
pop
mov
push
adc
pop
mov
push
push
inc
push
mov
jecxz
mov
mov
loopne
mov
xor
arpl
aas
xor
pusha
mov
dec
or
cmp
xchg
ret
mov
out
scas
fistps
sub
fcompl
outsl
das
pop
pop
push
adc
add
sbb
mov
mov
mov
out
enter
mov
dec
or
cmp
mull
dec
or
cmp
fs
stos
xchg
test
mov
aam
les
push
pop
inc
pop
push
push
adc
add
xor
stc
jno
dec
dec
and
cld
icebp
pop
xor
mov
mov
mov
jne
fdiv
leave
rcl
ror
rolb
mov
dec
orl
fxtract
imulb
xorl
sub
imul
jge
add
subl
pop
fnstenv
and
fimull
inc
gs
add
jmp
sub
jmp
std
mov
dec
xchg
mov
sarl
jmp
ljmp
clc
and
je
mov
push
shrl
dec
xor
mov
cli
jmp
mov
pop
test
jmp
loope
hlt
les
jmp
mov
xchg
rolb
rcl
enter
push
shll
pop
shlb
sub
or
lea
or
or
mov
ffreep
rcr
rclb
push
ret
mov
jno
loope
xor
mov
cmp
jle
rorl
imul
int
xor
popa
mov
cmpsl
sarb
sarb
mov
imul
mov
arpl
gs
adc
xor
fdivl
mov
jge
sub
fcmovb
cmp
lock
mulb
adc
mov
subb
rorb
testl
mov
pop
dec
lret
in
shrl
mov
mov
aam
out
inc
mov
lock
adc
test
jg
add
xor
mov
ucomiss
push
and
adc
hlt
cmp
cmpsb
cli
mov
cmp
jmp
sub
gs
loope
and
lret
adc
stos
add
pop
fmuls
ja
mov
rclb
fisubrl
push
xchg
mov
xchg
pop
inc
rorl
ret
fdivs
push
std
dec
out
fsubrs
test
imul
sub
stos
mov
pslld
call
mov
add
dec
fdecstp
inc
and
jns
inc
stc
iret
into
clc
inc
jne
sti
roll
pop
cli
fprem1
enter
xor
mov
add
shll
dec
dec
mov
mov
into
jecxz
in
hlt
rorl
idivb
lret
mov
jnp
inc
xor
mov
inc
push
mov
rorb
dec
aas
add
repnz
mov
xchg
fiadds
or
push
inc
xchg
inc
mov
adc
lret
flds
daa
mov
sub
sbb
rcl
and
sbb
mov
lock
sarl
call
ret
test
or
in
or
shl
sub
cmc
cli
jmp
lds
call
daa
xchg
sub
adc
pop
testb
push
push
loopne
sbb
adc
mov
and
std
mov
and
and
leave
in
sbb
inc
xor
js
movsb
pop
inc
leave
insl
rcr
addr16
inc
mov
mov
dec
clc
icebp
aam
icebp
xlat
push
dec
cmp
mov
mov
cmc
mov
leave
add
in
mov
leave
rorl
ret
adc
pop
or
jecxz
mov
out
imul
out
mov
in
out
adc
sbb
inc
xchg
aaa
adc
inc
gs
test
fyl2xp1
icebp
inc
mov
andl
dec
dec
mov
lea
mov
loope
inc
cwtl
mov
xor
cmp
dec
or
mov
mov
mov
jne
shlb
sub
stc
fs
and
loopne
mov
inc
imul
mov
shll
loope
jne
or
or
out
mov
hlt
dec
jbe
jae
rcl
out
rorl
sbb
mov
negl
lea
test
popa
dec
inc
pusha
or
daa
or
int3
adc
and
adc
out
stc
fisttps
push
xor
or
leave
jae
pop
neg
inc
xorl
imul
sub
aad
f2xm1
or
or
out
jns
sahf
xchg
call
into
mov
aas
repnz
jecxz
inc
out
cli
dec
pop
mov
rol
or
mov
sti
xchg
loope
mov
rcr
xchg
cmpsb
sbb
les
test
sbb
adc
jo
sub
ret
out
fiadds
xchg
fsts
mov
rol
xor
movsb
xor
sbb
rcr
rcll
testb
jmp
lods
rcr
xchg
out
or
push
adc
xchg
movsb
inc
in
das
je
xchg
popa
mov
add
cmpsb
jo
in
mov
das
mov
pop
cmp
sub
in
loop
int
test
sti
sub
rcll
or
or
pop
sbb
int3
push
stos
sti
movsb
neg
stc
jg
cmp
stc
vmwrite
dec
das
dec
sub
xchg
and
inc
cmc
mov
adc
fstps
push
cld
sub
mov
lds
rcrl
mov
or
pop
lahf
add
and
lods
ljmp
das
and
push
or
ja
sbb
popa
xchg
rolb
cmp
push
stc
jg
sub
cs
mov
or
cmc
xchg
adc
inc
fisttpll
scas
in
adc
aam
mov
pop
and
hlt
cmp
push
or
xchg
mov
sub
push
adc
stc
leave
fnstsw
roll
jge
add
pop
ret
lds
mov
mov
cmp
sbb
aad
int
dec
and
pop
rcrl
call
add
stos
cmp
add
and
mov
iret
inc
mov
shll
jne
lods
xchg
and
jge
sbb
mov
cmc
xchg
movsl
sti
jns
repz
lret
mov
leave
adc
or
and
test
insb
push
xor
adc
pop
stc
dec
xchg
mul
imul
dec
or
imulb
test
faddl
fmuls
jns
adc
shrl
repz
mov
shrl
ret
xor
inc
js
dec
cmp
or
pop
lret
inc
push
jge
psadbw
and
sub
add
lods
in
rcl
dec
lock
mov
adc
pop
out
mov
sbb
or
jae
pop
mov
cmpb
roll
cmp
icebp
push
leave
notl
fwait
push
jecxz
xchg
enter
dec
mov
sarb
jmp
sarb
mov
in
repnz
pop
push
add
stc
jecxz
loopne
aad
popa
xor
pop
ret
rorl
cmpsl
loope
jno
rol
mov
lock
xchg
sub
shrl
or
lock
inc
mov
icebp
les
out
fstps
sbbb
call
sbb
mul
test
pop
pop
xlat
inc
inc
popf
pop
cltd
add
xchg
movsl
pop
inc
sbb
jne
int
imul
shlb
adc
insl
xor
leave
xor
pop
adc
aaa
lcall
enter
adc
pop
inc
push
inc
sub
and
sub
clc
or
dec
in
jmp
or
sbb
movsb
stc
jno
sub
in
jbe
pusha
cmp
jno
mov
mov
imul
add
and
loope
xor
add
inc
mov
jge
rcr
push
shl
push
leave
mov
jmp
out
imul
movsl
jae
pop
mov
pop
ret
sti
push
mov
pop
and
in
xchg
add
xor
push
sbb
cmp
cmc
sbb
dec
cmp
inc
xchg
cmp
scas
mull
sub
sub
imul
aad
dec
mov
mov
mov
ret
shrl
or
in
mov
in
leave
lods
gs
lret
and
std
sbb
pop
jl
mov
and
aad
shrl
loope
roll
popa
mov
adc
mov
iret
mov
enter
adc
leave
or
push
and
and
shlb
adcl
dec
enter
and
outsl
lds
loopne
call
or
das
and
lods
xchg
inc
jmp
repnz
xor
shl
cli
sub
and
mov
adc
add
cmc
push
add
push
ja
push
adc
push
push
pusha
jb
call
int
clc
cltd
dec
orl
add
push
add
push
push
pop
push
mov
add
jecxz
mov
jne
cltd
and
push
jmp
into
sub
and
sbb
repz
shll
pop
rorl
xchg
sbb
stc
and
mov
pop
lds
jl
push
mov
or
push
mov
push
jg
stos
cltd
push
sbb
mov
xor
imul
andl
test
stc
dec
xor
icebp
xchg
and
add
dec
push
sbb
lods
je
push
insl
icebp
outsb
pusha
jae
sub
loope
cltd
shr
fmuls
enter
cmc
gs
dec
push
roll
and
adc
xchg
cmc
hlt
jbe
pushf
in
xlat
iret
mov
add
lods
or
lock
int
mov
adc
adcl
fidivl
rcrl
and
xor
mov
mov
add
dec
bnd
cmp
jmp
mov
xor
and
sub
xor
ljmp
rol
dec
repz
aad
adc
shll
hlt
inc
and
hlt
loop
jbe
daa
loop
loope
ror
repnz
shr
cmc
std
cmp
ret
push
aad
push
push
mov
icebp
div
dec
or
xor
cli
sahf
xchg
fnstenv
xlat
shll
add
add
and
lret
sub
call
movsb
sub
popa
inc
js
andl
mov
mov
fimuls
xor
int
int
enter
dec
mov
add
in
leave
cmc
sub
popf
rcl
mov
dec
xchg
or
imul
and
jge
inc
sarl
and
adc
add
les
ljmp
leave
in
mov
std
dec
cltd
aam
pop
addb
dec
gs
bnd
mov
test
or
or
jnp
or
fnstcw
cmpl
in
loopne
push
dec
loope
insl
roll
pop
inc
xchg
insb
rol
enter
xlat
cmc
fists
test
out
pop
lds
jmp
dec
cli
sahf
in
inc
jno
pop
in
daa
loope
sbb
cltd
push
das
sti
jmp
sub
sub
add
div
ret
jl
lds
fisttps
or
sbb
xlat
lret
notl
xlat
shl
fimull
cld
sti
das
cmpsb
mov
xor
xchg
pusha
mov
mov
or
data16
and
xchg
cs
leave
xchg
daa
jbe
dec
cmp
das
adc
jg
outsb
cmp
pop
mov
cwtl
adc
xor
pushf
hlt
int
mov
mov
dec
add
lods
popa
sub
mov
imul
mov
icebp
flds
push
mov
pop
jno
shll
and
dec
push
or
int
push
cli
mov
inc
rol
clc
cmc
mov
dec
mov
out
leave
or
inc
rcl
push
icebp
out
xor
cmp
insl
dec
loope
leave
jns
rcl
sarb
ret
jno
sub
jne
inc
rolb
test
popa
xor
imul
sbb
push
outsl
rcrl
mov
push
dec
leave
cmp
adc
or
pop
cmp
add
dec
aas
push
rorb
cmc
mov
jne
shrl
fmul
inc
dec
or
cwtl
shl
sub
and
dec
testl
int
mov
pop
insb
jne
jae
mov
push
add
mov
ret
pop
mov
aad
or
loope
int
pop
rcll
pop
xor
shlb
icebp
fisubs
fdivrs
stc
push
icebp
pop
and
and
dec
loopne
rcll
stc
adc
loopne
lock
xor
enter
inc
or
or
xchg
rcr
loop
ror
jecxz
clc
enter
mov
adc
mov
cs
aad
add
sbb
cmp
enter
rorb
fcoms
insl
mov
cmp
xor
dec
rcrl
dec
xlat
cltd
insl
jmp
std
sbb
popf
es
push
mov
cs
shr
cmp
add
or
sbb
das
sub
mov
add
fstp
or
mov
sub
xchg
sbb
hlt
push
in
int
ljmp
inc
xchg
pop
scas
cmp
sub
loope
bswap
ret
pop
mov
sub
add
pop
int3
mov
rcll
xor
cli
pop
es
xchg
pop
loope
dec
cmp
jns
cltd
leave
pop
or
ror
ret
gs
enter
jecxz
push
enter
xor
or
enter
insb
loope
dec
and
cmp
mov
enter
dec
cmp
js
inc
loop
sbb
cli
ror
or
and
pop
cltd
inc
mov
ret
dec
or
repz
cmp
adc
push
xor
mov
testb
pushf
fdivrl
popf
std
push
daa
repnz
aam
inc
mov
xchg
or
or
loopne
int
das
es
sub
frstor
sti
mov
cmp
repnz
adc
jmp
mov
cmc
loop
add
in
int
incb
and
call
arpl
and
fisubrl
add
pushf
popa
lods
mov
jae
and
in
sbb
jae
adc
in
clc
ljmp
push
gs
f2xm1
fldenv
add
add
cwtl
in
ffree
loop
out
xor
adc
add
out
fisttpll
sub
lahf
cmp
sti
xchg
loop
mov
addl
push
pushf
insl
push
ss
push
jbe
dec
add
and
mov
fdivr
in
rol
stc
mov
enter
aas
shrl
jge
cltd
rol
ds
in
cmp
add
ret
sub
xchg
xlat
f2xm1
adc
movsl
push
fnsave
ds
flds
pop
adc
xchg
das
aad
lds
dec
mov
push
shl
leave
add
and
dec
or
mov
jmp
imul
test
cmpsb
sbb
call
test
hlt
int
xor
imul
xchg
cli
adcb
test
enter
out
divb
shlb
jne
xchg
stc
sti
repnz
cmp
int
cmp
lods
xor
test
es
loope
jno
mov
add
sarb
and
scas
test
add
jg
cmpb
jmp
jae
mov
mov
jae
shlb
push
mov
push
adc
leave
div
les
cmp
ror
loopne
gs
lods
imull
cs
mov
push
adc
shl
pop
in
add
imul
jb
cmpsb
das
lret
popa
int3
cmp
lods
and
and
fsts
call
roll
in
sub
sub
leave
popa
addr16
loopne
push
leave
nop
repnz
xor
xor
shr
fnstsw
in
fwait
sub
dec
in
dec
sub
and
out
je
inc
jmp
in
push
sub
leave
idiv
loop
loopne
push
mov
pop
fisttpll
mov
psubusw
popa
fisubl
imul
mov
call
mov
stos
mov
mov
inc
mov
xor
loope
cltd
jb
jmp
leave
xchg
out
mov
sarb
sub
cmp
std
sahf
ja
mov
jae
xor
add
push
xor
cmpsb
jp
add
scas
sbb
call
stc
sbb
or
fisubrs
outsb
leave
and
loopne
add
ds
inc
xor
inc
insl
dec
pushf
rclb
xchg
jb
rorb
nop
fprem1
aaa
add
test
ds
sbb
outsl
in
enter
sub
roll
shrl
mov
mov
mov
divb
xor
lret
sarb
push
dec
lahf
push
nop
cwtl
sub
js
rorb
xorl
mov
mov
dec
cmc
es
mov
rcr
jmp
inc
cmp
mov
lcall
std
pop
addr16
mov
fcmovnb
xor
dec
cmp
fldcw
inc
ret
dec
add
add
jle
mov
out
loope
xchg
xchg
enter
push
shl
out
repz
inc
rol
shll
add
xor
jo
sti
jge
xchg
lcall
mov
add
repz
inc
mov
insl
shll
and
shl
mov
rcr
sbb
mov
pop
test
mov
mov
inc
mov
mov
xchg
mov
ror
mov
aas
repnz
fiadds
mov
rol
mov
mov
aas
repnz
mov
rcr
mov
loope
cmpsl
push
test
fstps
mov
mov
mov
inc
mov
mov
insl
xor
shll
sbb
jns
lret
and
dec
iret
cmp
xor
sti
cmp
and
shlb
cmc
push
ljmp
jns
cmc
test
popf
lret
or
xorl
sbb
outsb
rclb
or
sbb
iret
xchg
mov
mov
leave
inc
fstps
loope
push
cmp
inc
lds
call
add
mov
mov
imul
rolb
add
cmc
mov
push
mov
inc
into
xor
cmc
or
cltd
sidtl
xor
mov
xchg
cltd
cmp
cmc
test
inc
icebp
mov
repz
cmp
cmc
lds
lds
cmp
push
or
push
xchg
and
negb
xor
icebp
jae
inc
std
xor
jmp
add
sub
cmc
add
sbb
inc
jns
insb
sbb
pop
add
mov
fcomip
or
rcrl
mov
sbb
dec
loop
push
sub
enter
cmc
pop
cmp
or
std
shlb
or
push
daa
add
mov
adcl
je
sub
mov
add
imul
ljmp
inc
lds
xchg
mov
and
inc
inc
cmc
ljmp
stc
sbb
jns
insb
add
add
ud0
les
gs
or
cli
sbb
xchg
pop
idivb
pop
lds
sbb
sar
pop
sbb
or
adc
daa
repz
jge
dec
push
or
cmp
xlat
test
pop
xor
mov
incl
test
cmc
lds
lds
dec
mov
popa
or
mov
cltd
lods
loopne
ss
jmp
mov
mov
jmp
shrb
nop
add
dec
sub
fwait
mov
cmp
vsubpd
inc
push
jge
dec
push
cmc
add
cwtl
mov
cmp
cmp
pop
leave
push
and
add
add
push
mov
and
add
cmc
sbbl
sidtl
mov
rcrb
dec
shll
and
pop
dec
shl
add
or
mov
mov
inc
aas
leave
shlb
pop
add
cwtl
mov
leave
pop
fcomip
or
pop
fnstcw
jns
insb
add
add
fnstcw
sub
lock
ficoms
jno
lds
pop
jns
negb
cmc
call
mov
mov
pop
dec
jge
mov
ficompl
icebp
or
or
mov
dec
loope
inc
push
pop
pop
and
push
jno
cmpl
rol
pop
mov
vpextrw
lds
or
lahf
dec
add
add
or
push
testl
lds
push
mov
jo
sub
dec
rcrl
lmsw
push
das
rolb
test
dec
mov
and
push
sub
movsl
lret
cmc
mov
push
icebp
mov
inc
push
outsb
rclb
icebp
mov
lds
imul
ljmp
lds
jne
push
cli
dec
popa
adc
lds
popa
inc
mov
inc
cmc
call
xlat
popa
cmp
push
push
popa
je
sub
mov
and
xchg
sidtl
popa
dec
push
cmc
add
ret
ror
jns
leave
add
leave
into
xor
leave
push
sbb
push
pop
sbb
test
mov
ljmp
lds
dec
push
xchg
popf
pop
push
add
pop
adc
leave
fmulp
leave
enter
enter
rcll
or
lods
mov
sar
push
mov
adc
daa
cmp
mov
add
lds
pop
add
jno
xchg
dec
mov
cmpsb
mov
sub
mov
rcll
jns
mov
sbb
add
push
inc
cmc
call
add
push
push
and
jns
sub
cmc
mov
call
push
call
push
inc
cmc
call
out
fidivs
sbb
cmc
add
push
mov
imul
push
imul
orl
ret
add
lds
lds
push
out
les
add
cmc
dec
lds
ret
lcall
add
lret
rclb
dec
stc
ror
aaa
lds
roll
pusha
icebp
lret
mov
and
or
dec
shlb
lds
lds
inc
lret
push
jns
push
or
xor
sbb
icebp
or
jno
mov
push
icebp
push
add
ret
ror
inc
dec
int
adc
and
cli
sub
imul
repnz
rol
xchg
lret
cmc
rol
adc
cli
add
or
dec
push
sidtl
mov
lds
or
shr
add
cmc
les
dec
int3
mov
pushl
pop
jns
fldcw
iret
cmc
inc
lds
add
leave
dec
sub
fwait
mov
cmp
lds
jns
popa
mov
faddp
andl
cmp
rcrl
vpaddw
push
iret
push
mov
iret
jmp
sub
add
ljmp
lds
push
lcall
fldl
mov
cmp
aad
add
leave
insb
cmpsl
dec
add
vmulps
sbb
icebp
test
mov
mov
xor
lds
leave
into
inc
loope
jge
and
mov
arpl
mov
mov
add
sub
lret
cmc
or
push
mov
and
pop
dec
lds
push
mov
fdivp
sbb
push
jmp
jns
dec
add
shl
xor
add
fmul
imul
jne
int
sub
popa
leave
add
cmc
gs
icebp
pop
arpl
inc
xchg
mov
popf
rolb
leave
adc
fld
in
loope
mull
loope
jmp
cmp
fimull
mov
mov
imul
adc
push
sub
jns
out
leave
xchg
popa
mov
push
icebp
and
shll
mov
cltd
fidivl
pusha
cmp
xchg
jae
pusha
out
mov
stc
imul
loopne
xchg
negb
les
jmp
add
shr
cmp
into
rolb
cmp
sarb
cmp
rclb
sbb
mov
cmp
inc
push
cmp
ljmp
leave
or
jmp
adc
jecxz
int
dec
shll
xor
dec
cmc
pop
mov
push
jge
jbe
inc
adc
add
mov
gs
jae
inc
loopne
xchg
fldl
stc
loope
loope
jmp
inc
add
mov
push
add
fildll
ljmp
fsts
jecxz
pop
pop
stc
push
push
inc
rorb
or
ror
jns
andb
mov
popf
jg
rcrl
fs
xchg
or
icebp
mov
ficompl
inc
stc
and
insb
jmp
std
jmp
loope
add
jmp
mov
mov
or
dec
aas
rcll
rorl
dec
loope
mull
stc
pause
popa
inc
lret
nop
add
xor
mull
sbbl
mov
mov
xchg
addr16
xchg
rol
data16
fisttpll
dec
mov
add
rcrl
mov
pop
ret
testl
mov
cmp
mov
mov
sbbl
ss
mov
rcr
jns
or
fs
cmp
out
call
rorl
inc
or
and
sarl
inc
jns
repz
cmpsl
mov
xor
mov
mov
js
call
shlb
rcrl
out
loope
jns
inc
add
mov
inc
cmp
fimull
sbb
add
adc
pop
leave
test
jno
push
or
loope
lret
rolb
dec
pop
jge
cltd
dec
or
roll
mov
xchg
sub
and
cmp
jp
inc
fstpl
xor
popa
jmp
adcl
mov
jns
mov
dec
jmp
out
icebp
push
leave
dec
divb
pop
push
jno
xor
insl
xor
hlt
dec
mov
inc
pop
stc
rol
jns
inc
popa
mov
ja
jne
test
adc
cmc
mov
mov
int
adc
fcmovnbe
cmc
leave
jmp
out
lret
cmc
cmc
lret
ret
int
adc
int3
inc
das
ror
cmc
cmp
rcl
or
inc
push
rol
cmc
gs
ret
or
inc
lahf
rol
cmc
lods
dec
mov
pop
mov
or
inc
fcmovnbe
aad
dec
ffree
icebp
aad
or
inc
sbb
sbb
inc
pop
adc
jne
shl
xchg
popa
pop
jmp
inc
orl
movsl
dec
mov
jbe
dec
jbe
dec
jbe
dec
jbe
dec
jbe
dec
jbe
dec
jbe
dec
jbe
dec
jbe
dec
jbe
dec
jbe
dec
jbe
dec
jbe
dec
jbe
dec
jbe
dec
jbe
dec
jbe
dec
jbe
dec
jae
pop
loopne
xchg
loopne
xchg
loopne
xchg
loopne
xchg
loopne
xchg
loopne
xchg
loopne
xchg
loopne
xchg
loopne
xchg
in
rcrb
ret
push
clc
outsl
les
dec
jle
rolb
sub
imul
mov
mov
fsubp
in
lock
add
push
in
icebp
lea
lock
cvtpi2ps
add
divl
rcrl
or
insb
jmp
sar
inc
icebp
mov
dec
mov
icebp
arpl
inc
sub
andl
call
jo
lds
arpl
out
andl
rcll
dec
popa
jo
leave
std
pause
loope
sub
push
xchg
jo
mov
jo
rolb
ljmp
jae
mov
cmp
jg
mov
adc
dec
pop
leave
lret
mov
rcr
rcl
fucomip
rcr
loopne
jns
pop
adc
enter
dec
push
icebp
push
outsb
dec
pusha
mov
xchg
loopne
xchg
loopne
xchg
loopne
or
icebp
loope
dec
ret
ret
test
inc
cmc
les
shl
rorb
ror
jb
and
xchg
xor
add
sbb
adc
ljmp
roll
insl
push
dec
imulb
addr16
jg
leave
mov
inc
test
scas
jne
adc
test
sub
inc
push
pop
icebp
xchg
loopne
xchg
loopne
or
ret
adc
adc
inc
xor
push
aad
or
adc
jecxz
je
mov
addl
xchg
dec
enter
arpl
mov
push
mov
xchg
flds
test
sbb
cmp
stc
sbb
jns
inc
leave
mov
xchg
cmp
xor
pop
mov
adc
popa
inc
jns
jno
stc
test
mov
stc
test
je
mov
icebp
insl
rorl
rcrl
jns
repnz
sub
add
inc
cmp
ss
push
jge
dec
cmc
mov
dec
xchg
jns
andl
clc
leave
xor
push
pop
sbb
leave
call
shll
inc
or
dec
mov
adc
inc
jmp
fcomip
andl
imul
std
and
xchg
mov
test
xchg
cmp
push
push
mov
dec
pop
shr
mov
dec
or
aam
mov
and
dec
inc
jecxz
rorb
lds
mov
push
sarl
dec
add
cmp
adc
aaa
push
sub
icebp
repz
je
jecxz
push
clc
outsl
fnstsw
std
mov
sub
call
and
push
pop
dec
popa
lahf
rcl
push
fucomip
rcr
loop
rcr
or
sbb
mov
push
leave
add
or
aaa
or
push
push
js
je
sub
ljmp
rcll
sub
test
int3
jmp
sarl
test
rorl
aad
or
arpl
call
mov
adc
ljmp
dec
inc
push
adc
jecxz
test
pop
leave
add
mulb
inc
jmp
pop
loope
ror
mov
insl
sub
adc
icebp
mov
xchg
or
mov
loope
add
jmp
xor
dec
xchg
fimull
jecxz
clc
jg
mov
mov
icebp
jne
rcll
mov
rep
adc
dec
rclb
xor
jne
out
shl
xchg
test
rcl
rcr
xchg
xchg
rcrl
or
icebp
cld
mov
or
pop
stc
je
mov
repz
popa
popf
aam
imul
mov
xchg
xor
and
fldenv
fsts
jae
dec
fst
adc
lahf
rclb
xchg
pop
sub
shlb
push
mov
stc
insl
rorl
push
mov
jmp
cmp
pusha
mov
sbbl
sub
sub
adc
sbb
sub
jno
inc
loope
popa
push
jmp
ss
xchg
jge
ss
leave
sbbb
cs
inc
mov
sbb
mov
mov
or
push
sbb
rcll
jne
cmp
jno
inc
xchg
jge
dec
inc
cmp
dec
push
sub
ljmp
or
mov
pop
rcr
push
aam
inc
pusha
xchg
loopne
xchg
adcb
jbe
pop
mov
xchg
loopne
xchg
add
inc
jne
mov
ret
xchg
inc
cmp
lds
jmp
ftst
mov
or
adc
mov
dec
mov
push
mov
jmp
mov
jne
lea
xchg
xchg
jne
lods
jne
mov
mov
cmc
ror
dec
rol
fcom
aad
shl
aam
dec
xlat
ret
sti
aad
or
inc
jmp
sbb
ret
pop
aad
or
inc
in
sarl
out
ret
inc
aad
or
shrl
loopne
dec
inc
jns
cmc
xchg
subb
subl
cmp
cmp
rcr
call
fcomip
rcr
add
fists
rcr
cs
cmp
fisttps
fistps
fists
fbld
jb
filds
fildll
enter
shll
loope
test
test
sbb
mov
shlb
popa
test
icebp
adc
jno
push
mov
xchg
stc
inc
mov
sbb
mov
jmp
rolb
or
and
cmp
pop
dec
xchg
popa
std
jno
xchg
cmp
std
shl
nop
shll
dec
stc
fimull
adc
cltd
and
mov
sbb
push
idiv
and
std
cmp
std
dec
idiv
inc
idiv
pop
idiv
push
std
jle
std
mov
std
test
call
stc
mov
inc
sbb
xchg
inc
sub
xchg
inc
cmp
xchg
pusha
dec
in
xchg
pusha
pop
stc
xchg
pusha
imul
xchg
pusha
mov
xchg
mov
out
xor
dec
dec
and
std
div
fscale
push
or
testl
rorl
xchg
xchg
sbb
test
cmp
cmp
rcll
dec
xchg
jbe
dec
and
jae
out
loope
mov
ret
insl
xor
fs
add
aaa
leave
imulb
shll
cmc
mov
dec
add
call
icebp
mov
xchg
jno
and
mov
test
mov
dec
jne
dec
leave
ljmp
leave
je
loope
dec
xchg
loope
stc
fcomip
dec
mov
sarb
and
cmp
ret
test
pop
push
mov
aaa
leave
add
jne
lcall
mov
adc
insl
mov
jge
packuswb
loope
sbb
les
xchg
inc
rorl
or
jmp
push
mov
popf
jns
or
fs
jp
xchg
ja
push
xorb
mov
icebp
mov
mov
sqrtps
mov
rorl
jmp
into
rcr
jns
dec
cmc
mov
dec
mov
sbb
pop
hlt
xor
cs
icebp
icebp
and
pushf
lcall
repnz
loopne
mov
pop
adc
in
mov
xor
imul
ljmp
inc
inc
lds
sbb
push
dec
sarl
sbb
mov
stc
lahf
lods
cmp
dec
cmp
xor
xchg
ds
mov
push
lahf
pop
dec
xchg
dec
rcrl
std
rcl
pop
shll
testb
les
bswap
sahf
mov
push
repnz
xchg
xor
shl
dec
adc
jns
push
and
jmp
cmp
pusha
notb
iret
or
mov
jns
cmp
andl
adc
mov
jmp
sbb
pop
xor
sub
outsl
cs
mov
or
movsl
xchg
dec
pop
shl
adc
mov
shll
shl
popf
ss
dec
das
ret
xor
mov
nop
popf
rclb
test
mov
lahf
repnz
mov
lahf
xchg
js
xchg
mov
jmp
mov
ret
inc
loope
icebp
push
sbb
xchg
and
ss
loope
insl
xor
sbb
dec
add
mov
divb
mov
sarb
xchg
or
clc
mov
icebp
jne
jnp
jmp
mov
add
stc
std
sbb
clc
mov
loope
and
sbb
mov
mov
popa
lahf
push
popa
xor
jns
inc
jno
mov
sbb
sbb
xchg
dec
icebp
fimull
sub
or
add
adc
push
cmp
or
rorb
dec
mov
test
sarb
shll
xor
neg
mov
fyl2x
loope
outsl
popa
add
lcall
mov
mov
xchg
js
jge
mov
xchg
push
jno
sarl
xchg
mov
xchg
sub
popa
ret
push
popf
dec
test
icebp
sarl
jge
or
mov
pusha
sub
stc
jne
mov
rclb
fdivs
imul
cltd
pop
rol
xor
dec
rol
pop
cmc
sarl
js
insl
mov
leave
std
test
dec
fsts
mov
mov
int3
jl
fcmovb
dec
call
dec
hlt
ret
std
add
std
adc
std
cs
cmp
std
dec
idiv
pop
idiv
push
sbb
fidivl
jne
clc
mov
loope
xchg
xchg
stos
add
std
cmpsl
jg
sarl
mov
dec
jae
jg
dec
pop
or
arpl
ljmp
stc
shlb
cmp
dec
push
dec
filds
push
mov
stc
sbb
sub
mov
jge
push
jmp
mulb
jne
jle
rcrl
mov
fsts
xor
add
fimull
xchg
dec
xchg
inc
and
mov
shrl
stc
sbb
mov
mov
sub
call
and
mov
or
rorb
fst
mov
push
add
jns
icebp
divl
or
inc
add
mov
pop
add
sub
jnp
stos
and
imul
lea
loop
mov
stos
dec
xchg
jo
stos
dec
xchg
jo
stos
dec
xchg
jo
stos
dec
xchg
jo
lods
dec
xchg
jo
cmp
loope
sbb
leave
leave
jns
jno
mov
mov
add
mov
sub
shll
imul
js
je
sub
shl
xor
mov
stc
rol
lods
and
dec
repnz
rcrb
push
mov
inc
xor
lds
xchg
jae
or
lahf
xlat
sub
dec
pusha
cmp
test
mov
enter
test
or
popf
mov
fldcw
dec
fld
cld
mov
loope
icebp
xchg
loope
cmp
movsl
sub
shlb
inc
cmp
mov
inc
popa
jge
dec
add
rcll
adc
mov
lahf
sarb
repnz
call
jmp
lret
jne
test
sbb
std
pop
stc
mov
dec
jae
jne
test
add
sbb
enter
mov
mov
and
add
leave
push
fisttpll
testb
inc
xor
mov
adc
sub
je
xchg
dec
or
mov
mov
inc
jmp
xchg
shll
in
aad
or
xchg
repnz
clc
sbb
int
adc
mov
xchg
xor
roll
and
mov
jns
testb
ljmp
dec
cmp
test
xchg
mov
loopne
cli
or
rcrb
cmp
lds
cmp
dec
loope
and
sbb
xchg
inc
and
loope
xchg
mov
rol
mov
cltd
push
gs
xchg
and
scas
jmp
idivb
sbb
insl
shl
std
fincstp
std
shl
std
out
idiv
clc
or
dec
cmc
ret
inc
add
dec
add
loope
cltd
lahf
negb
inc
js
leave
mull
sbb
cltd
std
xchg
sbb
inc
or
and
cmp
rcl
dec
jmp
mov
stc
icebp
and
mov
adc
mov
test
xchg
les
adcl
flds
jno
xchg
loope
hlt
aam
and
movsl
fidivl
mov
imul
cmp
insl
jno
mov
xchg
push
sbb
cmpsb
mov
jne
cs
in
mov
rcl
loope
jmp
add
inc
sbb
dec
repnz
imul
rolb
jne
add
xor
test
leave
add
les
icebp
lods
pop
insb
rcll
int
jmp
add
sub
jl
rolb
dec
pop
mov
xchg
das
and
mov
dec
cmpsb
popf
rol
mov
fucomp
mov
in
inc
in
arpl
out
or
mov
mov
mov
pop
cmp
fimull
mov
inc
fimull
mov
mov
jae
mov
mul
mov
mov
push
adc
je
sub
or
mov
mov
mov
adc
sub
pop
jbe
dec
jmp
add
xor
sub
sub
or
mov
sbb
iret
shlb
jno
rcrb
cwtl
or
out
inc
mov
pop
call
mov
lret
jne
shlb
popa
and
xchg
cltd
cmp
ss
leave
mov
mov
loope
arpl
stc
inc
mov
stc
adc
lea
xchg
push
mov
jns
loope
mov
xorl
mov
sarb
mov
mov
rorb
cmp
sub
rcrb
cmp
inc
into
shrb
sarl
stc
dec
xchg
lea
mov
test
inc
popf
sub
in
dec
jmp
loope
jno
insl
mov
dec
jbe
shl
sbb
or
fnstenv
or
jmp
sub
ljmp
rcrb
inc
xlat
mov
xchg
sub
mov
leave
je
adc
sbb
xchg
add
xor
dec
pop
or
arpl
cmp
xor
sbb
movsl
shll
mov
cmp
int
jbe
push
jmp
shll
fcomip
stc
mov
adc
inc
adc
sbb
jge
push
jmp
ss
xchg
jge
ss
leave
mov
bnd
loope
add
xchg
movsl
mov
cmc
mov
shll
mov
mov
cmpl
std
fdiv
std
rorb
mov
mov
leave
stc
mov
in
inc
or
adc
mov
mov
mov
cmpsb
xor
xchg
or
rcrb
lods
xchg
pop
cs
and
dec
mov
fisttpll
leave
rolb
mov
subl
stc
stc
mov
adc
dec
mov
stc
arpl
inc
jmp
or
shr
sbb
sbb
inc
mov
dec
fnstenv
mov
icebp
mov
orb
mov
jne
orb
mov
pop
or
lock
test
lret
mov
mul
dec
ds
or
hlt
stc
mov
dec
je
std
cltd
push
insb
jmp
call
and
ficoms
sar
pop
xchg
ljmp
into
leave
cmp
jns
xchg
sub
rorb
inc
jno
pop
rcll
std
imul
dec
lods
dec
insl
neg
cmp
mov
loop
xor
xchg
mov
cltd
orb
and
roll
cmp
fimull
xchg
mov
sub
and
andl
jmp
leave
repnz
std
xlat
cpuid
mov
lret
test
sub
lret
std
cmc
mov
dec
inc
xor
or
icebp
or
dec
inc
stc
xchg
and
cmp
repz
dec
psubb
mov
repnz
sbb
cltd
jns
lock
in
cmp
loope
mov
sbb
out
jne
mov
ss
fsubrs
dec
fxch
sbb
jmp
int
repnz
mov
push
rolb
sbb
int
loope
mov
pop
mov
int
int3
ficoms
fstpl
push
add
sbb
jmp
mov
xor
or
arpl
inc
sbb
and
cmpsb
xor
inc
mov
or
insl
sbb
add
stc
arpl
sbb
xor
xor
pop
mov
ret
jmp
inc
test
or
cmpsl
inc
mov
sub
pop
stc
sub
pop
add
rorl
sarl
mov
xchg
add
xchg
xor
jl
insb
cmp
cmp
mov
icebp
sub
jne
and
xor
call
cli
add
dec
rcrl
das
xlat
sub
dec
cmp
mov
pop
aad
sub
dec
or
popa
lret
sub
negl
rol
insl
push
jmp
ss
sbb
inc
add
xor
popa
cmp
test
push
dec
loope
xchg
fimull
in
xchg
leave
xor
sub
mov
pop
loope
push
shlb
ret
jg
sub
ds
jns
mov
push
ret
mov
aas
hlt
std
rol
ds
rclb
vpextrw
lds
imul
or
lcall
adc
nop
shll
dec
mov
hlt
jns
fldcw
push
fstpl
testb
inc
cmp
jecxz
mov
leave
cmpsb
or
xchg
test
stc
pop
std
out
pop
mov
clc
sbb
into
rcll
mov
les
jbe
dec
lds
and
sbb
xchg
imul
mov
jmp
mov
cmp
std
loope
mov
xchg
int
shlb
dec
decb
cmp
and
shll
stc
mov
fisttps
cmc
xor
push
stc
xor
repnz
mov
enter
loope
cltd
and
lcall
jmp
out
ret
aad
mov
hlt
rcll
cmp
testb
cmp
lret
mov
cmp
lahf
cmc
add
in
xchg
jns
test
cmp
pop
mov
xchg
sub
or
jp
sarl
sbb
stc
mov
cli
mov
leave
jns
enter
hlt
pusha
sti
jo
and
pop
adc
mov
dec
ljmp
popa
xor
icebp
movsb
mov
outsl
xor
push
int3
loope
adc
dec
jecxz
fdivl
test
pop
iret
pop
pushf
out
aas
jno
les
pop
mov
pop
mov
outsb
and
mov
pop
notb
pop
mov
mov
push
mov
push
sbb
sub
mov
pop
add
cmpsl
fsubrl
or
jbe
mov
fistpll
lods
jb
cmpsl
daa
mov
addr16
mov
dec
es
loopne
adc
mov
insb
push
xor
lcall
push
pusha
fsubrs
sti
mov
jg
xor
in
xchg
pop
flds
push
mov
call
pushf
sub
xor
je
test
inc
cmp
cmp
jo
mov
push
fwait
mov
pop
pop
inc
ret
out
mov
xor
mov
into
pushf
mov
aam
or
or
test
jne
enter
or
inc
cmc
roll
dec
shrb
add
jb
push
dec
hlt
test
cld
dec
rcrl
xor
ret
pop
aad
or
inc
jmp
mov
dec
add
push
inc
dec
sarl
cmc
das
adc
aad
or
inc
iret
and
out
xor
or
pop
rorl
aas
and
aad
or
inc
rcl
shl
mov
xchg
ret
xchg
mov
jno
imul
cmc
inc
dec
dec
xor
sub
inc
stc
rcrl
mov
fcmovnbe
enter
or
aad
or
popa
shll
andl
arpl
pop
aad
or
inc
out
rcl
cmc
iret
sub
cmc
gs
stc
jp
ror
sbb
adc
push
aad
or
pop
roll
cmc
in
dec
fld
mov
mov
mov
or
dec
mov
fldl
lret
sarl
addr16
push
ret
inc
aad
or
inc
sbb
jecxz
fld
leave
shll
jne
imul
cmc
and
or
nop
fwait
mov
jae
imul
cmc
dec
aas
dec
das
ret
add
inc
jmp
fcomi
lret
movsl
icebp
aad
dec
add
pop
inc
xor
and
call
jecxz
xchg
cmc
ret
mov
mov
aad
or
push
roll
cmp
dec
sbb
add
in
xlat
inc
leave
shll
push
int
mov
popf
orl
or
aas
shll
cmc
adc
inc
in
rcr
cmc
rcl
push
in
dec
jae
insl
aad
or
pop
test
mov
add
add
aad
or
dec
sarl
loope
mov
sti
sbb
enter
aad
or
inc
ror
cmc
leave
mov
into
ret
push
aad
or
push
mov
jnp
mov
enter
cmc
js
dec
mov
lret
rcll
out
mov
push
inc
dec
jns
mov
cmpsl
sbb
push
or
jns
mov
lahf
or
rcr
cmc
jmp
dec
test
and
rorl
pop
insl
dec
jge
inc
jecxz
xor
das
xlat
rclb
mov
rcl
pop
adc
std
rclb
inc
das
shll
cmc
dec
push
dec
arpl
jae
orl
inc
mov
call
in
cmc
aad
or
inc
daa
shll
outsl
ret
jnp
mov
test
lock
enter
dec
test
loope
test
sti
and
dec
inc
ret
push
aad
or
ja
shlb
cmc
dec
aas
dec
adc
or
inc
shll
xchg
orl
xor
xchg
aad
or
arpl
push
cmc
inc
aas
dec
das
ret
add
out
fldl
fidivrl
xchg
cmc
cmpl
ret
pop
aad
or
inc
pop
roll
cmc
repz
fld
lret
aam
or
dec
std
clc
xor
ret
pop
aad
or
inc
inc
rcrl
outsl
jnp
mov
xchg
xchg
cmc
mov
leave
roll
dec
add
or
push
shll
jg
sub
mov
mov
pop
enter
aad
or
inc
das
shll
jg
or
in
adc
mov
dec
loop
arpl
arpl
mov
popf
inc
mov
ror
jmp
mov
mov
popa
loope
clc
loopne
jne
or
inc
shll
or
out
rorl
leave
pop
mov
xchg
jne
out
adc
test
inc
mov
and
dec
mov
movl
mov
mov
and
mov
adc
shll
push
cltd
jns
enter
movsl
enter
das
xlat
leave
dec
enter
dec
add
xlat
mov
psubusb
int
mov
mov
xchg
fxch
jmp
loope
loopne
enter
jno
mov
bound
nop
lcall
mov
cmc
out
mov
or
mov
xor
cltd
cmpsl
sub
push
adc
jo
pop
test
jp
jecxz
frndint
lret
dec
push
xchg
xor
xchg
sub
inc
xlat
mov
repz
cmp
insl
cmp
mov
daa
loope
in
fwait
mov
ss
xor
pop
add
mov
cld
jne
pop
mov
mov
nop
adcb
loope
mov
mov
iret
scas
xchg
lret
fnsave
inc
xchg
loopne
mov
cmp
pop
pop
nop
mov
mov
jbe
jae
shl
pop
lds
je
stc
cmp
out
cmpsl
inc
mov
push
shrb
xor
pop
mov
out
jae
lea
push
mov
orb
mov
inc
aad
add
fwait
iret
sbb
addr16
push
cmp
push
pop
mov
mov
pop
jns
mov
xor
aas
scas
jle
xchg
mov
insb
pop
mov
mov
cmp
test
cmc
cmpsb
int3
aad
lds
xchg
sbb
jo
movsb
add
push
daa
push
je
pop
mov
mov
dec
cmpl
dec
and
mov
lahf
and
xorb
push
mov
insb
jno
adc
inc
xor
mov
in
push
add
push
and
inc
lods
dec
scas
hlt
and
repnz
xchg
mov
mov
pop
jge
pop
mov
or
jecxz
mov
jmp
inc
adc
imul
movlps
popf
mov
cs
mov
pop
repz
mov
xlat
andb
jno
jns
ret
cmp
push
loope
movsb
mov
xchg
stc
je
adc
mov
sbbl
xchg
push
add
mov
xchg
aaa
adc
cwtl
repz
sub
mov
sbb
pop
and
loope
stc
cld
aas
mov
test
mov
mov
dec
mov
jmp
sub
or
testb
jno
jnp
lea
enter
pop
or
sub
mov
or
ja
lahf
mov
jo
frstor
add
mov
leave
mov
mov
adc
mov
pop
jb
or
sub
jp
addr16
shl
or
data16
movsl
push
aam
dec
xor
out
mov
push
and
push
sar
mov
or
dec
xchg
sbbl
mov
pop
xchg
sti
xor
sub
subb
pusha
sahf
inc
cmp
dec
pop
xchg
pop
sub
push
mov
mov
xchg
rcrl
cmp
lret
loop
pushf
xchg
and
mov
push
adc
push
add
inc
mov
stc
mov
jno
in
in
call
imul
xchg
mov
push
lods
inc
sub
leave
mov
leave
xor
mov
push
test
inc
cmpsl
pop
pop
stos
js
fs
add
aad
pop
mov
dec
repnz
loopne
clc
inc
lea
scas
sbb
sldt
movsl
fucomip
and
cmp
and
mov
push
jmp
mov
aaa
cmp
mov
test
clc
inc
idiv
dec
lods
std
adc
scas
mov
add
into
cs
cmp
hlt
call
mov
addr16
dec
mov
jno
scas
iret
mov
test
adc
xchg
sub
push
mov
pop
cmc
pop
jmp
js
inc
aad
cmpsb
shll
mov
pushf
ret
pop
xchg
mov
outsb
xor
mov
pop
adc
ret
push
mov
aas
mov
lea
jecxz
pop
xor
jns
cmp
mov
mov
adc
or
imul
xchg
bnd
and
mov
and
sarb
clc
and
dec
stc
cmpl
fwait
js
mov
loop
incl
mov
inc
lcall
xlat
mov
fstps
and
mov
sub
mov
pop
xor
stos
hlt
jbe
fists
lret
ss
jecxz
mov
aam
out
pop
mov
mov
leave
pop
xchg
pop
sbb
popf
inc
jns
jmp
inc
arpl
idiv
mov
jno
inc
cmp
jb
hlt
xchg
fistps
pop
dec
sbb
mov
sub
sub
and
mov
jns
add
jmp
fdivs
test
pop
sbb
xchg
loop
repz
xchg
dec
lea
mov
mov
orl
and
dec
cwtl
dec
mov
push
push
hlt
inc
mov
dec
lock
push
xchg
out
push
ficoml
cmpl
adc
lods
xor
xchg
push
mov
fisubrl
or
mov
mov
jno
bound
xor
sbb
xchg
jle
sub
rclb
and
jno
push
or
ds
lock
mov
and
scas
inc
mov
pop
fwait
nop
adc
xor
jnp
xchg
sub
push
cmp
je
adc
imul
sub
stos
cmp
mov
shll
std
sbb
mov
stos
mov
jmp
int3
std
mov
ds
or
out
pop
mov
ret
lea
sbb
sub
inc
sti
pop
pop
mov
xor
mov
mov
sbb
jb
mov
push
imul
cli
popa
sub
fs
test
push
or
xchg
bound
jg
das
mov
xlat
mov
mov
inc
mov
ficoms
mov
mov
sub
test
mov
mov
inc
shlb
sub
push
jg
lods
hlt
xor
mov
out
jge
push
lahf
ret
mov
arpl
and
push
pop
mov
jae
mov
mov
or
inc
push
mov
cli
mov
iret
fisttps
dec
leave
push
mov
mov
pop
ret
or
into
jl
pop
push
mov
lods
test
mov
dec
jg
push
adc
mov
call
pusha
mov
cltd
mov
test
cmc
sub
iret
add
pop
push
dec
stc
and
mov
lock
sbb
xor
js
mov
adc
adc
mov
mov
xchg
aaa
sub
out
mov
faddl
lock
test
lcall
addl
push
adc
and
stos
mov
mov
in
mov
dec
sub
jno
data16
dec
mov
cmp
ss
mov
mov
mov
xor
adc
and
or
dec
mov
popl
dec
jmp
cmp
jno
je
fidivs
pop
ljmp
mov
jo
fists
adc
cmp
in
iret
das
loop
xchg
sbb
test
mov
out
inc
push
mov
stos
jp
std
xor
data16
adc
jnp
and
stc
pop
and
aad
nop
fistl
xchg
xor
mov
pop
mov
clc
push
push
pop
pop
cltd
mov
cwtl
shll
push
xchg
push
mov
out
jae
inc
xchg
mov
mov
mov
mov
lret
or
les
xor
das
mov
mov
pop
int3
fstl
ficomps
loope
xchg
adc
xchg
xchg
mov
xor
imul
mov
movsl
push
and
sbb
mov
pop
add
dec
sbb
pushl
into
inc
xor
mov
imulb
dec
test
setno
xorl
lret
xchg
test
inc
push
loope
pop
bound
xchg
in
mov
mov
mov
push
pop
popf
fs
imul
pusha
dec
push
shrl
xor
inc
dec
inc
leave
mov
xor
and
in
and
mov
jp
add
into
gs
aad
jo
dec
push
jns
mov
in
jle
pop
add
dec
cwtl
sbb
inc
fs
rol
fadd
je
jecxz
pop
push
pop
jle
jge
or
mov
cmp
out
shlb
add
inc
mov
mov
lock
addr16
mov
xor
mov
fnsave
mov
mov
stos
es
shlb
push
mov
mov
mov
ja
cmp
mov
add
inc
ret
cld
push
jnp
mov
outsl
xor
pop
loopne
xchg
cwtl
scas
addr16
jge
sbbl
mov
push
mov
xchg
xor
iret
aas
fsubrl
add
movsl
lret
mov
pop
xor
jno
clc
shlb
sbb
pusha
xor
mov
mov
enter
addr16
repnz
ret
mov
jecxz
mov
mov
xchg
hlt
scas
fidivs
jp
jb
fbstp
mov
adc
jno
in
scas
push
ret
mov
inc
mov
outsb
mov
push
lret
leave
mov
rclb
or
sbb
mov
mov
shl
mov
fst
cmp
sbb
stos
mov
dec
xor
loopne
rclb
mov
movups
jmp
mov
test
stc
jns
fcoml
inc
adc
iret
shr
cmpxchg
dec
jg
push
lret
jge
or
xor
sub
mov
push
icebp
movsl
dec
adc
sub
xor
jle
test
inc
cmp
dec
lods
xor
stc
js
mov
cmpsb
std
push
loop
mov
mov
xor
jg
mov
test
inc
shr
mov
adc
rolb
mov
mov
jp
sub
cmp
leave
mov
out
test
mov
out
push
add
ds
and
aad
ret
push
or
adc
or
mov
fcmovbe
hlt
fbstp
pop
and
fstps
stos
insb
int3
cli
lahf
adcl
movsb
sub
mov
daa
pushf
cmc
jmp
mov
jmp
aaa
cld
dec
jno
ds
popa
js
jns
mov
fnstsw
push
neg
iret
mov
add
enter
scas
cli
popa
ja
xchg
jb
movsl
movsb
js
xor
xorb
xchg
rcrb
mov
mov
jne
mov
data16
test
or
mov
sbb
jge
ret
cmp
mov
aam
mov
sbb
and
pop
xor
fidivs
inc
jns
andb
cmp
out
jo
add
cmp
push
or
mov
adc
cmp
mov
fsts
dec
xor
xchg
mov
mov
mov
stc
and
mov
mov
lcall
or
pop
fs
popa
mov
nop
aam
or
imul
xor
inc
push
and
scas
xchg
sti
cmp
repnz
call
aam
xor
push
or
shlb
adc
xor
ljmp
lock
fbstp
mov
mov
adc
add
mov
in
mov
aaa
repnz
jne
fdivl
clc
test
xor
sahf
imul
addb
movsb
sub
es
and
insl
ret
arpl
cmp
dec
mov
orb
and
icebp
sub
cmc
push
mov
add
jge
pop
stc
and
xlat
js
or
push
and
adc
shlb
and
sub
arpl
pop
jne
push
mov
pop
lock
mov
jbe
test
mov
mov
xchg
mov
je
popa
mov
add
mov
jno
ja
jb
lds
and
nop
mov
lods
sbb
or
add
fiadds
jle
ljmp
jecxz
loop
cmpsl
jbe
mov
push
roll
mov
lret
popa
loope
inc
pushf
xor
xor
push
xor
inc
xchg
aaa
jecxz
mov
ret
xor
or
sub
fadds
mov
mov
pop
cld
cmpsl
cmp
mov
addr16
outsb
or
not
fdiv
adc
sbb
test
addb
dec
outsl
mov
flds
sbb
loope
scas
imul
jo
icebp
cmp
gs
xchg
pop
sbb
jge
mov
dec
movsb
mov
out
xchg
ret
outsl
push
out
xchg
ja
mov
lea
and
sbb
insl
mov
outsb
cmpb
dec
push
out
jbe
inc
ja
xor
push
fdivs
fdivp
xor
pop
xor
pop
cmc
stc
or
mov
addl
mov
and
dec
outsb
fbstp
dec
pop
cmp
adc
iret
cvttps2pi
push
cwtl
rcl
int3
mov
jnp
jo
or
stos
shrl
mov
mov
mov
pushf
dec
jns
xor
sbb
adc
stos
inc
cli
nop
mov
ret
xchg
and
xchg
lds
adc
movsl
jns
inc
fdiv
testb
mov
scas
mov
stos
pop
in
xor
sub
push
sbb
dec
fs
scas
lret
stc
mov
or
xchg
loopne
xchg
mov
mov
or
enter
mov
pop
mov
int
push
mov
imul
jno
inc
fwait
dec
mov
pop
mov
fwait
sub
push
pop
dec
shll
ds
xchg
aaa
mov
stc
ret
push
add
jl
cltd
jp
push
das
mov
sbb
stos
jmp
cltd
pop
test
xchg
pop
iret
int3
inc
add
shll
aaa
pop
mov
and
aas
lahf
insb
gs
stos
mov
mov
out
ficompl
mov
outsl
repz
push
and
jae
mov
mov
insl
jmp
push
stos
push
shll
cld
ja
xchg
mov
pushf
test
imul
cli
adc
jno
fisttpll
mov
repnz
sbb
jge
daa
inc
iret
movsl
xor
icebp
jns
clc
mov
pop
pop
dec
lds
arpl
dec
ret
mov
and
cmp
insl
lods
stos
sbb
xor
cmp
imul
divb
add
and
jmp
inc
mov
fstpl
cwtl
xor
cmp
insl
mov
xchg
loope
jns
out
xor
adc
mov
mov
xlat
cwtl
bound
dec
shlb
mov
jne
stc
xchg
jbe
mov
test
insb
cwtl
imul
xorl
mov
movl
pushf
cmp
xor
or
xor
xchg
gs
aas
xor
loope
fidivs
shlb
aad
repnz
mov
gs
push
add
loope
lahf
sti
nop
adc
cmp
sbb
xchg
lret
and
mov
or
xor
fisubrl
add
ret
xchg
mulb
sub
cmp
add
push
aam
mov
jmp
lods
stc
mov
enter
mov
movb
stc
mov
insl
rcl
insb
jb
ret
dec
and
aaa
rcr
lds
mov
and
mov
pop
jl
ds
call
or
int3
fs
loop
jae
test
int
ret
xchg
sbb
repnz
xor
sbb
shrb
fsubrl
mov
sbb
jno
pop
out
out
mov
loop
addr16
mov
cmp
sbb
cli
outsl
clc
jl
movsb
ret
jno
push
mov
repnz
pop
inc
or
xlat
mov
cwtl
subb
jno
jle
lods
call
mov
adc
jge
into
int3
imul
mov
js
sub
pop
mov
cmp
mov
dec
mov
or
leave
fstpt
scas
bound
int3
and
out
or
addr16
fnstsw
loopne
fstl
dec
xchg
pushf
or
jmp
and
mov
push
cs
pop
loop
arpl
and
leave
cmp
movsb
mov
cmpsl
jno
sbb
xchg
out
jno
testl
es
xor
mov
pop
sub
sub
jbe
test
sbb
mov
cmp
cmpsb
mov
inc
xchg
mov
ret
test
fcomi
xchg
fldl
mov
fcomp
lods
pop
sar
and
mov
arpl
popf
lret
mov
or
lods
or
mov
fcomps
push
sub
sub
fcompl
push
xchg
cmpxchg
push
in
push
cltd
ss
cs
sub
xor
cli
data16
mov
or
and
icebp
dec
jb
iret
push
mov
cmp
jle
mov
jno
into
pushf
xor
int3
loop
mov
es
insl
enter
adc
or
mov
cmp
push
dec
or
shll
mov
pop
dec
mov
push
lea
jl
lock
lds
or
or
test
xchg
in
xor
push
jno
mov
dec
push
cs
cmc
mov
lds
pop
outsl
jle
fnstsw
mov
out
mov
out
sub
repnz
xchg
xor
mov
imul
jg
xor
mov
mov
adc
inc
mov
sbb
int3
call
in
adc
mov
add
xchg
jne
scas
xchg
flds
repnz
add
jge
movsb
es
mov
push
cwtl
pop
in
cmpsb
icebp
push
mov
pop
mov
stc
inc
sbb
cmpxchg
repz
movsl
xchg
mov
int
adc
jo
and
dec
in
mov
xor
int3
xchg
jne
ds
mov
aam
mov
sahf
aas
sti
and
mov
sarb
xchg
leave
xor
or
frstor
mov
lret
push
xlat
sub
loope
push
ljmp
shlb
call
jo
xor
lea
ret
mov
push
xor
inc
push
mov
mov
or
ret
mov
cmpsl
pop
mov
int
mov
xor
cmpsb
loope
les
and
push
fdivrs
xor
dec
ret
and
jge
pusha
mov
cwtl
inc
lods
mov
lock
aad
adc
dec
mov
dec
add
shr
icebp
mov
inc
push
sbb
sbb
into
fwait
fs
add
pop
jb
push
pop
test
pop
mov
in
js
cmpl
jo
testb
cwtl
sub
out
and
jns
clc
ja
mov
xlat
daa
cltd
fisttpll
icebp
cmp
gs
mov
into
movsb
fnstenv
test
imul
mov
jb
test
test
mov
and
push
stos
sub
cmp
data16
in
jns
mov
jns
loopne
dec
mov
pop
xor
popf
adc
inc
adc
inc
jne
push
and
subb
push
into
pop
xchg
add
in
cmp
xchg
and
mov
sub
ljmp
addr16
cwtl
insl
inc
mov
adc
pop
sub
ret
mov
adc
jns
lcall
jo
adc
mov
push
test
roll
mov
lret
cmp
loopne
movsl
sub
mov
ret
outsl
adc
push
mov
mov
cmc
and
mov
repz
insb
mov
lea
jmp
popf
stc
fidivs
mov
xor
dec
dec
xor
sbb
jns
fldcw
mov
fstp
mov
leave
xchg
mov
out
ret
fs
cli
and
push
fxtract
or
mov
mov
cltd
add
int
push
outsw
mov
orl
imul
dec
aam
or
cs
mov
sub
jbe
and
xchg
out
and
mov
sub
jnp
jo
repz
adc
and
stos
mov
rcr
and
mov
aad
test
es
addr16
dec
pop
pop
pop
mov
fs
stos
xchg
or
mov
xchg
das
and
fwait
lret
add
int3
loope
push
adc
incl
xor
jle
dec
mov
add
stc
sbb
jno
mov
fisttpll
out
fbstp
sbb
pop
and
mov
adc
dec
add
jno
pop
faddp
out
xor
xor
sbb
mov
out
push
lahf
mov
push
xor
add
mov
add
inc
aaa
gs
jno
mov
xchg
jge
inc
mov
cmpsl
cmc
popf
in
jle
scas
pop
mov
push
mov
test
mov
jmp
mov
out
mov
or
push
stc
pop
pop
into
mov
and
insl
adc
mov
sahf
rcll
cli
or
pop
push
jge
int
test
mov
ljmp
leave
popa
push
fwait
inc
or
jo
test
cmp
lods
ss
or
shlb
andl
and
iret
imul
lahf
ja
mov
scas
push
stos
lret
xor
pop
fists
mov
idiv
mov
or
stos
jecxz
out
xor
inc
ss
jno
aad
mov
dec
test
push
iret
mov
mov
push
or
test
lret
sbb
insl
dec
push
adc
in
push
dec
and
sbb
mov
das
pop
lods
out
sbb
mov
xchg
jle
shlb
mov
js
jb
xchg
es
inc
xchg
in
test
or
cli
jnp
pop
outsl
xchg
mov
rolb
mov
scas
xchg
mov
into
imul
test
and
or
mov
imul
push
mov
mov
sbb
dec
imul
dec
leave
mov
mov
inc
mov
mov
sbb
sub
xchg
cli
mov
pop
adc
loopne
mov
or
lods
inc
mov
inc
add
push
cmpsb
pop
mov
scas
inc
jne
fisttpll
mov
pop
and
xlat
mov
adc
imul
fwait
int3
pop
cld
clc
sbb
and
lret
jno
mov
mov
mov
insb
outsl
aam
or
mov
imul
jmp
cmp
call
xor
mov
adc
pop
mov
outsb
xchg
xlat
mov
out
mov
jge
mov
sub
push
and
fidivs
mov
mov
js
fwait
and
mov
xor
daa
inc
stc
xlat
aam
sbb
rolb
adcw
mov
sbbb
icebp
mov
jno
xorl
push
shll
pop
jb
fidivs
mov
frstor
and
test
shlb
loopne
mov
jnp
xchg
icebp
outsb
pop
aaa
and
add
push
mov
mov
mov
movsl
repz
mov
dec
in
rolb
insb
mov
lock
cmpsb
jno
arpl
outsb
iret
mov
movsb
leave
xchg
mov
mov
push
enter
pushl
fcmovu
test
imul
lea
cmp
adc
test
in
inc
mov
cmpsl
mov
bound
outsb
or
cwtl
xchg
movsb
mov
imull
js
pop
mov
pop
sub
adc
xor
iret
aas
mov
fmull
das
sti
add
nop
xchg
sti
fbld
cmp
mov
loope
cmp
and
mov
out
js
iret
mov
cmp
fwait
mov
stos
sub
jl
sub
iret
mov
and
out
cmp
int3
mov
cld
push
scas
jno
or
or
rep
mov
movb
inc
popl
dec
mov
or
xor
repz
icebp
fimull
in
jb
add
int
enter
enter
movsl
outsl
or
pop
insl
xor
daa
add
adc
mov
push
fdivs
mov
sbbb
ss
call
in
jno
repnz
mov
daa
dec
mov
jl
cmp
cmp
movsb
popa
fldt
pop
mov
jecxz
and
xchg
aaa
or
lock
movsl
loope
sti
mov
jl
cli
enter
lret
jns
outsb
test
add
lcall
ficomps
out
mov
lods
mov
pop
dec
dec
fmull
repnz
mov
daa
xor
mov
jbe
mov
or
daa
sbb
pushf
out
sarl
mov
adc
cmp
in
jno
jg
ret
push
xchg
mov
roll
outsl
push
mov
add
dec
hlt
iret
ja
dec
sahf
mov
lahf
adc
sub
xor
icebp
cli
iret
aas
sar
divb
xorl
and
xor
mov
lods
xchg
push
les
push
xor
sti
in
mov
cmp
push
fsubs
fdivl
mov
rcll
xor
jo
cmp
scas
mov
cmp
gs
xor
push
dec
and
lea
stos
mov
or
push
mov
and
dec
mov
enter
mov
sub
xor
clc
mov
mov
cltd
pop
arpl
and
iret
or
jns
arpl
pop
add
cmpsb
and
push
cmpsl
jmp
in
in
rcrl
xchg
xor
test
mov
add
scas
stc
mov
inc
add
mov
and
and
pop
inc
dec
cmp
fbstp
or
push
mov
push
mov
pop
xor
mov
mov
mov
dec
push
scas
lret
test
stc
fs
js
add
aad
mov
xor
or
test
mov
mov
ja
loop
pop
leave
xchg
aam
xor
mov
dec
xchg
mov
ret
mov
mov
jl
test
mov
lcall
lods
mov
fmull
lcall
mov
mov
xor
mov
xor
sub
mov
jmp
insb
xlat
mov
call
sub
sahf
aad
add
sti
mov
lock
xor
imul
cmpxchg
sub
das
loop
and
mov
cwtl
sbb
mov
mov
ret
in
sbb
stos
int3
out
jne
xchg
add
insl
or
popa
sarb
lcall
mov
fdivs
jbe
push
jns
lret
mov
adc
js
xor
cmpsl
mov
sbb
and
ss
enter
lods
xchg
sbb
fs
jl
rcrb
push
mov
aaa
bound
mov
push
mov
pop
rcrl
notb
inc
xchg
mov
mov
xchg
mov
and
clc
mov
outsl
loopne
xlat
dec
lods
pop
aad
add
mov
inc
ficoml
sbb
mov
adc
jne
dec
inc
shr
jecxz
add
mov
lret
aad
sub
fbstp
popa
pop
mov
jbe
ljmp
ret
ret
cmpsb
and
stos
xorb
add
sub
hlt
xchg
pop
mov
loop
jno
mov
mov
dec
iret
inc
sbbb
xlat
mov
pop
or
or
xchg
mov
xchg
sti
sbb
cmp
stc
lcall
insl
ret
into
fbld
sahf
push
enter
imul
icebp
push
cmp
stos
xchg
mov
jns
fucomi
push
xchg
sti
mov
cwtl
lret
pop
movsb
add
add
xchg
repz
or
stos
mov
nop
jbe
dec
and
repnz
sbb
dec
fidivl
pop
imul
mov
mov
sub
out
test
pop
pop
xor
mov
pop
sbb
jg
xchg
mov
pop
mov
push
in
xor
outsl
push
mov
test
adc
mov
mov
xchg
cmp
inc
lret
iret
xchg
out
scas
adc
sub
pop
adc
bound
inc
ss
lods
in
mov
xor
imul
adc
xchg
test
stc
jl
in
sbb
std
sbb
xor
fmuls
and
ljmp
mov
mov
rolb
lods
or
arpl
mov
out
out
xor
mov
cli
xor
test
ljmp
xchg
mov
pop
add
out
fisubs
mov
push
dec
xor
test
test
idivb
xor
shlb
mov
and
mov
and
mov
cmp
mov
test
push
mov
es
into
lock
das
pop
out
sbb
and
jg
incb
out
mov
mov
pop
enter
cmpsb
outsb
es
cmc
clc
stc
adc
enter
xor
dec
push
pop
mov
icebp
xchg
xor
xchg
pop
jns
pop
mov
xor
xor
pop
push
das
mov
xchg
roll
hlt
test
or
pop
inc
xor
jae
mov
lea
movsl
sbb
cmp
jmp
or
loop
mov
jg
mov
cmp
mov
lods
push
add
call
aad
adc
icebp
pushf
aam
lea
mov
xor
dec
je
sub
ja
sub
subb
cltd
mov
imul
out
icebp
clc
and
mov
stc
dec
xor
pop
mov
push
jecxz
stc
mov
scas
mov
inc
ret
in
push
ja
jmp
adc
ret
mov
jle
mov
aam
iret
fnstenv
push
jae
and
dec
int
fnclex
xchg
imulb
inc
ds
lcall
push
decb
sbb
loop
or
dec
pop
gs
jae
dec
and
lret
and
paddd
test
icebp
mov
jns
icebp
shlb
dec
or
out
rol
mov
andl
add
jo
mov
dec
dec
jle
aam
sbb
mov
mov
repz
mov
sar
cmp
and
test
in
lea
and
mov
jp
outsb
push
push
std
xor
xchg
xchg
pop
dec
jmp
repz
sbb
pop
mov
cmp
pop
in
popf
stos
stos
mov
sbb
ficoms
shrb
mov
xor
insb
pop
mov
add
call
test
mov
int
mov
loopne
in
pop
popf
push
arpl
in
outsl
xchg
decl
xor
or
push
mov
fs
pushf
lea
jne
lea
push
mov
pushf
pushf
pushl
pusha
lea
jmp
xchg
or
sar
loope,pt
xchg
aam
es
dec
xor
outsl
adc
jle
or
aad
sbb
sbb
sbb
ret
sti
into
loope
push
push
pop
xor
into
add
xchg
dec
or
mov
mov
arpl
mov
inc
icebp
sahf
xchg
adc
jne
movsb
add
mov
pop
mov
jb
loop
cmp
sub
out
gs
nop
xchg
mov
mov
mov
stos
sbb
push
iret
movsb
repnz
mov
lea
jne
shr
btc
btr
or
sub
pushf
jmp
add
pushf
lea
jo
pusha
lea
jne
pushf
setp
call
lea
jb
call
popa
into
sub
stc
mov
mov
cmp
push
mov
into
scas
shlb
xchg
push
adc
push
dec
sarl
test
xchg
or
ljmp
fistps
push
mov
sbb
dec
push
inc
scas
popf
pop
aam
xchg
mov
pop
bound
xchg
clc
inc
loopne
bswap
push
and
adc
ret
jl
push
mov
add
add
jno
mov
lds
fsts
scas
xchg
cmp
fnsave
arpl
test
call
and
adc
shrl
mov
mov
sub
scas
outsl
add
cwtl
subb
pop
movsb
jle
das
sub
push
lret
or
insb
je
pop
fcompl
xor
shrb
add
or
jp
shl
jg
int3
test
cmpsb
into
std
aaa
loop
pop
sub
clc
mov
sahf
xchg
sti
dec
pop
pop
push
xchg
sub
icebp
movsb
push
ljmp
lahf
sarb
or
or
jp
movsb
push
mov
inc
in
pop
push
pop
outsl
xor
mov
jmp
mov
mov
cmp
test
sbb
shll
addb
xor
mov
aad
and
mov
push
sbb
mov
pop
push
test
adc
mov
pusha
std
push
aaa
insb
push
xchg
mov
sub
mov
call
xchg
pop
insl
lock
mov
sub
movb
movl
movb
lea
jmp
stos
out
mov
in
lods
mov
inc
aad
push
mov
sub
fbstp
dec
imul
aaa
imull
push
cltd
fcompl
add
push
push
repnz
dec
xor
cltd
pop
enter
fcmovu
mov
rcll
icebp
int
or
and
cmpl
jmp
mov
out
mov
fidivrl
data16
setno
and
aaa
xor
add
insl
mov
aaa
fmuls
mov
and
pop
or
mov
xchg
dec
or
mov
pop
orl
std
push
nop
inc
inc
mov
sub
cmp
pop
lret
pop
gs
push
lcall
arpl
testl
sub
sub
inc
fwait
push
ret
adcl
fisubl
xchg
push
lret
jg
lods
pop
fcoml
cmp
lret
mov
adc
jbe
and
je
mov
fdivr
add
out
subb
jbe
sub
xchg
push
mov
arpl
mov
ja
stc
stos
sti
cld
insl
scas
popa
dec
loopne
in
dec
xchg
leave
bound
nop
mov
add
call
outsl
jne
dec
bswap
daa
and
mov
pop
jmp
lods
sub
mov
or
xchg
adc
mov
dec
mov
and
or
xchg
push
stos
push
enter
lock
rcrl
or
popf
cmp
mov
rcrl
and
pop
add
jmp
popa
in
ljmp
add
sub
out
inc
inc
dec
xor
cs
insb
add
mov
lock
add
out
fcomp
dec
or
cmp
dec
push
dec
adc
cmpsb
sbb
outsl
fiadds
jno
aad
pusha
mov
rclb
test
and
add
rcl
add
call
mov
xchg
mov
mov
or
push
adc
js
jle
inc
push
ljmp
and
sub
mov
and
ss
call
scas
orb
movsb
divl
in
xchg
cmpsb
jecxz
orl
push
int
push
rcll
cmp
cs
mov
xchg
adc
dec
jecxz
in
inc
icebp
nop
jae
dec
sub
xchg
jno
xchg
test
mov
sbb
xor
inc
xchg
stc
sbb
xor
mov
xchg
daa
xchg
mov
add
or
mov
mov
cmc
sbb
add
not
not
mov
pusha
pushf
lea
jmp
cld
imul
dec
jl
scas
pushl
push
sbb
hlt
inc
ds
sub
repnz
add
dec
push
adc
push
inc
aaa
je
mov
add
or
sbb
js
inc
out
dec
lcall
js
sub
mov
out
cmpsb
mov
decl
pushf
push
xchg
jecxz
lods
xor
inc
sub
mov
push
sub
into
add
xchg
xchg
inc
adc
fs
lcall
or
xlat
stos
sub
and
mov
pushf
pushf
push
lea
jmp
jnp
pushf
movl
lea
jb
push
pushf
pusha
mov
pushl
ret
xor
jmp
shr
rcr
bsr
mov
push
clc
cmpb
pushf
pusha
pushf
pushl
lea
jne
bsr
sub
rcr
dec
mov
stc
test
cmp
jmp
sub
jno
add
push
pusha
pushf
call
int
out
mov
or
lea
xor
cmp
cs
les
jo
cmpsl
lret
cld
outsl
dec
dec
mov
cmp
lcall
add
cmpsb
shr
push
mov
pop
jmp
mov
test
out
popa
mov
in
out
xchg
xor
jmp
aas
mov
sub
in
aaa
sub
in
clc
cmp
je
sbb
loopne
xchg
pop
cli
int
and
inc
mov
mov
jmp
jle
add
or
fwait
or
stos
xorl
and
subl
ja
push
mov
add
in
mov
daa
push
psllw
mov
clc
addr16
or
mov
gs
daa
mov
mov
lds
adc
test
loop
adc
cmp
mov
mov
jb
jb
outsb
sbb
into
add
mov
sarl
stc
mov
mov
pushf
dec
push
outsl
loopne
xor
xchg
jne
and
and
in
push
and
call
jno
movsl
adc
js
shlb
test
repz
scas
outsb
inc
add
and
incl
sarl
mul
int
or
nop
inc
ret
sbb
pop
xchg
pop
xlat
inc
mov
add
jl
shlb
bound
sub
icebp
xor
scas
xchg
jne
sbb
sub
outsb
pushl
in
cmp
popl
outsl
mov
sub
adc
mov
in
loopne
push
mov
idivl
int
outsl
jo
xchg
movsl
popl
lods
mov
push
jnp
arpl
imul
rclb
dec
shll
lcall
mov
jmp
into
and
and
jp
scas
sbb
add
inc
xchg
out
lea
adc
or
add
iret
fisubs
lret
sbb
scas
and
test
in
stc
mov
aam
cmpsb
mov
scas
add
cmp
rclb
call
jl
push
mov
addr16
add
lcall
inc
test
mov
js
leave
adc
add
insb
mov
cmp
push
mov
or
mov
or
xor
movsl
cmp
dec
jl
repnz
dec
out
mov
fdivrs
mov
xchg
lock
fwait
adc
mov
mov
and
cmp
aad
or
pusha
dec
xor
mov
inc
test
std
scas
popa
hlt
xor
push
mov
lds
pop
pop
push
rcl
inc
mov
stos
repz
mov
adc
dec
or
add
inc
mov
cmp
inc
addb
mov
flds
sbb
push
xlat
lcall
popf
sbb
mov
pop
xchg
sub
repnz
jmp
and
pop
jp
mov
rclb
xchg
mov
call
roll
mov
mov
jne
ja
jmp
mov
loope
or
inc
xchg
test
dec
imul
scas
jle
lcall
leave
mov
mov
ret
push
adc
lods
int
out
imulb
jl
push
daa
cld
loopne
std
orb
pop
cltd
les
mov
mov
push
out
mov
insb
lahf
repnz
cwtl
fstpt
lock
and
jmp
lea
inc
mov
call
pushf
mov
jmp
mov
pushf
jmp
call
mov
sbb
outsb
pop
adc
push
mov
cmpsb
cmpsl
dec
cmp
push
mov
mov
lea
subl
js
hlt
mov
in
xor
roll
jp
push
aam
rorl
cmp
xchg
cmp
int3
dec
cmp
mov
sub
pop
imul
sub
mov
scas
add
pop
int
add
mov
test
jb
test
jb
push
bt
mov
movb
cmp
mov
lea
jae
add
mov
sbb
sar
mov
cmc
pushf
sbb
call
push
mov
stc
mov
xor
inc
out
clc
stc
push
or
scas
aas
add
outsl
inc
flds
fwait
adc
jns
stc
mov
add
mov
sub
jae
andl
rolb
push
mov
mov
xor
jg
lods
add
das
xchg
sbb
xchg
xlat
inc
dec
pop
ret
in
push
icebp
test
in
jge
cltd
fdiv
das
js
addr16
leave
ret
das
cs
or
mov
pop
jmp
negb
enter
pop
pop
jmp
lret
cmp
shlb
clc
add
pusha
not
pushf
jmp
out
mov
mov
mov
bound
sub
push
adc
decl
pop
cmpsl
sbb
xlat
mov
xor
test
jo
mov
inc
jmp
pop
aad
mov
mov
cmc
jl
jge
sub
inc
inc
add
dec
shr
imul
fstpt
ljmp
loopne
jo
cmp
enter
clc
sti
scas
mov
pop
mov
mov
jbe
push
inc
fistps
popf
js
sbb
mov
mov
stc
dec
pop
or
mov
arpl
xchg
push
sbb
mov
push
push
xchg
les
adc
orl
mov
and
push
adc
sbb
xchg
movb
xor
jg
jp,pn
jo
iret
inc
sub
cmpl
imul
jmp
mov
idivb
mov
cmc
sub
scas
icebp
adc
mull
out
cmp
sti
adc
mov
pushf
lea
jae
call
rcr
pushf
shl
stc
mov
jmp
add
add
add
add
add
or
add
mov
add
add
nop
das
add
add
add
stos
das
add
add
add
add
add
das
add
add
add
dec
sub
add
add
mov
add
add
add
addb
add
or
add
je
add
pusha
das
add
add
add
add
add
add
add
lods
das
add
das
add
jbe
add
das
add
add
add
add
movsb
push
mov
mov
sub
out
call
mov
and
add
shll
adcl
or
pop
pop
jp
cmpsl
push
cmpsb
inc
int3
addl
cmpsl
push
fstl
clc
sti
in
popa
aam
mov
adc
fcmovbe
mov
aas
jmp
cmp
addb
sub
dec
pop
addr16
and
jno
rcll
mov
ljmp
ja
pop
fstps
push
add
negb
fimull
test
sbb
adc
dec
int3
pop
pushf
lods
cwtl
inc
push
sub
test
pop
das
setnp
lods
sbb
xor
sub
add
not
not
pusha
not
call
lea
ja
call
lods
cmc
pushf
push
xor
jmp
xchg
mov
loopne
aas
push
in
xor
inc
sbb
imul
icebp
repz
mov
test
xchg
out
sbb
adc
sub
les
jae
cmp
inc
mov
jnp
les
mov
fistpl
ja
and
cmp
ds
mov
jo
cmpsl
sbb
js
push
add
sub
in
mov
push
jne
lock
out
rorb
add
popf
lcall
inc
xor
and
inc
fsubr
sub
adc
mov
inc
sarl
nop
xorb
sti
cltd
mov
pushf
into
or
popf
jno
in
adc
dec
mov
call
loopne
mov
repnz
insl
lods
stc
and
jno
movsb
mov
mov
out
mov
mov
mov
lods
xchg
push
push
or
mov
push
and
je
mov
int
dec
adc
stc
sbb
lret
test
icebp
leave
call
int3
iret
mov
neg
dec
cmc
repz
lahf
and
mov
hlt
xorl
jbe
hlt
test
jbe
aad
adc
shr
ja
sub
shrl
adc
mov
xor
cld
sub
rorl
imul
inc
and
sahf
jnp
aaa
dec
adc
mov
leave
enter
loope
mov
pop
lret
push
mov
roll
mov
add
call
test
movsb
out
mov
rclb
mov
pop
or
rol
dec
flds
test
int3
pop
pop
dec
or
mov
mov
in
mov
dec
pop
add
sbbl
inc
lds
test
aam
jl
fwait
mov
fsubrl
clc
dec
std
cmpl
repz
mov
in
sbb
sub
rol
test
addr16
addl
subb
dec
jno
shrl
mov
dec
nop
into
inc
jo
leave
dec
icebp
enter
sub
pop
nop
imul
xor
xor
mov
dec
inc
or
test
pop
js
cmp
sahf
lods
dec
pop
repz
aaa
into
mov
dec
mov
mov
sub
dec
lds
xor
mov
sar
push
cld
cmp
lds
ja
pop
xchg
mov
fsts
lret
insl
pop
cld
frstor
aad
cmpsl
push
mov
pop
test
popf
lods
sub
paddb
dec
cmp
test
xlat
fnstenv
dec
sub
fdivrs
push
stos
movsl
jge
dec
push
scas
test
jmp
jg
int3
shll
inc
cmp
dec
mov
outsb
lock
aad
fucom
cmc
pop
cwtl
insl
lock
outsb
movsb
sbb
loop
test
out
lods
adc
mov
pop
shll
fmul
adc
lret
lock
mov
stc
pop
mov
pop
mov
adc
jecxz
enter
jae
icebp
int
inc
aad
jecxz
int
int
aaa
mov
dec
test
jnp
lret
jmp
dec
pusha
push
xor
mov
mov
pop
mov
xor
cli
test
mov
test
ss
jge
xchg
add
dec
lods
test
out
in
cli
xchg
push
stc
mov
sar
xor
mov
xor
xchg
jmp
jnp
pop
testb
pop
in
adc
shll
out
mov
inc
out
cmp
dec
xor
mov
xor
test
insb
scas
stos
adc
pop
loope
test
loop
movsb
bnd
shl
add
sub
cmpsl
xchg
lock
mov
jno
mov
jecxz
mov
les
loopne
arpl
push
and
imul
xor
rcrb
add
repnz
test
std
mov
inc
or
pop
jne
scas
sub
mov
rol
mov
cmp
cmc
movsl
test
ret
cli
sarl
adc
mulb
lret
mov
push
rcrb
into
jmp
ja
push
movsl
jp
popf
lock
stos
aam
push
mov
fistl
inc
iret
ror
insl
or
push
jge
pop
ret
xor
scas
rcr
jmp
jae
xor
or
sub
or
cmp
aaa
pop
scas
xor
cmc
mov
addl
test
mov
cltd
mov
pop
sbb
xchg
imulb
mov
dec
or
call
stos
test
push
inc
ror
leave
insl
xchg
enter
repz
add
flds
arpl
daa
mov
pop
pop
jbe
lret
fcomps
dec
ret
fnstcw
cltd
push
test
clc
and
movsb
dec
and
xorl
aam
mov
std
test
or
cmp
adc
adc
sub
test
push
loopne
ret
pop
ret
int3
ljmp
cld
dec
inc
pop
dec
test
and
mov
pop
addl
std
shll
pushf
jne
pop
lock
xor
out
or
jae
mov
sbb
mov
lock
adc
xor
jo
add
sbb
sub
xchg
aam
jae
or
mov
imul
xchg
iret
test
test
test
ret
mov
xlat
popf
icebp
std
mov
sbb
test
leave
sub
sub
imul
lock
pop
lock
and
mov
out
loop
lods
add
les
fidivs
ret
inc
sub
pop
pop
faddl
adc
int
int3
lret
xor
mov
push
or
dec
fisubrs
jmp
mov
dec
loop,pn
test
mov
sub
add
test
xchg
cmpsl
inc
mov
shll
jne
pushl
insl
mov
push
movsb
fmuls
mov
imul
int
xor
push
lods
rcrl
add
dec
dec
mov
sub
pop
xchg
cmp
jae
sub
outsl
inc
cld
pop
fsubrl
add
adc
call
ret
sbb
xchg
xor
xor
divb
pop
adc
pop
push
bound
clc
inc
adc
mov
adc
mov
jg
mov
lods
jge
cmpl
test
fcoml
fld
test
fnstcw
out
push
nop
lods
or
push
inc
jb
pop
aad
add
insl
jmp
mov
stos
pop
adc
int3
in
test
in
inc
cmp
xchg
shrb
adc
jne
push
sub
cltd
repz
sbb
or
sub
fdiv
jmp
sbb
jae
sar
mov
jecxz
dec
loope
jecxz
mov
ret
test
fs
xor
or
js
add
imul
test
mov
or
add
dec
rcrl
stos
pushf
icebp
or
icebp
int
sub
cmp
daa
aaa
pop
in
aad
push
ret
hlt
add
pop
pop
inc
pop
idivl
ret
xlat
lret
std
imul
lds
lret
pop
adc
xor
adc
xchg
scas
cmp
outsb
divl
pop
lods
gs
xchg
dec
mov
add
xor
loope
sub
lock
stc
inc
xchg
inc
sbb
xor
test
mov
movsb
cmp
rcrl
in
adc
repz
pop
jo
test
dec
cmp
data16
mov
add
cmp
test
int
test
into
in
inc
xchg
mov
add
jmp
iret
das
jge
test
test
mov
pop
xor
cmc
lahf
cs
dec
adc
dec
sbb
cmp
es
mov
jae
push
jae
lds
js
jge
decb
push
mov
jecxz
call
test
cld
inc
pop
scas
adc
xchg
mov
dec
sub
repnz
xor
test
mov
mov
in
leave
dec
or
sbb
sar
mov
loopne
push
bound
mov
xor
sbb
fiadds
into
push
lds
sbb
fbstp
add
hlt
cmp
and
call
test
xchg
pop
add
ljmp
add
pop
jbe
orb
je
ret
leave
mov
mov
jae
bound
sahf
push
ret
adc
ret
inc
shrl
lahf
enter
sarl
xchg
movsb
sbb
insl
mov
shll
test
sub
and
or
pop
adc
out
in
aad
lret
or
sub
aaa
jb
sub
les
push
stc
cli
pop
xor
mov
dec
sbb
dec
in
dec
shll
add
adc
xchg
mov
dec
xlat
aam
mov
jae
stos
dec
test
pop
mov
cmp
int3
ljmp
mov
test
pusha
aaa
aad
mov
inc
cmpsl
xchg
mov
ljmp
lret
cmpsb
mov
aad
jg
sub
jo
mov
faddl
jae
dec
xchg
ret
add
push
mov
test
sbb
xchg
arpl
sbb
enter
cmp
pop
jno
sbb
loopne
sub
mov
jecxz
pop
ret
xor
cmpsl
je
imul
xchg
mov
f2xm1
cltd
outsl
lds
add
mov
sbb
fs
ret
shlb
add
add
mov
shr
sbb
stc
lea
sub
testl
dec
adc
stos
mov
shll
push
push
xchg
hlt
imul
add
ljmp
repz
loope
add
lods
test
imul
dec
test
pop
xor
add
rcr
popa
or
xchg
popf
rcl
lock
dec
into
je
pop
fnstsw
mul
stc
sub
mov
mov
xor
loopne
ficoml
lret
push
inc
iret
mov
scas
pop
dec
test
push
push
or
roll
push
sub
sbb
out
ljmp
jmp
fldcw
in
outsl
inc
shll
sub
ret
leave
fs
or
add
mov
add
sub
leave
or
dec
cmpb
jmp
das
cs
jbe
ss
pop
mov
pop
sub
adc
pop
cmpsb
sub
les
or
loope
mov
aas
ret
loope
sub
aad
in
adcl
test
push
push
adc
mov
inc
enter
mov
jae
sub
fiadds
xor
cmpsb
sub
rcrb
pop
pop
divl
lds
pop
ret
adc
sub
call
loope
sub
xchg
mov
pop
and
aaa
or
les
pushf
mov
cmc
dec
loope
shrl
ret
push
jb
sub
mov
xorl
inc
push
pop
mov
jne
adc
ret
icebp
jp
xor
mov
jmp
push
test
vpsubw
in
insb
lcall
rcl
test
or
or
sbb
int3
loop
dec
fisttpll
mov
xchg
inc
xchg
pop
push
idivb
mov
outsb
sbb
add
lods
into
pop
dec
mov
imulb
idivl
mov
or
test
fidivl
test
xor
icebp
js
lock
in
lahf
xor
cmp
pushl
call
mov
mov
into
jmp
xchg
fisubs
enter
mov
imul
jb
jl
mov
xchg
push
mov
sbb
popa
inc
jnp
xchg
mov
mov
fildll
xchg
fsub
or
mov
xchg
dec
mov
ja
push
pop
mov
lcall
je
cmp
es
add
mov
mov
push
lock
sub
mov
lahf
dec
dec
add
test
decb
movl
push
jecxz
mov
iret
push
data16
sbb
jae
cvtpi2ps
cmp
cltd
pop
lea
add
mov
dec
arpl
dec
orl
mov
mov
sahf
inc
mov
lock
mov
xor
scas
and
mov
jno
ret
imul
int
rcrl
cmp
lods
xchg
cmpsl
mov
mov
sahf
shll
cmp
mov
lahf
push
and
xchg
cmc
ret
mov
hlt
clc
loopne
iret
xor
inc
movsb
nop
movsl
std
mov
sbbl
iret
mov
mov
fs
pop
mov
dec
xor
and
leave
mov
fcmovne
xchg
jb
sbb
sub
push
fbld
or
jno
popa
or
into
inc
mov
popf
and
xor
jmp
mov
add
cmp
adc
pop
lcall
leave
mov
cs
fadd
ss
mov
pop
lods
js
adc
cmpxchg
test
adc
inc
add
push
pushf
mov
adc
lds
xchg
mov
xchg
insb
dec
xchg
shl
ljmp
xor
out
mov
pop
jbe
or
xchg
add
in
dec
mov
dec
mov
or
jg
movzbl
or
jmp
fidivrs
jb
ret
mov
inc
mov
xor
stc
mov
and
pushl
sub
cs
mov
push
adc
ja
cltd
scas
add
dec
out
sub
jae
xor
push
jb
decb
push
push
pop
jle
mov
ret
push
ja
in
daa
dec
mov
xor
and
mov
mov
aad
test
mov
mov
les
mov
xor
push
mov
outsl
iret
mov
xchg
divl
inc
fists
push
mov
xor
push
mov
xor
leave
scas
xchg
int
mov
cmc
das
dec
mov
inc
cs
jno
cwtl
loope
mov
decb
sub
fidivs
cmp
mov
dec
cld
mov
aas
or
repz
test
pop
ja
lods
xchg
mov
flds
push
xor
mov
nop
dec
leave
mov
int3
lods
divl
bound
push
fsubl
jnp
xchg
stos
repz
call
adc
inc
sub
sbb
aam
mov
insb
xlat
adc
jo
xor
repz
sbb
sbb
imul
test
add
fwait
rol
movsl
pop
out
pop
out
or
push
xor
push
leave
notl
inc
jp
push
shrl
dec
je
sbb
mov
mov
fadds
inc
inc
sub
in
mov
sbb
cmp
lds
mov
mov
popf
mov
xchg
xor
inc
xor
pop
pop
cmp
enter
hlt
scas
aad
test
push
pop
pop
xchg
xorb
xor
pop
jo
aas
mov
mull
push
mov
dec
cs
lea
pop
jecxz
add
xchg
adc
jae
popa
fmull
push
mov
insb
jmp
pop
movb
xor
fxch
cmp
popf
nop
jns
xor
test
lock
aaa
mov
xor
inc
add
dec
xchg
divl
jb
inc
push
and
das
xor
adc
xchg
loop
into
sbb
stc
pop
hlt
mov
or
out
sub
test
xchg
gs
push
or
sub
pop
mov
push
sbb
pop
into
in
shlb
js
int
push
fcmovne
dec
pop
test
neg
sub
insb
mov
daa
xchg
push
sub
xor
inc
xorb
cmp
xchg
popf
bnd
jmp
mov
sbb
pop
insb
pop
inc
or
out
lcall
jne
mov
jle
inc
mov
mov
movsb
repz
pop
mov
lods
pop
loope
pop
mov
popa
stc
clc
add
mov
lock
lret
cmp
lahf
leave
xor
rclb
xor
push
mov
ret
push
adc
and
xor
and
adc
sub
leave
inc
lret
or
mov
in
dec
repz
or
shlb
xor
jo
push
mov
add
jle
pop
bound
subl
pop
mov
mov
xor
les
out
sub
mov
test
adc
xchg
int
or
gs
jae
inc
cmp
or
sbb
shrl
mov
xor
es
ds
dec
inc
xor
mov
sbb
roll
call
mov
xor
xor
dec
daa
mov
out
testl
push
mov
movsb
stc
les
xor
arpl
ret
and
mov
ffree
test
add
dec
push
inc
mov
fsubl
jae
and
fmull
pop
push
test
sub
mov
shl
jno
mov
int
cmp
xor
or
aad
mov
push
mov
rcrl
cmpsl
mov
repz
pusha
scas
mov
mov
sub
xor
daa
push
adc
inc
mov
cld
mov
ret
dec
dec
mov
sub
shll
add
mov
loopne
push
lock
leave
test
cmp
pop
xchg
inc
popa
stc
lret
aad
xor
sbb
int
ror
les
pop
xlat
popf
push
mov
lods
pop
adc
dec
mov
dec
mov
test
push
and
jge
xor
jae
insl
fadds
xchg
inc
adc
mov
jae
jno
and
loopne
lea
adc
jmp
shll
and
popf
cmp
or
pop
icebp
jno
or
pop
addr16
sbb
mov
loop
enter
les
xor
jne
jno
out
popf
mov
jae
xchg
mov
faddl
mov
cmp
test
call
and
ss
aad
mov
cltd
pop
xor
sbb
into
out
into
lret
shll
add
mov
scas
mov
cmp
loopne
mov
filds
sub
leave
adc
sahf
xor
fisubs
mov
mov
push
cli
cltd
xchg
popf
mov
test
mov
inc
stc
ficompl
loope
xor
or
and
lods
and
mov
inc
mov
cmc
test
and
xchg
lock
push
pop
std
mov
dec
loopne
cltd
loopne
mov
pop
add
ret
enter
push
inc
mov
rol
lcall
std
mov
inc
mov
repnz
xchg
pop
loope
insl
sti
sahf
jl
inc
stc
leave
mov
fnstsw
mov
or
pop
call
fidivrs
shlb
scas
jmp
iret
sbb
or
xchg
pop
cmpsl
xor
lds
push
cld
out
xchg
test
jnp
mov
nop
cmc
ret
int
hlt
fadds
das
pop
mov
mov
xchg
mov
xchg
loop
mov
cltd
daa
sub
incl
jae
popf
add
clc
mov
incb
cmp
mov
sub
shlb
xor
mov
and
rcrb
mov
cmc
mov
lea
adc
and
imul
roll
sub
icebp
ret
and
iret
lods
mov
pop
mov
ja
or
sbb
mov
mov
lahf
fwait
mov
cmpxchg
sbb
subb
mov
or
adc
jno
mov
add
popf
xor
sub
icebp
rcll
add
pushf
dec
cmp
mov
rorb
mov
or
insb
xchg
rcrb
mov
scas
in
mov
mov
and
aas
int
mov
fdivs
pop
pop
jmp
test
adc
rol
hlt
out
jbe
scas
mov
jb
cmp
push
aad
jne
ret
xlat
ljmp
push
push
flds
into
rorb
and
arpl
cmp
mov
movb
or
imul
mov
mov
xchg
pop
mov
pushf
mov
jmp
mov
fmul
push
mov
inc
imul
gs
jle
leave
ss
repnz
or
fs
lock
adc
jl
mov
dec
jge
sbb
mov
mov
push
cmpsl
sbb
rcl
push
xchg
xchg
cmp
mov
xchg
or
xor
movsb
aaa
jne
sub
rorl
stos
mov
sbb
icebp
ret
mov
cli
add
add
lret
cmc
stc
ret
hlt
leave
pop
mov
int3
daa
jle
pop
mov
xchg
mov
ret
mov
scas
mov
shll
repnz
mov
addl
xchg
aad
push
jmp
test
add
rorl
mov
hlt
push
bound
mov
divb
mov
ja
shrl
int3
mov
ss
out
pop
mov
mov
outsb
fistpl
adc
rolb
cmp
sub
and
roll
shl
fidivs
dec
aaa
call
jo
xchg
cwtl
sbb
imul
leave
sub
ret
pop
jecxz
jno
gs
mov
sub
ffree
jbe
and
out
loopne
pop
mov
idiv
test
xor
cmpl
xchg
mov
mov
xchg
mov
push
or
mov
add
xorb
ret
mov
movsb
xchg
ret
pop
jbe
std
or
mov
mov
in
xor
fidivs
jbe
xor
push
lock
mov
bound
movb
sub
scas
shll
loop
stos
mov
push
rcrl
mov
int3
imul
das
mov
push
shrl
xor
cltd
repz
mov
hlt
mov
cmp
test
mov
push
cltd
xchg
push
ljmp
inc
fmul
aam
mov
adc
mov
fstl
fdivl
scas
and
sub
mov
cmp
cmp
and
ret
bound
sub
add
fidivs
jno
aad
sbb
pushf
mov
inc
inc
pop
out
lcall
out
and
sub
fld
out
out
repz
aam
sbb
pop
or
test
mov
fs
inc
shrl
adc
mov
cmc
xor
sbb
xchg
iret
add
jl
push
mov
xor
add
sub
mov
leave
pop
jne
icebp
mov
loop
out
cli
fidivs
add
ss
imul
sub
dec
loope
push
fdiv
adc
icebp
scas
aad
sbb
pop
mov
fisttps
mov
es
cmp
decb
into
add
inc
mov
or
xorb
mov
imul
cltd
pop
mov
aad
xor
ja
cmp
and
inc
icebp
aad
pop
cmpsb
add
aad
xor
ret
aad
stos
mov
out
int
mov
mov
jp
daa
xorl
std
xorb
nop
lock
push
sbb
popf
mov
inc
jmp
add
pusha
rcrl
dec
stos
rol
divb
xor
lods
mov
in
pop
mov
repz
pop
jg
sub
or
xor
add
mov
mov
mov
mov
push
idivb
jmp
test
aad
adc
xor
cmp
mov
sbb
xor
mov
push
divb
xor
mov
push
jns
xlat
add
sbb
or
and
xor
leave
pop
jno
inc
mov
test
push
mov
dec
fidivs
mov
mov
cltd
outsb
call
icebp
jb
leave
lods
fimull
addl
stc
push
mov
testl
leave
aad
mov
jne
push
loope
std
and
xchg
loopne
cmp
add
cmp
mov
xor
inc
shlb
out
outsb
mov
mov
in
pusha
jb
xchg
insl
xorl
ja
pushf
repz
or
mov
hlt
faddl
out
mov
bound
gs
dec
xlat
sub
out
adc
fs
push
in
and
iret
nop
imul
insb
sub
enter
inc
xor
push
push
rolb
enter
mov
sbb
fsubrs
push
inc
mov
pop
jns
sbb
xchg
mov
fstpt
mov
push
push
roll
out
insl
push
addr16
std
sub
icebp
or
mov
test
xor
fsubl
add
xor
inc
xor
xor
ret
popa
xor
aas
push
movsl
into
mov
out
lcall
mov
add
xor
push
out
xor
lock
icebp
mov
repz
rolb
or
scas
bound
popa
scas
jmp
lcall
ja
mov
pop
mov
add
repz
or
shrl
mov
xor
stc
and
mov
and
xchg
stc
mov
push
pop
cwtl
imul
sbb
out
test
mov
mov
jne
jns
and
daa
jp
mov
xor
and
lcall
mov
sub
and
repz
mov
leave
add
pop
lods
mov
lcall
xor
lea
es
sti
cmp
fcmovnbe
xor
jl
into
icebp
je
dec
sbb
pushf
das
repnz
sbb
cmpsb
cltd
or
adc
pop
ficoml
test
dec
cld
int
pop
push
xchg
pop
movsb
push
aam
xchg
in
daa
out
aad
into
scas
lret
dec
lcall
sub
stos
addr16
es
mul
or
cmp
jbe
cmp
stos
mov
mov
dec
and
dec
mov
ss
lods
pop
lret
mov
imul
sub
jbe
aam
out
lret
sub
nop
xchg
stc
mov
clc
cmp
in
popf
pop
scas
mov
push
inc
in
xor
add
int3
xchg
aad
repnz
pop
sbb
push
fbstp
pop
les
stc
pop
test
and
pop
add
sub
mov
jmp
ret
divps
pop
xchg
rcrb
xchg
loop
push
jecxz
test
cltd
cmp
sub
std
cwtl
cmp
movsb
pop
cli
aaa
ffreep
mov
sti
sahf
jno
negl
int
ret
inc
jns
test
adc
pop
pop
xchg
arpl
testl
rcll
cmp
adc
xchg
inc
jae
sarl
jmp
sub
xchg
gs
aad
adc
mov
dec
sub
sub
ds
lods
clc
jb
jae
cwtl
int3
mov
xchg
and
imul
or
dec
adc
repnz
pushf
pop
sbb
or
and
movsb
negl
jge
ds
adc
icebp
or
push
mov
and
jl
leave
out
fidivrs
jmp
lds
mov
jge
mov
sahf
int3
sbb
cmp
jg
pop
sub
outsb
fdivl
lods
daa
mov
cmpsl
shl
cmp
push
and
jno
aas
push
mov
mov
push
mov
sbb
fnstenv
leave
cld
out
loop
mov
pop
dec
mov
notb
sbb
xor
cs
insb
add
jmp
call
movb
cmpb
pusha
mov
movb
lea
jne
pushf
xor
call
movsl
adc
xchg
stc
mov
inc
addb
inc
inc
daa
mov
ljmp
bound
lret
mov
hlt
lret
insb
loope
fistl
fdivr
scas
add
in
xchg
mov
sub
lcall
call
mov
dec
sahf
pop
ficompl
fildll
mov
out
adc
scas
roll
les
data16
test
gs
sbb
test
or
test
in
cmp
adc
aaa
cli
addr16
out
cwtl
fdivr
jp
pushf
pslld
pop
pop
add
or
icebp
movsb
xor
pminsw
push
sub
xor
jbe
aas
jecxz
mov
popl
in
mov
and
dec
ret
shll
subb
lds
mov
cwtl
movsb
loope
cwtl
je
jb
inc
subl
adc
xchg
or
xor
jns
push
cmpsb
daa
stos
lea
repnz
test
test
stc
pop
mov
mov
push
shll
mov
in
aam
pop
lods
sbb
cwtl
pop
mov
cld
cmp
test
xchg
xchg
xor
cmp
mov
sbb
jae
lds
inc
xor
sbb
cmpsl
adc
xchg
stc
mov
repnz
hlt
xor
int3
mov
imul
inc
daa
xchg
cli
xor
jle
mov
aad
enter
xchg
std
sbb
int
cmpsb
pop
dec
or
jne
fsubl
pop
inc
dec
idivl
mov
or
mov
pop
fdivrs
stos
bound
movsb
adc
lret
pop
shl
cltd
jne
insb
mov
xchg
lea
outsl
inc
idivl
and
pushf
fsts
xchg
mov
ja
iret
xchg
xchg
xchg
or
scas
jg
mov
imul
push
pop
pop
jo
imul
or
lea
push
lea
add
outsl
outsl
jae
inc
outsl
insb
outsl
jb
add
inc
xchg
stc
mov
outsl
push
and
inc
movsb
add
inc
mov
call
call
push
jmp
lods
mov
ja
push
insb
int
in
jge
adc
mov
les
loop
adc
ret
xor
xor
mov
push
sub
call
mov
mov
int3
iret
stos
movb
mov
dec
call
add
inc
insb
imul
arpl
outsb
add
push
sbb
dec
loopne
add
fs
popa
push
in
rclb
dec
loop
aas
xor
cmp
xchg
fsts
adc
cmp
es
dec
mov
and
in
ret
add
mov
jmp
and
test
push
inc
and
hlt
enter
shll
out
push
xchg
shl
lea
sub
rclb
cwtl
dec
in
mov
arpl
xchg
mov
shlb
lcall
xlat
imul
outsl
bound
jns
aas
adc
push
roll
outsb
xor
inc
mov
nop
stc
mov
andl
stos
pushf
jge
roll
in
lahf
sbb
xor
pop
dec
aaa
subl
and
pop
cmp
jne
pop
cmpsb
and
sarl
addr16
jo
adc
enter
jae
std
adc
int3
sbb
mov
roll
and
in
sub
int
mov
aas
jmp
cmp
mov
or
pushf
pop
aam
es
push
cmc
enter
push
mov
stc
mov
push
addr16
mov
out
and
xchg
push
aas
rcr
aaa
enter
dec
cwtl
jmp
shll
subl
outsl
ja
rcrb
dec
mov
xchg
scas
mov
xor
mov
mov
sbb
sbb
fwait
test
stc
sub
nop
xor
add
sahf
sub
pop
jbe
push
pop
jb
pusha
add
mov
xchg
inc
add
movsb
xchg
lds
shr
pusha
lea
je
call
in
pop
lahf
stc
mov
stc
mov
lock
arpl
dec
std
lods
lahf
imul
mov
sub
loopne
movsb
loope
push
and
xchg
push
movsl
das
lock
jge
dec
fwait
xchg
outsl
ret
inc
adc
sub
mov
inc
js
xor
cmc
icebp
cmpl
loope
push
push
scas
je
mov
out
jnp
or
pop
add
scas
mov
xor
in
add
addr16
popf
nop
ljmp
popa
xchg
cmpsl
mov
test
aas
jne
mov
loopne
xchg
jno
jg
add
fs
jne
shl
btr
sub
mov
pushf
add
jmp
jmp
pushl
lea
je
jmp
jmp
call
fists
stc
mov
add
fimull
dec
jmp
sub
adc
in
mov
cwtl
cltd
push
fdivrl
or
xchg
jmp
jbe
mov
rol
fcomp
ret
bswap
add
add
aaa
cli
outsl
clc
sti
lods
outsl
pop
pop
lret
jnp
roll
pop
sub
sub
mov
add
xchg
outsl
cmp
push
mov
lea
jbe
add
mov
or
add
sar
mov
add
add
pushf
and
shl
lea
movl
pusha
mov
clc
cmp
lea
js
jbe
bsr
movzbl
sub
push
clc
bts
mov
sub
sar
test
add
mov
xadd
add
sbb
not
shr
bswap
mov
shl
stc
add
lea
call
shr
shld
mov
shl
or
add
pushf
mov
mov
lea
call
xchg
push
mov
mov
xchg
push
push
insl
mov
loopne
cmc
dec
aas
ret
and
mov
jb
adc
dec
xchg
popa
cli
jae
rcrl
and
pop
add
lahf
cmpsb
imul
mov
leave
xchg
jg
mov
xlat
test
xor
push
push
cld
xchg
out
xor
fstps
mov
test
pop
push
jecxz
xor
hlt
xlat
ljmp
aas
jb
ret
idivb
jb,pt
enter
mov
cli
jmp
call
push
lea
jp
ja
neg
sub
push
ror
movzbw
bt
sub
add
shr
mov
shl
rcl
mov
call
inc
lods
dec
mov
mov
gs
xchg
dec
cmp
cld
lea
pop
out
vcvtsi2sd
jg
inc
mov
jbe
or
divps
and
data16
sub
inc
lods
push
or
xchg
dec
ficompl
jl
sub
pop
or
roll
jno
inc
xor
or
xor
pop
ljmp
filds
shlb
ds
pop
or
sub
movb
rep
mov
lea
pushf
jmp
inc
scas
dec
mov
mov
mov
mov
xor
mov
add
es
clc
pop
or
outsl
jo
add
adc
mov
xor
sbb
xchg
jl
jl
dec
add
xchg
shlb
xor
dec
or
pop
shlb
int
and
sub
adc
js
pop
je
shrl
cmp
jle
addb
mov
ret
lret
outsb
add
or
pop
jno
movsl
js
mov
pushf
not
lods
jmp
hlt
imul
imul
mov
mov
repnz
mov
mov
aad
cmpsl
xchg
shl
xchg
in
aam
enter
mov
sarb
jl
fs
aad
scas
or
insb
mov
sub
sbb
xchg
mov
jge
jo
fldt
pop
jl
inc
dec
iret
fsubrp
xlat
dec
loop
jns
push
xor
movsl
mov
lds
cmp
sti
sub
inc
aad
imul
add
cli
popf
or
lret
test
imulb
nop
adc
mov
mov
or
mov
shlb
movsb
xchg
pop
mov
fstl
mov
push
cmp
nop
ret
xchg
mov
js
sbb
ret
xor
push
cmp
mov
lea
jmp
daa
scas
popa
lods
cld
stos
sarl
xchg
jae
mov
sub
cmp
mov
int
gs
negl
fiadds
mov
shll
nop
mov
jp
cmc
nop
xor
aad
mov
lret
mov
mov
push
daa
mov
or
lahf
loopne
ret
push
ss
mov
jne
idivb
add
xor
inc
push
sarl
pop
fistpl
mov
mov
xor
and
push
jmp
sbb
jb
pushf
dec
sti
mov
lret
add
inc
arpl
data16
test
loop
test
mov
hlt
add
movsl
or
les
and
aad
or
jnp
or
xchg
mov
stos
stc
lods
out
jle
loope
andb
cs
out
push
cltd
cli
pop
lcall
and
mov
mov
jo
movsl
int3
sbb
scas
pop
or
xchg
or
gs
in
out
shl
push
out
inc
add
js
daa
push
add
xchg
mov
cmpsl
cmp
push
dec
rolb
and
mov
xlat
sub
jo
cmp
jmp
js
and
mov
fsubrl
rorb
inc
xchg
sbb
sbb
mov
mov
inc
cmp
mov
and
idivb
lahf
ret
mov
hlt
xchg
test
bound
lea
jb
call
cld
cmp
xchg
mov
std
scas
mov
les
xchg
push
fcmovbe
int
insb
cmp
stos
pmulhuw
jo
or
ljmp
add
daa
insb
push
cwtl
iret
mov
xor
leave
xchg
inc
adc
je
add
dec
and
pop
sbb
push
outsb
xorl
xor
clc
or
mov
lcall
push
jge
pop
cld
iret
mov
and
mov
dec
btr
add
mov
stc
cmp
stc
movb
add
movb
jmp
dec
jmp
inc
mov
xchg
mov
push
notb
call
or
mov
cltd
cmpsw
adc
fbstp
orl
push
xchg
lock
add
inc
sbb
push
pop
lds
dec
or
push
xchg
imul
in
adc
push
lea
mov
outsb
or
jno
and
sti
in
aam
or
lods
loope
shll
dec
stos
inc
add
mov
push
ret
into
and
cmp
inc
bound
or
mov
in
pop
mov
scas
mov
mov
icebp
movsb
mov
fldl
lret
mov
sub
mov
shl
mov
clc
clc
add
test
pushf
clc
movzwl
test
or
mov
cmp
movw
add
pusha
clc
cmp
cmp
mov
push
cmc
test
jmp
mov
add
stc
mov
mov
mov
hlt
popa
dec
mov
lea
ds
lods
lahf
push
lahf
rcl
loop
push
xor
adc
mov
das
add
mov
stos
clc
sub
sbb
outsb
jbe
movsl
addr16
rcrb
xchg
xlat
sub
push
int3
add
cmp
lret
pusha
int
sub
rorb
dec
mov
iret
cmp
inc
mov
mov
cmp
ret
lret
push
mov
xchg
lods
mov
mov
mov
mov
in
xchg
scas
stos
mov
loop
in
xchg
mov
mov
in
mov
cmpsb
mov
mov
mov
mov
cmpsb
stos
scas
mov
test
test
mov
in
mov
jmp
lds
movl
jl
mov
pusha
and
mov
movsb
fadds
aaa
mov
cmpsl
in
cs
add
psllq
in
scas
xchg
orb
mov
stos
lret
pop
xchg
mov
mov
adc
jecxz
aas
std
aaa
cmc
cmp
pop
addl
or
push
lahf
or
xchg
inc
jne
and
adc
dec
pop
xor
hlt
inc
icebp
mov
xor
pop
jge
xlat
inc
mov
stc
mov
inc
movsb
cmc
mov
clc
sub
stos
jl
ds
sarb
repz
fnsave
outsb
inc
shlw
inc
mov
lds
mov
insl
mov
lock
push
enter
inc
add
adc
out
subb
xlat
pop
adc
notb
in
scas
and
addl
inc
add
shll
jle
or
mov
lret
cli
popf
sbb
out
loope
daa
cmp
mov
sbb
ja
mov
lret
js
stc
mov
jmp
into
jg
mov
xchg
aam
pop
call
out
lods
jns
ffree
push
fstpl
mov
lea
hlt
inc
mov
mov
ficompl
jge
int3
jno
mov
mov
xchg
add
mov
xor
pop
fstl
iret
sbb
jge
loope
fadd
std
adc
inc
add
fwait
pop
adc
cmp
push
xchg
pop
stos
ficoms
mov
cmp
loopne
jmpw
lret
push
daa
jp
cwtl
xlat
inc
mov
stc
mov
adc
and
test
lret
mov
jbe
jb
or
push
push
xor
divb
pop
sbb
rclb
lods
sahf
mov
std
mov
fnsave
stos
fs
xchg
xchg
jo
faddp
adc
xlat
pop
mov
lea
out
mov
divb
sub
mov
in
lret
jbe
mov
cwtl
mov
stos
in
shlb
jns
mov
or
pop
icebp
lds
mov
stc
mov
sbb
addb
movb
sub
sbb
aad
push
adc
js
repnz
ret
enter
mov
push
mov
out
sbb
dec
out
leave
jns
aas
loop
sub
dec
dec
push
outsb
add
cmpb
inc
jecxz
in
jo
mov
pop
insb
lds
icebp
jo
mov
fldt
movsl
cwtl
fwait
push
inc
hlt
xlat
sbb
mov
pop
addr16
mov
adc
cmp
icebp
and
mov
clc
lea
ret
test
cs
xor
mov
push
cmpxchg
rolb
sub
iret
inc
leave
pop
push
push
aam
sbb
stos
pop
and
leave
popf
mov
pop
cmp
js
jne
dec
or
repnz
cmp
out
add
lcall
popf
jo
mov
sub
cmp
xor
pop
clc
pop
sub
fsubr
into
icebp
dec
jns
ja
sbb
lods
out
pop
sub
pusha
mov
inc
adc
lcall
int3
inc
jge
sbb
cmc
ja
in
mov
sub
sahf
call
ja
mov
jle
jb
test
or
cmpsb
inc
xor
xorb
pop
je
mov
push
rcrb
mov
mov
out
mov
adc
mov
shlb
neg
sbb
imul
les
jae
ja
ficompl
in
adc
arpl
aam
or
sbb
mov
bound
push
cmp
sub
jl
mov
bound
je
lfs
add
pop
inc
lea
out
or
cmp
pusha
int
clc
xchg
idivl
loope
inc
shll
sub
sbb
xchg
decl
jbe
dec
add
push
test
lods
inc
inc
ret
cs
jnp
cmc
jmp
cmp
mov
sahf
xor
pop
xchg
leave
cvtps2pi
xchg
imul
pop
xor
arpl
insl
add
jge
mov
add
xchg
mov
jecxz
add
subl
movsb
xchg
int3
pop
in
subl
push
std
lods
xchg
xchg
call
jecxz
mov
dec
mov
mov
movsb
xchg
mov
cltd
xor
les
aad
shld
or
mov
dec
out
pushl
sbb
out
test
and
xor
mov
pop
sub
add
inc
insl
sbbb
sahf
lds
out
push
xor
mov
stos
and
idivl
nop
out
push
sub
sahf
arpl
inc
mov
imul
and
adc
rcrl
xchg
enter
push
mov
inc
and
pop
sub
pop
arpl
iret
ficoms
sbb
cmp
clc
bt
cmp
push
movb
jmp
pushl
inc
pushl
pushf
pusha
pushf
adc
pushf
pushf
movb
pushl
ret
pusha
movb
dec
movb
mov
shr
movb
call
aam
mov
cmp
in
in
outsb
cmovo
repz
sbb
sbb
mov
cmpsl
jle
mov
xor
out
and
sub
es
aaa
stos
jnp
push
ja
pusha
xor
nop
xchg
mov
adc
mov
sub
addr16
add
fldcw
addr16
mov
mov
dec
or
xchg
ds
cmpsl
jno
jg
sub
pop
push
pop
or
ret
out
or
bound
dec
out
sub
dec
mov
shlb
xor
in
imul
push
decl
bswap
call
sub
bt
pushf
clc
repnz
jmp
aaa
movsb
push
jg
mov
lods
insl
into
incl
shlb
xor
std
mov
in
mov
aad
js
aaa
lret
jl
es
cmp
jle
out
and
mov
inc
xchg
mov
imul
inc
pop
jbe
scas
add
cli
jns
daa
mov
loope
xchg
adc
cwtl
pop
movaps
xchg
pop
pop
xchg
adc
les
jge
jl
dec
nop
lahf
mov
rcrb
xor
fisubl
push
xchg
xor
pusha
and
pop
mov
or
push
add
leave
sub
in
pop
jo
popa
int3
mov
in
or
je
mov
or
jnp
cmp
iret
movsb
rolb
js
out
in
cmp
iret
or
out
insl
sub
sub
sarb
sub
aad
subb
sub
xor
and
jns
shll
out
jo
or
inc
rclb
jecxz
gs
add
test
cwtl
cltd
mov
lret
mov
pop
ljmp
ret
fnstenv
mov
ds
inc
mov
imulb
cmc
iret
and
dec
adc
push
jmp
popa
mov
repz
xor
cli
dec
sub
pop
jmp
mov
lods
sahf
ljmp
cmp
daa
jbe
and
or
mov
pop
clc
stc
outsb
pushl
cmpsb
mov
call
ja
sub
call
movsl
test
pop
inc
je
stos
out
insb
adc
add
push
ret
ss
mov
cmp
das
nop
xchg
xor
inc
mov
inc
sahf
scas
iret
cmp
ja
jbe
jb
or
cwtl
test
and
mov
fcompl
test
push
movl
daa
jae
mov
xchg
lcall
jmp
pop
loopne
ja
push
repnz
int
mov
jmp
push
not
xchg
fdivrs
xor
ja
xchg
das
rol
lea
push
mov
ret
sti
push
xchg
lds
sub
std
xorb
push
inc
push
inc
push
dec
xor
cs
insb
add
insb
lea
sbb
sub
fwait
movsb
adc
cmp
inc
jg
mov
ds
mov
ja
push
mov
imul
int
dec
push
std
jo
xor
push
fcoms
repz
mov
cwtl
lret
push
xor
jp
inc
mov
in
fmull
loope
mov
sub
push
dec
inc
dec
dec
xor
cs
insb
add
push
jnp
mov
pop
pop
or
mov
bound
aam
aas
in
push
or
push
jmp
clc
sub
mov
pop
push
sbb
add
fs
xchg
mov
mov
cmc
lcall
pop
clc
add
call
inc
mov
in
inc
loopne
loop
push
inc
cmpsb
repnz
rolb
dec
std
daa
fdivs
xchg
sub
mov
xor
iret
test
cmp
dec
lea
jb
and
add
cmpsb
jns
fisttps
stc
mov
mov
shlb
pop
cmp
leave
jl
insb
fmuls
cmp
stc
je
mov
lods
jg
outsl
and
xchg
mov
outsb
add
mov
jmp
repnz
mov
cld
dec
pop
call
inc
push
pop
inc
mov
das
jp
cmc
mov
jne
std
in
insl
pop
jg
cmp
jb
mov
mov
mov
jnp
mov
gs
bound
loopne
shlb
add
xor
inc
and
mov
cltd
outsl
lods
dec
jne
sbb
mov
aas
and
xchg
mov
or
pop
call
xor
insl
jo
lock
mov
push
and
jp
mov
mov
jne
out
adc
cli
fwait
or
jmp
mov
add
jae
lds
sub
iret
and
outsb
dec
shr
mov
mulb
fstpt
stos
and
mov
mov
jbe
push
and
jmp
cmpsb
imul
lret
mov
or
loopne
and
lret
mov
inc
mov
call
in
addb
pop
data16
sbb
push
sbb
jne
lahf
push
sti
mov
fbld
mov
stos
push
lcall
jecxz
sub
out
lea
pop
or
loop
sarl
fstpl
push
out
mov
add
ja
inc
adc
push
mov
fs
fs
and
xor
add
das
in
jecxz
sbb
inc
cli
sub
jecxz
in
nop
shrb
add
add
cmp
fsubrs
inc
inc
xchg
pop
stos
push
jnp
lahf
int3
es
cmp
shlb
fs
jb
clc
clc
call
xorb
int
fwait
mov
bound
sbb
gs
pop
arpl
xchg
adc
call
scas
sub
fmull
movsl
pushf
mov
mov
sub
out
cli
jnp
outsl
enter
mov
mov
test
pop
frstor
gs
div
daa
cmp
mov
and
mov
cmc
jns
push
rcrl
out
mov
jnp
push
into
scas
mov
rol
adc
subb
mov
arpl
stos
push
dec
push
push
leave
xchg
gs
mov
testb
mov
popf
push
jbe
add
push
iret
jno
xchg
jo
mov
mov
inc
ljmp
add
mov
lock
call
sub
iret
std
sar
sbb
mov
hlt
fbstp
cmpsl
mov
push
cmp
xor
jmp
cmp
mov
mov
hlt
rcl
cwtl
mov
int
enter
push
ss
divl
popa
adc
ljmp
dec
mov
jno
addl
cltd
pop
ret
adc
mov
mov
add
loop
pop
ja
mov
test
mov
add
add
dec
xor
cmpsl
jb
xor
mov
stc
jno
cltd
mov
pop
into
jnp
mov
lods
push
ret
out
enter
sahf
adc
test
into
std
insb
sbbl
jno
mov
popa
mov
add
push
xor
mov
into
jg
test
jno
sub
xor
int
mov
xchg
adc
sub
lret
adc
mov
mov
dec
pop
cmc
stc
mov
xchg
bound
dec
icebp
mov
ja
int3
int
push
mov
js
fisttps
xchg
leave
mov
push
xchg
enter
ret
mov
rcr
addr16
into
popf
dec
testb
xor
push
or
leave
adc
test
popa
lahf
pop
call
les
sbb
cld
pop
pop
int
xchg
lods
mov
mov
cltd
xchg
pop
ja
mov
adc
push
and
mov
mov
dec
sbb
pop
fnstenv
ret
jp
xor
jae
mov
cmp
mov
sar
xor
into
push
cmp
aam
mov
push
sbb
push
fisttps
in
test
or
adc
push
fidivs
les
dec
loope
leave
loop
test
scas
or
jmp
unpcklps
inc
out
mov
jnp
insl
enter
mov
jno
mov
pushf
testl
lea
xor
mov
aad
xchg
xchg
xchg
adc
aad
int
mov
loope
jmp
pop
std
adc
pop
jnp
dec
xchg
dec
cmpsb
xchg
add
stos
loopne
jb
xchg
mov
xchg
lds
xor
lret
inc
movsb
imul
lods
pusha
xor
xlat
dec
loop
pop
mov
and
xor
xchg
xlat
mov
incl
int
test
shr
imul
cmp
out
lret
jmp
jp
mov
adc
cld
adc
xor
fidivl
shrl
in
stc
pop
andb
fwait
xchg
shl
xchg
test
leave
test
push
jmp
out
pop
lods
mov
sub
fwait
ja
adc
mov
lret
jnp
loop
fcoms
sub
aaa
int3
vminpd
mov
pop
fimull
mov
xchg
sub
add
jnp
movsb
lods
mov
xor
into
xchg
xor
push
add
cs
add
popf
aas
xor
lcall
xor
dec
xchg
push
mov
push
fwait
movsb
or
test
or
pop
dec
jne
sub
int3
sub
dec
imul
in
roll
or
mov
dec
fisttpl
xor
mov
lret
dec
mov
xchg
call
mov
cmp
test
pop
lds
cltd
ret
mov
pop
sub
icebp
in
add
add
lds
rorl
loop
dec
jo
dec
push
icebp
jno
cmpsb
mov
mov
mov
movsb
dec
hlt
xor
rcll
std
or
xlat
rcr
jl
aad
adc
in
xchg
mov
or
call
push
mov
out
aad
inc
fsubp
sbb
mov
or
xchg
sbb
mov
xlat
mov
inc
ret
mov
mov
cmp
push
das
cmc
test
sahf
int3
test
xchg
aam
adc
in
fwait
add
adc
cmpl
aam
dec
mov
dec
dec
daa
ror
xor
imul
dec
or
subl
shll
ljmp
jae
add
jae
push
dec
sub
push
xor
push
test
jmp
pop
cmp
lods
test
mov
push
in
lret
or
dec
iret
jg
mov
pop
inc
ret
int3
xor
je
ja
cmc
icebp
pop
in
push
add
inc
dec
push
push
xor
iret
jbe
inc
pop
sub
inc
dec
pop
sar
or
jno
sbbl
andb
jbe
into
xor
ljmp
mov
sub
sbb
sahf
xchg
jg
in
mov
push
mov
cmovs
pop
ret
cmp
mov
mov
lret
dec
hlt
insl
jmp
cmpsl
jae
mov
out
push
ss
cmp
leave
pop
add
xor
add
in
outsl
int
push
lahf
sbb
stos
or
subl
mov
dec
inc
aad
mov
loopne
int
mov
cmp
dec
inc
in
mov
shll
fnstsw
rorl
mov
addl
jbe
dec
cmp
sbb
push
stos
push
jae
mov
movsb
or
rolb
cltd
inc
xor
test
in
xchg
loopne
adcb
jo
int
and
cltd
adc
xor
adc
or
loope,pn
enter
outsb
sub
stc
shll
dec
mov
or
popa
pop
scas
mov
ficomps
and
push
test
fisubs
sti
mov
into
inc
ja
xor
pop
jno
jae
or
fadd
movsb
shll
pop
lods
xor
stc
xchg
or
mov
mov
test
test
loope
test
mulb
or
mov
inc
mov
test
add
sub
and
pusha
xchg
xchg
rorl
leave
pop
sbb
test
cmovnp
mov
test
adc
mov
xor
lret
decl
in
addl
jmp
mov
pop
test
jne
popf
ljmp
cltd
jp
dec
mov
ret
pop
mov
mov
test
mov
pcmpgtd
cmp
pop
pop
inc
leave
push
dec
stc
jl
or
xorb
lods
sub
xchg
dec
fs
push
xchg
adc
mov
repnz
dec
dec
iret
mov
push
xor
push
ljmp
xchg
mov
push
jnp
mov
dec
or
push
xor
popf
enter
inc
lds
movsb
cmpsl
jb
xchg
pop
fst
test
pop
xchg
enter
xor
out
enter
jno
sbb
test
stc
fnstenv
movsb
adc
scas
xchg
test
xorl
xchg
mov
dec
mov
inc
rolw
ret
cmpsb
and
je
fsts
mov
ret
xor
cltd
mov
adc
jns
jb
pop
xor
cs
cmp
xchg
mov
push
xchg
mov
in
dec
sbb
or
push
cs
jl
adcb
loopne
xor
mov
add
xor
dec
inc
fwait
mov
jg
sbb
jns
xchg
xor
test
in
pop
push
pop
push
sub
push
dec
sbb
and
lock
cmp
rcrl
mov
mov
xor
mov
ret
sub
test
int
push
xchg
lret
test
test
inc
fwait
dec
or
mov
or
xor
dec
mov
jo
mov
xor
dec
pop
or
mov
pop
sub
outsb
xor
xchg
aad
inc
add
inc
push
test
and
mov
test
add
mov
jns
ja
xchg
mov
xchg
movl
mov
cs
mov
fistl
cli
cmp
xor
add
xor
mov
mov
and
cmp
fldcw
adc
adc
ror
enter
xlat
add
popa
pop
add
loope
mov
cmpsl
enter
add
ffreep
in
pop
leave
in
out
push
sub
cmc
pop
inc
cmp
xchg
ret
xor
in
sar
hlt
outsb
leave
cs
cltd
push
mov
mov
mov
dec
popl
jb
jmp
pop
or
int3
mov
mov
jno
lea
or
cli
fisubrs
pop
cwtl
add
inc
inc
jge
or
xor
or
mov
nop
insl
jne
rcrl
dec
mov
int3
mov
lret
inc
xchg
cltd
gs
lock
test
add
mov
subl
shrb
or
pop
fwait
jecxz
movsl
repz
inc
dec
mov
in
pop
sbb
jl
into
fdivs
leave
adc
jg
mov
imulb
add
movsb
cmp
sbb
add
leave
test
subb
mov
cmpsl
sarb
dec
repnz
insb
xchg
inc
fcom
in
jp
mov
push
cmp
test
inc
cwtl
dec
or
int
into
jge
in
xchg
mov
test
scas
add
subb
pop
xchg
adc
test
je
mov
popf
call
mov
xor
jo
mov
xor
cmp
mov
xchg
out
jge
adc
kmovb
fldcw
ret
dec
sub
pop
push
or
movsl
pop
add
cld
mov
cmpb
adc
mov
scas
mov
scas
mov
leave
inc
xor
lret
sub
popa
fnstsw
mov
xor
aad
dec
cmp
int
mov
aad
mov
and
pop
cltd
pop
cs
ret
jge
pop
sbb
and
dec
add
je
out
pop
push
shr
pop
jo
int
ss
loop
mov
stos
test
jo
sub
notb
inc
fstps
leave
shlb
jmp
xor
in
idivl
leave
or
lret
adc
add
xor
shlb
fnsave
inc
int
sbb
vunpcklpd
dec
mov
adc
sub
cmc
std
call
leave
inc
loopne
cltd
jmp
sbb
call
fnop
or
inc
mov
cmp
or
in
stc
sub
push
cltd
gs
sarl
lds
push
mov
rcl
mov
xor
vhsubpd
inc
fiadds
and
lds
fnstcw
or
or
mov
rorl
stc
adc
pop
inc
js
loopne
and
stc
dec
dec
xor
call
test
mov
xchg
add
icebp
ret
push
loope
cmp
mov
jno
nop
jge
fdiv
xor
sub
dec
dec
andl
pop
xor
adc
xor
movsl
dec
sub
jns
mov
aad
mov
pop
andl
fldl
sub
clc
push
fadd
mov
adc
call
jmp
lods
shrb
rcrl
jge
in
test
mov
loope
mov
push
or
and
cmc
inc
pop
or
sub
popa
sub
push
xchg
cmp
add
leave
jmp
idivb
leave
inc
loope
or
vpcmpeqw
int
inc
sbb
dec
add
push
xor
or
dec
sub
lock
aam
ret
jg
xor
lret
cmpsl
addl
mov
pop
jno
leave
movsb
dec
pmulhw
xchg
stc
lahf
sub
cmp
movsb
mov
mov
test
pop
or
add
pop
fnstcw
pop
or
jcxz
test
lods
test
lret
adc
in
dec
mov
adc
hlt
cld
sub
cmp
mov
mov
jmp
aaa
jne
rcrl
pop
dec
mov
movsl
test
pop
stc
dec
xchg
mov
mov
inc
in
push
popf
adc
rol
cmc
popf
call
aam
pop
or
arpl
jl
test
call
into
insl
rcl
add
repz
cmovno
fnstenv
xchg
sub
bound
dec
jl
xchg
mov
dec
cmp
loopne
shlb
or
xorb
test
sub
xchg
mov
jl
jl
leave
test
lods
pop
and
es
jne
shll
xchg
enter
sbb
or
fxtract
out
outsl
jo
cmc
adc
xchg
lods
aam
pop
mov
cld
es
cltd
lock
clc
ja
test
xlat
mov
jmp
sub
pop
jno
popf
mov
leave
inc
mov
jmp
mov
mov
in
jne
xchg
mov
mov
clc
stos
test
jg
aam
sahf
mov
add
test
cmpsl
gs
dec
inc
fsubr
jb
and
mov
mov
inc
xchg
jo
scas
or
movsl
sub
jb
fwait
subw
xchg
ret
mov
mov
xchg
fsubl
pop
shrb
mov
push
aam
pop
dec
xchg
outsb
sti
shl
test
adc
dec
cmp
sbb
xlat
xor
mov
adc
enter
push
xor
mov
inc
jmp
inc
shll
into
clc
mov
sub
notl
or
push
cli
movb
arpl
sub
xor
mov
test
daa
mov
push
jecxz
jne
add
lcall
rorl
fmulp
mov
mov
fwait
gs
push
or
xlat
add
adc
and
mov
cmpsl
jno
mov
jno
add
mov
push
add
add
jo
mov
and
mov
add
mov
cmpsb
adc
sub
jle
inc
insb
sbb
xor
sub
dec
leave
fcoms
dec
icebp
jae
lret
mov
or
insb
mov
jb
cmpsb
stos
inc
test
mov
clc
and
into
pop
jno
repz
pop
out
dec
roll
cmp
dec
mull
int3
loop
sbb
aad
pop
mov
dec
out
repz
imul
adc
add
loope
in
cmpb
mov
mov
pop
pop
pop
fprem
stos
xlat
arpl
roll
push
bound
repnz
or
ljmp
rolb
jmp
add
loop
aam
adc
mov
pop
dec
test
jae
mov
testl
stos
movsb
cmpsb
lahf
mov
jp
jo
les
dec
sbb
pop
mov
xor
add
lret
test
adc
les
xchg
mov
xor
test
xchg
dec
cmc
mov
add
mov
xorb
clc
jno
mov
cmpsb
jo
inc
mov
inc
cltd
jae
mov
add
push
mov
xchg
test
test
movsb
xlat
ret
int3
add
inc
sbb
fdivl
mov
dec
ljmp
sub
xor
sbb
add
neg
dec
rcll
insl
mov
xor
mov
or
shll
mov
orb
sbb
outsb
xor
imul
sub
jbe
roll
dec
add
test
push
inc
mov
dec
push
sarl
test
inc
aam
sbb
loop
dec
sarl
call
dec
out
ret
insl
mov
into
dec
mov
out
mov
divl
fnsave
jns
into
dec
mov
mov
xor
test
jp
bound
inc
xchg
enter
leave
cwtl
jne
ja
mov
pop
sbb
shll
mov
inc
mov
xor
mov
mov
test
inc
sbb
xchg
xorb
xchg
mov
adc
mov
je
sbbl
pop
out
or
lods
and
push
mov
pop
or
sub
dec
pop
mov
pop
pushf
push
add
popa
add
vmovaps
sub
adc
dec
enter
fisubl
sub
aaa
in
outsl
pop
jmp
loop
stos
fcomps
popa
xchg
or
leave
unpckhps
fisubs
pop
mov
sbb
mov
push
clc
add
imul
jmp
in
out
fld1
les
out
into
shl
push
pop
sub
xor
or
lods
dec
movsb
dec
push
insb
fsts
adc
aas
pushl
insb
test
ds
pop
sarb
fldl
ret
pop
pop
xchg
push
std
arpl
ja
pop
in
int
jne
mov
push
mov
pop
enter
add
arpl
pushf
jno
test
xchg
inc
bound
rclb
mov
hlt
nop
pop
imul
pop
ret
pop
pop
jg
sbb
push
fs
scas
inc
or
cli
iret
xchg
mov
sbb
test
rcll
cmc
inc
jecxz
mov
sub
add
cmpsb
seta
add
pop
push
lods
fidivrl
add
jne
mov
xor
sbb
fsubrs
nop
xchg
cmp
mov
mov
shlb
and
loopne
dec
sahf
incl
lahf
mov
fisttps
in
mov
xchg
lods
mov
push
mov
cmpsb
frstor
mov
fidivl
dec
jecxz
jne
mov
enter
movsb
mov
inc
loope
lahf
mov
mov
sbb
dec
xor
jno
fisubl
or
jecxz
dec
int3
outsb
arpl
pop
test
out
and
adc
mov
divl
xor
imul
mov
insl
outsl
ljmp
jo
out
call
cmpsl
mov
mov
out
scas
addb
push
sbb
jae
jno
int
xorl
cmc
dec
lcall
or
inc
mov
xlat
ret
bound
jae
sti
insb
dec
xor
xchg
adc
sbb
cmp
mov
and
cmc
test
orb
xor
push
cmpsb
bound
mov
daa
or
stc
dec
mov
jl
andl
mov
nop
mov
int3
enter
pop
popa
fsubl
mov
push
inc
inc
jns
out
pop
mov
fwait
mov
or
pop
repnz
mov
xchg
jecxz
cltd
imull
jmp
xor
inc
lea
into
xlat
mov
cmpsl
aaa
rcrl
push
test
mov
or
sub
roll
test
xchg
inc
mov
mov
adc
stos
dec
mov
lea
pop
pop
push
inc
xchg
or
xchg
shlb
mov
gs
les
mov
out
lods
mov
adc
test
add
mov
xor
adc
mov
xchg
jl
cmp
sub
mov
movsb
push
xchg
and
pusha
jecxz
adc
into
jno
sti
sbb
jae
notb
xor
sub
jb
mov
mov
loop
repz
pushf
es
mov
stos
mov
bnd
stc
mov
xor
cltd
mov
insb
std
ds
jbe
adc
jmp
sbb
sbbb
movsl
push
inc
push
mov
dec
mov
jl
shrb
mov
das
mov
dec
push
inc
push
pop
gs
jae
icebp
mov
pshufw
mov
pop
jle
pop
ret
xchg
mov
out
mov
loope
mov
or
xchg
mov
mov
iret
test
add
mov
test
pop
mov
xor
push
mov
mov
aad
mov
sbb
lods
inc
filds
mov
in
addr16
xor
sbb
mov
icebp
das
mov
xchg
inc
sub
jae
push
cmp
adcl
rclb
xchg
or
xchg
add
leave
cmp
nop
jmp
inc
test
add
mov
rol
imul
adc
loopne
scas
ret
inc
add
mull
stc
inc
shll
push
mov
mov
outsl
mov
sbb
fstl
popf
ffree
orb
scas
xlat
dec
mov
adc
outsl
mov
push
in
jne
mov
inc
cltd
ja
xlat
out
xchg
cmp
fwait
inc
mov
sbb
dec
mov
rcrl
and
xor
mov
adc
push
iret
mov
ret
xchg
and
xchg
add
popf
inc
scas
cmp
mov
mov
and
mov
loop
jmp
sub
mov
lods
imul
mov
gs
dec
fidivl
fnstenv
mov
lods
sbb
mov
inc
mov
or
lock
inc
daa
inc
lahf
mov
xor
pop
lcall
pop
mov
add
loop
je
ffree
sub
push
push
mov
add
mov
stos
movsl
cmpsl
mov
cmpsb
cmc
xchg
lahf
pop
sti
xor
adc
lret
or
dec
divl
xlat
add
pop
xor
jb
inc
and
in
mov
jbe
mov
cwtl
or
nop
lcall
pop
or
jmp
xlat
test
adc
mov
stos
lods
mov
sub
mov
cmp
fdivp
dec
xor
leave
xor
cmc
cmp
push
rol
fimuls
mov
xchg
mov
psllw
mov
sbb
mov
fwait
icebp
scas
mov
xchg
out
vpaddsb
mov
xorps
rol
loop
xchg
outsb
and
mov
aaa
jo
jg
sub
in
ret
xor
aas
icebp
ss
gs
jae
aas
or
jb
sbb
adc
inc
popf
int
ss
xor
xor
mov
mov
add
cmp
add
mov
leave
inc
cmpsb
xor
pop
pusha
mov
push
ret
aas
mov
ja
hlt
cmp
xor
or
inc
mov
mov
das
add
mov
push
sbb
xchg
in
iret
jo
into
jl
sub
rol
mov
mov
sahf
in
dec
cmp
js
jns
sbb
and
cmc
jno
sti
jmp
xchg
xor
inc
mov
stos
mov
test
daa
lds
push
push
movsl
adc
mov
lahf
jmp
add
inc
sbb
das
mov
inc
adc
gs
mov
out
xor
cmc
add
jmp
xlat
leave
data16
das
mov
jl
and
mov
xor
psllq
aad
test
pushf
rol
lds
pop
daa
popf
std
gs
mov
adc
in
add
popf
mov
movsl
test
fimull
mov
jno
mov
int3
loope
jge
fwait
or
hlt
mov
repz
ja
or
jbe
xchg
add
cltd
inc
sub
pop
inc
mov
mov
shlb
cmp
lea
mov
imul
mov
push
fcompl
sub
cmp
mov
mov
aad
out
xchg
xchg
sub
in
mov
pop
inc
cltd
mov
lcall
mov
gs
dec
mov
xchg
mov
or
adc
or
adc
pop
mov
lahf
xor
sarb
sub
mov
push
test
xor
pushf
mov
sub
pushl
dec
pop
mov
aas
or
data16
dec
jae
ret
or
mov
mov
jmp
insb
jle
mov
es
jecxz
pop
mov
leave
add
sbb
icebp
das
aaa
mov
inc
or
adc
test
adc
je
cmp
or
mov
push
jno
or
cs
sub
leave
mov
sbb
inc
imul
pushf
cmp
cmp
test
add
xchg
mov
out
les
inc
xlat
es
xor
fs
add
sbb
jno
lahf
hlt
and
mov
jecxz
xchg
mov
ret
fwait
mov
mov
xorb
adc
and
ret
pushl
dec
add
test
inc
mov
addr16
subl
outsl
fisttpl
mov
test
push
pusha
push
rcr
mov
es
shll
inc
cwtd
xor
sti
scas
imul
mov
push
pop
pop
jmp
adcb
js
mov
mov
fcmovb
faddp
cmpsb
mov
icebp
lock
popf
aas
enter
adc
repnz
lock
push
fstpl
bound
jno
dec
fbstp
test
lods
aad
loopne
xor
popa
mov
stc
lds
fbld
pop
jno
or
dec
jecxz
lods
andl
sbb
shll
or
pop
roll
cld
xorl
and
shll
inc
ljmp
nop
lret
dec
xor
push
aam
and
fsubrp
test
adc
rcrb
rol
mov
hlt
pop
adcb
and
icebp
push
xchg
inc
sbb
jns
popf
out
mov
pop
pop
into
and
mov
mov
push
fstpt
mov
repnz
sub
add
mov
mov
sub
cmp
popf
leave
mov
ficoms
jge
mov
mov
add
fdivl
pop
lcall
mov
sub
sub
icebp
and
mov
mov
sub
je
mov
shl
ret
lahf
dec
xor
nop
fistpl
xchg
dec
mov
sbb
bound
shlb
rcl
leave
in
mov
adcl
popf
mov
sub
repnz
adc
out
dec
dec
into
cmp
ret
jno
jbe
jmp
pop
pop
mov
inc
add
bound
adc
adc
or
inc
mov
mov
xor
push
jmp
dec
jle
shrb
and
nop
cmc
ret
lds
adc
and
aam
nop
push
mov
cltd
xlat
sub
jno
mov
mov
push
mov
imul
fistpl
mov
pusha
push
into
fucomip
pop
ds
push
gs
mov
outsb
and
cmp
pushf
mov
mov
add
scas
jge
xchg
jo
xchg
mov
pop
xor
loop
mov
mov
ljmp
cmpsl
repz
iret
lods
mov
cli
sub
cmc
or
lock
mov
adc
mov
addb
mov
cmp
sbb
andl
mov
sbbl
xchg
or
xor
ret
orl
popa
push
into
sar
dec
orl
dec
divl
inc
icebp
mov
pop
rolb
dec
xor
xor
jnp
push
pop
jbe
mov
cmpsl
or
jmp
loope
sbb
movsl
push
sti
arpl
mov
and
xchg
icebp
dec
hlt
mov
sti
dec
dec
jmp
adc
nop
xor
sub
iret
mov
mov
inc
test
call
xor
aad
pop
ret
lods
ficoms
cwtl
pop
sub
and
mov
fdivs
es
sub
and
inc
bound
and
xchg
test
out
jne
sbb
outsb
inc
pop
test
cltd
and
jns
aad
dec
aad
xchg
roll
mov
das
mov
das
pop
jne
or
fistl
add
cwtl
mov
add
push
test
das
sahf
icebp
xchg
xor
mov
xchg
or
mov
inc
jno
mov
stos
pop
sbb
dec
movzbl
mov
out
xor
shlb
mov
mov
repz
jg
loop
xor
js
inc
xlat
fidivs
clc
mov
cli
int3
jne
inc
mov
dec
aad
xchg
das
xor
xor
nop
aad
xchg
ret
icebp
ret
jg
mov
ret
in
inc
xchg
sub
lcall
mov
sbb
xchg
je
jno
aam
cmp
and
enter
xchg
and
push
pop
mov
jae
push
jnp
sti
mov
pop
cmp
or
inc
aad
mov
mov
jne
dec
xor
aad
add
inc
sbb
test
adc
mov
les
push
ret
mov
mov
lods
push
mov
rolb
xchg
mov
pop
sbb
pushf
mov
push
xor
inc
add
stos
test
fsubl
or
mov
add
adc
cld
mov
or
jle
stos
fiadds
repz
ds
pop
xchg
or
notb
jbe
dec
or
ret
filds
add
jb
loop
rorb
or
iret
sbb
mov
push
cli
enter
pushl
dec
fidivs
jmp
add
adc
enter
cmc
mov
inc
gs
or
dec
jl
sub
jecxz
push
xchg
clc
out
mov
int3
cmp
fdivs
aad
and
add
mov
or
scas
push
lods
inc
mov
xor
cmc
leave
notl
repnz
inc
outsb
les
mov
out
leave
push
mov
fstpl
jbe
adc
mov
jae
xor
dec
dec
mov
je
pushf
shrb
addb
inc
mov
sub
and
xchg
mov
or
aad
test
sbb
mov
stos
pushf
push
mov
aaa
push
xor
mov
sarb
jmp
out
push
dec
cmpsl
push
icebp
in
sbb
mov
jne
or
icebp
mov
fcompl
mov
outsb
gs
sub
and
aaa
mov
mov
mov
mov
push
push
adc
popf
sub
cmp
and
mov
aad
test
add
popf
xchg
cwtl
jmp
xor
inc
nop
pusha
dec
add
not
pushf
mov
xchg
sub
lods
call
inc
shll
clc
xor
sbb
xor
or
repnz
fs
inc
mov
mov
cltd
aaa
sub
je
js
fwait
pop
mov
mov
mov
cs
sbb
mov
or
scas
add
cld
adc
sbb
cmp
inc
stos
insl
xor
pusha
xchg
sbb
adc
fbstp
nop
std
ret
jb
mov
add
insl
inc
pop
mov
pushf
lcall
leave
mov
into
sub
mov
mov
mov
das
pop
ja
inc
cld
xlat
cmp
out
cltd
scas
mov
outsl
movsl
clc
xor
mov
add
stc
pop
loope
sbb
divb
das
or
mov
mov
pop
mov
push
loope
sarb
pushf
dec
mov
mov
jbe
stc
aas
dec
scas
adc
pop
out
add
mov
pop
repnz
push
mov
lret
inc
mov
mov
icebp
pop
fistpll
ret
out
or
jmp
mov
add
in
mov
cltd
xchg
roll
mov
nop
push
pop
push
mov
and
clc
xchg
addr16
sub
jbe
popa
jne
mov
jp
inc
cmp
sarl
xor
mov
outsb
xor
push
sbb
adc
push
repnz
jmp
sub
leave
loope
jle
xor
mov
jmp
xchg
sbb
inc
cs
push
pop
cltd
mov
jmp
mov
jae
jmp
pop
out
rol
push
mov
mov
lods
mov
jo
inc
test
arpl
lock
lret
mov
sub
jl
xor
xchg
xchg
push
add
addb
mov
pop
loope
mov
add
cmc
mov
mov
push
or
decb
dec
cli
loopne
xor
ret
sbb
scas
mov
or
or
push
jnp
mov
scas
call
xor
mov
xchg
shll
pop
fcomip
lahf
xchg
mov
adc
outsb
test
adc
push
jb
cmp
call
mov
xor
stc
xchg
not
shl
mov
bt
mov
test
cmc
xor
movl
dec
call
jl
adc
mov
jl
into
aas
shlb
xorl
popa
mov
lock
incb
arpl
dec
add
jle
stos
push
mov
or
test
test
in
fimuls
push
ret
fwait
outsb
pop
xchg
add
jo
mov
mov
daa
arpl
cmovo
mov
or
popa
xor
cmpsl
stos
or
lahf
dec
rorb
mov
dec
dec
nop
xor
roll
sub
dec
sub
mov
lret
incb
js
xor
fsubrl
scas
out
fsubp
out
ja
and
add
xchg
in
idivl
out
xor
aam
dec
jle
mov
pop
mov
bound
mov
dec
loop
sbb
gs
pop
aaa
dec
xchg
stc
mov
pop
fisttpll
outsl
add
xor
aam
xchg
pop
sbb
or
je
jns
mov
or
inc
ret
and
rorl
pop
push
fiaddl
lahf
cltd
inc
add
xchg
std
ja
aam
push
push
sbb
test
ret
test
xchg
or
push
call
xor
and
dec
iret
ret
cmp
popa
fs
xchg
cmp
dec
addr16
sbb
pushf
push
lea
mov
pusha
push
push
pushl
ret
je
and
mov
xorl
fmuls
sub
fisubl
lret
decb
push
and
dec
xchg
out
xlat
aam
xchg
stos
imul
sub
mov
clc
inc
sahf
in
dec
mov
dec
movsb
bnd
adc
cmp
dec
mov
popa
sbb
or
loop
mov
fs
xchg
pop
mov
xchg
rcl
dec
fidivrl
mov
sub
imul
or
stos
jle
movsb
inc
sub
xchg
cmpsb
cltd
push
inc
mov
dec
fnstsw
stc
mov
cmp
push
add
pop
clc
jmp
xchg
inc
mov
stos
mov
sbb
xlat
push
fimull
mov
inc
lea
xchg
push
sahf
sbb
jg
push
or
xchg
cmp
mov
xlat
mov
mov
mov
iret
jecxz
sbb
sub
sub
mov
push
sbb
pop
std
lahf
mov
dec
sti
cs
cli
cmp
hlt
out
mov
int3
outsl
fsubrl
movsl
mov
stc
xchg
push
stc
mov
mov
out
mov
mov
xor
lock
inc
push
mov
dec
orl
mov
pop
fisttps
adc
cli
xor
xlat
and
pusha
sbb
nop
push
mov
dec
sub
mov
call
jle
ds
pop
mov
inc
aaa
movsb
and
psrld
fildl
xchg
imull
cmp
int3
inc
pop
cltd
hlt
adc
out
insl
mov
pushl
popl
cmc
cmp
call
mov
add
stc
mov
leave
sbb
cmp
loop
je
sbb
sti
mov
aaa
test
clc
inc
cmp
js
mov
mov
dec
mov
leave
adc
mov
mov
push
gs
cmp
jecxz
repnz
fisttps
in
jbe
mov
call
xchg
or
cmp
or
pusha
lret
andb
or
mov
dec
sbb
push
es
addr16
xchg
jo
rcrb
repnz
mov
jne
test
mov
ljmp
mov
cmpsb
mov
cmp
push
in
dec
out
xor
jmp
fsubrl
push
stc
mov
int3
std
push
punpcklbw
xchg
out
mov
push
cmp
cli
sub
xor
add
or
orl
mov
mov
enter
iret
xchg
and
scas
in
mov
sbb
pop
repnz
cmovl
js
adc
push
add
push
xchg
sub
sub
xchg
xor
in
lea
icebp
push
das
call
mov
mov
sub
into
iret
and
jb
xchg
jne
repnz
int3
and
cmc
adc
lret
scas
push
push
sbb
call
cmp
mov
sbb
or
or
aaa
pop
lods
pop
sarl
test
outsl
push
pusha
sti
int3
cmp
cltd
test
adc
out
pop
inc
ja
push
add
addr16
iret
js
xchg
add
out
ret
jecxz
clc
add
mov
les
jp
pushf
cmovb
fistl
data16
mov
out
sbb
pusha
es
fldt
out
das
in
je
cld
dec
xchg
sbb
push
out
mov
arpl
jle
fildl
ffreep
imul
dec
adc
lret
adc
and
pop
xchg
push
xlat
andl
int
xchg
cmpsb
or
repz
cld
dec
and
push
dec
stc
mov
xchg
fsubr
lcall
cmp
leave
xchg
mov
movsl
sub
cmpl
fcmove
inc
or
lea
fwait
divl
in
inc
test
aaa
xchg
lods
inc
push
insb
scas
iret
iret
cmc
or
sub
adc
xor
pop
or
loop
out
out
push
or
mov
and
jne
xadd
mov
clc
sub
shr
stc
sar
shld
mov
test
test
test
clc
sub
pushf
pushl
popl
push
pushf
call
jmp
clc
cmc
add
bt
pusha
cmp
mov
clc
mov
clc
stc
movb
clc
cmp
call
ja
inc
dec
stc
mov
or
ds
adc
xchg
adc
mov
out
ret
adc
loopne
pop
sub
mov
adc
mov
ds
sub
outsl
jae
mov
in
mov
push
dec
mov
sub
fisubrs
cs
rcll
dec
jo
out
or
xor
or
push
fucompp
inc
call
inc
outsl
push
gs
imul
popa
jae
dec
bound
arpl
fs
jne
movzbw
btc
bswap
shld
mov
dec
sub
add
xor
movsbl
mov
cmp
sub
jmp
or
dec
stc
mov
pop
mov
bnd
in
xlat
mov
jmp
aaa
fidivrl
fimull
sbb
mov
or
fwait
mov
xchg
dec
jl
mov
pop
in
ja
jge
sahf
rsqrtps
dec
sub
push
and
mov
push
not
fsubrs
int
jg
push
xchg
push
mov
adc
out
popa
push
leave
fcomi
pop
mov
sbb
mov
insb
lea
aas
inc
movsb
mov
pop
fistps
mov
pop
push
sahf
popa
sbb
das
add
pop
jl
pop
add
xchg
daa
pop
jle
mov
repz
xor
in
scas
jo
push
icebp
bound
pop
add
pop
aas
cld
jae
sarl
mov
adc
iret
jo
addb
sbb
cltd
and
add
mov
mov
fisubs
push
fnop
jge
pop
and
push
mov
lahf
test
pop
test
insb
mov
loopne
cmp
pop
adc
mov
fisttpl
mov
in
cmp
stos
jmp
mov
or
xor
or
sbb
ret
imul
das
pop
popf
jmp
dec
mov
mov
out
and
movsl
repz
jne
or
insl
mov
add
cmp
fildl
sub
data16
or
adc
adc
push
sub
sub
lods
pusha
and
pop
fbstp
mov
xor
pop
push
jecxz
dec
popa
sahf
pop
dec
stc
mov
mov
push
mov
xor
cmpsl
cli
lods
ljmp
fwait
into
pop
adcb
xchg
mov
jmp
addb
and
pop
iret
jnp
enter
pop
adc
adc
dec
sub
mov
fbstp
add
mov
pop
and
inc
add
sbb
jl
sbb
cwtl
add
or
mov
mov
mov
and
clc
sub
faddl
inc
leave
sbb
shlb
stc
mov
mov
andb
push
fmul
cmp
out
mov
jae
dec
or
xchg
or
hlt
mov
fistl
and
bound
lret
lock
push
das
sbb
pop
sub
mov
push
jecxz
les
scas
jne
xorb
lods
xchg
popf
cmp
mulw
mov
gs
and
popl
mov
int3
incl
jne
jmp
add
pop
repnz
test
fwait
or
dec
stc
mov
sbb
call
pop
inc
pushf
lcall
and
cmc
bound
mov
shlb
sbb
daa
mov
mov
cmp
add
fisubrl
in
je
out
xchg
das
rorb
nop
dec
push
dec
sub
dec
xchg
sbbl
push
mov
mov
popf
xor
xchg
xchg
dec
mov
addl
fsubrs
ds
xor
add
lea
mov
in
or
shlb
xor
aad
pushf
push
push
sbb
jmp
aam
lret
sub
lret
cmp
sub
jo
ds
mov
in
inc
das
int
aad
mov
mov
push
mov
xchg
xor
iret
and
aad
sub
out
mov
mov
sbb
sub
jae
pushf
mov
imul
rcll
and
mov
cmp
push
add
pop
mov
xlat
and
add
cmc
or
cmpsb
imul
dec
stc
mov
addb
and
lret
outsb
sbb
out
ljmp
cs
push
inc
cmpsw
pop
jmp
rclb
sub
leave
mov
cmp
incb
xchg
sub
add
jo
fs
jb
test
pusha
cmp
call
dec
test
mov
add
out
fdivrs
ficompl
shrb
add
pop
xchg
jl
mov
jecxz
jbe
mov
fdivrs
pop
rcr
push
xchg
fists
call
hlt
jns
lret
loope
adc
jecxz
and
ret
xor
ja
and
gs
sbb
es
dec
out
and
adc
cmp
adc
jg
jge
iret
sti
outsb
jb
movb
subb
movsb
jne
sti
xchg
mov
dec
mov
mov
and
xchg
or
inc
stc
mov
jge
das
mov
cmc
test
aad
jmp
pop
cwtl
cmp
xlat
dec
addr16
or
aaa
mov
adc
pusha
pop
or
mov
gs
push
mov
and
hlt
ret
lods
imul
xor
scas
mov
mov
out
in
and
xlat
pop
cmp
and
ja
xchg
inc
jns
out
fs
xchg
inc
out
xor
mov
push
dec
stc
mov
roll
sbb
xor
leave
lcall
lahf
leave
pop
stos
out
pop
jg
dec
cmp
mov
adc
and
xor
dec
outsl
das
outsb
jne
mov
sbb
push
cmpsl
ret
xor
push
jbe
jge
dec
imul
mov
pop
add
data16
ret
add
sub
fstps
lock
jbe
in
popl
xor
pop
rorl
daa
mov
mov
push
xchg
cltd
cmp
inc
inc
and
cmpsl
xchg
lcall
jle
push
test
aas
inc
loope
push
lahf
jecxz
xchg
or
sti
mov
stos
pop
mov
pop
push
jbe
scas
imul
xchg
adc
scas
xor
jae
call
xor
adc
hlt
idivl
sbb
scas
add
insl
sbb
call
fs
je
call
xchg
add
and
lcall
mov
xchg
sbb
scas
test
test
mov
out
and
sbb
inc
add
mov
xchg
mov
fdivr
pop
pop
pop
lea
add
sbb
or
xorb
pop
or
inc
and
dec
out
add
cld
jmp
mov
mov
sub
hlt
mov
aaa
dec
shll
mov
fcomps
xchg
push
lea
jg
adc
or
adc
sub
mov
xor
enter
pop
adc
fcomps
cs
or
mov
orl
loopne
dec
inc
aas
and
and
test
mov
pop
movl
test
js
lods
cmp
lea
lret
out
add
mov
adcb
sbb
cmp
inc
stc
mov
call
pop
dec
pop
mov
xor
aam
lds
aad
xor
popf
jge
in
mov
add
iret
bnd
xor
inc
xchg
push
pop
lods
insl
xorb
xor
mov
mov
es
jo
cmp
ds
jb
xor
sbbb
int
mov
or
sub
or
cmp
xchg
xor
test
mov
stos
cmp
push
inc
sbb
jge
xchg
jbe
loop
fiaddl
int
aas
jo
shl
xor
xchg
push
or
idiv
jecxz
pushf
push
dec
icebp
lods
add
clc
pop
jle
jbe
fisubrl
pop
jg
sbb
push
aas
cld
push
shl
lds
js
xlat
arpl
inc
pop
dec
or
cmpsb
rclb
sbb
mov
ss
loope
jae
ja
mov
add
ss
jp
or
sub
lods
out
and
idiv
pop
jo
ss
jl
push
xchg
lcall
mov
mov
sub
mov
mov
pop
in
dec
cmp
daa
dec
push
or
and
inc
or
mov
stos
icebp
cmp
shrb
test
scas
pusha
lods
test
dec
xor
mov
shll
adc
cli
mov
sbb
adc
xchg
cs
stos
push
pop
mov
roll
and
test
push
nop
inc
push
cmc
sbb
push
lea
je
bt
ja
movzbw
add
neg
dec
ror
mov
clc
cmc
bt
add
bt
push
bt
test
mov
pop
dec
cmc
mov
test
call
adc
inc
stc
mov
sbb
mov
shl
jb
inc
add
xlat
enter
daa
or
sub
cmc
or
loopne
push
mov
call
adc
cmp
pop
push
fnstsw
or
in
and
xchg
dec
loop
sbb
pop
pushf
aam
fcoms
cmp
jae
mov
sahf
mov
sub
cmp
fstpt
loope
pextrw
push
push
in
pop
data16
mov
adc
pop
lret
dec
and
xchg
mov
push
decb
sbb
icebp
xor
jecxz
xchg
or
insl
push
pop
mov
loop
cwtl
xchg
sub
loopne
cmc
inc
cmp
orb
out
insl
shrb
sub
dec
xchg
push
adc
add
loop
or
adc
out
sahf
xchg
jle
add
adcb
fbstp
and
int
int
fmull
xchg
xchg
scas
loop
dec
add
or
divb
bound
xor
mov
aas
and
xchg
movsb
dec
leave
ret
jle
insb
shrb
ja
jae
daa
pop
leave
lret
pop
sbb
cmp
adcb
xor
bound
mov
mov
mov
push
xchg
inc
mov
jnp
inc
sbb
mov
inc
in
mov
xor
inc
test
xchg
jns
jno,pn
mov
fs
dec
and
out
scas
xchg
jecxz
add
pop
push
out
push
aas
pusha
mov
repnz
xor
dec
jge
mov
push
add
loop
es
fmull
test
pop
push
adc
xor
add
hlt
lds
lods
inc
stc
mov
sub
lret
sbb
ds
push
cmp
push
pop
push
lcall
cmpsb
cmp
cmp
lock
push
dec
or
gs
mov
test
cmc
scas
adc
inc
dec
in
jae
loopne
repnz
sarl
int
mov
sub
in
cmp
popf
lods
xchg
addr16
lret
push
jmp
jmp
xchg
inc
stc
mov
add
stos
mov
stos
les
scas
rcrb
arpl
dec
mov
jg
les
test
icebp
or
mov
mov
stc
xor
insl
mov
pop
lods
jp
mov
xorb
jecxz
nop
psubb
mov
push
addl
popa
pop
ljmp
add
cmp
adc
add
dec
lahf
scas
sbb
adc
mov
dec
mov
mov
roll
pop
fdivl
add
es
sub
push
jne
mov
push
in
daa
sti
shlb
ljmp
inc
stc
mov
cmc
addr16
ficompl
addb
mov
dec
adc
rclb
mov
cmp
sbb
sub
fwait
jno
and
movsl
pop
adc
and
adc
aas
and
lret
sub
jg
inc
jg
clc
push
push
js
aas
inc
mov
int3
pop
in
dec
or
cmp
xchg
mov
jno
flds
imul
and
push
push
xor
or
icebp
cs
leave
push
leave
divb
xchg
xchg
idivb
sbb
xchg
xor
test
inc
add
cmp
mov
bnd
aas
stc
mov
fisubrs
aam
xchg
sbb
push
test
stos
pushf
fldz
ljmp
inc
mov
mov
and
add
pop
in
inc
xchg
adc
and
xchg
lods
ja
arpl
bnd
pop
je
push
push
int
out
pop
das
scas
aas
jmp
pop
xorb
xchg
push
repz
call
inc
add
icebp
mov
pushf
lea
jmp
or
movb
mov
ror
xchg
push
rcl
xchg
not
push
rcl
and
adc
adc
push
rol
mov
and
ror
mov
xadd
mov
shl
and
xor
call
pushf
lea
je
neg
bsf
inc
setge
mov
btr
call
jle
ds
stc
mov
sub
mov
jne
or
mov
pusha
repnz
jg
add
addr16
dec
inc
adc
mov
pop
leave
cmpsb
sub
add
data16
aad
pop
lret
cld
xchg
mov
dec
rol
sbb
mov
fs
dec
cmp
push
sbb
pop
inc
sbb
stc
mov
add
daa
js
push
in
sbb
outsl
mov
and
or
ljmp
imul
in
insb
xrelease
lock
iret
in
test
int3
shll
and
and
mov
shrb
add
jmp
jns
push
lock
xchg
rcrl
out
rclb
adc
pop
fstpl
dec
shlb
or
xchg
and
mov
sub
notb
mov
in
enter
cmp
andl
push
fcomp
mov
sti
mov
stc
stos
stc
dec
fstpl
pop
jmp
call
iret
push
jo
sbb
mov
iret
adc
push
shll
negl
jle
jge
mov
sub
jl
inc
add
dec
lcall
shrl
notb
pop
mov
mov
and
jge
mov
mov
xchg
aaa
push
mov
pop
xor
xchg
mov
xchg
or
cmp
push
or
nop
ret
push
fistps
lret
lods
cmp
mov
scas
loopne
inc
dec
addr16
stos
pop
stc
cmp
cmp
mov
mov
fstps
rol
adc
inc
adc
sub
insl
xor
mov
lret
popa
mov
rclb
scas
stos
in
cmp
stos
loop
popf
jne
loop
adc
sbb
into
adc
lds
mov
dec
or
mov
cld
rclb
lods
lock
jne
lcall
popf
xor
or
add
or
push
mov
aas
adc
mov
in
imul
push
les
js
mov
lret
or
inc
jmp
lret
dec
sbb
popl
jae
inc
rcrb
ret
pop
push
mov
xlat
icebp
loop
test
in
fildll
mov
jmp
jge
gs
fs
sub
movsb
lcall
sub
pusha
sti
sub
add
inc
test
sub
sahf
or
jno
aaa
push
pushl
lea
call
call
cmc
cmp
repnz
pushf
jmp
lods
and
cmp
mov
mov
jl
push
mov
aam
pop
stos
ja
mov
xchg
dec
pop
lock
enter
rclb
adc
mov
pop
cmc
aas
int
lods
out
xor
out
xchg
jnp
loop
pop
cltd
sub
mov
inc
push
adc
fimull
mov
mov
inc
loope
inc
ss
mov
nop
sar
ljmp
mov
mov
ja
imul
add
cmp
out
pop
cli
xchg
or
cmp
mov
or
mov
imul
pop
sbb
les
outsl
repnz
pop
mov
out
shll
lock
mov
xlat
lcall
sti
xor
clc
mov
call
std
push
cmp
mov
cmp
fwait
mov
mov
test
gs
mov
mov
pusha
pop
std
dec
ret
hlt
and
mov
jge
jle
pop
int
sub
mov
sbb
or
out
pop
lea
add
sti
jmp
xchg
sub
sub
insl
cmpsl
dec
cmpsl
inc
imulb
pop
and
in
sub
pop
fistpl
pop
rcrb
imul
cltd
outsl
loopne
outsl
mov
push
xchg
or
pop
add
sub
lds
stos
ficoms
je
into
shrl
cmp
mov
add
xor
mov
mov
stos
jnp
dec
add
mov
mov
sbb
dec
fsubl
out
gs
mov
dec
or
sarb
ret
sbb
out
mov
or
std
ret
inc
jo
shll
iret
int
movsl
jg
shlb
cld
test
jo
loop
stos
push
cmpsb
cmp
ljmp
aad
jnp
push
add
stos
mov
xor
sti
lea
jbe
bt
mov
bt
bsf
ror
sbb
add
bswap
call
lea
pushf
movl
call
inc
scas
dec
cmp
mov
scas
mov
lds
jecxz
lea
jmp
jno
addb
push
adc
loopne
int
nop
icebp
mov
cwtl
js
lock
pusha
ficoml
mov
pop
ljmp
test
stos
inc
scas
mov
sti
pushf
or
jb
push
mulb
ret
cmpsl
js
in
js
ds
out
sbb
and
mov
shrb
in
sbb
repnz
xchg
mov
mov
jle
cmp
adc
fnstsw
subb
mov
out
and
add
out
cs
je
lock
popl
jle
inc
inc
push
jne
mov
jno
cmc
lea
mov
hlt
repz
cmp
jecxz
adc
xchg
stc
lret
xor
xchg
xchg
sbb
mov
adc
jno
xor
mov
dec
aas
adc
inc
add
cmpsb
inc
test
fimull
jne
pop
dec
xor
xchg
sub
stos
sub
cmpsl
inc
inc
inc
inc
sbb
sub
shufps
mov
mov
push
push
test
mov
dec
xor
ljmp
in
mov
frstor
sub
jbe
dec
rolb
inc
stos
jns
int
xor
push
loop
push
add
xor
hlt
jae
inc
mov
stos
fucom
inc
push
inc
add
push
xchg
loope
dec
dec
dec
dec
cs
insb
add
pop
cmp
mov
mov
jnp
insl
jle
add
push
in
or
mov
mov
pop
shl
js
inc
mov
push
ret
dec
sbb
insb
rcrb
sub
enter
add
xor
in
int
push
or
adc
push
cmpsb
addr16
mov
xor
or
cmc
mov
cmp
dec
jge
inc
push
lret
lea
in
jle
mov
pop
or
aaa
stc
mov
movsb
xor
adc
or
aas
std
lock
add
repnz
jae
mov
daa
rol
pop
sbb
push
pushf
mov
loope
outsl
dec
mov
mov
dec
push
add
pusha
sar
inc
and
mov
das
lock
out
add
lret
ds
push
testl
and
add
aaa
stc
mov
jge
ffreep
icebp
mov
mov
cmpsb
stc
dec
lret
dec
mov
lock
add
push
out
adc
inc
mov
fcomp
cmp
mov
jns
sti
loope
iret
push
scas
xor
negl
sub
imul
std
mov
mov
movsb
and
fistps
clc
loop
push
cmp
mov
test
movsl
cmpsb
daa
fcmovb
push
mov
sub
insb
fnstcw
xchg
push
jmp
and
aad
jnp
andl
pop
adc
call
and
add
inc
les
pusha
lea
ja
pushf
lea
jb
bt
cmpb
pusha
pusha
jmp
sbb
ss
mov
xor
gs
inc
or
push
jbe
push
mov
lods
sbb
scas
shl
pop
ficoms
add
sub
mov
add
fdivrs
cmpsb
sti
call
aam
sub
jne
adc
mov
repnz
test
add
sub
mov
call
and
adc
and
cmpsb
cs
out
fwait
ds
inc
idivl
push
add
cltd
jl
iret
nop
pop
and
cmp
mov
aas
jo
and
and
fiaddl
mov
mov
dec
and
jle
shlb
pop
xor
dec
rcrb
xchg
or
fcoml
shr
xor
xchg
nop
xchg
jns
adc
popf
aaa
pop
push
lret
xor
sbb
mov
xchg
or
lds
sti
sahf
push
mov
mov
inc
or
std
push
xor
mov
fxch
or
bound
xor
mov
jle
xchg
in
aaa
pop
stos
sbb
jns,pt
lock
and
xchg
mov
jb
cmc
insb
push
push
sub
sbb
add
sub
push
push
push
and
dec
mov
outsb
sbb
out
adc
or
in
pop
mov
sbb
xor
test
push
jg
mov
sahf
cmpsl
push
xchg
add
adc
or
std
push
scas
pusha
shl
adc
xchg
mov
mov
mov
push
daa
cmp
jmp
insl
cwtl
jne
icebp
fildll
popf
pop
and
movsb
loope
pusha
fsubrp
ljmp
adc
int
fstps
adc
mov
dec
sub
or
lcall
xor
mov
xlat
fimull
sbb
add
jl
ficomps
rol
push
sub
jmp
push
lock
std
std
mov
xchg
fdivl
dec
mov
dec
int
and
cltd
adc
pop
ja
xor
aam
jl
jge
or
and
dec
inc
jp
nop
aam
pop
movb
fsubs
ja
mov
push
loope,pn
inc
mov
jae
xchg
push
inc
movsb
inc
aad
xlat
data16
mov
fdivrs
jmp
sbb
dec
pop
int3
sub
test
sbb
jge
scas
adc
mov
cmpsb
test
add
fisubl
mov
ljmp
ja
cld
dec
pop
xor
push
add
lcall
cmp
dec
out
out
int3
repnz
mov
rclb
imul
fistpl
ret
mov
dec
enter
dec
nop
test
or
or
xchg
inc
dec
insb
dec
inc
cmc
js
mov
sti
subl
push
xorl
mov
repnz
xchg
push
or
or
mov
pop
inc
cmp
in
mov
sbb
fisubrs
adc
mov
out
imul
sti
int3
popf
or
xor
jge
jl
hlt
xchg
outsb
into
test
xor
mov
imul
cmc
xchg
outsb
jecxz
jno
cld
adc
js
add
xchg
pop
out
xor
mov
stc
mov
or
mov
inc
jle
pop
pop
xor
mov
push
jmp
mov
mov
xor
call
movzbw
and
mov
call
lret
xor
mov
push
cld
fisttpll
lds
sub
scas
stc
push
mov
negl
and
push
adc
out
pusha
shlb
and
push
sarb
mov
rorl
pop
pop
pop
push
mov
jmp
ja
nop
popa
and
xchg
add
lods
mulb
xchg
xor
imul
sub
mov
icebp
movsb
inc
cmp
in
pop
pusha
icebp
stos
int
and
testl
fists
adc
adc
sub
aas
ret
pop
jmp
test
cltd
in
dec
xchg
repz
pushf
jl
and
and
outsl
into
test
sub
je
jns
mov
cli
hlt
addr16
mov
jp
mov
xchg
in
mov
mov
mov
lret
ljmp
stos
pop
or
leave
push
incb
addr16
int
arpl
mov
std
mov
sahf
add
xor
mov
fists
push
jae
mov
xlat
cli
in
test
enter
pop
fisubrs
insb
insl
inc
insb
jno
inc
aad
stc
pushf
adc
jns
sbb
test
cld
dec
loopne
aad
sbb
xor
jge
jbe
inc
mov
dec
xchg
push
pop
lahf
hlt
inc
pop
xchg
dec
or
or
outsb
cmpsb
dec
adcl
adc
ret
inc
das
sbb
xchg
xchg
imul
mov
sahf
sub
out
pop
imul
lret
aas
mov
call
daa
or
add
icebp
test
cmp
movzbl
mov
mov
lea
cwtl
mov
call
and
adc
cs
adc
sub
mov
sub
mov
rcll
out
cmp
jmp
cwtl
loopne
pop
popa
out
push
lock
xor
add
add
add
repnz
pmullw
or
add
repz
dec
cmc
add
or
pop
rcl
jmp
jmp
cmc
or
xchg
pop
fsubl
repnz
call
jge
or
loop
or
pop
jb
shl
in
pop
icebp
shlb
and
push
and
push
mov
test
clc
jmp
das
push
adc
mov
and
mov
and
ljmp
add
and
fimuls
and
push
mov
jmp
xlat
mov
dec
lds
jae
mov
mov
enter
add
ja
or
leave
adc
cld
xchg
js
add
push
rcr
rcl
pop
mov
je
sub
lea
repnz
ret
aas
sarl
jno
xor
rorl
ret
adc
cli
xor
mov
xchg
mov
cs
jbe
mov
jne
gs
mov
and
mov
push
stc
cs
jge
xorb
dec
fcomp
mov
dec
mov
inc
sub
xchg
push
mov
call
mov
xor
ret
lret
or
dec
loop
leave
mov
or
adc
add
in
mov
mov
mov
andl
dec
repz
hlt
fidivrs
or
add
outsl
sar
or
aad
int
enter
fidivs
push
dec
fld
rcrl
mov
mov
xor
mov
mov
cmc
mov
dec
jno
icebp
mov
lock
test
enter
push
mov
mov
mov
sub
ja
jo
adc
jb
jbe
or
sub
sar
out
pop
dec
mov
mov
mov
icebp
or
cmp
shlb
xor
xor
shl
clc
xor
pop
dec
roll
cmp
jae
gs
mov
cmp
sub
dec
or
mov
fucomp
cmc
mov
jne
into
xor
mov
imul
mov
xchg
xchg
or
hlt
xor
mov
lds
jno
add
mov
cwtl
mov
mov
insl
test
leave
mov
xchg
cmpl
xor
negl
cmp
mov
je
mov
dec
data16
pusha
mov
cltd
cmpsb
test
icebp
mov
loope
and
mov
loope
cli
test
dec
dec
out
pop
leave
shr
icebp
mov
pop
sti
leave
std
icebp
dec
pushw
dec
leave
repnz
repz
pop
adc
outsb
jmp
cmp
inc
dec
leave
bound
mov
leave
pushf
ss
mov
pop
call
leave
imul
sbb
inc
mov
jmp
std
or
insb
mov
inc
lret
dec
icebp
lret
shrl
fdivs
es
imul
loop
leave
popf
xlat
inc
cmp
aas
dec
mov
pshufw
imul
stc
es
xchg
shrb
lds
cmp
add
mov
lds
les
cmc
inc
icebp
add
push
cmc
push
dec
jp
xor
int
xor
mov
leave
lret
lret
lret
repnz
fsts
repz
jg
sbb
incl
int
es
fldcw
shl
popf
pushl
pushl
fcmovnb
fnstcw
movsb
jmp
jnp
push
inc
int
mov
fwait
mov
push
loope
or
jle
test
cmc
pop
dec
int
or
call
mov
xchg
cmp
sbb
xor
out
jae
push
int
mov
jmp
mov
test
and
imul
shlb
not
xchg
cmp
inc
jecxz
dec
or
mov
or
and
or
iret
push
mov
adc
inc
or
mov
mov
aad
popf
xor
push
mov
or
cmpsb
pop
or
mov
iret
xchg
into
loop
leave
out
lret
nop
int3
pop
fisttpll
mov
or
mov
iret
push
into
xor
xor
or
ret
and
aas
mov
icebp
inc
mov
ds
lret
fwait
sub
or
mov
popf
ljmp
inc
xchg
mov
cltd
and
inc
ret
or
stos
out
stos
rcrl
imul
iret
jecxz
sti
rcpps
mov
gs
aaa
mov
push
rorl
and
ds
jns
xor
daa
mov
add
mov
int
cmpsb
iret
sbb
jp
inc
data16
imul
sarl
int3
mov
fildl
into
add
push
cwtl
cmpsb
xchg
lock
jle
cld
fdivl
xor
arpl
xor
jecxz
jecxz
loop
movsl
or
dec
cmp
pop
js
mov
aad
jle
add
idivl
shll
ss
mov
jno
dec
mov
jno
push
mov
rcrl
mov
and
push
shlb
divl
into
mov
ss
lret
nop
adc
into
ss
fistl
jb
sub
in
dec
fs
imulb
or
sub
inc
aad
dec
inc
xorb
fisttpl
icebp
ljmp
leave
stc
inc
mov
jle
rorl
gs
rcll
dec
imul
mov
xchg
int
lret
fbld
add
sbb
push
leave
or
xchg
lahf
jle
mov
leave
mov
loope
aam
jge
mov
jns
aas
test
into
mov
mov
lds
mov
lcall
or
std
jmp
repz
push
sub
lret
xchg
int
ljmp
data16
mov
repnz
into
cmp
dec
roll
clc
call
add
into
cmp
xor
mov
push
iret
mov
mov
loopne
push
shll
jno
dec
add
nop
loop
adc
add
repz
pop
frstor
ljmp
adc
add
and
iret
sbb
or
cmc
xchg
cs
es
das
push
ror
jmp
inc
shl
psllq
mov
add
cmc
and
add
inc
arpl
aam
out
lock
xchg
xor
movsl
negb
mov
ljmp
testl
leave
mov
and
or
sub
ljmp
jmp
push
jne
xor
and
xlat
add
jo
jo
arpl
add
lea
test
jmp
or
push
jmp
or
mov
mov
rolb
fists
js
arpl
lock
cmp
add
adc
mov
add
adc
add
in
dec
cmc
pop
int
cmc
or
enter
dec
in
inc
sbb
sbb
adc
cmc
inc
leave
mov
out
bound
push
arpl
mov
add
push
mov
aad
mov
jecxz
push
mov
pop
or
pop
lea
xor
sbb
inc
call
test
xor
or
scas
xchg
xlat
jmp
fmul
mov
inc
clc
xor
push
mov
jmp
movsb
fldl
mov
jmp
aad
mov
sub
ret
icebp
pop
arpl
lds
sbb
testl
arpl
loop
ret
cmp
iret
cs
adc
sub
xchg
or
pop
clc
mov
sbb
in
dec
add
lea
sub
or
shl
loop
repnz
mov
or
inc
push
mov
divb
mov
sbb
sub
in
les
add
mov
xchg
add
push
repnz
push
cmp
lods
leave
mov
sbb
insl
in
push
mov
or
adc
cmpsb
dec
xlat
inc
adc
jle
scas
inc
stc
ret
lock
leave
or
jle
loope
leave
ds
or
mov
push
leave
fstpl
ret
adc
xlat
stc
pop
inc
shlb
das
cmp
dec
in
xchg
leave
xchg
push
in
clc
mov
mov
leave
push
test
ja
mov
and
and
lea
int
stc
xchg
jmp
mov
adc
push
fldl
stos
test
xor
xor
pop
test
je
in
jmp
dec
out
inc
and
and
dec
das
iret
ds
sub
leave
pop
or
mov
push
ljmp
mov
popa
lock
incb
mov
xchg
aam
xor
lock
xor
mov
xor
xor
xor
loope
mov
adc
psubq
or
push
adc
add
sub
inc
scas
inc
stc
out
cmc
mov
mov
loopne
and
or
sub
test
pushf
dec
dec
mov
add
lea
call
add
lret
inc
dec
inc
in
and
loop
mov
or
in
mov
and
or
int
sub
and
clc
rcrl
jecxz
pop
pop
aad
faddl
loopne
mov
cmp
lret
adc
or
cmp
mov
sbb
mov
and
sbb
or
add
shrb
inc
or
xchg
push
aaa
repnz
dec
inc
daa
popa
call
and
add
or
adc
aas
jl
sbb
adc
xor
xor
dec
icebp
fadds
dec
add
xchg
loopne
adc
stos
enter
or
test
test
inc
rcl
mov
and
add
rorl
aad
or
fstps
rcll
adc
ss
pop
gs
xor
imul
sbb
daa
add
xor
into
push
mov
dec
hlt
lret
inc
push
fucomip
push
adc
ret
mov
inc
mov
cltd
fs
sub
pop
or
sti
rorb
sub
lret
dec
not
roll
hlt
stc
cmpsl
call
sub
push
or
rorl
cmpsb
das
ljmp
repz
add
add
test
call
cmpb
push
ss
jecxz
faddl
mov
or
or
mov
lcall
and
sub
adc
dec
adcb
inc
push
pop
mov
out
xchg
pop
push
stos
jmp
xor
mov
push
das
ds
out
xorl
pop
sub
shl
fnstsw
out
inc
mov
sub
call
push
jge
xchg
js
or
sub
pop
jecxz
loopne
mov
imul
inc
sub
int3
sub
hlt
add
mov
cmp
daa
jae
in
sahf
cmc
maskmovq
mov
inc
in
dec
std
xchg
jle
aas
xchg
dec
enter
in
xchg
mov
sub
gs
ret
jmp
psubq
push
insb
xchg
enter
test
inc
mov
lret
sbb
inc
mov
push
lret
popa
rcll
cwtl
push
jmp
mov
jp
add
xor
dec
sub
mov
and
sbb
cwtl
add
add
gs
sbb
call
add
shrb
adc
jmp
int
cmpsb
dec
int3
cmp
add
test
sub
or
mov
les
mov
movlps
sar
push
add
add
imul
adc
call
movl
pop
iret
sbb
stc
fwait
jge
and
stc
xor
xor
addr16
push
out
leave
mov
xor
stc
inc
rcr
cwtl
jne
loopne
add
xor
notl
popa
adc
pop
mov
or
shll
mov
mov
fprem1
int3
push
xor
in
and
add
leave
stc
adc
pcmpgtw
push
push
jmp
inc
cmc
adc
xchg
dec
cld
mov
jne
icebp
fstpt
ljmp
pop
push
mov
mov
xor
movsl
xor
adc
dec
lcall
xchg
out
or
jmp
mov
push
fisttpl
int3
add
or
mov
pop
mov
sub
std
ss
mov
xchg
or
push
or
inc
sub
or
daa
popa
xor
add
stos
sbb
and
std
call
int
ss
mov
or
aaa
aad
cmovae
ljmp
jmp
and
int
adc
sub
pop
inc
popa
sub
jmp
push
cmp
rcll
push
mov
cltd
cmc
inc
inc
aad
xor
mov
mov
push
int3
psraw
mov
nop
push
adc
dec
mov
mov
mov
stc
out
adc
adc
xor
pop
out
push
adc
lret
cmc
dec
inc
das
inc
int3
test
mov
xor
fnstcw
bound
push
lret
inc
popa
and
push
dec
xchg
add
scas
dec
cmp
xchg
push
cmc
jae
mov
mov
adc
loopne
aam
hlt
rcl
call
aas
clc
jmp
test
dec
fidivrs
cmp
decl
fsubrp
pop
push
jae
push
rcrl
loope
vpand
add
adc
xor
test
mov
lret
gs
ret
enter
xchg
invd
rcll
cmp
sub
mov
aam
adc
xor
or
sti
cli
xor
ud1
sbb
mov
pop
leave
mov
testb
sbb
aas
push
pop
fisubrl
stc
xor
pop
mov
adc
adc
je
mov
popa
jae
dec
in
or
jecxz
loope
sub
xor
dec
or
push
add
icebp
rcr
lea
fcmovne
inc
icebp
and
and
inc
add
fadd
popa
adc
pop
scas
add
sub
out
mov
cmp
sbb
push
or
out
inc
adc
push
aad
lahf
jae
imul
push
int
rcl
sub
sbb
outsl
or
adc
int
jbe
xchg
movsl
inc
repz
out
jmp
sbb
ror
mov
fistpl
dec
push
fucompp
adc
icebp
std
xlat
cmp
inc
icebp
enter
xor
inc
xor
loope
pusha
insl
in
mov
mov
cwtl
adc
cli
xchg
pop
ficoms
xor
and
cmp
jmp
mov
dec
mov
aad
pop
mov
stc
fistpl
popa
pop
std
sub
into
push
or
inc
adc
inc
dec
pop
jo
cwtl
aas
repnz
faddl
popf
sub
xlat
push
inc
das
cmp
test
jo
cltd
cltd
and
jg
imul
in
or
fistpl
aad
jo
xor
dec
or
add
rol
loope
pop
testl
aaa
sub
xchg
stos
add
icebp
add
in
lret
fnstenv
mov
int
mov
nop
pop
add
pop
call
xor
cmp
add
ja
ret
and
aad
dec
outsl
lret
outsl
inc
fwait
xlat
decl
mov
movsl
adc
dec
roll
or
adc
cmp
push
ret
inc
fistps
test
jmp
and
jae
cltd
inc
add
mov
cmpsl
push
xor
mov
mov
int3
stc
loope
mov
add
add
or
sbb
loopne
or
aaa
pop
imul
aas
add
cmp
flds
rcrl
xchg
dec
ss
iret
stos
jmp
mov
and
add
sbb
pop
xchg
dec
fucomip
add
dec
jecxz
je
add
js
xor
add
mov
add
inc
jecxz
dec
lds
sub
jge
pop
jne
push
fnstenv
popa
push
adc
or
cmc
xor
add
pushf
aam
dec
mov
iret
out
rol
mov
fisttps
pop
pop
cmc
xlat
pushl
arpl
dec
daa
add
inc
fwait
aad
in
aas
cltd
dec
fsts
push
jecxz
push
cmp
in
movsl
lds
test
mov
jmp
inc
pop
mov
sbb
daa
inc
cmp
test
enter
shrb
sub
cmpsl
xchg
mov
sbb
add
or
int3
mov
in
ror
lds
mov
out
roll
iret
gs
sbb
shlb
xorb
fisubrs
mov
or
leave
jmp
dec
jecxz
repz
fcmovne
repz
pop
iret
rcl
and
or
sub
sahf
popf
jno
push
cwtl
lahf
mov
lea
pushf
movl
jmp
lds
sbb
mov
jbe
push
mulb
mov
mov
inc
repz
xchg
push
sub
jnp
add
mov
inc
dec
into
out
sub
push
push
stc
shl
dec
or
movsl
cmp
insl
inc
arpl
test
and
add
sbb
rol
repz
mov
pop
inc
dec
lret
sbb
stc
jne
adc
pusha
movsl
dec
into
outsl
sbb
push
jbe
jae
pusha
fsts
sub
fs
les
and
and
jbe
push
jmp
inc
pop
jo
cmp
out
xchg
mov
pop
ret
adc
outsl
mov
in
xlat
and
cmpsl
jg
jne
test
nop
movsl
pusha
xor
sub
movntq
jae
sub
call
sbb
add
pop
stos
xor
inc
in
mov
lret
push
mov
mov
repz
jbe
add
fcomps
pop
fxch
jne
sbb
js
inc
add
sbb
arpl
adc
insb
pop
xchg
pslld
cwtl
sti
add
push
clc
xchg
mov
cli
or
and
ret
xor
test
jmp
adc
test
stc
mov
shlb
data16
call
pop
or
insb
push
push
std
mov
push
pop
or
push
ret
mov
or
jecxz
jae
sub
data16
pop
mov
mov
lcall
daa
cmpsb
sub
in
pop
xor
sbb
out
int
xchg
nop
cs
aad
push
pop
lret
into
inc
sub
sub
sub
add
ret
push
jns
pop
adc
push
sub
cltd
add
adc
or
add
adc
fs
jb
jmp
adc
sbb
mov
dec
mov
fs
push
jo
push
fucom
or
in
xchg
add
and
sbb
xchg
call
or
jne
lods
pop
jo
loope
sub
jo
fadds
mov
out
sarb
es
insl
test
add
adc
mov
lods
scas
adc
inc
adc
mov
sbb
mov
inc
addl
push
leave
imul
mov
pushf
jae
cmp
push
mov
lea
push
jp
rcrl
add
xchg
xorb
gs
jb
and
pop
push
mov
jmp
rcrb
les
inc
xchg
cmp
pop
pushf
mov
fcoms
or
outsb
fucomi
mov
mov
sub
mov
sub
or
mov
repnz
lcall
push
popa
loop
push
and
cmp
ret
es
pop
xchg
iret
cwtl
adc
mov
inc
jbe
dec
mov
test
mov
adc
stos
repz
inc
add
pop
cs
out
push
or
adc
cmp
inc
jmp
ja
jge
sbb
test
push
sub
adc
hlt
jo
xlat
push
xorb
jmp
add
adc
dec
call
stc
outsb
fwait
sbb
mov
xorb
push
imull
push
les
jecxz
add
out
or
push
add
jnp
lods
in
dec
mov
cmp
in
sbb
mov
inc
mov
pushf
stos
push
int3
test
mov
mov
jo
sahf
rcll
push
jbe
add
imull
pushf
in
pop
int3
mov
aam
ljmp
adc
sbb
mov
lock
xchg
adc
pop
mov
and
and
stc
mov
fimull
int
aas
and
jl
outsb
add
sub
je
in
out
je
test
rolb
add
aaa
add
imul
mov
mov
xor
lods
jae
jo
pusha
les
add
clc
ja
mov
sbb
out
cmp
sbb
out
add
xchg
xchg
and
and
jb
xchg
frstor
aam
jno
jmp
shll
out
xor
xchg
aaa
mov
mov
mov
xlat
ljmp
aas
lods
pushf
shlb
adc
cmp
push
jmp
call
push
mov
pusha
pushf
movb
pushl
ret
ljmp
mov
sbb
outsb
lahf
and
adc
inc
test
push
sub
xor
insl
loop
loope
or
arpl
movsl
es
push
xchg
scas
sbb
ss
dec
sbb
lods
xchg
rolb
xchg
mov
push
fnsave
mov
mov
cmp
xchg
lds
lret
pop
stos
sub
adc
or
aaa
cli
jns
divps
inc
hlt
and
int
xchg
mov
jmp
js
outsb
popa
mov
lret
inc
mov
pop
adc
test
or
test
mov
jmp
iret
cmc
sbb
pop
leave
add
and
ds
add
xor
xchg
jmp
mov
iret
push
jno
ds
mov
decb
sub
mov
popf
out
sbb
filds
leave
mov
out
outsb
dec
in
lods
and
insl
lret
and
mov
fsubrl
ja
or
mov
data16
push
lods
stc
addb
add
mov
mov
dec
repnz
movsb
loope
scas
jmp
out
insl
loop
inc
jb
xor
iret
ret
cmp
sahf
adc
call
test
popw
stc
mov
repz
es
call
or
push
ds
sarb
outsl
in
sub
or
popf
pop
out
and
mov
dec
sbb
repz
jge
fsubrl
insb
inc
es
mov
cltd
or
pop
pushf
loop
mov
aaa
dec
mov
cmp
pop
stc
mov
mov
imull
jp
in
mov
std
mov
lods
mov
lcall
jmp
fisubrl
xchg
jns
mov
sbb
xor
dec
mov
cmp
shr
mov
push
push
sub
aaa
hlt
jae
jno
test
test
push
pop
into
lahf
pop
dec
movsb
xor
mov
xor
cmp
xchg
add
lcall
loop
adc
mov
int3
jge
addl
aas
xorb
test
cli
lods
mov
jl
or
mov
sbb
stc
mov
into
jmp
and
roll
jae
imul
lds
add
push
nop
add
inc
call
test
cmp
fisubrs
out
pop
mov
cmp
and
or
js
xchg
out
int3
inc
popa
loop
mov
or
add
or
int3
cmp
inc
lea
push
fnstenv
push
stc
mov
cltd
stos
sbb
mov
mov
add
and
dec
cmp
mov
cmp
push
fs
call
add
add
repnz
sbb
daa
test
shlb
dec
mulb
mov
jmp
scas
outsl
scas
jns
sbb
add
cmpl
test
testb
xor
and
xchg
dec
into
out
test
js
mov
aaa
mov
push
sbb
dec
dec
fs
addl
mov
sub
mov
push
int3
jns
pminsw
mov
bound
jne
mov
jmp
sahf
push
gs
or
jp
mov
dec
and
in
sbb
scas
cld
xor
dec
flds
dec
lods
cli
dec
sbb
mov
xor
mov
ficomps
les
lods
push
ds
jp
aas
mov
lcallw
mov
lahf
jmp
das
lods
pushaw
jle
aaa
out
outsl
das
sahf
repz
pop
mul
fnstenv
xchg
mov
aam
movsb
mov
push
push
push
and
jp
pop
divb
fs
sub
push
repz
ret
push
adc
dec
adc
xor
adc
xchg
test
adc
scas
jo
mov
cmpsb
jecxz
mov
adc
push
fstl
inc
and
mov
xlat
xchg
sbb
xorb
xchg
aas
and
xchg
push
xor
push
cmpsl
out
fwait
test
and
fstl
xlat
or
pop
iret
mov
pop
test
add
inc
adc
mov
pop
imul
shlb
ret
xor
push
mov
xchg
gs
aam
int3
int
out
subb
sub
adc
test
das
cmpb
lahf
pop
into
and
lea
repnz
inc
dec
out
movsl
mov
mov
andl
pop
inc
xchg
cwtl
lret
dec
roll
fdivr
pusha
add
xchg
cli
adc
mov
jecxz
movsl
push
testl
insb
or
mov
xor
xchg
hlt
std
and
sahf
call
add
xchg
push
mov
sub
lods
cltd
scas
and
pop
enter
data16
mov
sub
flds
insl
xor
cmp
lods
sbb
popf
push
adc
ljmp
jg
lahf
test
add
lea
jne
push
pop
movb
lahf
jne
pusha
setae
mov
call
nop
int
adc
mov
in
xbegin
sub
and
andb
lret
jno,pn
shrb
push
in
into
or
dec
shll
xchg
sarb
cmp
in
push
or
push
xorb
ret
xorb
add
ret
in
pop
loop
lds
loope
sub
icebp
cmp
into
xor
mov
dec
stc
pop
ret
mov
add
cltd
repnz
jno
sbb
push
jmp
sub
imul
lea
out
sub
fs
jb
fldt
ss
lret
and
jl
and
fdivs
shr
shlb
sub
sarb
stc
mov
lock
mov
xlat
dec
leave
or
jle
popf
add
adc
dec
or
mov
or
aaa
cmpsb
cmp
mov
push
xchg
inc
push
push
xchg
sbb
ss
push
dec
stc
jl
jae
add
sub
rcll
jb
pop
adc
clc
ja
add
or
cmpl
adc
sub
xchg
hlt
xlat
sub
mov
mov
imul
stc
mov
sbb
mov
repnz
sbb
fisttpl
fcmove
imul
mov
or
xchg
cltd
dec
mov
in
testb
and
aad
adc
loop
adc
sbb
push
adc
scas
xchg
int
out
mov
fildl
push
or
push
pop
and
dec
cmp
push
lds
jno,pt
daa
jp
mov
pop
pop
cmp
es
mov
xchg
sub
mov
cmp
pop
inc
push
adc
mov
repnz
insl
xchg
xor
pop
push
mov
adc
jne
les
sub
mov
ret
js
lret
jbe
xor
out
dec
jbe
push
int
repnz
fbld
mov
cmp
test
jb
jge
xchg
pop
xchg
sbb
ds
ja
insl
pusha
xchg
cmpsb
pop
xchg
mov
lret
and
or
hlt
xor
adc
mov
shlb
push
adc
xchg
xchg
call
pop
jb
sub
sbb
in
push
mov
xchg
mov
addr16
imul
cmpsb
and
lret
cmpsb
mov
xchg
inc
inc
add
push
aam
repz
pop
cmc
es
lret
fstps
iret
cmp
pushf
mov
add
movsl
push
jno
fdivrs
imul
mov
mov
xchg
test
dec
dec
or
rclb
jbe
xchg
dec
cmp
jne
push
sbb
inc
xchg
or
xor
iret
nop
add
sub
ljmp
in
ret
sbb
repz
add
mov
loop
cmp
mov
jae
in
cmc
rep
nop
inc
or
into
in
inc
shr
sbb
pop
xor
add
add
add
sub
stos
les
js
js
leave
jmp
and
lock
xchg
jb
outsb
jg
gs
pop
shll
push
mov
or
les
pushf
insl
psubw
xchg
lret
std
sahf
pop
addb
pop
popa
or
push
or
in
out
mov
lods
inc
cld
icebp
in
jle
mov
out
outsl
sarb
jp
js
add
adc
aaa
cmpsb
mov
mov
jge
lret
xchg
xor
mov
leave
lds
movsl
fcomps
jno
ja
std
shlb
add
cltd
cld
xchg
insl
sub
shlb
push
or
sahf
out
andb
pop
pop
xor
dec
mov
push
clc
and
lods
stc
xorb
cmp
inc
xchg
loope
adc
adc
push
aad
dec
stos
mov
inc
inc
sub
repz
xchg
xor
push
sub
test
jmp
mov
outsb
add
outsl
add
mov
mov
dec
shl
inc
push
les
out
pop
xor
lret
mov
repnz
shll
stos
dec
fwait
ljmp
cltd
fnstsw
mov
out
decl
push
cwtl
int3
cvtdq2ps
add
lea
hlt
jmp
divl
sbb
cmp
mov
shlb
inc
cli
fnsave
mov
insb
dec
jb
jno
test
mov
or
mov
xlat
fmul
xchg
adc
xchg
mov
lret
push
nop
shll
stos
mov
or
sbb
std
xor
adc
cwtl
sti
mov
jecxz
iret
or
andl
and
adc
inc
addb
mov
in
mov
push
mov
pop
pop
cmp
or
iret
mov
adc
stc
mov
cli
jnp
in
pop
addb
mov
enter
lock
sbb
orb
inc
test
inc
add
inc
mov
sbb
or
cmp
test
jns
repz
in
mov
push
cmp
sti
push
mov
call
add
add
lcall
cmpsb
pop
add
daa
add
sar
add
pushf
movb
mov
mov
pusha
push
push
movw
lea
jmp
jnp
inc
or
mov
addb
stos
xchg
bound
repz
dec
pop
mov
std
and
nop
jno
mov
push
xchg
je
out
cmp
jge
mov
jle
xor
cmp
popa
mov
hlt
mov
pop
sbb
adc
cmp
cmp
daa
pop
dec
lcall
add
jae
ret
aad
fs
xor
js
mov
xor
xor
rcrb
sti
rcl
flds
and
ljmp
out
inc
aas
mov
insl
loopne
cmpsb
mov
mov
mov
xchg
call
or
mov
and
pop
dec
insb
mov
movsb
mul
jle
push
xlat
scas
xchg
push
mov
ret
lret
insl
ficoml
push
addl
adc
push
pop
jb
mov
cli
mov
jb
jae
xlat
loope
sti
sbb
icebp
jbe
mov
jne
xor
sahf
jnp
sub
divb
adc
jl
ret
jnp
mov
xlat
out
loopne
loope
addr16
scas
jmp
sarb
mov
out
scas
add
xor
daa
dec
fnstcw
pusha
mov
insb
dec
or
jecxz
adc
jmp
or
mov
push
iret
mov
sbb
push
adc
aad
dec
add
inc
mov
outsl
pop
or
ret
mov
test
rclb
inc
inc
movsl
mov
inc
test
mov
pop
cli
cmpsb
fisttps
jns
cmpl
lret
cmp
xchg
and
inc
clc
or
ret
sbb
adc
shlb
mov
or
mov
push
cli
and
lahf
pop
into
sbb
cmp
inc
leave
pushf
push
mov
mov
mov
test
inc
jmp
pop
jmp
xor
outsb
jno
jno
pop
data16
inc
test
mov
mov
mov
stos
lea
mov
cmp
in
roll
incl
sub
pushf
inc
pushl
pushf
movb
lea
call
push
adc
call
cmp
cmc
cmp
pusha
lea
jae
btc
rcr
and
mov
inc
mov
sar
btc
shl
bts
mov
clc
test
pushf
clc
xor
push
pushf
repnz
mov
lea
jne
not
mov
pushf
pushf
lea
jmp
xor
or
mov
jae
in
push
clc
stc
stos
fldt
int
jnp
enter
or
repnz
or
pop
and
pop
sbb
xor
sti
test
roll
push
cmp
pushf
sub
jp
jmp
xchg
pop
add
das
sti
leave
push
negb
notb
into
mov
dec
stos
and
adc
mov
inc
push
and
out
ss
cmp
dec
call
sahf
fistpl
or
mov
out
out
rolb
pop
mov
pop
pop
push
mov
scas
add
out
and
js
xchg
fpatan
mov
mov
jmp
stos
outsb
xor
bound
int
scas
ds
jmp
mulb
or
hlt
push
add
bnd
rorl
xchg
or
lds
aad
test
pusha
pop
fisubrs
es
or
ret
cmp
and
inc
popa
or
fisubs
pop
sbb
repz
jne
mov
pop
call
stc
mov
out
push
or
xchg
lds
pop
mov
pop
lahf
mov
mov
or
repnz
mov
out
xor
aas
mov
push
repz
ds
mov
pop
jle
out
or
int
mov
shll
popf
arpl
add
mov
popf
cmpsl
pop
sub
mov
lea
lock
daa
mov
nop
cmp
add
push
stc
fdivr
adc
jnp
xor
repnz
shll
push
add
dec
mov
stc
mov
xchg
aad
aaa
pop
fldcw
je
int3
addl
sub
mov
lret
and
jp
andl
mov
loope
movhlps
xor
js
sti
cmc
mov
cmp
in
jbe
mov
mov
mov
mov
xchg
inc
xor
xchg
int
arpl
mov
es
icebp
mov
xor
stc
mov
das
shlb
inc
add
or
ds
pop
fwait
sahf
xchg
pop
pop
mov
cmp
js
add
dec
add
movsb
xchg
outsl
push
aas
ficomps
cwtl
repnz
xor
add
repz
dec
in
stc
rolb
ljmp
mov
mov
jmp
rol
lret
ret
jbe
xchg
mov
hlt
data16
cmp
fsubrs
gs
cs
insb
add
insl
pushf
push
stc
mov
sub
jle
loopne
adc
add
movb
jg
aaa
lret
pop
dec
inc
push
sub
rorb
push
add
repnz
jge
sub
mov
mov
jecxz
loope
loop
repz
pop
fldcw
pop
lahf
adc
inc
push
push
xchg
jle
push
xor
add
and
lods
js
movsb
ljmp
test
imul
mov
cwtl
fildl
std
loopne
cmp
push
hlt
stos
sbb
adc
pop
xchg
bound
stc
mov
in
mov
push
lahf
rclb
out
xchg
loopne
push
loopne
stc
pop
shll
xor
test
or
stc
fildl
movb
int3
pushaw
addl
xchg
push
push
rorb
je
insl
loop
push
stc
pop
sbb
ret
sub
jmp
lods
dec
or
cli
icebp
and
adc
mov
jl
jl
je
stos
add
incl
adc
sarl
mov
repnz
into
popa
inc
mov
add
push
and
mov
aam
out
dec
mov
lods
outsl
pop
out
pop
arpl
rolb
loop
mov
inc
shl
xor
jp
test
test
jne
dec
outsl
inc
jge
test
mov
lahf
inc
lahf
push
ret
sarb
lahf
repz
pop
push
push
nop
inc
mov
ss
pop
sbb
dec
push
push
stos
pmullw
aas
mov
adc
dec
loope
shrb
push
sbb
call
cs
pop
sbb
mov
push
fsts
xor
jbe
adc
sbb
pop
int3
sub
adc
data16
mov
lods
into
iret
shlb
mov
in
in
push
push
scas
subb
mov
inc
scas
mov
add
sbb
mov
addr16
addr16
jp
push
or
mov
inc
mov
dec
mov
loopne
pop
mov
aas
push
in
mov
mov
imul
pop
and
lea
jb
cmc
bt
cmp
push
lea
jae
pushf
not
lea
jns
mov
bswap
mov
movzbw
mov
pusha
lea
jmp
mov
lea
jmp
les
enter
pop
das
mov
xor
hlt
in
addr16
pop
sub
inc
push
mov
aam
fistpl
adc
mov
push
push
jnp
cmp
pushf
or
gs
jb
push
and
pusha
ror
jae
mov
out
pop
movsl
and
int3
fneni(8087
adc
dec
sub
dec
enter
stc
iret
cmp
jecxz
fyl2xp1
addr16
or
dec
mov
das
sbb
fdivr
add
jne
test
dec
sbb
and
jmp
xchg
inc
testl
jg
sbb
mov
outsl
mov
add
and
sub
adcl
mov
cmc
std
sub
cmpsl
dec
inc
shrb
or
mov
mov
insl
xchg
lcall
dec
mov
scas
loopne
jg
and
adc
inc
inc
dec
jnp
addl
or
icebp
pop
test
cmp
push
pushf
movw
lea
je
bt
cmp
pusha
mov
call
movb
lea
jne
movzbl
mov
dec
mov
pusha
sub
cmc
shr
bt
lea
pusha
bt
bt
cmc
sub
pushf
push
cmp
pushl
popl
cmc
jmp
ss
pop
add
mov
test
fidivrs
loope
jecxz
movsl
sub
stc
push
rol
jae
push
mov
arpl
pop
and
js
repz
cmc
sub
xchg
leave
int3
mov
popa
scas
ret
jb
or
in
jle
mov
repz
test
xlat
jp
push
repz
dec
xchg
movsb
stos
out
xchg
add
add
nop
jae
lods
test
stos
mov
lea
pop
ret
inc
mov
lea
xchg
test
mov
jno
inc
xor
add
mov
fbstp
add
test
cmpl
sub
and
sbb
sbb
mov
inc
movsl
pop
test
push
loopne
and
sahf
cltd
mov
pop
push
inc
mov
push
pop
bound
sbb
mov
add
or
jb
sub
push
mov
cmp
jbe
jb
cmc
or
out
clc
movsb
pop
mov
or
lcall
sbb
icebp
imul
insb
pop
cs
fistpl
clc
sti
dec
rolb
gs
cltd
sub
push
bound
nop
jp
pop
xchg
lea
sub
inc
pop
xchg
cmp
pushf
jge
stos
mov
mov
loopne
test
and
in
fisttpl
mov
pushf
cmp
dec
pop
or
lret
dec
jg
pop
cmpsb
fs
test
data16
cld
and
adc
xchg
aam
mov
mov
add
fisubrs
mov
xchg
inc
in
imul
inc
subb
mov
sub
dec
rolb
int
mov
mov
lret
mov
fwait
sbb
xor
cld
and
sub
inc
insl
and
testb
aad
adc
jmp
push
fs
dec
mov
jp
addps
lds
movsb
adc
cli
or
push
fcomps
or
mov
aam
pop
stos
jmp
push
xlat
xchg
arpl
xlat
clc
daa
sub
movsl
fst
add
faddp
aam
pop
int
repz
adc
mov
movsbl
btr
shrd
mov
cmp
stc
call
pop
movb
push
push
call
rorl
add
mov
cmp
jle
pusha
and
xor
adc
repnz
xchg
gs
mov
jmp
fidivl
and
push
bound
lods
jnp
fisubl
mulb
mov
iret
cmp
sub
insl
sbb
inc
sub
inc
xor
daa
fs
adc
repnz
dec
pop
pop
dec
dec
mov
pop
sub
jo
xchg
mov
stos
xor
jl
adc
out
sbb
sub
bound
xor
sbb
push
inc
jne
xlat
stos
inc
dec
pop
insb
and
stos
in
sub
add
adc
add
mov
and
xor
clc
fisubl
fsubrl
pop
jmp
test
out
test
daa
lcall
or
jl
pop
push
inc
mov
add
cmpb
push
call
cmpsb
adc
clc
mov
cmp
mov
arpl
addr16
lret
in
out
mov
stos
inc
or
outsl
js
insb
ds
addr16
and
jb
inc
dec
flds
push
es
xchg
xlat
dec
loopne
mov
inc
mov
cmp
push
mov
adc
mov
mov
jecxz
and
sub
jmp
inc
mov
sub
adc
pop
xchg
mov
and
xor
bound
cmc
cmpb
pushf
lea
jne
cmc
mov
xor
mov
bt
stc
add
bt
movzwl
cmc
sub
mov
stc
cmp
add
jmp
lods
and
clc
mov
test
ja
cmp
sub
jge
lret
adcb
xor
inc
bound
mov
jg
arpl
rcll
into
enter
jbe
inc
add
andb
push
out
mov
sub
dec
es
mov
xor
lods
pop
scas
test
rorl
mov
bound
adc
jmp
cmpsl
push
jmp
les
xorb
sbb
cmc
mov
mov
dec
ret
pop
xlat
jle
idivb
ja
loopne
clc
mov
adc
out
jns
pop
dec
in
dec
loopne
add
mov
fldt
mov
jnp
and
hlt
inc
testb
mov
jae
iret
push
adc
pop
pusha
lods
sub
stos
lock
xchg
movsb
daa
or
gs
xor
aam
and
push
sub
pop
js
mov
sub
cld
dec
xorb
mov
xchg
inc
cmp
mov
jge
or
std
clc
mov
lret
fisttpll
dec
inc
and
mov
scas
xchg
aad
movsl
sub
addr16
call
xlat
mov
mov
insb
sub
adc
mov
je
jle
pop
pop
push
jmp
sbb
ds
jae
aad
sbb
shlb
or
pop
push
push
cld
popl
mov
adc
js
cs
mov
mov
fimull
xchg
xor
int3
jge
mov
adc
push
and
mov
push
enter
pusha
enter
adc
xor
js
sbb
pop
std
dec
enter
jbe
pop
lock
pop
pop
enter
cmp
mov
pop
imul
pop
cmp
fstl
cmp
pushf
or
cld
clc
mov
mov
mov
arpl
sub
jle
push
mulb
or
cli
data16
test
data16
mov
add
fmuls
movsl
dec
imul
pop
fisubrs
mov
repnz
cmpsb
bnd
push
outsl
sbb
mov
or
push
push
mov
outsl
xor
mov
mov
repnz
dec
cmp
and
negl
jns
das
inc
cmc
sub
add
ljmp
clc
mov
out
jo
adc
cmc
inc
out
jns
cmp
sbb
dec
mov
movsb
add
jg
jecxz
xor
out
popf
lea
or
adc
nop
jp
cmc
lods
jge
lods
inc
out
test
fs
adc
shll
adc
pop
stos
pop
or
mov
ret
sub
das
repnz
mov
inc
mov
dec
add
sub
inc
sbb
scas
pop
cld
clc
mov
das
pop
arpl
or
outsb
stos
shrb
add
inc
push
aad
ja
test
icebp
mov
and
dec
sbb
push
sbb
and
inc
inc
mov
and
push
add
js
push
inc
lds
cmp
inc
call
cld
add
push
pop
push
mov
and
out
sbb
push
push
outsl
dec
and
pop
sub
cmp
into
xor
inc
std
add
pop
mov
or
outsl
inc
mov
je
add
test
imul
or
ret
pop
mov
push
mov
pushf
cs
into
stos
sub
lcall
lds
xchg
inc
xchg
xchg
push
cmpsb
arpl
mov
stos
mov
jns
popf
pusha
decb
sub
inc
fsubp
xchg
cmpsb
jb
les
mov
xchg
mov
fdivr
dec
out
ja
inc
int3
imul
pop
movsl
pop
pop
mov
mov
or
sarl
mov
stos
mov
and
cmp
lods
jae
in
jo
push
outsb
je
cmp
fcompl
rorl
outsl
or
andl
xchg
push
es
ljmp
dec
push
imul
or
push
mov
jnp
icebp
je
sub
insl
fistpl
pushl
sbb
lock
std
std
adc
arpl
jae
and
cmp
mov
pop
inc
ss
mov
js
in
fmuls
outsb
and
aam
pop
movb
aad
adc
test
xchg
sahf
pop
add
inc
xchg
xchg
in
xchg
push
jbe
movsb
xor
mov
cwtl
fsts
mov
enter
xlat
inc
scas
jmp
cli
clc
mov
jecxz
movsl
ja
sub
fcompl
dec
xchg
dec
sub
aam
cltd
push
ja
incl
iret
ss
dec
adc
stos
outsb
inc
popf
js
jg
pop
push
mov
gs
fwait
dec
or
sub
mov
scas
in
cmp
aas
test
lcall
cltd
sub
data16
mov
into
mov
jae
dec
jb
pusha
or
or
movsb
addr16
fmuls
lcall
adc
lret
stos
call
fistps
dec
sti
mov
xor
je
ss
xchg
dec
ss
push
xchg
mov
push
pop
mov
cmpb
sbb
mov
rorl
mov
pushf
lret
mov
push
or
push
movsb
inc
dec
lret
pop
or
fucomi
add
lret
ja
mov
fwait
out
popa
and
lret
shl
jmp
loop
inc
aas
push
xor
add
clc
mov
fisttpl
fists
xchg
xor
cmc
push
out
shll
adc
fmuls
mov
xlat
test
and
adc
sbb
es
sbb
cmp
push
mov
inc
scas
add
mov
dec
inc
pop
mov
mov
enterw
dec
js
dec
cmp
xor
jp
add
or
in
lds
stos
into
mov
idiv
mov
xchg
negl
popf
pop
sub
dec
aaa
out
pop
push
icebp
adc
sub
ja
add
fs
ljmp
xchg
dec
addr16
pop
mov
out
pop
stos
repnz
es
push
cltd
in
sub
dec
xlat
push
dec
fwait
sbb
dec
inc
out
pop
int3
jae
jl
jl
jle
push
xchg
test
xchg
mov
xor
push
cmp
pusha
mov
mov
jae
out
scas
mov
fstps
ja
adc
jecxz
notb
fadd
or
mov
mov
jbe
mov
fbld
out
clc
dec
dec
sti
jl
lods
push
out
divl
out
lahf
inc
jg
shlb
in
mov
pop
icebp
sub
dec
iret
mov
insb
pop
jmp
adcl
mov
ret
jnp
xor
es
dec
neg
or
sub
sub
shr
sub
mov
add
setnp
pusha
mov
bt
bsr
lea
xadd
add
movsbw
rcl
xor
call
test
xor
and
pop
loop
adc
dec
cmc
aad
jbe
into
mov
adc
jne
rcr
mov
lods
mov
cmpb
out
mov
add
cmp
loope
shll
test
dec
pop
leave
pop
insb
cmp
mov
dec
inc
mov
mov
test
frstor
jb
dec
test
pop
xchg
shll
aad
pop
jns
leave
cli
loope
sbbl
adc
xor
cmpsb
test
sbb
dec
outsl
pop
push
mov
push
outsb
ss
stos
aaa
push
dec
ror
sarb
aas
push
dec
cmpsb
jle
xor
into
jnp
enter
roll
stos
fxtract
in
mov
xchg
imul
or
ret
cmp
xchg
test
jle
adc
inc
loopne
adc
dec
leave
push
mov
xchg
xchg
cmpb
loope
enter
mov
cmpsl
iret
test
cltd
jmp
adc
mov
stc
into
xor
push
xchg
push
dec
xchg
add
xchg
data16
clc
add
dec
mov
dec
in
mov
mov
mov
iret
test
mov
pop
in
lret
jae
mov
push
xor
xor
test
mov
into
pop
jae
dec
add
adc
je
aas
adc
out
add
dec
or
outsb
fidivl
pop
dec
or
dec
lds
bswap
dec
xchg
lds
mov
scas
pop
pop
add
or
adc
loope
pop
xchg
add
scas
lret
pop
add
les
ror
add
adc
pop
test
xor
or
test
push
insl
dec
mov
and
or
mov
xor
jb
dec
and
shr
adcl
sbb
movb
mov
movsb
je
xchg
fcoms
mov
stos
push
enter
stc
jno
popf
mov
jecxz
adc
test
shlb
jne
insl
and
fists
mov
lock
sbb
incl
sbb
ret
mov
shlb
fnstenv
loopne
dec
push
test
fdiv
into
xor
push
add
add
out
call
ret
pushf
cmpsb
fwait
inc
int3
or
inc
daa
lret
mov
fs
icebp
lret
lods
fadds
dec
repz
je
jae
nop
data16
dec
hlt
rorb
pop
lea
jo
loopne
ficompl
mov
in
aam
xor
mov
test
aad
int
shll
or
dec
in
dec
stos
add
sbb
sbb
std
test
fwait
shrb
pop
push
push
roll
idivb
push
ss
popa
adc
lret
mov
decb
mov
sub
adc
xor
pop
in
movsl
inc
test
lock
jno
jmp
cmp
fcompl
stc
mov
in
adc
mov
sub
jle
jae
in
faddp
stc
xlat
sbb
add
iret
push
lret
mov
mov
pop
push
jb
push
addl
add
or
fcmovne
aad
or
shll
inc
ss
jnp
dec
loopne
xchg
lret
fnstenv
sbb
frstor
adc
jbe
sbb
xor
aad
gs
add
inc
xchg
fldcw
cwtl
dec
lahf
jmp
jo
test
dec
add
out
xor
pushf
jmp
cltd
test
mov
in
mov
stos
mov
adc
push
push
mov
rorb
mov
sub
addr16
add
or
push
popa
daa
jg
test
pop
xor
insb
mov
adc
pop
mov
lea
into
dec
dec
rcrl
std
imul
icebp
dec
ja
ret
shll
add
in
rcl
test
adc
lret
cltd
pop
jae
into
enter
sub
jge
sti
loopne
mov
jnp
inc
lret
xchg
adc
aam
mov
les
pusha
enter
inc
push
lock
test
or
stos
dec
mov
subb
and
out
add
jo
dec
cmpsb
aad
loopne
subl
inc
pop
fnsave
mov
fimuls
fcoms
fisttps
subb
mov
lods
dec
inc
sarl
mov
mov
loopne
je
outsb
mov
test
jmp
cmc
pop
jo
enter
leave
pop
or
add
test
sub
test
lods
iret
aas
out
cmp
fidivs
popa
sbb
cmp
cwtl
add
or
adc
xor
mov
mov
sub
mov
inc
jae
xchg
push
xor
movl
mov
pop
stc
mov
scas
repnz
scas
sbb
jmp
fldl
fwait
test
int3
sub
push
enter
in
dec
mov
scas
cmp
sti
jne
test
js
addr16
jae
std
in
or
enter
adc
and
popf
test
inc
movsb
loop
andl
dec
and
mov
cmp
mov
mov
jo
scas
mov
sub
and
mov
and
mov
jb
mov
test
or
scas
mov
fisttps
mov
pop
or
cmpsl
mov
clc
or
jb
mov
gs
push
mov
pop
aad
cltd
sbbl
ror
or
mov
xor
dec
pop
loopne
pop
cmpsl
xorb
lret
adcl
jmp
cli
into
adc
xor
or
scas
and
cmc
insl
std
int
sti
test
mov
and
lods
push
add
ds
scas
add
or
bound
aam
lds
cmc
call
test
cs
out
arpl
or
sub
test
pop
sbb
repz
xor
cwtl
or
pop
call
mov
xor
dec
call
dec
movsb
jmp
in
lock
leave
jle
inc
repnz
xor
shlb
pop
idiv
mov
or
in
inc
push
shl
loope
icebp
pushf
jmp
xor
jae
inc
cmp
xor
or
push
or
outsl
andnps
call
jno
insl
xor
std
xor
lds
sub
fcoms
xor
add
insl
xor
jecxz
shlb
out
lods
dec
xchg
ljmp
insl
sub
xor
mov
adc
or
int
push
icebp
shlb
mov
and
repz
dec
rol
in
aam
sar
xor
popa
popf
pop
sbb
mov
test
adc
psubb
popa
jmp
add
ret
mov
insl
add
ret
adc
jmp
mov
dec
sub
dec
or
inc
lods
repz
rcrb
pop
test
std
xorl
mov
add
ljmp
mov
loop
add
addl
inc
shl
xor
orb
push
or
rorb
icebp
push
inc
les
popf
mov
stc
icebp
lods
out
xor
loopne
outsl
out
lock
adc
pop
imul
jns
inc
adc
inc
in
repnz
inc
call
in
shl
pop
call
fldl
call
fnstcw
xor
and
ffree
test
fisttpll
enter
das
test
in
mov
dec
je
cmp
cmc
pop
into
xor
mov
arpl
lock
in
push
rolb
dec
movsl
out
movsb
xchg
mov
push
or
mov
outsl
mov
mov
mov
mov
cmpsl
cltd
test
jne
ror
add
add
ret
dec
mov
pop
loope
stc
test
add
mov
mov
test
cmpl
stc
mov
mov
stos
cltd
dec
stos
push
sbb
or
cmp
dec
jns
cmpsl
mov
scas
test
xor
adc
add
cmpsl
jne
pop
and
test
dec
rcll
insl
xchg
lret
push
pop
xor
into
jo
sbb
dec
stos
lret
pop
pop
jns
mov
mov
data16
adc
fidivs
xor
stos
stos
hlt
ror
dec
in
mov
or
pop
addb
ret
dec
xor
xchg
mov
mov
js
lcall
sbb
mov
movsl
mov
subl
sub
push
dec
cmp
lock
sub
lock
lcall
pop
mov
adc
enter
test
push
lret
testb
dec
nop
mov
xchg
or
dec
lds
sarl
in
jae
inc
mov
leave
pop
loopne
mov
xchg
sub
jmp
iret
stc
insl
mov
test
lret
rol
daa
lret
cmc
cmc
dec
test
leave
dec
outsb
xor
jl
dec
or
add
mov
test
add
int
jae
jg
jp
ss
mov
std
fldcw
cmpb
pop
add
mov
fisttps
outsb
popa
pusha
jmp
cli
orb
mov
sbbl
adc
ss
mov
ret
xchg
out
mov
rolb
or
mov
test
fcmovne
or
mov
lods
test
fdivrs
jns
test
leave
mov
dec
mov
mov
sub
xlat
sbb
push
pop
adc
test
mov
pushf
pop
or
jg
popf
jo
mov
in
jmp
iret
pop
jmp
xchg
adc
cmpl
in
push
mov
bound
lret
mov
mov
or
mov
adc
mov
cs
and
neg
movsb
dec
in
fisttpl
pop
sub
or
orb
inc
int
and
adc
adc
dec
sub
add
pop
lret
inc
out
mov
sar
mov
sbb
lock
test
mov
push
fsubrp
push
fnstcw
bound
inc
imul
mov
jno
adc
ret
xchg
push
inc
jmp
sbb
rcr
iret
subl
in
out
imul
test
pop
xchg
mov
xchg
mov
mov
daa
pop
and
and
cltd
mov
mov
push
push
add
cltd
push
jno
pop
jecxz
je
lahf
sti
dec
mov
adc
pop
pop
pop
push
xor
push
popa
je
mov
xchg
cmp
cmpsl
leave
std
pop
test
xor
cmpsl
fnstsw
jl
leave
jge
push
xor
fidivs
mov
mov
push
xorl
lcall
popa
or
mov
sub
rol
daa
pop
mov
add
adc
mov
jmp
fmuls
cmpsb
insl
jge
jo
test
mov
inc
dec
mov
scas
jno
xorb
mov
arpl
movsb
test
mov
push
icebp
ret
ss
ret
push
arpl
js
xchg
pop
or
sub
xchg
mov
xor
testl
test
mov
stc
xchg
popf
out
test
dec
inc
jo
outsl
enter
mov
call
push
cmpsl
adcb
fdivrl
jle
fidivs
cmpsl
mov
movsb
lock
adc
add
add
xlat
stos
xchg
rolb
mov
into
dec
cmp
inc
fsubrl
out
mov
pop
adc
mov
rclb
stos
dec
lds
mov
sub
xorl
cmpsb
mov
hlt
test
mov
fstpt
lds
rolb
out
loop
push
les
pusha
stos
inc
outsl
xor
add
push
mov
and
adc
pop
xchg
les
and
fstpl
pop
fcomp
mov
subl
sub
adc
or
les
mov
pop
push
mov
addr16
into
xor
or
adc
test
and
cmp
mov
inc
mov
jo
sub
insl
aad
mov
or
test
push
xorb
mov
sub
push
ret
enter
int3
inc
shll
xor
or
movsl
xor
ja
insb
iret
cmpsl
xorl
int
jno
stc
mov
orb
test
mov
xchg
sbb
adc
test
xor
out
mov
in
adc
mov
mov
pop
add
xor
decl
sub
add
pop
rol
mov
ret
xchg
mul
pop
out
jmp
mov
pop
adc
shll
mov
call
leave
bound
pusha
sbb
lret
daa
js
out
int3
dec
sbb
movsb
pop
and
test
call
and
rcrl
or
pop
outsl
outsb
xchg
mov
xchg
mov
adc
test
mov
pop
aad
rclb
xor
mov
rol
mov
test
add
dec
test
shl
mov
out
xor
or
repz
in
and
imul
sub
mov
dec
popa
jecxz
jne
inc
int
mov
pushf
add
adc
inc
ret
dec
dec
or
ret
rcl
mov
or
dec
shrl
xchg
das
popa
push
cli
mov
lea
in
jae
pushf
pop
add
iret
enter
mov
out
test
jno
imul
ret
and
pusha
mov
mov
adc
mov
dec
or
mov
adc
lret
jb
mov
add
je
test
push
add
in
scas
mov
mov
jno
mov
gs
dec
xchg
ljmp
lcall
push
mov
orb
cld
add
loope
cwtl
je
push
mov
popa
mov
or
aaa
into
inc
mov
insl
cmpsb
mov
push
xchg
mov
leave
adc
ja
jnp
or
dec
mov
jp
xor
enter
pushl
xchg
mov
frstor
std
movsl
pushf
cmp
test
loope
scas
mov
mov
orl
repz
mov
pop
loope
mov
inc
stos
scas
aam
fnsave
test
insl
inc
mov
lods
lds
out
mov
adc
movsb
insl
aam
xchg
fwait
add
leave
mov
mov
jl
icebp
jge
pop
std
cmp
mov
adc
inc
mov
ja
int
sti
or
push
dec
xchg
pop
jg
outsb
mov
mov
sub
repnz
sub
je,pt
mov
cmc
sbb
xor
fcompl
ret
movsb
movsl
sahf
mov
rolb
inc
jo
pop
dec
ljmp
cmp
js
lret
lret
ror
sub
cmpsb
aam
imul
orb
mov
add
sbb
sbb
xchg
lret
xchg
pop
or
mov
xor
cmpsb
test
inc
out
jmp
pop
call
xor
cwtl
mov
pop
push
movsb
neg
rcrl
mov
xor
cmpsb
jae
imul
stc
add
mov
and
xor
sbb
pop
jb
fisubrl
jmp
into
dec
xor
push
adc
daa
inc
jae
push
scas
enter
sahf
repz
aas
in
dec
test
adc
lods
xchg
mov
ss
lods
pop
fcmovne
pop
jno
ret
jle
cld
or
in
xor
jge
adcl
or
popf
xchg
mov
mov
jo
adc
insl
push
jge
add
jg
mov
stos
adc
in
xchg
fadds
sub
sbb
jb
pop
add
cmovs
pop
rcrl
xchg
jno
mov
pop
ret
cmpb
pushf
adc
mov
sub
fcoml
pop
pop
lret
pop
mov
or
enter
add
sbbb
movsb
mov
pushf
fwait
sub
push
add
mov
ret
and
pop
fwait
and
pop
mov
adc
add
enter
push
jp
add
cld
mov
jnp
lret
shrl
dec
cmpl
dec
mov
aad
adc
loopne
addb
int
add
and
in
or
xor
cmp
push
test
fidivrl
xor
jge
inc
loopne
test
lock
sub
jnp
add
sub
lret
shl
icebp
dec
je
and
gs
sbbl
imul
and
add
cmp
orl
inc
or
int3
pop
repnz
jg
in
mov
movsb
sarb
in
push
icebp
ret
or
jmp
ret
in
or
loope
add
dec
enter
sahf
shr
push
xor
inc
lret
lret
jl
stc
adcl
jno
xor
arpl
and
sub
cmpsl
jb
xor
or
stos
mov
test
cmp
aad
out
or
xchg
add
dec
rcll
icebp
dec
roll
ficoms
ss
pop
xlat
gs
addr16
test
leave
mov
add
lock
pop
sub
sbb
cmp
jno
mov
stos
mov
loope
imul
pop
lods
dec
pop
pop
push
sti
out
push
into
ss
cld
sub
shrb
push
popa
mov
pop
call
jge
lds
hlt
xor
xchg
jmp
mov
mov
mov
pop
xchg
scas
xlat
dec
ret
scas
push
out
mov
fwait
imul
rcl
xchg
pop
fsubl
insb
mov
pop
in
mov
lods
andb
movsl
jns
push
xor
mov
jno
cwtl
xchg
sub
cmpsl
mov
mov
jno
test
xchg
inc
repz
lret
or
mov
cmp
or
adc
mov
ljmp
icebp
aad
adc
iret
stos
sti
dec
dec
mov
lret
mov
pop
xchg
dec
jmp
sub
sub
pop
repz
test
mov
jns
in
in
xchg
insb
imul
mov
adc
movsb
andb
enter
push
adc
dec
dec
pushf
mov
loopne
arpl
dec
cmp
cmpsl
xorl
mov
or
lret
test
mov
into
or
or
subl
xchg
mov
lds
cmp
sub
ja
pop
test
pop
test
sub
add
xchg
cmp
ss
pop
mov
jecxz
sub
in
jl
push
lahf
add
test
lods
jns
mov
xchg
lret
xchg
mov
fwait
jl
mov
cli
subl
sub
test
into
cmpl
out
shlb
cltd
sbbl
fwait
nop
call
test
call
mov
mov
mov
jb
cmp
movsb
jmp
aad
push
sti
ret
cmpsl
lahf
fistps
add
xchg
xor
jns
daa
out
cmpsb
add
sbb
repz
inc
test
lea
andl
cmpsl
jo
into
mov
add
test
xchg
out
testl
xor
test
inc
mov
mov
shrb
mov
mov
pop
dec
inc
xlat
or
out
mov
push
or
lea
xor
rcll
lahf
mov
mov
mov
jl
call
dec
xchg
xchg
mov
repz
pop
loope
mov
xor
xorb
push
fstpl
inc
ret
add
sbb
into
pop
jo
stc
add
enter
add
rcl
test
mov
pop
orl
subl
in
xor
xor
push
push
aad
insl
xor
jle
mov
sbb
fdivrs
jno
or
or
loope
xchg
adc
sub
xlat
repnz
fimuls
mov
and
lods
fcmovnb
pop
jno
sarl
dec
pop
push
pop
mov
add
popf
rolb
jl
mov
movsb
adc
neg
xchg
jno
mov
frstor
inc
adcl
imul
mov
into
mov
scas
sarb
xlat
push
fwait
outsl
lret
mov
add
out
and
aam
mov
xchg
mov
push
inc
sbb
jl
jae
test
outsl
cwtl
xor
aad
testl
inc
sahf
mov
xchg
loop
jno
cwtl
and
clc
mov
mov
mov
fwait
in
jmp
ret
cwtl
jb
dec
jno
mov
sub
mov
xor
lods
ret
test
xchg
cmc
jmp
xchg
mov
pop
scas
andb
aam
ja
ret
jmp
or
mov
jne
sar
mov
pop
xor
repz
cli
aam
add
add
push
jns
bound
mov
leave
cld
je
jecxz
sbb
adcl
sub
pop
xchg
push
vmwrite
popa
cmp
jg
scas
fcmovne
shlb
ret
inc
sbb
add
pop
loopew
and
jp
xor
mov
adc
pop
push
cmc
push
leave
icebp
test
mov
fstpl
jmp
push
mov
nop
mov
mov
sub
mov
mov
mov
xor
movsb
test
inc
int3
out
dec
sub
pop
cmp
pop
stos
jle,pt
je
cltd
test
mov
mov
add
scas
mov
iret
adc
jg
dec
and
call
int
cmpsb
xchg
lods
enter
imul
shll
test
pop
sbb
movsb
inc
push
and
xchg
das
aam
pop
xor
stc
mov
or
lret
shrl
sub
roll
loope
rclb
xorb
mov
fisubl
or
mov
ss
pop
sbb
push
ss
cli
iret
mul
push
and
cmpb
aad
xchg
cmc
mov
mov
or
mov
adcl
jg
ja
idivb
or
pop
leave
test
jle
dec
orl
test
mov
cmpb
insb
dec
enter
pop
std
sub
out
sbb
lret
or
aam
xor
aam
jnp
add
adc
inc
lret
push
push
std
loopne
and
rcrl
pop
or
add
fs
test
xor
stc
lods
test
cwtl
jne
inc
fnop
mov
or
mov
jo
icebp
inc
rorl
add
mov
popa
test
fisubrs
push
in
mov
push
pusha
jmp
jecxz
adc
adc
sub
sub
inc
leave
andl
std
pop
sbb
test
enter
sbb
sbb
js
dec
xor
decl
and
sbb
call
mov
test
adc
and
shll
and
pop
jmp
inc
xor
test
aas
inc
mov
cmp
addl
xchg
orb
ret
inc
fdivl
sub
fbstp
enter
mov
outsb
adc
adc
hlt
int
std
into
xor
test
inc
icebp
jmp
into
adc
xchg
ret
mov
adc
push
aad
out
aad
mov
jecxz
push
orl
inc
mov
fwait
mov
aaa
xchg
adc
sbb
adcl
add
cmpsl
mov
lret
cmp
ret
cmp
mov
mov
adc
clc
sti
sbb
shr
int
test
adc
loopne
loopne
dec
aad
loopne
leave
pop
fldcw
push
inc
dec
in
out
xor
cmpsl
pop
cmpsl
enter
ret
or
test
sub
jmp
in
xorl
out
dec
rcll
mov
xlat
lret
test
adc
popf
shlb
in
xor
add
ret
inc
lea
stos
fstpl
mov
nop
push
and
ret
sbb
cmc
pop
pop
fsts
stos
jb
mov
adc
lock
push
jno
ficomps
lods
mov
mov
or
fs
sbb
inc
mov
imul
ror
add
push
xchg
enter
lret
jge
ss
jno
mov
pop
in
in
loope
xchg
int
jmp
mov
out
stc
dec
cmp
fwait
shll
dec
mov
xor
and
cmc
lds
mov
mov
xchg
lock
test
lods
addl
mov
roll
sub
mov
jns
sarl
jne
jmp
inc
xor
jp
iret
xor
push
test
push
push
adc
mov
aaa
orb
imul
mov
lds
xchg
leave
fcmove
add
mov
test
popf
mov
mov
lret
mov
mov
push
loope
cmp
lock
test
sub
jle
add
js
xor
in
push
mov
jg
mov
frstor
sub
mov
aam
pop
lock
cmc
xchg
stc
ficoml
mov
rcrb
cmc
or
lcall
cmp
iret
cmc
scas
cmp
push
ljmp
push
icebp
scas
test
addr16
push
add
mov
popa
adc
in
enter
test
dec
mov
in
mov
test
jmp
test
notb
in
fld1
in
jno
xor
or
ja
sbb
dec
fwait
cmc
fstp
add
mov
frstors
inc
and
popf
mov
push
xchg
outsb
xchg
sub
pusha
movsl
cs
inc
jmp
jg,pn
push
dec
outsl
mov
fldenv
test
cltd
pop
xlat
pop
pop
movsb
add
ret
xor
cmpsl
lods
movsb
into
mulb
cmp
sub
sbb
fucomi
add
and
inc
pop
cmpsl
xchg
xor
nopl
pop
mov
and
or
dec
cmp
lcall
loopne
jle
imull
ljmp
arpl
mov
ret
add
xor
sbb
je
testb
mov
int3
dec
xor
out
adc
aaa
scas
in
mov
pop
aad
pushf
icebp
int
adc
rcrl
xor
loope
les
xchg
pop
jnp
insb
cmp
test
lcall
push
stc
mov
xor
stos
xor
stos
lods
rol
mov
dec
dec
sahf
sub
sub
int
lds
jno
xchg
hlt
xor
ss
jns
mov
pop
inc
loopne
lds
lds
jo
mov
xchg
sbb
fmulp
dec
ss
add
sbb
sahf
adc
jae
gs
add
xor
and
add
cltd
lcall
jle
imul
in
mov
inc
je
idiv
sbb
jnp
int
push
mov
inc
ror
test
dec
mov
cmc
in
xor
cld
inc
push
pop
inc
inc
outsb
out
mov
js
je
sbb
fdivs
lahf
ret
push
dec
or
xchg
ss
stos
movsl
ret
jae
dec
cmc
dec
inc
jmp
mov
mov
dec
dec
xor
dec
inc
xor
xor
mov
inc
sti
mov
sub
mov
cmp
leave
xor
cmp
dec
mov
dec
addr16
push
lock
ret
dec
inc
inc
pop
pop
jns
pop
or
mov
cmc
lahf
xchg
test
nop
icebp
mov
rol
mov
xor
mov
fidivl
into
fisttps
rcr
pushf
test
inc
loope
sub
hlt
fnsave
dec
out
aad
inc
xor
mov
jg
dec
mov
in
lds
mov
mov
std
fdivrl
rorb
ret
jbe
cmc
or
mov
shl
filds
into
dec
mov
lahf
add
mov
mov
ret
scas
movsl
push
enter
divl
insb
std
in
cmpl
sub
inc
push
adc
divb
rcl
lahf
loope
icebp
push
mov
pop
pop
jo
cs
push
xchg
fs
jg
shl
ss
aam
lcall
sti
call
pop
test
test
mov
and
test
and
inc
or
cs
icebp
add
inc
subb
outsl
lret
mov
popa
pop
fs
mov
cmp
roll
pop
sbb
cs
jmp
stc
dec
add
adc
add
jns
test
mov
sarl
jmp
test
xor
into
test
pop
dec
in
repz
jns
andl
addr16
push
fmul
cmc
fnsave
xor
lcall
sti
shll
aam
nop
shr
test
sbb
mov
dec
inc
dec
fs
out
test
pop
ja
test
call
xchg
imul
or
das
cltd
test
fs
je
push
shrb
lock
cmpsl
les
shll
pop
rcr
xchg
ss
addr16
pop
test
and
xchg
popf
fldcw
mov
xorb
sti
pop
jns
cmp
je
into
mov
inc
orl
shlb
push
pop
clc
test
sbb
sbbl
sbb
xchg
lret
lcall
stos
or
sar
stc
sub
hlt
call
dec
repz
dec
jnp
dec
imul
mov
in
in
sbb
mov
in
jp
xor
into
dec
mov
addr16
sbb
scas
bnd
xor
call
cmp
and
lock
and
push
mov
jae
loope
mov
imul
pop
xlat
cltd
mov
or
pop
sbb
out
and
dec
xor
test
adc
cltd
or
mov
pop
mov
inc
sbb
and
cmp
movsl
mov
jmp
divl
xchg
leavew
scas
int3
jae
loop
dec
decl
mov
and
pop
cmc
jns
mov
imul
loope
icebp
into
ds
hlt
mov
sbb
xchg
into
or
subl
push
mov
cmpsl
ja
insl
dec
std
arpl
or
repnz
sub
inc
mov
add
and
jle
inc
inc
mov
test
pop
test
mov
lret
movaps
loope
fildll
test
divl
popa
and
aad
sbb
lods
test
icebp
cmp
mov
pop
and
lods
aas
or
mov
and
inc
stos
cltd
aas
aaa
inc
jne
sbb
test
fdivl
pop
xor
dec
int
imul
iret
inc
popa
out
fwait
push
sbb
mov
cltd
jecxz
pcmpgtb
inc
add
jb
stos
jo
pop
sub
inc
xor
cmp
cmp
cmpsb
pop
test
fcmovne
int
pop
jg
test
mov
lret
add
in
xor
jnp
mov
jb
rolb
pop
or
adc
sbb
and
inc
ret
cmpb
ss
mov
jnp
call
and
xchg
ficomps
xchg
imul
mov
dec
lret
jp
stc
jae
or
cmpsb
adc
enter
and
and
in
lcall
or
ss
lret
leave
test
pop
arpl
cmp
adc
add
and
lret
dec
dec
dec
andb
push
cmpsb
inc
push
or
mov
mov
jnp
pop
mov
subl
jmp
inc
inc
dec
mov
pusha
lahf
push
mov
fwait
sub
mov
adc
insl
push
pop
popa
mov
add
out
int
or
loope
mov
pop
adc
dec
mov
jb
dec
cltd
mov
enter
sbb
call
sbb
dec
xor
in
xor
dec
int
test
in
dec
out
mov
pusha
jg
pop
shrb
or
test
xor
test
or
mov
dec
inc
int3
daa
inc
push
imul
dec
push
mov
fstpl
fs
inc
push
adc
dec
cmpsl
xorl
dec
lret
mov
mov
jle
loope
ss
or
inc
mov
or
xchg
pushl
xchg
inc
lods
ja
push
imul
lret
in
jp
les
test
lahf
ret
orl
lods
sbb
sahf
mov
jmp
fsubrs
gs
stc
mov
mov
dec
adc
lock
adc
mov
xor
mov
pop
ss
mov
lret
sarl
cmp
sbb
adc
inc
mov
test
sub
aam
scas
push
pop
mov
in
adc
int
xlat
repz
sti
sub
jl
mov
loope
dec
xor
cmpsl
addr16
jl
push
pop
sbb
cmc
das
hlt
xor
inc
add
gs
and
push
and
lret
pop
jns
insb
pop
xor
jl
pusha
hlt
icebp
outsb
mov
fistl
mov
test
xor
imul
or
mov
or
or
jnp
cwtl
pusha
add
push
inc
jne
mov
push
jne
loopne
icebp
xor
cli
aaa
dec
je
pop
dec
sbb
dec
call
fmulp
mov
mov
movsb
iret
je
lds
and
mov
adcb
push
aad
stos
hlt
or
xbegin
jl
test
je
enter
mov
mov
jmp
or
ret
iret
push
jl
pop
lods
push
scas
dec
das
jle
dec
inc
fcoms
mov
out
push
jns
lock
sbb
xchg
ret
js
pop
sub
icebp
pop
test
stos
adc
mov
xor
mov
mov
mov
sbb
rcrl
notl
inc
add
mov
push
es
cmp
sub
jg
std
xchg
xor
dec
fs
dec
xchg
push
xchg
jle
xor
lock
inc
jnp
push
mov
out
sbb
push
nop
pushf
cs
hlt
ljmp
mov
mov
test
repnz
add
ret
add
cmpb
arpl
outsb
aam
inc
flds
push
dec
fldenv
leave
adc
ror
popl
pop
testb
mov
lcall
adc
jno
test
jne
pop
pop
adc
int3
inc
test
inc
xchg
pop
inc
out
pusha
add
fnstsw
xor
test
std
lahf
xchg
rcrl
leave
or
arpl
mov
lret
or
fisubrl
pop
mov
or
decl
std
shrl
adc
push
cmpsl
xchg
sub
mov
xor
fbld
enter
xor
les
jmp
sub
in
mov
pop
lods
push
loop
imul
test
push
orb
ret
testb
mov
inc
pusha
addr16
push
lret
sarl
jae
test
cmp
pop
arpl
adc
or
fistps
cmc
xor
add
xchg
mov
inc
mov
lods
loope
add
mov
into
pop
jb
inc
orb
jp
lock
mov
outsl
fmuls
mov
test
and
dec
test
pop
pop
xchg
inc
xchg
adc
and
push
mov
and
xlat
test
dec
xchg
lahf
movsb
jno
inc
or
lds
inc
insb
es
stc
out
sbb
or
dec
cmc
divl
mov
or
arpl
push
xchg
push
inc
test
or
pop
js
out
test
mov
inc
stc
sub
xchg
mov
gs
adc
dec
negb
nop
and
rolb
adc
mov
xor
outsb
pop
sub
lahf
rcl
aaa
out
roll
adc
movsl
jle
inc
in
faddl
cmpsb
and
or
sbb
adc
pop
mov
test
aam
ss
mov
or
add
jl
inc
jae
enter
fsubp
dec
cmc
es
adc
cmp
bound
xor
cs
or
dec
sbb
adc
lock
out
cmp
or
mov
stos
sub
inc
dec
enter
push
jp
mov
lds
cs
out
popf
shrl
and
xchg
dec
mov
out
rcrl
dec
inc
out
ficompl
mov
sbb
aaa
lret
push
adc
jg
out
out
push
stc
je
xchg
pop
lds
lods
push
jns
fnstsw
fldz
stos
outsl
mov
gs
xor
and
std
mov
dec
call
push
adc
in
test
enter
fldl
leave
xor
notl
aaa
or
and
cmpsl
adc
lods
cmp
mov
xchg
roll
xor
lds
inc
push
jb
or
mov
into
lret
dec
mov
repnz
push
add
dec
xor
and
ret
sarl
lea
pop
cmc
bound
lea
sub
sbb
sub
push
dec
lock
jp
inc
xor
fnsave
clc
push
dec
pop
pop
mov
fdivs
or
cwtl
or
pop
push
shrl
rorl
inc
inc
inc
in
xchg
dec
mov
test
icebp
mov
jl
mov
test
xchg
mov
jno
pop
add
mov
loop
mov
test
sahf
mov
mov
std
push
xor
xchg
ffreep
add
jl
xchg
add
mov
dec
icebp
and
dec
addr16
inc
and
or
jg
lds
jno
sub
fdivrs
inc
mov
xor
cmpsl
std
sbb
popa
and
xlat
shrl
or
fcmove
pop
into
xchg
lret
or
in
jb
dec
inc
outsb
adc
sbb
dec
lcall
inc
lds
je
or
mov
pop
jle
sub
sbb
add
inc
mov
enter
rcrb
mov
xor
sbb
imul
sub
test
mov
dec
lds
int
xor
and
add
movsl
in
je
jmp
test
adc
shll
je
sti
jns
lea
jbe
jl
fnstenv
push
inc
mov
pop
dec
sarb
std
lret
fdiv
mov
jecxz
mov
std
sub
sub
jge
stc
imul
ret
jle
gs
cmpsl
sbbl
aad
test
in
xchg
sub
mov
ret
mov
lods
xchg
inc
inc
xchg
xor
add
xor
lea
add
mov
icebp
jl
cmp
mov
loope
push
jae
or
lahf
daa
push
pop
lds
or
push
mov
mov
add
icebp
and
mov
pop
xor
jecxz
fwait
xchg
pop
movsl
scas
adc
add
mov
push
and
xor
arpl
dec
adc
or
arpl
scas
imul
pop
pop
push
dec
jecxz
mov
jno
mov
mov
and
mov
sub
adc
lds
repz
sbb
imul
inc
push
arpl
pop
imulb
int3
or
test
xorl
sub
ret
andb
pop
mov
sbb
mov
or
sub
outsl
mov
test
je
push
mov
dec
push
mov
jmp
jl
push
mov
arpl
lcall
push
sbb
hlt
mov
mov
mov
mov
cmc
mov
and
adcb
jae
arpl
test
inc
subl
jge
sti
dec
jo
mov
in
scas
sbb
mov
mov
lahf
sub
xor
in
test
push
jnp
cmc
insl
test
popf
push
dec
add
lahf
movsl
fstps
loopne
jns
aad
icebp
lret
mov
mov
lcall
loope
jmp
jle
test
arpl
mov
repz
test
ret
nop
cmc
mov
cmpsl
test
cmp
pop
add
ret
mov
jle
loopne
inc
in
outsl
xchg
push
movsl
rcl
cwtl
jno
add
jbe
subl
aam
add
mov
add
mov
xor
and
aam
xor
cmp
es
add
popa
pop
pop
xchg
daa
mov
or
repz
sbb
jae
int
shrl
ret
lea
int
jo
jl
jns
icebp
mov
push
jb
repnz
jg
mov
mov
icebp
dec
cmp
sub
sbb
movsl
xorl
sbb
andl
fdiv
rclb
jb
pushf
jno
pop
dec
sub
repz
xor
mov
les
or
add
gs
scas
pop
lret
repz
mov
popa
push
mov
cli
or
lods
arpl
test
xor
into
pop
jae
or
sti
stc
lods
xorb
scas
pop
shll
pop
pop
pop
lea
or
icebp
rolb
inc
add
ror
ss
scas
jg
adc
inc
xchg
test
mov
roll
in
mov
adcb
pop
lods
inc
ffree
test
add
out
addr16
cwtl
lock
sarl
mov
flds
je
iret
add
jg
into
xor
or
inc
dec
jmp
adc
inc
sub
popf
fistpll
and
icebp
into
addr16
lock
out
sbb
jo
sub
insb
daa
xchg
inc
cwtl
jbe
xor
sbb
xor
sti
scas
xchg
lahf
aaa
add
out
inc
je
aam
das
gs
add
out
cmpsl
jmp
gs
in
in
xor
or
pop
xchg
xor
add
cmc
inc
adc
addb
out
popa
testl
dec
aam
cli
xchg
sub
in
pop
mov
push
test
xchg
popf
cli
dec
cltd
jo
loopne
push
std
popa
int3
into
inc
jb
out
ss
xchg
lods
fwait
sbb
dec
jnp
jmp
int
inc
xchg
ret
sti
daa
fcompl
xchg
shlb
pop
dec
mov
negl
iret
dec
rorb
inc
inc
pusha
arpl
jmp
sbb
push
cmp
adc
aaa
cld
jb
mov
dec
cli
adc
lret
fwait
cmpsb
or
add
inc
sbb
sub
int
and
mov
xchg
lock
dec
test
add
pop
int3
push
sub
push
xlat
add
adc
shr
xchg
adc
and
xor
stos
add
pop
sub
mov
loop
imul
shll
enter
lret
mov
les
mov
mov
or
lret
fcmovnb
add
test
les
mov
cwtl
jmp
jnp
xchg
sub
adc
jl
inc
fcompl
lock
ret
pop
xchg
add
lds
dec
xor
jg
jnp
jbe
pop
pop
in
dec
fcomip
push
lock
in
xchg
sub
adc
cmp
dec
jno
cmpb
mov
inc
pop
sbb
or
jno
into
dec
js
pop
jmp
pop
cmp
pop
enter
outsl
add
cmc
cli
push
loopne
push
add
or
add
stc
test
xchg
movl
into
loope
jb
in
pop
int
ret
flds
arpl
and
mov
jae
out
rolb
test
loop
and
jp
xchg
push
aas
mov
sbb
adc
sti
push
or
and
orl
and
lds
and
adc
mov
je
lret
shll
js
xchg
divb
jecxz
fstps
add
jae
jno
cli
js
inc
gs
mov
int3
sub
xchg
push
dec
mov
shrl
or
hlt
push
xchg
ret
sub
inc
rorl
jg
adc
pusha
rcr
out
addr16
dec
insb
add
mov
std
jge
inc
or
adc
test
push
ds
mov
sub
lods
lret
sub
mov
lahf
inc
mov
xor
jmp
lea
xchg
and
imul
faddp
add
pushl
jle
sti
cmc
sub
xorl
les
pop
inc
std
and
in
std
outsl
pop
sbb
sub
jle
sbb
rcr
cmc
mov
stc
add
jecxz
stos
xor
inc
jne
cmc
fstps
repz
lods
cmp
int
fsubrs
dec
stos
je
addr16
cld
lock
test
xchg
cwtl
mov
xchg
rorl
sbb
mov
jb
lea
cmp
loop
xchg
test
xchg
xchg
inc
mov
test
push
mov
xorl
lcall
hlt
xchg
repz
fsts
jb
or
xchg
test
jnp
scas
test
mov
les
faddl
jns
rolb
push
push
shll
repnz
sbb
xor
or
pop
mov
outsb
std
mov
or
jl
push
mov
mov
aad
into
aad
hlt
shl
xor
mov
test
sub
mov
cmp
je
jl
mov
push
xor
roll
dec
loopne
xor
xchg
lods
and
in
addb
mov
mov
jle
push
sti
int
scas
lock
ret
jg
les
pop
loop
lret
inc
lcall
mov
out
push
lcall
in
sbb
ficompl
leave
js
aam
movsb
sbbb
outsb
push
lret
adc
inc
or
mov
sub
lea
push
in
sub
pop
setb
dec
addr16
movsb
roll
lds
inc
insl
aad
mov
pop
jg
push
add
mov
int3
sub
lret
jne
cmp
movsb
cli
mov
int
mov
mov
test
xchg
add
adc
add
pusha
adc
ja
sahf
ffree
xor
aas
or
sub
cmpsl
sbb
mov
inc
pop
add
or
push
out
loope
pop
cmp
std
bound
pusha
inc
imul
mov
pop
test
and
mov
call
lret
push
shll
bound
ret
fcompl
mov
mov
inc
mov
and
adc
daa
bound
push
fsts
jb
aas
addr16
movsb
sub
inc
js
test
xor
test
rolb
jl
fstpt
jecxz
pop
cmp
test
scas
mov
lret
add
pop
incl
mov
mov
std
mov
mov
aam
or
jno
pop
mov
pop
adc
cmc
inc
mov
inc
es
dec
sbb
cmp
fwait
and
dec
mov
popl
cmpsb
test
and
lock
xlat
ljmp
add
xchg
push
sbb
aad
nop
lock
imul
lret
fidivs
bound
lds
inc
mov
icebp
dec
or
or
inc
nop
std
out
dec
out
jne
sbb
jmp
roll
scas
test
pop
call
add
adc
jne
pop
rol
icebp
lock
jl
adc
pop
push
cmp
mov
mov
inc
adc
pop
pop
cwtl
or
stc
fs
xor
add
pop
hlt
imul
addr16
pop
cwtl
or
pop
cmp
stos
ficompl
ljmp
lods
daa
sbb
test
and
pop
js
addr16
cli
jg
test
or
shll
dec
imul
loope
pop
movsb
fistpl
in
into
ret
dec
mov
das
xor
in
andb
adc
pop
ds
jecxz
inc
sbb
cmp
shrl
xor
nop
lds
adc
mov
dec
popa
xchg
data16
jmp
dec
inc
loope
xchg
pop
jo
jecxz
sub
pop
pop
movsl
mov
jmp
xor
les
or
mov
inc
sub
test
adc
jecxz
fsubl
andl
sbb
sbb
dec
test
test
popf
mov
repz
add
stos
jno
int
jns
cmp
cmc
xchg
in
dec
imul
or
pop
test
inc
shll
jecxz
lret
pop
adc
bound
xor
repnz
insl
mov
cli
sbb
icebp
sub
in
adc
jae
pop
jae
call
xchg
lds
jl
jnp
or
mov
pop
cli
dec
fdiv
jae
and
les
jl
push
int
insb
lods
cwtl
inc
dec
sbb
mov
dec
mov
insb
inc
xchg
and
pop
mov
push
out
call
enter
mov
sbb
xor
push
jno
pop
jns
mov
nop
mov
mov
les
test
dec
out
cmpb
testl
in
ds
or
inc
stc
xor
jl
mov
rolb
es
and
pop
pop
test
popf
fldl
outsl
dec
loopne
aam
fbld
push
ret
jge
mov
cmp
push
shl
mov
sub
sti
ss
cmp
hlt
dec
js
nop
out
sub
movsb
sub
or
nop
inc
ret
jle
cwtl
xchg
lds
daa
push
lahf
pusha
addr16
mov
push
bound
in
jp
shr
mov
sbb
aad
pop
pop
inc
dec
test
cmp
lds
cmp
adc
xchg
push
mov
push
jns
mov
xor
xchg
push
push
lock
arpl
out
add
aad
xchg
stos
das
rcrl
test
mov
rcr
mov
dec
imul
pop
loop
aad
js
mov
out
std
insb
int3
test
shll
push
jnp
adcb
or
add
mov
loopne
inc
sbb
push
pop
daa
stc
mov
inc
xor
test
lret
ret
dec
loop
cmc
jmp
cld
ror
in
and
movsl
xchg
cmc
into
dec
sbb
out
repz
add
inc
lret
dec
sub
or
into
push
push
outsb
lcall
lods
pop
rcll
outsl
dec
push
push
enter
ljmp
shl
int
addr16
xor
pop
push
arpl
jns
movsl
ljmp
sbb
xor
add
test
inc
enter
or
gs
fsubp
adc
adc
sar
sbb
ret
nop
or
mov
inc
add
ret
stc
lods
ljmp
ja
push
leave
addr16
repz
rcl
and
mov
mov
ret
sbbl
fisttpl
or
negl
lret
into
xor
outsl
test
sti
pop
outsl
push
gs
jno
cmpsb
sub
lock
iret
mov
test
shll
in
fs
test
lret
test
fstpt
cs
enter
clc
cmp
sarl
mov
add
outsb
out
add
add
dec
ds
ljmp
add
or
mov
sub
add
aas
fcoml
out
in
push
cmp
mov
pusha
mov
sub
mov
push
mov
mov
xor
cmove
std
adc
mov
int
fnstenv
mov
sub
mov
ss
mov
mov
fstpt
push
dec
cmp
add
xor
test
dec
sbb
mov
andl
aam
sbb
jge
lahf
insb
add
insb
sub
int
inc
sub
lcall
nop
fsubr
push
mov
enter
loopne
adc
push
inc
or
dec
cmpsl
in
add
gs
call
inc
adc
insl
fmulp
cmp
mov
adc
or
inc
popf
xchg
ljmp
jo
mov
add
push
out
mov
arpl
cmp
mov
jle
cltd
loop
fsts
push
push
jno
cmp
mov
add
insl
loop
clc
mov
stc
rorb
ret
sbb
ror
fistps
idivl
mov
enter
push
jl
pop
imul
adc
dec
int
icebp
and
dec
inc
mov
push
jg
push
push
inc
clc
cltd
out
sub
test
jbe
roll
test
mov
adc
mov
dec
add
enter
mov
and
ds
test
insl
inc
ss
decl
adc
pop
aam
and
mov
jno
mov
jae
test
dec
loopne
push
jo
xchg
cmp
cmp
sub
hlt
shll
iret
jnp
cmc
fnstenv
test
mov
aam
adc
mov
div
fwait
imul
sbb
rcl
mov
mov
dec
jb
cltd
pop
jo
jl
add
fs
mov
test
movsl
fldt
ss
sti
aad
mov
imul
rolb
aad
cmp
pop
xor
imul
inc
sbb
imul
adc
adc
xor
in
insl
rorl
xor
mov
imul
fidivl
lods
int3
mov
add
xor
jl
and
ss
fistpl
mov
cmp
pop
fdivrs
jne
pop
test
ret
test
jae
fisttpl
insl
pop
addb
cmp
sub
mov
mov
lock
mov
and
jmp
lret
popf
inc
lods
sbb
lock
pop
push
jg
or
add
loope
jmp
rcrb
jmp
xchg
fldcw
adc
das
sti
pop
dec
cmp
pop
fnstenv
jnp
dec
xor
test
enter
mov
lea
jnp
sbb
and
inc
mov
fbstp
lahf
test
sub
out
icebp
fisubrs
mov
inc
pop
jg
mov
inc
pop
mov
sub
pop
add
cmp
test
in
scas
ret
stos
mov
cltd
xchg
push
cmp
rorl
call
sub
mov
and
enter
add
outsb
add
add
mov
xchg
jne
push
mov
shrl
xchg
add
fidivl
jae
test
pop
cmp
or
test
loop
xchg
scas
add
jmp
repnz
ss
or
add
xor
cmpsl
adc
out
inc
popa
push
add
pop
fisubrl
pop
xchg
pop
add
daa
cmp
jmp
jno
inc
xorl
cmp
pop
add
sub
cmpsb
adc
stos
out
cmp
fmuls
push
adc
add
push
adc
hlt
jge
xchg
push
sub
leave
rcrb
lret
mov
push
ds
sahf
popa
sti
mov
xchg
jge
and
testl
in
out
rolb
mov
dec
mov
movsl
stos
adc
fisttps
faddl
sub
inc
sahf
mov
sbb
int
dec
std
aad
add
xchg
dec
or
pop
imulb
mov
in
jb
shll
leave
xor
sbb
in
or
cld
mov
sbb
ret
sbb
jns
pop
mov
push
arpl
mov
push
aas
jl
int
mov
into
push
mov
jle
inc
in
aaa
lock
lahf
sub
jmp
xor
movsb
sub
dec
test
cmc
jnp
mov
test
aad
push
mov
inc
sbb
inc
movsb
addb
mov
mov
mov
xor
jge
dec
int3
mov
popa
stos
xor
int
imulb
addr16
sub
loopne
loop
jmp
mov
or
lods
xorl
je
daa
or
cmc
into
mov
fsubs
out
xor
jns
call
int3
adcb
cli
out
fisttpll
negl
jae
test
into
mov
fwait
xchg
lea
and
cmp
in
dec
fcoml
hlt
ja
insb
dec
repz
test
add
pop
add
fld
lahf
jbe
push
jge
dec
dec
shrl
mov
scas
test
inc
sub
push
stos
inc
push
sbb
mov
outsb
mov
dec
push
mov
shl
dec
adc
test
mov
rcll
sbb
in
sbb
cmpsb
andl
into
jp
inc
arpl
cmp
push
pop
push
mov
pop
in
mov
mov
sbb
in
cmp
dec
dec
cwtl
xor
push
sarl
pop
lahf
out
jmp
adc
cmpsl
sbbl
std
dec
push
gs
pop
push
aam
fs
dec
rorl
mov
orl
aam
cmc
mov
adc
popf
subl
jbe
inc
cld
xor
mov
sbb
aam
addr16
enter
mov
int
cli
in
inc
jne
cld
int3
jns
adc
cltd
mov
push
mov
adc
test
mov
push
repz
movhps
ja
clc
dec
and
and
ret
rclb
fisubrs
xchg
cmp
out
push
inc
arpl
xor
xor
test
popa
mov
stos
ret
jbe
movsl
sub
dec
and
cmpsl
fwait
dec
lock
add
mov
jle
xor
dec
stos
test
pusha
xchg
mov
inc
or
mov
rol
test
cmpb
fdivl
jle
jae
xchg
mov
push
ret
pop
shl
ret
xchg
jo
roll
mov
add
mov
jp
jmp
out
xor
sbb
outsb
in
arpl
sbb
push
popa
test
lods
mov
jno
jae
cmpl
test
shlb
filds
xchg
xor
mov
mov
pop
leave
or
addr16
sbb
pop
fwait
dec
jg
cmp
sub
test
sbb
ja
xchg
add
mov
test
sub
addl
inc
loope
movsl
jmp
push
dec
adc
dec
or
mov
xchg
test
xor
dec
test
sub
mov
test
sbb
push
jmp
testb
xchg
ljmp
jns
jo
push
std
orl
inc
lea
loope
insl
and
dec
sub
addl
pop
repz
es
adc
iret
andb
incl
jmp
or
rcl
scas
xor
int
orl
push
fldcw
test
loope
pushf
test
daa
inc
jb
popf
mov
jno
inc
repnz
rorl
aad
xchg
sub
jmp
inc
push
popf
out
in
sub
stos
dec
and
jno
inc
or
pop
cmp
pop
leave
scas
mov
xchg
and
jne
ss
sbb
jp
add
pushf
out
sti
xor
rorl
jbe
pop
jns
pusha
notl
and
fistpll
add
xor
mov
lods
movsl
xor
mov
mov
outsb
mov
movsb
push
mov
push
push
cld
ja
mov
imul
or
jne
aam
sub
pop
shr
mov
dec
mov
arpl
mov
je
push
push
cmc
mov
fsts
pop
push
lret
movsb
test
push
sub
test
movntq
xor
or
fdivp
inc
dec
mov
jle
xchg
in
or
enter
jns
into
aaa
in
js
inc
scas
data16
mov
xor
repnz
into
adc
xor
or
push
stos
ds
lret
nop
stc
cmp
adc
test
je
xor
push
or
pop
xchg
xchg
sbb
aad
pusha
lock
jae
add
fstl
push
xor
mov
mov
test
adcl
in
and
mov
bound
loope
push
cmc
adc
test
or
adc
xchg
cmc
std
repz
sbb
dec
into
pop
jb
lods
test
fisubl
out
std
jg
mov
mov
mov
inc
mov
sub
sbbl
mov
jle
push
or
lret
sbb
inc
jae
iret
push
loope
jns
inc
mov
adc
mov
add
mov
repz
clc
sub
cwtl
leave
and
pusha
xlat
jns
or
mov
adc
aam
sub
inc
shll
xchg
push
ret
xchg
cltd
pusha
sub
mov
ja
js
push
add
sbb
mov
fadd
inc
dec
test
divl
pop
std
sbb
cmp
pop
lock
push
lods
xor
test
mov
push
mov
jo
xchg
test
inc
jecxz
sahf
test
pusha
mov
sbb
pop
fcmove
and
lret
and
aas
mov
lret
dec
inc
jns
cmc
dec
popf
popa
cmp
enter
sub
ret
addr16
aam
push
vshufps
leave
pop
stos
mov
test
pop
mov
fucomp
dec
cwtl
xchg
iret
mov
jmp
cmc
cmpsl
sub
mov
add
pop
repnz
and
insl
aam
pop
not
popa
jbe
mov
scas
ret
hlt
fisubs
jne
aam
pop
or
sub
lret
loop
sub
rep
sub
daa
ds
jae
insb
xor
lods
test
xchg
icebp
xor
dec
movsl
mov
imulb
mov
sbbl
push
test
sbbb
fnstcw
jbe
sub
pop
test
or
sarl
enter
into
mov
test
sarl
in
insb
idivb
loope
cmp
test
shll
int
lret
shrl
mov
jne
push
int
test
mov
fdivl
mov
test
call
xchg
call
ss
xchg
dec
mov
mov
mov
inc
jne
fldcw
mov
adc
inc
sub
flds
push
inc
js
or
push
movsl
shll
pop
dec
test
add
mov
das
xchg
xor
mov
ds
ret
sub
jecxz
sbb
pusha
arpl
aas
dec
rorl
enter
idivl
and
test
adcb
mov
xor
jecxz
or
in
inc
sbb
lcall
enter
push
sarl
fstpt
dec
sahf
sub
mov
hlt
xor
test
add
push
inc
or
mov
mov
jo
cmpb
lods
cld
jmp
rcl
mov
add
xor
into
sbb
lret
lahf
pop
inc
inc
ret
into
rorl
add
add
lock
cltd
sub
mov
fwait
mov
xor
pavgb
cltd
std
mov
movb
jge
pusha
fiaddl
popa
adc
xor
dec
mov
in
rclb
add
fidivl
mov
sti
mov
pusha
fs
or
shll
jae
fsts
add
mov
inc
add
or
push
inc
mov
or
das
cs
inc
pop
or
sbb
rorb
psubsb
mov
fisttpll
sub
test
add
test
adc
push
dec
xchg
sahf
mov
daa
pop
or
loopne
ss
jns
inc
lret
lret
fistpll
mov
stos
aad
or
mov
and
andb
xor
mull
xchg
nop
push
inc
xchg
mov
decl
mov
loopne
inc
mov
jo
test
aas
mov
cmpsl
xchg
jp
ret
cmp
jl
lahf
lahf
mov
clc
stc
imul
dec
inc
repz
cwtl
lret
sbb
adc
mov
test
or
daa
in
mov
icebp
subb
add
ret
sbb
sbb
ficompl
cmpsl
test
and
dec
flds
dec
sub
inc
das
push
cmpsb
mov
movsb
cli
add
ret
jae
imul
lret
push
push
push
dec
xlat
jnp
mov
shl
mov
std
insb
sub
fldcw
aam
mov
jnp
cmp
inc
rol
das
test
pushf
cmc
movsl
pop
stc
jnp
loop
movsb
push
jmp
aam
mov
jae
jp
mov
lods
add
leave
mov
pop
testb
test
xor
pop
fsubrs
insb
pop
inc
xor
fld
push
rcrl
xor
test
dec
mov
cmp
enter
dec
inc
mov
fldcw
icebp
jl
adc
gs
mov
mov
inc
shrb
fisubl
enter
push
jns
lea
pop
mov
sahf
popa
adc
repnz
mov
int
inc
mov
add
jecxz
push
iret
dec
mov
push
sahf
stos
push
add
mov
jg
cmp
loop
shrl
pop
adc
notl
hlt
mov
mov
mov
test
xor
faddl
pop
push
imul
and
cmc
inc
dec
shrl
adc
sub
and
xor
push
mov
loop
mov
pop
roll
cwtl
dec
mov
test
xor
inc
add
dec
mov
enter
test
lret
or
jp
ljmp
fs
stc
push
into
dec
test
mov
fbstp
xchg
daa
hlt
inc
mov
ljmp
push
inc
in
pop
testl
cmpsl
stos
ficoms
inc
cmp
mov
int3
test
fdivr
test
dec
les
cmpsl
mov
sub
mov
mov
sbbb
ljmp
dec
hlt
jge
cmc
mov
jmp
andl
inc
mov
lret
bound
test
dec
arpl
les
add
or
inc
cmp
or
pushf
cwtl
ret
cmp
cmc
mov
cmp
popa
mov
or
push
mov
lods
gs
jecxz
loope
add
cmpl
jle
in
outsl
cmpsl
or
lahf
dec
flds
mov
jmp
mov
and
mov
jnp
adc
out
movsl
pushf
and
cwtl
enter
mov
xchg
jecxz
sub
xor
push
sbb
inc
sub
insb
mov
lahf
jmp
add
imul
movsb
stc
adc
xchg
aaa
shrl
inc
sub
mov
inc
shll
mov
dec
inc
mov
out
sub
jne
jae
mov
lods
mov
lcall
xor
shll
jne
inc
mov
mov
xor
dec
test
jae
jl
nop
jecxz
in
test
xor
inc
roll
add
jns
testb
xor
inc
mov
sti
adc
push
pop
aam
mov
data16
aaa
xor
fst
mov
jne
push
int3
mov
push
clc
cmp
fnsave
movsl
xor
pop
jge
fbstp
cwtl
test
in
dec
in
push
fsubp
mov
sbbb
xchg
pop
mul
xor
lods
push
inc
repz
hlt
cmpsl
lds
in
call
or
xchg
mov
imul
fbstp
cli
popa
out
gs
add
push
adc
ja
arpl
mov
sub
stos
push
mov
lret
cmpb
insl
arpl
aad
shll
mov
jle
movsl
pop
push
das
mov
sbb
in
sbb
cmp
fcoml
repz
fs
jl
lret
int3
mov
cmp
or
mov
fbld
inc
in
adc
or
xor
jge
dec
push
pop
inc
sbbb
imull
pop
sbb
mov
das
mov
add
jge
inc
imul
xor
mov
mov
call
js
cmpsl
icebp
nop
in
mov
dec
dec
xor
es
js
aaa
test
jge
cmpsl
lret
test
shlb
imul
dec
or
jp
jecxz
mov
jae
popa
fmuls
mov
inc
mov
dec
mov
das
pop
push
jbe
jns
xlat
hlt
xchg
jp
icebp
mov
stos
or
adc
push
aas
leave
das
pushf
sti
inc
int
aam
push
xchg
out
pop
ja
mov
lret
mov
cmpsl
js
pop
scas
ds
push
mov
jle
sbb
test
pop
icebp
sbb
mov
dec
pop
and
mov
add
mov
stc
mov
push
push
fidivrs
jle
jl
inc
mov
sbb
cwtl
push
mov
adc
ja
cmp
gs
pop
mov
nop
gs
rcrb
inc
into
shrl
outsb
add
mov
movsb
jecxz
push
mov
push
pop
cmp
xchg
pop
imul
icebp
mov
pop
push
dec
jnp
ds
movsb
mov
divb
cs
sub
cmpsl
or
test
pop
daa
and
int
movsb
xor
and
popf
cmpsb
test
push
or
in
lea
lock
sub
pop
xchg
icebp
shrb
lahf
in
xor
test
lret
dec
dec
scas
cld
subl
pand
and
jnp
stos
push
push
cltd
jecxz
add
mov
ret
rcrl
stos
pop
mov
movl
loope
jle
insb
int
push
inc
sbb
ret
dec
int3
fsts
sti
xor
lea
push
mov
rcrb
pop
enter
fwait
mov
stos
cli
adc
std
out
ret
mov
out
pop
mov
subl
gs
ss
mov
pop
xor
std
adc
mov
push
out
xor
jle
in
pop
add
push
test
fs
pop
sub
push
add
cmpsb
test
push
add
pop
in
dec
outsb
mov
jl
lcall
lahf
mov
movsw
mov
xchg
adc
fisubl
mov
fmuls
leave
add
mov
xor
mov
mov
push
test
stc
mov
aas
cs
mov
movsb
pop
int3
lret
or
daa
push
subl
clc
sub
mov
push
outsb
sub
dec
push
test
mov
xor
pop
pop
inc
xor
imul
inc
sub
fs
add
xor
cltd
dec
adc
cmpb
mov
ds
cmp
mov
or
mov
sbb
fistps
jmp
fld
add
push
leave
into
dec
aam
cmp
fisubrs
sub
test
mov
clc
jp
sbb
test
ret
gs
movsl
cli
or
pop
adc
or
jle
or
mov
adc
sbb
nop
es
cmp
imul
scas
bound
aam
fnsave
inc
nop
lock
inc
out
xchg
add
mov
xlat
jns
icebp
mov
inc
jbe
cmp
mov
pop
pop
jge
push
lock
aam
xlat
jl
push
or
fldl
jecxz
cmpsb
inc
jbe
sub
test
or
loopne
mov
pushf
xlat
jp,pt
mov
sbb
sti
int
sti
inc
andl
inc
notb
mov
shrl
mov
xor
div
lods
mov
mov
jae
dec
mov
cmpsl
push
out
xor
roll
jb
mov
dec
xchg
sub
mov
mov
inc
jae
test
push
inc
arpl
std
lock
gs
jecxz
sbb
mov
int3
mov
mov
and
mov
popl
mov
dec
mov
pop
sub
jae
sbb
iret
add
mov
mov
aaa
adc
mov
sti
enter
outsb
sti
pop
in
xchg
rorl
push
sub
dec
add
inc
test
sbbl
push
mov
cmp
dec
int
pushf
pop
cmp
xor
jge
loope
cmpsl
add
cmp
pop
push
adc
jne
ror
or
aas
gs
icebp
test
fnstcw
scas
lahf
in
adc
ja
pop
andb
xchg
nop
cmp
xor
mov
in
inc
fucomip
inc
sbb
testb
xchg
sbb
pop
in
or
test
dec
sub
sarl
pop
gs
mov
jns
pop
out
fwait
test
fs
fdivl
dec
xor
xchg
cltd
mov
adc
mov
mov
divl
push
test
jns
jl
push
mov
scas
add
lds
outsl
push
iret
cmc
test
outsb
fnsave
dec
mov
add
lds
mov
out
cmp
fwait
ja
into
cwtl
xchg
adc
in
cmc
ud1
sahf
and
inc
pop
ror
xor
push
addr16
jbe
sub
cmpl
test
cmpb
add
enter
mov
add
dec
mov
cmp
mov
fidivrs
push
jbe
test
jp
imul
dec
imul
or
jnp
out
and
xchg
shrl
addr16
inc
in
jae
sub
push
pop
and
cmp
popfw
mov
xchg
ljmp
hlt
mov
fnstcw
push
movsl
decb
and
sbb
pop
stc
loope
popf
aad
adc
or
sub
in
push
dec
mov
xchg
adcb
fbld
xor
clc
sbb
scas
int
addr16
aad
push
mov
icebp
jnp
sti
test
mov
inc
and
mov
dec
jge
lahf
je
xor
mov
sbb
es
mov
dec
mov
dec
addr16
mov
js
inc
xchg
or
pop
xlat
xchg
sbb
mov
hlt
mov
cli
sub
fistpl
dec
cmpsb
xchg
xlat
mov
rcrl
test
or
push
stos
push
pop
and
xchg
sub
rorl
mov
jp
fdivp
mov
mov
jbe
cmpsl
out
cmc
iret
cmpsb
stos
mov
xor
lea
dec
pop
inc
je
fidivs
bound
dec
popf
push
dec
inc
add
pop
test
lcall
shlb
cli
inc
jle
add
fsubrl
xchg
jmp
or
mov
ja
mov
adc
jns
jbe
nop
dec
xchg
jno
int
and
lods
hlt
jl
xchg
lds
pop
jne
adc
jns
lahf
mov
jg
mov
daa
lock
inc
insl
inc
xchg
cmpsb
andl
or
push
es
jecxz
and
add
test
lret
call
push
pop
push
add
es
and
mov
int
sbb
and
shrb
jo
add
in
add
lahf
add
movsl
fldcw
push
stc
stos
or
movsl
test
test
push
cmp
pop
xor
jmp
test
xchg
add
mov
xchg
popa
xchg
movsb
das
int3
test
sub
pop
jl
mov
dec
xchg
test
xchg
enter
filds
xor
pop
push
dec
jle
jecxz
adc
pop
xlat
imul
or
mov
data16
idivb
and
pop
xchg
and
popf
imul
and
std
pop
out
mov
pop
es
aaa
pop
pusha
cwtl
adc
mov
mov
test
lods
mov
inc
into
inc
adc
cmc
sub
mov
pop
mov
xchg
mov
or
cmpsb
clc
outsl
setb
les
testb
jo
fldcw
rclb
icebp
fwait
mov
lret
in
push
mov
ds
add
or
mov
test
std
mov
or
sbb
lods
int
in
call
popa
add
ds
push
enter
xor
inc
cmp
xor
xlat
xor
push
or
add
out
lods
push
mov
test
adc
pop
pop
stos
inc
pop
or
add
mov
push
stos
push
adc
hlt
sub
mov
andb
xchg
enter
ret
cmp
push
push
inc
movsb
fdivl
outsl
popa
out
hlt
jo
lret
jg
cmpsb
sti
sbb
sbb
add
iret
mov
push
adc
addr16
lea
sbb
xchg
sub
jmp
stos
in
cmp
aam
je
adc
test
add
jbe
sub
pushf
mov
and
pop
xor
fcoms
aad
imul
sarb
dec
iret
hlt
cmp
or
mov
repnz
lret
test
or
and
mov
arpl
imul
jno
popa
xor
xchg
int
inc
push
fstpl
sbb
mov
test
imul
push
mov
hlt
jae
cmc
orb
scas
xor
dec
dec
lcall
lret
add
mov
or
add
pop
ficoml
add
fistl
cmpsl
xorb
xchg
dec
sub
mov
insb
push
dec
das
ret
loopne
inc
gs
aam
cmp
xor
pusha
int
mov
jmp
mov
mov
lret
ret
mov
push
add
push
pop
xor
cmp
add
jg
lahf
dec
jae
sahf
es
xchg
or
in
jmp
loope
mov
ret
xchg
sbb
mov
mov
sbb
sub
or
in
fmull
subl
xor
jge
fndisi(8087
popf
push
fs
mov
imul
dec
jnp
jo
xchg
sbb
xor
je
data16
add
movsl
ret
inc
scas
pop
jnp
adc
orl
aad
xor
jg
iret
jne
lea
sub
pop
test
test
aas
pop
mov
mov
test
xor
notl
jmp
or
jno
icebp
xchg
add
lahf
pop
mov
xor
pop
or
fadds
or
mov
sahf
add
or
mov
dec
aas
fdivs
lea
pop
add
pusha
mov
cli
dec
and
jns
test
aaa
cli
pop
pushf
test
jno
in
mov
add
and
aas
lret
xor
iret
mov
xor
loopne
xcrypt-ecb
cmpsl
lret
gs
out
or
adc
pop
jns
push
repnz
inc
pop
adc
pop
out
ret
adc
pop
test
jns
sbb
les
xchg
outsb
mov
or
pop
icebp
jbe
or
dec
xchg
add
cmc
in
pause
push
ds
or
decl
mov
inc
mov
pop
xor
add
cmp
ds
test
push
inc
inc
inc
xor
sbb
push
mulb
or
into
mov
jp
cmc
add
jne
pop
fmul
jle
push
mov
test
push
sti
aam
sub
cmp
dec
push
lods
mov
xor
push
mov
push
test
movl
pop
jae
pop
inc
icebp
rorl
call
test
mov
mov
daa
mov
jge
popf
aam
xor
imul
mov
int
call
mov
dec
sbb
daa
or
dec
push
into
lds
adc
xchg
repz
shr
xchg
shll
les
lods
lea
sarl
inc
xchg
push
cmp
daa
lahf
lds
inc
arpl
or
mov
icebp
mov
cs
filds
lea
mov
fldt
js
loope
loope
stc
jae
std
dec
adc
notb
dec
xchg
arpl
movb
fdiv
push
or
pop
inc
clc
sbb
xchg
lret
mov
pop
test
inc
data16
lock
jg
inc
add
mov
js
adc
ja
mov
dec
negb
sbb
pushf
pusha
sub
sbb
arpl
add
sarl
push
adc
push
fsubs
rcll
add
inc
xor
fs
adcl
push
stc
pop
jnp
xchg
mov
and
fsubrs
lods
jno
add
out
jge
add
fnstsw
and
adc
test
sub
jae
mov
sbb
jne
inc
jo
inc
jmp
push
jle
pop
jno
test
scas
xlat
cmp
divl
sbb
aam
pusha
xor
test
inc
ljmp
inc
test
push
lahf
mov
outsb
push
and
adc
jge
test
xor
aam
rorl
push
mov
mov
jp
lock
jno
fldcw
cmp
sbb
icebp
jle
push
push
or
pushf
dec
int
xchg
popa
sbb
sub
inc
movsb
das
stc
fistl
pop
adc
inc
sub
or
insb
push
popf
dec
loope
pop
mov
adc
inc
fs
loope
dec
pop
pop
lock
aad
inc
lahf
xlat
mov
imul
jle
mov
sub
fadds
shll
sbb
leave
pop
rcr
int
or
sbb
aad
outsb
lock
test
or
adc
sti
repnz
mov
or
cwtl
fiadds
xor
rcl
jle
sub
jle
enter
pop
and
ret
sahf
ljmp
xor
push
cmp
pop
jge
dec
ret
push
movsl
add
lahf
mov
or
subb
loop
mov
xor
xor
or
into
mov
sub
lret
xchg
xor
lea
arpl
inc
sbb
pop
mov
test
adc
xor
out
or
pop
dec
cmp
stos
xchg
sbb
scas
inc
inc
pop
scas
push
pop
mov
add
jp
insb
inc
cwtl
cmp
lds
jo
sub
mov
inc
and
mov
lcall
inc
add
xorl
jecxz
xchg
inc
test
cmp
and
imul
fs
test
pusha
pop
out
xor
xchg
jae
pushf
xchg
jne
int3
out
lods
mov
jno
cmpsl
push
lret
mov
add
sbb
sub
mov
sbb
sbb
inc
lret
mov
movsl
xchg
adc
das
out
mov
push
mov
lahf
mov
add
int
mov
add
jecxz
cs
dec
xchg
sbb
sbb
push
scas
icebp
jns
mov
jle
vmovhpd
mov
push
mov
cmpsl
adc
mov
xor
inc
push
lock
test
mov
push
dec
dec
and
dec
in
dec
inc
xor
pushl
clc
sub
dec
dec
pop
and
jns
rcrb
dec
rcll
sub
out
into
mov
add
mov
xor
loop
xlat
sub
jne
inc
sbb
pextrw
mov
or
sbb
add
insb
scas
sub
cli
ret
mov
xor
fnsave
rclb
negl
stos
push
adc
jecxz
jmp
shl
test
mov
mov
insl
push
les
or
add
pop
sbb
jae
or
or
mov
into
fstps
dec
rcrb
rol
ret
push
cld
xchg
out
fistps
push
inc
rol
push
sub
push
xor
loope
adc
sbb
data16
test
inc
jae
mov
neg
or
and
sbb
xchg
fidivl
loopne
mov
cmpl
movsb
jle
adc
and
or
aam
imul
pop
subl
fnstcw
cmpsb
sbb
rorb
inc
cwtl
inc
adc
popa
mov
dec
fs
pop
cmpsl
lahf
or
adc
dec
ret
mov
in
fimull
mov
pop
push
mov
subl
mov
mov
push
fldt
stos
mov
push
cmp
jbe
lahf
cltd
or
mov
test
sbb
leave
cmp
es
cwtl
in
jae
in
jg
pop
adc
xor
mov
xchg
pop
or
push
push
cmp
enter
or
push
mov
add
out
decb
sti
dec
outsl
in
jle
pushf
pop
inc
aad
xchg
fs
enter
jne
sbb
fsubrp
push
push
push
cmovle
sub
adc
dec
sub
and
xor
ret
imul
ret
dec
cmp
cli
jp
outsl
xchg
adc
mov
sbb
adcb
inc
push
ficompl
ret
mov
or
repz
add
mov
sub
repnz
test
mov
aas
mov
adc
push
and
jo
or
and
pop
xor
sub
das
shrl
test
fwait
and
pop
cmp
and
sarl
pop
xchg
scas
insb
and
jge
sahf
push
movsb
inc
jl
xor
push
call
dec
out
or
add
add
gs
jns
repz
popf
xorb
scas
push
cmp
repnz
xchg
aaa
aas
imul
std
push
inc
jecxz
mov
add
icebp
jne
mov
ljmp
hlt
daa
mov
pop
dec
scas
pop
repnz
push
loopne
popa
in
test
pop
daa
dec
mov
xchg
add
test
bound
or
les
inc
enter
mov
movsl
cld
push
sbb
mov
xchg
inc
or
jne
mov
jb
incl
push
mov
clc
adc
add
or
mov
loop
paddq
sbb
or
push
lock
imul
test
ds
push
fsub
mov
inc
add
inc
outsl
ja
roll
test
imul
js
aas
push
les
popf
or
inc
insl
enterw
sub
add
mov
scas
mov
repz
dec
or
push
stc
scas
cmc
and
mov
jo
cmp
ss
sub
rclb
inc
decb
hlt
out
mov
pop
btr
lock
ds
and
lahf
int
test
out
push
add
inc
jp
ret
adc
pop
push
outsl
or
cmp
push
arpl
inc
insb
rcrb
ret
push
loop
fwait
cld
loope
ret
jg
clc
xor
js
mov
bnd
mov
popa
inc
mov
push
mov
xchg
idivl
mov
fisttps
xchg
or
and
js
inc
fsubs
adc
into
pop
xchg
jnp
inc
sbb
sbbl
pushl
outsb
test
or
pop
jecxz
fmull
cmp
sarb
imul
inc
repnz
push
mov
outsl
or
add
sub
cmp
jns
ret
push
mov
test
fnstenv
stos
in
int
and
mov
lret
dec
movsl
int3
lsl
lcall
les
sbb
xor
ljmp
stos
nop
xor
aad
jle
pop
jae
mov
jg
or
mov
push
lcall
test
inc
sbb
push
cmp
repz
or
pop
es
jp
mov
cmp
push
mov
loope
fsubl
shll
imul
sub
mov
mov
test
mov
jle
push
sub
into
pop
shll
fnstsw
push
jns
sub
faddp
inc
stos
pop
cltd
test
aaa
fbstp
imul
cmp
fwait
mov
scas
in
inc
mov
in
or
push
imul
fs
sbb
into
push
inc
testl
jl
aam
and
jbe
xor
popf
dec
adc
cmp
lret
jl
jns
cmp
xchg
jno
popa
std
pop
add
arpl
sbb
js
mov
pop
push
test
mov
pushf
sub
adc
xchg
adc
and
jmp
inc
pop
or
xor
pop
jmp
mov
inc
pop
add
popa
jecxz
rcl
imul
addl
cli
test
inc
xchg
sbb
sarb
mov
mov
mov
mov
jnp
jns
aam
test
jmp
js
sbb
or
jne
and
pusha
psubd
test
xor
repnz
leave
xlat
adc
loope
add
and
enter
popa
iret
jae
push
xor
sub
in
xor
ficomps
iret
rcr
icebp
mov
mov
or
jno
jmp
es
repnz
repnz
test
das
inc
inc
or
sbb
sbb
push
lcall
add
js
mov
enter
xchg
movsl
jae
xor
mov
jnp
inc
sbb
or
mov
stos
int3
int
call
inc
cmp
mov
mov
das
sbb
inc
mov
mov
sbb
sbb
sahf
jmp
push
lret
jl
cmpsl
shl
jge
dec
scas
popa
cmp
jbe
add
stos
jne
jnp
adc
inc
aam
cmc
fs
test
fwait
add
ljmp
sbb
cmp
xor
je
loop
pop
mov
pushf
lods
icebp
inc
xor
ss
jno
jns
leave
lock
mov
and
pop
xor
pop
cwtl
jmp
xchg
adc
mov
outsl
fs
test
push
pop
sbb
sub
pop
sbb
mov
mov
mov
add
insl
mov
inc
lahf
xor
mov
push
inc
in
shlb
sti
pushf
loope
jge
jno
jo
or
cmp
je
aam
orl
fists
test
fstl
loopne
inc
fdivs
adc
cli
pop
or
pop
jp
jle
icebp
jl
and
inc
inc
jmp
jns
test
inc
sub
pushf
shl
in
test
icebp
inc
test
mov
cmp
rclb
mov
outsl
mov
cmpsl
and
push
mov
lret
cmp
sub
cmp
popa
cmc
lret
jmp
push
xchg
sbb
mov
bound
inc
push
or
inc
fdivs
repnz
jne
pop
jnp
pop
int
stc
scas
xchg
icebp
insb
jle
dec
sbb
lock
push
icebp
out
cmp
icebp
fnstsw
arpl
rcll
ret
jb
pop
jns
jbe
add
leave
adc
sub
int3
aas
sarb
sbb
push
test
or
int3
cld
pop
push
inc
fstl
jmp
test
rol
out
push
or
xchg
cmpsb
hlt
and
je
daa
mov
sbb
xor
lahf
icebp
dec
mov
pusha
dec
rcll
imul
nop
jmp
sbb
push
sub
in
seta
sti
sbb
insb
arpl
hlt
pop
fnstenv
jo
or
cs
pop
jns
ret
shl
test
xor
xor
mov
mov
gs
daa
test
mov
pop
sbb
dec
dec
outsb
imul
pop
sbb
mov
push
sub
or
push
pop
test
push
adc
adc
xor
lock
lcall
mov
xchg
xorb
xor
test
sahf
inc
mov
cs
cmp
les
into
xchg
lock
pusha
rol
sub
test
sub
mov
ljmp
out
in
jno
dec
add
dec
gs
daa
outsb
sarl
cmp
iret
jg
mov
jne
fidivrs
cmpsb
fiaddl
mov
mov
loope
inc
rorb
movsb
je
imul
xor
movsb
dec
sbb
xor
sub
dec
pop
jb
jno
mov
jo
scas
add
in
jg
test
addr16
mov
inc
mov
rolb
lock
cmp
mov
flds
leave
xor
sub
mov
lret
fwait
lahf
xchg
inc
mov
push
into
add
lock
pop
jle
jp
xchg
sub
and
mov
es
xchg
outsl
mov
sub
aas
adc
imul
add
mov
ficompl
cvtps2pd
test
adc
pop
mov
push
imul
pop
fdivrl
add
aad
sarl
cmp
nop
faddp
mov
mov
adc
sub
test
shl
clc
hlt
or
push
mov
pop
mov
rorb
xchg
push
aas
dec
pushf
mov
cpuid
or
sbb
stos
xor
lret
or
mov
popa
loopne
or
pop
fnstcw
subl
int
fnstcw
and
cmpxchg
xlat
shll
cmc
pop
insb
and
pop
loope
xor
sbb
mov
insl
and
outsb
inc
ror
test
std
cwtl
mov
mov
xor
adc
xor
fdivl
test
push
inc
roll
mov
fwait
pop
jle
pop
sub
out
lea
stos
ret
stc
sbb
xchg
sub
stos
loopne
pop
fisttpll
push
cmpsl
lods
repnz
outsb
push
mov
lock
dec
jns
jp
jne
sbb
mov
add
inc
xor
mov
push
mov
ret
cwtl
mov
pop
repz
insl
mov
mov
jp
dec
xor
test
cmp
jo
out
repz
ret
mov
outsl
clc
mov
test
lock
jno
mov
out
lret
test
pop
sbbb
popa
push
or
xchg
xor
sbb
inc
je
dec
test
cmpl
daa
hlt
fistl
ret
or
push
cmp
push
pop
aaa
jbe
dec
jo
adc
sti
adc
add
mov
push
data16
sbbb
ljmp
mov
cmpsl
dec
mov
cmp
test
enter
aas
sahf
ret
dec
jle
test
test
fnstcw
icebp
jg
mov
mull
push
cwtl
or
hlt
pusha
dec
xchg
in
sbb
lahf
sarl
adc
sub
dec
jnp
mov
popf
outsb
jle
aaa
and
scas
xor
icebp
mov
adc
inc
outsb
jno
mov
fnstcw
xor
jne
cmp
repz
mov
lods
push
pop
cmpsl
sub
inc
repz
pop
dec
stc
xchg
add
ljmp
mov
push
dec
jo
dec
fadd
jno
sub
arpl
int3
add
lods
lds
sbb
or
adc
roll
push
movsl
or
sbb
jne
insb
sbb
cmp
cmpsl
and
clc
inc
cmpb
loope
repnz
jg
lret
pop
test
imul
xor
sbb
mov
sbb
lret
xor
sti
adc
dec
je
cmc
push
enter
es
inc
xor
mov
inc
cwtl
loope
xchg
cmpsl
test
lods
sbbl
sbb
imul
test
movsb
mov
pop
or
add
stos
dec
fisubl
adc
dec
test
pop
mov
sub
xchg
push
leave
adc
xor
and
lret
mov
jns
outsl
popa
inc
enter
push
dec
movsl
insb
or
ret
xchg
fidivrl
lods
int
or
test
incb
xor
pop
adc
lea
int3
or
rorl
cmp
sarl
jl
mov
repz
mov
xchg
inc
mov
or
xchg
lds
and
dec
jge
ss
pop
adc
cmc
push
mov
mov
sbb
movl
std
add
cli
into
adc
ljmp
addb
enter
insl
je
mov
xchg
fs
jne
or
pop
adc
enter
pop
or
ds
pop
jmp
mov
xchg
shll
push
in
fucom
lods
mov
mov
and
xor
adc
int3
xchg
cmp
mov
sbb
mov
pop
outsl
pop
cmp
push
fwait
enter
push
sbb
daa
push
cmp
dec
ljmp
test
test
or
inc
into
mov
or
lock
inc
dec
add
pop
jl
or
sub
lock
mov
es
xor
scas
push
out
dec
xchg
inc
cmpsl
sbb
pop
aam
inc
int
inc
add
aam
dec
orl
cmp
dec
dec
mov
add
or
sbb
aam
dec
cmp
aam
aaa
aam
adc
dec
add
ja
pop
mov
dec
ss
pop
stos
sub
hlt
cmp
mov
xorb
pop
lods
jmp
sub
pop
std
nop
aaa
lret
jns
or
dec
in
cmp
push
mov
ss
cs
dec
push
movsl
inc
add
ret
xchg
pop
jbe
push
movsb
dec
xor
stc
inc
shl
pushf
sbb
cmp
inc
outsl
int
cmpsb
pop
add
or
test
mov
rorl
xchg
faddp
lods
out
and
outsl
repz
gs
jb
xor
sti
repz
mov
decb
test
xor
adc
stos
in
mov
mov
add
add
xchg
fimuls
insl
or
pop
les
icebp
jo
sub
add
jae
stc
lahf
jge
sbb
cmpsb
mov
aam
movsb
add
or
pop
xchg
mov
inc
incb
shll
mov
sbb
xchg
push
and
test
out
andl
lahf
test
sti
repnz
ficomps
dec
push
aas
push
cmpsb
adc
cmc
inc
add
mov
test
dec
xor
mov
adc
outsb
in
mov
test
mov
pop
pop
cmp
lret
add
mov
addr16
hlt
mov
mov
imul
icebp
sbbl
adc
sub
fiaddl
or
pop
jb
xchg
stos
dec
incb
pop
movsb
lods
sub
js
inc
fldt
das
add
sahf
lock
movsb
data16
adc
imul
ds
mov
pop
xor
in
cmc
or
mov
mov
out
jmp
test
sbb
cld
je
out
xchg
mov
fldcw
outsl
xor
movsl
or
ljmp
lret
add
jmp
out
negl
cld
dec
xor
rcl
test
inc
mov
fidivrl
les
pop
or
cli
imul
pop
mov
jge
cmc
jge
in
popf
pop
cmc
and
flds
hlt
adc
jecxz
movsb
rcrl
mov
inc
es
mov
je
ds
cmpsb
dec
test
stos
aad
sbb
inc
xor
cmpsb
fldl
test
lret
mov
sbb
sarb
adc
stos
fcomps
and
loop
roll
stos
xor
call
xor
pop
icebp
xor
jnp
sbb
arpl
stos
flds
push
stc
aam
clc
pushf
inc
pusha
jg
lret
shl
nop
dec
cs
cmp
or
dec
push
sbb
add
jb
frstor
lds
lahf
stc
push
stos
jge
scas
pushf
adc
popf
aad
fcoms
out
gs
mov
test
stos
lock
jne
arpl
and
xor
movsb
dec
test
jle
clc
mov
cmp
ss
mov
sub
jge
aas
out
aam
mov
sub
movsb
subl
xor
push
push
or
adc
loop
clc
cmpsb
lds
icebp
push
out
lret
icebp
ja
jno
in
sbb
push
test
movsl
int3
movsl
fistps
gs
lods
jmp
fs
dec
pop
lock
test
pusha
je
add
jne
xor
pop
rcrb
pop
xor
test
jp
adc
dec
inc
mov
or
jge
out
pop
add
jmp
push
fidivl
pop
jns
pop
scas
sarl
aam
xor
divl
dec
mov
jl
in
imul
mov
push
push
lock
packsswb
bt
inc
lods
hlt
int
ljmp
aam
icebp
out
bound
mov
dec
movsb
cmp
loope
lods
pop
or
arpl
icebp
add
cmp
pop
mov
mov
mov
jecxz
cmp
adc
loop,pt
dec
mov
jge
div
xchg
mov
dec
jl
loope
stos
xor
push
pop
jns
sub
adc
jno
xor
in
cltd
inc
in
test
dec
mov
push
call
out
xchg
sub
add
or
jae
rcll
xlat
arpl
pop
scas
fistps
jl
and
rcll
or
in
pop
jb
pop
loop
pop
jle
in
and
roll
adc
ret
fstpt
call
das
mov
int
xor
bound
cmp
sbb
into
outsl
mov
jns
ret
test
mov
xor
jg
cli
repz
pop
arpl
das
sbb
aaa
icebp
sbb
fisubrs
or
shr
jmp
jmp
xor
jae
pop
jns
test
in
jle
jecxz
push
or
imul
add
add
jns
call
movsl
or
fsts
movsl
sbb
lret
mov
lods
cmpsl
and
inc
mov
mov
mov
mov
popf
daa
sub
inc
test
jg
outsl
xchg
lds
repz
mov
aaa
out
je
xor
aam
cwtl
mov
mov
fildl
jo
fldenv
xchg
inc
stos
loope
test
push
and
outsl
out
roll
add
adc
decb
imul
jl
jns
mov
jmp
inc
xor
mov
push
test
jns
pushf
xor
add
iret
jg
insb
dec
in
movsb
clc
icebp
lods
mov
adc
xor
adcl
add
test
sbb
jl
ljmp
mov
push
lds
dec
movsl
and
sbb
inc
ret
repz
fadds
lcall
rorl
pop
add
loope
mov
hlt
aam
adc
sahf
aas
das
imul
leave
mov
or
add
daa
enter
mov
pop
sbb
incb
dec
mov
sahf
mov
jns
inc
xor
sub
mov
sbb
call
mov
mov
mov
daa
sbb
dec
or
adc
sbb
out
pop
dec
adc
jae
and
inc
testb
lock
dec
subl
lds
loopne
aam
add
mov
jle
int3
mov
push
pop
or
adc
push
rorl
add
jp
mov
jne
mov
scas
test
mov
gs
ljmp
movsb
ficoms
gs
or
enter
cmp
stc
mov
shlb
pop
movhps
mov
pushf
xchg
cmp
and
push
mov
sahf
cmpsb
repnz
lods
icebp
cmp
pop
into
jbe
sub
test
test
dec
mov
jb
repz
inc
lock
or
sti
or
inc
inc
inc
outsl
arpl
pushl
sbb
jo
ja
or
jne
mov
pop
cmc
mov
adc
shll
pop
pop
pushf
adc
cmp
icebp
mov
fisttpll
popa
or
lds
in
add
sbb
dec
lret
data16
aad
scas
pushf
ljmp
pop
adc
lock
jae
adc
jne
sbb
inc
enter
jo
push
test
adc
repnz
xor
aaa
adc
inc
cmc
scas
enter
call
mov
add
sbb
mov
fwait
adc
popf
leave
xchg
jno
out
inc
inc
jnp
mov
inc
pop
inc
mov
pop
data16
dec
sbb
les
xor
fisttps
jo
out
sbb
sub
cmc
shr
dec
loop
jnp
iret
insb
and
jb
shrb
test
call
pop
cmp
sub
jl
out
and
pop
or
pusha
lds
inc
sbb
jmp
mov
loop
fldcw
lds
jns
inc
scas
add
xchg
inc
aas
aaa
jo
adc
ljmp
jg
adc
jp
test
incb
push
ss
jbe
push
mov
in
mov
ljmp
mov
cmp
cmpsl
loope
sbb
call
sub
gs
scas
int
js
inc
cmpsb
sbb
leave
icebp
xlat
sub
jne
sub
cmpsl
popa
mov
movsl
sahf
test
xchg
aaa
dec
mov
dec
imul
pop
fprem
ret
lods
sbb
insl
pop
aam
out
movsl
jecxz
or
mov
pop
sub
xor
xor
cltd
cld
inc
xchg
xor
sub
sbb
push
mov
je
iret
cmp
sub
ja
inc
cwtl
jb
test
in
ret
push
notb
inc
or
and
pop
or
leave
enter
call
loopne
fs
mov
loopne
outsl
inc
imul
psubsw
aad
cwtl
pop
xchg
cmp
inc
cmp
ljmp
daa
fiaddl
icebp
pop
outsl
aam
pop
adc
iret
rcll
fldt
push
ss
push
insb
cmp
pushf
jns
addr16
bound
mov
jecxz
mov
adc
sarl
xchg
inc
and
pop
stos
adc
dec
or
andl
fiadds
add
lds
inc
dec
xor
push
out
ret
sbb
movsb
popa
sahf
add
or
push
mov
jno
push
adc
sbb
jne
inc
sub
daa
jmp
outsb
mov
stos
jl
mov
out
ficompl
adc
enter
adc
test
out
push
idivl
hlt
adc
mov
sbbb
and
adc
inc
adc
shrl
dec
test
mov
lret
test
add
stos
jle
loop
cmc
add
mov
add
jge,pt
subb
test
inc
inc
mov
push
sub
shll
and
test
mov
xor
cwtl
loop
jl
aaa
or
icebp
repnz
stc
sub
cmp
sub
ds
jmp
sub
inc
lret
xor
and
pop
inc
rolb
add
jle
sbb
jae
inc
xchg
data16
sbb
pop
cwtl
out
sbb
or
shrl
inc
aas
aam
test
cmp
pop
add
jecxz
add
data16
test
mov
aaa
imul
mov
inc
add
inc
push
add
loop
mov
lock
xor
lds
ss
lret
aas
mov
int3
cmp
add
pop
xor
dec
ret
scas
out
addr16
cmp
andb
and
out
xchg
imul
pop
movsl
outsl
cli
lock
shll
xchg
jle
dec
adc
jecxz
jg
or
or
ret
jns
dec
lret
lahf
add
mov
xor
fstpt
test
mov
aas
lea
fldl
pop
sub
adc
ret
push
push
sbb
mov
leave
add
ret
pusha
xor
sub
mov
cmpsb
mov
or
xchg
adc
addl
inc
inc
xlat
test
out
test
int
sarl
dec
in
push
fs
pop
dec
lret
roll
lcall
xchg
and
int
mov
loopne
add
scas
dec
or
adc
cmp
jno
stos
jmp
dec
push
pop
cmp
sar
jae
or
and
jg
es
dec
inc
add
ret
rcrb
jmp
out
int
stos
xlat
inc
add
mov
decl
add
pop
fstpt
imul
subb
mov
pop
cmpsl
adcl
lret
mov
add
push
movsb
mov
add
push
sarl
adc
mov
and
rcrl
jp
sbb
fmuls
mov
dec
nop
mov
out
push
testl
mov
int
jns
fildll
iret
mov
lods
pop
inc
inc
cmpsl
in
into
mov
hlt
xchg
es
test
and
stos
lock
into
aaa
fsubrs
cs
mov
pop
jl
add
inc
mov
loopne
xchg
in
lock
cmp
add
int
into
orl
out
ret
push
xor
mov
mov
add
hlt
mov
inc
mov
loope
loope
stos
push
test
or
stos
es
sbb
mov
aas
loope
sub
jae
jecxz
jno
xor
adc
lea
leave
push
shll
mov
jp
mov
lock
sti
mov
inc
loopne
sbb
inc
mov
mov
lds
add
inc
ds
in
gs
ja
loope
orb
js
rcll
shlb
sub
jnp
dec
fwait
cmpsl
and
test
outsb
lods
in
pop
jo
rclb
enter
pop
jae,pt
inc
jo
pop
fs
mov
pushf
xor
ret
test
pop
or
pop
fwait
mov
mov
add
fcmovnb
test
leave
scas
loopne
test
pop
cs
icebp
add
sub
ficoml
test
bswap
outsb
rcll
add
ror
jno
inc
xchg
sbb
dec
or
test
insb
fmull
inc
aas
adc
adc
xchg
jg
mov
out
sti
idivl
pop
cmovno
dec
add
loop
test
mov
or
rolb
call
adc
push
and
sub
scas
or
sub
mov
test
push
mov
and
jle
clc
xor
das
cld
cmp
bnd
mov
mov
and
sbb
es
imul
js
push
jmp
shlb
test
push
mov
push
test
lock
sub
je
je
sbb
pop
gs
shrl
dec
xorl
add
test
mov
std
cmpsl
mov
mov
test
nop
les
aad
add
push
ficompl
stos
push
or
ret
dec
cmp
insl
pop
lods
mov
push
into
mov
flds
cwtl
jmp
xchg
cmp
adc
add
test
cs
pop
mov
adc
sub
ds
xchg
mov
div
rcrb
ja
or
jg
stc
outsb
orl
loopne
cmp
push
sub
or
rcl
sbb
jo
mov
push
inc
push
xor
mov
roll
jo
leave
mov
jle
jns
shr
popa
shll
clc
les
push
lods
xchg
sub
pop
add
test
inc
jno
pop
xor
add
add
cmpsl
xor
push
pop
fisubrs
mov
add
aam
and
jb
les
mov
jge
mov
rorl
jl
xor
stos
and
jnp
mov
adc
pusha
jle
je
scas
jl
push
cmp
hlt
xor
mov
aas
jno
and
mov
inc
mov
push
xchg
pop
js
mov
inc
inc
ror
into
xor
lcall
arpl
mov
aaa
and
pop
fbstp
sub
xlat
push
mov
mov
sub
add
test
outsl
ret
add
mov
in
lahf
call
inc
inc
inc
rorl
test
mov
daa
shlb
fldcw
adc
in
shll
out
xchg
jb
add
xchg
dec
mov
jnp
imul
adc
mov
movsb
jle
inc
enter
mov
test
fdivrs
xchg
lret
aam
and
clc
or
cwtl
inc
insb
dec
mov
inc
test
dec
pop
and
lret
mov
add
in
jecxz
rorb
addb
cmp
lret
mov
dec
mov
push
add
pop
dec
sub
dec
in
and
or
add
jle
imul
sub
jp
and
cltd
jne
mov
pop
mov
xchg
into
sub
xor
test
je
add
jp
jae
push
xchg
daa
or
mov
frstor
jmp
adc
aaa
lret
jge
cmp
mov
scas
cmc
leave
outsb
mov
or
mov
aam
rcrl
push
jmp
mov
mov
jo
jg
jecxz
imulb
addr16
cmp
mov
ficomps
inc
test
mov
iret
nop
pop
pushf
pop
mov
inc
dec
popa
lock
in
je
in
dec
jb
lods
push
inc
rcl
sub
outsl
push
sbb
xor
mov
lahf
fdivrp
dec
add
mov
xor
loop
repnz
ret
fsubrs
mov
dec
fwait
jle
test
mov
enter
orb
lahf
pop
jmp
ja
adc
repz
test
aam
mov
jmp
movsl
lret
cmpsb
daa
or
adc
pop
addl
outsb
lock
arpl
jns
adc
pusha
inc
fs
aam
in
cmp
lock
test
inc
push
dec
test
sub
loope
ss
mov
sub
mov
sbbl
rcll
jl
and
insb
shrl
cmp
movl
lret
jbe
ret
fisttps
mov
test
mov
or
lods
dec
in
or
sbb
or
imul
into
jmp
ja
stos
or
mov
sbb
cwtl
sub
int
test
mov
inc
sbb
cld
je
js
aam
mov
xor
test
jp
mov
sbb
adc
testl
aad
mov
lock
les
pop
test
push
adc
into
jmp
gs
loope
ror
into
jle
or
jns
subl
dec
ja
inc
dec
xchg
in
enter
mov
in
mov
cmp
fs
sub
addl
cmpsl
jnp
pop
adc
movsb
mov
loope
jp
ds
or
test
pusha
xor
sti
xor
pop
shrl
or
mov
and
movsb
jmp
or
daa
sbb
mov
outsb
je
leave
testb
xchg
cmpsl
movsl
imul
sub
lahf
inc
dec
jnp
jne
cmp
not
push
ds
or
out
test
imul
sbbb
mov
test
mov
scas
jmp
xchg
mov
jne
rorl
fadd
pop
push
dec
xchg
jns
pop
movsb
out
xor
data16
adc
lds
pop
mov
lods
lea
pop
cltd
movsl
mov
aas
push
inc
ja
les
insb
mov
scas
xor
aam
add
xor
sub
or
mov
dec
add
or
test
pop
xchg
mov
dec
sbb
jle
xchg
in
inc
and
imul
push
dec
test
and
jnp
mov
adc
push
fnstsw
xchg
pushf
mov
dec
loopne
push
xchg
fsubl
push
xchg
inc
jmp
jp,pn
inc
icebp
inc
outsb
xchg
adc
repz
pop
dec
pushf
movsb
cld
pop
dec
leave
push
fisubrl
xchg
aas
pop
inc
add
pop
movsl
mov
sub
inc
xor
mov
push
jmp
adc
imul
or
out
dec
inc
xor
jb
mov
vmovq
mov
mov
ja
ds
lock
and
mov
mov
sub
nop
ret
adc
jg
lds
xchg
popf
add
jnp
aaa
movsl
loop
or
nop
fadds
mov
pop
mov
dec
sub
add
sbb
in
icebp
add
mov
add
pop
subb
pop
test
leave
lods
mov
sbb
xor
not
sbbw
mov
lea
popf
xchg
mov
ficoml
cltd
pusha
es
mov
mov
and
sbb
mov
add
mov
popf
add
xchg
roll
repnz
imul
inc
enter
addr16
adc
fldenv
daa
pop
or
fsubrs
shll
aam
cmp
mov
out
fldenv
sbb
in
or
xor
push
and
cli
test
or
add
xor
out
leave
mov
in
mov
pushf
xchg
xor
sbb
mov
add
ret
cmp
ret
push
adc
add
repz
in
add
mov
loope
test
push
sub
cmpsb
orl
cs
or
add
in
dec
mov
sti
cmc
stc
and
outsl
xchg
push
xor
loopne
mov
bound
test
push
or
xchg
add
notl
add
in
dec
or
test
add
cmp
inc
and
pop
mov
stos
add
push
in
xchg
lock
jmp
hlt
inc
loopne
mov
test
rol
test
inc
imul
testb
pop
int3
ss
icebp
sarl
jno
arpl
ds
jl
push
jl
shrl
fdivs
test
insb
cmp
pop
pop
adc
mov
xor
outsl
push
add
clc
xchg
cltd
jmp
outsl
cmp
or
mov
sar
or
mov
testl
in
movsb
cmp
pushf
adc
or
mov
lods
pop
push
mov
sbbl
or
insb
push
sbb
int
mov
dec
pop
aas
add
lahf
clc
mov
lea
pop
hlt
mov
ljmp
repnz
lret
ss
lret
rcrl
mov
adc
stos
lds
imul
out
cwtl
jae
mov
les
std
stos
sahf
in
inc
cmpb
jbe
dec
ds
inc
add
cli
rcrb
into
arpl
in
and
cmp
aam
rdpmc
sub
mov
xor
addr16
jne
adc
nop
pop
into
pop
loopne
dec
nop
test
sti
jbe
jge
jae
xchg
dec
pop
ja
jne
test
cmp
lock
test
push
sbb
pop
lea
xor
ljmp
fstpl
push
dec
cmp
push
cmp
add
push
jns,pn
icebp
mov
sbb
cmpsl
js
jnp
mov
cmp
mov
pop
mov
fwait
jle
mov
pop
add
jb
dec
adc
add
dec
mov
popf
in
pop
pop
aas
inc
or
inc
scas
jmp
sub
push
repz
test
dec
mov
test
or
popa
loop
lods
sbb
fldl
or
mov
mov
and
or
xor
popf
cltd
test
xchg
pop
adc
test
stos
loope
sub
fldt
mov
ljmp
fisttps
xor
and
lret
push
mov
cmpsb
xchg
mov
or
popf
subb
push
or
mov
cld
pop
xor
imul
sbb
add
sub
push
into
mov
fprem1
mov
mov
dec
rol
mov
and
fcoms
pop
cmp
push
inc
lret
ret
arpl
std
xor
stos
push
icebp
gs
pop
fmull
mov
xchg
nop
inc
cmp
cwtl
sub
ror
orb
xchg
add
and
es
adc
imul
sarb
enter
out
loope
add
cltd
pusha
in
lea
stc
or
icebp
das
lcall
mov
arpl
push
jb
push
xchg
lea
xchg
ret
test
and
jns
xor
leave
adc
test
fbld
clc
sub
in
and
enter
mov
sbb
sub
jb
ljmp
push
inc
pop
mov
fcmovnu
mov
sahf
sub
cmp
in
jns
test
negl
or
mov
pushf
pop
fimuls
std
in
mov
rcrl
jae
sub
push
popa
mov
inc
insb
inc
sbb
lods
mov
test
int
adc
std
and
insl
rorb
ret
xor
outsb
ja
decl
je
sahf
imul
or
adc
test
mov
popa
lea
mov
xlat
addr16
sub
cmpsb
dec
add
ret
pop
push
inc
aad
sahf
negb
jae
ret
mov
sbb
dec
cs
sbb
mov
jmp
test
xchg
arpl
jne
stos
aad
mov
seto
ja
mov
out
test
popa
pop
adc
dec
add
fisubrl
movsl
push
test
and
inc
cwtl
leave
push
cmc
sarl
int
mov
lret
in
pop
push
cs
addb
push
stos
sub
mov
test
test
mov
push
sahf
push
or
xor
in
or
repz
jnp
push
test
enter
push
pop
sub
dec
mov
loopne
mov
icebp
xchg
sbbl
xchg
dec
inc
into
sbb
lret
add
xor
mov
outsl
into
mov
loop
push
ss
jns
mov
call
or
out
inc
shll
test
push
adc
mov
inc
je
dec
sub
inc
and
xchg
adc
adc
mov
mov
sub
scas
dec
adc
js
cmp
daa
sti
adc
out
lds
mov
dec
sbb
mov
lret
out
or
adc
adc
pop
ret
add
add
sbb
in
and
add
cld
xchg
das
sbbb
cmpb
int
sbb
mov
jle
aas
test
movsl
jb
cmp
xor
icebp
push
push
or
sbb
xor
inc
pop
and
jb
inc
xlat
lcall
mov
xchg
mov
jp
ss
out
xchg
sub
mov
pop
sbb
test
pop
in
lret
fistpl
popf
adc
mov
loope
inc
in
pop
fisubrl
add
ret
mov
outsl
mov
jns
cmp
das
mov
ja
into
pop
xorl
xchg
and
mov
scas
dec
pop
mov
out
jae
mov
push
and
loopne
push
xor
or
jno
fsubrs
add
ficompl
xchg
mov
adc
or
faddl
lock
shll
shlb
test
add
xchg
pop
xchg
push
test
sbb
mov
cltd
js
mov
cmp
leave
adc
test
push
mov
cmp
dec
and
fsubs
jae
pop
add
add
jo
test
xchg
jne
xor
jne
add
pusha
lret
loope
push
inc
sub
push
stos
cmp
xor
cltd
or
mov
fcompl
ret
jne
cltd
mov
in
inc
dec
mov
pushf
inc
rcl
int
rcrl
loope
cwtl
fiaddl
cmpsb
sub
adc
into
js
and
cmp
ret
dec
fadds
xchg
cmp
push
popf
jl
or
xor
add
mov
dec
in
adcb
jne
test
cmp
pusha
or
ja
add
xor
js
xor
in
lret
inc
add
pop
mov
add
push
mov
push
jno
jle
mov
pop
pop
aad
insb
imul
enter
test
inc
or
sbb
pop
mov
pop
push
insl
xor
scas
xchg
mov
addr16
sub
sub
and
mov
inc
lock
inc
test
xchg
jg
aam
decb
jns
ret
aaa
or
pop
cmp
imul
popa
pushf
add
in
fiaddl
pop
add
jns
subb
xchg
lds
cmpsb
cmp
add
cmp
fisubrs
adc
aam
mov
stc
out
mov
mov
rorl
jne
loop
inc
jo
stos
fdivl
ret
mov
cmp
add
xlat
cmp
test
sub
dec
pop
inc
test
jnp
aaa
int
xor
pop
mov
push
dec
stc
inc
sbb
mov
sub
sbb
add
ret
aam
or
mov
dec
mov
cwtl
adc
jl
stc
jl
jle
jns
push
leave
dec
mov
xchg
mov
hlt
jmp
into
xor
xor
pop
bound
cmp
sbb
enter
xor
inc
xchg
add
rcll
in
aad
sbb
adc
and
mov
aad
jae
and
xor
xor
dec
xchg
jbe
lcall
lret
lock
dec
test
push
test
pop
xchg
sub
out
jmp
jecxz
test
mov
dec
pop
in
inc
popf
add
xor
sub
aas
sub
std
popf
xor
sarl
push
adc
test
decl
loope
cmp
gs
cmp
hlt
test
gs
jmp
test
inc
xchg
mov
pop
mov
jp
dec
or
cmp
cmc
das
jne
cld
icebp
sbb
push
lret
xor
test
push
leave
in
in
push
dec
xchg
add
jp
cmp
jecxz
leave
icebp
les
jno
sub
loope
test
in
test
dec
mov
dec
or
pop
add
push
ret
jp
out
push
shr
pop
push
or
and
repz
sub
and
push
and
add
inc
mov
xor
lea
push
pop
adc
push
je
mov
cmp
repnz
sub
cmpsl
cli
out
ret
inc
add
mov
dec
pop
add
mov
lods
pushf
out
outsb
rorl
std
arpl
lods
icebp
and
xchg
cmc
cld
iret
add
call
cmp
std
cltd
icebp
mov
lods
mov
enter
movsl
cmp
inc
ret
inc
pop
dec
in
jno
jecxz
fisttpl
and
xchg
cld
stos
push
mov
push
xacquire
ret
int
mov
lds
es
and
xor
jno
inc
movsl
jnp
enter
jns
stc
mov
jo
cmp
sbb
or
push
lods
lcall
xor
lret
mov
add
imul
mov
shrl
push
xor
mov
jmp
into
test
jmp
push
icebp
rcrl
mov
inc
addr16
in
mov
jns
pop
repnz
adc
in
repz
outsb
mov
xorl
lock
inc
fsubl
mov
pop
in
jae
xchg
pop
fwait
jnp
pop
popl
inc
imul
repnz
imul
out
xor
cmpsl
aam
loop
test
sub
push
test
aad
jle
dec
xor
mov
sbb
fwait
lock
ja
shll
ficompl
sub
lret
xor
mov
pop
sti
mov
lea
mov
shll
test
mov
movsb
push
addr16
out
mov
fucomp
gs
push
scas
daa
pusha
roll
imul
xor
rorl
mov
sti
xchg
xor
mov
daa
imul
fwait
lcall
jne
cltd
stc
test
xor
sub
dec
push
cli
jo
in
jnp
jp
sub
movsb
fistpll
cltd
inc
xchg
fildl
mov
cltd
test
stos
push
out
inc
dec
idiv
lret
lret
adc
dec
imul
arpl
jecxz
sbb
push
pop
lock
mov
jb
leave
mov
ficomps
push
aad
ss
jno
js
test
and
inc
inc
inc
in
enter
decb
jnp
cmpsb
test
fdivrs
dec
test
sbb
popf
mov
mov
test
lods
mov
push
test
pop
mov
mov
jnp
loop
jne
and
fldcw
jle
jne
pop
imulb
cmc
dec
ds
jge
std
dec
stos
out
mov
mov
pop
dec
fstl
roll
dec
pop
mov
je
sbb
clc
aas
test
dec
pop
push
mov
aas
inc
cmp
je
xchg
mov
lret
jp
add
add
mov
clc
pop
or
sbb
sub
or
xchg
test
mov
dec
in
repz
out
xor
shrb
push
jno
mov
out
or
push
stc
dec
jbe
ss
xor
insb
gs
jg
lock
sbb
xor
mov
add
or
adc
insb
fistps
sub
or
inc
push
ret
std
int3
lea
sar
icebp
xchg
aaa
jecxz
in
pushf
inc
inc
mov
loope
mov
dec
mov
ret
negl
rcll
adc
jg
mov
pop
inc
jl
lds
mov
testl
dec
cld
or
xor
mov
sbb
jno
shrl
add
push
adc
or
xchg
in
into
das
shrb
adc
push
adc
cmp
add
rorb
mov
test
mov
hlt
jbe
adc
test
repz
or
xor
ret
and
pop
sti
icebp
enter
add
adc
das
or
mov
mov
int3
rcr
xor
jbe
push
mov
push
mov
mov
push
lea
adc
mov
push
xor
aas
jb
fnstenv
fisttpll
mov
add
xchg
mov
jo
xorl
adc
and
sbb
cmp
jle
ret
sbb
pop
inc
add
xor
adc
cmpsl
out
arpl
mov
sub
push
pop
jmp
shll
adc
pop
push
cld
arpl
or
inc
add
dec
lods
test
adc
popf
mov
sbb
jecxz
in
mov
sub
pushf
push
movq
iret
adc
xor
adcl
test
or
leave
test
jg
rcr
cmp
sbb
lret
cld
add
adc
pop
mov
cmp
pushf
adc
icebp
pop
xor
xchg
lods
push
pop
bound
push
mov
or
adc
xchg
jbe
inc
cmp
pop
cld
into
pop
enter
dec
cmp
xchg
mov
jae
fmuls
insl
imul
in
imul
lcall
ret
aam
outsl
ret
push
dec
xorb
out
mov
sbb
dec
loope
out
mov
xor
ficoms
or
mov
xchg
push
cli
lcall
cwtl
jg
xchg
int
dec
test
push
call
lock
jae
sti
xor
dec
jns
pop
addb
sahf
cmc
mov
shlb
dec
clc
inc
xor
dec
packssdw
mov
mov
enter
dec
sbb
mov
std
dec
fisubrl
mov
jns
pop
idivb
mov
in
out
inc
or
mov
jge
popf
dec
hlt
or
mov
dec
mov
sbb
push
lock
inc
cmova
out
vpshlq
jle
call
xor
fbld
xor
sahf
sahf
nop
ds
dec
jmp
add
rorl
outsl
adc
adc
iret
or
movsl
add
jg
lock
sbb
lds
jbe
popa
add
push
inc
jecxz
or
jae
addr16
ror
add
sbb
pop
xor
mov
out
imul
test
adc
in
dec
lds
or
xor
sbb
std
pop
arpl
sub
ds
and
adcl
into
daa
shl
stos
jbe
and
xor
xorb
sub
add
je
adc
sbb
mov
pop
pop
lock
popa
in
cwtl
gs
add
and
insl
ds
push
mov
sub
sti
mov
enter
es
mov
sub
xlat
jmp
stc
jmp
jnp
test
out
mov
int
inc
fcomps
movsb
mov
dec
push
fnstcw
xor
inc
in
std
inc
adc
test
repz
pop
mov
inc
adc
and
jge
jno
inc
adc
out
pop
pop
test
inc
loopne
push
inc
adc
sbb
jmp
ret
test
inc
ret
loope
aam
mov
mov
ret
imull
shrb
dec
mov
scas
movsl
mov
pop
cmc
push
imul
jno
lds
ss
aam
mov
ret
lcall
daa
aas
push
rol
xchg
push
cmp
cwtl
xchg
imul
add
sti
in
xor
dec
pause
jae
dec
ret
ror
std
inc
inc
add
ret
icebp
mov
sbb
xor
mov
and
scas
mov
adc
mov
jne
test
adc
lcall
js
stc
jecxz
int3
aad
outsb
in
iret
cmc
pop
inc
sbb
lea
xchg
add
js
sbb
and
mov
sbb
stos
xorl
adc
sbb
rcr
inc
je
jmp
call
test
loope
mov
jae
daa
fdivs
mov
jecxz
sub
ret
fildl
mov
cmp
cmpsb
dec
sti
push
jp
cltd
test
icebp
shrl
mul
mov
in
sub
add
data16
les
repz
mov
mov
dec
icebp
jmp
mov
push
scas
mov
mov
inc
rcr
xchg
jg
inc
add
dec
enter
sarl
xor
mov
fisubrl
mov
jecxz
int
xchg
test
mov
sbb
pushf
jo
mov
jmp
nop
cmp
adc
mov
push
mov
add
js
mov
fadds
xchg
test
fisttpl
inc
mov
adc
int3
xlat
and
mov
jmp
jle
inc
fisttpll
int
rolb
lods
mov
js
aaa
cmp
lcall
mov
or
in
push
leave
insb
add
dec
mov
xchg
fldcw
std
mov
addr16
push
inc
enter
jle
loopne
test
xchg
lahf
or
orw
jbe
sahf
icebp
pop
inc
push
push
inc
test
mov
jge
cmp
sbb
sub
cmp
xor
ret
pop
ret
dec
inc
mov
dec
cld
mov
es
and
icebp
sbb
in
or
mov
mov
test
or
test
mov
pop
inc
mov
je
mov
cmp
frstor
mov
or
imul
sbb
int
add
mov
mov
xor
scas
sar
bound
mov
out
jns
or
push
sbb
add
sbb
mov
mov
cmp
stos
lock
cmp
push
icebp
enter
inc
mov
cmp
lds
movsb
incb
or
test
push
shrl
mov
jl
xor
dec
jg
jae
imull
test
pop
lret
mov
aam
push
lods
cli
cmpsb
adc
fnstsw
imul
je
mov
cmp
cmpsb
test
das
das
push
pop
jmp
adc
dec
add
pop
loope
xor
in
or
mov
mov
leave
test
jmp
lcall
cmp
inc
mov
jne
addl
dec
pop
dec
pop
adc
lods
scas
dec
mov
ret
xor
aaa
jg
jle
jb
jno
and
pop
pop
popa
cmp
arpl
mov
mov
inc
test
aas
fisttps
dec
sbb
push
jo
addr16
sbb
mov
sbbl
inc
shl
test
jmp
insb
xlat
je
cmp
cmp
cmp
jnp
dec
and
les
inc
shlb
push
mov
ret
jbe
cs
pop
cmp
int
inc
cmp
fistl
pop
cwtl
test
cwtl
inc
xlat
fs
out
mov
cmp
xor
icebp
jl
xchg
or
push
dec
repz
test
aaa
mov
in
jle
xor
orb
scas
jecxz
daa
or
in
sub
xchg
or
test
sbb
xchg
or
jne
push
inc
test
mov
and
mov
fwait
push
or
enter
cmc
roll
sbb
into
xor
fisubrl
ss
hlt
test
mov
shll
std
lahf
inc
ss
sbb
dec
jecxz
stos
sub
adc
mov
insb
lret
shll
js
xor
enter
xor
xchg
test
xor
jno
dec
xor
jns
pop
sub
aad
test
test
jg
pop
clc
jp
xchg
es
mov
sub
or
xor
test
fs
pop
mov
fs
or
or
mov
lahf
stos
add
inc
mov
xor
dec
lret
fdivr
shrl
int
nop
and
xor
jb
mov
scas
lock
test
insl
mov
dec
sarl
inc
jecxz
pop
ret
stc
ret
icebp
mov
xchg
cs
jle
shl
cltd
incl
popa
push
int
mov
jo
jmp
cmpb
fs
cmc
dec
enter
pop
cmp
mov
popf
sbb
mov
gs
decb
ret
xchg
mov
sbb
fdivrl
test
xor
sarl
mov
and
inc
cmp
jns
imull
cmpsb
pop
add
sahf
mov
jmp
rolb
pop
xchg
movsl
push
adc
add
rcrl
mov
and
in
add
add
in
lahf
mov
das
xor
jnp
sbb
mov
sahf
sbb
mov
je
dec
sub
xor
mov
adc
cltd
xchg
sbb
push
rolb
mov
pop
xchg
pushf
test
and
aam
daa
popf
lock
mov
mov
insl
data16
nopl
sbb
insl
inc
aaa
imul
push
fcmovb
push
jp
pop
enter
dec
inc
daa
cmpsb
fiaddl
iret
leave
and
push
push
cld
xchg
cmp
sub
enter
and
pop
lods
dec
jno
ret
test
test
inc
movzbl
int3
jns
xlat
adc
xor
or
jns
stc
push
repz
cmp
das
sub
cmpl
mov
aas
pushf
test
enter
pop
and
lret
lret
mov
out
dec
int
in
stc
test
dec
ret
dec
jg
jno
cmpb
dec
imul
sub
push
pusha
outsl
mov
addl
cmp
push
inc
dec
repz
flds
jno
sub
loopne
mov
add
add
mov
xchg
sbb
sbb
sub
adc
mov
repz
ljmp
test
rcrl
cmpsl
andl
ds
sub
jge
test
sarb
mov
jno
out
inc
in
repz
and
and
pushf
cmc
jae
js
fidivrl
lcall
xchg
jmp
jbe
pop
jne
sub
or
in
xor
pushf
add
pop
or
bound
enter
or
ds
mov
stos
lods
loope
and
fnstcw
mov
fcomip
sbb
pop
test
lds
or
or
adc
aas
push
inc
jns
cmpsb
das
mov
add
jecxz
add
inc
in
mov
mov
add
shr
test
lea
jge
pop
xor
fstl
or
movsl
fwait
sub
add
pop
aam
cmp
mov
pop
fisttps
ret
fimull
add
test
push
sbb
adc
jns
rcll
mov
pop
les
mov
sbb
fistl
icebp
int
test
push
pushf
lock
xchg
aas
xchg
clc
sbb
enter
hlt
insl
sahf
jmp
or
pop
and
pop
outsl
mov
testb
imul
in
mov
pop
dec
push
andb
lock
fs
xchg
push
sti
mov
pop
shrl
cmp
xor
pop
jns
sbb
fisttpll
sarl
mov
sbb
mov
mov
xor
xor
jns
addb
push
movsb
mov
sub
xor
repnz
or
adc
gs
adc
call
xchg
add
test
test
xchg
loope
sbb
call
lock
or
rorl
add
fs
add
sub
fnstsw
add
addr16
mov
ss
mov
subb
imulb
sarb
add
out
push
push
ss
aaa
mov
imull
push
or
inc
xor
add
int
in
push
sbb
push
cmp
xor
cmp
pop
cmp
jnp
or
vmovlpd
sub
inc
sub
leave
sbb
out
xchg
imul
pop
cmpsb
and
and
test
insb
nop
or
xchg
std
push
mov
mov
fisttps
xor
inc
test
loope
jp
xchg
je
insl
xor
je
fucomip
xchg
lea
fstps
xchg
jns
insb
fbstp
mov
shrb
enter
aad
enter
mov
inc
xor
test
adc
roll
push
mov
ljmp
inc
inc
in
lcall
sbb
pop
test
fs
mov
add
jl
mov
pop
jns
icebp
sahf
or
repz
test
xor
dec
test
test
in
in
jmp
xchg
stos
xor
test
inc
insb
out
aad
fidivrs
pop
lods
xchg
lahf
stc
mov
test
aas
inc
and
insb
arpl
mov
jmp
inc
pop
movsb
jnp
cwtl
sub
outsl
scas
mov
push
lds
cwtl
adc
and
stos
out
pop
push
cmp
lahf
adc
cli
loope
mov
mov
out
jecxz
test
push
push
clc
push
scas
mov
dec
mov
pop
pushf
ret
pop
push
adc
adc
sbb
and
int
popa
dec
pop
je,pt
xlat
stos
jmp
out
mov
out
pop
sarl
add
or
jo
mov
sbb
xchg
jp
inc
js
push
loope
sub
ds
add
jnp
fmuls
ja
adc
inc
loope
lds
outsl
add
lea
mov
enter
aam
mov
insl
pop
sbb
xor
outsb
push
sbb
rcrl
test
loope
mov
or
dec
add
push
stc
mov
dec
sub
leave
xor
out
int
cmp
outsb
cmpsb
adc
add
decb
popf
or
cmp
scas
and
aas
cmp
push
adc
test
rcll
addl
adc
sbb
mov
andl
mov
adc
sub
mov
sub
orl
dec
out
jo
dec
mov
pop
je
jmp
cmp
movb
ret
sub
pop
xchg
sbb
mov
jbe
and
jg
stos
cli
adc
daa
mov
dec
movsl
icebp
pop
inc
inc
push
push
ret
mov
sub
cmp
and
stc
push
dec
mov
test
insb
cmp
or
std
dec
add
sti
iret
pop
xchg
push
addl
push
pop
aad
cs
je
js
rcr
inc
ss
das
or
or
js
repz
cmp
sub
mov
repz
jecxz
out
flds
mov
mov
in
add
std
out
in
test
xor
jno
cli
pop
cwtl
mov
sbb
pop
js
lcall
xchg
xor
xor
sti
or
xchg
les
mov
jae
pop
movsb
test
inc
lods
dec
jne
loopne
xchg
lret
aad
in
adc
mov
jle
adc
mov
aas
pushf
mov
inc
div
ret
cmp
mov
mov
pop
cltd
insl
adc
pushf
jle
repnz
hlt
add
adc
dec
es
icebp
ja
rol
xchg
add
inc
jl
js
add
jl
pop
frstor
out
xchg
cmp
in
push
xchg
dec
xor
push
leave
pop
imul
mov
hlt
xor
jns
push
mov
cmp
rclb
cli
push
outsl
in
mov
aad
leave
repz
sbb
aad
push
leave
xor
test
jb
lods
mov
sub
imul
imul
mov
dec
stos
add
sub
push
aad
mov
es
ret
jl
data16
jne
mov
mov
insb
push
repz
mov
sbb
fildl
lret
es
cmpsb
enter
test
iret
lcall
inc
imull
mov
test
fstps
subl
enter
add
push
repz
cli
test
cwtl
xor
int
lock
sub
dec
shrl
push
sbb
or
and
test
int3
adc
mov
je
mov
dec
repz
push
add
inc
sbb
fs
mov
sub
icebp
xor
test
jmp
push
insb
add
cmpsl
cmp
mov
iret
or
push
or
mov
add
and
adc
adc
imul
jae
add
icebp
cs
jg
or
pop
imul
dec
lret
add
and
sub
movsl
push
inc
or
adc
sub
lock
jnp,pn
inc
imul
rsm
cmc
inc
push
and
pop
push
mov
sbb
pop
mov
in
adc
xor
movsb
ja
cmp
lods
mov
xlat
xchg
xor
sub
xchg
test
sbb
test
push
js
xor
data16
cmpsb
push
lahf
mov
cmp
xor
lret
mov
mov
mov
mov
adc
and
shll
dec
lahf
rcl
dec
ret
repnz
adc
or
mov
mov
sub
enter
dec
inc
nop
add
loope
xor
das
xor
push
ffree
pop
ret
rcl
adc
shll
lds
pop
xchg
mov
je
shl
mov
aam
in
test
jmp
ret
pop
xlat
cli
enter
inc
divl
or
daa
adc
loop
cmp
sti
inc
lock
iret
sbb
out
das
lahf
push
and
jl
notl
cmp
and
pop
and
mov
fwait
xor
sbb
stos
push
mov
sbb
dec
mov
jl
cmpsb
jns
test
or
shrl
mov
inc
xor
insl
cmp
test
pop
add
mov
jp
leave
ret
lds
orl
repnz
mov
jle
adc
adc
movsl
int
xor
mov
icebp
scas
loop
add
cmp
inc
jecxz
mov
std
das
mov
xor
rolb
ljmp
or
fucomip
sub
aaa
sbbl
dec
xor
sub
xor
add
enter
cmp
jns
cmp
inc
test
or
and
dec
xchg
inc
cltd
das
jmp
adc
inc
push
or
test
jl
dec
push
sbb
jl
pop
push
cmp
iret
je
sub
mov
cmpsl
or
push
dec
adc
push
lods
xor
jne
mov
sub
dec
shl
push
or
rcl
mov
adc
cltd
pop
inc
add
das
out
cltd
iret
int
aad
dec
add
sub
or
test
loope
inc
cmp
inc
test
lods
test
jl
push
mov
ja
jg
cmp
es
inc
adc
pushf
mov
jne
jle
adc
push
mov
or
orb
mov
js
popa
sahf
test
push
pop
cmpsb
dec
sbb
or
dec
add
pop
mov
insl
sbb
mov
sti
lea
adc
insb
adc
jl
cmpsb
addb
stc
ljmp
lea
push
repnz
stc
clc
push
and
pop
cmpsl
andl
inc
rolb
loop
dec
xorl
inc
mov
stos
fsubs
into
in
dec
lock
xchg
add
pop
sub
adc
test
xor
popf
or
push
dec
push
lret
pop
cmp
mulb
dec
push
mov
popf
xor
jl
ret
mov
in
dec
and
sub
ret
mov
gs
inc
xchg
mov
pusha
leave
jecxz
add
hlt
sbb
clc
dec
mov
stc
sbb
ficomps
inc
arpl
test
divl
mov
hlt
dec
repz
or
mov
int
cmp
aaa
jb
inc
popa
inc
pop
push
sub
dec
mov
cmp
push
sbb
push
push
mov
xor
loopne
iret
cmp
mov
nop
pop
popa
imul
jecxz
pop
cmp
xor
test
ja
pop
pop
cmpsb
push
or
cmpsb
test
sbb
in
mov
adc
test
mov
stc
add
xchg
add
mov
xor
adc
mov
inc
in
fstps
adc
jg
adc
push
int
test
xchg
jb
xor
mov
ret
xor
clc
jl
iret
dec
push
push
mov
or
shll
cli
xor
mov
inc
cmp
pop
faddl
and
fcomps
sub
cs
aas
jl
sbb
fiaddl
out
adc
jmp
inc
repz
fildl
test
mov
sbb
dec
in
sub
shll
sub
dec
push
cmp
pop
mov
xchg
mov
ret
aam
mov
pusha
sbb
mov
ret
jae
pop
in
cmp
push
orb
imull
ss
adc
pop
pop
inc
or
les
pusha
clc
lcall
mov
push
sbb
aaa
add
nop
daa
cwtl
mov
repnz
iret
push
mov
sahf
test
push
xchg
fldln2
out
insb
stos
sub
lcall
add
sbb
inc
jmp
cld
lods
cmpsl
inc
ljmp
mov
xchg
movsb
loopne
scas
mov
icebp
add
inc
inc
mov
int
mov
xchg
jns
fsubrs
jecxz
repnz
cmc
enter
pop
bnd
inc
pusha
inc
jecxz
mov
movsl
sti
jp
xchg
add
ss
sbb
jns
stos
pop
hlt
or
add
mov
lret
mov
xlat
fdivr
lcall
sub
cmc
dec
insl
add
or
inc
test
fwait
pop
ficompl
aad
stos
jo
sbb
adc
xorl
addb
mov
add
cmc
ret
scas
mov
addl
in
in
mov
mov
lods
test
mov
xchg
jecxz
wbinvd
imul
mov
scas
add
cmc
repz
mov
inc
and
lea
enter
dec
arpl
movsl
xor
mov
sbb
adc
repz
mov
mov
test
sbb
test
inc
push
inc
sti
fnstcw
jecxz
repnz
test
adc
lahf
add
push
and
ret
mov
sbb
stos
sti
mov
fnsave
test
sub
ret
push
cmp
nop
dec
jle
jae
add
cmc
cmpsl
shrb
aam
lea
add
mov
fwait
ret
pop
adc
mov
and
jp
daa
imul
add
lock
insl
aam
xchg
adc
and
sbb
loop
mov
scas
or
test
or
mov
xchg
fs
dec
sub
lcall
in
into
jae
scas
dec
jge
dec
imul
xor
jae
ss
cmc
int3
mov
cmp
adc
add
cmp
jp
push
mov
push
movsb
or
aad
sub
mov
mov
pop
sar
mov
xchg
or
jnp
testl
jns
std
inc
aam
add
roll
in
vphaddwq
jnp
mov
fadds
pop
sti
adc
aas
dec
cmp
mov
fisttpll
xchg
ret
fstl
push
dec
sub
xor
mov
push
ja
add
dec
imul
lret
pop
inc
test
fnstsw
mov
jne
xor
hlt
insb
pop
negl
pop
testl
ret
cs
inc
pop
orb
dec
dec
out
push
jb
xor
cs
jns
out
enter
inc
js
xlat
stos
inc
jle
out
lret
outsb
movsl
inc
outsl
orb
incl
das
lods
mov
xlat
pop
adc
sbb
stos
jne
pop
inc
das
ja
test
icebp
pop
aas
add
ret
testl
daa
pushf
adc
stos
xor
add
mov
cmpsl
cmpsb
xor
adc
fs
pop
test
orl
outsl
shll
lds
pop
pop
push
packssdw
jge
sub
dec
pop
cmpsl
loope
xchg
aam
fiaddl
jo
cwtl
jnp
out
aad
jl
imul
or
dec
insl
in
push
test
adc
mov
dec
scas
push
pmaxsw
stos
stos
shlb
mov
in
add
loop
mov
jno
addl
pop
ret
sbb
push
cltd
xchg
mov
repz
aam
cmc
sbb
dec
call
mov
in
xor
lahf
push
test
pop
add
test
jge
mov
fs
dec
mov
pop
dec
mov
popf
repnz
repz
pushf
in
shrd
mov
push
int3
sub
ja
pop
pop
or
mov
xor
mov
movsb
rorb
mov
loopne
addb
pusha
pop
sub
mov
test
lock
cmp
mov
test
addb
stc
pop
jns
aad
add
test
mov
push
sub
int
push
push
lods
lds
faddl
stos
in
and
mov
xor
ja
inc
mov
aam
mov
sbb
pop
and
pop
arpl
mov
jns
mov
call
rorl
and
push
insb
stos
ds
rcrb
push
jle
lods
sbb
xor
add
addr16
pop
jmp
popf
out
inc
sub
sub
cltd
push
add
sbb
sbb
js
ss
addr16
mov
test
stc
call
add
aas
daa
ret
pushf
xor
pextrw
push
out
mov
in
add
lods
out
push
outsl
dec
ret
and
add
or
dec
fwait
sbb
lods
adc
mul
mov
dec
jne
stos
cmpl
xchg
aam
outsl
add
mov
mov
dec
aas
rorb
mov
sbb
inc
pusha
cmp
les
cmpsb
push
in
xchg
imul
subl
repz
push
and
xor
dec
mov
mov
imul
in
add
loopne
popa
or
mov
or
lods
call
aam
shl
dec
inc
movsb
and
fldl
sbb
aas
xchg
out
enter
ds
imul
data16
inc
sbb
fisttpl
mov
pop
je
arpl
dec
std
out
aaa
lahf
mov
sahf
sub
inc
xchg
ret
mov
mov
xor
xorl
sub
dec
push
jns
push
mov
enter
inc
mov
sar
ret
mov
xchg
inc
jecxz
outsb
cmp
cmp
pop
jne
mov
ja
pusha
sbb
sub
xor
sbb
and
fidivrl
aaa
pop
stc
in
or
pop
and
sub
mov
dec
and
test
push
xchg
xor
cmp
inc
jo
dec
sub
ds
int
movsl
inc
jne
pushf
pop
xchg
push
insl
push
mov
imul
pop
mov
ret
jmp
or
cmpsb
test
or
jns
jne
stos
pushf
dec
mov
cs
fldcw
jl
ficompl
scas
out
sub
adc
pushf
sub
mov
imul
rclb
push
out
adc
call
dec
ljmp
pop
insl
jns
mov
jge
aaa
clc
jl
jnp
adc
xor
mov
movsb
das
mov
sub
mov
or
je
add
test
daa
push
stc
outsb
sub
xchg
push
ds
sti
pop
cmp
fsubrl
sbb
pop
test
or
cmp
test
clc
in
aaa
repnz
cmpsb
je
fwait
lret
aaa
add
inc
jp
push
push
adc
mov
push
hlt
test
mov
jle
xchg
mov
test
test
loop
popa
imul
mov
sbb
xchg
jmp
and
rcrl
xchg
pop
int
fisttpl
adc
orl
mov
mov
inc
in
jno
dec
ror
xor
out
inc
js
mov
or
jmp
adc
icebp
pop
mov
insb
ljmp
dec
jnp
rolb
xor
lret
pop
mov
or
inc
jmp
mov
jns
xor
mov
test
push
add
lret
sbb
adc
cli
sub
imul
push
and
inc
mov
jl
mov
test
test
ret
cli
mov
fxch
jp
mov
out
or
lret
sbb
push
pop
push
xor
push
cmp
inc
add
xlat
xor
lds
test
popa
mov
lods
jno
test
aam
enter
lcall
sar
test
or
pusha
shll
mov
jecxz
xchg
dec
dec
inc
sahf
or
pusha
xchg
pop
sub
sar
rcll
pop
xor
and
push
sbb
jae
add
add
add
push
ss
outsb
jno
inc
dec
popf
sbb
pop
lahf
xor
test
outsl
dec
fsubrs
pop
mov
mov
cmpsl
ficoml
or
sbb
lock
inc
xchg
sbb
jle
pushf
dec
xchg
sbb
jp
mov
std
test
push
mov
int
scas
sub
dec
adc
push
cmp
mov
arpl
mov
inc
ret
or
loope
enter
sbb
shll
mov
into
xor
ds
mov
int3
lds
js
lret
fildll
add
dec
sub
fsts
dec
or
pop
fs
or
test
cld
mov
mov
xchg
jg
jl
jns
inc
subb
dec
mov
add
imulb
mov
imul
push
or
sbb
or
dec
inc
xchg
jno
into
mov
lret
lahf
mov
push
xor
test
lret
insl
movsb
lret
cwtl
das
dec
scas
rcrl
push
mov
inc
mov
in
jecxz
push
add
sub
test
mov
adc
cmpsl
sub
add
scas
mov
lds
jmp
mov
push
fisubrl
cmpsl
icebp
pop
inc
test
lret
cwtl
push
test
sti
insb
lods
movsl
pop
push
inc
add
adc
stc
int3
xor
int3
fisttpll
imul
mov
cs
loope
shl
fcmovnu
movsl
enter
mov
out
dec
mov
cmpsb
or
mov
jo
icebp
or
mov
ss
or
xor
pop
cmp
or
ss
in
sbb
mov
sbb
push
inc
repz
inc
repz
mov
movsl
xchg
sbb
test
js
jns
push
lret
mov
adc
mov
popa
or
icebp
xchg
sub
mov
dec
orl
sahf
sti
mov
mov
in
cmp
cmovg
push
arpl
dec
dec
movsl
scas
jae
mov
lcall
aam
stc
inc
int
or
push
xor
sbb
iret
adc
jo
movsb
mov
mov
push
lds
stc
sahf
orb
dec
sbb
mov
shrl
fldcw
icebp
stc
jl
xchg
sub
sbb
scas
mov
mov
int
fldt
inc
push
inc
ret
repz
fwait
inc
vpmulhuw
jge
into
inc
sbb
pusha
out
jl
aad
cwtl
sbb
in
jle
scas
out
lcall
sbb
inc
pop
icebp
adc
gs
int
inc
pop
popl
mov
sub
push
dec
mov
inc
mov
xchg
out
mov
mov
jg
jge
stos
jmp
outsl
loop
test
mov
fucomp
pop
js
sub
cmc
popa
sbb
inc
mov
mov
xchg
sbb
cmc
cmp
lahf
js
or
dec
cltd
or
sub
lret
in
xor
pop
lock
test
ret
imul
outsb
dec
sbb
lods
add
mov
jmp
jno
test
stos
mulb
or
jo
xchg
sub
xor
jne
shrl
insl
outsl
popw
adc
test
mov
test
jl
in
aaa
roll
out
cld
lret
pop
xor
scas
enter
es
mov
int
sub
out
inc
adc
cmpsl
push
les
dec
aam
data16
aad
xor
inc
out
icebp
mov
mov
add
stc
or
push
das
push
cld
or
pop
ss
in
test
ficoml
push
jp
cmpb
popl
mov
scas
lock
sbb
loop
mov
pop
test
sub
jno
vpaddw
sbb
inc
stos
imul
and
scas
add
dec
mov
pop
sbb
lds
sbb
jg
push
fnstenv
and
push
mov
sbb
test
mov
pop
nop
cmp
mov
fstps
mov
pop
dec
test
aad
repnz
adc
xor
xchg
sarl
ds
bound
mov
sub
mov
sbb
aaa
test
and
in
popf
lods
add
ret
cli
inc
jb
or
dec
push
insl
lret
lret
jecxz
popa
mov
push
mov
movl
add
adc
jmp
dec
inc
push
or
dec
xlat
ljmp
int
js
adc
mov
mov
ret
mov
add
pop
dec
stos
or
mov
pop
subb
push
push
inc
add
pusha
sub
jle
add
cmp
mov
cmp
test
mov
test
pop
mov
popf
shll
add
push
out
hlt
or
stos
cmp
push
add
push
adc
test
xor
add
fcmovne
stos
mov
ret
mov
clc
lret
popf
test
out
or
insb
in
cmpsl
cmp
call
ja
rcrl
xchg
mov
lods
lret
mov
push
mov
xor
dec
mov
sti
sarl
jo
outsl
je
addr16
xor
es
push
sbb
mov
enter
mov
in
stc
test
in
add
cli
jne
mov
add
dec
or
pop
cmpsb
cmp
into
aad
xchg
jmp
outsl
adc
test
adc
test
ret
test
lods
mov
or
out
icebp
aad
test
add
subb
repz
in
test
in
and
mov
xor
lea
push
je
daa
dec
rclb
or
jl
pop
adcb
xchg
sub
cmpsb
out
jg
mov
loope
mov
push
jle
aam
lock
jecxz
xor
push
xchg
jo
fisttpll
jg
dec
mov
call
scas
dec
sub
mov
clc
xchg
call
or
add
aaa
mov
cmp
div
pusha
mov
movaps
std
adc
pop
shll
stos
ret
lret
mov
mov
js
ds
out
lret
ss
and
mov
inc
add
rcrl
push
pop
rcrl
sahf
dec
fisubrs
ret
mov
sahf
push
movsl
idivb
iret
inc
loopne
jno
sbbl
int
pop
mov
insb
mov
nop
mov
idivl
test
dec
inc
movsl
outsb
adc
movsl
inc
test
cs
loope
pop
xchg
idivb
add
push
icebp
lds
add
jg
push
jne
jo
pop
inc
aad
nop
mov
rcll
test
jnp
loope
ss
cli
aam
scas
jmp
lock
cmpsl
ss
pop
test
cmpsb
imul
jle
ljmp
mov
data16
hlt
or
jne
in
inc
test
inc
fidivrl
sub
scas
pop
je
or
leave
pop
push
fimull
push
push
sub
fisubrs
and
xor
jo
adc
sbb
mov
jge
test
cwtl
sbb
push
mov
xchg
mov
xchg
push
imul
jmp
sub
popl
test
sub
pop
clc
push
je
ret
mov
shl
stos
xchg
test
aas
xchg
ja
mov
js
mov
xchg
ret
nop
and
je
ss
mov
ret
mov
je
les
popf
mov
mov
lods
jp
rolb
mov
jne
test
sbb
flds
adc
mov
out
adc
mov
shrl
mov
insb
in
push
push
jne
test
lret
jo
lret
repz
lods
shll
jno
sub
push
push
mov
push
lret
xchg
je
into
mov
xor
ret
adc
dec
or
enter
iret
xchg
mov
dec
ret
jo
and
mov
fnstsw
sti
cs
ss
repz
out
testl
imul
sbb
sub
add
adc
test
testl
push
mov
xchg
sub
out
and
sti
pop
out
into
cmp
mov
dec
test
xor
push
jmp
lds
stc
out
test
lock
out
mov
sub
pusha
or
pop
mov
cwtl
xor
and
or
popa
mov
fld
ret
xor
push
inc
push
and
jmp
jo
pop
dec
ljmp
icebp
mov
std
push
ds
fs
fs
add
lahf
mov
std
ficompl
mov
ret
addr16
test
pop
mov
repnz
mov
xor
addr16
mov
sbb
cli
sbb
jno
sub
sti
shl
fistpll
dec
lret
and
addr16
insl
int
lahf
roll
fsubl
lahf
mov
sub
lcall
test
lahf
ja
jle
fwait
mov
fsubp
xor
call
and
mov
sar
jp
dec
js
mov
test
xor
xor
jns
xchg
lock
fmuls
xchg
push
scas
pop
push
dec
insl
adc
sbb
ret
and
movsl
pop
ds
jecxz
lret
fistps
shll
or
jb
jp
leave
mov
test
mov
dec
jb
stos
cwtl
jmp
sub
add
sub
jg
test
push
enter
cld
aas
cltd
sub
or
mov
jmp
mov
mov
cmc
inc
sbb
mov
sarl
stos
inc
mov
int3
cmc
aaa
xor
shrl
or
push
test
push
mov
sbb
mov
add
cmpsl
ds
cmp
inc
mov
xorb
lods
mov
out
stos
scas
sbb
dec
je
cmp
jge
stc
into
dec
insl
add
xchg
push
ja
roll
mov
or
addr16
xchg
inc
lret
into
dec
push
enter
adc
lock
out
scas
push
push
notl
out
sub
jnp
push
sbb
push
orb
call
out
mov
sbb
adc
xor
pop
pop
mov
mov
or
test
or
pop
fcomps
lret
jno
test
sbb
aad
mov
cmpsl
xchg
stos
fidivrl
add
aaa
mov
add
dec
add
repz
es
dec
shll
push
push
mov
pop
js
sbb
cli
shlb
fistl
js
mov
sub
lret
xor
stos
cmp
negl
lret
movsb
out
mov
aam
int
mov
and
sti
mov
and
dec
sbb
dec
in
pushf
shll
jmp
or
test
jne
xchg
ret
cmpsl
add
or
xlat
adc
jns
dec
dec
mov
dec
insb
out
sub
pop
xchg
cmp
xor
rcll
adc
mov
cmpsl
xor
ja
daa
cmpsb
mov
inc
jo
xor
test
add
enter
lock
in
pop
int
sub
and
xchg
stos
mov
test
arpl
xchg
and
dec
jge
in
mov
jle
cmpsb
add
lock
jl
mov
call
out
xor
out
or
decl
stos
lock
mov
ret
out
in
lret
or
shll
pop
jns
jbe
jge
icebp
ljmp
outsl
xor
aaa
or
push
pop
imul
movsl
bound
repz
imul
fimull
jno
dec
insb
movsl
outsl
inc
adc
cltd
push
xchg
fsubs
lret
cld
mov
insl
mov
inc
and
cmc
mov
dec
cmp
test
test
jb
sbb
int
out
pop
fwait
sub
push
mov
mov
sarb
push
pop
push
es
int
or
in
cmp
mov
sbb
inc
mov
ljmp
xor
xchg
lea
mov
mov
cmpsb
adc
sub
ss
mov
sbb
imulb
insl
out
sub
lea
jne
movsb
and
faddl
push
mov
mov
lea
sub
or
push
jnp
jo
popa
mov
lock
mov
adc
nop
icebp
lahf
popa
test
enter
pop
push
xchg
lret
sbb
inc
mov
je
mov
inc
scas
mov
dec
out
dec
shlb
mov
sbb
les
xchg
cli
push
xchg
test
mov
push
mov
pop
scas
dec
cld
rorl
je
pusha
xchg
jl
jno
std
cli
pop
test
outsl
mov
and
fs
test
mov
cmpsl
cmpb
adc
cwtl
adc
mov
bnd
jns
sbb
or
das
lods
dec
or
xor
or
mov
mov
and
mov
addr16
stc
test
adcl
popf
icebp
hlt
pusha
pushf
jne
pop
hlt
mov
jl
orb
ja
or
nop
or
pop
movsb
das
inc
mov
sbb
cmp
fisttps
mov
xlat
sbb
push
fbstp
push
or
aad
mov
mov
arpl
in
divb
and
fisubrl
scas
out
push
mov
adc
test
xchg
cltd
or
cmp
insb
sub
int3
shll
mov
imul
aad
xlat
daa
push
rclb
stos
inc
jb
orb
ljmp
and
movzbl
inc
scas
cmpl
cmp
push
mov
call
mov
mov
push
js
std
sbb
inc
pop
pop
out
loopne
test
push
push
int3
in
mov
jnp
fisttpl
adc
frstor
dec
cmc
inc
aas
jns
xor
shl
iret
mov
adc
repz
fidivl
xor
mov
mov
xor
dec
jle
pop
mov
data16
lock
and
adc
loope
cli
out
pop
fsubs
leave
popl
pop
xor
test
jp
mov
lcall
fnstcw
andb
out
scas
or
je
pop
jo
test
or
add
sub
icebp
cli
mov
je
mov
bnd
mov
mov
andl
jmp
pop
lahf
cmp
lods
or
fwait
push
fadds
jle
inc
ljmp
adc
lods
and
push
iret
cmp
fimuls
and
mov
dec
xchg
pop
pusha
into
mov
iret
jo
pop
out
icebp
add
test
push
pop
repz
push
jle
and
jl
jg
sub
mov
ljmp
shlb
sahf
inc
outsl
popa
xchg
arpl
sbb
in
jg
sbb
mov
mov
xor
stos
mov
xchg
cs
enter
push
lods
pop
jne
push
adc
sbb
pushf
fidivs
test
pop
pop
xchg
movsl
inc
or
add
in
enter
and
add
mov
mov
pop
mov
inc
cmpsb
mov
pop
arpl
test
daa
sub
and
cmc
pop
js
mov
in
mov
push
dec
push
int3
aad
fdivl
sub
or
jns
test
or
inc
jg
sbb
xchg
repz
pop
xor
adc
in
mov
mov
or
nop
or
push
or
ret
cs
cmp
jl
rcrl
add
add
push
inc
mov
push
pop
mov
test
xchg
pop
cmp
xor
es
fcomps
lock
mov
cmp
lret
sub
add
pop
push
mov
repz
inc
or
dec
xorb
mov
sbb
bound
adc
mov
enter
dec
push
rorb
repz
mov
nop
out
inc
dec
enter
jne
stc
test
jmp
cmp
mov
add
psraw
leave
xchg
sub
sbb
inc
into
pop
and
jo
mov
jge
adc
sbb
lcall
lahf
push
stos
dec
pop
hlt
sub
movsb
mov
jge
test
mov
pop
add
jmp
adc
out
xchg
in
jg
dec
and
mov
jns
mov
or
dec
test
xor
insl
push
cmpsb
test
inc
add
adc
sbb
in
push
cmpsl
les
rcll
sbb
loope
mov
jecxz
ljmp
push
orb
jge
adc
add
cmpsb
mov
mov
negl
and
push
xor
xchg
xor
shrl
ret
and
into
mov
mov
outsb
enter
shlb
mov
pop
push
jecxz
aad
mov
test
cmp
sbb
inc
test
cltd
test
sbb
mov
outsl
and
xchg
mov
hlt
xor
push
lds
in
xchg
fmuls
lock
pop
stc
add
jge
mov
unpckhps
int3
pop
fdivr
sti
test
shl
sub
sbbl
add
mov
mov
adc
ds
jl
dec
mov
test
mov
sub
cmpsl
fwait
push
cmc
sbb
sbb
iret
mov
mov
dec
adc
data16
test
lret
xor
lcall
shrl
inc
loopew
jg
mov
bound
xor
repz
sbb
or
xor
repnz
scas
push
mov
cmc
das
imulb
in
jmp
test
icebp
sub
shrl
and
mov
mov
jnp
or
sarl
pushf
iret
mov
xor
int
push
pop
mov
inc
or
add
lahf
jnp
lds
cmp
rorb
out
xchg
adc
ds
out
jmp
in
xchg
mov
inc
sti
pop
jg
lock
mov
outsl
mov
pop
cmp
test
mov
sbb
aam
popl
cmpps
cmp
mov
adc
mov
leave
data16
lret
sbb
push
test
adc
repz
fldt
sahf
nop
test
push
push
in
add
rcrb
dec
pushf
adc
mov
sub
cld
jmp
dec
frstor
ret
movl
or
shrl
inc
lahf
jmp
arpl
out
mov
mulb
iret
xchg
insl
sub
lret
scas
lahf
jne
daa
addb
push
sub
test
dec
adc
inc
push
movsl
icebp
sub
test
lret
adc
xchg
int3
out
rol
sbb
xchg
jnp
sbb
out
mov
sub
movsl
subl
jmp
inc
jae
scas
inc
mov
fdivs
xchg
mov
lods
jno
test
sbb
push
mov
sbb
adc
or
das
add
xrelease
mov
mov
shll
add
cwtl
test
incb
imul
cs
sub
pop
repnz
in
cld
jmp
inc
rclb
push
cwtl
adc
andb
and
cmp
movsl
ret
mov
xor
jmp
stos
inc
add
dec
dec
pop
aas
gs
loope
sti
enter
filds
movsl
ret
stos
xor
clc
dec
jp
mov
push
xchg
popa
callw
repz
cmpsb
xor
addb
xor
in
add
fdiv
movsl
pop
pop
dec
dec
test
lds
shr
pop
sbb
leave
mov
push
sbb
or
and
test
and
push
xchg
adc
mov
loope
and
xor
sub
test
pop
stos
repz
lds
imul
push
jp
cld
lds
sbb
mov
jg
movsb
cmp
pusha
add
lds
cltd
scas
daa
mov
sbb
or
jmp
sbb
or
test
xor
shrb
pop
jns
shl
xor
xchg
jnp
jp
mov
sbb
mov
cmp
scas
in
mov
jnp
popf
les
mov
fisubl
sarl
jo
jmp
xchg
push
imul
lret
cmpsl
jg
jnp
xor
mov
jle
sbb
stos
sbb
pop
mov
inc
push
dec
mov
fisubrs
test
mov
and
ret
cmp
add
push
mull
mov
mov
cs
mov
roll
aad
aas
dec
sub
pop
jb
test
imul
pop
push
inc
lretw
cmpsb
cwtl
shlb
data16
inc
adc
clc
movsl
in
std
and
xor
icebp
or
scas
dec
mov
cmp
test
add
mov
test
xchg
xor
stos
ss
pop
nop
pop
inc
icebp
pop
inc
fwait
lds
mov
jnp
test
stos
xor
arpl
xor
or
mov
or
mov
pop
outsl
dec
dec
sub
std
sub
repnz
addl
lds
pop
das
lahf
and
push
std
cwtl
mov
dec
push
jmp
adc
into
push
mov
jmp
out
sarl
add
pop
xchg
mov
or
push
jbe
and
dec
pop
mov
adc
xor
mov
adc
and
addl
shl
sbb
ret
dec
icebp
loope
push
lret
cmp
sbb
in
jle
fstps
cmp
inc
or
and
add
inc
aad
or
lds
faddp
fwait
icebp
cmp
push
aad
enter
inc
and
notb
adc
push
jle
or
mov
cmp
sbb
imul
and
aas
dec
inc
add
scas
and
xchg
xor
adc
sbb
mov
push
jne
test
xor
dec
sbb
add
inc
pop
cmp
dec
adc
adc
push
mov
scas
cmp
mov
dec
in
sbb
jp
sub
les
push
sub
xchg
and
pop
jae
in
pop
das
mov
mov
add
or
cli
cmpsl
pop
xchg
cmp
pop
fiaddl
jg
xor
lcall
jb
dec
or
mov
inc
sbb
sbb
test
lret
inc
sbb
out
xchg
sbb
lret
repz
test
movsl
sbb
fwait
out
mov
xchg
in
div
cmp
insb
jnp
jmp
inc
lea
cli
add
flds
dec
clc
test
rcl
fbstp
mov
dec
js
popa
add
pop
mov
jl
out
insl
in
push
daa
mov
repnz
testl
sbbl
pop
ror
in
xlat
xchg
aad
or
loop
mov
mov
push
inc
stos
push
mov
inc
and
icebp
jl
enter
pushf
adc
call
addl
mov
push
cmp
adc
lcall
mov
test
push
lock
jno
xlat
and
mov
sub
in
jg
ret
rcll
adc
xchg
test
inc
imul
xor
sub
add
enter
sti
popa
push
mov
adc
jne
rcl
leave
add
test
sub
mov
mov
adc
cmp
data16
dec
mov
inc
out
add
add
xchg
lock
push
pop
mov
neg
mov
into
dec
scas
pop
adc
bound
and
cld
mov
jle
dec
mov
sub
push
stos
in
mov
pop
cli
xlat
insb
and
lock
outsl
les
push
stos
sub
dec
sti
rcl
pop
and
aam
jg
mov
mov
mov
mov
lret
adc
in
dec
cwtl
rorl
dec
mov
mov
jle
hlt
jp
push
dec
jmp
add
pop
cmp
mov
in
shr
xchg
and
dec
adc
inc
mov
jo
ret
bnd
mov
xor
iret
pop
mov
pop
xchg
add
jge
sarl
test
mov
lret
dec
addr16
push
js
mov
mov
shl
lcall
js
es
fcoms
cld
test
cltd
mov
jmp
add
stos
leave
mov
jle
ljmp
lcall
leave
push
dec
ja
dec
jle
sbb
sub
mov
mov
sbb
lret
fstpl
and
hlt
in
add
imul
fcoms
lret
push
bound
mov
enter
xchg
sbb
ret
jne
icebp
ss
outsl
mov
inc
movsb
and
stc
pusha
sub
sbb
jl
test
hlt
jmp
add
cmpsb
push
pop
push
pushf
mov
xchg
cmpsl
icebp
data16
xchg
ret
xor
scas
mov
add
jbe
mov
leave
adc
test
aad
add
outsl
dec
ret
dec
aas
scas
jbe
add
je
push
sbb
test
jo
xorb
mov
mov
divb
divb
jmp
leave
push
nop
pusha
xorb
push
test
xor
inc
mov
rcr
mov
or
push
test
xlat
or
add
add
and
es
mov
jo
shrb
add
push
pusha
sbb
xor
add
sbb
rorl
and
test
sbb
mov
and
pushf
jl
aam
sub
dec
in
push
sbb
jmp
cmc
jno
ljmp
cmp
pop
in
jmp
jg
adc
cmpsl
cmp
xor
out
movsb
xor
or
inc
xchg
cmp
jp
gs
cmp
jecxz
fsubs
jge
insl
xchg
ss
xchg
jl
pop
jle
push
test
jle
pushl
sub
faddl
mov
xchg
mov
sbb
test
in
pop
mov
push
sbb
inc
mov
jecxz
scas
lret
inc
outsb
sbb
fwait
jmp
push
insb
shll
test
mov
add
jl
std
push
pop
mov
sub
imul
insb
xchg
dec
lret
push
mov
pushl
or
inc
mov
sbb
lods
insb
xor
out
push
push
inc
dec
xchg
lahf
emms
test
test
add
push
sbb
sbb
in
push
push
in
push
sbb
iret
mov
sub
test
lods
xor
adc
clc
pop
mov
fnsave
add
push
push
sbb
jns
xor
aaa
pop
in
clc
shll
ficomps
add
lahf
mov
sbb
adc
cmpsl
mov
lahf
shl
testb
bound
dec
jnp
scas
test
stc
roll
ss
icebp
popa
pop
inc
pop
loop
push
test
sbb
add
aaa
mov
ja
test
jl
int
shl
mov
aas
mov
enter
lea
adc
mov
dec
push
inc
xor
push
add
jns
aaa
inc
jmp
jge
pop
adc
gs
fisubrl
push
sub
aam
jmp
sbb
cli
mov
pop
add
xor
xor
dec
ljmp
outsl
xchg
dec
push
cmpsb
pop
xchg
cmp
xor
hlt
sub
in
jne
lock
jg
and
adc
cmp
or
cltd
and
pop
sbb
jbe
xchg
int
xchg
and
jno
cmp
mov
loopne
imul
jge
int
pop
xorb
mov
cmpsb
mov
dec
stc
lret
push
pop
jo
push
data16
lret
xlat
pop
sti
xchg
icebp
out
cmp
dec
je
dec
or
call
adc
decb
test
mov
arpl
aam
addb
pop
sarl
adc
scas
xchg
out
inc
imul
test
mov
ret
idivl
pushf
es
sub
jns
pop
test
push
xchg
dec
test
jmp
fsubrs
rcl
pop
aam
push
xchg
jmp
inc
jns
push
mov
inc
dec
rcr
mov
in
bound
mov
sbb
push
mov
sbb
sti
jle
pop
push
ret
adc
sti
lcall
aam
outsb
movsb
lret
in
cmc
fldl
setno
fimuls
mov
xchg
jl
or
cmpb
pushf
pop
aas
mov
cmpsb
sbb
mov
mov
dec
mov
jns
push
sub
test
mov
ljmp
sub
into
inc
jne
movsb
stos
xchg
ja
lods
push
pop
mov
test
jne
mov
push
stos
jmp
xor
outsl
pusha
mov
cltd
mov
sahf
call
fidivrl
enter
mov
sub
and
push
out
enter
jle
repz
jmp
adc
add
rorl
insb
cmpsb
jne
aam
inc
dec
push
cmpsb
xchg
mov
test
and
enter
lock
inc
les
mov
test
aam
pop
mov
inc
inc
sbb
inc
xor
mov
push
sub
test
adc
aas
mov
aad
sub
sbb
es
add
mov
pop
mov
add
xor
in
shll
push
cmovle
insb
outsb
dec
inc
ja
repz
mov
icebp
or
jle
mov
mov
sub
lret
add
test
je
mov
int3
fxch
push
sub
nop
shl
out
in
mov
mov
xchg
pop
inc
mov
jb
fucomip
xorl
mov
add
push
mov
jecxz
inc
or
push
cmp
mov
into
dec
int3
pop
mov
mov
data16
sub
test
in
mov
jbe
mov
inc
or
ljmp
sub
test
loope
jle
movd
xor
jge
and
pop
pop
imul
testl
xor
add
inc
cmp
push
out
mov
repz
sub
sarb
mov
fbld
in
jo
mov
adc
outsb
dec
jecxz
mov
jae
pop
jns
enter
xchg
mov
loopne
insl
and
rclb
stos
xchg
jnp
shl
pop
mov
rorl
clc
test
ja
sub
mov
jbe
nop
stc
xor
pop
jmp
into
inc
shll
or
shlb
xchg
xor
xor
sbb
or
insb
mov
dec
adcb
jecxz
jae
jnp
mov
or
adc
test
mov
sub
test
jl
stos
inc
test
inc
jecxz
mov
insl
loop
test
popf
in
das
mov
shlb
int
dec
cmp
jmp
dec
outsl
subb
aad
mov
mov
divb
mov
popf
ljmp
pusha
test
sbb
lea
mov
or
sbb
inc
jp
push
test
and
sbb
xor
add
movsb
fnstenv
xor
std
das
sarb
fstl
push
mov
jb
mov
inc
pop
shl
andl
rorl
inc
mov
and
push
mov
imul
sub
inc
sub
adc
out
test
test
push
test
or
pop
bsf
jp
mov
cs
or
and
sub
cmp
lock
dec
sbb
gs
add
sbb
aam
stos
test
mov
or
ret
cmp
jmp
xor
sub
ret
pop
sbb
mov
icebp
test
inc
xor
dec
enter
ret
inc
lcall
push
or
je
andl
sbb
and
adc
cmp
add
fnstsw
aam
pop
jmp
xchg
lcall
mov
lds
cmc
ss
xor
adc
iret
adc
lcall
push
clc
jno
pusha
xor
iret
dec
popa
and
outsl
adc
xor
das
call
mov
xor
jno
xchg
cld
sbb
mov
call
loop
cld
jecxz
inc
or
cmpsb
xor
and
adc
in
pushf
inc
movl
sbb
mov
mov
xor
cmc
lds
dec
jno
into
xor
ficomps
mov
cwtl
test
jae
mov
lret
daa
addr16
jp
jo
in
adc
xchg
lret
lret
enter
jae
mov
mov
lea
ret
xchg
xchg
adc
xlat
sub
sbb
inc
sarb
inc
add
inc
rcrl
ljmp
xchg
sub
cmpsb
jne
jl
repz
iret
mov
xchg
mov
fmuls
add
mov
push
cmp
jecxz
push
cmp
aam
pushl
adc
push
and
aam
pop
in
mov
aad
fs
adc
push
int3
movsl
jne
push
stc
add
test
or
and
dec
jle
jmp
cmp
lret
adc
mov
pop
popa
sub
dec
loope
lea
test
cld
sub
cmp
inc
adc
push
jp
push
cmp
popf
pushf
mov
jno
jb
inc
or
dec
mov
mov
lock
push
inc
stos
xchg
pop
mov
ret
repz
or
int
pushf
sbb
lea
adcb
jmp
mov
fs
in
stos
into
jle
ljmp
pushf
jl
pop
or
ds
dec
jg
cmpsb
js
fnstenv
or
xchg
add
dec
push
push
pop
mov
pop
loopne
add
mov
jle
ficomps
stos
mov
cmp
pusha
jbe
subl
test
sbb
and
in
sbb
repz
add
inc
mov
sub
mov
inc
inc
add
imul
test
int
stos
sbb
cmpsl
pop
sub
adc
pop
push
rcrl
jbe
push
push
push
out
mov
pushf
ljmp
pop
or
addr16
clc
jae
test
out
xchg
xor
adc
cmp
and
into
lea
lock
xlat
std
movsb
mov
inc
in
xor
insb
les
ss
repz
sub
or
leave
pop
jnp
push
push
pop
subl
loopne
cld
scas
std
call
mov
xchg
mov
lret
mov
jo
push
xor
jns
fmulp
movsb
hlt
or
jno
or
aas
dec
jle
push
sahf
push
pop
mov
icebp
cmpsl
or
jbe
jp
inc
or
jge
jo
dec
cmp
in
fdivrp
xchg
aam
xor
jnp
fwait
adc
mov
pop
sub
clc
xlat
xchg
mov
pop
push
sahf
mov
test
push
or
das
ljmp
js
mov
inc
sub
mov
jae
lds
push
and
xor
outsb
arpl
jne
in
movsb
loop
mov
sub
mov
mov
pop
sarl
mov
fdivr
pop
mov
push
adc
push
es
fsubrp
pusha
sti
pop
lock
orl
inc
insl
mov
adcb
stos
ds
mov
dec
mov
mov
nop
out
stc
movsl
fldlg2
or
sub
dec
das
dec
mov
xchg
add
dec
mov
rolb
mov
sbb
ja
dec
dec
inc
jo
adc
cmpsl
xor
mov
dec
test
nop
outsb
jecxz
stos
movsl
or
adc
test
xor
pop
sbb
pop
test
xor
icebp
inc
push
movsb
ds
pop
outsb
cmp
jl
int
xor
mov
jge
mov
or
lret
pop
push
cmc
test
pop
push
cmc
cld
lea
test
sub
test
push
or
cmp
sub
inc
xchg
inc
imul
hlt
cmc
scas
repz
test
in
insb
in
lcall
pop
fwait
jmp
popw
movb
out
lcall
sbbl
out
dec
add
mov
sbb
test
mov
sbb
psubb
adc
stos
aam
movsb
dec
add
cmp
mov
test
xchg
mov
popf
repnz
xchg
dec
shll
imul
inc
jge
pop
mov
xor
push
outsl
gs
dec
iret
dec
mov
mov
test
cmp
lret
and
sub
or
adc
decl
jl
jno
adc
test
lds
mov
sbb
cmpsb
mov
lret
fcompl
test
cmpsl
and
push
xchg
ljmp
mov
dec
and
sbb
outsl
rorl
cmpsb
ror
cmp
ret
xchg
jp
dec
out
mov
xor
das
int
and
pop
or
test
pop
xor
imul
dec
sub
add
inc
lea
dec
push
lds
xchg
mov
xchg
aam
std
sbb
in
dec
lea
dec
adc
mov
icebp
ret
push
stos
aam
imul
test
push
pop
sbb
push
fwait
lds
aad
hlt
cmp
xchg
test
icebp
or
and
stc
pop
rcrl
mov
rcrb
icebp
xor
int3
cmp
out
adc
js
loopne
repz
icebp
sub
dec
sbb
fiadds
loope
in
mov
dec
push
or
xor
xor
jg
sub
cwtl
sti
push
sahf
test
mov
inc
jne
jg
push
cmp
test
icebp
les
or
ja
dec
mov
out
sbb
jo
fst
ja
jge
aam
mov
repnz
in
mov
fldenv
dec
xor
jns
push
mov
push
mov
dec
and
fwait
push
jnp
sti
pop
sbb
lds
pop
pop
inc
add
test
xor
aas
insl
ret
into
xor
mov
push
or
sahf
cmc
xchg
jns
aam
inc
sbb
popf
idivl
mov
test
adc
js
or
insb
xchg
or
aas
in
cwtl
mov
divl
dec
ss
lahf
push
repz
push
pop
lea
pop
jle
adc
pop
call
subl
pop
push
nop
pop
cmp
mov
dec
sbb
inc
push
adc
sbb
jns
and
fs
or
cmc
lods
mov
mov
dec
and
or
fldl
xor
inc
stos
dec
sbb
int
and
dec
xchg
test
lock
adc
insb
push
xchg
ret
flds
je
jmp
repz
mov
pop
frstor
push
pop
call
ret
movsl
add
push
ffreep
mov
mov
and
test
movsl
cli
mov
into
xor
dec
ret
pop
lret
sarl
out
mov
movsb
loope
pop
sub
pop
out
sub
sub
and
inc
ja
and
xlat
imul
ljmp
mov
jnp
mov
mov
int
aad
jns
dec
mov
iret
pop
cld
sub
clc
dec
fs
fdivs
mov
ja
sub
aam
mulb
out
mov
add
push
daa
jge
push
pop
mov
repz
je
mov
in
imul
cmpsb
test
movsb
mov
jne
and
es
das
arpl
mov
stc
jg
call
inc
js
xor
in
sub
lods
xor
or
mov
sbb
fxch
sub
ret
dec
jnp
popl
icebp
xchg
mov
nop
xor
cwtl
pop
call
test
mov
sub
sub
rcrl
add
mov
imul
std
xchg
adcb
aad
test
mov
sub
sub
jge
inc
shr
popa
add
hlt
add
imul
push
adc
add
mov
adc
mov
lds
lcall
adc
xchg
sub
jnp
fisubs
mov
enter
shrb
sbb
scas
jne
cltd
mov
inc
jne
xor
sahf
jp
pop
pop
and
in
enter
mov
inc
mov
arpl
dec
mov
cmp
jle
popa
ficoml
xchg
xor
sbb
cwtl
cmp
stos
jmp
je
lock
inc
dec
stc
sub
or
loope
cmp
jb
push
outsb
gs
data16
je
sub
ret
and
jp
mov
fs
test
in
cmp
mov
imul
add
dec
dec
pop
sbb
mov
cmp
or
into
jg
add
inc
rolb
mov
popa
push
inc
pop
or
pop
mov
cltd
movsb
sbb
and
and
dec
jle
cmp
dec
dec
pusha
sbb
inc
lret
out
xor
fwait
adc
test
pop
cmp
sbb
xlat
cmp
fdivl
test
mov
mov
into
and
push
inc
imulb
iret
cmp
cmp
and
rcrb
and
pusha
sbb
ljmp
ret
pop
pop
xchg
mov
stc
adc
out
adc
xlat
test
aad
adc
push
loop
mov
test
mov
push
lahf
iret
xchg
insb
sbb
mov
sub
daa
lods
and
out
mov
pop
std
stos
sub
push
insl
jb
fstl
jp
divl
in
adc
sti
js
adc
pusha
hlt
fdivs
ja
cmpsb
jmp
mull
mov
je
jle
xchg
or
mov
aas
shlb
jb
sub
jns
cmp
enter
xor
pop
imul
sbb
or
aas
mov
aaa
fcompl
ret
outsl
push
mov
or
divl
scas
cmp
sbb
mov
push
push
or
jge
aad
icebp
adc
push
out
push
xchg
push
cmp
push
daa
sub
ret
xchg
sbb
jp
push
lahf
lods
ret
mov
fwait
cmp
mov
dec
fmull
add
sub
add
addr16
xchg
out
cmp
aam
lods
test
mov
pop
je
test
mov
xor
jo
movsl
mov
pop
out
out
lcall
mov
pop
dec
push
cmp
pop
enter
adc
fs
cvtdq2ps
stos
xchg
adc
jle
movsl
popa
or
sbb
sti
cli
sub
push
aam
lret
sub
lret
jns
push
cmp
dec
pop
xchg
clc
inc
fs
loope
sub
lcall
mov
xchg
movsb
das
pop
lret
jl
rclb
push
in
das
inc
and
leave
test
in
and
test
sbb
push
mov
mov
xor
sub
add
mov
mov
mov
pop
xchg
sbb
dec
mov
push
lret
data16
inc
sbb
outsb
mov
or
mov
xor
int
sti
lahf
je
fldcw
gs
pop
adc
out
aam
cmpsb
movsb
test
in
mov
mov
loope
inc
int
inc
loop
mov
outsb
push
push
xchg
or
test
into
pop
mov
dec
lahf
dec
mov
divl
int
xchg
inc
sarl
stos
add
sub
xchg
mov
inc
jo
mov
mov
js
add
xor
dec
arpl
xor
imul
inc
movsb
push
dec
jecxz
sbb
jp
dec
sub
test
sti
jae
out
mov
in
push
add
pushf
adc
sub
mov
jmp
das
mov
shlb
fmuls
fstl
cmp
stc
jno
push
lods
inc
cltd
xor
cmpsl
addb
addr16
mov
xor
test
push
cld
test
jge
xor
ja
xchg
mov
ret
adc
sub
cmc
sarl
mov
add
jg
push
mov
int
int3
flds
pop
add
or
sub
insl
out
xchg
addb
lds
test
stc
loope
adc
dec
dec
xor
mov
mov
inc
push
dec
lcall
jg
es
and
fstpt
les
mov
mov
cli
jl
push
add
inc
add
lock
fidivrs
xchg
movsl
add
xor
icebp
lcall
jle
shll
jle
cs
test
dec
in
mov
aad
push
call
enter
mov
xor
sbb
jnp
dec
mov
inc
inc
mov
jns
mov
cmp
sbb
jns
xorl
dec
xor
dec
imul
fmul
out
adc
and
enter
pushf
lock
fucomp
lea
test
pushw
int3
jae
addl
shrb
inc
ret
dec
push
jo
pop
jae
jl
pop
mov
sbb
mov
in
xchg
jns
or
mov
in
xor
int
aas
xorb
pop
in
jae
adc
jg
xchg
nop
pushf
dec
pusha
xchg
push
test
cmp
cmp
dec
arpl
rol
push
mov
or
mov
adc
mov
sub
int
sarl
loop
loope
push
mov
cld
or
pop
rcr
aam
fwait
adc
jne
xor
pop
xchg
sub
mov
fmul
in
sbb
dec
jno
arpl
add
mov
cmp
shll
lods
jmp
jae
addl
fmuls
sbb
daa
testb
lahf
enter
stos
mov
sbb
call
out
repnz
inc
and
jp
jl
out
mov
in
push
xor
fs
fdivrl
adc
xor
xorb
cli
xor
sub
xchg
pop
lar
fstpl
ret
inc
stos
jno
test
stos
pusha
and
dec
cmp
data16
dec
into
rcl
push
inc
cmpsb
mov
addb
data16
ds
roll
pop
jo
cmp
inc
bnd
dec
lret
dec
mov
lret
mul
jp
dec
add
mov
mov
xchg
pop
adc
push
es
ds
div
jo
and
movb
jo
inc
std
repz
decl
int
dec
andl
jmp
nop
out
jl
xor
je
movsl
mov
xor
pop
add
test
test
pop
mov
lahf
stc
mov
cmp
je
jl
pop
mov
jle
in
fidivl
cmp
in
sub
std
push
aam
aaa
fisubrs
fldcw
enter
mov
jns
lret
xor
mov
push
int
inc
pushf
lret
dec
negb
push
ret
jae
andl
rorl
push
jns
gs
into
sbb
adc
test
inc
jle
inc
in
imul
add
aam
lock
jno,pn
fistpll
push
or
loope
adc
xor
int
cld
sbb
aad
sbb
out
call
mov
xlat
jmp
cs
jbe
push
outsl
test
insl
cmpsl
xchg
pop
push
movsb
mov
add
sub
xchg
nop
rorl
test
div
dec
xchg
jg
push
adc
loope
test
ss
xor
xchg
mov
lret
fisubrl
out
das
lock
movsl
and
or
ret
or
in
icebp
fidivrs
fldcw
lcall
sub
outsl
popf
rcrl
dec
mov
fnsave
xchg
dec
or
stos
xchg
sub
or
sbb
in
xchg
pop
pop
in
dec
div
int
imul
decb
or
iret
rolb
imul
fsubr
mov
push
mov
sbb
add
pop
es
xchg
inc
lods
cmp
call
lods
testb
xor
test
jg
or
test
push
stc
enter
push
rcr
adc
sti
mov
mov
push
inc
cmp
inc
dec
inc
dec
dec
roll
cmc
push
test
xchg
daa
sbb
cmp
inc
rol
icebp
mov
rorb
pusha
sub
cmc
pop
outsl
or
push
push
cwtl
xchg
or
fadd
jg
imul
dec
dec
xorl
loop
cmp
jge
movsb
aam
cmpl
out
pop
add
mov
daa
out
test
xor
inc
jle
push
xor
ljmp
or
shl
or
jne
outsl
outsb
and
jne
mov
fisubl
cmp
mov
jbe
mov
movsl
mov
inc
dec
cmc
sbb
xorl
mov
or
mov
dec
push
mov
fcom
and
adc
jg
test
inc
push
dec
mov
testl
inc
fsubrl
mov
mov
mov
add
fsubr
mov
subb
or
rol
fldt
hlt
test
mov
sbb
xlat
bound
es
jle
mov
adc
lret
mov
mov
push
clc
lret
nop
test
pop
add
scas
sbb
out
sub
data16
jns
xchg
rcrl
fstps
pop
rcll
pop
scas
movsl
scas
cmp
clc
sub
int3
and
xor
ret
cmp
adc
scas
inc
dec
cmp
cmp
jle
into
inc
ljmp
subl
test
fldt
push
cld
cmpb
sub
arpl
lret
mov
push
pop
or
mov
ret
xlat
pop
andl
sbb
fs
xor
mov
jns
pop
cmc
jmp
dec
mov
inc
arpl
lods
nop
mov
add
aaa
test
xchg
xchg
inc
gs
pop
outsb
xlat
ror
mov
mov
pop
xchg
jle
mov
cmp
test
test
out
and
mov
out
mov
lret
imul
sbb
mov
dec
cmp
test
sub
xchg
adc
lock
sub
adc
aam
xor
push
add
aam
pop
jecxz
adc
jns
and
adc
mov
mov
jns
repz
cmp
or
cmc
add
shlb
mov
dec
addr16
mov
nop
mov
ficoml
inc
fimull
xchg
sbb
cmp
adc
out
lret
ret
add
idivb
aad
inc
int3
hlt
mov
clc
push
jge
out
inc
sbb
int3
leave
test
sbb
lods
mov
add
out
mov
or
fistpll
xor
pop
push
mov
inc
push
sub
add
pop
mov
inc
sbb
repz
jp
dec
repnz
int3
pop
dec
outsb
and
fnstcw
xchg
xchg
and
roll
mov
mov
into
mov
test
adc
or
repnz
imul
mov
add
aad
outsb
fwait
push
in
push
jecxz
pop
add
enter
test
push
es
pop
mov
punpckhwd
loopne
testb
xor
test
std
mov
ja
ret
mov
sbb
adc
lods
cmp
mov
adc
getsec
push
push
add
rol
cmpsl
notl
addr16
sub
push
sub
aam
sbb
xor
push
xor
imul
inc
mov
lret
inc
int
fnstenv
xor
xor
push
add
dec
mov
jne
sub
mov
sub
xchg
adc
push
mov
cmp
stos
lret
ds
loop
outsl
push
xchg
mov
sahf
xor
add
popf
in
test
mov
sub
xchg
ret
adc
mov
shl
loopne
xor
inc
cmpb
lahf
cmp
or
mov
mov
jle
rorb
and
test
cld
cmp
in
ficomps
jne
cmp
sarl
push
jns
rclb
xor
addl
lret
add
test
xor
in
add
das
xchg
dec
xchg
fldl
xor
jbe
mov
cwtl
cld
sbb
test
inc
movsb
nop
sub
push
push
test
stos
and
push
inc
mov
and
out
pop
leave
outsl
dec
and
mov
dec
test
xchg
push
in
lds
lret
xor
clc
jle
aad
inc
lret
mov
jg
or
sbb
ret
in
mov
inc
jo
test
sbb
xchg
inc
shll
push
jno
fsubrl
lock
and
dec
scas
adc
test
or
addr16
std
in
add
push
add
sahf
mov
aas
shll
fs
or
or
dec
call
sbb
or
jp
or
idivb
shrl
int
push
inc
pop
jl
stos
cld
repz
sbb
pop
add
inc
push
xchg
out
loope
sbb
dec
test
sbb
fcoml
adc
pop
cmpsb
mov
sub
shll
mov
jmp
sub
test
addr16
or
mov
nop
jg
arpl
xchg
lock
ljmp
push
in
mov
mov
std
add
sti
mov
mov
inc
in
std
lret
dec
push
mov
cmpsb
mov
jae
mov
push
pushf
outsb
add
jg
std
jp
ds
test
push
addl
sbb
dec
dec
nop
fadds
test
pop
jl
aaa
adc
nop
rorl
subb
dec
mov
int
xor
lods
adc
or
nop
xor
cmp
cmp
out
xor
pop
es
cmp
mov
scas
jle
inc
imul
gs
arpl
subb
enter
mov
insl
lds
repz
mov
sub
mov
and
stc
mov
mov
or
mov
movsb
xchg
pop
addl
xor
enter
xlat
test
dec
dec
fstl
adc
test
int
repz
loop
mov
or
push
imul
xlat
pop
adc
popf
cmp
mov
test
mov
shr
add
mov
test
mov
dec
mov
sub
bound
mov
movsl
mov
inc
jno
fs
add
test
sub
ret
adc
ss
adc
add
jecxz
xor
loope
mov
lret
test
sbb
jl
push
dec
jbe
adc
sahf
sti
arpl
stos
dec
inc
sarl
repnz
jo
pop
jl
leave
xor
imul
mov
mov
sbb
clc
rcrb
sti
dec
cmp
divl
pop
ja
loopne
and
xchg
decl
imul
daa
movsl
sbb
dec
mov
jne
fmulp
xor
xchg
mov
js
fs
sub
dec
jae
pop
add
dec
inc
adc
out
mov
test
dec
adc
or
push
xchg
xchg
dec
shlb
dec
loope
jb
popa
mov
ret
adc
repz
ss
add
cmpsb
mov
push
inc
push
js
adc
push
sub
or
cmp
mov
mov
sub
rorl
or
cmpl
mov
test
movsl
sbb
mov
xchg
std
es
nop
sub
cmc
outsb
or
and
repz
push
xchg
or
test
cmp
or
out
arpl
adcb
mov
stos
xchg
int
cli
sbb
hlt
xor
ret
xlat
pop
test
daa
push
pop
rorl
fsubrl
mov
js
insb
lock
xchg
pop
jle
pop
fidivl
jns
lock
aam
imul
mov
movsb
or
jae
mov
or
adc
jmp
frstor
sbb
sbb
cmpsl
leave
test
and
gs
add
aam
roll
dec
xor
cmp
fs
fst
sub
fnsave
sub
inc
addb
mov
xchg
shlb
aam
mov
das
xchg
clc
jae
out
sub
sbbb
test
adc
jecxz
xor
hlt
inc
add
bound
adc
mov
and
addl
mov
cmp
ret
lcall
test
cmp
sub
cs
xchg
aam
pushf
jne
pusha
xor
or
std
into
sub
sub
cmp
jbe
cmpsl
jne
pop
insl
xchg
hlt
push
insl
lret
mov
mov
pop
test
sbb
cmc
outsl
inc
repz
pop
pop
lcall
loope
mov
xchg
sti
sbb
mov
test
fdivr
mov
data16
cmc
jmp
xchg
xor
mov
push
xor
adc
and
and
in
insl
or
enter
lret
adc
clc
xor
pop
adc
cwtl
shlb
jmp
mov
test
mov
xchg
scas
test
cmpl
lds
or
out
js
fwait
xlat
popa
loope
or
test
gs
cld
cld
addb
push
fidivrl
orb
scas
mov
test
xchg
test
lods
daa
adc
movsb
jge
outsl
in
mov
mov
ja
loop
test
dec
mov
sbb
xor
pop
out
clc
shll
in
jp
mov
pop
push
add
adc
jmp
sbb
icebp
fldcw
pop
fwait
fwait
mov
adc
insb
mov
ret
inc
inc
test
test
adc
mov
push
popf
xchg
xor
idiv
jp
lea
cmp
xor
ficomps
ja
dec
inc
sub
pushf
jg
leave
hlt
dec
sub
push
mov
pop
jg
or
inc
push
cs
pop
add
xor
scas
sub
push
mov
mov
sbb
or
outsb
and
test
outsl
cmp
ror
inc
adc
rcrb
sub
dec
test
ds
nop
inc
arpl
xlat
add
xor
cmp
lock
test
hlt
or
fldt
ja
daa
loope
scas
mov
sbb
ret
adc
push
dec
testb
mov
inc
imul
adc
mov
mov
cmpsl
jae
test
pusha
in
test
adc
push
jo
mov
pop
into
leavew
out
and
cmpsb
pop
outsb
xchg
stos
adc
sub
arpl
push
jne
movb
rcl
test
mov
std
dec
cmp
mov
test
addl
jns
jle
test
or
decb
aam
jae
sbb
pop
add
fistpl
mov
scas
cmp
aam
mov
mov
or
pop
iret
hlt
pop
xor
xchg
test
fstl
pop
repz
call
shll
push
loopne
stos
loopne
sbb
sbb
pop
bnd
pop
mov
fildl
fstp
cmp
insl
push
xchg
enter
pavgb
rcll
push
adc
mov
nop
mov
sub
and
cmc
fs
lods
pushf
mov
js
f2xm1
movb
jno
inc
sbb
fildll
mov
hlt
dec
lret
out
mov
sub
push
sarl
mov
sub
stos
adc
push
sti
push
icebp
pop
outsl
sub
test
test
stos
inc
enter
sub
iret
roll
js
add
or
call
rclb
xlat
stc
movsb
cld
push
push
mov
sbb
cmp
shrb
jp
xor
les
addr16
inc
and
stos
inc
push
sti
adc
imul
add
dec
pop
fstpl
xor
push
inc
jg
sub
sbb
js
pop
jp
leave
dec
in
test
xchg
call
mov
adc
lea
out
add
test
inc
sbb
or
scas
xchg
dec
sahf
je
pop
add
mov
ret
shll
dec
loopne
insb
std
dec
jbe
movb
jmp
cmp
lods
mov
mov
arpl
jg
clc
scas
and
and
mov
push
stos
push
add
mov
adc
test
mov
push
inc
movsl
mov
sbb
mov
push
test
jge
xchg
or
cltd
es
jmp
jns
fildll
stc
add
sbb
lods
mov
pushf
loope
pop
sub
orps
test
stos
sbb
xor
fcomps
mov
pop
xchg
jb
jg
sbb
lret
pop
mov
fcompl
adc
fstpl
xor
fistpl
cmp
gs
int
xor
lock
cmc
add
int
adc
push
or
lds
pop
jns
pop
test
dec
sbb
je
fsubl
adc
lods
mov
mov
shll
enter
add
rol
out
shlb
test
push
pop
jb
add
dec
stc
fidivl
xor
imul
push
push
fcmovnbe
inc
mov
mov
adc
add
cltd
adc
pop
out
add
adc
push
movsb
adc
pop
test
inc
add
int
std
xor
pop
pushf
sub
loopne
sbb
inc
test
aad
push
stos
lods
and
sub
pop
jmp
mov
rcrb
test
das
fwait
and
in
sub
cli
enter
fildl
sub
pop
cbtw
outsb
push
jmp
lahf
mov
cmp
and
loopne
fisubrl
jge
pop
sub
int
test
or
jnp
cmp
test
fdivrl
inc
add
cs
mov
adc
out
lods
jno
sahf
iret
jle
jge
push
gs
jmp
loop
leave
xor
or
cmp
out
or
jge
test
jmp
sbb
mov
and
test
jmp
insl
inc
test
xchg
icebp
mov
dec
roll
mov
xchg
mov
dec
fisttpll
sahf
xor
stos
and
or
dec
icebp
daa
int
cmp
jae
xor
mov
add
test
or
xor
dec
pop
cmp
test
loope
test
lahf
lahf
mull
sub
in
mov
cmpsl
jmp
mov
jae
inc
sub
lods
ss
sbb
mov
and
add
and
mov
je
lods
pop
mov
jnp
pop
insb
lret
mov
dec
enter
fldt
pop
mov
mov
jg
add
mov
movl
insb
cmc
lock
xchg
dec
mov
sti
push
pop
test
andl
xchg
xor
test
cwtl
ljmp
repz
xor
cmc
mov
sub
movsl
pop
pop
mov
sub
mov
add
mov
insb
mov
pusha
scas
push
andl
sbbb
mov
mov
stc
add
test
pushf
pop
mov
sbbb
xchg
push
mov
fdivr
push
imul
cmpsb
xchg
xor
push
icebp
push
cltd
das
orb
lret
fidivrl
cmpsl
mov
cmpsb
mov
addl
mov
pop
lods
out
lcall
pop
and
lods
insb
add
mov
test
or
sbb
adc
cmp
scas
fucomp
loope
add
ja
test
cmp
or
jmp
dec
inc
mov
nop
sub
bound
icebp
les
pop
xor
mov
mov
mov
jo
xor
cmp
and
add
mov
test
jbe
mov
dec
sub
jg
andl
pop
out
adc
loope
sub
inc
stos
mov
outsl
push
enter
jge
testb
cs
enter
mov
dec
sbb
lock
sub
add
int
or
inc
fldenv
enter
insl
data16
push
jle
fcompl
jle
pop
roll
cmp
xchg
push
dec
div
dec
or
cltd
mov
test
pop
dec
adc
push
test
push
sub
movsb
bound
push
stos
jecxz
cmp
push
scas
and
sub
frstor
test
lods
rcl
test
rcr
inc
test
fiaddl
adc
sti
or
movsl
ljmp
mov
jns
in
mov
cmpsl
pop
jl
out
lock
sbb
and
jmp
mov
insb
scas
xlat
or
enter
adc
dec
pop
mov
pop
sub
lret
push
mov
aaa
mov
sub
test
dec
mov
scas
push
mov
out
cmp
xor
into
push
sbb
fdivrl
leave
ret
jl
mov
pop
xchg
or
or
nop
data16
mov
pop
lret
inc
mov
lret
add
mov
cmp
sbb
cmpsb
mov
gs
xchg
xchg
jle
outsb
and
icebp
pop
iret
pop
jg
and
js
xor
or
fcomi
adc
outsb
mov
popa
jbe
ret
dec
mov
sub
ret
add
lret
andb
xor
cli
mov
push
out
mov
popa
inc
lahf
test
sub
shrb
xor
sub
pop
lock
sub
mov
pop
pop
mov
adcb
in
test
outsl
adc
jnp
pop
cwtl
add
cmp
xor
xchg
ljmp
xchg
call
repz
xor
test
cld
jns
aam
shll
mov
push
int3
data16
icebp
lea
and
into
inc
adcl
and
cvtps2pd
ffreep
sbb
test
jae
fisttpl
cwtl
mov
jecxz
xchg
xor
xchg
int3
cmpsb
pop
subl
das
in
mov
sub
pop
add
sub
or
inc
cwtl
stc
pop
mov
xor
pushf
das
adc
int
jmp
lock
lock
jmp
push
jae
and
mov
lahf
fyl2x
and
fiadds
mov
shlb
push
shrb
pop
insl
adc
fmul
jo
mov
mov
and
call
js
stos
cmp
pop
jle
add
loop
dec
inc
lea
mov
jne
mov
add
fidivs
fadd
into
test
rolb
test
cmp
sub
add
int
adc
fsts
iret
popf
jg
jp
pop
and
push
add
cltd
mov
xchg
test
repz
repnz
aaa
adc
repz
stos
xchg
das
push
lret
hlt
outsl
pop
jbe
pushf
sbb
fnsave
cmpl
maskmovq
testl
test
or
rcll
dec
inc
loope
xlat
adc
cltd
push
std
test
adc
sar
jl
or
xor
push
mov
rcpps
inc
mov
pop
pushf
jbe
test
mov
in
pop
loope
and
pushf
cwtl
inc
nop
enter
loope
test
sub
lahf
mov
cli
dec
sbb
xorl
jns
icebp
xchg
test
xor
and
dec
pop
inc
xor
scas
loop
btr
divb
decl
insb
test
sub
test
adc
filds
adc
cmp
pop
dec
jle
ret
sub
xor
jge
inc
addr16
pop
cmc
mov
sbb
cmp
xchg
lret
aam
dec
popa
inc
add
subl
sub
xor
fwait
push
xchg
mov
test
test
and
add
ss
push
ror
jno
jl
lahf
hlt
dec
push
insb
icebp
cmp
push
inc
je
je
loope
int
test
dec
xor
jg
popf
cmp
mov
inc
loop
sbb
in
sbb
mov
xchg
push
and
adc
jne
or
pushf
frstor
aam
xchg
ror
int3
test
jle
dec
test
and
add
push
cmp
sbb
adc
test
leave
jmp
arpl
bound
push
adc
mov
adc
xor
xor
jecxz
cli
push
das
or
and
pop
out
adc
mov
loopne
leave
sub
inc
out
negl
inc
push
stos
adc
dec
test
inc
mov
add
divb
push
mov
dec
cmp
shl
imul
test
adcl
filds
xor
pop
sub
sbb
pushf
addb
fwait
mov
jo
push
jae
scas
adc
ss
cltd
mov
dec
push
mov
mov
mov
movsl
rcrb
test
push
aam
cmpsb
shll
push
mov
jnp
sbb
in
mov
dec
out
sbb
outsb
les
andl
jmp
inc
lahf
add
arpl
jl
in
lcall
pop
sbb
inc
mov
addl
fwait
or
mov
je
mov
enter
data16
dec
repnz
insl
ret
xor
xor
movsb
les
mov
mov
adc
in
lods
loope
mov
pop
inc
loope
inc
push
sub
in
in
ret
cli
test
fimull
push
add
inc
dec
das
mov
imul
and
mov
push
cmp
mov
aad
dec
cwtl
pop
jmp
hlt
test
gs
adc
sbb
sub
jnp
xor
cmc
add
jle
enter
pop
xor
push
int3
pop
jecxz
fldt
les
inc
ja
or
scas
mov
inc
mov
and
mov
mov
or
leave
mov
and
in
jle
inc
adc
int
ss
cmpsl
sbbl
jne
lods
push
mov
xor
add
stc
and
and
mov
mov
add
inc
mov
imul
xor
fildl
jmp
pop
in
xor
cmp
cmp
mov
push
aam
and
testb
xchg
pop
xchg
inc
xchg
xlat
jmp
cmpsl
cld
add
test
inc
add
jecxz
push
not
pop
negb
lock
arpl
add
add
outsb
cld
xor
push
daa
add
aad
jb
fxch
icebp
lds
data16
inc
loope
dec
sub
je
lcall
sub
jg
sbb
add
out
jge
push
outsb
dec
xor
cli
js
lds
mov
pop
adc
jne
imul
rorb
cmp
mov
push
cmp
sbb
push
jl
int3
das
mov
cwtl
fwait
mov
insb
mov
inc
jg
xchg
inc
xor
jbe
cmp
sub
test
or
push
and
sahf
xchg
dec
dec
test
cltd
out
addb
dec
cli
xor
insb
pop
mov
mov
jno
push
pop
mov
mov
cmpsl
cwtl
and
rorb
sub
mov
rorb
push
jecxz
pop
ret
mov
int3
xor
pop
jns
inc
mov
mov
scas
mov
mov
or
ret
adc
mov
sub
mov
add
push
fcoms
dec
mov
jns
hlt
cwtl
inc
jle
dec
mov
inc
pop
add
leave
mov
jo
std
cmpb
sub
pop
lods
leave
je
fadd
add
in
pushf
js
sub
inc
mov
add
fisttpl
daa
xchg
dec
test
aas
ja
add
mov
cmp
addr16
test
adc
adc
xchg
jnp
mov
sti
push
cltd
xchg
and
sbb
or
out
scas
mov
dec
out
aam
out
ret
pop
dec
jg
rcrl
imul
mov
outsl
mov
in
mov
loope
in
sub
jns
jnp
xchg
dec
aaa
jg
pop
pop
lock
xchg
ljmp
std
test
in
daa
icebp
mov
stos
test
mov
nop
push
fidivs
pop
in
data16
adc
xchg
jno
into
sti
das
inc
cmpl
mov
in
divl
ds
out
movsl
sub
sub
inc
hlt
in
shlb
cmc
mov
inc
cmp
enter
add
rorl
push
cmp
mov
mov
mov
cmc
fadds
popf
insb
cmc
lods
stos
xchg
dec
xor
pop
dec
test
sub
into
scas
mov
fs
mov
xchg
mov
test
negb
pop
push
push
jl
and
cmc
or
xor
mov
pop
mov
fucom
sub
push
addr16
leave
add
lahf
jmp
mov
outsb
insb
fiadds
dec
test
pop
sbb
ret
movsl
mov
sti
add
test
repz
fisttpll
xor
cltd
ret
mov
cmp
aad
pop
cmp
fs
jns
lcall
push
push
add
in
lds
inc
inc
mov
pop
mov
jmp
mov
add
pop
daa
pop
ror
cli
mov
ljmp
clc
flds
cmc
arpl
adc
xor
test
jg
inc
sub
push
sbb
cmp
pop
lods
push
xchg
xchg
sbb
roll
xor
sarb
pop
mov
and
and
js
adc
test
popf
leave
mov
xchg
enter
lds
lcall
mov
outsl
mov
jns
outsl
jecxz
mov
jle
mov
xlat
ds
sbb
or
fistpll
scas
rcll
icebp
fldln2
daa
xchg
mov
jo
add
sub
pop
rclb
sbb
xor
les
sub
jmp
aas
test
or
jne
push
jge
sahf
dec
aas
push
outsl
push
mov
scas
inc
fwait
int
mov
mov
pcmpgtw
test
inc
jecxz
xor
inc
je
dec
repnz
mov
mov
pop
inc
mov
imul
jg
das
shl
iret
mov
in
and
gs
lods
aaa
xor
lea
pop
pop
or
insb
loop
aam
pop
fwait
loope
out
repnz
push
das
nop/reserved
dec
jecxz
mov
pushf
out
enter
pop
mov
je
movsl
out
push
mov
out
call
jle
xchg
shlb
jnp
dec
sbb
inc
dec
push
jecxz
test
sub
or
mov
dec
movsb
lods
jle
mov
sbb
rcll
cmp
test
test
mov
out
test
push
sub
jge
inc
pop
inc
aad
mov
inc
jle
addl
iret
xlat
mov
test
movsl
or
add
out
mov
mov
outsb
pop
pop
mov
cmpl
daa
in
pushf
xlat
mov
mov
in
mov
test
scas
loopne
mov
inc
cmpsl
sbbl
test
jp
dec
neg
sub
enter
sbb
mov
inc
jg
inc
movsb
movsb
mov
add
sti
xor
xchg
shrb
out
xor
insb
gs
sti
push
lock
cmp
je
mov
and
sbb
add
mov
adc
mov
out
sti
push
aas
cltd
scas
push
fldenv
test
push
or
mov
jp
ret
popf
xchg
pop
lret
pop
cmp
jns
mov
xor
lea
mov
jnp
int
jo
icebp
das
arpl
mov
or
cmp
ret
loope
pop
jg
iret
xchg
sti
add
sub
mov
inc
jae
pop
repz
pop
aaa
rcrb
push
int3
aam
xlat
aad
data16
fimull
cbtw
push
dec
sbb
jno
insl
scas
jno
test
jp
sub
fs
test
ret
xlat
and
out
mov
xor
jl
movsl
call
push
or
rorl
int3
in
sub
add
bound
cmpsl
int
dec
test
mov
cmc
jns
mov
dec
dec
inc
and
test
and
mov
mov
ret
fnstcw
std
xchg
jnp
jmp
dec
fsubr
mov
loopne
adc
ja
shrw
sub
push
mov
inc
out
mov
adc
mov
mov
inc
cmp
aam
rcrb
inc
in
cli
into
pcmpgtb
push
fbstp
stos
push
shrl
lods
movb
cmp
and
jle
aaa
pop
sub
cld
inc
jae
inc
mov
or
and
pop
lods
jle
seto
push
or
nop
sbb
and
sbb
test
into
push
inc
mov
inc
test
inc
lret
and
vhsubps
leave
fisttpl
jg
mov
faddl
ficompl
adc
jne
in
cmpsb
adc
inc
roll
jp
mov
push
xor
mov
jmp
dec
imul
jo
xchg
out
in
test
mov
or
mov
sbb
pushf
xor
fwait
xchg
stc
add
sbb
dec
pushf
lock
and
or
mov
mov
ss
into
mov
mov
imul
mov
sub
jbe
xor
mov
or
mov
dec
cmp
dec
mov
scas
nop
and
adc
sti
xchg
push
inc
cmc
cmp
mov
test
push
shlb
in
jle
pop
or
xchg
leave
cs
sub
adc
fistpll
imul
push
mov
test
shr
push
pop
shlb
ret
push
mov
into
xor
push
jl
jno
adc
mov
pop
rorb
pop
ret
out
fsubrl
and
sub
inc
cmp
mov
jnp
push
jne
shrl
mov
insl
loopne
leave
test
inc
cld
in
inc
or
fisubrl
mov
pop
sub
sub
adcb
test
mov
jge
sub
leave
and
sub
jp
movsl
test
xchg
jo
sub
popf
stos
out
mov
push
mov
std
sub
subb
sbb
loope
ja
pop
inc
adc
add
test
jo
fcmovnb
pop
loopne
mov
jnp
cmp
dec
push
scas
dec
cs
fwait
iret
loope
mull
std
cmp
repnz
xchg
lret
mov
movsb
xchg
call
mov
inc
cld
ret
fiadds
mov
scas
ror
int
pop
fldcw
scas
out
fs
dec
roll
pop
cmpsb
dec
dec
adc
popa
pop
mov
aam
fsubl
cltd
xor
mov
dec
jg
mov
mov
xchg
push
int
add
jecxz
xchg
or
mov
leave
test
jle
rol
add
jg
loop
mov
cmpl
jne
jp
insl
repnz
fsubrl
lret
mov
sbb
daa
push
jmp
fadd
les
je
push
mov
xor
add
jns
rclb
hlt
xor
sti
lret
lods
sub
sbb
dec
adc
out
xchg
xor
test
pushf
jg
inc
adc
aad
dec
add
mov
pusha
jmp
cmc
pop
adc
or
mov
test
jb
and
ret
fimull
aas
xor
jno
mov
sti
leave
fists
dec
sub
jecxz
mov
xor
jge
jle
jecxz
sbb
or
or
push
je
jge
inc
stos
arpl
xor
push
icebp
aam
push
imul
pop
push
faddl
pop
xor
mov
inc
shrl
push
outsb
cwtl
je
cmpsb
mov
rcr
cmc
xor
mov
sbb
test
ret
sbb
mov
stos
add
xchg
enter
test
mov
bound
push
repnz
enter
push
inc
dec
mov
ret
dec
dec
push
pop
insl
mov
call
xor
lock
or
lea
and
int
xchg
aaa
test
test
jno
jecxz
mov
xor
inc
sbb
cmpsb
ss
dec
dec
mov
int3
popf
mov
enter
cmc
popf
inc
sub
imul
std
sub
xlat
inc
cmp
nop
inc
fstpl
mov
inc
je
out
push
das
loop
loopne
xchg
into
adc
mov
dec
loopne
pushf
fdivrs
xor
decl
fs
sarl
sub
pop
sbb
inc
mov
fsubrp
ss
sbb
sbb
mov
test
loopne
test
mov
test
adc
add
pop
dec
lcall
inc
std
sub
in
xlat
test
cmpsb
fdivs
sub
ret
sti
icebp
imul
data16
xchg
les
loope
xor
addl
inc
and
ret
loopne
gs
cmp
sbb
dec
lods
sub
test
mov
cmp
je
aam
add
into
dec
mov
dec
mov
dec
mov
mov
pop
add
fdivs
add
fimull
push
push
call
or
insb
lods
jg
sbb
movsb
sti
imul
arpl
lahf
inc
je
sub
add
fsts
loop
pop
or
push
cmp
test
loope
jl
test
pop
sub
cmp
test
pop
mov
out
mov
and
rol
addr16
adc
les
in
sub
inc
push
ret
cmp
jp
cmpl
lods
insb
pop
inc
out
mov
push
test
mov
sub
test
loop
mov
lea
mov
out
lods
mov
insl
sub
push
daa
or
fldcw
dec
xlat
idivl
or
xor
cmc
mov
mov
cltd
sub
in
clc
fimull
push
sub
or
sub
mov
in
test
push
dec
pop
int
inc
cmovno
aad
out
loope
sbb
inc
mov
pop
out
pop
jl
xlat
in
aam
cld
xchg
in
lahf
gs
leave
in
mov
pop
cmp
sub
mov
popa
int
jl
ss
jle
jno
test
aad
adc
cmp
sbb
js
inc
subl
popf
jge
pop
or
xchg
lret
mov
fstl
dec
xor
dec
pop
iret
sub
test
sub
loop
in
xor
sub
outsl
add
push
xchg
sbb
test
sbb
into
xor
and
sbb
cs
push
mov
fs
lret
add
mov
cwtl
or
inc
rcll
xchg
push
inc
out
jp
mov
ss
imul
mov
leave
jmp
fcmovb
popf
add
aas
jnp
lea
sti
dec
test
test
xchg
dec
sbb
aam
and
inc
inc
jne
sbb
add
test
inc
add
jo
lahf
mov
bound
cmp
mov
mov
add
loope
rcrb
enter
mov
mov
or
dec
xchg
push
out
pop
push
stos
addr16
mov
xlat
mov
add
xchg
mov
mov
loope
aaa
pop
cld
and
jle
les
outsb
aas
fs
pushf
add
jns
mov
andl
rolb
jg
mov
jmp
lahf
mov
ds
hlt
add
cmpsl
pop
outsb
rcll
inc
shl
push
add
shll
add
mov
int
and
adc
jmp
call
enter
mov
or
mov
xor
hlt
icebp
imul
xor
sarl
mov
xor
push
scas
jle
mov
jp
sti
pop
add
sarl
test
sbb
pop
sub
lret
jnp
out
notl
pop
adc
cmp
xor
sub
imul
fabs
dec
ss
popf
js
mov
daa
pop
jl
or
sbb
adc
dec
dec
ja
inc
sbb
jne
mov
xchg
mov
xchg
aas
add
mov
push
xchg
ja
iret
ret
movl
mov
and
sbbb
mov
cmc
dec
cmp
jl
pop
stc
jecxz
enter
add
mov
fcoms
das
push
mov
sbb
mov
bound
loope
into
sub
sbb
jp
enter
mov
or
mul
stos
arpl
pop
std
sub
add
mov
cmp
popa
mov
xor
icebp
jge
adc
xor
xchg
mov
pop
sbb
ss
in
and
inc
daa
adcb
lds
incl
jbe
aam
imul
jns
sbb
sar
in
adc
jmp
xor
or
loope
mov
test
jbe
push
sbb
stc
das
je
jmp
pop
je
jo
mov
fisttps
inc
and
out
adc
cltd
jle
mov
stc
sub
sbb
push
sub
sub
sub
inc
mov
shll
pop
cmpsl
mov
mov
movsl
jae
push
pop
add
mov
lcall
inc
ret
add
xchg
or
ja
adc
clc
mov
push
pop
cmpsb
jle
adc
adc
dec
lret
lcall
xchg
push
subps
int
inc
sbb
sti
mov
enter
mov
subl
xchg
cmp
adc
mov
nop
in
shll
stc
mov
pusha
out
dec
mov
sub
fistps
sub
pop
adc
loope
and
cmp
jmp
add
jo
and
enter
push
push
mov
push
lods
std
mov
push
xchg
cmp
push
add
minps
add
insb
cmp
cmp
sub
hlt
aaa
or
fs
sbb
xchg
pop
roll
pop
jg
xor
call
jae
cmp
test
mov
je
inc
fnstsw
dec
scas
adc
ljmp
mov
shlb
popa
test
jecxz
pop
mov
pop
xor
std
sbb
fcomip
cwtl
movl
mov
and
pop
cli
movsb
xorb
xor
pop
or
scas
fldt
int
cmp
lds
sub
pop
shll
test
sub
xchg
jmp
fwait
xor
sahf
sub
cmpsb
xchg
iret
nop
or
pop
xchg
dec
or
imul
mov
jns
jns
in
cmpsl
sbb
mov
sbb
pop
jecxz
test
sahf
movsl
cmp
in
stc
or
mov
loope
dec
cmp
pop
divb
movsl
insb
ja
js
adc
sub
pop
adc
xchg
jmp
push
xor
xchg
or
mov
cmc
lea
hlt
notb
scas
cwtl
jp
int
daa
clc
and
sbb
in
into
xor
cli
stos
lret
es
push
add
in
dec
jge
filds
popa
test
test
cld
sbb
jno
xor
test
roll
ficompl
fisttpl
rcrb
mov
dec
mov
test
scas
and
add
cmc
jb
icebp
fists
sahf
jne
add
mov
stc
dec
sub
push
test
ds
dec
int
lret
pop
sub
mov
test
and
addl
fs
mov
lods
sub
inc
test
std
xchg
dec
test
or
clc
sbb
mov
outsl
popf
out
test
roll
mov
std
loope
pop
pop
xor
cmp
imul
cmpl
fistps
mov
cmp
std
movsl
rep
xchg
dec
push
icebp
mov
das
js
jg
push
icebp
mov
mov
jbe
movb
mov
pop
cmpl
adc
push
fucomip
jmp
loopne
push
mov
pop
dec
popf
lods
adc
negl
jp
mov
lcall
icebp
push
sub
inc
in
stc
test
push
xlat
xor
and
pop
fwait
in
fldcw
sahf
or
mov
xchg
sub
pop
add
test
lcall
sub
jns
xchg
idivl
aad
les
and
mov
hlt
fmull
push
add
aam
mov
mov
push
jp
pop
ret
xorl
das
iret
int
outsl
mov
into
fisubrl
adc
pop
pop
add
pop
lock
js
movsl
in
cmc
sti
pop
fwait
les
mov
mov
pop
xchg
and
movsl
sbb
daa
or
cltd
or
jno
pop
sbb
push
inc
adc
test
test
jecxz
jno
push
cmpsl
and
enter
dec
add
test
aam
int3
aas
daa
inc
jne
pop
jns
scas
shrl
iret
and
repz
js
pop
into
fildll
out
cmp
push
adc
inc
mov
adc
cltd
lock
push
xor
cmp
add
stos
out
add
js
mov
xchg
ret
adc
sub
roll
lahf
and
sbb
test
push
sbb
lcall
mov
loopne
addl
leave
sub
add
sub
fbstp
pop
ja
cmp
scas
add
mov
mov
inc
push
push
sub
mov
pushf
xor
lret
or
xchg
xor
jp
movb
push
outsb
lea
test
arpl
sbb
push
mov
adc
jae
in
sbb
test
lahf
icebp
insb
xchg
and
decb
cmpsb
adc
pop
cwtl
cmovp
xchg
lea
push
ss
cmp
shlb
mov
and
lahf
jle
push
je
ja
movswl
ret
dec
imul
insb
add
add
dec
lcall
xchg
inc
pop
adc
das
call
jmp
lds
sub
or
js
push
aad
es
sub
sub
dec
xor
loope
pop
add
push
lods
aam
cmpsb
subb
mov
jecxz
pop
loop
jp
lea
mov
mov
pop
jp
push
jl
test
fsubrl
pop
cmp
icebp
sub
xor
fidivrs
dec
xchg
push
inc
out
test
or
jae
mov
push
scas
dec
pop
sbb
xchg
scas
out
test
dec
mov
pop
pusha
ficomps
decb
push
lahf
notl
les
pop
sti
sub
and
pop
dec
shl
cmpsl
xchg
xchg
pop
mov
ljmp
mov
or
aad
cmpsl
dec
test
push
test
hlt
lcall
xor
jmp
sbb
or
out
aam
aad
in
int
test
dec
jae
jle
inc
pop
addl
and
mov
loope
aam
push
cmc
mov
xlat
popf
aam
loop
or
dec
incl
ret
bound
cmp
in
orb
test
test
ret
movsl
fisttpl
and
push
pushf
lock
cmp
fiaddl
dec
ds
xlat
cli
sbb
cs
push
test
mov
mov
cmp
sbb
jg
lret
lret
mov
mov
sti
nop
jle
insb
lret
mov
cmp
jle
int
mov
mov
jle
mov
or
or
xor
push
test
repz
out
cmp
and
pop
add
cwtl
insl
xor
arpl
cmpsl
mov
aam
jecxz
dec
ret
gs
xchg
aas
test
in
inc
xor
mov
leave
xchg
daa
jae
sbb
bound
lret
test
into
xor
lock
ljmp
fidivs
lret
xor
loopne
jne
jge
push
lahf
mov
adc
test
gs
outsb
push
repz
mov
jge
push
sbb
mov
sbb
push
mov
icebp
push
xchg
sub
jne
insl
aas
dec
or
and
and
mov
cmp
pop
test
pop
cmovs
hlt
lds
inc
popf
mov
lahf
das
add
ss
decl
add
mov
mov
mov
push
iret
pop
sahf
inc
inc
notl
aaa
push
xchg
xlat
pop
in
adc
push
inc
push
xor
popa
fmul
pop
je
cmp
mulb
movhps
mov
push
mov
cmc
sbb
roll
jp
mov
cmp
ja
test
pop
std
dec
fdivrl
fdivs
popa
stos
or
and
test
mov
leave
push
ret
stos
fstpt
ds
orb
gs
std
pop
xchg
pop
int
rorb
cwtl
test
mov
in
loope
xor
push
inc
repz
test
add
sti
add
push
test
pop
jno
push
dec
jge
pop
and
das
add
and
cld
shrb
insb
sbbb
pop
pop
adc
out
loopne
mov
and
icebp
fs
sub
mov
mov
push
push
in
rcr
sbb
adc
mov
add
int3
cmp
leave
pop
jnp
pop
hlt
cmp
stos
ret
sub
xor
mov
gs
jle
inc
js
out
jnp
push
push
mov
dec
inc
stos
mov
or
add
cld
sti
lods
pop
xor
add
sub
mov
repz
test
pop
shll
jnp
xor
add
out
fldt
aaa
mov
sarb
mov
pop
adc
or
lods
jl
dec
leave
sarb
adc
imul
add
movsl
test
sub
xchg
out
sti
clc
out
xor
cwtl
aam
fucomi
add
clc
push
mov
fnstsw
ss
jae
lock
jecxz
arpl
fisttps
lret
and
repz
inc
cmpsl
std
stos
push
fcoms
fiaddl
xor
cltd
sahf
test
rorl
into
pop
mov
cmp
icebp
push
jl
fmull
in
enter
scas
add
push
lret
add
or
das
fs
inc
dec
cmc
pop
sbb
fstp
out
xchg
pop
out
rorl
dec
sti
test
mov
add
mov
inc
in
pop
and
shr
xchg
cmc
cmpsb
loopne
push
lds
inc
fwait
into
ds
push
jg
fdivs
nop
add
stos
mov
dec
out
jp
mov
enter
movsl
in
and
mov
rorl
mov
push
test
mov
dec
jl
jle
bts
mov
pusha
mov
xchg
sub
and
popf
into
jne
das
es
sahf
es
out
mov
nop
pushf
lods
add
jge
test
xor
stos
sub
add
jno
mov
popa
shl
xchg
dec
mov
add
rcrb
test
cs
pop
pop
mov
dec
repz
push
or
into
inc
mov
adc
inc
stos
loope
movsl
dec
outsb
push
icebp
loope
jnp
sti
xor
xor
add
add
and
test
test
js
mov
cltd
sbbl
iret
push
test
andb
mov
mov
xor
stc
inc
and
xor
mov
ja
std
notl
test
stos
jl
fnstenv
push
fmulp
je
std
cld
ret
subb
adc
cmp
into
lret
out
mov
mov
mov
fisubrl
test
out
mov
lock
mov
nop
inc
xchg
dec
clc
jle
orl
mov
adcb
lahf
scas
push
push
cmc
jnp
fiaddl
mov
clc
sbb
imul
jp
imul
mov
add
enter
inc
mov
insb
cmp
sbb
inc
mov
fisubrs
in
sti
pop
mov
mov
mul
mov
lahf
and
movsl
or
inc
loopne
popf
mov
test
xor
hlt
fnstsw
sub
scas
stos
aam
pop
inc
or
sub
cwtl
outsb
adc
test
ret
push
lock
test
in
pop
mov
mov
outsb
lea
in
ret
test
pop
dec
xor
addr16
leave
jno
mov
int
pop
test
stc
sbb
inc
leave
xor
fsubl
call
aam
or
lods
cld
sub
and
dec
int
lret
test
inc
jl
or
dec
pop
in
insb
popa
mov
test
sub
jns
in
add
bound
mov
jle
mov
xchg
add
and
mov
lods
or
adc
add
pop
add
push
mov
addr16
stos
jecxz
gs
lea
mov
adc
rcrl
push
sbb
mov
test
sub
pop
xor
inc
sbb
add
mov
mov
rclb
ret
fcmovnbe
adc
addl
testl
inc
ljmp
or
sub
push
bound
add
or
mov
fistpl
jae
fldl
push
add
lret
mov
jb
dec
and
cmpsb
fists
xchg
repnz
mov
fldl
ljmp
jae
xchg
push
addb
lea
lods
mov
aam
jne
push
mov
int
add
addr16
xchg
sbb
push
pop
out
cmp
mov
aam
mov
inc
inc
and
adc
jns
inc
jle
cwtl
and
in
push
jnp
mov
repz
test
jne
jns
mov
cmpsb
pop
das
imul
lods
sbb
sarl
int3
pop
dec
and
je
add
stos
into
jg
test
dec
aas
test
mov
pop
inc
jecxz
lods
push
push
add
in
das
aaa
lahf
aaa
notl
lret
les
pop
inc
sbb
ds
std
push
adc
je
mov
ret
lret
mov
cmp
test
cwtl
subl
mov
pop
jg
cmpsl
ret
daa
push
stos
inc
push
fstpl
pushf
cmp
rol
jle
sbb
imul
mov
dec
or
add
insb
adc
jo
fnstenv
pop
std
imul
mov
mov
mov
shr
dec
daa
and
sbb
cmp
jge
int
mov
gs
jae
add
test
push
mov
dec
insb
loope
jno
test
jo
pop
lcall
mov
int
lods
test
scas
push
lret
leave
xchg
sbb
scas
or
or
ljmp
fisubrl
cli
jns
dec
xchg
in
or
sbb
and
lea
jmp
adc
loope
stos
gs
cwtl
std
dec
push
sahf
ret
dec
push
sub
mov
xor
daa
push
test
or
test
add
mov
enter
loop
inc
dec
in
stos
es
aam
aaa
or
sub
sbb
cwtl
mov
inc
xchg
xor
icebp
test
mov
fsts
jp
inc
in
stc
adc
test
sti
xlat
cmpsb
flds
imul
and
outsb
test
aad
sub
fcoml
or
dec
es
mov
or
mov
in
lea
jecxz
mov
cmp
insb
test
inc
outsb
mov
mov
pop
mov
push
push
out
sbb
mov
inc
insb
icebp
jle
mov
cmpsl
lcall
out
add
push
loop
mov
add
mov
icebp
xor
fs
push
and
mov
dec
dec
test
lret
inc
shll
jae
test
lret
inc
hlt
xchg
mov
sbb
jbe
push
push
lods
mov
jns
xor
sbb
outsb
sar
sub
pop
ret
push
stos
pushf
gs
cmpsb
sbb
out
inc
jnp
ret
fs
insl
sbb
in
les
cmp
mov
xor
pop
sahf
mov
push
bound
push
jb
lea
icebp
lock
sbb
and
adc
inc
jnp
iret
push
push
ljmp
jo
jp
mov
sub
adc
in
ret
iret
mov
loope
cwtl
sbb
pop
xor
pop
jg
jae
jle
icebp
mov
pushf
ss
add
ret
into
stos
xlat
pop
inc
push
leave
movsb
stc
aam
sbb
jmp
loop
mov
stos
movsl
inc
out
lretw
fmuls
mov
test
stos
pop
bnd
outsl
movsl
xor
cmp
sbb
sbb
jnp
cwtl
xchg
sbb
pop
cmc
dec
mov
es
mov
dec
out
divl
mov
add
inc
add
pop
push
leave
sahf
mov
xor
push
push
ret
mov
test
mov
add
jns
ss
pushf
pop
les
pop
ja
rcr
add
pop
out
push
cmp
sub
nop
lock
fs
into
lods
jno
pop
jnp
int3
pop
cmc
cmpsl
push
adc
mov
test
xchg
add
cmp
dec
shll
loope
jno
dec
cltd
pop
mov
dec
fwait
adc
insl
lock
xor
pop
jo
lea
pop
inc
mov
pop
cmpl
xor
cli
rcrl
sarl
scas
pop
test
loop
arpl
or
sbb
pop
and
inc
ds
mov
andb
aad
adc
in
jl
ror
sbb
outsb
aam
jnp
lcall
les
dec
gs
ja
enter
jmp
mov
add
in
cld
sbb
popa
cwtl
ffreep
jo
daa
or
inc
lea
pop
mov
test
jge
push
daa
push
sub
icebp
sbb
dec
push
popa
inc
in
pop
mov
flds
pop
xchg
inc
loop
stc
jecxz
or
mov
in
inc
push
or
sbb
push
je
xchg
cltd
imul
out
xchg
repnz
pop
cmpsb
or
and
xchg
adc
pop
mov
sub
and
jl
mov
rcl
ret
pop
out
popl
pop
inc
int3
aas
lfs
outsl
lcall
add
shl
lods
cmp
fstpl
mov
pusha
or
int3
das
or
divb
add
mov
jae
nop
sti
shll
dec
fldt
ret
dec
add
mov
fmuls
daa
insl
push
aam
popf
addb
or
pop
es
jle
xor
mov
xchg
adc
pandn
aad
test
pusha
xor
in
inc
add
or
rorb
pop
pop
mov
add
xor
mov
mov
jae
es
sbb
lods
je
roll
test
pop
daa
push
jle
or
push
xor
mov
xor
cmp
pop
jp
fmull
test
out
fadd
or
imul
fimull
arpl
rclb
lret
mov
rclb
adcl
sub
cmpsb
hlt
xlat
mov
sub
pushl
shll
in
sub
outsb
hlt
sub
stos
aam
xchg
aam
adc
jl
in
jne
test
mov
les
test
sub
mov
dec
sub
sbb
shr
js
pop
push
inc
mov
and
aaa
enter
or
stc
dec
jnp
sbb
stos
in
scas
push
addr16
push
add
mov
sub
pop
lods
adc
mov
std
inc
rclb
dec
sub
add
dec
imul
scas
cmp
rolb
in
in
test
pop
jecxz
ret
jae
sbb
cmc
jmp
cs
push
aas
mov
xlat
mov
cmp
mov
mov
cmpsl
xchg
in
cmp
inc
jbe
fdivp
pop
sbb
cmp
pop
inc
xor
sbbb
xchg
or
sub
movsl
mov
jns
or
dec
sbb
ret
jns
mov
rcr
pushf
leave
push
jno
sarl
pop
mov
pop
stc
add
push
mov
pop
aam
sbb
sub
ss
jne
inc
jp
mov
dec
jl
jecxz
aas
inc
repz
cmp
dec
lret
movsb
flds
dec
mov
hlt
push
jmp
xor
shll
jns
sti
or
jbe
sbb
push
test
jl
pop
fdivs
pop
pop
loop
mov
push
call
push
jne
xorb
ja
or
mov
imul
xchg
push
mov
fwait
dec
aad
adc
cwtl
fyl2x
inc
mov
enter
xchg
mov
fwait
cwtl
das
cld
ret
pop
jecxz
jmp
scas
aad
or
icebp
push
imul
pop
ss
lret
adc
frstor
pop
xchg
add
xor
sbbl
inc
fwait
sub
push
jb
decl
ret
aam
mov
push
adc
jmp
lcall
out
std
cmp
out
loopne
dec
xchg
xlat
sub
inc
or
pop
push
push
add
cmpsl
jns
in
ss
pop
cmc
lret
mov
clc
cmpsb
inc
cmp
mov
sub
test
pop
xchg
adc
ret
and
or
and
xchg
xchg
lret
test
hlt
sti
outsb
push
outsl
iret
or
or
arpl
mov
ret
xor
mov
mov
cmp
out
bound
subl
add
cmc
xorb
test
sbb
pop
test
andb
test
sub
enter
cmp
ret
sub
out
insl
sbb
pop
lock
pusha
jmp
mov
and
or
in
rol
ljmp
push
fs
scas
mov
lea
test
and
outsl
into
xchg
sbb
int
in
outsb
jge
dec
mov
fwait
and
inc
test
xor
int
inc
lock
outsl
out
lods
flds
icebp
cmp
shrb
pop
jecxz
sahf
gs
cld
mov
mov
imul
sbb
test
stc
xchg
pop
jbe
icebp
jecxz
into
loopne
mov
dec
and
mov
cmp
insl
test
pop
sbb
or
add
pcmpgtd
loop
pop
mov
add
arpl
jae
xchg
sbb
jae
test
push
testl
sub
andb
mov
insb
pop
jb
lds
pop
mov
imul
int
jmp
in
cmp
mov
aad
pop
cltd
ljmp
mov
icebp
jge
jno
lods
test
inc
pop
or
jp
mull
sbbl
push
jnp
imul
mov
outsb
or
pusha
in
div
inc
add
call
lea
jb
xor
mov
lds
out
fstpl
fistl
mov
ret
das
rolb
in
dec
out
dec
ds
adc
test
sbb
mov
call
iret
dec
bound
adc
test
adc
inc
push
xchg
imul
sbb
inc
addr16
out
pop
dec
mov
lds
sbb
into
pop
es
adc
dec
cmp
outsb
leave
pop
push
ret
dec
imul
aam
push
mov
inc
pop
jne
pop
jle
cld
je
push
testl
cmpsb
mov
cwtl
clc
mov
cwtl
hlt
hlt
mov
ljmp
stos
addl
or
loop
test
add
aas
jno
mov
add
mov
inc
push
adc
aam
jo
in
jecxz
mov
add
cmpsl
mov
dec
cmp
mov
or
aad
mov
add
mov
subb
das
or
xchg
sbb
mov
pushl
cmp
push
cwtl
icebp
shll
into
pop
mov
sub
or
jle
jmp
lock
inc
sbb
imul
sub
dec
xchg
jg
xor
push
addr16
shll
repz
jno
cmpsb
xor
inc
cmpsl
iret
push
mov
es
sbb
cmc
jo
or
lock
add
xor
dec
dec
or
lahf
aam
xor
out
std
lods
pop
jno
inc
and
cmpsl
xorl
jbe
dec
jo
xor
sub
shll
or
sub
jnp
sbb
pop
add
cwtl
imul
sbb
out
mov
idivb
cmp
pop
fldcw
add
and
fwait
or
adc
add
jp
cmp
lods
mov
das
dec
inc
mov
mov
mov
mov
sbb
sub
je
mov
clc
mulb
mov
sub
test
loop
stos
sub
js
inc
fwait
les
inc
ret
cmp
jo
push
add
sbb
pusha
mov
sub
popl
cmp
gs
xchg
icebp
pop
sbb
jo
clc
add
out
repz
test
fbstp
lahf
testl
loop
pop
ss
sbb
sub
cmc
sbb
or
mov
mov
jmp
mov
cld
cmp
ljmp
dec
xor
mov
dec
sbb
mov
jecxz
dec
cmp
xor
jge
andb
jecxz
dec
xor
lret
mov
mov
inc
fcoms
in
mov
mov
sti
lcall
ljmp
ret
mov
test
pop
sub
add
pop
adc
or
retw
pop
cwtl
popa
mov
inc
into
and
daa
cmpsl
jbe
out
clc
cmp
xor
sbb
add
add
leave
dec
sub
popa
insl
test
xchg
testb
jne
aaa
xor
cs
or
in
ret
out
test
test
sbb
iret
cmpsb
xchg
dec
xor
ds
aam
mov
push
aad
jb
mov
incl
shlb
outsl
push
xchg
adc
movsb
sbb
mov
or
jmp
sahf
inc
mov
push
and
ja
fnsave
in
sarl
fidivrl
cmp
loope
outsl
cli
rol
mov
cld
fistpl
xor
test
flds
cmc
adc
scas
xchg
dec
dec
fs
dec
pop
mov
xchg
in
sbb
xchg
add
into
pop
jne
out
jns
and
addl
inc
adc
into
cli
push
test
cmc
mov
jnp
mov
xor
mov
mov
xchg
mov
add
test
leave
mov
mov
imul
ret
push
cs
pop
adc
daa
add
repz
mov
test
das
rorl
dec
inc
mov
mov
jno
jno
iret
or
jnp
sbb
pop
cmp
and
mov
mov
sub
mov
mov
sahf
aaa
xor
sub
jae
push
ret
cmp
jecxz
pop
mov
repz
add
shrb
js
xor
mov
std
jp
movsb
lcall
gs
mov
dec
xchg
clc
xchg
pop
rcrb
call
nop
inc
clc
xchg
xchg
jno
adc
dec
pop
scas
sbb
scas
sbb
xchg
dec
test
out
gs
das
inc
inc
add
call
inc
leave
mov
arpl
mov
cmp
xor
push
les
or
push
mov
jns
lock
mov
cmpl
lgdtl
pop
adc
roll
icebp
or
rcll
aam
add
std
jg
roll
mov
or
inc
jno
fdivrs
cltd
insl
out
push
fs
out
pop
cs
iret
mov
pop
cmp
pop
push
mov
jle
add
dec
enter
mov
cmp
pop
scas
lea
inc
add
mov
jne
inc
scas
and
negl
add
pop
inc
and
test
adc
ds
and
and
test
pop
stos
movsb
nop
cmp
into
inc
jbe
cltd
dec
jb
sub
mov
ja
sbb
inc
lret
popf
add
arpl
out
and
mov
sbb
repnz
lods
nop
aad
scas
shlb
push
imul
jmp
inc
lahf
jno
sub
in
sbb
adc
mov
sbb
or
bt
sub
mov
sahf
jecxz
mov
lea
ret
sub
add
jecxz
dec
jb
add
push
and
out
push
test
sbb
jle
or
xor
push
out
data16
test
mov
push
lcall
or
mov
cmc
testb
and
imul
ficoml
ficoms
loop
pop
imul
and
out
pushf
sbb
xchg
test
fisttpl
in
mov
inc
sub
mov
pmulhw
jns
or
popf
dec
inc
fs
loope
imul
lret
hlt
in
push
xorl
xlat
sbb
sti
stos
jl
mov
sub
ret
pusha
mov
jno
mov
imul
jns
adc
xchg
sub
sub
add
popf
test
sub
cmpsl
iret
sub
test
fstpt
add
push
xchg
sti
in
gs
jle
push
xchg
inc
add
mov
sub
test
fadds
pop
jg
nop
dec
cs
ja
push
sti
in
adc
ret
test
sbb
mov
divb
popa
inc
in
popf
loope
pushf
je
outsb
mov
imul
movsb
xor
sbb
jg
aaa
aam
dec
daa
jge
mov
sahf
insb
movl
enter
jl
add
push
add
popa
jns
dec
popa
loopne
or
jnp
or
cmp
add
enter
add
test
mov
ja
jge
push
pushf
outsb
stos
es
sub
ret
cmp
in
mov
mov
and
pop
jmp
loop
inc
xchg
dec
and
or
pop
out
dec
lcall
sahf
mov
not
data16
popa
jne
jle
lahf
test
jge
test
mov
lret
add
adc
cmp
dec
lret
dec
inc
adc
dec
fs
push
imul
arpl
inc
jne
cmp
mov
je
cmc
lcall
xchg
mov
push
imul
adc
push
adc
dec
outsl
aas
pop
mov
xchg
pop
test
mov
push
insb
test
ss
test
icebp
testl
in
cmpsl
dec
inc
sbb
xor
xchg
adc
imul
lea
movsl
enter
push
rcrl
mov
jns
enter
cltd
fsubrp
movsb
repz
and
push
xchg
add
sti
mov
mov
inc
add
in
pushf
push
dec
data16
mov
insl
ljmp
cmpsl
or
xor
jb
outsb
push
repz
xor
xor
adc
das
and
inc
jle
cmp
sub
repnz
jle
cwtl
or
or
add
or
inc
mov
jg
lret
hlt
push
push
test
mov
xor
popa
lock
popf
sub
xchg
mov
add
in
fs
jae
xchg
mov
loop
mov
jl
or
sbb
xor
sbb
lods
lret
and
inc
outsl
lea
lret
scas
shlb
sbb
cmp
test
push
in
inc
jp
and
add
mov
shrl
or
dec
in
hlt
adc
pop
test
push
xor
adc
in
aam
inc
sti
xor
sub
or
lock
jle
or
rolb
push
ja
xchg
arpl
mov
sbb
test
pmulhuw
cld
outsl
jne
or
push
or
popf
subl
in
jno
xlat
mov
out
test
mov
dec
call
mov
int3
test
sbb
lds
push
mov
pushf
imul
loope
adc
push
adc
mov
mov
push
test
ds
jl
rcrl
xlat
xorb
sbb
rorl
sbb
mov
sbb
jno
push
pop
js
jne
dec
dec
sub
xor
dec
mov
add
xor
push
push
pusha
orb
mov
sub
fdivr
mov
or
xchg
jl
cmp
jp
lret
xchg
pop
movsl
outsb
cmc
lds
imul
adc
and
push
test
cmp
add
mov
decl
ljmp
push
lds
dec
pop
xor
clc
mov
fisttpll
xor
cmp
cmpsl
cmpl
lret
dec
ret
in
jg
scas
mov
subb
popf
js
ret
adc
jp
int
test
ret
add
or
iret
xchg
cmp
arpl
push
pop
and
jge
gs
ret
and
popl
and
inc
ret
cmp
xor
push
int
movsb
arpl
xchg
xchg
fldt
fdivl
pop
xchg
ss
mov
jecxz
pop
jl
cmp
cld
xchg
mov
out
adc
jns
mov
pop
jns
push
lock
add
dec
cmpsb
add
xchg
push
into
mov
rsm
xchg
push
push
fimuls
test
test
pop
push
fistl
push
lods
jae
test
add
clc
test
mov
leave
or
mov
pop
add
adc
mov
call
test
pop
test
rcrl
add
rclb
in
sti
int
mov
push
lret
jns
shrl
lock
mov
adc
mov
cmp
push
sub
mov
loop
decb
mov
mov
pushf
cwtl
adc
mov
insl
adc
cmpsb
mov
sbb
test
out
lret
outsl
xor
jecxz
and
jns
sbb
mov
mov
int3
popfw
jl
filds
ss
mov
inc
pop
in
sub
out
mov
in
pop
popa
sub
fdivs
inc
xchg
jno
test
mov
leave
outsl
mov
imul
cmc
jmp
pop
inc
jnp
add
xchg
ljmp
clc
mov
inc
jle
inc
push
xlat
ljmp
xor
imul
gs
fstpt
jae
cmc
add
sbb
mov
test
jne
jb
imul
in
aam
xchg
stc
push
cmp
pop
xchg
cld
jle
data16
test
mov
in
ja
inc
add
outsb
mov
sub
and
in
mov
xchg
into
aas
sbb
int3
mov
lods
jl
add
outsl
ja
aad
jae
jle
out
shll
pop
lods
mov
push
add
enter
add
lret
faddl
jae
push
add
sub
inc
xlat
mov
push
icebp
icebp
sub
aad
lea
inc
stos
cmpsb
cwtl
ret
mov
xor
sbb
push
arpl
fnstcw
xchg
leave
cli
xor
inc
xchg
jecxz
xor
add
nop
out
mov
sub
push
nop
scas
fisttpl
in
into
lds
sti
rcll
lock
test
xor
mov
test
subl
cltd
out
test
adc
jmp
stos
jnp
adc
test
dec
sub
lret
std
repnz
pushf
pop
cmp
xor
cmpsl
popf
mov
lea
pusha
cmp
or
lret
jns
xchg
cmpsb
and
dec
loope
lret
add
fs
mov
sahf
mov
lret
ljmp
jae
jno
dec
test
jns
out
lea
js
ret
dec
jecxz
inc
pop
lock
mov
scas
iret
sar
rorl
aam
out
jo
inc
aam
loopne
add
es
cmp
sub
shlb
add
xor
mov
xchg
inc
mov
mov
mov
inc
add
icebp
jno
add
jns
pop
imul
loope
in
mov
or
pop
loope
fnstenv
gs
aad
aam
and
push
sub
ja
dec
ror
test
mov
insl
loop
jl
stc
xor
dec
fucom
xchg
push
cmpsl
push
mov
bound
daa
mov
dec
ja
mov
push
icebp
test
dec
mov
pop
jecxz
inc
inc
lea
xor
loop
dec
xchg
jns
gs
cmc
sbb
jecxz
rcrl
cmpsl
mov
push
ss
insl
adc
and
je
push
jle
xchg
or
sub
outsb
add
mov
cld
inc
mov
frstor
adc
xchg
or
test
movsl
sbb
mov
into
sub
aas
test
push
inc
jb
sbbb
repz
xchg
mov
leave
subl
inc
jns
aam
push
xor
ljmp
cmp
add
push
icebp
add
mov
pop
mov
push
pop
imulb
testb
mov
mov
clc
stos
push
add
jecxz
xor
jmp
push
mov
pop
cld
ret
push
aam
jl
enter
inc
ss
and
cmpsl
xchg
das
xchg
adc
xor
ficoms
sub
mov
jg
sub
lds
test
sbb
cltd
mov
push
push
stc
and
push
ficomps
pop
xchg
lea
mov
sbbl
pop
insb
xchg
or
lock
mov
rcr
sub
std
ficomps
inc
cmpsl
popf
fistpl
rorl
nop
sub
jo
inc
jb
jge
pop
pop
add
sbb
xchg
or
jg
in
adc
das
adc
aas
xor
pop
inc
push
cmc
test
mov
cwtl
icebp
xchg
dec
jge
aaa
sti
pop
xchg
xor
adc
dec
jg
jae
popf
iret
mov
add
pop
and
sub
jg
cmp
shlb
sub
dec
jno
ret
imul
dec
xchg
dec
lret
daa
flds
fsubrs
push
inc
sbb
push
fnstenv
mov
push
clc
mov
inc
adc
mov
xchg
push
fcompl
inc
sub
ss
sbbl
push
out
xorl
jmp
imul
movsl
sub
das
lret
shlb
loope
fdiv
push
arpl
inc
push
mov
mov
leave
test
ss
lods
ret
and
fs
mov
push
pop
add
stos
xchg
cltd
adc
pop
push
cli
mov
lret
dec
addr16
jecxz
shll
xchg
or
xchg
sbb
pop
les
aaa
inc
jg
cmp
outsb
mov
andl
push
mov
inc
test
and
in
test
adc
in
shll
sti
mov
inc
jne
mov
jg
cmp
enter
push
jp
ret
int3
xchg
jg
clc
scas
mov
mov
adc
pop
ret
faddp
or
mov
adc
mov
cli
inc
imul
dec
pop
jg
mov
mov
xor
loope
shlb
xlat
add
inc
or
aad
js
test
movl
jns
inc
hlt
sbb
aaa
pushf
ds
sarl
pushf
push
or
inc
xchg
jmp
push
add
lods
iret
sbb
test
push
cwtl
insb
ds
mov
in
pop
test
inc
inc
hlt
jl
xor
push
inc
mov
add
or
rcll
pop
pop
pop
enter
testl
jnp
adc
ret
loop
icebp
cmpl
push
icebp
add
sbb
sub
pop
cmpl
and
scas
pop
push
loop
test
xor
push
out
jae
out
mov
mov
push
arpl
inc
mov
mov
inc
and
cli
lcall
mov
aaa
aas
xchg
imul
shrb
aam
sbb
dec
xchg
iret
add
rclb
and
leave
push
adc
outsb
in
mov
or
gs
dec
rcrb
aas
adc
jo
filds
pop
bound
inc
mov
xor
je
mov
lods
mov
test
mov
nop
out
xchg
imulb
add
cmp
pop
imul
int
mov
repz
cld
and
sub
divb
out
lcall
imul
sub
add
popa
rcrl
iret
cmpsb
incb
outsl
push
mov
movsb
sub
jge
out
or
dec
sub
cmp
sbb
bound
or
fistpl
out
jne
aaa
or
rorb
mov
adc
idiv
jo
rcrb
rep
mov
test
std
cmp
or
or
add
mov
mov
xor
aam
js
mov
leave
idiv
dec
sbb
jg
stos
loope
jmp
js
ret
test
mov
imul
mov
sub
jecxz
mov
and
cs
rorl
mov
dec
xor
mov
sub
jne
push
stos
ret
gs
sbb
cmp
bound
mov
fdivr
jle
cmp
mov
test
pop
add
cmp
nop
and
in
lcall
add
imul
pusha
xor
jge
add
scas
and
xchg
cli
xchg
cmp
movsl
fnstenv
dec
or
xchg
movsl
out
or
pop
sbb
mov
das
mov
iret
dec
test
cli
add
jae
and
xor
pop
or
xor
neg
lret
xchg
adc
dec
and
sub
mov
lods
mov
mov
sbb
mov
test
mov
dec
icebp
imul
sahf
jo
jae
xchg
pop
ret
mov
loop
fimull
dec
or
mov
sbbl
mov
ret
test
lret
ret
jp
shrl
ret
shrb
mov
pushf
mov
in
xchg
dec
add
jne
loopne
and
push
aas
aad
xor
pusha
push
call
enter
sub
and
mov
pop
pop
outsb
sub
xchg
mov
xchg
stos
rclb
shrl
dec
mov
dec
jb
pop
push
fstps
dec
mov
add
pop
or
pop
xor
mov
inc
pop
adc
inc
mov
mov
mov
stos
bsf
paddsb
dec
mov
test
dec
mov
adc
addl
sub
scas
lfs
popa
and
sub
loop
mov
cmp
dec
jb
mov
jmp
jbe
adc
hlt
insb
ret
das
xchg
add
mov
inc
lds
push
pop
add
xchg
jno
imul
shrl
lcall
inc
sbb
mov
dec
fcmove
test
ljmp
stc
pop
sub
adc
mov
jp
xchg
in
jb
imul
dec
lahf
mov
and
dec
dec
inc
pop
mov
push
jns
ret
jbe
hlt
xor
insb
mov
xchg
jbe
into
bound
test
jno
jns
dec
dec
mov
in
push
loope
iret
dec
cwtl
adc
xor
mov
cmp
jle
sbb
adc
sub
sub
jno
arpl
lcall
mov
ret
aas
sub
scas
sbb
push
daa
inc
outsb
inc
xor
in
push
lcall
test
aad
push
mov
lds
lds
add
inc
fs
jne
stos
shrl
cmpsl
in
cmp
cld
test
adc
ljmp
xor
insb
cmpsb
and
sbb
fcmovnbe
std
sbb
daa
hlt
sub
jle
mov
mov
jb
jns
cmpsb
pop
sbb
inc
pop
adc
push
add
gs
ret
pop
push
fwait
sbb
dec
xor
mov
mov
pop
into
inc
jne
int3
cmpl
and
add
fldt
scas
fildl
imul
cmp
test
or
xlat
ljmp
inc
nop
or
fsubs
fwait
sub
movsl
cmp
or
mov
bound
bnd
fidivl
mov
xor
loope
inc
jae
pop
sbb
sbb
fs
push
mov
add
adc
mov
imul
mov
push
pop
sub
dec
cmp
pop
test
leave
lock
jl
sti
xor
xor
mov
and
jns
mov
movsb
sbb
icebp
pop
and
or
iret
jmp
call
aam
movsb
jne
inc
and
out
xchg
insb
lret
and
sahf
rcrb
mov
mov
jmp
mov
push
shrb
lock
je
dec
sahf
cmp
cltd
xor
push
inc
in
in
shrl
aam
test
gs
or
out
push
xor
cld
push
out
ret
sti
push
aad
add
mov
shrl
push
cmpsb
xor
into
cmp
scas
out
mov
pop
aad
ret
adc
stos
fldt
xor
fnsave
jl
testb
sbb
into
sub
aad
outsb
hlt
mov
add
cmp
push
sub
xor
sarb
push
mov
leave
int3
lea
ret
jmp
mov
popa
cmp
push
pusha
aad
jge
xchg
mov
pop
inc
incl
adc
pop
cmpsb
sbb
push
lahf
inc
add
js
xor
and
push
push
add
shr
sub
roll
aad
int
mov
inc
mov
in
add
roll
frndint
adcb
pop
mov
icebp
pop
sub
add
xlat
mov
xor
dec
dec
pop
inc
ror
daa
fnstsw
je
jg
lods
movsl
jle
mov
mov
fwait
or
test
adc
cwtl
cltd
cli
mov
sub
mov
std
in
enter
pop
add
and
sbb
test
or
popf
mov
cmp
mov
xor
mov
lahf
xchg
pop
pop
unpcklps
imul
or
lret
int3
jl
das
test
add
testl
faddl
shlb
es
xor
fcomps
pop
rcl
leave
jle
pop
mov
pop
and
mov
jne
imul
pop
add
mov
loop
mov
mov
movsl
mov
int
add
inc
sbb
lds
sub
and
pop
ja
repz
clc
dec
lds
test
jle
call
lahf
rcll
jbe
das
arpl
sbb
jl
sbb
incl
cld
arpl
ja
fldt
cmp
pop
in
shll
roll
imul
das
jl
out
jmp
fnsave
add
jns
xchg
xor
jp
sahf
cmp
movsl
xor
scas
in
scas
jae
cmp
push
pop
popa
xor
loope
pop
iret
sub
adc
xchg
icebp
pop
or
orb
fwait
adcl
inc
int3
mov
mov
sbb
push
and
mov
aas
xlat
push
ljmp
jno
dec
neg
jne
addb
adc
dec
adc
mov
test
cltd
or
test
xor
fsubrp
push
jae
sbb
outsl
mov
test
es
mov
nop
stc
add
or
mov
stos
lret
cwtl
pushf
int
repz
or
jecxz
sbb
cmp
cmp
popl
movsl
add
nop
int3
pop
out
jge
insb
out
or
stos
fldl
mov
lds
add
lcall
jno
jmp
xor
nop
pop
test
int
mov
sub
jns
mov
std
push
adc
pop
clc
or
xchg
stos
cmp
add
js
jmp
rolb
movsb
jne
add
dec
sub
inc
shrb
jnp
mov
test
outsb
ja
adc
lea
das
xor
cmc
mov
fimuls
lods
mov
jns
xor
repz
xchg
xor
jmp
push
stc
fsubrs
ds
jno
cld
leave
cmp
fisttps
pop
ljmp
xor
dec
pop
lahf
add
lds
inc
mov
ret
jbe
mov
stos
loop
stos
xorb
push
fwait
out
jo
xchg
ret
dec
push
in
jge
seto
cmp
aad
icebp
pop
mov
add
cmpsb
push
mov
xchg
cli
test
pop
loopne
aaa
mov
cmpsl
loop
loope
and
pop
into
cmpsl
or
xchg
sbb
mov
mov
mov
sub
mov
mov
push
fcoms
dec
sub
push
repz
and
push
sbb
aaa
fstpt
dec
movsl
test
repz
mov
cmp
ret
test
xchg
jnp
mov
mulb
ljmp
pusha
fnstsw
inc
cmc
into
jmp
divb
dec
jle
imul
nop
das
insl
stc
test
scas
repz
test
dec
cmp
pop
ret
iret
outsb
add
dec
cmc
ja
test
idivl
pop
popw
mov
ret
or
push
add
fs
and
mov
test
sbb
outsl
and
xor
test
mov
push
mov
lock
pop
add
lretw
push
mov
mov
sub
insb
gs
mov
rcrl
rorl
add
outsb
jle
adc
jo
pop
flds
aaa
add
daa
or
movsl
jae
pop
add
ja
mov
xchg
test
sar
in
shll
xor
pop
enter
sub
int
fldl
test
jne
jg
xchg
adc
lods
and
imul
or
aas
add
movsb
mov
andb
insb
push
sbb
dec
adc
mov
fistps
aas
push
cmpsl
clc
push
push
lds
push
dec
dec
jge
pop
js
xchg
jle
push
inc
divl
mov
fcompl
ljmp
lret
cwtl
movsl
sti
xor
xor
adc
xchg
cs
insb
sub
cmp
outsl
inc
adc
and
push
shll
int
sbb
dec
frstor
mov
add
std
sbb
jno
mov
inc
xor
cltd
out
inc
pop
test
push
flds
mov
inc
pop
lds
dec
dec
cmp
fs
xor
dec
aad
mov
cld
ret
dec
or
mov
int3
stos
dec
mov
enter
xor
mov
ja
xchg
pop
jb
inc
push
lds
iret
lock
jmp
push
shlb
aam
push
push
and
sub
lods
xor
pop
rorl
bound
cwtl
icebp
sub
fmull
movsb
xor
scas
pop
push
xchg
mov
mov
aam
test
mov
sbb
cmp
jecxz
ljmp
cmp
jmp
adc
test
or
cmp
mov
push
rcl
stc
inc
test
in
mov
outsb
jge
cs
jne
add
xchg
cmpsl
je
in
stos
mov
mov
adc
jg
xor
ss
or
xchg
sub
es
cli
test
inc
leave
xlat
pop
adc
test
push
pop
out
aas
addb
mov
adc
sub
test
sti
sbb
mov
mov
cmpsb
dec
xlat
into
pop
add
mov
and
sbb
ror
adc
ret
push
mov
cmp
aaa
test
or
dec
sub
fnstcw
and
and
loopne
xchg
aaa
add
mov
test
add
cmpsb
mov
mov
cmp
arpl
into
lcall
lds
pop
insl
insl
sbb
xor
xor
clc
aam
add
test
cld
push
push
adc
movsbl
sub
aam
je
adc
adc
cld
dec
cwtl
adc
push
lcall
lock
inc
mov
test
out
add
shr
inc
xor
clc
ret
mov
jmp
cmc
jo
leave
sub
mov
rolb
add
ss
mov
bound
imul
and
or
sub
into
inc
jne
ret
insb
scas
cmpsl
xchg
add
dec
mov
sub
and
adc
dec
cmp
adcl
mov
rcrl
sbb
mov
dec
push
cmc
leave
adc
xchg
sarb
xchg
sti
js
sarb
es
xchg
mov
jae
cmp
lock
xchg
int
xor
or
shll
mov
jae
imul
fwait
sbb
test
push
inc
jnp
loopw
jns
xor
xchg
cmp
cmpsl
dec
adc
push
sbbl
rcrl
or
pop
addr16
jo
cli
push
out
test
jl
push
sbb
add
inc
push
lret
add
mov
enter
clc
test
pop
jb
sub
mov
and
xchg
out
test
sti
xchg
fstl
aaa
xchg
xor
push
mov
mov
sahf
or
inc
mov
inc
add
pop
outsl
imul
ret
test
ret
and
into
test
push
cli
cmp
fistps
lret
adc
cmc
popa
fcmovnu
pushl
fidivl
inc
sbb
rclb
lock
bound
pop
fnstcw
mov
pop
aam
js
or
mov
cmp
mov
lds
dec
pushf
inc
push
dec
adc
imul
push
dec
mov
repz
test
sub
mov
std
addl
inc
mov
pop
shll
sbb
repnz
test
mov
add
mov
xor
and
jae
jl
gs
inc
jb
aad
cltd
mov
shrb
push
add
vmwrite
cld
xor
push
pop
test
lret
in
dec
xchg
and
test
inc
adc
xor
lods
mov
xchg
or
fisubl
pop
cmpsb
xchg
lea
dec
jb
cmpsl
xchg
test
mov
fildll
repz
pushf
pop
fisttpll
adc
mov
pushf
mov
push
mov
add
test
enter
stc
test
or
movsl
xor
adc
xor
gs
pop
mov
rcl
scas
aam
fiaddl
xchg
test
push
es
mov
ljmp
mov
lcall
xchg
push
dec
pop
jg
pop
out
outsb
test
out
movsb
insb
mov
and
push
push
jl
bsf
int
or
enter
inc
add
sub
add
ret
repnz
jecxz
test
or
out
fildl
mov
mov
leave
test
xor
cld
xor
jge
cwtl
sub
movsl
mov
pop
mov
cmpsl
mov
je
xchg
adc
popf
cmc
inc
cs
jmp
push
icebp
ds
mov
push
mov
push
sub
add
xchg
xchg
aaa
cmc
or
dec
or
xor
add
cld
arpl
add
sub
jns
xor
ret
or
nop
dec
sti
rorl
daa
inc
jne
jle
sub
lock
ljmp
pop
data16
mov
sub
es
fcmovnbe
and
or
inc
test
ret
cmp
test
sarl
gs
sbb
cltd
enter
aaa
test
jb
sarl
jl
cmp
pusha
hlt
jecxz
or
inc
add
and
push
popa
test
fnstsw
mov
aas
test
jno
inc
push
pop
mov
aad
mov
pop
and
adc
xor
loopne
mov
push
xchg
das
mov
jno
jle
arpl
ja
xchg
js
insb
jl
int
pop
mov
pop
jno
push
loope
mov
shlb
testb
shrl
cmpsl
orl
imul
or
mov
sub
dec
in
iret
mov
xchg
sbb
fidivrs
xor
jnp
pop
hlt
cmp
jg
dec
mov
ljmp
mov
cmp
push
aam
dec
icebp
cltd
mov
xchg
dec
pop
stc
dec
dec
add
sub
cld
fsubl
push
sub
test
or
inc
jbe
cmp
inc
es
data16
or
add
lret
sarb
ljmp
sub
mov
mov
add
push
outsb
aas
xchg
add
idivb
lods
into
test
pop
out
xchg
xchg
push
loop
xor
test
add
lret
sbb
fcoms
mov
jb
mov
mov
mov
test
mov
xor
pop
in
std
jne
jp
jb
pop
aam
mov
push
popf
jne
insl
xor
test
sahf
psubsw
push
pop
or
test
leave
out
rol
jns
xor
and
gs
cmpsb
jle
sbb
lock
mov
je
mov
add
cmp
mov
pop
pusha
and
or
push
ja
dec
jnp
lahf
sbb
inc
test
gs
and
popa
cs
xadd
jns
fwait
dec
sahf
and
repnz
arpl
out
pop
movsb
push
cmpsb
test
test
dec
dec
xchg
inc
pop
imul
add
cwtl
or
jno
std
push
cmpsb
sub
mov
dec
and
test
cli
inc
scas
inc
push
test
lcall
imul
loope
pop
jns
adc
cwtl
dec
jmp
dec
stos
sbb
jecxz
int3
mov
inc
aam
leave
dec
xor
test
test
popa
stos
adc
adc
loopne
mov
test
lret
push
pop
pop
push
add
movsb
scas
mov
fiaddl
inc
aas
jno
inc
cmpsl
arpl
fcoms
inc
stc
fdiv
inc
movsl
sbb
push
mov
mov
gs
or
mov
lahf
add
jno
pmulhw
fildl
xchg
test
daa
sbb
xor
imul
mov
mov
out
ffreep
int
mov
push
pop
imul
mov
jge
pop
test
pop
mov
fidivrs
mov
sub
cmp
icebp
stc
mov
mov
pop
sub
jno
xchg
cmp
pop
jg
scas
xor
and
mov
cmp
in
leave
test
jl
pop
sbb
lods
mov
xor
sub
mov
push
xor
sub
in
xchg
or
ret
lods
and
xchg
adc
cltd
jno
test
push
jge
xor
mov
jp
flds
shrd
xor
pusha
popf
gs
call
test
adc
aas
dec
in
jmp
jge
and
pop
cld
fnsave
pop
orl
pop
daa
orl
push
rcll
sbb
sbb
rcll
fisttps
push
nop
scas
out
jecxz
subb
je
jle
add
jne
cmp
test
cltd
scas
loope
arpl
jmp
ret
inc
test
xchg
fwait
jb
rol
test
pop
mov
std
push
push
jne
adc
mov
inc
stos
push
jge
push
dec
xchg
inc
adc
or
mov
sbb
aam
fists
jne
aam
xor
mov
lret
dec
and
push
cmpsb
leave
push
aad
xor
adc
inc
jmp
mov
aam
imull
rcrb
sbb
mov
pop
mov
jl
and
sub
mov
rcrl
adc
popa
adc
pop
xor
push
imul
icebp
sub
aas
sbb
sbb
outsl
sub
outsl
fildl
mov
fdivs
sub
and
inc
mov
fdivl
repnz
ret
push
dec
pop
jle
xchg
mov
ret
inc
inc
test
and
inc
movsl
adc
add
cmpsb
andl
repnz
subl
ret
leave
popf
test
jno
jp
or
in
out
jmp
fcompl
or
icebp
aas
repz
test
or
imul
aad
enter
test
push
mov
rcll
sbb
cli
test
push
dec
mov
icebp
xor
inc
dec
icebp
push
pop
addl
pop
or
inc
shr
sub
ret
mov
dec
lret
movsb
mov
lahf
pop
sahf
popa
insl
push
push
inc
loopne
push
jae
jle
mov
pop
push
aam
pop
unpckhps
insl
cwtl
mov
adc
call
scas
sbb
jle
and
push
mov
int
sar
mov
adc
pop
xchg
and
test
pop
mov
dec
and
inc
sub
out
arpl
punpckhbw
and
movntq
out
hlt
sbb
stos
add
in
cmp
in
mov
cmp
inc
jl
sub
stos
insb
aam
clc
add
stc
xchg
mov
add
and
or
mov
pop
pop
fisubrs
fs
jmp
pop
pop
rorb
int
sbb
lret
jno
sub
xchg
mov
fildll
test
push
mov
mov
xor
std
inc
cmp
repz
pop
dec
or
mov
xlat
push
add
mov
dec
arpl
dec
sub
mov
addl
mov
aaa
hlt
add
xor
add
cmc
adc
shll
mov
push
rol
jg
adc
add
and
mov
mov
iret
test
and
ja
pop
xchg
lock
gs
stos
in
inc
test
and
cld
punpckhbw
sbb
pop
loope
xchg
cwtl
push
divl
into
hlt
std
idivl
jbe
dec
mov
xchg
cmc
cmp
jg
jno
add
imul
lods
repz
or
adc
jle
jecxz
mov
or
test
xchg
dec
jg
dec
xchg
dec
leave
int
jnp
xor
add
int3
inc
jg
push
lret
sbb
add
adc
es
mov
dec
pop
add
push
pop
cli
jb
gs
outsb
mov
pop
sub
inc
adc
das
mov
repnz
cmp
insb
imul
xchg
cmp
sti
or
in
add
sbb
cmc
test
ljmp
cmpsb
mov
sub
enter
insl
push
dec
leave
int3
ret
mov
sarl
adc
jb
out
test
cmp
mov
cs
pushl
loope
fs
push
or
es
outsb
shll
mov
sarl
add
mov
push
pop
sub
stos
enter
cwtl
mov
ret
xor
and
imul
dec
sbb
and
int3
mov
jmp
sti
push
lock
lea
fstps
out
jne
push
lret
paddusb
mov
inc
mov
inc
adc
insl
mov
insb
pop
or
stos
sbb
add
or
inc
pop
sbb
lret
outsb
cmpsb
in
pop
call
jb
out
movl
out
mov
add
subl
out
test
pop
sub
xchg
jnp
popa
push
push
jp
add
mov
ficoms
xchg
sbb
dec
mov
xlat
sub
and
and
mov
outsl
jp
jmp
popa
loope
lods
jge
cmp
sbb
or
mov
or
inc
inc
icebp
rcpps
jae
sub
scas
lods
add
dec
pop
jle
mov
sbb
pop
sub
mov
sbb
jne
stc
cld
cltd
bts
jle
cmp
inc
or
pop
adc
jp
add
mov
xchg
aam
fnstsw
mov
inc
js
sbb
pop
or
inc
adc
jnp
lods
mov
mov
sub
lret
add
and
rorl
dec
in
mov
stc
notb
jbe
mov
pop
adc
sbb
pop
cmpsl
xorl
push
push
stos
mov
pop
movsl
and
cs
add
xlat
fnsave
pop
sub
sub
test
push
xorb
and
movsb
jmp
adc
aad
mov
and
adc
xchg
xchg
out
nop
or
fs
shrb
ds
sti
add
imul
mov
loop
mov
ds
divb
jae
ds
mov
inc
add
dec
fstpt
outsb
test
sub
scas
and
mov
cltd
push
pop
movsl
push
repz
push
push
daa
and
xchg
pop
push
rorl
jmp
fldl
xchg
in
les
xor
filds
push
pop
or
call
xor
test
add
mov
sbb
xorb
jns
sbb
sub
cmc
pushf
cmp
adc
imul
dec
xchg
inc
or
dec
aam
test
pop
cmpsb
sti
nop
mov
les
test
enter
cltd
daa
mov
cmpsb
lahf
arpl
sub
push
clc
inc
ret
or
fistpl
xor
add
adc
stc
xchg
test
popf
pop
adc
in
xadd
push
mov
mov
in
pop
jns
test
daa
xchg
push
adc
dec
call
rdpmc
ret
jnp
mov
mov
pop
fs
data16
push
and
call
aaa
movsl
inc
in
jne
xchg
movsb
xor
jne
sar
mov
fiadds
add
nop
pop
cmp
xchg
dec
add
mov
add
mov
sbb
and
shl
fcoml
aas
cmc
mov
mov
push
and
and
xchg
loope
sbb
pop
test
pop
fxch
sub
and
push
jne
popa
xor
out
inc
inc
push
movsb
or
jmp
loopne
std
push
jae
or
mov
sub
push
add
fbstp
shrb
mov
xor
call
jecxz
add
outsb
js
ss
cld
pop
mov
jo
shlb
int
sub
cld
adc
outsl
rcll
cmpsl
xchg
mov
rorl
jp
stos
adc
test
pushf
les
pop
daa
imul
mov
cmp
call
cli
cmc
je
sbb
mov
test
sub
and
sub
push
push
imul
dec
jae
push
sbb
inc
scas
sub
xchg
sbb
je
insb
xor
xor
push
jmp
xlat
mov
ljmp
insb
int3
inc
and
pop
ret
enter
ds
faddl
cmpsw
inc
push
cmpsb
jne
push
leave
pop
movaps
adc
enter
nop
iret
int
dec
into
ret
jecxz
mov
xchg
clc
out
js
jne
test
push
mov
fstps
ljmp
sbb
and
arpl
lcall
or
add
mov
mov
pop
jp
mulb
je
outsl
sbb
inc
jae
movsb
ret
in
movsl
loopne
dec
int
shll
xlat
add
add
sbbl
ds
test
cmp
inc
or
xlat
cmp
adc
test
xchg
loope
jne
sub
dec
subb
popf
test
or
pushf
dec
ja
and
repz
sbb
jp
sub
hlt
repnz
xchg
cmp
or
and
lods
or
adc
or
jl
mov
popa
les
pop
ss
xchg
pop
loopne
push
repz
lock
sub
lock
dec
imul
xor
jle
add
add
lea
jge
xor
jno
movsl
jp
es
mov
inc
loopne
lds
shll
movsb
ja
fldt
fcmovnu
int3
add
sbb
clc
in
aad
enter
xor
add
mov
out
mov
es
out
pop
adc
xor
cmc
fldt
sarl
adc
xchg
das
mov
inc
jno
xchg
dec
push
jge
mov
ret
jmp
cmp
out
je
movsl
inc
in
push
and
sub
push
xor
test
rol
rcr
jne
int
jg
nop
dec
fwait
adc
or
sub
push
pop
cli
je
pusha
out
push
cmpsl
mov
arpl
dec
fildll
fcmovbe
and
add
test
pop
stos
inc
sahf
fs
stos
xchg
out
rcr
rorl
sbb
sti
icebp
cmc
sub
leave
fmul
mov
xor
push
movl
sbb
mov
into
int3
sub
inc
aad
leave
inc
cmp
shrl
cwtl
ds
orb
cmp
lcall
and
je
jno
arpl
jle
loope
mov
xor
test
repnz
add
sbb
divl
test
and
mov
mulps
add
shrl
fisubs
stos
pop
and
sbb
mov
lods
inc
stos
pop
testb
dec
gs
jmp
insb
fwait
enter
add
cmpb
mov
jp
pop
shrl
xlat
jae
jns
sub
es
ret
inc
test
mov
mov
scas
xchg
dec
sub
mov
jg
lcall
mov
dec
addr16
scas
pop
sbb
or
out
rcl
test
jae
add
mov
inc
gs
fs
pushf
sbbl
filds
lods
and
out
test
push
test
sub
test
xor
inc
xchg
pop
fs
in
push
add
je
test
mov
sbb
lahf
std
dec
mov
nop
sub
lods
jno
test
sbb
jbe
int3
aam
jnp
dec
jg
jae
and
push
test
popf
inc
and
loop
lcall
or
ret
jo
cmc
pushf
aam
pop
jnp
xchg
leave
jbe
movsb
xor
xor
movsl
push
and
pop
ljmp
lret
jg
xchg
test
stos
les
or
or
xorl
scas
icebp
jecxz
test
push
mov
shl
inc
shld
clc
cld
jecxz
inc
fcoms
mov
sub
sub
jle
lods
imul
pop
mov
jns
cmp
fs
test
sub
add
mov
pusha
push
pop
pop
aam
cmp
mov
test
xor
jp
icebp
or
lds
aas
push
inc
jg
mov
or
in
imul
fucomp
jg
outsb
sahf
shrl
cli
adc
popf
out
in
adc
js
cmpsb
pushf
je
lds
sub
jns
lret
es
xchg
xor
dec
je
pop
enter
scas
push
daa
inc
fst
push
inc
xchg
adc
shrb
cltd
mov
ret
push
imul
mov
jle
loope
inc
inc
adc
jp
or
or
xchg
mov
mov
enter
xor
cmpb
adcl
stos
mov
ja
inc
das
insl
sub
dec
mov
mov
test
es
and
leave
or
pop
mov
add
lahf
sbb
out
roll
in
pop
clc
in
sarl
test
mov
lcall
out
sahf
sbb
mov
jecxz
mov
test
pop
jno
data16
cmpsl
popa
mov
pop
sbb
inc
pop
adc
mov
add
pop
cmp
jmp
pusha
stos
shrl
xor
pop
xchg
xor
hlt
int
popf
jns
stc
out
add
leave
mov
test
icebp
mov
bound
push
pop
and
xor
add
subl
lods
inc
lret
lock
and
in
ret
sbb
repz
pop
mov
mov
jmp
aam
clc
jp
push
insb
inc
add
icebp
or
int3
adc
inc
cmp
jns
add
xor
jecxz
add
add
jp
lret
hlt
lret
xchg
mov
aam
mov
xor
xchg
lahf
shl
sbb
mov
xor
rcr
out
pop
jl
and
pop
repz
test
or
and
and
scas
xchg
push
orl
dec
push
xchg
in
mov
jle
inc
pop
pop
mov
or
in
lret
push
outsl
or
je
mov
sahf
fistl
adc
ds
push
fisubs
jnp
adc
andb
push
xor
rorb
stc
add
gs
add
cmp
jl
push
push
mov
push
add
mov
int
pop
mov
pop
in
mov
mov
or
mov
xor
xor
xchg
sbb
sbb
mov
mov
mov
ja
cltd
fsubl
jle
jl
nop
mov
sbb
lret
xchg
adc
lds
mov
mov
ljmp
insb
jbe
enter
cwtl
xlat
insb
xor
jns
stos
testl
xchg
inc
cmc
adc
push
mov
insl
fmuls
movsb
xchg
enter
stos
sbb
add
jmp
fldt
test
jmp
mov
call
jns
test
pop
xchg
loope
jne
mov
mov
ljmp
scas
lea
adc
stos
es
fsubrl
movsb
push
scas
xchg
jne
scas
push
dec
xchg
xchg
cmp
icebp
adc
push
mov
and
adc
icebp
mov
mov
mov
dec
cmp
sti
push
or
add
pop
ss
and
leave
into
out
test
pop
mov
and
mov
lret
inc
dec
xchg
jbe
test
dec
btr
jb
adc
xchg
dec
lret
push
test
adc
into
push
enter
pushl
push
outsb
syscall
test
xor
jns
xchg
xchg
inc
xor
fsubp
test
xchg
push
sub
inc
mov
jecxz
int3
out
and
rorb
mov
ret
push
inc
push
das
repz
in
pop
add
arpl
mov
sarb
sub
jne
aaa
cwtl
in
test
cld
out
sbb
xor
mov
mov
sbb
lret
sub
push
ret
dec
mov
mov
test
fdivs
add
mov
sub
movsb
pop
adc
sbb
sbb
insb
enter
rcrl
and
xchg
hlt
jae
test
pop
fisttps
fstpl
fcoml
orl
push
pop
pop
mov
fadds
inc
push
mov
sti
aad
dec
aas
lret
rclb
loope
cmp
sbb
push
inc
mov
and
push
cmp
rcrl
jmp
or
jno
es
out
xchg
mov
mov
call
sub
cmpsl
stos
std
sbb
shlb
pushf
dec
insl
cmp
cmpl
xchg
mov
and
inc
fnstenv
cmc
int3
scas
push
nop
es
xor
test
mov
push
rorl
test
or
testb
jmp
add
into
stc
inc
sti
or
jle
lcall
lock
imul
xor
int3
sbb
or
cmp
lahf
addl
sbb
sub
inc
inc
sub
fsubr
cmp
cld
lea
fs
push
sbb
dec
push
cs
jne
cli
sbbb
inc
jb
cwtl
xchg
clc
loopne
sub
jl
jp
popf
push
dec
and
mov
repz
enter
mov
ficoms
aas
xchg
push
movsb
ret
cmc
das
mov
incl
and
push
push
and
data16
xor
in
sbb
or
or
cmc
int3
jl
fisttps
xchg
insb
and
mov
test
cld
subw
cmpsl
xor
mov
clc
or
adc
jae
test
mov
and
aam
mov
cmc
daa
adc
ret
xchg
dec
adc
outsb
xor
sti
mov
push
pop
xchg
mov
hlt
hlt
fisttpll
mov
rorl
ja
lds
sbb
cli
ss
js
enter
test
js
sbb
js
lret
push
push
and
sbb
jp
dec
leave
dec
jle
inc
jo
fstpt
sub
jb
repnz
cs
out
imul
push
push
sbb
into
cwtl
in
pop
cmp
fstpt
scas
cld
aas
cs
push
sbb
test
or
xchg
push
imul
sub
jno
mov
inc
test
push
mov
loope
mov
inc
cmp
cmp
lds
or
lock
cmp
dec
pop
lcall
aas
cmpsb
enter
xchg
mov
pop
xor
xchg
push
adc
cwtl
and
mov
subl
dec
xchg
adc
inc
push
sbb
sbb
sub
les
ret
repz
mov
jnp
cmp
xor
cmpsl
xchg
clc
in
cmp
add
xchg
add
loop
leave
mov
jbe
cmp
jo
xchg
lret
jl
loope
outsl
leave
pop
cmp
daa
mov
icebp
inc
mov
jnp
xor
cmp
mov
or
pop
xor
daa
push
in
enter
inc
or
outsb
pop
mov
jg
mov
and
mov
fwait
and
vmwrite
inc
sahf
inc
mov
test
js
int3
jl
adc
pop
ret
stos
adc
imul
aam
pop
sub
xlat
push
insb
arpl
pusha
pop
ja
jecxz
sbb
sub
mov
int
fisubl
sbb
or
jnp
daa
mov
push
dec
push
clc
jge
jne
pop
jnp
cmp
test
inc
daa
pop
test
adc
cli
outsb
sbb
fdivrs
mov
lcall
fildll
dec
jge
xchg
je
sti
mov
pop
xlat
out
mov
leave
sub
popa
push
test
and
mov
and
in
mov
jp
insb
sbb
fldcw
or
or
mov
inc
cmp
push
cmc
sub
sub
ds
jg
test
adc
sub
outsl
inc
outsb
dec
push
out
outsl
icebp
or
inc
add
icebp
mov
test
in
stos
dec
in
jns
enter
hlt
aam
mov
jne
in
mov
jp
loope
pop
xchg
inc
ficomps
xor
or
dec
js
sti
sbb
adc
scas
test
pushf
mov
ljmp
aaa
test
jmp
mov
bound
mov
cmp
dec
dec
insl
xor
mov
xchg
adc
dec
push
push
test
jg
mov
pop
ds
xchg
lret
roll
test
mov
jno
orb
cmp
cmp
push
jp
push
push
movsl
push
stc
into
enter
mov
cmp
leave
lods
rorl
jecxz
jle
clc
and
movsl
ret
test
lret
xchg
add
mov
dec
xor
test
test
jae
sbb
insb
mov
sub
lret
and
test
sbb
mov
mov
xchg
lods
mov
jnp
sub
shll
test
mov
cs
xchg
cmpsl
xchg
dec
test
inc
outsl
pop
jmp
push
arpl
mov
mov
lock
adc
sbb
test
cwtl
xor
sbb
jns
pop
lea
stc
out
pop
inc
jmp
and
jnp
or
aad
rcrl
mov
in
dec
ret
lret
into
sbb
movsl
mov
dec
js
loopne
icebp
xor
lods
cli
test
hlt
jp
repz
jle
lds
je
sti
inc
jne
jle
daa
or
test
rcr
mov
test
dec
cld
push
imul
dec
sub
cltd
sarl
pushf
shr
mov
mov
sbbb
outsb
cmp
dec
test
xchg
icebp
add
xor
fldcw
cmp
stos
into
inc
pop
ss
add
or
in
addl
pop
inc
cli
xor
xor
enter
mov
test
jecxz
sub
inc
jp
in
int
daa
inc
adc
test
pushf
ds
sbb
insl
cltd
jo
pop
mov
dec
and
inc
adc
and
fcmove
ds
push
sarl
or
iret
jge
jge
xor
ror
rcr
pop
mov
inc
bound
mov
xchg
fldl
or
xchg
mov
mov
mov
lds
add
inc
cs
push
push
sbb
mov
xor
push
push
jb
ffree
test
ljmp
inc
jo
mov
pop
insl
cmp
ret
pusha
or
cmp
push
pop
cmp
call
pusha
add
imul
test
call
pop
test
scas
fs
sub
out
pop
sti
push
rol
nop
imul
dec
xchg
imul
cmp
xor
hlt
cmp
dec
and
clc
mov
cmpsl
and
jg
pop
lock
test
cs
data16
xor
jae
cwtl
insl
aaa
mov
sub
mov
sbb
push
insl
nop
add
fstpl
nop
push
pop
in
stos
mov
loop
popf
inc
jg
sbb
imul
mov
aas
setae
xor
mov
mov
lods
or
test
lds
in
test
push
xlat
sub
lds
out
fsubrl
sub
inc
popa
mov
dec
fwait
or
adc
daa
imul
jp
in
je
inc
repz
loope
jo
mov
dec
insb
cmp
sarb
mov
pushf
outsl
lds
outsl
lock
jle
inc
les
jl
roll
popw
or
outsl
shrb
push
dec
push
mov
scas
loope
loope
pop
inc
hlt
icebp
xor
mov
sub
mov
stos
inc
repz
jne
jle
lock
xchg
sbb
mov
add
and
lods
jne
stos
adc
xchg
stos
call
insb
sbb
jg
cltd
mov
inc
movsl
rclb
push
sti
in
es
repz
cmp
cmp
test
or
out
into
daa
adc
adc
push
ljmp
or
cmp
std
push
xorl
pop
je
js
add
gs
cli
inc
sbb
dec
dec
std
push
or
xor
outsb
inc
mov
xor
pop
sub
mov
dec
adc
push
sbb
scas
xor
lret
icebp
das
cmc
cltd
lds
jge
and
sub
mov
fstpt
pmaddwd
fcmovnb
cmp
mov
jp
or
fnstenv
add
jae
clc
dec
popf
push
sti
pop
in
xchg
pop
mov
imul
jno
mov
fildll
dec
pop
or
xor
lea
mov
jnp
xchg
out
dec
outsl
loop
pop
mov
jmp
pop
mov
sbb
push
push
add
aas
xor
mov
imul
shlb
lret
imul
add
imul
mov
leave
push
adc
test
mov
notb
aas
test
into
xor
inc
add
rcll
and
out
shrl
push
add
pop
ss
jmp
jne
es
adc
sbb
jmp
test
ret
clc
je
push
mov
in
aam
cld
push
push
mov
xor
inc
stc
cs
repz
or
sub
cmp
adc
mov
js
sbb
repnz
pop
pop
add
leave
pop
jbe
adc
mov
xorl
ja
and
sub
jo
std
add
movsb
cmp
inc
shl
lea
sbb
je,pt
push
enter
cmc
add
inc
je
sub
in
loope
mov
call
ja
or
push
jecxz
fldl
pop
aas
xrelease
int3
lret
mov
in
push
daa
cs
mov
fnstsw
mov
pop
cmc
popa
lcall
cltd
pop
mov
xor
lret
test
leave
dec
cmp
or
or
jne,pn
fdivrl
notl
in
mov
repnz
cmp
shrl
int3
add
mov
ret
stc
jns
dec
pop
fistpl
jl
sub
shll
leave
sub
mov
cli
pushf
hlt
ret
stos
fadd
icebp
outsl
in
pop
test
mov
push
imul
pop
popf
jo
pusha
mov
sub
in
xchg
fcmovb
inc
inc
int3
xchg
or
pop
mov
push
fsubr
dec
xchg
xor
jns
pop
xchg
in
rcrl
mov
fwait
dec
ljmp
sbb
iret
xchg
les
pop
pusha
std
dec
loope
push
sti
xor
repnz
xor
in
jb
fwait
inc
adc
inc
imul
sbb
sbb
pop
pop
lret
push
mov
or
jo
pop
jne
or
js
or
fistpl
sub
scas
aad
push
hlt
push
mov
jmp
mov
mov
add
or
dec
sbb
push
cmp
adc
mov
jge
and
xor
sbb
cmp
test
adc
add
inc
lock
es
inc
test
cmc
sub
mov
fyl2xp1
pop
mov
or
pop
mov
adc
add
js
cmp
movsl
jg
pop
aam
mov
loop
add
pop
aad
insb
fldcw
fcmovnbe
sbb
inc
add
es
adc
sbb
inc
push
adc
loopne
mov
mov
stos
sbb
dec
filds
mov
arpl
js
sti
xchg
repnz
ljmp
jnp
pushf
jne
shl
dec
stos
out
nop
xchg
dec
mov
daa
inc
pop
movsb
and
mov
mov
mov
outsb
insl
add
cmp
add
scas
call
addr16
sub
dec
or
mov
flds
stos
test
lods
adc
pop
mov
xchg
jle
adc
add
dec
test
addr16
xchg
xchg
mov
push
inc
push
ret
add
psubsw
shrl
xor
lods
lret
aam
and
movsl
out
or
sub
scas
cmp
pop
add
adc
pop
jle
add
jnp
or
fdivrl
ss
popa
mov
sbb
mov
jl
stos
testl
pop
pop
sub
imul
add
rorl
pop
jns
mov
inc
jbe
push
dec
jmp
enter
fistl
inc
insb
jno
jne
pop
jns,pt
cmpsb
sbb
test
call
push
mov
out
mov
sbb
cmp
mov
jmp
std
or
mov
add
dec
pop
xchg
push
es
shlb
jmp
cmpsl
inc
inc
jp
and
fstl
enter
jno
and
pop
rorb
add
nop
repz
icebp
pop
xchg
es
enter
dec
mov
or
shlb
idiv
mov
in
shll
rcl
and
pop
nop
sub
sub
push
jb
idivl
test
jns
inc
sub
push
scas
lds
pop
outsl
ror
mov
pop
xchg
cmp
xchg
mov
daa
shr
or
mov
les
movsb
call
clc
sbb
imul
bound
das
xor
adc
add
push
jg
mov
jp
cmp
ret
jmp
pop
jo
imul
jge
out
xchg
lock
aas
test
or
popa
nop
push
addr16
fstpl
xor
mov
jle
sub
lret
imul
inc
int3
sub
nop
sbb
je
inc
les
imul
inc
inc
mov
insb
jno
inc
cmp
divl
jno
icebp
sub
mov
add
or
lods
out
mov
ja
repnz
xchg
mov
cmp
rcrl
pop
into
fists
mov
inc
pop
mov
ja
xchg
mov
fs
jns
in
bound
stos
fcomps
sti
inc
clc
dec
jp
data16
jmp
dec
xchg
ljmp
insl
pop
xor
sarb
jge
movsl
adc
pop
js
mov
and
xorl
cmp
fstps
xor
mov
jecxz
roll
jp
or
push
sbb
test
movsl
jmp
aam
mov
push
jb
jno
jne
bound
xchg
outsl
push
mov
test
push
test
mov
daa
cmpsb
xor
mov
push
mov
imul
test
leave
mov
popf
push
test
int3
mov
jne
push
in
xchg
into
mov
dec
jp
jmp
inc
stos
cmpl
jl
jnp
jge
ds
popa
jg
fcoml
lds
jae
es
pop
xchg
inc
sub
fcoml
jmp
mov
and
aad
shrl
jp
jmp
jmp
lret
jo
inc
push
xor
adcb
out
jmp
sub
js
fcompl
cwtl
dec
fwait
cmc
lock
inc
in
lock
dec
ja
cli
test
cs
xlat
idivb
xor
or
andl
mov
push
shll
in
push
add
out
jmp
es
pop
fnstsw
test
adc
inc
inc
mov
pop
mov
and
mov
fldcw
xor
mov
pop
mov
push
jnp
lret
mov
pop
imul
or
mov
dec
sub
xchg
ja
add
inc
lods
inc
inc
repz
jl
fisubl
popa
cmpsb
cmp
pop
jle
loopne
out
pop
sub
or
cmp
cmp
cmp
pop
stos
pop
add
mov
cmp
cltd
xor
cltd
out
movsl
aaa
inc
nop
cmp
push
mov
sbb
fimull
push
dec
mov
hlt
or
xchg
test
movsl
add
xor
mov
push
mov
cmp
sbb
mov
loop
mov
push
scas
rcll
xchg
inc
push
stos
test
in
or
cmp
jno
out
xor
aaa
inc
jbe
mov
lret
stc
pop
mov
lret
mov
fmul
and
lret
xchg
lds
sub
dec
call
dec
jle
inc
fcmovb
outsl
cmp
mov
add
add
mov
add
dec
cmc
ljmp
pop
scas
push
inc
ret
mov
mov
and
sub
out
movsb
adc
fwait
cmp
inc
mov
xchg
sbb
sahf
mov
inc
insb
outsl
xchg
xchg
mov
pop
add
cmc
dec
xor
enter
mov
mov
loopne
and
bound
shld
pop
push
loope
rcrb
adc
add
insl
jae
loope
mov
sub
dec
cmpsl
adcb
xor
jp
fsubrs
lods
into
test
sbb
inc
or
add
xchg
ja
sub
sbb
popa
lods
push
lret
mov
fmuls
popa
xchg
test
inc
sbb
inc
enter
cs
mov
mov
sbb
mov
add
cwtl
jae
sbb
mov
jecxz
test
mov
in
js
dec
jae
mov
popa
lret
mov
jno
xchg
rcll
mov
xchg
sub
inc
dec
in
push
sbb
inc
movsl
les
mov
cmp
pop
mov
mov
les
add
negl
sahf
addb
or
movsl
pusha
adc
jns
xchg
add
mov
inc
inc
mov
adc
jl
fwait
xor
test
movsl
stc
and
jmp
test
in
jecxz
mov
lea
inc
or
aam
data16
cmp
stos
xor
jae
inc
xor
mov
int3
clc
pop
push
lret
mov
rcrl
adc
or
insb
mov
sub
push
dec
inc
dec
bound
push
pop
push
or
and
inc
xor
fdivl
je
mov
test
or
mov
andb
mov
cmpb
pop
cmp
jp
xor
sbb
in
push
xchg
mov
popa
cmpsl
add
jge
push
ja
inc
mov
cli
mov
dec
dec
es
jle
lret
pop
jl
movb
jp
lcall
ret
arpl
push
jbe,pt
xor
divl
sub
xor
adc
in
aas
adc
sub
pinsrw
loope
jo
sti
mov
xchg
rolb
and
jl
imul
cli
roll
test
scas
movsl
int3
test
aam
in
inc
outsl
adc
test
jp
push
inc
bswap
push
push
pop
cmp
es
movsl
shlb
fcomip
loope
test
aad
mov
cmc
in
jle
sti
sti
jge
and
xor
call
shll
fldt
pop
sub
sbb
rep
adc
aas
cmpsb
repnz
or
cmp
rol
sub
xchg
adc
dec
or
add
sbb
pop
add
mov
fisttpll
jle
aam
and
lds
pusha
xchg
cmp
inc
jl
jmp
nop
mov
jmp
inc
adc
shrb
inc
sbb
scas
mov
mov
sub
aaa
imul
ja
outsb
adc
mov
mov
push
movsb
ljmp
jno
test
adc
adc
mov
lds
xlat
adc
clc
mov
rcrl
cmc
jmp
add
sub
inc
in
clc
popf
pushf
imulb
adc
pop
inc
dec
or
xchg
sbb
loopne
lds
pusha
jg
xor
lods
lods
pop
xor
daa
mov
jb
mov
clc
fstp
negl
or
lcall
pushf
adc
enter
and
inc
js
aam
dec
dec
add
dec
aad
imul
jnp
and
jle
cmpsb
xchg
std
ds
ss
mov
jl
xor
outsl
hlt
jmp
gs
daa
sahf
pop
jns
test
leave
dec
mov
ret
xchg
adc
sub
sub
lock
dec
or
push
inc
fwait
sahf
mov
sbb
clc
jg
dec
inc
jb
fisubrl
cmp
data16
lea
and
rorl
out
testb
or
mov
mov
mov
shl
push
xchg
jecxz
shll
dec
sub
ss
lock
jmp
shl
std
sbb
loopne
stc
cs
in
xor
xor
cmp
and
sub
testb
mov
jl
hlt
insb
jnp
sbb
or
insl
rorb
test
push
dec
sub
push
out
fistpl
test
xor
inc
xlat
in
adc
dec
ljmp
into
filds
jl
adc
sahf
mov
loop
xor
test
push
popf
pop
mov
cs
jecxz
adc
or
adc
andl
scas
push
and
jg
jae
stos
cltd
mov
fldcw
jl
pop
xchg
leave
mov
data16
pop
fucomip
roll
mov
jp
mov
push
push
pushf
rorl
jl
ds
ficoml
pop
addl
sub
mov
das
imul
cmpsl
test
jp
sbb
test
xor
inc
idivl
xor
jecxz
loopne
aas
xor
xchg
sub
inc
in
jl
mov
push
xor
sub
scas
dec
int
mov
mov
xor
sahf
mov
mov
nop
movsb
jle
out
mov
inc
xchg
test
insl
in
test
push
pop
sti
xor
in
in
cmp
fs
xor
les
xchg
mov
jb
mov
dec
fcomps
cmp
repnz
cmp
cmc
dec
movsb
call
sub
mov
lods
shll
fs
adc
mov
mov
mov
jp
xchg
repnz
imul
cmp
mov
jp
imul
sub
inc
pop
cs
test
dec
int
adc
in
je
xor
cmc
jae
test
pop
cmp
test
adc
mov
xchg
mov
add
rcll
pop
imul
mov
jle
sub
or
fidivrl
ret
pop
push
fsubrl
clc
or
adc
lock
adc
push
add
test
loopne
daa
mov
insl
out
and
daa
icebp
mov
inc
pop
ret
scas
sarb
push
sub
stc
cmp
rcll
std
pop
mov
xchg
aam
int
add
dec
mov
xor
jnp
call
aam
daa
sbb
int
test
push
out
idivl
test
jnp
add
mov
movsb
and
jne
jl
daa
out
aam
or
fs
xor
out
mov
add
add
and
int3
fnstenv
mov
add
insl
adc
fimuls
cli
mov
push
cmp
sbb
pop
mov
jnp
dec
cmc
jg
repz
cmp
mov
call
pusha
pop
in
in
xchg
mov
mov
mov
sub
dec
adc
pop
ja
popa
insl
out
rcr
mov
ja,pt
jae
test
outsl
push
insl
add
ss
fcomps
xchg
fsubrs
jmp
mov
ret
add
xor
mov
test
fwait
ja
add
out
fimuls
lret
sti
gs
call
jecxz
dec
sub
mov
mov
pop
xchg
movsb
adc
xchg
sbb
xchg
mov
cs
lds
mov
popf
mov
push
mov
cmp
test
push
inc
add
jle
mov
pop
push
sbb
sub
inc
test
or
and
add
jecxz
xor
in
test
mov
push
xchg
call
adc
inc
mov
outsb
jae
popf
repnz
inc
add
je
lea
test
hlt
cmp
ja
and
mov
ds
pop
test
test
add
mov
inc
or
outsl
inc
xor
loop
add
sub
pop
adc
cltd
dec
loope
mov
pop
je
outsb
addr16
int
int
roll
lods
cmp
pusha
add
stos
mov
mov
cmp
pop
mov
arpl
pop
fsubp
cmp
test
push
fstl
push
cmp
dec
les
cmp
int
dec
test
fwait
or
xlat
xor
and
dec
or
fimuls
mov
arpl
or
xchg
std
sbb
inc
jo
ret
dec
cmc
scas
inc
mov
mov
ret
sub
rorl
sub
and
mov
mov
in
push
rcrl
lea
stc
sub
add
in
jle
xchg
call
sub
push
shlb
cmp
out
mov
test
pushf
cmp
repz
adc
push
cwtl
xchg
adc
testb
ljmp
dec
jne
imul
pop
mov
int3
xor
xor
cmp
fs
dec
cmp
mov
and
inc
addr16
xor
sub
dec
adc
mov
push
test
int
sub
mov
dec
push
and
sbb
mov
hlt
dec
sub
mov
fsubrl
xor
lret
jbe
pop
dec
sbb
lret
adc
xlat
leave
jbe
into
sbb
dec
jmp
popl
xor
imul
xor
fsts
jg
xchg
sub
pop
js
cmpl
hlt
sbb
arpl
repz
mov
pop
jp
mov
inc
icebp
push
jle
mull
lock
cs
or
add
cmpsl
jb
jg
cmpsl
push
divl
jge
jl
jmp
add
dec
or
xor
pop
testb
mov
add
mov
test
push
pop
xor
or
cmpsb
test
sbb
sub
pop
daa
jo
or
in
mov
sbbl
hlt
xor
js
mov
xor
xchg
in
addr16
adc
lret
push
or
fwait
inc
imul
adc
adc
xor
inc
int
add
outsl
in
dec
std
sbb
mov
lods
shll
shll
inc
sbb
loopne
out
jns
lret
lock
mov
inc
xchg
cmp
push
out
into
mov
mov
mov
aaa
das
add
mov
pop
adc
lods
jmp
xor
loopne
xlat
add
push
cwtl
or
sti
mov
xchg
push
es
lods
dec
adcb
sub
ja
inc
fldcw
xor
test
lods
xchg
xorb
stos
lahf
inc
je
jno
sub
enter
rorl
dec
adc
int
add
mov
dec
jmp
pop
mov
or
push
jle
repnz
jno
cli
sahf
jl
outsl
push
sub
adc
sub
adc
sub
popa
icebp
ljmp
je
rorl
test
jp
inc
jae
das
cmpsl
mov
push
push
xlat
ss
xor
mov
test
mov
inc
and
push
mov
ds
in
sbb
mov
dec
sbb
bound
sub
addb
mov
orl
pop
or
sbb
dec
call
sbb
sub
and
in
rorl
lock
repz
movsl
adc
add
push
and
xor
add
mov
dec
loop
mov
icebp
sbb
aad
sahf
mov
test
insb
shll
add
push
jg
and
push
iret
sti
test
push
pop
cmpsb
rclb
mov
mov
mov
xchg
lock
mov
sbbl
lods
mov
jge
pushf
push
rcr
xchg
sbb
xor
pop
jns
shl
je
mov
cs
test
lret
mov
popf
fnstcw
testl
mov
icebp
sahf
nop
jb
jns
push
repz
testl
stos
ret
jecxz
ja
pop
aad
add
push
ret
sub
jo
test
leave
in
mov
movsb
shlb
xor
sbb
aaa
cmp
lret
dec
adc
or
pop
ja
mov
jl
jg
scas
rcl
sbb
push
lods
fnstenv
push
jge
sbb
cmp
aaa
pop
ret
sbb
mov
adc
fs
xor
xchg
add
das
pop
sbb
fcom
repnz
mov
add
jg
adc
cmpb
push
sbb
xor
push
sarl
ja
jge
cld
adc
fcomip
movsl
out
inc
xchg
sahf
jne
enter
pop
mov
mov
stos
mov
jp
pop
lock
loopne
cmp
popa
dec
out
in
in
test
and
dec
lea
sub
jle
add
mov
sub
sti
add
xchg
aas
xchg
arpl
stos
push
lret
mov
pop
adc
inc
jne
or
scas
aaa
jmp
push
mov
pushf
fbld
jg
fwait
jecxz
lds
or
pop
jg
mov
sbb
sub
adc
insl
mov
and
xchg
loope
repz
loop
jp
cld
lcall
lret
aam
sub
stc
sub
out
enter
aad
inc
dec
cmp
jle
int
mov
add
cmpsl
pop
aad
mov
push
mov
push
and
jae
pop
rcr
enter
fadds
bnd
xchg
icebp
push
jb
xchg
adc
lods
mov
dec
insb
xchg
cmp
or
mov
aad
cwtl
or
pop
mov
xchg
insl
test
in
aaa
xchg
adc
mov
push
mov
ds
jbe
sbb
ror
sahf
mov
xor
in
xadd
jmp
popf
cmp
jno
mov
xchg
and
imul
mov
add
mov
mov
xchg
fldcw
mov
dec
sarl
dec
clc
les
mov
or
popa
cmpsl
adc
addl
mov
sbb
jo
icebp
xchg
jl
inc
and
aam
loopne
push
cs
or
cmp
xor
xchg
fnstsw
std
ret
inc
dec
int
inc
xor
sahf
pushf
xchg
mov
add
dec
xchg
repnz
sub
sbb
addr16
dec
fsts
mov
mov
bound
cmp
sub
sbb
or
pop
xchg
add
add
fisubrs
into
movsb
and
and
shrb
jmp
mov
mov
in
mov
inc
pushf
adc
int
dec
ret
call
test
add
inc
sub
adc
enter
dec
adc
fadds
mov
push
imul
test
lods
pop
and
test
gs
adcb
inc
cs
sub
rcrl
int
adc
test
and
in
dec
add
add
add
out
or
stos
lds
cmp
xchg
add
dec
test
in
filds
out
cmp
popf
fst
test
push
pop
adc
les
hlt
jmp
cmp
dec
test
adc
pop
insb
ss
xchg
std
sti
mov
jno
scas
fisubrs
ficoml
shr
cli
addr16
jmp
inc
push
cmp
add
lods
lahf
test
jl
ljmp
lods
cmp
jne
lret
loop
mov
test
push
lret
inc
sbb
xor
aas
lret
shl
daa
nop
mov
iret
mov
pop
sub
sub
hlt
aam
scas
sbb
jg
test
or
lret
inc
pop
call
in
lahf
shl
mov
adc
gs
test
cltd
jnp
stc
add
lret
lds
enter
mov
jbe
in
cltd
sub
test
add
jo
leave
jns
dec
sti
xorl
nop
or
sbb
mov
pop
pop
decb
and
cmp
mov
cwtl
insb
mov
test
jge
inc
and
sbb
or
and
xchg
imul
add
gs
pop
jbe
mov
adc
std
sub
push
add
xor
mov
lods
aas
dec
cmpsl
xchg
sub
or
test
ljmp
push
dec
inc
mov
ljmp
movb
lea
or
xor
xor
js
lret
mov
jge
sbb
stos
repz
test
insl
cld
leave
pop
mov
fs
add
sub
mov
jns
sbb
leave
add
in
shlb
jnp
orb
popf
test
sahf
cmc
sbb
aas
aad
push
push
push
add
adc
je
xor
enter
shll
dec
fists
add
xchg
or
and
test
adc
popa
mov
cmp
test
adc
cmpsb
sar
enter
inc
mov
jg
or
outsl
inc
dec
test
bound
push
jge
mov
adc
add
nop
cli
jmp
insb
sub
out
loope
mov
adc
jbe
pusha
lret
xchg
xchg
xchg
mov
jnp
das
popf
test
mov
lahf
or
pop
into
mov
jb
jp
imul
leave
movsl
dec
lret
icebp
pop
cli
inc
ret
inc
leave
icebp
icebp
andl
sub
stos
mov
pop
dec
rol
adc
pop
and
adc
sbb
cmpsb
insb
test
sub
and
mov
push
test
repnz
sub
les
adc
ret
jle
inc
arpl
sbb
test
inc
push
out
or
jnp
rcrb
sbb
push
mov
test
inc
and
jmp
cmp
aad
jecxz
imul
mov
adc
jns
rorl
lea
add
push
imul
jg
in
add
lret
or
add
xchg
test
divl
mov
test
and
add
mov
dec
sub
and
mov
mov
add
jp
ja
sbb
ficoms
ss
mov
movsb
xor
adc
faddp
cmp
sbb
insl
xchg
mov
popf
pop
call
rclb
out
jp
roll
mov
adc
dec
mov
sub
out
adc
imul
cmp
jno
jno
jg
xor
mov
mov
sarb
movsl
test
pop
xorl
mov
test
popa
mov
or
or
pop
fldt
lcall
xchg
lcall
sarl
aad
fcmove
adc
inc
sub
pop
pop
xchg
mov
int
stc
or
pop
imul
mov
popf
pop
mov
push
pop
xchg
xchg
ret
std
dec
inc
ficompl
cmp
jle
aam
inc
cmp
xor
add
add
icebp
inc
pop
scas
mov
out
add
push
mov
aam
clc
or
sub
ja
cltd
hlt
cmp
add
cmp
fs
sbb
testb
loopne
dec
jbe
inc
rol
add
hlt
mov
out
push
add
adc
ss
cmp
loopne
call
add
iret
mov
xchg
andl
int
push
mov
pop
sbb
lea
and
std
push
popf
dec
stos
xchg
xor
scas
add
inc
nop
shlb
sbb
shrl
push
adc
mov
mov
push
jno
test
jl
xor
sbb
push
add
jo
fistpll
sbb
jb
add
mov
cld
fdivrs
jg
mov
inc
jne
insb
xor
cmpsb
test
les
repz
sub
adc
jg
xchg
inc
mov
xchg
jg
inc
mov
or
ficompl
or
ds
movb
adcb
andl
aaa
jo
fistpll
and
push
call
stos
rep
jnp
mov
pop
cmc
call
aam
ds
test
mov
cmp
popf
mov
mov
js,pn
push
repz
test
and
pop
lock
jp
mov
int
pop
jle
rorb
xchg
pop
and
adc
aaa
flds
jl
push
stos
pop
jmp
data16
stos
jmp
mov
inc
add
test
or
and
jae
inc
std
data16
lock
out
imul
pop
pop
add
add
mov
mov
enter
sahf
stc
or
rdpmc
sbb
stc
in
mov
jb
fsubrl
fsubp
jo
xor
jge
add
xlat
push
sbb
andl
incb
inc
or
push
xor
enter
addr16
sti
insb
and
cmp
fwait
enter
mov
scas
push
aas
sarl
gs
enter
sbb
dec
enter
mov
dec
or
pop
movsl
scas
inc
jns
push
mov
sub
add
jp
ljmp
dec
push
inc
int
fldt
push
scas
pop
and
mov
bound
adc
lods
xchg
adc
aad
inc
xchg
mov
mov
or
xchg
scas
scas
adc
cmc
out
es
int
adcb
mov
adc
popf
hlt
adc
mov
mov
hlt
insb
mov
lcall
xchg
lahf
cmc
jb
ret
in
sub
adc
outsb
and
fiaddl
leave
leave
xor
push
andl
cwtl
sub
and
dec
roll
mov
push
fcoms
call
fidivs
scas
jno
stos
mov
push
daa
test
sbb
mov
pop
dec
insb
add
cmp
xor
mov
jecxz
jno
in
sarl
ss
imull
adcb
jo
sub
popa
fmuls
pop
push
lods
sbb
xor
push
cmpsb
ja
aam
dec
popf
lea
inc
out
dec
push
jb
pmaxsw
cwtl
cmpsb
iret
rcll
add
dec
vpcomb
testl
inc
lea
mov
movsl
insl
dec
jno
dec
das
mov
mov
fwait
inc
outsl
repnz
sub
repnz
jecxz
gs
test
xchg
mov
xor
inc
pop
jns
push
gs
enter
adc
subl
mov
dec
cs
dec
cmp
jbe
mov
inc
sarl
and
pusha
pushf
lret
lea
sub
popa
mov
xor
loop
adc
sbb
pop
jb
adc
test
or
push
imul
ds
add
mov
xchg
call
in
xchg
mov
ss
or
pop
nop
enter
lcall
shll
mov
mov
out
push
mov
in
inc
hlt
add
rcll
pop
aam
lea
add
test
imul
data16
and
aas
enter
pop
cmpsb
ja
in
scas
mov
inc
and
arpl
sub
xchg
test
std
dec
and
dec
xchg
wbinvd
scas
cmp
in
lcall
and
push
add
data16
jmp
and
sbb
jns
jnp
add
mov
sub
inc
lds
mov
shr
popf
dec
adc
cs
xorb
test
pop
or
or
push
sbb
out
push
xchg
daa
cmpsb
cmp
leave
inc
adc
mov
pop
popf
mov
shrl
out
pop
xlat
lock
shrl
cmp
test
fs
xlat
ret
scas
das
mov
mov
xchg
test
push
enter
sbb
enter
ss
pop
testl
pusha
rcll
int
lock
lcall
and
repnz
loopne
pop
jl
stos
call
xor
sub
rcll
ficoms
test
xchg
jo
cmp
pop
mov
cmpsl
adc
test
jns
and
sarl
addr16
inc
mov
adc
pushf
in
jns
inc
push
push
movsb
mov
cmp
scas
rorl
pushf
mov
inc
push
leave
lahf
dec
stos
ret
aad
test
test
xchg
daa
add
mov
or
ss
mov
popa
mov
sbb
scas
sbb
push
icebp
adcb
in
sbb
rcrl
out
mov
nop
cli
mov
scas
adc
mov
pop
pop
leave
inc
xor
ret
ficompl
in
pushf
lds
mov
jnp
shl
xor
mov
inc
adc
sub
jne
stos
scas
mov
mov
std
adc
lods
lods
arpl
xor
add
mov
sub
inc
cs
xlat
mov
inc
test
dec
stos
lea
pop
fs
shrl
lods
daa
push
ret
xchg
sbb
jo
dec
ljmp
stos
mov
xchg
ret
jle
jmp
add
scas
inc
mov
xor
xor
jb
and
in
movsb
mov
sbb
jno
repz
lret
ret
aaa
popl
in
fimull
push
loope
jmp
jnp
sbb
mov
fidivrl
dec
test
kmovw
insl
lahf
fs
pop
jge
cmpb
negb
sbb
sbbl
jecxz
push
insb
pop
test
loope
mov
jnp
xchg
xchg
push
in
arpl
mov
inc
adc
test
decb
pushf
push
add
or
ret
fistpll
cmp
movsb
popa
xchg
in
push
mov
xchg
adc
pop
adc
mov
jl
cmp
hlt
mov
lcall
adcb
rcrl
lahf
dec
icebp
loope
sub
frstor
or
xor
lahf
cld
sbb
dec
jno
dec
inc
jge
mov
xchg
jg
jno
lahf
xor
mov
js
or
stc
test
cmp
or
mov
add
jl
sbb
cmpl
out
xor
mov
lea
sbb
jne
adc
sbbl
push
repz
sarb
mov
enter
test
data16
push
dec
sbbb
repz
inc
mov
mov
dec
jge
movsl
inc
or
aas
jp
insl
push
inc
iret
jne
fucomp
lcall
out
int
jecxz
mov
pusha
fisttps
cmpsl
push
pop
mov
test
inc
mov
or
pop
test
cmc
mov
test
xor
adc
imul
push
jle
push
daa
xor
inc
cmp
outsl
rorl
or
pop
outsb
dec
rcll
test
sub
push
popl
call
mov
inc
sub
push
jecxz
xor
jns
cmp
test
ds
js
pop
mov
push
mov
imul
stos
jb
push
insb
or
cmp
dec
and
xchg
pop
xor
stc
loopne
outsb
test
repz
adcb
adc
add
stos
jge
fwait
sub
inc
mov
out
push
daa
test
jae
test
enter
mov
fwait
cld
mov
movsb
ror
data16
sbb
fldl
test
pusha
jmp
jo
arpl
aam
arpl
sbb
xlat
ss
and
fstl
xor
shlb
mov
loop
sub
in
add
inc
pop
pop
sbb
neg
xchg
int
cmp
add
fistpl
mov
jmp
sbb
mov
mov
in
cmp
jmp
dec
js
adc
jge
mov
push
mov
adc
pop
popa
decb
dec
cmp
pop
movsl
dec
test
cwtl
rcll
xchg
imul
sbb
inc
or
test
sub
dec
scas
pop
xchg
cmp
add
push
jns
inc
add
movsb
stos
sbb
call
jo
into
inc
cmp
pop
mov
jae
pushf
cwtl
jl
or
xchg
mov
mov
ret
int3
adc
jns
aas
add
add
pop
ret
mov
negl
ss
sarb
dec
mov
mov
xchg
pop
arpl
fldl
cmpsl
shrb
jo
cmp
js
lods
inc
lret
test
int
loope
xor
push
cmp
mov
mov
add
xchg
or
cwtl
add
and
sub
or
icebp
sbb
inc
push
leave
mov
test
mov
mov
mov
xor
mov
and
lea
xchg
pop
repz
cmp
add
imul
inc
cmc
xor
imul
mov
and
inc
in
addl
xor
fisubl
in
xchg
fisttps
cwtl
cmp
in
dec
std
sub
push
pusha
mov
push
adc
aas
mov
arpl
mov
pop
icebp
insb
test
movhps
xlat
or
xor
or
sti
out
scas
mov
in
js
rclb
sub
sarl
and
ret
popa
pop
inc
mov
leave
icebp
sarb
xor
fcmovnb
movl
out
dec
in
sahf
jp
movups
and
sbb
enter
mov
pop
adc
adc
test
pop
mov
sbb
repz
shl
cltd
and
push
push
fwait
adc
or
in
sbb
pop
dec
mov
jno
xor
adc
sbb
test
icebp
mov
push
test
movl
movsb
pop
cmp
jge
scas
aam
flds
inc
aas
add
and
pop
movsl
addb
jge
mov
inc
cmp
fsts
mov
and
dec
xor
inc
outsl
mov
or
fdivp
in
mov
pop
lea
insl
dec
inc
shrb
pop
test
aam
lret
stos
lea
jne
pop
adc
pop
add
jp
push
mov
or
add
test
lret
mov
pop
test
nop
repnz
jl
inc
mov
jnp
push
scas
mov
loope
dec
adc
imul
shl
fdivrl
mov
dec
mov
jb
mov
stos
fnstenv
sub
stos
mov
sbb
cmpsb
jns
arpl
leave
dec
nop
loop
and
mov
test
mov
dec
jg
mov
push
jae
iret
or
pop
dec
xchg
iret
or
fstpl
mov
dec
or
jl
cmp
mov
adc
push
ds
in
push
popf
mov
xchg
pop
gs
push
mov
and
xorb
add
jp
enter
push
lret
lret
lods
adc
dec
cmc
dec
xchg
lret
jns
push
out
repnz
loopne
mov
movsb
push
sub
adc
push
clc
icebp
pop
pop
into
dec
sbb
sub
leave
add
test
mov
pop
adcl
fimuls
aam
aaa
imul
ffree
or
ret
iret
loop
rol
mov
jo
jns
jno
mov
or
mov
sub
sar
ljmp
mov
leave
cmp
out
repz
sub
jns,pt
sub
mov
andl
or
cwtl
insl
mov
ret
insb
insl
sub
xchg
imul
sub
inc
xchg
arpl
rol
pop
enter
jns
mov
sbb
jle
mov
sbb
add
sbb
sub
or
push
add
or
in
pop
and
nop
addr16
out
or
mov
and
dec
daa
xchg
push
jmp
pop
je
inc
imul
xlat
and
cmp
mov
adc
mov
cmpb
or
cmp
sti
mov
roll
cld
push
lahf
push
mov
dec
int3
inc
mov
jo
adc
mov
idivb
pop
xchg
leave
xchg
cmc
sbb
test
push
out
ret
repnz
testl
fiaddl
pop
push
mov
pop
cmp
and
aam
push
movsb
mov
jo
sarb
xchg
outsl
xchg
jb
xor
push
xor
push
add
dec
ret
sbb
xor
xchg
aaa
mov
jl
repz
insl
cmp
adc
insl
aad
aam
push
lret
add
test
shrl
jnp
jno
test
or
mov
enter
inc
imul
cwtl
cmc
jo
xchg
loope
outsl
test
and
add
mov
movsl
pushf
mov
and
xchg
ret
test
xor
add
inc
jecxz
pmullw
jo
test
add
xchg
xchg
mov
nop
shrb
in
mov
cmpsl
enter
xchg
jo
push
call
filds
adc
stc
stos
mov
cmp
test
outsl
or
mov
mov
je
mov
xchg
cmp
cltd
push
mov
out
ds
or
cmpsl
mov
jg
lahf
or
out
ss
bnd
sahf
dec
out
mov
stos
mov
enter
push
leave
push
mov
dec
jmp
int
jmp
in
inc
pop
fs
mov
xchg
in
pushl
lods
dec
xchg
sub
lret
mov
lods
repz
push
cmpsb
jno
test
inc
push
mov
cmc
mov
push
xor
sbbl
imul
addr16
pop
sbb
xlat
sub
sub
push
pop
inc
test
out
or
enter
test
or
cmpsb
sahf
xor
mov
cmp
ret
lret
or
int3
sti
lock
orb
cmp
ror
into
inc
jno
cmpsb
shll
adc
mov
add
mov
shll
pop
stc
mov
mulb
add
jmp
es
pop
push
dec
mov
cmp
dec
scas
mov
rolb
mov
dec
mov
or
mov
out
in
inc
push
stos
test
and
add
lds
insl
fdivs
scas
fisttps
nop
cmp
test
jbe
out
cmpsb
imull
xchg
and
xchg
and
ret
and
pop
mov
out
mov
sbb
dec
mov
ret
into
pop
jno
mov
or
xchg
fisubrs
addr16
jle
inc
es
shr
sbb
aas
loope
in
mov
out
or
cmp
inc
add
pop
inc
stos
mov
mov
leave
sbb
jg
mov
sub
loopne
es
lret
aas
jo
push
aas
scas
ret
xchg
mov
into
sub
jno
cmpsl
arpl
sar
leave
lcall
ret
fdivrl
pop
dec
loop
or
mov
in
inc
daa
pop
stos
in
cmpsl
pop
mov
ss
lcall
add
es
jnp
jb
rol
pop
sub
push
imul
imul
lret
movsl
mov
inc
sub
fiadds
add
idivb
adc
inc
add
fstl
dec
pop
stc
inc
movsbl
js
mov
dec
fildl
gs
in
mov
jb
add
jmp
gs
or
lcall
jle
xorb
dec
cmp
enter
call
dec
aam
mov
inc
push
fcmovbe
add
jmp
and
or
popf
int
cmpb
sub
je
mov
aaa
inc
out
mov
faddl
push
inc
hlt
dec
dec
xor
into
pop
je
rcrl
mov
popf
jge
push
clc
xor
test
pop
jl
xchg
cld
aam
es
mov
mov
stos
xchg
adc
add
pop
aad
push
jne
insl
inc
inc
dec
inc
lds
and
ret
pop
mov
add
test
mov
inc
repz
pop
mov
pop
push
movsb
and
jp
insl
loopne
test
repz
jb
insb
jg
mov
mov
lret
cmpsb
rcrb
mov
xchg
repnz
pmaxsw
adc
add
test
jle
lods
lret
xchg
sbb
sbb
jno
out
or
es
sbb
dec
scas
test
test
hlt
adc
outsb
jo
test
xchg
sub
out
mov
shrl
mov
mov
subl
mov
movb
or
pop
xchg
out
test
pop
daa
sub
outsb
jns
dec
sbb
and
test
es
pop
push
lock
fincstp
decl
mov
adc
aad
scas
imul
dec
inc
xor
dec
ja
loope
shrl
push
ds
mov
jmp
mov
stos
ljmp
js
cmp
jae
mov
frstor
ffreep
push
out
enter
cmp
das
mov
movsb
loopne
cwtl
aas
add
cmp
inc
dec
cmp
inc
lods
out
and
xchg
jae
test
scas
repz
test
ret
pop
push
xor
nop
stc
mov
add
or
mov
inc
and
pop
or
std
call
push
push
mov
mov
adc
in
dec
dec
rorb
and
fs
cmpb
xchg
addl
test
jl
xor
test
or
addr16
sbb
lret
aam
pop
push
xor
stc
jmp
gs
lret
jle
mov
inc
adc
loop
mov
add
jge
adc
jle
loope
ds
sub
pop
sub
mov
je
dec
test
popfw
mov
out
insb
int
mov
stc
xorb
cmc
xchg
mov
stc
add
in
add
xor
xchg
enter
insb
test
adc
mov
mov
ret
add
mov
xor
cmp
movsl
and
push
pusha
fdiv
in
pop
inc
add
loop
mov
ljmp
stos
sub
std
call
adc
ret
pop
sbb
test
mov
test
adc
and
inc
sub
out
or
stos
xlat
fimull
pusha
bound
and
call
leave
jns
aam
ds
mov
sub
test
int3
add
test
das
aaa
je
cld
lea
inc
roll
popf
sarl
mov
or
adc
mov
andb
mov
scas
push
int3
mov
fidivrs
pop
notl
mov
sub
data16
jae
jle
add
mov
push
pushf
sbb
mov
mov
jnp
inc
pop
xor
xchg
sub
ljmp
scas
jae
pop
add
push
inc
test
push
and
in
repz
sbb
dec
iret
sub
add
xchg
fldcw
loop
clc
ret
add
jns
xchg
repz
mov
mov
mov
dec
nop
add
cld
mov
insb
or
leave
mov
fs
sbb
or
push
mov
xor
jns
inc
lret
imul
dec
fstpl
sbb
add
sahf
lret
pop
mov
inc
test
je
add
jno
pop
cmpsl
hlt
pop
mov
aam
jo
add
inc
sub
das
mov
adc
arpl
mov
test
sbb
jmp
sbb
repz
test
jo
dec
inc
adc
test
jle
jno
int
lds
pop
imul
push
dec
lcall
fidivrl
and
or
in
popf
sub
jae
pop
paddsb
jo
stos
pop
adc
pop
test
lahf
mov
in
sbb
mov
cmp
mov
sbb
xor
xchg
jl
push
inc
xchg
rorl
nop
or
mov
stc
scas
ja
loopne
mov
adc
mov
lret
sub
fldt
sahf
cltd
adc
jle
lock
sub
mov
mov
ja
ret
adc
mov
or
shr
add
aam
sub
push
sub
cld
test
imul
jno
push
push
fs
outsb
pop
into
push
jle
adc
cmovne
sbb
mov
out
and
es
sbb
and
out
sbb
arpl
push
ds
test
mov
test
mov
adc
lret
addl
insl
jae
mov
sub
test
mov
or
mov
int3
scas
jge
pop
add
mov
orl
mov
xchg
insb
and
int
sbb
jl
jle
jp
pop
hlt
mov
mov
sarl
xchg
dec
sub
mov
inc
out
push
mov
insb
add
stos
dec
xlat
cmp
mov
add
mov
jne
inc
ficoml
pushl
lret
movsb
mov
lods
jb
xor
int
rorl
in
mov
pushf
jge
outsb
jle
pop
sub
xchg
mov
add
outsl
mov
sub
jno
mov
out
add
mov
test
out
inc
mov
sub
stos
sarb
add
add
mov
sbb
icebp
pop
jns
sub
loopne
jno
push
je
js
int3
add
add
out
out
inc
syscall
dec
and
int
aaa
shl
popf
add
add
sub
jg
lods
pusha
xchg
pop
ljmp
push
mov
shr
dec
sbb
in
inc
jne
dec
or
mov
sbbb
js
mov
mov
jmp
mov
imul
jbe
inc
aaa
push
jmp
pop
lods
jb
dec
pop
and
fsubrl
mov
and
mov
mov
pop
push
enter
ljmp
fstpl
dec
sahf
loope
mov
dec
std
test
vpsadbw
jl
mov
stos
daa
xchg
adc
sbb
add
int
imul
es
jl
add
mov
lods
push
adc
and
add
add
sbb
sub
adcl
outsb
push
adcl
push
cltd
sbb
sbb
outsb
lcall
test
xchg
xchg
xchg
or
imull
data16
fiadds
ss
das
test
ret
sub
test
lods
adc
xor
decb
mov
cmp
and
aas
sbb
fwait
xchg
sbb
fs
scas
cmp
mov
data16
jmp
shll
jno
push
test
or
dec
or
inc
mov
fwait
and
daa
out
imul
push
in
sbb
daa
cmc
dec
inc
sub
mov
inc
sbb
push
push
sbb
pushf
mov
mov
dec
jle
leave
nop
dec
cltd
ret
jp
cmp
and
ret
sub
push
pop
jl
dec
pop
rclb
das
sub
lods
mov
push
std
lret
test
mov
push
cmpsb
or
outsb
or
xor
mov
mov
inc
add
pop
sbb
pop
in
pop
push
mov
stos
xchg
or
jl
xchg
ja
mov
mov
pop
mov
lcall
dec
and
sbb
inc
cmp
push
xchg
xchg
mov
scas
push
loopne
adc
out
iret
lods
imul
pop
push
mov
lret
ja
inc
pushf
pop
int3
mov
loope
std
mov
mov
add
dec
scas
push
adc
jae
aam
mov
in
out
sbb
hlt
loop
xchg
jp
pop
jle
aam
xor
sbb
vcvtsd2ss
mulb
lret
test
jae
dec
hlt
movsl
dec
enter
mov
sub
xchg
mov
pop
jnp
popa
jno
inc
jge
xor
sub
and
adc
cmp
int
decb
mov
lret
xchg
adcb
push
or
pusha
and
fs
add
mov
or
lret
xorl
aam
push
insb
add
xor
lret
fmull
out
enter
inc
and
data16
roll
adc
cmp
shll
pop
mov
jae
ja
push
xor
pop
enter
pop
xor
outsl
int
in
leave
adc
mov
test
into
jae
test
jp
adc
sub
inc
xorb
pop
jbe
pusha
cli
push
test
xchg
mul
inc
rcr
stos
push
sub
inc
jns
inc
enter
add
xor
hlt
dec
adc
inc
dec
lock
pushf
aam
mov
xor
popa
pop
push
test
jle
push
call
dec
adc
xor
push
sbb
pop
cmp
or
jecxz
imul
mov
add
cmpb
roll
loopne
das
jns
sahf
inc
xchg
faddl
test
mov
mov
aad
xor
mov
dec
jne
rorl
inc
rorl
sbb
mov
stos
ret
dec
dec
mov
push
dec
mov
test
testb
cmp
jnp
flds
cmpsl
and
cwtl
sbb
test
test
and
jmp
pop
adc
aad
adc
sub
sbb
cmpsb
add
gs
sub
mov
scas
inc
test
sbb
mov
add
xor
adc
xchg
mov
push
nop
aam
les
sbb
jg
mov
mov
nop
push
jnp
loope
mov
in
test
xchg
outsb
add
mov
push
add
push
enter
sub
jnp
loopne
das
cmpsl
sub
xor
mov
jns
pop
icebp
mov
outsl
lods
xor
mov
js
insb
stos
fimuls
pop
xchg
or
pop
jns
test
xor
pushf
lock
fsubs
push
dec
mov
pop
cs
insb
enter
ja
xchg
push
mov
xchg
or
adc
cmp
lret
fidivs
mov
test
mov
shrl
sbb
xchg
scas
dec
push
or
stos
test
pop
cld
test
cwtl
inc
mov
sub
mov
cwtl
das
lret
mov
dec
inc
jle
inc
dec
int
fldl
ret
push
insl
xor
scas
gs
inc
call
mov
loope
xor
inc
in
in
jge
adc
push
addr16
dec
mov
ds
dec
arpl
out
stos
inc
mov
stc
subb
lds
pushf
xchg
push
mov
nop
test
movsl
cmpsb
outsl
jge
cvtpi2ps
sbb
push
jecxz
adc
cmp
xor
inc
mov
imul
pushf
test
cwtl
xor
fsubrs
lds
iret
inc
jp
lds
xor
aam
cmc
add
sti
inc
add
mov
sti
jge
test
cmp
aam
push
roll
sbb
inc
pop
pop
lds
mov
loop
int3
inc
jo
jg
add
pop
movsl
add
sbb
outsb
add
push
dec
loopne
addb
hlt
sbb
outsb
aam
mov
test
xlat
lds
mov
sbb
mov
xlat
imul
add
sub
push
aam
pop
push
orb
fcompp
mov
add
shrb
test
inc
addr16
dec
add
and
aas
lahf
lret
daa
pushf
fwait
enter
pop
push
push
addr16
pop
ror
inc
movsb
sarl
jns
mov
repz
cmp
shr
pop
lods
push
or
mov
jecxz
enter
sub
push
inc
cli
dec
cmpsb
stc
push
adc
push
pop
jle
pop
adc
repnz
lods
pop
arpl
inc
push
imul
sub
inc
push
cmpb
xchg
test
insl
mov
mov
std
xchg
or
cmp
popa
addr16
lret
dec
fmull
roll
lds
aam
fdivrs
push
mov
cld
mov
lcall
das
cmpsw
jb
ds
mov
inc
mov
test
dec
in
push
in
xchg
xor
icebp
pushf
inc
inc
add
test
mov
mov
jmp
scas
push
push
sbb
pop
jne
add
xchg
repz
fsubl
push
pop
pop
dec
push
add
push
fsub
test
in
inc
std
jp
jle
and
push
xchg
icebp
sbb
out
fdivrs
mov
mov
addr16
sub
xchg
bound
add
cld
aas
mov
mov
cwtl
adc
xchg
popl
fstpl
jl
and
pop
mov
mov
test
icebp
cmp
sti
ret
scas
xchg
pop
leave
outsl
cmc
int3
rolb
lea
subl
mov
js
inc
push
sti
ds
sbb
sub
sti
ljmp
shlb
mov
mov
xor
fisubs
xor
sbb
add
iret
inc
xor
push
xchg
movsl
inc
sahf
sub
fnstenv
xorb
push
call
fildl
popa
jmp
xor
mov
or
loopne
jae
push
dec
push
mov
scas
xchg
push
mov
xchg
idivb
in
data16
int
jns
in
ret
testl
test
add
cltd
cmp
lret
pop
pop
js
xor
adc
cmc
inc
gs
inc
ja
mov
xchg
lret
sti
inc
xchg
mov
clc
sub
jo
loop
cli
push
inc
jno
push
mov
or
sub
cmp
xchg
jo
std
xrelease
inc
scas
loop
stc
iret
shrb
jb
data16
lahf
and
inc
call
into
imul
test
js
sbb
or
dec
push
rcrl
mov
cmp
sti
xchg
pop
sub
test
adc
idivb
xchg
btr
push
xchg
ret
outsl
mov
pop
out
sbb
call
dec
inc
sbb
mov
stc
test
sbb
mov
mov
fnstenv
into
add
cltd
pusha
cmp
push
enter
sar
cs
inc
cld
or
cmpsb
add
pop
ror
pop
rcr
js
xor
push
loope
and
mov
cmpsb
fildl
addr16
dec
pusha
push
sub
imul
mov
jecxz
sub
cmpsl
cmpsb
and
std
imul
xchg
dec
aam
mov
inc
sahf
insb
cmp
xchg
jle
and
inc
pop
test
add
adc
mov
dec
or
aaa
dec
pop
cmpsl
aad
paddq
icebp
test
xor
mov
mov
fucomi
in
jmpw
mov
fiaddl
decl
dec
pop
mov
insb
fs
mov
and
push
ret
adc
in
adc
xchg
push
mov
bound
sub
sbbl
lds
test
outsb
loopne
data16
cmp
dec
lcall
jle
or
jg
pop
test
cmc
dec
cmp
scas
mov
enter
jecxz
arpl
jle
lds
mov
pop
mov
sti
cltd
int3
mov
or
pop
loope
lds
dec
jle
sbb
jbe
loop
leave
in
pushf
shl
ja
mov
ss
push
test
adc
pop
xchg
fldcw
cli
sbb
mov
xor
stos
or
mov
les
dec
cmp
push
mov
fsubrs
dec
cmpsb
dec
or
pushf
add
push
ds
jbe
mov
out
in
push
movsl
loopne
add
push
enter
mov
jo
xchg
push
int
ss
mov
sub
sbb
adc
dec
les
mov
sbb
jmp
dec
sub
gs
imul
jnp
jecxz
xchg
xchg
dec
gs
mov
je
mov
mov
dec
xchg
xor
or
lahf
fsubr
lods
mov
fs
ret
in
inc
and
pop
lea
mov
inc
and
mov
sub
test
into
and
xlat
jnp
decb
movhps
lret
push
dec
dec
push
xchg
push
scas
or
xor
and
adc
daa
imul
jno
cli
mov
and
mov
test
shlb
outsl
dec
and
stos
mov
mov
mov
jno
xchg
arpl
sub
shrl
cmpsl
jle
aam
cltd
jg
rcr
adc
cltd
aam
sub
push
or
mov
cmp
fistpll
test
cmp
jo
mov
add
sub
or
ret
dec
mov
xor
cmpsb
test
repz
movsl
daa
lods
insb
inc
ret
push
sub
xchg
mov
insb
push
repnz
fxch
or
mov
ret
outsl
inc
cltd
dec
dec
sbb
pop
loop
stos
enter
mov
xlat
test
mov
test
in
popa
loopne
cld
jg
push
dec
mov
popf
rorl
mov
push
ljmp
fcomi
xchg
test
pop
dec
lret
cld
add
mov
cmp
or
jnp
sbb
out
mov
mov
std
inc
push
sbb
test
stos
ds
push
ds
mov
lods
cwtl
jg
addr16
sbb
add
ret
stos
mov
push
adc
clc
and
ja
fisubl
xor
jle
pop
mov
fldt
mov
adc
rcl
fs
lods
pop
cmp
adc
jnp
shll
cli
cld
xor
shlb
dec
dec
sbb
loop
sub
add
sti
scas
in
stos
insl
mov
or
mov
sti
imul
enter
dec
or
inc
mov
xor
mov
push
loopne
stos
sub
test
movsb
cmpsb
hlt
jl
data16
imul
in
dec
push
mov
xchg
xchg
data16
xchg
test
sbb
xchg
insb
mov
cmpsb
add
int3
mov
push
movsl
cltd
data16
jl
cs
test
test
sbb
lahf
xor
es
out
test
into
or
fs
ja
cmpsl
push
bound
adc
inc
lods
jnp
pop
xchg
jnp
pop
repnz
mov
inc
ret
aaa
in
fistl
mov
int
pop
or
inc
xor
and
movsl
rcrl
in
inc
mov
pushf
sub
in
test
inc
popa
pop
sbb
cmc
and
dec
and
mov
divl
cmpsl
dec
ret
insl
mov
mov
xchg
adc
or
mov
dec
inc
in
mov
out
insb
test
add
or
sub
inc
mov
push
sbb
mov
adc
jne
in
or
ja
push
sbb
daa
scas
jp
hlt
push
mov
in
test
stos
mov
pop
in
mov
add
sub
xchg
fbld
xlat
inc
scas
sarl
orb
pop
and
push
mov
lods
push
xor
outsb
mul
ret
jns
xor
mov
mov
aas
mov
aad
mov
lret
xchg
add
jge
test
push
xchg
mov
test
ret
stos
and
jae
ret
xchg
and
lret
xor
insl
cltd
push
test
jmp
or
int3
fldcw
lods
mov
iret
jne
lea
xchg
inc
pop
mov
add
test
repz
rcr
xchg
mov
in
push
rcll
jo
sahf
mov
loope
mov
or
add
mov
popf
test
push
push
mov
cmp
inc
imul
movsb
divl
jl
loopne
repnz
sub
shlb
add
mov
sbb
jnp
xor
and
lock
mov
das
push
test
imul
scas
fcmovne
cmpsb
jb
ror
sub
xor
add
pop
ljmp
lret
jno
add
dec
adc
sub
jmp
jo
mov
or
repz
in
mov
and
xchg
inc
pop
adc
int
or
jnp
sarl
fdivl
jmp
out
add
test
inc
cli
inc
fwait
xor
imul
mov
xor
call
imul
ret
test
ficoml
xchg
push
adc
add
imul
psubw
les
in
dec
jmp
mov
insl
scas
shl
test
add
pop
jns
xchg
lret
popf
scas
jp
xchg
or
xor
stos
sbb
xor
icebp
xor
fidivl
jnp
in
pop
pusha
test
loope
dec
xchg
stos
pop
mov
imul
ret
mov
loop
jnp
xor
pop
iret
push
cmp
imul
sbb
movsl
into
inc
inc
aam
fsubrs
int
test
or
enter
ret
xor
leave
fs
push
adc
cmc
roll
mov
cltd
mov
into
mov
mov
dec
mov
cmp
test
pop
or
fisttps
dec
mov
cmp
mov
jmp
push
inc
data16
push
mov
test
dec
sbb
sbb
shl
lock
mov
mov
inc
dec
inc
cmp
pop
sbb
or
xlat
push
sub
add
push
aaa
add
jbe
dec
push
adc
add
jb
sarl
insb
loope
loope
jne
dec
mov
mov
or
test
fwait
sti
pop
push
aam
je
add
bound
arpl
je
xchg
ret
cmp
daa
mov
repz
inc
std
outsb
mov
das
pop
outsl
sbb
xchg
push
outsb
insl
ljmp
out
and
push
ret
mov
add
imul
scas
adc
xor
and
mov
add
movsl
hlt
rol
dec
cmp
mov
inc
xor
xchg
xor
dec
cli
mov
xor
jp
movsb
mov
push
xor
dec
push
pushl
pushf
mov
rorb
inc
adc
push
sub
rorb
filds
mov
pop
or
cltd
jmp
mov
sub
fwait
enter
sbb
popa
xchg
and
clc
out
cltd
sbb
rcll
test
hlt
inc
pusha
or
sbb
mov
int
daa
clc
lock
and
and
inc
divl
pop
dec
inc
call
js
push
imul
aaa
jle
cltd
inc
xor
divl
xor
xlat
push
cwtl
xor
leave
into
aaa
sbb
pop
flds
fnstcw
mov
ja
add
enter
fcom
cli
pop
or
into
dec
push
pop
in
roll
mov
cmpb
xchg
imul
adc
loope
cmc
sub
ret
push
xor
lret
lret
xchg
mov
push
pop
mov
pop
icebp
mov
iret
cmpl
dec
add
mov
cmp
repnz
xchg
adc
test
adc
xchg
pop
cmp
pop
dec
dec
subl
adc
jecxz
ljmp
testl
mov
adc
jns
popf
mov
roll
pop
mov
fldcw
pop
push
ret
sti
les
push
lds
adc
xor
pop
push
or
xchg
xor
outsb
stc
bound
and
mov
psrad
sbb
mov
shlb
xchg
push
push
test
inc
mov
out
add
aaa
out
ret
shll
sub
dec
movsl
test
mov
inc
pop
mov
jl
inc
lret
xor
shrb
cmp
test
sbb
mov
mov
mov
rcr
mov
repnz
pop
lret
test
mov
das
cmp
ret
mov
xchg
in
mov
pushf
xor
adc
add
idivl
push
mov
mov
lock
test
sbbl
aad
test
gs
inc
lahf
cli
mov
es
shll
push
push
nop
jge
leave
mov
in
inc
add
ja
fs
push
xor
scas
ds
inc
mov
inc
into
jno
into
flds
pop
jne
inc
sub
rcll
or
cmp
pop
and
mov
out
mov
cmp
fnstcw
pop
jne
push
lea
jb
mov
mov
add
hlt
mov
mov
xlat
sub
dec
std
dec
and
aam
xchg
test
push
dec
dec
loope
pushf
adc
ljmp
sub
cmpsb
inc
pop
pop
dec
mov
mov
inc
inc
inc
adc
or
nop
sbbl
iret
jbe
pop
jecxz
pop
out
pop
jne
mov
inc
nop
cmp
mov
pop
push
test
mov
cwtl
outsb
inc
mov
pop
rol
xor
cmp
xor
jl
inc
idivb
pop
repz
pop
pop
cmp
test
add
jp
mov
movsl
push
inc
flds
lods
mov
mov
test
std
je
adc
outsl
mov
adc
adc
test
or
inc
pop
fisubrs
push
inc
pop
jb
stos
mov
fidivrs
xchg
ja
rolb
jmp
jecxz
sbb
test
adc
jo
cmpsl
mov
scas
cmc
mov
insl
pop
push
inc
les
pop
ret
xor
iret
mov
jg
push
outsl
mov
movsb
adc
jl
not
mov
inc
lret
xor
enter
mov
clc
mov
and
ret
pop
pop
xor
test
and
jno
dec
outsl
pop
in
mov
pop
jl
ja
mov
mov
sub
add
pop
lds
sbb
cmp
xchg
fldt
fisttpll
aad
mov
push
rclb
dec
sbb
mov
test
adc
inc
fs
aad
test
sub
mov
jb
mov
loopne
push
jl
inc
mov
xor
xchg
jne
bound
test
add
push
jo
imul
loope
add
jge
inc
call
mov
mov
mov
repnz
mov
sbb
push
ret
test
test
decb
jmp
jle
push
or
fcomip
cs
add
dec
pop
in
and
sub
aas
aam
in
insb
shrl
mov
xchg
cmc
sbb
out
xor
push
inc
mov
sbb
pop
pop
out
cmp
mov
pop
mov
sub
pop
mov
push
and
inc
add
out
cmp
adc
adc
repnz
test
inc
test
arpl
pop
sbb
nop
mov
jnp
outsb
arpl
lods
xor
mov
jmp
push
jp
add
mov
into
dec
xchg
adc
hlt
insl
jbe
roll
dec
inc
add
cmp
outsb
add
mov
dec
sub
mov
dec
mov
js
add
add
shll
andb
sub
pop
jno
imul
in
loop
jmp
inc
adc
pushf
roll
or
leave
mov
test
lock
xor
movsb
insb
push
popa
loope
adc
test
sub
jmp
add
movsl
icebp
sub
insb
and
imul
xchg
add
iret
stos
xchg
mov
cmp
push
notl
add
dec
dec
sub
aam
inc
lret
inc
pop
adc
sbb
mov
push
jg
jnp
mov
bound
lea
or
or
cld
push
stos
mov
cmp
dec
mov
mov
sbb
push
push
cmp
push
test
or
in
jge
outsb
pop
cmp
arpl
dec
out
pop
push
mov
or
or
sbb
aam
mov
inc
push
leave
in
into
xor
mov
enter
cmp
ficoml
cmp
xor
stc
jl
push
inc
jecxz
sbb
xchg
das
mov
xchg
insl
or
jno
sbb
xorl
cli
adc
into
insb
and
xchg
pop
popf
mov
xchg
scas
movsl
cmp
test
or
sub
inc
add
push
add
in
addb
loop
es
cmp
sub
jb
push
imul
dec
jle
mov
cs
push
ret
or
sub
sub
aam
rcr
push
add
cmp
push
push
mov
out
push
aad
mov
test
sbb
pop
add
inc
dec
mov
stos
test
lods
jecxz
mov
xor
sahf
mov
mov
fld
test
mov
push
ret
push
fistpll
and
xor
clc
jge
add
test
pop
push
adc
mov
pop
lret
cltd
jnp
add
test
test
jmp
xor
test
enter
adc
push
xorl
adc
cmpsl
cs
add
pushf
mov
cmp
pop
in
in
mov
jne
push
test
subb
push
cmpsl
sbb
inc
icebp
mov
rclb
sub
mov
pop
lahf
adc
std
arpl
ds
into
or
movsl
xchg
ss
lds
sub
cld
loopne
xor
add
mov
aam
bound
inc
mov
and
in
repz
mov
das
xor
add
test
push
or
mov
mov
pop
repz
test
ds
outsl
mov
adc
mov
js
jp
pop
sarl
into
fst
cmpl
adc
push
mull
jne
ret
test
lret
sbbb
or
test
or
imul
in
test
and
jns
add
sub
in
lcall
inc
add
bound
push
sub
enterw
push
mov
ffree
je
dec
or
adc
enter
sti
mov
xor
mov
pop
inc
fwait
loope
in
int3
cmp
outsb
dec
mov
imul
cltd
pop
call
xor
shll
adc
iret
add
add
fnstcw
add
pop
push
sub
test
std
add
lds
scas
std
dec
mov
pop
int
cltd
nop
addr16
dec
and
mov
sub
mov
pop
jnp
icebp
popa
and
pop
add
xor
mov
jae
add
out
dec
mov
in
xor
or
push
add
cmpsb
fs
fildll
ja
sbb
sbb
adc
sub
adc
jmp
dec
test
imul
std
outsb
adc
loopne
inc
lret
pop
sbb
cld
movsb
adc
or
jmp
daa
cmp
mov
or
mov
or
loopne
or
mov
test
in
pushf
rorb
out
inc
mov
loope
adc
pop
test
out
inc
inc
rcrl
int3
dec
xchg
and
sahf
outsb
mov
jns
add
test
sub
sub
sbb
cmp
xchg
movsl
cwtl
aam
test
fimull
shr
or
or
xchg
std
sub
jl
add
shrb
cmpsl
les
pop
mull
push
xchg
xor
jnp
mov
mov
fiadds
add
xchg
repz
in
andl
test
mov
mov
or
out
pop
aas
je
cmp
fldl
mov
jno
cmp
push
jnp
xchg
inc
pop
shrl
pop
cmpl
mov
out
mov
mov
inc
fsts
cmp
adc
adc
mov
jp
imul
bound
cmp
test
cmpb
daa
in
sahf
insb
push
mov
pop
sbb
out
adc
sub
movsb
imul
mov
xchg
ret
scas
jae
mov
icebp
lock
xorb
cmp
inc
leave
movsl
and
pop
xchg
mov
mov
fdivrs
pop
lds
cltd
cmpsb
jbe
mov
jbe
leave
jns
idivb
mov
lock
cmp
mov
inc
or
add
mov
nop
dec
inc
mov
test
in
decb
add
shll
pop
loope
addr16
out
mov
lds
js
cmp
stos
icebp
add
std
aam
ret
add
mov
sub
test
ret
mov
out
pop
imul
cmp
lahf
test
xchg
adc
mov
pop
mov
mov
pusha
test
retw
xor
pmuludq
mov
aad
imul
jnp
lods
adc
mov
scas
adc
mov
cwtl
or
popf
cmp
int
outsl
xchg
dec
dec
pop
and
dec
ja
jmp
pop
fnstcw
and
enter
pop
mov
and
mov
or
loop
test
scas
mov
pop
mov
push
ret
inc
cmc
ret
fwait
cmpsb
enter
push
shlb
addr16
ljmp
lds
fstps
sub
sbb
inc
test
sbb
out
cmpsb
call
sbb
pop
inc
aas
repnz
push
xor
test
out
stos
pop
mov
pusha
push
push
jbe
outsb
jp
and
add
mov
add
push
jmp
adc
mov
ds
jnp
dec
mov
test
mov
pop
js
loop
notl
jne
lret
out
jno
sub
mov
and
lock
jbe
push
cltd
sbb
adc
add
push
push
sub
scas
adc
adc
bound
psubusw
and
push
mov
sub
es
adc
dec
mov
or
cmc
mov
hlt
sbb
fsubp
mov
add
lods
mov
dec
pop
pop
sbb
mul
xchg
jmp
inc
add
xor
pop
ljmp
push
sti
push
mov
push
lahf
dec
test
jl
xchg
pop
and
inc
dec
popa
jne
into
int3
aaa
loop
shll
push
sbb
xor
pop
enter
push
xor
imul
cmc
mov
jmp
mov
leave
bound
loope
sbbb
push
dec
or
dec
pop
or
inc
xchg
adc
fmul
cmp
into
add
frstor
ljmp
int
imul
push
daa
jg
test
adc
test
fldt
out
enter
mov
push
test
jle
push
pop
jno
sbb
enter
add
inc
push
adc
mov
sub
pop
ficoml
pushf
ret
hlt
jb
mov
bound
test
int3
and
idivb
fistpll
clc
dec
cmp
es
sub
or
xchg
dec
sub
jg
lock
lret
aad
mov
negb
dec
jb
pop
loopne
test
daa
rcrl
fsubrl
test
mov
iret
divl
bound
out
rclb
out
dec
sub
mov
ret
xorl
inc
push
push
faddp
adc
rorb
sbb
test
pop
scas
mov
add
pop
test
enter
mov
loope
pop
jne
into
xor
orb
push
mov
std
dec
dec
xor
xor
push
dec
mov
jns
pop
pop
shl
ret
cmp
test
test
sbb
std
adc
and
mov
jmp
jle
js
daa
imul
test
dec
inc
cwtl
mov
test
dec
test
sub
fildl
test
xchg
in
mov
push
stos
dec
dec
test
bound
jne
pop
arpl
in
add
shr
xchg
pop
outsb
frstor
mov
andb
push
in
mov
test
add
out
xchg
sub
loope
xchg
fs
ret
sub
mov
test
imul
fidivs
jle
add
fistpl
dec
or
cmpb
shufps
jecxz
pop
mov
sub
mov
mov
and
movsb
or
lcall
push
cmc
push
cltd
jae
fdivl
xor
int
cwtl
adc
enter
dec
movsl
test
cltd
xchg
test
sarb
inc
out
cmc
xor
scas
adc
jns
mov
out
rcll
and
cs
popa
xlat
shrl
add
mov
jecxz
cmp
xchg
hlt
xor
test
nop
mull
adc
xor
cs
mov
jo
je
dec
ds
cwtl
add
add
push
mov
jg
test
scas
adc
out
cmc
test
pop
fcoms
es
xor
enter
in
jmp
stos
loopne
repnz
sub
xor
pop
testb
xchg
mov
fwait
imul
daa
pop
cltd
adc
cmp
inc
and
add
mov
adc
addl
sbb
leave
sbb
sbb
push
addr16
jp
imul
jmp
jno
outsl
mov
cli
jmp
xor
sub
or
enter
pop
sbb
outsb
jecxz
in
and
pop
test
dec
xor
dec
cmp
pop
aas
aaa
adc
mov
push
mov
mov
sub
test
insl
inc
fxsave
cmc
addb
lcall
loope
std
lds
pop
pop
lcall
sub
fwait
shrl
pop
dec
and
in
mov
pop
stos
mov
int
lahf
or
inc
push
int
push
pop
or
aad
divb
pop
jae
xor
dec
lds
adc
nop
jp
scas
cmp
push
lcall
cmpsl
sub
push
mov
pop
fnstenv
dec
addr16
scas
push
sahf
test
push
mov
movsb
xchg
stos
inc
je
into
cmpsl
xchg
adc
int
adc
jg
js
inc
stc
lret
xor
cmp
vdivsd
lea
xchg
dec
test
push
pop
sbb
sub
clc
int
cmp
add
fistl
mov
insb
mov
xchg
test
push
stos
sbb
divb
xchg
shll
cmp
mov
xchg
test
stos
pop
inc
adc
pop
and
aam
jl
cmpsb
ja
loope
subl
mov
insl
xchg
clc
mov
xor
sbb
mov
ja
gs
jbe
sbb
lret
inc
xchg
stos
aam
ret
sar
mov
cmp
data16
jns
das
cli
pop
out
inc
jns
pop
dec
lock
orl
test
cmp
add
into
out
outsb
scas
jge
mov
mov
ds
pop
ret
adc
test
in
mov
out
pop
jle
loop
adc
add
inc
sbb
inc
xor
in
fcmovbe
jnp
push
loope
push
push
loope
or
xchg
or
xchg
xor
push
out
ret
lcall
mov
xor
push
push
cmp
dec
mov
in
outsb
push
add
icebp
rcrl
dec
pusha
mov
jg
adc
mov
in
enter
out
push
pop
sbb
fists
mov
fstpl
das
mov
mov
dec
push
sbb
jge
lods
cmpsb
imul
inc
push
sbb
push
ds
jnp
pushf
inc
mov
mov
adc
mov
xchg
jl
daa
sbb
mov
daa
out
xchg
sub
or
jg
repz
jmp
and
cmp
or
push
mov
pop
dec
pop
mov
decl
pop
lret
rcr
out
aas
xor
pop
test
sbb
ret
repnz
test
rorl
xchg
cmp
ja
fisubrl
inc
add
insl
xor
add
adc
shll
sub
lahf
mov
es
aad
jmp
dec
lret
fs
add
gs
lock
insl
loop
jge
add
xor
lods
out
jae
inc
mov
push
sbb
cmp
test
add
cmp
into
mov
loope
pop
xchg
sub
dec
and
mov
fistps
xchg
pop
pop
das
dec
push
or
jbe
js
mov
xor
mov
and
out
inc
xor
mov
test
sbb
cmp
jmp
rcl
flds
push
jg
addr16
dec
outsb
test
pop
ss
mov
js
sti
icebp
jnp
repz
push
dec
sub
dec
lds
aad
jge
pop
mov
adc
xchg
js
stos
push
mov
add
insl
scas
dec
stos
icebp
jl
icebp
inc
xor
pop
or
mov
inc
je
jg
mov
cmp
and
stc
push
add
in
sbb
rcr
inc
adc
jno
pusha
shll
sub
cli
lcall
and
push
jge
lahf
sub
push
pushf
scas
dec
lock
mov
dec
mov
in
dec
pop
adc
fdivrl
int3
jae
out
and
dec
or
dec
arpl
sbb
out
mov
add
ret
loopne
mov
bound
mov
repnz
sbb
je
sub
leave
sub
sub
outsb
out
add
icebp
dec
sub
mov
pop
sbb
push
fdiv
iret
mov
cmpb
std
push
mov
mov
cmp
sbb
jae
scas
mov
hlt
out
out
daa
dec
jnp
add
jo
in
mov
rorl
es
pop
pushw
ret
je
in
test
mov
jg
daa
mov
jno
clc
test
mov
aaa
inc
fstps
jns
dec
fbstp
cwtl
mov
cwtl
xchg
rcrl
xchg
push
js
push
xor
push
insb
imul
mov
jecxz
xor
push
adc
xchg
mov
dec
scas
xchg
sub
movsb
or
test
dec
pop
pop
les
fisubl
test
test
fcoml
outsl
jb
mov
jnp
ljmp
adc
lds
adc
or
std
insl
je
or
mov
icebp
fsubrs
mov
arpl
faddp
dec
add
sub
or
pusha
add
js
ret
movsl
and
xchg
add
dec
cmp
mov
mov
in
push
ja
add
stc
mov
inc
jne
cli
les
sbb
push
psrlw
outsl
sub
xor
pop
outsb
add
mov
cltd
sbb
cmpsl
cmp
and
ljmp
adc
mov
int3
ss
pop
add
lahf
and
test
xchg
inc
push
jnp
enter
xor
xor
daa
shrl
jmp
inc
stos
push
in
rolb
inc
pop
dec
xchg
into
ror
mov
test
sub
stos
sti
fwait
push
cmc
sub
jmp
add
and
xorl
dec
add
jmp
mov
repz
fucomp
add
ljmp
fsubrs
stc
out
fsubr
push
add
cmp
shll
lret
mov
mov
fwait
test
add
mov
shlb
clc
pop
and
or
fsubp
pop
xchg
les
stos
fsubrl
sub
in
sti
lcall
into
ret
xchg
insl
in
or
mov
jnp
rorl
rorl
je
mov
fmull
cwtl
mov
adc
cltd
aam
insl
mov
jle
push
pop
xchg
cmovns
and
cmc
pop
inc
orb
fld
cmpsl
inc
adc
sub
test
sbb
cmp
fisubrl
add
xor
outsl
fidivl
into
dec
repnz
push
jne
fisubrl
daa
mov
rcr
mov
jno
aam
lods
inc
sub
cld
xor
adc
adc
std
rorl
add
lret
xor
lods
inc
in
mov
fcomip
ret
xor
das
mov
mov
rcll
mov
mov
andl
jne
or
mov
pop
mov
test
add
enter
jnp
in
mov
jl
mov
hlt
mov
loop
arpl
idiv
int
mov
test
test
mov
and
push
loopne
jp
lock
push
fmul
cmp
insl
mov
test
ja
jns
xor
fsubrs
push
fnstcw
push
sub
out
popf
std
dec
imul
cld
out
popf
and
or
or
adc
int
jnp
pushf
movsl
jo
out
pop
hlt
shrl
js
aam
mov
adc
not
rcrb
sub
pop
or
push
out
jge
shll
mov
flds
cmpsl
mov
bnd
fists
test
lds
daa
ffreep
cmc
push
cltd
mov
insb
fwait
push
mov
add
bswap
inc
ja
ret
or
pop
adc
scas
dec
imul
add
jae
jmp
cwtl
push
hlt
repz
in
lret
cmpsl
pushf
fcompl
pop
or
fs
xchg
sbb
pusha
push
int
jno
sbb
and
pop
hlt
mov
dec
test
jne
lock
fcomp
inc
jbe
or
pop
cli
test
jne
outsb
lea
ret
or
pop
jle
sbb
into
and
ss
lahf
dec
icebp
xor
push
sub
ja
subb
lods
out
jne
stos
arpl
popf
cmp
shr
add
or
mov
jecxz
push
jo
and
lds
test
xchg
xchg
int
xchg
out
outsb
xlat
sbb
xchg
icebp
mov
rclb
out
scas
in
fisubrs
clc
icebp
aam
shrl
inc
push
test
push
insl
sti
xor
mov
mov
jl
mov
pop
test
fadds
lock
rolb
dec
mov
push
fsts
ss
mov
fs
stos
aam
stos
nop
xchg
lds
int3
dec
cmp
mov
pop
icebp
sub
mov
ljmp
lret
sub
xchg
sbb
add
mov
push
mov
test
jp
rolb
jle
inc
and
in
pop
aad
jno
je
and
das
mov
mov
mov
dec
mov
mov
in
sbb
and
jne
call
xchg
addr16
adc
push
nop
sub
out
imul
jle
fbstp
adc
jae
insb
mov
cmp
jl
push
adc
jnp
aam
arpl
jl
add
or
adc
sub
lsl
test
push
xor
xchg
mov
pop
xlat
icebp
stc
mov
push
pop
sbb
ss
adc
fxch
jg
dec
cli
dec
ljmp
push
xchg
mov
ficoms
scas
jne
mov
xor
inc
movsl
mov
pop
dec
jno
in
add
ja
aad
adc
sbb
pop
add
jmp
and
lods
aas
sahf
cmc
add
test
fdivrp
loop
orb
nop
xchg
outsb
add
dec
shlb
cmp
mov
push
jns
loopne
push
pusha
dec
sub
ljmp
lret
testl
mov
lds
inc
loope
call
mov
inc
mov
add
aad
sbb
xor
add
push
fstps
sbb
ficompl
jns
xchg
loope
sub
call
stos
adc
les
xor
push
mov
jg
mov
push
dec
push
lahf
mov
ljmp
xor
inc
mov
mov
mov
pop
les
and
sub
insl
cld
or
scas
in
repnz
movsl
sbb
dec
mov
add
insl
mov
inc
data16
das
push
pop
cmp
daa
mov
scas
mov
mov
jle
fisubrs
nop
popf
pop
stc
shll
cs
ret
jg
imul
xchg
mov
arpl
popa
pop
jns
test
aam
mov
dec
leave
cmp
incl
pop
and
pop
jns
dec
stc
aam
int
and
mov
mov
xchg
inc
jp
testl
cmc
std
pop
int
and
jne
bnd
jne
outsl
xor
xchg
pop
movzwl
test
xor
ret
mov
push
dec
loope
nop
test
pushf
cmp
dec
add
mov
or
jns
inc
push
pop
mov
outsl
rclb
dec
xchg
adc
ss
dec
xchg
imul
aad
dec
dec
inc
sbb
decb
push
in
jg
or
psubusw
fnstsw
std
aas
pop
hlt
push
mov
in
and
lcall
jne
mov
push
jp
lret
idivl
jns
rolb
push
jnp,pn
cmp
cltd
jg
cmpl
aad
test
sbb
das
into
inc
jb
inc
push
jp
sti
mov
cmp
add
or
and
xor
cmp
push
mov
lea
sbb
and
daa
mov
cmc
mov
jb
enter
test
or
cltd
jae
push
inc
test
ja
call
addr16
je
jl
or
sbb
outsb
and
es
lret
ja
es
or
jno
mov
pop
pop
add
test
imul
adcl
lahf
test
pop
push
in
rcll
and
sub
sbb
inc
test
icebp
sub
cmp
icebp
js
in
pop
rclw
pop
jne
xchg
fmul
xor
popa
adc
xor
mov
cmp
test
dec
push
lds
addl
jg
cmpsb
xchg
push
shl
gs
mov
pop
cltd
push
test
shll
in
scas
aad
mov
stos
inc
lahf
stos
ror
pcmpeqb
sub
jg
xor
add
shrl
int
sub
jge
inc
adc
je
xchg
pop
stos
adcl
sbb
mov
mov
packuswb
test
and
int
adc
or
xchg
loopne
push
cwtl
aam
in
push
test
cmp
pop
enter
sahf
xchg
or
push
xchg
cmp
shlb
les
mov
fnstenv
sub
pop
dec
pop
xchg
in
cmp
in
jecxz
xchg
push
add
jl
lcall
sarl
clc
jb
pop
jbe
and
adc
jns
enter
in
cmpsb
cmc
shll
ret
data16
clc
stc
jnp
push
lds
sub
sub
js
lret
mov
lds
test
mov
push
xchg
mov
mov
fnstsw
push
ds
dec
push
insb
adc
test
inc
mov
ds
cmp
faddl
mov
arpl
addb
push
leave
lret
cltd
sbb
sub
insb
jo
clc
sub
sub
lcall
inc
push
pop
je
mov
add
movsl
lds
popf
fcmovu
mov
lea
or
push
lret
mov
inc
leave
test
push
hlt
rorl
les
scas
mov
pop
xor
arpl
outsb
jno
fucomip
cs
es
rorb
adc
mov
insl
xchg
inc
jge
inc
mov
aas
jl
pop
push
inc
push
xchg
lret
push
mov
dec
sysexit
jns
dec
loope
pop
mov
mov
les
out
stos
loope
dec
or
jnp
mov
loopne
lock
dec
cmpsb
mov
popa
xor
jo
orb
mov
int
mov
xor
mov
adc
imul
fldcw
add
jl
cmpb
add
insb
lock
int
mov
xor
xchg
outsb
and
jns
insl
int
push
ret
or
add
test
or
inc
jle
sbb
cmp
jle
int
mov
mov
mov
lods
mov
test
xchg
mov
xor
lahf
and
pusha
mov
repnz
call
stos
int
sub
mov
jae
pop
lods
mov
test
mov
dec
inc
add
cmpsb
push
push
out
clc
loope
in
inc
mov
js
outsb
icebp
xchg
adc
dec
push
jle
cld
inc
test
sbb
test
adc
cli
or
out
add
xor
mulb
loopne
inc
and
ffreep
stc
fwait
jae
dec
sbb
pop
adc
pop
pop
enter
push
idivb
push
add
aaa
jae
fistl
sbb
test
cs
int
push
div
test
outsl
inc
negl
add
mov
xchg
fnstcw
ja
mov
jp
lcall
int3
repnz
jge
in
lret
inc
arpl
mov
repz
add
ja
outsl
les
pop
lahf
mov
hlt
cwtl
sar
das
mov
in
inc
inc
push
add
adc
jle
fs
cmpsb
xorb
outsb
adc
jl
shrl
sub
mov
sub
loope
sub
test
xchg
xor
sub
xchg
rorl
adc
adc
adc
and
out
add
leave
lahf
arpl
jg
fwait
call
test
add
mov
enter
jb
sub
cmp
cmpsb
jae
test
pop
push
pusha
mov
lcall
xorb
lds
push
jo
ljmp
testl
push
lds
xchg
adc
or
ret
scas
cwtl
arpl
mov
jnp
test
outsl
xchg
roll
mov
inc
pop
xchg
ret
les
cmc
cltd
test
push
inc
xor
call
inc
rol
cs
inc
dec
mov
mov
inc
mov
jne
stos
call
addb
ret
lret
xchg
in
mov
cltd
mov
js
test
inc
sub
inc
enter
pushf
or
dec
xor
pop
shlb
or
fdiv
pop
dec
mov
mov
sbb
test
cld
mov
ret
movsl
push
fcompl
mov
addl
iret
xor
sbb
inc
pop
lods
lea
lahf
outsl
inc
arpl
clc
fnsave
jecxz
dec
pop
jb
test
test
cltd
ds
inc
push
stos
dec
push
sbb
je
ror
push
add
dec
mov
pop
xchg
fldcw
scas
repnz
lret
add
push
test
cmp
enter
aam
cli
ja
cmc
ret
mov
pop
mov
jns
lcall
push
jecxz
shlb
pop
loope
push
call
ja
xchg
adc
pusha
orl
push
adc
sbb
jl
xchg
aas
adc
stc
pop
imul
ret
into
imul
pop
aad
test
popf
jmp
jmp
ret
test
jle
in
mov
mov
inc
push
xchg
data16
and
inc
movl
jae
repz
mov
cld
fldcw
leave
ret
xor
int3
mov
xchg
outsb
cmc
jae
sbb
adc
xlat
scas
sahf
and
loope
rorb
dec
xchg
dec
adc
sub
pop
fimull
jnp
mov
mov
popf
repnz
push
lods
imul
or
pushf
cmp
pushf
sbb
sub
ret
and
out
cli
push
and
int
fiadds
pop
xchg
dec
jle
mov
push
xchg
cmp
or
fbstp
jbe
aas
mov
sub
dec
jne
outsb
add
loop
dec
lods
mov
leave
popaw
sub
jne
jnp
scas
icebp
push
sub
dec
mov
cmp
in
mov
xor
idiv
mov
ror
jne
cmp
xor
ret
fistpll
jae
add
or
jbe
mov
push
xchg
shlb
sbb
ret
push
jo
sbb
jae
mov
mov
shlb
sub
add
xor
and
push
aaa
sub
jmp
add
and
mov
mov
xchg
js
in
rcll
dec
adc
inc
sub
mov
cmpsb
fldt
shll
and
pop
inc
clc
mov
sub
in
jnp
push
cltd
stc
add
test
and
push
jp
std
xor
cmp
push
mov
mov
push
pop
shlb
and
add
xchg
adc
in
dec
repnz
out
cmp
dec
ljmp
lds
cmp
push
mov
test
hlt
nop
dec
mov
int
mov
scas
lods
icebp
inc
or
les
and
mov
cmp
in
cli
push
mov
jmp
shl
pop
pop
xor
jecxz
movl
xchg
jg
pop
mov
das
xchg
fisubrl
inc
mov
push
lods
out
in
and
mov
xor
inc
sbb
mov
sub
pop
and
test
mov
movsb
bound
jbe
xchg
jne
pop
test
test
stc
sar
mov
add
inc
pop
test
icebp
sub
jg
dec
cmc
rcl
gs
sub
stc
sbb
push
out
addr16
leave
or
mov
pop
jnp
mov
mov
test
shlb
loop
xchg
lret
cs
push
jmp
hlt
jl
xor
lahf
test
in
test
mov
jp
aas
sub
pop
pop
sbb
add
sub
pushf
call
jns
aas
push
cltd
mov
and
adc
test
xor
mov
test
dec
inc
cmp
jmp
rorl
xchg
pusha
xchg
ljmp
gs
mov
iret
jne
imul
dec
adc
xor
mov
sahf
arpl
popa
fcomps
int3
add
mov
mov
push
adc
push
loope
out
neg
xchg
test
std
mov
popw
xchg
push
dec
inc
jnp
repz
add
jge
gs
cmpsl
pusha
outsb
mov
adc
imul
xchg
sbb
popa
btc
in
cmp
pop
xchg
jg
test
jns
mov
arpl
mov
lret
cmp
jmp
pusha
dec
aam
ja
xorb
inc
push
loope
add
xchg
jne
jle
inc
int3
xor
jns
xor
push
js
add
outsb
bound
shlb
sarl
jecxz
dec
jbe
popf
outsl
sbb
nopl
xor
cld
jnp
mov
stc
loope
dec
mov
add
cld
xlat
cmp
add
ljmp
sbb
jle
cmp
inc
fs
cli
sahf
adc
mov
fildll
pop
test
xor
sbbl
cld
fldcw
das
inc
enter
adc
subl
sub
lock
popf
mov
mov
insb
in
fisubrs
movsl
xchg
lahf
inc
dec
xlat
and
mov
add
jl
mov
mov
gs
fisubl
jno
mov
or
hlt
fnstcw
mov
pop
sbb
stos
aad
popa
dec
sub
xor
mov
mov
and
stos
shll
aam
pop
ds
pop
mov
icebp
pop
imul
repnz
aad
std
nop
ss
mov
mov
jecxz
push
mov
or
cmp
int
inc
push
aas
orl
cmpsl
jns
xchg
test
into
sbb
call
cmp
xlat
lcall
out
insl
cmp
push
das
xor
dec
xor
jmp
pop
cmp
pop
xchg
scas
adc
push
ds
push
xor
pop
mov
cmp
sbb
adc
pusha
test
xor
jnp
and
lahf
jo
jno
mov
push
fnstsw
outsb
test
shll
test
dec
stos
add
shll
sub
popa
enter
xchg
cmc
cmp
in
lods
add
hlt
insl
mov
fsubr
xor
jecxz
pop
movl
stos
mov
test
loop
test
fxch
aad
movsl
inc
repnz
dec
test
add
sbb
loope
fwait
aas
pop
push
push
inc
or
je
dec
jne
ljmp
stos
pop
fistpll
mov
inc
mov
or
xchg
jp
xlat
out
push
adc
dec
pop
call
aas
repz
inc
std
fs
push
or
rolb
lods
mov
lcall
xlat
in
into
adc
and
js
test
pop
push
or
scas
dec
sbb
cmpsl
xor
adc
cltd
ss
jnp
and
mov
inc
xchg
xchg
fldl
mov
jp
in
and
mov
mov
adc
push
dec
xchg
mov
aam
and
jns
lahf
popa
dec
insl
sbb
fcmovb
mov
or
outsl
dec
jne
and
loopne
xor
xor
out
adc
mov
fbstp
push
sar
sbb
inc
add
add
jo
in
sti
xor
pop
jae
test
shll
test
roll
ret
add
cld
inc
xchg
std
xlat
cld
movsb
inc
daa
push
ja
xchg
sarl
and
sub
xchg
shrl
inc
lock
xchg
ret
sbb
xchg
push
mov
ds
test
pushf
mov
xor
sub
mov
jecxz
or
and
mov
pop
or
in
dec
bound
clc
jmp
ficoms
call
xor
jp
and
leave
aam
jmp
jo
pusha
sub
inc
mov
into
or
lock
jno
inc
int3
push
mov
fidivrl
cmp
inc
addb
xchg
aam
movl
enter
stos
jo
or
jmp
sbbb
stos
xor
mov
cmp
xor
mov
mov
push
xor
arpl
jg
xor
jecxz
stos
pop
push
loope
mov
jl
lahf
or
test
imul
add
and
test
inc
xchg
roll
jle
cmp
lret
cmc
jno
fs
cmpsl
sub
dec
dec
jne
in
pusha
stc
orb
add
push
cld
fwait
jle
mov
push
inc
dec
enter
or
hlt
mov
or
dec
sbb
pop
aam
outsb
inc
mov
pusha
xor
dec
push
inc
lods
subb
outsb
sti
push
in
popw
xchg
push
add
ret
and
enter
addr16
ret
ds
inc
das
dec
daa
pop
fldcw
mov
jb
js
lret
aas
push
lret
aad
mov
and
enter
xor
mov
outsl
push
stos
xchg
mov
xchg
mov
repnz
aad
mov
sbb
dec
jmp
cmp
sub
mov
jl
jo
sbb
inc
mov
mov
mov
mov
int
adc
mov
adcb
ds
imul
test
hlt
pop
stos
gs
test
out
inc
pop
test
cmp
rcll
stos
ret
test
ljmp
test
push
mov
mov
faddl
push
lahf
repz
jp
outsl
adc
rcll
jg
repz
ret
pop
test
lret
dec
pop
testb
test
add
cmp
mov
adc
adc
cmpsb
sbb
sbb
fcomip
pop
push
lcall
and
inc
test
sub
push
mov
lahf
adc
shrb
mov
mov
push
xchg
in
xchg
pop
pop
inc
jne
mov
jl
cmp
xchg
imul
or
stos
movsl
pushf
and
fs
sub
dec
fs
or
in
test
int
inc
mov
jp
in
loop
shll
xor
jl
enter
sbb
inc
stos
xchg
outsl
lea
mov
mov
test
mul
inc
sub
jae
pop
popf
sbb
mov
lods
test
scas
test
ret
jg
scas
insl
dec
mov
aad
cmpsl
add
ret
inc
test
test
lret
mov
dec
jmp
ret
mov
and
icebp
pop
mov
scas
icebp
stos
pusha
or
sbb
sahf
and
test
inc
pushf
cwtl
out
push
mov
push
jmp
and
ss
mov
sub
into
call
das
rorb
mov
mov
sbb
stos
sbb
pusha
mov
and
test
clc
jecxz
leave
ds
movsl
icebp
pop
sub
pushf
and
or
es
clc
push
jle
mov
lea
sahf
addr16
in
mov
por
xor
sub
inc
test
dec
xor
sarl
jecxz
shlb
or
ficoms
arpl
repz
test
aas
sub
sub
inc
or
out
dec
inc
rcrb
fs
aam
mov
add
imul
insl
pop
inc
sub
test
jecxz
dec
cmp
jns
xor
sub
mov
psraw
leave
lds
jg
sub
push
mov
mov
lcall
pop
ss
int3
test
dec
stos
test
lods
test
pop
js
lret
testl
inc
cmp
add
push
scas
js
insb
loop
cmp
xchg
mov
xor
orl
or
aad
push
add
mov
pusha
test
pop
xlat
push
push
push
sub
movsb
fs
push
aaa
sbb
ret
cmc
jle
mov
sub
xor
mov
mov
ret
push
add
lods
call
nop
fldenv
jbe
xor
and
lds
mov
es
int
mov
xchg
ret
and
pop
xor
add
fsubrl
xchg
mov
test
cmpsb
cmp
std
dec
in
mov
cmp
pop
jg
jb
xor
out
mov
sub
push
pop
adc
mov
mov
add
mov
sub
iret
add
cmpsb
scas
and
leave
mov
lds
mov
pop
xchg
and
adc
in
xor
dec
mov
das
or
sub
enter
dec
orl
test
push
lds
adc
in
stos
std
mov
and
repz
mov
jns
iret
test
cltd
jo
add
and
movsl
movsb
push
mov
mov
cmp
mov
cmp
pop
hlt
xor
in
ja
mov
sub
fnsave
test
cli
add
sti
ss
jp
xchg
ds
push
test
sub
add
mov
or
jp
mov
and
mov
jns
mov
and
arpl
testl
nop
add
ja
cltd
stos
lcall
xchg
nop
mov
dec
push
mov
jno
inc
sub
mov
xchg
rclb
mov
ror
jg
jns
test
sbb
ret
add
loop
push
mov
add
mov
scas
push
or
push
loop
mov
jge
insl
xchg
jl
pop
outsb
mov
cli
and
or
mov
lods
pop
mov
imulb
mov
adcb
push
test
push
xchg
and
push
in
sbb
lods
sbb
test
cmp
test
or
mov
hlt
inc
cmp
mov
aas
sti
jge
xor
cmp
jle
xchg
nop
cli
bound
sub
jmp
inc
inc
insl
cmc
inc
mov
insl
or
xchg
jp
jno
fmuls
pop
pop
mov
fstps
test
inc
lea
sub
xchg
xchg
ret
cmpsb
jg
inc
cmpsl
inc
in
add
mov
pop
cmc
adc
dec
pop
cmc
les
xchg
mov
pop
jle
mov
lret
mov
gs
adc
push
rcl
fldenv
fs
sbb
xor
fldt
lcall
insl
ret
out
cwtl
dec
ret
loope
sar
stos
mov
jo
add
stos
sbb
mov
shll
out
adc
xor
cmp
movsb
xor
addr16
or
pop
addr16
lret
push
shrb
and
adc
ds
cmp
test
mov
aam
into
sti
test
inc
lods
hlt
imul
mov
cmp
or
inc
icebp
in
orb
les
pop
push
repz
inc
cmp
or
test
push
xor
add
push
dec
pop
call
sub
cmp
mov
or
and
jns
fsub
add
imul
cli
pop
out
cld
dec
jl
xor
es
clc
ret
neg
test
scas
add
std
in
cmpl
les
push
pop
adc
mov
cmpsl
lea
call
test
ja
sbb
ds
das
fisubrl
mov
xor
and
mov
outsl
mov
test
or
iret
enter
cmp
cmpsb
rcrl
jns
out
test
lret
test
mov
cmp
mov
add
push
test
dec
movsb
pop
pop
mov
movsl
rorl
adc
sbb
sub
adc
pop
adc
divl
push
les
pop
cmpsl
loopne
lods
mov
fs
xorb
stos
mov
jle
xchg
inc
jns
test
adc
and
jp
mov
nop
mov
pop
sbb
cmpsl
dec
inc
push
mov
fisubrl
cwtl
or
enter
pop
rcl
test
mov
sub
sbb
xchg
test
fidivs
out
or
or
rcll
pop
sub
pusha
es
pop
mov
imul
lods
inc
test
pop
cld
or
mov
popa
stos
test
mov
stos
push
scas
aas
push
imul
jmp
sbb
push
cmpsb
shrl
shll
out
sbb
aad
dec
push
cmp
pop
adc
stc
sbb
lods
jecxz
sbb
fistps
ja
xchg
adc
insl
repz
cmpsb
ficompl
cmpsl
add
xor
pop
adc
insb
xchg
jb
insb
je
jl
sub
nop
stos
mov
cmc
andb
sbb
xchg
xorl
pop
rorl
mov
sub
stos
in
mov
scas
jo
cmp
cmpsl
pop
push
cmc
outsl
movsl
cli
mov
pop
xchg
lahf
xchg
test
push
insb
inc
ds
ret
movsl
repnz
pop
lcall
pop
movsl
aam
out
xchg
enter
add
test
sbb
xchg
ret
outsb
nop
sahf
shrl
sub
xchg
cmp
inc
sbb
jmp
adc
sti
xchg
inc
xchg
and
cmp
mov
aas
dec
stos
test
out
cli
mov
fadd
jg
in
mov
adc
dec
int
pop
mov
out
xor
out
mov
xor
and
push
mov
sub
shll
orl
cmpsl
fdivrl
adc
cmovno
sub
adc
or
cmp
outsb
mov
xlat
imul
jne
push
scas
loopne
hlt
push
sub
add
pop
lret
es
cmp
bound
pop
test
adc
xor
mov
xor
fistl
xor
fwait
pop
mov
ret
test
mov
sbb
jmp
jnp
jbe
and
sarl
enter
mov
push
pop
adcl
xor
insl
mov
dec
mov
or
push
pop
mov
mov
mov
jge
cmpl
mov
scas
pop
xchg
inc
pop
test
fists
inc
sahf
inc
fprem1
inc
data16
fnsave
fnstcw
jb
test
mov
jle
les
test
adcb
cmp
test
and
dec
popf
xor
fbstp
mov
out
inc
insl
pop
int
push
scas
lea
push
ret
cmp
loope
lods
into
aaa
xor
mov
movsl
mov
int3
jnp
imul
xchg
xchg
int3
test
pop
mov
in
loope
test
push
push
inc
and
sub
mov
fcmovnb
push
jl
xor
xchg
lret
jmp
fwait
or
inc
test
movsl
add
lds
jbe
lcall
inc
mov
inc
inc
mov
inc
cwtl
mov
cmc
mov
dec
mov
cmp
addr16
push
dec
push
rcrl
jnp
test
sub
inc
mov
enter
sti
rcll
popw
push
push
fs
or
subl
inc
sbb
pop
scas
aad
insb
inc
xchg
or
push
mov
fwait
dec
fsubrl
mov
sbb
xchg
xchg
daa
jg
push
cmpb
mov
lret
sub
mov
or
mov
mov
push
push
mov
fwait
adc
cmp
fiaddl
popa
adc
cmp
fs
enter
test
loopne
enter
movl
push
and
sbb
xchg
inc
xor
scas
jp
sub
insl
gs
mov
push
hlt
mov
jne
lds
mov
sti
addl
xor
jne
xchg
insb
stos
pop
add
inc
jl
dec
add
fwait
rcrl
xchg
test
fistpl
sbb
mov
inc
dec
jnp
sahf
or
dec
xlat
test
pop
cmp
jmp
psllw
es
and
sbb
jmp
mov
pop
and
adc
mov
mov
scas
loopne
xor
mov
mov
test
mov
adc
pop
cmpsl
mov
nop
sub
cli
mov
sub
lret
dec
and
int3
jp
add
js
movsl
stc
dec
pop
xchg
pop
dec
sbb
or
fnstsw
popf
leave
cmp
aas
addr16
mov
xchg
sub
jecxz
shll
aas
and
jb
test
in
jne
jnp
scas
inc
pop
fsubrp
ret
addr16
mov
ds
cmp
pop
add
cltd
lea
aas
xor
adc
inc
pop
in
scas
sbb
out
and
in
mov
rcll
pop
xor
enter
jmp
inc
sbb
xchg
mov
std
pop
movl
mov
add
ret
jne
stos
imul
imul
jecxz
ret
add
js
xchg
scas
fimuls
dec
pop
mov
cmp
fadd
sub
inc
xchg
or
and
mov
adc
sbb
int
loope
ret
roll
jo
jmp
adc
ret
das
push
scas
jmp
or
adc
out
jecxz
pop
push
inc
cwtl
outsb
push
or
sub
icebp
pop
mov
cmpsl
cld
stos
dec
and
ja
popa
ljmp
xchg
inc
ffreep
add
out
mov
test
adc
mov
faddp
xchg
pusha
leave
loope
add
test
ror
and
xorl
int
test
mov
add
pop
enter
add
in
mov
popf
loope
add
sub
fbstp
xchg
jae
push
ss
push
sub
popf
test
enter
jle
aas
testl
mov
sbb
ficoms
dec
jmp
push
xchg
inc
inc
cmp
mov
in
mov
jecxz
xor
and
test
outsb
std
in
push
inc
inc
push
mov
xor
jns
mov
inc
pop
lret
lds
adc
int
sub
lods
and
test
jnp
clc
jnp
mov
pop
test
jmp
cmp
lds
test
xchg
call
inc
jg
aam
leave
add
stos
lret
pop
sti
lock
shll
sbb
cmc
dec
int
dec
mov
nop
mov
jl
mov
dec
mov
imul
add
xchg
aam
jmp
jb
pop
or
ds
inc
or
jb
bound
out
mov
inc
xchg
daa
dec
mov
mov
test
xor
fsubrl
sub
push
lock
cmp
add
rcll
ret
shlb
mov
lock
js
xchg
jno
push
fistps
ds
xorb
aaa
or
add
dec
addb
dec
cmp
pop
xchg
dec
jno
jmp
or
sub
xchg
sub
imul
push
push
stos
adc
xor
test
push
add
cmpsb
or
dec
dec
scas
sbb
dec
jmp
enter
pop
sub
jg
dec
sbb
pop
inc
leave
jns
lcall
pop
inc
pop
sbb
dec
mov
mov
pop
pop
es
jae
mov
dec
sarl
dec
xor
xchg
bt
cmp
dec
or
jae
push
jae
mov
iret
ret
pop
lret
mov
xchg
rdpmc
pop
adc
lcall
dec
leave
add
in
ret
data16
and
in
roll
xchg
push
hlt
and
mov
mov
andb
mov
ror
movsb
ljmp
mov
add
xor
jle
fisttps
add
andl
jl
mov
inc
jle
sahf
je
mov
movsl
adc
jmp
inc
jbe
dec
scas
sar
add
add
orl
fs
cmpsl
mov
shll
shll
inc
inc
divl
ja
lahf
mov
jbe
subb
fyl2x
popa
mov
lds
mov
pop
cmp
subl
push
xchg
in
push
rcrl
fildll
cmp
mov
or
js
and
or
xor
leave
adc
lods
daa
testl
cld
fidivrl
call
aas
imull
sahf
pop
int
xor
jo
adc
add
or
jns,pn
dec
rcrb
mov
mov
inc
aas
loopne
test
js
mov
mov
push
mov
sbb
mov
cmp
mov
dec
inc
fnstenv
mov
loope
pop
incl
rorb
lods
test
cmp
fsubr
adc
mov
push
sub
add
minps
out
adc
jl
jae
jae
shll
test
sahf
out
mov
mov
in
pushf
inc
mov
pop
data16
cmpsb
adc
lret
add
fs
cmp
hlt
pop
jb
mov
repnz
sbb
lods
jno
test
sahf
lods
dec
in
add
add
adc
add
push
mov
ss
or
or
pop
icebp
adc
and
pop
push
dec
cli
push
mov
add
cmp
pop
in
addl
and
pop
test
out
push
icebp
lret
dec
push
pop
dec
test
or
out
push
imul
outsl
out
inc
xchg
xor
int
push
or
jne
or
in
push
mov
dec
add
out
paddb
or
imul
jecxz
in
push
enter
sbb
testb
ret
dec
jns
and
or
push
pop
push
mov
arpl
fiadds
aad
pop
add
aad
or
sub
or
aas
pop
xchg
testl
mov
xchg
adc
call
int3
test
mov
sahf
sbb
pop
xorb
mov
inc
mov
mov
das
inc
mov
push
cs
shrb
add
or
movsb
ror
mov
fldl
or
rorl
sub
pop
jp
sub
adc
or
std
sub
sub
je
rcr
es
mov
cmpsb
bound
ss
or
mov
addr16
in
lds
ret
in
lcall
push
aaa
aad
mov
xorb
popa
leave
pop
jbe
test
mov
jns
xchg
pop
dec
sub
js
jns
pop
jge
or
mov
mov
test
fs
mov
mov
lret
shl
pop
dec
je
lods
rcrb
js
sbb
test
adc
cmp
xor
pop
repz
cmp
pop
xor
movsb
mov
jns
pop
sbb
cmp
aaa
fs
jecxz
jno
test
dec
inc
cmp
mov
into
aad
mov
adc
ret
dec
xor
xor
push
into
pop
scas
cwtl
sar
lea
fdivrs
leave
pop
test
adc
and
insl
mov
jns
sbb
movsb
test
jae
out
js
inc
jle
js
mov
dec
movl
jno
test
pop
pop
inc
lret
cmpsl
repz
std
mov
fistpl
cmp
shr
cmpsb
test
jl
in
mov
imul
stos
add
mov
sbb
push
push
and
aas
arpl
cmc
add
rcr
or
or
js
mov
mov
shr
loopne
stos
mov
cmp
ret
mov
ret
jb
jge
jmp
sub
inc
clc
divl
ret
jp
xor
mov
push
enter
jl
fildl
adc
sbb
mov
push
sbb
aas
jg
pop
pop
dec
inc
jbe
cld
mov
cltd
pop
scas
repz
pop
cmc
xor
pop
in
jne
aaa
sbbl
outsb
pusha
sub
mov
enter
mov
add
aad
data16
test
jmp
jp
es
lret
jno
and
dec
pop
jle
mov
lret
mov
jnp
addr16
jg
fnstcw
jecxz
ss
lahf
cmc
mov
or
or
inc
insl
sbb
fmull
or
es
aas
inc
pop
pop
ror
nop
pop
jnp
xchg
xor
cmc
xor
out
insb
mov
pop
mov
sub
loopne
xor
dec
fimuls
sbb
xchg
mov
jns
mov
enter
xor
mov
or
cwtl
les
inc
inc
hlt
addr16
jp
mov
pushf
adc
sub
dec
cld
fcompl
hlt
mov
push
cwtl
mov
mov
cld
inc
inc
out
cmp
push
mov
icebp
test
cmp
sarl
push
cmp
mov
loope
jns
adc
icebp
popl
out
sbb
arpl
ja
ror
mov
repz
mov
sub
hlt
clc
xor
outsl
outsb
pop
push
pushf
mov
adc
ret
jbe
push
and
jl
cltd
inc
test
sub
push
fwait
dec
xor
gs
addr16
ljmp
mov
test
pop
xchg
mov
insb
mov
adc
inc
fisttpll
xchg
aam
mov
rclb
mov
cmp
test
inc
xchg
push
push
cmp
out
ljmp
mov
mov
pop
dec
divl
push
pusha
push
push
mov
imul
insb
push
popf
cmp
pop
psllw
sbb
xchg
and
mov
aaa
fidivrl
mov
cmpsl
fisttpl
fs
fisubs
cmp
sbb
mov
mov
xchg
xchg
add
jecxz
adc
add
aad
jae
lods
sbb
mov
lahf
dec
add
mov
out
dec
in
sbb
sarl
cmpl
cwtl
xor
mov
mov
mov
and
pop
mov
and
xchg
sub
stos
jno
jb
mov
xor
mov
lret
mov
into
sub
jg
add
les
mov
mov
lcall
test
rcll
pop
jl
cli
and
pop
in
jl
add
xchg
adc
sbb
add
repz
xchg
mov
jl
pop
add
pop
movl
mov
push
stos
add
xchg
jb
lahf
dec
and
mov
dec
cmpsb
push
ror
mov
cld
dec
push
rcrl
or
dec
aaa
cli
or
mov
dec
imul
mov
test
in
ret
jne
popf
dec
jge
lret
jle
lahf
dec
mov
vpcmpgtb
mov
jno
inc
inc
test
adc
out
or
add
lret
shrl
and
inc
lds
in
jne
addl
dec
mov
sahf
sbbl
in
hlt
mov
dec
stos
in
mov
cld
movsl
outsl
push
lods
out
dec
mov
mov
bound
lods
mov
leave
jno
sub
fnstcw
in
ret
mov
imul
or
daa
lods
jmp
add
xchg
cmc
jp
ret
push
and
lock
add
outsb
js
into
aam
push
xchg
std
into
inc
out
or
sbb
push
fwait
stos
mov
xchg
xor
push
divl
leave
pop
lret
sub
mov
inc
inc
or
hlt
mov
mov
fidivrl
daa
aad
push
pop
mov
mov
xchg
test
pop
int
stc
push
bound
xchg
mov
shl
ret
xor
out
mov
cmpps
jg
mov
pop
adcb
pushf
dec
mov
add
push
mov
cs
sub
sub
mov
ja
push
sbb
test
jo
jmp
cmc
pop
mov
stos
cmp
xchg
inc
or
lret
in
icebp
xor
dec
aaa
cmp
or
push
ja
les
mov
mov
jg
fimull
dec
inc
mov
test
icebp
lahf
and
mov
mov
sub
pop
subl
sbb
pop
adc
xlat
test
mov
aad
inc
out
rorl
popf
jmp
mov
inc
cmp
je
mov
adc
lcall
xchg
ss
jo
or
mov
lea
or
jns
test
dec
scas
pop
inc
icebp
out
cwtl
ds
pop
jecxz
enter
add
adc
cmp
cmp
xchg
ret
xlat
cmc
push
repz
add
cltd
out
dec
pop
hlt
pop
movsb
sub
lret
je
es
movsb
mov
mov
xor
lds
pop
jne
les
jl
std
clc
test
cmpsb
sbb
orl
jno
out
push
cmpsl
push
rolb
pop
stos
mov
pop
ret
inc
js
xor
sub
js
mov
or
test
xchg
cmp
adc
mov
mov
popl
adc
cmpsl
test
insb
mov
dec
sarb
cmc
ret
int
cmp
roll
mov
js
dec
sbb
test
sub
enter
push
xor
enter
sbb
cmp
pop
rcrl
mov
mov
jo
ja
subl
out
jle
pop
in
fnsave
pop
repnz
movl
or
out
jmp
adc
pushf
data16
into
mov
lahf
xor
and
fldl
or
inc
mov
mov
out
pop
jno
cmpsl
mov
fiaddl
dec
and
xlat
push
lcall
push
lahf
jnp
aad
push
pop
mov
pop
jo
test
push
or
in
aam
mov
pusha
xchg
out
cltd
push
outsb
push
mov
leave
pop
gs
out
sarl
scas
fstpl
pop
stos
bound
in
fldcw
js
cmpl
jp
push
mov
out
out
es
das
xor
cmpsl
inc
or
unpcklps
jle
ds
out
cmp
dec
adc
jp
punpckhdq
out
data16
in
mov
add
jmp
mov
cmc
sbbl
mov
test
and
mov
sub
push
add
movb
xor
aad
test
dec
ret
lret
sub
nop
aad
or
mov
sarb
in
inc
xchg
push
fldenv
test
or
xor
jno
in
add
aas
pop
add
and
jo
sbb
sahf
in
pop
mov
fisttpll
mov
xor
pop
loopne
sub
xor
add
pop
scas
mov
jnp
lret
mov
negl
lock
or
into
test
adc
lret
cmpsb
js
or
add
jne
mov
add
test
mov
outsb
mov
cmp
add
mov
jp
push
or
orb
lds
in
inc
nop
je
push
add
std
pop
in
pop
xchg
push
sub
cmp
mov
stc
add
movsb
adc
icebp
ds
mov
cmc
pop
jl
add
mov
rorb
adc
inc
mov
xor
jl
aam
push
cwtl
mov
pop
or
or
sub
sub
push
sbb
xlat
fists
push
jo
sarl
cmp
outsb
push
sbb
add
mov
xchg
nop
dec
je
imul
inc
mov
jl
mov
les
shufps
jmp
cmpb
loopne
pop
adc
stc
sbb
sbb
push
test
ret
insl
add
loopne
or
test
xchg
mov
cmp
sub
jo
sub
xchg
bound
loopne
cmp
xor
mov
test
ret
lret
mov
push
jecxz
inc
add
mov
test
mov
jmp
pop
jae
js
jl
xchg
nop
movb
test
cs
ljmp
pop
pop
cmpsl
js
test
add
pop
test
or
pop
pop
push
insl
push
test
cmp
lock
xor
imul
mov
test
in
sub
xor
sub
bound
push
stos
shll
xor
shll
mov
lret
inc
movl
push
add
test
sti
mov
arpl
xor
into
aaa
das
repnz
insb
or
loopne
sarb
ret
leave
mov
pop
mov
imul
xchg
add
popf
inc
jge
or
filds
xchg
pop
inc
xchg
addr16
inc
xor
mov
jle
fxtract
out
rorl
test
add
xlat
mov
jno
dec
andl
out
mov
jnp
jb
enter
mov
mov
mov
cltd
pop
cmp
lods
inc
cmp
in
cmpsl
std
cwtl
aad
nop
inc
movsl
xchg
cmp
dec
inc
mov
cmp
cwtl
repz
mov
dec
lret
pop
mov
pushf
hlt
xchg
mov
daa
pusha
xchg
push
adc
sti
shrl
mov
repnz
jecxz
push
add
dec
mov
add
jno
sub
cmp
push
iret
jg
loope
or
ss
shl
inc
mov
aas
dec
pop
in
mov
bound
or
dec
fidivs
popf
daa
and
inc
xor
icebp
fsubl
shll
js
cmpl
rorb
inc
pusha
loop
cmp
bswap
stos
clc
inc
mov
mov
call
cmp
add
aas
cmp
jle
cltd
xor
jg
mov
loope
testl
shrb
cmp
leave
xchg
cld
mov
sbb
fnstenv
mov
test
in
or
sbb
movsl
xchg
push
mov
jb
mov
cli
push
jle
pop
imul
dec
ret
mov
cmp
xor
lock
pop
xchg
dec
cmp
mov
test
mov
add
imul
sbb
fs
push
inc
movzwl
jle
icebp
adc
int
pop
cmp
decb
push
sub
std
add
es
jge
push
out
jb
or
mov
push
adc
dec
loopne
aad
in
inc
mov
cmp
push
movsb
sarb
jle
dec
and
dec
pop
scas
inc
cmp
test
cld
arpl
xor
shl
push
test
add
sbb
mov
fistps
push
dec
sahf
pop
mov
add
cltd
ljmp
lds
add
es
movsl
aas
mov
cmc
je
mov
and
xorl
push
dec
cld
push
add
cmp
xlat
cmpsb
push
cmpsl
push
or
inc
adc
daa
mov
in
repz
dec
or
mov
inc
sbb
test
jno
jp
or
fs
in
sbb
jns
popa
repz
push
xor
es
stc
enter
arpl
repz
jo
cmp
test
jnp
or
mov
in
jmp
cwtl
lret
orl
lds
mov
int
add
dec
inc
fdivl
test
push
pop
decb
add
outsl
aam
sub
ffree
mov
fcom
stos
mov
test
inc
addr16
add
das
fwait
mov
int
pusha
pop
nop
sti
cli
negl
orb
inc
ret
xor
enter
xlat
mov
sbb
push
push
mov
dec
subb
pop
pop
xchg
mov
cmpsb
ret
andl
mov
jle
jg
or
ljmp
jle
notb
int
test
xor
add
lods
mov
call
lods
jp
adc
rol
mov
push
and
test
out
nop
cmp
dec
push
mov
movsl
dec
divb
mov
xor
stos
sbb
sbb
mov
jl
mov
in
dec
orl
enter
pop
add
push
js
jecxz
in
test
test
mov
test
jl
fwait
aaa
adc
mov
cld
lret
test
sbb
ficompl
dec
stc
pop
fdivrl
inc
mov
aad
dec
aaa
mov
int3
push
or
ss
in
mov
dec
test
imul
add
jp
and
daa
sub
inc
roll
push
push
shlb
mov
mov
addr16
popa
xlat
and
adc
push
add
in
loope
popa
xor
mov
scas
sbb
orb
push
ficoml
lret
call
fs
in
jecxz
pop
mov
xor
sub
cmp
and
push
mov
push
xchg
fprem1
test
mov
pop
mov
fistpll
fdivl
cmpb
jge
xor
test
sub
sub
xor
movsb
stos
push
xorb
pop
jmp
xchg
fldt
in
stos
xchg
mov
jg
push
ljmp
enter
mov
sbb
xor
sub
push
sbb
mov
mov
mov
movb
jo
into
xor
cmc
mov
dec
push
fisubs
xchg
xchg
hlt
jb
sub
mov
imul
add
jmp
ljmp
sbb
rcrb
sub
das
movsb
sub
push
adc
pop
pushf
xchg
fistps
sbb
xchg
in
xor
ret
aas
or
jne
sub
stc
fsubr
jge
enter
sbb
in
inc
dec
sbb
add
icebp
cmp
cmp
add
sub
jns
push
dec
cmpsb
sbbl
adc
or
dec
push
inc
int
sti
xchg
das
cmovno
in
stos
icebp
push
sbb
cmp
dec
in
ror
jmp
lahf
cmp
dec
cmp
jno
push
add
in
daa
cmpsb
xchg
shlb
repnz
add
dec
sub
in
std
inc
mov
cmc
inc
mov
outsl
shll
hlt
sbb
mov
push
push
sbb
push
cmp
stos
cmc
fsts
jns
inc
lods
cmp
cmp
ret
lret
sarb
aaa
ret
dec
int
test
jp
out
leave
push
shl
mov
xchg
ret
movl
mov
aad
jle
popf
enter
jle
and
lock
inc
mov
add
mov
xchg
jle
mov
pop
test
pusha
jae
fwait
push
jl
jno
andl
jns
leave
sbb
cmc
mov
arpl
cld
out
xchg
lret
pop
es
push
mov
sbb
icebp
fs
mov
jmp
cwtl
mov
ret
icebp
movl
test
cli
adcb
imul
fimull
ret
push
clc
push
lds
jbe
dec
xchg
xor
loopne
sbb
sti
ljmp
jecxz
jne
mov
sbb
mov
mov
xchg
out
add
int
jae
add
test
inc
stos
dec
sbbl
mov
jg,pn
xor
add
mov
std
mov
arpl
mov
dec
stc
push
sbb
test
std
bound
mov
movsb
xchg
jne
xchg
call
sub
popf
and
jl
aam
lret
sbb
lret
mov
fwait
add
mov
mov
sbb
lret
mov
adc
fwait
mov
leave
jns
push
adc
sahf
fsub
mov
xor
mov
aam
xchg
xlat
mov
add
mov
push
jecxz
mov
test
inc
pop
mov
inc
mov
popfw
jl
leave
sub
adc
js
or
mov
fisttpll
jbe
jp
call
test
or
outsl
sbb
std
stc
pop
lret
jns
div
mov
rcll
fwait
adc
add
push
roll
jno
int3
push
xorb
add
add
stc
ss
mov
adc
inc
xchg
cld
aam
sarb
in
or
dec
hlt
xchg
adc
sahf
and
popa
jb
adc
sbb
ret
pop
out
xor
insl
mov
push
push
fisubrl
imul
test
cld
in
and
xor
jg
jmp
rorl
xor
nop
das
addr16
test
inc
js
xchg
sti
rcl
stc
test
sbb
mov
call
push
dec
mov
ret
push
mov
jp
mov
inc
cmp
pop
adc
mov
cmpsl
or
bound
jle
addr16
jp
dec
sar
fimuls
insl
hlt
cmpsb
ds
aam
pusha
or
test
sbb
add
dec
cmpsl
jae
pop
mov
insl
lock
or
lcall
ret
popf
je
jns
mov
sub
sub
icebp
test
scas
mov
out
pop
cmp
mov
pusha
pop
inc
jmp
mov
sub
ja
and
jg
cmc
lfs
arpl
mov
mov
fcomps
mov
xorb
pop
and
xchg
xchg
test
sbb
add
or
in
xchg
xor
jo
outsb
loope
sub
das
in
add
nop
lock
mov
pusha
sbb
addb
jae
in
out
mov
dec
mulb
stos
mov
dec
mov
in
cmpsb
lahf
push
xor
jns
jecxz
push
test
mov
bound
leave
lea
lock
cld
xorb
lds
adc
gs
adc
adc
mov
xchg
mov
or
dec
test
cmpsb
xor
pop
mov
adc
xor
in
sub
popf
imul
shrb
sarl
cmp
js
sbb
adc
cmpl
or
inc
arpl
xlat
adc
iret
fstl
insb
or
xchg
aaa
jbe
sbb
mov
pop
popa
mov
leave
cmpsl
addb
sahf
push
fnsave
cmp
add
mov
sbb
gs
inc
jbe
cltd
sub
push
sbb
jge
dec
jb
movsl
mov
mov
pop
movsb
mov
jo
ret
aad
jle
xchg
repnz
mov
mov
cli
roll
sbb
mov
je
mov
outsl
ret
cmc
push
dec
sbb
dec
ret
rcrl
jnp
mov
dec
xlat
cmp
dec
scas
lret
jle
push
shll
sbb
mov
int
out
inc
jno
cmp
repnz
jg
sub
xor
or
movsl
lret
ds
arpl
ror
add
pop
repz
jmp
inc
and
inc
int3
jnp
pop
inc
pop
loope
mov
inc
pop
cli
mov
push
cwtl
xchg
pop
mov
push
xchg
les
mov
out
adc
sbb
enter
sbb
mov
xchg
movsb
cmc
pop
jl
out
imul
mov
es
pusha
or
xor
test
add
pop
pop
insl
xchg
hlt
popa
decb
dec
mov
push
out
push
adc
push
push
cld
fsubs
and
ja
pop
fcmovnb
jg
add
in
gs
sub
mov
scas
shl
mov
jp
mov
pop
fs
sub
in
sub
arpl
sar
dec
and
data16
repnz
mov
outsb
or
movsl
test
rcll
add
leave
in
adcl
push
and
and
push
dec
mov
push
pushf
rcrl
jo
lcall
mov
xor
scas
jg
hlt
inc
mov
cltd
sarb
sub
add
jb
orl
loope
out
and
in
mov
nop
jae
mov
jmp
mov
sub
dec
mov
push
dec
icebp
push
test
cld
cmp
cmp
jle
loope,pt
mov
add
jae
daa
mov
lret
push
out
push
or
lahf
mov
or
xchg
scas
lods
dec
addb
fcompl
outsb
dec
in
push
fldcw
sbb
inc
push
scas
test
xor
arpl
test
scas
outsl
xor
lahf
push
fstpt
pop
jae
push
pop
scas
int3
ljmp
and
in
lock
mov
pop
loopne
es
lret
mov
jl
xchg
gs
and
cmc
xor
mov
pop
je
inc
jo
lea
js
loopne
repnz
loop
jmp
stc
xor
ds
test
xchg
arpl
mov
pop
mov
mov
imul
unpcklps
mov
insb
rclb
mov
adc
enter
outsb
aas
imul
sbb
add
xchg
xchg
test
jnp
pusha
xor
xchg
loop
add
mov
xchg
push
xor
inc
adc
xchg
adc
insb
outsl
nop
cmpsl
lods
dec
je
sbb
sub
popf
outsl
in
jne
jle
lea
loope
dec
mov
xor
inc
pop
in
push
inc
mov
outsb
cwtl
sub
inc
outsb
insl
divb
lcall
jl
ss
cmp
insl
sub
xor
in
xor
fadd
sbb
cmpsb
mov
movsb
pop
and
xchg
scas
in
push
je
sub
jg
sub
inc
xchg
pusha
mov
jns
pushf
sbb
stc
mov
xor
lods
cmp
mov
imul
xchg
rolb
sub
fstpt
data16
les
jg
mov
or
ret
jl
xchg
test
clc
push
and
xor
fwait
xor
out
mov
pop
add
xor
adc
mov
ds
dec
roll
ret
mov
roll
lahf
imul
push
mov
and
icebp
jb
fadds
imul
dec
sbb
repz
mov
or
push
mov
int
lods
lcall
jmp
repz
or
dec
inc
leave
inc
in
int3
add
dec
pop
fistps
fcmovnbe
jo
xorb
add
dec
rcrl
jmp
in
dec
jg
int
shl
sub
xor
sub
inc
aam
jnp
loope
sbb
xor
fsubs
mov
dec
popf
push
pop
ljmp
pushl
xor
dec
sahf
jns
add
ja
leave
inc
add
or
pop
mov
test
mov
repz
push
mov
fistl
jg
insl
cwtl
movl
or
shrb
and
inc
mov
jns
jne
test
inc
pop
inc
stos
aad
push
ret
cmc
add
aad
dec
xor
loop
test
xchg
dec
adc
sbb
popa
pop
push
imul
imul
rorl
fistps
fcoms
test
xchg
add
cld
sbb
outsl
icebp
sbb
fdivl
and
adc
mov
rcll
adc
into
sub
push
and
mov
dec
adc
test
pop
leave
ss
jo
ret
test
and
shll
test
scas
push
addb
scas
inc
std
call
dec
adc
cmpsb
in
xor
push
mov
inc
jo
sub
mov
adc
fwait
inc
mov
cmp
outsb
test
in
jg
dec
sub
jo
dec
in
mov
scas
repz
jecxz
xchg
js
out
mov
mov
adc
ret
and
add
xchg
frstor
sbb
or
pop
cwtl
sbb
cmpsb
loope
cs
stos
mov
jnp
pop
stc
aam
cld
movsb
push
xchg
add
icebp
hlt
adc
or
mov
add
andb
xor
ret
insl
popf
das
cs
stos
sarb
jae
enter
add
dec
jno
xor
push
xor
mov
aas
leave
inc
sbb
mov
push
std
or
mov
xchg
pop
mov
sti
ljmp
dec
dec
pop
sbb
jb
lock
sbb
je
mov
mov
gs
mov
mov
mov
cmp
icebp
mov
enter
test
or
inc
mov
in
testb
mov
pop
mov
aam
stc
mov
sub
and
mov
or
sti
jnp
leave
sub
std
inc
mov
add
cmpsb
dec
aaa
xor
icebp
jne
mov
fs
stc
inc
or
jmp
mov
es
xor
test
push
pop
sub
push
inc
icebp
data16
inc
ds
fs
into
mov
lods
mov
test
outsl
dec
pop
inc
pop
pop
sbb
repnz
xchg
jl
pop
dec
add
push
lret
add
rorl
pop
jnp
das
scas
xchg
fwait
arpl
fnstenv
lds
push
and
sub
mov
dec
inc
xchg
mov
sbb
inc
xchg
aad
jg
mov
and
addb
pop
je
push
jb
jb
rcrl
pop
cmc
dec
and
pop
jno
mov
dec
cmp
mov
test
data16
mov
pop
and
cmp
gs
cmp
pusha
pop
aad
pop
jae
jns
das
pushf
jne
fstl
mov
sub
dec
push
scas
lods
loope
stos
rclb
pop
orl
mov
inc
wbinvd
pop
push
outsb
out
movsb
xlat
outsb
or
jae
xor
js
out
or
mov
mov
movsb
test
and
mov
lret
les
and
pop
out
in
sbb
xor
loope
call
lcall
push
and
icebp
in
sub
pop
pop
mov
or
and
mov
mov
adc
popa
pop
pop
and
xchg
mov
xchg
adc
cltd
push
adc
cmpl
test
mov
test
clc
mov
mov
jnp
jb
ret
imul
push
mov
jl
andps
insb
pop
add
xor
repz
sarb
xor
mov
push
jns
fsubs
loop
mov
inc
or
loope
pop
jo
push
mov
pop
icebp
push
dec
enter
ret
xor
shlb
jno
int3
pop
ja
in
test
test
push
xchg
ds
push
inc
shl
ss
adc
xor
dec
ds
jno
jmp
aad
leave
test
adc
cli
popa
fcom
sbb
lret
jge
pusha
dec
add
rol
cltd
jp
pop
jle
cltd
and
ds
fnsave
sbb
inc
or
cmp
iret
int
jno
xor
test
sub
dec
cmp
sub
jl
xor
mov
call
rol
pop
xchg
lahf
test
jb
mov
idivb
stc
xchg
mov
dec
sbb
divl
or
ret
and
adc
loope
mov
or
ja
sbb
adc
imul
or
mov
movaps
push
xor
jns
or
shrd
outsl
adc
jno
mov
xchg
sub
inc
call
sbb
ficomps
xor
push
sti
subb
mov
cltd
repz
nop
ljmp
mov
adc
lahf
in
sub
sbb
xor
nop
pop
mov
push
or
push
mov
mov
mov
test
andl
repz
jle
shrl
inc
dec
pop
test
test
jns
data16
inc
rorb
lock
fmull
test
call
rcrl
dec
pop
cmp
stos
add
je
jp
into
dec
push
testb
rcll
aaa
push
mov
cmc
dec
cmc
lcall
pop
adcb
mov
xchg
daa
xor
and
push
jle
loopne
addr16
sub
lahf
mov
dec
lcall
cmc
inc
aas
pop
nop
cmc
leave
jno
pushf
aas
rol
sti
or
push
hlt
loope
dec
xlat
sub
inc
push
xor
adc
cwtl
fwait
enter
and
imul
and
js
stc
dec
lret
fcom
outsl
fidivl
add
lods
mov
xchg
xor
test
stc
xor
roll
or
out
pop
popa
cmpsl
cmp
movsl
out
test
test
pop
pushf
aaa
or
sub
sub
mov
aas
or
movsb
hlt
add
outsl
andb
mov
jg
push
pop
mov
stos
mov
iret
std
xchg
mov
lea
fst
dec
scas
pop
mov
mov
or
jne
pop
andb
mov
cwtl
iret
add
sbb
pop
nop
je
jno
push
test
cmpsb
mov
mov
into
aaa
in
pop
enter
push
push
in
mov
pop
push
push
and
les
push
cmp
mov
insb
inc
xor
xor
hlt
lods
cmp
adc
mov
out
movsl
test
movzbl
xchg
jnp
inc
leave
sub
addr16
or
sahf
and
mov
adc
mov
iret
mov
enter
sarl
jno
xlat
les
jb
or
mov
sub
xor
adc
sub
popf
inc
push
sub
sub
jnp
js
call
jle
push
movsl
cwtl
or
das
push
or
icebp
daa
ljmp
sub
imul
les
iret
fcoml
add
pushf
popf
dec
xchg
inc
fisttps
clc
push
mov
ljmp
sbb
mov
sub
sub
test
daa
decb
jnp
inc
xorb
sub
xor
xlat
xchg
loop
aaa
adcb
je
in
mov
xchg
rorl
or
push
xorl
inc
sarl
mov
pop
jae
mov
rcrb
mov
jnp
rorb
pop
jl
ljmp
in
js
outsb
pop
test
in
jl
mov
xchg
repz
pop
sbb
dec
test
test
pusha
in
jbe
imul
xchg
xchg
sti
into
pop
xor
push
sbb
inc
xor
push
mov
lret
push
aad
clc
sbb
sahf
lret
aas
xchg
scas
jnp
pop
inc
out
mov
push
cmc
xor
inc
mov
add
sub
lret
fimull
daa
dec
mov
test
push
mov
test
xor
leave
sbb
dec
aaa
fsubrs
mov
push
cmp
test
push
jmp
loope
mov
sti
dec
pop
fbld
mov
adc
mov
mov
or
fisubrs
insl
mov
mov
jp
sbb
in
add
cltd
ljmp
mov
dec
pop
jecxz
je
push
dec
mov
jns
sub
and
iret
stos
test
xorl
enter
push
jno
inc
mov
add
ret
stc
in
add
jmp
test
add
fcoms
mov
or
push
add
imulb
xor
les
scas
dec
mov
nop
cmpsb
dec
push
movsb
stc
ret
jle
mov
push
and
mov
sbbl
xchg
push
sub
xor
cmc
pop
xchg
sub
lret
aad
hlt
lock
cmpsl
and
cmp
or
jne
int
inc
add
test
imul
pop
icebp
mov
adc
ja
dec
in
hlt
enter
jnp
arpl
dec
fidivl
ret
int
in
mov
and
jno
sub
dec
mov
push
cmp
enter
add
pop
cmpsl
rcll
test
dec
mov
mov
test
outsb
inc
add
lods
push
ds
jg
push
icebp
aam
mov
divl
popa
je
adc
fldt
xor
imul
jae
push
adc
cli
imul
mov
dec
out
fldt
adc
cmp
inc
sbb
add
push
lods
sbb
int
sub
es
dec
aad
stos
out
dec
test
add
fadds
sub
popf
imul
les
dec
inc
mov
add
hlt
repz
jp
fsubr
rorb
xchg
subl
flds
pop
mov
mov
add
add
movb
inc
jne
pushf
ja
ds
dec
lret
adcb
lds
test
dec
lret
jo
into
mov
jp
jno
lds
adc
cwtl
lahf
pop
pushf
adcb
add
fldenv
pop
sbb
into
or
push
add
jns
xchg
xchg
sbb
test
add
cwtl
push
and
daa
jp
insb
add
out
aam
cmc
rclb
test
insl
aad
add
pop
and
adc
adc
mov
jae
arpl
loop
subl
aas
icebp
sub
xchg
pop
sahf
test
jmp
ljmp
loope
divb
ss
push
cld
enter
xchg
int
outsb
sub
stos
mov
gs
test
mov
dec
paddsw
arpl
rcll
cmpsb
insl
faddl
add
push
mov
ficomps
or
sub
andl
stos
and
dec
dec
int3
pop
cld
ret
push
imul
test
out
or
subl
lcall
mov
pop
sbb
xor
mov
jg
inc
divl
pop
dec
roll
leave
jb
mov
add
pop
jp
fists
push
test
xor
call
mov
loopne
pop
mov
mov
mov
mov
arpl
ja
and
mov
lea
xchg
push
pushl
or
pushf
jmp
outsb
sbb
arpl
cmp
call
jnp
push
dec
mov
xlat
inc
mov
lods
push
mov
inc
iret
mov
pop
jae
lret
repnz
decb
es
or
bound
shrl
push
shl
jno
pop
push
or
jnp
and
jae
testl
dec
insl
test
ror
rorl
or
cmp
dec
jle
leave
cmpl
rolb
lahf
test
aas
cmc
stos
fldcw
mov
jp
sub
shrd
xor
orl
or
bnd
add
arpl
xor
inc
out
jmp
mov
add
hlt
hlt
fisubs
inc
mov
pushf
push
mov
jl
mov
dec
jge
cmp
lods
inc
jo
test
and
dec
sub
xchg
add
add
xlat
mov
data16
sbbb
xchg
push
clc
adc
xor
decl
repz
bound
mov
xchg
ds
xor
or
add
mov
in
fdivrp
or
jmp
sbb
pop
xor
aam
mov
push
push
popa
xor
or
add
fimuls
pop
insl
std
jne
cs
mov
sub
cmp
push
cwtl
jp
inc
outsb
add
popf
sub
fadds
dec
pop
mov
shr
sbb
mov
sub
inc
cmpl
or
adc
jns
out
adc
push
mov
pop
add
inc
movsl
pop
mov
sarb
test
inc
add
jae
cmp
jno,pt
push
mov
pop
and
adc
and
mov
push
jno
stos
xor
in
mov
lret
dec
jno
enter
or
cmpsw
test
xor
dec
mov
push
scas
cmpl
aam
pop
mov
insb
out
cltd
inc
shr
or
pop
cmp
adc
jmp
pushf
lds
dec
pop
test
jno
jecxz
sub
std
push
add
mov
push
idivb
adc
add
jp
dec
push
xor
mov
daa
jnp
testl
sbb
xchg
push
sub
push
pushf
shrb
push
adc
xor
lds
add
inc
push
lods
stc
jo,pn
adc
jecxz
mov
push
push
into
jmp
inc
arpl
xor
mov
xor
scas
int
push
add
sbb
sbb
iret
dec
inc
idivl
inc
pop
mov
and
dec
lret
mov
dec
in
js
jo
jle
xchg
cs
or
lret
scas
pop
push
icebp
xor
or
jbe
cmc
test
mov
add
ret
loope
pop
xor
dec
inc
xlat
jno
faddl
xchg
jo
out
imul
les
incb
inc
dec
mov
add
dec
test
pop
push
movsl
cmpl
sti
cltd
mov
or
fimuls
enter
and
add
mov
es
cmp
inc
loopne
jp
enter
movsb
mov
int
inc
ds
xchg
imul
adc
sub
mov
xor
sub
ret
rclb
xchg
mov
inc
jo
mov
cmpsl
push
repz
sub
dec
jo
test
xchg
push
or
popf
js
add
adc
mov
rolb
mov
push
ret
arpl
or
mov
dec
push
jbe
inc
cmpsb
popa
cmpsl
sbbb
pushf
or
cmp
and
mov
or
lret
mov
in
cmp
movsl
mov
out
stc
inc
shrd
mov
aam
ret
popa
pushf
rcrb
adc
ja
push
jle
in
dec
shrb
test
orb
mov
in
mov
xor
lahf
aas
imul
inc
dec
mov
sbb
cmp
sti
xchg
mov
xor
mov
rclb
mov
sub
mov
cmp
subb
pop
cli
jge
jo
ds
cli
mov
mov
icebp
fdivs
mov
push
pop
lahf
push
jle
xlat
fst
out
mov
sarb
mov
outsl
rcrl
xchg
adc
push
xlat
sahf
call
ss
cmp
fiadds
push
loopne
ja
pop
or
aam
mov
fisubrs
out
xchg
mov
insl
or
sbb
sub
aam
lds
imul
push
push
divl
popl
xchg
mov
test
mov
insb
push
sub
ret
out
mov
loope
and
js
sub
push
test
fistps
jmp
inc
shll
xchg
add
das
xchg
call
add
xchg
sarb
popf
lods
xor
out
scas
mov
mov
sbb
push
mov
pop
mov
push
jle
xchg
mov
fwait
cmp
xor
daa
and
arpl
xchg
bound
jae
test
clc
test
aas
int
lahf
adc
dec
sub
sub
les
ljmp
roll
add
add
mov
popf
jb
adc
gs
inc
out
roll
enter
sbb
jb
jmp
stos
or
cmpl
push
jp
or
stos
pusha
jmp
mov
dec
fildl
ret
sbb
jmp
ja
sbb
dec
jge
pop
xchg
xchg
sbb
js
push
icebp
shrl
dec
dec
xor
pandn
icebp
xchg
pop
jns
popa
push
inc
lret
lret
sbb
cmp
sub
aam
jg
jns
lahf
mov
addb
out
rclb
sahf
cmp
cli
mov
ret
popf
cs
push
icebp
pop
mov
xor
lea
jne
cmp
popf
and
faddl
repnz
insb
stos
stos
or
ret
cmc
dec
and
jno
mov
lock
pop
mov
sub
mov
pop
jge
mov
xchg
test
mov
roll
pop
dec
mov
add
test
mov
sbb
imul
add
addr16
test
push
cs
jle
cld
test
cs
testl
mov
mov
cmp
mov
and
add
std
mov
jne
sbb
mov
jnp
pop
xchg
jle
ss
jp
sub
sbb
in
inc
and
call
test
inc
andl
stos
lock
mov
sbb
shr
mov
sub
xchg
loop
sub
inc
aam
xlat
movsb
adc
enter
hlt
iret
sarb
shrl
fimuls
mov
imul
pop
inc
scas
mov
jb
dec
addr16
test
add
stos
jle
xor
lret
xchg
inc
mov
mov
inc
loopne
int
push
inc
mov
jmp
xchg
cmc
mov
cmp
mov
pop
sbbl
xchg
pop
mov
or
addb
push
out
sahf
xor
lock
test
xor
sub
mov
sti
inc
xor
pop
dec
sbb
lret
leave
sub
aaa
lds
push
add
inc
aas
cmp
and
jle
stos
or
jge
jne
adc
flds
lret
adcl
sub
and
in
mov
mov
rol
xor
jb
sub
fs
pop
mov
fldl
add
push
loope
adc
sub
xor
js
sub
fldcw
out
dec
ljmp
push
mov
decl
mov
mov
pop
popa
add
push
dec
insl
loopne
dec
arpl
rorb
or
fimull
pusha
lret
add
sbb
sub
push
mov
and
outsl
in
rcrl
aaa
ss
ret
jnp
mov
jns
mov
std
mov
js
or
shll
shrl
mov
xor
std
cld
dec
or
imul
jne
into
sub
xor
push
push
mov
mulb
lock
addl
aas
popl
icebp
movsb
cmp
mov
sarb
and
cmp
js
add
mov
test
jae
cmp
test
jnp
dec
push
mov
mov
hlt
pop
or
mov
sbb
pop
mov
sbbb
dec
jecxz
in
cmp
mov
mov
test
jbe
push
inc
sbb
dec
sbb
ret
xor
jecxz
scas
ret
pop
ret
push
aas
push
das
jge
sub
aas
lds
jno
sub
sub
mov
sub
pop
jg
add
loope
dec
and
gs
lock
ja
dec
loope
and
fsub
sbb
inc
inc
pop
fst
xchg
mov
push
jp
out
pop
mov
mov
jg
jl
add
test
shl
inc
pop
movsl
push
jnp
dec
daa
push
ret
filds
inc
jle
adc
fwait
lock
push
cmp
and
pop
jbe
mov
lret
push
mov
jns
jb
cmp
or
icebp
inc
imul
and
lret
mov
push
sbb
daa
imul
wbinvd
cmp
inc
outsl
test
sti
cmc
pop
jg
push
inc
mov
sbb
pop
cli
xor
jb
xchg
jmp
cbtw
cmp
or
xchg
fcmovnb
jge
testb
mov
pop
xchg
subl
cmp
xlat
roll
test
push
and
sbb
inc
lods
sbb
fidivrl
add
mov
lahf
mov
dec
xor
out
imul
je
ss
lahf
pop
les
adc
inc
dec
aad
mov
in
in
sbb
imul
cmp
sbb
mov
gs
or
lahf
mov
adc
sahf
roll
test
push
sbb
or
add
mov
dec
pop
mov
add
out
sbb
lods
pop
pushf
xor
cmpsl
sbb
lock
pop
mov
xchg
adc
mov
push
mov
arpl
insb
loope
test
ja
aas
xchg
sub
and
add
adc
sub
int3
xor
and
fisubrs
dec
std
lcall
jno
jne
sbb
push
andl
mov
test
into
inc
and
test
fiaddl
cmp
jle
outsb
push
les
mov
adc
fadds
imul
add
sbb
cli
jnp
lret
fbstp
mov
pop
or
mov
jno
in
adc
test
fisubrs
pop
hlt
sbb
add
mov
sub
out
mov
sbb
ss
xchg
sub
leave
addr16
minps
cmpl
jbe
sbb
je
icebp
js
xchg
pop
addr16
push
jg
lret
cmpsb
ja
xchg
repnz
int3
add
test
arpl
inc
push
imul
inc
movsl
enter
pop
xchg
aad
mov
jecxz
leave
addr16
mov
cmp
loope
scas
lds
fs
pop
add
call
aam
cmc
fwait
add
js
mov
inc
lock
or
loopne
rorl
xchg
mov
fmulp
add
aas
arpl
pop
addr16
pop
lock
mov
inc
xchg
inc
push
jno
add
lcall
add
jb
dec
outsb
out
mov
jno
jns
test
fildll
icebp
xchg
and
xchg
std
cmpsl
test
enter
adcl
inc
push
in
insb
test
cmpl
push
jae
lock
dec
inc
mov
jbe
xchg
sbb
idiv
outsl
rcl
in
test
cmp
inc
jl
push
sbb
jge
daa
lret
aas
aam
icebp
js
push
out
je
lret
add
mov
icebp
test
pop
jecxz
out
jle
fdivr
mov
jl
dec
aas
arpl
enter
shrb
mov
lret
gs
xchg
dec
addl
sub
xlat
xor
loop
sbb
xchg
dec
aam
cmp
pop
mov
mov
repnz
and
icebp
xchg
cmp
jl
cld
push
ljmp
pop
fnstenv
scas
pop
dec
mov
xchg
jb
pop
and
loopew
sbb
pop
jle
mov
mov
lds
jecxz
call
jg
dec
sahf
movsb
mov
mov
test
test
mov
nop
mov
mov
lock
mov
test
xor
enter
and
test
scas
loop
aad
sbb
inc
inc
xor
and
in
push
mov
sbb
and
jecxz
mov
lock
mov
pushf
test
stos
dec
xor
sbb
fmulp
pop
int
pop
popa
mov
mov
pop
imul
pusha
mov
sub
jae
xchg
scas
mov
push
sbb
mov
mul
jg
and
mov
push
ffreep
jmp
xor
inc
aad
cmp
pusha
or
je
pop
sti
dec
jbe
ja
pushf
add
or
or
or
test
lock
fs
mov
out
add
sub
lock
dec
dec
mov
add
cmp
not
jmp
leave
shll
push
cmp
dec
pop
add
lds
jno
enter
mov
test
pop
inc
les
lock
add
jmp
neg
cmp
roll
aam
in
xchg
aam
and
push
daa
xor
push
icebp
cmp
and
inc
add
pop
sbb
lea
repz
push
inc
loop
loop
fcmovb
xchg
movsl
repz
xor
adc
fcmovnb
test
outsl
inc
nop
and
mov
jo
xor
sub
ret
and
inc
sbb
and
test
cwtl
xlat
test
push
mov
movswl
inc
pop
mov
adc
mov
sbb
or
mov
ret
jae
sub
loope
dec
aaa
push
pop
lods
mov
subb
lods
in
fcmovb
hlt
jp
rep
adc
scas
test
test
dec
mov
lret
es
pop
xor
test
gs
xor
popa
sub
ja
push
or
std
sub
les
sti
cmpl
mov
into
dec
add
fisttpl
lock
sbb
inc
sub
loop
fisubrs
dec
xor
cli
inc
or
and
pop
mov
and
xchg
pop
fsubr
mov
mov
test
pop
mov
shll
xchg
out
shll
outsb
pop
jp
and
mov
inc
pusha
jl
jno
cmp
mov
inc
scas
and
lods
mov
mov
aam
dec
or
test
jno
lcall
test
aad
mov
xor
das
les
out
dec
push
mov
xchg
aam
mov
jne
or
sbb
es
test
test
repz
mov
mov
std
sbb
sti
ja
mov
dec
and
jae
mov
push
pop
scas
mov
or
fs
xchg
mov
and
ret
push
cmc
in
dec
stos
shll
add
andl
and
push
test
cltd
jne
or
scas
and
push
lock
xor
xor
xchg
cmp
enter
push
or
lock
sbb
mov
icebp
mov
mov
jp
cmc
aad
lds
in
add
lea
movb
jb
fdivrs
rorb
mov
gs
and
and
xor
pop
cmp
out
add
mov
mov
cmp
dec
push
jbe
popa
lcall
bound
sub
loop
jns
fnsave
xchg
pop
mov
mov
xor
pop
mov
stos
in
add
fwait
shrl
sbb
pop
xchg
xchg
or
scas
jle
aad
fsubr
loop
xor
imul
xor
and
pop
stc
or
dec
sbb
icebp
xchg
loope
jns
mov
mov
insb
dec
and
ja
aad
mov
mov
insb
pop
sahf
xlat
adc
mov
dec
outsl
mov
jle
test
pop
dec
push
sub
test
cmc
insb
lahf
jnp
sbb
jg
sti
cmpsl
sbb
jns
xchg
or
testb
mov
inc
lcall
mov
push
inc
jp
pop
add
and
mov
subl
sub
adc
shll
xchg
pop
addb
xor
out
push
mov
inc
pusha
flds
mov
pop
mov
inc
imulb
push
mov
dec
xor
xchg
xchg
inc
cmpsl
lods
mov
xlat
and
ret
dec
stos
mov
lret
inc
ret
sub
lcall
out
mov
push
jno
sbb
pop
pop
pop
or
mov
dec
fldl
fistpll
jae
sub
mov
pop
fldl2t
sbb
jae
aad
lcall
decb
sub
xor
push
xchg
push
mov
je
adc
lods
cmp
test
sub
adc
clc
mov
aas
xor
adc
push
add
mov
jle
xchg
popf
add
dec
lret
mov
sti
out
xlat
pop
xor
ret
test
pavgb
daa
push
mov
dec
mov
sub
xchg
je
mov
push
mov
mov
cwtl
fwait
or
adc
loope
dec
mov
sarb
mov
sbb
sub
neg
imul
into
loop
inc
and
gs
inc
adc
pop
jl
cmpsl
mov
imul
dec
push
and
lods
arpl
or
cmpsl
add
pop
xor
call
aam
aas
test
add
lock
pop
test
test
loop
xchg
es
xor
sbb
pcmpgtb
scas
loope
or
jb
icebp
and
ret
mov
mov
bound
popf
fisttps
or
pusha
popf
cmpsl
mov
fs
pop
cld
jno
sbb
adc
or
inc
pop
xchg
ret
dec
and
lods
pop
inc
icebp
insl
jno
pop
test
add
add
loopne
xor
movsb
and
loopne
lock
aad
inc
and
and
lret
dec
mov
inc
in
cmp
cmp
jle
mov
imul
shll
add
test
sub
jb
jg
insl
lock
or
mov
mov
adc
pop
dec
ret
xchg
dec
push
jmp
pop
push
and
cli
mov
shl
hlt
xor
in
call
mov
push
popf
mov
int
sub
sbb
pop
jg
inc
and
lds
sub
fs
idivl
pop
mov
or
ficomps
std
insb
jmpw
pop
aad
pop
and
xor
mov
xor
lock
sbb
ss
int
add
imul
xchg
pop
jle
sbb
mov
aaa
mov
cmp
jnp,pt
test
mov
jne
mov
in
fs
inc
sbb
arpl
inc
mov
xor
push
aaa
adc
jmp
xor
test
call
leave
or
adc
in
or
mov
aas
xor
test
imul
or
aas
shll
pop
jle
pushf
pop
jne
sbb
fucomip
jle
mov
sbb
rep
pop
push
jge
dec
mov
lret
jp
lds
repz
mov
jl
leave
dec
pop
jns
sbb
mov
test
mov
sbb
xchg
sbb
shl
adc
xorl
mov
test
lahf
cmp
push
or
mov
mov
xor
pushf
mov
mov
inc
movsb
fcoms
or
aam
mull
xor
fsts
add
mov
dec
sub
or
bound
jae
hlt
cmc
inc
add
mov
lret
mov
iret
mov
dec
sar
sti
fistl
dec
xchg
jae
inc
xor
fisubs
cmp
mov
sub
dec
mov
stos
aas
popf
inc
jo
shll
std
adc
imul
std
mov
dec
lods
nop
outsl
sub
aam
cmp
int3
jle
fcmovb
jl
leave
inc
scas
aam
sbb
jg
dec
int
cmpsb
ja
mov
jmp
xor
push
sub
adc
mov
xor
out
dec
pusha
out
out
icebp
pop
cmpsl
sub
adc
push
cmpsb
or
test
or
sbb
adc
push
push
fstpl
test
sbb
ret
push
scas
xchg
mov
jg
push
jb
xchg
rorl
inc
pop
jg
pop
dec
pop
pop
push
icebp
shr
test
iret
xor
fucom
xchg
out
push
out
fldcw
xlat
xchg
jnp
jns
cli
adcl
adc
and
inc
ret
lock
js
shl
and
mov
ljmp
test
lahf
int
mov
sbb
mov
xchg
lret
jo
fcomp
and
xor
rorb
and
jne
lcall
mov
or
add
pop
or
pushf
add
inc
sub
xor
sahf
mov
lret
push
sbb
mov
mov
vpmacsdqh
inc
repnz
lods
mov
xchg
jb
adc
fs
fistl
jnp
sbb
push
jge
adc
xchg
add
cltd
mov
shrb
xchg
out
lret
loopne
fs
adc
in
mov
pop
insb
push
sti
cmp
in
jl
mov
xor
xchg
cmpb
add
sub
fwait
test
push
cwtl
pop
mov
test
inc
in
fs
hlt
shll
out
insl
or
shll
cmp
hlt
add
cmp
and
lret
loop
pusha
or
add
or
scas
rcr
sub
fisubrs
xor
rorl
pop
xchg
mov
lfs
or
jnp
fidivl
sbb
inc
push
xchg
imul
imul
outsl
arpl
mov
sub
mov
dec
ss
stos
sub
mov
mov
data16
orl
add
cmp
push
test
or
bnd
fists
sbb
dec
pop
scas
mov
test
scas
mov
push
inc
cmp
inc
mov
mov
loope
fstpl
daa
loope
inc
stos
add
les
fcoms
test
loope
test
test
cli
das
jne
stos
mov
daa
loopne
imul
mov
lret
xor
icebp
or
in
movb
add
scas
pop
and
mov
dec
or
jo
push
sub
mov
mov
shl
adc
ret
mov
jnp
xorl
sar
out
ds
sbb
add
cmp
sti
mov
xor
fistl
inc
je
shll
jle
fidivs
push
enter
jle
mov
lods
xor
or
pushf
mov
mov
cli
shlb
arpl
fdivs
sub
addr16
xchg
pop
inc
das
ret
inc
add
xlat
test
xor
push
sub
fs
cmc
mov
dec
loop
ret
mov
movsb
loopne
stc
jmp
pop
sub
std
fisttpll
jne
test
loopne
fcomps
push
enter
xor
cmpsb
add
pop
fs
cltd
loop
cmp
mov
xchg
mov
fisttpll
or
jno
and
loopne
and
or
inc
nop
adc
push
lret
mov
std
andb
pop
pop
dec
dec
cmp
shlb
sub
test
test
pop
stos
cmpsb
pop
sbb
rclb
inc
pushf
lock
ljmp
loope
cs
jmp
add
das
aas
rol
adc
lss
jnp
rol
bound
test
orb
xchg
xor
xor
jno
imull
inc
cmp
daa
mov
insb
dec
cwtl
test
inc
lahf
sti
jl
mov
ffreep
pop
xor
sub
adc
cltd
movb
mov
jg
dec
test
insl
or
jne
push
and
cmc
add
mov
jns
inc
xchg
pop
int
stos
adc
std
dec
cmp
dec
jns
jns
mov
sti
sbbl
sbb
ret
inc
scas
mov
lods
push
arpl
stos
mov
adc
jle
jmp
ljmp
ret
loop
sub
mov
xor
inc
mov
mov
pop
xchg
repnz
mov
enter
xchg
mov
into
ss
in
dec
jne
inc
mov
push
push
cmpsl
jb
jl
mov
inc
pusha
jmp
iret
adcb
test
in
adcb
test
jmp
adc
and
mov
sbb
fsubs
xor
sub
aaa
out
jmp
push
out
and
pop
icebp
int3
xorl
lahf
inc
mov
add
fstps
sub
insb
add
sti
stos
shll
mov
test
xchg
mov
mov
loop
leave
jmp
test
and
pop
fwait
xorl
mov
out
bound
mov
mov
cmp
add
lret
repz
aas
pop
incb
les
mov
sub
test
ret
mov
pop
sbb
jg
gs
leave
in
sti
inc
ss
mov
insl
mov
xor
aad
adc
out
and
mov
xchg
sub
sbb
sbb
or
lcall
dec
notl
fbld
xor
jle
or
xor
inc
pop
and
and
push
sub
movl
sbb
mov
rorb
in
jecxz
clc
aad
in
inc
js
scas
jmp
pop
icebp
aam
ret
mov
jmp
in
sub
sbb
ss
jae
fnstcw
lret
popw
sbb
sub
pop
in
in
out
adc
enter
adc
sbb
xchg
xchg
sbb
lock
test
add
sarl
jecxz
pop
bound
cmpsl
xchg
aam
sbb
sahf
fwait
test
js
push
mov
test
push
daa
jns
mov
jg
mov
ret
cmc
push
jmp
inc
inc
jbe
inc
push
add
js
or
lds
dec
inc
inc
lds
roll
pop
pushf
outsl
xchg
or
push
mov
sub
xchg
in
test
lahf
jecxz
lret
push
sarl
mov
jnp
mov
popa
or
xchg
sub
jmp
sbb
dec
sub
movsb
in
scas
ret
scas
push
adc
test
add
mov
inc
adc
inc
insb
ljmp
ss
fdivs
pcmpgtw
gs
cwtl
cmp
pop
fwait
cli
in
packsswb
or
sub
push
sbb
test
mov
add
dec
lcall
dec
test
pop
aam
loope
pop
aam
fcomps
mov
sub
jp
sbb
into
andl
pusha
push
add
pop
leave
fs
mov
sub
test
add
jle
dec
lods
cmp
bound
fsubrs
mov
inc
nop
lock
int
pop
pop
jge
out
fstl
fiaddl
jbe
xchg
or
stos
cmpb
mov
cmp
cld
adc
movsb
sbb
sub
jns
xchg
xor
stc
imul
xor
inc
adc
insb
pop
fsts
loope
cmpsl
int3
test
or
enter
and
sbb
pop
decl
loope
test
mov
add
aaa
daa
je
xor
aas
fdivs
and
add
test
xor
sub
in
sbb
cmp
dec
movsl
sub
mov
add
scas
nopl
push
inc
mov
push
inc
pusha
and
addr16
inc
imul
out
adc
mov
or
mov
test
mov
sbb
rorl
pop
stc
sahf
xchg
cwtl
dec
dec
dec
mov
mov
sbb
push
mov
dec
out
pop
push
icebp
and
rcll
or
jp
dec
outsl
bound
mov
lds
in
enter
push
mov
mov
xchg
lds
pop
xor
pop
lcall
jge
mov
ret
or
dec
ret
push
mov
or
dec
gs
adc
in
dec
icebp
mov
out
loope
or
add
icebp
ret
in
mov
addr16
add
adc
and
xchg
dec
lret
jb
test
xor
shlb
dec
out
mov
jbe
adc
test
rolb
or
mov
dec
jae
test
sbb
pop
jl
loopne
popa
mov
xor
test
mov
icebp
mov
adc
dec
mov
test
mov
xchg
add
popf
mov
shll
dec
mov
ret
movsb
cmp
lods
sbb
roll
inc
lret
test
lcall
jae
dec
push
hlt
outsb
mov
or
scas
adc
and
test
sbb
lret
mov
adc
insb
int
jae
lock
ljmp
test
jne
sub
jge
inc
aad
outsb
push
xor
and
aam
scas
xchg
outsb
or
pop
cld
xchg
cmp
test
sbb
in
sbb
out
rclb
inc
jbe
stc
call
test
jge
push
pop
push
xchg
jge
mov
push
cwtl
mov
and
push
in
insl
int
insb
pop
mov
adc
lret
jmp
push
jge
jl
add
aad
negb
std
mov
dec
aas
sub
inc
mov
cmpl
stc
jecxz
xor
xor
and
test
mov
and
cmp
dec
popf
xor
and
xchg
push
jg
cmp
adc
mov
push
jg
add
jbe
mov
push
test
adc
jge
lret
lret
mov
jl
rcrl
dec
or
mov
mov
xchg
sbb
cs
jg
cmp
sti
xchg
sbb
mov
cmp
inc
or
xchg
dec
adc
leave
test
arpl
inc
stos
out
and
fildll
insb
jg
push
arpl
jle
xchg
add
add
pop
fistl
pop
scas
orl
lret
addr16
lahf
ss
mov
cmp
jno
xchg
inc
sbb
push
mov
in
fcmovne
sbb
pop
loope
test
add
xchg
addr16
mov
jns
mov
pusha
fnstsw
jne
push
and
stos
movsb
add
leave
mov
ja
pusha
dec
mov
aas
mov
cmp
dec
push
cli
ror
cmpsb
mov
test
mov
mov
xorl
lods
aas
and
aas
imul
mov
adc
xlat
adc
add
mov
sti
cmpsb
movsb
sub
testl
push
leave
push
or
addb
dec
outsb
mov
pop
ss
adc
or
in
mov
or
addr16
fnstcw
or
test
inc
pop
cltd
xchg
fsubrs
aas
roll
push
cmp
xchg
pusha
push
scas
cmc
les
jp
or
xor
cmp
pop
xor
mov
lret
aas
imul
or
pop
dec
jle
out
sbb
add
jp
mov
cmp
aas
loope
mov
scas
int
test
dec
jns
push
dec
inc
cmp
sbbl
sub
aam
in
dec
leave
or
jmp
sbb
repz
addr16
lahf
fstps
rcll
inc
jl
pop
cwtl
and
sarb
sub
loopne
pop
add
jge
xor
pop
rorl
or
sbb
fwait
movsb
adc
loop
inc
jns
xor
leave
enter
push
add
xor
push
out
push
and
das
in
dec
pop
jmp
pop
push
push
out
xor
jbe
mov
push
hlt
pusha
or
and
lahf
or
sbb
lods
in
mov
xchg
fnstsw
or
sbb
xchg
cmp
movd
dec
add
or
pusha
jl
sbb
adc
arpl
dec
mov
orb
xlat
mov
test
mov
sub
mov
push
mov
dec
movsb
icebp
jmp
dec
add
das
xor
rcrb
dec
mov
add
fmul
xor
outsb
idivl
mov
pop
pop
jns
push
notl
xor
les
inc
aad
incb
and
dec
inc
int
enter
repz
test
inc
int3
cmpsb
adc
outsl
aam
mov
lret
xchg
shr
add
xor
fistpl
std
fs
out
mov
nopl
sub
jl
and
movsl
pushf
dec
in
and
dec
outsb
jns
cmp
pop
sbb
addr16
lods
push
fisubrs
jp
adc
or
pop
clc
cltd
aas
dec
sub
lcallw
mov
ret
lock
inc
or
adc
jg
xchg
mull
adc
orl
mov
jmp
pop
inc
and
dec
imul
icebp
es
stos
in
es
add
stc
cwtl
int3
mov
addr16
in
pushf
jmp
sub
outsb
aad
push
shrl
nop
std
xor
xor
cmp
ss
pop
pushf
ret
xchg
into
dec
sub
je
jnp
leave
and
jno
pop
jnp
fistpll
inc
addl
popf
sbb
imul
and
xchg
mov
idivl
call
test
repnz
pop
fs
in
or
jmp
mov
mov
in
jmp
add
aaa
test
add
push
stos
cmpsl
add
cld
test
lret
ja
les
mov
rorl
lret
jmp
cmp
aam
lods
dec
enter
out
adc
sbb
aam
es
add
les
rcll
ret
test
xchg
addr16
loopne
es
xor
xchg
cmp
out
sbb
xchg
fidivrs
nop
xor
push
loop
add
pop
mov
aad
enter
scas
shr
das
ss
jne
iret
sbb
test
imul
jecxz
mov
pop
ds
insb
adc
cmp
call
jecxz
mov
inc
lcall
and
fildl
cmpsl
jb
sbb
into
add
scas
popf
and
mov
test
lea
sahf
call
sub
inc
add
fidivrs
xor
mov
adc
mov
imul
cltd
jne
cmp
xor
mov
jl
nop
je
lock
jge
mov
sti
clc
lock
inc
add
sub
pop
jne
imul
loop
dec
dec
iret
push
lock
mov
or
nop
or
or
add
shr
repz
push
push
iret
cli
mov
aam
add
inc
movsb
jle
leave
test
pop
cli
stc
add
xor
lods
pop
les
cltd
mov
cmp
adc
jl
outsb
cmc
cmpsb
pop
mov
push
rclb
xlat
mov
int
mov
lock
int
add
mov
cmc
outsb
inc
mov
test
mov
cmp
test
repz
cmp
ljmp
mov
test
cli
insl
lods
ss
add
push
imul
int
inc
adc
insl
scas
xchg
push
sti
adc
sub
out
mov
enter
cmc
frstor
mov
xchg
cmpsb
pop
jp
ror
jo
rorb
add
aaa
pop
dec
pop
add
subl
loop
out
xor
shll
lock
arpl
insl
push
push
jge
ja
mov
je
inc
stc
cmc
sub
aam
xlat
mov
enter
mov
test
jmp
mov
mov
out
add
mov
in
xchg
sar
aam
lret
es
icebp
xor
or
fiaddl
in
mov
jle
push
mov
cmp
shrl
inc
and
cmc
and
adc
mov
add
leave
dec
dec
lret
mov
in
lea
jmp
jecxz
lds
fs
or
push
repz
imul
or
js
inc
lock
fcmovbe
aaa
and
xchg
frstor
dec
ret
inc
lret
mov
inc
add
data16
cli
loope
int3
jo
imul
enter
stos
pop
mov
cld
jne
mov
xor
stos
xor
xchg
int
test
lock
shr
test
repz
mov
mov
ret
cwtl
stos
rcll
xchg
mov
ja
inc
xchg
jl
std
push
mov
fs
dec
xor
xor
pushf
or
mov
fidivs
test
and
dec
leave
and
stc
shr
dec
cmpsl
xchg
adc
aam
cltd
loope
pop
jns
sahf
adc
fs
push
jne
mov
mov
dec
sub
push
call
mov
jnp
push
cltd
mov
mov
daa
lret
dec
xor
xor
add
pop
sub
cltd
int
pop
xchg
and
jmp
hlt
ja
outsb
insl
mov
inc
fsubl
push
sub
lret
add
aas
xor
fwait
lods
push
jae
sbb
pushf
or
cwtl
mov
aaa
cmp
pop
mov
mov
je
dec
test
xor
inc
in
js
cmpsb
inc
ret
and
shr
aad
push
add
dec
adc
and
jecxz
loop
arpl
mov
mov
cmc
pop
in
dec
shlb
jg
pushf
dec
imul
mov
fmulp
mov
mov
mov
rclb
rol
pop
je
mov
jp
inc
enter
jo,pt
cmp
ja
mov
mov
cmp
or
imul
add
jae
sub
mov
dec
dec
xchg
fildl
xchg
xor
xlat
pop
jl
or
stc
dec
shll
pushf
aaa
leave
push
stos
in
dec
sbb
lcall
push
ljmp
sub
cltd
mov
fs
push
pop
mov
lea
leave
stos
xor
sub
adc
and
mov
pop
mov
ret
pop
inc
add
push
mov
js
int
repz
jno
xchg
adc
dec
push
pop
cmp
iret
push
aaa
dec
sbb
test
aas
or
cmpsb
mov
test
mov
adc
mov
mov
ja
test
inc
test
cli
inc
cmpsb
scas
jmp
out
xchg
sbb
int3
jnp
jo
scas
shrl
test
divl
xor
insb
fwait
sbb
ret
arpl
int
jle
pusha
sbb
push
outsb
test
idivb
popl
test
jns
xchg
mov
or
div
mov
mov
addb
in
jmp
shlb
fsubl
or
es
push
sbb
or
push
lahf
enter
cmp
ljmp
push
imul
addr16
fwait
jge
and
enter
and
jl
pop
mov
sbb
stos
lds
loop
or
pop
and
sti
sub
fistps
add
call
adc
mov
push
mov
inc
fdiv
adc
push
out
nop
dec
pop
mov
ret
sub
into
dec
xor
sbb
jle
ss
shll
repz
jb
out
dec
cmp
in
mov
in
into
cmpsl
ficoms
enter
mov
fstpl
arpl
aam
sbb
mov
rcll
xor
outsl
lea
insl
mov
popa
lahf
call
pop
mov
add
sti
cmc
jbe
cld
inc
loope
xchg
mov
int3
sbb
sub
mov
icebp
test
push
xchg
jecxz
pop
mov
sbb
add
rcr
cmp
stc
cmp
movsb
xchg
pop
or
sub
sbb
jae
data16
hlt
out
movsb
xchg
cli
pop
xlat
adcb
and
lret
sub
mov
js
test
cmp
push
ficoml
test
test
aas
sub
fsubrp
sub
pop
mov
aas
jmp
push
xchg
mov
inc
adc
xor
sub
pop
jmp
dec
sbb
pop
pop
mov
pop
ja
sarl
in
andb
mov
add
sub
xchg
xor
add
xchg
mov
sti
push
ss
imul
sub
mov
and
pop
mov
dec
lret
sbb
or
pushf
ljmp
test
jge
mov
data16
dec
add
mov
dec
loopne
into
mov
jmp
jne
fnstsw
push
fidivrl
or
lahf
jns
or
inc
rorl
je
out
mov
mov
xorl
xchg
test
lds
icebp
add
aam
subb
pop
and
inc
cmpsb
ftst
jnp
mov
jno
fs
aad
adc
push
loope
aam
lds
fldcw
test
int3
or
inc
or
jg
rsm
mov
call
iret
or
push
push
jmp
or
xchg
mov
jecxz
rcr
enter
add
cmp
lods
push
inc
push
movb
sub
inc
ret
jnp
insl
sub
pushf
pop
loope
jg
xor
punpckhbw
aam
sbb
push
jle
out
inc
mov
test
ja
iret
jo
mov
cmpsb
test
cmc
icebp
mov
jb
test
test
lret
movsl
hlt
sub
cmpb
pop
mov
push
mov
or
push
or
and
push
xchg
ds
push
xchg
scas
icebp
loope
mov
rcl
push
or
out
pop
test
xor
cmp
mov
sub
push
and
or
dec
mov
scas
push
jnp
ss
test
mov
test
rclb
cmc
mov
sub
cld
imul
popa
in
jp
jns
lahf
sti
pop
imul
daa
scas
sub
bndstx
orl
pop
dec
cmp
imul
and
xor
cld
lock
out
mov
jmp
mov
sub
loopne
inc
jne
stc
test
adc
sarl
jns
adc
icebp
rolb
pop
inc
and
xchg
pop
pop
push
icebp
sub
push
ret
add
in
outsb
mov
mul
out
push
pop
pushf
sbb
lret
mov
sbb
test
xchg
dec
sub
sub
ret
test
adc
xor
add
in
pop
xor
stos
repnz
jo
jnp
aas
divb
and
out
push
rcl
in
cs
std
mov
xor
sahf
jns
mov
jne
fdivrl
pop
mov
test
sbb
cmc
mov
pop
addr16
jp
in
es
or
pushf
imul
mov
js
das
xor
test
hlt
mov
enter
mov
xor
repnz
out
adc
mov
push
mov
aad
js
mov
inc
jl
insb
ret
outsb
mov
cltd
dec
pushw
movsb
cltd
cmc
cwtl
xor
sub
lods
mov
decl
call
cmp
loope
xchg
mov
scas
stos
jnp
or
fisttps
mov
inc
pusha
xchg
test
pop
jg
in
rep
lock
jb
mov
fnstsw
jo
pushf
test
adc
aad
mov
xor
ljmp
mov
in
aam
rorl
data16
rcrl
or
bswap
test
out
sub
jg
es
dec
shr
popl
test
sub
xchg
mov
fldcw
fcmovb
je
and
jecxz
mov
aas
sbb
ja
dec
inc
in
mov
test
rol
fstpt
jle
in
fdiv
stos
cwtl
cli
imul
outsl
lahf
dec
sub
sbbb
pop
mov
sub
mov
and
jns
sbb
add
lea
dec
mov
add
lods
leave
insl
movsb
inc
loope
jle
adc
mov
inc
jge
mov
movsb
pop
imul
add
lret
lcall
jp
test
sbb
test
jg
xor
bound
cmc
cmpb
jp
jecxz
pop
push
mov
lahf
mov
pop
js
shll
inc
add
addr16
or
and
inc
inc
xchg
xor
sub
cmp
dec
jno
mov
and
push
push
mov
xlat
xor
adc
and
xor
jecxz
inc
jl
fs
lods
clc
shr
rcrl
pop
inc
xor
popl
inc
dec
add
mov
xrelease
xor
ds
mull
jbe
rorb
scas
pushf
idivl
call
inc
addb
roll
adc
sub
inc
add
mov
dec
cmpsb
loop
fwait
mov
adc
xchg
mov
inc
inc
icebp
pop
popa
pop
daa
repz
fwait
jge
push
test
adc
lret
dec
add
aam
cmc
add
push
sub
insb
scas
sub
inc
pop
add
pop
aad
punpckldq
dec
iret
cmc
cwtl
sti
jns
pop
add
movsl
and
cmp
jne
mov
faddl
jb
mov
sbb
xor
jne
ror
lods
dec
add
cli
pop
sarb
mov
das
adc
pop
push
std
icebp
sar
imul
movsb
sbb
cmpsl
test
fcoml
icebp
clc
cmp
add
int
inc
jns
in
fmulp
scas
js
jmp
dec
icebp
pop
enter
mov
outsl
inc
fstpt
jecxz
into
inc
jo
popa
ss
or
mov
adc
out
cmp
enter
or
push
or
sbb
cmp
adc
clc
inc
aas
inc
in
xchg
push
sub
mov
or
mov
jnp
push
int
sub
and
xchg
and
stos
ret
les
mov
cmpsb
push
fstpt
jo
jl
push
test
pop
add
xchg
inc
mov
test
sbb
mov
je
jne
fcomip
fildl
js
fmull
hlt
inc
mov
cltd
jle
movsl
enter
repz
cmp
cmp
pop
bound
pop
mov
inc
xorb
jb
stos
adc
jmp
inc
inc
jnp
or
pop
fsubrl
in
mov
inc
xchg
test
in
les
push
cmpsl
ret
mov
push
jmp
add
cli
test
int
test
mov
stos
fs
test
dec
test
cmp
mov
mov
lds
or
jmp
stos
in
jg
jns
push
sub
dec
xor
scas
xor
cmpsb
ja
or
mov
adcl
and
into
mov
iret
cmp
or
arpl
mov
jp
jno
jmp
jmp
outsl
fsubp
jno
or
mov
mov
repnz
mov
and
jge
aam
push
inc
mov
sub
xor
stos
xchg
mov
mov
test
popf
and
push
pop
or
daa
adc
dec
mov
push
movsb
into
into
adc
or
out
rorb
xchg
push
bnd
fdivrl
inc
clc
test
mov
sbb
scas
jecxz
addl
adcl
mov
add
and
xor
xchg
test
cli
jnp
mov
divl
push
and
pop
mov
pop
test
jmp
stc
in
and
fmul
shrl
lret
fimull
test
repz
mov
je
int
adc
xchg
xchg
or
dec
xchg
insb
es
xchg
dec
shr
jae
out
xlat
icebp
xchg
push
ret
test
pop
xor
test
ja
das
repz
lret
lods
dec
leave
insb
xlat
xor
lret
cmpsb
je
add
jno
add
pop
push
cmc
add
je
lods
into
aam
cmpsl
lea
fdivrl
mov
or
and
out
mov
test
jnp
in
lock
es
out
inc
cli
jp
push
test
mov
add
loopne
leave
push
jns,pt
push
test
or
or
imul
push
jmp
test
jae
push
add
ss
mov
pop
xchg
das
inc
pop
jle
test
movups
rorl
or
mov
leave
cltd
and
jg
lret
addb
pop
test
inc
mov
jp
lds
adc
sbb
push
add
push
adc
sub
jae
sti
dec
rorl
add
into
ret
in
arpl
jmp
push
xchg
sub
pop
sub
mov
enter
or
call
pop
push
pop
rclb
test
pusha
loop
ret
stos
mov
shll
enter
in
mov
pop
cmpsl
sbb
mov
inc
xchg
cmp
lahf
mov
imul
adc
fcomps
mov
loope
not
add
dec
sub
mov
adc
cmp
push
fstpt
pop
lahf
adc
cmc
mov
icebp
sahf
xchg
test
movsl
mov
inc
pusha
xor
inc
popf
stc
lret
sbb
in
jp
xlat
jg
pop
dec
jns
xor
aad
pushf
lahf
inc
cltd
pop
add
push
je
stos
pop
fadds
push
gs
std
enter
sub
sbb
or
enter
adc
sbb
dec
and
mov
xchg
jp
xor
leave
and
sbb
jae
inc
xchg
sub
mov
js
inc
imul
xchg
repz
or
or
add
or
xor
push
loope
jo
fdivrl
lock
add
in
fdivrs
ret
adc
inc
push
mov
xor
sti
flds
dec
ja
inc
pop
pop
xchg
mov
mov
hlt
js
mov
xchg
cmpl
lds
sbb
test
push
sub
in
aas
or
and
out
xchg
daa
aas
cmp
bound
fmull
mov
sbb
insb
out
jmp
pop
mov
jl
sahf
push
pop
mov
out
pop
int
cmp
ror
std
add
gs
inc
stos
mov
mov
test
mov
repz
pop
pop
movsb
mov
mov
xor
cmp
adc
xchg
js
ret
pop
lret
jno
mov
fwait
or
inc
jge
addb
xchg
jae
add
xor
dec
outsb
push
enter
fidivrl
lret
cwtl
fildl
sbb
xor
jmp
sbb
dec
pop
cmpsb
dec
fmuls
int3
dec
aaa
adc
jecxz
mov
mov
stos
xlat
aam
iret
leave
fisubrs
jge
dec
add
fstps
insl
inc
xor
sub
jp
jmp
mov
sub
lahf
push
pop
cmp
add
shl
roll
int
loope
jmp
hlt
xchg
push
ret
ret
mov
imul
pop
lret
mov
insb
jmp
fisttpl
xchg
sbb
lahf
icebp
adc
adc
jecxz
std
dec
lds
leave
fcompl
pop
shlb
test
mov
dec
or
lret
rol
invlpg
sbb
jnp
inc
and
jl
sbb
or
pop
fmul
jecxz
and
sahf
add
xor
test
pop
jl
inc
dec
xchg
xchg
sub
xor
sub
movsb
or
mov
call
pop
mov
popf
adc
lret
mov
dec
popa
sub
sbb
inc
adc
aaa
test
jge
sbb
mov
add
shll
push
test
lea
mov
into
movsl
dec
loop
dec
lret
add
or
test
xchg
and
fadd
test
notb
lret
mov
dec
and
sbb
out
mov
xor
lods
xchg
mov
jmp
cmp
sub
or
minps
rorl
in
mov
pop
push
jmp
enter
insb
icebp
les
push
push
xor
push
and
push
lods
test
imul
repz
outsb
mov
adc
popa
nop
jne
add
pop
pop
pop
inc
push
enter
leave
test
cmc
inc
incl
jns
adcl
jg
mov
mov
add
fs
sbb
test
cmp
lret
test
pop
ret
or
jbe
icebp
out
dec
mov
dec
test
xor
cmp
mov
and
mov
in
pop
jnp
movsl
addr16
lahf
push
roll
sbbb
dec
sbb
jp
ret
adc
cld
imul
test
inc
push
add
fs
jns
sub
jo
sub
clc
inc
fistl
outsl
nop
test
mov
add
ja
sub
jnp
cmp
popa
mov
js
pushf
call
mov
stos
jns
add
ss
pop
mov
in
bound
repz
shr
push
mov
enter
add
movsb
aam
js
stc
out
sub
mov
add
push
and
add
cmp
arpl
xchg
mov
mov
jle
add
xor
lea
push
adc
in
cmp
lret
lret
sarb
inc
ret
mov
test
push
mov
ret
cmp
lods
jno
test
stc
hlt
out
inc
cmp
call
pop
pop
test
fdivl
sbbb
insl
imul
sbb
insb
jns
add
pop
pop
test
xor
mov
shrl
seto
mov
push
test
dec
xchg
lcall
fsubrs
inc
and
ret
dec
stos
push
xchg
mov
jl
daa
sahf
movsb
js
jns
cmp
outsl
ret
cmc
daa
leave
sbb
shl
sbb
xchg
aam
sbb
imul
pop
sub
pop
inc
sahf
dec
sub
es
mov
mov
mov
add
push
jno
enter
inc
mov
into
push
or
adc
add
xchg
imul
fisubrs
test
cmpb
or
jns,pn
push
test
pusha
inc
adc
addr16
pop
push
mov
into
inc
jno
pop
pop
es
aam
ret
inc
mov
fldcw
or
test
lret
add
sar
nopl
outsb
mov
test
out
es
lahf
dec
fsubrp
lods
lret
cltd
push
sbb
out
pop
shrl
push
sahf
and
inc
loope
outsb
mov
lds
out
xor
push
push
sbb
or
mov
pop
and
test
sbb
add
fisttps
stos
and
sbb
rcrl
stc
inc
sub
dec
cmp
push
imul
lock
or
pusha
add
sar
orb
dec
adc
sub
std
push
mov
sahf
xor
push
imul
jp
xor
ror
mov
jb
push
rcrl
xchg
je
cmpsb
xchg
push
push
pop
dec
mov
ljmp
jne
inc
movsb
pop
mov
push
pop
sarb
loopne
insl
xor
cmp
aad
add
icebp
jno
adc
push
leave
pushf
loope
lds
pop
lea
call
ljmp
mov
pop
jle
ret
idivb
pop
enter
xchg
movsb
jle
js
cmp
cmc
in
xchg
cltd
sbb
inc
stos
mov
mov
enter
pop
pop
arpl
or
mov
jno
cwtl
je
xor
enter
or
mov
add
mov
fistpll
xchg
xchg
mov
pop
cmp
add
outsl
push
push
out
inc
push
xor
xchg
push
test
mov
nop
outsb
mov
sarl
jmp
addr16
test
lock
mov
test
data16
sahf
dec
or
cmp
daa
sbb
pop
std
test
scas
push
test
pop
pop
mov
in
test
pop
ss
adc
sub
repz
xor
enter
aad
adc
inc
mov
jmp
adc
mov
ret
outsl
hlt
les
repz
add
xlat
push
sbb
int
push
or
rorl
add
mov
pop
gs
add
rcll
inc
or
push
inc
fcmovne
fwait
adc
xor
nop
push
or
cmpsl
dec
popf
jg
push
mov
test
add
repnz
cltd
cld
nop
adc
jle
jmp
in
jns
idivb
in
loope
nopl
sub
es
push
addl
cltd
in
popf
add
imul
xchg
sbb
fndisi(8087
adc
and
or
test
insl
test
pop
ret
mov
mov
mov
leave
pop
fstl
mov
ja
xchg
or
lret
push
out
and
sub
push
ss
sahf
sub
jg
lret
sbb
sub
and
test
jp
addr16
iret
inc
mov
std
cmp
add
inc
add
or
sbb
mov
scas
pop
xor
imul
mov
adc
mov
stos
lock
xlat
roll
enter
or
dec
mulb
scas
inc
aam
xchg
cmpsb
mov
mov
adc
and
pushf
gs
insl
push
mov
test
lods
and
jno
movsl
dec
jbe
test
dec
sbb
or
pushf
jae
lea
sub
test
scas
rcll
mov
imul
xchg
xor
outsb
xchg
fwait
pop
cmp
icebp
jp
sub
stos
ret
ret
es
sub
and
sarb
inc
cmp
push
sub
popf
xlat
adc
jl
shl
lcall
loope
or
dec
xor
mov
sub
int
mov
shrl
adc
mov
and
cmp
or
push
sbb
int
push
jno
add
sub
xor
mov
lahf
sub
add
xchg
pop
push
xor
outsb
add
gs
adc
and
mov
xor
jo
int3
mov
mov
fld1
movsb
mov
mov
cmp
rolb
loope
fisubs
cmc
fisttpll
mov
and
xchg
inc
push
or
or
sub
daa
dec
in
es
scas
inc
push
lds
sbb
cmp
mov
out
inc
mov
in
test
in
testb
xor
dec
scas
test
inc
negl
dec
mov
pop
outsl
jae
test
lret
sbb
fistpll
pop
mov
or
cmp
mov
xchg
ret
mov
mov
add
mov
jp
sub
pop
into
inc
rorl
repnz
rcll
or
xor
inc
xor
push
popf
aam
int
std
mov
sbb
cmc
scas
addr16
shll
dec
cmovp
pusha
fildll
or
xchg
and
loope
mov
cld
or
popf
xchg
inc
subb
popa
adc
jmp
add
mov
hlt
jle
xor
lods
fsts
hlt
pop
movl
out
cmp
dec
insl
mov
fbstp
dec
scas
inc
push
clc
pushf
cmc
xchg
or
adc
push
movsl
or
test
jl
dec
cs
cvtpi2ps
adc
lcall
push
inc
add
mov
jg
clc
or
push
add
ret
loopne
loopne
jnp
fwait
enter
rcrl
ja
test
js
sub
sub
jo
add
pop
xor
test
xchg
xchg
insb
out
int
push
add
pop
pushf
rcrl
mov
jecxz
les
aam
int3
cli
outsl
jg
or
dec
pushf
jnp
cmp
cmp
incb
cmp
inc
cmc
inc
mov
mov
std
lock
shr
inc
int
shlb
pop
les
add
push
outsb
lods
scas
subb
add
xchg
pop
pop
xor
jbe
xor
fsubrl
mov
adc
cmp
iret
data16
lret
mov
xchg
sahf
lds
pop
insb
adc
aaa
adc
mov
xchg
jno
inc
dec
jns
aaa
push
xor
addl
push
data16
icebp
loopne
and
fdivl
movsb
pop
lcall
xchg
push
push
insb
and
push
adc
repz
aas
fsubrs
int3
fcmovnbe
pop
dec
mov
icebp
paddw
sub
cmp
out
xor
mov
test
loope
jns
ja
push
adc
fdiv
jge
cmpsl
adcl
xor
cmpsl
in
sbbb
sbb
movsb
add
sbbb
mul
or
movsl
enter
incb
dec
mov
loopne
imul
or
jle
xor
test
mov
pusha
adc
rcll
or
pop
or
jb
or
clc
inc
repz
pop
test
ljmp
adc
xchg
cmc
aam
inc
xchg
ret
cmp
adc
lahf
lcall
sbb
push
ffree
and
jbe
std
inc
sbb
mov
inc
sub
pop
and
ret
scas
push
fwait
daa
fisubrl
lock
fcmovu
inc
dec
das
and
loope
push
or
lods
mov
mov
sub
and
mov
pop
out
adc
sub
call
inc
add
test
add
cmpb
jns
push
mov
imul
inc
mov
mov
mov
sbb
or
xchg
popl
mov
sbb
mov
xchg
out
cmp
int3
cmpsb
je
jo
jg
out
sbb
adc
ret
dec
into
pop
jbe
dec
xor
sti
cmc
xor
jno
test
dec
xor
out
mov
sub
ret
sub
push
hlt
push
jge
ret
loope
test
outsl
inc
out
das
push
adc
loopne
dec
inc
cs
js
cmpsb
enter
movsb
jne
fldt
lcall
pusha
sbb
sub
popf
mov
and
scas
std
pop
loop
mov
inc
jo
jp
sub
pop
sbb
and
cmpsl
int3
mov
test
lods
add
ds
push
sub
test
or
mov
and
divl
mov
dec
cld
adc
xor
xor
sub
lahf
mov
cs
sub
lea
out
pop
mov
std
sub
pop
in
test
xor
inc
data16
adc
insb
push
dec
insl
cmp
enter
inc
cmp
test
insb
or
and
xchg
sbb
or
out
imul
int3
xchg
xchg
cmp
inc
xchg
add
mov
inc
and
lds
mov
test
xchg
jne
movsb
lahf
mov
mov
lds
add
loope
inc
push
jp
dec
mov
jo
mov
fsubrl
or
lcall
lahf
xor
stos
roll
aam
or
leave
pushf
lds
push
inc
pop
mov
orl
ss
mov
loope
les
in
fnstsw
aam
fs
in
int
cli
push
leave
cmp
or
push
or
mov
dec
sub
push
xchg
pop
andb
lahf
pusha
hlt
pop
dec
clc
ret
popl
in
nop
mov
test
enter
ss
and
fbld
lock
mov
inc
dec
shll
adc
jle
insl
inc
mov
mov
jge
call
jg
insl
shlb
hlt
cmc
inc
sbb
in
jle
mov
mov
dec
mov
ljmp
gs
cmp
scas
clc
mov
pop
fwait
loope
push
icebp
cwtl
test
mov
add
cmp
sub
jmp
les
adc
jns
xor
xchg
dec
sbb
in
ja
in
jo
mov
adc
mov
mov
xchg
cmc
cmpsb
outsl
push
add
outsb
jns
ja
and
pop
mov
add
inc
pop
inc
imul
xor
jp
out
and
add
movsl
push
sbb
sub
fisttpll
mov
jp
xor
repnz
test
int3
leave
mov
lds
jae
jnp
scas
add
shlb
sub
mov
mov
icebp
mov
adc
add
incb
xor
loop
jne
jl
add
push
sub
pop
cmpsl
into
or
push
shrl
pop
or
push
mov
push
shll
test
icebp
lds
inc
inc
xchg
dec
adc
test
lods
mov
fldt
mov
inc
test
clc
lret
imul
cs
xor
out
push
je
fmulp
xor
jl
pop
mov
xor
ficoml
add
push
lret
test
pop
cwtl
inc
xlat
sbb
xchg
js
subb
sbb
jne,pt
xchg
out
stos
and
pushf
jnp
add
and
imulb
mov
sbb
fnsave
mov
push
inc
mov
add
pop
mov
les
cwtl
fcomp
mov
pop
ds
mov
add
call
inc
movl
daa
add
nop
sub
jmp
jg
sbb
jge
mov
aaa
inc
inc
ret
dec
jb
int
das
out
dec
ret
dec
inc
adc
roll
mov
scas
pusha
mov
push
inc
and
pop
int3
jno
test
jl
loope
mov
icebp
mov
xor
ja
and
dec
dec
outsl
lahf
sub
sbb
das
mov
cmp
add
add
inc
xor
dec
mul
xor
test
jmp
push
out
lds
popa
aam
sub
test
inc
adc
xor
cmp
inc
pop
js
cmc
sbbb
dec
jnp
ja
xor
push
mov
sbb
or
lock
shrl
jnp
out
xchg
outsl
xor
push
ljmp
js
das
mov
inc
in
in
inc
sub
fstpt
xchg
scas
cmpsb
mov
jmp
leave
pop
imul
test
roll
jae
add
pushf
mov
sar
or
sub
xchg
popf
jo
cwtl
out
popf
jge
cmp
mov
es
add
fs
loope
iretw
sbb
pop
mov
or
mov
or
fstpl
test
sti
lret
mov
xor
inc
fdivrl
and
or
test
sbb
mov
scas
arpl
jae
adc
dec
or
out
xor
mov
inc
jns
xor
push
mov
rcl
mov
or
bound
lret
jae
fmul
add
popf
aas
test
cmp
adc
negl
enter
nop
incb
xor
or
inc
and
push
push
xchg
cmc
mov
xchg
sahf
push
cmp
push
mov
pushf
pop
adc
in
repz
mov
fadds
insb
into
mov
bound
test
outsl
add
popf
int3
lea
mov
add
xchg
and
mov
mov
add
xchg
cmp
cs
in
or
inc
adc
mov
fiaddl
mov
or
adc
enter
stos
lret
arpl
jle
mov
ds
fs
xchg
inc
mov
and
mov
iret
pop
repnz
jp
lret
test
xchg
bound
in
pop
sahf
xor
xor
xor
cmc
test
adc
jp
dec
negl
sbb
ret
cmpsl
jle
pop
in
cmp
sbb
sub
test
subb
inc
jo,pt
les
fs
dec
fwait
cmp
pop
test
call
push
inc
scas
fs
aas
dec
jnp
daa
test
test
jnp
inc
repnz
xor
sub
testb
mov
push
mov
test
mov
cltd
jl
test
and
xor
test
pushl
in
jg
push
test
push
fucomi
jnp
daa
jo
mov
fmull
movsl
das
xchg
std
leave
test
jmp
insb
fcomps
push
test
dec
push
orb
aaa
movsl
pop
mov
inc
xor
sti
test
lods
mov
sub
mov
enter
add
push
push
out
mov
sub
or
jle
sub
pop
and
mov
xor
shrl
xchg
pushf
push
ret
jle
push
movsl
mov
orl
test
cmp
mov
lret
and
mov
aam
pushf
fbld
add
test
enter
xchg
mov
cs
aam
xor
test
sbb
sub
icebp
push
imul
cmp
mov
push
insl
sar
orl
int
inc
test
dec
aas
xchg
dec
mov
sbb
add
xchg
mov
pop
mov
dec
push
leave
test
lods
inc
xchg
inc
push
mov
xchg
and
push
test
mov
sbb
ud2
test
arpl
fwait
inc
sbb
inc
inc
pop
roll
scas
mov
dec
cmp
les
insb
shrl
mov
mov
or
or
cwtl
outsb
in
test
jne
ljmp
mov
and
loope
mov
std
aam
test
cmp
dec
cmp
sbb
ret
in
push
pop
jne
adc
mov
add
loope
test
sub
into
imul
pop
jo
dec
jmp
pop
xor
inc
push
add
jno
xor
stos
push
loopne
push
dec
int
shr
in
xor
adc
xchg
sub
dec
mov
xchg
fmul
xor
test
cwtl
das
bound
lcall
gs
lock
xchg
sub
or
or
popa
xlat
or
sbb
xchg
or
mov
lods
jne
and
dec
xor
sbb
mov
fld
test
mov
pop
xor
es
pop
and
fnsave
push
sbbl
test
ret
xchg
hlt
jp
test
int3
aam
das
push
pop
cmpsl
subl
js
je
cltd
jns
dec
and
dec
dec
enter
pop
sub
cs
js
or
pop
cltd
mov
outsb
aad
imul
stc
push
xchg
mov
into
xor
lret
jp
and
rcl
mov
pop
push
jle
jb
test
sub
sub
pop
lret
in
hlt
cltd
sbb
data16
cltd
flds
jle
je
sub
ds
adc
into
jno
sub
and
ss
rol
sahf
vunpcklps
lods
lea
rclb
mov
pop
arpl
mov
sti
arpl
ret
dec
cmpsl
mov
adc
sbb
xor
adc
mov
call
or
mov
dec
xchg
inc
pop
inc
das
movsl
inc
sbb
and
or
sbb
xchg
jle
addr16
test
lret
xchg
add
repnz
mov
and
xor
inc
xor
push
das
subl
out
or
stos
dec
jo
lods
mov
dec
jle
and
sub
dec
xor
aad
or
jae
push
jg
sub
aam
inc
cmp
xor
sbb
cltd
inc
imul
adc
push
mov
pop
dec
mov
xorl
loop
cltd
les
mov
ss
popa
sub
sbb
inc
jp
jmp
dec
inc
test
aam
cltd
outsb
push
lods
icebp
pop
and
int
ja
test
mov
xchg
loope
push
xchg
movsl
movsl
xrelease
adcb
scas
sbb
fsubs
cmc
adc
and
dec
lcall
mov
sahf
jge
xor
sub
icebp
add
inc
mov
add
mov
sbb
movsl
mov
sbb
jo
addr16
mov
xor
rcrb
test
cs
inc
lock
jb
dec
std
push
notb
test
xchg
aas
or
xor
in
divl
add
add
jl
jnp
push
inc
movsb
out
enter
out
jbe
push
push
jmp
mov
sbb
loopne
mov
into
xor
pop
je
js
cmp
and
push
lret
push
ret
xor
stos
aad
push
popf
xor
ljmp
pmaxsw
mov
push
test
lea
sub
xchg
ret
lods
bound
push
out
mov
insl
dec
push
ret
insl
imul
bound
test
or
jb
js
jae
add
imul
cli
dec
sahf
jnp
inc
xor
sub
pop
push
in
rcrb
push
vpsubusw
test
jmp
xor
icebp
push
push
in
in
loopne
dec
dec
xchg
out
loope
add
aam
test
jns
je
fistpll
adc
out
jb
jne
popa
cmp
dec
mov
stos
mov
xchg
loopne
xchg
sub
dec
jmp
lods
xchg
repz
fwait
pop
jge
or
lock
sbb
mov
test
add
xchg
mov
jp
cmc
push
cmp
mov
ljmp
jo
xchg
test
aam
andb
mov
in
enter
add
push
rcrb
dec
mov
and
rol
addr16
out
cmp
xchg
pushf
fnstenv
jbe
xor
jns
outsl
adc
sub
cmp
leave
xchg
dec
enter
or
xchg
ds
inc
xor
push
mov
fsubr
outsl
or
testl
push
add
mov
sahf
xchg
fldt
cmpb
pop
pop
dec
inc
dec
outsl
xchg
add
mov
pop
jg
sub
fucom
int
repnz
jl
shll
sub
aam
mov
mov
popa
subb
ret
iret
adc
neg
lods
pop
cli
sbb
dec
lret
mov
ds
jnp
cli
popa
adc
sbb
mov
imul
test
jae
fldcw
ljmp
pop
sbb
add
mov
enter
test
test
gs
adc
xchg
xor
out
jmp
push
cmp
jge
add
lret
negl
daa
add
xor
test
std
mov
lds
mov
scas
sti
gs
orb
lret
xchg
addr16
xor
jle
mov
imul
lds
sbb
sbb
mov
mov
pop
jne
lret
fcompl
cld
jae
mov
aam
inc
pop
pop
xor
icebp
test
arpl
cmp
add
dec
loope
sub
sbb
ret
push
add
rclb
mov
out
inc
pop
xchg
loop
inc
add
shr
mov
fisubrs
das
xor
test
mov
test
cmp
addb
or
xchg
je
jp
jl
insl
mov
or
sarl
popa
ret
lea
rcrl
scas
pop
mov
fdiv
mov
pop
out
rol
push
imul
and
xorl
push
mov
movups
rclb
int
adc
popl
fldpi
mov
aam
lods
add
xor
mov
sysenter
or
stos
test
das
dec
or
dec
push
jne
cmpsl
cli
jae
or
xchg
and
adc
pop
stos
imul
mov
sbb
mov
icebp
cmp
or
mov
mov
xchg
jo
lret
mov
sub
dec
orl
add
jl
enter
enter
stos
enter
push
adc
jl
gs
mov
fisttpll
aad
mov
xor
ds
add
cld
jb,pt
jl
iret
dec
test
sub
pop
mov
jb
je
inc
mov
scas
aas
mov
loope
add
cmp
lods
mov
push
arpl
in
lds
dec
fcomps
sub
mov
loope
mov
pop
sarl
mov
xchg
dec
or
or
mov
outsl
aam
lock
or
mov
scas
sarl
jge
pop
hlt
pop
cli
mov
mov
push
push
mov
add
js
pop
push
lret
mov
pushf
pop
popf
addr16
cmp
cmp
leave
idivl
out
inc
jmp
out
test
cld
pusha
sub
dec
adc
push
mov
testl
pop
cmp
xchg
add
mov
out
int
pusha
repz
pop
or
ja
mov
dec
jnp
push
or
sbb
mov
xor
cmp
sbb
lea
int3
test
mov
mov
mov
js
xchg
cltd
test
cmp
call
test
les
xchg
int
es
in
mov
cltd
xchg
sub
or
out
mov
or
leave
mov
adc
mov
cmp
inc
mov
mov
and
sub
sahf
loop
outsb
push
add
sbb
in
icebp
std
sahf
jns
mov
cmpsb
mov
mov
add
in
jge
jmp
and
mov
outsl
inc
mov
cmc
xchg
push
call
ss
in
or
sbb
loope
mov
jne
sub
xchg
rorl
xor
orl
addr16
cmp
mov
mov
aam
xchg
add
imul
fldcw
mov
xchg
pop
jno
aaa
mov
mov
mov
les
and
mov
mov
ja
adc
push
lock
mov
hlt
and
xor
int
cmp
shl
mov
push
mov
loope
push
jne
hlt
adc
mov
daa
ds
mov
movsb
mov
aad
icebp
jp
sub
xchg
mov
jno
in
sub
gs
enter
call
add
decl
or
mov
adc
push
fstl
enter
dec
xchg
sarl
imul
push
icebp
aad
xchg
pop
jmp
lds
outsl
push
cmp
dec
imul
in
roll
add
lods
clc
aad
xor
pushw
pushf
fs
adc
fnstenv
ds
mov
mov
js
jge
push
pusha
loop
mov
dec
in
cli
popf
add
mov
fst
or
sbb
adc
cmpsb
jno
add
pushf
sbb
and
xlat
aas
dec
jl
leave
pop
mov
mov
xchg
rcrl
popa
or
xchg
add
sub
jg
sub
dec
cmp
sub
stos
pop
fnsave
cmp
or
ficompl
xchg
cmp
lret
lret
in
lea
jbe
sbb
shll
push
das
fwait
add
push
test
loopne
aas
out
int3
out
jmp
subl
jp
rclb
push
fnstenv
cmp
add
shrb
daa
stc
std
jmp
es
out
adc
cmp
add
sub
insb
imul
mov
pop
jno
stos
je
ds
gs
stos
sarl
sbb
lods
mov
test
sub
add
movsb
rcll
std
icebp
mov
sub
or
sbb
shl
int
dec
dec
mov
popa
adc
xchg
gs
rcl
shrl
and
xchg
add
push
adc
cmc
push
mov
std
xor
lds
mov
sub
repz
xor
sub
loop
mov
mov
cwtl
adc
loopne
shl
std
mov
mov
int
pop
dec
xchg
jo
push
lods
jno
je
cmc
adc
fwait
mov
sub
cmp
pop
cltd
dec
repnz
mov
or
mov
inc
xchg
xor
mov
mov
fldenv
mov
push
mov
aaa
mov
test
push
icebp
aas
mov
xchg
fcomps
xor
test
sub
hlt
adc
and
es
outsb
int3
cmp
fdivrs
pop
loope
jbe
fwait
lret
jge
or
inc
adc
aaa
add
les
aas
adc
push
mov
cmc
sbb
adc
fs
fdivl
adc
xchg
sub
and
popa
lret
ret
cmp
adc
lock
call
mov
jge
mov
sub
ret
loope
jge
in
jle
ror
jmp
jmp
pop
sbb
add
in
lret
inc
std
cs
sub
aaa
xor
add
into
icebp
dec
adc
add
push
loope
sti
movsb
push
push
or
push
jno
aam
pusha
sub
push
int
mov
gs
sbb
scas
jno
adc
aaa
mov
loopne
jle
and
cmp
test
push
push
mov
aaa
scas
cmp
dec
mov
push
cli
aam
xchg
pop
lea
ljmp
in
loop
add
mov
adc
push
push
aas
in
xchg
mov
xchg
xchg
mov
int3
mov
loopne
mov
mov
lea
out
add
xchg
rorl
push
test
aad
cmpsb
or
ret
repnz
jae
lock
stc
xor
dec
jg
sub
or
popa
jno
mov
pop
push
imul
ljmp
sahf
and
pop
test
or
lea
push
lods
mov
ret
pop
and
int
std
jecxz
pop
fimuls
sub
mov
imul
jge
mov
adc
repnz
pop
dec
orl
arpl
or
std
inc
repnz
mov
cmpsl
mov
mov
xchg
sub
or
lds
sbb
shll
bnd
sbb
loop
push
jge
lret
or
xor
and
adc
jae
divl
clc
rcl
push
sbb
outsl
mov
sub
push
xchg
inc
jmp
mov
jg
add
andb
mov
popa
ja
cmp
xlat
inc
xor
xchg
mov
outsl
and
mov
cmp
sub
push
add
mov
scas
jmp
into
pop
mov
mov
iret
loope
out
in
lret
cmp
mov
loop
sub
arpl
mov
aad
lds
outsl
sub
push
inc
mov
nop
popa
jp
add
push
cmp
adc
adc
sahf
cmp
daa
push
int
scas
test
add
push
jae
lret
pop
adc
add
and
dec
sbb
aad
push
unpckhps
and
cmp
pop
push
jae
cmpsb
and
mov
out
pop
cmp
pop
mov
es
mov
rcrb
and
mov
pop
mov
mov
shlb
lock
test
cmp
fldenv
into
inc
sbb
adc
mov
push
adc
jecxz
fwait
mov
shll
mov
movsl
mov
xor
out
xlat
sbb
pop
mov
cmp
pop
inc
push
dec
jbe
dec
sub
mov
rolb
jno
dec
aam
add
js
loope
add
test
dec
in
in
aam
add
pop
sub
pop
add
inc
adc
mov
fnstenv
fmulp
cld
nop
ret
and
sbbb
or
lods
xor
out
or
popa
adc
je
mov
fnstenv
insl
and
pusha
aad
push
hlt
mov
mov
mov
push
out
loope
and
mov
sbb
or
shrb
mov
inc
in
ret
ds
cmp
xor
sbb
or
cmp
add
cs
loop
and
dec
sub
jno
movsl
dec
fs
adc
or
aad
and
inc
cmpsb
sbb
jg
jno
call
xlat
inc
jno
rolb
cmp
fisubrs
mov
es
cmpsl
lods
sbb
jecxz
dec
ja
mov
lea
sbb
mov
fcoml
es
push
loope
mov
jnp
add
push
jmp
out
sub
xor
push
imul
pop
adc
movsl
push
ret
inc
dec
test
mov
sbb
ret
loopne
outsb
call
xchg
dec
adc
push
or
mov
add
mov
jno
adcb
mov
fidivs
arpl
prefetchnta
sbb
aas
imul
push
scas
pop
iret
loope
push
addps
cli
ret
xchg
insl
mov
inc
jl
or
outsb
loope
sbbl
or
rorl
sbb
not
fistps
std
xor
sbb
adc
mov
lcall
aad
add
cli
int
inc
or
shll
jb
aad
jo
iret
inc
dec
hlt
jne
mov
push
fbstp
cmp
dec
mov
pusha
fnstenv
push
js
jg
push
add
or
and
mov
dec
outsb
fwait
xor
push
or
mov
and
push
adc
shrl
ret
xlat
mov
or
daa
sbbb
sub
adc
xor
fcmove
mov
sub
ja
cmp
enter
mov
push
je,pn
mull
iret
adc
adc
sub
popa
sbb
adc
mov
fwait
cmc
inc
shrl
into
stos
out
aad
imul
test
sub
pop
sub
mov
fs
cmp
xor
push
cmpsb
idiv
xchg
cmp
stos
pop
sub
dec
add
flds
nop
daa
les
add
std
cld
push
ret
lret
rorb
xchg
push
ret
fmuls
cmp
xchg
cld
and
incb
xorps
ljmp
test
imul
adc
movsb
mov
or
push
jle
je
dec
mov
aad
leave
sti
adc
das
inc
call
push
sub
sub
add
add
jno
sub
rol
stc
sysret
add
movl
pop
inc
out
push
jp
std
scas
ljmp
adc
pop
mov
mov
pop
imul
ret
add
icebp
loope
push
aas
ljmp
stos
jp
out
fs
mov
clc
inc
mov
cli
push
repz
cld
unpcklps
ret
pop
mov
adc
dec
xchg
jns
adc
xlat
adc
lods
sbb
loope
out
es
lret
punpcklbw
sbb
xor
testl
jnp
cli
jne
in
notl
ret
sahf
xor
mov
mov
lods
sbb
add
mov
add
cmp
push
lea
or
in
mov
push
rcrl
into
sub
sub
scas
mov
mov
sbb
call
adc
push
xchg
frstor
mov
fldl
nop
cmp
int
dec
jmp
push
repnz
mov
push
hlt
mov
sub
mov
dec
popf
dec
push
mov
pop
mov
mov
test
push
xor
mov
sbb
cmc
mov
inc
shl
dec
mov
xchg
imul
ret
lods
das
orb
mov
arpl
int
jo
ffree
pop
or
ja
adc
add
std
inc
call
add
xor
bound
jb
loopne
cs
sbb
add
add
xor
insl
jb
and
dec
and
test
jno
xor
mov
cmp
imul
aad
jbe
jo
add
xor
jae
add
cmp
es
sub
out
sub
push
cmp
sbb
mov
aam
out
lea
ja
pop
cmp
testl
clc
inc
adc
popf
in
sbb
sub
inc
pop
add
push
mov
mov
jge
push
inc
loope
imul
cmp
adc
leave
je
pop
test
movsl
cmpsb
xchg
mov
lds
mov
int
pop
pop
cmp
in
or
xchg
cs
fnstenv
mov
add
call
lds
daa
inc
jno
mov
out
and
pop
movsl
mov
icebp
cwtl
lea
aas
js
xor
das
sub
cmc
cmp
lret
sub
xchg
lock
out
and
insl
enter
sahf
notl
cltd
add
sub
lods
cli
fldl
xchg
cltd
xor
dec
cwtl
insl
add
dec
aad
mov
or
cmp
adc
mov
jno
jle
jo
aam
aaa
fcomp
mov
dec
sub
stos
xor
jns
pop
sbb
lods
lods
cmpsb
and
shll
data16
cmp
add
or
add
jbe
bswap
cmp
sbb
icebp
sub
jmp
mov
idivb
aad
push
test
repz
mov
dec
mov
jnp
mov
icebp
cmp
push
fsubrp
sub
ror
sahf
dec
repz
and
mov
xchg
sbb
in
jbe
bnd
daa
es
test
mov
jno
clc
repz
cmp
pop
fnstenv
cmp
push
adc
jns
sbb
repz
loope
jle
xor
or
and
clc
xchg
aam
mov
pop
cli
sbb
fsubrl
jne
add
mov
jns
mov
inc
mov
insb
cwtl
jmp
int3
or
data16
jge
pop
icebp
aad
sbb
dec
dec
in
sarl
inc
or
test
lds
xchg
ret
jmp
rclb
and
mov
inc
dec
cs
loope
and
lret
es
jns
sub
sbb
add
sub
jmp
cmp
push
insl
xchg
les
pop
lret
ror
add
roll
jnp
cmp
imul
cmc
jno
rolb
xor
adc
xor
jns
in
xchg
mov
and
imul
imul
adc
cmp
icebp
rorl
mov
fistpl
adc
push
call
cmpsl
fsubs
cmc
mov
movb
loope
cmp
fistps
adc
and
lods
sub
lret
leave
icebp
sbb
inc
xor
jge
sub
imul
sarl
push
xor
jae
les
pop
mov
mov
shll
and
inc
jne
and
or
xor
add
fnstenv
test
cmp
lock
or
out
leave
fucomp
dec
psubusw
mov
xchg
xor
sahf
in
or
pusha
add
mov
inc
dec
daa
cwtl
leave
xor
add
push
pop
mov
mov
je
or
dec
std
push
xor
scas
cmc
adc
add
leave
out
or
popf
mov
mov
push
and
je
mov
xor
vucomiss
lods
mov
bound
dec
andl
mov
js
sub
in
pop
mov
inc
pop
movsl
scas
jbe
ss
cli
loope
es
shll
stos
or
cmpsb
pop
adc
int3
outsb
cmp
jbe
inc
es
shr
mov
add
cmp
dec
and
inc
mov
add
fists
jae
cmc
cwtl
adc
and
gs
insb
enter
int3
out
mov
add
mov
mov
push
mov
and
fistl
les
ja
int
mov
cltd
jecxz
in
sbb
stc
rclb
mov
rcrb
mov
loop
roll
sub
adc
mov
mov
sahf
mov
sub
adc
pop
cmp
sub
ja
mov
gs
sbb
imull
mov
ret
cmp
test
cli
push
jo
dec
xchg
dec
and
loope
sub
xchg
dec
sub
mov
lds
sbb
lods
lea
sub
xchg
add
sti
inc
mov
jno
aaa
stc
jmp
lea
mov
nop
daa
sub
ret
push
stos
add
mov
inc
loopne
notb
xor
inc
and
add
mov
push
push
imul
add
mov
inc
stos
int3
aam
insb
pop
adc
and
jno
dec
mov
and
mov
out
fadds
cmp
mov
pushf
mov
mov
add
fnstenv
ss
lods
add
xchg
sbb
mov
xchg
pop
popf
and
push
shlb
jno
es
rcrl
nop
push
mov
add
or
gs
dec
dec
xchg
outsl
jmp
adc
mov
mov
mov
out
rcrl
shlb
fs
ret
dec
sarl
mov
out
rcrl
fdivr
and
mov
xor
lcall
dec
mov
and
adc
mov
jns
jb
mov
loope
xchg
and
testb
mov
jbe
loopne
fsubs
icebp
inc
fistpll
pop
or
mov
fstpt
or
sbb
pop
subl
lahf
or
pop
adc
dec
ds
loop
mov
or
add
mov
dec
jp
or
add
and
xchg
lods
fistps
pop
fnstenv
xor
push
negl
or
jne
jns
push
loope
push
push
push
jp
mov
ljmp
mov
fldcw
inc
and
pop
into
mov
lods
outsl
xchg
xchg
jmp
jmp
pop
push
mov
test
xchg
outsl
dec
insb
shrd
add
sahf
mov
stos
dec
cltd
movb
aaa
jg
push
lret
leave
mov
push
and
jae
test
mov
cmp
jg
adc
mov
scas
pop
push
mov
subb
pop
inc
jns
aas
xor
cmp
test
push
out
pop
je
push
fidivrs
ret
fwait
jle
ret
xor
scas
push
cmc
stc
lds
cmpsl
sub
mov
push
cli
in
xorl
jle
ljmp
in
roll
jecxz
loope
mov
imul
jl
cmp
fsubp
das
mov
sbb
mov
sahf
sti
mov
movsl
jbe
dec
aam
mov
push
call
cmc
xor
leave
mov
int3
shrb
cmp
jp
imul
sahf
xor
mov
out
sbb
mov
mov
mov
push
push
xor
lahf
add
mov
test
pop
fsubrs
js
cli
int
add
and
ja
add
pop
inc
sarl
push
cltd
lcall
pop
pop
scas
orl
add
aam
or
fstps
test
push
scas
add
lods
pushf
inc
push
aam
cmpsb
ret
setle
insl
xor
out
imul
xchg
arpl
shll
jge
jne
leave
push
and
test
cli
jl
js
ds
ret
and
jae
lcall
lahf
sub
dec
enter
pop
test
or
aam
lcall
aad
inc
mov
jge
cmp
div
add
lret
xchg
popf
push
or
stos
insb
scas
mov
xor
repz
popa
test
push
inc
add
mov
in
lds
inc
lahf
lock
xchg
lock
pop
test
fisubrl
inc
cwtl
inc
ret
or
lcall
jecxz
add
mov
add
push
inc
add
test
add
leave
xchg
push
mov
mov
test
ljmp
lcall
into
cmpsb
jnp
stos
subl
adc
jbe
xor
push
out
dec
add
mov
gs
roll
adc
xor
push
xchg
leave
jne
mov
mov
mov
cmc
inc
adc
imul
cmc
mov
sub
push
xlat
sub
lock
xchg
xorb
mov
insl
jne
jns
fmull
push
rcrb
out
xchg
test
xor
ret
mov
sbb
mov
in
mov
popf
sub
testl
mov
aam
push
fscale
mov
fimuls
jne
pop
rcll
or
mov
jne
sbb
or
test
stos
or
movsb
loopne
sti
les
sbb
lret
sub
xor
lds
stos
inc
imul
in
das
pop
inc
adc
inc
cmp
sub
sbb
mov
dec
lds
pop
lret
mov
bound
dec
push
sub
popa
mov
xlat
leave
or
bound
mov
adc
stos
ret
enter
bound
sub
mov
ror
inc
test
inc
push
popa
lahf
dec
test
insl
sub
cltd
sbb
cli
mov
repz
mov
push
jae
sahf
dec
hlt
fistl
xor
test
imul
lds
add
in
mov
inc
pushf
das
pop
push
adc
mov
pop
outsl
mov
lock
pop
and
cmp
imul
lods
jo
xchg
stos
addb
in
lds
enter
inc
mov
xor
mov
pop
cld
push
mov
cs
inc
ja
push
test
pop
sbb
xor
xor
jns
push
or
mov
mov
xor
push
fadds
xchg
jo
dec
out
jmp
sbb
in
stos
jae
jp
sbb
dec
arpl
push
out
imul
push
cmpsl
and
push
fsubrl
add
adc
push
sbb
sub
jbe
imul
sub
mov
jnp
aad
lahf
jmp
mov
adc
xlat
mov
test
pop
stos
jge
jae
dec
add
and
jp
fdivrs
jae
push
push
and
add
push
fsubrl
jl
imul
sbb
pushf
pop
ficomps
stos
ror
test
push
imul
lcall
and
adc
jo
push
mov
or
mov
pop
lcall
pop
pop
mov
lods
inc
xchg
mov
add
aaa
or
hlt
jmp
dec
jne
insb
lea
sbb
pop
or
xchg
jns
push
jp
imul
call
andl
push
insb
jge
mov
fisttpl
mov
sub
movsb
pop
fdivrl
jl
mov
popa
sbb
push
dec
lret
enter
xor
cmc
adc
xchg
shll
icebp
mov
sbb
jge
mov
cmc
ret
pusha
jle
sahf
xchg
cmp
xchg
mov
add
jmp
lds
pop
add
insb
adc
pusha
pushf
ret
add
pop
int
insb
push
push
fsubs
test
popf
add
lock
mov
enter
push
mov
cmp
test
push
jne
test
pusha
mov
inc
jmp
out
sub
or
outsl
jnp
loopne
aas
lret
sbb
shlb
pop
dec
out
movsb
cmp
shl
mov
fldlg2
mov
push
lret
sub
jnp
xchg
sbb
arpl
out
in
ljmp
mov
mov
fmull
push
xchg
sbb
popa
shll
push
push
stos
mov
incb
inc
mov
sbb
mov
out
push
and
test
scas
pusha
scas
mov
mov
int3
mov
mov
mov
jmp
push
cmpsb
ljmp
pop
test
gs
jg
dec
jmp
roll
jbe
add
lock
cltd
hlt
xchg
ret
mov
out
loop
inc
dec
xchg
les
inc
vminpd
jl
inc
icebp
orb
dec
loope
mov
mov
sub
enter
pop
push
mov
cmpsb
int
sub
cs
cmp
adc
mov
pop
add
cmpsl
sbb
subb
mov
scas
insl
sub
jo
scas
jmp
push
inc
or
adc
das
or
dec
stos
rorb
jcxz
ss
adc
lahf
add
scas
mov
and
daa
or
xor
loop
or
mov
push
or
and
ja
dec
orb
pop
inc
lods
cmovb
sarl
popa
imul
mov
jecxz
pop
out
lret
push
mov
loope
jle
test
insl
aad
fldcw
jb
jae
xchg
sub
pop
mov
test
pop
leave
adc
sub
addr16
pop
sahf
xor
hlt
mov
mov
popa
push
pop
pop
adc
mov
jnp
mov
pushw
out
xlat
fisubrl
int
gs
mov
loopne
into
xor
sahf
cmp
add
sub
mov
lret
cld
push
aas
inc
xor
and
lret
mov
sbb
and
rcr
shll
movsb
leave
jmp
std
dec
cs
and
dec
fisttpl
fsts
mov
xchg
push
mov
mov
dec
pop
scas
mov
fstl
stc
loope
test
pop
in
xchg
iret
and
inc
push
ds
cmc
cmp
test
fstpl
pop
rol
push
test
cmp
dec
lahf
jnp
inc
or
adc
xchg
push
jnp
inc
rorl
ss
add
insb
es
xorb
dec
pop
push
outsl
fmull
into
ds
xchg
mulb
pop
cmp
push
pop
stc
sub
mov
popa
push
ficoml
aas
cmpl
add
ja
adc
inc
add
jne
cmc
jno
jp
outsb
cmp
mov
cmp
sbb
in
in
lods
pop
jmp
mov
or
sbb
push
sahf
fsubs
pop
repz
pop
ja
mov
ss
dec
insb
and
lds
or
push
enter
push
adc
pusha
cmc
dec
push
int
adc
dec
aad
jecxz
dec
pop
cmp
ljmp
pushf
rcrb
int
mov
call
das
mov
sub
and
ret
or
cli
inc
sbb
cmp
xor
mov
cmp
mov
lcall
and
jge
incb
gs
inc
stos
test
fcomps
sub
test
mov
cmpsb
mov
mov
pop
cmpsl
aam
jne
dec
dec
add
inc
xor
mov
dec
loop
adc
test
clc
sub
push
insb
clc
bnd
mov
push
mov
push
inc
mov
dec
enter
ja
fstpt
xchg
js
mov
cs
xchg
mov
xchg
mov
pop
hlt
mov
adc
inc
fisubrs
aad
insl
movb
dec
fistps
pop
sbb
add
mov
inc
mov
cmovl
mov
testb
stos
enter
aas
fnop
icebp
dec
or
cmp
mov
and
imul
aam
dec
lock
lds
outsb
sub
pop
inc
sbb
sbb
arpl
mov
test
mov
sbb
stos
xor
cmp
cwtl
inc
sub
jns
fnsave
lret
mov
int
and
mov
adc
and
test
xchg
test
mov
or
inc
es
mov
sbb
inc
jno
jns
lock
mov
adc
mov
cmp
mov
pop
mov
inc
rorb
xchg
xorl
rorl
push
mov
pop
test
inc
mov
jg
dec
sub
add
lret
test
fisubrs
mov
and
pop
call
cs
adc
divl
pop
xor
push
repz
daa
mov
mov
imul
arpl
enter
lds
lcall
pop
add
nop
fcom
lea
in
test
pop
mov
in
cltd
ret
test
sti
scas
pop
add
cli
dec
aad
mov
popa
out
int
test
jg
test
inc
or
pop
and
mov
test
shll
shlb
mov
int3
js
iret
inc
jbe
xchg
arpl
into
enter
loope
xchg
decl
repnz
stos
ss
add
push
mov
fcomi
cmc
add
xor
push
jl
lods
mov
sub
call
je
aam
xchg
dec
push
pop
inc
jo
pop
test
inc
test
loope
push
lahf
ffreep
popa
dec
sub
mov
fstpt
cmp
inc
ficomps
pop
inc
inc
adc
subl
daa
imul
and
cs
mov
insl
jo
fadds
xor
add
or
sbb
mov
int
jns
popa
sahf
or
pop
push
movb
jg
fsub
inc
stc
test
popf
aam
mov
xor
mov
imul
movsl
xor
lahf
andl
push
push
icebp
add
daa
nop
push
out
lret
mov
cs
xor
pop
sbb
aas
dec
cltd
jge
mov
popf
test
or
jle
outsl
leave
mov
lds
dec
xchg
int3
pop
test
test
jnp
pushf
jle
mov
outsl
out
scas
sarl
data16
andb
movsb
push
mov
lret
xor
jp
scas
arpl
jle
mov
test
add
or
mov
fistpll
pusha
mov
add
cmpsl
pushf
idivb
mov
sbb
stos
imul
xor
dec
int
aam
xchg
adc
xchg
mov
mov
cld
inc
push
arpl
push
xchg
mov
mov
cs
roll
shlb
jbe
inc
sbb
in
in
xor
sbb
mov
and
mov
les
enter
cltd
dec
mov
imul
or
inc
sbb
xor
daa
mov
inc
shl
jge
lret
mov
dec
mov
mov
mov
into
xor
leave
sbb
inc
test
movzwl
jge
add
lret
data16
add
xchg
cmc
lret
in
stos
cmp
cwtl
mov
fcomps
xchg
imul
test
imul
or
shll
cmpsb
dec
repz
sbb
fdivrp
jle
aad
cs
int
add
mov
outsl
sbb
popf
cmpsb
mov
sbb
mov
jno
sbb
popa
inc
cmp
mov
sub
adc
sahf
inc
in
inc
inc
jne
in
push
stos
pop
imul
movl
test
sbb
pushf
cli
test
mov
jmp
pop
xchg
iret
scas
es
inc
push
inc
push
call
test
cmp
add
cmc
fwait
stos
rcr
push
ds
fldcw
jo
test
lret
movsbl
mov
enter
fwait
lock
and
iret
mov
xor
and
ret
popf
jmp
cvtpi2ps
sub
out
lds
cli
jle
pop
imul
loopne
or
add
xchg
hlt
jns
daa
add
add
call
ret
insb
mov
jp
faddl
jmp
adc
hlt
out
inc
xchg
jno
test
sti
inc
lret
insb
adc
sbb
cmp
sar
push
sahf
push
xchg
outsl
lods
daa
shl
lcall
rorl
bound
xor
jb
mov
mov
xor
int
dec
pop
cmpsl
jno
fwait
imul
ds
aaa
test
jbe
pushf
icebp
ljmp
adc
xor
fistpll
out
test
sarb
jb
inc
jmp
in
or
adc
push
adc
dec
dec
ror
cmp
dec
sub
mov
jne
mov
iret
loopne
add
sbb
pop
xchg
dec
adc
mov
scas
inc
rcll
inc
pusha
fistpll
fs
jne
ljmp
mov
pop
pop
jnp
test
mov
sub
jle
das
lret
enter
mov
adc
addr16
out
mov
mov
add
mov
imul
movsb
outsl
rcrl
icebp
into
xor
sub
and
jmp
adc
shlb
mov
jg
shl
ror
inc
ret
mov
jae
rep
sahf
mov
mov
xor
sub
jecxz
inc
inc
jle
mov
outsl
adc
outsl
stos
dec
xchg
imul
dec
cmp
adc
jo
int
ss
mov
out
add
sbb
pop
and
scas
mov
cmp
rorl
inc
scas
in
test
mov
mov
jecxz
and
ja
adc
les
sub
test
or
lds
or
mov
jbe
push
in
sbbb
add
lds
test
pop
mov
aaa
push
jecxz
mov
lock
mov
stos
inc
add
sbbb
icebp
sub
cmc
mov
lret
jne
adc
ret
sub
inc
mov
mov
mov
and
push
dec
jno
hlt
lea
mov
mov
movsb
pop
das
cld
xorb
or
movsb
cmpsb
mov
lock
jle
inc
lods
jg
ret
icebp
adc
outsb
outsl
xchg
cmp
mov
test
lock
in
test
or
test
or
mov
adc
dec
mov
jns
sahf
int
cwtl
jno
addr16
push
sbb
jbe
mov
sub
pop
lock
test
or
mov
adc
ret
cmpb
adc
xlat
clc
shll
cmp
icebp
enter
push
and
mov
test
xchg
or
pop
popf
enter
cmp
pushf
lret
nop
cmp
je
loope
cmpsl
or
mov
out
push
sub
and
jno
inc
test
ret
jnp
cld
pop
jno
push
push
fwait
test
sbbb
repz
leave
into
popl
mov
ljmp
add
dec
fs
ds
std
test
mov
cmpsl
add
es
xchg
and
cmp
adc
movsl
add
sbb
jp
jmp
or
mov
xor
ja
ja
pop
sbb
fildl
shl
inc
pop
sbb
lret
popf
cltd
or
cwtl
test
cmpsb
mov
das
jo
or
js
repnz
sub
pop
pop
lret
xor
and
inc
enter
add
imul
dec
mov
and
add
mov
inc
mov
add
dec
jg
loopne
or
lret
out
in
arpl
cmp
dec
jg
sbb
inc
push
xchg
dec
inc
cld
push
test
dec
test
aad
cld
xor
sub
sti
xor
mov
push
mov
inc
jbe
mov
mov
add
popa
stc
out
add
or
xor
or
mov
sub
cmp
fmull
adc
xchg
out
sbb
shll
pop
jg
mov
push
mov
xor
daa
loopne
adc
test
arpl
push
fstpl
aas
sub
mov
push
ds
rorl
mov
dec
imul
decb
dec
imul
mov
sbb
xor
cmp
shlb
loope
test
inc
push
adc
stos
shlb
stos
mov
in
repz
add
mov
rcll
out
hlt
inc
add
jle
outsl
test
ud0
test
add
mov
xor
fbstp
inc
outsb
jno
add
dec
enter
jns
sbb
into
lods
test
sub
or
mov
adc
pop
ss
ret
mov
movsl
jg
ds
lods
fidivl
lods
insb
lret
fcmovnbe
inc
dec
dec
es
and
inc
xorl
add
test
scas
imulb
es
leave
adc
jle
cmpsb
mov
ret
insl
and
insl
pop
add
and
sahf
push
test
sub
push
mov
imul
dec
xor
mov
sbb
mov
outsl
inc
aas
inc
leave
mov
scas
test
int3
in
lock
test
pop
sahf
sbb
xor
pop
mov
dec
or
jae
out
xor
pop
xor
test
sbb
mov
fwait
jl
pop
call
cltd
lcall
sbb
stc
mov
xchg
add
addb
dec
mov
sbb
adc
int
jae
dec
and
xor
in
inc
ja
cmc
jnp
icebp
mov
or
and
fnstenv
dec
mov
pop
xor
push
sbb
or
pop
sbb
sbb
push
cmpsb
cld
stos
inc
ret
sbbl
mov
fwait
adc
sbb
test
cmp
dec
test
dec
xor
fisttpll
sbbl
lds
in
xchg
xor
pop
incl
popl
out
repnz
lods
sub
subb
inc
test
imul
sub
nop
stc
add
adc
std
test
xor
mov
pop
lock
xchg
cmp
out
pushf
pop
push
jnp
movsl
adc
arpl
xchg
mov
sbbl
mulb
xor
and
inc
icebp
inc
adc
loope
js
test
or
ret
dec
adc
mov
pop
sbbl
imul
xchg
dec
in
pop
jl
outsl
lock
inc
jmp
lret
xor
push
pop
mov
out
sbb
push
pop
xor
popf
cmpl
push
pop
or
cmpl
push
pop
cmp
xor
test
nop
in
shll
imul
xchg
pop
lahf
push
sub
inc
mov
add
pop
call
mov
aam
inc
shlb
andl
fwait
sub
jbe
jmp
int3
test
mov
push
ljmp
sbb
dec
aaa
imull
shll
mov
mov
loope
in
add
push
inc
mov
mov
jp
sbb
jg
pop
test
jg
cmp
in
mov
les
ret
or
mov
or
fcoms
xor
stc
lret
scas
icebp
fcmovbe
adc
lcall
sbb
mov
leave
adc
cli
enter
enter
or
push
add
ret
sbb
and
flds
test
ljmp
or
cmp
pop
jno
pushf
vdivss
movq
imul
jge
into
jl
or
icebp
ret
inc
add
jnp
imul
outsl
pop
xor
jecxz
test
jae
pop
ss
and
leave
xorb
sub
mov
test
lds
out
cmpsl
ret
or
fldenv
ret
mov
xor
adc
mov
in
leave
xchg
sub
repnz
push
push
testl
ss
std
add
xor
inc
dec
xor
jb
shl
push
loopne
mov
sbbl
pushf
testl
subl
jg
insl
mov
push
das
xchg
lock
pop
call
push
loope
inc
mov
mov
es
imulb
jns
movl
mov
pop
lret
sbb
out
mov
adcl
lea
pop
inc
enter
mov
or
mov
add
cmp
push
aas
sub
movsl
inc
push
popf
pop
mov
and
push
test
pop
sub
push
and
jle
jge
sub
cmpsb
add
mov
stos
test
xor
int
push
add
or
stos
shl
leave
test
sbb
xchg
mov
pop
loope
push
inc
mov
repnz
mov
sub
mov
lret
pop
jnp
call
xor
inc
loope
xchg
roll
fcom
push
adc
fstpl
fiaddl
mov
ja
dec
inc
jmp
jecxz
adc
push
repz
add
fstps
cmpsl
pop
inc
loop
test
pop
in
mov
xlat
xchg
or
mov
add
and
xor
cmp
sbb
push
pop
dec
sarb
arpl
loope
cmove
xor
test
dec
pop
std
xor
jae
loop
and
push
jo
cli
dec
mov
push
jge
push
test
inc
aad
xor
inc
sbb
movb
testl
andl
aas
mov
into
or
enter
insl
push
xchg
xchg
xchg
dec
loop
sbb
dec
or
fcmovu
mov
lea
xor
sub
or
repnz
test
jb
data16
jno
push
jg
dec
fistps
repnz
test
gs
das
dec
cmpsw
pop
test
mov
in
cmpsl
subl
adc
jp
enter
je
xlat
icebp
arpl
sub
sub
adc
jns
xchg
negb
xchg
ffreep
in
aad
add
push
inc
movb
pop
dec
and
in
inc
pop
mov
shrb
cmp
jae
dec
fnstsw
fnstenv
loopne
iret
pushf
inc
ret
fs
sub
sbb
std
aaa
jp
imul
mov
and
enter
lret
pop
stos
lea
pushf
xchg
mov
and
sub
mov
scas
cmp
and
jo
mov
push
iret
sbb
test
ret
call
divl
jne
cmpsb
push
clc
sbb
push
sti
mov
test
addb
std
mov
nop
mov
push
das
enter
cld
adc
in
mov
out
lret
fcomps
test
mov
loope
xchg
loopne
fdivrl
push
sti
shl
rorl
in
call
mov
mov
mov
mov
mov
xor
pop
mov
and
and
inc
movsb
fildl
aad
ret
inc
inc
mov
cmpsb
subb
xor
rcrl
push
out
add
add
aad
sbb
cmp
repz
jle
mov
shlb
mov
clc
sbb
daa
ret
ljmp
push
or
ret
imul
pop
or
jne
enter
out
pop
je
sub
scas
scas
jg
push
leave
loope
test
xchg
inc
mov
ss
xor
in
push
push
add
fsts
jo
pop
scas
mov
cmp
xchg
mov
into
inc
movsl
push
mov
jl
dec
dec
in
inc
jle
cmpsl
and
outsl
jmp
loope
or
fdivr
inc
stos
add
sub
cmpb
mov
push
mov
roll
adc
lds
ud2
jnp
cli
insb
loopne
imulb
sbb
scas
in
inc
sbb
adc
stos
out
fidivs
pop
inc
and
jno
xor
push
jno
test
test
scas
cmp
fdiv
push
add
lods
js
or
sarb
outsl
adc
mov
faddl
push
inc
sub
mov
xchg
inc
das
movsl
sbb
cmp
or
in
cwtl
loop
arpl
cmc
xor
ss
xor
push
pushf
cmc
sbb
mov
and
imul
and
in
imul
jne
add
stos
cmpsl
add
clc
add
push
jae
sub
cmp
pop
dec
mov
mov
xor
test
dec
mov
je
subl
push
outsl
jmp
mov
push
aas
mov
jle
xchg
ret
fists
mov
pop
jbe
test
aas
mov
je
xor
les
stos
xor
push
ljmp
int
push
adc
push
test
jns
test
enter
fs
mov
add
mov
mov
and
pusha
sahf
cmp
data16
data16
rcrl
ja
push
jno
out
call
push
ja
pop
sbb
pop
das
insl
cs
aam
inc
xor
cmpsl
sbbb
test
pop
aad
jge
shll
rorl
sub
pop
and
pop
add
push
outsb
pop
cmpl
pop
ret
inc
mov
mov
jne
mov
inc
sbb
pop
pop
mov
cmp
dec
pop
mov
pop
addr16
adc
or
insb
mov
xchg
enter
std
icebp
mov
lcall
out
mov
push
lcall
outsb
divl
sahf
or
test
daa
mov
mov
push
shlb
test
insl
rcrl
inc
call
shll
bound
out
xchg
repz
push
mov
scas
mov
push
pop
and
cmp
or
cmp
mov
ja
addr16
mov
dec
out
jle
test
leave
sub
or
add
in
xchg
push
adc
lds
pop
pop
pop
pusha
dec
xchg
insl
popf
push
push
xchg
sbb
xchg
pop
mov
dec
jle
or
pop
pop
jnp
lret
cmp
adc
sbbl
cmpsl
mov
xchg
in
out
push
jns
xchg
aaa
xchg
jb
rcll
shll
or
adc
jp
mov
push
or
cmpsb
je
adc
sarl
mov
or
or
imul
adc
or
movsb
jecxz
pushf
or
shrb
add
pop
cmp
jmp
test
shlb
push
pop
push
insl
jp
stos
mov
in
sub
xor
stc
orl
stos
push
inc
outsb
iret
mov
ljmp
mov
ljmp
xor
out
xor
inc
ja
sub
test
imul
or
add
enter
mov
xchg
ror
push
xorl
lahf
enter
pop
je
dec
dec
add
dec
popaw
sbb
xor
adc
in
test
push
mov
add
jb
test
test
sbb
cwtl
test
dec
adc
mov
inc
jne
mov
arpl
mov
jbe
shll
xor
inc
mov
icebp
repnz
outsb
rol
loope
pushf
ja
cmpsl
stos
arpl
in
das
lret
imul
adc
xor
data16
mov
add
cltd
insb
movsb
icebp
call
mov
sub
push
int
pop
or
shrb
test
insb
rorl
ret
stos
rcrb
stos
andb
inc
shrb
jno
sti
aam
push
xchg
movsl
push
add
and
mov
stc
xchg
test
cmpsl
push
or
sbb
pop
dec
test
add
gs
add
inc
sub
in
ret
mov
push
cld
mov
mov
jae
dec
imul
mov
xor
dec
mov
and
push
sbb
xor
out
leave
shrl
adc
push
popf
std
test
out
push
add
iret
push
push
lods
jb
fldt
lret
cld
loopne
cmp
dec
xchg
pop
pop
or
sub
test
subl
add
fstps
dec
push
lahf
mov
jl
mov
inc
mov
mov
pop
cwtl
mov
mov
movsl
pop
repz
mov
sbb
add
imul
add
inc
add
lods
sub
outsl
and
add
mov
andl
push
pop
jge
icebp
icebp
xor
loop
test
or
sbb
mov
push
mov
in
pop
jno
in
dec
imul
pop
das
and
jecxz
xchg
add
aam
dec
xor
test
adc
jp
std
jo
shlb
jg
inc
ret
pop
xor
xor
or
push
test
dec
repz
xor
popl
ret
add
pop
xor
jp
mov
mov
cmpsl
std
dec
fdivl
daa
sahf
mov
pop
mov
lret
lods
and
adc
inc
sahf
loop
add
jp
mov
or
cli
jl
repnz
or
pop
fisttpll
fmul
cmpsb
outsb
pusha
enter
sbb
dec
stos
mov
ja
inc
fidivl
test
push
xchg
push
gs
jnp
mull
popa
cmpsb
lret
and
xchg
push
xor
jns
dec
push
or
mov
and
les
xor
punpcklwd
pop
mov
int3
cmpsl
jg
mov
jae
shl
popf
nop
in
cmp
icebp
and
ds
pop
mov
add
pop
cmp
xor
lret
push
mov
fistpll
add
cmp
mov
xchg
pmuludq
add
icebp
jnp
sub
and
test
dec
sahf
in
dec
push
sbb
in
lahf
and
dec
push
jmp
push
lret
fadds
test
inc
push
push
or
jl
push
ss
insl
xor
in
movsb
dec
push
sbb
out
cmpsl
sbb
jg
in
add
cmp
cltd
pop
sbb
mov
mov
mov
lds
movsl
cmp
sbb
jmp
addr16
mov
std
scas
mov
fcomi
pop
test
pop
test
sbb
icebp
bound
jle
fstl
test
sahf
sbb
adc
add
adc
test
cltd
inc
inc
push
jns
test
fwait
xchg
mov
arpl
into
pop
ja
xor
es
jns
cmp
xchg
cmp
inc
aad
hlt
test
and
lock
dec
dec
jge
mov
cltd
mov
or
shlb
outsb
dec
jns
jo
or
fsubrl
fnsave
fwait
adc
sahf
dec
test
out
cs
cmpsb
icebp
addr16
cmp
jg
adc
or
mov
jle
fists
adc
inc
repz
sti
mov
cmp
mov
cmp
mov
repz
jg
mov
popa
loopne
das
pop
test
in
dec
cmp
adc
dec
jno
repz
jno
sub
jns
stos
ret
popa
mov
repz
xlat
mov
clc
test
mov
jg
or
or
fsts
ret
je
push
sahf
pop
add
ja
movsl
and
add
test
sbb
out
dec
push
pop
sub
add
test
xor
mov
or
and
jne
out
push
dec
sbb
aas
in
inc
test
mov
cli
je
arpl
into
mov
ror
push
mov
lea
mov
xchg
mov
sbb
and
into
pop
jo
cmpsl
fdivrs
dec
aas
add
icebp
push
pop
xchg
test
or
dec
gs
mov
sub
jae
cld
dec
jne
movsl
in
mov
jo
and
vpcmpgtw
inc
jnp
push
xor
ret
mov
adc
dec
outsb
movsl
push
cli
mov
and
pusha
xchg
sbb
test
sar
mov
leave
cmp
imul
out
mov
push
mov
mov
push
lahf
mov
lcall
cmpsb
sbb
shlb
cmc
hlt
xlat
cmpsl
push
scas
dec
sbb
push
std
outsb
sbb
xchg
dec
adc
fwait
jae
imul
or
xor
movsl
push
inc
icebp
sbb
cs
xchg
push
mov
mov
fmull
push
mov
bswap
sarl
ret
imul
xor
cmc
shlb
dec
divl
ret
sarl
je
lret
adc
push
es
fwait
out
lret
fldt
lcall
repnz
stos
mov
rolb
pop
xorb
ret
cmpsb
test
lahf
xchg
sbbb
dec
fnstcw
sbb
mov
rep
fstpt
stos
ret
sti
push
sub
sub
dec
push
inc
loopne
push
fstps
push
adc
andb
ds
push
push
lea
and
dec
rorl
sub
test
cli
jmp
mov
jno
bound
ja
andb
or
es
test
lods
jae
test
fistl
popa
xlat
out
fisubl
xchg
dec
mov
mov
sub
adc
add
sahf
or
mov
shll
test
jecxz
out
inc
pop
sub
pushf
or
dec
pop
pop
inc
in
inc
in
test
js
lock
cmp
ja
into
pop
test
lret
rorl
mov
dec
xchg
ljmp
xor
rcl
leave
xchg
cli
cltd
and
in
mov
rol
dec
inc
xchg
test
pop
test
insb
ret
cmp
stos
push
cli
filds
rclb
mov
popf
pop
add
inc
out
add
add
mov
jmp
jne
pop
push
int3
mov
or
lock
mov
jae
scas
in
xor
test
sar
cmp
sub
lds
push
mov
dec
and
push
shll
pop
dec
cmp
lret
mov
std
adcl
sbb
dec
int
ds
into
ds
sbb
or
push
scas
cmp
mov
insb
scas
push
sbb
mov
lock
xor
mov
pushf
push
iret
and
inc
inc
push
xchg
lds
jmp
mul
xchg
cmpsl
test
pop
fildl
add
and
pop
or
popa
dec
add
sbb
ret
mov
test
dec
mov
sub
cmp
sub
pop
jl
cmpsl
movsb
lea
out
mov
test
and
cmpsl
pop
bound
test
aas
in
hlt
cmpsb
lods
xchg
dec
jg
stos
jle
xor
push
in
sub
add
in
fildl
cmpsl
cmp
loop
add
scas
in
mov
jno
stc
sub
shll
mov
data16
mov
cmp
jns
push
mov
dec
mov
mov
test
insl
test
or
mov
scas
in
fidivl
bound
add
dec
rorl
push
adc
jg
jge
rcll
inc
testl
xchg
mov
fistpll
icebp
add
ret
mov
cmp
xor
pop
jg
cmpb
icebp
shr
test
mov
add
mov
push
inc
mov
mov
test
cmp
inc
mov
dec
stc
push
arpl
push
hlt
inc
std
push
nop
jp
adc
sbbl
push
jle
je
cmc
pop
das
test
or
fnsave
mov
cmc
inc
ret
into
lea
xor
or
test
push
bound
rcrl
add
iret
pop
test
mov
pop
sysenter
xorl
xor
add
dec
dec
roll
mov
lret
inc
jl
inc
push
pop
fstpt
jmp
in
mov
fisttps
push
ja
icebp
subl
mov
js
inc
pop
test
push
daa
hlt
cmpsb
dec
jle
and
aas
outsl
or
fld
ret
pop
icebp
and
pop
adc
jns
in
lock
les
lods
js
or
stos
mov
movsb
cltd
push
fs
into
xor
mov
jae
lods
push
push
sub
pop
xchg
inc
push
dec
and
les
add
pop
test
add
pushl
cld
pop
data16
sti
or
inc
scas
dec
icebp
mov
aaa
sbb
pop
and
jp
add
imul
cmp
rcll
sar
and
lahf
jae
and
out
add
sub
dec
mov
ret
mov
pusha
lret
aas
xor
inc
pop
pop
cwtl
inc
enter
add
lods
inc
outsb
gs
stos
and
movl
jnp
scas
pop
mov
dec
inc
mov
push
adcb
sub
in
push
push
pop
lret
add
arpl
sbb
sti
mov
mov
and
js
ret
sub
sbb
jnp
daa
pop
cmp
inc
mov
sbbl
stc
push
add
enter
mov
sbb
mov
lods
xor
jmp
cmp
aad
iret
fs
jno
movsl
cli
mov
adc
mov
into
dec
or
push
mov
or
test
and
push
ja
or
cmp
mov
jmp
mov
or
fcmovnbe
push
xchg
mov
mov
jle
sub
cmpl
dec
cs
arpl
call
pop
sarb
inc
bound
xchg
mov
out
jb
gs
push
ss
icebp
sbb
inc
loope
mov
out
dec
pushf
inc
xor
shll
dec
imul
ror
and
sbb
aad
cmpsl
mov
addl
dec
dec
sub
and
mov
inc
sub
add
shrb
sbb
pop
jns
pop
andb
push
cwtl
je
test
fisttpll
fwait
shll
dec
loope,pt
aaa
mov
mov
cmpsl
dec
insb
leave
xor
jno
dec
bound
fcoms
add
out
sbb
pop
icebp
mov
ljmp
push
cmp
aad
mov
jb
test
cmc
xor
dec
xor
js
movsl
xchg
test
sbb
and
xchg
test
mov
imul
xor
and
pslld
fldl
add
cmpsl
mov
adc
arpl
sub
add
test
gs
adc
cmc
test
cmp
arpl
dec
movsb
push
push
test
sbb
rcll
icebp
push
rol
and
sub
xchg
add
pop
sbb
repz
movsb
ljmp
add
xchg
or
cmpsb
out
push
sbb
adcl
xor
pop
adc
jl
repz
sub
xchg
loope
or
xchg
jmp
mov
das
lret
ret
inc
movsl
roll
sub
jne
sub
loope
movsl
sbb
mov
pop
iret
dec
xchg
cmp
lods
cmp
lea
mov
imull
rcr
pop
mov
fmull
add
sbb
dec
por
mov
inc
stc
pop
mov
fwait
mov
mov
lahf
jnp
cmc
sub
orl
or
shlb
mov
mov
out
jo
adc
mov
add
mov
push
arpl
bnd
test
sbb
push
xor
cmp
inc
adc
loope
mov
xchg
pop
adc
pop
lret
add
dec
xor
cmpsb
jp
inc
adc
in
es
ss
insl
aas
mov
jbe
popa
lar
pop
inc
out
inc
js
mov
xchg
fldcw
dec
mov
in
test
mov
inc
sarl
mov
lods
dec
pop
mov
cld
jae
cmc
fnstenv
fisubrs
ja
movsb
loopne
aam
aas
mov
cltd
mov
loope
dec
push
xchg
pop
sub
fnstcw
dec
das
in
js
mov
or
mov
mov
test
outsl
shll
add
mov
fimuls
xchg
mov
inc
dec
xor
fwait
decl
ja
sbb
push
test
or
mov
sub
subb
inc
inc
push
or
adc
cmp
sub
pop
mov
xor
add
pop
cmpl
sub
mov
pushf
adc
dec
jmp
fisttpl
cmpsb
xchg
negb
push
scas
push
inc
lret
adc
sub
or
xchg
sbb
mov
mov
lods
jo
dec
xor
inc
cmpl
push
sbb
lret
and
icebp
ret
lods
xchg
inc
mov
test
in
mov
insb
adc
fsubr
xchg
mov
mov
mov
sbb
test
es
push
lret
arpl
jg
mov
inc
xchg
ret
push
inc
mov
mov
and
sub
cmp
cmp
mov
sub
loopne
outsb
leave
outsb
cmp
jge
sbb
inc
jmp
mov
push
outsb
xchg
and
arpl
ss
shl
out
roll
xor
xchg
sub
mov
push
cmp
inc
test
pop
fwait
daa
mov
scas
and
or
cmp
or
outsb
xor
shrb
ss
fcmovne
test
and
arpl
mov
insb
sbb
adcb
out
gs
add
in
inc
fnstcw
pop
test
in
add
mov
popf
test
mov
inc
daa
xchg
cmp
enter
and
enter
int
test
pushf
loope
xor
aas
icebp
sub
mov
imul
js
cmpsl
cltd
out
mov
mov
sub
mov
int
insb
pop
push
pushf
add
sub
stc
fsubrl
and
push
loop
lods
ds
sub
ret
xchg
out
stos
adc
pop
sub
inc
adc
or
xor
fidivrs
add
out
mov
sahf
jge
lods
sbb
sbb
cmp
add
push
adc
push
cmpsl
or
daa
sbb
add
mov
push
imul
inc
xchg
jns
sbb
bound
stos
pushl
or
shr
and
add
push
lret
inc
out
testl
jae
pusha
lahf
sbb
mov
dec
movsl
adc
xchg
xchg
mov
dec
cmp
dec
or
ds
adc
mov
push
xor
aaa
mov
insb
pop
jns
xor
sub
cli
sub
rcrl
ja
and
adc
scas
outsb
add
in
ljmp
push
lods
dec
push
inc
ret
dec
pushf
mov
testb
xchg
arpl
add
pop
jp
jne
cltd
jp
push
push
test
xor
and
jmp
test
push
cmp
test
loope
dec
inc
xor
sbb
mov
test
add
push
add
rorl
rorb
ds
into
dec
stc
test
and
mov
sub
jmp
sub
or
ds
stos
rcrl
sbb
dec
enter
icebp
adc
repnz
inc
dec
andl
movsb
jns
xor
stc
mov
add
mov
ret
pop
test
sbb
das
jge
xor
test
cmp
cltd
sarl
pop
xor
adcb
mov
jnp
jne
outsl
das
stos
adc
ss
lret
sarl
in
mov
cmp
cmp
clc
ss
mov
data16
test
inc
sbb
pop
adc
inc
adc
sbb
inc
in
dec
es
js
mov
xchg
xor
inc
inc
xchg
push
rcrb
or
sub
add
shll
addr16
out
shll
push
mov
mov
ds
movsl
int
add
dec
fcoms
pop
inc
sbb
data16
mov
daa
in
pushf
incb
cwtl
mov
pop
or
ja
mov
sub
mov
in
xor
in
test
pop
push
inc
add
pusha
pop
data16
adc
pop
jmp
jo
jns
mov
aas
mov
mov
sub
testb
dec
test
loop
xor
pop
xchg
clc
jne
scas
jnp
imul
cmp
mov
lahf
pushf
mov
mov
jnp
xchg
test
jl
push
or
or
orb
and
push
aaa
ret
lret
test
lds
sub
popf
cs
adcl
test
subb
adc
clc
sub
add
into
pop
ja
dec
jnp
in
imull
fnsave
inc
int3
inc
mov
test
add
adc
in
sub
dec
loope
cmp
pop
repnz
das
jne
lods
push
sub
mov
outsb
vpmadd52luq
lahf
icebp
push
divl
lock
scas
lea
movb
movsb
rcrb
sbb
xor
std
dec
outsb
movsl
fmuls
cld
out
jg
jle
je
mov
xchg
jne
test
addr16
mov
sub
xchg
mov
ja
imull
in
dec
pop
lret
mov
insl
jnp
inc
ror
jo
call
pop
or
fs
or
lcall
cmp
pop
inc
jb
mov
insb
push
in
xor
divl
loopne
loopne
xchg
sub
mov
out
leave
push
ljmp
inc
fistpl
cmpsl
xor
push
pop
int3
insb
xorb
or
mov
push
enter
repz
stos
iret
mov
pop
fcompl
inc
inc
cltd
push
in
mov
push
pop
mov
push
add
sbb
icebp
dec
dec
mov
inc
mov
ja
or
lcall
or
popf
out
inc
mov
leave
loope
repnz
xchg
imul
int3
jno
out
push
adc
rcrl
icebp
lahf
movsb
fcmovne
in
arpl
dec
sub
pop
mov
mov
jp
pop
and
jmp
jb
sub
loope
jl
inc
add
ffree
mov
mov
or
lea
jmp
aam
lds
sti
jb
xchg
and
mov
sbb
adc
jmp
in
sub
notl
push
push
xchg
mov
lock
add
xchg
daa
add
icebp
out
lret
test
jmp
scas
ret
bound
in
add
fwait
push
aam
pop
rclb
rolb
or
iret
daa
out
sub
lods
pop
cmp
enter
scas
out
push
xor
mov
or
fmul
stc
sub
pop
dec
in
add
xor
rcll
and
in
fnstcw
loopne
fmuls
test
adc
mov
orl
sbb
rcl
or
inc
cmp
inc
and
dec
dec
xchg
or
dec
sbb
scas
xlat
mov
scas
lock
xor
jbe
mov
sub
and
or
icebp
ljmp
and
lret
mov
mov
push
and
test
mov
ficomps
mov
inc
popa
mov
out
pusha
repz
adc
jo
add
push
jmp
cwtl
xor
mov
cli
sbb
pop
adc
pop
notb
jns
clc
pop
xor
iret
push
leave
push
inc
jecxz
cltd
push
fwait
push
lahf
iret
rcr
sbb
jle
xor
sahf
testl
mov
out
dec
stc
sbb
ja
xchg
out
test
inc
loop
cs
mov
dec
mov
stos
rcll
pop
jns
jmp
mov
enter
adc
scas
xchg
adc
negl
add
cmpl
int3
push
popf
mov
sbb
movsb
cwtl
or
push
mov
mov
in
push
inc
add
stc
fadd
ss
mov
hlt
fdivrl
and
ja
stos
push
and
sti
aad
loopne
or
dec
sti
xor
and
outsb
push
mov
stos
xor
mov
sub
es
cmp
mov
bound
push
lods
push
mov
shr
adc
jmp
mov
push
out
cld
and
rolb
xor
or
fsts
insb
jp
stos
shl
push
and
fwait
sti
sbb
test
mov
pop
fstps
sbb
mov
cwtl
rorb
cmp
test
inc
sarl
sub
mov
xor
mov
lods
or
mov
les
aam
das
fs
jns
sarl
dec
mov
pop
xchg
ljmp
lret
mov
xor
mov
sub
xchg
shrl
xor
push
cltd
enter
cmp
or
leave
sarl
inc
and
fstps
inc
addr16
xchg
repz
mov
in
call
sbb
adc
xor
fldcw
outsl
jns
in
jb
mov
push
push
pop
xchg
cmpsb
mov
xorb
jg
aaa
inc
dec
outsb
lcall
rcrl
and
adc
lcall
clc
dec
into
aam
cmp
jecxz
ds
cmpsl
stos
sub
adc
inc
cli
ret
and
fsubs
std
or
hlt
xor
mov
out
dec
jb
push
xchg
mov
arpl
mov
pop
and
fnstsw
or
dec
nop
faddl
push
lahf
add
mov
mov
and
or
xlat
mov
nop
xchg
aas
enter
adc
mov
flds
inc
inc
loope
ficomps
adc
cmpsb
jmp
stos
in
lret
out
andb
lret
push
and
jle
lea
int
pop
sub
repnz
mov
mov
dec
push
jns
movsb
xor
push
outsb
sbb
test
sbb
int
mov
inc
pop
dec
inc
sahf
stos
mov
adc
incb
sub
mov
or
sbb
add
imul
ficompl
cs
pop
add
push
push
sbb
in
inc
ja
jle
pop
ret
mov
jo
sbb
lea
dec
imul
out
das
popa
push
out
pop
ds
adc
mov
nop
imul
test
stos
xor
dec
icebp
daa
sbb
testb
stos
jne
outsb
movsl
fildll
in
clc
cmp
add
add
jmp
mov
or
mov
negl
inc
shrb
add
scas
movsl
mov
clc
and
ret
lcall
dec
mov
xor
jle
and
flds
pusha
mov
fisttpll
int
and
mov
ja
notl
inc
pop
lds
fcompl
xchg
es
clc
call
add
mov
dec
mov
mov
add
jb
ss
stos
aad
xchg
mov
cmp
sub
and
movsb
lods
ljmp
mov
lahf
ret
add
sub
es
std
adc
test
jecxz
movsl
lock
lock
hlt
cmp
aas
movsb
repz
cmp
push
lock
adc
sbb
xchg
and
push
jae
out
mov
es
or
cmp
pop
sbb
outsb
in
dec
push
jecxz
sahf
mov
fisubrl
sahf
pusha
data16
sti
imul
cwtl
test
in
test
lds
dec
dec
xchg
inc
push
lods
sbb
into
fisttpl
rorl
add
mov
adcl
xchg
inc
push
xor
enter
pop
movsl
js
test
js
push
cmp
and
jmp
roll
rolb
out
sub
test
jge
fidivs
and
lahf
xchg
clc
jne
mov
movsl
xchg
je
popf
mov
in
lret
loope
xchg
push
pop
pop
xor
xchg
lds
ret
lods
jmp
sbb
enter
sub
push
ja
inc
xchg
jno
test
mov
or
xor
scas
rol
lret
das
hlt
dec
pop
dec
stos
arpl
jno
xchg
data16
add
sar
xchg
out
cmpsb
xchg
push
test
push
das
aam
xchg
adc
dec
push
ret
outsb
mov
testl
mov
les
push
xor
mov
sbb
pusha
call
or
push
cmpsl
dec
cld
mov
aam
pop
ds
stos
xor
loope
popf
gs
lret
pop
int3
mov
xchg
mov
lds
shrl
call
add
cmp
or
mov
adc
stc
mov
pop
outsl
dec
xchg
or
jbe
lcall
sbb
popf
dec
adc
lods
mov
cmc
andl
jne
push
insb
test
enter
lock
or
aam
cmc
orb
arpl
and
into
pop
jo
push
inc
fcmovne
inc
cmp
xchg
push
mov
xchg
sbbl
loope
out
icebp
jb
mov
push
test
cwtl
fimull
and
cmp
lahf
inc
mov
adc
leave
xchg
cmpb
dec
push
test
in
mov
ffree
test
mov
jno
push
cmp
jae
mov
pop
test
pop
xchg
test
lret
xor
xor
xor
and
aas
ds
xchg
inc
aam
pop
mov
adc
xor
lret
daa
and
es
test
add
shll
mov
mov
sub
test
inc
fldl2e
xor
aam
aad
leave
mov
and
push
xor
icebp
cltd
mov
push
cwtl
mov
and
and
pushf
aam
leave
sbb
mov
mov
rcrb
addr16
lret
cmp
push
subl
ja
xor
rcrl
add
push
movsl
jmp
sbb
in
stos
mov
jl
sti
and
push
test
jno
or
pop
sti
cwtl
aam
mov
pop
pop
aaa
ret
sub
pop
jle
lahf
sbb
outsb
loopne
dec
jge
ret
mov
mov
mov
mov
ret
push
pop
mov
pop
xchg
cmpsl
sbb
ss
mov
fisubrl
jnp
lret
mov
stos
jp
sti
aad
xchg
into
ss
cmpsl
sub
cmpsb
push
mull
leave
ret
pop
stos
xor
push
data16
sub
and
lcall
sti
dec
dec
push
push
mov
fimuls
imull
sbb
adc
shll
mov
mov
test
xor
cmp
mov
jae
sub
pop
xabort
dec
xor
ror
jbe
xchg
outsb
sbb
stos
ret
push
mov
mov
add
pusha
sub
int
add
jns
dec
add
loope
aam
mov
mov
ljmp
subl
push
je
push
mov
or
sbb
fnstsw
repnz
int
xchg
mov
mov
in
aas
stos
mov
sub
push
mov
in
dec
andb
sbb
xchg
std
push
ja
jae
lahf
andl
stos
and
test
test
adc
scas
xchg
stc
xorb
dec
xchg
inc
inc
leave
xor
es
loop
sub
outsb
outsb
sbb
dec
ljmp
mov
int
out
mov
imul
gs
scas
sbb
leave
out
fnstenv
push
add
dec
pop
mov
popf
cmp
fcmovbe
fwait
in
mov
add
not
sub
jno
pop
jne
or
lock
jecxz
testl
add
lods
cmpsb
rorl
jl
fimull
sar
dec
mov
xor
test
sbb
nop
jnp
loop
arpl
push
mov
int
push
mov
xchg
loope
aam
mov
cmpl
inc
push
aad
push
inc
mov
mov
repnz
in
adc
std
dec
lahf
aas
addl
mov
nop
clc
stos
icebp
cwtl
loop
push
mov
lods
cltd
andl
xchg
inc
adc
enter
cmc
fxch
rorl
fldt
pop
in
les
or
test
ret
or
push
test
adc
or
inc
jbe
ret
ljmpw
scas
out
enter
adc
push
repz
mov
ss
jne
or
rcrb
jae
out
stos
or
push
mov
mov
push
pop
inc
or
mov
gs
mov
sub
sub
std
mov
lcall
push
inc
lret
sti
aad
stos
lods
dec
xor
sub
sbb
lret
adc
mov
inc
hlt
out
jge
mov
nop
jmp
aam
xchg
mov
xchg
dec
lret
sub
cmp
pushf
dec
dec
add
inc
cmp
enter
xor
push
xchg
mov
dec
lahf
add
shlb
adc
jo
inc
loop
stos
mov
sbb
in
push
xchg
into
mov
xor
jns
mov
pop
rcrl
std
test
or
xchg
and
mov
jl
mov
jecxz
sbb
dec
mov
dec
jno
or
mov
add
adc
clc
or
mov
adc
push
dec
fisubrl
mov
in
xchg
xor
adc
mov
out
xchg
push
out
jo
dec
roll
pop
movsl
mov
int
and
pusha
jne
pop
or
fstps
cmp
lods
inc
leave
cmp
add
ret
mov
or
lret
pop
pop
es
aad
xchg
push
scas
sub
test
push
fistl
shrb
insb
addr16
mov
int
jo
test
pop
sub
test
data16
sbb
addr16
mov
lahf
add
push
iret
push
insl
fisubrs
push
mov
jns
cs
inc
arpl
ficomps
icebp
mov
adc
inc
lods
xchg
arpl
testb
aaa
xor
sbb
jecxz
adc
dec
arpl
jg
pop
mov
sahf
call
lret
jg
jl
adc
scas
and
dec
test
and
in
mov
dec
inc
add
sub
btc
inc
push
adc
jne
mov
mov
dec
mov
fstps
and
inc
xchg
dec
mov
cmp
scas
pop
stos
mov
scas
and
xor
sbb
adc
push
push
jnp
cmp
push
movsb
xorb
jle
js
icebp
shr
sahf
xor
push
fs
xchg
add
es
lahf
xchg
cmc
inc
shll
adc
pop
push
icebp
sub
test
gs
test
jp
push
nop
inc
clc
dec
or
dec
icebp
in
cmp
inc
inc
jbe
sahf
cmc
adc
popw
movsb
xlat
dec
icebp
mov
fistpl
xlat
or
mov
movsl
cmpsl
cld
repz
ds
adc
sub
call
iret
test
mov
and
xchg
idivl
in
jmp
mov
sbb
and
mov
repz
pushf
inc
jb
cwtl
push
movsl
aaa
daa
sbb
sbb
das
pop
cmp
xor
mov
pop
mov
jle
aas
test
jnp
loopne
mov
sbb
pop
mov
scas
mov
adc
in
sub
insl
lock
cmp
movsl
icebp
pop
dec
inc
inc
mov
hlt
lock
add
imul
enter
sbb
test
adc
test
push
push
rol
test
or
mov
out
xchg
inc
jge,pn
aaa
dec
mov
add
cmp
inc
lock
sub
jl
dec
leave
cmp
mov
pop
je
testl
sub
xchg
call
scas
and
aam
ret
lcall
or
push
jle
xchg
pop
xchg
jp
jl
mov
adc
adc
mov
or
dec
jbe
push
test
xchg
adc
fidivl
in
clc
mov
xlat
push
adc
sahf
in
and
adc
push
repnz
sbb
ret
and
ljmp
test
lock
cwtl
pushw
push
loope
pop
jle
sub
loopne
mov
pop
or
andb
das
test
xor
test
sbb
mov
test
inc
in
in
iret
dec
pop
fadd
test
insl
jno
stos
pop
mov
xor
sub
fcmovnbe
cli
inc
jne
xlat
xchg
out
lock
test
sbb
push
xchg
lahf
sbb
or
in
mov
xchg
mov
into
pop
mov
dec
int
insb
add
js
mov
sub
out
adc
test
jnp
ds
push
pextrw
scas
aad
or
add
add
sub
sub
cmp
xor
sub
mov
outsl
sbb
and
jge
and
es
inc
inc
outsl
xchg
movsl
cmc
call
or
fstl
pop
fdivp
stos
mov
or
addr16
scas
mov
mov
xor
incb
mov
ja
pop
inc
sbb
gs
adc
fidivs
mov
stc
mov
mov
xchg
out
mov
mov
int
test
popa
cwtl
fimuls
adc
inc
nop
adc
sbb
int3
cld
cmpb
ret
mov
aad
outsl
lods
or
xchg
cwtl
mov
nop
cmpsb
idivb
pop
popf
xchg
adc
imul
aaa
and
add
cmpsl
lods
sbb
push
jmp
outsb
or
insl
in
inc
adc
sbb
hlt
fnstcw
push
popf
push
mov
mov
pop
jp
imul
mov
dec
xchg
fstp
mov
and
insl
push
out
xor
sub
out
xlat
cmp
bound
xchg
in
imul
xor
inc
dec
mov
lcall
mov
mov
mov
ds
fwait
test
addl
inc
add
imul
inc
cmp
std
inc
jo
mov
mov
mov
xor
sti
in
add
inc
jb
jns
loopne
jle
aam
jg
in
dec
pop
mov
jae
xorb
add
mov
mov
icebp
sarb
mov
push
pop
jl
popf
hlt
sub
arpl
mov
pop
scas
insl
aaa
push
mov
lods
syscall
cmpl
aam
das
adc
adc
in
rcr
mov
xor
imul
out
sbb
xchg
add
push
push
cmpl
cli
addr16
jle
adc
insb
sbb
sti
outsl
loop
inc
mov
scas
jmp
sahf
dec
imul
adc
jno
jp
cmpsb
sub
stc
test
add
mov
pop
jmp
jo
je
mov
jb
jb
jne
call
punpckhdq
in
mov
out
in
xor
test
mov
or
lods
jg
jecxz
add
cmpsl
inc
jg
movsl
mov
daa
data16
add
addr16
dec
mov
pop
ret
jbe
shlw
shrb
push
sub
cmpsl
xchg
xor
mov
test
hlt
lret
xchg
cmc
lcall
bound
ljmp
outsl
pop
iret
test
inc
cmc
mov
pushf
adc
pop
jp
push
mov
pop
sahf
ret
sub
cmp
cmc
stos
lock
loopne
adc
ss
jle
sbb
jecxz
jg
test
xchg
out
lock
jne
mov
sub
lret
rorb
push
push
and
pop
jns
lods
iret
cwtl
in
jmp
and
pop
sar
push
adc
enter
and
cs
scas
mov
xor
dec
mov
inc
push
lds
enter
ror
pop
enter
inc
mov
pop
not
fcompl
add
push
inc
or
sub
add
dec
sti
add
mov
pop
fcmovnb
test
push
hlt
lahf
icebp
test
dec
pushf
ret
outsl
sbb
push
fstp
movsl
insb
pop
push
inc
lahf
and
push
in
and
subl
nop
dec
test
or
insb
sbb
out
test
dec
cmp
insl
pop
jnp
in
and
push
jp
aaa
fsts
arpl
lds
mov
xchg
mov
arpl
ljmp
stos
mov
add
or
push
jle
mov
mov
jp
or
cld
fwait
and
xlat
fwait
std
fs
jmp
or
push
mov
insl
or
push
jb
inc
mov
or
test
cmp
cmp
call
or
incb
adc
push
sbb
mov
add
test
dec
lods
paddw
aas
mov
cmp
mov
pop
pop
dec
inc
sub
shld
cltd
scas
in
fldl
xchg
fistl
dec
cmp
add
pushf
xchg
fadds
pop
mov
mov
je
in
pushf
adc
sbb
cmp
jecxz
enter
xchg
cmpsb
sub
mov
inc
jmp
bound
stos
out
lret
jg
iret
aam
fstpt
ss
cmc
dec
mov
movlps
das
aad
sahf
insb
in
cmc
cmpb
fisubs
push
icebp
lret
scas
and
mov
and
or
enter
leave
aas
bound
add
in
jno
out
pop
inc
ds
mov
add
data16
iret
or
mov
stc
pop
push
mov
jge
xor
push
insl
aaa
xor
push
inc
adc
pop
pusha
ffreep
add
adc
mov
fldenv
cmp
jne
mov
cmc
lds
orb
shrl
sub
add
popa
insl
int
loopne
xor
sub
pusha
cmp
and
fimull
aam
cmp
enter
add
arpl
pop
add
ja
cmp
pop
jg
push
popf
mov
mov
dec
push
or
mulb
out
jns
add
dec
xor
pop
or
mov
jne
aad
jecxz
xor
test
stos
or
nop
push
stos
push
cmovl
inc
add
repnz
pop
jae
dec
movsb
push
pop
sub
mov
cmp
scas
pop
popf
adc
xchg
sbb
je
mov
push
int
pop
or
out
sti
ret
cmovge
add
xor
jle
sarb
pop
aaa
xchg
lods
sbb
xchg
into
cmp
ret
dec
ljmp
or
out
mov
test
jb
scas
dec
enter
int
test
sbb
cmp
mov
test
lock
sub
imul
add
dec
gs
scas
pop
mov
xchg
repz
pop
ret
xor
push
ljmp
shrl
push
jnp
iret
outsb
cmpsl
xlat
inc
xchg
jg
and
ret
push
popa
insb
cmp
inc
loope
test
mov
fldcw
shr
rcll
xorb
xchg
jp
stos
mov
dec
pop
insb
inc
rcll
out
push
mov
dec
scas
imul
mov
dec
pop
data16
dec
int
test
add
fcoml
cmc
into
push
stc
jge
cmpsl
nop
aad
bound
shll
mov
into
mov
insl
inc
fidivrs
mov
mov
add
xchg
ja
in
and
fwait
push
out
or
dec
mov
sub
divb
enter
clc
mov
sbb
and
sahf
ss
sub
jno
fldenv
sbb
sub
and
test
pop
ds
xlat
add
rcrl
out
dec
sbb
ret
imul
inc
pop
add
int
or
mov
arpl
sub
add
xchg
add
inc
enter
pop
adc
jnp
arpl
test
pop
fisttpll
inc
mov
outsl
aam
cmpsb
shlb
lock
je
cli
mov
scas
in
jbe
mov
jl
push
jmp
sar
repnz
and
adc
add
lret
arpl
mov
xchg
subl
xor
mov
leave
pop
imul
xchg
add
out
lret
ljmp
or
push
sub
mov
mov
mov
jp
popf
loope
outsl
aam
fsubs
pop
dec
cmp
pop
imull
pop
or
push
mov
pop
popf
push
pop
icebp
dec
aaa
decb
aad
inc
jns
pop
loop
mov
stos
dec
mov
sarb
push
sbb
aad
rorl
repnz
sbb
xor
std
inc
int
cmpsl
adc
test
or
inc
and
cld
push
inc
and
pop
lcall
iret
into
pop
jb
inc
mov
into
inc
pop
call
mov
test
test
dec
in
jp
sub
inc
xchg
and
enter
mov
xor
repnz
mov
jle
test
mov
movsl
jle
out
push
add
inc
ret
scas
add
rolb
xchg
cmpsb
xchg
add
ret
aas
or
jne
fisttps
inc
fs
loope
test
pop
mov
pop
addb
fcoml
xor
mov
push
or
xchg
add
scas
icebp
imul
std
loopne
mov
mov
add
sub
shl
mov
add
push
mov
adc
add
es
mov
push
mov
pop
dec
xorl
mov
dec
in
sub
int3
add
fmuls
sub
xchg
incb
lcall
jmp
mov
inc
test
mov
inc
fimuls
inc
jmp
sbb
lock
or
adc
loopne
out
pop
and
sub
jne
les
xchg
mov
sbb
aad
push
dec
mov
bound
xor
in
mov
sbb
jmp
decb
jmp
filds
fiaddl
je
and
int
mov
mov
push
test
jne
or
imul
jmp
xchg
or
mov
ret
rclb
iret
jns
test
out
loopne
pop
sub
jnp
dec
sti
jl
or
outsl
aam
jns
xchg
int3
cwtl
dec
test
rcr
testl
and
or
pop
dec
push
std
lock
imul
pop
adc
xchg
js
enter
out
outsl
pop
pop
dec
push
sarl
pop
push
dec
jnp
mov
dec
lret
inc
pop
dec
lock
add
adc
adc
mov
mov
jo
movsb
inc
mov
pop
sbb
push
in
scas
leave
insb
clc
shll
lret
jmp
inc
call
push
xor
sbb
push
sti
mov
inc
js
mov
sub
cmc
mov
jp
or
icebp
push
cwtl
mov
cmp
jns
mov
fdivl
xor
loopne
mov
inc
movsb
pop
sahf
in
out
mov
test
jnp
add
cmc
jae
push
push
stc
push
fisttpl
rcrb
xor
add
insl
or
lret
add
mov
mov
in
cmpsb
iret
sub
into
frstor
cli
rcl
xor
xor
and
scas
jle
sbb
test
push
imul
cmp
push
mov
int3
nop
jae
xchg
jnp
out
lret
sub
mov
pop
and
incl
pop
xchg
mov
js
jl
sub
ror
aam
insb
or
xor
fsub
sahf
test
rcrb
or
pop
sti
mov
mov
ss
into
dec
shrl
mov
push
je
les
or
inc
ja
adc
sti
dec
add
cmp
ret
lret
pop
out
pushf
pop
cs
loope
mov
rcl
and
mov
daa
sbb
xor
test
add
bound
in
adc
or
add
das
and
in
clc
mov
retw
sub
mov
add
test
dec
push
mov
ljmp
mov
pop
pop
sub
jo
test
aaa
xor
int
gs
jle
mov
inc
mov
ss
cmp
inc
imul
pop
add
ds
and
push
mov
ljmp
in
or
push
mov
arpl
sbb
push
xor
dec
push
sahf
xchg
jmp
gs
mov
cmp
sbb
call
fiaddl
mov
inc
cli
xchg
nop
add
pop
pop
xchg
test
xchg
or
cmc
roll
in
in
mov
loop
imul
je
jns
jo
test
fbld
gs
xor
cmp
scas
test
in
push
rcll
mov
scas
jecxz
addr16
sbb
xor
inc
fwait
sbbb
clc
bswap
movb
aam
add
rclb
lods
push
mov
mov
mov
inc
outsl
dec
insb
jo
outsl
dec
pop
lock
push
out
shrl
iret
lea
std
nop
movsb
and
pop
call
mov
jl
in
xchg
icebp
jne
xor
inc
adc
cmpsb
ja
sub
popa
pop
sbbb
push
cltd
mov
lds
out
adcl
js
mov
jae
mov
out
out
pop
aas
jo
push
sub
daa
sbb
fmul
test
lea
cmp
repnz
mov
xchg
gs
xchg
dec
mov
test
inc
je
jnp
ficoms
aas
mul
adc
sbb
xor
leave
fxch
sbb
ss
bound
jg
sub
lea
popa
push
movb
inc
mov
packssdw
pushf
sbb
cmpsb
insl
and
iret
cld
rcll
aam
push
cmp
sub
push
out
mov
sub
clc
imul
cmp
mov
pushl
mov
mov
mov
sbb
sbb
mov
enter
pop
sub
cmc
fisubrs
fadd
insl
arpl
test
ss
push
xor
sub
pop
daa
fdiv
cs
inc
push
jne
jne
cltd
push
in
and
rolb
jnp
jmp
sub
dec
mov
subb
outsl
pusha
xlat
lods
dec
inc
add
test
je
lock
fmuls
or
pop
test
mov
adc
xorl
pop
mov
scas
mov
test
xchg
jl
insl
mov
add
test
lcall
outsl
andb
and
cmp
jle
and
sub
pop
inc
ret
lods
lret
add
movsb
or
mov
mov
xor
insb
mov
mov
mov
jne
inc
lcall
pop
out
jp
jno
or
cmp
push
push
push
in
sbb
add
push
lods
inc
push
mov
cmp
fdivr
xchg
cli
mov
dec
jg,pn
rclb
pop
dec
std
pop
sub
and
imul
mov
repnz
xchg
aam
cmc
inc
fs
xor
cmp
ja
adc
notl
enter
xor
mov
ja
in
jl
xor
mov
or
call
dec
shl
cmpsl
sub
punpckldq
push
adc
jl
pop
out
test
push
dec
cmpb
in
push
pop
xchg
test
imul
aaa
push
repnz
ret
adc
mov
jae
scas
push
push
sub
cmp
stc
es
jg
or
sub
push
bswap
shll
lds
sti
aaa
ud1
aaa
loopne
push
bnd
movsl
pop
iret
jnp
fcmovbe
test
pushf
mov
lods
add
sbb
mov
test
and
jne
sbb
mov
test
jb
push
mov
cmp
ss
xor
fnstcw
push
in
dec
inc
les
adc
mov
fdivrs
jnp
mov
in
fistl
mov
int3
shrb
sbb
leave
lock
dec
xor
nop
jecxz
jns
scas
ljmp
rorb
in
les
xor
rcrl
or
ret
movb
xor
sbb
aaa
mov
sub
jbe
rol
in
xchg
pop
xchg
in
mov
jle
xor
sbb
xchg
inc
xchg
push
sub
inc
pop
stos
jns
jne
mov
into
dec
sbb
sahf
clc
test
xchg
push
mov
roll
ret
hlt
cli
frstor
or
leave
cmpsb
jle
xchg
dec
inc
add
leave
push
cmp
shlb
movsb
xlat
pop
sbb
xlat
push
hlt
mov
pop
std
cmp
mov
cltd
add
into
stc
test
mov
test
add
sub
cmp
or
call
test
loope
push
enter
pushf
or
sub
xlat
xchg
shr
adc
mov
jns
pop
cmpsb
test
aas
das
mov
stos
test
jg
inc
ud1
jno
cmp
mov
in
inc
sub
ja
movsl
dec
pop
movsl
daa
out
inc
dec
sbb
inc
jg
xor
test
add
pop
adcb
push
lret
je
mov
das
lods
and
pop
and
inc
push
cltd
inc
movsb
dec
pop
adc
lock
dec
inc
xchg
xor
inc
sub
add
xchg
pushf
sbb
pop
cs
adc
jg
fstpl
sub
push
sub
cmc
adc
mov
fldcw
mov
mov
out
xchg
dec
jle
loopne
icebp
fldt
loope
and
test
add
push
mov
xorb
push
mov
js
jnp
add
xchg
sub
sbb
fldpi
jo
fimuls
xchg
adc
sub
adc
push
test
aam
push
adc
test
insb
pusha
ret
push
inc
and
push
into
es
shlb
scas
dec
rcrl
cmc
and
inc
mov
pop
mov
loopne
lds
sub
test
sbb
shlb
daa
push
sahf
cmp
outsl
fsubrs
sub
ss
push
or
data16
xchg
add
push
divl
ss
rcrb
push
cmpsl
or
sbb
icebp
mov
mov
xor
pop
and
inc
mov
xor
xchg
arpl
sub
or
fsubrl
and
push
dec
xlat
in
orb
lret
icebp
pop
popf
pop
inc
sub
and
incb
faddl
push
mov
xor
icebp
jg
mov
cltd
jno
stos
dec
mov
cmp
xchg
out
jecxz
jmp
jmp
lock
lcall
mov
pusha
hlt
stos
xchg
xchg
pop
popa
lahf
push
stos
pop
or
xor
call
adc
push
adc
jae
ljmp
leave
repnz
std
jge
mov
push
and
xchg
shll
loopne
jle
sbb
fsubr
jbe
sub
lret
push
mov
loopne
test
in
lret
aam
add
inc
loop
shrl
or
jbe
or
pop
jecxz
ror
inc
ret
dec
lret
daa
xor
mov
and
enter
movsb
cmp
xor
xor
outsb
add
sbb
test
scas
out
lods
adc
dec
mov
mov
test
dec
inc
dec
cmp
adc
lods
inc
or
test
xlat
mov
sahf
pop
add
push
push
call
mov
dec
or
out
push
dec
mov
addr16
icebp
push
test
mov
mov
push
sub
jmp
xchg
les
xor
mov
cmp
inc
mov
test
jns
dec
clc
das
push
out
mov
enter
push
pop
popa
test
jl
loope
push
stc
aaa
mov
push
push
pop
dec
ficoms
xchg
test
cwtl
int
or
xchg
dec
cli
bound
fsubp
test
test
cmp
push
popa
mov
pop
jne
add
or
pop
int
repnz
inc
add
pop
shr
pop
notl
add
outsb
mov
inc
jb
sbb
aaa
xor
daa
push
mov
dec
pusha
and
imul
jle
push
add
push
xor
movl
pop
mov
and
shl
je
fstpt
push
adc
mov
and
aad
into
inc
dec
sbb
push
dec
stos
or
cmp
mov
lods
sbb
pop
inc
push
or
inc
movsb
jns
fdiv
xchg
pop
xor
inc
push
mov
nop
outsw
ret
ret
test
vfmsub213sd
jo
aam
repnz
xor
adc
or
dec
mov
jge
add
inc
aam
mov
clc
mov
push
cmc
mov
test
dec
cmpsl
cwtl
icebp
inc
jle
mov
or
mov
dec
jb
jns
or
or
lea
lea
pop
mov
shlb
jmp
sti
cmp
pop
hlt
divb
sti
dec
movsb
xor
sub
cmp
push
test
pop
rcll
adc
inc
cmpsl
fdivs
test
cmpsb
in
add
fldt
cmpsb
mov
stc
bound
sahf
rcrl
xchg
push
mov
mov
dec
in
xchg
mov
popf
jmp
jl
pop
mov
mov
orb
int
mov
ret
push
inc
bound
add
ds
int
mov
mov
pop
lahf
fistps
ret
stos
xchg
and
movsb
shll
lock
add
mov
adcb
pop
test
ret
push
divl
test
popa
bound
jno
psllw
jne
lret
aam
add
adc
xchg
cmp
sahf
jne
jnp
and
mov
ret
outsl
xchg
pop
cmp
add
jl
or
faddp
dec
dec
lock
jno
test
pop
cli
xchg
jnp
and
fs
mov
xchg
inc
mov
andb
je
mov
inc
out
stos
out
fstps
addr16
pop
inc
dec
push
popf
ds
roll
cltd
repz
inc
test
lcall
test
xchg
cmpsl
adc
mov
push
test
mov
insl
movsl
push
jmp
sbb
icebp
cs
push
push
outsb
add
jmp
sub
movsl
mov
idiv
aam
adc
or
loope
jle
xchg
ret
flds
push
cwtl
fcomps
push
or
scas
icebp
sti
movsl
sar
mov
cmp
sub
lret
inc
jno
movsb
je
cmpsb
addb
cmp
js
stos
scas
mov
repnz
ds
pop
pop
test
test
push
dec
inc
popf
dec
inc
leave
outsl
mov
inc
andl
ja
lods
jnp
xchg
shll
mov
psubsb
dec
and
iret
xor
shrb
jb
cli
add
xchg
cmp
lods
lcall
std
jo
or
inc
fistl
xor
xchg
ja
jne
out
ret
mov
adc
jnp
dec
xor
fs
mov
imul
mov
jge
sub
sub
fimull
or
pop
xorb
repnz
sbb
mov
add
cmp
pop
repz
test
mov
jae
stc
imul
out
mov
mov
jl
xchg
wbinvd
loope
fstps
loop
add
dec
insb
mov
mov
pop
jg
iret
xchg
sbb
jo
ret
cmp
push
or
mov
nop
inc
cmp
pusha
popa
test
out
je
stos
lret
pop
imul
pop
ficoml
inc
std
adc
mov
lret
cmp
cmp
adc
jnp
pop
mov
sahf
movsb
mov
inc
cli
or
fucomp
dec
cmpsl
pop
jns
incl
dec
push
iret
pop
add
jbe
jmp
cmp
sahf
pop
xor
xor
cmp
jo
push
dec
insb
iret
icebp
jg
sbb
push
inc
mov
int
xchg
in
das
adc
ret
push
push
lret
mov
test
cld
stos
pushf
outsb
loope
mov
push
mov
pop
inc
add
push
push
dec
sbb
jmp
xchg
loop
mov
jecxz
add
push
stos
imul
test
pop
cmp
popf
mov
test
push
icebp
hlt
jl
inc
cmp
mov
pop
mov
movsl
outsl
pop
cmp
lds
fs
test
aaa
aas
mov
cmp
xor
add
call
stc
sbb
mov
out
mov
es
cmp
pop
push
and
dec
cmc
out
scas
fstpt
pop
lret
and
cltd
icebp
imul
cltd
or
loope
fptan
int
push
jl
sarl
shll
aad
ret
data16
pop
jo
sub
xchg
pop
dec
mov
or
mov
aad
pushf
mov
outsb
jns
es
in
sub
inc
ss
push
push
leave
pop
or
mov
dec
mov
xchg
sub
lret
xchg
xchg
out
leave
outsl
aam
cmpsb
test
ds
jp
out
aaa
xor
push
fs
or
out
imul
fdivl
xor
cmc
push
pushf
popa
jl
mov
mov
xor
outsl
jecxz
icebp
inc
cmp
xchg
inc
scas
push
enter
push
add
or
hlt
inc
pop
scas
mov
fildll
xchg
js
jge
psraw
test
and
inc
cmc
ficompl
xchg
and
push
mov
sahf
xchg
fwait
jl
fiaddl
mov
sbb
inc
pop
data16
imull
out
cmp
push
pop
enter
sub
ret
mov
popa
xor
das
mov
jp
xchg
dec
inc
dec
or
or
push
lds
push
sub
push
test
iret
xor
lret
inc
inc
adc
cli
xchg
movups
cmp
xchg
xchg
movswl
loope
pop
mov
pop
mov
push
pop
insb
add
add
cltd
sub
mov
test
or
push
add
in
into
out
fildll
int
xchg
cld
in
jecxz
mov
rolb
jae
lds
outsl
xchg
sahf
sbb
dec
test
mov
ror
sub
aam
das
test
add
sbb
xlat
sbb
in
fxam
pushf
out
sbb
sub
les
icebp
add
dec
repnz
test
icebp
sub
mov
imul
mov
sbb
jne
mov
lods
dec
pop
mov
sub
stos
lods
addr16
lret
in
adc
es
jbe
stc
inc
mov
xchg
ret
arpl
enter
rclb
mov
dec
adc
aam
test
add
data16
lret
lahf
out
dec
test
jle
out
inc
jge
sub
dec
mov
mov
inc
push
add
hlt
rcll
addl
fstpt
jmp
addb
jp
jnp
mov
xor
movsl
adc
pop
cli
ret
cmp
mov
or
jp
pop
lcall
jl
testb
sbb
pop
cmp
popa
leave
ret
mov
or
jae
jg
addl
rep
lods
jecxz
stos
mov
adc
and
outsb
xlat
test
and
in
xor
imul
xor
mov
or
mov
out
jae
jmp
dec
fldl
add
add
ret
add
cwtl
jp
xor
mov
test
xor
fisubrl
call
arpl
mov
push
enter
or
adc
mov
ss
cmp
and
adc
cmp
fs
dec
icebp
sbb
imul
fstpl
enter
pop
pop
pop
sub
add
ja
ljmp
call
jae
in
jge
sbb
sti
mov
lret
xchg
gs
cs
test
ja
jae
js
inc
push
cmp
jnp
pop
cmp
add
xor
je
sbb
fsubl
in
push
ret
movsl
add
fnstsw
lods
inc
in
lods
aad
leave
test
push
jnp
inc
jns
testl
cmpsb
out
or
enter
enter
pop
fxam
pop
cmp
sub
dec
jl
xchg
jne
xchg
adc
jne
cmp
fiaddl
loopne
nop
jecxz
jmp
out
dec
les
or
test
jno
clc
inc
sbb
int3
int
cmp
gs
or
sub
dec
lds
jl
sbb
dec
icebp
into
sti
dec
jp
test
mov
pop
sbb
sbb
sub
movsl
into
add
enter
mov
add
jg
movsb
repnz
aam
sahf
jle
jp
pop
or
jnp
inc
or
adc
imul
mov
sub
mov
gs
or
jnp
mov
js
push
ret
and
es
sti
dec
push
inc
and
aad
cmp
mov
jbe
movsb
sbb
test
ds
loopne
outsb
sbb
cmpsb
loope
test
rep
popa
repnz
push
cltd
popf
or
addr16
js
outsb
popa
les
mov
push
into
cmp
loope
xor
lret
mov
adc
lret
push
adc
mov
pop
out
mov
addr16
inc
and
mov
loop
popa
xlat
leave
aas
gs
pop
ds
stos
mov
mov
adc
cwtl
test
mov
jo
int
xor
xor
dec
cli
loopne
in
cmc
out
mov
mov
jne
cmpsb
subl
inc
lock
loopne
aas
mov
into
mov
data16
cmp
xor
sbb
hlt
es
scas
push
sub
es
inc
push
push
push
pmuludq
dec
pop
or
leave
and
dec
enter
hlt
aas
mov
or
add
cld
int3
hlt
jp
fidivs
test
push
or
pop
out
out
add
xchg
aas
add
jo
pusha
fwait
nop
pop
xor
int
jns
test
cs
push
cmp
outsl
inc
test
add
mov
push
and
mov
add
ljmp
stos
inc
mov
mov
sti
out
mov
into
add
push
loope
sub
mov
shll
sbb
jmp
and
add
in
push
gs
push
xor
lret
inc
addr16
cmovge
fs
into
aam
jb
jno
fldl
lea
cmp
jo
fcoml
cwtl
andl
outsl
divb
jb
xor
mov
or
dec
mov
movsl
inc
jnp
mov
cmpb
lods
lods
xchg
fadds
lock
das
jno
pop
and
jns
fcmovu
imul
adc
add
dec
jmp
movsb
lods
enter
movsl
inc
push
and
sbb
and
leave
test
mov
or
aam
pop
mov
push
mov
popf
movsl
stos
push
ja
mov
dec
aaa
cltd
inc
adc
sbb
or
pop
xor
pop
jl
push
popw
daa
dec
ljmp
pop
popf
popf
push
addr16
pushf
lahf
cmpsl
mov
mov
or
add
icebp
or
xchg
pop
lret
arpl
notb
mov
iret
sub
mov
adc
aam
adc
pop
int
shl
push
or
adc
jecxz
shll
sbb
jl
xor
pop
jns
adc
out
rolb
or
xor
cltd
jmp
mov
adc
mov
loope
inc
or
jp
nop
in
or
inc
push
repz
or
inc
nop
insl
cmpsb
or
loope
mov
push
jnp
icebp
or
pop
enter
dec
xor
xor
add
sub
test
xor
leave
test
xchg
push
call
ret
hlt
rcrb
scas
pop
jle
scas
out
pop
mov
dec
into
mov
fsubrp
nop
jno
cmp
xlat
add
inc
inc
pushf
lds
popa
scas
mov
lcall
lahf
sub
xor
dec
push
mov
jae
xchg
es
and
pop
mov
icebp
dec
lcall
jge
pop
repz
jle
test
sti
inc
inc
pop
pop
out
cmp
shrl
fdivs
xor
movsb
fldcw
dec
lock
push
add
int3
push
sbb
and
mov
adc
lcall
lods
bound
scas
jmp
popa
test
pop
mov
sub
cmp
sub
outsl
xor
cltd
je
push
rolw
sbb
fbld
sub
cmp
testl
aam
sahf
test
aaa
pop
push
or
cltd
push
xor
insb
pop
mov
stc
cmpsb
addr16
pushf
mov
add
pop
into
fisttpll
and
jns
ja
fs
fldcw
mov
jl
or
bound
icebp
test
cmp
outsl
xlat
clc
js
in
pop
xor
or
sti
mov
sub
and
push
movsb
or
xor
jle
fisttpll
lods
mov
movsb
or
mov
mov
mov
cli
sbbl
xor
leave
lods
mov
outsl
insl
mov
xor
xor
aam
cwtl
movsl
testb
inc
test
mov
shll
ret
lcall
sbb
aad
mov
push
push
inc
pop
mov
mov
jnp
or
jo
movsb
sarb
in
add
in
add
push
out
movsb
sub
ljmp
fsubr
and
repnz
fbstp
imul
add
in
leave
ret
enter
or
mov
arpl
mov
jno
mov
pusha
scas
xlat
push
and
std
inc
cwtl
cltd
ret
mov
or
or
rclb
hlt
xor
adc
nop
lret
sbb
inc
in
ret
dec
enter
lods
xchg
test
aas
jno
loop
test
test
aaa
dec
std
mov
cmp
rcrb
or
push
out
ljmp
pop
sub
cmc
adc
clc
inc
imul
xor
mov
imul
mov
movl
or
fs
mov
pop
inc
mov
push
jmp
push
ret
out
mov
lds
jg
mov
push
jge
inc
add
test
mov
jecxz
jnp
addr16
or
arpl
jo
dec
pop
jb
mov
or
lcall
jns
jo
fsubrl
pop
xchg
jl
jmp
ja
lea
int3
sbb
mov
pop
ja
mov
cltd
ds
mov
pop
fldt
aas
addl
inc
out
mov
xor
out
xor
fwait
cmp
out
mov
xchg
imul
loopne
test
pop
ret
mov
mov
xor
aaa
aaa
test
cmpb
cmp
inc
stc
push
pusha
xor
jno
jns
inc
maskmovq
imull
out
ret
movl
dec
std
lods
out
dec
leave
addl
sub
cli
jl
outsl
hlt
dec
outsb
test
dec
cwtl
test
lea
push
jl
arpl
enter
sbb
lods
cmpsb
mov
je
in
or
mov
cmp
inc
pop
inc
jns
out
add
push
int
test
jge
sbb
dec
out
movsb
inc
loopne
jecxz
mov
stos
lock
push
pop
sub
xor
mov
inc
inc
xchg
and
pop
cwtl
stos
sub
add
iret
std
pop
or
or
ljmp
lock
lock
repz
jge
data16
ret
push
mov
push
xor
popa
inc
jno
fsts
dec
mov
call
rcr
pushf
mov
sub
into
adc
or
push
dec
or
push
sbb
push
add
test
dec
mov
mov
push
jne
mov
xor
add
inc
shlb
and
sar
lock
mov
inc
adcb
aaa
cmp
sub
das
outsb
xor
fsub
mov
in
inc
rolw
sub
add
xor
pop
or
lret
lods
iret
sbb
loope
into
pop
jne
or
repnz
addb
mov
pop
jecxz
inc
repz
pop
dec
or
aam
dec
push
mov
pop
add
and
out
mov
cltd
js
jns
mov
insl
push
je
into
jnp
push
lds
sbb
test
adc
test
fmull
out
mov
mov
ja
mov
sbb
movsl
push
stos
mov
in
xor
jg
adc
test
pmaddwd
mov
sub
out
xor
aam
jp
pop
dec
int
sbb
data16
test
stos
fnstcw
pop
lea
xchg
test
stos
in
scas
or
fs
jns
inc
jmp
inc
std
xchg
jecxz
adc
ljmp
dec
popa
pusha
insl
pop
xchg
ds
scas
enter
mov
jne
adc
or
pop
mov
test
mov
push
xlat
out
adc
test
or
cmc
adc
fistps
and
dec
or
test
cmpsl
pop
jg
out
cmpl
xor
test
pop
sub
test
inc
pop
ficoms
xchg
cmp
popf
adc
and
sar
aaa
xchg
aaa
pop
push
pop
sub
adc
outsl
xchg
aam
dec
ljmp
mov
or
mov
scas
pop
sbbb
sub
loop
or
add
add
push
mov
jmp
adc
inc
jnp
jl
or
ss
je
mov
jmp
fmuls
rorl
ficoml
test
icebp
stc
addr16
sbb
push
addb
icebp
shll
mov
or
xor
mov
jl
or
pcmpgtb
into
inc
jno
push
cs
std
insb
divl
add
dec
inc
jmp
pop
jne
fnstsw
cwtl
dec
in
scas
pop
mov
dec
outsl
and
cli
xor
add
data16
or
loopne
repnz
ds
mov
repz
es
test
testl
jg
push
ret
cmpsb
mov
adc
add
loopne
sub
pushf
cwtl
cwtl
in
rclb
adc
ljmp
sbb
mov
arpl
jne
lret
dec
xor
int3
pop
mov
jne
ja
cmc
jl
jnp
shrl
das
enter
pop
popa
cmp
dec
cmp
dec
xor
sub
add
scas
mov
dec
pop
out
xor
push
in
inc
xchg
inc
adc
mov
cmp
jns
sub
adc
in
test
cmp
dec
pop
and
test
mov
divb
inc
jns
push
xlat
and
jno
add
mov
push
loopne
fcmovbe
arpl
push
xchg
leave
xchg
data16
pop
lcall
std
push
ret
pop
je
fdivs
into
add
dec
loop
imull
nop
cmp
or
pusha
in
sti
pop
fcmovbe
dec
test
pop
jns
je
movsl
lea
sub
push
pop
add
into
xchg
pop
inc
and
pop
pop
in
mov
push
mov
mov
sub
dec
mov
addl
test
mov
popa
cmp
jb
xchg
adc
or
cmpb
mov
dec
mov
cmpsb
loope
sarl
sahf
add
xor
inc
xor
in
mov
imul
mov
imul
sub
pop
imul
jb
pusha
aam
insb
mov
test
xchg
add
in
scas
lods
lods
xor
mov
loopne
test
and
pusha
jge
adc
push
movsb
popl
enter
sbb
aas
jo
add
xchg
cmpsl
mov
jp
jbe
jae
hlt
xchg
pushl
pop
outsb
sbb
or
push
ret
and
xlat
icebp
mov
in
stos
and
fsubl
into
pop
and
or
shrl
mov
push
push
mov
xor
ret
sbb
jae
xchg
inc
xor
mull
imul
js
sbb
gs
sbb
sbb
inc
lds
push
ljmp
sub
enter
mov
sub
or
aas
dec
jo
popa
inc
sub
mov
arpl
add
push
xor
adc
mov
into
xor
cmc
jl
ret
rcrb
xor
and
pop
mov
adc
jnp
repnz
out
test
test
mov
xor
sbbb
or
sub
mov
faddp
test
jmp
lods
imul
leave
hlt
cmp
mov
sub
lret
and
mov
into
aam
or
clc
mov
rcl
es
subl
sub
fidivl
cs
test
out
pop
mov
sbb
dec
roll
push
cmp
aas
popf
sub
sbb
lds
mov
iret
cmp
or
dec
xor
sbb
bound
lds
ja
leave
pusha
dec
push
cmp
and
pop
jae
sbb
and
in
outsl
mov
mov
lahf
push
cmp
xchg
mov
test
add
mov
pop
xchg
mov
ret
ss
add
cmpsl
sub
lea
add
cwtl
cmp
aas
inc
int3
in
lret
and
mov
sbb
movsl
jnp
enter
icebp
mov
icebp
xchg
mov
lock
xchg
jbe
test
in
pop
push
fisttpl
sti
mov
xchg
mov
mov
mov
loope
sbb
add
insb
and
cs
dec
mov
pop
repnz
xlat
fnstenv
stc
dec
loopne
shr
js
mov
pop
lcall
and
pop
inc
ss
inc
stos
xchg
or
adc
fimull
mov
push
ret
push
push
fs
xor
xor
pop
outsb
pushf
xor
std
scas
push
sub
adc
subl
or
push
push
sub
inc
inc
adc
movsl
jae
loope
lret
xchg
hlt
and
jge
and
shlb
dec
inc
rorl
dec
jge
lahf
xlat
int
std
int
movsl
test
sub
arpl
xchg
jmp
stos
hlt
mov
ret
mov
fcompl
jle
cwtl
outsl
dec
mov
ljmp
ret
push
jg
sub
or
mov
mov
and
fnstsw
fscale
aam
subb
mov
nop
or
and
imul
jp
data16
inc
adc
lret
sub
cmp
sbbl
dec
inc
sbb
inc
or
test
inc
mov
lock
mov
sub
ds
jmp
sub
in
sub
pop
fdivr
xchg
xlat
test
inc
and
out
cmpsl
xchg
sti
sti
rclb
mov
jnp
lea
push
adc
outsl
lretw
cmp
fwait
or
add
mov
popa
inc
push
inc
in
push
pop
pop
jecxz
xchg
adc
leave
xchg
shlb
sub
mov
loopne
cli
inc
lahf
mov
pop
xor
pop
or
test
inc
or
cmp
pop
dec
xor
out
sbbl
mov
cmc
test
movsl
pushf
cmp
sahf
inc
into
inc
es
push
ss
lock
mov
xchg
and
std
loope
test
scas
popf
sub
mov
mov
cs
enter
jns
or
push
xor
ljmp
sbb
imul
and
jmp
ja
mov
stos
popa
dec
hlt
add
pop
jg
or
not
add
xor
add
subl
pop
cmp
sti
adc
mov
dec
inc
stos
xchg
push
in
dec
mov
xchg
cmpsl
out
inc
pop
cmp
xor
ret
cmp
mov
cwtl
test
pop
sti
push
lock
xor
repz
bound
repnz
cld
fdiv
mov
dec
inc
inc
ds
jp
lds
lods
mov
test
and
push
out
test
xchg
loopne
pop
js
jp
insb
mov
jl
or
sub
and
jg
add
decb
insb
push
lods
testl
stos
and
push
dec
inc
sahf
outsb
xor
push
cmp
push
push
loope
add
cld
aaa
jae
mov
inc
mov
idivb
jo
fsubrp
mov
lret
negl
cmp
push
and
shll
jnp
jp
and
xchg
mov
xchg
dec
push
cli
daa
repz
loope
fmuls
lods
loop
mov
add
mov
fildll
dec
adc
xor
into
and
dec
sub
mov
outsb
rcll
scas
inc
test
loope
pop
mov
fnstcw
sbb
adc
pop
cmp
loopne
fs
mov
iret
cmpsl
outsl
inc
sub
cmpb
test
stos
daa
sub
cmp
aam
in
or
pop
stc
out
dec
imul
imul
mov
cmc
jecxz
ficomps
push
loope
ss
mov
xor
cmpsl
icebp
in
popa
inc
lret
mov
adc
pop
cmp
in
lea
fs
jp
sub
jge
fcmovbe
cmp
incl
push
push
push
xor
add
or
shll
or
or
lock
push
dec
lods
pop
mov
dec
push
or
dec
or
gs
inc
sbb
cltd
jmp
dec
push
xchg
js
cmp
dec
daa
iret
iret
jnp
sub
dec
andl
mov
jns
hlt
dec
push
inc
insb
push
push
jnp
stos
out
mov
outsl
loope
aaa
pop
xchg
pop
and
inc
xor
and
aad
xchg
test
movsb
imul
inc
jne
jne
les
ret
imul
imul
lock
cmp
push
fstps
jne
sbb
in
jo
push
pop
rcr
cmpsb
push
test
shrl
pop
jg
ds
jl
mov
fdivrs
mov
shll
ror
cmp
pop
cmp
mov
sahf
sub
imul
test
adc
dec
lret
adc
or
inc
adc
dec
adc
sub
sub
dec
mov
jbe
inc
xor
pop
xor
sub
imul
bound
inc
and
ret
sbb
cltd
call
cli
call
clc
xor
xchg
xchg
adc
push
xchg
pop
adc
add
adc
xchg
enter
cmpsl
pop
xor
push
cmp
inc
fmull
push
ljmp
dec
sbb
test
pop
jmp
sub
out
cmpsl
add
int
imul
dec
pop
test
adc
not
mov
add
sub
insb
addr16
sbb
cld
jl
or
insb
pop
xor
push
in
sbb
ljmp
daa
xchg
cmp
test
ljmp
scas
fidivrs
mov
daa
mov
fsubrl
hlt
scas
jp
nop
repz
es
jne
jge
out
add
inc
arpl
imul
cmpsb
test
dec
sti
xor
outsl
stos
lret
call
js
pop
xor
add
nop
jecxz
and
cltd
jno
out
dec
pop
lods
push
push
pushf
add
mov
mov
clc
lock
jmp
jp
or
test
into
add
jle
sbb
dec
xor
mov
lds
jnp
fs
cmp
in
daa
mov
adc
cmpsl
in
jo
stos
popf
ret
repnz
scas
icebp
sub
push
sbb
stos
dec
pop
cwtl
add
xor
cld
lret
hlt
and
mov
cmpsl
sub
loope
sbb
dec
ret
add
mov
into
xchg
push
push
std
pop
inc
xor
mov
or
enter
fcoml
or
add
inc
repz
outsl
and
daa
in
into
mov
and
xor
xchg
insb
inc
pushl
mov
push
rcrb
sub
jmp
imul
lret
add
xchg
nop
gs
inc
cmpsb
jle
sbb
sbb
daa
pop
xlat
inc
in
repz
mov
rorb
xor
mov
dec
mov
lcall
pop
push
inc
inc
cmc
mov
decb
insb
mov
outsb
inc
lock
add
cmp
push
jne
loope
dec
lds
repz
mov
jle
div
jp
outsb
lock
or
bound
stos
mov
inc
ds
sbb
mov
xor
mov
in
push
outsb
cmp
mov
test
xor
pop
es
jg
sub
mov
lret
jle
cmp
sub
ret
pop
stos
bound
inc
out
add
out
int3
xchg
pop
or
out
jae
mov
clc
test
or
mov
stos
mov
test
and
jg
sub
pop
js
int
movsl
jne
test
dec
or
sub
int
fisubrs
and
jno
icebp
mov
outsb
rorb
int
test
mov
js
test
adc
scas
mov
sbb
icebp
sbb
xor
sti
std
test
enter
inc
and
imul
stc
pop
jecxz
pop
pop
je
dec
pop
dec
into
test
sbbb
sub
mov
loop
push
subb
sbb
jp
popa
xor
sub
insb
mov
ror
in
inc
or
cli
dec
les
xor
or
adc
push
leave
xor
mov
inc
sbbb
ja
mov
out
sub
insl
iret
aaa
jo
flds
cmp
and
test
pop
pop
loope
add
sub
out
adc
ds
dec
lods
add
jne
pop
jl
mulb
adc
jns
pop
insb
xor
mov
mov
push
in
xor
adc
insb
test
inc
pop
adc
push
dec
into
sbbl
test
test
add
mov
test
addr16
sysenter
lea
popl
xor
mov
xchg
and
js
cmp
aad
xchg
bound
xchg
push
push
popf
mov
jbe
stos
add
push
dec
sub
adc
cmpsb
add
xor
fsubl
inc
pushf
fsts
das
jb
jle
arpl
adc
jle
icebp
movsl
fs
inc
pop
mov
sahf
arpl
test
hlt
or
shll
add
int3
cmp
lds
insl
fdivs
fs
mov
pop
jno
test
arpl
xor
add
mov
or
addr16
mov
test
in
arpl
cwtl
in
or
stos
mov
dec
inc
sahf
mov
cmp
test
enter
mov
int3
pop
sbb
aad
repnz
xchg
test
lret
adc
leave
scas
lea
add
inc
sbb
sub
flds
call
dec
insl
inc
xchg
sub
cmpsl
daa
arpl
bound
mov
mov
test
inc
out
pop
js
mov
pop
jle
jnp
ret
and
jmp
and
dec
inc
add
xchg
inc
sub
cli
imul
pop
mov
js
in
loopne
sbb
fldl
cmpsb
les
mov
pop
or
jmp
je
jle
jae
inc
sbb
add
lea
int3
mov
sti
out
stc
cmpsl
repnz
jge
inc
js
dec
and
jge
pop
scas
jmp
or
jp
dec
mov
inc
ret
fwait
icebp
fiadds
jge
mov
inc
mov
sbb
push
sub
adc
scas
and
jnp
or
jg
push
mov
outsl
xchg
fwait
lods
scas
jnp
pop
jno
jnp
mov
mov
sarb
sarb
out
je
adc
sub
repz
jns
mov
inc
stos
jl
daa
xor
mov
test
jg
push
pop
enter
and
leave
sub
cmp
mov
push
jne
and
in
sahf
push
aam
jp
test
or
movsl
pop
fs
dec
cmpsb
and
enter
fiadds
outsl
pop
pushf
dec
xchg
push
inc
dec
lret
and
xchg
stc
adc
mov
cmp
ss
test
ret
dec
xor
push
ficomps
or
sahf
add
cmc
mov
es
imul
stos
mov
mov
and
mov
push
rcl
add
mov
cmp
pop
jns
mov
or
push
pop
inc
inc
int3
sbb
sti
jle
and
mov
push
jle
mov
ret
ss
add
lods
or
dec
int
pop
add
pop
and
outsb
mov
sbb
call
aaa
add
test
inc
lret
ret
or
outsl
sbb
push
out
ljmp
fisubrl
xorl
or
pop
dec
cmp
negl
pushf
jne
pop
mov
mov
or
mov
mov
shll
out
jne
mov
sbb
dec
jns
adc
or
mov
pop
je
xchg
imul
repnz
jecxz
pop
jno
adc
addr16
mov
subb
or
jmp
pop
lock
adc
sbb
sub
mov
mov
icebp
mov
push
sub
inc
movsl
movsb
lret
jmp
adc
aam
fnsave
or
mov
leave
sbb
enter
icebp
jp
aad
add
fsts
lods
aad
test
int
je
pop
ljmp
mov
sbb
rorl
inc
mov
fbld
or
add
out
roll
pop
icebp
xchg
mov
icebp
mov
mov
xchg
std
scas
add
and
ja
mov
sbb
jg
sbb
nop
mov
mov
sbb
jle
cmp
es
adc
rcrl
jae
xor
test
mov
pop
dec
pop
push
int3
sbb
cmpsl
test
push
std
mulb
lret
fwait
mov
aam
mov
push
iret
stos
mov
mov
aad
xor
inc
fsubrs
je
push
xchg
test
push
xor
orl
xor
test
jg
test
adc
cli
xor
sub
push
repz
shlb
push
mov
fmulp
fcmovnu
push
pop
rcr
mov
add
jb
das
jo
imull
test
or
ret
mov
insl
mov
enter
mov
test
in
xchg
andl
leave
sahf
adc
xor
jbe
and
das
fdivl
in
push
repz
inc
xor
cmc
xchg
push
xor
xchg
cmp
test
pop
add
mov
mov
xchg
jg
dec
out
mov
stc
test
pushf
pop
dec
adc
xchg
les
or
pop
cmpsl
xchg
icebp
cwtl
shll
or
mov
dec
push
filds
andb
jecxz
pop
subb
lret
outsl
pop
push
dec
lahf
xor
sarl
or
xor
ret
dec
pop
jle
push
stos
cwtl
mov
jne
pop
jge
push
jp
or
out
shll
leave
or
jp
rolb
mov
mov
fbld
ds
add
or
es
pusha
sbb
jns
hlt
xor
lret
subl
pop
push
and
pop
stos
mov
dec
sub
rcll
mull
pop
inc
out
cmpb
in
aad
js
dec
jnp
loop
int
sahf
add
jns
xchg
add
test
ret
out
call
sbb
imul
ffree
xor
mov
test
xchg
lret
cmp
gs
cmp
imul
shll
cmpsb
enter
repnz
adc
mov
ds
pop
mov
sub
fstl
or
ss
ret
shll
test
jns
cmc
inc
mov
mov
shll
jg
xchg
test
mov
push
sbb
test
pushf
xchg
ret
out
stos
rclb
imul
xlat
add
pushf
sti
test
or
out
loope
xor
dec
pop
mov
ret
mov
and
xor
cltd
inc
and
push
push
pop
mov
bound
fdivr
dec
push
cmpsb
das
mov
out
cld
imul
ljmp
mov
cltd
jl
inc
cmp
mov
push
aam
sbb
adc
movsb
movsl
mov
jmp
mov
xor
mov
jmp
xchg
test
mov
jl
out
mov
ret
jmp
and
pushf
aad
arpl
les
clc
xorl
mov
lcall
or
mov
mov
inc
inc
daa
jnp
mov
push
or
dec
xchg
inc
sbb
jge
dec
roll
je
mov
mov
aas
stos
xor
shrl
in
inc
ja
rorb
sub
and
mov
jns
sub
mov
sbb
and
push
xchg
xchg
pop
cmpsb
pop
imul
int3
jmp
jo
rorb
push
bswap
repz
add
or
jmp
xlat
pop
ret
ss
push
fnstsw
dec
add
jne
jge
xor
inc
add
daa
xor
imul
pop
jle
cmp
sbb
cmp
and
mov
iret
jg
sar
jg
in
mov
mov
or
lock
cmp
inc
mov
arpl
ljmp
sub
rorb
xchg
and
test
inc
inc
push
push
sub
mov
repz
fistpl
dec
adc
cmp
in
es
pop
mov
xor
mov
adc
and
and
movq
dec
sarl
sub
icebp
fwait
jno
add
push
out
pushf
iret
or
jmp
xchg
movsb
sbb
enter
scas
mov
add
mov
pop
mov
pop
sub
testb
dec
mov
push
push
add
cli
int
das
mov
and
add
jle
hlt
cmc
fincstp
jae
popa
lods
fistpl
fdivrl
cmc
xor
out
push
fistpll
scas
out
xchg
jae
xor
jns
sti
je
lods
jmp
test
icebp
cli
icebp
nopl
iret
addr16
jg
negl
dec
dec
cmpb
enter
fsts
pop
mov
jbe
test
inc
pop
je
leave
test
pop
cwtl
cmp
mov
add
in
cmc
push
jae
pop
fdivrl
pop
nop
lods
repz
into
pop
jbe
fwait
cs
dec
xchg
negl
btc
push
push
mov
test
mov
aaa
add
arpl
mov
popa
mov
xchg
js
cmc
sarb
fucom
lock
jp
enter
inc
pop
lock
mov
dec
xor
or
lods
add
mov
jmp
loop
mov
test
cmpsb
in
xor
xor
sbb
xor
add
enter
pop
jns
sahf
adc
call
sbb
fwait
sbb
lret
inc
cltd
gs
dec
jno
adc
cmp
in
test
xor
lret
push
mov
imul
jno
mov
enter
lret
pop
push
movl
ja
enter
int
adc
or
call
out
mov
in
add
sub
adc
mov
push
jecxz
ja
outsl
xor
in
jg
xchg
mov
imul
out
push
add
inc
ja
mov
xchg
in
mov
cmp
cmpsb
add
testl
dec
add
aas
xor
je
dec
mov
aad
push
ret
adc
lret
jo
sbb
cmc
mov
test
out
pop
push
push
shrl
pop
push
add
mov
inc
jno
std
jg
or
jne
enter
mov
in
pop
sbb
std
inc
sbb
test
movsb
push
repz
adc
dec
inc
dec
mov
shl
mov
jnp
cltd
cmc
inc
pop
dec
aam
lahf
mov
pop
fisubs
jno
and
shrb
sbb
fmul
xor
mov
mov
mov
xchg
loope
jne
or
inc
fdivs
jbe
sti
es
adc
test
addr16
mov
test
ret
jns
enter
jecxz
xor
insb
inc
and
jl
sub
mov
mov
add
cmp
ss
cs
fcmovnb
popa
repnz
mov
sub
and
repnz
adc
lds
jle
test
repz
and
and
scas
js
mov
jle
shl
jns
lds
or
fstl
jbe
lds
repnz
aaa
orb
ficomps
addl
inc
add
xor
int
movsb
adc
mov
sarb
insb
push
shll
mov
imulb
ds
pusha
into
out
sub
jg
cmp
test
inc
mov
inc
lret
int3
or
mov
out
shrb
in
test
lock
sub
jno
testb
pop
jle
and
or
pop
jae
fstpt
sub
xor
arpl
int3
mov
cmpsb
sbb
jnp
stos
inc
sarl
xor
sti
mov
mov
or
mov
mov
lahf
ret
cmp
fldl
aas
and
or
sbb
pop
jne
std
mov
inc
call
aad
lret
sbb
add
inc
xor
movsb
push
dec
adc
std
loope
mov
test
or
je
imul
popf
cmp
or
imul
test
icebp
sub
jbe
xchg
loop
ret
repz
add
jmp
xor
inc
test
aaa
push
add
jo
adc
xchg
inc
adc
insl
xchg
adc
aas
lods
fwait
inc
scas
movsl
and
inc
dec
mov
out
sti
icebp
dec
sbb
xchg
jb
ret
pop
jb
icebp
lea
popa
sub
cmp
stos
add
mov
das
add
or
xchg
mov
nop
sarl
iret
sahf
loop
rcll
dec
or
mov
xchg
jmp
adc
and
dec
cmc
cmpsb
stc
icebp
xchg
cmpsb
ret
mov
xchg
push
fmull
push
xchg
cmp
pop
sub
aas
divb
out
pop
or
sbb
xchg
jno
test
push
mov
aas
mov
sub
or
out
or
ds
or
jns
in
jo
repnz
dec
xchg
leave
cli
test
adc
mov
jmp
je
test
pop
add
repz
pop
mov
push
sbb
bound
jl
adc
pusha
push
test
pop
outsl
ret
dec
fs
add
xchg
inc
and
inc
test
imul
dec
cwtl
into
fwait
jmp
sub
aad
fucomip
push
lcall
mov
popf
cld
cmpsb
test
pop
out
dec
push
int3
pop
mov
mov
sbb
movsl
dec
sub
sbb
test
adc
je
adc
data16
setae
cmp
loope
fst
jmp
dec
inc
lea
dec
cli
mov
jl
sub
push
or
test
and
outsl
repz
test
sti
and
orl
jmp
dec
and
cmp
mov
add
sbb
xchg
push
pop
add
adc
dec
add
xlat
mov
and
ret
cli
outsb
loop
dec
lods
js
test
out
insb
mov
mov
out
icebp
mov
add
mov
mov
out
fmull
xchg
fistl
or
add
dec
aad
scas
sbb
mov
xor
imul
imul
mov
lea
ljmp
xchg
aam
daa
cltd
out
push
inc
add
test
add
inc
jne
dec
ss
jnp
sbbb
test
dec
cs
fisttpll
ds
ja
test
outsb
subl
fsts
movsl
xor
inc
push
in
xchg
ret
or
mov
xchg
imul
or
jecxz
bound
mov
cmc
arpl
mov
sub
pushf
aad
xor
pop
jbe
gs
and
or
in
push
andb
pop
test
mov
mov
mov
test
lds
inc
mov
test
mov
jmp
dec
icebp
idivl
push
lret
lret
pop
inc
mov
dec
insl
jno
sub
and
mov
push
adc
mov
sub
xchg
jl
pop
jno
push
dec
lock
cltd
es
ret
mov
jle
cmpsl
mov
jecxz
int
stc
push
mov
int
gs
mov
stos
xchg
push
jle
out
pop
or
cld
dec
xchg
scas
pop
insl
lds
ret
jno
insb
mov
or
adc
in
mov
fwait
push
ljmp
loope
aam
cmp
out
rcrl
mov
aas
jnp
xor
lahf
popf
jnp
fnstsw
dec
inc
fcoms
and
sti
and
lods
mov
mov
rcr
test
push
pop
ror
mov
sbbl
test
mov
mov
cmp
ret
dec
xchg
sub
sbb
push
xchg
or
and
cmpsl
test
lds
add
pop
xchg
mov
xor
mov
movsb
cmp
inc
enter
inc
dec
addb
inc
movsb
ret
add
mov
stc
add
fcmovb
test
int3
es
lods
dec
mov
jno
pop
jns
or
loope
xor
int3
sti
add
ds
xchg
shll
adc
leave
test
mov
or
ud2
adc
sbb
mov
pop
test
jae
icebp
add
imul
mov
rcr
pusha
and
stc
imul
mov
lock
xchg
in
in
daa
mov
addb
aas
outsb
jl
rcrl
or
movsl
adc
jae
popf
xor
push
or
fdivl
mov
xchg
ret
cltd
mov
or
into
sbb
cmp
mov
lcall
popf
inc
add
mov
push
mov
dec
stos
int
pop
jp
inc
jno
xchg
mov
mov
lret
in
xor
jns
jo
repnz
int
xchg
xchg
sub
xor
cmpsl
in
repz
cmp
or
fiaddl
inc
xor
stc
fldt
adc
pop
fcmovnbe
cmp
test
sahf
movsb
push
pop
sti
mov
add
push
popf
cld
dec
xor
aam
jecxz
xor
aad
lret
jmp
adc
test
xchg
pop
cli
cmc
push
push
inc
and
imul
push
andl
loope
jne
stos
cltd
mov
or
xor
outsl
mov
jg
sbb
adc
mov
mov
inc
add
fadds
sbb
addr16
fidivrl
xchg
mov
test
lock
xor
outsb
shr
dec
push
adc
mov
or
out
fprem1
repz
cmp
fxch
sti
mov
xchg
xor
xchg
adc
imul
pop
popa
push
push
aam
je
pop
sbb
ret
shll
adc
ltr
jb
mov
mov
push
rcrl
sbb
int3
mov
xor
mov
mov
test
rcrl
pop
pop
sqrtps
fdivr
fdivr
test
inc
push
and
jae
mov
mov
or
movsb
cmp
pop
popf
ds
in
or
sbb
jnp
dec
sub
adc
test
sarl
xchg
pop
add
sbb
jmp
xchg
enter
inc
mov
mov
adc
mov
fmuls
add
sti
pushf
mov
sub
push
int
xchg
adc
push
mov
aas
es
call
insl
mov
ret
flds
out
in
cltd
loope
jle
in
arpl
popa
push
leave
mov
jae
aas
rcrb
mov
cmc
imul
mov
ret
rorl
jle
pop
mov
les
imul
push
xor
mov
or
rep
test
sbb
cwtl
ds
sub
test
xchg
mov
xchg
mov
int
push
inc
adc
scas
sbb
xchg
stc
outsb
mov
punpcklwd
nop
add
icebp
push
push
and
in
icebp
in
sti
mov
sub
push
int
add
into
push
push
add
clc
leave
pop
xchg
jmp
mov
inc
clc
test
adc
xchg
jge
call
addr16
test
push
sarl
sti
mov
shll
out
or
adc
xor
sub
aaa
jae
pop
jnp
push
call
jo
cmp
push
xchg
mov
imul
jno
test
lock
mov
insb
mov
ds
test
jnp
rcrl
pop
bound
ret
inc
std
js
xchg
scas
xor
adc
scas
sbb
testb
push
in
and
in
repnz
or
push
inc
popf
xor
rcl
jno
jge
in
and
mov
dec
xchg
jle
mov
mov
push
int3
xchg
inc
adc
popa
push
inc
jns
push
mov
dec
test
mov
jl
test
jnp
lds
scas
daa
out
and
js
inc
and
or
add
mov
lea
xchg
lock
pop
movl
ja
fildll
sub
or
cmp
shrl
test
mov
ret
scas
mov
idiv
ret
lahf
out
stos
mov
mov
xchg
icebp
daa
lret
std
test
mov
jne
in
rcll
hlt
add
enter
xlat
jp
sahf
sub
push
push
xchg
popf
jl
pop
stc
icebp
inc
and
push
inc
je
xchg
sbb
aaa
mov
sub
movsb
sub
mov
pop
test
xchg
mov
jp
xchg
jno
fdivr
mov
xlat
add
mov
out
aas
int
adc
shrl
lret
lds
sahf
mov
lods
loop
int
xchg
push
ljmp
mov
mov
int
and
ds
xchg
mov
push
es
pop
ret
jle
cmpsb
arpl
aam
xor
lds
cmpsl
movb
lods
test
mov
push
fcomi
sbb
add
push
out
pop
adc
test
pop
jae
stos
pop
cmp
mov
inc
xchg
sbb
rclb
push
test
push
add
icebp
sub
inc
jb
adc
imul
add
imul
mov
sub
js
test
jecxz
and
js
int
xchg
rol
mov
xchg
dec
dec
push
pop
inc
ror
push
mov
sbb
sbb
sub
shrl
add
stos
mov
mov
or
scas
std
sbb
dec
mov
xor
in
adc
hlt
pop
icebp
mov
xlat
leave
iret
or
enter
dec
or
mov
mov
add
hlt
test
in
pusha
aam
je
cmp
scas
mov
sub
dec
or
push
cmc
sub
dec
out
add
jl
sbb
stc
sahf
and
cwtl
push
adc
loop
add
mov
out
scas
adc
pusha
push
jmp
out
loopne
sti
dec
jbe
paddq
mov
pop
adc
adc
leave
sbb
adc
mov
dec
mov
sbb
jecxz
sti
stos
xlat
or
in
leave
jl
aam
or
enter
lahf
lret
mov
pop
mov
gs
test
push
test
repnz
aam
xchg
test
adc
loop
mov
push
dec
xor
lahf
shrl
mov
cs
cmpl
or
mov
pop
stos
push
mov
imul
inc
or
rorb
mov
out
mov
ret
pop
icebp
leave
sub
aas
adc
shrl
lock
test
fdivr
dec
xchg
test
or
movb
push
ret
adc
xchg
inc
cmovge
cmc
es
shlb
jnp
and
stos
shl
test
movsl
sbb
xchg
pop
ret
jns
icebp
pop
inc
add
pop
xor
repz
cwtl
pop
aam
push
cltd
ret
test
repz
lock
or
adcl
xlat
xor
scas
sbb
push
add
fstl
dec
mul
mov
inc
cmpsb
subb
add
into
jge
ss
inc
js
js
pop
in
xor
push
mov
cltd
sub
stos
fcomps
stc
insl
cld
xchg
inc
mov
cli
dec
xchg
cltd
sub
add
or
insl
in
xor
pop
add
inc
rol
sub
fwait
leave
fildl
lret
jle
inc
dec
xchg
mov
test
jno
push
jle
push
jg
cwtl
inc
jbe
xor
pop
clc
pop
dec
push
jl
xor
fs
sub
mov
in
push
inc
dec
or
xor
cmp
xor
daa
icebp
test
imul
mov
cmp
add
sbb
xor
adc
mov
ret
push
xor
jl
xlat
xor
add
enter
roll
iret
test
adc
jnp
es
mov
jne
enter
xor
test
testl
bound
dec
fimuls
or
decb
aad
fiadds
inc
add
cmp
xchg
es
int3
test
leave
rdpmc
mov
dec
pusha
push
lret
scas
enter
or
cmpsl
cwtl
push
repnz
sub
fsubrs
shll
xor
and
xchg
jl
xor
fnstsw
dec
or
inc
lret
ja
cs
jge
pop
and
mov
fwait
packsswb
test
in
test
inc
fimuls
mov
inc
xor
and
notl
dec
outsl
pop
out
scas
sub
inc
dec
loop
or
inc
mov
adc
repnz
cmp
xchg
leave
dec
mov
in
pushf
and
sub
pop
mov
out
ds
sub
mov
add
cmc
xor
loope
out
xor
xor
pop
test
test
out
popaw
jmp
inc
lock
or
inc
jg
test
int
or
je
push
call
xor
xchg
pusha
repz
mov
jne
mov
in
movsl
enter
xchg
enter
jbe
mov
call
push
xchg
ret
fdiv
jne
fwait
mov
out
xchg
adc
rep
jl
fiaddl
sub
add
ja,pt
push
mov
pop
add
stos
jbe
movsl
dec
lret
xchg
jb
cmp
mov
int
cs
mov
sub
jb
aam
insb
pop
add
outsl
dec
idiv
jns
aam
sub
push
cmc
adc
mov
jns
jl
mov
jp
xchg
ret
sti
repz
dec
xchg
mov
aas
xchg
cmp
shll
outsb
mov
jecxz
dec
lock
push
cwtl
lcall
movsl
push
mov
jo
std
fdiv
inc
adc
cmpsl
addb
shr
insb
jne
or
jne
xor
sbb
mov
daa
sub
mov
inc
sbb
add
out
movsb
ficomps
add
mov
jno
sub
push
outsl
pop
lds
dec
insl
jp
mov
imul
icebp
into
dec
jg
test
movsb
jecxz
or
mov
push
out
mov
mov
push
push
mov
mov
sub
pop
test
mov
cmp
inc
or
insb
outsb
imul
mov
dec
stos
ds
and
jno
adc
test
sub
sbb
call
cmpsb
adc
or
or
mov
push
jecxz
arpl
sbb
jne
lods
insl
out
lret
adc
mov
stc
test
test
cmp
push
sbbl
jecxz
packuswb
xchg
lret
mov
mov
jns
pop
notl
cmc
pop
adc
test
mov
lret
add
les
xor
mov
lods
and
add
mov
sub
or
push
push
pop
scas
mov
adc
xor
pop
mov
enter
inc
xchg
mov
cmp
dec
out
mov
mov
pop
pop
pop
aas
jne
and
and
in
iret
fisttpll
push
xchg
shr
adc
mov
xorl
xchg
pushl
loope
insl
repnz
jg
repz
stos
in
and
pop
xchg
push
in
jge
jne
gs
dec
aas
cmpsl
mov
das
xor
stos
mov
xor
pop
ja
subb
mov
aad
fldl
sbb
loope
subb
sub
and
insl
pop
xor
inc
loope
shrb
in
in
push
imul
jg
inc
test
out
jb
sahf
fdivs
push
cmp
or
push
pop
lahf
int
test
cmpsb
fdivl
divl
aas
cli
dec
inc
out
test
in
hlt
push
sbb
jl
push
mov
dec
movsl
ljmp
lahf
into
outsb
xchg
push
lods
xlat
call
pop
xor
repz
pop
jge
call
sahf
push
mov
xor
sub
scas
xor
mov
andb
ret
mov
add
xchg
jne
movsb
insb
test
scas
xor
addr16
cmc
jle
jo
and
fwait
arpl
leave
dec
sbb
xorl
or
cltd
mov
sub
push
jno
dec
test
pop
hlt
mov
sub
adc
pop
ja
xlat
test
jle
ss
pop
jge
popf
jle
imul
mov
test
push
or
lahf
cmpsb
add
pop
push
int
push
or
add
andl
add
dec
push
lods
mov
mov
mov
loope
into
pop
jne
mov
cmp
cmpsb
xor
push
push
ds
cmp
leave
add
inc
and
cmpsl
test
push
mov
mov
jmp
das
cmc
sbb
xor
scas
push
sub
xorb
xor
jnp
xchg
push
sbb
addl
subl
aam
and
mov
subb
xchg
cli
push
xlat
xlat
or
imul
ficoms
and
inc
ror
jns
icebp
addw
or
inc
mov
fcmovu
pop
and
xchg
notl
adc
rcll
mov
imul
add
ja
pop
jg
test
ljmp
inc
push
fisubrl
mov
cli
jp
cld
mov
shrb
pop
leave
test
add
lcall
jnp
jne
pop
mov
in
push
sbb
jge
xor
aaa
dec
loope
add
mov
inc
cmp
dec
test
fisubrs
les
adc
add
xor
cld
jecxz
andps
xor
rclb
cmc
imull
jno
inc
lret
push
pushf
fldenv
mov
add
cmp
pop
push
jmp
mov
rcrb
mov
mov
es
cmp
mov
or
imul
ret
mov
lret
stc
mov
add
push
dec
cmpsl
ss
mov
adc
lds
nop
aam
pop
div
out
mov
insl
sbb
leave
lret
inc
push
and
add
mov
lret
int3
mov
cmpsl
xchg
pusha
jnp
ss
mov
daa
arpl
mov
jle
lcall
loop
pop
add
xchg
iret
test
fmuls
fisubl
cmp
int
inc
aam
dec
insb
pop
xchg
sub
ret
jg
mov
es
fs
or
sub
adc
mov
test
dec
ja
inc
push
cmc
xchg
fldl
aas
adc
dec
addr16
jbe
lea
sbb
sbb
stc
stos
xlat
add
adc
mov
inc
pop
mov
xor
push
test
rorb
test
mov
test
xchg
lods
test
fstpt
push
dec
fildl
cltd
add
test
dec
sbb
dec
push
jle
cmpsl
adc
push
push
sub
js
xor
adc
adc
jae
add
mov
dec
insb
int3
daa
les
enter
dec
add
das
xor
xor
shll
push
scas
jl
jmp
aas
push
and
ret
sbb
adc
dec
pusha
jbe
addl
fcompl
pop
enter
ret
sub
bound
repz
sahf
inc
idivb
popa
add
int
xor
mov
sub
mov
lods
aam
arpl
mov
ds
sti
test
dec
push
lea
sbb
or
insb
mov
push
adc
pop
int3
loope
xor
or
adc
jmp
sahf
push
cmpsl
pop
retw
adc
cmpsb
fs
mov
dec
xchg
adc
aas
in
test
xlat
sbb
or
sbb
jns
pop
popa
fimuls
insb
xlat
jb
dec
mov
sub
ret
fs
mov
scas
xchg
jo
test
adc
lea
mov
sbb
xor
out
xchg
dec
subl
cmp
push
mov
lret
xor
testl
xchg
mov
in
lret
xor
fadds
push
cmp
mov
js
push
mov
data16
jnp
adc
mov
jmp
into
dec
push
cmc
enter
push
mov
icebp
out
jnp
pop
push
mov
cmpsb
in
test
aad
inc
lods
je
sub
dec
dec
pop
icebp
sar
adc
lds
stc
test
popa
mov
pop
pop
sub
sbb
daa
outsb
mov
scas
addr16
sub
push
out
jg
sub
xchg
xchg
aam
pop
ret
push
filds
jl
mov
out
pop
leave
iret
cltd
js
xchg
das
jno
mov
jg
push
cmpsb
enter
mov
push
jnp
push
rorl
and
jo
cli
movb
jne
hlt
mov
imull
mov
dec
jne
adc
pushf
mov
jle
xor
push
push
jb
dec
mov
mov
mov
loop
mov
popa
jecxz
aad
repz
imul
jae
sahf
push
fdivrs
cltd
inc
dec
mov
add
pushf
lahf
sbb
lea
int
aam
mov
fstps
mov
cmp
jnp
inc
rcl
jp
gs
fistps
enter
xchg
xchg
push
incl
push
int
xchg
data16
mov
lret
jnp
and
xlat
push
pop
rcll
sub
ss
test
sbb
pop
jl
clc
sub
lds
or
ss
sbb
test
out
sbb
adc
xchg
pop
loope
push
jo
movsb
inc
cmc
pushf
jnp
movsb
enter
fnstcw
push
inc
push
xchg
push
cltd
nop
pop
or
mov
scas
push
outsb
mov
out
repnz
test
out
add
pop
ret
mov
jns
adc
inc
pop
test
pop
xor
cmp
sbb
insl
out
inc
jg
in
fstpt
xchg
fmulp
add
inc
lds
mov
push
dec
jge
ret
lods
jp
jno
pop
ljmp
adc
es
scas
cmp
or
mov
into
lret
test
inc
fldenv
aas
sbbb
or
jns
inc
movsl
aad
int
cmp
enter
rolb
aam
cld
fwait
xor
cmpsb
lcall
adc
cltd
popa
test
mov
sbb
aaa
jmp
cmp
icebp
test
mov
cmp
cmpsb
xchg
pmulhw
jle
inc
pop
dec
lret
jno
test
cmpsb
test
std
xlat
mov
push
push
sub
cs
push
lock
push
icebp
mov
jp
adc
jns
jmp
cmp
add
fildl
loop
sub
clc
out
pushf
sbb
les
in
mov
mov
js
mov
lods
dec
sub
mov
daa
push
clc
or
dec
lcall
push
push
mov
xor
cli
cmpl
int3
adc
add
popa
mov
push
ss
cmpsl
xchg
adc
push
and
cmpsl
addb
push
iret
inc
pop
jne
inc
jle
pop
inc
fwait
addr16
cmp
cmp
sub
lds
cwtl
pop
enter
dec
aam
push
add
in
add
push
outsb
or
jmp
test
xchg
filds
inc
adc
sbb
jge
vphaddudq
popa
sub
loopne
aas
data16
shl
sahf
outsl
jbe
cmp
dec
pop
std
dec
scas
ror
test
int
add
push
or
loopne
xor
jae
leave
into
leave
test
mov
xchg
fnstcw
mov
dec
mov
test
sub
add
or
jns
out
jno
sub
ret
jmp
lods
into
inc
or
pop
arpl
sub
pop
add
jmp
ja
pop
dec
sbb
lcall
xor
ja
sub
jb
inc
pop
sahf
test
dec
into
fs
pop
inc
sub
in
inc
and
and
or
mov
outsl
aad
ret
add
js
ss
pop
mov
scas
push
aaa
popf
mulb
cltd
xlat
mov
pop
mov
inc
jne
pop
inc
and
fcomi
sbb
jnp
pusha
aam
ds
arpl
fnsave
stos
push
xor
ds
jno
scas
xchg
dec
mov
xor
dec
xchg
jl
mov
add
pop
cwtl
lds
test
mov
cmc
daa
pop
cmpsb
jnp
inc
pusha
push
popa
mov
push
ficoml
mov
mov
mov
insb
sahf
pushl
test
out
pop
insl
inc
adc
icebp
loop
stos
repnz
pop
mov
add
inc
cwtl
xlat
ja
fmull
sbb
xchg
inc
mov
jnp
mov
das
inc
sub
or
mov
arpl
into
cmc
nop
mov
outsl
adc
push
fnsave
dec
fwait
and
mov
dec
flds
test
mov
mov
int
mov
roll
pop
dec
dec
mov
pop
xchg
movsl
ret
out
movsl
ret
pop
pop
rolb
inc
jae
test
sbb
mov
dec
xchg
add
fwait
mov
mov
lea
test
dec
jnp
sbb
cs
mov
aam
test
imul
add
sub
int3
mov
add
adc
add
cmpsl
inc
ret
repz
jnp
in
push
cs
das
push
xchg
adc
push
pushf
mov
pop
adc
dec
test
inc
fcmovu
push
ljmp
dec
es
sbb
test
mov
cmp
and
mov
pop
jno
shrl
lahf
xchg
jne
stos
pop
repnz
aaa
test
or
lcall
push
arpl
stc
xchg
sbb
cs
stos
pop
mov
push
mov
inc
test
inc
es
sbb
loopne
out
cwtl
es
rcrl
sbb
pop
inc
add
test
iret
in
mov
je
or
push
cmp
and
and
xchg
xor
aam
in
mov
mov
adc
mov
fwait
imul
adc
cli
mov
jne
jnp
ss
cs
jle
push
jmp
xchg
ds
enter
cmc
gs
xchg
sahf
xor
inc
fwait
adc
mov
lcall
and
or
jmp
inc
stc
iret
fs
test
test
arpl
test
into
add
sar
cmp
xchg
int3
pop
test
mov
jo
test
leave
lea
lret
add
xchg
or
fimuls
dec
mov
add
xchg
in
rcrl
dec
cmp
div
lods
adc
test
js
xchg
lock
push
ja
mov
call
xor
dec
jns
int
mov
add
jbe
addr16
xor
or
push
cmpsb
pop
mov
aad
jnp
adc
dec
outsb
push
sarb
dec
daa
test
push
push
cmc
cmpsb
aad
sbb
push
in
push
jbe
sub
dec
push
or
xchg
popf
sar
or
outsb
lret
test
lds
enter
int3
mov
scas
cld
pop
pop
test
fcomps
test
ljmp
push
or
sub
jl
mov
in
mov
pop
xor
aam
mov
or
cmp
lock
rorb
mov
dec
int
xlat
jmp
push
fnsave
push
xor
fmull
mov
or
loopne
sti
and
pop
add
sub
lea
inc
fsubrs
sub
sbb
cmp
xchg
out
outsl
xor
pop
pushf
sbb
push
cmp
out
push
icebp
adcb
pop
inc
ds
call
inc
xchg
jns
test
adc
sahf
cmp
ror
jne
lcall
lods
out
outsb
fs
adc
in
int3
xchg
xor
push
pop
daa
rorl
jno
mov
jp
xchg
inc
loope
scas
mov
or
xchg
fsubr
sub
popf
ret
fs
scas
cmpsl
jge
and
test
and
movsb
xchg
jmp
pop
jl
imul
add
mov
insb
or
cmp
or
stc
mov
in
or
push
sti
leave
cmp
sub
aad
mov
mov
pop
mov
call
add
cltd
dec
xchg
daa
es
subb
mov
int3
jmp
lret
mov
pusha
shl
mov
ret
mov
push
ret
mull
arpl
jmp
ds
or
cmpsl
mov
sbb
mov
ds
mov
adc
push
imul
pop
sub
mov
or
inc
jnp
adc
xchg
clc
arpl
mov
outsb
adc
adc
popa
dec
adc
or
out
mov
and
test
or
xor
icebp
sbb
inc
test
or
lods
and
data16
inc
inc
mov
add
jmp
cltd
pop
xlat
cmpsb
adcl
test
mov
and
aas
test
push
cwtl
mov
mov
fs
int
in
xchg
in
push
push
mov
in
pushf
sub
adc
mov
scas
aad
add
inc
mov
divb
or
out
enter
jge
add
jmp
insl
stc
subl
dec
and
push
das
add
shrb
mov
xchg
jp
iret
fwait
jno
push
pusha
fistpll
jbe
lcall
inc
lahf
sub
sbb
mov
mov
das
popl
test
aaa
outsl
adc
adc
or
jae
jge
in
pushf
mov
or
out
ret
shll
lock
js
and
paddb
inc
cltd
mov
push
sbb
xchg
lds
sbb
mov
mov
aaa
dec
imul
sbb
or
sub
lods
test
lods
hlt
bound
xchg
js
sub
mov
mov
adc
into
icebp
lret
test
repz
enter
xlat
ret
ror
inc
shlb
int3
lcall
sub
fiaddl
xchg
cmc
out
jle
scas
rcrl
leave
fwait
xor
pushf
xor
pop
jne
lock
pushf
pop
mov
push
imul
das
mov
lds
or
mov
in
fsubrl
sbb
iret
adc
scas
popf
enter
inc
pop
xchg
gs
sub
insl
and
push
jb
jnp
lods
sahf
icebp
and
mov
andl
cmpsb
test
mov
xor
mov
mov
insb
and
in
clc
aam
sbb
dec
lret
pushf
mov
cli
movb
mov
cmp
mov
lds
test
mov
shlb
pop
xor
pop
push
mov
dec
hlt
and
test
fcmovbe
mov
mov
dec
mov
insl
lret
adc
cwtl
xor
jo
jecxz
mov
test
insb
movsb
ret
in
dec
test
cmc
add
push
dec
cmp
test
in
fsubrs
and
adc
inc
jb
mov
cmp
mov
insb
into
jnp
daa
cltd
mov
mov
sub
lods
cmpsb
dec
aad
test
in
in
mov
shl
add
pop
rolb
gs
add
mov
mov
push
or
sbb
in
test
popa
data16
insb
xchg
lret
sub
and
cmp
aam
es
add
call
cmc
jnp
repnz
mov
or
mov
push
cltd
mov
adc
xchg
imull
add
aaa
sbb
sub
lds
xchg
and
dec
out
sbb
negl
leave
enter
mov
inc
popa
mov
xor
scas
es
inc
sbb
dec
rcrl
lds
ret
lret
jo
jno
sbb
or
in
dec
fxch
test
push
adc
ret
mov
subl
dec
push
xlat
sub
aam
mov
fwait
scas
inc
xor
jmp
aas
and
xor
mov
aam
mov
sub
adc
jmp
inc
pop
pop
xor
bound
movsl
xor
or
lret
inc
stc
enter
jae
push
xor
jp
inc
iret
pop
stc
dec
repnz
inc
add
cmp
aam
xor
xor
add
cltd
pop
xchg
or
mov
mov
mov
divb
pop
lock
test
enter
lret
stos
test
pop
scas
call
fstpl
and
jge
mov
mov
mov
xor
xor
iret
and
cmp
shrl
repz
fnstenv
jae
add
adc
std
cmp
lock
gs
aam
add
mov
xchg
repnz
mov
pusha
in
push
push
inc
ds
stos
sti
dec
mov
rcll
icebp
ret
or
or
jle
cmp
shll
inc
or
mov
jle
sub
ret
insl
test
push
adc
icebp
add
aam
mov
inc
jbe
xor
cmp
bound
test
pop
jo
stos
mov
cwtl
adcb
cmp
mov
inc
call
sbb
adc
leave
out
push
data16
xchg
imul
in
pop
sub
pop
push
cmp
or
push
xchg
inc
ja
cmpsl
test
in
loopne
cltd
inc
add
pop
mov
rcll
aaa
adc
rep
inc
mov
cmpsb
mov
sbb
push
in
jg
inc
es
or
add
mov
jl
rorl
fistps
push
test
mov
add
pop
xorl
pcmpgtd
sbb
in
xchg
ljmp
fsubs
pop
and
jnp
adc
dec
pop
cli
mov
outsl
jo
push
sbb
jecxz
or
lret
aas
div
mov
ja,pt
mov
in
push
out
inc
cmp
add
jns
movd
sti
mov
int
imul
cmp
arpl
sbb
mov
sbb
mov
out
xor
and
call
out
pop
and
sub
lret
negl
lret
jmp
in
adc
mov
mov
inc
ds
fsubrl
sbb
and
mov
and
mov
cmp
jecxz
or
mov
pop
inc
inc
xchg
imul
scas
iret
in
test
or
jg
sub
mov
aas
mov
mov
in
scas
push
pop
das
push
cltd
bsr
pop
mov
das
test
je
push
inc
nop
popa
mov
pop
and
loope
sarl
cmp
aam
mov
dec
in
or
inc
stos
xchg
cwtl
test
sub
imul
sbb
pop
and
inc
mov
movsb
jg
and
dec
pop
addl
stc
sbb
cmp
sub
fwait
jns
cmp
xor
stc
adc
mov
mov
inc
imul
dec
add
fisttpl
adc
imul
lods
pop
add
js
mov
cltd
push
rcrl
call
push
stos
cmpsl
mov
popa
sub
test
push
and
je
ror
mov
or
jl
cwtl
in
xor
scas
adc
mov
cwtl
jg
lock
sti
test
jecxz
scas
inc
mov
pop
test
mov
cmpsl
subb
add
and
lods
push
shrl
mov
mov
icebp
aaa
leave
call
dec
inc
sbb
jnp
stos
mov
dec
jno
inc
adc
sub
das
ret
js
lea
lods
xor
loop
rcrl
cmp
lods
inc
adc
mov
xor
or
shrl
push
aas
jns
ret
into
adc
add
cmpsb
call
sbb
es
test
cmpsl
rorb
daa
inc
out
ja
mov
movsl
cmpsl
mov
mov
lods
add
jmp
mov
xchg
or
sbb
cmpb
jle
lods
pop
add
dec
sbb
stos
scas
mov
and
pop
lock
xor
add
sub
js
idiv
test
in
xor
xchg
sbb
mov
lcall
and
push
inc
lods
cli
inc
lea
std
mov
jo
in
add
ds
shr
sub
andb
popf
das
add
mov
out
sbb
add
negl
dec
xor
fisubs
push
pop
movsb
and
pop
pushf
inc
frstor
push
or
sub
movl
cs
aas
mov
xor
scas
loop
xor
ficomps
int
jl
stc
inc
ss
test
aas
add
mov
mov
jns
push
out
subb
add
cmp
sbb
imul
sbb
iret
xchg
dec
sahf
pushf
shlb
push
cld
mov
leave
icebp
dec
mov
daa
mov
or
push
jl
mov
adc
cmpsb
fdivrs
hlt
and
jae
add
push
sub
pop
lahf
pop
mov
inc
out
push
cld
loop
pop
push
inc
rcrl
sub
mov
movsl
add
mov
test
ret
add
mov
mov
out
shll
cmp
enter
mov
mov
mov
imul
test
add
push
lock
shl
cmpsb
mov
adc
adc
aad
test
out
dec
adc
stc
sbb
sub
scas
or
outsl
mov
adc
xor
test
out
outsb
mov
call
mov
stos
or
mov
test
fsubrl
imul
inc
pusha
xor
out
dec
xor
movsb
sbb
sub
std
stos
or
inc
fsubp
je
ljmp
jns
jmp
lcall
imul
cmp
push
popa
call
test
mov
jno
fsubrl
sarl
xchg
or
lock
or
dec
add
repz
out
jne
ret
jle
divb
mov
mov
sbb
mov
sub
imul
sbb
pop
into
das
adc
pop
test
and
test
or
fcompl
dec
filds
dec
dec
cmp
es
dec
repz
dec
je
mov
jg
push
mov
aad
roll
cmpsl
xchg
xchg
lcall
dec
test
arpl
dec
in
push
sub
inc
in
or
inc
push
insl
pop
enter
cmp
fldt
stc
and
jp
push
jecxz
push
mov
sti
test
sub
addb
adc
mov
dec
xor
negl
push
pop
cmp
inc
push
loop
mov
outsl
cwtl
pop
shlb
cmp
sub
stc
xor
xlat
fimuls
dec
enter
out
ret
cli
xor
fs
jno
sbb
adc
inc
je
ja
testb
pop
add
fcompp
push
jg
or
fstps
sub
pop
aam
loope
xor
mov
test
loop
pop
shrb
lret
scas
jbe
add
test
xor
cwtl
sub
adc
cli
dec
jp
mov
pusha
xchg
xchg
roll
xor
inc
pop
cmp
jl
ret
in
lods
cmp
in
push
mov
add
ljmp
sub
lds
pusha
sub
sub
xor
mov
cmp
mov
push
sbb
pop
xchg
or
xchg
test
sub
test
push
jmp
cmp
adc
mov
aad
inc
inc
jo
lock
jmp
push
add
pusha
jno
ret
jle
sub
les
pushf
inc
mov
cmc
movhps
push
pop
dec
outsl
push
jo
mov
push
leave
ret
fisubs
aas
rcll
fstpl
mov
cs
mov
orl
dec
inc
mov
insl
and
paddq
shlb
sub
out
loopne
test
jle
jb
sbb
fwait
int
xchg
loop
dec
not
jl
push
jo
das
add
popf
jb
mov
inc
pop
jno
xor
test
mov
fnstcw
adc
aas
and
and
repz
push
and
mov
andl
inc
test
sub
sbb
or
push
test
push
cmp
in
xchg
mov
or
mov
stos
add
xchg
insb
or
fldt
sub
imul
sub
repnz
pop
mov
mov
in
ds
in
push
ret
xor
ret
jp
and
out
dec
in
jge
in
rcrl
xchg
test
mov
pop
in
lock
adc
mov
ret
or
jl
inc
add
fstl
mov
mov
ja
jl
int
mov
into
inc
jno
clc
dec
mov
aaa
lock
xchg
jmp
jns
popa
inc
lds
xchg
popf
scas
xor
orb
sahf
mov
push
arpl
fs
std
fsts
into
rorl
aam
outsb
cmpsl
xor
pop
jnp
jmp
inc
and
mov
fldenv
sub
fnsave
xchg
inc
xor
loop
ret
test
dec
mov
inc
pop
adc
pop
add
xlat
imul
stc
add
pop
mov
out
dec
test
aaa
push
fxch
xchg
dec
movsb
jl
sub
xor
push
insb
cld
or
sub
test
gs
jl
ja
and
out
lret
inc
adc
call
movsl
repz
inc
pusha
pop
xchg
mov
mov
push
adc
push
or
add
rclb
mov
xchg
mov
pop
scas
inc
adc
dec
jle
xchg
sub
jnp
nop
xor
mov
pushf
imul
xchg
add
pop
dec
add
add
push
aas
stc
adc
outsl
adc
pop
and
test
test
in
outsb
jge
jno
push
lret
jl
dec
inc
call
out
jmp
sub
test
mov
les
xchg
jnp
mov
xor
mov
xor
outsb
pusha
jl
jmp
sti
cmp
jo
xor
pop
jnp
lods
pop
test
mov
mov
or
cmpsb
lea
add
aam
add
popf
fisttpll
cmp
negb
idiv
aas
jns
inc
cmpl
scas
loop
xor
sub
jp
ja
leave
dec
inc
mov
ret
aaa
imul
loope
jp
push
mov
xor
rcl
lret
xlat
ret
jb
inc
lock
fisttps
js
jns
out
ret
iret
xchg
ret
jnp
pop
int
repnz
aas
repnz
ret
pop
mov
inc
stos
mov
sbb
pop
lods
jno
and
loop
flds
jmp
repz
sahf
fs
pop
fcomip
push
leave
movsl
mov
mov
fildl
cwtl
jbe
ljmp
ret
jl
xchg
outsl
out
adc
xchg
inc
pop
in
outsl
imul
adc
dec
mov
jnp
das
rcll
scas
xor
test
pop
pop
pop
out
xorl
mov
aam
or
and
fidivrs
xor
adc
leave
addl
add
enter
cltd
xchg
xchg
fdivs
and
push
pop
pop
xchg
add
dec
ffree
jp
or
pop
sbb
flds
pop
js
lahf
mov
mov
insl
add
xlat
test
sti
scas
ret
lret
mov
fldl
icebp
adc
fimuls
mov
icebp
sbb
fwait
outsb
cwtl
lret
mov
jo
test
sub
ret
test
cmc
mov
sbb
mov
hlt
xchg
jle
or
fldl
adc
mov
daa
fisttpl
decl
lea
jle
into
or
mov
xchg
pushf
gs
or
mov
pop
jns
mov
xor
shll
ret
cmc
repz
fs
xchg
outsb
loope
dec
arpl
pop
ds
cs
xchg
and
loopne
test
jmp
mov
jg
mov
scas
outsb
xor
lret
cmpsb
mov
adc
xchg
inc
inc
decl
or
mov
js
ret
popf
cltd
inc
movsb
rol
mov
mov
sub
rcr
jns
pop
inc
xchg
out
or
xor
inc
pop
test
push
rcrl
test
out
js
in
sub
xchg
nop
es
or
adc
pop
loopne
pop
push
mulb
or
dec
cmp
cmp
in
mov
jnp
loopne
popl
in
repnz
mov
jae
sbb
dec
outsb
cltd
pop
push
add
hlt
push
enter
and
add
add
add
jnp
jmp
add
mov
mov
mov
pop
xor
test
xor
testl
jb
mov
adc
jbe
nop
pop
lds
stos
pop
imul
roll
adc
push
popa
dec
icebp
test
sub
movsl
enter
ret
xchg
sbb
lods
test
lock
sub
arpl
xchg
pop
sub
mov
add
sub
and
sbb
jl
xchg
inc
subl
cmp
ret
adc
aam
mov
test
mov
dec
sahf
add
cmp
test
repz
mov
jl
int3
jmp
icebp
sbb
pop
int3
push
push
lods
out
push
outsb
in
mov
pop
jns,pn
xchg
test
leave
loope
das
test
add
inc
xorl
add
jmp
adc
je
test
popl
dec
das
js
leave
pop
push
mov
rorl
add
push
add
jns
sahf
rep
repnz
enter
adc
pop
jb
dec
dec
jmp
insb
hlt
rol
mov
loop
inc
clc
mov
pop
daa
mov
sub
sbb
cmpsb
enter
inc
xor
xchg
test
dec
stos
pop
adc
pop
test
xchg
inc
cmp
in
inc
mov
lret
in
leave
sbb
dec
sti
stc
inc
pop
cmp
pop
pop
push
and
sub
inc
cmc
push
mov
and
push
adc
arpl
mov
jmp
xchg
xor
addr16
iret
push
mov
aad
dec
sub
fldl
jl
gs
mov
pop
jno
aam
aaa
push
test
xchg
scas
jno
xor
inc
dec
repz
adc
sbbl
aaa
aad
jmp
stos
xor
cmpsl
and
pop
mov
push
and
sub
inc
adc
aad
mov
mov
sub
sub
das
pop
imul
and
and
stos
enter
xchg
cmpsl
in
mov
sti
lods
mov
cs
sub
jg
outsw
inc
mov
mov
test
cmp
bound
mov
add
sbb
adc
mov
push
or
jno
in
mov
int
inc
cli
stos
adc
dec
jl
mov
push
sub
aam
pushf
xchg
jmp
and
jns
test
add
and
je
ror
repnz
jns
xchg
sub
jno
inc
icebp
mov
std
test
icebp
cmp
aad
ffree
cmpsb
dec
mov
sahf
push
push
shll
inc
cmp
scas
daa
sub
and
xchg
adc
xor
mov
sub
xor
mov
xor
sub
mov
mov
xlat
fidivl
cmp
imulb
movsl
xor
lea
psrlw
lods
cld
push
inc
call
or
popf
inc
aas
mov
xchg
jg
les
sub
gs
sti
das
push
popf
pusha
xor
xor
pop
insb
mov
pop
mov
sub
sbbb
fsts
pop
xchg
inc
xor
cli
lods
fcom
pop
and
sarl
imul
jl
hlt
pushf
or
ja
push
aam
dec
inc
divb
xchg
and
stos
sbb
jl
btr
add
mov
dec
dec
xchg
dec
loopne
rclb
lahf
dec
movsb
arpl
cwtl
and
cmp
and
pop
lcall
add
add
push
out
fidivs
incl
jne
in
xchg
fwait
in
je
sub
dec
xchg
icebp
scas
push
or
sub
pop
inc
lcall
inc
sub
pop
sti
xchg
sbb
add
or
nop
adc
xchg
mov
shrb
fs
je
mov
test
ljmp
insb
or
sub
cmpsb
ret
inc
mov
jno
fstl
adc
jp
stos
jne
xor
subb
insl
jae
sub
mov
sub
popf
lods
and
xor
sub
mov
and
mov
popl
jnp
jmp
outsl
lods
xor
push
add
cli
orl
mov
add
add
sbb
push
test
dec
or
out
mov
aam
pushf
mov
in
test
fs
add
mov
sbb
jp
dec
add
pop
dec
cld
push
and
daa
sub
test
outsl
pop
add
sarl
call
aaa
push
push
push
aam
sbb
sahf
sti
ja
inc
dec
push
jmp
mov
push
adcb
mov
stos
jnp
xchg
mov
dec
mov
sub
jno
fldcw
pop
ds
inc
dec
sarl
add
push
push
int
pop
call
out
scas
mov
xchg
aam
lods
or
adc
mov
pop
jo
or
ret
jp
xor
adc
dec
inc
or
out
mov
or
mov
pop
push
xchg
movsb
push
push
mov
ret
movsl
jnp
into
lds
or
mov
aam
dec
mov
ror
test
rcl
sbb
rclb
fdivr
ret
xlat
sbb
es
cwtl
les
jp
adc
test
in
push
daa
jge
dec
or
and
mov
dec
imul
xchg
sbb
dec
outsl
sub
and
inc
mov
test
adc
fldl
add
sub
ja
ds
test
and
movsb
add
dec
sarb
xchg
test
test
fwait
cmp
pop
pop
or
shl
mov
xchg
pop
adc
mov
outsb
jno
jp
mov
jle
push
gs
fnstsw
loope
iret
movsb
inc
cmp
dec
or
xor
scas
je
int
loope
test
inc
insl
mov
add
xor
inc
ja
or
repz
test
fistpl
addr16
pop
inc
add
repz
sbb
fnsave
push
jg
sbb
pop
call
ss
fwait
movsb
enter
in
pop
xchg
mov
popa
test
call
adc
outsl
or
sbb
fdiv
arpl
imul
js
jb
icebp
inc
out
cmp
sub
gs
push
sub
cld
jmp
fchs
stc
ror
sbb
test
adc
cltd
shrl
mov
xor
dec
scas
mov
push
pop
push
ja
mov
xor
push
adc
mov
mul
mov
cld
and
ja
movl
sub
dec
std
ret
add
shll
xchg
sbbb
push
cltd
push
aam
inc
movsl
ljmp
das
das
push
ret
jno
repz
pop
push
hlt
andl
mov
adc
popf
mov
frstor
stos
icebp
rol
cmp
xchg
mov
cmpsl
subl
paddsb
xorb
and
xor
out
mov
cwtl
enter
ja
mul
aam
hlt
push
pop
scas
jl
mov
mov
dec
jle
xchg
mov
iret
cmpsb
test
insl
roll
push
pop
loopne
push
pop
pop
cmp
jnp
push
mov
jmp
inc
cmc
into
cmp
jecxz
scas
or
add
pop
mov
daa
cmp
cmp
pop
js
add
lds
jle
loopne
jne,pt
jle
ret
jns
push
leave
mov
test
pop
sarb
mov
repnz
sahf
jns
test
sbb
cmp
dec
mov
pop
jle
mov
sarb
iret
dec
pop
mov
mov
adc
xchg
sarl
cli
dec
lret
dec
push
pop
jecxz
roll
xchg
adc
scas
inc
mov
mov
imulb
fiaddl
or
ss
test
out
dec
pushf
pop
jae
cmpsb
pop
push
scas
rcrl
in
sub
fisubs
test
adc
xor
js
lret
ret
mov
adc
push
xor
in
or
add
fimuls
fidivl
cmp
sub
out
dec
mov
int3
icebp
sti
jne
push
add
jp
and
xchg
xor
add
push
cmp
fldt
fistpl
mov
fiaddl
push
cmp
test
icebp
mov
add
cmp
mov
mov
pop
cmp
inc
das
push
out
inc
jns
dec
mov
mov
sbb
mov
mov
add
or
mov
loopne
pop
imul
and
pop
mov
out
xchg
clc
inc
sbb
add
sbbb
popa
push
adc
inc
into
mov
and
add
inc
inc
nop
test
xchg
pushf
xchg
stos
stos
ud2
lods
jnp
xchg
jnp
push
add
push
xchg
inc
ror
ljmp
or
push
mov
lds
pushf
xor
mov
pop
stc
daa
mov
lcall
mov
fistpl
mov
in
int
test
aad
sub
mov
cli
xchg
or
inc
fnstsw
adc
ss
xchg
rclb
in
jns
and
inc
push
dec
aam
push
ja
aas
sbb
repz
scas
rcrl
ss
imul
mov
push
mov
dec
cmp
add
int3
dec
sti
sub
test
popa
test
jne
scas
push
xchg
mov
mov
add
cmp
ret
stos
gs
mov
push
xchg
xor
cmpsl
mov
jg
push
inc
mov
subl
dec
imul
mov
pop
test
loope
adc
mov
loop
jne
push
pop
imul
or
jbe
gs
pop
cmc
mov
xor
jp
sbb
inc
cld
mov
movsl
ret
aam
ss
scas
mov
imul
mov
cld
int
mov
sahf
mov
adc
jb
jbe
jp
adc
in
xchg
insb
mov
inc
mov
pop
inc
mov
sub
pop
push
dec
adc
inc
es
dec
call
mov
leave
fdivrs
pop
jo
sbb
ret
pushw
call
push
dec
jmp
insl
stc
xor
test
repnz
lcall
or
loope
test
add
xor
adc
in
sbb
lcall
push
mov
shll
jns
iret
rorl
sahf
push
or
sbb
hlt
mov
mov
icebp
mov
pop
sbb
dec
fldl
out
scas
lcall
cmc
jmp
adc
sub
mov
mov
xchg
xchg
mov
adc
sub
and
roll
fs
out
pop
jg
popa
fbstp
push
ret
and
fcompl
push
xor
or
sahf
int
and
test
nop
or
aam
inc
or
into
pop
inc
mov
xchg
in
stos
mov
mov
mov
movsb
outsb
pop
shll
xor
xchg
js
xor
or
es
jl
lahf
or
pushf
lods
mov
or
inc
sbb
add
pop
ret
imul
sub
adc
mov
jnp
and
cmp
iret
cmp
lea
je
imul
ss
stc
adc
test
dec
rcll
std
lahf
data16
cmp
xchg
faddl
xor
push
dec
or
mov
cmp
and
std
in
sarb
insb
pop
scas
jecxz
popf
lds
or
test
addr16
cmp
inc
lcall
xor
or
jg
jns
decb
cltd
gs
cmpsl
test
fs
scas
or
out
mov
sub
sbb
sbb
and
adc
sub
mov
fwait
repz
push
mov
dec
aad
sub
insl
outsb
cmp
inc
in
pop
enter
pushf
test
adc
fcomps
sub
repnz
test
push
mov
jmp
push
adc
fmulp
xor
mov
mov
sbbb
ljmp
xor
jns
and
in
int
call
into
shlb
sahf
test
addr16
nop
nop
jp
jmp
rclb
mov
stos
fldl
push
std
pop
mov
clc
mov
mov
xor
rcrl
push
xor
es
mov
cmpsb
inc
int3
stc
sbbb
add
and
push
scas
js,pt
sbb
aad
mov
imul
sbb
pop
lods
aad
hlt
icebp
cwtl
pop
mov
lret
in
add
xchg
sbb
cmp
sarb
in
bound
int
inc
jg
insb
ds
int3
aam
pop
inc
jmp
loopne
push
dec
xchg
fidivs
lds
rcr
pop
cmpsb
push
or
rorl
xor
std
std
xor
pop
mov
xlat
movsl
push
push
pop
push
outsl
testl
pop
push
add
sub
add
je
nop
mov
xchg
ret
pop
adc
bound
or
mov
popa
movsl
out
inc
ss
jecxz
mov
xchg
jmp
std
xor
es
sbb
add
movsl
jmp
test
lock
jno
mov
push
mov
mov
data16
ljmp
icebp
mov
mov
mov
rclb
into
fiaddl
es
lock
fbld
or
mov
das
std
mov
xchg
test
in
lret
fldl
mov
mov
popa
shlb
mov
sub
xor
mov
or
mov
sub
rorl
jno
int
out
jae
mov
cmc
mov
test
xchg
add
movsl
push
pop
jnp
lods
sub
push
pop
andps
push
sti
cwtl
cli
sub
fcomi
cmc
jle
clc
xor
cmpsb
or
aam
or
inc
shrb
fs
fwait
es
out
daa
out
push
add
xor
stos
mov
ror
inc
inc
shll
andb
les
push
aam
dec
mov
repz
mov
nop
sarb
dec
pop
xchg
or
cwtl
sbb
xor
sbbl
jne
inc
jns
or
mov
sbb
mov
lods
push
push
jns
mov
sbb
xor
fidivl
pop
call
pushf
jns
sub
mov
sub
loope
stc
stos
mov
xchg
sub
push
mov
mov
adc
cmp
mov
ss
hlt
in
cli
sarb
or
push
call
fstl
sbb
sahf
andb
inc
pop
inc
lret
xchg
outsl
inc
fwait
leave
mov
icebp
out
dec
jle
push
enter
mov
out
adcl
gs
jns
gs
repz
hlt
mov
test
xorl
dec
lock
xchg
mov
sub
or
orb
xchg
mov
pop
mov
push
mov
dec
icebp
jge
loope
aad
push
nop
or
pop
mov
sbb
fldt
subl
jnp
xor
inc
ror
xchg
inc
add
adc
test
test
sbb
push
mov
mov
adc
adc
mov
mov
imul
lret
adc
pop
xor
adc
lock
lret
mov
push
enter
pop
push
pop
out
mov
sbb
stos
jecxz
or
inc
std
jo
inc
and
inc
mov
add
imul
add
push
add
xchg
sub
add
mov
jbe
mov
xchg
and
lock
rorl
add
mov
dec
incl
dec
jno
dec
xor
mov
cmc
outsb
pop
data16
test
mov
mov
ljmp
nop
jecxz
in
int
inc
imul
data16
and
inc
xor
add
xor
arpl
repz
xchg
dec
test
push
and
push
or
xchg
cmp
fs
sbb
fwait
push
rcll
jle
push
loope
jg
add
lock
test
fistl
imul
mov
dec
insb
xchg
dec
push
cltd
adc
and
xchg
stos
test
adc
sub
ficoml
into
loopne
test
fwait
sbb
lahf
in
cmpsb
inc
ret
push
add
jg
dec
mov
add
mov
cli
mov
jno
add
inc
insb
xchg
test
push
xor
add
pop
pop
enter
pop
movsb
adc
cmp
pop
test
cmpsl
push
ljmp
mov
adc
ljmp
fs
xor
arpl
and
push
or
mov
pop
loope
std
sub
enter
pop
cmpsb
add
fldenv
inc
cmp
imul
and
test
mov
mov
repz
and
and
hlt
mov
movsb
inc
add
or
insb
loop
mov
xchg
in
or
pop
xor
jo
repnz
mov
add
aam
add
mov
dec
int
fldcw
xchg
mov
push
or
addr16
movsb
or
mov
test
lods
mov
jle
popf
pop
push
adc
xor
decb
arpl
lret
jge
loop
test
fsubs
out
mov
lret
pop
add
nop
lahf
xchg
insb
repnz
cmp
test
sbbl
mov
push
cmc
into
push
adc
mov
jle
push
xchg
aaa
enter
xchg
dec
in
xor
imul
jnp
lea
add
or
add
repz
or
imul
int3
push
rcl
push
add
mov
fdivrl
aam
add
stos
shll
push
adcb
rclb
dec
insb
sbb
xor
cmp
daa
es
inc
in
jp
xchg
sgdtl
lcall
and
jle
inc
jns
jp
lods
leave
int
enter
sub
mov
or
adc
cwtl
mov
and
popa
xchg
sub
add
test
sbb
jo
add
adc
mov
gs
dec
mov
mov
push
out
shll
out
icebp
jne
cmp
mov
arpl
mov
stos
sahf
push
cmpsl
cltd
out
scas
or
pop
cmc
jg
pop
mov
mov
test
and
daa
push
sbb
or
imul
lret
xor
dec
dec
fs
sub
push
mov
andl
mov
test
sahf
movsb
into
mov
out
mov
data16
aam
xchg
sbb
dec
cmpl
sbb
jmp
sbb
jae
jge
enter
ror
insl
mov
outsb
addl
leave
jg
ret
mov
int
ljmp
stc
push
enter
and
popa
cmp
add
lea
dec
xchg
xchg
or
add
iret
sub
out
out
mov
adc
pop
adcl
inc
xchg
roll
loop
imul
leave
sarl
pop
jecxz
icebp
push
mov
mov
cmc
fsts
movsb
or
xor
pop
mov
scas
pop
mov
mov
nop
lret
loope
sbb
sub
adc
mov
lock
ret
dec
ret
mov
pop
add
mov
xor
sbb
imul
sub
cs
stos
popf
test
jnp
popa
ds
jg
bound
inc
test
sti
mov
jne
mov
adc
sbb
xchg
out
sbb
sbb
popa
fistps
es
mov
add
sub
in
call
and
mov
call
pop
mov
jno
arpl
or
xor
stos
mov
cmpsb
pop
popf
loop
inc
pop
ror
daa
jne
and
sub
and
popa
dec
popa
iret
pop
packuswb
dec
inc
mov
xchg
adc
mov
shrl
scas
dec
mov
int
nop
cmp
test
inc
stc
pop
loopne
add
sub
mov
mov
pop
bound
mov
jge
mov
and
gs
out
daa
adc
and
gs
push
inc
adc
dec
frstor
mov
push
dec
leave
jbe
or
std
mov
test
gs
pop
xor
add
adc
mov
mov
int
xchg
and
cmp
test
int
mov
arpl
shlb
xchg
sahf
mov
cmp
aad
pop
xchg
cli
xor
xchg
fs
enter
test
push
ret
adc
ret
lods
outsl
adc
test
es
pop
add
hlt
mov
pop
push
clc
sub
test
push
mov
mov
or
rorl
push
aad
pusha
or
pop
dec
pop
jecxz
jmp
sbb
or
mov
repnz
std
rorl
xor
or
addr16
mov
add
xor
pushf
ret
inc
add
push
jle
sti
imull
xchg
cmpsb
push
dec
mov
or
clc
in
add
mov
or
mov
inc
mov
lahf
jbe
test
adc
pop
sub
test
mov
leave
jo
mov
aam
cltd
stos
jo
mov
mov
jle
enter
mov
jns
and
imul
push
add
adc
daa
stos
xor
ss
xchg
cs
pop
fdiv
jnp
outsl
jecxz
cmpsl
xor
jecxz
or
add
and
lret
sbb
mov
je
int3
loop
mov
sub
shll
inc
mov
dec
insl
push
je
jns
dec
pop
test
xor
ds
inc
inc
push
les
push
or
iret
inc
sub
mov
xor
push
fwait
cs
rcrl
ljmp
pop
jnp
xchg
mov
or
adc
cmp
or
adc
pop
mov
pop
jg
pop
mov
and
xlat
and
test
add
add
mov
mov
mov
jg
mov
push
jmp
test
mov
mov
jnp
ja
pop
or
popa
out
stos
push
inc
cwtl
pop
pop
jl
cltd
or
pop
and
test
push
mov
sbb
test
aad
push
inc
sbb
mov
sub
icebp
jg
push
sub
popf
xlat
push
or
xor
cld
push
jae
sbb
jae
je
ja
in
test
test
or
in
int3
inc
add
mov
mov
push
mulb
lock
dec
and
mov
ds
scas
dec
cmp
mov
jg
mov
xor
int
pop
mov
dec
repnz
aaa
or
mov
loope
scas
sub
cli
jge
mov
jge
mov
orb
gs
iret
inc
inc
movsl
jg
adc
pop
jmp
push
push
aam
cli
jno
stos
pop
jl
mov
nop
mov
stos
mov
mov
cmp
mov
and
cmp
or
imul
ja
outsb
adc
mov
cli
inc
cmp
mov
xchg
jb
jp
mov
add
in
add
daa
jo
pop
sub
mov
cmc
ret
test
mov
mov
dec
inc
cmp
out
minps
mov
adc
call
test
inc
mov
mov
add
inc
mov
sub
xlat
enter
outsb
adc
add
and
je
stos
test
pushf
test
loope
or
and
in
ds
mov
ffree
bound
push
add
xor
mov
sbb
xchg
add
xor
inc
mov
xlat
data16
rorl
das
inc
adc
cmp
daa
jmp
sub
xchg
insl
call
mov
cmpsl
cmp
in
lock
push
out
in
cmp
inc
jp
inc
lds
mov
sub
mov
lods
mov
sub
test
insb
mov
fldlg2
stos
aam
add
cmp
inc
insb
ja
test
sub
inc
shrl
aad
pop
test
sar
jbe
mov
sub
adc
ror
jns,pn
jae
pop
pop
dec
pop
add
sub
arpl
cltd
sbb
mov
test
jp
mov
push
cltd
mov
daa
mov
loopne
pop
in
adc
xor
inc
lret
xor
cmp
inc
pusha
repz
adc
add
sbb
sbb
mov
js
pop
sub
push
movsb
xor
outsb
cmpsl
fiaddl
ret
lods
push
xchg
push
in
std
sub
popa
add
dec
inc
and
xchg
mov
popf
outsb
mov
jne
ds
int
xchg
xor
sbb
sub
push
lret
into
mov
mov
mov
push
or
dec
xchg
jns
push
pop
sub
test
xor
hlt
popf
test
push
mov
add
sub
scas
mov
rorl
or
pop
scas
aad
jp
jge
fists
lods
or
sub
and
lahf
imul
inc
cltd
xchg
or
and
aas
sbb
lret
push
aam
ret
push
mov
pop
jp
in
clc
mov
xor
mov
js
arpl
and
aad
hlt
adc
movsb
xchg
rcl
sar
xor
hlt
dec
fcmovnbe
inc
sbb
test
dec
rcll
addl
dec
xorb
dec
jle
mov
clc
sbb
or
inc
mov
xchg
xor
ret
int
lret
xchg
sbb
sahf
xor
dec
and
lret
addb
pop
jp
mov
stos
or
inc
mov
xor
adc
mov
xchg
js
mov
push
cltd
pop
inc
adc
xor
test
push
xor
imul
push
fsts
xchg
jg
xor
mov
sbb
ficomps
add
add
test
sub
inc
and
jg
ss
dec
fistps
pop
lock
sbb
clc
jge
or
sub
aaa
pop
fildll
lretw
cmpsb
jne
inc
andb
imul
movsl
fs
and
add
xchg
pop
lret
mov
inc
ds
inc
sbb
jecxz
cmp
sbb
lock
test
call
sbb
push
push
pop
add
sub
xor
xchg
dec
repz
mov
jae
push
into
dec
add
jmp
pop
cltd
jns
mov
add
test
dec
push
fmuls
cltd
cld
paddusw
xor
add
js
bt
cmpb
dec
dec
jle
ljmp
sub
outsb
mov
add
push
les
mov
inc
xor
js
sbb
mov
sarl
adc
mov
pusha
jmp
es
jae
call
outsb
insl
ret
inc
test
adc
insl
xchg
lahf
mov
enter
test
mov
shlb
jae
test
mov
pop
fwait
cmp
mov
fwait
movsb
inc
pushf
shrl
ret
adcl
sahf
test
fwait
jo
hlt
aam
insl
or
outsb
inc
nop
jns
jne
in
mov
jmp
std
sbb
fstps
stc
test
fwait
enter
xor
leave
inc
pushf
cmpb
outsb
and
cld
xor
mov
int3
mov
mov
mov
pop
xchg
mov
in
xchg
pop
movsw
sahf
insb
aam
add
decl
dec
jl
pop
add
movsl
cld
mov
call
push
cmp
inc
subl
jns
xor
aad
add
inc
arpl
das
rorb
add
xor
add
jl
aas
adc
imul
sbb
mov
adc
mov
push
mov
mov
andb
in
out
mov
mov
push
loop
enter
shr
pause
in
mov
jne
stos
aaa
test
push
lahf
ret
xchg
mov
push
mov
mov
js
sub
test
and
inc
jle
movsb
push
mov
scas
jnp
xchg
daa
hlt
jecxz
mov
mov
lcall
loop
and
lds
xchg
addr16
cmpsl
cmpl
xor
push
add
xchg
bnd
sbb
sahf
inc
adc
mov
pop
sub
ss
dec
test
jnp
aam
xchg
inc
dec
jo
jo
arpl
imul
jae
fmulp
out
add
pushf
add
mov
imul
mov
test
aad
negl
mov
aad
mov
and
sbbb
push
jl
cmp
aad
test
mov
hlt
dec
out
jnp
push
and
ss
mov
xchg
mul
mov
hlt
enter
inc
jmp
dec
pop
test
dec
test
jle
pop
shlb
add
sbb
jne
shrl
jo
imul
mov
inc
mov
adc
sarb
lret
push
dec
xor
dec
rol
cmpsb
gs
add
in
addr16
lcall
stc
call
jl
mov
xor
ret
add
and
add
insb
sub
ror
clc
ret
mov
and
pop
mov
aaa
sbb
lret
fidivrl
pop
mov
aas
inc
mov
cmc
hlt
add
mov
stc
pop
xchg
jno
int
dec
lods
xchg
xor
or
dec
std
shlb
movsb
jno
test
or
dec
add
jmp
cmpsb
or
test
sbb
mov
jns
mov
cmp
int
inc
mov
add
rep
jae
adc
subl
pop
xor
and
sti
and
popf
push
cmpb
mov
mov
outsl
or
jge
jo
test
jge
jnp
sarl
mov
mov
sub
ja
clc
test
jb
sbb
mov
mov
les
lds
mov
dec
mov
add
mov
mov
adc
outsb
add
enter
out
mov
dec
sbb
pop
inc
ror
dec
or
pop
xor
inc
subb
add
lea
or
rolb
mov
mov
rcll
outsb
and
push
xchg
mov
sub
cld
pop
adc
mov
aaa
mov
test
dec
loope
push
cmc
pop
pop
inc
pop
jae
inc
sbb
test
ds
sahf
pop
mov
roll
mov
xchg
lods
push
out
dec
decl
sub
jne
inc
test
push
xchg
pop
pop
mov
jns
add
jl
in
inc
mull
call
call
xor
pop
ds
and
pop
arpl
cmp
out
call
rolb
fs
inc
enter
stos
inc
sahf
jecxz
sbb
mov
mov
mov
mov
fld
test
push
divl
loop
icebp
mov
inc
sbb
scas
loopne
rcl
mov
or
mov
bound
inc
mov
int3
mov
shlb
cmpsl
subl
sbb
aam
repz
pop
and
xor
jns
mov
gs
hlt
xor
int
movsb
xor
ja
sbb
orl
gs
outsb
shl
jle
jbe
hlt
jg
shll
or
inc
xor
mov
ljmp
push
dec
jp
movsb
aas
js
jne
enter
loope
pop
ja
mov
orb
sbb
mov
arpl
jle
jb
das
out
jae
sbb
outsl
jge
xor
in
loopne
es
ss
popf
divb
stos
and
out
cli
inc
push
leave
in
rcrb
or
popf
daa
or
fxch
push
add
jl
rol
ret
test
aad
fldenv
or
inc
mov
sub
or
enter
jmp
pop
jae
xor
add
pop
xor
pop
loope
adc
jns
dec
jnp
sbb
or
or
pop
mov
enter
ret
inc
daa
repz
xlat
push
lea
outsl
mov
in
xchg
xor
gs
lods
pop
ljmp
mov
aas
test
mov
pop
mov
fldenv
aas
xchg
or
aad
jg
popf
dec
cmp
mov
push
test
loope
jo
out
sarl
mov
ffreep
addr16
jecxz
icebp
xchg
and
mov
mov
mov
outsb
pop
fldcw
movsl
shl
push
jae
xchg
xor
stos
aaa
sub
jne
icebp
adc
ja
fstps
lods
sbb
sub
sub
hlt
insb
push
jl
jae
jne
jl
test
mov
cmp
jnp
sub
and
iret
sub
jb
xchg
test
add
loopne
mov
das
mov
ss
jg
jp
call
inc
xor
rclb
xchg
mov
push
sub
sbb
mov
jl
mov
mov
xchg
scas
mov
test
sti
xchg
sub
jns
inc
pop
shrl
jb
mov
push
sbb
or
aad
xor
jo
lret
and
add
popf
enter
sbb
adc
cmp
mov
xchg
dec
or
test
inc
pop
adc
pop
enter
enter
test
imul
test
cmovno
add
inc
mov
cmpsl
add
fcomps
and
mov
loopne
icebp
imul
or
outsb
fsubrl
adc
sbb
jl
pop
ret
xchg
mov
xor
insb
dec
sub
mov
jb
hlt
inc
pop
notl
dec
enter
push
push
bound
jge
jae
sahf
mov
sub
add
scas
add
test
test
mov
or
scas
lret
cmp
popf
or
scas
mov
ds
insl
test
push
shlb
call
jp
mov
lahf
mov
fs
add
sub
jp
or
inc
movsl
xchg
inc
fadds
aas
push
ret
add
jbe
xchg
aaa
add
enter
inc
ljmp
inc
push
xor
fwait
mov
arpl
shlb
push
aaa
int3
dec
xchg
cmp
popf
fdivs
dec
cs
adc
fst
iret
aaa
icebp
sbb
cmp
mov
sbbl
push
ds
test
add
mov
xchg
xchg
xor
lcall
test
mov
sbb
push
jo
loopne
mov
fxch
addb
mov
or
jno
test
sub
sub
add
sbb
ret
out
mov
out
mov
sub
add
jmp
aam
mov
inc
arpl
add
or
stos
sbb
xor
cwtl
ror
pop
inc
daa
dec
add
mov
es
loope
pushf
or
jno
lahf
repz
sbb
cmp
mov
push
test
xchg
push
insl
inc
and
jne
push
push
es
push
inc
shr
pop
pop
mov
imul
in
xor
cmp
and
in
inc
lods
mov
test
ja
mov
lds
mov
fsubl
out
andb
sbb
or
push
jb
cwtl
push
and
xlat
cmpsl
xchg
ja
nop
cmp
pop
pop
hlt
lcall
xchg
or
popf
ret
iret
icebp
mov
ss
push
shll
pushf
mov
push
adc
lret
pop
jg
xchg
cli
ret
xchg
mov
mov
shr
in
sub
hlt
leave
lret
clc
mov
outsb
sub
pop
dec
sbb
push
mov
lock
push
mov
pop
rorb
in
aas
lret
add
sbb
test
in
mov
cmp
cld
fisubs
add
push
pop
aam
lcall
lods
and
ret
in
adcl
xor
gs
lret
xchg
push
jl
jnp
mov
jno
sub
or
xchg
inc
testl
test
out
test
jge
test
jecxz
adc
xor
notb
mov
push
repnz
jp
in
dec
aad
mov
push
sub
test
xchg
and
mov
jmp
daa
loope
sbb
fwait
jp
sbb
sbb
dec
mov
mov
pop
xchg
sbb
sub
test
dec
dec
and
jo
jmp
dec
pop
test
mov
xor
sub
loop
xor
dec
frstor
pushl
dec
dec
push
push
lea
scas
mov
aas
data16
sbb
and
cmp
jecxz
jge
add
out
mov
sub
push
rorb
int
pop
pop
inc
mov
mov
adc
jae
sbb
jno
inc
mov
cwtl
gs
inc
movl
dec
xchg
pop
sub
or
test
lds
sbb
int
fcomps
lret
scas
sub
sub
adc
icebp
mov
add
mov
add
inc
jg
pop
mov
pop
sub
dec
dec
into
jnp
out
xor
push
nop
add
shll
push
xor
sti
jno
jecxz
loope
xchg
push
push
fidivl
sbb
stc
sbb
inc
sbb
pop
inc
insb
subl
stos
jno
mov
call
shlb
test
push
int
scas
or
ret
sbb
leave
hlt
jnp
ss
inc
stc
inc
sub
sub
xor
call
popf
inc
jl
push
lret
aas
imul
dec
cmp
adc
or
in
jl
cld
insl
cmp
sbb
icebp
test
test
mov
rclb
in
pop
adc
js
lds
cmp
and
ljmp
jecxz
int3
aad
cmp
fs
and
stos
mov
jb
mov
pop
mov
cmp
add
lods
or
jbe
inc
insl
mov
push
stc
cmpxchg
imul
ss
mov
pusha
icebp
add
add
mov
mov
jb
sub
fldcw
shll
jb
cwtl
in
sbb
push
add
enter
xor
mov
insl
nop
mov
sub
mov
and
call
pop
inc
aam
inc
mov
ljmp
pop
int
mov
mov
sbb
fsts
loope
push
push
adcl
xchg
test
sbbb
mov
adc
xor
mov
jl
push
push
mov
test
insl
jmp
ret
js
sub
or
inc
pop
loop
test
jge
nop
mov
ret
leave
leave
and
into
add
andb
pop
jbe
cmp
sti
out
repz
lcall
dec
lahf
cmp
mov
xchg
mov
mov
sbb
cmp
cltd
xchg
shl
es
and
add
push
testl
cld
jno
in
mov
mov
fadds
lds
mov
cmp
inc
push
mov
and
xor
inc
dec
mov
inc
ror
mov
aam
andb
cmp
hlt
lcall
jg
stos
or
sub
adcl
dec
ret
fs
cmp
lret
mov
inc
in
addb
push
fnstenv
popa
test
js
in
in
divb
xchg
jns
mov
sarl
fidivrl
mov
jmp
mov
sub
dec
fisubrl
jp
add
fildl
jne
js
enter
popa
inc
pop
sub
inc
imul
je
cmc
push
mov
jle
sub
or
scas
dec
push
fnstenv
mov
scas
arpl
enter
stos
stos
icebp
jge
lods
or
jns
and
imul
mov
and
sub
lds
pop
jae
jle
repnz
pop
ds
sbb
pop
xchg
dec
mov
int
cmp
jge
inc
fstps
mov
cmc
iret
or
inc
mov
xor
iret
cmp
add
roll
test
xor
push
inc
mov
jmp
push
adc
scas
inc
lahf
or
imul
mov
mov
cmp
pmaxub
pop
mov
xchg
ret
aam
xchg
aam
dec
mov
dec
pop
pop
jb
lcall
push
mov
cltd
jp
std
sbb
push
in
mov
mov
jnp
jle
ljmp
mov
cmp
mov
dec
pop
adc
cmp
lret
xor
mov
outsl
mov
test
push
ds
inc
ja
andb
arpl
cmp
pop
imul
lods
mov
cmp
xor
push
fisttpll
mov
jle
add
or
jb
pop
lahf
cmp
adc
dec
jmp
fnstcw
mov
xor
xorb
or
push
ds
push
fldenv
or
addl
arpl
out
push
push
stos
ljmp
xchg
outsl
jno
sbb
lods
pop
pop
fcoms
std
nop
add
fs
pop
pop
mov
jne
dec
mov
push
jo
imul
pop
sbb
fsts
arpl
adc
dec
mov
cmp
add
lcall
je
mov
sub
mov
cmpsb
cltd
adc
jae
popa
cmp
jne
jle
shrb
mov
ret
xchg
xchg
out
mov
fidivrs
cwtl
xchg
jo
ud2
add
pop
jno
rcll
xorl
sub
imul
lods
mov
incb
lods
mov
push
push
mov
loope
jae
xor
mov
or
dec
mov
xor
jae
mov
pop
aam
pop
shl
mov
xor
push
dec
dec
cmp
sub
repz
aad
test
add
jbe
scas
stos
mov
aaa
xor
xchg
lods
pop
and
mov
mov
in
js
orl
and
xor
mov
xchg
jle
ljmp
dec
adc
cs
adc
popf
lret
cmc
pop
aad
movsb
mov
and
pmuludq
imul
les
arpl
lods
pop
push
jo
xlat
mov
mov
test
ja
loop
aaa
outsl
gs
icebp
test
mov
das
rol
negl
adc
mov
jno
push
mov
mov
rol
mov
pop
shlb
sub
icebp
adc
sbb
mov
les
cmpsl
out
xor
xor
out
leave
sub
xchg
fnstenv
mov
lds
mov
leave
imul
add
or
aaa
inc
xor
mov
xchg
cmp
lock
jb
outsb
sub
fst
roll
xorb
xchg
je
cmp
or
push
aad
leave
add
les
mov
push
xor
xor
cmova
jns
clc
cmc
xor
scas
dec
pushl
inc
push
mov
ret
repz
es
sub
cltd
loope
icebp
imul
cld
jmp
and
dec
shl
ljmp
mov
psadbw
aad
test
sbb
mov
out
jb
or
jae
push
popf
cmp
test
daa
outsl
dec
xchg
loope
xor
add
mov
orb
mov
or
xor
and
xchg
loope
mov
scas
sbb
adc
mov
lods
sbb
aas
mov
cltd
bswap
or
aad
popf
leave
sbb
les
pop
mov
es
and
push
jg
mov
std
inc
mul
xchg
cmc
shlb
stos
into
cmp
mov
sbb
dec
icebp
jns
jbe
add
loope
repz
mov
enter
xchg
cmp
cmp
push
dec
add
out
test
push
je
xchg
xchg
les
es
mov
push
push
insb
pop
xorb
mov
mov
pop
add
ret
xchg
in
mov
jle
aaa
jno
and
and
xor
insl
mov
mov
rorb
jbe
stos
push
cmp
xchg
cltd
mov
sub
lahf
mov
lea
mov
mov
pop
outsb
call
push
xchg
fists
cmp
cmp
sub
and
fwait
xchg
mov
mov
mov
lock
push
xchg
xor
inc
lods
jb
jmp
dec
pop
outsl
lods
push
loopne
roll
leave
mov
fisubrs
push
mov
les
push
or
mov
dec
sub
mov
mov
test
icebp
bound
inc
lahf
dec
xor
cmp
mov
add
mov
and
mov
jecxz
outsb
out
and
add
xor
cltd
mov
mov
xchg
push
in
sub
jecxz
cmp
lar
mov
sahf
inc
cmpsb
push
mov
addr16
jl
mov
push
jb
cmp
leave
add
xchg
imul
mov
fistl
pop
push
xlat
das
mov
pop
shrl
mov
rol
mov
hlt
lret
shlb
pushl
mov
cmpsb
sbb
xor
jg
mov
xor
inc
pop
into
ljmp
and
sbb
sbb
and
mov
sub
roll
jns
ret
xor
out
jo,pt
lea
xchg
frstor
ficomps
inc
mov
and
gs
outsb
sub
cmpsb
fadd
mov
mov
lods
sub
pop
jbe
outsl
enter
add
ret
shrl
mov
xor
xor
mov
adc
inc
pop
sbb
outsb
pop
pop
inc
push
rol
dec
and
xor
xor
xor
scas
mov
pop
inc
mov
xchg
push
mov
popf
out
sbb
mov
or
mov
xor
or
add
mov
mov
out
shll
inc
scas
stos
mov
inc
addl
or
jmp
test
rcll
mov
cmp
scas
icebp
dec
hlt
xor
mov
aas
je
xor
out
mov
iret
mov
je
jae
enter
into
mov
testl
mov
push
fldt
dec
enter
xor
iret
sub
mov
pusha
orl
mov
xor
adc
popf
ret
jbe
aad
sbb
push
pop
pop
iret
sub
aad
cmp
leave
loope
imul
push
mov
aas
movsl
repnz
xlat
sub
loope
inc
jno
iret
or
pop
rclb
sub
mov
lahf
dec
dec
subb
mov
pop
and
popa
out
mov
cs
lds
xchg
mov
sub
jmp
leave
inc
jae
hlt
xchg
sub
in
mov
pop
dec
xor
pop
push
mov
push
jbe
sub
cmc
xor
roll
int3
mov
fucom
mov
out
mov
jae
inc
mov
xchg
rcrl
fistps
shrl
into
leave
sbb
fldcw
mov
mov
cmp
mov
cltd
aaa
mov
mov
enter
cwtl
iret
ret
xor
test
clc
mov
cmp
test
and
aad
cmp
ret
stos
push
adc
jge
stc
shrl
mov
and
xchg
in
mov
loope
movsl
mov
pop
push
in
imul
aam
xor
leavew
mov
ret
mov
les
and
iret
lods
or
adc
cmc
xchg
test
lock
and
inc
mov
cmpsb
xor
jb
mov
fiaddl
inc
cmc
pusha
fwait
push
mov
mov
xor
outsl
movsl
ja
mov
xchg
mov
sbb
dec
sti
lods
dec
mov
loope
arpl
and
leave
leave
jg
push
mov
or
rolb
fisttps
loop
cltd
and
mov
pop
mov
jb
lret
add
inc
mov
xchg
ljmp
push
adc
mov
jns
cmp
sar
std
inc
mov
test
loopne
inc
mov
aam
mov
xchg
jno
or
mov
inc
ret
mov
pop
loope
xchg
or
lods
mov
clc
sbb
add
fbstp
xchg
sub
cmp
inc
jl
rcll
mov
fisttpll
mov
bound
jmp
cwtl
add
inc
or
pop
pop
mov
xchg
fnstenv
fldt
dec
inc
popa
out
cmp
pop
mov
adc
pop
push
ret
xor
shl
xchg
ret
jns
mov
nop
sahf
cmpl
enter
jmp
sbb
shll
push
leave
lds
iret
mov
add
inc
mov
jmp
mov
sahf
push
loop
cli
lea
lret
inc
or
lods
lock
or
inc
out
ret
lret
mov
ret
xchg
sub
add
jbe
lret
mov
enter
ret
rol
arpl
pushf
out
shrb
sahf
ljmp
shll
xor
hlt
xor
jnp
xor
adc
and
add
outsl
adcb
xchg
in
mov
and
into
in
mov
aad
mov
mov
mov
dec
sbb
loopne
test
mov
cmpb
aam
mov
mov
cmp
inc
js
shrl
and
push
xor
xchg
rcll
jmp
xor
push
inc
pop
fimuls
lcall
or
les
jno
leave
mov
cwtl
std
adc
divb
and
adc
inc
dec
mov
lahf
xor
jbe
mov
jne
add
dec
inc
mov
and
pop
test
jo
ret
adc
sahf
loope
xlat
out
aad
jae
das
xor
popf
mov
loope
mov
aaa
sub
aad
out
xor
add
imul
xchg
pop
out
mov
in
es
mov
in
and
cmp
jb
sbb
cmp
mov
adc
jno
ret
or
push
in
test
adc
mov
test
xchg
xor
lcall
jne
xor
mov
jbe,pt
test
mov
movsl
rorl
and
mov
cmp
mov
add
jbe
cmp
sub
and
inc
data16
cltd
push
mov
xchg
jmp
scas
cmp
gs
sbb
jns
add
mov
cmp
or
fdivrl
mov
hlt
push
loopne
adc
repz
les
aad
xchg
out
hlt
lahf
xor
subl
in
dec
and
bound
cmc
lock
and
aam
xorl
mov
out
lahf
jns
mov
mov
out
clc
dec
cs
test
push
or
dec
jnp
mov
or
inc
in
add
or
and
or
xor
push
mov
mov
adc
add
in
jno
ds
nop
leave
pop
mov
lret
lock
dec
roll
nop
mov
stc
mov
cltd
push
sub
divl
mov
jo
clc
adc
pop
test
out
ret
imul
push
iret
ret
xchg
fstpt
faddl
int3
aaa
rol
bound
and
mov
icebp
imul
adc
mov
aad
cmp
mov
or
mov
popf
stc
jge
jno
mov
scas
or
les
mov
cmpsb
or
imul
adc
or
test
lock
call
mov
push
popf
mov
mov
sub
pop
sbb
inc
leave
insb
les
icebp
mov
and
xor
add
add
or
cmp
mov
or
int3
into
insb
push
xchg
jns
mov
pop
aad
mov
mov
or
sar
pop
mov
test
push
sbb
repnz
mov
roll
or
push
mov
sub
sbb
rcll
stos
call
add
jle
into
mov
jecxz
in
push
icebp
jmp
xor
mov
jno
loope
ss
shr
out
mov
clc
and
and
imul
std
sti
mov
iret
arpl
jb
dec
pushl
hlt
or
cmp
loopne
sti
pop
cli
outsb
iret
out
jecxz
pcmpeqb
push
loop
inc
out
scas
xchg
cli
stos
mov
out
iret
enter
aam
inc
inc
mov
cli
jo
mov
inc
xchg
add
dec
jg
cmpsb
sbb
inc
pop
sbb
movd
aas
loopne
inc
lods
push
clc
jecxz
xchg
xchg
test
in
sti
sub
bound
rcrb
fdivr
clc
add
xor
iret
mov
rorl
loopne
pop
mov
std
js
mov
daa
iret
into
jmp
syscall
dec
mov
incb
push
jge
sbb
cmpsb
loope
loopne
mov
frstor
lcall
lock
sbb
shl
and
and
fstl
clc
pop
dec
fdivr
cmp
push
inc
ja
stc
std
cmp
mov
xchg
and
decl
pop
int
sbb
or
out
bound
loopne
xchg
test
jecxz
loop
jge
inc
xchg
fdivr
out
or
clc
push
sti
daa
mov
stc
pop
clc
push
ljmp
xchg
fmul
std
in
or
ljmpw
inc
inc
inc
pop
roll
daa
aad
xchg
pop
insb
xor
dec
loop
mov
leave
in
icebp
and
in
xorl
imul
std
mov
mov
stc
popa
loope
loopne
xchg
xlat
aad
xchg
and
rcrb
push
mov
out
sar
xor
iret
sti
pop
mov
and
cmp
imul
shll
push
popf
jo
loopne
mov
mov
loop
in
stos
lock
mov
psubb
sti
cli
and
pop
xor
pop
jnp
jmp
cmp
mull
loopne
stos
hlt
push
bsr
lock
dec
in
inc
add
sbb
out
sti
xchg
mov
stc
leave
clc
repnz
add
popa
sti
cld
xchg
dec
test
std
jle
into
push
lcall
sub
dec
mov
cmc
mov
add
daa
loope
dec
add
loop
pop
mov
xchg
mov
in
out
stc
mov
sti
lret
cli
pop
idivb
std
mov
and
test
loope
xchg
mov
and
psrad
or
jne
add
es
mov
push
out
mov
adc
cmp
and
out
sti
and
mov
repnz
std
subb
mov
and
xchg
pop
and
add
inc
loope
loopne
in
cwtl
lods
repnz
jecxz
iret
adc
jge
int3
in
inc
xor
in
xchg
in
clc
out
mov
out
stc
hlt
inc
push
push
inc
arpl
dec
and
and
and
xlat
cld
fnstenv
mov
fstl
mov
adc
push
in
mov
and
rcll
inc
notl
bound
addb
jb
jmp
sti
inc
xchg
cmc
clc
cli
pop
mov
std
and
mov
pop
imul
xchg
xor
dec
loop
in
sbb
enter
xor
sub
dec
mov
mov
loop
xor
popa
or
adcb
lret
cld
dec
jmp
push
cwtl
sbb
int3
loopne
xchg
or
jecxz
sti
xchg
mov
pop
push
push
xlat
int
out
bound
iret
adc
mov
cmp
insl
sti
mov
mov
std
inc
std
shlb
adc
daa
loopne
ss
shl
aam
or
dec
daa
jae
sahf
out
out
enter
icebp
fs
sar
mov
cwtl
xchg
cld
and
lods
mov
lcall
cmp
adc
pop
loope
inc
mov
xchg
and
mov
loop
in
adc
clc
out
sti
mov
repnz
sub
sti
test
ret
clc
cli
sbb
cs
inc
enter
rcll
cld
adc
jmp
add
add
subl
xchg
sub
jae
fsub
and
call
adc
in
in
and
fcomps
lahf
sti
dec
cli
imul
dec
subb
mov
and
pop
pop
iret
ljmp
shrb
xor
and
or
and
enter
lock
inc
sbb
out
xchg
jle
scas
lods
into
clc
stc
cmp
dec
clc
pop
push
cmpsl
pop
rcr
cli
icebp
push
inc
inc
clc
incl
cmp
aad
pop
ss
pop
pop
icebp
add
mov
push
xchg
out
push
mov
in
out
pushf
fsubrp
push
pop
jo
out
stc
add
sti
jl
enter
adc
xchg
cmp
jb
inc
into
xor
inc
fisttpll
sbb
shl
sbb
and
jb
push
iret
mov
cmc
stc
xchg
inc
in
clc
sub
sti
imul
cld
adc
loope
jle
rorl
in
scas
adc
loopne
mov
fst
loop
pop
scas
mov
in
in
out
dec
out
pop
jg
inc
sti
push
rcll
std
and
and
jmp
jecxz
add
push
xorl
sub
add
sub
in
sti
jne
out
cmp
iret
out
cmp
mov
sti
add
add
mov
cmpsl
lret
repz
add
adc
ss
lcall
decb
cmp
mov
imul
pop
dec
pop
jns
mov
cmp
pushf
xor
cmp
stc
sar
clc
adc
ja
dec
sti
mov
je
fscale
jnp
test
ds
rcr
jecxz
mov
icebp
adc
mov
xor
jecxz
addr16
sti
imul
enter
push
jnp
mov
dec
push
ja
and
pop
xchg
push
pop
xchg
mov
pushl
sar
mov
pop
adc
xchg
fucom
je
lods
sahf
xchg
icebp
mov
stc
ret
pop
clc
enter
icebp
add
and
gs
or
jecxz
inc
movsb
push
cmp
jo
xchg
test
in
mov
mov
shl
xchg
ljmp
sti
scas
adc
inc
iret
cmp
mov
movsb
xor
mov
jmp
xchg
dec
test
mov
loopew
rcrl
in
add
cmpsb
lods
rcl
in
jmp
out
mov
push
or
adc
std
loopne
inc
adc
mov
shr
loopne
jecxz
jl
sub
and
data16
adcb
out
xchg
xor
mov
out
rclb
clc
mov
jmp
cld
sbb
adc
dec
shrl
xor
lcall
jb
faddl
push
sub
jno
in
xchg
movsb
fsubp
pop
out
stc
andnps
xor
dec
sti
add
std
jns
jnp
fnsave
shll
add
push
jno
into
jecxz
popa
out
mov
or
fwait
clc
sti
dec
cli
movsb
iret
jmp
imul
mov
ficoml
stc
cmc
clc
ss
sub
sar
inc
jnp
test
ljmp
xor
data16
movsl
inc
arpl
jo
dec
loopne
jecxz
mov
mov
sub
pop
pop
test
jns
xchg
cmp
sti
iret
cli
or
std
scas
inc
dec
cld
sub
inc
test
fisttpl
jbe
xor
cltd
jno
loop
clc
in
out
insb
pop
push
ja
es
mov
stc
fldl
clc
xchg
inc
mov
outsb
cli
inc
clc
std
jbe
inc
pop
add
xchg
orb
or
stos
or
shrl
mov
and
out
pop
and
and
clc
es
inc
aas
icebp
sti
jg
out
cli
out
movsl
jg
jmp
lret
call
pop
push
xchg
in
aaa
inc
add
cmp
xchg
xor
fucomp
in
pop
scas
mov
in
rclb
out
mov
mov
xchg
clc
jne
leave
xchg
shr
std
xrelease
sarl
jg
mov
pop
xchg
loopne
sti
iretw
int3
jecxz
jo
loop
inc
fildl
xor
pop
out
shr
out
mov
and
int3
icebp
iret
or
daa
lock
sub
and
insl
push
pop
leave
xchg
or
inc
loope
loopne
mov
jecxz
push
push
int
mov
xor
push
pop
jmp
or
mov
xchg
stos
andb
mov
std
xor
cmp
inc
xchg
jno
mul
lcall
cmp
lret
loope
xchg
pop
mov
addl
and
push
cmp
cmp
lock
fwait
add
inc
test
idiv
and
sti
icebp
sti
mov
sar
push
repnz
gs
and
pop
icebp
inc
shrl
sbb
lahf
mov
iret
mov
hlt
jecxz
loop
xchg
insl
push
aas
mov
in
xor
stc
rclb
cmpsb
mov
lret
xor
icebp
arpl
and
sub
test
loope
add
outsl
ret
xor
inc
adc
shl
leave
in
mov
pop
and
jmp
stos
push
mov
xchg
outsb
xor
sti
cmc
inc
jmp
pop
xchg
mov
dec
clc
cld
pop
iret
hlt
ljmp
pop
in
icebp
mov
cmovbe
mov
push
das
call
loop
out
push
pop
jle
aas
or
sbb
and
push
enter
xor
xor
dec
cmpl
sbb
cli
scas
enter
xchg
sub
decb
xchg
xlat
lods
push
cmc
or
clc
loope
iret
sbb
das
cmove
jecxz
fwait
adc
sbb
in
ss
or
pop
sub
out
inc
mov
push
jno
shlb
xchg
sub
iret
std
data16
dec
and
adc
ffree
loopne
xor
loop
push
out
mov
cmp
in
popa
mov
xchg
sub
shl
jle
sbb
pop
jno
arpl
and
sbb
jecxz
out
lds
jns
dec
pop
lods
loope
cmp
mov
lock
pop
test
inc
jecxz
aam
test
popf
pop
insb
test
mov
stc
dec
clc
pop
sti
cli
aam
std
sub
std
push
out
shrl
cmc
mov
icebp
dec
loope
loopne
xchg
rolb
fsubl
in
aad
popa
mov
sub
clc
pop
sti
and
sub
mov
jmp
outsb
sbb
cmp
loope
inc
sbb
sbb
loop
inc
add
test
iret
cmp
inc
pcmpgtb
dec
mov
sbb
dec
mov
inc
sti
sbb
mov
and
jl
test
jmp
xor
dec
stos
inc
pop
push
cmp
sub
decb
mov
int
cwtl
ljmp
push
mov
inc
and
and
lods
pop
adc
mov
sbbl
sub
jecxz
fdivrl
mov
push
andl
adc
jl
dec
add
iret
testl
aam
jne
popa
stos
jge
mov
ss
jb
lods
hlt
mov
movsl
or
push
test
mov
and
jno
lds
stos
or
ss
mov
dec
in
in
add
pop
inc
testl
das
jmp
and
and
mov
lcall
mov
loope
mov
mov
pop
inc
out
lahf
push
psrad
mov
iret
dec
jp
sar
xor
mov
clc
pop
sti
aaa
cli
std
movsl
mov
cld
mov
stos
sbb
cmp
or
push
mov
clc
add
mov
mov
cmp
push
or
adc
mov
or
mov
cmp
pop
cli
pusha
repz
sbb
daa
mov
adc
cmp
mov
cltd
pop
or
pop
dec
add
jecxz
lock
sub
mov
loop
in
test
push
cltd
clc
push
sti
mov
jae
loop
pmuludq
sti
xor
cmp
arpl
adc
std
mov
and
stos
rorb
jmp
add
sbb
iret
fistpll
inc
cmp
cwtl
jg
frstor
ret
pop
push
jg
inc
or
jae
fucom
cli
push
ss
adc
jne
xlat
sub
repnz
in
pop
push
stc
roll
xchg
fprem
loopne
aam
adc
stc
rcl
xor
repz
stc
pop
jmp
imul
in
ss
out
rcr
out
stc
adc
popf
cli
int3
loopne
pop
jns
test
rol
loop
inc
cmp
mov
lret
out
pop
inc
enter
add
popa
cmc
xchg
xorb
add
cld
and
icebp
fisttps
xchg
iret
jmp
repz
sub
test
scas
ret
out
jno
shl
lcall
repnz
jnp
sbbl
frstor
push
shlb
cmpb
es
cld
mov
test
loop
xor
popa
rcrl
jge
dec
xchg
je
stc
addr16
scas
ret
mov
xchg
testb
das
add
mov
sar
cmc
shl
std
dec
sub
or
lahf
clc
sbb
jge
pushf
dec
gs
call
loope
fwait
imul
or
icebp
sti
sahf
mov
std
in
cld
aaa
add
and
pop
xor
data16
loopne
jecxz
adc
sub
das
shl
pop
int
pop
inc
aaa
repnz
lret
stc
pop
inc
mov
sti
sar
mov
sub
cwtl
adc
std
pop
mov
cld
mov
inc
testl
xor
loope
sti
loopne
xchg
push
test
xor
ljmp
out
stc
push
clc
shlb
add
and
sti
out
clc
cli
aas
sti
jl
lcall
adc
repz
cmp
push
mov
loopne
rcrb
dec
pop
dec
xchg
jae
in
cltd
mov
xchg
xor
sbb
out
out
jb
repnz
repz
jmp
mov
loope
call
idivl
cld
loopne
rcrb
loop
in
in
jg
mov
aam
outsl
stos
push
jg
push
lock
std
mov
rcrl
cli
or
ficompl
and
popa
pop
xchg
or
loope
iret
fsubp
cli
dec
xchg
ret
cmp
insb
lock
mov
adc
or
stc
mov
and
psraw
std
and
arpl
or
int
lock
dec
mov
jmp
ffreep
lock
sub
pop
enter
sbb
iret
xor
dec
stc
mov
cmp
rorl
icebp
ret
pusha
cld
ret
in
lcall
push
jp
jae
loopne
or
shl
mov
daa
cli
mov
dec
out
inc
mov
sub
stc
sbb
addr16
add
push
adc
xor
and
scas
ud1
sub
or
scas
push
subl
jno
ss
inc
cltd
cli
jb
push
push
xchg
iret
test
mov
clc
pusha
jns
clc
cli
mov
sbb
cmp
mov
loopne
iret
pop
ss
shll
in
in
sub
mov
add
xlat
cld
out
stc
popa
sbb
or
push
and
mov
cld
hlt
nopl
jo
mov
xchg
in
faddl
ret
jae
inc
mov
sbb
xchg
cmpxchg
cs
pop
cli
adc
xchg
mov
cmc
enter
sbb
fistps
mov
in
xchg
xlat
out
jae
enter
jnp
data16
icebp
sti
add
xor
jo
ffreep
xor
rorl
cmc
or
dec
loopne
jecxz
aaa
mov
sbb
popf
inc
xor
push
sub
das
dec
cmp
addl
inc
xchg
test
sub
lret
mov
cld
or
int
loope
or
xorl
loopne
rol
jecxz
mov
loop
cmovs
jno
in
in
pop
mov
cmpsb
inc
roll
aam
repnz
xor
adc
push
clc
sti
test
cmp
cld
inc
inc
mov
sub
xor
fcoms
mov
outsb
in
out
outsl
divb
cmp
mov
and
add
inc
or
mov
decl
mull
pop
iret
dec
xor
mov
push
add
add
jne
dec
push
xor
adc
adc
sti
and
ret
mov
std
xor
inc
pop
addr16
mov
fiadds
icebp
jae
enter
xcrypt-ecb
cmpsl
iret
movl
cmp
repnz
out
inc
out
push
xchg
stc
xor
push
inc
xor
clc
lock
and
jmp
pushf
and
and
fmulp
js
mov
loope
ret
inc
pop
cmp
js
lods
loopne
ret
sub
test
les
or
and
jnp
adc
adc
inc
inc
and
das
jmp
cltd
push
repz
cmc
mov
push
dec
lea
mov
adc
out
cmp
out
arpl
jle
mov
push
xor
daa
adc
roll
aas
iret
ds
dec
add
xor
push
in
cmp
int
and
les
imul
mov
in
popa
test
and
scas
xchg
mov
cmpsl
xor
mov
or
int3
punpckldq
sbb
and
test
xlat
mov
bt
and
test
add
pusha
mov
lea
jmp
push
dec
dec
dec
dec
inc
push
cs
insb
add
dec
push
cmc
mov
pop
clc
mov
into
das
inc
popa
xchg
shll
xchg
lcall
sbb
sbb
cli
jle
inc
push
inc
and
scas
addr16
pop
xchg
lock
aaa
pop
xchg
cmpsb
fisttpll
into
cmp
dec
std
jg
hlt
inc
jmp
mov
xor
stos
and
inc
add
int3
je
out
fidivrl
fimull
cmpsb
pop
scas
dec
or
mov
or
adc
lea
add
test
add
pushl
pusha
pushf
push
lea
jmp
pushf
jmp
clc
jmp
test
adc
cmc
mov
or
push
out
inc
sub
rep
lret
ret
pop
cmpsl
or
push
cmpl
outsl
fdiv
xacquire
mov
gs
xor
movsb
bnd
xor
cmpb
jg
xor
mov
cmpsl
inc
add
in
fnstsw
test
ret
dec
add
repnz
test
jmp
add
orb
push
xchg
adc
inc
add
cs
mov
cmp
push
xchg
fwait
insl
cld
loopne
mov
mov
xchg
adc
idiv
lods
pop
jb
fsubr
adcl
cli
dec
inc
ret
cmpsb
jp
lock
mov
sub
push
inc
pushf
test
add
lea
cmp
rcl
call
sbb
mov
cmp
cmp
dec
push
dec
jo
addb
mov
orb
xorl
ljmp
xorb
in
lock
dec
dec
jle
xor
in
pop
cmpsb
xchg
xor
idiv
mov
scas
jl
loope
add
hlt
jae
jmp
mov
cwtl
cmp
pop
andl
js
into
xor
std
dec
cwtl
in
mov
lahf
inc
inc
push
inc
push
dec
xor
cs
insb
add
xor
mov
dec
jmp
push
outsl
loopne
add
repnz
inc
sub
pop
xor
mov
lret
push
jmp
push
fdivr
mov
int
sbb
adc
imul
popf
mov
adc
sub
leave
fcompl
cwtl
pop
loopne
mov
pop
xor
jg
rcrb
imul
out
outsb
and
xor
pop
fidivrl
cmc
mov
push
or
shl
mov
mov
inc
in
fwait
xchg
je
mov
jb
repnz
dec
rcrb
jp
push
jmp
lds
iret
dec
cmc
mov
leave
ljmp
roll
mov
fcmovnb
push
mov
mov
shll
jle
cs
pop
xchg
mull
pop
arpl
aaa
hlt
jl
jae
stos
sub
and
jp
rcrb
or
lock
scas
lock
les
les
sub
sar
or
mov
push
out
mov
shll
sti
test
xchg
add
ret
aam
cmc
mov
push
aas
shl
and
movsl
push
idivl
sahf
dec
shll
sub
lods
cs
mov
jp
sahf
adc
popa
ret
test
push
dec
or
xchg
and
lods
sbb
ljmp
movsb
push
and
push
rcrl
je
in
out
ficomps
inc
sub
call
imul
mov
sub
out
add
test
pop
mov
jb
jmp
movzwl
lea
call
movsl
sbb
dec
cmc
mov
arpl
in
test
sbb
pop
mov
lahf
jp
cld
mov
je
out
aas
lods
jns
dec
fmull
push
int3
xchg
aad
push
ja
data16
psllw
pop
loop
lret
mov
out
cmp
xor
shlb
inc
rorl
mov
push
enter
jno
leave
movsb
popa
cmp
cmp
mov
mov
jnp
roll
inc
pushf
mov
sbb
insb
fldenv
dec
cmc
mov
sub
push
popl
sahf
adc
sub
jno
imul
fwait
or
inc
xchg
jecxz
inc
dec
mov
inc
xchg
push
into
mov
push
leave
div
movsb
test
mov
scas
push
bnd
lahf
lock
mov
jmp
jno
lcall
xor
xchg
and
add
mov
popf
hlt
fstps
xor
mov
and
jle
cmp
sub
cltd
in
xchg
adc
push
shl
mov
mov
sub
xor
sub
push
inc
add
enter
rclb
adc
je
add
sbb
mov
push
ss
idivb
mov
add
ja
cmp
pop
xorb
imul
cmc
mov
mov
insb
cmp
xor
xchg
cmp
push
mov
and
ret
mov
jmp
inc
sbb
pop
clc
jno
cmp
sahf
push
rorb
push
and
jno
outsl
shlb
pop
fidivrs
andl
sahf
xchg
jnp
push
divb
shll
sti
pop
pop
out
outsl
cmp
dec
mul
iret
nop
cmp
mov
rcrl
pop
ja
and
leave
dec
xchg
mov
les
add
ljmp
sub
repz
jb
shll
icebp
popf
shlb
ja
sbb
mov
push
scas
jp
mov
mov
xor
mov
imul
mov
add
sub
and
dec
mov
out
cmp
adc
and
xor
add
xchg
out
sub
rol
das
testb
leave
mov
mov
mov
pop
das
scas
jl,pn
jnp
jge
inc
push
jle
mov
cmc
adc
bound
clc
outsb
mov
out
xchg
ds
repz
sub
pushf
aaa
cwtl
dec
fsubr
ret
sbb
xor
maxps
outsb
mov
xor
pusha
test
call
xor
sbb
bts
mov
pusha
cmpb
pusha
jmp
clc
add
stc
movb
test
cmc
cmp
jmp
mov
mov
int3
sbb
bound
adc
inc
ja
jmp
adc
les
mov
pop
dec
lret
add
dec
add
pushf
pop
xor
jp
dec
je
cmpsl
enter
xchg
push
test
fs
xchg
mov
jb
mov
out
sbb
push
addl
pop
add
hlt
imul
mov
lock
xlat
inc
mov
cmc
mov
in
popf
ds
adcb
push
je
adc
pushf
clc
imul
shll
push
js
inc
call
jmp
fcomip
mov
divl
into
xchg
inc
nop
movsl
sbb
cmpsb
jg
int
imul
subl
les
data16
mov
push
sbb
cmp
lret
test
xchg
fs
xchg
shl
scas
and
adc
aad
inc
pop
int3
cmp
mov
add
dec
cmp
dec
out
sub
out
inc
fmuls
xor
faddl
add
neg
call
shlw
dec
cmc
mov
fwait
int3
lods
scas
iret
xor
xchg
test
lcall
pop
push
sub
lret
lret
in
testb
sti
mov
inc
sub
push
mov
jp
and
setg
popf
pop
int3
and
or
outsb
aas
pushl
ja
dec
pop
sbb
dec
pop
repnz
mov
adc
xchg
rcrb
test
mov
lods
inc
dec
cmp
add
test
dec
jge
pop
mov
and
sbb
add
pusha
lea
je
cmp
call
xor
roll
data16
jl
dec
shll
add
fwait
push
jg
lcall
jg
shl
push
gs
lds
mov
aas
inc
fisubl
inc
push
pop
push
pop
std
hlt
jae
adc
nop
pop
mov
into
jp
test
inc
push
call
mov
or
lods
leave
addb
lret
dec
int
cltd
test
mov
insb
cmpsl
mov
and
push
cmp
pop
decb
and
ret
jns
sub
adc
andl
jmp
push
cltd
int3
lahf
add
dec
cs
xchg
pop
out
into
dec
pushf
pop
jb
push
xchg
dec
cmc
mov
dec
popf
into
das
mov
fld
insb
cltd
push
pop
xlat
mov
popf
imul
notl
fsts
jno
dec
aam
in
and
mov
dec
fisttpll
or
cmp
jbe
mov
repnz
jo
xchg
or
ds
xchg
inc
xor
repz
fidivrl
jecxz
jmp
call
xchg
int3
mov
jo
neg
add
jnp,pt
inc
cmc
mov
mov
repz
movsl
jbe
push
popa
sub
inc
movsl
lods
or
mov
xchg
xor
mov
jo
xlat
pop
das
pop
seta
dec
sub
pop
scas
sarl
push
inc
nop
jb
or
sbb
imul
inc
xchg
push
andb
pop
nop
mov
or
stc
cmp
adc
movsb
repnz
and
mov
not
jmp
pop
pop
popf
inc
cmc
mov
lret
mov
pop
push
mov
loop
pop
push
mov
mov
mov
cs
push
add
es
push
mov
jo
outsb
fwait
mov
movsb
xchg
jae
gs
out
testl
daa
push
mov
pusha
aad
push
mov
aam
subb
cmpsb
loopne
inc
inc
clc
cltd
cmp
mov
xchg
imul
add
fists
or
mov
aaa
pop
popf
nop
add
loope
outsb
inc
hlt
iret
clc
neg
push
pushf
pushf
push
inc
test
bt
jmp
pop
lret
cmc
mov
fcmovu
sbb
sahf
iret
inc
adc
imul
xchg
stos
ds
inc
ret
xor
das
pop
enter
in
pop
mov
and
pop
adc
movsl
das
xor
pop
sbb
mov
test
jmp
loopne
pushf
cmpsl
lea
lods
xchg
push
adc
xlat
pop
sbb
gs
jle
jp
adc
stos
lea
jecxz
cltd
int3
or
nop
std
mov
xor
sub
mov
repnz
jne
mov
cltd
ja
mov
loopne
mov
xor
xchg
mov
int
mov
ss
cmpsl
or
and
call
mov
add
and
mov
sbb
enter
cmovo
js
mov
in
pop
mov
lods
xor
xchg
imul
mov
dec
jmp
cmc
shr
jle
xor
inc
push
ss
bound
and
adc
inc
cmc
mov
out
push
pop
fmull
dec
jmp
ljmp
hlt
add
stos
stos
mov
or
lock
mov
out
or
sbb
pop
pop
sub
rorl
out
roll
mov
cmp
push
mov
push
iret
ss
popf
jg
mov
mov
cltd
sbb
or
mov
imul
imul
push
xlat
ljmp
and
or
cmc
mov
sub
xor
movsb
loope
aam
xchg
insl
cmp
sub
fstpl
outsl
jo
add
in
and
add
jl
or
xchg
xchg
cmp
jns
dec
mov
xlat
fdivrl
ret
fs
je
dec
jg
jb
push
dec
out
pushf
mov
cli
imull
mov
xchg
mov
jecxz
frndint
mov
jns
and
js
cmc
mov
aam
xchg
pop
mov
lods
cmp
or
xchg
pop
psubd
push
fucomp
push
mov
dec
cmc
dec
sbb
imul
loop
hlt
mov
add
inc
pop
adc
add
ret
lods
insb
xchg
push
test
mov
jmp
addb
fdivrl
mov
add
fdivl
repz
fldenv
or
or
outsb
add
bnd
mov
adc
imul
les
cmp
ret
sti
jle
in
les
insl
pusha
adc
cwtl
popa
inc
cmc
mov
rclb
bound
mov
rcl
arpl
sbb
mov
scas
sbb
lahf
or
iret
jnp
sub
xchg
lds
repnz
test
lock
push
lahf
mov
shll
stos
jmp
cmp
loope
call
pop
out
pop
inc
dec
and
sbb
stos
int3
mov
lods
ds
jl
dec
int
int
js
mov
insb
sub
int3
jg
adc
mov
mov
movsl
jns
popf
rorb
push
mov
lea
jmp
mov
test
pushf
test
lea
push
push
jmp
sahf
or
inc
cmc
mov
leave
lret
fidivs
test
mov
fcoml
into
cmc
testb
add
jne
imull
cli
sbb
sub
xor
lods
pop
push
mov
sbb
movb
movzbl
pushf
mov
not
sete
pushf
movsbw
lea
movb
jmp
les
clc
inc
cmc
mov
je
xchg
mov
mov
mov
fwait
jmp
sub
test
js
and
pop
cmpsl
jg
xorb
mov
adc
mov
push
jg
push
xchg
jecxz
sarl
sarb
idivl
aaa
fdivrs
mov
in
cli
arpl
sbb
shlb
pop
call
inc
cmp
arpl
cmp
jbe
fdivrl
push
pushf
pushf
lea
jmp
jge
cmc
mov
jle
lock
mov
add
mov
jae
xchg
mov
mov
jge
jg
pop
mov
sub
jns
xchg
cwtl
dec
rolb
movsb
push
rolb
js
scas
xchg
scas
push
dec
or
push
or
lds
adc
or
lahf
test
loope
mov
jo
out
loop
jo
dec
outsb
xchg
call
pop
stos
jge
and
dec
dec
outsl
inc
aad
imul
stc
jl
repz
iret
or
inc
cmc
mov
push
pop
cmp
shl
and
jns
fcoml
mov
int3
dec
fwait
in
pop
sub
movd
vcvtps2dq
push
pop
sahf
add
mov
adc
pop
and
scas
insb
cltd
mov
dec
inc
les
movb
xor
mov
push
jmp
or
mov
sub
push
xchg
pop
or
push
sub
aam
orb
test
lahf
xor
xchg
push
test
inc
test
insl
fs
lcall
mov
adc
scas
and
jbe
in
mov
jmp
cmpsb
sbb
subl
mov
lods
icebp
jb
mov
add
fnstcw
push
adc
push
daa
pushf
cmp
mov
or
ret
mov
inc
jmp
cmp
mov
pop
mov
jne
cwtl
setp
movsbl
movb
seto
lahf
push
mov
mov
lea
jmp
movl
jmp
sub
movb
call
call
call
add
aas
cmc
mov
in
insl
jle
push
and
xor
jbe
sub
repz
mov
sub
ret
xor
dec
nop
loope
cmp
pusha
sbb
push
xchg
loope
sbb
jo
sahf
enter
sbb
push
jecxz
push
dec
test
imul
stos
adc
jns
jbe
adc
push
xchg
das
jnp
xlat
das
mov
sbb
fstl
inc
xchg
rorb
jmp
movsb
sub
into
dec
push
dec
and
fdivrs
icebp
mov
cli
pop
sub
lahf
mov
xchg
push
jmp
scas
mov
cmpsb
test
scas
xchg
stos
in
mov
xchg
mov
loop
jmp
pushf
cmp
lea
jle
cmp
pusha
push
lea
jae
pusha
call
mov
mov
mov
xchg
clc
or
pop
rolb
sbb
and
sbb
mov
sub
daa
insl
push
mov
std
sub
add
aas
mov
jmp
loope
js
cwtl
jmp
push
push
pop
or
cli
mov
mov
fiadds
lret
xor
mov
decb
insl
mov
add
push
cmp
inc
lret
or
cmp
jg
inc
mov
test
ds
gs
jl
fdivrs
scas
xchg
mov
packsswb
mov
cmp
jle
pop
sbb
pop
scas
add
pop
enter
nop
jecxz
dec
xchg
rclb
or
mov
ret
or
and
setb
or
cmp
pop
inc
mov
push
cwtl
sbb
pop
out
in
mov
outsb
int3
jg
int3
lods
xor
adc
or
fldl
xor
push
js
sti
push
enter
cmp
icebp
xchg
push
shl
and
ret
push
xor
sbb
xor
in
push
and
aam
xchg
ja
jbe
fcos
stos
into
dec
outsb
outsl
loop
fmul
cs
mov
mov
add
pop
inc
sbb
int3
iret
pop
lret
inc
leave
cmp
mov
aas
shl
mov
sbb
mov
jle
out
jns
xor
jb
mov
jge
sti
cmpsl
inc
test
dec
sti
clc
push
inc
mov
das
sahf
leave
sbb
or
fldenv
mov
and
movsb
cmpb
movsl
or
lods
test
nop
xor
xor
push
push
add
in
cmp
jecxz
sbb
cmc
out
pop
test
or
icebp
andb
and
call
push
pusha
lea
jb
pusha
pushf
pushl
ret
inc
mov
aad
fs
mov
ret
jae
pop
mov
loope
lret
scas
imul
shr
xchg
push
in
mov
out
sbb
sbb
sub
jne
xlat
mov
rolb
iret
loope
lahf
adc
scas
dec
mov
mov
sub
inc
ficoms
out
or
sti
in
aam
pop
sbbl
ret
repz
and
mov
lock
js
push
inc
mov
imul
mov
rorb
mov
ljmp
xchg
xchg
jl
cld
popa
les
and
cli
add
push
pop
shll
hlt
mov
mov
js
mov
int
push
and
shlb
mov
mov
cmpsl
into
pusha
mov
adc
aad
sub
cmp
andb
xorl
mov
das
fsub
mov
sub
cmpsb
rol
push
lret
test
mov
iret
fcoml
repz
pop
sbb
pushf
fisubrs
fnstenv
jmp
out
insl
push
fwait
insb
pop
hlt
xor
jo
dec
inc
and
aas
jbe
xchg
xchg
and
daa
mov
xlat
jg
into
jne
add
adc
inc
pop
mov
xchg
xor
rcr
daa
xor
sbb
mov
mov
jl
sub
mov
mov
and
xchg
inc
mov
sbb
shlb
in
lods
jno
push
ja
aad
or
out
push
pop
inc
cltd
mov
lcall
mov
mov
xchg
jge
add
movsl
or
out
lods
mov
sti
adc
lock
test
sbb
dec
xor
lahf
and
push
pop
fwait
mov
movsl
inc
into
dec
add
icebp
xor
mov
xchg
mov
jecxz
gs
rorl
add
xor
fwait
dec
inc
lea
sbb
xor
mov
sub
push
stc
stos
repz
mov
jbe
pop
jg
setle
inc
mov
cltd
inc
in
add
ds
fs
bound
mov
scas
call
inc
ret
jmp
inc
lds
shlw
or
xor
test
sbb
push
and
or
xor
add
cmp
and
test
mov
xchg
sub
das
mov
mov
push
pop
js
out
lds
sub
cmp
repz
cmp
inc
mov
fsubrl
add
inc
and
mov
cmp
inc
jle
icebp
mov
into
inc
aad
xor
lods
std
inc
push
call
loope
imul
ja
mov
push
pop
ss
xchg
rol
and
lahf
mov
sub
repnz
test
mov
adc
and
dec
inc
mov
cmpb
dec
repz
push
mov
and
mov
ret
jae
push
out
in
add
xchg
mov
xor
divl
dec
push
push
insb
dec
repz
shl
xorb
pop
das
xor
mov
push
lock
inc
mov
add
mov
data16
into
rcrl
inc
aas
mov
cmp
aad
inc
adc
or
push
rcll
dec
icebp
pop
test
ret
adc
jb
ret
and
mov
inc
adc
gs
jae
into
adc
lock
jo
into
pushf
in
mov
mov
ret
es
clc
out
mov
xchg
mov
fdivrp
dec
cmp
push
mulps
lods
test
add
mov
in
stc
inc
not
xor
jno
sub
mov
adc
xor
shrb
add
ja
xor
or
stos
popf
shrl
repz
xor
cltd
mov
mov
inc
xchg
xchg
in
inc
cmpsl
sub
iret
dec
loop
mov
jmp
in
lds
and
imul
test
adc
movsb
adc
sub
adc
xchg
push
mov
and
xor
movsl
call
push
inc
inc
sbb
lcall
jb
sti
enter
fstps
mov
fildll
mov
lock
adc
icebp
mov
cmp
lahf
xor
fs
push
cmpsb
pop
dec
arpl
icebp
xor
je
push
sub
rolb
xchg
push
mov
inc
mov
aad
mov
pop
mov
mov
test
dec
mov
in
add
adc
xor
mov
or
pop
mov
add
push
mov
loop
movsb
cmp
mov
movsl
or
mov
add
icebp
xor
cmpsb
clc
or
shrb
icebp
xor
jns
aaa
into
xor
fnsave
mov
int
mov
sub
adc
iret
mov
mov
cmpsb
popa
jecxz
dec
lods
cld
cmp
sbb
aad
test
adc
divb
fisubrl
insb
inc
inc
into
nop
outsl
insl
mov
cwtl
add
mov
in
lods
mov
mov
mov
jbe
adc
fstps
hlt
roll
dec
dec
xor
ds
xchg
test
cltd
mov
sub
mov
mov
inc
mov
hlt
mov
mov
and
mov
xchg
ret
xor
into
or
adc
lock
push
and
ret
pusha
cmc
orb
mov
mov
cmc
out
pop
or
mov
or
jl
inc
mov
or
lcall
leave
mov
in
es
or
mov
mov
lods
mov
in
pop
ja
pushf
xor
adc
xor
addr16
mov
cmp
pop
mov
loop
hlt
insb
xor
ss
nop
test
mov
mov
fidivrs
sub
lret
or
dec
sub
lret
or
mov
leave
fisttps
out
jmp
pushf
mov
jle
jno
mov
mov
inc
add
xor
mov
shrb
mov
jmp
cltd
pop
adc
lea
mov
mov
xor
outsl
repz
sub
xor
jne
mov
add
loop
mov
jge
fs
cmp
mov
pop
pop
and
cwtl
and
mov
push
fistpl
ret
pushf
adc
mov
fists
subb
inc
jnp
orl
mov
mov
sbb
push
js
mov
mov
inc
pop
cltd
bound
inc
ret
mov
sub
push
ffree
icebp
push
and
jg
push
icebp
or
xchg
into
lock
xchg
lahf
dec
xor
xchg
xor
pop
leave
mov
cld
push
jo
ret
cmp
dec
aad
ret
repz
mov
mov
inc
mov
into
xchg
cmp
out
addr16
dec
sar
lret
movnti
or
shlb
jl
aad
add
mov
iret
sbb
ss
shl
jp
xor
mov
fldl
or
shll
test
adc
and
jno
out
sub
mov
iret
cld
mov
add
dec
shll
sbb
or
xchg
mov
cltd
psllw
mov
les
daa
push
xor
pop
xor
iret
jb
mov
pushf
movsl
notl
mov
dec
xchg
push
icebp
aam
jl
lea
inc
test
std
mov
sarl
ret
jno
iret
es
or
push
test
inc
cltd
push
xor
xchg
stc
jo
andl
ret
popa
aaa
insb
and
mov
icebp
push
fistl
inc
mov
and
push
and
sub
ret
jp
icebp
sbb
xorb
ret
lods
lods
repnz
jne
jmp
test
dec
or
pop
mov
mov
jae
jle
or
ffree
lret
mov
lods
or
adc
inc
in
test
mov
jae
cmp
jno
stos
and
cmp
loope
int3
xor
xchg
fs
insl
push
ret
roll
sar
xor
add
adc
mov
test
inc
mov
jno
xlat
add
mov
sbb
sub
cmp
mov
or
ss
or
inc
in
add
fiadds
cmp
xchg
scas
shlb
js
lret
jno
shll
fnsave
in
sub
jns,pn
or
out
test
xor
gs
jae
xchg
and
xor
ja
jl
adc
jo
jbe
call
lahf
decb
xor
cmc
inc
aad
test
pop
cmc
ja
icebp
xlat
pop
test
data16
pop
push
pusha
aas
mov
mov
mov
popa
rdtsc
aaa
mov
in
stos
ss
jmp
add
cltd
or
ss
mov
es
jmp
mov
mov
les
ret
rcrl
pusha
mov
inc
dec
into
ljmp
repz
ret
mov
sbb
addb
shlb
mov
or
push
inc
jg
dec
cmp
mov
jo
xchg
xchg
popf
shrb
add
insb
mov
inc
pop
sti
lcall
mov
mov
inc
ret
xor
enter
pop
mov
loop
pop
mov
xchg
mov
lock
lret
out
mov
dec
dec
rorb
mov
aaa
loope
dec
orl
imul
lret
rcll
mov
jle
fwait
add
cmc
mov
mov
jne
lock
pop
xchg
ret
xor
mov
in
dec
inc
stc
jp
repnz
or
in
add
out
scas
pusha
pop
and
xchg
cmpl
pop
jo
mov
or
movsl
adc
or
xor
data16
pop
pop
in
test
adc
inc
ret
mov
hlt
push
push
stos
cmp
and
adc
jo
call
mov
mov
mov
xorl
cld
inc
test
jbe
xchg
filds
daa
adc
mov
mov
inc
popa
addb
dec
add
mov
push
gs
sti
stos
insl
dec
mov
jmp
mov
pop
fcoml
inc
pop
sbb
lcall
gs
enter
fildll
push
and
jno
test
sub
mov
hlt
test
push
pop
mov
xlat
loope
lahf
xor
icebp
cmp
mov
cmp
pop
repnz
mov
push
shlb
add
sub
xor
insl
or
mov
jae
lcall
ror
push
mov
mulps
add
xacquire
out
mov
pop
jae
xor
and
and
or
shrl
out
mov
inc
mov
das
pop
mov
jae
xchg
cmp
test
mov
fldl
rcll
push
mov
daa
mov
mov
jno
lahf
aad
pop
inc
roll
mov
pushf
les
xchg
mov
and
mov
mov
mov
sub
divl
repz
push
lds
dec
jb
dec
jae
insl
add
inc
adc
adc
es
jbe
jl
adc
sbb
xor
in
dec
fnsave
jo
imull
push
mov
mov
notl
xor
sbb
mov
push
mov
aam
xchg
addr16
shll
jg
mov
rol
adc
popa
mov
ficomps
testb
mov
pushl
xor
push
pop
mov
jne
outsb
or
adc
popf
into
mov
cs
fidivrs
popf
nop
negb
and
sbb
push
popf
outsl
inc
int3
mov
adc
ror
testl
add
rol
jo
lret
icebp
jno
in
rcrb
call
scas
cmp
andl
adc
pop
sub
aas
mov
push
push
mov
and
and
das
push
mov
xchg
stos
jb
or
lods
push
mov
fistps
mov
jp
aas
loope
jge
rcrl
outsb
mov
mov
jne
movsb
jns
frstor
cmpsl
mov
mov
mov
xchg
pop
jg
or
cli
neg
les
sti
push
mov
sbb
sub
je
cltd
test
lods
cs
and
inc
mov
mov
xchg
scas
xchg
lea
pop
push
stc
and
xchg
mov
cmpsb
or
icebp
in
pop
inc
push
xor
icebp
das
adc
mov
sbbl
mov
xchg
mov
add
dec
add
mov
std
cli
jecxz
imull
dec
or
xchg
mov
outsb
addr16
mov
jno
int3
push
mov
pop
adc
roll
or
cld
xchg
das
lret
xlat
test
adc
sarb
jmp
scas
test
xchg
jae
icebp
and
xor
jbe
mov
pushf
out
adc
cmpsb
movb
fnstsw
cmp
xchg
mov
sbb
hlt
in
aad
gs
lods
scas
jnp
mov
cmpsb
xor
xor
xchg
lock
test
push
imul
xlat
xor
insl
push
int
das
or
adc
das
shll
popa
cmp
inc
jle
mov
rolb
enter
leave
icebp
adc
mov
sbb
aad
inc
test
add
in
les
pop
mov
xor
mov
push
cmovo
xchg
popf
inc
mov
insb
aad
adc
or
mov
lds
inc
in
cs
xor
testb
sbb
sub
leave
mov
cmp
xor
outsb
pop
add
sub
or
mov
mov
stc
inc
xlat
es
xor
xor
push
mov
mov
jmp
xchg
push
and
jmp
xor
mov
pop
lcall
xor
and
ret
out
xchg
add
cltd
imull
jmp
adc
enter
adcl
jo
push
fdivs
push
fldt
xchg
rcl
mov
inc
inc
add
gs
and
test
and
inc
jl
mov
mov
shlb
cmp
jb
inc
call
mov
inc
mov
loope
gs
fildll
or
dec
jns
or
adc
jo
testl
nop
lahf
enter
push
xor
push
xchg
push
sbb
cltd
subb
adc
mov
in
add
mov
int
xchg
or
inc
ja
or
xor
into
sbb
mov
in
ret
cmpxchg
dec
or
mov
aad
mov
scas
mov
mov
es
out
mov
ja
xor
std
and
fdivrl
sub
pop
ljmp
leave
stos
les
stc
movb
mov
cmp
test
test
jmp
jge
cvttps2pi
mov
lods
ds
in
das
push
jg
mov
out
stc
cwtl
test
cmp
incb
jbe
dec
mov
jnp
mov
lahf
pop
call
dec
lea
test
dec
or
jae
mov
cmp
adc
pop
mov
repz
mov
or
push
xchg
push
push
sub
dec
lods
sub
mov
in
sub
ret
test
push
call
movsl
sub
inc
push
aas
fs
mov
fcmove
adc
push
mov
mov
fwait
cld
mov
loope
js
sbb
fs
gs
mov
adc
call
mov
xor
ret
sahf
sub
cmc
mov
add
push
mov
dec
imul
or
sahf
mov
mov
mov
mov
xchg
push
xchg
repnz
mov
lcall
shll
dec
cmpb
outsb
xor
pusha
popf
cltd
jae
jbe
pop
clc
mov
lock
xchg
push
mov
filds
repz
inc
and
pop
fisttps
add
inc
add
cmp
and
jae
sbb
mov
in
inc
jb
lock
pop
pshufw
adc
jb
cltd
mov
or
jbe
jae
mov
pop
std
orb
fidivrl
push
xchg
aam
lcall
scas
in
pop
add
mov
pop
dec
lea
jno
pushf
lea
call
test
push
jmp
cli
addr16
sub
mov
dec
dec
jnp
popf
out
popl
push
ds
jp
jns
jae
xor
mov
cmpsb
mov
dec
xchg
or
clc
inc
jns
inc
int
fdivs
sbb
int
scas
and
xlat
pop
scas
mov
sbb
jle
int
push
pop
lea
adc
adc
or
cs
lock
cmp
cs
in
daa
cwtl
clc
sub
loope
out
jo
and
cmc
mov
js
jp
jl
scas
aas
adc
mov
int3
cltd
push
sub
adc
inc
xor
push
outsb
test
jbe
inc
dec
fdivrs
inc
xchg
sub
xor
stos
outsb
mov
pusha
jae
cwtl
cmp
aaa
or
mov
int
dec
nop
adc
mov
mov
addr16
jl
push
inc
les
sub
mov
and
outsb
mov
jb
or
jno
mov
out
and
test
xchg
cmp
add
movsb
pop
in
cwtl
fwait
or
mov
push
inc
aam
mov
ds
push
push
add
inc
test
out
jno
aaa
lods
lods
repnz
fmuls
jmp
xchg
lods
mov
scas
stos
cmpsb
test
mov
in
xchg
mov
cmpsl
mov
cmpsb
mov
mov
mov
mov
cmpsb
stos
scas
mov
test
test
mov
in
mov
fiaddl
sub
mov
cmpsb
inc
mov
sbb
ret
and
inc
sahf
enter
xchg
mov
mov
fstpt
and
dec
jle
xchg
dec
sti
dec
push
cli
dec
mov
pop
popa
lods
sub
dec
inc
int3
in
sbb
or
popf
mov
pop
and
push
mov
andl
inc
cli
cmp
mov
or
jb
insb
and
push
pushf
mov
pushl
ret
pusha
pusha
lea
jbe
btc
pusha
movsbw
bswap
sub
cmp
sbb
sub
shl
mov
call
call
mov
push
adc
call
or
jp
mov
dec
rcrb
mov
push
adc
mov
mov
cmpsb
fsubl
and
xchg
add
push
and
jg
scas
xor
test
pop
pusha
lods
xor
cmpsl
fimuls
pop
loop
ficoms
xchg
aad
mov
cmp
or
fistps
sbb
mov
mov
dec
into
jge
inc
mov
shl
and
mov
stos
popf
andb
mov
mov
xlat
out
call
cmp
call
cmc
mov
cmp
pushl
bt
test
mov
jmp
dec
mov
cmc
mov
lods
int
incl
scas
cmp
dec
shll
jo
addb
mov
cmp
pop
fdivl
mov
imul
mov
lds
mov
cmpsl
or
mov
mov
faddp
shrb
mov
outsb
sbb
lret
mov
mov
mov
lcall
add
sub
jno
mov
leave
mov
jb
push
neg
pop
xor
ficoms
insb
test
cmc
mov
loop
in
ss
dec
imul
xchg
pusha
fwait
ja
xchg
dec
jae
test
sarl
test
dec
cmc
push
aad
insb
int
cwtl
in
jno
rcrb
xchg
pushaw
adc
mov
stos
popa
or
add
mov
nop
jbe
cmpsl
push
or
sub
push
stos
xor
dec
mov
add
es
hlt
cmc
push
mov
or
roll
test
nop
shl
rcll
mov
and
jae
test
mov
stos
xor
adc
mov
cs
jnp
sbb
lods
insl
pop
sti
sub
insl
outsb
sbb
shl
sub
mov
cmp
push
addr16
out
loopne
push
xor
mov
push
and
cli
sti
dec
pop
adc
inc
jp
into
pop
ss
push
cmpsl
enter
mov
xchg
adc
icebp
scas
mov
sbb
cmp
push
out
movsb
pop
dec
cwtl
out
jmp
mov
cmp
out
call
divb
dec
in
rcr
dec
xor
out
ja
mov
sub
repz
push
cmc
push
jmp
sbb
push
rcl
push
cli
loopew
push
sub
mov
add
xchg
cmp
call
fimuls
and
mov
xlat
clc
imul
scas
xor
jne
in
nop
addr16
fsubp
xchg
cmp
jbe
int3
jle
ficompl
add
test
mov
ljmp
dec
mov
insl
cwtl
jns
mov
adc
xchg
clc
inc
lret
aad
dec
xorb
add
mov
push
jecxz
pusha
push
jb
in
divb
rorl
popf
xor
loope
ds
push
gs
xchg
jnp
xor
push
mov
scas
call
mov
cmc
cmp
jmp
jmp
adc
and
inc
mov
rolb
or
pop
shlb
xor
dec
outsl
pusha
mov
push
ja
sti
push
sub
xlat
clc
sub
addr16
aas
xor
inc
aad
in
out
add
outsl
scas
pop
pop
push
ja
mov
pop
repnz
xchg
xchg
jp
dec
xor
cmp
clc
mov
cmpsl
clc
pop
dec
aas
xor
cmpl
push
test
pop
leave
jne
mov
pop
sti
jle
hlt
testl
push
cmp
xor
cs
insb
add
cmp
cli
or
fnstsw
push
and
cmc
cmpsb
fldenv
dec
loop
lcall
jl
in
inc
test
dec
jmp
dec
adc
pop
inc
out
mov
fbld
cltd
lret
or
push
jns
mov
mov
js
mov
mov
and
dec
popf
cmpsl
int
stos
cmp
jge
data16
fisubrs
rorl
xchg
sbb
xorb
add
mov
cmpsl
pop
stos
jle
adc
pop
cmp
in
pop
out
out
xor
jecxz
test
mov
outsl
mov
neg
pushf
pushl
pusha
inc
clc
jmp
push
addl
and
orl
pop
cmp
cs
jp
push
push
test
mov
lds
pop
lods
lods
loopne
push
push
push
cmp
rorb
inc
push
fldl
pop
adc
dec
daa
test
xlat
fmul
jp
sbb
or
clc
mov
icebp
hlt
mov
sbb
pop
mov
out
lcall
outsl
shrb
push
aam
sbb
in
dec
mov
mov
aam
cmp
pop
aad
jge
or
out
popl
shrl
subb
scas
pusha
shl
inc
add
scas
xchg
lahf
cmp
inc
and
add
jo
cmpsb
cmp
xchg
xor
pushf
insl
mov
test
ja
lret
and
jne
sbb
mov
ja
xor
pop
mov
sub
mov
sbb
rclb
mov
dec
outsl
lods
mov
pop
adc
loop
roll
gs
ljmp
mov
xor
inc
adc
test
cmc
mov
les
mov
incl
out
xorb
insl
inc
ja
xchg
pop
mov
data16
subb
outsl
je
mov
mov
adc
inc
jo
mov
add
jb
jno
sbb
or
outsl
ret
loop
loope
jae
push
and
test
dec
jmp
xchg
in
adc
sbb
jne
dec
pop
jo
dec
and
mov
lds
aaa
clc
jns
jmp
popf
cli
add
dec
sub
cmc
jns
js
lock
add
push
les
sub
inc
and
mov
push
cmp
mov
mov
mov
jmp
mov
out
pop
adc
inc
mov
das
jle
cmp
orl
decb
and
out
pop
add
push
push
jb
lret
xchg
mov
jmp
xor
in
fisubrl
imul
icebp
in
lret
sbb
mov
mov
out
incl
add
push
inc
cwtl
cmp
xchg
push
lret
dec
inc
stos
sub
mov
out
mov
testb
push
inc
push
nop
push
scas
sub
loop
subl
or
test
push
lds
sti
xor
push
or
cmp
pushf
shl
mov
sub
jp
dec
mov
mov
insl
add
push
leave
dec
out
inc
adc
sbb
xchg
dec
dec
das
add
or
outsb
iret
adc
bound
cwtl
dec
jl
imul
push
inc
insb
jbe
sub
hlt
jge
popf
cld
mov
rolb
lahf
clc
and
hlt
inc
adc
loop
loop
add
adcl
sahf
je
lock
dec
in
cmp
pop
add
mov
cld
add
mov
xchg
adc
mov
or
push
mov
jb
sbb
xchg
or
decb
push
add
test
cmp
call
mov
mov
pushf
pushl
mov
pushl
ret
inc
mov
and
mov
aad
mov
cltd
fimull
pusha
arpl
jo
mov
jbe
outsb
and
cltd
push
cmpsl
mov
push
aaa
push
pop
addr16
lcall
adc
ficompl
push
mov
loope
js
lods
fcoml
sbb
or
or
iret
xor
das
mov
rorl
sub
mov
push
add
adcb
sub
xor
iret
dec
mov
gs
xor
push
cmp
xchg
push
test
cmp
pop
in
mov
aas
ret
and
push
cmc
mov
das
xor
out
mov
cmp
push
mov
add
jo
scas
cwtl
lds
xlat
lcall
jbe
mov
addr16
add
fcomps
rorb
mov
add
test
xlat
and
mov
xlat
shll
fstpl
popf
hlt
mov
and
jae
scas
mov
fstl
and
dec
stos
out
pop
imul
jg
xchg
test
scas
xor
out
aaa
adc
loop
sbb
outsb
rcrl
jbe
sti
incl
jo
sbb
mov
xchg
cli
mov
dec
pusha
sub
outsl
jns
jp
inc
adc
loope
push
int3
scas
aas
push
and
jmp
in
cmpsl
mov
addr16
or
iretw
hlt
jge
dec
push
js
add
ficompl
fistl
rorl
dec
jg
sbb
or
adc
popa
and
and
int
add
jl
mov
out
lods
mov
fstps
jle
ljmp
jno
in
imul
frstor
cmp
push
xchg
lds
push
ds
mov
sbb
jno
jae
test
mov
sti
mov
fsts
movsb
mov
scas
xchg
xchg
test
cwtl
nop
imul
jae
fldcw
or
sbb
cli
imul
sub
inc
or
jns
imul
adc
inc
xorb
mov
add
rolb
mov
mov
adcl
jnp
push
scas
in
or
mov
jb
movsb
add
fwait
jno
lods
lea
cmpsl
pop
pop
sub
and
test
sbb
ret
inc
repnz
aam
dec
jl
cmpsl
pop
pop
pop
mov
fldt
adc
jne
inc
add
adc
dec
pop
inc
scas
adc
and
rol
es
pop
pop
inc
push
imul
adc
pushf
jo
jmp
sbb
mov
repnz
cmp
push
mov
and
adc
mov
ljmp
add
mov
fstps
shll
inc
dec
stc
mov
test
aaa
cli
aaa
xchg
and
adc
jbe
jl
mov
xor
std
mov
push
cmc
sbb
mov
and
test
lcall
xchg
jo
bnd
je
popa
cmp
imul
popf
loope
ret
xor
sarl
stos
mov
push
and
xchg
das
mov
xlat
pop
pop
lods
test
pop
insl
mov
nop
fbld
bound
je
inc
cwtl
cwtl
mov
pop
ljmp
push
ja
ds
push
lret
inc
icebp
xor
mov
pop
mov
mov
sbb
loop
mov
sbb
mov
push
xchg
ss
mov
cmp
pshufw
insl
adc
lock
rclb
je
mov
jno
test
insb
int
add
and
out
rcrl
loopne
jle
xor
mov
or
xchg
dec
mov
xchg
and
xchg
ds
pop
mov
adcl
xorb
mov
pop
cmpsb
sub
add
inc
mov
scas
jp
enter
push
insl
adc
enter
pop
push
mov
add
jbe
pop
lahf
or
mov
in
jge
repz
push
dec
stc
test
cld
lea
jb
popfw
call
add
sbb
mov
and
push
xor
ljmp
lcall
loop
cli
addr16
push
mov
ljmp
inc
dec
cmp
mov
cmpb
cmp
movsl
lds
push
fisubs
dec
xchg
xchg
mov
cld
add
pop
dec
xchg
push
ret
sbb
popa
or
adc
jge
and
or
or
pop
mov
test
jnp
adc
fistpl
es
outsb
popa
aam
not
lea
jae
pushf
dec
call
jmp
cmc
xor
sbb
mov
mov
mov
lea
pusha
add
and
mov
out
mov
mov
sub
pop
ljmp
sbb
adcl
addr16
pop
jnp
xchg
cmp
jae
shr
enter
sbb
std
aaa
pop
push
mov
sub
ret
test
les
sub
pop
mov
sahf
fidivrs
jae
movsl
push
negl
jo
cmp
bound
inc
ret
mov
aas
call
mov
hlt
test
dec
dec
sbb
es
insb
out
negb
jns
pushf
jge
fsubl
cmp
movl
jns
icebp
mov
loope
sti
rclb
inc
repz
stc
dec
sub
mov
xlat
nop
shl
lds
hlt
xor
add
cmp
out
push
mov
push
sbb
xor
xor
fs
insb
add
rolb
mov
setge
jmp
or
sbb
mov
lcall
add
push
push
imul
lds
cs
not
mov
mov
jg
and
rcr
fs
push
outsl
mov
repz
push
lahf
out
jecxz
jg
jo
pop
mov
jno
jb
daa
fiaddl
or
stos
cmp
add
popf
dec
jmp
xchg
mov
or
cld
imul
and
jb
cmc
mov
mov
imul
sbb
imul
mov
push
jmp
test
lock
call
negb
and
test
dec
xor
and
daa
xchg
jge
dec
mov
push
sub
test
cmp
call
insl
xchg
jle
push
jmp
into
and
xchg
enter
adc
lcall
call
push
imul
pop
fstps
fbld
mov
jecxz
add
mov
mov
and
adc
andb
aad
lods
xchg
iret
outsb
pop
or
pushf
je
mov
fnstcw
sub
cwtl
mov
in
test
fmull
cltd
ficoms
pop
cmc
mov
inc
addl
stos
int3
cmp
sub
push
dec
cmp
andl
lds
jmp
leave
scas
mov
je
call
mov
aas
jno
or
pop
dec
xchg
popf
arpl
scas
push
sahf
in
les
mov
mov
dec
inc
data16
outsb
mov
mov
mov
stos
out
sarb
mov
adc
jno
add
test
or
jecxz
or
or
fimull
mov
xor
cmc
mov
push
movsb
movsl
push
pop
cmp
jnp
popf
outsb
jg
adc
aad
lds
pushf
insl
imul
aad
inc
into
stos
inc
mov
jp
pop
mov
leave
adc
dec
xchg
and
jbe
xor
in
insl
push
jns
cmc
mov
dec
in
cmp
jge
and
outsb
push
xchg
add
mulb
mov
xchg
mov
jb
jmp
test
xchg
les
movzbl
pushl
mov
movl
jmp
scas
and
push
cmc
mov
push
test
int3
mov
lcall
lods
stos
fsubp
jb
ret
inc
shrb
icebp
xor
std
mov
cmp
js
fs
decl
mov
inc
push
aad
test
mov
dec
mov
xchg
pop
jno
mov
sahf
xor
jbe
fcomps
popa
mov
push
and
sub
int
outsl
es
pop
setle
je
or
cmp
add
cmp
bt
jmp
lea
jb
cmp
pusha
jmp
jo
sbb
cmc
mov
movsl
mov
sub
dec
shlb
push
inc
mov
out
jb
add
fnstsw
adc
cld
sub
fs
cmc
je
and
sub
jnp
ret
xchg
loop
nop
push
cmp
jl
jl
dec
push
std
xor
mov
jmp
lea
ds
add
pushf
iret
inc
in
lret
sahf
push
mov
xorl
les
jmp
add
stc
xchg
bswap
movsbl
lea
mov
clc
mov
test
push
mov
adc
bt
btc
push
mov
test
sub
pusha
call
daa
pushf
insl
adc
cmp
pop
outsl
shl
xor
imul
sahf
cmpl
lret
fsubr
sub
mov
fsubrs
xchg
decb
lea
hlt
pop
imul
cmp
add
inc
xchg
je
mov
sahf
fldenv
lret
insb
cmpsl
sub
push
rorl
addr16
sbb
fdivrl
jmp
fdivrl
aad
sub
fsubrs
jmp
aad
fistpl
lahf
mov
bound
outsl
insl
fs
xor
cs
insb
add
ds
movsb
inc
jbe
dec
pop
sub
mov
or
imul
and
test
adc
sbb
ficoml
rcrl
adc
sub
and
jmp
cmp
dec
dec
inc
es
jp
test
sbb
lahf
fsubr
mov
inc
cmp
leave
lods
popf
jo
cmpsb
leave
cld
aas
ret
sub
xchg
into
jp
or
outsl
jb
inc
jmp
xor
cmc
stc
call
lea
jae
sar
sub
mov
cmp
mov
shld
xor
lea
neg
mov
jmp
pusha
dec
inc
pushf
push
inc
call
stc
mov
pushl
cmpb
lea
jge
push
lea
jne
rcl
xor
neg
mov
shl
jmp
loope
mov
cmc
mov
jb
add
push
mov
std
leave
into
gs
daa
push
add
fidivrs
sub
adc
andb
pop
dec
cmpsb
les
gs
imul
mov
cmp
mov
sbb
jge
add
push
jecxz
cli
cmpsb
jmp
push
stc
jl
xchg
aad
mov
jno
cmp
icebp
int3
mov
loope
cmc
mov
ja
cltd
dec
imul
ret
out
add
lods
cli
or
scas
rcll
xchg
sbb
mov
outsl
loop
jge
or
nop
mov
pop
stc
push
fcomps
pop
mov
inc
sub
jno
xchg
push
roll
jge
aad
aam
xchg
fwait
jg
cmp
sub
mov
mov
mov
sarl
jecxz
loopne
push
imul
adc
mov
inc
pop
push
dec
ss
filds
mov
xlat
pop
sbb
mov
xchg
nop
xor
jmp
push
dec
scas
adc
mov
xor
loop
je
addr16
or
and
cmp
bound
xor
hlt
imul
enter
dec
cmc
and
mov
cmp
lret
sbb
pop
dec
subb
xor
or
mov
das
ds
pop
enter
sub
insb
sbb
jg
mov
stos
incb
pusha
aad
testb
cld
ret
xor
adc
mov
jmp
ds
jo
xor
fmul
pushf
fisttps
repz
das
lret
or
addl
cmp
inc
dec
mov
into
rcll
and
hlt
jnp
daa
popa
pop
fisttpll
inc
push
adc
push
std
pusha
and
inc
dec
test
inc
cmp
test
ds
sbb
adc
mov
imul
adc
push
stc
cmp
mov
adc
loopne
outsl
lock
repz
cmp
sub
jb
mov
das
add
test
cs
sti
cmp
xor
inc
out
inc
out
popa
adc
fisubrl
and
sub
cmc
mov
mov
sub
xchg
xor
pop
arpl
inc
jne
imul
ss
dec
mov
push
iret
jp
out
subl
cld
in
mov
daa
dec
fnstcw
push
xchg
mov
mov
dec
mov
ss
int
lock
test
pop
xor
push
mov
das
loop
mov
mov
jne
xchg
cmp
test
pop
lods
pusha
push
cmp
ljmp
inc
cmp
cmc
sbb
mov
pop
jge
repz
cmp
mov
pop
mov
push
mov
outsb
pushl
pusha
jmp
in
cmpsl
adc
mov
mov
shl
add
mov
insb
sbb
inc
sub
out
incb
adc
push
xlat
inc
dec
or
out
rorb
sub
add
mov
les
adc
nop
adc
sub
sub
lret
pop
inc
xchg
add
pop
xor
jbe
sub
cmpsb
data16
jmp
pop
mov
cltd
add
leave
sarb
pop
add
push
arpl
nop
frstor
xchg
sbb
cltd
pushf
dec
mov
sbb
cmp
xorb
jb
clc
imul
inc
and
push
pushl
ret
ljmp
popf
push
mov
lds
mov
rcrl
sbb
ljmp
in
lock
jo
inc
and
adcb
xor
sbb
cwtl
adc
in
shrl
ret
dec
repz
lret
je
sub
les
in
dec
lock
mov
xchg
xchg
push
add
repnz
sarl
inc
xchg
pop
shl
dec
shrb
push
xchg
mov
inc
mov
sbb
xchg
add
addr16
hlt
cmp
cli
in
fstl
push
iret
or
sbb
pushf
pop
mov
xchg
xchg
mov
cmc
insb
push
roll
jge
fsubrs
add
push
hlt
in
es
adc
fucomip
xchg
xchg
add
loope
in
pop
inc
mov
cmp
xor
loop
or
push
adc
or
sbb
push
rcrl
outsl
mov
cmc
mov
je
xchg
out
cmp
sti
or
outsb
out
repnz
pusha
outsb
loope
subb
lret
add
adc
cmp
dec
mov
add
jno
test
adc
sbb
mov
or
loope
and
icebp
inc
xor
and
mov
in
aaa
pop
xchg
sub
enter
cmp
xor
ljmp
or
sbb
jecxz
mov
cmp
pushf
setnp
pop
movw
lea
movsbl
seto
mov
call
sub
adcb
in
cmpsl
clc
imul
add
aam
push
jbe
and
je
popa
movsb
adc
dec
loope
add
cmpb
add
jno
dec
sub
lret
popa
decb
jp
inc
adc
es
mov
mov
mov
divb
mov
add
push
sub
xchg
fstpl
add
and
daa
in
cmp
push
enter
adc
or
push
in
sub
and
or
pop
es
push
push
add
jmp
shlw
push
cmc
mov
fstpt
lahf
pusha
mov
es
lcall
adc
xor
repz
dec
lds
pusha
xorl
stos
in
lds
pushf
pop
int
sbb
fstl
push
incb
mov
cmp
and
cltd
mov
loop
sub
mov
jg
filds
ret
in
les
hlt
mov
popf
add
push
mov
andl
stos
rclb
mov
xlat
pop
jmp
mov
mov
xchg
sbb
fs
push
mov
jecxz
stos
insb
das
pushf
adc
aaa
sub
cltd
jecxz
lret
fcompl
or
or
imull
sarb
xchg
inc
pop
inc
popa
pop
add
push
test
mov
mov
jecxz
mov
mov
inc
loope
arpl
cltd
sbb
add
addr16
lds
xchg
push
out
jbe
add
fbld
movsl
mov
xchg
push
not
mov
mov
dec
es
fmuls
cmc
mov
adc
fidivrl
loopne
in
inc
mov
cltd
insb
jmp
mov
jle
in
mov
jge
mov
pop
movsl
and
mov
ret
jp
jnp
daa
adc
out
cmp
xlat
dec
stos
push
lcall
cmp
das
sarb
cld
dec
mov
xchg
in
jo
push
mov
leave
into
test
xor
and
and
clc
cmpsb
jo
jmp
sub
aam
pop
stc
cmp
cmp
push
out
jo
and
mov
pop
sbb
loop
fwait
pop
lret
jle
cltd
pop
enter
jbe
test
pop
and
lock
jmp
lea
xor
cmpsl
dec
or
and
insl
and
adc
xlat
adc
adc
add
in
idivb
and
push
divb
fists
shl
sub
daa
ljmp
fildl
and
xor
out
sub
adc
and
mov
cmc
mov
jb
les
cli
stc
pop
push
movsl
or
aas
lea
aas
inc
scas
add
mov
sub
lods
repnz
mov
xor
dec
mov
mov
aas
push
inc
xchg
loop
mov
pop
lods
xor
pop
xor
push
xchg
shr
jecxz
mov
leave
movsb
jle
sbb
jne
test
fs
add
mov
jp
nop
mov
mov
mov
lcall
mov
mov
out
fldcw
sub
pop
bound
xchg
and
ret
dec
mov
outsl
frstor
testb
dec
mov
xor
sti
pusha
inc
jle
mov
or
mov
pop
int
shll
pop
mov
int3
sbb
mov
mov
push
fnstcw
inc
das
repnz
adc
or
inc
ja
fimull
push
ss
bound
push
hlt
inc
fcmovu
pusha
mov
xor
cmpsb
shrb
pop
aaa
mov
lea
jae
stc
push
xor
movw
mov
lea
call
push
lea
jae
test
clc
bt
cmp
xor
jmp
add
push
popa
jae
popa
outsb
addr16
jo
add
xchg
lret
call
lea
jne
xor
bts
xor
cmp
mov
cmp
stc
mov
or
rcl
add
shl
add
jmp
add
movw
clc
cmp
pusha
call
bt
xor
pusha
push
call
add
clc
bt
test
cmp
movzwl
dec
mov
pushf
jmp
and
cmp
push
jle
pop
dec
lods
lahf
fsubl
bound
ds
aam
xchg
aaa
enter
int3
pop
mov
lret
enter
leave
insb
sbb
aas
repnz
shll
mov
fs
pop
test
mov
stos
out
addl
aam
cmc
inc
pushf
shrl
rcll
or
in
jo
and
jne
dec
pusha
inc
daa
pushf
loopne
adc
mov
fdivp
sbb
mov
lret
dec
ss
testb
sti
incl
lods
xchg
and
imul
lcall
inc
and
andb
int3
jb
mov
and
ficompl
or
mov
add
in
daa
call
jg
jle
into
sahf
lcall
xor
or
sub
dec
push
xchg
scas
scas
push
icebp
pushw
loop
add
in
jnp
pop
mov
in
jl
push
inc
push
into
loope
push
sub
pushf
movsl
sbb
xorb
ret
in
fs
jge
dec
addr16
dec
stc
or
stos
mov
rorb
repz
push
cmc
stos
mov
fs
fadds
lea
popf
fisubrs
imul
xor
adc
cmpl
hlt
xchg
lret
cs
or
mov
xchg
aas
mov
push
dec
push
or
push
pop
jp
add
repz
mov
dec
and
push
leave
hlt
ret
or
shlb
loope
cmp
jmp
ja
adc
insb
fstpl
push
add
xor
in
xchg
fdivrs
das
rclb
dec
mov
pop
push
test
adc
das
jl
mov
dec
popf
jmp
lods
push
and
dec
fistpl
push
das
xchg
sbb
push
fs
es
pusha
frstor
push
mov
jge
mov
jmp
sbb
pop
lret
jge
ret
cld
jmp
push
cmc
mov
dec
stc
mov
mov
in
xchg
or
test
pop
mov
fistps
mov
mov
cmp
pop
sbb
sub
out
push
lret
int
add
adc
dec
jb
xor
pop
scas
xchg
test
pop
pusha
and
stc
jnp
imul
or
dec
push
push
inc
std
in
push
cmp
mov
inc
xor
arpl
cld
scas
int
mov
lahf
mov
cwtl
dec
into
addl
push
mov
jmp
mov
mov
dec
bswap
mov
cmc
cmp
add
jmp
movb
pusha
lea
jne
movzbw
cwtl
movb
not
jmp
inc
mov
push
cmc
mov
push
and
push
daa
call
pop
sahf
mov
das
push
daa
cmp
jle
or
xor
and
pop
fmull
jge
cmpsl
int
ljmp
test
lds
mov
and
and
inc
xchg
mov
jge
pop
gs
xor
ret
inc
scas
je
shll
cmpsb
or
fadds
shll
and
fcoms
add
sbb
pop
push
fs
std
mov
cmpb
adc
mov
inc
and
cli
fwait
dec
outsl
pop
pop
pop
mov
minps
jg
mov
mov
jl,pn
nop
jecxz
jno
out
into
test
adcb
push
and
jg
lahf
pop
into
mov
cwtl
call
mov
xchg
int3
mov
pop
and
mov
fcompl
rorl
fisubrs
pop
add
pop
int
add
imul
enter
icebp
aad
adc
push
push
push
sbb
jle
adc
mov
sbb
jno
adc
daa
pop
pop
in
repnz
lret
mov
push
xchg
adc
mov
ffreep
lods
fists
addb
test
dec
push
fbld
out
fstpl
xchg
fidivrl
sti
push
ds
loop
cmp
jns
sbbb
je
dec
xchg
adc
pusha
jno
test
add
lcall
mov
rcr
ja
loopne
cs
pusha
add
pop
dec
pushl
test
sti
outsb
xchg
aam
pop
jb
mov
sub
xor
xorb
mov
pop
or
cmpb
pusha
mov
lea
jne
movsbw
test
shr
rcr
mov
stc
add
call
aam
mov
or
stos
sbb
outsb
scas
adc
loop
mov
cwtl
das
ret
or
mov
bound
sbb
fcom
test
out
mov
xchg
xchg
add
movsb
mov
das
pop
lret
in
pop
push
and
mov
ret
jbe
andb
sub
das
xor
xchg
add
mov
sbb
and
mov
xor
stos
mov
push
repz
scas
pusha
mov
mov
jae
lods
jle
data16
mov
out
push
inc
or
into
mov
pop
adc
add
mov
xlat
js
insl
xor
pop
pop
pop
add
mov
and
or
adc
jbe
sti
lret
inc
fmul
pushf
fbstp
cwtl
imul
push
sbb
pop
or
test
neg
push
inc
cmp
bt
xor
push
pusha
stc
mov
cmp
pushf
lea
movzbw
call
pushf
lea
je
test
cmc
add
cmc
jmp
push
and
cmc
mov
or
fisttpll
add
push
je
sbb
xchg
jmp
push
je
lds
jle
xlat
push
popf
mov
jb
addr16
adc
test
mov
sbb
jp
cmp
sub
lahf
push
rep
sti
mov
jmp
lds
addl
pop
adc
jae
decl
xlat
insl
mov
cmp
popf
jmp
filds
sbb
ja
pop
outsl
loop
push
mov
andl
cltd
scas
adc
fs
jne
bswap
push
xor
rol
das
shl
cmc
mov
pusha
bt
cmp
push
add
pushf
push
mov
pushf
lea
jmp
pusha
movl
pusha
movl
mov
pushf
movb
movw
lea
jmp
or
push
jmp
sbb
jo
cmc
mov
popa
loop
xchg
vxorps
cli
lret
jl
pop
inc
push
inc
xchg
cmc
das
je
std
pop
mov
stc
mov
lock
imul
or
lret
loopne
aad
adc
jb
inc
xchg
adc
cwtl
in
call
nop
push
mov
aaa
mov
or
pop
outsl
in
stos
cmp
jb
rorb
fcompl
in
adc
jo
add
outsl
loop
push
rcll
popf
pusha
int
pop
fldl
add
sub
mov
cli
sarl
mov
shl
sets
lods
sub
je
test
bt
xor
jmp
cmc
cmc
cmp
bswap
bswap
setp
lea
pusha
pushf
call
lcall
push
aas
inc
loope
andl
pop
mov
fisttpl
jb
jno
scas
test
pop
adc
or
and
popl
jp
jnp
cs
push
pop
xor
add
adc
testl
mov
ja
jle
addr16
repnz
and
testl
ja
mov
ljmp
cmpsb
dec
enter
mov
ja,pn
negb
lds
test
shlb
push
mov
dec
inc
and
jb
xchg
add
fcmovnu
xorl
cwtl
out
sub
pop
lods
jo
mov
cmc
mov
lcall
mov
xchg
popa
push
push
into
dec
mov
stos
mov
fdivp
hlt
xor
pop
mov
rorl
leave
xor
add
adc
icebp
jg
icebp
mov
out
out
ds
or
xchg
out
int
int3
outsl
mov
and
fidivl
call
mov
orl
sbb
xchg
in
sub
mov
mov
andb
jg
cmp
loop
int3
clc
pusha
shr
call
xchg
xor
pop
int
jno
push
adc
popw
test
call
es
addb
jno
iret
push
lret
pusha
lods
sub
jecxz
and
cs
gs
inc
loope
cmp
and
sub
push
cmp
lret
cmp
xor
dec
and
xchg
adc
fwait
mov
sub
jns
fwait
mov
pop
das
adc
push
push
jae
adcb
sbb
xchg
adc
je
and
cwtl
pop
add
mov
sub
mov
mov
push
xor
lret
mov
mov
popf
fimull
mov
xor
sti
jge
adc
add
pop
xor
cmc
jge
fisubl
and
pop
mov
cmp
cmp
loopne
sbb
mov
push
out
pop
add
cmpsb
movsb
push
xor
gs
jecxz
pop
fimull
inc
inc
test
cmp
mov
test
push
mov
and
inc
cmc
mulb
jl
cmpsl
int3
push
cmp
fisttpll
pushf
out
sub
mov
sbb
iret
loop
and
int3
loope
loop
scas
iret
or
stos
adc
jns
and
push
add
cs
stos
xor
and
jecxz
imul
dec
aas
mov
mov
xchg
mov
insl
fdivrl
push
popf
sbb
aaa
xor
inc
fisttps
cmp
out
stos
push
sub
mov
adc
lods
push
adcl
sbb
outsb
cwtl
dec
lock
outsl
fcompl
les
mov
dec
scas
pop
inc
and
lods
or
cmp
dec
insb
subb
outsl
aam
shlb
imul
mov
test
sub
sbb
movsl
scas
pop
mov
or
rcl
xchg
push
sub
or
mov
cmp
into
add
inc
pop
popf
or
jbe
inc
ljmp
and
leave
xchg
pop
andnps
add
add
mull
hlt
mov
arpl
pop
clc
inc
ja
stos
imul
xchg
mov
addr16
lahf
mov
addr16
jno
test
jge
aas
mov
sti
cltd
xchg
xchg
jl
push
aad
inc
daa
push
xlat
std
fcoms
fidivs
scas
subl
mov
jge
jle
sahf
outsl
loopne
aam
jnp
adc
fs
add
push
les
pop
adc
les
aaa
lret
arpl
mov
call
or
xor
std
hlt
mov
cli
std
jle
mov
jb
in
push
mov
movsl
dec
push
fs
mov
mov
sub
and
out
pop
adc
inc
sub
test
loop
inc
mov
jnp
jge
or
mov
shll
out
xchg
push
fldl
mov
xchg
sbb
pop
cmp
pop
ss
ficomps
imul
fcmove
mov
mov
mov
xrelease
les
int
push
pusha
jecxz
push
cmpsb
cmp
lock
addr16
push
mov
cmp
lds
out
push
adc
fs
out
mov
dec
es
lea
jne
sets
movzbl
pushf
pusha
mov
pushf
pushf
movb
pushl
lea
jmp
cmc
cmpb
push
lea
jne
shr
bsr
or
sbb
sub
cwtl
shld
mov
pusha
not
add
push
mov
bt
cmp
test
movb
pusha
mov
lea
jmp
cmp
pusha
pushf
jmp
add
movzbw
mov
clc
pushf
test
call
adc
and
data16
or
fbstp
sbb
cmpsb
popf
loopne
lods
cs
sahf
pop
mulb
and
in
mov
lret
add
hlt
xor
xchg
mov
or
adc
rep
sti
mov
fcomps
inc
mov
xchg
and
fildll
mov
testb
mov
mov
jae
inc
imul
sub
popa
and
cli
int
mov
lahf
adc
test
cli
mov
mov
cwtl
cltd
ljmp
pusha
add
or
sbb
adc
xchg
pop
or
js
in
int
das
nop
jecxz
inc
dec
cmp
out
push
rcrl
out
adc
shr
test
arpl
fmulp
xor
pop
ljmp
adc
push
add
push
pop
pop
dec
xor
loopw
adcl
int3
cmpsl
bt
stc
cmp
pushf
mov
pushf
call
push
mov
hlt
mov
fidivrl
mov
jg
mov
repz
dec
lret
fimuls
push
out
outsl
in
cmp
outsl
push
or
stos
insl
fcmovbe
mov
push
or
es
dec
cmp
mov
and
sahf
or
jge
imul
int3
inc
stos
add
mov
int3
mov
jo,pn
sub
dec
faddl
cwtl
pop
sub
shll
into
stos
push
adc
fisttps
mov
loope
mov
rclb
inc
gs
xlat
call
in
sti
outsb
mov
jp
mov
test
mov
cmc
mov
mov
movw
mov
lea
jmp
pushf
push
mov
jmp
xor
mov
mov
push
int
mov
dec
push
pop
dec
pop
jbe
push
inc
mov
push
subl
xor
cmp
cmpb
and
or
mov
add
aam
lahf
add
paddq
push
mov
cltd
dec
lds
addr16
mov
pop
rcrl
xor
mov
loopne
icebp
xor
add
repz
cs
es
cltd
imul
outsl
pusha
inc
fidivrs
mov
inc
jo
stos
pop
inc
jge
loopne
pop
shll
xor
or
jno
pop
ljmp
sbb
xchg
hlt
testl
imul
hlt
mov
loope
adc
pop
sbb
add
dec
mov
jle
fwait
je
lods
cmpsb
mov
test
cmp
fbld
adc
mov
aas
push
pop
lds
lret
gs
cwtl
aas
inc
enter
mov
jmp
repnz
jno
cmp
and
ret
adcb
into
lock
sbb
or
stos
ljmp
or
loope
ds
adc
insl
dec
adc
dec
cmpsb
aad
mov
jmp
cwtl
fwait
push
xchg
xor
xlat
out
mov
scas
cmp
add
push
mov
sar
ss
lret
add
in
inc
lahf
test
push
mov
add
add
leave
lock
add
push
imul
repz
jbe
jmp
mov
pop
jp
mov
jmp
and
push
xchg
jmp
mov
ss
jbe
arpl
add
add
dec
jecxz
adc
and
add
addb
mov
push
ljmp
out
push
cmp
add
push
cwtl
jnp
sub
or
adcb
loop
dec
cli
jmp
fs
lret
push
xor
xor
push
sbb
out
add
add
inc
js
fnstsw
add
push
je
xor
fs
jmp
les
repnz
je
jmp
mov
cmp
out
add
add
cmp
mov
add
push
pop
ss
cmp
add
push
mov
cmp
add
push
jae
dec
jmp
repnz
cmp
jo
jmp
into
insb
wrmsr
cmp
add
push
and
jo
dec
cwtl
jmp
into
scas
addl
add
and
add
add
xor
add
mov
add
std
sub
insl
shr
add
cmp
add
push
add
cmp
add
add
jle
dec
sti
roll
jmp
mov
pop
into
roll
jmp
int
fsubrl
push
sbb
add
add
xor
inc
inc
jb
ljmp
in
dec
jbe
lret
out
add
add
ror
jmp
int
fsubrl
cmp
push
xchg
cmp
out
or
rcrl
jmp
xchg
ja
or
add
add
jge
sub
ror
jmp
mov
mov
jmp
dec
outsl
pop
adc
jno
jmp
js
lret
loope
aaa
out
add
add
clc
mov
jbe
jmp
add
add
xor
andb
jl
out
flds
add
cwtl
scas
or
imul
test
rcl
ret
add
aad
pop
loop
jb
jmp
pop
mov
mov
push
mov
xchg
add
push
test
inc
sub
add
add
shl
nop
in
aaa
or
push
add
sub
outsl
jbe
add
addb
mov
out
add
add
mov
shlb
mov
inc
and
sbb
rorb
jl
push
fldenv
cmp
push
call
shlw
div
mov
jno
jae
add
sbb
sub
imull
cli
nop
shll
jge
dec
std
jno
data16
and
inc
add
mov
lods
sub
xchg
mov
inc
cmp
fidivrs
pop
jmp
daa
fucom
sub
add
out
hlt
dec
sahf
outsl
arpl
clc
dec
jmp
lods
dec
xchg
push
js
js
push
xor
aas
lods
sbb
fdiv
adc
jmp
test
scas
add
dec
xorl
aas
cmc
hlt
mov
lret
std
outsb
iret
mov
add
xor
test
inc
mov
push
xchg
jns
dec
dec
mov
mov
sbb
jns
imul
stos
fmuls
imull
pop
shlb
mov
and
inc
shl
xor
mov
jl
pop
mov
jb
loop
and
leave
fs
ret
out
enter
jns
insl
xlat
stos
jl
sbb
fists
mov
inc
cmp
push
push
mov
mov
lea
jne
pushf
movb
cwtl
not
movsbw
mov
mov
call
outsl
fcompl
sti
fdivr
pop
popl
bnd
cmpsb
imull
sub
pop
xor
add
cmc
cmp
jle
lret
cmp
psadbw
and
xor
in
cmp
call
cwtl
push
xlat
loopne
pop
sbb
es
repnz
mov
pushl
and
sub
fmul
sub
ret
dec
push
and
sbb
xchg
jle
inc
mov
mov
jg
xor
ror
push
cmc
xchg
stc
pop
not
cmp
adc
shl
sbb
loopne
roll
shll
sub
rcrl
pop
lock
loop
mov
cmc
cmpsl
and
xor
imul
loope
lock
jmp
mov
repz
int3
mov
xchg
mov
jp
dec
icebp
stos
cmc
mov
lods
or
scas
leave
mov
add
dec
arpl
icebp
xchg
dec
xor
sub
dec
loope
sbb
lahf
aaa
enter
push
mov
cli
push
and
loopne
mov
orb
fs
fnstenv
mov
outsl
frstor
leave
and
and
and
and
and
and
pop
and
xor
mov
iret
hlt
fstl
add
xor
aad
or
pop
mov
lret
xor
xor
xchg
leave
mov
push
mov
fwait
shl
jo
xchg
cmpl
mov
mov
ja
popa
mov
repnz
imul
in
adc
push
fisttps
test
jl
xchg
and
jg
push
in
enter
mov
mov
mov
jno
incl
fldl
push
dec
icebp
aam
enter
stos
roll
stc
rorl
mov
stos
xor
icebp
jmp
add
lock
repnz
cmp
mov
and
jbe
out
shll
and
jbe
and
adc
jo
sub
add
xor
adc
adc
cmp
adc
roll
pop
and
mov
fldenv
and
xor
mov
jge
shr
jmp
je
call
mov
inc
fadd
mov
dec
int3
lret
leave
mov
jns
imul
test
rorl
mov
icebp
dec
insl
dec
inc
ret
cmp
std
or
dec
cltd
dec
call
xor
ret
test
nop
xchg
ror
mov
out
mov
push
scas
sub
rol
cmp
lds
mulb
sbb
dec
repz
mov
popf
mov
gs
vsqrtpd
out
mov
leave
jg
add
lds
mov
scas
fs
inc
xlat
stos
sarl
cmc
test
or
mov
sub
push
orb
inc
mov
add
insb
lds
sub
or
mov
mov
mov
gs
iret
mov
adc
cs
sbb
imul
cmp
cs
push
lds
sub
jbe
test
test
mov
jl
stos
push
pop
mov
lds
stos
inc
flds
jle
or
movsb
and
ljmp
test
inc
jp
mov
jg
push
ret
stos
xchg
mov
rcrb
pop
add
add
insb
lret
movsb
inc
adc
push
or
mov
adc
pusha
icebp
test
add
std
jp
jmp
arpl
dec
leave
mov
sahf
cmp
push
leave
gs
mov
sbb
adc
in
dec
jnp
lods
inc
pop
mov
push
mov
adc
xchg
cmpsb
xchg
mov
push
test
sub
cmp
and
test
inc
movsb
fldcw
loope
push
bound
mov
xchg
add
lds
stos
pop
jge
mov
loope
call
fldenv
mov
addr16
inc
jge
mov
mov
mov
js
jle
das
imul
cmc
mov
xor
or
jl
push
leave
inc
mov
test
adc
rcrl
sahf
andl
jge
push
jns
inc
mov
cli
or
sahf
loop
mov
into
andl
leave
testl
aad
and
dec
mov
cmp
ret
rcrb
push
mov
dec
inc
sub
leave
leave
lods
mov
mov
mov
sbb
sbb
es
lods
les
mov
mov
mov
cld
mov
xor
xor
dec
xor
xor
cmp
fsubl
aad
sbb
dec
imul
pop
mov
inc
and
fimull
movsb
in
adc
int
pop
enter
cmpsb
stos
jnp
mov
sub
ret
inc
frstor
fisttpll
mov
or
int3
ljmp
sbb
xchg
pop
sub
dec
leave
push
mov
mov
mov
aaa
cmc
test
rolb
cmp
nop
mov
adcl
mov
add
iret
icebp
mov
push
leave
or
pop
lahf
call
lods
add
push
pop
popf
cmpsb
cmp
mov
lds
test
mov
and
sbb
pop
mov
loop
lea
loop
mov
leave
add
mov
cmp
sub
or
stos
nop
push
rorb
enter
xor
sarl
mov
xor
mov
dec
es
pushf
or
mov
push
jl
stos
pop
or
dec
jp
lds
mov
and
push
and
enter
daa
dec
lds
cmpl
cmpsl
ljmp
or
stos
push
mov
sub
jns
jg
push
rol
popf
push
mov
mov
iret
jno
repz
mov
cmc
add
xchg
jns
ror
adc
ror
orl
or
mov
sbb
or
inc
jmp
sub
adc
and
push
leave
lock
daa
adc
les
and
jbe
sub
add
pop
out
das
cmp
mov
mov
mov
jle
jp
mov
loope
mov
ficomps
fiadds
mov
fldl2t
insl
jl
xchg
mov
cltd
subl
mov
add
test
cmc
ret
fsts
mov
repz
cmpsb
adcl
call
bound
cmpsl
lret
mov
pusha
lods
cli
data16
cmp
jp
mov
pop
xchg
js
jb
sub
push
ror
xor
int
add
add
lds
jecxz
or
popa
cltd
jbe
mov
mov
loope
jae
rcl
push
adc
mov
jnp
push
mov
jp
lods
aad
ja
je
jae
lds
cmp
mov
inc
fneni(8087
lock
mov
push
lds
cmp
loopne
sbbl
jns
fdivl
jmp
jg
addb
fistpll
xchg
adc
test
dec
xlat
imul
push
aaa
insl
jmp
mov
cmc
or
loopne
loope
repz
dec
push
cmpxchg
je
push
xchg
fs
push
lds
shl
ret
and
push
rcrl
and
pushf
adc
sbb
mov
mov
leave
adc
sub
sub
add
or
jo
jl
push
imul
push
aad
ss
adc
dec
shll
rcrb
dec
repnz
lcall
sub
push
add
scas
mov
mov
fwait
xchg
push
jle
xor
mov
addr16
imul
adc
jle
iret
lds
mov
adcl
mov
movsl
add
mov
add
adc
mov
sbb
mov
aam
adc
aam
aas
test
into
loope
jmp
or
aad
cmp
jge
iret
jl
jne
dec
icebp
and
dec
cmc
or
adc
int3
lret
and
jae
stos
iret
test
xchg
dec
rcr
inc
cmc
mov
add
and
inc
enter
inc
mov
icebp
lds
insb
ret
loope
cmc
hlt
divl
push
or
aam
push
shl
pop
mov
lret
cmpb
xlat
or
or
arpl
xlat
popa
sub
stc
loope
mov
mov
rcr
jb
xchg
dec
or
mov
sub
xor
sub
data16
mov
stos
dec
movsl
popf
or
xor
cmp
cmp
sbb
dec
mov
or
inc
pop
jno
sarl
mov
mov
jg
fcmovnb
shrl
mov
iret
xor
jmp
jmp
dec
and
imul
add
push
xchg
or
adc
xor
cmp
cmp
insl
aad
ret
stos
loopne
mov
mov
sbb
pop
fdiv
roll
roll
sub
sub
leave
jmp
jecxz
lock
dec
int
or
xor
sub
aad
jmp
jnp
jmp
clc
add
push
mov
aad
mov
aam
dec
mov
sbb
testb
ret
xor
enter
xchg
add
insb
push
sbb
pushl
in
popf
stc
pop
es
pop
and
aad
sub
mov
cs
loope
clc
xor
fcomi
gs
cmc
xlat
pop
xor
jmp
je
cmp
dec
repz
fsts
xlat
vshufps
and
std
pop
movsl
xchg
mov
outsl
mov
sub
sub
dec
xchg
and
insb
test
or
popw
pop
sbb
pop
jo
sbb
mov
cmc
insl
adc
out
dec
jecxz
addr16
in
dec
jne
dec
rorl
mov
aad
cmp
das
shr
jl
mov
int
dec
outsl
inc
cmpsb
outsl
adc
nop
xor
jg
int3
pop
mov
fistpll
jmp
adc
ds
lods
or
int3
jecxz
popf
mov
repnz
jmp
and
and
in
in
in
inc
adc
inc
adc
and
iret
or
mov
leave
lock
add
xlat
push
mov
pop
mov
mov
add
xlat
mov
adc
out
pop
leave
ret
jmp
adc
xor
mov
in
lds
sbb
lock
dec
jcxz
addr16
lods
sub
shll
or
int3
mov
testl
js
ja
jae
repnz
sub
test
lahf
lds
rclb
ss
lock
enter
pop
xchg
or
popf
enter
fimuls
pushl
adc
mov
dec
rorl
dec
aaa
dec
xor
xor
xor
xor
adc
es
out
nop
add
loopne
xchg
ret
push
xchg
leave
xor
leave
leave
jmp
test
push
ss
mov
fwait
jecxz
shlb
mov
sub
cmc
mov
dec
mov
adc
mov
sbb
cmc
enter
ret
add
lret
inc
int
or
int3
cmc
dec
iret
ret
icebp
aad
or
inc
rcl
cmc
shl
ret
ret
loope
ret
inc
cmc
aad
mov
fldl
and
aad
or
inc
fcmovbe
int
dec
fadd
mov
fistps
icebp
cwtl
rorl
ret
rcl
movsl
or
inc
mov
aad
xchg
ret
aam
popf
or
inc
test
cmc
sub
aad
or
inc
jne
ljmp
in
aad
or
inc
gs
cmc
popa
loope
insl
ret
loopne
imul
loop
push
in
pop
ret
in
pop
or
inc
inc
shl
testb
mov
adc
sub
and
and
mov
and
cmp
cmp
movsl
mov
iret
mov
int3
lret
mov
rol
enter
aad
pop
ficoml
adc
js
jbe,pn
sub
lea
fsubr
aad
rcr
fcomp
mov
fcmovnu
loopne
in
jecxz
jmp
jmp
in
iret
loop
out
call
sub
sub
pop
cmp
cs
fcmovnu
fstp
iret
rcl
rcl
and
add
mov
fcmovne
mov
das
mov
mov
xor
push
fidivl
mov
cmpsl
neg
jmp
cmp
mov
mov
leave
add
ret
ljmp
fimuls
fmuls
jno
int
or
in
mov
int3
xchg
iret
sarl
inc
out
mov
cmp
lret
mov
and
cmc
rcl
sarb
mov
int3
fcmovnb
xor
fnsave
jmp
out
enter
mov
rol
xor
dec
pop
fxch
fiaddl
fldt
mov
fnstenv
fcmovb
hlt
fstp
mov
xor
aad
inc
mov
inc
mov
pop
fcomps
lret
ljmp
sarl
add
jmp
lret
aad
leave
cmc
aam
out
cmpsl
aas
call
xor
pop
pop
aad
jp
add
jecxz
in
sar
out
mov
jmp
dec
bnd
in
xchg
jecxz
in
xor
jmp
test
ljmp
mov
imul
std
mov
xchg
out
xor
fldenv
mov
fiadds
jecxz
add
out
loopne
iret
mov
mov
in
jge
call
ljmp
mov
out
rcl
mov
out
mov
xor
imul
fdivl
push
mov
sti
les
jmp
mov
std
aad
add
call
mov
jmp
repz
push
mov
repnz
fbld
shlb
cmc
xor
fidivs
into
mov
cmpsl
repz
out
testb
mov
sub
or
sbb
int
inc
fidivl
or
int3
add
mov
fld
inc
fstl
xor
leave
shlb
or
int
aaa
xor
fidivs
repz
fmulp
add
iret
sbb
or
lods
aad
add
dec
add
mov
jecxz
inc
in
iret
rorb
and
fpatan
fstl
jmp
pop
rolb
cmc
sbb
dec
fnsave
xchg
fsubp
mov
imul
dec
sbb
out
sbb
in
and
lret
push
rcll
adc
jmp
mov
ror
mov
lahf
imul
push
adc
or
rcll
pop
jecxz
jecxz
ftst
jge
ror
out
adc
xchg
mov
and
push
out
jns
mov
orl
sub
mov
pushl
leave
sub
pushl
stc
push
jno
xor
ljmp
leave
and
jecxz
and
and
cmp
pop
mov
daa
xor
xchg
fdivrs
cwtl
cmp
cmp
cmp
pop
mov
xchg
xlat
mov
out
insl
out
fidivrl
test
mov
xor
sarl
jecxz
fidivrl
fdivrs
aas
xor
mov
mov
fucomi
mov
xor
call
push
xor
aaa
xchg
push
ret
call
ss
push
mov
out
in
call
dec
inc
in
push
dec
xor
mov
mov
shlb
mov
lret
dec
pop
dec
imul
fidivl
mov
neg
mov
add
sub
jb
ljmp
ret
inc
int
mov
in
cs
cwtl
ljmp
iret
mov
mov
loopne
rcl
cwtl
out
lret
jns
outsb
mov
fsubl
xor
shll
push
fdivl
loope
jecxz
pop
xor
pop
in
xor
xor
mov
je
sarb
pop
std
fisttpl
mov
outsl
lret
icebp
pop
ljmp
leave
push
mov
inc
mov
push
fdivl
xor
mov
out
push
shll
push
aad
out
repnz
xor
xor
leave
ljmp
repnz
mov
mov
repz
mov
or
fidivl
push
xchg
out
mov
lret
shrb
outsb
inc
int
popa
hlt
pusha
mov
fstp
mov
mov
aad
pop
mov
pop
fadds
jns
mov
in
mov
aam
leave
xor
add
mov
loopne
cmp
fucomp
xor
jns
enter
loope
call
rol
fsubl
ror
rcr
bnd
mov
loop
in
cli
mov
in
rorb
roll
cmc
dec
xchg
out
les
mov
mov
ljmp
xor
sbb
mov
jle
shll
jno
jo
iret
fsubl
jae
jb
int
jne
je
ja
shl
enter
mov
mov
mov
mov
lea
in
fimull
inc
int
mov
iret
pop
adcl
xor
mov
xorl
iret
fsubrp
sbbb
addr16
loopne
pushf
lds
adc
imul
ja
xchg
jmp
loopne
xor
loope
mov
mov
cwtl
fsts
jecxz
ret
fxch
rcr
inc
rcl
fidivrs
fadd
out
jmp
out
cmc
jmp
aaa
icebp
jecxz
aas
xor
in
rorb
int3
fistpl
fxch
fisttpll
rcrb
jbe
pushf
xor
int3
and
sahf
jmp
fsts
xor
notl
shlb
xor
cmp
or
add
mov
xchg
cwtl
test
int3
mov
stos
outsl
jmp
fdivl
lods
xor
les
inc
shl
mov
mov
jmp
aad
in
inc
jecxz
mov
out
aas
mov
mov
jmp
out
rep
xor
or
shl
fisubl
enter
pop
xor
aas
push
fidivl
mov
call
sub
sarb
out
mov
imul
mov
sbb
int
xor
jmp
out
jmp
in
fnstcw
mov
mov
mov
dec
shlb
cld
stc
loop
int3
mov
shrl
cmp
iret
push
mov
pop
ret
shlb
fdivs
mov
enter
xorb
shl
imul
enter
lret
mov
int
int3
leave
pop
in
mov
iret
fsubr
mov
aam
ljmp
fcmovb
xor
repnz
roll
or
mov
loopne
rcl
add
xor
xlat
mov
out
les
sbb
int3
sub
jmp
insl
loope
fcomp
add
sbb
push
rcr
jb
fidivl
ror
fisttpll
fxch
arpl
cld
inc
sarb
clc
xor
add
call
jle
add
mov
shl
fcmovbe
sub
rcl
pop
aas
shl
jmp
int
push
mov
out
dec
rorb
inc
mov
aad
jmp
jmp
imul
loope
mov
mov
or
mov
cmp
ficoml
xor
xchg
mov
fnsave
mov
shr
and
mov
mov
frstor
push
out
pusha
mov
or
push
and
inc
mov
jecxz
dec
mov
neg
arpl
pop
shl
or
arpl
incb
lods
out
cs
lds
mov
out
aad
jmp
cmc
and
sbb
mov
out
fnstcw
inc
vpaddw
lea
lret
aad
mov
aad
js
jecxz
in
icebp
xor
repnz
test
out
xchg
repnz
mov
cmc
xor
call
out
aad
mov
jmp
in
xchg
jecxz
in
div
mov
mov
out
into
out
mov
fcmove
in
sarb
mov
cmp
fst
xor
lret
enter
mov
lret
rcrb
int
pop
and
jbe
fimull
or
out
jo
rorb
in
mov
lds
fcmovne
loope
out
dec
ja
ret
int
mov
lret
imul
into
int3
out
in
fcmove
sarb
or
call
test
cmc
adc
leave
leave
adc
or
lret
mov
ret
fidivs
gs
xchg
std
mov
int3
aaa
std
out
xor
sti
push
into
imul
les
aaa
out
jns
cltd
pop
sub
iret
ljmp
mov
adc
push
out
fwait
leave
dec
jno
jmp
fdivs
in
ret
in
iret
int
xchg
std
lret
rcll
inc
jmp
jmp
test
shr
std
in
ret
enter
loopne
in
nop
pop
dec
mov
pop
cwtl
out
sarb
jmp
adc
xchg
jecxz
xchg
dec
ret
loope
sarl
mov
iret
jmp
in
add
inc
push
adc
lea
mov
int
mov
insl
lret
mov
out
mov
loope
iret
movsl
out
shl
jmp
mov
int
mov
fadd
xor
or
jmp
mov
int3
aad
mov
add
iret
in
mov
fisubrs
fadd
jecxz
out
jmp
sub
dec
cmc
movsl
shll
cltd
pusha
stc
mov
lret
ss
mov
cmp
ret
mov
roll
inc
push
pop
inc
xchg
cmp
pop
test
aam
push
pop
popf
enter
add
add
test
mov
int
jns
out
add
rcl
xchg
mov
sbb
loope
test
adc
inc
pop
out
jg
out
sbb
adc
fsubrl
enter
jmp
leave
or
lret
cmp
ficoml
mov
push
xchg
int
sbb
imul
fmul
into
sti
dec
scas
mov
ficomps
push
out
push
leave
ja
mov
mov
pop
arpl
pop
push
aas
insl
adc
shll
addl
jge
jmp
ret
rcrb
test
mov
jmp
leave
out
aas
sbb
int3
inc
push
jge
lock
mov
fcomi
pop
lds
cmp
pop
aas
or
mov
enter
leave
ficompl
cwtl
adc
lret
fcompl
outsl
enter
mov
or
ret
fcmove
aam
ret
leave
into
xlat
fsub
aam
fwait
sbb
sbb
push
lcall
pop
sub
in
leave
mov
loopne
or
call
rcll
pushl
push
mov
push
pop
xor
sub
leave
int3
lret
ljmp
cli
cmp
push
xor
pop
adc
ret
push
xor
loopne
repnz
ljmp
jmp
xor
rcll
push
stc
adc
std
adc
cmpsl
xor
fcmovb
and
popf
icebp
xchg
push
rcrl
xor
roll
mov
adc
dec
in
pop
fxch
in
pop
movsl
push
push
arpl
mov
jg
in
fadds
mov
enter
dec
sub
cltd
push
sub
push
rcr
aad
sub
xor
arpl
adc
cltd
add
subl
jmp
lret
mov
mov
push
xlat
icebp
aad
aad
pop
fidivrs
jg
aad
or
fst
fldt
mov
xchg
lods
bound
int3
stc
fmul
fsubl
mov
loopne
mov
sub
xchg
movsl
mov
pop
adc
icebp
mov
xor
jmp
lea
int3
test
pop
gs
or
push
jb
and
pop
mov
stc
sbb
jb
leave
shlb
sub
test
ljmp
fmulp
jmp
cltd
mov
das
xor
xchg
cs
ljmp
jecxz
or
out
lret
das
push
int
mov
or
inc
or
lods
mov
dec
push
jnp
imul
lea
mov
aaa
fnstenv
xor
cltd
xchg
inc
das
in
ret
out
scas
dec
mov
insb
in
nop
fwait
ret
imulb
or
add
and
inc
shlb
repz
and
adc
out
mov
mov
shl
xor
leave
jmp
or
fadd
test
cmp
cltd
or
jge
mov
daa
xor
aad
jmp
imul
add
add
insl
gs
mov
jb
ja
or
daa
jecxz
les
outsl
cmp
dec
arpl
shlb
mov
mov
mov
es
loope
out
cltd
add
dec
adc
fxam
mov
cmp
xor
in
cmp
pop
into
cltd
jmp
or
inc
sbb
cmp
dec
aad
sub
aam
flds
xor
ret
mov
leave
loop
or
xchg
movsb
lahf
adc
adc
loope
ljmp
inc
leave
push
sub
popf
add
out
pop
addr16
addb
ret
mov
fstl
adc
xlat
fidivl
out
xor
xor
dec
jecxz
inc
movsl
jne
lods
mov
add
adc
in
pxor
xchg
push
lahf
ret
inc
jbe
sub
sub
repz
add
jmp
iret
imul
lret
dec
jmp
aaa
in
int
adc
loopne
lea
xor
xchg
fwait
mov
fdivs
jae
jmp
dec
add
xchg
shlb
pop
fstp
imul
vxorps
add
fcomp
jge
mov
shrl
mov
leave
sbb
xchg
je
ja
xor
rcl
dec
add
insl
adc
jecxz
pop
enter
pop
mov
loop
xor
push
or
popa
mov
push
add
sbb
or
mov
aam
sub
xchg
movsl
push
popf
inc
call
mov
addr16
and
mov
xor
enter
push
cmpsl
mov
add
in
and
xchg
in
insl
ret
iret
or
mov
arpl
movsl
aad
out
enter
sub
dec
xor
aas
incb
lds
test
shl
fdivl
aaa
jmp
icebp
mov
dec
xor
xor
fadds
fld
add
out
fstp
aad
enter
rclb
inc
test
dec
fwait
lret
arpl
jmp
aas
popf
in
jae
mov
fsubrs
sbb
inc
std
inc
fwait
ret
mov
loope
popa
lret
jae
mov
mov
jns
loopne
loopne
jmp
xor
jmp
and
popf
mov
jae
out
stos
fisttpll
lock
push
std
jo
loope
adc
xor
icebp
adc
pop
push
and
inc
icebp
stc
in
dec
xor
adc
in
pop
loopne
loope
inc
adc
loope
fnop
std
rep
inc
lock
jmp
and
xor
pop
push
add
daa
inc
inc
iret
inc
daa
aam
out
or
fucomi
ret
pop
imul
ja
popa
xor
mov
dec
inc
out
sbb
push
mov
inc
xor
and
jmp
in
or
aad
push
mov
and
test
and
jne
enter
test
xchg
icebp
stos
iret
pop
lret
push
pop
xchg
sbb
outsl
incl
xor
outsl
ret
in
mov
pop
xor
imul
fsub
inc
fstpl
add
outsl
pop
in
xor
mov
in
dec
outsl
pop
lret
insl
sub
popf
xor
loope
inc
mov
xlat
add
fsubl
popa
icebp
fs
int
insl
test
and
std
pop
jno
std
aad
iret
xlat
aad
shll
push
xor
inc
push
addl
aad
loop
aad
fcompl
addr16
stc
inc
sbb
hlt
aaa
imul
into
and
in
fcomps
lret
in
mov
pop
adc
inc
mov
xchg
aad
xor
pop
add
orl
lds
icebp
dec
ret
sbb
shrl
sbb
sbb
sub
mov
icebp
leave
std
pop
sub
repz
popa
lret
xchg
jae
cs
ja
lret
sub
enter
ja
or
and
adc
lret
insl
cmp
aam
andl
xor
fstpl
sahf
rcll
cmp
pop
inc
xor
in
in
imul
lds
sub
lock
inc
xor
fwait
sub
lds
sub
imul
push
jecxz
xchg
imul
call
shl
and
jecxz
pop
aam
pop
int3
outsl
inc
mov
mov
mov
test
sub
repnz
jecxz
in
mov
push
test
js
cmp
jge
jns
dec
hlt
inc
xor
jno
xlat
push
out
out
mov
ret
push
insl
push
in
stos
jae
sbb
adc
rcr
out
imul
cmp
punpckhwd
fwait
mov
loop
jne
test
cmpsl
fcmovnbe
push
xor
push
pop
in
call
mov
xor
ret
mov
insl
hlt
lea
ret
stc
shll
push
std
repz
xor
pop
pop
or
push
std
ret
fimuls
mov
dec
push
xor
inc
mov
inc
dec
jae
jge
in
outsl
aam
mov
ret
mov
sarb
pop
sbb
int
dec
pop
arpl
or
push
loope
in
ja
leave
push
iret
push
xor
and
adc
sarl
xchg
pop
sbb
jmp
in
xor
push
sbb
dec
shl
int
leave
cmp
les
xorl
dec
adcl
ja
fsubrl
ret
fisubrl
cmpsb
call
dec
xor
jmp
cmc
xchg
inc
outsl
or
pop
cmp
orl
lret
add
rcll
insb
xor
jmp
mov
insl
daa
inc
pop
in
push
popa
mov
ret
jae
xlat
add
arpl
xor
lds
popf
fstps
fninit
lods
aaa
insl
leave
mov
jne
les
sbb
add
andl
ror
in
xor
imul
loopne
add
das
xchg
mov
int3
leave
fmul
fcmovbe
roll
pop
and
push
daa
cmpsb
push
imul
iret
fwait
pop
push
jae
mov
mov
cmp
lret
imul
mov
or
sub
scas
dec
imul
mov
outsb
xor
jmp
inc
fcmovbe
sub
fcmovnbe
test
fiaddl
dec
add
fwait
sbb
pop
mov
sub
pop
xchg
popa
xor
push
outsl
adc
nop
arpl
insl
rolb
popf
stc
push
int
add
sbb
or
lret
sub
test
leave
jmp
jmp
add
fldenv
push
sbb
movl
popa
outsl
or
jecxz
add
addr16
int3
xor
mov
mov
xor
ret
add
pop
insl
push
std
inc
fcmovnb
pop
mov
and
xor
inc
ret
cmpsl
ljmp
pop
jecxz
aad
add
mov
mov
sbb
test
into
inc
enter
call
mul
jae
gs
lods
fs
iret
popa
or
cmc
push
gs
gs
std
cmp
in
jne
test
outsl
sub
dec
mov
inc
gs
fstp
or
leave
jecxz
imul
jno
and
push
das
mov
jns
inc
cmp
mov
jmp
psubw
enter
jg
ret
jae
jge
ret
into
push
movsl
jb
jnp
das
insl
pop
pusha
adc
xlat
imull
stc
add
cmp
mov
push
jp
fcmovnb
push
out
push
fstpt
sbb
sub
fldenv
mov
frstor
ret
loop
xchg
mov
ret
pop
in
popa
xchg
sbb
loope
push
icebp
inc
jg
adc
outsl
sbb
jmp
lock
dec
dec
shrl
int3
out
rcrl
popf
rcl
mov
pop
aad
lret
adc
fnsave
dec
ja
lds
dec
loopne
push
add
lret
mov
push
or
ret
mov
out
out
push
outsl
rclb
lods
xor
jns
lods
lds
mov
mov
mov
lret
call
mov
rcr
rcrb
inc
fadds
jae
xor
adc
rolb
lea
mov
rorl
iret
push
lret
jge
shll
enter
cmp
into
movsl
lcall
fldenv
in
xchg
dec
mov
fdivs
pop
sbb
fcmovnb
or
adc
or
jnp
aas
leave
js
aam
mov
mov
cmc
xchg
leave
ljmp
ja
in
dec
outsb
dec
or
pop
stc
jmp
in
ret
out
fistpl
inc
int3
add
aam
xchg
lods
or
int3
scas
mov
rclb
and
shl
in
shrb
add
or
addb
aam
lcall
xchg
sub
cmc
dec
int
sub
dec
mov
fld
mov
add
xor
std
xor
add
int3
imull
lods
sbb
mov
inc
ss
or
mov
out
flds
ret
nop
loope
fld
sbb
shl
cmc
jae
adc
and
cmc
ret
jne
inc
outsl
jbe
or
mov
fdivrs
int3
mov
jecxz
lret
xor
bswap
lds
fnstenv
lahf
lea
push
xor
inc
add
adc
xchg
bound
out
push
xor
jge
das
add
add
prefetch
in
popf
cld
sbb
cmc
int
gs
imul
add
iret
fmull
movsl
aad
imul
xchg
mov
jg
sub
cmp
in
enter
jmp
or
loope
leave
sbb
cmp
out
fninit
push
mov
repnz
dec
shll
int3
xchg
mov
leave
xor
ljmp
add
jecxz
or
inc
int
loope
jmp
mov
ret
cmc
add
enter
mov
addl
test
les
add
jge
call
xchg
stc
sub
push
push
popl
cmp
inc
flds
int
dec
fisttpll
inc
pop
repz
cmp
push
add
ret
lea
xchg
lret
sub
out
int
pop
mov
push
sub
ret
adc
rcrb
xchg
xor
inc
push
xor
orl
xor
rolb
fstpl
shll
cmc
sbb
in
push
and
shll
popa
stos
jns
xor
pop
int
outsl
mov
int3
cltd
inc
cmp
lock
xor
das
or
mov
mov
inc
aas
or
fistpll
xchg
ror
addr16
popa
cmp
sbb
xchg
push
and
xor
add
sub
outsl
ret
xor
cmp
or
lret
inc
aam
cmp
fildll
push
push
sub
or
ret
out
xchg
push
aaa
insl
or
int3
jmp
lret
in
inc
aam
cmp
inc
mov
imul
sbb
mov
in
ret
aam
loopne
sub
fwait
mov
fstpl
push
cmpsl
sbb
jae
dec
dec
aad
fldt
ss
xchg
add
imul
int3
pop
nop
mov
inc
mov
nop
scas
mov
flds
in
jns
vpinsrw
rol
dec
roll
add
push
cmc
test
cmpsl
ret
mov
adc
mov
cmpsl
jp
cltd
xor
pop
call
out
dec
imul
cmp
push
or
xchg
in
jns
add
repz
mov
sub
daa
in
icebp
in
std
fcmove
loope
mov
stos
int
mov
ljmp
in
sub
sub
sbb
out
fwait
xor
shrb
pop
adc
cli
rol
fcmove
push
adc
dec
enter
cmp
xchg
mov
int
sub
sbb
leave
pop
push
leave
jns
jmp
xor
pusha
daa
lds
mov
push
sub
iret
insb
hlt
lret
or
jnp
mov
pushf
and
xor
fmulp
pusha
pop
mov
push
mov
hlt
cltd
xchg
sub
aad
pop
mov
jmp
push
lds
out
les
out
xchg
push
repnz
test
cmp
std
enter
cltd
orl
iret
jnp
lds
bswap
xchg
push
in
mov
push
mov
orl
ret
push
cmc
mov
push
lret
out
xor
mov
sub
ret
out
rclb
in
ret
addr16
mov
shlb
pop
test
cmp
test
dec
js
or
aam
out
fldt
mov
sub
mov
jmp
loopne
mov
repz
inc
ljmp
enter
push
gs
sti
ret
fucomp
pop
icebp
xor
and
xor
xor
in
push
out
mov
mov
cmp
pop
push
test
or
or
mov
push
cmp
mov
push
cmp
iret
jnp
sahf
sbb
insb
jge
add
fiaddl
or
jge
push
xchg
fmuls
fisttpll
jg
leave
sub
movl
mov
or
mov
xor
fld
push
dec
mov
lds
mov
pop
aad
sub
cmp
int
mov
xchg
dec
mov
leave
add
movsl
push
in
mov
rol
ret
in
jnp
addr16
vcmppd
sbb
addr16
fwait
int
dec
addr16
enter
rcl
rolb
gs
frstor
or
out
push
pop
faddl
and
pop
int3
add
xor
or
int
ret
sbb
pop
loopne
jnp
loopne
out
xchg
add
push
fmull
dec
out
push
pop
or
das
dec
daa
fs
cmp
mov
cld
iret
imul
int3
aaa
loopne
ja
fcmovbe
pop
or
movsl
or
aam
mov
addl
or
out
out
push
in
std
sub
shl
sub
ficompl
int3
nop
imull
dec
xor
rcl
mov
in
or
add
int3
sbbb
jecxz
in
in
lods
out
mov
notl
int3
loop
ror
loopne
ret
int
lds
int3
fildll
fmuls
mov
add
xor
lock
sbb
shll
out
jnp
shlb
out
fildl
jo
in
cmc
mov
cmp
sub
adc
mov
repz
outsl
in
int3
push
rcrl
cmc
mov
mov
dec
fisttpll
mov
xchg
int3
fmuls
xor
imul
adc
bswap
int3
mov
pop
int3
rclb
sbb
adc
lds
lret
xor
ret
jge
out
mov
dec
mov
sbb
adc
push
dec
subl
inc
jbe
fcmovnb
jmp
mov
fadds
add
mov
fdiv
std
sub
mov
mov
arpl
push
repz
imul
movsl
rclb
dec
mov
jl
mov
dec
int3
shl
fsub
mov
jnp
leave
add
gs
lret
popa
fsub
add
add
scas
shlb
xchg
pop
int3
inc
loopne
mov
adc
fwait
adc
mov
xor
rcrl
incl
int
mov
shr
or
push
int3
leave
cld
cwtl
int
mov
add
movsb
mov
dec
int3
ljmp
shl
cmp
fdivl
pop
imul
loope
in
xor
in
rcrb
into
mov
mov
and
fbstp
jl
sti
int3
sti
jne
mov
mov
push
insl
jnp
int3
fadd
enter
aaa
cmp
int3
mov
inc
icebp
dec
int
out
fsubr
jmp
mov
imul
cmp
push
std
int
repz
int3
in
out
adc
and
or
mov
repz
inc
dec
out
jge
insb
jmp
jne,pn
fidivs
dec
out
cwtl
fldenv
and
push
shll
in
out
clc
ja
mov
inc
inc
aam
fldcw
ljmp
dec
and
pop
aam
rol
stc
dec
hlt
inc
fbstp
or
mov
fwait
inc
xorl
push
pop
shl
jae
shrb
inc
cmp
call
mov
cmp
rcr
jl
lods
sub
inc
ja
leave
stos
jnp
in
jmp
push
dec
loope
iret
or
lods
jmp
jmp
in
js
ret
lds
push
fadds
mov
int
aad
or
nop
fucom
idivl
daa
rolb
mov
test
xchg
add
push
pop
call
jmp
test
outsb
cmp
or
xor
push
fwait
lahf
int
jmp
dec
or
in
lret
or
outsb
int
mov
dec
add
pop
and
gs
add
pop
ror
leave
pusha
fildll
cmc
adc
aas
dec
pusha
fxch
jmp
mov
push
adc
in
xchg
dec
outsl
mov
sbb
or
imul
sbb
inc
mov
fadd
jg
mov
ret
push
fwait
popf
mov
sub
aam
jmp
ret
xchg
iret
xchg
lret
xor
aaa
pop
int3
popa
fbld
mov
out
lds
inc
enter
add
mov
xor
out
mov
inc
fmull
call
jae
cmc
enter
xchg
cmc
roll
xlat
gs
push
xlat
test
pop
pop
stc
cmc
sub
lds
push
mov
sbb
or
adc
leave
jmp
inc
aas
jmp
cmp
iret
pop
sti
push
sub
mov
int3
arpl
xchg
out
mov
fst
xchg
shr
fchs
pop
mov
cmc
jmp
gs
stos
xor
sub
ret
or
pop
push
sbb
ljmp
mov
fidivs
dec
add
dec
in
imul
add
jmp
test
xor
lcall
xlat
fdiv
jmp
xchg
xor
rorb
gs
sub
sbb
aam
push
mov
add
push
outsl
inc
cmc
mov
adc
cld
mov
add
imul
in
leave
inc
xchg
popf
cmc
leave
pop
adc
orb
das
push
call
cmp
ret
adc
dec
in
push
lret
pop
movsl
mov
mov
inc
cmp
mov
out
cmc
adc
or
inc
jmp
fucomip
xor
xlat
subl
rcll
push
or
mov
adc
and
sub
cs
adc
inc
out
rorb
adc
mov
or
pop
stc
das
enter
sub
shrl
mov
enter
or
and
es
outsb
dec
das
fnstenv
pop
push
and
loop
lock
lds
loop
add
enter
dec
cmp
and
cmp
and
shrl
hlt
sub
das
cmc
and
sub
and
adc
sbb
inc
enter
inc
cs
mov
leave
hlt
lds
xor
mov
shr
mov
push
gs
mov
and
mov
sbb
out
mov
in
jmp
jp
jg
mov
xor
pusha
xchg
jge
xor
shll
sbb
jl
jge
iret
or
aam
cmp
bound
add
movsl
jecxz
mov
ja
test
dec
jmp
scas
aad
adc
add
mov
push
lock
cli
int
in
cmc
or
int3
mov
fstpl
loop
sbb
sbb
ljmp
add
fs
or
insb
int
adc
cmc
add
dec
icebp
ret
stc
aad
or
inc
rcl
fprem1
ror
xor
mov
cltd
ret
adc
jns
popa
cmc
imul
dec
or
xor
cmp
ret
and
sub
rcll
cmc
sbb
dec
or
icebp
aad
or
inc
jmp
int
xor
test
cmc
jne
dec
insl
ret
push
aad
or
cmp
add
aad
or
inc
mov
movsl
lahf
rcll
gs
push
aad
or
mov
leave
fdiv
enter
aad
or
inc
not
div
or
dec
or
or
or
rorl
cmc
add
dec
add
add
add
roll
cmc
sbb
dec
sbb
das
in
and
and
and
pop
inc
and
pop
cmp
and
cmc
and
dec
and
and
inc
sarl
cmc
cmp
dec
rcll
mov
dec
jg
mov
xchg
push
sarl
int
push
pop
sarl
mov
xchg
push
sarl
enter
cmc
sbb
das
sub
and
add
sub
dec
jb
loopne
xor
shll
loope
clc
rclb
out
in
shl
xchg
loop
jecxz
inc
loopne
jp
call
cmpsb
lret
outsb
cmp
push
pop
push
nop
push
push
and
jns
pop
popf
call
cmpsb
lret
dec
cmp
push
jmp
std
loope
mov
xchg
out
out
in
in
mul
shl
outsl
rcll
lock
enter
enter
enter
enter
mov
leave
mov
xchg
sbb
push
clc
pop
fldl
testb
add
paddusw
testb
or
neg
hlt
dec
div
cmp
div
shl
iret
push
imul
lds
xor
jbe
es
int3
dec
or
push
and
add
call
cmp
neg
out
sbb
fwait
in
out
mov
cmp
sub
in
mov
adc
pusha
stos
ret
xlat
mov
in
stos
out
in
xor
ss
sti
clc
mov
nop
jb
sub
test
insl
es
jne
mov
in
mov
inc
xchg
jmp
dec
rolb
dec
xor
ret
in
jmp
les
or
or
subb
repnz
das
roll
xchg
subb
mov
and
shll
xchg
inc
mov
jno
mov
or
cmpsb
rorl
cmpsl
and
aad
or
inc
mov
aad
mov
sbb
stos
mov
aad
or
add
stos
inc
jmp
xor
or
inc
xchg
shrl
cmc
xchg
add
aad
or
inc
xchg
rcl
cmc
nop
mov
cltd
ret
sahf
aad
or
cmc
dec
popf
dec
adc
or
cmc
int
dec
mov
xchg
aad
or
test
pop
cmc
test
add
aad
or
inc
adc
cmc
xor
aad
or
inc
mov
dec
shrb
or
cmc
dec
mov
ret
jbe
adc
ja
or
je
in
jne
ffree
jb
addl
shlb
mov
shlb
xchg
sarl
xchg
jg
ret
jl
jns
jge
push
sarl
inc
jnp
xor
or
cmc
shll
shll
xchg
xor
aad
or
cmc
arpl
aad
or
push
aas
imul
jne
popf
jae
add
popf
lahf
jns
mov
push
pusha
iret
mov
jle
cmc
mov
mov
add
flds
xor
mov
stos
test
data16
fiadds
cmp
jb
enter
cmpl
insl
js
loopne
loope
lea
or
lods
gs
gs
inc
mov
mov
push
push
or
mov
or
jl
test
shlb
jo
lods
pusha
arpl
cmpb
lock
pusha
jbe
popa
lods
repz
test
addr16
xor
in
scas
dec
aaa
sub
fwait
enter
pop
pop
adc
rorl
dec
iret
shr
lret
mov
shll
lret
push
aas
rcl
or
shr
xor
lret
mov
or
movsb
xlat
dec
add
push
adc
outsb
xlat
push
enter
icebp
test
lea
mov
imul
mov
mov
in
xchg
jns
insl
lds
or
or
xor
aam
ret
add
xlat
inc
add
lock
sbb
jae
in
lock
in
inc
jno
xor
xor
mov
jge
adcb
vmovntps
arpl
mov
rcl
jns
movsl
mov
test
cmp
inc
movsl
popf
scas
push
xchg
mov
lds
in
imul
push
adc
std
xorl
pop
or
xchg
push
pop
shl
jmp
pusha
jp
or
mov
lahf
das
sub
or
add
dec
ret
fisttpll
loopne
adc
or
lds
aad
dec
pop
cmp
cltd
in
insl
cmc
aad
sarl
push
int
rol
push
adc
jno
adc
pop
inc
call
mov
inc
aad
cwtl
dec
loop
inc
pop
xor
jl
arpl
icebp
je
shrl
xchg
jb
push
push
mov
mov
popa
adc
shll
imul
ja
mov
push
inc
int
jge
in
or
shll
stos
jns
adc
imul
lds
mov
xchg
lods
cmc
push
in
mov
in
pop
and
mov
jg
xchg
mov
bound
xor
roll
xchg
mov
out
xchg
push
push
addr16
in
imul
cmc
std
clc
cmp
fistps
push
or
inc
pop
fnstcw
sbb
je
lea
imul
lods
inc
sub
adc
cmc
shll
mov
bound
andb
frstor
mov
lret
sub
inc
jp
and
call
test
xor
cmpsb
fstl
jno
repz
pop
adcl
arpl
pop
inc
or
push
shl
jae
jg
or
or
inc
sub
adc
xor
stc
repnz
cs
sub
sub
jmp
mov
addb
sbb
pop
sub
mov
out
lret
es
leave
mov
or
add
mov
push
pop
jne
imul
shrb
and
loope
inc
push
push
clc
lds
rcrl
test
repz
test
kmovb
and
mov
int
mov
mov
mov
adcl
mov
mov
arpl
xor
jl
int3
lret
ja
mov
int3
dec
je
sub
sub
int
addr16
ja
mov
andl
out
adc
mov
leave
sbb
rcrl
ret
adc
adc
scas
aaa
and
dec
mov
test
inc
add
jecxz
mov
ror
lods
xor
aad
adc
mov
leave
inc
lret
movsl
add
pop
dec
int
fucomp
dec
rorl
in
xor
mov
xchg
push
out
je
pushfw
out
cmc
cwtl
jno
and
repz
test
jns
sub
fstps
and
call
or
pusha
imul
popa
imul
pop
imul
insl
leave
ret
pop
add
and
dec
push
leave
cmp
mov
cmp
rcl
and
mov
mov
ret
cltd
subb
ror
jmp
leave
mov
icebp
insl
leave
ret
stc
push
rol
loope
sbb
add
shl
rcll
mov
adc
mov
leave
stc
cltd
lods
push
shrb
das
inc
pusha
mov
test
and
jecxz
sarb
add
mov
and
dec
adc
shrl
jnp
repnz
lea
repz
jbe
jno
xlat
or
add
ret
mov
mov
jne
push
loope
push
icebp
lahf
ffree
xchg
inc
stc
pop
icebp
ror
cltd
push
icebp
or
or
adc
add
sub
shl
lahf
lock
in
jecxz
and
bound
sbbl
xchg
leave
icebp
jne
push
inc
shll
shl
repz
or
adc
jge
movsb
mov
lret
in
xor
mov
mov
xor
jmp
call
cmp
add
mulb
or
jb
cmp
and
out
loope
jmp
xor
cmp
iret
or
or
insb
out
inc
lds
xchg
xchg
syscall
in
call
mov
mov
jmp
ljmp
jns
fdiv
hlt
cmp
mov
mov
rcrb
sub
loopne
leave
or
adc
adc
fcmovnu
leave
cld
clc
movsb
push
fstpt
xor
add
lock
mov
or
or
or
add
add
add
sbb
sbb
pop
cmp
in
out
stc
clc
ljmp
std
leave
pushl
shr
push
bnd
and
and
adc
and
daa
mov
rorl
mov
and
out
in
pop
sti
add
stos
push
loope
xor
sti
pop
cmp
cmpsl
xlat
aas
cmp
out
inc
or
sub
rorl
stc
popa
sub
sub
adc
outsl
xchg
cmp
shlb
pop
sarl
cmp
add
cmc
lock
xchg
pushf
xor
in
adc
cmp
cs
sub
shl
inc
popa
xor
add
sub
xchg
int3
or
dec
mov
insl
repnz
adc
xchg
in
cmp
daa
adc
lods
adc
mov
enter
jecxz
or
xor
add
add
icebp
cltd
orb
mov
mov
jmp
rcll
lods
mov
pop
mov
mov
sub
test
rol
das
mov
mov
movsl
adc
rcr
int
shrl
xchg
fmuls
std
adc
rcrb
dec
adc
sbb
out
movsl
fcom
ljmp
ljmp
pop
xor
mov
rcrl
loopne
ret
mov
fstl
lret
push
leave
pop
adc
hlt
mov
rol
mov
xchg
test
aad
and
stos
fnstsw
gs
imul
dec
shll
pop
adc
scas
jmp
stc
enter
cmp
sarl
jns
lds
inc
insl
shll
shl
aad
mov
mov
jmp
enter
iret
push
enter
test
fwait
jns
adcl
lea
dec
loopne
lea
out
repnz
lds
outsb
stc
adc
movsb
push
sti
in
add
add
fnstcw
inc
mov
sub
pop
push
scas
rcrb
mov
sub
pop
jmp
arpl
mov
jg
mov
dec
mov
inc
jb
lds
and
pop
loop
mov
mov
js
mov
push
insl
lods
mov
bound
jp
stos
lods
insl
xor
xchg
addr16
jle
icebp
std
add
sub
jg
jne
or
repz
mov
jbe
mov
jnp
xchg
sub
getsec
push
dec
mov
and
in
sub
stos
jmp
gs
scas
push
sbb
mov
mov
mov
inc
pusha
xchg
pop
jne
xchg
imul
mov
cmp
or
push
sub
inc
and
adc
xchg
xchg
and
aam
adc
sti
sarl
daa
xchg
leave
jle
mov
push
xchg
dec
jge
lock
cmpsb
push
lock
jns
addr16
es
sarb
roll
pusha
cwtl
in
loop
pop
mov
shl
popa
jge
out
jl
shrl
xorl
lods
pop
jmp
outsl
adc
mov
movsl
inc
imul
lods
xchg
jge
inc
inc
shl
xor
movsb
or
adc
sub
orb
ja
cli
jl
pop
rcll
jnp
mov
push
stc
inc
dec
lds
cmp
push
mov
add
xchg
push
jns
mov
xlat
sub
in
xor
cld
mov
lret
mov
sbb
add
ret
pop
testl
mov
shlb
stc
dec
dec
cmp
cltd
mov
fs
imul
mov
xor
adc
pop
xchg
call
shl
add
xchg
add
movsb
movsl
out
das
or
lret
mov
xlat
dec
or
jmp
call
cmp
hlt
pop
rcll
daa
xor
in
push
cmp
gs
movsl
enter
xchg
jns
popf
in
nop
or
jmp
inc
bound
jbe
sub
sbb
xchg
adc
add
inc
lret
imul
jge
gs
leave
adc
add
xlat
inc
mov
in
add
push
insl
and
xchg
arpl
lock
iret
outsl
or
imul
arpl
adc
pop
mov
in
lock
stos
sbb
pop
dec
inc
shl
pop
dec
mov
push
pop
mov
jge
repz
add
fnstcw
xor
or
mov
addr16
out
inc
xchg
mov
inc
iret
add
push
call
popf
and
lds
xor
pop
insl
in
aas
xchg
add
incl
std
cmp
and
jns
sbb
sbb
xchg
mov
iret
int
in
inc
cmp
mov
ret
std
inc
lods
mov
test
jle
add
stos
std
xor
sti
rcl
xchg
arpl
bound
sbb
xor
test
or
into
mov
stc
dec
in
iret
lret
or
leave
jmp
rcr
and
xchg
jb
jl
xor
leave
hlt
icebp
shlb
cli
sbb
cmc
inc
fs
test
mov
loope
cvttps2pi
mov
cmp
cli
mov
sbb
adc
xchg
add
sub
and
adc
je
cmp
hlt
cli
sbb
incb
lods
xor
cmp
leave
sbb
fstps
dec
stc
mov
push
cli
rcr
xchg
cmc
in
xlat
iret
sbbl
jmp
jg
flds
out
sbb
scas
je
cld
add
sub
push
in
sbb
and
and
sub
rcll
js
sub
adc
aas
xor
adc
incb
test
push
add
jne
ljmp
and
adc
fsts
repz
pop
fnstenv
cmc
sub
sub
add
or
loope
and
and
push
cwtl
inc
pop
inc
xor
sub
add
and
loop
addb
mov
add
xor
hlt
mov
adc
jno
repz
jecxz
call
sub
jnp
push
or
xor
pop
fisttpll
hlt
je
or
xchg
dec
adc
sub
add
and
push
loop
xchg
sbb
aas
cmp
test
jle
or
hlt
and
loopne
shl
fimuls
hlt
dec
add
gs
lret
sub
cmp
dec
mov
push
add
outsl
pop
rcl
test
add
mov
push
cmp
add
mov
adc
js
fwait
xor
ret
sub
push
or
sbb
sub
sub
rcll
lods
and
cmp
and
das
and
mov
or
lret
pushf
or
shl
adcb
sub
sub
into
icebp
not
xchg
add
enter
ja
mov
test
adc
sub
jno
aaa
frstor
aad
mov
xor
push
and
stc
divl
jmp
imulb
add
cmp
rolb
and
in
sub
jbe
test
sbb
or
and
inc
dec
icebp
dec
add
dec
pop
or
je
inc
imul
popa
test
loope
adc
or
or
cli
add
gs
das
scas
ret
sbb
call
xor
and
add
adc
jl
add
std
mov
cmp
lds
push
pop
loop
icebp
inc
cmp
cmovo
popa
cmp
lret
popa
inc
rcll
dec
sbb
cmpsl
lock
mov
hlt
loope
sub
pop
or
lea
call
stc
push
adc
inc
and
xor
pushf
push
std
push
or
fdivrl
and
and
ss
repz
shrl
and
pusha
inc
mov
dec
or
popf
out
popa
daa
xor
push
shl
or
int3
adc
jno
and
adc
or
or
mov
add
mov
adc
popa
cmpsl
sub
pop
cmp
and
cmp
adc
adc
rorl
or
cmp
leave
cmp
ret
repz
daa
or
and
add
and
sub
leave
pop
xor
rclb
filds
sbb
test
leave
sbb
sbb
loope
mov
jp
pop
mov
and
jmp
mov
xor
xchg
sub
adc
inc
xlat
and
push
push
popa
cmp
push
roll
movsl
mov
jg
or
sub
and
jmp
shrb
or
cld
in
arpl
dec
imul
xchg
mov
std
xchg
pop
stc
mov
in
nop
adc
leave
neg
inc
leave
push
xchg
dec
mov
shll
and
cmp
aad
jmp
in
push
addr16
mov
cmp
add
repz
xchg
and
nop
xchg
xor
adc
jno
bound
pop
into
div
aad
adcl
and
mov
int
jmp
dec
shll
sub
push
mov
pop
cs
mov
les
push
leave
mov
clc
arpl
inc
or
sub
mov
popf
xlat
sub
fcmove
push
ret
pop
rorl
aaa
popa
gs
dec
imul
pop
inc
inc
rorl
cmp
sbb
cmc
add
aad
or
inc
stc
shl
cmc
loope
dec
aad
rorl
loope
rol
xor
mov
or
cmc
jge
dec
push
ret
pop
sbb
ret
mov
mov
dec
mov
int3
aad
or
inc
mov
int
leave
ror
inc
lret
fisttpll
std
mov
into
pop
sbb
or
or
mov
sar
in
shl
div
call
jecxz
sbb
sub
rol
and
fisttpll
and
mov
loope
js
xor
divb
call
shr
add
ljmp
push
xchg
and
pop
roll
int
mov
mov
jae
push
mov
adc
cmp
push
sahf
leave
xor
pop
xchg
repz
pop
imul
inc
sar
xor
xor
fs
loope
lock
mov
xchg
and
daa
xchg
cmp
inc
push
lret
dec
add
jno
mov
leave
jecxz
mov
cltd
lahf
xchg
mov
sti
push
call
mov
inc
ss
dec
ror
inc
dec
mov
mov
inc
into
rolb
mov
inc
cmp
push
cmc
loope
push
lea
int
push
xor
lret
add
and
or
repnz
aad
testl
adc
cmp
shl
hlt
fsubs
xor
fiaddl
rcr
cmc
xor
dec
and
cmp
adc
cmp
sarl
lea
rcrb
movsl
loope
xor
popf
mov
xchg
pop
and
add
cltd
pop
lds
pop
fsubs
adcl
mov
out
pop
jl
mov
shll
jae
rclb
into
cmp
or
mov
xor
xor
pop
ljmp
rcr
or
cmc
sar
dec
iret
ret
in
int3
or
inc
into
rcl
cmc
rcr
mov
vpandn
roll
int
ror
dec
xchg
sbb
icebp
aaa
les
ret
fst
test
rol
cmc
cltd
ret
aad
or
inc
jno
shl
jge
dec
jns
aad
add
cmp
enter
sub
xor
sub
or
mov
pop
sbb
clc
inc
mov
enter
push
and
repnz
mov
stos
mov
inc
xchg
enter
fidivs
push
adc
sub
and
daa
or
cmc
push
js
jg
fwait
aad
or
out
shl
cmc
or
dec
and
aaa
aad
or
adc
cmc
mov
xor
ret
repz
or
inc
cmp
inc
cmc
pop
jnp
pop
xchg
aad
cmc
fcmovnbe
leave
fiadds
sar
cmc
pop
and
ret
pop
aad
or
pushf
rcll
enter
dec
adc
push
aad
or
inc
push
sarl
sbbl
lods
jmp
icebp
rcrl
movsl
stc
mov
or
pop
fildl
mov
rolb
lret
mov
inc
xor
xor
icebp
xchg
xor
repz
fscale
shll
add
pusha
add
lret
rcr
mov
jmp
mov
mov
imul
fsts
and
hlt
jnp
pop
push
repnz
sarl
mov
enter
shrb
lds
mov
add
add
cmc
jle
repz
push
leave
int
and
test
filds
outsl
cli
fldl
sbb
es
inc
gs
add
aad
or
inc
or
sub
rcrl
cmp
ret
lret
push
inc
mov
xor
leave
inc
rcl
ds
leave
jno
icebp
cltd
mov
xchg
loop,pt
mov
adc
jns
mov
mov
lret
jb
sbb
movsl
repz
xor
inc
pop
lret
mov
jge
fcoms
mov
mov
fimull
xor
lea
cmpxchg
mov
imul
sbb
aam
xor
inc
xchg
iret
mov
call
jle
push
cmc
lods
xor
dec
pop
xor
cltd
std
test
mov
mov
dec
test
mov
jnp
inc
imul
mov
dec
cmpsb
and
dec
mov
mov
imul
repnz
xchg
daa
xchg
lea
xor
cmc
jmp
mov
jne
xchg
stos
push
test
mov
cmp
adc
lea
iret
push
outsl
push
fmul
xchg
push
test
xor
xchg
daa
mov
or
repz
push
inc
mov
cli
in
arpl
cld
and
into
pop
inc
sbb
shll
add
cmpb
sbb
mov
inc
mov
mov
or
dec
mov
add
jne
and
mov
mov
mov
xchg
push
and
cli
sahf
push
dec
inc
das
faddp
xor
fcoms
andb
clc
neg
mov
je
scas
jno
push
sub
mov
out
stos
mov
repz
xchg
stc
jae
xor
lea
xchg
mov
or
jg
fiadds
filds
add
and
mov
mov
lahf
push
jnp
clc
hlt
insb
pusha
mov
xchg
jge
cli
loopne
dec
cmp
sbb
pusha
add
mov
scas
out
dec
mov
inc
xor
les
test
xchg
into
stos
ds
xchg
jge
adc
add
adc
add
inc
xor
jno
sti
fdivrs
adc
mov
loopne
insl
std
rorb
mov
xor
inc
jns
mov
dec
sbb
fisubl
xchg
aaa
call
mov
xor
pop
mov
out
out
sti
loop
adc
jecxz
or
clc
push
mov
jg
push
fwait
push
xor
xchg
sub
push
add
cmc
sbb
in
aam
xchg
mov
out
push
add
sub
push
jno
jae
mov
pop
xchg
dec
sbb
mov
std
jle
xor
into
or
mov
inc
cmp
rcrb
mov
sarb
fnsave
int3
adc
push
xor
out
xor
mov
mov
divb
xchg
pop
mov
xor
inc
or
std
mov
xchg
pop
das
or
cmp
lds
or
lds
push
and
test
pop
mov
inc
shl
daa
pop
gs
add
cmp
lds
adc
fidivl
jmp
jecxz
or
jno
loop
inc
mov
jo
repz
aam
leave
cmp
shlb
mov
and
repz
ds
shr
xor
outsl
aad
jb
in
xor
rcrb
xor
xor
ss
into
dec
mov
and
shl
push
ds
sub
mov
enter
inc
ret
mov
dec
jecxz
rol
lcall
or
int3
push
inc
jno
and
fcomps
push
push
rorl
out
sub
inc
test
or
mov
mov
mov
and
sbb
movsl
mov
and
push
notb
insl
lea
stc
sub
or
stc
aad
out
or
or
cli
add
stc
stc
mov
adc
mov
leave
call
rcl
and
push
cmp
jbe
in
cmp
in
adc
mov
out
rorl
pop
test
repz
pop
test
or
stc
jecxz
jmp
out
jmp
lds
inc
das
and
popa
movsl
in
and
push
sub
add
add
cld
adcl
push
pop
inc
mov
roll
lock
dec
hlt
repnz
xor
push
push
jb
les
aam
repnz
xor
sbb
mul
inc
fcoml
or
mov
cmc
or
leave
xor
rorl
in
and
or
leave
inc
mov
xor
dec
add
rolb
loop
daa
roll
loope
inc
add
out
inc
pop
mov
clc
xchg
xor
ss
dec
in
dec
lret
cld
decl
dec
aam
push
jns
out
lret
mov
mov
ret
movsl
hlt
mov
adc
or
lods
jle
out
shl
cwtl
fisttpl
cld
outsl
inc
mov
xchg
and
sub
adc
adc
div
sbb
mov
inc
sbb
in
test
jb
xor
pop
mov
cmp
andb
fldlg2
das
bound
ja
setae
inc
dec
call
out
pop
sahf
mov
shlb
lret
pop
mov
daa
cmp
adc
dec
jle
roll
mov
mov
mov
cmpsb
jge
pop
nop
int
jecxz
and
or
cmpsb
and
bound
adc
adc
mov
cltd
ja
pop
lret
loopne
call
imull
aaa
and
jp
movsb
hlt
mov
and
mov
and
push
cmp
stos
push
or
and
repnz
adc
mov
loop
or
xchg
push
lret
sar
fists
push
insl
addr16
mov
gs
inc
dec
idiv
mov
je
push
mov
rorb
addl
lds
pop
push
and
jp
cmc
push
js
and
int3
cld
lret
xchg
adc
in
fucom
xchg
call
adc
rcrb
sarb
insl
push
push
shlb
jmp
inc
idivb
mov
mov
imul
es
in
adc
or
fcmove
jo
or
mov
mov
gs
iret
aad
jle
dec
xor
and
xor
mov
add
aaa
adc
sbb
pop
cwtl
fwait
mov
hlt
mov
inc
mov
jne
addr16
in
sahf
mov
clc
cmc
pusha
pop
cwtl
outsl
sub
aaa
out
outsl
inc
jge
stos
pop
ljmp
andb
pop
in
mov
fsubs
add
adcb
in
pop
dec
pop
sti
jp
dec
mov
xor
mov
roll
mov
pusha
mov
das
sahf
mov
pop
xchg
inc
fisubrl
sbb
into
and
out
fwait
pop
mov
mov
insl
shlb
test
mov
pop
stos
int
or
movb
jmp
fcompl
loopne
hlt
mov
cmp
push
lahf
lock
push
jae
xchg
ljmp
sbb
mov
dec
jle
enter
imul
cmp
pop
lahf
loop
dec
call
mov
rclb
and
jp
into
loope
jg
popf
rcl
scas
jbe
test
add
clc
sbb
gs
inc
adc
push
and
or
lods
xorb
push
mov
sbb
dec
sub
inc
ret
add
loope
repnz
stos
pop
ffree
in
stc
sbb
in
xor
push
fcmovu
ficomps
xchg
in
int
cli
dec
call
ljmp
iret
mov
cmp
sub
aas
mov
mov
adc
sarl
movsb
sub
xchg
jne
movsb
loope
pop
sub
inc
mov
repnz
adc
outsb
mov
cmpsl
cmp
cmp
lahf
xchg
xchg
push
cmc
lods
or
dec
scas
mov
cli
fwait
mov
popa
cld
sub
and
aam
test
movsl
xchg
mov
inc
xchg
push
sub
ds
in
aad
and
fistpll
lods
das
pop
and
adc
in
cmp
pop
and
jae
test
lea
add
adc
nop
enter
dec
mov
dec
outsl
loopne
sbb
mov
mov
cmp
push
xor
in
idivb
jl
shl
sbb
push
adc
or
data16
ss
or
fld1
aaa
aaa
cmc
jmp
pop
lcall
push
xchg
inc
mov
or
push
mov
cwtl
into
and
xor
sub
test
inc
fists
icebp
adc
mov
mov
aaa
pop
xchg
fimuls
mov
orl
cwtl
into
jbe
cmp
aam
sub
mov
je
dec
jge
jecxz
stc
cmp
sub
aad
and
scas
mov
mov
inc
inc
add
cli
lods
xchg
sahf
sbb
cwtl
into
sbb
mov
tzmsk
inc
in
push
mov
clc
lds
std
adc
mov
mov
xchg
push
testb
addr16
rolb
leave
jne
inc
cmp
cmc
outsl
and
ljmp
pop
pop
pusha
filds
cmp
lret
jmp
clc
sbb
jnp
fdivr
lods
pop
mov
mov
add
lcall
sbb
inc
sbb
mov
stc
call
cmp
jmp
hlt
imul
icebp
mov
daa
pop
jns
jmp
cmp
addr16
jge
dec
lahf
cmp
stc
mov
jns
xchg
lock
cmp
or
jge
sbb
jmp
cltd
push
out
movsb
aaa
imull
mov
in
daa
or
xchg
sub
mov
mov
mov
push
jmp
or
lods
pop
push
mov
lret
sahf
inc
scas
lcall
in
loopne
lods
sahf
hlt
mov
cmp
fbstp
cmp
pop
insl
push
mov
dec
cmc
xor
ficoml
mov
mov
sbb
inc
mov
push
int3
rep
ss
or
cmp
jo
shll
gs
jne
pop
aaa
push
or
adc
push
ljmp
addr16
sbb
push
out
mov
scas
cwtl
inc
cmpsl
inc
inc
xchg
xchg
pop
int
jae
test
mov
rolb
clc
dec
ficompl
xchg
hlt
mov
sbb
int3
mov
xor
mov
loope
jno
adcl
xor
jnp
dec
add
mov
sbb
sbb
ret
pushf
push
pop
int3
xchg
fadd
add
je
ret
xchg
ljmp
jmpw
rolb
lret
or
xor
push
or
pop
decl
mov
sti
lcall
adc
pusha
lea
call
jmp
pushf
call
xchg
xchg
add
add
add
add
add
or
add
mov
add
add
nop
das
add
add
add
stos
das
add
add
add
add
add
das
add
add
add
dec
sub
add
add
mov
add
add
add
addb
add
or
add
je
add
pusha
das
add
add
add
add
add
add
add
lods
das
add
das
add
jbe
add
das
add
add
add
addb
add
jo
daa
movsb
in
insb
mov
setno
pushf
push
lods
jmp
mov
in
hlt
mov
jle
mov
xor
push
mov
test
cmp
lret
dec
mov
ljmp
and
mov
xchg
jp
jns
lret
jbe
icebp
jns
mov
or
repnz
aas
add
test
jge
sub
lods
sbbl
roll
enter
xchg
mov
or
add
xor
aam
cmp
jbe
out
jmp
sub
fwait
hlt
mov
jno
mov
jne
push
pop
jmp
inc
sub
in
jle
xchg
dec
jle
adc
and
mov
mov
dec
or
ss
pop
and
mov
mov
loop
add
pushf
mov
jl
jge
jnp
shrl
mov
cs
mov
dec
sub
inc
jle
xor
pop
popf
fisubrl
sub
jge
shll
and
ja
pushf
pushf
lea
jb
jmp
sbb
fwait
hlt
mov
lret
in
fisubrs
inc
icebp
adc
jmp
jbe
arpl
mov
mov
lods
sbb
out
outsb
into
test
mov
loope
mov
add
dec
cwtl
pop
push
jno
into
xchg
cmpsb
sub
je
arpl
popf
shrb
pop
mov
jge
pop
aam
add
mov
pop
data16
les
inc
push
imul
jmp
mov
add
dec
pushf
pop
mov
mov
out
in
inc
repnz
pop
nop
int
fwait
hlt
mov
or
adc
adc
push
fsubrp
out
dec
inc
imul
sbb
xor
mov
stos
lock
or
and
xchg
loopne
adc
imul
arpl
xlat
int
xor
mov
dec
movsb
daa
cld
mov
push
rcr
jp
popa
pop
int
mov
cmpsb
inc
cmc
rclb
sbbl
pop
push
imul
cmpsl
or
iret
xor
mov
jmp
xor
xchg
sub
jno
mov
adc
ljmp
hlt
mov
mov
adc
mov
imul
out
add
lds
inc
outsl
inc
jle
inc
add
data16
jns
jns
cs
fwait
sbb
cmc
xchg
repz
lret
cmpsl
leave
pop
aad
fdivrs
loopne
loope
popa
pop
js
les
mov
ficoml
inc
or
sbb
mov
call
sahf
adc
jge
call
sub
cltd
hlt
mov
daa
call
or
xor
and
cmp
sub
ljmp
fcmovu
xchg
add
xchg
adc
dec
dec
sub
dec
and
mov
jns
and
xor
jae
dec
icebp
mov
pop
pop
jg
loopne
and
addl
addr16
stc
outsb
ljmp
xchg
imul
sub
mov
iret
adc
jae
add
icebp
jmp
inc
cmp
push
enter
xchg
inc
jle
ret
add
cmpsl
adc
push
ret
inc
sbb
add
adc
stos
jns
test
ljmp
lds
int3
aas
jecxz
mov
mov
leave
outsb
scas
xchg
into
divb
cs
test
mov
sbb
je
adc
adc
insl
lock
rcrl
cltd
hlt
mov
mov
je
xchg
cmpsl
sbb
mov
push
xor
jecxz
imul
dec
ljmp
shll
and
and
stos
pop
fidivrl
ret
mov
enter
and
push
jb
repz
push
loopne
pop
sbb
jb
out
repnz
push
roll
sub
pop
cltd
hlt
mov
test
sbb
das
nop
adc
iret
dec
in
enter
lret
cmp
add
push
fcomps
jmp
cli
or
mov
dec
adc
sbb
dec
rclb
popf
enter
jnp
push
popf
int3
push
add
inc
push
je
adc
out
dec
enter
mov
js
bound
mov
inc
out
out
out
add
sbb
mov
sub
sahf
mov
out
fstl
jecxz
sub
xchg
out
jnp,pt
cwtl
hlt
mov
lcall
add
leave
es
sub
sub
enter
cwtl
pop
fisubs
lret
call
pop
iret
push
cli
mov
into
sbb
loopne
or
pushf
arpl
mov
mov
mov
sub
pop
insb
cmpsb
popf
test
pop
xor
push
cltd
pushf
dec
jb
mov
ljmp
test
aaa
jmp
call
mov
loope
push
push
mov
mov
stc
pushf
in
mov
or
ret
mov
cmp
insl
sahf
pop
out
stos
sub
fiadds
sbb
mov
lret
adc
inc
add
mov
mov
dec
jo
xchg
lcall
subl
std
test
push
stc
cmp
adc
dec
xchg
push
push
sahf
xor
push
es
jl
mov
or
shll
xor
jbe
mov
cli
dec
lods
das
sti
inc
ljmp
adc
pusha
mov
push
mov
cld
dec
ljmp
xor
pop
cmp
enter
sbb
shll
daa
or
fwait
addl
mov
xchg
xlat
cmp
push
addl
jbe
fdivrl
push
mov
fisubs
push
les
rcll
xchg
hlt
mov
pop
dec
and
out
aad
jmp
sub
push
js
std
out
xlat
js
mov
xchg
inc
mov
xlat
je
jo
push
rorl
and
push
add
sbb
repnz
sti
inc
dec
stos
pop
mov
fs
adc
test
popf
gs
jmp
repz
lods
dec
xchg
hlt
mov
cmp
push
outsl
adc
gs
xor
jg
pushaw
and
sbbb
cmp
mov
push
out
xor
imul
repz
rcll
push
pop
orb
and
movsb
addr16
shll
aaa
and
call
xchg
addr16
in
std
dec
fimuls
daa
sbb
jmp
pop
xchg
movsb
push
andl
add
pop
repz
in
mov
push
mov
push
out
mov
inc
mov
adc
data16
jnp
dec
leave
and
mov
daa
sbb
int3
test
lcall
sub
repz
inc
push
dec
popf
jle
shlb
sub
js
dec
jb
pop
rolb
and
push
xchg
imul
inc
sbb
jle
je
or
outsb
mov
insl
push
sub
jae
xchg
hlt
mov
jb
les
push
cld
sub
ja
lcall
xchg
loopne
jae
cld
shlb
in
inc
xor
repz
dec
cmpsb
adc
or
push
lea
adc
movsl
das
cmpsw
addr16
lcall
cmp
jp
lock
sub
add
enter
jg
sbb
cmp
dec
sbb
insl
shl
aaa
lcall
outsl
and
stos
movsl
cmp
imul
call
adc
xchg
hlt
mov
test
cli
loop
cld
mov
mov
cmp
out
or
sub
mov
js
sbb
sbb
pop
adc
xchg
mov
out
fmul
xor
mov
cmp
adc
sbb
enter
fidivrs
ret
inc
mov
dec
inc
sbb
inc
addl
dec
mov
mov
mov
mov
test
std
shl
out
pushf
pop
andb
fsubp
and
shr
lret
pop
add
pop
pushf
pop
xchg
hlt
mov
dec
insl
into
adc
mov
cmp
push
dec
std
hlt
mov
outsb
and
inc
xorl
push
push
xlat
mov
popf
add
fmull
xchg
loopne
add
pop
aam
divl
jp
ret
push
mov
stos
mov
insl
mov
ja
push
adc
mov
inc
jl
mov
fiaddl
fs
fimuls
cmp
and
mov
daa
jl
mov
outsl
ret
xor
xchg
hlt
mov
das
xor
rolb
movsb
cmc
xchg
sub
mov
dec
std
inc
pusha
scas
ljmp
cwtl
pop
push
inc
inc
add
clc
imul
push
out
cmp
sub
lds
dec
enter
loope
pop
sbb
arpl
mov
or
stos
and
loop
cmpl
and
dec
sahf
fisttpl
popa
fbstp
cmpsl
fs
xor
insl
rcrb
pusha
ret
push
test
pop
or
mov
aad
xchg
cli
xchg
hlt
mov
adcb
inc
ja
pop
cli
dec
inc
or
in
add
lods
push
fsubrs
mov
mov
pushl
addr16
shlb
push
cmpsb
fldenv
sbb
out
incl
lahf
xor
mov
test
js
js
imul
repnz
pop
pop
cli
fisttpl
xor
dec
sbb
lods
outsl
in
movsl
mov
jbe
inc
and
cmpsb
cmpsb
test
jmp
movsbw
mov
pusha
lea
jmp
cs
pop
xchg
hlt
mov
cmp
jb
xor
push
loop
in
jge
cmpsl
lcall
mov
mov
pop
test
fimull
and
sarb
xor
push
fcmovnbe
mov
dec
cmp
mov
lea
ds
sbb
push
xchg
or
mov
cwtl
xchg
test
nop
mov
test
hlt
mov
sbb
fdivrp
add
shlb
pop
stos
out
sub
icebp
mov
in
or
xchg
arpl
repnz
cmc
mov
lret
cmp
or
pop
ret
xchg
insb
jmp
jne
jae
or
sbb
int
adc
dec
or
pop
icebp
fiadds
xor
mov
or
pop
xor
and
test
rcrl
pop
mov
jle
push
add
jo
mov
in
jg
add
out
pop
xor
ficomps
xchg
pop
cmp
push
push
neg
push
jmp
push
sub
jg
mov
addr16
daa
sub
sbb
in
addr16
stos
or
fisttpll
pop
push
imul
gs
and
mov
mov
mov
push
imul
out
ja
mov
add
mov
push
mov
test
aaa
je
adc
ss
test
xchg
xchg
dec
imul
cli
mov
lods
outsl
bound
mov
mov
and
hlt
mov
bound
and
push
ja
or
fsubrs
sub
incb
push
mov
xchg
pusha
and
jae
mov
cmp
arpl
adc
insl
xchg
push
mov
stc
pop
sub
inc
call
add
addr16
out
ss
pop
adc
pop
enter
cld
test
in
pop
cli
neg
shr
test
mov
pusha
pusha
pushf
add
jge
and
pushf
add
push
mov
movw
lea
jmp
mull
hlt
mov
inc
daa
cwtl
cmp
mov
sub
or
stos
or
add
or
cmpsl
sahf
or
pop
add
cmp
or
enter
jne
dec
outsl
pop
add
scas
ret
mov
sahf
mov
push
pop
std
mov
clc
or
in
aad
fstpt
pop
lcall
add
add
adc
mov
mov
stos
lret
pushf
popf
notrack
popa
ret
jne
or
pop
adc
outsl
fsub
insl
push
daa
or
cli
inc
mov
les
sub
inc
pop
dec
pop
out
cltd
ds
inc
mov
pop
in
xchg
and
or
scas
sub
jns
push
add
xor
sbb
xchg
loop
stc
ss
cmp
xchg
fcmovu
mov
ljmp
andb
dec
ljmp
jnp
adc
sub
mov
sub
mov
mov
es
pop
imul
inc
loop
insb
in
pushf
jmp
scas
insl
out
push
daa
enter
xchg
mov
call
stos
cmpsl
negb
mov
ja
jno
adc
add
scas
imul
mov
imul
out
xchg
adc
jbe
pop
xchg
lea
in
mov
cs
stos
pop
dec
or
and
jl
jmp
outsb
xor
out
or
iret
inc
popa
and
jle
sti
push
mov
mov
pop
fsubrl
add
and
clc
fwait
test
sti
shlb
push
cmpsb
mov
sub
lods
sub
lock
sub
scas
sub
xlat
pop
lods
xchg
lock
dec
adc
and
xor
and
xlat
call
jmp
gs
stos
out
xchg
fs
ljmp
int
push
data16
pusha
bswap
mov
jmp
cmp
push
xchg
sub
pop
jl
pop
xor
inc
push
mov
loop
jae
adc
or
punpckldq
mov
mov
adc
inc
or
imul
mov
or
and
insl
push
les
mov
jne
push
and
cltd
or
insl
mov
hlt
pop
arpl
dec
mov
cltd
inc
fisttpll
sub
stos
mov
mov
outsb
clc
mov
push
nop
inc
sbb
or
mov
pop
ret
sub
pop
add
and
dec
out
loopne
push
arpl
movsl
cmpsb
negl
and
push
mov
pushw
cli
inc
lcall
or
mov
cld
insl
mov
jmp
push
push
inc
or
clc
into
xchg
or
sbb
lcall
xor
sbb
jns
sub
lods
dec
movq
pop
jmp
cmpsb
sbb
mov
repnz
loope
pop
test
jle
xchg
scas
jb
push
rsqrtps
pusha
lods
imul
xchg
in
ss
cld
jnp
stc
outsb
cmpsb
mov
call
fisubs
rorl
cmp
or
pop
arpl
mov
fcmovb
push
mov
aam
hlt
push
mov
jge
cmpsl
mov
hlt
mov
sbb
dec
cltd
lods
cmp
adc
daa
cli
stos
dec
icebp
popf
loopne
sub
adc
fldenv
ss
xor
lea
test
sub
adc
in
add
aas
notb
mov
hlt
push
mov
adc
cmc
in
addl
pushf
mov
mov
xchg
push
cmpb
jae
mov
jmp
mov
mov
aam
cmpsb
ja
sbb
dec
fiadds
and
in
xor
or
in
pusha
popf
xchg
inc
inc
mov
mov
pop
adc
test
das
jecxz
xor
push
xor
adc
jmp
lods
and
dec
ljmp
rcrb
mov
icebp
pop
lcall
fs
je
hlt
mov
jl
mov
and
test
and
xchg
xchg
and
adc
cmp
dec
inc
dec
xor
cs
insb
add
mov
enter
sbb
dec
iret
shlb
push
adc
je
fisttpll
sbb
imul
cmpsl
inc
leave
gs
cmp
push
sahf
insl
out
dec
daa
xor
mov
ja,pn
cwtl
mov
push
cmp
xor
add
sarl
insb
pop
fadds
push
and
mov
or
mov
fdivs
jnp
push
push
push
jmp
repz
mov
mov
lahf
add
bound
hlt
in
cmpsl
push
xor
in
lock
lret
cmp
xor
stos
idivl
mov
stos
jmp
lret
dec
pop
lret
jmp
dec
mov
dec
or
and
and
jb
xor
int
fmull
aaa
lret
cmpsl
dec
mov
movsl
into
push
addr16
mov
loop
jbe
mov
push
xor
and
cld
pop
jo
cmpsb
int3
sbb
stos
pop
mov
mov
mov
aam
push
push
dec
mov
into
daa
cmp
sarb
mov
push
out
jo
aam
add
lcall
mov
fisubl
movsl
dec
test
push
add
jle
dec
fcom
popa
popa
sbb
test
jae
xchg
lock
lods
sbb
push
adc
out
cmp
xor
js
adcl
clc
mov
pop
fwait
mov
mov
pop
mov
xor
cmp
frstor
cmpsb
and
jl
cli
jnp
inc
xor
add
xor
xor
mov
fcomps
mov
push
adc
sbb
lds
cs
xor
imul
jge
mov
movsl
dec
cli
mov
jbe
cmpb
repz
jne
test
sbb
push
adc
popf
xor
mov
adc
mov
imul
sbb
sbb
mov
add
mov
push
pushl
ret
jno
sbb
cs
rolb
push
fs
ja
mov
fisubl
int
pop
scas
jnp
loop
sub
movl
ret
leave
shrb
testb
xor
je
push
jne
nop
imul
adc
popf
mov
cmpsl
insl
out
into
mov
or
imul
mov
loop
mov
out
mov
cmp
scas
jne
lea
or
iret
or
xchg
nop
jle
cs
ret
sbb
test
xchg
fldl
ret
ss
int3
pop
bound
gs
mov
add
addb
mov
in
scas
pop
lock
push
aas
pushf
fdivrs
jns
adc
clc
xor
or
mov
xor
ret
out
and
adc
pop
mov
lds
jae
cmpsl
rclb
rcll
xchg
into
clc
jmp
icebp
mov
in
popa
cmp
xchg
stos
jmp
jns
add
ljmp
stc
sub
push
or
cmovle
nop
xchg
inc
std
out
mov
push
push
fs
mov
cltd
cmp
pushf
lods
das
cld
test
jecxz
pop
enter
mov
movsb
in
test
iret
mov
cmc
cli
movsl
loope
cli
or
mov
imul
dec
fnstsw
lret
xchg
jecxz
add
stos
dec
pop
shlb
add
adc
ret
test
mov
mov
aas
in
push
out
inc
sub
jnp
mov
xchg
arpl
cld
push
stos
fcmovb
aas
loopne
aas
shlb
stc
cld
outsl
mov
cwtl
mov
jno
roll
lds
movl
pusha
pushf
lea
jmp
xchg
add
xchg
mov
jp
in
sub
inc
inc
hlt
push
cwtl
lret
mov
fnstenv
movl
js
inc
pop
xor
inc
add
jb
outsl
pop
push
daa
jae
arpl
sub
sahf
sbb
nop
and
scas
aas
mov
inc
mov
out
dec
and
je
pop
dec
into
scas
sbb
into
shrb
pop
imul
ret
lret
pop
xor
mov
sub
ds
mov
adc
mov
push
inc
adc
push
cwtl
jns
imul
and
jae
inc
push
fistpll
fwait
cld
dec
les
rolb
test
mov
int3
mov
push
lahf
or
std
into
cmpl
fimull
xchg
pop
fistps
jmp
and
push
mov
insb
mov
inc
pop
sbb
dec
sahf
dec
pop
lret
mov
rolb
adc
test
push
pop
sbb
into
mov
adc
inc
test
cmc
add
iret
cmp
test
mov
outsl
xor
out
pop
xchg
incl
push
enter
sbb
inc
cwtl
cmp
dec
lods
fisttpll
mov
xchg
cmpsl
xchg
jb
icebp
add
mov
enter
mov
ds
rorl
mov
jbe
fmull
mov
lea
dec
jbe
or
insl
adc
mov
imul
repz
add
xor
pop
inc
lea
cmp
pop
outsl
mov
mov
jno
push
mov
push
daa
pop
mov
sbb
xor
push
popa
inc
notb
inc
test
mov
popa
adc
in
push
xchg
fldcw
dec
mov
fadds
mov
les
movsl
push
jnp
jle,pn
jne
movsb
inc
into
aas
shrb
test
test
xchg
mov
loopne
iret
push
mov
jnp
shl
or
pop
roll
sahf
inc
loope
movsl
sub
dec
fisttpl
call
or
jle
stos
outsl
jb
pop
sbb
shll
xor
push
clc
nop
adc
cmpsl
andb
test
mov
add
cmc
imull
jmp
in
iret
lea
push
jbe
repnz
inc
and
out
stc
mov
xchg
xchg
lcall
and
or
out
fadds
xorb
lds
push
mov
push
xorl
adc
jl
mov
ds
ret
xchg
test
insb
or
xchg
xor
add
cmp
pop
mov
ret
outsl
add
repnz
mov
popa
dec
popa
or
js
hlt
adc
mov
jno
inc
xor
cmpsb
inc
dec
fwait
mov
out
stos
das
loope
cmpsb
inc
call
mov
cltd
fs
push
xlat
dec
xchg
adc
push
scas
out
mov
imul
js
push
xor
pop
push
mov
xchg
leave
loopne
cmp
int
std
js
sti
outsb
mov
pop
jmp
xchg
add
lcall
mov
hlt
sub
stos
pop
test
mov
sub
adc
movsl
mov
aam
imul
js
mov
les
pop
mov
daa
adc
and
pop
or
jno
inc
push
adc
jb
mov
leave
jmp
mov
pushf
call
xchg
stos
addr16
mov
and
outsb
mov
test
scas
imul
push
pop
pop
jo
pop
outsl
mov
or
cmpleps
inc
enter
les
inc
pop
jp
sbbb
add
and
xor
push
dec
adc
repnz
ljmp
push
dec
jge
pop
or
lret
cltd
sbb
scas
and
push
shll
mov
jmp
sbb
inc
mov
imul
sub
mov
sbb
mov
mov
imul
inc
sub
pusha
arpl
mov
es
mov
jns
mov
daa
add
test
xor
call
add
dec
outsl
popa
fs
imul
add
xor
pushl
call
ljmp
hlt
mov
fstpt
inc
add
pop
lret
jl
test
mov
sub
add
out
ret
leave
ds
imul
push
lds
clc
scas
rolb
mov
jl
lods
sbb
pop
sbb
ficoms
mov
jp
mov
jo
mov
mov
or
lret
out
sub
mov
flds
push
add
ljmp
in
mov
icebp
addr16
enter
enter
mov
nop
add
adc
cmc
rcrl
rolb
fnstenv
int3
mov
sbb
xchg
pop
andb
or
in
lock
gs
push
movsl
adc
pop
sub
divb
push
lods
sbb
push
repnz
rep
inc
mov
sbb
push
ror
cs
add
loop
xchg
dec
popf
push
mov
subl
push
dec
sub
repnz
xchg
jb
jbe
mov
movl
mov
pop
call
sarl
mov
mov
push
insb
insl
out
mov
cmp
push
imul
iret
or
mov
sub
xchg
push
adc
mov
inc
rcrl
mov
xchg
ret
jp
aaa
mov
pop
mov
out
xchg
adcl
lds
cwtl
mov
in
bound
sub
pop
add
addr16
out
out
in
out
add
pusha
or
mov
out
adc
mov
das
aad
inc
stc
stos
into
cmp
inc
push
aad
xchg
or
sub
fildll
insb
pop
sbb
and
push
mov
loope
sbb
push
push
fimull
adc
subl
jno,pn
insl
jbe
mov
fdivl
cmp
lea
xor
push
dec
xorb
adc
addr16
pop
shrb
cmp
lahf
shlb
arpl
push
push
add
lods
sti
fidivs
mov
stc
enter
lods
lcall
push
stc
inc
les
cli
cmpb
and
xor
ja
lds
stos
nop
outsl
gs
cmp
and
mulb
adc
cmp
jge
jecxz
jns
push
fisubl
lahf
mov
std
cmp
cmp
movzwl
xor
bt
clc
mov
cmp
add
cmp
test
bt
mov
bt
test
test
call
ljmp
hlt
mov
mov
xchg
ret
xchg
inc
testl
mov
push
mov
push
push
mov
add
jb
out
movsl
divb
jl
xchg
xlat
xchg
int3
xchg
fstp
fistpl
popf
gs
mov
jle
adc
xchg
fwait
sbb
loope
loop
xchg
pop
inc
mov
add
inc
adc
insl
sub
ja
sub
rcrb
pop
std
scas
pop
pop
pop
mov
xchg
cld
sti
adc
inc
push
add
and
sub
mov
cld
cmpsb
add
pop
lods
cmp
mov
push
jbe
dec
mov
cmp
xchg
sub
inc
xchg
inc
jle
mov
shrb
mov
lret
pusha
ret
movsb
xchg
stos
test
aaa
inc
adc
loopne
mov
popf
ljmp
in
inc
les
jno
test
mov
sbb
testl
or
sbb
addr16
xor
or
jb
dec
fmuls
or
lds
imul
jns
fcmovb
rcll
lea
bound
adc
push
add
rcll
aaa
mov
ds
in
stos
pop
xor
mov
mov
sbb
jge
mov
mov
outsb
pushl
andl
or
jp
imul
jmp
stos
ss
test
repnz
push
sub
xor
rcll
in
and
and
ficoml
rorl
mov
lret
lret
popa
rclb
daa
mov
pushl
repnz
push
adc
in
cmp
aam
in
push
mov
add
int
adc
push
jno
push
pop
aam
repnz
pop
push
loope
testl
or
daa
cli
in
nop
imul
sahf
push
add
and
movzbl
xor
stc
mov
shl
bsf
neg
daa
mov
inc
shr
inc
mov
test
pusha
bt
jmp
inc
call
cld
std
jl
mov
movsl
jbe
push
popf
fsubrp
inc
jae
pusha
test
sub
or
ljmp
push
movsb
adc
ja
cli
dec
push
ds
xor
and
push
out
icebp
jae
pop
jnp
stos
mov
mov
mov
add
or
mov
sbb
sub
inc
call
insb
icebp
push
jbe
inc
cmpsb
sbb
repnz
aas
bound
loop
js
scas
icebp
je
addr16
loope
mov
jbe
movsl
push
jge
mov
mov
js
push
fmull
xchg
iret
mov
mov
mov
push
scas
mov
mov
sti
imul
lahf
lock
scas
cli
leave
and
mov
sub
sub
lahf
adc
loop
xchg
mov
aad
adc
test
or
mov
fwait
icebp
jo
inc
faddl
cmpsb
jecxz
lock
jmp
mov
dec
mov
ss
mov
jmp
adc
xchg
dec
ljmp
jnp
mov
mov
lds
call
mulb
fcmovnb
mov
or
popa
or
repnz
and
xorl
int
rcll
fiaddl
mov
and
pop
xchg
cmc
pop
icebp
adc
lret
jp
jl
jo
hlt
mov
jae
or
ret
dec
fnstsw
add
adc
dec
lea
scas
push
inc
mov
and
cmp
lret
inc
leave
jnp
mov
lahf
rclb
mov
test
std
fiadds
fcmovnb
mov
cld
jno
or
popf
scas
dec
sbb
loop
adc
mov
or
aam
fsubs
mov
iret
inc
negl
adc
lret
mov
faddp
jle
or
push
pop
pop
pop
or
ljmp
mov
neg
pop
stos
pop
ret
sbb
add
mov
roll
sub
and
enter
int
xor
xlat
mov
xor
jnp
mov
and
test
xbegin
sub
into
inc
cmp
lods
scas
and
rclb
push
xor
push
loope
dec
cli
lods
sbb
cmp
shlb
add
popf
adc
jae
fdivs
pusha
iret
movsb
jg
mov
dec
enter
cmpsb
sahf
pop
jmp
cld
dec
and
inc
insb
push
mov
mov
outsb
xchg
dec
cs
sbb
dec
stc
fimull
sbb
cli
mov
aas
subb
nop
andl
cmp
movsl
push
add
adcl
mov
mov
mov
pop
jns
arpl
je
insl
scas
and
int3
and
cld
imul
and
lahf
pusha
xchg
jb
cwtd
sbb
ret
ficoms
movsb
testl
mov
dec
aad
mov
lret
and
lea
pop
dec
pushf
dec
stos
je
mov
jo
xchg
xlat
mov
call
jo
cli
push
das
and
pop
mov
fcmove
jo
jns
jns
pop
scas
mov
enter
and
mov
cmp
mov
icebp
hlt
fisubrs
add
shrl
mov
add
cld
jmp
push
lahf
and
mov
cmp
bound
adcl
sub
mov
std
add
jp
adc
adc
mov
fstl
mov
hlt
popa
cld
mov
aad
stos
and
mov
data16
dec
insl
and
cmpsb
jns
adc
les
das
or
fs
ja
pushf
lea
jb
push
lea
jl
clc
bt
cmpb
pusha
pusha
call
fists
hlt
mov
repz
cmc
push
ja
jns
cmp
sbb
sub
aam
mov
mov
cmpsb
xchg
push
into
sub
xor
sbb
adc
and
jno
fucomi
jo
dec
inc
jbe
movsl
mov
lds
inc
add
mov
mov
pop
addr16
inc
dec
mov
jno
aaa
mov
mov
bound
jg
mov
mov
lods
dec
jns
mov
or
das
mov
xchg
add
mov
jne
int
sbb
stos
inc
mov
cmp
mov
in
adc
addr16
call
jl
dec
pop
lcall
sub
test
sbb
cltd
push
and
dec
fisubrl
xchg
sti
cmpsl
ljmp
jns
mov
add
test
sahf
xchg
xchg
pop
sbb
lock
add
push
lcall
push
mov
lock
mov
adc
out
or
sbb
das
inc
test
shlb
cmp
mov
addr16
push
bnd
scas
popw
arpl
movsl
push
js
sub
divb
add
ljmp
movsl
movsl
sahf
mov
hlt
ret
xor
push
lods
xchg
mov
push
adc
gs
repz
push
imul
inc
mov
adc
repz
frndint
pop
mov
call
xor
sub
xor
fwait
pop
ja
mov
mov
mov
mov
cmp
sub
inc
int3
or
jle
cli
inc
lds
xor
cs
fsubrl
dec
xchg
xlat
inc
mov
pop
inc
clc
sub
mov
sub
or
cmpsb
repz
loop
sbb
fnstsw
test
sub
sub
sahf
inc
jle
arpl
inc
loope
sbb
test
cs
mov
push
adc
rorl
xor
loop
hlt
mov
stos
fsubr
ds
loopne
loop
fs
xchg
repz
sub
or
repz
mov
aas
mov
adc
jns
es
jbe
xor
adc
test
pop
or
push
outsb
mov
imul
scas
das
sub
mov
sbb
xchg
or
lds
loopne
jecxz
pop
inc
add
xor
cmp
das
or
popf
outsb
or
mov
jge
push
jo
jmp
fists
std
and
xchg
aas
xor
jle
mov
inc
hlt
ja
add
add
push
bt
bt
cmp
pushf
call
pusha
mov
pusha
movl
pushf
mov
movw
mov
mov
movb
push
pushl
pushf
pushl
ret
dec
rorb
mov
pop
stc
cmp
jo
ret
xchg
xchg
add
mov
cmp
les
aas
test
xlat
push
lea
jne
mov
sub
push
pop
mov
jno
loop
add
in
jle
std
xor
add
mov
scas
pop
repnz
gs
loop
adc
cmp
inc
jo
adc
lret
mov
push
je
sahf
add
and
sub
shl
addr16
nop
push
mulb
sub
inc
sub
je
mov
jb
aam
out
pop
imul
add
sbb
jnp
fmul
push
dec
jl
pop
ljmp
sbb
pop
mov
mov
mov
ds
in
push
fisubrs
cmp
jbe
les
fsin
es
jo
xchg
test
and
xchg
dec
jne
rcl
jbe
adc
sti
pop
and
rcl
push
sub
jecxz
sbb
movsl
cmp
xor
jnp
ror
aaa
ret
mov
testb
stos
jmp
scas
push
mov
in
add
cmp
mov
shlb
cs
add
sahf
lahf
mov
sbb
jae
ljmp
push
sub
ret
dec
mov
xor
int3
pop
push
es
dec
dec
inc
push
dec
xor
cs
insb
add
mov
inc
push
idivl
cli
sub
iret
rclb
std
push
push
bnd
mov
push
push
insl
push
xlat
push
mov
sub
dec
adcb
repz
xchg
adc
pop
pop
adc
jb
jl
add
xor
jmp
loopne
or
sbb
adc
pop
add
ljmp
mov
mov
fdivp
das
inc
add
push
out
push
push
cmp
and
into
jp
es
stos
popa
xchg
test
repz
and
hlt
mov
sub
sbb
cmp
out
call
cli
rol
dec
aas
ss
fldl2e
roll
fs
shll
fadds
jle
mov
sti
push
aam
inc
mov
das
jnp
xchg
sub
cmp
mov
jb
insl
mov
and
xchg
xchg
mov
push
xchg
cld
sub
and
test
popl
push
in
sub
fidivs
addl
shll
nop
mov
rcll
addr16
incl
dec
jae
mov
push
pop
mov
in
xchg
dec
jmp
inc
lret
ror
dec
and
or
xor
or
lock
shl
add
stos
addr16
loop
add
das
aas
and
test
add
mov
div
add
cmp
sbb
mov
pusha
ret
punpckldq
je
pushf
cmc
clc
cmp
into
mov
std
out
shl
ja
or
or
insb
fmul
xor
mov
neg
mov
bt
test
pushf
repnz
pushf
jmp
js
inc
jae
mov
int
scas
xorb
cmpsl
sbb
xor
imul
push
addr16
dec
sbb
inc
xchg
sbb
pushf
int
sbb
push
sbb
mov
cmc
dec
pop
aad
xchg
loop
push
adc
iret
push
sbb
add
jg
sub
add
jns
adc
push
adc
xor
cmpsl
daa
mov
push
addr16
sbb
jle
in
jp
pusha
mov
dec
dec
filds
outsl
fldcw
cmpsb
int3
outsl
bound
cmp
dec
mov
xor
testb
js
insb
push
lds
cli
dec
dec
xchg
data16
jmp
jg
cmp
dec
cld
pop
pop
mov
inc
xlat
or
lea
jns
fnstsw
add
jb
jp
dec
je
fdiv
cld
ret
sbb
push
mov
scas
nop
jp
cltd
mov
sti
push
outsb
xor
arpl
sbb
mov
shll
xor
pop
int
inc
mov
xchg
add
xchg
outsb
jnp,pt
jno
mov
push
cmp
mov
loopne
loop
xor
xchg
mov
lds
dec
pop
mov
rolb
add
negb
pop
lret
lea
notl
jge,pn
sub
cmp
rorl
sti
sub
movsb
push
or
repnz
xor
movsb
xchg
or
or
inc
call
push
xchg
mov
dec
fnsave
arpl
pop
roll
push
or
jno
mov
je
data16
pop
ljmp
rol
stos
pop
inc
adc
sti
jle
cmp
xchg
hlt
sub
adc
pop
je
add
rorl
inc
pop
sub
jecxz
scas
cltd
int3
lods
push
and
xor
shr
int
adc
add
std
out
mov
jnp
sahf
or
sbb
mov
mov
rorl
jae
test
mov
inc
mov
mov
mov
mov
test
push
loope
xchg
fisubrl
add
mov
mov
je
outsl
hlt
mov
ja
imul
sub
mov
test
and
pop
mov
icebp
cs
add
xchg
cwtl
sub
xchg
pop
je
xchg
inc
repnz
lds
rolb
jg
scas
pop
pop
mov
cs
test
adc
loope
loop
sbb
stos
lea
je
pusha
pushf
call
xor
lret
pushl
inc
and
gs
cmp
mov
inc
sbb
mov
push
xchg
sbb
int
cwtl
dec
lcall
gs
mov
jae
ret
jle
mov
pop
and
incl
call
out
push
sub
fisttpl
sahf
scas
adc
out
bound
xor
dec
sub
push
xchg
pushl
lea
ja
ror
cmp
sub
bswap
bsf
btc
pushf
add
add
shr
inc
cmp
push
mov
sub
and
mov
cmp
test
stc
repnz
jmp
pusha
pushf
not
pushf
call
lea
ja
push
pusha
bswap
pushf
mov
pop
pushf
mov
pushf
not
not
pushf
mov
movzbw
bswap
pushf
mov
call
movl
jmp
lea
ja
not
or
cmp
sub
test
add
movsbw
mov
rcr
mov
clc
cmp
cmc
cmc
repnz
call
pushf
inc
lea
jae
jge
cmp
test
neg
push
lea
jo
inc
call
fnstenv
outsb
hlt
mov
push
and
push
test
push
dec
aaa
and
aam
mov
or
data16
xchg
dec
dec
dec
mov
cmpsl
fwait
xchg
xor
lret
cmp
or
adc
arpl
jge
adc
pushf
call
sbb
pop
sub
inc
nop
psubb
push
cmpsb
xchg
push
rorl
icebp
mov
dec
aam
nop
into
inc
repz
pop
rcl
jns
push
or
mov
sarl
fiaddl
and
jns
scas
xchg
mov
jmp
sub
pop
pop
push
sub
outsl
bound
inc
fs
je
insl
inc
add
cmp
hlt
mov
insl
ds
xor
and
aad
imull
or
jne
add
cld
lahf
jbe
fimull
mov
mov
iret
inc
sbb
pop
sbb
bound
inc
cli
mov
loopne
lock
xor
jp
js
into
loop
pop
insl
rcrb
pop
lea
fbstp
outsl
and
fs
js
xor
adc
or
pop
lret
dec
int3
loop
mov
in
sub
or
add
dec
cs
hlt
pop
or
insb
hlt
mov
dec
scas
das
lock
jb
test
clc
les
sbb
mov
xchg
xchg
adc
pop
les
push
fs
out
enter
int
adc
xor
in
push
pmullw
movsl
cmpsb
data16
mov
push
or
mov
clc
loopne
mov
sub
add
pop
or
lret
mov
jmp
fisttpl
imul
and
cmp
jmp
cli
dec
stc
pushf
in
inc
repz
jmp
or
pop
fwait
lods
movsl
iret
ja,pt
sbb
and
ja
not
mov
sub
rol
add
pushf
mov
neg
shl
setb
shr
mov
test
repnz
call
movl
lea
je
pushf
jmp
mov
mov
sbb
fimull
fmull
das
shlb
sarb
mov
pop
jmp
jle
push
into
inc
jno
in
pop
loope
add
xor
cli
mov
xchg
shll
xchg
test
inc
leave
mov
repz
scas
add
aaa
sub
pop
xor
negb
mov
insb
cmovl
xchg
lret
push
and
sub
xchg
jmp
inc
or
out
jb
mov
cmp
iret
ss
pop
ret
and
jae
cmp
pushf
stc
pusha
cmp
movb
pusha
pushf
call
lea
ja
mov
sub
test
pusha
lea
add
cmp
neg
test
rol
mov
inc
pushf
mov
pusha
repnz
pushl
jmp
add
dec
outsl
arpl
inc
insb
insb
outsl
arpl
pushl
pushf
dec
cld
stc
pushw
popfw
lea
jo
pusha
push
inc
push
mov
call
jbe
inc
imul
popa
xor
add
data16
mov
insl
sbb
test
rorl
cmp
sbb
push
mov
gs
int3
inc
aas
mov
out
adc
test
ss
in
adc
fistps
cmp
and
pushf
push
xchg
mov
fs
daa
jmp
and
adc
test
inc
in
and
call
fsub
mov
bound
ja
sti
outsb
push
aam
mov
mov
push
dec
inc
loope
leave
sbb
subl
loop
movsl
testb
cmp
sub
push
mov
inc
mov
xor
dec
mov
add
xchg
roll
loopne
mov
xor
and
pop
mov
loopne
repz
insl
subb
jecxz
lret
push
arpl
ret
xor
cld
jg
and
in
or
lea
push
xchg
hlt
iret
setb
push
movsbw
not
jmp
pop
leave
xor
mov
adc
cmpsl
test
sbb
xor
lret
push
movsl
test
and
in
sbb
dec
test
divps
fbstp
lret
fwait
mov
jae
out
scas
in
pop
loope
or
xchg
fcomps
and
popf
cld
adc
sub
popa
add
and
inc
testl
in
movsl
adc
scas
scas
loop
jne
cltd
cmpsb
rol
add
and
mov
hlt
push
fistpll
imul
das
add
jmp
cmpb
pusha
lea
jne
shl
clc
not
mov
cmc
cmc
bt
pushf
add
mov
push
call
lea
jne
sar
test
shrd
mov
adc
sar
sub
bswap
mov
pushf
jmp
add
inc
js
je
jb
arpl
jae
cmp
cli
imul
scas
iret
rolb
imul
push
and
xor
xchg
aas
jmp
or
dec
lret
pshufw
cmpsb
mov
pusha
scas
or
mov
in
movsb
dec
jmp
ja
cmpsb
pop
push
stc
div
subl
dec
lret
mov
cltd
lods
iret
adc
cmp
mov
sub
mov
stc
decl
xorl
dec
mov
mov
seto
pusha
pushl
inc
mov
mov
pusha
movw
lea
call
call
sub
lea
call
mov
cmp
add
pusha
call
sti
jg
loopne
jp
add
mov
movw
pushl
mov
lea
jmp
test
cmpb
push
mov
lea
jne
lea
lea
mov
pusha
pusha
add
mov
call
inc
scas
dec
push
in
jbe
cwtl
sbb
xchg
gs
mov
push
in
dec
cld
jno
push
pop
ljmp
pop
dec
adc
leave
stos
push
nop
sti
das
cs
mov
loop
cwtl
cmp
mov
dec
inc
or
stc
xchg
aad
sbb
orl
mov
fldl
pop
dec
out
dec
cld
mov
into
mov
sub
cmpl
mov
add
in
test
pushf
call
xlat
inc
mov
hlt
mov
int3
sub
repnz
pop
inc
cmpl
xchg
filds
add
push
jle
adc
mov
int3
rclb
push
movsl
push
mov
pop
or
fucomi
insl
imul
adc
fisubl
out
pop
sahf
dec
fstpl
movsb
xchg
insl
rcl
push
or
dec
mov
es
mov
push
xor
das
and
add
test
loopne
hlt
jmp
mov
add
pushf
push
lea
ja
pusha
jmp
call
mov
sbb
pushf
add
sub
add
add
stc
lea
movl
add
lea
mov
test
cmp
cmp
pushl
call
mov
mov
fmuls
mov
xor
mov
mov
enter
sbb
jge
or
xor
mov
out
jno
or
mov
dec
and
xchg
sbb
push
cmpsb
or
sar
lods
and
aam
lds
adc
mov
cmp
fcompl
dec
in
or
cmp
bound
jnp
cmp
pop
mov
cmp
jb
cmpsb
mov
dec
stos
cmp
lea
ds
mov
pop
push
xchg
cld
mov
lret
inc
outsl
into
xchg
test
leave
sbb
shrb
cmpsl
repz
or
or
pop
mov
popf
mov
cmp
pop
mov
shrb
add
add
insb
push
enter
imul
mov
push
xor
js
inc
xchg
mov
push
std
fbstp
das
loop
adc
arpl
call
es
jno
xor
in
push
xor
ret
je
or
lret
ret
push
flds
jno
jo
mov
fdivs
hlt
pushl
shlb
loope
cmp
cmp
cmp
repnz
pusha
jmp
mov
or
mov
or
ficomps
popa
xchg
adcl
mov
fwait
push
add
mov
cltd
push
mov
cli
jmp
sbb
sbb
mov
adc
xor
out
xor
push
mov
sub
cmpsl
es
mov
lds
adc
dec
outsb
es
mov
mov
jmp
or
leave
clc
das
jge
imull
dec
sub
and
shlb
cmp
or
and
repz
xor
movsb
pop
push
std
test
adc
pushf
dec
pop
adc
imul
xchg
or
leave
or
cltd
push
push
popf
xchg
sub
pop
mov
pop
sbb
xchg
iret
mov
ret
push
mov
inc
inc
cmp
pop
test
jl
cltd
cli
sti
cmp
push
pop
sub
push
adc
mov
mov
mov
sbb
mov
cmp
xor
inc
push
jmp
les
sbb
faddl
adcb
sarl
ja
fcmovbe
xor
ss
pop
out
xor
lea
cmp
pop
dec
sub
enter
cwtl
and
ret
or
xchg
xlat
dec
mov
cli
movsb
jbe
daa
adc
push
push
mov
les
repnz
cmc
inc
aaa
test
mov
push
jmp
rorl
cmpsb
pop
je
jg
pop
adc
jecxz
mov
addb
lods
mov
xor
mov
divb
cwtl
enter
loop
xchg
mov
or
lret
xchg
int
ret
xor
xchg
ds
daa
sub
sub
cmp
jns
pop
stos
cmp
push
sbb
mov
jl
dec
push
scas
mov
xchg
lods
jg
les
int3
sbb
test
das
test
mov
jns
push
fcoms
inc
cmp
jnp
pop
int3
iret
scas
jns
mov
test
jecxz
dec
add
mov
jo
inc
cmc
aam
pop
testl
xor
outsl
call
ret
mov
xchg
mov
out
das
nop
repz
loopne
jge
and
in
or
sbb
sti
stos
sbb
and
in
loope
test
push
loope
leave
mov
icebp
std
add
add
dec
xchg
adc
cmp
enter
mov
testl
xor
gs
call
xchg
add
insl
pop
xchg
cmc
push
mov
pop
dec
xor
andb
es
or
add
leave
mov
mov
mov
mov
inc
dec
mov
out
jecxz
test
fmull
xchg
rolb
or
test
imul
sahf
fwait
repz
cmp
add
or
packuswb
outsl
or
and
push
pop
cli
addr16
cmp
push
int
pop
push
aad
and
add
push
int3
iret
cmp
mov
dec
jg
cmpsl
addr16
imul
data16
fsubl
aaa
or
shrb
andb
hlt
addr16
stos
pop
dec
out
repz
cltd
mov
scas
add
mov
pop
inc
ds
sbb
push
sbb
in
imul
negb
aaa
lods
xchg
ja
jl
xchg
fwait
or
dec
push
call
cmp
push
sbb
inc
cmp
or
data16
std
nop
std
push
or
cmp
fidivs
and
fmuls
xor
add
pop
cmpsb
lods
pop
cmp
mov
inc
cmp
and
je
lcall
enter
dec
sbb
cmp
cmp
sub
mov
mov
lret
cmp
std
dec
outsl
mov
push
sahf
adc
inc
scas
or
jecxz
jecxz
es
mov
test
scas
push
popf
movsb
pop
pushf
dec
lods
sbb
add
repz
xor
call
cmp
inc
xchg
mov
scas
sbb
lret
dec
aad
mov
cli
ret
addr16
sahf
ljmp
pusha
arpl
popa
pop
pushf
mov
adcl
sbb
popf
mov
sbb
flds
xchg
xchg
jnp
lds
loope
xchg
sub
movsb
add
sti
xchg
into
jae
aam
clc
xor
stos
movsb
cmpsl
addr16
dec
inc
xor
xchg
inc
and
mov
inc
adc
mov
dec
inc
inc
inc
mov
pop
pushf
lea
mov
pop
bound
or
divl
out
dec
pusha
inc
push
out
mov
call
xor
aas
movsb
add
dec
mov
jp
aam
dec
dec
push
pop
xchg
dec
and
and
xor
dec
std
jle
jl
cmp
rolb
js
lret
in
xchg
out
loopne
lods
std
fsubrl
out
pop
adc
sub
or
hlt
jns
shrb
xchg
clc
imul
rorb
rorl
leave
rol
cmp
jb
xchg
jnp
cpuid
jne
dec
mov
push
dec
xor
push
enter
xor
mov
ja
mov
pop
lock
out
sbb
mov
stos
lods
scas
sbb
fwait
push
push
push
ret
ret
into
sahf
mov
and
xor
mov
loope
add
shll
xchg
out
mov
outsb
jle
cs
add
hlt
pop
cmpsl
cs
sub
cli
ss
dec
push
fsubr
xchg
adc
xchg
aad
loop
xchg
jg
arpl
mov
shll
pop
fs
arpl
repz
stos
bound
inc
test
add
xor
aad
add
aam
or
loop
xor
scas
xor
jnp
call
cmpps
or
mov
pop
out
pop
dec
pop
pop
fdiv
dec
cmp
sbb
and
push
stc
inc
inc
jbe
mov
in
push
lret
leave
std
add
push
les
cmp
lahf
xor
sbb
js
xor
push
mov
and
or
clc
mov
repz
imul
mov
inc
iret
xchg
or
mul
add
fnsave
jae
scas
fstpt
imull
ret
fisttpll
fmul
pop
xor
pop
dec
imul
or
sub
sub
sub
or
xor
xor
pushf
pop
int
add
iret
sar
add
hlt
gs
test
test
out
inc
dec
push
inc
das
fs
stos
dec
inc
mov
add
stos
in
in
lock
cmp
xchg
xchg
xor
aam
bound
cmp
cli
mov
movsb
or
jg
adcl
in
scas
rorl
icebp
jb
cmp
enter
and
add
addr16
and
or
dec
repnz
scas
dec
cmpsl
dec
jmp
in
loopne
fdivs
addr16
repz
mov
fwait
pop
pop
cmp
xchg
rcll
jmp
add
inc
cmp
cmpsl
loope
popa
push
push
pop
mov
xchg
int3
mov
push
push
sti
in
ss
push
scas
inc
mov
fs
cmp
push
dec
pop
sub
pop
sbb
xchg
enter
roll
sbb
xor
fisubs
hlt
imul
into
push
pop
push
pop
xchg
lcall
fsubrs
jnp
fadds
xor
ret
sar
sub
adc
orb
aas
xor
mov
rcl
sub
inc
jp
inc
cs
sbb
das
jge
icebp
fs
movsb
sub
rcrl
mov
xchg
xor
iret
xchg
sti
cmp
scas
cli
mov
or
mov
mov
inc
repnz
notb
cmpsl
repz
add
cld
cmp
mov
lea
mov
push
xchg
shll
cli
test
or
loopne
sbb
js
push
lock
aam
mov
repnz
mov
je
push
out
xor
aaa
leave
ret
pop
sahf
loope
xchg
mov
xchg
test
dec
sbb
or
leave
jb
mov
lds
cwtl
das
sub
pop
ds
push
decl
es
aam
into
rsqrtps
ljmp
outsl
add
fwait
jecxz
push
lret
lahf
mov
jnp
mov
push
loope
negl
add
cmp
push
dec
cmp
outsl
mov
sbb
imul
fisubl
xchg
dec
popl
dec
adc
sub
neg
xchg
roll
shrl
leave
add
sub
out
in
inc
mov
cld
imul
cmpsl
cld
mov
out
icebp
paddusw
scas
fbstp
lret
sbb
xchg
jle
mov
sbb
test
je
adc
outsl
inc
jg
jl
clc
cmpsb
stc
mov
shlb
roll
mov
push
jns
mov
rcl
sbb
xchg
in
out
jmp
test
dec
adc
mov
frstor
and
pushf
shr
cmp
xchg
fnstsw
sarl
xchg
loope
shlb
xchg
les
mov
add
xlat
dec
cmc
or
gs
xor
push
sub
adc
adc
fmuls
aas
push
mov
cmp
push
shll
push
mov
jb
repnz
adc
ss
pop
cwtl
pop
inc
iret
lds
loopne
stos
mov
mov
aad
cmp
ja
ss
addr16
insl
mov
and
xlat
xchg
mov
lea
push
sub
push
das
rolb
pop
push
pop
adc
mov
xchg
mov
ss
shll
fisubrl
repz
enter
adc
ficompl
repnz
xor
adcb
or
push
in
mov
mov
mov
push
adc
sub
rol
pop
xchg
inc
add
fidivrs
pop
nop
add
ljmp
mov
and
sbb
addr16
out
adcb
orb
aas
jmp
into
xor
and
dec
mov
push
cmp
sbb
or
jo
mov
sub
mov
and
call
lea
loope
stos
div
add
cld
xor
pop
loopne
nop
xchg
push
aam
js
dec
mov
cs
outsl
or
xor
imul
adc
dec
cli
inc
add
push
mov
pop
cwtl
fildll
inc
inc
mov
cmp
lahf
xchg
jle
pop
addr16
xchg
in
xchg
outsl
adc
or
and
add
lods
or
rorb
xchg
call
shlb
je
mov
inc
cmp
push
insb
push
pop
or
mov
and
mov
in
pop
sub
push
push
push
lahf
xor
xchg
rcr
mov
in
mov
pop
lcall
pop
ret
repnz
es
dec
and
mov
js
lds
pusha
cmp
inc
add
mov
or
adc
out
push
inc
fadds
mov
sbb
cli
cmp
mov
cmpsl
cmpsb
fcmove
sbb
or
scas
push
daa
fistl
scas
repnz
pusha
jae
mov
cmp
mov
scas
dec
lcall
or
push
fldenv
ret
mov
xchg
xchg
insb
fwait
sub
es
sub
outsl
mov
pop
js
rorb
and
popa
lcall
mov
cld
decl
sub
mov
dec
push
call
dec
bound
stos
jb
xchg
js
outsl
imul
cmp
mov
test
lcall
sbb
xor
pushf
ja
lret
push
sbbl
xlat
push
sub
mov
loop
lret
jnp
jnp
push
xlat
sbb
fwait
or
ja
mov
sbb
repnz
enter
adc
lock
xor
mov
pop
rorb
negl
xor
les
inc
das
xor
dec
xchg
mov
xchg
push
ds
xchg
xlat
sbb
adc
inc
mov
clc
fwait
out
insl
and
cmp
and
pop
into
and
and
or
pop
push
dec
adc
fadd
mov
xchg
wbinvd
sbb
mov
sbb
mov
inc
scas
cmp
pop
loope
lds
pop
add
pop
cwtl
dec
push
adc
fwait
sub
es
xchg
int
movups
ret
adc
push
xchg
test
sub
ljmp
mov
dec
cld
pop
test
in
xchg
test
inc
mov
xchg
xorl
ret
xchg
out
imull
test
or
jo
lds
dec
sub
sub
pop
movsb
or
adc
mov
push
dec
and
push
aaa
inc
pop
mov
or
pop
push
call
cmpsl
dec
mov
add
lea
push
xchg
cmova
or
loope
ret
and
fs
cmp
jbe
cmpsl
pop
pop
pusha
arpl
mov
out
loopne
and
xchg
adc
sub
int3
iret
mov
jo
cmp
jge
adc
and
lds
cwtl
sub
mov
mov
out
adc
lods
mov
adc
jns
pop
rorb
mov
add
addr16
cmc
clc
gs
iret
je
and
mov
out
daa
enter
inc
cltd
lret
outsb
sarl
adc
add
imul
jae
and
imul
fidivrs
and
sbb
xor
xchg
xchg
je
pop
popa
pop
pop
sub
ss
pop
jmp
or
jae
arpl
cmp
mov
and
inc
xchg
dec
dec
dec
push
and
ds
jne
mov
pop
inc
mov
mov
ja
sbb
add
das
out
mov
mov
inc
ds
bound
mov
dec
jge
mov
popa
dec
adc
mov
popa
mov
xor
pushf
mov
cli
push
xor
stc
insb
cmpsb
dec
fmull
fdivs
loope
or
ljmp
hlt
inc
in
insl
loop
sarb
dec
lahf
in
add
in
hlt
fnstsw
and
mov
adc
out
movsl
out
push
popa
sahf
push
es
sahf
mov
xchg
lret
lds
dec
add
imulb
into
push
cmp
mov
test
jnp
jne
mov
cmp
cs
pop
jp
pop
lret
es
sarl
mov
int
mov
stos
lods
roll
sub
cmp
sub
subl
adc
push
addr16
insb
test
frstor
repz
and
xchg
push
mov
xchg
and
mov
push
cmp
aas
xor
icebp
shrb
xlat
mov
sahf
fcomps
or
scas
fs
inc
cmp
js
aam
in
aam
mov
mov
inc
fsubrs
cmp
dec
xchg
mov
test
repnz
in
cmp
mov
inc
inc
in
push
dec
mov
jmp
nop
in
xor
pushf
or
jl
aad
test
pushf
add
cwtl
fcmovnbe
dec
or
sub
aad
jl
cmp
lods
stos
inc
sbb
outsb
call
sbb
fstpt
subl
xchg
xchg
leave
adc
add
in
test
out
push
xor
sbb
popa
pusha
lds
pushf
and
add
jmp
and
mov
repnz
out
mov
mov
test
push
shr
mov
pop
lcall
jecxz
test
enter
hlt
inc
mov
sub
jg
sub
scas
mov
imul
mov
aam
cmpsb
loopne
shrb
scas
imul
mov
push
xor
int3
mov
jle
dec
pushf
sbb
mov
pushf
outsl
lods
inc
test
sub
and
frstor
loop
mov
xchg
jecxz
xchg
adc
fs
fs
jns
cmp
xor
dec
enter
mov
bound
jb
lret
xchg
mov
xchg
cmp
cmp
int
mov
jp
pop
jl
pop
repnz
push
jg
sub
in
pop
sarl
shll
test
dec
or
cli
or
mov
ja
adc
push
or
fstl
adc
je
vxorps
pushf
xor
leave
mov
dec
add
ret
push
push
xchg
push
imul
or
push
mov
push
sbb
fcmove
and
xchg
lock
movsb
fcoml
hlt
stos
test
inc
mov
push
jle
stc
jl
and
aam
add
cmp
push
lock
test
int3
or
sbb
xchg
jge
jbe
outsb
iret
xor
and
hlt
js
push
cmpsb
repnz
dec
push
mov
adc
jnp
shrl
lahf
jg
push
addl
cmp
lds
pop
jp
mov
clc
leave
mov
and
adc
push
cwtl
or
shlb
and
aad
push
lahf
xchg
lcall
jns
mov
rorl
lcall
dec
mov
adc
or
enter
mov
cli
or
dec
xchg
cld
sti
mov
pop
mov
push
push
mov
push
pop
scas
std
add
fnsave
jg
insb
push
xchg
add
rclb
je
aad
jp
insl
dec
pop
push
mov
ss
pop
fwait
mov
cmp
mov
addr16
cmc
jg
sbb
jno
inc
mov
push
outsb
in
add
push
int3
adc
sbb
fld
pop
insl
lock
movsb
gs
cld
pop
rclb
pop
pop
sbb
dec
cmp
cmpl
add
jle
mov
cltd
or
mov
xor
sahf
add
sarl
std
cmp
add
in
data16
cmpl
xorl
adc
pop
in
sub
add
lock
test
shr
or
push
xchg
shll
cmp
push
mov
mov
in
testw
cmp
and
lea
ja
xchg
mov
and
in
adc
pop
xchg
cltd
push
and
arpl
nop
xchg
and
jp
lea
push
lahf
and
push
mov
jo
mov
movsl
sbb
aas
test
gs
sub
and
leave
mov
lahf
xor
repnz
mov
xor
sub
dec
adc
faddl
addr16
dec
mov
bound
and
jns
push
push
dec
mov
pop
sub
cmp
pop
das
insb
gs
lret
out
ljmp
and
les
addr16
stos
cmpsl
mov
cmp
test
pop
xor
insl
and
mov
mov
mov
cmc
mov
faddp
and
ds
inc
cmc
out
xchg
and
insb
and
clc
loop
pushf
dec
pushf
adc
pop
loope
lds
fistpll
in
lods
jnp
cmp
mov
pop
pop
xor
cltd
fmull
inc
pop
xchg
add
js
in
add
fnsave
ret
mov
add
ds
adc
xchg
push
aas
xor
cmpb
inc
test
insb
test
sbb
jb
xchg
cmp
inc
inc
repnz
imul
mov
decb
inc
ss
xchg
xor
fwait
cld
loope
xchg
mov
and
inc
mov
in
fsubl
sub
fnstsw
jecxz
sub
ret
sahf
pop
dec
cmp
jb
fmul
cmp
xchg
or
mov
lret
out
lock
mov
and
cltd
sbb
xchg
test
imul
repz
cmp
xchg
aas
sub
shl
xchg
xchg
add
mov
mov
or
popf
imul
fstl
inc
or
fldcw
scas
lahf
pop
inc
and
movsb
fwait
cld
imul
jnp
pop
sahf
mov
daa
mov
jmp
in
sbb
pop
mov
stc
in
outsb
and
sbb
ret
std
add
pusha
sbb
daa
jle
cmp
mov
jns
mulb
xlat
into
iret
rolb
cmp
lods
adc
arpl
std
inc
xlat
cmp
push
loope
lea
sub
jnp
jae
push
jl
int3
pop
aam
movsl
nop
push
mov
push
jnp
inc
push
daa
sbb
dec
mov
imul
push
cmpsb
mov
sub
fs
jg
jns
mov
add
and
xchg
xchg
mov
inc
jmp
jmp
iret
xor
pop
adc
dec
int
lcall
mov
jp
inc
mov
es
dec
mov
or
imul
js
cmp
mov
aaa
adc
sub
jg
lods
ds
scas
pop
imul
pop
sti
insb
arpl
and
cld
push
push
mov
jle
cs
xchg
or
cwtl
xchg
push
les
jb
push
stc
data16
or
lock
std
jae
ds
adc
lock
rclb
std
ret
aad
fs
push
les
test
sbb
sub
mov
push
mov
cmp
fwait
ret
jl
es
pop
inc
or
rorb
ret
call
lock
or
jo
outsl
sbb
cwtl
sti
into
or
adc
adc
or
popl
fcomp
scas
and
rorl
mov
adc
pop
lret
cmpsl
pop
jno
adc
jae
jne
movsb
mov
mov
imul
dec
out
and
cmp
neg
xchg
dec
ret
dec
cmp
out
loope
adc
in
popf
dec
cmp
icebp
ret
ret
xchg
push
lcall
inc
push
enter
sbb
inc
cmp
jl
ss
scas
mov
fs
dec
in
in
nop
int
pop
jb
negl
mov
inc
ljmp
cmp
jle
pop
jecxz,pn
lret
int3
lahf
loop
add
dec
hlt
mov
jb
push
push
xchg
stc
fisubrl
std
sarb
or
add
cmpsl
arpl
pop
xchg
loopne
out
xchg
lahf
rcl
inc
mov
addl
shrl
inc
inc
mov
and
push
sti
sub
or
cltd
fisttpll
lret
cld
loope
mov
cwtl
inc
push
int3
mov
push
xchg
xor
cmp
sub
aas
loop
mov
lcall
in
cmp
lea
ja
pushf
movl
pushf
call
jle
push
dec
hlt
mov
adc
xlat
call
jge
aas
sub
lahf
ljmp
movsb
cmpsb
mov
fwait
adc
jns
sbb
jno
in
lods
cmpsl
pop
cmpsb
lret
xchg
fdiv
test
xor
aas
adc
inc
sbb
imull
push
adc
jbe
sti
jne
shlb
xor
adc
pop
push
xor
xchg
or
test
sub
pop
in
sahf
adc
in
mov
mov
sub
adc
mov
test
ficoms
cmp
adc
fcmovu
dec
mov
hlt
mov
mov
adc
dec
or
das
rolb
enter
ret
outsl
loop
mov
mov
js
push
push
iret
loope
and
scas
shlb
sti
inc
add
xchg
fwait
pushf
dec
xchg
mov
out
push
repnz
aam
and
mov
cltd
jl
dec
jnp
mov
sbb
popf
lods
inc
in
insl
outsb
or
ja
aam
dec
subb
jle
sbb
aam
push
imul
pusha
or
and
jle
loopne
jb
lods
mov
adc
ret
inc
mov
add
xor
cmp
mov
aas
and
inc
in
shl
test
cmpsb
arpl
xor
cmp
push
iret
adc
push
cmp
mov
push
adc
sbbl
inc
roll
dec
iret
mov
mov
aam
jno
inc
mov
mov
shrb
pushf
dec
imul
lds
rcr
sarb
fdivrl
idivl
mov
insl
add
jbe
cld
jno
fistl
inc
loop
test
cli
aaa
ret
mov
cmpsb
daa
cwtl
stc
stos
imul
in
xchg
pushf
xchg
dec
jl
or
cld
lret
hlt
sbb
pop
xor
xchg
jo
cmpsl
jmp
fsubs
or
adc
add
lea
push
call
adc
fwait
orl
cmp
push
pop
out
mov
test
ss
pop
scas
ret
sub
cmp
sub
mov
pop
not
lea
push
movl
jmp
sete
mov
pusha
pushf
movsbw
call
jmp
outsb
fistpl
dec
hlt
mov
add
or
rolb
in
scas
insb
mov
pop
icebp
jge
cmc
mov
jmp
mov
jbe
adc
seta
js
pop
xchg
insl
iret
cmp
movsl
sub
fs
std
mov
push
aad
jb
rolb
jecxz
dec
mov
push
int3
mov
adc
fldcw
xchg
jb
push
cmp
mov
loope
push
adc
cmpsl
push
shll
aad
sub
jg
sub
push
inc
lea
pushf
mov
pushf
call
lea
lea
bswap
call
adc
pushf
pushf
mov
pusha
pushl
ret
pop
sarb
dec
hlt
mov
loopne
mov
test
imull
leave
sub
lds
jl
aaa
fadd
cmp
jle
push
shll
xor
xor
orl
pop
xchg
in
xchg
push
jae
outsl
jb
jl
mov
cltd
or
faddl
mov
xor
mov
rorb
dec
inc
repz
test
negl
dec
adc
ss
lahf
and
cwtl
add
push
or
aas
sbb
data16
pushl
mov
sub
jnp
fucomp
outsl
xor
push
rcrb
mov
jmp
mov
popf
pop
in
mov
pusha
int
adc
arpl
ljmp
sub
mov
icebp
xor
push
inc
lock
jle
daa
or
xor
sub
lods
out
lcall
ljmp
adc
pushf
cld
xor
cmp
jb
insl
mov
inc
repz
mov
mov
pop
sbb
in
push
pop
addr16
lods
adc
cs
movsb
neg
jge
adc
in
push
jmp
fmuls
test
mov
mov
jo
add
adc
dec
jl
outsl
cltd
gs
fstpl
repnz
ret
lret
add
scas
into
mov
push
xchg
sbbb
scas
loop
lods
movsb
loopne
lea
adc
fnstsw
xor
xchg
aaa
push
push
into
icebp
pop
iretw
ficoml
xchg
adc
push
sub
xchg
aad
fistpl
fs
jno
dec
dec
push
adc
jno
sbb
mov
fdivrl
imul
scas
cmc
cmp
out
push
pop
add
mov
xor
xchg
pusha
cmpsl
xchg
pop
adc
addb
ret
sub
and
push
dec
cmp
jb
mov
cltd
cli
outsl
dec
iret
jae
div
fs
and
cli
cmpsb
sbb
adc
mov
sbb
sbb
aad
loop
dec
adc
xchg
or
inc
hlt
mov
jp
or
push
jg
addl
leave
dec
test
push
mov
popa
and
inc
add
jecxz
adc
or
fbstp
or
xlat
lcall
popf
gs
pop
int3
das
scas
dec
mov
ret
xor
sub
mov
sub
or
xchg
jne
pop
enter
cltd
mov
cld
out
inc
sbb
hlt
mov
fistpl
pushl
rcl
add
testb
aaa
lcall
out
out
cld
imul
inc
insl
in
sbb
mov
push
pop
ljmp
fsubrl
cmpsl
sub
jnp
mov
pop
or
fadds
inc
xor
in
adc
push
or
adc
pop
push
loope
loope
jle
lea
pop
ss
mov
in
inc
call
jns
cwtl
adc
ljmp
adc
pop
lods
cwtl
iret
dec
sub
xchg
negl
xlat
ret
cli
xor
dec
aad
jbe
rclb
jp
add
nop
mov
jl
ljmp
mov
sbb
fildll
add
stos
sub
leave
lods
adc
inc
adc
jae
xor
mov
dec
fmulp
jb
push
aaa
sbb
sbb
sub
dec
inc
sbb
test
sbb
add
pusha
clc
clc
add
clc
cmp
jmp
lea
jne
pushf
stos
pusha
lea
jmp
lea
jne
push
lahf
pushl
movb
lea
push
mov
push
lea
pusha
mov
jmp
lods
ljmp
out
inc
loope
mov
movsl
cmpsb
ja
imul
mov
xchg
out
jge
pop
xlat
push
dec
lock
sbb
push
inc
ja
popa
mov
fstl
push
mov
push
sbb
cltd
in
lods
and
cmpsl
aas
mov
cmp
sub
mov
add
arpl
inc
jl
push
mov
jnp,pn
out
jo
mov
pushf
dec
fwait
inc
push
loope
pop
mov
mov
pop
int3
jl
cltd
jns
cmp
nop
imul
bound
les
add
adc
inc
dec
in
imul
sbb
insb
or
ljmp
mov
fisttpll
pop
pop
pop
xchg
xchg
dec
test
in
pop
push
ja
or
mov
xadd
fs
jno
push
int3
push
outsl
add
clc
mov
out
mov
pop
lea
pop
aam
js
and
jmp
adc
push
pop
mov
adc
mov
int3
push
xchg
inc
and
in
dec
cli
lods
fidivrs
popa
add
outsl
aam
jns
adc
jae
jp
lds
and
dec
jmp
loope
jecxz
icebp
push
addr16
and
mov
push
pop
decl
dec
imul
loopne
pop
and
out
lret
frstor
xlat
sbb
lods
xor
push
leave
sbb
ret
or
xchg
test
out
adcb
mov
sub
cmp
pop
aaa
shlb
pop
fadds
cmpsb
xchg
or
jb
sub
sbb
xchg
fimuls
ds
dec
lea
test
shlb
dec
push
das
mov
ret
pop
fistps
and
push
mov
xchg
adc
lea
pop
ficomps
inc
jo
lahf
push
jmp
ret
cmpsb
or
add
stos
into
xchg
in
imull
je
mov
hlt
mov
scas
iret
and
repnz
add
testb
aam
add
loopne
std
cltd
xor
fwait
push
stos
in
pop
xchg
mov
and
jnp
inc
mov
dec
insl
xor
int
jnp
dec
sub
sbb
mov
inc
std
jl
jno
cmp
loope
jno
dec
leave
add
pusha
dec
xor
inc
rcll
in
adc
sbb
pop
les
mov
sbb
cltd
xchg
leave
pushf
lret
pushf
dec
les
mov
mov
dec
icebp
test
inc
mov
inc
xor
dec
das
bound
stos
and
inc
hlt
mov
push
adc
push
out
cltd
cmp
lock
hlt
cmp
scas
popa
into
jecxz
inc
mov
mov
adc
call
dec
mov
dec
clc
scas
add
mov
je
imul
add
or
dec
inc
add
inc
rcll
ret
sbb
stos
push
test
inc
ja
or
in
pop
out
sbb
push
add
into
add
mov
mov
pop
pop
out
loopne
addb
sub
iret
xchg
xchg
pop
mov
add
cwtl
js
shlb
mov
ss
sahf
jmp
sbb
jb
js,pt
sti
add
push
sub
push
rolb
lret
cwtl
pop
iret
stos
lods
stc
cmc
push
rcrb
fs
mov
roll
cltd
and
pop
cwtl
lds
lret
lea
or
lods
mov
ret
das
and
mov
cmp
nop
add
adcl
mov
dec
pusha
xor
cmc
cmp
cmp
test
mov
test
pushl
push
add
movb
movb
pushf
test
test
mov
pushl
lea
jne
pusha
mov
movb
jmp
je
sbb
mov
inc
aad
out
or
dec
outsl
int3
mov
pop
jle
push
or
cmp
mull
call
out
and
out
mov
xlat
sub
mov
lock
pop
movsb
and
mov
pop
push
xchg
jo
and
nop
xchg
push
int
testl
mov
or
rcl
hlt
mov
stc
cmp
jbe
fimull
out
loopne
cmpsb
inc
loop
es
mov
cmp
out
cmp
mov
movzbw
jmp
lock
aas
hlt
mov
les
mov
lods
dec
bnd
dec
popf
lahf
mov
jl
pushf
fwait
or
fnstcw
mov
scas
cmovb
idivl
sub
mov
clc
cmp
shll
pavgb
test
out
mov
dec
dec
pushf
lea
mov
fmulp
int3
clc
cltd
mov
pusha
lods
cmp
cld
lds
outsl
adc
mov
dec
push
repz
int3
dec
in
cwtl
cmp
mov
enter
xchg
sub
fisubrs
sbb
shrl
lea
je
pusha
rcl
cmc
test
add
shl
not
sub
shr
shr
movzbw
btr
xchg
xchg
mov
shl
add
add
shrd
adc
add
sub
movsbw
mov
cmp
shr
cmc
pushf
cmp
call
stos
sbb
ds
mov
inc
dec
jns
cmp
lea
andb
inc
popa
fwait
lock
push
xchg
scas
mov
idivl
outsl
shlb
test
bound
lods
arpl
dec
mov
fstl
enter
fisttps
push
ja
pop
fldcw
xor
call
xchg
push
lret
lret
adcl
mov
pop
out
lds
lahf
loop
shrl
lahf
bound
pushl
jno
in
mov
xlat
out
cmpsl
xor
fimull
jp
xor
leave
sbb
and
nop
mov
pop
fmuls
add
sarl
jmp
cmp
jb
aam
push
lea
mov
rcr
cld
dec
xchg
iret
fwait
cmpsl
fidivrl
jae
mov
push
dec
xchg
push
fisubrl
cmpsl
dec
fildl
push
mov
or
xchg
push
xlat
mov
adc
mov
cmovl
adc
test
loopne
lahf
lock
xchg
test
or
stc
insb
push
or
aas
sbb
clc
cmp
clc
cmp
movb
call
adc
pushf
pushl
ret
movb
rep
pushf
pop
not
jmp
jns
adc
xchg
mov
mov
mov
jecxz
ja
push
aad
ja
in
call
dec
sub
mov
mov
push
xor
or
xchg
dec
out
scas
push
mov
inc
xchg
inc
pop
jle
lahf
shrb
subl
mov
xchg
loopne
daa
lret
in
cmc
push
jle
mov
fisubrl
call
lods
sahf
jg
push
js
out
jno
cmp
sub
cltd
out
in
shlb
mov
push
andl
fwait
pushf
insl
subl
mov
lds
mov
sub
sub
jno
xchg
in
xor
movsb
lock
or
rolb
popf
test
xor
dec
aaa
test
pop
loopne
setb
fwait
xor
jecxz
pop
mov
or
in
outsb
push
or
dec
daa
and
jno
lods
arpl
mulb
adc
stos
int3
pop
clc
pop
cmp
ss
add
pop
outsb
or
adcb
clc
xchg
and
loopne
xchg
ljmp
mov
loopne
insb
sub
popf
lea
ret
pushf
test
test
call
stos
sbb
cmp
mov
mov
pop
ljmp
loope
test
popf
inc
sub
or
xchg
adc
les
jae
cmp
out
fnsave
test
loopne
ret
in
adc
adc
repz
mov
scas
sub
mov
mov
dec
loop
xchg
inc
repnz
adc
mov
popa
repnz
out
cmp
imul
sbb
jge
stos
cmp
push
push
imul
mov
sub
in
outsl
push
cmc
leave
push
clc
mov
cmc
test
test
pushf
push
lea
je
pushf
cmp
stc
add
clc
cmp
movb
lea
jb
bt
jmp
and
cmp
mov
xchg
xchg
jbe
cmp
cmp
lahf
jb
mov
lea
dec
and
inc
out
and
fdivrl
sbb
js
cmpsl
pop
iret
fsubrs
jne
psrld
sbb
sarb
repnz
lea
mov
cltd
jae
cmc
mov
xor
xchg
pop
sbb
insb
iret
adc
jb
call
movl
fs
je
pushf
pushf
jmp
mov
mov
add
clc
leave
sbb
sub
out
mov
lds
pushf
fisubrl
mov
mov
int
add
cs
inc
inc
mov
dec
push
dec
add
pop
aaa
loope
sbb
es
add
xor
cld
sub
adc
ds
pop
ljmp
fs
sbb
fists
cmp
dec
loope
cli
cmpsb
sub
mov
push
xor
orl
jmp
xlat
bts
mov
stc
and
lea
mov
stc
btc
rcr
mov
pusha
jmp
mov
add
hlt
mov
sub
loop
pop
mov
lea
test
mov
fbstp
loop
lret
cmp
loop
push
mov
inc
stc
sbb
dec
std
sub
out
xchg
inc
sar
jne
mov
outsb
jne
popf
pop
pushf
xchg
ret
dec
fcmovnbe
shrb
xor
cmp
sbb
nop
add
cli
dec
pusha
repz
dec
cmpps
mov
mov
lea
pusha
pushl
mov
movl
pushf
mov
movb
call
in
test
hlt
mov
and
inc
adc
divb
sub
mov
mov
jecxz
mov
mov
sub
push
adc
icebp
aad
cwtl
pop
cmpsl
jbe
stc
sub
stos
xchg
and
mov
lods
nop
fsubl
dec
out
loopne
jecxz
xchg
aad
sbb
inc
outsl
mov
scas
inc
push
fidivrs
test
push
jnp
mov
andl
cwtl
dec
cmc
fdivrs
lahf
mov
pop
mov
cmp
sti
mov
jns
call
mov
or
hlt
mov
add
mov
pop
dec
cli
sub
mov
mov
sahf
ljmp
fcoml
insb
mov
test
pop
rorl
mov
push
add
jb
push
xlat
and
push
popf
pop
xchg
in
scas
mov
in
xchg
push
fsts
mov
loopne
aas
idivb
iret
movsb
cmp
clc
xor
push
test
pushf
xor
int3
js
test
lret
dec
in
pusha
and
pop
ja
nop
inc
cwtl
in
dec
pop
ret
cmp
jno
sub
dec
lahf
push
aas
jl
jb
xorb
mov
jmp
out
adc
sti
roll
pop
inc
lods
loope
mov
add
sub
hlt
mov
sub
push
jmp
rcl
aam
mov
sbb
mov
sahf
gs
mov
adc
aad
xchg
hlt
adc
mov
sbb
mov
imul
out
sbb
in
les
insb
mov
mov
inc
hlt
xlat
mov
xchg
enter
iret
cmp
pusha
sub
jg
sub
xor
sub
jno,pt
push
adc
cwtl
dec
mov
push
cmp
mov
adc
inc
cmpsb
daa
cmp
sbb
or
popa
mov
ljmp
inc
mov
rcr
and
sbb
cmp
xchg
ficomps
roll
fsts
hlt
adc
sub
pushf
stos
cmp
loop
and
repnz
out
mov
cs
arpl
dec
fcompl
adc
or
ret
imul
and
push
testl
fidivrs
fstl
dec
push
jno
imul
shlb
imull
or
xchg
cmpsl
and
stc
push
andl
xchg
add
sbb
stos
and
les
rcl
daa
push
mov
scas
iret
jns
test
leave
pushf
scas
inc
sbb
hlt
mov
das
lock
ret
movsb
add
stos
fwait
cs
mov
cmp
cmc
dec
std
inc
jno
lret
loopne
lret
fdivr
mov
or
nop
cmp
ja
sub
push
popf
xchg
lahf
js
sub
add
sbb
sbb
roll
xor
fs
rcl
mov
pop
fiaddl
popa
test
sbb
les
pop
lock
push
test
hlt
mov
popa
inc
add
lcall
mov
out
cmpsb
mov
jle
jge
rcll
aas
xchg
pop
into
loop
jge
adc
xchg
adc
mov
int3
add
popl
mull
add
and
andl
lahf
lock
and
pop
jns
call
scas
pop
xor
les
rorb
xor
ret
pop
ss
mov
popa
ret
adc
ljmp
mov
jne
xchg
popf
jle
out
jge
cmp
dec
jnp
push
inc
mov
gs
push
dec
lea
cmp
push
loopne
xchg
out
movsl
adc
imul
jle
jge
mov
and
inc
mov
xor
and
sub
int3
outsl
repnz
sbb
pop
fisubrl
sub
repz
ljmp
pop
push
xor
enter
pushf
lods
jns
mov
xor
pushf
push
es
push
inc
scas
inc
mov
sub
test
addr16
add
sub
dec
sbb
icebp
cmp
jae
popf
std
xor
insl
mov
rcrl
je
sti
enter
out
push
arpl
jae
ret
loop
mov
push
rcll
push
lods
pop
sbb
repz
adc
inc
imull
cltd
mov
adc
adcb
mov
jle
rolb
or
mov
xor
mov
cwtl
sbb
jl
pushf
xchg
cmpsb
sbb
inc
test
pop
aad
mov
jg
push
jg
andl
test
push
aad
filds
pop
lret
inc
test
fwait
or
aaa
adc
xlat
push
daa
call
xchg
nop
mov
mov
dec
push
or
push
fucomip
cmp
insb
xor
mov
das
add
repnz
add
je
mov
pop
xor
dec
inc
mov
jge
ljmp
push
adc
jl
fidivl
pop
lds
add
push
ret
inc
mov
cmp
cmp
jns
jmp
push
inc
push
rclb
or
lods
jle
in
dec
addb
hlt
mov
test
or
cmp
mov
pusha
jno
jae
lock
hlt
aaa
cs
test
mov
cmp
or
in
cs
lock
rolb
testb
mov
lods
sbb
jbe
xor
sub
pop
int
mov
jnp
mov
add
adc
in
lods
jnp
aaa
mov
push
pop
dec
xchg
sbb
test
fimull
adc
nop
xchg
or
lea
mov
adc
push
mov
push
mov
sub
pushf
das
push
gs
jo
pusha
mov
daa
sti
ljmp
js
lret
std
into
fbld
inc
add
sbb
lcall
fidivs
sub
cmp
mov
mov
or
mov
pusha
mov
out
sub
jl
stos
pop
cwtl
pop
add
xchg
push
cmp
lcall
add
cmp
or
add
jle
add
addl
hlt
mov
xor
xchg
xchg
ss
fnstcw
sahf
mov
push
cwtl
and
inc
loope
jge
movsb
mov
adc
adc
xchg
cmp
scas
cli
dec
pushf
int
call
dec
lcall
addr16
adc
jo
imul
movsb
and
pop
loop
or
test
xchg
std
cmp
int3
cmp
mov
lock
pop
pop
and
test
cs
push
lret
dec
fstpl
jae
cmp
push
bt
pushf
cmp
push
mov
call
pushf
add
pusha
mov
call
lea
jae
push
push
pushl
push
lea
jmp
fsubrl
xor
mov
and
mov
test
dec
ljmp
adc
aad
leave
push
xor
stos
inc
ja
leave
pop
sbb
sbb
jo
nop
movsl
pop
cmp
imul
loopne
push
mov
ja
inc
aad
mov
adc
push
or
push
jnp
imul
dec
ficoml
jmp
push
or
push
adc
sub
and
adc
enter
out
mov
or
in
ja
jae
andb
dec
insb
das
xchg
lds
mov
jbe
cld
sbb
das
test
pushf
call
push
pushf
jmp
cmp
pusha
pushf
pushf
lea
ja
push
pusha
stc
stc
imul
clc
test
add
pushf
movw
pushl
lea
jmp
mov
mov
pushf
lea
jp
pushf
pusha
lea
ja
jmp
xor
test
cmp
add
jmp
test
pushf
jmp
or
xor
mov
xchg
movsl
cmpsw
fmul
push
lods
fbstp
xchg
adc
push
pop
mov
test
aaa
movsb
std
loope
mov
sbb
dec
and
in
cmc
inc
jg
mov
pop
int3
inc
icebp
ja
std
xor
xor
cs
xor
add
dec
xor
addr16
xchg
lahf
sub
imul
jp
and
jns
xor
jne
xor
cld
fistl
adc
fwait
jg
mov
aas
add
mov
inc
push
cmp
mov
cmp
popa
and
hlt
push
ret
push
jle
cmc
mov
sbb
das
hlt
mov
movsb
push
mov
dec
sub
stos
sub
mov
test
test
mov
out
fmull
dec
pop
adc
shll
out
addr16
cmp
inc
jp
out
pop
push
jnp
mov
jmp
push
mov
popa
xchg
and
push
cmp
clc
mov
adc
mov
or
adc
mov
sub
sahf
jns
out
das
hlt
mov
mov
pop
mov
fisttpll
rclb
enter
cwtl
add
pop
mov
scas
fbld
cmp
shrl
gs
mov
test
push
test
fimull
cmp
icebp
jne
addr16
dec
mov
les
push
dec
std
arpl
and
cmc
call
hlt
mov
xor
pop
push
cld
mov
js
mov
xor
das
fistpl
adc
add
hlt
jne
mov
loop
sub
fiadds
stos
xor
movsb
inc
test
jg
into
jno
and
xchg
ret
sti
pushf
dec
in
cmp
outsb
pop
xchg
xlat
xor
and
in
xchg
inc
xor
addl
pop
scas
roll
cmp
movsb
ror
dec
add
mov
push
mov
push
daa
mov
sbb
add
jne
xchg
jp
lods
sti
cltd
add
xchg
mov
call
scas
add
xchg
jge
lds
outsl
add
adcb
cmp
sub
xchg
xchg
jo
roll
repnz
or
xor
xor
push
nop
adc
mov
inc
and
or
into
xor
mov
inc
ljmp
movsl
test
push
les
test
outsb
and
cmp
mov
movb
mov
lea
jb
pushf
cmp
call
jmp
movl
pushf
pushf
push
push
mov
mov
movw
mov
mov
pushl
ret
dec
mov
incb
cmpsb
out
cmp
add
js
pop
cmp
push
repz
mov
mov
pop
xchg
out
adc
cmp
shl
inc
mov
cmp
sub
pop
std
fimull
fstpl
xor
mov
mov
sar
mov
daa
popf
pop
inc
push
cwtl
mov
sub
pop
xor
or
mov
je
jmp
mov
mov
cmp
add
jg
pusha
xor
pushf
push
inc
pushf
mov
neg
movl
mov
inc
test
xor
pushf
pushf
jmp
push
call
xchg
add
sub
mov
sub
xchg
shll
jle
insb
iret
cmpsb
cltd
lds
fstl
push
sub
xor
sbb
mov
add
xor
insl
sahf
xchg
sbb
es
pusha
xchg
fistps
mov
xor
cmpb
ss
xor
add
pop
insb
out
rclb
mov
add
add
stc
cmp
jmp
jmp
jae
bt
stc
jmp
cmp
popl
movsb
mov
pop
sbb
fidivs
test
test
xchg
jle,pn
popa
gs
daa
or
xor
lret
jl
xchg
daa
cld
imul
cltd
or
jge
shlb
dec
pusha
clc
fdivrl
mov
jae
mov
add
cmp
sbb
cld
dec
push
cmp
jmp
movsb
adc
sub
mov
stos
sub
sbb
xchg
addl
jle
fs
es
mov
shrl
mov
sbb
pushf
jne
imul
hlt
imul
pop
int3
loop
movsb
clc
mov
cmc
cmp
ret
xorl
xor
je
gs
call
cmp
sub
mov
scas
or
push
push
xchg
inc
sub
pop
add
dec
pop
mov
sbb
pop
sahf
mov
in
mov
into
shll
scas
jg
pop
adc
cmpsb
pop
call
jmp
pop
fwait
pop
sub
mov
or
jge
outsl
xor
repnz
mov
adc
into
and
aas
mov
jae
cmpsl
push
ds
push
lds
mov
shll
xchg
xor
lret
cmp
jae
je
push
mov
xchg
sub
mov
cmpsb
push
decl
push
rcll
pop
mov
and
push
idivl
ljmp
xlat
adc
pusha
jmp
adc
mov
shlb
mov
xchg
js
cli
in
jnp
arpl
add
sub
mov
push
jne
cltd
cmp
clc
jp
fisubrl
jmp
add
jno
jmp
adc
cltd
hlt
xor
inc
xchg
adc
loopne
movl
mov
fs
push
mov
push
push
outsb
in
nop
jg
mulb
sbb
lds
ja
xchg
adc
adc
inc
pop
lcall
out
jb
imul
mov
add
ds
mov
pop
or
sahf
aas
and
sbb
pushf
jnp
imul
enter
xor
outsb
ja
adc
jae
ret
scas
inc
cli
xchg
clc
scas
loopne
sti
push
mov
and
mov
ljmp
imul
int3
fsts
push
stos
lret
mov
enter
dec
pusha
clc
mov
cmc
out
aam
insl
jbe
add
arpl
xor
xor
push
and
inc
add
mov
or
inc
scas
cltd
inc
jae
sub
data16
inc
enter
fbstp
ret
and
mov
jns
cmp
xchg
mov
cmpl
mov
pop
fisttpll
loop
add
out
scas
ja
mov
lea
sbb
push
fwait
out
insl
mov
xchg
inc
leave
adc
sarb
sub
sbb
ja
push
loope
das
imul
sbb
loope
xchg
sub
pushf
jg
xlat
std
jne
aam
lret
ja
fwait
push
addl
sub
pop
fistl
mov
or
sub
mov
sbb
shl
ret
pusha
jl
out
in
out
jb
out
movsl
inc
sbb
mov
sti
jge
dec
repnz
sbbb
mov
add
repnz
scas
cli
jns
stos
xchg
out
outsb
dec
dec
or
push
das
rorb
repz
lahf
sbb
pop
fs
in
push
xchg
add
cltd
arpl
fadds
mov
sub
clc
imul
icebp
xchg
ja
dec
or
bound
lods
outsl
loop
jmp
shll
hlt
mov
aaa
mov
insl
scas
popl
push
jnp
pop
lea
push
push
in
jg
incl
mov
ja
jb
mov
fistpl
xchg
flds
or
stos
dec
dec
and
sub
sub
fmuls
xor
movl
sub
jb
cmp
cmp
imul
insl
add
aas
fstpl
mov
mov
lods
out
fs
xchg
push
add
test
jnp
adc
aaa
fidivrl
vpunpckhdq
mov
add
fs
jae
or
shrd
cmc
mov
jmp
add
inc
gs
outsl
fs
gs
imul
add
imul
push
test
add
testb
mov
sub
mov
or
ret
xor
fwait
shl
push
sbb
push
dec
dec
out
shll
enter
mov
sub
jmp
and
cmp
scas
pop
inc
mov
inc
pop
clc
jmp
mov
adc
rorl
mov
adc
aas
cld
jnp
add
lods
pushf
dec
inc
enter
pop
out
mov
jge
loopne
in
mov
jmp
xor
loope
mov
ret
test
and
sbb
loope
aaa
mov
arpl
lea
mov
cmp
lea
jne
inc
btc
push
cmp
xor
sar
mov
test
bt
jmp
mov
mov
sub
pop
pushf
in
scas
pop
and
add
movsl
fadd
jge
out
mov
push
cmp
pop
fistpl
insl
in
cmp
lods
inc
insb
push
push
or
sub
in
bound
dec
sub
imul
nop
fcompl
sbb
cmpsb
cmpsl
addr16
dec
ss
dec
test
and
sub
movsb
and
cmc
xor
and
inc
rorb
cli
jae
dec
cmc
ret
xor
and
mov
mov
inc
mov
jns
jb
and
or
pop
mov
mov
inc
mov
es
mov
ljmp
loope
push
inc
mov
int
ja
jb
in
lahf
mov
repnz
mov
sbb
add
push
mov
ss
sbb
push
fidivrl
cmp
loop
pop
sbb
xchg
adc
fwait
stos
movsl
push
mov
addr16
data16
int3
mov
jo
cmp
jne
cmp
or
and
jno
jo
out
push
xor
mov
ja
in
push
jae
cmp
cmp
and
jns
stc
pusha
bt
pushw
popfw
jmp
shrl
and
mov
not
mov
sti
int3
jg
mov
cmpsb
jb
jl
arpl
or
lret
ljmp
popf
loop
mov
xor
xor
cmc
mov
push
jg
or
enter
and
sti
lret
hlt
jl
sbb
sbb
loop
nop
adc
mov
cmpsb
out
and
cwtl
pop
iret
shlb
inc
mov
pushf
mov
hlt
ret
pop
xchg
lea
ds
xor
cmp
push
aad
sub
popf
das
jg,pn
lds
dec
ficompl
mov
lods
mov
mov
adc
data16
popa
push
sub
jl,pn
jg
push
jnp
or
fcomps
in
pop
mov
lods
push
lock
cltd
dec
or
pop
add
in
rcrl
jle
dec
or
nop
pop
adc
jecxz
jnp
icebp
sub
sbb
iret
mov
adc
push
dec
fmull
rclb
push
mov
push
push
repnz
lock
sbb
sahf
jb
push
cmpsl
and
mov
ds
adc
jae
movsl
cmpsb
jmp
mov
jl
cmpsb
aaa
push
cld
sub
jno
mov
lahf
inc
add
pop
int3
pop
sbb
mov
aaa
cmp
hlt
adc
sbb
pop
and
jae
cwtl
lahf
cmpsl
fs
and
xchg
or
mov
jl,pn
or
push
shlb
fisubrs
add
sbb
inc
inc
xchg
sbb
imul
add
push
adc
cli
int
xchg
jns
jg
das
sbb
shll
add
cmp
push
lea
jae
setg
cmc
xadd
mov
add
shr
ror
dec
mov
adc
mov
call
add
push
push
js
arpl
gs
add
sahf
pop
and
mov
ffreep
and
cwtl
cltd
cld
aas
mov
mov
cltd
in
pop
pop
xor
lret
jge
sbb
push
mov
leave
dec
or
inc
sbb
int
jle
aas
scas
add
cmp
and
pshufw
jp
sbb
daa
inc
push
icebp
cs
push
add
mov
sbb
mov
xchg
inc
mov
push
mov
adcl
fisttps
mov
in
out
inc
mov
test
mov
xor
movsb
jne
pop
cmp
mov
dec
mov
pop
shll
add
xchg
dec
mov
sub
cmp
fildl
rolb
js
push
aaa
and
push
and
mov
stos
dec
inc
dec
out
ret
hlt
popa
dec
dec
loope
xchg
lahf
insb
cmp
jmp
ficompl
add
and
mov
leave
pop
sbb
mov
jb
popa
in
aad
xor
mull
inc
loopne
cmpsb
sbb
into
subb
cmpl
lahf
push
cmp
sub
iret
xorb
aad
mov
jg
pop
ret
push
test
mov
lock
mov
aad
inc
jge
jno
sub
mov
loope
hlt
mov
mov
mov
jg
add
xor
sub
shlb
cmp
push
dec
cwtl
mov
push
dec
push
ljmp
sbb
dec
into
mov
jmp
sti
push
insb
aas
mov
pop
daa
xor
sbb
ret
adc
stc
cmpsb
pop
pusha
jb
sbb
jae
cmp
movsl
adc
adc
push
jecxz
mov
pop
ljmp
scas
addb
and
add
push
imul
in
jp
adc
sub
dec
sbb
and
push
aaa
push
into
cmp
ret
aas
pop
or
xor
call
xchg
mov
popf
sub
pop
jle
mov
sbb
mov
js
inc
jae
push
and
mov
mov
cmpsb
stos
cli
and
ds
and
jno
adc
cltd
dec
mov
xchg
popf
in
cli
mov
mov
sbb
leave
mov
mov
fldt
mov
movsl
mov
and
xchg
jle
das
fnstenv
repnz
shlb
mov
shlb
aaa
lods
adc
pop
mov
adc
shll
mov
mov
xor
adcl
mov
jle
hlt
pop
push
mov
aad
mov
dec
mov
into
dec
test
arpl
mov
inc
daa
and
in
mov
hlt
pop
into
cmp
add
aad
iret
test
sahf
mov
insb
push
hlt
mov
subl
mov
xchg
cmc
std
mov
mov
xchg
shrb
sub
into
in
dec
xchg
mov
and
mov
outsl
fstpt
dec
test
xor
jb
repnz
sub
cmp
inc
jnp
iret
xchg
inc
mov
mov
lock
popf
jno
mov
stos
insl
rorb
jmp
mov
sbb
pop
sub
mov
sbb
mov
jge
cmp
dec
lods
or
sub
mov
test
push
adc
jbe
mov
lahf
aaa
xor
movb
gs
faddl
sub
mov
in
jnp
push
inc
jecxz
adc
mov
popa
sti
sbb
arpl
mov
inc
ja
push
mov
aaa
sub
mov
add
push
jbe
cltd
pushl
mov
sahf
inc
push
or
jmp
sbb
pop
mov
pop
jb
repnz
shll
mov
sbb
test
xor
fiadds
or
xchg
sub
or
inc
jo
push
adc
ret
add
mov
inc
sub
popf
mov
or
out
lea
rcrb
int3
pop
stc
ret
xor
out
mov
add
cmp
push
pmuludq
aad
test
shll
mov
rol
stc
pop
cmpsl
es
inc
jo
scas
test
add
mov
inc
fists
push
movsb
push
mov
add
mov
inc
mov
imul
pop
or
jae
adc
and
xor
ds
jmp
icebp
ror
out
repz
std
mov
xchg
inc
stc
fdivs
add
les
xor
inc
iret
xor
fdivl
pop
imull
xor
cmp
xchg
arpl
cmp
scas
xor
movups
ljmp
jmp
movsb
test
adc
sub
mov
repnz
jbe
rolb
mov
cmp
jmp
ret
in
add
mov
in
nop
mov
dec
pop
sub
mov
jnp
jb
push
mov
imul
inc
jge
inc
scas
into
stc
mov
adc
mov
ret
je
jne
mov
imul
lcall
ja
dec
outsb
push
fld
jbe
scas
es
mov
inc
jne
cmc
or
add
hlt
adc
divps
leave
cmpl
mov
xchg
sbb
xchg
stos
inc
push
leave
ljmp
popa
pop
mov
add
mov
movsb
mov
xchg
pop
je
or
pop
mov
clc
dec
mov
cmp
sub
dec
lock
xchg
or
mov
roll
pushf
mov
sub
inc
and
mov
int3
sbb
xor
enter
cmp
cld
rclb
xchg
dec
sbb
roll
cmp
or
test
int
out
dec
inc
sub
les
jecxz
cmpsl
sub
popa
mov
inc
mov
in
inc
test
into
call
sbb
push
mov
push
fstpt
push
arpl
jno,pn
aas
fbstp
push
icebp
int
push
es
popf
rol
sub
dec
loopne
mov
xchg
xchg
xchg
dec
mov
int
jmp
pop
sbb
inc
pop
sbb
shll
leave
mov
sbb
repz
xor
adc
repnz
mov
shll
mov
jl
lahf
dec
dec
add
xor
ss
push
add
inc
ret
lods
cmp
jbe
adcb
mov
push
adc
xor
mov
inc
mov
int3
repz
jl
stc
xor
jp
sbb
mov
cli
loope
adc
test
cmpsb
or
pop
rolb
cld
into
rcrl
mov
adc
mov
sbb
icebp
inc
mov
cli
mov
sbbl
mov
pushf
push
shrl
sbb
adc
ret
enter
pop
inc
xor
std
inc
adc
shll
cs
je
pop
cld
jne
or
mov
push
shll
shlb
and
xchg
lock
sub
pop
jno
lods
adc
pop
xor
inc
mov
dec
mov
mov
add
push
mov
pop
xorl
popa
leave
inc
inc
and
rolb
xorb
mov
cmp
pop
rcrl
mov
mov
into
sahf
daa
lods
aad
js
aad
push
mov
ja
add
jbe
fisttps
cmp
repz
inc
aad
fwait
xor
leave
cld
sahf
nop
mov
bound
xchg
sbb
or
push
pop
inc
jmp
add
leave
jae
stos
mov
les
mov
mov
mov
push
or
pop
inc
mov
adc
lock
jp
mov
mov
cmpb
mov
xor
xor
leave
xchg
xor
cs
pop
iret
jno
xorb
mov
jns
int
or
mov
dec
mov
sahf
mov
sti
fidivl
mov
mov
or
mov
mov
sub
inc
ret
mov
scas
ljmp
lcall
xchg
data16
das
cmp
jecxz
mov
mov
inc
sub
gs
jae
xchg
mov
repz
jmp
test
xor
mov
fsubs
ret
fnstenv
xor
sbb
scas
xchg
mov
cmp
xor
inc
nop
mov
mov
mov
shlb
jns
sub
cltd
mov
sbb
das
mov
xchg
inc
push
mov
aam
jae
scas
mov
mov
cmp
scas
mov
fidivs
fstpl
adc
popf
cmp
not
mov
leave
xchg
xor
dec
xchg
mov
mov
scas
fdiv
notl
rcll
push
test
xor
mov
rcrb
sbb
repnz
xchg
xor
and
cltd
push
sub
xor
jmp
jo
pop
ljmp
xchg
popa
scas
shl
mov
fistpl
xchg
jb
dec
mov
add
daa
sbb
das
and
inc
jle
rorl
mov
mov
lds
hlt
or
jo
mov
add
inc
ds
mov
push
jno
leave
mov
faddp
mov
or
pushf
icebp
scas
in
das
pop
mov
repz
sub
add
xor
jecxz
and
mov
and
std
sbb
push
ret
cmp
add
xchg
xor
xlat
jmp
mov
pop
jb
icebp
test
sbb
int3
xor
cmc
mov
mov
mov
hlt
flds
rorl
mov
mov
ror
sbb
out
scas
adc
aaa
sbb
mov
mov
das
push
in
adc
sbb
aad
mov
lret
ret
icebp
mov
imul
adc
and
iret
xchg
cmc
loope
rcrl
mov
jle
mov
into
mov
add
inc
xor
mov
stos
xchg
bound
xchg
ret
push
mov
lret
and
jge
mov
jp
mov
popa
sbb
jae
adc
push
pop
inc
mov
into
lcall
mov
rorl
roll
cmp
or
pop
lods
sbb
cmc
notb
das
ret
mov
xor
adc
testb
leave
add
adc
xor
xlat
add
xor
pop
inc
mov
cltd
pop
mov
sbb
dec
cmpsb
mov
and
mov
jbe
jmp
xor
sbb
jle
gs
loop
and
dec
clc
mov
ror
push
lea
adcb
inc
adc
or
sbb
test
adc
ret
and
xchg
rcll
push
push
outsl
retw
mov
in
adc
mov
sub
jg
loopne
das
mov
mov
or
in
xchg
scas
cmp
mov
sub
mov
sub
push
mov
pop
xor
xchg
adc
mov
jb
xchg
or
mov
pop
insl
inc
inc
sbb
jp
jge
push
imul
xor
mov
lods
enter
ja
or
movsb
push
lock
jb
fcompl
popa
xchg
xor
adc
mov
push
push
shll
or
xchg
imulb
push
loop
mov
je
or
aaa
int3
into
sub
sti
dec
jae
xor
movsl
sub
cmp
icebp
pop
or
jae
ret
mov
es
bound
push
mov
repnz
or
push
roll
enter
xor
mov
adc
or
mov
cmp
mov
mov
call
push
cmp
lea
jo
leave
cld
aad
out
mov
adc
pop
sub
test
and
pcmpeqw
mov
test
ret
ljmp
xor
push
inc
mov
cmpsl
mov
enter
xlat
repnz
daa
push
mov
les
mov
xchg
mov
ret
int
adc
popf
jae
dec
mov
mov
and
push
icebp
xorb
xchg
xchg
or
sbb
mov
js
add
mov
xchg
leave
inc
mov
push
xor
xorb
test
shll
fcoms
xor
fldl
add
xchg
leave
mov
mov
cmp
mov
lahf
jle
mov
xchg
mov
xor
xor
ffreep
shlb
inc
adc
aad
cmp
and
mov
lock
and
sub
es
mov
push
and
js
mov
cli
push
lahf
cmc
test
jne
vpaddsb
icebp
mov
sbb
fistpl
mov
leave
jno
fwait
out
lret
lds
pop
pop
xor
adc
inc
mov
or
lock
lret
mov
add
xor
jmp
sub
iret
pop
add
into
roll
je
xchg
mov
xor
movl
cmp
in
xor
sahf
lods
dec
adc
lcall
cltd
fisttps
repz
mov
imul
inc
in
add
jg,pn
pushf
xchg
push
rcrl
pop
mov
gs
rcrl
stc
fimuls
or
rcll
das
scas
subl
sbb
mov
arpl
xchg
xor
aad
nop
inc
pop
mov
mov
mov
pop
push
movsb
outsb
inc
cwtl
into
cmp
mov
add
push
and
xchg
xchg
js
adc
mov
and
mov
and
sub
cmp
dec
sub
push
mov
gs
adc
ficoms
jmp
fcomps
mov
outsb
pop
inc
cmp
xlat
enter
arpl
mov
les
outsl
push
scas
mov
adc
jae
or
xor
movsb
sub
push
fisubs
dec
pusha
daa
sahf
mov
movsb
cmp
shrb
lock
dec
js
mov
shll
std
adc
add
inc
mov
stos
mov
out
fdivrs
mov
cli
pop
mov
testl
or
or
mov
in
cmp
add
xlat
mov
scas
out
iret
mov
mov
mov
mov
or
jbe
out
adc
mov
xor
mov
xchg
lea
enter
pop
mov
jae
loope
mov
adc
je
ds
sub
ret
shll
xor
loope
into
insb
cmp
enter
pmaddwd
sbb
jb
xchg
popf
jmp
jmp
xor
adc
fidivs
in
shlb
add
mov
dec
je
push
ret
and
int
call
das
dec
or
jae
xchg
cmp
cli
aad
xor
nop
or
push
cmp
jge
cmp
adc
nop
mov
invd
out
cmp
xlat
xor
cltd
fs
mov
adc
push
not
push
push
cld
push
outsb
mov
hlt
ljmp
mull
xchg
mov
fcompl
inc
pop
repz
jae
cli
inc
and
int3
out
das
lock
jae
push
jnp
mov
shll
cmp
mov
lret
push
je
xchg
adc
lds
ja
mov
mov
pop
mov
mov
fcoms
das
xor
scas
mov
lock
cmc
jno
xlat
lahf
nop
jb
rclb
xor
xchg
mov
jno
out
lahf
ret
mov
loope
in
mov
mov
push
mov
mov
or
mov
mov
fisttps
cmp
outsl
and
xor
xor
jo
shlb
cwtl
nop
mov
loop
jmp
clc
pop
sbb
cld
imul
lcall
jo
jnp
lods
xchg
fst
sbb
das
mov
xchg
mov
mov
je
sub
jno
sbb
stos
repnz
cmp
mov
add
outsb
xchg
jnp
add
mov
xor
cwtl
and
jmp
stc
inc
jb
add
xchg
dec
xor
dec
les
xor
xor
loop
mov
or
lock
in
add
or
push
jb
jl
aas
scas
leave
iret
add
int
ret
jmp
sbb
lods
cmp
dec
push
scas
add
mov
stc
leave
xchg
push
mov
stos
cltd
mov
pop
sahf
adc
mov
pop
cmp
outsb
aas
sbb
arpl
repnz
in
test
pop
jnp
sbb
pop
mov
push
jnp
lcall
sbb
inc
jge
out
fsubl
imul
or
les
into
loope
pand
sub
enter
insl
lock
adc
test
pop
std
mov
dec
rolb
sub
lret
sbb
popa
cwtl
pmuludq
arpl
mov
je
mov
cmp
imul
stos
jg
or
lock
loope
test
push
in
push
jmp
movl
xchg
inc
insb
jle
pop
repz
and
pop
orb
mulb
or
pop
mov
dec
stc
pushf
sub
cmp
adcb
and
push
jp
call
add
std
cld
pmuludq
dec
cmp
int3
or
add
push
test
jnp
mov
mov
lret
inc
mov
cmc
dec
ss
jle
sarl
xlat
test
pop
mov
adc
pop
pop
stos
jge
lods
call
xor
repnz
push
sub
es
cmc
xchg
aad
je
les
pop
std
ret
cltd
jmp
lret
mov
xor
or
or
mulb
sahf
push
mov
shrb
gs
stc
pushf
repnz
mov
push
pushf
pusha
lea
jne
cmp
rcl
not
mov
stc
add
shl
sub
shl
bsr
mov
clc
clc
sub
bt
cmp
cmp
stc
pushl
call
xor
xchg
gs
push
cmp
mov
cmpxchg
mov
push
addr16
int
adc
repz
cld
leave
push
into
cmp
scas
mov
add
jno
js
aad
out
dec
popf
fstpt
lahf
dec
dec
pop
xlat
dec
cmpsb
dec
cwtl
dec
cmp
xor
test
outsb
mov
outsl
dec
sbb
sbb
inc
pop
jbe
push
and
or
pop
mov
fisubrl
mov
fs
scas
inc
in
jae
jmp
mov
rcl
xchg
jmp
test
scas
rcll
iret
jmp
pop
lcall
je
jo
jo
outsb
push
gs
gs
inc
add
pop
mov
xchg
sub
outsl
nop
and
repz
stc
lds
pusha
xchg
push
adc
ds
pop
pop
fwait
adc
jge
cmp
outsl
pop
into
pop
adc
inc
xchg
sbb
adc
lcall
inc
xchg
inc
mov
cwtl
imul
cltd
fmull
loop
test
dec
mov
mull
mov
add
cmp
stc
cmp
bswap
lea
bswap
movzbl
mov
call
add
insl
imul
insl
push
je
jo
jge
aas
or
filds
and
call
in
call
clc
xor
dec
pop
rcrl
insl
ds
xor
cmc
lret
add
ljmp
jo
aaa
addl
dec
mov
dec
cmp
mov
mov
shll
insl
iret
cmpsb
mov
xchg
xchg
mov
lds
cmp
out
and
arpl
scas
pop
popf
adc
mov
insb
add
sbb
cli
cmp
shlb
les
mov
dec
xor
jmp
lea
ja
pusha
pusha
mov
lea
jb
stc
pushf
clc
bt
cmpb
call
xor
mov
dec
sub
push
shll
mov
pop
pop
or
push
push
xor
sub
fisttpl
xor
push
pop
lods
int
mov
xchg
or
mov
cmp
dec
cltd
mov
ret
mov
mov
mov
push
dec
fmull
or
cld
rcll
sub
sub
lock
std
and
jle
or
cld
test
dec
adc
push
hlt
imul
mov
lcall
das
add
or
dec
jo
data16
decl
fs
je
call
jmp
add
dec
outsl
arpl
inc
jb
add
mov
fdivr
cs
push
and
pop
mov
je
xchg
arpl
out
pop
fwait
add
lods
sbb
mov
aas
mov
rorb
jecxz
pusha
std
push
pop
mov
dec
int
stos
imul
call
stos
mov
jbe
mov
mov
ret
nop
pusha
push
jge
in
jle
jnp
cmp
fiadds
cwtl
mov
bound
popa
sahf
mov
mov
out
cmp
sub
sub
mov
leave
pop
fbstp
aad
or
inc
scas
lcall
mov
adc
xchg
jmp
mov
cli
neg
sub
stc
mov
shrd
bsf
mov
clc
movzbw
bswap
add
shl
or
shr
shl
mov
pushf
bsr
add
lea
movzbw
mov
jmp
pushf
lea
call
pusha
pushf
mov
push
pushf
push
lea
jmp
cmp
pushf
jmp
mov
and
add
lea
pushf
mov
jmp
outsb
fistpl
or
mov
push
fbld
mov
dec
adc
sub
stos
leave
bound
imul
dec
pop
movl
inc
outsb
das
fsts
add
mov
ret
add
mov
add
pop
inc
sbb
cli
inc
xchg
jb
int3
and
pushf
and
xor
pusha
add
jmp
outsb
add
scas
xor
addr16
mov
xchg
outsl
lods
mov
ret
arpl
dec
and
xchg
sbb
int3
das
loop
test
inc
sbb
bound
xchg
add
or
mov
add
data16
or
mov
push
mov
adc
andl
mov
imul
sbb
es
push
loopne
sub
pop
push
sahf
and
cmp
jne
push
add
mov
mov
mov
mov
add
popf
adc
and
inc
cmpsl
xchg
ljmp
mov
cltd
lcall
or
mov
out
mov
push
mulb
push
jne
pop
pusha
pop
cmp
int3
sub
add
mov
push
mov
repz
xchg
cld
ret
inc
fdivl
jae
loop
jmp
cmp
andb
ss
inc
mov
mov
pop
insb
cmp
or
xor
mov
test
push
sarl
or
mov
jg
mov
inc
lods
dec
or
mov
lods
push
iret
mov
and
out
pop
leave
xorb
fisubrs
add
out
cwtl
xor
add
xor
lcall
mov
ss
nop
mov
std
mov
fcompl
dec
ret
cld
cmpsl
add
movsb
adc
les
add
or
nop
jae
jmp
jne
jnp
jle
mov
pusha
sarb
mov
outsb
pop
adc
mov
sub
lock
pop
das
mov
xor
mov
ljmp
andb
cmp
add
aam
dec
or
pop
bound
stos
sbb
xchg
fistpl
and
or
pusha
std
rolb
sahf
push
adcl
dec
fldl
add
sub
lock
xlat
pusha
movl
pushl
pusha
push
jmp
movl
pushf
movw
lea
jmp
jmp
push
lea
jne
not
call
clc
xor
jmp
dec
dec
inc
inc
push
push
xor
cs
insb
add
mov
mov
call
push
jnp
pop
hlt
mov
cli
jmp
lods
filds
inc
adc
mov
outsb
pop
test
sbb
mov
lret
repnz
xchg
dec
sub
pop
fsubs
add
ret
das
cmpsw
repz
aaa
pop
shlb
std
dec
enter
jmp
pop
int
xchg
shlb
incl
mov
mov
xor
iret
adc
or
repz
imul
arpl
dec
sbb
hlt
mov
outsb
pop
mov
adcb
cmpsb
push
clc
jns
shrb
mov
les
mov
pop
fisttpl
repnz
inc
pop
rcl
xchg
enter
dec
push
mov
sub
test
sbb
es
xor
xchg
jp
clc
or
fldl
push
lahf
inc
mov
stos
jge
adc
movsl
loop
pop
in
test
jae
sbb
add
jne
mov
pop
ljmp
add
out
xor
lcall
xor
addb
cwtl
push
push
adc
sahf
adc
and
sub
adc
pop
adc
xor
sarb
inc
inc
xorl
lret
pop
lcall
lahf
adc
mov
sub
test
test
inc
call
jge
pop
rolb
add
mov
jl
into
loope
dec
pop
jo
insl
ljmp
add
rclb
xchg
aam
cs
cmc
push
push
aad
insb
and
daa
in
adc
mov
mov
jg
dec
rorb
stos
lret
icebp
adc
shufps
cli
mov
xchg
adc
xor
sbb
push
arpl
xchg
jg
dec
sbb
mov
adc
ret
cmp
aaa
fildll
pop
pop
lret
stc
xchg
mov
ffreep
mov
cltd
sub
loop
js
jle
push
roll
xor
mov
hlt
mov
test
sub
mov
out
stos
push
cmpsb
mov
loopne
insl
sub
mov
dec
mov
xchg
js
fcompl
sbb
jne
mov
or
mov
adc
cmp
jge
rclb
out
pusha
and
repnz
xchg
jne
adc
inc
mov
add
mov
hlt
cmpsl
sub
jle
pop
lcall
add
push
jg
dec
cwtl
pop
or
jl
adc
js
xorl
clc
arpl
hlt
push
cmp
lea
jne
shr
rcr
rcr
test
mov
test
add
stc
movzwl
bsr
xor
mov
stc
pusha
call
pushl
call
lea
jae
call
pusha
lea
jae
cmp
sub
pusha
jmp
mov
and
test
add
cmc
or
mov
mov
test
movl
pushf
pushf
lea
jmp
test
adc
mov
pop
lods
outsl
inc
add
xor
lds
call
mov
jl
mov
test
xchg
xchg
test
icebp
jae
out
inc
fmull
ds
lea
or
iret
and
fistl
jg
pusha
lahf
imul
movsl
subb
and
xchg
push
stos
jo
mov
mov
pop
inc
fisttpll
dec
add
jmp
jmp
lahf
adc
call
ja
ja
mov
and
lods
loopne
cmp
in
jo
xor
lret
bswap
push
adc
ret
jo
aaa
rol
mov
inc
subb
enter
cmp
pop
shlb
in
pop
mov
mov
xor
test
mov
iret
xchg
xor
mov
pusha
pushf
lea
jmp
movsbl
not
bswap
mov
lea
jmp
cld
std
add
mov
popl
jae
andl
cld
dec
cmp
push
add
mov
xchg
jecxz
fdivrl
data16
fucom
dec
cwtl
popf
outsl
loopne
dec
push
inc
inc
cltd
cmp
xchg
mov
or
mov
mov
cmpsl
mov
es
leave
sbb
and
lock
xchg
jo
xchg
mov
fs
inc
aam
pusha
fnstsw
mov
and
jbe
pop
xchg
aad
sbb
xor
adc
mov
and
call
pusha
movb
jmp
sbb
xlat
clc
jmp
jle
mov
push
push
cmpb
xor
pop
movsl
repz
dec
loope
adc
xor
lods
fldt
jl
lret
scas
and
pop
add
and
inc
lea
mov
jnp
scas
xor
inc
pop
rcrb
int
aas
daa
xor
mov
add
inc
mov
in
rcrl
mov
inc
push
xchg
ficompl
mov
adcb
mov
test
cld
aas
sbb
das
lret
mov
mov
mov
movsl
dec
test
lds
mov
or
mov
dec
sbb
ds
aad
jns
fdivl
xchg
rclb
fbstp
test
adc
xchg
cmp
or
fucomp
mov
dec
sti
pop
and
adc
mov
test
lock
test
imul
dec
add
notb
mov
sbb
bound
fwait
adc
xor
loopne
aam
xchg
test
sub
call
sub
pusha
add
mov
mov
out
lahf
lock
mov
icebp
and
aam
pop
rclb
mov
xlat
and
pop
pop
pop
mov
xchg
adc
icebp
mov
daa
pop
xchg
xchg
inc
cmpsb
std
or
pop
idivl
xchg
aam
aam
add
pop
mov
daa
cmp
insb
aas
add
out
arpl
pop
call
hlt
mov
jg
inc
and
dec
cmpsl
sahf
push
cs
out
mov
pop
incl
mov
mov
jge
push
aaa
pop
mov
imul
mov
sahf
pop
sub
movsl
sahf
dec
in
scas
push
sub
into
cmpl
sub
aad
sub
xchg
push
ljmp
insl
shlb
insl
iret
sub
hlt
mov
pop
inc
adc
fs
pop
sbb
push
test
fsubl
push
rorb
out
mov
mov
fucomip
jmp
dec
mov
sbb
jle
and
mov
mov
push
outsb
out
pop
add
insb
xor
push
call
repz
sub
cmp
push
out
mov
fdivs
jecxz
cmp
popa
enter
lods
dec
inc
movsb
add
add
stos
jae
movsl
out
les
repnz
test
push
les
and
mov
into
stos
sbb
std
ljmp
cmp
inc
jmp
xchg
push
insb
or
jo
xchg
mov
enter
add
test
lret
sub
pop
pop
jge
xchg
sahf
sbb
xchg
mov
das
mov
mov
stos
ficomps
pop
cmp
inc
aad
jecxz
popa
inc
lock
fimuls
stc
loop
lock
xor
in
es
mov
outsl
and
cmp
rcll
dec
imul
js
leave
std
dec
loop
pop
cmp
mov
dec
mov
push
xbegin
fists
daa
push
dec
push
outsl
mov
rcll
and
xchg
out
and
pop
lret
lahf
adc
xchg
rorb
mov
cltd
inc
jnp
fwait
sbb
arpl
mov
dec
int3
ficoms
mov
cmc
call
push
movw
push
mov
pushf
lea
jmp
mov
or
repz
pop
adc
inc
out
and
cwtl
mov
cmp
out
mov
lds
ja
dec
push
jl
push
push
dec
mov
xchg
mov
jnp
fistl
xor
push
xor
push
inc
stc
sahf
dec
or
adc
xor
push
adc
outsb
push
cmp
push
pop
aam
mov
push
aas
mov
scas
mov
ja
push
lret
jno
xchg
and
addr16
jns
push
xchg
push
sarl
cmpsb
pop
adc
or
mov
push
inc
add
mov
xchg
popf
push
add
fsub
fs
fs
pop
mov
jecxz
jg
repz
xor
ja
cmp
xchg
outsb
pop
push
cmpsb
aaa
shld
or
add
cmp
adc
jmp
and
push
shll
add
sub
push
mov
cmp
xchg
je
jne
and
push
rorl
cwtl
jns
test
neg
cmp
mov
push
fstps
cmpsl
fisubs
inc
subl
push
and
mov
sbb
jecxz
xchg
cmpsb
cltd
push
xor
pop
cwtl
or
fcoml
lods
xchg
sbb
stos
pop
sbb
add
fidivrs
push
dec
out
rclb
mov
clc
loopne
dec
std
jb
add
jle
adc
movsb
mov
mov
mov
stos
pop
shlb
sub
ljmp
or
push
push
or
cld
repz
xor
push
inc
mov
cmp
pusha
icebp
dec
jecxz
scas
xor
iret
cmpsb
movl
mov
cmp
mov
fsubrl
in
push
dec
ficoml
rolb
decb
jns
or
cmp
pop
xchg
inc
nop
maskmovq
notl
jne
or
pop
addr16
leave
std
jo
lahf
adc
add
mov
fisttps
adc
out
jno
out
dec
cltd
fimuls
dec
cli
in
icebp
inc
out
fldl
ss
mov
push
mov
cmp
sub
add
jae
popa
addr16
outsl
js
add
test
jmp
lea
jmp
test
cmp
pusha
jmp
pop
test
repz
xorl
mov
dec
or
dec
dec
jl
shlb
xchg
sbb
cli
fwait
or
sti
push
mov
add
test
sahf
sarl
pop
fstps
sub
xchg
mov
add
lret
ljmp
ss
stc
mov
cmp
fimull
dec
mov
or
jl
fwait
jae
pop
shrb
repz
push
gs
call
cld
ffree
insb
outsl
in
pop
mov
mov
or
jno,pt
and
mov
mov
sbb
out
aaa
mov
pop
fcompl
shll
adc
movsl
push
ret
adc
ret
sub
mov
cmpsb
lock
pop
cli
dec
jmp
lret
mov
shll
push
inc
mov
or
push
mov
lea
inc
negl
stc
in
outsl
in
inc
cmp
adc
test
sahf
jns
fistps
sti
repz
in
jle
adc
xchg
xor
out
fdivr
insb
cmp
mov
fidivrl
insl
adcb
sub
popf
jle
into
jecxz
inc
add
add
incb
xor
cli
fwait
mov
sub
mov
js
pop
enter
hlt
dec
test
popa
bsr
cltd
mov
or
sub
pop
xchg
fwait
in
adc
and
repz
sub
fwait
xchg
ds
sti
push
enter
mov
rclb
cmp
loop
mov
outsb
fldt
arpl
movw
outsb
add
fnsave
lea
jae
jmp
lea
jb
cmp
cmpb
call
stos
out
cli
repz
ljmp
popa
jb
mov
fstpt
mov
ret
push
cltd
jp
mov
cmp
ljmp
cli
addr16
nop
inc
or
dec
outsb
push
dec
rclb
aaa
scas
leave
mov
jnp
jl
inc
lcall
jae
mov
mov
jae
cmpsb
sbb
mov
and
loopne
inc
push
rcrl
mov
push
mov
push
add
call
mov
or
add
std
loopne
xchg
imul
stc
repz
mov
inc
roll
push
xor
or
jl
adc
adc
aam
dec
inc
mov
mov
or
iret
rcrb
jae
gs
in
adc
sarb
adc
cli
movsl
insb
popf
pop
test
pop
pop
or
mov
in
call
mov
test
int3
adc
aas
xchg
test
and
nop
and
cld
outsl
mov
or
cli
test
popf
out
push
push
das
in
sub
clc
repz
dec
pop
cli
sub
filds
xchg
add
add
push
ret
dec
adc
cltd
push
mov
and
jg
sahf
pop
popf
jmp
xchg
movsb
fsubrs
or
aam
test
jb
inc
jecxz
and
mov
lcall
push
rolb
push
xor
mov
cmp
mov
inc
and
mov
inc
xchg
add
clc
repz
mov
or
out
pop
nop
loope
jae
sbbb
jno
test
mov
test
sti
jo
lds
fwait
sbb
cmp
cmp
add
daa
shlb
daa
cmp
dec
mov
lea
mov
ds
stc
mov
fdiv
aam
add
fldl
ss
mov
test
mov
push
iret
sarb
adc
sbb
xchg
adc
mov
daa
add
inc
cmp
bts
mov
ror
cmc
add
xor
test
shr
cmc
inc
bswap
call
int
out
div
mov
ret
xor
inc
ja
sub
dec
pop
loop
mov
sub
xor
add
adc
fdivrs
pop
clc
push
dec
add
sbb
mov
lret
jb
cmp
add
in
pop
cmc
dec
je
int3
scas
sti
sub
sub
loope
call
pop
xchg
fldenv
push
lahf
push
jae
mov
arpl
add
dec
call
dec
adc
aaa
add
sbb
mov
cmp
roll
inc
test
pop
ss
fwait
cs
ret
xor
div
mov
pavgb
xchg
js
stos
or
sbb
push
test
add
shlb
leave
push
cmpsb
mov
cmp
lret
xlat
mov
inc
add
stos
sbb
dec
pop
sbb
loop
sbb
fisubrl
fldl
mov
jecxz
cmovbe
data16
xorb
push
and
loop
rcll
ja
ss
push
push
dec
insl
xlat
cli
cmc
mov
jecxz
cmp
imul
dec
pusha
jecxz
pop
cld
jg
and
sahf
stos
xor
pop
shll
mov
dec
dec
push
push
dec
dec
dec
cs
push
push
add
cli
fisttps
repz
lret
sub
jle
mov
jb
adc
mov
inc
inc
imul
and
adc
cmp
inc
inc
mov
pusha
js
push
or
mov
out
shrl
add
ss
je
sub
dec
imul
movsl
js
ja
sbbb
push
push
into
push
lcall
sbb
add
mov
mov
ljmp
sbbb
cld
lea
xchg
mov
jp
andb
sub
out
sub
and
pop
sbb
and
shrl
dec
pop
lret
popf
push
filds
repnz
bound
gs
lods
arpl
mov
into
fistl
out
jae
push
enter
mov
dec
enter
jg
lods
lock
or
fidivrs
push
fsts
cwtl
in
xchg
cmpsl
fdecstp
cs
or
inc
cli
cwtl
mov
mov
xchg
fsts
pop
pop
lahf
dec
scas
fbstp
mov
pop
sbb
jnp
dec
inc
inc
inc
rol
cmc
rcr
cmp
xchg
setne
stc
mov
pusha
jmp
jmp
adc
hlt
repz
js
mov
adc
pop
out
fsubrs
int3
rclb
adc
xchg
cwtl
xlat
cmp
xor
or
rcl
pop
das
aaa
clc
or
lret
andl
je
outsl
push
mov
int3
stc
jecxz
xor
fisttpll
add
fstl
inc
clc
stos
pop
stc
or
mov
in
mov
xor
mov
jns
pop
stos
lods
loopne
xchg
fdivrl
push
sbb
scas
jmp
les
lret
sub
jb
movsb
adc
hlt
repz
mov
or
movsl
dec
in
mov
add
sbb
roll
out
jmp
xor
inc
xchg
mov
push
divb
lods
inc
add
lret
jo
negb
test
daa
stos
sbb
cmp
push
and
lea
loopne
iret
cli
shll
pop
lods
push
dec
enter
dec
jb
fisubrl
sbb
stos
pushf
sbb
mov
cmp
mov
inc
fmuls
scas
adc
repz
inc
mov
push
mov
sub
dec
cwtl
shlb
ljmp
xchg
je
in
fildll
ret
clc
mov
fwait
mov
mov
dec
and
xor
jecxz
hlt
or
imul
push
jno
jg
cmpl
mov
and
pop
cmp
xor
repz
xchg
cltd
sbb
sub
into
punpcklbw
xor
lret
inc
dec
xor
dec
popf
mov
adc
mov
and
mov
inc
test
jno
jle
sub
rorb
fmuls
push
cmp
push
push
mov
testl
cmp
dec
mov
push
popa
stos
jle
ds
aad
lret
jle
xchg
xchg
cli
cmp
jae
lahf
pop
lret
lea
jne
call
mov
push
pushf
pushl
pushl
pushl
ret
in
bound
push
and
aam
xchg
xchg
and
out
pop
push
mov
into
pop
push
mov
dec
lret
xchg
sub
jl
scas
mov
je
or
add
arpl
enter
sbb
inc
jb
dec
xchg
cmc
sub
jae
stos
std
xor
xchg
aad
push
jne
dec
ss
push
rcl
arpl
add
outsl
jae
push
jb
outsb
je
jb
jmp
add
push
gs
jne
jb
push
popa
insb
jne
inc
add
and
pop
int
out
loopne
inc
adcl
adc
loope
jne
ret
jne
cmpsb
add
and
mov
pop
movsl
hlt
dec
pop
add
out
push
jne
sub
cs
pusha
adc
jecxz
sbb
push
push
aas
mov
sub
mov
or
mov
movsl
push
inc
mov
movsl
test
jge
shrl
repnz
leave
lret
insl
into
dec
shlb
lods
imul
xchg
bound
std
aaa
jecxz
xchg
ss
clc
dec
mov
scas
imul
jp
push
fbstp
xchg
mov
mov
shlb
int3
out
fstl
fucomi
ljmp
mov
cld
mov
lock
cmp
xchg
in
inc
gs
ficompl
pop
mov
push
dec
or
fdivrl
add
sub
popf
pusha
rcll
gs
fisttpl
xor
pop
jle
les
movzbl
pushf
lea
pushf
jmp
push
dec
scas
lock
aaa
js
jp
cld
int
jg
fsubrl
imul
sarl
inc
inc
mov
mov
push
cmp
lahf
add
jecxz
gs
inc
std
cmpsb
push
in
pop
sbb
mov
outsl
mov
jmp
xchg
rep
sub
mov
adc
fisubs
or
or
les
mov
lret
and
inc
lea
loopne
fisttps
xchg
adc
stos
pop
mov
das
pushf
lods
movsb
leave
dec
jmp
add
je
outsl
fs
gs
popa
outsb
fs
gs
add
pop
popf
out
repz
inc
mov
xchg
inc
push
daa
enter
sbb
in
inc
lret
sbb
mov
dec
pushf
jae
pop
push
inc
lcall
pop
add
outsl
jbe
inc
sbb
jge
pop
rclb
popa
lods
sub
jno
aam
sub
js
push
test
pusha
and
or
cli
sbb
loopne
add
mov
push
cmc
dec
loope
or
fisttps
xchg
les
cmc
sti
lods
sub
lret
cmp
btc
repnz
push
ja
popf
pusha
popf
stos
out
dec
pop
adc
fs
iret
sub
repz
dec
dec
sbb
dec
ficomps
adc
shlb
sbb
test
mov
xor
cmp
sbb
repz
dec
or
inc
testl
push
mov
cmpsb
fists
shll
add
stc
aad
pop
push
les
xchg
nop
pop
sub
mov
inc
xchg
jg
movsl
mov
shll
inc
imul
test
btc
ror
rol
mov
xor
sbb
push
and
movzbw
btr
pusha
mov
test
not
add
setb
mov
rcl
bts
bt
mov
shrd
shl
xchg
pop
sbb
stc
lea
mov
shr
pushf
or
mov
test
btc
mov
test
mov
cmc
or
push
lea
je
pusha
stc
test
pusha
or
jmp
dec
cmp
jmp
pushf
jmp
pusha
movl
lea
jne
setg
pushfw
rcr
xor
and
mov
call
xchg
or
mov
das
mov
loop
adc
xchg
inc
ljmp
shlb
or
pop
cltd
test
fucomp
add
sahf
cwtl
imul
daa
in
addr16
sahf
mov
repz
push
lea
mov
cmp
shll
dec
jbe
inc
out
xchg
mov
mov
mov
push
push
cmc
jb
mov
mov
push
add
jmp
pusha
pushl
mov
push
mov
movw
mov
mov
push
mov
pushf
lea
jne
rcr
mov
push
pusha
pushf
and
mov
cmp
mov
pushf
call
daa
aad
rcl
rdtsc
pushf
clc
cmc
mov
sub
pushf
call
pushf
test
xor
stc
sub
call
movsbl
bswap
inc
shrd
and
neg
jmp
jmp
jmp
mov
push
mov
jmp
jmp
push
pusha
pushf
mov
jmp
mov
pushf
mov
call
lahf
sets
pushf
pusha
mov
setg
setl
mov
mov
jmp
movl
movzbl
not
mov
jmp
pusha
mov
pushf
mov
call
pushf
mov
movw
decl
movl
jmp
bt
ror
push
cmc
call
mov
mov
movb
lea
jmp
bswap
inc
inc
sbb
ror
shl
mov
add
movzbw
neg
shl
pushl
adc
not
sub
not
movzbw
sar
xor
not
adc
shld
push
add
bsr
pusha
shr
movsbw
mov
call
push
pusha
mov
pusha
mov
pushf
mov
call
mov
lea
jne
shl
pusha
add
xorb
lea
mov
pop
pusha
pushf
lea
jmp
pushf
pushl
popl
mov
mov
mov
mov
lea
jmp
mov
mov
pushf
jmp
cmc
bt
xchg
clc
btc
mov
pusha
movsbl
lea
mov
rol
bts
lea
mov
movsbw
movzbw
pushl
popl
pushf
movl
bswap
mov
pushl
pushl
pushf
ror
mov
stc
sub
push
pushf
pushf
lea
jmp
push
push
mov
push
push
lea
jmp
lea
bsf
movl
bt
sub
xchg
shl
mov
clc
pushf
mov
btc
bt
add
add
lea
shrd
mov
bsf
adc
and
sub
setge
inc
cmc
and
sub
neg
test
add
xor
shl
sub
setge
xor
lea
cmc
sub
test
shl
add
neg
movzbl
bsr
mov
cmc
neg
jne
pushf
clc
add
pushf
pushf
call
jmp
sub
mov
movb
call
jmp
jmp
repz
popl
call
test
sub
pushf
push
mov
pusha
push
push
push
lea
jmp
pusha
mov
mov
pusha
push
push
pushl
lea
jmp
sub
mov
mov
lea
jmp
bt
add
bt
test
sub
jmp
pusha
call
call
mov
pushf
mov
pushf
pushf
popl
jmp
pushf
jmp
pusha
lea
cpuid
test
sub
call
rol
lea
jns
bswap
ror
bsr
and
btc
bswap
xor
mov
bt
cmp
sub
jmp
pushf
pushf
jmp
pushf
mov
lea
ja
pusha
mov
pusha
repz
popl
pushf
pushf
xchg
bswap
rcr
mov
bswap
mov
rcr
mov
btr
bts
mov
pushl
popl
movzbl
rcr
call
lea
jne
pushf
call
bts
movzbw
cmc
mov
rcl
test
and
or
mov
jmp
xchg
call
lea
ja
cmp
pusha
lea
btr
lea
inc
rcr
pushf
sub
aas
bsf
sub
lea
cmp
dec
movzbl
bsr
and
sub
sub
movzbw
mov
pushf
movsbw
mov
mov
pushf
popl
mov
movzbw
lea
not
push
movzbw
lea
lea
pusha
mov
not
lea
bswap
lea
jmp
movb
movb
movl
push
jmp
rcr
rcr
mov
push
mov
pusha
stc
clc
add
mov
movb
mov
push
lea
jmp
jmp
add
call
inc
push
mov
pushf
pushl
lea
jmp
pushl
popl
pushf
movb
pushl
mov
lea
jmp
cmp
sub
cmp
call
lea
jo
push
pusha
pop
repz
popl
bswap
cmc
bswap
jmp
call
stc
test
pusha
add
pushf
jmp
sub
mov
mov
movb
lea
jmp
setb
inc
cmc
mov
jmp
bt
neg
rcl
bsf
add
rol
not
xor
bts
shrd
sub
adc
dec
add
not
movzbl
sbb
mov
stc
stc
clc
jmp
pushf
clc
sub
test
and
push
pushf
mov
movb
pushf
popl
pushf
pusha
pushl
popl
pushf
pushf
pushf
lea
jmp
cmc
ror
mov
call
pushf
push
pusha
pushf
mov
movb
push
jmp
pusha
pusha
push
repz
popl
call
lea
movb
pushf
lea
jmp
mov
call
stc
test
cmp
sub
push
mov
mov
pushl
lea
jmp
cmc
sub
jmp
pushf
mov
pushf
pusha
pushf
pushl
lea
jmp
btc
bts
cmc
pushl
popl
lea
pop
pushf
bswap
movl
stc
stc
cmc
pop
mov
bt
mov
jmp
test
test
add
test
sub
call
pushl
popl
bt
pop
pusha
movw
movl
pushf
clc
lea
mov
clc
mov
ror
test
jmp
pushf
call
pushl
popl
pushf
push
movw
pushf
lea
jmp
pushf
aam
mov
call
pushl
popl
pushf
movb
movb
mov
lea
jmp
pushl
popl
pushf
lea
jmp
mov
pushf
mov
pusha
pushf
pushl
lea
jmp
movl
add
pusha
mov
call
call
ror
notl
aas
shld
lahf
aam
mov
cmc
clc
sub
clc
clc
push
and
pushl
pushf
pushf
popl
mov
call
push
mov
pushf
mov
call
mov
pusha
pusha
call
mov
movb
pushf
lea
jmp
mov
movl
lea
jmp
stc
pushl
popf
mov
pushf
movw
pushf
lea
jmp
lea
cwtl
pusha
mov
jmp
pushf
call
bsr
test
mov
dec
or
xor
mov
call
push
push
pushf
call
jmp
movsbw
mov
mov
push
lea
push
call
jmp
cmp
cmc
add
jmp
btr
movl
clc
jmp
mov
pusha
lea
jb
push
push
mov
pushl
call
lahf
lahf
mov
xadd
pop
bts
cwtl
pushf
xchg
mov
daa
mov
xadd
xor
mov
lea
rcl
add
sbb
mov
shld
mov
cld
btr
test
pushl
popf
xchg
pop
pushf
mov
pusha
mov
movsbw
jmp
push
sub
pushl
mov
pushl
lea
jmp
mov
pushl
popl
push
pushf
mov
pushf
lea
jmp
pushf
popl
push
pushl
popl
mov
movb
movb
lea
jmp
push
bswap
movzbw
movzbl
movsbw
jmp
stc
sub
pushf
pusha
pushf
call
push
call
pushf
pushf
pushl
popl
mov
pushf
mov
lea
jmp
lea
call
push
mov
pusha
pusha
call
jmp
stc
pushl
popl
cmc
mov
cmc
cmp
add
lea
jns
bt
popf
pushf
push
lea
jmp
mov
jmp
call
mov
push
call
sub
cmp
bt
bt
cbtw
clc
cmp
clc
call
rol
rol
rcr
sar
sets
dec
and
sbb
rcr
rol
mov
stc
clc
pusha
add
pushf
push
movl
mov
mov
mov
lea
jmp
call
adc
aas
shl
mov
jmp
repz
popl
cmc
clc
clc
stc
mov
rcr
mov
mov
bts
bswap
mov
not
mov
call
pushf
mov
mov
pusha
call
movb
rep
jmp
mov
jmp
jmp
mov
btr
mov
bts
push
btr
movsbw
lea
push
not
lea
pushl
not
cmc
push
rol
jmp
pusha
mov
pushl
mov
call
mov
mov
mov
call
pusha
jmp
call
add
mov
pushl
shld
pusha
jmp
mov
pushf
pushf
ror
movb
pushl
jmp
mov
push
mov
push
movb
repz
popl
pusha
xchg
btc
bts
rcl
rcr
mov
rcl
pushf
not
mov
btr
jmp
jmp
bt
add
call
call
sub
jno
pushf
sub
push
jmp
ror
cmp
pushl
pushf
sub
pushf
movw
push
push
lea
jmp
pusha
pushf
popl
jmp
add
pusha
pushf
push
jmp
call
mov
not
pushf
pushf
mov
mov
mov
pushl
ret
shr
pushf
mov
jmp
xor
xor
inc
rcr
movzbl
push
sub
stc
mov
pushl
ror
push
inc
stc
clc
movw
pusha
rol
pushf
pushf
pushl
call
clc
cmpl
pushl
call
adc
aas
mov
shr
lea
stc
push
mov
cmc
pushf
cmp
not
cmc
mov
movb
stc
not
push
test
cmc
and
pusha
push
movl
pushf
mov
pushf
push
push
call
xorl
cli
inc
nop
incl
sub
pushl
xor
call
sub
cmp
nop
call
inc
nop
pushl
xor
push
dec
nop
incl
das
nop
jmp
nop
jmp
nop
out
cmp
lcall
nop
incl
xor
incl
ss
dec
ss
ljmp
xor
push
dec
nop
dec
ss
ljmp
call
nop
jmp
cmp
lcall
nop
pushl
nop
decb
jmp
nop
cli
inc
nop
ljmp
xor
push
dec
nop
dec
cs
clc
xor
nop
decl
nop
decl
cmp
call
sub
decl
nop
jmp
ds
fidivrl
nop
pushl
nop
ljmp
xor
push
dec
nop
pushl
xor
incl
inc
nop
cmp
nop
cli
inc
nop
incl
sub
call
nop
jmp
nop
inc
sub
ljmp
xor
push
dec
nop
jmp
xor
call
inc
nop
ljmp
lcall
nop
dec
dec
nop
ljmp
jmp
xor
cmp
nop
push
dec
nop
decl
cmp
inc
sub
call
sub
decl
nop
decl
nop
call
nop
lcall
das
nop
jmp
nop
cli
inc
nop
ljmp
xor
push
dec
nop
dec
cs
incl
inc
nop
jmp
inc
nop
lcall
nop
pushl
nop
jmp
nop
fidivrl
nop
pushl
inc
nop
lcall
nop
decl
nop
jmp
xor
push
dec
nop
call
nop
clc
xor
nop
pushl
xor
nop
lcall
nop
dec
xor
nop
ljmp
pushl
xor
nop
ljmp
xor
push
dec
nop
pushl
nop
call
xor
nop
call
sub
pushl
dec
nop
call
sub
call
sub
pushl
nop
ljmp
xor
push
dec
nop
jmp
nop
call
nop
dec
ss
pushl
nop
clc
xor
nop
clc
xor
nop
lcall
sub
jmp
nop
ljmp
xor
push
dec
nop
clc
xor
nop
pushl
nop
pushl
xor
nop
jmp
nop
call
inc
nop
inc
xor
dec
dec
nop
pushl
nop
out
cmp
jmp
dec
nop
cli
inc
nop
daa
nop
decl
nop
dec
xor
nop
call
xor
clc
xor
nop
jmp
nop
pushl
xor
lcall
nop
incl
aaa
nop
dec
dec
nop
daa
nop
jmp
push
nop
call
xor
fidivrl
nop
pushl
nop
inc
aaa
nop
pushl
xor
ljmp
xor
push
dec
nop
call
inc
nop
incl
ss
pushl
xor
daa
nop
decl
nop
incl
sub
lcall
dec
nop
decl
nop
ljmp
xor
push
dec
nop
incl
aaa
nop
lcall
nop
jmp
inc
nop
jmp
inc
nop
incl
sub
call
inc
nop
pushl
nop
ljmp
xor
push
dec
nop
push
cmc
shl
call
lea
jle
push
pushl
popl
push
push
pushf
mov
lea
jmp
lea
jb
mov
jmp
lea
jno
pushf
mov
push
push
pushf
mov
movb
mov
jmp
push
sbb
mov
sub
mov
pusha
test
stc
sub
cmp
shl
movl
mov
pusha
movb
call
not
jmp
push
push
lea
pushf
lea
jmp
mov
movb
pushf
push
pushl
pushl
ret
pushf
lea
jle
pushf
mov
pushf
pushf
pusha
pushf
lea
jmp
jmp
ror
pusha
push
call
mov
lea
xchg
movw
pushl
mov
pop
clc
ror
rcl
pushl
popl
movsbw
btc
bts
ror
movl
bt
stc
cmc
mov
stc
ror
mov
sub
not
call
neg
pusha
jmp
mov
rol
bt
push
movl
ror
setno
shrd
sub
or
clc
test
bsf
not
stc
push
lea
pusha
btc
sub
push
rcr
shl
lea
lea
bsf
mov
xor
add
not
mov
shl
sub
pusha
lea
push
lea
inc
rcr
movsbw
jmp
mov
not
shr
shl
sub
movzbw
mov
jmp
call
stc
call
movw
mov
push
mov
push
push
call
mov
cmc
sub
cmc
cmp
mov
add
call
cmp
sub
cmc
bt
pusha
xchg
test
call
and
cmc
mov
rol
rol
movzbl
stc
mov
stc
clc
add
jmp
not
pushf
jmp
mov
stc
movl
test
not
clc
pushl
not
jmp
mov
xchg
push
not
rcr
rol
mov
movw
cmc
pop
mov
pushf
pop
clc
push
mov
jmp
shrd
setle
xadd
add
mov
pusha
cmc
call
lea
jne
pusha
pusha
jmp
sub
clc
ror
pusha
jmp
mov
pushf
call
inc
clc
sub
movb
push
rol
push
cmp
sub
bt
clc
call
jmp
push
pushl
call
ror
mov
cmc
sub
jl
sub
pushf
lea
jmp
mov
pushf
jmp
setne
movsbw
push
lea
jmp
mov
movw
stc
cmc
mov
ror
pop
not
pushl
popl
bswap
movl
btr
clc
mov
pusha
ror
jmp
movsbl
mov
pusha
stc
bt
add
push
pushl
jmp
pushf
sub
pusha
test
shr
movb
push
mov
movw
jmp
repz
popl
jmp
mov
pushf
pushf
mov
jmp
btr
mov
pushf
clc
pop
bt
pushl
popl
ror
movl
cmc
mov
clc
pushl
mov
ror
mov
sub
mov
lea
jmp
pushf
popl
pushf
pushl
popl
movb
mov
lea
jmp
dec
btr
mov
jmp
pushf
push
pushl
popl
pusha
push
lea
jmp
add
mov
call
jmp
pushl
pushl
popl
pushl
mov
pushf
movb
lea
jmp
mov
pushl
mov
jmp
movb
mov
push
mov
call
mov
pushf
lea
jmp
stc
call
pusha
mov
call
sub
call
cmp
sub
pushf
bt
pushl
shr
jmp
call
movb
mov
movw
pusha
mov
pushf
lea
jmp
push
mov
jmp
pusha
repz
popl
push
mov
xchg
not
mov
pop
ror
clc
mov
pusha
pushf
bts
movzbw
mov
clc
call
mov
pushl
movw
pushf
repz
popl
pushl
xchg
cmc
bt
rol
bts
mov
ror
mov
movzbw
btr
rol
pushf
mov
movw
btc
pushl
popl
cmc
clc
bswap
movl
pushl
not
btc
movzbw
mov
bt
cmc
bt
stc
ror
movb
bt
pushf
cmc
sub
pusha
lea
jmp
pushf
pusha
pushf
pushf
popl
push
pushl
popl
push
movb
lea
jmp
mov
bts
movsbl
rcr
pop
mov
rcr
mov
rcl
rol
bt
pushl
popl
pop
movl
lea
bt
ror
mov
mov
mov
jmp
shl
push
dec
and
cmp
pop
bts
sub
mov
clc
call
movb
mov
mov
pusha
push
mov
push
pushf
repz
popl
call
rdtsc
rdtsc
mov
push
mov
call
pushf
pushf
popl
pushf
movb
lea
je
push
pushl
popl
pusha
push
pushf
pushl
lea
jmp
call
jmp
clc
pusha
xor
mov
test
stc
add
mov
movb
pushf
clc
add
cmp
bt
add
stc
clc
sub
call
pusha
pushf
mov
movb
mov
pusha
call
jmp
pushf
clc
cmc
add
pusha
mov
push
movw
pushl
ret
pushf
mov
pushf
lea
jmp
call
pushl
mov
lea
jmp
shl
mov
jmp
mov
call
test
test
mov
stc
not
add
setnp
jno
mov
push
mov
pusha
pushl
pushf
push
lea
jmp
call
mov
pusha
movb
pushf
lea
jmp
not
mov
cmp
clc
add
pushf
jmp
mov
mov
mov
movb
mov
lea
jmp
pushf
repz
popl
bt
xchg
pushf
ror
mov
ror
mov
mov
jmp
jmp
movw
push
mov
mov
mov
call
mov
jmp
pushf
popl
pusha
pushf
call
rol
shrd
bts
movsbw
mov
xor
add
pusha
mov
mov
pushf
mov
pusha
lea
jmp
cmp
mov
stc
xor
pusha
pushf
movb
dec
pushl
neg
pushf
stc
xor
cmp
cmp
xor
cmp
pushl
mov
cmc
stc
pushf
sub
pushf
lea
jne
pusha
pushl
mov
pushf
push
push
call
cbtw
mov
shl
sbb
mov
test
jnp
pusha
sub
cmc
shl
jmp
mov
pushf
jmp
pusha
pushl
pushf
popl
jmp
call
call
lea
not
shrd
mov
pusha
cmc
add
movb
movb
pushl
dec
cmc
rol
movb
cmp
cmp
add
bt
call
mov
call
pusha
jmp
repz
popl
cmc
movw
mov
pop
clc
mov
btc
rcr
mov
ror
movsbw
mov
ror
lea
bt
pushl
popl
jmp
add
shl
sub
lea
shl
and
cmc
btr
mov
test
jmp
pusha
call
add
bt
shrd
pushf
mov
pusha
pushf
popl
pushf
pushl
popl
push
lea
jmp
pusha
pushf
popl
pushf
jmp
rol
mov
jmp
repz
popl
bt
jmp
xor
pusha
call
pusha
mov
mov
movl
pushf
push
lea
jmp
mov
push
push
mov
jmp
pusha
pushl
popl
pushf
mov
pushf
lea
jmp
mov
divl
pusha
call
pushf
mov
push
pusha
pusha
pushf
mov
lea
jae
push
pusha
mov
call
mov
pushf
pushf
mov
push
lea
jmp
push
jmp
mov
rcr
rcl
mov
call
repz
not
push
mov
clc
btr
push
push
mov
btc
push
movzbw
pushl
btr
call
neg
pushf
call
setl
mov
cmc
bt
cmc
add
pusha
mov
pusha
pushf
mov
lea
jmp
xchg
not
movzbw
bswap
mov
jmp
sub
push
mov
pushf
lea
jmp
pushf
popl
call
jmp
mov
push
movb
lea
jmp
pusha
inc
mov
pushl
lea
jmp
add
lea
jbe
push
push
pushf
popl
jmp
bsr
cmp
not
movsbw
mov
cmp
sbb
shl
mov
mov
pusha
test
push
add
jmp
pusha
pushf
popl
movb
jmp
jmp
push
mov
pushf
pushf
mov
lea
jmp
jmp
rcr
shl
sar
sub
movzbl
pusha
cmp
test
jmp
cmc
xchg
rol
bts
pop
mov
push
mov
jmp
pusha
pusha
inc
lea
bt
btr
neg
rol
call
jmp
pushf
add
cmc
cmp
movl
add
push
pushl
cmp
cwtl
test
sub
jmp
mov
mov
pushf
repz
popl
mov
bt
jmp
movzbw
mov
jmp
stc
cmc
sub
pushf
pushf
movw
push
lea
jmp
ror
jmp
call
mov
pushf
pusha
movb
lea
jmp
test
sub
push
call
clc
bt
bt
call
movb
cmc
mov
cmc
rcl
mov
btr
not
jmp
bt
cmp
sub
cmc
shl
pusha
mov
jmp
mov
test
clc
sub
jmp
movsbw
aad
sbb
aad
mov
inc
mov
cmc
pusha
push
stc
add
push
mov
pushf
push
pushf
push
lea
jmp
movzbl
bswap
mov
dec
inc
bts
xor
mov
dec
dec
movsbw
neg
shl
clc
movw
or
xor
mov
xor
sub
shl
clc
push
mov
cmp
add
jmp
cwtl
jmp
test
sub
pushl
push
pushl
lea
jmp
mov
push
push
lea
jmp
movw
jmp
pushf
mov
push
pusha
pusha
pushf
mov
call
sub
neg
call
push
rol
mov
sub
mov
cmc
cmc
mov
sub
call
pushl
popf
movb
push
movb
pusha
lea
jmp
pushl
popl
pushf
lea
jmp
call
call
push
mov
push
mov
pushf
pushf
lea
jmp
mov
add
pushf
add
push
pushf
mov
sub
pushf
jmp
test
sub
pushf
xor
push
pusha
cmc
pushl
add
jmp
ror
bsf
das
shl
mov
pusha
bsf
call
ror
mov
sub
pushf
lea
jmp
test
bsf
sbb
setp
mov
rol
pushf
not
cmp
mov
mov
call
jmp
push
mov
pushf
pushf
pop
mov
pusha
mov
movsbw
call
mov
movb
pushf
pushf
movb
lea
jmp
push
mov
pushf
pushf
lea
jmp
mov
pushf
popl
pushf
call
pushl
popl
movb
movw
movw
lea
jmp
xchg
aad
cltd
mov
shl
mov
pushf
cmc
sub
jg
add
call
call
pushl
popl
pusha
lea
jmp
jmp
pusha
pushl
mov
pusha
call
call
clc
ror
cmp
bt
sub
pushf
push
movl
lea
jmp
mov
pushf
pushf
pusha
pushf
lea
jmp
shl
xor
rcr
shr
mov
pusha
stc
sub
cmp
cmc
cmp
mov
shr
push
pushl
mov
jmp
push
push
mov
pushf
pusha
mov
push
call
mov
jmp
pushf
mov
pushf
pushf
movw
lea
jmp
cmc
ror
setne
setae
setbe
inc
stc
lea
ror
rol
bts
rcl
sub
pushf
movzbl
clc
mov
push
stc
or
movl
lea
je
call
push
call
btr
add
mov
rcl
xor
mov
jmp
add
add
call
pushf
mov
push
mov
push
lea
jmp
mov
movw
cmp
sub
bt
bt
jmp
sub
stc
shr
jmp
mov
movb
lea
jmp
call
call
mov
pusha
pushf
mov
lea
jmp
jmp
clc
push
call
rcr
pushl
popl
btc
rcl
movl
rcr
btr
mov
cmc
ror
cmc
cmp
bt
stc
sub
mov
mov
lea
jmp
jmp
mov
movb
pushf
pusha
pushl
ret
call
push
mov
pusha
repz
popl
cmc
mov
pushl
mov
mov
mov
movsbl
rcr
push
rcr
mov
lea
clc
mov
bswap
cmc
pop
pushl
popl
ror
movl
bt
rol
cmc
stc
mov
stc
pushl
mov
ror
pushl
movb
sub
movl
mov
mov
lea
jmp
std
std
jmp
call
mov
pushf
call
test
pushf
bt
sub
push
lea
jmp
jmp
cmp
add
bswap
mov
clc
bt
add
push
pusha
pushf
movb
lea
jmp
pusha
push
jmp
pop
call
sub
pushf
lea
ja
mov
call
mov
push
mov
pushl
lea
jmp
pushl
add
pushf
pushf
pushf
push
mov
mov
pushl
ret
mov
bswap
rcl
pushl
popl
jmp
bswap
stc
jp
mov
push
add
clc
call
rcl
neg
aas
movzww
call
jmp
movsbw
and
movsbl
lea
stc
test
cmp
pusha
call
mov
mov
pushl
pusha
movb
lea
jmp
pushf
popl
movl
mov
pushf
jmp
clc
clc
add
stc
clc
not
stc
xor
stc
test
bt
clc
add
cmp
push
stc
mov
cmc
sub
jo
sub
pusha
jmp
mov
pushf
push
push
pushf
lea
jmp
lea
jle
push
repz
popl
push
bt
bt
mov
push
bts
pop
movsbw
push
cmc
movsbw
rol
push
bswap
lea
rcr
btc
push
cmc
clc
pushl
movzbw
clc
push
btr
mov
pusha
stc
call
btc
mov
rcr
not
movzbw
stc
pushl
popl
stc
push
call
cmc
cmc
shr
test
test
or
pushf
cmp
test
pushl
xor
pusha
inc
call
aas
xchg
mov
jle
shl
ror
mov
cmc
add
push
pushf
call
jmp
adc
adc
mov
not
call
call
pushf
pushf
popl
pushf
pushf
mov
call
pop
movl
rol
btr
rol
mov
jmp
pushl
pushf
std
xchg
pop
pushl
bswap
mov
mov
cld
push
jmp
movw
repz
popl
pusha
pushl
cmc
push
xchg
rcr
mov
rcl
rcl
mov
rol
mov
lea
pushl
pushf
pushl
popl
lea
mov
bt
movzbl
movl
mov
cmc
mov
push
ror
pushf
sub
push
mov
lea
jmp
jmp
movl
bts
pushl
bswap
mov
jmp
mov
mov
pushl
jmp
mov
pushf
pushf
pushl
lea
jmp
call
sbb
sbb
shl
btc
mov
and
bsr
push
xor
mov
dec
neg
mov
test
cmc
jmp
das
mov
movb
add
jns
test
sub
pushf
lea
jp
mov
pusha
lea
jmp
aad
bsr
bsf
inc
mov
call
pushf
clc
call
