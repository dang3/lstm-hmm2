decl
xchg
add
jo
add
jmp
push
mov
sub
idiv
lcall
push
in
push
lea
push
push
push
pushl
push
add
push
call
and
sub
sub
dec
shrb
inc
pop
push
outsl
sub
je
push
push
push
clc
inc
clc
push
add
cs
hlt
dec
in
xor
and
add
fbld
jnp
fs
add
lock
fildll
pop
lea
push
push
cld
push
outsb
xchg
lret
sbb
insl
inc
fs
sub
in
shr
jbe
jne
gs
clc
push
pop
lock
pop
adc
hlt
push
pop
add
pop
inc
out
push
mov
push
push
cld
bound
cmp
pop
and
nop
inc
fdivr
nop
adc
sbb
sub
inc
jmp
clc
sub
xor
push
inc
maxps
loope
add
push
pusha
sub
addr16
loope
fcoms
push
gs
push
cmp
dec
pop
inc
clc
ret
push
stos
in
insb
ret
add
js
or
push
xlat
js
push
repnz
repnz
cli
dec
sub
roll
jo
mov
insb
sarl
xor
aas
jne
or
push
push
push
jle
mov
insl
jne
test
jecxz
jg
in
sbb
pop
sub
dec
pop
or
repnz
pop
sbb
arpl
lahf
loope
loope
stc
sub
push
inc
sub
arpl
dec
pop
inc
pop
xor
push
inc
ss
dec
dec
push
enter
lods
aaa
xor
sbb
aaa
add
adc
jle
adc
bound
pop
jne
xlat
mov
push
jo
push
push
test
cld
cltd
push
test
mov
adc
sbb
inc
dec
sub
gs
cmp
bound
and
fsincos
je
pop
push
in
pop
fdivrl
jno
imulb
inc
dec
ja
out
push
pusha
ss
jne
push
jb
mov
test
pushf
andl
ret
leave
inc
jae
imul
cmpsl
push
int3
aas
js
dec
dec
or
dec
jb
clc
sub
mov
add
inc
lods
in
imul
js
dec
dec
push
outsb
ret
jae
nop
inc
fidivs
sub
loopne
cwtl
mov
popa
insl
xor
xor
and
inc
add
out
cld
imul
pop
js
ss
jns
mov
inc
outsl
mov
call
push
sbb
cli
jg
aaa
out
inc
addr16
inc
dec
pop
xor
jo
add
enter
xchg
outsl
fisttpll
pop
dec
sbb
adc
adc
popf
push
into
insl
ja
ucomiss
int3
scas
or
push
dec
push
rcrb
xchg
insb
inc
pop
daa
xchg
andl
sti
sbb
test
je
push
add
sbb
nop
dec
ja
cmp
push
inc
inc
mov
add
xchg
fnstcw
mov
push
push
fs
xor
mov
cmc
in
push
lret
fdivr
cltd
sbb
xchg
mov
sub
sbb
xor
adc
inc
ret
dec
clc
shl
int3
push
and
dec
lahf
call
or
je
sahf
xor
add
ret
push
sbb
cld
sbbl
cld
mov
je
mov
aad
fscale
nop
outsb
push
call
mov
sbb
add
enter
icebp
ffree
jne
fs
dec
ss
dec
repz
inc
or
icebp
mov
decb
pop
or
push
and
ret
dec
push
popa
add
js
xlat
sub
test
ss
addl
je
pusha
adc
inc
movsl
arpl
test
pop
testb
dec
add
sti
or
ljmp
add
push
cmc
jg
sub
adc
mov
pop
dec
sbb
inc
arpl
js
shll
outsl
test
jns
popf
push
insb
and
mov
jbe
or
sbb
insb
push
ja
cmp
jne
loopne
cli
inc
mov
pop
out
and
out
xchg
insb
cld
xor
out
inc
xchg
imul
dec
push
lods
push
loopne
and
into
lret
jp
mov
nop
dec
mov
rorl
lret
mov
and
cmpsb
loopne
add
lahf
xor
cmp
mov
lock
inc
pop
mov
or
ja
ds
movsl
dec
test
push
cli
add
and
fwait
push
and
push
mov
sbb
push
test
dec
pop
xchg
inc
add
push
ja
divb
cmc
jne
dec
push
cmp
out
mov
jbe
or
adc
push
inc
and
add
lods
std
imul
imul
arpl
jg
cmp
aad
or
lret
sub
mov
add
cld
outsl
jo
add
push
or
fs
jno
movsb
shl
mov
bound
roll
scas
daa
push
xorb
xor
out
dec
push
jno
add
sub
imul
or
clc
das
call
dec
aaa
outsb
xchg
pop
pop
add
fs
cmp
rcr
loopne
lods
mov
adc
sbb
sub
and
sub
sub
xchg
mov
xor
insl
pop
inc
jo
lds
arpl
push
bound
inc
loop
push
push
cmp
xchg
data16
or
dec
jge
int3
andb
jae
bswap
push
xor
icebp
or
xchg
add
ret
outsl
inc
push
mov
or
push
data16
adc
sub
fistps
push
addr16
mov
jmp
sahf
ljmp
dec
inc
adc
mov
sub
pop
lods
pop
pushl
and
add
test
loope
sbb
inc
add
and
jne
inc
outsl
ss
mov
dec
dec
jbe
leave
pop
pop
scas
js
push
pushf
lret
jmp
notl
sbb
pop
push
dec
inc
test
xor
dec
or
push
popl
xor
hlt
icebp
fmuls
or
or
in
mov
fnstsw
mov
pop
mov
inc
loopne
loopne
sub
cmpsl
fimull
mov
lret
imul
xor
mov
nop
or
adc
push
dec
xor
add
fidivrl
pop
add
mov
fwait
xor
jle
ss
das
mov
cmc
shrl
loopne
jo
cld
jg
add
test
sub
jno
push
push
aad
pop
sbb
mov
xor
push
data16
mov
dec
sbb
int
jmp
mov
insb
sbb
dec
cmovp
outsl
jbe
or
xchg
insl
jp
aaa
stos
out
or
fsubrl
jno
fnstsw
jmp
ret
das
cld
jg
add
or
je
jl
inc
lods
lret
call
sub
sbb
dec
add
xor
sbb
pop
mov
inc
enter
outsl
add
and
pop
and
add
sub
mov
jo
pop
dec
dec
dec
stc
inc
adc
mov
push
in
dec
sub
movsl
mov
push
and
rorb
mov
and
rorb
sub
mov
mov
dec
cmp
push
jbe
ljmp
dec
jns
sti
out
mov
add
aam
dec
add
sbb
sub
xor
dec
add
adc
fistpl
je
fmuls
inc
dec
mov
aaa
push
jae
jne
fimull
ficoml
fisubrs
lret
mov
mov
insl
push
lea
xchg
dec
inc
lret
mov
in
push
int3
imul
dec
inc
adc
jbe
push
fstl
lcall
mov
mov
rcrl
xor
sub
lret
das
lock
jne
push
or
sahf
cmp
adc
xor
sti
sarl
mov
les
lock
jns
jg
mov
je
lret
aam
outsb
dec
sbb
mov
cmp
ljmp
icebp
inc
ret
js
ja
push
test
gs
scas
in
call
loope
dec
dec
es
cmp
jo
iret
pop
add
in
xor
mov
cmp
imul
push
push
push
inc
xchg
inc
insl
jo
inc
cmpl
jmp
sbb
das
into
test
dec
jg
pop
loopne
loop
or
jb
dec
ja
nop
dec
jns
push
pop
inc
sbb
sbb
in
add
push
dec
push
inc
fs
inc
sub
jmp
dec
cmpl
ja
ret
nop
cmp
fidivs
outsb
int3
bound
je
sarl
xchg
dec
push
push
cmp
mov
and
aam
cmp
inc
dec
filds
das
push
pop
dec
in
cmp
lods
sub
mov
je
cmp
xor
lock
xchg
inc
dec
inc
dec
dec
repz
jno
rolb
push
push
shrb
push
jp
mov
hlt
hlt
jb
mov
js
mov
pop
shlb
inc
push
xor
mov
jb
jecxz
fdiv
pop
sub
inc
sbb
dec
inc
jl
pop
push
ss
test
jmp
sbb
jmp
or
rorl
pop
fwait
push
incb
jae
or
mov
add
add
push
outsl
jg
sti
mov
push
decb
push
add
or
xlat
jae
ljmp
push
push
mov
jne
push
dec
jne
addr16
push
iret
subb
inc
popa
lret
pop
xchg
add
jo
mov
xchg
xchg
inc
outsl
imul
push
outsb
arpl
insl
aam
mov
cmp
je
mov
dec
dec
test
flds
cwtl
outsb
lcall
gs
insl
rorb
ja
xor
push
dec
addr16
movsb
hlt
add
fisttpll
lea
scas
aad
xor
mov
dec
xor
mov
fnstenv
ss
xlat
mov
dec
inc
xor
fs
lahf
mov
insb
add
mov
hlt
xchg
mov
add
jmp
lock
fildll
sbb
mov
push
js
jae
xor
inc
mov
dec
jb
int
fmul
mov
dec
push
imul
or
mov
push
jb
test
lock
subl
das
hlt
adc
pop
dec
jo
push
mov
adc
clc
or
orb
xchg
sti
push
mov
push
dec
jo
cmp
les
js
ds
xor
je
cld
add
pushw
or
test
ret
jae
mov
push
shrl
mov
aaa
jne
or
mov
inc
inc
js
inc
mov
push
js
mov
mov
cmp
dec
in
or
xchg
xor
xchg
push
and
clc
mov
xor
lahf
lock
ljmp
pusha
decb
into
rcpps
or
inc
movsl
dec
push
jp
mov
sbb
add
scas
mov
roll
fbstp
adc
daa
or
ds
adc
idiv
incb
roll
sub
mov
dec
lds
sub
sbb
lcall
mov
daa
add
movsl
mov
aad
and
arpl
and
aas
inc
inc
jo
rclb
out
cmp
jp
mov
push
ja
mov
sbb
mov
sbb
add
adc
into
insl
fistps
cmp
stos
mov
add
pop
in
add
and
push
xor
scas
sti
mov
inc
mov
and
sub
pop
mov
lods
ja
mov
jge
subb
add
fnstcw
movsb
fstp
jae
in
fcompl
lret
icebp
jg
out
and
mov
xchg
push
add
inc
out
bound
shlb
idivl
adc
cs
nop
jle
and
mov
add
ds
sbb
sub
or
mov
jb
icebp
sub
inc
neg
add
movl
insl
push
pop
cmp
je
cmpb
or
mov
or
aas
mov
and
and
or
jg
pop
xor
cltd
mov
js
test
cmp
cmp
mov
mov
sbbb
sub
mov
xchg
sarb
popf
adc
mov
push
add
std
dec
jecxz
xor
jno
adc
fbld
xor
inc
in
and
add
inc
dec
loope
mov
push
mov
and
push
inc
mov
fstl
jae
fldl
loope
loopne
push
jge
aaa
jns
adc
mov
test
test
fdivrl
out
in
jmp
mov
cmpsl
fcoml
dec
std
cmp
adc
pop
stc
cwtl
lret
sbbb
fs
je
js
out
push
xor
mov
add
outsl
adc
mov
pop
and
nop
leave
pop
jnp
addb
cmp
push
inc
stc
in
fs
enter
int3
xchg
jp
andb
jge
or
subb
into
mov
shlb
push
xor
or
dec
xchg
xor
movl
cmpsb
jbe
or
mov
lock
testl
pop
test
nop
sahf
mov
jecxz
and
out
fistpl
cmpsb
cmpsb
scas
in
scas
out
std
out
xchg
into
dec
push
subl
pusha
outsl
xchg
xor
data16
test
pop
mov
lcall
push
in
sub
and
adc
out
std
jg
mov
sti
je
xchg
inc
mov
test
and
lahf
or
and
jl
jl
adc
leave
or
setnp
int
ja
sub
out
mov
popf
mov
repz
xchg
mull
cs
sbb
sbb
lret
lods
std
iret
std
pop
test
sub
adcb
idivl
push
loopne,pn
mov
mov
sar
outsl
mov
insl
daa
jl
jg
dec
cmp
jge
loope
adc
add
add
std
cmpsl
pusha
adc
jmp
jg
leave
mov
popf
je
push
adc
out
mov
cs
sub
int
fcomp
or
mov
decl
mov
or
xor
fistpll
sbb
dec
jle
into
add
jnp
pop
jnp
mov
fcoml
hlt
int3
or
testl
mov
test
cld
jge
dec
cmp
xchg
dec
fs
les
and
mov
jbe
pop
xchg
jl
dec
scas
sub
ss
cmp
and
into
jg
incb
mov
sbb
mov
lock
movsb
or
lock
cli
fndisi(8087
dec
xchg
lcall
and
cmp
decb
insl
lods
or
addr16
lock
push
aaa
pushaw
cld
cmp
jg
jo
pop
insb
dec
and
stc
jp
inc
sbb
das
idiv
cmp
gs
dec
and
rolb
repnz
jg
test
pop
out
push
pushf
ret
int
jg
and
je
idivb
mov
sub
xor
mov
pop
repz
pop
gs
test
mov
mov
dec
std
into
xor
mov
push
or
cmpsl
div
loope
in
mov
sbb
test
scas
outsl
js
into
pop
mov
xchg
nop
insl
imulb
xchg
jl
xchg
or
lahf
shr
sbb
sbb
lock
jl
push
xchg
ja
or
pop
xchg
popf
fadds
test
cwtl
imul
xor
add
jae
dec
enter
lcall
mov
repz
add
pop
mov
aaa
or
mov
sbb
mov
or
pop
and
dec
popf
sti
outsl
xor
mov
scas
adc
sub
std
xchg
sar
push
mov
sarb
out
xchg
js
xchg
sub
inc
push
fucomi
icebp
jp
add
dec
push
dec
sub
in
jg
movsb
mov
int
pushf
adc
in
cld
loopne
jl
aaa
sbb
adc
test
pop
into
mov
out
push
fimull
fildll
cmpsl
ret
dec
jle
xchg
out
mov
mov
data16
pop
pop
icebp
sbb
out
js
cmpsb
dec
xor
int3
sub
push
imulb
adc
sub
and
jb
fwait
push
inc
hlt
addr16
mov
jp
decl
push
bound
and
in
stos
push
xor
std
cli
push
ret
shrl
out
repz
loopne
clc
jg
je
mov
rorb
and
loopne
test
or
pop
dec
pushl
fisttpl
out
xchg
or
mov
call
inc
idiv
cmp
clc
movups
int3
enter
mov
add
mov
loop
xor
icebp
mov
mov
push
or
jp
sahf
scas
sub
or
notl
push
icebp
jbe
loope
cld
fcmovnu
pushf
rcrb
adc
dec
out
mov
jb
sbb
cs
mov
sub
dec
ss
ret
mov
fsub
dec
push
mov
or
test
clc
adc
cld
movsl
shll
mov
cmp
jns
call
iret
lock
repz
sub
xor
and
pop
sub
inc
into
jbe
sbb
jge
fsubs
xchg
out
pusha
xor
mov
mov
xor
cld
cmp
lahf
js
out
mov
xchg
lods
stos
in
add
push
fstpt
cmp
arpl
push
clc
inc
add
or
adc
jle
movsb
out
push
xchg
scas
mov
and
loope
jg
and
add
mov
dec
ja
jmp
in
jecxz
pop
pushf
lods
insl
adc
push
lret
inc
out
mov
movb
adc
xchg
rcrb
js
aaa
stc
pop
push
or
and
xor
clc
mov
sbb
fnsave
pop
scas
add
adc
add
std
repnz
push
cs
decl
push
xchg
outsl
enter
adc
adc
push
decb
cmpb
pop
adc
int3
mov
out
pop
add
cmp
push
outsl
out
jno
addb
leave
pushf
mov
sar
test
mov
dec
stc
addr16
jbe
jg
cmp
in
rcrb
insb
fidivl
push
out
sti
cmp
gs
jp
pop
jbe
mov
test
and
cs
or
insb
xchg
jbe
mov
jb
gs
mov
dec
hlt
rorb
icebp
std
pop
pop
fbld
fs
cmp
xchg
push
dec
std
xchg
mov
inc
inc
sub
stos
lahf
lahf
scas
cmc
and
jno
lock
mov
dec
cmp
lock
ja
les
arpl
mov
sbb
inc
push
push
xchg
xchg
sahf
clc
decl
incl
push
in
xor
pop
add
or
xor
pop
pop
test
repz
jo
sahf
cwtl
stc
int3
xchg
pop
mov
adc
cmp
aas
add
or
scas
xchg
mov
add
aam
leave
sti
adc
movl
pop
into
and
mov
outsl
mov
xchg
mov
xchg
inc
aas
or
inc
push
add
push
push
mov
outsb
push
add
inc
mov
ds
pop
ss
sti
test
pop
add
out
cmp
aad
mov
rcrb
sarl
aaa
mov
dec
ret
ja
jg
stos
addr16
aad
mov
sbb
scas
or
mov
cmpsb
int3
pop
cmp
xor
ficomps
mov
push
dec
fistps
aaa
clc
popa
pop
push
mov
jbe
fistpll
push
ljmp
sarb
in
ret
mov
add
add
and
cmp
stos
pop
lods
sub
jg
xchg
std
arpl
sti
mov
test
and
mov
mov
pop
bound
jecxz
pop
sub
in
lock
inc
js
daa
cltd
dec
out
lahf
sarb
mov
out
jge
fsubrp
orl
push
out
or
je
jmp
test
add
push
arpl
pop
sti
repnz
and
pusha
test
loop
push
dec
cmp
sti
js
sub
lcall
daa
or
inc
call
mov
jbe
add
push
mov
sbb
pop
in
xchg
std
out
hlt
aas
es
decl
sbb
sti
jo
add
or
mov
mov
fucomip
insb
ja
cmp
into
lcall
adc
hlt
push
jne
sub
test
mov
out
fidivrs
dec
test
adc
mov
or
jg
jg
xor
inc
mov
sub
cltd
xchg
mov
shll
ljmp
jp
jmp
aaa
mov
xchg
pusha
roll
jnp
mov
fsubrs
cltd
cmp
sbb
or
xor
pop
pop
lods
jae
jno
stc
je
ret
lret
xchg
sbb
fwait
in
mov
aad
aam
les
mov
cli
ds
pop
mov
adc
mov
lcall
jp
testl
mov
or
mov
inc
jge
aad
out
iret
cli
dec
sbb
xor
bnd
mov
icebp
pop
out
mov
out
imul
jne
outsb
cmp
hlt
xor
aas
jo
or
dec
fld
lods
cltd
int3
mov
sbb
cli
dec
xchg
mov
add
incl
push
fildll
scas
or
stc
push
jnp
mov
adc
fld
movsb
loop
sbb
fbld
mov
cmp
aas
cmp
sub
idiv
inc
xchg
xchg
test
daa
jge
in
lock
adc
mov
add
xchg
dec
cmp
or
mov
cmp
push
inc
dec
std
dec
add
and
add
lea
insl
out
fdivrl
lahf
xlat
inc
int
je
xor
mov
sbb
incl
inc
lret
lods
lret
rorb
test
jno
mulb
imul
sbb
aas
inc
xchg
inc
lods
mov
daa
mov
cmc
incb
pushf
pop
mov
xor
sbb
cltd
jmp
scas
loopne
or
out
xlat
cli
les
jmp
cmp
divb
xbegin
out
and
xchg
inc
push
leave
mov
pop
lds
loope
js
or
inc
push
jmp
pop
sbb
sbb
dec
outsb
fadd
push
out
andl
lods
inc
inc
mov
stc
decb
mov
and
xor
in
and
js
aaa
push
push
mov
popa
cmpsb
pop
pop
mov
jle
pop
xchg
push
sbb
dec
inc
cmc
pop
and
repnz
iret
xchg
or
sbb
pushf
pop
scas
aad
divl
loopne
pop
punpckhwd
or
ret
movsb
je
outsb
in
lods
decb
pop
mov
cmp
jae
or
test
xchg
push
movsl
xlat
add
add
pop
sbb
out
ficoms
sahf
push
lcall
stc
fstps
pop
push
and
nop
inc
and
dec
in
sarl
mov
mov
pop
adc
jo
int3
call
add
int
lcall
in
pop
push
sbb
sub
cmp
xchg
xchg
sub
adc
jg
call
cmpsb
jecxz
add
xor
adc
nop
xor
xchg
stos
or
and
and
jb
aas
lock
adc
dec
lret
lock
pop
jne
xchg
fdivrl
fstpl
jnp
or
call
mov
and
mov
adcb
fsubrs
mov
clc
xchg
or
imul
jo
adc
adc
pushl
adcb
mov
inc
mov
cld
fucom
mov
cli
ret
in
fisubl
push
aas
out
adc
push
repz
out
fdivl
or
mov
cmp
loope
inc
nop
fwait
ror
jns
out
jmp
ljmp
fimuls
add
jno
jns
not
icebp
fucom
jae
sti
das
adc
jmp
mul
sbb
jmp
cmp
sbb
xchg
sarb
idiv
loope
cmpsl
sub
das
insb
rcl
mov
xorl
dec
mov
sbb
mov
out
aaa
ljmp
sbb
lods
outsl
idiv
pop
xchg
cltd
lahf
lds
jmp
cmc
add
jno
add
jnp
inc
cmp
mov
cld
jecxz
testb
fsubs
jg
in
xchg
pop
fisttpll
inc
inc
xchg
xor
sub
test
enter
in
mov
xchg
sub
stos
stos
mov
mov
decl
sub
insl
push
jae
jmp
cmp
and
add
leave
jb
add
pop
or
daa
cmc
cli
ljmp
mov
add
into
dec
clc
push
test
popf
das
lods
mov
mov
jns
dec
lods
add
add
jno
cltd
push
jnp
dec
ljmp
out
xlat
lahf
pop
in
and
fistpll
das
out
icebp
push
into
jge
push
push
xor
cld
mov
loope
daa
push
lret
mov
fdivrp
popl
sbb
lcall
sbb
jae
stc
pusha
or
sbb
xchg
decb
inc
ja
rcrb
icebp
addr16
imull
and
push
jp
adc
xchg
mov
test
loopne
std
add
loope
int3
mov
ret
mov
imul
mov
jb
aas
push
in
mov
lret
cmpsl
loope
pusha
or
mov
out
push
add
dec
or
nop
xor
jbe
adc
add
xor
ljmp
popa
cmpsl
int3
mov
or
std
dec
and
pop
out
pop
aad
shrl
stos
loope
mov
mov
xor
mov
cmpsb
int
lcall
sbb
and
xor
std
in
icebp
jae
aam
aas
fs
sub
inc
mov
inc
push
pop
jo
cli
out
or
push
cmp
ja
jnp
sub
pop
and
mov
ss
ja
into
jge
inc
aas
call
outsb
adc
cmc
push
pop
mov
lahf
mov
test
out
pop
loopne
xor
clc
stos
iret
xor
std
mov
jg
lahf
les
pop
test
add
div
lea
mov
cmp
sbb
popa
and
dec
inc
sbb
fildll
pop
cmp
roll
rorl
es
cmc
fists
loopne
pop
inc
cmpsl
aaa
cmp
scas
ficoml
sub
jno
jo
mov
nop
mov
xor
movsl
sbb
aas
ret
inc
jl
or
adc
add
sbb
pusha
dec
ja
int
or
lahf
jl
bound
jnp
daa
mov
outsl
add
adc
in
mov
jg
rcll
mov
sbbl
cmp
or
xchg
ljmp
enter
div
lea
pushl
push
or
pushf
loope
cmp
js
push
and
aaa
cmp
xlat
psubb
sti
pop
aaa
cwtl
cwtl
push
scas
ret
ret
jge
pusha
mov
pushl
xor
loopne
lock
inc
mov
add
idivl
hlt
cli
aas
mov
lret
testl
push
leave
mov
mov
bound
js
out
mov
sub
jae
rclb
jb
gs
xlat
xor
fldl
mov
push
clc
insb
cltd
bound
or
mov
nop
push
sub
call
push
out
movb
and
inc
call
xor
cld
test
cli
in
jnp
cmp
outsb
mov
out
cmp
in
pop
adc
int
pop
cltd
addb
and
jg
clc
das
movsb
mov
outsl
lock
or
arpl
and
pop
jg
pushl
rorl
aas
and
push
inc
test
jb
cmp
enter
adc
inc
sti
iret
jb
outsb
int3
jbe
stos
xor
imul
out
into
mov
imul
push
out
mov
and
repz
out
ds
push
mov
jg
js
and
and
test
test
loopne
icebp
imul
mov
dec
test
xor
mov
pop
ret
mov
sbb
stos
mov
push
inc
lds
popf
mov
cld
call
jbe
jle
xchg
repz
adc
arpl
cld
adc
clc
jp
sub
jecxz
jno
ljmp
push
jno
mov
xchg
pop
pop
or
xchg
loopne
ret
xlat
lahf
hlt
jmp
pop
movsb
stc
scas
cltd
in
xchg
call
mov
mov
push
xchg
mov
outsl
shl
or
cmp
xchg
adc
push
subb
dec
dec
cld
inc
decb
cmp
scas
gs
divl
notb
xchg
clc
das
bnd
cltd
int3
fists
jp,pt
inc
or
xlat
pop
add
or
mov
les
add
lock
sti
repz
loop
insb
ss
ss
sbb
ficoms
sbb
mov
fcmovu
and
and
fmuls
mov
mov
xlat
xchg
lahf
sti
mov
int3
int3
inc
mov
sub
lahf
lds
cmpsl
out
out
push
popa
jno
sbb
clc
dec
mov
push
adc
icebp
clc
into
std
adc
sti
outsb
cmc
xor
jmp
jnp
jmp
jb
les
mov
sub
xlat
das
mov
icebp
cmp
xor
add
add
test
and
add
inc
mov
aad
arpl
push
cmp
fmull
xchg
ds
icebp
aaa
ds
pop
call
xchg
dec
fbstp
adc
leave
adc
or
ret
jmp
add
jp
stos
incb
andb
insb
xor
sub
decb
jno
rcll
aas
not
movsl
icebp
mov
stos
add
shll
fidivrs
inc
cld
and
push
xchg
scas
in
mov
xchg
sub
aas
dec
jo
mov
jns
sbbb
mov
incl
adc
jb
dec
addr16
xchg
test
in
out
inc
mov
adc
aad
jno
jne
jmp
incb
mov
ljmp
arpl
mov
loopne
repz
mov
pop
lods
xchg
ja
cmc
xor
fucomp
jb
jg
icebp
filds
mov
xchg
pop
pop
test
fdivr
lock
mov
ds
out
bound
or
pop
out
pop
adc
add
push
les
je
fdivr
out
rcrl
call
jnp
pop
aam
pop
idiv
mov
out
or
push
pop
leave
xchg
push
mov
xchg
cmc
and
pmuludq
hlt
out
adc
mov
push
mov
in
jo
pop
in
lds
pushl
cld
sub
loope
sbb
mov
mov
and
jp
mov
mov
das
sbb
ljmp
dec
subl
add
mov
cmc
lar
call
mov
and
stos
js
inc
cmpsl
push
int3
pop
imul
jge
ret
pop
jg
fimuls
jo
fidivrs
jb
mov
push
loope
cmp
push
test
outsb
inc
out
sub
sbb
pop
mov
filds
xchg
xchg
test
mov
mov
mov
int3
add
push
pop
out
cld
mov
std
adc
jne
mov
pop
jmp
arpl
pop
adc
adc
or
insl
sub
out
imul
out
mov
aas
cs
sarl
jnp
jg
mov
sub
inc
cld
ja
icebp
pop
push
ss
cltd
and
push
inc
repnz
jl
sti
out
sbb
mov
test
icebp
mov
xchg
lcall
out
push
inc
out
lahf
hlt
xchg
sbb
push
insb
decl
xchg
pop
xor
out
adc
scas
sub
xor
push
push
push
pop
in
inc
insl
push
lods
push
std
pop
in
or
adcb
or
cld
in
xor
clc
jg
jg
mov
adc
test
lods
jl
fidivs
outsl
dec
pop
push
loop
fistps
jo
pop
nop
jno,pt
dec
add
int
outsl
mov
jg
clc
ja
pop
jge
lds
pop
jmp
fcmovnu
xor
cmp
frstor
stc
psubd
das
jge
aad
inc
push
decl
divl
fs
loopne
sub
jbe
adc
mov
dec
jno
pop
sbbb
jae
jle
and
repz
dec
mov
rorl
addl
jmp
and
shlb
or
shlb
xchg
pop
mov
in
scas
xlat
mov
xchg
ret
fcoml
mov
arpl
lock
push
ljmp
add
or
mov
pop
idivl
movsl
cmp
mov
and
pop
loop
xchg
das
xor
xchg
jbe
lock
lds
popf
xchg
pusha
cmp
inc
dec
lods
mov
mov
jns
or
roll
repz
cmp
icebp
mov
push
ljmp
in
std
lret
cmpsl
cmp
xor
xor
sti
jmp
aaa
insl
je
sub
xor
mov
test
jg
rclb
scas
add
adc
jne
mov
js
inc
dec
out
jnp
and
mov
call
gs
push
add
pop
cld
pop
sbb
pop
out
movsl
lret
jg
push
sbb
fcomps
sub
hlt
mov
fsts
jmp
fxch
cpuid
sub
or
sbb
pop
mov
fidivl
incl
mov
push
loopne
jbe
idiv
out
push
jo
push
or
adc
pop
mov
dec
xchg
iret
fcomp
lds
xlat
ret
jg
sbbb
idiv
mov
push
das
sbb
loope
in
std
lahf
ja
test
xor
hlt
aad
mov
repz
jns
fldl
push
clc
enter
dec
aaa
pop
sub
std
es
cmp
jb
ffreep
call
mov
push
mov
jnp
test
idiv
addr16
xor
sub
xor
in
stos
jnp
adc
add
mov
sbb
and
jnp
div
jbe
in
shrl
mov
pop
cld
scas
jg
cmp
std
ds
pushf
pop
movsl
nop
clc
clc
imul
js
jnp
decb
mov
xor
xlat
cmp
xchg
pop
or
and
xchg
in
arpl
imul
and
fildl
and
test
pop
adc
aas
sbb
push
pop
sub
loope
imulb
fcomi
cli
sub
pop
addr16
lret
push
lods
outsb
sub
sbb
mov
imull
cltd
and
std
jnp
scas
aas
push
sbb
mov
mov
cli
lea
push
lcall
push
mov
jnp
mov
das
adc
test
mov
addb
cmpsb
sub
loope
ss
mov
jae
icebp
movb
mov
or
fucomp
mov
aad
mov
testl
roll
xor
insl
add
sub
and
lods
jge
mov
bound
add
sbb
mov
lock
es
push
and
ret
ret
inc
xchg
mov
pop
xchg
or
icebp
fucom
jg
dec
sti
add
pop
jmp
sub
mov
adc
ljmp
repnz
fwait
pop
pop
popa
sbb
push
cmp
cltd
xchg
out
add
out
push
xor
icebp
insb
cmpsb
loope
xchg
jecxz
jmp
mov
cli
ja
sbb
adc
fnstsw
mov
and
adc
mov
subl
gs
aas
fidivl
pusha
ret
ja
fs
add
xorl
jg
adc
adc
popl
outsb
pop
and
pop
mov
cmpsb
lds
xlat
mov
jle
jmp
xchg
dec
adc
stc
aad
push
or
in
std
scas
adc
xchg
jnp
sbb
and
lret
aad
popf
dec
mov
adc
aas
dec
jmp
es
test
push
movsl
or
push
rcrl
or
jge
jge
fimuls
inc
inc
dec
sub
fistps
xchg
sar
into
pop
out
fs
stc
daa
outsb
push
pop
jg
mov
fnstcw
or
xchg
mov
roll
mov
mov
out
mov
inc
cmc
sar
sbb
inc
lds
divl
sub
mov
mov
loopne
xor
adc
or
mov
ljmp
in
cmp
xor
jmp
xor
xlat
out
adc
xor
stos
dec
das
or
sub
cmp
or
push
rolb
add
fdivrl
daa
cmp
frstor
movsb
sbb
js
pop
aad
inc
mov
stc
jns
call
adc
es
jae
scas
jp
repnz
jmp
pop
push
pop
dec
fucomp
jg
and
rcrl
lock
cmpsb
or
addl
fistps
addr16
sub
inc
dec
daa
pushf
xchg
mov
orl
push
mov
jp
jns
lret
test
stos
sahf
sti
pusha
popf
ljmp
xor
lahf
aad
inc
dec
aad
sahf
jp
add
pushf
add
ret
push
call
cmpsb
enter
xor
add
pop
fwait
gs
add
dec
outsl
in
cld
pop
jmp
push
sarl
mov
mov
mov
inc
and
pop
jl
out
out
lods
stc
mov
jns
jmp
lret
iret
sub
and
movsl
xlat
popa
fisttpll
cmc
mov
pop
or
divl
lock
dec
into
cli
mov
adc
xchg
xlat
add
jecxz
idiv
test
mov
lods
repz
adc
inc
jno
xor
neg
pusha
mov
xor
ror
ret
cld
inc
sahf
push
in
aad
cmp
shl
dec
arpl
loop
nop
sub
imul
and
jnp
sub
stos
dec
aaa
mov
lahf
adc
pop
icebp
adc
out
xchg
sbb
adc
jl
adc
lods
xlat
jns
stos
xchg
insb
push
lcall
imull
sbb
out
les
ficomps
aas
out
dec
scas
cmpsb
xchg
mov
xor
rolb
pop
cmc
fisttps
rorb
mov
cli
mov
pushf
mov
mov
and
rcrb
out
movaps
lret
sbb
popf
test
dec
cli
pop
rcrb
clc
out
pop
loop
daa
xor
popa
xchg
jle
jmp
and
aam
movsb
and
and
xchg
or
push
mov
jae
sbb
pop
mov
outsb
cs
jmp
sub
out
fcompl
rolb
dec
enter
sti
or
sub
test
fmuls
std
sub
sbbl
cli
imul
adc
data16
leave
cmp
pop
lock
cmp
in
add
std
fistpll
shrl
and
ret
pop
jp
rcrl
sbb
in
jle
or
fstp
jno
inc
jl
xor
scas
cmp
lret
mov
daa
and
gs
dec
dec
shl
repnz
or
lds
inc
xor
push
out
imul
shrl
ljmp
cli
or
adc
or
xchg
aam
in
or
push
mov
cmp
xor
outsb
cmp
adc
ja
mov
cli
xor
dec
push
dec
ss
add
sbb
cmc
or
pop
adc
pushf
insl
dec
je
icebp
sbb
andb
pop
hlt
adc
call
das
ja
sbb
cli
lahf
aas
fwait
std
pop
sub
xor
cmp
popf
jg
inc
mov
jne
loope
adc
mov
pop
jmp
cmc
pop
mov
xor
movsb
adc
and
les
mov
jecxz
arpl
daa
inc
cltd
shll
call
std
out
inc
mov
mov
insb
cmp
std
fdivr
repnz
loopne
pop
aam
add
cmpxchg
test
inc
cld
push
insl
add
push
cld
and
adc
xchg
decl
lock
push
add
loope
idiv
sub
sbb
sbb
out
dec
mov
mov
lock
sti
push
incb
sbb
outsb
or
jmp
enter
addl
push
icebp
arpl
cmp
adcb
stos
mov
loopne
cmp
mov
fiaddl
mov
out
std
aas
lods
mov
push
int
add
mov
xchg
imul
pop
and
pop
loopne
repnz
inc
imul
mov
out
pop
dec
mov
cwtl
bound
push
dec
mov
jp
add
sub
pushl
adc
push
clc
movsl
fdivs
cmc
fisttps
int3
out
jbe
jno
pop
mov
sub
pop
shrl
xchg
stos
dec
xorb
or
cmovae
pusha
fcomps
jg
std
and
rcrb
xor
push
xchg
dec
mov
sub
test
pop
repz
or
cld
fnstsw
shl
xchg
cmpsl
or
mov
dec
loop
ja
rol
jae
sub
cli
xor
outsl
adc
insb
xchg
stos
cmp
push
jbe
jno
or
jl
loopne
sbb
les
lock
dec
xor
adc
lock
dec
arpl
out
lock
es
mov
inc
add
jb
jmp
pop
das
lahf
add
xorb
and
mov
repnz
jo
sbb
out
cmp
pop
mov
cmp
cmp
sbb
in
test
push
arpl
jbe
pop
scas
lock
inc
sti
adc
sub
pusha
add
ret
loope
lods
dec
fsubrp
mov
lock
mov
daa
out
mov
aas
add
sub
out
cli
ds
pop
in
mov
imul
inc
pop
sahf
scas
jno
sub
pop
pushl
add
mov
stos
fucomi
mov
jne
cmpsl
adc
jo
sbb
bound
loopne
jne
or
loop
jno
cli
aas
pop
ret
sub
paddsb
gs
sbb
aaa
leave
es
cmpsb
outsl
cmpsb
cmpsb
jmp
cmp
jg
insb
xorb
mov
push
add
mov
mov
push
and
jbe
sbb
shl
xor
lea
pop
sub
les
cmpsb
jp
lret
addr16
mov
push
cmpb
mov
aad
jl
addl
jnp
mul
or
jmp
cwtl
insb
push
iret
hlt
sub
in
push
push
js
pop
cmp
cld
pop
mov
in
loop
test
push
leave
aaa
jecxz
or
jbe
pop
es
mov
inc
sub
xor
push
scas
ds
popa
dec
out
and
pop
xor
mov
scas
cld
ret
test
sbb
mov
mov
comiss
nop
jne
test
mov
cmp
sbb
lahf
inc
fistps
mov
je
andb
daa
cmp
adcl
arpl
test
or
lcall
pop
sub
call
cld
out
sbb
mov
adc
lret
cld
pop
add
jp
push
dec
jle
cmpsl
dec
std
sub
mov
sub
pop
andb
imul
enter
xor
pushf
sbb
push
je
pop
xchg
adc
in
dec
sub
mov
out
cmp
test
jg
push
movsl
flds
or
out
imul
stc
loopne
pop
shrb
jmp
jg
dec
adc
sub
mov
xor
mov
movsb
adc
dec
aam
lea
xchg
push
or
add
cltd
sar
cmp
mov
sbb
inc
or
mov
pop
add
and
divl
mov
mov
push
in
xor
mov
mov
jo
inc
xor
pop
jno
pop
jecxz
lahf
sti
pop
jp
and
dec
fyl2xp1
movsl
clc
jnp
cmpsl
stc
or
jmp
loop
loopne
mov
adc
mov
and
insb
cmc
pushf
enter
xchg
dec
add
or
ds
mov
xor
and
jle
cmpsb
xchg
jmp
pop
cltd
leave
add
and
mov
icebp
cli
mov
dec
clc
and
lds
not
xchg
sub
pop
mov
mov
std
mov
clc
or
xchg
sbb
lods
ret
loopne
xlat
mov
and
jo
neg
mov
cmpsl
mov
inc
into
sub
addr16
inc
sub
or
cltd
add
leave
lods
in
lock
out
cmpsb
push
ss
iret
or
xorb
fucom
out
data16
add
jmp
sub
and
test
xor
mov
sbb
push
or
add
push
std
test
sub
add
mov
cmp
inc
ljmp
push
lock
mov
push
add
loopne
das
fs
push
push
imul
mov
push
lds
push
add
mov
xchg
lret
mov
and
or
dec
push
dec
sub
and
call
bound
int3
add
xchg
std
or
pushf
std
jo
mov
jecxz
cmp
add
dec
pop
sbb
inc
jmp
lock
pop
outsb
push
dec
dec
cmp
clc
or
adc
xlat
in
fldenv
lods
jne
push
iret
sub
decl
push
pop
or
in
sbbl
fnstenv
cmp
in
rcrb
jmp
aad
ljmp
orl
mov
shll
mov
rorb
outsb
fnsave
pushf
mov
fmull
and
jo
inc
adc
adc
pushl
push
xchg
in
aas
out
cs
cmp
psubsw
push
add
cltd
aas
leave
std
lcall
out
int
nop
adc
test
sahf
pop
dec
dec
clc
jg
jg
adc
shll
mov
mov
cli
sbb
hlt
jns
outsb
ficoms
xchg
push
es
fldenv
loopne
mov
std
pop
es
adc
jbe
sbb
dec
mov
fsubrs
cmp
and
inc
jle
jecxz
cli
jg
aad
mov
das
pop
sub
jecxz
lahf
inc
call
mov
pushf
rorb
rclb
arpl
ret
mov
fdivrl
mov
push
mov
insl
mov
call
jp
std
je
das
shlb
push
sbb
loopne
ja
jmp
xor
js
pop
sub
fs
stos
push
jl
pop
test
push
jne
mov
xlat
shlb
or
pop
mov
mov
mov
loope
les
idiv
and
inc
xor
imul
jb
cltd
loopne
xor
jnp
testl
fwait
scas
es
out
repz
xor
push
lock
sub
mov
and
cld
hlt
ds
pop
push
ret
icebp
inc
ficoms
std
out
lock
mov
sbb
aam
adc
fcompl
aas
inc
mov
mov
mov
push
push
xchg
xlat
inc
insb
dec
mov
stc
pop
sbb
and
ss
inc
js
jne
xor
mov
test
pop
lcall
mov
push
mov
and
jbe
std
rclb
mov
xorb
sub
adc
sbb
bound
in
jmp
in
icebp
out
sub
mov
xchg
lock
or
mov
mov
xchg
fidivs
push
ljmp
mov
cmp
or
fldenv
sahf
pop
adc
enter
in
mov
pop
or
incl
fsts
cmpsl
xchg
cmc
les
jg
sbb
test
cmp
dec
mov
sti
cs
out
mov
loopne
pop
filds
ret
push
out
iret
in
xor
pop
or
xor
decb
lret
ret
inc
aam
cmp
cmp
add
or
xchg
clc
pop
scas
call
shl
and
popl
ja
cmp
mov
stos
mov
xlat
pushfw
orl
adc
clc
mov
and
dec
cli
jb
decl
ljmp
subl
inc
or
lds
mov
pop
jbe
test
gs
jg
push
shrb
and
sub
add
adc
jp
jg
decb
xor
cmp
xchg
lcall
xchg
or
and
mov
es
dec
clc
lahf
sti
out
ja
inc
std
mov
roll
std
dec
lret
ret
add
arpl
push
cmp
pop
stos
setno
bound
aas
sbb
movsl
out
hlt
arpl
xchg
xor
adc
shlb
repz
ss
scas
fistpl
divb
jg
sahf
jnp
cld
adc
dec
icebp
mov
jmp
dec
or
fadds
jb
adc
dec
bound
mov
mov
loopne
jecxz
xor
xor
ficompl
inc
int3
lds
std
lea
fwait
sbb
pop
pop
cli
frstor
fsubs
push
inc
and
sahf
inc
xchg
jg
push
std
cli
out
leave
dec
in
sub
testl
aas
xchg
stc
push
xchg
test
xchg
lcall
xchg
mov
imul
stc
mov
lret
je
aas
adc
mov
xchg
das
divl
decl
ja
cmp
jb
xchg
fsubr
sar
mov
cmp
mov
pop
sub
lea
pop
js
out
cld
mov
sub
xchg
push
shrb
add
bndldx
push
aas
stos
std
daa
loope
fisubl
jecxz
lds
je
sbb
popf
xor
int
mov
xor
bound
ror
xchg
fwait
gs
mov
jge
mov
xor
ljmp
lahf
lahf
mov
insl
test
pop
sub
test
and
xchg
xchg
mov
mov
jge
testl
imul
sti
fistpll
adc
insl
xor
sub
scas
pushf
gs
das
mov
cmp
xlat
loop
sub
pop
in
or
dec
sbb
xchg
insl
mov
icebp
loop
sahf
sbb
fistl
cld
push
add
es
push
adc
pop
pop
rclb
jp
sub
fucomp
jnp
test
sub
ljmp
insl
aaa
stos
or
mov
test
shr
sti
push
xchg
jge
jns
popf
movsb
cmpsb
mov
pop
fsubr
dec
or
or
mov
pop
push
movsb
fisubrs
loopne
aam
sbb
push
lcall
xorl
out
test
sarl
mov
adc
push
pop
hlt
jbe
jg
jmp
sub
mov
popa
repnz
cld
data16
out
adc
push
mov
fisubrs
inc
in
out
fmul
roll
inc
push
push
inc
jg
jle
sar
adc
aad
push
sarb
jp
inc
dec
loop
sbb
test
mov
jmp
test
je
lea
shl
loop
cwtl
pop
cmp
in
dec
inc
push
jmp
fwait
cmp
or
test
loope
lret
pop
pop
out
or
and
popf
inc
fwait
pushf
outsl
into
push
jg
incb
adc
cmp
xchg
icebp
xchg
lods
or
xor
js
xchg
in
mov
ds
jg
mov
sbb
pop
fistpll
mov
lcall
cmpsb
insb
les
loop
pop
jp
clc
mov
push
gs
xor
sti
aas
cmpsb
dec
fcmovnb
dec
or
inc
add
and
arpl
or
pop
in
add
mov
int3
push
pop
dec
aas
push
lds
std
cwtl
xchg
call
jle
mov
addl
jmp
and
out
scas
and
sub
idiv
or
or
pusha
popa
lods
sub
cmpsl
incl
jg
mov
jne
inc
test
nop
data16
fistpll
mov
mov
scas
decl
dec
in
mov
jmp
mov
sbb
pop
add
pop
xor
fldt
loopne
jmp
cmp
ret
dec
jo
fs
insb
popl
icebp
setnp
aas
xchg
xchg
dec
mov
test
or
lret
test
outsl
adcb
or
sbb
into
std
lea
xchg
xchg
sbb
nop
test
mov
mov
movsl
add
jno
loope
js
movsl
and
push
inc
iret
inc
test
nop
push
jecxz
rorl
push
inc
xchg
int
adc
ss
xor
adc
sbb
outsb
or
nop
leave
icebp
int
sbb
mov
or
push
mov
pop
jge
mov
shl
cmc
inc
das
inc
mov
call
dec
leave
jg
jmp
pop
sbb
pop
loop
and
ja
and
int
dec
outsb
mov
adc
cmpsl
pop
and
movb
hlt
repnz
cltd
pop
js
dec
cmpsb
fimull
mov
mov
xchg
pop
fdivs
aad
enter
icebp
es
lcall
jl
jle
push
and
psraw
and
rcll
mov
jnp
roll
jmp
cmpsb
fcmovb
xchg
jg
fistpll
in
dec
mov
jecxz
popf
inc
adc
outsl
sub
add
inc
fadd
cmc
iret
pusha
push
jnp
repz
xor
sti
fucomip
pushl
lds
or
and
pop
sub
lds
push
ret
dec
lcall
mov
sahf
sbb
out
dec
cmpsl
decl
cmp
xor
cmp
jge
jp
dec
inc
pop
dec
es
rclb
ljmp
aas
popa
adc
adc
inc
cld
jg
sub
xor
or
pop
adc
repz
cmpsb
cwtl
insl
loope
mov
les
divl
adcb
imull
ficomps
lods
in
and
je
idiv
fdivr
xor
cs
repz
loopne
jae
push
clc
stos
std
imul
idivl
mov
dec
mov
stos
push
mov
fcmovnb
jge
in
and
lods
adc
les
xchg
inc
pop
jl
negb
rcrl
pop
pop
pop
bound
in
mov
nop
divb
xchg
push
sbb
add
movsl
jbe
das
mov
sti
push
repnz
sub
xor
mov
sbb
sub
leave
lods
into
and
scas
cmc
inc
sub
push
outsb
lock
pop
fbld
cwtl
fsincos
dec
adc
xchg
cmp
cmp
ret
jle
lock
add
lcall
mov
cld
or
cmp
xlat
jg
jg
in
xchg
inc
lea
outsb
les
aas
ja
mov
push
jbe
out
int3
popa
or
std
xchg
pusha
and
aaa
shlb
xchg
mov
fisubrl
pop
icebp
push
and
test
mov
xor
aas
jecxz
fidivl
idiv
movsl
and
leave
dec
dec
add
icebp
jg
sti
imul
adc
lock
and
out
or
mov
shrl
xor
mov
jmp
mov
xchg
inc
cmp
test
mov
pushl
std
fldt
cmp
sbb
pop
pushl
cmp
insb
jmp
and
ja
imull
adc
push
inc
pop
push
jnp
decl
test
add
imul
jg
jl
les
stos
or
mov
inc
ret
scas
inc
fwait
add
inc
mov
stc
dec
xchg
std
popa
mov
mov
cld
or
jnp
mov
push
les
sub
jb
fbstp
pop
pop
mov
movb
fistpll
rclb
mov
adc
mov
add
popf
xor
jmp
xor
jle
adc
pusha
rol
pushl
mov
movsb
cli
arpl
scas
ficomps
out
hlt
aas
mov
inc
sbb
sar
pop
movsb
adc
mov
es
mov
jbe
dec
jo
mov
sbb
inc
mov
aad
lret
loop
mov
pop
lcall
fists
addr16
add
dec
add
push
jnp
sti
push
pushf
not
pop
xchg
pop
and
or
cmpl
xlat
pop
mov
test
iret
cmpl
js
inc
repz
sub
pop
pop
std
scas
push
push
push
cli
scas
add
loop
scas
mov
loopne
mov
xlat
imul
jae
inc
mov
or
sub
dec
jg
jg
jmp
cmp
aas
out
xchg
push
outsb
aas
jno
pushl
clc
cs
lea
mov
jl
adc
or
mov
pusha
jb
jne
jb
test
xchg
mov
jecxz
mov
std
jmp
mov
xchg
adc
mov
jl
cwtl
jmp
push
jno
lret
adc
cld
arpl
mov
clc
xchg
gs
lcall
out
test
mov
sbb
in
sti
outsb
push
gs
inc
sbb
and
push
xchg
add
add
xor
fstps
idivb
outsb
mov
negb
popf
push
outsb
mov
test
incl
das
mov
xchg
jnp
loopne
cwtl
js
mov
cmpsb
push
mov
sub
jle
jp
add
or
or
daa
lcall
incl
push
or
pusha
scas
cmc
cld
jne
adc
icebp
call
or
fists
pop
stos
mov
iret
into
dec
xchg
idiv
aas
push
outsl
cmp
in
sbb
pop
cli
push
cld
pop
adc
shll
int
mov
repnz
aas
notb
adc
or
pop
cli
inc
fldl
mov
cmc
pop
mov
testb
in
in
mov
mov
cld
int3
stc
jge
cmpsl
std
sub
adc
mov
xlat
hlt
push
mov
movsb
movsl
dec
loop
movsb
cli
popa
cwtl
jg
lret
pop
xchg
jmp
adc
jnp
xchg
push
cmp
jmp
ss
andb
aas
sti
call
xlat
xor
es
in
movb
mov
inc
fisubrl
nop
push
pop
fs
xchg
mov
adc
xchg
add
and
hlt
fstpl
shr
or
aas
mov
fisttpll
fisubs
push
jle
fistpll
fisttpl
fwait
mov
jle
es
xorl
mov
jecxz
ljmp
mov
icebp
das
add
sbb
jb
mov
sbb
xchg
and
jg
aad
nop
sbb
cmp
test
aaa
cmc
sub
or
loopne
fsubrl
inc
call
imull
mov
adc
xchg
mov
mov
clc
cmc
add
fistpll
fildll
cs
dec
xchg
loope
sbb
add
sub
adc
dec
sub
lahf
adc
sbb
sarl
sbb
jo
out
clc
jnp
pusha
cmpsl
test
sahf
xor
inc
jge
out
jnp
fimuls
test
jmp
xchg
jns
mov
lret
jle
pop
sbb
sbb
push
repz
jb
pusha
sub
fistps
dec
jo
fisttpll
push
outsb
pop
icebp
fucom
imul
fmull
pop
pushl
fstpt
cltd
jp
xorb
insb
cli
test
popf
loop
fdivr
jbe
das
je
dec
sarb
cli
std
push
and
cmpsl
lods
cmp
jbe
jp
adc
aas
and
dec
or
sarl
sti
scas
or
mov
test
aaa
mov
mov
or
frstor
mov
dec
cmp
mov
jle
cmp
sbb
adc
popl
cmpsb
bound
int3
mov
ds
pop
add
test
jbe
div
sub
lcall
mov
fmuls
in
jg
mov
lahf
add
jg
push
sbb
aaa
int3
insl
negb
stos
lahf
rcll
xchg
test
push
hlt
arpl
mov
imul
int3
lcall
cmc
data16
ret
xchg
popa
sbbl
or
or
mov
cltd
jno
out
hlt
jg
sub
nop
sub
adc
push
adc
shlb
push
lret
gs
fisttps
mov
jae
cmp
jno
ds
aas
push
jmp
jmp
repz
outsb
mov
and
insb
es
lcall
xchg
sbb
dec
je
and
dec
pop
sub
test
inc
and
sbb
aas
in
and
sti
dec
push
jecxz
sbb
sub
js
nop
push
fidivrl
xor
inc
cs
test
push
cld
or
call
push
mov
jb
lcall
hlt
loope
popa
in
mov
testl
dec
aam
and
loope
xorl
jg
jl
sahf
aam
sub
iret
pop
inc
stos
mov
dec
lcall
xchg
mov
and
in
das
cld
push
dec
mov
lock
pop
pop
sti
pop
sub
cmpsl
dec
xchg
inc
add
mov
rcrl
push
xchg
mov
dec
ja
mov
dec
adc
or
js
aaa
inc
xor
data16
jmp
pop
push
ljmp
les
mov
adc
popf
nop
sti
pop
jecxz
adc
dec
add
adc
cs
add
out
arpl
ret
adc
adc
adc
std
movsl
je
mov
test
add
cmpsl
pop
mov
mov
mov
sub
xor
xlat
inc
pop
out
cmp
in
jmp
lea
dec
ja
scas
idiv
cmp
shll
xchg
cwtl
filds
jmp
adcl
mov
lds
dec
jno
and
add
leave
adc
sub
push
jnp
inc
test
lret
mov
mov
icebp
pop
test
adc
sub
insl
jnp
loope
adc
hlt
stos
in
jge
mov
dec
cmp
push
mov
dec
or
pop
cwtl
inc
add
pop
addl
popf
jo
scas
lret
out
data16
mov
mov
push
xor
call
aas
testl
outsb
or
stos
lods
ffree
cmp
femms
loop
lret
pop
xor
mov
lcall
dec
mov
cmpsb
sub
daa
pusha
or
mov
xlat
std
pop
stos
outsl
adc
movsb
imul
cs
imul
inc
js
cmc
and
aaa
adc
add
xchg
lret
sub
xchg
sbb
fnstsw
call
jmp
lock
mov
ret
decl
sarl
sbb
ja
daa
lret
xchg
cwtl
mov
popf
stos
les
ja
lcall
add
mov
push
push
notl
jmp
dec
jg
dec
inc
mov
inc
jo
loope
cwtl
loopne
mull
mov
imul
lock
popl
adc
scas
and
mov
ja
mov
xor
xchg
and
mov
das
imul
pop
fdivrs
std
mov
pop
shll
mov
ss
das
pop
push
xchg
pop
mov
inc
mov
cmp
ja
aaa
xor
lock
jmp
push
or
andl
jmp
adc
out
xchg
gs
cmp
jne
ja
mov
cmpsb
push
rcrb
in
adc
cmp
mov
xchg
and
cmpsb
js
sar
sub
add
arpl
mov
call
jg
lods
loop
int3
and
into
sub
sub
inc
hlt
popf
push
adc
add
inc
fcomps
psrad
dec
mov
fbstp
cld
pop
cmp
jbe
imul
stos
lods
xchg
arpl
cld
fbld
xchg
pop
psrad
addb
shrl
xchg
andb
test
nop
adc
jg
mov
ds
add
aas
idivb
or
out
jns
fistpll
pop
js
lods
xor
sahf
xchg
mov
mov
sahf
mov
aaa
inc
cli
filds
cmp
addr16
dec
dec
mov
xchg
and
inc
jo
push
popf
out
inc
ficomps
call
mov
out
pop
jae
xor
cmc
jle
out
cmp
pop
add
cmp
fdivl
popa
mov
inc
test
fwait
xchg
loopne
dec
mov
mov
and
jge
cmp
aas
add
adc
inc
lahf
sbb
stc
lcall
loopne
cltd
mov
outsl
test
inc
stos
cmp
sbb
add
pop
lds
ljmp
cmp
jp
sbb
iret
sub
stos
rcl
mov
inc
enter
outsl
js
gs
rcr
pop
sahf
hlt
fisttps
ja
clc
ja
insl
lock
mov
test
xchg
add
ret
sti
insl
lcall
cmp
adc
ret
loopne
fimuls
mov
or
jb
mov
lock
clc
cmpsb
out
in
stos
push
push
and
neg
loope
inc
add
outsb
test
fisubl
and
mov
sar
cmpsl
and
push
push
dec
mov
pop
jno
addr16
cmp
jnp
aam
or
xor
sahf
xchg
das
push
incb
jmp
out
lahf
and
xchg
add
shlb
jnp
inc
fnstcw
sarb
jmp
sub
mov
inc
add
cmpb
inc
ret
into
inc
std
pop
push
dec
sub
stos
out
xor
sbb
pop
adc
pop
xchg
lock
mov
xor
jbe
xor
scas
aaa
pushf
jecxz
cmp
sbbb
out
mov
cmc
jae
sbb
and
mov
lods
fcomp
ja
fbld
push
fldenv
sub
xor
pop
in
mov
or
jp
addr16
popf
sub
sbb
add
push
cmp
mull
jo
sub
test
xor
lods
xchg
dec
push
and
dec
dec
call
jbe
xchg
aam
repz
adc
sbb
lods
imul
mov
pop
pusha
cmp
loope
loope
add
icebp
or
out
movsl
fcomps
in
std
pushl
fwait
cmp
cs
inc
xor
in
scas
shlb
cs
ret
dec
mov
mov
sbb
sahf
and
inc
loop
in
je
xchg
inc
mov
clc
cmp
mov
mov
sub
xlat
stc
adc
mov
je
and
pop
add
or
jle
mov
push
add
jg
test
jp
nop
clc
or
orb
lcall
xchg
test
aaa
add
addr16
loop
ljmp
cli
mov
fdivrl
mov
arpl
jg
pop
iret
mov
inc
fstp
dec
sarl
ljmp
xchg
rcr
jg
xchg
in
sub
pop
mov
dec
jo
lsl
pop
fxch
lahf
add
in
xchg
iret
arpl
ja
idiv
outsl
adc
sub
jne
rol
lcall
in
iret
mov
xchg
push
add
hlt
loopne
lds
cmp
jmp
pushf
andl
lret
fmuls
xchg
scas
int3
out
faddl
and
push
jg
call
inc
jae
jb
push
imul
clc
aas
xchg
lahf
and
xor
cli
cwtl
sbb
cmp
das
dec
add
daa
inc
sub
inc
cmpsb
mov
call
leave
ja
insl
movsl
add
mov
fidivrs
inc
fdivrl
arpl
push
pop
divl
lea
mov
lods
mull
jnp
pop
sbb
cmp
nop
lock
or
xchg
mov
pop
push
adc
pushf
push
inc
mov
jb
push
jmp
sbb
sub
shrl
in
mov
cmc
je
and
mov
jb
jecxz
cmpsl
jnp
adc
je
daa
inc
cmp
push
aas
xchg
int3
push
cmp
jbe
sbb
mov
dec
xor
call
add
cltd
adc
cmc
out
sbb
jmp
jns
inc
les
out
lcall
insl
inc
jmp
loope
es
into
cli
mov
mov
inc
cmp
mov
mov
mov
lock
out
adc
pop
push
and
jne
xchg
jmp
mov
xchg
divb
fwait
call
add
mov
lcall
mov
jno
push
clc
pop
pop
leave
mov
cmpsb
dec
pop
and
ja
sub
pop
ret
sbb
xor
imull
or
call
nop
jge
push
cmc
pushf
jmp
mov
jg
mov
add
daa
in
lcall
sub
push
jbe
dec
cmc
js
lahf
lret
mov
sbb
xorb
lcall
daa
daa
xchg
add
xchg
xor
rcrl
adc
and
jb
je
dec
std
sub
push
mov
daa
sbb
mov
and
inc
shll
aad
jno
aas
push
push
aas
sbb
or
test
add
ja
mov
les
enter
mov
jl
js
xchg
add
pushl
or
jne
add
push
loope
pop
or
jge
xchg
cltd
pop
aas
in
outsb
rcrb
cmp
inc
xchg
dec
and
das
lcall
sar
cmp
xor
andl
out
hlt
je
push
add
push
xor
call
xor
test
mov
nop
fnstcw
jbe
shll
aas
daa
inc
sub
push
mov
mov
lds
adc
mov
xchg
pop
fmull
call
pop
mov
sbb
divl
sahf
adc
adc
pop
rorl
cmp
adc
mov
roll
daa
adc
decb
mov
push
stos
lods
mov
push
mov
ds
imul
fdivrp
add
stc
xchg
rcll
test
repz
xchg
ficoms
rcll
pop
xorb
cmpb
into
xchg
xor
shrb
pop
test
mov
scas
lock
insb
stos
or
por
mov
or
mov
push
jmp
popf
mov
pop
popa
dec
sti
sub
jg
sub
rcrl
mov
es
sub
ja
fiaddl
jmp
pop
addr16
pushf
xchg
dec
into
push
push
sub
in
aad
mov
cld
pop
or
cmp
rcrl
jmp
xchg
mov
mov
loopne
pop
test
insl
mov
add
lock
sahf
mov
jl
cld
shrl
andb
pop
cmpsb
arpl
add
jge
mov
rcll
add
int
mov
pop
lods
pop
mov
xchg
add
ficomps
jmp
out
cld
cwtl
dec
jno
cs
pushf
xor
nop
mov
sbb
aas
lock
add
fnstenv
push
out
xor
mov
jb
jl
mov
mov
or
add
sub
icebp
mov
pop
out
pop
push
xor
jo
std
popf
sbb
cld
adc
push
jg
and
addr16
loop
scas
mov
hlt
adc
movsb
cmc
push
lds
xor
push
inc
fmuls
mov
fists
dec
inc
fwait
sbb
sub
dec
push
mov
pushf
and
stos
xor
jle
ljmp
mov
jno
adc
add
testl
mov
inc
jno
dec
xor
fs
xor
les
adc
inc
push
orl
stos
xchg
nop
out
aas
ret
repnz
mov
imul
cmp
sbb
gs
and
clc
iret
jno
div
adc
cmp
xchg
icebp
dec
and
pop
rolb
xchg
punpckhdq
fcomi
adc
xchg
loopne
clc
inc
lret
inc
sub
repnz
loope
lods
mov
pop
mov
cmpl
adc
aas
cmp
jp
mov
sbb
ja
mov
icebp
or
aaa
mov
dec
jle
mov
lcall
fadds
mov
adc
jmp
cld
xor
cmp
cld
inc
mov
out
popf
mov
hlt
inc
loop
dec
addb
loop
and
icebp
inc
jnp
test
pop
xor
adc
imul
mov
and
mov
mov
xchg
push
call
mov
and
jle
jae
pop
sub
and
push
pop
arpl
adc
std
cmp
cmpsb
fdivr
add
les
scas
jmp
mov
and
or
adc
cmp
test
lahf
cmc
cmp
into
int3
movsl
mov
sbb
jae
jo
rcrl
pop
and
dec
dec
je
cmp
aad
lea
sbb
lretw
and
mov
add
inc
and
push
and
out
pop
add
push
sbb
dec
popa
jmp
mov
cmp
sbb
mov
mov
and
fldt
jb
push
cld
nop
ret
pop
cmp
xor
mov
jg
xchg
dec
push
jno
cmp
jo
out
mov
mov
and
sbbl
outsb
repnz
jg
stos
fsubrp
sub
das
inc
push
test
hlt
ss
mov
out
lods
add
lock
ret
aam
push
sbb
popa
out
aas
loopne
jg
arpl
cmp
loop
inc
push
xlat
inc
or
mov
lea
aas
mov
scas
les
xor
out
xor
xor
xor
loope
jo
mov
aaa
cmc
aaa
adc
cmp
mov
call
cmp
les
jb
or
adc
sub
in
stos
cli
or
push
sbb
cmp
ds
mov
js
lods
bound
sbb
lds
fstl
and
sub
adc
std
orb
movsb
decl
push
sahf
push
inc
arpl
inc
aas
add
shlb
sti
ja
leave
and
popf
sti
cwtl
inc
test
dec
pop
pushf
test
out
incl
mov
pop
nop
in
call
sbb
inc
dec
aaa
pop
jg
out
lock
push
inc
push
or
mov
jmp
mov
loopne
or
push
std
ret
loope
popa
loope
add
repnz
or
mov
aad
sbb
inc
inc
xor
loopne
dec
mov
pop
clc
pushl
xchg
hlt
adc
mov
cmp
ds
inc
sub
faddl
fcompl
mov
jle
fistl
sbb
xor
std
mov
mov
ja,pn
inc
test
aad
ficoms
add
cld
aaa
div
sbbl
and
scas
sub
loop
sbb
pop
outsb
andb
rcl
adc
xor
pop
out
mov
jno
in
inc
xchg
jg
dec
jnp
int
sbb
cld
test
add
test
test
xor
xchg
and
inc
and
std
mov
movsl
pop
lds
mov
cmp
pop
bound
sbb
xchg
clc
arpl
sbb
addr16
jecxz
cmp
aas
pop
push
stc
xchg
movsb
xchg
jno
adc
sub
negl
jb
out
pop
arpl
jmp
out
mov
and
push
loopne
int3
std
and
insb
popl
xchg
mov
sub
add
test
xchg
cld
add
test
movsb
int
cs
sbb
lcall
jl
or
sub
or
pop
xchg
jnp
xorb
sar
push
push
sub
push
pusha
out
out
mov
sub
inc
lahf
push
jge
lcall
mov
fsubrl
push
adc
push
mov
aas
cmp
mov
push
or
pop
mov
ret
lea
cmc
les
fdivs
loope
lock
xor
push
adc
out
pop
push
fucomip
sub
insb
xorl
stc
push
ja
jb
hlt
or
test
call
push
std
or
push
push
jmp
jno
push
test
xor
xor
inc
filds
jmp
test
filds
inc
xchg
mov
jne
mov
gs
decb
insl
gs
mov
sbb
stc
mov
push
lret
cmp
push
ljmp
adc
and
mov
xchg
sar
mov
and
cmc
movsl
add
add
jnp
push
mov
stos
aam
daa
cmp
fidivrl
mov
xor
decl
hlt
jle
fdivrs
pushf
adc
out
test
ret
push
testl
fistpl
std
bsf
sbb
sub
xor
mov
popl
lcall
sub
xchg
bound
scas
or
pop
jmp
sub
sub
cwtl
push
fmuls
aas
js
mov
jmp
orl
push
and
mov
loopne
jmp
jo
adc
testl
lock
adc
cli
es
inc
std
incl
xor
pinsrw
fisubrl
pop
xchg
out
mov
cli
jmp
dec
data16
icebp
mov
stos
push
pop
inc
loope
ret
fbld
xor
sub
adc
jg
icebp
filds
inc
ljmp
sub
mov
dec
pushl
inc
mulb
mov
ja
hlt
dec
mov
test
add
jmp
ljmp
push
incl
inc
mov
or
mov
xor
hlt
fucomp
mov
pop
cmp
loope
call
mov
sub
xchg
sahf
push
popa
xchg
mov
or
lahf
lock
icebp
sub
cmp
jmp
push
inc
mov
std
cmp
push
jns
cmc
mov
cmpsb
mov
testb
jae
add
add
cltd
push
adc
js
enter
lods
pop
push
insl
cmpl
and
test
lcall
lock
adc
shld
ret
outsb
push
inc
std
ret
cmpl
psraw
mov
out
or
jnp
push
stc
push
jl
jmp
cmpsl
or
bound
shl
xchg
ss
and
cltd
cmpsb
cmpsb
or
lock
jg
popf
xchg
add
pop
dec
fcmovu
mov
les
inc
mov
enter
push
pop
stos
fmul
notl
cmp
scas
neg
stos
mov
push
sub
incl
add
lods
and
dec
fidivrl
pop
inc
in
ds
cmp
fs
aaa
scas
hlt
stos
or
aad
ffreep
sub
loop
xor
push
loope
mov
xchg
aaa
lea
mov
jmp
dec
in
repnz
pop
fisubs
jnp
cmp
or
dec
push
cli
and
push
das
sub
push
inc
aaa
jecxz
negl
jne
cmp
and
daa
mov
jl
scas
pop
int3
ja
shll
lods
data16
inc
sub
pop
roll
xor
jecxz
pop
testb
ret
inc
cmp
mov
call
jb
cmp
cmpxchg
sbb
stc
mov
or
pop
fimuls
push
sbb
mov
adc
fwait
rorl
jb
fs
out
or
dec
xor
icebp
out
xchg
pop
jle
popa
movsl
out
or
lahf
adc
shlb
and
repz
add
push
in
push
jp
je
fcomip
jmp
insl
fisubrl
fcompl
rol
int3
dec
shll
leave
cmp
mulb
xchg
cmp
pop
sti
jle
mov
sub
dec
mov
mov
adc
cmpl
dec
stc
inc
lahf
mov
mov
movsb
cli
xor
sbb
fcmovb
pusha
ret
mov
xchg
call
cmpsl
rcrb
pop
add
jno
out
cwtl
std
xor
push
xor
lahf
pusha
negl
stc
movsl
jp
push
and
xchg
mov
decb
inc
sbb
lock
push
popf
sub
push
add
fwait
loop
jmp
rorb
cmp
pusha
xchg
add
inc
ljmp
repnz
rcll
sbb
ss
test
mov
sbb
int
mov
or
push
mov
fmuls
and
mov
loopne
fistpll
out
mov
daa
call
clc
xchg
and
pop
ljmp
dec
push
mov
push
js
ljmp
fcmovu
int
mov
das
or
pop
fs
inc
outsl
push
push
outsl
mov
mov
mov
jle
jnp
sar
jae
sub
mov
insl
and
mov
mov
pop
mov
mov
jmp
or
xchg
out
std
divl
fwait
ja
jge
mov
push
les
cmp
dec
or
cwtl
lret
jecxz
test
inc
mov
clc
iret
test
loop
add
mov
in
scas
inc
std
dec
jg
je
jg
xchg
sti
add
xchg
cmpsl
jno
jg
mov
push
arpl
cmpsb
into
cltd
call
clc
adc
inc
sub
loop
xchg
outsl
in
aaa
mov
popa
mov
dec
inc
xor
and
aaa
ja
arpl
and
mov
xor
insl
cmpsl
out
mov
lahf
push
xchg
testl
test
arpl
pop
pop
mov
arpl
pop
sub
mov
imul
inc
lods
cmc
ja
adc
divl
push
and
scas
mov
jg
fimuls
or
test
imul
ret
insl
lret
loopne
cltd
xor
sbb
jg
incb
push
mov
cmp
lds
in
xor
in
movsb
test
insb
jle
xchg
fdivr
push
and
mov
cmp
mov
cmp
test
jge
daa
xor
push
and
ljmp
ja
fidivrs
je
mov
ljmp
ret
sub
das
dec
fsubr
mov
pop
cmp
sub
cwtl
or
inc
lea
out
dec
ds
shll
or
loope
mov
inc
dec
jge
push
inc
inc
insl
cs
sub
xchg
fs
pushl
add
xlat
cmpsb
adc
inc
xor
sbb
mov
mov
sbb
je
jle
adc
std
pop
inc
test
gs
xor
pop
pop
xor
add
mov
test
xor
ret
clc
sbb
movsl
sbb
stos
fistpl
aaa
dec
sti
or
jbe
outsb
lahf
sti
bts
loopne
dec
lret
dec
mov
gs
and
aas
dec
jo
inc
jecxz
imul
xorl
push
push
pop
xor
mov
test
ja
in
mov
mov
clc
decl
inc
add
lret
xchg
sbb
mov
pushl
insl
mov
scas
add
fsubl
call
pushl
jno
shll
ds
call
or
jo
inc
mov
stc
das
out
ljmp
mov
imul
rol
xor
sub
aad
cli
ljmp
push
std
lods
mov
sbb
push
jb
push
xor
push
stos
incl
scas
negl
lock
divl
andb
iret
call
dec
mov
mov
cmp
sub
xchg
push
xchg
rorb
push
loop
loopne
je
shl
in
mov
in
mov
insl
cmc
pop
cmpl
shlb
scas
ss
jmp
sub
syscall
pusha
push
pop
fstps
xor
in
pushl
imul
loop
lea
negl
lret
loop
negl
js
test
fiaddl
or
outsb
lods
dec
es
cmp
dec
cmovs
js
into
xlat
inc
adc
jmp
cmc
or
gs
add
or
adc
rorl
or
sahf
pop
scas
adc
inc
and
sub
mov
into
les
jnp
ja
dec
test
push
add
fstl
jmp
mov
fwait
xor
jno
jb
adc
clc
out
adc
push
push
ret
in
add
mov
jg
inc
mov
cmpsl
std
mov
ljmp
test
adc
push
add
add
pop
aaa
xor
aas
add
add
and
adc
mov
inc
xor
ja
sub
push
or
inc
aam
stos
dec
add
ljmp
xor
push
lods
test
add
add
in
aad
or
mov
add
push
and
inc
push
sbb
inc
inc
push
or
dec
sub
incl
dec
inc
dec
sbb
sub
inc
add
lret
sbb
add
sub
sbb
mov
mov
aam
dec
mov
jge
push
mov
add
mov
jne
jns
push
addr16
jbe
mov
cmp
add
or
or
sbb
jb
pop
addl
dec
imul
push
fmull
and
dec
pop
sub
test
stc
fimuls
in
pusha
loopne
jbe
cld
dec
dec
push
repnz
sbb
mov
add
hlt
cwtl
jecxz
jmp
lock
and
out
ja
and
push
imul
dec
lret
jns
jae
jo
mov
jo
and
push
pop
imul
sub
inc
xor
rcrl
arpl
insl
cwtl
fistl
fwait
push
inc
inc
inc
fsubrl
mov
sbb
std
mov
sarb
sub
mov
ss
sbb
sbb
lret
inc
popf
inc
pop
or
lea
mov
stc
sarl
je
dec
insl
adc
jb
push
push
imul
mov
inc
mov
negb
insb
insl
dec
cmp
cmp
xor
pushl
pop
inc
add
dec
add
push
fnsave
and
sub
add
cmp
sub
add
sahf
inc
outsl
push
cmc
int
fisttpl
cmpsl
push
dec
mov
adc
jo
or
mov
pushf
add
in
cmpl
pop
sub
pop
add
mov
adc
imul
imul
cmp
and
adc
test
or
movl
adc
add
dec
pop
gs
jns
push
ja
ret
push
sti
add
sub
push
add
idivl
mov
addb
insb
dec
dec
add
lock
jbe
push
push
inc
cmp
aam
mov
xchg
dec
int
mov
push
cmc
mov
lods
push
pop
sbb
fsubrp
mov
add
mov
sub
inc
cmp
jp
inc
mov
push
push
cmp
mov
hlt
in
dec
imul
movsb
icebp
mov
fdivs
repz
xor
and
mov
add
mov
mov
jns
mov
sub
adcb
inc
addl
addr16
pop
imul
inc
dec
jle
jmp
pushf
dec
out
inc
mov
stos
pop
mov
je
test
insb
mov
sti
xchg
cld
mov
mulps
int3
pop
mov
andl
cmp
xchg
xor
lret
stos
fs
fcmove
ficomps
jnp
push
push
push
daa
mov
jne
fcomps
push
pop
add
push
xchg
lahf
push
divl
insb
stos
shrb
cmp
pop
rorb
pop
xchg
out
loopne
lahf
aaa
mov
xchg
stos
pop
jg
jecxz
and
fiadds
fdivrs
cmp
add
xlat
cmp
gs
insl
out
xor
pushf
inc
inc
mov
clc
push
or
push
insb
sti
xor
sbb
mov
jns
jno
adc
in
add
arpl
push
cmp
sub
in
cmp
icebp
and
add
mov
enter
jne
or
popf
mov
in
mov
jle
adc
icebp
in
pop
insb
dec
fs
cmp
cmp
sbb
mov
jno
push
add
lcall
loopne
mov
jmp
fisubs
into
fs
add
inc
lret
adc
xor
lods
ljmp
push
pop
cmovp
mov
into
add
inc
pop
and
push
push
pop
mov
xchg
sub
add
push
jno
xchg
jge
inc
fistpll
shll
fists
mov
pop
inc
adc
push
adc
xchg
inc
jno
ret
or
stc
dec
pop
push
incb
mov
adc
cmp
jbe
pop
icebp
ret
mov
sbb
dec
leave
ret
mov
dec
pushf
push
hlt
push
scas
inc
ficoms
inc
cmp
xor
jp
mov
mov
mov
imul
push
stos
cmpsb
daa
lock
mov
pop
inc
insl
outsl
outsb
or
mov
dec
es
inc
aaa
jno
sub
push
or
outsl
les
adc
xchg
iret
add
xor
xor
add
dec
push
xor
push
or
popa
call
add
adc
ret
inc
dec
test
xor
mov
fdivl
jl
flds
mov
pop
sub
imul
loope
addr16
pop
loopne
test
lock
or
adc
imul
push
repnz
dec
mov
movsl
dec
and
xor
pop
lock
int3
xchg
in
adc
lods
push
adc
mov
js
clc
inc
and
add
in
roll
data16
fcomps
inc
pop
js
mov
jecxz
gs
jecxz
inc
xchg
popf
icebp
into
jmp
sbb
enter
pop
inc
cld
loopne
ss
push
xlat
mov
add
aas
mov
mov
adc
add
add
pop
mov
adc
pop
rcrl
orl
mov
push
dec
dec
push
bound
push
mov
lock
aaa
push
mov
fs
shrb
lds
pop
clc
inc
mov
ficompl
pop
xchg
into
mov
gs
push
je
jo
jge
aaa
inc
jno
test
test
adc
andl
addr16
test
inc
mov
pop
mov
lahf
xchg
jne
loopne
les
add
sbb
imul
inc
outsb
push
push
push
lret
sub
out
lods
bnd
gs
mov
jg
roll
lret
in
push
movb
ss
xor
lock
xor
jmp
out
add
push
sub
ret
dec
dec
arpl
add
mov
addr16
and
call
jo
fsub
test
ret
lahf
add
fs
daa
bound
mov
aaa
leave
add
fwait
mov
ror
jbe
rol
insb
addl
push
xchg
add
push
icebp
or
cmp
pop
dec
imul
cmp
aad
out
mov
outsb
gs
cmpb
inc
adc
sbb
push
inc
push
push
pop
inc
pop
jo
jecxz
lret
cwtl
push
imul
xchg
inc
add
clc
or
push
inc
clc
push
arpl
lock
insb
das
jns
in
stos
lock
cs
in
adc
push
mov
pop
or
push
push
sub
divb
push
jle
xor
fildl
in
pop
repnz
adc
sbb
mov
mov
movsb
jnp
or
cmp
add
in
adc
int3
repz
inc
adcl
jbe
inc
jp
push
add
stc
lods
jp
dec
adc
aam
data16
into
scas
add
data16
fsubrs
xor
push
or
dec
sub
outsl
icebp
xlat
call
popf
dec
add
cmp
xchg
arpl
hlt
inc
pop
push
dec
jle
mov
mov
push
ja
ja
decl
cmpsl
imulb
js
jecxz
data16
test
xchg
cmp
movsl
sbb
add
jl
ret
mov
sbb
adc
enter
addl
rcrl
jle
and
add
add
jle
das
filds
xchg
jmp
pusha
push
xchg
int3
fcmovne
mov
call
add
jnp
jnp
add
pop
outsb
cli
loopne
int
test
add
jae
movsl
adc
lahf
cmp
rcrb
adc
ret
arpl
scas
bound
nop
shrb
dec
add
iret
push
pop
insl
mov
sub
rolb
pusha
pop
test
add
sbb
xlat
pop
out
or
aaa
imul
pusha
dec
or
dec
cmp
lods
fnstcw
sbb
add
or
mov
inc
adc
in
xchg
stos
sub
fs
jae
addr16
add
add
adc
loope
aad
push
stos
sbb
movsb
add
data16
popa
clc
add
mov
xor
add
sbb
mov
ror
mov
mov
pop
pop
pop
jle
lea
enter
lods
add
leave
data16
popf
mov
sub
test
jg
lock
insb
add
fdivrs
add
clc
int
inc
cmpsl
cwtl
add
js
popf
in
add
pop
mov
and
sbb
and
aas
fists
push
in
cmp
add
je
in
mov
scas
aad
sti
inc
rolb
push
mov
or
divb
pop
in
or
xchg
mov
les
jge
sbb
mov
mov
out
fsubrl
call
loopne
inc
and
divb
cmp
iret
lods
add
adc
es
inc
add
and
lods
insl
sbb
cli
dec
insb
jae
ret
mov
insb
push
loope
jns
mov
sbb
jle
push
mov
sub
jae
add
xchg
inc
mov
add
pop
fadds
ja
mov
or
sbb
add
cmpsb
push
jbe
xchg
insb
push
fbld
or
and
cmp
add
in
repnz
aaa
inc
leave
lea
aas
je
or
mov
movsb
into
push
xor
repnz
mov
idivb
lea
xor
sbb
or
data16
sub
iret
es
jnp
xor
out
push
xchg
xchg
lea
in
int
out
jl
or
js
mov
pop
mov
movsl
in
mov
iret
push
mov
sbb
jae
ja
add
inc
outsl
outsb
push
js
cmpsb
out
push
pop
mov
add
leave
je
addb
loope
into
in
fs
setae
push
pop
push
xchg
add
insb
add
lret
repnz
ja
aas
xchg
es
sub
inc
je
dec
in
shlb
mov
add
dec
fwait
mov
rcll
and
sbb
sub
loopne
add
dec
inc
sub
xchg
jle
sub
sub
xchg
dec
fmuls
mov
pop
mov
je
cmpsb
lds
aam
ret
xchg
mov
insl
decl
in
bound
or
fs
push
pop
ljmp
or
add
outsb
jg
adc
lea
leave
or
sarl
fisttps
sahf
loop
leave
in
jecxz
mov
orl
push
in
add
cmp
fidivrs
sbb
rclb
and
sti
into
xor
icebp
dec
dec
cmp
inc
and
incl
addr16
mov
sahf
cmpl
mov
mov
add
push
les
andl
in
dec
mov
notb
test
mov
xchg
movsl
push
and
add
jl
and
xchg
enter
dec
scas
scas
mov
adc
shrb
lret
sahf
cld
xor
mov
push
pushf
mov
add
sahf
xchg
pop
mov
imul
repnz
sti
icebp
mov
int3
shll
add
mov
pop
dec
jae
and
xchg
pop
pop
pop
imul
ss
sbb
cmovge
adc
mov
fdivr
cwtl
outsb
pop
movl
and
pop
in
loopne
pop
rolb
sub
fnstcw
mov
push
frstor
mov
ljmp
fwait
loope
push
xchg
add
call
add
loop
rclb
push
xor
mov
xchg
jno
inc
mov
xor
push
push
insl
ret
lods
lea
add
mov
or
pop
sbb
mov
sbbl
ffreep
imul
jb
or
mov
data16
subb
popf
mov
jns
dec
mov
mov
jnp
push
ficomps
rolb
fmul
sti
cmp
cmp
dec
ja
adc
div
push
jnp
shl
sbb
in
pop
jmp
xchg
sbb
push
cmp
fiaddl
stc
mov
add
bound
mov
jb
mov
fwait
sbb
popa
fwait
jb
jge
jae
fidivrs
int3
sbb
rcrl
xor
or
or
cmp
mov
inc
xor
cmpsl
add
cld
dec
cmpsl
notb
fcomi
sub
shlb
arpl
adc
aaa
push
lds
bound
jecxz
mov
inc
insb
xchg
in
pusha
insb
xlat
xor
inc
mov
inc
stos
cmc
enter
pop
cld
jle
mov
xor
popa
cwtl
pop
inc
test
nop
js
outsb
lods
ljmp
jne
cld
std
mov
push
ret
mov
adc
xor
push
arpl
clc
xchg
ss
dec
mov
push
mov
fildl
xor
add
outsl
and
jle
or
cli
xor
insl
cld
addl
mov
xchg
and
int
in
inc
movsl
fdivl
and
mov
jbe
push
mov
inc
mov
insb
in
mov
xor
mov
fstpl
sbb
ret
mov
test
aad
or
mov
sbb
outsb
add
cmpsb
jbe
ret
adc
das
addr16
sub
sbb
dec
lret
out
mov
push
cmp
add
or
cmp
ret
ror
jbe
cld
mov
andl
push
pop
push
or
xchg
push
or
gs
rolb
loope
cmp
cmp
out
rol
cmp
or
repnz
cs
fldcw
pop
mov
xchg
sub
and
cmp
shrb
inc
in
mov
add
lret
ss
mov
out
out
mov
pop
pop
jae
and
jns
mov
xor
pop
jle
roll
mov
fcompl
and
adc
sub
incb
or
jno
pop
xlat
jg
sti
cbtw
jne
addl
dec
push
xor
push
clc
stos
mov
xlat
pop
sbb
or
and
pop
mov
fcmovnbe
clc
mov
hlt
jmp
adc
in
add
flds
xchg
adc
push
loop
jl
cld
cmc
jle,pn
cmp
fs
iret
push
inc
or
add
add
xor
sbb
sbb
inc
in
pusha
fildl
mov
jecxz
dec
rolb
cmpsb
add
in
rcll
sahf
out
xchg
lds
pop
pop
pop
outsl
rclb
testb
cmp
mov
pop
sub
adc
cmp
cmp
movsl
cmp
and
ret
cmp
fwait
pop
push
or
ret
mov
shl
or
jne
shl
push
lcall
mov
fildl
popa
mov
and
divl
aas
add
xor
cmp
jbe
ret
and
repnz
pop
and
les
lods
jmp
and
loopne
push
dec
cwtl
lahf
push
outsb
pusha
cmp
xchg
sbb
mov
cmp
jge
mov
and
int3
push
in
shrl
pop
addr16
sbb
bnd
and
xor
pop
imul
aaa
hlt
xchg
out
aaa
jns
popa
jae
and
aad
xor
mov
mov
mov
addr16
mov
mov
testb
fisubl
lahf
cltd
out
push
in
pop
mov
cmc
sbb
jp
lcall
push
lods
xchg
pop
mov
or
enter
fldt
andb
scas
xchg
in
or
push
push
cld
pop
popa
add
inc
int3
xor
mov
in
inc
lahf
mov
movsb
repnz
js
lds
jmp
andl
mov
push
stc
and
and
jne
cli
or
dec
push
cli
cmp
push
mov
adc
pop
cwtl
mov
fimuls
rcrl
repnz
cmp
jecxz
in
ret
dec
mov
aam
jecxz
int3
mov
sarb
iret
data16
leave
xchg
mov
xchg
in
ficoms
ljmp
loope
inc
jnp
fbld
out
push
jp
and
repnz
pcmpeqw
iret
arpl
mov
mov
js
hlt
pop
fists
into
xchg
mov
mov
inc
lahf
cmp
cmc
insb
loop
xchg
or
sahf
and
xchg
push
or
mov
xchg
dec
loopne
mov
dec
push
cmc
fistl
cld
sahf
inc
pop
fcomps
xor
dec
mov
lock
lret
cmp
jne
popa
mov
sbb
out
loop
orb
dec
andl
xchg
lcall
inc
int
sub
lahf
dec
mov
movsb
or
aas
mov
inc
sbb
mov
push
fst
jl
dec
pop
cmpl
mov
inc
stc
orb
or
enter
jb
xchg
sub
push
jo
ss
insl
sub
or
mulps
andl
insb
fstpl
in
inc
nop
sarl
mov
pop
pop
leave
aas
imulb
cltd
sbb
cli
push
jb
repnz
ret
sub
inc
outsl
cmp
pop
ret
pop
cwtl
jb
xchg
xor
insb
in
or
aaa
clc
pop
mov
adc
xlat
repnz
or
add
loopne
scas
iret
xchg
insb
dec
lahf
cmp
insb
cmp
pop
notl
xchg
cmp
jle
fcompl
push
jns
inc
test
mov
test
outsb
push
cmc
or
inc
rorb
xlat
popa
xchg
data16
scas
inc
cli
or
bound
push
test
movsb
js
ja
sbb
stc
pop
mov
repnz
pop
pop
enter
jnp
pop
mov
lcall
sbb
addr16
inc
or
aam
push
and
and
popf
mov
mov
daa
iret
icebp
gs
adc
jnp
pop
jle
cmp
fcomip
mov
call
insl
jmp
roll
mov
and
add
push
push
push
adc
mov
inc
mov
and
mov
cmpsb
pop
sbb
outsl
jecxz
inc
cltd
xchg
mov
aam
adc
push
dec
xor
push
inc
or
shlb
xchg
cmc
js
lock
jp
dec
pusha
xlat
cltd
mov
dec
pop
jbe
mov
mov
dec
aad
sbb
cs
push
scas
arpl
push
hlt
je
mov
mov
and
mov
mov
jnp
inc
aam
xor
imul
nop
sub
mov
mov
or
cs
jg
rclb
jl
xor
fistl
inc
add
sub
fldl
jl
cmpsl
mov
fsin
xchg
xchg
loopne
ja
push
adc
lcall
shlb
sbb
mov
fimuls
mov
and
lods
sbb
mov
call
stos
xor
shlb
fcomi
imul
enter
jg
imulb
pop
fisubrs
fwait
adc
mov
sahf
frstpm(287
sbb
xchg
std
nop
sti
scas
pop
cmp
push
inc
stos
repnz
scas
cld
test
into
jne
shrb
mov
rcl
sbb
mov
push
sbb
inc
dec
data16
push
stos
sub
push
jns
cwtl
pop
xchg
testb
or
pusha
xchg
sub
imul
or
sti
mov
and
add
inc
add
fdivs
mov
rcll
dec
xor
inc
dec
pusha
mov
sub
pop
add
shrl
adc
mov
cmp
test
pop
div
mov
cmpl
ljmp
inc
ret
sbb
mov
inc
popa
adc
adc
or
push
or
rol
shrb
movsl
cmp
cmpsb
mov
xor
pop
and
lods
rclb
add
dec
in
divb
lcall
testb
mov
jge
xor
sub
sub
ja
loop
mov
iret
or
insl
shrb
mov
xchg
sub
sbb
pop
out
popf
and
pop
sbb
mov
xchg
mov
std
or
dec
stc
inc
movsl
fwait
mov
inc
outsb
shll
mov
and
sti
and
ret
inc
pop
cmp
xor
push
shrl
ds
or
lock
cmp
roll
inc
js
dec
inc
xchg
mov
mov
and
sub
adc
nop
sub
pop
mov
pop
sub
add
jnp
fcoms
rcr
inc
mov
mov
pop
cli
mov
adcb
jle
rcr
mov
sub
dec
jle
hlt
fbld
push
xlat
fistpll
dec
pushf
stos
mov
xchg
and
xor
push
subb
imul
jmp
xchg
and
arpl
ja
test
lret
sub
add
int
mov
or
scas
jl
mov
cmp
dec
push
jl
sarl
mov
movb
rcrl
mov
sub
aam
push
cltd
call
fwait
cmp
jnp
adc
and
call
pusha
movsl
arpl
xor
pusha
movsl
lahf
jnp
and
in
lock
fs
mov
xor
pop
arpl
jb
dec
movsl
dec
sbb
iret
pop
es
lcall
cld
lock
test
pop
xor
dec
and
test
and
cmpb
jg
pop
sbb
jbe
hlt
sbb
leave
inc
adc
out
js
sbbl
movsl
jmp
js
pop
popf
jl
add
add
xchg
xor
dec
xor
subb
jge
ljmp
ds
add
jmp
incl
jl
mov
mov
add
arpl
mov
mov
insb
mov
mov
mov
pop
jle
aaa
cltd
test
sub
hlt
inc
pop
call
enter
movsl
dec
cld
jp
lock
push
sub
les
lahf
mov
xor
test
xlat
stos
xchg
sub
push
test
fidivrs
push
fsubp
sub
lahf
jb
pop
popfw
imul
mov
addr16
jmp
loopne
sbb
push
imul
push
sarb
call
lods
incl
push
mov
or
mov
mov
cli
mov
cmp
push
xor
and
dec
and
lods
notl
scas
loop
or
outsb
xlat
pop
mov
inc
fninit
mov
inc
pop
out
mov
fwait
xor
push
repnz
push
xchg
negb
mov
aad
add
jl
cmpsl
addr16
dec
push
cli
scas
sub
cmp
in
sub
icebp
sbb
pusha
sar
adc
out
andl
add
inc
sti
addl
xor
cmp
sub
xchg
lock
and
jecxz
and
dec
sahf
push
sub
and
jmp
lods
and
inc
cmp
mov
out
popa
sti
out
jmp
sub
add
sbb
je
mov
sbbb
sti
xchg
cmpl
xor
movsb
rcrb
arpl
and
frstor
fwait
adc
push
jnp
cs
sahf
rcrb
scas
test
cld
xor
popf
cmp
xorl
orl
testl
fs
sbb
and
clc
sahf
cmp
and
cmp
test
push
and
loopne
stos
or
outsb
std
cmp
sarb
fdivr
lcall
adc
cmp
icebp
push
push
cltd
sbb
out
mov
xor
xchg
sub
xchg
sub
std
dec
adc
push
loope
sbbb
div
sahf
pop
rcll
mov
loop
pushf
test
cmpl
lret
mov
cmpsb
cmp
push
enter
dec
inc
mov
xchg
lods
gs
xchg
pop
sti
hlt
shlb
cs
sarl
mov
jmp
scas
cmpsb
lcall
ret
xlat
push
mov
ror
sub
cmpsb
sbb
int
pushf
clc
lret
imul
dec
frstor
xorl
push
hlt
mov
aam
cmpsb
pop
xchg
fstl
mov
pop
sub
js
insl
addb
cltd
xchg
jge
jecxz
and
cmp
shll
test
aas
rclb
inc
and
sbb
rol
cs
rorl
or
sbb
neg
and
or
adc
mov
je
or
jbe
sahf
push
hlt
aam
in
ss
xchg
mov
pop
xchg
scas
in
push
xchg
les
xchg
cmp
rol
ret
ljmp
add
xor
push
cmp
pop
jp
jecxz
xor
sub
out
dec
adc
cmpsl
cmpl
in
and
fwait
leave
shrb
out
call
adc
mov
cmp
movsl
ja
mov
jmp
loop
sbb
aam
dec
sbb
mov
push
lock
hlt
rolb
cli
ljmp
icebp
sbb
popa
cmp
je
mov
insb
mov
mov
aaa
lea
xchg
pop
stc
in
leave
aam
imul
push
mov
mov
pop
sbb
inc
sbb
aad
jnp
xchg
mov
push
in
loop
mov
popa
fst
rcl
push
sbb
mov
mov
adc
mov
mov
sbb
push
sub
xor
stc
and
mov
jge
xor
mov
aaa
cmp
daa
js
nop
fcomp
sbb
inc
aad
push
mov
pusha
and
popw
mov
cmp
int3
xor
popf
cmp
sbbb
les
inc
mov
xchg
fcompl
jb
cmp
mov
xchg
adc
or
insb
iret
add
aad
mov
cmp
fdivr
mov
push
push
call
inc
mov
mov
test
add
aad
addr16
mov
mov
ja
xor
mov
insl
inc
mov
pop
int
pop
mov
lock
adc
sahf
clc
or
fcmovbe
cmc
ljmp
jne
arpl
scas
lods
add
adc
mov
icebp
inc
dec
mov
jb
push
cmp
push
je
jns
mov
testb
or
pop
lret
aad
out
sar
imul
xchg
addr16
mov
data16
out
jg
arpl
or
arpl
adc
adc
les
dec
and
mov
out
xlat
pop
in
inc
dec
or
xor
jno
jnp
push
fnstenv
pop
icebp
xor
sti
scas
ss
inc
mov
xor
fdivl
int
cmpsb
push
xlat
stos
nop
hlt
mov
mov
mov
imul
inc
dec
fimuls
jbe
loop
pop
scas
setae
adc
adc
xor
ljmp
add
or
pushf
divb
addr16
movl
or
int3
sub
je
adc
lods
shl
fdivl
mov
test
push
xorb
out
push
scas
std
jns
pop
lods
pop
inc
adc
xor
out
adc
outsl
sbb
dec
mov
and
in
imul
out
inc
mov
xchg
dec
popf
inc
cmp
sub
inc
test
sbb
dec
pop
leave
mov
js
and
test
pop
fisubrs
sbb
push
rorb
xor
jp
loopne
pusha
rcrb
test
pop
mov
fstps
stos
pop
lock
pop
cmp
jbe
test
dec
enter
mov
mov
lods
out
neg
pop
xchg
stc
jo
lock
sbb
les
push
sbb
lods
aam
cmp
mov
push
jmp
outsl
pusha
lock
fldl
js
pop
aam
mov
mov
pop
cmpsl
mov
push
push
xor
xor
scas
sti
pop
je
mov
sbb
ja
mov
xor
int3
lret
xchg
fidivl
pop
xor
mov
outsl
push
out
inc
in
mov
push
mov
movsl
mov
xchg
push
xchg
xchg
imul
movsb
mov
es
popf
xchg
jmp
mov
nop
cs
jle
cmpl
inc
in
sbb
push
je
lea
inc
stos
cmp
cmp
idivl
cwtl
jl
fiaddl
in
inc
mov
xchg
or
jg
fiadds
out
enter
lea
divl
inc
insl
sahf
dec
lcall
fsubs
sub
fs
aas
ljmp
add
xchg
movsl
mov
ret
mov
adc
push
data16
and
cltd
sub
mov
call
sub
pop
and
and
jb
and
outsb
scas
pop
mov
hlt
xchg
pusha
adc
adc
cmp
xchg
jge
ss
sti
lock
ret
ja
jl
ljmp
jmp
clc
loope
pop
test
xor
inc
std
stos
xchg
and
ljmp
pop
clc
push
stos
lods
addr16
mov
fsubs
les
xor
addl
inc
cmp
adc
test
sub
test
icebp
xor
dec
push
push
inc
das
jnp
rorb
push
mov
loop
nop
sub
rcr
in
xor
loopne
adc
push
in
nop
stos
out
jne
js
push
push
stos
add
xchg
and
fstl
scas
les
ljmp
dec
jns
sarl
ja
push
sti
inc
add
jle
psrlw
inc
fwait
cmpsl
dec
scas
insl
fidivrl
cs
std
sbb
call
roll
std
dec
sub
enter
and
int
popf
jae
sahf
rorl
cmp
sbb
and
fadds
aaa
cwtl
adc
nop
add
cmp
subb
mov
fsubrs
in
subl
sbb
mov
push
mov
mov
hlt
jae
test
lock
pop
in
jecxz
mov
pop
xchg
cmp
adc
js
lahf
sbb
fsubr
or
cld
and
pushf
loop
jmp
pop
je
mov
mov
mov
cmpsb
mov
add
cmp
fidivl
loopne
add
loopne
loope
dec
or
jae
lret
mov
loop
xchg
mov
add
sbb
add
nop
daa
sahf
arpl
movb
stc
and
xorl
shlb
add
inc
fisubrl
jle
mov
push
mov
aas
sbb
pop
inc
lcall
mov
xchg
lcall
and
mov
rcrl
cmp
dec
sbb
push
or
dec
lahf
pop
loope
xchg
mov
mov
ljmp
dec
lds
ja
push
jae
scas
adcl
ficompl
cmpsl
sbb
xor
insb
repz
inc
insl
add
jmp
aad
jae
aaa
pusha
rcl
xchg
pushf
cltd
push
ja
gs
clc
pop
cmp
dec
and
or
pop
filds
mov
adc
or
xor
and
mov
stos
int3
pushf
mov
pop
xchg
mov
adc
jle
cmp
sub
std
mov
js
mov
mov
imul
xor
inc
daa
lahf
scas
mov
mov
popf
in
xor
lret
cmpsb
sub
mov
mov
mov
add
ljmp
add
sbb
ret
lods
mov
cmp
icebp
ljmp
push
cwtl
loop
in
mov
xchg
inc
out
pop
lock
js
je
mov
cmp
mov
leave
test
or
mov
dec
xchg
div
cmp
cmp
orl
pushf
outsl
jecxz
inc
ficoml
shl
lods
sti
add
daa
sbb
sbb
mov
loope
add
or
loope
not
rolb
cmp
sbb
inc
popa
in
dec
inc
push
fisubrl
cltd
and
aam
call
adcb
mov
mov
push
shl
imul
out
mov
sub
fcmovb
or
sti
lea
das
jge
pop
lds
fdivrl
add
sub
out
xchg
cmp
fwait
mov
pop
aaa
xchg
fs
adc
pop
dec
lcall
pusha
call
mov
nop
imul
jl
sub
hlt
dec
mov
push
sbb
jecxz
arpl
nop
scas
mov
mov
mov
xchg
insb
cmp
sub
mov
cmp
mov
arpl
shll
jg
ljmp
sti
jae
inc
loopne
ror
xorb
and
add
add
lods
xor
call
out
mov
pop
and
imul
jl
gs
add
xchg
sbb
push
sub
addr16
add
or
arpl
or
mov
xor
mov
xchg
out
push
lcall
push
sti
std
mov
rclb
mov
pop
or
push
adc
aad
and
or
fidivl
das
xlat
or
push
fistps
xchg
test
sbb
lret
test
pusha
mov
push
push
shll
push
sbb
cmpsb
cwtl
adc
or
test
xchg
mov
dec
jmp
jbe
sbb
in
insb
jb
int3
loope
gs
jle
fcomi
lcall
pop
push
pushf
lods
mov
sahf
cld
push
icebp
dec
add
xor
lret
adc
sub
pop
fildl
sub
mov
sbb
dec
push
xor
or
in
or
mov
cmpsb
cmovne
xor
rcr
adc
lret
lret
xlat
lcall
and
mov
setbe
decb
sahf
rorb
xchg
dec
adc
push
xor
xchg
imul
sbb
pusha
sti
jne
pop
mov
jne
pop
sub
jle
mov
andb
xor
xor
pop
mov
in
icebp
mov
inc
int3
adc
ret
push
jecxz
sub
dec
pop
ja
shlb
enter
and
aad
push
mov
mov
cmp
rcl
mov
sub
dec
mov
jmp
inc
or
mov
stos
stc
rcr
ljmp
aas
in
call
xor
inc
in
sbb
push
in
aad
shll
or
inc
push
test
daa
or
pop
pop
out
xchg
test
hlt
lods
gs
mov
clc
outsb
mov
mov
add
scas
jp
sub
jmp
nop
incl
pop
hlt
lcall
iret
ds
xchg
lcall
sub
jne
xor
push
cmp
xchg
adc
mov
outsl
pop
mov
clc
addl
int3
push
pop
sbb
rol
lcall
or
test
inc
mov
test
jno
scas
addl
stc
mov
fistps
stos
or
pop
add
pushf
jne
jg
test
adc
je
push
aad
lret
push
dec
mov
cltd
xorb
push
fdivrs
push
insb
sti
inc
into
jp
dec
ficompl
add
cmp
aad
andl
sbb
sub
cs
jmp
std
mov
sub
dec
xor
enter
enter
push
pop
arpl
and
or
jb
shll
or
and
cs
subl
add
je
lret
push
add
push
sahf
sbb
push
stc
loopne
xchg
shlb
sbb
rcr
call
push
repz
adc
dec
andl
mov
pop
enter
xchg
or
data16
add
sbb
add
dec
stos
cmp
in
xchg
jl
jns
dec
cmp
loop
hlt
aas
sbb
ljmp
fwait
push
mov
aaa
adc
pop
mov
in
rol
add
pop
imul
subl
cld
outsb
inc
push
sub
push
sub
kaddb
or
inc
scas
into
mov
mov
sub
lock
fildl
xchg
test
xchg
pushf
fisttpll
ficoms
outsb
jns
popf
cwtl
arpl
adc
ret
push
inc
cmp
call
xchg
and
mov
mov
xor
test
push
lcall
sub
cmp
das
pusha
arpl
stos
sbb
jmp
push
test
aad
xchg
fidivrs
mov
jg
mov
lret
int
outsb
stos
push
xchg
aad
sbb
push
mov
or
stos
movsl
xchg
or
rol
test
test
pop
pop
cmp
fdivrp
push
sub
jo
mov
sub
test
pop
mov
adc
popa
notb
mov
push
inc
pop
mov
cmp
jmp
sub
and
or
inc
mov
mov
shrb
adcb
addb
imul
aam
bound
sbb
insb
xchg
or
add
mov
pop
xchg
lea
and
sahf
popa
in
sahf
fisubrl
fs
inc
jb
push
push
jp
xor
or
push
xor
sti
jl
push
mov
and
pusha
xor
ret
daa
in
cmc
cmp
adcl
lahf
inc
stos
out
testl
mov
dec
sbb
adc
cwtl
mov
sbb
cmp
call
out
rorb
xor
adc
ljmp
mov
popl
pop
loop
or
outsl
jo
push
xchg
push
and
or
lcall
outsl
loope
je
mov
mov
in
push
or
or
jp
js
pop
xchg
fucomp
sbb
sbb
add
push
xor
ds
sbbb
cmc
or
movsl
pop
dec
pop
loop
sahf
mov
mov
pop
mov
aam
dec
gs
orl
xchg
inc
ds
pusha
mov
mov
mov
stos
inc
test
flds
xor
popf
jns
nop
dec
inc
test
xorl
sub
lock
or
loope
inc
outsb
push
fcmovnu
cld
lcall
cmp
fstpt
sub
or
ljmp
push
mov
xchg
pop
sbb
test
test
cmp
movl
in
fmuls
lock
shrl
sbb
mov
jg
data16
lds
pop
call
pop
pop
cmp
aad
fisubs
push
scas
cmpl
jmp
sbb
jne
imul
push
push
aad
mov
out
ret
push
cli
aam
add
pop
mov
popf
mov
jbe
mov
jg
dec
sahf
add
aam
or
pop
jnp
xor
sub
popf
icebp
mov
xor
cmpsl
mov
xchg
or
push
aam
stos
lods
ret
imul
adc
loopne
or
xor
inc
movsb
push
gs
adc
insl
je
xchg
push
xchg
loop
add
xorl
xchg
lahf
cmp
cmpsb
xor
cmpl
aam
pusha
jl
popa
inc
je
rclb
sbb
mov
or
or
in
aad
jmp
lret
add
xchg
lods
push
jmp
testl
int3
inc
cmp
mov
ret
adc
call
ss
cltd
cltd
add
loope
ljmp
xchg
cmp
testb
cmpsb
lcall
jbe
inc
dec
cmp
mov
std
and
sub
cwtl
add
cmc
xor
les
imul
insb
shr
xor
ror
dec
xor
jnp
add
std
and
fsincos
sbb
xchg
das
mov
push
iret
push
adc
sarl
sbb
adc
insb
test
mov
sbb
mov
in
or
jmp
add
push
xchg
push
xchg
in
cmpsb
movsb
stos
lcall
inc
lahf
jmp
daa
xor
inc
sbb
mov
xchg
sbb
jmp
movb
add
xchg
pop
movsl
gs
and
jle
inc
push
mov
mov
push
enter
je
call
out
and
jge
mov
jecxz
dec
out
xor
add
mov
cmpsl
lods
ja
fcom
pop
outsb
into
sbb
jmp
insl
outsl
insb
sub
sarb
loope
sub
jp
jns
lahf
aam
mov
pop
push
pop
cmpsb
cmpsl
sti
mov
call
add
pop
mov
js
push
mov
jg
addr16
pop
sti
sbb
mov
pusha
iret
mov
xlat
inc
push
xor
or
pop
mov
mov
lea
lcall
jno
mov
lock
test
pop
pop
std
mov
add
push
js
aam
sbb
mov
or
stc
shlb
xor
mov
sub
jb
pop
data16
scas
push
add
cld
rcll
mov
leave
and
scas
xor
or
xor
mov
fistpll
pop
clc
in
dec
push
ret
movsl
imul
lock
cltd
push
int3
xchg
popf
xor
or
outsb
pop
repz
fildll
jp
pop
jbe
lods
stos
frstpm(287
js
mov
jns
out
cwtl
shll
arpl
sbb
xor
mov
pop
push
loope
out
lret
sti
je
cs
lock
jb
cwtl
lds
loopne
jne
pushl
adc
out
jg
in
push
xor
sti
add
sbbb
aam
inc
cmp
fisttpl
iret
mov
sbb
std
xchg
orl
xchg
sbb
and
mov
mov
mov
pop
inc
icebp
aad
push
sbb
daa
cli
hlt
xlat
xchg
neg
arpl
insb
jo
pop
jne
inc
inc
data16
insb
movsl
pop
mov
inc
jmp
lret
cld
mov
jno
sarb
jno
or
je
lahf
inc
mov
sbbb
shl
ds
les
cld
cmpsb
dec
pop
fdivl
pop
adc
jbe
ss
rcrb
mov
jo
dec
je
or
call
mov
dec
mov
lea
mov
addr16
xor
sbb
aas
push
jae
jae
mov
sbb
and
iret
lea
mov
sti
cmp
fidivrs
jne
stc
in
jbe
cmp
inc
xorb
fwait
and
cmc
cmc
lea
adc
fidivl
jns
inc
push
pop
cmp
adc
mov
xchg
push
fs
in
and
add
stc
testb
pushf
dec
cltd
cs
jp
repz
jge
loopne
pop
rcrb
mov
sbb
sbb
push
andps
mov
fsubr
sarb
mov
out
xor
jno
cmpsl
les
sbb
cltd
xchg
loopne
sarl
inc
popf
loop
mov
mov
ret
je
out
sub
aam
push
jmp
les
and
stos
mov
xchg
dec
add
pop
or
add
pop
jl
stos
enter
lods
filds
mov
test
xorb
push
ljmp
mov
or
sbb
and
in
fisubrs
adc
outsl
and
sbb
xchg
popa
test
add
inc
mov
call
in
push
std
mov
out
into
cmp
lock
pop
mov
add
add
lods
lods
fadd
ret
push
mov
stc
or
test
repz
mov
lods
mov
mov
lods
jns
fldenv
mov
add
shlb
xchg
icebp
cmpsl
fwait
imul
cmc
adc
fadd
add
xlat
mov
xchg
insb
cmpl
jne
add
add
and
sbb
loopne
ficompl
xor
add
sbb
cmp
ret
out
push
mov
push
and
adc
xor
mov
xchg
mov
daa
in
call
push
sub
mov
jg
sbb
or
shrb
and
loopew
es
push
imul
pushf
fldcw
and
xor
addb
in
adc
sahf
sar
js
mov
mov
cmp
into
das
test
fldt
dec
js
call
adc
mov
inc
push
cli
ror
push
std
inc
lea
arpl
jo
lcall
roll
or
jae
test
out
outsb
and
push
fisttps
loope
xlat
lds
mov
mov
adc
cmp
pop
stos
lods
stos
or
hlt
outsb
call
dec
or
or
push
push
xor
in
aad
rcll
outsb
add
movsl
jecxz
out
pop
fldt
pop
mov
cmp
sbb
lret
scas
dec
popf
push
inc
shlb
aas
mov
adc
dec
fisttpll
cmc
xor
xchg
cmp
and
sub
or
pop
cmpsb
into
sbb
movsb
ret
and
pop
jne
dec
ret
es
xchg
and
pusha
xor
push
mov
inc
xchg
inc
loope
into
arpl
ret
je
outsl
test
add
inc
scas
stos
cmp
and
fcoms
xor
insb
in
jb
sbb
cmc
mov
fsubs
or
sbb
or
lock
stos
or
iret
mov
mov
int
and
xor
sbb
add
mov
insl
je
mov
nop
ficomps
ret
jp
in
int3
incb
cwtl
push
insb
aaa
fldcw
cltd
cmp
xor
out
stos
nop
gs
adcb
stos
sbb
mov
add
add
push
add
xchg
stos
xchg
mov
pusha
lcall
push
fucomp
xchg
nop
adc
mov
sahf
aam
aaa
lods
arpl
and
data16
lea
or
int
mov
mov
ljmp
sub
arpl
pop
mov
addr16
andb
jmp
sbb
loopne
dec
ror
stos
jmp
xchg
push
das
pusha
jmp
clc
idivl
cmp
inc
add
mov
adc
dec
and
add
xor
icebp
subl
cld
test
imul
aaa
push
pop
pop
adc
cmp
das
mov
sbb
lds
mov
testb
pop
add
clc
adc
and
cs
jp
cmpsb
cmp
shlb
add
pop
clc
lods
dec
stos
ret
push
shll
jmp
or
test
mov
cmp
je
mov
call
push
and
decl
mov
lea
stos
xorb
test
or
mov
inc
arpl
stos
int3
popl
popa
xor
jbe
shlb
push
adcb
fisubrl
jbe
imul
jl
push
sub
mov
ret
test
mov
fwait
lock
dec
rcll
fildl
out
fs
mov
mov
xchg
arpl
leave
mov
mov
inc
fsubs
mov
movsl
mov
adc
cwtl
xor
call
jp
sahf
aaa
fidivs
mov
test
fistpl
ficomps
sub
ror
pop
pop
popa
mov
adc
je
divb
iret
and
cmpsb
mov
xchg
movsl
out
fs
mov
insl
push
jl
pop
stc
incb
popa
inc
cld
daa
add
jo
test
pop
arpl
sub
jle
gs
sahf
inc
test
push
out
stos
rorl
ja
sub
outsl
and
mov
cmpsl
push
xorl
mov
popf
movsl
in
pop
ficoml
push
into
xor
pusha
jbe
setl
inc
shll
lock
incb
sbb
jbe
jle
adc
or
test
loop
jb
sub
leave
rclb
fidivrl
in
jmp
cwtl
in
mov
pop
popf
mov
xor
lret
mov
imul
testb
adc
rol
mov
jmp
mov
js
mov
pop
test
cmpsb
cmp
sub
push
cmp
add
cmpsb
jb
mov
out
popf
sbb
ficompl
add
sbb
clc
out
mov
sti
stc
add
sbb
pop
push
jne
mov
add
xchg
push
stos
jecxz
ljmp
lahf
jecxz
stos
jne
lret
rorl
in
adcl
daa
cmp
inc
pop
pop
push
dec
mov
loopne
pop
shr
sub
jp
and
shll
ja
dec
and
or
cmc
push
mov
sbbl
sub
ret
jge
loope
fimull
adc
dec
fwait
push
aas
cmp
bound
out
rol
jae
adc
loop
addb
pop
lds
xchg
fs
or
ret
dec
cmpsl
scas
mov
add
inc
ret
pop
jge
sbb
push
test
inc
sbb
add
mov
lret
call
push
imul
jge
rol
pushl
inc
fstpl
push
adc
pop
loopne
cmc
popa
enter
pusha
int
or
adc
adc
shll
add
jl
leave
mov
int
rorl
stos
inc
xchg
shrl
push
test
or
loopne
inc
dec
adc
xchg
clc
fisubl
dec
std
xchg
rcr
mov
iret
sbb
mov
repnz
jo
fdivs
push
fstl
ret
ret
les
jmp
mov
dec
jbe
xchg
or
sbb
mov
jbe
sbb
in
pop
in
sbb
jl
mov
scas
jnp
outsl
fcoms
outsb
cmp
xor
lods
mov
xor
scas
inc
ljmp
or
out
lret
pop
addb
dec
pusha
arpl
ds
sbb
cmp
inc
loope
or
adc
jg
loop
test
fildll
in
inc
ljmp
sbb
sub
pop
xchg
xchg
cli
add
mov
cmp
sbb
mov
jno
mov
add
aaa
shll
mov
pop
lret
mov
cmpsl
ftst
sarb
ret
add
jb
jle
cmp
jmp
dec
mov
pushf
mov
sarl
iret
stos
fisubrs
enter
add
ss
fidivl
add
rolb
push
jg
in
mov
sbb
pop
sub
xchg
sbb
jns
or
mov
add
dec
sbb
mov
jne
xor
adc
pop
mov
bound
xchg
lret
sbb
aam
mov
in
push
aas
in
loopne
inc
lods
cmp
adc
jns
lret
push
cmp
and
pop
outsl
dec
xor
xlat
mov
xorl
xchg
lods
cmp
test
lahf
sbbl
leave
cmc
or
jp
jg
inc
push
push
or
pop
push
cmove
push
xchg
pop
cmp
mov
out
fs
pop
loopne
adc
adc
mov
jge
jne
aas
jg
cmpb
jp
daa
lds
pop
push
xor
sti
xchg
sub
add
xchg
fwait
call
pop
inc
int3
insb
sub
hlt
dec
or
adc
inc
mov
push
das
jno
movl
je
push
sbb
sub
jl
inc
mov
popf
int3
xor
pop
mov
or
pcmpgtb
pop
push
inc
xchg
or
xchg
pop
daa
dec
faddl
loop
test
insl
rolb
js
in
test
cmp
ljmp
jmp
push
jne
xchg
icebp
pop
dec
loop
call
mov
jl
add
pop
daa
fcomps
sub
mov
ret
jg
or
push
and
lret
or
iret
or
cmp
jg
push
mov
mov
mov
hlt
test
cwtl
pop
pop
leave
mov
inc
pop
xlat
mov
aam
adc
jmp
sub
data16
mov
dec
push
inc
cmp
sbb
mov
pop
mov
arpl
int
or
je
sbb
jg
mov
and
pop
mov
xchg
push
jnp
sbb
scas
mov
call
cmp
push
ret
clc
push
jb
rcl
sub
fwait
pop
and
mov
jno
add
sub
add
rcrl
pop
and
mov
test
cmp
in
icebp
lods
mov
test
adc
fs
jge
clc
mov
xor
daa
push
outsb
inc
insb
jg
ret
insb
adc
dec
mov
addr16
xor
pop
fisttpl
sahf
add
sub
adc
pop
pop
jge
test
lea
cmc
pop
jno
out
addl
xchg
lds
xchg
data16
jecxz
jno
mov
fsubl
outsb
jg
stc
mov
dec
add
in
std
das
pop
mov
icebp
mov
inc
out
xor
test
mov
movsb
jle
rclb
mov
fldt
xor
mov
add
cli
mov
mov
push
js
call
scas
int3
std
je
cmp
or
fidivrs
push
idivb
push
out
aad
dec
push
xchg
push
jb
sub
clc
js
sbb
mov
xchg
lds
mov
inc
addr16
sub
adc
je
sub
in
or
aaa
test
pop
rorb
lcall
enter
into
inc
inc
push
jmp
xchg
mov
loope
push
into
cli
dec
imul
xorb
sbb
lea
inc
cli
inc
adc
std
fsubs
aas
cmp
mov
add
mov
or
and
mov
cmp
mov
jns
lea
outsb
arpl
es
loope
mov
rorl
pop
clc
add
xchg
loop
sbb
rcll
dec
in
bound
stc
mov
cmp
bound
in
push
jmp
and
loop
mov
sub
shl
ret
jns
cmpsl
les
insl
mov
popf
sub
lahf
jno
xchg
fwait
loopne
add
cmc
mov
fstp
sti
or
mov
push
push
mov
add
and
cs
roll
jmp
iret
daa
ljmp
push
inc
mov
cmp
mov
into
cmp
dec
push
fadds
mov
jp
xchg
out
pop
mov
testb
or
dec
loope
push
lock
outsb
pop
lea
ja
mov
inc
fdivl
push
mov
push
mov
jno
call
or
aam
xlat
push
or
stos
mov
mov
mov
je
sbb
pop
rcrl
add
cwtl
loopne
cmp
es
data16
dec
je
xor
shrb
js
mov
cmpsb
inc
pop
xor
test
sbb
adc
outsl
imul
mov
es
sbb
mov
pop
add
and
mov
sahf
jb
and
dec
rolb
test
subl
mov
aad
outsb
pop
ret
jne
mov
push
addr16
gs
mov
mov
xorl
push
rcll
pop
into
mov
dec
inc
in
ss
push
fs
jl
mov
mov
ds
adc
dec
push
xor
sbb
cli
cmpsl
push
fildll
psrlw
push
call
xchg
sbb
dec
cld
jo
cmp
into
enter
aas
mov
sbb
adc
add
mov
jecxz
repnz
cmpsl
and
pop
pop
es
mov
mov
arpl
sub
hlt
or
ljmp
push
sbb
sbb
push
jb
iret
xor
cmpb
push
pop
jno
ficoml
mov
inc
outsl
cmp
mov
jmp
lock
mov
push
and
pop
push
pop
insb
mov
jle
fs
pushf
out
clc
sbb
test
sub
lods
fwait
dec
dec
movsb
push
inc
jae
jno
insl
fadd
sbb
cmc
mov
rcrb
push
repz
push
scas
lret
rcrb
jbe
mov
ret
sub
lcall
or
int
test
mov
in
cld
jecxz
xchg
cmpsb
es
ss
test
inc
jo
scas
les
ds
push
fst
cwtl
jge
or
push
pop
add
cltd
dec
xor
popa
insb
mov
aad
cmp
adc
mov
xor
xor
js
adc
clc
pushf
movsb
in
xor
sbb
cmc
repnz
subb
ljmp
mov
in
push
jl
sahf
jnp
mov
ds
mov
lods
and
sub
or
jbe
outsl
jbe
mov
sbbb
pop
xchg
cmc
mov
adc
les
dec
leave
add
aaa
adc
stos
jmp
pop
scas
or
adc
sub
inc
inc
xchg
cwtl
adc
jg
scas
pop
fwait
scas
cmpsl
call
adc
cmpsl
aas
jbe
ja
xchg
or
dec
andl
test
sti
rcl
xchg
out
and
inc
sub
pop
popf
test
js
lds
inc
scas
xor
fdiv
add
aam
in
or
jo
arpl
pop
repnz
pop
or
leave
inc
and
movsl
inc
adc
or
cs
sub
xchg
rolb
outsl
scas
imul
adcl
cld
call
hlt
lock
loope
sbb
pop
cmp
adcl
fnsave
mov
jge
jno
mov
push
movsl
int3
pop
dec
fidivl
call
mov
lret
mov
shrb
cmp
lock
jns
imul
lahf
popa
and
push
lods
xchg
xchg
fwait
push
add
mov
lock
push
push
mov
mov
xchg
lds
xchg
enter
pop
and
rsqrtps
mov
insb
sbb
div
sbb
aas
pop
cmp
enter
das
xchg
mov
lds
rclb
push
xchg
push
pop
fisttpll
or
loope
aam
or
pop
mov
mov
rclb
shlb
enter
jns
xchg
push
or
fwait
ds
pusha
add
int3
insb
cmp
notl
shlb
add
rcrb
test
xchg
jb
rcl
sbb
jne
sbb
mov
push
push
mov
or
xlat
xchg
push
sbb
xor
jno
je
shl
loopne
movsl
add
icebp
mov
ja
mov
or
lds
std
mov
dec
lcall
xor
leave
cmp
dec
mov
loopne
js
call
mov
or
xchg
shll
mov
or
or
inc
lahf
and
mov
pop
mov
inc
sub
dec
mov
lock
lods
or
mov
push
adc
xchg
loopne
xchg
addr16
push
es
popa
pop
add
dec
loope
pop
ja
mov
push
inc
mov
pop
into
xchg
fistpl
clc
int
pop
inc
in
or
fdivrs
cwtl
xchg
push
adc
arpl
mov
jae
subl
outsb
inc
pop
mov
add
imul
cli
push
enter
test
movsb
arpl
mov
or
fwait
sub
mov
pop
js
jp
or
or
pusha
rorl
loopne
popa
dec
xchg
xchg
add
mov
insb
repz
and
mov
ljmp
addr16
xor
jle
fstpt
leave
push
mov
jg
add
in
scas
fcmovb
inc
pop
flds
pop
cltd
popa
gs
in
movsb
shll
mov
out
adc
ret
pop
xchg
mov
arpl
rorb
jo
psubsb
pop
shrb
inc
sarl
cltd
pop
pusha
ret
adcl
mov
push
sub
adc
jg
aad
or
lahf
and
add
imul
and
pop
fdivr
insl
push
insb
xchg
sub
ret
lret
lfs
xor
insl
mov
cld
xor
sbb
mov
xchg
pop
popf
mov
pop
jecxz
jmp
and
imul
cmp
xlat
xor
pop
mov
lahf
test
aad
test
cli
enter
ret
push
loopne
or
inc
xor
pushf
lcall
xchg
dec
fs
pop
jbe
movsb
sbb
iret
incl
lahf
xor
dec
push
dec
sub
add
xchg
dec
mov
jmp
dec
jbe
inc
test
xchg
scas
cli
and
push
aad
daa
fsubr
sti
call
inc
loope
fs
adc
rorl
pop
ds
jle
cld
mov
popa
in
jecxz
xor
gs
aas
pop
sbb
mov
sti
and
test
ss
adc
adcb
adc
sbb
lods
filds
lods
es
mov
or
lock
sub
and
rcll
fadds
movsb
sahf
fsubrs
jecxz
inc
sti
mov
mov
shll
icebp
jno
insl
test
sar
leave
repz
into
std
cmp
std
or
fisubs
and
push
lods
repnz
mov
inc
pop
push
lret
nop
mov
and
sub
stc
mov
pop
and
sti
scas
adc
mov
pop
lea
mov
outsl
push
popf
es
xchg
dec
cs
in
ljmp
mov
sbb
cmp
mov
push
enter
adc
rol
cmpsb
adc
cs
pop
test
cmp
fwait
movsl
sub
cmc
or
or
out
sbb
ret
sub
add
xchg
jg
mov
roll
repz
sbb
stos
sub
mov
jno
insb
or
dec
push
test
push
sbb
testl
test
xchg
cmpsb
pop
mov
sbb
out
xchg
icebp
jmp
or
pop
mov
loope
mov
pop
xchg
add
xlat
xchg
loop
dec
mov
fdivp
jle
roll
imul
cld
test
loop
jmp
jnp
add
fs
cmp
lahf
out
mov
mov
or
inc
cmp
aas
fwait
and
mov
sub
add
daa
jge
data16
lods
in
pop
mov
fidivrs
xor
or
sbb
sub
hlt
and
mov
adc
repnz
jb
test
out
hlt
mov
inc
rcll
mov
out
jo
add
mov
sub
inc
pop
shll
aam
mov
push
mov
mov
fisttpll
icebp
or
xor
insl
sbb
jl
xor
mov
inc
xor
cmc
mov
mov
inc
mov
dec
adc
pop
sahf
add
pop
adcl
dec
xor
lea
ret
pop
aaa
aaa
orb
adc
int3
aam
sbb
mov
mov
fwait
cmp
ret
das
fwait
adc
lock
int
aaa
sub
jno
mov
rorl
adc
into
mov
add
jne
scas
inc
andps
sbb
sti
xlat
jp
and
inc
les
cmc
sti
clc
mov
sbb
mov
rcr
inc
inc
or
or
lcall
arpl
inc
popa
pop
sbb
or
iret
push
pop
jp
pop
fdiv
cmpsl
ljmp
lods
mov
sbb
dec
cmp
sti
mov
adc
dec
out
and
fildl
cltd
ret
pop
scas
sti
adc
sub
js
mov
sub
inc
ja
push
adcb
sub
hlt
jbe
jl
xchg
xor
scas
xchg
sub
xchg
push
test
dec
mov
js
mov
adc
lea
faddl
ds
xor
pop
pop
mov
arpl
ret
mov
push
std
mov
hlt
sub
in
mov
pop
xlat
inc
jne
mov
es
inc
loop
mov
enter
jg
or
xchg
pusha
mov
xchg
cmp
push
test
dec
jb
dec
bound
in
mov
ljmp
imul
push
les
loop
fisubl
rcll
test
cmp
je
scas
call
addb
jbe
or
sbb
inc
inc
xlat
mov
cltd
imul
mov
rcrl
loopne,pn
mov
rorb
inc
fidivrs
loope
shr
imul
mov
jg
ret
dec
or
pop
inc
hlt
adc
shlb
cmp
jb
xchg
fs
xor
out
mov
hlt
arpl
pavgw
lds
out
pop
and
div
or
sbb
sub
xchg
jmp
sbb
mov
push
push
sbb
sub
insb
aam
push
mov
loopne
and
dec
pop
push
mov
test
mov
loope
pop
pop
imul
pop
dec
mov
jns
lods
push
adc
shrl
cmc
shlb
mov
daa
shll
hlt
mov
and
pop
les
jecxz
je
mov
xor
sub
add
push
popa
ljmp
shll
xor
xor
and
jno
mov
xchg
sbb
or
or
pusha
mov
or
clc
push
lods
jns
clc
add
imull
cwtl
sub
imul
push
decl
in
sahf
call
or
pop
iret
ficoms
sub
or
dec
movsb
decb
outsb
fcomp
sarb
rolb
lds
jl
cmpsb
loopne
leave
add
call
xor
jl
push
sbb
aam
lea
mov
xor
xor
outsb
jecxz
jg
ja
jg
pushf
sub
lret
mov
xchg
mov
xchg
add
jno
mov
lods
sbb
pop
into
or
xchg
push
or
pop
sbb
push
je
or
mov
mov
es
lods
arpl
cmp
stos
adc
and
jle
shlb
push
cmp
mov
inc
push
inc
pushf
ret
addl
dec
pop
cmp
das
add
shl
in
pop
mov
mov
mov
repnz
push
clc
lret
aam
sti
pop
xor
xchg
pop
bound
cmp
pop
fwait
ds
bound
fdivrl
rorl
ljmp
into
aad
mov
ljmp
rcll
test
xchg
xor
loope
or
mov
lea
mov
pop
mov
jge
jae
test
jb
add
dec
mov
pop
or
rol
jl
testb
pusha
dec
or
sti
arpl
mov
push
and
dec
fnstenv
add
cs
nop
sbb
mov
mov
sub
gs
not
cmc
pop
test
adc
add
loop
shlb
xchg
clc
ret
lcall
fidivrl
fstl
idivb
test
mov
xchg
out
jge
ljmp
xchg
pusha
fdivrl
mov
pop
mov
and
in
test
jmp
ljmp
add
jg
mov
fnsave
daa
gs
shlb
jb
and
repnz
loope
push
inc
es
add
push
sub
push
aas
sbb
xchg
inc
jae
add
and
js
sarb
jae
enter
and
mov
or
pop
jno
add
inc
fmuls
nop
push
mov
repnz
fldl
aam
dec
or
add
ja
iret
sti
jno
jp
and
lea
cmp
or
aam
sahf
pop
inc
lret
jns
jno
cmp
outsb
mov
loop
push
stos
shll
subl
push
jp
out
xchg
outsl
or
inc
jae
shr
push
cld
xchg
xchg
or
shrb
outsb
mov
insb
cmp
dec
test
cmp
push
outsb
sbb
xchg
lret
push
test
or
cmc
xchg
mov
jbe
in
fsts
push
mov
push
cmpsb
das
loop
ja
roll
movb
into
sub
sub
std
push
xor
add
fidivs
xchg
ret
fdivs
pop
push
inc
lret
or
mov
cli
and
inc
je
pop
mov
imul
add
jg
jmp
test
inc
or
mov
pop
inc
jae
lahf
cwtl
cwtl
mov
shlb
jns
inc
and
jmp
adc
sub
push
enter
push
rolb
lds
lret
sbb
ds
inc
in
add
notb
iret
xor
clc
add
mov
xchg
sbb
dec
inc
pop
das
insl
and
push
mov
cmpsb
shl
push
aad
addr16
xorb
fiadds
push
divl
scas
dec
cmp
add
bnd
inc
mov
test
std
js
push
in
movsl
shlb
cmpsl
push
mov
mov
add
cld
pop
cld
sub
rcrb
faddl
xor
imul
inc
imul
sahf
clc
hlt
dec
cmp
xchg
pop
arpl
subl
out
imull
push
js
dec
dec
fcomip
lods
inc
lds
add
pop
or
inc
fs
push
adcb
faddp
arpl
push
sub
sbb
mov
mov
jmp
mov
mov
cmp
mov
mov
sub
cmpsl
dec
aam
add
jp
jle
data16
in
out
and
inc
sub
int3
orb
sub
sub
mov
and
lcall
icebp
das
push
jnp
and
adc
fwait
test
mov
push
lcall
mov
jbe
jge
mov
rclb
cmp
pop
fwait
inc
push
call
dec
test
test
dec
push
jae
inc
cmp
mov
adcb
sub
push
fsubrl
ror
xor
add
push
dec
lds
stos
icebp
fwait
cmpl
test
cmp
mov
push
adc
bound
enter
push
dec
popl
scas
repz
jge
jecxz
mov
hlt
cli
mov
push
cmc
or
inc
and
sub
arpl
arpl
push
jecxz
icebp
xchg
jo
popf
out
ljmp
icebp
cmc
xor
add
push
sbb
mov
rorl
mov
dec
pop
jp
sbb
hlt
jp
mov
mov
arpl
ja
ret
rclb
insl
je
test
hlt
push
cmc
jl
scas
sti
adc
movsl
ret
stos
sti
jge
addr16
mov
dec
pop
push
mov
pop
jo
orb
xchg
cmp
xlat
hlt
movsl
call
mov
sub
call
push
mov
and
mov
mov
iret
lods
inc
jne
iret
das
add
orl
es
js
cwtl
clc
shlb
popa
fsubs
inc
xchg
outsb
cmpsb
aas
pop
scas
mov
mov
cld
mov
xor
adc
mov
lods
aad
addr16
loope
cmc
push
outsl
push
mov
sbb
rorb
nop
cmp
xor
jno
arpl
ret
mov
gs
arpl
sbb
jae
cli
inc
jmp
dec
cmp
popf
mov
js
arpl
or
fwait
cs
daa
mov
outsl
sarb
inc
movsb
add
mov
xchg
sub
mov
mov
icebp
loopne
mov
outsl
ss
adc
pop
in
add
mov
mov
dec
pop
dec
and
test
loopne
mov
stos
mov
hlt
dec
out
add
inc
push
and
pop
icebp
fcoms
jg
mov
das
xor
fdivs
cmpsb
scas
push
jnp
adc
xchg
ja
sub
lds
mov
jb
and
ja
sub
test
xchg
mov
std
das
push
movsl
sbb
push
xlat
sub
imul
jge
cld
sub
cmpsl
sbb
xchg
inc
imul
sbb
pushf
out
push
rol
outsl
movsl
mov
cwtl
cmp
aas
aad
xor
inc
call
mov
cmpsb
jg
adc
adc
mov
push
push
jo
aam
sbb
les
push
test
insl
xchg
jle
fildll
sub
push
xchg
fcoms
fisubl
push
scas
jp
sbb
rolb
push
cmp
mov
shl
ljmp
push
and
adc
int3
outsb
shlb
or
in
mov
mov
sbb
mov
mov
lock
fcomps
ds
test
or
xlat
cmp
testl
test
push
mov
test
cmp
cld
fdivs
xchg
mov
xchg
out
sub
ss
dec
jne
dec
xchg
adc
leave
aaa
cmc
pop
ficompl
out
movsl
jbe
and
rcrl
fidivrl
fwait
dec
or
push
ja
lea
or
mov
hlt
hlt
push
adc
xchg
ds
sbb
mov
xlat
add
pminsw
mov
jnp
push
mov
hlt
addr16
vmread
rclb
mov
sahf
enter
cmc
das
and
out
mov
test
cs
xor
out
insl
jbe
inc
sbb
jno
daa
loopne
and
popf
mov
jae
and
call
fildl
cmp
fbld
pusha
es
fsubrl
xchg
orb
inc
ret
pop
push
outsb
pop
data16
xor
popf
jno
xchg
push
in
cmp
inc
outsl
arpl
out
ja
add
adc
mov
adc
test
outsb
jnp
mov
mov
enter
out
pop
mov
mov
push
icebp
fs
pop
popf
popw
shlb
mov
fmull
in
push
cli
rcr
sbb
adc
sub
pop
sub
dec
mov
lea
into
les
rorl
mov
loopne
xlat
iret
rcll
sub
jmp
das
insb
sbb
js
dec
pusha
out
jl
push
aad
or
outsl
lahf
xchg
test
jne
in
sti
or
orb
in
and
sarb
or
or
stos
xchg
fadds
sub
jne
call
stos
inc
xchg
das
xchg
out
test
pop
out
mov
dec
in
fldt
iret
flds
sbb
fwait
push
jbe
add
pop
xor
addr16
cmp
mov
adc
dec
pop
inc
dec
arpl
cmp
cli
sbb
jns
dec
push
aad
xchg
stos
inc
pusha
mov
fwait
adc
add
dec
test
ficoml
and
fmuls
rcrb
dec
add
cmpsl
sbb
add
pop
mov
jg
lret
shr
lcall
out
popf
cmc
xchg
jecxz
jbe
and
fadds
add
pop
sbb
outsl
inc
push
jmp
in
fcmovu
and
sti
hlt
pop
clc
jecxz
addr16
mov
aad
sub
push
cmp
test
pusha
and
adc
rol
iret
jnp
jne
shrl
test
jnp
cmp
je
mov
mov
idivl
sbb
aam
rcrb
pop
leave
adc
mov
arpl
pop
mov
push
aam
outsb
das
sub
jne
outsb
jmp
fisubrs
cmp
sbb
es
jle
pop
jl
mov
and
in
ss
fdivrp
ljmp
adc
adc
ret
push
sti
push
rolb
mov
test
adc
pop
loopne
pop
mov
mov
cmp
sahf
push
jle
dec
dec
movsl
jmp
push
js
std
sub
and
sub
pushl
movsb
fs
jl
shr
xor
jle
sbb
dec
add
mov
out
and
sbb
inc
adc
popa
mov
cli
cmpsl
mov
mov
out
xchg
fistpl
fwait
clc
inc
repnz
mov
xchg
sbb
imul
leave
mov
pop
jo
lock
pop
sti
jle
sbb
sysexit
arpl
sbbb
mov
shl
pop
movsl
pop
sarl
inc
xchg
push
into
pop
push
inc
pop
mov
in
loop
inc
jnp
sub
jo
lahf
inc
test
sbb
cmp
rolb
fsubs
add
mov
jne
dec
insl
jle
mov
pop
adc
out
dec
popf
mov
mov
xchg
enter
inc
shr
data16
push
imul
xorl
mov
dec
mov
inc
jnp
mov
pop
push
add
shlb
mov
inc
mov
sbb
sub
lods
inc
jb
pop
mov
iret
into
loopne
xorl
mov
xchg
or
insl
test
faddl
aas
rcrl
outsl
and
sbb
xchg
dec
into
mov
dec
and
push
jno
mov
js
jmp
arpl
mov
pop
jne
sbb
ffree
pusha
cmp
jno
xchg
mov
add
outsb
add
icebp
in
cmp
inc
cmp
xchg
jns
roll
sub
test
popf
jp
pop
jge
jae
mov
xchg
inc
in
int3
outsb
cmp
pusha
xlat
enter
dec
movl
pop
xchg
cmpsb
inc
pop
shl
insb
inc
idivb
xor
pop
mov
pusha
adc
or
imul
mov
push
fs
out
sbb
push
add
std
sub
push
fimuls
push
daa
mov
jecxz
leave
dec
mov
pop
ficoml
je
ret
jae
fistl
pop
ret
pop
mov
adc
cmp
cmc
cmpsl
push
data16
loop
push
lods
icebp
lods
int
inc
adc
sub
rcll
outsb
and
inc
stos
mov
cwtl
push
mov
call
das
push
xchg
mov
pop
adc
aam
cmc
or
sbbl
sahf
add
shrl
add
sbb
sbb
test
aaa
jbe
js
pop
jp
cli
jo
add
imul
xchg
and
xor
cmc
lahf
and
dec
ja
divl
inc
adc
mov
in
and
into
pop
inc
fnstsw
sub
das
std
sub
adc
mov
sarl
hlt
jmp
jae
jp
lea
data16
fnop
out
cmpsl
xchg
push
pop
pop
xlat
loop
or
cmp
xor
fwait
ja
nop
jmp
xor
jno
cmpsb
sbb
iret
aaa
ss
xchg
call
and
jp
xchg
sti
or
xor
lahf
mov
rcl
mov
in
lahf
daa
mov
or
fcmovnbe
jo
or
lcall
push
xchg
arpl
inc
ret
push
mov
out
loopne
ret
pop
jo
mov
clc
xchg
xor
push
xchg
enter
lock
outsb
hlt
lret
pop
aam
imul
mov
sub
mov
ret
fsubs
pop
out
mov
mov
sbb
or
ljmp
xorl
sbb
mov
ss
pusha
sbb
push
das
test
jl
das
dec
mov
mov
inc
call
jge
xchg
mov
dec
mov
in
ret
rolb
sbb
sar
sub
jp
jnp
add
ror
subl
stos
dec
sbb
jg
idivl
xchg
mov
add
pop
cli
inc
ret
mov
shlb
lret
jno
mov
push
xchg
dec
mov
cs
inc
add
dec
inc
mov
sbbb
sahf
jle
sub
fidivs
lea
add
or
add
dec
insl
jl
scas
call
pop
xchg
push
roll
out
push
jns
and
fildl
push
inc
push
pushf
xchg
mov
jecxz
pop
and
push
xor
pop
and
cmpsl
sbb
xor
jns
fldt
clc
and
lods
adc
push
in
aas
aad
icebp
mull
and
mov
push
pop
js
add
add
loope
mov
push
in
popf
ret
mov
jae
fstpl
lds
lds
push
insl
inc
loope
jl
pop
xchg
mov
pushf
stc
add
lret
mov
insl
add
sbb
insb
xor
sbb
jb
mov
inc
jo
fistpl
mov
xchg
ja
fistpll
cmpsl
and
xor
push
cmpsl
sub
lods
xchg
mov
lcall
icebp
xor
add
inc
push
push
dec
push
out
and
pop
or
cmp
adc
sahf
das
sub
lcall
ffree
mov
es
fstl
mov
pop
push
pop
sti
adc
out
popa
xchg
xor
test
rorb
fucomi
dec
jp
xor
cmpsl
jne
test
xchg
loopne
sbb
shl
iret
and
out
fdivr
inc
jp
cmp
scas
jo
push
ja
das
pop
faddl
pop
adcb
int
fcmovbe
out
fiaddl
gs
adc
das
call
xorb
xchg
cmp
decl
mov
jg
pop
pop
and
and
inc
ds
or
mov
test
loope
scas
enter
aad
cs
inc
push
adcb
push
into
aas
push
push
adc
mov
lock
loopne
lods
les
sbb
jnp
jp
sub
mov
cmpsl
cld
push
in
lods
xchg
ljmp
data16
adc
shrl
xchg
mov
fsub
fcompl
inc
daa
cmp
es
fistpl
cmc
fildl
pushf
popa
lcall
popa
sti
adc
jle
sbb
icebp
pop
shlb
add
push
test
outsb
pop
mov
and
cmp
in
jbe
ret
adc
fcmove
loope
pop
loopne
mov
push
imul
faddl
add
add
sub
and
mov
mov
and
test
sub
lahf
scas
dec
test
jmp
shr
outsl
addr16
pop
das
sarl
rolb
int
daa
push
sub
jl
outsb
pop
ret
jns
adc
nop
pop
mov
shlb
cmp
add
mov
test
push
ret
push
mov
inc
fldenv
mov
mov
out
push
jno
popa
sarl
pop
mov
mov
pop
cs
fsubr
aaa
fdivp
ret
stos
ljmp
or
stos
dec
jo
pop
dec
aas
xlat
in
mov
mov
aad
adc
cmp
lret
loop
mov
jns
inc
adc
lods
in
dec
jg
sbb
xorb
and
or
shl
push
aaa
test
xor
xor
pop
adc
dec
adc
xchg
hlt
sbb
or
fdivrl
push
inc
adc
inc
pop
mov
mov
mov
cmp
fwait
mov
jae
jl
or
pop
jno
mov
rorl
insb
inc
adc
cmpl
fs
xchg
push
xorl
mov
and
xchg
loope
daa
js
jbe
xchg
loopne
das
adc
inc
and
cmp
fs
mov
fists
ret
punpckldq
in
mov
pusha
xchg
add
xorl
leave
cwtl
imul
inc
je
adcb
popf
pop
xchg
inc
inc
and
push
add
dec
mov
test
aaa
outsl
lds
inc
adc
and
int3
divl
imul
pusha
adc
neg
lahf
sarb
xchg
jmp
addl
xor
fdivr
xchg
cmc
and
js
mov
or
insb
pop
pop
xchg
imul
out
test
pop
adc
out
cmp
icebp
jmp
mov
xchg
ljmp
fs
sbb
arpl
ljmp
xor
les
xchg
cs
mov
mov
jecxz
decl
insl
lods
sbb
nop
dec
aaa
sahf
cs
leave
jmp
arpl
notb
push
sub
jp
test
and
mov
or
push
xchg
aaa
dec
cld
adc
test
jno
or
inc
shl
out
dec
pop
imul
xchg
fisttpl
pop
sub
lods
dec
vmulpd
adc
and
ffree
fwait
sti
mov
inc
push
jb
mov
push
jo
fisttpl
mov
cmp
ljmp
mov
dec
jae
mov
mov
jae
aaa
inc
repz
ror
push
out
les
ss
icebp
mov
rorl
fidivrs
jnp
inc
fistl
in
test
cmp
shrb
xlat
lahf
das
pusha
sahf
les
adc
in
aam
sbb
rol
pop
mov
fldenv
jns
pop
add
xor
push
sbb
jp
test
pushf
jno
add
in
mov
out
hlt
jnp
push
mov
sbb
adc
mov
jns
movb
xor
jmp
sub
insl
push
faddl
lahf
cmp
or
sbb
dec
push
xor
jle
mov
sbb
xor
imulb
add
rcll
mov
das
sbb
jp
and
lock
jae
mov
sbb
sub
xchg
pop
sbb
mov
cs
scas
push
pop
inc
jno
xchg
mov
lcall
adc
sti
cmp
sbb
inc
test
xchg
sbb
cli
movsl
or
popa
les
mov
jge
rcrb
lcall
pop
daa
mov
sbb
or
es
jg
mov
inc
jg
roll
add
add
jle
sbb
push
shll
sbb
pop
jo
xor
idiv
jecxz
outsl
jmp
ss
icebp
push
pop
mov
or
sub
daa
jbe
add
inc
bound
sbb
clc
pop
push
inc
icebp
add
leave
cmpsb
lock
clc
lock
andb
push
dec
aam
push
xchg
or
sub
jbe
mov
lods
push
rclb
pop
shlb
sub
or
cmpsb
pop
daa
inc
scas
sbb
jo
xor
mov
adc
push
inc
adc
inc
popa
mov
cmp
mov
and
sbb
cli
sub
in
inc
dec
fisubl
sbb
clc
repnz
pop
add
cmpsl
cmp
inc
ret
iret
xor
sbb
and
sarb
inc
ds
dec
dec
cmp
nop
outsl
bound
pop
adc
jle
push
sbb
xor
fwait
rcll
ret
test
shrl
adc
test
mov
jo
pop
movsl
mov
pop
inc
inc
shl
push
and
push
std
sub
fidivrs
pop
imul
fcmovu
dec
lock
adc
cmp
cmpsl
push
dec
jl
jecxz
in
call
or
xchg
and
stos
std
fistl
sub
test
ror
stos
sub
pop
ficompl
outsl
jl
divl
test
std
mov
lahf
notb
fbld
dec
add
pop
xor
test
fwait
mov
push
mov
pop
icebp
mov
loopne
pop
mov
adc
xor
jmp
stos
jg
mov
sbb
jae
push
aam
lahf
cld
cwtl
pushf
push
push
ljmp
rcl
in
imul
lcall
xor
mov
mov
popf
lds
push
push
jg
adc
cmp
xchg
pop
cmp
pop
aad
stc
or
ja
mov
test
and
lahf
or
outsl
popf
nop
out
jnp
fisubrl
push
subb
jno
dec
sub
mov
cmp
xlat
cli
mov
or
or
push
push
out
mov
push
xor
mov
push
jmp
cwtl
mov
xchg
sub
xor
xchg
out
inc
cmp
fwait
pop
rcrl
sbb
jecxz
xor
push
push
jge
inc
sarl
test
lods
xchg
jns
xchg
jmp
pusha
push
shrl
leave
inc
sti
ja
jl
jo
sbb
cwtl
dec
mov
xorl
sub
add
pop
mov
ret
cmpsb
subb
xchg
adc
dec
xchg
add
jle
int
mov
fiadds
sbb
aas
mov
dec
outsl
pushf
add
das
jnp
popl
push
or
mov
fdivrp
cmpsb
call
imul
cmp
pop
and
push
push
aas
or
sbb
xor
negb
nopl
cmpsb
loopne
popf
add
out
mov
push
sbb
sarl
test
sbb
ret
jle
arpl
hlt
mov
lea
lahf
cli
lea
push
lcall
and
lock
sub
lea
cld
test
push
pop
dec
outsl
mov
fildll
aad
ret
adc
dec
xchg
loop
or
scas
inc
mov
or
mov
sahf
int
inc
cmp
and
mov
push
xchg
sti
loopne
test
inc
xchg
add
or
sbb
mov
add
pop
cwtl
test
xchg
mov
mov
shr
daa
jb
sbb
push
sub
mov
mov
test
cmp
push
sbb
add
xor
icebp
push
orl
bound
pop
cld
jbe
repnz
pusha
mov
cli
movb
cld
pusha
ljmp
or
hlt
push
aam
sub
mov
dec
pusha
shrl
add
jo
jecxz
scas
out
sti
jo
xor
movsb
mov
dec
xor
sbb
cld
lcall
jle
es
cmp
dec
add
popf
in
test
lret
xchg
stos
dec
mov
movsb
mov
add
or
jecxz
loop
mov
adc
test
mov
mov
cmp
unpcklps
cmp
inc
xor
adc
jo
add
add
out
sbb
lret
cmpsb
daa
roll
fiadds
orl
pop
mov
jmp
jl,pn
push
ret
push
mov
bound
cli
or
je
jg
and
es
faddl
fdivrs
mov
cwtl
inc
pop
repnz
jle
dec
xchg
outsb
inc
pop
inc
test
je
les
jl
loopne
pusha
mov
mov
mov
dec
outsl
mov
push
mov
mov
dec
into
mov
sub
in
setle
or
sarl
push
sub
aas
rolb
dec
insb
add
adcl
lods
aaa
out
mov
aaa
pop
pop
cltd
push
or
ss
outsl
mov
nop
add
sarl
daa
addr16
xchg
repnz
cld
mov
cwtl
mov
push
mov
sbb
inc
add
jne
iret
inc
ljmp
lds
or
jmp
xchg
xchg
xor
jle
daa
pop
sub
push
loope
xchg
in
testb
icebp
xchg
ds
adc
jno
xchg
and
xor
int
inc
jne
xor
pop
mulb
jp
adc
mov
test
mov
cltd
imul
cs
clc
aas
cmc
sub
adc
mov
test
add
push
lret
jnp
shrb
pop
adc
popa
adc
popf
push
mov
mov
jo
test
jae
xlat
jno
fstp
push
fidivrl
data16
sbb
xchg
mov
addl
adc
mov
or
fisttps
lret
push
jmp
sbb
mov
loope
xor
jmp
nop
mov
arpl
and
test
jo
dec
stos
adc
pop
shrb
inc
sub
jb
es
sbb
arpl
loop
push
mov
dec
call
and
rcr
jne
add
js
insl
mov
and
clc
dec
sbb
or
sub
mov
ljmp
sub
sub
adc
loop
mulb
cmpsl
inc
popf
pop
adc
stos
fistps
mov
fsubs
sbb
pop
sub
dec
orb
das
jmp
movsb
test
sbb
arpl
inc
inc
lahf
mov
js
sub
cmpsl
lahf
cmpb
push
int
shl
sub
lock
ret
sub
push
aam
sarb
call
mov
xor
fs
xlat
mov
mov
adc
inc
sti
idivb
xchg
cmp
scas
movsl
mov
mov
outsl
jecxz
inc
cmpsl
test
xchg
pop
adc
movsb
in
mov
pop
xchg
mov
sahf
jo
or
jo
shll
xlat
cmp
lds
test
inc
ret
ret
cmp
pop
pop
pushl
fsub
out
nop
dec
xor
dec
push
mov
arpl
mov
or
add
pop
out
jns
cmpsb
push
xchg
cmc
inc
cmpsb
ss
push
add
leave
fs
mov
sbb
mov
xchg
xchg
mov
pop
pushf
add
shl
push
fs
imul
outsb
imul
or
cmp
xor
mov
movsl
bound
push
push
je
in
add
inc
orl
pop
outsl
xor
xchg
add
loope
xor
mov
add
inc
and
push
or
adc
pop
aad
out
push
sub
add
or
insb
jecxz
mov
jmp
filds
inc
imul
ljmp
call
xadd
cmpsb
add
ljmp
dec
test
enter
mov
movsl
cmpsl
leave
or
inc
mov
pop
jge
insb
or
filds
flds
push
std
ds
dec
pushl
add
leave
out
add
or
scas
int
call
xor
lret
sbb
adc
nop
pop
mov
jnp
adc
fs
mov
shlb
rcrb
adc
ljmp
xchg
pushf
mov
jge
repz
cmp
mov
icebp
out
adc
mov
popa
mov
out
outsl
popa
inc
push
sbb
push
in
outsb
cmpsl
cmc
and
inc
loope
cmp
jb
inc
mov
xchg
cmp
scas
inc
pop
fs
jae
shr
xchg
outsb
or
add
mov
pusha
push
sbb
push
push
mov
out
pop
ljmp
loop
pop
push
fsubl
stos
or
mov
cmp
cmp
cmp
cld
push
insl
das
std
lahf
sub
pop
dec
push
outsb
jno
jno
adc
fstpt
or
testb
lahf
xchg
xor
insl
push
data16
or
add
cltd
or
sbb
filds
pop
popf
shll
hlt
stos
dec
clc
lock
pop
push
push
hlt
sbb
jns
sbb
push
bound
jle
fisubs
ficomps
adc
mov
scas
sbb
es
xor
mov
shl
push
jnp
dec
jmp
dec
faddl
xchg
int3
mov
sbb
aad
xor
js
mov
and
adc
xor
sbbb
sub
mov
mov
lods
sub
inc
pusha
jecxz
bound
inc
and
pushf
std
inc
push
pushl
mov
lahf
aam
pushf
and
pop
push
adc
shrl
sub
sbb
adc
sbb
pop
inc
sub
add
mov
cltd
sti
mov
repnz
out
loopne
mov
cld
mov
inc
sbb
lods
in
outsl
sahf
movsl
leave
clc
mov
pop
xor
andl
sub
inc
les
idivb
stc
dec
insb
jmp
add
mov
cltd
cmpsb
mov
mov
xchg
cmp
xlat
xchg
xor
jb
push
movsb
lret
cltd
mov
mov
or
sarl
pop
mov
add
xor
sub
mov
inc
es
ss
sbb
aad
bound
fisttpl
cmc
and
sbb
sbb
pop
jl
mov
pusha
cmpl
rcr
scas
ljmp
jne
sub
rcll
dec
out
cmp
mov
inc
add
jecxz
jle
jg
pop
movsb
fmul
and
mov
xchg
ja
lods
cmp
push
aam
push
test
sbb
adc
pop
adc
repz
inc
divps
fiaddl
ja
daa
pop
fcomps
mov
inc
inc
add
sbb
push
inc
pushf
or
xchg
movsl
push
jne
sbb
jo
mov
fadds
xor
les
rorb
imul
mov
mov
mov
cvttps2pi
mov
sub
aas
mov
sub
scas
pop
xlat
roll
mov
jle
mov
lret
lahf
xor
ja
xchg
dec
inc
push
mov
call
das
adc
mov
popa
popa
fs
xor
sbb
mov
leave
add
mov
sbb
mov
mov
add
sbb
enter
movsl
fnstsw
in
jmp
inc
or
into
dec
pop
ds
mov
jmp
fdivrs
pop
les
insl
sti
test
sbb
cmp
aam
push
iret
add
and
mov
test
ficoml
add
mov
push
sbb
and
lock
insb
call
xchg
in
push
xchg
dec
or
or
clc
push
cmp
jmp
fiadds
cmpsl
or
inc
push
xor
ret
sub
pop
xchg
cli
mov
xchg
sub
pop
jle
aam
repnz
mov
sub
das
and
jbe
dec
je
pusha
cltd
hlt
and
aam
in
shlb
sarl
adc
scas
jbe
mov
cmp
out
jb
xor
jg
call
xor
es
lret
mov
add
imul
dec
inc
cli
outsl
enter
cmp
jo
jle
and
stc
mov
jo
push
push
pop
pop
mov
sbb
sub
mulb
aad
filds
add
and
add
subl
fldl
cmp
shll
mov
aaa
pop
iret
push
nop
fcomps
mov
jne
cmc
mov
leave
jns
adc
lods
adc
shll
stc
out
add
jno
add
nop
cmpsl
scas
jl
mov
or
xor
ret
aam
js
sarl
js
add
mov
lcall
ret
idivb
lahf
inc
aam
cmpsl
stos
mov
shlb
inc
add
mov
and
jle
xor
popf
subl
add
mov
out
mov
jle
mov
xor
roll
sbb
push
in
pop
sub
cmpsb
aas
mov
cwtl
push
push
xchg
add
inc
xchg
push
pop
call
add
scas
pop
je
faddl
pop
cltd
stos
imul
or
jp
sbb
adc
and
mov
pop
lea
xchg
test
lret
push
fbld
lret
add
push
out
rcl
lahf
adc
ret
ror
dec
outsl
rcrl
mov
xor
or
data16
outsb
sbbl
dec
cmp
mov
inc
imul
dec
push
dec
mov
mov
dec
inc
pop
sbb
gs
push
pop
sbb
inc
les
mov
out
out
cmp
js
lea
mov
repz
call
mov
xor
sub
lahf
and
shr
loop
je
mov
xchg
in
ljmp
jge
in
adc
push
push
xlat
scas
bound
fisttpl
adc
xchg
adc
jge
add
jg
push
push
rclb
jecxz
mov
xor
insl
xchg
outsb
pop
rolb
sti
add
jecxz
jmp
or
paddw
mov
dec
mov
test
or
fsin
and
addl
cwtl
icebp
mov
add
aas
movsb
iret
aas
xchg
scas
testl
jle
dec
mov
fmulp
icebp
roll
dec
rorl
dec
in
jecxz
loope
mov
call
popa
je
xchg
add
pop
inc
fdivs
mov
xor
pop
or
xchg
aad
icebp
sbb
sub
repnz
addl
mov
mov
dec
inc
mov
cwtl
jns
test
iret
pop
dec
das
js
scas
pop
push
rcrl
mov
push
into
sbb
jl
and
fcomps
cmc
jmp
in
sbb
jne
fisubrl
fsubs
mov
or
push
push
add
sarb
xchg
add
adc
clc
dec
mov
cmp
and
fdivl
cwtl
lahf
dec
sbb
push
jnp
push
pop
mov
scas
or
leave
xorl
sar
xorb
test
fbstp
orl
lods
mov
shll
sub
insl
xchg
mov
push
inc
iret
mov
adc
sbb
mov
notb
leave
adc
push
aas
sbb
sbb
add
mov
cld
movsb
xorl
shll
pushf
stc
mov
stos
dec
and
cmp
push
pop
cmp
loop
xor
and
ja
fildl
iret
pop
sbbb
sbb
mov
xchg
js
das
jns
dec
ret
or
pop
cld
outsl
or
daa
push
lods
push
dec
pushf
dec
je
jno
icebp
outsb
pop
cld
dec
arpl
ret
rorb
push
mov
js
mov
cmp
fdivs
and
jmp
nop
pushf
stos
mov
mov
cmp
mov
push
dec
pop
mov
imul
inc
cmp
hlt
or
push
cld
je,pn
sbb
cmp
out
jno
jecxz
xchg
cmp
mov
pushf
xor
dec
adc
imul
pop
pop
aam
mov
push
pop
mov
mov
jl
out
ja
cmp
shrb
insb
dec
loop
cmpsl
push
push
sub
dec
mov
cld
test
and
or
fisttps
fldl
dec
out
sbb
and
pop
repz
dec
pop
inc
pop
and
dec
mov
cmp
push
cmp
mov
hlt
xor
cmpsl
push
andb
inc
inc
dec
mov
je
ret
aam
adcb
lea
popf
cmc
and
push
add
out
lahf
sub
out
stc
inc
mov
js
xchg
fistpl
or
js
shl
andb
push
xchg
std
ret
repz
inc
pop
mov
lahf
lret
pop
and
pop
jno
mov
jnp
imul
jmp
jge
sahf
add
imulb
ljmp
cmp
ss
test
fstpl
in
mov
pop
js
sub
cli
fcmovb
sbb
rorb
movsl
pop
js
sbb
or
or
mov
imul
popa
add
mov
incb
push
pop
jnp
cmpsl
stc
jp
jecxz
xchg
inc
aad
cltd
dec
imulb
outsb
sar
inc
fs
roll
cmp
mov
loope
jl
insb
insb
scas
lods
inc
pusha
sub
add
dec
xor
int
jnp
inc
mov
lea
jge
push
testb
in
cmp
mov
xlat
add
out
jo
mov
inc
mov
push
sbb
scas
sbb
jbe
clc
ljmp
inc
push
ss
je
int
cmp
and
fildll
cmp
jne
pop
insl
aam
sub
pop
mov
sbb
inc
mov
shlb
es
out
loopne
lea
in
pushf
add
sbb
push
cmpsb
stc
or
sbb
cmpsb
dec
fwait
popf
ss
mov
dec
cmpsb
push
add
in
sbb
or
mov
push
mov
mov
leave
ror
sub
mov
dec
fbstp
pusha
xorb
and
mov
fiadds
push
add
out
aaa
cmp
fsub
mov
fwait
les
incl
iret
mov
and
add
pop
popf
fnstsw
push
add
adc
scas
out
pop
jp
pop
loop
adc
stc
les
cmp
sbb
js
call
aas
ljmp
fs
jne
add
inc
mov
mov
push
into
mov
fldt
scas
dec
dec
jno,pt
lea
push
push
push
jle
or
sbb
sub
push
cli
aaa
ret
xchg
out
mov
push
dec
jg
xchg
hlt
shrb
fmuls
xor
sub
mov
iret
bound
gs
lods
test
sbb
add
inc
cmpl
mov
outsb
or
addr16
xchg
lods
shll
push
stos
stc
mov
fldl
icebp
jg
idiv
mov
bound
cmp
dec
ret
jp
push
adc
mov
call
sub
test
stc
ss
or
dec
icebp
cs
xchg
mov
and
cmp
push
mov
mov
add
inc
movsl
cmp
stc
cld
out
adc
sbb
in
aad
and
insl
pop
stos
xorl
repnz
aaa
andb
lret
sahf
rorb
outsb
dec
jne
xor
jo
ror
outsb
inc
loopne
pop
ss
mov
loopne,pt
mov
stos
dec
popf
pop
std
lods
xor
pop
outsl
sbb
push
lret
xchg
inc
aaa
sub
jp
dec
sbb
fldt
popa
lahf
push
scas
cmp
mov
push
cld
das
push
mov
or
dec
cmpsl
jae
sbbl
xchg
xlat
out
jl
fildll
mov
sub
mov
popa
or
adc
dec
cmp
mov
pop
cmp
out
in
ret
fistpl
and
fistps
or
cmp
je
imul
lods
push
test
dec
pop
pop
loopne
inc
pusha
mov
push
lret
push
pop
fwait
data16
daa
cmp
push
fsubs
fwait
jnp
loope
dec
xchg
leave
jo
jnp
pop
fsubr
faddl
pop
mov
push
dec
jae
out
sbb
add
mov
out
fsubrp
mov
in
inc
inc
push
add
mov
cmp
add
in
xor
sahf
add
mov
nop
stos
xor
mov
popf
leave
jecxz
fwait
int
add
test
adc
add
and
push
loopne
fisubs
mov
dec
and
jmp
lret
xor
in
jecxz
adc
mov
popa
inc
ds
clc
rol
popa
scas
flds
andb
mov
clc
fiaddl
prefetcht0
pop
stos
add
cltd
inc
sub
inc
push
out
xor
push
orb
rolb
incb
loopne
jle
mov
inc
and
jp
mov
in
and
loop
loope
push
xchg
cmpsl
pop
xchg
jge
pop
cmp
sti
sahf
push
mov
rorb
imul
add
pop
scas
jmp
or
cmp
mov
fst
std
inc
adc
add
jmp
stos
fs
lds
or
mov
shlb
dec
mov
jo
mov
lea
add
or
sub
mov
cmp
aad
addb
mov
mov
enter
ret
das
rclb
ret
mov
test
fistpll
mov
in
ljmp
inc
push
aam
iret
ss
sub
and
out
push
sub
lea
add
inc
xchg
push
push
fwait
lcall
shll
fld
add
jb
addr16
xor
jl
ljmp
fidivl
jno
push
out
hlt
push
movsb
pop
mov
pusha
and
movsl
mov
xor
in
js
outsb
dec
mov
jnp
mov
test
mov
dec
mov
ja
stos
ret
les
imul
mov
adcl
andl
cld
pop
adc
xchg
fnstsw
test
pop
test
outsl
adc
sbb
push
into
jle
nop
nop
in
leave
inc
cmpl
clc
lss
and
scas
and
lcall
dec
adc
leave
orb
outsl
sub
mov
adc
pop
test
in
inc
xor
sbb
rolb
jb
mov
je
insb
mov
xor
sarb
loope
push
ljmp
stos
pop
adc
push
movsl
xlat
push
subb
imul
mov
jno
cmp
mov
xchg
loopne
cmpl
mov
wbinvd
inc
sub
xchg
or
inc
insl
fstpt
inc
test
shl
adc
std
lea
outsl
adc
fimuls
xor
insb
andl
xchg
cmpsb
jae
popa
xorb
push
cmp
rcrl
inc
or
adc
mov
or
mov
mov
pop
pop
pushf
dec
cli
jle
sub
sbb
repnz
push
mov
sbb
cs
push
sub
ss
xchg
pop
js
and
stos
in
mov
xlat
cld
mov
or
add
test
cmc
and
pop
imul
test
cltd
gs
cld
mov
sbbb
rol
es
push
dec
popa
mov
shrb
jecxz
add
push
inc
jecxz
out
ret
pop
rolb
cmp
hlt
pop
jle
shlb
jp
fsin
aaa
shr
fwait
sub
add
add
pop
pop
cmc
mov
aam
fnstcw
dec
and
test
ret
and
push
mov
fstl
jne
sbb
dec
xchg
inc
andl
dec
jo
dec
inc
cmc
push
mov
push
repnz
dec
mov
loopne
js
jl
pop
aaa
push
test
rclb
mov
sbb
xor
mov
inc
aaa
mov
ret
je
adc
jg
mov
outsb
pop
jle
jns
jbe
in
das
cld
sbb
mov
push
pop
mov
es
bound
mul
outsl
fstpt
or
cmc
jp
call
rorb
fisubs
sub
stos
inc
xor
outsl
std
stos
lret
imul
outsl
fisttpll
and
jo
jmp
lods
jo
jmp
xor
imul
dec
fisttps
fdivl
and
cmp
jl
push
cmp
and
inc
add
filds
pop
clc
mov
xchg
jle
mov
ds
stos
inc
movsl
aaa
pop
and
lds
push
cli
dec
push
in
in
aad
je
insl
orl
test
sub
hlt
pop
or
push
push
dec
mov
xor
scas
std
pop
mov
ja
mov
push
dec
or
aas
or
aam
or
loopne
imul
scas
sub
aam
mov
roll
or
xor
cmc
fcmovbe
ja
and
sbb
sysenter
jmp
int3
pop
xor
sub
pop
mov
fbld
xchg
popa
sti
insl
adc
jnp
or
fs
bound
outsl
mov
pusha
sbb
call
pop
add
add
fucomp
dec
mov
into
add
mov
sbb
ficoml
insl
pop
push
test
pop
lods
cmp
outsl
jne
xchg
mov
or
mov
sub
adc
push
push
arpl
mov
ret
sub
add
pop
lcall
mov
or
mov
jbe
push
ret
xor
sbb
sub
or
idivb
hlt
mov
and
cmpl
stos
test
ljmp
filds
add
mov
insl
jmp
adc
dec
mov
push
in
ret
xor
xorb
adc
dec
cmpb
mov
lock
ss
sbb
fildll
ss
adc
adc
cmc
push
out
pop
mov
xorb
sbb
test
cmp
nop
cmp
icebp
loop
xor
loop
test
adc
shrb
call
jmp
outsb
push
or
pop
jp
push
jecxz
ja
mov
notl
ja
nop
push
icebp
das
cmc
mov
in
data16
jg
aam
movsl
scas
add
mov
das
in
xlat
mov
add
shrb
xor
lods
cld
test
cmp
cmc
mov
mov
enter
push
es
mov
pop
inc
ret
pop
jge
cmp
arpl
jge
jno
or
aaa
sbb
or
dec
sti
jns
int
lods
dec
adc
scas
jo
jne
xor
outsl
enter
mov
mov
and
lret
cli
pop
inc
lods
push
adc
mov
pop
push
andl
jb
dec
dec
or
xchg
pop
mov
loope
nop
or
filds
lahf
dec
xchg
lea
push
jge
xor
loop
cli
inc
movhps
cmp
mov
jge
filds
inc
leave
clc
add
jge
xlat
pop
iret
add
xor
lods
add
push
jne
push
sbb
and
sti
fnstsw
inc
repz
dec
sub
or
sbb
test
andl
inc
adc
arpl
jo
nop
sbb
imul
stc
push
shlb
bound
and
outsb
enter
fists
and
add
or
movsl
xchg
lods
out
bound
test
in
repnz
ror
adc
repnz
mov
clc
ss
and
or
aad
or
xor
pop
call
icebp
pop
xlat
mov
ds
stc
inc
sub
jg
inc
mov
aad
dec
adcb
jl
inc
pusha
in
add
mov
stos
inc
jmp
test
jae
fs
cli
in
cmp
js
pop
fsubrs
dec
repz
sbb
jb
gs
or
xorb
outsl
and
push
rcll
std
mov
icebp
sti
xlat
sbb
test
adc
stos
jl
mov
and
imul
sbb
imul
lock
loopne
and
or
or
mov
mov
inc
out
mov
jns
xchg
insl
out
inc
cltd
or
add
dec
hlt
mov
adc
cs
inc
ljmp
or
jg
call
sbb
cltd
cmp
out
sqrtps
stos
pop
add
jnp
outsl
fucomp
mov
mov
fwait
stos
popf
mov
inc
inc
pop
xorb
push
adc
ret
scas
mov
clc
dec
mov
adc
stc
push
repz
xor
arpl
cmp
push
jp
in
sti
jg
imul
jb
or
cmpsb
sub
sbb
and
xchg
sub
dec
sbb
enter
lret
cmp
xchg
or
out
mov
mov
jg
clc
inc
stos
lods
enter
sbb
dec
mov
loop
aad
adc
or
sub
mov
sbb
sub
jg
stos
jbe
push
xor
jmp
test
pop
pop
cmpsl
pop
ljmp
mov
sub
pop
sub
outsl
pusha
sti
push
mov
pop
lds
and
fldl
imul
sti
icebp
movb
mov
das
shl
enter
hlt
mov
xor
scas
fwait
das
loopne
mov
cmc
sbb
rclb
mov
js
orb
inc
jno
jmp
std
or
xchg
ja
inc
inc
pop
loope
fdivs
or
bound
into
aad
mov
jle
rcll
add
adc
sub
enter
mov
add
xchg
lahf
pusha
lahf
cmc
rol
pusha
ret
jo
int
aas
aad
pop
xor
fcmovnbe
mov
ret
push
xchg
jp
push
cli
aam
adc
sbbb
dec
add
inc
testl
and
mov
sti
insl
jae
clc
test
inc
and
xchg
mov
cmc
jo
mov
cmp
sbb
cmp
aaa
and
push
and
roll
movsb
adc
sbbl
adc
xor
dec
or
and
in
pop
dec
xchg
mov
and
int3
ja
test
arpl
lods
jno
decl
sti
rorb
add
or
xor
insb
fisttps
pop
inc
lock
out
inc
push
call
mov
jle
sbb
push
aas
xorb
imul
fnstcw
dec
jp
in
adc
pop
pusha
xlat
jge
mov
jns
aam
pop
nop
xchg
dec
push
fdivs
mov
pop
fdiv
push
cmc
cmpsl
pop
jbe
xchg
dec
xor
outsl
lods
push
fdivs
sub
pop
mov
and
adc
or
or
mov
sub
cmp
mov
add
add
idiv
inc
sti
test
icebp
or
adc
incb
fisttpl
je
mov
sti
mov
movsb
cltd
adc
cmp
addr16
pop
jb
mov
sbb
push
pop
lock
clc
cmp
pop
sbb
add
xchg
sbb
ret
ret
mov
add
rcll
pop
push
sbb
test
jge
orb
fdivrs
or
push
fsubrs
xor
inc
jmp
std
add
xchg
nop
gs
jo
outsb
adc
adc
push
and
mov
pop
push
test
or
cmp
jns
das
adc
test
rcl
add
daa
xchg
adc
inc
enter
inc
mov
inc
test
add
lcall
mov
stos
sbb
add
subb
rorl
dec
rcll
ficoml
mov
mov
ret
push
or
mov
cli
jbe
cmc
cmp
adc
mov
fcompl
ret
cmp
pop
enter
sub
pop
repnz
jne
or
sub
add
add
mov
adc
and
mov
dec
lcall
and
add
invd
xor
push
jmp
cmpsl
adc
mov
mov
pop
jb
add
xor
lahf
out
test
pop
push
jge
push
outsl
imul
or
sub
arpl
shrl
lock
outsb
scas
mov
sub
jb
repz
mov
push
in
sub
movsl
pavgb
aad
pop
dec
mov
mov
imulb
inc
nop
and
movl
insl
mov
pop
inc
xor
mov
lods
ret
loop
ja
mov
rclb
dec
ljmp
mov
xor
sarl
fcoml
and
clc
scas
fidivrs
xor
sub
mov
jmp
xor
decb
adc
push
or
loope
movsl
incl
pop
push
outsb
dec
lahf
sbb
or
aam
cltd
xorl
mov
or
rcr
es
mov
pop
or
ret
cmp
dec
fists
add
mov
xchg
inc
mov
int
push
imul
inc
gs
adc
push
scas
int
dec
in
aam
fldl2e
dec
add
jle
lret
pushw
lods
cmp
push
fbld
fists
std
lods
incl
popa
out
push
out
fildl
cld
mov
fcompl
mov
mov
les
sarl
insl
push
lea
pop
pop
int
mov
cmp
lea
jp
mov
xchg
mov
test
push
pop
dec
mov
jbe
cltd
mov
xchg
pushf
fwait
add
mov
sbb
xor
mov
cmpsb
imul
push
and
ds
push
mov
and
stos
fisubrl
add
test
mov
test
imul
cmpl
add
and
sbb
cmp
das
and
les
mov
cli
xor
dec
xor
enter
jne
adc
nop
mov
movsl
stos
inc
dec
jmp
push
xchg
add
sub
cwtl
adc
fidivl
xchg
bound
push
xor
test
pop
sub
inc
xchg
xchg
and
and
pop
or
sbb
clc
clc
push
imul
mov
int
fnsave
pushf
or
dec
sbb
pop
dec
pop
push
xor
sbb
scas
scas
ja
out
cmp
lock
lock
imul
inc
inc
push
adc
xchg
sub
pop
mov
int3
xchg
stos
mov
or
push
add
movsb
movsl
mov
add
invd
mov
push
or
xor
or
clc
leave
and
add
icebp
jg
jo
adc
or
xchg
dec
arpl
addr16
xor
idivb
loopne
push
das
ss
imul
rorb
out
and
movsl
fisttpl
adcb
xor
arpl
clc
inc
jo
rclb
iret
push
sbb
pop
enter
pop
mov
pop
popf
imul
inc
into
xchg
lret
jle
gs
in
add
xor
std
inc
insl
in
pop
rclb
adc
mov
cli
inc
popf
xor
aam
aaa
jbe
lea
mov
cmp
inc
test
das
and
mov
jo
mov
out
jmp
adc
mov
dec
and
scas
lods
and
nop
ljmp
std
mov
cmp
dec
inc
movsb
adc
test
neg
mov
dec
xor
lods
dec
mov
nop
ds
mov
data16
arpl
and
inc
flds
in
sbb
jne
popf
xchg
add
lock
loopne
add
jns
data16
push
pop
mov
rcl
sbb
lcall
and
or
pop
mov
mov
push
and
sbb
addr16
gs
pop
insb
jp
mov
add
jl
or
pop
int
loop
dec
cmp
imul
or
daa
aas
pop
jo
rcrb
repz
out
mov
test
and
out
sbb
fsubl
data16
pop
cmp
and
mov
push
psraw
push
leave
add
mov
pop
mov
and
mov
or
mov
sub
push
jb
cmpsl
movsl
outsb
sub
aad
xchg
dec
into
push
jp
xchg
call
daa
xchg
bound
psubsw
scas
insl
cmpsl
das
dec
das
and
mov
fdiv
push
sub
cmc
js
adc
xor
xor
xlat
das
or
dec
sbb
sbb
jl
cld
sub
xor
in
pop
dec
ret
add
xor
jle
pop
pop
adc
sbb
jecxz
ss
rorb
push
sbb
mov
fimull
bound
stos
pop
xchg
mov
fadds
andl
xchg
mov
and
mov
roll
xchg
sub
ljmp
mov
push
xor
out
xchg
bound
xor
ror
sbb
xor
sbb
dec
and
incb
dec
mov
imul
dec
cmp
in
mov
in
lods
pop
lock
pop
cmp
xor
ficompl
enter
push
jb
sar
mov
sub
lcall
cld
icebp
insl
add
push
pop
lahf
mov
mov
mov
fimull
jmp
adc
pop
or
outsb
xor
lods
rorb
inc
push
add
push
xor
mov
int3
pop
fstpt
movsl
jp
xchg
repz
dec
imul
cmpsb
xor
mov
xor
mov
cmc
in
pop
or
mov
outsb
sub
mov
pop
aaa
mov
cmpb
repnz
jne
mov
fsts
aad
or
add
clc
test
ja
out
pop
dec
add
ret
adc
mov
mov
hlt
fildll
push
xlat
enter
aam
dec
bound
xchg
nop
mov
add
or
pop
xchg
jmp
cli
stc
push
lds
cmp
xchg
and
dec
hlt
movsl
pushf
push
lret
jne
dec
popa
xchg
push
mov
pop
xor
movsb
popa
xchg
push
iret
push
dec
mov
cmp
push
pop
sbb
ret
aad
push
out
xchg
cmp
jnp
inc
adc
mov
adc
filds
mov
mov
add
icebp
aaa
cli
pop
ficompl
push
lret
inc
inc
aad
popa
mov
add
jp
fnstsw
ret
lea
or
or
shrb
sbb
and
sbb
mov
movsb
sti
mov
mov
mov
mov
ljmp
mov
inc
add
dec
cmp
clc
push
mov
jp
or
out
mulb
mov
mov
pop
das
insb
cli
imul
loopne
mov
mov
pushf
imul
mov
repnz
js
fistpl
aas
or
dec
insl
pop
aad
fwait
sub
jae
lock
lahf
repz
adc
xor
scas
and
ret
das
jbe
xor
sarl
inc
adc
inc
add
std
push
or
lcall
mov
xchg
bound
inc
insb
dec
incl
inc
and
pop
mov
fwait
mov
mov
cmpsb
mov
sbb
test
pop
inc
sti
and
mov
mov
mov
and
add
int
aam
inc
fwait
mov
jb
leave
push
icebp
lock
xchg
mov
loop
mov
subb
mov
outsb
jg
imul
xchg
dec
or
std
hlt
push
cmovnp
adc
sbb
jp
xor
outsl
aaa
ss
dec
nop
inc
adc
mov
lock
lcall
repz
jbe
test
cmp
push
leave
mov
xchg
and
nop
sbbb
inc
xchg
ljmp
mov
outsb
fbld
leavew
insl
cmpsb
dec
lds
call
test
mov
add
sub
ret
imul
int3
and
dec
adc
mov
dec
fsubl
sbb
add
arpl
js
insl
fldt
jle
jle
out
inc
sbb
pop
mov
out
fucomip
or
inc
int
icebp
or
jle
js
fisttpl
popf
int
arpl
pop
jl
stos
leave
in
sbb
adc
fisttpll
jo
fldln2
mov
fsubrs
sar
hlt
or
test
mov
mov
cmp
cli
inc
cli
in
testb
into
aam
int3
push
hlt
cltd
ret
push
pop
push
add
sbb
inc
dec
loopne
add
xchg
testb
fnstsw
cmp
xor
out
inc
ja
dec
adc
or
test
sbb
fnstcw
sti
mov
adc
jle
in
mov
mov
sbb
sbb
dec
lods
scas
ss
push
or
enter
push
mov
adc
jns
pop
adc
ljmp
sub
pop
scas
add
sbb
loop
ficoms
add
cmp
int3
pop
sub
fcom
lret
pop
int
pop
and
test
daa
push
adc
adc
je
jp
jae
imul
push
mov
or
add
xor
pop
push
test
lock
jge
dec
insl
enter
fidivl
xor
xchg
mov
fsubrp
ljmp
and
out
mov
jle
popf
and
cli
cs
jnp
ds
enter
sbb
test
xchg
inc
mov
mov
stos
in
sbb
sar
fisttps
in
fs
push
inc
sbb
addl
inc
shll
mov
shrb
leave
cwtl
mov
or
adc
clc
pop
scas
ret
cmp
pop
mov
or
lcall
add
jp
mov
or
add
dec
std
push
mov
outsl
in
jg
inc
fcoms
cli
jle
mov
mov
cwtl
mov
add
mov
call
add
leave
loopne
push
xor
data16
mov
in
pop
addl
add
jmp
adc
xor
add
daa
push
sub
add
lods
addr16
stc
add
dec
mov
lea
es
or
xchg
mov
push
fstpt
loop
mov
mov
mov
roll
mov
roll
mov
cli
das
inc
jmp
mov
psubb
mov
add
xor
sub
or
jnp
inc
scas
sub
clc
sbb
pop
repz
jle
xchg
xor
adc
cmp
mov
scas
leave
inc
popf
mov
mov
jl
mov
xchg
decl
jecxz
icebp
ret
outsb
lahf
mov
cld
mov
outsb
lret
scas
dec
movsb
jl
xorb
sti
inc
mov
sbb
sub
jle
mov
push
mov
sbb
mov
mov
mov
sub
mov
xchg
insb
pop
xchg
push
fisubs
roll
pusha
mov
dec
and
ss
cltd
pop
sub
mov
xchg
dec
mov
cmp
in
jne
es
decb
add
punpckhdq
lea
sbb
repnz
data16
enter
sub
fsubrl
out
cmpsb
cmp
movsl
movsb
mov
and
icebp
cmpsb
mov
lret
push
mov
pusha
test
adc
loop
sar
sbb
sbb
imul
pushf
push
mov
hlt
dec
pop
cli
xor
leave
mov
add
mov
cltd
dec
clc
idivb
add
in
jae
push
add
outsl
cwtl
add
mov
jp
loopne
adc
les
xor
mov
xor
dec
jno
adc
shl
lods
mov
sbb
mov
jb
xor
pop
cmc
stc
mov
jne
jno
shlb
pop
add
xor
and
fildl
push
shrb
ja
mov
test
cli
or
add
aam
outsl
xchg
nop
mov
inc
scas
int
inc
les
inc
xor
and
movsb
mov
adc
ffreep
jmp
rorl
arpl
xchg
jle
icebp
les
sub
add
mov
out
movsl
dec
in
stos
stos
fistpll
dec
scas
dec
mov
adc
and
pop
je
and
cmc
lds
or
imul
test
jmp
std
ret
mov
inc
pop
dec
js
and
test
rol
add
cs
or
pop
mov
mov
scas
jne
sub
nop
cltd
lods
or
push
and
ret
jno
fdivrs
inc
mov
ja
lock
test
cwtl
arpl
loope
in
mov
in
push
dec
add
mov
inc
dec
pop
or
pop
and
inc
out
pop
jp
or
mov
scas
pop
shrl
in
enter
scas
xorb
icebp
fucomp
cmp
je
mov
and
push
lret
sti
das
jl
or
dec
push
stc
inc
push
or
mov
mov
mov
push
mov
dec
xchg
pop
xchg
fidivs
les
jge
arpl
stc
mov
pop
sub
movl
outsb
popa
jnp
or
repz
push
fcomip
out
sbb
lcall
pop
jo
loop
push
or
pushf
sub
ljmp
sub
mov
push
push
sub
rcr
push
push
cld
testb
dec
cmp
popf
mov
jae
mov
shlb
or
and
repz
cld
fldt
pslld
adc
adc
pop
dec
xchg
sti
mov
mov
fildll
adc
xchg
or
enter
sbb
ficoms
add
dec
dec
mov
roll
scas
adc
jno
aad
rcrb
mov
test
outsl
insb
mov
pop
hlt
sahf
lods
hlt
ror
movlps
pop
cmp
fistpll
sbb
jno
push
mov
sbb
call
pop
fnstcw
lock
fistps
loopne
jo
mov
test
outsb
pop
cli
lret
shlb
mov
dec
mov
cs
mov
sahf
cltd
aad
into
inc
or
aas
mov
stc
pop
mov
test
aad
fwait
push
push
xor
push
sahf
fcmovnb
pop
lds
xchg
mov
gs
push
add
xchg
sti
xor
clc
push
mov
lods
movsl
xor
inc
xor
imul
inc
das
fsub
inc
js
cwtl
out
pop
inc
decl
cwtl
jnp
lods
cmpsb
inc
shl
xchg
pop
jmp
sahf
xor
rol
mov
or
sbb
dec
push
or
neg
inc
xor
out
push
das
or
ret
popa
add
xor
daa
jmp
test
lea
test
aaa
stos
mov
jmp
mov
outsb
inc
fsubrs
mov
out
inc
mov
pop
mov
mov
test
cmp
insl
inc
cld
jg
adc
iret
sub
mov
les
movsb
sbb
arpl
add
push
ja
ljmp
xchg
mov
aaa
loop
adc
outsb
sti
mov
dec
mov
xchg
and
push
xchg
cld
mov
push
xor
and
fidivs
in
and
or
push
imul
lea
in
jmp
fs
ret
pop
ljmp
lea
mov
mov
xchg
mov
pop
add
mov
push
pop
fsts
insb
push
fcomip
ja
cld
inc
fs
ss
test
pop
or
sub
jns
mov
mov
repz
pop
mov
xor
fcomi
es
add
mov
push
orb
pop
aad
enter
mov
mov
and
cmpsb
inc
cmpb
shrl
mov
inc
outsb
clc
das
aaa
imul
mov
outsl
rcll
push
mov
push
push
push
outsl
fdivrs
loopne
cwtl
dec
sahf
sbb
sub
clc
sbb
sarb
lock
test
inc
inc
pop
loope
pop
push
sub
mov
cwtl
jae
push
add
jmp
mov
out
mov
and
mov
pop
inc
out
dec
jae
adc
ds
xorb
push
cmp
inc
inc
sub
cmpsb
loop
in
push
test
leave
or
mov
mov
outsl
mov
pop
sbb
mov
out
dec
sub
js
inc
imul
cli
push
sti
dec
test
lea
mov
xchg
sahf
insl
mov
sbb
sub
pop
mov
push
jp
fdivrl
and
int3
popa
stos
push
mov
loop
rcrl
outsl
xor
add
pop
inc
jno
sar
sti
inc
shrl
inc
es
push
push
std
push
mov
mov
out
mov
sub
or
lret
std
sub
jge
xchg
outsb
incl
icebp
mov
enter
cmpl
push
frstor
push
pusha
push
lock
inc
jnp
cmp
pop
vmaxsd
enter
insb
fimull
icebp
inc
les
sahf
mov
or
in
or
lods
jb
rcll
sub
or
into
mov
inc
aad
scas
sub
push
jge
filds
fistl
mov
adc
lea
mov
fcomps
cwtl
dec
mov
jne
jne
sub
push
into
movsb
push
mov
mov
push
sub
ja
outsl
mov
insb
aaa
sbb
scas
repnz
aas
test
icebp
loope
or
mov
inc
stos
mov
fisubrl
mov
nop
cmpb
mov
outsl
ljmp
pop
dec
cmp
or
aaa
add
int3
add
mov
sub
cmpb
popf
mov
mov
dec
or
mov
lahf
or
sbb
dec
mov
rclb
xchg
pop
mov
push
dec
insb
mov
imul
outsl
cli
xor
imul
lock
sub
mov
cmp
mov
push
dec
fisubrl
push
sub
dec
ret
xchg
jp
stos
sbb
inc
xchg
mov
push
sub
iret
cld
add
jg
jmp
add
or
and
dec
or
xchg
or
stos
fldt
add
pop
pop
cmp
mov
hlt
je
ljmp
movsl
cltd
loopne
mov
inc
jmp
mov
inc
inc
pop
mov
jge
jno
mov
pop
adcb
das
and
mov
dec
sub
loope
jle
jmp
jl
pop
inc
shrb
outsl
adc
addl
pop
loope
xor
jmp
mov
or
jl
scas
sbb
mov
enter
jo
mov
in
pop
fwait
add
scas
lcall
or
adc
rorb
cmc
test
xchg
ss
dec
adc
das
push
xor
sbb
mov
xchg
loop
ror
fs
mov
rclb
les
arpl
xchg
xchg
mov
dec
shll
dec
mov
and
dec
iret
lret
push
movsl
mov
aaa
fistps
inc
mov
cltd
lea
pop
sti
inc
inc
xchg
and
pop
mov
dec
outsb
ss
enter
or
sbb
mov
pop
or
aam
fdivrs
sbb
pop
rolb
mov
cmpsb
es
incl
push
add
pop
pop
xchg
pop
add
stos
pop
xor
movsl
divb
sub
cld
pop
cltd
xchg
rorb
xchg
mov
mov
fstpl
inc
add
int3
xor
mov
mov
pop
xchg
out
inc
add
ret
fldl
add
mov
insl
mov
mov
pop
into
pop
cmpsb
lret
push
or
lcall
dec
data16
mov
or
jg
sbb
enter
inc
cmp
mov
fwait
stos
rcrb
mov
mov
inc
lods
mov
shlb
dec
push
sub
lds
mov
lret
shlb
sbb
pushf
push
cwtl
arpl
xlat
aam
bound
loop
push
xorl
and
mov
fstpl
mov
cmpb
in
aas
shrl
popa
outsl
aaa
jge
outsl
xor
push
xor
test
rcrl
test
sbb
outsl
sub
mov
jg
mov
jp
iret
xlat
mov
mov
arpl
sti
mov
cmp
add
mov
fistpll
scas
jno
cmpl
push
inc
add
pushf
blcfill
jecxz
sub
cld
scas
fwait
mov
push
insb
ss
repnz
loop
sarb
test
fwait
sahf
movsl
mov
fld
dec
jo
xchg
inc
xor
shll
mov
mov
dec
adc
add
push
adc
test
rcll
aad
outsl
lods
mov
push
adcl
adc
xor
scas
pop
xor
push
and
int
clc
adc
cwtl
mov
std
sbb
fbld
or
inc
shrl
mov
jae
xlat
lea
lds
pop
sbb
adc
add
fnstenv
push
mov
dec
mov
sbb
mov
cmpsl
or
shrl
mov
mov
mov
jno
pop
jns
std
mov
xor
jo
call
and
inc
and
je
stos
sahf
sahf
push
enter
inc
std
push
xchg
mov
mov
dec
mov
mov
or
push
clc
rolb
mov
xchg
stc
cmp
rcr
push
ret
adc
roll
icebp
fildll
mov
cmp
adc
ret
xor
cmpsb
incb
mov
std
dec
mov
mov
cmp
push
sbb
mov
jge
push
in
or
or
out
push
jae
hlt
jns
and
popf
lock
loop
test
sub
mov
mov
inc
mov
or
aaa
or
xor
dec
clc
jbe
jbe
pushf
lods
sub
inc
inc
rcr
ss
adcb
sbb
lcall
cmp
fsubp
mov
pop
dec
pusha
lods
rolb
mov
hlt
ljmp
mov
adc
pop
mov
mov
fwait
mov
push
inc
mov
push
cmc
psrld
jg
or
stc
lods
test
scas
shrb
or
aad
or
add
pop
jg
fisttpl
mov
add
jge
scas
ret
loopne
ja
mov
dec
jnp
inc
mov
pop
xchg
test
rclb
mov
imull
pop
mov
adc
inc
pop
ss
adc
pop
fldt
adc
nop
push
mov
ljmp
call
pop
xchg
pushf
pop
je
fcomps
sub
fdivrs
jmp
pop
add
iret
xorl
orb
call
cli
pop
push
xor
ret
mov
xchg
stc
push
or
jmp
mov
rcll
in
ljmp
inc
cmp
jne
jmp
pop
xchg
pop
mov
outsb
sub
js
mov
add
je
js
dec
ret
inc
fistpl
jp
in
int3
lock
add
or
imul
pop
mov
pop
fistl
mov
call
pop
in
fldcw
push
mov
loopne
and
xchg
repz
imulb
push
sub
jnp
push
add
mov
jmp
bound
xor
or
cmp
xchg
stos
add
jmp
aad
push
mov
add
aaa
std
jbe
mov
lods
inc
adc
test
pop
movsl
cmp
arpl
mov
shr
mov
adc
decl
lds
push
sub
xor
mov
cld
or
xchg
or
cli
inc
mov
mov
dec
cli
jnp
rcrb
pop
adc
mov
mov
pop
push
push
loope
add
je
and
push
dec
sbb
lods
push
mov
adcb
ja
stos
inc
std
mov
and
pop
fistpll
sub
aaa
mov
sub
pop
sti
sub
mov
call
add
mov
pop
stos
xor
cmp
or
xor
xchg
mov
add
push
cmc
sub
push
call
mov
add
cmp
sub
mov
jne
pop
jo
shll
popa
mov
lock
test
xor
fstps
mov
adc
cmpb
mov
rolb
bound
add
mov
insl
pop
pop
jmp
adc
fstp
mov
mov
adcl
in
call
insb
inc
jns
push
inc
and
inc
sub
loopne
imul
and
xor
cmp
mov
mov
fisubrl
add
popf
mov
push
inc
out
outsb
jl
rorb
in
pop
in
int3
cmpb
lret
mov
add
push
icebp
aam
ret
push
lds
push
dec
stos
stos
inc
mov
mov
pop
inc
push
jg
cmpl
out
dec
add
inc
mov
push
push
imul
out
pop
sub
push
mov
fildl
sbb
cmpsb
loope
lock
negb
sahf
mov
cs
lock
mov
sbb
leave
test
push
and
or
enter
js
sub
js
inc
pop
or
adc
mov
jo
jb
dec
fs
nop
loop
shl
sub
inc
add
ret
and
popa
leave
inc
jle
arpl
andb
fwait
mov
pop
and
ficompl
xor
xlat
in
std
lea
les
sti
stos
pop
in
adc
int
outsl
test
mov
mov
jnp
sbb
fucomi
add
pop
cmc
pop
and
mov
mov
dec
neg
in
fs
cmp
test
aaa
or
xchg
mov
and
cmpl
jmp
xor
cli
push
pop
mov
push
mov
shrl
addr16
sbb
and
and
daa
xlat
ljmp
sbb
fs
rol
out
and
pop
sbb
sti
adc
dec
add
jb
ljmp
lods
jge
je
insb
push
cwtl
in
adc
add
notb
inc
int
push
mov
or
jle
popa
mov
dec
fdivr
xchg
jp
xlat
inc
add
jp
mov
adc
cmp
subb
clc
fdivrs
jl
mov
out
mov
rcr
lea
sbb
mov
ffreep
cmpsl
pop
aaa
mov
in
add
das
inc
push
push
dec
xchg
fisubrs
mov
and
pop
inc
int
pushf
add
xchg
fsubp
jns
outsl
push
sahf
sbb
out
pop
add
js
sub
call
mul
aas
loop
cmc
in
or
push
mov
sbb
scas
repz
insb
pusha
inc
inc
inc
mov
test
cld
push
xchg
jae
test
insb
ss
cmp
icebp
mov
adc
addl
imul
jg
bound
add
fs
js
push
jmp
incl
aam
bound
test
int3
fisubs
mov
push
xor
dec
mov
lods
lret
mov
lea
bound
fisubl
sbb
jg
ja
lret
int3
nop
push
call
jnp
jmp
into
fdivr
push
out
pop
addr16
adc
lret
and
sbb
add
cmp
lds
jg
dec
ss
je
lds
jp
insl
push
ds
xchg
out
lea
clc
sbb
jnp
testl
daa
ss
mov
subb
pop
incl
adc
mov
fimuls
fdivrs
adc
adc
cmpsl
or
das
std
ljmp
mov
test
dec
add
and
shlb
incl
add
sar
lods
fmull
xchg
clc
sub
fcmovnbe
pop
fsubs
or
lods
mov
jo
fdivrs
lds
or
mov
outsb
movsl
mov
inc
push
andl
lds
add
movsl
push
dec
daa
andl
or
jmp
les
adc
aam
or
adc
ss
and
mov
je
outsb
shll
fists
in
mov
jle
push
loopne
js
jbe
fwait
outsb
push
clc
jmp
test
push
inc
or
xorb
mov
push
xchg
ja
pop
mov
stos
and
xchg
jns
cmp
mov
mov
int
push
mov
add
jb
pop
add
sbbb
jle
jo
push
dec
mov
mov
mov
mov
in
pop
in
dec
fistpll
fistpl
sub
repz
pop
mov
pop
ss
bound
test
leave
xor
lock
cld
pushl
or
xlat
or
lcall
fbstp
insb
fisttpll
and
or
or
das
xchg
adcb
sbb
inc
mov
mov
mov
pusha
xorl
xchg
js
xchg
in
or
mov
jmp
sub
loopne
les
push
adc
cmc
pop
aad
mov
sub
add
lret
xchg
ret
out
lea
mov
in
int
sbbb
inc
divl
jp
pusha
cmp
pop
sbb
insb
insb
xlat
cmpsb
out
push
xchg
and
lods
pop
mov
out
cmp
outsb
or
out
jno
sub
test
push
bound
sbb
jno
test
mov
pop
pusha
adc
daa
adc
lds
mov
cmp
lret
call
loope
cmp
ds
in
decl
inc
imul
lcall
jns
pop
xor
jnp
mov
pop
mov
mov
inc
fs
lahf
popf
xchg
and
jns
or
adc
mov
or
sbb
dec
cmp
add
insb
push
sub
dec
mov
imulb
add
fbld
sti
and
pop
mov
sbb
lret
test
enter
dec
jbe
mov
jl
lock
pop
lret
push
pop
inc
add
ds
xchg
xchg
mov
mov
loop
sbb
push
mov
sbb
outsl
and
bound
int
in
push
sbb
cmp
or
test
sub
aad
add
adc
iret
dec
xchg
orb
mov
adc
xchg
adc
inc
xchg
lds
stos
adc
jns
or
dec
out
mov
mov
xchg
mov
pop
pop
mov
xorb
aad
sbb
add
icebp
out
mov
call
stos
rcrl
pusha
jmp
cmpsl
jge
test
scas
fcmovne
mov
xchg
fidivrs
mov
xor
fcomi
jecxz
xlat
inc
popf
cli
add
and
inc
inc
loopne
pusha
or
push
inc
add
add
or
std
frstor
add
fwait
call
orb
push
cmp
dec
dec
dec
lret
lcall
data16
mov
ss
pop
mov
shlb
dec
mov
add
in
ja
ds
pop
xchg
jle
aad
out
xchg
stos
dec
push
jns
mov
dec
jg
dec
xchg
test
add
movl
mov
pop
sub
sti
push
add
or
negb
dec
lcall
test
nop
shl
mov
stos
cli
pop
rclb
xchg
fcoms
into
adc
and
jge
xchg
mov
loopne
loop
hlt
adc
mov
mov
jecxz
push
xor
or
inc
arpl
gs
mov
mov
ljmp
lods
sub
inc
mov
jne
add
clc
pusha
popa
ret
cmpsl
in
lahf
jg
mov
das
pop
sbb
xor
or
add
mov
out
mov
mov
ss
dec
insl
mov
mov
jge
sar
push
jae
into
push
mov
mov
or
and
sti
pop
xchg
lret
sub
scas
je
and
or
dec
jbe
ret
push
lahf
call
inc
xchg
jno
mov
cmp
pop
imul
fcomps
cmpsb
lcall
cltd
xchg
das
mov
das
sub
stos
jmp
inc
out
add
and
lret
mov
test
jmp
push
jp
rcll
adc
jp
fwait
cld
shll
sbb
inc
jbe
outsb
fstl
inc
add
fdivl
inc
mov
ljmp
iret
rorl
mov
adcl
xchg
cmp
or
in
cmp
add
jecxz
xchg
mov
popa
testl
jle
lea
rclb
xlat
pop
add
push
shlb
scas
or
mov
outsb
push
xchg
push
les
loopne
ljmp
xchg
pop
dec
bound
mov
inc
inc
or
or
jmp
sbb
imul
inc
mov
iret
add
adc
pop
cltd
ret
push
mov
leave
inc
sbb
jb
and
lock
xchg
adc
scas
das
xchg
add
mov
add
fdivp
pop
insb
cmpsb
xlat
ljmp
jo
ja
pop
fcoms
and
insl
hlt
dec
adc
les
mov
adc
test
fists
pop
mov
jb
jns
mov
jmp
xchg
pop
inc
fwait
xor
cmp
jno
imul
mov
push
jg
mov
cmc
out
dec
testl
push
in
push
clc
push
je
or
decl
stc
and
ror
fists
test
jl
dec
insl
cmp
xchg
lods
jno
inc
popf
mov
sub
mov
push
mov
lcall
inc
and
xor
pop
insl
fstpl
ret
jle
sti
repz
mov
jmp
fcmovu
xor
ljmp
mov
fs
mov
mov
adc
stos
scas
stos
leave
lods
xor
xor
jg
clc
and
push
into
inc
cmp
aaa
mov
rcrl
jge
lret
aaa
or
cli
movsb
pop
dec
jmp
nop
lcall
test
jae
and
es
lock
adc
dec
mov
inc
insl
mov
hlt
inc
and
inc
nop
outsb
pop
mov
push
ret
xor
sahf
imul
and
into
in
leave
testl
sub
ffree
in
inc
ret
lock
adc
jp
and
adc
mov
fucomp
ljmp
xchg
dec
pop
adc
sub
stos
clc
scas
xor
jmp
outsb
insl
hlt
dec
ss
sbb
outsl
cld
jbe
insl
dec
mov
mov
popa
loopne
rcl
lcall
js
insl
cmp
lcall
fistl
out
add
mov
jp
sti
mov
mov
xchg
mov
mov
inc
sbb
lahf
inc
push
pop
imul
jbe
pop
loope
int
and
decl
xchg
add
jo
add
jmp
push
mov
sub
idiv
lcall
push
in
push
lea
push
push
push
pushl
push
add
push
call
and
sub
sub
dec
shrb
inc
pop
push
outsl
sub
je
push
push
push
clc
inc
clc
push
add
cs
hlt
dec
in
xor
and
add
fbld
jnp
fs
add
lock
fildll
pop
lea
push
push
cld
push
outsb
xchg
lret
sbb
insl
inc
fs
sub
in
shr
jbe
jne
gs
clc
push
pop
lock
pop
adc
hlt
push
pop
add
pop
inc
out
push
mov
push
push
cld
bound
cmp
pop
and
nop
inc
fdivr
nop
adc
sbb
sub
inc
jmp
clc
sub
xor
push
inc
maxps
loope
add
push
pusha
sub
addr16
loope
fcoms
push
gs
push
cmp
dec
pop
inc
clc
ret
push
stos
in
insb
ret
add
js
or
push
xlat
js
push
repnz
repnz
cli
dec
sub
roll
jo
mov
insb
sarl
xor
aas
jne
or
push
push
push
jle
mov
insl
jne
test
jecxz
jg
in
sbb
pop
sub
dec
pop
or
repnz
pop
sbb
arpl
lahf
loope
loope
stc
sub
push
inc
sub
arpl
dec
pop
inc
pop
xor
push
inc
ss
dec
dec
push
enter
lods
aaa
xor
sbb
aaa
add
adc
jle
adc
bound
pop
jne
xlat
mov
push
jo
push
push
test
cld
cltd
push
test
mov
adc
sbb
inc
dec
sub
gs
cmp
bound
and
fsincos
je
pop
push
in
pop
fdivrl
jno
imulb
inc
dec
ja
out
push
pusha
ss
jne
push
jb
mov
test
pushf
andl
ret
leave
inc
jae
imul
cmpsl
push
int3
aas
js
dec
dec
or
dec
jb
clc
sub
mov
add
inc
lods
in
imul
js
dec
dec
push
outsb
ret
jae
nop
inc
fidivs
sub
loopne
cwtl
mov
popa
insl
xor
xor
and
inc
add
out
cld
imul
pop
js
ss
jns
mov
inc
outsl
mov
call
push
sbb
cli
jg
aaa
out
inc
addr16
inc
dec
pop
xor
jo
add
enter
xchg
outsl
fisttpll
pop
dec
sbb
adc
adc
popf
push
into
insl
ja
ucomiss
int3
scas
or
push
dec
push
rcrb
xchg
insb
inc
pop
daa
xchg
andl
sti
sbb
test
je
push
add
sbb
nop
dec
ja
cmp
push
inc
inc
mov
add
xchg
fnstcw
mov
push
push
fs
xor
mov
cmc
in
push
lret
fdivr
cltd
sbb
xchg
mov
sub
sbb
xor
adc
inc
ret
dec
clc
shl
int3
push
and
dec
lahf
call
or
je
sahf
xor
add
ret
push
sbb
cld
sbbl
cld
mov
je
mov
aad
fscale
nop
outsb
push
call
mov
sbb
add
enter
icebp
ffree
jne
fs
dec
ss
dec
repz
inc
or
icebp
mov
decb
pop
or
push
and
ret
dec
push
popa
add
js
xlat
sub
test
ss
addl
je
pusha
adc
inc
movsl
arpl
test
pop
testb
dec
add
sti
or
ljmp
add
push
cmc
jg
sub
adc
mov
pop
dec
sbb
inc
arpl
js
shll
outsl
test
jns
popf
push
insb
and
mov
jbe
or
sbb
insb
push
ja
cmp
jne
loopne
cli
inc
mov
pop
out
and
out
xchg
insb
cld
xor
out
inc
xchg
imul
dec
push
lods
push
loopne
and
into
lret
jp
mov
nop
dec
mov
rorl
lret
mov
and
cmpsb
loopne
add
lahf
xor
cmp
mov
lock
inc
pop
mov
or
ja
ds
movsl
dec
test
push
cli
add
and
fwait
push
and
push
mov
sbb
push
test
dec
pop
xchg
inc
add
push
ja
divb
cmc
jne
dec
push
cmp
out
mov
jbe
or
adc
push
inc
and
add
lods
std
imul
imul
arpl
jg
cmp
aad
or
lret
sub
mov
add
cld
outsl
jo
add
push
or
fs
jno
movsb
shl
mov
bound
roll
scas
daa
push
xorb
xor
out
dec
push
jno
add
sub
imul
or
clc
das
call
dec
aaa
outsb
xchg
pop
pop
add
fs
cmp
rcr
loopne
lods
mov
adc
sbb
sub
and
sub
sub
xchg
mov
xor
insl
pop
inc
jo
lds
arpl
push
bound
inc
loop
push
push
cmp
xchg
data16
or
dec
jge
int3
andb
jae
bswap
push
xor
icebp
or
xchg
add
ret
outsl
inc
push
mov
or
push
data16
adc
sub
fistps
push
addr16
mov
jmp
sahf
ljmp
dec
inc
adc
mov
sub
pop
lods
pop
pushl
and
add
test
loope
sbb
inc
add
and
jne
inc
outsl
ss
mov
dec
dec
jbe
leave
pop
pop
scas
js
push
pushf
lret
jmp
notl
sbb
pop
push
dec
inc
test
xor
dec
or
push
popl
xor
hlt
icebp
fmuls
or
or
in
mov
fnstsw
mov
pop
mov
inc
loopne
loopne
sub
cmpsl
fimull
mov
lret
imul
xor
mov
nop
or
adc
push
dec
xor
add
fidivrl
pop
add
mov
fwait
xor
jle
ss
das
mov
cmc
shrl
loopne
jo
cld
jg
add
test
sub
jno
push
push
aad
pop
sbb
mov
xor
push
data16
mov
dec
sbb
int
jmp
mov
insb
sbb
dec
cmovp
outsl
jbe
or
xchg
insl
jp
aaa
stos
out
or
fsubrl
jno
fnstsw
jmp
ret
das
cld
jg
add
or
je
jl
inc
lods
lret
call
sub
sbb
dec
add
xor
sbb
pop
mov
inc
enter
outsl
add
and
pop
and
add
sub
mov
jo
pop
dec
dec
dec
stc
inc
adc
mov
push
in
dec
sub
movsl
mov
push
and
rorb
mov
and
rorb
sub
mov
mov
dec
cmp
push
jbe
ljmp
dec
jns
sti
out
mov
add
aam
dec
add
sbb
sub
xor
dec
add
adc
fistpl
je
fmuls
inc
dec
mov
aaa
push
jae
jne
fimull
ficoml
fisubrs
lret
mov
mov
insl
push
lea
xchg
dec
inc
lret
mov
in
push
int3
imul
dec
inc
adc
jbe
push
fstl
lcall
mov
mov
rcrl
xor
sub
lret
das
lock
jne
push
or
sahf
cmp
adc
xor
sti
sarl
mov
les
lock
jns
jg
mov
je
lret
aam
outsb
dec
sbb
mov
cmp
ljmp
icebp
inc
ret
js
ja
push
test
gs
scas
in
call
loope
dec
dec
es
cmp
jo
iret
pop
add
in
xor
mov
cmp
imul
push
push
push
inc
xchg
inc
insl
jo
inc
cmpl
jmp
sbb
das
into
test
dec
jg
pop
loopne
loop
or
jb
dec
ja
nop
dec
jns
push
pop
inc
sbb
sbb
in
add
push
dec
push
inc
fs
inc
sub
jmp
dec
cmpl
ja
ret
nop
cmp
fidivs
outsb
int3
bound
je
sarl
xchg
dec
push
push
cmp
mov
and
aam
cmp
inc
dec
filds
das
push
pop
dec
in
cmp
lods
sub
mov
je
cmp
xor
lock
xchg
inc
dec
inc
dec
dec
repz
jno
rolb
push
push
shrb
push
jp
mov
hlt
hlt
jb
mov
js
mov
pop
shlb
inc
push
xor
mov
jb
jecxz
fdiv
pop
sub
inc
sbb
dec
inc
jl
pop
push
ss
test
jmp
sbb
jmp
or
rorl
pop
fwait
push
incb
jae
or
mov
add
add
push
outsl
jg
sti
mov
push
decb
push
add
or
xlat
jae
ljmp
push
push
mov
jne
push
dec
jne
addr16
push
iret
subb
inc
popa
lret
pop
xchg
add
jo
mov
xchg
xchg
inc
outsl
imul
push
outsb
arpl
insl
aam
mov
cmp
je
mov
dec
dec
test
flds
cwtl
outsb
lcall
gs
insl
rorb
ja
xor
push
dec
addr16
movsb
hlt
add
fisttpll
lea
scas
aad
xor
mov
dec
xor
mov
fnstenv
ss
xlat
mov
dec
inc
xor
fs
lahf
mov
insb
add
mov
hlt
xchg
mov
add
jmp
lock
fildll
sbb
mov
push
js
jae
xor
inc
mov
dec
jb
int
fmul
mov
dec
push
imul
or
mov
push
jb
test
lock
subl
das
hlt
adc
pop
dec
jo
push
mov
adc
clc
or
orb
xchg
sti
push
mov
push
dec
jo
cmp
les
js
ds
xor
je
cld
add
pushw
or
test
ret
jae
mov
push
shrl
mov
aaa
jne
or
mov
inc
inc
js
inc
mov
push
js
mov
mov
cmp
dec
in
or
xchg
xor
xchg
push
and
clc
mov
xor
lahf
lock
ljmp
pusha
decb
into
rcpps
or
inc
movsl
dec
push
jp
mov
sbb
add
scas
mov
roll
fbstp
adc
daa
or
ds
adc
idiv
incb
roll
sub
mov
dec
lds
sub
sbb
lcall
mov
daa
add
movsl
mov
aad
and
arpl
and
aas
inc
inc
jo
rclb
out
cmp
jp
mov
push
ja
mov
sbb
mov
sbb
add
adc
into
insl
fistps
cmp
stos
mov
add
pop
in
add
and
push
xor
scas
sti
mov
inc
mov
and
sub
pop
mov
lods
ja
mov
jge
subb
add
fnstcw
movsb
fstp
jae
in
fcompl
lret
icebp
jg
out
and
mov
xchg
push
add
inc
out
bound
shlb
idivl
adc
cs
nop
jle
and
mov
add
ds
sbb
sub
or
mov
jb
icebp
sub
inc
neg
add
movl
insl
push
pop
cmp
je
cmpb
or
mov
or
aas
mov
and
and
or
jg
pop
xor
cltd
mov
js
test
cmp
cmp
mov
mov
sbbb
sub
mov
xchg
sarb
popf
adc
mov
push
add
std
dec
jecxz
xor
jno
adc
fbld
xor
inc
in
and
add
inc
dec
loope
mov
push
mov
and
push
inc
mov
fstl
jae
fldl
loope
loopne
push
jge
aaa
jns
adc
mov
test
test
fdivrl
out
in
jmp
mov
cmpsl
fcoml
dec
std
cmp
adc
pop
stc
cwtl
lret
sbbb
fs
je
js
out
push
xor
mov
add
outsl
adc
mov
pop
and
nop
leave
pop
jnp
addb
cmp
push
inc
stc
in
fs
enter
int3
xchg
jp
andb
jge
or
subb
into
mov
shlb
push
xor
or
dec
xchg
xor
movl
cmpsb
jbe
or
mov
lock
testl
pop
test
nop
sahf
mov
jecxz
and
out
fistpl
cmpsb
cmpsb
scas
in
scas
out
std
out
xchg
into
dec
push
subl
pusha
outsl
xchg
xor
data16
test
pop
mov
lcall
push
in
sub
and
adc
out
std
jg
mov
sti
je
xchg
inc
mov
test
and
lahf
or
and
jl
jl
adc
leave
or
setnp
int
ja
sub
out
mov
popf
mov
repz
xchg
mull
cs
sbb
sbb
lret
lods
std
iret
std
pop
test
sub
adcb
idivl
push
loopne,pn
mov
mov
sar
outsl
mov
insl
daa
jl
jg
dec
cmp
jge
loope
adc
add
add
std
cmpsl
pusha
adc
jmp
jg
leave
mov
popf
je
push
adc
out
mov
cs
sub
int
fcomp
or
mov
decl
mov
or
xor
fistpll
sbb
dec
jle
into
add
jnp
pop
jnp
mov
fcoml
hlt
int3
or
testl
mov
test
cld
jge
dec
cmp
xchg
dec
fs
les
and
mov
jbe
pop
xchg
jl
dec
scas
sub
ss
cmp
and
into
jg
incb
mov
sbb
mov
lock
movsb
or
lock
cli
fndisi(8087
dec
xchg
lcall
and
cmp
decb
insl
lods
or
addr16
lock
push
aaa
pushaw
cld
cmp
jg
jo
pop
insb
dec
and
stc
jp
inc
sbb
das
idiv
cmp
gs
dec
and
rolb
repnz
jg
test
pop
out
push
pushf
ret
int
jg
and
je
idivb
mov
sub
xor
mov
pop
repz
pop
gs
test
mov
mov
dec
std
into
xor
mov
push
or
cmpsl
div
loope
in
mov
sbb
test
scas
outsl
js
into
pop
mov
xchg
nop
insl
imulb
xchg
jl
xchg
or
lahf
shr
sbb
sbb
lock
jl
push
xchg
ja
or
pop
xchg
popf
fadds
test
cwtl
imul
xor
add
jae
dec
enter
lcall
mov
repz
add
pop
mov
aaa
or
mov
sbb
mov
or
pop
and
dec
popf
sti
outsl
xor
mov
scas
adc
sub
std
xchg
sar
push
mov
sarb
out
xchg
js
xchg
sub
inc
push
fucomi
icebp
jp
add
dec
push
dec
sub
in
jg
movsb
mov
int
pushf
adc
in
cld
loopne
jl
aaa
sbb
adc
test
pop
into
mov
out
push
fimull
fildll
cmpsl
ret
dec
jle
xchg
out
mov
mov
data16
pop
pop
icebp
sbb
out
js
cmpsb
dec
xor
int3
sub
push
imulb
adc
sub
and
jb
fwait
push
inc
hlt
addr16
mov
jp
decl
push
bound
and
in
stos
push
xor
std
cli
push
ret
shrl
out
repz
loopne
clc
jg
je
mov
rorb
and
loopne
test
or
pop
dec
pushl
fisttpl
out
xchg
or
mov
call
inc
idiv
cmp
clc
movups
int3
enter
mov
add
mov
loop
xor
icebp
mov
mov
push
or
jp
sahf
scas
sub
or
notl
push
icebp
jbe
loope
cld
fcmovnu
pushf
rcrb
adc
dec
out
mov
jb
sbb
cs
mov
sub
dec
ss
ret
mov
fsub
dec
push
mov
or
test
clc
adc
cld
movsl
shll
mov
cmp
jns
call
iret
lock
repz
sub
xor
and
pop
sub
inc
into
jbe
sbb
jge
fsubs
xchg
out
pusha
xor
mov
mov
xor
cld
cmp
lahf
js
out
mov
xchg
lods
stos
in
add
push
fstpt
cmp
arpl
push
clc
inc
add
or
adc
jle
movsb
out
push
xchg
scas
mov
and
loope
jg
and
add
mov
dec
ja
jmp
in
jecxz
pop
pushf
lods
insl
adc
push
lret
inc
out
mov
movb
adc
xchg
rcrb
js
aaa
stc
pop
push
or
and
xor
clc
mov
sbb
fnsave
pop
scas
add
adc
add
std
repnz
push
cs
decl
push
xchg
outsl
enter
adc
adc
push
decb
cmpb
pop
adc
int3
mov
out
pop
add
cmp
push
outsl
out
jno
addb
leave
pushf
mov
sar
test
mov
dec
stc
addr16
jbe
jg
cmp
in
rcrb
insb
fidivl
push
out
sti
cmp
gs
jp
pop
jbe
mov
test
and
cs
or
insb
xchg
jbe
mov
jb
gs
mov
dec
hlt
rorb
icebp
std
pop
pop
fbld
fs
cmp
xchg
push
dec
std
xchg
mov
inc
inc
sub
stos
lahf
lahf
scas
cmc
and
jno
lock
mov
dec
cmp
lock
ja
les
arpl
mov
sbb
inc
push
push
xchg
xchg
sahf
clc
decl
incl
push
in
xor
pop
add
or
xor
pop
pop
test
repz
jo
sahf
cwtl
stc
int3
xchg
pop
mov
adc
cmp
aas
add
or
scas
xchg
mov
add
aam
leave
sti
adc
movl
pop
into
and
mov
outsl
mov
xchg
mov
xchg
inc
aas
or
inc
push
add
push
push
mov
outsb
push
add
inc
mov
ds
pop
ss
sti
test
pop
add
out
cmp
aad
mov
rcrb
sarl
aaa
mov
dec
ret
ja
jg
stos
addr16
aad
mov
sbb
scas
or
mov
cmpsb
int3
pop
cmp
xor
ficomps
mov
push
dec
fistps
aaa
clc
popa
pop
push
mov
jbe
fistpll
push
ljmp
sarb
in
ret
mov
add
add
and
cmp
stos
pop
lods
sub
jg
xchg
std
arpl
sti
mov
test
and
mov
mov
pop
bound
jecxz
pop
sub
in
lock
inc
js
daa
cltd
dec
out
lahf
sarb
mov
out
jge
fsubrp
orl
push
out
or
je
jmp
test
add
push
arpl
pop
sti
repnz
and
pusha
test
loop
push
dec
cmp
sti
js
sub
lcall
daa
or
inc
call
mov
jbe
add
push
mov
sbb
pop
in
xchg
std
out
hlt
aas
es
decl
sbb
sti
jo
add
or
mov
mov
fucomip
insb
ja
cmp
into
lcall
adc
hlt
push
jne
sub
test
mov
out
fidivrs
dec
test
adc
mov
or
jg
jg
xor
inc
mov
sub
cltd
xchg
mov
shll
ljmp
jp
jmp
aaa
mov
xchg
pusha
roll
jnp
mov
fsubrs
cltd
cmp
sbb
or
xor
pop
pop
lods
jae
jno
stc
je
ret
lret
xchg
sbb
fwait
in
mov
aad
aam
les
mov
cli
ds
pop
mov
adc
mov
lcall
jp
testl
mov
or
mov
inc
jge
aad
out
iret
cli
dec
sbb
xor
bnd
mov
icebp
pop
out
mov
out
imul
jne
outsb
cmp
hlt
xor
aas
jo
or
dec
fld
lods
cltd
int3
mov
sbb
cli
dec
xchg
mov
add
incl
push
fildll
scas
or
stc
push
jnp
mov
adc
fld
movsb
loop
sbb
fbld
mov
cmp
aas
cmp
sub
idiv
inc
xchg
xchg
test
daa
jge
in
lock
adc
mov
add
xchg
dec
cmp
or
mov
cmp
push
inc
dec
std
dec
add
and
add
lea
insl
out
fdivrl
lahf
xlat
inc
int
je
xor
mov
sbb
incl
inc
lret
lods
lret
rorb
test
jno
mulb
imul
sbb
aas
inc
xchg
inc
lods
mov
daa
mov
cmc
incb
pushf
pop
mov
xor
sbb
cltd
jmp
scas
loopne
or
out
xlat
cli
les
jmp
cmp
divb
xbegin
out
and
xchg
inc
push
leave
mov
pop
lds
loope
js
or
inc
push
jmp
pop
sbb
sbb
dec
outsb
fadd
push
out
andl
lods
inc
inc
mov
stc
decb
mov
and
xor
in
and
js
aaa
push
push
mov
popa
cmpsb
pop
pop
mov
jle
pop
xchg
push
sbb
dec
inc
cmc
pop
and
repnz
iret
xchg
or
sbb
pushf
pop
scas
aad
divl
loopne
pop
punpckhwd
or
ret
movsb
je
outsb
in
lods
decb
pop
mov
cmp
jae
or
test
xchg
push
movsl
xlat
add
add
pop
sbb
out
ficoms
sahf
push
lcall
stc
fstps
pop
push
and
nop
inc
and
dec
in
sarl
mov
mov
pop
adc
jo
int3
call
add
int
lcall
in
pop
push
sbb
sub
cmp
xchg
xchg
sub
adc
jg
call
cmpsb
jecxz
add
xor
adc
nop
xor
xchg
stos
or
and
and
jb
aas
lock
adc
dec
lret
lock
pop
jne
xchg
fdivrl
fstpl
jnp
or
call
mov
and
mov
adcb
fsubrs
mov
clc
xchg
or
imul
jo
adc
adc
pushl
adcb
mov
inc
mov
cld
fucom
mov
cli
ret
in
fisubl
push
aas
out
adc
push
repz
out
fdivl
or
mov
cmp
loope
inc
nop
fwait
ror
jns
out
jmp
ljmp
fimuls
add
jno
jns
not
icebp
fucom
jae
sti
das
adc
jmp
mul
sbb
jmp
cmp
sbb
xchg
sarb
idiv
loope
cmpsl
sub
das
insb
rcl
mov
xorl
dec
mov
sbb
mov
out
aaa
ljmp
sbb
lods
outsl
idiv
pop
xchg
cltd
lahf
lds
jmp
cmc
add
jno
add
jnp
inc
cmp
mov
cld
jecxz
testb
fsubs
jg
in
xchg
pop
fisttpll
inc
inc
xchg
xor
sub
test
enter
in
mov
xchg
sub
stos
stos
mov
mov
decl
sub
insl
push
jae
jmp
cmp
and
add
leave
jb
add
pop
or
daa
cmc
cli
ljmp
mov
add
into
dec
clc
push
test
popf
das
lods
mov
mov
jns
dec
lods
add
add
jno
cltd
push
jnp
dec
ljmp
out
xlat
lahf
pop
in
and
fistpll
das
out
icebp
push
into
jge
push
push
xor
cld
mov
loope
daa
push
lret
mov
fdivrp
popl
sbb
lcall
sbb
jae
stc
pusha
or
sbb
xchg
decb
inc
ja
rcrb
icebp
addr16
imull
and
push
jp
adc
xchg
mov
test
loopne
std
add
loope
int3
mov
ret
mov
imul
mov
jb
aas
push
in
mov
lret
cmpsl
loope
pusha
or
mov
out
push
add
dec
or
nop
xor
jbe
adc
add
xor
ljmp
popa
cmpsl
int3
mov
or
std
dec
and
pop
out
pop
aad
shrl
stos
loope
mov
mov
xor
mov
cmpsb
int
lcall
sbb
and
xor
std
in
icebp
jae
aam
aas
fs
sub
inc
mov
inc
push
pop
jo
cli
out
or
push
cmp
ja
jnp
sub
pop
and
mov
ss
ja
into
jge
inc
aas
call
outsb
adc
cmc
push
pop
mov
lahf
mov
test
out
pop
loopne
xor
clc
stos
iret
xor
std
mov
jg
lahf
les
pop
test
add
div
lea
mov
cmp
sbb
popa
and
dec
inc
sbb
fildll
pop
cmp
roll
rorl
es
cmc
fists
loopne
pop
inc
cmpsl
aaa
cmp
scas
ficoml
sub
jno
jo
mov
nop
mov
xor
movsl
sbb
aas
ret
inc
jl
or
adc
add
sbb
pusha
dec
ja
int
or
lahf
jl
bound
jnp
daa
mov
outsl
add
adc
in
mov
jg
rcll
mov
sbbl
cmp
or
xchg
ljmp
enter
div
lea
pushl
push
or
pushf
loope
cmp
js
push
and
aaa
cmp
xlat
psubb
sti
pop
aaa
cwtl
cwtl
push
scas
ret
ret
jge
pusha
mov
pushl
xor
loopne
lock
inc
mov
add
idivl
hlt
cli
aas
mov
lret
testl
push
leave
mov
mov
bound
js
out
mov
sub
jae
rclb
jb
gs
xlat
xor
fldl
mov
push
clc
insb
cltd
bound
or
mov
nop
push
sub
call
push
out
movb
and
inc
call
xor
cld
test
cli
in
jnp
cmp
outsb
mov
out
cmp
in
pop
adc
int
pop
cltd
addb
and
jg
clc
das
movsb
mov
outsl
lock
or
arpl
and
pop
jg
pushl
rorl
aas
and
push
inc
test
jb
cmp
enter
adc
inc
sti
iret
jb
outsb
int3
jbe
stos
xor
imul
out
into
mov
imul
push
out
mov
and
repz
out
ds
push
mov
jg
js
and
and
test
test
loopne
icebp
imul
mov
dec
test
xor
mov
pop
ret
mov
sbb
stos
mov
push
inc
lds
popf
mov
cld
call
jbe
jle
xchg
repz
adc
arpl
cld
adc
clc
jp
sub
jecxz
jno
ljmp
push
jno
mov
xchg
pop
pop
or
xchg
loopne
ret
xlat
lahf
hlt
jmp
pop
movsb
stc
scas
cltd
in
xchg
call
mov
mov
push
xchg
mov
outsl
shl
or
cmp
xchg
adc
push
subb
dec
dec
cld
inc
decb
cmp
scas
gs
divl
notb
xchg
clc
das
bnd
cltd
int3
fists
jp,pt
inc
or
xlat
pop
add
or
mov
les
add
lock
sti
repz
loop
insb
ss
ss
sbb
ficoms
sbb
mov
fcmovu
and
and
fmuls
mov
mov
xlat
xchg
lahf
sti
mov
int3
int3
inc
mov
sub
lahf
lds
cmpsl
out
out
push
popa
jno
sbb
clc
dec
mov
push
adc
icebp
clc
into
std
adc
sti
outsb
cmc
xor
jmp
jnp
jmp
jb
les
mov
sub
xlat
das
mov
icebp
cmp
xor
add
add
test
and
add
inc
mov
aad
arpl
push
cmp
fmull
xchg
ds
icebp
aaa
ds
pop
call
xchg
dec
fbstp
adc
leave
adc
or
ret
jmp
add
jp
stos
incb
andb
insb
xor
sub
decb
jno
rcll
aas
not
movsl
icebp
mov
stos
add
shll
fidivrs
inc
cld
and
push
xchg
scas
in
mov
xchg
sub
aas
dec
jo
mov
jns
sbbb
mov
incl
adc
jb
dec
addr16
xchg
test
in
out
inc
mov
adc
aad
jno
jne
jmp
incb
mov
ljmp
arpl
mov
loopne
repz
mov
pop
lods
xchg
ja
cmc
xor
fucomp
jb
jg
icebp
filds
mov
xchg
pop
pop
test
fdivr
lock
mov
ds
out
bound
or
pop
out
pop
adc
add
push
les
je
fdivr
out
rcrl
call
jnp
pop
aam
pop
idiv
mov
out
or
push
pop
leave
xchg
push
mov
xchg
cmc
and
pmuludq
hlt
out
adc
mov
push
mov
in
jo
pop
in
lds
pushl
cld
sub
loope
sbb
mov
mov
and
jp
mov
mov
das
sbb
ljmp
dec
subl
add
mov
cmc
lar
call
mov
and
stos
js
inc
cmpsl
push
int3
pop
imul
jge
ret
pop
jg
fimuls
jo
fidivrs
jb
mov
push
loope
cmp
push
test
outsb
inc
out
sub
sbb
pop
mov
filds
xchg
xchg
test
mov
mov
mov
int3
add
push
pop
out
cld
mov
std
adc
jne
mov
pop
jmp
arpl
pop
adc
adc
or
insl
sub
out
imul
out
mov
aas
cs
sarl
jnp
jg
mov
sub
inc
cld
ja
icebp
pop
push
ss
cltd
and
push
inc
repnz
jl
sti
out
sbb
mov
test
icebp
mov
xchg
lcall
out
push
inc
out
lahf
hlt
xchg
sbb
push
insb
decl
xchg
pop
xor
out
adc
scas
sub
xor
push
push
push
pop
in
inc
insl
push
lods
push
std
pop
in
or
adcb
or
cld
in
xor
clc
jg
jg
mov
adc
test
lods
jl
fidivs
outsl
dec
pop
push
loop
fistps
jo
pop
nop
jno,pt
dec
add
int
outsl
mov
jg
clc
ja
pop
jge
lds
pop
jmp
fcmovnu
xor
cmp
frstor
stc
psubd
das
jge
aad
inc
push
decl
divl
fs
loopne
sub
jbe
adc
mov
dec
jno
pop
sbbb
jae
jle
and
repz
dec
mov
rorl
addl
jmp
and
shlb
or
shlb
xchg
pop
mov
in
scas
xlat
mov
xchg
ret
fcoml
mov
arpl
lock
push
ljmp
add
or
mov
pop
idivl
movsl
cmp
mov
and
pop
loop
xchg
das
xor
xchg
jbe
lock
lds
popf
xchg
pusha
cmp
inc
dec
lods
mov
mov
jns
or
roll
repz
cmp
icebp
mov
push
ljmp
in
std
lret
cmpsl
cmp
xor
xor
sti
jmp
aaa
insl
je
sub
xor
mov
test
jg
rclb
scas
add
adc
jne
mov
js
inc
dec
out
jnp
and
mov
call
gs
push
add
pop
cld
pop
sbb
pop
out
movsl
lret
jg
push
sbb
fcomps
sub
hlt
mov
fsts
jmp
fxch
cpuid
sub
or
sbb
pop
mov
fidivl
incl
mov
push
loopne
jbe
idiv
out
push
jo
push
or
adc
pop
mov
dec
xchg
iret
fcomp
lds
xlat
ret
jg
sbbb
idiv
mov
push
das
sbb
loope
in
std
lahf
ja
test
xor
hlt
aad
mov
repz
jns
fldl
push
clc
enter
dec
aaa
pop
sub
std
es
cmp
jb
ffreep
call
mov
push
mov
jnp
test
idiv
addr16
xor
sub
xor
in
stos
jnp
adc
add
mov
sbb
and
jnp
div
jbe
in
shrl
mov
pop
cld
scas
jg
cmp
std
ds
pushf
pop
movsl
nop
clc
clc
imul
js
jnp
decb
mov
xor
xlat
cmp
xchg
pop
or
and
xchg
in
arpl
imul
and
fildl
and
test
pop
adc
aas
sbb
push
pop
sub
loope
imulb
fcomi
cli
sub
pop
addr16
lret
push
lods
outsb
sub
sbb
mov
imull
cltd
and
std
jnp
scas
aas
push
sbb
mov
mov
cli
lea
push
lcall
push
mov
jnp
mov
das
adc
test
mov
addb
cmpsb
sub
loope
ss
mov
jae
icebp
movb
mov
or
fucomp
mov
aad
mov
testl
roll
xor
insl
add
sub
and
lods
jge
mov
bound
add
sbb
mov
lock
es
push
and
ret
ret
inc
xchg
mov
pop
xchg
or
icebp
fucom
jg
dec
sti
add
pop
jmp
sub
mov
adc
ljmp
repnz
fwait
pop
pop
popa
sbb
push
cmp
cltd
xchg
out
add
out
push
xor
icebp
insb
cmpsb
loope
xchg
jecxz
jmp
mov
cli
ja
sbb
adc
fnstsw
mov
and
adc
mov
subl
gs
aas
fidivl
pusha
ret
ja
fs
add
xorl
jg
adc
adc
popl
outsb
pop
and
pop
mov
cmpsb
lds
xlat
mov
jle
jmp
xchg
dec
adc
stc
aad
push
or
in
std
scas
adc
xchg
jnp
sbb
and
lret
aad
popf
dec
mov
adc
aas
dec
jmp
es
test
push
movsl
or
push
rcrl
or
jge
jge
fimuls
inc
inc
dec
sub
fistps
xchg
sar
into
pop
out
fs
stc
daa
outsb
push
pop
jg
mov
fnstcw
or
xchg
mov
roll
mov
mov
out
mov
inc
cmc
sar
sbb
inc
lds
divl
sub
mov
mov
loopne
xor
adc
or
mov
ljmp
in
cmp
xor
jmp
xor
xlat
out
adc
xor
stos
dec
das
or
sub
cmp
or
push
rolb
add
fdivrl
daa
cmp
frstor
movsb
sbb
js
pop
aad
inc
mov
stc
jns
call
adc
es
jae
scas
jp
repnz
jmp
pop
push
pop
dec
fucomp
jg
and
rcrl
lock
cmpsb
or
addl
fistps
addr16
sub
inc
dec
daa
pushf
xchg
mov
orl
push
mov
jp
jns
lret
test
stos
sahf
sti
pusha
popf
ljmp
xor
lahf
aad
inc
dec
aad
sahf
jp
add
pushf
add
ret
push
call
cmpsb
enter
xor
add
pop
fwait
gs
add
dec
outsl
in
cld
pop
jmp
push
sarl
mov
mov
mov
inc
and
pop
jl
out
out
lods
stc
mov
jns
jmp
lret
iret
sub
and
movsl
xlat
popa
fisttpll
cmc
mov
pop
or
divl
lock
dec
into
cli
mov
adc
xchg
xlat
add
jecxz
idiv
test
mov
lods
repz
adc
inc
jno
xor
neg
pusha
mov
xor
ror
ret
cld
inc
sahf
push
in
aad
cmp
shl
dec
arpl
loop
nop
sub
imul
and
jnp
sub
stos
dec
aaa
mov
lahf
adc
pop
icebp
adc
out
xchg
sbb
adc
jl
adc
lods
xlat
jns
stos
xchg
insb
push
lcall
imull
sbb
out
les
ficomps
aas
out
dec
scas
cmpsb
xchg
mov
xor
rolb
pop
cmc
fisttps
rorb
mov
cli
mov
pushf
mov
mov
and
rcrb
out
movaps
lret
sbb
popf
test
dec
cli
pop
rcrb
clc
out
pop
loop
daa
xor
popa
xchg
jle
jmp
and
aam
movsb
and
and
xchg
or
push
mov
jae
sbb
pop
mov
outsb
cs
jmp
sub
out
fcompl
rolb
dec
enter
sti
or
sub
test
fmuls
std
sub
sbbl
cli
imul
adc
data16
leave
cmp
pop
lock
cmp
in
add
std
fistpll
shrl
and
ret
pop
jp
rcrl
sbb
in
jle
or
fstp
jno
inc
jl
xor
scas
cmp
lret
mov
daa
and
gs
dec
dec
shl
repnz
or
lds
inc
xor
push
out
imul
shrl
ljmp
cli
or
adc
or
xchg
aam
in
or
push
mov
cmp
xor
outsb
cmp
adc
ja
mov
cli
xor
dec
push
dec
ss
add
sbb
cmc
or
pop
adc
pushf
insl
dec
je
icebp
sbb
andb
pop
hlt
adc
call
das
ja
sbb
cli
lahf
aas
fwait
std
pop
sub
xor
cmp
popf
jg
inc
mov
jne
loope
adc
mov
pop
jmp
cmc
pop
mov
xor
movsb
adc
and
les
mov
jecxz
arpl
daa
inc
cltd
shll
call
std
out
inc
mov
mov
insb
cmp
std
fdivr
repnz
loopne
pop
aam
add
cmpxchg
test
inc
cld
push
insl
add
push
cld
and
adc
xchg
decl
lock
push
add
loope
idiv
sub
sbb
sbb
out
dec
mov
mov
lock
sti
push
incb
sbb
outsb
or
jmp
enter
addl
push
icebp
arpl
cmp
adcb
stos
mov
loopne
cmp
mov
fiaddl
mov
out
std
aas
lods
mov
push
int
add
mov
xchg
imul
pop
and
pop
loopne
repnz
inc
imul
mov
out
pop
dec
mov
cwtl
bound
push
dec
mov
jp
add
sub
pushl
adc
push
clc
movsl
fdivs
cmc
fisttps
int3
out
jbe
jno
pop
mov
sub
pop
shrl
xchg
stos
dec
xorb
or
cmovae
pusha
fcomps
jg
std
and
rcrb
xor
push
xchg
dec
mov
sub
test
pop
repz
or
cld
fnstsw
shl
xchg
cmpsl
or
mov
dec
loop
ja
rol
jae
sub
cli
xor
outsl
adc
insb
xchg
stos
cmp
push
jbe
jno
or
jl
loopne
sbb
les
lock
dec
xor
adc
lock
dec
arpl
out
lock
es
mov
inc
add
jb
jmp
pop
das
lahf
add
xorb
and
mov
repnz
jo
sbb
out
cmp
pop
mov
cmp
cmp
sbb
in
test
push
arpl
jbe
pop
scas
lock
inc
sti
adc
sub
pusha
add
ret
loope
lods
dec
fsubrp
mov
lock
mov
daa
out
mov
aas
add
sub
out
cli
ds
pop
in
mov
imul
inc
pop
sahf
scas
jno
sub
pop
pushl
add
mov
stos
fucomi
mov
jne
cmpsl
adc
jo
sbb
bound
loopne
jne
or
loop
jno
cli
aas
pop
ret
sub
paddsb
gs
sbb
aaa
leave
es
cmpsb
outsl
cmpsb
cmpsb
jmp
cmp
jg
insb
xorb
mov
push
add
mov
mov
push
and
jbe
sbb
shl
xor
lea
pop
sub
les
cmpsb
jp
lret
addr16
mov
push
cmpb
mov
aad
jl
addl
jnp
mul
or
jmp
cwtl
insb
push
iret
hlt
sub
in
push
push
js
pop
cmp
cld
pop
mov
in
loop
test
push
leave
aaa
jecxz
or
jbe
pop
es
mov
inc
sub
xor
push
scas
ds
popa
dec
out
and
pop
xor
mov
scas
cld
ret
test
sbb
mov
mov
comiss
nop
jne
test
mov
cmp
sbb
lahf
inc
fistps
mov
je
andb
daa
cmp
adcl
arpl
test
or
lcall
pop
sub
call
cld
out
sbb
mov
adc
lret
cld
pop
add
jp
push
dec
jle
cmpsl
dec
std
sub
mov
sub
pop
andb
imul
enter
xor
pushf
sbb
push
je
pop
xchg
adc
in
dec
sub
mov
out
cmp
test
jg
push
movsl
flds
or
out
imul
stc
loopne
pop
shrb
jmp
jg
dec
adc
sub
mov
xor
mov
movsb
adc
dec
aam
lea
xchg
push
or
add
cltd
sar
cmp
mov
sbb
inc
or
mov
pop
add
and
divl
mov
mov
push
in
xor
mov
mov
jo
inc
xor
pop
jno
pop
jecxz
lahf
sti
pop
jp
and
dec
fyl2xp1
movsl
clc
jnp
cmpsl
stc
or
jmp
loop
loopne
mov
adc
mov
and
insb
cmc
pushf
enter
xchg
dec
add
or
ds
mov
xor
and
jle
cmpsb
xchg
jmp
pop
cltd
leave
add
and
mov
icebp
cli
mov
dec
clc
and
lds
not
xchg
sub
pop
mov
mov
std
mov
clc
or
xchg
sbb
lods
ret
loopne
xlat
mov
and
jo
neg
mov
cmpsl
mov
inc
into
sub
addr16
inc
sub
or
cltd
add
leave
lods
in
lock
out
cmpsb
push
ss
iret
or
xorb
fucom
out
data16
add
jmp
sub
and
test
xor
mov
sbb
push
or
add
push
std
test
sub
add
mov
cmp
inc
ljmp
push
lock
mov
push
add
loopne
das
fs
push
push
imul
mov
push
lds
push
add
mov
xchg
lret
mov
and
or
dec
push
dec
sub
and
call
bound
int3
add
xchg
std
or
pushf
std
jo
mov
jecxz
cmp
add
dec
pop
sbb
inc
jmp
lock
pop
outsb
push
dec
dec
cmp
clc
or
adc
xlat
in
fldenv
lods
jne
push
iret
sub
decl
push
pop
or
in
sbbl
fnstenv
cmp
in
rcrb
jmp
aad
ljmp
orl
mov
shll
mov
rorb
outsb
fnsave
pushf
mov
fmull
and
jo
inc
adc
adc
pushl
push
xchg
in
aas
out
cs
cmp
psubsw
push
add
cltd
aas
leave
std
lcall
out
int
nop
adc
test
sahf
pop
dec
dec
clc
jg
jg
adc
shll
mov
mov
cli
sbb
hlt
jns
outsb
ficoms
xchg
push
es
fldenv
loopne
mov
std
pop
es
adc
jbe
sbb
dec
mov
fsubrs
cmp
and
inc
jle
jecxz
cli
jg
aad
mov
das
pop
sub
jecxz
lahf
inc
call
mov
pushf
rorb
rclb
arpl
ret
mov
fdivrl
mov
push
mov
insl
mov
call
jp
std
je
das
shlb
push
sbb
loopne
ja
jmp
xor
js
pop
sub
fs
stos
push
jl
pop
test
push
jne
mov
xlat
shlb
or
pop
mov
mov
mov
loope
les
idiv
and
inc
xor
imul
jb
cltd
loopne
xor
jnp
testl
fwait
scas
es
out
repz
xor
push
lock
sub
mov
and
cld
hlt
ds
pop
push
ret
icebp
inc
ficoms
std
out
lock
mov
sbb
aam
adc
fcompl
aas
inc
mov
mov
mov
push
push
xchg
xlat
inc
insb
dec
mov
stc
pop
sbb
and
ss
inc
js
jne
xor
mov
test
pop
lcall
mov
push
mov
and
jbe
std
rclb
mov
xorb
sub
adc
sbb
bound
in
jmp
in
icebp
out
sub
mov
xchg
lock
or
mov
mov
xchg
fidivs
push
ljmp
mov
cmp
or
fldenv
sahf
pop
adc
enter
in
mov
pop
or
incl
fsts
cmpsl
xchg
cmc
les
jg
sbb
test
cmp
dec
mov
sti
cs
out
mov
loopne
pop
filds
ret
push
out
iret
in
xor
pop
or
xor
decb
lret
ret
inc
aam
cmp
cmp
add
or
xchg
clc
pop
scas
call
shl
and
popl
ja
cmp
mov
stos
mov
xlat
pushfw
orl
adc
clc
mov
and
dec
cli
jb
decl
ljmp
subl
inc
or
lds
mov
pop
jbe
test
gs
jg
push
shrb
and
sub
add
adc
jp
jg
decb
xor
cmp
xchg
lcall
xchg
or
and
mov
es
dec
clc
lahf
sti
out
ja
inc
std
mov
roll
std
dec
lret
ret
add
arpl
push
cmp
pop
stos
setno
bound
aas
sbb
movsl
out
hlt
arpl
xchg
xor
adc
shlb
repz
ss
scas
fistpl
divb
jg
sahf
jnp
cld
adc
dec
icebp
mov
jmp
dec
or
fadds
jb
adc
dec
bound
mov
mov
loopne
jecxz
xor
xor
ficompl
inc
int3
lds
std
lea
fwait
sbb
pop
pop
cli
frstor
fsubs
push
inc
and
sahf
inc
xchg
jg
push
std
cli
out
leave
dec
in
sub
testl
aas
xchg
stc
push
xchg
test
xchg
lcall
xchg
mov
imul
stc
mov
lret
je
aas
adc
mov
xchg
das
divl
decl
ja
cmp
jb
xchg
fsubr
sar
mov
cmp
mov
pop
sub
lea
pop
js
out
cld
mov
sub
xchg
push
shrb
add
bndldx
push
aas
stos
std
daa
loope
fisubl
jecxz
lds
je
sbb
popf
xor
int
mov
xor
bound
ror
xchg
fwait
gs
mov
jge
mov
xor
ljmp
lahf
lahf
mov
insl
test
pop
sub
test
and
xchg
xchg
mov
mov
jge
testl
imul
sti
fistpll
adc
insl
xor
sub
scas
pushf
gs
das
mov
cmp
xlat
loop
sub
pop
in
or
dec
sbb
xchg
insl
mov
icebp
loop
sahf
sbb
fistl
cld
push
add
es
push
adc
pop
pop
rclb
jp
sub
fucomp
jnp
test
sub
ljmp
insl
aaa
stos
or
mov
test
shr
sti
push
xchg
jge
jns
popf
movsb
cmpsb
mov
pop
fsubr
dec
or
or
mov
pop
push
movsb
fisubrs
loopne
aam
sbb
push
lcall
xorl
out
test
sarl
mov
adc
push
pop
hlt
jbe
jg
jmp
sub
mov
popa
repnz
cld
data16
out
adc
push
mov
fisubrs
inc
in
out
fmul
roll
inc
push
push
inc
jg
jle
sar
adc
aad
push
sarb
jp
inc
dec
loop
sbb
test
mov
jmp
test
je
lea
shl
loop
cwtl
pop
cmp
in
dec
inc
push
jmp
fwait
cmp
or
test
loope
lret
pop
pop
out
or
and
popf
inc
fwait
pushf
outsl
into
push
jg
incb
adc
cmp
xchg
icebp
xchg
lods
or
xor
js
xchg
in
mov
ds
jg
mov
sbb
pop
fistpll
mov
lcall
cmpsb
insb
les
loop
pop
jp
clc
mov
push
gs
xor
sti
aas
cmpsb
dec
fcmovnb
dec
or
inc
add
and
arpl
or
pop
in
add
mov
int3
push
pop
dec
aas
push
lds
std
cwtl
xchg
call
jle
mov
addl
jmp
and
out
scas
and
sub
idiv
or
or
pusha
popa
lods
sub
cmpsl
incl
jg
mov
jne
inc
test
nop
data16
fistpll
mov
mov
scas
decl
dec
in
mov
jmp
mov
sbb
pop
add
pop
xor
fldt
loopne
jmp
cmp
ret
dec
jo
fs
insb
popl
icebp
setnp
aas
xchg
xchg
dec
mov
test
or
lret
test
outsl
adcb
or
sbb
into
std
lea
xchg
xchg
sbb
nop
test
mov
mov
movsl
add
jno
loope
js
movsl
and
push
inc
iret
inc
test
nop
push
jecxz
rorl
push
inc
xchg
int
adc
ss
xor
adc
sbb
outsb
or
nop
leave
icebp
int
sbb
mov
or
push
mov
pop
jge
mov
shl
cmc
inc
das
inc
mov
call
dec
leave
jg
jmp
pop
sbb
pop
loop
and
ja
and
int
dec
outsb
mov
adc
cmpsl
pop
and
movb
hlt
repnz
cltd
pop
js
dec
cmpsb
fimull
mov
mov
xchg
pop
fdivs
aad
enter
icebp
es
lcall
jl
jle
push
and
psraw
and
rcll
mov
jnp
roll
jmp
cmpsb
fcmovb
xchg
jg
fistpll
in
dec
mov
jecxz
popf
inc
adc
outsl
sub
add
inc
fadd
cmc
iret
pusha
push
jnp
repz
xor
sti
fucomip
pushl
lds
or
and
pop
sub
lds
push
ret
dec
lcall
mov
sahf
sbb
out
dec
cmpsl
decl
cmp
xor
cmp
jge
jp
dec
inc
pop
dec
es
rclb
ljmp
aas
popa
adc
adc
inc
cld
jg
sub
xor
or
pop
adc
repz
cmpsb
cwtl
insl
loope
mov
les
divl
adcb
imull
ficomps
lods
in
and
je
idiv
fdivr
xor
cs
repz
loopne
jae
push
clc
stos
std
imul
idivl
mov
dec
mov
stos
push
mov
fcmovnb
jge
in
and
lods
adc
les
xchg
inc
pop
jl
negb
rcrl
pop
pop
pop
bound
in
mov
nop
divb
xchg
push
sbb
add
movsl
jbe
das
mov
sti
push
repnz
sub
xor
mov
sbb
sub
leave
lods
into
and
scas
cmc
inc
sub
push
outsb
lock
pop
fbld
cwtl
fsincos
dec
adc
xchg
cmp
cmp
ret
jle
lock
add
lcall
mov
cld
or
cmp
xlat
jg
jg
in
xchg
inc
lea
outsb
les
aas
ja
mov
push
jbe
out
int3
popa
or
std
xchg
pusha
and
aaa
shlb
xchg
mov
fisubrl
pop
icebp
push
and
test
mov
xor
aas
jecxz
fidivl
idiv
movsl
and
leave
dec
dec
add
icebp
jg
sti
imul
adc
lock
and
out
or
mov
shrl
xor
mov
jmp
mov
xchg
inc
cmp
test
mov
pushl
std
fldt
cmp
sbb
pop
pushl
cmp
insb
jmp
and
ja
imull
adc
push
inc
pop
push
jnp
decl
test
add
imul
jg
jl
les
stos
or
mov
inc
ret
scas
inc
fwait
add
inc
mov
stc
dec
xchg
std
popa
mov
mov
cld
or
jnp
mov
push
les
sub
jb
fbstp
pop
pop
mov
movb
fistpll
rclb
mov
adc
mov
add
popf
xor
jmp
xor
jle
adc
pusha
rol
pushl
mov
movsb
cli
arpl
scas
ficomps
out
hlt
aas
mov
inc
sbb
sar
pop
movsb
adc
mov
es
mov
jbe
dec
jo
mov
sbb
inc
mov
aad
lret
loop
mov
pop
lcall
fists
addr16
add
dec
add
push
jnp
sti
push
pushf
not
pop
xchg
pop
and
or
cmpl
xlat
pop
mov
test
iret
cmpl
js
inc
repz
sub
pop
pop
std
scas
push
push
push
cli
scas
add
loop
scas
mov
loopne
mov
xlat
imul
jae
inc
mov
or
sub
dec
jg
jg
jmp
cmp
aas
out
xchg
push
outsb
aas
jno
pushl
clc
cs
lea
mov
jl
adc
or
mov
pusha
jb
jne
jb
test
xchg
mov
jecxz
mov
std
jmp
mov
xchg
adc
mov
jl
cwtl
jmp
push
jno
lret
adc
cld
arpl
mov
clc
xchg
gs
lcall
out
test
mov
sbb
in
sti
outsb
push
gs
inc
sbb
and
push
xchg
add
add
xor
fstps
idivb
outsb
mov
negb
popf
push
outsb
mov
test
incl
das
mov
xchg
jnp
loopne
cwtl
js
mov
cmpsb
push
mov
sub
jle
jp
add
or
or
daa
lcall
incl
push
or
pusha
scas
cmc
cld
jne
adc
icebp
call
or
fists
pop
stos
mov
iret
into
dec
xchg
idiv
aas
push
outsl
cmp
in
sbb
pop
cli
push
cld
pop
adc
shll
int
mov
repnz
aas
notb
adc
or
pop
cli
inc
fldl
mov
cmc
pop
mov
testb
in
in
mov
mov
cld
int3
stc
jge
cmpsl
std
sub
adc
mov
xlat
hlt
push
mov
movsb
movsl
dec
loop
movsb
cli
popa
cwtl
jg
lret
pop
xchg
jmp
adc
jnp
xchg
push
cmp
jmp
ss
andb
aas
sti
call
xlat
xor
es
in
movb
mov
inc
fisubrl
nop
push
pop
fs
xchg
mov
adc
xchg
add
and
hlt
fstpl
shr
or
aas
mov
fisttpll
fisubs
push
jle
fistpll
fisttpl
fwait
mov
jle
es
xorl
mov
jecxz
ljmp
mov
icebp
das
add
sbb
jb
mov
sbb
xchg
and
jg
aad
nop
sbb
cmp
test
aaa
cmc
sub
or
loopne
fsubrl
inc
call
imull
mov
adc
xchg
mov
mov
clc
cmc
add
fistpll
fildll
cs
dec
xchg
loope
sbb
add
sub
adc
dec
sub
lahf
adc
sbb
sarl
sbb
jo
out
clc
jnp
pusha
cmpsl
test
sahf
xor
inc
jge
out
jnp
fimuls
test
jmp
xchg
jns
mov
lret
jle
pop
sbb
sbb
push
repz
jb
pusha
sub
fistps
dec
jo
fisttpll
push
outsb
pop
icebp
fucom
imul
fmull
pop
pushl
fstpt
cltd
jp
xorb
insb
cli
test
popf
loop
fdivr
jbe
das
je
dec
sarb
cli
std
push
and
cmpsl
lods
cmp
jbe
jp
adc
aas
and
dec
or
sarl
sti
scas
or
mov
test
aaa
mov
mov
or
frstor
mov
dec
cmp
mov
jle
cmp
sbb
adc
popl
cmpsb
bound
int3
mov
ds
pop
add
test
jbe
div
sub
lcall
mov
fmuls
in
jg
mov
lahf
add
jg
push
sbb
aaa
int3
insl
negb
stos
lahf
rcll
xchg
test
push
hlt
arpl
mov
imul
int3
lcall
cmc
data16
ret
xchg
popa
sbbl
or
or
mov
cltd
jno
out
hlt
jg
sub
nop
sub
adc
push
adc
shlb
push
lret
gs
fisttps
mov
jae
cmp
jno
ds
aas
push
jmp
jmp
repz
outsb
mov
and
insb
es
lcall
xchg
sbb
dec
je
and
dec
pop
sub
test
inc
and
sbb
aas
in
and
sti
dec
push
jecxz
sbb
sub
js
nop
push
fidivrl
xor
inc
cs
test
push
cld
or
call
push
mov
jb
lcall
hlt
loope
popa
in
mov
testl
dec
aam
and
loope
xorl
jg
jl
sahf
aam
sub
iret
pop
inc
stos
mov
dec
lcall
xchg
mov
and
in
das
cld
push
dec
mov
lock
pop
pop
sti
pop
sub
cmpsl
dec
xchg
inc
add
mov
rcrl
push
xchg
mov
dec
ja
mov
dec
adc
or
js
aaa
inc
xor
data16
jmp
pop
push
ljmp
les
mov
adc
popf
nop
sti
pop
jecxz
adc
dec
add
adc
cs
add
out
arpl
ret
adc
adc
adc
std
movsl
je
mov
test
add
cmpsl
pop
mov
mov
mov
sub
xor
xlat
inc
pop
out
cmp
in
jmp
lea
dec
ja
scas
idiv
cmp
shll
xchg
cwtl
filds
jmp
adcl
mov
lds
dec
jno
and
add
leave
adc
sub
push
jnp
inc
test
lret
mov
mov
icebp
pop
test
adc
sub
insl
jnp
loope
adc
hlt
stos
in
jge
mov
dec
cmp
push
mov
dec
or
pop
cwtl
inc
add
pop
addl
popf
jo
scas
lret
out
data16
mov
mov
push
xor
call
aas
testl
outsb
or
stos
lods
ffree
cmp
femms
loop
lret
pop
xor
mov
lcall
dec
mov
cmpsb
sub
daa
pusha
or
mov
xlat
std
pop
stos
outsl
adc
movsb
imul
cs
imul
inc
js
cmc
and
aaa
adc
add
xchg
lret
sub
xchg
sbb
fnstsw
call
jmp
lock
mov
ret
decl
sarl
sbb
ja
daa
lret
xchg
cwtl
mov
popf
stos
les
ja
lcall
add
mov
push
push
notl
jmp
dec
jg
dec
inc
mov
inc
jo
loope
cwtl
loopne
mull
mov
imul
lock
popl
adc
scas
and
mov
ja
mov
xor
xchg
and
mov
das
imul
pop
fdivrs
std
mov
pop
shll
mov
ss
das
pop
push
xchg
pop
mov
inc
mov
cmp
ja
aaa
xor
lock
jmp
push
or
andl
jmp
adc
out
xchg
gs
cmp
jne
ja
mov
cmpsb
push
rcrb
in
adc
cmp
mov
xchg
and
cmpsb
js
sar
sub
add
arpl
mov
call
jg
lods
loop
int3
and
into
sub
sub
inc
hlt
popf
push
adc
add
inc
fcomps
psrad
dec
mov
fbstp
cld
pop
cmp
jbe
imul
stos
lods
xchg
arpl
cld
fbld
xchg
pop
psrad
addb
shrl
xchg
andb
test
nop
adc
jg
mov
ds
add
aas
idivb
or
out
jns
fistpll
pop
js
lods
xor
sahf
xchg
mov
mov
sahf
mov
aaa
inc
cli
filds
cmp
addr16
dec
dec
mov
xchg
and
inc
jo
push
popf
out
inc
ficomps
call
mov
out
pop
jae
xor
cmc
jle
out
cmp
pop
add
cmp
fdivl
popa
mov
inc
test
fwait
xchg
loopne
dec
mov
mov
and
jge
cmp
aas
add
adc
inc
lahf
sbb
stc
lcall
loopne
cltd
mov
outsl
test
inc
stos
cmp
sbb
add
pop
lds
ljmp
cmp
jp
sbb
iret
sub
stos
rcl
mov
inc
enter
outsl
js
gs
rcr
pop
sahf
hlt
fisttps
ja
clc
ja
insl
lock
mov
test
xchg
add
ret
sti
insl
lcall
cmp
adc
ret
loopne
fimuls
mov
or
jb
mov
lock
clc
cmpsb
out
in
stos
push
push
and
neg
loope
inc
add
outsb
test
fisubl
and
mov
sar
cmpsl
and
push
push
dec
mov
pop
jno
addr16
cmp
jnp
aam
or
xor
sahf
xchg
das
push
incb
jmp
out
lahf
and
xchg
add
shlb
jnp
inc
fnstcw
sarb
jmp
sub
mov
inc
add
cmpb
inc
ret
into
inc
std
pop
push
dec
sub
stos
out
xor
sbb
pop
adc
pop
xchg
lock
mov
xor
jbe
xor
scas
aaa
pushf
jecxz
cmp
sbbb
out
mov
cmc
jae
sbb
and
mov
lods
fcomp
ja
fbld
push
fldenv
sub
xor
pop
in
mov
or
jp
addr16
popf
sub
sbb
add
push
cmp
mull
jo
sub
test
xor
lods
xchg
dec
push
and
dec
dec
call
jbe
xchg
aam
repz
adc
sbb
lods
imul
mov
pop
pusha
cmp
loope
loope
add
icebp
or
out
movsl
fcomps
in
std
pushl
fwait
cmp
cs
inc
xor
in
scas
shlb
cs
ret
dec
mov
mov
sbb
sahf
and
inc
loop
in
je
xchg
inc
mov
clc
cmp
mov
mov
sub
xlat
stc
adc
mov
je
and
pop
add
or
jle
mov
push
add
jg
test
jp
nop
clc
or
orb
lcall
xchg
test
aaa
add
addr16
loop
ljmp
cli
mov
fdivrl
mov
arpl
jg
pop
iret
mov
inc
fstp
dec
sarl
ljmp
xchg
rcr
jg
xchg
in
sub
pop
mov
dec
jo
lsl
pop
fxch
lahf
add
in
xchg
iret
arpl
ja
idiv
outsl
adc
sub
jne
rol
lcall
in
iret
mov
xchg
push
add
hlt
loopne
lds
cmp
jmp
pushf
andl
lret
fmuls
xchg
scas
int3
out
faddl
and
push
jg
call
inc
jae
jb
push
imul
clc
aas
xchg
lahf
and
xor
cli
cwtl
sbb
cmp
das
dec
add
daa
inc
sub
inc
cmpsb
mov
call
leave
ja
insl
movsl
add
mov
fidivrs
inc
fdivrl
arpl
push
pop
divl
lea
mov
lods
mull
jnp
pop
sbb
cmp
nop
lock
or
xchg
mov
pop
push
adc
pushf
push
inc
mov
jb
push
jmp
sbb
sub
shrl
in
mov
cmc
je
and
mov
jb
jecxz
cmpsl
jnp
adc
je
daa
inc
cmp
push
aas
xchg
int3
push
cmp
jbe
sbb
mov
dec
xor
call
add
cltd
adc
cmc
out
sbb
jmp
jns
inc
les
out
lcall
insl
inc
jmp
loope
es
into
cli
mov
mov
inc
cmp
mov
mov
mov
lock
out
adc
pop
push
and
jne
xchg
jmp
mov
xchg
divb
fwait
call
add
mov
lcall
mov
jno
push
clc
pop
pop
leave
mov
cmpsb
dec
pop
and
ja
sub
pop
ret
sbb
xor
imull
or
call
nop
jge
push
cmc
pushf
jmp
mov
jg
mov
add
daa
in
lcall
sub
push
jbe
dec
cmc
js
lahf
lret
mov
sbb
xorb
lcall
daa
daa
xchg
add
xchg
xor
rcrl
adc
and
jb
je
dec
std
sub
push
mov
daa
sbb
mov
and
inc
shll
aad
jno
aas
push
push
aas
sbb
or
test
add
ja
mov
les
enter
mov
jl
js
xchg
add
pushl
or
jne
add
push
loope
pop
or
jge
xchg
cltd
pop
aas
in
outsb
rcrb
cmp
inc
xchg
dec
and
das
lcall
sar
cmp
xor
andl
out
hlt
je
push
add
push
xor
call
xor
test
mov
nop
fnstcw
jbe
shll
aas
daa
inc
sub
push
mov
mov
lds
adc
mov
xchg
pop
fmull
call
pop
mov
sbb
divl
sahf
adc
adc
pop
rorl
cmp
adc
mov
roll
daa
adc
decb
mov
push
stos
lods
mov
push
mov
ds
imul
fdivrp
add
stc
xchg
rcll
test
repz
xchg
ficoms
rcll
pop
xorb
cmpb
into
xchg
xor
shrb
pop
test
mov
scas
lock
insb
stos
or
por
mov
or
mov
push
jmp
popf
mov
pop
popa
dec
sti
sub
jg
sub
rcrl
mov
es
sub
ja
fiaddl
jmp
pop
addr16
pushf
xchg
dec
into
push
push
sub
in
aad
mov
cld
pop
or
cmp
rcrl
jmp
xchg
mov
mov
loopne
pop
test
insl
mov
add
lock
sahf
mov
jl
cld
shrl
andb
pop
cmpsb
arpl
add
jge
mov
rcll
add
int
mov
pop
lods
pop
mov
xchg
add
ficomps
jmp
out
cld
cwtl
dec
jno
cs
pushf
xor
nop
mov
sbb
aas
lock
add
fnstenv
push
out
xor
mov
jb
jl
mov
mov
or
add
sub
icebp
mov
pop
out
pop
push
xor
jo
std
popf
sbb
cld
adc
push
jg
and
addr16
loop
scas
mov
hlt
adc
movsb
cmc
push
lds
xor
push
inc
fmuls
mov
fists
dec
inc
fwait
sbb
sub
dec
push
mov
pushf
and
stos
xor
jle
ljmp
mov
jno
adc
add
testl
mov
inc
jno
dec
xor
fs
xor
les
adc
inc
push
orl
stos
xchg
nop
out
aas
ret
repnz
mov
imul
cmp
sbb
gs
and
clc
iret
jno
div
adc
cmp
xchg
icebp
dec
and
pop
rolb
xchg
punpckhdq
fcomi
adc
xchg
loopne
clc
inc
lret
inc
sub
repnz
loope
lods
mov
pop
mov
cmpl
adc
aas
cmp
jp
mov
sbb
ja
mov
icebp
or
aaa
mov
dec
jle
mov
lcall
fadds
mov
adc
jmp
cld
xor
cmp
cld
inc
mov
out
popf
mov
hlt
inc
loop
dec
addb
loop
and
icebp
inc
jnp
test
pop
xor
adc
imul
mov
and
mov
mov
xchg
push
call
mov
and
jle
jae
pop
sub
and
push
pop
arpl
adc
std
cmp
cmpsb
fdivr
add
les
scas
jmp
mov
and
or
adc
cmp
test
lahf
cmc
cmp
into
int3
movsl
mov
sbb
jae
jo
rcrl
pop
and
dec
dec
je
cmp
aad
lea
sbb
lretw
and
mov
add
inc
and
push
and
out
pop
add
push
sbb
dec
popa
jmp
mov
cmp
sbb
mov
mov
and
fldt
jb
push
cld
nop
ret
pop
cmp
xor
mov
jg
xchg
dec
push
jno
cmp
jo
out
mov
mov
and
sbbl
outsb
repnz
jg
stos
fsubrp
sub
das
inc
push
test
hlt
ss
mov
out
lods
add
lock
ret
aam
push
sbb
popa
out
aas
loopne
jg
arpl
cmp
loop
inc
push
xlat
inc
or
mov
lea
aas
mov
scas
les
xor
out
xor
xor
xor
loope
jo
mov
aaa
cmc
aaa
adc
cmp
mov
call
cmp
les
jb
or
adc
sub
in
stos
cli
or
push
sbb
cmp
ds
mov
js
lods
bound
sbb
lds
fstl
and
sub
adc
std
orb
movsb
decl
push
sahf
push
inc
arpl
inc
aas
add
shlb
sti
ja
leave
and
popf
sti
cwtl
inc
test
dec
pop
pushf
test
out
incl
mov
pop
nop
in
call
sbb
inc
dec
aaa
pop
jg
out
lock
push
inc
push
or
mov
jmp
mov
loopne
or
push
std
ret
loope
popa
loope
add
repnz
or
mov
aad
sbb
inc
inc
xor
loopne
dec
mov
pop
clc
pushl
xchg
hlt
adc
mov
cmp
ds
inc
sub
faddl
fcompl
mov
jle
fistl
sbb
xor
std
mov
mov
ja,pn
inc
test
aad
ficoms
add
cld
aaa
div
sbbl
and
scas
sub
loop
sbb
pop
outsb
andb
rcl
adc
xor
pop
out
mov
jno
in
inc
xchg
jg
dec
jnp
int
sbb
cld
test
add
test
test
xor
xchg
and
inc
and
std
mov
movsl
pop
lds
mov
cmp
pop
bound
sbb
xchg
clc
arpl
sbb
addr16
jecxz
cmp
aas
pop
push
stc
xchg
movsb
xchg
jno
adc
sub
negl
jb
out
pop
arpl
jmp
out
mov
and
push
loopne
int3
std
and
insb
popl
xchg
mov
sub
add
test
xchg
cld
add
test
movsb
int
cs
sbb
lcall
jl
or
sub
or
pop
xchg
jnp
xorb
sar
push
push
sub
push
pusha
out
out
mov
sub
inc
lahf
push
jge
lcall
mov
fsubrl
push
adc
push
mov
aas
cmp
mov
push
or
pop
mov
ret
lea
cmc
les
fdivs
loope
lock
xor
push
adc
out
pop
push
fucomip
sub
insb
xorl
stc
push
ja
jb
hlt
or
test
call
push
std
or
push
push
jmp
jno
push
test
xor
xor
inc
filds
jmp
test
filds
inc
xchg
mov
jne
mov
gs
decb
insl
gs
mov
sbb
stc
mov
push
lret
cmp
push
ljmp
adc
and
mov
xchg
sar
mov
and
cmc
movsl
add
add
jnp
push
mov
stos
aam
daa
cmp
fidivrl
mov
xor
decl
hlt
jle
fdivrs
pushf
adc
out
test
ret
push
testl
fistpl
std
bsf
sbb
sub
xor
mov
popl
lcall
sub
xchg
bound
scas
or
pop
jmp
sub
sub
cwtl
push
fmuls
aas
js
mov
jmp
orl
push
and
mov
loopne
jmp
jo
adc
testl
lock
adc
cli
es
inc
std
incl
xor
pinsrw
fisubrl
pop
xchg
out
mov
cli
jmp
dec
data16
icebp
mov
stos
push
pop
inc
loope
ret
fbld
xor
sub
adc
jg
icebp
filds
inc
ljmp
sub
mov
dec
pushl
inc
mulb
mov
ja
hlt
dec
mov
test
add
jmp
ljmp
push
incl
inc
mov
or
mov
xor
hlt
fucomp
mov
pop
cmp
loope
call
mov
sub
xchg
sahf
push
popa
xchg
mov
or
lahf
lock
icebp
sub
cmp
jmp
push
inc
mov
std
cmp
push
jns
cmc
mov
cmpsb
mov
testb
jae
add
add
cltd
push
adc
js
enter
lods
pop
push
insl
cmpl
and
test
lcall
lock
adc
shld
ret
outsb
push
inc
std
ret
cmpl
psraw
mov
out
or
jnp
push
stc
push
jl
jmp
cmpsl
or
bound
shl
xchg
ss
and
cltd
cmpsb
cmpsb
or
lock
jg
popf
xchg
add
pop
dec
fcmovu
mov
les
inc
mov
enter
push
pop
stos
fmul
notl
cmp
scas
neg
stos
mov
push
sub
incl
add
lods
and
dec
fidivrl
pop
inc
in
ds
cmp
fs
aaa
scas
hlt
stos
or
aad
ffreep
sub
loop
xor
push
loope
mov
xchg
aaa
lea
mov
jmp
dec
in
repnz
pop
fisubs
jnp
cmp
or
dec
push
cli
and
push
das
sub
push
inc
aaa
jecxz
negl
jne
cmp
and
daa
mov
jl
scas
pop
int3
ja
shll
lods
data16
inc
sub
pop
roll
xor
jecxz
pop
testb
ret
inc
cmp
mov
call
jb
cmp
cmpxchg
sbb
stc
mov
or
pop
fimuls
push
sbb
mov
adc
fwait
rorl
jb
fs
out
or
dec
xor
icebp
out
xchg
pop
jle
popa
movsl
out
or
lahf
adc
shlb
and
repz
add
push
in
push
jp
je
fcomip
jmp
insl
fisubrl
fcompl
rol
int3
dec
shll
leave
cmp
mulb
xchg
cmp
pop
sti
jle
mov
sub
dec
mov
mov
adc
cmpl
dec
stc
inc
lahf
mov
mov
movsb
cli
xor
sbb
fcmovb
pusha
ret
mov
xchg
call
cmpsl
rcrb
pop
add
jno
out
cwtl
std
xor
push
xor
lahf
pusha
negl
stc
movsl
jp
push
and
xchg
mov
decb
inc
sbb
lock
push
popf
sub
push
add
fwait
loop
jmp
rorb
cmp
pusha
xchg
add
inc
ljmp
repnz
rcll
sbb
ss
test
mov
sbb
int
mov
or
push
mov
fmuls
and
mov
loopne
fistpll
out
mov
daa
call
clc
xchg
and
pop
ljmp
dec
push
mov
push
js
ljmp
fcmovu
int
mov
das
or
pop
fs
inc
outsl
push
push
outsl
mov
mov
mov
jle
jnp
sar
jae
sub
mov
insl
and
mov
mov
pop
mov
mov
jmp
or
xchg
out
std
divl
fwait
ja
jge
mov
push
les
cmp
dec
or
cwtl
lret
jecxz
test
inc
mov
clc
iret
test
loop
add
mov
in
scas
inc
std
dec
jg
je
jg
xchg
sti
add
xchg
cmpsl
jno
jg
mov
push
arpl
cmpsb
into
cltd
call
clc
adc
inc
sub
loop
xchg
outsl
in
aaa
mov
popa
mov
dec
inc
xor
and
aaa
ja
arpl
and
mov
xor
insl
cmpsl
out
mov
lahf
push
xchg
testl
test
arpl
pop
pop
mov
arpl
pop
sub
mov
imul
inc
lods
cmc
ja
adc
divl
push
and
scas
mov
jg
fimuls
or
test
imul
ret
insl
lret
loopne
cltd
xor
sbb
jg
incb
push
mov
cmp
lds
in
xor
in
movsb
test
insb
jle
xchg
fdivr
push
and
mov
cmp
mov
cmp
test
jge
daa
xor
push
and
ljmp
ja
fidivrs
je
mov
ljmp
ret
sub
das
dec
fsubr
mov
pop
cmp
sub
cwtl
or
inc
lea
out
dec
ds
shll
or
loope
mov
inc
dec
jge
push
inc
inc
insl
cs
sub
xchg
fs
pushl
add
xlat
cmpsb
adc
inc
xor
sbb
mov
mov
sbb
je
jle
adc
std
pop
inc
test
gs
xor
pop
pop
xor
add
mov
test
xor
ret
clc
sbb
movsl
sbb
stos
fistpl
aaa
dec
sti
or
jbe
outsb
lahf
sti
bts
loopne
dec
lret
dec
mov
gs
and
aas
dec
jo
inc
jecxz
imul
xorl
push
push
pop
xor
mov
test
ja
in
mov
mov
clc
decl
inc
add
lret
xchg
sbb
mov
pushl
insl
mov
scas
add
fsubl
call
pushl
jno
shll
ds
call
or
jo
inc
mov
stc
das
out
ljmp
mov
imul
rol
xor
sub
aad
cli
ljmp
push
std
lods
mov
sbb
push
jb
push
xor
push
stos
incl
scas
negl
lock
divl
andb
iret
call
dec
mov
mov
cmp
sub
xchg
push
xchg
rorb
push
loop
loopne
je
shl
in
mov
in
mov
insl
cmc
pop
cmpl
shlb
scas
ss
jmp
sub
syscall
pusha
push
pop
fstps
xor
in
pushl
imul
loop
lea
negl
lret
loop
negl
js
test
fiaddl
or
outsb
lods
dec
es
cmp
dec
cmovs
js
into
xlat
inc
adc
jmp
cmc
or
gs
add
or
adc
rorl
or
sahf
pop
scas
adc
inc
and
sub
mov
into
les
jnp
ja
dec
test
push
add
fstl
jmp
mov
fwait
xor
jno
jb
adc
clc
out
adc
push
push
ret
in
add
mov
jg
inc
mov
cmpsl
std
mov
ljmp
test
adc
push
add
add
pop
aaa
xor
aas
add
add
and
adc
mov
inc
xor
ja
sub
push
or
inc
aam
stos
dec
add
ljmp
xor
push
lods
test
add
add
in
aad
or
mov
add
push
and
inc
push
sbb
inc
inc
push
or
dec
sub
incl
dec
inc
dec
sbb
sub
inc
add
lret
sbb
add
sub
sbb
mov
mov
aam
dec
mov
jge
push
mov
add
mov
jne
jns
push
addr16
jbe
mov
cmp
add
or
or
sbb
jb
pop
addl
dec
imul
push
fmull
and
dec
pop
sub
test
stc
fimuls
in
pusha
loopne
jbe
cld
dec
dec
push
repnz
sbb
mov
add
hlt
cwtl
jecxz
jmp
lock
and
out
ja
and
push
imul
dec
lret
jns
jae
jo
mov
jo
and
push
pop
imul
sub
inc
xor
rcrl
arpl
insl
cwtl
fistl
fwait
push
inc
inc
inc
fsubrl
mov
sbb
std
mov
sarb
sub
mov
ss
sbb
sbb
lret
inc
popf
inc
pop
or
lea
mov
stc
sarl
je
dec
insl
adc
jb
push
push
imul
mov
inc
mov
negb
insb
insl
dec
cmp
cmp
xor
pushl
pop
inc
add
dec
add
push
fnsave
and
sub
add
cmp
sub
add
sahf
inc
outsl
push
cmc
int
fisttpl
cmpsl
push
dec
mov
adc
jo
or
mov
pushf
add
in
cmpl
pop
sub
pop
add
mov
adc
imul
imul
cmp
and
adc
test
or
movl
adc
add
dec
pop
gs
jns
push
ja
ret
push
sti
add
sub
push
add
idivl
mov
addb
insb
dec
dec
add
lock
jbe
push
push
inc
cmp
aam
mov
xchg
dec
int
mov
push
cmc
mov
lods
push
pop
sbb
fsubrp
mov
add
mov
sub
inc
cmp
jp
inc
mov
push
push
cmp
mov
hlt
in
dec
imul
movsb
icebp
mov
fdivs
repz
xor
and
mov
add
mov
mov
jns
mov
sub
adcb
inc
addl
addr16
pop
imul
inc
dec
jle
jmp
pushf
dec
out
inc
mov
stos
pop
mov
je
test
insb
mov
sti
xchg
cld
mov
mulps
int3
pop
mov
andl
cmp
xchg
xor
lret
stos
fs
fcmove
ficomps
jnp
push
push
push
daa
mov
jne
fcomps
push
pop
add
push
xchg
lahf
push
divl
insb
stos
shrb
cmp
pop
rorb
pop
xchg
out
loopne
lahf
aaa
mov
xchg
stos
pop
jg
jecxz
and
fiadds
fdivrs
cmp
add
xlat
cmp
gs
insl
out
xor
pushf
inc
inc
mov
clc
push
or
push
insb
sti
xor
sbb
mov
jns
jno
adc
in
add
arpl
push
cmp
sub
in
cmp
icebp
and
add
mov
enter
jne
or
popf
mov
in
mov
jle
adc
icebp
in
pop
insb
dec
fs
cmp
cmp
sbb
mov
jno
push
add
lcall
loopne
mov
jmp
fisubs
into
fs
add
inc
lret
adc
xor
lods
ljmp
push
pop
cmovp
mov
into
add
inc
pop
and
push
push
pop
mov
xchg
sub
add
push
jno
xchg
jge
inc
fistpll
shll
fists
mov
pop
inc
adc
push
adc
xchg
inc
jno
ret
or
stc
dec
pop
push
incb
mov
adc
cmp
jbe
pop
icebp
ret
mov
sbb
dec
leave
ret
mov
dec
pushf
push
hlt
push
scas
inc
ficoms
inc
cmp
xor
jp
mov
mov
mov
imul
push
stos
cmpsb
daa
lock
mov
pop
inc
insl
outsl
outsb
or
mov
dec
es
inc
aaa
jno
sub
push
or
outsl
les
adc
xchg
iret
add
xor
xor
add
dec
push
xor
push
or
popa
call
add
adc
ret
inc
dec
test
xor
mov
fdivl
jl
flds
mov
pop
sub
imul
loope
addr16
pop
loopne
test
lock
or
adc
imul
push
repnz
dec
mov
movsl
dec
and
xor
pop
lock
int3
xchg
in
adc
lods
push
adc
mov
js
clc
inc
and
add
in
roll
data16
fcomps
inc
pop
js
mov
jecxz
gs
jecxz
inc
xchg
popf
icebp
into
jmp
sbb
enter
pop
inc
cld
loopne
ss
push
xlat
mov
add
aas
mov
mov
adc
add
add
pop
mov
adc
pop
rcrl
orl
mov
push
dec
dec
push
bound
push
mov
lock
aaa
push
mov
fs
shrb
lds
pop
clc
inc
mov
ficompl
pop
xchg
into
mov
gs
push
je
jo
jge
aaa
inc
jno
test
test
adc
andl
addr16
test
inc
mov
pop
mov
lahf
xchg
jne
loopne
les
add
sbb
imul
inc
outsb
push
push
push
lret
sub
out
lods
bnd
gs
mov
jg
roll
lret
in
push
movb
ss
xor
lock
xor
jmp
out
add
push
sub
ret
dec
dec
arpl
add
mov
addr16
and
call
jo
fsub
test
ret
lahf
add
fs
daa
bound
mov
aaa
leave
add
fwait
mov
ror
jbe
rol
insb
addl
push
xchg
add
push
icebp
or
cmp
pop
dec
imul
cmp
aad
out
mov
outsb
gs
cmpb
inc
adc
sbb
push
inc
push
push
pop
inc
pop
jo
jecxz
lret
cwtl
push
imul
xchg
inc
add
clc
or
push
inc
clc
push
arpl
lock
insb
das
jns
in
stos
lock
cs
in
adc
push
mov
pop
or
push
push
sub
divb
push
jle
xor
fildl
in
pop
repnz
adc
sbb
mov
mov
movsb
jnp
or
cmp
add
in
adc
int3
repz
inc
adcl
jbe
inc
jp
push
add
stc
lods
jp
dec
adc
aam
data16
into
scas
add
data16
fsubrs
xor
push
or
dec
sub
outsl
icebp
xlat
call
popf
dec
add
cmp
xchg
arpl
hlt
inc
pop
push
dec
jle
mov
mov
push
ja
ja
decl
cmpsl
imulb
js
jecxz
data16
test
xchg
cmp
movsl
sbb
add
jl
ret
mov
sbb
adc
enter
addl
rcrl
jle
and
add
add
jle
das
filds
xchg
jmp
pusha
push
xchg
int3
fcmovne
mov
call
add
jnp
jnp
add
pop
outsb
cli
loopne
int
test
add
jae
movsl
adc
lahf
cmp
rcrb
adc
ret
arpl
scas
bound
nop
shrb
dec
add
iret
push
pop
insl
mov
sub
rolb
pusha
pop
test
add
sbb
xlat
pop
out
or
aaa
imul
pusha
dec
or
dec
cmp
lods
fnstcw
sbb
add
or
mov
inc
adc
in
xchg
stos
sub
fs
jae
addr16
add
add
adc
loope
aad
push
stos
sbb
movsb
add
data16
popa
clc
add
mov
xor
add
sbb
mov
ror
mov
mov
pop
pop
pop
jle
lea
enter
lods
add
leave
data16
popf
mov
sub
test
jg
lock
insb
add
fdivrs
add
clc
int
inc
cmpsl
cwtl
add
js
popf
in
add
pop
mov
and
sbb
and
aas
fists
push
in
cmp
add
je
in
mov
scas
aad
sti
inc
rolb
push
mov
or
divb
pop
in
or
xchg
mov
les
jge
sbb
mov
mov
out
fsubrl
call
loopne
inc
and
divb
cmp
iret
lods
add
adc
es
inc
add
and
lods
insl
sbb
cli
dec
insb
jae
ret
mov
insb
push
loope
jns
mov
sbb
jle
push
mov
sub
jae
add
xchg
inc
mov
add
pop
fadds
ja
mov
or
sbb
add
cmpsb
push
jbe
xchg
insb
push
fbld
or
and
cmp
add
in
repnz
aaa
inc
leave
lea
aas
je
or
mov
movsb
into
push
xor
repnz
mov
idivb
lea
xor
sbb
or
data16
sub
iret
es
jnp
xor
out
push
xchg
xchg
lea
in
int
out
jl
or
js
mov
pop
mov
movsl
in
mov
iret
push
mov
sbb
jae
ja
add
inc
outsl
outsb
push
js
cmpsb
out
push
pop
mov
add
leave
je
addb
loope
into
in
fs
setae
push
pop
push
xchg
add
insb
add
lret
repnz
ja
aas
xchg
es
sub
inc
je
dec
in
shlb
mov
add
dec
fwait
mov
rcll
and
sbb
sub
loopne
add
dec
inc
sub
xchg
jle
sub
sub
xchg
dec
fmuls
mov
pop
mov
je
cmpsb
lds
aam
ret
xchg
mov
insl
decl
in
bound
or
fs
push
pop
ljmp
or
add
outsb
jg
adc
lea
leave
or
sarl
fisttps
sahf
loop
leave
in
jecxz
mov
orl
push
in
add
cmp
fidivrs
sbb
rclb
and
sti
into
xor
icebp
dec
dec
cmp
inc
and
incl
addr16
mov
sahf
cmpl
mov
mov
add
push
les
andl
in
dec
mov
notb
test
mov
xchg
movsl
push
and
add
jl
and
xchg
enter
dec
scas
scas
mov
adc
shrb
lret
sahf
cld
xor
mov
push
pushf
mov
add
sahf
xchg
pop
mov
imul
repnz
sti
icebp
mov
int3
shll
add
mov
pop
dec
jae
and
xchg
pop
pop
pop
imul
ss
sbb
cmovge
adc
mov
fdivr
cwtl
outsb
pop
movl
and
pop
in
loopne
pop
rolb
sub
fnstcw
mov
push
frstor
mov
ljmp
fwait
loope
push
xchg
add
call
add
loop
rclb
push
xor
mov
xchg
jno
inc
mov
xor
push
push
insl
ret
lods
lea
add
mov
or
pop
sbb
mov
sbbl
ffreep
imul
jb
or
mov
data16
subb
popf
mov
jns
dec
mov
mov
jnp
push
ficomps
rolb
fmul
sti
cmp
cmp
dec
ja
adc
div
push
jnp
shl
sbb
in
pop
jmp
xchg
sbb
push
cmp
fiaddl
stc
mov
add
bound
mov
jb
mov
fwait
sbb
popa
fwait
jb
jge
jae
fidivrs
int3
sbb
rcrl
xor
or
or
cmp
mov
inc
xor
cmpsl
add
cld
dec
cmpsl
notb
fcomi
sub
shlb
arpl
adc
aaa
push
lds
bound
jecxz
mov
inc
insb
xchg
in
pusha
insb
xlat
xor
inc
mov
inc
stos
cmc
enter
pop
cld
jle
mov
xor
popa
cwtl
pop
inc
test
nop
js
outsb
lods
ljmp
jne
cld
std
mov
push
ret
mov
adc
xor
push
arpl
clc
xchg
ss
dec
mov
push
mov
fildl
xor
add
outsl
and
jle
or
cli
xor
insl
cld
addl
mov
xchg
and
int
in
inc
movsl
fdivl
and
mov
jbe
push
mov
inc
mov
insb
in
mov
xor
mov
fstpl
sbb
ret
mov
test
aad
or
mov
sbb
outsb
add
cmpsb
jbe
ret
adc
das
addr16
sub
sbb
dec
lret
out
mov
push
cmp
add
or
cmp
ret
ror
jbe
cld
mov
andl
push
pop
push
or
xchg
push
or
gs
rolb
loope
cmp
cmp
out
rol
cmp
or
repnz
cs
fldcw
pop
mov
xchg
sub
and
cmp
shrb
inc
in
mov
add
lret
ss
mov
out
out
mov
pop
pop
jae
and
jns
mov
xor
pop
jle
roll
mov
fcompl
and
adc
sub
incb
or
jno
pop
xlat
jg
sti
cbtw
jne
addl
dec
push
xor
push
clc
stos
mov
xlat
pop
sbb
or
and
pop
mov
fcmovnbe
clc
mov
hlt
jmp
adc
in
add
flds
xchg
adc
push
loop
jl
cld
cmc
jle,pn
cmp
fs
iret
push
inc
or
add
add
xor
sbb
sbb
inc
in
pusha
fildl
mov
jecxz
dec
rolb
cmpsb
add
in
rcll
sahf
out
xchg
lds
pop
pop
pop
outsl
rclb
testb
cmp
mov
pop
sub
adc
cmp
cmp
movsl
cmp
and
ret
cmp
fwait
pop
push
or
ret
mov
shl
or
jne
shl
push
lcall
mov
fildl
popa
mov
and
divl
aas
add
xor
cmp
jbe
ret
and
repnz
pop
and
les
lods
jmp
and
loopne
push
dec
cwtl
lahf
push
outsb
pusha
cmp
xchg
sbb
mov
cmp
jge
mov
and
int3
push
in
shrl
pop
addr16
sbb
bnd
and
xor
pop
imul
aaa
hlt
xchg
out
aaa
jns
popa
jae
and
aad
xor
mov
mov
mov
addr16
mov
mov
testb
fisubl
lahf
cltd
out
push
in
pop
mov
cmc
sbb
jp
lcall
push
lods
xchg
pop
mov
or
enter
fldt
andb
scas
xchg
in
or
push
push
cld
pop
popa
add
inc
int3
xor
mov
in
inc
lahf
mov
movsb
repnz
js
lds
jmp
andl
mov
push
stc
and
and
jne
cli
or
dec
push
cli
cmp
push
mov
adc
pop
cwtl
mov
fimuls
rcrl
repnz
cmp
jecxz
in
ret
dec
mov
aam
jecxz
int3
mov
sarb
iret
data16
leave
xchg
mov
xchg
in
ficoms
ljmp
loope
inc
jnp
fbld
out
push
jp
and
repnz
pcmpeqw
iret
arpl
mov
mov
js
hlt
pop
fists
into
xchg
mov
mov
inc
lahf
cmp
cmc
insb
loop
xchg
or
sahf
and
xchg
push
or
mov
xchg
dec
loopne
mov
dec
push
cmc
fistl
cld
sahf
inc
pop
fcomps
xor
dec
mov
lock
lret
cmp
jne
popa
mov
sbb
out
loop
orb
dec
andl
xchg
lcall
inc
int
sub
lahf
dec
mov
movsb
or
aas
mov
inc
sbb
mov
push
fst
jl
dec
pop
cmpl
mov
inc
stc
orb
or
enter
jb
xchg
sub
push
jo
ss
insl
sub
or
mulps
andl
insb
fstpl
in
inc
nop
sarl
mov
pop
pop
leave
aas
imulb
cltd
sbb
cli
push
jb
repnz
ret
sub
inc
outsl
cmp
pop
ret
pop
cwtl
jb
xchg
xor
insb
in
or
aaa
clc
pop
mov
adc
xlat
repnz
or
add
loopne
scas
iret
xchg
insb
dec
lahf
cmp
insb
cmp
pop
notl
xchg
cmp
jle
fcompl
push
jns
inc
test
mov
test
outsb
push
cmc
or
inc
rorb
xlat
popa
xchg
data16
scas
inc
cli
or
bound
push
test
movsb
js
ja
sbb
stc
pop
mov
repnz
pop
pop
enter
jnp
pop
mov
lcall
sbb
addr16
inc
or
aam
push
and
and
popf
mov
mov
daa
iret
icebp
gs
adc
jnp
pop
jle
cmp
fcomip
mov
call
insl
jmp
roll
mov
and
add
push
push
push
adc
mov
inc
mov
and
mov
cmpsb
pop
sbb
outsl
jecxz
inc
cltd
xchg
mov
aam
adc
push
dec
xor
push
inc
or
shlb
xchg
cmc
js
lock
jp
dec
pusha
xlat
cltd
mov
dec
pop
jbe
mov
mov
dec
aad
sbb
cs
push
scas
arpl
push
hlt
je
mov
mov
and
mov
mov
jnp
inc
aam
xor
imul
nop
sub
mov
mov
or
cs
jg
rclb
jl
xor
fistl
inc
add
sub
fldl
jl
cmpsl
mov
fsin
xchg
xchg
loopne
ja
push
adc
lcall
shlb
sbb
mov
fimuls
mov
and
lods
sbb
mov
call
stos
xor
shlb
fcomi
imul
enter
jg
imulb
pop
fisubrs
fwait
adc
mov
sahf
frstpm(287
sbb
xchg
std
nop
sti
scas
pop
cmp
push
inc
stos
repnz
scas
cld
test
into
jne
shrb
mov
rcl
sbb
mov
push
sbb
inc
dec
data16
push
stos
sub
push
jns
cwtl
pop
xchg
testb
or
pusha
xchg
sub
imul
or
sti
mov
and
add
inc
add
fdivs
mov
rcll
dec
xor
inc
dec
pusha
mov
sub
pop
add
shrl
adc
mov
cmp
test
pop
div
mov
cmpl
ljmp
inc
ret
sbb
mov
inc
popa
adc
adc
or
push
or
rol
shrb
movsl
cmp
cmpsb
mov
xor
pop
and
lods
rclb
add
dec
in
divb
lcall
testb
mov
jge
xor
sub
sub
ja
loop
mov
iret
or
insl
shrb
mov
xchg
sub
sbb
pop
out
popf
and
pop
sbb
mov
xchg
mov
std
or
dec
stc
inc
movsl
fwait
mov
inc
outsb
shll
mov
and
sti
and
ret
inc
pop
cmp
xor
push
shrl
ds
or
lock
cmp
roll
inc
js
dec
inc
xchg
mov
mov
and
sub
adc
nop
sub
pop
mov
pop
sub
add
jnp
fcoms
rcr
inc
mov
mov
pop
cli
mov
adcb
jle
rcr
mov
sub
dec
jle
hlt
fbld
push
xlat
fistpll
dec
pushf
stos
mov
xchg
and
xor
push
subb
imul
jmp
xchg
and
arpl
ja
test
lret
sub
add
int
mov
or
scas
jl
mov
cmp
dec
push
jl
sarl
mov
movb
rcrl
mov
sub
aam
push
cltd
call
fwait
cmp
jnp
adc
and
call
pusha
movsl
arpl
xor
pusha
movsl
lahf
jnp
and
in
lock
fs
mov
xor
pop
arpl
jb
dec
movsl
dec
sbb
iret
pop
es
lcall
cld
lock
test
pop
xor
dec
and
test
and
cmpb
jg
pop
sbb
jbe
hlt
sbb
leave
inc
adc
out
js
sbbl
movsl
jmp
js
pop
popf
jl
add
add
xchg
xor
dec
xor
subb
jge
ljmp
ds
add
jmp
incl
jl
mov
mov
add
arpl
mov
mov
insb
mov
mov
mov
pop
jle
aaa
cltd
test
sub
hlt
inc
pop
call
enter
movsl
dec
cld
jp
lock
push
sub
les
lahf
mov
xor
test
xlat
stos
xchg
sub
push
test
fidivrs
push
fsubp
sub
lahf
jb
pop
popfw
imul
mov
addr16
jmp
loopne
sbb
push
imul
push
sarb
call
lods
incl
push
mov
or
mov
mov
cli
mov
cmp
push
xor
and
dec
and
lods
notl
scas
loop
or
outsb
xlat
pop
mov
inc
fninit
mov
inc
pop
out
mov
fwait
xor
push
repnz
push
xchg
negb
mov
aad
add
jl
cmpsl
addr16
dec
push
cli
scas
sub
cmp
in
sub
icebp
sbb
pusha
sar
adc
out
andl
add
inc
sti
addl
xor
cmp
sub
xchg
lock
and
jecxz
and
dec
sahf
push
sub
and
jmp
lods
and
inc
cmp
mov
out
popa
sti
out
jmp
sub
add
sbb
je
mov
sbbb
sti
xchg
cmpl
xor
movsb
rcrb
arpl
and
frstor
fwait
adc
push
jnp
cs
sahf
rcrb
scas
test
cld
xor
popf
cmp
xorl
orl
testl
fs
sbb
and
clc
sahf
cmp
and
cmp
test
push
and
loopne
stos
or
outsb
std
cmp
sarb
fdivr
lcall
adc
cmp
icebp
push
push
cltd
sbb
out
mov
xor
xchg
sub
xchg
sub
std
dec
adc
push
loope
sbbb
div
sahf
pop
rcll
mov
loop
pushf
test
cmpl
lret
mov
cmpsb
cmp
push
enter
dec
inc
mov
xchg
lods
gs
xchg
pop
sti
hlt
shlb
cs
sarl
mov
jmp
scas
cmpsb
lcall
ret
xlat
push
mov
ror
sub
cmpsb
sbb
int
pushf
clc
lret
imul
dec
frstor
xorl
push
hlt
mov
aam
cmpsb
pop
xchg
fstl
mov
pop
sub
js
insl
addb
cltd
xchg
jge
jecxz
and
cmp
shll
test
aas
rclb
inc
and
sbb
rol
cs
rorl
or
sbb
neg
and
or
adc
mov
je
or
jbe
sahf
push
hlt
aam
in
ss
xchg
mov
pop
xchg
scas
in
push
xchg
les
xchg
cmp
rol
ret
ljmp
add
xor
push
cmp
pop
jp
jecxz
xor
sub
out
dec
adc
cmpsl
cmpl
in
and
fwait
leave
shrb
out
call
adc
mov
cmp
movsl
ja
mov
jmp
loop
sbb
aam
dec
sbb
mov
push
lock
hlt
rolb
cli
ljmp
icebp
sbb
popa
cmp
je
mov
insb
mov
mov
aaa
lea
xchg
pop
stc
in
leave
aam
imul
push
mov
mov
pop
sbb
inc
sbb
aad
jnp
xchg
mov
push
in
loop
mov
popa
fst
rcl
push
sbb
mov
mov
adc
mov
mov
sbb
push
sub
xor
stc
and
mov
jge
xor
mov
aaa
cmp
daa
js
nop
fcomp
sbb
inc
aad
push
mov
pusha
and
popw
mov
cmp
int3
xor
popf
cmp
sbbb
les
inc
mov
xchg
fcompl
jb
cmp
mov
xchg
adc
or
insb
iret
add
aad
mov
cmp
fdivr
mov
push
push
call
inc
mov
mov
test
add
aad
addr16
mov
mov
ja
xor
mov
insl
inc
mov
pop
int
pop
mov
lock
adc
sahf
clc
or
fcmovbe
cmc
ljmp
jne
arpl
scas
lods
add
adc
mov
icebp
inc
dec
mov
jb
push
cmp
push
je
jns
mov
testb
or
pop
lret
aad
out
sar
imul
xchg
addr16
mov
data16
out
jg
arpl
or
arpl
adc
adc
les
dec
and
mov
out
xlat
pop
in
inc
dec
or
xor
jno
jnp
push
fnstenv
pop
icebp
xor
sti
scas
ss
inc
mov
xor
fdivl
int
cmpsb
push
xlat
stos
nop
hlt
mov
mov
mov
imul
inc
dec
fimuls
jbe
loop
pop
scas
setae
adc
adc
xor
ljmp
add
or
pushf
divb
addr16
movl
or
int3
sub
je
adc
lods
shl
fdivl
mov
test
push
xorb
out
push
scas
std
jns
pop
lods
pop
inc
adc
xor
out
adc
outsl
sbb
dec
mov
and
in
imul
out
inc
mov
xchg
dec
popf
inc
cmp
sub
inc
test
sbb
dec
pop
leave
mov
js
and
test
pop
fisubrs
sbb
push
rorb
xor
jp
loopne
pusha
rcrb
test
pop
mov
fstps
stos
pop
lock
pop
cmp
jbe
test
dec
enter
mov
mov
lods
out
neg
pop
xchg
stc
jo
lock
sbb
les
push
sbb
lods
aam
cmp
mov
push
jmp
outsl
pusha
lock
fldl
js
pop
aam
mov
mov
pop
cmpsl
mov
push
push
xor
xor
scas
sti
pop
je
mov
sbb
ja
mov
xor
int3
lret
xchg
fidivl
pop
xor
mov
outsl
push
out
inc
in
mov
push
mov
movsl
mov
xchg
push
xchg
xchg
imul
movsb
mov
es
popf
xchg
jmp
mov
nop
cs
jle
cmpl
inc
in
sbb
push
je
lea
inc
stos
cmp
cmp
idivl
cwtl
jl
fiaddl
in
inc
mov
xchg
or
jg
fiadds
out
enter
lea
divl
inc
insl
sahf
dec
lcall
fsubs
sub
fs
aas
ljmp
add
xchg
movsl
mov
ret
mov
adc
push
data16
and
cltd
sub
mov
call
sub
pop
and
and
jb
and
outsb
scas
pop
mov
hlt
xchg
pusha
adc
adc
cmp
xchg
jge
ss
sti
lock
ret
ja
jl
ljmp
jmp
clc
loope
pop
test
xor
inc
std
stos
xchg
and
ljmp
pop
clc
push
stos
lods
addr16
mov
fsubs
les
xor
addl
inc
cmp
adc
test
sub
test
icebp
xor
dec
push
push
inc
das
jnp
rorb
push
mov
loop
nop
sub
rcr
in
xor
loopne
adc
push
in
nop
stos
out
jne
js
push
push
stos
add
xchg
and
fstl
scas
les
ljmp
dec
jns
sarl
ja
push
sti
inc
add
jle
psrlw
inc
fwait
cmpsl
dec
scas
insl
fidivrl
cs
std
sbb
call
roll
std
dec
sub
enter
and
int
popf
jae
sahf
rorl
cmp
sbb
and
fadds
aaa
cwtl
adc
nop
add
cmp
subb
mov
fsubrs
in
subl
sbb
mov
push
mov
mov
hlt
jae
test
lock
pop
in
jecxz
mov
pop
xchg
cmp
adc
js
lahf
sbb
fsubr
or
cld
and
pushf
loop
jmp
pop
je
mov
mov
mov
cmpsb
mov
add
cmp
fidivl
loopne
add
loopne
loope
dec
or
jae
lret
mov
loop
xchg
mov
add
sbb
add
nop
daa
sahf
arpl
movb
stc
and
xorl
shlb
add
inc
fisubrl
jle
mov
push
mov
aas
sbb
pop
inc
lcall
mov
xchg
lcall
and
mov
rcrl
cmp
dec
sbb
push
or
dec
lahf
pop
loope
xchg
mov
mov
ljmp
dec
lds
ja
push
jae
scas
adcl
ficompl
cmpsl
sbb
xor
insb
repz
inc
insl
add
jmp
aad
jae
aaa
pusha
rcl
xchg
pushf
cltd
push
ja
gs
clc
pop
cmp
dec
and
or
pop
filds
mov
adc
or
xor
and
mov
stos
int3
pushf
mov
pop
xchg
mov
adc
jle
cmp
sub
std
mov
js
mov
mov
imul
xor
inc
daa
lahf
scas
mov
mov
popf
in
xor
lret
cmpsb
sub
mov
mov
mov
add
ljmp
add
sbb
ret
lods
mov
cmp
icebp
ljmp
push
cwtl
loop
in
mov
xchg
inc
out
pop
lock
js
je
mov
cmp
mov
leave
test
or
mov
dec
xchg
div
cmp
cmp
orl
pushf
outsl
jecxz
inc
ficoml
shl
lods
sti
add
daa
sbb
sbb
mov
loope
add
or
loope
not
rolb
cmp
sbb
inc
popa
in
dec
inc
push
fisubrl
cltd
and
aam
call
adcb
mov
mov
push
shl
imul
out
mov
sub
fcmovb
or
sti
lea
das
jge
pop
lds
fdivrl
add
sub
out
xchg
cmp
fwait
mov
pop
aaa
xchg
fs
adc
pop
dec
lcall
pusha
call
mov
nop
imul
jl
sub
hlt
dec
mov
push
sbb
jecxz
arpl
nop
scas
mov
mov
mov
xchg
insb
cmp
sub
mov
cmp
mov
arpl
shll
jg
ljmp
sti
jae
inc
loopne
ror
xorb
and
add
add
lods
xor
call
out
mov
pop
and
imul
jl
gs
add
xchg
sbb
push
sub
addr16
add
or
arpl
or
mov
xor
mov
xchg
out
push
lcall
push
sti
std
mov
rclb
mov
pop
or
push
adc
aad
and
or
fidivl
das
xlat
or
push
fistps
xchg
test
sbb
lret
test
pusha
mov
push
push
shll
push
sbb
cmpsb
cwtl
adc
or
test
xchg
mov
dec
jmp
jbe
sbb
in
insb
jb
int3
loope
gs
jle
fcomi
lcall
pop
push
pushf
lods
mov
sahf
cld
push
icebp
dec
add
xor
lret
adc
sub
pop
fildl
sub
mov
sbb
dec
push
xor
or
in
or
mov
cmpsb
cmovne
xor
rcr
adc
lret
lret
xlat
lcall
and
mov
setbe
decb
sahf
rorb
xchg
dec
adc
push
xor
xchg
imul
sbb
pusha
sti
jne
pop
mov
jne
pop
sub
jle
mov
andb
xor
xor
pop
mov
in
icebp
mov
inc
int3
adc
ret
push
jecxz
sub
dec
pop
ja
shlb
enter
and
aad
push
mov
mov
cmp
rcl
mov
sub
dec
mov
jmp
inc
or
mov
stos
stc
rcr
ljmp
aas
in
call
xor
inc
in
sbb
push
in
aad
shll
or
inc
push
test
daa
or
pop
pop
out
xchg
test
hlt
lods
gs
mov
clc
outsb
mov
mov
add
scas
jp
sub
jmp
nop
incl
pop
hlt
lcall
iret
ds
xchg
lcall
sub
jne
xor
push
cmp
xchg
adc
mov
outsl
pop
mov
clc
addl
int3
push
pop
sbb
rol
lcall
or
test
inc
mov
test
jno
scas
addl
stc
mov
fistps
stos
or
pop
add
pushf
jne
jg
test
adc
je
push
aad
lret
push
dec
mov
cltd
xorb
push
fdivrs
push
insb
sti
inc
into
jp
dec
ficompl
add
cmp
aad
andl
sbb
sub
cs
jmp
std
mov
sub
dec
xor
enter
enter
push
pop
arpl
and
or
jb
shll
or
and
cs
subl
add
je
lret
push
add
push
sahf
sbb
push
stc
loopne
xchg
shlb
sbb
rcr
call
push
repz
adc
dec
andl
mov
pop
enter
xchg
or
data16
add
sbb
add
dec
stos
cmp
in
xchg
jl
jns
dec
cmp
loop
hlt
aas
sbb
ljmp
fwait
push
mov
aaa
adc
pop
mov
in
rol
add
pop
imul
subl
cld
outsb
inc
push
sub
push
sub
kaddb
or
inc
scas
into
mov
mov
sub
lock
fildl
xchg
test
xchg
pushf
fisttpll
ficoms
outsb
jns
popf
cwtl
arpl
adc
ret
push
inc
cmp
call
xchg
and
mov
mov
xor
test
push
lcall
sub
cmp
das
pusha
arpl
stos
sbb
jmp
push
test
aad
xchg
fidivrs
mov
jg
mov
lret
int
outsb
stos
push
xchg
aad
sbb
push
mov
or
stos
movsl
xchg
or
rol
test
test
pop
pop
cmp
fdivrp
push
sub
jo
mov
sub
test
pop
mov
adc
popa
notb
mov
push
inc
pop
mov
cmp
jmp
sub
and
or
inc
mov
mov
shrb
adcb
addb
imul
aam
bound
sbb
insb
xchg
or
add
mov
pop
xchg
lea
and
sahf
popa
in
sahf
fisubrl
fs
inc
jb
push
push
jp
xor
or
push
xor
sti
jl
push
mov
and
pusha
xor
ret
daa
in
cmc
cmp
adcl
lahf
inc
stos
out
testl
mov
dec
sbb
adc
cwtl
mov
sbb
cmp
call
out
rorb
xor
adc
ljmp
mov
popl
pop
loop
or
outsl
jo
push
xchg
push
and
or
lcall
outsl
loope
je
mov
mov
in
push
or
or
jp
js
pop
xchg
fucomp
sbb
sbb
add
push
xor
ds
sbbb
cmc
or
movsl
pop
dec
pop
loop
sahf
mov
mov
pop
mov
aam
dec
gs
orl
xchg
inc
ds
pusha
mov
mov
mov
stos
inc
test
flds
xor
popf
jns
nop
dec
inc
test
xorl
sub
lock
or
loope
inc
outsb
push
fcmovnu
cld
lcall
cmp
fstpt
sub
or
ljmp
push
mov
xchg
pop
sbb
test
test
cmp
movl
in
fmuls
lock
shrl
sbb
mov
jg
data16
lds
pop
call
pop
pop
cmp
aad
fisubs
push
scas
cmpl
jmp
sbb
jne
imul
push
push
aad
mov
out
ret
push
cli
aam
add
pop
mov
popf
mov
jbe
mov
jg
dec
sahf
add
aam
or
pop
jnp
xor
sub
popf
icebp
mov
xor
cmpsl
mov
xchg
or
push
aam
stos
lods
ret
imul
adc
loopne
or
xor
inc
movsb
push
gs
adc
insl
je
xchg
push
xchg
loop
add
xorl
xchg
lahf
cmp
cmpsb
xor
cmpl
aam
pusha
jl
popa
inc
je
rclb
sbb
mov
or
or
in
aad
jmp
lret
add
xchg
lods
push
jmp
testl
int3
inc
cmp
mov
ret
adc
call
ss
cltd
cltd
add
loope
ljmp
xchg
cmp
testb
cmpsb
lcall
jbe
inc
dec
cmp
mov
std
and
sub
cwtl
add
cmc
xor
les
imul
insb
shr
xor
ror
dec
xor
jnp
add
std
and
fsincos
sbb
xchg
das
mov
push
iret
push
adc
sarl
sbb
adc
insb
test
mov
sbb
mov
in
or
jmp
add
push
xchg
push
xchg
in
cmpsb
movsb
stos
lcall
inc
lahf
jmp
daa
xor
inc
sbb
mov
xchg
sbb
jmp
movb
add
xchg
pop
movsl
gs
and
jle
inc
push
mov
mov
push
enter
je
call
out
and
jge
mov
jecxz
dec
out
xor
add
mov
cmpsl
lods
ja
fcom
pop
outsb
into
sbb
jmp
insl
outsl
insb
sub
sarb
loope
sub
jp
jns
lahf
aam
mov
pop
push
pop
cmpsb
cmpsl
sti
mov
call
add
pop
mov
js
push
mov
jg
addr16
pop
sti
sbb
mov
pusha
iret
mov
xlat
inc
push
xor
or
pop
mov
mov
lea
lcall
jno
mov
lock
test
pop
pop
std
mov
add
push
js
aam
sbb
mov
or
stc
shlb
xor
mov
sub
jb
pop
data16
scas
push
add
cld
rcll
mov
leave
and
scas
xor
or
xor
mov
fistpll
pop
clc
in
dec
push
ret
movsl
imul
lock
cltd
push
int3
xchg
popf
xor
or
outsb
pop
repz
fildll
jp
pop
jbe
lods
stos
frstpm(287
js
mov
jns
out
cwtl
shll
arpl
sbb
xor
mov
pop
push
loope
out
lret
sti
je
cs
lock
jb
cwtl
lds
loopne
jne
pushl
adc
out
jg
in
push
xor
sti
add
sbbb
aam
inc
cmp
fisttpl
iret
mov
sbb
std
xchg
orl
xchg
sbb
and
mov
mov
mov
pop
inc
icebp
aad
push
sbb
daa
cli
hlt
xlat
xchg
neg
arpl
insb
jo
pop
jne
inc
inc
data16
insb
movsl
pop
mov
inc
jmp
lret
cld
mov
jno
sarb
jno
or
je
lahf
inc
mov
sbbb
shl
ds
les
cld
cmpsb
dec
pop
fdivl
pop
adc
jbe
ss
rcrb
mov
jo
dec
je
or
call
mov
dec
mov
lea
mov
addr16
xor
sbb
aas
push
jae
jae
mov
sbb
and
iret
lea
mov
sti
cmp
fidivrs
jne
stc
in
jbe
cmp
inc
xorb
fwait
and
cmc
cmc
lea
adc
fidivl
jns
inc
push
pop
cmp
adc
mov
xchg
push
fs
in
and
add
stc
testb
pushf
dec
cltd
cs
jp
repz
jge
loopne
pop
rcrb
mov
sbb
sbb
push
andps
mov
fsubr
sarb
mov
out
xor
jno
cmpsl
les
sbb
cltd
xchg
loopne
sarl
inc
popf
loop
mov
mov
ret
je
out
sub
aam
push
jmp
les
and
stos
mov
xchg
dec
add
pop
or
add
pop
jl
stos
enter
lods
filds
mov
test
xorb
push
ljmp
mov
or
sbb
and
in
fisubrs
adc
outsl
and
sbb
xchg
popa
test
add
inc
mov
call
in
push
std
mov
out
into
cmp
lock
pop
mov
add
add
lods
lods
fadd
ret
push
mov
stc
or
test
repz
mov
lods
mov
mov
lods
jns
fldenv
mov
add
shlb
xchg
icebp
cmpsl
fwait
imul
cmc
adc
fadd
add
xlat
mov
xchg
insb
cmpl
jne
add
add
and
sbb
loopne
ficompl
xor
add
sbb
cmp
ret
out
push
mov
push
and
adc
xor
mov
xchg
mov
daa
in
call
push
sub
mov
jg
sbb
or
shrb
and
loopew
es
push
imul
pushf
fldcw
and
xor
addb
in
adc
sahf
sar
js
mov
mov
cmp
into
das
test
fldt
dec
js
call
adc
mov
inc
push
cli
ror
push
std
inc
lea
arpl
jo
lcall
roll
or
jae
test
out
outsb
and
push
fisttps
loope
xlat
lds
mov
mov
adc
cmp
pop
stos
lods
stos
or
hlt
outsb
call
dec
or
or
push
push
xor
in
aad
rcll
outsb
add
movsl
jecxz
out
pop
fldt
pop
mov
cmp
sbb
lret
scas
dec
popf
push
inc
shlb
aas
mov
adc
dec
fisttpll
cmc
xor
xchg
cmp
and
sub
or
pop
cmpsb
into
sbb
movsb
ret
and
pop
jne
dec
ret
es
xchg
and
pusha
xor
push
mov
inc
xchg
inc
loope
into
arpl
ret
je
outsl
test
add
inc
scas
stos
cmp
and
fcoms
xor
insb
in
jb
sbb
cmc
mov
fsubs
or
sbb
or
lock
stos
or
iret
mov
mov
int
and
xor
sbb
add
mov
insl
je
mov
nop
ficomps
ret
jp
in
int3
incb
cwtl
push
insb
aaa
fldcw
cltd
cmp
xor
out
stos
nop
gs
adcb
stos
sbb
mov
add
add
push
add
xchg
stos
xchg
mov
pusha
lcall
push
fucomp
xchg
nop
adc
mov
sahf
aam
aaa
lods
arpl
and
data16
lea
or
int
mov
mov
ljmp
sub
arpl
pop
mov
addr16
andb
jmp
sbb
loopne
dec
ror
stos
jmp
xchg
push
das
pusha
jmp
clc
idivl
cmp
inc
add
mov
adc
dec
and
add
xor
icebp
subl
cld
test
imul
aaa
push
pop
pop
adc
cmp
das
mov
sbb
lds
mov
testb
pop
add
clc
adc
and
cs
jp
cmpsb
cmp
shlb
add
pop
clc
lods
dec
stos
ret
push
shll
jmp
or
test
mov
cmp
je
mov
call
push
and
decl
mov
lea
stos
xorb
test
or
mov
inc
arpl
stos
int3
popl
popa
xor
jbe
shlb
push
adcb
fisubrl
jbe
imul
jl
push
sub
mov
ret
test
mov
fwait
lock
dec
rcll
fildl
out
fs
mov
mov
xchg
arpl
leave
mov
mov
inc
fsubs
mov
movsl
mov
adc
cwtl
xor
call
jp
sahf
aaa
fidivs
mov
test
fistpl
ficomps
sub
ror
pop
pop
popa
mov
adc
je
divb
iret
and
cmpsb
mov
xchg
movsl
out
fs
mov
insl
push
jl
pop
stc
incb
popa
inc
cld
daa
add
jo
test
pop
arpl
sub
jle
gs
sahf
inc
test
push
out
stos
rorl
ja
sub
outsl
and
mov
cmpsl
push
xorl
mov
popf
movsl
in
pop
ficoml
push
into
xor
pusha
jbe
setl
inc
shll
lock
incb
sbb
jbe
jle
adc
or
test
loop
jb
sub
leave
rclb
fidivrl
in
jmp
cwtl
in
mov
pop
popf
mov
xor
lret
mov
imul
testb
adc
rol
mov
jmp
mov
js
mov
pop
test
cmpsb
cmp
sub
push
cmp
add
cmpsb
jb
mov
out
popf
sbb
ficompl
add
sbb
clc
out
mov
sti
stc
add
sbb
pop
push
jne
mov
add
xchg
push
stos
jecxz
ljmp
lahf
jecxz
stos
jne
lret
rorl
in
adcl
daa
cmp
inc
pop
pop
push
dec
mov
loopne
pop
shr
sub
jp
and
shll
ja
dec
and
or
cmc
push
mov
sbbl
sub
ret
jge
loope
fimull
adc
dec
fwait
push
aas
cmp
bound
out
rol
jae
adc
loop
addb
pop
lds
xchg
fs
or
ret
dec
cmpsl
scas
mov
add
inc
ret
pop
jge
sbb
push
test
inc
sbb
add
mov
lret
call
push
imul
jge
rol
pushl
inc
fstpl
push
adc
pop
loopne
cmc
popa
enter
pusha
int
or
adc
adc
shll
add
jl
leave
mov
int
rorl
stos
inc
xchg
shrl
push
test
or
loopne
inc
dec
adc
xchg
clc
fisubl
dec
std
xchg
rcr
mov
iret
sbb
mov
repnz
jo
fdivs
push
fstl
ret
ret
les
jmp
mov
dec
jbe
xchg
or
sbb
mov
jbe
sbb
in
pop
in
sbb
jl
mov
scas
jnp
outsl
fcoms
outsb
cmp
xor
lods
mov
xor
scas
inc
ljmp
or
out
lret
pop
addb
dec
pusha
arpl
ds
sbb
cmp
inc
loope
or
adc
jg
loop
test
fildll
in
inc
ljmp
sbb
sub
pop
xchg
xchg
cli
add
mov
cmp
sbb
mov
jno
mov
add
aaa
shll
mov
pop
lret
mov
cmpsl
ftst
sarb
ret
add
jb
jle
cmp
jmp
dec
mov
pushf
mov
sarl
iret
stos
fisubrs
enter
add
ss
fidivl
add
rolb
push
jg
in
mov
sbb
pop
sub
xchg
sbb
jns
or
mov
add
dec
sbb
mov
jne
xor
adc
pop
mov
bound
xchg
lret
sbb
aam
mov
in
push
aas
in
loopne
inc
lods
cmp
adc
jns
lret
push
cmp
and
pop
outsl
dec
xor
xlat
mov
xorl
xchg
lods
cmp
test
lahf
sbbl
leave
cmc
or
jp
jg
inc
push
push
or
pop
push
cmove
push
xchg
pop
cmp
mov
out
fs
pop
loopne
adc
adc
mov
jge
jne
aas
jg
cmpb
jp
daa
lds
pop
push
xor
sti
xchg
sub
add
xchg
fwait
call
pop
inc
int3
insb
sub
hlt
dec
or
adc
inc
mov
push
das
jno
movl
je
push
sbb
sub
jl
inc
mov
popf
int3
xor
pop
mov
or
pcmpgtb
pop
push
inc
xchg
or
xchg
pop
daa
dec
faddl
loop
test
insl
rolb
js
in
test
cmp
ljmp
jmp
push
jne
xchg
icebp
pop
dec
loop
call
mov
jl
add
pop
daa
fcomps
sub
mov
ret
jg
or
push
and
lret
or
iret
or
cmp
jg
push
mov
mov
mov
hlt
test
cwtl
pop
pop
leave
mov
inc
pop
xlat
mov
aam
adc
jmp
sub
data16
mov
dec
push
inc
cmp
sbb
mov
pop
mov
arpl
int
or
je
sbb
jg
mov
and
pop
mov
xchg
push
jnp
sbb
scas
mov
call
cmp
push
ret
clc
push
jb
rcl
sub
fwait
pop
and
mov
jno
add
sub
add
rcrl
pop
and
mov
test
cmp
in
icebp
lods
mov
test
adc
fs
jge
clc
mov
xor
daa
push
outsb
inc
insb
jg
ret
insb
adc
dec
mov
addr16
xor
pop
fisttpl
sahf
add
sub
adc
pop
pop
jge
test
lea
cmc
pop
jno
out
addl
xchg
lds
xchg
data16
jecxz
jno
mov
fsubl
outsb
jg
stc
mov
dec
add
in
std
das
pop
mov
icebp
mov
inc
out
xor
test
mov
movsb
jle
rclb
mov
fldt
xor
mov
add
cli
mov
mov
push
js
call
scas
int3
std
je
cmp
or
fidivrs
push
idivb
push
out
aad
dec
push
xchg
push
jb
sub
clc
js
sbb
mov
xchg
lds
mov
inc
addr16
sub
adc
je
sub
in
or
aaa
test
pop
rorb
lcall
enter
into
inc
inc
push
jmp
xchg
mov
loope
push
into
cli
dec
imul
xorb
sbb
lea
inc
cli
inc
adc
std
fsubs
aas
cmp
mov
add
mov
or
and
mov
cmp
mov
jns
lea
outsb
arpl
es
loope
mov
rorl
pop
clc
add
xchg
loop
sbb
rcll
dec
in
bound
stc
mov
cmp
bound
in
push
jmp
and
loop
mov
sub
shl
ret
jns
cmpsl
les
insl
mov
popf
sub
lahf
jno
xchg
fwait
loopne
add
cmc
mov
fstp
sti
or
mov
push
push
mov
add
and
cs
roll
jmp
iret
daa
ljmp
push
inc
mov
cmp
mov
into
cmp
dec
push
fadds
mov
jp
xchg
out
pop
mov
testb
or
dec
loope
push
lock
outsb
pop
lea
ja
mov
inc
fdivl
push
mov
push
mov
jno
call
or
aam
xlat
push
or
stos
mov
mov
mov
je
sbb
pop
rcrl
add
cwtl
loopne
cmp
es
data16
dec
je
xor
shrb
js
mov
cmpsb
inc
pop
xor
test
sbb
adc
outsl
imul
mov
es
sbb
mov
pop
add
and
mov
sahf
jb
and
dec
rolb
test
subl
mov
aad
outsb
pop
ret
jne
mov
push
addr16
gs
mov
mov
xorl
push
rcll
pop
into
mov
dec
inc
in
ss
push
fs
jl
mov
mov
ds
adc
dec
push
xor
sbb
cli
cmpsl
push
fildll
psrlw
push
call
xchg
sbb
dec
cld
jo
cmp
into
enter
aas
mov
sbb
adc
add
mov
jecxz
repnz
cmpsl
and
pop
pop
es
mov
mov
arpl
sub
hlt
or
ljmp
push
sbb
sbb
push
jb
iret
xor
cmpb
push
pop
jno
ficoml
mov
inc
outsl
cmp
mov
jmp
lock
mov
push
and
pop
push
pop
insb
mov
jle
fs
pushf
out
clc
sbb
test
sub
lods
fwait
dec
dec
movsb
push
inc
jae
jno
insl
fadd
sbb
cmc
mov
rcrb
push
repz
push
scas
lret
rcrb
jbe
mov
ret
sub
lcall
or
int
test
mov
in
cld
jecxz
xchg
cmpsb
es
ss
test
inc
jo
scas
les
ds
push
fst
cwtl
jge
or
push
pop
add
cltd
dec
xor
popa
insb
mov
aad
cmp
adc
mov
xor
xor
js
adc
clc
pushf
movsb
in
xor
sbb
cmc
repnz
subb
ljmp
mov
in
push
jl
sahf
jnp
mov
ds
mov
lods
and
sub
or
jbe
outsl
jbe
mov
sbbb
pop
xchg
cmc
mov
adc
les
dec
leave
add
aaa
adc
stos
jmp
pop
scas
or
adc
sub
inc
inc
xchg
cwtl
adc
jg
scas
pop
fwait
scas
cmpsl
call
adc
cmpsl
aas
jbe
ja
xchg
or
dec
andl
test
sti
rcl
xchg
out
and
inc
sub
pop
popf
test
js
lds
inc
scas
xor
fdiv
add
aam
in
or
jo
arpl
pop
repnz
pop
or
leave
inc
and
movsl
inc
adc
or
cs
sub
xchg
rolb
outsl
scas
imul
adcl
cld
call
hlt
lock
loope
sbb
pop
cmp
adcl
fnsave
mov
jge
jno
mov
push
movsl
int3
pop
dec
fidivl
call
mov
lret
mov
shrb
cmp
lock
jns
imul
lahf
popa
and
push
lods
xchg
xchg
fwait
push
add
mov
lock
push
push
mov
mov
xchg
lds
xchg
enter
pop
and
rsqrtps
mov
insb
sbb
div
sbb
aas
pop
cmp
enter
das
xchg
mov
lds
rclb
push
xchg
push
pop
fisttpll
or
loope
aam
or
pop
mov
mov
rclb
shlb
enter
jns
xchg
push
or
fwait
ds
pusha
add
int3
insb
cmp
notl
shlb
add
rcrb
test
xchg
jb
rcl
sbb
jne
sbb
mov
push
push
mov
or
xlat
xchg
push
sbb
xor
jno
je
shl
loopne
movsl
add
icebp
mov
ja
mov
or
lds
std
mov
dec
lcall
xor
leave
cmp
dec
mov
loopne
js
call
mov
or
xchg
shll
mov
or
or
inc
lahf
and
mov
pop
mov
inc
sub
dec
mov
lock
lods
or
mov
push
adc
xchg
loopne
xchg
addr16
push
es
popa
pop
add
dec
loope
pop
ja
mov
push
inc
mov
pop
into
xchg
fistpl
clc
int
pop
inc
in
or
fdivrs
cwtl
xchg
push
adc
arpl
mov
jae
subl
outsb
inc
pop
mov
add
imul
cli
push
enter
test
movsb
arpl
mov
or
fwait
sub
mov
pop
js
jp
or
or
pusha
rorl
loopne
popa
dec
xchg
xchg
add
mov
insb
repz
and
mov
ljmp
addr16
xor
jle
fstpt
leave
push
mov
jg
add
in
scas
fcmovb
inc
pop
flds
pop
cltd
popa
gs
in
movsb
shll
mov
out
adc
ret
pop
xchg
mov
arpl
rorb
jo
psubsb
pop
shrb
inc
sarl
cltd
pop
pusha
ret
adcl
mov
push
sub
adc
jg
aad
or
lahf
and
add
imul
and
pop
fdivr
insl
push
insb
xchg
sub
ret
lret
lfs
xor
insl
mov
cld
xor
sbb
mov
xchg
pop
popf
mov
pop
jecxz
jmp
and
imul
cmp
xlat
xor
pop
mov
lahf
test
aad
test
cli
enter
ret
push
loopne
or
inc
xor
pushf
lcall
xchg
dec
fs
pop
jbe
movsb
sbb
iret
incl
lahf
xor
dec
push
dec
sub
add
xchg
dec
mov
jmp
dec
jbe
inc
test
xchg
scas
cli
and
push
aad
daa
fsubr
sti
call
inc
loope
fs
adc
rorl
pop
ds
jle
cld
mov
popa
in
jecxz
xor
gs
aas
pop
sbb
mov
sti
and
test
ss
adc
adcb
adc
sbb
lods
filds
lods
es
mov
or
lock
sub
and
rcll
fadds
movsb
sahf
fsubrs
jecxz
inc
sti
mov
mov
shll
icebp
jno
insl
test
sar
leave
repz
into
std
cmp
std
or
fisubs
and
push
lods
repnz
mov
inc
pop
push
lret
nop
mov
and
sub
stc
mov
pop
and
sti
scas
adc
mov
pop
lea
mov
outsl
push
popf
es
xchg
dec
cs
in
ljmp
mov
sbb
cmp
mov
push
enter
adc
rol
cmpsb
adc
cs
pop
test
cmp
fwait
movsl
sub
cmc
or
or
out
sbb
ret
sub
add
xchg
jg
mov
roll
repz
sbb
stos
sub
mov
jno
insb
or
dec
push
test
push
sbb
testl
test
xchg
cmpsb
pop
mov
sbb
out
xchg
icebp
jmp
or
pop
mov
loope
mov
pop
xchg
add
xlat
xchg
loop
dec
mov
fdivp
jle
roll
imul
cld
test
loop
jmp
jnp
add
fs
cmp
lahf
out
mov
mov
or
inc
cmp
aas
fwait
and
mov
sub
add
daa
jge
data16
lods
in
pop
mov
fidivrs
xor
or
sbb
sub
hlt
and
mov
adc
repnz
jb
test
out
hlt
mov
inc
rcll
mov
out
jo
add
mov
sub
inc
pop
shll
aam
mov
push
mov
mov
fisttpll
icebp
or
xor
insl
sbb
jl
xor
mov
inc
xor
cmc
mov
mov
inc
mov
dec
adc
pop
sahf
add
pop
adcl
dec
xor
lea
ret
pop
aaa
aaa
orb
adc
int3
aam
sbb
mov
mov
fwait
cmp
ret
das
fwait
adc
lock
int
aaa
sub
jno
mov
rorl
adc
into
mov
add
jne
scas
inc
andps
sbb
sti
xlat
jp
and
inc
les
cmc
sti
clc
mov
sbb
mov
rcr
inc
inc
or
or
lcall
arpl
inc
popa
pop
sbb
or
iret
push
pop
jp
pop
fdiv
cmpsl
ljmp
lods
mov
sbb
dec
cmp
sti
mov
adc
dec
out
and
fildl
cltd
ret
pop
scas
sti
adc
sub
js
mov
sub
inc
ja
push
adcb
sub
hlt
jbe
jl
xchg
xor
scas
xchg
sub
xchg
push
test
dec
mov
js
mov
adc
lea
faddl
ds
xor
pop
pop
mov
arpl
ret
mov
push
std
mov
hlt
sub
in
mov
pop
xlat
inc
jne
mov
es
inc
loop
mov
enter
jg
or
xchg
pusha
mov
xchg
cmp
push
test
dec
jb
dec
bound
in
mov
ljmp
imul
push
les
loop
fisubl
rcll
test
cmp
je
scas
call
addb
jbe
or
sbb
inc
inc
xlat
mov
cltd
imul
mov
rcrl
loopne,pn
mov
rorb
inc
fidivrs
loope
shr
imul
mov
jg
ret
dec
or
pop
inc
hlt
adc
shlb
cmp
jb
xchg
fs
xor
out
mov
hlt
arpl
pavgw
lds
out
pop
and
div
or
sbb
sub
xchg
jmp
sbb
mov
push
push
sbb
sub
insb
aam
push
mov
loopne
and
dec
pop
push
mov
test
mov
loope
pop
pop
imul
pop
dec
mov
jns
lods
push
adc
shrl
cmc
shlb
mov
daa
shll
hlt
mov
and
pop
les
jecxz
je
mov
xor
sub
add
push
popa
ljmp
shll
xor
xor
and
jno
mov
xchg
sbb
or
or
pusha
mov
or
clc
push
lods
jns
clc
add
imull
cwtl
sub
imul
push
decl
in
sahf
call
or
pop
iret
ficoms
sub
or
dec
movsb
decb
outsb
fcomp
sarb
rolb
lds
jl
cmpsb
loopne
leave
add
call
xor
jl
push
sbb
aam
lea
mov
xor
xor
outsb
jecxz
jg
ja
jg
pushf
sub
lret
mov
xchg
mov
xchg
add
jno
mov
lods
sbb
pop
into
or
xchg
push
or
pop
sbb
push
je
or
mov
mov
es
lods
arpl
cmp
stos
adc
and
jle
shlb
push
cmp
mov
inc
push
inc
pushf
ret
addl
dec
pop
cmp
das
add
shl
in
pop
mov
mov
mov
repnz
push
clc
lret
aam
sti
pop
xor
xchg
pop
bound
cmp
pop
fwait
ds
bound
fdivrl
rorl
ljmp
into
aad
mov
ljmp
rcll
test
xchg
xor
loope
or
mov
lea
mov
pop
mov
jge
jae
test
jb
add
dec
mov
pop
or
rol
jl
testb
pusha
dec
or
sti
arpl
mov
push
and
dec
fnstenv
add
cs
nop
sbb
mov
mov
sub
gs
not
cmc
pop
test
adc
add
loop
shlb
xchg
clc
ret
lcall
fidivrl
fstl
idivb
test
mov
xchg
out
jge
ljmp
xchg
pusha
fdivrl
mov
pop
mov
and
in
test
jmp
ljmp
add
jg
mov
fnsave
daa
gs
shlb
jb
and
repnz
loope
push
inc
es
add
push
sub
push
aas
sbb
xchg
inc
jae
add
and
js
sarb
jae
enter
and
mov
or
pop
jno
add
inc
fmuls
nop
push
mov
repnz
fldl
aam
dec
or
add
ja
iret
sti
jno
jp
and
lea
cmp
or
aam
sahf
pop
inc
lret
jns
jno
cmp
outsb
mov
loop
push
stos
shll
subl
push
jp
out
xchg
outsl
or
inc
jae
shr
push
cld
xchg
xchg
or
shrb
outsb
mov
insb
cmp
dec
test
cmp
push
outsb
sbb
xchg
lret
push
test
or
cmc
xchg
mov
jbe
in
fsts
push
mov
push
cmpsb
das
loop
ja
roll
movb
into
sub
sub
std
push
xor
add
fidivs
xchg
ret
fdivs
pop
push
inc
lret
or
mov
cli
and
inc
je
pop
mov
imul
add
jg
jmp
test
inc
or
mov
pop
inc
jae
lahf
cwtl
cwtl
mov
shlb
jns
inc
and
jmp
adc
sub
push
enter
push
rolb
lds
lret
sbb
ds
inc
in
add
notb
iret
xor
clc
add
mov
xchg
sbb
dec
inc
pop
das
insl
and
push
mov
cmpsb
shl
push
aad
addr16
xorb
fiadds
push
divl
scas
dec
cmp
add
bnd
inc
mov
test
std
js
push
in
movsl
shlb
cmpsl
push
mov
mov
add
cld
pop
cld
sub
rcrb
faddl
xor
imul
inc
imul
sahf
clc
hlt
dec
cmp
xchg
pop
arpl
subl
out
imull
push
js
dec
dec
fcomip
lods
inc
lds
add
pop
or
inc
fs
push
adcb
faddp
arpl
push
sub
sbb
mov
mov
jmp
mov
mov
cmp
mov
mov
sub
cmpsl
dec
aam
add
jp
jle
data16
in
out
and
inc
sub
int3
orb
sub
sub
mov
and
lcall
icebp
das
push
jnp
and
adc
fwait
test
mov
push
lcall
mov
jbe
jge
mov
rclb
cmp
pop
fwait
inc
push
call
dec
test
test
dec
push
jae
inc
cmp
mov
adcb
sub
push
fsubrl
ror
xor
add
push
dec
lds
stos
icebp
fwait
cmpl
test
cmp
mov
push
adc
bound
enter
push
dec
popl
scas
repz
jge
jecxz
mov
hlt
cli
mov
push
cmc
or
inc
and
sub
arpl
arpl
push
jecxz
icebp
xchg
jo
popf
out
ljmp
icebp
cmc
xor
add
push
sbb
mov
rorl
mov
dec
pop
jp
sbb
hlt
jp
mov
mov
arpl
ja
ret
rclb
insl
je
test
hlt
push
cmc
jl
scas
sti
adc
movsl
ret
stos
sti
jge
addr16
mov
dec
pop
push
mov
pop
jo
orb
xchg
cmp
xlat
hlt
movsl
call
mov
sub
call
push
mov
and
mov
mov
iret
lods
inc
jne
iret
das
add
orl
es
js
cwtl
clc
shlb
popa
fsubs
inc
xchg
outsb
cmpsb
aas
pop
scas
mov
mov
cld
mov
xor
adc
mov
lods
aad
addr16
loope
cmc
push
outsl
push
mov
sbb
rorb
nop
cmp
xor
jno
arpl
ret
mov
gs
arpl
sbb
jae
cli
inc
jmp
dec
cmp
popf
mov
js
arpl
or
fwait
cs
daa
mov
outsl
sarb
inc
movsb
add
mov
xchg
sub
mov
mov
icebp
loopne
mov
outsl
ss
adc
pop
in
add
mov
mov
dec
pop
dec
and
test
loopne
mov
stos
mov
hlt
dec
out
add
inc
push
and
pop
icebp
fcoms
jg
mov
das
xor
fdivs
cmpsb
scas
push
jnp
adc
xchg
ja
sub
lds
mov
jb
and
ja
sub
test
xchg
mov
std
das
push
movsl
sbb
push
xlat
sub
imul
jge
cld
sub
cmpsl
sbb
xchg
inc
imul
sbb
pushf
out
push
rol
outsl
movsl
mov
cwtl
cmp
aas
aad
xor
inc
call
mov
cmpsb
jg
adc
adc
mov
push
push
jo
aam
sbb
les
push
test
insl
xchg
jle
fildll
sub
push
xchg
fcoms
fisubl
push
scas
jp
sbb
rolb
push
cmp
mov
shl
ljmp
push
and
adc
int3
outsb
shlb
or
in
mov
mov
sbb
mov
mov
lock
fcomps
ds
test
or
xlat
cmp
testl
test
push
mov
test
cmp
cld
fdivs
xchg
mov
xchg
out
sub
ss
dec
jne
dec
xchg
adc
leave
aaa
cmc
pop
ficompl
out
movsl
jbe
and
rcrl
fidivrl
fwait
dec
or
push
ja
lea
or
mov
hlt
hlt
push
adc
xchg
ds
sbb
mov
xlat
add
pminsw
mov
jnp
push
mov
hlt
addr16
vmread
rclb
mov
sahf
enter
cmc
das
and
out
mov
test
cs
xor
out
insl
jbe
inc
sbb
jno
daa
loopne
and
popf
mov
jae
and
call
fildl
cmp
fbld
pusha
es
fsubrl
xchg
orb
inc
ret
pop
push
outsb
pop
data16
xor
popf
jno
xchg
push
in
cmp
inc
outsl
arpl
out
ja
add
adc
mov
adc
test
outsb
jnp
mov
mov
enter
out
pop
mov
mov
push
icebp
fs
pop
popf
popw
shlb
mov
fmull
in
push
cli
rcr
sbb
adc
sub
pop
sub
dec
mov
lea
into
les
rorl
mov
loopne
xlat
iret
rcll
sub
jmp
das
insb
sbb
js
dec
pusha
out
jl
push
aad
or
outsl
lahf
xchg
test
jne
in
sti
or
orb
in
and
sarb
or
or
stos
xchg
fadds
sub
jne
call
stos
inc
xchg
das
xchg
out
test
pop
out
mov
dec
in
fldt
iret
flds
sbb
fwait
push
jbe
add
pop
xor
addr16
cmp
mov
adc
dec
pop
inc
dec
arpl
cmp
cli
sbb
jns
dec
push
aad
xchg
stos
inc
pusha
mov
fwait
adc
add
dec
test
ficoml
and
fmuls
rcrb
dec
add
cmpsl
sbb
add
pop
mov
jg
lret
shr
lcall
out
popf
cmc
xchg
jecxz
jbe
and
fadds
add
pop
sbb
outsl
inc
push
jmp
in
fcmovu
and
sti
hlt
pop
clc
jecxz
addr16
mov
aad
sub
push
cmp
test
pusha
and
adc
rol
iret
jnp
jne
shrl
test
jnp
cmp
je
mov
mov
idivl
sbb
aam
rcrb
pop
leave
adc
mov
arpl
pop
mov
push
aam
outsb
das
sub
jne
outsb
jmp
fisubrs
cmp
sbb
es
jle
pop
jl
mov
and
in
ss
fdivrp
ljmp
adc
adc
ret
push
sti
push
rolb
mov
test
adc
pop
loopne
pop
mov
mov
cmp
sahf
push
jle
dec
dec
movsl
jmp
push
js
std
sub
and
sub
pushl
movsb
fs
jl
shr
xor
jle
sbb
dec
add
mov
out
and
sbb
inc
adc
popa
mov
cli
cmpsl
mov
mov
out
xchg
fistpl
fwait
clc
inc
repnz
mov
xchg
sbb
imul
leave
mov
pop
jo
lock
pop
sti
jle
sbb
sysexit
arpl
sbbb
mov
shl
pop
movsl
pop
sarl
inc
xchg
push
into
pop
push
inc
pop
mov
in
loop
inc
jnp
sub
jo
lahf
inc
test
sbb
cmp
rolb
fsubs
add
mov
jne
dec
insl
jle
mov
pop
adc
out
dec
popf
mov
mov
xchg
enter
inc
shr
data16
push
imul
xorl
mov
dec
mov
inc
jnp
mov
pop
push
add
shlb
mov
inc
mov
sbb
sub
lods
inc
jb
pop
mov
iret
into
loopne
xorl
mov
xchg
or
insl
test
faddl
aas
rcrl
outsl
and
sbb
xchg
dec
into
mov
dec
and
push
jno
mov
js
jmp
arpl
mov
pop
jne
sbb
ffree
pusha
cmp
jno
xchg
mov
add
outsb
add
icebp
in
cmp
inc
cmp
xchg
jns
roll
sub
test
popf
jp
pop
jge
jae
mov
xchg
inc
in
int3
outsb
cmp
pusha
xlat
enter
dec
movl
pop
xchg
cmpsb
inc
pop
shl
insb
inc
idivb
xor
pop
mov
pusha
adc
or
imul
mov
push
fs
out
sbb
push
add
std
sub
push
fimuls
push
daa
mov
jecxz
leave
dec
mov
pop
ficoml
je
ret
jae
fistl
pop
ret
pop
mov
adc
cmp
cmc
cmpsl
push
data16
loop
push
lods
icebp
lods
int
inc
adc
sub
rcll
outsb
and
inc
stos
mov
cwtl
push
mov
call
das
push
xchg
mov
pop
adc
aam
cmc
or
sbbl
sahf
add
shrl
add
sbb
sbb
test
aaa
jbe
js
pop
jp
cli
jo
add
imul
xchg
and
xor
cmc
lahf
and
dec
ja
divl
inc
adc
mov
in
and
into
pop
inc
fnstsw
sub
das
std
sub
adc
mov
sarl
hlt
jmp
jae
jp
lea
data16
fnop
out
cmpsl
xchg
push
pop
pop
xlat
loop
or
cmp
xor
fwait
ja
nop
jmp
xor
jno
cmpsb
sbb
iret
aaa
ss
xchg
call
and
jp
xchg
sti
or
xor
lahf
mov
rcl
mov
in
lahf
daa
mov
or
fcmovnbe
jo
or
lcall
push
xchg
arpl
inc
ret
push
mov
out
loopne
ret
pop
jo
mov
clc
xchg
xor
push
xchg
enter
lock
outsb
hlt
lret
pop
aam
imul
mov
sub
mov
ret
fsubs
pop
out
mov
mov
sbb
or
ljmp
xorl
sbb
mov
ss
pusha
sbb
push
das
test
jl
das
dec
mov
mov
inc
call
jge
xchg
mov
dec
mov
in
ret
rolb
sbb
sar
sub
jp
jnp
add
ror
subl
stos
dec
sbb
jg
idivl
xchg
mov
add
pop
cli
inc
ret
mov
shlb
lret
jno
mov
push
xchg
dec
mov
cs
inc
add
dec
inc
mov
sbbb
sahf
jle
sub
fidivs
lea
add
or
add
dec
insl
jl
scas
call
pop
xchg
push
roll
out
push
jns
and
fildl
push
inc
push
pushf
xchg
mov
jecxz
pop
and
push
xor
pop
and
cmpsl
sbb
xor
jns
fldt
clc
and
lods
adc
push
in
aas
aad
icebp
mull
and
mov
push
pop
js
add
add
loope
mov
push
in
popf
ret
mov
jae
fstpl
lds
lds
push
insl
inc
loope
jl
pop
xchg
mov
pushf
stc
add
lret
mov
insl
add
sbb
insb
xor
sbb
jb
mov
inc
jo
fistpl
mov
xchg
ja
fistpll
cmpsl
and
xor
push
cmpsl
sub
lods
xchg
mov
lcall
icebp
xor
add
inc
push
push
dec
push
out
and
pop
or
cmp
adc
sahf
das
sub
lcall
ffree
mov
es
fstl
mov
pop
push
pop
sti
adc
out
popa
xchg
xor
test
rorb
fucomi
dec
jp
xor
cmpsl
jne
test
xchg
loopne
sbb
shl
iret
and
out
fdivr
inc
jp
cmp
scas
jo
push
ja
das
pop
faddl
pop
adcb
int
fcmovbe
out
fiaddl
gs
adc
das
call
xorb
xchg
cmp
decl
mov
jg
pop
pop
and
and
inc
ds
or
mov
test
loope
scas
enter
aad
cs
inc
push
adcb
push
into
aas
push
push
adc
mov
lock
loopne
lods
les
sbb
jnp
jp
sub
mov
cmpsl
cld
push
in
lods
xchg
ljmp
data16
adc
shrl
xchg
mov
fsub
fcompl
inc
daa
cmp
es
fistpl
cmc
fildl
pushf
popa
lcall
popa
sti
adc
jle
sbb
icebp
pop
shlb
add
push
test
outsb
pop
mov
and
cmp
in
jbe
ret
adc
fcmove
loope
pop
loopne
mov
push
imul
faddl
add
add
sub
and
mov
mov
and
test
sub
lahf
scas
dec
test
jmp
shr
outsl
addr16
pop
das
sarl
rolb
int
daa
push
sub
jl
outsb
pop
ret
jns
adc
nop
pop
mov
shlb
cmp
add
mov
test
push
ret
push
mov
inc
fldenv
mov
mov
out
push
jno
popa
sarl
pop
mov
mov
pop
cs
fsubr
aaa
fdivp
ret
stos
ljmp
or
stos
dec
jo
pop
dec
aas
xlat
in
mov
mov
aad
adc
cmp
lret
loop
mov
jns
inc
adc
lods
in
dec
jg
sbb
xorb
and
or
shl
push
aaa
test
xor
xor
pop
adc
dec
adc
xchg
hlt
sbb
or
fdivrl
push
inc
adc
inc
pop
mov
mov
mov
cmp
fwait
mov
jae
jl
or
pop
jno
mov
rorl
insb
inc
adc
cmpl
fs
xchg
push
xorl
mov
and
xchg
loope
daa
js
jbe
xchg
loopne
das
adc
inc
and
cmp
fs
mov
fists
ret
punpckldq
in
mov
pusha
xchg
add
xorl
leave
cwtl
imul
inc
je
adcb
popf
pop
xchg
inc
inc
and
push
add
dec
mov
test
aaa
outsl
lds
inc
adc
and
int3
divl
imul
pusha
adc
neg
lahf
sarb
xchg
jmp
addl
xor
fdivr
xchg
cmc
and
js
mov
or
insb
pop
pop
xchg
imul
out
test
pop
adc
out
cmp
icebp
jmp
mov
xchg
ljmp
fs
sbb
arpl
ljmp
xor
les
xchg
cs
mov
mov
jecxz
decl
insl
lods
sbb
nop
dec
aaa
sahf
cs
leave
jmp
arpl
notb
push
sub
jp
test
and
mov
or
push
xchg
aaa
dec
cld
adc
test
jno
or
inc
shl
out
dec
pop
imul
xchg
fisttpl
pop
sub
lods
dec
vmulpd
adc
and
ffree
fwait
sti
mov
inc
push
jb
mov
push
jo
fisttpl
mov
cmp
ljmp
mov
dec
jae
mov
mov
jae
aaa
inc
repz
ror
push
out
les
ss
icebp
mov
rorl
fidivrs
jnp
inc
fistl
in
test
cmp
shrb
xlat
lahf
das
pusha
sahf
les
adc
in
aam
sbb
rol
pop
mov
fldenv
jns
pop
add
xor
push
sbb
jp
test
pushf
jno
add
in
mov
out
hlt
jnp
push
mov
sbb
adc
mov
jns
movb
xor
jmp
sub
insl
push
faddl
lahf
cmp
or
sbb
dec
push
xor
jle
mov
sbb
xor
imulb
add
rcll
mov
das
sbb
jp
and
lock
jae
mov
sbb
sub
xchg
pop
sbb
mov
cs
scas
push
pop
inc
jno
xchg
mov
lcall
adc
sti
cmp
sbb
inc
test
xchg
sbb
cli
movsl
or
popa
les
mov
jge
rcrb
lcall
pop
daa
mov
sbb
or
es
jg
mov
inc
jg
roll
add
add
jle
sbb
push
shll
sbb
pop
jo
xor
idiv
jecxz
outsl
jmp
ss
icebp
push
pop
mov
or
sub
daa
jbe
add
inc
bound
sbb
clc
pop
push
inc
icebp
add
leave
cmpsb
lock
clc
lock
andb
push
dec
aam
push
xchg
or
sub
jbe
mov
lods
push
rclb
pop
shlb
sub
or
cmpsb
pop
daa
inc
scas
sbb
jo
xor
mov
adc
push
inc
adc
inc
popa
mov
cmp
mov
and
sbb
cli
sub
in
inc
dec
fisubl
sbb
clc
repnz
pop
add
cmpsl
cmp
inc
ret
iret
xor
sbb
and
sarb
inc
ds
dec
dec
cmp
nop
outsl
bound
pop
adc
jle
push
sbb
xor
fwait
rcll
ret
test
shrl
adc
test
mov
jo
pop
movsl
mov
pop
inc
inc
shl
push
and
push
std
sub
fidivrs
pop
imul
fcmovu
dec
lock
adc
cmp
cmpsl
push
dec
jl
jecxz
in
call
or
xchg
and
stos
std
fistl
sub
test
ror
stos
sub
pop
ficompl
outsl
jl
divl
test
std
mov
lahf
notb
fbld
dec
add
pop
xor
test
fwait
mov
push
mov
pop
icebp
mov
loopne
pop
mov
adc
xor
jmp
stos
jg
mov
sbb
jae
push
aam
lahf
cld
cwtl
pushf
push
push
ljmp
rcl
in
imul
lcall
xor
mov
mov
popf
lds
push
push
jg
adc
cmp
xchg
pop
cmp
pop
aad
stc
or
ja
mov
test
and
lahf
or
outsl
popf
nop
out
jnp
fisubrl
push
subb
jno
dec
sub
mov
cmp
xlat
cli
mov
or
or
push
push
out
mov
push
xor
mov
push
jmp
cwtl
mov
xchg
sub
xor
xchg
out
inc
cmp
fwait
pop
rcrl
sbb
jecxz
xor
push
push
jge
inc
sarl
test
lods
xchg
jns
xchg
jmp
pusha
push
shrl
leave
inc
sti
ja
jl
jo
sbb
cwtl
dec
mov
xorl
sub
add
pop
mov
ret
cmpsb
subb
xchg
adc
dec
xchg
add
jle
int
mov
fiadds
sbb
aas
mov
dec
outsl
pushf
add
das
jnp
popl
push
or
mov
fdivrp
cmpsb
call
imul
cmp
pop
and
push
push
aas
or
sbb
xor
negb
nopl
cmpsb
loopne
popf
add
out
mov
push
sbb
sarl
test
sbb
ret
jle
arpl
hlt
mov
lea
lahf
cli
lea
push
lcall
and
lock
sub
lea
cld
test
push
pop
dec
outsl
mov
fildll
aad
ret
adc
dec
xchg
loop
or
scas
inc
mov
or
mov
sahf
int
inc
cmp
and
mov
push
xchg
sti
loopne
test
inc
xchg
add
or
sbb
mov
add
pop
cwtl
test
xchg
mov
mov
shr
daa
jb
sbb
push
sub
mov
mov
test
cmp
push
sbb
add
xor
icebp
push
orl
bound
pop
cld
jbe
repnz
pusha
mov
cli
movb
cld
pusha
ljmp
or
hlt
push
aam
sub
mov
dec
pusha
shrl
add
jo
jecxz
scas
out
sti
jo
xor
movsb
mov
dec
xor
sbb
cld
lcall
jle
es
cmp
dec
add
popf
in
test
lret
xchg
stos
dec
mov
movsb
mov
add
or
jecxz
loop
mov
adc
test
mov
mov
cmp
unpcklps
cmp
inc
xor
adc
jo
add
add
out
sbb
lret
cmpsb
daa
roll
fiadds
orl
pop
mov
jmp
jl,pn
push
ret
push
mov
bound
cli
or
je
jg
and
es
faddl
fdivrs
mov
cwtl
inc
pop
repnz
jle
dec
xchg
outsb
inc
pop
inc
test
je
les
jl
loopne
pusha
mov
mov
mov
dec
outsl
mov
push
mov
mov
dec
into
mov
sub
in
setle
or
sarl
push
sub
aas
rolb
dec
insb
add
adcl
lods
aaa
out
mov
aaa
pop
pop
cltd
push
or
ss
outsl
mov
nop
add
sarl
daa
addr16
xchg
repnz
cld
mov
cwtl
mov
push
mov
sbb
inc
add
jne
iret
inc
ljmp
lds
or
jmp
xchg
xchg
xor
jle
daa
pop
sub
push
loope
xchg
in
testb
icebp
xchg
ds
adc
jno
xchg
and
xor
int
inc
jne
xor
pop
mulb
jp
adc
mov
test
mov
cltd
imul
cs
clc
aas
cmc
sub
adc
mov
test
add
push
lret
jnp
shrb
pop
adc
popa
adc
popf
push
mov
mov
jo
test
jae
xlat
jno
fstp
push
fidivrl
data16
sbb
xchg
mov
addl
adc
mov
or
fisttps
lret
push
jmp
sbb
mov
loope
xor
jmp
nop
mov
arpl
and
test
jo
dec
stos
adc
pop
shrb
inc
sub
jb
es
sbb
arpl
loop
push
mov
dec
call
and
rcr
jne
add
js
insl
mov
and
clc
dec
sbb
or
sub
mov
ljmp
sub
sub
adc
loop
mulb
cmpsl
inc
popf
pop
adc
stos
fistps
mov
fsubs
sbb
pop
sub
dec
orb
das
jmp
movsb
test
sbb
arpl
inc
inc
lahf
mov
js
sub
cmpsl
lahf
cmpb
push
int
shl
sub
lock
ret
sub
push
aam
sarb
call
mov
xor
fs
xlat
mov
mov
adc
inc
sti
idivb
xchg
cmp
scas
movsl
mov
mov
outsl
jecxz
inc
cmpsl
test
xchg
pop
adc
movsb
in
mov
pop
xchg
mov
sahf
jo
or
jo
shll
xlat
cmp
lds
test
inc
ret
ret
cmp
pop
pop
pushl
fsub
out
nop
dec
xor
dec
push
mov
arpl
mov
or
add
pop
out
jns
cmpsb
push
xchg
cmc
inc
cmpsb
ss
push
add
leave
fs
mov
sbb
mov
xchg
xchg
mov
pop
pushf
add
shl
push
fs
imul
outsb
imul
or
cmp
xor
mov
movsl
bound
push
push
je
in
add
inc
orl
pop
outsl
xor
xchg
add
loope
xor
mov
add
inc
and
push
or
adc
pop
aad
out
push
sub
add
or
insb
jecxz
mov
jmp
filds
inc
imul
ljmp
call
xadd
cmpsb
add
ljmp
dec
test
enter
mov
movsl
cmpsl
leave
or
inc
mov
pop
jge
insb
or
filds
flds
push
std
ds
dec
pushl
add
leave
out
add
or
scas
int
call
xor
lret
sbb
adc
nop
pop
mov
jnp
adc
fs
mov
shlb
rcrb
adc
ljmp
xchg
pushf
mov
jge
repz
cmp
mov
icebp
out
adc
mov
popa
mov
out
outsl
popa
inc
push
sbb
push
in
outsb
cmpsl
cmc
and
inc
loope
cmp
jb
inc
mov
xchg
cmp
scas
inc
pop
fs
jae
shr
xchg
outsb
or
add
mov
pusha
push
sbb
push
push
mov
out
pop
ljmp
loop
pop
push
fsubl
stos
or
mov
cmp
cmp
cmp
cld
push
insl
das
std
lahf
sub
pop
dec
push
outsb
jno
jno
adc
fstpt
or
testb
lahf
xchg
xor
insl
push
data16
or
add
cltd
or
sbb
filds
pop
popf
shll
hlt
stos
dec
clc
lock
pop
push
push
hlt
sbb
jns
sbb
push
bound
jle
fisubs
ficomps
adc
mov
scas
sbb
es
xor
mov
shl
push
jnp
dec
jmp
dec
faddl
xchg
int3
mov
sbb
aad
xor
js
mov
and
adc
xor
sbbb
sub
mov
mov
lods
sub
inc
pusha
jecxz
bound
inc
and
pushf
std
inc
push
pushl
mov
lahf
aam
pushf
and
pop
push
adc
shrl
sub
sbb
adc
sbb
pop
inc
sub
add
mov
cltd
sti
mov
repnz
out
loopne
mov
cld
mov
inc
sbb
lods
in
outsl
sahf
movsl
leave
clc
mov
pop
xor
andl
sub
inc
les
idivb
stc
dec
insb
jmp
add
mov
cltd
cmpsb
mov
mov
xchg
cmp
xlat
xchg
xor
jb
push
movsb
lret
cltd
mov
mov
or
sarl
pop
mov
add
xor
sub
mov
inc
es
ss
sbb
aad
bound
fisttpl
cmc
and
sbb
sbb
pop
jl
mov
pusha
cmpl
rcr
scas
ljmp
jne
sub
rcll
dec
out
cmp
mov
inc
add
jecxz
jle
jg
pop
movsb
fmul
and
mov
xchg
ja
lods
cmp
push
aam
push
test
sbb
adc
pop
adc
repz
inc
divps
fiaddl
ja
daa
pop
fcomps
mov
inc
inc
add
sbb
push
inc
pushf
or
xchg
movsl
push
jne
sbb
jo
mov
fadds
xor
les
rorb
imul
mov
mov
mov
cvttps2pi
mov
sub
aas
mov
sub
scas
pop
xlat
roll
mov
jle
mov
lret
lahf
xor
ja
xchg
dec
inc
push
mov
call
das
adc
mov
popa
popa
fs
xor
sbb
mov
leave
add
mov
sbb
mov
mov
add
sbb
enter
movsl
fnstsw
in
jmp
inc
or
into
dec
pop
ds
mov
jmp
fdivrs
pop
les
insl
sti
test
sbb
cmp
aam
push
iret
add
and
mov
test
ficoml
add
mov
push
sbb
and
lock
insb
call
xchg
in
push
xchg
dec
or
or
clc
push
cmp
jmp
fiadds
cmpsl
or
inc
push
xor
ret
sub
pop
xchg
cli
mov
xchg
sub
pop
jle
aam
repnz
mov
sub
das
and
jbe
dec
je
pusha
cltd
hlt
and
aam
in
shlb
sarl
adc
scas
jbe
mov
cmp
out
jb
xor
jg
call
xor
es
lret
mov
add
imul
dec
inc
cli
outsl
enter
cmp
jo
jle
and
stc
mov
jo
push
push
pop
pop
mov
sbb
sub
mulb
aad
filds
add
and
add
subl
fldl
cmp
shll
mov
aaa
pop
iret
push
nop
fcomps
mov
jne
cmc
mov
leave
jns
adc
lods
adc
shll
stc
out
add
jno
add
nop
cmpsl
scas
jl
mov
or
xor
ret
aam
js
sarl
js
add
mov
lcall
ret
idivb
lahf
inc
aam
cmpsl
stos
mov
shlb
inc
add
mov
and
jle
xor
popf
subl
add
mov
out
mov
jle
mov
xor
roll
sbb
push
in
pop
sub
cmpsb
aas
mov
cwtl
push
push
xchg
add
inc
xchg
push
pop
call
add
scas
pop
je
faddl
pop
cltd
stos
imul
or
jp
sbb
adc
and
mov
pop
lea
xchg
test
lret
push
fbld
lret
add
push
out
rcl
lahf
adc
ret
ror
dec
outsl
rcrl
mov
xor
or
data16
outsb
sbbl
dec
cmp
mov
inc
imul
dec
push
dec
mov
mov
dec
inc
pop
sbb
gs
push
pop
sbb
inc
les
mov
out
out
cmp
js
lea
mov
repz
call
mov
xor
sub
lahf
and
shr
loop
je
mov
xchg
in
ljmp
jge
in
adc
push
push
xlat
scas
bound
fisttpl
adc
xchg
adc
jge
add
jg
push
push
rclb
jecxz
mov
xor
insl
xchg
outsb
pop
rolb
sti
add
jecxz
jmp
or
paddw
mov
dec
mov
test
or
fsin
and
addl
cwtl
icebp
mov
add
aas
movsb
iret
aas
xchg
scas
testl
jle
dec
mov
fmulp
icebp
roll
dec
rorl
dec
in
jecxz
loope
mov
call
popa
je
xchg
add
pop
inc
fdivs
mov
xor
pop
or
xchg
aad
icebp
sbb
sub
repnz
addl
mov
mov
dec
inc
mov
cwtl
jns
test
iret
pop
dec
das
js
scas
pop
push
rcrl
mov
push
into
sbb
jl
and
fcomps
cmc
jmp
in
sbb
jne
fisubrl
fsubs
mov
or
push
push
add
sarb
xchg
add
adc
clc
dec
mov
cmp
and
fdivl
cwtl
lahf
dec
sbb
push
jnp
push
pop
mov
scas
or
leave
xorl
sar
xorb
test
fbstp
orl
lods
mov
shll
sub
insl
xchg
mov
push
inc
iret
mov
adc
sbb
mov
notb
leave
adc
push
aas
sbb
sbb
add
mov
cld
movsb
xorl
shll
pushf
stc
mov
stos
dec
and
cmp
push
pop
cmp
loop
xor
and
ja
fildl
iret
pop
sbbb
sbb
mov
xchg
js
das
jns
dec
ret
or
pop
cld
outsl
or
daa
push
lods
push
dec
pushf
dec
je
jno
icebp
outsb
pop
cld
dec
arpl
ret
rorb
push
mov
js
mov
cmp
fdivs
and
jmp
nop
pushf
stos
mov
mov
cmp
mov
push
dec
pop
mov
imul
inc
cmp
hlt
or
push
cld
je,pn
sbb
cmp
out
jno
jecxz
xchg
cmp
mov
pushf
xor
dec
adc
imul
pop
pop
aam
mov
push
pop
mov
mov
jl
out
ja
cmp
shrb
insb
dec
loop
cmpsl
push
push
sub
dec
mov
cld
test
and
or
fisttps
fldl
dec
out
sbb
and
pop
repz
dec
pop
inc
pop
and
dec
mov
cmp
push
cmp
mov
hlt
xor
cmpsl
push
andb
inc
inc
dec
mov
je
ret
aam
adcb
lea
popf
cmc
and
push
add
out
lahf
sub
out
stc
inc
mov
js
xchg
fistpl
or
js
shl
andb
push
xchg
std
ret
repz
inc
pop
mov
lahf
lret
pop
and
pop
jno
mov
jnp
imul
jmp
jge
sahf
add
imulb
ljmp
cmp
ss
test
fstpl
in
mov
pop
js
sub
cli
fcmovb
sbb
rorb
movsl
pop
js
sbb
or
or
mov
imul
popa
add
mov
incb
push
pop
jnp
cmpsl
stc
jp
jecxz
xchg
inc
aad
cltd
dec
imulb
outsb
sar
inc
fs
roll
cmp
mov
loope
jl
insb
insb
scas
lods
inc
pusha
sub
add
dec
xor
int
jnp
inc
mov
lea
jge
push
testb
in
cmp
mov
xlat
add
out
jo
mov
inc
mov
push
sbb
scas
sbb
jbe
clc
ljmp
inc
push
ss
je
int
cmp
and
fildll
cmp
jne
pop
insl
aam
sub
pop
mov
sbb
inc
mov
shlb
es
out
loopne
lea
in
pushf
add
sbb
push
cmpsb
stc
or
sbb
cmpsb
dec
fwait
popf
ss
mov
dec
cmpsb
push
add
in
sbb
or
mov
push
mov
mov
leave
ror
sub
mov
dec
fbstp
pusha
xorb
and
mov
fiadds
push
add
out
aaa
cmp
fsub
mov
fwait
les
incl
iret
mov
and
add
pop
popf
fnstsw
push
add
adc
scas
out
pop
jp
pop
loop
adc
stc
les
cmp
sbb
js
call
aas
ljmp
fs
jne
add
inc
mov
mov
push
into
mov
fldt
scas
dec
dec
jno,pt
lea
push
push
push
jle
or
sbb
sub
push
cli
aaa
ret
xchg
out
mov
push
dec
jg
xchg
hlt
shrb
fmuls
xor
sub
mov
iret
bound
gs
lods
test
sbb
add
inc
cmpl
mov
outsb
or
addr16
xchg
lods
shll
push
stos
stc
mov
fldl
icebp
jg
idiv
mov
bound
cmp
dec
ret
jp
push
adc
mov
call
sub
test
stc
ss
or
dec
icebp
cs
xchg
mov
and
cmp
push
mov
mov
add
inc
movsl
cmp
stc
cld
out
adc
sbb
in
aad
and
insl
pop
stos
xorl
repnz
aaa
andb
lret
sahf
rorb
outsb
dec
jne
xor
jo
ror
outsb
inc
loopne
pop
ss
mov
loopne,pt
mov
stos
dec
popf
pop
std
lods
xor
pop
outsl
sbb
push
lret
xchg
inc
aaa
sub
jp
dec
sbb
fldt
popa
lahf
push
scas
cmp
mov
push
cld
das
push
mov
or
dec
cmpsl
jae
sbbl
xchg
xlat
out
jl
fildll
mov
sub
mov
popa
or
adc
dec
cmp
mov
pop
cmp
out
in
ret
fistpl
and
fistps
or
cmp
je
imul
lods
push
test
dec
pop
pop
loopne
inc
pusha
mov
push
lret
push
pop
fwait
data16
daa
cmp
push
fsubs
fwait
jnp
loope
dec
xchg
leave
jo
jnp
pop
fsubr
faddl
pop
mov
push
dec
jae
out
sbb
add
mov
out
fsubrp
mov
in
inc
inc
push
add
mov
cmp
add
in
xor
sahf
add
mov
nop
stos
xor
mov
popf
leave
jecxz
fwait
int
add
test
adc
add
and
push
loopne
fisubs
mov
dec
and
jmp
lret
xor
in
jecxz
adc
mov
popa
inc
ds
clc
rol
popa
scas
flds
andb
mov
clc
fiaddl
prefetcht0
pop
stos
add
cltd
inc
sub
inc
push
out
xor
push
orb
rolb
incb
loopne
jle
mov
inc
and
jp
mov
in
and
loop
loope
push
xchg
cmpsl
pop
xchg
jge
pop
cmp
sti
sahf
push
mov
rorb
imul
add
pop
scas
jmp
or
cmp
mov
fst
std
inc
adc
add
jmp
stos
fs
lds
or
mov
shlb
dec
mov
jo
mov
lea
add
or
sub
mov
cmp
aad
addb
mov
mov
enter
ret
das
rclb
ret
mov
test
fistpll
mov
in
ljmp
inc
push
aam
iret
ss
sub
and
out
push
sub
lea
add
inc
xchg
push
push
fwait
lcall
shll
fld
add
jb
addr16
xor
jl
ljmp
fidivl
jno
push
out
hlt
push
movsb
pop
mov
pusha
and
movsl
mov
xor
in
js
outsb
dec
mov
jnp
mov
test
mov
dec
mov
ja
stos
ret
les
imul
mov
adcl
andl
cld
pop
adc
xchg
fnstsw
test
pop
test
outsl
adc
sbb
push
into
jle
nop
nop
in
leave
inc
cmpl
clc
lss
and
scas
and
lcall
dec
adc
leave
orb
outsl
sub
mov
adc
pop
test
in
inc
xor
sbb
rolb
jb
mov
je
insb
mov
xor
sarb
loope
push
ljmp
stos
pop
adc
push
movsl
xlat
push
subb
imul
mov
jno
cmp
mov
xchg
loopne
cmpl
mov
wbinvd
inc
sub
xchg
or
inc
insl
fstpt
inc
test
shl
adc
std
lea
outsl
adc
fimuls
xor
insb
andl
xchg
cmpsb
jae
popa
xorb
push
cmp
rcrl
inc
or
adc
mov
or
mov
mov
pop
pop
pushf
dec
cli
jle
sub
sbb
repnz
push
mov
sbb
cs
push
sub
ss
xchg
pop
js
and
stos
in
mov
xlat
cld
mov
or
add
test
cmc
and
pop
imul
test
cltd
gs
cld
mov
sbbb
rol
es
push
dec
popa
mov
shrb
jecxz
add
push
inc
jecxz
out
ret
pop
rolb
cmp
hlt
pop
jle
shlb
jp
fsin
aaa
shr
fwait
sub
add
add
pop
pop
cmc
mov
aam
fnstcw
dec
and
test
ret
and
push
mov
fstl
jne
sbb
dec
xchg
inc
andl
dec
jo
dec
inc
cmc
push
mov
push
repnz
dec
mov
loopne
js
jl
pop
aaa
push
test
rclb
mov
sbb
xor
mov
inc
aaa
mov
ret
je
adc
jg
mov
outsb
pop
jle
jns
jbe
in
das
cld
sbb
mov
push
pop
mov
es
bound
mul
outsl
fstpt
or
cmc
jp
call
rorb
fisubs
sub
stos
inc
xor
outsl
std
stos
lret
imul
outsl
fisttpll
and
jo
jmp
lods
jo
jmp
xor
imul
dec
fisttps
fdivl
and
cmp
jl
push
cmp
and
inc
add
filds
pop
clc
mov
xchg
jle
mov
ds
stos
inc
movsl
aaa
pop
and
lds
push
cli
dec
push
in
in
aad
je
insl
orl
test
sub
hlt
pop
or
push
push
dec
mov
xor
scas
std
pop
mov
ja
mov
push
dec
or
aas
or
aam
or
loopne
imul
scas
sub
aam
mov
roll
or
xor
cmc
fcmovbe
ja
and
sbb
sysenter
jmp
int3
pop
xor
sub
pop
mov
fbld
xchg
popa
sti
insl
adc
jnp
or
fs
bound
outsl
mov
pusha
sbb
call
pop
add
add
fucomp
dec
mov
into
add
mov
sbb
ficoml
insl
pop
push
test
pop
lods
cmp
outsl
jne
xchg
mov
or
mov
sub
adc
push
push
arpl
mov
ret
sub
add
pop
lcall
mov
or
mov
jbe
push
ret
xor
sbb
sub
or
idivb
hlt
mov
and
cmpl
stos
test
ljmp
filds
add
mov
insl
jmp
adc
dec
mov
push
in
ret
xor
xorb
adc
dec
cmpb
mov
lock
ss
sbb
fildll
ss
adc
adc
cmc
push
out
pop
mov
xorb
sbb
test
cmp
nop
cmp
icebp
loop
xor
loop
test
adc
shrb
call
jmp
outsb
push
or
pop
jp
push
jecxz
ja
mov
notl
ja
nop
push
icebp
das
cmc
mov
in
data16
jg
aam
movsl
scas
add
mov
das
in
xlat
mov
add
shrb
xor
lods
cld
test
cmp
cmc
mov
mov
enter
push
es
mov
pop
inc
ret
pop
jge
cmp
arpl
jge
jno
or
aaa
sbb
or
dec
sti
jns
int
lods
dec
adc
scas
jo
jne
xor
outsl
enter
mov
mov
and
lret
cli
pop
inc
lods
push
adc
mov
pop
push
andl
jb
dec
dec
or
xchg
pop
mov
loope
nop
or
filds
lahf
dec
xchg
lea
push
jge
xor
loop
cli
inc
movhps
cmp
mov
jge
filds
inc
leave
clc
add
jge
xlat
pop
iret
add
xor
lods
add
push
jne
push
sbb
and
sti
fnstsw
inc
repz
dec
sub
or
sbb
test
andl
inc
adc
arpl
jo
nop
sbb
imul
stc
push
shlb
bound
and
outsb
enter
fists
and
add
or
movsl
xchg
lods
out
bound
test
in
repnz
ror
adc
repnz
mov
clc
ss
and
or
aad
or
xor
pop
call
icebp
pop
xlat
mov
ds
stc
inc
sub
jg
inc
mov
aad
dec
adcb
jl
inc
pusha
in
add
mov
stos
inc
jmp
test
jae
fs
cli
in
cmp
js
pop
fsubrs
dec
repz
sbb
jb
gs
or
xorb
outsl
and
push
rcll
std
mov
icebp
sti
xlat
sbb
test
adc
stos
jl
mov
and
imul
sbb
imul
lock
loopne
and
or
or
mov
mov
inc
out
mov
jns
xchg
insl
out
inc
cltd
or
add
dec
hlt
mov
adc
cs
inc
ljmp
or
jg
call
sbb
cltd
cmp
out
sqrtps
stos
pop
add
jnp
outsl
fucomp
mov
mov
fwait
stos
popf
mov
inc
inc
pop
xorb
push
adc
ret
scas
mov
clc
dec
mov
adc
stc
push
repz
xor
arpl
cmp
push
jp
in
sti
jg
imul
jb
or
cmpsb
sub
sbb
and
xchg
sub
dec
sbb
enter
lret
cmp
xchg
or
out
mov
mov
jg
clc
inc
stos
lods
enter
sbb
dec
mov
loop
aad
adc
or
sub
mov
sbb
sub
jg
stos
jbe
push
xor
jmp
test
pop
pop
cmpsl
pop
ljmp
mov
sub
pop
sub
outsl
pusha
sti
push
mov
pop
lds
and
fldl
imul
sti
icebp
movb
mov
das
shl
enter
hlt
mov
xor
scas
fwait
das
loopne
mov
cmc
sbb
rclb
mov
js
orb
inc
jno
jmp
std
or
xchg
ja
inc
inc
pop
loope
fdivs
or
bound
into
aad
mov
jle
rcll
add
adc
sub
enter
mov
add
xchg
lahf
pusha
lahf
cmc
rol
pusha
ret
jo
int
aas
aad
pop
xor
fcmovnbe
mov
ret
push
xchg
jp
push
cli
aam
adc
sbbb
dec
add
inc
testl
and
mov
sti
insl
jae
clc
test
inc
and
xchg
mov
cmc
jo
mov
cmp
sbb
cmp
aaa
and
push
and
roll
movsb
adc
sbbl
adc
xor
dec
or
and
in
pop
dec
xchg
mov
and
int3
ja
test
arpl
lods
jno
decl
sti
rorb
add
or
xor
insb
fisttps
pop
inc
lock
out
inc
push
call
mov
jle
sbb
push
aas
xorb
imul
fnstcw
dec
jp
in
adc
pop
pusha
xlat
jge
mov
jns
aam
pop
nop
xchg
dec
push
fdivs
mov
pop
fdiv
push
cmc
cmpsl
pop
jbe
xchg
dec
xor
outsl
lods
push
fdivs
sub
pop
mov
and
adc
or
or
mov
sub
cmp
mov
add
add
idiv
inc
sti
test
icebp
or
adc
incb
fisttpl
je
mov
sti
mov
movsb
cltd
adc
cmp
addr16
pop
jb
mov
sbb
push
pop
lock
clc
cmp
pop
sbb
add
xchg
sbb
ret
ret
mov
add
rcll
pop
push
sbb
test
jge
orb
fdivrs
or
push
fsubrs
xor
inc
jmp
std
add
xchg
nop
gs
jo
outsb
adc
adc
push
and
mov
pop
push
test
or
cmp
jns
das
adc
test
rcl
add
daa
xchg
adc
inc
enter
inc
mov
inc
test
add
lcall
mov
stos
sbb
add
subb
rorl
dec
rcll
ficoml
mov
mov
ret
push
or
mov
cli
jbe
cmc
cmp
adc
mov
fcompl
ret
cmp
pop
enter
sub
pop
repnz
jne
or
sub
add
add
mov
adc
and
mov
dec
lcall
and
add
invd
xor
push
jmp
cmpsl
adc
mov
mov
pop
jb
add
xor
lahf
out
test
pop
push
jge
push
outsl
imul
or
sub
arpl
shrl
lock
outsb
scas
mov
sub
jb
repz
mov
push
in
sub
movsl
pavgb
aad
pop
dec
mov
mov
imulb
inc
nop
and
movl
insl
mov
pop
inc
xor
mov
lods
ret
loop
ja
mov
rclb
dec
ljmp
mov
xor
sarl
fcoml
and
clc
scas
fidivrs
xor
sub
mov
jmp
xor
decb
adc
push
or
loope
movsl
incl
pop
push
outsb
dec
lahf
sbb
or
aam
cltd
xorl
mov
or
rcr
es
mov
pop
or
ret
cmp
dec
fists
add
mov
xchg
inc
mov
int
push
imul
inc
gs
adc
push
scas
int
dec
in
aam
fldl2e
dec
add
jle
lret
pushw
lods
cmp
push
fbld
fists
std
lods
incl
popa
out
push
out
fildl
cld
mov
fcompl
mov
mov
les
sarl
insl
push
lea
pop
pop
int
mov
cmp
lea
jp
mov
xchg
mov
test
push
pop
dec
mov
jbe
cltd
mov
xchg
pushf
fwait
add
mov
sbb
xor
mov
cmpsb
imul
push
and
ds
push
mov
and
stos
fisubrl
add
test
mov
test
imul
cmpl
add
and
sbb
cmp
das
and
les
mov
cli
xor
dec
xor
enter
jne
adc
nop
mov
movsl
stos
inc
dec
jmp
push
xchg
add
sub
cwtl
adc
fidivl
xchg
bound
push
xor
test
pop
sub
inc
xchg
xchg
and
and
pop
or
sbb
clc
clc
push
imul
mov
int
fnsave
pushf
or
dec
sbb
pop
dec
pop
push
xor
sbb
scas
scas
ja
out
cmp
lock
lock
imul
inc
inc
push
adc
xchg
sub
pop
mov
int3
xchg
stos
mov
or
push
add
movsb
movsl
mov
add
invd
mov
push
or
xor
or
clc
leave
and
add
icebp
jg
jo
adc
or
xchg
dec
arpl
addr16
xor
idivb
loopne
push
das
ss
imul
rorb
out
and
movsl
fisttpl
adcb
xor
arpl
clc
inc
jo
rclb
iret
push
sbb
pop
enter
pop
mov
pop
popf
imul
inc
into
xchg
lret
jle
gs
in
add
xor
std
inc
insl
in
pop
rclb
adc
mov
cli
inc
popf
xor
aam
aaa
jbe
lea
mov
cmp
inc
test
das
and
mov
jo
mov
out
jmp
adc
mov
dec
and
scas
lods
and
nop
ljmp
std
mov
cmp
dec
inc
movsb
adc
test
neg
mov
dec
xor
lods
dec
mov
nop
ds
mov
data16
arpl
and
inc
flds
in
sbb
jne
popf
xchg
add
lock
loopne
add
jns
data16
push
pop
mov
rcl
sbb
lcall
and
or
pop
mov
mov
push
and
sbb
addr16
gs
pop
insb
jp
mov
add
jl
or
pop
int
loop
dec
cmp
imul
or
daa
aas
pop
jo
rcrb
repz
out
mov
test
and
out
sbb
fsubl
data16
pop
cmp
and
mov
push
psraw
push
leave
add
mov
pop
mov
and
mov
or
mov
sub
push
jb
cmpsl
movsl
outsb
sub
aad
xchg
dec
into
push
jp
xchg
call
daa
xchg
bound
psubsw
scas
insl
cmpsl
das
dec
das
and
mov
fdiv
push
sub
cmc
js
adc
xor
xor
xlat
das
or
dec
sbb
sbb
jl
cld
sub
xor
in
pop
dec
ret
add
xor
jle
pop
pop
adc
sbb
jecxz
ss
rorb
push
sbb
mov
fimull
bound
stos
pop
xchg
mov
fadds
andl
xchg
mov
and
mov
roll
xchg
sub
ljmp
mov
push
xor
out
xchg
bound
xor
ror
sbb
xor
sbb
dec
and
incb
dec
mov
imul
dec
cmp
in
mov
in
lods
pop
lock
pop
cmp
xor
ficompl
enter
push
jb
sar
mov
sub
lcall
cld
icebp
insl
add
push
pop
lahf
mov
mov
mov
fimull
jmp
adc
pop
or
outsb
xor
lods
rorb
inc
push
add
push
xor
mov
int3
pop
fstpt
movsl
jp
xchg
repz
dec
imul
cmpsb
xor
mov
xor
mov
cmc
in
pop
or
mov
outsb
sub
mov
pop
aaa
mov
cmpb
repnz
jne
mov
fsts
aad
or
add
clc
test
ja
out
pop
dec
add
ret
adc
mov
mov
hlt
fildll
push
xlat
enter
aam
dec
bound
xchg
nop
mov
add
or
pop
xchg
jmp
cli
stc
push
lds
cmp
xchg
and
dec
hlt
movsl
pushf
push
lret
jne
dec
popa
xchg
push
mov
pop
xor
movsb
popa
xchg
push
iret
push
dec
mov
cmp
push
pop
sbb
ret
aad
push
out
xchg
cmp
jnp
inc
adc
mov
adc
filds
mov
mov
add
icebp
aaa
cli
pop
ficompl
push
lret
inc
inc
aad
popa
mov
add
jp
fnstsw
ret
lea
or
or
shrb
sbb
and
sbb
mov
movsb
sti
mov
mov
mov
mov
ljmp
mov
inc
add
dec
cmp
clc
push
mov
jp
or
out
mulb
mov
mov
pop
das
insb
cli
imul
loopne
mov
mov
pushf
imul
mov
repnz
js
fistpl
aas
or
dec
insl
pop
aad
fwait
sub
jae
lock
lahf
repz
adc
xor
scas
and
ret
das
jbe
xor
sarl
inc
adc
inc
add
std
push
or
lcall
mov
xchg
bound
inc
insb
dec
incl
inc
and
pop
mov
fwait
mov
mov
cmpsb
mov
sbb
test
pop
inc
sti
and
mov
mov
mov
and
add
int
aam
inc
fwait
mov
jb
leave
push
icebp
lock
xchg
mov
loop
mov
subb
mov
outsb
jg
imul
xchg
dec
or
std
hlt
push
cmovnp
adc
sbb
jp
xor
outsl
aaa
ss
dec
nop
inc
adc
mov
lock
lcall
repz
jbe
test
cmp
push
leave
mov
xchg
and
nop
sbbb
inc
xchg
ljmp
mov
outsb
fbld
leavew
insl
cmpsb
dec
lds
call
test
mov
add
sub
ret
imul
int3
and
dec
adc
mov
dec
fsubl
sbb
add
arpl
js
insl
fldt
jle
jle
out
inc
sbb
pop
mov
out
fucomip
or
inc
int
icebp
or
jle
js
fisttpl
popf
int
arpl
pop
jl
stos
leave
in
sbb
adc
fisttpll
jo
fldln2
mov
fsubrs
sar
hlt
or
test
mov
mov
cmp
cli
inc
cli
in
testb
into
aam
int3
push
hlt
cltd
ret
push
pop
push
add
sbb
inc
dec
loopne
add
xchg
testb
fnstsw
cmp
xor
out
inc
ja
dec
adc
or
test
sbb
fnstcw
sti
mov
adc
jle
in
mov
mov
sbb
sbb
dec
lods
scas
ss
push
or
enter
push
mov
adc
jns
pop
adc
ljmp
sub
pop
scas
add
sbb
loop
ficoms
add
cmp
int3
pop
sub
fcom
lret
pop
int
pop
and
test
daa
push
adc
adc
je
jp
jae
imul
push
mov
or
add
xor
pop
push
test
lock
jge
dec
insl
enter
fidivl
xor
xchg
mov
fsubrp
ljmp
and
out
mov
jle
popf
and
cli
cs
jnp
ds
enter
sbb
test
xchg
inc
mov
mov
stos
in
sbb
sar
fisttps
in
fs
push
inc
sbb
addl
inc
shll
mov
shrb
leave
cwtl
mov
or
adc
clc
pop
scas
ret
cmp
pop
mov
or
lcall
add
jp
mov
or
add
dec
std
push
mov
outsl
in
jg
inc
fcoms
cli
jle
mov
mov
cwtl
mov
add
mov
call
add
leave
loopne
push
xor
data16
mov
in
pop
addl
add
jmp
adc
xor
add
daa
push
sub
add
lods
addr16
stc
add
dec
mov
lea
es
or
xchg
mov
push
fstpt
loop
mov
mov
mov
roll
mov
roll
mov
cli
das
inc
jmp
mov
psubb
mov
add
xor
sub
or
jnp
inc
scas
sub
clc
sbb
pop
repz
jle
xchg
xor
adc
cmp
mov
scas
leave
inc
popf
mov
mov
jl
mov
xchg
decl
jecxz
icebp
ret
outsb
lahf
mov
cld
mov
outsb
lret
scas
dec
movsb
jl
xorb
sti
inc
mov
sbb
sub
jle
mov
push
mov
sbb
mov
mov
mov
sub
mov
xchg
insb
pop
xchg
push
fisubs
roll
pusha
mov
dec
and
ss
cltd
pop
sub
mov
xchg
dec
mov
cmp
in
jne
es
decb
add
punpckhdq
lea
sbb
repnz
data16
enter
sub
fsubrl
out
cmpsb
cmp
movsl
movsb
mov
and
icebp
cmpsb
mov
lret
push
mov
pusha
test
adc
loop
sar
sbb
sbb
imul
pushf
push
mov
hlt
dec
pop
cli
xor
leave
mov
add
mov
cltd
dec
clc
idivb
add
in
jae
push
add
outsl
cwtl
add
mov
jp
loopne
adc
les
xor
mov
xor
dec
jno
adc
shl
lods
mov
sbb
mov
jb
xor
pop
cmc
stc
mov
jne
jno
shlb
pop
add
xor
and
fildl
push
shrb
ja
mov
test
cli
or
add
aam
outsl
xchg
nop
mov
inc
scas
int
inc
les
inc
xor
and
movsb
mov
adc
ffreep
jmp
rorl
arpl
xchg
jle
icebp
les
sub
add
mov
out
movsl
dec
in
stos
stos
fistpll
dec
scas
dec
mov
adc
and
pop
je
and
cmc
lds
or
imul
test
jmp
std
ret
mov
inc
pop
dec
js
and
test
rol
add
cs
or
pop
mov
mov
scas
jne
sub
nop
cltd
lods
or
push
and
ret
jno
fdivrs
inc
mov
ja
lock
test
cwtl
arpl
loope
in
mov
in
push
dec
add
mov
inc
dec
pop
or
pop
and
inc
out
pop
jp
or
mov
scas
pop
shrl
in
enter
scas
xorb
icebp
fucomp
cmp
je
mov
and
push
lret
sti
das
jl
or
dec
push
stc
inc
push
or
mov
mov
mov
push
mov
dec
xchg
pop
xchg
fidivs
les
jge
arpl
stc
mov
pop
sub
movl
outsb
popa
jnp
or
repz
push
fcomip
out
sbb
lcall
pop
jo
loop
push
or
pushf
sub
ljmp
sub
mov
push
push
sub
rcr
push
push
cld
testb
dec
cmp
popf
mov
jae
mov
shlb
or
and
repz
cld
fldt
pslld
adc
adc
pop
dec
xchg
sti
mov
mov
fildll
adc
xchg
or
enter
sbb
ficoms
add
dec
dec
mov
roll
scas
adc
jno
aad
rcrb
mov
test
outsl
insb
mov
pop
hlt
sahf
lods
hlt
ror
movlps
pop
cmp
fistpll
sbb
jno
push
mov
sbb
call
pop
fnstcw
lock
fistps
loopne
jo
mov
test
outsb
pop
cli
lret
shlb
mov
dec
mov
cs
mov
sahf
cltd
aad
into
inc
or
aas
mov
stc
pop
mov
test
aad
fwait
push
push
xor
push
sahf
fcmovnb
pop
lds
xchg
mov
gs
push
add
xchg
sti
xor
clc
push
mov
lods
movsl
xor
inc
xor
imul
inc
das
fsub
inc
js
cwtl
out
pop
inc
decl
cwtl
jnp
lods
cmpsb
inc
shl
xchg
pop
jmp
sahf
xor
rol
mov
or
sbb
dec
push
or
neg
inc
xor
out
push
das
or
ret
popa
add
xor
daa
jmp
test
lea
test
aaa
stos
mov
jmp
mov
outsb
inc
fsubrs
mov
out
inc
mov
pop
mov
mov
test
cmp
insl
inc
cld
jg
adc
iret
sub
mov
les
movsb
sbb
arpl
add
push
ja
ljmp
xchg
mov
aaa
loop
adc
outsb
sti
mov
dec
mov
xchg
and
push
xchg
cld
mov
push
xor
and
fidivs
in
and
or
push
imul
lea
in
jmp
fs
ret
pop
ljmp
lea
mov
mov
xchg
mov
pop
add
mov
push
pop
fsts
insb
push
fcomip
ja
cld
inc
fs
ss
test
pop
or
sub
jns
mov
mov
repz
pop
mov
xor
fcomi
es
add
mov
push
orb
pop
aad
enter
mov
mov
and
cmpsb
inc
cmpb
shrl
mov
inc
outsb
clc
das
aaa
imul
mov
outsl
rcll
push
mov
push
push
push
outsl
fdivrs
loopne
cwtl
dec
sahf
sbb
sub
clc
sbb
sarb
lock
test
inc
inc
pop
loope
pop
push
sub
mov
cwtl
jae
push
add
jmp
mov
out
mov
and
mov
pop
inc
out
dec
jae
adc
ds
xorb
push
cmp
inc
inc
sub
cmpsb
loop
in
push
test
leave
or
mov
mov
outsl
mov
pop
sbb
mov
out
dec
sub
js
inc
imul
cli
push
sti
dec
test
lea
mov
xchg
sahf
insl
mov
sbb
sub
pop
mov
push
jp
fdivrl
and
int3
popa
stos
push
mov
loop
rcrl
outsl
xor
add
pop
inc
jno
sar
sti
inc
shrl
inc
es
push
push
std
push
mov
mov
out
mov
sub
or
lret
std
sub
jge
xchg
outsb
incl
icebp
mov
enter
cmpl
push
frstor
push
pusha
push
lock
inc
jnp
cmp
pop
vmaxsd
enter
insb
fimull
icebp
inc
les
sahf
mov
or
in
or
lods
jb
rcll
sub
or
into
mov
inc
aad
scas
sub
push
jge
filds
fistl
mov
adc
lea
mov
fcomps
cwtl
dec
mov
jne
jne
sub
push
into
movsb
push
mov
mov
push
sub
ja
outsl
mov
insb
aaa
sbb
scas
repnz
aas
test
icebp
loope
or
mov
inc
stos
mov
fisubrl
mov
nop
cmpb
mov
outsl
ljmp
pop
dec
cmp
or
aaa
add
int3
add
mov
sub
cmpb
popf
mov
mov
dec
or
mov
lahf
or
sbb
dec
mov
rclb
xchg
pop
mov
push
dec
insb
mov
imul
outsl
cli
xor
imul
lock
sub
mov
cmp
mov
push
dec
fisubrl
push
sub
dec
ret
xchg
jp
stos
sbb
inc
xchg
mov
push
sub
iret
cld
add
jg
jmp
add
or
and
dec
or
xchg
or
stos
fldt
add
pop
pop
cmp
mov
hlt
je
ljmp
movsl
cltd
loopne
mov
inc
jmp
mov
inc
inc
pop
mov
jge
jno
mov
pop
adcb
das
and
mov
dec
sub
loope
jle
jmp
jl
pop
inc
shrb
outsl
adc
addl
pop
loope
xor
jmp
mov
or
jl
scas
sbb
mov
enter
jo
mov
in
pop
fwait
add
scas
lcall
or
adc
rorb
cmc
test
xchg
ss
dec
adc
das
push
xor
sbb
mov
xchg
loop
ror
fs
mov
rclb
les
arpl
xchg
xchg
mov
dec
shll
dec
mov
and
dec
iret
lret
push
movsl
mov
aaa
fistps
inc
mov
cltd
lea
pop
sti
inc
inc
xchg
and
pop
mov
dec
outsb
ss
enter
or
sbb
mov
pop
or
aam
fdivrs
sbb
pop
rolb
mov
cmpsb
es
incl
push
add
pop
pop
xchg
pop
add
stos
pop
xor
movsl
divb
sub
cld
pop
cltd
xchg
rorb
xchg
mov
mov
fstpl
inc
add
int3
xor
mov
mov
pop
xchg
out
inc
add
ret
fldl
add
mov
insl
mov
mov
pop
into
pop
cmpsb
lret
push
or
lcall
dec
data16
mov
or
jg
sbb
enter
inc
cmp
mov
fwait
stos
rcrb
mov
mov
inc
lods
mov
shlb
dec
push
sub
lds
mov
lret
shlb
sbb
pushf
push
cwtl
arpl
xlat
aam
bound
loop
push
xorl
and
mov
fstpl
mov
cmpb
in
aas
shrl
popa
outsl
aaa
jge
outsl
xor
push
xor
test
rcrl
test
sbb
outsl
sub
mov
jg
mov
jp
iret
xlat
mov
mov
arpl
sti
mov
cmp
add
mov
fistpll
scas
jno
cmpl
push
inc
add
pushf
blcfill
jecxz
sub
cld
scas
fwait
mov
push
insb
ss
repnz
loop
sarb
test
fwait
sahf
movsl
mov
fld
dec
jo
xchg
inc
xor
shll
mov
mov
dec
adc
add
push
adc
test
rcll
aad
outsl
lods
mov
push
adcl
adc
xor
scas
pop
xor
push
and
int
clc
adc
cwtl
mov
std
sbb
fbld
or
inc
shrl
mov
jae
xlat
lea
lds
pop
sbb
adc
add
fnstenv
push
mov
dec
mov
sbb
mov
cmpsl
or
shrl
mov
mov
mov
jno
pop
jns
std
mov
xor
jo
call
and
inc
and
je
stos
sahf
sahf
push
enter
inc
std
push
xchg
mov
mov
dec
mov
mov
or
push
clc
rolb
mov
xchg
stc
cmp
rcr
push
ret
adc
roll
icebp
fildll
mov
cmp
adc
ret
xor
cmpsb
incb
mov
std
dec
mov
mov
cmp
push
sbb
mov
jge
push
in
or
or
out
push
jae
hlt
jns
and
popf
lock
loop
test
sub
mov
mov
inc
mov
or
aaa
or
xor
dec
clc
jbe
jbe
pushf
lods
sub
inc
inc
rcr
ss
adcb
sbb
lcall
cmp
fsubp
mov
pop
dec
pusha
lods
rolb
mov
hlt
ljmp
mov
adc
pop
mov
mov
fwait
mov
push
inc
mov
push
cmc
psrld
jg
or
stc
lods
test
scas
shrb
or
aad
or
add
pop
jg
fisttpl
mov
add
jge
scas
ret
loopne
ja
mov
dec
jnp
inc
mov
pop
xchg
test
rclb
mov
imull
pop
mov
adc
inc
pop
ss
adc
pop
fldt
adc
nop
push
mov
ljmp
call
pop
xchg
pushf
pop
je
fcomps
sub
fdivrs
jmp
pop
add
iret
xorl
orb
call
cli
pop
push
xor
ret
mov
xchg
stc
push
or
jmp
mov
rcll
in
ljmp
inc
cmp
jne
jmp
pop
xchg
pop
mov
outsb
sub
js
mov
add
je
js
dec
ret
inc
fistpl
jp
in
int3
lock
add
or
imul
pop
mov
pop
fistl
mov
call
pop
in
fldcw
push
mov
loopne
and
xchg
repz
imulb
push
sub
jnp
push
add
mov
jmp
bound
xor
or
cmp
xchg
stos
add
jmp
aad
push
mov
add
aaa
std
jbe
mov
lods
inc
adc
test
pop
movsl
cmp
arpl
mov
shr
mov
adc
decl
lds
push
sub
xor
mov
cld
or
xchg
or
cli
inc
mov
mov
dec
cli
jnp
rcrb
pop
adc
mov
mov
pop
push
push
loope
add
je
and
push
dec
sbb
lods
push
mov
adcb
ja
stos
inc
std
mov
and
pop
fistpll
sub
aaa
mov
sub
pop
sti
sub
mov
call
add
mov
pop
stos
xor
cmp
or
xor
xchg
mov
add
push
cmc
sub
push
call
mov
add
cmp
sub
mov
jne
pop
jo
shll
popa
mov
lock
test
xor
fstps
mov
adc
cmpb
mov
rolb
bound
add
mov
insl
pop
pop
jmp
adc
fstp
mov
mov
adcl
in
call
insb
inc
jns
push
inc
and
inc
sub
loopne
imul
and
xor
cmp
mov
mov
fisubrl
add
popf
mov
push
inc
out
outsb
jl
rorb
in
pop
in
int3
cmpb
lret
mov
add
push
icebp
aam
ret
push
lds
push
dec
stos
stos
inc
mov
mov
pop
inc
push
jg
cmpl
out
dec
add
inc
mov
push
push
imul
out
pop
sub
push
mov
fildl
sbb
cmpsb
loope
lock
negb
sahf
mov
cs
lock
mov
sbb
leave
test
push
and
or
enter
js
sub
js
inc
pop
or
adc
mov
jo
jb
dec
fs
nop
loop
shl
sub
inc
add
ret
and
popa
leave
inc
jle
arpl
andb
fwait
mov
pop
and
ficompl
xor
xlat
in
std
lea
les
sti
stos
pop
in
adc
int
outsl
test
mov
mov
jnp
sbb
fucomi
add
pop
cmc
pop
and
mov
mov
dec
neg
in
fs
cmp
test
aaa
or
xchg
mov
and
cmpl
jmp
xor
cli
push
pop
mov
push
mov
shrl
addr16
sbb
and
and
daa
xlat
ljmp
sbb
fs
rol
out
and
pop
sbb
sti
adc
dec
add
jb
ljmp
lods
jge
je
insb
push
cwtl
in
adc
add
notb
inc
int
push
mov
or
jle
popa
mov
dec
fdivr
xchg
jp
xlat
inc
add
jp
mov
adc
cmp
subb
clc
fdivrs
jl
mov
out
mov
rcr
lea
sbb
mov
ffreep
cmpsl
pop
aaa
mov
in
add
das
inc
push
push
dec
xchg
fisubrs
mov
and
pop
inc
int
pushf
add
xchg
fsubp
jns
outsl
push
sahf
sbb
out
pop
add
js
sub
call
mul
aas
loop
cmc
in
or
push
mov
sbb
scas
repz
insb
pusha
inc
inc
inc
mov
test
cld
push
xchg
jae
test
insb
ss
cmp
icebp
mov
adc
addl
imul
jg
bound
add
fs
js
push
jmp
incl
aam
bound
test
int3
fisubs
mov
push
xor
dec
mov
lods
lret
mov
lea
bound
fisubl
sbb
jg
ja
lret
int3
nop
push
call
jnp
jmp
into
fdivr
push
out
pop
addr16
adc
lret
and
sbb
add
cmp
lds
jg
dec
ss
je
lds
jp
insl
push
ds
xchg
out
lea
clc
sbb
jnp
testl
daa
ss
mov
subb
pop
incl
adc
mov
fimuls
fdivrs
adc
adc
cmpsl
or
das
std
ljmp
mov
test
dec
add
and
shlb
incl
add
sar
lods
fmull
xchg
clc
sub
fcmovnbe
pop
fsubs
or
lods
mov
jo
fdivrs
lds
or
mov
outsb
movsl
mov
inc
push
andl
lds
add
movsl
push
dec
daa
andl
or
jmp
les
adc
aam
or
adc
ss
and
mov
je
outsb
shll
fists
in
mov
jle
push
loopne
js
jbe
fwait
outsb
push
clc
jmp
test
push
inc
or
xorb
mov
push
xchg
ja
pop
mov
stos
and
xchg
jns
cmp
mov
mov
int
push
mov
add
jb
pop
add
sbbb
jle
jo
push
dec
mov
mov
mov
mov
in
pop
in
dec
fistpll
fistpl
sub
repz
pop
mov
pop
ss
bound
test
leave
xor
lock
cld
pushl
or
xlat
or
lcall
fbstp
insb
fisttpll
and
or
or
das
xchg
adcb
sbb
inc
mov
mov
mov
pusha
xorl
xchg
js
xchg
in
or
mov
jmp
sub
loopne
les
push
adc
cmc
pop
aad
mov
sub
add
lret
xchg
ret
out
lea
mov
in
int
sbbb
inc
divl
jp
pusha
cmp
pop
sbb
insb
insb
xlat
cmpsb
out
push
xchg
and
lods
pop
mov
out
cmp
outsb
or
out
jno
sub
test
push
bound
sbb
jno
test
mov
pop
pusha
adc
daa
adc
lds
mov
cmp
lret
call
loope
cmp
ds
in
decl
inc
imul
lcall
jns
pop
xor
jnp
mov
pop
mov
mov
inc
fs
lahf
popf
xchg
and
jns
or
adc
mov
or
sbb
dec
cmp
add
insb
push
sub
dec
mov
imulb
add
fbld
sti
and
pop
mov
sbb
lret
test
enter
dec
jbe
mov
jl
lock
pop
lret
push
pop
inc
add
ds
xchg
xchg
mov
mov
loop
sbb
push
mov
sbb
outsl
and
bound
int
in
push
sbb
cmp
or
test
sub
aad
add
adc
iret
dec
xchg
orb
mov
adc
xchg
adc
inc
xchg
lds
stos
adc
jns
or
dec
out
mov
mov
xchg
mov
pop
pop
mov
xorb
aad
sbb
add
icebp
out
mov
call
stos
rcrl
pusha
jmp
cmpsl
jge
test
scas
fcmovne
mov
xchg
fidivrs
mov
xor
fcomi
jecxz
xlat
inc
popf
cli
add
and
inc
inc
loopne
pusha
or
push
inc
add
add
or
std
frstor
add
fwait
call
orb
push
cmp
dec
dec
dec
lret
lcall
data16
mov
ss
pop
mov
shlb
dec
mov
add
in
ja
ds
pop
xchg
jle
aad
out
xchg
stos
dec
push
jns
mov
dec
jg
dec
xchg
test
add
movl
mov
pop
sub
sti
push
add
or
negb
dec
lcall
test
nop
shl
mov
stos
cli
pop
rclb
xchg
fcoms
into
adc
and
jge
xchg
mov
loopne
loop
hlt
adc
mov
mov
jecxz
push
xor
or
inc
arpl
gs
mov
mov
ljmp
lods
sub
inc
mov
jne
add
clc
pusha
popa
ret
cmpsl
in
lahf
jg
mov
das
pop
sbb
xor
or
add
mov
out
mov
mov
ss
dec
insl
mov
mov
jge
sar
push
jae
into
push
mov
mov
or
and
sti
pop
xchg
lret
sub
scas
je
and
or
dec
jbe
ret
push
lahf
call
inc
xchg
jno
mov
cmp
pop
imul
fcomps
cmpsb
lcall
cltd
xchg
das
mov
das
sub
stos
jmp
inc
out
add
and
lret
mov
test
jmp
push
jp
rcll
adc
jp
fwait
cld
shll
sbb
inc
jbe
outsb
fstl
inc
add
fdivl
inc
mov
ljmp
iret
rorl
mov
adcl
xchg
cmp
or
in
cmp
add
jecxz
xchg
mov
popa
testl
jle
lea
rclb
xlat
pop
add
push
shlb
scas
or
mov
outsb
push
xchg
push
les
loopne
ljmp
xchg
pop
dec
bound
mov
inc
inc
or
or
jmp
sbb
imul
inc
mov
iret
add
adc
pop
cltd
ret
push
mov
leave
inc
sbb
jb
and
lock
xchg
adc
scas
das
xchg
add
mov
add
fdivp
pop
insb
cmpsb
xlat
ljmp
jo
ja
pop
fcoms
and
insl
hlt
dec
adc
les
mov
adc
test
fists
pop
mov
jb
jns
mov
jmp
xchg
pop
inc
fwait
xor
cmp
jno
imul
mov
push
jg
mov
cmc
out
dec
testl
push
in
push
clc
push
je
or
decl
stc
and
ror
fists
test
jl
dec
insl
cmp
xchg
lods
jno
inc
popf
mov
sub
mov
push
mov
lcall
inc
and
xor
pop
insl
fstpl
ret
jle
sti
repz
mov
jmp
fcmovu
xor
ljmp
mov
fs
mov
mov
adc
stos
scas
stos
leave
lods
xor
xor
jg
clc
and
push
into
inc
cmp
aaa
mov
rcrl
jge
lret
aaa
or
cli
movsb
pop
dec
jmp
nop
lcall
test
jae
and
es
lock
adc
dec
mov
inc
insl
mov
hlt
inc
and
inc
nop
outsb
pop
mov
push
ret
xor
sahf
imul
and
into
in
leave
testl
sub
ffree
in
inc
ret
lock
adc
jp
and
adc
mov
fucomp
ljmp
xchg
dec
pop
adc
sub
stos
clc
scas
xor
jmp
outsb
insl
hlt
dec
ss
sbb
outsl
cld
jbe
insl
dec
mov
mov
popa
loopne
rcl
lcall
js
insl
cmp
lcall
fistl
out
add
mov
jp
sti
mov
mov
xchg
mov
mov
inc
sbb
lahf
inc
push
pop
imul
jbe
pop
loope
int
and
or
add
loopne
shlb
ljmp
sbb
mov
mov
shll
or
add
push
stc
push
pop
cmpsl
sbb
fmulp
cmp
or
cmp
mov
adcl
sub
addl
outsb
ljmp
pushf
dec
pop
xor
lods
push
mov
outsb
push
mov
notl
lahf
pop
sar
sbb
xchg
jne,pn
fadds
jg
sahf
xor
mul
inc
fbstp
sub
popa
hlt
aas
pop
stos
mov
dec
add
add
inc
pop
push
mov
and
cltd
jmp
stc
cmp
ret
xor
mov
cmp
pop
js
sbb
and
pop
jae
call
faddl
jle
xor
loop
ljmp
push
mov
mov
mov
xchg
ss
fwait
or
xchg
outsb
push
insl
push
mov
stc
jnp
and
test
mov
sbb
mov
ljmp
and
dec
jle
inc
xor
pop
int3
sti
fnstenv
fimull
add
and
leave
call
shll
sbb
outsl
decl
es
outsb
or
and
nop
sbb
mov
fldpi
push
stos
inc
mov
xor
out
mov
popf
aam
push
shlb
push
out
lods
mov
inc
jmp
and
push
test
mov
adc
gs
xchg
nop
rcr
in
scas
mov
or
icebp
scas
adcb
sbb
inc
mov
icebp
aaa
rcr
ficompl
and
addb
adc
cld
sbb
mov
and
adc
dec
add
sub
das
mov
stos
mov
and
fucomip
ret
pop
les
xlat
es
inc
and
divb
lcall
push
inc
faddl
rorl
outsl
aam
sti
sbb
rcrb
cmp
or
sub
mov
outsb
cmp
ficoml
test
test
dec
cltd
push
decl
push
fmull
xchg
pop
rorl
lahf
gs
dec
cmp
pop
mov
add
pop
and
sbb
call
outsl
mov
repz
push
out
cmp
inc
out
call
push
jbe
and
xor
fs
sti
dec
mov
aam
pop
pop
mov
arpl
mov
data16
pop
cli
aaa
jle
pop
loope
jecxz
inc
xchg
mov
push
jmp
inc
mov
sub
out
dec
lods
jp
fstl
sub
add
and
mov
imul
sub
mov
push
xchg
xor
mov
js
pop
loopne
pop
mov
dec
jb
fisubs
jle
stos
add
xchg
sbb
cltd
sahf
jp
outsl
cmp
xor
cmpb
adc
fldl
lahf
cwtl
sub
outsb
mov
decl
out
and
cmp
add
xor
roll
data16
mov
push
cmp
jns
and
push
les
xor
sbb
mov
shrl
jne
xchg
aaa
aas
mov
fidivrs
pop
fsubrs
xor
and
mov
mov
jmp
cmp
xor
xor
adc
imul
mov
jle
xchg
sub
pop
pop
icebp
imul
in
inc
movsl
push
cmp
cmp
jbe
jg
aad
leave
pop
fs
jp
inc
mov
add
add
nop
stc
movsl
push
insb
mov
adc
fwait
dec
inc
call
pop
jl
add
lods
lret
enter
mov
add
ds
fucomi
xchg
aas
lock
jecxz
adc
test
or
outsl
pop
mov
mov
pop
stos
mov
cmp
mov
rcr
jbe
inc
pop
insw
xchg
inc
cs
cmp
pop
jp
aaa
fwait
inc
ss
pop
or
mov
je
inc
jae
mov
psllw
nop
enter
and
sbb
mov
loopne
syscall
shll
inc
ret
dec
sti
sbb
sub
add
jle
test
inc
lret
insb
fxch
ja
mov
stos
ja
xchg
push
fbstp
aad
or
or
fisttpll
and
rol
xor
outsl
adc
sbb
rcll
jae
orb
inc
sahf
dec
leave
std
and
pop
mov
mov
lcall
ret
sub
mov
xorb
outsl
xor
jae
hlt
dec
jl
lods
push
mov
int
pop
sbb
scas
xor
or
stos
pop
sbb
scas
push
mov
addr16
push
or
gs
fstp
das
cld
push
sahf
lcall
sub
jne
push
push
clc
adc
pushf
je
clc
test
sub
jb
cmp
jg
outsb
mov
dec
add
shll
or
aas
cmp
scas
outsl
sub
pop
fsubrp
ljmp
sbb
mov
loope
pop
mov
adc
stos
mov
push
cmc
dec
pop
mov
and
mov
mov
pop
pop
sub
loope
loop
dec
test
shrb
xchg
mov
js
das
jne
mov
jne
es
pop
in
ret
mov
and
into
sbb
cs
insb
movsb
js
lret
sbb
repnz
leave
clc
mov
lea
add
mov
test
loope
fwait
pop
sub
das
scas
hlt
dec
push
mov
fists
bound
mov
repnz
cmpsl
lcall
int3
mov
outsb
pop
test
sbb
push
rcrb
mov
jo
cmp
ljmp
lock
xor
cli
insl
sti
ss
jnp
push
adc
push
sbb
adc
xlat
jbe
daa
inc
jbe
xor
and
xchg
cmp
lock
stos
add
mov
jbe
cmp
arpl
iret
xor
stc
lahf
dec
leave
insl
xchg
mov
cs
adc
cmc
das
or
sub
push
pushf
mov
sub
inc
test
push
aaa
test
test
outsb
jno
nop
rolb
clc
test
or
mov
mov
mov
xchg
push
xchg
loop
push
call
fistl
jbe
add
sbb
filds
or
jns
enter
insb
loop
push
lcall
sub
mov
rorb
adc
inc
lcall
popf
jbe
jmp
stc
xor
jo
test
sub
push
push
vmovaps
das
adc
sarl
sbb
aad
adc
clc
mov
mov
andb
fst
mov
xlat
jae
out
dec
sbb
mov
fdivrp
in
add
sbb
aaa
mov
pusha
and
insl
add
cmp
push
sbb
pop
mov
dec
mov
fsubrs
mov
fildll
push
or
leave
lds
std
bnd
out
fistl
add
jp
jge
jno
out
aas
mov
pop
adc
push
jb
lods
cld
lea
dec
xchg
out
mov
inc
gs
fimuls
inc
fstps
lock
das
lock
mov
push
mov
mov
push
xchg
mov
inc
mov
pop
push
mov
adc
inc
rorl
jge
mov
lock
pop
addr16
adc
adc
mov
mov
in
into
push
and
test
pop
or
int
shlb
fdivs
mov
or
xchg
or
lods
jne
mov
cmp
inc
fstl
xchg
xchg
push
mov
adc
sub
loop
and
into
aaa
xor
mov
rolb
aaa
jmp
inc
dec
mov
xchg
mov
or
xor
mov
aas
cmc
dec
test
out
mov
jno
in
rcr
scas
mov
es
icebp
fwait
mov
dec
addl
mov
and
push
adc
shlb
cmp
fisttpll
sbb
pop
clc
pop
or
lret
pop
mov
pop
sti
and
sbb
movsl
adc
insl
bound
xor
lock
push
lock
sarb
movsl
dec
je
inc
xor
daa
jae
mov
sub
lock
fistps
bound
dec
pop
outsb
sub
inc
push
push
add
mov
mov
push
cli
fbld
adc
pushf
mov
dec
outsl
fistpll
cmp
and
add
sarb
mov
in
push
sub
stos
std
int
addr16
mov
pop
loop
mov
sbb
mov
push
clc
adc
xchg
cmc
cmp
test
pop
or
dec
addl
cltd
pop
add
aas
shl
pop
xchg
push
lock
sbb
push
push
stc
adc
stos
xor
adc
ss
out
call
int
pop
xorl
cmp
mov
cli
iret
leave
mov
aas
es
jg
mov
mov
pop
stc
nop
xor
inc
push
outsb
sbb
mov
and
jnp
test
das
mov
mov
xchg
mov
dec
cld
adc
mov
lods
xorb
pop
fnstsw
mov
nop
jge
mov
mov
sti
xchg
jo
ljmp
rolb
sbb
aam
rorl
or
mov
mov
push
rcrb
mov
jmp
or
lret
push
or
stos
cmpsl
jle
les
xor
cs
pushl
sbb
and
popl
mov
scas
inc
js
cltd
popa
sub
adc
inc
lret
cli
add
aaa
push
std
push
repz
add
fistl
outsb
pop
cmp
cmc
mov
sbb
jnp
rclb
mov
jecxz
mov
test
out
test
mov
sbb
inc
cld
incl
add
dec
mov
sub
icebp
and
sbb
cld
lock
mov
push
fldz
cmp
in
std
inc
or
inc
adc
inc
add
and
pop
mov
ret
repz
xor
js
mov
jg
dec
push
pop
loope
push
sub
and
stos
in
push
int
pop
sbb
xchg
js
cli
mov
push
xchg
jo
fdivrs
jae
mov
jp
enter
push
mov
add
push
and
push
dec
imul
pop
in
mov
into
adc
or
in
fs
cmpb
pop
or
test
ficoml
loope
div
jmp
data16
jp
rclb
xchg
sbb
pushl
push
out
std
adc
icebp
inc
mov
sub
push
and
mov
imul
outsb
je
and
incl
stos
mov
imul
pop
mov
bound
es
orb
inc
sub
jmp
push
mov
cmp
cmp
push
and
lods
inc
pop
push
adc
lahf
mov
dec
jno
fildll
nop
ja
dec
fdivr
ud0
xor
jmp
outsb
xor
jno
in
xchg
pop
jo
inc
jbe
in
fstl
out
movsb
xchg
test
scas
mov
inc
aaa
pop
sub
sbbb
push
push
mov
fbld
faddl
testb
cwtl
adc
sub
push
mov
add
outsl
add
add
bound
adc
mov
jmp
and
cmpsl
stc
jg
pop
jg
loopne
sahf
lret
and
push
enter
aaa
clc
push
sbb
adc
and
and
sub
mov
adc
cmp
inc
sub
mov
subb
inc
aad
lods
push
jo
lock
mov
mov
negb
sbb
ja
jne
cmp
stos
call
xchg
popa
mov
jp
pusha
out
jmp
pusha
mov
xor
subb
pop
dec
call
push
adc
mov
adc
xchg
stos
clc
jp
adc
popf
sbb
rolb
mov
into
add
pop
sub
pop
jl
pop
loope
xor
popf
dec
pop
mov
mov
inc
sub
xchg
in
dec
jg
cli
aaa
call
test
xchg
jge
xor
jns
jmp
mov
aaa
sbb
insl
sub
pop
push
test
dec
movsl
test
inc
sti
in
ret
ret
xchg
mov
pop
jmp
or
loop
push
and
and
jmp
sbbb
ds
int3
mov
mov
mov
push
lds
das
and
xchg
je
cltd
or
fdivl
mov
gs
push
insl
lods
add
test
jae
sbb
or
jb
or
roll
clc
push
adc
push
lahf
mov
aad
sub
outsb
or
leave
sbb
jg
testb
mov
mov
int3
jnp
iret
shll
dec
and
das
add
popf
cmp
scas
loop
popa
leave
iret
adc
insb
movsl
stos
xchg
je
andl
pop
ss
mov
mov
xor
pop
xor
cmpl
in
jmp
pop
or
stc
into
push
mov
test
xor
cmpsl
popf
loope
jle
xorb
inc
or
mov
pop
xor
cmc
mov
xchg
xchg
cmpsb
lods
ret
jbe
fnstsw
pop
jle
out
xchg
pop
and
add
sbb
movsb
mov
aad
push
cmp
in
test
xchg
pop
inc
cmp
das
and
pop
add
mov
add
push
in
jnp
ljmp
mov
xchg
push
dec
insb
sbb
xchg
sbb
test
ss
or
movsl
sbb
adc
lahf
mov
push
adc
and
push
dec
ss
add
call
outsl
mov
jno
test
inc
mov
sbbl
push
and
cmc
cmpsl
jno
add
outsb
jmp
xor
mov
stos
and
fiaddl
xchg
sub
in
stos
cltd
push
cs
xchg
cs
loop
xchg
bound
daa
inc
lods
sub
adc
cld
enter
xchg
sub
add
inc
aam
sbb
clc
test
sbb
cmp
inc
jns
jl
les
test
pop
loopne
outsb
std
test
and
daa
inc
jle
addl
dec
rcr
movsl
pop
fdivl
lahf
cmp
mov
icebp
mov
push
and
cmc
adc
mov
pop
ss
inc
pusha
xor
repz
std
xchg
adc
pop
je
sbbb
xor
dec
ror
lret
incl
or
inc
ljmp
jp
dec
inc
mov
jne
mov
mov
fdivr
or
in
mov
cli
adc
test
pop
test
js
loop
inc
jecxz
testb
leave
inc
orb
leave
std
fimull
mov
push
dec
xlat
sbb
iret
in
popl
push
xor
in
in
mov
or
pop
sbb
rolb
sahf
xor
cmpl
sbb
xchg
cmc
inc
jns
pop
cwtl
stos
mov
and
adc
mov
mov
sti
lds
rolb
rolb
call
std
adc
jecxz
out
jle
dec
leave
cltd
cli
loope
jae
sbb
jo
mov
dec
and
push
mov
rcl
aad
fistpll
mov
out
mov
mov
subb
and
sbb
jb
add
mov
adc
js
xor
inc
jne
mov
loopne
outsb
sbb
jno
loope
imul
sub
add
test
shl
pop
mov
aas
pop
xchg
movsl
jne
xchg
lahf
movb
sub
jbe
mov
adc
icebp
pop
jge
fmuls
inc
cmp
cmpl
xchg
fisubl
lock
das
rolb
std
and
loope
lock
lods
das
rcrb
insb
pop
lret
mov
call
inc
dec
daa
mov
add
imul
imul
push
pop
mov
xchg
shrb
push
sub
aaa
in
data16
inc
inc
add
jns
add
rorl
add
dec
mov
leave
mov
incl
and
xchg
pop
mov
shl
inc
or
sub
cmp
sub
ficoml
pop
push
lret
sub
std
inc
ror
xorb
lock
js
pop
mov
push
push
jnp
pusha
xchg
xchg
lds
scas
dec
arpl
aas
push
pop
sbb
mov
sbb
loopne
push
outsb
ljmp
push
push
push
std
jnp
mov
push
cmp
jne
fnstsw
daa
je
sub
fucomi
sub
adcb
xchg
adcb
les
and
ljmp
jl
pusha
inc
jo
lcall
jp
pop
mov
sub
push
std
int3
fildl
xchg
mov
sarl
imul
cmc
test
xchg
xlat
cmp
pop
push
movsl
or
rcrl
inc
push
mov
fcmovnb
mov
cmpsl
jae
std
loope
loopne
xor
fs
add
into
pop
lock
inc
lret
adc
or
xor
dec
jl
arpl
cmp
inc
xor
test
fbld
push
or
call
test
loop
push
jmp
out
jecxz
sbb
or
rclb
fcmovnu
pop
pushf
mov
or
jnp
nop
mov
aaa
adc
inc
popa
aam
nop
jnp
outsl
jecxz
xor
mov
mov
mov
xchg
mov
mov
sbb
push
mov
loop
sub
pop
dec
fcom
inc
icebp
mov
xlat
adc
shlb
jne
or
adc
cld
das
cld
das
xorl
xchg
xchg
repz
cltd
adc
ljmp
add
insl
jae
push
or
into
mov
inc
addb
fcoml
cmpsl
cmc
jle
jle
xchg
xor
imul
jmp
out
dec
jecxz
xor
pushf
loopne
mov
loop
jne
jns
sbb
out
or
jle
or
cmp
add
cwtl
xor
repnz
mov
jl
and
sarb
aas
cld
jle
pop
lahf
mov
pop
adc
jp
test
jo
add
mov
inc
jno
addb
push
sub
mov
sbb
in
lea
cmp
adc
mov
pop
in
mov
or
lds
push
sbb
mov
pushl
mov
aas
sub
es
rcll
sub
sbb
pop
adc
or
mov
test
enter
mov
aaa
fdivr
bound
jmp
sbb
sbb
pop
mov
fildll
push
int
or
imul
sub
dec
fimuls
rcrl
pop
fcmovne
xchg
stos
and
in
je
dec
push
sub
negb
jne
xor
leave
push
ss
out
lods
ficomps
xorb
and
mov
mov
sbb
lds
sub
wbinvd
inc
inc
movsl
jns
xor
add
inc
adc
inc
sub
or
mov
ja
adc
lahf
jle
inc
and
pop
mov
xchg
inc
pop
adc
aas
push
stc
jo
jnp
or
push
ret
adc
cmp
inc
mov
lea
push
add
sub
sub
ret
fiadds
sahf
sub
repnz
sarb
fwait
sahf
pusha
lods
jecxz
sbb
outsl
add
adcb
mov
les
dec
clc
lock
mov
lock
js
fldenv
push
out
and
or
inc
push
mov
out
cmp
test
es
shll
push
and
repnz
std
scas
cwtl
sbbb
fmul
shl
fwait
xor
sub
dec
inc
pop
mov
pusha
adc
ret
ja
loope
loop
mov
das
fistl
call
sub
sar
test
dec
call
ljmp
jne
js
cmpsb
jnp
and
stos
xchg
jmp
sub
sbb
pop
scas
adc
jle
xchg
xchg
icebp
lcall
cmp
das
cld
or
xchg
jno
xchg
xchg
leave
push
dec
insl
ffree
out
or
js
es
cmp
in
stos
add
ljmp
mov
push
pop
sbb
out
clc
push
cmp
mov
mov
inc
pop
add
sbbb
insl
jbe
jge
testl
sub
cmc
out
cli
lds
mov
fmull
jnp
call
pop
cmp
cmp
rcr
adc
subl
sahf
or
insl
cmp
cld
mov
loop
inc
aaa
fdiv
xor
dec
mov
outsb
hlt
rclb
sbb
outsb
sti
mov
stos
push
lcall
jge
mov
inc
pop
bound
popa
mov
jg
push
mov
fidivrs
pop
sbb
jmp
or
out
repz
mov
xor
ja
jb
sub
lock
dec
jp
or
push
push
xlat
jmp
cmp
and
lea
cmpsb
lcall
inc
fildll
or
push
cli
pop
mov
xchg
adcl
inc
adcl
cmpsl
in
dec
fistpl
cli
mov
or
cli
xor
andl
test
push
pop
js
ljmp
fwait
mov
xor
in
test
mov
sub
insl
push
test
dec
push
dec
adc
and
inc
shl
xchg
xor
insb
inc
push
incb
call
shr
rclb
jo
icebp
sbb
mul
ljmp
inc
stc
xor
jnp
push
mov
bound
jbe
mov
inc
mov
adc
imul
mov
icebp
pop
int3
and
clc
ret
add
xor
int3
lea
test
inc
xor
sar
lods
dec
xor
lock
xchg
push
movsb
inc
push
scas
dec
mov
hlt
hlt
pop
into
sub
movsl
out
cmc
push
sarb
sbb
and
cmp
pop
das
fst
xchg
stos
in
cld
pop
mov
lcall
lock
add
push
mov
pop
stc
lods
mov
mov
xor
popf
xchg
ficoms
adc
imul
sub
mov
pop
or
sbb
fidivrl
mov
insb
aaa
std
xchg
mov
bswap
cmp
pop
sbb
ja
sub
insl
mov
call
lods
push
clc
jecxz
ret
data16
ljmp
xor
dec
and
aad
hlt
scas
pop
xor
icebp
push
dec
rorl
call
hlt
add
dec
clc
mov
jo
sub
fidivl
imulb
mov
push
push
fnstsw
xchg
mov
daa
cmpsl
ljmp
test
stc
in
pusha
xlat
dec
inc
lcall
and
rclb
les
xchg
fdivs
pop
xchg
xor
xchg
sub
test
test
jno
mov
or
or
jbe
inc
rcrl
fmuls
lea
xorb
lahf
pop
push
or
and
es
lock
mov
push
pop
mov
mov
icebp
jmp
inc
fwait
mov
add
xor
mov
out
call
loope
rolb
popf
xor
jnp
lea
sbb
xor
inc
shll
sbb
or
ds
and
cmc
jp
mov
xor
adc
mov
mov
mov
pop
jne
pop
cs
and
mov
jb
mov
mov
popa
ss
mov
lret
fistpll
add
andps
fildll
lea
nop
push
scas
popa
push
mov
pop
loope
lock
add
add
idiv
add
cmpb
pusha
je
inc
lcall
hlt
xor
daa
add
push
fisubl
mov
das
in
pop
ja
xor
cwtl
daa
cmpsb
inc
cmpsb
rcrl
mov
jb
push
fbld
push
mov
adc
pusha
push
pop
push
mov
cld
sar
ret
in
mov
xchg
fbstp
inc
jnp
test
mov
jnp
sahf
mov
jge
push
fstl
je
jl
mov
clc
ljmp
andl
push
xchg
mov
jbe
sbb
sbb
jge
divb
lods
lret
movsl
cld
push
sub
pmaxub
call
ret
adc
add
adc
sub
incl
sub
ss
pop
call
js
cld
sbb
push
cmp
xchg
fcomps
mov
cmp
enter
push
popa
jae
dec
cmc
xor
icebp
fists
ljmp
lods
popf
das
movsl
sbb
pop
push
rorl
jne
pop
cltd
stos
adc
int
ja
fistpll
lods
imul
aam
or
adc
cmp
sub
jno
mov
leave
imul
inc
or
rorb
inc
addr16
cs
and
lods
sub
arpl
fs
mov
sbb
ss
loope
inc
cmpsb
and
mov
in
cmp
andb
pop
cmp
mov
sti
add
js,pn
aaa
mov
lods
call
repnz
dec
lea
dec
pop
inc
sbb
pop
adc
mov
sbb
cmp
fdiv
out
and
icebp
push
in
mov
jae
jge
mov
mov
aaa
jle
cmc
leave
and
jp
jmp
orb
xchg
ficoms
push
adc
xor
inc
std
scas
loope
mov
sbb
add
mov
outsl
add
aaa
cmp
or
addl
adc
jo
push
rolb
arpl
inc
cmc
pusha
mov
pop
enter
aam
pop
xchg
test
pop
xchg
decl
sbb
adc
fmuls
add
jge
pop
sbb
scas
xchg
dec
je
mov
lcall
cwtl
sub
pop
add
add
fistpl
jg
fists
lahf
mov
sub
lea
lret
loopne
sub
pop
mov
sahf
data16
cmp
inc
out
and
sbb
loop
xchg
pop
sahf
mov
xchg
outsb
std
ret
xor
mov
orl
popa
and
mov
mov
daa
neg
mov
adc
adc
mov
cmp
adc
mov
in
jmp
cwtl
or
mov
adc
cli
mov
fimuls
xor
jp
xchg
subb
jg
dec
adc
xchg
call
ds
loop
mulb
call
in
push
fiadds
sbb
stos
mov
mov
push
xchg
sarb
rcrl
ret
mov
repnz
popf
cmpsb
fsubrs
cmpl
das
or
pop
lods
int
push
push
add
ja
imul
popa
push
push
shrb
scas
adc
adc
mov
xor
scas
add
jge
xchg
rcrl
clc
in
pop
sbb
push
incl
push
rorb
in
add
mov
addb
hlt
add
dec
push
mov
and
sub
jns
ss
dec
daa
rorl
jnp
mov
movsb
stos
sbb
testb
fucomip
sbb
inc
ljmp
or
adc
xchg
cmp
movl
lds
mov
mov
jge
mov
pop
sahf
xchg
ds
lret
jl
fdiv
es
iret
call
fisubl
cmp
dec
jnp
int
adc
xor
pop
faddl
push
xor
es
outsl
cli
ud2
mov
inc
cltd
loop
mov
in
mov
dec
cmp
shlb
ret
inc
push
incl
push
repz
xor
test
adc
sbb
roll
mov
call
mov
test
bound
mov
jl
lcall
std
orb
orb
test
jmp
icebp
sbb
push
mov
repz
je
jmp
call
daa
dec
sbb
xchg
mov
pop
js
ss
cmpsb
cli
fwait
sub
leave
loopne
in
adc
in
dec
pop
mov
or
sbb
add
pusha
jns
stos
fcomps
or
inc
pop
mov
mov
cmc
pop
aas
jle
rcrb
andl
adc
jle
out
add
pop
hlt
add
repnz
mov
adc
push
aad
lahf
dec
in
gs
sbb
in
inc
or
stc
mov
fnstcw
les
into
xor
loope
mul
imul
pop
out
push
les
xchg
out
or
push
push
bound
jno
sbb
push
fcmovnb
jmp
and
mov
mov
mov
or
jns
cmp
icebp
out
pusha
test
push
push
out
ja
hlt
fnstsw
andb
orb
mov
or
andb
popa
add
push
out
jo
sbb
scas
sbb
loopne
jg
ret
inc
xchg
pop
dec
bound
xchg
jge
and
mov
pop
ja
push
movsb
cmp
pop
cli
fistl
push
in
in
dec
jae
mov
dec
insb
dec
jno
decb
sbb
sub
ljmp
adc
lahf
dec
cmc
jae
cmp
push
sub
aas
and
lahf
jg
ret
inc
fistl
add
pop
fmull
mov
push
push
insl
jb
and
push
inc
xchg
ds
xchg
scas
subl
pop
lods
xor
jmp
ficompl
add
sub
mov
jmp
jl
adc
orb
out
std
inc
lea
jge
inc
mov
adc
mov
fcompl
push
scas
sub
mov
jnp
inc
add
push
ret
pop
dec
or
ja
test
or
and
push
jo
mov
fstp
scas
dec
bound
jp
adc
xor
outsb
sbb
push
jp
push
mov
pop
js
sub
mov
jne
call
mov
test
adc
cmp
inc
or
or
dec
cmpsb
loopne
cmp
or
das
stc
adcb
cmc
ret
or
scas
lret
inc
push
gs
les
mov
add
movsb
fwait
adc
repz
cld
and
loop
mov
mov
push
aam
sbb
mov
popa
lret
lahf
fstpt
mov
pop
add
mov
cmp
cmc
in
pop
cmpsb
pop
adc
and
div
je
dec
pop
sub
cld
jg
insl
mov
add
inc
lods
mov
inc
adc
cmp
xor
insl
pop
loopne
mov
mov
dec
inc
or
fdivr
push
push
inc
iret
inc
sub
and
ja
inc
xchg
mov
xchg
sahf
and
dec
fisttpll
into
cmpl
aam
push
jle
mov
popf
sarb
pop
bound
sbb
dec
int3
ja
add
aas
add
fs
movsl
cmpsl
mov
push
or
dec
mov
aaa
pop
lahf
imul
fwait
cli
fwait
pop
mov
sub
sti
popa
pop
inc
and
insb
mov
jle
dec
pop
jbe
dec
or
popf
popf
ja
adc
out
ret
mov
xlat
mov
pop
int
das
shrb
dec
mov
pop
mov
mov
jp
adc
push
xor
push
jns
mov
push
clc
test
mov
test
push
adc
or
push
test
mov
nop
sahf
adc
addl
pop
fcomp
push
add
mov
repz
adc
xor
ret
lods
sarl
cld
insl
lock
xor
jecxz
mov
adc
lods
loope
jmp
add
inc
and
and
in
int3
dec
xor
mov
fistpll
pop
dec
sarl
push
stos
fimull
movsl
dec
xlat
in
in
dec
aad
jmp
add
js
rclb
sub
sub
jno
shl
inc
jne
fcomps
cli
es
mov
mov
orb
pop
jg
scas
or
subl
sbb
xor
xchg
and
mov
ljmp
adc
push
jne
leave
sti
or
test
xchg
adc
sti
test
aas
cmp
rorl
mov
jecxz
inc
mov
push
jo
add
insl
dec
aas
ds
mov
push
mov
pop
inc
mov
sbb
je
cmp
popa
jg
adc
popa
fsubrs
faddl
dec
pop
loope
test
xor
subb
jbe
xchg
xor
add
xor
out
push
mov
xor
les
or
aad
xchg
mov
pop
mov
rclb
imul
ret
push
cs
fstps
adc
mov
xor
subb
clc
add
xchg
mov
push
gs
add
ss
mov
lods
dec
shll
lock
jmp
xchg
and
xor
clc
jb
rcr
ret
and
dec
add
push
dec
add
or
mov
aaa
and
movsl
fstpt
push
pop
cmpsl
dec
mov
xchg
cmp
pop
adc
out
cs
xor
clc
aam
or
in
out
test
sbb
cmp
inc
imul
inc
popf
js
and
pushf
xchg
push
mov
dec
sbb
ror
and
ficompl
test
adc
cmovbe
xchg
shll
sbb
in
dec
aam
leave
or
addl
mov
notl
out
fwait
sub
mov
jg
lret
gs
xor
cld
mov
inc
lock
lret
push
mov
shrl
jbe
push
popa
lcall
mov
xor
xor
imul
adc
sarl
in
inc
int
mov
push
stos
outsl
outsl
out
push
lods
divb
dec
jne
pop
adc
inc
fdivrl
xor
pop
fcoms
sbb
push
cli
in
repnz
cld
movsl
das
fcompl
fsubs
and
fwait
or
add
insl
outsl
mov
xor
ret
inc
pop
xor
adc
or
test
dec
ret
push
je
inc
std
push
pop
inc
cld
gs
or
mov
lods
or
cmc
dec
adc
in
outsl
sqrtps
loopne
push
mov
stos
addr16
ljmp
mov
mov
or
lea
popf
or
mov
fisttps
mov
pop
test
icebp
loope
aas
sub
pop
cmc
push
pop
fildll
and
pop
scas
bound
rorb
push
cmp
into
jle
out
outsb
sub
cmpsb
es
nop
addr16
and
out
pusha
mov
jle
pop
push
bound
outsb
mov
jno
test
out
bnd
jecxz
push
loopne
subb
and
lds
push
repz
add
xor
leave
jecxz
or
sar
inc
insl
movsl
xchg
fldenv
add
call
jb
ret
aad
cli
es
jo
int
push
push
mov
cs
inc
test
pushf
add
sbb
rcrb
lret
rcll
out
scas
repnz
jl
dec
mov
arpl
xchg
fistl
add
leave
mov
xchg
and
lret
les
lods
mov
fldt
mov
stc
setl
xchg
fadds
xchg
xchg
jmp
cmpsb
leave
mov
testb
xchg
jno
movsb
dec
xor
int
mov
fbstp
jne
mov
mov
outsl
loop
das
fcoms
and
sub
insb
pop
pop
and
xchg
xchg
lret
fbld
rolb
fwait
repnz
mov
ret
adc
xor
loope
mov
ret
stos
mov
mov
scas
or
adc
decb
jge
std
inc
push
stc
in
in
push
xchg
mov
icebp
fldenv
pop
mov
jno
mov
dec
cmp
adc
and
imul
fdivl
jb
inc
pop
adcl
add
ret
rclb
iret
dec
push
xorl
inc
popf
sub
imul
shrb
in
lret
xor
pop
mov
decl
push
jp
inc
adc
clc
jle
fimull
add
js
add
pusha
hlt
enter
push
inc
xor
dec
sbb
lea
mov
cmpsb
inc
or
xchg
pop
mov
xchg
in
outsl
cld
not
adc
xor
pop
rolb
sub
or
jbe
mov
pop
adc
fiadds
decl
popf
sbb
lret
mov
das
mov
fldl
cld
in
xchg
test
loopne
and
cmp
jecxz
pop
push
mov
xchg
sub
and
fwait
sub
mov
mov
shll
jge
ret
pop
xor
idiv
mov
and
xor
gs
push
in
hlt
imul
mov
shlb
mov
iret
push
bound
insl
fmull
cmpsb
outsb
xlat
mov
sarb
daa
sub
repnz
in
int
mov
scas
in
push
xor
push
aam
sbb
popf
mov
pop
fbld
gs
cld
mov
mov
mov
nop
out
inc
rolb
cmp
or
aaa
cld
jb
stos
fimull
mov
inc
cmp
outsl
test
icebp
inc
mov
push
push
clc
push
pop
push
mov
mov
adc
sti
jne
movsl
call
dec
shl
scas
mov
aas
mov
adc
js
ss
push
mov
sbb
jmp
and
inc
or
jg
mov
shrl
shlb
and
jle
xchg
adc
fnstcw
push
insb
sti
mov
inc
adc
pop
loopne
xor
fistpll
addr16
out
xchg
mov
in
jle
xorl
ss
push
lea
mov
inc
insl
es
outsl
jae
shlb
into
push
mov
or
mov
push
fdivr
ljmp
xchg
sti
roll
adc
adc
aaa
inc
roll
testb
mov
xchg
pusha
arpl
loopne
loopne
xor
clc
pop
stc
pusha
lock
insb
add
pop
les
add
mov
arpl
movsb
adcl
pop
lods
sbb
jl
inc
mov
insb
xchg
sub
adc
addr16
icebp
lods
das
std
jae
fiaddl
inc
jg
pop
cmp
scas
popa
push
push
mov
mov
lods
int
or
push
jno
jl
jge
cmp
fisttpll
and
mov
add
cmp
sub
inc
fisttpl
xlat
lock
rorb
pop
jl
mov
lds
sti
mov
bnd
stos
std
fcmovnu
jne
pop
into
in
outsl
mov
mov
das
sub
xor
jno
and
sbb
mov
stos
xor
or
rcr
aaa
mov
jns
mov
leave
dec
lret
and
fidivl
or
mov
pop
int
xor
xor
fdivp
push
orb
adc
lods
outsb
iret
fcmovnb
jbe
stos
outsl
insb
std
add
aam
es
dec
pushf
push
rol
mov
pop
bound
fcompl
push
sub
call
or
icebp
push
icebp
out
cli
mov
adc
test
cmpsl
inc
shr
mov
xor
aaa
sar
inc
rorb
cmp
pop
scas
sbbb
or
test
adc
and
push
inc
test
lret
push
inc
mov
sub
mov
and
or
imul
and
inc
and
aas
outsl
adc
insl
add
roll
cmc
jp
into
fnstcw
xor
ret
adc
pop
cmp
jge
ss
inc
mov
sbb
push
and
adc
mov
jbe
outsl
sub
push
mov
in
ret
push
or
arpl
hlt
and
add
jg
fstpt
adc
call
pop
ljmp
ja
inc
jae
testb
mov
into
loope
mov
je
ds
push
and
ljmp
jl
push
cmp
sub
insb
mov
cmc
sub
jg
sbb
movsb
cmp
inc
fs
dec
dec
jg
and
ljmp
xchg
fimuls
aam
mov
int
nop
sbb
rclb
cmp
xchg
adc
pop
push
jg
dec
cmp
dec
outsb
jl
lcall
adc
mov
sub
fldt
fcmovnbe
out
mov
addr16
test
lods
std
dec
lret
jl
cmovbe
out
mov
add
aaa
stc
jp
sbb
mov
dec
fsubr
clc
push
jae
adc
lock
mov
stos
add
lock
xor
popa
jno
inc
jnp
jp
jne
repz
cli
es
ljmp
jecxz
fldenv
jl
fs
xchg
mov
sti
idivb
add
outsl
jp
sub
and
ja
jo
jecxz
or
lret
rcrb
rorl
outsl
rcrl
inc
mov
aas
dec
repz
ret
mov
arpl
insb
dec
mov
add
shlb
cld
cmp
daa
xchg
andb
iret
adc
lods
and
popf
leave
mov
insl
sub
cli
mov
ja
or
pop
subb
mov
xor
mov
popa
pop
jo
loop
or
insl
leave
push
push
add
cmpsb
sub
sub
loopne
out
add
psubsw
mov
outsb
mov
call
jnp
push
aaa
pop
cmp
gs
js
loope
pop
pusha
js
pop
pextrw
scas
int3
dec
cmpsl
mov
std
movb
out
inc
mov
pop
mov
pop
cld
in
adc
fxch
add
hlt
in
jl
jns
cmc
fisubs
outsl
orb
outsb
rcrl
jecxz
pop
inc
mov
bound
hlt
ljmp
cmp
dec
xchg
xchg
outsb
cmp
dec
nop
outsl
inc
outsl
mov
rolb
addr16
testl
bound
rclb
outsl
aad
mov
or
icebp
mov
test
pop
fidivl
outsl
fsubrl
adc
daa
imul
push
and
arpl
aad
movsb
sbb
push
mov
std
pop
and
clc
fistl
mov
leave
incl
mov
pop
or
rcrb
xor
sbb
outsl
jp
mov
popl
mov
pushf
jae
fildl
out
cmp
sbb
rep
sub
adc
les
mov
mov
test
rcrl
cs
inc
lods
std
or
xor
in
stos
nop
fnstenv
clc
push
decl
stos
xlat
jne
shr
pusha
stc
scas
mov
mov
sbb
mov
das
push
fwait
pushl
push
cld
jg
mov
add
and
mov
or
or
loopne
in
mov
fstps
inc
pop
or
or
mov
push
mov
mov
mov
jb
mov
arpl
je
ja
nop
popa
adc
cmpsl
sbbl
lods
enter
cmp
or
imul
call
mov
dec
rcr
jns
pop
or
stos
sbb
push
jae
jns
jecxz
in
push
in
xor
stos
mov
cltd
mov
jb
adcb
sarb
xorb
pop
fimuls
and
xchg
sub
mov
sbb
cs
sbb
jbe
loope
vcvtss2sd
popa
xor
adc
sub
and
push
dec
adc
add
out
movsl
xchg
aam
mov
in
lods
mov
shrb
movsl
fistpll
mov
mov
push
fistpl
in
mov
cwtl
add
add
stc
ss
test
fsubrl
lods
pop
in
dec
jge
push
cld
mov
shrl
ffree
dec
int
fdivrp
pop
xchg
inc
icebp
or
lock
jg
jb
imul
push
and
fsubrl
sbb
sub
mov
xor
sub
cmp
mov
or
inc
in
imul
sub
adc
stc
mov
xlat
lcall
lock
insl
out
frstor
xor
bound
fs
add
sub
inc
mov
data16
inc
sub
ret
xchg
test
pop
ja
push
cmp
push
ret
inc
aad
cmp
out
inc
pop
fcmovu
stc
fwait
xchg
loop
std
mov
fstps
or
sub
loop
jne
fisubrl
or
int3
rcl
aaa
pop
mov
xchg
add
loope
xor
pop
clc
test
lret
or
or
mov
inc
lret
mov
insl
stos
pushf
xchg
mov
pop
out
mov
cmc
mul
jmp
jp
sbb
jns
bound
mov
fbstp
loop
push
arpl
sub
push
and
mov
or
mov
sub
clc
or
mov
add
hlt
jnp
cmp
das
outsl
and
jae
fnstenv
inc
test
sahf
cmpsb
mov
adc
lods
xchg
clc
fistps
xorl
test
cmp
mov
test
add
imul
outsb
pushf
sahf
das
int3
or
sub
adc
mov
test
andl
insl
or
lea
mov
orb
outsl
dec
adc
int3
iret
test
adc
adc
stc
mov
and
sbb
mov
xlat
mov
out
ret
jle
mov
cmpsb
rclb
sbb
cmpsl
adc
sbb
inc
lcall
das
test
push
loopne
scas
jmp
js
shll
lods
jecxz
fldl
cli
jae
inc
adc
gs
cmp
xor
inc
cmc
push
fistps
jge
ret
cmp
push
xor
leave
push
pop
ret
add
dec
sbb
mov
movsb
int
mov
aas
or
inc
mov
mov
or
rolb
cmc
dec
push
inc
loopne
lret
loopne
je
fildll
sub
mov
aas
imul
adc
inc
mov
xchg
orb
cmp
inc
in
add
xchg
or
js
sub
cwtl
cmp
cmp
aam
jg
rcrb
push
incl
adc
cmp
ja
das
addl
xor
mov
inc
dec
cmp
inc
xlat
shlb
enter
add
xlat
jbe
lds
dec
sbb
or
adc
xor
test
insb
sub
cmpb
rcl
and
outsl
and
mov
push
dec
insl
js
xchg
jnp
je
out
in
fdivrl
movsl
fisubl
pop
and
pop
and
sub
stos
call
enter
mov
ficompl
xorb
out
data16
jp
sub
mov
je
push
inc
sub
ljmp
insl
mov
inc
shlb
inc
rol
aam
out
push
adc
cmc
cmc
mov
das
pop
fcomp
xchg
mov
lock
push
lea
shll
mov
inc
in
addl
xor
arpl
call
or
or
mov
sub
xor
lock
sbb
push
and
rolb
mov
loop
pop
cmp
fsubrp
pop
in
scas
mov
fsubrs
hlt
xor
in
sbb
fbld
xchg
sbb
das
cmp
push
xchg
push
ljmp
cld
jmp
mov
pop
dec
xor
outsl
jg
push
pop
xor
xor
xchg
sub
icebp
mov
movsl
dec
jl
test
mov
xchg
jmp
rcll
inc
sub
fs
sbb
add
jb
pop
fisubrl
mov
sbb
insl
stos
test
and
add
add
js
mov
xor
jge
bound
and
aas
test
fisubrs
ss
push
rorb
jno
in
clc
lods
loopne
mov
out
aas
sarl
lcall
fsub
pusha
sti
clc
or
xlat
stc
mov
add
ret
sbb
mov
loopne
mov
fdivr
cmp
xor
out
or
adc
addl
movsl
loop
lock
add
jnp
popl
and
lods
jg
cvtps2pd
mov
lcall
lea
lcall
out
add
incl
in
xor
pop
fisttpll
dec
mov
inc
push
cmp
lcall
cmp
mov
std
push
mov
into
jno
lds
sbb
repnz
or
push
mov
add
mov
dec
sbb
xchg
pusha
mov
push
sub
mov
adc
dec
imul
sbb
push
pop
cmp
addr16
inc
sub
xchg
js
jg
mov
cli
or
cmpsb
subb
pushf
sub
std
push
popf
mov
mov
jle
ja
mov
mov
ljmp
jle
shlb
fidivs
mov
int
outsl
cld
cmpsl
rcrl
dec
sub
loopne
push
push
mov
jge
sub
mov
rcrl
sbbl
jmp
add
mov
test
and
std
jecxz
push
sbb
sub
loop
sub
int
cmp
jge
mov
mov
add
stc
add
lea
scas
clc
mov
jp
imul
mov
sbb
pop
insl
mov
addl
ret
stos
jns
xor
push
xor
movsb
loop
mov
mov
ss
xor
xchg
mov
cwtl
iret
js
arpl
sbb
es
imul
or
cmp
repnz
jge
push
or
mov
dec
or
loope
sbb
pop
cmpsl
or
and
lock
aam
cmp
add
pop
push
xorb
mov
mov
pop
rorl
pusha
in
mov
pushl
pop
daa
popf
cmpsb
push
inc
sbb
popl
sbb
xchg
cwtl
mov
pop
inc
sti
pop
push
mov
imul
aaa
dec
adc
pusha
call
lock
or
sbb
inc
inc
std
add
ljmp
stc
testl
in
xor
in
fadds
fimull
dec
test
imul
shll
adc
xlat
add
or
adc
sahf
and
es
or
fadd
sti
iret
adc
or
pop
cli
maxps
leavew
sbb
push
add
loope
xchg
jbe
dec
shl
popa
stc
hlt
and
jmp
movsl
add
pop
fdivs
jnp
sbb
lea
cs
pop
fsubs
jg
dec
jb
cltd
xchg
cld
stos
shlb
je
fidivl
js
int
jne
sub
rol
add
pop
mov
adc
cld
nop
sahf
cmp
ret
rol
sub
cwtl
pop
out
adc
dec
data16
pop
pop
clc
or
ja
dec
or
mov
ret
mov
cmpsl
subb
das
repz
sti
in
sub
pop
mov
cmp
sahf
inc
cmp
scas
cmpsb
push
adcl
hlt
push
sub
and
loop
xchg
jo
repz
sub
mov
leave
lea
push
pop
pop
push
ljmp
or
mov
cmp
xchg
ficoml
pop
push
fs
fisubs
jno
bound
sbb
sub
sub
daa
mov
push
mov
addb
jo
pop
rorl
loope
fmull
lods
and
pop
add
or
ljmp
jl
or
lcall
jmp
adc
shrb
cmp
push
inc
sbb
push
mov
and
adc
inc
add
idivb
stc
adc
pop
and
fidivl
testb
mov
pop
mov
daa
push
outsb
inc
icebp
xor
jnp
jmp
mov
outsb
sub
daa
int
sub
daa
inc
and
aam
test
jbe
or
adc
pushl
insb
cli
into
outsl
dec
mov
icebp
push
loop
cmpl
mov
sbb
jp
xchg
loope
xchg
push
jnp
dec
mov
cmp
movsb
push
icebp
push
test
fwait
mov
push
rol
fwait
jo
ret
jo
dec
scas
int3
out
or
push
mov
ljmp
hlt
sub
mov
jmp
lock
jbe
push
cmp
push
daa
jns
inc
xor
mov
xor
sub
xchg
mov
mov
pop
frstor
xlat
cwtl
adc
loop
adc
or
mov
out
mov
dec
sahf
mov
jle
test
mov
cmpb
or
dec
loopne
lcall
shr
popf
cmpb
cmp
inc
jle
dec
dec
jge
test
call
push
mov
bound
xor
loopne
shrb
or
or
and
cwtl
clc
sar
push
add
call
pop
or
adc
mov
es
and
mov
mov
or
pop
call
je
stos
out
outsl
out
lods
and
cmp
in
add
pop
sarl
dec
adc
filds
jo
push
mov
sbbb
pop
fsubrl
push
jge
int
mov
xchg
dec
aaa
push
lahf
mov
add
jns
mov
jno
je
mov
xchg
inc
stc
adc
loop
push
xlat
xor
jmp
dec
jo
push
jge
je
in
add
jg
lcall
xchg
jp
xor
and
or
stos
sbb
loopne
jmp
or
repnz
mov
fstpt
push
mov
mov
add
scas
aam
outsb
sbb
cmp
or
lret
dec
sbb
dec
inc
xor
xchg
pop
sbb
lret
mov
mov
fists
sub
inc
mov
test
dec
shrl
aas
sub
and
cwtl
and
or
sti
leave
daa
push
ret
shl
scas
hlt
sbbl
testl
mov
jp
jnp
ret
or
loope
mov
mov
mov
xor
mov
fs
mov
sbb
pop
jne
cld
testb
jle
mov
mov
ret
test
testl
sti
xchg
cmp
nop
mov
jmp
cmp
cmp
and
mov
pop
sub
outsb
fisttps
mov
push
adc
xor
mov
mov
out
and
iret
stos
jno
rcrb
aas
mov
push
push
add
mov
inc
jge,pt
repnz
push
mov
mov
xchg
cmpsb
scas
arpl
aas
adc
push
add
adc
jle
add
xor
loopne
loop
test
jp
aaa
or
sarl
outsl
shll
stos
lea
imul
cli
add
sub
jbe
mov
add
mov
scas
sbb
inc
dec
dec
jge
ds
es
dec
push
lock
ss
sbb
and
cmpsb
insl
jns
std
or
push
lahf
adc
add
push
or
test
push
lahf
aaa
dec
das
push
push
sbb
ret
push
adc
mov
cmp
stc
cmp
lods
insb
inc
cmp
jcxz
lods
push
mov
push
popf
adc
fxch
adc
sub
loop
sbb
xor
punpckhdq
data16
inc
xchg
and
pop
adc
jg
jmp
pop
cmp
lret
cmc
insl
mov
cmp
pusha
pop
insl
clc
adc
push
je
mov
hlt
mov
stc
and
mov
imul
aam
cmp
insb
inc
bound
loopne
adc
jecxz
mov
inc
adc
jnp
pop
js
mov
rorl
int
add
and
ret
mov
test
jne
icebp
incb
xchg
call
test
fwait
mov
jne
test
scas
adc
and
mov
andl
hlt
pop
pusha
jnp
pushl
inc
test
pushf
dec
inc
pop
test
xchg
dec
cld
das
aam
mov
mov
icebp
bound
insl
out
pop
fdivs
mov
mov
sbb
stos
or
pop
out
mov
sbb
cmpsb
insl
inc
js
aam
or
pushf
inc
adc
cmpsb
setnp
jg
sahf
nop
aaa
jbe
xchg
jo
inc
mov
mov
fildl
shr
push
push
lea
hlt
dec
mov
xchg
arpl
addr16
or
sub
popf
imul
divb
cmc
das
les
inc
stos
xchg
out
pop
iret
fldcw
arpl
adcb
mov
inc
jo
adc
lea
decb
jne
dec
sbb
mov
cmp
cmc
rcrw
pushf
mov
pop
stos
hlt
int
xchg
xchg
mov
popa
test
push
std
sbb
lock
mov
push
add
bound
cmc
xor
pop
cmpsb
adc
cwtl
je
jge
mov
cmp
sbb
and
push
add
out
add
subb
cmpsl
mov
push
fistpl
insb
cld
inc
cs
and
push
rcll
hlt
addr16
cs
addr16
sub
lock
mov
data16
pushf
push
cmpl
shll
xchg
std
push
pop
rcrl
outsl
movsb
push
test
insb
mov
inc
xchg
stos
outsb
insl
pop
cli
faddl
ljmp
fistpl
in
outsb
add
popa
push
and
std
outsl
in
insl
frstors
dec
sbb
stos
xor
mov
xor
dec
lcall
cmc
lahf
in
mov
dec
inc
inc
or
pop
stos
mov
adc
add
movsl
add
dec
push
add
sbb
aaa
sar
fsubrl
mov
xchg
jne
stos
loope
das
mov
sbb
inc
mov
fstpl
adcl
xor
xor
mov
jecxz
lcall
into
icebp
jp
insb
or
mov
sub
xchg
mov
mulb
int
mov
pop
mov
sub
incb
xchg
mov
add
jb
and
xchg
pushf
xor
adc
out
jb
cmp
jnp
push
and
mov
fsub
mov
imul
lods
repnz
dec
pop
pop
sub
push
adc
jns
outsb
mov
adc
lcall
push
add
sub
movsl
fsubrl
std
enter
inc
aam
js
mov
les
faddl
cli
or
divb
outsb
xchg
aad
dec
dec
movsb
inc
sub
aaa
popf
sbb
outsl
negb
adc
loopne
mov
fadds
frstor
mov
cwtl
es
ja
or
mov
lret
gs
sub
mov
adcl
pop
popa
shll
fdivp
push
aad
ret
cmp
gs
sti
out
movb
and
push
fnstenv
cmp
lds
mov
sbb
add
pusha
sahf
inc
stos
in
pop
nop
pushl
loop
rcrb
rcrl
xchg
mov
push
inc
bound
mov
pop
lds
lahf
add
lds
das
mov
test
sbb
lds
outsb
mov
pop
add
jg
push
sub
mov
popf
push
sub
adc
imul
sahf
popf
and
ja
add
stos
movsl
test
les
aam
scas
sbb
push
jle
addb
mov
add
sub
hlt
inc
and
pop
jecxz
jl
cltd
pusha
sub
cmp
xor
imul
shll
push
or
dec
cmp
pushf
xchg
xor
sub
mov
pop
lcall
lds
sbb
xor
dec
lods
enter
test
mov
xor
shrl
out
jbe
lret
enter
pop
mov
push
inc
fldl
into
js
repnz
dec
nop
mov
xchg
lahf
mov
mov
add
out
int3
in
je
mov
fcoml
sbb
jne
mov
xor
inc
pop
add
nopl
fiaddl
test
mov
adc
ds
repnz
es
clc
shlb
movsb
jg
push
and
add
sbb
mov
sbb
adc
cli
test
lods
pop
int3
sub
popf
jecxz
ss
cmpsb
subb
cmp
repnz
sub
scas
cli
rclb
arpl
test
xchg
je
test
adc
mov
and
cmp
sub
jns
mov
inc
inc
rcll
cmp
cmp
mov
mov
adc
lea
sbb
sbb
jmp
sub
je
fs
or
sbb
mov
ret
movb
std
insl
jmp
test
mov
insl
fisttpll
addr16
les
dec
jmp
push
pop
and
lods
jle
lcall
pop
mov
jne
repz
xor
lods
push
inc
jb
subb
pop
xchg
dec
xchg
xchg
ret
imul
add
inc
push
xor
aad
lea
jne
pop
notl
in
call
jbe
jnp
sbb
cwtl
sbb
push
arpl
shlb
fmull
push
or
adc
adc
sub
pop
push
loope
xchg
dec
andb
rcll
and
ds
in
test
test
jg
iret
iret
push
shl
push
jmp
test
test
rolb
imul
movsl
das
pop
mov
pop
imul
sbb
or
lea
adcl
xchg
inc
shr
dec
jno
ljmp
movsl
inc
insl
or
out
mov
cmp
pop
pusha
adc
rcr
adc
pop
push
or
lock
out
mov
push
adcl
cs
jmp
cmpsb
sub
mov
je
jp
mov
jmp
inc
jo
sbb
dec
int3
loopne
mov
push
and
outsl
call
lcall
add
daa
mov
cwtl
mov
ror
mov
or
cmp
cmpsl
and
shr
inc
jmp
xchg
sbb
jae
mov
xchg
pop
outsb
fbld
out
leave
fucomi
inc
lcall
cltd
adc
repz
aaa
cld
mov
stc
fsubs
add
jl
dec
hlt
fcomi
adc
out
jno
add
aam
cmp
stos
push
jp
mov
xor
add
jmp
stos
jnp
movsl
xchg
mov
movsl
bound
addr16
mov
adc
mov
cmp
mov
nop
ss
mov
pop
testb
sbbl
mov
repnz
mov
jecxz
inc
aaa
sbb
xor
ja
add
lahf
test
mov
jae
test
aad
add
outsl
lods
arpl
leave
mov
cmp
jne
xchg
les
jp
jecxz
cli
add
insl
or
xor
sti
jbe
jmp
dec
sub
jo
loopne
push
mov
jmp
add
sarb
stos
mov
mov
fstpl
orl
insl
adcl
fimull
insl
mov
jg
pusha
push
cld
push
push
mov
sub
mov
mov
rolb
pop
roll
jno
rolb
mov
icebp
ja
sbb
mov
jg
lret
ret
mov
adc
jle
hlt
sti
mov
pusha
inc
mov
and
xchg
test
push
lea
push
adc
inc
pop
mov
push
mov
test
outsb
inc
xchg
fsubrl
inc
jle
mov
aad
or
call
cmp
test
test
sub
rcr
je
push
outsb
icebp
mov
pop
test
inc
xor
into
sbb
or
es
adc
inc
fsubrl
stos
mov
enter
stos
ljmp
out
add
sbb
inc
js
add
sti
mov
int3
push
imul
in
pop
sarl
ret
sub
out
cs
rorl
fldt
jb
xchg
push
cmp
pop
mov
push
leave
and
in
ljmp
or
and
xchg
and
and
sbb
mov
adc
add
adc
adc
sbb
and
or
and
addr16
sti
pop
mov
push
add
jecxz
out
scas
out
je
mov
stos
nop
inc
mov
dec
or
and
pop
pop
icebp
in
call
mov
lods
pop
xchg
addb
jb
inc
hlt
add
into
mov
out
test
test
dec
cmp
inc
test
movsl
ljmp
or
subl
out
iret
data16
push
dec
xchg
xor
xchg
mov
jno
add
mov
lcall
and
iret
test
lret
mov
je
dec
out
shr
clc
lcall
mov
pop
shl
or
sbb
icebp
ret
xor
add
sbb
mov
and
test
pusha
mov
push
adc
inc
gs
rorb
sub
cmp
mov
movsb
sbb
push
sbb
and
test
mov
jecxz
push
imul
and
dec
daa
ss
out
imul
ljmp
idivl
cmpsb
mov
pop
push
mov
clc
add
mov
movsl
push
pop
xor
pushf
negl
mov
xchg
stc
inc
ss
mov
pop
xor
out
and
push
cwtl
inc
push
and
xchg
xlat
cmp
cmp
sbb
iret
cmp
fidivrl
pop
test
in
adc
adc
fsts
add
push
add
ret
std
pop
jbe
addr16
inc
xor
sbb
mov
rorb
inc
out
lock
aaa
lret
adc
push
stos
push
popf
push
xchg
jecxz
outsl
daa
mov
xor
dec
sub
mov
mov
or
xchg
xchg
xchg
data16
mov
sbb
jmp
inc
and
fistpll
dec
push
das
rcrl
and
pop
shrb
fs
movsb
aam
inc
xchg
lock
lock
in
jbe
add
add
mov
in
icebp
rclb
add
cmpsb
test
loope
cwtl
fstl
adcl
stc
js
jne
push
sub
mov
xchg
xchg
pushl
add
bound
outsl
xor
push
mov
jno
sahf
loop
mov
test
cmp
pop
xor
test
sbb
movsb
adc
outsl
mov
in
ss
sub
loopne
dec
scas
iret
xchg
inc
ljmp
add
add
out
sub
and
mov
add
push
dec
push
sbb
push
push
or
mov
jno
cmp
mov
xchg
xchg
lret
rclb
outsb
sbb
xor
sub
xchg
sub
test
jge
mov
jecxz
mov
out
call
loope
dec
add
mov
arpl
outsl
and
sbb
mov
and
xchg
push
fisttpl
and
xor
cmc
filds
stos
add
out
push
sbb
xor
mov
stc
fldenv
outsl
cld
push
add
push
lock
fldenv
mov
push
mov
push
push
pop
fcmove
cmc
aaa
sbb
loop
xchg
mov
lock
mov
adc
mov
dec
jge
je
pop
fmuls
jmp
pusha
jle
ljmp
dec
insb
out
movsl
lock
dec
fsubrp
xchg
in
rorb
es
ret
push
mov
jns
or
pop
and
push
lds
mov
mov
xor
movl
movsb
rorb
aam
sbb
xlat
shlb
push
adc
push
inc
fcoms
cs
movsl
jmp
ja
adc
inc
cmpsb
or
mov
out
adc
jg
icebp
jnp
push
pop
test
push
jmp
ret
sub
mov
cmp
mov
in
fiadds
cld
outsl
sar
clc
mov
pop
mov
dec
pop
fsubs
jg
sarb
je
out
dec
aam
sub
pop
pop
pop
dec
rclb
fwait
pop
sbb
inc
adc
push
repz
mov
call
jmp
arpl
or
fcmovnu
call
jo
sbb
in
in
test
subb
adcl
mov
or
add
jbe
aas
into
out
scas
sahf
or
sbb
leave
push
adc
push
cmpsl
pushf
lahf
adc
shll
jecxz
rdseed
setns
decl
cld
push
adc
pop
jae
jp
or
js
outsb
push
int
sbb
cltd
push
and
ljmp
pop
sahf
arpl
push
xchg
pop
es
add
and
cmp
ficoml
or
decl
mov
test
lret
xchg
cmp
mov
out
popa
jno
or
inc
std
popa
dec
nop
out
rorb
sub
enter
mov
xor
nop
mov
aaa
ljmp
cmp
push
fcmovne
adc
jp
rclb
adc
test
mov
jg
ret
jbe
mov
xchg
shll
cmpsb
mov
adc
sti
ds
jp
fnstsw
test
cmp
adc
das
push
mov
sbb
or
sub
inc
jb
sub
mov
insl
popl
cld
sbb
mov
mov
lds
xchg
or
mov
dec
mov
or
pop
cltd
sub
pop
jmp
pop
adc
mov
std
ret
int3
dec
fstps
movsb
shrl
movsb
dec
pushf
xchg
pop
fimull
hlt
das
andl
mov
enter
seto
and
das
rorl
inc
pop
jbe,pn
pop
cli
or
inc
lahf
inc
add
nop
addr16
jb
and
cld
rcrb
stc
aam
pop
mov
jg
dec
mov
add
mov
lret
scas
sbb
call
push
and
ljmp
mov
push
arpl
cmp
in
add
dec
push
and
cmp
mov
insl
stos
outsl
cmp
test
filds
pushl
sbb
jmp
in
or
jl
ljmp
inc
pop
push
lret
jbe
mov
xor
and
ljmp
mov
dec
or
dec
lods
push
inc
mov
dec
jle
js
std
dec
push
inc
xchg
dec
nop
pop
mov
rcr
mov
xor
test
fwait
pushf
incb
ss
pop
mov
rorl
fdivr
jmp
mov
orb
or
inc
mov
mov
divl
dec
test
inc
adc
pop
add
outsl
lcall
imul
dec
xor
addr16
sbb
push
push
sbb
add
icebp
jbe
loop
test
jmp
xor
jle
xchg
jae
mov
cs
scas
xor
testl
sub
inc
xchg
pop
xchg
xchg
lods
fistl
lea
insl
adc
dec
int3
pop
fsub
outsl
adcb
loopne
les
pop
add
loopne
mov
in
js
hlt
xorl
icebp
jns
andb
cmp
pop
cmp
cld
mov
cld
sub
sbb
jno
sarl
dec
and
sbb
push
sti
push
push
aaa
lea
push
adc
jp
outsl
or
jno
addb
mov
dec
out
test
sbbl
loop
mov
push
cmp
push
test
in
scas
imul
scas
aam
mov
and
sbb
sbb
push
push
pop
push
les
adc
outsl
syscall
stc
in
leave
cmp
mov
mov
pop
stos
adc
cld
mov
push
jecxz
push
ja
adc
ret
adc
adcb
adc
mov
mov
cmpl
scas
and
push
mov
lcall
test
pop
dec
sub
xchg
mov
imul
add
cmp
subl
stc
outsl
mov
repz
inc
xchg
test
out
lods
mov
clc
fistpll
push
lods
adc
nop
scas
xor
movsl
rclb
add
sbb
das
sbb
outsl
jg
es
xchg
xlat
dec
inc
pop
das
add
cmp
dec
inc
dec
icebp
mov
jmp
das
cld
call
mov
aad
das
fadds
mov
and
dec
pop
icebp
fistpll
cmpb
jl
and
mov
or
in
pusha
enter
out
adc
inc
inc
ret
sbb
popf
test
std
aam
and
insb
jecxz
jp
xlat
mov
pop
stos
loope
sti
dec
ret
aas
shlb
inc
add
mov
dec
jg
fbstp
mov
mov
add
mov
mov
jb
xor
lahf
push
mov
jne
hlt
cs
add
inc
rorl
clc
dec
xor
xor
jp
mov
and
fistpll
cwtl
nopl
xor
jno
into
dec
jbe
nop
popf
js
mov
mov
cmp
push
add
push
or
aaa
out
lock
mov
flds
movsl
scas
aam
faddp
or
mov
mov
insb
mov
loopne
stos
xchg
loopne
lea
shrl
and
pop
jg
arpl
mov
cmp
or
jg
mov
add
cmc
mov
mov
mov
fnstcw
mov
pop
mov
and
movsb
ja
mov
cmp
xor
xor
jg
mov
or
nop
dec
xor
or
insb
mov
loop
fstl
ret
outsl
insb
iret
outsb
fildl
xlat
adc
xchg
pop
inc
cs
sti
dec
sbb
cmp
hlt
jmp
out
addr16
mov
lods
add
jg
arpl
xchg
push
sub
and
inc
add
fst
sub
test
xchg
mov
jge
out
imul
pop
movsb
cmp
test
or
mov
push
imul
addr16
addb
in
fildll
sbb
nop
subb
inc
mov
das
inc
mov
inc
ss
jns
pop
push
mov
pop
clc
inc
shl
nop
testl
sbbl
ss
jbe
repnz
xchg
mov
sbb
mov
mov
lcall
in
xchg
xor
jmp
push
xchg
xchg
pop
mov
lret
out
inc
cmpsb
and
inc
cs
sbb
push
mov
pop
jle
stos
sub
clc
or
push
fnsave
sbb
inc
fistpl
outsl
cmp
js
fwait
ret
cmp
das
pop
repnz
outsl
jb
dec
xor
inc
test
ret
pop
sub
jle
lea
cmp
vpslld
aaa
sbbl
mov
adc
aam
cs
mov
fstpl
jecxz
ret
test
mov
mov
fcmovnu
lea
stc
or
xor
sub
cmc
or
std
xchg
pop
pop
add
ja
ja
rorb
fs
adc
mov
imul
push
enter
outsb
out
es
jge
sub
das
pop
sub
push
rclb
cwtl
movsb
xor
subl
mov
nop
arpl
jge
xchg
jp
pusha
popa
mov
xchg
cmpsl
sbb
push
lock
subb
jo
je
rorb
cli
call
outsb
and
dec
mov
or
movb
fbstp
add
loop
shll
add
rorl
mov
jne
cli
fwait
sub
inc
addl
mov
push
addr16
es
fcmovnb
frstor
dec
jp
xor
or
outsl
xor
jg
inc
adc
jp
outsl
movsb
test
mov
pop
and
aam
cmp
loope
pop
adc
rcr
cwtl
adc
mov
dec
cmp
dec
dec
ffree
jp
cld
push
mov
incl
in
divl
jo,pn
sub
hlt
push
pop
xor
add
sbb
adc
cmp
mov
add
mov
std
push
cli
cmc
mov
negb
pop
fiaddl
in
call
enter
xchg
cmovae
sbb
test
int3
pop
pop
adc
mov
mov
sarb
add
fists
pop
out
jno
push
jne
lret
fldt
mov
and
dec
pop
mov
sbb
fldenv
and
das
sbb
aad
inc
pop
xchg
fbstp
add
and
incl
fsubp
mov
jb
repz
push
mov
cmc
loopne
pop
mov
mov
cltd
pop
adc
roll
or
sbb
jno
std
pushl
inc
xor
enter
les
fists
mov
push
test
pop
jb
gs
sar
std
xor
pop
sub
jnp
and
stos
adc
adc
movsb
ja
or
rorb
shrb
xlat
iret
or
out
jo
stc
aad
shlb
push
outsb
or
dec
in
cltd
cltd
pop
inc
popf
mov
mov
lock
dec
inc
jge
clc
outsl
jge
bound
jl
fidivrl
inc
adc
push
test
jp
pusha
adc
jbe
call
xlat
popf
sub
or
jl
icebp
data16
dec
mov
data16
divl
add
rorb
mov
movsl
pop
mov
sbb
sbb
daa
outsl
push
sub
imul
mov
inc
mov
or
dec
mov
shlb
jg
fldl
add
jg
push
fisttps
cmp
jl
inc
jmp
nop
jl
sub
adc
inc
mov
jge
and
push
nop
sbb
ret
scas
xor
in
pop
xchg
bswap
push
repz
int
pushl
dec
adc
setno
jl
inc
and
ljmp
dec
xor
enter
mov
rolb
adc
xchg
arpl
mov
rcrb
outsl
mov
xchg
jge
add
mov
imul
lret
aaa
outsb
mov
adc
pop
push
mov
jg
test
testb
sub
lret
xchg
mov
or
outsl
enter
jnp
xchg
mov
sarl
test
lret
icebp
lcall
inc
push
xchg
jbe
insb
mov
xchg
fmull
dec
je
movsl
pop
rcll
js
jg
adc
jae
sysexit
jne
icebp
pop
outsl
sub
push
jge
mov
mov
mov
test
mov
sub
xlat
xor
mov
stc
sahf
cli
lea
mov
inc
jg
fs
and
cwtl
hlt
and
sbb
pop
lods
icebp
mov
pushf
jmp
out
pop
loop
fucomip
mov
push
mov
lea
imul
mov
ljmp
test
dec
jns
inc
inc
popa
pop
ds
xchg
sub
pop
and
adc
xor
maskmovq
notl
and
fwait
xchg
mov
mov
add
test
inc
mov
pop
and
and
dec
inc
clc
cmc
shrl
insb
ret
and
mov
std
sbb
jle
dec
test
cmp
or
ret
jns
lret
cld
sbb
in
xor
mov
mov
inc
jg
lods
xor
ret
scas
fidivs
mov
cmc
mov
xor
xor
xor
les
or
jle
hlt
jno
and
or
mov
aam
addl
andb
pop
mov
pop
stos
pop
cs
sbb
adc
pop
or
xchg
lods
jnp
fwait
fwait
inc
clc
scas
mov
les
pop
ljmp
push
jbe
shll
outsl
aad
pop
sub
ja
int
popf
sbb
mov
sbb
push
and
xor
sub
imulb
adc
and
sbb
popa
je
sbb
sbb
ret
cmp
pop
lds
cmpsb
rcr
mov
lds
dec
mov
inc
sub
fdivl
enter
or
mov
jg
stc
mov
xchg
mov
push
iret
push
cmc
inc
mov
std
stos
inc
adc
clc
fildll
or
fs
data16
jae
insb
mov
or
jnp
dec
cld
and
out
shlb
or
push
mov
icebp
cmp
inc
into
pop
in
jb
ljmp
mov
fistpll
sub
or
ret
push
movsb
adc
cmp
or
xor
ret
xorl
imul
mov
test
arpl
adc
mov
int3
mov
and
fs
outsb
jl
std
add
sub
push
in
sti
lea
movsb
test
pop
fs
mov
add
mov
jecxz
repz
mov
push
lods
cld
sub
mov
test
and
daa
gs
sub
pushf
mov
push
inc
sbb
in
fcoml
imul
insl
mov
xchg
mov
fisttps
push
call
xor
ret
or
adc
push
das
push
cmpsl
in
inc
push
or
out
inc
sbb
and
repz
jg
or
adc
aaa
fsubs
icebp
xchg
mov
cmp
insl
test
arpl
adc
popa
add
sub
nop
nop
sub
scas
outsl
cmp
push
loop
and
jae
push
dec
push
pop
pop
cmp
fiaddl
ret
inc
aaa
mov
xchg
xchg
push
das
int
mov
add
iret
notb
cltd
imul
or
shlb
scas
pusha
stos
shr
jge
aad
dec
fbld
outsl
push
outsl
xor
movsl
and
loope
fisubrl
add
dec
pop
xchg
xor
xchg
nop
push
mov
adc
fwait
roll
jno
cmp
test
mov
ret
jo
mov
cmc
dec
fistpll
add
xchg
adc
aaa
add
test
mov
xchg
sti
movl
xor
fs
mov
pop
cld
jns
test
sbb
jo
cmc
sar
pop
sbb
imul
js
or
lods
neg
mov
add
jl
push
call
stos
adc
jmp
or
jg
pushf
push
stos
inc
pop
sub
dec
add
jp
mov
loope
push
imul
add
into
xor
sarb
fiaddl
mov
xchg
sbb
xchg
lods
pop
clc
pop
icebp
fcmovne
mov
pop
sub
lock
les
xchg
insb
xchg
dec
aam
lcall
mov
pop
incl
ja
pop
lret
loop
mov
jo
cmp
out
jl
dec
add
lock
cld
inc
in
or
stos
mov
incb
inc
lock
mov
xchg
lret
frstor
xchg
decl
pushf
sub
push
nop
orb
mov
adc
add
jmp
or
inc
sbb
jno
xchg
inc
sub
and
hlt
rcll
xchg
push
lods
pushf
sbb
lock
movsl
sub
mov
decb
addr16
nop
orb
and
les
mov
ret
loopne
sbb
aaa
test
push
mov
insl
push
or
aas
nop
loopne
inc
std
inc
push
and
mov
mov
push
push
ja
mov
out
nop
rcrl
mov
push
shll
movsl
add
inc
mov
cmp
outsl
test
out
out
mov
jmp
xchg
push
xor
push
mov
adc
xchg
mov
push
fdivl
ret
out
jmp
sbb
xor
sbb
xchg
decb
lret
icebp
shlb
or
notb
icebp
sbb
push
pop
xchg
dec
and
mov
lods
lods
dec
fldt
test
jbe
inc
pop
cmp
mov
rorb
pushf
jo
inc
pusha
mov
rcr
test
push
jns
mov
push
jne
shl
mov
or
pop
les
rcl
or
fimuls
or
mov
rcll
mov
aaa
dec
lahf
pop
mov
aad
pop
mov
xchg
push
pop
and
xchg
sbb
pushl
ss
insl
aad
repz
cli
outsl
inc
xchg
add
repz
ds
inc
xchg
out
pop
pop
jp
rorb
inc
outsb
xor
inc
test
sbb
std
ret
jge
sub
inc
loope
cmc
out
mov
pop
out
add
dec
cwtl
cmp
insl
or
adc
lahf
push
jg
imul
movsb
dec
sahf
xchg
cwtl
outsb
add
and
rorl
push
or
jmp
sbb
lods
pop
es
notb
or
add
push
xchg
xchg
nop
mov
pop
mov
cld
insl
loope
mov
shr
mov
inc
cmc
mov
mov
pop
dec
mov
addb
inc
fbstp
mov
loopne
popf
in
mov
aaa
aad
adc
cmp
call
mov
push
fistps
sub
add
xchg
lret
dec
insl
stos
push
sub
ror
fdivrp
dec
push
call
pop
adc
mov
push
or
fdiv
adc
aas
outsl
mov
pop
mov
jb
inc
les
sbb
orb
lds
into
shlb
pushl
out
imul
outsl
sbb
in
jecxz
sbb
aam
or
inc
notl
sarl
call
stc
push
test
out
adc
sarl
int3
loopne
call
faddl
pop
mov
jo
les
bound
mov
call
in
lea
sarl
xor
sub
aaa
sbb
or
aad
scas
stos
inc
xchg
in
es
adc
and
pop
xor
sbb
test
pushl
sbb
dec
pop
xor
mov
mov
fildl
pop
mov
dec
mov
ret
dec
xor
lea
mov
adc
clc
addl
xor
lcall
pop
jb
xlat
or
or
mov
into
pop
fs
xchg
cmp
and
or
mov
scas
js
scas
enter
push
dec
lcall
pop
mov
dec
sub
push
outsb
sahf
add
cmpsl
out
cli
outsl
ljmp
pop
add
or
fisttps
pusha
pop
xchg
iret
out
add
jno
mov
add
in
mov
and
addl
lea
clc
test
jg
jb
sbb
stos
dec
cmp
je
adc
loopne
std
lea
imul
or
xchg
fisttpl
push
movsb
fadds
dec
push
mov
push
xchg
pop
add
mov
mov
fs
and
jg
fsubr
stos
cli
fldt
jns
and
jo
movsb
adc
mov
aam
ss
mov
pop
mov
jo
xchg
scas
pop
fs
pop
and
push
adc
jge
into
mov
add
mov
push
push
outsl
cmc
stos
movsb
in
ljmp
push
addr16
les
mov
lret
cltd
xchg
out
inc
inc
sub
or
sbb
fidivs
push
push
dec
outsb
adc
mov
rolb
in
fs
movsb
inc
xchg
mov
out
inc
pop
insl
fsubr
mov
or
adc
shll
ljmp
sbb
cli
mov
orb
iret
fistpl
jle
mov
and
nop
pop
std
aaa
mov
fidivrs
scas
sub
mov
hlt
sbb
lret
sahf
in
sbb
xor
mov
shrb
xor
subb
adc
inc
pop
in
mov
aam
pop
mov
jge
mov
mov
loopne
stc
lea
aam
push
cmpsl
inc
lcall
cli
push
ja
dec
mov
fldl
ds
lret
mov
bound
loope
cli
push
cmp
das
mov
cmp
stos
js
loope
xchg
jo
mov
movsb
call
dec
imulb
sub
shrb
push
outsl
fildll
push
inc
inc
mov
inc
sbbl
adc
pop
movsb
mov
test
push
enter
and
sahf
es
adc
cmpsl
inc
jnp
loop
inc
bound
mov
hlt
decl
cs
xor
dec
insl
mov
adc
or
push
rorb
mov
cvtps2pi
loop
adc
decl
cmc
lods
xchg
push
jl
daa
mov
sbb
insl
repnz
lods
push
in
jecxz
and
shl
or
test
push
cmpsb
das
fnsave
and
mov
dec
and
pop
push
lahf
push
hlt
mov
xor
filds
aas
sahf
nop
icebp
add
sbb
je
mov
adc
mov
cmp
imul
mov
pop
push
pop
mov
hlt
xchg
jle
push
rol
call
cmpl
das
mov
in
bound
xor
pop
and
das
movsb
les
dec
inc
sbb
or
ret
loope
xchg
jl
mov
mov
cld
es
mov
pusha
xchg
outsl
shl
mov
cwtl
out
cli
test
xor
pop
jge,pn
push
je
cmp
pop
je
mov
inc
mov
repnz
and
cmp
dec
stc
pop
js
inc
mov
push
add
sbb
lea
lock
and
mov
pushf
pop
adc
outsb
out
dec
adc
imul
in
dec
cld
mov
sbb
lock
test
push
fdivl
filds
xchg
mov
fwait
lock
mov
jl
dec
in
mov
outsl
mov
cmp
mov
not
adc
icebp
pop
xchg
ljmp
jno
lea
subb
pop
push
ljmp
clc
in
mov
shlb
mov
movsl
lret
mov
mov
leave
into
jle
sbb
aas
mov
nop
push
sbb
xor
or
sbb
jg
pop
aaa
pop
cmp
mov
aas
test
adc
or
mov
sti
push
les
push
insb
outsl
rorb
neg
in
pop
test
xchg
inc
jmp
xor
add
call
in
icebp
dec
or
rcrl
test
je
fidivs
sbb
adc
les
lds
lods
cli
pop
dec
xchg
clc
lahf
sub
lcall
not
ja
cmpsb
jnp
ret
inc
sub
out
dec
xchg
pop
push
mov
mov
mov
push
cmp
xor
das
xchg
and
ja
cmp
mov
je
inc
dec
shll
jl
jnp
stos
repnz
push
lea
sbb
in
fisttps
mov
and
addr16
ds
leave
cmp
loope
jne
fdivrp
test
lods
cltd
ficoml
push
xchg
inc
or
out
xchg
mov
andb
push
out
daa
and
cmp
xchg
sub
mov
push
and
cmpl
cmpsl
aaa
dec
jecxz
pop
pop
jg
test
out
shl
mov
data16
adc
lahf
hlt
pop
sbb
jmp
or
mov
in
xchg
push
dec
or
adc
mov
repz
mov
mov
fiadds
jo
sbb
push
out
lret
mov
jle
inc
mov
xor
mov
pop
rorl
test
or
xorb
or
incl
pop
aaa
fmulp
pop
ds
jecxz
xchg
pop
sub
movsl
cmp
mov
cltd
dec
mov
fdivl
cld
pushl
pop
inc
inc
stc
int3
xor
pop
pop
mov
popa
lret
push
call
gs
and
nop
orl
xchg
daa
in
lcall
xchg
aaa
sub
jnp
test
rorb
or
sub
jno
rclb
std
push
and
sub
or
es
or
popf
sbb
pusha
imul
je
push
call
add
add
lods
xor
sub
das
filds
lcall
out
push
outsl
pop
jp
and
add
xor
inc
out
mov
mov
rep
inc
pop
aaa
push
incb
mov
push
lret
adc
xchg
das
mov
mov
cld
testb
loope
call
dec
lods
nop
cmp
mov
pop
pop
mov
ficoml
mull
jle
adcl
xchg
or
pop
imul
stos
add
hlt
adc
mov
mov
xlat
or
call
mov
cmc
test
leave
insl
and
nop
sub
lods
sbb
inc
lahf
sub
and
and
mov
lds
sub
daa
loopne
adc
out
fisubrl
lods
arpl
sbb
fidivrs
push
mov
cld
sub
aam
push
mov
inc
mov
rcl
cmp
jae
add
aad
cld
xor
mov
bound
lahf
pop
sbb
sub
repz
int
call
xlat
lds
jbe
cmp
pop
shlb
and
fsubl
sub
sbb
pop
sub
adc
repz
in
int3
and
push
adc
adc
lret
mov
pop
repz
aad
cli
xor
push
aas
adc
int3
ret
and
or
dec
cmp
xchg
je
in
xchg
ja
mov
fdivrs
out
loope
adcb
xor
sbb
and
cmp
jne
push
or
ljmp
adc
in
insl
std
jbe
jo
orl
and
mov
fisttpl
jne
mov
les
dec
dec
adc
mov
in
add
es
jmp
rol
mov
pop
dec
fbstp
push
mov
sti
sarb
mov
sub
and
jg
in
sar
dec
movsb
jne
pusha
test
in
mov
and
mov
lea
je
pop
sub
mov
or
loopne
and
push
jmp
pop
sbb
sbb
jb
jno
cmpsb
jns
test
arpl
leave
jns
jb
jae
push
leave
pop
inc
jge
adc
cmp
lods
adc
test
fs
mov
jns
push
shrb
pop
adc
sar
lds
cmpsb
pop
inc
dec
or
pop
xchg
ret
outsl
cmpb
js
int
mov
aad
cs
inc
push
xorl
mov
or
popf
inc
flds
pop
clc
or
cmp
sub
loope
jmp
mov
pop
leave
push
inc
pop
xor
add
xchg
sub
les
pop
mov
mov
add
adc
cld
in
das
adc
ljmp
addl
inc
push
inc
cmp
xchg
push
insl
push
xor
aas
je
sarb
loop
pop
sub
es
xor
fadds
in
stc
and
pop
shlb
push
mov
dec
pusha
xchg
push
mov
sti
jmp
js
sbb
mov
pop
inc
mov
dec
js
cli
push
loopne
sub
adc
push
adc
push
sbb
push
lcall
je
outsb
cmp
das
fstpl
mov
and
negl
jl
mov
test
movsl
call
decl
pop
out
insb
mov
fs
sub
add
aaa
std
decl
jbe
lock
dec
cmc
push
mov
ret
pop
and
cmp
pushf
push
daa
xchg
push
mov
push
dec
add
sub
adc
xor
hlt
sbb
in
push
or
pop
or
dec
shlb
pop
outsb
jg
or
cmp
cmp
add
lds
mov
mov
arpl
ja
or
call
rcl
sbb
and
dec
hlt
jecxz
cltd
and
inc
aad
mov
or
fisubrl
dec
pop
push
or
icebp
decl
out
jl
xor
stos
dec
cs
call
es
rcrl
pop
rorl
fildl
xor
out
jmp
push
das
sub
push
jge
push
push
fsubr
or
mov
adc
leave
test
int3
sbb
pop
jo
outsl
push
push
xor
jns
fbstp
mov
jp
pop
adc
sub
notl
cmp
or
jl
sbb
add
cmp
movsb
js
xchg
shlb
aas
cwtl
and
mov
xlat
sti
mov
jb
in
aam
out
push
out
rorl
movsl
mov
sub
xchg
fisubs
or
xchg
and
pop
cli
decl
in
lods
add
inc
mov
xlat
lahf
xchg
insb
xor
sub
pop
leave
jmp
xchg
mov
fdivs
adc
inc
orl
loopne
dec
loope
push
cmp
push
js
jne
pop
or
int
mov
jmp
insl
cmc
pop
fsubs
les
jne
cmp
xchg
into
mov
mov
add
cmpsb
in
test
mov
mov
cmp
lret
mov
jnp
nop
inc
adc
inc
or
sub
call
imul
mov
mov
and
mov
dec
lods
adc
movsb
push
loopne
pop
test
mov
fldenv
xor
ss
movb
adc
movsl
pop
subb
or
jle
test
mov
nop
mov
lods
scas
cmpsl
inc
inc
pop
lods
xchg
and
pop
jle
pop
xor
mov
sub
adc
in
movsl
outsl
cld
jg
add
adc
sbb
ja
dec
cli
jp
je
subb
fbstp
in
push
mov
push
and
scas
fsubrl
movsl
scas
mov
xor
mov
push
es
push
in
sahf
sbb
test
int
xchg
lahf
mov
and
jl
imul
hlt
std
pop
dec
jb
std
push
cld
scas
negb
cmp
adc
pushf
arpl
leave
pop
mov
orb
mov
inc
and
lods
lds
xchg
pop
mov
ljmp
call
xchg
leavew
or
insl
jl
add
pop
gs
cmc
mov
loop
data16
pop
enter
sub
mov
mov
test
loope
push
xchg
orl
and
jns
icebp
push
addr16
or
pop
pop
and
stc
lods
std
cmpsb
ret
inc
imul
outsb
les
pop
stc
aas
scas
or
cmovno
mov
mov
mov
insb
fdivs
mov
jns
jno
movsl
outsl
stos
outsl
js
lea
mov
add
mulb
sbb
pop
outsb
jnp
push
jl
mov
les
and
mov
sub
xor
mov
xchg
insb
push
popa
sbb
jnp
fbld
push
test
or
rorb
int
fstpl
hlt
test
aas
pop
dec
dec
adc
cmpb
faddp
pop
mov
and
adcb
xor
adcl
cmp
mov
pusha
mov
in
aad
cmp
adc
jns
sbb
test
outsl
stos
clc
testb
pop
xor
cmp
ret
fs
in
imul
mov
jecxz
clc
cmp
or
xor
push
int3
sub
sbb
shll
push
dec
jb
addr16
and
mov
mov
popa
xlat
push
mov
test
std
cmp
mov
push
jle
push
jns
leave
xchg
shll
cld
add
sub
shll
imul
or
xor
mov
sbb
das
aad
sbb
inc
cltd
xor
lds
cld
mov
jns
push
and
fcomps
dec
popa
insl
jnp
fst
jbe
out
xchg
adc
fsubrl
or
movb
idivb
xchg
sub
lock
add
pushl
pop
test
repz
push
filds
mov
jge
imul
or
inc
mov
imul
sbbl
test
inc
xchg
addr16
cmp
jg
out
cwtl
xchg
push
test
lcall
ret
inc
xor
or
addr16
and
insb
xor
push
mov
dec
inc
xchg
adc
aas
inc
cmp
or
cmp
lods
test
into
mov
inc
cmp
cmp
push
cmpsb
cmp
ficomps
jle
pop
adc
mov
loop
mov
and
sbb
in
repnz
or
mov
call
negl
or
nop
test
mov
xchg
pop
enter
pop
sbbl
push
mov
mov
mov
dec
ds
xchg
push
lods
adc
mov
loop,pn
and
cmpb
movsl
ljmp
push
test
or
push
aad
inc
sub
sub
jge
sbb
add
stc
pop
fiaddl
pop
mov
mov
xchg
inc
gs
stos
insl
imul
mov
orl
xlat
cmp
jne
fstpt
mov
sti
dec
out
stos
jnp
xor
adc
out
out
call
cs
outsl
or
repnz
test
jmp
fwait
add
mov
out
add
xor
xor
roll
jns
or
fcomip
lcall
push
aas
adc
cltd
cmp
mov
test
ficompl
pop
lahf
shrl
stc
push
adc
pusha
call
sti
mov
jl
les
outsl
lret
sbb
out
sub
push
fnsave
sub
rorl
ja
or
neg
sub
movsb
sbb
push
sub
imul
dec
push
out
sbb
mov
pop
mov
out
adc
mov
xchg
jns
jle
std
mov
test
out
shrb
fcoms
shll
mul
push
out
loopne
push
mov
mov
pusha
lret
lods
or
mov
call
cmc
mov
arpl
add
sbb
ss
cs
dec
sar
cmpsl
rcrb
jo
std
and
mov
pop
nop
ljmp
ljmp
and
adc
and
icebp
ljmp
sub
push
neg
popf
mov
stc
pop
lock
imul
mov
stc
cltd
lret
sbb
ljmp
pusha
and
and
sub
bound
fbld
loope
xlat
stos
push
dec
test
out
ret
inc
rolb
or
int3
fcmovnu
add
mov
cmp
pop
imul
cmovp
icebp
sbb
and
dec
lds
xor
pop
mov
dec
loop
in
ret
ret
lds
orb
out
ds
adc
lahf
mov
add
roll
cmpb
stos
out
add
roll
inc
icebp
btr
sub
pushf
push
imul
pop
dec
sub
lock
dec
inc
arpl
insl
int
popf
inc
pop
leave
inc
stos
mov
stos
mov
jge
xchg
sub
jle
enter
aad
ljmp
sub
sub
xor
or
cmp
sbb
push
cli
and
and
fmull
mov
dec
push
sbb
das
aam
jecxz
cmp
call
inc
mov
xor
dec
fimuls
test
shlb
outsb
mov
jb
mov
psraw
fisttpl
orl
cli
es
sarl
fistpl
push
setno
push
adc
std
or
ljmp
insl
or
insl
sti
mov
orl
ja
sahf
jp
mov
jmp
jmp
push
hlt
daa
and
js
mov
dec
jbe
dec
add
decl
sub
pop
adc
fisubl
mov
mov
mov
out
bndstx
daa
outsb
stos
xchg
and
insl
push
nop
push
iret
push
sbb
loop
pusha
jb
int3
push
cmpsb
cmp
insb
out
pop
dec
mov
sarb
jo
pop
pushl
dec
scas
fwait
rcll
movsb
fisubs
clc
mov
cmc
ljmp
std
add
fisubrs
and
jns
or
cmp
and
fstpt
add
rclb
mov
inc
ret
test
ret
adc
mov
mov
das
int
fdivrs
fcoml
les
popf
inc
dec
fdivrl
inc
pop
int3
je
inc
call
jnp
mov
push
or
add
aam
subb
xchg
les
mov
or
and
sub
dec
jp
push
xchg
pop
mov
out
inc
lods
loop
incl
adc
ds
movb
add
lods
jae
shl
lods
ljmp
sbb
mov
inc
insb
cmc
cmp
xor
icebp
das
aad
imull
testl
adc
dec
mov
xor
addb
xor
js
jg
femms
jl
and
mov
sbb
push
clc
test
addl
sub
push
xchg
mov
subl
pop
mov
test
sarb
add
cmp
mov
jl
add
mov
jmp
cli
hlt
cltd
push
shrb
cld
xchg
push
adc
rolb
movsl
adc
jmp
subl
sub
fildll
mov
cmpsl
push
js
nop
lahf
lcall
and
sub
adc
sarb
call
imul
out
inc
add
inc
sbb
sahf
rorb
fnstenv
das
icebp
pop
stos
fbld
scas
call
insb
xchg
mov
cmpb
pop
mov
pop
out
jnp
mov
data16
lret
mov
xor
push
leave
pop
hlt
cmp
mov
dec
jge
out
dec
sub
movl
pop
inc
loope
iret
jl
aad
jmp
cmp
jmp
test
cmp
jns
fs
decb
jg
aas
lret
jne
sub
ficoml
inc
mov
out
clc
repnz
and
fiadds
adc
and
lea
decl
sbb
mov
sbb
mov
shll
sbb
cmp
in
push
add
cmc
gs
testb
mov
sbb
subb
inc
and
test
call
outsl
mov
loop
leave
popf
sub
xchg
adcb
sti
adc
stos
sub
cs
sbbl
cld
jno
jno
daa
sahf
imul
and
scas
adc
cmc
mov
jno
test
add
dec
cmp
mov
notl
je
lods
into
cmc
shr
cmp
adc
mov
out
push
dec
jmp
decl
xchg
xchg
xor
mov
scas
ljmp
add
sti
call
cs
cmp
inc
and
adc
ficompl
sub
push
add
insl
test
sarb
pop
sub
pop
cmc
mov
inc
sbb
in
sti
adc
inc
pusha
cmc
test
decb
fstpl
test
lret
shl
push
fdivr
add
iret
and
mov
pop
sub
add
scas
inc
mov
add
and
mov
xchg
lcall
mov
ljmp
nop
sbb
aad
outsl
rolb
push
and
or
shrl
cmp
inc
sbb
insb
push
add
test
fisubrs
push
stc
mov
push
xchg
rclb
mov
stos
jge
mov
jnp
test
mov
push
cmpl
data16
lcall
add
mov
xor
and
push
or
inc
mov
cmp
inc
adcl
imul
xchg
xchg
outsl
mov
adc
push
mov
stos
ror
out
push
and
mov
test
outsl
dec
ds
mov
sbb
mov
sbb
xor
mov
leave
adc
push
ret
in
jg
adc
add
shrl
les
adc
cmp
mov
cld
or
push
jne
mov
cltd
push
or
rolb
cld
mov
jo
push
jo
sbb
adc
add
push
dec
xchg
mov
aam
xor
cltd
xlat
lds
jl
lret
inc
jb
mov
leave
add
add
cmpsl
clc
iret
ljmp
repz
sbb
xchg
adc
jo
pop
cmc
testb
and
jb
out
mov
push
lret
mov
mov
add
jecxz
adc
push
clc
cmp
popa
int3
sbb
dec
icebp
inc
sti
and
jnp
outsl
fbld
aaa
adc
ljmp
add
push
jno
fmull
inc
mov
shll
add
inc
mov
test
movsb
lds
xor
pop
pusha
icebp
les
call
pop
sarl
fcomps
fdivrl
sar
add
cmpsl
cli
push
call
out
push
push
fisttpl
js
lock
movsl
stos
jp
hlt
flds
hlt
jbe
or
sbb
int
sub
push
push
pop
push
lods
imulb
cmpsl
mov
xorb
call
lods
fildl
jnp
mov
jo
clc
sarb
popf
loopne
or
cmp
push
fcom
out
cmpsl
push
cmp
insl
adc
xchg
leave
mov
push
sbb
sti
xchg
insb
sti
testb
pusha
xchg
cmp
fwait
cmp
mov
add
or
sti
outsb
or
js
shlb
cwtl
cs
lea
je
cmpb
lods
imul
xchg
push
sub
aad
fdivp
ret
out
mov
xor
add
push
mov
mov
repz
mov
insl
mov
js
or
inc
push
or
jo
sahf
push
xor
pop
mov
movsb
subb
push
cli
mov
ja
xchg
loop
addr16
hlt
and
adc
repz
out
das
push
jbe
xchg
push
mov
fwait
dec
sbb
sbbb
cmp
inc
aas
xor
ficompl
inc
mov
je
inc
mov
test
js
sbb
jl
or
xchg
mov
jle
or
sub
mov
sub
adc
mov
mov
inc
hlt
xor
addr16
or
test
xchg
repnz
shlb
mov
movsl
mov
cmpsl
and
js
sbb
js
int
js
mov
dec
dec
ljmp
sub
ja
aaa
push
ficoml
xchg
cmc
lea
scas
aaa
mov
add
das
sbb
jmp
lret
call
xchg
sahf
sbb
das
push
mov
sbbb
and
jbe
fucomp
mov
iret
lods
nop
loopne
xor
jmp
xchg
jp
xor
imul
inc
xchg
mov
decl
sti
push
rcrb
xchg
and
sbbl
stos
or
and
inc
adcb
ds
mov
pop
mov
adc
mov
notb
xchg
call
shl
mov
and
mov
mov
sub
mov
outsl
push
adc
xchg
xor
xor
dec
mov
mov
into
mov
js
xchg
jbe
xchg
xchg
loop
xchg
fstpl
xlat
pop
cltd
leave
mov
sti
mov
cltd
mov
fdivs
ja
cmp
test
jae
push
into
pusha
push
sub
adc
mov
push
push
in
mov
cmp
sbb
or
clc
stos
inc
mov
sbb
add
push
adc
popa
dec
or
mov
jg
jecxz
ja
std
cmp
loop
pop
push
sbb
shr
mov
mov
push
aad
sbb
jl
push
in
movsl
ret
cmp
lret
hlt
sub
adc
mov
loopne
in
mov
jno
movsl
sbb
daa
adc
mov
andb
aaa
hlt
jmp
loop
xchg
and
fbstp
jmp
dec
mov
cli
sbb
fistpl
ret
leave
dec
add
adc
xor
jo
xor
push
inc
arpl
jnp
cs
pop
movsb
or
xlat
ds
xor
adc
mov
fs
dec
jbe
andb
cmpsb
xor
jae
jns
dec
std
dec
add
or
jnp
add
jle
mov
inc
out
iret
jge
lock
add
cmp
mov
xchg
add
mov
adc
std
pop
lds
push
lods
xchg
xchg
pop
bound
xor
jecxz
push
shl
insl
pop
scas
xchg
scas
call
and
fisttpl
sahf
or
aad
xchg
mov
repz
pop
adc
xor
lods
push
push
pop
js
jnp
mov
rcr
fs
dec
mov
lahf
cmp
and
es
subb
leave
xchg
or
adc
and
mov
push
jmp
or
inc
fadds
add
jo
fucomip
fistpl
mov
mov
rep
loopne
jg
outsb
fisttps
int
adc
push
testl
push
mov
pop
inc
inc
mov
push
sarl
lods
pop
push
adc
sbb
test
jmp
lcall
insl
bound
adc
add
movl
mov
lret
pop
push
scas
jp
pop
cmpb
mov
pushf
mov
clc
push
or
shlb
add
imul
push
push
cwtl
into
jbe
fcoms
mov
aam
or
js
or
mov
push
dec
cli
inc
sahf
xchg
sub
mov
or
cltd
mov
icebp
test
ret
out
push
jne
addl
and
out
add
sbb
dec
and
xor
jno
mov
aam
pop
adc
pop
add
push
cmp
adc
cmp
cli
or
xchg
xchg
mov
nop
xor
or
xchg
leave
popf
stos
or
subb
fwait
insb
sub
jo
mov
jge
popa
ja
or
decb
pop
ja
mov
insl
imul
mov
js
fidivs
xor
dec
lds
sbb
insl
adc
test
inc
lcall
pop
pop
push
in
cmp
repnz
mov
in
dec
mov
popa
mov
xlat
scas
mov
xchg
jge
loope
cmp
mov
daa
push
imul
out
dec
and
add
lea
cmc
jecxz
xchg
sbb
add
cmp
add
aaa
fdivl
jns
push
cmp
shll
mov
xor
add
pop
jo
push
iret
xorl
fucomip
call
fmuls
or
movsb
in
sbb
out
and
insl
icebp
or
daa
pop
cwtl
add
inc
or
addr16
aam
adc
andl
fisttpll
rcl
add
or
mov
or
and
std
leave
gs
or
mov
jg
mov
jbe
mov
adc
testb
inc
call
mov
adc
js
add
dec
add
and
ss
fidivs
cmp
xor
inc
shrb
or
fadds
and
add
xlat
xchg
xor
mov
les
pop
or
xor
jbe
xlat
inc
aam
das
mov
cltd
add
inc
flds
sbb
data16
fsubrp
incb
mov
pop
inc
rolb
negl
fildll
cmp
fldt
or
test
das
cltd
mov
lret
mov
sbb
sub
xchg
sub
cmc
jno
je
jne
shr
cmpsl
mov
jmp
sub
sub
dec
loop
fidivs
mov
or
mov
inc
les
ret
mov
outsl
nop
xchg
lret
and
loopne
jnp
push
fnsave
lods
inc
ret
xor
add
frstor
clc
test
outsl
cld
and
or
dec
mov
lea
xchg
add
sub
in
sbb
adcl
adc
cs
pop
rcrl
incl
rolb
sbb
jne
jmp
mov
pusha
dec
mov
add
or
inc
cs
push
mov
add
and
lock
dec
dec
xchg
leave
or
fcoms
clc
dec
stos
jp
inc
addb
jle
or
aas
jnp
mov
sbbl
aaa
fsubrl
sub
jnp
jge
aam
outsl
in
pop
inc
push
ljmp
rcll
push
shlb
xchg
lret
iret
lods
mov
aam
ret
mov
sub
int
mov
mov
xor
repz
xchg
in
mov
adc
xlat
stos
es
sahf
inc
pop
cmp
cld
cmpsb
pop
xchg
sbb
movsb
mov
scas
or
fistpl
icebp
pop
jg
popf
lods
sub
pop
cld
aas
mov
mov
mov
fidivrs
xchg
xchg
sbb
iret
xor
push
jno
les
cmpb
roll
sub
cld
les
cmp
daa
nop
lock
test
sbb
pop
inc
out
orb
and
pop
sbb
adc
insb
call
inc
jns
mov
std
fstpl
ljmp
arpl
mov
push
ror
out
es
add
sbb
pop
sar
adcl
xor
frstor
xor
inc
adc
cwtl
sar
cmp
adc
in
das
aam
in
sub
and
mov
out
mov
inc
xor
and
pop
push
fdivrl
mov
inc
out
loopne
add
mov
es
loopne
xchg
pop
adc
movsb
pop
fcoml
aad
inc
ficoms
loop
and
add
jnp
pop
outsb
inc
loopne
pop
arpl
jl
call
sbb
jp
push
inc
fwait
icebp
inc
push
xchg
or
inc
insl
test
mov
cmp
jb
mov
outsl
lods
clc
test
leave
inc
lods
out
out
add
pusha
inc
mov
mov
fidivrs
push
mov
cld
add
push
enter
pop
inc
pop
stos
out
inc
cmp
and
jmp
lock
dec
pop
sar
push
or
or
dec
loopne
inc
or
in
sbb
fisubs
sub
insb
ja
push
jge
cmc
aam
aaa
pop
js
xorl
jg
add
flds
stos
sbb
xor
push
mov
jle
clc
rsqrtps
adc
popa
fidivrs
pop
or
outsl
mov
add
fcom
inc
or
sbbb
fs
add
daa
xor
xchg
arpl
push
or
or
or
sub
jecxz
mov
xchg
mov
dec
stos
pop
fldl
inc
or
ljmp
xor
jmp
jl
sub
lcall
loope
xchg
lahf
lea
rcll
lcall
inc
xchg
cwtl
je
add
pusha
repz
sbb
stos
imul
jne
inc
sub
addb
popf
adc
mov
dec
into
mov
xor
mov
mov
mov
xor
fwait
pop
and
or
ljmp
cmp
jb
call
lcall
push
xor
sub
pop
fcoms
cld
jae
aas
push
jp
cmp
sub
sbb
rcrb
les
pop
adc
or
push
dec
ficoms
xchg
push
add
addr16
rclb
jnp
cli
mov
fstp
inc
cmp
fnstsw
mov
pop
cwtl
xchg
push
dec
mov
mov
xor
scas
mov
xlat
jecxz
fwait
or
sti
dec
and
lods
jg
in
sti
or
js
mov
mov
xor
repnz
jp
aam
pop
or
cmc
xchg
out
sub
aaa
addr16
xchg
lods
push
sub
sbb
mov
ss
roll
and
xchg
hlt
xor
mov
mov
movntq
push
pop
pop
push
jb
clc
out
mov
fs
dec
sbb
gs
sbb
push
inc
insb
xor
pop
push
cld
jecxz
cmpsl
hlt
sbb
adc
adc
or
lcall
or
fistpll
ret
inc
mov
sub
dec
lahf
test
jo
lcall
adc
mov
sub
int3
test
imul
xchg
cmp
adcb
jg
negb
outsl
sub
das
mov
mov
insl
cmp
imul
sub
outsl
inc
sub
fiadds
push
and
iret
rorl
rcll
sub
popf
fnsave
scas
mov
ret
movl
insl
andb
sub
mov
jns
inc
inc
aas
hlt
addl
jo
sub
mov
lea
shr
out
aam
outsl
pop
xor
sbb
pop
xchg
sub
in
test
xchg
mov
mov
cmp
fmull
mov
rorl
mov
push
jle
loop
cmpsb
pop
loopne
insb
push
xor
cmp
adc
mov
add
mov
roll
mov
ret
sbb
adc
pop
outsl
xor
and
xchg
mov
xchg
add
mov
fnstsw
call
mov
es
mov
aam
lret
aam
ljmp
sti
cmp
mov
or
in
in
mov
or
mov
loope
sub
gs
jp
pushf
rcrb
outsb
pop
das
aad
ret
mov
in
les
lods
adc
shlb
loop
fldl
ss
mov
addl
dec
inc
add
mov
jo
pop
xchg
into
mov
push
rolb
add
shlb
loopne
incl
mov
mov
test
icebp
in
in
ljmp
and
adc
mov
mov
jae
lods
sti
cmpsl
popl
mov
mov
sbb
inc
jb
jg
jmp
repz
lods
inc
jnp
cmp
dec
cmpsb
add
mov
mov
jmp
mov
imul
pop
mov
add
dec
inc
sub
push
pop
movsb
ficomps
mov
or
fnsave
fcoms
in
jle
lea
jb
cli
in
insl
cmp
iret
xlat
test
andb
push
push
roll
hlt
es
stos
ret
movsb
fdivrl
cmpl
xchg
or
lock
add
scas
adc
add
insb
mov
mov
adc
decb
pop
roll
pop
ds
xor
clc
test
shll
into
xor
sbb
movsb
inc
sub
jo
rcrb
imul
add
and
iret
imul
mov
add
lods
lea
pop
test
xchg
xor
stos
or
or
mov
push
leave
jo
aas
jg
cmp
subb
mov
iret
lahf
sbb
jns
ja
mov
in
cs
or
mov
fstpt
or
sub
jl
lret
shl
std
push
cld
adc
xchg
xor
rcl
and
push
mov
inc
sbb
push
mov
aaa
or
in
fidivs
add
sbb
or
imul
add
mov
cmp
aaa
cmp
movsl
in
repnz
pushf
mov
mov
add
sub
cmc
imulb
call
leave
cmp
jae
adc
ja
mov
xchg
and
dec
and
repnz
mov
xchg
pop
arpl
orl
mov
sbb
insl
xchg
push
mov
ja
test
push
jb
mov
cmp
lea
js
jmp
repz
mov
xchg
lret
idivb
data16
or
add
es
jge
mov
cmc
and
std
xchg
addr16
stc
mov
mov
outsb
xchg
cli
ds
into
sbbb
inc
xor
mov
fisubs
xchg
dec
out
ret
mov
shlb
mov
rcrb
adc
sub
loopne
or
lahf
mov
add
arpl
inc
inc
adc
test
aaa
push
mov
mov
add
mov
mov
cwtl
nop
lea
jns
mov
cmp
push
mov
fcoml
xlat
mov
xchg
popf
push
pop
mov
adc
cmpl
pop
and
push
or
or
add
cmc
lret
xor
shrl
ror
push
mov
jmp
cmc
sti
scas
insl
aad
outsb
add
test
xchg
imulb
shlb
add
jo
shlb
and
outsb
das
fcoml
sub
ljmp
push
mov
xchg
add
mov
roll
loop
jecxz
inc
popf
mov
pop
jmp
push
mov
aam
stos
out
push
movsl
sbb
loopne
aad
fildl
je
mov
sub
popa
sbb
in
out
mov
popl
lret
sub
dec
add
frstor
fidivl
xor
adc
sbb
mov
mov
xchg
dec
aaa
std
pop
cmp
repnz
mov
mov
cmc
mov
call
adc
daa
fidivrs
out
testb
cltd
adc
and
test
adc
roll
or
mov
lock
jle
into
orb
fildll
leave
dec
je
clc
imul
xor
jmp
push
mov
lret
lret
mov
adc
imul
sub
mov
inc
pushf
inc
ss
addb
push
loope
adcb
push
cwtl
sarl
push
and
icebp
push
sub
mov
in
fs
nop
std
pusha
or
xchg
push
add
loope
cmpsl
add
unpcklps
cld
pop
push
mov
in
sub
and
dec
in
pop
xor
add
adc
jg
sbbl
fsubp
push
mov
outsb
sbb
shr
add
repnz
add
push
xor
pop
xchg
js
rclb
pop
mov
into
fiadds
pop
rorb
test
pop
xlat
cmp
add
adc
jl
sbb
inc
stc
and
aam
sbb
jge
dec
sub
push
inc
pop
subb
lahf
sub
sti
rolb
mov
out
mov
jmp
xlat
cmp
shrd
das
cmpsb
mov
fwait
pusha
iret
cld
mov
lock
xchg
and
dec
xor
mov
mov
mov
sahf
adc
inc
insb
mov
je
jb
and
xchg
ret
or
test
ret
out
mov
test
rcll
pop
fbstp
mov
jne
mov
cmp
mov
pop
cmp
in
inc
in
int
mov
outsl
jg
xchg
sbb
fstp
mov
mov
pop
mov
pop
mov
dec
outsl
mov
call
push
sbb
xchg
out
rclb
cli
lods
and
ficompl
cmp
inc
jg
adc
idivl
test
mov
push
in
movb
xchg
in
add
fistpl
sbb
mov
add
push
mov
iret
sub
cmp
or
cmc
and
mov
add
xor
and
jns
add
xchg
arpl
test
cld
add
adc
aaa
mov
jno
test
stos
loop
movsl
lock
decl
mov
jg
pop
pop
jp
notb
sub
cmc
mov
pop
sti
xorl
out
xor
jp
and
mov
lret
out
js
js
pop
adc
andb
fistps
arpl
les
jecxz
jmp
push
or
mov
push
adc
and
cmp
pusha
mov
call
cs
in
movsl
scas
cmp
outsl
aad
dec
nop
daa
mov
or
lret
xchg
mov
mov
gs
fs
out
insl
mov
roll
mov
inc
test
mov
inc
jle
aaa
dec
xchg
rol
xchg
cmc
inc
cmpsb
mov
cmp
repz
mov
mov
pushf
ret
cwtl
push
aad
in
rolb
mov
jnp
inc
aaa
mov
outsl
mov
sbb
scas
inc
rol
and
orl
aaa
shll
dec
rcrl
imul
push
pop
clc
and
sar
push
icebp
mov
arpl
pop
or
aad
outsl
fdivl
inc
aam
lcall
xchg
push
insl
adc
insl
mov
pop
mov
pop
mov
std
inc
mov
xor
jbe
aad
ds
dec
test
jae
pop
xchg
add
fisubl
cmp
daa
adc
out
and
jle
sti
push
in
cltd
sbb
lcall
inc
je
lret
in
lock
jg
and
lods
pop
jp
and
inc
cmc
inc
inc
js
adc
mov
lcall
pop
jp
inc
or
and
add
outsb
sub
mov
push
cmpsl
dec
jg
cmp
pop
lock
push
push
or
and
testb
inc
push
aas
rorb
movsl
les
xchg
xchg
jl
outsl
add
push
lds
in
out
je
sbb
fs
pushf
jge
mov
std
shrl
divl
cli
mov
xor
add
int3
lcall
test
ljmp
jo
cmp
mov
cltd
stos
in
in
adc
jbe
push
insb
add
jmp
dec
pop
push
push
dec
or
ficomps
lcall
jle
inc
aas
pushf
mov
push
movsb
adc
icebp
pop
div
rolb
stos
jle
out
jg
mov
fists
clc
dec
negl
inc
subl
mov
mov
sbb
inc
ljmp
nop
insl
rclb
in
inc
es
cs
sub
jmp
hlt
add
fisttpl
or
pop
mov
nop
mov
xor
mov
mov
fdiv
lcall
push
lahf
ss
mov
orl
popl
filds
out
xlat
push
loop
push
imul
dec
ja
mov
inc
and
es
mov
or
jbe
sbb
mov
add
rorb
stos
xchg
jmp
inc
in
cmp
loopne
mov
fs
add
push
testb
push
mov
push
inc
mov
call
sub
dec
inc
dec
cmp
push
pushl
xchg
ljmp
popa
or
jecxz
and
sbb
xchg
dec
repz
mov
mov
outsb
subl
push
inc
cmp
sub
add
cmp
mov
insl
inc
lods
lea
sbb
mov
cmc
xor
loop
fdiv
or
repz
rclb
adc
adcb
push
push
iret
fiadds
sar
outsl
mov
out
pop
push
aad
insl
fwait
xchg
add
adc
fidivs
pop
addr16
sbb
ss
dec
popf
pop
movsl
es
cld
pop
push
outsl
shll
add
ds
adc
repz
sbb
jne
cmc
jno
add
jmp
or
push
add
shll
jge
outsl
mov
sbb
xor
scas
imul
stos
jno
dec
pop
xchg
into
cmpb
adc
push
mov
pop
xor
insl
lock
mov
xchg
daa
repnz
outsl
les
jg
call
push
in
lret
aaa
fadds
pop
adc
ret
push
mov
xchg
or
lea
mov
cli
adc
mov
shrb
cli
subb
dec
cmp
test
mull
cwtl
daa
jbe
push
cmp
jno
test
jo
push
pusha
sbbb
lahf
or
lods
test
into
and
push
lcall
add
mov
pushf
push
xchg
sbb
cmp
sub
jo
inc
push
mov
fidivrl
incl
jno
push
or
lock
adc
lds
adc
push
push
jp
mov
fimuls
mov
xor
pop
fadds
rclb
pop
push
cmpsb
ffreep
pop
inc
add
and
add
cltd
pop
popa
push
xchg
adc
mov
call
mov
sbb
push
mov
jbe
add
or
xor
mov
xor
sar
jae
stos
jno
ret
and
add
xchg
mov
outsb
and
popf
sbb
push
outsb
sbb
pop
cmpsb
ja
sub
push
ljmp
pop
push
and
xor
inc
fdivrl
add
inc
pop
mov
adc
imul
lock
dec
xor
pop
and
out
mov
aad
pusha
clc
repnz
iret
test
mov
adc
in
fbld
or
fnstcw
and
andb
int3
sub
shlb
jl
push
dec
bts
loopne
dec
sbb
test
cmp
cmc
out
push
subb
cli
mov
inc
test
dec
bnd
mov
push
inc
test
dec
test
add
rcrb
aam
icebp
cli
std
add
aaa
cli
mov
int3
mov
mov
mov
xor
orb
out
sbb
inc
adc
mov
sub
mov
and
aad
mov
push
data16
sbb
add
push
xor
gs
test
mov
fwait
imulb
jecxz
and
jo
aad
inc
test
push
cs
cld
inc
sti
inc
into
repnz
fs
lea
movsl
fucomip
jb
inc
pushf
adc
or
mul
sbb
cmp
mov
mov
xchg
mov
or
pushw
inc
int
ret
fs
scas
mov
outsl
jno
cltd
lock
mov
mov
inc
daa
sub
imul
mov
mov
decb
hlt
je
inc
cmc
ret
out
aad
mov
push
mov
jmp
cmp
test
xor
dec
frstor
fldcw
test
js
test
lods
mov
fidivs
mov
mov
jl
push
imul
push
sub
push
mov
jge
pop
add
xchg
std
pop
or
cmp
dec
push
test
inc
addb
or
inc
or
jne
sbb
fwait
orl
pop
mov
push
and
mov
pop
pusha
call
je
in
push
inc
pusha
xlat
icebp
fisttpll
in
dec
call
sbb
pop
cmp
mov
cmp
iret
mov
push
cld
adc
pop
dec
lds
dec
hlt
sbb
sbb
mov
fwait
push
inc
scas
in
add
arpl
decb
jl
cmp
loop
scas
pop
xor
and
outsl
imull
js
adc
ds
push
testl
jbe
jb
stos
rcr
dec
mov
push
sbb
mov
rclb
fisubl
mov
mov
in
sbb
fldl
adc
insl
jl
mov
int
mov
jnp
cld
sbb
pop
fildll
xchg
inc
mov
mov
pusha
fbstp
sbb
adc
mov
mov
test
jmp
pop
adc
xchg
aas
pop
hlt
cmp
ja
inc
pop
mov
clc
js
js
orb
ljmp
leave
in
pushl
sub
ret
frstor
loopne
fisubrs
add
imul
loopne
test
in
aad
aam
out
or
scas
add
sub
jns
and
aaa
das
xor
leave
cld
and
inc
push
sub
and
or
lahf
dec
mov
aam
je
jge
outsb
cmp
adc
add
idiv
mov
push
inc
push
sub
and
int
fsubp
insl
cmc
stc
icebp
gs
push
inc
and
pop
add
push
pusha
lods
jmp
std
pop
orb
xor
sbb
popa
mov
shr
outsl
mov
push
daa
push
loopne
ret
xor
sbb
outsl
aam
push
fs
lods
or
hlt
mov
pop
add
out
adc
adc
ss
fiadds
mov
xor
clc
adc
mov
sbb
stos
mov
lock
jl
loope
fs
mov
jmp
dec
and
arpl
js
mov
cli
ret
inc
push
mov
cmp
scas
ss
frstor
add
movsl
pop
loope
jne
fistpll
inc
fs
arpl
sub
add
inc
lret
loopne
mov
mov
fsts
outsb
fiadds
inc
mov
mov
mov
pop
add
popf
ss
sub
shl
data16
jle
out
cs
mov
sti
sbb
jecxz
lcall
jo
ljmp
add
sbb
stos
fs
push
into
call
in
aas
pop
xor
ljmp
mov
mov
iret
cmp
adc
push
lret
inc
mov
add
bound
pop
dec
sbb
adc
or
mov
rorb
popa
fidivrl
ffreep
pop
fmuls
xchg
xchg
cmc
add
mov
mov
sub
pop
sbb
push
mov
test
aam
lcall
adc
or
test
mov
aad
push
mov
test
or
jae
jecxz
das
rorb
mov
daa
and
mov
or
lods
cmp
cmpb
shrl
mov
adc
subl
dec
cmp
xchg
sub
add
test
add
call
repnz
ljmp
xor
addr16
sahf
addb
icebp
test
sahf
hlt
insl
test
mov
aad
fsubr
add
stos
out
push
aam
lahf
popa
adc
fimuls
in
jg
icebp
mov
jecxz
dec
mov
cmpsl
enter
in
mov
jl
push
arpl
cmp
mov
insl
push
xchg
call
cmp
adc
push
sbb
repnz
inc
fwait
pop
pop
mov
or
test
mov
dec
sbb
pop
out
mov
jge
jb
mov
xchg
pop
xor
jnp
lock
lds
stc
pop
mov
xchg
mov
mov
push
jbe
call
adc
dec
mov
les
jmp
popf
mov
add
inc
fisttpll
es
adc
sbb
les
rclb
sbb
stos
dec
call
sbb
ds
mov
mov
in
adcl
or
repnz
aad
cld
ret
sub
inc
into
lock
pop
lods
popf
inc
ret
adc
cld
push
dec
sbb
lock
mov
or
xchg
frstor
sahf
xor
cmp
mov
adc
xor
and
sti
mov
push
subb
jp
cld
aas
fmuls
das
divl
sbb
mov
xor
mov
dec
push
in
cltd
repnz
adc
pop
or
adc
inc
ja
cmpb
scas
dec
loope
jmp
pop
push
push
adc
daa
pop
push
pusha
insl
hlt
sbb
jb
cmp
not
jecxz
mov
mov
mov
or
jge
aas
int
and
and
les
sub
mov
das
adc
sbb
clc
inc
out
ss
mov
jg
or
xchg
and
mov
pop
mov
fistpl
test
mov
addr16
js
cmp
or
fsubl
and
jg
inc
ss
add
xor
cmp
jle
test
cmp
adc
xchg
outsl
pop
sbb
ret
cmp
xchg
dec
pop
loop
adc
cltd
dec
loop
mov
pusha
cltd
fldt
sbb
xor
jns
mov
call
leave
mov
imul
cmc
adc
or
int3
frstor
dec
adc
and
sbb
push
imul
mov
add
loop
cmp
int
jp
clc
mov
mov
pop
pop
or
fbstp
or
sub
fildl
dec
insb
je
inc
out
mov
ss
add
loop
dec
pop
lea
mov
add
xchg
loopne
popf
jl
fadd
inc
test
inc
xchg
mov
sub
out
andb
mov
or
cmp
addb
gs
lods
mov
dec
xor
mov
mov
or
ret
fst
sbb
mov
sub
cwtl
xchg
jbe
mov
sbb
pop
sbb
cmpsl
les
pop
insb
dec
and
sub
fsub
xor
rolb
fistpll
dec
rcl
in
sub
pop
mov
dec
dec
sbb
push
movsl
scas
mov
mov
js
add
sbb
sbb
xor
push
fstpl
rcll
sub
out
loopne
push
push
mov
iret
push
push
movsl
aaa
adcb
gs
add
adc
cmp
push
xor
jg
mov
lahf
jmp
mov
ja
cmpsb
test
xchg
les
xchg
or
test
sub
adc
add
lods
in
jp
pop
bound
gs
inc
xchg
repz
dec
add
add
mov
nop
jecxz
arpl
bound
jp
mov
sub
xor
inc
cwtl
out
call
addr16
add
test
cmpl
rorb
xchg
in
sub
stos
mov
jg
sub
rcrb
mov
inc
xchg
inc
add
xchg
in
jl
cs
icebp
adc
nop
cmc
sbbb
push
sbb
mov
jne
test
adc
fimuls
dec
out
movsb
ret
fistpll
mov
add
decl
cltd
test
jnp
mov
fwait
inc
xlat
test
xchg
mov
test
mov
test
xchg
sub
mov
mov
push
or
pop
mov
cmp
add
mov
std
insl
adc
xchg
cld
popf
daa
inc
ja
jns
inc
cmp
outsb
bound
lret
mov
aaa
pushw
sub
push
mov
xchg
sub
and
lret
push
xor
pop
daa
dec
xor
lret
sub
xor
loopne
add
push
popf
ljmp
out
pop
jle
int3
ret
aas
and
cmpl
jnp
in
pop
ficoms
mov
cmpsl
rolb
sbb
xchg
xorb
ficomps
sbb
movsb
pop
lret
pop
sbb
popa
push
push
mov
sti
out
cmp
hlt
stos
fiadds
or
adc
jge
push
fwait
and
notb
aad
inc
mov
jmp
cli
pop
lea
lock
adc
adc
inc
test
mov
imul
out
ja
cmp
shlb
pop
je
and
and
push
xchg
loopne
mov
js
mov
inc
sbb
outsl
push
out
outsb
ljmp
cwtl
push
enter
adc
dec
clc
pop
push
popa
jecxz
testl
lods
mov
push
mov
bound
xchg
cwtl
or
and
or
cmpsl
fdivrs
loopne
nop
imul
out
andb
data16
or
and
pop
jno
inc
fisttpl
call
adc
xorb
in
and
andb
mov
xchg
mov
decl
rcrl
insl
cld
incl
jecxz
aaa
jnp
inc
popa
mov
je
incl
fsubl
mov
cmpsl
or
in
add
out
sar
sub
test
ja
and
mov
adc
fdiv
pop
mov
repz
adc
adc
and
push
adc
mov
mov
sbb
xor
test
jne
cmpb
mov
pop
and
fcoml
inc
xchg
fidivs
ds
lods
ljmp
mov
add
xchg
pop
jbe
int
xlat
or
adc
add
inc
xchg
mov
inc
xor
xchg
push
decb
xchg
addr16
mov
cmc
aad
add
inc
imul
aaa
pop
lods
loopne
inc
dec
push
aaa
dec
in
jnp
xchg
repnz
rcr
nop
mov
add
cltd
leave
sub
cltd
ja
mov
xor
dec
adc
mov
jp
clc
fimuls
cld
outsb
inc
icebp
mov
fists
xor
test
ret
mov
jmp
adc
ds
jg
adc
fsubrp
mov
imul
pop
jmp
and
in
xor
or
daa
and
ret
or
loopne
int
sti
xor
push
pop
nop
cs
mov
sbb
hlt
repnz
xor
inc
cmp
add
test
in
mov
mov
add
lahf
xchg
pushf
jb
fdiv
pop
xchg
or
sub
scas
cmp
xchg
or
pop
add
jp
lret
dec
or
mov
adc
mov
inc
sahf
loop
add
cltd
aam
mov
sbb
fistpl
call
push
xchg
xchg
outsb
addl
jg
adc
lahf
push
in
jo
fsub
call
xchg
dec
mov
insl
fdivs
dec
frstor
or
fcompl
pop
jmp
lods
mov
aam
mov
add
inc
adc
fsubs
jmp
adc
xor
daa
lods
dec
mov
insb
outsb
fistps
adc
or
xchg
data16
add
pop
pop
inc
fwait
xor
xor
xor
cmpsb
fcom
lea
int
xchg
xlat
dec
in
sbb
int3
mov
mov
add
mov
pop
loope
pop
dec
push
test
sub
fbstp
push
adc
hlt
adc
test
nop
add
sbb
icebp
insb
cmp
outsl
popf
in
out
fisubl
mov
jg
imull
mov
shrl
add
das
fst
scas
mov
iret
xchg
xchg
mov
cld
mov
sub
jne
in
xor
loop
les
flds
cmp
outsl
or
adc
or
pop
push
xchg
iret
shrl
push
push
stos
mov
and
or
xorl
out
mov
mov
jge
xchg
xchg
dec
dec
or
jle
lock
and
fwait
jle
mov
inc
mov
cmp
and
pop
fwait
jg
lock
movsb
cld
jecxz
and
test
rcrb
push
test
cmp
cmovp
rolb
push
adc
insl
js
xor
jecxz
inc
dec
cmp
test
mov
fisubrl
mov
je
scas
pushaw
lret
and
mov
dec
and
outsl
in
jno
mov
jmp
pop
stc
or
addr16
hlt
int
inc
lds
out
lret
cmp
fiadds
std
lods
pop
jl
pushf
adc
adc
xlat
out
pop
dec
or
dec
sub
shl
push
push
aad
dec
xor
stos
or
mov
adcb
mov
rcll
mov
jp
sub
sbb
js
add
or
sarl
adc
mov
aas
mov
sub
ret
cmp
push
push
popf
sti
cs
int
xchg
jl
mov
sbb
sbb
push
icebp
negb
scas
popf
sbb
push
sub
mov
aaa
xchg
mov
adc
and
loopne
loop
movsl
lret
jno
daa
inc
movb
add
test
daa
iret
push
xchg
sbb
insb
sti
jg
ss
je
rcrl
inc
adc
sbb
hlt
jg
sbb
adc
pushf
cmp
rcrb
rol
or
popa
leave
shlb
inc
push
jg
out
test
lock
xor
clc
out
xchg
lret
test
popf
fimuls
sbb
inc
push
shrb
les
js
xor
and
push
mov
pop
stos
or
mov
aaa
mov
adc
aad
fildl
ret
inc
lcall
jnp
shlb
xchg
pop
add
lock
or
dec
jns
push
aad
out
repz
lds
jle
fnsave
popa
jnp
add
sub
ret
and
std
lods
shll
sbb
daa
lods
xchg
setnp
sti
lret
mov
push
sub
mov
outsb
mov
scas
push
lods
mov
add
outsb
sbb
add
jnp
adc
int3
adc
clc
dec
fildl
mov
push
push
or
cmp
fildll
ror
js
mov
or
insb
jmp
add
jmp
pop
loope
adc
out
addb
stos
ret
daa
jns
insl
loope
pop
inc
add
divb
pop
or
xchg
pop
pop
sti
jnp
shlb
adc
sar
ljmp
shrl
lods
xchg
cmp
add
in
or
pop
ss
and
cmp
pushf
xchg
call
cmp
inc
ret
add
add
or
mov
aam
dec
shrb
inc
jbe
push
ja
scas
dec
js
out
popf
call
adc
lock
pop
in
int
cmp
filds
xor
in
es
testb
or
mov
push
ljmp
sub
jb
mov
push
and
ficoml
fadds
test
fisubl
mov
leave
jl
mov
mov
pop
mov
rcl
ja
mov
adc
dec
or
in
push
jbe
push
imul
test
pop
jno
je
cmpsb
mov
repz
mov
xor
sbbl
sub
outsl
push
jl
mov
inc
adc
movsl
clc
movsb
push
push
arpl
or
scas
and
outsb
test
mov
sarb
xchg
inc
add
xorl
and
pop
push
push
ss
pop
add
pusha
adc
outsb
inc
loopne
insl
iret
mov
and
adc
dec
push
shll
lock
clc
jle
mov
mov
scas
data16
sub
mov
mov
mov
adc
add
pop
push
mov
xchg
jb
test
pop
ss
ljmp
rolb
mov
dec
lds
aam
loop
loopne
push
clc
decl
cmp
mov
outsb
push
call
cmp
adc
jg
add
adcl
xor
adc
and
add
add
xor
int3
mov
xchg
cs
mov
mov
add
outsl
cs
adc
push
fisubrs
in
cltd
sub
mov
adc
gs
xor
out
push
lock
fidivrs
adc
or
xor
mov
fsts
pslld
and
dec
out
adc
in
mov
dec
adc
dec
push
sbbl
fcoml
ss
cmpsw
mov
lock
hlt
pop
sub
sbb
sbb
subb
push
daa
and
mov
decl
popf
and
xor
rclb
mov
sub
cmpsb
inc
in
or
fmuls
mov
nop
outsl
dec
pop
in
lods
jg
dec
jecxz
dec
adc
data16
nop
lods
and
inc
ljmp
insb
outsb
lea
cmc
shlb
pop
jge
jp
lcall
mov
jno
out
popa
push
pop
std
into
pusha
frstor
pushf
pop
js
stos
and
dec
fisubrl
fisttpl
das
insb
jo
push
mov
pop
pop
ja
mov
rcr
add
adc
add
pop
cltd
mov
sbb
mov
int
mov
pushf
mov
loopne
xchg
push
addr16
fidivs
cmp
xor
or
and
fldcw
insl
pop
cmpsl
inc
icebp
cmp
or
out
dec
ljmp
bound
das
imul
out
xchg
inc
jno
mov
pop
jp
sti
push
mov
cmpsb
inc
jbe
mov
cmp
mov
mov
push
inc
nop
data16
xchg
subb
xor
ss
ja
repz
mov
sbb
mov
test
ficomps
mov
ficoms
pop
pusha
aas
in
mov
div
sbb
or
cmp
pop
adc
and
test
jg
pop
jle
lock
push
and
pop
xchg
lods
mov
add
aad
inc
mov
and
dec
mov
pop
inc
mov
fsubs
call
adc
jbe
mov
lea
dec
leave
add
add
xchg
mov
adc
adc
jbe
arpl
xchg
sbbb
adc
fs
loope
inc
test
mov
fbld
clc
xor
repnz
rorl
push
mov
xchg
mov
inc
adc
fwait
bound
mov
dec
adc
call
fucom
dec
pop
divl
enter
jno
subb
arpl
xor
mov
mov
nop
adc
mov
or
cmp
mov
cmp
mov
cli
sub
pop
mov
mov
ret
stos
movb
std
fwait
jbe
cmp
and
xchg
fwait
pop
mov
push
leave
xor
sbb
sub
add
adc
out
or
jbe
mov
lcall
adc
cmp
mov
aaa
loop
insl
mov
enter
mov
mov
fldt
stc
stos
loop
cmp
int
push
jle
mov
mov
iret
sbb
mov
ljmp
ds
add
xchg
sub
mov
test
dec
mov
mov
xor
jnp
rcrb
lods
mov
push
out
fs
outsl
mov
cmp
je
ljmp
jne
sbb
int
sub
jnp
jmp
into
mov
push
mov
lret
imul
adc
test
dec
pop
ja
mov
orb
xor
loope
jnp
cwtl
incl
adc
addr16
inc
outsl
cld
stos
jp
sbb
pop
mov
mov
js
sbb
dec
sub
mov
pop
or
fiadds
icebp
in
or
fdivs
sub
out
imul
or
mov
inc
outsl
push
cli
and
xor
in
jno
loop
ret
mov
xchg
xchg
and
cmp
mov
ja
test
add
scas
dec
mov
stos
inc
adcb
loope
or
scas
or
fsubl
lea
dec
lret
and
cmp
fstps
push
jl
xlat
push
adc
cli
xchg
stc
test
mov
dec
adc
jno
ret
gs
cmp
lret
popf
in
divb
ljmp
pusha
xchg
jne
inc
lret
lock
cmp
fldcw
pop
pxor
aam
mov
cmp
mov
ja
push
movsb
mov
outsb
xchg
push
mov
mov
ljmp
cltd
lock
cltd
repz
outsb
mov
std
push
not
inc
and
dec
orl
jle
movsl
outsb
imul
mov
dec
iret
rcrb
int3
outsl
outsl
fnsave
sbb
pop
loop
xorb
pop
fildl
xchg
or
and
inc
xchg
dec
mov
xor
mov
test
push
loop
dec
out
mov
sub
or
xchg
cmp
das
dec
shlb
aas
jg
cmp
xchg
push
stc
push
setb
decb
push
add
pop
inc
jmp
mov
enter
int
pop
incl
mov
add
sub
or
dec
shll
ret
sub
mov
inc
cmpsb
sub
les
jl
push
mov
push
mov
adc
xchg
xchg
lods
pusha
inc
int
adc
in
aaa
sahf
or
mov
rorb
push
popa
jecxz
cld
dec
movsb
cmp
leave
jge
add
loop
inc
inc
add
or
mov
out
sub
sub
fstps
or
aam
inc
inc
arpl
pop
sub
and
or
sbb
sub
jmp
jmp
lods
pop
loope
jno
das
aaa
out
fnsave
cld
push
sub
call
mov
or
dec
jbe
mov
mov
jg
loop
rolb
lods
push
in
inc
inc
add
stc
inc
jnp
mov
mov
leave
jle
dec
inc
mov
mov
or
mul
and
pop
sub
adc
pop
inc
lods
pop
adc
inc
mov
cmp
pusha
pushf
and
jne
jl
rorb
inc
jl
push
jne
jae
clc
pop
or
lds
std
aaa
mov
mov
mov
xchg
int
fucomip
inc
mov
sub
shl
test
les
pop
add
sbb
mov
ds
popa
push
aaa
je
cltd
jp
jno
jb
inc
sti
and
jo
mov
cmc
or
out
cmp
imul
xchg
ret
add
jp
scas
dec
inc
fbstp
jbe
test
sahf
out
mov
scas
dec
lods
insl
inc
subb
addr16
sbb
enter
test
lahf
mov
pop
jnp
mov
test
mov
pushf
push
sbb
xor
sbb
ficoms
rclb
sub
jns
test
aas
add
jno
mov
mov
arpl
rsm
call
mov
in
adc
pop
into
lahf
xor
int
push
add
xor
pop
mov
loop
and
inc
aas
fsubrp
outsb
adcb
aas
sub
out
clc
lods
mov
xor
insb
or
jb
push
pop
aad
inc
push
push
adc
adc
xor
mov
sbb
sub
and
sub
jnp
inc
lds
movsl
js
in
xor
pop
outsl
outsb
mov
mov
sbb
inc
repnz
mov
int3
push
mov
test
cli
icebp
aaa
rol
out
adc
xor
jl
mov
das
ret
lea
cs
cmp
add
and
outsb
ret
inc
aam
shlb
sbb
movl
lret
ret
inc
add
lods
ficoml
push
pop
mov
inc
les
xrelease
addr16
jge
adc
cmp
filds
inc
xchg
in
jl
subl
lret
fnsave
pop
ja
mov
je
dec
jp
mov
inc
rcrl
sub
mov
pop
or
test
inc
out
mov
loopne
mov
xchg
fisttps
xchg
in
cli
inc
mov
out
mov
in
jge
push
enter
inc
xchg
fwait
mov
mov
mov
adc
pushf
sbb
clc
pop
imul
int3
popf
add
xchg
out
outsl
decl
inc
xchg
dec
push
adc
add
std
and
cmp
pop
pop
mov
add
mov
subl
dec
ficoms
stc
enter
addr16
mov
out
loop
ljmp
pop
std
outsl
ficompl
nop
dec
or
add
pop
hlt
xchg
fsubr
jg
std
or
outsb
in
insb
xchg
and
xor
pop
insb
xor
inc
dec
bound
loop
cmp
and
orl
cmp
or
mov
aaa
adcb
shll
sub
das
push
jp
fdivrl
mov
jecxz
dec
xchg
or
xchg
dec
mov
inc
adc
aad
clc
lds
aas
lds
outsl
lods
ret
mov
subb
andb
pop
adc
push
mov
mov
cld
shlb
int
sub
and
cmp
adc
mov
adc
dec
push
sub
inc
mov
or
rorl
mov
repz
jb
movsb
imul
lock
mov
cmc
adc
mov
pop
ucomiss
mov
and
int3
ljmp
sbb
xchg
jnp
xchg
mov
lds
mov
add
outsl
jmp
subl
mov
pushf
adc
fsubrl
pop
das
lret
rol
dec
dec
and
sub
dec
mov
pop
imul
xchg
cld
dec
pop
mov
repz
lods
xor
xor
xchg
popa
out
mov
mov
mov
imul
push
push
mov
or
movsl
mov
and
jne
cmp
test
mov
mov
xor
or
mov
gs
xor
push
jne
ror
cmpsb
jge
push
mov
lods
and
dec
xchg
add
mov
jl,pn
cld
adcb
popa
pop
bound
cli
fs
imul
pop
inc
loop
sbb
adc
popf
leave
lcall
mov
inc
add
mov
lds
sahf
jle
lock
sub
xchg
dec
test
iret
xchg
cmp
popf
jmp
add
jmp
pop
in
das
icebp
and
rorb
in
push
nop
and
or
pop
in
ss
arpl
add
cmp
subb
outsl
add
pop
push
ror
mov
adc
loop
and
mov
test
shll
pop
inc
sub
daa
orl
data16
repnz
pop
inc
ret
sbb
sub
shrl
pushl
xchg
lea
jno
jle
dec
jge
xor
fiaddl
cld
mov
or
out
subl
repnz
xchg
ja
lea
jno
and
cltd
mov
roll
xlat
mov
pop
sbb
imul
inc
ret
add
push
scas
push
mov
lock
mov
aaa
rcll
jg
mov
data16
mov
xorb
pushf
test
and
data16
sti
cwtl
cmp
les
aaa
adc
sbb
lock
push
jo
mov
xchg
loope
jo
cmp
test
mov
push
xlat
cs
mov
mov
out
sahf
clc
mov
push
shlb
jp
cld
in
cmc
rcrb
push
add
mov
fnstsw
cmpsb
jno
xor
test
das
shrb
cltd
dec
aam
adc
outsb
dec
mov
int3
in
jo
add
inc
xor
mov
fbld
insb
or
and
ret
scas
inc
cmp
mov
mov
test
mov
outsb
ss
xchg
sbb
lret
sub
xor
pop
xor
stc
in
xchg
repnz
mov
mov
mov
decl
loop
or
or
jg
push
roll
fldt
xchg
shlb
mov
scas
enter
into
lods
mov
mov
jle
push
stos
sub
push
and
in
rorl
xor
add
or
mov
lock
push
or
and
out
xchg
fidivl
jle
mov
jecxz
or
push
cwtl
lea
mov
or
push
inc
fcmovnb
clc
je
jno
test
test
xor
inc
sbbb
jns,pt
sbb
test
int3
or
sahf
mov
rcr
push
cmp
xor
lea
dec
outsl
jecxz
popa
mov
jg
imul
inc
outsb
mull
add
out
insl
sbb
xchg
push
imul
orb
mov
pop
out
out
mov
pop
je
jbe
and
push
fsubs
mov
cld
sbb
mov
sbb
jbe
push
pop
xor
mov
test
std
lock
shll
lods
popf
dec
jl
mov
popf
loopne
cmpsb
test
shlb
pop
and
test
fistpll
repz
jg
pop
out
inc
xor
sarl
push
aam
fucomp
mov
js
cmc
arpl
repnz
push
jl
sub
push
fcoms
mov
aaa
sbb
in
xor
andb
jae
add
out
insl
pop
fbstp
test
or
ret
idivb
sbb
inc
in
scas
cld
out
mov
mov
fsubp
call
shrl
add
repnz
dec
or
dec
imul
lods
cmp
fbld
je
push
add
faddp
push
xchg
arpl
mov
jno
cmc
jbe
mov
fnsave
sub
popf
mov
add
fldl
push
jne
mov
cmp
dec
jne
cld
scas
pop
dec
pusha
sub
aas
fwait
sub
scas
xor
sub
pop
popa
mov
das
sbbb
aaa
and
push
jl
and
mov
mov
lea
aad
dec
std
mov
push
js
out
orb
jmp
cmp
pop
mov
movb
loopne
cmp
or
cmp
fsubrl
jo
dec
popl
mov
ror
pop
je
pop
cmpb
iret
cmpsl
int3
mov
jl
loope
add
mov
pusha
int
mov
mov
adc
fucomip
shll
mov
mov
ljmp
scas
inc
stos
incl
inc
call
push
xchg
imul
jmp
cmp
xchg
jecxz
jecxz
int3
cmp
in
in
mov
pop
rcrb
lahf
pop
xor
ja
decl
test
lahf
sahf
xchg
cmp
add
push
lods
jg
xchg
sub
shlb
subb
adc
mov
sbb
loopne
xor
daa
test
mov
jno
mov
sub
mov
movsb
scas
mov
subsd
adc
rclb
or
in
sbb
sbbb
xor
or
imul
jle
call
jb
mov
lods
std
lret
or
pop
mov
cmpl
in
xchg
test
jne
test
xchg
out
cmp
sbb
cmp
lcall
in
pop
aaa
lods
push
jge
sarl
or
scas
popa
in
push
mov
mov
mov
sahf
int
jo
push
mov
sub
cli
cmpsl
cmpsl
fwait
js
orl
dec
insb
loopne
fbld
in
fiaddl
data16
clc
sub
fstpt
jbe
xchg
inc
dec
data16
pushf
push
jmp
shl
jg
pop
push
js
cld
add
inc
movsl
sub
add
andb
mov
sub
mov
pop
mov
push
addb
aam
dec
jne
dec
les
dec
inc
ja
dec
push
xor
mov
and
lods
stos
cli
mov
jnp
insb
push
loope
or
or
stos
bndldx
mov
dec
lret
adc
loope
insl
mov
addr16
sbb
stc
push
and
push
sbbb
outsb
stos
xchg
cltd
add
aaa
outsb
aaa
cltd
lret
add
jl
xor
ja
xchg
ss
jp
test
mov
push
enter
jmp
adc
or
into
mov
adc
xor
jle
adc
rolb
popf
push
and
jne
lahf
es
outsl
lods
dec
jmp
out
out
cli
shlb
insl
and
add
inc
mov
inc
and
decl
rcll
aad
mov
inc
rcll
fwait
or
xchg
pop
aaa
push
adcl
inc
dec
or
mov
or
scas
mov
arpl
scas
les
insb
jge
push
cwtl
jbe
or
inc
pop
mov
pop
repnz
push
mov
pop
pop
pop
sub
decl
xor
nop
lret
push
xor
sbb
sahf
sbb
add
out
pop
jnp
sbb
and
out
pop
cli
jnp
cmp
rcll
push
loope
add
sbb
push
insl
loop,pn
inc
pop
in
and
insl
cmpsb
stos
fcmovne
jae
out
fs
sbb
movsb
mov
add
out
inc
sbbl
jne
pop
cwtl
ret
shll
ret
adc
sti
adc
shl
add
in
test
xchg
xchg
xchg
inc
pop
icebp
test
adc
and
mov
push
in
imul
mov
jbe
sbb
faddl
adc
call
jno
inc
test
jae
mov
sbb
cs
ljmp
lret
testb
lahf
inc
lret
cmc
xor
aam
mov
mov
mov
mov
cmp
jns
mov
mov
add
cmp
push
and
ss
ljmp
lock
mov
daa
add
stc
subb
or
test
lret
add
cmpsb
fbstp
mov
or
shl
pop
lock
jo,pn
or
push
sbb
jno
add
jb
out
adc
insl
pop
jle
xchg
mov
push
add
shr
dec
ret
pop
clc
pop
nop
icebp
fistpll
out
jne
and
cmp
out
and
out
or
movb
adc
outsl
sbb
and
movsl
ret
movsl
pop
sbb
pop
mov
shll
inc
lea
imul
aam
push
sarl
sbb
or
sub
stos
cmp
fldenv
xchg
push
cs
out
pop
idiv
int
iret
fmuls
mov
mov
mov
mov
nop
dec
dec
xor
outsl
mov
das
filds
fdivrl
and
stc
adc
lods
test
mov
inc
ret
pop
ds
popf
jo
add
mov
rcrb
push
movsb
lods
jae
outsl
add
xchg
stos
nop
iret
inc
dec
sub
xlat
and
out
mov
jns
push
push
jnp
push
jg
test
sbb
cmp
cli
sbb
inc
or
jg
das
dec
mov
sub
repnz
lods
cmpsb
clc
mov
lods
mov
sub
pop
jl
push
push
add
lds
mov
push
and
push
jbe
mov
cmp
mov
lods
gs
fiadds
jo
pop
jo
fiaddl
and
pop
ss
addb
mov
push
inc
push
aaa
in
and
sbb
stos
inc
xor
out
pop
xchg
ljmp
or
pop
sub
adc
je
fimuls
or
pusha
roll
jle
or
in
in
lods
push
into
cmc
sbb
cmp
ja
xor
pop
push
push
inc
iret
cmpsb
aaa
push
mov
push
fs
and
push
mov
xchg
ljmp
push
mov
push
imul
call
scas
adc
sub
addl
call
ret
push
xorl
push
subb
iret
xchg
cli
add
jae
ljmp
test
rcrl
sbb
lret
enter
test
cltd
andl
arpl
sub
jmp
ds
mov
mov
test
les
iret
leave
into
cmp
add
pop
xor
push
fdivr
je
dec
push
lret
or
mov
insl
jl
ss
int3
dec
mov
xor
sub
mov
sub
pop
inc
mov
xchg
xlat
dec
mov
outsl
insl
jns
mov
bound
dec
mov
mov
jp
inc
xor
fdivrp
pop
scas
mov
adc
and
stos
and
loope
or
dec
or
outsb
sub
scas
repz
jmp
inc
add
inc
mov
insl
cmpsl
daa
stc
pusha
mov
xor
mulb
jae
dec
dec
mov
nop
inc
daa
cmp
pop
ljmp
outsb
or
and
shrb
cmpsl
into
inc
dec
or
add
movsl
cmpsl
sub
rep
ret
push
and
packuswb
pop
mov
lahf
jmp
jp
mov
pop
jl
jmp
mov
mov
pop
fwait
rorb
lahf
lret
xor
dec
sti
sub
jb,pt
iret
bound
in
aaa
mov
mov
inc
insb
jg
aam
dec
sarl
fdiv
daa
lock
sbb
push
mov
sub
inc
je
jle
inc
ret
jle
lret
push
add
imul
outsl
pop
out
adc
mov
loopne
sub
mov
out
fsubl
mov
inc
sbb
sbbl
mov
lock
test
push
xor
movsb
pop
add
and
rol
or
sub
mov
dec
dec
or
sbb
je
cmp
push
mov
jns
mov
sahf
mov
rcr
xchg
sub
xor
loopne
dec
idiv
sub
das
adc
insb
xchg
jg
mov
das
xor
inc
iret
faddp
adc
cmpb
pop
fisttps
lret
sbb
add
ret
imul
insl
mov
sub
add
mov
mov
enter
ljmp
ret
imull
in
sbb
in
push
dec
aas
xchg
in
lods
mov
inc
cs
mov
push
mov
aad
fwait
jmp
pop
push
pop
sub
push
ds
rcrl
arpl
fldenv
jns
aas
push
icebp
sub
sub
cltd
adc
scas
cmc
aad
bound
add
enter
jno
test
mov
mov
jp
xchg
jg
aas
test
adc
stc
sbb
add
fiaddl
adc
jo
dec
sbb
cmp
add
push
pop
outsl
stos
and
enter
add
mov
push
lea
push
push
pusha
push
sub
push
sti
cwtl
push
jno
out
ljmp
or
popa
push
cmc
popf
sub
jne
ret
shrl
cli
ret
push
pop
fcomps
notb
out
add
es
fistpl
cmp
jle,pn
shll
and
mov
sbb
das
shl
icebp
adc
dec
adc
imul
fisubs
stos
bound
shr
ffreep
out
iret
aam
das
xchg
rcrb
sub
inc
jbe
insb
jo,pn
sub
pop
mov
dec
mov
xchg
repz
mov
rcll
shl
mov
ss
sbb
aad
aad
fidivl
fmuls
adc
xchg
jno
adc
add
mov
jle
imul
leave
dec
leave
insb
imul
mov
xor
fistpl
fnsave
xlat
hlt
xor
dec
scas
cmpsl
loopne
mov
mov
push
jnp
adc
xchg
andl
ljmp
sbb
xchg
test
in
pop
jnp
xor
push
pop
cltd
add
ret
in
nop
xor
in
pop
je
dec
jo
aas
inc
outsl
cmp
sbb
fildll
jg
js
call
mov
mov
mov
icebp
test
add
aaa
mov
inc
mov
mov
cmp
cwtl
lods
mov
ficoml
mov
imul
sbb
or
xor
out
pop
testb
mov
add
dec
jge
outsl
popf
mov
loope
xor
mov
insb
in
mov
call
adc
fidivrs
ss
xchg
ret
and
mov
push
test
loope
lds
js
imul
ret
mov
mov
or
push
push
cmpsl
or
int3
sbb
outsl
push
mov
mov
dec
fwait
xor
icebp
pop
andb
push
mov
addr16
jl
movsl
or
loopne
aam
push
movsb
mov
test
aad
xchg
lods
adc
dec
cmpl
xchg
je
lock
ret
and
mov
pop
aaa
outsl
jnp
mov
cmp
adc
in
or
cmp
in
adc
push
or
push
fucomp
call
lods
add
shrl
movsb
xor
jnp
cltd
dec
scas
aaa
mov
xchg
test
movsl
subb
in
sbb
and
mov
out
in
ficoml
jnp
and
call
aaa
mov
es
push
mov
scas
sub
mov
or
bound
hlt
cmpsb
addb
mov
ret
mov
xor
xchg
pop
icebp
xor
jae
push
inc
jmp
shlb
aas
mov
insb
fs
aaa
pop
fdiv
dec
mov
insl
jmp
loopne
adc
hlt
sti
push
xor
add
jnp
xchg
add
sub
push
pop
in
sub
mov
test
inc
sti
insb
das
into
cmp
call
cs
mov
xor
fs
mov
and
sub
sub
push
aad
mov
inc
rolb
inc
stos
mov
lods
mov
mov
mov
pop
bnd
jge
jg
jp
lea
fstps
das
dec
push
xchg
mov
jl
addr16
icebp
xchg
iret
inc
mov
stos
jne
aad
and
sbb
test
inc
and
or
mov
pop
arpl
neg
shlb
fwait
daa
pop
mov
je
mov
xchg
dec
add
imul
into
jl
adcl
rol
in
sti
mov
or
lock
out
inc
cmpsb
ljmp
mov
repz
das
inc
cmc
outsl
pop
mov
dec
push
std
dec
sarb
inc
inc
adc
mov
cmc
cmpsl
pop
mov
mov
cmc
adc
out
xchg
mov
notl
insl
pop
mov
pop
movsl
mov
inc
std
ret
jae
cltd
addl
fs
fcompl
jnp
sbb
add
push
inc
jns
fisubs
pop
lods
out
pop
addr16
jl
pop
xchg
call
mov
cmc
push
mov
adc
inc
imul
mov
aaa
rcrb
pop
imull
stc
ja
mov
sub
mov
inc
jecxz
cwtl
aaa
pop
push
jbe
sti
sub
push
lods
test
adc
mov
stos
inc
xchg
adc
jmp
jecxz
pop
or
mov
out
xchg
ljmp
clc
xchg
inc
hlt
imul
js
mov
rclb
cld
popf
pop
xorb
fsubrs
add
outsl
loopne
sub
xchg
cltd
cmp
subl
bound
les
jmp
jae
aad
push
out
jle
rorl
fmuls
add
push
or
xchg
aam
jnp
test
push
inc
fdivr
das
push
ljmp
dec
dec
sbbl
test
arpl
daa
push
jns
mov
xor
sbb
sbb
push
int
mov
add
or
dec
mov
or
nop
cld
pop
jge
arpl
test
mov
sbbl
lea
jg
popf
push
or
add
or
mov
nop
out
in
insb
mov
xor
pop
mov
cmc
mov
hlt
and
mov
outsb
test
pop
jnp
ds
xlat
add
inc
mov
mov
mov
inc
xor
adc
mov
push
out
insl
mov
mov
pop
pop
push
xor
call
lods
push
addl
push
fwait
sbb
hlt
decb
leave
rorb
pop
mov
nop
out
test
xlat
mov
or
mov
shl
dec
call
jb
jne
or
push
xor
mov
outsl
cld
fdivs
mov
loop
aaa
loop
inc
subl
mov
sti
jbe
pop
inc
jbe,pt
pop
mov
xor
shlb
mov
mov
fcoml
scas
frstor
mov
loopne
xchg
aaa
inc
pop
out
jns
shll
push
dec
lret
sbb
dec
dec
mov
pop
in
jb
or
cmp
scas
scas
sbb
mov
push
or
mov
bound
ret
push
and
sbb
jmp
xor
rorl
fdivs
add
mov
arpl
movaps
je
push
add
call
cmp
pop
pop
cwtl
lea
jg
mov
sahf
das
sbb
sbb
add
cmpsl
in
jecxz
push
shl
adc
sub
icebp
jg
mov
mov
mov
scas
ja
lret
aaa
in
inc
je
mov
pop
outsl
into
or
pop
bound
scas
hlt
icebp
push
movsl
xorl
push
sub
gs
or
dec
and
sbb
lock
mov
jae
or
cmp
push
or
push
aam
sbb
xor
fnstsw
into
cli
jg
test
pop
int
fldcw
fs
pop
cmp
dec
mov
mov
dec
lcall
insb
mov
mov
or
fwait
int
rol
bound
mov
inc
rcr
push
cmp
popf
dec
xchg
jb
mov
test
loope
sbbl
cmp
jno
frstor
xchg
push
push
push
add
mov
sbb
out
jg
cld
jge
mov
add
mov
cmp
repz
sbb
scas
shrb
push
dec
ds
jge
push
mov
repz
test
xchg
ss
mov
inc
mov
pushf
gs
je
or
aam
and
dec
mov
scas
or
adc
add
nop
push
lret
push
or
mov
sub
xchg
push
outsb
sbb
mov
push
in
or
inc
cli
in
pusha
add
inc
pop
push
add
add
pop
test
and
sub
sbb
bnd
push
inc
or
mov
mov
roll
dec
xchg
movsl
mov
and
xor
dec
ss
jne
jle
add
push
push
inc
dec
xor
aas
mov
add
repz
mov
insb
dec
sbb
mov
dec
mov
insl
jae
loope
imul
repz
xchg
jle
mov
imul
dec
outsl
jae
ljmp
or
pop
push
sub
push
jo
lret
mov
push
jae
inc
hlt
add
or
aaa
or
mov
in
xor
cmp
push
push
cmp
push
jbe
test
inc
addr16
data16
insb
add
push
mov
pop
jo
push
xor
and
push
mov
push
push
pop
inc
pop
clc
imul
fnsave
xor
mov
sbbb
mov
pop
test
inc
cli
cltd
inc
adc
mov
insl
jns
inc
ficompl
push
jmp
fimuls
mov
repz
inc
rolb
mov
ljmp
sbb
insl
inc
push
add
decl
jne
leave
ret
sarl
idivl
rolb
movsb
dec
inc
pop
push
sub
xchg
in
pop
lds
xchg
xchg
adc
cld
push
dec
xchg
pop
xchg
call
sbb
addr16
stos
inc
je
pushf
test
xchg
cmp
sub
jp
test
inc
xor
sbb
add
out
jle
pop
mov
sub
push
ret
push
aam
pop
push
push
mov
aas
add
in
je
jb
dec
inc
push
pop
es
push
push
outsb
or
cmp
pop
push
adc
sub
mov
adc
and
out
cli
mov
arpl
inc
fdivl
cmpsb
xchg
test
sub
test
push
js
inc
mov
adc
dec
popa
add
adc
jns
push
in
clc
add
inc
push
aaa
outsb
or
pop
or
cwtl
xchg
inc
add
or
lods
testb
aad
cmp
pop
add
mov
add
jmp
pop
out
out
dec
pusha
cmp
add
inc
mov
pop
add
mov
dec
add
aas
mov
sub
add
inc
mov
repz
sbb
sub
dec
xchg
xor
fistpl
pop
add
adc
xchg
js
scas
xor
shll
push
inc
mov
test
inc
push
and
fs
push
add
cmp
pusha
sub
popa
aad
push
jb
popf
sbb
in
ficomps
insb
outsl
dec
setno
push
dec
insb
jno
xlat
arpl
push
mov
inc
pop
add
dec
mov
inc
dec
push
mov
cli
push
and
xchg
jne
ja
sbb
aaa
int3
xchg
xchg
and
sarl
pusha
sbb
xor
add
jecxz
negb
sub
jle
push
dec
imul
mov
inc
imul
scas
aaa
pop
dec
dec
loope
jb
adc
push
add
push
inc
int
jb
add
scas
inc
add
mov
sub
cmovl
xor
push
push
or
push
sti
add
gs
pop
and
pop
data16
pusha
fnstsw
sbb
add
or
xor
or
sbb
inc
and
and
pop
add
mov
dec
jge
ret
inc
insb
or
add
mov
sbb
in
inc
cmpsb
enter
dec
fnstenv
sub
sub
stos
sbb
sub
iret
pop
notb
inc
inc
bound
pushf
shlb
mov
push
mov
in
lock
dec
dec
pop
loopne
xchg
into
out
inc
dec
arpl
mov
lods
push
aad
add
fdivrp
add
inc
mov
push
and
mov
jp
xor
insb
imul
syscall
sbb
mov
add
divl
lock
sbb
adc
sub
ja
jp
pop
push
ficoml
push
dec
jne
inc
pusha
mov
lods
pop
fidivrs
push
pop
mov
xor
xor
mov
jp
je
sub
sbb
pop
mov
in
cmp
pop
cmp
xchg
push
xchg
mov
andl
pop
call
push
mov
jg
in
pcmpgtd
sub
daa
cli
je
imul
lahf
out
pop
or
push
jbe
pushf
or
adc
clc
mov
clc
dec
pop
sbb
add
ret
cmp
jbe
imul
dec
ret
fcomp
push
inc
ret
shll
rcrl
hlt
outsl
inc
xor
xor
dec
rorl
imul
adc
push
mov
jae
addr16
push
or
pusha
dec
lds
inc
lds
mov
loope
jbe
dec
hlt
add
hlt
out
xor
bound
mov
adc
fsubrs
subb
inc
mov
fstpt
sbb
dec
shl
aaa
pop
mov
push
push
lock
add
or
add
inc
cmp
inc
loopne
push
sub
adc
out
mov
fists
push
rorl
xor
mov
js
in
int3
mov
push
ret
xchg
mov
jne
push
or
lret
sbbl
dec
dec
add
push
pop
push
push
fdivr
lock
xchg
sub
sub
mov
fists
das
push
jo
push
pop
lret
add
jno
js
mov
popa
jb
xchg
jmp
or
xor
cld
pop
and
adc
aaa
inc
mov
imul
rcrb
inc
dec
push
xor
and
inc
sarb
popf
mov
mov
dec
add
push
dec
cmpsb
or
inc
xchg
dec
jne
xchg
xchg
out
dec
mov
or
add
inc
ljmp
cld
mov
loopne
inc
jo
test
add
int
adc
xor
push
mov
bound
loopne
insl
push
push
sti
inc
adc
xchg
jbe
andb
lods
push
cmp
dec
jmp
out
or
mov
push
xchg
lcall
sub
js
mov
sbb
push
je
inc
mov
iret
dec
dec
xor
jae
adc
cli
pop
mov
ret
adc
mov
sub
je
gs
dec
out
mov
repnz
outsb
data16
rclb
adcb
sarb
and
and
xchg
and
mov
icebp
test
ret
push
gs
lea
or
imul
adc
push
pop
push
flds
pop
jae
adc
push
test
mov
xchg
ret
dec
imul
adc
xchg
dec
in
jo
fcmove
push
daa
lds
pusha
jns
jb
fcomi
movsl
push
lahf
subb
inc
pop
sti
inc
pusha
jno
rorl
add
popa
xor
scas
fdivrs
push
xor
push
jecxz
cld
jbe
push
test
popf
xorl
mov
sub
cltd
fistps
gs
bound
pushl
jne
inc
shll
jb
jne
dec
and
adc
ret
xchg
jle
sbb
insb
rcll
je
inc
bound
adc
rcll
xor
push
cmp
fadds
or
xchg
loop
lahf
inc
inc
cli
rorb
inc
imul
js
add
in
dec
pop
lods
jb
push
push
insl
jbe
lret
inc
inc
and
jp
or
or
mov
cltd
xor
jns
fwait
and
fmuls
xor
xchg
pop
repnz
lock
push
scas
sbb
cmpsb
push
dec
push
aam
ss
jb
filds
clc
sub
and
and
cmp
xor
inc
insl
rorl
fs
jae
imul
or
pusha
sbb
ljmp
add
pop
adc
dec
add
mov
add
jge
xor
mov
inc
xlat
xchg
in
inc
int
aad
mov
inc
gs
pop
inc
add
js
decl
rolb
jle
dec
dec
xorl
addr16
push
les
mov
in
call
movsb
int3
clc
fsub
xchg
mov
xchg
jecxz
xor
jae
pop
mov
clc
mov
jns
push
je
adc
or
dec
sub
in
imul
pop
and
push
cmp
lcall
push
enter
lock
pop
push
sbb
sti
push
aam
or
sub
mov
aas
add
jle
push
aas
dec
js
dec
mov
imull
aas
push
mov
mov
adc
push
or
xchg
mov
jbe
rcll
testl
sbb
notl
add
repnz
inc
gs
ss
outsl
add
lock
jecxz
jbe
push
pushf
push
add
mov
add
sbb
or
inc
cmp
popa
jp
movsl
fs
inc
aam
aam
mov
push
aas
in
dec
pop
dec
cmp
out
fdivrs
sub
push
push
cmp
push
outsb
mov
dec
mov
mov
jge
rcr
ljmp
je
pop
sub
inc
mov
push
jno
filds
repz
push
and
negl
sti
stos
and
sti
jmp
or
rclb
shlb
decl
add
and
add
cs
rorl
sbb
out
mov
add
inc
ja
mov
mov
add
push
push
and
mov
addb
add
and
in
popf
sub
push
das
adc
das
insl
lods
jne
add
and
sub
dec
and
lret
mov
or
adc
and
js
or
adc
fcmovbe
add
and
jae
add
pop
mov
add
pop
add
sub
nop
pop
imul
mov
add
jge
subb
or
mov
ficoml
cmp
outsb
dec
cltd
add
mov
arpl
mov
lcall
pop
jae
mov
push
imul
sub
xor
sbb
jmp
jae
rcrb
arpl
xchg
xorb
or
nop
pop
mov
sbbb
out
jge
add
pop
add
dec
inc
push
add
xchg
add
pushf
sarl
add
jnp
sub
mov
lcall
out
pop
jmp
dec
add
inc
pop
pop
js
push
pop
or
scas
mov
dec
or
add
stos
sbb
jl
sub
into
adc
add
sub
xchg
inc
mov
push
rorl
stos
add
pop
sub
xchg
cmp
sbb
inc
add
or
sub
ret
lcall
cmp
mov
jecxz
sbb
sub
push
lods
sbb
mov
sbb
stos
lcall
rolb
mov
adc
andl
cmc
mov
inc
mov
sbb
ds
and
inc
xor
sub
push
int
gs
mov
inc
and
outsb
or
mov
push
pop
dec
data16
addr16
pop
add
fs
shll
cmp
loope
imul
subl
nop
or
mov
jo
leave
jno
jb
sbb
xor
push
mov
cmp
jmp
dec
lods
xor
test
dec
out
sarb
inc
xor
xor
jl
aaa
ja
imul
and
mov
or
icebp
arpl
sbb
pop
pop
fisubl
stos
mov
push
push
push
mov
push
dec
add
out
jmp
and
add
and
in
xchg
cs
lods
ret
jnp
test
sbbl
adc
mov
test
cmpsb
loope
cmp
sbb
gs
gs
xor
cs
insb
add
aam
loope
cmpsb
cltd
dec
loope
sarl
std
cmp
sbb
fsubrs
pusha
push
scas
lock
pop
mov
cltd
es
cmp
add
add
fadd
loope
jo
or
sbb
or
stos
pop
repz
out
scas
adc
fnsave
andl
outsb
rcl
push
cmp
xchg
das
inc
add
xlat
lret
nop
dec
add
xchg
fmuls
loopne
sub
cmp
and
stos
and
pop
inc
inc
dec
xchg
xchg
add
push
js
adcl
ljmp
gs
jb
imul
outsb
addr16
adc
jbe
std
and
popa
sbb
outsl
outsb
jae
idiv
fwait
mov
jo
je
imul
jne
jb
inc
js
jg
jae
push
outsb
insb
outsl
arpl
aaa
xor
jae
push
imul
mov
ja
arpl
push
push
out
gs
pcmpgtw
sub
in
outsb
or
outsb
jbe
je
outsb
je
popa
fucomi
pop
mov
cmpsl
push
je
pop
jno
dec
xor
imul
jae
jbe
or
jbe
insl
scas
dec
mov
fs
insl
jo
je
cmp
ret
iret
jne
sbb
and
bound
push
jnp
out
mov
dec
popa
jo
in
jae
in
imul
xlat
inc
popa
sub
dec
jae
imul
mov
test
adc
sbb
push
adc
fiaddl
adc
imul
movsb
jnp
mov
xor
popa
outsb
dec
int
mov
dec
andb
mov
xor
dec
gs
inc
into
pop
mov
popa
inc
push
push
lea
xchg
jg
mov
je
dec
popa
pop
inc
adc
pusha
inc
gs
jne
fisttpl
mov
je
pop
dec
inc
adc
cmp
jae
push
add
inc
mov
cmp
addl
jbe
dec
inc
dec
dec
pop
loope
divb
outsw
jno
pop
insb
gs
test
dec
fs
cmpl
imul
dec
pushf
adc
jb
add
fcomps
push
arpl
jae
fs
jns
leave
add
push
adc
fcmovnu
mov
push
jb
adc
inc
inc
push
pop
inc
sub
icebp
push
push
jne
lahf
jno
call
mov
insb
push
adc
push
scas
jne
enter
pushf
outsl
adc
cwtl
imul
pop
sbb
jns
adc
lods
jnp
pop
jne
inc
sub
int
insb
xor
sbb
or
jo
popa
test
scas
jmp
lahf
repnz
imul
pop
inc
adc
and
push
outsb
in
or
outsl
jmp
sbb
insl
xor
or
xchg
ficomps
or
pop
insb
arpl
mulb
add
add
popf
or
insb
adc
mov
gs
inc
in
wrmsr
xor
adc
xor
sbb
jb
lret
arpl
pop
jle
fisubrl
push
popa
lret
dec
or
push
xor
push
sub
add
inc
imul
fsubp
jae
outsb
inc
hlt
das
and
pavgb
push
cmp
insl
push
push
and
insb
push
imul
aam
xchg
movsb
sub
push
push
outsl
imul
push
ss
jecxz
inc
iret
popa
jns
push
sbb
imul
jne
out
fsubs
jne
imul
fwait
insl
inc
and
xor
insb
mov
cmp
sbb
arpl
into
les
or
lds
mov
stos
and
je
push
inc
int3
add
sub
pop
sbb
fisubrs
pushf
mov
inc
out
loope
js
add
push
pop
pop
lods
mov
xor
inc
out
sbb
subl
jecxz
imul
push
dec
xchg
add
xlat
or
pop
push
data16
xlat
js
inc
jne
xor
movsl
ja
push
orl
and
mov
arpl
insb
push
xor
outsb
push
pop
cld
mov
mov
aas
adc
insl
loope
jbe
inc
mov
jo
sbb
mov
insb
mov
dec
pop
mov
mov
adc
mov
add
sti
xchg
add
inc
enter
in
je
addr16
imul
xorb
jecxz
mov
jae
mov
sbb
jae
sbb
pushf
mov
mov
arpl
sub
xor
push
sbb
or
inc
stos
sbb
in
adc
jp
pop
fisttpl
cs
sbb
imul
jo
push
popl
pushw
mov
jns
into
imul
inc
push
push
and
jno
filds
fsubr
adc
data16
xor
xor
push
out
push
push
inc
dec
insl
inc
stos
test
adc
jnp
or
jp
sub
shrb
adc
sbb
inc
push
dec
push
fadds
sub
inc
dec
jmp
xor
movsb
mov
pop
adcb
jne
mov
push
inc
lcall
dec
inc
inc
mov
xor
push
push
and
mov
sub
cmp
xchg
testb
or
imul
jnp
push
and
inc
addb
mov
or
xlat
rcrl
fstpl
push
lock
ret
inc
in
loop
inc
push
mov
fs
cwtl
adc
add
aam
popa
push
or
push
pop
mov
int3
sbb
add
push
stos
sub
rol
adc
inc
adc
fnsave
and
cmove
jmp
pop
inc
setns
cmpsl
pop
push
inc
jae
jb
faddp
pop
in
lea
sub
lods
dec
pop
mov
ret
sub
iret
push
cmp
pop
inc
adc
ja
cmp
pop
and
mov
add
cmp
inc
scas
jne
ljmp
push
mov
mov
adc
dec
inc
inc
pusha
dec
xor
sbb
sbb
test
jae
or
and
cmpsb
inc
xchg
mulb
push
jae
push
imull
fcoms
inc
and
pop
push
fs
xchg
adcb
sub
mov
fs
ss
dec
pop
cwtl
pop
jmp
lock
pop
jbe
mov
pop
leave
cmp
inc
pop
rcrb
sbb
in
popa
stos
jae
mov
cmpsl
pop
out
pop
lods
or
sub
dec
aas
jb
test
push
pop
xchg
xor
fmuls
mov
mov
and
sbb
sbb
xchg
ds
dec
out
daa
fisubrs
adc
inc
dec
push
adcb
rorb
push
dec
push
adc
mov
fmull
inc
bound
addr16
sub
adcb
mov
adc
fdivs
mov
fwait
insb
dec
lods
mov
mov
mov
inc
xlat
bound
es
imul
add
jns
subl
sub
cmp
in
or
mov
inc
gs
ret
pop
ljmp
and
fs
jo
in
orb
sbb
aad
jmp
mov
push
push
shrb
mov
fidivs
addl
mov
lea
outsb
sbb
lods
sbb
loop
and
popa
push
push
dec
sub
cmp
fcoml
gs
ret
adc
test
mov
in
adc
pushf
and
pop
fsts
xchg
add
lfs
mov
and
sub
int
xchg
or
testb
push
scas
xchg
imul
dec
cs
sbb
ret
addr16
jp
or
sbb
out
aaa
jae
leave
adc
adc
bound
testb
adc
sub
or
xor
cli
push
mov
pop
sbb
in
sub
mov
nop
loopne
inc
loopne
stc
inc
in
jae
mov
add
inc
clc
push
jmp
inc
and
pop
xchg
dec
or
fcompl
or
mov
jb
xor
fiadds
stc
sub
movsb
fcoml
gs
pop
xor
mov
inc
lods
leave
enter
das
int3
fidivl
dec
je
pop
mov
movsb
adc
rcll
pop
enter
sbb
add
stos
jns
pop
pop
lret
pop
push
push
sarb
sbb
jb
jbe
insb
dec
jbe
gs
into
jns
add
call
sahf
mov
filds
loopne
xchg
or
add
inc
cmovbe
arpl
mov
inc
or
cmp
add
add
jnp
adc
pop
add
xor
pop
dec
insl
das
jnp
add
and
add
sti
sbb
pop
pop
dec
cs
pop
fdivs
jmp
and
mov
inc
popa
mov
fsubrs
xor
sub
daa
cmc
and
push
add
pushf
rorb
insb
in
add
mov
sub
enter
add
add
add
add
incl
add
add
pusha
mov
lea
push
or
jmp
nop
nop
nop
nop
nop
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
xor
sub
jb
shl
mov
inc
xor
je
mov
add
jne
mov
sub
adc
adc
add
jne
mov
sub
adc
adc
jne
inc
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
nop
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
